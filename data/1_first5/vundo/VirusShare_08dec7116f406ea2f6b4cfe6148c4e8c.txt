inc
movsl
mov
inc
daa
sahf
int
and
popf
pop
adc
push
push
shrb
lahf
jns
loopne
xchg
pop
adc
adc
int3
shll
popf
sub
sub
push
adc
ja
hlt
add
adc
int
pop
popf
sbb
push
adc
pop
push
push
adc
je
sbb
rclb
push
push
push
adc
sub
incl
fiadds
adc
fildll
ljmp
adcb
inc
adc
adc
or
sub
test
push
push
adc
sti
sarl
leave
data16
sub
cmp
sub
jae
fisubrl
sbb
jge
sub
je
sti
jmp
or
cli
add
sub
icebp
fmuls
mov
call
adc
pop
leave
push
xchg
in
xchg
repnz
out
add
inc
adc
repz
push
xchg
lods
and
insl
std
data16
push
adc
lea
lods
dec
int
adc
adc
adc
mov
xorl
jo
adc
sbb
push
adc
sub
jmp
mov
clc
lea
adc
stos
pusha
sbb
push
adc
cmc
movsb
and
iret
and
pop
adc
jle
jl
adc
adc
xchg
mov
jns
sbb
clc
lea
adc
cld
sbb
push
adc
xchg
cmpsl
fiadds
adc
nop
mov
mov
les
mov
or
mov
adc
adc
sbb
inc
cmp
push
adc
add
shl
ds
or
cld
aas
and
pop
popf
movsl
xchg
hlt
dec
dec
lds
jp
mov
push
fs
es
mov
sub
and
aam
adc
and
cmp
fnstcw
jb
cmp
fiadds
das
outsl
jecxz
pop
les
daa
repnz
xor
adc
adc
dec
xchg
rorb
xchg
push
scas
or
adc
movsb
loopne
insl
insb
outsl
xor
sbb
push
sub
cmp
and
mov
cli
fcmovu
pop
aas
sub
mov
sbb
jle
adc
mov
leave
mov
jne
and
subl
add
mov
out
sub
fistpll
push
pop
xchg
in
push
loopne
dec
xchg
jo
pop
adc
arpl
lahf
hlt
or
insb
adc
adc
sarl
rcl
test
push
lock
pop
xchg
inc
or
sub
push
pusha
sub
mov
pop
cmpsb
xor
adc
adc
sub
and
repnz
rol
mov
cmp
add
pop
adc
mov
aas
pushf
xchg
scas
fists
jge
pop
xchg
scas
faddp
in
jo
push
adc
outsl
shll
push
xchg
pop
das
pop
inc
cmp
adc
adc
scas
jno
add
mov
adc
cmp
push
adc
mov
adc
or
push
add
push
jnp,pn
leave
mov
xor
pop
jg
ss
add
clc
mov
inc
push
ja
pop
call
je
push
adc
rorl
jg
cwtl
in
pop
sub
shlb
ja
cmp
adc
enter
int
sbb
shrl
test
lds
cmc
adc
adc
adc
adc
xchg
xorb
dec
jae
test
mov
loopne
in
call
mov
jg
ds
adc
mov
les
lods
inc
addb
push
ljmp
adc
imul
add
mov
mov
mov
lret
js
push
adc
pop
test
jns
cmp
adc
adc
call
in
roll
jb
insl
jl
lea
addb
push
out
push
fwait
cmp
nop
mov
dec
cli
adc
pop
add
xchg
or
jecxz
shlb
cmp
popa
cmp
push
jmp
popf
call
adcb
adc
mov
int3
lahf
xor
orl
ja
or
ret
addb
rcl
push
push
adc
mov
add
stos
mov
in
sbbl
int
cld
lahf
ljmp
jg
lea
sbb
push
in
add
out
cltd
icebp
adc
out
or
cmp
push
mov
mov
jne
add
mov
sbb
lods
fnstsw
push
sbb
pop
or
push
pop
mov
and
js
push
adc
mov
out
or
lahf
jno
aam
adc
or
stos
rcll
lock
sub
inc
mov
adc
adc
into
or
bound
xor
icebp
test
lret
adc
mov
inc
or
movsl
or
cmpsl
or
adc
rcl
adc
push
adc
das
pop
ret
mov
bound
add
and
fdivrl
dec
sbb
sbb
int
lea
fsubr
into
fbstp
inc
fcoml
divps
inc
mov
fnstenv
sub
hlt
xchg
adc
es
lahf
cwtl
cli
pusha
arpl
ja
mov
sbb
mov
add
mov
dec
mov
jno
sub
mov
adc
adc
lret
mov
dec
mov
sti
add
insl
mov
lcall
shl
lds
cmp
mov
jne
nop
adc
adc
mov
push
out
pop
add
icebp
cltd
aad
ljmp
test
les
push
adc
xchg
imul
rcrb
aad
ret
cmc
and
dec
in
push
xlat
std
pop
in
or
mov
mov
aas
lock
mov
adc
xchg
adc
adc
xchg
pop
mov
std
cs
add
ja
stos
insb
imul
mov
push
adc
mov
jo
pop
adc
outsb
push
stc
adc
pop
and
sarb
adc
adc
lret
jl
xlat
inc
outsb
cmp
add
and
repz
mov
adc
adc
lods
pop
test
fistps
mov
pushf
dec
test
mov
nop
out
sub
inc
inc
rclb
movsl
pushf
adc
adc
fcmovbe
mov
dec
sbb
movsl
sub
addb
scas
fisubrs
mov
test
push
adc
jne
shl
mov
adc
adc
pop
mov
xchg
or
cs
xor
or
popf
cmp
out
or
push
std
push
pop
xchg
out
push
xor
add
jae
cmpsb
mov
pop
adc
or
das
sar
cld
mov
adc
cmp
push
adc
xor
inc
or
test
jo
and
mov
sub
cmc
mov
push
adc
and
cmp
or
cmp
mov
cli
jle
js
in
nop
aas
sbb
jge
add
push
adc
movsl
and
js
adc
xchg
shlb
mov
ljmp
jb
into
adc
mov
call
hlt
add
adc
adc
dec
test
jg
pop
push
adc
cmc
nop
pop
push
adc
test
push
adc
push
pop
xchg
out
and
pop
adc
addr16
jmp
sub
jmp
jo
out
xor
ret
xlat
int
out
cltd
scas
lds
pop
or
ss
mov
mov
jecxz
xchg
pop
mov
bound
jmp
push
and
icebp
imul
xchg
mov
in
bound
cmp
and
push
sub
xor
adc
loopne
pop
std
jne
pop
loope
lea
pop
ss
mov
or
xchg
scas
pop
mov
mov
rclb
sub
orl
sahf
enter
xor
cmp
fucomip
inc
or
js
add
fildl
stc
mov
rcrb
bndldx
repz
dec
lret
pop
push
ds
pop
cmpsb
sub
or
outsb
add
inc
test
and
sub
shl
fs
dec
repnz
push
stos
mov
out
pop
push
enter
sub
mov
rcl
push
and
push
add
xor
mov
call
dec
jp
add
out
jl
push
xor
sbb
mov
inc
or
cwtl
in
outsl
in
adcl
push
lahf
dec
outsb
dec
xor
pop
lret
loop
das
stc
stc
pop
jae
pop
not
push
adc
adc
rcrb
mov
jne
sub
popf
mov
fnstenv
popa
pop
jno
push
cmp
mov
jg
fmull
jne
icebp
xor
inc
shll
imul
es
jbe
js
pop
pusha
or
adc
adc
mov
cmc
jns
sub
fucomi
cwtl
stos
push
dec
or
jno
into
dec
fisubrs
jne
adc
inc
cmp
jno
adc
add
adc
mov
mov
addr16
sub
jne
sbb
sbb
pop
adc
cmp
jns
inc
xor
mov
jecxz
xor
mov
and
cwtl
into
gs
jp
das
push
xor
and
divb
icebp
sub
mov
adc
gs
push
add
pop
rolb
out
jmp
pushf
leave
adc
out
or
repz
xchg
cmpsl
cmc
push
jecxz
cmp
sbb
xor
cmpb
test
sbb
push
adc
add
enter
scas
das
pop
pop
inc
aad
je
xor
enter
aad
jb
cld
sbb
mov
and
jo
push
dec
sub
push
dec
or
jecxz
push
jae
leave
scas
sti
fsubl
jno
jp
push
loopne
addl
aas
loope
xor
inc
xor
mov
scas
loopne
push
adc
fdivl
adc
adc
or
fidivrl
fadds
test
arpl
gs
jg
mov
cltd
push
cmc
pop
cmp
jo
xchg
push
push
jl
lock
mov
xor
jne
push
dec
dec
rcll
je
mov
rorb
pushf
and
jns
pop
xlat
mov
pop
pop
adc
adc
cmp
in
push
mov
std
cli
hlt
call
out
lcall
or
cwtl
jo
and
aam
cli
arpl
or
adcl
das
xchg
sub
or
in
pop
enter
cmpl
fwait
out
repnz
push
shlb
inc
add
in
mov
ss
inc
movsl
lods
xor
jo
shlb
sub
add
xchg
out
pop
in
jmp
or
lcall
int
add
cmp
rcrl
adc
push
arpl
xchg
in
mov
call
mov
add
mov
xor
dec
dec
in
push
mov
les
sbbb
js
xchg
rcrl
repz
jecxz
pop
imul
cmp
cltd
add
fistpl
cmpsb
and
pop
jns
pop
pop
aaa
test
xchg
std
cld
sti
cmc
push
sub
scas
mov
sahf
fstp
fnsave
inc
shll
sahf
and
pop
mov
push
adc
icebp
add
adc
adc
out
mov
jae
push
xchg
fsubrl
mov
pop
jmp
lahf
add
push
adc
pop
arpl
mov
or
ret
insl
xchg
sti
mov
mov
xor
bound
mov
scas
push
push
sbb
sub
pop
xchg
and
sarl
or
lock
adc
cmc
sahf
sub
cmpsl
adc
push
pop
test
scas
jnp
sbb
arpl
enter
lret
add
pop
pop
fistpll
test
rcr
lret
gs
repnz
xchg
data16
fwait
jmp
cmp
mov
jecxz
xor
lret
or
test
leave
out
testl
pop
or
push
sbb
popf
cmpl
mov
add
and
shll
cld
ja
sub
cmp
jnp
les
jbe
push
mov
inc
xor
pop
fimuls
ja
add
gs
dec
cld
loopne
lret
in
out
dec
push
arpl
subl
cmp
inc
jno
adc
adc
sbb
pop
sbb
rorl
adc
push
repnz
adc
mov
in
xchg
adc
push
pop
xchg
lods
movsl
insb
mov
fwait
jae
inc
dec
ss
mov
testb
dec
xor
add
mov
dec
mov
loopne
xchg
rolb
sub
in
jg
into
xchg
test
jge
outsl
push
dec
sbb
and
xor
fcmovnbe
xchg
stos
shld
sarl
pandn
and
and
lret
push
das
mov
mov
dec
pop
adc
cmp
arpl
int
lods
inc
mov
sub
push
lock
lds
in
mov
add
sub
clc
sub
in
ds
sti
cmpsl
shl
rcrb
push
sbb
adc
adc
ret
lret
out
add
lods
xor
pop
pop
pop
std
dec
pop
jne
push
push
les
jle
adc
jno
dec
hlt
test
dec
cmp
test
testb
lods
push
cld
push
xchg
imulb
hlt
dec
xchg
and
pop
imul
fistpll
rcl
or
dec
jmp
sub
push
lcall
jne
pop
das
and
cmp
jno
pushf
icebp
push
cli
hlt
push
scas
bound
sar
push
aad
inc
add
cltd
push
mov
mov
cmp
jmp
mov
xchg
cmovo
inc
shrl
mov
adc
call
sub
mov
sahf
pop
cmpsb
push
xchg
push
pop
ds
xor
push
imul
out
cmc
pop
mov
adc
mov
ja
adcb
xor
cli
hlt
sub
sub
xor
adc
aam
shr
std
cli
push
pushf
xlat
xlat
leave
test
sub
cs
bts
mov
lcall
dec
ret
push
mov
xchg
ret
dec
ljmp
dec
out
mov
bound
popa
lods
pop
leave
std
lock
jbe
xor
xor
adc
dec
push
cltd
cmp
cs
adc
pop
cld
cmp
mov
bound
int
sbb
adc
xchg
jne
adcl
xor
fimuls
sbb
in
xchg
aad
pop
inc
jle
int3
jnp
xor
mov
fwait
mov
adc
sub
nop
rclb
pop
loopne
mov
push
cwtl
cmp
mov
pop
dec
ret
adc
mov
mov
cmc
loope
outsl
les
adc
pop
adc
outsb
and
or
pop
outsb
mov
mov
aaa
out
adc
push
cmpsb
faddl
sbb
cmp
pop
mov
lock
fwait
ja
xor
cmp
cmp
xchg
test
icebp
jno
popa
into
xorb
pslld
icebp
mov
js
int3
xchg
sub
cli
scas
roll
sub
adc
dec
or
xchg
fdivp
mov
popa
bound
dec
adc
sbb
in
adc
jb
and
jbe
ja
jns
and
adc
sbb
mov
jmp
cs
and
cmpsl
mov
mov
inc
jmp
fcomps
incb
push
add
stos
fwait
jmp
andl
stos
jae
cmc
xor
ret
mov
sbb
out
jle
inc
out
add
imul
dec
mov
adc
xchg
cmp
add
fs
loop
mov
insb
lods
subl
and
cmp
stos
pop
fmul
in
and
push
sub
or
inc
imul
pop
pop
dec
adc
push
dec
mov
xchg
pop
lcall
out
gs
push
imul
cmp
cmp
mov
ret
gs
inc
inc
mov
andl
mov
sbb
adc
in
imul
imul
insb
xchg
sbb
mov
mov
ret
enter
lods
xchg
sbb
mov
aas
pop
mov
cmp
xchg
ud2
pop
test
or
mov
jno
push
pop
cwtl
dec
jp
adc
pushf
and
int3
mov
push
cmc
setb
in
inc
jo
xchg
pop
aad
xchg
scas
shll
push
test
loope
jecxz
lret
dec
shrl
incb
pusha
dec
or
pop
or
in
xchg
xchg
data16
arpl
mov
push
mov
jae
repz
push
sti
xchg
scas
loopne
push
cmp
sub
mov
mov
lods
sub
adc
out
sub
sbb
push
hlt
xchg
pop
jo
and
out
jnp
das
scas
mov
mov
dec
pusha
sub
mov
mov
mov
sbb
adc
dec
pop
jle
xchg
adc
or
ret
aam
or
inc
ja
jge
aaa
push
and
lea
jb
call
push
push
mov
movsl
mov
xchg
je
or
pop
das
fsubrp
sub
sarl
popa
mov
out
shlb
insb
fsubrs
fprem1
cli
hlt
lahf
mov
dec
xchg
xchg
rorl
inc
add
sbb
sbb
adcl
mov
std
mov
sub
stc
jne
hlt
inc
shr
add
pop
das
pop
mov
ds
call
nopl
inc
cld
call
adc
bound
mov
std
cli
orb
inc
cmp
xor
cmpsl
fnstenv
sbb
loope
dec
jne
push
mov
aad
call
pop
pop
rorb
inc
and
jnp
int
pop
das
aad
push
mov
inc
insl
xor
jge
jle
movsl
fldenv
sbb
jbe
ljmp
idiv
cmp
adcb
out
cld
call
adc
bound
arpl
mov
cmp
ja
adcb
loop
inc
outsl
or
shll
adc
loop
das
pop
lret
js
sti
mov
sub
jge
jecxz
fbld
imul
add
mov
hlt
sti
cmc
mov
jl
je
cmc
popa
sub
es
sti
ss
repnz
decl
inc
xchg
out
movl
int3
cwtl
aas
dec
mov
stos
shll
add
in
movsb
xor
push
adc
js
push
xchg
pusha
pop
cmp
xor
imul
mov
or
jecxz
enter
adc
adc
idiv
mov
je
lcall
mov
jmp
xchg
mov
mov
adc
loop
mov
les
in
jge
jb
and
jmp
dec
adc
or
sub
adc
fbstp
cmp
lahf
ror
mov
movsl
movsb
sub
fcmovb
movsl
repz
daa
aas
daa
das
mov
push
xor
xchg
jmp
lret
shll
outsl
les
mov
dec
cmpl
jle
cltd
mov
xchg
xchg
ja
adc
adc
xchg
xor
imul
mov
lods
cmp
push
and
sbb
xor
dec
ja
fcoml
add
cmp
daa
cmpsb
cmpsb
sub
imul
jno
add
cli
movsl
jbe
adc
adc
fcomip
sar
repz
cmc
jge
push
lds
mov
pop
jae
sbb
xchg
dec
rclb
pop
add
sarb
xchg
lods
push
push
mov
fdiv
mov
push
adc
push
push
or
push
xchg
add
imul
out
xchg
jne
dec
adcb
sub
out
movsl
mov
fwait
nop
xchg
out
lcall
dec
push
pop
mov
jne
jmp
mov
mov
test
sbb
add
xor
aam
cmpsl
xchg
pop
repnz
mov
dec
mov
inc
dec
dec
xor
push
fs
xchg
rorl
jge
cs
sub
ljmp
lcall
cwtl
popa
dec
out
insl
arpl
loopne
jmp
mov
das
mov
jmp
movsb
pop
pop
pop
fwait
or
inc
mov
and
cli
cli
nop
dec
lahf
cltd
ret
lds
dec
pop
pop
xor
jecxz
imul
and
je
push
jno
xchg
out
outsl
pop
lea
mov
mov
push
jno
loopne
jle
lods
pop
xchg
scas
fdivl
jno
and
dec
lea
jge
and
and
std
insl
add
sub
mov
lds
push
add
sub
adc
pop
test
add
pop
pop
shll
xor
pop
xor
mov
jp
adc
jge,pt
orb
push
icebp
int
pop
pop
cmp
mov
xlat
and
pop
pop
or
xor
repz
sbb
inc
inc
mov
xor
mov
clc
mov
rolb
and
js
jp
push
mov
fs
incl
fcmovnu
mov
roll
inc
mov
and
mov
subb
push
push
hlt
bound
mov
mov
pop
ds
jl
pop
adc
cmp
adc
bound
mov
mov
xchg
cli
hlt
bound
outsl
jns
shlb
sub
adcl
pop
push
nop
adc
adc
popa
aas
mov
in
push
mov
pop
inc
pop
daa
pop
mov
cmc
cli
hlt
inc
movl
sbb
hlt
call
sbb
mov
arpl
add
js
lcall
xchg
adc
or
sbb
fldt
add
add
das
mov
dec
xchg
popf
lock
mov
dec
iret
mov
std
std
push
lea
out
test
xor
clc
mulb
mov
sbbl
sub
sbb
repnz
clc
jne
cltd
scas
orl
push
or
push
xchg
mov
dec
adc
mov
nop
mov
or
jmp
fneni(8087
das
test
inc
add
idiv
sbb
sbb
lds
jmp
mov
mov
cmp
nop
mov
xchg
and
adc
jo
lcall
es
stos
data16
and
sbb
cs
mov
ret
lods
movsl
movsb
sub
fcom
lods
repz
daa
aaa
inc
das
mov
repnz
imull
jbe
xor
pop
jb
or
inc
insl
sub
mov
shlb
adc
lods
loop
and
ficoms
xchg
sbb
loopne
push
ret
out
and
dec
sub
cld
push
idivl
loop
pusha
cmp
dec
ja
sub
jo
nop
push
stos
scas
andb
call
inc
and
lcall
dec
jbe
xchg
push
xchg
ljmp
jl
pop
int
mov
mov
jmp
xor
mov
pop
subl
cmp
dec
insb
adc
mov
inc
out
popa
outsl
jno
fistpll
mov
pop
push
jns
ss
mov
stos
jmp
int3
ret
jecxz
shlb
sub
cmp
into
sub
out
nop
adc
adc
insb
in
lods
xchg
test
popa
push
adc
pushf
push
dec
pop
lret
leave
cmc
test
xor
cmp
jnp
mull
push
gs
in
scas
test
add
or
loope
jae,pn
divl
int
inc
mov
mov
mov
jno
add
stos
loop
popa
push
movsb
int3
mov
jmp
ja
sub
imul
adc
pop
cmp
push
fistps
dec
jno
repnz
inc
outsb
mov
dec
mov
pop
pop
pop
pop
adc
inc
jo
xchg
pop
cld
mov
sti
mov
and
roll
insb
addr16
decl
mov
in
xor
dec
pop
or
fsubl
and
mov
inc
jns
inc
stos
inc
fdivl
jle
cmp
jg
callw
xor
adc
bound
inc
or
push
pop
cs
push
mov
jge
adcb
dec
pop
int
pop
lods
or
int3
idiv
std
jns
cs
dec
xchg
xchg
icebp
or
xor
pop
cmp
and
push
sub
jg
push
mov
cld
call
sbb
xor
adcb
push
dec
int
pop
movsl
test
or
out
or
pop
jge,pt
enter
cmp
adc
vaddpd
pop
mov
std
cli
popa
adc
push
in
xchg
inc
adc
adc
aam
roll
and
outsl
dec
mov
mov
scas
push
sub
pop
jo,pt
xor
xor
pop
sub
jmp
mov
pop
sub
mov
pop
mov
xor
pop
das
cwtl
frstor
jbe
orb
insl
jge
cli
hlt
jmp
jno
mov
jmp
pushl
mov
nop
jb
jge,pt
xchg
mov
cmp
gs
push
mov
ljmp
jl
insl
jns
cli
hlt
inc
mov
xor
mov
pop
es
mov
hlt
sti
cmc
jg
inc
xchg
les
mov
loop
mov
pusha
sahf
dec
cmp
or
cmpsb
sub
imul
cmpsb
adc
jnp
ret
addb
cltd
data16
xor
cwtl
pusha
das
mov
addr16
test
and
adc
and
adc
add
mov
add
inc
and
adc
add
clc
and
adc
and
adc
daa
add
cmp
add
push
mov
mov
jge
inc
test
push
sar
mov
call
push
pop
jae
cmp
pop
outsl
aad
adc
jl
movsb
fldcw
mov
aam
sarb
and
and
push
adc
pushf
insl
add
rcrb
add
and
add
adc
stos
xchg
mov
adc
jae
out
mov
adc
adc
push
mov
cmp
pop
pop
adc
loop
mov
adc
adc
cmp
test
cltd
mov
add
mov
in
test
rclb
adc
cmp
ss
push
adc
std
icebp
xchg
shrb
imul
cmpsl
shrb
pop
adc
mov
pushf
cmp
jl
push
xor
movsl
dec
sbb
adc
repnz
dec
adc
pop
xchg
adc
inc
adc
idivl
sbb
pusha
xorl
daa
jecxz
lock
or
rorb
inc
fsubp
sbb
push
xor
sbb
lcall
pushl
jp
cmp
xchg
fiadds
in
movsl
sbb
jecxz
dec
nop
mov
sbb
dec
sub
cwtl
call
aad
bound
inc
int
scas
notl
xlat
ljmp
and
shll
jp
pop
mov
lret
xor
cmpl
ljmp
cmp
imul
fstpl
push
sarb
insl
imul
sub
add
inc
fldt
mov
adc
cmp
rcl
mov
aaa
inc
mov
movsl
xchg
adc
add
push
imul
in
xchg
fistpll
sbb
push
adc
jecxz
push
outsb
sbb
int3
jo
fneni(8087
pop
push
adc
enter
sbb
out
adc
dec
pop
jle
inc
je
push
adc
mov
sbb
adc
pop
cmp
adc
cmpb
sbb
cmp
jo
or
xchg
pop
stc
jae
mov
aam
add
sbb
sub
imul
pop
ss
xchg
test
or
inc
or
adc
aad
pop
hlt
pop
mov
sub
mov
adc
adc
or
pop
jp
xchg
push
adc
leave
les
mov
jmp
fstps
cwtl
jo
xchg
aam
mov
sub
and
pop
push
xchg
ret
sbb
adc
cmpsb
int
add
cmp
adc
cmp
fsubrp
sbb
std
cli
mov
pop
mov
addr16
jge,pt
xor
push
push
adc
xor
sbb
aam
test
push
mov
xchg
ret
push
aas
add
hlt
jg
lods
and
jg
mov
lea
push
mov
shrb
ret
sbb
add
adc
add
into
sbb
mov
ja
xchg
mov
testl
mov
out
sbb
pop
mov
add
mov
pushf
test
jnp
inc
loop
or
stos
jmp
cld
jne
sbb
adc
or
sbb
adc
icebp
push
cmpsl
add
and
popf
fwait
cli
jb
pop
out
xchg
pop
ljmp
mov
or
ss
xor
sbb
mov
push
mov
cli
sbb
loopne
add
jae
sub
call
mov
addr16
push
add
ret
jecxz
stos
xor
fucomip
ret
inc
leave
ret
inc
cmc
shlb
popf
add
jecxz
jp
cli
add
jmp
je
insl
sub
clc
pop
push
adc
inc
xchg
dec
call
and
jb
imul
push
pop
push
adc
sbb
adc
inc
js
rcrb
dec
sub
pop
adc
dec
pop
pop
adc
and
adc
inc
pop
adc
orb
mov
jmp
repnz
aad
adc
lret
xor
out
dec
pop
adc
mov
mov
mov
popf
daa
lret
jb
inc
stos
jbe
mov
adc
adc
sub
test
adc
nop
mov
sub
cmp
pop
adc
cmp
loopne,pn
popa
pop
clc
and
adc
stos
stos
adc
or
adc
adc
adc
movsl
pop
stos
push
jecxz
push
ret
pop
cs
push
push
adc
cmp
movsb
adc
adc
addr16
xchg
adc
adc
shrl
mov
inc
pop
sti
clc
repz
insl
fildl
cmp
cmp
mov
lcall
mov
adc
inc
pop
adc
insl
test
jp
cmp
inc
lret
lret
js
xor
push
scas
test
pop
loopne
fldenv
dec
pop
arpl
jmp
xor
sbb
lahf
scas
adc
mov
dec
sub
repnz
mov
jno
std
pop
loop
je
aad
adc
loop
xor
imull
jo
pop
adc
mov
and
xchg
loopne
cld
movsl
shll
ja
stc
mov
dec
ljmp
adc
pop
push
add
jo
iret
out
add
jno
mov
fmuls
pop
mov
dec
jo
pop
fcom
dec
in
cmpsl
stos
push
in
std
mov
adc
or
jnp
dec
rolb
push
ja
sub
pop
adc
xchg
mov
dec
xchg
mov
pop
pop
adc
dec
mov
xchg
and
xor
pop
adc
mov
orl
and
cmpl
rclb
mov
add
pop
or
or
lds
in
sahf
pop
adc
adc
adc
adc
roll
mov
jl
pop
adc
lds
decb
mov
ds
nop
adc
adc
inc
xor
lret
je
shlb
mov
out
pop
enter
incb
lds
xchg
into
mov
popf
mov
add
sub
dec
or
data16
jge,pt
xchg
shlb
jne
stos
pop
das
fwait
xor
lea
repnz
inc
imul
shll
sbb
bound
pop
vmovlps
adc
call
mov
jge,pt
cs
bound
fistpl
lret
into
or
lret
arpl
xchg
mov
push
adc
mov
push
jne
mov
fildll
lahf
in
call
push
pop
or
inc
mov
adc
lock
mov
mov
popa
loopne
orb
dec
and
in
test
mov
and
or
or
inc
mov
adc
std
adc
fstps
or
add
in
mov
mov
loope
cmp
adc
in
or
aaa
add
sub
jo
and
pop
dec
mov
hlt
xor
iret
dec
cld
push
push
push
cmp
stos
adc
addl
ljmp
jmp
sahf
popf
xchg
lret
ljmp
aas
out
jge
je
loop
cmp
mov
fsubl
sub
mov
loope
jbe
cmp
out
aam
pusha
cmp
adc
and
mov
out
stos
xor
cli
cltd
pop
gs
xchg
rcrb
jns
pop
sub
mov
cld
lds
and
xor
or
adc
adc
scas
insl
imul
inc
mov
sub
cmp
and
iret
cmpsl
mov
fildl
adc
adc
rorl
rcrl
ss
cwtl
shl
mov
sahf
cmp
cltd
stos
dec
mov
cmp
pop
and
xchg
fs
adc
ror
push
mov
int
sub
push
xchg
cmc
xor
inc
inc
xor
sub
sub
in
inc
mov
mov
dec
rcrl
daa
xchg
das
lahf
int3
xchg
cld
clc
addl
xor
ret
xchg
lahf
mov
je
repz
gs
sbb
xchg
xchg
xchg
in
in
aaa
mov
jno
subb
outsl
test
scas
mov
push
sub
sbb
repnz
mov
fsubr
or
xchg
and
xchg
in
aad
adc
mov
cmp
cmpl
pusha
out
xchg
push
and
xchg
std
push
aaa
js
pop
mov
push
inc
ss
fstl
sub
cwtl
sub
les
in
pop
aam
pop
rcrl
decl
in
mov
movsl
nop
xchg
stos
jmp
pop
xchg
mov
je
dec
adcl
add
dec
push
pusha
ret
mov
out
sbb
cmp
fnstcw
in
jo
add
or
cmpsb
scas
inc
out
add
jae
cld
sub
push
lahf
sub
xor
mov
sbb
adc
ror
xor
fldenv
add
xor
xadd
mov
call
mov
mov
pop
call
mov
outsl
and
aad
lahf
insb
vpunpckhdq
inc
loopne
xor
dec
jmp
pop
mov
mov
lret
imul
in
insb
enter
call
push
call
adc
adc
cmc
les
push
adc
inc
fcomp
call
jne
mov
push
hlt
inc
jg
leave
xchg
jae
cmp
adc
adc
imul
jnp
sbb
lea
hlt
call
test
lds
adcb
push
ja
mov
leave
lea
add
add
aad
pop
aaa
mov
movhps
cwtl
push
dec
push
loopne
push
xor
mov
xchg
jg
movsb
push
in
xchg
mov
pop
cmp
xchg
leave
idivl
pushf
outsl
xor
add
add
pop
xchg
out
aad
adc
or
ret
negl
push
test
mov
mov
adc
imul
cs
cmp
xchg
es
mov
imul
sbbb
mov
sub
cwtl
stc
test
xchg
aam
jo
decb
aas
ja
int
cmp
adc
je
orb
stos
test
rorb
inc
add
pop
push
xor
lds
outsb
mov
push
lret
out
jbe
mov
arpl
xchg
inc
sub
imul
out
lret
cwtl
aas
jno
sbb
dec
test
out
mov
jmp
dec
push
mov
repz
arpl
push
arpl
mov
adc
sti
in
dec
add
mov
inc
inc
jb
mov
movsb
cmpsl
mov
test
cld
in
call
test
dec
loope
add
stc
mov
fldl
mov
jb
mov
and
lds
notb
cwtl
and
jne
sub
and
inc
test
rcll
pop
push
dec
cs
cs
add
cmp
sub
sti
enter
xchg
xor
push
pop
in
sub
push
adc
int3
cmp
pop
pop
adc
sahf
in
leave
mov
out
and
mov
test
scas
les
dec
movsb
lret
pop
dec
out
shll
lahf
not
cs
fcoml
sub
mov
sti
loopne
dec
jecxz
ret
jbe
stos
add
fdivs
lods
sub
out
push
xor
mov
int
js
int3
xor
pop
pop
add
dec
mov
mov
push
xor
cmc
push
lea
xor
mov
push
adc
mov
shl
xchg
add
pop
ds
into
dec
fidivs
ss
xor
jns
adc
dec
nop
ds
and
testl
and
cmp
aaa
ret
push
adc
sbb
adc
add
hlt
inc
and
and
adc
and
xlat
pop
mov
aad
in
sub
pop
movsl
int3
pop
pop
iret
fdivs
fst
movsb
aad
adc
xor
jge
push
and
add
inc
push
neg
mov
xchg
jns
xor
das
push
imul
ljmp
xlat
frstor
push
dec
mov
lret
notb
imul
popf
xor
sbb
sahf
cmp
cli
jns
push
cmp
sub
and
add
stos
cmp
adc
in
pop
pop
daa
push
fildll
mov
inc
jmp
jo
dec
cli
aam
xor
xchg
imul
adc
test
mov
ret
int3
addr16
xor
cmp
push
nop
jle
mov
xchg
inc
dec
roll
cmp
arpl
jno
inc
sub
dec
std
push
push
pop
jg
push
push
adc
movsl
cmp
rorl
adc
adc
mov
pushl
std
adc
adc
mov
mov
inc
sbb
sahf
adc
mov
push
push
adc
inc
divl
pop
mov
push
adc
fwait
in
call
push
adc
or
pop
inc
adc
adc
js
cmp
xchg
or
mov
mov
mov
pop
adc
pop
int
push
int3
xchg
inc
mov
roll
adc
stos
xor
pop
mov
ret
sub
mov
jmp
cwtl
shlb
pop
adc
lods
sub
inc
mov
jmp
push
push
andb
aaa
add
or
cmpsl
movsb
sbb
adc
add
popl
inc
js
call
inc
sbb
int3
stos
insb
mov
addb
pop
mov
jecxz
mov
mov
outsb
xchg
sbb
bound
ret
mov
pop
xor
lcall
adc
mov
subl
das
fldl
out
xor
sub
divl
xchg
shlb
xchg
jmp
aam
push
adc
mov
push
push
mov
rclb
push
adc
ja
mov
test
sub
and
sbb
sub
dec
jp
icebp
sti
roll
les
inc
push
daa
out
incl
inc
mov
dec
pop
pusha
or
xchg
mov
mov
jns
icebp
jne
pop
les
push
adc
out
mov
hlt
jbe
int
aad
lahf
lcall
gs
xchg
mov
dec
pop
adc
jg
std
loopne
aad
rcl
js
dec
or
sub
push
dec
inc
or
inc
loope
in
stos
dec
je
in
das
dec
movsb
sub
sti
sbb
sub
push
adc
lcall
add
dec
pop
adc
mov
out
orb
add
xchg
lret
lret
or
cmc
stos
ss
stc
in
test
sub
data16
das
cmp
aam
mov
xchg
jo
pop
adc
stos
scas
jbe
add
lods
mov
mov
mov
adc
push
mov
loop
pop
fdivrs
test
es
lahf
stc
shrl
outsl
repnz
xchg
sub
dec
mov
inc
bound
mov
inc
jae
ret
jb
sti
leave
add
push
ffree
pop
sahf
cltd
popa
loope
pop
jno
out
and
dec
cmp
into
lods
lock
in
inc
loop
std
jmp
mov
call
cmp
mov
mov
xchg
pop
add
stos
push
mov
imul
ret
hlt
xlat
fildl
adc
or
jo
pop
adc
or
jmp
subb
imul
pop
adc
aam
mov
mov
rcr
ret
rolb
mov
mov
jo
dec
mov
xchg
lds
add
cwtl
add
fisubrl
cld
mov
mov
mov
push
cmp
fdivrl
loope
push
lcall
jns
rcr
mov
jno
ljmp
pusha
gs
pop
pop
xchg
movsl
stos
mov
ja
les
mov
push
adc
or
xor
adc
sub
imul
dec
je
xchg
dec
jle
mov
adc
cmp
jmp
inc
adc
jle
fdivr
xor
push
adc
je
rorl
adc
adc
push
jb
aam
sub
lds
cmp
adc
adc
add
hlt
sahf
xchg
je
mov
rcrl
jbe
rcrb
add
add
inc
xchg
or
sbb
rcrb
test
out
hlt
call
rorb
jge,pt
sbb
adc
or
bound
inc
mov
cli
add
negb
js
aad
adc
adc
out
mov
movsb
frstor
sub
hlt
jle
decl
lods
pop
push
pop
dec
stos
mov
or
or
mov
mov
push
push
dec
outsb
in
cmovo
ja
sahf
adc
pusha
add
pop
int
mov
push
adc
pop
inc
xchg
imul
adc
adc
dec
adc
inc
or
cli
pop
call
nopl
pop
lds
inc
pop
mov
es
pop
das
lock
cli
mov
xchg
add
pop
shll
test
pop
adc
vmovups
adc
call
mov
or
push
jmp
shlb
sub
sahf
push
cs
xchg
push
aas
aam
push
adc
mov
pop
cwtl
test
pushf
cmc
cmp
outsl
dec
mov
cmp
mov
inc
jo
or
js
cmp
xor
outsl
mov
dec
mov
push
mov
andb
add
test
sbb
push
dec
int
cs
and
std
jecxz
jae
test
jg
in
inc
pop
in
push
adc
in
imul
push
jnp
adc
adc
imul
jmp
xlat
imul
push
imul
mov
sbb
pop
adc
data16
imul
loopne
pop
adc
and
pop
pop
fcoml
cmpsl
push
dec
fs
ud1
add
or
xchg
dec
fcoms
push
lret
dec
ds
sahf
push
shll
mov
xchg
stc
xchg
xchg
mov
or
xchg
sbb
and
push
addl
xor
push
jmp
pop
or
data16
cld
les
push
adc
and
and
and
clc
pop
out
loopne
push
adc
cmpsl
xchg
mov
in
insl
test
mov
gs
mov
sub
adc
xor
ficomps
nop
xor
lahf
pop
cmp
mov
adc
fs
xchg
mov
outsb
popl
inc
repz
dec
subl
lret
int3
outsb
fmulp
jecxz
jne
pop
inc
xchg
fadd
test
loope
pop
psrad
add
in
xchg
gs
je
inc
leave
fcoml
push
adc
mov
or
and
xor
push
cltd
pop
xor
in
push
xchg
sbb
sub
push
cmpsl
fwait
jmp
lock
push
pop
fs
insl
fisttpll
das
mov
pop
or
adc
adc
in
je
xchg
xchg
xor
addr16
lret
cmp
cmp
enter
in
adc
adc
clc
cmp
sub
push
adc
jae
movsb
jb
and
jno
lock
inc
add
and
dec
sbb
pop
mov
push
loope
dec
pop
adc
pop
data16
xor
clc
inc
imul
add
dec
popa
push
inc
dec
into
out
push
mov
mov
loop
movsb
xchg
and
addb
and
insb
int3
xchg
call
push
adc
shl
jb
mov
add
add
cmp
jle
rorl
adc
adc
ja
add
inc
or
push
mov
mov
addr16
shl
stos
mov
nopl
lcall
sub
mov
pop
inc
lds
fnsave
jge
or
ss
sahf
jne
loop
shrb
rcrb
dec
cmp
push
xchg
or
mov
xor
in
shr
test
sarl
fldl
std
dec
leave
xor
sub
mov
cmp
jg
xor
and
mov
in
mov
add
sub
jge
cmp
imul
cmp
enter
mov
jae
mov
popa
cmpl
inc
test
or
cs
xor
jecxz
xchg
shr
ja
mov
mov
mov
jb
aaa
cmp
add
clc
xchg
ficomps
jmp
mov
add
adc
pop
in
mov
add
xor
xchg
add
jne
mov
inc
or
pop
pop
pop
popf
ret
insl
cmpsl
mov
mov
dec
clc
adc
adc
inc
adc
out
jbe
push
or
hlt
adc
adc
fwait
outsb
test
lock
adc
outsb
add
and
pop
pop
jne
in
rcll
imul
shl
adc
adc
into
negl
dec
cli
push
dec
jae
ds
add
cmp
push
addb
sbb
adc
adc
mov
test
adc
and
push
push
jbe
pop
sbb
sub
fcmove
out
sub
into
dec
sub
jo
out
stc
push
clc
jge
xor
mov
adc
idiv
adc
adc
fidivs
jl
outsl
sub
inc
xor
pop
pop
adc
sti
repz
adc
adc
fsub
outsb
popf
push
xchg
lods
outsl
lock
adc
pop
jp
rorl
out
cmpsl
repz
mov
sub
pop
loope
adc
adc
fs
cmp
sub
out
int3
jge
jmp
les
fcoml
push
adc
jbe
insb
inc
lock
adc
sbb
mov
lret
sbb
int3
sbb
adc
std
inc
push
lods
out
pusha
loopne
push
rcrb
push
adc
jno
pop
push
shll
mov
mov
mov
pop
fwait
xchg
jne
mov
outsl
out
rcrl
jnp
add
mov
in
inc
mov
push
pop
xchg
mov
pop
xchg
dec
aas
test
push
xchg
fs
push
adc
nop
or
aam
sbb
aas
mov
insb
dec
or
sub
sbb
adc
add
pop
pop
mov
loope
sbb
adc
cmp
popf
xchg
cltd
test
mov
call
andb
rcrb
and
pop
push
sahf
fsubrl
cltd
push
xor
mov
cmpsl
lcall
or
sub
xor
aas
cmc
mov
popf
sub
inc
mov
mov
movsb
fs
push
inc
out
inc
fstps
sub
callw
leave
in
pop
push
lods
ljmp
sub
xchg
add
sub
pop
lahf
pop
fimull
in
stos
jle
fcmovnbe
pop
ror
add
adc
and
cmpsl
pushf
dec
aas
in
xchg
adc
dec
in
push
inc
mov
fldl
xor
fsubrl
push
mov
dec
test
cmp
push
loop
loopne
and
jg
mov
and
xor
mov
inc
push
push
addr16
sbb
das
aad
jg
adc
ja
hlt
bound
mov
leave
ffreep
pop
pop
js
enter
lea
lret
nop
jmp
mov
cmp
xor
sub
sti
push
lock
mov
pushf
addr16
mov
xor
in
pusha
mov
pop
rolb
pushf
jnp
mov
repnz
mov
cltd
fwait
popf
dec
ja
xchg
push
mov
adc
mov
ret
add
sbb
call
dec
inc
or
mov
mov
in
pop
mov
mov
std
das
sub
sti
jbe
shll
mov
push
mov
daa
pushf
mov
mov
mov
xor
mov
add
ret
adc
in
imul
cmpsb
adc
fs
outsb
dec
xor
or
test
sub
test
inc
xor
jl
addr16
test
mov
mov
push
push
in
push
jmp
rcrb
mov
pop
enter
in
jo
ljmp
add
popf
pusha
mov
test
push
mov
fs
stc
movsb
shl
addl
leave
jne
mov
jmp
pop
mov
loop
cmpsb
push
mov
or
loop
mov
inc
fidivrl
mov
aad
adc
mov
mov
gs
lods
add
inc
jnp
xchg
scas
jo
andnps
xchg
iret
pop
cmp
call
fwait
cmpl
addr16
add
test
push
xor
testb
mov
data16
jbe
adc
aad
mov
sbb
sti
jp
pop
or
xchg
std
imulb
shll
jbe
push
inc
sbb
mov
pop
mov
aad
push
cmp
loop
imul
or
dec
adc
pop
xchg
xchg
or
imul
cmp
sub
testl
lret
imul
cli
aaa
push
xchg
insl
xor
jno
xor
lcall
xor
in
mov
sub
adc
cmpsb
sbb
repnz
cld
fiadds
cmp
push
mov
and
icebp
sub
xchg
mov
xor
leave
movsl
add
aad
xchg
rcrl
dec
mov
cmp
arpl
pop
lret
dec
pop
pop
jae
loopne
jl
inc
test
jl
cmp
mov
mov
pop
loopne
out
clc
sahf
adc
dec
cmpl
stos
ret
cmp
loop
jecxz
int
mov
adc
loope
mov
mov
aad
enter
aaa
cmp
push
popa
std
mov
xchg
lea
lret
fisubrl
sahf
pop
pop
in
lods
shrb
enter
adc
pop
movsl
pop
movsl
icebp
das
and
sub
fnsave
popa
aas
pop
in
cmp
fwait
addr16
xor
cmp
sub
cld
mov
xor
adc
xor
inc
into
fbld
adc
arpl
jo
lods
dec
sbb
jecxz
test
mov
mov
fbld
iret
dec
and
add
xor
rorb
mov
jle
arpl
out
scas
loope
seta
scas
pop
push
test
fisubl
jae
popa
in
call
movl
jle
xchg
movsl
in
mov
push
adc
orl
mov
sti
ds
mov
movsl
fdiv
test
incb
sti
sbb
push
mov
pop
movsl
sbb
xchg
lds
test
pop
ret
hlt
data16
mov
icebp
hlt
loopne
inc
push
cmp
mov
xchg
mov
and
decl
sub
repz
mov
push
mov
xchg
leave
lret
shlb
or
pop
ret
push
add
mov
mov
jg
es
std
push
out
sahf
jne
mov
das
bound
push
lea
mov
cmp
js
movsb
in
add
adc
and
jecxz
les
inc
or
mov
xchg
adc
sbb
in
mov
shll
push
hlt
pushf
cld
shlb
or
jno
inc
cmp
inc
pop
leave
adc
xlat
mov
sti
jl
xchg
test
rcrb
push
adc
mov
call
add
dec
cld
or
mov
inc
push
rolb
adc
pop
mov
and
add
pop
decl
xlat
mov
inc
pop
leave
adc
or
lahf
mov
loopne
je
xchg
lods
leave
int
jne
cmp
inc
or
cli
inc
push
js
add
addl
cmpsl
stos
cli
hlt
push
xor
jns
adc
sbb
sahf
mov
mov
or
in
pop
xor
inc
cmpl
imulb
or
adcb
fistpll
ja
mov
sub
lahf
pop
inc
inc
sti
mov
mov
cli
cli
incl
int3
lods
jbe
cmp
pop
push
aad
pop
mov
test
repz
addb
or
jo
cmp
sub
test
addb
xor
and
mov
cmp
gs
fucomi
push
ret
in
jp
mov
movl
xchg
mov
sub
jbe
out
shll
push
mov
push
or
and
mov
lahf
pop
mov
rcrb
fistpl
cmc
mov
pop
fisubl
mov
mov
mov
mov
mov
mov
jecxz
pushf
mov
loope
test
rcrb
pop
movsl
mov
insb
jecxz
push
rcl
popf
mov
subl
jge
andl
push
scas
cmc
fcmovu
dec
mov
inc
sbb
mov
negl
push
inc
and
dec
mov
pop
fsts
adc
and
lods
mov
out
or
hlt
inc
fdivs
in
outsb
xor
push
jl
pop
jmp
outsl
call
ret
pop
mov
pop
fiadds
sub
jb
sub
mov
es
pop
into
sub
pop
pop
xchg
lahf
ret
outsb
dec
inc
roll
add
mov
addr16
mov
loope
mov
push
adc
or
or
jae
push
pop
inc
jmp
sbb
icebp
mov
subl
inc
in
pop
cmpsb
inc
cmp
and
pop
push
mov
test
int
dec
movsl
sub
clc
adc
sbb
or
fmuls
out
adc
movsb
aaa
dec
dec
les
inc
mov
lock
fadds
lds
mov
jecxz
mov
xchg
std
je
imul
nop
mov
outsb
mov
mov
rclb
cmpsb
in
mov
add
imul
fists
outsb
jb
ret
je
imul
xchg
sub
mov
pop
ret
movsl
cmpsb
jne
pop
imul
mov
fs
dec
enter
push
stos
nop
push
lock
jmp
lds
jecxz
jno
gs
add
mov
movsl
and
sbb
roll
push
or
mov
mov
fcompl
lds
daa
cmp
jbe
movsb
sub
lods
mov
pop
movsl
sbb
push
jne
sub
xor
add
or
les
into
sti
imul
mov
call
sbb
sub
or
add
dec
je
stc
test
sbbb
jnp
adc
ds
loopne
lods
jo
pop
adc
je
pop
adc
int
or
adc
cmp
or
cmp
in
jnp
adc
add
imul
scas
ret
pop
pop
pop
adc
enter
add
jo
imul
ja
pushf
push
fadd
es
sahf
mov
in
pop
rolb
add
dec
add
inc
sub
leave
jge
mov
pop
sub
push
jecxz
pushf
shll
xchg
test
nop
mov
rolb
pushf
imul
jnp
in
push
and
cmp
jl
pushf
mov
push
jne
push
pop
pushl
mov
sbb
nop
stc
jecxz
push
fs
xchg
loopne
or
cmp
movsb
sbb
mov
popf
imul
cmp
into
pop
out
or
mov
lea
popf
push
cmpsl
loopne
cmp
pusha
cmp
std
popa
insb
hlt
adc
push
imul
mov
orl
jb
in
loop
dec
add
jb
dec
je
and
xchg
or
fmull
add
xchg
dec
ds
xchg
mov
rol
addb
insl
lock
add
cmp
sub
jno
adc
push
mov
mov
rclb
inc
incl
js
add
jb
sarl
lcall
lcall
out
lods
movsb
push
push
add
push
fisubs
lods
adc
loop
jecxz
stos
lcall
pop
rclb
dec
mov
jb
push
stos
push
pop
push
and
addr16
cmp
inc
sub
jmp
lret
sarl
adc
mov
cmp
mov
imul
fidivl
and
loop
sbbb
adc
in
data16
mov
cmpsb
sub
arpl
mov
mov
in
test
sub
xchg
lods
inc
add
inc
push
lret
int3
fidivrl
jl
out
out
lahf
cld
out
pop
add
inc
sbb
js
add
fidivs
or
test
cmovbe
ja
xchg
lcall
sbb
mov
push
ds
fiadds
movsb
mov
inc
pop
int
push
std
mov
imul
mov
imul
clc
stos
jns
push
jbe
dec
leave
outsl
fsubl
mov
incl
sarb
add
push
decb
push
inc
inc
call
sbb
aaa
aas
cs
xchg
gs
sbb
stos
push
lahf
stos
mov
inc
testb
daa
stos
fldenv
test
test
jbe
repnz
test
sub
cmpl
cmp
mov
lret
cltd
iret
mov
xorb
outsb
sbbl
hlt
or
lret
lods
js
test
leave
mov
adc
test
imul
cmp
pop
cmpsl
fnsave
aad
jno
mov
sub
sahf
faddl
les
add
cld
popa
sbb
hlt
xlat
sub
rcr
sub
mov
les
in
movsl
mov
push
adc
xchg
add
pop
inc
les
push
adc
andl
pop
fdivrs
decl
je
sub
dec
xchg
add
xor
xor
es
adc
rorl
jecxz
ss
pop
cs
jo
jmp
xchg
mov
int3
aam
orl
pop
jle
lock
mulb
add
js
pop
std
cltd
adc
out
cmpsb
pop
shr
mov
push
add
enter
cwtl
imul
push
pushf
call
shrl
push
in
push
popa
dec
rcll
repz
or
pushf
mov
cmpsb
or
int
mov
in
jnp
notl
push
lea
pusha
test
adc
sahf
mov
insl
mov
cmc
lret
insb
mov
sub
inc
shrb
mov
test
sub
sbb
clc
js
pop
in
test
or
push
mov
pushf
push
xchg
cmp
or
shl
jecxz
push
jg
imul
inc
adc
mov
pop
jl
mov
or
and
addr16
pop
shl
dec
push
or
cltd
out
add
int
pop
daa
gs
test
roll
sbb
xlat
sub
pop
pop
outsl
sahf
and
js
sub
aam
cli
cmp
jb
mov
imull
pop
int3
dec
in
pop
mov
test
push
adc
pop
ds
jl
adc
push
mov
push
into
push
xor
or
js
negb
imul
mov
jnp
ja
call
xor
loope
add
divl
lcall
xchg
mov
sbb
cmpsb
cwtl
stc
pusha
sbb
cmc
adc
dec
and
ficompl
xchg
mov
inc
cld
cli
xchg
add
int
fistl
xlat
adc
mov
dec
dec
rolb
mov
scas
push
aaa
cmp
xor
stos
mov
push
push
xchg
sub
pop
rcrb
pop
push
dec
mov
sbb
ljmp
mov
sbb
mov
negl
jmp
mov
mull
mov
int3
repz
fsubrs
dec
outsl
fcomps
push
adc
jo
clc
cmp
mov
xor
mov
test
xchg
add
xor
push
adc
pop
fmul
cltd
lahf
mov
jo
add
mov
push
mov
aas
insl
ja
popf
movsl
rclb
cltd
and
xor
push
cs
jle
test
js
in
xchg
mov
adc
ret
test
hlt
loop
jg
into
pop
sub
cmp
adc
aaa
or
or
int
cmp
mov
jg
rcll
popf
add
ja
inc
adc
inc
and
inc
or
es
shl
pop
out
push
dec
mov
mov
testw
sti
mov
push
fcomps
stos
fxtract
mov
adc
scas
lcall
xlat
in
sub
jg
xor
xor
mov
faddl
pusha
mov
cmp
mov
mov
aaa
cwtl
xor
je
adc
xor
push
mov
sub
unpcklps
push
roll
sti
in
push
lods
cwtl
pop
lcall
sbb
imul
sub
subb
ret
and
loope
push
in
mov
sbb
add
and
ljmp
pop
mov
dec
inc
inc
or
rcrb
xor
in
dec
mov
lcall
sub
test
mov
nop
orb
mov
xor
pop
lret
mov
jo
and
rcl
inc
or
jmp
cmpl
jnp
xchg
int
repz
movsl
sbb
les
pop
xor
push
aas
nop
sub
mov
or
push
pop
aaa
xor
loope
imul
xor
jnp
adc
lods
fsubrs
jo
or
sbbb
mov
lahf
pop
adc
mov
movsl
push
pop
pop
pop
adc
mov
clc
mov
adcb
dec
sbb
ret
or
fldcw
xchg
movsb
imul
sub
mov
push
adc
push
cmp
lock
je
das
push
jge
idiv
mov
push
sub
cmp
mov
adcb
pop
adcb
xor
addr16
movsl
or
lahf
mov
enter
lds
jne
mov
movsb
inc
cmp
and
clc
out
pop
mov
arpl
add
xor
dec
xor
gs
daa
mov
push
inc
xor
testl
js
jae
adc
rorb
jp
test
adc
mov
in
lahf
pop
adc
je
pop
adc
pop
pop
pop
adc
lock
mov
push
mov
cmc
inc
dec
push
jns
popf
repnz
cmc
popa
cmp
in
dec
fidivs
in
sub
lods
out
inc
add
cmp
icebp
scas
ljmp
cltd
push
sub
lret
cwtl
mov
leave
pop
mov
push
jno
popl
test
mov
sub
push
jae
jle
lea
and
or
inc
pop
and
test
add
mov
add
jmp
xchg
mov
cltd
inc
in
push
pop
leave
out
outsb
cmp
int3
insl
xor
jl
jb
rolb
in
in
and
ljmp
lods
jmp
les
cli
or
fists
mov
aad
sbb
or
es
cmp
test
push
dec
adc
dec
sbb
hlt
insl
xchg
idiv
es
lahf
ss
or
arpl
add
jmp
push
iret
lea
pop
das
sub
jmp
lcall
or
push
dec
push
xchg
add
add
pop
pushf
loope
fldcw
test
cld
cmp
pop
mov
xchg
pop
pop
rol
cmp
int
lea
sub
xchg
mov
xchg
mov
loopne
call
jne
aaa
cmp
jmp
push
loope
mov
data16
jb
ljmp
cli
inc
mov
das
fs
adc
mov
es
lock
adc
cwtl
stos
fnstenv
scas
or
push
pop
jle
dec
leave
leave
shll
and
fsubl
push
mov
fsubrl
add
fldt
outsl
xor
les
push
stos
int
outsb
add
stos
xor
adc
and
mov
push
cmp
sbb
adc
add
inc
sbb
jb
aas
jae
aad
scas
fwait
ljmp
or
jg
mov
int
jg
xchg
loopne,pt
popf
mov
sbb
aam
sahf
add
out
out
push
cmp
scas
and
dec
lahf
stos
mov
pop
adc
sbb
out
stos
jo
shrl
push
daa
dec
cli
std
adc
jle
sub
cmp
fadds
pop
ljmp
jb
rorl
nop
fnstcw
xor
xor
rcrb
pop
push
lds
mov
fmull
in
or
xor
clc
repz
aad
xchg
and
aam
sbbb
pop
push
out
clc
sub
movsb
enter
pusha
jnp
sbb
pop
cmc
fstl
daa
pop
ljmp
ja
cmp
dec
pop
hlt
cltd
bound
movsb
test
idiv
std
xchg
sbb
int
cmp
mov
pop
jo
jecxz
jnp
pop
je
mov
jbe
repnz
in
mov
jle
pusha
and
cmp
pop
arpl
pop
aas
xchg
in
xchg
call
mov
adc
into
push
punpcklbw
adc
in
add
cmpsb
sub
push
jge,pt
inc
pop
jle
es
into
push
ret
movsl
jmp
mov
out
dec
lcall
jge,pt
repz
push
movsl
xor
or
add
mov
adc
mov
push
xlat
jbe
fisubl
pop
adc
dec
mov
lret
pop
lods
adc
jge
sub
xlat
hlt
xchg
adc
mov
ret
out
movsb
sub
mov
push
pop
je
xor
and
out
xchg
stc
push
imul
inc
or
daa
jno
jg
jnp
stos
subb
popa
or
pop
xor
jne
shrb
mov
sti
pusha
push
inc
pop
xor
in
or
jb
cmc
jg
xor
cli
sub
enter
popa
adc
repz
pop
xor
subb
in
xchg
pop
add
add
and
mov
adc
xacquire
aam
test
lods
xor
push
adc
aaa
je
hlt
int
je
push
adc
and
add
mov
rcrl
push
nop
mov
pop
lahf
pop
jmp
out
not
xchg
adc
clc
pop
jno
aad
or
pop
lds
leave
dec
movsl
sub
sub
popa
inc
push
jae
ficomps
xchg
cs
sub
add
out
lods
dec
loop
lahf
pop
xchg
lcall
mov
scas
into
xor
testb
jecxz
lods
mov
pusha
iret
arpl
xchg
lods
pmullw
dec
fwait
popa
in
sarl
outsb
adc
mov
adc
ja
or
movsb
jns
cmpb
popf
add
dec
mov
sbb
mov
inc
lea
sbb
sub
sbb
outsb
fbld
mov
jno
mov
mov
sub
stos
arpl
repnz
insl
repz
fwait
lock
or
lahf
loop
bound
sti
mov
dec
cmp
mov
fs
xor
mov
loopne
into
mov
xchg
imul
inc
lahf
jmp
mov
push
movsb
sahf
addr16
sbb
loope
dec
cli
add
dec
push
pop
es
popf
jae
arpl
xchg
sahf
jne
inc
test
movsb
inc
aas
icebp
pop
mov
scas
or
loope
test
outsb
push
add
jmp
aaa
inc
mov
call
lods
pop
cmc
dec
jb
cwtl
sbb
adc
sub
sub
shlb
push
add
ret
xor
add
mov
jb
sub
into
add
inc
xchg
cmp
adc
sbb
adc
aas
jecxz
jle
arpl
pop
fidivs
push
adc
movsl
ljmp
jle
fwait
xchg
fstl
iret
dec
mov
outsl
pusha
jae
stc
insb
ds
or
mov
pop
imul
sti
arpl
jne
aam
push
ss
or
aam
xor
imul
add
and
pushl
into
and
mov
lock
sbb
and
xchg
scas
fbstp
subb
push
and
mov
cmp
jns
rorl
and
sub
test
add
aaa
dec
into
jge
mov
push
sub
hlt
jg
int
insl
and
icebp
fildl
les
and
mov
aad
pop
in
clc
or
xchg
mov
into
out
std
or
pusha
loopne
les
inc
paddb
mov
xchg
mov
std
out
cmp
das
mov
sub
pushf
int
fs
sub
in
pop
out
imul
inc
push
cli
jle
js
push
lret
mov
roll
pop
call
andps
mov
lcall
ffree
or
push
cli
jg
daa
aad
nop
repnz
js
clc
sub
in
mov
mov
adcb
mov
xchg
out
sub
xchg
mov
mov
adc
je
push
push
hlt
arpl
dec
aaa
add
lock
aad
adc
pop
cmp
sub
adc
adc
mov
jnp,pn
dec
div
mov
pop
push
sbb
popf
ret
sub
add
pop
aas
pop
enter
xor
shll
jnp
mov
push
pop
in
or
add
fucomip
or
xchg
mov
pop
sahf
push
push
orb
inc
outsb
dec
jae
jbe
inc
orb
push
cmp
repnz
dec
clc
and
stc
xchg
int3
adc
cltd
sub
adc
insb
ds
les
in
or
out
fildll
lods
mov
sti
lret
push
psraw
ret
sbb
out
inc
iret
or
add
aam
pop
jb
pop
cmp
inc
inc
sti
gs
dec
sub
sti
jl
cld
mov
aad
mov
std
pop
lds
rcl
stos
je
cli
nop
xchg
popf
mov
and
scas
or
mov
mov
add
jecxz
add
es
jmp
push
sbb
cmp
mov
push
lret
dec
aaa
clc
dec
dec
out
sbb
leave
dec
inc
or
xchg
inc
pop
movsb
dec
xchg
int3
dec
xchg
dec
pusha
imul
aaa
insl
lret
add
sar
xchg
lret
cld
push
lahf
pusha
or
cmp
in
sub
icebp
mov
in
push
clc
lds
lea
jl
and
imul
in
pop
lods
ficompl
cmc
hlt
dec
cmpsb
inc
xchg
fwait
cmp
jae
dec
dec
les
sbb
mov
lods
mov
inc
cmovge
jb
push
xor
fistpl
test
lret
jecxz
mov
jmp
stos
rolb
sub
mov
pop
xor
cmp
outsb
add
ret
test
mov
adc
mov
insb
fdivp
stos
or
imul
add
rcl
push
in
mov
xorl
pop
and
jb
clc
int3
out
jb
jns
rclb
pop
sbbb
repz
pop
sbb
repnz
stc
fs
les
aas
icebp
mov
lahf
jmp
pop
aaa
xor
push
fcoml
insl
bound
adc
mov
loope
addr16
and
aam
cwtl
ja
push
outsb
lods
das
adc
mov
mov
sub
cwtl
in
lods
das
das
pop
lahf
and
sub
cmpb
fst
add
dec
jo
or
sub
lods
sub
mov
rcr
inc
ljmp
scas
add
sbb
push
pop
sbb
aas
dec
jle
and
cmp
ror
jg
push
je
cmp
inc
or
sub
jl
mov
jnp
fidivrs
cltd
addl
sbb
clc
mov
jmp
inc
movb
cmp
and
imul
inc
unpcklps
icebp
inc
insb
mov
aad
or
call
xchg
xlat
mov
sub
pop
add
dec
pop
arpl
sub
test
cmp
jl
pop
popf
nop
cmp
pop
pushf
loope
sti
cltd
sbb
push
ret
xchg
and
cmp
bound
rcll
test
xor
xlat
inc
fstl
cld
movsl
fcompl
mov
hlt
call
in
arpl
sbb
jo
inc
in
lahf
in
test
arpl
std
inc
cmp
roll
sbb
jnp
inc
add
push
push
jnp
adc
mov
hlt
scas
adc
imul
icebp
ja
xor
ja
pop
fnstsw
xchg
rcl
icebp
mov
cli
sbbb
xor
je
shlb
mov
push
hlt
mov
sarl
pop
call
pop
xor
mov
sbb
inc
or
cmp
cli
hlt
xchg
out
push
push
test
pop
ds
add
loop
lret
loope
push
xor
jbe
pusha
push
shr
jge
mov
sbb
pusha
add
cmp
add
movl
in
add
sub
mov
daa
data16
sbb
and
outsl
pop
xlat
jecxz
aam
jo
mov
fldenv
mov
das
add
add
mov
dec
dec
push
cmp
inc
fimull
mov
arpl
call
xor
test
pop
mov
inc
jge
cmp
insl
lods
sub
push
adc
ljmp
push
or
inc
xchg
jmp
xchg
xchg
fsubrs
inc
fadd
lods
add
and
mov
popa
adc
test
fdivrs
dec
dec
and
jmp
clc
mov
mov
movsb
cld
adc
adc
ds
repz
pop
aam
insb
or
loop
ja
rol
xchg
xchg
cmp
lock
or
andl
jo
pop
pop
sbb
mov
sub
clc
lea
and
pop
adc
cli
pop
cmp
sub
call
dec
push
dec
jbe
xchg
sbb
test
cmc
es
or
xor
mov
ja
dec
or
repnz
mov
ss
dec
inc
fidivrl
mov
arpl
mov
out
popf
iret
jbe
jecxz
lds
lods
and
stos
jmp
loopne
or
fimuls
ret
leave
leave
inc
adc
mov
out
scas
pop
cmp
cmpb
push
dec
push
push
sahf
cmpsb
mov
cmp
in
mov
int3
cs
pop
stc
mov
push
jle
xchg
inc
insl
call
jno
mov
cltd
dec
jb
shll
lods
add
ds
adc
dec
mov
xor
cs
and
lret
cs
dec
rcr
shll
test
sub
imul
fcomps
xor
xor
fiaddl
das
imul
les
das
pop
adc
sbbb
xlat
add
mov
lcall
jo
pop
adc
pop
push
pusha
cmpsl
and
jg
popa
insb
and
xchg
outsl
sbb
loope
in
xchg
imul
or
outsb
mov
ds
mov
pop
cmp
mov
adc
jg
jo
clc
je
or
xchg
push
ret
xlat
mov
pop
stos
inc
or
fstps
sbb
std
xor
mov
or
imul
out
sub
mov
push
xchg
cmp
mov
jg
mov
dec
scas
jg
stc
test
loopne
sub
jmp
pop
cltd
idivl
pushf
cli
ss
mov
inc
or
mov
jb
jecxz
inc
pop
mov
outsl
incl
pop
xor
std
jo
mov
movsl
int
in
xchg
ljmp
ss
and
cmp
add
shll
xchg
or
incl
stos
popa
cmp
scas
int3
lock
sbb
pushf
cli
hlt
pushf
push
imul
insb
or
pop
std
in
mov
add
fidivs
dec
and
and
ss
clc
sub
adc
mov
dec
pusha
jns
cmp
push
pop
sub
add
cmova
xor
sub
rcl
or
call
cld
sub
loop
scas
mov
sub
inc
test
lock
xor
add
inc
xchg
pop
mov
xchg
das
aaa
mov
int
push
pop
in
dec
shr
cld
cld
sti
pusha
push
inc
pop
xor
cmc
sahf
popa
stos
xor
ljmp
add
pop
mov
xlat
insl
or
mov
fs
pop
adc
pusha
stc
add
jo
pop
adc
int3
lea
test
pop
pop
out
rcll
add
std
jg
xor
pop
test
xchg
xor
cmp
adc
jle
push
mov
add
pop
jl
mov
adc
out
mov
sbb
xchg
inc
fisubs
adc
cmpsb
jecxz
out
jl
add
fsubrl
rclb
dec
pop
add
jo
add
sbb
pop
pop
xchg
fwait
or
mov
push
iret
daa
sub
out
in
mov
xchg
jb
aas
mov
ja
ds
loopne
addr16
jns
les
in
arpl
lcall
fwait
xchg
xchg
sarl
movsl
ja
mov
pusha
and
mov
jmp
and
xor
push
lahf
mov
pop
xchg
xor
xor
cwtl
adc
adc
sbbl
imull
push
dec
mov
cld
lock
mov
scas
push
pusha
jl
adc
sub
xchg
adc
lds
inc
pop
fidivl
xor
push
mov
pop
pop
aad
and
fwait
ret
rclb
add
insb
jl
adc
cmp
out
add
cmp
stos
or
sub
xor
jnp
and
cwtl
adc
mov
cmp
jl
adc
cmc
push
push
dec
jp
jmp
movl
int3
movsl
xor
popf
xor
fsubs
or
int
push
aas
fisubl
mov
rcrl
or
adc
and
adc
mov
xchg
out
out
push
adc
clc
jnp
or
push
sbb
mov
in
insl
arpl
jae
inc
adc
or
xor
pop
enter
pop
cmp
scas
insl
scas
das
mov
push
aas
pop
mov
pop
fsts
cmpsb
dec
insl
repz
test
inc
pop
xlat
inc
test
fildll
adc
sub
cmpl
ss
loop
fists
cmp
xor
xchg
lods
dec
push
outsl
push
pop
sbb
in
dec
dec
rcr
fcomip
js
inc
ja
ja
push
jo
cmp
jle
clc
push
adc
lcall
inc
push
bswap
push
mov
adc
les
cli
xchg
mov
mov
pop
dec
iret
icebp
push
pushf
call
into
popf
cmp
bound
jno
add
pop
mov
aam
and
cmp
cmp
adc
popa
movsl
dec
leave
fucomp
call
das
jb
xor
add
sbb
insb
enter
jmp
dec
lea
call
inc
notl
stos
inc
xchg
mov
out
sbb
xchg
mov
in
pop
jmp
add
pop
daa
movsb
pop
xchg
lock
add
mul
or
jle
xor
xor
call
lock
dec
movb
in
das
int3
shlb
push
in
movhps
pop
push
push
insb
mov
jl
cltd
movsb
inc
dec
mov
push
push
push
sub
ds
imul
lahf
xor
or
inc
mov
arpl
call
jmp
daa
arpl
cli
xchg
mov
xchg
xor
ja
mov
pushw
in
or
dec
out
mov
add
pop
mov
insb
and
sub
vpmacsdd
and
cli
hlt
jb,pn
xor
sbb
sbb
add
push
mov
mov
loopne
pop
cmpsl
push
push
nop
inc
inc
notb
push
inc
mov
xchg
adc
popa
sub
pop
std
std
mov
mov
shrb
mov
mov
or
mov
jecxz
push
adc
push
mov
icebp
addr16
cld
jne
outsb
or
repnz
int
push
inc
push
and
inc
dec
mov
or
sub
cmp
call
imul
addr16
mov
add
insb
add
aad
popa
ljmp
fidivl
movsl
sub
sti
push
hlt
mov
mov
cmp
add
loopne
lds
dec
xchg
ficomps
xchg
mov
and
mov
ss
neg
or
or
or
push
int3
dec
inc
fs
sbb
adc
pop
clc
add
cld
xor
aas
pop
out
lret
hlt
int3
xchg
jns
out
cmpl
or
in
and
addr16
addl
push
adc
loope
in
add
imul
cmpsl
xorl
mov
pop
sub
adc
stos
int3
inc
iret
jmp
pop
add
dec
sbb
and
insl
daa
hlt
pop
sarb
outsl
shrb
mov
sbb
and
sub
stc
pop
inc
andb
mov
inc
push
into
dec
inc
aad
mov
arpl
sbb
jbe
sahf
nop
mov
sbb
inc
pop
add
das
jae
sar
stos
xchg
aaa
ss
bnd
and
popa
bound
divl
sarl
xchg
mov
pusha
and
push
outsb
scas
and
bound
test
pop
push
mov
inc
lret
jmp
orl
or
sarb
je
and
test
dec
sbb
cmp
jge
add
cmpsb
jae
cmp
xchg
lret
push
jecxz
popa
ljmp
mov
imul
add
fldl
out
add
movsl
shll
sbb
aad
pop
xchg
add
imul
jb
test
jge
adc
sahf
addr16
add
adc
stos
in
sub
mov
adc
and
inc
pusha
outsb
sbb
jge
jl
and
sub
lret
add
fisubl
lret
mov
add
mov
push
mov
push
and
mov
jo
push
out
xchg
scas
pop
loopne
ss
lds
stos
xchg
int
sbb
push
pop
mov
add
or
mov
jmp
xor
stos
popa
cmp
mov
ret
push
cmp
mov
inc
out
or
jle
xor
out
pop
pop
je,pt
xchg
add
push
add
js
lods
sub
cs
push
pop
mov
imul
in
stos
int
mov
sub
movhps
adcb
test
aad
or
push
or
das
fldl
xchg
push
hlt
xchg
pshufw
je
push
inc
loope
in
lea
pop
aaa
xor
mov
push
push
es
loopne
pop
pop
outsl
test
push
add
pop
xchg
rcl
icebp
xchg
sbb
xchg
xchg
jg
addl
je
shrb
cmp
add
sub
repz
inc
je
sub
adc
jne
aas
in
sar
lret
dec
mov
andl
jno
loopne
xchg
add
mov
addb
or
fsubrp
out
xlat
add
movhps
lret
pusha
movsb
push
enter
incl
xor
push
adc
jl
aas
jl
int
pushf
sbb
adc
mov
incb
jmp
pop
or
or
or
rorl
mov
mov
mov
sub
test
or
mov
movsb
leave
inc
push
test
int
mov
in
xor
adc
sbb
or
fidivrl
mov
inc
pop
add
dec
scas
xor
push
jp
pop
push
add
xchg
jno
sbb
outsb
insl
mov
jl
adc
cmp
mov
pop
lds
cmp
pop
daa
ror
push
jae
and
and
mov
adc
icebp
ficoms
aam
mov
mov
cmovns
or
stc
in
int3
push
scas
fadd
push
js
mov
outsl
fwait
lahf
sub
lret
enter
arpl
lods
and
mov
lock
adc
imul
call
aas
cmp
bound
xchg
imul
pop
mov
push
fwait
jnp
rcl
rclb
aam
mov
aaa
adc
xchg
add
int
dec
subb
sbb
adc
and
push
cmpsb
cmpsb
cmpsl
daa
addr16
in
repnz
scas
mov
clc
mov
out
addr16
push
dec
add
lcall
addl
adc
insb
mov
lock
sahf
cltd
push
fstpt
mov
mov
call
mov
or
sub
aas
mov
pop
es
mov
mov
fcoml
in
push
inc
ficoms
xchg
out
addr16
inc
pop
stc
int3
jb
jmp
sub
ja
lahf
test
push
mov
mov
xorb
nop
in
out
and
stc
imul
loopne
les
fadds
mov
repnz
cmc
add
inc
or
mov
push
les
push
adc
scas
insb
int3
sbb
adc
cmp
mov
mov
enter
sbb
cwtl
aad
mov
pop
pop
lcall
nop
fiadds
cmp
add
fadds
mov
jge
pushf
cmp
sbb
adc
sbb
jno
pop
enter
fcoms
in
mov
mov
adc
cmc
sbb
insb
insb
jl
adc
call
js
fadds
xchg
scas
sbb
sahf
pop
lods
push
adcb
shlb
xchg
or
nop
les
jge,pt
inc
jecxz
xlat
jg
addl
je
shrb
test
push
jbe
add
pop
push
test
adc
jg
and
arpl
add
cli
pushl
inc
xchg
dec
or
imull
test
mov
cwtl
leave
cmp
sub
jp
xor
rcl
out
movsl
sub
sub
add
mov
inc
xchg
push
adc
mov
sbb
xchg
pop
push
aam
xlat
int
out
and
push
dec
imull
incl
or
xchg
scas
and
push
addb
mov
nop
sub
push
in
jnp
shlb
sub
inc
sbb
lahf
add
fadds
aam
adc
mov
andl
or
cmc
adcb
int3
jg
dec
lds
clc
cmp
mov
incl
dec
lods
cwtl
cld
xchg
pop
imul
lcall
xor
movsl
mov
jno
add
in
or
xor
pop
push
jb
push
mov
repnz
sub
jns
pop
add
jp
pop
mov
andl
fs
pop
adc
scas
and
in
pop
pop
adc
in
mov
nop
mov
or
sub
adc
aaa
orb
shrb
movsb
enter
mov
push
sahf
dec
xchg
cmpb
xchg
dec
dec
addr16
inc
add
mov
sbb
cmp
jnp
jns
imul
mov
mov
cmp
mov
xor
outsb
xor
fldl
lahf
jle
test
add
push
and
mov
push
adc
jmp
sbb
jne
jno
movsl
movsl
fistps
add
scas
das
and
add
pop
inc
ret
sub
fistps
cmpsl
addr16
sarb
adc
lcall
stc
dec
inc
neg
lods
pop
in
pop
loope
adc
adc
ljmp
pop
jecxz
clc
sub
xchg
or
scas
stc
shl
and
divl
sub
pop
push
dec
pop
cmp
fnstsw
add
adc
loopne
enter
sub
jmp
pop
bound
pop
movaps
push
adc
out
subl
mov
sub
enter
mov
lret
fiaddl
testb
jb
das
add
adc
mov
sub
xchg
nop
mov
adc
sub
out
out
jo
sbb
push
adc
in
pop
pop
adc
sbb
pop
adc
inc
shlb
push
xor
push
xchg
mov
push
xchg
lds
imul
pop
rolb
fdivr
adc
pop
pop
adc
xchg
icebp
cmp
xchg
and
ror
cmc
and
nop
sbb
pop
mov
pop
pop
adc
mov
outsl
pop
scas
xchg
lea
mov
mov
mov
and
xchg
xchg
xor
shrl
mov
testl
dec
addr16
mov
mov
adc
adc
push
adc
ljmp
insb
rcr
adc
pop
jae
add
mov
test
and
movsl
stos
mov
xchg
jecxz
aad
fstpl
add
adc
mov
sbb
adc
stos
xchg
subb
adc
int3
sbb
adc
xor
cmp
pop
adc
sbb
adc
push
inc
push
xor
pusha
jp
adc
and
bound
xor
lea
push
insl
xor
push
adc
nop
pusha
sub
jge
iret
sbb
cltd
adc
adc
call
xchg
mov
hlt
xchg
ljmp
lds
or
shrl
pop
or
push
adc
rorl
jbe
sbb
mov
adc
adc
into
std
cli
jg
js
xor
inc
pop
jge,pt
jecxz
dec
pop
mov
shlb
das
pop
mov
adc
mov
xchg
les
push
adc
mov
dec
and
mov
orb
incl
mov
pop
loopne
push
adc
mov
push
adc
das
sub
adc
adc
or
cli
inc
jo
mov
pop
pop
adc
sti
xchg
out
shll
cmpb
sbb
pop
aam
adc
adc
push
xchg
jae
rcrl
jne
shrb
push
mov
sub
scas
fcom
mov
bound
mov
or
add
adc
pop
xchg
call
mov
push
adc
jbe
inc
push
test
fwait
inc
xchg
mov
sbb
adc
fisttpl
mov
jbe
cmp
daa
xchg
pop
pop
push
mov
jg
pop
jp
testb
inc
jbe
popf
sub
adc
inc
ds
jb
adcl
or
cltd
in
push
popa
inc
and
sbbb
cmp
hlt
cmc
test
out
lods
inc
lret
les
cmp
popf
jmp
adc
adc
mov
mov
pop
fld
cmc
scas
out
mov
xor
inc
pop
adc
lock
xchg
lret
imul
cmp
fnstcw
pop
pop
adc
cld
adc
adc
inc
mov
dec
mov
xchg
ss
daa
mov
adc
into
aad
jno
sub
xor
or
jp
dec
adc
xchg
lea
stos
mov
lea
jno
in
sbb
es
xchg
imul
adc
adc
sub
xor
inc
nop
lret
inc
push
dec
rcl
rolb
adc
stos
and
xchg
fmuls
jle
add
push
adc
add
mov
xlat
jmp
and
and
repz
sar
aam
push
add
adc
clc
in
mov
mov
adc
in
jns
adc
mov
subl
adc
xor
popa
test
adc
adc
rcrl
push
dec
sar
stos
or
xchg
push
int
push
xor
std
lock
aas
add
loop
int3
dec
mov
pop
pop
subb
pop
insb
orl
in
mov
mov
inc
sub
jge
and
inc
daa
daa
je
and
pop
test
fadds
pop
pop
mov
lret
add
mov
push
add
scas
jae
add
push
adc
les
push
adc
divl
fmul
push
hlt
push
sbb
xor
mov
rcrb
push
adc
push
lahf
gs
mov
dec
sub
xor
test
outsl
fcmovnbe
pop
xchg
pop
xchg
xor
mov
sbb
adc
adc
roll
hlt
pop
fmull
mov
dec
in
add
pop
adc
jne
int3
pop
mov
stos
in
jmp
push
adc
adc
test
in
push
lods
loope
stos
fsubrl
and
dec
inc
xorl
cmc
lea
add
push
cmp
jo
or
push
into
pop
lods
cwtl
xchg
sub
es
bound
sbb
orb
xor
test
pop
ss
cmovge
arpl
lcall
add
push
mov
push
mov
shld
cmpl
call
iret
stos
jnp
jmp
out
lar
mov
xor
imul
jmp
dec
dec
inc
loop
not
test
aaa
scas
xchg
in
scas
push
pop
jne
add
add
aam
ret
insb
cmp
pushf
bound
cmp
push
jecxz
loope
inc
lock
push
je
pop
mov
pop
mov
cmpsb
sbb
das
jge,pt
inc
xlat
mov
movsb
lahf
cmp
or
xor
inc
ds
sahf
inc
fstl
movsb
sbb
cltd
push
sub
fldenv
push
add
add
out
add
imul
cwtl
lret
fwait
shrl
jle
popa
mov
dec
aaa
mov
fisttpll
lock
js
cmc
and
inc
xchg
jne
movsb
nop
xchg
xor
ds
jbe
stc
mov
bound
mov
xchg
pop
ljmp
mov
and
sahf
jno
push
lcall
add
push
out
pop
ljmp
daa
stc
push
xchg
int3
mov
push
and
mov
mov
and
cmp
add
sbb
push
mov
in
dec
shll
or
pop
pop
ret
orb
inc
int3
push
or
out
xchg
cmp
mov
adc
xor
cmpsl
pop
cs
dec
ss
push
rcrb
bound
test
ja
and
sbb
push
push
mov
push
sub
push
mov
push
mov
and
out
les
xchg
daa
inc
loope
in
arpl
adc
and
aam
push
incb
stos
out
stos
adc
dec
push
mov
insb
inc
or
cmp
jb
lret
lahf
sbb
xor
les
sbb
add
shrl
push
jne
popf
in
mov
xchg
jbe
mul
das
add
push
cmp
sub
psubb
xchg
pop
aad
xchg
push
mov
xchg
mov
out
mov
jle
add
mov
mov
decl
out
cmpsb
cmpsb
sub
push
negb
scas
push
ficomps
cs
inc
jg
mov
mov
cwtl
adc
push
scas
sbb
jns
or
cmp
cmpsl
lock
in
clc
pushf
mov
xchg
fimuls
rorl
push
xchg
and
ret
jmp
mov
mov
fstps
sbb
jl
mov
test
test
movsl
xor
fldenv
popf
in
cwtl
mov
loopne
daa
mov
cltd
mov
jns
mov
nop
int3
movsl
mov
rcll
test
aad
xlat
and
mov
push
jb
dec
les
sbb
dec
pop
adc
popa
jge
adc
or
rorl
sbb
adc
cmp
xor
repnz
int
mov
mov
jb,pn
sbb
in
das
movsl
xchg
push
fistpll
mov
sbb
mov
sub
dec
out
jo
pop
adc
lret
adc
repnz
and
mov
icebp
jb
rorb
pop
mov
scas
aas
dec
adc
dec
pop
jle
sbbl
in
inc
mov
je
jg
cltd
aam
incb
add
ja
rcl
hlt
insb
mov
test
push
add
lret
pop
pop
jp
push
sti
sbb
pusha
jo
pop
adc
int3
addr16
call
pop
xor
push
insl
sbb
adc
cmp
push
jecxz
aad
inc
lock
int
xor
jl
add
push
popl
inc
shrb
movsb
cs
jge
pop
call
std
xor
jmp
add
pop
pop
jecxz
jnp
mov
xlat
mov
xchg
ret
jae
outsl
jo
pop
adc
mov
inc
add
cmp
cs
jnp
mov
stc
lret
jns
and
cmp
sbbb
mov
int3
adc
les
je
shlb
test
xlat
add
push
adc
add
inc
add
negl
fisubrl
imul
inc
adc
and
lock
shl
xlat
sbb
sbb
adc
fwait
sbb
jno
sbb
adc
hlt
rorl
xchg
sub
and
insl
or
sbb
adc
xor
sarl
stc
lea
pop
das
sub
sbb
adc
in
sub
orl
jmp
fsub
fstp
push
pop
lret
xor
or
insb
test
pusha
adc
or
imul
mov
adc
or
sub
addl
mov
sub
dec
jp
test
ja
push
adc
in
inc
inc
inc
push
inc
jle
xchg
sub
lds
arpl
push
out
outsl
addl
cmp
push
xchg
mov
mov
jns
insl
jne
fmull
inc
mov
inc
pushf
dec
xor
fildl
adc
cs
cmc
pop
lea
fadds
inc
xchg
pop
dec
sbb
clc
imul
shlb
sub
jae
rcrb
mov
mov
loop
jle
popf
fadds
ficomps
mov
jo
pop
adc
mov
int
sbb
xchg
mov
filds
call
pop
dec
dec
cmp
addr16
cmp
mov
in
sub
and
adc
pop
popf
cmp
stc
pop
insb
gs
jecxz
bound
pop
loop
mov
cmp
jae
sbbl
clc
dec
pushl
adc
cld
pushf
mov
push
ret
inc
mov
mov
push
adc
in
popa
pop
imul
je
jnp
andl
xor
dec
dec
inc
fstps
ret
loope
clc
adc
int3
lds
xor
movsl
push
mov
push
push
dec
enter
outsl
jae
mov
mov
sub
fwait
scas
add
xchg
fwait
repz
repnz
ret
xor
push
adc
push
cs
mov
xor
push
lods
sub
repz
int
sub
lods
loop
mov
jb
fucomi
call
cltd
xor
cwtl
pushf
fcoml
mov
vpand
mov
xor
insb
repz
mov
fmuls
xchg
std
ret
rcll
test
dec
pop
movsb
ds
inc
or
and
pop
bound
inc
xor
inc
add
push
jp
inc
loop
and
frstor
mov
jp
mov
mov
mov
lods
movsl
mov
pop
and
jmp
adc
push
mov
nop
xchg
addr16
mov
les
mov
bnd
call
loopne
fdivrl
add
repnz
lret
icebp
icebp
jle
xchg
movsl
xor
ds
jns
cmp
jne
dec
test
rcll
cmpsl
dec
sbb
das
inc
test
mov
xor
push
loope
sbb
clc
mov
sahf
pop
xor
ljmp
mov
scas
inc
pushl
cld
arpl
sub
in
mov
mov
sahf
push
xchg
imul
hlt
inc
outsb
xchg
mov
mov
int
mov
std
sahf
out
xor
jge
pop
lcall
bound
pop
aad
or
andb
cld
sub
shrl
lea
mov
mov
call
fs
add
add
sub
mov
call
push
adc
mov
jmp
add
arpl
arpl
xor
push
mov
popf
adc
dec
jo
pushf
cli
aaa
jns
mov
or
pushf
imul
push
ret
inc
fcomps
or
ljmp
fdivrs
jmp
xchg
cld
xlat
outsb
mov
dec
jns
loopne
or
std
cli
inc
fcompl
pop
fnstcw
pushf
push
lock
xor
or
lea
add
pop
and
fs
add
mov
fwait
insb
mov
adc
mov
or
inc
cli
sti
cmc
popf
es
push
jp
les
rclb
fcmovbe
not
insb
mov
dec
jnp
loop
mov
test
clc
inc
pusha
sti
bound
out
xor
add
loope
sbb
adc
cmp
dec
sbb
adc
dec
movsl
or
shl
fnstcw
xlat
lea
int
pop
xchg
lret
adc
jmp
and
and
push
sarl
ja
mov
push
or
popf
jne
cmp
adc
in
sahf
lds
push
pop
shll
sbb
push
mov
clc
sahf
es
sbb
ficomps
lods
or
cmpsb
test
lcall
repnz
mov
add
popf
push
sbb
hlt
lock
outsl
mov
outsb
lods
jmp
arpl
mov
sti
or
push
adc
sub
cmp
sbb
ficoml
addr16
imul
inc
adc
mov
adc
adc
sahf
xchg
mov
dec
pop
movsb
aam
pop
add
das
xor
sahf
movsl
mov
mov
pop
or
iret
repz
pop
and
cmp
loopne
es
adc
pop
cmpsl
fistps
push
pop
cmp
dec
push
vpshaw
es
mov
push
push
jno
inc
repnz
pop
fcompl
jg
jl
ret
or
adc
dec
mov
mov
jnp
out
adc
adc
cli
dec
pop
ss
push
test
sbb
std
jo
insl
push
aas
cmp
mov
xchg
jo
pop
adc
fisubl
inc
xor
out
lcall
repnz
push
jbe
imul
gs
sub
repz
mov
daa
pop
and
and
mov
mov
fsubrs
fs
in
xor
mov
push
adc
add
lret
mov
pop
popa
fwait
inc
loop
loopne
push
cmp
arpl
xor
mov
push
cmp
adc
icebp
mov
push
adc
or
cmp
cmp
pop
dec
stc
fmulp
mov
cmp
stc
arpl
lods
jae
adc
rclb
fdivs
adc
subb
repz
dec
mov
cltd
sbbb
ret
loopne
dec
aad
dec
add
or
xor
inc
or
add
or
pop
pushl
lods
scas
je
adc
xchg
mov
dec
int
add
xchg
nop
pushl
std
jo
call
invd
daa
jnp
hlt
pushf
arpl
pop
jp
mov
ds
add
ret
push
add
push
cmp
jo
pop
adc
pop
inc
xor
sbb
xchg
sbb
adc
mov
jmp
jg
stc
les
jle
shrl
test
dec
jl
cmp
dec
decb
nop
sbb
aad
pop
ljmp
int3
shl
jno
and
cli
jge
shrb
cwtl
pop
sbb
xchg
addb
mov
pop
push
fs
or
pop
mov
sbb
movsb
and
in
sarl
fadds
jecxz
push
pusha
mov
lock
cli
lcall
or
cli
hlt
xchg
dec
mov
cwtl
loopne
call
decl
push
das
pop
aaa
mov
sbb
mov
push
mov
fwait
aad
fsubrl
jmp
sub
xchg
add
push
lret
bound
xor
rcrl
loopne
inc
shll
jbe
jb
lahf
cmp
xor
jle
bound
push
mov
loop
sbb
push
xchg
ljmp
push
gs
xchg
pop
inc
push
fdivrp
incl
sub
dec
push
ret
lcall
cli
stos
mov
jb
out
mulb
dec
call
mov
adcl
into
std
mov
add
jae
jmp
mov
jp
into
mov
inc
data16
and
cli
cmp
dec
adc
lret
cmp
fldt
or
mov
or
cmp
es
jnp
or
inc
and
jecxz
mov
cmp
xchg
adc
inc
cmp
pop
dec
pop
xchg
add
push
inc
adc
gs
daa
add
loope
or
jecxz
js,pt
cli
pop
cwtl
add
jae
mov
adc
ljmp
ror
push
call
mov
movsb
mov
outsl
imul
jnp
or
sub
cld
out
inc
jecxz
push
push
xchg
cmpb
push
cmp
sar
pop
pop
pop
shll
outsl
add
lods
xlat
es
movsb
cmp
repnz
sahf
in
mov
gs
stos
mov
test
lock
rcll
and
daa
pushf
les
mov
enter
mov
data16
in
cmp
jae
fnstenv
add
outsl
rorl
lret
cmp
dec
sbb
lret
bt
xchg
jg
ja
xor
xor
sbb
out
test
sbbb
scas
dec
inc
ljmp
outsb
add
mov
jp
pop
push
lahf
daa
or
push
pop
or
push
lcall
inc
mov
push
aam
xor
repnz
mov
sarl
xor
xchg
std
xor
popf
xchg
sbbb
arpl
lahf
mov
push
lahf
xor
adc
pop
addr16
fistpl
cmp
jno
mov
add
pop
xlat
les
je
sub
movsl
sub
stos
mov
jbe
fsubrl
scas
push
aaa
xchg
mov
cmp
and
dec
leave
pop
inc
lods
push
outsl
push
ja
mov
cmpl
dec
leave
in
sbb
or
cmp
in
or
aam
faddl
sahf
push
hlt
pushf
sbb
mov
mov
loopne
nop
push
pop
mov
jbe
jle
int3
jnp
xchg
je
movsl
lods
leave
or
je
push
jecxz
call
cld
dec
mov
xor
pop
jge
ss
in
mov
bound
sub
add
xor
push
iret
mov
sub
nop
push
clc
js
test
lods
or
mov
push
pop
inc
movsb
scas
xor
cmp
hlt
pushf
push
push
cmp
insb
push
xchg
mov
lret
dec
call
mov
shlb
push
or
js
pop
pop
mov
test
jnp
jae
pushf
in
push
rorl
ds
das
mov
cmp
incl
lds
shll
jb
adc
rcll
popf
pop
jno
inc
shlb
adc
movsb
inc
or
mov
push
pop
call
and
add
sahf
push
hlt
pushf
or
pop
mov
or
jle
call
add
mov
inc
mov
ss
jl
insl
adc
inc
shr
or
add
mov
lmsw
sub
es
jne
pop
out
dec
or
ret
xlat
pop
xchg
ja
sahf
jmp
pop
jae
mov
icebp
stos
fldl
mov
xchg
jmp
mov
dec
sub
rcl
pop
xchg
mov
adc
cltd
lea
pop
mov
inc
or
xchg
std
outsb
adcl
xor
cs
mov
ja
pop
ljmp
mov
xor
xor
add
jb
xchg
in
std
pop
lahf
push
or
push
sub
pop
mov
pop
jb
fadds
imul
and
xor
jg
or
adc
dec
jne
outsl
fildll
je
out
popa
push
sbb
pop
push
sbb
repnz
inc
dec
xchg
pop
adc
push
dec
dec
pop
rcll
fwait
jmp
div
mov
jle
repnz
aaa
pop
or
lcall
xchg
cld
cmp
call
test
imul
loopne
cmpsl
mov
jo
fcoms
xor
xchg
mov
mov
inc
iret
adc
xchg
enter
dec
sub
jmp
sub
pop
and
popa
fsubrs
scas
std
pop
push
shrl
sbb
jg
push
adc
dec
mov
test
repnz
out
mov
xor
jg
movb
push
lcall
mov
loope
jbe
sbb
fadds
popf
loop
shlb
and
addr16
insb
mov
lods
popf
mov
push
cmp
xor
subb
pop
xchg
push
xchg
sbb
pop
push
jbe
xor
jmp
push
bound
movsb
xlat
mov
jmp
imul
mov
mov
cli
cmp
and
cmp
pop
push
sub
fdivs
fwait
adc
mov
mov
pop
xor
pop
popf
mov
inc
add
mov
mov
push
aas
add
xchg
pushf
xorb
pop
push
nop
fbld
xchg
gs
adc
pop
mov
iret
push
daa
js
push
cs
adc
dec
mov
xor
inc
mov
mov
xor
mov
test
mov
aam
pop
fidivrs
scas
ret
movsl
xor
in
test
shlb
push
in
pushl
mov
xor
out
mov
jecxz
xor
adc
mov
addr16
insb
mov
jp
pop
shrl
mov
xchg
jne
nop
pop
das
and
jno
pop
les
sbb
shrl
int
jmp
insl
fs
ret
fadds
push
add
mov
xchg
sbb
rcll
sahf
dec
lods
xor
or
ss
jecxz
xor
ljmp
je
movsl
leave
ret
cld
lret
lahf
or
push
hlt
pushf
pop
sbb
mov
ja
jle
inc
pop
js
pop
test
add
pop
outsb
ret
popf
cmp
imul
pop
dec
inc
or
cli
jle
popa
pop
mov
dec
pop
cs
add
add
xchg
ret
mov
js
inc
jo
pop
adc
mov
stc
insl
hlt
pop
mov
lahf
sbb
call
or
ds
das
adc
mov
mov
mov
push
ljmp
jecxz
or
cli
popa
lds
addb
dec
add
jg
sbb
adc
adc
shll
cli
mov
jne
pop
mov
add
xor
jge
xor
das
pop
mov
cmp
adc
dec
jmp
mov
icebp
xchg
out
jbe
pop
pop
sbb
jp
cmp
popa
aad
mov
lea
pushf
sbb
adc
out
add
pop
aas
mov
inc
sbb
cmc
enter
jo
push
js
xor
addl
in
push
movsb
mov
xor
cwtl
sbb
adc
inc
mov
loope
jmp
ds
sub
inc
loope
push
out
mov
mov
push
ret
outsl
lret
bound
add
jae
sbb
sahf
test
push
adc
adc
pushf
pop
roll
push
pusha
xchg
les
fld
mov
aad
das
push
cmp
imul
push
bound
cmp
cli
aaa
or
gs
gs
pop
lods
push
mull
add
dec
add
enter
mov
dec
xor
ja
das
in
pusha
in
push
aad
xchg
ljmpw
scas
into
notl
push
adc
pop
addb
loop
fs
std
mov
push
push
das
sub
push
cld
lea
ss
push
adc
cld
xchg
push
cltd
xchg
les
mov
sbb
pop
sub
pusha
pop
push
dec
jbe
and
push
movsl
pushf
jns
sbb
adc
in
mov
push
ror
mov
movsl
xor
push
xor
fstl
sub
pop
mov
inc
addl
repnz
sahf
nop
or
rclb
adc
adc
fxtract
cmpb
add
std
add
repz
push
es
pop
cmp
pop
adc
lods
dec
jbe
cmp
cwtl
iret
ret
and
adc
adc
insb
mov
loopne
xor
xchg
cltd
adc
adc
shll
sub
jmp
pop
mov
or
icebp
xor
jnp
mov
adc
adc
scas
popw
repnz
mov
push
fistl
in
hlt
pop
lret
insb
sbb
adc
pop
jge
mov
pop
daa
idivb
enter
xlat
pop
ds
repnz
aam
cwtl
mov
adc
adc
imull
loopew
push
std
aad
mov
mov
or
push
fists
int
daa
mov
sbb
adc
jb
dec
add
jl
push
adc
jno
jge
xchg
fstpl
xor
data16
push
xor
lds
mov
jmp
stc
mov
push
adc
lret
xor
mov
div
push
push
cmpsl
push
and
jae
dec
mov
cmpsb
cmovbe
dec
add
int
enter
test
push
adc
stc
mov
insl
mov
in
rcl
xor
sbb
sbb
mov
das
rorl
test
push
adc
push
packssdw
hlt
call
sbb
movsb
cmp
in
pop
sbb
adc
rcl
inc
std
rcrb
cmp
daa
shlb
bound
mov
cli
hlt
decl
mov
inc
add
push
sbb
adc
jmp
push
call
inc
inc
pop
xor
cli
hlt
pushf
arpl
ret
pop
std
in
mov
icebp
pop
in
sbb
mov
adc
pop
adc
repnz
jo
pop
adc
push
xor
arpl
sbb
xor
cmc
orb
jp
lds
adc
add
sahf
jb
add
sbb
arpl
cmp
aam
ljmp
call
nopl
arpl
jne
mov
orl
push
pop
dec
pop
imul
adc
add
mov
push
adc
lods
push
push
popa
sbbb
daa
pop
test
adc
jg
sbbb
push
dec
pop
add
dec
pop
insl
aam
mov
imul
ret
stos
insb
mov
pusha
cwtl
jno
sar
in
lret
icebp
in
jns
mov
js
xchg
mov
jge
pop
lock
adc
pop
xchg
dec
icebp
stos
dec
sbb
sbb
adc
jp
push
daa
mov
cmp
push
jle
sbb
adc
mov
scas
outsb
gs
sbb
push
cmp
mov
ss
call
adc
mov
repz
fcomps
adc
cld
into
dec
mov
pop
pop
adc
push
movsl
movsl
xor
sbb
adc
dec
xor
inc
outsb
fs
incb
pop
adc
mov
and
divl
xor
pop
fs
jno
call
rcrb
mov
testl
movsb
insb
rcll
fcoms
push
adc
jns
loope
daa
add
add
add
loop
mov
outsb
lods
sub
in
push
adc
xchg
xchg
fimull
push
xchg
xchg
lret
les
push
adc
sub
jo
fsubl
pop
jb
sbb
adc
mov
mov
mov
daa
push
inc
pop
bound
clc
ja
adc
cmp
adc
push
adc
jl
lock
fwait
and
add
xchg
repnz
lods
arpl
cltd
xlat
cmp
inc
fsubrp
sbb
mov
ss
mov
xchg
fstps
cs
leave
mov
mov
sahf
ja
sysret
dec
out
inc
test
nop
xchg
xchg
aas
in
mov
cmp
adc
sahf
push
ret
push
push
int
test
daa
pop
xor
jnp
popa
mov
cs
mov
test
mov
push
adc
clc
bound
jo
adc
mov
loope
xor
pop
je
mov
inc
aaa
sub
push
pushf
cmpb
push
jmp
outsb
scas
mov
push
adc
jmp
outsl
in
sub
sbb
push
adc
pop
mov
push
adc
ret
sub
mov
xchg
ret
add
pop
pop
sub
lods
es
scas
hlt
dec
sahf
mov
fisubl
enter
jno
icebp
jns
sbb
enter
push
outsl
xchg
mov
jmp
outsl
incb
pop
insl
mov
xor
aad
addb
lea
sti
cs
mov
pop
push
xor
add
inc
orb
adc
push
jge
cmpsl
leave
test
js
and
mov
das
pop
lret
movb
push
or
sub
xchg
cmc
imul
pop
mov
call
stos
test
xor
pop
jno
stos
test
repnz
out
push
pushf
popa
push
xchg
mov
stc
hlt
fdiv
adc
mov
pop
movsb
sub
cmc
ja
fistpll
or
sbb
add
orb
add
pop
mov
xchg
out
mov
or
cmp
or
mov
mov
pop
or
mov
popa
sub
in
sub
or
xchg
push
std
sub
flds
sub
sub
cmp
movsl
lods
decb
ret
cwtl
popa
xchg
push
xor
movl
shrb
aam
push
adc
les
sbb
adc
sbb
lret
mov
loopne
hlt
pushf
sub
cld
jl
xchg
leave
or
subb
mov
adc
dec
hlt
pop
mov
push
dec
dec
xlat
mov
lock
dec
movl
add
jno
xchg
lret
fs
add
fildll
fiaddl
or
jns
jg
in
push
test
mov
push
mov
loope
ret
and
std
sub
into
or
adc
nop
mov
jmp
push
mov
push
test
ret
orb
mov
call
jmp
mov
push
stos
dec
mov
ret
push
push
xchg
aad
icebp
ja
sub
xor
inc
popf
add
je
adc
fldcw
push
xchg
roll
jnp
cmp
int3
data16
mov
adc
push
daa
ret
aad
mov
push
mov
ficompl
rcrb
mov
fwait
je
and
addr16
mov
loop
ljmp
test
fiaddl
shll
cs
loop
pushl
ja
aam
cmpsl
pop
push
pop
mov
dec
sti
gs
sbb
loop
icebp
mov
push
sbb
enter
xor
out
jbe
jecxz
imul
jnp
jg
push
cltd
xchg
xchg
xchg
mov
int
loopne
and
mov
aas
cld
addr16
push
fs
push
fwait
xor
sub
lea
fstpt
and
fistl
sub
xor
sbb
mov
xor
cmpsb
push
sub
movsl
pop
xlat
mov
test
gs
pushf
out
jg
scas
push
fadd
mov
mov
adc
jmp
scas
mov
xor
mull
and
and
lea
push
jae
pop
ljmp
test
std
test
inc
subl
sub
mov
sbb
pusha
mov
dec
mov
pop
mov
cmpsl
ficoms
incl
sbb
mov
xabort
ljmp
sbb
mov
push
pop
lock
ja
sbb
ret
pop
fistps
add
jo
test
adc
xor
iret
mov
xchg
push
mov
mov
jno
and
pop
imul
jecxz
insl
pop
outsb
ljmp
leave
lods
shll
adc
sarl
dec
jnp
pop
scas
fstps
out
jo
pop
jne
rcll
gs
xchg
aam
mov
sti
add
in
aad
sub
cmp
push
xchg
nop
push
jns
sub
rcl
adc
inc
mov
and
call
lret
or
mov
push
or
popf
cmp
xorl
std
rorb
stc
pop
inc
mov
icebp
jnp
test
in
mov
dec
add
pop
add
cmpsb
pop
mov
xchg
bound
aad
cwtl
in
fdivl
jmp
mov
mov
lahf
jg
xor
mov
mov
sub
jl
cmp
in
popl
adcb
cmpsb
leave
adc
cmpsb
leave
add
pop
pop
dec
jg
mov
lods
rorb
sub
decl
push
leave
add
inc
or
xlat
icebp
jnp
mov
cmp
sbbb
add
add
sbbb
pop
clc
jns
lods
xor
ret
dec
push
cs
fistps
xor
jl
bound
mov
dec
push
cs
jo
es
mov
in
je
shlb
add
inc
inc
or
popf
repnz
xchg
inc
cli
inc
or
xlat
icebp
jnp
mov
cmp
lret
sar
add
dec
push
das
aad
repz
dec
iret
cmc
adcb
shll
mov
xchg
lret
mov
sbb
cmp
shrl
mov
pop
out
add
dec
inc
mov
int
imul
cmpsb
es
mov
popf
mov
in
mov
call
ja
lock
enter
dec
ja
mov
mov
out
out
or
mov
arpl
jp
and
adcb
sqrtps
xchg
test
rorb
adc
adc
out
testb
sbb
mov
cltd
out
inc
ja
adc
je
hlt
cmpl
xchg
dec
mov
addl
push
cmp
xchg
inc
popf
sti
inc
in
push
xchg
xchg
cli
sub
sbb
pop
icebp
mov
push
repz
or
adc
xchg
fcom
rcrb
xlat
push
sub
push
popf
stos
test
add
fcmovu
mov
ret
jle
dec
mov
pop
cmp
fstpt
les
clc
sbb
push
mov
pop
in
or
jno
or
in
jns
mov
mov
sarl
iret
push
cld
jbe
xor
les
sbb
cmpsl
jg
inc
or
shll
loop
cmp
pop
jge
data16
xchg
mov
push
jo
fwait
int3
loop
loope
cmc
jo
stc
push
sub
fidivrl
mov
sub
fimuls
cmp
lea
sub
loop
repz
inc
popa
hlt
test
push
int
scas
pop
inc
pop
lret
add
mov
out
loop
int3
mov
inc
cmpsl
stc
movsl
popf
lcall
inc
push
add
iret
jb
xchg
scas
stc
pop
mov
push
stc
fistps
int
imul
xchg
or
mov
or
xchg
jo
aad
cmp
gs
xor
aaa
mov
xor
dec
cwtl
adc
test
and
imul
inc
xor
data16
outsb
in
push
xor
cmp
lcall
out
scas
xor
icebp
inc
shrl
flds
insb
test
lds
lahf
and
cmp
fnstsw
push
xor
mov
out
cmp
inc
mov
xchg
xchg
mov
add
mov
jo
pop
adc
ds
xchg
xorb
pop
loope
lds
mov
mov
rol
sti
pop
mov
pop
cmpsb
lret
jp
out
das
mov
push
aad
cmp
adc
jne
xchg
test
mov
sub
sbb
outsl
shll
jecxz
mov
sahf
frstor
jp
cmpsl
mov
icebp
idivl
pop
aas
mov
andb
daa
shll
mov
lock
jecxz
enter
jg
pop
xchg
fsubrs
sub
pop
movsl
test
xor
add
pop
std
in
mov
les
push
sub
add
jg
jmp
xchg
pushf
es
mov
inc
or
in
xchg
hlt
call
sub
rcrb
movb
pop
push
in
nop
sbbl
ja
dec
pop
sub
lods
fsubl
add
mov
cmpsb
and
add
sbb
add
jne
ljmp
push
add
hlt
jnp
push
mov
mov
fwait
xchg
or
push
jno
or
mov
xchg
rclb
shll
fs
or
or
sub
dec
jmp
lahf
inc
jle
sbb
cmp
xchg
mov
loopne
lds
cs
inc
shrb
mov
sub
jge,pt
iret
sbb
or
ds
inc
fdivs
and
pusha
push
add
push
mov
sub
in
nop
inc
sbb
jge
iret
sbb
jae
fisubrl
js
addr16
push
sub
push
jecxz
shlb
les
out
lcall
jge
inc
jg
push
call
lods
fwait
xchg
hlt
mov
cmc
ljmp
lahf
cmp
pop
out
scas
push
xor
add
dec
in
mov
movsb
mov
jns
jle
mov
and
mov
add
xor
insb
mov
pop
int
scas
cmpsb
aas
ss
lahf
leave
sbbb
adc
negb
mov
xor
add
es
sldt
cltd
jo
pop
adc
pop
bound
push
inc
pushf
fistps
stos
xchg
ss
nop
in
jne
decb
sub
movsl
cmp
push
cmpsb
inc
in
das
das
xlat
xchg
sahf
add
ljmp
sbb
inc
arpl
or
adc
in
sti
push
dec
jne
mov
fmull
mov
nop
mov
xlat
sub
jle
jnp
adc
orl
mov
insb
ficomps
negl
popa
add
outsl
cmp
aas
or
aad
sub
test
insb
jmp
mov
data16
jo
cmp
cmpl
pushf
fadd
ja
mov
and
adc
jb
adc
mov
rorb
inc
push
insl
movsw
cmpsl
lahf
pop
filds
or
mov
mov
idivl
das
inc
fcomip
xchg
movsl
popf
in
xchg
dec
inc
pop
mov
sahf
push
notb
repz
test
sub
dec
jae
add
sbb
insb
lds
jecxz
mov
test
cli
stc
jae
mov
insl
test
mov
pop
clc
add
pop
mov
arpl
je
aam
iret
xor
pop
sub
outsl
push
leave
addr16
push
sub
push
test
push
add
gs
pop
xor
addb
lock
sbb
sbb
pop
fbld
xchg
mov
rcr
pop
hlt
or
out
pop
fs
test
jne
out
in
das
add
imul
call
popa
pop
and
sbbb
pushf
mov
jae
xchg
notb
pop
push
out
pop
sub
add
sbb
mov
xor
insl
push
movsb
sub
jmp
jecxz
fildl
bound
icebp
xor
mov
imul
call
lret
mov
nop
loope
clc
lds
sub
adc
inc
repnz
and
aam
dec
ljmp
mov
add
sub
ja
inc
lods
fs
shl
lret
insb
push
push
mov
mov
movsb
adc
mov
xlat
ja
mov
aam
dec
imul
inc
movsb
cmpsl
xor
cli
hlt
inc
mov
add
adcb
sub
ja
push
pushf
push
xor
mov
orb
add
add
sub
stos
jo
pop
adc
pmullw
fwait
pop
adc
fwait
pop
adc
adc
adc
and
lock
mov
mov
pop
int3
je
push
je
jne
shl
sub
lea
lcall
add
and
fmull
mov
jg
mov
pop
jmp
lods
adc
inc
pop
push
pop
pop
xor
push
addr16
addb
aas
add
lahf
xlat
sub
adc
or
adc
daa
inc
fwait
mov
add
inc
mov
adc
sbb
mov
stos
loopne
xchg
mov
push
pop
mov
inc
add
pushf
push
in
loopne
clc
imul
js
mov
fimull
push
adc
xchg
cmp
inc
shlb
sar
mov
adc
adc
adc
cmp
cmpsl
or
mov
xchg
or
adc
adc
addr16
sar
scas
xchg
enter
xchg
cmc
mov
adc
mov
cmp
fdivrs
mov
fxch
dec
and
rorl
addl
jae
pusha
xchg
call
lods
xor
flds
xchg
push
inc
inc
inc
inc
dec
mov
pop
int3
fwait
pop
adc
pop
adc
pop
call
adc
aad
and
clc
xlat
add
les
dec
je
xchg
mov
mov
jns
ret
pop
rcrl
push
cmpsb
jbe
mov
push
adc
dec
and
lods
push
cltd
add
in
rep
loope
insb
jae
mov
mov
xor
jnp
mov
sub
xchg
lret
int3
mov
out
pushw
push
sbb
xlat
lods
push
mov
insl
imul
push
insl
nop
fadd
movsl
push
adc
xchg
fcompl
inc
in
add
clc
adc
adc
adc
mov
xchg
and
in
push
mov
push
xchg
adc
push
adc
xchg
pop
fnstsw
dec
or
lods
pop
out
push
mov
ret
mov
sub
imul
adc
push
adc
in
mov
xchg
pop
repnz
loopne
cmp
fmulp
orl
jbe
jnp
push
sbb
dec
popf
pop
xor
mov
and
test
dec
ss
xchg
push
nop
cltd
cmovp
lods
adc
outsb
and
mov
dec
or
xlat
lahf
rorb
or
cmp
call
pop
push
adc
js
test
inc
jg
pop
or
dec
dec
inc
aad
add
loop
push
notb
mov
inc
sar
ss
inc
insb
imul
ss
dec
pop
adc
mov
adc
sub
insl
rcl
test
push
push
inc
fistps
out
mov
mov
mov
mov
mov
mov
xchg
sbb
fstpl
pop
jecxz
icebp
cmc
and
js
movsl
aas
mov
into
addr16
loope
dec
mov
inc
mov
push
mov
jmp
aas
incl
adc
xchg
lcall
out
shll
adc
mov
add
or
lock
push
mov
shll
pop
push
adc
mov
pop
das
pop
test
mov
sub
movsb
sbb
mov
inc
pop
sub
shl
int
aam
and
inc
scas
roll
or
xor
adc
lds
sbb
lds
push
push
int
rcrl
fucom
rorl
sti
jmp
out
popf
insb
pushf
mov
mov
jmp
js
push
loope
cli
hlt
sahf
fwait
pop
inc
mov
inc
call
and
push
cli
hlt
call
jge
sbb
xacquire
mov
shr
pushf
lret
mov
adc
daa
mov
pop
xchg
shr
and
shll
pop
notl
lea
push
push
adc
sbb
xchg
jns
xchg
inc
fsubr
and
pop
loopne
jg
call
jg
sbb
popf
jge
hlt
shrl
mov
lds
pop
subl
push
mov
mov
adc
and
rol
push
subl
cld
sti
cmp
jge
ljmp
loop
mov
adc
adc
add
call
outsl
inc
cmp
mov
pop
xor
cmp
iret
adc
hlt
sub
clc
jne
inc
aad
mov
inc
jnp
sti
push
cmp
and
scas
ret
loopne
cmp
andl
in
dec
dec
mov
sbb
daa
je
out
xchg
dec
test
jmp
test
mov
jecxz
and
inc
movsl
loop
push
and
fcomi
sbb
call
stos
sub
rcl
rclb
into
adc
dec
adc
cmp
ret
sub
inc
imul
xor
add
push
call
sti
or
pop
fildll
mov
mov
cmp
and
inc
cmpsb
jae
mov
mov
lret
jb
sbb
mov
scas
aas
in
mov
mov
push
in
sbb
movsb
mov
aam
rorl
mov
adc
xor
add
xor
lret
dec
jbe
mov
out
cmp
dec
in
mov
lds
out
pop
or
xor
daa
mov
int
movsl
popf
in
mov
dec
je
jae
std
lret
stos
stc
sub
lock
scas
push
lret
enter
rolb
mov
mov
fcmovu
inc
sar
inc
mov
fsubp
shll
int3
insl
lods
push
mov
or
aad
loope
sub
dec
xor
adc
mov
dec
repz
pop
xor
lahf
scas
aad
repz
push
mov
and
cmp
cmp
sbb
push
push
aas
fs
repnz
fidivs
std
sbb
fwait
jmp
lret
out
cmp
and
loopne
lock
mov
lret
orb
push
hlt
jb
aaa
xlat
adcb
cmpl
pushf
cmp
jno
inc
sbb
stos
mov
push
cmpb
nop
rcr
sahf
lods
fabs
and
pop
sahf
pop
inc
mov
lcall
movsb
mov
dec
jo
lahf
repnz
inc
cmp
imul
mov
mov
lret
fistl
mov
ja
push
jge
roll
push
mov
movsb
in
pop
aas
jg
mov
jp
std
push
lea
sbb
rclb
push
xor
and
sbb
incb
jecxz
lea
into
pop
xorb
shll
adc
inc
xlat
push
lea
shll
add
pop
ds
xorb
shll
vmovsd
adc
sub
mov
ja
adcb
cmp
add
pop
movsl
fld
mov
xor
cmp
insl
lods
pop
mov
std
cli
hlt
cmp
movswl
in
scas
shll
sbb
jne
rclb
push
mov
leave
les
fistpl
jb
push
jne
lods
mov
aad
mov
jno
xchg
fiadds
mov
das
mov
push
jne
lods
mov
aad
mov
jno
xchg
fiadds
mov
das
mov
push
jne
lods
mov
aad
mov
jno
xchg
fiadds
mov
das
mov
push
jne
movsb
mov
aad
mov
jno
xchg
fiadds
or
stc
dec
mov
pop
das
pop
js
cmp
std
push
xchg
or
outsl
jnp
cmc
jge
hlt
push
movl
mov
imul
mov
or
addl
fcmovnb
mov
xor
shl
adc
std
cld
call
mov
add
clc
test
push
xlat
xchg
inc
sub
clc
sbb
xchg
stc
icebp
in
shrl
js
jl
mov
lcall
sahf
mov
push
daa
hlt
cmc
negb
stos
shrl
xchg
popf
mov
mov
je
mov
dec
test
cltd
pop
adc
xchg
insl
mov
aaa
add
pop
inc
scas
inc
dec
mov
fisttpl
jp
mov
daa
cltd
in
push
cmp
outsb
mov
xchg
pusha
movsl
jns
aaa
scas
fstps
daa
jl
push
add
imul
adc
mov
dec
gs
xchg
jp
mov
mov
int3
mov
ret
rcrl
push
sub
aaa
addr16
xor
notl
jmp
dec
jbe
cmpl
or
sbb
daa
dec
arpl
mov
pop
rcl
daa
sar
adc
adc
xchg
fcmovu
or
fiaddl
cwtl
ror
lcall
div
sahf
push
jno
xor
and
mov
lea
push
or
or
mov
iret
dec
push
add
outsl
stos
mov
mov
sarb
cmpsl
stos
pop
fcoml
in
shll
cmp
das
adc
rclb
adc
mov
xor
aaa
xor
pusha
in
push
in
loopne
movsb
loop
jo
stos
and
std
add
push
and
inc
negb
fstps
inc
fwait
movsl
mov
push
adc
fcmovu
fcoms
sbb
gs
add
adc
repnz
or
lea
xchg
jmp
or
xor
mov
xor
jns
mov
mov
std
add
inc
scas
cmp
out
fcomi
add
cmp
jb
push
mov
leave
mov
add
jo
xchg
rolb
inc
add
out
lods
sub
cmpsl
sub
popa
mov
movsl
imul
mov
push
lret
test
xchg
hlt
add
adc
sub
inc
dec
mov
jmp
subl
sbb
mov
mov
jmp
and
inc
mov
mov
lds
xor
aaa
add
push
rcll
dec
jmp
mov
add
xor
sahf
xchg
mov
lret
lea
pushf
pop
adc
rcrb
ret
jecxz
or
sub
add
or
fwait
hlt
call
dec
imul
push
adc
xor
in
pop
pop
adc
sub
pop
lods
in
pop
pop
adc
cmp
or
xchg
jl
add
and
pop
mov
add
fadd
jne
shlb
std
mov
jge
jmp
or
pushf
das
push
inc
and
dec
pop
xor
mov
pushf
pop
adc
sub
cmova
gs
sbb
push
loop
call
pop
adc
dec
or
sbb
int3
popf
cmp
mov
mov
xor
jmp
jmp
pop
movsl
xchg
push
jno
pop
bound
popa
fldl
pushf
pop
adc
adc
push
mov
or
into
pop
pop
hlt
call
pushf
pop
adc
mov
push
push
jecxz
or
and
add
inc
lea
pop
pop
adc
or
sbb
mov
pop
pop
adc
je
mov
pushf
pop
adc
es
pusha
dec
mov
addb
jbe
test
sbb
xor
pop
or
clc
idiv
sbb
rorb
in
cmp
bound
xor
stc
gs
lods
sbb
fisubrs
push
out
arpl
mov
loopne
fdiv
cmpsl
stos
xchg
mov
lock
push
xchg
jno
cmp
push
adc
jnp
cmp
push
jecxz
in
loop
or
in
or
xchg
mov
and
push
lcall
sub
mov
loopne
jmp
xor
ret
jmp
mov
stc
xchg
lods
pop
rcll
test
adc
pop
loop
scas
xor
fdivl
dec
insl
xchg
sub
mov
or
into
ljmp
inc
xor
push
xchg
mov
mov
sbb
bound
jecxz
push
scas
xchg
out
test
push
loope
cmp
cltd
add
pop
push
stos
xchg
mov
test
stos
jb
fcmovu
push
mov
inc
jecxz
ja
into
or
lods
mov
mov
xchg
xchg
pop
iret
das
sub
out
ljmp
ds
enter
movsb
inc
int
data16
inc
mov
iret
int
dec
imul
mov
xchg
lret
iret
adc
lret
loopne
sub
jp
sbb
and
push
cmp
fsubp
xchg
std
mov
into
inc
pop
mov
fimuls
xor
addr16
test
push
bound
insl
test
push
sti
lds
adc
outsb
cli
cmp
pusha
xchg
push
in
call
or
jne
cltd
cli
xor
adc
fwait
fsts
movsl
inc
imulb
rorb
int
cs
loopne
mov
repnz
fimull
xchg
shlb
mov
jmp
lcall
pop
adc
or
mov
pushf
sub
mov
xchg
xchg
out
aas
arpl
lea
loope
in
sbb
aas
sahf
xor
movsl
dec
sbb
das
pop
mov
out
and
imul
out
jo
xor
jne
stos
call
stos
cmp
push
dec
push
adc
lret
test
xchg
mov
pusha
and
adc
xchg
lret
lea
cmp
adc
and
jle
add
xchg
and
loop
cmpsl
addb
les
int3
jb
lret
push
arpl
or
pop
movsl
adc
xor
movsl
and
leave
lea
add
add
leave
pop
das
or
in
test
xlat
pusha
clc
adc
pop
imul
xor
xchg
mov
jl
movhps
inc
arpl
mov
sti
addb
pusha
sub
mov
xor
hlt
call
jecxz
fwait
mov
inc
or
pop
mov
aam
aad
sub
setl
cmpb
movsb
jg
popf
fisubrs
mov
std
mov
movsb
push
push
pop
lret
lods
shl
and
hlt
jg
movsb
or
mov
mov
jmp
movsb
adc
pusha
pop
adcb
mov
cs
cmp
ljmp
add
das
pop
push
sti
out
in
and
pop
adc
out
and
shrl
xchg
or
mov
xlat
and
and
or
call
lds
popl
cmp
mov
add
push
push
ss
rcl
xchg
shlb
lds
jg
test
cli
hlt
inc
jmp
mov
jge
xchg
or
je
stos
push
cs
sbb
push
push
mov
jnp
or
cmc
ljmp
pop
jge
call
std
push
inc
pop
adc
idivl
fnstsw
and
pop
adc
loopne
inc
pop
adc
mov
cmp
and
cmp
or
pop
adc
cmp
sbbb
into
out
hlt
cmc
pop
pop
mov
int3
push
push
mov
pop
mov
add
dec
inc
xor
in
pop
pop
adc
sbb
pop
push
in
cli
in
in
pop
pop
adc
ljmp
popa
call
mov
adc
fld
mov
lcall
insb
loopne
clc
push
jne
cltd
push
dec
or
push
adc
and
push
adc
push
lods
test
or
fs
int3
dec
mov
mov
add
push
adc
jno
dec
rcrl
mov
lock
sbb
adc
xchg
cmp
sub
adc
adc
mov
mov
pop
cld
sbb
add
pop
xchg
aad
push
xor
or
jle
xor
lret
pop
push
test
insb
pop
lret
cmp
fnop
mov
inc
addr16
and
lret
das
pop
mov
pop
adc
add
dec
adc
or
jns
data16
lds
xor
pop
addl
adc
fcoms
push
out
popa
outsl
xorl
daa
jecxz
clc
mov
sbb
push
pop
mov
lret
pop
inc
jmp
data16
lods
adc
mov
adc
lret
iret
jne
cmovb
adc
adc
cmp
dec
loop
ljmp
inc
jno
lcall
jecxz
test
rclb
push
adc
mov
sti
sbb
mov
stos
test
add
popf
jmp
fs
xor
fs
mov
add
cs
mov
adc
adc
xchg
sbb
aam
pop
pop
adc
jg
push
sbbb
pop
adc
test
push
scas
das
cmpb
jnp
cmp
inc
adcl
aad
cmp
xchg
push
mov
ret
mov
adc
push
adc
lret
mov
mov
neg
pop
push
loop
int
int3
pop
fwait
les
push
adc
dec
mov
adc
sub
inc
dec
push
cmp
call
mov
jle
popl
addr16
sbb
sbb
je
add
icebp
xchg
stc
and
add
push
adc
pop
nop
xlat
outsb
or
negb
std
les
push
adc
sbbb
test
or
lret
popf
pop
jne
add
clc
notl
mov
jmp
mov
mov
std
fiaddl
or
jno
jg
mov
dec
les
push
adc
or
cs
mov
push
aam
cmp
insl
cld
jno
jg
lea
xor
sub
mov
cli
hlt
call
adc
dec
fs
push
in
jg
adc
ret
mov
inc
jns
and
shl
sarl
dec
pop
or
rol
test
cli
hlt
push
das
pop
mov
push
adc
mov
leave
jmp
pop
cmp
jg
test
or
pop
xor
jo
jge,pt
xchg
mov
cmc
and
adc
push
arpl
das
pop
cmp
insl
pushf
adc
orb
fistl
push
adc
arpl
cwtl
add
add
imul
inc
ja
insb
roll
cmp
xor
stc
insl
pop
jno
jg
lea
or
adc
ja
shlb
arpl
cld
je
jo
jle
mov
jmp
adc
jge
aad
ljmp
adc
cmp
sar
inc
mov
mov
inc
or
imul
jnp
out
push
add
adc
jp
orb
mov
push
adc
test
adc
sbb
push
adc
pop
pop
adc
sbb
pop
adc
xor
sub
mov
adc
dec
notb
adc
stos
dec
add
stc
add
test
push
inc
add
dec
add
sub
scas
mov
xor
movsl
mov
jle
insb
imul
stos
mov
in
pop
pop
adc
adc
adc
pop
adc
adc
mov
jns
push
xchg
hlt
fbstp
mov
clc
push
es
icebp
lahf
xchg
inc
mov
cmp
es
cwtl
jp
add
sbb
adc
push
lock
adc
int3
cmp
adc
adc
jmp
sbb
push
add
add
outsl
das
or
xchg
int
push
mov
xchg
sub
hlt
sbb
pop
adc
test
lods
pop
xor
dec
jl,pn
pop
ret
in
orb
mov
and
jb
mov
lret
adcb
stc
sub
pushl
sbb
outsl
jae
fcoms
push
adc
popa
dec
outsl
fisubrs
rcrb
repz
inc
sahf
mov
lock
lcall
rcrb
les
push
adc
inc
js
cmp
xchg
test
loopne
test
neg
sub
cmc
jge
xchg
adc
mov
lret
call
sbb
wrmsr
or
jmp
rcl
mull
cs
lock
std
data16
fwait
jmp
loopne
pop
adc
bswap
sbb
adc
icebp
aam
leave
dec
push
xor
dec
stos
int3
iret
fs
inc
aaa
pop
les
in
mov
leave
mov
and
and
ds
inc
scas
outsl
cmp
sbb
adc
loopne
push
fisttps
loope
fcompl
push
adc
ret
cltd
decl
fsubl
pop
pop
and
mov
xchg
daa
scas
xor
jne
out
xchg
int3
pop
out
sbb
aam
jbe
mov
mov
pop
jmp
and
loop
int
and
pop
adc
xchg
nop
sbb
adc
lds
inc
pop
adc
adc
loop
adc
pop
adc
adc
mov
shlb
ds
pop
cs
push
insb
stc
movsl
add
cwtl
cs
mov
js
icebp
lods
sbb
outsl
jge
xor
and
pop
adc
push
adc
add
sbb
and
adc
pop
adc
hlt
cmpsl
sqrtps
lds
adc
movsl
call
in
sbb
ja
mov
rol
mov
mov
std
push
mov
sbb
adc
andnps
cli
hlt
jmp
fildl
or
pop
mov
dec
shl
inc
andl
call
sbb
bound
ljmp
pop
mov
xchg
call
and
call
lock
dec
shrb
das
pop
adc
popf
add
das
pop
push
aas
popa
pop
or
add
pop
adc
mov
lds
frstor
jl
call
sub
sub
push
test
shll
out
xchg
push
inc
in
clc
pop
in
repz
add
push
adc
andnps
cli
hlt
incb
inc
lea
nop
add
xchg
add
cmc
xor
loop
andl
imul
jmp
add
rorb
movsb
ljmp
dec
int
loope
xchg
inc
pop
adc
je
inc
pop
adc
popa
sub
jle
dec
adc
push
adc
nop
xlat
arpl
sbbb
inc
mov
jae
div
je
jb
cli
cmpsl
adc
in
sbb
or
adc
add
xor
adc
dec
inc
pop
adc
insb
insl
xor
daa
fsubrl
mov
dec
mov
test
in
pop
pop
adc
or
adc
pop
mov
and
push
adc
scas
movsl
loope
sbb
sub
loope
sub
pop
jns
add
xchg
jmp
pop
in
sbb
ja
and
xor
adc
insl
push
es
or
movsb
movsb
mov
popf
push
lock
jl
lret
into
cmp
in
sub
pop
imul
pusha
jp
adc
pusha
test
arpl
jecxz
jns
push
les
add
pop
adc
push
stc
sbb
lea
lods
jbe
in
call
sti
movsl
xchg
and
repnz
pop
push
sub
hlt
shlb
push
push
out
xor
adc
sub
mov
pop
fs
adc
pop
pop
jmp
sbb
adc
sbb
mov
push
inc
mov
sbb
enter
in
fsubp
in
cmp
or
xchg
mov
adc
pop
jbe
sbb
mov
add
call
sbb
out
push
arpl
adc
pop
adc
pop
add
push
adc
shl
xor
sbb
loopne
push
adc
sub
stos
pop
mov
mov
dec
aaa
jno
cmp
jmp
adc
mov
cmp
xchg
or
and
jecxz
jle
aam
andb
imul
out
adc
dec
das
jae
xlat
insl
jbe
sbb
mov
fiadds
xchg
push
dec
fcomps
cmp
aaa
insl
jb
jmp
mov
add
out
scas
hlt
cmp
cld
sti
mov
xlat
push
idivl
sarb
xchg
jno
cmp
adc
pop
adc
adc
xchg
addb
mov
ret
pop
rep
push
shll
jne
xchg
pop
das
pop
inc
addl
pop
adc
push
in
movsb
in
rcrb
fcomps
cwtl
cmp
mov
add
in
call
cwtl
xor
addb
adc
fildl
adc
adc
addr16
add
add
add
adc
icebp
fildl
or
int
int3
sbb
mov
inc
or
jb
pop
inc
mov
pop
test
jle
push
arpl
ret
add
ljmp
repz
gs
hlt
inc
out
sbb
add
mov
mov
shll
lock
ds
lcall
xor
jno
popf
pop
adc
xchg
pushl
popf
pop
adc
dec
cld
adc
adc
shrl
popf
pop
adc
add
push
adc
je
pushf
and
popf
pop
adc
mov
lea
call
call
adc
lcall
pop
addb
ret
jg
popf
cmp
sub
jb
pop
inc
jns
xor
mov
jge,pt
rcrb
outsb
arpl
sub
orl
pop
push
loop
mov
sub
cmpsb
cmc
ljmp
pusha
das
mov
push
push
stos
std
cld
push
out
jmp
and
sub
imul
jnp
insl
sbb
and
cli
push
in
lds
jmp
js
push
dec
int
adc
xchg
pop
jp
mov
push
pop
loop
scas
jmp
jge
cmp
jae
xor
mov
loopne
or
sti
loopne
pop
adc
xchg
and
in
loop
or
popf
pop
adc
ret
push
adc
push
cmp
dec
mov
movsb
jno
inc
idivb
push
arpl
adc
adc
mov
pop
jecxz
popf
pop
adc
xchg
jns
pop
xor
mov
inc
aad
adc
mov
pusha
inc
pop
lret
add
roll
aam
popf
pop
adc
add
xchg
inc
or
int
mov
mov
stos
push
adc
shll
push
jno
loop
sub
rorb
cs
hlt
nop
push
jae
in
scas
sub
pop
add
les
movsl
bound
mov
sbb
push
fldt
and
mov
or
imull
movsb
or
popa
mov
xor
adc
jae
cmp
andl
mov
out
mov
adc
cmp
fcomps
lock
xchg
dec
outsl
fdivp
stos
mov
out
insl
jle
icebp
not
xor
js
dec
loope
pop
dec
lahf
sti
cmp
stc
pop
and
add
cmpsb
movsl
gs
fs
push
adc
mov
loopne
int
orl
decb
and
xlat
inc
jo
cltd
pop
aad
pop
pop
mov
sub
shl
lods
and
jns
nop
dec
dec
dec
inc
sbb
push
cmpsl
mov
leave
adc
or
lods
pop
dec
xor
push
xor
mov
or
dec
jnp
mov
sub
std
adc
sbbb
jno,pn
inc
xchg
ljmp
add
xchg
jl
push
dec
sub
pop
pop
scas
and
push
dec
jo
sub
pop
adc
mov
adc
adc
or
inc
repnz
outsl
fstps
dec
les
dec
fsubrl
scas
xlat
jge
popa
jns
jl
pop
jg
cld
in
sbb
js
add
mov
dec
scas
fidivrs
xor
cli
xor
sbb
ficoms
cmpsl
pop
xlat
add
jmp
jg
mov
push
adc
imul
shll
mov
pcmpeqb
mov
xabort
jmp
jg
lods
sbb
mov
call
andps
pop
pop
test
push
imul
stos
mov
jecxz
sbb
clc
push
dec
lds
mov
sbbb
shlb
push
adc
inc
and
lds
pop
and
push
popl
aam
sbb
mov
sub
pop
mov
lret
dec
call
pop
pushl
mov
call
cmovo
lds
push
popf
pop
pop
hlt
xchg
cmpsl
popl
jae
loope
out
cmc
call
out
bound
les
add
push
adc
or
das
pop
mov
es
andb
fdivl
adc
or
das
pop
dec
add
add
add
ljmp
sbb
jg
inc
sbb
pop
das
enter
adc
and
call
sbb
dec
jg
test
bound
jle
pop
push
jmp
xchg
jmp
js
dec
push
sti
cmc
incb
or
sbb
sbb
out
clc
push
dec
jge
cwtl
in
sbb
mov
inc
cmc
addr16
dec
rorb
cli
cli
aas
inc
dec
push
dec
cmpsl
faddp
orl
mov
push
loop
inc
pop
imul
aaa
pop
hlt
hlt
loop
jmp
scas
call
icebp
mov
sahf
pop
adc
xor
push
les
cld
adc
adc
hlt
sbb
pop
fnstcw
jl
push
sbb
lcall
sbbb
sahf
mov
test
lret
xlat
fnstenv
inc
imul
or
jne
and
mov
jo
dec
push
jmp
pop
gs
add
lock
bound
pop
fs
mov
mov
das
in
pop
xchg
cmp
ss
push
loop
in
add
pushf
std
jbe
adc
out
dec
add
andl
or
sub
cmpl
pop
daa
and
adc
mov
loopne
lret
arpl
movsl
sbb
pop
pop
pop
mov
mov
mov
movsl
pushf
out
jg
test
push
adc
into
adc
mov
int
movsb
adc
adc
and
mov
inc
jle
subl
les
repz
lcall
fcomps
out
enter
iret
xchg
lcall
fsubp
xchg
and
mov
jne
mov
push
xor
into
sub
lock
sbb
pop
pop
adc
sub
jns
sbb
pop
adc
aam
push
dec
xchg
lea
mov
int
push
lcall
roll
call
xchg
fstl
pop
gs
test
xchg
cwtl
in
dec
mov
mov
pop
mov
clc
mov
pop
aad
or
and
jecxz
rcl
xlat
pop
call
jbe
adc
adc
xchg
jae
jnp
xchg
pop
enter
and
outsl
scas
gs
sub
jno
sub
iret
out
lods
add
je
js
flds
pushf
in
pop
pop
adc
sbb
pop
adc
aas
cld
ficoms
test
in
fs
aad
push
cmp
inc
xchg
arpl
les
xor
add
pop
jle
sbbl
cwtl
cmp
shlb
push
adc
push
push
les
pop
mov
popl
pop
out
shll
sub
inc
test
add
shlb
adc
pop
call
sbb
mov
pop
das
lock
pop
add
popl
aam
sbb
adc
mov
fwait
inc
fcomps
repz
test
std
push
xchg
mov
or
fsubrl
sbb
dec
mov
pop
mov
add
push
inc
int
xor
jge
mov
cmovne
cmp
lods
jns
js
std
jno
pushf
stos
fisubrl
pand
hlt
pop
dec
inc
arpl
out
sub
mov
test
fistpl
push
aam
call
xor
push
adc
movsl
add
pop
xchg
xor
in
sbb
xor
stos
cmpsl
hlt
call
psrlw
lds
adc
test
fwait
cld
in
fstpt
xor
imul
lds
mov
incl
push
add
mov
jo
jmp
lds
addb
mov
aam
call
icebp
out
inc
xchg
or
mov
xor
roll
clc
aad
les
push
test
add
xor
mov
shll
pusha
add
addb
shlb
inc
push
clc
imulb
call
and
int3
jb
sub
rcll
mov
hlt
jo
adc
add
repz
and
sbb
cli
cmpsl
adc
in
sbb
or
adc
add
dec
jecxz
jmp
jmp
mov
sbb
xlat
cltd
mov
xor
adc
jb
inc
sub
xlat
xchg
mov
pop
inc
cmp
cmp
cmp
imul
ja
bound
rorl
stos
adc
in
iret
fcmove
mov
sbb
xor
pusha
inc
pop
sbb
clc
inc
or
das
in
sub
ss
addl
sub
test
popf
cmp
loop
xchg
scas
add
mov
in
ja
adc
clc
std
mov
rcr
sbb
cmp
dec
jbe
fwait
divb
scas
cmp
inc
xor
fnsave
fsubp
adc
ds
ja
pop
test
pop
pop
adc
adc
jl
xchg
push
jae
sbb
shrl
jge
subl
fs
pop
adc
gs
js
and
fdivs
mov
fsubp
lods
lret
adc
mov
jo
pusha
mov
out
pop
add
rcll
ret
bound
ffreep
inc
ret
stc
xchg
xchg
cmp
addr16
gs
insb
xchg
cltd
xor
cmp
jmp
cld
adc
adc
lock
push
xchg
arpl
notb
or
or
cmpsl
ja
sahf
lcall
lods
les
adc
xchg
js
dec
dec
jecxz
jbe
daa
dec
adc
jne
aas
lods
jnp
insl
mov
and
jecxz
call
xchg
xchg
cmp
sub
xchg
mov
push
lea
push
pop
dec
ljmp
cmpb
fst
fildl
xlat
arpl
xor
push
pop
pop
cmp
out
mov
mov
test
pop
icebp
dec
sti
std
mov
jge
aam
fstpl
repz
push
and
xchg
jl
jbe
and
fdivrp
mov
inc
inc
mov
add
mov
mov
cwtl
mov
out
shrb
inc
test
jle
or
inc
push
and
add
push
pop
cli
mov
in
sbb
cmc
in
sbb
push
call
hlt
mov
jge
adc
shll
sbb
mov
jg
mov
sar
hlt
decl
pop
je
aam
call
sbb
int
cmp
mov
jg
pushl
pop
pop
adc
pop
ds
pop
pop
adc
sbb
int
mov
push
insl
sbb
aas
xchg
in
insl
test
mov
sahf
mov
push
cld
in
pop
das
dec
xchg
pop
incl
cmpsl
popl
jns
mov
cli
hlt
mov
popf
pop
adc
or
lock
pop
adc
enter
xor
cmp
rcrl
and
or
or
incb
mov
inc
mov
or
xor
pop
or
jg
mov
adc
add
pop
adc
cmc
add
push
adc
sub
mov
cmpsl
or
das
pop
adc
push
lea
dec
and
js
lds
cli
xchg
or
addr16
lds
into
loope
pop
pop
popa
call
mov
pop
adc
shl
sbb
cmp
push
push
mov
call
loopne
jl
loope
shr
cmp
xchg
adc
aaa
adc
pop
adc
add
adc
adc
repnz
adc
or
js
mov
shl
fdecstp
enter
sti
clc
push
adcl
in
mov
int
test
std
push
out
stos
mov
mov
or
mov
divb
xor
mov
pop
pop
aad
add
push
xchg
rcrb
and
inc
cltd
push
xchg
xchg
lahf
pop
adc
push
sub
sub
lea
shlb
inc
stos
and
dec
je
lods
insb
imul
ljmp
xlat
push
mov
dec
dec
popf
ljmp
push
adc
xlat
cmp
es
test
fmuls
mov
sub
dec
dec
sbb
fsubl
enter
push
loop
xor
inc
jno
jo
loop
xor
movsl
cmp
dec
cmpl
xor
loop
lods
pop
sub
aaa
add
push
in
add
insl
iretw
sbb
inc
push
sbb
adc
stc
mov
popa
and
jne
push
mov
clc
sbb
add
arpl
hlt
or
xchg
jo
push
jl
cli
mov
popf
and
mov
lret
getsec
dec
dec
or
and
icebp
rorb
les
dec
fs
sbb
dec
cmp
pop
sub
sbb
notl
pop
bound
dec
or
insl
leave
repnz
gs
ret
mov
mov
xor
add
jecxz
xchg
int3
cs
adc
or
push
jg
imul
test
in
sbb
sbb
lds
pop
movsl
fldcw
xchg
loope
jno
lock
pusha
pop
add
pop
sbbb
mov
lahf
pop
pop
or
cltd
or
aaa
xlat
mov
insb
hlt
cmpb
in
push
push
pusha
dec
mov
add
lahf
sti
pop
stc
adc
lods
fdivl
fdiv
iret
out
in
pop
pop
adc
push
inc
push
fwait
pop
add
pop
pop
dec
test
cs
pop
add
rclb
popa
test
jecxz
mov
pop
and
adc
int3
mov
test
js
dec
pop
add
sarl
aaa
jno
sbb
or
and
clc
jo
hlt
adcb
mov
mov
rcrl
je
shrb
push
cli
mov
cmc
jne
cmp
pop
fimuls
xchg
add
nop
add
hlt
jns
test
popf
lret
mov
es
cmp
mov
cmp
pop
adc
mov
dec
inc
mov
push
cli
hlt
pushf
mov
dec
pop
sub
hlt
shl
int
aam
xchg
cwtl
cli
hlt
jg
sbb
adc
shll
bound
fidivrl
push
lcall
jge,pt
add
mov
popf
arpl
jg
test
mov
jne
jge
jbe
xlat
cld
iret
xchg
int
jg
mov
add
ret
mov
cld
imul
call
sbb
into
push
jne
popf
sbb
mov
sarl
hlt
or
ds
int3
xchg
push
lea
out
popf
cmp
jg
add
add
rcrl
sub
and
hlt
call
push
xor
sbb
das
mov
sar
cli
hlt
shrb
addb
lea
push
cs
or
in
mov
cs
ds
aad
ljmp
pusha
dec
sub
call
test
sbb
mov
in
aam
jmp
push
aad
aas
cli
push
xchg
adc
lea
mov
jl
js
in
sbb
cmp
mov
push
pop
jecxz
xchg
div
push
mov
and
xchg
outsl
mov
rcl
xlat
jp
dec
test
jmp
dec
mov
cmc
jb
sub
outsb
int
mov
sub
or
je
fidivrl
mov
lret
sbb
mov
jnp
mov
fidivl
mov
dec
or
xorb
inc
cmpsb
pop
fsubs
out
repnz
mov
aaa
dec
xor
xchg
mov
xor
jb
adc
movsb
leave
dec
gs
iret
in
in
stos
in
pop
pop
adc
mov
pop
pop
adc
cmp
pop
pop
adc
in
pop
pop
adc
loopne
add
out
add
adc
adc
ret
scas
sub
mov
cli
hlt
xchg
loopne
pop
pop
adc
ss
sub
pop
adc
push
jo
fstpt
push
inc
cmpsb
daa
pop
and
xchg
and
aam
cmp
in
jmp
push
adc
mov
mov
lods
mov
fstl
call
mov
in
fs
in
jae
dec
jecxz
xchg
test
out
mov
mov
dec
leave
leave
int3
sbb
adc
rolb
idivb
jle
mov
fstp
push
cmpsl
xchg
mov
mov
mov
sbb
outsl
lods
cmp
pop
pop
adc
dec
test
adc
sbb
icebp
test
pop
pop
jmp
cmpsl
fimuls
add
pop
adc
xchg
imul
pop
adc
pushf
push
mov
mov
add
or
adc
push
jge
aam
mov
movsb
add
cmpsb
mov
cltd
in
pop
pop
adc
adc
pop
in
pop
pop
adc
in
pop
pop
adc
dec
jg
lcall
cmp
movsb
xor
lcall
icebp
in
pop
pop
adc
ds
sbb
pop
push
loope
inc
or
inc
sub
scas
push
mov
mov
push
xchg
pusha
dec
sbb
popf
pop
adc
add
push
adc
push
nop
std
jp
in
pop
mov
dec
cmp
pop
imul
add
and
mov
xor
pop
push
insl
mov
jg
mov
jmp
movl
xor
pop
adc
cld
adc
adc
ljmp
add
push
hlt
and
popf
pop
adc
cmc
add
push
adc
sub
adc
xor
hlt
add
adc
adc
pop
adc
dec
add
push
adc
fcompl
int
hlt
call
adc
aam
adc
adc
mov
popf
pop
adc
popa
add
push
adc
sub
pop
adc
mov
mov
hlt
call
pop
adc
stos
pop
das
pop
jne
popf
pop
adc
adc
adc
adc
jne
pushf
pop
adc
shlb
cmp
pop
adc
add
pop
adc
iret
pop
mov
xchg
ja
pushf
pop
push
jo
xchg
enter
add
push
jecxz
inc
mov
clc
pop
jge
call
out
popf
push
jo
shlb
std
push
hlt
and
pop
adc
cmc
mov
out
push
cmp
out
pushf
mov
sbb
pop
push
call
movsl
scas
xor
add
and
jne
dec
pop
sub
pop
daa
mov
std
std
jne
insl
push
das
ss
sub
arpl
test
push
dec
mov
aas
rorb
push
in
outsl
push
add
dec
jae
ljmp
push
sbb
pop
aas
std
sbb
imul
adc
adc
and
or
movsl
sub
push
daa
sahf
aam
push
adc
push
int3
pusha
push
mov
jecxz
xchg
push
imul
lds
les
xor
adc
push
adc
mov
jmp
mov
jp
or
mov
lods
mov
xor
lahf
mov
dec
ficoml
add
add
in
out
daa
mov
repnz
add
or
xor
jb
adc
ja
loop
sarb
adc
cmpsl
hlt
rcll
xchg
jl
adc
adc
xchg
sub
jns
xchg
push
add
add
loop
test
mov
movl
jns
adc
xchg
popf
inc
adc
adc
pop
adc
xchg
ja,pn
pop
pop
mov
and
into
mov
pop
push
dec
sbb
push
adc
or
ja
div
out
in
and
dec
xlat
out
and
lret
addl
scas
gs
stc
pop
pop
loope
les
icebp
lcall
sub
or
sbb
xor
pop
and
push
arpl
cmpsl
dec
leave
push
mov
sbb
mov
xor
sbb
pop
je
dec
push
pop
sbb
in
jbe
dec
pusha
jecxz
cmp
dec
fdivrp
add
and
lahf
add
mov
imul
xchg
pop
add
rcl
hlt
adc
pop
pop
fs
shll
dec
stos
fcoml
push
adc
push
adc
hlt
pop
sbb
sbb
cmp
inc
imul
in
and
lock
nop
mov
popa
pushf
call
movsb
loopew
loopne
push
adc
out
push
movsl
aad
xor
lea
repz
lods
mov
jg
inc
cmp
xchg
jae
imul
scas
mov
add
fcoms
push
adc
hlt
loopne
movsb
mov
das
mov
cmp
push
lret
dec
fisubl
loop
outsb
dec
xor
outsb
mov
push
adc
add
inc
push
stc
and
js
mov
sbb
mov
dec
pop
inc
js
js
push
adc
jmp
jno
mov
aam
hlt
bound
xlat
dec
mov
popf
rcrb
pushl
push
cli
fwait
das
pop
mov
decl
arpl
pop
push
adc
ja
pop
addr16
ficomps
adc
jle
flds
or
and
mov
fmul
mov
push
adc
in
jae
sub
aaa
cmp
push
cmp
sub
das
and
push
adc
inc
jne
pop
rcll
cmp
adc
adc
pop
repz
sbb
mov
das
mov
adc
adc
lods
mov
xor
out
sbb
int3
call
je
or
data16
push
lret
xor
add
mov
push
push
mov
enter
int3
fcompl
sub
push
adc
mov
mulb
pop
call
inc
mov
stc
and
sub
ret
in
xorps
jmp
testl
call
aad
sar
jne
ljmp
je
and
sahf
pop
adc
out
push
ror
or
mov
push
cld
jo
add
sub
jl
cmc
xchg
call
mov
add
inc
addb
test
jl
jb
in
jns
sub
andb
cmp
lcall
cmp
push
test
jle
inc
inc
je
xchg
sub
dec
test
mov
mov
jle
push
test
push
push
test
sub
mov
sub
icebp
pop
dec
pop
push
loop
push
inc
jmp
cwtl
decb
and
or
pop
mov
pop
inc
cmpsl
xchg
adc
add
push
outsl
aam
and
js
clc
cwtl
xchg
fld
in
insl
sub
and
push
paddw
push
pop
nop
movsl
stos
push
sahf
inc
pop
lock
cltd
sub
mov
imul
add
jnp
dec
mov
out
sbb
lret
in
jbe
mov
popa
idivb
out
cs
rcl
inc
loop
popf
jmp
cmp
test
mov
push
adc
sub
dec
lds
jecxz
push
lods
stos
shll
in
daa
mov
mov
stos
sbb
movsl
jns
lods
and
and
adcl
aaa
sub
out
pop
mov
cmpsl
aam
cmp
push
popf
add
inc
enter
adc
xor
dec
int
mov
push
in
negl
lcall
ficompl
mov
repnz
jne
test
jecxz
dec
pop
mov
aad
es
enterw
fisubrs
xchg
push
cmp
jl
pop
adc
mov
adc
fmull
mov
out
out
outsb
icebp
jb
scas
cmp
bound
sub
cmp
push
and
pop
push
fbstp
rcrl
icebp
mov
sbb
popa
sbb
mov
xlat
xor
lock
mov
add
jne
mov
sub
mov
fsts
sbbl
sub
jo
jl
sub
sbb
in
iret
adc
dec
inc
arpl
cmp
je
fistl
push
je
sub
fcmovnb
jl
xchg
rclb
out
mov
sub
test
sti
shlb
push
push
js
psrlw
inc
cmp
inc
mov
inc
js
outsl
xor
hlt
test
and
pop
cwtl
jp
outsb
and
dec
or
jg
xchg
je
test
xor
push
dec
dec
in
pop
mov
ja
arpl
je
mov
pop
movsb
icebp
mov
mov
es
cs
fiaddl
addl
push
push
icebp
pop
jnp
mov
out
cmp
bound
jmp
pop
xor
std
cli
loopne
sbb
aas
xor
mov
jae
dec
jne
lods
jmp
sub
data16
pop
das
pop
mov
or
mov
cs
in
clc
or
loope
push
je
out
adc
aad
das
jns
cmp
ds
repnz
pop
pop
lds
add
call
sub
inc
mov
xchg
lea
push
mov
add
sbb
sbb
jge
dec
out
jno
xor
pop
pop
je,pt
xchg
movsb
lret
enter
mov
sub
or
xor
das
mov
ljmp
pop
test
add
add
mov
test
call
pmaxub
xor
stc
sbbb
test
je
in
icebp
jmp
mov
fadd
movhps
xchg
insl
fstps
dec
or
cmpl
or
repz
jne
mov
cmp
jne
adcb
aaa
cmp
imul
inc
or
and
iret
adc
mov
or
scas
adc
pop
mov
orl
rep
shrl
ret
loopne
addb
and
add
mov
ret
in
popa
xor
mov
outsb
into
outsl
arpl
arpl
fbstp
hlt
pop
inc
cwtl
pop
add
loopne
inc
bnd
rcl
frstor
daa
movsb
sub
pop
or
mov
mov
loopne
jmp
mov
bound
and
aam
pusha
mov
cmpsl
sub
inc
cmp
lret
lahf
mov
mov
int3
ret
sti
loop
or
movzbl
dec
cmc
inc
pop
add
push
push
hlt
push
sbb
loope
inc
jecxz
push
repz
aad
mov
inc
xchg
popf
cmp
inc
pushf
stos
mov
clc
rcll
inc
jae
fdivs
and
adc
push
mov
cmp
push
mov
lea
scas
mov
std
dec
fdivr
xchg
sbb
test
mulb
mov
out
add
dec
test
sbb
mov
lret
orb
movsb
mov
ret
cmp
add
cltd
dec
cmp
adc
xchg
mov
mov
mov
push
mov
insb
or
push
shll
cmp
mul
jae
jo
fdivl
mov
lcall
adc
inc
mov
adc
arpl
mov
xchg
cmpsb
inc
pop
daa
fiadds
xor
xor
inc
xor
cltd
mov
and
inc
mov
cmp
in
fstps
sub
mov
dec
sub
xchg
enter
outsl
cmp
test
dec
adc
ficoml
and
push
push
adc
cmp
int3
jae
fwait
aad
divb
popa
mov
mov
sub
aad
pop
loop
shll
sub
sub
sbb
movl
cmpsb
sub
jne
jecxz
push
lret
scas
cmpsl
aam
or
xor
lret
fdivl
mov
nop
push
sub
outsb
jle
popa
pop
jg
mov
or
mov
jbe
mov
xchg
inc
call
and
inc
xchg
lahf
arpl
cld
arpl
adc
aad
jg
or
ja
hlt
add
push
adc
inc
je
dec
call
adc
adc
sbb
cmp
mov
mov
push
adc
adcb
mov
sbb
mov
pushl
jle
shrb
mov
in
adc
adc
jo
jmp
mov
orb
pushf
aad
std
xor
jg
dec
ss
jmp
lock
jnp
adc
jo
call
clc
pop
aam
adc
adc
mov
fs
lds
adc
adc
pop
movsb
sbb
push
push
adc
test
pop
inc
fsubrs
jmp
sbbb
jmp
push
push
push
push
adc
int
jo
call
adc
mov
sbbb
pop
pop
leave
sbb
or
mov
inc
aas
movb
mov
inc
jmp
icebp
push
movsb
cmpsb
lret
xchg
push
or
scas
dec
fildl
addl
clc
je
sahf
subb
add
push
pop
popf
pop
or
dec
dec
aam
jb
iret
pushf
repnz
shrb
adc
jmp
xor
imul
push
add
push
push
in
cltd
pushl
pusha
popf
enter
mov
pop
or
add
loope
imul
je
or
sub
inc
add
pop
cs
push
push
sub
scas
inc
mov
loopne
xchg
mov
rorb
mov
add
xchg
mov
xchg
mov
cwtl
xchg
cmpsl
test
mov
insl
pop
bound
add
sbb
outsl
out
aam
sbb
push
pop
push
xor
mov
std
add
out
cmpsl
imul
jp
sbb
mov
pusha
jmp
pop
cmpsb
loopne
bnd
movsl
movsb
lcall
jno
out
pop
test
hlt
adc
jns
fidivs
and
outsl
fwait
jmp
cmp
loope
in
rclb
push
adc
push
filds
int3
jo
icebp
mov
push
push
push
xchg
andb
jmp
out
data16
stos
stos
insb
loop
es
insb
sub
dec
mov
scas
mov
roll
sbb
mov
push
loopne
ret
xchg
push
mov
xchg
sub
dec
sub
mov
in
dec
adc
jae
pop
xlat
sbb
rclb
adc
pop
cwtl
sbb
cmp
xchg
arpl
jg
dec
pop
mov
jnp
pop
bound
in
popf
fwait
cltd
sahf
nop
add
adc
xchg
and
leave
push
pop
scas
mov
xchg
das
out
mov
and
xor
pop
mov
into
pop
pusha
into
cld
jnp
inc
inc
jmp
faddl
in
data16
addr16
add
xlat
subb
or
out
cld
add
adc
push
popf
lods
push
xchg
mov
inc
cmp
mov
rcr
loop
sbb
sbb
add
sarb
jl
mov
popa
and
test
and
movsb
add
int
jg
xchg
push
push
jle
push
push
mov
dec
xor
xor
movsl
mov
rcrl
xchg
fsubl
je
jl
pusha
and
pop
shl
xchg
sbb
jbe
xlat
fmul
mov
fwait
pusha
aad
and
data16
fistl
es
pop
in
sar
movsb
ret
vpaddsb
or
stos
sbb
xchg
cmp
sub
popf
cmp
push
push
insb
lcall
into
xchg
jecxz
cmp
nop
repnz
lret
lods
push
jae
repz
push
jo
add
mov
mov
cs
pop
roll
lret
in
mov
cmp
xchg
ds
cmp
sub
and
cwtl
adc
mov
cld
sub
repz
mov
jge
adc
or
mov
ja
cmp
inc
addb
push
sbb
aaa
aas
call
setl
dec
sub
in
pop
mov
mov
hlt
bound
pop
jbe
repz
push
or
xlat
imul
mov
mov
add
pop
pop
aaa
arpl
xchg
leave
or
addr16
je
jne
rcrb
mov
mov
aas
sub
repz
or
or
mov
ds
mov
pop
movsl
test
dec
add
add
or
paddsb
mov
cwtl
mov
pop
fsubrp
notrack
cmp
adc
orb
test
test
ret
aad
lret
jae
lret
xor
pop
out
notl
stc
adc
pushf
and
mov
xchg
ja
pushf
sub
xor
xor
shr
dec
add
inc
sbb
test
scas
flds
roll
dec
lret
int3
ja
sub
push
repz
jmp
in
test
fidivrl
sub
pop
test
cmp
jnp
cmpsb
pop
push
js
and
adc
addr16
pop
jbe
loope
enter
movsl
into
ret
rorb
testb
pop
xor
out
dec
xor
push
push
cmp
sbb
test
mov
or
or
pop
jo
call
cmp
sub
loope
cmpsl
imul
cwtl
push
mov
sub
cmc
or
cwtl
pop
add
in
sbb
xchg
adc
scas
call
mov
and
jns
das
iret
and
js
add
mov
cmp
xchg
add
sub
out
fidivrs
in
mov
cmp
add
xor
mov
and
mov
push
xchg
dec
push
or
ljmp
push
mov
sbb
pusha
loope
add
in
clc
cmp
cmp
fcmovnb
ja
jnp
in
sbb
push
repnz
cli
lret
pop
sub
inc
loop
mov
es
or
or
mov
stc
test
test
dec
iret
mov
jbe
xchg
cmp
mov
lcall
fs
fs
pop
ljmp
jg
jne
enter
jp
add
mov
sbb
inc
ss
mov
hlt
ds
push
pusha
test
cmp
inc
mov
push
cmc
jge
imul
mov
mov
in
mov
push
pop
icebp
push
mov
mov
xchg
stos
fidivrl
pusha
cmp
dec
shrl
cmp
pusha
pop
repnz
sbb
sbb
adc
mov
mov
mov
dec
xlat
adc
mov
mov
add
rcrl
add
xlat
mov
fwait
je
mov
add
inc
add
decl
sub
adcl
xor
mov
sbb
int3
test
push
push
dec
jo
imul
div
sub
jne
push
xor
inc
call
imul
and
jge
add
aas
push
aas
idiv
divb
adcb
insb
js
pop
loop
or
mov
mov
insl
push
and
push
push
jp
and
jo
out
es
mov
push
xchg
ret
push
jbe
sbb
loopne
sar
jg
cmp
ja
xchg
ljmp
xchg
jge
lcall
or
inc
movsb
mov
cmpsl
imul
inc
mov
inc
jmp
dec
cs
in
hlt
or
push
cmp
gs
stc
je
out
idiv
xchg
xlat
mov
mov
mov
bound
push
push
mov
mov
xchg
pop
in
nop
mov
lds
or
xor
and
xchg
push
aad
inc
add
add
adc
mov
das
sub
jno
sub
mov
jle
mov
mov
or
lods
cwtl
mov
insb
add
test
das
sti
lret
inc
pop
pop
ret
fildl
repz
aam
subb
mov
mov
in
subb
ljmp
jo
test
movsl
sbb
jge
popa
xchg
mov
sbb
or
rorb
adcb
call
mov
dec
popa
std
decl
fcmovnbe
cli
cmp
imul
popa
sbbb
pop
mov
cmp
cmp
add
add
push
pop
inc
movsl
and
div
loop
push
mov
lahf
mov
testb
jg
clc
test
or
xor
and
jl
loope
push
cmpsb
inc
sti
movsl
lahf
enter
adc
mov
clc
incl
mov
or
jp
arpl
cmp
xchg
dec
rorb
fs
stos
dec
mov
add
sti
bound
add
shrl
push
xchg
inc
jg
xchg
push
inc
call
enter
sbb
sub
aaa
adc
mov
sbb
aad
lds
imul
mov
in
roll
mov
stc
sbb
jge
sahf
adc
cmp
repnz
movsb
shrb
das
xor
jo
test
pop
push
notb
add
xchg
lods
pop
lea
adc
dec
cmp
insl
mov
mov
loop
cs
dec
pushw
add
loop
loopne
fs
lcall
fdivrp
mov
jo
in
enter
hlt
shll
insb
lods
loopne
lea
test
test
xchg
sub
fsub
add
push
test
movsl
cmp
push
scas
and
test
lcall
scas
or
shlb
mov
cmc
xor
xor
pop
jl
cld
fsubl
mov
mov
sub
or
dec
insb
orl
fists
pop
fs
and
fistl
add
cmovb
ds
shl
aas
icebp
mov
push
xchg
dec
xor
push
stos
dec
aaa
stos
out
ss
out
xor
loope
jp
xor
fcompl
lods
fs
leave
mov
xchg
xchg
daa
cmp
not
push
xor
and
stos
inc
bound
and
lret
fmuls
mov
mov
jno
movsl
out
loopne
or
add
and
pop
fst
fs
push
dec
or
lea
sub
pop
push
adc
pushf
xchg
xchg
test
push
push
adc
js
sbb
rcrl
shrl
enter
sub
xchg
imul
xor
adc
pop
test
jo
adc
and
jge
jns
test
lahf
cmp
icebp
jo
pushf
imul
inc
push
sbb
mov
divl
fwait
roll
mov
push
mov
imul
or
mov
xchg
call
stos
imul
imul
rolb
loop
xor
add
in
int3
insb
mov
jne
jmp
shrb
mov
xchg
sbb
cmovnp
jmp
subl
mov
sub
add
add
movl
jl
loopne
jge
das
sbb
inc
fwait
shrb
inc
pop
ret
push
popa
pop
shrb
cwtl
je
adc
cmp
hlt
call
xchg
ret
push
loopne
outsb
adc
std
std
pop
leave
adc
out
fildl
or
lods
mov
sbb
sbb
adc
movsl
or
stc
incl
push
in
cmc
mov
hlt
call
adc
mov
xchg
adc
adc
push
or
jecxz
aaa
or
call
out
pop
pop
mov
cmpsl
add
push
mov
ljmp
mov
jmp
inc
push
repz
insb
mov
arpl
mov
inc
pop
cmpsb
sbb
dec
sbb
mov
mov
mov
mov
bound
mov
mov
inc
shrb
test
add
or
lahf
imul
sub
scas
jl
decb
mov
jns
addr16
addl
cmpsl
cwtl
in
daa
fcomps
std
xor
push
push
mov
sbb
aam
movsl
imul
aam
inc
sbb
inc
fbld
and
mov
sti
insl
jmp
sbb
sub
adc
cmp
shll
outsb
xchg
jmp
orb
bound
mov
test
mov
xlat
out
jbe
mov
ja
ss
xchg
push
popf
nop
nop
adc
outsb
out
mov
aad
clc
pop
jno
test
add
decb
sub
mov
pop
adc
add
push
gs
inc
scas
clc
push
push
adc
roll
cmpsl
mov
mov
fstl
add
sub
pop
adc
jg
add
lret
dec
out
lock
push
adc
cmpsl
add
into
movsl
mov
mov
push
bound
adc
jmp
jns
xchg
xchg
xor
call
les
mov
aam
jne
fwait
pop
adc
ret
ficomps
daa
cmp
adc
jns
loopne
xchg
mov
or
movsb
cmpsb
cmpsl
imull
loopne
dec
mov
addr16
add
movsl
pushf
jnp
insl
daa
push
leave
pushf
inc
pop
adc
orl
loop
sbb
push
jae
int
jae
cmp
jmp
push
push
cwtl
push
les
popf
adc
in
outsl
jae
dec
push
lods
ds
sahf
nop
and
xor
mov
mov
out
leave
leave
enter
out
fildll
mov
push
adc
push
icebp
and
xor
mov
xor
jmp
xchg
cltd
hlt
test
adc
loopne
dec
out
adc
add
dec
int
adc
pop
icebp
pop
gs
pop
dec
push
scas
rcll
inc
cmpsl
fs
popa
jo
inc
cmpsl
jae
js
mov
xor
lret
cs
pop
idivl
ret
push
jmp
test
cmpsl
xor
pop
push
inc
add
add
pop
iret
add
push
and
decl
add
add
aas
clc
lods
jge
xchg
nop
daa
mov
repnz
lds
fbld
pop
mov
add
insl
sarl
sbb
dec
fnstcw
ret
inc
inc
adc
or
adc
adc
in
pop
jle
cmpb
inc
xlat
push
repnz
ret
push
outsb
sbb
xor
or
fidivrl
cli
mov
fdivs
fwait
int3
lods
mov
adc
mov
inc
jno
std
mov
inc
cmc
mov
pop
adc
lods
popa
mov
pop
adc
inc
pop
adc
hlt
cld
and
pop
mov
sbb
insb
add
adc
das
pop
jo
test
cli
hlt
mov
jnp
xchg
push
gs
cmpsl
sahf
adc
mov
jp
push
push
pop
pushf
loope
stc
test
or
in
cli
hlt
inc
inc
pop
xor
ja
fadd
jbe
add
mov
inc
pop
adc
fcompl
push
adc
jecxz
push
mov
adc
mov
subb
outsb
pop
hlt
call
mov
hlt
call
out
or
pop
jno
inc
pop
adc
ret
sti
ljmp
insl
shrb
call
sbb
ss
sahf
and
shrl
mov
orl
fsubs
aam
push
adc
hlt
jg
jo
lds
xlat
push
push
jge
push
xor
cli
hlt
inc
inc
enter
inc
shlb
pushf
jb
pop
mov
jbe
popa
sbb
push
in
pop
pop
adc
popw
mov
call
jns
mov
or
jmp
push
adc
or
jno
mov
push
mov
mov
or
adc
add
jae
cltd
arpl
aaa
cmpsb
inc
lcall
mov
add
inc
push
out
mov
leave
pop
js
push
out
arpl
cmc
negb
mov
mov
and
mov
push
imul
imul
fildl
inc
mov
or
int
dec
imul
dec
pop
mov
xchg
jb
incb
mov
je
xorl
or
pop
adc
dec
jne
dec
push
pop
testb
pop
pop
sarb
push
gs
inc
mov
test
aas
mov
icebp
mov
pop
fs
jns
scas
jecxz
mov
loop
or
in
les
jmp
pushf
cmp
push
dec
and
or
jmp
cwtl
pop
adc
add
cltd
adc
or
jp
mov
cmp
outsl
push
arpl
mov
in
dec
xor
insl
inc
test
and
nop
cmp
jne
into
dec
dec
mov
roll
jmp
stc
mov
pop
sbb
lcall
scas
dec
cmp
xchg
enter
cmc
jl
inc
daa
jecxz
xchg
push
rcrl
into
and
xchg
jle
inc
lock
xor
jo
cmpb
jecxz
inc
sub
imul
ss
out
xor
loope
jp
xor
dec
push
dec
mov
sbb
subb
xor
je
pop
ficoml
arpl
fildl
mov
mov
scas
sti
jp
mov
shrb
mov
inc
out
out
push
cmpl
and
outsb
xchg
sub
inc
mov
xchg
pop
gs
mov
jl
popa
stos
cmp
mov
data16
in
cmp
rcl
subb
rcll
push
sbb
cmp
repz
cmpsb
jmp
test
aad
test
dec
push
and
imul
and
sbb
paddusb
stc
ljmp
cmp
sbb
mov
cmp
negb
bound
pop
push
adc
pop
arpl
frstor
ret
jnp
pushf
inc
pop
push
inc
mov
mov
mov
adc
inc
mov
nop
rolb
ret
dec
adc
xor
jmp
xor
push
cli
dec
pop
movsb
xchg
aas
hlt
testl
ja
push
jge
add
and
mov
adcb
mov
or
ja
mov
mov
add
das
aad
repz
shll
call
mov
pop
or
movb
int
push
pop
aaa
jo
test
pop
movsl
pop
xor
jecxz
cld
add
jno
mov
ljmp
jl
mov
adc
mov
mov
in
das
rolb
call
cld
sbb
xchg
jo
xor
sbb
sub
call
out
inc
inc
js
mov
pushf
outsl
pop
jp
mov
dec
les
hlt
addr16
jbe
fbld
aam
dec
add
add
mov
addl
mov
sti
and
or
ret
pop
add
fildl
adc
mov
lret
mov
push
movb
xor
push
adc
xor
or
repnz
cmc
xchg
dec
mov
iret
mov
pop
cmp
pushf
mov
adc
mov
insb
jl
adc
xchg
xchg
mov
std
mov
mov
push
push
pop
cli
mov
mov
pop
and
loope
into
xor
push
add
pop
mov
and
mov
lea
mov
call
and
mov
arpl
repnz
scas
xchg
xlat
xchg
cwtl
or
push
icebp
xor
jb
stc
push
and
lods
in
mov
sub
mov
push
sub
pop
and
jmp
mov
jnp
ficompl
pop
rcrl
cmp
fdivs
cmc
adc
in
mov
add
push
xor
mov
cmp
out
into
dec
in
jne
mov
cmp
mov
or
jle
and
test
push
inc
inc
je
stos
cld
mov
xor
inc
lret
loop
scas
mov
push
rcl
pop
xchg
rclb
clc
dec
out
or
xor
push
pop
sahf
mov
mov
pop
mov
sti
inc
loop
scas
es
add
lods
mov
negl
scas
in
shll
adc
push
xlat
cmp
inc
adc
push
push
sbb
xor
pop
inc
xor
fildl
mov
mov
mov
dec
push
pop
dec
xor
pop
lods
fs
push
repz
mov
aad
push
jne
lock
adc
xchg
mov
jl
adc
mov
into
sub
loop
cltd
test
cmp
mov
fsubr
jecxz
lds
xchg
call
int
inc
push
icebp
arpl
in
inc
lea
pop
push
mov
mov
icebp
fs
sbb
shll
mov
push
xor
jge
and
lods
mov
cmpl
call
rclb
sub
add
mov
in
push
scas
cld
shlb
jle
cmp
fidivrs
ja
fcmovnb
push
adc
call
cmpsb
mov
shlb
mov
adc
stc
mov
mov
dec
or
or
sbb
xchg
mov
dec
or
scas
neg
dec
imul
nopl
jecxz
and
sbb
test
subl
out
mov
je
or
psubusb
movsb
adc
sti
mov
adc
mov
test
add
add
mov
lea
xor
ss
and
lods
add
les
push
jns
cli
push
lock
pusha
cli
hlt
pushf
push
into
call
fldcw
or
add
adc
leave
add
pop
dec
xor
mov
jmp
sub
jmp
movsb
sbb
sub
pop
out
fnsave
and
nop
mov
jne
std
out
jne
push
jb
or
add
shrl
mov
push
fsubrs
jne
mov
mov
pop
leave
pop
jnp
inc
sti
sub
bound
stc
pop
out
arpl
mov
inc
add
jp
add
adc
dec
mov
scas
clc
scas
pop
jnp
jmp
movb
in
sbb
shlb
in
or
pushf
arpl
cmp
cs
mov
aaa
loop
std
ret
dec
cmp
xor
adc
insl
mov
mov
sahf
cmp
rorl
rcrl
popa
sub
xor
mov
xor
adc
shll
push
push
push
subl
loope
pop
std
pusha
push
mov
ja
mov
int
pop
or
cwtl
bound
bound
aad
bound
mov
mov
jo
sti
jb
icebp
movsb
int3
jne
in
js
fdivs
sub
into
or
and
pop
je
pop
cmc
jl
call
lock
sti
add
push
mov
jns
push
xor
xchg
mov
push
lahf
inc
sbb
or
in
outsw
mov
pop
push
xor
xlat
pushf
idivl
inc
inc
dec
stos
mov
sti
or
jle
arpl
fsub
inc
xchg
stos
mov
decl
xchg
cmpsl
push
fidivl
fdivs
xor
roll
sub
pop
mov
movsl
xchg
sub
pop
adc
xor
and
pop
adc
add
dec
out
jb
cmc
rclb
in
leave
mov
xchg
xchg
out
xor
add
nop
cmp
add
push
mov
add
push
sbb
roll
imul
inc
pop
pop
sub
sub
cmpsb
fucom
es
test
and
std
outsb
psubsb
movsl
outsl
stc
aad
cld
shrb
jmp
xchg
decl
pop
lcall
xor
mov
popa
mov
ret
jle
outsl
lahf
adc
inc
pop
lcall
rclb
jae
or
xchg
mov
xor
jecxz
cmpsb
adc
xor
push
dec
jecxz
push
repnz
xor
xchg
nop
jecxz
xchg
popf
cld
pop
push
mov
or
mov
pop
fstpt
pop
test
mov
xlat
pop
std
xor
bound
sbb
loope
add
je
xchg
xlat
xchg
lahf
mov
or
mov
iret
lods
mov
dec
mov
and
mov
stos
adc
std
xor
xchg
xchg
push
xchg
inc
mov
or
insl
arpl
mov
fmulp
push
and
mov
xchg
aam
ljmp
inc
aaa
mov
push
jno
xchg
sahf
dec
in
mov
dec
add
mov
pop
aad
das
loopne
out
xor
mov
lods
and
data16
icebp
jno
push
mov
enter
xchg
addr16
stos
outsl
cmp
mov
rclb
mov
inc
jg
fldenv
mov
add
push
push
jmp
mov
int3
shl
jno
and
cli
jge
shrb
cwtl
pop
sbb
jge
pop
call
mov
ret
pop
push
fs
or
pop
mov
sbb
movsb
and
in
rcl
out
jg
xor
add
das
aad
jg
add
add
jle
sub
packssdw
pop
xor
popf
push
addr16
xor
popl
inc
jl
pop
xchg
nopl
pop
push
sbb
popf
lret
mov
add
inc
cmpb
je
mov
lods
sahf
lods
sub
hlt
xchg
out
add
popf
cmp
movsb
adc
or
mov
cmpsb
rcl
push
jecxz
les
les
gs
mov
cmc
adc
sub
cli
hlt
pushf
push
aas
mov
jp
call
mov
clc
pop
call
add
les
push
js
stos
xchg
imul
fwait
mov
sub
dec
adc
mov
sarl
fistpll
mov
jne
sahf
pop
das
and
fstps
and
push
cmp
mov
xchg
or
jg
jns
or
mov
arpl
add
mov
call
cmpsl
in
repnz
and
jns
vmovaps
adc
push
push
push
or
daa
mov
xchg
cmp
pop
mulb
xor
xchg
xchg
sub
add
add
or
fdivp
rorb
cmp
addl
dec
fcompl
js
jne
scas
adc
icebp
xchg
push
push
push
mov
and
mov
fcmovnu
push
lahf
bound
js
mov
and
jge
lods
push
or
push
dec
pop
adc
pop
vpminub
insl
jl
cld
movsb
das
pop
jl
add
fidivrl
into
andl
test
sub
lea
loope
dec
sub
pop
inc
cmc
mov
fwait
sub
jno
pop
lods
push
test
xchg
mov
lret
dec
aas
lock
scas
lock
iret
lahf
popf
ss
inc
or
cs
or
fidivl
and
loopne
data16
xchg
inc
jmpw
add
xor
lcall
shlb
rol
jg
arpl
cmp
xchg
inc
jecxz
nop
jmp
arpl
inc
mov
push
adc
sub
mov
add
cli
je
jne
shll
mov
rorl
push
shrl
pop
addb
mov
mov
adc
sub
sub
and
add
daa
mov
sub
out
adc
push
adc
cld
lret
and
sub
push
out
xchg
mov
mov
sbb
sti
icebp
filds
jnp
ja
in
aaa
out
push
repz
pop
dec
cmc
add
lahf
loope
mov
ret
lock
mov
jp
pop
push
lahf
rcll
inc
int
test
out
mov
clc
mov
push
jp
or
fs
mov
mov
mov
aaa
cmp
lods
inc
and
dec
xor
cli
xor
sbb
mov
adc
call
xchg
pushf
repnz
ret
cwtl
dec
in
push
push
std
add
xchg
sub
sub
arpl
push
rcl
rcrl
pop
xlat
stos
add
add
adc
lock
fistpl
inc
cmc
rclb
push
adc
adc
mov
outsl
pop
jmp
lea
int
mov
pop
push
adc
jne
test
cltd
inc
inc
enter
cmp
mov
addl
jl
in
add
jo
push
test
xchg
and
sbb
repz
mov
jecxz
scas
cli
mov
rclb
xor
adc
xchg
cltd
faddl
push
or
or
xorb
adc
push
adc
incl
mov
push
das
pop
xor
loop
hlt
and
pmaxsw
imul
shr
jg
push
mov
mov
aad
test
adc
pop
out
xor
dec
std
mov
cmpsb
inc
xchg
insl
mov
mov
pop
xor
sub
cmpsb
lret
mov
push
or
inc
xchg
adc
rorl
clc
stos
cmp
fs
mov
inc
addb
enter
faddl
jecxz
rcll
fisttps
xor
adc
shrb
inc
add
add
push
push
adc
xor
call
daa
mov
shrb
dec
or
inc
pop
push
adc
jp
or
rcll
jns
jmp
ljmp
cwtl
mov
xchg
int
rcrl
jle
call
pushf
imul
add
pop
test
jg
or
dec
sub
repz
dec
int3
gs
inc
mov
add
pop
lret
pop
pop
lea
push
cs
mov
faddl
mov
cmp
test
mov
call
xlat
dec
inc
test
mov
mov
jnp
leave
jle
sbb
rorb
dec
mov
call
cmp
or
xchg
js
push
xchg
test
dec
xchg
sub
mov
into
sti
pop
add
mov
inc
mov
mov
mov
sub
cmp
fucomi
jmp
pop
out
push
in
add
addr16
cltd
pop
lret
ficomps
faddl
and
push
mov
and
rclb
sbb
shrl
pop
rcrb
pop
pop
push
inc
imul
mov
mov
dec
sarl
xchg
pop
dec
dec
out
cmc
push
scas
add
mov
in
xchg
jns
stc
jg
rorl
xchg
xchg
out
push
cmpl
xchg
fwait
jo
jb
outsl
jns
in
cmp
jae
xchg
xlat
sarl
or
in
test
push
fcmovu
mov
add
jecxz
je
mov
stc
sbb
dec
or
out
cld
sbb
dec
addr16
hlt
cltd
fisttpl
fldl
cmp
jo
pop
adc
add
addb
adc
icebp
dec
nop
push
out
push
mov
out
fidivl
in
pop
lcall
bound
fs
sbb
push
xchg
add
add
pop
adc
fwait
ss
sbb
lock
xor
xchg
mov
mov
cmpsl
cmp
xchg
out
insb
sub
loopne
cmpsl
ficompl
inc
pusha
cmp
out
stos
mov
mov
adc
jge,pn
pushf
sbb
push
mov
mov
add
dec
mov
sub
mov
addb
xchg
add
pop
xor
fwait
jecxz
mov
jb
mov
sub
inc
mov
mov
inc
mov
adc
mov
stc
repz
and
and
add
pop
adc
faddp
out
push
insl
add
leave
ss
add
dec
ljmp
pop
lahf
fnsave
add
jge
ss
mov
cld
sbb
sahf
bound
cltd
jae
sub
imulb
aad
lods
cld
cmp
stos
dec
daa
inc
rclb
adc
scas
jmp
mov
and
je
data16
cld
aas
mov
dec
push
ss
cmp
bound
add
dec
sbb
and
mov
push
jecxz,pn
and
clc
and
push
mov
addr16
dec
lods
cmp
xchg
xor
jle
pop
popl
andl
pushf
pop
pop
adc
adc
adc
xor
mov
jg
test
cli
hlt
xchg
bound
pop
pop
adc
cs
mov
pop
pop
sbb
push
rorb
pop
das
cltd
mov
pop
rorl
adc
adc
lahf
or
das
pop
inc
ljmp
shrb
jecxz
or
add
adc
dec
mov
dec
hlt
call
test
jge,pt
sbb
lds
sbb
lods
mov
xchg
das
pop
mov
std
mov
std
xor
jg
xor
scas
xor
and
xchg
pop
inc
jg
fcoms
push
adc
nop
repnz
ret
outsb
xchg
cs
and
call
aad
orb
inc
mov
sbb
push
jmp
mul
movsb
fwait
fs
popf
sub
les
add
add
call
mov
add
push
adc
xor
mov
jg
aaa
inc
pop
pop
adc
leave
test
add
push
adc
sbb
cltd
call
xor
add
mov
in
hlt
je
aas
jl
pop
lods
dec
pop
pop
adc
leave
call
xlat
inc
sub
loope
clc
adcb
adc
add
ficompl
push
sbb
adc
nop
adc
mov
aad
sbb
xor
xchg
lock
mov
or
fistl
cmp
pop
pop
adc
ja
mov
dec
test
fs
loop
imul
pushl
xlat
xchg
cwtl
cwtl
push
cld
mov
dec
xchg
dec
call
insl
lods
sub
daa
shll
cmp
lcall
mov
adc
popf
lods
movsl
pushf
pop
pop
adc
push
pop
push
adc
fs
fs
fisubrs
jns
test
or
jge
adc
pop
loope
mov
inc
add
cli
cmp
push
mov
repz
lods
loop
jmp
push
ljmp
adc
pop
fidivs
cmpsl
adc
jmp
pop
lret
xchg
lret
lea
cld
lret
xor
mov
xor
int3
stos
add
adc
mov
int
mov
loope
stos
mov
clc
repnz
cmpl
ret
push
jl
cld
mov
bound
repnz
sahf
pop
adc
adc
in
iret
dec
orl
sub
mov
xor
sub
pop
add
xchg
xchg
insb
das
insb
dec
or
inc
pop
adc
pusha
inc
pop
adc
xor
loope
mov
xchg
in
movsb
fidivs
insl
xchg
mov
sub
popa
mov
push
fisubrs
nop
push
adc
push
cmp
adc
es
cmp
loopne
push
pusha
jp
das
pop
push
adc
sbb
mov
insl
pop
in
call
sti
rcrb
lret
dec
loop
pop
jg
mov
inc
push
jne
dec
mov
adc
mov
pop
pop
adc
enter
cld
adc
adc
cmp
mov
fnsave
jbe
aam
push
push
add
lea
add
mov
adc
xlat
push
iret
scas
jno
mov
sub
ret
add
push
xchg
cmp
fcompl
push
call
pop
pop
in
pop
add
jecxz
arpl
pop
adc
mov
adc
xchg
adc
pushf
pop
pop
adc
push
add
jnp
lds
pop
xor
push
or
push
jns
sti
lods
enter
call
mov
adc
pop
ret
inc
sbb
push
pop
add
aam
fcmovnb
xchg
pop
inc
iret
stc
hlt
xchg
out
sub
jl
int
and
adc
hlt
xchg
pop
mov
cmp
int3
adc
pop
pop
adc
mov
and
leave
lea
add
add
jo
lock
scas
je
add
cmp
sbb
add
inc
cmpsb
sbb
in
pop
pop
adc
std
and
adc
xchg
pop
add
jg
mov
jge,pt
jecxz
stc
pop
mov
pop
pop
adc
add
in
pop
pop
adc
pop
adc
xorl
adc
fsubs
addl
xor
sbbb
jge
subb
lcall
mov
incb
xchg
mov
nop
or
jecxz
int3
mov
loope
mov
cmp
dec
cmpb
arpl
mov
mov
jns
call
mov
mov
imul
push
das
pop
cmp
loopne
mov
ret
pop
pop
adc
iret
pushf
sarb
mov
sbbl
push
mov
loope
xchg
js
push
adc
cmpsb
adc
adc
adc
lret
pop
jle
cld
clc
fiaddl
dec
xor
push
adc
push
adc
insb
adc
adc
test
pop
push
jo
push
adc
push
jle
call
jns
and
rcll
push
xchg
fldt
bound
push
adc
adc
or
jge
push
js
gs
mov
imul
adc
scas
rclb
adc
daa
sub
sbb
leave
enter
push
out
cmpsb
cmp
jno
nop
push
add
jmp
cmp
jne
push
fstl
std
push
test
movsl
jp
inc
xlat
and
insb
cmpsl
sbb
lret
push
dec
mov
mov
cmp
cli
fwait
je
push
adc
mov
mov
pop
adc
xor
mov
rcrb
cmpsl
hlt
shll
mov
call
or
sbb
int3
mov
std
cmp
lret
test
push
pop
cld
mov
adc
adc
push
adc
jb
add
jbe
sub
call
pop
push
test
inc
pop
adc
dec
aaa
fcomi
cmc
shrl
jl
inc
fadds
xchg
sbb
mov
inc
cwtl
faddl
pop
mov
fmulp
dec
push
jns
les
loopne
pop
adc
push
push
popa
outsl
stos
adc
and
sub
daa
es
aaa
xor
repz
mov
mov
faddp
push
mov
sub
pop
adc
repz
fldl
test
xchg
xchg
in
jb
loope
sahf
mov
pushf
pop
adc
cmp
outsb
add
pushf
pop
adc
movsl
jnp
push
sub
sbb
mov
lret
pop
pop
adc
cmp
mov
aam
ljmp
pop
adc
adc
inc
aaa
xlat
add
xchg
xchg
out
repnz
out
addr16
adc
mov
pusha
inc
pop
adc
popf
pop
adc
fistpl
cmp
add
insb
rolb
pop
subl
decl
enter
inc
pop
adc
test
jno
push
add
xlat
adc
push
jno
adc
sub
push
sub
inc
pop
adc
lahf
xchg
scas
dec
and
rolb
fwait
imul
jne
hlt
push
xchg
inc
sub
in
pop
pop
adc
xorl
inc
mov
fstpl
lret
or
mov
scas
and
sbb
sbb
adc
test
std
cli
pop
incl
and
call
in
inc
pop
adc
mov
shlb
std
xchg
shlb
adc
insl
dec
mov
cmpsb
clc
mov
dec
mov
mov
jmp
jbe
mov
pop
pop
adc
inc
dec
mov
pop
pop
adc
fldcw
and
cld
mov
ljmp
add
fs
pop
adc
in
sbb
cmp
test
call
ja
add
add
xchg
roll
cmp
push
xor
shlb
add
dec
xchg
stos
sahf
jnp
or
roll
cmpl
xor
pop
adc
xor
inc
pop
adc
or
push
je
imul
mov
shlb
or
adc
jl
cmpsb
imul
call
xchg
into
popf
mov
mov
test
fld
test
movzbl
jl
or
jbe
aaa
jb
iret
and
jl
pop
adc
lret
fisubl
aas
jl
mov
pop
xor
mov
popa
sbb
pop
add
clc
sbbl
stc
lds
jl
pop
adc
std
sub
ffree
je
aad
lods
dec
idiv
sti
mov
xor
add
sbb
fdivrl
ss
dec
js
hlt
pop
add
mov
xchg
lret
xchg
daa
in
insb
fmuls
rorl
adc
lods
fcompl
push
xchg
mov
xchg
addr16
push
call
pop
pop
cs
push
sub
sub
lds
pusha
inc
pop
adc
inc
pop
adc
cwtl
sbb
xchg
mov
add
sbb
imul
subl
adc
xchg
sbb
jl
pop
adc
std
inc
pop
adc
cmp
out
dec
inc
pop
jae
shll
filds
ds
inc
pop
adc
inc
jle
ss
daa
insl
scas
cs
gs
aaa
cmp
pusha
movsb
mov
jo
lret
es
pop
adc
fnstsw
xchg
subl
sub
pop
insb
stos
stos
jne
fadds
pop
adc
jmp
das
int
xchg
outsb
cmpsl
in
mov
inc
inc
out
bound
clc
stc
scas
call
ljmp
pop
popl
adc
out
pop
int3
dec
int
ds
test
pusha
inc
pop
adc
shr
adc
push
nop
mov
rcl
pop
sub
rorb
push
repz
fiadds
xor
pop
adc
repnz
inc
pop
adc
jo
or
call
adc
fcomp
sahf
fcomps
int
push
pop
rolb
loopne
jp
in
pop
pop
adc
clc
fsubl
adc
in
push
mov
push
adc
roll
inc
and
jmp
fs
add
dec
inc
pop
adc
xor
mov
in
les
push
adc
rolb
push
cld
or
sub
xchg
xor
jmp
adc
adc
call
pop
pushf
es
lret
insb
test
jge
mov
mov
test
sti
loope
mov
jo
pop
adc
sub
mov
jl
jne
lret
push
imul
sbb
cmp
inc
adc
fidivrs
repz
mov
mov
ret
mov
cwtl
sub
ds
jo
mov
stos
cmpsl
mov
cmp
and
addl
or
and
sub
loopne
push
or
shrl
sahf
pop
adc
add
push
adc
add
add
pop
aaa
cmp
dec
adc
iret
popf
cmp
movsb
push
pop
roll
test
subl
mov
adc
or
pop
push
popf
cmp
les
fiaddl
test
jecxz
pop
mov
ja
or
pop
dec
cmp
add
push
pop
inc
orb
xchg
or
das
cmp
add
call
das
lds
xor
xor
xor
adc
dec
xchg
mov
cltd
mov
push
add
inc
jno
dec
add
je
outsl
mov
push
adc
pushf
fisttpll
pop
das
mov
mov
loopne
rclb
fs
jb
out
push
testl
ljmp
das
jno
popa
addb
jae
sahf
lret
cld
pop
outsb
sub
cli
mov
pop
sub
cmp
inc
inc
xchg
dec
inc
mov
rolb
inc
jge
cmp
inc
or
push
inc
ret
inc
or
sbb
cwtl
les
addl
mov
call
iret
dec
mov
and
popf
cli
call
rcrl
pop
mov
pop
jl
cmpsb
pop
xor
push
loop
adcb
repz
mov
outsl
push
cbtw
xor
inc
cmc
in
jb
push
in
pop
adc
pop
adc
sar
adc
adc
int3
imul
adc
adc
es
dec
scas
cmp
decb
dec
sbb
sbb
mov
mov
adc
sbb
pop
lds
xor
pushf
cmpsb
sub
pop
ds
mov
int
or
in
dec
and
xor
cli
repnz
cmp
fimull
imul
mov
push
xchg
mov
adc
ret
mov
rol
add
inc
add
mov
inc
imul
push
adc
loop
fcomps
or
mov
loope
jo
mov
pop
hlt
movsl
outsb
and
jge
insb
lock
ljmp
fistpl
mov
outsb
push
push
das
cli
pop
push
fdivs
subb
pop
sbb
pop
sub
mov
test
lods
pop
pop
or
mov
mov
dec
mov
mov
ret
enter
icebp
gs
andb
mov
add
xor
gs
call
push
lods
cmpsb
sbb
sub
xchg
out
pop
push
adc
mov
int3
mov
popf
xor
cmpsl
cmp
xchg
inc
imul
push
adc
lock
xchg
add
arpl
pusha
adc
dec
xor
scas
cmp
out
lret
or
rolb
push
in
out
and
sub
add
mov
or
cld
adc
adc
mov
sbb
push
dec
leave
dec
xor
ret
sbb
add
or
mov
adc
and
clc
mov
jl
push
adc
out
out
or
lods
sarb
outsl
scas
pop
pop
test
ds
outsl
test
mov
loopne
add
filds
cmp
movsl
hlt
sub
test
jo
adc
adc
and
adc
pop
adc
mov
adc
adc
nop
mov
dec
or
mov
loop
test
dec
pop
inc
xchg
cmp
fbld
fldt
push
jp
stos
xor
jae
inc
add
adc
pop
adc
push
mov
push
mov
mov
stos
sahf
jnp
push
jnp
adc
pushf
es
and
inc
jmp
icebp
push
movsb
cmpsl
push
jg
cmp
push
adc
jns
dec
repz
pop
cs
xor
sbb
push
push
adc
push
call
pushf
call
imul
stos
hlt
call
out
iret
jmp
popa
inc
sbbb
pop
movhps
repz
mov
shrb
xor
loop
into
popf
imul
addb
jbe
push
arpl
ds
mov
push
adc
pop
mov
mov
mov
or
inc
pop
rcr
test
mov
lcall
call
in
sub
adc
adc
dec
std
add
repz
aas
mov
hlt
cld
sub
sub
jg
movsb
pop
push
adc
and
push
call
adc
adc
lahf
fld
pop
pushf
ret
jnp
push
lret
insl
call
movsb
test
mov
rclb
push
adc
xchg
imul
repz
movsb
sbb
imul
cmp
push
imul
xchg
pop
ret
mov
cwtl
in
daa
enter
sbb
shrl
jnp
push
ja
shrb
xchg
mull
dec
call
adc
lret
hlt
in
lahf
pop
adc
ljmp
jl
xor
push
add
adc
test
xlat
cmc
testb
jnp
and
add
xchg
movsl
outsl
inc
mov
pop
aam
pop
inc
cwtl
inc
and
mov
loopne,pn
dec
shlb
xchg
pop
xchg
push
or
fwait
es
xor
fs
mov
stos
mov
mov
test
cmp
pop
or
icebp
fbstp
fimull
scas
mov
repz
cmp
pop
xor
aas
dec
jl
pop
adc
dec
mov
shrl
mov
fldl
jge
mov
push
jo
pop
adc
xor
stos
push
std
imul
lock
popf
cltd
mov
repnz
mov
das
cmp
cmc
pop
push
rcl
cmp
fadds
jno
shll
cmp
push
adc
pop
test
lret
mov
repnz
jecxz
sub
stos
push
add
popa
addr16
lods
mov
jns
sbb
sub
sarb
adc
pop
in
xor
dec
inc
mulps
scas
lods
lock
sub
push
fs
jne
jae
subb
bound
fcomps
mov
fldcw
stos
bound
aas
cmp
aaa
xor
mov
jmp
test
sti
call
xor
sbb
insl
insl
int
dec
pop
adc
mov
in
in
lea
jns
and
scas
inc
das
int
stc
jmp
cmp
scas
jb
cmpsl
and
cmpsl
mov
sub
orb
enter
dec
or
fwait
ljmp
dec
push
mov
lret
cs
addr16
mov
rolb
xor
add
inc
mov
imul
cmp
dec
aam
jae
adc
fstpt
mov
repnz
aad
dec
sti
lock
cmp
mov
lcall
pop
push
adc
mov
stos
dec
push
inc
popa
dec
sub
pop
adc
xchg
int3
adc
fnstsw
rorb
int
or
arpl
dec
lea
sbb
mov
cs
push
pop
adc
jp
fwait
inc
mov
adc
data16
adc
mov
jne
xchg
jmp
lock
sub
or
lods
lcall
adc
pop
push
adc
andb
dec
std
cli
hlt
inc
movl
or
jecxz
jge
inc
and
rcl
mov
dec
pop
pop
pop
call
pop
inc
xchg
or
sahf
jne
mov
shrb
movb
push
pop
push
adc
pop
ds
repz
rcrb
jp
inc
shr
pushf
int3
cwtl
pop
mov
adc
cmp
nopl
ljmp
ret
scas
xor
sub
jg
pop
pop
push
in
stos
pop
shlb
add
mov
xor
and
das
dec
nop
imul
popa
pop
inc
pop
xor
cli
hlt
xchg
arpl
lds
jg
dec
cmc
data16
pop
das
pop
mov
dec
mov
jo
jmp
je
popf
pop
das
test
call
adc
popf
add
fiadds
adc
fstl
out
popf
fwait
jo
pop
adc
push
lea
sbb
xchg
adc
jns
hlt
jmp
sbb
popf
pop
adc
in
sub
cld
std
sti
sbb
push
push
ljmp
inc
add
popf
pop
adc
add
push
fs
pop
adc
in
les
adc
pop
push
adc
mov
pop
adc
rolb
in
fld
clc
pushl
lea
dec
xchg
dec
sarb
adc
fldt
cmpsl
xchg
mov
stos
add
mov
xchg
xchg
inc
and
adc
adc
shr
mov
aas
out
loop
mov
adc
sbb
adc
jbe
or
sti
mov
pushf
pop
adc
mov
mov
stc
push
lahf
adc
and
pop
push
mov
js
push
adc
push
jo
scas
pop
adc
cmp
in
mov
cmp
flds
fs
fs
pop
adc
add
cs
sub
movsb
xchg
xchg
xchg
xchg
cmp
stos
xchg
mov
mov
cmp
sbb
loop
insb
fcmovnb
cld
mov
flds
ljmp
popf
dec
mov
adc
push
push
es
stos
stos
push
ljmp
icebp
call
dec
movsl
popf
sub
dec
movsl
mov
jmp
leave
xor
test
push
push
mov
and
pop
sahf
call
ret
or
andl
pop
push
cmp
sahf
pop
adc
xor
mov
mov
add
push
adc
mov
jne
out
inc
imulb
sbbb
xor
aam
pop
pop
adc
push
data16
ret
lahf
mov
push
int
and
and
pop
xor
jnp
repnz
pop
sub
push
repz
fwait
sbb
mov
mov
xor
pop
fs
jge
test
sahf
pop
adc
push
cld
adc
adc
mov
sbb
sub
sbb
lods
insb
inc
sbb
add
push
adc
outsl
gs
pop
adc
or
pop
adc
ficompl
pusha
mov
cld
and
nop
ret
int
add
and
mov
pop
jno
jecxz
add
stos
das
int
sbb
pop
pop
jno
clc
popf
pop
adc
dec
fst
mov
mul
add
cmp
sbb
add
popa
clc
scas
fistpll
push
inc
lds
jp
stos
and
push
lahf
test
mov
xor
mov
add
test
in
cwtl
stc
test
xchg
call
xchg
daa
sbb
adc
push
pop
mov
or
jge
packssdw
hlt
call
sbb
pop
push
les
mov
xchg
mov
aad
fmull
pop
ds
pop
xor
int3
scas
repz
sub
xor
push
jecxz
lock
mov
inc
in
pop
movsl
fstps
rcll
aam
or
jmp
xor
pop
dec
cmpb
dec
hlt
call
lds
call
andb
arpl
jge
mov
jl
fstpl
lds
mov
shlb
ds
dec
jmp
mov
mov
into
les
lods
xor
push
test
mov
xlat
jmp
jge
pop
lcall
add
shrl
inc
and
mov
mov
xchg
jo
jmp
mov
pop
das
and
mov
loop
cmc
jge
aas
jge
jecxz
repz
les
imul
inc
xchg
stc
fcomi
jg
inc
hlt
pop
push
adc
movsb
sahf
scas
xchg
pop
mov
adc
std
test
adc
mov
inc
pop
adc
adc
inc
lock
cmp
pop
movsl
fcompl
jb
subb
mov
hlt
pop
add
stos
cmp
jae
xor
rorb
adc
popf
add
jo
push
jae
in
loop
call
inc
sbb
sub
cmp
mov
call
adc
and
pushf
pop
adc
stos
popl
add
fnstenv
inc
imul
dec
jne
xchg
fisttpl
movsl
or
cmp
xchg
push
inc
fs
push
add
pop
adc
jb
test
jno
pop
mov
jnp
dec
out
mov
xor
fs
mov
cmp
fidivrl
sar
mov
mov
xchg
loope
out
mov
push
push
adc
push
adc
pop
adc
cld
adc
adc
sub
adc
shr
pop
pop
adc
frstor
xor
adc
ffreep
xchg
jno
test
mov
adc
pop
adc
cld
adc
adc
pushf
sbb
ljmp
lock
call
jl
mov
mov
sbb
mov
call
mov
inc
push
mov
popf
pop
adc
pop
adc
dec
repz
pop
push
adc
fs
pop
adc
stc
mov
pop
sub
xorl
clc
sti
addl
pop
adc
mov
test
js
cwtl
ret
sub
aaa
mov
out
das
rclb
out
test
add
lock
nop
xor
mov
push
xor
xorl
aam
ror
int
or
pop
pop
adc
insb
jb
push
loope
cmc
xor
adc
lock
push
inc
add
fstpl
sbb
pop
pop
adc
pop
adc
adc
cld
xor
push
dec
popa
movsl
push
jmp
outsl
add
ljmp
mov
push
filds
dec
fwait
add
push
adc
mov
mov
pop
pop
pop
sub
aaa
dec
jo
xchg
aad
pushf
pop
adc
stos
mov
int3
pop
fcompl
aas
enter
cmp
cmc
aam
mov
loopne
mov
dec
scas
mov
mov
aaa
jns
scas
fistpll
call
dec
rclb
aam
mov
inc
pop
out
je
stos
sbb
mov
inc
fstpt
daa
mov
decl
shlb
stos
jge
dec
sub
xor
pop
xor
pushf
outsb
out
pop
mov
and
lcall
mov
cli
hlt
jg
pop
push
adc
inc
les
jg
mov
call
adc
cmp
hlt
call
sbb
int
fcompl
loope
decb
mov
xor
hlt
lcall
fadd
data16
mov
jmp
hlt
call
lock
mov
popf
pop
adc
adc
adc
cli
pop
lcall
pop
ss
hlt
call
sbb
push
cmp
pop
xorb
test
mov
pushf
pop
adc
mov
jne
enter
gs
xor
hlt
call
adc
aam
adc
adc
dec
inc
inc
adc
pop
adc
adc
enter
in
pop
pop
adc
inc
mov
pop
dec
cmp
lret
stc
lret
in
pop
pop
adc
ja
das
pop
jnp
call
jge
das
fdivp
mov
inc
adc
push
cs
fs
decb
and
jns
push
outsl
in
popa
cmpsb
das
pop
in
mov
into
sahf
ret
mov
clts
mov
jbe
mov
enter
and
adc
sbb
or
mov
push
mov
fisubs
shlb
dec
scas
sub
inc
pop
call
pop
loop
icebp
jmp
lods
push
out
xor
push
pop
pop
sti
and
and
adc
out
cmp
jb
jmp
cmpsl
inc
mov
stos
divb
cmp
daa
pop
mov
sub
scas
jmp
mov
and
adc
cwtl
cmpsb
daa
nop
test
xchg
pop
call
and
adc
xchg
int
and
adc
pop
gs
mov
mov
je
adcb
dec
rcll
testl
and
adc
outsl
mov
lods
loop
shll
sbb
mov
enter
dec
and
aas
push
pop
aam
xchg
push
loope
pop
mov
or
cmpsb
lret
push
adc
iret
addr16
jnp
cmpsw
pop
leave
ljmp
xor
fidivrs
rclb
sti
mov
mov
test
in
jecxz
jmp
and
pushf
inc
ds
les
dec
mov
cwtl
xor
dec
xor
ret
and
jno
sub
xchg
jmp
out
xchg
mov
and
cmp
sbb
loope
inc
ljmp
xlat
jb
cmp
push
sbb
pop
mov
mov
push
sbb
push
mov
in
in
outsb
cli
cmp
shll
add
jmp
adc
jge
and
jl
stos
insb
jg
adc
fidivs
aam
xchg
aad
movsb
mov
cmpsl
mov
pop
mov
adc
mov
xlat
gs
out
mov
test
fwait
xor
xchg
rclb
xor
cmp
inc
or
push
sti
push
jl
inc
inc
xor
adc
insb
call
or
mov
and
pop
popa
hlt
sub
jne
adc
cmp
push
adc
dec
movsb
jo
xchg
jnp
and
xchg
jae
scas
movsb
cltd
aam
mov
xchg
and
mov
jle
cld
xchg
fsts
xor
sub
xlat
test
test
sti
mov
lret
push
pop
addr16
nop
add
push
xchg
mov
xor
in
aaa
mov
jg
iret
mov
and
mov
inc
pop
xor
es
mov
dec
add
rolb
jg
jnp
nop
aam
subb
xor
mov
movsb
jnp
mov
jbe
sbbb
push
mov
cmc
insl
test
mov
xchg
mov
loopne
sub
leave
ret
outsl
or
fnstsw
sbb
jmp
cli
enter
call
push
cld
sti
shlb
adc
adc
adc
movsl
cmp
iret
inc
mov
inc
popf
add
cld
das
add
cld
adc
adc
ss
add
adc
and
mov
or
cmc
mov
jecxz
outsl
mov
popf
mov
push
mov
cli
sbbb
aaa
mov
add
jnp
out
lret
int3
fsubrl
inc
or
mov
mov
sahf
imul
int3
or
inc
stc
mov
mov
pushw
inc
add
mov
out
pop
jnp
mov
iret
or
fmull
jl
movsl
lods
test
decb
push
mov
inc
mov
push
testb
mov
dec
pop
adc
push
repz
imul
or
pushf
push
sahf
mov
lret
int
cmp
push
ljmp
rcrl
sbb
dec
adc
and
loopne
testb
jno
lea
jp
hlt
lods
sbb
mov
out
add
sub
mov
into
dec
outsb
sahf
outsl
sbb
div
sbb
cmp
xor
add
push
adc
arpl
xor
push
rcl
pop
std
cmp
out
fnsaves
cmp
jno
adc
mov
pop
add
std
dec
sub
adc
and
outsl
push
xlat
push
and
dec
sti
stos
inc
test
sub
lea
push
setbe
idiv
notb
xor
fists
popf
xchg
in
mov
cmp
jns
push
mov
mov
arpl
pop
dec
shrl
popf
jnp
push
xchg
cmp
and
jo
test
jo
push
pop
push
pop
and
popf
cmp
std
sub
mov
jb
adc
add
adc
push
adc
adc
mov
sub
ja
push
dec
jbe
shlb
fisttpll
xchg
inc
sub
mov
outsl
cmp
cmpsb
popf
mov
xchg
test
fiadds
scas
mov
in
sbb
adc
sbb
dec
ds
mov
pop
jle
fwait
pop
faddl
add
jne
inc
sub
adc
lret
aas
out
mov
sahf
cli
cwtl
xor
fiadds
aad
aaa
fistpll
add
pop
dec
xor
xor
mov
xor
pop
add
push
adc
gs
xchg
cltd
dec
xchg
jp
and
int3
pop
insl
jecxz
loop
fldenv
push
adc
xor
outsl
mov
adc
inc
push
push
mov
sub
nop
mov
mov
popa
lahf
ljmp
lds
sbb
xchg
into
mov
outsb
in
sbbb
xchg
xchg
call
adc
fbld
xchg
dec
outsl
dec
stc
pop
cwtl
leave
enter
movsb
mov
je
fstpl
and
xchg
jno
test
divl
add
repnz
xor
add
xlat
test
or
push
pop
test
and
test
fstpl
push
pop
pop
xchg
faddl
dec
xchg
dec
or
inc
dec
or
int
stos
enter
sti
jne
cmc
push
rcrb
fiadds
adc
or
push
pop
mov
xor
cmc
or
addr16
adcb
leave
je
rcll
ret
mov
push
sub
imul
je
out
add
pop
inc
inc
cmp
bound
sub
out
popf
rolb
int
mov
push
jae
push
mov
dec
mov
filds
sahf
cmp
add
mov
dec
pop
adc
cmpsb
sbb
movsl
leave
mov
pop
lcall
pop
pop
mov
pop
in
rorb
notl
jmp
test
mov
xor
pop
lret
jo
push
lcall
ds
hlt
sub
sub
cmp
pusha
mov
lods
sub
call
aam
andl
xor
xor
mov
dec
and
inc
in
and
lods
mov
sub
aam
mov
mov
dec
shrb
das
pop
pop
rcll
dec
ret
dec
jmp
mov
dec
nopl
jb
inc
mov
mov
pushf
pop
mov
xchg
call
and
inc
cli
hlt
jmp
sbb
pop
lret
dec
push
movsl
cmp
lea
subl
push
pop
push
push
xchg
push
dec
mov
push
mov
shll
push
mov
std
push
lea
shrl
mov
jg
testb
icebp
ljmp
jecxz
mov
push
lea
mov
mov
notl
cmp
hlt
hlt
pop
test
hlt
dec
adc
mov
dec
mov
sbb
mov
cmp
lret
call
ror
mov
add
rorl
add
out
sar
cmp
cmp
ss
ljmp
sub
ret
jmp
lret
in
adc
or
fimull
scas
out
jae
push
scas
pop
lock
pop
xchg
fidivs
dec
test
dec
dec
out
cmp
jmp
and
jo
leave
loop
repz
or
dec
or
push
shl
xchg
xchg
lods
sub
adc
pop
inc
adc
popf
cmp
popf
cmpsb
sbb
stc
push
pop
sahf
fidivrl
aas
sti
cmp
push
and
jbe
push
mov
inc
jecxz
insb
mov
outsl
xchg
repnz
lock
cmpsl
dec
mov
pop
pop
or
pop
mov
popf
in
repnz
mov
add
push
adc
lret
and
dec
jg
cmc
adc
lcall
adc
fwait
das
lahf
dec
inc
add
loope
stos
push
in
pop
mov
push
push
inc
dec
leave
mov
xor
lret
sub
adc
cs
xor
data16
xchg
jo
cs
fnsave
cld
adc
adc
xchg
mulb
test
pop
adcl
cmp
add
sbb
xor
popa
push
add
or
xor
cmp
scas
sbb
insl
es
je
inc
aam
iret
mov
mov
mov
xchg
mov
sti
xchg
push
fbstp
cmp
movsl
in
pop
clc
aad
pop
xchg
ficompl
das
cwtl
mov
xor
push
mov
jne
cld
mov
pop
insb
push
filds
mov
fsubrl
or
dec
mov
insl
sbb
push
pop
mov
insl
and
or
mov
lds
sbb
add
sub
xor
fcmovnbe
roll
mov
pop
in
mov
pop
hlt
jo
xor
insl
mov
sub
movsb
popf
rolb
shll
and
pop
jp
repz
call
ret
sub
test
lods
sar
jne
std
jo
call
clc
or
dec
jo
pop
pop
filds
inc
adcb
inc
or
out
cmpsl
imul
std
bound
pop
movsl
test
pop
clc
std
dec
pop
xchg
push
andb
or
and
ja
xchg
cmp
imull
in
fwait
xor
add
decl
lods
xor
and
out
push
stc
and
test
or
call
lret
xchg
in
jo
dec
in
pxor
xchg
ljmp
jnp
add
and
xlat
mov
mov
inc
adc
xor
pushf
mov
dec
or
inc
das
pop
jo
xor
adcb
jg
int3
sbb
das
aad
push
xchg
pop
out
jmp
idiv
hlt
bound
mov
xchg
lds
loopne
push
lds
int3
enter
inc
or
hlt
dec
and
jmp
mov
ret
push
mov
icebp
call
cmpsl
sub
or
dec
out
push
mov
jle
mov
mov
inc
or
inc
mov
mov
push
orb
xor
push
inc
mov
sti
jnp
jno
out
mov
jnp
fisubl
cmpsb
xchg
sbb
mov
cmc
mov
adc
out
cmp
stos
adc
jne
jne
aas
mov
icebp
pushf
add
xor
scas
filds
insl
out
cmp
and
aad
out
out
cmp
je
andl
push
pop
mov
jge
fwait
lds
stc
sbb
mov
outsl
jno
xor
scas
cmp
daa
decl
gs
xchg
push
ss
fdivrl
repnz
les
ss
mov
and
movsl
lods
push
push
sbb
subb
popf
or
mov
das
jl
xor
dec
lds
dec
int
mov
xlat
cmp
jno
les
imul
filds
inc
push
jo
pop
adc
lock
call
xlat
lods
out
rcll
mov
leave
pop
jl
hlt
pop
pop
popf
retw
and
ret
cmp
in
jp
mov
aaa
into
dec
inc
pop
jnp
outsl
dec
jge
mov
adc
and
ljmp
or
pop
sbb
or
sar
stos
xchg
bnd
sbb
or
push
sbb
aad
aas
std
aad
loop
aam
dec
cwtl
sub
push
jae
cs
insb
insl
out
imul
push
add
mov
popf
add
mov
cmp
xor
jb
mov
pop
insl
adc
jno
sbb
lahf
mov
loop
rcrb
inc
xchg
add
mov
jno
movsl
or
or
xchg
pop
bound
sub
out
mov
lret
pusha
jge
jns
jb
es
push
lods
fstl
sti
addr16
and
out
daa
jno
ret
insb
jnp
arpl
sub
push
mov
pop
push
sbb
fisttpl
imul
jns
repz
fcmovnb
mov
lret
add
into
xchg
cmp
and
mov
rclb
and
mov
lods
inc
lods
lea
sbb
outsb
and
cli
mov
shlb
mov
lea
xor
ret
in
add
or
clc
or
jns
hlt
xchg
ljmp
mov
dec
mov
dec
or
int
pushf
bound
mov
cli
hlt
xchg
ljmp
enter
lret
mov
push
cs
jecxz
xchg
pop
mov
mov
movsl
sub
rorl
add
push
push
in
popf
in
shlb
mov
in
jb
shll
adc
je
shlb
cmp
add
jns
filds
jo
dec
jno
ljmp
push
push
push
mov
pushf
fidivs
loope
pop
cmp
lret
andb
popa
cli
mov
call
clc
jne
movsb
nop
push
dec
outsl
loope
cmp
push
sub
dec
sub
push
dec
jno
adc
mov
add
mov
and
int3
mov
std
aaa
mov
daa
mov
add
cli
mov
call
sarb
jbe
pushf
loopne
push
in
out
push
ret
mov
mov
add
flds
add
mov
push
and
jbe
adcl
enter
cmp
sarl
popf
outsb
mov
repnz
sti
clc
notb
sbb
addl
mov
imul
clc
jbe
cli
mov
or
out
imul
jae
test
call
push
mov
push
pop
adc
popa
out
cli
mov
adc
xor
mov
inc
jb
jg
push
pop
adc
pop
or
sbb
push
jns
mov
icebp
and
outsb
xor
roll
xchg
jge
pop
ret
jg
and
xchg
lds
add
daa
dec
pop
jp
inc
ret
pop
mov
pop
pop
pop
shll
fwait
cs
push
arpl
mov
repnz
or
mov
sarl
sbb
add
sbb
xor
cmp
lcall
cld
push
aad
xor
or
fnstcw
jecxz
add
pop
dec
pop
jb
loop
cld
push
jg
adc
pop
push
jb
push
push
fistps
subb
lret
sub
sub
pop
pop
pop
jne,pn
jae
sub
sbb
lods
scas
lods
pop
arpl
scas
imull
shlb
mov
lret
data16
and
mov
push
jmp
mov
test
or
je
stc
pop
mov
mov
fcomi
or
sbb
pop
dec
fcompl
sub
adc
lea
sbb
jo
pop
add
sub
sub
sub
mov
inc
cmpsb
fcmovnbe
outsb
sbb
sub
jbe
mov
lods
mov
and
dec
add
pop
fdivrs
pop
xchg
sbb
and
cmp
push
xchg
out
sub
cld
loopne
inc
xor
in
filds
mov
out
repnz
mov
adc
cmp
xchg
scas
or
in
and
int
mov
xchg
insl
ljmp
cltd
and
cmp
xchg
jne
sub
jmp
push
mov
aad
movsb
inc
scas
lods
and
dec
jno
jae
sub
dec
jo
imul
sub
or
sbb
adc
insb
mov
push
mov
xor
push
lock
stos
add
out
or
lods
jp
scas
fdivl
xchg
push
cmc
mov
dec
testb
and
push
es
clc
mov
loopne
dec
mov
lcall
pop
leave
adc
or
xchg
jnp
leave
aam
cli
sub
sub
jp
arpl
lock
into
call
pushf
jmp
loopne
and
pushf
or
ret
ret
stc
cmpsb
aam
inc
push
mov
dec
in
push
mov
or
xor
js
xchg
movsb
lret
lds
lea
mov
insb
inc
xchg
push
lcall
jae
or
addr16
rcrb
mov
add
or
scas
mov
js
loopne
jo
pop
adc
xor
jae
bound
movsl
add
add
or
xlat
movsl
xchg
imul
pop
bound
gs
je
jmp
js
mov
inc
pop
adc
dec
int
inc
mov
les
imul
cld
inc
pop
adc
pop
or
jle
mov
inc
pop
adc
ljmp
dec
pop
pop
mov
xchg
cld
inc
pop
adc
mov
int
arpl
pop
in
fsubrs
out
std
push
hlt
and
pop
adc
adc
fists
lea
inc
fs
roll
pop
adc
or
xchg
mov
fistpl
xor
cmc
adc
push
push
lea
clc
sub
pop
or
cli
mov
mov
aas
and
sbb
in
sbb
icebp
in
inc
pop
sarl
lods
js
icebp
fisubl
mov
pop
inc
mov
dec
xchg
pop
test
hlt
cmp
push
dec
dec
cld
add
jl
lcall
lcall
pop
mov
and
mov
pop
adc
cld
inc
lea
call
dec
aaa
sub
test
ja
stc
int
push
pop
sbb
adc
push
outsl
push
rcll
idiv
sbb
push
int3
cmpsl
daa
dec
cld
adc
adc
xor
mov
call
fbstp
iret
adc
mov
fcomi
dec
xor
mov
and
imul
jno
xor
insb
jecxz
gs
jo
pop
adc
arpl
pop
mov
sub
sub
and
fmuls
sbb
int3
in
arpl
scas
repz
pusha
mov
adc
lret
jl
cwtl
pop
arpl
fildl
sub
xor
fmuls
pop
xor
inc
movsb
negb
pop
loope
std
mov
add
fstl
push
stos
push
pop
lcall
mov
data16
outsl
fisttps
aaa
outsb
out
movsl
out
js
xor
sahf
clc
popf
pop
adc
add
push
adc
xchg
pusha
inc
pop
adc
insl
sub
jne
jge
adc
add
popf
pop
adc
icebp
mov
test
clc
popf
pop
adc
cld
adc
adc
xchg
repnz
xlat
xchg
jmp
jnp
out
fisubs
rcl
shll
mov
pop
fnsave
cmp
dec
jmp
mov
mulb
les
push
sbb
fnsave
arpl
ljmp
je
sahf
jnp
mov
pop
cmpsl
pop
inc
or
jl
and
sub
mov
xor
out
jne
fcomp
mov
cld
inc
sbb
movsb
cwtl
jle
mov
stos
pop
or
fcomps
mov
and
lds
lcall
test
dec
mov
leave
push
inc
dec
test
and
insb
pop
xchg
add
push
adc
mov
inc
adcb
adc
adc
lea
lahf
and
pop
push
adc
fwait
sbb
push
jg
rcll
aam
or
pop
add
imul
mov
mov
mov
loopne
imul
lods
repz
dec
mov
inc
xlat
cld
xchg
fmull
xor
leave
fucom
mov
push
cli
pop
xor
rorl
jp
icebp
inc
xchg
mov
add
lock
add
in
xchg
jecxz
in
pop
mov
mov
jnp
pop
pop
jne
push
pop
call
or
sbb
or
or
mov
mov
lds
push
adc
je
in
leave
aad
pop
in
ss
xchg
or
orl
mov
push
sbb
lret
jne
mov
cmpb
pop
pop
aaa
push
hlt
or
add
cmovno
es
mov
push
pusha
xor
add
dec
daa
scas
test
add
jo
jecxz
push
jg
das
nop
cwtl
inc
addb
mov
in
out
fiadds
or
lods
mov
and
xchg
fcomps
jg
jb
push
pop
push
adc
icebp
mov
cli
mov
pop
xor
jbe
add
nop
mov
push
adc
cmp
insb
jl
adc
iret
mov
mov
dec
data16
aaa
xchg
mov
push
push
push
loope
shlb
dec
pop
mov
adc
pushf
mov
jmp
add
sbb
push
xor
mov
push
lods
dec
pop
jbe
fwait
sahf
mov
inc
decb
adcb
repz
addr16
pop
out
jmp
add
mov
sarl
xor
dec
in
push
insb
or
popa
or
outsl
and
dec
jne
pop
jecxz
pop
shlb
pop
and
insb
mov
and
and
sti
nop
dec
and
je
out
push
sbb
movsb
sub
sbbb
test
out
pop
mulb
jo
jg
xlat
stos
cld
and
dec
dec
ds
jecxz
jmp
mov
xor
inc
mov
lock
imul
das
insb
loopne
loop
pop
aaa
ficoml
out
shlb
sub
mov
fwait
or
lret
mov
lea
ljmp
add
imul
ds
and
fnstsw
les
outsb
in
ds
push
adc
pop
mov
add
lds
rolb
cmpsl
subb
jnp
mov
in
dec
lock
adc
shll
dec
mov
pop
jae
jb
popa
sbb
pop
jle
bound
xchg
test
push
pop
jge
cmp
mov
or
fcmovnbe
jl
aaa
dec
jns
inc
rclb
sbb
call
arpl
aaa
aaa
pop
sub
and
lock
cmp
scas
inc
push
icebp
dec
mov
push
fcoml
cmp
jle
in
mov
stos
daa
sub
xor
outsl
je
test
imul
sbbl
cmp
arpl
shll
insb
loop
in
inc
add
mov
lock
sbb
incb
sbb
mov
pop
pop
cwtl
fstps
rorl
mov
in
mov
mov
stc
nop
xchg
inc
test
adc
and
mov
mov
sbb
mov
test
cli
dec
mov
out
test
inc
inc
inc
stos
testl
mov
add
inc
dec
xchg
and
and
cmp
jne
inc
rcrl
cmp
mov
mov
scas
and
jae
mov
xor
xchg
int3
mov
or
ss
xor
pusha
mov
movsl
push
jg
sti
iret
push
ja
mov
call
adcb
bnd
fisttpll
dec
sti
shrl
mov
cld
xor
rorl
data16
ljmp
lods
mov
ret
dec
or
mov
xchg
sbb
push
cmp
nop
int
xor
cmpb
jl
jo
cltd
fldl
inc
mov
notrack
cmp
or
mov
inc
sti
sbb
bound
xlat
icebp
jnp
popl
lock
sbb
jmp
movsb
pop
ss
push
out
sbb
cld
xor
rorl
data16
inc
inc
sbb
lcall
ds
push
mov
ds
jnp
insl
adc
push
dec
mov
bound
cmp
dec
pushl
push
mov
clc
jl
xor
or
cmpb
movsb
xchg
popl
sbb
mov
stos
mov
add
mov
fwait
push
or
jnp
mov
pop
push
dec
in
pop
mov
push
lret
dec
add
inc
push
xchg
push
inc
mov
xabort
pusha
xor
mov
lods
rclb
js
pop
ret
add
mov
xlat
jb
lcall
movsl
mov
xor
mov
push
fs
dec
xor
stc
or
xchg
push
xchg
inc
fs
push
ja,pt
dec
push
pop
test
hlt
jns
dec
mov
inc
int3
push
movb
inc
bound
sub
cli
jmp
sbb
jecxz
repnz
xchg
in
insl
ds
imul
shll
lret
movsl
das
mov
cltd
or
cwtl
addr16
jns
push
fbld
mov
mov
rol
lcall
sub
sti
sbb
pop
push
mov
fmuls
and
imul
divl
int3
inc
add
fstp
test
xchg
pop
es
cmpsb
jle
add
xor
gs
add
cmpsb
xor
mov
or
mov
add
loopne
pop
xchg
ficoml
stc
lods
cli
enter
out
sahf
mov
push
loope
mov
repnz
stc
sbb
cmpsl
fnstenv
pop
xor
ficompl
or
imul
hlt
imul
repnz
sub
push
mov
fdivrl
or
xchg
subb
xor
pop
pushf
mov
dec
lret
mov
lock
xchg
fcoms
movsb
jmp
dec
push
stos
call
enter
jnp
xchg
pusha
popa
imul
out
adc
mov
jecxz
test
shlb
mov
mov
xchg
cltd
test
jle
rcrb
mov
packssdw
hlt
dec
loopne
addr16
sub
push
adc
fdivp
test
push
jg
insl
and
sub
xor
test
clc
cld
xlat
jns
adc
adc
jecxz
leave
jecxz
cmp
add
dec
inc
xorb
cs
or
cmp
loopne
adc
loopne
pop
gs
dec
nop
fdivrp
mov
outsl
xchg
pop
mov
dec
pop
sti
xchg
imul
das
pop
xchg
mov
jg
das
inc
jecxz
jb
sbb
dec
cmp
sub
cmc
std
cmp
testb
and
movsb
inc
pusha
nop
jecxz
mov
fdivl
jle
decl
test
shrb
or
out
pushf
push
das
push
mov
xchg
mov
xor
aad
sbb
cli
xor
jnp
call
rcrl
cmp
mov
mov
pop
pop
pop
enter
add
addl
into
insb
and
sub
mov
xchg
dec
mov
sub
stos
jae
xor
jp
std
add
push
adc
notl
packsswb
xlat
int3
jg
mov
dec
popf
rcl
or
jmp
fxch
cmpsb
or
cmpsl
cli
hlt
pushf
loope
popa
xchg
sbb
sbb
add
pop
in
sar
jne
mov
inc
xchg
xchg
or
cmp
es
mov
pop
in
clc
rorl
hlt
call
pop
or
scas
aas
add
and
loopne
mov
adc
adc
popa
push
mov
in
jge,pt
inc
pop
xchg
loope
sbb
into
adc
mov
dec
out
in
fldl
sub
xchg
add
inc
lret
fs
adc
push
push
mov
push
andb
fiaddl
daa
test
or
cs
sbbb
adc
pop
dec
in
decl
movsb
inc
cld
adc
adc
movsb
sbb
mull
mov
mov
dec
sbb
or
jb
mov
shrb
ljmp
pusha
std
cmpsl
es
sbb
mov
add
or
loopne
adc
xchg
sub
out
and
iret
or
mov
mov
mov
cmpsl
adc
sub
xchg
nopl
imul
push
adc
xorb
testl
divb
mov
jmp
jb
lcall
inc
loop
sbb
nop
rcll
xchg
pop
and
sti
push
stos
repz
sub
xlat
push
push
or
pusha
mov
cs
je
jecxz
test
adc
adc
dec
jae
scas
dec
arpl
jl
and
and
pop
push
sub
ret
push
sub
cli
in
out
in
lret
mov
cmp
in
pop
and
daa
jbe
cmp
test
rorb
mov
add
inc
fsub
in
cwtl
push
xor
mov
lahf
out
xchg
in
arpl
and
sbb
adc
push
shrl
push
dec
inc
add
cmp
adc
push
testl
mov
jg
lods
jp
mov
mov
ds
arpl
incb
shlb
es
in
inc
sbb
scas
lods
notl
icebp
mov
mov
test
sub
xchg
mov
fcoml
push
adc
fs
xchg
popa
inc
jae
int
or
fisubrs
jo
addl
out
jle
and
mov
movsl
in
jmp
and
mov
in
jge
lea
ss
pusha
dec
cmp
pop
int
jecxz
imul
mov
aad
mov
cs
inc
es
es
dec
pop
fcoms
add
jbe
add
ja
add
ja
add
jle
add
adc
adc
inc
add
stos
inc
add
mov
inc
add
adc
adc
inc
add
jle
add
cmp
adc
inc
add
add
adc
inc
add
add
inc
add
jle
add
adc
adc
inc
add
push
inc
add
adc
adc
inc
add
push
imul
cmpsb
div
pop
sti
popl
cltd
daa
sub
push
adc
dec
adc
aad
repz
adc
daa
mov
ja
cmp
mov
push
fdivrl
repz
pusha
mov
js
push
adc
push
icebp
and
shlb
push
lds
mov
pop
sub
stc
ret
setb
sub
ret
or
aad
inc
and
adc
pop
mov
in
push
jb
xorl
ret
pop
cmp
xor
loope
pop
cmp
dec
xor
fnstcw
insb
aas
adc
add
pop
test
jg
add
les
adc
aad
pop
hlt
imul
mov
cmpsl
outsb
xor
out
dec
jecxz
je
shrl
push
test
setl
xchg
hlt
mov
adc
push
xor
jecxz
int3
xor
in
pop
loope
imul
add
pop
jle
lock
xlat
leave
jnp
cld
push
dec
jl
scas
mov
cmc
add
adc
in
roll
push
bound
aad
ja
rcll
jo
subl
push
cmpsb
push
mov
mov
add
outsb
bound
fucomi
aas
ljmp
adc
pop
pop
jo
cld
sub
call
loope
dec
loop
insb
fbld
mov
pop
pop
jno
das
ja
leave
jp
loope
inc
mov
inc
sbb
subl
and
call
jmp
mov
adcb
imul
adc
mov
in
inc
popf
mov
in
jmp
mov
pop
pop
popf
ret
repnz
inc
sbb
fcoml
jo
popa
lahf
mov
xchg
mov
mov
pushf
gs
xor
ljmp
sub
inc
cltd
insb
inc
ss
std
push
por
cltd
cmp
push
cmp
test
mov
shll
and
sbb
orb
pop
and
pop
sbb
shll
jne
mov
hlt
cmpsb
jp
scas
sub
loop
and
aaa
or
es
in
shlb
or
aam
mov
mov
jbe
popa
xchg
push
jno
outsl
arpl
inc
xor
jo
fs
pop
pop
aad
xchg
lahf
dec
pop
cwtl
paddq
push
mov
inc
leave
pushf
mov
bound
loopne
adc
ds
out
aad
adc
loopne
xor
outsl
cmp
or
push
jg
cmpsl
jno
imul
xchg
xchg
bound
into
xchg
subl
movsb
cmp
lea
cld
lea
mov
add
inc
cmp
faddp
xchg
mov
das
imul
jnp
and
scas
push
test
mov
jne
gs
mov
lds
dec
xor
mov
mov
int3
dec
int
inc
dec
in
sbb
or
sbb
fwait
int
push
adc
adc
mov
fnsave
mov
test
out
xchg
sahf
fcomps
aaa
mov
ss
dec
movb
addl
xor
push
adc
fwait
int
sub
scas
out
dec
bound
xchg
push
adc
addr16
clc
mov
scas
frstor
dec
push
fldpi
out
shlb
int
cs
loopne
repnz
call
push
adc
inc
mov
sbb
jae
xor
lret
popa
shl
add
shrl
adc
xchg
sbb
add
sub
add
jne
in
aas
not
js
lea
cs
dec
jl
jne
std
add
out
cmpsb
inc
push
ror
fwait
pop
insl
insl
pop
dec
imul
div
sbb
mov
sbb
push
adc
mov
cmp
lret
rcrb
hlt
push
aad
xchg
mov
mov
cld
xchg
and
jg
lcall
shl
lahf
mov
push
into
inc
mov
repz
shrb
add
es
pop
inc
aaa
sub
in
nop
cmp
sbb
xor
out
and
fldenv
cmp
add
inc
js
rcrb
jae
vpsrlw
fstpt
sub
incb
add
dec
jns
leave
or
int3
jo
cwtl
cltd
mov
in
pop
rolb
add
push
add
sub
std
jl
out
dec
enter
pop
pop
xor
int
jnp
popa
shrb
test
add
mov
addr16
cmp
in
mov
mov
sub
stos
dec
mov
out
cmp
sub
stos
orl
pop
pop
mov
jl
imul
aaa
shrb
jbe
int
insb
mov
cwtl
sbb
mov
pushf
insl
push
test
rcll
dec
andb
adc
ljmp
je
cmp
jle
cmpsb
pop
out
jnp
xchg
mov
xor
sub
clc
call
jmp
mov
adcb
in
test
dec
xchg
pop
enter
test
mov
in
call
cmp
jo
sahf
cs
nop
jge
imul
pop
dec
inc
pop
ljmp
pop
mov
rclb
or
mov
adcb
push
inc
shrl
lahf
jge
add
bound
std
std
pop
ret
sahf
imul
jno
mov
aam
aaa
xor
adc
clc
stos
shrl
sbb
or
inc
mov
in
mov
andl
fdivr
push
xchg
xchg
dec
push
mov
jle
jg
test
jp
je
jo
pushf
add
ljmp
int3
rcrb
mov
xchg
rorb
es
cmp
mov
rclb
pop
dec
and
pushf
test
sti
stc
addr16
and
adc
adc
xchg
orl
scas
jge
mov
mov
in
or
or
scas
sbb
cmpsb
shrb
lret
lods
push
jp
lret
enter
jge
ljmp
int3
popa
je
push
aam
and
movsl
add
cld
fcom
imul
addl
cltd
shlb
adc
aam
movsb
xor
push
add
dec
add
sub
push
aam
lds
jmp
push
stc
add
mov
xchg
pop
ja
mov
gs
cmc
test
push
int
mov
out
andl
sub
mov
mov
jp
jecxz
dec
fisttpl
jae
jecxz
arpl
and
out
movsb
pushf
rorb
jp
sbb
mov
jae
pop
leave
xchg
out
adc
jb
arpl
cmp
or
jbe
incl
repz
adc
clc
vucomiss
out
dec
pusha
lea
cmc
add
cld
cltd
xor
imul
insb
leave
das
adc
and
pop
xor
or
cs
sbb
bound
dec
mov
lret
in
test
dec
inc
inc
cmp
ljmp
int3
in
and
sahf
push
jle
sbb
mov
sbb
xchg
loopne
ficompl
add
sti
push
sti
jl
das
movsl
sub
mov
fs
cmp
lcall
mov
out
movsb
dec
sbb
fcomp
xchg
loope
and
dec
adc
sub
inc
add
aas
les
aam
add
sub
shrb
pop
stc
stos
cmp
mov
mov
fiadds
push
jp
scas
mov
jne
fs
movsl
push
test
pop
subb
push
push
pop
pushf
push
push
jmp
add
or
cli
hlt
pushf
pop
pop
xorb
arpl
fwait
or
or
adc
sbb
mov
mov
cs
cmp
arpl
push
xlat
mov
push
mov
lcall
xchg
lds
sub
ss
in
pop
in
imul
je
mov
movsb
push
aaa
cmp
pop
ret
pop
out
and
mov
cmp
jne
adc
push
mov
or
sbb
mov
sti
sub
fsubs
mov
pop
pushf
xlat
mov
xchg
inc
mov
mov
dec
pop
arpl
mov
add
cld
mov
or
imul
pop
leave
adc
xlat
clc
ja
inc
in
and
dec
pop
jg
and
popl
inc
popf
inc
xchg
fs
pop
jg
movsl
sub
mov
push
fimuls
adc
or
repz
xchg
push
jg
xor
jb
nop
movsb
lret
xchg
or
mov
decb
mov
cwtl
mov
das
xchg
mov
or
mov
or
mov
or
or
popf
mov
ljmp
mov
ja
call
fistpll
cmp
xchg
or
pop
in
pop
movsl
inc
add
xor
das
mov
in
sar
clc
decl
xor
sub
jo
pop
cs
fisubrl
cmpsb
mov
inc
sbb
pusha
fisubrs
ret
or
dec
inc
fiaddl
aas
cmp
sbb
push
cmp
jbe
mov
lds
repz
dec
popa
lods
jnp
pop
or
lods
lret
ljmp
mov
mov
push
cmp
rcrb
pop
jl
fimull
sti
xchg
push
cmpsb
xor
adc
pushf
add
fildll
insb
adc
pushf
loopne
adc
cmp
fwait
iret
sub
inc
call
adc
jge
dec
out
cmc
ds
ja
cwtl
imul
push
dec
lock
aam
in
cmpsl
sbbl
rcl
mov
test
inc
fsubs
loopne
ret
pushf
pop
or
imul
sbb
rclb
cld
es
cmp
adc
lock
in
pop
lcall
stos
mov
rol
add
cmp
sub
sub
fistpll
pop
mov
jne
xchg
rclb
pop
ds
into
inc
fidivs
inc
cmp
adc
or
and
out
pop
jae
adc
xor
test
iret
cs
mov
call
imul
mov
mov
loop
loopne
adc
inc
dec
testb
das
push
callw
daa
jb
sti
int3
mov
add
lret
aas
stc
inc
sarb
mov
fwait
ljmp
add
rcrb
fisubrs
dec
dec
dec
adc
in
mov
dec
fidivrs
out
addr16
cmpsl
cltd
pop
dec
repz
aaa
xlat
mov
loopne
adc
push
rcl
addl
sub
xchg
sarb
mov
adc
push
mov
aam
cmc
std
dec
xchg
and
mov
push
push
adc
jns
sub
mov
fsubl
ljmp
int3
inc
xchg
scas
fdivrl
cmp
loopne
adc
fiaddl
addl
push
jns
repz
arpl
xlat
mov
mov
in
stos
ret
insb
adc
inc
jl
inc
jmp
mov
xchg
fsubs
mov
js
push
adc
mov
add
arpl
mov
ljmp
pushf
call
into
popf
cmp
bound
mov
jecxz
scas
pop
mov
out
or
xlat
dec
lock
mov
or
push
adc
sub
mov
sbbb
or
mov
bound
lds
or
js
push
adc
push
sub
xchg
or
push
out
cmp
and
push
xor
sub
jae
jno,pn
jge
inc
jecxz
sbb
aaa
je
shlb
push
mov
pop
inc
shrb
mov
add
lret
hlt
sub
pop
xor
sbb
sbbb
call
xlat
jbe
leave
jge
movsl
cmp
sub
cld
jg
mov
test
mov
ret
or
adc
xchg
pop
jge
in
addr16
cmp
mov
xor
sbb
mov
pop
add
push
mov
xorb
inc
lock
sub
mov
cmpsb
inc
jmp
push
adc
mov
sub
idivb
js
mov
and
xchg
add
mov
cmp
std
jb
lcall
mov
std
cmpsl
mov
shlb
add
jae
addr16
into
jns
test
or
or
gs
add
or
mov
dec
negb
add
sarl
push
mov
xchg
adc
mov
and
push
jge
nop
sub
or
les
rclb
push
lahf
out
and
lods
ljmp
in
fcmovnu
scas
sbb
in
mov
imul
pop
shrl
pusha
add
push
scas
iret
cwtl
push
sub
movsb
arpl
fidivl
and
lock
mov
cli
lahf
lahf
or
cmp
hlt
jp
sub
push
pop
cmpsb
pop
push
xchg
shlb
insb
loope
jbe
push
and
lea
jecxz
in
sbb
cld
sub
xor
cmp
jae
sub
rcr
push
es
cld
push
imul
out
pop
mov
rcrl
mov
repnz
sbb
pop
testl
sub
aaa
and
fdiv
inc
mov
cltd
gs
add
inc
das
je
stc
repz
mov
fdivl
ss
adc
or
adc
lea
xor
loopne
push
dec
pop
shlb
cs
inc
jb
cmpsb
repnz
add
gs
addr16
sub
aas
xor
mov
xlat
pusha
xchg
mov
in
adc
test
adc
insb
in
addb
out
sub
in
push
rcrl
xchg
in
ljmp
out
push
lret
xchg
rorl
mov
movsl
xor
imul
inc
fbstp
ja
imul
ljmp
jmp
out
imul
and
rol
repnz
imul
out
cmp
mov
rcl
aad
push
cmp
loopne
adc
lcall
mov
jg
ficomps
mov
pop
push
adc
cwtl
mov
mov
test
jns
xor
lret
add
or
pushf
mov
adc
pop
dec
push
jl
adc
mov
mov
sar
xchg
or
ffree
inc
dec
lret
lahf
push
or
push
pushf
imul
bound
xchg
movsb
leave
cwtl
mov
jmp
pop
enter
dec
lds
xor
pop
dec
xor
rclb
arpl
jne
mov
pushf
jl
jne
addb
clc
cmc
cmc
push
dec
and
movsb
lret
rorb
cmpb
jle
movsb
push
jp
in
pop
rclb
pushf
xlat
lock
call
popa
cmp
jo
pushf
fimuls
aaa
mov
xor
jge
adcb
stc
addr16
fstpt
ljmp
add
adc
imul
int
fdivr
call
sub
std
mov
jmp
cmpsb
lds
inc
psrlw
mov
dec
jo
pop
dec
aas
jae
decl
daa
test
jmp
cli
hlt
pushf
imul
into
mov
les
mov
pop
push
jae
push
mov
inc
adc
add
cmp
in
int3
sbb
adc
dec
inc
xchg
cmp
jle
hlt
ret
setnp
mov
adc
dec
cmpsl
insb
jl
adc
pop
mov
movsb
mov
aaa
out
cltd
arpl
bound
sub
inc
or
push
ds
jne
cmpsl
enter
ljmp
scas
xor
shrb
test
pop
rclb
push
cmp
sbb
or
adcb
mov
movsb
iret
adc
pusha
fwait
test
cmp
outsl
inc
xor
fldenv
subb
jo
in
nop
sbb
push
mov
pop
hlt
jg
icebp
jne
mov
jbe
les
test
add
xchg
cmp
push
imul
fidivl
mov
in
and
in
loopne
adc
das
push
or
out
sub
push
popf
out
cmp
daa
cmp
or
xchg
pop
sub
lahf
lea
xor
outsl
arpl
push
sub
shlb
sbb
mov
rorb
mov
mov
push
adc
jg
movsb
ljmp
popa
jge
jge
jge
movsb
cmp
push
or
sahf
and
outsl
dec
imul
cmp
mov
and
loope
adc
icebp
gs
or
and
pushl
add
pop
mov
nop
push
aas
pushaw
andb
cwtl
adc
fld
push
das
pop
gs
dec
inc
das
inc
pop
xorl
pushf
inc
cwtl
imul
in
stos
idivb
sbb
push
int
add
cmp
js
mov
dec
or
mov
sbb
pop
mov
jmp
ret
fidivrl
mov
mov
push
stos
nop
fstpt
data16
je
pop
ficomps
mov
imul
and
cmp
mov
sub
or
insb
insb
xchg
enter
pop
insl
test
gs
jle
sahf
fcomps
shl
arpl
stc
mov
fstl
push
fldcw
mov
ret
cmpsl
and
xchg
popa
dec
iret
fdivrs
out
push
loopne
repnz
in
popa
dec
ror
adc
negb
pop
stos
int3
or
pop
movsb
ror
movsl
scas
inc
cmp
and
mov
sub
sub
cmp
stos
cmpsl
aaa
dec
jle
repz
push
pushf
imul
and
fisttps
xchg
out
sub
adc
lsl
arpl
popf
pop
xchg
lret
pop
mov
std
sbb
test
daa
es
pop
aaa
xchg
xchg
pop
popl
mov
mov
dec
push
leave
cmp
loope,pt
sbb
not
sub
std
jecxz
dec
ljmp
mov
or
stos
push
jno
dec
push
pop
pop
push
xor
mov
movsb
lret
mov
and
aaa
js
inc
cmc
mov
hlt
call
mov
push
rclb
int
cmp
jmp
icebp
clc
mov
inc
js
dec
clc
mov
mov
push
mov
ljmp
jl
add
pop
cmp
sub
add
push
or
xchg
rcl
mov
movsl
test
jne
inc
loopne
xchg
imul
jo
xchg
inc
ja
push
addb
lea
ja
nop
fsubp
sti
push
jb
in
inc
jmp
mov
ds
jl
out
push
std
movsl
add
ljmp
js
sbb
push
jp
sbb
in
sar
mov
out
xor
and
sbb
stc
add
xchg
push
lahf
pop
jnp
or
loope
or
ficoms
jns
mov
jne
push
ljmp
insb
jge
sbb
push
pop
pushf
in
sbb
jno
mov
or
push
lock
hlt
xchg
jmp
aaa
mov
mov
cli
or
movsb
push
mov
mov
loope
mov
shll
sub
cltd
or
cwtl
and
ss
inc
aam
sti
out
das
dec
dec
mov
mov
sbbb
xchg
shrl
jne
sub
jbe
lret
jo
or
aad
push
lea
or
test
aam
enter
divl
stc
loopne
cwtl
loopne
mov
loop
jmp
scas
push
mov
dec
push
lea
lds
inc
jl
jmp
xchg
push
push
pop
aas
jecxz
decb
inc
adcb
mov
jns
sbb
mov
enter
test
lods
in
sub
xor
movsl
and
sbb
clc
mov
aas
cmp
pop
rorb
mov
scas
out
lret
fldt
out
lods
stc
in
cmpsb
dec
adc
mov
clc
push
sub
cld
sub
add
rcrb
dec
or
cmp
pushf
jns
cltd
out
xor
fstpt
push
inc
subb
push
dec
fidivl
xchg
rcl
fmuls
gs
mov
sub
scas
mov
cmpsb
dec
cltd
cmp
stc
sbb
in
scas
movsb
movsb
mov
cltd
or
scas
pusha
jl
or
mov
sbb
cltd
es
dec
xchg
les
icebp
ss
push
mov
shrb
jmp
mov
mov
cld
xchg
mov
sbb
or
jmp
test
jp
int3
mov
insl
dec
mov
dec
leave
mov
and
fcmovb
or
mov
into
pop
pop
xchg
mov
dec
jp
sarl
test
rcrl
data16
or
and
mulb
or
mov
and
mov
sub
cwtl
pushf
iret
pop
out
jmp
dec
adc
aad
sbb
push
pop
insb
mov
mov
mov
pop
cwtl
loope
lret
outsb
lahf
dec
and
pop
cmpb
cmp
call
and
fwait
push
mov
cld
xor
cmp
stc
loope
sbb
test
push
stos
jbe
rcll
lret
cmp
sbb
pop
popl
pop
sub
jo
outsb
addr16
test
popf
add
daa
fildl
fcompl
adc
jle
fcomip
mov
js
out
aas
mov
adc
and
ja
mov
mov
fcomip
mov
xor
jg
inc
mov
mov
scas
ss
jae
adc
pop
nop
push
out
sahf
bound
add
push
mov
mov
call
decb
jge,pt
dec
idivl
inc
and
es
mov
push
fs
dec
stc
hlt
xchg
out
sub
rorl
out
outsb
ret
popf
cmp
imul
jb
ljmp
dec
adc
inc
fs
xor
aad
or
cmp
mov
sbb
sbb
testb
pop
lds
xor
dec
in
je
xor
cmp
mov
arpl
aad
jl
fdivs
mov
stos
ret
pushf
pop
das
sub
cmp
js
jl
inc
or
push
sbb
dec
mov
inc
xchg
mov
loopne
loopne
sub
int
sub
es
lcall
loope
adc
jl
ja
push
dec
dec
rcll
mov
popa
and
mov
jnp
arpl
aad
lahf
outsb
mov
xchg
pop
inc
hlt
push
pushl
vcvtps2pd
or
cli
jle
movb
sbb
into
sub
and
or
push
fsubrp
dec
mov
jl
or
jbe
mov
dec
jbe
sbb
adc
jne
or
lods
mov
sub
pusha
and
in
cli
les
and
lret
imul
mov
cmp
push
sbb
in
pop
dec
inc
add
xor
xor
jb
cli
cltd
in
add
les
inc
mov
cltd
sub
pop
loopne
repnz
jns
sbb
add
stos
adc
jne
jne
aas
mov
adc
xchg
aad
lahf
cmp
rolb
sbb
out
pop
sti
mov
cwtl
neg
les
push
mov
shrl
rcrb
lds
outsb
and
xor
pushf
push
sbb
inc
pop
add
xor
add
pop
push
sbb
mov
fmuls
hlt
adc
stos
repz
pop
adc
or
dec
sarb
testl
rcrl
bound
shrl
leave
push
ljmp
inc
inc
cmp
popa
jbe
outsl
bound
jnp
push
xchg
inc
jmp
pop
nop
test
cmc
fidivs
into
ja
xchg
int
rclb
in
cld
ficoms
mov
jo
add
movsl
cmpsl
cmc
repnz
cmpl
jae
enter
sbb
or
std
repnz
mov
movsl
das
pop
jb
mov
aad
mov
leave
loop
fwait
out
add
lea
xchg
in
outsl
cli
mov
sbb
fs
push
push
dec
sar
stos
or
pop
and
leave
inc
enter
out
lcall
aad
mov
sub
mov
add
jmp
xor
mov
aad
xor
pop
fwait
push
xor
push
adc
frstor
int
shll
loop
pop
gs
push
adc
pop
js
push
adc
lret
addr16
shrb
dec
test
sti
mov
scas
inc
imul
adc
push
addr16
mov
test
mov
jmp
cltd
mov
push
pop
popf
and
cmpsl
mov
lods
test
loop
sti
clc
nop
in
lods
insl
mov
fadd
cmp
cmp
mov
ret
mov
xor
test
push
in
jb
daa
mulb
mov
jl
pop
sbb
inc
leave
mov
jl
push
jle
in
cltd
idivb
enter
xor
xor
lret
subl
jbe
hlt
xchg
test
jne
mov
sahf
adc
divl
test
or
sahf
outsl
pop
xor
pop
inc
aam
dec
mov
aad
or
ljmp
leave
jl
loope
orl
imul
js
dec
jp
jo
cs
cmp
loopne
imul
or
rcrl
je
shrb
inc
mov
inc
add
loope
cmp
and
fwait
pop
mov
fsubs
cmp
add
mov
leave
jno
test
add
pop
xor
cmp
dec
in
jne
sub
inc
js
mov
inc
jmp
inc
mov
es
testl
cmp
push
out
orl
flds
pop
sub
test
sub
insb
mov
test
test
jns
decb
pop
leave
insl
jnp
leave
add
pop
jle
jnp
mov
cmp
repnz
loopne
orb
pop
std
jl
cwtl
lds
mov
sbb
mov
enter
jp
sbbb
jp
mov
sub
pop
xor
inc
aam
movsb
and
stc
add
outsb
das
mov
add
push
push
les
addr16
push
fcompl
cmp
dec
repz
nop
in
add
and
cltd
push
aaa
xor
inc
nop
mov
sbb
add
adc
push
sub
mov
repnz
mov
jl
andb
dec
push
dec
add
jnp
jecxz
lods
pop
adc
dec
mov
and
xor
jmp
enter
cmp
stc
cld
hlt
push
sub
rolb
push
dec
mov
sub
mov
int
clc
popa
stos
test
dec
dec
mov
xor
xor
xchg
fisubrs
push
cltd
aam
imul
xchg
fmuls
push
sub
mov
dec
mov
push
loop
ds
rclb
adc
xor
jo
mov
inc
hlt
add
add
in
loop
dec
pusha
cmp
sbb
cmp
jmp
icebp
pop
dec
adc
movsb
fidivs
in
jb
and
sti
loope
fdivs
lret
cmpsl
loop
std
jnp
push
test
mov
ficoms
xor
iret
xchg
stos
push
add
mov
stos
out
sbbb
dec
cmpsl
adc
pop
adcb
loopne
inc
cmp
fstl
negl
push
sub
dec
or
test
adc
xchg
sbb
test
test
push
cmpsl
sub
shll
stos
out
add
mov
aaa
dec
es
outsl
mov
lret
aas
jne
cli
cmp
dec
mov
xlat
int3
rcrb
ljmp
jbe
sti
bound
mov
cmpsb
mov
test
dec
ljmp
and
pop
xchg
add
rorb
mov
xor
xchg
add
push
adc
cmpsl
shlb
push
mov
xor
addl
ret
fildll
mov
aaa
xlat
sbbb
pop
icebp
xchg
mov
test
mov
mov
in
xchg
cmp
into
cmp
add
xchg
jno
out
sub
mov
adc
pop
push
fst
shrl
and
mov
ret
xorb
pop
inc
pop
adc
mov
mov
xor
leave
sbb
mov
adc
imull
mov
or
into
sbb
adc
xchg
jmp
jecxz
sub
mov
hlt
cwtl
push
adcl
cmp
mov
clc
inc
out
popf
mov
in
cmp
jnp
or
mov
pop
pushf
loopne
lods
jns
loopne
les
int
push
pop
xor
mov
loopne
lret
movb
push
mov
pushl
mov
inc
clc
xor
mov
in
inc
insb
insb
jmp
cmp
inc
push
ret
dec
daa
cs
jl
mov
pop
movsl
sbb
cmc
pushf
push
shlb
mov
test
das
push
cmp
nopl
or
pushf
outsb
pop
xor
adc
fisttpll
jne
xchg
test
or
pop
pop
data16
pop
das
pop
mov
cmp
loopne
adc
xor
cmpl
pop
insb
aam
pop
push
adc
dec
sar
negl
mov
cmp
lods
or
int
mov
stos
pop
cli
hlt
jg
mov
adc
jno
ret
insb
jl
adc
lcall
lret
cmc
adc
std
jo
pushf
loopne
ljmp
hlt
push
xlat
popa
clc
mov
in
clc
inc
or
mov
mov
inc
cmp
cld
loopne
mov
inc
xchg
fcoml
lahf
out
decb
inc
add
jb
jle
cmpsb
push
mov
add
xchg
sahf
push
das
pop
xor
sahf
cwtl
mov
rcrb
aam
or
mov
mov
enter
push
ret
shrl
mov
cmp
stos
mov
pop
jmp
xor
mov
add
aam
aaa
xor
or
xchg
mov
inc
sub
test
leave
jns
sub
jne
jecxz
xor
rol
addb
sarb
jne
fcmovnu
icebp
ja
stos
out
test
mov
stos
mov
and
cmp
push
sbb
in
loop
jg
and
sti
xchg
sbb
gs
mov
out
push
pop
dec
mov
stos
in
add
push
jns
sbb
in
scas
sub
test
js
lahf
pop
dec
jne
push
and
push
scas
cmp
or
push
inc
sbb
cwtl
pusha
iret
arpl
xchg
lods
pmullw
dec
fwait
popa
clc
lret
sarl
sbb
loopne
or
shl
lods
push
add
xchg
out
cmpsb
push
hlt
cmp
push
loope
adc
lret
pop
mov
fwait
add
sub
pop
mov
inc
lahf
pop
adc
push
jle
cli
out
sub
lds
add
scas
sub
dec
mov
sub
pop
push
fldenv
or
mov
inc
inc
dec
dec
dec
dec
sbb
mov
jp
jae
dec
call
out
mov
int3
adc
dec
dec
jb
dec
jmp
les
sbb
xchg
cli
dec
pop
fadds
sub
sbb
jle
out
ror
lret
mov
add
into
xchg
cmp
xchg
lret
sub
aad
lods
xchg
sbb
mov
scas
popf
js
mov
jl
push
testb
mov
les
cmc
or
mov
sub
push
xchg
lds
mov
in
push
sbb
adc
cmp
je
les
add
dec
cmp
pop
mov
and
mov
or
das
arpl
and
js
dec
mov
in
cwtl
add
adc
cs
scas
fsub
out
dec
and
outsl
fcmovnbe
push
adc
test
cmp
faddl
mov
out
dec
xchg
mov
inc
in
dec
pusha
mov
xacquire
ljmp
mov
pop
sti
aad
pop
push
outsl
pop
mov
popl
pop
hlt
gs
cmpl
fcompl
or
cmc
jo
mov
je
push
stos
xor
pushf
inc
lret
mov
jbe
inc
mov
mov
mov
sub
add
add
movl
add
push
or
pop
adc
mov
jne
mov
mov
cmpsb
sbb
test
xchg
sti
cmc
call
insb
add
scas
pop
das
sub
fimull
lods
cs
mov
in
or
int3
push
cmpsb
cmc
jmp
mov
ljmp
inc
sub
inc
push
add
push
push
jge
sbb
fucompp
pop
or
movsb
nop
push
in
loope
add
xor
je
or
push
ljmp
jl
mov
testl
fadd
jne
iret
push
mov
js
aaa
mov
movsl
or
rcl
cld
mov
mov
or
clc
idiv
hlt
xchg
jmp
aaa
mov
movsl
sbb
insb
mov
es
std
jae
decl
xor
or
jl
inc
mov
fs
scas
test
movb
add
inc
or
in
jbe
shlb
push
gs
push
popl
sahf
xchg
cmp
mov
sbb
out
movsl
adc
inc
std
scas
fisubrl
popf
jmp
add
inc
jge
int3
mov
and
fidivrl
outsl
xchg
sbb
mov
jl
lret
ret
or
or
or
sbb
in
repz
outsb
sahf
jnp
mov
push
call
lock
out
filds
imul
fisubl
pop
sbb
inc
cmc
out
mov
in
and
mov
pop
sbb
inc
rcrb
cmpsb
mov
rcl
cli
xlat
pop
push
mov
incb
inc
xchg
arpl
in
adc
pushf
ja
dec
pop
add
fstpt
scas
sub
sbb
dec
pop
jp
mov
xlat
sub
sbb
fidivs
push
out
cltd
iret
mov
sub
int3
pop
pop
mov
push
xchg
pop
or
mov
out
outsb
cs
popa
test
cmp
in
in
sub
call
push
lods
loopne
lods
sbb
in
stos
inc
out
and
roll
pop
xchg
dec
nop
andl
sub
dec
jbe
adc
dec
out
sub
in
pop
cli
out
bound
xor
dec
or
sub
xor
andl
dec
sub
sub
sahf
cltd
ror
jge
das
jecxz
mov
add
imul
lds
loope
push
lret
inc
sub
decb
sbb
shrb
loope
or
xchg
dec
push
aad
adc
cltd
icebp
lcall
cmpsb
mov
jns
add
test
xor
xor
ss
cmp
arpl
fisubs
dec
call
clc
data16
and
pop
jl
jle
mov
js
call
popf
test
mov
ret
cld
lods
jle
hlt
es
sub
imul
pop
test
cwtl
add
out
cmp
cmp
dec
les
xchg
mov
push
pop
shll
fdivr
ja
lcall
in
mov
push
js
pop
push
or
pop
xlat
lods
inc
test
pop
xchg
push
ljmp
cli
lret
sub
fcos
hlt
faddl
adc
nop
push
add
popl
cwtl
jb
notl
decb
dec
scas
fidivrs
add
je
xchg
dec
faddl
loopne
inc
addb
pop
das
aad
jo
and
or
dec
mov
lea
mov
mov
imul
out
sub
hlt
pushf
push
dec
pop
sub
movsl
pusha
icebp
sub
vpunpckhdq
ds
or
inc
jb
push
dec
jl
mov
inc
or
negb
pop
push
push
sub
pop
ds
pop
cld
js
cld
jg
cmpl
mov
subl
push
mov
adc
push
push
cld
or
ds
pop
jge
ss
cmp
pop
in
icebp
lret
pop
push
sub
push
in
aas
in
mov
xchg
or
push
iret
popf
mov
pop
andb
repnz
hlt
xchg
jmp
xor
sti
hlt
pushf
arpl
popf
cmp
dec
test
add
pop
pop
push
fsubrp
push
mov
rorl
dec
clc
test
push
mov
movl
mov
mov
cltd
push
rcr
les
je
shrl
add
jno
xchg
push
mov
mov
pop
orl
iret
insb
pop
call
or
cmc
popf
arpl
cmp
fcmovb
lock
pop
inc
shrl
inc
cld
mov
add
push
mov
inc
bswap
push
sub
jge
cmpsl
lret
inc
inc
or
jle
add
jno
mov
add
add
pop
inc
jge
les
adc
push
jne
hlt
lods
mov
xchg
push
cld
and
cld
mov
jecxz
icebp
icebp
call
cmp
add
cmp
cmpsl
cmc
fcomp
jnp
pop
fdivl
xchg
push
xchg
xlat
popa
pop
cs
inc
and
ret
rcll
ja
lcall
arpl
jbe
pop
lods
rcrb
aaa
sarb
std
mov
mov
mov
push
jecxz
lret
pusha
jnp
stos
dec
shll
cmp
xchg
xor
lahf
mov
scas
xchg
add
xor
bound
mov
cmp
mov
popa
jge
jg
add
cmp
jb
data16
negl
xlat
fstp
loopne
lods
daa
imul
scas
adc
sahf
dec
jmp
lods
addr16
cmpsb
sbb
cld
notl
mov
push
jnp
fadd
ja
imul
inc
sbb
sbb
aad
in
nop
sbbb
and
cli
flds
push
jns,pt
movsl
call
popl
adc
dec
lea
jb
mov
iret
sbb
inc
rol
cmpb
add
jge
dec
lret
jae
loope
outsl
or
xchg
notb
or
in
lock
jae
sbb
cltd
loop
gs
fistl
xchg
push
mov
js
enter
repz
lock
dec
leave
into
jnp
fnstcw
jb
sub
out
jne
jns
fwait
stc
mov
scas
in
push
int
icebp
xchg
rcrl
mov
jl
nop
mov
call
sbb
push
out
push
shlb
repz
lea
cli
insb
adc
and
jo
inc
lret
movsl
aas
xchg
dec
lcall
jmp
insb
loop
dec
outsl
and
push
mov
xchg
mov
popa
xorl
and
lahf
mov
and
mov
das
cld
jnp
push
stos
jne
mov
ja
xlat
adc
dec
xchg
out
js
mov
movsl
sahf
in
mov
push
inc
ss
insb
sahf
imul
xor
xchg
lahf
xchg
outsl
xchg
adc
inc
test
pop
lock
xchg
sub
xchg
in
or
lds
jg
imul
mov
dec
cmp
mov
and
cmp
ficoms
add
jg
dec
adc
dec
packsswb
aad
inc
mov
mov
mov
scas
and
jae
mov
or
mov
in
outsb
jecxz
mov
rcl
mov
jle
jb
push
xor
jmp
pop
in
or
pop
pop
pop
int3
leave
sbb
or
xchg
jnp
leave
aam
jle
movsl
lods
xor
mov
in
or
or
inc
repnz
dec
les
push
jnp
xor
je
pop
dec
push
xlat
mov
jmp
movsb
nop
aaa
sbbb
adc
xor
shrl
mov
sub
cmpsb
test
addr16
decb
aad
jo
insl
test
mov
pop
je,pt
ret
adc
clc
pop
add
ljmp
ror
mov
cltd
dec
gs
lods
adc
or
imul
and
xchg
dec
lods
mov
lds
loopne
in
mov
fdivr
std
xchg
das
push
ljmp
jecxz
shlb
popf
push
jne
popf
push
decb
jbe
and
push
out
mov
insl
and
dec
sbb
add
loopne
inc
xchg
sbb
testb
pop
push
shll
mov
sub
jmp
inc
mov
pop
jg,pt
push
dec
jbe
mov
add
inc
test
pop
cltd
push
push
out
imulb
xchg
aad
sarl
ss
movsl
xlat
fadds
mov
fcmovb
pop
enter
sti
add
lock
rolb
popa
ja
dec
mov
inc
inc
nop
inc
leave
sbb
movsl
and
cld
mov
outsb
popf
mov
std
mov
sarb
movsl
imul
push
dec
stos
and
pop
ja
or
dec
xor
pusha
cs
cmp
hlt
loope
adc
mov
or
push
push
das
xchg
xor
mov
cwtl
adc
in
cmp
dec
push
sbb
mov
lret
sti
das
outsl
lcall
ss
loope
push
xchg
xchg
jmp
xlat
in
and
insb
std
aam
bound
sbb
rcll
nop
push
mov
add
cmp
add
stc
pop
push
lods
aam
pushf
shr
jo
pop
adc
lock
pop
and
gs
mov
pop
xlat
aam
hlt
ds
rcrl
inc
pop
bound
lret
sbb
dec
mov
jp
sub
adc
ret
in
cmp
arpl
pop
pop
adc
shlb
push
test
mov
inc
pop
adc
gs
stos
sub
inc
pop
adc
and
imul
dec
xor
test
push
xor
in
loope
pop
mov
and
loope
push
cltd
test
mov
fists
stos
mov
dec
inc
in
pop
pop
adc
lcall
and
scas
cli
inc
sub
call
data16
pop
pop
adc
push
adc
cmp
pop
pop
adc
rcrb
pop
adc
sbb
lahf
aas
sub
sub
push
arpl
or
pushf
pop
adc
decb
outsb
add
mov
rorl
xchg
decl
pop
adc
into
add
push
adc
inc
outsl
cmp
push
loopne
add
pop
pop
adc
aam
xor
out
test
lahf
cmp
pushl
scas
nop
loopne
lahf
inc
xchg
adc
push
out
add
xor
enter
cld
jecxz
sbb
enter
jg
xchg
out
mov
scas
in
cmc
test
xchg
dec
adc
or
adc
add
mov
pop
push
adc
dec
or
adc
and
jae
std
int
xor
clc
xchg
pop
adc
push
outsl
or
jle
xor
pusha
mov
add
lea
es
mov
pop
push
fs
ljmp
call
jge
jge,pt
popa
pop
lods
popf
mov
jae
adc
mov
xchg
bound
inc
mov
imul
cld
adc
adc
mov
pop
das
pop
aam
mov
adc
mov
shll
popf
cmp
andl
inc
pop
in
mov
cmpsl
or
call
lds
add
or
cli
hlt
lcall
dec
dec
ret
dec
jmp
mov
rcrl
xor
repnz
mov
pop
mov
std
cli
hlt
shrl
mov
jge
mov
mov
popa
cmp
adc
jecxz
outsl
pop
mov
jge
hlt
call
sbb
int
stc
mov
movl
mov
pop
dec
movl
mov
adc
adc
cld
pop
push
call
scas
and
jns
fidivrs
mov
sahf
pop
adc
adc
mov
add
sbb
adc
adc
xor
push
sub
sti
lcall
and
addl
mov
repz
jecxz
nop
mov
mov
arpl
testl
fidivrs
push
sahf
xor
dec
mov
lcall
mov
rcrl
adc
sarb
mov
not
loope
xchg
icebp
jmp
or
out
add
push
mov
es
add
sub
adc
sub
je
or
movsb
outsl
push
adc
mov
mov
stos
mov
pop
adc
jecxz
jp
xorl
fstpt
jne
inc
pop
adc
xchg
mov
pop
or
jmp
cmp
pop
ret
xor
push
leave
popa
sub
js
xchg
pop
lret
xchg
lret
popf
pop
cld
notb
mov
iret
inc
ljmp
popf
xor
pushf
mov
push
jne
mov
shll
pop
adc
push
dec
jbe
mov
mov
xchg
xor
das
inc
movsb
jae
movsl
jbe
ds
dec
inc
add
sahf
lret
dec
lret
inc
inc
fisttpll
inc
pop
adc
mov
cmpsl
in
fs
rcll
adc
adc
and
test
stc
les
fisubs
sub
inc
pop
adc
mov
mov
loopne
sub
aas
fadds
jge
cmp
out
adcb
int3
pop
sbb
adc
xor
je
push
push
mov
pop
adc
ds
sub
lds
pop
adc
ret
mov
xlat
scas
cld
int
dec
dec
ds
adc
aad
jne
mov
mov
adc
jo
std
cmp
pushf
pop
adc
stc
shrb
call
out
add
pushf
pop
adc
xchg
xor
push
add
shll
cs
loop
push
fbstp
push
sti
mov
pushf
pop
adc
sbb
lods
xor
stc
cmp
mov
daa
scas
adc
sbb
and
pop
adc
mov
imul
jmp
orb
fdivrl
or
adc
add
push
adc
sbbb
push
addb
popl
imul
shll
pop
adc
dec
cmpb
jno
jg
inc
pop
adc
popf
pop
adc
and
iret
call
pop
adc
jl
pop
adc
sub
mov
jge,pt
pop
lcall
bound
addb
mov
jmp
movsl
addl
mov
inc
push
ror
ss
pop
sub
jl
pop
adc
dec
iret
mov
inc
mov
mov
pushf
cmpl
mov
repnz
mov
push
cmp
xor
mov
jg
lea
call
loopne
stc
sbb
cli
ja
int
jns
popa
xchg
and
add
push
sbb
dec
popa
xchg
pop
icebp
cmovo
mov
mov
mov
call
jge
or
js
in
pushf
pop
adc
shr
popf
jb
into
bound
test
decb
adc
mov
xor
sahf
pop
adc
or
pop
jne
sahf
pop
adc
mov
pop
adc
lcall
adc
cld
adc
adc
std
xor
popf
pop
adc
ret
popf
pop
adc
shlb
daa
sub
movl
cmp
shll
pop
adc
push
imul
mov
mov
popf
pop
adc
sti
xor
sahf
pop
adc
js
mov
push
push
pop
mov
and
mov
int
testb
adc
idivb
xchg
int3
sbb
call
out
mov
mov
call
push
adc
ret
adc
pop
adc
shlb
mov
adc
cltd
add
lods
sub
lret
sub
data16
insl
loop
adc
jle
les
pop
push
cli
sbb
sti
jo
pop
adc
sbb
lea
outsb
lret
push
mov
cmp
mov
lret
dec
dec
jb
cmp
pop
int3
inc
mov
dec
xchg
in
push
or
xor
push
jg
ficoml
out
sub
adc
pop
mov
cmp
mov
add
fisttps
dec
jmp
sub
sub
mov
push
mov
pop
push
adc
leave
dec
jbe
in
or
adc
insl
daa
push
jns
insb
stos
subl
imul
mov
clc
xchg
pop
adc
mov
xchg
ss
sub
cmp
pop
adc
fs
sbb
aaa
add
mov
xchg
icebp
imul
into
pop
movsb
push
repz
jbe
aaa
inc
ss
ljmp
adc
jne
jae
in
mov
ljmp
rcll
push
pop
pop
adc
xor
push
pop
push
adc
push
pop
pop
adc
loop
xor
sbb
inc
mov
cs
test
cmp
xor
enter
ss
mov
divl
iret
cwtl
cld
xchg
stc
inc
cmpb
or
stos
sub
shrb
jecxz
scas
xor
adc
add
jb
imul
pop
adc
lds
adc
adc
std
insb
test
mov
push
aad
push
push
pop
pop
adc
dec
jo
cmp
dec
xor
jo
xchg
pop
fs
aam
sub
int3
pop
mov
jp
adc
mov
mov
stos
nop
popf
pop
je
pop
jle
out
iret
push
and
repz
push
or
lods
sub
ret
pop
outsl
ret
mov
lods
stc
std
mov
xor
mov
test
cli
hlt
call
fcompl
jge,pt
mov
shll
aad
mov
sbbb
pop
pop
adc
inc
stc
push
jg
inc
xchg
sub
call
mov
arpl
dec
std
cli
mov
pop
pop
aaa
jo
pop
nop
mov
inc
and
mov
mov
fcoms
push
adc
jecxz
push
pop
mov
jge
pop
lcall
mov
sbb
add
addl
lock
push
mov
xor
sbb
cld
xor
dec
cltd
sbb
decl
shlb
jge,pt
sbb
into
and
arpl
xor
outsl
hlt
call
adc
test
or
mov
adc
lret
add
push
cli
hlt
pop
cmpsb
fcmovnu
xchg
pop
cli
xchg
sti
lock
lcall
je
xchg
das
pop
jp
or
sub
popf
cmc
call
mov
lds
mov
add
mov
cmp
nopl
mull
inc
mov
test
pop
push
cld
adc
adc
mov
inc
iret
sti
cmc
ljmp
sbb
mov
cmpsb
test
add
or
mov
pop
pop
aaa
jle
xor
aaa
mov
pop
mov
clc
pushl
mov
push
xchg
test
dec
xchg
add
int
jecxz
stos
mov
orb
dec
add
xor
mov
push
adc
test
xchg
lahf
sbb
outsb
out
div
adc
pop
lret
popf
pop
adc
insl
lods
sub
out
std
clc
pushf
mov
and
xor
cmp
push
and
mov
sbb
push
cmp
fs
gs
repnz
mov
and
jno
dec
dec
dec
xor
pop
fs
jne
cmp
sarl
push
sbb
push
loop
mov
xor
data16
cmp
push
and
pop
les
subl
jb
push
adc
xchg
nop
xlat
lret
popa
add
sub
mov
stc
outsb
mov
sub
fistpl
fistpl
lods
cwtl
popa
push
push
jl
lahf
daa
dec
bound
lret
dec
dec
dec
mov
ds
dec
scas
gs
pop
addl
sbb
push
add
pop
icebp
push
push
loope
mov
fisubl
mov
test
pusha
add
mov
jne
into
mov
loope
pop
mov
int
adc
insl
insb
xchg
jns
mov
mov
sahf
pop
adc
add
testl
sbb
mov
pop
in
and
ret
xchg
icebp
movsb
out
aas
mov
in
mov
or
or
pop
adc
jecxz
cli
es
cs
dec
sub
pop
xorb
and
imul
or
inc
inc
stos
popf
cmp
mov
decl
pop
adc
push
aam
out
inc
iret
out
lods
into
add
jnp
sahf
pop
adc
or
pop
adc
lahf
or
pop
adc
pusha
das
dec
loopne
or
xor
or
pop
adc
xchg
sahf
pop
adc
ds
cld
pushl
sub
ret
les
dec
sbb
and
aaa
add
xorl
pusha
inc
add
cld
fwait
call
ficomps
pop
mov
adc
inc
jae
loopne
push
jmp
rcl
jbe
arpl
arpl
icebp
sub
cld
cli
sbbb
popf
pop
adc
lods
pushf
mov
movmskps
cmp
js
pop
movl
or
mov
iret
aad
mov
mov
lea
int
aam
mov
or
das
xor
adc
mov
push
mov
rcr
hlt
sbb
cs
call
shr
lret
hlt
shrb
int
addb
adc
adc
adc
add
add
pop
das
mov
adc
add
push
adc
leave
jl
pop
lret
mov
hlt
inc
jg
sub
jo
jmp
adc
mov
std
cli
int3
xchg
mov
mov
sub
xchg
mov
xchg
push
clc
lea
adc
jg
pusha
adc
adc
popa
jg
mov
adc
xchg
mov
popf
popf
cmp
aas
add
loopne
repnz
push
pop
dec
mov
inc
daa
aaa
mov
popa
mov
cs
inc
pop
pop
adc
push
cld
adc
adc
ror
or
adc
shlb
pop
push
add
dec
jae
ja
dec
test
add
pop
mov
aas
jno
test
inc
and
dec
pop
adc
inc
mov
insb
mov
fldt
xchg
call
pop
mov
loopne
into
lea
sti
jmp
cld
push
test
aaa
into
sbb
fsub
rcrl
adc
add
adc
adc
sbb
sub
inc
loop
xchg
jno
pop
inc
data16
cmpsb
cmp
adc
dec
int
inc
pop
pop
adc
mov
xchg
cmpsl
sub
pop
pop
adc
push
xchg
into
stc
add
and
out
fcom
push
cmc
gs
mov
jmp
fidivs
add
adc
sub
cmp
adc
popa
pop
adc
xchg
js
fs
jle
mov
sbb
imul
hlt
xor
movsl
jecxz
mov
pop
xchg
rcrl
scas
cld
out
shll
jp
pop
push
adc
add
adc
adc
imul
hlt
cs
jbe
in
jo
pop
adc
inc
mov
adc
outsl
sti
push
jbe
movsl
sbb
inc
mov
pop
pop
adc
or
lret
mov
adc
lea
adc
jae
mov
adc
adc
pop
pop
pop
adc
mov
nop
pop
pop
pop
adc
pop
pop
pop
adc
lea
adc
push
adc
popa
stos
imul
rcll
jbe
imul
hlt
and
test
pop
xor
push
adc
xor
push
mov
lods
push
cmp
push
pop
pop
adc
jno
mov
mov
lret
std
int3
sub
pop
push
adc
push
pop
pop
adc
mov
or
fs
xchg
xchg
adc
add
cmp
push
push
pop
pop
adc
mov
cld
decl
add
push
pop
mov
jno
push
sub
or
mov
mov
packsswb
mov
and
out
jecxz
sarb
or
imul
movsl
fadd
inc
leave
add
cld
push
pop
pop
adc
jge
test
imul
push
ljmp
stos
or
int3
fstpt
jp
sbb
mov
pop
jp
pushf
stos
js
mov
cmc
pop
dec
jb
fdiv
mov
fsubrp
loopne
das
pop
aas
inc
pushf
pop
pop
adc
mov
push
arpl
push
adc
imul
pcmpgtw
or
les
sbb
cmp
and
imul
mov
and
loopne
outsb
or
mov
lahf
sub
das
pop
adc
loop
std
in
and
mov
xchg
pop
mov
pop
adc
sub
mov
mov
fnsetpm(287
xchg
pop
sub
hlt
call
sbb
popf
adcb
test
cld
cli
hlt
adc
xlat
cmp
push
pop
cmp
out
and
js
call
mov
shlb
sahf
fdivr
hlt
call
sbb
cwtl
mov
pop
std
ds
arpl
aad
sub
mov
jo
jmp
lds
adc
adc
in
ret
daa
sub
cmp
cld
loopne
idiv
jle
jmp
adc
je
cmp
std
ret
das
pop
mov
or
xor
les
jle
movl
mov
jl,pt
pusha
push
jb
into
ljmp
das
and
lds
pop
std
cmp
sub
push
imul
inc
cmpsb
inc
inc
adc
sub
add
push
adc
push
mov
sub
sub
pop
adc
js
xchg
mov
mov
dec
and
push
sbbb
test
push
lcall
mov
aad
pop
call
dec
or
pop
adc
xor
dec
and
jmp
clc
in
rcl
jge
fldcw
push
dec
movsb
push
xlat
fnstenv
push
sbb
cmpsb
imul
pop
adc
adc
mov
aam
fs
repnz
sbb
jno
fldenv
mov
mov
orl
mov
xor
cmpb
cld
add
shlb
xchg
xchg
sub
insl
pop
test
adc
loope
call
jno
inc
jmp
les
daa
cmp
mov
add
sub
dec
popf
mov
adc
cltd
test
adc
push
shrl
cltd
fistpl
lahf
out
jno
fiadds
int3
in
jo
mov
mov
dec
fistpll
adc
xor
dec
mov
adc
adc
ficompl
fwait
xchg
push
fcomps
jecxz
ja
sbb
pop
pop
adc
inc
rcll
mov
imul
sbb
mov
aad
cld
iret
sub
insl
and
adc
pop
mov
aaa
xchg
sahf
push
add
or
mov
and
int3
inc
rclb
cli
push
xchg
fucomi
test
icebp
jle
in
jbe
and
jmp
in
dec
dec
addr16
mov
xchg
cmp
int
inc
enter
fildl
das
in
das
push
inc
mov
xchg
xchg
xchg
loop
and
rorb
add
pavgb
mov
mov
out
sub
jb
pop
push
inc
fstps
push
sub
add
sub
dec
loop
sub
or
sub
movsl
call
sbb
inc
lret
in
pop
push
test
pushf
jne
cmpsl
mov
xor
mov
adc
mov
add
add
pop
adc
cmp
rolb
sahf
pop
adc
push
fadds
adc
and
je
mov
out
and
inc
pop
adc
pushf
pop
adc
in
inc
pop
adc
jns
mov
sahf
pop
adc
or
pop
adc
push
inc
cmpb
jge
jp
xchg
xlat
lret
call
add
inc
pop
adc
popa
in
pushf
pop
adc
lods
push
push
or
inc
or
or
pop
adc
add
adc
cli
xchg
mov
or
cs
and
into
cmpsb
stc
sub
int
call
jge
cwtl
cmp
pop
sbbb
loope
lea
xor
adc
lock
adc
inc
int
inc
adc
insl
inc
out
sti
hlt
call
sbb
shlb
add
mov
pop
xchg
cmovs
decl
mov
jne
ljmp
inc
aam
push
pop
push
arpl
ds
sbb
sbb
pop
adc
mov
adc
adc
sub
dec
into
jmp
lock
int
add
pop
pop
adc
es
jbe
ljmp
pop
mov
add
mov
jge
sbbb
xor
iret
pushf
cmp
movsb
cmp
add
pop
ret
aam
pop
add
imul
sub
push
xor
imul
jno
outsl
add
push
adc
aaa
sub
fstpl
notb
cmpsl
adc
mov
pop
cmp
insl
pushf
mov
adc
mov
insb
jl
adc
mov
adcb
mov
pop
add
pop
push
hlt
jno
dec
mov
ret
mov
jno
adc
push
shrl
jmp
sbb
xchg
pusha
or
clc
jge
nop
sub
mov
push
pop
rolb
pop
movsl
ja
lods
leave
xor
scas
mov
push
xor
dec
rcr
and
pop
sub
jge
cmpsl
jbe
jl
mov
stos
adc
sub
pop
push
pop
mov
int
and
xchg
mov
cmp
jp
jne
sbb
test
jge
loop
insb
xchg
sbb
cmc
mov
sub
addr16
fldlg2
sbb
add
insl
mov
pop
nop
faddl
mov
aaa
cltd
adc
push
icebp
fdivr
xchg
xchg
inc
xchg
dec
cwtl
pop
sbbl
movsl
xor
lods
sbb
rcrb
cwtl
fistpl
addr16
jns
pushf
dec
lds
les
and
outsl
adc
xor
dec
imul
adc
xor
sbb
jo
pop
adc
fidivrl
xor
cmp
pop
dec
pop
aad
xchg
movq
fs
pop
repz
mov
jns
xor
mov
in
paddb
idivl
dec
xor
mov
insl
movb
out
aas
cmp
scas
sub
arpl
inc
mov
stos
bound
bound
jb
arpl
scas
mov
and
cs
popf
rclb
push
adc
scas
cwtl
sub
pop
gs
or
adc
dec
mov
xor
dec
and
cmp
adc
pop
adc
push
push
adc
sub
loop
inc
inc
in
int
lahf
xchg
xchg
xor
jo
ficoms
gs
aaa
push
addr16
decl
aad
xchg
mov
add
cmpsl
mov
adc
add
pop
mov
data16
jl
call
sti
and
pop
pop
pushf
cmc
mov
jp
rclb
sahf
push
lods
es
ljmp
xor
xchg
daa
xchg
inc
xor
dec
push
xchg
cmp
mov
push
fwait
dec
sbb
lods
rolb
not
addb
cli
inc
mov
adc
sbb
fwait
cmp
sahf
cmp
mov
leave
add
ret
das
pop
mov
testb
adc
pop
mov
jmp
pop
sub
ljmp
inc
sub
fldt
fwait
loopne
mov
xor
incb
lock
add
xor
call
loopne
roll
xchg
pushf
in
mov
idiv
cli
push
inc
mov
fsubrs
lahf
fcomip
call
in
enter
push
pop
ret
fldenv
shl
xchg
jecxz
jae
fmulp
mov
jl
pop
mov
hlt
cli
hlt
inc
jg
test
call
stos
inc
mov
ror
inc
addl
std
call
lock
mov
or
sbb
sub
insl
mov
jg
lea
push
jnp
pushf
push
jge,pt
or
cs
ds
les
insl
sbb
jg
call
adc
adc
jmp
mov
pop
dec
iret
mov
xchg
mov
popf
popf
cmp
dec
add
inc
stc
ud0
inc
xchg
sub
add
arpl
push
mov
push
das
inc
addl
enter
inc
insb
add
push
adc
inc
and
xchg
xchg
pop
pop
adc
or
lds
mov
mov
jg
adcb
pop
cmp
pop
adc
and
push
push
mov
out
out
in
in
aad
hlt
leave
movsb
outsb
or
dec
pop
jecxz
shlb
cld
dec
roll
pop
adc
sbb
sbb
shlb
add
lcall
push
femms
mov
popa
scas
dec
jle
je
call
popf
pop
adc
cld
adc
adc
push
test
sbb
in
add
jmp
negl
push
sub
movsb
es
je
mov
mov
push
adc
test
pop
pop
pop
rcr
xchg
mov
or
pop
pop
adc
stos
pushf
push
cmp
dec
inc
push
pop
push
adc
mov
lret
fs
mov
mov
mov
inc
repz
and
lods
xchg
dec
push
das
lods
push
xchg
push
xchg
lods
sub
push
cltd
mov
in
cmp
cmpsl
xor
ret
xchg
mov
aam
sub
sbb
lea
jb
nop
loopne
or
push
sbb
pop
sbb
fldcw
push
dec
jbe
fisubrs
test
adc
adc
jb
stos
adc
push
popf
adc
cmc
rcl
dec
dec
dec
sub
xor
leavew
mov
into
mov
dec
inc
cmp
pop
imul
sub
adc
or
int3
loopne
pop
adc
adc
xchg
cmp
xchg
mov
lds
xor
pop
and
test
test
call
fiadds
xor
sub
outsl
loope
jb
int3
cs
popf
pop
adc
jbe
adc
adc
cmpsb
or
or
arpl
and
jb
popf
pop
adc
aam
adc
arpl
pop
adc
adc
xor
cmp
and
and
es
mov
cmovns
js
mov
cmpsl
sbbb
xchg
pushf
repnz
pop
xchg
pop
jle
adc
jae
sub
push
rclb
push
adc
mov
adc
adc
test
and
lds
inc
inc
outsb
cmp
cmp
fistps
inc
icebp
movsl
stos
dec
decl
sahf
fstpl
xchg
cwtl
jecxz
pop
clc
xchg
pop
adc
scas
add
adc
int3
lea
mov
sbb
mov
or
stc
outsl
inc
or
xchg
cmp
xchg
addl
jmp
xor
iret
pop
sub
push
scas
lret
int
arpl
insl
adc
mov
add
push
mov
pop
or
sahf
stos
in
mov
inc
sbb
lret
dec
call
mov
dec
into
jge
mov
xlat
push
xlat
xor
adc
bound
mov
jmp
lods
lcall
add
cmp
sbb
push
mov
push
das
pop
lret
shlb
mov
dec
call
adc
lcall
sbb
xlat
xor
mov
push
aaa
gs
je
hlt
adc
adc
bound
gs
pusha
mov
decl
loope
mov
jge,pt
inc
pop
call
push
sbb
mov
add
call
scas
rolb
mov
sbb
stc
or
int3
push
das
pop
test
mov
decb
mov
aas
jge
ret
shrl
mov
cwtl
jo
lds
jg
int3
inc
add
mov
dec
in
ret
mov
sbb
xchg
cld
or
pop
fcoms
push
adc
add
and
push
movsb
sarb
sbb
cmpsl
lock
cmp
adc
mov
aas
leave
shrb
mov
sar
pop
sbb
nop
add
sti
std
pop
jp
mov
xor
fwait
sti
xchg
loop
cmp
cld
adc
adc
pop
adc
dec
inc
orl
sub
testb
loope
mov
mov
and
push
xchg
std
cmc
negb
xchg
popa
pop
cmp
jb
jle
icebp
call
push
pop
lcall
cmp
call
xchg
and
dec
cld
inc
lea
push
adc
ds
rorl
sub
xchg
cwtl
xor
fldt
sbb
jecxz
mov
movsl
jl
jl
ficompl
pop
jo
push
movsl
nop
jecxz
fldl
lahf
fcomps
cmp
xchg
cld
movsl
mov
pop
popa
inc
hlt
xor
xor
push
cs
xor
inc
addl
ja
ss
in
sahf
xchg
xchg
mov
leave
sub
xchg
popf
cmp
add
fs
add
jb
mov
imul
cli
push
addr16
fsubl
xchg
push
push
mov
cli
adc
fcmovb
lret
ret
pop
popf
pop
out
mov
push
inc
ljmp
pop
mov
mov
xchg
mov
adc
mov
fbld
movsl
clc
mov
cmp
popa
loope
lock
adc
adc
add
add
xor
push
adc
cli
dec
cmp
pop
repz
dec
leave
addr16
out
inc
mov
ficomps
mov
fs
shll
xor
and
aas
mov
jb
fs
cmp
jns
push
push
mov
jb
movsl
mov
push
popf
xlat
ljmp
cmp
push
cs
shl
add
xchg
xlat
arpl
fs
mov
int3
inc
push
insb
bound
pop
repz
jns
lods
and
call
insl
arpl
ss
sbb
pop
fiaddl
pushf
pop
adc
lcall
sub
das
das
ljmp
insb
test
fcoms
push
aad
adcb
adc
adc
loope
mov
stos
mov
js
fcoms
inc
jbe
stos
fdivp
lods
bswap
pop
pop
inc
into
ret
pop
mov
mov
mov
nop
loope
jge
mov
cmp
mov
and
adc
fisttps
mov
or
xor
push
push
cmp
ss
jecxz
and
adc
stos
push
adc
sub
addb
push
add
inc
sti
or
mov
outsl
or
xor
pop
pop
adc
xchg
adc
adc
js
jne
std
jo
pushf
loopne
ret
fisttpl
pop
test
rorl
adc
adc
add
add
lds
xchg
loopne
mov
popf
pop
adc
adc
mov
std
cli
orb
in
add
sub
adc
bound
lods
sub
mov
sahf
repz
call
nop
push
loop
pop
cs
dec
fists
shlb
std
cli
jecxz
popa
mov
cmp
sub
inc
fcoms
adc
cli
addb
fs
pop
stos
jge
pop
lcall
push
lock
mov
in
xchg
xchg
inc
xchg
fildl
shl
mov
xor
mov
adc
sub
adc
pop
sub
into
cmc
call
adc
mov
mov
adc
inc
nop
test
aas
jge
pusha
inc
pop
adc
pusha
inc
pop
adc
lods
fldcw
lods
call
dec
push
jle
fcompl
push
push
jns
xor
sti
sub
pop
call
fistpll
jg
pop
mov
cmpsb
mov
xor
shlb
push
push
add
call
inc
dec
clc
popf
pop
adc
sbb
adc
adc
mov
jecxz
stos
sbb
or
addl
cmp
cmp
ror
push
in
lods
aam
sub
rclb
add
popa
pop
xchg
or
pushf
pop
adc
inc
pop
in
loop
add
sbb
lcall
inc
rcl
call
jae
add
int
lcall
cld
adc
adc
stos
add
loope
pushf
push
movsb
pop
and
mov
pop
rcll
lcall
xor
mov
icebp
dec
mov
mov
stos
lret
adc
cmp
lea
in
sub
fsts
lcall
jno
in
xchg
jmp
lods
xor
dec
jmp
into
insl
rcl
lea
lea
and
bound
orb
lret
pop
or
ja
mov
loop
std
dec
cld
hlt
xchg
add
sub
push
not
cld
cmovle
xor
dec
cmp
fisubs
push
clc
inc
add
andl
repnz
jle
dec
adc
insb
outsl
jae
int
cmpsb
arpl
push
xchg
and
inc
add
sub
and
mov
cmp
fstp
jne
inc
push
scas
in
inc
xor
ss
sbb
sbb
xor
cmp
inc
push
popa
std
mov
stc
imul
int
jle
pop
and
and
or
and
fistps
sahf
mov
mov
popa
jmp
in
fsts
fs
jp
jg
jg
xchg
inc
push
sbb
cmpl
iret
jecxz
popa
jmp
ficoms
sub
enter
mov
test
mov
fcmovnb
jb
pusha
clc
jae
sub
dec
movsl
inc
cmpsl
jb
jo
pop
cmp
pop
pop
sub
mov
ja
lods
dec
xor
sahf
frstor
imul
push
push
xor
jmp
xor
test
shl
sub
jg
outsl
or
mov
sub
cmc
nop
imul
xor
jle
push
lds
mov
bound
inc
adc
jp
out
repz
xchg
ret
mov
push
out
es
mov
pop
in
imul
mov
pop
pushf
loopne
addb
dec
pop
cmpsl
push
out
mov
push
and
adc
js
add
jmp
test
dec
jnp
je
shll
cltd
dec
gs
lods
adc
or
dec
mov
call
test
jmp
ds
mov
inc
adc
or
mov
test
sbb
pop
arpl
mov
sub
add
cli
xchg
mov
mov
loope
out
mov
ret
lods
mov
leave
lea
add
add
leave
adc
out
in
adc
imul
shll
into
jne
dec
jmp
add
pop
adc
push
cmp
pop
add
outsb
mov
cmpsl
loope
cwtl
sbb
jmp
pop
pop
adc
dec
add
out
add
test
mov
addb
cli
mov
add
pop
dec
add
mov
inc
mov
in
roll
jg
call
cmpsl
shll
mov
add
push
pusha
pop
mov
cli
cmc
sahf
and
inc
and
hlt
ret
out
cmpsl
call
dec
pop
or
daa
fwait
cmp
repnz
int3
dec
or
mov
xor
sub
dec
mov
or
pop
pop
adc
in
insb
or
fwait
test
mov
jno
jne
sbbb
pop
xor
jne
out
test
je
decl
pop
pop
adc
bound
sub
push
pop
adc
push
add
ret
daa
rorb
cmc
sub
mov
xchg
add
pop
in
push
je
bound
mov
mov
mov
xchg
pop
adc
int
stc
sbb
mov
outsl
xchg
push
fs
ud1
push
push
repnz
sub
jno
cwtl
js
sbb
mov
cmp
pop
orb
test
scas
lock
cmp
cmpsl
fcom
imul
imul
xlat
mov
enter
jne
shlb
lretw
jns
je
xor
cmp
sub
cmp
jle
sub
cltd
call
xor
push
mov
pop
pop
adc
jne
shlb
cmpsb
cmpsb
cmpsl
shr
lods
mov
inc
fidivl
xlat
test
or
pop
cmpsb
popf
lods
pop
and
jo
dec
cmp
mov
inc
jae
cmp
dec
mov
pop
pop
adc
dec
mov
pop
xchg
fwait
fwait
lcall
push
out
jl
sbb
test
pop
cmp
mov
test
data16
aas
jne
push
cmp
sbb
push
ficompl
mov
call
and
xchg
dec
hlt
push
cltd
popf
lea
add
and
cmpl
xor
push
mov
pusha
adc
mov
or
call
pop
out
call
js
mov
xchg
cmpsb
cmc
ficoms
mov
in
xchg
xchg
pushf
or
shr
ja
sub
popf
cmp
arpl
add
mov
push
xchg
shrb
and
addr16
pop
lret
sub
repz
cmc
mov
jae
leave
pop
push
mov
sub
push
out
mov
nop
mov
dec
aam
imul
mov
je
inc
and
repz
out
and
add
pusha
push
mov
fucomi
cmp
adc
adc
pop
mov
cmp
or
pop
mov
push
pop
mov
cmp
insl
xor
mov
popl
in
cmc
jne
sub
pop
inc
jmp
xor
sarb
add
popl
in
xchg
mov
dec
cmp
mov
loop
pop
pop
adc
inc
imul
xchg
adc
cli
hlt
lcall
mov
mov
call
cld
pop
jbe
int3
adc
pop
pop
adc
roll
mov
cmp
add
jmp
inc
xchg
imul
mov
arpl
jmp
add
push
cmp
inc
int
or
jge
imulb
sub
aad
cmp
jg
in
cmp
add
aaa
cmp
mov
jle
pop
out
into
popf
lds
lods
lret
add
add
dec
test
add
sysenter
ss
sahf
and
inc
pop
adc
inc
call
mov
call
mov
or
das
mov
ret
adc
adc
sub
stos
imul
mov
aam
ljmp
loope
std
and
mov
std
xchg
roll
into
jecxz
add
aam
push
or
outsl
mov
rclb
push
adc
icebp
add
sbb
ret
outsl
and
aaa
inc
adc
imul
je
pop
mov
hlt
add
xor
mov
pop
arpl
lret
and
or
inc
pop
adc
xchg
jg
xor
cmp
or
mov
into
lcall
outsb
jmp
pop
push
adc
rorb
sbb
jnp
cmp
das
and
cmpsb
mov
sbb
cli
in
push
pop
and
inc
addr16
jno
mov
dec
mov
mov
cs
clc
mov
stos
jo
jns
test
rcll
xchg
mov
jne
adc
fcoms
push
adc
cmp
push
fwait
cld
inc
rcl
cmp
inc
xchg
or
push
adc
push
pop
push
pushf
mov
fsts
push
movsb
add
push
adc
data16
mov
ds
push
movsb
mov
pop
jne
mov
inc
popf
in
push
repz
push
xchg
pop
jnp
dec
lods
fnstsw
xor
and
jae
pop
addr16
sbb
out
cs
outsl
jae
pop
sbb
rclb
fcoml
xor
ret
clc
popf
pop
adc
loop
adc
adc
lods
pop
cmc
jne
jns
xchg
outsb
inc
xor
jecxz
add
cmp
cltd
xor
jmp
mov
movsl
loope
push
xor
cs
data16
out
addr16
insl
aad
push
jp
add
mov
testl
xchg
add
pop
dec
ss
cli
lret
fsubrl
mov
dec
or
xchg
loope
stos
xchg
pushf
subb
push
mov
jb
pop
fbstp
and
pop
inc
and
push
xchg
pop
lods
xchg
pop
pop
nop
ret
dec
mov
pop
sbb
filds
adc
in
push
pop
push
test
lock
pop
out
pop
push
adc
mov
test
in
push
adc
push
cwtl
out
pusha
inc
pop
adc
adc
xchg
push
adc
in
add
aad
fcompl
scas
cmp
or
ds
hlt
call
sbb
jl
cli
mov
jbe
mov
dec
adc
mov
fbld
jmp
shrb
popf
pop
adc
xchg
cld
adc
adc
mov
pushf
pop
adc
aad
jmp
decb
mov
rcl
pop
add
mov
pushf
pop
adc
enter
popa
adc
sub
push
out
hlt
call
sbb
test
sahf
pop
adc
cld
adc
adc
mov
sub
scas
hlt
call
sbb
int
and
shll
pop
adc
inc
repz
pop
pop
adc
mov
in
and
pop
adc
jle
xor
sub
cmp
pop
jns
call
out
mull
inc
lahf
pop
das
dec
mov
inc
call
mov
pop
xchg
or
call
bound
rorl
mov
cli
xor
jbe
mov
fists
jg
jmp
adc
stos
xchg
mov
add
sbb
pop
das
in
pop
pop
adc
inc
jno
xchg
out
sbb
lahf
cmp
clc
xor
pop
adc
in
pop
pop
adc
dec
adc
pop
adc
inc
rcrl
inc
or
aas
push
add
jns
call
inc
adc
mov
mov
inc
cwtl
aas
jno
lcall
pop
adc
xchg
sbb
mov
mov
and
jp
pop
pop
adc
add
lcall
lret
inc
shrl
and
out
cmp
jmp
push
pushf
push
fildl
fldcw
mov
pop
outsb
cmc
sub
sub
cmpsb
mov
add
jns
push
ljmp
sub
into
or
inc
imul
imul
movsb
movsb
fistpl
xchg
cs
mov
lcall
scas
add
pop
fs
mov
mov
mov
pop
adc
adc
rcrl
mov
mov
adc
xchg
sbb
xorl
jbe
push
sub
and
ja
push
push
call
xchg
cld
data16
movsl
mov
decb
and
adc
cmpsb
out
rcrl
pop
pop
and
pop
fstps
pop
adc
and
adc
insb
sub
ja
movsl
lret
mov
jns
sahf
pop
adc
adc
dec
inc
mov
cmp
cmp
mov
mov
dec
mov
pop
pop
adc
adc
fucomip
add
clc
clc
inc
inc
ficomps
and
pop
leave
leave
fistpll
ret
fisubs
stos
rol
inc
adc
int3
xor
shll
push
xor
shr
xor
sbb
push
adc
test
pop
adc
jb
addr16
int
xchg
push
pop
push
adc
push
data16
fistpll
mov
jp
sbb
mov
push
pop
add
cmp
loope
andb
inc
pop
pop
lods
push
int
inc
pusha
adc
adc
and
pop
adc
pop
inc
xchg
idivl
aaa
cmp
out
lods
pop
outsb
adc
popa
aam
ja
sub
cmp
add
shlb
decl
cs
fsubrl
adc
pop
pop
adc
mov
shrl
jo
pushf
outsl
mov
and
scas
mov
push
outsb
jbe
mov
lret
and
mov
jp
outsl
jbe
cmp
mov
repz
out
imull
movsl
loopne
jg
cmp
sbb
or
scas
cld
shll
add
inc
or
add
or
mov
in
shll
enter
pop
and
push
popl
aam
lock
shr
jbe
sub
dec
dec
rorl
adc
adc
pop
pop
arpl
cltd
mov
or
or
lds
cmc
imul
cmp
cmpsl
shlb
add
ret
dec
sbb
sub
cli
xchg
sysret
cmp
mov
aad
or
cmp
adc
out
inc
aas
sbb
call
fs
rorl
add
or
sub
loope
cwtl
adc
out
inc
mov
nop
cmp
mov
incl
add
mov
inc
xchg
hlt
call
dec
and
and
jg
inc
rcll
shrl
lods
nop
jl
aas
jge
ret
jmp
mov
pop
das
add
call
pushf
sbb
adc
adc
inc
push
int
rorb
movsl
fmull
popa
mov
andb
mov
sarl
loopne
pop
rorb
inc
adc
dec
add
mov
shll
decl
push
xchg
mov
push
aas
leave
push
cmc
iret
lahf
add
stc
cmpsb
mov
mov
in
imul
lds
mov
ficompl
in
pop
call
jo
in
ds
add
out
sti
clc
mov
mov
add
test
adc
pop
adc
push
adc
adc
mov
div
push
fisubl
cmpsl
mov
push
jmp
jp
inc
popf
add
jge
xchg
fisubrs
jmp
nop
mov
push
insl
push
cs
push
aaa
ret
add
cmpsb
sub
jle
mov
std
fwait
cmc
std
and
add
push
stc
sbb
les
add
push
adc
add
out
stos
rclb
popa
js
mov
psubsw
cmp
addl
mov
pushf
pop
adc
or
mov
stos
daa
adcb
or
aas
out
dec
popf
jo
pop
mov
jmp
xor
sub
pop
lods
sub
cmp
rcll
in
add
test
int3
in
arpl
xor
push
pop
pop
dec
fidivl
push
lret
ljmp
dec
rclb
cmpsl
imul
mov
cmc
sub
add
inc
es
daa
orb
subl
les
andl
sbb
adc
xchg
fisubrs
jae
cmp
rol
popf
pop
adc
and
adc
adc
adc
test
mov
repz
xchg
xor
xchg
sbb
arpl
pop
pop
adc
rorb
dec
cmp
push
cli
xchg
lret
loopne
xor
xor
xor
push
xchg
sbb
mov
add
jb
nop
jno
xor
inc
pop
adc
cmp
cs
push
addr16
xor
stos
shlb
pop
lock
movsl
lods
push
add
outsl
push
outsl
int3
jae
arpl
and
push
adc
dec
dec
or
and
pop
sub
sarb
nop
push
inc
jmp
inc
pop
adc
imul
xor
inc
pop
adc
add
xchg
pop
fsubrs
out
test
push
xor
adc
pop
pop
adc
cmpb
int
inc
pop
adc
lea
adc
mov
xor
fsubl
rolb
iret
addl
push
adc
call
inc
sbb
das
sub
fadds
push
hlt
inc
jae
jae
pushf
lea
jge
add
inc
pop
adc
daa
cmp
sub
push
inc
pop
adc
inc
sub
jmp
sub
lods
inc
addb
into
ljmp
adc
pop
adc
xchg
pop
mov
and
push
das
sub
xor
xchg
js
das
sub
push
shll
pop
adc
jns
mov
roll
add
mov
cmc
call
pop
cs
push
jns
dec
adc
je
cmp
inc
orb
sub
xlat
and
sbb
or
arpl
mov
mov
push
cmp
sar
push
adc
shrb
mov
std
add
pop
adc
mov
enter
pop
das
cwtl
sbb
pop
call
repz
or
inc
addl
out
test
pop
adc
adc
mov
popf
pop
adc
shr
addb
sarl
or
bound
or
call
pushf
bound
jo
lds
movsb
xchg
push
popa
mov
call
inc
pop
adc
mov
sub
inc
mov
xor
dec
adc
std
std
cld
push
outsl
addb
xor
xchg
rorb
lret
cwtl
xlat
mov
dec
in
xchg
test
inc
pop
adc
cmp
xchg
test
dec
xchg
dec
adc
push
ja
jecxz
ds
jmp
inc
ret
jg
out
call
push
push
push
loopne
add
jno
sbb
push
pop
adc
add
or
fwait
xchg
xchg
cmp
jno
jmp
or
rcr
add
loope
rcl
scas
jmp
lods
mov
mov
adc
cmp
or
and
push
lods
aas
sub
in
movsl
cmp
ffree
mov
scas
das
and
mov
sbb
and
mov
sub
cmp
repz
das
stos
mov
lret
or
pop
lods
loop
jg
aad
xchg
jl
adc
adc
dec
roll
or
in
mov
data16
pop
popf
mov
lods
jmp
pop
arpl
add
cmpsl
in
call
fdivr
pop
ds
scas
mov
adc
adc
dec
fnstenv
sbb
pop
xor
push
addb
in
lea
popf
mov
clc
push
lret
dec
and
mov
push
adc
aam
dec
xor
fs
pop
sbb
arpl
xchg
stos
data16
dec
jo
pop
adc
dec
outsl
out
and
adc
pop
leave
leave
aaa
cmp
cmp
push
adc
shlb
loope
push
xor
out
inc
fcomps
adc
adc
adc
ss
mov
inc
in
cmp
xor
negl
mov
and
loop
test
bound
lahf
jae
shll
fdivrs
std
std
ret
shll
shlb
out
dec
int
or
rcll
fadd
nop
lret
push
xchg
lds
cmp
mov
xor
lock
mov
decb
sub
adc
rcl
cmp
sbb
jae
insb
test
pusha
adc
push
cmp
add
sub
jmp
sub
dec
xor
pop
pop
es
add
daa
mov
and
testb
int
mov
addb
lea
mov
stos
je
mov
cmp
and
mov
inc
pop
adc
fildll
ret
jle
add
push
sbb
rcl
mov
xchg
std
jno
pop
pop
adc
bswap
xchg
mov
mov
addb
mov
mov
jmp
incb
cmpsl
and
rorb
adc
adc
sysenter
testb
lds
das
mov
adc
adc
adc
adc
adc
cmc
lods
pop
jge,pt
dec
jmp
mov
ret
je
jne
rcrb
movb
pop
pop
adc
in
js
or
inc
addl
out
push
xchg
add
pop
inc
popl
dec
cmp
mov
cmc
call
inc
cs
push
jns
dec
adc
je
xchg
inc
cmpb
scas
fcompl
xchg
jge
mov
pop
or
push
out
cmpsb
rclb
push
adc
mov
adc
adc
sarl
jae
mov
jo
shll
pop
adc
ja
mov
test
hlt
call
pop
or
jge
jecxz
xchg
mov
vcvttsd2si
idiv
fcompl
pop
call
sbb
or
das
jae
int
and
call
lock
sub
movb
js
mov
pop
pop
adc
xchg
outsl
mov
mov
jmp
mov
ljmp
inc
xchg
loopne
jl
mov
xor
out
xchg
rcrb
pop
pop
adc
rolb
add
push
rorb
jge
mov
adc
add
push
adc
and
adc
pop
adc
mov
je
nop
bound
sahf
pop
adc
cld
adc
adc
pop
jg
into
or
pop
pop
adc
and
jmp
push
adc
cld
adc
adc
es
jnp
adc
adc
xchg
and
sub
cmpsb
inc
cmp
lds
mov
stos
push
mov
push
paddb
push
adc
inc
cmp
jecxz
pop
pop
adc
push
mov
fistpll
mov
fs
or
loop
xor
pop
and
jae
cmp
jle
lret
mov
das
sub
ljmp
iret
mov
out
data16
scas
mov
xchg
pop
mov
les
push
push
pop
insl
rcl
enter
fildl
int3
inc
fcompl
dec
ja
dec
test
adc
and
pop
pop
imull
es
jbe
dec
mov
hlt
or
xchg
and
push
jl
mov
adc
adc
andl
xor
xor
dec
inc
fs
jbe
pop
and
pop
adc
mov
xorb
pop
pop
adc
dec
sahf
nop
lret
or
sar
stos
xchg
adc
out
jae
mov
xor
call
insl
jp
fcmovb
xchg
movq
test
inc
cmp
repz
push
push
mov
cltd
fadds
adc
adc
int3
cmc
lcall
pop
xor
dec
pop
outsl
cltd
pop
jp
fisubrl
shrl
pop
inc
out
lods
sub
jb
pop
fs
test
adc
out
pop
stos
push
inc
dec
pop
cmp
inc
inc
ret
sti
cli
mov
adc
stos
es
xchg
and
pushf
pop
adc
dec
fwait
push
inc
outsb
xor
add
and
pushl
xchg
rcl
jg
xor
lods
or
pop
lock
jmp
jne
xor
sahf
mov
call
mov
adc
inc
add
in
inc
pop
adc
adc
xor
and
subl
decb
and
ret
mov
mov
push
cmp
xor
stc
in
nop
sub
pushf
pop
adc
push
aas
pop
push
pushf
rcr
or
inc
push
std
cld
adc
adc
pop
adc
shlb
call
jle
mov
negb
or
add
rclb
pop
pop
add
addb
pushl
vandnpd
pop
mov
cld
cli
pop
lcall
mov
shlb
lds
lods
dec
incb
sbb
mov
fcomip
push
xchg
xlat
mov
pushf
pop
adc
int3
imul
push
popl
in
cmc
jne
jge,pt
pop
lcall
bound
insb
adc
add
pop
pop
arpl
cltd
mov
pop
push
or
lds
cmc
imul
cmp
adc
iret
cld
shlb
add
test
lds
repz
lea
shll
aam
pop
ds
sahf
call
das
xor
std
xor
shlb
push
popl
aaa
mov
inc
jns
cli
hlt
inc
mov
loop
es
in
mov
sti
sbb
push
mov
rorb
inc
and
pop
adc
xchg
or
jge
std
push
lea
out
ret
addb
out
cmp
xor
jge
mov
pop
pop
adc
push
lock
pop
adc
pusha
xchg
rcll
pop
adc
mov
pop
jle
leave
add
cltd
stos
jmp
bound
xchg
mov
xor
or
push
aam
pop
adc
push
aas
mov
sbb
cld
cli
pushf
fadds
or
lods
shl
lds
xor
inc
pop
adc
sbbb
or
inc
pop
adc
or
rclb
sti
insl
sub
sub
in
push
icebp
out
popf
aas
lcall
pop
adc
pop
or
or
inc
fistpll
mov
pushf
pop
adc
sub
jmp
pop
add
xor
pop
adc
mov
cmpsl
add
out
adc
call
lods
lea
sub
xchg
fst
fdivs
lret
pushf
pop
adc
outsl
mov
sub
mov
fistl
imul
out
out
or
repz
rorl
inc
add
pop
adc
inc
mov
mov
jg
or
movsb
call
dec
fwait
fwait
jno
pop
push
add
pop
jae
outsl
adc
sahf
pop
adc
in
add
push
adc
popf
pop
adc
inc
pop
adc
ret
inc
outsb
sbb
int3
insl
ret
jl
pop
adc
insl
test
push
lock
jl
pop
adc
out
pop
bound
xlat
imul
popf
pop
adc
repz
loop
and
inc
add
pop
ret
cmpsl
and
adc
nop
jl
pop
adc
mov
xchg
jae
inc
dec
inc
pop
lcall
leave
dec
xor
scas
divb
jo
dec
jl
pop
adc
ret
xchg
in
cltd
sahf
cmpb
push
sub
lahf
out
std
inc
pop
enter
shlb
jne
pop
pop
adc
adc
sub
add
out
xchg
push
push
mov
cld
add
inc
outsb
mov
jmp
das
and
and
aaa
adc
sahf
xchg
sub
xchg
lahf
aas
aaa
sub
xor
mov
mov
adc
andnps
pop
xor
push
mov
aad
sub
jg
rorb
rcrb
fwait
lahf
mov
shll
popa
pop
pushf
xchg
mov
mov
cltd
cli
hlt
lcall
pop
stc
das
call
adc
pop
inc
jb
cmp
inc
addl
dec
adc
rcl
mov
popf
lods
cli
hlt
das
jae
xor
sub
pop
movsl
call
push
add
cmp
lock
test
loope
lea
xor
mov
jne
ret
pop
pop
adc
loopne
imul
mov
cmp
fcompl
inc
pop
adc
inc
xchg
mov
cli
jle
inc
rclb
push
adc
mov
adc
adc
cmp
or
sbb
xor
sub
test
adc
fwait
and
sahf
cmp
jge
decl
les
jo
cli
jecxz
arpl
cmc
pusha
inc
pop
adc
mov
dec
std
mov
icebp
test
stc
fists
jg
jmp
adc
imul
xchg
mov
add
inc
pop
pop
das
sub
adc
bound
or
jge
jg
out
popf
insb
daa
pop
or
mov
jnp
xchg
arpl
pop
push
jg
call
mov
movb
push
add
jl
mov
adc
adc
adc
sahf
pop
adc
scas
ficompl
sbb
pop
adc
or
insl
push
jecxz
jg
adc
cld
adc
adc
sahf
pop
adc
sarb
push
push
pop
push
jle
call
pop
sbb
mov
xor
sahf
imul
dec
imull
negb
fcoms
push
adc
adc
add
shll
sbb
je
test
mov
xlat
idiv
jae
sbb
push
imul
and
std
aam
and
icebp
nop
cld
mov
aas
faddl
rcl
fnstenv
inc
lods
popa
mov
and
mov
aad
sti
insl
xchg
push
fs
addr16
out
in
ret
pop
adc
jae,pt
cmp
ljmp
dec
mov
pop
xor
sbb
popa
inc
ss
bound
popf
adcl
jbe
outsb
adc
fildl
loop
push
sbb
rolb
pop
xor
sub
add
lcall
ja
sub
pop
sahf
jno
pop
into
adc
hlt
repnz
fnstcw
movsb
pushf
out
in
das
addr16
arpl
adc
stos
mov
movsl
xor
add
mov
psubb
fisttpll
out
decb
sti
mov
ficoms
adc
fcomps
xchg
movsl
mov
lods
data16
add
pop
mov
mov
faddp
lods
int3
ret
addb
sub
xchg
idivb
adc
dec
aad
pushf
mov
out
ret
int3
cmp
jecxz
or
dec
mov
and
movsl
and
pop
mov
lods
cltd
mov
adc
adc
adc
pushf
mov
sub
xorb
cld
sahf
dec
dec
xor
xchg
rol
mov
dec
inc
inc
sbb
movsl
pop
dec
mov
lret
cltd
sub
andl
loope
jg
inc
test
cwtl
add
cmp
loope
fcoms
push
adc
sub
sub
je
movsb
inc
sub
out
lret
jo
mov
pop
dec
ficomps
adc
dec
push
dec
jo
adc
pop
adc
adc
xor
add
jo
ds
arpl
ss
lods
stos
xchg
scas
fsubrl
sub
push
adc
or
daa
jg
add
incl
adc
iret
fiaddl
adc
add
mov
rclb
mov
out
push
push
or
mov
mov
mov
and
pop
mov
std
mov
lcall
xchg
jge
lahf
pop
cs
inc
das
and
mov
mov
insl
pusha
jo
adc
xchg
sbb
push
adc
in
jnp
popf
cmp
mov
sub
popf
pop
adc
mov
xchg
cld
dec
lret
lcall
adc
test
and
mov
shlb
sub
mov
mov
adc
stc
out
pushl
vcvtps2pd
or
in
pop
not
mov
xchg
std
jno
pop
pop
adc
bswap
xchg
mov
mov
xorb
push
jge
xor
sbb
bound
inc
pop
mov
push
in
arpl
jge
aas
jge
pop
pushl
inc
mov
xorl
sub
sub
jge
inc
jecxz
aad
jae
into
popf
mov
add
ds
addl
pop
pop
int3
leave
pop
das
or
xchg
mov
pop
inc
mov
lahf
hlt
xor
push
adc
jge
add
add
pop
pop
adc
adc
test
ljmp
adc
add
sub
adc
jle
jmp
adc
leave
sbb
cwtl
mov
dec
cmp
or
pop
aam
les
mov
jecxz
adc
outsl
xchg
cmpb
pop
ljmp
dec
dec
pop
fcomip
inc
push
lock
sub
jmp
test
dec
cmpsl
push
sub
pop
bound
cmp
dec
pop
adc
jmp
sar
insl
and
jbe
ja
outsb
inc
mov
out
add
lods
insl
push
lahf
inc
aam
push
adc
pop
fidivrl
fsubp
icebp
fdivs
dec
les
inc
test
cmc
fs
lret
lock
cmp
xchg
jmp
addr16
cmp
stos
pop
pop
rcrb
cmp
mov
mov
add
fwait
pop
adc
and
lcall
lods
out
fwait
pop
adc
lock
ja
cmp
aad
popf
mov
repz
mov
xor
pop
and
mov
jmp
lahf
pop
adc
je
pop
adc
das
sub
mov
mov
xchg
adc
repz
jmp
pop
lds
ss
jae
insb
outsb
add
jecxz
sbb
fmulp
pop
mov
pop
lds
sahf
sbb
xchg
dec
daa
stos
cmovl
cmp
xor
jae
cmpxchg
xor
add
idivl
add
loop
mov
enter
mov
mov
xor
jge
and
inc
insl
gs
cmc
xlat
cltd
lea
scas
dec
in
hlt
repnz
and
loopne
and
stos
mov
cltd
out
lds
inc
sub
mov
pop
push
shrb
dec
lcall
mov
test
mov
jb
dec
ljmp
dec
sbb
pop
mov
inc
sbb
loopne
adcb
cmp
add
outsb
call
movsl
outsb
lcall
xchg
sarl
pop
cs
scas
iret
or
out
stos
je
jp
xchg
mov
inc
xchg
ret
add
call
push
adc
mov
push
inc
stos
test
lahf
xor
mull
icebp
lret
mov
sbbl
fcompl
pop
add
mov
addr16
addb
xchg
scas
fists
or
sbb
cli
xor
or
mov
lahf
gs
stc
ja
int
cli
jo
cmpsb
loopne
rorb
cmc
call
dec
pop
in
adc
mov
or
pop
push
leave
cmc
lock
xchg
das
xor
push
adc
hlt
call
and
adc
and
push
add
shlb
xchg
mov
pop
push
sub
inc
pop
adc
mov
ret
push
add
clc
pop
hlt
fildl
cmc
punpcklwd
jle
inc
jmp
xor
mov
call
aad
pop
add
in
adc
pop
adc
or
insb
mov
arpl
mov
shrb
or
outsb
or
clc
scas
loop
icebp
add
cmp
or
mov
imul
stos
js
call
call
mov
add
jecxz
mov
mov
jmp
out
inc
gs
cs
lret
xchg
cmp
call
loopne
push
imul
rcr
inc
mov
mov
inc
or
int
inc
scas
xor
or
sbb
xchg
or
out
pop
loope
or
sub
jns
jmp
mov
dec
mov
xor
in
cmpsb
sahf
mov
clc
or
std
mov
out
xlat
lret
xchg
sarl
xchg
mov
test
sub
mov
or
loop
jmp
js
into
xchg
push
dec
fwait
xor
fcomi
orb
mov
in
adc
inc
movsb
jo
push
mov
clc
in
xchg
sub
push
cli
sahf
mov
loop
lods
and
sbb
push
pop
adc
push
into
loopne
pushf
adc
jle
insb
shrb
push
rol
sub
inc
clc
or
mov
shlb
jae
test
ficompl
pusha
mov
cmpsb
es
mov
inc
das
lods
xadd
or
aaa
dec
dec
ret
mov
out
out
or
inc
sbb
pop
xor
outsl
subb
xor
push
ljmp
stos
xor
adc
xor
push
icebp
sub
xchg
push
in
movsb
std
mov
mov
pushf
ds
mov
push
cmpsl
inc
or
dec
std
std
fcoms
rolb
popf
enter
sub
mov
jae
cmp
in
cmpsl
std
mov
cltd
or
adc
push
cwtl
add
les
inc
pop
movsb
lcall
dec
adc
es
or
dec
dec
mov
pop
push
addr16
aam
js
push
cmp
push
pop
into
inc
xchg
popl
clc
lock
adc
out
es
xor
insb
pusha
mov
je
xor
sub
cmp
ja
lock
xchg
dec
xor
and
ljmp
call
push
or
leave
jle
mov
lcall
pop
and
adc
lcall
cmc
test
or
sub
mov
lods
shll
pop
pop
adc
mov
movsb
in
adc
fisubrs
xchg
sbb
out
divb
cmp
arpl
adc
pop
aaa
testb
mov
pop
adc
mov
test
stc
rcrl
arpl
fs
lcall
aad
imulb
rcrb
lods
dec
push
sbb
inc
notl
push
daa
enter
push
dec
add
jne
xchg
sub
std
rorb
mov
fcmovnbe
mov
dec
sbb
stos
lea
subl
mov
je
mov
fbstp
mov
mov
adc
ja
cmp
movsb
pop
aaa
xor
mov
imul
or
cmpsl
add
lods
inc
arpl
mull
in
test
stos
jecxz
ss
pop
cs
loop
and
enter
cmp
push
addl
in
push
push
pop
jge
shl
xchg
sbb
ret
andb
pop
pop
adc
cmp
les
adc
jne
jmp
movsb
adc
add
int3
cmp
jmp
loope
vmovmskps
push
sti
hlt
call
test
test
mov
out
cmp
mov
adc
sbbb
das
aad
mov
dec
mov
mov
stc
sbb
push
cmc
pushf
sbb
mov
decb
pop
mov
or
push
dec
dec
aad
jae
into
popf
repz
add
add
jo
pop
adc
cmpsl
sbb
push
xor
je
jecxz
lret
and
adc
push
xchg
or
nop
icebp
dec
aas
jge
dec
stos
lods
cwtl
mov
lcall
sbb
cmc
or
stos
sub
pop
jbe
js
lods
jns
add
into
movl
dec
jbe
test
jb
cmp
jne
outsb
jle
imul
sub
and
sti
pusha
and
sbb
mov
ljmp
or
add
mov
dec
int
jg
sbb
jp
add
inc
fstpl
adc
push
adc
push
mov
divb
dec
fisubl
mov
xor
andb
frstor
xchg
mov
xchg
ljmp
mov
out
mov
ja
mov
xchg
push
popf
pop
in
ficomps
mov
adc
in
adc
fisubrl
mov
jo
pop
adc
adc
movl
dec
shlb
mov
data16
jmp
mov
arpl
and
loope
lcall
adc
cwtl
popa
fstpl
mov
pop
or
inc
mov
cmp
leave
shrl
dec
pop
in
adcl
xchg
enter
adc
jbe
adc
pop
jno
sub
add
out
adc
xchg
in
jb
sbb
sub
test
js
flds
mov
cli
in
movsl
sub
jo
mov
push
inc
push
cwtl
jbe
xchg
inc
or
jp
pushf
pop
adc
pop
in
dec
dec
je
xor
push
or
inc
add
pop
lret
stos
stc
repnz
jbe
repz
adc
fnstsw
dec
sub
imul
sarl
jnp
inc
mov
ret
add
or
roll
ja
sbb
add
mov
out
fwait
jp
or
sub
pushf
int
clc
inc
xor
lret
jp
push
add
into
add
ficoml
aas
addl
jb
pop
adc
pop
adc
repnz
xchg
aas
aad
sub
stc
push
cmp
adc
inc
inc
fbstp
push
sbb
rolb
sti
adc
xchg
fstl
out
stos
scas
das
mov
out
enter
xchg
push
or
cmp
jb
sbb
mov
repz
sahf
das
je
out
and
xchg
rcr
jg
xlat
pop
xchg
mov
add
arpl
xlat
dec
cwtl
insb
jns
lock
sbb
adc
push
mov
pop
jg
inc
lret
or
int3
dec
mov
mov
xchg
dec
les
aad
test
xchg
shrl
decl
punpckhwd
jno
das
jmp
pop
loope
sbb
pop
mov
je,pt
sub
add
add
ljmp
popa
push
sbb
inc
rcr
std
popf
cmp
cmp
ljmp
pushf
jns
cmp
and
sar
loope
fnstsw
jmp
add
jl
hlt
call
lods
in
mov
pop
pop
cmp
clc
movsb
loope
int
incl
or
imul
or
aas
adc
sbb
pop
test
leave
add
leave
mov
fnsave
or
sti
hlt
scas
cmpsb
ret
add
and
call
xchg
fwait
mov
stc
jle
lods
xchg
mov
or
sbbb
ja
dec
dec
arpl
ljmp
decl
dec
fldl
jnp
xor
dec
aad
jae
into
popf
popa
mov
xlat
mov
ja,pt
cmp
dec
or
mov
hlt
or
push
jo
xor
mov
pop
out
or
mov
mov
adc
mov
lahf
movl
sub
add
test
jmp
fistpl
mov
mov
jg
mov
sbb
pop
pop
mov
mov
mov
je
inc
xchg
inc
rol
xor
adc
mov
sarb
out
jno
loop
insb
dec
pop
cltd
jbe
cmp
ror
into
push
ja
xor
push
adc
sbb
add
xor
sbbl
xchg
pop
pop
mov
push
adc
mov
or
inc
mov
es
imul
popf
insb
sbb
or
xlat
mulb
or
rcll
and
outsl
push
mov
or
pop
sub
mov
ja
sbb
jle
add
push
mov
mov
xor
and
dec
sbb
stos
fsubrs
push
sub
dec
push
icebp
gs
xlat
mov
divb
ss
scas
clc
inc
or
dec
outsl
mov
loope
cli
mov
xor
insl
loopne
jmp
and
push
cmpsl
push
sub
js
push
xchg
fsubs
cmp
push
test
imul
mov
cmp
repnz
popf
dec
jecxz
xchg
pop
lea
popf
cli
test
fidivrl
xchg
inc
push
adc
pop
xor
jmp
pop
jg
push
push
inc
sarl
inc
xorl
and
jl
mov
out
jae
inc
jmp
xchg
push
push
sahf
nop
pop
mov
fists
push
call
adcl
xchg
sahf
mov
xor
cmp
or
push
andb
addr16
aad
gs
adc
outsb
sbb
nop
and
cmp
xchg
mov
xor
rclb
pop
mov
test
loop
insb
fstpl
out
rorb
jne
mov
pop
adc
je
mov
jo
mov
mov
mov
and
xchg
mov
cmc
lcall
pop
ja
aas
ja
pop
out
adc
lods
popa
and
adc
aad
lcall
test
aam
shll
outsb
popa
add
fstps
sub
scas
in
mov
mov
sub
pop
jno
into
sbb
bound
push
int3
popa
leave
in
jnp
test
loope
mov
les
repnz
rcl
pop
stc
lods
cmp
adc
dec
dec
mov
les
sub
jge
inc
add
add
add
shll
push
push
mov
scas
loope
js
loopne
or
arpl
xor
push
adc
ja
add
gs
add
icebp
rcrb
mov
lock
data16
xor
jl
adc
ljmp
mov
repnz
pop
dec
test
mov
gs
lret
mov
or
pop
pop
aaa
mov
or
fsubs
dec
es
je
shlb
add
mov
cmp
fnstcw
jbe
push
js
lock
mov
inc
push
cmp
bound
fiadds
f2xm1
loopne
xorb
call
enter
mov
in
lods
or
mov
mov
push
es
jne
roll
mov
mov
add
repz
adc
pop
mov
movsb
icebp
mov
sub
mov
movsl
pop
xor
adcl
mov
pushf
pop
pop
leave
jnp
xchg
lds
sbb
jnp
mov
in
or
cmp
jle
cmpsb
push
mov
xchg
arpl
aam
cltd
in
aam
scas
aad
add
add
pushf
aas
sarb
fyl2x
loope
or
lahf
cmp
stos
sti
test
pop
xor
cmpsl
ds
and
add
add
mov
pop
mov
addb
ja
dec
fnstsw
jno
pop
mov
sahf
pop
add
cltd
insb
push
xor
push
in
xchg
je
in
xchg
push
mov
jecxz
stos
dec
arpl
sbb
testb
repz
dec
lret
add
mov
push
fwait
lods
fcomps
mov
xchg
arpl
pushf
inc
sbb
outsb
out
push
sbb
sbb
fidivs
mov
pop
les
scas
mov
sub
cmp
adc
in
scas
rolb
mov
dec
shrb
mov
push
lret
pop
pop
xchg
dec
je
cmpsb
sub
divl
cltd
roll
lcall
jno
mov
adc
xor
and
mov
mov
flds
cmp
inc
xor
in
loop
mov
ror
imul
sub
xchg
or
dec
insb
cld
cli
dec
sub
add
dec
adc
fadd
ja
in
daa
mov
mov
jg
sub
pop
idivb
sarl
cwtl
jle
inc
addr16
adc
ds
imul
pop
push
jmp
inc
in
dec
dec
dec
ret
repnz
xor
ret
inc
pop
clc
sub
cmc
push
mov
aam
fs
sbb
sahf
nop
mov
and
out
leave
inc
popa
mov
jae
loopne
lahf
out
adc
xor
pusha
adc
movl
mov
mov
pop
adc
inc
mov
xchg
and
adc
mov
inc
cmp
dec
pop
adc
addb
push
cmp
popf
jmp
popf
lret
sbb
es
lret
das
cmpsb
cli
xlat
jno
stos
xor
or
dec
out
push
adc
xor
push
push
in
lock
fists
push
insl
sub
push
es
pop
mov
or
scas
add
icebp
pop
mov
dec
icebp
xchg
mov
sbbl
pop
xchg
pop
dec
out
push
fbld
fistps
out
int3
and
call
div
cmc
es
pop
cmp
push
test
mov
push
add
shll
xchg
cmpsl
sub
cmpl
cmp
and
fisubl
sbb
shrb
cli
dec
sbb
jbe
int
or
xor
pop
jp
lahf
stos
imul
test
adc
mov
cmp
mov
inc
js
stc
insb
mov
xchg
or
push
dec
or
jo
shlb
add
dec
mov
sar
int3
mov
or
ljmp
ss
decl
sub
cmp
bound
addr16
add
inc
loopne
stc
lods
lock
or
inc
add
stc
pop
test
enter
cmpsl
push
pop
cmp
and
fbstp
dec
push
mov
cmpsb
push
aaa
xor
mov
jno
ljmp
push
sbb
or
add
leave
aaa
das
or
repnz
cmp
push
pop
out
popf
mov
int3
rcrb
int3
in
adc
das
pop
test
in
clc
pushf
jno
and
add
sub
pushf
and
add
icebp
push
mov
sbbb
xchg
enter
sub
cli
mov
shrl
mov
cmp
into
shrb
push
test
inc
add
movsb
scas
js
cmpsb
inc
cmp
js
push
pop
xor
or
pop
add
jle
lock
or
sbb
cltd
shll
shll
into
jmp
test
rcr
jge
aad
mov
cmpsl
sbb
cmp
sahf
divb
jle
clc
mov
and
xor
jle
push
cltd
in
pop
jle
loop
cmp
add
xchg
jo
pop
adc
imulb
dec
lods
adc
cwtl
xlat
sbb
hlt
xor
push
mov
dec
sbb
add
sti
adc
cltd
orl
add
out
shlb
cmpl
jmp
sbb
cmp
cwtl
aad
out
loope
fstpt
jno
fcoms
shl
lods
fldenv
cmpsl
daa
adc
stc
xchg
dec
pop
or
mov
into
xchg
dec
and
sbb
dec
fimull
lods
ja
scas
out
bound
add
stos
mov
pusha
mov
dec
les
mov
stos
mov
js
and
mov
inc
ss
bound
loop
jae
aas
inc
inc
rcl
fcompl
mov
push
and
mov
xchg
or
pop
xchg
add
andl
mov
or
das
shrl
scas
popf
divl
or
fistpl
je
sbbb
lods
jne
repz
int
push
mov
push
orb
lret
clc
subl
mov
iret
jae
in
popa
sbb
inc
dec
bound
xor
ds
xchg
nop
and
push
or
mov
out
mov
mov
hlt
push
or
je
int3
dec
jl
ja
push
aam
jae
sbb
leave
sub
scas
aad
out
adc
push
popa
cld
dec
jo
pop
adc
xor
imul
movsb
and
xchg
jne
push
dec
fcoml
and
adc
dec
popf
test
dec
sub
cmp
mov
xor
push
js
or
leave
dec
cmp
mov
repnz
push
loop
insb
push
inc
push
jnp
xor
lods
ljmp
pop
enter
mov
fcom
pop
xchg
rcrl
dec
mov
iret
out
fsts
sbb
jp
cmp
xchg
sub
adc
out
fcomps
popa
push
lods
insb
adc
or
xor
mov
ret
dec
add
rcrb
in
ret
imul
xor
xor
stos
push
call
add
push
jae
cmpsb
add
test
shlb
push
hlt
pushf
inc
sub
mov
cmp
bound
aad
nop
and
jge
jne
push
sub
dec
jae
push
dec
cmpb
jl
push
bound
ffree
enter
add
pop
pop
dec
xor
je
shlb
sub
call
cld
aaa
ffree
enter
inc
inc
mov
lock
adc
mov
sbb
adc
adc
cli
lcall
je
sub
hlt
bound
aad
mov
cli
mov
xor
cli
jnp
push
inc
addb
pushf
loope
mov
sbbb
int3
xlat
outsl
iret
xchg
test
adc
sub
push
cmp
push
or
xlat
cld
imulb
rorl
inc
mov
inc
adc
lods
and
jnp
sbb
push
pop
pop
xor
aas
dec
mov
and
fidivl
lcall
sub
xlat
cld
stos
xchg
int
jg
push
inc
cmpb
sub
and
dec
in
movsl
in
shlb
fidivrl
add
mov
dec
aam
stc
xchg
rcrl
ss
outsb
cmp
cmp
jne
stos
aaa
pusha
repnz
es
std
std
xchg
jae
xchg
push
mov
icebp
mov
mov
mov
test
enter
sub
aad
mov
popa
sub
in
shll
xchg
fisubl
mov
out
stc
jmp
mov
addl
dec
call
mov
sub
rorb
adc
dec
sti
mov
pop
add
jge
jg
popf
inc
sbb
dec
inc
cmpsb
add
sbb
cmp
imul
ss
and
mov
jno
push
or
fmuls
push
daa
cmpsb
mov
mov
push
push
push
mov
mov
pop
fnsave
mov
pop
cltd
ljmp
pop
adc
adc
sub
jmp
sub
int
cmp
pusha
sbb
cwtl
jae
lock
inc
jg
ficoms
inc
cmp
jb
out
int3
xchg
xchg
into
push
cld
xchg
jno
cmp
push
xor
shlb
mov
push
mov
xor
daa
mov
mov
xchg
add
enter
jp
adc
mov
arpl
and
ljmp
aam
repnz
and
fwait
in
mov
jecxz
mov
loopne
jle
pop
mov
gs
lock
sarl
ds
and
mov
cmp
inc
bound
push
sbb
sub
adc
push
stc
mov
jo
pop
adc
mov
scas
js
xor
stc
mov
push
lcall
push
in
test
or
lcall
icebp
fs
pop
pop
pop
fs
div
test
and
rcr
or
movsl
xchg
mov
mov
lret
inc
iret
pusha
test
outsb
arpl
lods
scas
mov
jne
cwtl
mov
das
das
push
adc
out
out
mov
mov
sbb
les
out
ror
call
shrb
cld
fnstenv
and
out
ja
adc
mov
cmp
cwtl
imul
or
or
cmp
mov
lock
lcall
push
or
jg
dec
pop
adc
push
or
out
test
leave
int
mov
pop
or
lret
jecxz
push
mov
inc
out
or
sar
addr16
fdivs
and
xchg
jo
shr
fdivr
std
cli
pop
lcall
xchg
push
and
sbb
push
stc
movsl
int3
sub
std
mov
jg
icebp
je
mov
xlat
movsl
sub
cmp
lods
add
jmp
lods
mov
imul
mov
insb
adcl
lret
int
mov
mov
jno
xor
orb
jae
into
push
clc
push
call
adc
push
incb
or
pop
adc
push
adcb
pusha
fwait
sbb
sahf
cmp
enter
pushf
lea
push
mov
decl
inc
xchg
roll
pusha
notl
jle
xor
repz
adc
mov
push
call
inc
mov
movsl
adc
in
mov
sbb
push
push
gs
mov
ja
cli
xchg
push
xor
cli
hlt
xchg
out
xlat
int3
push
xchg
int
xor
gs
jo
adc
mov
adc
fldl
and
jl
inc
shll
lods
fldcw
dec
or
dec
add
lock
loope
addl
faddl
lahf
icebp
mov
rcrb
lods
out
adc
push
cld
or
jo
pop
adc
outsb
test
mov
jno
cmc
movsl
into
lock
fadd
clc
iret
orl
mov
subl
pop
in
test
out
mov
push
pop
pop
pop
loop
idiv
jecxz
fdiv
mov
pop
call
out
and
scas
cmpsb
fimull
dec
sbb
jecxz
inc
mov
lcall
adc
pop
inc
cmc
mov
loopne
adc
jecxz
xor
enter
pop
cmc
in
fisubl
lods
or
shll
movsl
imull
pop
push
rcrl
pop
les
stos
xor
repnz
push
adc
push
jp
add
imul
xchg
mov
adc
xchg
outsl
xchg
jo
pop
adc
inc
lock
inc
imul
jle
inc
leave
pushf
fcoml
push
mov
sub
int
pop
cmp
push
push
movl
clc
lret
mov
cmp
ss
pop
add
imul
push
imul
pusha
xchg
cld
xchg
jae
push
mov
xlat
es
cmp
bound
inc
or
dec
lret
dec
pop
out
pop
and
popa
clc
fsubs
mov
sub
inc
lahf
jo
adc
mov
mov
lock
adc
cwtl
stos
push
jp
or
sbb
outsl
fwait
jbe
ss
int
mov
adc
mov
lods
out
adc
jae
lock
int
jo
pop
adc
in
cwtl
in
subl
mov
jecxz
sarl
jg
aad
xor
push
mov
xchg
mov
shll
repz
shll
add
insb
cmp
xor
jmp
pop
sbb
sub
dec
popf
push
lds
lret
jno
dec
add
stc
mov
lods
sub
adc
jo
mov
add
aad
imul
jge
mov
aad
or
cmp
push
aam
je
pusha
and
cwtl
pop
pop
xchg
cmpsl
pop
mov
pop
or
jo
loopne
in
push
decb
push
mov
aaa
fdivrp
push
clc
lcall
sti
xor
test
jo
pop
adc
pop
mov
cmpsl
xchg
dec
stc
or
enter
push
je
popl
inc
or
and
jg
xchg
mov
sbb
push
popa
add
sbb
lcall
call
aad
or
call
xchg
push
pop
xchg
or
out
sbb
push
loopne
push
shlb
incb
or
push
push
sub
repz
call
notl
xchg
pop
inc
or
mov
js
mov
lahf
into
push
cmpsl
or
cs
ja
xchg
sbb
mov
add
pop
movsb
adc
repz
pop
xchg
mov
rolb
xor
xor
popf
pushf
outsl
and
mov
int3
ret
dec
jmp
mov
mov
pop
inc
inc
or
repz
lret
jae
push
dec
add
cmpl
jl
xchg
or
jecxz
fisubl
movsb
inc
adc
or
mov
jle
hlt
push
mov
clc
mov
shl
sbb
push
dec
mov
dec
jecxz
inc
popf
and
cmpb
pop
pop
aaa
mov
adc
jge
sbbb
pushl
mov
mov
inc
fidivl
lcall
mov
cmp
sti
movsl
sbb
in
fsub
ja
mov
in
mov
fs
stc
mov
jno
xchg
push
cli
mov
aas
jne
sub
cld
mov
push
sbb
jmp
mov
hlt
sbb
fdivl
mov
mov
loope
fisubs
inc
mov
or
cmpsb
cmpsb
enter
cmp
add
imul
xchg
jo
sarl
sub
or
sarb
orl
push
cld
pop
jmp
mov
test
dec
dec
and
sub
xor
and
pop
lds
fdiv
into
call
icebp
lods
pop
mov
cmp
mov
cmp
ret
sub
out
les
insl
push
xor
iret
fnsave
enter
sbb
in
lcall
cmc
jp
and
mov
push
gs
lea
inc
and
xorl
inc
inc
pop
sbb
dec
sbb
mov
sbb
xor
add
mov
jmp
jns
orl
add
leave
cld
mov
push
arpl
aam
popf
je
enter
mov
mov
xchg
jmp
mov
sbbb
shlb
sub
rcl
cmp
and
movsb
shll
mov
rolb
rorb
mov
das
push
sub
add
test
sub
and
xorb
mov
daa
push
popa
aad
nop
imul
cld
pop
repz
mov
xor
add
sarl
rorl
xchg
test
enter
sub
fisubrl
mov
movsb
add
inc
inc
jns
cltd
xor
pop
js
imul
aas
sub
jg
int
outsl
xor
push
sbb
inc
cld
cmp
sub
cmp
adc
dec
dec
mov
out
adc
imul
and
cmc
add
sub
ja
inc
in
dec
xor
adc
imulb
sbb
incl
repz
and
aas
cli
int3
sub
adc
xchg
mov
cld
out
push
in
jb
mov
scas
and
mov
out
cld
push
rcrl
in
mov
test
mov
mov
repz
into
push
daa
push
cltd
mov
mov
fistpll
push
xchg
or
and
nop
mov
adc
xchg
leave
push
hlt
pushf
or
pop
mov
ja
adcb
mov
cld
add
bound
xlat
ja
das
ds
aad
xor
les
aaa
mov
dec
xor
hlt
bound
xlat
ja
mov
vmovaps
and
cmpl
nop
arpl
jge,pt
jne
push
sub
lea
scas
push
mov
mov
jecxz
fbld
adc
pop
push
xor
push
xor
mov
add
add
sbb
or
pusha
mov
scas
and
hlt
pushf
stos
and
add
cmp
mov
daa
and
testl
dec
mov
inc
rorb
add
mov
int
cwtl
pop
push
imul
pop
pushf
loopne
imul
sbbb
ja
mov
pop
leave
jge
movsl
int
push
adcb
mov
xorb
decl
cmp
orb
jno
pop
pop
subb
add
sub
pop
adc
repnz
push
js
jb
out
pushf
mov
cmc
pop
in
shr
jmp
std
sti
mov
pop
in
hlt
mov
nop
push
inc
push
inc
mov
and
ret
subb
xor
inc
mov
loope
rcrl
scas
dec
inc
int
notb
and
push
aad
dec
or
and
in
aad
jns
mov
mov
addl
test
push
inc
test
cmc
test
or
or
roll
scas
adc
or
add
stc
push
andl
sbb
push
sbb
and
test
cmp
mov
pop
jb
out
adc
scas
shll
dec
pop
adc
adc
add
test
sub
in
imul
movsl
fdivrs
inc
bnd
call
lret
push
stos
test
fimuls
aam
jns
add
pop
and
mov
or
repz
cmp
pop
or
pop
xchg
jmp
or
int
cmc
gs
lret
and
pop
int
cmp
push
xchg
jns
popf
loopne
xchg
test
fwait
aam
int
xchg
and
std
dec
adc
stos
cmpsl
movsb
mov
inc
ss
and
outsl
jp
test
cmp
cmpsl
popf
outsb
loope
in
jo
pop
adc
mov
dec
inc
setne
test
mov
and
cltd
into
clc
mov
or
pop
adc
mov
dec
mov
das
mov
addb
sub
into
je
dec
bound
rcll
fadds
test
in
outsb
adc
inc
adc
inc
fnstsw
xchg
dec
loope
ja
inc
fists
cld
ror
jbe
data16
sub
leave
dec
cltd
imul
fdivs
and
sbb
jns
cmp
push
les
jne
cmp
sbb
cmpsb
cmp
cmp
in
inc
test
xor
push
inc
ss
jo
pop
adc
xor
cmpsl
aaa
push
jle
xchg
clc
mov
or
rcl
push
jb
icebp
test
imul
adc
pop
push
adc
sbb
cltd
mov
ret
dec
mov
sub
pop
pop
adc
adc
outsl
pop
adc
adc
cmc
rcrb
enter
push
cld
push
pushf
sbb
adc
cmp
inc
nop
aas
push
mov
xchg
or
sbb
dec
insb
nop
imul
and
into
popf
mov
push
adc
push
adc
pop
mov
addb
ljmp
sbb
lock
xchg
push
push
popl
inc
mov
loopne
sar
jle
rorl
adc
adc
cli
add
add
mov
shll
loopne
loopne
imul
push
pop
xchg
ret
cmp
mov
inc
inc
adcl
js
test
movsl
xchg
push
repnz
xor
icebp
jo
mov
jmp
shrb
sub
in
adc
adc
bound
push
adc
inc
fistps
jmp
scas
fwait
adc
lock
inc
push
pop
pushf
xlat
mov
icebp
in
sbb
add
jecxz
stos
mov
jl
out
mov
aad
lret
shrl
popf
imul
cmp
mov
movsb
int
lock
or
add
lock
outsb
push
pop
pushf
fbstp
hlt
call
cmp
addb
stc
std
jo
pushf
loope
mov
icebp
pop
mov
in
sub
xor
xor
subb
std
cli
hlt
dec
jno
jle
lock
outsb
push
pop
popf
jbe
adcb
add
je
mov
in
fldt
cmc
push
push
sub
jne
add
sarl
push
sbb
stos
pop
test
inc
add
jecxz
cmpsl
ret
adc
das
and
test
push
push
mov
cltd
insb
pop
xor
stc
fmulp
repnz
pop
xor
sub
push
in
dec
add
loopne
xor
push
jbe
popa
add
sbb
add
mov
and
sbb
add
retw
out
outsw
decb
mov
or
pop
lds
lods
sub
pop
adc
int3
pop
mov
and
adc
in
xchg
dec
jne
fcompl
subb
push
mov
out
mov
sub
xorl
mov
mov
mov
cli
lcall
hlt
rcr
xchg
mov
lods
sub
mov
xor
xchg
pop
test
mov
cmp
cmp
xor
cld
sbb
rcl
pop
add
or
mov
jp
or
inc
and
leave
fisubs
jno
call
pop
test
addr16
push
cs
pushf
and
icebp
xorl
xor
lods
add
dec
nop
fstpl
stos
stc
pop
mov
sbb
icebp
fwait
adc
push
jb
cmp
cmp
mov
fidivrs
inc
fidivs
out
leave
lret
int3
push
and
jo
mov
pop
mov
inc
xor
push
shlb
adc
push
pop
test
xor
aad
iret
and
inc
pop
sbb
hlt
test
add
fsubs
fs
scas
out
in
and
push
ljmp
aas
mov
dec
add
dec
inc
dec
ret
int3
nop
push
mov
lret
mov
in
pop
cli
xlat
out
cmpb
xchg
xchg
cmp
sub
xchg
arpl
push
orl
dec
scas
das
das
cmpsl
mov
pop
adc
jno
and
out
push
arpl
add
aad
jmp
sub
and
inc
pop
pop
push
hlt
pop
clc
xchg
pop
mov
sahf
inc
stos
cwtl
push
stc
or
test
pop
jae
les
mov
mov
nop
pop
mov
aaa
mov
mov
cltd
mov
inc
inc
mov
push
or
and
ljmp
stos
sbb
bound
insl
pusha
pop
mov
cld
cli
hlt
pushf
mov
arpl
mov
pop
out
je
rorb
jl
incl
or
lock
jne
sbb
push
mov
ret
add
or
inc
xchg
bound
das
add
adc
shlb
pop
ljmp
jl
mov
or
cmp
pop
add
push
jecxz
pop
rcll
mov
mov
ljmp
inc
or
adc
sbb
ja
mov
inc
or
pop
pop
pop
pop
inc
inc
ds
sbbl
popa
ja
lods
out
and
je
fldl
pop
adc
inc
inc
pop
push
imul
fstpl
scas
dec
out
adc
sub
cmp
mov
call
stos
jo
pop
adc
cmpsb
imul
mov
pop
adc
push
mov
push
ret
shlb
pop
adc
pop
cs
out
fwait
stos
sbb
and
push
pop
call
mov
cmpsl
mov
xchg
pop
mov
out
mov
push
gs
imul
das
sbb
adc
sti
pusha
daa
ja
rcl
xchg
pop
adc
ljmp
cld
call
bound
adc
jnp
ret
adcb
clc
cmpsb
inc
and
adc
push
in
in
push
xchg
out
sbb
adc
push
in
and
imul
pop
adc
or
push
push
hlt
cwtl
xchg
test
or
pop
adc
dec
scas
cmpsl
xor
lcall
arpl
adc
adc
mov
push
dec
push
je
pop
adc
xchg
adc
jle
push
jecxz
push
fstpl
mov
outsb
add
cs
lods
repnz
aaa
inc
addl
mov
mov
jo
pop
mov
adc
inc
cmp
pop
adc
mov
jecxz
mov
mov
adc
mov
xor
pop
or
cmp
mov
enter
jo
pop
adc
pop
std
adc
xor
cmp
jg
adc
cmp
loope
scas
xorl
pushf
test
cmc
into
test
clc
sbb
add
or
dec
addr16
adc
arpl
movsl
lret
add
iret
mov
adc
adc
adc
adc
sub
adc
stos
ficompl
fwait
int
cmp
jecxz
loopne
pop
adc
xchg
add
enter
push
pop
ss
fildl
out
or
fs
adc
mov
push
mov
sbb
inc
aam
pop
adc
lret
inc
cmp
push
mov
adc
or
jp
test
mov
gs
adc
hlt
ret
cmpsl
and
fidivrl
adc
jnp
fs
fcoml
xlat
adc
push
jne
out
insl
xchg
lret
cs
out
mov
adc
sbb
sub
subb
pushf
sub
mov
or
insl
arpl
enter
notl
jbe
adc
lea
and
push
jae
sub
pop
adc
sub
sbb
adc
and
xchg
pop
adc
or
cmpsb
or
bound
adc
cmpsl
mov
pop
addl
sub
jae
adc
test
imul
fs
adc
hlt
push
push
jg
shr
xor
jo
inc
push
insl
clc
shll
pop
adc
call
mov
outsl
or
sarb
adc
stos
or
or
xor
sbb
popa
pop
adc
scas
add
add
sub
mov
test
adc
cs
mov
lds
pop
adc
add
insl
xchg
arpl
nop
pop
adc
push
into
popf
cmp
add
jno
jg
push
jg
pop
mov
push
cli
hlt
inc
inc
pop
cwtl
pop
adc
xchg
push
call
rcrb
lock
push
fucomi
rcr
jge
mov
dec
xchg
pop
adc
push
jmp
jl
jp
pop
adc
js
push
mov
lods
xchg
pop
adc
inc
add
add
shlb
pop
adc
pop
cs
out
fwait
push
vcvttsd2si
pop
adc
or
das
or
pop
shrl
xchg
pop
adc
mov
pushf
addb
mov
pop
adc
das
pop
mov
jge
pop
jg
push
popf
cmp
out
jg
add
push
arpl
imul
roll
inc
and
adcl
jmp
inc
inc
jle
pop
adc
inc
les
mov
fwait
mul
mov
adc
mov
clc
ljmp
test
pop
adc
pop
mov
lock
or
jb
adc
push
adc
mov
sbb
adc
jg
in
mov
and
sbb
cwtl
pop
pop
adc
sbb
push
loope
inc
and
jbe
les
and
xchg
pop
adc
inc
loopne
xor
jmp
imul
not
ret
cmc
cld
mov
ss
mov
adc
adc
lea
lds
push
mov
adc
jo
add
push
xchg
inc
test
pop
adc
or
jne
sarb
adc
fwait
call
out
aas
or
jns
adc
cwtl
mov
mov
xor
pop
adc
jecxz
sbb
jle
dec
in
test
pop
adc
xchg
aaa
aad
iret
popa
mov
xchg
lock
pop
adc
jmp
xchg
pushf
sub
mov
clc
lea
adc
adc
mov
xor
sub
add
lea
adc
ss
cmpsb
lock
inc
insl
push
dec
or
lea
and
pop
adc
imul
push
div
pusha
jo
adc
or
test
lret
cwtl
cmpsl
loopne
pop
adc
push
dec
inc
mov
adc
mulb
repz
out
push
popa
jb
out
imul
fs
out
and
clc
enter
dec
push
xchg
pop
adc
imul
mov
xchg
mov
adc
cmp
pusha
mov
xchg
int
rorb
arpl
pop
adc
jo
adc
mov
lds
or
push
jp
jmpw
jmp
pop
cwtl
mov
adc
andl
lcall
pop
adc
cmpsl
cmc
push
dec
push
jmp
sub
add
mov
mov
jae
lret
movsb
pusha
pop
adc
pop
add
push
cmp
sbb
sub
adc
adc
lea
xor
sub
push
loopne
pop
adc
inc
loope
mov
push
dec
or
pop
mov
clc
xchg
pop
adc
adc
dec
and
test
sti
clc
mov
add
dec
add
repz
cwtl
cmp
addr16
xor
xchg
scas
jae
mov
adc
rorb
mov
lret
inc
inc
mov
fstpt
je
xchg
dec
call
les
adc
sti
jns
loopne
push
call
pop
pop
adc
jmp
inc
int
std
push
arpl
loope
adcb
jecxz
inc
lock
pop
adc
lret
add
fcmovbe
mov
pop
adc
push
cs
out
fwait
ljmp
je
adc
add
add
inc
xchg
adc
pop
mov
testb
push
arpl
pop
mov
jge
pop
jg
mov
adc
mov
call
add
pop
adc
mov
aaa
leave
hlt
call
pop
adc
push
call
int3
incb
in
pop
adc
inc
int3
jne
sbb
adc
adc
jp
call
xchg
pop
adc
push
or
or
sub
bound
inc
mov
adc
push
add
add
dec
jecxz
inc
sti
xor
xchg
ljmp
jb
into
lret
sarb
call
insl
pop
push
das
pop
ljmp
arpl
adc
mov
pushf
cmp
add
insl
mov
jp
adc
pop
mov
dec
sti
cmc
xchg
call
addr16
adc
mov
mov
iret
clc
pop
jge
mov
adc
pop
cli
ficoml
mov
adc
push
in
out
icebp
in
jns
pushf
jl
adc
mov
adc
xchg
jbe
adc
or
add
out
jl
add
mov
push
adc
gs
mov
test
aam
pop
adc
add
push
inc
imull
rclb
jecxz
inc
mov
ss
cs
fs
adc
lock
mov
mov
and
mov
dec
xor
xchg
movsb
cmpsl
or
rorb
mov
icebp
push
pop
repnz
cmp
adc
adc
hlt
jge
inc
and
pop
movsb
call
fidivrl
xor
or
adc
punpckhwd
xor
pop
cld
sub
lret
bound
adc
cmc
inc
and
push
sbb
popw
adc
stos
gs
popa
fmul
xchg
xchg
xchg
mov
xor
pop
adc
add
pushf
rcrb
sahf
loopne
fstps
iret
clc
mov
adc
xchg
sbb
push
adc
xor
popw
adc
mov
mov
and
mov
adc
cltd
mov
mov
and
sbb
pop
jae
xchg
dec
mov
adc
xchg
and
cmp
lret
sbb
push
pop
sub
aaa
aaa
xor
aad
rcll
imul
push
adc
iret
cmp
jle
movsb
gs
adc
push
jnp
xor
adc
push
hlt
pusha
pop
adc
dec
adc
dec
mov
movsl
mov
movsl
xchg
sub
repnz
pop
pop
pop
xor
sar
dec
dec
ss
in
lret
inc
arpl
adc
je
mov
xchg
push
cs
into
aam
pop
adc
mov
subl
test
pop
adc
pushf
insb
arpl
test
xchg
loope
adcb
adc
daa
rcl
roll
out
insb
pusha
arpl
test
adc
test
roll
aad
sbb
and
pop
adc
fsubrl
popa
cltd
mov
jo
adc
sub
add
call
adc
sub
push
cld
outsb
pop
aaa
dec
cmp
push
add
rorb
call
jecxz
jp
adc
shll
out
inc
and
subb
pusha
lret
cli
hlt
inc
inc
andb
mov
or
mov
dec
pop
jp
add
pop
adc
add
add
inc
xchg
adc
pop
mov
repz
or
pusha
pop
adc
add
pop
jns
cmpsb
mov
pop
xchg
ljmp
jb
into
lret
sarb
das
pop
ret
inc
inc
push
imul
mov
ja
hlt
call
pop
adc
mov
test
enter
insl
xor
icebp
loopne
aam
fcomp
shll
pop
adc
shll
leave
std
cli
mov
outsl
or
adc
lea
pop
or
das
xor
sbb
jae
adc
mov
add
push
jecxz
out
inc
sub
arpl
cmovb
mov
adc
add
je
packsswb
mov
adc
imul
cmp
add
push
jg
pop
mov
dec
cli
hlt
inc
inc
jo
pop
adc
xchg
dec
incl
mov
xchg
inc
add
mov
loope
pop
adc
pop
adc
dec
mov
adc
mov
adc
sub
pop
adc
pop
adc
inc
pop
mov
sub
add
adc
pop
adc
pop
adc
iret
add
adc
xorb
sbb
js
pop
hlt
mov
js
test
adc
push
insb
mov
mov
sub
mov
mov
add
sbb
je
xor
inc
mov
in
loop
std
fs
jmp
and
imul
mov
sbb
call
xorl
movsb
outsb
stos
lea
shrb
stc
or
push
jmp
in
xchg
mov
rcrl
aaa
push
cmp
lret
subb
fs
jns
push
arpl
loope
cmp
arpl
cmpsl
loop
in
imul
xchg
push
bound
push
cmp
stos
out
lcall
sbb
cld
mov
sbb
or
sub
das
cli
push
cli
jae
int3
in
ficoml
data16
xchg
popf
inc
call
sti
fidivl
fstps
jmp
jns,pn
jbe
xor
push
lret
jecxz
inc
jp
pushf
inc
jns
add
shrl
adc
popf
rol
cwtl
mov
pushf
daa
out
repz
jae
sbb
subl
stos
and
adc
inc
dec
outsl
jae
inc
repz
test
rcll
adc
adc
mov
mov
call
or
cmp
or
mov
lods
mov
inc
repnz
and
imul
and
in
xchg
aas
push
out
xor
add
ret
sub
mov
and
jns
or
cltd
pop
in
push
pop
addr16
pop
repnz
xchg
data16
and
cmp
push
inc
pop
pop
scas
hlt
int
push
cs
add
jbe
cmpb
xor
movsl
ljmp
inc
outsl
scas
xchg
addr16
fs
es
clc
xor
pushf
pop
adc
and
cmpsl
and
pushf
pop
adc
push
es
movsl
pop
repnz
mov
push
adc
call
lea
push
pop
xor
sbb
aas
xchg
and
add
cmp
out
or
sbb
das
pop
mov
adc
fsts
and
pop
and
push
mov
sets
les
or
ret
dec
jmp
mov
and
pop
xchg
jo
ljmp
mov
call
cwtl
or
das
or
pop
jo,pt
mov
pushf
lcall
cmp
jae
lcall
mov
mov
rcl
push
jne
inc
inc
in
mov
pop
out
add
cmp
mov
xchg
jno
inc
and
xor
dec
xor
push
mov
cwtl
stc
test
or
stc
cli
hlt
inc
inc
pop
xor
dec
sbb
mov
sub
test
pop
decb
mov
dec
pop
in
call
add
popf
add
loopne
std
push
jecxz
lret
inc
or
idiv
mov
js
je
sti
adc
test
inc
mov
pop
sub
je
call
xor
cld
xor
dec
cmp
call
add
lcall
cmp
shlb
adc
mov
std
insl
push
xchg
pop
adc
cmc
pop
aaa
jge,pt
dec
ljmp
pop
add
xchg
aam
cmc
inc
mov
push
xchg
push
xchg
mov
mov
xor
adc
push
mov
mov
xchg
or
cmpsb
push
scas
mov
pusha
cwtl
jno
dec
pop
sti
sti
mov
push
push
sbb
aam
adcl
or
adc
sbb
cmpsb
dec
mov
or
sti
push
mov
movsl
mov
dec
pop
pushl
inc
pop
adc
fwait
push
bound
inc
inc
pop
adc
pushf
in
xor
adc
sbb
pop
adc
ss
inc
pop
adc
decl
pop
adc
inc
inc
pop
adc
ret
clc
sbb
jle
push
inc
rcr
aam
dec
pop
adc
int
pop
cmp
lods
test
mov
lret
fimuls
or
pop
adc
roll
test
and
adc
adc
pop
es
xor
sbb
dec
sub
add
cmpsl
xchg
popf
cmp
jo
push
bound
rcll
adc
stc
xchg
push
jae
and
jno
cmp
andb
ljmp
jmp
push
in
sbb
pop
adc
push
mov
popf
pop
adc
cld
adc
adc
or
lret
jecxz
mov
bswap
sub
arpl
shl
jb
lds
adc
leave
fs
stos
scas
mov
outsl
dec
andl
fwait
addl
loope
leave
enter
leave
or
out
aaa
dec
shrl
rcrl
cld
adcl
xor
cmp
fs
ds
pop
adc
sub
sbb
or
push
popa
pusha
jnp
pop
push
xor
and
dec
mov
mov
pop
pop
movsl
xchg
add
loop
sbb
adc
clc
inc
out
fldt
xchg
ljmp
ljmp
dec
push
and
adc
icebp
ljmp
sub
push
and
addr16
clc
popf
pop
adc
cltd
add
push
adc
sub
mov
xor
daa
dec
mov
fucomp
mov
popf
pop
adc
adc
and
fisttpll
cwtl
loopne
pop
adc
pop
iret
inc
popa
and
sub
outsb
sbb
mov
sbb
test
lahf
and
nop
inc
xchg
adc
stos
push
jge
imul
nop
lcall
cmp
enter
addb
mov
sub
fidivrs
pusha
adc
sti
cld
sub
mov
xor
add
jb
jl
lods
sub
imul
rclb
shlb
movl
sub
repz
inc
or
sub
jecxz
int3
push
ljmp
imul
test
hlt
rcll
sub
shll
inc
adc
je
push
inc
or
in
shl
sub
mov
cmovs
xchg
call
inc
cltd
or
addb
lds
xchg
adc
dec
int
loopne
mov
and
ds
mov
add
add
adcb
mov
jmp
jmp
cmp
sub
and
adc
pushf
pusha
push
jnp
scas
stc
jge
out
sub
and
test
cmp
dec
sub
add
ljmp
iret
shrd
popa
jae
lret
lahf
out
pop
fstpl
jo
and
mov
repz
jno
or
stos
sbb
aam
das
sub
push
push
jecxz
int
mov
iret
in
jecxz
jbe
inc
stc
fwait
daa
scas
int
lea
pop
mov
add
scas
pop
clc
add
xor
ss
mov
ljmp
testl
add
jnp
das
call
or
ds
fstp
and
cli
cli
jno
call
xor
jp
fisubl
pop
sub
jecxz
cmpsb
add
pop
adc
enter
adc
jle
icebp
pushl
popf
pop
adc
int
adc
adc
xchg
jle
jo
jmp
push
aad
mov
lcall
xchg
pop
lret
ficomps
adc
cmc
cli
sub
jae
push
jl
dec
pop
adc
adc
ret
imul
ljmp
add
outsb
jecxz
filds
insl
pop
scas
pop
add
jbe
mov
mov
jecxz
cld
outsl
fiadds
pop
int3
inc
push
popf
xor
mov
or
insb
adc
xchg
popf
cmc
add
mov
add
xlat
cwtl
add
shll
nop
or
dec
mov
rcrl
add
lock
inc
sub
dec
push
fdivrs
in
outsl
arpl
testb
pop
pop
lds
test
push
movsl
pushf
inc
movsb
or
mov
fnstenv
cmp
lret
das
mov
pusha
inc
pop
adc
fcompl
sbb
stos
stc
pop
mov
sbb
outsl
jae
xorb
cld
ret
add
dec
mov
out
jbe
addr16
lret
pop
cmp
mov
adc
int3
ret
xor
push
bound
mov
sub
pusha
push
sub
mov
dec
movsb
jns
push
mov
adc
push
int
call
movsl
and
xor
or
cli
aad
in
pop
out
in
in
mov
sub
or
aaa
jo
fdivl
divl
leave
leave
dec
inc
cld
xorb
pop
dec
pop
or
popa
adc
inc
insl
push
in
pushf
lret
sub
into
fadds
mov
jne
xor
outsl
clc
decl
pop
push
lea
add
cmp
xchg
out
adc
jbe
jno
out
les
lds
fistps
in
push
es
mov
inc
fsubl
scas
ret
sbb
mov
adc
outsl
cli
mov
insb
push
outsl
pop
push
nop
test
sahf
inc
inc
rcl
loope
cltd
and
xchg
pop
mov
jle
sbb
inc
or
add
lahf
filds
dec
xchg
and
pop
lahf
pop
push
insl
enter
ja
or
pop
mov
fldl
or
in
inc
inc
xor
loope
sbb
adc
ret
inc
add
ds
xchg
xchg
es
xchg
lock
pop
popa
hlt
call
bound
gs
mov
ljmp
and
pop
ds
adcb
mov
adc
push
shr
add
inc
xchg
arpl
fwait
add
mov
inc
shlb
mov
jg
sbb
movsl
pop
jge
push
call
punpckhbw
je
push
clc
mov
pop
cli
hlt
call
jge
mov
hlt
inc
jle
xor
sub
das
pop
dec
add
sbb
cli
ds
popf
pop
adc
ss
push
adc
xor
arpl
mov
addb
xchg
pop
dec
or
xor
arpl
mov
jbe
sbb
mov
cli
hlt
call
insb
add
jo
das
lret
add
ffreep
daa
fiadds
in
mov
lea
movsb
push
jne
push
sarl
data16
jmp
jg
aas
jl
cmc
cwtl
fs
shll
mov
push
mov
jbe
imul
inc
mov
ret
or
cmpsb
in
sahf
leave
test
clc
popf
pop
adc
add
pop
adc
aas
cld
adc
adc
push
mov
cmp
xor
je
hlt
loop
pop
jecxz
push
fnsave
cmpsb
jle
nop
push
inc
and
push
popf
add
jo
push
pushf
inc
in
loop
fidivs
jge
loope
cld
sbb
arpl
cmp
push
and
movsb
and
sub
cmp
sbb
scas
ja
push
mov
pushf
pop
adc
or
cld
add
cltd
loop
out
adc
sub
fcomps
add
pop
adc
ja
pushf
pop
adc
inc
mov
roll
out
mov
cld
imul
jmp
dec
jge
pop
jg
es
dec
jne
imul
add
ficoml
cltd
mov
and
mov
movl
sub
lods
ds
sbb
scas
jbe
scas
mov
or
mov
push
int
or
dec
mov
daa
sbb
addr16
mov
popa
or
xlat
rcrl
jge
pop
cmp
xor
or
push
push
mov
scas
push
lret
cwtl
movsl
dec
sub
cmp
pop
subl
mov
lret
lret
push
pop
mov
outsl
jae
sbb
xorl
popa
adc
add
inc
int3
mov
clc
in
sbb
cmp
leave
enter
popf
out
xor
into
testl
mov
paddusb
dec
dec
sub
xchg
xchg
xchg
outsb
sbb
gs
inc
mov
jmp
popf
push
outsb
inc
lret
hlt
dec
xchg
daa
pop
lods
add
mov
pop
cmp
lret
out
test
data16
fwait
jmp
test
mov
out
loope,pt
mov
xor
inc
aaa
sbb
ljmp
test
jle
jnp
clc
jp
push
adc
jae
gs
dec
add
decb
cs
jno
int3
sbb
adc
scas
jae
lret
jb
push
mov
imul
sub
jne
xor
dec
mov
movsl
hlt
or
inc
int
jno
jecxz
lea
lahf
dec
push
ss
lods
mov
adc
push
stc
mov
and
cmp
enter
jg
fisttpl
aas
push
hlt
adc
mov
jg
push
in
xor
sub
or
call
lcall
jle
cli
push
dec
inc
mov
pop
adc
adc
mov
lods
insl
or
xor
arpl
pushl
popf
pop
adc
dec
cld
adc
adc
lcall
lods
mov
das
inc
or
incb
adc
jmp
inc
sub
cmp
std
lea
lret
xor
hlt
add
adc
adc
add
pop
adc
and
lret
xor
std
mov
xchg
fsts
jecxz
loopne
or
xchg
out
push
cmp
mov
imul
ret
in
add
mov
je
stc
nop
dec
mov
into
gs
xchg
xchg
mov
xchg
dec
xor
pop
adc
pop
pop
jp
or
repnz
shl
ret
mov
xor
dec
insl
push
add
mov
adcb
clc
dec
hlt
imul
add
jle
in
pop
in
or
lret
sti
pop
aas
mov
cli
hlt
jl
add
sahf
jge
movsb
or
add
adc
or
loop
imul
in
out
jge
aaa
mov
pop
icebp
cmp
and
cmpsb
aaa
cmp
xor
arpl
jo
dec
or
pop
cs
idivb
or
push
test
repnz
fadds
aaa
in
pop
pop
adc
add
dec
sbb
bound
jle
pushf
pop
adc
mov
shl
ds
aad
cli
push
arpl
cmp
lcall
mov
adc
inc
pop
adc
pusha
add
pop
adc
jl
mov
xor
sub
push
push
idivl
sub
orl
and
sti
and
pop
adc
jecxz
mov
pop
gs
adc
sbb
ljmp
pop
adc
cs
pop
xor
aad
lret
or
push
jge
adc
adc
jp
dec
in
and
insb
std
aam
arpl
pop
mov
sbb
fsubs
dec
pop
adc
inc
cmp
xchg
xchg
loope
insb
pop
xor
pop
int
leave
scas
cmp
aam
and
xchg
popf
out
xor
sbbb
xchg
imul
pop
pop
adc
fidivs
and
insl
dec
je
and
cmp
or
push
jae
cmp
in
js
cmp
inc
sbb
pop
adc
mov
dec
pop
sahf
stos
je
xor
and
add
adc
mov
aam
iret
sub
and
add
xchg
int
pop
pop
adc
cmp
push
adc
inc
mov
push
adc
lret
out
and
and
bnd
cmpsb
and
cmpsl
lods
test
nop
mov
je
lret
in
in
in
cli
fistps
mov
pushf
lods
lods
sub
dec
out
int
cmp
call
push
xlat
mov
cmp
imul
movl
pushf
orb
jecxz
cmp
adc
rcr
cld
cs
jo
ret
inc
fistps
sbb
dec
xor
xchg
jno
lods
cwtl
in
mov
add
lods
mov
stos
aam
lock
mov
inc
sbb
mov
mov
add
pop
adc
push
mov
and
push
test
add
fdivrl
xchg
int3
push
and
or
push
adc
push
jne
popf
je
into
dec
decb
cmp
orb
mov
int3
and
add
add
xchg
sbb
xchg
cmp
faddl
mov
and
push
xchg
or
das
aad
mov
add
xchg
mov
mov
mov
jb
push
mov
jno
andb
popf
pop
adc
xchg
inc
out
adc
xlat
out
fcoml
xlat
sub
mov
push
jb
mov
es
imul
adc
jmp
je
add
pop
adc
add
add
jmp
call
movsb
lret
aad
add
inc
loopne
movsb
push
add
pop
adc
and
ret
mov
lea
pushf
pop
adc
pop
adc
xchg
adc
jmp
adc
jl
fldl
pop
adc
ljmp
nop
pop
sub
sbbb
pushf
pop
adc
push
aaa
and
pop
adc
mov
dec
push
mov
add
pop
adc
decl
jno
sti
hlt
popf
bound
xchg
cmp
sar
mov
inc
add
adc
inc
inc
inc
push
leave
cmp
and
adc
shrb
dec
add
pop
adc
or
jle
xchg
imul
rcll
and
hlt
jae
push
dec
roll
pop
adc
in
jl
xor
mov
lahf
int
in
sbb
adc
inc
jle
inc
je
insb
and
adc
sbb
and
jecxz
and
test
push
adc
sbb
and
aas
mov
das
mov
lret
pop
mov
daa
insl
es
das
cmpsb
jnp
std
push
push
xchg
and
dec
fdivs
mov
jno
mov
inc
or
aad
scas
mov
in
mov
daa
or
sub
push
cmp
fildll
call
cmp
roll
add
mov
out
xchg
in
rcrb
mov
lods
sbb
mov
push
adc
push
cs
add
push
and
ds
jmp
mov
pop
sbbl
dec
mov
lret
push
int3
scas
sub
jl
inc
mov
cmp
jge
pushf
imul
add
pop
arpl
dec
pop
adc
lret
mov
jns
pop
pop
adc
push
sbb
pop
adc
leave
jns
sbb
xor
mov
out
add
addr16
sbb
out
xchg
dec
hlt
lcall
push
push
aaa
subl
fstpt
sbb
aaa
fbld
testl
cmp
ffreep
inc
int3
lds
cmp
test
nop
or
sbb
pop
adc
and
adc
adc
sub
jl
stos
xlat
sub
pop
adc
aaa
stc
push
popf
mov
dec
adc
cwtl
pop
sahf
sbb
and
xchg
mov
int
xchg
ret
arpl
jbe
pop
adc
sbb
lock
pop
adc
pop
aaa
lea
dec
jmp
js
dec
cs
ds
push
stos
jge
ss
mov
cld
sbb
adc
sbb
pop
mov
cmpsl
or
push
add
loope
and
push
add
mov
pushf
pop
adc
cmp
hlt
dec
pop
or
scas
cmp
mov
add
jnp
addb
mov
add
add
pop
adc
push
das
imull
fucomi
dec
addr16
xor
cmp
out
mov
push
mov
in
out
loopne
add
mov
sahf
imul
addb
xor
fnstenv
mov
les
aam
gs
dec
pop
or
xlat
mov
pushf
pop
adc
in
pop
mov
ja
xor
or
lahf
or
sbb
jne
mov
das
cwtl
pop
or
adc
add
pop
adc
inc
push
sbb
sbb
add
pop
adc
adc
add
cmp
add
pop
adc
cmp
add
pop
adc
sbb
push
add
pop
adc
mov
scas
jmp
pushf
pop
adc
adc
mov
pushf
pop
adc
xor
sti
hlt
pushf
and
pop
adc
xor
jg
or
inc
jl
mov
and
mov
add
pop
adc
mov
xchg
shlb
lea
pop
adc
jge
mov
fmull
pop
dec
popl
pop
adc
jmp
jmp
cmp
add
pop
adc
outsb
add
mov
in
pop
pop
adc
pop
pop
jmp
xor
popf
cmp
xorb
pop
mov
cs
aad
xchg
xor
aam
push
je
or
jb
adc
adc
mov
push
int3
popf
pop
adc
cld
fiadds
adc
xorb
inc
pop
adc
or
inc
pop
adc
lock
mov
mov
dec
test
inc
inc
xchg
iret
shrl
iret
jnp
pop
pop
adc
loope
mov
popf
pop
adc
movsl
scas
jmp
jg
and
fcompl
icebp
mov
out
add
test
xor
mov
jnp
sahf
cltd
fcomps
gs
or
mov
fwait
and
cmc
xor
mov
mov
test
int3
scas
push
inc
divb
repnz
popf
pop
adc
add
adc
adc
adc
popf
pop
adc
mov
jge
insb
lods
sub
push
loope
pushf
pop
adc
pop
call
ret
enter
pop
adc
adc
and
jne
xor
adc
sbb
cli
or
lahf
sti
cmp
mov
popf
pop
adc
xor
es
pavgw
jp
dec
push
pushf
popa
dec
cld
mov
pusha
outsl
jae
xor
icebp
sbb
ror
pushf
or
push
jbe
push
bound
cmp
push
xchg
pop
mov
sub
push
adc
cmp
adc
adc
adc
clc
push
xchg
mov
push
adc
push
xor
loop
movsl
aam
repnz
ja
or
push
adc
fs
pop
adc
adc
les
xchg
add
xor
test
mov
push
adc
inc
adc
adc
jl
loope
cmp
mov
popf
aad
clc
mov
push
adc
outsb
jmp
cmp
gs
adc
adc
sub
enter
fstp
pop
cwtl
es
adc
hlt
out
inc
adc
adc
jl
and
dec
and
stos
mov
pop
jo
pop
adc
test
loopne
jbe
fstps
jp
push
test
orl
scas
outsb
jmp
adc
in
xchg
cwtl
popa
sti
std
aad
ds
jg
cmp
jnp
push
fwait
lret
movsl
inc
rorl
adc
adc
lret
movsl
stos
pop
jg
nop
adc
adc
mov
cli
jle
movsl
popa
lods
adc
adc
pop
sbb
clc
std
cli
pop
shrl
loopne
push
mov
and
pop
cmp
push
mov
aaa
pop
adc
adc
enter
es
adc
bound
mov
arpl
mov
push
call
scas
mov
jmp
mov
push
mov
push
adc
fldln2
dec
imulb
mov
aam
rcrb
out
pop
stc
das
sub
mov
adc
insb
jl
xor
add
push
pop
push
fnstcw
add
dec
and
push
std
jno
or
jp
lock
mov
sbb
int
repz
push
inc
sub
mov
dec
pop
adc
das
fwait
cs
mov
insl
and
mov
mov
adc
adc
sbb
sarl
out
mov
inc
jne
lahf
popf
lea
adcb
adc
rcrb
push
inc
adc
adc
push
cmpsl
dec
cmp
jmp
adc
adc
lcall
push
mov
dec
adcb
adc
jae
fistps
adc
loope
pop
pop
mov
adc
adc
std
or
mov
cli
fadd
adc
adc
shrb
fs
inc
pop
push
push
les
cmp
inc
sub
mov
adc
sbb
pop
arpl
or
add
xor
adc
adc
fdivp
adc
xor
push
mov
xchg
xchg
push
push
dec
dec
dec
inc
jmp
xor
adc
fbld
xchg
mov
pop
fs
pop
adc
jnp
sub
cmp
and
aaa
and
mov
push
loop
bound
xor
dec
push
fistpll
mov
pusha
jp
adc
mov
insl
jmp
push
nop
data16
fbld
inc
pop
fs
nop
xor
iret
sahf
lret
jnp
dec
cmp
mov
push
movsb
insb
lea
es
adc
jmp
out
add
enter
adc
shll
xchg
push
pop
sub
jecxz
repz
and
jp
aad
mov
jg
das
mov
mov
shrl
inc
xchg
push
inc
in
and
adc
das
mov
nop
pop
adc
dec
int
loope
loope
test
fidivs
mov
aas
stc
sti
decb
shrl
push
adc
es
adc
mov
dec
xchg
and
mov
sbb
ss
mov
push
adc
fimuls
aam
cmp
test
out
push
cmp
test
in
loop
int3
cs
mul
mov
jns
sub
out
mov
stos
cwtl
pop
push
pop
inc
and
movsl
aam
pop
adc
fistl
js
cmp
fs
xor
ja
mov
adc
xor
aad
mov
es
mov
or
mov
add
cmpsl
imul
out
leave
sub
leave
call
mov
inc
push
xor
fcoms
nop
mov
mov
test
and
data16
roll
stc
mov
and
sub
pop
cli
cmc
xor
add
inc
test
insb
push
push
int3
pop
pop
adc
adc
pop
pop
adc
sub
test
pop
pop
adc
pop
adc
insb
or
pop
pop
adc
jle
loopne
pop
adc
ljmp
arpl
jmp
mov
pop
pop
adc
mov
adc
adc
sbb
xchg
roll
adc
pushf
pop
adc
adc
push
push
push
or
das
push
inc
insl
or
push
adc
scas
sbb
int
cmp
mov
add
add
push
adc
aad
pushf
pop
adc
clc
std
sbb
pop
adc
pop
push
lock
adc
gs
repz
push
movsb
cld
pop
pop
adc
adc
adc
add
push
pop
call
pop
pop
adc
sbb
inc
inc
dec
inc
inc
add
pop
adc
adc
xor
pop
pop
adc
mov
mov
or
movsb
insb
shrl
adc
fs
push
pushl
pop
pop
adc
xor
ss
in
dec
loope
fs
mov
aaa
cld
pop
pop
adc
pop
pop
adc
shll
adc
clc
sbbb
pop
pop
adc
lea
mov
and
adc
pop
mov
pmuludq
adc
pop
pop
adc
stc
xlat
xchg
hlt
pop
pop
adc
inc
das
push
jg
lea
adc
xchg
add
pop
je
test
and
icebp
xchg
xlat
sti
aas
inc
pushf
pop
adc
pushf
pop
adc
or
inc
pushf
pop
adc
push
push
mov
xchg
hlt
or
daa
pusha
jp
adc
adc
mov
adc
adc
push
mov
xchg
movb
lahf
out
jno
icebp
or
adc
adc
pop
adc
sbb
pop
pop
push
sbb
push
adc
es
adc
lcall
aam
add
jl
inc
mov
pop
pop
adc
adc
cs
adc
adc
inc
cmpsb
push
inc
cmpsb
rclb
adc
mov
std
movsb
adc
test
mov
loope
dec
je
outsl
call
nop
mov
jns
decb
or
sarl
mov
je
scas
hlt
adc
adc
out
adc
add
sub
cmc
loop
repz
out
pop
mov
adc
adc
mov
mov
das
andps
push
adc
pusha
shll
sub
imul
jb
jbe
adc
clc
pop
pop
adc
mov
les
push
adc
xchg
aas
addb
adc
jne
pop
jo
push
adc
insb
pop
aad
add
not
in
clc
pop
pop
adc
mov
jne,pn
inc
popf
adc
adc
and
and
and
leave
dec
sbb
int
xor
cmpl
push
jmp
add
sub
nop
rcrb
stc
mov
out
je
push
lcall
nop
lock
push
lret
fildll
jle
je
cmc
xor
mov
dec
pop
push
jbe
incl
test
pop
push
mov
fldenv
add
inc
std
data16
gs
aaa
inc
adc
pushf
xchg
lcall
and
pop
or
out
pop
push
fildl
jle
in
out
and
lret
pop
stos
adc
sub
adc
mov
dec
push
adc
pop
lock
xchg
jg
imul
jbe
stos
cld
in
sub
and
cmp
sbb
jo
js
insl
loopne
repnz
loop
adc
enter
mov
push
pop
test
ficomps
dec
out
into
and
pop
in
pop
pop
adc
std
test
out
lods
mov
push
mov
jo
fsts
loop
cmpsl
fbstp
in
loop
inc
mov
outsl
loopne
ror
jne
test
push
xlat
push
mov
mov
mov
mov
mov
jle
addl
lahf
push
mov
mov
pop
adc
or
dec
pop
mull
das
xchg
mov
cmp
insb
es
adc
mov
imul
xchg
adc
mul
into
popf
lds
jg
adc
int3
cmc
call
pop
adc
or
push
push
xlat
mov
pop
pop
adc
xchg
imul
adc
pop
pop
adc
jge
imulb
in
pop
pop
adc
or
cld
add
in
pop
pop
adc
ljmp
pop
pop
adc
repnz
leave
arpl
mov
les
pop
adc
sbb
std
aaa
insb
es
adc
mov
xor
aas
loop
jp
jb
push
lret
insb
es
adc
sub
mov
shll
adc
mov
sbbb
lds
xchg
fisttpl
push
das
adc
mov
cmp
jnp
or
pushf
mov
xchg
mov
xchg
push
or
xchg
stc
mov
add
pop
pop
aaa
xor
fistl
cmpsl
sbb
xlat
ds
stc
movsl
movsb
leave
sub
addb
sbb
mov
push
cmp
pop
add
int3
xor
clc
aam
push
mov
mov
xor
sub
loopne
add
adc
mov
in
fistpll
mov
lods
or
pop
rclb
inc
shrb
inc
test
mulb
cmpsb
leave
jle
and
mov
mov
test
inc
mov
in
xorb
cmc
push
mov
outsl
mov
movsl
scas
cmp
test
dec
scas
dec
or
push
adc
dec
insl
sub
movsl
enter
mov
push
push
xchg
push
or
add
cmpsb
subb
adc
adc
pop
pop
scas
in
rclb
pop
sub
xlat
or
push
pop
dec
mov
mov
movsl
hlt
repnz
push
sbb
or
iret
fistps
sahf
push
sbb
fwait
add
push
sub
mov
mov
in
add
inc
add
xor
jmp
fcomps
push
lret
sub
out
bound
xor
loope
loop
stos
sbb
mov
sbb
scas
sti
rolb
aad
subl
push
lods
cld
lds
jecxz
and
pusha
push
pop
sahf
leave
arpl
xchg
xchg
cmp
les
mov
daa
fistps
aam
das
in
pop
mov
sahf
outsl
cmp
push
cmpsb
es
cli
idivl
shlb
pushf
in
or
dec
ret
add
mov
jl
loope
mov
adc
adc
dec
push
in
sbb
fisubl
int
jae
inc
cltd
outsl
imul
pop
aad
push
add
test
cmpsb
mov
aaa
pop
xor
jae
fstps
cmp
les
js
jo
push
arpl
jge
movsl
or
jne
pusha
adc
idivl
out
dec
dec
and
sub
sbb
mov
adc
movsl
add
sub
adc
adc
pop
dec
push
mov
xor
or
dec
inc
xlat
mov
add
fnstenv
xchg
xor
out
fs
jae
and
les
push
adc
mov
add
jb
push
pop
push
daa
ret
xchg
or
adc
jecxz
pop
mov
dec
subb
jge
pushf
das
cmp
rorl
scas
mov
mov
or
std
inc
js
pop
mov
adc
adc
xchg
add
int
shl
inc
fldt
add
add
cmp
inc
fisubrl
lods
mov
dec
shrl
sub
add
add
cmp
dec
fcmovnu
jmp
push
addr16
xchg
pop
nop
jo
cld
adc
mov
sub
in
pop
out
imul
inc
inc
xchg
aas
sub
xrelease
lds
or
ljmp
inc
inc
cmpb
jge
xchg
mov
push
psubsw
push
adc
sbb
pop
leave
ret
jecxz
mov
and
add
jno
sahf
ds
ja
add
cmp
stc
pop
call
add
pop
xor
fldenv
xchg
or
pop
jge
mov
xlat
in
push
lret
mov
push
jg
sbb
shrb
lods
xchg
jecxz
aam
inc
clc
and
xor
or
cmpb
movsb
xchg
popl
sbb
mov
stos
insl
pushf
cltd
insl
mov
add
cmc
arpl
add
and
in
aam
cli
incl
inc
mov
cltd
mov
cs
mov
add
sahf
das
aad
icebp
mov
or
or
pop
ret
ret
add
les
cmp
adc
ljmp
je
in
fstpl
sbb
or
clc
push
inc
ljmp
push
mov
jle
xchg
orb
out
xchg
pop
addl
mov
add
sbb
adc
imul
jmp
fstp
in
es
adc
push
sar
lret
xchg
insb
jl
adc
push
xchg
mov
in
dec
inc
jl
xor
movsb
push
push
fiaddl
pop
push
adc
jne
mov
push
lea
add
jne
lock
mov
adc
jl
mov
adc
jle
adc
sbb
pushf
xlat
imul
int3
and
push
and
call
out
cmpsb
push
adc
push
aaa
mov
xchg
ficomps
popa
dec
lahf
sbb
mov
mov
cmpsl
lods
add
dec
roll
inc
cld
pop
out
test
push
and
adc
push
sub
fs
mov
cmp
inc
adc
aas
add
xor
xor
xor
call
push
pop
adc
stc
lods
add
pusha
sub
dec
lds
dec
mov
mov
xlat
adc
mov
jmp
cmc
push
jns
push
testl
mov
aam
fmull
cmp
xchg
das
add
test
lods
push
movsl
pushf
lcall
mov
cltd
dec
leave
mov
pop
popf
arpl
mov
mov
add
ret
test
mov
and
adc
sahf
adc
xchg
pop
stc
xor
mov
xchg
iret
test
xor
and
stos
or
fisubrs
push
data16
xchg
call
lods
push
int
sahf
movsb
aas
outsb
xor
cmp
aam
mov
xor
push
adc
and
int3
push
jo
lea
stos
mov
mov
jb
mov
adc
pop
jbe
sbb
jae
jl
adc
aad
fisttpll
adc
cmp
jno
imul
pop
adc
jg
mov
mov
jecxz
or
mov
adc
pushf
call
sbb
hlt
or
pop
push
pushf
mov
out
sbb
xchg
cmp
sub
fcomps
in
ret
push
adc
add
cmpsl
add
push
dec
pop
dec
lock
and
push
sub
mov
loope
dec
adc
and
std
mov
jae
sbb
jmp
lret
nop
lret
lret
das
inc
push
mov
cmp
mov
pop
ret
push
xor
jne
mov
insb
fcmovnbe
sub
add
test
push
sti
xchg
fcmovu
mov
je
jg
into
sbbl
inc
fdivrl
jmp
cmp
ja
adcb
mov
mov
setle
mov
cli
cmpsb
push
jno
popa
cwtl
movsb
lret
mov
lea
cmpsl
adc
rorb
push
shl
popf
mov
lds
add
mov
xor
pop
xor
ds
pusha
mov
call
or
adc
pop
mov
cmpb
pop
and
jo
cltd
jmp
push
cmp
iret
iret
jmp
and
test
jne
mov
aaa
xor
sub
inc
mov
mov
rcrb
or
movl
mov
cmp
repz
out
dec
fs
mov
movb
in
shl
shlb
call
push
cmp
iret
iret
call
fldcw
jne
movl
lret
lods
xor
inc
cvttps2pi
mov
fdivs
lds
stc
sub
je
mov
jmp
lods
xor
ret
dec
aas
cs
test
xor
cmp
cmpsb
clc
sub
test
dec
icebp
les
push
movsb
pop
ljmp
jmp
out
je
int
sar
lret
mov
or
jge
push
sbb
inc
ror
adc
mov
rorl
pop
sahf
clc
jle
and
and
push
fisubrs
jmp
add
push
jne
data16
jae
jb
addr16
push
pop
ret
orb
adc
test
icebp
jbe
mov
inc
in
daa
je
mov
pop
mov
pop
push
adc
mov
cmpsb
aaa
push
testl
inc
cmpsb
mov
jl
jecxz
test
js
arpl
ja
mov
and
in
outsb
sub
cmpsb
aad
jmp
push
xchg
sbb
pop
fists
sahf
add
mov
scas
mov
fidivl
cmpsl
fwait
jmp
std
shll
fucom
and
dec
in
jno
pushf
rcrb
mov
scas
int3
imul
push
cmp
and
aad
lcall
stc
mov
or
mov
add
push
pop
lods
ror
test
pop
mov
rol
dec
dec
jbe
lods
loopne
icebp
negl
fsts
int3
sub
and
jo
mov
and
pop
bound
mov
inc
scas
jecxz
in
push
mov
pop
ret
dec
rol
and
pop
cmpl
sahf
pop
out
popf
leave
jbe
cmp
xchg
pop
sub
xchg
lock
aaa
push
jbe
mov
xor
jne
pop
mov
gs
dec
into
cmp
sbb
out
jp
inc
imul
test
sub
clc
cli
fstpl
test
sub
push
cmp
dec
imul
and
mov
ftst
mov
imul
add
jb
sti
enter
lret
jno
cmp
cwtl
mov
adc
jp
test
in
pop
loopne
ja
mov
enter
stos
cltd
call
jecxz
shl
mov
mov
dec
dec
mov
outsb
mov
nop
push
mov
push
out
in
push
mov
push
ret
int3
xchg
xor
xchg
mov
jge
and
movsb
sub
negb
and
ss
mov
mov
adc
sub
loop
lock
push
fwait
and
cmp
and
rorb
dec
insl
sbb
and
lds
ss
or
je,pt
mov
dec
fcmovne
ret
push
cmp
or
mov
lds
dec
pop
sub
sub
xor
cmp
jg
mov
mov
cld
or
push
cld
xchg
mov
xchg
xor
mov
adc
sub
std
mov
adc
lods
or
or
jnp
out
xchg
call
lock
in
and
jle
lods
cmp
lods
adc
shll
popa
cmp
and
jle
mov
jecxz
push
inc
adc
mov
cmovs
call
subl
loopne
sub
add
add
loop
shll
xchg
or
fmuls
int3
ja
sbb
aas
mov
inc
or
shlb
xchg
fldcw
mov
or
clc
xlat
enter
xchg
insl
pop
sub
jmp
inc
aaa
add
imul
shll
aad
push
mov
jg
mov
lcall
pop
movl
sub
jo
sub
dec
jo
rcrl
mov
push
stc
std
cli
adcb
or
lock
roll
popf
pop
push
addl
loope
add
pop
cmpsb
jp
adc
addl
push
adc
push
stos
dec
ljmp
dec
sbb
add
sub
loop
mov
clc
negb
fisttpl
xchg
lods
add
stc
stc
sarb
mov
and
into
hlt
scas
lret
nop
add
xor
cmp
repz
sbb
shlb
dec
jge
and
jmp
ljmp
pop
pop
sti
add
mov
push
inc
cmpsb
mov
movsb
outsl
and
mov
ja
pop
lea
dec
or
inc
imul
pop
mov
aad
fcomps
cmp
jge
mov
push
mov
dec
mov
pop
dec
es
add
or
divl
mov
addr16
into
js
xchg
ret
pop
jge
loope
mov
fs
sbb
out
sbb
mov
clc
sub
jbe
iret
dec
cltd
jecxz
push
sub
pop
sub
sbb
rcr
sub
jbe
sarb
shl
nop
loopne
je
pop
pop
adc
adc
loop
repz
fnstenv
sbb
mov
pop
lahf
cwtl
mov
and
fsubrl
mov
push
lods
or
rorl
iret
pop
xchg
inc
dec
sub
pop
adc
adc
or
mov
cmp
pop
adc
cld
adc
adc
mov
inc
lea
adc
or
fiadds
dec
pop
adc
arpl
jne
cmp
add
repz
fstl
pop
push
jecxz
dec
sbb
inc
lods
add
stos
sub
cmpsw
das
xor
push
or
mov
mov
scas
inc
mov
and
adc
mov
in
aaa
fsubp
fs
repnz
push
sbb
adc
adc
push
neg
lods
xor
repnz
movsl
mov
movsl
insl
add
adc
pop
test
adc
cmp
ret
jmp
cli
push
pop
pop
mov
mov
sbb
lods
xchg
pop
add
mov
pop
sub
loop
pop
das
loopne
out
loop
ficoml
movsl
or
xor
shrl
mov
nop
loopne
inc
lods
pop
sub
shrb
sub
into
and
ret
push
test
es
jle
or
pop
adc
lcall
or
ret
jge
cmp
into
idivl
daa
adc
inc
addb
push
std
adc
adc
adc
orb
test
or
stos
push
int3
push
mov
pop
push
in
push
adc
mov
jno
jg
lods
popa
cwtl
inc
pop
adc
adc
test
pop
pushl
mov
or
sahf
jae
push
imul
mov
add
std
jo
call
adc
notb
hlt
bound
es
fs
add
je
les
push
jns
clc
leave
repnz
jge
scas
call
adc
rorb
nop
mov
jno
xchg
or
pop
adc
add
push
adc
sbb
in
adc
adc
icebp
loope
pop
pop
adc
pop
inc
pop
pop
adc
sub
loopne
mov
test
dec
add
or
inc
pop
pop
adc
mov
fwait
in
popf
int
popa
lea
lds
hlt
bound
mov
test
pop
cwtl
fistl
push
mov
out
lds
adc
or
cld
cli
sbbb
xor
orb
jo
nop
ret
sub
and
adc
push
mov
mov
push
or
dec
sub
ss
xchg
pop
adc
lahf
arpl
adc
lock
pop
adc
sbb
adc
adc
push
pop
pop
adc
fstps
aas
mov
les
hlt
mov
adc
push
aad
xor
push
adc
fs
sbb
or
adc
daa
fiadds
pop
adc
push
add
or
lret
call
pop
in
js
pop
adc
pop
adc
loop
int3
adc
adc
and
inc
xchg
jg
clc
leave
cmpsb
inc
mov
add
cwtl
xor
push
adc
push
std
jb
push
mov
mov
push
pop
sbb
sub
push
adc
and
mov
fisubrl
fsub
inc
mov
push
adc
mov
adc
adc
mov
adc
add
loopne
jg
lcall
jecxz
add
mov
sahf
popf
or
ficoms
int3
fwait
pop
adc
enter
adc
pusha
adc
adc
rcr
push
cmc
cld
lea
push
fcomps
loope
ret
pushf
pusha
add
es
cwtl
and
test
adc
daa
cs
xor
adc
imul
movb
nop
sub
pop
inc
mov
fs
xchg
push
mov
jmp
aam
push
adc
jae
pop
pushf
nop
pop
pop
inc
lret
je
fistps
sarb
leave
cwtl
loop
jne
jo
addr16
loopne
loope
jnp
mov
mov
jnp
sub
into
xchg
push
repnz
test
in
insl
insl
push
push
and
test
frstor
and
out
dec
or
mov
psllw
pop
xor
push
xchg
fucomi
bound
data16
cmpsl
cmp
pusha
inc
inc
mov
out
push
test
mov
repnz
xor
xchg
pop
inc
aam
shll
icebp
inc
cwtl
sbb
sub
jno
jp
fyl2xp1
adc
adc
das
insb
dec
popa
loop
jmp
sbb
and
adc
and
out
cmpl
adc
mov
cmc
sub
fisubrs
jp
sbbl
aam
nop
stc
xor
out
call
cmp
outsl
or
push
adc
in
xor
xor
js
dec
idivb
aas
aad
inc
hlt
fildl
cmc
mov
fs
add
lds
lods
jecxz
jae
into
lea
arpl
inc
jns
add
cwtl
adc
adc
sbb
pushl
int
jl
adc
push
adc
stos
movl
push
sub
mov
popa
fwait
push
or
and
cwtl
adc
mov
cld
sub
cli
jl
pop
adc
lds
call
dec
inc
xor
mov
ret
mov
das
pop
mov
xchg
add
rorl
add
xchg
mov
add
ss
cmp
roll
mov
orb
adc
sub
push
das
pop
sbb
rcll
out
aad
subl
les
jle
xor
dec
pop
sahf
jb
push
ljmp
pushf
loope
xor
xor
je
add
mov
ljmp
call
push
aaa
into
popf
rclb
les
pop
int
aam
add
lea
icebp
test
dec
fimull
xor
xor
fcom
jnp
shlb
decb
mov
jge,pt
xchg
fcmovbe
mov
popf
cmp
pop
popa
mov
decl
inc
adc
loopne
cmp
rcl
mov
pusha
sub
add
push
mov
stc
imul
lds
test
imul
mov
xor
push
inc
add
add
dec
push
cmpsl
imul
test
and
inc
iret
sbbb
test
cmp
dec
jae
cmp
sti
jmp
popa
cld
xor
femms
push
into
daa
xor
es
xchg
push
rclb
cmp
push
in
push
or
mov
add
lret
jb
add
xchg
mov
es
mov
adc
xlat
jne
repnz
jecxz
mov
pop
das
iret
in
xor
daa
push
adc
ret
in
out
inc
push
mov
adc
rclw
fwait
jl
daa
push
adc
js
outsb
jecxz
adc
clc
js
push
push
jb
das
jo
int
ficomps
jmp
sub
inc
test
pop
mov
std
mov
mov
cmpb
mov
cmpsb
cmp
in
cmp
in
daa
push
adc
enter
adc
push
adc
add
sahf
pop
pop
int
lock
cmp
push
sbb
push
int
int3
mov
movsb
pushf
jnp
push
push
push
xchg
jl
cs
sub
arpl
fstps
push
faddl
dec
lahf
cmp
orb
push
adc
add
pop
fsubrs
or
andb
jg
adc
adc
addl
xor
ljmp
pop
mov
mov
cld
jnp
inc
loope
shrb
cwtl
cmp
adc
shrb
add
push
inc
arpl
stos
jo
pop
adc
jno
ss
jmp
fldt
filds
callw
adc
icebp
xor
pop
das
pop
cltd
ljmp
push
adc
or
lods
jecxz
inc
repz
xchg
sbb
xlat
fsubp
and
jp
adc
mov
adc
sbb
cs
mov
jo
rolb
adc
arpl
jno
imul
xchg
mov
in
test
out
sbb
hlt
sub
cmp
push
adc
jle
data16
push
adc
std
xor
adc
dec
xchg
push
out
imul
sbb
fwait
aam
pop
adc
test
fdivrs
jle
jmp
rolb
sarb
mov
aaa
jnp
jg
daa
push
adc
dec
rorb
cmc
or
sub
mov
sub
cmc
call
adc
out
pushf
xor
pop
mov
inc
roll
sub
repz
jl
jecxz
clc
mov
lret
gs
sbb
push
outsl
or
rcrb
ds
or
xor
cmp
sub
add
add
idivb
inc
mov
push
aaa
inc
int3
popf
mov
pop
or
imul
adc
add
push
adc
int3
popl
lods
mov
pop
pop
aad
mov
adc
cs
mov
mov
sbb
popf
jne
ljmp
lret
or
pop
shlb
xchg
mov
pop
mov
cmp
mov
aad
or
in
imul
movsb
xchg
push
inc
pop
push
imul
xchg
push
test
pop
inc
push
mov
jle
je
mov
xchg
mov
int
xor
ja
rcrl
aam
push
mov
movsb
sbb
jge
loopne
adcb
popf
pop
adc
dec
mov
aam
or
jmp
popf
out
addr16
nopl
in
ficomps
push
inc
push
xor
push
adc
loop
mov
test
mov
sub
adc
stos
outsb
cwtl
pop
mov
orb
in
aad
xor
adc
pop
adc
xor
xchg
sub
iret
sbbb
mov
testb
mov
xchg
add
lcall
sar
adc
adc
gs
stos
outsb
out
mov
movsl
movsb
jmp
inc
mov
fsubrs
imul
insb
push
sbb
call
scas
or
adc
sbb
pop
adc
fbld
sahf
pop
adc
aam
mov
sbb
pop
ljmp
inc
pop
adc
fdivr
aad
dec
dec
xchg
xor
dec
arpl
lods
inc
dec
enter
sub
das
in
pop
mov
pop
adc
sub
imul
dec
mov
aad
inc
pop
adc
push
daa
imul
mov
lret
iret
js
mov
pop
adc
imul
cmp
data16
sbb
adc
jne
stos
xchg
pop
xor
popf
pop
adc
pop
movsb
aad
rcrb
movb
and
jb
xchg
stc
fcompl
int
pop
push
lock
sbb
leave
adc
fcoml
adc
outsl
jae
sub
xlat
pushf
out
outsl
fsubp
cmp
into
pop
ds
lock
push
pop
out
dec
leave
ficoms
int
stos
roll
movsb
aas
std
aad
xchg
iret
sub
out
cmp
sub
int
es
push
cltd
xor
call
pop
stc
int
inc
adc
mov
movsl
or
dec
or
in
pop
adc
dec
push
ret
fs
pop
adc
test
fmull
fidivrs
pop
jne
inc
pop
adc
dec
mov
jmp
mov
stos
movsl
xchg
xchg
aas
cmp
ror
out
or
xchg
in
iret
enter
mov
pop
push
inc
das
sub
sahf
pop
adc
and
mov
xlat
sbb
add
mov
pop
adc
or
adc
adc
adc
xor
inc
outsl
inc
add
pop
push
sbb
add
add
cmpsl
pop
scas
fdivrl
push
jo
pop
adc
lds
shrb
dec
push
and
jb
lcall
adc
mov
enter
outsl
add
add
out
movsb
adc
pmullw
pop
adc
sub
pop
pop
adc
pushf
cmp
add
push
adc
adc
pop
enter
cmp
addr16
mov
nop
enter
pop
pop
adc
add
pop
movsb
push
aaa
pmuludq
mov
jg
movsl
or
jo
inc
aad
addr16
jl
cmp
pusha
and
fmull
inc
mov
push
lret
xchg
or
std
fmuls
pop
pushf
mov
scas
mov
sti
jnp
enter
pop
or
mov
enter
pop
in
call
pop
adc
adc
adc
or
sub
xor
mov
pop
pop
adc
enter
add
cld
adc
adc
adc
pop
jle
enter
jns
shlb
push
adc
aam
lock
adc
adc
sbb
call
adc
adc
pop
call
adc
jbe
push
jae
push
mov
ja
fistl
sti
test
mov
movhps
pop
xchg
jge
sub
push
adc
les
push
adc
push
push
xchg
mov
adc
adc
jnp
xor
adc
adc
push
lahf
add
mov
dec
pop
adc
push
add
lret
cwtl
imul
or
pop
inc
ret
jg
data16
test
imul
je
mov
cltd
nop
stos
dec
mov
add
stos
je
loop
lcall
cli
fwait
addl
jae
push
loop
in
es
adc
lds
fsts
rolb
push
adc
jb
addr16
stos
loop
dec
std
in
lods
sbb
cli
sbb
scas
push
and
mov
es
adc
cmp
pop
fs
jno
dec
dec
dec
out
dec
dec
sbb
nop
push
mov
leave
movl
jne
push
cmp
addb
pusha
jle
mov
fiadds
pusha
les
mov
pop
cs
push
adc
cmpsl
iret
pop
pop
jo
jb
ret
call
xor
xor
pop
out
xorb
call
pop
and
jmp
mov
in
fisttpll
movsl
pushf
inc
sbb
cltd
jge
lahf
int
arpl
mov
push
ror
mov
movsl
xor
mov
mov
orl
adc
fs
insb
fs
mov
lods
push
shlb
cld
push
push
fs
pop
adc
sti
loop
sahf
pop
int
dec
aam
pop
adc
and
sarl
in
loopne
leave
xchg
rolb
cs
xchg
cltd
inc
pop
or
adc
fwait
xchg
and
jge
lret
jo
push
pop
mov
pop
adc
wrmsr
or
cltd
icebp
inc
hlt
inc
pop
adc
add
cmp
push
adc
orb
mov
or
add
int
lret
sahf
xchg
and
cmp
xchg
pusha
stc
sub
sbb
pop
bound
pop
cmpl
cmp
lret
pop
xchg
xor
xor
fstps
sbb
sbb
push
pop
lock
jmp
cmp
movsl
sub
stc
sbb
icebp
jo
pop
adc
add
xchg
pushf
ret
int
out
mov
call
hlt
adc
adc
sub
push
jecxz
subb
inc
imul
sbb
hlt
add
aad
adc
adc
fadd
dec
daa
push
adc
adc
pop
adc
pop
lds
imul
jle
inc
xchg
or
mov
jno
cmpsb
jns
je
cmp
enter
lds
mov
inc
xor
jle
pop
call
seto
mov
rclb
mov
mov
mov
pop
sub
xchg
hlt
call
pop
adc
je
cmp
popa
lds
call
jp
loopne
jmp
or
ja
cmp
pop
xor
mov
xchg
pop
inc
addb
jne
mov
decl
lea
sbb
repnz
xchg
sar
in
pop
pop
adc
mov
das
dec
loopne
incl
das
pop
mov
adcb
mulb
jne
aam
shlb
test
or
das
mov
adc
or
push
adc
mov
xor
push
js
jg
push
push
ljmp
je
pop
aam
adc
adc
xor
rol
dec
shlb
or
mov
inc
daa
push
adc
psrlq
and
mov
adc
push
les
push
adc
or
add
inc
lea
lahf
iret
push
adc
push
adc
nop
dec
mov
cld
pop
pop
adc
xor
push
pop
adc
add
add
add
sbb
adc
xor
dec
pop
pop
adc
rclb
sti
push
push
out
sbbl
lods
mov
aam
adc
push
dec
dec
adc
adc
adc
enter
clc
jecxz
and
jno
call
mov
or
outsb
add
scas
imul
push
adc
xchg
pop
adc
pop
pop
adc
lret
add
adc
lock
pop
adc
sub
xchg
push
add
mov
push
inc
push
ret
pop
adc
sbb
pop
mov
lahf
mov
sbb
xchg
cmpsl
or
mov
lods
test
ficoms
lret
cmp
pop
dec
dec
inc
repz
xchg
inc
mov
std
subl
ficomps
mov
insb
xor
mov
mov
call
push
dec
jmp
push
adc
cmpsl
int3
mov
nop
push
jecxz
in
scas
sub
sbb
push
adc
hlt
test
arpl
push
adc
in
mov
adc
adc
es
dec
xor
pop
push
adc
popf
pop
adc
movsl
icebp
in
mov
cltd
jmp
xor
ret
out
lret
stos
stc
and
arpl
sbb
call
xchg
mov
rcll
nop
and
loope
test
inc
cmpl
ret
add
mov
and
add
xchg
mov
add
jmp
shll
xor
out
loope
add
cmpl
roll
adc
adc
dec
pop
pop
adc
mov
fadd
lods
test
fs
ss
aas
ds
pop
pop
adc
jo
dec
nop
or
cmpsb
js
dec
pop
pop
adc
push
pop
pop
adc
pop
xchg
mov
mov
jb
and
push
shrb
decl
rcl
xchg
push
xor
loop
or
adc
adc
fisttpll
clc
inc
pop
adc
call
sti
cmp
dec
rcr
lret
sub
ss
mov
push
inc
pop
adc
adc
stos
fs
inc
pop
adc
loope
adc
adc
dec
mov
adc
adc
lcall
inc
mov
call
push
adc
clc
adc
adc
push
adc
push
adc
pop
loop
pushf
imul
std
xor
pop
adc
pop
ds
ss
jne
jb
das
and
add
inc
xchg
hlt
pushf
sbb
adc
adc
das
pop
adc
push
push
std
roll
xchg
pop
shr
jbe
shll
int
jne
sbbl
cmp
pop
mov
pop
pop
adc
aaa
test
jge
ljmp
pop
adc
pop
cmp
adc
pop
xor
jge
sahf
mov
test
pop
pop
adc
or
adcb
fnstcw
sahf
stos
jl
mov
inc
sbb
mov
das
lock
adc
mov
shlb
mov
adc
jge
outsl
clc
rclb
adc
push
push
mov
rorb
push
adc
inc
jge
test
mov
push
das
pop
adc
mov
orb
jge
jl
hlt
jmp
pop
adc
push
adc
imul
fwait
xor
arpl
pop
pop
adc
xor
movsl
push
sub
js
pop
adc
rorb
push
adc
repz
xchg
xchg
adc
adc
mov
andb
hlt
pop
pop
adc
adc
adc
adc
pop
hlt
fsubl
push
jbe
idiv
pop
pop
adc
fimuls
mov
lock
popf
scas
sub
stos
adc
push
int3
pop
pop
adc
lds
sub
push
adc
jae
fisttpll
lea
and
jb
divl
mov
push
stos
pop
mov
mov
data16
dec
nop
sbb
popl
mov
xor
push
adc
pop
lods
in
fsub
dec
mov
push
adc
mov
or
push
adc
adc
dec
ds
xor
inc
cmpl
xchg
pop
adc
adc
cltd
push
cwtl
sbb
push
adcb
adc
push
out
sbb
pop
xor
pop
fsub
repnz
pop
rorl
insb
lods
cmp
cmp
les
push
adc
mov
lret
scas
adc
stc
clc
cld
insl
popa
mov
and
push
xor
rcl
pop
adc
out
movsl
in
inc
mov
jl
push
sub
or
push
jae
mov
mov
adc
jle
out
das
insl
cmpsl
xor
addr16
outsl
sub
ret
daa
push
arpl
xchg
jo
addl
adc
push
leave
leave
outsb
fucomp
ret
fsubp
jecxz
in
pop
pop
adc
xor
pop
mov
sub
dec
fimull
test
inc
leave
lahf
adc
js
pop
adc
sub
jb
cli
add
push
adc
mov
sbb
int
sub
aam
pop
adc
int
jnp
sub
cmp
or
in
pop
pop
adc
xorb
adc
lods
jbe
leave
dec
in
xchg
jno
cs
and
lods
jecxz
loope
mov
out
cmpl
adcb
lods
std
fs
mov
test
dec
mov
das
sub
pop
adc
sub
pop
ja
out
das
jl
push
adc
cmp
mov
dec
add
and
jge
test
xchg
mov
dec
mov
test
shlb
adc
or
test
cmc
cmp
cmp
and
je
dec
sbb
lods
shrb
scas
jl
or
inc
into
mov
movsb
adc
rcrb
push
adc
mov
cld
cli
arpl
adc
mov
push
dec
jb
mov
jge
mov
cmp
mov
adc
cwtl
call
adc
adc
fwait
push
and
rclb
dec
push
pop
inc
inc
xor
push
adc
test
or
mov
adc
test
pushl
push
sub
adc
inc
adc
adc
dec
pushf
cmp
sub
adc
jo
add
adc
mov
repnz
mov
cli
mov
gs
inc
mov
cmp
out
cmc
jne
aas
jge
pop
call
or
mov
adc
outsl
or
ror
xchg
pop
stos
sbbl
mov
xor
mov
insb
cs
mov
std
cli
rclb
pusha
push
jge,pt
xchg
bound
lds
jg
movl
jne
jl
hlt
sahf
mov
inc
sbb
std
inc
inc
add
shlb
dec
paddusw
jmp
imul
pop
push
xor
push
adc
mov
stos
jl
dec
in
mov
jecxz
int3
popa
cld
sub
cmpsb
push
xchg
add
out
into
subb
jge
scas
outsl
inc
pusha
stc
imul
jnp
lret
adc
sbb
pop
and
out
imul
add
lock
and
pop
push
mov
sti
testl
stos
dec
mov
sbb
mov
push
xchg
jg
dec
push
dec
test
adc
fnstenv
ret
push
adc
sbb
adc
cmp
xchg
push
sarb
inc
sub
mov
xchg
outsl
stos
and
push
adc
cmp
mov
movsl
movsl
movsb
fnclex
mov
cmpsb
inc
add
cmp
push
adc
fstpt
push
adc
mov
dec
inc
dec
mov
jo
pop
adc
sub
pop
mov
or
sbb
imul
jmp
insb
loope
in
mov
xor
add
rcrb
jmp
les
lahf
in
sbb
mov
mov
shrl
dec
jbe
loope
sahf
mov
push
je
in
xchg
dec
jecxz
mov
mov
cli
sarb
mov
sub
adc
pop
bound
jno
test
adc
adc
dec
mov
push
mov
imul
mov
lret
clc
pushf
sub
adc
repz
xchg
nop
and
sub
push
adc
jecxz
cmp
mov
add
dec
pop
inc
adcl
xchg
sbb
imul
jmp
and
sbb
es
stos
in
add
xchg
mov
xor
jb
push
fistpl
mov
lcall
jae
fimuls
das
mov
loopne
iret
in
jns
mov
adc
xor
mov
and
push
adc
sahf
das
xor
dec
rclb
mov
data16
sti
pop
mov
test
jl
push
adc
imul
fnstcw
adc
mov
test
pusha
and
cld
pushf
adc
sbb
pop
pusha
jne
es
scas
push
cmpsl
repnz
bound
xchg
movsl
stos
pop
sub
add
insl
icebp
loop
mov
enter
push
cld
push
arpl
clc
xor
pop
gs
cwtl
jp
xor
sbb
lods
push
jns
cmp
pop
negl
and
sub
adc
cld
pop
lds
push
adc
je
cli
push
sub
push
adc
sbb
push
adc
cmc
jne,pt
shrb
add
push
xchg
adc
adc
jne
icebp
addb
and
js
cmp
repz
add
or
pop
inc
inc
pop
mov
dec
xor
lods
fcoms
push
adc
leave
std
mov
test
add
pop
jl
inc
insl
in
push
adc
sahf
jae
rcrl
je
shl
int
adcb
inc
fwait
inc
js
loope
pmaddwd
adc
adc
mov
ljmp
mov
xchg
into
mov
divl
pop
rcrl
xor
stos
and
and
inc
cmpb
lea
jns
mov
loopne
cmovo
jno
cmc
pop
arpl
addb
jne
xchg
xor
movsb
xchg
xor
or
in
and
mov
sbb
rcrl
aad
or
mov
cld
cmp
icebp
call
popl
xchg
xlat
push
int
addr16
nop
dec
jle
pop
in
sarb
or
jge
mov
xchg
rcll
arpl
fcmovbe
adc
adc
in
adc
adc
inc
mov
sbb
cmp
cmc
pusha
movsb
mov
sbb
scas
push
mov
nop
push
mulb
mov
cmp
nop
adc
adc
les
push
adc
xchg
mov
add
daa
mov
xor
xchg
fistps
sub
pop
inc
inc
mov
or
ja
loopne
sahf
sbb
loop
add
je
jne
popf
scas
cmp
call
adc
out
or
sti
jecxz
cld
and
jecxz
dec
mov
add
xchg
pop
and
cmp
jae
inc
xor
push
adc
cli
shlb
mov
dec
ret
mov
mov
adc
sbb
add
xchg
sub
sbb
dec
pop
jp
mov
xlat
sub
hlt
pop
cs
mov
loopne
shlb
enter
rcr
lcall
hlt
inc
sbb
push
adc
lock
pop
adc
adc
movsl
lock
pop
adc
pop
movsl
mov
dec
pushf
mov
adc
adc
xor
push
adc
ljmp
stos
outsb
pop
ds
push
out
lock
sub
aad
cmp
in
lahf
push
and
in
imul
scas
outsl
sub
ljmp
dec
ret
adc
sbb
and
rclb
sub
arpl
cmp
les
jno
xchg
jb
inc
jecxz
out
mov
cmp
sbb
daa
test
imul
dec
xchg
push
pop
push
pop
lea
loope
xchg
jp
jmp
xchg
nop
movsb
jb
mov
ljmp
int
push
or
pop
adc
int
jb
pop
push
push
sahf
sub
mov
or
pop
sbb
jae
es
adc
movsl
xchg
and
mov
shll
add
mov
mov
or
sub
adc
das
test
cltd
fnstsw
lods
es
adc
movsb
decb
movsl
jmp
add
lds
pop
xchg
pcmpgtd
sub
xchg
and
fwait
xor
cs
sub
jmp
jecxz
or
push
adc
hlt
fstpl
cwtl
adc
adc
cmp
pop
and
sbb
sbb
mov
jg
or
jno
push
mov
jmp
repnz
mov
inc
in
cmp
lock
adc
call
addr16
lods
sbb
dec
pop
pop
adc
adc
shlb
rcrb
xor
push
adc
xor
fwait
pop
adc
int3
fwait
pop
adc
pusha
adc
adc
mov
mov
cmp
ja
pop
inc
inc
pop
out
adc
mov
addb
ss
dec
lds
loope
dec
push
js
lcall
mov
call
adc
imul
push
or
push
adc
daa
mov
cs
mov
add
adc
pop
mov
push
mov
lods
movsb
inc
pop
outsw
pusha
pop
pop
adc
arpl
je
std
push
xchg
cmovae
pop
pop
adc
lret
in
adc
adc
add
or
inc
ret
mov
xchg
push
mov
inc
add
jge
inc
data16
push
adc
dec
pushf
pop
adc
dec
cld
xor
jecxz
mov
loopne
or
pop
inc
js
dec
and
push
jmp
subb
pop
adc
fcoms
push
adc
pop
pop
adc
mov
incl
push
in
xchg
push
add
adc
adc
shl
pop
and
adc
pop
loopne
push
adc
inc
pusha
pop
pop
adc
or
cmp
popf
pusha
or
adc
push
add
adc
adc
cmp
push
pop
jp
inc
add
mov
sub
push
adc
dec
pushf
pop
adc
lea
push
ljmp
mov
aaa
jo
pop
adc
dec
mov
or
pop
pop
adc
pusha
pusha
jp
adc
sub
mov
xchg
cmp
adc
arpl
lahf
lahf
cmp
jecxz
pushf
pop
adc
ret
cltd
jae
enter
in
std
lea
jns
dec
enter
pushw
sahf
mov
push
adc
popf
pop
adc
push
sahf
stos
dec
mov
mov
push
cld
pop
ret
scas
jo
push
adc
sbb
jno
setnp
pusha
jp
adc
in
mov
xchg
mov
mov
push
adc
add
xchg
dec
adc
adc
aam
add
or
adc
adc
inc
clc
lods
bound
loop
fcompl
adc
ficoms
gs
cld
popf
outsl
fsub
cltd
insb
les
push
adc
adc
push
push
adc
mov
lods
mov
pop
push
adc
adc
pop
adc
sarl
jge
lea
adc
adc
mov
mov
xor
sub
xor
in
jae
dec
mov
icebp
cwtl
jb
insw
jae
add
or
cmp
popa
in
or
out
sub
sbb
pop
xor
dec
cmpsb
sbb
adc
adc
icebp
mov
push
sbb
xor
push
adc
sub
ss
pop
imull
ljmp
sahf
mov
popf
add
mov
movsl
and
andl
mov
dec
dec
pop
lock
sbb
adc
adc
jno
mov
mov
inc
dec
pushf
pop
adc
pop
adc
hlt
nop
fwait
js
mov
pop
adc
pop
adc
scas
pop
aam
mov
mov
mov
adc
adc
int
pop
pop
adc
pushf
pop
adc
sub
pushf
adc
adc
pushf
pop
adc
mov
mov
mov
adc
adc
push
xchg
leave
jl
rolb
sbb
shrb
adc
int3
popa
mov
push
lods
imul
adc
adc
sub
test
addr16
dec
mov
addb
fdivr
mov
cmp
jo
incl
mov
push
mov
shlb
xchg
add
shlb
hlt
add
adc
adc
mov
jno
popf
pop
adc
ret
pop
call
mov
or
mov
adc
enter
push
std
rolb
js
mov
push
adc
push
push
jno
dec
pop
arpl
xchg
pusha
adc
adc
ds
jp
adc
adc
pushf
push
mov
push
jl
rcl
or
cmp
jle
movsb
push
mov
mov
dec
sbb
std
pop
jp
fistl
arpl
nop
pushl
cli
jg
and
inc
inc
or
iret
xor
inc
jno
inc
sub
dec
std
push
push
pop
jg
push
push
adc
movsl
cmp
rorl
adc
adc
mov
fisttps
jg
cld
imul
xchg
inc
adc
adc
es
and
or
dec
cld
push
push
push
arpl
push
adc
add
adc
adc
movb
mov
pusha
sub
adc
pop
push
inc
insl
inc
adc
adc
in
decl
pusha
ret
push
dec
lds
dec
pop
adc
ljmp
roll
fstpt
jge
mov
ljmp
and
ret
push
arpl
js
inc
mov
or
push
adc
add
dec
xchg
aad
or
push
adc
cmp
adc
xchg
sbb
mov
sbb
or
xor
push
adc
xchg
sub
out
cld
daa
sahf
test
push
adc
xchg
lea
sbb
jnp
adc
adc
sar
lret
mov
push
vpcmpgtw
pop
rcl
test
daa
mov
cmp
xlat
xor
adc
adc
stos
rorl
hlt
adc
adc
hlt
sub
adc
insb
repz
push
adc
popa
dec
pop
lods
lods
inc
int3
sub
adc
jno
dec
arpl
bound
dec
jne
jne
mov
repnz
mov
sbb
cmpl
adc
or
in
jg
aaa
pop
or
cli
pop
lret
loop
pusha
cli
mov
rcl
pop
xchg
inc
push
mov
and
add
fmuls
test
push
adc
ret
cmpsl
sub
adc
mov
fiadds
dec
push
roll
pop
arpl
jns
push
xchg
ja
pop
call
cmp
in
sub
adc
push
cltd
nop
adc
adc
xchg
scas
insl
adcb
mov
push
adc
pop
in
xchg
adc
inc
inc
jnp
dec
cmp
push
adc
push
adc
mov
orl
pop
ret
into
mov
adc
adc
in
insl
add
test
adc
adc
push
aam
imul
and
adc
adc
sub
adc
sub
adc
sub
in
mov
sub
adc
push
out
pop
test
sub
adc
icebp
cmp
xlat
jo
push
adc
xchg
fidivrs
icebp
push
sbb
adcl
and
cmp
cwtl
mov
jp
imul
nop
add
pop
aas
add
sub
mov
push
aad
cmp
and
roll
ret
cmc
fsub
and
push
loop
pop
mov
mov
adc
cmpsl
mov
test
stos
dec
mov
aam
loope
dec
cmp
dec
stc
sbb
imulb
fists
subb
adc
and
nop
adc
adc
push
xchg
cli
pop
mov
add
push
adc
or
push
adc
insl
inc
ss
or
jle
inc
outsl
dec
pop
dec
mov
into
pop
cmc
pusha
add
add
sbb
das
pop
inc
insl
test
push
adc
enter
jmp
push
adc
push
adc
push
inc
or
or
stos
or
sbb
call
adc
adc
jne
std
adc
adc
adc
cmc
lock
orb
fwait
mov
sub
leave
ret
push
mov
nop
adc
adc
repz
rcl
mov
or
out
jmp
push
ljmp
add
push
adc
add
testb
cld
sub
dec
sbb
cwtl
bound
or
push
adc
inc
jne
push
std
or
add
cld
sub
adc
adc
out
mov
int3
mov
sub
mov
dec
pop
adc
stos
adc
pop
mov
clc
push
adc
xchg
icebp
scas
subb
gs
addb
sti
clc
es
aad
pop
mov
add
sbb
pop
ljmp
hlt
add
push
adc
jmp
inc
test
push
or
push
adc
mov
mov
push
pop
cwtl
imul
popf
cmp
ficomps
add
pop
add
push
adc
repnz
jg
cwtl
adc
adc
imul
rol
push
adc
adc
mov
sbb
xchg
push
jnp
lds
sub
sub
test
dec
pop
adc
cmp
repz
mov
clc
push
mov
jle
mov
adc
pop
pop
adc
loop
lods
adc
adc
sub
dec
mov
dec
jecxz
pop
or
call
jle
cmp
push
adc
push
and
jge
inc
nop
daa
dec
je
xchg
daa
push
adc
and
clc
adc
adc
mov
insb
xor
dec
hlt
adc
adc
add
je
mov
sub
or
xor
hlt
mov
fs
adc
adc
jae
cmp
mov
jg
sub
rolb
aas
xor
adc
lods
jo
inc
adc
adc
sub
sub
aad
fadd
jno
xchg
push
fmul
inc
scas
ret
xchg
adc
adc
loopne
inc
pop
adc
mov
sbb
negb
pop
adc
adc
nop
lcall
sti
xor
hlt
daa
push
sub
sbb
adc
adc
nop
lds
inc
push
jae
int3
mov
mov
je
addl
push
adc
ret
push
sahf
jae
gs
iret
ja
add
dec
popa
test
push
adc
jno
in
mov
pop
ss
bound
dec
sbb
jne
or
push
adc
push
lahf
mov
push
adc
js
adc
adc
aaa
cs
bound
and
push
inc
adc
adc
pop
push
fldenv
push
pop
xor
cmpsl
call
cltd
mov
adc
adc
adc
add
jns
inc
mov
jmp
aaa
jb
in
fsubrs
mov
sbbb
orb
fsubrl
in
sub
out
inc
cltd
sub
cmp
cld
cmpl
out
lea
push
adc
push
ja
pop
icebp
pop
inc
jmp
loopne
outsl
scas
das
vmovups
adc
xchg
push
fbld
add
adc
adc
sub
pop
xor
das
out
mov
fisttpl
mov
outsb
dec
mov
pop
test
xchg
and
mov
adc
scas
imul
jo
rcll
sub
adc
adc
jae
pusha
add
addl
repz
jo
pop
adc
cld
xchg
aam
adc
test
das
pop
leave
sbb
mov
jl
cmp
arpl
cs
mov
inc
js
das
aad
jg
adc
push
adc
xchg
and
push
test
pop
filds
xchg
test
and
popa
or
mov
imul
mov
jb
jb
mov
scas
fucomp
sar
sbb
lock
lods
enter
xchg
aad
mov
shlb
pop
cmp
xchg
mov
xchg
cmc
call
clc
or
ljmp
lds
movsl
mov
icebp
push
in
insl
push
ret
iret
loope
sbb
xchg
dec
lahf
cmp
jle
call
insl
or
sub
sub
hlt
add
push
adc
dec
les
ds
push
popl
in
nop
jb
ret
addb
jae
inc
or
pop
das
lret
mov
jge
push
xor
jge
std
push
cmpsl
jmp
pop
mov
rclb
mov
call
push
pop
or
xor
inc
xor
mov
jns
mov
adc
inc
lock
jl,pt
adcl
jns
mov
std
std
inc
sub
adc
or
gs
aam
in
es
adc
jnp
cli
aas
les
aad
cld
lea
push
inc
jl
jno
cmp
sub
outsb
jae
je
pop
pop
arpl
push
jecxz
mov
add
fistpll
adc
adc
daa
mov
insl
push
pop
xchg
movsl
int
mov
in
loop
dec
push
push
fstpt
or
imul
sub
push
adc
cmpsb
cmp
sbb
push
adc
not
fld
jbe
outsb
loopne
xor
push
xlat
xor
adc
adc
call
dec
jne
fwait
ss
pop
pop
pop
jo
pop
adc
add
push
popa
mov
pop
in
mov
mov
shll
or
mov
jle
fnsave
jno
lods
ficomps
pusha
in
cmp
repz
test
sub
lods
jmp
mov
pop
jo
sub
cmpsl
imul
jp
sub
out
adc
adc
arpl
cmpsb
cmp
push
mov
fildll
out
push
inc
jb
out
dec
cmp
pop
pop
hlt
cmp
lock
ficoms
xor
lock
mov
push
sub
das
mov
ja
cmc
jne
mov
mov
ror
inc
pop
bound
inc
mov
jae
fwait
es
adc
adc
scas
adc
dec
dec
outsl
cmp
shll
xchg
push
and
test
cld
loope
les
push
adc
xchg
out
jbe
inc
sub
adc
mov
cmp
cwtl
adc
adc
push
aad
xchg
repz
sbb
inc
fcomps
push
adc
ljmp
pop
popf
lea
xchg
jae
adc
adc
lds
xor
fimull
jp
movsl
iret
xor
push
adc
xchg
jp
repz
and
pop
ret
mov
inc
push
jns
mov
adc
adc
pop
inc
pop
pop
sub
leave
shll
mov
pop
movsb
sub
jo
push
xorb
imul
pop
adc
es
scas
in
mov
jo
push
adc
adc
adc
lods
fnstsw
mov
mov
add
jnp
adc
adc
sbb
push
adc
repnz
int
push
int
pusha
and
stc
xor
rcrl
adc
lds
nop
or
ja
dec
xchg
scas
push
mov
ljmp
ljmp
sub
int3
jg
and
inc
fdivrs
adc
push
lea
or
roll
push
adc
mov
movsl
fs
add
push
adc
jge
xchg
mov
ja,pt
shl
mov
add
pop
mov
hlt
jecxz
adcb
push
inc
mov
push
pop
mov
add
push
std
adc
push
adc
or
mov
inc
adc
sarl
sti
dec
loope
mov
add
push
sub
lret
jbe
rorl
unpcklps
pop
ljmp
gs
movsb
inc
addb
push
les
and
jp
push
adc
push
sti
popa
int3
popf
mov
in
shll
aad
cli
hlt
xchg
jmp
inc
or
jo
call
sbb
movsl
cmpsl
sub
shlb
mov
movhps
mov
orb
cwtl
fisttpl
mov
inc
jbe
push
gs
add
enter
sti
scas
mov
jnp
loopne
jo
pop
adc
out
int
int
cmp
popa
xchg
pop
jae
lea
inc
jg
clc
clc
repnz
inc
or
arpl
or
sbb
pushf
test
cld
or
push
adc
push
imul
sbb
sysenter
cld
sbb
or
push
adc
sbb
mov
std
std
push
push
out
rcll
repz
or
cmpsb
out
or
pop
and
push
call
cmp
add
push
adc
mov
pop
sub
into
les
push
adc
xchg
out
pop
bound
mov
or
push
cli
mov
jo
pop
adc
dec
std
jecxz
xor
xchg
adc
pop
jo
pop
or
das
pop
cmpsb
shlb
sub
adc
push
lea
stc
pop
adc
adc
cmp
adc
adc
ljmp
fistps
icebp
movsl
in
stos
in
adc
hlt
adc
adc
jns
push
fldenv
fbstp
test
push
adc
test
aaa
rcrb
in
mov
push
adc
insb
lods
sub
jg
enter
push
adc
cmp
std
faddl
insl
addr16
jnp
push
sarl
cmp
push
xchg
fdivrl
popa
aam
mov
hlt
sub
adc
les
loopne
push
adc
jle
jb
int3
sub
adc
adc
cwtl
bnd
es
sti
mov
mov
dec
mov
dec
dec
testb
adc
cmp
push
adc
aas
scas
lods
call
mov
insb
fimuls
gs
outsl
jae
inc
mov
imul
push
outsl
adc
sar
or
lret
test
push
adc
pop
lods
pop
call
mov
arpl
push
mov
cwtl
push
sbb
outsl
insl
insb
aas
xchg
adc
adc
test
subb
adc
push
adc
negl
mov
fcmovu
mov
les
adc
adc
ljmp
fs
push
repnz
ss
or
movsb
adc
adc
inc
mov
adc
adc
adc
leave
hlt
daa
mov
pop
test
inc
lahf
xlat
std
cmp
push
adc
xchg
daa
push
adc
jae
daa
pop
pop
dec
ljmp
das
push
mov
test
sub
jns
sub
adc
ja
sub
push
subb
daa
mov
jo
push
adc
ja
dec
scas
xchg
push
fstpl
cmp
imul
out
test
inc
inc
inc
jnp
fistpl
enter
cltd
cld
push
dec
iret
pop
scas
fdivrl
enter
jg
push
jg
sbb
jge
push
ljmp
add
push
fildll
mov
bnd
rorb
shr
xchg
or
das
add
shl
hlt
mov
bound
arpl
and
inc
movsl
pop
inc
call
loopne
jge
lahf
cld
add
subb
adc
lds
adc
adc
push
lea
hlt
add
adc
adc
mov
xchg
sbb
adc
in
lods
jo
adc
mov
mov
rcl
sbb
cs
inc
data16
push
adc
movsb
test
sar
adc
inc
rorb
adc
adc
or
cs
push
outsl
xor
stos
icebp
sub
and
pop
std
jo
call
adc
pop
cs
cld
in
mov
call
add
enter
sti
scas
mov
jns
loopne
jo
pop
adc
cld
mov
sbb
mov
das
lock
hlt
add
sub
adc
mov
push
adc
push
cli
push
clc
adc
adc
or
divb
pop
pushf
sbb
adc
adc
xchg
add
mov
push
adc
inc
scas
jne
mov
cli
fstpt
pop
push
adc
push
adc
inc
adc
adc
adc
adc
jnp
fwait
imul
sub
js
outsb
stc
add
push
adc
std
ja
adc
ret
inc
jb
jp
xchg
out
mov
in
std
faddl
jmp
sub
add
push
mov
pop
adc
jae
or
out
lds
testl
mov
and
and
add
fcomp
movsb
ds
or
out
loop
add
adc
adc
test
xchg
pop
lcall
jb
jp
adcb
adc
push
cltd
idivb
push
sbb
jecxz
mov
adc
adc
sbb
push
jg
sub
and
mov
sbb
or
cli
in
fwait
add
push
adc
xor
pop
xor
adc
adc
mov
stos
mov
push
loop
les
push
adc
push
aaa
dec
jno
sbb
add
adc
adc
out
mov
cmc
aam
pop
les
pop
ja
rcl
roll
cmp
fmul
lds
test
aad
push
adc
adc
mov
push
fistl
xor
fisubl
ja
cmpsb
aam
bound
push
adc
pop
les
push
adc
fiadds
divl
push
adc
pop
xlat
pop
adc
clc
mov
iret
fcomps
fwait
adc
cmp
scas
outsb
jnp
dec
and
insb
pop
adc
mov
adc
adc
mov
testb
ret
call
adc
cld
insb
pop
adc
movsb
sub
insl
pop
adc
xchg
mov
push
adc
jb
in
inc
testl
mov
pop
fcmovu
mov
sarl
xor
fnstsw
dec
mov
lods
pop
gs
xchg
adc
push
adc
inc
xor
jo
cwtl
mov
mov
fs
cmp
inc
push
cmc
mov
jo
aas
sub
push
adc
arpl
jno
jb
jge
sub
push
sahf
jmp
adc
adc
add
fnstcw
out
scas
add
mov
adc
mov
jno
cmp
cmpsb
rorb
add
push
test
push
adc
xlat
aad
pusha
and
sti
xor
push
outsl
mov
and
push
pusha
lcall
popa
ja
scas
fsubrl
mov
fnsave
sar
movsb
mov
scas
and
xor
push
adc
and
arpl
mov
sub
add
push
jecxz
lods
pop
mov
xchg
jno
dec
pop
ss
insb
movsb
add
add
pop
ja
xchg
lock
push
adc
idivb
jno
testb
sbb
shlb
mov
pop
in
cmc
je
addl
adc
mov
inc
rorb
or
jg
mov
nopl
push
pop
mov
push
pop
mov
add
add
push
add
push
adc
sbb
sub
outsl
dec
jg
sub
sarb
aas
pop
and
mov
cli
fnstsw
cs
adc
fcompl
out
int
mov
adc
pop
add
fcompl
lock
jge
arpl
push
adc
outsl
xchg
popf
lds
addl
arpl
adc
rolb
jae
sahf
in
mov
and
pop
and
push
adc
cld
insb
pop
adc
and
add
insl
pop
adc
mov
mov
push
cli
push
sbb
push
adc
mov
in
add
push
scas
and
jp
lret
pop
mov
pop
xchg
cmp
sti
repnz
aas
jl
dec
xor
push
shrl
into
lahf
imul
sub
adc
add
add
mov
adc
pop
mov
sbb
rcrb
adc
lret
pop
add
lahf
outsb
jg
sub
add
sbb
mov
iret
push
sbb
and
addl
dec
data16
push
adc
hlt
and
stos
dec
jmp
imul
dec
out
and
push
adc
aam
sarb
mov
shll
cs
adc
movsl
jo
sar
stos
jle
inc
shrl
adc
cld
pop
jecxz
push
addl
sub
dec
sub
or
mov
imul
lret
daa
mov
cs
jno
call
mov
xor
mov
jne
jno
or
cmp
mov
ffree
sub
in
dec
xor
jle
fistpll
jbe
das
pusha
movsb
sbb
imul
sub
fsubrs
rclb
push
adc
test
cwtl
adc
cmpsl
inc
cmp
push
mov
push
out
gs
and
add
out
cmp
cwtl
xor
or
or
push
adc
or
push
adc
pop
arpl
or
push
adc
jne
push
mov
add
sbb
fidivs
sahf
nop
mov
imul
mov
push
adc
test
and
add
push
adc
test
lea
add
adc
dec
out
mov
insl
aas
nop
mov
movsb
xor
adcb
adc
adcl
push
test
pop
adc
dec
shrl
jmp
or
cwtl
mov
pusha
push
push
adc
xchg
in
in
shlb
cmp
jg
add
out
push
adc
adc
mov
dec
pop
pop
adc
adc
adc
mov
push
adc
pusha
dec
mov
pusha
jp
adc
pop
popf
pop
adc
cmpsl
or
add
xchg
mov
mov
aas
push
pop
std
mov
adc
sub
fisttpll
adc
jb
out
stos
xchg
or
push
adc
pushf
pop
adc
ret
add
aas
push
outsl
push
pop
jo
pop
adc
int3
outsl
jp
mov
xor
add
pop
adc
add
addb
adc
add
mov
stos
pushf
loopne
call
call
mov
mov
pop
xor
arpl
mov
xor
and
push
adc
test
jle
add
mov
adc
in
mov
sub
pop
ja
into
popf
insb
stc
insl
and
mov
sub
pop
lods
lcall
cli
hlt
inc
inc
sub
adc
mov
adc
adc
push
mov
sub
popa
mov
into
movsb
inc
mov
mov
add
dec
sbb
xor
pusha
sbb
jge
mov
mov
inc
and
mov
das
or
sub
hlt
inc
mov
pop
xchg
rcll
inc
jge
xor
pop
ss
lds
pop
and
inc
add
adc
adc
je
std
hlt
call
push
adc
mov
pop
mov
pop
push
pushf
pop
adc
jecxz
loopne
push
shr
rcr
jns
into
cmpsb
xchg
daa
push
adc
mov
adc
adc
push
adc
xchg
hlt
adc
adc
aam
pop
shll
xor
mov
lock
adc
add
add
inc
xchg
adc
adc
test
lock
pop
mov
cld
rorl
or
insb
je
cld
hlt
ljmp
mov
push
or
mov
or
lods
lret
cmpsl
sar
fiadds
mov
push
adc
add
pop
not
movsb
ljmp
ret
mov
pop
pop
ret
loop
stos
and
inc
jno
and
jo
pop
adc
ljmp
push
daa
mov
aas
jmp
call
and
mov
xchg
daa
push
adc
clc
adc
adc
scas
inc
push
test
cmpsb
cmp
jp
mov
adc
pop
hlt
adc
adc
fnstenv
inc
imul
adc
mov
bound
adc
pop
or
jns
pop
xor
loope
adc
adc
xor
pop
fs
mov
dec
out
dec
pushf
jbe
dec
add
xorl
xchg
push
test
cs
arpl
out
data16
or
pop
lret
loop
shrl
ret
fcoms
sub
sub
add
daa
push
fmul
sub
fwait
dec
std
repnz
dec
addb
dec
das
pop
arpl
rcll
jbe
pop
fcoms
loop
pop
push
movsl
pushf
movsb
movsb
rclb
jno
cmpsl
popf
aam
cmc
mov
mov
pop
lds
sahf
in
jp
adcl
mov
stos
stc
pop
add
ret
cmpsb
xchg
in
fs
movsl
addr16
mov
fdiv
lock
adc
xorb
push
xchg
cmc
sti
lret
lret
mov
cs
out
dec
push
sub
mov
sysret
icebp
test
popa
in
xor
pop
jne
in
push
xor
js
pop
or
inc
or
sahf
and
dec
movsl
jnp
cwtl
adc
adc
pop
mov
pop
pop
xchg
mov
mov
cltd
jno
dec
dec
dec
out
push
xor
adc
pop
jae
inc
xor
dec
addr16
push
sbb
jl
lods
sub
popf
cmpb
stos
ljmp
mov
adc
adc
mov
cmp
scas
fbld
cmp
pushf
out
mov
sbb
test
xchg
mov
cld
pop
test
fcomps
shrb
addr16
pop
je
push
xchg
pop
adc
cld
cmp
enter
dec
push
adc
in
or
mov
xlat
jge
scas
mov
lret
nop
adc
adc
push
push
jnp
cs
mov
insl
mov
fcoml
push
adc
jnp
jns
enter
xchg
jge
fcoms
push
adc
xchg
cmc
shrb
adc
mov
push
adc
pop
pushf
adc
adc
inc
insl
hlt
adc
adc
into
arpl
or
and
std
aam
push
adc
sbb
rorb
inc
insl
add
push
adc
dec
xor
pop
mov
mov
int3
enter
add
hlt
add
adc
adc
adc
add
adc
adc
push
adc
sbb
inc
and
pop
pop
push
dec
in
push
mov
or
cld
xlat
mov
lds
int3
fcompl
mov
jb
les
loop
hlt
loopne
roll
mov
pop
pop
mov
pop
sub
dec
addb
idiv
movb
repz
inc
mov
add
int3
popf
cmp
fsubl
test
jo
inc
jl
mov
inc
cli
push
jl
push
adc
sbbb
pop
mov
inc
jp
jp
gs
cmp
out
into
ret
popa
mov
shrb
adc
add
inc
or
daa
cmpsb
sub
repz
add
mov
dec
jno
cwtl
movsl
jp
add
dec
adc
push
ss
fcmovbe
testb
adc
pop
xor
in
inc
mov
out
adc
pop
cmp
sbb
jns
out
mov
pop
and
jbe
mov
movsl
inc
jbe
jo
pop
pop
int
mov
fcoml
popf
pop
mov
in
xchg
mov
mov
add
fiadds
pop
sahf
and
push
mov
insb
xor
scas
and
add
xor
lods
xchg
sbb
xor
pop
adc
sbb
sbb
jne
jnp
fidivrs
inc
adc
pop
mov
stos
inc
inc
je
test
mov
mov
cli
xchg
adc
pop
adc
das
jp
fistps
adc
rcrb
mov
bound
inc
loop
iret
mov
out
sub
lds
in
and
pop
sbb
sub
popf
das
dec
mov
add
jbe
mov
push
adc
push
push
cmpsl
sub
cld
es
push
mov
aam
outsl
stos
xorb
adc
aad
jecxz
and
dec
jbe
cmp
stos
daa
cmpsb
mov
clc
xchg
push
ljmp
out
cmc
ds
or
and
jl
pop
adc
or
testb
adc
xor
testb
adc
and
pusha
out
xchg
jno
jno,pt
dec
fisttps
sarb
sbb
cmc
inc
js
cmpsl
inc
fsubp
sbb
cmp
and
adc
adc
cmc
ds
jle
mov
pop
mov
mov
push
adc
xchg
push
int
jne
pop
adc
jb
sti
xchg
xchg
sub
aaa
fcomp
push
sbb
fcomps
in
mov
cmpsl
and
push
jp
fisubrs
inc
leave
jmp
inc
mov
ljmp
adc
aam
in
sbb
mov
push
inc
lret
sub
loopne
dec
scas
jae
nop
adc
adc
jle
dec
cmpsb
shrl
rcl
rcl
lods
fldt
iret
xchg
xchg
mov
adc
data16
sbb
loopne
fs
test
sub
aas
addr16
and
sub
fstpt
dec
test
test
inc
incl
inc
mov
cld
mov
rclb
adc
jbe
inc
nop
sub
push
shrb
push
adc
sub
fidivrs
std
sub
xchg
out
pop
test
into
popf
sahf
jnp
mov
jg
test
shrb
cmp
in
adc
adc
xchg
adc
adc
sbb
incl
push
add
push
mov
lds
aas
xlat
jle
daa
int
fimull
orb
pop
cmpsl
mov
leave
or
xchg
or
and
add
mov
and
mov
add
outsl
repz
sbb
adc
adc
mov
push
shlb
add
or
adc
push
rol
pop
add
into
sbb
pop
mov
add
mov
inc
lods
or
cs
jnp
out
push
and
adcb
in
scas
shll
dec
std
pop
call
out
es
mov
pop
push
lds
aas
mov
sbbb
or
sahf
mov
xchg
fsubs
xchg
clc
mov
fistpl
lret
enter
adc
dec
aad
pusha
mov
adc
adc
push
jg
arpl
lock
in
out
shll
aam
adc
adc
pushf
outsb
clc
inc
cmc
int
jle
sub
push
or
jo
pop
adc
pop
add
inc
mov
pop
sahf
cmp
mov
add
or
mov
xchg
sar
mov
sahf
add
addr16
push
push
dec
or
adc
pop
inc
or
orl
push
mov
outsl
pusha
sbb
jg
fldt
popl
pop
mov
mov
push
adc
inc
fyl2x
xlat
push
mov
push
mov
repz
push
mov
add
js
adc
in
notb
add
rorl
loope
push
jl
push
sti
pop
sub
out
lock
rorl
pusha
pusha
roll
aam
lret
outsl
push
xlat
pop
shll
xorb
xor
mov
lea
inc
mov
xchg
cltd
mov
dec
dec
inc
pop
adc
adc
xor
sbb
ja
mov
imul
mov
inc
iret
insl
les
pop
adc
mov
insb
lods
pop
xchg
mov
add
sbb
adc
sub
cli
pop
mov
sub
sti
pop
pop
and
mov
push
lret
loop
pop
push
movsl
xor
das
push
adc
jnp
adc
adc
mov
lods
mov
push
int
cmp
jbe
subl
xor
sbb
sbb
sbb
test
insl
popa
test
adc
adc
adc
sbb
out
leave
leave
enter
pop
out
mov
push
adc
xor
sti
mov
lods
jg
sbb
lds
push
ds
das
sete
and
pushl
imul
cmc
test
xchg
mov
and
das
jg
mov
out
pushf
test
jb
adc
or
aas
mov
repnz
or
adc
mov
sbb
or
jecxz
cmp
data16
aas
adc
mov
aaa
cmp
jae
sub
add
add
cs
add
iret
inc
add
push
out
jno
out
pop
xchg
xor
mov
ret
imul
sbb
or
push
adc
out
jecxz,pt
cwtl
adc
adc
decl
pop
adc
adc
adc
lock
adc
shlb
and
hlt
in
clc
jg
addb
fistl
mov
lahf
mov
jae
push
pop
dec
xor
mov
in
repz
push
push
push
push
mov
jg
out
sub
xchg
mov
adc
push
adc
xchg
inc
sbb
pop
das
dec
sahf
sub
cmp
sub
mov
jle
inc
data16
push
adc
das
push
adc
adc
int
pop
jge,pt
dec
iret
jle
outsl
sbb
cs
adc
lods
or
mov
add
jmp
mov
imul
stos
pushf
int3
inc
mov
into
imul
cld
push
push
push
push
cli
jle
rorb
adc
adc
and
xor
outsb
dec
rorl
inc
fsts
hlt
add
push
adc
mov
dec
mov
aas
sbb
pop
int
js
push
scas
clc
hlt
lcall
test
sti
hlt
pushf
in
rcrl
sbb
bound
daa
addb
pop
pop
xchg
jnp
pushf
mov
mov
jecxz
mov
push
adc
sub
adc
pop
adc
popf
jmp
idiv
hlt
bound
mov
xchg
rcrb
das
pop
ret
inc
adc
ret
out
movsb
and
push
mov
sub
mov
cs
inc
hlt
adc
cmp
dec
ja
push
daa
jp
rcr
pop
leave
inc
cmpsl
scas
push
jecxz
xor
ja
dec
lahf
pop
adc
daa
hlt
clc
adc
lahf
call
cmp
pop
adc
adc
das
add
pop
mov
push
mov
sbb
jl
add
pushf
into
cmp
das
addr16
push
out
inc
clc
inc
cmpb
adc
jbe
adc
rclb
shlb
fisubrs
xlat
popf
push
adc
xchg
mov
xchg
cmc
dec
decl
cmc
pop
and
push
push
push
and
add
in
inc
in
loopne
and
mov
add
imul
add
push
lcall
test
sub
int
or
or
inc
jg
mov
cmc
sub
or
mov
outsb
mov
dec
xchg
mov
jle
or
sbb
xor
push
enter
jb
adc
mov
lea
mov
mov
pop
scas
repnz
push
shl
mov
pop
cmp
sub
cli
imul
push
inc
cld
sbb
das
jecxz
das
out
out
xlat
mov
xor
lcall
dec
scas
and
movsb
cmc
dec
dec
inc
arpl
sti
lea
mov
in
mov
outsb
aam
lret
dec
jnp
fwait
jb
lcall
push
jmp
repnz
adc
stos
es
jo
jnp
add
stos
imulb
dec
inc
cmp
mov
test
pop
mov
je
aaa
push
or
or
xchg
mov
scas
jge
out
sahf
test
adc
adc
leave
out
in
hlt
inc
es
cmp
dec
mov
add
adc
xlat
pop
mov
or
pop
ret
movsl
and
lcall
mov
repnz
cmp
mov
xor
xor
dec
mov
xchg
adc
lds
stos
jns
xchg
pop
pop
dec
leave
mov
into
popa
or
pop
adc
loope
adc
adc
sarb
xchg
push
push
inc
adc
lds
mov
shll
pushf
inc
dec
lret
sub
aas
filds
popa
and
sbb
loope
dec
test
and
mov
daa
push
repnz
aaa
scas
fdivrl
repnz
fidivrs
hlt
call
mov
lods
insl
xchg
stc
jo
dec
xorl
add
inc
inc
xor
mov
aam
push
push
mov
loop
mov
xor
ja
mov
ds
and
or
iret
jg
cmpsb
dec
jp
movsb
loope
rclb
inc
movsl
sub
and
hlt
and
jmp
scas
sbb
orb
pop
mov
jno
mov
pushl
std
jo
call
or
ds
pop
fsubrp
or
orb
popa
lds
push
adc
daa
cmovae
adc
adc
mov
es
push
adc
rorl
shlb
out
cmp
pusha
sub
ror
pop
fdivp
call
das
push
adc
push
push
push
push
adc
adc
std
mov
push
push
xor
int
or
out
xchg
test
leave
adc
aad
pop
hlt
imul
push
das
push
adc
das
push
adc
lds
imul
out
lods
inc
xchg
push
test
or
or
arpl
mov
cmp
and
daa
ss
lahf
pop
adc
int3
stc
hlt
jmp
insl
ret
pop
adc
mov
xor
sahf
pop
adc
incl
jg
icebp
inc
cmp
pop
adc
xor
adc
jbe
or
lahf
pop
adc
mov
pop
cltd
fidivl
adc
arpl
mov
cltd
sub
mov
popl
jno
addr16
cmp
sbb
es
mov
cmp
jb
into
add
mov
mov
es
pop
in
and
mov
decb
jmp
cmp
pop
adc
lret
sahf
adc
jle
lods
jae
jp
fxch
daa
cld
mov
xchg
leave
gs
out
data16
loop
std
nop
dec
popa
cmpsl
mov
repz
xchg
push
fnstcw
and
addr16
sub
out
clc
repnz
test
dec
lcall
jne
mov
shrb
cwtl
popf
pop
adc
or
push
sbb
xchg
push
pusha
popf
or
outsl
out
data16
scas
pusha
or
fstps
loop
pop
mov
push
xchg
cmc
mov
xorl
dec
pop
adc
adc
push
adc
xorl
cmpsb
sub
sub
cmpb
push
push
adc
sbb
mov
push
adc
lahf
in
or
cmp
push
loop
insl
stc
fnsave
sub
push
adc
aam
mov
adc
adc
fists
into
sbb
mov
sub
push
adc
popl
js
jns
sbb
ss
sbb
sbb
cmpsl
cmp
sub
das
cmovb
adc
adc
jnp
and
sub
pop
adc
inc
or
gs
inc
cmp
dec
sbb
lods
cs
xchg
cmpsl
and
ret
xor
adc
adc
movsb
das
gs
sbb
push
adc
adc
push
je
pop
fisubs
inc
push
jne
jae
jg
pop
mov
push
sbb
cmp
pop
jge
adc
adc
jg
ss
fidivs
push
adc
lock
mov
dec
pop
adc
daa
dec
mov
push
les
fs
mov
shl
push
adc
jecxz
fisttpll
sub
pop
mov
mov
sbb
js
retw
sbbl
hlt
inc
pop
adc
cs
cmp
sbb
pop
adc
aad
adc
adc
jp
les
push
adc
insl
inc
ja
pop
jo
pop
dec
ljmp
addb
push
adc
icebp
mov
cli
mov
pop
xor
aas
sahf
adc
add
pushf
mov
adc
cmp
adc
in
dec
pop
mov
cwtl
popf
pop
adc
jle
inc
mov
mov
xchg
pop
jns
ljmp
out
jno
jbe
rolb
jo
pop
adc
mov
js
shll
orb
addb
mov
add
lds
std
mov
stos
test
cmp
jno
add
xchg
sbbl
and
jae
rorb
lret
jecxz
shlb
jge,pt
int
push
cmp
mov
cmp
mov
lret
sub
xchg
repnz
or
jecxz
shll
dec
jg
sbb
outsl
decl
call
loopne
shr
in
push
sub
cmp
sbb
adc
xchg
adc
add
mov
imul
shlb
test
hlt
xchg
ljmp
lds
push
mov
jl
in
xchg
hlt
jmp
sub
push
rclb
ret
shlb
pop
es
jl
jecxz
cmpl
pusha
cmp
pop
daa
mov
decl
or
lock
cmp
loop
and
jl
add
movsl
inc
test
mov
cli
push
cli
cmp
in
add
xchg
mov
cmpsl
int
lock
cmpsb
rcll
mov
or
xor
mov
push
mov
push
mov
addr16
fadds
cmp
xchg
out
add
push
adc
stos
idivb
jo
loop
push
call
mov
mov
push
das
sub
insb
std
add
push
sub
lcall
movsb
cmp
lahf
shl
mov
push
mov
mov
mov
shr
lahf
shrl
pop
push
mov
js
jle
clc
cmpsb
fwait
jmp
inc
movsb
cmp
ficoms
stos
mov
lret
jns
mov
ss
sub
or
jae
aaa
aad
adc
inc
add
cmp
std
shlb
std
filds
pop
xchg
ljmp
rcll
cmp
lea
jo
pop
adc
sbb
pop
adc
adcl
cmpsb
lock
dec
pop
pop
adc
pop
mov
xlat
lds
push
inc
xchg
fwait
movsl
popf
in
in
lcall
popf
inc
jl
test
lret
shll
xorl
lock
data16
jg
test
outsb
sub
push
enter
ss
sbb
and
bnd
and
shll
cmp
cmpb
icebp
mov
cmpsb
test
out
lods
xchg
cmp
ljmp
iret
add
outsb
inc
lret
hlt
dec
xchg
daa
mov
pop
aad
fstpl
aas
lock
cmp
dec
dec
sarl
in
cmp
scas
dec
inc
pop
push
fisttps
fiadds
iret
cwtl
repnz
in
pop
pop
lret
lret
movsl
lods
mov
test
sub
iret
mov
or
push
stos
push
lods
mov
jb
sbb
out
lods
das
mov
dec
mov
stos
in
fdivl
cmp
es
add
sub
cltd
lock
pop
adc
pop
sub
cli
adc
mov
lods
mov
adc
push
inc
cmc
loop
fcoms
push
iret
or
mov
xor
push
ror
push
sub
fbstp
jb
adc
out
addl
fwait
pushf
mov
shrb
inc
test
pop
adc
js
jbe
mov
push
jg
clc
adc
adc
call
mov
pop
adc
outsw
mov
popf
lret
push
cmp
push
or
dec
iret
test
or
mov
and
jb
adc
push
in
data16
shlb
jge,pt
pop
inc
inc
pop
mov
sbb
push
adc
pop
adc
inc
jg
test
pop
lds
pop
inc
sbb
pop
adc
or
pop
adc
or
pop
clc
adc
adc
sbb
pop
adc
mov
pushf
pop
adc
adc
leave
lea
add
add
scas
and
loopne
inc
lea
or
pop
adc
add
addb
in
movb
pop
mov
pop
adc
xchg
or
cmp
and
push
add
add
rolb
mov
push
and
fwait
sbbl
push
adc
adc
mov
pop
adc
push
add
push
adc
push
pushf
pop
adc
push
add
add
pop
das
push
out
adc
loopne
cmp
popf
xlat
inc
jge
insl
popf
cmp
les
clc
push
or
adc
cltd
pop
adc
ljmp
dec
aas
jbe
subb
cmpsb
push
std
push
add
push
adc
add
pop
adc
add
or
sub
enter
lret
push
jno
lds
aas
cld
jnp
and
adc
adc
addr16
lds
pop
adc
push
jg
push
mov
add
sub
adc
sahf
rclb
adc
fcmovnu
xor
nop
aaa
xchg
add
dec
movsl
outsb
out
aas
test
sub
adc
xor
dec
popa
test
les
fcmovnb
push
cs
adc
mov
dec
test
sbb
cmp
fidivl
sub
and
daa
idivb
addr16
ds
rol
or
add
and
cmp
xchg
popf
dec
or
mov
aam
sub
sbb
dec
jecxz
jnp
cmpl
cs
pop
pop
pop
mov
xor
lret
or
pop
mov
sub
sub
sub
xor
lcall
lds
out
pop
sub
jae
fnstenv
cs
mov
xor
push
adc
hlt
addr16
push
push
push
lcall
pop
bound
push
data16
lods
add
adc
pop
xchg
push
push
pop
cmp
fs
mov
adc
cld
adc
adc
leave
cltd
nop
and
jg
adc
adc
mov
pusha
leave
add
or
adc
adc
pop
adc
shll
or
out
ret
ljmp
jp
fists
popf
lea
cmpsl
shlb
js
scas
mov
iret
cmc
pop
xor
fcmovnu
fcom
push
pop
hlt
test
scas
ljmp
mov
push
adc
nop
adc
adc
xor
dec
inc
repz
xor
jg
jbe
insb
shll
or
mov
pop
addr16
outsb
cmp
sub
in
sahf
jae
mov
adc
insl
scas
das
lods
add
push
adc
jmp
add
xor
xchg
fs
xchg
ds
push
loopne
push
call
loop
repnz
movsb
aas
cmp
ljmp
inc
sub
adc
dec
lock
pop
jle
subl
push
push
push
push
push
mov
pusha
js
dec
jbe
rcll
shl
into
popf
push
jo
shlb
std
push
arpl
jne
adc
adc
arpl
popf
cmp
jb
jg
lea
push
jmp
nop
push
test
mov
arpl
bound
mov
ljmp
cs
adc
jecxz
shlb
fs
int
js
std
mulb
xchg
insl
jl
clc
hlt
call
mov
adc
add
jb
mov
mov
pop
nop
js
call
imul
mov
push
adc
mov
ljmp
push
adc
fucomp
fwait
in
mov
xor
push
jmp
add
call
pop
adc
xchg
rclb
adc
and
dec
std
xor
mov
sar
cli
cmp
imul
dec
iret
roll
popf
sbb
cmc
subb
adc
in
cli
xchg
mov
in
cli
shll
shr
add
mov
jmp
push
cs
adc
repnz
xchg
aas
aaa
test
imul
mov
and
enter
cld
mov
rcrb
dec
fmul
nop
pop
mov
lahf
cmp
jg
pop
cwtl
mov
mov
rcll
js
out
mov
mov
push
adc
pusha
sbb
les
push
adc
mov
dec
sbb
js
lods
add
inc
int3
subb
adc
outsl
addb
push
add
sbb
cli
mov
test
add
mov
xor
arpl
jecxz
and
inc
sbb
dec
fists
mov
scas
xor
or
xor
lds
cltd
push
out
fsubrs
mov
cs
ljmp
pop
shlb
cmpsb
cmp
jmp
movsl
std
mov
adc
and
fistps
xor
pop
fwait
addr16
sbb
cmp
lret
mov
sub
js
push
adc
pop
xchg
popa
xchg
aas
xchg
popf
dec
testb
xchg
xor
dec
fdivl
call
push
stos
loopne
lods
shlb
mov
adc
imul
dec
add
ljmp
push
stos
push
iret
pop
and
arpl
lock
push
push
movsb
or
push
cmp
aaa
ja
push
pop
jp
push
mov
addr16
repnz
jle
out
pop
mov
imul
lcall
adc
pop
insl
lcall
fnstenv
out
push
ss
push
xor
enter
popa
adc
xchg
repz
cmp
mov
add
sbb
insb
loope
jle
or
in
jecxz
lds
and
int3
test
out
pop
push
fbstp
rcrl
icebp
mov
sbb
arpl
fidivl
sub
pop
les
aas
fsubrs
push
jne
pop
or
fs
cmpb
sbb
out
ja
dec
in
in
cltd
outsl
stos
pop
bound
fistpll
js
sub
shlb
mov
pop
pop
push
mov
pop
pcmpgtd
push
imul
loope
mov
cmp
test
out
push
fsubrl
adc
jge
push
xchg
dec
mov
lock
lret
add
lea
pop
pop
adc
push
pop
jle
cmp
out
sahf
fmull
push
sub
adc
call
push
lea
xlat
out
cmp
gs
or
fwait
clc
out
dec
in
jne
lret
mov
mov
mov
pushf
bound
mov
shll
xchg
mov
push
or
movl
in
mov
out
out
call
test
arpl
add
pop
pop
push
xorb
ds
inc
cmp
inc
pop
shll
test
pop
adc
push
add
pop
sbbb
std
jo
and
data16
jnp
adcl
lret
int
mov
add
jle
lock
aad
ja
ds
inc
out
inc
mov
popf
repnz
mov
hlt
call
sbb
push
or
cmp
fistps
ret
push
add
push
jo
loopne
add
push
jo
pop
adc
xchg
add
or
das
sarl
orb
shlb
rolb
mov
pop
nop
adc
adc
add
push
hlt
shrb
fdivrl
hlt
call
setns
cmp
stc
int
clc
std
push
dec
call
das
insl
inc
jp
hlt
jmp
adc
shll
fcomps
pop
andb
rolb
mov
jl
pop
jg
xor
sbb
or
mov
cld
add
jg
mov
mov
inc
loopne
sub
cmc
lahf
mov
test
movsb
inc
test
icebp
inc
sbb
adc
adc
adc
outsb
iret
sbbb
pushf
push
lret
jne
test
dec
jl
in
lcall
test
rcrb
inc
sub
cwtl
stc
mov
mov
shlb
int3
imul
sub
adc
xchg
inc
and
xorl
pop
pusha
adc
adc
lret
js
mov
popl
pop
daa
dec
pop
sub
or
pop
mov
push
lret
int3
fwait
pop
adc
fwait
popa
loopne
shll
adc
adc
outsb
cmp
xchg
mov
jne
adc
dec
pop
fsubl
pop
cmp
inc
lret
loop
daa
sub
jmp
jno
sub
sub
mov
pusha
shll
fs
ds
pop
ja
xchg
xchg
dec
xorl
xchg
inc
mov
pop
pop
push
out
xlat
movsl
fcomp
push
adc
scas
pop
and
fiaddl
bound
inc
or
and
lcall
inc
sbb
xchg
jne
add
and
nop
insb
out
mov
jg
ret
test
das
adc
jno
xchg
lcall
fisubs
movzbl
leave
inc
in
bound
stos
mov
ljmp
xor
lahf
data16
sti
push
sbb
dec
pop
adc
cmp
aas
out
aas
mov
dec
scas
imul
or
mov
loopne
mov
jnp
pop
mov
cmp
xor
pop
adc
inc
xor
pop
test
xchg
jno
dec
mov
xor
dec
inc
repz
outsl
call
ficomps
in
adc
push
adc
inc
shll
xchg
cmp
add
xchg
loopne
sub
adc
mov
mov
and
das
das
cs
mov
adc
xlat
mov
adc
pop
lock
mov
cmp
push
adc
push
outsb
sbb
int3
jo
push
jne
or
loopne
xchg
int
cmc
mov
mov
cmp
ret
cmp
adc
or
mov
or
xchg
scas
fists
cmpl
mov
push
jg
and
test
aad
idivb
inc
xchg
inc
mov
pop
and
mov
add
or
xor
sbb
mov
sbb
cmpsb
stc
jnp
xchg
mov
mov
mov
pop
xchg
rcll
fsubrl
push
adc
popa
dec
pusha
mov
inc
test
pop
mov
adc
adc
adc
adc
imul
jg
add
outsl
setp
mov
xchg
fsubrl
push
adc
das
push
pusha
mov
incl
add
add
add
out
shll
in
sub
adc
adc
mov
mov
adc
lds
shrl
mov
bound
arpl
mov
add
or
sub
adc
shrl
mov
out
cmc
in
sub
adc
xor
std
rolb
xchg
hlt
call
hlt
sub
adc
jg
test
das
pop
mov
push
adc
out
daa
cmp
add
mov
hlt
std
push
popa
adc
sub
adc
aaa
mov
jmp
adc
arpl
mov
jg
push
push
in
and
pop
ds
lock
ljmp
pusha
push
sub
adc
mov
repz
movsb
jmp
cmp
sub
push
adc
jl
cmc
inc
sbb
int
sub
adc
aaa
adc
fidivrs
lods
xchg
out
adc
push
adc
adc
mov
sub
adc
pop
popa
or
push
adc
xor
mov
mov
shll
sbb
imul
sub
inc
dec
push
add
push
adc
cmp
pop
rcl
sarl
sub
push
adc
push
jmp
sub
adc
shl
sbb
mov
mov
add
inc
or
adc
ljmp
sub
adc
fwait
ret
int
add
dec
cmp
inc
jns
adc
adc
outsb
mov
pop
or
push
xchg
mov
cmpl
shlb
add
jbe
test
sbb
jp
rcl
shr
dec
push
das
or
adc
insl
add
sub
push
adc
pop
pop
mov
adc
adc
sbb
push
jne
lods
imul
test
adc
ds
out
xchg
in
push
pop
and
push
adc
iret
adc
xor
pop
xchg
jae
mov
das
in
repz
adc
pop
loopne
loope
lds
sahf
nop
ja
out
imul
dec
test
jbe
repnz
mov
fucom
xchg
fidivl
rclb
adc
pop
xchg
add
rclb
cmp
test
ljmp
popf
sbb
xor
cmp
mov
and
rol
cmc
xlat
xor
push
adc
cmp
adc
adc
movsb
sbb
mov
mov
sub
adc
insb
lahf
inc
push
sub
mov
pop
adc
pop
test
out
in
and
test
jne
adc
add
cmp
push
shrb
decl
rcl
push
pop
lret
adc
in
adc
fsubr
lods
sub
ret
mov
push
shll
sub
mov
adc
bound
arpl
sub
mov
lock
test
insl
test
mov
lock
mov
aad
push
mov
add
mov
je
jge
ds
pop
and
pop
sub
push
adc
mulb
cmp
and
push
dec
mov
call
sahf
in
jmp
add
ljmp
mov
push
push
mov
call
add
jge,pt
add
push
adc
call
call
decl
rcl
and
add
js,pt
xor
sbb
stc
loop
pop
jmp
decl
shrb
leave
cmc
jne
xor
stos
addb
sahf
into
imul
jg
lea
mov
or
inc
pop
cmp
std
pop
dec
push
mov
adc
adc
cmpxchg
call
sbb
adc
adc
mov
add
push
adc
add
hlt
pushf
stos
pushf
dec
mov
cmc
sbb
lret
or
cli
pop
call
adc
inc
adc
adc
xor
and
lds
shl
pop
jg
mov
shll
pop
shll
imul
jne
add
movsb
fstpt
pop
les
mov
and
iret
lds
bound
jle
add
add
inc
inc
pop
out
xchg
jl
cmc
mov
sbb
push
mov
dec
addb
mov
addr16
push
sbb
lahf
mov
inc
mov
mov
mov
pusha
sbb
sub
push
adc
out
add
xchg
sbb
push
adc
imul
popf
pop
adc
mov
icebp
call
inc
pop
xor
mov
scas
gs
fadds
popa
xchg
movsl
cs
sbb
push
inc
inc
xchg
lock
scas
in
cmpsb
xchg
push
cmp
push
cli
pop
mov
mov
call
and
das
sub
mov
adcl
lea
mov
and
pop
dec
cs
aam
movsl
hlt
cld
sbb
and
lahf
push
push
mov
mov
sub
push
dec
loop
hlt
inc
repz
add
mov
or
mov
xchg
mov
add
in
aas
aas
loopne
out
or
shr
jmp
popf
cmp
jecxz
xor
add
xchg
fsub
mov
fiadds
jne
adc
and
nop
push
subl
mov
mov
push
sub
mov
lock
fildl
inc
sub
es
mov
jae
xor
out
or
int3
cs
pop
cmp
imul
sti
pop
ds
add
icebp
adc
lods
mov
in
fs
lcall
or
cwtl
and
xchg
pop
sbb
cmp
cmp
and
cmp
test
sbb
enter
mov
fs
adc
cs
adc
push
mov
push
popf
push
mov
dec
fninit
and
rclb
sbbl
pop
pop
int3
fwait
pop
adc
repnz
fwait
pop
adc
adc
loop
dec
xor
mov
adc
adc
push
push
mov
pop
pushf
push
adc
adc
push
cmp
loop
filds
adc
push
add
fisttps
cmp
add
pop
into
add
sub
sbb
jb
add
arpl
mov
out
shll
add
insb
sbb
pusha
icebp
add
pusha
daa
inc
cmp
inc
inc
inc
lods
sub
jl
add
push
adc
lcall
aas
pushl
int3
shlb
nop
clc
jo
test
jge
xor
ja
popf
cmp
push
lea
in
inc
aad
mov
cltd
push
leave
ljmp
jne
mov
das
repz
or
imul
jl
aaa
mov
roll
cli
sbbb
out
addl
je
shrb
imul
jmp
add
lods
addr16
hlt
pushf
call
xor
and
and
jo
pop
adc
dec
or
ja
jl
addr16
cmp
and
mov
movsb
inc
mov
pusha
jp
adc
mov
ret
das
lock
jg
mov
adc
adc
pop
xchg
or
call
lret
ss
push
movsl
mov
ljmp
xor
lea
mov
les
mov
insl
movhps
pop
add
jne
adc
cli
ds
jp
adc
pop
das
xchg
pusha
jp
adc
shrb
call
pop
adc
cmp
flds
sbb
cmc
inc
sub
adc
test
bound
add
sub
pop
adc
and
adc
adc
cmpsl
enter
pop
adc
ljmp
pop
ljmp
inc
pushf
pop
adc
incl
add
ljmp
sub
cltd
in
xchg
ljmp
inc
in
mov
pop
fwait
push
push
inc
push
mov
pop
pop
in
lds
push
mov
and
push
adc
jmp
push
mov
cmp
add
dec
mov
xor
push
adc
mov
aas
enter
pop
cld
adc
xor
decb
jnp
xlat
fldcw
or
push
adc
lock
pop
adc
adc
adc
dec
lea
adc
and
repz
push
adc
sahf
pop
adc
push
adc
pushf
pop
adc
cs
mov
inc
pushf
pop
adc
or
dec
push
inc
bound
pushf
pop
adc
cmp
pop
adc
adc
fists
pop
adc
les
lcall
popf
pop
adc
fwait
stos
and
in
fs
pop
adc
adc
adc
jg
sbb
xor
pop
adc
mov
mov
pushf
pop
adc
icebp
fimuls
ja
or
dec
dec
pop
shrl
pushf
pop
adc
jge
xor
pop
addl
shrb
push
les
rcl
pop
ss
imul
jmp
pop
and
sbb
sbb
push
mov
pop
cwtl
popf
pop
adc
cmp
or
cmp
xchg
int3
cmpsl
jnp
dec
aam
mov
loope
out
xchg
inc
test
lods
jmp
push
loopne
xor
icebp
jecxz
movsl
and
push
fs
dec
shll
pop
out
xchg
mov
mov
jmp
xor
pop
movsl
xor
stos
test
dec
and
xor
outsl
inc
cmp
cmpsb
cmc
add
sarl
outsl
outsb
arpl
xchg
bound
incb
stos
fistps
xor
rcll
lret
sub
dec
xlat
insl
stos
fidivs
loop
arpl
and
fs
xlat
mov
repz
xchg
stc
movsb
mov
cmp
xchg
sub
loop
shrb
xchg
adc
jbe
dec
inc
mov
inc
cmc
cmp
jb
repz
push
xchg
push
ror
mov
mov
sbb
mov
xor
sbb
js
xor
inc
jle
rcll
or
std
and
ficomps
push
sbb
icebp
repnz
pushf
call
pop
xor
js
pop
movsl
cmpsb
mov
xor
das
arpl
popa
mov
pop
pop
enter
in
sub
leave
adcb
dec
imul
xor
mov
shll
in
mov
mov
push
inc
jl
mov
jae
movsb
adc
std
cmp
sub
shrl
mov
sub
push
mov
cmp
mov
aaa
push
adc
inc
out
adc
shll
inc
in
mov
lmsw
sbbb
or
mov
aam
add
cltd
inc
jmp
xor
cwtl
mov
mov
in
mov
pop
mov
xor
dec
or
or
mov
cld
outsl
mov
mov
sub
lods
lds
or
loopne
adc
inc
movsl
aas
or
mov
push
adc
push
adc
fadd
jmp
aaa
push
mov
sub
xchg
mov
cmp
jge
in
out
mov
xor
adc
fwait
orb
adc
inc
out
push
mov
addr16
andb
sub
ret
sbb
lret
dec
out
mov
ror
in
das
and
mov
inc
cmp
push
adc
fimuls
mov
sbb
inc
sbb
aad
dec
mov
test
mov
adc
shlb
mov
out
ret
out
pop
mov
cmpsb
xlat
ss
inc
mov
lods
pop
imul
frstor
leave
mov
lahf
inc
mov
hlt
push
mull
pop
or
xor
dec
dec
dec
xchg
xchg
cwtl
dec
inc
or
mov
xor
scas
jge
loope
je
mov
lock
sbb
adc
sbb
fs
cmp
and
cmp
adc
xor
rclb
stos
shlb
lret
data16
mov
out
adc
push
adc
jbe
adc
jae
xchg
mov
push
sbb
cmp
imul
stc
out
push
lret
fiaddl
lret
insb
clc
sub
jle
aam
cmp
fs
stos
leave
outsl
cld
movsb
cmp
orl
sbb
icebp
dec
rolb
iret
call
push
dec
daa
mov
add
test
mov
cmp
add
cld
scas
xchg
dec
push
push
dec
shl
sub
in
push
repz
lret
pop
xchg
adc
xor
loop
in
leave
lahf
push
les
stos
lock
sub
imul
shll
push
stc
dec
jle
fstl
mov
aaa
mov
mov
inc
add
mov
and
jno
icebp
xchg
jno
mov
sub
or
in
int
popa
sbb
les
push
sub
bndldx
and
xchg
das
jmp
jp
insb
test
mov
xor
cld
sbb
add
cmp
imul
jecxz
out
mov
les
lods
insb
add
and
xchg
push
sbb
mov
jl
test
push
xchg
xor
pop
rcll
cli
dec
lods
loop
rolb
xchg
fcmovne
jnp
or
mov
ret
xchg
xchg
shll
mov
shrl
lea
xor
outsl
rcll
mov
mov
push
rorl
or
popf
sub
cld
lea
sbb
loopne
loope
mov
jno
inc
sti
sahf
push
lret
lods
cmp
mov
gs
jbe
pop
lcall
fcmovne
ret
push
push
mov
pushf
popa
outsb
aaa
ds
jecxz
or
xor
in
popf
cmp
sbbb
mov
inc
dec
push
outsb
push
ss
mov
fdiv
cmp
ss
fnsave
xor
inc
aas
adc
push
ss
mov
fdiv
sbb
ss
fnsave
xor
inc
aas
adc
gs
dec
lret
add
filds
fwait
rclb
arpl
pop
mov
out
or
push
loop
xor
sbb
out
mov
jecxz
pop
xchg
mov
dec
and
and
inc
xchg
fildl
or
gs
xlat
incl
inc
xchg
and
addb
inc
inc
mov
push
add
push
scas
test
or
dec
jp
cld
jb
out
test
push
sub
cmp
push
ret
jge
xchg
jle
movsb
sbb
aas
sub
mov
rorl
push
lea
sbbl
mov
mov
imul
adcb
clc
push
jns
movl
mov
adc
mov
test
addr16
push
push
dec
or
hlt
inc
outsl
xor
out
mov
jl
loop
idiv
jecxz
inc
xor
stc
sahf
icebp
aaa
decb
inc
mov
and
adc
out
loop
imul
cmp
jmp
push
xor
push
cs
or
outsb
inc
mov
inc
sbb
aad
pop
lods
mov
mov
sub
orl
sbb
mov
xchg
and
pop
sub
cmp
xor
sti
mov
ljmp
cmp
inc
mov
mov
sahf
jns
mov
xchg
xchg
out
adc
ficoml
insl
and
jbe
sub
xchg
lret
mov
imul
out
adc
sub
stos
jne
sub
stc
aad
inc
pop
repnz
stc
mov
push
mov
test
cmpsl
movsb
sub
aad
mov
mov
pushf
out
jg
xchg
sti
rolb
sarl
or
xchg
ja
adc
xor
jae
lock
fdivrs
in
mov
mov
push
test
rorb
loopne
mov
jecxz
jo
xlat
rcl
dec
pop
mov
mov
imulb
push
sahf
jne
mov
inc
mov
xchg
int3
xchg
repz
xacquire
xchg
push
leave
gs
dec
mov
xchg
insl
sub
je
icebp
pushf
mov
and
push
xlat
hlt
lea
sub
add
mov
enter
xor
pop
sub
in
sub
into
sbb
mov
jg
jb
and
mov
mov
sbb
add
aam
sbb
stos
ljmp
mov
cmpsl
dec
dec
sti
adc
sbbl
mov
pop
arpl
lock
mov
call
stos
movsb
loope
pop
cs
mov
jecxz
fsubl
and
test
and
fsubl
push
and
lret
push
or
nop
push
mov
les
mov
push
test
add
adc
xor
push
cmp
aad
inc
jg
and
inc
jmp
sub
xor
cs
mov
pop
xchg
sub
ds
loopne
or
xor
call
mov
fs
jg
mov
push
jns
xchg
orb
clc
jno
mov
je
fmull
add
or
nop
insb
push
adc
shll
cmp
pop
rol
jge
add
mov
jbe
sbb
adc
mov
jecxz
and
cmp
lock
push
test
add
pop
mov
flds
adc
pop
movsl
sbb
jl
lfs
xchg
fmul
imul
jmp
jns
cltd
jge
outsl
pushf
js
xor
ljmp
add
shl
mov
sbb
lahf
ds
dec
push
dec
xlat
mov
insb
dec
mov
cmp
inc
and
pop
pop
push
or
xchg
mov
dec
xlat
out
pop
addl
aad
imul
mov
movsb
adc
adc
sbb
inc
fstpt
or
push
or
dec
adcb
ljmp
adcl
lock
pushf
mov
jne
mov
dec
add
mov
addl
cmp
int3
lahf
aaa
shrb
les
add
add
or
repnz
enter
cmp
or
sbb
loope
call
in
aad
imull
jo
mov
es
pop
jp
add
fildl
loop
add
adc
cli
mov
les
sarb
scas
sbb
mov
call
adc
test
push
pop
outsl
sbb
and
adc
mov
scas
shrb
and
jle
lahf
mov
je
pusha
in
lods
pop
addl
xor
mov
into
or
cmp
jecxz
cwtl
mov
push
les
aam
jo
mov
pop
loopne
test
jl
push
scas
popa
cmp
pop
push
mov
cmc
push
sbb
add
xchg
xchg
xchg
out
adc
cmpsb
sbb
out
decl
lret
cmp
lock
pop
xchg
xchg
push
mov
xorb
mov
push
pop
icebp
or
lea
ret
lock
adc
and
es
xor
js
mov
sub
sbb
roll
jb
mov
mov
add
ds
push
clc
inc
xchg
xor
adc
lds
aam
lods
lods
movsl
sbb
popa
in
icebp
stos
pop
push
add
cmc
shrl
in
loope
cmp
xor
in
fs
or
decb
stc
xchg
repz
push
inc
int3
pop
loope
xchg
out
sbbb
int3
pop
push
lds
ljmp
loopne
mov
inc
sbb
bound
lret
mov
data16
cmp
push
mov
inc
stos
jns
or
pop
fs
jb
mov
mov
add
mov
mov
cmc
fbstp
inc
inc
cbtw
pop
test
loope
pop
sbb
nop
jno
loope
in
nop
jne
icebp
mov
push
jl
add
pop
ljmp
lock
insb
push
adc
lret
or
dec
jo
pop
and
popf
mov
cld
notl
outsb
rclb
pop
scas
hlt
cmp
push
nop
imul
sbb
inc
inc
and
dec
fsubr
mov
cmp
int
mov
adc
xor
inc
stos
dec
or
or
push
jp
es
sti
sub
clc
mov
arpl
dec
xor
insl
jge
mov
dec
int3
cmp
ja
in
inc
mov
shlb
inc
and
pushf
popa
data16
hlt
mov
pushf
js
xor
ret
ficoms
jl
mov
add
jo
call
jnp
movsl
or
shrb
mov
mov
lret
push
cmp
jle
sbbb
jbe
repnz
shrl
leave
inc
jg
push
push
into
popf
mov
mov
adc
push
add
in
das
loope
mov
rorl
mov
shlb
jmp
test
add
repnz
jp
leave
jge
test
jno
mov
je
pop
mov
pop
add
mov
jge
xchg
add
pop
mov
daa
inc
sbb
jg
mov
addr16
out
shl
sbbb
jb
loopne
fisttpl
ja
cmp
gs
fiaddl
or
loopne
or
sahf
push
or
pop
mov
outsb
in
imul
mov
out
ret
cs
mov
les
mov
dec
cmp
jge
addl
mov
mov
mov
mov
xchg
adc
add
mov
xor
push
mov
adc
aas
inc
jbe
xchg
clc
mov
mov
mov
add
in
sbb
loopne
add
mov
add
inc
arpl
mov
pop
mov
orb
dec
scas
push
xor
jmp
ss
decl
test
or
loop
mov
call
repnz
xchg
aad
push
call
in
rorl
cmp
jb
shrl
mov
xchg
fimuls
insl
sarb
sbb
add
stos
inc
or
dec
mov
mov
adc
mov
xor
je
sti
sahf
cmp
dec
adc
js
xor
ljmp
mov
and
jmp
cmpsb
mov
and
inc
pop
jb
into
lods
mov
ficomps
sub
mov
test
xchg
and
mov
xchg
mov
dec
fisubrs
dec
xor
cli
arpl
mov
jne
dec
cmp
dec
in
iret
sbbb
fs
enter
repnz
pop
setle
sub
movsb
leave
mov
int
and
outsl
sbb
lret
jb
bound
xchg
arpl
jge
loope
mov
pop
fstp
mov
sbb
mov
sbb
jp
inc
cs
push
fs
inc
jo
and
mov
sub
lret
outsb
das
cmpsb
mov
xchg
mov
mov
shlb
mov
mov
push
dec
call
dec
mov
mov
jno
cmp
pop
xchg
scas
xchg
arpl
jo
aad
xchg
mov
stos
inc
je
mov
or
xchg
push
cmpsb
aam
or
mov
repnz
jae
and
push
pusha
xor
mov
fsubl
cltd
sbb
lds
fldt
aaa
or
xlat
std
adc
mov
test
ds
xchg
aas
mov
push
pop
fstpl
xor
and
fwait
xorl
movsb
add
pusha
ja
sub
bound
loope
pop
aas
icebp
jns
mov
adc
push
cmp
ja
pop
sub
or
sbb
and
push
js
push
stos
test
mov
sub
xchg
out
lahf
clc
stos
adc
sub
orl
xor
sbb
adc
lock
sbb
or
add
out
adc
or
iret
icebp
js
pop
adc
mov
pop
jne
mov
pop
cmpsb
adc
or
iret
icebp
js
pop
adc
stos
ss
ja
test
dec
clc
mov
jne
jns
adc
std
xor
das
mov
ja
test
dec
clc
mov
jne
xchg
jns
xor
sbbb
in
xchg
dec
cmp
pop
sub
hlt
sbbb
aas
adc
adc
lahf
cmp
adc
call
mov
loopne
movsb
xchg
xchg
mov
lea
imul
fidivrl
lcall
pop
add
add
and
test
orb
dec
xchg
push
test
sti
lock
xchg
sub
pop
aam
xor
fsubr
test
pop
sub
pop
push
adc
pop
jp
push
pop
push
adc
test
jno
shrb
push
mov
inc
inc
adc
push
adc
jne
pushf
lods
subb
fld
in
aas
arpl
mov
push
or
into
adc
mov
cmpsl
addr16
mov
add
mov
or
cltd
mov
jno,pt
pop
in
push
push
inc
or
push
ds
insb
outsl
out
cmp
dec
lret
and
das
imull
aad
xlat
sub
ret
sbbb
push
adc
add
jae
iret
mov
mov
mov
stos
in
mov
ja
xchg
ffreep
es
inc
and
loop
scas
mov
push
shlb
pop
mov
sbb
out
out
push
dec
bound
mov
sub
test
or
int
rorl
jne
subl
xchg
dec
adc
mov
arpl
shll
dec
cmp
mov
adc
das
mov
mov
add
pushf
pushf
scas
mov
fdivl
pop
in
nop
jns
jbe
jp
leave
cmp
rolb
dec
xor
adc
mov
shlb
ljmp
pop
mov
pop
xor
adc
pop
nop
fdivs
inc
inc
cmp
xor
mov
or
mov
dec
movsb
int
sti
repnz
dec
pop
outsb
cli
pop
mov
push
pushf
shrb
inc
mov
pop
std
into
cwtl
mov
sub
mov
int
test
mov
mov
and
mov
push
add
sub
adc
push
leave
movsb
jmp
xor
movsl
push
mov
sbb
pop
mov
or
or
fwait
adc
mov
push
out
xchg
and
out
stos
fs
push
pop
push
mov
push
out
scas
pop
push
push
mov
xchg
sbb
hlt
adc
insb
adc
shr
mov
sarb
jae
mov
out
jbe
dec
leave
jae
aas
into
inc
xlat
mov
cmp
push
lods
adc
jp
cwtl
repz
insb
jmp
inc
insl
call
arpl
inc
hlt
shlb
push
dec
movb
aam
sti
lds
jecxz
jmp
or
and
loopne
cmpl
rcr
inc
hlt
loopne
mov
xchg
std
mov
cltd
adc
popa
mov
aas
cmpsl
mov
icebp
jbe
sbb
enter
adc
cmp
aad
push
jl
out
or
xor
mov
pusha
or
pop
bound
push
in
mov
adc
or
dec
sub
or
pop
aaa
cmp
cli
inc
jmp
xchg
push
in
bound
popa
lea
inc
or
pushf
imul
jns
adcb
sub
inc
sbb
ds
mov
add
stc
nop
out
test
hlt
popa
cmp
insb
fisttpl
sub
xchg
mov
lds
or
das
pop
aaa
sub
std
pop
sbb
movsb
arpl
mov
imul
stos
pop
mov
jge
or
out
mov
je
ja
mov
div
xchg
jle
movsb
popf
cwtl
ja
call
pop
jmp
push
adc
shl
mov
ret
add
out
push
aas
xchg
hlt
fildl
pop
push
xor
out
or
and
arpl
adc
xor
pop
inc
js
cld
xchg
nopl
or
push
add
push
icebp
jge
xchg
mov
shll
lds
mov
mov
mov
inc
es
sti
imul
push
adc
add
add
pop
aaa
cmp
cli
inc
ljmp
arpl
pusha
mov
inc
or
xchg
aad
xor
loope
int3
inc
inc
adc
push
adc
subb
sbb
bound
adc
insl
push
mov
hlt
daa
orl
and
jns
pop
clc
lods
jp
adc
or
icebp
in
mov
jmp
push
test
jle
lds
mov
add
pop
add
add
sti
adc
jne
iret
rcr
dec
ja
mov
or
push
cmp
push
push
addr16
data16
mov
pop
rcr
rclb
stc
shll
dec
mov
jge
jb
aaa
mov
and
cmp
jmp
fidivl
push
inc
icebp
jmp
fisubs
push
out
movsl
icebp
dec
pushf
test
and
ja
mov
arpl
sti
or
fstpt
icebp
xchg
jl
hlt
jle
ffree
mov
cmp
cmpb
push
lea
testl
sbb
pop
pop
lds
xlat
inc
jb
outsl
stos
test
ljmp
xchg
sbb
or
pop
mov
jg
negl
xor
incb
popa
pushf
mov
imul
mov
je
jnp
movsl
mov
punpckhdq
cwtl
cld
xchg
iret
roll
jp
push
mov
fildll
adc
mov
adc
insl
lock
in
aad
popf
stos
sti
insb
daa
mov
sbb
orb
enter
mov
xchg
jne
xchg
fidivrs
daa
mov
mov
adc
mov
jge
mov
pusha
in
xchg
jno
xor
adc
and
cld
repnz
inc
call
add
imul
addr16
jecxz
mov
and
cmp
xchg
sarl
or
dec
rorb
mov
lods
jecxz
mov
stc
imul
and
pop
loopne
std
xor
out
cld
push
pop
cwtl
mov
mov
ljmp
xor
jo
nop
pop
popf
sub
arpl
iret
mov
call
mov
mov
jnp
hlt
cmp
call
pop
sarl
daa
fistl
fsubrl
call
cwtl
xchg
sbb
les
dec
push
test
hlt
cmp
dec
jecxz
aaa
sbb
mov
mov
jb
and
mov
js
xor
je
push
push
repz
jae
jae
cmp
xor
push
movsl
incl
add
shll
cltd
pusha
enter
in
pushf
sbb
outsb
xchg
insl
or
shr
outsb
jmp
cli
sbbb
cli
insb
jns
icebp
add
pop
shrb
push
mov
mov
push
fnstsw
add
mov
lock
mov
into
pop
popa
mov
imul
ret
jg
jb
mov
cs
rcrb
repz
and
aam
es
sti
lahf
lock
inc
mov
mov
and
insl
inc
mov
add
mov
sti
les
lock
out
std
mov
cmpsb
sbb
inc
or
adc
pop
push
inc
js
fbld
mov
add
sbb
jae
adc
adc
repnz
inc
mov
lret
sub
add
add
pop
aaa
cmp
cli
inc
jmp
xchg
push
in
bound
imul
ret
jg
jb
mov
mov
cs
push
icebp
mov
dec
inc
xchg
adc
fists
xchg
mov
dec
imul
fcomps
adc
shrl
adc
pop
mov
jge
lock
push
adc
dec
or
add
shrl
lock
push
adc
lds
sub
jl
test
adc
add
jmp
inc
pushf
jo
icebp
xchg
nop/reserved
mov
xchg
lret
popf
leave
xor
repnz
sub
add
mov
and
sbb
shr
pop
std
test
subb
mov
ret
push
idivb
or
int
stos
dec
jae
sub
cltd
xor
in
jge
pop
push
adc
movsl
int
push
sub
inc
icebp
or
xlat
xchg
cwtl
pop
add
in
xor
pop
sub
push
jg
clc
aam
in
sbb
sub
fnstsw
mov
add
mov
inc
xor
outsl
icebp
sbb
cmpb
push
lock
dec
dec
cmp
addr16
cmp
xchg
shl
ret
pop
jg
into
popa
mov
ljmp
jmp
rcrb
imul
cmc
testb
mov
cmp
pop
xchg
mov
jg
pusha
sub
aaa
sarl
jnp
lea
cmp
shll
test
mov
mov
xor
pop
push
adc
or
dec
inc
ret
adc
mov
dec
mov
cmp
enter
fs
call
mov
bound
adc
fs
pop
movsl
pop
mov
clc
pop
leave
jno
mov
and
addb
push
fldt
push
adc
dec
dec
stos
add
in
and
mov
ljmp
test
push
add
fimull
jp
or
xchg
mov
data16
mov
leave
lcall
fcmovne
fbld
icebp
imul
stos
adc
pop
push
adc
jmp
mov
popa
repz
sbb
mov
push
jo
mov
in
adc
movl
int
jmp
adc
out
xchg
out
fs
xchg
pop
fbstp
orl
outsb
mov
mov
call
ret
cli
sarl
adc
stc
mov
xor
fstpl
setae
nop
pop
add
ja
mov
call
mov
xor
inc
call
addr16
les
or
lods
push
push
fs
cmp
sub
stc
or
mov
dec
iret
cmc
or
rcrl
inc
lock
adc
shrl
rclb
jmp
xlat
loope
jmp
add
call
mov
xor
ljmp
mov
je
add
ljmp
sbb
xchg
sub
dec
add
push
add
mov
and
mov
dec
jmp
mulb
insl
mov
inc
mov
dec
sti
les
repz
test
mov
je
push
clc
inc
addb
inc
cli
or
repz
xor
sbb
cld
andl
mov
jmp
xor
dec
icebp
shr
popa
out
movsb
popf
aas
cwtl
arpl
mov
loopne
lods
cmp
mov
arpl
add
push
ret
sub
xlat
loope
xchg
inc
inc
jno
pushf
pusha
cmp
clc
mov
sti
mov
cmpsb
mov
jne
mov
pushf
imul
xchg
or
cwtl
decb
fbld
mov
mov
adc
idiv
roll
mov
mov
pusha
xchg
in
pop
jmp
xchg
paddsb
or
std
sbb
in
shlb
ret
mov
popa
cmp
sti
jb
mov
adc
pop
cmpsl
jbe
lret
jno
xchg
sub
or
mov
ret
jge
push
jecxz
or
ljmp
es
arpl
or
loope
and
cmp
repz
mov
fldt
sbb
test
adc
adc
adc
sbb
cmp
in
fwait
or
out
pushf
inc
out
jae
pop
lret
pushf
sbb
jbe
mov
int
addr16
ja
cli
flds
adcb
lods
add
sbb
mov
movsl
rcrb
cwtl
push
repz
nop
push
fsubr
jle
inc
xlat
fidivl
lds
jge
dec
cmp
push
jb
xor
jg
xchg
aad
cmp
cmp
pop
lds
int
add
adc
call
int3
push
in
bound
mov
loope
out
lds
nop
mov
sub
push
cwtl
pop
sbb
and
imul
fcmovbe
pop
mov
enter
adc
mov
bound
push
fmul
xchg
in
lahf
int3
scas
lods
out
imul
adc
xor
out
mov
lods
popa
sarb
ss
inc
dec
into
mov
adc
pop
sbbb
jecxz
sub
pop
jnp
shlb
push
sub
mov
add
lret
imul
jbe
jl
adc
xchg
push
mov
dec
cwtl
mov
aaa
mov
aam
insb
jns
in
repnz
xchg
in
outsb
jne
incl
xchg
cmp
xchg
loop
sti
xor
pop
mov
mov
loopne
jg
pop
pop
int
fcmovnu
ss
cmp
jnp
sbbb
pop
aam
mov
lods
test
push
in
push
sarb
int
xor
inc
xor
pop
iret
and
mov
imul
pop
push
pusha
xchg
ljmp
inc
mov
inc
jmp
stos
cs
mov
hlt
aas
into
mov
push
xchg
jecxz
xlat
loopne
inc
jp
lcall
loopne
inc
ljmp
nop
fildl
xchg
sub
xchg
sbb
mov
fnstsw
in
push
or
mov
push
lods
mov
mov
jns
xchg
push
repnz
orl
cli
push
adcb
out
jno
mov
jmp
jae
or
movzwl
inc
xor
lea
lods
aaa
add
icebp
clc
jecxz
jbe
notl
rolb
add
mov
and
mov
dec
jmp
out
hlt
stos
or
pop
jae
inc
add
shl
sbb
jge
stos
sbb
jbe
fisttps
movsl
adc
clc
jecxz
xchg
mov
or
jbe
mov
les
rep
call
cld
and
jne
push
fnsaves
xchg
sbb
push
adc
ss
lods
aaa
add
add
pusha
pusha
xor
je
shrb
push
rolb
fs
roll
pop
movsl
sbb
push
into
bound
arpl
jae
add
or
dec
out
adc
cld
or
pop
ss
push
std
mov
fildl
cmpsl
add
pop
leave
mov
cs
sti
sub
pop
inc
mov
mov
ret
xor
adc
jle
cmp
mov
addb
jl
add
mov
test
pusha
cmpb
scas
cld
sub
cmp
popa
and
cli
pop
fldcw
std
sub
xchg
push
pop
jne
rcrb
adc
jno
repnz
sbbl
negb
jne
lahf
push
imul
mov
adc
mov
sbbl
sbb
ss
cwtl
and
or
in
pop
stos
jge
in
push
repnz
jecxz
sub
jecxz
lret
xor
push
out
add
cmc
dec
ljmp
std
stc
lret
jmp
out
rorb
mov
jge
xchg
push
adc
test
dec
stos
outsb
insl
mov
fwait
movsl
sbb
xchg
sbb
mov
cmpsb
addb
and
xlat
push
dec
aam
testb
xor
jmpw
daa
adc
cmp
push
in
mov
das
pop
jne
sbb
pushf
xor
mov
add
das
inc
cmpsl
jno
adc
and
jo
aas
lock
jbe
inc
fbstp
fidivrl
cli
sahf
int3
mulb
push
sbb
stc
push
pop
mov
xlat
fstl
pop
add
test
cmp
sub
inc
adc
stos
mov
mov
mov
testl
xor
shrb
pushf
stos
push
push
cmc
jnp
es
sub
pop
mov
and
mov
jmp
pop
jg
pop
mov
push
cmp
add
cwtl
bound
adc
xchg
iret
dec
inc
add
fstl
notl
loop
lods
jg
jle
xchg
mov
sbb
sub
inc
scas
sbb
add
repz
aad
mov
sub
aaa
xor
js
sbb
dec
sub
rolb
idiv
fcompl
and
and
mov
jno
lods
insb
in
aam
ljmp
and
push
sahf
cmp
into
lds
ss
mov
and
lods
jmp
or
xor
fimuls
orb
popa
jne
iret
adc
sbb
cli
inc
lahf
cmpsl
mov
sbb
lock
popa
push
es
xor
push
lret
in
mov
in
cmp
dec
mov
mov
pop
cwtl
orl
jno
out
xor
push
bound
arpl
gs
popf
insl
enter
lret
mov
scas
inc
push
in
pop
mov
bound
xchg
fdivl
mov
fcos
out
fcoml
xor
push
sbb
cmp
pop
jle
mov
fwait
add
adc
add
lret
adc
movsl
add
push
movsl
add
push
cmpsb
add
jge
add
fsubl
add
lahf
cmpsl
add
cmpsl
add
shll
add
fisubrs
add
imulb
add
fldcw
adc
scas
add
adc
add
les
add
repz
adc
mov
adc
add
mov
mulb
add
mov
rcrl
add
inc
daa
xchg
out
sub
aam
dec
shrl
movsl
mov
imul
rcrl
ja
jg
jnp
inc
outsb
test
pop
cs
jo
pop
adc
mov
in
imull
mov
push
lcall
repnz
cmp
pop
pop
dec
mov
jecxz
adc
xor
pop
inc
sarl
adc
adcb
mov
mov
push
mov
addb
adc
xor
sub
icebp
cmp
jge
cmpsb
sbb
inc
ss
xchg
cmp
cmp
imul
ss
inc
mov
push
adcb
dec
repz
jbe
dec
xlat
adc
ja
or
push
ret
jnp
aas
xchg
mov
cmp
arpl
push
or
cs
sub
xor
ja
ror
inc
out
jl
pop
bound
jp
in
sbb
bound
repnz
in
rolb
jmp
push
hlt
sub
je
or
jmp
or
push
int
subb
xor
xor
pusha
cltd
call
aaa
clc
inc
xor
idivb
aaa
push
push
inc
xor
repz
dec
dec
lahf
or
notl
in
mov
sti
jmp
inc
arpl
adc
mov
test
adc
inc
adc
mov
sbb
cmp
pop
flds
rol
mov
rorb
scas
pusha
test
mov
in
pop
faddl
mov
sbb
shrb
mov
xchg
shrb
dec
fldenv
xchg
sub
push
mov
fidivl
test
jbe
lods
jl
movsl
aas
clc
sbb
xor
xchg
pop
ret
enter
cli
outsb
inc
push
pop
dec
pushf
dec
es
pusha
loop
mov
pop
inc
mov
std
addr16
enter
in
testb
pop
adc
push
ret
mov
add
out
mov
sub
rcrl
add
inc
sub
inc
enter
sub
xchg
test
lods
lcall
push
roll
mov
cmp
enter
ret
mov
sbb
mov
mov
mov
push
mov
stos
scas
sub
mov
stc
lods
bound
call
pop
movb
dec
imul
or
push
out
jne
mov
jnp
jo
lret
adc
mov
shlb
imul
fndisi(8087
sub
leave
jle
cwtl
test
sub
ret
fistpl
cmpsb
loope
inc
out
test
pop
mov
jg
push
push
fistpll
jo
and
mov
aas
icebp
add
aas
cwtl
jmp
out
pop
jle
lods
call
ret
cmp
imul
pop
push
sbb
mov
mov
xchg
inc
cli
das
xor
fcom
pop
ficoms
aam
lods
push
and
push
fstp
cmp
js
push
mov
bound
mov
fs
testl
ret
sbb
movsl
filds
push
jno
push
movsb
sbb
inc
leave
jbe
adc
mov
cmp
sub
push
xchg
shrb
inc
mov
mov
ret
add
inc
fcmovnbe
mov
popl
add
out
lds
mov
call
sub
add
adcb
mov
jle
push
dec
hlt
movsl
jno
pop
pop
insb
stc
pusha
pop
mov
add
add
sti
xor
mov
repnz
or
into
pop
std
fsts
inc
lret
imul
andl
mov
add
minps
xor
inc
fcomps
mov
orb
sahf
lahf
stos
js
xchg
add
mov
and
adc
push
or
add
sub
in
roll
cmp
into
into
insb
or
pop
adc
fmuls
add
mov
mov
in
pop
orb
add
mov
xorb
push
or
adc
loopne
cmc
add
pushf
lcall
outsl
mov
mov
fs
sub
push
pop
pop
add
pop
and
sahf
mov
je
leave
sub
push
push
or
movsb
into
hlt
insb
lock
iret
or
idivl
arpl
push
or
add
push
sti
sbb
dec
lret
jae
pop
xor
push
pushf
pop
and
test
dec
repnz
jno
mov
std
movsl
sbb
and
fcompp
mov
mov
xlat
mov
jle
xchg
mov
or
aaa
je
inc
cwtl
jg
rcl
movsl
inc
mov
add
adc
jmp
xchg
push
mov
push
mov
rolb
or
sbb
add
cmp
shll
xchg
jae
daa
add
ret
mov
imul
popf
pop
add
inc
add
jecxz
adc
gs
mov
push
adc
sbb
ja
sahf
loop
shll
fsubs
adc
rorb
adc
dec
shrb
or
and
dec
xchg
ja
push
sub
decb
mov
adc
dec
dec
xor
outsb
movsl
int3
inc
push
jnp
xor
or
sub
stos
push
or
sbbl
and
ljmp
sub
testb
sub
js
push
mov
rcl
mov
lret
xchg
stos
pop
stc
cltd
sbb
pop
js
mov
mov
pop
add
outsl
cs
dec
cwtl
mov
cmpsl
dec
test
jae
or
loope
ret
dec
je
mov
leave
xchg
push
cmpl
and
test
add
jae
pop
push
push
xlat
jne
in
aaa
mov
movsl
push
bound
dec
call
clc
fisubrs
jecxz
fisubl
mov
cmp
sbb
xor
out
punpckhdq
cmpsl
cs
out
insb
outsl
aaa
add
push
adc
bound
pop
loopne
in
hlt
xchg
imul
mov
aad
rcrb
mov
rorl
cltd
inc
daa
jo
mov
mov
shlb
mov
dec
and
mov
add
fistpl
dec
loopne
out
mov
arpl
mov
leave
push
lods
xchg
mov
ja
xchg
xor
ja
xchg
movsl
xlat
mov
adc
push
scas
jp
adc
mov
push
pop
sbb
mov
clc
loope
dec
insl
fiaddl
sub
rclb
pop
ljmp
inc
mov
inc
inc
inc
sbb
cltd
pop
jecxz
clc
cmp
ret
push
insb
sbb
add
mov
popa
inc
mov
add
push
push
dec
add
push
sub
adc
adc
idivl
jbe
add
mov
test
or
xor
jbe
bound
fwait
cmpsl
cmp
repz
sbb
bound
mov
lock
or
orl
aad
int3
out
sarl
cmpsb
jbe,pt
adc
dec
sbb
mov
mov
pushf
pop
mov
pop
adc
pop
cmp
insb
inc
sub
call
push
add
add
inc
sahf
cmpsl
ljmp
or
lcall
fbld
addl
add
mov
push
jge
jae
pop
xlat
xor
icebp
into
popf
push
fs
jg
dec
jle
push
mov
fwait
arpl
xor
or
jno
int3
or
into
push
push
bound
push
addb
sbb
movsb
push
test
mov
sbb
bound
sub
call
adc
lret
fs
in
arpl
movsl
adc
cs
xor
sbb
inc
aam
addb
shl
mov
push
stc
js
xchg
add
xor
push
fstps
idivb
mov
add
popl
adc
mov
pushf
push
scas
lds
ljmp
sub
popa
add
jns
xlat
or
xor
sub
movsl
fnsave
add
lcall
les
inc
cwtl
mov
push
js
xor
push
out
jnp
cmpb
and
in
lea
mov
jl
xchg
shll
pushf
je
cmp
xchg
shr
sahf
clc
aaa
shll
lock
ljmp
push
ret
scas
jmp
aad
cmpsl
mov
ds
fldenv
cmp
add
stos
xchg
call
scas
int3
pop
pop
movsb
sbb
pop
pop
iret
xor
cmp
mov
mov
xor
pop
fs
xor
mov
cmp
xchg
popa
cmpb
jne
mov
rcrb
mov
mov
mov
sub
gs
xchg
mov
jbe
cmp
cmp
arpl
rcl
push
fadd
jb
mov
dec
imul
pop
ret
es
out
adc
sub
push
sbb
cmp
mov
pop
add
dec
mov
dec
dec
cs
mov
stos
lods
mov
jp
in
ljmp
cmp
gs
dec
jns
les
pop
sbb
aas
push
sar
and
jnp
cmpsb
cmp
and
nop
punpckhbw
sub
sub
into
xchg
or
mov
pushf
jg
push
dec
out
push
or
jle
jp
stos
add
data16
pusha
add
loopne
mov
jns
sbb
fcmovnbe
push
mov
add
shll
mov
mov
mov
jg
mov
test
fmul
int3
lds
mov
negl
cs
fwait
sub
or
sub
jecxz
jge
jno
hlt
filds
jmp
xor
push
mov
push
sbb
pusha
rcl
pop
scas
cmp
or
cwtl
mov
push
aad
imul
addb
mov
lods
and
cmp
sbb
cs
fdivl
fsubl
adc
cmp
ds
jp
and
hlt
mov
push
inc
inc
int
outsb
nop
pop
call
mov
nop
cmp
out
push
adc
insb
faddl
sar
xchg
xor
xor
std
jp
enter
push
fcomps
sub
xor
add
xor
xor
xlat
jmp
or
andb
mov
mov
pop
pop
push
stos
mov
pop
cmpsb
lock
cs
pop
sub
xchg
add
cmp
pop
pushf
jb
ljmp
mov
shll
dec
fdivr
mov
or
movsl
or
lock
rorb
stc
insb
xchg
mov
mov
adc
xchg
mov
cmpsb
jbe,pt
adc
andl
data16
mov
rep
call
call
out
pop
sub
popa
inc
or
sbbb
sbb
cld
pop
andb
xor
pusha
popa
lea
nop
mov
add
mov
or
sbb
outsb
dec
xor
repz
add
sub
mov
mov
cmp
imul
push
fs
mov
pop
mov
mov
add
jmp
in
fwait
cmpsb
cmp
icebp
daa
lret
sar
mov
add
xchg
sbb
xor
or
sbbl
lds
mov
shrb
fidivl
adc
add
dec
inc
cmp
imul
mov
adc
pusha
inc
adc
add
push
out
fwait
dec
xchg
mov
sub
cli
xchg
mov
movsb
js
mov
fldt
neg
in
adc
mov
lea
scas
push
push
pop
push
and
jno
mov
sbb
adc
stc
test
adc
xor
shl
pushf
push
pop
push
and
lahf
ds
int
jmp
scas
push
gs
mov
ljmp
or
inc
dec
fcmovu
rcll
and
push
add
mov
mov
xor
hlt
mov
cmp
add
stos
iret
shl
mov
xor
inc
inc
sbb
pusha
loope
jle
insb
and
pusha
data16
pusha
cmp
jo
out
xor
cmpsb
xlat
pop
cld
clc
pop
cltd
pop
pop
push
les
xchg
push
fsubrl
pop
sbb
add
pushf
cmp
mov
fidivrl
aas
outsb
mov
hlt
mov
sti
xor
mov
ja
stos
sub
sbb
enter
mov
loope
es
pop
inc
mov
repz
out
sub
les
sub
adc
outsb
aas
lea
test
ljmp
add
or
ret
mov
stos
mov
sbb
push
into
pop
jmp
mov
aam
lret
or
xor
out
mov
xchg
sbb
andl
lea
push
int
or
and
sbbb
pop
adc
rol
inc
adc
xchg
push
xor
in
xor
fucomip
cmp
or
cmp
decb
mov
cli
mov
jle
iret
bound
andb
popa
clc
fnstcw
hlt
pop
and
sub
add
jge
jg
mov
xchg
pop
int
pop
dec
jae
mov
and
inc
call
rcrl
xchg
sahf
mov
cs
mov
sub
push
inc
lods
add
adc
fcmovnbe
repnz
sbb
push
insl
insb
xor
sbb
leave
notb
push
in
add
adc
inc
daa
mov
xchg
push
adc
sub
in
xchg
xchg
shll
pop
cmp
cmp
mov
push
add
mov
sbb
outsl
dec
aaa
xor
imul
pop
mov
stos
sar
mov
adc
iret
insl
test
lret
jb
andb
lds
adc
pusha
adc
add
lret
mov
repz
pavgb
addb
nop
push
adc
js
pop
popa
test
nop
imul
movsb
scas
aaa
xor
mov
sbb
jmp
jno
faddp
adc
or
sahf
pop
mov
repz
fdiv
movsl
adc
adc
je
pop
lock
or
orl
mov
aad
push
add
out
subl
inc
cmp
adc
dec
lea
mov
sti
jno
in
or
into
push
dec
mov
ret
xchg
shl
fs
cmpsl
cmp
rep
sbb
dec
mov
cmpsl
aam
gs
push
lods
shlb
push
mov
jbe
and
lcall
push
push
xor
popa
lea
nop
mov
add
and
out
rorl
sbb
outsl
dec
xor
out
inc
or
arpl
shrl
xor
adc
icebp
push
adcb
push
mov
loopne
lret
cmp
add
lret
ret
ret
addb
mov
inc
aad
dec
gs
mov
test
xchg
cli
push
sbb
cmc
in
lfs
sbb
cmp
lods
push
mov
aad
test
xchg
xacquire
mov
inc
aam
data16
push
fstpt
call
xchg
sahf
or
jmp
or
push
loopne
xchg
cwtl
gs
fsubrp
cmp
xchg
in
cmp
in
clc
fcompl
and
les
jecxz
push
xchg
cli
sbb
loope
jne
in
and
das
into
pop
push
lods
sub
jp
rorb
enter
out
jge
in
call
mov
mov
add
iret
int3
cmp
nop
in
shrb
and
int
dec
or
and
xor
out
xor
lock
adc
xchg
mov
dec
test
push
es
jb
leave
sbb
jbe
fildll
std
mov
fcmovne
xlat
xor
call
cld
dec
lods
push
mov
les
sbb
scas
es
mov
xchg
jl
mov
mov
cltd
sahf
nop
unpcklps
jecxz
jnp
fcmove
sbb
dec
cmp
inc
xchg
mov
mov
and
mov
in
jl
daa
mov
dec
mov
in
push
xchg
ss
and
das
jl
sub
pop
mov
sbb
loop
and
cmp
test
lahf
lds
mov
fldcw
loopne
fcomp
data16
dec
out
dec
cld
jae
rcrl
loop
into
popa
in
test
aam
dec
pop
adc
pop
sbb
imul
inc
mov
lock
loope
decb
add
pop
into
adc
pop
lods
out
andl
lods
je
mov
adc
add
das
pop
adc
jnp
mov
mov
je
outsw
mov
or
mov
lret
push
aad
ret
lock
jns
iret
mov
inc
mov
adc
cmc
mov
inc
sbb
sarb
xor
pop
nop
movsl
or
mov
adc
lret
mov
or
sub
mov
cmp
pushf
movl
aad
xor
loopne
or
mov
mov
inc
sub
andl
cmp
dec
mov
pop
les
mov
xor
cmp
dec
push
add
test
lock
xlat
jno
push
int3
sti
std
jo
shll
adc
mov
gs
push
add
push
mov
cmp
call
jge
mov
cmpsb
sbb
repz
aad
add
popa
mov
ljmp
cmp
jg
pop
dec
cmp
stc
test
xor
cs
xor
popa
lcall
dec
addb
mov
mov
fimull
or
cld
push
mov
xor
jbe
call
or
add
test
pop
mov
mov
lods
jae
inc
adc
call
push
or
add
dec
push
jnp
dec
xchg
lcall
addl
sub
pushf
pop
push
adc
pop
movsl
fidivrl
mov
jmp
cltd
in
sub
mov
pop
and
add
pop
mov
or
mov
cmc
cmp
sub
out
mov
adc
cld
incl
js
in
dec
mov
xlat
lock
lret
adc
into
or
add
mov
jge
mov
mov
test
xchg
call
jecxz
div
icebp
pop
inc
jg
je
jo
inc
pop
sbb
add
sub
icebp
fmuls
dec
test
adc
nop
xchg
push
fldenv
loop
test
pop
lret
jmp
inc
aas
je
sahf
scas
test
adc
pop
jno
fldenv
es
je
in
ds
les
or
aam
dec
pop
pop
jle
out
mov
push
jmp
mov
sub
sub
and
push
aas
std
mov
cld
or
iret
add
mov
xor
mov
xchg
leave
lods
inc
mov
jg
push
pop
es
subl
inc
push
into
mov
jecxz
inc
rcl
mov
pushw
lea
lock
ret
out
repz
gs
push
decl
sub
mov
in
xchg
sbb
push
mov
cltd
ss
stc
pushf
fistl
xor
enter
data16
mov
add
xlat
sub
jl
out
test
pop
pop
nop
fwait
lcall
jle
loopne
mov
pusha
outsl
ficoms
clc
and
cmc
je
mov
repnz
and
orl
inc
mov
hlt
insb
ret
repnz
dec
push
loope
sbb
sbb
fldl
jp
adc
dec
test
adc
sub
pop
aad
pop
fcomp
roll
nop
in
sub
sub
out
dec
sbb
in
jb
hlt
mov
add
fnstsw
stos
hlt
adc
test
mov
push
xchg
pushf
test
push
into
push
sbb
jbe
pusha
sub
sahf
ljmp
xchg
lret
pop
mov
add
fcoms
decl
movsl
inc
aad
fistps
push
adc
cwtl
gs
adc
mov
das
pop
pop
clc
sti
dec
aaa
mov
xchg
lea
es
pop
adc
leave
je
push
xor
into
cltd
pop
mov
inc
inc
lret
ror
or
cmp
mov
sbb
enter
pop
sbb
test
cmp
push
xor
jmp
stos
daa
shrl
aam
aad
icebp
into
popf
pop
std
jle
mov
sub
shl
arpl
sbbl
mov
and
xor
lock
push
adc
add
inc
pop
pushf
jmp
pop
dec
add
add
cs
cmc
imul
cmp
push
dec
outsl
jbe
incl
xchg
push
xchg
arpl
pop
out
push
shll
mov
in
sub
mov
lods
cmp
test
movsl
sbb
jg
mov
inc
aam
add
xor
cmp
inc
lods
insb
mov
dec
pop
ss
sub
enter
jecxz
stc
mov
sbbl
sar
mov
mov
push
pop
inc
fnstenv
std
jle
lods
and
test
dec
inc
out
pop
jge
add
jl
mov
jb
xchg
push
std
pop
push
dec
out
aaa
cmp
call
sbb
mov
stc
mov
add
pop
pop
pushf
ret
pxor
jnp
leave
jge
pop
pushf
push
push
xor
sbb
dec
shll
fsubs
mov
sti
das
jle
scas
cmpsl
orl
sbbb
dec
xor
sbb
pop
pushf
fndisi(8087
lret
pop
cmpb
jle
movsl
inc
aaa
jb
sub
sub
ja
lahf
cmp
test
mov
out
mov
and
mov
mulb
aam
dec
cmp
in
push
xor
or
repnz
xchg
lods
push
cmp
jnp
popa
xchg
mov
roll
dec
int3
pop
cmc
jno
rclb
rclb
fnstenv
push
lea
fstp
ljmp
cmp
cmp
aad
xor
inc
push
fisttpl
xchg
daa
pushf
pop
inc
lds
lods
pop
sub
adc
xchg
mov
loope
inc
je
cmpsl
or
out
push
leave
in
jecxz
jle
es
add
insb
ss
cmp
sub
pusha
loope
fcmovnbe
andb
fcompl
mov
in
or
xor
in
mov
pushf
ds
fstpt
xchg
sbb
xor
xchg
pop
pop
push
xchg
push
in
jecxz
mov
enter
xor
ret
jmp
movsb
push
rcrl
shrb
into
or
pop
push
jle
pop
scas
inc
pop
sti
fcompl
lea
das
in
mull
mov
dec
dec
out
mov
std
and
aam
jmp
sahf
fmulp
push
or
mov
sti
dec
push
int3
jle
lea
mov
mov
mov
out
sub
dec
out
lcall
enter
add
fcomp
loope
inc
push
sub
push
and
hlt
pop
and
add
ret
shll
mov
mov
fmull
out
data16
jmp
xor
push
xchg
cmpsb
outsb
test
add
and
xor
xor
mov
lock
lahf
popa
mov
movsb
mov
adc
dec
stos
inc
std
dec
add
ja
leave
xchg
mov
hlt
adc
jge
jae
jmp
in
nop
adc
adc
dec
mov
push
jns
inc
add
call
sbb
pop
adc
and
push
xor
out
sub
push
push
adc
lods
shlb
pushf
adc
imul
xchg
mov
pop
mov
repz
das
sbb
imul
adc
fs
mov
imul
mov
inc
into
xchg
rorl
mov
sahf
clc
xchg
and
int3
call
push
dec
fwait
insb
pop
inc
loopne
jmp
addl
clc
scas
lret
imull
aam
ret
movsb
inc
add
push
add
outsb
or
mov
add
xchg
push
mov
pop
rcrl
decb
mov
jns
movsb
dec
push
jp
xor
and
gs
inc
jnp
int3
push
cmp
mov
cmp
jae
cmpsl
cs
dec
xor
pushf
ret
clc
lcall
roll
mov
dec
add
xchg
inc
pop
xchg
push
push
mov
fs
imul
int
add
add
movsb
aas
cmp
ret
or
dec
and
and
xorb
stc
push
call
pushf
imul
rorb
inc
mov
adc
add
push
cmp
adc
adc
mov
testb
dec
movsl
fsubrs
push
or
mov
jle
jb
aaa
cmp
call
pushf
bound
mov
int3
pop
fidivl
das
aam
mov
enter
sbb
xor
cmpsb
or
xor
ret
lret
push
in
mov
nop
add
dec
jo
aam
sbb
xchg
out
sub
int
les
int
pop
xor
adc
or
scas
and
cmpsl
sub
cmp
loop
dec
jo
faddl
xchg
orb
add
pop
xchg
ficoms
loopne
aad
lret
sti
icebp
in
mov
lret
cmp
pop
hlt
dec
imul
inc
pop
mov
or
test
pop
xchg
mov
test
je
shlb
addr16
ret
xchg
sub
dec
pop
and
ljmp
cmp
and
cld
pop
idivb
out
and
sbb
add
in
in
hlt
fisubl
pop
or
jae
adc
movsb
mov
outsb
jno
mov
fimuls
and
stos
sti
stos
adc
mov
ret
sbb
aas
lock
mov
fbld
inc
push
ja
xor
dec
mov
outsb
lcall
fldenv
loopne
jbe
push
xor
add
enter
jb
mov
sbb
scas
stc
pop
jae
adc
pop
ret
lods
shlb
dec
scas
stos
bound
ficompl
ror
aas
ja
lds
or
mov
jecxz
cmpsl
rorl
inc
addr16
pop
xlat
and
xchg
jl
pop
adc
adc
inc
movb
cwtl
aaa
imul
cltd
ret
mov
stc
jecxz
arpl
push
lods
insb
mov
mov
nop
pop
lds
sahf
adc
nop
shll
loopne
xor
lods
lods
fsubl
sar
inc
cmp
inc
pop
sub
mov
sub
push
jns
push
sar
mov
mov
add
stos
jne
insb
outsl
push
cs
pop
test
and
and
cli
and
dec
jecxz
xlat
movsl
ficompl
std
outsl
bound
jmp
adc
cmpsb
int3
mov
push
icebp
sub
xacquire
inc
mov
cmc
mov
rclb
xor
cmp
add
jmp
fisttpl
sarl
arpl
insb
call
push
in
js
mov
push
lds
xor
dec
imul
loopne
pop
loop
mov
mov
stos
test
fistpll
clc
xchg
lcall
jne
mov
call
mov
push
adc
and
fidivrs
adc
jno
dec
fnstcw
imul
sbb
movsb
pop
hlt
sarb
xor
sub
inc
jmp
movsl
mov
cli
xchg
mov
sub
mov
dec
in
les
and
xor
sub
movsb
scas
cmp
and
sahf
pop
pop
xor
or
pop
aad
add
add
cmp
adc
adc
imull
xchg
adc
jae
test
xchg
test
call
outsl
or
outsl
push
adc
hlt
add
adc
adc
call
mov
sub
add
lods
or
imul
pop
call
cmp
outsl
push
adc
or
pop
inc
adc
adc
sub
push
adc
pop
push
inc
data16
push
adc
nop
dec
inc
mov
pop
pop
rolb
mov
lahf
pop
adc
lahf
pop
adc
lea
orl
sub
in
cmp
shll
sub
hlt
call
out
mov
cmp
dec
push
mov
pop
movsb
sbb
xchg
pop
jb
dec
pop
arpl
ljmp
enter
push
in
xor
nop
cmp
rolb
xor
xchg
sub
push
jmp
stos
sahf
in
repnz
out
mov
jnp
jne
mov
je
lea
fwait
pop
cmp
pop
sahf
fnsave
adc
add
and
add
sub
xchg
sub
gs
adc
in
outsb
lods
pusha
cli
cli
sti
mov
pop
cli
pop
mov
xchg
loop
mov
es
xchg
xor
pop
jmp
adc
lock
in
adc
cmp
repz
inc
mov
sbb
add
ja
pop
and
xor
rcll
and
pop
add
xor
push
mov
push
add
sbb
popa
xlat
dec
mov
stos
or
mov
pop
jb
pusha
ja
push
adc
push
pop
push
rcrb
push
outsl
inc
pop
ljmp
push
or
fidivrl
das
aad
adc
aas
leave
pop
cmp
push
mov
xor
dec
inc
aad
leave
mov
mov
cmp
jnp
jecxz
pusha
mov
xchg
pop
inc
adc
es
cli
in
cmp
sub
or
xor
stos
adc
fsubr
inc
cmp
aad
and
sbb
push
fs
pop
pop
repnz
inc
adc
stc
sbb
out
data16
adc
cltd
adc
mov
mov
xchg
insl
jae
dec
sbb
mov
add
jbe
mov
movsb
xor
xchg
test
insb
add
out
jecxz
sbb
scas
pop
adc
daa
mov
mov
ljmp
xchg
fisubl
nop
push
sbb
shrb
adc
rcrb
enter
and
push
add
ds
dec
int3
ret
cmp
jle
mov
inc
fcmovnu
inc
and
insl
insl
insb
xor
movsb
jb
int3
movsb
stc
push
rolb
xor
in
arpl
cmp
xor
adc
fsubr
add
aaa
fstl
mov
fucomi
imul
xor
mov
sub
in
hlt
movsb
mov
loope
pusha
into
popa
in
iret
and
cmp
jae
dec
shrl
xor
aaa
jge
das
push
loopne
sub
fldl
lcall
mov
dec
ljmp
cmp
add
js
push
and
daa
fldenv
xchg
pop
inc
outsb
mov
push
imul
icebp
negl
mov
push
mov
push
fsubrl
in
xor
jb
sbb
dec
sbb
cmp
icebp
jb
adcl
loop
add
sub
je
imul
push
cli
cmpsb
mov
inc
push
rolb
imul
xor
jnp
das
and
fstps
push
push
mov
clc
push
inc
xchg
mov
xchg
or
jg
mov
stos
xor
sbb
je
mov
out
or
hlt
loopne
or
pop
inc
js
xor
out
inc
lcall
enter
ret
lcall
ret
andb
das
lds
aam
or
sub
out
and
push
pop
ds
lds
movsl
sbb
dec
jno
nop
movsb
stos
addl
add
mov
mov
xchg
jnp
out
push
testl
xor
mov
lcall
int
dec
sbb
sub
les
lret
and
xchg
adc
mov
loopne
movsb
mov
mov
icebp
dec
xchg
jmp
bound
pop
movsl
pop
mov
scas
add
xchg
jmp
jecxz
inc
and
fbstp
mov
push
pushf
mov
add
dec
sub
imul
stos
orl
mov
nop
pop
mov
mov
out
push
pop
inc
movsb
scas
aas
push
call
subb
mov
jle
mov
jge
cld
xor
push
or
repnz
or
jb
js
mov
data16
out
pop
movsb
mov
cld
clc
negb
jns
inc
out
or
imul
push
lods
lods
dec
sti
sti
mov
fwait
sub
lds
inc
or
in
fistpll
cld
test
stos
adc
jne
or
fldt
cmp
or
mov
dec
scas
pop
pop
clc
and
sar
in
jmp
imulb
xor
jle
or
in
adc
dec
icebp
sbb
adc
insb
es
repz
xlat
push
imulb
aad
addr16
rcl
mov
shr
xchg
mov
fcom
pop
or
add
pop
add
cmpsb
pop
push
pop
ljmp
pop
xchg
push
cld
mov
mov
jmp
fcom
hlt
sbb
mov
insb
xchg
stos
or
test
push
xor
xchg
testl
lods
add
or
into
bound
jne,pn
cwtl
dec
add
sub
cmp
imul
cmc
push
inc
xlat
push
mov
mov
cmp
fcmovnb
aas
push
gs
scas
cmpsb
stc
mulb
pop
outsl
and
mov
dec
mov
movsl
push
sub
add
into
lea
repz
mov
jecxz
push
int3
jo
enter
mov
pop
fstpl
iret
dec
loope
lret
push
ret
pushf
or
add
mov
mov
mov
or
cs
mov
xlat
in
fmull
stos
out
cmp
xchg
inc
scas
addr16
push
mov
and
in
sbb
bound
movsl
cmpsb
mov
push
aaa
push
lcall
jmp
es
pop
sub
xchg
xlat
and
inc
mov
inc
jb
popa
jmp
cmp
fmulp
cs
sbbw
jecxz
jmp
push
mov
les
cmpsb
cmp
jne
popa
sub
inc
adc
icebp
mov
and
pop
lahf
into
adc
pop
xchg
stos
xlat
test
mov
cmp
jmp
test
insb
repnz
xor
add
pop
nop
xor
sbb
mov
data16
and
dec
cwtl
test
aam
ds
lahf
rcll
inc
cmpsl
data16
test
orl
scas
aaa
leave
inc
movsw
repnz
jg
add
icebp
or
je
inc
dec
into
pop
jecxz
add
and
mov
jecxz
inc
xor
cmpl
shlb
cli
cld
and
les
mov
pushl
push
addr16
mov
dec
call
xor
roll
lds
mov
mov
dec
sbb
inc
cli
or
sbb
icebp
add
xlat
lds
and
mov
or
mov
lock
xlat
fstpt
imulb
mov
mov
imul
jnp
and
fisttpl
add
hlt
loopne
cli
or
fisubrs
cwtl
or
sub
add
add
add
jnp
sub
std
hlt
call
outsb
mov
test
call
mov
pop
xor
fadd
mov
jmp
adc
and
mov
or
cmc
mov
jecxz
cmpsl
mov
popf
mov
enter
mov
cli
xchg
push
xor
int3
test
jecxz
cmpsl
mov
push
ja
popa
xchg
clc
lret
pop
mov
mov
sbb
repz
dec
les
popf
jmp
iret
pushf
cmp
adc
and
push
subl
push
loop
shll
adc
mov
pusha
dec
cmpb
inc
ficomps
stc
push
stos
nop
or
xchg
push
dec
mov
iret
add
push
adc
fwait
xlat
movsb
cmp
or
dec
ret
xchg
push
cmp
lock
cmpsl
pop
int
mov
pop
repnz
lret
or
inc
push
scas
gs
or
mov
fucomp
push
std
add
pop
stos
sbb
jge
jg
xchg
jg
dec
push
aad
jmp
popa
fnstcw
sub
cmpsb
pop
and
fxtract
mov
pop
and
or
or
test
popa
stc
xchg
movsb
push
rcll
pop
dec
cmp
cltd
xor
mov
adc
pop
in
in
rolb
cmp
push
adc
add
shrb
aam
pop
dec
out
pop
mov
push
ret
mov
push
push
aaa
mov
add
jmp
stc
add
sub
or
cmpl
lods
ret
rcrl
rorb
sub
popf
sarb
shl
sahf
dec
loope
cwtl
pop
add
jmp
lea
adc
sbb
test
mov
mov
cmp
sahf
pop
movl
pop
loope
mov
lea
push
push
and
jmp
fwait
lcall
lods
movsl
arpl
and
sahf
in
fisubrs
lahf
inc
xchg
in
sbb
xor
aas
mov
sub
insb
adc
out
inc
xor
or
push
addr16
dec
push
std
insb
sbb
pusha
mov
pop
insl
js
and
mov
dec
push
and
sub
mov
xor
sbb
add
sub
sti
rcrb
jb
movsl
mov
xchg
push
fs
fs
bound
mov
mov
jmp
jge
hlt
mov
lds
sub
cld
xchg
mov
dec
jnp
shll
iret
jl
stos
jge
add
fwait
cmpsl
mov
pushf
pop
push
pusha
mov
fs
mov
decb
adc
lret
test
fidivrl
or
test
mov
add
mov
xor
cmp
sub
lret
fwait
and
lds
nop
loope
and
add
xor
repnz
inc
add
addr16
jge
out
clc
push
dec
loop
mov
das
lahf
xor
adc
decb
or
stos
jle
imul
mov
adc
out
insb
jl
adc
jg
or
movsl
sbb
cmp
rclb
jmp
rcrb
mov
sub
xchg
sti
bound
aad
ja
mov
movsb
stos
sahf
cmpb
jno
sahf
xor
sti
jl
shlb
aad
jnp
mov
mov
repnz
mov
call
add
insb
lahf
cltd
mov
loopne
ficoml
jne
mov
ret
dec
pop
cs
push
dec
psrlw
mov
ds
mov
rorl
or
inc
inc
mov
inc
inc
sbb
movsl
sbb
jp
call
jo
mov
in
xchg
shlb
roll
sub
cmc
pushf
lahf
and
or
movl
aaa
cmp
adcl
add
push
test
or
stos
add
packssdw
movsb
adc
fistps
sub
pop
mov
add
push
cs
jg
icebp
push
cmpsl
add
aad
repnz
addr16
cmpsb
stos
out
stc
std
cld
mov
push
xlat
sub
jmp
adc
out
sub
ljmp
mov
mov
imul
popa
movsl
push
cwtl
fsubrs
fcmovnb
mulb
push
outsl
addl
sbb
pushf
jne
sti
mov
or
mov
mov
jbe
pop
lds
push
icebp
push
adc
push
mov
cmpsb
inc
push
iret
mov
jbe
scas
addl
jge
inc
inc
ret
rcl
xlat
push
mov
add
int
push
push
mov
sbb
lahf
stos
jb
iret
cltd
movsl
inc
push
sub
cs
sahf
pop
gs
cmp
rclb
adc
push
dec
adc
jns
sti
in
pop
and
fs
fiadds
cmpl
xorl
xchg
sbb
jl
iret
xor
mov
jmp
stc
andl
stc
stc
sbb
not
test
mov
out
test
ss
pop
xchg
mov
inc
push
sub
ljmp
inc
andb
popl
adc
pop
stos
es
xor
or
es
adc
ret
mov
nop
or
ss
nop
ret
adc
dec
das
call
sub
jmp
adc
jae
mov
xchg
jo
push
jae
call
and
sub
push
jnp
pop
subl
js
fistps
jle
dec
adc
inc
xor
xlat
dec
cmpsl
lock
cwtl
jmp
adc
push
subb
cltd
cmovp
inc
fsubrp
fwait
xor
rep
sub
inc
insl
loopne
loop
sbb
push
pop
xchg
xchg
or
sbb
mov
add
rcrl
cmp
stc
inc
xor
and
and
pushf
inc
cmpb
clc
push
sbb
mov
jmp
adc
test
popf
loopne
add
lahf
test
int3
lea
pop
popf
and
decl
mov
add
sbb
push
in
xchg
pop
add
mov
push
ret
mov
outsl
push
iret
fisubs
stc
xor
inc
cli
loopne
mov
mov
pop
nop
imul
loope
jle
into
push
lahf
sub
sbb
push
aam
cmc
nop
jle
mov
ss
lahf
lret
or
cmp
jp
insb
and
mov
sub
in
xor
clc
sub
xchg
cmp
sbb
sbb
cld
call
dec
or
push
xchg
call
xor
rcl
out
lods
cmp
nopw
je
subl
cmp
adcb
jle
lock
outsb
push
mov
pop
cmp
and
pusha
cmp
fsubrp
pop
mov
add
pop
lods
popf
movsl
and
shlb
lds
leave
ret
push
add
aas
sbb
dec
add
sbb
mov
repz
shl
lret
insb
push
andl
sub
aaa
xor
clc
hlt
pushf
imul
into
enter
push
lds
mov
sub
mov
leave
adc
or
lahf
mov
clc
je
adc
jmp
movsb
sbb
mov
inc
lods
cmp
cmpxchg
movsl
fmuls
add
decl
sub
repz
dec
ret
sbb
cmp
xchg
ret
cmc
push
pusha
pop
adc
or
add
mov
adc
out
xlat
pop
int
mov
cwtl
pop
adc
xor
mov
cwtl
mov
adc
mov
xor
arpl
adc
ljmp
imul
pop
adc
push
inc
js
jl
inc
mov
cmp
mov
mov
pop
adc
cwtl
ljmp
pop
adc
sbbb
pushf
pop
pop
adc
pop
sub
lods
insb
pop
adc
and
mov
xor
pop
adc
mov
mov
mov
adc
push
mov
in
push
out
mov
pop
adc
xor
fmull
pop
adc
sbb
imul
pop
adc
pop
aas
jl
mov
adc
into
lea
xchg
sub
pop
ja
adc
inc
stos
pop
pop
test
fisttpll
dec
dec
xor
out
loopne
pushf
jl
adc
pop
inc
cmpl
pop
adc
repnz
xchg
xchg
jmp
pop
pop
je
cld
popw
adc
adc
test
jnp
adc
mov
sub
movsb
fdivl
inc
int
scas
push
and
inc
add
xchg
pop
adc
shrl
adc
sbb
mov
xor
out
jg
mov
sbb
movsl
push
cmpsb
dec
dec
lds
mov
sarl
cmp
lret
mov
push
aaa
pop
fdivrs
insb
fs
mov
jecxz
xor
fsubp
out
dec
xor
jae
add
cmpsb
incb
xor
xor
push
cmp
stc
cmp
aam
push
mov
inc
inc
pusha
or
in
aaa
mov
push
dec
ret
enter
int
xchg
arpl
add
fcmovnu
pop
xor
jo
dec
pop
adc
outsl
lret
rcll
cmp
ret
sub
adc
pop
test
imul
pop
xor
in
js
enter
rolb
xchg
xchg
loope
xchg
sbb
cmp
adc
call
dec
ss
test
mov
add
aam
inc
adc
adc
nop
sub
lock
or
mov
sub
arpl
bound
movsl
sbb
mov
lods
aam
divb
test
push
or
add
sub
xor
cmc
push
cmp
jmp
adc
inc
fistpll
jne
sahf
pop
adc
int
sahf
pop
adc
leave
push
lods
dec
sahf
pop
adc
andl
mov
push
adc
ja
pop
mov
out
cli
mov
pop
pop
mov
add
jb
inc
fiaddl
notl
mov
jmp
or
mov
movsl
pop
mov
ds
call
call
xlat
pop
or
xor
cli
hlt
pushf
imul
jg
jmp
add
or
mov
or
jecxz
pop
pop
mov
lds
loopne
imul
dec
add
sbb
sbb
jne,pt
test
mov
pop
pop
outsl
sahf
and
js
sub
xchg
adc
testl
adc
faddl
jo
imul
cmc
orb
cmp
insl
ljmp
jne
mov
int
das
aad
push
push
or
xlat
mov
inc
insb
clc
mov
jmp
add
push
adc
or
arpl
cmp
mov
add
lea
xchg
add
xchg
in
mov
mov
imul
jmp
jnp
ljmp
das
nop
mov
xchg
jae
xchg
inc
mov
pusha
nop
imul
inc
sub
mov
dec
aam
pop
pop
adc
divl
xchg
out
inc
fisubrl
inc
int3
push
andl
inc
xor
jae
bound
xchg
shrl
mov
mov
xchg
adc
jo
adc
rclb
and
xchg
push
in
inc
xor
jp
adc
dec
jne
fisubrl
cwtl
adc
add
and
mull
xor
inc
adc
xlat
cmp
jg
pop
mov
fs
pop
aaa
cmp
stos
scas
das
mov
jno
jg
jmp
jmp
and
adc
fiaddl
push
sti
dec
jmp
lds
xchg
shlb
and
daa
dec
std
ljmp
repnz
mov
sbb
pop
shll
int3
add
ss
lcall
nop
ds
and
jg
push
sub
les
dec
dec
inc
xchg
mov
es
pop
or
test
loop
lea
adc
push
inc
mov
adc
addr16
adc
rol
aad
or
insb
ja
jg
outsb
push
xchg
sub
clc
sar
or
mov
sbb
pop
mov
or
sbb
in
insl
xchg
and
in
and
sub
mov
mov
mov
adc
push
fnsave
ja
xor
push
cld
call
in
add
push
jp
int3
rdmsr
lahf
add
test
add
cmpsb
mov
xor
scas
cmp
or
xchg
lds
sub
inc
scas
push
in
loopw
mov
pop
cmpsb
dec
sbb
mov
das
jge
sti
fimuls
sub
pop
xchg
jecxz
mov
and
pop
mov
dec
cwtl
pop
dec
stc
inc
adc
imul
add
arpl
push
and
jecxz
mov
clc
js
jno
mov
xor
jg
stc
mov
movsb
push
enter
mov
pop
enter
and
add
jnp
ljmp
imul
shrl
stc
mov
inc
fdivrs
popf
and
test
jno
incb
xor
cmc
mov
imul
inc
pop
shll
cmpl
lret
int
pop
mov
pop
push
jae
push
mov
inc
cmp
inc
movsl
mov
and
insb
lcall
pop
out
inc
or
cmpl
jp
or
mov
mov
sub
push
xor
hlt
xchg
sub
xor
mov
ljmp
lods
js
add
stc
or
push
jl
shr
aad
rcll
add
adc
imul
adcb
mov
lds
adc
in
rorb
hlt
call
clc
addl
lret
sub
sti
mov
add
pop
inc
movsb
scas
aaa
ds
imul
cld
arpl
sahf
cmp
mov
or
cs
dec
enter
cmp
dec
pop
call
dec
mov
and
push
dec
push
jo
decl
aas
sub
jnp
leave
or
mov
adc
in
inc
mov
addb
add
rol
test
mov
and
push
adc
movsb
or
clc
cld
incb
imul
popf
jns
ljmp
fimull
insb
jl
adc
enter
cs
aaa
cmp
imul
sub
pushf
aas
leave
cs
add
mov
in
xchg
cmp
ret
jl
inc
push
fwait
in
pop
and
push
adc
inc
shl
loope
std
jecxz
xor
jbe
adc
orl
repz
push
adc
out
rcll
insb
jl
adc
sub
out
adc
dec
test
xlat
jecxz
pop
pop
or
mov
cs
add
mov
push
adc
cmp
or
dec
dec
mov
add
xlat
push
call
sti
mov
loope
pop
lods
mov
sarw
daa
in
add
lcall
popa
cmp
mov
cmpsb
hlt
sarb
mov
sbb
loop
mov
mov
nop
in
cwtl
std
mov
xor
lods
lret
push
cld
mov
push
daa
mov
mov
and
xchg
fcmovu
dec
std
push
mull
imul
push
push
mov
cmpsl
push
adc
icebp
mov
cmpsl
dec
jmp
imul
xchg
std
idivb
and
push
adc
inc
push
mov
cmp
cmp
mov
repz
mov
adc
icebp
jne
and
lret
insb
jl
adc
inc
mov
dec
dec
push
stos
bound
aas
cmp
aaa
xor
hlt
jecxz
push
adc
jnp
mov
pop
add
clc
fmull
jae
adc
xchg
and
add
bound
sahf
push
mov
ja
sub
pop
push
xchg
mov
mov
adc
xchg
adc
adc
pop
cmpsb
popf
mov
aas
stc
inc
sarb
mov
fwait
ljmp
cs
mov
stc
shlb
icebp
in
jle
out
loop
sti
fwait
andb
adc
and
fisttps
cmp
pop
mov
xchg
or
sbb
xchg
push
dec
pushf
mov
adc
lods
ficoms
adc
mov
and
jnp
xchg
aad
inc
popa
and
outsb
movsb
cs
test
lret
add
adc
rcll
pop
mov
jno
mov
in
mov
and
adc
push
cmp
orb
dec
call
dec
cwtl
loopne
jp
pushf
mov
adc
mov
pop
insb
jl
adc
sub
add
mov
mov
or
cs
jo
jecxz
and
dec
add
daa
aad
jo
pop
and
addr16
sub
and
adc
ja
cli
mov
pop
xor
mov
or
mov
push
adc
lods
pusha
lock
mov
jl
adc
ror
pop
mov
mov
mov
out
popf
repz
shl
lret
insb
push
push
mov
pop
pushf
fidivs
inc
inc
jno
xchg
push
inc
mov
loop
fstpt
lahf
jmp
out
jg
or
cli
aam
inc
jns
jb
or
cmp
mov
jne
pushf
pop
das
and
hlt
and
jns
movsb
sbb
xchg
jle
jns
push
lods
cmp
bound
dec
or
call
pushf
jmp
call
add
out
push
js
xchg
leave
in
push
ljmp
test
imul
mov
cmpsl
sub
adc
fadd
jne
rcrb
mov
ja
hlt
bound
mov
mov
pop
dec
iret
icebp
push
popf
jmp
iret
pushf
cmp
sbb
cmp
out
pop
cs
xlat
jns
loope
pop
out
adc
add
jmp
and
mov
inc
xchg
js
call
cmc
push
popa
sbb
and
push
adc
sarb
pop
lea
jp
hlt
int
add
pushf
mov
adc
test
push
insb
jl
adc
sub
lods
adc
clc
mov
scas
add
add
cmp
cmpsl
cmc
fcomp
cmpsl
xchg
xchg
jno
mov
push
pop
adc
add
mov
xchg
mov
sub
aaa
or
mov
sbb
roll
pop
stc
lea
cmpsb
fsubl
push
and
stc
sarl
sbb
lret
nop
das
push
lret
jns
ficomps
cmp
sub
mov
inc
xor
rorb
scas
mov
dec
push
icebp
insb
orb
lahf
mov
cmp
mov
into
sbb
xor
adc
idiv
mov
dec
stc
test
push
in
add
insl
bound
lds
adc
add
jecxz
pop
cmp
add
lods
fs
addb
dec
decb
mov
add
mov
rorb
sub
jl
rorb
iret
and
adc
outsl
mov
dec
pop
xor
xlat
cmp
jl
pushf
in
or
mov
sub
or
jl
mov
sub
mov
out
lods
and
jge
xor
xchg
out
adc
xchg
std
pop
popf
mov
jge
add
mov
jnp
cld
inc
push
stos
sahf
cmc
ror
ss
pop
fisubl
mov
xor
jne
mov
test
insb
outsl
mov
lods
xor
xor
outsb
out
sub
mov
xor
in
fs
pop
pop
mov
dec
push
icebp
fsub
aas
aad
jle
mov
mov
xor
stos
pop
ss
pop
push
mov
cltd
scas
jecxz
inc
mov
cmp
and
jge
sub
adc
icebp
arpl
cmp
loopne
imul
sti
xlat
xor
xchg
mov
pop
sbb
std
stos
faddl
mov
push
ret
sub
mov
and
mov
es
stos
mov
adc
sti
notb
sti
roll
mov
push
js
andnps
mov
dec
pop
jle
xor
inc
push
jl
cmp
fsubrp
jg
je
sub
orb
insl
outsb
je
and
es
stc
jo
in
clc
or
movsl
test
cltd
subl
mov
inc
mov
fst
in
xchg
cli
shll
jp
xor
mov
adc
mov
adc
inc
inc
xchg
mov
mov
movsl
push
xor
sbbb
lret
dec
call
pop
dec
mov
leave
fisttpl
out
call
pop
push
pop
or
test
jbe
loopne
movsb
xchg
push
mov
aaa
sub
push
int3
sbbb
jne
xchg
jmp
ret
mov
lcall
mov
adc
ljmp
lea
sub
jbe
pop
call
push
pop
add
das
ja
cmp
add
stos
lret
dec
call
mov
pop
gs
push
outsl
or
ja
mov
mov
clc
and
or
push
fsubrp
out
in
add
or
jg
xor
testl
sub
repnz
adc
mov
ret
notl
inc
lock
imul
stos
mov
jmp
mov
fwait
nopl
imul
sbb
movsl
pushf
roll
cmc
mov
pop
push
jb
push
mov
dec
mov
in
add
sahf
cmp
mov
incb
push
push
andb
aaa
pop
add
insb
cmp
push
pop
push
jo
lahf
adc
add
xor
int
int3
xchg
push
out
dec
dec
call
xor
or
mov
and
push
mov
fdivp
arpl
add
dec
hlt
lods
xor
jmp
adc
dec
mov
sbb
out
push
loopne
loop
setns
sbb
pop
lods
mov
sub
lods
sbbl
sarb
or
imul
mov
js
fistpl
rcrb
push
shlb
and
lahf
xor
sahf
mov
sub
clc
mov
test
into
test
orl
cs
add
sbb
mov
jmp
jnp
adc
ja
cli
lcall
call
sahf
sub
mov
jp
jae
push
aam
out
arpl
inc
call
test
movsl
pop
repnz
adc
arpl
das
jmp
rcll
adc
imul
aas
stos
adc
and
cli
or
imul
push
xchg
leave
cmp
cmpsl
cmp
arpl
pop
cmpl
and
mov
adc
out
insl
jae
cmp
xchg
or
push
jb
jo
sub
adc
ret
mov
jae
or
fldt
mov
dec
push
and
jp
mov
xchg
pop
sub
clc
cmp
divl
test
int3
jg
mov
cmc
mov
sbb
fisttpl
cwtl
in
cmp
cs
in
xchg
add
adc
out
cmc
xor
aas
repz
cwtl
or
xor
cmp
js
cmc
fld
or
les
jb
cmp
jae
sub
imul
mov
loop
xorl
mov
xchg
test
popa
js
sbb
pop
or
fldl
or
int
jae
cmp
mov
adc
mov
mov
leave
dec
or
mov
inc
adc
push
fwait
int3
cmp
inc
push
jmp
cmp
addr16
mulb
iret
mov
mov
sahf
mov
and
jb
pop
xor
out
dec
inc
dec
sub
lret
call
jge
xor
xchg
aas
jle
mov
adc
and
jns
jge
mov
outsl
hlt
jge
fnstsw
imul
adc
rorl
xor
mov
lods
sub
add
in
inc
adc
or
xor
popa
ljmp
add
push
mov
pop
pushf
bnd
pop
pop
jge
mov
pop
sub
clc
lcall
subb
mov
jmp
inc
mov
int
lret
inc
mov
pushf
mov
add
mov
andl
push
inc
paddb
adcl
adc
aam
push
adc
dec
adcb
adc
sub
lret
scas
cli
xor
rcrb
leave
cmp
or
jp
and
jnp
push
and
jl
sti
jbe
jg
rorb
int
pop
das
aad
je
cwtl
aad
or
and
mov
mov
ljmp
jmp
lock
mov
mov
cmp
in
idivb
cmp
inc
ja
iret
jl
mov
aad
xor
sbb
push
adc
add
inc
addb
adc
or
or
xchg
push
inc
lods
add
inc
fdivrs
lcall
insl
sub
push
adc
daa
cmpsl
jg
data16
out
mov
in
inc
sbb
mov
stc
push
cmpb
lahf
loop
cmp
repz
add
sub
hlt
mov
shll
adc
adc
arpl
jmp
adc
push
adc
pop
jg
cs
inc
das
leave
pushf
into
jecxz
mov
mov
sub
scas
ret
dec
xchg
pop
adc
mov
clc
movsl
push
rorl
jl
fistpl
rcrb
push
fimull
movsl
cmp
fstps
sub
loopne
sbb
sbbl
jg
pop
mov
dec
dec
xor
xchg
xor
adc
mov
mov
sub
mov
mov
jae
adc
ja
cli
lcall
xor
push
adc
hlt
movsl
cmp
cmpsb
fistl
xchg
inc
cld
out
inc
adc
test
add
push
mov
loop
sub
push
adc
inc
iret
xchg
cli
sbb
dec
loop
lods
sub
bound
hlt
stc
out
sbb
ja
and
dec
daa
mov
or
cli
imul
je
cmp
out
bound
mov
push
push
pusha
lret
into
sbb
xchg
test
pop
xchg
cli
ficomps
pushf
sub
push
mov
dec
mov
out
mov
jbe
mov
jp
mov
xlat
pusha
mov
add
jp
push
sar
adc
push
adc
cmpsb
jne
jecxz
adc
js
mov
mov
scas
xor
or
in
adc
adc
sub
cs
push
pop
fiaddl
orps
mov
daa
lret
dec
aaa
dec
mov
shrb
in
out
mov
clc
jnp
push
xchg
sub
cs
lret
add
lds
fwait
test
call
push
sbb
inc
cli
out
pop
cmpsl
ljmp
jb
shlb
add
movsl
inc
sub
sahf
out
addb
nop
jnp
fcoms
adc
mov
add
cmp
dec
mov
mov
lods
jbe
fisttpll
stos
xchg
idiv
mov
mov
push
adc
sub
push
addl
jmp
enter
cmpsb
imul
lds
pop
jno
dec
rorl
jbe
cld
mov
jne
fsubrs
sbb
cmp
adc
mov
dec
repnz
jecxz
negl
mov
in
rcll
out
xchg
cmpsl
pop
das
and
mov
sbb
or
mov
inc
pop
inc
add
jle
sub
mov
ljmp
je
sahf
fsts
sub
ds
sbb
adc
call
mov
jbe
leave
jp
cmp
sub
hlt
add
shll
jl
add
adc
jns
xor
hlt
add
sub
mov
sar
cmp
pop
lds
test
add
leave
jo
lods
jns
xchg
ljmp
popa
cmp
movsl
add
shr
decl
je
loope
movsl
cmp
push
call
and
nop
repz
pop
jg
icebp
rcrb
cltd
jg
mov
out
add
and
inc
gs
adc
shr
pop
cli
subb
js
leave
mov
push
xlat
data16
mov
cmp
pusha
sbb
push
push
std
xor
in
nop
and
cmp
xchg
add
andb
or
pop
pop
jne
jg
stos
test
stos
orb
mov
scas
push
leave
dec
ljmp
inc
pop
xor
jge
cmp
insl
mov
std
mov
sbb
dec
shr
leave
pop
out
aad
mov
aas
call
cmp
hlt
scas
das
iret
ret
or
or
movsl
movsb
cli
jmp
dec
push
add
sbb
pop
sub
push
xchg
push
mov
dec
pop
adc
jnp
cmp
pop
leave
fisttps
dec
movsl
sbb
sahf
adcb
insl
lods
sub
fnstenv
int
pushf
mov
cmp
adc
xchg
lahf
loop
mov
mov
sub
pop
push
xlat
cmp
es
xchg
out
pop
pop
adc
pusha
pop
popa
fimull
cmp
dec
dec
inc
subl
jge
and
mov
adc
mov
clc
push
xchg
or
leave
cmpsb
je
cld
clc
fiadds
ds
cmp
xor
shrb
fld
fidivl
add
cmp
movsl
stc
sbb
fldt
subb
loopne
pop
adc
into
add
gs
pusha
adc
ja
mov
lret
out
sbb
add
adc
lods
adcb
lea
fs
adc
mov
push
cs
mov
push
add
jmp
xchg
jbe
mov
push
fsub
add
out
jg
int3
sub
imul
xchg
xchg
nop
add
rcrl
in
adcb
jns
and
jmp
pop
inc
adc
test
and
aam
pop
ror
cmc
shr
out
rcl
xor
cs
mov
mov
jmp
pop
dec
out
cmp
imul
or
mov
aad
lret
mov
jge
loopne
dec
xchg
pop
jecxz
insl
push
scas
push
inc
int3
jo
cltd
fldl
add
in
jecxz
xor
ret
scas
movsl
sbb
lahf
add
jns
jae
rorb
arpl
jb
mov
ret
xor
aad
dec
jmp
dec
mov
pop
insb
andl
fsubs
mov
aas
adc
cmp
std
je
xchg
les
and
aaa
jns
scas
fistpll
mov
jl
call
fwait
lock
sti
and
ljmp
ja
add
lret
mov
popl
inc
scas
insl
xchg
imul
cld
hlt
pushf
pop
pop
mov
cmp
fsubrs
sbb
clc
hlt
inc
inc
pop
xor
clc
hlt
pushf
arpl
ret
pop
std
in
mov
icebp
pop
in
jge
cs
jne
hlt
loopne
mov
add
jb
dec
jno
aad
dec
pop
adc
push
mov
xor
pop
lcall
mov
jmp
into
popf
rol
movsl
sub
cmp
mov
sbb
mov
movsb
gs
adc
scas
pusha
fsubrs
jo
lock
jl
icebp
lods
aaa
movsl
sub
and
mov
inc
notl
frstor
jl
jne
push
ja
adc
inc
jp
jle
inc
mov
cmp
pop
ja
or
mov
adc
pop
mov
testl
adc
notl
aad
call
in
mov
das
pop
aas
and
ljmp
lock
fld1
cmp
adc
cmp
jo
jg
mov
adc
mov
adc
mov
adc
mov
sub
outsl
pop
adc
inc
mov
push
sub
adc
xor
int3
pusha
pop
adc
cld
and
and
pop
adc
jle
add
call
mov
cmc
sbb
in
cmp
clc
mov
adc
xchg
xor
jp
mov
adc
adc
push
loope
aas
cmp
or
hlt
pop
test
dec
test
mov
jbe
jle
shrl
inc
fldenv
aas
add
fsubrl
lods
sti
bound
mov
dec
mov
pop
fldcw
imul
decl
xor
inc
sarb
mov
aas
faddl
jnp
jnp
pushf
pop
scas
aam
pop
mov
nop
sbb
mov
add
stc
sbb
push
aam
fs
repnz
adc
add
leave
dec
ljmp
mov
mov
mov
add
pop
or
push
jne
mov
mov
loopne
imul
jp
dec
jno
jp
insb
stos
push
stc
shlb
add
add
mov
pop
adc
pop
outsl
std
je
jmp
inc
jo
adc
add
sub
mov
insl
push
mov
xchg
movb
sbb
lds
ret
sbb
addb
mov
lds
lret
adcb
push
outsb
cmp
push
adc
repnz
sbb
mov
xchg
sub
outsl
dec
sbb
mov
pushf
sub
js
and
sbb
aas
imul
sbb
dec
dec
fwait
pop
ljmp
fmull
add
insb
insl
out
subl
dec
pop
adc
fisubl
push
pop
mov
adc
ret
roll
sub
jle
bound
insl
xor
test
mov
insb
add
jp
add
cmp
pop
fs
dec
aam
lods
jl
hlt
inc
jle
ds
mov
stos
adc
add
adc
push
int
and
ljmp
push
push
rcl
aad
cmp
mov
cmp
outsl
pop
adc
jo
cmp
pop
std
pop
dec
cmp
push
adc
out
addr16
and
jno
push
out
add
test
enter
mov
jo
adc
sub
push
push
je
ljmp
fnstsw
push
ljmp
in
ret
jae
xchg
lret
aam
dec
aad
jae
into
popf
mov
sbb
add
rolb
xchg
xlat
jge
jg
mov
adc
and
loopne
pushf
jl
adc
xchg
js
jne
push
jbe
adc
mov
insl
cld
popw
adc
fs
xor
mov
adc
loopne
js
lcall
bound
mov
lea
ljmp
je
les
loope
inc
mov
movsl
push
ljmp
outsl
or
stos
sbb
sub
dec
xor
pop
mov
push
adc
push
outsl
or
or
popa
lret
clc
hlt
pushf
push
call
bound
test
lret
add
sub
pop
adc
add
mov
adc
fdivs
fiaddl
add
cmc
imul
dec
loopne
fs
shrl
or
inc
ret
mov
test
mov
pop
mov
push
dec
insl
and
xor
mov
mov
xchg
jmp
xchg
mov
cmpsb
mov
dec
les
fistl
pop
mov
mov
jge
mov
jl
imul
cmpsl
adc
mov
arpl
mov
dec
lock
loope
loop
mov
or
xchg
push
jp
xor
mov
loope
pop
push
aad
inc
clc
push
call
ljmp
push
loopne
in
cli
test
dec
roll
adcl
addl
ss
jmp
imul
call
sub
cmp
popf
pop
std
xchg
lods
arpl
add
out
push
js
mov
or
shlb
add
jns
push
std
inc
lahf
sahf
push
add
pusha
add
mov
shrl
lahf
rcrl
cltd
movsl
lcall
push
xchg
mov
xchg
push
jle
mov
cld
dec
dec
dec
fcoml
fsubl
or
mov
pop
das
xchg
ret
jae
push
outsb
xchg
xchg
sub
push
popa
cmp
je
orl
dec
filds
push
and
iret
outsl
adc
add
pop
sbb
nop
jmp
or
and
sbbb
shl
mov
mov
jae
dec
pop
out
je
jo
cmp
ljmp
or
xor
ret
mov
ret
or
mov
inc
xor
stc
add
mov
jp
dec
pop
adc
enter
xor
outsb
es
rcrl
jl
lods
lret
clc
stos
or
mov
sub
jp
adc
jle
sti
mov
jp
pop
jge
and
sbb
xchg
das
sub
unpckhps
jg,pn
out
bound
sahf
push
mov
mov
rcll
or
movsl
dec
cmp
push
xchg
sbb
inc
repz
push
cmp
jmp
xlat
dec
dec
cmp
lahf
icebp
adc
es
mov
repz
decl
lods
jbe
ror
movsl
movsl
mov
pushf
addb
pop
pop
mov
inc
add
jae
jecxz
pop
popf
cwtl
sub
sbbb
cmp
out
sub
sbb
add
subb
roll
sub
push
sub
mov
fcoms
popa
test
adc
xor
adc
add
inc
inc
enter
jo
pop
adc
xchg
jbe
sbb
mov
mov
pop
dec
jge
nop
out
in
popl
rcll
mov
stc
cmp
call
bound
test
pop
adc
push
ljmp
dec
iret
shl
repnz
mov
adc
mov
xchg
mov
inc
push
xchg
aas
cmpsb
sbb
test
xchg
pop
fidivrs
inc
cmp
out
pushf
push
mov
mov
adc
inc
xchg
aam
leave
insb
cwtl
cmp
cli
mov
adc
xor
or
pop
adc
add
add
cmp
and
dec
loopne
hlt
jg
jg
adc
push
shll
enter
adc
mov
pop
adc
fisttpl
mov
xchg
movsb
lret
mov
lock
outsl
sub
shl
lods
sbb
jg
popa
call
out
sahf
adc
add
mov
add
ljmp
punpckldq
ss
sbb
inc
shr
pushf
mov
sti
adc
mov
dec
iret
shl
inc
js
inc
sub
adcl
add
std
ljmp
outsl
or
mov
or
pushf
imul
ret
popf
cmp
in
mov
call
ret
pop
add
in
add
pop
das
ficoms
jo
pop
adc
lock
lea
adcl
loopne
movsb
sub
add
adc
sbb
shll
mov
xlat
dec
mov
mov
rorb
loope
jl
inc
sbb
mov
cmp
outsl
sti
push
lea
jp
hlt
test
jmp
push
aas
xor
sbbb
and
xchg
push
loope
aas
dec
and
ljmp
clc
cwtl
push
mov
inc
arpl
bound
cltd
push
test
xchg
or
imul
push
cld
mov
stos
jo
incb
mov
fwait
cmc
adc
xor
pushf
jbe
cmp
jge
imul
shl
fidivl
push
pushf
pop
cmpsl
pop
mov
sbb
aaa
insb
xlat
or
jb
dec
cmp
sub
sbb
loope
dec
cmp
ds
and
or
lret
repnz
jecxz
lods
xchg
int3
dec
inc
insb
loope
or
jle
mov
and
or
arpl
add
jb
sarb
divl
dec
pop
adc
ljmp
or
jo
dec
jbe
push
xchg
in
pop
popf
shlb
pop
loop
addr16
lds
pop
adc
outsl
pop
bound
ja
inc
ret
adc
mov
push
xor
adc
dec
jne
dec
sub
and
in
pop
adc
cmovl
push
addl
and
int3
subb
mov
adc
cmp
and
int3
mov
or
mov
ficoms
push
jnp
jl
test
or
int
stos
gs
inc
adc
jg,pn
out
bound
sahf
push
mov
jl
mov
xor
push
xchg
or
int
or
push
mov
fisubs
out
pop
repnz
pop
inc
dec
adc
dec
ljmp
pop
and
push
mov
out
jle
jns
repz
or
insl
loopne
or
insl
arpl
mov
out
insb
arpl
cmp
imul
test
lcall
nop
pop
pop
and
int3
andl
test
ja
add
stos
repnz
cs
push
dec
pop
imul
bound
jbe
pop
cwtl
rcl
mov
sbb
in
mov
adc
mov
mov
adc
mov
shll
sti
jmp
sbb
add
fcmovnbe
dec
inc
test
or
fidivl
or
mov
cmc
pushf
pushf
sbb
xlat
call
xor
pop
aaa
addl
pushf
push
mov
repz
sub
inc
or
mov
adc
sub
dec
or
movsl
xchg
push
aad
xor
stc
aam
popa
cmpsl
adcb
mov
or
pop
xor
mov
sub
inc
sub
cmp
mov
adcb
cli
jo
cmpsb
int
add
xlat
lds
mov
out
pop
outsb
test
loope
imul
or
lock
or
sahf
push
ret
sub
xor
push
mov
sbb
aaa
mov
lds
inc
add
aad
jbe
cmc
pop
hlt
jmp
mov
in
sbb
xchg
mov
mov
xor
sub
sbbl
inc
js
enter
mov
sub
pusha
and
ljmp
mov
lock
sahf
pop
pop
aaa
ds
mov
aad
pop
out
clc
push
es
mov
das
inc
push
xchg
das
pop
loop
cmpsb
pop
mov
or
push
jae
xchg
int3
les
int
sub
cld
pop
enter
jmp
push
xchg
in
jbe
cmp
enter
sub
leave
mov
out
jecxz
shlb
test
jle
loop
das
in
add
test
dec
add
xor
pop
xchg
push
mov
xor
push
mov
xorb
call
cli
jmp
add
call
fmull
daa
je
dec
ss
jns
pop
gs
aad
loopne
rorl
outsl
out
adc
jno
pop
inc
and
loopne
add
xchg
push
out
sub
loope
jno
lea
add
jl
dec
ja
fdiv
into
lahf
dec
scas
jge
sti
sbb
pop
test
pushf
nop
lods
jbe
push
out
add
fwait
pop
cmp
dec
adc
dec
fwait
popa
cld
fs
out
jl
dec
cmp
addr16
and
add
mov
das
xchg
shrb
rol
mov
jb
mov
push
inc
cwtl
mov
js
push
mov
push
inc
add
cmpsb
sub
cmp
add
notb
xchg
pop
or
dec
cmpsb
cmpsb
pop
shll
sbb
dec
ss
bound
jg
mov
insl
mov
int3
xor
jbe
or
jp
jl
popl
dec
jle
jb
xchg
nop
into
pop
adc
or
push
xlat
jno
sbb
out
push
sbb
fildll
jae
sar
stos
in
adc
imul
cmp
dec
sub
mov
inc
xor
xchg
pop
nop
shlb
fs
xchg
adc
inc
sbb
bound
jmp
and
or
imul
push
test
scas
mov
and
int
pop
mov
pop
xorl
dec
int3
pop
faddl
add
mov
and
pop
lcall
xchg
ret
cltd
rcrb
or
or
jo
inc
pop
add
sbb
cmp
std
mov
mov
sbb
enter
shll
call
pop
pushf
mov
mov
xor
push
mov
jne
cld
out
stos
xchg
push
dec
mov
stos
jnp
jne
push
adc
std
add
in
jo
mov
push
dec
leave
push
sbb
cltd
dec
rcrl
outsl
push
ja
pop
inc
mov
mov
push
fsubrs
sbb
cmp
dec
mov
push
jg
xlat
add
push
lret
bound
xor
rcrl
pop
ret
shll
ja
jge
pusha
sarl
arpl
push
mov
jecxz
sbbl
sub
xchg
call
outsl
or
les
push
mov
jecxz
jg
inc
mov
jle
aaa
jp
sbb
sub
es
jbe
incl
stc
mov
xchg
out
sub
addl
mov
mov
out
or
call
movsb
adc
cs
xorb
pop
andl
enter
push
insb
xor
or
xchg
ljmp
repnz
and
pop
inc
stos
stc
push
push
mov
jecxz
jg
inc
repz
rol
andb
dec
cwtl
out
inc
fsubrs
std
jmp
arpl
jne
jmp
push
jge
repnz
mov
es
mov
xor
js
xchg
test
cmc
or
inc
inc
imul
lods
lcall
inc
sbb
fcoml
call
std
orb
mov
mov
aam
and
cmp
xchg
and
push
cs
xor
andb
cwtl
xchg
inc
xchg
xor
int3
dec
dec
xlat
mov
in
lahf
arpl
iret
out
ljmp
ss
or
cltd
or
push
xor
das
mov
in
add
clc
decl
sub
loopne
jmp
jecxz
jae
repz
pop
insl
jae
jg
push
jl
pop
fbstp
pop
and
ss
adc
dec
inc
push
adc
xor
popf
add
inc
pop
aad
pushf
clc
inc
loop
lds
fldt
adc
mov
lcall
aas
inc
rolb
lds
mov
adc
into
mov
fcomps
cwtl
mov
jo
fbstp
mov
inc
mov
or
push
mov
scas
and
les
ds
lahf
cld
mov
mov
mov
add
sub
out
jge
inc
lea
add
cmpb
jmp
nop
bound
imul
enter
pop
inc
or
shll
ficoms
sar
movsl
aam
dec
test
mov
sbb
std
movsb
jmp
dec
cmpsb
int3
cmpsl
dec
add
mov
jae
sub
sbb
lods
scas
lods
pop
arpl
scas
imull
gs
add
int3
dec
sbb
les
icebp
data16
add
pop
inc
pop
in
and
pop
lcall
dec
gs
fldl
xor
mov
adc
add
aad
mov
push
sbb
pop
cmp
mov
jl
bound
mov
lock
inc
jmp
pop
leave
xchg
cmpsb
mov
or
cs
pop
mov
fwait
dec
push
add
mov
pop
fcmovne
cmc
jle
lods
shrl
mov
aad
cwtl
pushf
lret
sbb
arpl
pop
xchg
and
or
aaa
jb
lds
movups
cltd
addr16
lret
inc
mov
daa
adc
rol
mov
mov
arpl
into
add
out
push
iret
mov
cmpsl
mov
out
sbb
mov
out
scas
iret
mov
in
xor
xchg
adcb
add
sbb
mov
test
or
or
or
xchg
clc
outsl
in
add
clc
xor
fists
cmp
cmc
sbb
xchg
push
pop
enter
adc
mov
xor
fcmovnbe
roll
mov
inc
mov
cmp
fldcw
push
jnp
aam
ss
push
or
jp
rcll
addr16
jnp
aas
idivl
push
call
add
jae
push
mov
dec
mov
in
add
pushf
cmp
add
and
mov
inc
cmpsb
cmp
or
imul
xor
sub
jl
das
aad
push
mov
popf
jnp
sub
adcb
leave
ja
xorl
clc
orb
decl
pop
mov
sub
lds
pop
movsl
adc
mov
call
ret
mov
mov
icebp
loopne
rorl
inc
jae
cwtl
push
dec
jl
pop
lds
ja
jg
jns
leave
push
cli
mov
inc
loopne
or
dec
stos
mov
hlt
call
test
stos
xorb
cs
mov
into
push
ja
arpl
mov
add
jg
xchg
in
add
das
pop
cmp
pop
adc
aad
or
mov
jecxz
jecxz
inc
xchg
mov
pop
push
das
adc
bound
hlt
shr
push
idiv
cli
xchg
mov
xor
outsl
lahf
and
jb
inc
ror
popf
imul
pushl
add
jp
les
aad
jne
popf
mov
mov
jge
jmp
std
or
inc
test
roll
inc
or
das
mov
movsl
sbb
add
mov
inc
mov
mov
fs
icebp
jecxz
adc
or
repz
out
loopne
dec
add
loop
pop
mov
je
ds
cmpsl
das
ljmp
loop
in
es
cmp
pop
flds
xchg
xor
push
out
in
add
mov
sarl
dec
pop
adc
rol
and
in
insb
fbstp
insl
dec
mov
pop
rcl
pop
test
sub
inc
test
sub
fisttps
fdivl
hlt
xor
xor
aas
das
mov
das
cmpl
pop
pop
lock
mov
xchg
xchg
out
pop
addb
cpuid
int3
mov
cmc
fs
sub
ret
lods
ss
inc
es
pop
xchg
enter
push
xor
jmp
stos
aam
int
fmulp
insb
add
inc
int
sub
fiaddl
sbb
sub
call
into
faddl
sti
sub
pop
pop
and
lret
or
push
add
xor
outsl
pop
or
pop
sub
push
fwait
fwait
lcall
aad
push
xchg
fcmove
sbb
xchg
and
lods
rorb
test
dec
ret
popa
mov
out
mov
cmpb
jbe
ja
xchg
iret
pop
mov
xor
jg
and
xorl
adc
sbb
js
pop
imul
shlb
scas
rcll
cmp
jnp
sub
inc
xchg
sbb
in
add
rcrl
xchg
jo
pop
adc
jmp
pop
sub
jbe
adc
xor
sti
and
aaa
mov
push
popf
ljmp
cmp
and
xchg
jae
pop
pop
loope
mov
aad
sarl
adc
loope
xchg
mov
xorl
cmp
sbb
sbbb
dec
idiv
dec
jo
push
rcr
add
sbb
add
sbb
lret
adc
or
orl
test
addr16
mov
add
addl
dec
pop
adc
push
rolb
out
sbb
pop
adc
mov
pop
shr
mov
call
adc
dec
shlb
lds
gs
int3
adc
dec
imul
jns
icebp
lods
sbb
xchg
jg
pop
lcall
bound
mov
add
push
rclb
inc
xchg
lods
inc
shll
adc
add
mov
push
mov
jmp
cmp
jge
out
stos
jp
mov
add
mov
mov
decl
pop
xchg
rorb
inc
jno
arpl
mov
mov
ljmp
int3
mov
xchg
lock
fadd
ja
pop
in
xchg
push
push
pop
lcall
inc
mov
hlt
jg
sbb
dec
shrb
sub
lea
jecxz
bound
mov
push
and
mov
fdivs
sub
add
add
in
pop
jns
sub
xchg
adc
testl
adc
push
sub
test
lods
xchg
pop
adc
dec
fistps
ss
iret
jbe
push
outsl
mov
dec
rolb
sub
stos
jl
xchg
mov
shr
sahf
add
dec
xlat
call
or
aaa
or
cli
idivb
or
icebp
inc
lret
cwtl
aas
and
jno
inc
inc
clc
sti
push
lea
ret
orb
xorl
mov
cld
into
sub
push
out
dec
dec
testl
and
mov
ss
or
push
imul
stc
jmp
call
mov
jle
mov
pop
cld
and
roll
sub
mov
imul
cmpsl
adc
out
arpl
imul
xchg
xchg
out
rolb
movsb
mov
jns
sti
mov
adc
cmp
aaa
and
test
dec
dec
out
cmp
ja
iret
cmp
mov
cli
jbe
imul
or
cmp
adc
imul
xor
add
arpl
jle
push
add
pop
adc
insl
push
clc
bound
sbbb
push
orl
adc
sbb
inc
jecxz
cmpsl
sub
sub
xchg
pop
sub
pop
hlt
loop,pn
popa
mov
and
and
mov
mov
stos
imul
into
xchg
add
les
mov
std
push
out
push
mov
cmp
sbb
or
in
and
icebp
gs
shll
pop
imul
or
div
stos
lods
aad
mov
or
push
sub
iret
notb
and
repz
int
clc
xor
add
cmp
iret
jle
popf
shlb
pop
fwait
xor
pop
xlat
or
imul
addl
popf
addl
and
add
xchg
jmp
pop
mov
clc
push
cmp
pop
jae
cmp
mov
decl
mov
cmc
imul
push
cmp
adc
aad
outsl
scas
xchg
data16
sub
xchg
pop
fs
addr16
mov
pop
popf
mov
push
push
add
hlt
icebp
lret
lods
xchg
ret
sbb
lea
movsb
dec
xor
jb
dec
mov
int
lcall
into
pop
add
in
lea
adc
push
dec
repz
lahf
push
jmp
sbb
or
inc
xchg
add
int
or
jns
lock
and
jne
fcoms
lret
out
lcall
xor
push
movsl
add
add
inc
clc
hlt
inc
js
icebp
sarb
push
cmp
rcl
cld
lret
mov
adc
je
rorb
jb
add
push
pop
lcall
sub
xor
pop
mov
mov
pop
in
or
inc
cmpl
cmp
inc
roll
mov
jno
xchg
push
ja
mov
dec
aam
call
adc
scas
test
add
hlt
adcl
shlb
inc
or
mov
outsl
or
mov
rcll
bound
or
mov
pop
test
dec
test
inc
add
push
mov
in
mov
je
mov
mov
sbb
pop
mov
xchg
adc
call
mov
aas
xlat
sti
jo
lods
xor
dec
aad
jae
into
popf
popa
mov
int
call
jge
xor
nop
mov
rolb
popf
jg
aas
cmpsb
int
insb
pop
mov
jmp
stos
sahf
leave
je
sub
imul
in
mov
cmc
pushf
inc
xchg
mov
fldl2e
mov
fs
pop
mov
cli
jl
shrb
mov
imulb
mov
popl
pop
jl
xchg
imul
sub
jne
cmp
ljmp
pop
push
mov
std
dec
sbb
or
mov
mov
xor
jns
data16
lods
adc
push
push
in
mov
movsl
and
rorl
add
fcoml
loop
jp
xchg
xor
push
or
pop
add
fcomip
test
idivl
lahf
rolb
dec
add
ja
and
cmc
mov
jge
push
push
pop
imul
insb
xor
xlat
jge
repnz
pop
scas
mov
ret
insl
inc
sub
push
or
pop
mov
mov
jecxz
ljmp
cli
lahf
sbb
pop
push
add
testb
mov
xlat
mov
jnp
cli
in
mov
lret
dec
aas
repnz
mov
adc
jge
jae
jle
cs
sbb
cmp
jecxz
in
sbb
adc
pop
push
adc
mov
add
push
and
pushl
push
or
ret
nop
ret
pushf
mov
adc
add
cmp
push
adc
inc
pop
out
loope
sub
mov
mov
lea
push
cltd
push
xor
stos
pushf
out
or
or
cld
jle
cmpsb
sbb
dec
les
inc
sarl
mov
push
mov
mov
inc
clc
mov
push
cmp
and
adc
fsts
loop
push
xchg
insl
sbb
inc
sar
and
loop
fs
cld
inc
bound
pusha
or
subb
aad
enter
adc
hlt
leave
jmp
sub
outsl
jecxz
jle
push
ljmp
xor
outsb
inc
add
int3
cmpsb
stos
hlt
dec
ds
rcrl
lea
lds
push
push
dec
ffree
lock
pop
adc
ds
out
insb
jae
and
mov
cmp
xchg
pop
add
icebp
xchg
pop
les
sbb
mov
sub
in
sbb
enter
jecxz
mov
xchg
fistpl
fimull
xor
cmp
ss
mov
cld
sbb
test
int3
add
call
and
shrb
push
and
jno
shrb
inc
sbbl
xchg
and
test
scas
mov
xchg
lock
in
into
sbb
lahf
lock
xor
inc
or
xchg
and
sti
push
jg
aam
jp
jmp
jmp
sahf
outsb
pop
cmp
jo
leave
repz
lahf
mov
jmp
js
lahf
into
icebp
loopne
faddl
push
pushf
aad
push
sub
int3
aam
lret
jno
or
jg
bnd
adc
jge
adc
sahf
mov
imul
pushl
std
jo
call
add
ds
pop
fsubrp
or
lahf
mov
call
pop
xor
std
jo
incl
lods
inc
xchg
aad
pop
pushf
ret
push
sbb
call
pop
xor
std
cli
mov
aas
xchg
jg
jnp
nop
jge
imul
pop
dec
inc
push
jmp
call
pop
mov
rcll
or
jbe
xchg
in
mov
decl
inc
mov
add
int3
lods
faddp
push
mov
push
hlt
mov
int
jo
mov
or
dec
adc
cld
ja
hlt
bound
mov
cmc
jl
mov
ds
jp
insb
and
lds
adc
aad
jg
or
ja
jecxz
sbb
or
cmp
mov
mov
add
das
aad
jg
or
xchg
hlt
call
xor
xchg
in
mov
inc
out
add
shlb
or
or
lock
adc
call
int
sbb
cmp
xchg
jge
std
dec
or
dec
sbb
push
imul
sbb
mov
ljmp
pop
xor
add
sbb
push
mov
and
mov
fidivs
jl
ljmp
stos
ret
cmp
jbe
add
subl
je
push
mov
test
sbb
push
xchg
sbb
pushf
nop
fldcw
pop
mov
loope
add
cld
lea
jp
shll
jg
sub
es
shrb
stc
pusha
out
subl
das
push
rcrb
jp
stos
aam
adc
add
lods
test
shrb
mov
mov
and
stos
xorl
pop
sbbl
bound
jmp
js
mov
data16
mov
xchg
push
loopne
jo
test
cmc
aaa
sbb
xorb
push
cmp
hlt
into
in
fcompl
loop
mov
adc
fisttpll
ret
lods
mov
pop
jo
pop
adc
sub
stos
xor
add
jg
clc
popa
add
leave
popl
mov
adc
pop
pushf
inc
pop
adc
or
aas
stc
repnz
inc
test
push
push
leave
dec
iret
xor
xchg
hlt
jbe
mov
pop
pop
stos
mov
jae
addr16
neg
out
dec
outsb
dec
cwtl
sti
fmulp
outsb
sub
or
stos
out
xlat
int3
mov
xchg
imul
stos
shlb
inc
cmp
xchg
shr
xchg
mov
sub
push
lods
fdivl
dec
xor
in
and
cli
xor
mull
sbb
dec
dec
cmp
pop
fs
mov
ja
addl
in
xor
lods
jecxz
cwtl
pusha
sub
xor
adc
gs
popf
fstl
cmpsl
xor
or
into
cmp
cmp
jge
and
xchg
loope
cwtl
fcom
js
and
mov
out
subb
shrl
fildll
in
push
sub
mov
sbb
sbb
mov
insl
cld
inc
pop
pop
xor
mov
mov
mov
adc
pop
adc
sti
xor
pop
dec
jg
pop
movsb
pop
add
arpl
add
ret
ret
mov
add
mov
clc
mov
clc
mov
jmp
add
sbb
nopl
stos
hlt
call
pop
inc
call
pop
mov
std
cli
xor
movsl
cmp
fwait
cld
inc
mov
fstps
cmp
mov
dec
cmpsl
dec
pop
mov
addb
lock
ror
mov
cmp
inc
add
cmpl
negl
pop
icebp
add
mov
cmp
shlb
push
inc
shrb
cmp
jne
ljmp
jo
adc
je
and
incb
jg
int3
sbb
mov
ljmp
xchg
mov
add
add
jo
adc
push
in
jnp
shlb
pop
jg
jmp
mov
fs
adc
aam
ds
lds
jmp
into
popf
shll
lods
dec
push
or
jb
mov
jg
loop
icebp
loopne
or
jge
ss
jg
ljmp
jl
pop
jne
movsb
sbb
cli
sbb
clc
jbe
int3
pop
sti
jno
cmp
rcrb
cmpsb
pop
pop
jp
inc
test
addl
cld
push
xor
mov
sub
or
jne
mov
sbb
popa
and
adc
and
xchg
mov
pop
arpl
dec
hlt
push
jbe
push
mov
lret
hlt
or
mov
and
arpl
add
or
in
xor
jo
pop
adc
pop
add
mov
popa
mov
dec
xchg
push
popf
dec
sbb
sbb
pop
adc
sti
sub
add
lcall
cmp
sub
sub
pop
push
pop
adc
shlb
jne
pusha
in
mov
pop
adc
fstpl
pop
mov
cmp
pop
adc
call
jmp
push
xor
mov
mov
push
xor
pop
adc
imul
and
cwtl
dec
mov
fs
mov
push
sub
clc
std
imul
jns
and
jnp
cmp
rcrb
pop
cmp
xor
push
std
push
lcall
push
stc
insl
arpl
ret
cs
mov
in
cmpsl
inc
jg
jmp
popf
cmpsl
mov
dec
mov
cmp
or
mov
je
cmp
mov
movsl
bound
lahf
imul
aaa
mov
sbb
jnp
jae
sbb
lods
cmpsb
fists
leave
fwait
out
push
dec
mov
cmp
pop
cs
lret
jnp
ret
icebp
pop
push
jle
scas
xor
in
out
pushf
xor
rcl
inc
xor
xlat
xchg
lea
daa
xchg
lea
dec
arpl
add
scas
xor
dec
pop
adc
pushf
add
jp
insl
add
xchg
jbe
adc
pop
sahf
jno
mov
or
pop
mov
test
jg
mov
add
inc
je
mov
adc
insl
loopne
dec
mov
rorb
insl
arpl
jge
js
jae
daa
enter
cwtl
xchg
push
pop
sub
xorb
mov
mov
lcall
ret
xor
dec
cwtl
dec
dec
jo
push
and
sub
movsb
sbb
sbb
xchg
sub
subb
push
or
les
iret
inc
dec
xchg
scas
push
je
cmp
push
cmc
push
add
imul
or
jmp
mov
adc
inc
fstpt
ljmp
mov
mov
pushf
push
imul
sbb
jge
popa
xchg
mov
mov
dec
dec
les
incl
mov
out
or
mov
adcb
sti
cmp
cmpsb
test
inc
inc
sahf
push
nop
pop
je,pt
pop
push
pop
or
mov
adcb
sbb
lds
jg
mov
out
or
mov
push
aaa
cli
pusha
jnp
fisttpll
inc
pop
lcall
jne
adcb
sub
mov
inc
xor
push
aas
enter
mov
sbb
jl
arpl
mov
mov
jo
jp
xor
rcl
out
jns
dec
fwait
adc
pushf
cmp
es
pop
test
cmp
add
std
hlt
bound
aad
or
mov
jge
add
addr16
xchg
sarl
xchg
test
or
call
loop
xor
rcl
out
jg
out
and
aaa
push
jge
arpl
add
mov
xchg
int
fninit
or
xchg
lds
lret
add
imul
jne
dec
jo
jg
pop
outsb
xor
loope
xchg
adc
add
fcmovb
lcall
inc
add
jecxz
mov
cmp
cmp
mov
jnp
cmpsl
sbb
jns
decl
jno
mov
bound
add
cmpl
inc
sbb
jmp
mov
in
outsb
sbb
xchg
rcrl
jle
or
jmp
in
dec
inc
and
in
imul
jns
mov
mov
jbe
gs
mov
xchg
iret
std
mov
or
lods
mov
inc
loope
lahf
pop
mov
movsl
rcrl
push
xor
jne
shl
out
mov
sbb
cmc
adc
xchg
aad
fwait
cld
fs
sub
dec
inc
aad
add
pusha
inc
push
div
mov
push
jl
cmpsl
ja
adc
cwtl
xor
xor
cmp
push
shrl
push
shrb
cld
push
lahf
lods
cmpsb
fstpt
cmp
enter
pop
xchg
xchg
fcomi
andb
out
add
daa
cmpsb
and
dec
pop
adc
add
add
pop
fmuls
loopne
jae
or
add
iret
sub
xchg
inc
push
pop
mov
ret
jae
pop
sub
mov
js
and
jl
call
icebp
xchg
push
fsubp
xorb
cs
test
jns
jmp
ss
cmp
push
int3
jg
cmp
fcmovbe
sbb
andl
push
mov
fs
xchg
leave
nop
cs
cmc
cmpsl
outsb
mov
scas
stos
fs
test
push
push
lahf
ja
push
xchg
jge
rcrl
and
mov
jae
sub
and
aas
hlt
movaps
loop
xor
in
leave
les
in
in
shrb
imul
imul
xor
sub
cmp
nop
xchg
cmp
jae
cmpsl
fildll
les
adc
add
pop
pop
xor
fistps
cld
sbb
mov
clc
jne
enter
pop
pop
ficomps
addr16
fsts
movsl
xor
outsb
sbb
jge
add
cli
fcomps
andnps
mov
test
sbb
enter
push
cmc
adcb
scas
stos
xchg
stos
lds
loop
insl
xchg
dec
cmp
cmc
jl
fld1
sbb
int3
ss
loopne
dec
mov
or
inc
js
movsl
jne
cs
inc
shrl
mov
xchg
sub
imull
dec
push
or
mov
pusha
xlat
pop
getsec
xor
jecxz
rorl
jmp
vcvttsd2si
lret
add
call
shlb
repz
xlat
enter
xchg
ficoms
jl
movsl
test
call
xchg
push
mov
lcall
stos
jp
fildl
sub
add
push
nop
rorb
pop
push
dec
out
mov
pop
adc
int
inc
addb
mov
dec
pop
adc
sti
call
push
sbb
adc
jmp
lods
cmp
jnp
sub
hlt
call
sbb
xor
inc
or
call
scas
mov
sub
dec
mov
sub
cli
aad
das
mov
xor
or
movsb
popf
insl
nop
dec
ja
faddl
and
adc
adc
pop
outsb
test
mov
xor
pop
push
aaa
mov
insl
pusha
jge
or
adc
mov
sub
test
pushl
adcl
push
ljmp
jp
mov
mov
iret
adcb
mov
pushf
test
inc
test
negb
sbb
adc
mov
jb
out
iret
movsb
inc
xor
dec
dec
call
mov
adcl
into
std
mov
add
ljmp
fwait
jp
lret
mov
xlat
lcall
push
mov
pop
dec
sbb
cmp
imulb
and
and
xor
mov
mov
rcl
xlat
xchg
inc
std
mov
pushf
gs
scas
stos
loop
popf
mov
sub
jae
mov
add
push
fucom
fld
adc
xor
inc
jns
fists
lret
aas
repnz
pop
cli
test
call
push
fmul
pop
idivl
inc
mov
xchg
xchg
insl
cmp
int
fstl
sub
xchg
jl
pop
inc
adc
cld
lock
pop
cmp
dec
mov
push
dec
repz
pop
xchg
mov
or
cmp
cmpsb
jl
sbb
and
mov
pop
mov
dec
repnz
sub
xor
pop
call
cmp
adc
xor
or
dec
mov
sbb
incb
mov
gs
fs
imul
jb
lret
mov
mov
insl
rclb
mov
sbb
ret
pop
sbb
adc
stos
lock
mov
gs
scas
insb
out
je
mov
fwait
adc
addr16
push
inc
sbb
shll
cmp
xor
mov
inc
cli
daa
fistpl
shll
jp
or
add
mov
in
out
ficoms
and
mov
sub
aam
or
xchg
jmp
js
fnsave
mov
cmp
pop
and
push
mov
jo
push
rcrb
adc
aad
iret
out
add
adc
mov
fsubrs
int
mov
fistps
stos
movsl
push
ret
push
rcl
and
push
in
std
mov
data16
sbb
call
leave
or
pop
cmp
int3
addr16
cmp
push
ret
fildll
lret
xchg
arpl
dec
push
jp
add
mov
in
or
or
inc
repnz
dec
les
int
xor
mov
mov
jne
ja
hlt
bound
mov
leave
push
cli
call
cs
add
mov
add
pop
mov
or
xchg
dec
mov
xchg
lds
in
cmp
mulb
sbb
pop
mov
or
adcb
cld
jnp
fldenv
pop
xor
push
cli
jle
in
xchg
arpl
loope
add
cmp
imul
or
repz
movsb
jb
jle
cmpsl
push
inc
push
jmp
aad
mov
mov
mov
sahf
addr16
push
jle
pop
ds
das
lcall
bound
dec
in
or
fsubrp
or
xchg
jae
aad
inc
adc
sub
add
nop
cmp
jge
adc
push
xor
xchg
mov
and
aad
imul
lea
leave
enter
or
icebp
mov
pop
je
inc
lea
mov
mov
jne
mov
shrl
test
imul
ljmp
pop
add
sub
ljmp
push
cmp
addb
cltd
insl
dec
xchg
out
mov
mov
fs
mov
shlb
ja
movsb
int3
imul
and
cli
jo
lea
jecxz
push
dec
out
loope
jecxz
jae
jbe
es
cmpsb
ret
mov
jno
popf
xchg
rcll
out
cmp
pop
out
jmp
loop
xor
adc
and
les
cmpsb
mov
jb
mov
lods
fadd
std
sbb
push
mov
sub
sub
or
loop
push
mov
adc
jecxz
pop
pop
push
bound
mov
xchg
mov
leave
dec
ss
sti
rcl
insb
jmp
cmp
mov
shl
addl
aas
in
and
ja
int3
lods
and
sub
jmp
sbb
mov
jbe
cmp
imul
cmpsl
out
in
mov
cltd
call
sbb
pop
pop
adc
pop
loopne
push
lds
sbb
jl
push
mov
adc
lea
scas
lods
pop
fs
dec
fs
imul
stc
repnz
mov
mov
in
test
jmp
stc
ret
mov
test
int3
pop
sbb
test
test
pop
iret
adc
pusha
mov
lock
cmp
sbb
dec
cmp
lahf
ljmp
mov
jl
mov
pop
jle
sub
rcpps
jns
sbb
movsl
popa
out
jg
cs
jbe
inc
jne
push
adc
cs
aad
xchg
push
int
jbe
pop
ret
int3
and
aad
in
lret
pop
aad
pop
jnp
lods
dec
sti
enter
or
aas
icebp
mov
push
ljmp
leave
mov
daa
mov
jbe
or
jl
loope
or
ljmp
mov
mov
pop
daa
mov
push
pop
loopew
push
cwtl
call
push
cmc
push
mov
data16
daa
rcll
add
sbb
lret
sahf
lcall
lods
sub
mov
rorl
mov
test
nop
push
inc
mov
test
lret
fstpl
sub
popf
cmp
fisttpll
addr16
and
sub
push
and
jb
lahf
es
sarb
lret
out
out
sub
ss
mov
mov
mov
pushf
bound
xor
or
outsl
cli
hlt
xchg
ljmp
cli
mov
pop
in
mov
inc
or
or
pop
das
pop
jne
movsl
imul
inc
out
clc
xchg
out
lret
hlt
jmp
aas
hlt
mov
cmp
inc
aad
repz
imul
outsb
stos
test
add
pop
test
cmc
or
dec
push
mov
cmpsb
push
mov
mov
xchg
or
sub
xor
mov
pop
in
lods
push
cli
jle
mov
hlt
notl
inc
mov
mov
das
inc
jg
pushl
pop
cli
shlb
add
cs
xor
or
add
in
push
mov
and
xlat
fldenv
xchg
aad
or
icebp
ja
xchg
out
push
or
mov
pop
inc
mov
loope
dec
out
dec
jecxz
mov
mov
das
aad
jg
or
ljmp
je
xchg
sarl
psubsb
mov
jo
mov
pop
pop
xor
std
jo
ljmp
inc
xchg
add
ljmp
sbb
out
add
or
jg
je
mov
sbbl
push
outsb
or
pop
xchg
std
ja
mov
ljmp
mov
lods
sahf
mov
sub
sub
xchg
in
sarl
cld
jne
insb
leave
xchg
push
sbb
xchg
out
add
push
push
pusha
cmp
ja
jp
xchg
imul
jbe
rorb
lods
lahf
aad
cmp
roll
sub
sbb
mov
in
and
push
rorl
and
jbe
loope
xor
aad
clc
jge
jge
outsb
ret
xlat
fld
xor
and
xor
mov
push
inc
jno
xlat
cmp
mov
mov
aam
push
and
out
fs
fsubr
arpl
push
xlat
movsl
lahf
cld
mov
movsl
xor
test
subl
cmp
mov
mov
inc
addr16
loopne
js
sub
out
data16
das
sub
loop
in
jle
mov
inc
sub
ret
addr16
add
fidivs
mov
mov
int3
loopne
dec
addb
sub
movsl
bound
mov
mov
sbb
movsl
shrl
adc
adc
lock
cmc
repnz
cmp
js
mov
pushf
cmp
xor
mov
mov
pop
fistpll
add
dec
cmp
xchg
jg
pop
add
xor
pop
adcl
and
leave
inc
xor
or
insb
pusha
bound
or
ret
into
mov
mov
inc
adc
sub
mov
pushf
movsl
shl
es
fsubp
out
add
inc
loopne
add
repz
stos
and
sub
mov
shrl
pop
js
fidivl
sub
pop
cld
mov
xchg
ss
add
repnz
xor
push
cmpsb
jo
jle
call
popa
gs
mov
je
and
lods
sub
jbe
fisttpl
subb
scas
mov
pop
and
mov
call
sub
jle
xchg
sub
sub
test
shr
nop
inc
int
into
cmc
inc
or
jecxz
mov
scas
push
aaa
fadds
pop
aas
mov
push
test
or
dec
mov
mov
push
test
loop
lock
data16
jge
add
cmpsl
pop
clc
fcomps
add
sarl
push
xor
mov
mov
xor
mov
shrb
test
clc
pop
mov
mov
cmpsl
adc
cli
scas
ret
fs
cwtl
mov
vmovmskps
jmp
hlt
call
mov
hlt
call
mov
pop
movsl
lods
adc
jmp
sbb
ds
jle
lea
sbb
das
aad
jg
or
add
hlt
call
mov
inc
inc
or
push
aad
sub
pop
pop
xor
add
add
sub
dec
das
jns
xor
js
pushf
jae
xor
sbb
loopne
add
jmp
pop
hlt
and
dec
mov
mov
push
pop
jmp
or
cmp
pushf
jg
add
out
ficompl
imul
dec
xor
mov
pop
rorb
adc
sti
dec
xchg
imul
adc
lcall
and
adc
mov
setne
or
sahf
pop
push
xor
jmp
in
pushf
lcall
mov
jecxz
xchg
mov
dec
or
mov
out
pushf
pusha
mov
add
add
out
das
ret
or
sahf
push
push
xor
inc
ljmp
mov
push
sbb
fisubs
test
adc
mov
mov
jns,pt
insl
mov
leave
rorl
xchg
mov
xchg
inc
pop
dec
or
movntq
inc
add
addl
pop
clc
add
fwait
mov
xor
mov
add
push
dec
push
pop
or
imul
fbstp
movb
sbb
sbb
mov
rcl
scas
jmp
stos
ja
fwait
out
and
loopw
lods
or
dec
xor
pusha
cs
xor
mov
into
mov
int
test
xchg
dec
sub
sahf
mov
test
ret
and
leave
mov
xor
movsb
adc
dec
icebp
mov
jle
or
xchg
mov
add
add
out
mov
jbe
jecxz
cmp
cmp
or
fistpl
ficoml
in
add
ja
arpl
xor
daa
dec
add
mov
push
or
push
pop
pop
pop
daa
dec
mov
into
test
movsl
push
sbb
scas
or
fs
movsl
bound
inc
sahf
mov
xor
loopnew
or
loop
dec
cmp
inc
push
pop
and
out
add
loop
clc
mov
int
adc
cmp
add
xor
add
dec
daa
inc
sbb
jl
sbb
sbb
pop
dec
scas
ret
icebp
pop
push
xchg
xlat
sti
add
addr16
outsb
scas
push
xchg
int3
cs
pop
mov
jecxz,pt
loope
push
and
popf
and
push
inc
sbb
stos
shrl
pop
mov
cmpsl
jg
jg
repnz
sub
dec
loopne
sub
jge
cwtl
pop
mov
ja
orl
xor
les
outsb
xchg
test
lock
pop
in
adc
mov
adc
adc
fstpt
add
and
mov
pop
mov
push
rcl
mov
push
arpl
out
add
adc
aaa
scas
dec
push
xor
sub
pop
cltd
fdivrs
shlb
repnz
mov
add
or
mov
mov
loope
pop
add
xchg
adc
jle
or
or
out
push
dec
hlt
stc
sub
rclb
mov
mov
xor
inc
imul
int
mov
pop
scas
shlb
add
pop
inc
xor
xor
xor
cwtl
aam
xor
jge
dec
movsb
inc
xchg
loope
dec
pop
decl
in
mov
mov
loopne
and
or
push
fsubrp
aad
pop
hlt
mov
mulb
pop
pushf
divl
enter
push
das
sub
push
mov
lcall
ds
adc
lds
call
call
push
aam
shr
add
add
xchg
ret
jae
outsl
jo
pop
adc
xor
push
mov
cmpsb
sbb
xor
addb
mov
push
call
jne
mov
xor
push
cs
mov
jge,pt
flds
incl
inc
mov
das
lock
movl
shrl
mov
cmp
imul
inc
push
arpl
mov
out
jge
jg
xor
pop
push
in
rcrl
jmp
jmp
lds
in
adc
jmp
jbe
xor
pop
ds
sti
sahf
jb
push
mov
xor
sub
add
lea
loop
mov
fidivrl
or
mov
into
into
lahf
cmp
scas
ret
lea
adcb
jge
jbe
ret
inc
sbb
loop
xchg
mov
or
pop
add
scas
mov
xchg
mov
scas
pop
dec
std
sub
adc
sbb
jo
repz
hlt
cmc
je
fcompl
enter
daa
out
jo
adc
movsl
cmp
push
xor
in
decb
inc
pop
xchg
outsb
call
inc
mov
xchg
gs
mull
mov
pop
jle
call
dec
lods
sub
lods
jg
clc
fnstenv
leave
adc
mov
in
mov
outsb
pop
mov
and
fwait
adc
pop
mov
cli
lahf
pop
lahf
fsubs
loop
repnz
mov
enter
insl
and
fs
mov
lds
fldt
cmpb
push
jae
insl
sti
mov
or
adc
popf
inc
add
sbb
std
lcall
into
shrl
test
outsb
scas
sub
stc
mov
arpl
lret
arpl
movsl
pop
int3
fs
sbb
push
int
sub
push
inc
pusha
jmp
shlb
sbb
adc
xor
add
xor
jb
xor
in
inc
es
dec
inc
pop
repz
dec
pop
pusha
push
testb
dec
cmp
nop
fimuls
ret
jns
xchg
test
and
and
xchg
or
leave
icebp
fiadds
leave
pop
lcall
bswap
dec
and
xchg
add
lret
fcomip
and
mov
cs
xor
data16
out
pop
xchg
sbb
mov
cld
outsb
cwtl
outsl
cmp
or
stos
mov
and
cltd
frstor
ss
or
and
lock
inc
stc
mov
mov
lods
mov
mov
rcrb
hlt
add
mov
pop
movsb
push
jecxz
jns
and
cmp
pop
mov
mov
xchg
add
ljmp
icebp
das
sub
out
xchg
mov
mov
mov
inc
in
lds
loopne
and
hlt
sub
mov
pop
test
outsb
cmpsl
test
adc
ret
insl
inc
js
test
pop
mov
ja
cmp
push
inc
mov
inc
xorl
jg
imul
scas
and
cwtl
fidivrl
test
lock
mov
xor
inc
or
xchg
hlt
call
jnp
jge
inc
negl
pop
pop
xor
pop
inc
shrb
and
add
and
jmp
sub
fbld
imul
inc
pushf
inc
pop
adc
cmpsb
mov
sub
test
es
std
jo
test
inc
pop
adc
pop
stc
add
arpl
and
insb
leave
and
push
jecxz
or
aas
jge
pop
pushl
inc
mov
push
mov
movb
in
pop
or
mov
dec
dec
sti
hlt
call
vmread
repz
pushf
push
mov
in
testl
loopne
add
add
inc
xor
arpl
dec
inc
mov
cmpl
pop
imull
xchg
aam
jecxz
pop
mov
js
sbb
dec
ljmp
call
mov
cmovs
mov
cmp
dec
jge
jmp
jb,pn
mov
xor
inc
aaa
adc
xor
mov
push
orb
std
decl
mov
cmpsl
clc
hlt
xchg
push
mov
stc
fwait
pop
pop
jle
loopne
test
cld
out
add
lea
aas
jl
ja
cmp
mov
jge
mov
jg
ljmp
out
add
inc
iret
mov
lahf
outsb
dec
jmp
or
ret
nop
jge
inc
adc
adc
ja
adc
adc
pushf
iret
inc
add
inc
pop
add
jns
orl
xchg
cmp
js
xor
mov
scas
lcall
loopne,pn
imul
call
in
mov
xchg
in
push
add
jo
ror
sbb
call
test
and
roll
movsl
std
pop
and
adc
popa
loop
into
outsl
pop
sti
sbb
shlb
jmp
adc
stc
xchg
lahf
cli
or
sub
mov
daa
testl
mov
jne
jno
shll
lods
movsb
mov
lods
inc
pop
repz
inc
pop
adc
cmp
lret
xchg
sbb
out
lods
xchg
bound
pushf
fcompl
daa
in
mov
fdiv
insl
adc
mov
jecxz
lods
sub
cmp
dec
rcr
inc
fcompl
adc
andl
pop
pop
out
mov
test
call
mov
clc
test
mov
dec
dec
ret
shrl
push
or
inc
ret
and
mov
and
nop
aad
pop
fstl
aaa
xchg
outsb
lock
outsb
or
cmp
lods
in
cmp
leave
inc
sub
insb
enter
dec
decl
jle
xor
inc
inc
lods
je
sbb
stc
test
std
nop
xchg
in
cvtps2pd
xor
enter
lcall
add
jecxz
ja
not
dec
mov
and
cmp
mov
fidivs
cmp
jmp
jp
pop
shlb
incb
leave
pop
test
outsb
lahf
sub
mov
scas
cltd
push
arpl
lret
out
addr16
mov
fs
in
push
into
cs
push
sbb
sub
data16
lcall
out
push
xchg
xchg
mov
dec
hlt
mov
xor
data16
sbb
push
ret
mov
stos
das
or
stc
mov
adc
mov
mov
fildl
dec
pop
pusha
fwait
sti
cmp
mov
psrad
cmp
push
push
les
cwtl
sub
aas
clc
jo
sbb
push
adc
pop
push
push
fisttpl
mov
dec
call
cli
push
mov
aas
imul
push
mov
xchg
das
pop
mov
xchg
add
rolb
or
mov
bound
push
or
mov
mov
pop
push
pop
dec
sbb
mov
mov
movsb
mov
or
movb
jmp
addl
pop
sbb
ljmp
shrl
mov
jge
jbe
xlat
les
jl
insl
fdivrl
popl
sahf
stos
and
packsswb
and
bound
pop
in
xchg
push
insl
sub
mov
jge,pt
cmp
test
mov
js
inc
adc
jl
adc
fs
ja
adc
mov
and
les
imul
jb
mov
add
aaa
xorb
imulb
inc
mov
xor
mov
push
cmp
jge
push
push
push
xchg
cwtl
stc
test
or
inc
pop
xor
les
imul
xor
loop
or
mov
dec
mov
push
jmp
scas
or
jg
pop
or
cli
lock
inc
mov
les
jns
xchg
notb
sbb
repz
inc
pushf
inc
pop
adc
pop
call
dec
or
pop
adc
into
testl
cmpsl
mov
inc
inc
xchg
xor
popf
jae
stos
test
sbb
mov
movsl
xchg
pop
leave
cld
inc
lea
or
rcl
shr
insl
fidivrl
and
int
lea
push
lea
lahf
pop
out
xchg
mov
push
sub
fsubs
cmovno
jo
test
inc
mov
or
gs
fbld
movsb
ds
popf
mov
push
adc
rcrb
sbb
hlt
dec
shl
xchg
xchg
out
mov
ss
adc
mov
add
mov
cmpsl
cmp
cmpsl
fcompl
aam
add
aas
inc
adc
rcr
push
pop
push
adc
mov
push
imul
sbb
inc
pop
adc
or
loop
push
dec
mov
movsl
imul
orb
jnp
push
mov
mov
add
jecxz
dec
cmp
pop
or
daa
lock
gs
jbe
sub
movsb
daa
dec
lock
or
outsl
jb
lods
lret
adc
mov
cmp
sti
fs
bound
int3
outsb
testl
dec
pop
dec
in
inc
mov
jle
xchg
cltd
icebp
mov
push
add
push
pop
adc
sub
push
xchg
pop
sbb
xlat
ret
outsb
pushf
inc
pop
adc
insb
jb
mov
or
mov
push
arpl
pop
push
popa
mov
pop
or
aad
jmp
dec
loope
outsl
adc
fnsave
pop
jnp
add
add
pop
mov
sbb
das
sub
xor
mov
dec
jno
insb
lret
int3
mov
mov
test
mov
xor
in
jecxz
jns
pop
fisttpll
pop
push
dec
or
ret
push
xchg
loope
jne
repz
lods
ss
push
and
retw
push
add
push
fnstsw
mov
je
or
mov
orb
jo
jo
into
push
sti
jo
jne
mov
add
pop
mov
jo
pop
adc
xor
out
dec
xchg
pop
outsl
leave
je
ret
cs
mov
jge
adcb
mov
rcrl
jno
shl
lret
or
dec
pop
outsl
xor
cld
or
add
hlt
xchg
out
sub
insb
lcall
add
pop
call
mov
add
pop
lods
jnp
lcall
ret
aad
or
xor
stos
sahf
lret
cmpsb
sarl
xlat
stc
ja
int
cli
jo
cmp
in
add
adc
pop
aas
aaa
hlt
pop
sub
movsb
stos
push
aam
shll
pushf
test
mov
mov
ja,pn
into
jge
mov
xlat
sub
jns
iret
popf
mov
loopne
xlat
inc
addb
dec
or
loop
sub
sti
or
mov
ret
das
pop
mov
cmp
mov
mov
dec
or
rcr
jl
out
imul
pop
xor
jecxz
sahf
mov
andl
loop
sub
sti
xchg
hlt
shrl
push
das
fiadds
xchg
stc
adc
add
and
jle
shll
dec
push
pop
pop
movsl
or
push
xchg
or
insb
push
into
dec
mov
add
les
insl
adc
icebp
loop
add
and
scas
test
xor
add
or
aad
test
ss
jecxz
xor
aad
jp
cmp
test
loopne
test
xchg
imul
adc
or
ljmp
fmul
dec
test
adc
push
sub
movsl
xchg
cld
repnz
dec
mov
dec
mov
test
rcl
shrl
xor
mov
push
adc
cmp
or
imul
cmp
pop
pop
mov
and
daa
testl
insl
int
pop
mov
fs
push
fdivl
dec
add
xor
mov
add
rcrl
mov
cwtl
pop
adc
adcb
mov
out
insb
les
mov
andl
cs
and
fadd
jg
pop
movsb
cmpsb
mov
push
push
incl
mov
inc
inc
stos
jecxz
imull
in
lea
pop
jle
push
inc
sbb
movsl
mov
idivb
stos
or
mov
mov
dec
lods
push
jmp
movsl
pop
dec
iret
leave
mov
daa
add
lods
ja
cmp
lahf
lret
jb
cmp
das
mov
xchg
sbb
lret
mov
mov
cmp
int3
mov
pop
mov
push
shll
cmp
imul
cmp
shrb
sbb
jbe,pn
sbb
mov
add
in
lock
mov
adc
jecxz
cwtl
pop
ficompl
in
cmp
testl
jb
mov
lods
jmp
add
insb
lods
mov
icebp
mov
enter
je
pop
adc
fsubl
mov
js
and
das
pop
sbbb
les
rclb
adc
je
add
pop
adc
mov
push
pop
lret
or
push
in
jae
cld
sbb
pop
cmp
aam
cltd
mov
pop
mov
cwtl
cmp
repnz
movsl
sarl
dec
in
jmp
jg
call
addb
jmp
sub
add
enter
shlb
dec
sbb
pop
dec
dec
mov
add
adc
push
jae
jo
pop
popf
stc
adc
dec
pop
ds
sbb
adc
call
cld
iret
xor
push
push
cs
jg
dec
je
jne
shlb
mov
add
push
test
ds
lds
or
mov
cmp
pop
rorb
inc
jns
loopne
lock
stos
jb
ja
rorl
add
push
xor
clc
hlt
jg
out
add
sbb
xchg
test
shr
jle
cli
mov
cmp
insb
arpl
adc
jecxz
shlb
cwtl
sbb
sarb
nop
sub
jo
adc
mov
mov
ret
das
pop
mov
mov
push
adc
std
cli
cld
iret
xor
cld
cmp
stc
cmovs
mov
dec
push
gs
lods
test
cmp
xchg
jge
movsb
sbb
mov
lds
mov
sahf
jne
aad
shrb
pop
shr
cmp
jle
mov
bound
jge
lret
popa
push
xchg
test
arpl
rolb
pop
xor
add
aas
arpl
shl
jle
aas
sbb
xlat
pop
or
cmp
js
movsl
pop
mov
xchg
lea
clc
mov
popa
xchg
adc
or
ljmp
dec
lea
or
sub
icebp
xchg
sbb
inc
test
out
test
outsb
xor
fcmovu
cld
fs
xchg
int3
subb
inc
mov
xchg
lods
adc
clc
cmp
add
cmp
cmpsb
dec
out
add
push
xchg
xchg
cli
inc
xchg
jbe
add
sub
push
adcb
dec
scas
sbb
aam
pop
fucomp
insb
dec
ljmp
fwait
subb
fnstcw
jae
cmpsb
lea
incl
mov
andl
fs
adc
dec
pop
jp
mov
xchg
cmpsb
sbb
mov
lock
lcall
popa
cmp
fisubrs
sub
pop
xchg
lret
dec
adc
cmp
mov
data16
nop
push
mov
sbb
loopne
rcl
pop
popf
adc
dec
pusha
das
cmp
adc
xlat
xor
or
jg
dec
jbe
jmp
movsb
jmp
xor
stc
sbb
fnstsw
scas
scas
in
andl
push
adc
rorb
push
adc
inc
xor
roll
outsb
subb
mov
dec
dec
push
ds
call
pop
mov
dec
dec
sbb
push
rcrl
out
dec
cmp
and
enter
dec
mov
out
jmp
push
add
into
test
or
mov
enter
rolb
or
imul
lock
enter
jmp
cltd
cmpsl
hlt
cli
outsl
and
sub
mov
dec
jl
mov
mov
fcompl
sub
movb
in
dec
push
cmpsb
addr16
aad
sbb
aaa
cmp
mov
pop
testb
or
mov
bnd
fcompl
adc
sti
mov
fildll
cli
mov
ja
ljmp
icebp
fmull
lods
call
scas
sbbl
clc
add
inc
add
repnz
mov
imul
cld
dec
ds
fcoms
mov
adc
cld
mov
mov
test
loopne
xchg
lret
mov
add
sbb
push
popf
aaa
mov
mov
sbb
mov
andb
incl
in
addb
mov
mov
xorb
dec
lea
mov
mov
pop
std
mov
std
xchg
sub
icebp
aam
movsl
cmp
xor
shlb
stc
lods
jl
int
in
movl
inc
xchg
insl
push
push
ljmp
bound
dec
jge
mov
cmp
bound
sub
movsl
cwtl
xor
pop
sahf
jne
out
das
sub
lods
sub
mov
xorb
jnp
or
roll
inc
bound
pop
std
mov
std
xchg
sub
icebp
aam
movsl
cmp
mov
mov
inc
shlb
stc
lods
jl
int
in
movl
inc
xchg
insl
push
pop
ljmp
bound
dec
jge
mov
stos
xchg
enter
fisttpll
roll
je
bound
inc
add
sbb
mov
jg
stc
test
loopne
sub
test
mov
lds
lea
mov
aaa
inc
mov
sbb
addb
mov
mov
inc
subb
decb
inc
cmc
mov
imul
mov
xor
lods
mov
mov
out
pop
and
xchg
in
push
or
cwtl
arpl
cltd
pop
pop
pusha
cmc
push
into
sub
lea
shrb
mov
repnz
cmp
imul
cmpsb
fmul
mov
adc
xchg
cmp
pop
xchg
xchg
loop
fisubrl
rcrl
sbb
testl
fcmovnu
cli
fists
inc
shll
dec
mov
lcall
cmp
test
xchg
xchg
inc
jns
xchg
push
push
subb
clc
icebp
scas
inc
lods
mov
jb
shll
jmp
inc
push
ficomps
mov
mov
mov
inc
sbb
rorl
stos
xchg
xchg
scas
into
mov
mov
out
pop
popf
mov
in
ret
test
add
pop
fs
push
out
cli
pop
xchg
add
sbb
push
push
dec
enter
rorl
lods
loop
in
shl
xchg
xchg
loopne
pop
add
inc
push
lcall
mov
or
mov
push
mov
jnp
mov
push
xor
ja
out
iret
arpl
je
pop
aad
xorb
sub
fstps
imull
addr16
aad
pop
je
loopne
movsb
push
or
stos
adc
fldt
bound
xchg
sbb
pop
xchg
jo
mov
jae
mov
pop
aas
les
adc
data16
lcall
aaa
das
popf
adc
into
jmp
pop
or
mov
push
mov
push
sbb
fldl
in
mov
cld
xchg
nop
in
push
mov
rclb
add
xor
add
or
imulb
pop
fidivl
adcl
jmp
xchg
sbb
adc
das
xchg
enter
dec
dec
cmp
lds
arpl
lods
pop
jg
dec
xor
jge
xchg
sbb
ds
sub
push
jg
xorl
mov
sbb
push
popa
pusha
mov
pushf
rcr
pop
xchg
cs
jmp
cmp
iret
pushf
xlat
shll
jno
nop
mov
mov
fdivl
sub
jo
add
fcoms
mov
sub
push
icebp
mov
lret
clc
sbb
add
adcb
jle
lods
rcrl
mov
inc
sbb
pop
fnstsw
mov
je
fsub
add
sub
pushf
jb
mov
insb
aas
cmpsb
leave
jnp
mov
jmp
stos
sahf
leave
je
sub
inc
imul
xchg
mov
icebp
pushf
in
pop
mov
ljmp
paddusw
mov
cli
js
shrl
mov
lds
pop
cmpsb
test
push
xchg
shld
jmp
pop
push
cli
out
popf
mov
add
fidivrl
cli
in
clc
shlb
xchg
or
pushf
loopne
or
sbb
bound
sub
mov
push
in
in
stos
shlb
lcall
jp
xor
push
movb
pop
push
in
nop
repnz
and
pop
sub
and
lret
call
int3
in
movsl
adc
test
dec
les
sbbb
ja
sahf
int3
imul
or
out
hlt
loopne
popf
shl
call
sbb
inc
fnstcw
push
ss
cld
and
clc
pop
loopne
xchg
stos
inc
clc
pop
xor
push
pusha
arpl
lret
je
sbb
dec
fsubrp
shlb
lds
inc
das
sbb
mov
ret
pushf
insl
sbb
inc
add
jne
push
sti
jl
jle
sahf
mov
push
aas
cmc
add
into
lods
pop
mov
pop
jb
push
les
andl
mov
test
mulb
mov
lods
sbb
xchg
push
inc
minps
push
sub
call
in
mov
sbb
cltd
mov
or
popa
addr16
push
stc
stc
xchg
aam
ret
push
out
pusha
add
sbb
inc
mov
xchg
xchg
sbb
lcall
insl
pop
pop
rclb
cwtl
cli
ja
ret
jmp
push
lar
fldt
lds
sub
mov
fxch
outsl
leave
and
into
adc
jecxz
jle
dec
xchg
movsl
hlt
mov
scas
dec
or
cs
add
push
int3
lahf
xor
mov
rcrb
adc
push
mov
or
add
push
jne
pop
fbstp
pop
adc
icebp
mov
mov
and
iret
inc
adc
lock
out
pop
cmp
add
dec
cmpsl
lock
sub
psadbw
fcoml
xlat
fadd
ja
xchg
pop
int3
in
call
rcl
out
mov
cmc
out
xlat
cmpsb
sub
fistps
scas
jbe
and
and
outsb
mov
mov
mov
ds
cmpsb
dec
dec
xchg
ret
mov
mov
dec
pop
jnp
push
nop
subl
loopne
dec
jae
cld
cwtl
sahf
sbb
mov
ja
push
jae
pop
push
shrl
stc
inc
mov
and
adc
out
fs
stos
xlat
loope
subb
or
mov
mov
test
lds
xchg
xchg
in
lods
jbe
mov
iret
insl
bound
pop
jecxz
leave
jno
pop
mov
fisubrl
lods
fbstp
xlat
scas
int3
cmc
pop
mov
xor
int
inc
jmp
dec
or
aad
adc
dec
les
out
idivl
dec
inc
xorb
cmp
icebp
cmpsl
cmc
rcr
nop
push
inc
sub
push
mov
or
rcrl
in
xlat
test
scas
rorb
or
das
out
stos
mov
roll
xor
cmp
pop
fstpl
sahf
jno
add
add
ret
dec
mov
in
mov
stc
div
pusha
lods
mov
fcompl
adc
push
pop
mov
in
mov
dec
test
in
shl
sub
into
into
push
push
lds
mov
enter
imul
xor
mov
inc
outsl
mov
inc
imul
dec
dec
ja
adcb
leave
jo
mov
push
sbb
in
lret
push
imul
add
lcall
or
jae
push
mov
ja
add
pop
pop
lret
movl
add
add
xchg
ret
jo
pop
adc
mov
jne
mov
mov
cmpsb
sbb
test
hlt
call
insb
add
lahf
adc
test
mov
or
repz
push
std
ja
push
cmpsb
cmc
jmp
mov
ljmp
inc
sub
inc
push
add
push
jle
ret
sbb
fucompp
pop
or
movsb
nop
push
dec
xchg
ds
xor
mov
mov
push
ljmp
jl
mov
testl
fadd
jne
pop
sbb
js
aaa
mov
movsl
insl
push
fucomp
rcl
cld
fildll
insb
mov
or
push
jmp
aaa
mov
xor
out
movsb
sbb
mov
or
push
dec
and
inc
mov
test
jp
lods
stos
lret
les
jmp
add
or
pop
clc
inc
divps
push
aad
inc
add
sub
jo
push
popa
push
insb
mov
sbb
clc
push
pop
stc
out
sbb
dec
hlt
cmpsb
shll
xchg
loopne
aaa
xchg
mov
inc
iret
push
sub
imul
cmp
ret
mov
push
out
push
sub
pop
push
sbb
push
xchg
inc
in
loop
pop
jns
sub
pusha
aad
pop
dec
mov
jnp
pop
and
loop
lea
sbb
pop
stc
mov
inc
inc
jge
xchg
jmp
mov
pop
push
pop
cltd
ud1
cli
sbb
xor
or
cmp
xor
fimuls
dec
inc
mov
iret
and
out
mov
lret
pop
movsb
push
jecxz
out
and
scas
inc
out
xor
ffreep
adc
cmpsb
cwtl
push
dec
lock
xchg
add
xchg
or
mov
adc
fdivrs
add
push
pop
pop
fcomps
dec
pop
adc
test
adc
sbb
sub
cmp
adc
stos
repnz
mov
push
in
hlt
mov
imul
add
xchg
inc
int3
std
pop
bound
jp
push
clc
stc
xor
es
mov
leave
sub
add
mov
cmpsl
jmp
jae
add
fs
mov
sahf
nop
stos
fstpt
out
or
fstpl
mov
in
fdivl
xor
stos
xlat
adcb
or
or
sbb
adc
mov
test
jge
inc
int
loope
movsl
add
inc
inc
mov
fstps
into
push
xchg
outsl
sbbb
xchg
repz
lods
mov
jno
lock
cmpl
cmp
mov
and
and
add
push
mov
lods
push
call
xchg
xchg
sbb
mov
pop
cwtl
and
mov
iret
xchg
adc
sub
push
cmp
rcl
aad
mov
jno
add
inc
mov
jno
insb
jnp
sti
inc
fwait
aam
mov
or
jmp
cmp
aad
sarb
jl
jns
push
fisubs
or
or
mov
aas
imul
int
inc
pop
sbb
xchg
dec
dec
sub
lret
lahf
sub
decb
xor
xlat
cmp
xchg
lock
inc
xchg
std
jp
dec
xlat
iret
jnp
stos
popa
cmp
lods
pusha
lock
je
in
mov
shll
xchg
or
pushf
arpl
shlb
jl
sbb
lret
int
add
push
in
loop
shll
shr
jecxz
push
pop
mov
mov
mov
dec
mov
std
cli
jle
cmpsb
sbb
in
stos
rcl
mov
sahf
les
mov
incl
cmpsl
lods
mov
jbe
sbbb
pop
mov
shlb
ficomps
ret
push
add
mov
lods
rcl
mov
arpl
or
mov
enter
jg
push
je
sub
mov
jno
pop
inc
inc
sbb
xor
ret
ret
insb
mov
lods
inc
cmp
icebp
add
cs
aas
xchg
mov
adc
xor
pop
xor
sub
sbb
lock
mov
jecxz
stos
mov
rorl
jecxz
leave
mov
sbb
pushl
fbld
addl
mull
mov
lds
xchg
lret
or
sarb
fimull
mov
das
pop
mov
cmp
push
sub
dec
sub
add
mov
mov
jmp
push
imul
jb
cmpsl
inc
add
add
dec
pop
push
push
mulb
aad
shlb
dec
out
sub
sbb
gs
cwtl
adc
lret
mov
cmpb
inc
push
dec
fisubl
push
sub
mov
dec
sbb
jecxz
push
dec
clc
mov
adc
xor
popf
add
pop
pop
xchg
xlat
or
xchg
seta
xchg
fs
push
inc
movsl
mov
xchg
std
lea
adc
xchg
ljmp
pop
rcrb
jne
pusha
in
lods
jge
pusha
cs
mov
push
fwait
jno
push
xor
sbb
jecxz
and
adc
repnz
dec
addr16
movsl
fs
fiadds
dec
dec
xor
xchg
rorl
nop
gs
or
popf
fcmovnb
inc
lret
ds
push
arpl
dec
xchg
add
jecxz
pop
cmp
add
adc
mov
rep
cs
adc
enter
xchg
jns
ljmp
adc
jbe
rorl
pop
pop
and
scas
mov
clc
bnd
inc
addr16
pop
xchg
or
enter
sarb
test
ffree
or
dec
or
mov
mov
push
dec
nop
je
je
sti
pop
insb
mov
mov
stos
jae
fs
sbb
inc
mov
pop
sbb
cli
inc
shll
ljmp
fsub
dec
and
jmp
push
addr16
pop
adc
adc
mov
jne
loopne
call
test
in
lret
addb
mov
lea
and
call
imul
rcrl
add
out
xor
fwait
or
div
jno
lcall
insl
mov
ljmp
cmc
sti
jnp
cld
ljmp
cmpb
sbb
out
cmpsl
sbb
inc
inc
jns
pushf
cmp
push
pop
lds
dec
fs
jno
fistpl
scas
iret
jbe
stc
test
daa
mov
add
sub
in
stc
mov
rclb
sub
out
inc
fildl
jecxz
adc
std
test
mov
int3
rolb
outsl
arpl
ror
mov
insb
out
jle
and
push
pop
dec
jecxz
or
push
enter
addb
xchg
add
pop
mov
les
inc
cli
or
sbb
lret
je
rcrb
and
jne
std
jo
ljmp
pop
inc
xchg
xchg
imul
jge
push
inc
popf
cmp
test
inc
sub
push
movsl
xor
inc
jbe
pushf
imul
adc
xor
push
mov
add
mov
xor
dec
iret
mov
jge
add
push
cld
xor
mov
ljmp
jo
xchg
leave
add
pop
mov
cmp
cmp
mov
push
out
pop
pushf
push
aaa
xor
push
sbbb
jno
insb
adcl
inc
jle
add
outsl
or
mov
or
loopne
jge
pop
pushf
testl
das
aad
or
mov
pop
inc
ja
xchg
insl
test
push
or
jns
push
lcall
pop
in
lock
mov
dec
xlat
mov
lock
or
jmp
das
mov
repz
rcrb
vpsubsw
in
fnstenv
pop
adc
inc
cmpsl
cmp
xchg
ficoms
lret
stc
movsl
pusha
sub
ljmp
test
imul
jecxz
jmp
lds
xor
jecxz
insl
push
inc
orl
stc
cmp
lret
sbb
imul
sub
fimull
aad
adc
sbb
les
cmp
bound
out
inc
aam
out
or
imul
add
sub
sub
jmp
push
insl
adc
stc
mov
minps
jnp
xchg
popa
std
out
mov
add
loope
push
lcall
xchg
loope
sbb
sti
push
int3
mov
sub
xchg
pushf
inc
loop
scas
and
ret
cmpsb
cmpsb
cmp
jge
jecxz
xor
fnstcw
cli
clc
xlat
push
pop
or
cmp
xor
mov
aad
fistpl
lahf
dec
aam
in
sti
fisubl
jb
arpl
pop
sub
loopne
adcl
fwait
popa
push
lret
rcrl
ret
sbb
cwtl
adc
xor
cld
popf
enter
icebp
shl
cmpsl
hlt
push
xchg
iret
mov
call
push
cmc
cmp
iret
mov
cwtl
adc
xor
and
std
movsb
imul
sub
mov
mov
shll
sub
cmpsb
std
fldcw
dec
pop
mov
shrb
dec
mov
in
pop
lods
xlat
mov
das
add
dec
mov
mov
push
int
outsb
cwtl
mov
sahf
ret
je
xor
pusha
mov
in
pop
xchg
repz
cli
mov
loop
adc
dec
inc
push
push
cmp
mov
lock
leave
adc
jne
dec
xchg
inc
in
ret
sub
ja
jae
xor
lock
mov
xchg
xchg
in
xchg
push
lret
rcll
test
mulb
mov
mov
pop
mov
cmp
sub
push
sub
sahf
add
or
test
adc
jo
mov
dec
lds
lret
push
es
ja
jb
repz
insl
or
and
jecxz
dec
outsb
cmp
mov
ds
rcrb
ret
push
andb
data16
enter
adc
in
fcmovb
jl
pusha
sti
jbe
cwtl
aaa
and
inc
rolb
pop
data16
sbbb
dec
sub
dec
and
lret
lods
inc
mov
test
or
inc
mov
test
lret
fstpl
mov
fsubrl
mov
pop
insb
enter
mov
push
jns
add
subb
mov
add
mov
jg
ljmp
adc
leave
in
mov
xchg
mov
dec
sub
hlt
xchg
out
sub
jl
arpl
add
push
pop
inc
lock
xchg
rorl
inc
add
nop
stc
mov
call
leave
ret
mov
mov
xchg
mov
call
pop
mov
and
sub
rolb
push
xchg
mov
xchg
nopl
pop
leave
adc
fistpll
push
in
mov
test
pusha
xlat
push
mov
inc
movsb
sub
push
jecxz
shll
mov
dec
cmc
jmp
inc
adc
aam
aad
jnp,pn
int
jo
arpl
arpl
inc
shrb
testl
cmp
aad
push
mov
inc
movsl
and
and
pushf
jnp
or
push
push
out
or
or
cli
hlt
xchg
out
sub
insb
and
cli
sub
iret
ljmp
or
imul
ljmp
xchg
xor
mov
aas
fwait
sahf
hlt
push
lea
push
pop
inc
pop
ja
packsswb
adc
mov
dec
xchg
ret
sub
mov
adcl
bound
adcl
jno
inc
ret
in
pop
out
push
or
cmp
js
sahf
jle
test
in
dec
je
or
mov
xchg
mov
in
aad
jle
js
pop
cltd
and
lea
push
xchg
pusha
scas
in
cltd
aad
je
sbb
cmpsl
sbb
jne
testb
mov
scas
jecxz
cltd
pop
iret
mov
and
cmp
dec
jmp
mov
xchg
xchg
cli
pop
sar
loop
or
jl
mov
dec
pushf
imul
push
arpl
mov
adc
arpl
xor
shll
jns
push
xchg
lahf
scas
or
mov
fwait
mov
push
sbb
inc
out
and
js
mov
xlat
and
jno
aas
clc
mov
cmpsl
sbb
mov
mov
xor
into
jo
xchg
fldt
cmp
push
xchg
xchg
sbb
scas
xchg
movsb
out
or
call
xchg
aad
loop
loope
mov
mov
cmp
fmuls
popf
in
stos
jnp
sarb
int3
cmp
pop
and
jmp
xchg
cs
out
mov
shl
xchg
inc
iret
das
xor
call
notl
push
mov
sub
xor
mov
cmp
push
inc
lods
and
xlat
mov
orb
pop
dec
add
mov
mov
pop
fmuls
scas
dec
xchg
nop
sti
mov
insl
jp
dec
lea
fidivrs
jle
mov
or
iret
xchg
xchg
ds
jge
ret
adc
push
dec
scas
jp
mov
xchg
sbb
jmp
pop
int3
loop
call
ss
mov
imul
pop
aaa
lock
pushf
fnstcw
jle
cmpsl
cs
and
mov
popf
inc
adc
mov
ja
xchg
popa
pop
fdivrl
jns
aas
dec
jg
xor
dec
lahf
popf
mov
adc
stc
leave
sub
push
test
out
hlt
add
sbb
pusha
mov
add
cmp
sub
in
cmpb
scas
sub
or
cmp
fnstenv
sub
sub
jno
rcrl
xor
sub
pop
cltd
test
xorl
pop
mov
mov
dec
xchg
mov
arpl
ror
xchg
dec
and
inc
or
cmp
jns
add
jmp
push
adc
pop
fbstp
aam
arpl
and
stos
adc
call
xchg
jne
mov
das
sub
mov
pushf
jp
xor
add
aas
xchg
xlat
pop
xor
incl
xor
xchg
fsubrl
std
jo
pushf
bound
mov
lds
jmp
mov
lds
loopne
or
jg
pop
pop
jmp
or
das
aad
push
add
inc
cs
clc
and
jg
or
daa
xlat
hlt
je
stos
rorl
dec
sbb
addr16
vcvttsd2si
sub
mov
cli
hlt
bound
aad
push
inc
adc
pop
push
inc
add
xor
pop
mov
adc
aas
xchg
in
add
mov
bound
popa
cwtl
movsb
leave
enter
push
mov
cmpsb
push
lods
cmc
mov
xchg
push
ret
fistpll
push
inc
rorb
arpl
pop
mov
adc
js
mov
pop
mov
cli
jle
jle
loopne
sbb
push
insb
mov
sti
mov
mov
sub
aaa
cmp
add
in
sub
out
jl
and
cmp
mov
adc
out
mov
mov
add
fistpl
jb
pushf
mov
aaa
in
das
add
jns
popf
out
xchg
mov
outsl
cld
sub
sub
movl
jge
push
push
call
xlat
xchg
ss
inc
sub
push
inc
gs
jp
push
out
outsb
inc
aam
ljmp
sub
mov
mov
xchg
js
add
in
jle
add
or
sbb
dec
imul
int3
testb
mov
mov
arpl
lcall
pusha
xchg
sbb
dec
sti
mov
stos
pushf
sbb
pop
mov
add
es
lods
ja
clc
les
loopne
mov
sbb
xor
fucomip
jnp
add
movsb
cmpsl
mov
stos
cs
mulb
mov
enter
sti
int3
mov
push
dec
dec
out
call
or
inc
ds
jp
fld
xchg
dec
xchg
cmp
mov
sbb
iret
jg
cwtl
roll
mov
add
js
cmc
and
xorb
and
clc
and
in
and
push
hlt
nop
add
aas
arpl
push
sahf
adc
lock
loopne
cmp
stos
jae
addr16
xchg
ljmp
jg
rclb
add
shrl
add
lods
and
pop
sbb
imul
shlb
mov
lds
cmpsb
jae
imul
fildll
rcrl
leave
sub
push
bound
jecxz
pop
dec
xchg
out
out
sub
lret
dec
inc
jo
xchg
and
pop
or
push
push
call
sar
xchg
test
mov
aam
fcmovnu
fsub
adc
add
lret
and
insb
aam
mov
rep
jbe
mov
inc
dec
sarb
testl
js
add
mov
stos
xchg
lds
jno
stos
mov
mov
add
push
cmp
enter
dec
pusha
js
outsl
fneni(8087
push
adc
mov
imul
add
xchg
outsb
mov
jo
pop
aam
sub
inc
fldcw
sahf
jno
fisubrs
sarb
test
js
aas
mov
push
stos
in
call
push
dec
pop
sub
dec
xchg
in
loope
sub
mov
push
cmp
je
stos
pushf
mov
and
popf
cmp
mov
in
std
cli
push
dec
in
mov
xchg
mov
sahf
pop
cmp
mov
cmc
or
or
jo
sahf
addr16
xor
mov
test
rorb
inc
and
lahf
shlb
lcall
mov
dec
jo
jecxz
test
leave
jmp
aad
icebp
mov
adc
xchg
xor
pushl
call
aad
or
mov
sbbb
imull
test
cmovo
inc
cli
jno
sbb
sbb
movsl
or
pop
ja
orb
jl
movsl
fnstcw
hlt
bound
mov
or
mov
push
fs
fistps
enter
sti
lods
mov
repz
pop
lcall
lret
add
mov
ljmp
movsb
inc
cmp
sub
push
mov
adc
popf
cmp
mov
jle
sub
and
inc
aam
pushf
fidivs
dec
dec
in
xchg
mov
adc
inc
icebp
std
jo
inc
ror
xchg
imul
rcrl
call
repz
in
push
cwtl
sub
aad
popf
xor
inc
repnz
int3
or
inc
shrl
mov
mov
mov
std
mov
add
sahf
jmp
sti
jb
ficomps
lock
outsb
mov
ffree
and
mov
push
push
clc
jne
lahf
outsl
scas
out
sub
lcall
push
stos
dec
or
sub
mov
cmc
orb
popa
test
lahf
jge
dec
adc
lds
cs
fidivrs
add
xchg
push
inc
mov
sbb
jge
cwtl
sti
pop
push
cld
mov
sahf
lds
pop
pop
lds
clc
popa
push
pop
and
lds
js
in
and
ss
jl
stos
sub
ljmp
das
push
rcll
cmp
scas
es
xchg
push
pop
pop
sub
clc
test
nop
mov
fmull
lret
aaa
jo
cmp
addr16
stos
insb
divl
mov
scas
xorl
pop
sbbl
mov
xchg
mov
int
lds
out
mov
jbe
pop
imul
fistps
aad
nop
int3
jne
arpl
push
push
hlt
push
stos
testl
outsb
sti
dec
ds
jno
pop
pop
pop
fsubs
and
push
imul
bound
mov
push
adc
adc
test
xchg
icebp
add
into
dec
lds
xchg
je
testl
rorb
fs
sahf
andb
pushf
adc
fwait
xchg
dec
mov
and
adc
inc
mov
adc
int3
aas
mov
push
arpl
push
repz
sarb
inc
pop
std
out
test
repz
adc
pop
sbb
fs
pusha
imul
ja
adc
pop
aaa
int3
out
in
inc
out
sarb
mov
push
push
test
dec
imul
cmpsb
aas
sub
mov
lret
mov
bound
or
pop
push
jl
orb
call
or
gs
pushf
or
clc
je
push
adc
rorb
ljmp
cmp
pushf
fiaddl
push
sub
stos
jb
jnp
dec
mov
jle
fsubl
div
icebp
repz
mov
scas
mov
inc
jecxz
loop
loop
pop
mov
mov
cmp
push
dec
nop
imul
cmc
mov
fwait
decl
cmp
js
xor
rcl
fcmovb
inc
jbe
pop
jecxz
sbb
aam
xchg
icebp
add
jne
push
dec
pop
rcll
mov
addb
leave
pop
ret
pop
dec
xchg
xor
aad
cwtl
fwait
mul
dec
fdivl
add
movsb
lcall
mov
inc
jg
shll
xchg
mov
in
rclb
lea
push
in
clc
mov
add
cmpsl
sub
hlt
sub
inc
sub
or
outsb
adc
dec
push
xlat
jge
xchg
ficoms
js
test
leave
clc
add
cmp
push
xor
push
jecxz
out
mov
jbe
pop
xor
mov
push
ljmp
push
jge
sbb
mov
rcl
hlt
arpl
outsb
push
lds
fisubs
add
jg
jnp
dec
iret
or
xor
cld
cmc
fsubs
or
xchg
mov
imul
std
jo
lcall
xchg
rclb
cmp
call
je
xchg
mov
test
sub
iret
movhps
movsb
repz
popf
adc
pop
xor
mov
test
add
scas
lods
adc
call
mov
aas
mov
adc
fadd
pop
push
pop
inc
jg
in
sbb
pop
ljmp
mov
xchg
icebp
add
pop
fcoml
mov
cs
jns
xor
icebp
jmp
jl
insb
shrb
mov
testb
adcb
js
xchg
addr16
andl
lea
xchg
ror
insl
cmpsl
push
jbe
test
repz
aad
cmc
push
outsb
xchg
jae
sub
mov
popa
jno
es
or
scas
scas
mov
jmp
sbb
lcall
sahf
repnz
lods
lcall
cmp
sbb
xchg
adc
scas
call
mov
test
sbb
add
mov
jge
ficoms
aad
push
mov
push
icebp
lds
test
hlt
cmpsl
fsubrl
aas
orl
lret
xor
xchg
mov
mov
mov
xchg
xchg
jmp
pushf
popf
xchg
subl
shlb
cmp
cmp
mov
daa
mov
repnz
jae
movsl
sub
xor
les
mov
lahf
or
mov
pop
pop
and
shlb
add
bound
ja
mov
xchg
mov
mov
cmp
lret
pop
jns
mov
xor
jo
sbb
cs
mov
ret
nop
pop
adc
jne
in
cmp
add
out
test
pushw
xor
lcall
mov
or
pop
fnsave
lock
fists
xchg
xor
xchg
hlt
push
xor
push
or
js
mov
bndstx
xchg
mov
push
sahf
add
jbe
aad
cwtl
pushf
cmp
mov
jp
nop
mov
rorl
lret
aaa
jo
cmp
addr16
mov
xor
sbb
mov
pushf
out
sar
xchg
fistl
cmpb
cmp
sub
dec
mov
filds
dec
es
jne
sbb
aam
mov
jo
adc
jne
ret
lret
mov
push
repz
clc
sbb
mov
call
scas
xor
test
adc
adc
shrb
dec
mov
inc
cmp
xchg
xchg
icebp
add
roll
insb
popf
rcl
fcompl
cli
mov
js
xor
mov
lcall
loopne
or
or
sub
xchg
and
stc
mov
dec
out
hlt
andl
std
nop
fsubrs
cmp
dec
iret
jg
in
nopl
adc
hlt
stos
outsb
mov
das
pop
lret
lds
push
repnz
lret
ds
test
pop
das
xchg
ret
cs
inc
pop
mov
clc
pop
fmuls
or
cmpsb
cmp
fnsave
or
in
xor
mov
cmp
fistl
pop
inc
cmpsl
jp
packsswb
cwtl
mov
inc
shrb
pushf
push
scas
pop
mov
pop
popa
sbbb
pop
mov
xlat
mov
pushf
arpl
mov
rcll
mov
push
outsb
std
sub
sub
add
or
jne
mov
das
sub
inc
adc
fnstsw
leave
movsl
lret
jno
subb
xor
sub
lods
enter
jg
push
push
in
adc
shlb
shr
fidivs
adc
pminsw
mov
in
mov
push
fs
fistpl
mov
iret
out
lock
or
mov
sti
cld
pushf
and
add
inc
push
das
imul
or
push
std
mov
inc
mov
imul
addb
add
lds
adc
movsl
imul
aam
jb
sbb
add
adc
pop
mov
je
fs
sub
cmp
dec
adc
pop
cmp
in
sbb
xor
xchg
je
push
push
push
int3
add
int
push
mov
inc
gs
push
mov
mov
add
jmp
imul
adc
add
or
cld
mov
pushf
pop
int
add
movsl
jge
mov
xlat
fldenv
cs
push
frstor
dec
xlat
fstps
and
cmp
sub
push
rcrb
inc
data16
mov
xor
insb
and
mov
dec
pushf
adc
jno
js
cld
not
dec
dec
fiadds
mov
call
out
jge
inc
lea
roll
mov
ljmp
enter
adcl
cmp
or
not
cmpsb
sub
and
insb
nop
push
js
or
ja
out
cmpsb
push
jecxz
xchg
mov
and
lock
stos
std
cmp
loop
test
inc
xchg
test
or
pop
sub
in
or
cmovs
mov
mov
iret
push
adc
dec
inc
inc
adc
mov
rorb
pop
adc
test
pop
jmp
stos
cmpsb
sub
outsl
fidivs
lcall
mov
test
int3
push
shrl
add
into
mov
jle
addr16
pop
xor
cwtl
icebp
add
shlb
popa
test
mov
dec
ret
jmp
int
dec
mov
icebp
add
pop
fimull
or
shrl
ret
sub
sbb
lcall
xor
mov
ljmp
jo
add
rolb
imul
cmp
test
xchg
pushf
dec
mov
addl
int3
pop
cs
rcl
rcl
adc
icebp
add
mov
stos
dec
pop
mov
mov
sub
test
cld
in
push
cmovs
addr16
push
int3
mov
sub
aas
mov
ja
nop
loope
enter
test
popa
xchg
fisttps
aaa
sbb
out
sub
enter
cmp
pop
sti
sub
sahf
and
out
pop
jp
push
mov
mov
inc
movsb
cmpsl
aas
sbb
push
hlt
call
and
dec
outsl
mov
inc
or
ljmp
mov
jecxz
roll
push
insb
lret
shll
rcll
inc
or
cmp
pusha
sub
ljmp
jecxz
lret
stos
ret
xchg
adc
sub
mov
or
das
pop
jne
mov
jns
icebp
add
jb
dec
jno
daa
mov
push
jmp
lods
cmp
jnp
cwtl
or
sahf
pop
mov
test
mov
add
das
aad
or
pushl
jle
cs
xchg
imul
xor
into
popf
cmp
and
lods
inc
jg
in
jmp
jbe
mov
fiadds
fistl
es
jne
push
dec
dec
rcll
mov
popa
inc
mov
jns
arpl
aad
lahf
outsb
mov
xchg
pop
inc
hlt
adc
je
mov
call
clc
or
push
test
clc
and
shlb
or
pop
loope
lock
push
mov
repnz
addb
in
inc
push
pop
inc
movsl
cmpsb
cmp
stc
pop
aas
jl
js
inc
add
push
adc
loopne
fidivrl
pop
mov
lea
inc
mov
adc
jg
pushf
mov
adc
xor
pop
jp
insb
jl
adc
pop
add
mov
sbb
jae
pop
pushf
add
jmp
jae
int3
wrmsr
cli
jl
mov
lock
repz
into
or
pop
mov
aad
xor
mov
add
ud0
in
push
xchg
loope
xchg
bound
cli
rorl
sbbb
push
gs
cmpsl
cmp
clc
rclb
in
push
cmp
sbb
and
lock
sti
xchg
rcl
adc
push
dec
dec
incb
jecxz
pop
nop
arpl
xchg
fdivs
fwait
lahf
mov
jb
test
adc
jne
idivl
aad
sbb
push
dec
push
cmc
imul
lcall
dec
mov
sbb
scas
mov
adc
rcrl
shlb
mov
push
mov
scas
pop
sahf
mov
repnz
lods
pop
push
mov
insl
popa
mov
loopne
dec
mov
outsl
jnp
mov
cmp
xor
addr16
in
xchg
cmp
dec
jmp
jmp
test
es
mov
adc
or
add
les
mov
sub
fs
sbb
dec
jecxz
mov
nop
inc
lock
cmp
addr16
xorl
adc
jecxz
jae
test
bound
test
push
lock
stos
xor
out
data16
xor
xlat
cltd
stc
test
xor
jmp
in
push
inc
add
pop
sbb
sbb
mov
rcll
adc
in
mov
dec
pop
pusha
sarb
rcrl
in
dec
lret
xor
mov
xor
push
pop
or
fcoms
test
ljmp
addb
and
add
and
push
dec
mov
outsl
scas
sahf
mov
add
pusha
clc
enter
sub
ljmp
mov
xlat
mov
decl
lret
movsl
mov
sbb
mov
xchg
stc
push
movsb
nop
imul
and
fisubs
push
add
dec
push
xor
mov
ja
loop
or
jg
imul
pop
cmp
stc
daa
dec
jo
jp
insb
and
mov
add
sbb
mov
addb
mov
add
ljmp
movsl
dec
mov
movsl
in
hlt
call
scas
fnstcw
dec
xor
add
pop
call
adc
das
fstp
jl
arpl
and
testl
sub
nop
pushl
ljmp
push
cli
pop
call
jecxz
lods
sarb
sbb
pop
inc
jg
les
cmp
imul
dec
outsb
push
mov
jl
ss
cwtl
lret
arpl
lea
js
push
pop
sbb
ds
pop
push
pushf
jmp
ret
add
pop
sbb
push
pop
cmp
imul
rorl
or
icebp
ja
dec
jno
ljmp
addb
add
andl
js
scas
rorl
pusha
imul
pop
push
xor
divl
call
pop
mov
inc
adc
leave
jo
nop
lds
jecxz
pop
add
rcr
fistps
ret
out
lods
and
push
ja
movsb
sub
xor
shll
out
sti
inc
dec
ja
jp
sbb
loop
lret
mov
mov
fcoml
inc
pop
sbbb
out
add
sbb
jbe
stos
pushf
aas
repnz
frstor
ja
movsb
int3
jno
lods
aam
jne
hlt
shll
xchg
sbb
jle
cmc
jns
ljmp
jecxz
mov
xor
inc
pop
ror
scas
xchg
aaa
jne
out
jmp
ss
push
sbb
inc
push
and
divb
cmp
jno
or
cmp
pop
rcl
sub
xchg
ja
and
or
popf
jle
loope
jmp
mov
dec
rcll
pop
or
mov
mov
and
loopne
inc
xor
add
or
sarl
xchg
add
inc
mov
das
dec
jno
cld
lods
insl
test
roll
loope
jle
test
in
divl
repnz
call
lds
cmpsb
ficompl
xor
jb
and
mov
and
jno
cmp
push
mov
and
sub
jne
lea
out
aad
fwait
and
es
mov
add
sbb
in
xorb
movsl
dec
scas
push
xor
mov
dec
inc
inc
ja
and
repnz
cmp
cwtl
ja
leave
adc
iret
movsb
dec
outsl
repz
sbb
mov
cmc
inc
mov
mov
jbe
fsubp
jmp
mov
mov
jg
cld
test
jnp
icebp
xor
push
cmp
xchg
insl
sbb
add
out
lods
and
mov
jl
xchg
add
xchg
rcrl
aad
insl
dec
ret
psllw
rcrb
aad
nop
xlat
scas
cld
int
dec
dec
ss
dec
inc
leave
fwait
orb
or
popf
leave
jg
or
and
xlat
push
jecxz
ljmp
push
jp
ja
popa
and
sub
push
dec
ljmp
add
fcmovb
jl
jo
stos
inc
sbb
fimuls
nop
cmp
pop
mov
mov
fs
std
cmp
es
arpl
cmpsl
aam
loopne
arpl
sub
sbb
stos
inc
sub
or
cmp
imul
sub
pop
and
add
mov
arpl
add
push
fists
inc
jo
pop
adc
sub
inc
sti
pushf
sub
pop
or
jge
mov
pop
adc
add
bound
cltd
mov
add
or
or
jae
lret
cmc
mov
scas
outsb
add
add
mov
div
roll
mov
xor
mov
adc
call
mov
and
jl
daa
mov
or
lods
lcall
push
out
mov
push
jmp
lods
lcall
add
pop
cs
cmp
je
mov
pop
adc
jp
pop
aas
mov
or
adc
pop
mov
shr
jmp
push
pop
decl
and
pop
lds
jmp
into
push
cld
jl
stos
mov
pop
push
insl
add
pop
adc
nop
jb
rolb
int3
jle
leave
mov
je
rcll
xlat
add
add
insb
mov
adc
nop
xchg
rolb
int3
jnp
leave
cmpl
call
pop
push
imul
mov
adc
or
jne
iret
pushf
cmp
call
in
and
pop
ds
bswap
adc
pop
mov
mov
pop
adc
push
fs
fistpll
ja
mov
rorb
sub
cmc
and
jno
jno
aad
dec
in
int3
pusha
pop
adc
cmc
inc
pop
mov
inc
jne
jns
js
inc
push
aas
xchg
pop
fldt
and
pop
adc
nop
push
je
lea
cmp
xor
pop
adc
cmpsb
push
dec
stos
in
and
push
push
pushw
std
add
xchg
pop
lret
call
add
jns
scas
push
add
xchg
rorl
fisubl
loope
inc
push
jecxz
push
sarl
rcr
adcb
mov
cmp
cs
jp
mov
or
into
xchg
inc
inc
sbb
cmp
js
mov
hlt
outsl
xchg
and
scas
pop
xor
jno
xchg
scas
sbb
fs
sbbb
add
mov
ljmp
dec
ret
mov
daa
add
adc
rcll
daa
lahf
ja
fwait
hlt
inc
mov
mov
mov
mov
xchg
add
mov
cltd
xor
add
mov
or
inc
mov
insl
jp
inc
leave
ret
inc
shll
jb
test
dec
pop
jle
push
movsb
subl
push
adc
adc
mov
push
dec
cmp
dec
js
sti
xchg
jo
xchg
sub
xchg
pop
mov
jo
jae
loopne
add
mov
into
aas
int
pop
out
xlat
or
shll
xchg
jecxz
sub
pop
bound
lahf
push
mov
pushl
pop
xor
dec
outsl
fistpl
aas
addb
sbb
arpl
mov
rcrl
xor
mov
jg
pop
arpl
add
je
xor
lds
sbb
jmp
sub
shlb
es
popa
pop
insl
nop
loop
mov
or
adc
fists
les
movsb
aad
sbb
xor
push
xor
xchg
ds
lods
sbb
mov
ret
insb
sub
or
and
clc
mov
and
and
mov
adc
setno
mov
push
add
js
push
cwtl
int
inc
or
push
dec
rorl
ja
and
inc
cmp
xchg
pop
xor
pop
es
mov
daa
js
inc
neg
dec
mov
dec
jno
xor
or
pop
cs
repnz
jmp
mov
pop
pushf
pop
push
jmp
stc
mov
je
adc
sbb
push
es
test
dec
add
int
dec
pop
mov
add
add
mov
mov
and
pusha
inc
addb
and
pop
cli
adc
mov
jge
or
movsl
test
mov
call
cmpl
push
pop
push
shl
fcompl
cmp
jle
sbbb
cmc
and
imul
subb
jl
add
cli
pop
jge
shl
fcompl
test
jecxz
iret
mov
scas
int3
xor
dec
push
or
jae
mov
les
xor
xchg
ds
mov
jg
gs
pusha
adc
aad
call
adc
mov
cli
cmp
aaa
sahf
jne
lods
adc
and
mov
xor
jp
ret
lods
adc
psubb
pop
xchg
test
repz
xchg
sbb
sbb
cmp
jg
iret
pushf
cmp
movsb
and
test
lret
push
sbb
sub
push
add
sahf
cmp
push
jbe
inc
andb
inc
cmpsb
sub
call
sar
xchg
jo
jecxz
aad
orl
fdivrs
js
fdivs
divl
jecxz
stos
ja
add
push
or
add
ja
fwait
cmp
mov
ljmp
in
jo
jmp
adc
inc
outsb
cmp
or
pop
pop
adc
xor
mov
sahf
add
adc
jle
movsl
imul
inc
mov
mov
push
stc
ja
jae
in
pushf
shrl
cmpsl
fisttpll
pop
push
adc
ja
rclb
adc
mov
and
in
mov
pop
into
pop
inc
leave
add
leave
dec
jns
mov
pop
or
cwtl
roll
mov
sub
out
data16
mov
mov
fs
cmp
pop
xchg
cwtl
scas
add
loop
divl
jns
aam
sub
lcall
pusha
pop
pop
les
in
pop
int3
popa
push
pusha
mov
rcrl
stc
fs
dec
dec
dec
les
lock
mov
xchg
leave
or
popf
stc
dec
xor
mov
outsl
out
scas
outsb
and
insb
fidivs
in
pop
ss
js
and
enter
repnz
sbb
pop
inc
mov
mov
imul
mov
enter
xor
rcl
imul
stos
inc
sub
bound
xchg
add
fisubs
mov
stos
insl
and
or
popf
lahf
es
and
shll
inc
xchg
adc
js
fdivrs
call
mov
test
mov
movsl
push
leave
cmp
xchg
adc
fsts
out
cwtl
jmp
insl
arpl
call
inc
adc
out
das
dec
lret
xchg
pop
mov
push
mov
das
movsb
ficompl
mov
in
push
push
cmp
xchg
and
pop
mov
jnp
test
xor
dec
pop
pop
cli
cmc
ljmp
xor
imul
jb
cs
xchg
cmpsb
in
pop
pushl
movsl
test
inc
xor
dec
test
add
xor
jg
hlt
mov
inc
jg
xor
pop
cs
pushf
ret
lock
push
lret
jmp
lds
cli
jle
movsb
nop
push
jno
pop
ds
leave
adc
or
lahf
mov
push
dec
arpl
sub
dec
hlt
call
or
out
mov
imul
cmp
lret
jno
int3
mov
jecxz
bound
dec
dec
in
lods
clc
shll
popf
imul
xchg
mov
cli
jl
movsb
xchg
nop
push
jge
or
stos
aam
push
test
xor
pop
das
or
in
mov
cmp
lret
sbb
pop
sub
in
fs
mov
xchg
pop
jnp
out
arpl
add
addl
orb
gs
or
arpl
xor
push
adc
ja
add
mov
add
icebp
aam
pusha
and
arpl
mov
int
xor
push
adc
sub
add
xchg
loop
pop
dec
mov
mov
sub
cmp
cld
loopne
movsb
sbb
mov
xchg
push
inc
mov
cmp
sahf
aad
or
mov
cmp
sub
lds
ljmp
mov
clc
fwait
les
jb
lret
xlat
pop
add
add
ret
dec
xor
test
imul
outsb
mov
xchg
push
into
int
cmp
pcmpeqw
push
inc
mov
insb
adc
xchg
jmp
jmp
rcll
jg
sbbl
inc
lods
adc
clc
lock
mov
or
pop
mov
pop
hlt
xor
mov
and
sub
loop
insl
mov
mov
sbbl
adc
je
imul
aas
dec
push
cli
nop
mov
mov
out
out
mov
xor
xchg
xchg
inc
fisubl
inc
pop
pop
enter
and
fcomps
faddl
jp
mov
pop
in
sbbl
mov
mov
and
mull
out
sub
pop
popf
stc
movsb
leave
pop
xchg
loop
call
dec
mov
mov
sbb
dec
mov
ljmp
xor
xor
adcl
in
fmulp
cltd
pop
ficoms
xchg
jb
leave
lret
pop
xchg
push
ja
cmpsb
cs
out
mov
in
sub
pop
cmp
call
imul
lret
xor
dec
int3
aaa
push
inc
das
ja
mov
into
cmp
pop
hlt
jge
sbb
scas
outsl
dec
mov
nop
in
lahf
adc
outsb
sbb
mov
pop
out
gs
outsl
lret
xchg
test
stos
jns
push
scas
sahf
mov
sub
mov
pop
je
cmpsb
add
dec
mov
pop
push
xchg
sub
int3
cmpsb
in
cmp
xchg
aad
cs
xchg
lods
bound
jbe
cmp
pushf
push
outsb
cld
push
stos
scas
xor
xlat
stos
push
fwait
rcrl
mov
mov
fnstsw
test
fdivs
fucomp
dec
push
fs
xor
jbe
mov
mov
add
push
jne
pop
mov
adc
jle
int3
in
mov
stos
lea
or
jle
scas
xchg
bound
mov
jne
js
aas
das
cs
cwtl
das
cwtl
je
xor
test
fucomi
inc
ds
jb
add
mov
dec
and
mov
xor
mov
cmpsl
add
in
jb
mov
rorb
xchg
inc
ds
in
jo
sub
imul
vmovlps
mov
enter
xor
fidivs
jbe
add
addl
sub
xchg
cli
sbbb
std
je
jecxz
cltd
push
pop
call
jmp
push
hlt
pushf
lock
mov
dec
adc
mov
repz
pop
ret
dec
jo
mov
cs
cmp
mov
adc
into
movsb
test
leave
or
jecxz
shll
push
sarb
push
test
das
pop
aaa
xchg
adc
xlat
std
push
jecxz
bound
clc
pop
push
leave
xchg
inc
pop
cmpsb
sbb
jge
int
in
push
mov
and
pop
das
cmc
lret
insb
mov
cmp
leave
je
xchg
leave
push
shr
roll
push
addr16
mov
ret
mov
rcl
dec
adc
fadd
testl
xchg
inc
outsb
add
inc
adc
ret
shrb
mov
mov
xchg
push
in
shll
rorb
push
mov
jns
sub
nopl
and
out
mov
loopne
mov
lds
pop
push
dec
jb
jmp
xchg
xchg
ss
push
inc
pop
ljmp
pop
mov
push
push
add
ljmp
dec
add
mov
mov
fimull
push
push
cld
jne
jbe
test
into
inc
jnp
leave
jp
mov
pop
mov
clc
push
cltd
outsl
dec
xchg
mov
or
pop
xor
cmp
mov
fwait
pop
hlt
jg
pop
ljmp
mov
dec
dec
push
pop
pop
arpl
insb
xor
add
jge
xchg
sub
adc
lahf
push
xchg
mov
xchg
addr16
daa
aam
push
enter
dec
mov
fiaddl
adc
dec
or
pop
mov
xor
ja
inc
imul
dec
test
rcrb
ljmp
mov
sbb
jno
push
in
push
in
pop
and
dec
dec
cmp
mov
add
xor
or
fstps
stos
cmp
xchg
daa
outsb
outsb
xchg
jbe
out
pop
int3
adc
inc
pop
mov
push
xchg
test
adc
cmp
into
jg
fdivrl
mov
repnz
dec
cmp
cmp
cld
into
cmp
pop
sub
mov
test
mov
rcll
lahf
lcall
mov
mov
and
mov
psraw
pop
or
pop
lcall
xchg
popa
adc
lcall
jb
fs
ja
scas
notl
and
leave
enter
loop
jecxz
pop
nop
xchg
mov
mov
pop
jnp
jb
or
pusha
cmp
xor
jne
inc
adc
movsb
cli
insl
jmp
in
daa
ja
sub
int
and
outsb
or
sub
xor
in
addb
push
aas
mov
out
shlb
idivl
dec
inc
cld
subb
aam
ss
sub
cmp
cmp
mov
cwtl
popa
sbb
ja
cltd
sub
jbe
test
xor
outsl
and
sub
mov
mov
inc
ds
sti
adc
fmul
and
jb
inc
jmp
mov
aam
rcrb
xchg
sbb
rolb
mov
stc
ljmp
pop
or
adc
xor
inc
dec
les
sbb
loopne
pusha
addl
jno
mov
pop
jns
dec
aad
cmpsl
outsb
xchg
inc
mov
in
out
mov
add
xchg
fwait
pop
mov
xchg
ja
pushf
imul
push
gs
mov
std
cli
hlt
daa
mov
sbb
push
xchg
rorl
cmp
fadd
ja
cli
push
mov
push
sbb
xchg
insl
jl
hlt
cs
hlt
inc
mov
or
jne
fcompl
sub
ljmp
xor
xchg
es
cmp
test
or
pushf
outsb
pop
push
jnp
mov
lcall
lds
adc
xor
dec
sub
ja
jge
mov
xor
jge
fdivl
das
pop
mov
ja
push
arpl
sahf
aad
ja
pushf
sub
cld
orl
push
adc
popf
hlt
call
mov
cli
loope
into
mov
adcl
sbb
push
fdivrs
mov
push
xlat
cmpsb
add
test
dec
iret
or
js
sbb
aam
cmp
add
test
jno
and
sbb
dec
dec
stc
hlt
fwait
bound
arpl
fnstcw
mov
mov
dec
jne
xor
icebp
loope
or
add
and
pop
dec
jmp
and
push
xor
sub
push
call
mov
loopne
sub
and
nop
xlat
sub
inc
or
fwait
ja
xor
sub
push
loopne
or
mov
pop
insb
xchg
push
sbb
repnz
dec
cld
sbb
sti
jmp
notb
adc
shr
sbb
push
imul
cmp
push
push
loop
js
and
xchg
push
mov
inc
scas
pusha
rcrl
gs
rcl
jg
sub
adc
mov
mov
aas
data16
imul
imul
push
and
mov
out
and
inc
pop
sahf
mov
jecxz
add
mov
pop
jmp
lods
mov
sahf
popa
push
enter
outsl
mov
cmp
cmp
lahf
adc
xchg
pop
out
xchg
sub
data16
sub
loope
jmp
or
cld
mov
cs
call
inc
cmp
pusha
push
pop
fistpll
int
hlt
enter
xchg
mov
dec
mov
pop
pop
jbe,pn
jne
and
mov
cmpsl
cwtl
test
dec
fs
pop
test
leave
cmp
mov
or
ss
inc
or
push
or
xchg
xor
push
cmp
out
notl
les
adc
call
shrb
adc
es
movsl
sbb
pop
aaa
mov
out
add
add
or
cmp
pop
xchg
sbb
ss
lds
dec
or
leave
clc
cmp
push
jno
test
faddl
inc
mov
lock
loop
push
cmpsb
and
cmp
jnp
bound
add
xchg
adc
and
leave
inc
xchg
cwtl
jmp
jns
pop
jle
dec
inc
nop
pop
mov
xorl
rcl
dec
scas
cmc
pop
xchg
insb
jmp
jecxz
data16
outsl
lret
inc
jo
xchg
adc
jae
test
pop
mov
das
imul
or
cmp
xor
add
movsl
imul
shrb
xchg
xchg
inc
cmp
outsb
test
adc
push
cmp
lds
and
stos
or
fildll
cmp
lock
int
dec
lods
fldt
mov
test
mov
in
jg
fldenv
dec
inc
test
roll
inc
cld
add
adc
sbb
jne
ss
pop
mov
ja
push
dec
jno
out
cmpsl
pop
mov
adc
add
inc
inc
insl
pushf
int
pop
mov
mov
jecxz
jne
inc
icebp
xchg
dec
les
push
sahf
push
add
mov
into
enter
xor
or
jo
call
hlt
mov
jge
add
iret
mov
xchg
rol
call
add
mov
xor
js
shrl
dec
test
dec
sbb
sarl
jae
into
lret
test
push
xor
mov
sub
and
das
mov
adcb
sbb
sub
popf
rorb
std
decl
push
pop
mov
std
imul
or
mov
and
xchg
lods
cmp
mov
lcall
inc
xchg
sarl
xlat
mov
and
cmp
push
loopne
jle
mov
dec
in
dec
repz
mov
lods
sub
lret
dec
call
sbbb
sbb
int3
leave
sbb
or
clc
push
inc
ljmp
push
mov
jle
xchg
orb
out
xchg
pop
cmpl
cmp
add
or
add
adc
fstp
in
outsl
popa
lcall
xchg
lds
or
mov
cmp
or
and
sbb
mov
arpl
loope
or
add
dec
jecxz
mov
or
sbb
xchg
jle
inc
loop
addr16
repz
sbb
jo
mov
jbe
cld
push
and
popa
xorb
mov
xchg
jbe
add
mov
jmp
bound
aam
sbb
shlb
mov
push
and
add
xchg
jecxz
cmpsb
add
or
cmp
outsl
dec
xor
mov
loop
pop
mov
and
jmp
cmp
mov
fs
ficomps
popf
out
rol
jge
sbb
sub
dec
repz
ss
jne
and
flds
pushf
insl
test
clc
arpl
sub
add
inc
scas
mov
imul
mov
les
push
pop
sti
dec
push
into
jno
pop
pop
sub
inc
xlat
pushf
xchg
rcll
addr16
outsb
loop
repz
jbe
es
xchg
push
sub
cmp
insb
inc
mov
fstl
pushl
cli
mov
in
xchg
gs
xchg
js
inc
cmp
pusha
scas
imul
jle
cmpsl
inc
xchg
jo
pushf
or
push
jbe
push
dec
repz
dec
push
sbb
je
dec
loopne
test
or
popf
cmp
push
sub
mov
jns
mov
push
mov
push
pop
cmp
out
test
cs
mov
aaa
sbb
shrl
mov
pop
jb
sub
andl
mov
xchg
adc
xor
nop
popa
pushl
hlt
xor
f2xm1
test
inc
aaa
stos
jl,pn
sbb
sbb
insb
pop
repz
fnstsw
sub
into
pop
cmp
fnstenv
pop
mov
filds
lods
mov
out
mov
inc
fs
mov
dec
dec
mov
das
push
mov
insb
sbb
ret
int
mov
lods
loope
dec
or
ret
push
cld
cmp
imul
int3
mov
xor
in
subl
inc
test
or
cmp
fs
hlt
fcmovnbe
mov
pushf
cmp
les
pop
pop
mov
dec
in
push
mov
or
adcb
jns
arpl
sub
add
xchg
adc
cld
or
cli
hlt
cwtl
pop
mov
dec
jnp
movsl
lods
lret
dec
call
loop
cs
mov
cli
jle
movsl
xchg
push
jp
xor
cli
jmp
add
pop
pushf
loopne
cmp
nopl
clc
add
pop
lods
movsb
mov
jmp
cmp
and
jmp
xchg
xlat
push
leave
ja
xchg
int
lret
dec
mov
popf
cmp
adc
aad
jg
or
int
jle
xchg
filds
add
int3
jl
mov
inc
inc
mov
add
cmpsl
xchg
jle
shrl
mov
xchg
fisubl
add
push
mov
add
scas
xchg
jle
xabort
mov
daa
insl
cmp
pop
push
cmc
or
inc
adc
mov
js
loopne
jp
jle
shrl
mov
sub
popa
ja
pop
cmp
addb
stc
pop
jo
call
sbb
das
pop
mov
sub
jle
adc
paddb
jmp
icebp
bound
movsl
jno
ljmp
ffree
mov
repnz
jne
sbb
xor
test
and
cmpsb
leave
imul
adc
stos
repz
out
outsl
xchg
sub
sbb
sbb
insb
pop
cmp
repz
lods
outsb
outsl
mov
loope
clc
js
pop
cmpsl
sub
in
mov
mov
insl
jp
fcmovnb
in
leave
cmp
push
std
sete
or
test
jge
in
push
pop
lret
xchg
cltd
mov
push
scas
mov
jmp
adc
ss
mov
xchg
mov
xor
movb
data16
mov
inc
inc
mov
xor
repz
xchg
jge
daa
xor
ret
das
js
aad
repz
and
aas
mov
sub
js
jne
adc
pop
adc
cmpsb
pop
or
pusha
sub
jecxz
jl
ss
mov
sub
xchg
jmp
fnstenv
pop
mov
les
sub
fstpl
sub
je
sbb
or
in
insb
sub
mov
call
pop
mov
sahf
rcpps
ja
and
pushf
out
or
dec
or
xor
rolb
rcrl
jmp
and
cmp
jo
mov
sarb
lcall
mov
push
cbtw
jbe
jae
cmp
lods
daa
clc
out
popa
outsl
fsubp
jecxz
popa
cs
push
jns
pop
fwait
sahf
jne
xor
pop
pop
repz
cmp
inc
aaa
pop
outsb
add
dec
dec
enter
push
out
mov
mov
xchg
xchg
xchg
sbb
push
cs
xor
pop
in
xor
sbb
test
shl
inc
cld
and
xor
xor
and
loopne
mov
inc
mov
aas
mov
sub
ds
divl
xor
mov
inc
cmpb
or
xchg
dec
push
xor
hlt
dec
xchg
pushf
xorb
in
dec
xchg
cld
test
outsl
scas
cwtl
jo
adc
popa
adcb
mov
jl
scas
sbbl
sub
scas
data16
insl
fmul
lcall
adc
daa
mov
pusha
cmp
push
test
mov
xor
cmp
and
arpl
sub
int
lret
sti
sbb
ret
test
xchg
mov
pop
and
ds
or
sbb
iret
test
addl
cwtl
and
lcall
popf
cmp
adc
mov
cld
decb
mov
test
jecxz
sbb
xchg
mov
mov
sahf
push
xchg
push
jns
sub
hlt
call
pop
out
lds
jg
pushl
jbe
sub
mov
mov
mov
rolb
loopne
mov
std
jo
cs
inc
xchg
xchg
in
andb
shll
jbe
inc
sub
sbb
lahf
sub
mov
insl
les
jge
jle
cmpsl
rcll
notl
cmp
bound
and
pop
or
int3
jne
dec
mov
mov
pop
and
push
mov
jecxz
sbb
jge,pt
jg
pop
add
ss
jo
adc
into
std
std
mov
inc
mov
xchg
push
iret
jmp
xlat
hlt
jg
cmp
push
adc
sub
jg
inc
adc
jg
push
push
test
loopne
pushf
xor
jge
ss
clc
mov
pop
in
push
ljmp
pushl
lcall
dec
xchg
xor
inc
lea
sbb
pusha
ljmp
test
add
mov
sti
sbb
sahf
push
push
into
jbe
xor
je
sub
ja
cmp
lret
jae
loopnew
clc
notb
sbb
pop
jp
loop
movsl
inc
insl
mov
clc
clc
xorl
pushf
cld
xor
or
popa
orl
lahf
fdiv
jge
idivb
dec
scas
fsubrs
popa
pop
cli
inc
leave
adc
daa
je
jmp
loop
test
imul
rcrb
dec
mov
loop
or
push
mov
pop
es
adc
rcl
pop
daa
adc
and
or
xlat
fnstenv
push
hlt
mov
outsl
ret
jae
mov
jnp
push
inc
lods
jnp
ds
repnz
pop
adc
int
pushf
dec
dec
dec
les
xor
inc
xorl
pop
or
push
in
movsl
imul
cmp
ljmp
adc
addb
loope
bound
daa
cld
mov
pop
sub
sub
push
dec
int3
inc
add
ja
push
sbb
andl
pop
pop
out
mov
cmp
cwtl
ja
call
add
sub
push
cmp
push
adc
movsl
sbb
add
into
leave
lret
pop
dec
push
mov
lock
xchg
jb
insb
mov
rcrl
sbb
push
mov
roll
jae
in
push
sbb
repz
and
cmpsl
cmp
xchg
std
sub
loopne
mov
mov
jmp
cs
xchg
xchg
xor
lods
arpl
pop
push
leave
xor
add
sub
xchg
mov
es
clc
hlt
test
sarl
adc
repz
lods
test
fimuls
mov
lret
dec
aaa
lea
cmp
leave
fstps
dec
inc
idiv
jo
in
dec
sub
loopne
jmp
movsl
mov
sub
cltd
and
mov
push
jo
cs
mov
pop
push
das
das
cmpl
mov
or
out
mov
cmc
mov
cmpsl
inc
fnstsw
sahf
shrb
roll
outsl
pop
pushl
mov
cmp
inc
dec
xchg
scas
aaa
jnp
cmpsl
push
and
cld
sbb
jg
jle
lea
pop
add
je
shll
sahf
dec
push
jg
jne
cmp
xor
jge
or
mov
inc
sbb
mov
das
lock
dec
call
xor
test
clc
fisttps
jg
movsl
adc
adc
push
mov
mov
or
dec
movaps
call
sbb
jge
mov
or
aas
shlb
mov
pop
rcll
stc
insl
fcomps
jg
mov
ljmp
sti
or
dec
ret
xchg
xor
dec
ret
mov
pop
and
pop
mov
dec
dec
xlat
mov
lock
or
dec
push
lea
pop
pop
ss
pop
dec
adc
push
push
mov
mov
cmpsb
sbb
in
push
shll
jecxz
jmp
cmp
jl
mov
lret
arpl
cli
inc
jnp
inc
aas
pushf
push
inc
fadd
and
push
dec
imul
hlt
bound
stc
andb
call
insb
add
js
das
dec
mov
fs
mov
push
cmp
rolb
out
and
jmp
adc
ja
add
jmp
push
xchg
enter
xchg
pop
pop
mov
push
movsb
gs
adc
dec
push
or
xchg
inc
dec
clc
loop
adc
or
pusha
leave
mov
push
xor
xchg
sar
xchg
jl
xor
lea
lods
adc
mov
sbb
pop
push
inc
jno
les
out
push
or
mov
pushf
jo
adc
xor
dec
call
call
out
add
loop
jbe
call
pushf
adc
mov
sub
clc
or
int3
repz
dec
je
ss
movsl
inc
add
popa
mulps
dec
out
imul
daa
sub
xlat
or
jge
jno
cmp
aas
in
loope
dec
mov
divl
leave
sbb
mov
ret
jge
sbb
sub
xchg
push
pusha
out
ss
fbstp
data16
paddq
repz
sbb
push
adc
pop
xchg
and
sbb
mov
inc
adc
mov
pop
xchg
scas
jle
rol
xor
mov
jmp
loope,pn
push
negl
ficoms
ret
pop
push
xlat
cld
lods
hlt
ds
jmp
pop
push
adc
es
mov
mov
mov
or
test
test
jae
sub
fistps
pop
cmp
es
nop
pop
xchg
push
andb
push
adc
adc
loope
enter
pop
adc
mov
jno
cmp
leave
icebp
ficoml
popf
xchg
xchg
out
mov
mov
nop
lea
sub
ret
add
ror
jbe
xor
jo
pop
adc
int
aas
in
aas
sub
fdiv
pop
mov
andb
adcl
jno
dec
add
push
fildl
push
out
adc
in
lret
xor
lock
in
cltd
pusha
mov
xchg
in
xchg
xchg
adc
dec
ljmp
cmpl
iret
pushf
pop
imul
pop
or
jo
loopne
sub
push
stc
dec
mov
sbb
cmp
sbb
xor
test
inc
jo
pop
adc
adc
ds
cmp
add
mov
je
xchg
mov
or
jae
dec
xor
fdivrl
into
pop
mov
and
push
jp
ljmp
and
fcom
xor
inc
lods
mov
push
inc
cs
mov
cmp
or
cs
lret
jnp
dec
push
cmp
cmpsb
int
enter
xchg
jnp
test
lock
jnp
dec
lea
je
cmp
add
cli
jle
mov
pop
testl
jmp
sbb
cmp
in
dec
shr
and
daa
jb
cmp
jo
sahf
jae
xor
inc
inc
rclb
lock
xor
orl
shll
jg
jo
adc
add
cltd
inc
addb
inc
mov
and
mov
cld
in
and
mov
or
or
stc
or
test
movsl
pop
rorb
xor
gs
cmp
inc
hlt
cld
std
orb
mov
or
shll
pushf
cmp
sub
sub
dec
sub
shll
dec
iret
cltd
int
rcrb
adc
bound
jmp
inc
cld
add
sub
jmp
sar
in
mov
or
jecxz
shll
je
adcl
in
out
das
pop
in
sbb
addb
and
mov
sahf
ficoml
pop
mov
lea
shrl
mov
jg
arpl
cmpsb
adc
mov
aaa
lcall
rcrb
cli
je
inc
cmpb
inc
inc
repnz
adc
cmp
fsubs
xchg
mov
jbe
xor
xorl
jb
ja
mov
xchg
push
popf
pop
in
cmc
hlt
pop
dec
stos
cmpsl
and
xlat
sub
hlt
add
lret
jecxz
sti
xchg
int3
jo
pop
adc
dec
push
lock
dec
int
gs
ja
jg
in
jo
pop
mov
mov
lock
mov
xor
addr16
lret
push
xchg
mov
dec
adc
mov
imul
out
icebp
stos
jae
xor
fisubl
out
mov
mov
and
call
xor
push
inc
add
inc
loope
push
lods
add
je
fwait
loope
pop
push
sub
jp
out
adcl
and
daa
xor
movsb
outsl
push
adc
lahf
lcall
rclb
jne
dec
mov
lret
sub
dec
adc
lahf
out
jg
xchg
hlt
aam
mov
cmp
adc
movb
bound
jp
dec
mulb
inc
mov
call
adc
push
pop
mov
outsl
jae
mov
pushf
pop
bound
mov
mov
xchg
mov
int3
ret
inc
mov
imulb
or
adc
push
add
pop
mov
rol
push
adc
mov
jnp
out
sbb
inc
test
adc
insl
loopne
loop
mov
and
jge
sbb
cmp
cmp
in
mov
pop
aam
dec
dec
xchg
mov
stc
pop
adc
mov
das
test
xchg
fstpl
xchg
cmp
lods
mov
or
push
adc
mov
enter
lcall
lcall
out
add
push
ret
xor
rcll
xlat
cmp
dec
dec
pop
lret
sub
sub
push
out
mov
push
adc
arpl
sub
movsl
test
push
push
movsl
cld
ret
out
mov
xchg
das
cmp
aad
mov
and
loope
sahf
frstor
push
shrl
faddl
sbb
ret
push
push
sahf
or
lahf
xor
pushf
js
pop
mov
std
cli
pop
lcall
sub
int
call
push
lds
push
mov
jg
test
aas
or
cli
hlt
lcall
push
cmc
pushf
sub
mov
pop
hlt
imul
jmp
insl
lea
hlt
incl
mov
cmp
jl
mov
aas
jmp
add
xchg
das
cmpsl
pop
xor
testl
mov
loopne
pop
ret
nopl
cs
mov
mov
incb
es
inc
inc
xchg
mov
mov
movsl
push
xor
sbbb
lret
dec
call
pop
decl
mov
fisttpl
out
call
xchg
hlt
add
add
aaa
and
mov
pushl
jbe
mov
dec
jo
xlat
sub
inc
or
inc
mov
or
movsb
jle
xchg
or
stos
push
jne
icebp
pop
das
lock
or
lret
rcrl
jb
pop
or
std
mov
daa
jae,pt
push
push
in
mov
jmp
inc
jmp
scas
insb
xchg
push
mov
cli
jb
xchg
scas
rcll
mov
sahf
pusha
push
test
icebp
cli
lds
jl
mov
xor
mov
jmp
ds
adc
and
rcl
hlt
jno
dec
mov
pusha
stos
loop
and
push
out
mov
sbb
push
mov
fdivrl
mov
lock
push
lcall
ljmp
dec
dec
ficoms
pop
push
sbb
loop
call
jne
xchg
cmp
ffree
push
outsb
fld
mov
sbb
mov
jecxz
jmp
ss
mov
repnz
mov
push
jg
pminub
push
inc
in
fdivl
mov
enter
lods
idivl
lock
mov
sti
xchg
jne,pt
lds
icebp
jno
ja
or
in
push
sub
adc
pop
aad
in
lods
mov
add
fs
lds
mov
cmpsl
ret
mov
jg
lret
jecxz
scas
sub
cwtl
cmp
testb
mov
int3
cmpsb
pop
rolb
mulb
test
es
inc
adc
movsb
push
movsl
imul
repnz
jb
movsl
popf
nop
xor
and
mov
clc
andl
pop
lcall
sbb
push
push
fnstcw
sub
push
xchg
or
mov
imul
mov
imul
je
aas
mov
dec
add
cld
add
add
sbb
mov
movsb
mov
les
imul
das
xor
iret
push
lcall
mov
dec
cmp
jbe
repnz
gs
pop
xorb
pop
pop
pushf
mov
xor
outsl
mov
test
pop
jne
mov
and
test
aaa
mov
add
sub
jmp
sub
jo
pop
adc
lret
mov
es
jne
sbb
add
push
ucomiss
fstpl
push
mov
les
fmul
inc
fistps
nop
cmpsb
stos
xchg
in
nop
fwait
push
fs
mov
rcll
pop
sbb
outsl
sbb
mov
inc
mov
xor
mov
ljmp
mov
ds
inc
fdivr
mov
dec
dec
shl
in
hlt
sub
jl
shr
mov
loop
aam
rcrb
movsl
adc
addl
je
shrb
or
sub
fsubrp
dec
mov
int3
inc
int
adc
lea
bound
pop
jl
mov
iret
cwtl
jns
popa
sub
jo
pop
adc
pop
sub
mov
orb
fidivs
stc
or
sbb
jo
mov
int3
pop
or
cmpsb
fcmovnb
xchg
pop
dec
pop
jns
call
or
mov
add
and
sarl
in
push
pop
vmread
and
mov
fbld
test
add
mov
pushf
push
in
dec
fdivrl
jge
clc
mov
fyl2x
mov
xor
and
lods
adc
ja
adcb
cmp
nopl
lea
cmp
fcmovne
xchg
mov
int
mov
adc
add
inc
xchg
test
jecxz
push
mov
lds
jg
decl
cwtl
stc
test
or
stos
cli
hlt
xchg
mov
mov
into
adc
add
das
pop
lret
ret
dec
mov
cmp
int
rcrl
cld
lods
loope
orb
cmpsb
push
and
lret
inc
or
inc
cld
sti
pop
fwait
arpl
sub
imul
xchg
mov
push
adc
cmpsl
stos
arpl
dec
inc
pop
movsb
mov
inc
imul
aam
jg
cmpsl
aaa
pushf
xlat
mov
pop
mov
jae
fs
inc
pop
xor
dec
mov
add
fdivrs
dec
frstpm(287
mov
mov
push
test
pop
into
popa
nop
mov
xor
xor
rcrb
sbb
inc
cltd
pop
leave
jmp
gs
sbb
mov
clc
icebp
ficompl
cmp
jno
loope
dec
stos
rclb
mov
fnstenv
adc
into
xor
sbb
jns
xchg
lahf
fidivl
in
xlat
movsb
cmpsl
mov
push
sbb
inc
fs
rclb
gs
lret
subb
fwait
xchg
sbb
cmp
popa
cmp
mov
mov
mov
push
scas
loop
cmp
xlat
push
xchg
cmp
inc
data16
adc
popf
dec
jo
xchg
pop
lret
fisttpl
adc
insb
lods
pop
pop
push
das
sub
sub
and
push
pop
xchg
gs
mov
movsb
pusha
sub
cmpsb
popf
out
stos
or
pop
xchg
push
fldl
stos
insb
xchg
mov
stos
subl
push
adc
lds
fsubr
sahf
in
fwait
xor
lods
add
adc
lods
sbbb
mov
mov
push
adc
push
pop
aad
mov
test
shrl
sbb
das
shlb
mov
sbb
ficomps
enter
xchg
and
or
aaa
mov
pop
into
sub
fimull
jmp
jp
xor
cmp
and
popa
jb
out
add
jns
pushf
push
ret
sbb
fidivrl
in
movsl
xor
mov
jo
adc
push
in
fistps
mov
and
clc
call
jp
fisubl
lret
add
jp
stos
neg
lods
xor
iret
xchg
mov
jo
mov
and
out
mov
adc
addl
dec
push
repz
pop
std
loopne
das
das
pop
xchg
sub
das
inc
rcll
lods
sub
lret
add
cmp
movsb
insb
lea
pop
lds
scas
hlt
dec
out
sahf
mov
xchg
pushf
mov
dec
cwtl
xchg
inc
pop
push
cld
aas
int
inc
mov
pop
add
pop
movnti
mov
inc
adc
and
aas
incl
jge
insl
aam
push
and
std
insl
loope
shlb
adc
cs
pop
inc
push
mov
or
call
xchg
add
push
lea
adc
lcall
mov
inc
clc
shl
out
pop
add
pop
and
push
pop
fdivrs
cli
hlt
inc
mov
inc
popf
cmp
stos
mov
int
mov
lahf
addl
cmc
mov
or
shr
lds
jbe
pop
mov
std
cli
jecxz
push
mov
jge,pt
jecxz
push
mov
pop
jg
call
add
int3
mov
pop
sub
dec
pop
outsb
ret
popf
cmp
in
mov
ret
call
dec
jno
jne
dec
jo
add
pop
mov
insl
call
pop
out
inc
push
cli
jle
mov
jns
mov
fcoml
js
pop
adc
jmp
test
jne
xchg
call
cld
sahf
lahf
rorl
mov
imul
cmp
stos
incl
mov
xchg
jge,pt
repz
loop
fnstsw
clc
mov
or
pushf
jo
adc
pop
korb
mov
sti
cmpsl
cmp
test
ljmp
push
ret
roll
or
dec
jne
xor
aas
mov
das
testb
sub
push
leave
hlt
in
es
pop
adc
dec
aaa
xchg
sbb
into
sti
adcb
push
push
fldcw
dec
jge
push
test
popf
push
xchg
test
ljmp
pop
loop
xlat
fsubrl
cwtl
ds
mov
inc
mov
pop
cld
pusha
jne
push
rclb
rcrb
jns
shll
xchg
jmp
inc
lock
out
mov
aas
dec
xchg
scas
xchg
mov
les
jb
fists
jae
ret
lods
pop
adc
jns
test
xor
adcl
dec
lret
shl
mov
jg
xor
push
sbb
push
xchg
xchg
push
test
adc
data16
add
lret
loop
xor
std
mov
pop
cmp
dec
and
add
jg
fmul
lahf
aam
daa
dec
ja
xchg
nop
aad
mov
bound
mov
stos
sub
pop
pop
pop
imul
cld
fstpl
mov
or
cmc
adc
mov
dec
inc
pop
movsl
push
popa
ss
jle
dec
dec
fiaddl
jle
stc
sub
sbb
xchg
sbb
push
insl
add
test
sbb
xchg
inc
aas
popa
outsl
xlat
pop
cli
mov
inc
ficoms
mov
fdivp
or
andb
loope
cli
jge
adc
adc
sub
xor
pop
iret
fldenv
push
shl
js
enter
inc
ds
and
int3
xlat
xchg
cli
xor
jne
int
xchg
in
xor
imul
mov
push
sub
ret
int3
mov
sub
cmp
mov
pop
stos
loopne
jmp
fwait
cld
xchg
dec
sub
cmp
fadds
lock
xchg
xchg
or
jnp
clc
jp
push
adc
rcr
push
movsl
ds
decl
pop
push
adc
rcl
push
sbb
sbb
scas
or
adc
loop
inc
dec
and
jecxz
sbb
cmpsl
cmp
sbb
xchg
lahf
push
outsl
imul
mov
loop
hlt
push
mov
adc
out
xchg
scas
jo
adc
lahf
std
push
lea
pushf
dec
ljmp
jb
inc
rol
pop
cmp
fidivrl
pop
orb
mov
dec
lds
sbb
mov
fadd
jle
mov
les
mov
pop
sub
mov
call
sbb
int
stc
xchg
das
pop
mov
ljmp
jns
insl
popf
jge
hlt
shrl
mov
adc
vcvtpd2dqy
cmp
call
sub
xchg
nopl
cmc
call
sbb
push
xor
insl
js
mov
pop
ret
dec
jmp
mov
jmp
pop
dec
vmwrite
call
sbb
bound
sub
cli
mov
nop
sub
rolb
jne
push
rol
pop
cmp
jl
lea
shll
add
pop
ds
inc
negl
xabort
mov
popf
idivl
stc
mov
jg
inc
std
push
in
arpl
jge
mov
inc
dec
cmp
mov
pop
sub
jmp
inc
push
xor
daa
pop
push
cs
pushf
cmp
sub
sub
mov
hlt
call
inc
fdivrp
hlt
jmp
sbb
arpl
xor
cld
push
imul
cmp
in
testl
mov
ret
pop
jmp
jmp
ljmp
sub
in
pop
mov
test
in
cld
das
add
xchg
out
push
xor
cmp
jecxz
mov
mov
mov
dec
testl
jbe
xchg
jbe
inc
jge
mov
shr
lock
xor
imul
sahf
shlb
sbbb
pop
lcall
push
dec
and
jnp
add
loopne
push
out
and
mov
lea
cmp
fsub
leave
cwtl
lods
lahf
jge
int
dec
xor
repz
cmpsl
aam
push
dec
iret
xchg
rolb
sbb
jb
movsb
cmp
fwait
jmp
cli
pop
jg
dec
dec
call
int3
sbb
inc
subl
jle
and
xchg
xchg
pop
popf
sub
pushf
adc
push
adc
mov
jns
adc
gs
sahf
push
rcl
rcrb
sub
and
shlb
pusha
aad
add
cmp
es
jo
pop
adc
out
jae
push
sbb
lcall
jge
idivb
dec
mov
mov
add
lea
addr16
test
inc
push
pop
adcb
rol
sbbb
sub
mov
and
push
out
gs
sbb
int3
cmp
sbb
cmp
xchg
scas
stos
rcll
cwtl
push
repz
add
enter
pop
sbb
movsl
rcrb
int3
ret
mov
sbb
pop
js
inc
test
xchg
xchg
xchg
aas
in
sbb
cmp
xchg
in
inc
or
push
push
fcomip
loope
cmp
fisubs
and
cmpsb
aad
in
pop
lds
outsl
test
jno
push
loopne
divb
dec
add
adc
xor
cli
in
inc
cmp
mov
inc
aaa
xlat
xchg
inc
add
insb
arpl
ret
out
addr16
sub
xchg
pushf
cmp
add
outsl
pop
decl
daa
push
aam
int
dec
push
imul
cmpsb
push
aad
fldl
fidivs
sbb
repz
sbb
mov
int
dec
pop
push
test
pop
add
test
sub
lds
mov
jg
add
mov
dec
sbb
insb
imul
dec
push
mov
psraw
ss
or
mov
pop
mov
lds
jg
jae
shlb
rorl
inc
cli
push
scas
lds
jg
call
xchg
ret
ss
mov
test
mov
and
or
lods
pusha
lock
std
ret
dec
jmp
mov
dec
nopl
pop
add
call
outsl
xor
scas
pop
sub
mov
push
in
push
mov
imul
loop
lods
xchg
jle
jmp
jl
mov
jge
int
rcrb
lret
jb
bound
mov
les
sub
mov
shll
bound
fs
inc
cld
pop
jbe
mov
dec
into
jge
lahf
lds
mov
sub
xor
sbb
bound
gs
subb
pop
mov
dec
into
jge
lahf
lds
mov
sub
xor
fwait
xor
pushf
and
pop
mov
std
cli
xchg
mov
fisttps
dec
iret
and
sub
out
push
mov
pop
das
pop
ret
inc
lock
pushf
lcall
orl
mov
pushf
idivb
clc
movsb
popa
dec
dec
adc
decb
rcl
xor
push
aas
or
std
inc
stc
inc
mov
movsb
dec
jb
addr16
std
or
ljmp
lock
inc
pop
aam
aas
mov
les
mov
in
aad
enter
sti
insl
add
outsl
shr
xor
dec
cli
mov
daa
or
mov
fists
test
pop
jl
adc
add
call
cld
push
es
push
std
push
test
lahf
xchg
mov
sbb
mov
leave
add
push
loope
rolb
cmc
cs
out
cmp
in
and
cltd
dec
adc
nop
lods
jae
ret
pop
jmp
pop
scas
jno
scas
movsl
movsl
movsb
fistpl
imul
fs
inc
pop
gs
int
xlat
jle
mov
xlat
shll
dec
aas
lock
cmp
cmpsl
sahf
dec
or
inc
add
outsb
out
mov
in
sub
pop
ja
ljmp
into
nop
popf
cmc
or
out
test
adc
out
sbb
sub
loope
ljmp
sub
pop
nop
rclb
or
mov
xchg
push
add
add
sbb
sub
loope
mov
ret
xor
jns
push
jl
lahf
mov
popa
adc
rcrl
popf
push
cltd
mov
lds
inc
in
in
sbbb
aas
jb
mov
push
leave
adc
or
adc
adc
pop
and
jle
add
leave
fs
xor
mov
xchg
or
pop
push
mov
mov
dec
out
xchg
into
loop
mov
mov
push
adc
sub
jns
xchg
push
ret
jecxz
hlt
dec
xchg
daa
push
pushf
dec
sbb
lds
lock
sbbb
fwait
jmp
jae
mov
xor
es
inc
leave
adc
leave
dec
push
inc
in
enter
out
lods
jecxz
xor
xchg
bound
gs
adc
jo
dec
loopne
mov
das
jbe
std
aad
cmpb
sbb
sub
adc
mov
cli
push
adc
or
shlb
sub
push
mov
add
xor
outsl
pop
jecxz
xor
test
push
js
stos
cmp
int
add
mov
jbe
jge
lods
in
and
push
retw
nop
cli
or
mov
adc
sbb
fidivl
adc
mov
sbb
pop
sub
push
jecxz
gs
mov
dec
add
xchg
ljmp
mov
pop
das
pop
test
stos
cld
decb
mov
pop
stc
push
ljmp
inc
mov
das
pop
mov
ljmp
jl
movsl
inc
shrb
adc
mov
xchg
sbb
adc
add
mov
std
cli
hlt
lcall
adc
in
add
jmp
fdiv
and
pop
loopne
jg
call
inc
mov
sbb
push
mov
jb
inc
ffree
mov
push
in
mov
lods
nop
cli
sbbb
stc
clc
mov
jecxz
lret
mov
adc
adc
cli
hlt
pushf
bound
mov
in
dec
pop
icebp
cmc
call
mov
bound
xor
push
push
popl
inc
out
test
imul
inc
and
mov
pop
mov
xchg
hlt
call
nopl
sub
imul
mov
adc
inc
push
xchg
dec
inc
add
decl
mov
loopne
pop
dec
iret
icebp
outsl
lahf
and
jb
inc
ror
das
cmp
push
addb
pop
pop
int
or
out
testl
or
int3
jo,pt
pop
adc
adc
hlt
push
mov
sub
jmp
dec
xor
rorb
and
test
cli
cli
lea
out
loopne
inc
hlt
inc
mov
test
gs
into
sbbb
or
mov
mov
movsl
jno
pop
ljmp
shrl
push
daa
je
out
cmp
sbb
lcall
aaa
dec
sbb
push
jmp
test
ret
inc
mov
push
and
lock
mov
mov
pop
mov
mov
fisubrs
lds
lahf
mov
and
mov
fimull
add
daa
ljmp
fdivrp
push
jno
mov
dec
dec
in
push
pop
fs
push
adc
xor
pop
jno
xchg
dec
int3
mov
lods
sarl
adcb
add
aam
sub
xchg
cmp
dec
xor
stos
sub
sub
sbb
scas
outsb
scas
fcoml
dec
ja
dec
pop
or
sar
inc
mov
outsb
sub
fistl
jbe
sub
ds
fistpl
mov
ret
adc
mov
and
mov
mov
xchg
jmp
in
fwait
xor
lock
adc
cmp
add
add
mov
arpl
leave
jbe
test
ja
sahf
nop
cmp
fsubp
xchg
sbb
out
lock
ss
mov
dec
mov
ret
xchg
mov
mov
sub
bswap
push
out
cmp
loope
adc
test
mov
cltd
xor
pop
push
ret
mov
lcall
xchg
xor
insb
inc
sub
in
jecxz
insl
mov
lods
test
cmp
cld
dec
dec
dec
pop
sbb
adc
mov
cmp
xor
dec
or
jno
sbb
ljmp
sbbb
sahf
cmp
sbb
enter
and
outsl
add
in
cmp
xor
add
aad
push
scas
fs
push
int
push
icebp
jo
loopne
in
icebp
das
jmp
pop
push
daa
sarl
xor
dec
push
outsl
pop
jmp
int
cltd
lret
shlb
nop
loope
inc
pop
mov
ror
dec
and
or
mov
aaa
mov
cld
jg
sub
cmpsb
ret
pop
lahf
jno
add
call
shufps
mov
cld
mov
cli
hlt
call
sub
xchg
cwtl
mov
dec
pop
dec
jns
adc
std
jo
cld
cmp
xor
test
jge,pt
xchg
mov
fwait
sbb
push
cmp
cwtl
aam
inc
ljmp
jmp
mov
testb
mov
jl
and
decb
pop
das
pop
test
frndint
decb
mov
or
jae
push
mov
ja
add
mov
sbbb
lret
mov
testl
cmpsl
cs
mov
adc
mov
inc
lock
mov
icebp
inc
mov
jge
andb
jns
cmp
sub
mov
jecxz
call
mov
mov
outsb
jnp
lds
addl
hlt
call
add
test
add
cmpsb
pop
mov
lds
jg
decl
push
aaa
mov
loop,pt
cli
mov
dec
xor
aas
or
jbe
fsubrs
jmp
xlat
xor
pop
add
push
pop
pop
xor
inc
mov
cs
call
inc
ret
sub
add
ljmp
scas
mov
xchg
sub
jp
clc
pop
std
mov
inc
test
xlat
call
aam
mov
mov
cs
jl
inc
mov
movsb
inc
decb
mov
pusha
stos
mov
in
or
sbb
inc
inc
push
dec
mov
mov
jecxz
lret
cwtl
leave
add
mov
lcall
out
stos
imul
mov
mov
xchg
sbb
pop
adc
les
fiaddl
jmp
mov
aas
test
cmpsl
in
lds
stos
add
out
mov
push
js
data16
push
sar
and
out
fstl
ja
aam
sub
pushf
repnz
cwtl
adc
xchg
dec
dec
cmp
pop
fs
popf
lret
or
pop
or
jno
inc
ss
insb
sbb
sti
cmp
sub
leave
dec
in
pop
imul
push
pop
sar
jmp
mov
cmp
xchg
stos
lret
rcrb
mov
pop
aam
push
mov
sbb
cs
jbe
in
icebp
sbbl
out
or
test
jecxz
mov
ja
adc
cs
nop
aaa
or
lret
ret
or
subl
push
repz
rolb
test
jecxz
xchg
pop
xor
mov
adc
push
popa
shlb
ss
movsl
cmpsb
push
and
mov
cmc
loope
and
adc
push
loopew
add
add
aaa
loope
mov
jns
sub
push
xchg
lods
mov
mov
and
pop
andb
shlb
lds
out
add
gs
jne
lods
test
mov
or
out
pop
or
inc
pop
adc
xor
inc
cmpb
andl
xchg
jbe
xchg
out
lods
pop
jb
cmc
enter
push
adc
xchg
aas
cs
mov
pop
push
rcl
cmp
out
and
adc
aam
cli
pop
cmp
xchg
fistl
stos
divb
jecxz
fstpl
sahf
fstpl
cmpsl
mov
and
aas
lret
or
push
outsl
push
cld
mov
push
imul
andb
pop
xchg
sti
lock
and
push
outsl
push
sti
xchg
lret
push
xlat
pop
dec
out
mov
push
das
pop
mov
adc
xchg
jmp
aas
push
hlt
loopne
in
or
cwtl
push
dec
push
in
sub
or
jbe
adc
mov
sahf
nopl
mov
sarl
ss
xor
adc
js
add
ljmp
sbb
mov
das
pop
ret
in
add
shlb
ds
add
in
mov
cmp
das
sbb
les
leave
jge,pt
out
shll
xchg
mov
lret
inc
shr
mov
add
xchg
out
or
xlat
ja
and
lds
jmp
xor
or
call
jge
pop
inc
out
inc
pop
inc
jae
inc
sarl
and
inc
adc
inc
pop
shrl
mov
jge
iret
add
sahf
push
hlt
std
lods
fmull
jg
decl
daa
or
cld
mov
testl
push
hlt
pushf
mov
pop
mov
push
or
cmp
inc
push
clc
mov
clc
loopne
jmp
adc
popf
cmp
sub
mov
sbb
scas
enter
cld
pop
mov
movl
push
out
clc
jl
lds
pop
nop
out
cwtl
adc
pop
aaa
cmp
inc
pop
adc
in
mov
fdivp
decb
in
push
cmp
cmc
in
or
push
xchg
cmp
jae
out
dec
xorb
mov
inc
ficompl
hlt
orl
jae
jbe
adc
fs
mov
push
into
shlb
loope,pt
loopne
incb
in
loop
addr16
and
out
jne
push
and
pop
mov
dec
jb
cs
arpl
mov
jge
push
test
and
mov
mov
jae
adc
pushf
push
cmp
add
add
out
repnz
int3
and
add
mov
lds
lret
dec
shll
loop
lcall
cmp
icebp
sbb
test
shl
mov
xor
in
xlat
int3
bound
std
xor
adc
testl
mov
test
cltd
lahf
pop
mov
cmp
add
out
imul
mov
cld
xchg
cwtl
pop
int
and
enter
movsl
outsb
cld
imul
pop
push
sub
add
mov
dec
sbb
arpl
mov
mov
jae
xchg
lahf
nop
inc
loope
lret
mov
push
cmpsb
sbb
add
movsl
insb
or
jne
adc
clc
xor
repz
ret
ss
mov
je
aaa
aam
mov
testl
push
cmp
jecxz
xchg
mov
clc
movsb
outsl
push
sbb
push
aam
inc
loopne
fs
mov
orl
shlb
ret
cmpsl
and
cmc
push
jp
dec
cltd
add
data16
fucomp
pusha
andb
pop
or
inc
xor
filds
shll
sub
sbb
cltd
mov
add
out
enter
je
mov
lahf
or
xchg
ret
lret
push
clc
mov
das
scas
movsl
sub
cmp
mov
adc
add
sahf
sarb
push
out
cmp
out
in
sub
in
xchg
adc
sbb
mulb
dec
pop
jmp
jbe
std
scas
lcall
or
add
jge
out
mov
and
mov
movsl
sbb
in
xchg
xchg
imulb
mov
mov
jbe
mov
cmpsl
pop
jge,pt
or
push
pop
adc
add
or
ret
jge
or
loope
pop
lds
and
xchg
mov
xor
sub
pop
std
cli
mov
and
movsl
xchg
pop
dec
jno
jo
js
mov
lret
mov
xor
push
mov
sbb
pop
adc
sbb
addl
push
aas
inc
lcall
push
adc
int
cmp
mov
cli
hlt
xchg
out
push
jmp
mov
pushf
cmp
cwtl
jg
xor
xchg
add
out
pop
aaa
mov
pop
push
jae
push
mov
clc
jl
jecxz
stos
imul
cli
std
cli
pop
inc
movsb
sub
or
xor
sub
xor
loopne
out
inc
or
mov
mov
incl
or
popl
call
mov
popa
enter
add
out
loop
hlt
inc
js
inc
nop
and
bound
outsl
dec
cwtl
call
ret
xchg
movsb
sub
sti
call
aas
mov
jge
das
push
pop
inc
lea
inc
sarl
clc
in
addr16
add
sbbl
popf
mov
dec
mov
jge
pop
mov
inc
jle
aad
mov
add
inc
add
dec
adc
lods
lret
or
cli
repz
imul
mov
mov
ret
orb
mov
test
jnp
cmp
lds
stos
repz
testl
and
gs
mov
inc
lea
cwtl
into
mov
jecxz
popf
pop
sbb
js
cmp
in
push
mov
cmp
aad
or
rcrb
mov
xchg
push
adc
call
pushf
mov
or
pop
movsl
icebp
sbb
xchg
loop
jmp
adc
sti
xor
rcl
sbb
sbb
pop
xchg
sub
dec
dec
ds
inc
fldt
xchg
ljmp
out
add
cmpsl
movsl
add
cmp
test
sub
iret
xor
add
out
in
int3
je
sub
mov
sbb
pop
sahf
in
insl
iretw
adc
adc
mov
lds
cmpsb
cmpsl
movsb
mov
dec
push
cmpsl
lret
sub
dec
sti
mov
mov
pop
bound
clc
add
inc
pop
jecxz
inc
xor
dec
pop
adc
xchg
adc
sub
inc
push
fs
mov
sub
outsl
jae
dec
xchg
mov
test
xchg
and
jno,pn
lock
ljmp
enter
xchg
jns
jne
dec
arpl
add
pop
stos
out
push
xchg
mov
cmp
arpl
in
addr16
mov
push
in
push
xor
jns
in
jmp
mov
and
roll
mov
push
push
push
xlat
gs
repnz
mull
rcll
jmp
lret
aaa
leave
pop
cmpsb
ret
fidivs
orl
cmp
mov
jmp
mov
inc
sub
pop
cmpb
rcll
hlt
xchg
pop
enter
xor
inc
mov
push
mov
data16
xchg
xchg
pop
adc
divl
imul
aam
sub
sub
sbb
std
notb
fisttpll
fisubrl
mov
and
jae
int
std
iret
shlb
nop
loope
mov
sbb
iret
mov
movb
ret
scas
fcomip
lea
fadd
inc
leave
lods
add
jecxz
push
or
scas
jle
xor
sbb
or
sub
mov
inc
xchg
xchg
mov
outsb
sbb
mov
xor
sarb
lock
pop
ret
insb
sbb
lds
mov
test
jecxz
mov
lds
push
mov
xchg
jge,pt
mov
fildl
inc
mov
das
lock
cld
add
call
nopl
outsb
xchg
imul
inc
pop
shll
orl
adc
dec
popl
cld
decl
and
cmp
imul
cmp
xor
add
pop
lret
sbb
mov
sub
hlt
sub
add
pop
push
dec
sbb
jmp
stos
sahf
leave
push
xchg
cmp
shll
jne
pop
das
and
cmp
jle
movsb
sbb
repz
lea
xor
xor
push
mov
jg
jge
adc
inc
jle
call
call
mov
pop
das
pop
ret
std
in
adc
mov
mov
pop
xchg
cmovs
incb
out
add
push
fnstcw
mov
out
sub
push
dec
jg
orl
mov
fidivl
push
mov
sub
hlt
or
push
sbb
push
shl
add
sti
clc
push
sbbl
addl
push
fdivrs
mov
cmp
fiaddl
or
hlt
cmpl
shl
mov
inc
add
inc
mov
push
mov
mov
lahf
pop
jmp
outsb
out
pop
cmc
rolb
mov
jbe
dec
mov
daa
mov
ficoms
and
enter
mov
rorl
sub
ficompl
rclb
sti
insl
in
and
mov
scas
pop
mov
or
jno
push
fwait
arpl
fcompl
dec
dec
out
aad
mov
mov
fstpl
sbb
movsb
in
call
cmc
mov
out
data16
and
xchg
pop
pextrw
cmp
sub
pop
sbb
sub
mov
add
scas
pop
xchg
add
xor
and
loopne
pop
pusha
mov
ficompl
es
mov
or
pop
and
aam
pop
push
adc
in
mov
outsb
inc
xchg
or
pop
jmp
in
dec
dec
dec
int3
mov
lods
sti
and
inc
push
faddl
rorb
and
sub
nop
in
int3
leave
iret
fmull
dec
nop
fcomps
sbb
cld
stos
pop
leave
xor
lods
enter
out
xchg
nop
bound
lret
ret
mov
icebp
test
lea
fcoms
xchg
in
subl
cmp
pop
fwait
lahf
xor
fnstcw
mov
jae
test
pop
push
sahf
fmull
cltd
sti
jmp
cmc
scas
adc
xchg
fidivrl
aad
adc
mov
push
add
add
lods
call
pop
xchg
dec
mov
mov
insb
imul
push
sub
sbb
movsl
ljmp
movsl
xor
adc
jge
repz
push
sbbb
cmp
out
jle
rcrl
lea
fcoms
cmp
dec
mov
push
pop
pop
and
ret
stos
repnz
std
fcompl
adc
inc
scas
cli
enter
mov
scas
insl
adc
sub
mov
pop
leave
repz
andl
push
call
adcl
imull
cmp
mov
outsl
bound
push
rclb
cmpsb
call
add
add
loope
jns
sub
mov
adc
add
or
ret
hlt
das
pop
mov
mov
adc
mov
add
movswl
lock
or
jge,pt
and
outsl
or
inc
xor
cmp
andb
add
jb
cli
hlt
lcall
ds
cld
pop
sbb
push
mov
push
pop
jnp
pop
pop
jne
mov
cmpsb
add
cmp
inc
push
pop
lcall
popf
cmp
xor
dec
rol
dec
jmp
mov
out
pop
xchg
call
lcall
mov
pop
in
rclb
dec
stos
in
push
mov
mov
pop
stc
ud0
xorl
mov
sub
int
add
jmp
mov
mov
pop
inc
mov
mov
push
ja
mov
sti
and
or
ret
pop
mov
in
xchg
mov
jp
add
addb
inc
push
push
and
pop
aaa
cmp
mov
cmpsb
sbb
jge
bound
cmp
lahf
push
int
or
or
test
movsb
idiv
xchg
cs
dec
aad
push
jmp
push
ljmp
filds
dec
cmc
in
mov
and
ret
cmpsb
int3
sti
adc
aam
aas
xor
in
xchg
int3
add
add
or
inc
pusha
inc
jno
adc
hlt
pop
loope
add
and
jmp
fdiv
jne
aas
mov
pop
push
sub
imul
adc
inc
dec
mov
popa
pop
cmp
jecxz
inc
shlb
frstor
jbe
stos
test
add
rcr
mov
inc
repz
add
jno
ss
rclb
sti
gs
sub
lcall
mov
nop
lahf
mov
jmp
sarl
mov
push
add
add
rcrb
or
xor
mov
insb
xchg
popf
dec
popf
pop
int
les
bound
test
loope
and
fistpl
ficoml
in
add
mov
pop
scas
mov
add
imul
inc
lea
scas
sti
pop
dec
lock
dec
add
bnd
mov
pop
xchg
cwtl
mov
and
int
dec
test
clc
add
iret
dec
adc
mov
fs
cmp
xchg
icebp
xorb
mov
dec
and
pop
in
lcall
mov
loopne
loopne
add
sbb
fsubp
jecxz
lds
ret
mov
jns
sbb
pusha
sub
loop
outsb
sub
clc
pop
imul
inc
cmp
jp
ret
lods
pop
mov
mov
ror
cmp
push
xchg
mov
add
call
pop
sahf
inc
stos
xor
ds
mov
loope
inc
or
outsl
lds
sbb
outsl
orl
loopne
push
jg
data16
gs
popa
xchg
mov
int
loop
cmp
sar
inc
movsb
rcrl
rcll
lsl
mov
test
xchg
dec
sub
mov
pop
cmp
mov
popa
and
stc
mov
push
insb
loopne
xchg
adc
add
cs
outsl
dec
stos
outsl
cmp
jno
add
test
stos
or
jg
jle
mov
shlb
test
ja
pusha
sbb
adc
bound
dec
cmc
icebp
push
push
pop
mov
fsubl
sbb
pop
mov
insb
lcall
into
jmp
lods
cwtl
nop
inc
test
int
cmc
push
aam
xlat
push
and
mov
das
aad
jg
or
ja
jecxz
shlb
or
and
add
into
popf
mov
inc
and
pop
adc
xor
mov
loope
fs
and
pop
adc
mov
addb
inc
or
push
mov
pop
pop
adc
lret
aaa
pop
mov
cli
add
xchg
out
aam
add
loopne
pop
adc
fistpll
bound
call
addr16
add
mov
jnp
mov
pushl
or
lret
add
mov
loop
sub
mov
adc
mov
ss
sub
and
lret
sahf
push
xor
inc
mov
movsl
sbb
mov
int
mov
jle
stc
hlt
ljmp
adc
adc
subl
insb
adc
dec
add
or
inc
aam
push
cs
push
rcrb
adc
mov
cld
jp
adc
dec
add
pop
les
or
cwtl
in
or
inc
outsb
jecxz
sbb
jge
adc
add
inc
rorb
sub
or
sbb
in
or
arpl
adc
add
mov
jg
pop
cmpsl
into
dec
jle
mov
add
mov
sti
add
ds
je
adc
shl
mov
push
sbb
aas
out
mov
cli
sub
push
mov
xchg
adc
scas
call
or
mov
sub
dec
popf
or
inc
inc
or
xor
inc
pop
pop
fcoml
sub
sbb
cs
pop
or
pop
pop
adc
pop
cld
test
add
test
jp
ja
mov
mov
inc
mov
pop
adc
mov
ss
pop
test
cmp
dec
jmp
insb
lods
mov
pop
adc
xor
std
cmc
pushf
adc
jle
ret
dec
jbe
xcrypt-ctr
cmpsl
pop
pop
pop
into
stos
pop
adc
mov
xor
movsl
add
jle
loopne
sti
or
mov
mov
xchg
pop
adc
daa
notb
mov
out
stc
xchg
jae
insb
mov
cld
sahf
lret
sbbb
dec
cmp
add
adc
leave
cmpl
push
cmp
mov
cmpsb
icebp
jae
sub
cmp
mov
mov
pop
adc
popfw
mov
cmp
bound
xor
cld
push
imul
scas
xor
scas
aam
sbb
or
cmp
mov
cs
lock
dec
lea
adc
sub
adc
xor
mov
pop
loope
mov
sarb
into
in
pop
adc
and
scas
popa
out
xor
pushf
dec
in
cmp
mov
dec
ljmp
addb
decl
out
lods
cmp
out
dec
in
lret
mov
movsl
fsubl
dec
jo
lahf
xchg
lods
mov
mov
jecxz
mov
fcoms
insl
lea
mov
mov
loopne
lret
nop
push
and
mov
test
addb
aad
xchg
xlat
scas
fidivrs
ja
or
sub
popf
cmp
ljmp
inc
mov
add
stos
sub
pop
aas
mov
add
dec
std
cli
hlt
pushf
push
cli
jnp
mov
rorb
jb
inc
gs
les
sub
and
shl
lods
mov
push
cltd
shlb
adc
cs
pop
inc
push
jbe,pn
inc
pop
sti
adc
insl
mov
cld
shrl
mov
fsubs
jl
and
lds
push
jecxz
xor
aad
pop
mov
xor
test
das
lret
pushl
les
adc
sbb
pop
mov
mov
pushf
ret
cmp
or
mov
stos
std
push
pop
call
insb
mov
xor
fwait
int
and
std
in
dec
out
mov
mov
ret
dec
jmp
or
clc
sub
aaa
ret
mov
pop
sub
mov
int
rcrl
movsb
sbb
js,pt
push
jmp
xor
xor
push
pushf
inc
test
xor
shlb
xchg
lret
ljmp
adc
test
cld
jno
popf
in
inc
or
test
or
sbb
sbb
mov
std
std
mov
loope
mov
cmp
clc
loope
jmp
inc
std
lahf
ret
adc
imul
std
push
xchg
shlb
xchg
xchg
and
inc
les
fisubrl
ja
xchg
lods
sub
mov
or
enter
ss
ja
inc
pop
inc
pusha
jmp
cltd
pop
cmp
inc
mov
and
iret
imul
push
jo
xchg
push
rol
fs
fsts
sub
rorl
test
dec
or
inc
imul
mov
push
pop
xchg
popf
sbb
in
sbb
daa
aaa
addr16
adc
aas
loope
dec
pop
pop
cld
jns
dec
dec
ds
cmc
xor
arpl
scas
outsl
clc
mov
frstor
cmc
jno
sahf
push
inc
jle
add
cmp
out
xchg
sbb
add
adc
inc
lods
in
sbb
push
imull
cmp
add
mov
movsl
or
add
push
add
dec
ret
dec
pop
push
pop
xchg
jae
lret
arpl
cli
xlat
das
or
popl
bound
dec
les
fnstcw
cmp
mov
testl
mov
xor
aam
je
gs
adc
movsb
arpl
aad
xor
int3
fdivr
stos
or
push
stos
sub
iret
aaa
xor
ljmp
sbb
ljmp
mov
fimull
cmpsb
xor
add
int
outsb
andl
aas
fistpl
cltd
push
pushf
insb
or
ljmp
jl
icebp
fwait
rcrl
mov
jo
adc
cs
leave
add
cmp
lea
aas
sti
mov
sub
iret
adc
mov
and
call
inc
aaa
movsl
movsl
test
hlt
add
pop
gs
pop
lahf
cmp
loop
addr16
shrb
mov
daa
cmp
iret
out
iret
out
fstps
nop
fiadds
cmp
mov
pop
aad
pop
sarb
lods
pop
mov
scas
xchg
jecxz
divl
inc
rcrl
cmp
xor
test
push
adc
dec
pop
jle
sbbl
add
push
xlat
mov
mov
push
inc
or
xchg
jo
adc
mov
adc
push
cwtl
call
sbbb
ret
sahf
test
jnp
sahf
push
adc
clc
and
shlb
add
mov
mov
loopne
rcll
and
les
aas
adc
test
jo
adc
pushf
loope
arpl
sbb
inc
clc
stos
cmp
inc
popa
scas
cwtl
leave
incb
jg
mov
cmpsb
and
daa
jnp
lahf
out
push
pop
cs
mov
insb
lcall
pop
out
jl
cmp
std
std
outsl
or
shl
pusha
sbb
mov
cli
sbb
mov
lea
xor
dec
pop
je
add
dec
pop
adc
jnp
dec
cmc
popa
pop
mov
and
aam
jl
andl
pop
shrb
mov
aas
or
cs
ret
mov
hlt
mov
or
das
pop
aaa
xor
in
shl
pop
jo
jecxz
je
mov
das
cmc
lret
insb
push
pushl
jle
shrb
mov
jge
jge,pt
dec
sbb
xchg
lock
sahf
jg
mov
lods
inc
cmp
add
das
pop
aas
xchg
les
out
sub
sti
cld
pushf
cmp
incb
loopne
and
or
cmc
pop
int
cmp
and
cmp
jl
mov
ds
jno
cmp
push
mov
xchg
fwait
clc
dec
xor
add
out
ja
push
dec
jae
das
mov
pop
fstps
adc
sarl
test
hlt
jo
dec
mov
leave
push
fldt
icebp
fadds
bound
xchg
dec
and
lcall
push
xchg
and
sahf
pop
cld
fstps
xchg
dec
mov
rcl
cmpsb
insl
sub
test
mov
dec
lock
ds
xlat
jmp
pop
jne
in
pop
mov
lea
adc
xor
lods
pop
gs
jnp
mov
fbld
fisttps
mov
mov
int
jge
idivl
sbb
sbb
add
xchg
xchg
xchg
pop
outsb
scas
shll
adc
jmp
std
loope
cmp
pop
loop
imul
pushf
mov
cmp
adc
cmp
add
cmp
sub
mov
lea
daa
addr16
mov
pop
rcrl
xchg
movsl
push
or
dec
lods
jne
repz
xor
jbe
xor
arpl
add
mov
rorb
aam
sti
dec
cwtl
xchg
lods
stos
arpl
dec
adc
fildll
rcrl
cld
jbe
fidivrs
xor
lds
xchg
imul
mov
sub
pushl
enter
test
sahf
nop
xchg
jmp
andb
lret
xchg
cwtl
cltd
xor
dec
and
enter
int
not
xchg
xor
and
pop
addb
cmp
mov
sar
push
sub
fdivrs
or
jle
lret
rclb
mov
fnsave
xor
cmpl
stc
push
lahf
inc
mov
aas
adc
out
xchg
rcr
sub
sbb
xchg
sub
pop
sub
out
into
adc
sub
pop
and
cmpsb
icebp
iret
dec
xor
insl
push
push
adc
mov
xchg
out
incl
adc
adc
bound
add
sbb
xor
je
fstpl
hlt
clc
iret
pop
jno
or
inc
loopne
add
ret
test
and
in
js
cmp
ret
das
stc
add
mov
xchg
push
xlat
or
jb
sarl
add
repz
dec
cmpsl
sub
xchg
es
mov
sub
xor
pushl
mov
hlt
bound
mov
jge,pt
sbbb
xor
je
shlb
add
jo
ljmp
test
js
mov
call
pop
mov
add
inc
adcb
push
mov
js
inc
repz
sahf
push
cmc
pushf
adc
pop
mov
mov
pushf
imul
jle
pop
inc
jle
push
lret
bound
dec
or
mov
pop
push
jae
push
mov
dec
movhps
xor
push
call
hlt
add
into
push
cmp
or
mov
scas
das
jl
sbb
movsb
push
inc
or
bound
mov
movsl
test
dec
jae
imul
jge
outsl
inc
xchg
imul
mov
push
das
pop
pop
ficomps
add
shrb
cwtl
insb
jnp
in
cli
jl
movsl
test
fwait
xor
lds
jmp
call
andb
cli
jl
imul
cs
stc
add
call
mov
pop
pushf
jb
jmp
aas
pop
inc
mov
aam
mov
dec
xchg
movsb
test
or
add
inc
sbb
out
dec
jns
or
ftst
nop
mov
sub
clc
xchg
pop
adc
push
loopne
jecxz
add
add
cmc
and
pop
jp
in
movsl
inc
insb
or
pop
push
jp
jp
adc
push
lahf
loope
aaa
mov
jb
sahf
mov
jecxz
push
add
push
fbld
xchg
pop
adc
out
aaa
cmp
mov
insl
jge
mov
rcrl
and
adc
hlt
leave
cmp
add
sahf
mov
adc
inc
mov
sbb
add
sub
imul
lcall
inc
mov
adc
lods
jbe
jg
scas
push
fstps
push
add
and
fcomps
stos
repnz
jl
adc
fs
xor
xor
xor
pop
scas
add
inc
push
jne
rcl
ja
xchg
jbe
adc
sbb
sub
in
test
ja
jb
xor
mov
xchg
cld
popw
adc
inc
xchg
cmp
lock
pop
push
adc
cmp
addr16
and
adc
movsb
jae
adc
rcll
out
jbe
and
and
and
mov
jnp
rclb
lods
pop
push
sarl
push
xchg
mov
loopne
insl
xor
outsl
les
mov
push
sbb
pop
out
pop
lahf
std
add
cwtl
and
sar
clc
mov
iret
popf
fistpl
fwait
mov
mov
shlb
stos
scas
mov
outsl
lods
pop
mov
insl
dec
mov
dec
leave
sbb
dec
sbb
lcall
xchg
sbb
loope
lahf
out
jne
das
mov
in
xchg
inc
adc
adc
in
pop
sbb
test
lahf
or
hlt
dec
xchg
daa
push
pushf
popa
sbb
mov
shlb
adc
scas
test
jno
adc
push
sbb
add
les
xor
repnz
push
pop
push
cmpsb
cmc
push
xchg
int
xchg
shlb
jg
clc
sub
lcall
sarl
xchg
pop
mov
clc
jmp
jns
sub
addl
call
scas
ja
xlat
int3
pusha
mov
pop
push
je
out
call
sbb
dec
xor
mov
and
pop
aaa
xchg
mov
repz
push
call
add
outsl
push
jg
call
sbb
add
loop
adc
jae
test
repz
pop
mov
mov
pop
mov
inc
mov
test
xchg
adc
leave
jg
and
pop
add
xchg
push
mov
ljmp
lea
in
popf
imul
aas
orb
cmpsl
adc
movsb
pop
shll
addl
xor
push
cmpsb
inc
push
mov
cmp
mov
fwait
jmp
mov
adc
add
pop
mov
mov
inc
lods
lahf
mov
fstps
jge,pt
dec
sbb
je
jne
adc
cmpsl
lcall
test
jg
popl
cmpsl
push
mov
nop
lret
pop
lds
mov
sub
add
add
int3
leave
pop
das
out
out
add
or
lods
mov
and
hlt
xlat
stos
sub
call
push
jmp
ds
imul
jge
or
repnz
popf
mov
add
or
or
mov
test
adc
add
pop
mov
cli
add
push
push
add
xchg
push
jl
arpl
repz
pop
and
pop
jb
into
negl
daa
add
clc
test
pop
push
sbb
lret
add
push
xchg
mov
repz
test
xor
mov
in
push
insb
shlb
xchg
jmp
mov
sbb
xor
mov
add
or
adc
stos
mov
adc
jb
es
aad
cltd
pop
push
pop
mov
insl
add
cmpsl
aad
jge
in
cli
cld
out
pop
stos
dec
sti
mov
mov
out
arpl
jnp
scas
adc
sti
xchg
mov
andl
jp
push
sarl
cmpsl
leave
xor
adc
pusha
pop
adc
cmp
xchg
fs
pop
leave
jbe
imul
jnp
mov
inc
popf
mov
sub
inc
lock
mov
in
xor
cmpsw
movsl
movsb
fstpl
out
and
xchg
mov
push
hlt
jb
daa
push
icebp
rorl
aas
add
mov
mov
mov
in
cmpb
mov
mov
push
or
xchg
in
cmp
in
pop
outsb
xchg
xor
adc
jno
lahf
add
mov
inc
addr16
dec
mov
push
sbb
sub
inc
cmp
cmp
pop
cmp
xchg
pop
jae
push
aad
nop
mov
push
mov
sub
pop
int3
sbb
pop
adc
cmpsl
addr16
fs
in
pop
aaa
cmp
std
inc
movsl
push
xor
insl
in
jge
fmull
fstpt
mov
out
stc
pop
push
cmp
rclb
push
rcl
dec
sub
imul
pop
xchg
and
stos
fs
imul
mov
punpckldq
adc
mov
dec
daa
xor
aad
mov
aam
fisubrl
mov
xchg
lds
popa
test
dec
xchg
jg
lods
out
in
cmpsb
xchg
lods
mov
push
pop
mov
jo
adc
mov
pop
movsl
stos
sbb
repnz
sub
jle
testl
out
pop
mov
hlt
mov
test
mov
in
mov
arpl
mov
push
cli
mov
mov
push
movsl
ret
push
xchg
pop
pop
dec
or
xchg
insl
imull
test
ret
test
cmp
scas
and
movsb
cmp
or
stos
xchg
jbe
add
fnstsw
add
inc
leave
cmp
lods
xchg
and
pop
jmp
adc
ficoml
xor
xchg
fwait
mov
shl
adc
or
mov
lock
ss
cli
add
push
cmp
push
jl
xchg
pop
sub
je
adc
hlt
cmp
pop
aas
mov
shll
jns
loopne
out
sbb
sub
addb
sub
inc
pop
inc
mov
sbb
jge
lret
sbb
inc
loopne
push
xchg
xchg
imull
mov
mov
jbe
mov
outsb
loopne
subb
imul
jmp
test
jo
jge
or
loope
or
pushf
outsb
pop
loopne
pop
shlb
mov
or
cmp
or
mov
or
jecxz
aad
inc
mulb
mov
mov
loopne
fildl
xlat
call
sub
mov
stos
test
imul
sahf
jne
pop
jmp
test
je
mov
movsb
push
mov
mov
jecxz
pop
pop
mov
mov
xchg
lea
in
pop
scas
shlb
inc
dec
cli
push
pushf
arpl
nop
cmp
imul
cli
jl
imul
add
stc
ja
test
cmp
aam
pop
rorl
cmp
shlb
roll
inc
pop
sete
gs
aad
add
add
cli
and
fadds
jno
inc
movsl
cmp
test
push
dec
sahf
shll
dec
out
lea
inc
shrb
mov
xchg
fwait
pop
push
push
xchg
imul
add
add
dec
test
sbb
cmp
push
mov
js
lds
xchg
jecxz
and
jg
push
outsb
addb
sbb
push
in
mov
test
jmp
push
scas
pop
adc
mov
lock
dec
dec
shl
in
mov
add
add
setns
cwtl
jge
fadd
lds
fnstcw
test
loopw
movsl
sub
pop
mov
add
dec
mov
rcll
mov
pop
xchg
fsubrs
or
sub
sbb
dec
dec
dec
fdivl
jecxz
inc
cwtl
and
leave
rcrb
xchg
jo
into
out
scas
gs
jo
adc
mov
jl
out
data16
sti
test
add
out
sbb
dec
sbbb
mov
lcall
scas
cld
out
es
pop
cli
mov
jne
int3
sub
mov
insl
call
pop
push
or
stc
add
and
cld
or
and
pop
testl
mov
dec
fdivl
adc
sti
cmc
aam
push
adc
ds
pushf
subl
gs
xchg
lret
cli
popf
loope
xchg
jp
in
inc
outsl
ficoms
nop
inc
sbb
ds
fmull
fucom
jecxz
mov
push
mov
inc
xor
push
inc
popa
hlt
push
dec
push
dec
cmpsl
sub
out
data16
jbe
jmp
imul
lret
int3
cs
jmp
mov
sbb
stc
adc
aad
jno
cltd
pop
mov
xchg
jmp
and
btc
xchg
xlat
stos
dec
sbb
push
sbb
add
inc
push
and
out
dec
mov
push
jl
in
or
and
out
cs
jo
adc
push
adc
jb
pop
mov
je
push
rcr
test
mov
jmp
lods
pop
xchg
fbld
jo
mov
dec
jo
pop
dec
pop
pop
sub
add
scas
mov
mov
push
outsb
hlt
push
pop
pop
jno
aaa
shl
es
movsb
leave
dec
inc
inc
inc
dec
sahf
lods
sbb
outsb
cmp
ret
sbb
pusha
cmp
cmpsb
push
and
addb
pop
sbb
add
add
fwait
mov
popa
lds
call
push
hlt
pushf
loope
arpl
insl
xchg
es
xchg
out
pop
push
in
xor
mov
enter
lret
in
mov
repz
hlt
scas
ss
add
cmp
and
push
add
xor
inc
inc
pop
int3
jo
adc
lcall
pop
mov
add
repnz
cli
mov
add
xor
lret
or
jne
adc
mov
pop
mov
dec
dec
xlat
mov
lock
dec
movl
mov
daa
mov
mov
push
call
inc
jle
ljmp
cli
inc
cmpsl
sub
mov
scas
jo
adc
inc
pop
aam
push
adc
shll
dec
dec
in
push
call
adc
adc
repz
push
mov
decl
xchg
ss
mov
pushf
lcall
cs
pop
inc
push
dec
jg
sbb
cmc
mov
xchg
cmovnp
imul
vcomisd
inc
adcb
mov
inc
jnp
repz
fildl
xor
jmp
ret
or
mov
mov
lcall
mull
jge
cmp
pop
ljmp
or
jo
adc
push
adc
mov
mov
push
popf
or
pop
and
lahf
fs
hlt
test
sub
repnz
jecxz
nop
inc
mov
mov
push
inc
push
int3
dec
repnz
pushf
mov
mov
mov
decb
push
sbb
rcrb
xchg
push
inc
lcall
out
xchg
in
movsl
in
out
loop
test
xchg
pop
lret
cltd
stc
stos
call
push
fcmovb
xorl
cmpsb
lcall
xchg
das
es
dec
jne
push
cs
xor
and
shlb
add
cmp
into
jmp
xchg
mov
xor
icebp
jmp
mov
cmp
pop
push
mov
lock
mov
imul
pop
inc
popa
pop
loopne
mov
dec
jbe
sti
add
test
nop
add
jge,pn
fwait
jb
sub
pop
pop
mov
enter
cli
add
fdivs
pop
aas
mov
and
fiaddl
out
dec
lock
adc
sub
mov
out
jnp
andb
xor
inc
mov
inc
scas
sub
in
push
mov
mov
call
jl
pop
push
scas
divl
jge
sahf
leave
out
scas
daa
or
popf
pop
sbb
call
xor
stos
or
xor
lds
loope
push
pop
sarl
add
je
iret
cmp
imul
mov
shr
sbb
sbb
mov
inc
fucomp
call
cltd
xor
xchg
divb
aas
or
pop
adcl
mov
sub
inc
xor
mov
push
mov
fcoms
mov
mov
mov
xor
int
cmp
jo
or
imul
aaa
xor
sub
lods
mov
add
insl
sub
dec
movsl
mov
xchg
fistpl
pop
and
fstpt
add
sbb
jmp
aad
adc
adc
mov
lock
sti
push
mov
pop
fwait
cmpsb
rorl
insb
mov
std
mov
lret
push
or
inc
inc
mov
sub
in
addr16
sub
std
mov
movsb
mov
add
mov
cltd
es
mov
je
inc
mov
pushf
loopne
cltd
lea
xor
rolb
shlb
mov
sbb
xlat
movsb
and
call
add
out
sbb
call
dec
pop
adc
cmp
js
stc
mov
dec
aaa
dec
hlt
call
sbb
bound
mov
dec
hlt
call
sbb
mov
outsb
jnp
lds
jg
decl
inc
mov
cli
jb
dec
jmp
push
cmp
mov
movsb
das
pop
mov
std
cli
xchg
shl
jo
imul
js
jmp
testl
mov
jne
cli
hlt
cld
es
mov
cli
hlt
xchg
push
mov
add
inc
fsub
std
insl
test
mov
std
cli
hlt
inc
mov
test
add
inc
xchg
xor
mov
pop
and
mov
hlt
call
pushf
sbb
add
pop
jg
jo
adc
dec
shlb
mov
pop
lds
lret
je
mov
jg
push
mov
pop
inc
call
sbb
int
xor
jne
pop
mov
inc
mov
inc
xchg
adc
loope
testl
pop
gs
ljmp
out
add
mov
aas
jl
xchg
mov
ja
sbb
xchg
popl
push
mov
popf
jg,pt
or
aam
into
or
mov
imul
jbe
aad
jmp
js
loop
scas
xchg
cmp
cwtl
cmp
das
push
pavgw
lock
add
jne
call
out
jl
je
popf
add
test
fs
loop
add
or
aad
movb
or
sbb
lcall
inc
rcl
inc
sub
ds
xchg
cwtl
xor
inc
jbe
mov
aad
lret
in
dec
jne
in
movsl
movsb
cmpsl
rcr
add
xor
fs
aam
repz
repnz
out
jno
rdmsr
cld
or
call
into
lock
add
out
xor
pop
jno
push
fs
add
mov
pushf
in
data16
sub
mov
aad
xchg
or
sub
cmp
rcl
pop
popf
adc
jecxz
sub
fs
aam
jle
jnp
pop
pop
pop
dec
stos
and
push
jno
cmpsb
test
inc
dec
adc
jns
jb
push
pop
pop
bound
ja
mov
xor
sbb
xor
cmpsl
lods
subl
push
daa
in
push
popaw
outsl
pop
xor
sahf
or
cmp
or
and
add
scas
pop
fsubp
xchg
jmp
mov
test
push
out
ss
popf
imul
aaa
xchg
cmc
xchg
jmp
xchg
cltd
inc
ret
lods
xor
xchg
ret
and
xor
cs
aad
repz
mov
stc
mov
rcrb
fmul
push
mov
out
loope
push
sub
bound
mov
stos
cmpsb
cmc
repz
pop
adc
pop
sahf
jecxz,pt
xchg
hlt
mov
ja
arpl
xor
add
push
arpl
mov
pop
dec
cmp
sbb
pop
mov
xchg
push
test
and
cmp
sub
sub
cmp
adc
cs
outsb
sbb
mov
jno
test
aas
int
xchg
iret
sbb
in
adc
inc
pop
jle
cmp
xor
cld
loope
push
aas
jg
mov
enter
stos
ret
pop
jecxz
out
xchg
clc
adc
sbb
bound
push
in
jg
push
mov
jecxz
dec
mov
add
cli
mov
mov
inc
sbb
pop
das
pop
cmc
clc
push
in
sarl
mov
mov
arpl
bound
cmp
jecxz
jmp
loopne
pushf
ds
dec
jmp
cs
jp
lds
cmp
test
cli
hlt
xchg
push
mov
mov
and
and
pop
sub
mov
call
jge
mov
jle
rcrb
sbb
push
pusha
gs
sbb
or
cli
jecxz
push
mov
rorb
mov
mov
inc
mov
lret
mov
leave
and
push
jecxz
shlb
inc
mov
and
jg
in
cmp
scas
jle
lea
sbb
sbb
aaa
jl
sbbb
dec
icebp
lds
jg
cmp
shlb
les
sbb
nop/reserved
pop
sub
ror
push
rcrl
pop
test
xor
push
cmp
rolb
dec
cld
sti
loop
mov
mov
jl
andl
ret
cltd
mov
pop
jbe
add
fisubrs
mov
push
fdivrl
xor
ret
cld
push
push
mov
call
cmp
cmp
imul
cmc
lods
shll
stos
dec
mov
dec
adc
xlat
pop
lea
mov
push
mov
ljmp
xchg
dec
test
int3
lcall
fwait
sbb
out
nop
addr16
adc
xor
mov
gs
repnz
inc
sub
jmp
lahf
movsl
mov
jp
jl
pop
rorb
addr16
and
aas
scas
mov
xchg
ss
out
testl
sub
test
call
dec
dec
lret
lcall
shll
leave
dec
out
repz
or
sbb
jmp
mov
cmp
pusha
pop
pop
mov
sub
lret
loop
sub
mov
jo
cs
push
mov
jb
inc
stos
insb
in
scas
pop
xchg
inc
in
jae
aad
push
sahf
cmp
cmpsb
stc
stc
ljmp
loopne
mov
ljmp
or
push
ficoml
es
cltd
adc
rorb
dec
sbb
insb
jle
out
add
and
std
mov
ljmp
into
popa
in
cmp
xchg
mov
dec
xorb
clc
push
jns
push
push
jle
push
ss
int3
dec
sub
into
mov
je
mov
aaa
push
mov
xor
dec
push
sti
shll
pop
push
stos
in
ljmp
adc
adc
and
mov
jne
imul
fldl
orb
jo
adc
push
popf
xchg
xchg
add
push
inc
cmpsl
fwait
sbb
mov
mov
mov
adc
mov
mov
or
addr16
in
xchg
xchg
xchg
jmp
scas
sub
out
addr16
out
out
push
cmp
fdivrl
sub
div
sbb
insb
scas
pop
pop
popf
sub
and
nop
jge
push
stos
jbe
fsts
adc
dec
add
push
mov
inc
in
loopne
sub
jno
cmp
notb
inc
adc
push
test
popa
adc
mov
add
xor
pop
frstor
mov
cmp
mov
push
jl
out
or
lods
aam
jl
jle
jecxz
out
add
pop
add
into
fwait
shrl
sub
mov
mov
std
or
je
mov
jg
icebp
lods
sbb
sub
mov
pop
push
jle
ja
popf
cmp
mov
adc
inc
ret
call
add
pop
rcl
out
popf
shr
sub
mov
test
ret
dec
jmp
sub
push
stc
call
or
push
pop
in
call
movb
in
xor
shlb
loope
js
pop
and
jae
out
push
ja
add
jne
ljmp
int3
lock
add
pop
jmp
into
popf
xor
inc
or
test
jno
pushf
loopne
icebp
mov
pop
xchg
push
pop
cs
pop
out
push
ja
gs
sbb
push
xchg
aas
aad
les
movsl
cmp
push
enter
mov
mov
jl
fstl
jg
xchg
push
xor
stc
hlt
jg
out
add
sbb
xchg
test
shr
cli
mov
cmp
mov
iret
mov
inc
mulb
mov
cmp
jg
pushl
or
das
pop
in
imulb
sbb
jae
andb
aam
decb
shll
stos
subl
popa
mov
or
or
mov
add
jge
xchg
pop
adc
or
xchg
test
loopne
in
pop
sub
js
cli
mov
mov
aad
xor
lds
adcl
pusha
stos
mov
in
lds
mov
sub
ja
xchg
int3
dec
inc
mov
mov
out
sbb
rcrw
sbb
inc
out
loop
rorb
sub
xlat
xchg
adc
and
xchg
mov
pop
scas
hlt
in
je
adc
or
cmp
lock
pop
pop
or
dec
je
cmp
xor
bound
cmpsl
mov
lods
es
jmp
adc
or
jno
fildll
call
dec
dec
dec
push
lcall
jbe
call
rolb
or
mov
loop
cli
mov
jle
aaa
pop
push
flds
call
lods
add
test
pop
fsubrp
cmpsl
cmp
fwait
mov
sub
enter
test
fbstp
mov
mov
jbe
pop
add
test
sub
or
ficoms
ljmp
or
out
add
rorb
adc
cmp
push
mov
jno
lret
cwtl
cmpsl
hlt
jo
adc
je
fmull
adc
mov
nop
push
jae
push
popa
outsl
pop
sub
subl
into
mov
cltd
fsubp
adc
aaa
xor
push
imul
jle
mov
sub
stos
jnp
icebp
add
xor
push
outsl
pop
lods
cmp
scas
mov
sbb
lods
out
push
pushf
sub
mov
not
xor
mov
pop
mov
push
mov
lcall
adc
xor
jo
xor
cmc
cwtl
xor
mov
cmp
add
mov
lcall
insl
mov
jmp
je
loopnew
cmp
jae
loope
loope
popa
loop
mov
xchg
pop
pop
cwtl
fnstcw
sbb
lods
cmpsl
lods
or
lods
sub
adc
add
mov
push
dec
js
pop
adc
inc
jmp
xchg
dec
in
shlb
fs
mov
jno
push
loopne
sub
mov
nop
loope
xor
rorb
sarb
in
adc
xor
ja
les
rcl
or
loope
shlb
sbb
cwtl
gs
jp
xlat
and
xchg
mov
xor
aam
shlb
std
outsl
push
jg
imul
cmpsl
or
cltd
add
xchg
ljmp
jle
jmp
dec
or
mov
pop
das
pop
xor
sub
xor
pop
cmp
xchg
leave
pop
jg
jmp
jge
mov
adcl
pop
xor
loope
mov
cmpsb
inc
mov
mov
push
mov
push
sahf
inc
xchg
sub
xchg
push
jg
xor
cmp
in
fistps
mov
add
icebp
mov
or
in
pop
mov
lds
mov
inc
or
in
sti
xchg
sbb
add
pop
js
dec
pop
loope
fwait
xor
adc
add
push
in
jecxz
das
pop
xor
mov
sub
ljmp
push
mov
jo
call
xchg
xchg
push
adc
fistpll
bound
jmp
dec
inc
or
inc
pop
movhps
push
repz
mov
cmp
inc
shrb
std
mov
mov
mov
sbbl
mov
add
mov
arpl
sub
mov
pop
adc
loope
movsl
ss
mov
add
popf
xor
pushf
xchg
dec
jl
shrl
add
call
xor
les
add
shl
push
out
inc
mov
int3
aad
xchg
dec
and
push
mov
dec
or
dec
ret
push
jbe
addl
cmp
jnp
fisttpl
dec
and
aad
add
test
xchg
in
popf
daa
xchg
insl
or
dec
dec
and
loop
movsl
nop
lcall
fwait
out
bound
mov
adc
push
mov
push
push
mov
cmp
sub
xchg
xchg
push
cmc
mov
jmp
sbb
jae
pop
dec
pop
notl
push
cltd
push
xchg
rclb
daa
mov
add
cmp
cmp
cmpsl
mov
insb
sub
inc
outsb
adc
dec
movsl
lods
push
push
sbb
xchg
push
mov
leave
sub
aas
xor
jbe
dec
mov
bound
sub
mov
pop
sbb
nop
and
fdivs
sbb
adc
pop
and
cmpsb
repz
cmc
movsl
popa
mov
ficoms
xchg
mov
out
andl
sub
mov
mov
jp
jecxz
dec
fisttpl
pop
shl
insl
mov
adc
push
pop
les
std
sahf
nop
loope
jmp
and
insb
ja
loop
loope
adc
cmp
addr16
lret
repz
fidivl
int3
dec
jb
sahf
sub
jne
mov
xor
pusha
and
ss
subl
cmp
adc
enter
or
popa
jl
nop
mov
out
repnz
xchg
cmp
mov
mov
mov
mov
adc
cmp
fldl
ds
jl
int
orb
mov
or
add
xchg
xchg
loop
imul
xchg
add
sti
add
fcompl
les
sbb
xchg
dec
fs
mov
xacquire
lret
pusha
call
sub
pop
cwtl
ja
mov
xchg
mov
cmp
and
imul
test
and
mov
sub
xor
dec
test
cmp
into
sbb
insl
enter
jge
push
into
lahf
data16
clc
enter
adc
pop
mov
insb
and
and
mov
cmp
pop
push
adc
sbb
insl
jmp
out
fsub
and
popf
adc
push
mov
adc
stc
enter
xor
adc
jge
arpl
jne
mov
pop
inc
jg
mov
or
mov
mov
in
pop
out
or
mov
out
adc
or
imul
push
sub
mov
loopne
out
mov
mov
movsb
lods
xor
hlt
or
or
fsubl
icebp
inc
or
cmpl
mov
mov
rolb
movsl
push
xor
jecxz
fsubrl
je
shrb
xor
jle
movsb
scas
ljmp
hlt
pushf
push
iret
push
jl
arpl
add
sub
jae
ja
aas
jge
cmp
push
cmc
lods
dec
jle
and
lret
dec
call
adcb
cld
push
mov
call
mov
outsl
test
cld
decb
faddp
push
cli
hlt
jmp
cmpsb
lret
pop
jbe
das
xchg
mov
or
mov
dec
dec
mov
icebp
loope
dec
sbb
adc
divl
push
dec
push
or
mov
pop
stos
fstps
jnp
adc
jb
jp
inc
and
push
adc
out
std
mov
mov
mov
inc
cmpsl
push
or
push
aas
cmp
iret
insb
jl
adc
fmuls
or
cmp
jg
add
subl
pusha
clc
sti
add
xchg
push
xchg
sti
push
jnp
sbb
adc
and
push
imul
lea
adc
adc
inc
pushf
mov
adc
cwtl
jge
jl
adc
jno
dec
cld
add
ficompl
mov
or
adc
popf
xor
mov
sbb
adc
or
lret
aaa
rorl
cmp
ja
addr16
pusha
lods
adc
lret
lock
or
push
adc
out
xor
xor
data16
loopne
sbb
std
sti
outsl
sub
movsl
sub
or
jmp
shll
into
ja
arpl
mov
pop
pop
xor
pop
cmp
stos
sub
test
fidivrl
test
mov
mov
cmp
dec
xor
dec
int
mov
jp
ss
lret
ret
xchg
pop
mov
pop
stc
jl
lock
clc
push
lret
push
push
lahf
mov
or
aam
xchg
outsl
lock
mov
data16
pop
scas
aam
jnp
add
data16
addr16
ret
mov
nop
sub
jo
cmova
popl
push
int
pop
out
in
push
dec
mov
movsb
sub
mov
sub
cmpl
mov
push
nop
fsub
enter
addr16
sub
cmpsl
adc
mov
add
jg
xor
cmpsb
mov
es
jmp
int3
lods
out
ss
add
ficomps
xchg
xchg
cs
ljmp
push
mov
push
mov
pop
enter
and
adc
sub
testb
push
mov
cltd
stos
push
outsl
dec
mov
mov
lock
in
push
repnz
cmpsl
push
aad
scas
mov
sbb
mov
sub
sub
imul
xchg
push
inc
mov
ror
and
rolb
xchg
sub
xor
out
decl
xchg
cli
xchg
mov
mov
sbb
lock
arpl
mov
shrb
mov
dec
cmc
adcb
les
jge
hlt
cld
sbb
mov
sahf
ficomps
xchg
adc
mov
pop
shrl
mov
jge
or
cmp
inc
ror
mov
shlb
adc
cmp
mov
rcl
xlat
cs
loopne
stos
ds
jnp
insl
adc
push
dec
mov
bound
cmp
dec
pushl
push
mov
clc
jl
push
call
xchg
ret
out
jnp,pn
leave
aam
sar
push
inc
mov
dec
jge
and
inc
cmp
jne
xchg
call
lock
mov
pop
mov
arpl
jg
jbe
lds
int
jns
icebp
mov
cli
popa
call
push
lea
sbb
dec
cli
pop
jge
shl
mov
cli
xchg
faddl
push
push
mov
add
dec
pop
ljmp
mov
inc
sbb
std
imul
subb
ljmp
jge,pn
jge
sbb
rcl
jg
mov
sbb
or
add
add
aam
pop
add
imul
sub
call
mov
sbb
or
inc
cmp
push
lahf
aaa
pop
push
xchg
lds
mulps
jp
aaa
lock
lret
dec
mov
cli
push
rcpps
movsb
jae
jge
or
dec
jb
cmp
in
lds
push
sbb
xchg
hlt
sbbb
mov
add
xor
push
lcall
mov
fdivs
sahf
dec
call
dec
stc
cmp
aas
jmp
loope
mov
add
std
lea
out
js
ret
jns
mov
jg
fisubrs
mov
hlt
jle
sub
pop
cmpsb
imul
add
push
popa
adc
inc
jmp
inc
fwait
lods
pop
fisubl
pop
cli
push
lahf
shrb
xchg
mov
mov
jp
cld
mov
andl
jg
add
loop
adc
faddp
xchg
ret
stos
sbb
ljmp
sub
pop
gs
add
out
jmp
pop
lret
xchg
inc
xor
xor
xchg
ficomps
test
lea
cmc
stos
cmp
adc
mov
jno
test
jecxz
pop
xchg
dec
std
dec
ljmp
mov
ss
fldt
jmp
call
into
rolb
repnz
adc
addb
mov
push
or
mov
shll
inc
jae
mov
push
xor
lds
xchg
sahf
sub
cld
add
pop
sbb
lahf
push
xchg
xchg
cmpsb
xchg
and
jnp
mov
nop
sub
divl
pop
movb
ss
es
insb
xchg
cltd
test
sbb
push
push
bound
pushf
inc
mov
loopne
cmc
xor
fcmovnu
push
adc
and
rcrb
jns
add
hlt
xor
jae
outsb
ret
push
add
out
mov
hlt
test
xor
fisttps
out
cmpb
aam
loope
jns
sub
mov
cmp
pusha
mov
add
lods
mov
push
movsl
mov
js
add
rcll
sub
popf
sub
dec
in
xchg
sbb
aam
mov
aad
cs
fs
lahf
sbb
mov
push
cmp
jno
sbb
dec
int3
dec
mov
mov
ret
loop
xor
cmp
hlt
add
int
orb
lea
lret
hlt
sarl
inc
sahf
imul
inc
push
sti
xchg
jmp
in
dec
or
push
push
in
jl
shll
add
jg
jno
sub
cmp
xchg
lret
dec
movl
dec
imul
sub
adc
incl
jg
stc
jo
pop
ret
add
sub
lds
mov
jne
push
in
loop
mov
ret
pop
mov
cmp
and
or
push
fsubrp
push
mov
outsb
adc
andb
and
pop
adc
leave
int
call
jg
fs
adc
jecxz
clc
pop
mov
add
jge
std
jo
dec
mov
jle
dec
jecxz
mov
jl
into
push
fs
adc
push
add
sub
jbe
test
pop
adc
out
sub
push
jl
push
adc
add
in
shr
shlb
rol
test
mov
mov
bound
dec
stc
add
inc
xchg
ds
adc
testb
adc
push
cmp
movsl
cmpsb
xor
cmp
adcl
popf
ljmp
pop
mov
adc
call
out
rorb
adc
fs
adc
cmp
xchg
pop
cmp
pop
aaa
rcll
pop
adc
dec
sub
dec
xchg
inc
mov
jno
adc
dec
ret
out
mov
inc
int3
ret
sub
mov
fnstenv
xor
push
jmp
aad
lretw
xchg
sbb
xlat
cltd
stc
or
sbb
push
mov
jle
imul
pop
subb
push
push
cmpb
jp
mov
xor
dec
and
inc
movsl
or
pop
rcrb
popf
inc
mov
sub
adc
lds
sub
scas
fsubrl
jle
mov
jge
fwait
mov
xor
cmp
ds
popf
cmc
mov
ss
push
pop
insl
addb
rcll
sbb
mov
fnstcw
mov
cmp
and
loopne
cmpsb
sbb
mov
jne
mov
or
mov
cmc
lods
hlt
inc
push
pop
sbb
cld
add
shlb
repz
sbb
mov
mov
flds
out
icebp
mov
add
cmp
pop
dec
mov
dec
cmp
aas
fwait
lcall
lds
outsb
nop
and
addb
sub
xchg
sahf
lret
jl
enter
and
push
or
xchg
jns
inc
xor
popf
sub
icebp
push
sbb
insl
insl
insb
in
xchg
icebp
test
pushf
nop
lea
or
adc
ficoml
movsl
pop
and
hlt
addr16
outsl
push
sub
pop
jno
rcrb
push
adc
mov
sub
jbe
adc
xchg
hlt
cmp
sbb
stc
xlat
fdiv
xchg
in
cmp
das
imul
adc
out
insl
arpl
test
mov
in
nop
push
rcrb
rolb
xchg
push
movsl
lock
fidivl
inc
xchg
lcall
gs
adc
dec
hlt
mov
pop
lds
sub
xchg
jle
addr16
push
rolb
test
fstpt
test
add
mov
js
out
sbb
sub
jge
push
jecxz
aam
fs
inc
push
pop
adc
je
adc
lds
xor
les
in
repz
xchg
incl
es
jnp
push
mov
movsl
add
in
sbb
adc
add
daa
leave
cmc
push
je
adc
test
or
add
or
rorb
mov
cmp
and
mov
sbb
jge
xchg
push
push
insb
leave
push
jb
mov
push
add
cmp
dec
repnz
andb
int3
mov
incb
std
out
ljmp
sbb
add
outsb
std
jo
pop
adc
insb
and
xchg
fwait
call
mov
cmpsb
sbb
push
sub
pop
imul
nop
mov
ja
popa
lea
pop
cld
decb
xchg
push
popf
daa
push
ds
adc
mov
mov
add
jmp
sbb
test
mov
iret
shl
bnd
inc
and
test
sub
int
mov
into
rcl
xchg
int
rcrl
jge
xor
pop
call
pop
std
call
js
lock
sbb
jg
sbbl
sahf
jae
pop
mov
lea
shrl
mov
jg
incl
rdtsc
cmp
aas
xchg
pop
mov
pop
add
frndint
sbb
in
lcall
test
mov
xchg
mov
push
sbb
xchg
adcl
mov
push
push
add
sub
or
xchg
out
fcmovnb
rclb
push
cmc
jg
mov
cmp
fwait
inc
jmp
aam
xor
sub
xlat
fsts
and
fcoms
and
out
ret
xchg
cmp
push
repnz
sbb
push
adc
and
xchg
gs
adc
xchg
push
cmp
aaa
inc
jns
pusha
pop
sahf
testb
push
orl
mov
inc
xor
scas
mov
loopne
insl
imul
scas
inc
pop
adc
jo
pop
adc
mulb
xchg
bound
mov
inc
ficoml
pop
adcl
fcmovnbe
outsb
sub
cmp
cmpsb
xchg
in
cwtl
mov
cmp
mov
lods
dec
mov
jbe
jo
add
imul
adc
clc
jg
and
movsb
adc
movsb
in
mov
inc
loope
inc
inc
add
jb
cmc
add
pop
mov
iret
jae
movsl
gs
sbb
inc
dec
jmp
and
and
push
or
mov
out
mov
arpl
subb
jl
mov
aam
mov
mov
push
jae
and
adcb
int3
pop
push
xchg
mov
jns
imul
sub
pop
push
insl
push
daa
pop
pop
fisubl
cld
add
data16
mov
cld
dec
push
faddp
cld
sub
mov
mov
aam
mov
leave
adc
data16
roll
rcrl
addr16
lods
jecxz
lds
sbb
arpl
or
pop
push
cmp
inc
pushf
jne
cmp
lods
dec
jno
mov
das
jne
sti
aad
mov
aad
ss
push
add
sbb
mov
js
mov
jno
adc
lret
push
adc
into
pop
push
fisubl
or
xchg
insl
jo
icebp
repnz
add
clc
es
add
push
cld
mov
inc
ljmp
jns
fistpll
decl
lds
inc
bound
push
mov
jo
inc
popl
mov
test
inc
rol
jmp
inc
mov
mov
jecxz
shlb
or
int
rcrb
leave
xor
bound
adc
lea
shrl
mov
jge
popa
push
mov
xor
lret
push
movsb
add
add
mov
mov
or
ficoms
jg
fwait
shrl
and
cmpsb
sbb
or
imul
or
lds
in
iret
popf
cmp
pop
pop
out
sar
jne
popl
jmp
inc
movsb
rolb
mov
rcrb
das
and
cmpsb
add
mov
mov
push
mov
add
cli
mov
pop
sarb
mov
lcall
test
mov
mov
xor
mov
inc
into
push
xchg
mov
sub
dec
stos
shrl
mov
lds
and
or
stc
or
imul
addb
sbb
es
stos
mov
pop
in
loopne
orl
adc
insl
test
hlt
mov
push
and
jne
adc
push
lea
loop
jnp
inc
hlt
mov
nop
push
dec
stos
shrl
mov
and
inc
inc
incb
call
xlat
xor
repnz
or
dec
push
push
jb
addr16
dec
cmp
outsl
push
mov
inc
jns
adc
call
xor
outsb
xchg
sub
test
dec
test
pop
int3
popa
pop
cld
sbb
call
sahf
std
cs
jmp
sbb
ds
aas
addl
mov
fs
call
fldl
adc
shlb
outsb
mov
mov
xchg
cs
or
sbb
mov
lcall
lcall
sbb
iret
jp
mov
dec
pop
adc
aas
sarb
or
lahf
insl
imul
xchg
into
push
and
lret
sub
adc
imul
iret
stos
mov
mov
jmp
lea
pop
mov
les
sub
mov
aad
jno
and
mov
dec
fisubrl
cmc
je
dec
mov
insl
negb
lods
sub
shll
in
dec
jecxz
mov
jns
jl
mov
push
and
adc
cmp
jmp
push
pop
sbb
test
push
stos
mov
lret
pop
in
sarb
dec
sbb
test
adc
outsl
jo
add
jno
adc
lret
mov
ss
and
adc
adc
jae
jbe
icebp
dec
mov
push
add
loop
jp
xor
nop
cmp
orl
cli
loopne
push
adc
and
xor
jp
rcll
ror
stos
fidivrl
rcrl
repnz
pop
icebp
insb
sbb
jmp
int3
jno
adc
pop
mov
lret
mov
fbstp
mov
fsts
lock
xor
popa
cmc
xor
xlat
mov
push
dec
enter
sub
dec
daa
js
outsl
fadd
decl
push
pop
sub
xorl
test
out
fcmovu
lret
push
ret
ret
xor
pop
lock
cs
and
xchg
dec
and
sahf
ret
mov
pop
lahf
out
dec
mov
movsl
xchg
dec
dec
adc
sbb
add
cmp
push
dec
dec
repnz
es
outsb
add
jmp
jg
or
icebp
je
push
push
xor
xor
rcrb
es
jecxz
cmpsb
int3
jno
adc
jge
movsb
sbb
repz
mov
rorl
adc
adc
das
pop
dec
cmp
imul
adc
pop
sahf
imul
ss
xchg
mov
int
jl
std
mov
inc
sub
shll
mov
sub
les
or
push
push
or
mov
movsl
jo
ljmp
fmull
xchg
mov
push
das
pop
lret
lds
arpl
shlb
in
jo
call
sbb
bound
mov
push
hlt
call
lock
or
xor
jae
push
arpl
add
std
cli
hlt
mov
aad
fstl
sub
push
mov
adc
lock
cmpsl
mov
in
push
jnp
push
or
inc
mov
adc
jge
movsb
fcmovnb
xchg
pop
dec
mov
inc
and
xor
mov
add
mov
inc
pop
adc
bound
loopne
inc
or
lea
xor
xor
jbe
inc
orl
xchg
std
cmp
aaa
repnz
das
pop
mov
add
pop
std
mov
mov
push
sbb
sahf
mov
sub
repz
mov
sub
sub
jne
dec
jae
cmpsl
js
push
adc
or
popa
scas
mov
push
pop
test
fisubl
insl
mov
sbb
jmp
ss
ja
inc
lds
push
ret
negl
sbb
pushf
sti
adc
pop
ss
in
movsl
jmp
shrl
int
push
mov
pop
sahf
sbb
fdivs
xor
int3
xor
shll
push
outsl
mov
sbb
fsubrp
int3
mov
adc
lret
pop
mov
adc
rcll
test
dec
inc
sti
xchg
xchg
lret
aas
movsb
ficoms
add
xchg
xchg
sub
stc
mov
or
jo
bnd
dec
add
mov
pop
pop
movsb
cmp
jb
push
fwait
int
fisubrl
xor
addr16
pop
dec
mov
mov
ficoml
pop
cmpsb
cmpsl
iret
arpl
xchg
loop
xchg
in
push
movsl
pushf
fs
out
jg
lahf
add
popf
in
mov
ret
add
cmp
mov
mov
jnp
sub
pop
sub
mov
push
pop
in
outsl
jae
sbb
pop
xchg
sub
icebp
lock
in
and
imul
testl
divl
xor
fsub
or
sbb
xor
je
sahf
lods
mov
xor
test
push
inc
loopne
mov
test
push
xchg
rorl
jnp
xlat
and
mov
mov
fsubs
mov
cmp
pop
fs
cltd
ss
repnz
lret
call
lods
adc
shr
cmp
cli
mov
pusha
insl
add
arpl
jnp
xchg
pop
enter
jl
mov
nop
push
shr
dec
mov
and
adcl
out
jns
and
xchg
ret
aad
cmp
das
and
mov
pop
sbb
cmp
push
adc
es
or
outsb
test
lret
inc
and
xchg
and
aam
and
in
push
insb
ljmp
pop
fcoms
repnz
ret
xchg
sub
cmp
test
jae
into
iret
push
mov
shlb
out
stos
and
setae
cmovs
incl
in
lds
jg
decl
out
or
nopl
rorb
jne
mov
pop
das
sub
std
ljmp
inc
xchg
rcl
cld
xchg
fmull
shlb
icebp
ret
sti
or
loope
orb
and
dec
std
xor
shlb
sar
cli
adcb
jg
je
roll
mov
dec
add
sbbb
lcall
rorl
jmp
rcl
ja
push
jbe
lods
stc
cmovo
mov
testl
push
test
push
out
out
call
pop
mov
or
xor
shlb
test
or
cs
sub
es
xorl
push
adc
movsl
xchg
push
sbbb
bound
mov
fsubrl
add
jno
shll
push
cmpsb
adc
cmp
std
negb
in
addl
push
push
in
or
dec
orl
std
jne
adcl
std
inc
or
xchg
bound
jg
dec
sbb
push
push
imul
cli
mov
jmp
sub
push
cmp
or
or
sbb
xchg
mov
out
jecxz
shl
push
ja
cmp
sub
icebp
jge
push
flds
popa
into
jbe
dec
mov
lahf
pop
icebp
mov
xchg
adc
imul
push
cld
cmpsb
dec
adc
add
sub
bound
popa
and
loopw
stos
or
push
or
shl
fidivl
cli
pushf
pop
cmpsl
pop
mov
or
aaa
je
insb
xchg
popw
mov
bound
cwtl
jmp
jns
jmp
cmp
in
adc
or
inc
push
mov
mov
add
push
sbb
jmp
pop
adc
adc
pop
jo
cmpsl
jae
dec
mov
mov
lea
push
dec
das
sub
sub
jge
push
test
sbb
nop
cmp
push
imul
jbe
xchg
sub
pop
hlt
sub
test
ss
add
out
or
push
sarl
adc
mov
cmpsl
mov
sbb
popf
in
aaa
jo
scas
fs
mov
gs
sub
pop
adc
push
xor
test
add
fcomps
xchg
sbb
imul
cwtl
jge
cmp
mov
int3
cmpsb
divl
repz
pop
sub
pop
es
test
sub
add
mov
jb
sub
daa
push
ret
loope
mov
push
xchg
xor
loop
or
das
cmpsl
out
in
and
cmp
call
fs
xlat
movsb
call
cmp
pop
xor
pop
adc
xor
rcl
enter
mov
pop
sbb
dec
call
jmp
mov
inc
cmp
rcrl
movsb
cmp
sti
frstor
loop
incl
mov
add
sbb
les
pop
adc
enter
inc
scas
jecxz
pop
lret
cwtl
lret
push
outsb
xchg
jle
cmpsl
mov
idivl
mov
test
mov
xor
xchg
and
mov
roll
add
in
orb
xchg
and
add
test
pop
sbb
push
ja
pop
pop
in
cld
push
mov
sub
inc
add
jnp
into
popf
cmp
lods
sbb
int
xchg
call
pushf
popa
pop
in
sti
xor
push
stc
or
cs
push
xor
jl
mov
xor
cli
sbbb
fdiv
std
loopne
addb
adc
mov
shrb
jmp
stos
sahf
xor
mov
jo
sbb
cmp
incb
push
sub
loopne
xchg
add
je
andl
push
push
mov
pushf
push
test
mov
shl
jnp
into
jne
mov
das
sub
in
mov
aam
sahf
push
jp
loope
iret
icebp
push
dec
dec
aad
jae
into
popf
popa
mov
add
add
ljmp
and
sub
lcall
jno
adc
call
xor
jb
xor
jge,pt
inc
pop
cmpsl
and
mov
cmpsb
mov
jle
cld
decl
mov
inc
or
stos
lret
ljmp
lds
jp
movl
mov
mov
push
sub
cwtl
decb
jbe
rorb
sbb
iret
sbbb
jno
mov
hlt
push
arpl
ret
or
or
xchg
arpl
jns
mov
ret
jge
mov
xchg
pop
push
cmp
in
out
cmp
and
xchg
fwait
xlat
je
mov
leave
mov
mov
shlb
iret
fcoml
shl
call
stc
ret
out
outsl
jo
xchg
adc
cmp
mov
pop
lds
lods
xchg
fwait
incb
jae
xor
mov
or
push
jmp
fstp
clc
jno
adc
cmp
jno
adc
xor
loopne
pop
gs
fiaddl
aad
subb
jns
rcrb
dec
inc
cs
mov
adc
repz
out
dec
imul
and
popa
push
movsb
stos
daa
addb
jnp
popa
je
xchg
popf
das
mov
or
xchg
push
sarl
cmpsl
dec
fcomps
sub
fstl
repz
test
movsl
je
es
mov
loop
mov
sbb
mov
hlt
popa
movsb
pushl
xor
lea
push
mov
cmpsb
popa
lcall
pusha
fmuls
sbb
lcall
xchg
icebp
fwait
jno
pusha
jae
cs
in
pop
push
mov
push
sbb
cmc
push
jbe
push
xor
sar
add
mul
gs
adc
mov
push
sbb
xchg
outsb
insb
outsl
push
cmp
jb
mov
xchg
and
mov
push
xchg
xlat
xchg
fidivs
push
push
xor
cmp
popa
jne
lcall
inc
sub
movsb
jmp
arpl
mov
out
and
rorl
push
faddl
icebp
jo
mov
enter
add
jecxz
jg
ss
mov
push
subb
jae
or
adc
sbb
cld
sub
xor
ja
iret
lcall
adc
inc
outsb
cmp
and
jbe
push
lret
mov
ja
push
adc
jne
jmp
fisubrs
sbb
adc
and
repnz
add
incb
outsl
push
jg
mov
cs
push
loop
hlt
push
or
or
addr16
fidivl
mov
add
fwait
call
sbb
cmp
mov
negb
shll
xor
sbbb
and
or
mov
ljmp
fstpt
xchg
add
sub
mov
inc
or
mov
ljmp
jl
cmpsb
cmp
sahf
mov
mov
fdivrl
mov
add
jmp
jbe
add
incb
pop
fstl
out
popf
insb
and
lret
lea
std
cli
jecxz
shlb
rorl
push
pushf
pusha
pop
jmp
mov
pop
das
and
dec
cli
hlt
call
packssdw
shrl
mov
test
jne
sahf
pop
das
and
iret
ljmp
xchg
loop
inc
mov
jno
ljmp
test
add
add
aaa
mov
jg
mov
shll
lahf
in
xchg
scas
incb
add
leave
mov
aaa
pop
push
lret
xor
add
insb
mov
hlt
lods
aaa
test
rcrb
ja
aas
pop
leave
jb
or
mov
push
idivb
leave
int3
rorl
pop
je
or
or
xor
jns
push
sbb
jge
das
es
ret
jbe
inc
or
mov
loop
inc
pop
jge
mov
or
repnz
stc
and
aas
jnp
push
cltd
xchg
outsl
and
sbb
shlb
cltd
ret
or
lret
fsubl
sbb
jnp
jno
cmp
or
int3
add
jne
mov
push
or
pop
and
cmpsl
pop
rorl
xchg
jnp
sub
inc
lret
aam
add
cmpsb
push
or
mov
out
xor
movsl
xor
sub
loop
mov
fisubs
lcall
je
arpl
fcmovnbe
add
xlat
xor
ja
lods
aas
dec
cmp
mov
ds
lret
dec
pop
mov
std
cmp
pop
or
push
mov
jnp
adc
ja
inc
mov
and
inc
push
adc
push
or
push
sub
ja
test
cltd
push
pop
nop
mov
mov
pop
not
mov
or
pop
shrl
add
xchg
mov
es
xchg
lcall
mov
fadd
dec
movl
push
stc
pop
mov
scas
jmp
cmp
arpl
jae
jp
nop
fwait
push
pop
in
test
frstor
sbb
popa
nop
stos
pop
dec
jo
pop
mov
push
xchg
mov
aaa
pop
enter
loop
jecxz
pop
cmp
stc
es
mulb
mov
xchg
shlb
adc
addr16
ret
pop
fisubl
cmp
mov
call
push
jmp
leave
push
xchg
fmull
ss
nop
xchg
aaa
test
mov
pop
adc
push
movsb
xchg
lods
sahf
pop
adc
fstps
add
mov
mov
adc
add
cmc
push
lahf
insb
rolb
jecxz,pt
jecxz
xchg
testb
push
jne
mov
xor
push
adc
adc
in
mov
loopne
rcl
pop
pop
cmpsl
cmp
jno
dec
xorl
cmp
mov
cmp
add
stos
in
mov
jmp
xchg
pushf
je
ljmp
icebp
imul
adc
lock
lock
fs
imul
fsubrs
ret
movsb
or
fdivr
repnz
jl
adc
cmp
or
dec
sbb
and
sbb
or
xor
jb
adc
cmp
sub
adc
adc
mov
inc
cli
sbb
stc
ja
int
cli
jo
das
aad
jg
sbb
push
adc
mov
adc
movhps
xor
ret
ret
lcall
pop
outsl
mov
jbe
mov
pop
push
push
jnp
dec
cld
cmp
jns
mov
popf
dec
outsb
or
cmp
add
test
pop
jg
movsb
xchg
push
mov
sbb
imul
icebp
sub
or
cmp
and
add
add
push
andb
dec
or
arpl
xorb
es
jmp
into
les
ret
in
add
mov
xchg
pop
sub
xlat
hlt
xchg
popa
frstor
ret
out
push
push
imul
popf
xlat
in
arpl
bound
test
in
cmc
ljmp
jns
aaa
add
lock
lds
andb
lods
xor
jl
pop
imul
xor
pusha
sub
push
daa
scas
mov
pushf
fbstp
pop
cmp
mov
or
int3
ret
jae
adc
mov
dec
in
pop
mov
jge
insb
adc
outsb
add
or
jno
xchg
push
jnp
jns
in
xchg
pop
pop
xchg
inc
add
add
ret
or
add
add
nop
in
sub
mov
push
shlb
pop
out
std
mov
sbb
jecxz
push
add
test
mov
js
push
adc
mov
mov
sar
hlt
add
int
jmp
dec
ja
cmp
test
dec
pop
test
ds
or
call
loope
cli
mov
addl
xlat
inc
cmc
outsb
enter
push
or
rcrb
push
sbb
arpl
mov
push
sbb
addr16
test
pop
jecxz
dec
aam
fcomp
pop
or
test
or
jmp
test
mov
mov
push
ljmp
js,pt
out
mov
adc
inc
mov
push
in
scas
jg
inc
fistpll
mov
imul
cmc
inc
pop
sub
leave
lea
adc
xor
decb
and
pop
push
xchg
rcrb
sub
adc
sbb
add
fdivs
push
add
adc
cmpsb
sub
adc
popf
out
out
mov
pop
adc
xchg
stc
xchg
push
jl
cmp
cmc
jne
nop
int
mov
mov
adc
in
xor
push
addr16
add
loopne
subl
and
adc
jo
cmp
daa
jecxz
push
fs
cmp
jg
stos
xchg
cs
pop
decl
fldt
in
add
xor
push
dec
pop
lret
sbb
stos
xor
or
imul
rcr
pop
fsubs
add
cltd
mov
ret
pop
fstpt
cmc
setb
pop
adc
sub
mov
push
adc
cmp
mov
out
push
les
dec
test
test
mov
aaa
inc
mov
sbb
sbb
mov
stos
sbb
out
stos
subb
call
sbb
push
mov
adc
es
cmp
rcl
aad
subl
fwait
in
jno
roll
jae
test
jno
inc
pop
pop
pop
sub
in
sub
xchg
out
outsb
fstp
cmp
cmpsb
es
push
subl
inc
lods
sbb
addl
jne
inc
sub
shrb
push
nop
decl
push
ficoml
aad
push
jo
daa
dec
icebp
xchg
pop
sub
clc
mov
jmp
cmpl
ja
pushf
pop
pop
push
inc
jnp
mov
jl
pop
pop
pop
xor
jecxz
sahf
mov
in
pop
cmc
mov
add
inc
cmp
mov
mov
or
xchg
lds
lret
add
rorb
in
nop
add
addb
xor
fs
mov
subb
roll
dec
out
shrl
loope
call
add
inc
sbbb
std
jp
sbb
mov
arpl
push
xor
mov
mov
std
pop
leave
adc
out
incl
or
js
dec
lock
xchg
popf
dec
cmp
cmc
or
je
in
add
cld
gs
xor
jle
ja
shlb
stc
lods
shl
dec
call
mov
pop
in
nop
mov
pushf
loopne
orl
add
mov
add
lret
pushf
bound
roll
mov
adc
in
and
jo
pop
adc
mov
cmp
fdivrl
adcb
cmp
out
pushf
add
movsl
fisubs
mov
pop
out
adc
insb
lea
mov
sub
fwait
sbb
lcall
jno
lea
sahf
std
xlat
lock
jns
dec
fst
pop
cltd
jbe
mov
jns
mov
in
add
push
bound
int3
sub
in
enter
and
dec
shr
or
push
out
xchg
add
and
jp
lahf
pop
mov
mov
cmp
fcmovnb
scas
cmp
mov
push
push
sub
jg
dec
fisubrs
sahf
push
out
jmp
mov
call
pop
lods
inc
sub
cld
into
pop
es
outsb
fistps
xchg
pop
lods
cwtl
daa
cmp
mov
pusha
cs
mov
xorl
add
adc
jle
push
repnz
pop
js
fmuls
inc
sub
lret
dec
sarl
movsb
adc
push
push
mov
repz
stos
hlt
push
sbb
jmp
out
jp
mov
fmul
pusha
out
xor
sbbb
mov
bound
xchg
fsubs
es
lret
out
and
ficoml
xchg
dec
pop
insl
incl
push
out
dec
mov
mov
xor
sub
sbb
imull
lods
pop
aad
adc
adc
bound
jl
pop
std
pop
leave
ret
push
mov
test
mov
xor
adc
push
xchg
xchg
daa
subl
stos
inc
xchg
push
cmp
mov
dec
or
aam
mov
xor
lcall
das
loop
xchg
push
xchg
adc
ror
pusha
fwait
push
loope
imul
push
les
xor
das
cltd
push
xchg
aam
mov
pop
aad
sbb
fsubs
shrl
hlt
jmp
lock
out
or
adc
mov
fs
xchg
pop
or
outsb
sub
jmp
sbb
gs
pop
xor
mov
lahf
dec
cmpsb
xchg
sbb
mov
movsl
call
xchg
add
movsl
cmp
sbb
sbb
jb
sub
out
fistps
in
int3
and
lds
cs
je
add
movsl
stos
aam
add
gs
mov
int
sahf
int3
ds
in
dec
or
lret
cmp
push
mov
or
or
mov
mov
shll
bound
das
xchg
dec
inc
addb
ljmp
aaa
cmp
dec
unpcklps
xlat
clc
jnp
iret
push
bnd
cmp
jl
mov
aam
sub
lea
pop
mov
mov
mov
dec
arpl
stc
hlt
lcall
or
pushf
jmp
ret
popf
cmp
imul
das
pop
aas
xchg
in
xchg
aad
cli
sahf
dec
lods
shll
adc
pop
aad
or
mov
fdivrl
add
jg
movsl
pop
xor
jecxz
rorl
pop
cs
pop
inc
push
xchg
call
sbb
roll
push
clc
out
inc
aam
ja
pop
loope
ljmp
inc
xor
sub
movb
loope
aad
daa
pop
movsl
dec
inc
dec
mov
ljmp
test
insl
mov
mov
adc
pop
lods
inc
addb
pop
lret
pop
call
add
mov
adc
int
mull
adc
mov
push
pusha
xor
dec
add
fldenv
or
mov
pushf
sbbl
mov
es
dec
pop
adc
icebp
ljmp
ljmp
addb
inc
and
add
mov
dec
xor
mov
cli
fwait
icebp
cs
or
lea
mov
stc
jmp
sbb
sbb
outsb
int3
inc
cltd
fld
shll
inc
fistl
or
sub
mov
sti
jmp
dec
out
add
dec
and
mov
mov
ljmp
in
mov
pop
jmp
popa
pop
sbb
in
xor
sub
std
cmpsl
popa
adc
add
nop
add
lock
stc
inc
sub
rcll
xor
pushf
or
movsb
cmovnp
dec
jmp
fcomp
test
mov
sbb
addr16
mov
aas
leave
jns
dec
lret
mov
iret
adc
lahf
lret
fxch
cmc
add
int
leave
sub
jns
xchg
sbb
repz
in
push
push
dec
out
cmpsl
insl
pop
inc
je
and
hlt
push
or
fiadds
sub
mov
jbe
sti
and
daa
dec
or
sbb
insb
addr16
add
or
movsb
and
mov
inc
xchg
dec
in
push
stos
inc
pop
loopne
or
sbbb
dec
sub
icebp
xor
mov
out
pop
and
xor
mov
dec
outsl
sbb
xor
cmp
imul
popa
cmp
jecxz
lock
iret
ret
ja
fwait
add
icebp
jae
cmp
insl
test
add
push
push
sub
inc
mov
je
and
or
mov
jmp
std
inc
imul
inc
icebp
add
sahf
xchg
in
mov
lock
pusha
sub
adc
stos
or
or
or
into
xor
fisttps
jns
je
xor
orb
icebp
cmp
cmp
pop
xchg
sub
js,pt
jae
fs
dec
imul
sbb
mov
daa
or
int
xlat
sahf
xor
cld
cmpl
shr
ret
and
xchg
xor
mov
xor
fs
pop
add
pop
xchg
xchg
loop
mov
adc
fwait
sti
ds
ja
clc
in
stos
push
mov
call
aam
and
ja
push
rcr
or
pop
bound
and
jnp
adc
enter
sub
mov
ret
jnp
lea
dec
ja
or
dec
inc
js
les
pop
cmpsb
clc
jo
test
stos
pushf
mov
push
popf
cmp
lods
sub
mov
in
or
mov
test
mov
vunpckhps
shlb
shll
push
xlat
push
inc
push
test
pop
gs
loopne
mov
shll
and
push
mov
pop
or
dec
int3
and
mov
sub
jmp
add
push
pop
fnstsw
jns
dec
or
hlt
mov
mov
loopne
in
mov
jb
loopne
shrb
jnp
adc
or
inc
clc
mov
enter
or
xor
cmp
arpl
mov
orb
inc
inc
jno
call
pop
into
popf
mov
lret
dec
mov
mov
call
dec
inc
xchg
cltd
and
and
sahf
pop
adc
loopne
fidivrs
jmp
add
add
cs
cmp
pop
adc
adc
mov
dec
or
bnd
hlt
inc
shrl
mov
stos
sbb
mov
jo
cmc
int3
call
xchg
push
mov
repz
mov
mov
mov
orb
out
mov
push
push
insb
or
filds
adc
push
adc
mov
push
jb
mov
std
jbe
rorb
mov
adc
adc
pop
mov
sbb
push
adc
xchg
sub
push
in
leave
sbb
incl
jo
in
xchg
xchg
fucomi
lds
jnp
arpl
sbb
jb
inc
cli
mov
or
adc
lret
pop
cmc
js
mov
pop
lea
jmp
enter
outsl
push
jg
push
mov
nop
and
mov
xor
movsb
and
sub
repz
push
xlat
rorb
push
push
loop
mov
mov
mov
pop
pop
or
sbb
js
xor
std
lahf
push
outsl
push
adc
jns
fidivrs
fimuls
mov
or
dec
aas
orl
push
xchg
xchg
mov
incl
mov
out
cli
fisubrl
daa
jbe
inc
cmp
stos
fs
jae
adc
adc
les
adc
and
cmpl
ficompl
xor
rolb
pop
inc
jecxz
cwtl
mov
pop
pop
popa
mov
adc
cltd
sub
mov
shll
mov
ja
movsl
push
das
or
cmc
lock
adc
fs
adc
or
cmp
shrb
cmp
inc
jae
adc
jmp
adc
fcomps
mov
in
lea
daa
jnp
mov
cmpsb
or
fsubp
pop
mov
cli
incl
sbb
pop
xchg
cmpb
icebp
mov
push
xor
or
and
pop
lods
xchg
and
repnz
bnd
jb
int3
cmpsb
cmpsb
mov
fimull
ja
pop
test
fldcw
xlat
sbb
add
dec
pop
int
fs
outsl
jge
mov
cmp
dec
jae
and
pop
mov
movsl
out
rcl
fldcw
test
xchg
dec
push
not
pop
xchg
jecxz
xor
imul
adc
push
adc
daa
inc
decb
test
adc
daa
outsl
and
pop
sahf
aaa
pop
fstl
pop
push
mov
pop
scas
pcmpgtd
lret
or
pusha
sub
jge
bnd
xchg
movsl
pop
xor
jnp
push
lret
or
xchg
add
cwtl
int3
pop
mov
fisubl
lret
xchg
pop
jle
sub
xchg
mov
test
je
imul
daa
xor
lods
cwtl
xchg
dec
lcall
mov
mov
js
mov
in
xchg
shr
xchg
cmp
arpl
adc
jne
or
icebp
adc
roll
push
arpl
jo
or
cmpsl
inc
inc
addb
push
fiadds
sbbl
or
mov
incl
pop
push
jmp
sbb
sub
cli
mov
ja
xor
and
pop
dec
mov
hlt
pop
jg
inc
pop
ljmp
lret
dec
ja
mov
xchg
xor
lcall
sub
mov
xor
lock
inc
das
jge
or
push
sahf
sbb
mov
loopne
in
or
add
push
enter
stc
test
or
movsl
stc
hlt
pushf
push
pushf
xor
and
fdivs
jnp
into
pop
mov
add
movsl
test
insl
mov
in
cmp
mov
ret
pop
std
in
mov
icebp
pop
in
mov
mov
je
pushf
loopne
xchg
push
loopne
aam
call
push
pushf
jmp
pop
add
adc
test
mov
lret
and
and
add
shlb
dec
dec
in
testl
jnp
shlb
push
push
mov
cmp
stc
jle
sar
jo
shlb
aam
push
mov
in
sbb
push
dec
mov
xor
jns
pop
mov
and
lahf
inc
or
dec
scas
mov
outsl
mov
jmp
ficoms
jle
cmc
jle
push
mov
jbe
inc
or
dec
scas
gs
push
int3
sub
jne
cmpsb
add
data16
je
push
sub
pop
or
sub
push
sbb
sbb
js
mov
addr16
test
pop
or
add
scas
stos
mov
repz
add
jbe
test
and
movsb
cmp
ds
mov
loop
xchg
pop
test
imul
sub
int
mov
add
xor
mov
dec
cmpsb
sbb
cld
notl
mov
dec
mov
in
ficoml
imul
test
int3
andl
xlat
cmp
call
push
popa
mov
imull
aaa
sbbb
inc
stos
mov
les
jl
inc
std
pop
add
test
sub
sub
xchg
fwait
and
add
adc
jecxz
clc
mov
adc
push
jl
lock
xchg
mov
aaa
fsubrp
xor
pop
dec
nop
repz
mov
jae
adc
push
add
push
xchg
aas
and
arpl
cmp
and
push
xchg
xor
xor
push
sahf
xor
push
pop
cmc
test
jns
repz
sub
dec
push
cmpsb
mov
lock
lret
rcrl
ss
add
mov
inc
or
out
cmp
fcom
popf
pusha
in
mov
call
out
addr16
bound
nop
mov
fildl
imul
mov
aad
pop
jae
adc
enter
aad
inc
mov
inc
mov
jbe
mov
and
push
ret
ret
inc
loop
mov
mov
incb
nop
mov
decl
mov
leave
or
xor
mov
add
adc
pop
insb
push
xlat
jle
lea
outsb
inc
mov
pop
jmp
cmp
arpl
jg
xor
xor
rcrb
dec
popa
pop
mov
or
addb
mov
cmp
lods
add
mov
sahf
in
aad
shlb
xor
mov
shrl
mov
pop
in
fsubrl
and
jge
shl
lods
sbb
xlat
jle
sbbb
xor
iret
nop
stc
mov
call
ret
mov
mov
loopne
loopne
outsb
in
pop
cs
jo
pop
adc
insb
inc
xor
lea
sbb
sbb
jge
inc
pop
sbb
es
push
mov
push
ficomps
jb
mov
adc
cwtl
mov
adcb
mov
es
mov
pop
and
mov
adcb
dec
testb
int3
aas
mov
dec
addl
aad
pop
cmp
adc
adc
mov
mov
popf
stc
shll
push
popl
in
nop
xchg
adc
jge
mov
shll
push
mov
mov
or
pop
adc
jmp
addb
lcall
repnz
or
adc
dec
fsubl
mov
mov
cmpsl
fldt
js
outsb
dec
cmpsl
pop
jge
std
or
scas
or
clc
xchg
adc
or
sub
stc
mov
mov
sub
lods
ja
cli
sti
mov
xor
sbb
jecxz
shll
mov
adc
dec
test
push
dec
test
cmpsb
push
dec
dec
mov
rclb
mov
rcll
les
mov
cltd
pop
leave
jmp
imul
in
loop
rolb
dec
arpl
mov
rcl
shlb
xchg
dec
and
adc
cmpsb
xor
or
cld
ss
in
imul
lret
daa
movsl
movsl
xor
push
insl
ljmp
mov
repnz
cmp
jmp
lret
mov
inc
hlt
enter
lods
jne
lret
sub
cltd
mov
lods
sahf
int3
inc
movsb
fs
xor
pushf
in
push
adc
out
add
int3
sbb
adc
icebp
mov
daa
mov
lea
outsb
ret
cwtl
xchg
lea
sti
adc
pop
sbb
insb
cmp
add
adc
sbb
cmpsb
cmpsl
and
clc
dec
mov
int
sub
es
mov
or
push
jmp
bound
repnz
lret
and
lods
fisttps
mov
in
adc
pop
mov
push
xchg
ret
fs
jle
cmp
adc
mov
inc
stos
loope
lods
pop
fbstp
aaa
xor
aas
dec
out
pop
push
cmp
or
test
paddusb
ss
sub
test
pop
dec
bound
fnsave
pushf
sub
push
xor
push
icebp
mov
mov
mov
mov
cmpsl
and
dec
mov
repnz
mov
inc
mov
lcall
icebp
loopne
and
mov
call
pop
push
xlat
pop
or
lock
mov
ss
mov
test
jne
loopne
aas
je
add
std
sbb
sub
jno
out
and
and
scas
mov
notb
pop
push
js
insl
movsl
rcrb
cmc
inc
pop
test
jecxz
or
mov
and
test
inc
test
test
rorb
inc
mov
cmp
ss
mov
add
sbb
sbb
xor
mov
aaa
mov
int3
sbb
adc
or
das
ds
shl
sbb
pop
mov
je,pt
test
mov
sti
and
dec
fucomip
jecxz
aaa
mov
es
popf
sub
sti
movsl
cld
call
mov
in
adc
adc
jo
push
adc
push
rcrb
movsl
bound
adc
cwtl
pushf
out
lock
addb
pop
cli
jle
cmpsb
sbb
pop
pop
jge
sti
pushf
in
repnz
sbb
bound
add
call
xchg
out
out
jb
adc
adc
clc
sub
jecxz
mov
pop
jecxz
rorb
hlt
call
scas
imul
popa
sbbb
pop
mov
imul
aad
mov
ret
mov
and
out
cmpsb
mov
sub
push
shlb
loope
js
pop
push
test
sub
decb
inc
jecxz
ss
roll
adc
and
int
andl
ficomps
inc
or
cli
hlt
pushf
arpl
popf
cmp
sbb
add
adc
mov
or
lods
mov
adc
sbb
adc
nop
sbb
je
xchg
js
or
sub
call
adc
xor
push
lahf
insb
jl
adc
outsl
lods
jne
sbb
and
push
jns
dec
xchg
cmpsl
ret
cmp
mov
movsb
sbb
cli
jb
xchg
scas
aam
ja
cmp
popa
cmp
shrl
imul
sbb
cwtl
ds
fldl
push
adc
xchg
mov
cmpsb
xor
mov
mov
into
mov
jl
je
jb
ret
lret
xor
sub
cmp
push
stos
movl
xchg
adc
mov
test
int
test
dec
out
sbb
rorb
jb
dec
cmpsb
and
lret
fisttpl
cmpsb
jp
xchg
or
adc
add
das
jl
and
sub
mov
inc
jmp
lods
mov
js
lods
mov
mov
movsb
jge
push
out
push
adc
cwtl
pop
inc
push
and
cmp
jbe
push
sub
mov
mov
push
gs
push
enter
or
xchg
popf
mov
or
test
inc
pop
add
jbe
js
mov
xor
add
insl
add
addr16
mov
pop
cmp
pop
add
stos
cmpsl
movsb
mov
dec
push
and
iret
test
or
push
add
push
add
mov
mov
les
inc
test
xor
mov
stc
pop
insb
mov
repnz
ja
data16
jae
rcr
xchg
jnp
das
adc
es
jnp,pn
sbb
out
inc
lret
lret
inc
sub
cmp
outsl
dec
int3
ret
and
push
out
lods
xor
xchg
sbb
cltd
test
insl
test
mov
imul
stc
add
adc
pop
xor
jo
dec
pop
adc
jl
xchg
cmp
arpl
dec
push
mov
lret
sub
adc
sbb
dec
dec
dec
xor
and
xchg
mov
mov
hlt
push
sbb
jbe
push
adc
xchg
pushf
js
out
fists
inc
test
cmp
jae
mov
arpl
fdivrs
xchg
rcl
pop
push
or
inc
jno
push
daa
sbb
imul
repnz
push
cmp
mov
pop
and
jns
scas
and
adc
daa
scas
lret
mov
imul
stos
retw
test
cmp
mov
fisubrl
mov
or
mov
aaa
mov
mov
les
xchg
and
or
je
out
inc
push
out
es
mov
push
fs
or
call
adc
aad
jl
and
es
mov
xor
add
cmp
lds
mov
sub
jge
cmc
jecxz
or
sahf
push
push
xor
je
das
aad
jg
enter
jecxz
shll
sub
pop
lods
cwtl
test
cmp
scas
fsubrs
or
rol
icebp
adc
xor
hlt
mov
int
xor
in
pushf
int
pushf
lret
cs
mov
adc
aaa
mov
lods
leave
inc
inc
notl
movsl
mov
mov
add
pop
or
mov
xchg
test
push
push
inc
sbb
bound
lret
int
mov
sbbb
pop
jge
sub
out
or
jo
xor
mov
mov
dec
xchg
add
pop
jge
lret
push
shr
movsl
ljmp
lcall
add
dec
fstpt
inc
das
cmpsb
or
jle
hlt
xchg
ljmp
ja
add
lods
mov
data16
pop
das
pop
mov
setbe
push
jo
jecxz
and
pushf
insl
and
dec
pop
jp
incb
fdivs
test
push
aam
pop
inc
add
sbb
sub
mov
clc
adcb
jg
mul
mov
pop
andb
fwait
mov
mov
imul
movmskps
inc
xlat
movsb
inc
addb
sbb
xchg
mov
mov
jmp
sub
pop
test
dec
jae
inc
fwait
adc
xor
shlb
aam
mov
cmp
push
jmp
adc
xchg
outsl
mov
jg
xchg
jl
and
sbb
mov
dec
cmpsb
cmp
shlb
lock
sub
and
push
adc
insl
inc
mov
jo
pop
adc
xchg
cltd
dec
fistps
mov
xchg
and
pop
push
mov
xlat
test
jno
fxch
ljmp
mov
and
push
or
stos
clc
adc
adc
sub
mov
out
imul
mov
xlat
fdivl
in
jae
std
loope
hlt
adc
adc
mov
push
adc
add
adc
pop
nop
sub
adc
add
sub
subb
jno
and
pop
pop
push
dec
pop
nop
jo
push
adc
lods
es
call
clc
movsl
popf
in
mov
mov
mov
dec
adc
xor
mov
mov
push
test
lea
lcall
mov
imul
hlt
xchg
fmulp
loope
das
pop
movsb
mov
fsubp
xchg
sti
xor
imul
les
divb
sub
popa
out
ljmp
inc
out
lret
xchg
cltd
test
dec
leave
add
insb
into
ja
addr16
cmp
int3
cmc
test
xlat
push
pop
and
jmp
dec
pmullw
pop
gs
pop
xchg
lods
out
mov
aas
mov
pop
mov
pop
fs
daa
sub
mov
jo
mov
push
adc
int3
xchg
xchg
xchg
loopne
scas
fistl
pushf
cmp
mov
pop
add
push
adc
movsl
rcrb
mov
stos
jnp
mov
jg
lret
push
sbb
adc
data16
lret
cmc
cmp
add
daa
mov
das
xchg
popa
cltd
outsb
xor
xchg
movsl
les
sarl
inc
in
and
mov
les
adc
or
cli
aas
inc
or
aad
ds
jg
add
jnp
push
lahf
adc
lcall
mov
mov
lea
cli
hlt
ljmp
inc
xchg
aad
sahf
pop
adc
cmp
adc
adc
je
scas
or
incb
sarl
xchg
pop
sub
or
movsb
fsts
lea
xor
jmp
add
add
mov
je
into
call
mov
shlb
int3
xor
push
adc
mov
add
inc
repz
inc
inc
jo
and
out
into
insb
stc
movsl
xor
nop
add
andb
jge
mov
adc
add
push
adc
inc
rcrb
pop
lcall
adc
mov
pop
xor
hlt
arpl
movsl
sbb
ds
call
loopne
mov
add
mov
ss
les
cwtl
in
ret
es
mov
adc
pushf
loopne
dec
test
pop
inc
inc
jno
xchg
cmc
sub
or
or
adc
jg
jnp
xor
cs
mov
cmp
fisttpl
add
push
push
mov
lods
cmp
mov
or
mov
jmp
mov
jmp
mov
jle
test
pop
fadds
in
jo
sti
mov
ljmp
pop
add
push
xor
push
adcb
mov
sub
jne
hlt
push
mov
cli
popa
sub
jge
insb
ret
mov
inc
add
mov
inc
jecxz
out
aam
add
leave
push
adc
or
dec
xchg
and
stos
addl
fsubr
call
mov
mov
nop
sub
jnp
or
in
jmp
or
jb
movsb
mov
es
push
popf
xchg
cmp
add
jb
and
xor
cltd
ret
gs
jecxz
sbb
adc
mov
jbe
add
cmp
jnp
std
mov
jno
push
jmp
les
dec
es
lahf
sub
xorb
ss
mov
loop
inc
mov
xor
mov
cltd
mov
fwait
mov
dec
lds
lock
cli
in
ja
in
pop
pop
daa
notl
loopne
and
push
movsb
xchg
pushf
lods
xchg
push
test
lret
stc
scas
cwtl
sub
test
lcall
popa
addr16
fnstcw
lcall
mov
or
insb
push
fwait
adcb
pop
mov
enter
and
pushf
push
push
lret
out
mov
je
fwait
fwait
test
hlt
lcall
adc
or
adc
sbbb
xor
outsl
cmp
repnz
xor
les
cmpb
xlat
hlt
fldcw
lea
pusha
data16
leave
filds
outsb
in
adc
mov
push
popa
inc
xor
out
mov
scas
scas
dec
pop
mov
or
dec
das
mov
push
push
ficomps
and
aas
mov
mov
scas
sub
fbstp
mov
push
loop
shl
fstps
xor
xlat
out
loop
push
insl
adc
adc
addr16
decb
mov
cli
or
sbb
adc
jl
insb
icebp
jecxz
inc
fldenv
stc
xchg
push
arpl
stos
out
aam
sahf
insb
rorl
andl
sbb
mov
xlat
push
jl
jnp
test
xor
mov
ret
movsl
jmp
sbb
cmp
int3
mul
xchg
and
cmp
orl
add
ds
test
outsb
lret
add
loopne
jecxz
pop
shrl
cmpsb
movsb
mov
cli
hlt
call
lock
inc
adc
mov
out
ret
popa
mov
shlb
addl
repnz
sbb
popa
ds
out
push
pop
fs
lea
sbb
pop
in
xor
mov
sbbb
icebp
jnp
xchg
call
movb
pop
das
pop
xor
cmpsb
add
inc
jns
lds
inc
insb
dec
jp
das
aam
call
in
push
fcmovnbe
mov
dec
subl
rorl
xchg
lret
jne
in
das
and
mov
jecxz
mov
xchg
in
cli
cmp
jae
or
bound
inc
and
jns
aaa
mov
imul
cmp
xchg
xlat
push
cmp
sub
add
and
dec
lods
cmp
sub
sub
push
into
jp
mov
dec
dec
xlat
mov
jmp
stos
sahf
enter
lds
lret
jg
mov
jecxz
int
aad
cs
sbb
mov
mov
push
dec
in
push
mov
add
hlt
inc
js
dec
push
in
fidivl
xchg
cmc
lods
les
sbb
daa
andnps
loope
mov
pop
mov
roll
stos
xor
cmp
jg
push
jmp
jle
notb
movsb
iret
adc
pop
and
add
push
out
aaa
sbb
aad
loopne
mov
je
pop
push
fisubrs
loope
mov
xchg
int3
std
sar
pop
jp
xchg
ljmp
dec
or
xlat
adc
cmpsb
cmpsl
mov
lahf
pop
adc
ret
popf
out
pusha
aaa
or
xchg
insl
xor
jb
push
adc
add
pop
pop
xchg
stos
pop
push
shlb
push
cli
in
test
data16
dec
lcall
mov
push
pushf
push
movsb
pop
fdivs
jp
lret
fs
aam
push
adc
jbe
push
add
popf
stc
xor
mov
jg
mov
cmpsb
mov
mov
in
shr
sahf
out
leave
stos
iret
imul
inc
adc
lods
fs
fidivs
dec
lds
dec
lock
mov
cmpsb
fsts
rcr
cld
in
arpl
fadds
nop
sar
fdivs
cmp
pop
add
outsl
cs
repz
clc
dec
push
cmpsl
mov
jle
push
in
dec
mov
das
cli
jge
lahf
mov
push
mov
mov
lret
mov
ret
jecxz
cmpsb
push
mov
ja
adc
xchg
test
mov
jno
loopne
jle
adc
mov
inc
mov
mov
jno
mov
jo
adc
mul
fs
cmp
push
out
inc
dec
rclb
insb
mov
rcll
mov
or
inc
loopne
jbe
jle
or
xlat
mov
das
fs
sub
xchg
jl
mov
pop
out
or
mov
jb
out
jge
fwait
mov
insl
mov
xchg
jmp
pop
cwtl
lret
sub
fs
pushf
out
inc
ss
fstpl
inc
fimuls
mov
js
pop
rcl
pop
sub
ljmp
sub
mov
cmp
call
mov
cmp
fisttpl
test
or
inc
mov
push
outsl
pop
test
lret
add
push
outsl
push
iret
cmp
xchg
mov
arpl
push
inc
mov
call
test
outsl
push
in
dec
add
push
lds
push
sti
jo
sbb
jg
mov
arpl
aad
nop
dec
sbb
jge
repz
xchg
faddl
shll
int
push
add
adcb
and
add
mov
ja
jl
arpl
add
inc
std
jecxz
mov
dec
iret
std
orb
push
call
je
pop
outsb
test
cli
decb
sbb
xchg
sti
hlt
call
fs
cmp
das
pop
lret
clc
add
dec
std
cli
hlt
pushf
imul
inc
add
mov
xor
jp
arpl
jmp
pushf
imul
inc
add
mov
xor
hlt
std
lods
sub
jp
decl
sub
jmp
imul
call
insb
andl
sub
sub
std
cli
adcb
icebp
mov
inc
imul
call
insb
nop
xchg
insl
imull
aam
mov
decl
lods
mov
xchg
pop
dec
les
sbbb
cmp
pushf
inc
sub
or
mov
inc
mov
sbb
aas
jge
adcb
cmc
mov
lods
and
jns
decb
mov
push
hlt
ljmp
arpl
sub
sub
jb
fs
clc
adcb
repz
incb
xorb
push
stc
sbb
addr16
sbb
pop
lock
cmpb
cmp
mov
inc
cli
iret
sbbb
mov
mov
push
loope
clc
jecxz
pop
or
sub
add
xor
shll
incl
jl
pushf
sbb
xchg
fmull
mov
sbb
xor
xor
inc
cmp
test
rcl
and
sbb
sub
movsl
lods
jae
xor
fnstenv
mov
adc
push
ficomps
scas
mov
ret
jecxz
inc
jp
daa
mov
mov
scas
test
add
xor
dec
dec
xor
lahf
lods
xor
imul
lock
sbb
ds
push
data16
arpl
data16
mov
test
adc
adc
loop
jae
add
scas
sub
push
test
ljmp
lahf
out
inc
addr16
lea
mov
pop
xchg
sahf
push
add
call
rcll
cmp
repnz
sub
and
inc
clc
push
pop
pop
cmc
inc
cmpsb
shll
add
xchg
inc
icebp
pop
adc
loopne
lahf
xchg
sbb
arpl
repz
or
out
lret
xorb
cmp
mov
leave
stc
sahf
jne
dec
fwait
or
and
adc
insl
jbe
rclb
out
nop
cmp
cmpsl
jle
jbe
std
and
adc
sub
jge
int3
lods
push
mov
fimuls
push
xchg
xor
icebp
rdpmc
dec
mov
orb
or
add
mov
cmp
scas
hlt
sbb
or
add
int
sub
fistpl
push
mov
and
out
jnp
jbe
fwait
aad
and
pop
loop
fistl
lock
pushf
lcall
decl
or
js
das
mov
ret
cmp
movsb
sub
pop
inc
xchg
jns
jecxz
sbb
scas
fisubrs
hlt
adc
push
jno
icebp
jl
sbb
lret
rcrb
sbb
xor
mov
push
in
add
in
ja
push
test
je
jp
xlat
stos
push
jno
push
orb
inc
clc
mov
mov
inc
call
call
mov
setl
mov
mov
xor
pop
das
sub
nop
mov
push
xchg
adc
adc
sahf
imul
cmp
pop
jmp
mov
setl
aaa
xor
add
xchg
xor
hlt
std
lods
cmp
jbe
decl
sub
jmp
imul
rcl
hlt
outsb
nop
xchg
mov
dec
jg
or
ja
pop
ljmp
movsl
roll
lds
add
adc
ljmp
je
push
ljmp
mov
movl
cli
mov
call
or
je
push
jecxz
fisubl
inc
inc
jno
cmp
push
mov
mov
in
in
hlt
pop
push
jmp
jbe
jl
sbb
dec
add
sub
adc
add
add
adc
dec
add
mov
dec
add
pop
dec
add
orl
fisttps
adc
dec
add
fisttps
adc
dec
add
orl
adc
add
jbe
add
pop
dec
add
fisttps
adc
dec
add
xchg
dec
add
mov
add
loop
add
sbb
add
add
aas
dec
add
bound
loop
add
orb
mov
rorl
loop
add
sub
add
inc
jge
aaa
dec
test
movsb
push
insl
mov
inc
ss
mov
cmpsb
outsb
or
xchg
fimull
in
and
rcll
push
fcomps
xorl
add
addl
add
xchg
enter
xchg
out
jmp
xchg
fnstcw
pop
inc
adc
nop
and
and
sub
and
mov
mov
inc
sub
mov
fstpt
lahf
shll
dec
cmc
xchg
jg
pop
pop
xor
sbbl
pop
push
sbb
push
test
xchg
xor
fnstcw
mov
outsb
xor
fnstsw
addb
dec
inc
sti
xchg
es
test
in
cwtl
xchg
popf
adc
pusha
pop
fists
shrl
or
movsb
inc
shrl
insb
lods
sub
ficomps
and
lret
in
adc
add
jecxz
je
mov
stc
sbb
sub
mov
and
jecxz
mov
xlat
sub
imul
pop
sbb
test
jbe
cs
cmp
push
mov
inc
add
fstl
notl
inc
mov
adc
iret
shr
or
jmp
cs
iret
ret
ja
pop
xchg
or
pop
leave
cmpsb
adc
xor
arpl
cmp
int3
inc
inc
cmp
fcmovbe
xchg
ljmp
jp
jge
push
in
outsl
jmp
jbe
inc
sub
imul
imul
push
xor
push
and
sbb
xor
out
jno
in
pop
movsb
aaa
imul
xlat
fdivs
outsb
jecxz
lret
xor
inc
ret
scas
icebp
repnz
scas
or
cmp
jo
or
sahf
movsl
lahf
insb
cmp
movsb
test
lea
add
mov
xchg
or
xchg
sub
daa
repz
testl
sbb
jae
insb
test
pusha
lcall
out
mov
mov
sub
movsl
enter
push
mov
sahf
frstor
imul
in
idivb
lret
fstpl
test
in
jns
int
push
push
test
repnz
or
or
test
jge
push
pop
cld
test
xor
int3
insl
pop
out
mov
push
mov
add
push
mov
push
sbb
jge,pt
lret
imul
xor
mov
movsl
pop
lret
dec
mov
jmp
movsb
push
mov
or
cmp
loopne
mull
das
dec
push
jg
lock
mov
and
punpckhwd
jo
out
and
add
icebp
jae
cmp
push
or
sti
xor
xchg
push
call
adc
ret
mov
xchg
idiv
cli
mov
push
pop
aas
mov
or
gs
push
inc
push
xor
push
adc
leave
lret
or
or
mov
sbb
push
arpl
dec
add
incl
sub
jle
int
pop
mov
shll
mov
inc
push
mov
and
imull
push
lds
movsl
sbb
mov
call
hlt
mov
xor
sbbb
push
mov
lret
pop
ds
push
into
mov
add
test
cmpb
sti
cmp
sub
push
orb
out
stc
sub
rol
push
push
popa
enter
mov
inc
jns
jae
mov
shrl
ljmp
lcall
mov
jp
adc
mov
rorb
add
mov
lret
int
popf
outsb
cmp
cmc
out
ret
aad
jns
mov
mov
int3
pop
mov
in
xchg
sbb
mov
pusha
mov
addb
insb
push
fnsave
and
mov
movsl
subl
xchg
push
inc
pushf
pop
icebp
mov
and
jg
nop
in
pop
imul
call
sub
cli
inc
bt
rcrb
outsb
stos
pop
or
mov
imul
sarb
inc
jno
xor
adc
adc
lahf
xor
pop
gs
int
pop
stc
loope
sub
fs
lret
sarl
jae
divb
mov
ret
or
outsl
outsb
sub
pop
xchg
cmpl
add
mov
sub
stos
popf
mov
add
dec
inc
repnz
int
cld
push
fcomps
pop
xor
jb
imul
push
aam
mov
adc
je
mov
fidivl
imull
push
in
and
mov
decb
shll
aam
jg
push
test
xchg
push
adc
jmp
mov
jg
cmp
fucom
sbb
adc
sbb
mov
out
sbb
or
pop
or
stos
inc
xor
leave
dec
sub
or
mov
incl
flds
scas
pushf
jp
out
rcrb
andb
push
bound
bound
mov
xor
jp
pop
pop
adc
fcompl
or
cmp
pop
push
xchg
xchg
pop
and
in
xor
pop
adc
inc
es
sahf
add
inc
push
jne
mov
mov
filds
mov
and
stos
sbb
sub
pusha
rolb
clc
bound
dec
ljmp
addl
add
jo
jmp
inc
mov
icebp
subb
js
out
mov
and
inc
sbb
or
iret
stos
mov
fistl
gs
ret
imul
fwait
pop
leave
mov
pop
add
mov
pop
inc
mov
or
lds
jno
fldenv
jne
shrl
pop
mov
cwtl
outsb
cmp
test
iret
stos
xchg
sub
add
inc
adcb
or
and
js
add
test
ret
and
or
test
jle
adcb
test
jnp
mov
outsl
pop
cmp
loope
mov
sbb
hlt
xchg
out
and
cmc
mov
xchg
cmovo
inc
movsl
xchg
jg
sbb
jne
mov
das
and
jne
push
dec
ud0
inc
xchg
dec
adc
mov
lds
cmc
cmp
arpl
or
rcr
or
mov
into
push
jle
in
pop
mov
mov
push
jecxz
aad
inc
repz
pushf
ret
clc
lcall
dec
push
ret
arpl
mov
data16
hlt
jmp
mov
sarb
das
pop
lds
into
jne
cli
jle
js
add
sub
out
fwait
pop
and
icebp
sub
xor
pushl
push
in
sub
cmc
lock
shrl
inc
push
mov
dec
pop
xor
inc
or
movswl
push
jecxz
xchg
pop
mov
dec
jo
jmp
fs
pushf
cmp
sub
push
imul
dec
xchg
push
push
fbstp
jg
cmc
jne
mov
pop
incl
adc
insl
xor
inc
pop
or
ljmp
sbb
mov
in
pop
test
cmp
jb
push
mov
in
inc
pop
into
and
test
mov
or
cmp
sub
aas
and
test
sbb
je
mov
lcall
inc
mov
fists
pusha
dec
icebp
insl
add
mov
or
pop
aaa
push
push
clc
pop
mov
mov
inc
ret
ds
pop
xchg
or
xor
lahf
movsl
dec
hlt
sbb
and
add
xlat
lock
cmpsb
or
loop
jno
cmp
adc
adc
mov
js
sahf
push
fs
jp
aad
cmpl
jle
es
pusha
loopne
outsl
out
jb
aaa
aad
lea
adc
jmp
repz
lret
ficoml
cmp
mov
push
add
dec
pop
add
shrl
push
mov
lods
and
clc
sbb
sti
mov
out
jno
and
repz
movsb
popf
in
addr16
movsl
or
in
cs
pop
push
dec
push
fidivrl
mov
add
stc
pop
insb
mov
sahf
jecxz
cwtl
xchg
sbb
inc
fsubr
lcall
sbb
add
cli
stos
or
lret
sahf
rcr
leave
enter
fs
push
movsl
neg
and
cmp
jne
xor
pop
jne
inc
cli
in
insl
insl
push
popa
jecxz
xchg
jge
cs
int
in
jae
repz
imul
adc
ss
push
ror
lahf
mov
insb
ret
cmpsl
and
lods
push
jp
fwait
dec
xchg
mov
jne
hlt
push
lods
pop
addr16
inc
js,pt
jg
mov
das
mov
adc
leave
sub
xchg
sbb
hlt
mov
mov
addr16
movsb
jne
mov
add
push
popa
outsl
rorb
outsl
scas
das
movsl
sub
pcmpgtd
lcall
insb
aas
into
das
cmp
xchg
mov
mov
test
dec
push
dec
add
lock
and
or
xor
mov
and
lret
dec
add
mov
in
clc
mov
dec
or
mov
xchg
sarl
mov
add
xchg
scas
fidivs
add
loop
rorl
imull
pop
and
add
add
inc
movl
fnstcw
mov
vmovsd
mov
cmc
fimull
insb
sbb
jge
jecxz
les
xchg
mov
ljmp
xor
dec
cmpsl
jae
lret
cmc
call
mov
pop
inc
inc
add
mov
hlt
pop
inc
inc
aaa
mov
cmp
sbb
mov
add
dec
mov
inc
or
mov
cmp
sti
imul
call
outsb
mov
pop
lret
rolb
push
cli
jle
cmpsb
pop
mov
imul
call
outsb
mov
pop
ret
jg
mov
mov
cmpsb
pop
mov
or
jecxz
ret
mov
xchg
mov
inc
addb
mov
in
jmp
xor
cli
jle
movsl
sub
rorb
or
je
mov
idivl
in
stos
pop
cs
shll
add
cltd
pop
das
and
jge
mov
jg
aaa
mov
loopne
push
lock
cwtl
inc
shll
cmc
rcl
aad
add
adc
cmc
sbb
push
jp
clc
loope
sub
shrl
dec
pusha
sub
repnz
pop
dec
notb
std
jbe
mov
mov
or
mov
shrb
imul
fimuls
mov
icebp
in
aad
mov
mov
subl
adcl
dec
arpl
cmc
testb
lock
inc
int3
cli
je
mov
cmpsl
cmp
xchg
cmp
pop
adc
push
xlat
cmp
adc
mov
jns
dec
inc
icebp
mov
sub
es
in
pop
or
sub
cmp
push
mov
subb
inc
adc
movsl
movsl
ficomps
add
and
mov
xchg
add
fs
adc
sbb
xor
mov
insl
in
sub
push
jne
dec
stos
nop
adc
adc
sbb
shll
scas
cs
cmc
mov
mov
flds
scas
mov
mov
mov
pushf
xlat
inc
js
outsl
stos
imul
aad
adc
jmp
lods
jmp
jo
insl
dec
lea
add
cltd
cmpsb
mov
es
mov
adc
push
or
adc
xor
inc
mov
sbb
cmc
in
inc
pop
jbe
inc
or
push
in
push
push
pop
dec
cmc
repz
outsb
xchg
pop
inc
pop
fistpl
cmp
xchg
outsb
sub
movsb
mov
and
imul
inc
pop
mov
jge
xchg
sbb
int3
dec
or
fdiv
std
push
push
pop
mov
es
imul
loop
ret
arpl
xchg
add
adc
jnp
lcall
xchg
sbbb
mov
test
lods
dec
call
sub
xor
xor
mov
aas
dec
rcrb
xor
push
clc
cmp
xor
and
adc
int
rcrb
xchg
xchg
sub
or
pop
xlat
int
pusha
arpl
decb
mov
stos
and
rclb
test
and
and
lods
cmp
dec
jno
loopne
in
add
lcall
nop
gs
loope
dec
cmpsl
addr16
stos
pop
ljmp
jb
mov
lds
push
outsl
mov
cmp
roll
addr16
stos
jns
pushf
fbstp
subb
push
and
cmp
ljmp
jmp
lds
loopne
in
mov
jmp
std
ds
stc
aam
movsl
imul
sub
fwait
jnp
lds
jmp
movsb
adc
stc
or
call
cmp
sub
mov
jge
mov
imul
insb
add
mov
cmp
jg
mov
lret
sbb
sbb
cli
dec
cld
jmp
mov
adc
mov
adc
jne
xchg
mov
lahf
nopl
jecxz
enter
adc
or
lahf
cli
pop
in
in
and
mov
rolb
or
dec
jo
xor
into
popf
cmp
and
lods
inc
aad
in
push
push
mov
stos
sahf
jnp
or
roll
jg
sbb
jmp
loopne
or
mov
loopne
jmp
movsl
cmp
push
pop
inc
movsl
and
mov
add
push
cmp
or
mov
fistpl
sub
hlt
fadd
add
arpl
ja
hlt
pop
xlat
mov
inc
mov
mov
cli
dec
out
les
ss
negb
and
addl
repnz
jnp
jne
cmpsl
cwtl
in
mov
imul
dec
daa
add
arpl
loope
test
add
adc
mov
aas
jno
cmp
adc
and
rorb
js
adc
inc
xchg
pop
xchg
add
xchg
xor
dec
inc
mov
orb
pop
test
lds
add
cmp
cwtl
je
adc
popa
mov
cld
mov
adc
and
mov
mov
mov
push
dec
call
dec
movd
decl
in
clc
movsl
imul
in
mov
daa
mov
push
jns
xor
xor
cli
cmp
add
iret
dec
pop
test
subb
leave
sbb
mov
lock
leave
imul
mov
mov
dec
mov
adc
sub
test
pop
lcall
cmp
sbbb
xor
pop
jbe
and
cltd
adc
xchg
in
jae
aad
push
sub
cmpsb
outsb
cmpsw
lods
xor
repz
cwtl
cmpsl
bound
shrl
aam
xchg
adc
mov
movsb
mov
mov
push
jae
mov
dec
sub
pop
call
les
lahf
jb
fisubl
pcmpeqw
into
aas
in
test
lret
jbe
cmp
dec
dec
cmc
and
mov
mov
push
sbb
lea
sti
lahf
icebp
cld
addb
dec
mov
and
sbb
popa
inc
scas
add
lret
int3
mov
cmp
inc
call
mov
stos
push
lea
push
sahf
fcompl
mov
and
ljmp
mov
cltd
mov
mov
xor
lret
mov
pushf
or
xor
mov
sbb
test
fsubrp
testb
or
cmp
push
ja
and
out
in
cwtl
inc
inc
xchg
pushf
cmp
jns
outsb
inc
into
sub
add
in
pop
xchg
rorl
icebp
and
xchg
xchg
mov
fwait
inc
jmp
out
shll
xchg
mov
repnz
jnp
andl
push
jmp
lea
cs
push
adc
fcomps
inc
inc
movl
add
xor
scas
pop
push
adc
sbb
and
fxtract
orl
push
fildll
jmp
dec
add
jae
push
les
popa
shrb
jne
mov
aam
aad
cmc
mov
lock
mov
cmpsb
in
dec
jle
sti
decl
icebp
add
adc
insl
lods
addb
dec
pop
adc
insb
and
push
lret
jns
maxps
ficomps
out
and
in
ljmp
sbb
cwtl
add
push
add
stc
test
xchg
xlat
cmovo
inc
mov
mov
pop
mov
add
mov
cmp
ss
mov
orl
icebp
mov
jbe
pop
outsl
sahf
and
out
ror
das
add
iret
inc
or
sbb
in
xchg
arpl
sub
jg
and
push
lret
pushf
push
cs
mov
mov
pushf
jmp
adc
inc
sti
hlt
call
outsb
mov
test
call
mov
pop
xor
fadd
pop
pushf
fbstp
pop
jl
pop
out
or
pop
ret
cli
pushf
imul
or
lahf
outsl
pop
cmp
iret
cmpsl
inc
jno
enter
mov
call
jns
pop
or
loope
fldl
push
sahf
xlat
sub
mov
add
adc
push
push
pop
sahf
push
push
xor
jns
dec
xchg
bnd
mov
sub
loopne
add
lahf
fs
enter
add
xor
sbb
jecxz
push
rol
push
or
push
mov
sti
and
lea
mov
repnz
sub
jne
mov
jb
adc
sbb
push
pop
imul
mov
test
xlat
jecxz
pop
pop
or
fsub
inc
jl
dec
shrl
cmpsl
sti
mov
inc
mov
mov
push
fs
push
dec
pop
aas
cmpsb
pop
fstps
mov
out
jae
pop
lods
pop
adc
sub
dec
lods
mov
or
dec
dec
ret
mov
mov
stos
inc
push
sub
jb
cmc
mov
xchg
push
fldcw
ficompl
test
insb
pop
add
int3
inc
adc
test
loop
dec
jmp
sbb
mov
jl
add
adc
jle
push
pop
pop
int3
xchg
int3
sbb
adc
push
sbb
and
call
outsb
mov
lds
xor
jl
adc
mov
inc
add
adc
out
dec
pop
fnstsw
xorb
sbb
xor
jb
stc
mov
push
dec
icebp
inc
outsb
fsubp
jmp
repnz
fcmovu
cmp
imul
shll
mov
xor
push
sbb
lock
or
imul
rorl
dec
cli
mov
or
and
jle
push
fstpl
push
xchg
fdivl
lods
xor
inc
cmp
aam
in
stos
adc
xchg
xor
jecxz
sti
mov
pop
pusha
adc
mov
mov
hlt
stos
orb
or
sbb
int
movsl
cltd
js
cmpsl
adcb
mov
cli
lods
popa
xor
std
add
cmpsl
mov
push
cli
cmp
rcrl
pop
sahf
iret
scas
add
ljmp
dec
sub
jecxz
sbbw
bound
mov
cmc
in
inc
cmp
fcom
andl
cmc
cwtl
int
jno
icebp
lds
push
aas
mov
and
cmp
stc
filds
std
dec
add
adc
pop
cmovle
rclb
or
lea
xlat
stos
mov
mov
jnp
imul
mov
in
pop
lret
pop
je
pushf
loope
jge
nopl
cli
hlt
or
add
aas
pushf
scas
cs
mov
std
push
int3
sub
push
aas
lock
or
xchg
mov
push
add
imul
mov
sbb
push
sbb
sub
sbb
cmp
adcl
push
add
mov
les
pop
call
out
sahf
jne
sbb
das
and
push
pop
pushf
loope
push
or
pop
dec
int3
or
int3
jnp
sub
les
dec
call
or
movsb
sbb
or
cld
sub
psubsb
mov
add
pop
mov
lcall
int
mov
cmpsl
sbb
cmp
in
add
pop
push
sbb
xchg
xchg
xchg
mov
mov
repz
mov
ret
in
sahf
bound
mov
mov
push
gs
or
sub
add
repnz
jg
jb
mov
ret
addb
lea
xchg
cmp
loope
xlat
dec
or
jmp
inc
movb
push
bound
out
cmp
sbb
inc
jle
sub
insb
std
clc
jl
movsb
sbb
push
aam
sahf
mov
arpl
add
xchg
sub
dec
cli
dec
je
xor
in
xchg
fisubrs
push
in
cwtl
loope
fidivl
scas
pop
add
jecxz
hlt
icebp
lcall
mov
pop
add
adc
sub
scas
xchg
cmp
jmp
inc
dec
push
mov
pop
out
sbb
sbb
dec
xor
add
loopne
scas
imul
xchg
sbb
xor
out
out
mov
clc
sbb
jnp
cld
adc
sbb
pop
push
cmp
mov
fcomps
mov
fcoms
fwait
popa
loopne
shll
add
mov
jbe
adc
clc
push
mov
fsubrl
es
nop
push
popa
cmp
rcrb
push
push
add
mov
inc
lea
add
adc
mov
rclb
cld
gs
pop
adc
inc
fcomps
pop
adc
and
sahf
or
fstpl
mov
scas
xchg
xchg
or
fmuls
pop
lahf
out
sahf
sar
movsl
jg
call
mov
sbb
add
or
sbb
dec
pop
sub
lahf
rcrl
pusha
fs
adc
inc
fs
loopne
dec
xchg
in
lret
roll
push
mov
sar
loop
push
ret
ja
and
or
cli
data16
fcoml
jno
sbb
xchg
xchg
nop
jmp
xchg
push
mov
and
loopne
cmp
jno,pt
int
jp
pop
push
xchg
rcpps
cmp
push
jg
sub
inc
rcrl
pop
adc
or
ret
xor
mov
xor
jge
mov
push
adc
xor
xor
out
dec
pop
adc
mov
inc
fsts
sbb
arpl
mov
inc
push
ret
pushf
cmp
js
shlb
scas
push
mov
rolb
insb
test
dec
ljmp
inc
mov
and
cs
cmp
popa
and
outsb
dec
scas
mov
lret
push
adc
mov
dec
into
aas
jae
xor
cmpb
push
repnz
cmp
mov
aas
mov
test
jne
rorl
orl
ficomps
xor
mov
pushl
ljmp
insb
cmp
xchg
or
pop
call
divl
call
dec
push
jle
incl
xchg
test
push
adc
dec
out
or
lahf
out
loopne
je
pop
push
leave
cmc
lock
lds
sub
adc
ss
or
dec
mov
jne
add
das
sub
std
add
pop
shll
fsubs
test
jecxz
pop
mov
push
cld
sub
add
rolb
inc
movsb
scas
xor
fmuls
inc
and
hlt
lcall
bound
loopne
decl
jge
mov
push
adc
add
pop
call
dec
test
xchg
push
mov
add
inc
xchg
imul
and
shlb
add
mov
sbb
loopne
aam
cli
sahf
pop
lods
cmp
sbb
adc
push
into
jmp
movsb
adc
xchg
imul
out
add
add
adc
jmp
shlb
add
movsb
jo
pop
adc
repz
jb
xchg
mov
arpl
mov
mov
jle
or
loope
fisubrl
jg
push
ss
inc
xor
mov
mov
cld
push
arpl
sarl
test
or
lock
xchg
mov
cmp
pop
mov
pop
mov
mov
sbb
mov
dec
or
adcb
jle
idivb
jecxz
pop
pop
mov
adc
or
mov
setnp
daa
add
mov
test
popf
push
sbb
and
jge
lret
pop
add
pushf
ljmp
gs
sub
daa
cmp
shlb
pop
adc
xor
push
pop
in
cmp
in
movsl
rol
mov
jl
stos
mov
pop
gs
in
iret
test
add
jns
enter
loope
addr16
aad
push
sub
fildl
pop
mov
or
dec
sbb
out
repz
sub
adc
push
add
pop
sub
pop
shrl
xchg
push
pop
xchg
pop
push
cmp
jb
cs
scas
xchg
les
cmp
jmp
sbb
pop
adc
pop
and
stos
pushf
out
or
push
adcb
pop
adc
xor
mov
mov
mov
call
jl
in
pop
sub
push
pop
lea
jo
lcall
loope
lods
or
repz
sbb
jle
clc
inc
cmp
ret
sbb
cmp
jle
cmp
ja
ja
dec
pop
out
pop
icebp
xor
shlb
push
cs
lea
jecxz
adc
sbb
lahf
push
ret
in
vrsqrtss
pop
dec
fstps
int
ficomps
add
adc
mov
pop
pop
lds
pop
adc
jecxz
inc
call
mov
repnz
xchg
das
in
dec
ror
jg
lea
mov
and
mov
mov
push
iret
jae
lea
jb
adc
adc
cmpb
icebp
dec
iret
inc
add
pop
jo
out
add
mov
mov
mov
push
dec
pop
mov
lcall
sub
push
test
imul
nop
loope
movsl
and
jle
into
or
or
xor
addb
push
and
test
cs
ljmp
sbb
bound
mov
mov
add
add
cmp
lea
add
mov
popf
mov
lds
ljmp
pop
push
pop
fstpt
mov
imul
rorl
mov
ljmp
sbb
pop
cmp
mov
pop
xor
inc
mov
cli
jg
movsb
fldt
nop
pop
mov
call
outsb
dec
add
mov
movsb
stos
lret
lds
cmp
add
std
push
push
jge,pt
xchg
mov
inc
sbb
sbb
add
test
std
cli
js
mov
pop
sub
movsl
lea
xor
mov
leave
lds
lea
jmp
xchg
pop
xchg
js
xor
lahf
xor
lods
jne
pop
mov
std
cli
xchg
movsl
cmp
aad
xor
movsl
xor
mov
std
cli
xor
and
das
jns
loopne
pop
xchg
cmc
call
pop
int
ret
xchg
test
push
int
add
mov
sub
cltd
or
jg
jp
arpl
ja
shll
decl
mov
push
and
xor
jo
sti
cmp
addb
hlt
jge
test
cli
xlat
jle
enter
sar
mov
xor
sub
cld
or
inc
add
mov
iret
repnz
nop
lock
and
xor
jecxz
bnd
mov
pop
pop
xchg
call
mov
inc
pop
ret
cmp
repnz
jnp
rclb
dec
push
pushf
push
inc
xchg
dec
xor
in
sahf
out
repz
loop
pslld
push
out
incl
in
jae
xchg
push
cmp
and
push
ret
xorb
mov
jmp
mov
arpl
pop
xchg
pop
pop
pop
pop
fmul
sub
jge
mov
sahf
dec
pop
sbb
cmp
test
dec
shrb
xor
icebp
dec
mov
ret
dec
pusha
adc
clc
outsb
dec
inc
addl
or
xchg
xlat
push
xchg
cmp
movsb
test
out
lret
gs
das
pop
xor
pop
add
les
xchg
ficomps
sub
sub
addl
enter
orb
dec
pop
shl
and
imulb
sub
lods
mov
mov
mov
pop
xor
jns
push
jl
lahf
mov
adc
mov
mov
lret
jo
vcvttsd2si
fldl
repz
stc
pop
fs
xchg
lcall
lods
and
xchg
mov
sahf
nop
call
arpl
push
adc
xor
dec
pop
adc
ffree
mov
mov
into
jl
xchg
iret
dec
jns
xchg
insl
in
rclb
out
or
stos
fsubrl
ljmp
adc
cmp
fxam
test
hlt
pusha
xor
hlt
sbb
cmp
test
das
rorb
cs
dec
pop
repnz
adc
fbstp
ja
pop
or
add
lahf
push
xor
or
jecxz
mov
arpl
movsb
test
nop
mov
push
ret
xor
fwait
lds
mov
jne
sbb
inc
sbb
das
iret
out
rcll
iret
cmp
push
repz
fistps
in
cs
mov
add
mov
mov
adc
add
lret
push
inc
movl
inc
inc
mov
shll
js
gs
imul
pop
xchg
icebp
shlb
push
insb
push
pop
cs
inc
push
outsl
xor
stos
mov
cld
ja
jecxz
dec
pop
mov
or
mov
es
xor
mov
sti
mov
mov
push
ds
fs
aad
jo
aas
stos
pop
pop
xchg
sub
adc
lds
lds
add
mov
jle
in
imul
push
rcrb
mov
dec
sub
sbbl
jb
pop
xor
push
hlt
bound
mov
xchg
xor
js
xchg
add
imul
mov
cmp
jle
inc
negl
xor
js
ror
inc
push
outsb
hlt
dec
jle
gs
aas
xchg
push
call
outsb
mov
imulb
popl
inc
sub
jmp
sbb
push
shl
out
les
or
sbbb
outsb
daa
lock
fcompl
aad
pop
out
and
aaa
jne
lcall
xor
jmp
dec
xchg
aas
hlt
mov
movsl
lods
inc
pop
ret
ficoml
cmc
push
jmp
call
pusha
loope
pop
lret
jl
movsb
in
pop
andb
lahf
mov
mov
jo
and
dec
mov
mov
repnz
sbb
testb
pop
push
shll
mov
sub
jmp
inc
mov
data16
clc
push
dec
jbe
mov
jno,pt
test
or
push
mov
je
mov
add
dec
scas
sbb
into
adcb
dec
mov
sti
loope
push
jecxz
stos
shll
stos
mov
andl
idivb
xor
ret
scas
lahf
push
pushf
push
pop
xchg
inc
cmp
int
nop
addr16
mov
xchg
and
jmp
or
sub
shll
or
into
mov
sbb
lret
nop
das
push
dec
mov
jns
ficomps
add
and
sbb
cmp
rcrb
sub
or
push
xor
adc
sub
sbb
pop
dec
dec
cmp
out
or
push
pushf
pop
dec
inc
subl
adc
jae
imul
jle
dec
fstl
iret
add
sbb
cmp
adc
jmp
dec
test
push
mov
push
mov
gs
jne
int3
js
pop
xchg
icebp
dec
mov
pop
pushf
cmp
cmp
dec
cmpsl
sub
shlb
dec
mov
and
push
es
cmp
adc
lock
in
pop
inc
mov
inc
imul
mov
xor
xor
push
aam
jbe
pop
dec
cmp
andb
out
jns
out
jo
pop
or
dec
inc
mov
pushl
jae
mov
mov
mov
enter
lahf
pop
icebp
mov
int
xor
in
adc
lret
push
pop
pop
stos
cltd
xor
jns
lods
aad
sbb
scas
mov
jle
add
xor
ds
shl
pop
mov
adc
call
lock
lods
out
test
pushf
divl
adc
sbb
mov
inc
fidivrs
mov
xchg
xchg
pushf
or
pop
dec
cwtl
mov
mov
sahf
mov
loope
push
loop
push
adc
mov
roll
push
push
cmc
sub
inc
pop
mov
jnp
inc
jne
adc
dec
in
pop
pop
es
lahf
ja
and
lock
pop
fidivrl
fcoml
push
jl
pop
mov
add
cmp
mov
inc
in
or
ret
arpl
sahf
imul
test
jnp
push
adc
add
andb
mov
jne
je
push
in
xchg
movsl
cmc
std
cli
xchg
jns
xchg
addl
mov
orb
add
pop
pop
mov
jo
jp
stos
test
add
jnp
out
push
add
adc
fcompl
addb
push
push
mov
inc
cmpsb
sub
int3
inc
jge
dec
jmp
pop
mov
cmc
pushf
jae
pop
mov
add
in
dec
mov
addb
bound
fdivl
sub
and
dec
inc
pop
jns
outsb
xchg
addl
mov
jne
je
push
in
xchg
ds
std
cli
xchg
mov
test
pop
dec
int3
pop
jecxz
shlb
jne
mov
das
sub
cld
std
cli
xchg
cwtl
stc
test
or
cli
hlt
jge
ss
dec
mov
jl
mov
ljmp
mov
push
pop
cs
mov
lret
stc
data16
inc
add
dec
jne
adc
lret
xchg
mov
add
inc
mov
cltd
fs
lock
pop
mov
stos
push
call
icebp
insl
popl
push
adc
clc
movsl
mov
ljmp
mov
jl
pusha
adc
in
ja
cli
ljmp
rclb
inc
jl
call
ljmp
jbe
xor
aaa
clc
mov
pop
push
fcoms
push
adc
inc
or
imul
rcl
adc
adc
popa
push
test
dec
jb
sub
push
adc
test
dec
jge
sbb
mov
push
sbb
dec
xchg
push
sub
in
es
loope
dec
mov
les
sbb
sbb
sub
pop
and
push
fisubrl
ja
and
adc
cmp
imul
jo
inc
cmp
mov
mov
jo
pop
adc
push
rcrb
pop
lods
loope
lods
mov
fs
lahf
jmp
lock
xor
movsl
aad
fs
loopne
add
xchg
push
das
in
arpl
fcoms
push
mov
jmp
cmpsl
jmp
mov
jle
push
shrl
xor
and
ds
hlt
mov
xchg
xlat
cmp
out
gs
and
xor
mov
shlb
repz
sub
mov
sbb
mov
scas
mov
adc
adcb
int3
mov
dec
inc
pop
jmp
add
adc
jae
xor
les
jae
repnz
adc
imul
fistpl
mov
lret
call
adcb
sub
push
mov
and
dec
sbb
adc
adc
aam
pop
leave
icebp
fsub
jp
hlt
adc
inc
pop
adc
inc
fcompl
mov
ds
aam
pop
adc
adc
rcrl
jmp
ds
fadds
faddl
jb
jmp
aam
pop
adc
xor
data16
dec
inc
inc
jle
cwtl
dec
faddl
aam
inc
pop
adc
inc
pop
adc
inc
into
sbb
jecxz
sahf
pushf
lods
cmpl
pop
adc
divl
pop
sub
mov
cmp
in
pop
fcomps
mov
loopne
adc
jno
adc
les
push
adc
mov
lds
aad
dec
lods
xchg
mov
jne
aam
mov
lret
lods
xchg
dec
adc
std
mov
and
fstpl
push
adc
mov
adc
adc
push
jl
repz
push
jo
pop
adc
mov
or
addr16
push
mov
popl
ffreep
shll
dec
lds
or
mov
mov
adc
lds
fcomp
loope
sbb
lea
cs
xlat
xchg
jg
add
lds
xchg
leave
jo
jmp
mov
inc
addb
pop
mov
push
adc
and
es
or
push
addr16
xor
push
jb
addb
test
hlt
call
es
rclb
or
pop
mov
sarb
adc
inc
addb
mov
xlat
and
es
jge,pt
adc
push
adc
cmp
cmp
push
xchg
mov
push
cli
hlt
inc
mov
xor
mov
mov
pop
mov
jns
adc
jmp
scas
nopl
popa
fucomp
rcl
and
xor
bound
mov
push
adc
stos
dec
mov
test
cli
inc
jo
pushf
stos
sub
mov
inc
sbb
pop
das
data16
incb
push
xchg
mov
mov
mov
mov
shlb
adc
adc
mov
pmaddwd
adc
adc
sub
mov
push
xor
jmp
mov
dec
ss
daa
test
jns
mov
int3
pushf
cmp
xor
pop
adc
sbb
adc
adc
imul
imul
and
test
lret
mov
addl
mov
icebp
inc
inc
dec
mov
cmp
fisubrl
adc
mov
or
or
cld
sbb
xchg
nop
sbb
adc
mov
loope
cmp
push
popf
out
fwait
xchg
push
and
xorl
inc
aam
sub
inc
rolb
outsl
jno
inc
lret
rcr
shrl
aam
movsl
push
jmp
test
out
cmpsb
imul
sahf
jp
pop
pop
or
sbb
cld
jno
lret
pusha
daa
data16
pop
lods
icebp
ret
fidivs
mov
xor
jbe
adc
fnstsw
ljmp
xor
sti
inc
rcll
insl
push
inc
ss
and
xor
cltd
cmpl
xor
aaa
cmp
out
subl
sarl
cmp
loope
inc
cmp
xor
add
lcall
adc
dec
pop
pop
dec
fidivl
inc
push
lret
sub
cmpsl
push
stos
push
popf
jmp
loopne
out
in
xorb
daa
stos
mov
pop
stos
mov
clc
notl
in
decb
jecxz
es
adc
clc
daa
cmc
mov
rcrb
enter
push
sbb
pop
pop
ss
mov
xor
mov
mov
dec
loop
fcoms
or
mov
adc
mov
mov
push
adc
mov
jmp
mov
or
scas
rorl
cltd
das
scas
inc
int
and
stos
push
jp
dec
shlb
mov
push
or
add
mov
pop
scas
hlt
add
mov
sub
pusha
jp
adc
es
pop
sub
int
mov
mov
xor
mov
inc
test
push
pop
xchg
or
fldl
test
imul
lret
pop
xchg
mov
call
lret
cmpsb
cli
push
add
sub
daa
scas
push
mov
repz
pop
shrb
pop
insb
push
mov
rolb
enter
lret
or
js
jecxz
dec
sbb
fistpll
add
mov
push
adc
das
mov
out
sub
bound
mov
push
imul
pop
mov
cli
shl
call
push
adc
cli
add
pushl
cmp
inc
or
mov
pop
pop
fucomp
rorl
and
pop
fcoms
inc
adc
adc
dec
aam
jns
adc
jae
shll
push
adc
jg
adc
pushf
bound
cmp
loopne
call
stos
dec
jne
mov
orl
icebp
mov
leave
frstor
sbb
pop
mov
popa
pushf
enter
dec
ret
mov
cmp
or
xchg
pop
adc
xchg
add
out
add
pop
movsb
sub
arpl
or
shrl
mov
xor
mov
add
dec
das
pop
cmp
add
pop
jge
hlt
cmpsl
and
rorb
dec
sti
ljmp
insl
inc
jbe
adc
icebp
lods
sbb
je
or
lods
cwtl
mov
daa
mov
cs
mov
add
push
adc
jne
cli
hlt
inc
mov
es
imulb
xlat
test
ljmp
jns
out
cmp
adc
or
in
sbb
jp
adc
push
ljmp
mov
or
adc
or
jbe
adc
add
xchg
or
pop
mov
xor
icebp
jecxz
test
lock
adc
fildl
jmp
movl
imul
jl
jne
popf
mov
mov
bound
jg
es
adc
sub
nop
ljmp
jg
jbe
adc
inc
or
xchg
pop
push
xlat
fstps
cmp
cmpsl
hlt
adc
adc
fucomip
cmpsb
mov
xor
inc
push
pusha
daa
rcl
pop
fs
repnz
mov
add
dec
dec
cld
lea
lods
es
adc
in
popa
std
mov
inc
jmp
and
push
adc
sti
mov
movsb
outsb
lods
insl
inc
or
dec
jmp
xor
rclb
xchg
into
in
scas
xchg
or
add
push
test
sbb
mov
mov
cmc
int3
mov
pushf
or
push
adc
pop
insb
adc
pop
mov
adc
adc
mov
mov
ja
sahf
je
inc
push
jae
sbb
imul
adc
adc
popa
rolb
jno
sbb
sub
inc
xor
dec
add
lret
les
push
adc
ret
lods
fisttpll
in
xor
dec
and
loopne
pop
lods
and
int
ds
adc
rep
rolb
jae
adc
jmp
and
dec
jmp
gs
cmc
test
mov
fcmovnu
xchg
jp
pop
arpl
scas
repnz
es
adc
fs
sub
sub
mov
mov
dec
push
fnstcw
loop
lock
fwait
int3
hlt
shl
pushf
xor
dec
cld
xchg
xchg
xchg
xchg
push
ja
adc
in
push
cmp
xchg
and
ss
push
fmuls
fcmovnb
decl
push
out
cmpsb
fdivrs
lret
inc
dec
mov
mov
dec
mov
push
mov
shl
sbb
xor
or
lret
push
shlb
mov
push
adc
jl
xchg
xchg
pop
pusha
jp
out
or
ja
push
or
jg
cmp
rep
dec
push
or
mov
mov
sub
mov
adc
or
or
jge,pt
xchg
in
shll
pop
mov
pop
push
fs
add
je
les
push
shr
and
nopl
sbb
or
les
push
adc
aad
or
call
sbb
sti
das
lcall
arpl
jg
in
xchg
jne
mov
add
pushl
xchg
aas
aad
mov
fldl
jnp
xchg
jmp
push
adc
jecxz
call
jnp
jge
push
xchg
sar
inc
out
adc
add
push
ljmp
inc
xchg
mov
iret
shl
jne
cmpsl
inc
lock
lea
arpl
rolb
adc
adc
icebp
call
sbb
lret
gs
stos
int
aam
movl
inc
xchg
inc
jl
jle
movsl
sbb
dec
movsb
fwait
shrl
add
add
adc
adc
mov
mov
pop
pop
xor
aas
imul
ljmp
inc
mov
adc
push
adc
xor
fwait
push
call
push
scas
adc
cwtl
sbb
mov
sub
arpl
sub
hlt
mov
nop
jl
clc
adc
adc
sbb
lahf
hlt
mov
adc
popa
das
mov
lock
adc
or
lcall
shl
push
aad
add
push
adc
aas
in
adc
adc
cmpsl
mov
push
push
je
out
lds
outsb
xchg
adc
pop
add
xor
xor
cmp
out
mov
inc
mov
sbb
pop
sbb
cmpsl
and
adc
in
xchg
pop
dec
psubb
ds
jnp
xlat
sbb
and
ljmp
shll
dec
je
sahf
and
das
mov
ret
addr16
out
pop
pop
push
movb
push
adc
clts
hlt
leave
popa
jo
lods
lods
sti
enter
hlt
xor
sarl
add
push
div
mov
das
outsl
lock
lods
lret
add
es
add
pop
into
lret
jp
stc
fldcw
adc
pop
adc
add
sbb
pusha
mov
mov
push
pop
xchg
outsb
pop
xchg
insb
inc
sbbl
in
pop
popf
sbb
test
lock
rclb
pop
popf
cmp
dec
dec
mov
cs
ja
xorl
enter
gs
jbe
adc
add
lock
dec
ja
mov
pushf
cmp
std
pop
insb
push
cmpsl
sub
inc
jmp
addr16
bound
loop
out
lcall
sbb
jne
mov
sahf
dec
clc
int
int3
dec
xchg
out
pop
or
cmpsl
pop
and
cmpl
lock
xor
xchg
in
nop
cltd
rdpmc
int3
movsb
sbb
sarb
mov
jbe
adc
lods
jp
rcrb
lret
push
xchg
add
pop
test
mov
in
test
test
pop
movsl
lds
dec
pusha
adc
cmp
pop
xor
cli
adc
bound
add
mov
imul
xchg
enter
test
pop
enter
rorl
rorb
mov
data16
fcmovne
inc
cmp
push
cli
ss
adc
andl
lea
pop
pop
cld
fisttpll
loope
fstps
and
hlt
loopne
cmpsl
mov
push
xchg
pop
adc
aas
dec
mov
aam
push
adc
jle
adc
adc
jae
mov
repnz
push
push
jae
fisubrl
mov
cs
neg
out
sahf
and
out
ror
das
add
inc
or
mov
out
hlt
js
arpl
xlat
cld
jg
push
into
insb
and
push
dec
add
add
add
mov
sar
lcall
rcll
je
ror
mov
pop
adc
add
adc
adc
popf
pop
adc
dec
rolb
mov
and
ljmp
cmc
or
dec
mov
inc
loop
into
popf
cmp
sub
sub
addb
mov
xor
sub
je
cmp
pusha
outsb
pop
adc
sti
and
ja
arpl
pop
adc
push
adc
ss
sbb
test
sahf
pop
adc
cld
adc
adc
pusha
pop
adc
icebp
jo
pop
sbb
cli
sbbb
cld
jnp
nop
stc
mov
call
leave
ret
ja
xchg
push
add
push
fucomp
rcl
mov
jg
add
hlt
mov
add
enter
inc
cmc
mov
imul
movsl
sub
add
adc
inc
add
test
repz
pop
mov
adc
inc
movsb
and
mov
add
test
add
add
decb
mov
mov
xor
imull
inc
shll
ja
out
shl
shlb
cmp
adc
jge
fiadds
adc
adc
loope
pop
stc
in
xor
repnz
inc
dec
ljmp
inc
mov
adc
add
ror
fcomps
movsb
movl
fimuls
jecxz
fyl2x
xchg
adc
dec
scas
call
jmp
lds
xchg
adc
xchg
sub
cwtl
adc
repnz
lcall
shlb
stos
mov
addb
mov
push
push
pushf
rorl
lcall
cld
jno
stos
out
jb
push
sarb
gs
in
push
xchg
add
ss
loop
dec
dec
add
sahf
push
push
daa
mov
lret
inc
dec
cmp
loope
xor
addl
aas
jmp
in
data16
sub
mov
les
aaa
push
rcl
sarb
icebp
add
add
jl
pop
adc
das
imul
add
out
jno
pop
pop
hlt
into
mov
in
mov
and
dec
out
or
cli
inc
xchg
jl
arpl
adc
pop
fcoms
push
adc
pop
sub
mov
mov
and
sub
and
mov
lret
ret
mov
sbb
popa
outsl
stos
aam
sub
pop
push
pop
stos
outsb
cmp
inc
lret
lret
mov
cmp
fwait
sub
inc
rolw
adc
inc
cld
adc
adc
xlat
add
aad
rcrb
imul
xchg
jo
scas
inc
out
or
arpl
add
and
mov
adc
insb
bound
jl
mov
adc
lock
pop
pop
add
cld
push
inc
mov
jo
std
mov
stos
sub
in
test
inc
ss
gs
mov
in
add
mov
es
loope
adc
nop
push
pop
int
pop
pop
adc
xchg
push
fistpll
adc
ja
mov
pop
push
mov
in
inc
pop
adc
adc
inc
pop
adc
cmp
dec
mov
push
in
ss
fstps
dec
ret
outsl
push
jno
loopne
jle
adc
cmp
push
loop
or
mov
or
mov
pop
pop
adc
aas
sub
dec
xchg
mov
fistpll
mov
mov
clc
dec
fnstenv
jg
or
jns
icebp
testl
pop
adc
inc
dec
in
pop
pop
adc
daa
sbb
mov
aad
jle
xchg
fs
pop
adc
hlt
jmp
pop
jg
adc
movl
pushf
lcall
or
pop
adc
pushf
inc
pop
adc
xchg
lds
nop
les
jge
dec
xchg
jle
ja
pop
nop
popa
push
fwait
xchg
jge
jne
mov
cld
sub
cmp
arpl
inc
mov
das
sub
pop
jno
pushf
daa
mov
dec
cmp
push
testb
pop
cmpsl
fld
mov
xor
std
push
test
mov
insb
add
les
jns
call
out
push
jg
imul
inc
je
mov
out
or
push
push
add
mov
mov
popf
imul
inc
pop
adc
sar
std
cli
mov
nop
xor
shrb
js
inc
pop
adc
lds
pop
cmpsb
sub
inc
pop
adc
dec
movsb
pop
aam
inc
pop
adc
cli
pop
jb
pop
shl
inc
pop
adc
mov
decb
pop
adc
xchg
roll
pushf
pop
adc
shlb
pushf
pop
adc
mov
imul
adc
inc
out
lret
cwtl
aas
icebp
nop
push
movsl
dec
add
add
in
jl
cmp
sbb
out
cmp
xor
je
sahf
jb
icebp
mov
or
sti
mov
arpl
jmp
incb
push
int
or
aas
jl
int3
sar
ret
mov
jmp
push
jnp
sbb
sahf
pop
adc
data16
push
adc
cwtl
jbe
sbb
and
rorl
adc
cld
adc
adc
in
int3
daa
dec
push
adc
adc
add
mov
pusha
or
dec
in
dec
movsb
push
adc
adc
push
les
push
adc
xor
aad
pop
jg
popf
mov
imul
test
out
test
add
pusha
frstor
dec
jmp
cmpsb
adc
and
jmp
xchg
sbbb
loopne
mov
adc
pop
pop
sbb
adc
movsl
fcomps
sbb
or
xchg
mov
cmpsl
mov
dec
xor
cwtl
frstor
fbstp
ret
mov
dec
xchg
stos
push
pop
adc
push
lahf
mov
push
pop
fsubl
dec
icebp
popa
es
jnp
arpl
insb
ficoms
add
pop
leave
adc
std
add
leave
mov
out
xchg
mov
mov
in
test
fs
sbb
xor
in
mov
adc
mov
jns
inc
ret
pop
enter
movsl
and
mov
or
mov
and
repz
mov
or
shrl
dec
in
aas
or
adc
into
mov
inc
or
cmp
cltd
fadds
xlat
mov
xchg
jbe
adc
adc
test
loope
mov
cs
loope
adc
insb
push
movsb
aad
aam
daa
cmp
sub
adc
mov
pusha
inc
pop
adc
popf
pop
adc
add
pop
mov
int
pop
push
adc
int
adc
adc
imul
je
lods
cmpsl
mov
mov
pop
adc
stos
repz
mov
sub
push
int3
out
out
push
and
mov
or
add
pusha
inc
pop
adc
popf
pop
adc
lods
cmp
jae
sub
adc
and
inc
addb
xlat
jg
cmp
nopl
shrb
call
shlb
enter
pushl
std
xor
sahf
pop
adc
cmp
sahf
pop
adc
sahf
jne
mov
adc
cld
adc
adc
lcall
adc
adc
dec
call
mov
pop
inc
aaa
mov
into
ja
cli
sbbb
popf
pop
adc
fnsave
add
popf
pop
adc
mov
xor
add
out
jg
inc
ret
out
ror
adc
mov
dec
out
in
sbb
es
sub
or
popa
or
outsb
pop
mov
dec
or
andb
sahf
cs
jl
xor
add
dec
xor
fnstcw
repz
mov
adc
mov
xchg
push
das
pushf
mov
test
inc
mov
jb
cwtl
push
jae
cmp
push
mov
arpl
addr16
je
stc
clc
sar
jbe
inc
or
mov
mov
push
data16
out
sbb
push
inc
xchg
dec
dec
cli
pop
sbb
ret
bound
mov
mov
xchg
rorb
or
or
inc
and
inc
push
je
cmpsl
stos
leave
dec
std
adc
sub
lds
xor
push
pop
aaa
mov
fwait
adc
cli
push
in
ss
incl
jno
sub
add
jnp
stos
dec
repz
sti
andb
or
clc
test
jbe
stos
ret
push
imull
cltd
test
mov
sbb
stc
pop
dec
pop
addr16
movsl
stos
imul
and
cmpsb
and
sti
or
push
icebp
xor
jle
popa
lods
push
and
mov
popf
push
cmp
sub
jo
clc
sbb
popa
pushf
es
aam
sbb
push
in
fcompl
sub
or
lcall
sbb
mov
mov
out
idivl
pop
sub
shlb
push
dec
or
push
in
cmp
mov
gs
in
leave
sub
jb
pusha
sbb
or
pusha
enter
imul
rolb
or
in
mov
shr
mov
ret
jp
mov
dec
in
lcall
adc
pop
cs
outsl
out
xorl
pop
bound
dec
sbb
mov
fs
jp
dec
cli
fs
mov
jae
das
jno
jl
pop
mulb
xor
adc
push
fidivrl
mov
jmp
lea
sub
and
inc
fidivrs
fisubs
int3
ret
stos
mov
dec
add
jle
aam
fprem1
jnp
dec
or
cmp
xchg
in
outsb
dec
cltd
mov
xchg
shl
xor
pop
inc
xchg
movsl
mov
sub
push
fcomp
rcrl
mov
pushf
push
jb
repnz
xchg
popf
ljmp
aas
cs
das
jo
push
adc
inc
xor
fcmovnbe
incl
into
adc
and
aam
cwtl
add
addl
pop
into
sub
mov
pop
xchg
aaa
pop
cltd
xchg
push
fistpll
cmp
jo
push
adc
daa
call
and
cld
bnd
pop
inc
push
stc
out
in
jecxz
or
in
and
hlt
lahf
push
sbb
outsl
push
xor
dec
mov
xchg
sub
inc
movsl
pusha
add
call
and
lds
cs
mov
arpl
idivb
xchg
jbe
inc
test
push
adc
pop
xlat
jle
mov
lods
hlt
lods
andl
pop
call
jb
roll
jns
mov
lds
int3
shl
xchg
jl
pop
adc
add
adc
add
pop
js
mov
int3
enter
adc
pop
call
adc
xchg
cmp
and
rcll
lds
jo
pop
adc
pushf
fisubrs
inc
out
imul
sub
loopne
cmp
insl
push
mov
je
mov
and
sub
loopne
pop
sarl
into
divl
and
rcrb
add
ljmp
je
ds
shll
out
adc
sub
push
adc
out
das
pop
aas
mov
or
jmp
jg
rcll
aad
mov
jmp
pushf
daa
shr
loopne
mov
push
adc
dec
xor
ja
xchg
push
mov
mov
mov
pop
inc
rorb
clc
cmc
mov
test
jg
jo
out
movsl
jmpw
aam
or
mov
mov
inc
jle
in
add
dec
mov
mov
xor
int3
adc
loopne
push
adc
ja
call
test
xor
jp
adc
sub
mov
mov
jno
cmc
mov
mov
cwtl
mov
jb
les
and
xor
push
out
jmp
lock
adc
xor
jle
in
push
push
mov
decl
or
outsb
jle
jns
adc
cmp
cmpb
pop
shll
xchg
pop
inc
data16
pop
lds
vmovups
es
sar
inc
jns
adc
rol
je
sbb
and
add
pop
pop
lds
fcmovbe
pop
sti
xor
push
adc
xchg
mov
lea
aas
mov
or
push
adc
cmp
and
adc
pop
sbb
enter
ficomps
jmp
imul
leave
popa
sub
mov
push
adc
xchg
lods
cmpsb
dec
pop
xchg
jbe
sub
mov
stos
mov
js
cwtl
js
adc
andb
dec
das
pop
mov
cmc
int3
stos
pop
mov
adc
adc
je
push
dec
test
push
adc
movb
xchg
in
orb
adc
adc
int
mov
movsb
adc
adc
int
test
aaa
sbb
outsl
cld
mov
jecxz
adc
outsl
mov
push
inc
pop
mov
sbb
jle
cmp
fs
cmp
mov
ret
into
out
lret
fidivl
mov
xlat
push
outsl
push
rcll
rcrb
push
adc
mov
mov
scas
jmp
call
ljmp
sbb
or
mov
pop
push
hlt
aaa
clc
xchg
cmpsb
dec
cmp
in
jge
sub
jne
xor
pop
xor
nop
mov
faddl
call
scas
xor
fwait
xchg
add
jae
and
jne,pt
mov
and
sbb
adc
out
dec
xor
and
push
jg
out
xchg
sub
xchg
dec
lahf
cmp
stos
out
sub
mov
dec
pop
xchg
push
in
gs
pop
xchg
sbb
outsl
iret
mov
inc
leave
inc
sbb
mov
dec
adc
outsb
int3
mov
ds
ss
push
stos
test
or
and
insb
test
test
inc
jns
cmpsl
or
pop
out
dec
xlat
mov
ds
push
fldl
negl
xor
pop
pop
xor
jbe
cmp
addb
rcrl
bound
test
xor
pop
cmp
jo
cmp
add
jge
movsb
pushf
mov
orb
jno
es
add
js
pop
pop
jne
xor
loopne
shrb
mov
sub
hlt
call
aam
popf
mov
leave
decb
mov
pop
pop
push
aad
pop
js
xchg
in
outsl
or
pop
js
mov
adc
pop
orb
inc
movsb
scas
enter
in
add
push
xlat
mov
and
test
jmp
stos
sahf
in
test
ljmp
jno
mov
clc
cmp
addb
rcrl
sahf
das
shl
jl
sub
inc
push
push
xchg
into
popf
mov
leave
orb
adc
jnp
xchg
or
sub
push
lret
fs
pushf
push
xor
pop
mov
push
or
scas
mov
add
pop
dec
test
int3
jp
cmpl
mov
pop
pop
enter
jl
sbb
sahf
fst
mov
inc
jp
lods
stos
mov
idiv
negb
mov
clc
jge
cmp
dec
jmp
inc
fcompl
popa
pusha
fwait
lods
int3
ret
add
cmp
in
add
dec
jbe
dec
jecxz
test
push
in
pop
ja
push
cmp
inc
icebp
jmp
cmpsl
xor
add
pop
ret
clc
out
or
cmpsl
adc
dec
call
out
jmp
jnp
jne
mov
cwtl
rcl
cli
xchg
xchg
mov
inc
jne
push
adc
sti
sbb
es
mov
inc
sub
ds
cmp
inc
shll
shrl
mov
test
xchg
xor
mov
scas
xchg
pop
js
mov
xlat
sub
stos
mov
mov
push
add
les
mov
int
cmp
jmp
sbb
int
sub
cltd
inc
xchg
push
sahf
cmp
out
pop
insl
inc
cmp
icebp
xor
inc
cmp
sub
dec
lock
inc
add
adc
adc
mov
cmp
cmp
adc
clc
outsl
mov
pop
adc
sarl
sti
and
leave
cs
push
or
mov
lret
add
cmp
ds
pop
or
movsl
xchg
and
gs
outsl
stc
dec
dec
in
or
movsl
out
into
jp
test
inc
xchg
xchg
loop
dec
inc
xor
repnz
out
mov
mov
stc
jbe
repnz
pop
scas
stos
jae
out
ljmp
arpl
sbb
mov
pusha
mov
adc
or
addr16
aad
js
push
int
xchg
les
ficompl
shl
repz
bound
xor
cwtl
in
jp
fdivrs
lds
jae
ds
mov
repz
xor
scas
xchg
sub
es
or
int3
mov
loope
out
jnp
data16
ss
mov
ljmp
faddl
divl
or
int3
lods
lretw
iret
dec
fldenv
pushf
and
andb
pop
repnz
cmc
inc
adc
add
pop
xchg
push
aaa
test
jecxz
fsubs
push
sbb
pop
sahf
sbb
cmpsb
in
stos
mov
push
sub
push
sbb
jecxz
jecxz
enter
jg
or
push
and
sbb
sti
pusha
pop
push
push
jb
sbb
icebp
andl
mov
mov
jl
mov
add
out
sub
mov
jge
push
pushf
loopne
popa
fwait
add
sub
sub
jmp
jb
sbb
mov
mov
pop
dec
inc
pop
push
aad
pop
out
sbb
xor
push
js
and
mov
pop
push
arpl
mov
psrld
out
shll
push
jle
in
pop
mov
mov
push
jecxz
shll
add
js
notb
cltd
push
ret
add
jecxz
stos
xchg
in
add
aaa
mov
sbb
pop
mov
jl
mov
mov
mov
xchg
dec
push
mov
fwait
push
orb
xchg
push
cld
sbb
bound
cltd
jmp
add
mov
jle
je
loop
cmpsb
mov
and
inc
movsl
lods
push
test
bound
inc
fisttps
or
sbb
inc
movsl
lods
xor
pop
dec
clc
je
xchg
test
push
mov
cmpsb
sbb
stc
or
jg
xor
out
dec
push
dec
jno
mov
dec
cmc
mov
push
jae
push
mov
inc
or
push
adc
dec
scas
cmp
xor
mov
mov
andl
fadds
add
push
rcrb
outsb
mov
repz
imul
adc
cmpsb
sub
cmp
mov
lods
jecxz
xchg
aas
jno
aad
mov
push
divb
jecxz
inc
push
int
mov
jbe
jbe
in
push
mov
dec
and
mov
jecxz
xor
push
dec
inc
pop
mov
inc
and
or
rcl
adc
cmp
inc
fwait
pop
sbb
ss
mov
add
test
push
inc
dec
mov
push
test
aam
cmp
bound
imul
and
sbb
test
and
into
push
stc
sbb
push
mov
push
push
jle
pop
add
push
cs
out
and
out
mov
dec
pushf
push
xor
sub
inc
mul
pop
mov
lcall
inc
cmpl
add
int
mov
stos
shlb
inc
out
cltd
or
and
jbe
testb
repz
popa
or
and
adc
mov
add
jmp
mov
or
cmp
pushf
mov
adc
call
outsb
insb
jl
adc
insb
arpl
idiv
and
fdivr
je
stc
fs
dec
dec
dec
xchg
add
std
dec
inc
mulps
push
test
and
mov
mov
fsubl
push
adc
pop
shll
jecxz
or
sub
mov
pop
mov
pushf
mov
adc
or
xor
subl
cmp
mov
or
lds
bound
jp
cli
adc
popf
push
call
andb
imul
sbb
aam
push
pushf
fbstp
jl
xor
push
cld
call
cmp
xchg
add
push
cmp
out
jecxz
bound
mov
fsub
pop
inc
add
cmp
mov
shl
fldpi
imul
rcll
imul
test
in
adc
aad
mov
sub
lods
lods
mov
js
fistpl
cmp
shlb
pop
pop
sahf
mov
int3
sub
pop
mov
dec
sub
dec
jo
xchg
xor
add
push
pop
icebp
mov
mov
inc
cmp
cmp
jno
mov
fwait
sub
inc
loope
or
pusha
sub
mov
faddl
mov
and
insl
scas
daa
jmp
mov
jecxz
push
addr16
pop
mov
imul
xor
mov
xor
inc
xchg
mov
data16
pop
stos
pushf
loopne
xchg
aad
stc
jo
jmp
lret
inc
jne
push
popl
inc
mov
sbb
cld
sub
vpmadcsswd
das
arpl
rorb
les
repz
add
push
adc
and
adc
lock
xlat
leave
mov
mov
add
sbb
fs
popa
cmp
cmp
mov
ja
hlt
bound
aad
nop
adc
jge
inc
jecxz
lcall
je
sbb
sub
cld
std
cli
mov
add
rol
adcb
push
xor
test
cs
mov
incb
inc
xchg
fs
pmuludq
xlat
ja
inc
xor
and
xchg
mov
add
mov
mov
das
add
mov
cmp
jg
push
mov
and
lds
punpckhwd
jno
mov
and
add
mov
cmp
pop
dec
inc
or
lock
dec
cli
jg
aas
mov
dec
mov
pop
addr16
inc
or
push
adc
cs
jns
bound
push
and
fidivs
pop
fildll
add
leave
call
mov
add
cld
loope
sub
insl
xchg
pop
test
data16
js
icebp
pop
and
decl
push
stos
dec
mov
ret
push
mov
fwait
cmc
lret
in
or
mov
test
pop
cli
sahf
popa
sti
es
cmp
in
sbb
sbb
jbe
jl
xor
dec
mov
les
push
push
addb
insl
ss
inc
pop
icebp
pop
pop
mov
xor
jo
push
dec
decb
jge
ficoms
aad
push
mov
inc
jp
or
push
adc
outsl
sbb
hlt
adc
test
dec
inc
std
and
rcrb
push
push
jle
leave
call
or
mov
outsb
add
adc
sub
mov
scas
sarl
mov
dec
mov
in
push
push
fdivrs
dec
cmp
mov
dec
push
insl
es
jecxz
stos
daa
xor
adc
stos
call
xchg
mov
dec
dec
sub
pop
movsl
pop
pop
xchg
mov
lods
add
cmp
adcb
pop
push
add
popa
outsl
lret
mov
fists
push
nop
jmp
cs
daa
lea
test
inc
outsb
ss
dec
mov
mov
and
lret
cmp
test
cmp
jge
cmc
insl
int
rclb
add
jmp
scas
push
pop
or
push
adc
cs
aad
mov
jp
adc
aaa
xor
adc
loop
mov
push
jp
enter
daa
xor
aas
mov
pop
loope
mov
xor
mov
nop
or
xchg
lock
outsb
sbb
jp
adc
gs
pop
xchg
insl
arpl
in
arpl
and
es
mov
sbbb
fstps
dec
mov
cmp
repz
in
je
out
push
dec
or
in
add
sub
mov
jp
jae
imul
lods
imul
les
shll
xchg
sahf
les
inc
and
cmc
mov
enter
xor
pop
stc
and
xchg
push
mov
pop
jmp
sub
in
xchg
rorb
test
int
ljmp
pop
mov
sbb
popf
cmp
adc
mov
add
mov
sub
roll
inc
ss
daa
inc
cmp
sub
andb
insb
jo
jno
and
add
fs
dec
fcomip
cltd
in
dec
jns
xchg
stos
add
cmp
xchg
aas
addl
scas
adc
add
mov
mov
popl
jno
xchg
xchg
fs
dec
ffreep
ja
mov
iret
xor
or
push
mov
fdivr
notb
xchg
xlat
cmp
jecxz
sbb
push
jo
or
test
xlat
cmpsl
add
bound
cmp
mov
out
mov
js
je
addr16
inc
xchg
xchg
add
stos
popa
inc
mov
inc
fstpt
imul
dec
add
mov
incb
mov
xor
sbb
push
pop
into
fstpt
out
mov
std
pop
hlt
bound
shl
xchg
sbb
arpl
or
aam
push
adc
adc
dec
or
push
push
cld
xchg
out
push
cs
ljmp
xchg
cwtl
decb
mov
lcall
jb
jmp
ret
addb
shlb
pop
add
push
push
adc
dec
aad
adc
mov
popl
mov
mov
mov
repnz
adcl
adc
out
mov
mov
sbb
cmp
and
cmp
mov
pop
out
aaa
xchg
movsl
outsl
inc
mov
pop
aam
pop
inc
inc
dec
decb
mov
imul
es
xor
jge
dec
ss
popf
inc
jae
rcl
mov
xchg
or
hlt
ljmp
adc
cs
push
push
mov
pop
mov
rcrb
push
xor
rcr
xor
lcall
pop
mov
lret
dec
jecxz
jo
inc
mov
push
adc
mov
rorb
sub
xor
das
call
push
bound
lret
aad
cltd
iret
out
pusha
mov
add
add
lock
cmp
cmpsl
mov
mov
in
mov
mov
in
roll
xor
adc
cmpsb
and
les
xor
rol
arpl
cli
dec
mov
stc
bswap
dec
enter
and
pop
jne
adc
scas
mov
cmp
in
adc
outsl
lcall
cmp
pop
cmc
popa
in
fwait
stos
xchg
lods
mov
push
pop
push
adc
jnp
fbld
xchg
mov
mov
ret
adc
adc
arpl
shrb
pop
imul
dec
sbb
stc
stos
sub
shr
mov
ret
cmp
lock
xlat
xchg
cmp
dec
ss
in
shrl
subl
pop
mov
mov
rcrl
fdivrl
les
bound
sbb
add
gs
jle
arpl
iret
repnz
fsubs
popf
mov
or
xchg
dec
sbb
dec
ljmp
mov
pop
mov
inc
mov
push
cmpsb
scas
lods
call
sbb
pop
stos
inc
push
sbb
aad
leave
subb
adc
sbb
push
es
push
movsl
fidivrs
lahf
xchg
sar
cld
sbb
xchg
jne
es
aas
dec
xor
inc
loop
negb
lahf
mov
sbb
dec
sbb
and
xchg
decb
pop
adc
pop
pop
sub
mov
sub
pop
insl
sub
leave
xchg
arpl
dec
ffreep
jne
mov
mov
jg
jne
imul
inc
pushf
loopne
xchg
arpl
push
sub
test
mov
sub
insl
sub
leave
pop
xchg
arpl
mov
icebp
cmpsb
dec
andb
icebp
ljmp
xchg
lret
adc
lods
push
mov
xor
pop
arpl
jle
push
lods
inc
xchg
sub
out
inc
push
ficompl
xor
push
pop
push
adc
int
call
jge
or
in
push
adc
incl
mov
insb
mov
in
push
adc
push
xchg
call
add
jbe
jne
mov
cmp
and
or
push
in
push
out
shlb
test
jecxz
cwtl
mov
jne
inc
adc
sub
mov
or
das
pop
jne
hlt
loopne
or
mov
adc
out
clc
xchg
scas
loope
sbb
pop
std
or
pop
aaa
jle
lods
xor
push
orb
call
add
addl
orl
jp
and
pop
ljmp
ret
fs
mov
repz
test
push
xor
es
jg
adc
adc
pop
ss
pop
loopne
mov
or
mov
lcall
xchg
pusha
fwait
cmp
cmp
cmp
cmpsb
and
add
mov
dec
clc
mov
sbb
stc
loope
rclb
ljmp
call
loop
mov
push
in
cmpsb
sub
sbb
jg
cli
roll
add
je
xchg
mov
xlat
lods
cmp
ds
add
inc
mov
xlat
jbe
dec
pop
jmp
cmp
pusha
fisubrl
push
mov
mov
aam
push
adc
into
sub
fsub
inc
arpl
fdivs
rcl
cwtl
cltd
and
adc
repnz
adc
loopne
push
adc
add
movsl
pop
xchg
les
ljmp
jmp
inc
icebp
int3
jno
adc
cmp
add
push
data16
mov
mov
scas
pop
xchg
ficompl
popa
pop
sub
int
jbe
push
push
in
push
jno
push
lods
js
pusha
pop
cmp
add
es
xorl
scas
out
popa
mov
push
test
push
adc
mov
push
push
fs
leave
and
clc
testl
adc
mov
pop
out
cmpsl
int
shl
scas
popl
adc
std
insb
pusha
jo
cmp
and
leave
enter
fimuls
adc
adc
pop
mov
faddl
clc
cmp
sarl
incl
jno
fs
jmp
or
xor
pop
int3
movsl
push
mov
push
stos
rcl
push
mov
adc
aad
nop
sbb
pop
pop
iret
rolb
aad
mov
fwait
popa
or
dec
inc
sub
push
add
stos
and
out
jbe
ss
push
adc
ja
cmpb
cmp
pusha
ljmp
pop
loope
or
ljmp
sub
and
orl
mov
test
jbe
andb
fsubrs
sub
ret
adc
loop
pop
aad
mov
jns
aam
sub
shlb
daa
pusha
int
rorb
mov
pop
mov
push
and
in
xchg
mov
adc
xchg
mov
xor
jge
mov
stc
pop
sets
push
and
insb
add
push
mov
es
shlb
mov
push
into
pop
movsl
arpl
popa
ljmp
push
lea
jecxz
fsubl
inc
inc
or
xchg
mov
mov
inc
addb
enter
scas
inc
push
push
adc
insl
in
add
out
clc
push
inc
clc
lret
cmp
lock
incl
pop
push
aaa
xor
add
lock
fists
cmp
push
mov
jo
jp
xchg
imul
jne
jnp
out
rcl
pushf
inc
and
ljmp
pop
das
xchg
jmp
cmpsb
push
pop
pushf
fildll
and
nop
xchg
shrb
push
das
pop
sub
dec
sub
shlb
adcb
ds
mov
jl
add
inc
orb
sub
xlat
loope
jns
sbb
cs
subb
inc
loopne
std
mov
sub
add
xor
in
pop
mov
in
mov
shll
jbe
mov
out
cwtl
push
pop
adcb
fs
loopne
les
rcrl
jg
mov
mov
pushf
bound
cli
fimull
push
jno
hlt
aam
jp
je
inc
cmp
pusha
sbb
shlb
or
pushf
sub
cltd
out
push
addr16
xchg
stos
lret
loop
inc
push
pop
sbbb
mov
vmulsd
adc
push
aam
adc
int
inc
cld
jg
icebp
addr16
notl
lds
test
pop
mov
or
loop
dec
cmc
cs
jg
orl
push
das
mov
mov
mov
inc
xchg
data16
je
das
sbb
sti
cmpsb
imul
decb
sub
or
sbb
lds
jl
pop
sbb
pushf
xchg
sub
cmpsb
push
shlb
dec
and
adc
fcmovb
xor
pusha
out
mov
mov
fdivrs
or
incl
rcll
mov
popf
mov
in
clc
dec
mov
adcl
mov
das
in
pop
int
loope
pop
ss
mov
insb
jmp
cwtl
filds
enter
sub
pop
bound
and
cmpsl
repnz
nop
fmull
add
and
cltd
push
pop
nop
mov
xor
repnz
lret
push
push
out
jmp
mov
or
es
call
mov
cltd
fs
leave
into
sub
cmp
or
daa
movsl
mov
dec
nop
lret
push
push
lcall
jb
vminsd
pop
inc
sub
movsl
outsl
lcall
mov
stos
push
sbb
mov
arpl
jecxz
lds
mov
push
inc
iret
and
xlat
insl
xor
rclb
xchg
loop
push
leave
std
cmp
jb
fs
call
mov
lcall
inc
in
cmc
test
hlt
mov
pop
push
jae
fiaddl
pop
mov
mov
lods
fnstsw
sub
iret
xchg
idivb
add
gs
into
in
push
insl
adc
orb
pushf
repnz
push
mov
xchg
or
add
out
pop
push
xchg
mov
mov
mov
xor
push
sbb
movzwl
push
adc
lret
pushf
or
jbe
push
imulb
rolb
leave
cmpsb
xchg
enter
addr16
sbb
dec
jbe,pt
mov
jp
and
adc
fidivrs
into
xchg
sbb
ja
loopne
ror
into
or
jbe
xor
aaa
stos
inc
pop
stos
or
dec
adc
jg
clc
cmp
aas
cmp
out
out
je
push
jo
jae
add
in
pop
das
lret
pop
or
add
inc
xchg
popa
pop
cmpsl
adc
cmp
cmpsb
mov
dec
outsb
decl
rcrl
push
pop
ds
jecxz
mov
and
sahf
pop
das
sub
std
mov
jo
out
jns
roll
leave
push
push
adc
push
call
push
push
push
xor
or
and
dec
jmp
fnstenv
dec
cmpsb
cmp
jecxz
or
push
push
popl
lcall
jge,pt
jle
adc
into
xchg
mov
lret
xchg
subb
in
and
movsl
sbb
test
push
dec
push
xchg
mov
add
jle
add
or
clc
mov
mov
mov
push
std
push
pop
xchg
out
and
push
jae
mov
pushf
imul
mov
lcall
sub
cli
sbb
pop
nop
mov
int
insb
adc
mov
add
add
push
inc
sub
fnstcw
mov
mov
popf
std
cs
mov
inc
or
stc
push
test
dec
test
cwtl
and
inc
jle
pop
mov
lea
inc
jnp
ret
xchg
jnp
and
sub
push
mov
repnz
cwtl
aas
sbb
jp
adc
ret
icebp
pop
aam
push
adc
and
mov
scas
adc
in
jp
hlt
pop
push
fdivrp
cs
scas
pop
lods
icebp
push
sub
and
mov
loopne
push
adc
xor
daa
sbb
pop
adc
push
pop
adc
adc
push
int3
jno
adc
sub
mov
inc
push
dec
mov
test
mov
inc
cltd
popf
adc
or
lea
das
dec
xor
arpl
jmp
push
pop
out
sti
push
dec
jne
mov
clc
cmp
aam
sub
or
add
sbb
dec
cmp
add
lods
xor
xor
lret
dec
out
jbe
adc
inc
fsubs
pop
xor
jbe
bound
lret
out
pop
sbb
sti
push
pop
inc
leave
pop
bound
data16
or
aad
sub
dec
mov
xchg
leave
int3
in
shlb
dec
pop
adc
cmp
test
sbb
out
imul
xor
push
adc
jle
fsubs
hlt
xchg
adc
or
je
mov
dec
push
lret
leave
das
ret
dec
fmull
sub
sbb
stc
fs
mov
sbb
enter
daa
jecxz
lock
push
push
dec
jecxz
dec
ljmp
sahf
repz
xor
jecxz
inc
cmp
cmpsl
pop
xor
mov
inc
rcl
aam
pop
lea
or
xchg
cmpsb
sub
js
std
scas
arpl
jecxz
popf
jns
fistl
lahf
jno
push
fldcw
xor
xchg
movsl
jle
pop
flds
repnz
or
sub
movsb
gs
push
shll
mov
ror
jns
ret
dec
fs
xchg
sub
jo
add
stos
jecxz
sahf
xor
adc
addr16
stos
pop
test
dec
sbb
test
sub
stos
jbe
clc
fbld
fsts
sbb
adc
lds
and
adc
push
cmpsb
add
in
pop
adc
xchg
sbb
and
and
cli
inc
add
aas
lret
add
test
push
iret
clc
lock
std
jecxz
push
adc
pop
jnp
sbb
jbe
mov
fsubp
push
fimull
add
inc
fldl
daa
lods
cmp
fdivrl
jmp
sub
enter
jno
lcall
or
lock
lahf
jne
adc
shlb
cmp
ss
dec
test
dec
int3
or
inc
mov
inc
rcl
pushf
stc
cmp
mov
push
mov
jge
inc
sti
lods
popf
dec
mov
xor
pop
lret
mov
ja
ja
adcb
pushf
jns
lds
dec
jecxz
imul
xor
lahf
mov
inc
jmp
mov
xchg
xor
jne
xor
into
popf
cmp
or
push
mov
in
ret
mov
sub
dec
icebp
cmp
arpl
dec
dec
jg
pushl
ret
call
setne
push
loopne
shll
push
hlt
mov
lcall
movl
mov
rclb
push
xor
add
das
aam
nop
call
jno,pn
xor
or
jecxz
pushf
add
in
movsb
stos
lret
dec
call
int
dec
pop
inc
push
mov
push
adc
arpl
or
add
cmc
xor
adc
adc
loopne
push
adc
or
adc
adc
pop
adc
mov
push
push
outsl
mov
pop
adc
out
jecxz
ficompl
repnz
adc
pop
adc
adc
adc
cli
cli
sti
and
pop
pop
adc
add
pop
adc
je
loop
lods
and
adc
rcll
ljmp
invd
pop
pop
adc
inc
mov
or
adc
inc
les
push
adc
enter
loop
int3
adc
adc
cmp
pop
mov
push
nop
xor
mov
add
test
or
mov
in
scas
pop
insl
jl
mov
mov
scas
xor
adc
daa
pusha
aam
imul
xchg
mov
xchg
fdivrs
or
jmp
cmp
inc
jmp
cmpsb
xor
mov
adc
xchg
fisttpll
xorl
dec
pusha
cmp
pop
adc
dec
movsb
jmp
scas
xchg
jbe
add
inc
jnp
adc
rolb
mov
rcl
fcoms
xor
sarb
int3
loop
lods
xchg
mov
jecxz
xchg
push
mov
cmpsb
cmpsb
icebp
pop
mov
adc
adc
ror
xor
mov
mov
adc
adc
les
scas
int
push
out
icebp
xor
dec
inc
mov
stos
push
mov
jae
and
jp
jbe
xchg
mov
scas
xchg
sbb
lret
pop
push
repz
lods
ss
aaa
mov
nop
adc
or
ret
mov
push
mov
mov
ljmp
in
daa
cmpsb
mov
fabs
add
repz
mov
ret
jmp
shrl
je
int
push
xchg
rorl
jnp
je
push
adc
pop
movsb
pushf
sbb
or
xchg
xor
jo
cmp
adc
sbb
xchg
or
dec
imul
jo
xor
in
xlat
pop
push
call
fidivs
sub
aam
push
adc
xor
push
lods
flds
decl
fs
mov
icebp
jmp
xchg
ret
lds
les
scas
movsl
stos
mov
mov
cmp
mov
xchg
int3
iret
lock
push
adc
xor
add
inc
adc
outsl
push
jg
mov
ss
sub
mov
xchg
inc
cltd
add
push
ret
addb
mov
xchg
jo
inc
mov
inc
jns
mov
mov
js
push
adc
jbe
pop
push
aaa
dec
adcb
adc
fstl
xor
das
xchg
orb
hlt
mov
or
das
pop
jecxz
stos
imul
rorl
popf
aaa
je
xlat
and
push
ss
pushf
bound
roll
pop
cs
lods
sub
inc
addb
je
add
aaa
mov
loope
pop
cs
add
lcall
mov
xchg
int3
push
shll
fsubrp
or
adc
xor
leave
lea
add
add
dec
movsb
mov
dec
or
out
and
call
push
adc
cmp
adcb
adc
xor
mov
aam
xchg
imul
daa
cli
hlt
pop
das
push
mov
push
imul
rcl
hlt
xchg
popa
frstor
mov
pop
leave
adc
xchg
jo
cmp
or
ret
aaa
ret
ficoml
jbe
lock
lea
add
imul
jnp
adc
inc
das
sbb
mov
mov
add
enter
xchg
jno
cmp
sahf
push
cmp
push
adc
lret
dec
add
pop
sbb
jnp
lret
inc
inc
add
add
inc
nop
outsl
mov
add
mov
cltd
sub
jns
pushl
sbb
jno
and
xchg
xor
test
stos
adc
or
outsb
divb
jecxz
addb
psllw
dec
mov
push
jmp
adc
outsl
ret
pop
jecxz
out
aas
arpl
lds
mov
sbb
push
and
add
stos
repz
jnp
fisubs
test
pushw
adc
rorl
fdivl
push
sbb
or
sbb
push
adc
fucomp
aam
stos
mov
jnp
xchg
inc
xchg
sbb
iret
cld
shll
lret
cld
lods
and
leave
dec
xor
lods
aaa
jecxz
add
or
repnz
inc
mov
outsl
insb
aaa
repz
pop
nop
jne
test
insb
ret
jo
pop
adc
mov
shll
lods
imul
add
mov
cld
lea
cmp
push
outsb
pop
pushf
rorb
inc
ljmp
jne,pn
jne
ds
andl
arpl
loope
adc
adc
inc
push
lahf
cwtl
add
cmp
outsb
add
mov
sti
mov
mov
or
sbbl
orb
fs
adc
inc
xchg
jo
adc
pop
pop
adc
cmc
arpl
int
mov
adc
dec
xor
pop
je
push
adc
test
push
xchg
jae
adc
adc
stc
mov
add
test
push
adc
stc
out
scas
xlat
and
pop
pop
ds
adc
adc
or
rolb
or
xor
inc
mov
mov
mov
sub
cs
mov
inc
push
adc
adc
cmc
lods
push
pop
sbb
pop
adc
adc
rclb
into
add
adc
aas
pop
cmp
repnz
pop
pop
mov
ffreep
je
out
add
cwtl
sbb
sbb
mov
adc
rcr
xor
and
and
lahf
cwtl
xchg
nop
dec
es
data16
xor
fyl2x
xor
adc
add
mov
xchg
jg
mov
add
outsl
js
mov
mov
adc
push
rcrb
cmp
jo
lret
adcl
dec
xor
pop
or
mov
mov
xchg
in
dec
out
xchg
gs
adc
xchg
dec
pop
mov
ss
shlb
pop
rorb
jns
imul
fistps
insb
sbb
and
es
inc
daa
fstpt
scas
dec
repnz
out
clc
push
dec
mov
sub
mov
pop
or
adc
inc
or
imul
xlat
mov
sbb
shlb
addl
lcall
adc
adc
mov
inc
insb
insl
stc
xchg
shrb
push
mov
shrb
jbe
js
daa
xchg
fwait
jnp
and
adc
pop
adc
push
pop
hlt
xchg
out
and
pop
adc
dec
movsl
lcall
je
pop
aam
mov
adc
pop
imul
test
sub
or
js
mov
cli
sub
push
mov
mov
cld
aas
mov
mov
adc
inc
xlat
lock
sbb
add
incb
out
push
pop
pushf
fidivs
cmc
mov
or
call
iret
pushf
mov
in
pop
movsl
les
adc
cltd
leave
jo
cmpsl
les
jp
sbb
loope
stos
mov
leave
hlt
push
cld
test
inc
xchg
leave
in
sbbb
jge
jbe
cmp
mov
sub
add
mov
inc
ret
jge
pusha
cmp
mov
imul
mov
scas
movsb
shlb
add
mov
dec
out
add
mov
out
add
sub
add
popa
push
in
xchg
movsb
lahf
pop
adc
mov
lahf
pop
adc
inc
inc
sub
add
sbb
mov
push
mov
adc
lds
or
aas
neg
fdivl
sbb
mov
insl
in
hlt
push
mov
jecxz
sbb
sahf
add
and
inc
pop
jnp
inc
pop
insl
scas
sub
inc
and
pop
inc
imul
ss
sbb
adc
xor
int
pop
imul
mov
ret
cmpsl
stos
cld
add
cmp
jbe
daa
dec
mov
in
jge
fwait
pop
fdivs
inc
ds
cmp
push
out
loop
scas
movsl
xlat
stos
out
pop
or
loop
outsl
pop
arpl
cmc
mov
outsl
pop
bound
mov
pop
push
adc
xchg
sbb
inc
or
stos
test
int3
mov
fwait
fwait
test
rol
mov
cli
pop
sbb
mov
adc
xchg
push
jle
adc
leave
mov
test
ds
push
std
mov
movsb
and
adc
and
loop
ss
adc
and
cli
push
mov
xchg
pop
xor
jnp
adc
mov
dec
popf
loopne
push
push
iret
gs
repnz
fidivs
mov
out
or
dec
jae
ds
movsb
and
adc
jae
out
xchg
lahf
and
sbb
add
xchg
lea
stos
popa
push
daa
pop
push
adc
mov
dec
addl
dec
push
sub
shll
xlat
nop
jb
pusha
outsl
es
push
adc
sbb
pop
out
or
adc
in
and
scas
mov
add
pop
lret
nop
lret
test
mov
repnz
add
mov
inc
xchg
loope
or
inc
fwait
xor
data16
hlt
addr16
idivb
dec
into
or
movsl
or
xchg
into
cmp
inc
xchg
lea
cs
xor
std
xchg
lock
fdivrl
lcall
pop
jge
aad
nop
cmp
jge,pt
adcb
mov
les
lret
jno
ss
shrb
jp
loopne
fistpl
shrl
sub
popf
arpl
mov
add
push
cmp
mov
jnp,pn
int
repz
xchg
fnsave
inc
fnsave
std
lods
and
out
add
ljmp
aaa
ds
arpl
sub
xor
addb
stc
pop
or
xor
sub
add
in
mov
popf
cmp
jg
lcall
dec
jnp
mov
mov
push
pushf
push
iret
jmp
popa
cmp
pusha
add
stc
cmp
adc
push
scas
sub
ss
mov
add
pop
ljmp
jp
std
loopne
call
shl
int
push
lods
fdiv
pop
jg
hlt
jmp
lods
lcall
loopne
lods
movsb
mov
jg
add
scas
test
xor
mov
sbb
add
cmp
stos
sahf
insl
adc
push
into
test
shll
adc
adc
bound
mov
imul
sub
inc
rclb
adc
cmp
les
or
jno
daa
addb
loop
adc
fs
jno
add
add
inc
lods
sub
jge
or
inc
lods
adc
sub
lea
lcall
loope
sbb
jae
cmp
sub
inc
inc
cmp
and
mov
xchg
pop
jmp
sti
invlpg
dec
daa
sbb
jge
pushf
cwtl
in
cmpsb
aam
mov
repnz
lcall
inc
and
fadds
add
jp
xor
jbe
popa
rclb
adc
insb
inc
and
xor
and
lock
sub
clc
fcomps
jecxz
add
dec
push
jmp
sbb
int3
cmc
enter
in
ret
in
scas
add
pop
lret
adc
adc
lods
sub
bound
enter
push
adc
pop
stos
call
xchg
shlb
and
stos
jb
mov
sub
push
or
les
jbe
insl
arpl
lods
jb
test
fisubs
dec
or
arpl
lods
aad
imul
cmp
adc
adc
push
adc
pushf
iret
dec
scas
adc
and
push
adc
push
pop
in
cmpl
lds
mov
outsb
rclb
adc
cmpb
sar
repnz
pop
cmp
xchg
jbe
fnsave
mov
xlat
cmp
cmpsb
hlt
mov
mov
jge
lret
testb
dec
pusha
adc
data16
pop
out
pop
inc
jge
mov
push
xchg
inc
mov
lcall
ror
movsl
jnp
rclb
adc
pop
adc
cmp
adc
adc
or
add
lret
inc
push
div
test
pop
adc
ficompl
or
inc
out
inc
push
inc
pop
adc
adc
in
call
pop
adc
addl
adc
cmp
lods
mov
sub
mov
xchg
lret
mov
pop
adc
cmpsl
cmpsl
mov
jmp
push
int
bound
scas
xchg
mov
pop
adc
data16
jge
test
and
lds
hlt
mov
lret
lea
arpl
adc
enter
jg
inc
icebp
sbbl
cmp
rcl
sti
jg
mov
mov
pop
das
enter
adc
into
cli
hlt
call
sbb
jge
ret
popa
cmp
pop
adc
ret
movb
dec
mov
and
mov
mov
xchg
mov
int3
aam
adc
adcb
mov
dec
xor
negl
push
cmp
lods
rcrb
mov
dec
or
mov
xchg
loopne
sbb
jle
lock
outsb
push
popa
pop
mov
xor
aad
mov
je
push
mov
pushf
das
aad
fistl
pop
adc
and
shll
popf
cmp
adc
pop
adc
pop
xchg
mov
xchg
pop
or
ss
pop
adc
inc
insb
dec
jg
jnp
add
call
push
jge
mov
orb
inc
inc
pop
jg
movsl
push
adc
pop
adc
std
cwtl
aam
inc
mov
mov
dec
in
out
pop
push
adc
dec
push
or
jg
out
clc
push
cltd
adc
cwtl
das
dec
jl
adc
push
mov
idiv
hlt
call
mov
arpl
mov
call
fadds
jne
mov
mov
jl
jo
hlt
dec
arpl
cmpsl
test
add
inc
out
sbb
sbb
adc
std
and
mov
adc
add
jl
adc
dec
aad
jp
loop
dec
les
mov
xchg
enter
stos
icebp
push
testl
or
cs
push
inc
jbe
mov
mov
sbb
and
cmpsl
mov
fildl
fnsave
movsl
ljmp
lds
pop
icebp
jbe
dec
fstpl
dec
imul
loop
outsl
ret
pop
xchg
or
imul
push
or
pop
pushf
or
pop
pop
lds
sub
pop
pop
push
adc
mov
add
and
mov
orl
push
rcrl
pop
les
adc
addr16
sub
lock
jl
adc
jo
cltd
xchg
dec
dec
ds
inc
xor
lds
jne
js
jp
lea
pop
cmpl
xor
xor
cmp
data16
mov
out
fs
test
pop
lods
in
pop
pop
sub
add
cmp
ja
dec
adc
aas
je
daa
jbe
mov
dec
mov
inc
and
push
stos
mov
js
ds
inc
mov
dec
mov
adc
mov
lock
roll
xlat
rorl
call
sub
pop
push
adc
xchg
nop
mov
xchg
xchg
mov
stos
call
mov
in
and
imul
adc
jecxz
cmp
enter
pop
add
sbb
rolb
xor
cmp
cltd
test
ret
cmp
scas
jnp
sub
lahf
push
ret
clc
imul
xor
push
adc
rol
nop
xchg
push
in
mov
shlb
sbb
pop
adc
xor
pop
fs
cmp
push
mov
dec
xor
mov
pop
inc
jmp
clc
push
sbb
mov
cltd
cmpl
pop
sbb
test
gs
in
jl
scas
enter
test
mov
ljmp
mov
ror
aad
sub
lods
sub
icebp
nop
jle
inc
popa
mov
cmp
pop
fnstsw
lret
sbb
push
outsl
push
and
push
hlt
int
mov
stos
loop
push
push
dec
inc
mov
fiaddl
les
or
rclb
xlat
jno
mov
push
xchg
icebp
inc
add
add
mov
mov
rcr
add
aam
jg
mov
pop
xor
push
sbb
addb
jae
or
and
mov
idiv
and
or
pusha
negl
pop
out
cs
jl
adc
or
add
leave
jb
push
popf
addb
clc
loope
pop
dec
data16
jl
cmp
push
pop
sbb
jle
lods
mov
push
mov
mov
jmp
jg
test
call
pop
mov
cmp
dec
inc
add
add
mov
aas
jge
push
dec
cmpsl
sbb
sarb
shlb
dec
or
pop
js
ljmp
pop
loopne
jmp
push
addr16
sbbb
adc
adc
mov
push
xlat
mul
roll
dec
jg
jl
adc
inc
rolb
in
add
out
push
cmp
ds
ret
test
iret
mov
push
push
mul
rolb
dec
jge
jl
adc
inc
rolb
sub
out
add
pusha
in
push
js
sbb
pushf
mov
adc
stc
mov
fisttpll
lods
sub
add
jnp
pop
inc
or
in
cmp
and
hlt
int
mov
xorl
test
fcoml
mov
push
adc
or
loopne
jae
test
push
adc
or
jmp
jne
inc
inc
aad
or
pop
xlat
adc
mov
out
orl
mov
sub
int3
shlb
push
pop
pop
in
pushf
loope
scas
dec
stc
sbb
mov
in
xchg
pop
aam
push
adc
aam
add
insl
shrb
cltd
pop
loope
jl
adc
cli
fsubrl
fdivl
xlat
mov
push
jne
jno
daa
xor
xor
pop
inc
cwtl
inc
pop
adc
pop
int
and
mov
and
std
mov
mov
fcoms
cmc
insl
fbld
adc
out
lea
cwtl
jecxz
adc
adc
aam
jge
adc
stc
push
push
dec
dec
pop
push
dec
jg
ds
push
xor
dec
xor
adc
jae
repz
movsb
or
pop
movsl
adc
pop
or
test
mov
mov
and
stc
cltd
inc
sub
adc
adc
fisttpll
inc
mov
mov
pop
std
sub
xor
rorl
inc
mov
jne
xor
adc
insl
insl
add
and
adc
jbe
inc
adc
pop
pop
je
int
dec
pushf
fstpl
adc
adc
scas
fbld
lret
push
adc
cmpsl
lret
push
adc
cmp
pop
sub
push
adc
adc
cmp
out
loope
sub
std
fwait
jnp
xchg
lock
pop
adc
jo
pop
adc
cmpl
pop
adc
xor
mov
lock
pop
adc
inc
pop
adc
add
mov
push
adc
out
test
mov
ret
jg
subb
sbb
lret
mov
and
jnp
out
mov
fmull
mov
pop
inc
or
dec
push
outsl
popf
sbb
xor
movsb
mov
sbb
stos
push
dec
sar
jl
pop
adc
adc
adc
dec
inc
movsl
mov
and
mov
mov
add
pop
js
loopne
or
pushf
jae
xor
sbb
mov
mov
mov
pop
pop
test
das
call
mov
outsl
pushf
sbb
out
call
pusha
lret
add
push
std
jo
call
clc
or
imul
jecxz
jge
jmp
mov
add
inc
icebp
lret
test
add
out
cs
cmp
arpl
lods
test
push
decb
sub
jle
shrl
test
dec
jl
in
int
addb
dec
jno
aaa
cmp
negl
cmpsb
aaa
jo
pop
adc
mov
xchg
daa
insl
jl
xor
add
sub
sbb
xor
push
push
pop
mov
and
imull
pop
lods
lcall
jmp
mov
out
popf
dec
push
xchg
int3
add
mov
mov
xlat
outsl
mov
js
loopne
out
or
imul
jo
pop
adc
add
mov
pushf
push
xor
sahf
mov
movsb
sbb
pop
sub
andb
outsl
loop
xor
push
loope
addl
hlt
sar
test
jbe
adc
add
mov
pushf
push
imul
sar
jle
sti
jo
or
aad
adc
int3
push
xchg
push
cmpsl
mov
lcall
repz
pop
xor
push
stos
dec
mov
loopne
orb
xchg
jae
pusha
popl
leave
ret
inc
xor
and
imul
jo
pop
adc
mov
loop,pn
pop
pushf
cwtl
push
xor
mov
std
push
sub
enter
clc
aam
sbb
dec
inc
mov
jmp
mov
pop
push
movsb
sub
or
xchg
sarb
xchg
pop
jge
lods
mov
jle
fs
lock
aas
lock
lahf
add
xor
mov
das
jo
int
cmp
fs
cmp
dec
arpl
fisttps
data16
das
jo
addl
jle
int3
sbb
xchg
mov
adc
adc
pop
movsl
mov
push
js
pop
pop
or
sahf
and
pop
fdivs
int
xor
and
pushf
lock
cmp
aad
jae
into
mov
cmp
push
mov
inc
cmp
and
fs
jge
sub
adcb
stos
lret
mov
or
and
xor
es
test
push
std
repnz
popa
mov
outsb
bound
mov
mov
inc
xor
mov
das
sbb
insl
insl
out
movsl
xchg
sbb
or
decl
inc
xchg
cmpsl
mov
scas
sub
mov
cmp
sub
push
data16
and
adc
jp
cmp
mov
cmp
jne
xor
jg
xor
adc
icebp
imul
imul
imul
dec
aam
adc
lods
arpl
loop
mov
push
dec
jo
pop
adc
xor
fstl
syscall
sub
iret
testl
adc
cltd
mov
inc
sbb
add
bnd
xor
popa
and
test
rcrb
nop
imul
add
dec
push
outsl
xchg
cmp
dec
test
push
repz
add
fbstp
addl
sbb
mov
mov
cmp
aam
or
mov
pop
cmpsb
pop
add
lock
inc
push
pop
inc
movsl
sbb
push
cld
into
add
and
xor
outsl
sahf
or
js
imul
xlat
leave
jg
xor
pop
shll
xor
cmpsb
adc
add
adc
sub
cmp
lods
arpl
add
push
mov
div
loopne
addb
sub
shlb
add
pop
dec
aaa
sub
imul
pop
add
into
popf
stc
daa
mov
adc
or
mov
dec
pop
adc
mov
adcb
jg
xchg
pop
je,pt
sbb
mov
add
cwtl
je
imul
cmpsl
xor
ss
test
lods
push
mov
adc
and
pop
adc
cs
cmp
out
into
call
lahf
inc
orb
cmp
call
faddl
inc
cmp
lea
bound
or
cmp
bound
sar
xchg
ret
divl
arpl
sub
sub
insb
add
mov
inc
or
aam
xchg
inc
pop
push
dec
out
insl
jnp
sbb
jge
adc
mov
xchg
adc
mov
cmp
insb
test
mov
aad
sbb
pusha
stc
add
call
loopne
mov
inc
lret
hlt
push
push
mov
xorb
xchg
clc
cs
xor
test
jne
sub
push
push
dec
push
push
jl
pop
adc
adc
jge
adc
fimuls
push
incb
orb
call
sbb
shrb
cmp
mov
test
and
cmp
lock
pop
adc
and
push
inc
ret
add
jbe
loope
add
in
add
and
xor
aas
inc
fsubrl
pop
xor
adc
adc
mov
push
sub
dec
adc
adc
and
pop
adc
data16
enter
jbe
and
ljmp
mov
pop
jl
shll
in
es
mov
sbb
and
inc
pop
lds
push
sbbb
push
sbb
pop
mov
adc
adc
outsb
fldl
andl
sbb
cmp
fs
xor
dec
jg
or
xor
cmp
dec
push
adc
push
push
pop
lcall
loopne
push
adc
mov
push
addr16
add
stos
orl
dec
inc
into
enter
xor
adc
adc
pop
jmp
data16
std
sbb
rolb
jge
mov
out
dec
js
push
and
popf
xchg
cmp
lcall
pop
imul
int
movsw
and
sub
je
add
cmp
pop
sbb
out
push
test
push
jp
mov
gs
testb
inc
test
cltd
loop,pt
sub
enter
sub
mov
addr16
shrl
into
jae
fstpl
addb
sub
insl
inc
popa
fbstp
push
cwtl
pop
sub
rclb
rcl
pop
mov
out
push
filds
fldcw
fadds
lds
adc
sti
xchg
imul
push
lret
cmp
scas
imul
fs
faddl
outsl
pop
addl
sub
sbb
xor
dec
cmp
jl
cmpsb
fiaddl
xchg
mov
mov
or
lret
mov
je
movsl
daa
mov
jmp
push
push
sti
add
addb
ljmp
mov
addb
arpl
adc
pop
ret
inc
or
add
loop
jnp
pushf
inc
push
sbbb
xor
popl
lock
sti
incb
pop
mov
dec
leave
sub
dec
mov
loop
sub
pusha
inc
add
push
enter
cwtl
jo
or
xchg
add
mov
cmp
shrl
add
mulb
add
or
adc
testl
jnp
pop
jbe
push
jg
and
lods
adc
int
das
pusha
adc
adc
adc
in
mov
xchg
pop
stos
mov
jge
adc
sbb
bound
jge
adc
ljmp
sbb
add
fwait
popa
cmp
sub
push
in
sub
shlb
push
rolb
xor
mov
xchg
test
je
push
ljmp
mov
push
cmp
mov
stc
mov
loope
pop
insb
jge
adc
cmpsl
sbb
mov
dec
xabort
push
fmuls
inc
add
xor
fmull
jl
push
adc
rcl
pop
jb
ds
lds
scas
out
pushf
mov
test
inc
and
mov
xchg
rcrb
dec
add
add
push
xchg
jg
add
pop
rolb
add
iret
mov
in
cmpsl
jo
pusha
add
in
add
rorl
arpl
jae
push
hlt
dec
mov
push
pop
xchg
std
adc
insb
mov
mov
pop
jno
pop
inc
cmpsl
xchg
adc
inc
lds
outsb
insl
dec
movsl
add
push
imul
dec
lods
inc
adc
addl
inc
sbb
push
jg
aam
imul
lcall
int
mov
lahf
lds
ret
jae
repz
or
jne
jb
xor
lcall
jge
push
xchg
ljmp
dec
fistpl
pusha
jmp
cmc
jo
mov
lock
pop
jmp
outsl
lods
sub
ret
popf
sub
mov
data16
cltd
push
pop
popf
push
add
dec
icebp
xor
shlw
sub
insl
dec
jae
ss
lods
pop
scas
jnp
push
mov
repz
adc
dec
sub
shll
leave
lret
and
cmp
add
das
aam
clc
push
xor
jo
pop
lds
pusha
xchg
sbb
imul
ret
daa
leave
inc
and
dec
xor
sbb
pop
test
shlb
push
adc
jae
xor
data16
mov
popf
cmovl
movsb
sbb
push
adc
arpl
pop
inc
push
sub
and
ss
lahf
subb
mov
or
or
add
mov
sti
in
fwait
ljmp
mov
jg
insl
pop
pop
outsl
popf
ss
cwtl
and
enter
insb
test
adc
clc
jg
test
jnp
sbb
add
rorb
add
movsb
out
fdivrl
pop
or
jno
xchg
adc
xor
testl
lret
mov
sub
rol
out
inc
scas
mov
dec
ret
enter
mov
repz
jl
pop
adc
sub
adc
adc
mov
imul
and
jge
or
dec
xchg
sbb
sti
cmpsb
adc
repz
push
mov
dec
xchg
add
inc
addb
call
lock
sub
cld
jnp
ss
leave
cmc
or
push
push
cli
jl,pt
pop
adc
adc
xchg
fmull
mov
pop
push
ljmp
mov
cli
hlt
cld
imul
xchg
ret
jl
aam
ss
add
ss
xchg
sarl
mov
ss
push
js
ljmp
pop
lds
push
adc
ret
xor
mov
in
xchg
push
dec
pop
cs
scas
cli
pushf
jns
pop
mov
or
sub
in
aad
stc
pushf
push
js
js
dec
jg
add
jns
inc
addb
adc
push
aas
mov
xchg
push
pop
inc
xor
fldenv
out
inc
or
cmp
jo
xchg
call
arpl
xorb
jo
xor
popf
ljmp
mov
inc
shll
or
or
ds
push
arpl
pop
call
mov
rcrl
call
test
xchg
mov
in
pop
icebp
push
into
call
jg
imul
or
rcrl
fwait
icebp
loope
cmpl
pusha
in
push
jo
xchg
pop
push
data16
push
adc
xchg
cli
clc
cmp
movsb
sbb
mov
dec
push
iret
stc
data16
fcoms
dec
jns
sbb
xchg
push
jo
mov
in
outsl
mov
and
add
sbb
sbb
add
xchg
xor
dec
push
mov
leave
pop
or
inc
dec
push
jecxz
mov
aas
cmpsl
lea
test
subl
sbb
test
pop
adc
jecxz
lods
mov
enter
rol
push
jecxz
sub
lret
jno
sbb
rcr
mov
jmpw
mov
lods
je
lods
in
lods
mov
mov
sti
arpl
repz
fiaddl
xchg
sub
push
and
mov
mov
mov
scas
adc
test
pop
adc
mov
xor
sub
adc
mov
pop
adc
out
push
jp
ds
mov
adc
loopne
adc
push
adc
lret
in
scas
xor
mov
cmpsb
dec
stc
sbb
das
jecxz
daa
out
push
dec
popa
icebp
sbb
push
int
rorb
pushf
out
aaa
data16
ja
pop
jmp
mov
mov
sahf
inc
mov
outsb
inc
add
pop
mov
pop
outsl
mov
cwtl
pop
lcall
daa
jecxz
push
mov
sahf
nop
and
out
popa
sar
stos
or
jp
xchg
jbe
ss
fbld
pop
int
sub
jbe
cld
jle
xor
pop
or
sbb
pop
jns
or
sbb
data16
xor
out
xchg
adc
pop
dec
out
call
stos
sbb
mov
xchg
cld
or
or
pop
mov
adc
test
sub
fdivrs
clc
js
ds
out
sub
out
adcl
xchg
aaa
pop
and
std
imul
call
insl
arpl
and
jmp
movsl
lcall
add
sti
push
ljmp
ret
lea
fldcw
add
sub
jecxz
fildl
loopne
les
xor
in
fiaddl
adc
add
je
xchg
mov
mov
ret
inc
lret
aam
sbb
js
aaa
xchg
sbb
adc
push
add
mov
mov
fdivl
push
dec
adc
inc
cmp
pushf
fildl
nop
and
mov
adcl
cwtl
mov
inc
add
out
es
pushf
fildl
int
add
fildl
js
add
jo
add
push
fildl
pop
fildl
push
fildl
mov
loope
push
mov
or
mov
pushf
push
push
cli
mov
data16
add
lock
icebp
adcb
aaa
cmp
sbb
mov
pushf
push
inc
cli
mov
shlb
add
cli
das
sbbb
fildl
mov
add
rcr
adc
fildl
sub
rcll
cmp
fwait
popf
sub
mov
jge
arpl
ret
mov
adcl
icebp
push
adc
mov
sub
xor
cld
lea
stc
cld
shrb
mov
imul
cmc
sub
ret
pusha
leave
rcll
test
cmp
add
mov
cld
into
sarb
call
dec
or
into
push
ret
jo
fsubl
mov
cmpb
adc
jge
fldl
fwait
dec
faddl
jo
add
cwtl
faddl
sub
andb
mov
clc
das
sahf
push
jnp
push
roll
add
mov
mov
adc
lret
add
popf
push
xor
lock
orb
cmc
or
lahf
pop
pop
mov
stc
cli
and
lret
xor
test
cmova
aas
out
dec
shlb
mov
mov
add
lods
adc
jbe
rep
les
add
out
mov
in
faddl
hlt
faddl
cld
faddl
add
add
or
add
adc
add
sbb
add
das
fldl
push
sub
xor
mov
adc
addr16
xor
xor
xlat
jmp
pop
push
push
rcrl
xlat
push
fimull
sti
or
and
pushf
rcll
fisubs
dec
push
imull
mov
pop
addr16
int3
dec
nop
and
fldl
adc
push
fldl
pusha
fldl
je
add
fcomps
out
loopne
stc
jecxz
push
jb
dec
movb
and
loop
aaa
xchg
or
das
jl
clc
pop
lea
incl
adc
xchg
fidivrl
into
sti
xchg
xchg
inc
jecxz
xchg
mov
mov
and
les
push
cwtl
push
scas
and
addl
dec
jl
mov
fadds
dec
int
dec
lds
mov
repnz
mov
ret
jp
aas
push
repnz
clc
push
fistpl
adc
jo
faddp
iret
fcomps
sbb
inc
xor
xchg
adc
pop
mov
dec
pop
xor
push
divl
rorb
leave
fisubs
jmp
adc
repnz
jecxz
inc
cmc
cmp
push
ret
push
xor
fstps
fidivs
dec
subl
cld
push
inc
out
repnz
push
test
cli
into
cmc
fs
lret
shlb
jo
test
enter
mov
rcrl
inc
mov
jne
jnp
mov
jbe
lahf
sub
mov
inc
hlt
cmpsb
out
sub
ljmp
les
or
lcall
sbb
sbb
push
push
cmp
test
push
xchg
mov
in
jmp
push
inc
popa
fst
test
mov
test
fs
xchg
js
das
cmp
movsl
lret
pop
mov
adc
inc
orb
add
lcall
jo
sbb
mov
aam
xlat
push
and
pop
lds
adc
jmp
pop
mov
ljmp
push
test
add
inc
orb
adc
sub
or
adc
push
pop
outsl
incl
icebp
adc
mov
mov
pushf
sub
inc
cmp
dec
insl
add
pop
push
push
xorb
call
add
push
fmull
pop
das
and
add
pop
js
and
out
push
jne
rcrl
sub
gs
cmp
jecxz
pop
lret
rclb
xchg
cmp
sar
mov
add
mov
adc
mov
add
les
adc
jnp
into
push
mov
pop
or
into
popf
mov
cmp
push
pop
adc
movsl
cmp
sbb
jmp
lahf
cmp
out
insl
arpl
addb
push
add
cmp
les
adc
dec
pop
ficomps
shlb
mov
enter
inc
push
pop
adc
inc
pushf
sbb
pop
xor
mov
aad
movl
aad
test
cmp
adcb
jo
rclb
adc
mov
lea
jge
subl
add
cs
xlat
mov
add
in
push
out
inc
adcl
shrb
inc
test
or
mov
inc
bound
mov
mov
fwait
push
cmpsl
push
dec
jb
les
mov
ja
pusha
sahf
push
cmc
pop
fs
push
test
mov
lock
jp
adc
stos
lods
aad
cmp
inc
inc
sahf
pop
jmp
jl
mov
in
push
lcall
shrb
pop
fiaddl
rcl
jg
xor
dec
decb
scas
sub
mov
push
mov
cmp
rcll
aad
push
dec
in
outsb
loope
pop
inc
adc
jmp
and
xchg
xor
dec
cli
mov
fs
push
mov
mov
cmp
popf
xor
ja
imul
aaa
stos
mov
jne
sti
mov
enter
iret
lods
push
mov
mov
test
pusha
sub
movsl
dec
mov
nop
roll
and
das
lahf
rcll
and
mov
clc
xchg
cltd
inc
ret
cmpsl
pop
cmpsb
mov
rorb
je
mov
adc
ds
orb
cmp
xor
lods
stc
and
rcrl
adc
inc
subb
aad
pop
sbb
add
sar
stos
jo
out
bound
lahf
aaa
aaa
xor
dec
xor
pop
adc
xor
mov
add
pop
imul
insb
outsl
arpl
call
add
cmpl
gs
xor
mov
das
push
xchg
sub
sub
dec
fisttpl
shl
lret
inc
push
jp
dec
mov
out
cmc
dec
mov
cmp
imul
mov
cmp
xchg
mov
xchg
lds
insl
sbb
insl
inc
imul
push
out
inc
adc
dec
add
jne
incb
mov
jo
daa
ljmp
movsl
cmp
or
adc
mov
adc
fcmovnu
mov
insb
cmp
fildll
push
mov
imul
stos
fisttpll
inc
sahf
push
pop
test
in
add
mov
lahf
flds
inc
lcall
gs
lret
add
xrelease
stos
sbb
or
jle
arpl
mov
cmp
mov
jns
jge
js
fcmovnu
dec
push
inc
orb
in
pop
jge
es
mov
inc
mov
cmp
adcl
or
or
add
pop
adc
fmul
stc
lods
and
push
aad
call
sub
pop
enter
loope
into
je
push
jbe
sub
mov
fwait
enter
flds
icebp
pop
push
jp
push
mov
pop
imul
push
gs
popf
add
aad
push
mov
adcb
dec
fstpl
in
dec
cli
adc
add
mov
jo
rorl
jge
lcall
leave
fninit
xchg
jo
cmp
or
movsl
mov
and
cmp
pop
fisttpll
rorl
pop
push
xchg
add
mov
sti
popf
ljmp
jae
imulb
in
adc
mov
cmp
xchg
jmp
push
in
adc
xor
jo
cmpsb
mov
xor
add
pop
in
adc
rorb
sbb
les
lret
aad
jo
or
pop
dec
repz
movsl
cld
and
hlt
mov
or
sub
std
jo
and
push
fs
add
add
fdivrp
inc
pop
addr16
add
cltd
xor
sarl
ds
xlat
addb
mov
jg
or
add
or
add
add
lock
adc
in
adc
in
adc
in
adc
in
adc
in
adc
in
adc
mov
outsl
cmpsl
es
aas
adc
popf
push
lcall
sub
pop
rcrb
xlat
mov
sbb
and
cmpsb
push
lea
in
scas
sub
or
adc
jne
in
adc
add
inc
in
adc
popf
push
paddb
popf
dec
push
repnz
cmp
ds
in
bound
iret
adc
out
jbe
lret
nop
mov
repz
xor
loopne
outsb
jmp
fcomps
and
xorl
daa
mov
push
push
xor
push
das
shlb
les
loopne
cwtl
xchg
pop
adc
add
imul
pusha
push
mov
jecxz
and
in
mov
jno
in
adc
add
fnstsw
add
or
add
push
mov
pop
cmp
push
dec
in
lock
cmp
xchg
jmp
jo
loope
test
add
xchg
xlat
nop
stos
pop
imul
je
jno
mov
xor
inc
mov
or
roll
adc
pop
xchg
out
insl
loopne
js
jne
aam
and
imul
stos
mov
fs
test
sub
daa
sti
inc
test
add
das
arpl
pop
out
adc
adc
adc
adc
adc
add
lahf
out
adc
jb
mov
nop
lret
sub
fistpl
mov
loope
in
call
push
pop
cwtl
and
add
jae
inc
arpl
mov
sti
aam
aam
xchg
pop
rcll
jb
insb
test
xor
push
sub
out
adc
ret
add
shl
adc
out
adc
out
adc
jmp
cmp
sub
jno
movsb
add
pop
and
inc
int
push
in
mov
mov
enter
jns
dec
xchg
std
mul
push
and
orb
orl
cmpsb
das
test
pushf
push
mov
bound
jmp
test
pop
mov
repnz
adc
pop
mov
add
or
bswap
jmp
mov
sub
jns
js
inc
mov
mov
int
mov
mov
lret
ret
into
jg
lods
mov
or
in
pcmpgtw
xlat
mov
sub
les
jno
xor
add
mov
or
and
or
test
popf
clc
loop
xor
xor
jne
out
ret
dec
mov
insl
cmpl
mov
or
mov
inc
andl
xchg
das
cltd
mov
inc
push
pop
pushf
push
js
clc
push
or
pop
ja
in
icebp
std
inc
pop
lcall
inc
xchg
cwtl
fisttpl
inc
mov
cwtl
int3
mov
mov
pop
inc
inc
or
add
jle
lock
jae
subb
jle
loopne
push
adc
scas
fsubs
jne
cli
jl
sti
dec
xchg
mov
call
mov
sti
das
xlat
inc
shr
mov
dec
les
aas
hlt
imul
gs
cmp
adc
pushl
loop
int3
mov
addl
adc
scas
imulb
dec
clc
not
sub
jle
adc
faddp
or
push
ljmp
pop
addb
enter
mov
push
adc
mov
addr16
test
sbb
pop
imul
or
pop
call
sub
xchg
dec
or
push
mov
inc
mov
daa
je
es
mov
xchg
inc
jge
in
loop
mov
hlt
lods
loop
jbe
dec
pop
adc
leave
xor
adc
push
pop
adc
fcoml
adc
jbe
push
pop
adc
imul
push
call
imul
jns
daa
mov
or
mov
mov
pop
stc
xor
sub
add
jae
int3
flds
add
jmp
gs
insb
call
sbb
dec
test
push
jle
aad
sahf
xchg
sub
lock
push
pop
aad
adc
pusha
or
pop
popa
mov
fiaddl
cmpb
ljmp
dec
pop
adc
scas
dec
push
adc
pop
fsubrs
pop
adc
in
out
pusha
push
fs
sub
or
add
xor
in
adc
adc
pop
call
push
inc
int3
and
shll
fwait
fwait
mov
adc
loop
loop
xchg
stos
xor
mov
es
xchg
push
adc
nop
mov
fbstp
push
push
mov
jb
xlat
cld
nop
sbb
dec
pop
adc
insl
insl
insb
test
pop
loopne
pop
adc
loopne
pop
adc
outsb
mov
mov
imul
fwait
loopne
pop
adc
lcall
frstor
dec
shlb
ljmp
mov
adc
packuswb
cmp
dec
or
fdivr
lret
ljmp
sub
adc
outsl
rcll
push
sub
arpl
test
mov
mov
xor
cmpsl
xchg
popa
dec
outsb
stos
mov
test
lods
inc
es
fs
jb
mov
scas
push
movsl
cld
rclb
leave
or
mov
std
cmp
dec
adc
sbb
mov
jecxz
ja
jne
jg
push
fs
jno
ret
mov
cwtl
movsl
cmc
rol
stos
push
imul
add
leave
adc
popf
cmp
daa
outsl
imul
cmp
pop
adc
jbe
ljmp
je
sbb
notb
push
es
dec
and
mov
lds
movswl
push
pop
call
sbb
fistpl
rcrl
mov
mov
popa
xchg
pop
aas
xchg
inc
std
add
mov
movsb
pop
jge,pt
dec
pop
jo
loop
and
pop
adc
mov
lock
push
push
xchg
lcall
movb
mov
xor
cs
sbb
mov
std
add
jle
shrb
lods
xchg
jecxz
shlb
adc
nop
imul
add
mov
cmp
mov
notl
jecxz
or
mov
dec
push
loopne
and
xorl
js
mov
jp
add
mull
sti
mov
dec
add
lret
cmp
and
lock
popf
arpl
mov
mov
ret
arpl
jle
adc
xchg
rcl
int
adc
push
dec
orl
jmp
mov
rolb
in
cltd
cwtl
xor
das
arpl
std
jmp
pop
or
cli
mov
icebp
or
jb
data16
jle
adc
in
push
addb
xchg
fidivrs
cli
or
notb
pop
pusha
mov
jle
idivb
jecxz
pop
pop
or
lret
adc
or
inc
cmp
bnd
fdivrp
dec
lods
inc
jnp
not
int
ja
cld
add
xchg
sbb
cs
into
mov
movsl
test
pop
adc
rcll
pusha
movsl
dec
add
jae
push
out
or
mov
cli
in
jae
fsts
sbb
sub
icebp
data16
iret
ljmp
jne
mov
dec
inc
in
ret
mov
cmp
inc
mov
xor
mov
mov
stos
adc
call
mov
and
sub
xchg
loope
add
sub
ret
in
out
mov
aad
push
push
sub
mov
push
sub
add
dec
adcl
jbe
xor
fildll
scas
sub
pop
jle
sbb
scas
pop
cld
jmp
mov
jmp
mov
add
fidivl
pusha
ss
fstpl
push
loopne
sub
mov
fistpl
fwait
sbb
mov
ds
in
in
cmc
pop
sbb
je
sar
stos
jg
out
mov
popa
fdivr
mov
inc
sub
xor
inc
imul
es
shl
inc
out
sub
gs
mov
push
popa
xchg
out
addr16
movsl
in
aaa
adc
or
pop
rcr
push
pop
mov
mov
inc
cmp
push
xchg
stos
lret
push
jp
clc
aam
js
hlt
xor
jo
xor
xchg
loop
lret
jo
jns
sub
nop
scas
pop
inc
push
stos
adc
adc
jmp
push
stos
adc
dec
divb
mov
lahf
cmp
movsb
aad
lock
fcmovnb
add
dec
lods
jo
or
aas
aad
mov
mov
sub
xchg
or
cmpsb
ja
cmp
insl
clc
mov
cli
mov
ret
and
les
inc
ret
xchg
fwait
and
cmp
mov
dec
scas
jle
xor
cmp
in
aaa
arpl
add
mov
inc
pop
cli
add
popa
aas
movsb
pop
cmp
lret
mov
mov
sub
or
lds
jno
jnp
mov
scas
das
sbb
ret
mov
pop
pop
push
aam
xchg
jo
cmp
or
bound
and
pop
xchg
mov
push
rorl
pop
loopne
pop
mov
cmpsb
adc
mov
cmp
sub
movb
add
mov
or
fs
sub
shrl
sub
jecxz
add
aad
add
add
or
jg
daa
rolb
jg
lods
mov
push
or
push
fs
incl
add
aas
mov
or
test
int
cmp
sub
jbe
or
call
xchg
aaa
fstps
push
or
outsb
fstps
std
jo
cmp
cld
jnp
adc
aas
mov
roll
or
mov
sub
mov
out
cmp
test
or
das
sub
cmp
shll
sub
lds
mov
mov
or
and
add
out
ficoms
xchg
ret
scas
sti
cld
out
push
inc
add
add
xchg
adc
push
push
dec
and
dec
jb
js
leave
mov
sahf
cmc
enter
ja
mov
popf
cmp
inc
mov
pop
jg
imul
daa
xchg
xchg
mov
cld
jp
test
xchg
fucomp
or
mov
sub
imul
jne
mov
emms
sti
scas
push
ds
mov
fiaddl
add
and
mov
std
xchg
adc
and
pop
or
clc
xor
scas
pop
fidivrl
add
test
push
daa
roll
cli
orb
add
cli
mov
pusha
shl
ret
and
add
adc
pop
push
aad
je
out
push
mul
lods
sub
and
jns
rclb
adc
fdivl
cmp
add
mov
adc
sbb
mov
push
push
jno
jnp
iret
pusha
cmp
mov
cmpsl
push
cmpsb
cmp
clc
lds
cmpsb
ret
dec
fcoms
mov
dec
popl
cmp
and
movsb
dec
xchg
and
xchg
push
inc
das
insb
xlat
enter
movsb
jbe
test
js
or
aad
sub
lods
fwait
in
test
xlat
test
dec
rol
loopne
negl
mov
xor
jmp
xchg
dec
loope
push
push
icebp
pop
xchg
and
jmp
movsb
mov
jbe
pop
ss
mov
add
dec
cmp
mov
testl
in
call
lret
test
insb
outsl
push
mov
jp
aam
imul
mov
loopne
int
outsb
adc
xor
sub
sub
adc
push
shll
daa
add
cmpsb
adc
xor
mov
or
xor
jo
call
jo
or
or
inc
inc
ljmp
add
sub
mov
jae
stos
ffreep
dec
ljmp
fists
sub
les
out
lods
pop
fdivl
fsub
aam
gs
sub
jb
divl
stos
mov
mov
and
jbe
mov
sub
dec
xchg
mov
nop
loopne
xchg
mov
xchg
add
dec
and
xor
adc
fisttpl
das
cmp
repnz
scas
call
mov
scas
stc
xor
jmp
xchg
push
push
pop
adc
push
jl
jno
les
ja
mov
jmp
pop
inc
or
jno
jge
mov
lea
xor
cmp
jg
adc
inc
sbb
xor
cld
or
jnp
pop
add
cmpsb
lret
adc
pushf
in
mov
test
pop
repnz
inc
push
dec
jae
rorl
jo
push
adc
inc
jle
jg
inc
or
pop
dec
hlt
repz
mov
mov
cwtl
testb
je
rorb
or
mov
xlat
stc
cwtl
jnp
fldl
mov
mov
cmp
lods
inc
and
adc
adc
mov
adc
adc
adc
pop
sbb
shrd
adc
sbb
or
addr16
arpl
sub
xchg
mov
mov
sti
mov
in
mov
adc
mov
dec
xlat
leave
mov
in
inc
xchg
push
out
mov
popf
cmp
sub
xchg
leave
mov
xchg
cmp
into
mov
bound
leave
std
enter
cli
loopne
sbb
cld
mov
fcom
jmp
stos
xor
sub
loop
jp
je
pushl
loop
repnz
sti
jge
imul
in
push
inc
stos
adc
ja
mov
pop
inc
cmpsb
sbb
addb
inc
sti
adc
dec
imul
jae
mov
test
shll
js
shl
sub
aaa
mov
mov
scas
lods
sbb
xlat
fdivp
notb
fsubl
fists
imul
icebp
ret
mov
and
adc
test
mov
cmp
add
adc
outsb
xchg
cs
hlt
sbb
xchg
push
push
sbb
cmc
stc
xchg
and
icebp
and
jl
add
int
mov
push
pusha
rcrb
mov
jns
fwait
cs
fsubs
std
stos
push
mov
bound
call
push
adc
test
cmp
mov
out
call
mov
inc
mov
or
movsb
cmp
shl
sbb
add
lret
sub
scas
sub
sub
adc
inc
icebp
outsb
les
lret
xor
dec
das
loop
outsb
lcall
lahf
lods
int3
mov
arpl
xor
push
adc
aad
sub
ja
out
pusha
jg
adc
inc
push
idiv
sbb
movsl
cs
pusha
cwtl
test
pop
shrb
in
or
lea
fiadds
icebp
xor
add
sub
mov
aam
dec
adc
xchg
adc
je
jmp
inc
lcall
movsl
nop
js
or
pop
dec
xchg
jbe
mov
cmp
lds
push
mov
jecxz
adc
jp
inc
sub
xchg
cmc
je
lods
out
push
jl
dec
aaa
push
xchg
mov
pop
fcmovu
sbb
mov
data16
ss
orb
and
nop
fstpl
lret
xchg
outsb
add
inc
push
neg
mov
sti
lods
xor
sbb
repz
cwtl
dec
mov
inc
ljmp
aam
adc
mov
sub
aaa
push
dec
sub
fistps
jp
rcl
pop
xchg
xor
test
jne
shrl
xchg
push
fildll
lcall
mov
faddp
or
sbb
cmp
imul
js
sub
incl
push
add
jae
pusha
lcall
int
push
imul
push
jmp
add
sbb
mov
js
sbb
iret
inc
das
fmul
fs
pushf
dec
data16
cwtl
inc
popl
add
out
dec
mov
mov
xor
and
mov
test
das
pop
aaa
mov
xchg
lret
jno
cld
pop
fwait
cld
stos
out
popf
cmp
lods
mov
dec
jbe
inc
arpl
mov
mov
add
hlt
cwtl
repnz
push
jae
in
cltd
aam
imul
inc
fiaddl
pop
das
cwtl
stc
lahf
mov
lret
arpl
mov
das
aad
or
mov
ljmp
push
ss
cmp
inc
mov
mov
out
jo
fisttpll
mov
repz
inc
cs
imul
hlt
or
pop
pop
int
insb
fcoms
scas
lret
xchg
or
xchg
imul
cmp
sbb
mov
das
pop
adc
inc
sbb
jo
jecxz
lds
push
rcl
cld
arpl
xchg
mov
lds
push
mov
add
lods
pop
mov
or
xlat
pop
cmp
insl
cmp
pushw
dec
add
xor
imul
xor
mov
cmpsl
lret
mov
cld
inc
push
push
rcll
mov
inc
test
pop
pop
sti
aaa
mov
ljmp
maxps
push
lea
std
scas
movsb
inc
test
roll
fcmovb
push
mov
aad
push
push
inc
or
pop
add
popa
push
hlt
inc
cli
sbb
imul
sbbb
adc
pop
test
hlt
fwait
sbb
mov
sub
pop
adc
pusha
sbb
movsb
sub
add
jmp
or
push
clc
sub
sahf
sbb
xor
sbb
xor
mov
cmp
pop
add
ljmp
mov
ljmp
lods
jnp
or
fdivrl
fistps
sbb
pop
imul
add
jecxz
in
inc
sub
into
sbb
test
popa
jno
jmp
push
ret
push
and
push
xchg
lds
jns
das
dec
jle
xchg
push
adc
mov
fwait
mov
mov
outsl
daa
imul
repnz
jnp
icebp
push
cmc
lods
ljmp
pop
xchg
std
dec
ret
repnz
icebp
jg
cmpsb
adcl
jae
adc
mov
mov
insb
sub
mov
xlat
push
jmp
sub
cmp
shrl
sahf
lret
shr
pop
aaa
jecxz
aas
jle
xchg
sub
adc
in
inc
sahf
bound
mov
push
aaa
inc
xor
dec
jecxz
pop
xchg
pop
stos
mov
xor
push
in
ljmp
les
pop
push
std
mov
and
pop
adc
inc
inc
loopne
stc
lret
xchg
xchg
rclb
push
mov
test
cmpsb
sbb
lock
mov
pop
ljmp
jb
ss
mov
in
mov
xchg
mov
rcll
xor
into
jns
or
dec
mov
push
cmp
jg
insl
sbb
out
or
iret
mov
imul
push
ds
aaa
rcrl
dec
pop
adc
add
daa
sub
sub
sub
mov
mov
arpl
push
in
icebp
or
lcall
sub
inc
inc
lret
sub
aaa
aaa
push
add
fadds
xchg
in
dec
pop
sti
xchg
in
nop
das
inc
or
jns
jb
cmp
aas
lock
pop
adc
and
sbb
shrb
out
sbb
inc
dec
pop
pop
test
mov
sbb
sbb
jg
arpl
sub
push
push
push
hlt
bound
or
aam
adc
adc
xchg
insl
dec
aaa
rorb
out
add
in
sub
adc
adc
inc
mov
in
das
ja
jo
repz
cmp
out
dec
xor
ud2
fistpll
mov
adc
test
push
add
lds
aas
mov
imul
popa
mov
pop
pop
mov
sbb
push
pop
adc
stc
jo
loope
notl
inc
movsb
fmull
adc
mov
xor
cwtl
dec
and
add
adc
mov
js
movsb
mov
cmp
jle
mov
pop
xchg
ret
loopne
movsl
sbb
xor
jle
lcall
addb
mov
sbb
mov
push
adc
adc
cmp
sbb
test
fdivr
hlt
jmp
out
fcompl
in
sub
pop
adc
call
shrl
cltd
jne
xchg
in
sti
jle
and
push
pop
sbb
pusha
mov
mov
mov
jb
mov
scas
out
jb
cltd
outsl
jge
addl
sbb
popf
push
inc
and
sub
sub
xor
fldl
inc
mov
addr16
mov
js
cmp
xor
pop
sets
mov
mov
jne
jp
adcl
dec
sbb
mov
cmpsb
cmp
movsl
jne
or
push
mov
pop
test
leave
lds
inc
je
push
adc
push
stc
mov
mov
mov
shll
adc
pop
mov
adc
mov
cmpsl
lcall
mov
fwait
lcall
repz
xor
adc
testl
cmp
js
mov
mov
sub
pop
addb
out
in
popf
subl
pop
enter
mov
jno
ret
push
mov
test
mov
push
lea
daa
call
sub
jg
xchg
and
je
push
adc
or
cmp
pusha
inc
sub
hlt
mov
out
jb
dec
pop
adc
movsl
dec
addr16
dec
mov
inc
cltd
mov
fcompl
fcoml
adc
mov
es
dec
enter
leave
sbb
mov
movsl
xchg
push
sbb
ret
lcall
xchg
jbe
mov
jnp
adc
nop
out
cmp
notb
push
xacquire
andb
imul
nop
pop
stc
aam
in
xor
test
push
push
jno
inc
adc
test
cmpsl
shl
cmpsb
fcmovnbe
repz
push
cmc
mov
mov
adc
jmp
dec
popf
adc
dec
cmp
mov
rorl
cld
cmpb
nop
jbe
jecxz
stc
loope
loopne
mov
jb
mov
pusha
ja
sahf
dec
jmp
jne
jno
enter
loope
orl
sub
sahf
xor
jnp
rcl
fwait
xlat
cmpsl
add
pop
out
insl
mov
outsb
lods
orb
cmpsl
filds
add
and
and
push
push
nop
pop
jne
mov
inc
test
push
adc
dec
pop
jle
sbbl
fwait
mov
mov
push
push
dec
push
jle
inc
pop
inc
fstpl
ret
and
test
jbe
mov
sub
fldl
mov
aaa
and
mov
inc
and
jns
lock
loopne
les
xlat
ja
mov
pop
xor
js
les
inc
hlt
adc
shrl
sub
addb
sbb
ret
mov
or
mov
or
push
or
cs
mov
mov
sub
push
incl
inc
xchg
xchg
leave
push
push
pop
cs
bound
pop
movsl
lods
mov
std
cli
hlt
xchg
jmp
xor
jle
jecxz
cs
mov
dec
cmpsb
pop
das
arpl
or
or
or
xchg
mov
popf
push
cs
xor
xor
sub
pop
adc
inc
push
mov
pushf
bound
sbb
mov
lods
and
inc
gs
push
push
mov
lods
lcall
or
jnp
push
jmp
dec
xchg
add
sub
add
lret
mov
adc
movsb
sbb
add
and
add
xchg
jnp
neg
loopne
addl
push
gs
scas
dec
jg
xchg
mov
addb
call
push
sub
inc
inc
sbb
sub
popf
stc
inc
aad
dec
mov
xor
cs
das
mov
rorb
dec
ds
and
movsb
dec
pop
adc
push
rclb
inc
jmp
xchg
xor
mov
jle
xlat
sub
sbb
mov
or
sahf
sti
lret
dec
mov
int
enter
pop
sub
push
cmp
test
shll
sub
add
loopne
xor
cmp
xor
popa
xchg
lahf
dec
adc
into
or
out
test
xor
lcall
jno
and
subps
mov
stos
sbb
cmc
inc
mov
jmp
mov
fildll
bound
inc
rcll
jl
sub
push
mov
jg
scas
pop
xchg
ficoms
jne
cltd
out
aaa
xor
and
ds
jecxz
nop
push
mov
add
cs
data16
cli
clc
fs
clc
in
jb
cwtl
push
xchg
test
mov
int3
mov
push
jb
test
lods
inc
fwait
xor
loope
int3
adc
mov
xor
pushf
dec
loop
mov
push
mov
mov
mov
pop
adc
push
inc
ret
or
scas
int
repnz
adc
scas
lock
sbb
jle
inc
test
popf
mov
pop
adc
xchg
shrl
xchg
fcmove
hlt
xchg
mov
scas
xor
jb
sahf
fcmovu
pop
lahf
fld
cmc
test
jmp
shll
sbb
push
jp
dec
xchg
xlat
mov
loop
xchg
sti
mov
jg
sub
pop
adc
inc
faddl
mov
dec
sbb
or
insl
jmp
cltd
in
sub
adc
inc
subb
rclb
fnstenv
int
shlb
xor
shll
sbb
inc
sub
dec
push
xor
pop
aad
and
mov
movsl
scas
imul
lods
adc
pop
push
mov
and
push
out
mov
mov
std
cmp
les
fdivrl
jbe
and
jecxz
dec
rcrb
xor
mov
xchg
adcl
icebp
xchg
jbe
mov
mov
call
adc
dec
adc
xchg
push
mov
mov
add
jns
inc
lcall
js
inc
adc
xor
adc
imul
inc
rcl
std
lods
xor
lcall
aas
push
das
pop
cmp
mov
mov
fs
je
push
mov
int3
mov
lock
xchg
and
dec
shrb
jl
lea
ja
mov
xor
sub
repz
clc
cmc
jle
pop
add
jmp
add
lods
aaa
test
jne
je
mov
pop
push
arpl
xchg
xor
pop
sub
inc
ss
lds
shll
push
mov
mov
pushf
push
ss
movsl
cmp
inc
hlt
incb
inc
mov
lds
adc
xor
inc
or
movsb
adc
cmc
adcb
jecxz
lds
addb
inc
lods
mov
pushf
jbe
adc
ffreep
and
mov
xor
add
jbe
shrb
lea
repz
add
lcall
jg
pushf
push
mov
call
pop
leave
jo
test
orl
cmp
xor
dec
andb
movl
sbbb
icebp
dec
pop
fildll
outsl
out
test
sub
jno
inc
hlt
mov
stc
daa
sar
jno
and
das
in
pusha
daa
mov
pop
repnz
fwait
hlt
jg
sbb
je
xor
cmp
push
ret
imul
fildl
daa
decl
jb
mov
inc
jle
jmp
jmp
fsts
cli
test
sub
sbb
shrl
popf
ret
or
mov
mov
fiadds
adc
cmp
xor
xor
icebp
rcrl
movsl
sub
and
idivb
pop
add
push
jp
aam
lods
jmp
je
das
cltd
mov
test
add
adc
dec
movsl
add
cld
inc
adc
adc
daa
xchg
jp
jnp
mov
jge
repnz
and
mov
rcrb
rolb
stc
insl
and
cli
roll
pop
aad
jecxz
cld
jmp
adc
jecxz
shrb
sbb
mov
das
insb
out
xorl
cmp
push
xchg
test
bound
hlt
mov
sbb
pop
ror
mov
cmp
mov
add
jae
outsl
jae
jmp
jnp
insl
fstpt
xor
jb
mov
movsb
mov
or
adc
push
lret
mov
dec
xchg
ret
or
push
sub
inc
imul
loop,pn
ss
sub
out
hlt
repz
addr16
cmpl
and
mov
and
pop
adc
mov
xlat
pushf
lahf
test
cmp
pop
push
inc
inc
insl
jmp
dec
mov
mov
push
xchg
lds
push
add
jg
leave
mov
ljmp
xlat
sbb
jne
clc
sahf
cs
xchg
pop
cld
ds
cmp
mov
push
repnz
push
jns
dec
aaa
pop
mov
pop
mov
dec
push
and
stos
repnz
adc
pop
ljmp
sarl
mov
xchg
add
and
mov
insb
push
mov
xor
aas
pushf
popf
sbb
sbb
sti
jg
fiadds
dec
dec
inc
pop
arpl
lock
lods
into
dec
inc
pushf
jp
mov
int
jmp
mov
add
add
cmp
add
pop
inc
js
div
fdivrl
add
fisubl
xchg
cmp
ja
mov
sub
jle
cli
add
push
mov
and
lahf
sub
pop
jge
mov
adc
addl
adcl
les
sbb
and
pushf
je
lret
addb
fldenv
add
pop
loope
mov
and
movsb
test
or
lret
adc
test
repnz
sti
in
add
pop
push
push
add
adc
cmpsl
push
push
je
jecxz
dec
pop
mov
inc
jo
pushf
push
rcrl
mov
lods
stos
xchg
shr
aad
jo
xchg
orb
mov
jmp
cmp
pop
jno
xchg
out
loop
push
cmpsb
int3
ret
call
xchg
into
popf
arpl
inc
xor
pop
shrl
mov
add
call
lcall
mov
std
xor
andb
mov
mov
pushf
test
pop
ljmp
xorb
js
into
jl
loope
fidivl
fcoms
or
pushf
test
bound
or
sub
inc
and
test
clc
push
xchg
shll
jl
push
xchg
repz
jae
pop
cli
popa
movsb
inc
subb
pusha
mov
add
jg
popf
inc
int
hlt
cmpb
pushf
test
dec
mov
add
insb
out
and
les
mov
jmp
pop
pushf
push
imull
mov
jbe
xchg
sub
ja
jmp
mov
mov
mov
cmp
int3
cmp
cltd
and
fwait
add
xlat
fnstenv
enter
sub
cmpsb
movsl
cs
mov
mov
sti
mov
xchg
mov
or
data16
sarl
sub
lods
orb
cmp
mov
mov
and
jle
mov
in
cltd
jbe
out
adc
dec
repz
inc
pop
les
cwtl
cwtl
add
ja
cld
aam
and
xchg
sbb
daa
pop
test
pop
aad
sub
mov
and
dec
clc
test
mov
stos
in
scas
decb
lcall
loop
ret
mov
pop
inc
xor
cmpsl
fstp
fisttpll
add
lods
subb
sub
adc
xchg
gs
daa
jecxz
jl
dec
xchg
sbb
xor
div
ss
dec
std
js
int
mov
pop
adc
daa
leave
jp
cli
lret
ds
cltd
sub
insb
shl
mov
adc
sbb
sub
and
ja
mov
lods
test
fsub
out
insl
movsl
and
ror
jbe
cltd
dec
xchg
cmp
pop
sub
popa
push
jp
add
cmpl
lret
fnsave
cmp
mov
and
dec
enter
test
inc
rclb
pop
popa
lods
jae
push
filds
les
sub
int3
pop
xchg
rorl
outsl
pusha
lret
cmp
jno
adc
and
jge
or
mov
ret
jnp
push
inc
fldenv
cmpsl
stos
push
in
fdiv
or
xchg
push
ror
inc
mov
inc
aas
push
in
in
cmc
test
shll
lock
or
gs
lds
iret
jns
push
lock
or
fdivrs
adc
dec
jl
inc
mov
incb
roll
out
xchg
arpl
popf
cmp
lods
xor
dec
inc
inc
std
jo
call
and
rorl
adc
adc
cli
add
mov
push
pop
hlt
adc
adc
jl
negb
mov
add
shrl
popf
ja
push
adc
dec
push
pop
enter
xlat
popa
lock
inc
push
and
push
xor
push
jmp
inc
mov
ljmp
adc
testb
arpl
pop
inc
mov
or
adc
sbb
pop
adc
lds
fsubs
mov
mov
mov
dec
pop
ds
pop
mov
sub
scas
jle
adc
xchg
jno
divps
inc
pop
adc
adc
sub
shlb
mov
sub
or
roll
fstpl
jge
xor
addb
jne
mov
das
lret
mov
add
pop
cmp
cmpsb
and
push
cmpsb
clc
mov
mov
mov
adc
adc
jg
movsb
adc
adc
adc
shll
hlt
mov
jle
clc
movsl
push
lods
mov
mov
mov
sub
test
pop
adc
xchg
cli
in
pop
dec
xchg
adc
sub
adc
push
jnp
sbb
inc
pop
adc
inc
pop
adc
adcb
pop
sbb
dec
stc
sti
out
sbb
adc
les
les
cld
mov
jo
push
push
cwtl
mov
jge
push
int3
jns
jae
mov
popa
jae
inc
mov
fstenv
xacquire
sbb
ja
push
dec
shrb
sub
sahf
decb
mov
mov
cltd
xchg
xchg
cltd
xor
sub
roll
push
sub
inc
sub
mov
jns
jge
pusha
cs
dec
mov
pop
adc
dec
daa
jno
outsl
pop
mov
adc
or
mov
pop
scas
in
jmp
subb
dec
pop
adc
pop
adc
cmp
cltd
dec
xchg
sbb
inc
mov
sbbb
xor
adc
mov
add
cmpsb
pop
adc
push
push
sub
mov
insb
sub
int3
xchg
xchg
negb
pop
adc
scas
adc
mov
inc
fstpl
daa
cltd
hlt
mov
fstpt
outsb
shll
xor
pop
adc
fs
cli
xor
pop
insl
fwait
mov
mov
mov
jne
pop
cli
mov
adc
mov
leave
into
movsb
and
mov
mov
add
lock
bound
push
adc
mov
and
adc
ss
and
orb
imul
mov
push
icebp
inc
bound
push
jg
inc
lods
mov
mov
push
mov
int3
fcmovnu
xchg
inc
mov
outsb
and
sbb
lret
push
adc
xchg
fcoms
push
aaa
lret
mov
ljmp
lds
popf
push
cmpsb
cmc
push
popf
jnp
leave
sub
sbb
adc
bound
dec
pop
inc
into
pusha
call
cmp
add
repz
push
adc
je
lods
push
sub
cmpsl
lcall
fsubrl
shrb
stc
dec
scas
cwtl
ja
mov
popa
iret
stos
test
sbb
in
sub
call
inc
inc
mov
repz
mov
mov
repnz
or
xchg
mov
jge
inc
pmaxsw
pop
xlat
div
fwait
and
or
push
sar
xchg
cltd
int3
push
stc
sub
aaa
add
mov
sub
sub
pop
adc
mov
jne
mov
das
stc
sbb
aam
push
adc
test
mov
movsb
jle
pop
inc
jns
faddl
jmp
or
mov
adcb
loop
jns
roll
cmp
or
and
arpl
pop
enter
mov
out
or
std
push
out
popf
push
loop
or
sub
or
ret
add
ss
and
mov
xchg
int
adc
cmp
dec
dec
pop
push
mov
ret
out
inc
and
aaa
jb
pop
aas
jl
adc
stos
mov
negl
das
and
les
mov
sahf
and
push
das
mov
jne
fsubs
cmpsb
addb
xorl
jl
jnp
cmp
stos
pushf
int
fists
jmp
inc
subl
xlat
pop
addb
mov
xor
stc
stc
stos
cs
pop
fcmovnb
lea
pop
push
dec
in
sar
test
cmp
in
out
cli
add
in
icebp
daa
add
add
arpl
sub
adc
push
mov
push
loop
pop
pop
mov
clc
add
mov
pop
mov
sub
jbe
test
ss
lds
pop
jp
pop
mov
xlat
inc
sahf
aad
movb
les
dec
push
pop
pop
fcomip
mov
lcall
mov
lods
mov
pop
adc
mov
movlps
push
mov
push
shl
add
stc
mov
add
aas
mull
jo
out
dec
sbb
mov
fsubs
rcr
imul
mov
lcall
adc
and
fld
xor
xchg
lcall
pop
pop
scas
repnz
pop
adc
pop
pop
aam
les
loopne
fs
xchg
arpl
decl
lods
inc
rcrb
mov
cmc
leave
mov
out
mov
mov
sbb
idivl
xchg
sbb
inc
aaa
test
xchg
test
je
mov
cmpsl
cmp
cli
into
scas
push
adc
push
ss
sbb
stos
push
cli
fisubrl
push
int3
push
jns
sub
push
mov
or
sub
push
pop
cltd
xchg
stos
mov
mov
dec
imul
cmc
or
xchg
dec
dec
dec
inc
popa
cltd
fcompl
push
cli
lret
mov
insb
loop
fstl
or
mov
lods
or
cltd
sahf
adc
inc
out
pusha
sub
insb
xchg
js
aam
jo
mov
not
fnstenv
leave
outsb
mov
movsb
bound
sub
ja
jns
inc
bound
mov
out
mov
sub
adc
mov
popf
push
shrl
mov
mov
cmp
pop
adc
in
fs
fwait
inc
pop
push
gs
scas
cmp
xchg
cltd
loopne
repnz
mov
aas
nop
jp
xor
dec
pop
repz
aaa
cmpsb
jo
sbb
in
sub
subl
cltd
leave
pushf
xor
xor
jnp
sbb
push
pop
adc
sarb
shll
shll
movl
or
ja
pop
ljmp
inc
pushf
mov
call
dec
or
xor
jns
adc
idiv
faddl
mov
adc
cmp
icebp
cltd
pop
mov
enter
lcall
mov
jg
ret
and
jnp
inc
inc
mov
mov
cmpb
lret
les
push
mov
jg
sbb
loopne
inc
push
push
jg
add
inc
rcrl
fs
int3
lret
xchg
test
jbe
add
xor
iret
and
sbb
or
push
dec
filds
pop
not
rcl
push
movl
jno
mov
mov
and
lds
push
push
imul
inc
fsts
fidivl
aas
adc
cmpsb
sbb
cmp
xchg
repnz
shl
cmp
mov
das
pop
cmp
xor
jge,pt
mov
xlat
in
push
repz
dec
cmp
or
add
hlt
call
jnp
in
xchg
pop
lds
daa
ret
fisubrl
mov
das
fbstp
sbb
push
xor
xchg
jg
imul
orb
dec
pop
adc
aas
pushf
and
mov
add
adc
pop
mov
shr
mov
cs
cmp
cmp
pushf
test
add
daa
push
or
das
popf
push
and
loopne
or
sub
sub
pop
adc
shlb
jg
outsl
or
pop
jp
sub
bound
and
rcrb
jno
movsl
or
loope
ret
jmp
cmp
cs
sbb
pop
adc
mov
gs
sbb
pop
jmp
mov
cmp
daa
or
pop
jb
mov
or
cltd
addr16
jns
iret
sarb
mov
add
pop
sub
pop
adc
push
sbb
das
lcall
xchg
jmp
or
les
out
idivl
jo
out
lea
mov
jo
dec
popa
xor
and
divb
lods
adc
pop
adc
rcll
scas
mov
jns
sub
jmp
decl
imul
lods
jbe
ja
jecxz
test
and
daa
outsb
and
xchg
dec
jne
in
daa
mov
mov
jo
mov
dec
rcr
mov
repnz
imul
xor
inc
mov
aad
repnz
lods
inc
or
xor
xchg
xchg
cmp
dec
shr
lea
push
jbe
push
negl
cmp
and
pop
cli
fstpl
xchg
pop
xchg
aam
mov
xor
gs
popf
mov
mov
cmc
mov
mov
arpl
mov
pop
adc
sub
pop
inc
inc
add
xchg
jle
insb
popf
call
inc
les
js
mov
mov
inc
psubb
fldl
jne
push
mov
mov
fs
data16
lods
cmp
or
xchg
jo
movsl
mov
insl
sarb
aaa
inc
aas
mov
inc
adc
test
mov
cmp
mov
and
mov
and
adc
sbb
inc
int3
fildl
ror
pop
mov
data16
and
ret
aam
xchg
leave
jbe
mov
loop
xchg
push
rcrl
mov
xchg
lret
xor
addb
pop
add
dec
dec
inc
xchg
add
stos
sub
aam
jg
inc
fucom
cli
scas
sbb
xchg
jno
sub
pushf
xchg
dec
ss
adc
dec
add
fdivrs
add
cmp
sub
cli
pop
mov
xor
cmp
sub
mov
outsb
ret
xor
out
das
push
mov
mov
push
nop
xchg
cmp
loopne
fldt
in
je
outsb
jnp
mov
add
stc
inc
cmp
fs
repz
xchg
not
pusha
fnstenv
mov
rolb
and
sub
jb
inc
add
push
shll
mov
movsb
test
gs
add
aaa
xchg
mov
or
movsl
add
dec
cli
sub
pop
adc
add
das
sub
sti
mov
shl
hlt
bound
mov
xchg
shl
lcall
inc
push
mov
js
shll
rclb
inc
clc
mov
xchg
mov
and
incb
adc
js
pop
pop
pop
cmpb
mov
mov
ret
aam
aad
sub
lock
lea
xchg
addr16
pop
aaa
cmp
pop
adc
mov
cmp
and
dec
dec
or
mov
mov
pop
leave
jl
and
mov
push
inc
add
inc
fadd
and
shrb
add
xchg
push
pop
das
fnstsw
jne
mov
arpl
cmpsb
adc
jecxz
add
push
jmp
jbe
jne
lcall
movb
mov
or
jmp
jno
mov
adc
sub
pop
adc
das
pop
xor
xor
ljmp
mov
insb
das
ss
cmp
insb
sahf
cmp
mov
test
inc
add
loop
mov
dec
push
dec
cmpsl
movups
jae
pop
or
pop
pop
out
and
jns
aad
inc
test
sub
xchg
out
inc
xor
sti
add
gs
push
jnp
pop
imul
mul
mov
xor
daa
bound
mov
dec
cmpsl
pop
push
cs
out
imul
loope
mov
dec
in
sub
data16
out
pop
dec
call
sub
sub
dec
sub
push
xlat
push
inc
sbb
loope
mov
pop
loopne
sbb
inc
ficomps
jno
lret
fs
push
or
out
or
in
jno
fwait
dec
jg
mov
mov
inc
adc
pusha
cmp
pop
dec
bound
adc
and
outsl
loop
fsubrl
leave
mov
or
mov
pop
sarb
arpl
jge
out
push
clc
jg
cmp
call
push
mov
pop
adc
fwait
and
adcb
fiaddl
mov
lds
cmc
rcrb
mov
in
lea
in
cmp
arpl
pop
sub
add
es
int
or
jne
pop
adc
xchg
or
lods
sti
int3
lret
xchg
rcr
aad
adc
jo
int3
adc
cwtl
fstpt
mov
pop
in
push
inc
xchg
insb
fists
lods
pop
repz
test
push
mov
in
enter
je
and
and
insl
push
loop
and
fldt
mov
push
adc
lcall
es
shrl
ljmp
xor
das
rcl
mov
mov
outsl
lcall
mov
cmpsl
lods
pop
cmp
int3
inc
cmpsl
push
cmp
imul
enter
sub
stc
sub
ret
lods
filds
pop
enter
movsb
cmp
jo
mov
push
pop
aad
or
pop
push
push
mov
cld
nop
mov
mov
add
dec
or
pop
pop
and
addr16
push
or
push
mov
fs
es
push
fwait
ret
or
mov
and
enter
xor
inc
cwtl
mov
xor
adc
addb
mov
stos
sbb
pop
das
pop
mov
lea
shlb
test
hlt
bound
mov
rorl
cwtl
fildl
mov
lds
or
mov
call
jae
in
and
pop
adc
popa
mov
cmp
pop
xor
add
push
push
jmp
insb
mov
clc
jg
leave
ret
out
push
dec
mov
ffreep
sbbb
in
jg
orl
es
or
pop
std
cmp
or
cltd
push
xchg
mov
or
rcrb
movsb
or
mov
jbe
jmp
mov
cmp
out
popf
and
shlb
decb
lret
lock
aam
adc
adc
iret
popf
cmp
cmpsb
shrb
mov
inc
enter
jnp
leave
or
int3
mov
jmp
jnp
or
shlb
mov
mov
fbstp
jo
rorl
shlb
int
push
jne
les
pop
add
cmp
sbb
push
das
fdivrs
in
daa
iret
and
inc
addl
or
cmp
push
adc
test
das
mov
pop
adc
pusha
std
inc
addb
gs
ret
imul
popa
mov
jo
sahf
adc
and
add
mov
jge
in
stc
popa
push
sbb
hlt
fwait
js
or
sub
call
sub
clc
mov
mov
arpl
inc
pop
cs
push
sbb
xchg
in
xchg
cld
lahf
sbb
mov
xorl
add
sbb
outsb
inc
lods
mov
sbb
adc
ja
xchg
cmp
cmpsl
xor
push
adc
adc
cmpsl
push
cmpsb
in
xchg
push
inc
ret
mov
mov
adc
les
adc
pop
je
cmp
dec
loope
pop
out
pusha
pushf
mul
or
popf
popa
call
pusha
pushf
mov
popf
popa
addl
pusha
pushf
and
neg
popf
popa
sub
pusha
pushf
cmp
xor
popf
popa
addr16
pusha
pushf
xor
mov
popf
popa
mov
pusha
pushf
add
xchg
popf
popa
mov
pusha
pushf
inc
popf
popa
mov
pusha
pushf
mov
push
add
popf
popa
dec
pusha
pushf
mov
popf
popa
jne
pusha
pushf
cmp
popf
popa
xor
je
xor
inc
push
inc
mov
je
mov
mov
mov
imul
mov
shl
jle
sbb
mov
pop
pop
push
push
mov
test
mov
sahf
mov
jae
mov
rcr
sub
mov
mov
test
cwtl
shl
push
inc
fdivrl
dec
add
pop
cmpsb
xchg
xchg
subl
sbb
and
cmp
inc
cmp
fidivrl
mov
pop
push
pop
mov
mov
push
jp
fwait
mov
insl
ja
cmp
pop
adc
pop
sahf
pop
xor
jo
leave
popa
cmp
dec
out
popa
faddl
lock
addb
cmpb
mov
lods
fistps
jno
and
sbb
sub
adc
push
inc
mov
sub
adcb
adc
mov
sub
inc
mov
sbb
or
out
in
jmp
jb
xchg
pop
xchg
testb
ret
pusha
xchg
outsb
pop
call
adc
mov
mov
dec
es
in
test
rolb
js
lea
jne
scas
fimuls
pop
stc
sbb
sahf
jae
subb
mov
pop
adc
lds
push
push
std
jo
call
leave
mov
lcall
int
add
das
mov
adc
adc
adc
mov
dec
loope
add
jmp
pop
mov
mov
mov
std
mov
movsb
lcall
cli
loopne
sbb
stos
jne
pop
das
pop
jae
mov
orl
repz
clc
jle
mov
dec
sub
mov
ret
jne
call
loopne
aam
jle
shrl
lods
mov
popf
lock
push
je
push
adc
pop
mov
jge
out
call
out
xor
sub
stc
or
mov
xor
push
cmp
add
hlt
fildll
out
addb
ja
hlt
bound
or
adc
mov
cli
jle
rorl
adc
adc
call
add
add
mov
sub
sub
cmp
and
movsl
sub
stos
fwait
xor
inc
rorl
xchg
rcrl
or
xchg
bound
pop
dec
movsl
rorb
aas
push
in
mov
lock
sti
inc
jo
shrb
mov
movl
data16
ja
pushl
ljmp
add
es
inc
adc
add
cwtl
lret
aam
adc
push
sti
jb
pop
in
pop
jnp
push
mov
and
adc
and
adc
icebp
jne
int3
sbbl
dec
out
add
dec
cmp
jmp
movsl
aas
cmp
jmp
jecxz
mov
movsl
pop
adc
movb
adc
sarl
xchg
mov
lea
push
push
cmp
fmul
in
xchg
insl
push
inc
lock
xchg
in
arpl
or
cmp
add
out
xor
add
dec
mov
jns
mov
fwait
popa
cld
lret
mov
xor
adc
icebp
xchg
mov
jle
push
ja
loope
test
push
loopne
and
jmp
cli
popa
xchg
test
adc
loope
icebp
fs
hlt
pop
lea
shr
fdivrl
sub
or
sub
add
push
push
adc
and
xor
daa
add
add
jg
jae
jne
dec
dec
push
pop
push
xor
fstpl
mov
or
jl
scas
rclb
pop
xor
push
adc
daa
iret
lret
test
jae
fcmovnu
popf
fadds
mov
in
pop
jb
out
nop
mov
add
push
push
add
imul
mov
call
fildll
ret
xchg
call
mov
test
cmp
in
adc
adc
aam
mov
xchg
adc
aam
sub
add
lahf
rcll
xlat
out
dec
pop
adc
aaa
cld
jle
dec
pop
adc
xchg
aad
cmp
icebp
dec
cs
or
fs
or
pop
adc
jmp
leave
movsl
pop
adc
dec
movsl
pop
adc
add
cmp
jns
lods
insb
cli
and
mov
ret
pushf
cmp
loopne
xlat
movsb
cmp
jo
sub
cs
and
insl
test
fdivrs
and
push
movsl
nop
xchg
mov
dec
jo
pop
das
and
mov
cmpb
push
inc
call
outsb
sbb
cmp
xor
mov
add
adc
pop
adc
sub
push
adc
outsb
sarl
cmp
in
addb
sub
cmp
adc
movsb
xchg
push
mov
pop
into
inc
fcom
clc
push
jb
mov
or
sub
add
cmpb
nop
das
mov
push
push
push
xchg
mov
orb
mov
cmp
sub
and
add
add
mov
addb
jb
cmc
sbb
xchg
int
out
mov
xchg
jg
and
hlt
xchg
push
adc
enter
into
popf
pop
mov
shlb
dec
sbb
inc
shrb
loope
mov
inc
cli
cli
or
xor
jae
into
adc
call
adcb
js
jns
movsb
dec
pop
adc
repz
mov
movsb
cli
hlt
dec
movsb
cwtl
loop
sbb
dec
neg
hlt
into
mov
aad
xor
rcl
dec
das
pop
sbb
fmul
adc
push
adc
cli
fimull
sub
lods
cli
hlt
fsubrp
mov
pop
lock
ret
adc
pop
adc
call
ret
call
pushf
outsl
cmp
adc
pop
pop
mov
clc
and
mov
pushl
decl
icebp
mov
pop
adc
dec
lea
jbe
loop
test
pop
mov
je
lret
popa
cmp
jmp
jecxz
and
lret
pop
adc
push
mov
mov
push
adc
dec
mov
pop
adc
sbb
dec
or
inc
call
cld
mov
pop
jecxz
lods
icebp
lcall
cmp
dec
pop
adc
jae
mov
pop
adc
loop
xchg
imul
mov
in
and
push
push
dec
pop
adc
in
mov
mov
mov
pop
adc
das
mov
push
adc
mov
push
adc
aad
imul
pop
mov
dec
pop
adc
push
cmp
xor
mov
divb
aas
mov
mov
pop
mov
mov
stc
ljmp
mov
adc
shr
leave
jo
in
test
dec
jecxz
sub
call
adc
enter
lret
or
not
lods
fisubrl
pop
fsubp
push
xor
jne
test
daa
call
test
jge
inc
push
mov
pop
pop
addr16
cmpsl
pop
les
in
jne
pop
imul
outsl
mov
pop
adc
mov
movsl
or
dec
test
mov
jae
cmp
imul
pop
adc
mov
loopne
jle
adc
jo
aam
movsl
pop
adc
imul
jp
adc
pop
or
hlt
movsl
pop
adc
or
push
mov
adc
js
inc
xor
aam
adc
int
push
mov
adc
movsl
pop
adc
lret
jle
daa
and
mov
test
repnz
fwait
jmp
insl
aas
repnz
lea
sarb
add
xchg
push
cmp
pop
or
pop
les
cmp
push
outsl
pop
push
enter
movsl
pop
adc
push
je
adc
add
inc
cmpb
mov
fiadds
mov
sub
xor
andb
push
sub
rcll
pop
les
movsl
stos
fs
add
stos
and
dec
lret
jo
sbb
xor
loope
stc
xchg
xchg
push
aam
mov
jne
into
notb
jg
xor
sub
pop
adc
es
adc
pop
adc
cld
aam
or
incb
movsb
sub
pop
adc
or
call
pop
adc
add
dec
pop
adc
push
cld
or
imul
dec
pop
adc
vsubps
mov
adc
adc
sbb
adc
shlb
stc
fs
pop
fsubl
jg
push
xchg
dec
aas
mov
jno
pop
es
add
mov
push
push
mov
inc
into
mov
aad
mov
jmp
fwait
mov
xor
cmp
je
mov
scas
mov
mov
rorb
mov
lds
pop
popl
add
add
mov
mov
les
inc
mov
mov
js
jae
cmp
arpl
ljmp
jbe
das
sub
outsl
hlt
adc
inc
or
ffree
je
xchg
addb
sbb
bound
loop
pushw
add
subb
mov
pop
inc
pop
jnp
packsswb
pop
jle
test
jns
cmpsb
mov
adc
loop
shll
mov
xchg
ljmp
pop
roll
mov
and
loope
cwtl
mov
inc
mov
dec
in
push
test
sub
popa
xchg
in
sar
clc
decl
std
cmc
in
pop
cmp
inc
push
inc
loop
sbb
push
adc
fwait
jecxz
hlt
div
sbb
xchg
fnstsw
mov
xchg
mov
paddw
pop
rcrb
push
inc
jmp
lods
sub
sbb
aas
popf
adc
mov
dec
dec
call
fwait
push
rcl
jne
mov
adc
data16
and
push
xchg
outsl
lahf
shll
dec
mov
adc
push
mov
stos
mov
pop
adc
jbe
adc
cmc
je
pop
adc
dec
subb
jae
divb
mov
adc
andl
out
sbb
adc
insb
push
pop
adc
std
cmpb
daa
mov
mov
cmp
jp
hlt
imul
add
movsl
cs
push
pop
adc
fsubr
scas
sub
pushf
jnp
test
pop
adc
imul
shll
adc
cmp
jmp
push
pop
adc
cli
pushf
out
ja
insb
push
pop
adc
add
push
pop
adc
sbb
stos
fisttpl
or
dec
pop
adc
ds
fldt
ds
fwait
cltd
sahf
adc
adc
sbb
ret
xor
add
cmpsb
xchg
jbe
cmp
mov
sbb
add
ret
mov
int3
aam
mov
loope
out
test
test
rclb
adc
pop
dec
pop
adc
inc
call
dec
pop
adc
addb
data16
jns
fildl
push
mov
imull
movsb
fmull
jg
ret
inc
sarl
leave
dec
out
pop
cwtl
mov
xlat
das
sbb
cmp
insl
test
outsb
pop
lods
mov
inc
ss
das
lea
mov
and
loopne
pop
adc
push
sub
jg
insb
icebp
jns
sbb
and
sbb
and
pop
push
adc
fimull
adc
mov
sub
lea
int
mov
mov
shrb
enter
subl
and
adc
ficomps
scas
mov
dec
pop
adc
push
ret
pop
faddl
shll
xor
sbb
das
imul
cs
mov
adc
xchg
sbb
bound
insl
sbb
jg
lea
hlt
bound
lret
pop
inc
inc
adc
jno
into
into
mov
sahf
adc
jg
insb
push
pop
adc
fldt
pop
ds
lds
pop
push
xor
insb
push
pop
adc
or
dec
movsl
call
jg
jge,pt
lret
dec
ja
cmp
sbb
bound
inc
or
pop
sahf
stos
mov
std
aaa
xor
cli
bound
arpl
mov
int
inc
pop
movsl
pop
adc
jg
cmp
cmpb
pusha
pusha
movsl
pop
adc
test
std
cli
xchg
push
inc
int
push
jge,pt
push
movsl
shll
pop
adc
push
push
push
push
mov
je
sti
hlt
call
sbb
sbb
push
shrb
add
mov
pop
adc
inc
jae
dec
movsl
pop
adc
dec
pop
adc
hlt
scas
xor
adc
and
aas
sub
mov
sub
mov
cld
sti
addl
mov
or
mov
dec
pop
xor
dec
pop
adc
xchg
std
clc
jne
jno
lcall
sbb
jg
leave
data16
mov
adc
std
pop
mov
dec
pop
adc
xor
pop
adc
or
lock
fdivrp
jl
js
iret
sbbb
and
or
aas
cmp
pop
lea
xor
sbb
sbb
xchg
pop
jmp
push
push
xchg
rorb
cwtl
rorl
scas
push
xchg
jns
loop
add
pop
cmpsb
mov
inc
jg
loopne
rcl
rolb
test
adc
mov
stos
loop
sbb
jmp
out
cmp
stc
xor
pop
adc
js
dec
pop
adc
jns
dec
pop
adc
push
pop
adc
lahf
jno
dec
dec
dec
adc
adc
adc
mov
in
pop
or
sarl
mov
adc
xchg
pop
ja
adc
gs
js
xchg
pop
lret
mov
pop
inc
push
mov
sub
cmp
dec
pop
adc
in
in
es
ja
pop
dec
mov
insb
push
pop
adc
sub
pop
jbe
cltd
sbb
movsb
jno
sarl
sbb
jo
pop
adc
mov
or
inc
fsts
loop
gs
jmp
pop
in
adc
adc
jecxz
jnp
loop
aad
sbb
inc
pop
movsl
inc
add
ds
jbe
or
mov
cmp
dec
test
jb
xor
inc
test
adc
test
xchg
xchg
adc
test
data16
jmp
into
aam
imul
and
dec
fs
or
popa
loope
pop
imul
andb
push
pop
adc
push
dec
push
xchg
jns
aas
push
and
lret
dec
aaa
jno
xor
xchg
adc
mov
mov
xchg
pop
inc
lret
xchg
adc
inc
movsb
push
pop
adc
mov
push
adc
adc
aad
xor
mov
scas
icebp
adcb
fnstsw
xor
lods
pop
sahf
inc
fidivrs
pop
out
mov
aad
sub
and
out
pop
mov
imul
push
popa
cltd
mov
mov
sub
mov
test
fisubrl
test
cld
mov
test
jae
lds
aad
xor
and
cmp
ret
xchg
insb
push
pop
adc
imul
jg
lea
jecxz
clc
mov
cwtl
notb
xchg
or
xchg
sbb
bound
popa
add
inc
out
in
push
cli
stc
or
ficomps
mov
das
pop
mov
adc
inc
xchg
pop
adc
xor
sbb
loopne
jnp
pop
mov
pop
cli
hlt
call
xchg
adc
test
jnp
adc
jmp
incl
pop
je
sbb
sahf
jae
subb
mov
pop
dec
lods
jge
decl
push
in
nop
nop
jg
jge
push
pushf
call
into
imull
xlat
jno
mov
ja
xor
pop
push
xor
addb
movsb
pusha
lds
inc
je
sahf
xor
dec
movsl
pop
adc
add
cli
mov
lods
xor
mov
push
xorb
pop
adc
imul
adc
mov
pop
adc
push
test
clc
movsl
pop
adc
movsl
pop
adc
xor
adc
mov
pop
adc
pop
mov
adc
test
inc
stos
mov
mov
movsb
dec
pop
adc
add
mov
adcb
andb
test
dec
pop
adc
mov
pop
adc
adcb
repnz
dec
mov
adc
div
jecxz
or
out
gs
js
xor
hlt
push
mov
hlt
and
jae
scas
bound
pop
lcall
mov
test
adc
cli
data16
xlat
loopne
xchg
jne
dec
push
sub
pusha
jno
or
shrb
sbb
je
and
cmp
cmpsl
pop
ds
xor
out
mov
inc
mov
outsb
shl
pop
das
push
test
aad
imul
mov
lcall
mov
push
xor
loope
pop
push
jne
mov
adc
xor
fdivl
sbb
orl
inc
xor
cltd
mov
out
pop
cmp
add
mov
push
std
mov
push
call
xor
in
outsl
and
repnz
pop
xchg
mov
enter
xchg
mov
push
out
and
mov
fstl
addr16
loop
pushf
gs
cmp
enter
clc
adc
mov
in
xor
mov
pop
enter
je
jae
pushw
scas
rorb
addr16
nop
mov
mov
mov
lods
xchg
repz
fidivs
mov
mov
xor
lcall
xlat
lds
xchg
adc
mov
fdiv
jecxz
sarl
addr16
pusha
push
arpl
into
or
gs
xor
inc
and
dec
mov
lcall
lods
add
mov
jmp
xor
loop
inc
cmp
enter
mov
cmp
das
mov
dec
mov
insl
jge
insl
push
mov
mov
cmpsb
jg
jmp
lret
rolb
lahf
outsl
fisttpl
pop
lods
ficomps
iret
jbe
mov
inc
mov
fsts
out
pop
jecxz
sub
stc
stc
sub
popa
inc
ja
sbb
adc
addr16
loop
sbb
mov
xor
aad
call
lret
xor
cld
cmp
in
xchg
dec
int
xchg
scas
fdivrl
decl
imul
jle
popf
fsubrs
lret
hlt
sti
mov
cmpsl
sbb
xorb
rcr
call
in
mov
mov
pushf
push
cmp
bound
pushf
imul
adc
lods
xor
cmp
pop
pushf
push
cmp
adc
pop
movsl
sbb
lahf
rcrb
mov
movb
pop
das
pop
aaa
cmp
in
sbbb
clc
jnp
mov
or
pop
out
or
mov
addb
outsb
icebp
movsl
sub
rorl
js
mov
sbb
push
arpl
cmp
das
mov
cmp
aad
adc
aad
stos
mov
scas
int3
and
incl
mull
call
cmp
mov
rolb
jbe
pop
add
test
jg
andb
stc
mov
cmpsl
cmp
jg
inc
mov
call
dec
jl
adcl
add
js
roll
aam
xchg
lock
inc
fs
cwtl
lret
adc
and
xchg
adc
arpl
movsl
xchg
sub
dec
outsl
pop
cmpsb
mov
pop
or
and
xchg
aam
ret
jmp
mov
xchg
push
call
xor
push
and
inc
repnz
jmp
fsubl
jo
int3
pop
inc
jle
frstor
jge
add
mov
mov
pop
push
dec
cmp
int3
add
or
sub
mov
mov
aam
and
outsl
add
and
mov
pop
push
cltd
in
ss
lds
push
aas
mov
push
push
mov
sets
push
mov
jo
rolb
or
cwtl
push
daa
add
mov
mov
pusha
adc
arpl
movsl
jne
dec
repz
arpl
fcoms
sbb
or
and
pop
pop
pushf
movsb
or
das
sub
dec
push
mov
dec
mov
into
mov
pusha
push
test
mov
cli
xchg
fstp
lcall
out
inc
mov
insb
mov
sahf
or
jmp
inc
sbb
shlb
test
mov
cmp
scas
aas
sub
mov
stos
sub
push
push
jle
outsb
mov
xor
mov
roll
cld
add
rcl
pop
add
mov
pop
pop
and
mov
jmp
arpl
jno
cmp
pop
pop
inc
cmpsl
popa
dec
out
test
cli
mov
test
roll
scas
sub
mov
shll
mov
ss
push
mov
pushf
jb
mov
int
jmp
aad
mov
push
insb
popf
lret
cli
pop
cmp
shrl
mov
fstpt
out
add
ret
mov
cmp
loope
mov
adc
jp
shll
pusha
mov
mov
movsl
sub
sbb
fwait
movsb
outsb
mov
and
mov
push
scas
rcrl
ror
cmc
add
mov
sbb
out
lcall
xchg
aas
sub
adcl
stos
pop
out
cli
idivl
and
add
int
dec
rorl
inc
insl
adc
in
xchg
cmp
sub
pusha
pop
jl
pushf
dec
push
pop
sub
mov
pop
shl
shlb
imul
xchg
jmp
add
add
ja
daa
ret
pushf
push
xor
xchg
add
shlb
andb
test
or
inc
mov
test
fcompl
decl
pop
ret
mov
xchg
xchg
mov
stc
add
lods
scas
lea
sbb
mov
or
mov
jae
imul
pop
ss
ja
lret
jne
callw
lret
fisttpll
cmpl
jns
mov
push
loope
addb
jbe
xlat
xchg
mov
lret
ret
adc
jbe
ss
movsl
or
add
mov
out
in
je
push
enter
call
pushf
pop
and
lea
mov
insb
std
lods
shlb
add
sbb
or
cmc
or
nop
add
lret
rcrl
jne
shrb
add
add
pushf
outsl
dec
xchg
add
ss
dec
in
je
aad
xchg
xchg
add
mov
mov
sub
roll
mov
cmp
mov
inc
je
cmp
add
js
loopne
mul
xchg
or
adc
das
aad
push
mov
lods
lcall
std
add
lea
or
push
dec
nop
shl
scas
iret
add
add
cmp
push
jne
dec
repnz
clc
lods
rclb
jae
andl
ret
and
mov
and
aaa
arpl
lock
in
addl
das
imul
jl
loop
ljmp
sbbl
jg
cld
jne
sbbb
lret
bound
sbb
xchg
add
and
clc
dec
push
rcrl
mov
icebp
dec
loopne
pop
fstpl
daa
adc
imul
loop
idiv
jecxz
or
sub
push
or
shll
decb
popf
mov
dec
and
arpl
jmp
or
dec
pop
push
sbb
movsl
aas
fsubr
loop
xorb
pop
pop
lds
pop
xor
jno,pn
std
mov
in
jmp
add
or
xchg
jmp
mov
cs
fsubs
pop
push
cmp
xchg
mov
pop
pop
out
cld
repnz
xchg
cmp
mov
loop
lret
mov
shrb
sub
xor
pop
push
xchg
sub
pop
cwtl
dec
int
es
cmp
cmp
sub
popf
push
sahf
jl
mov
fists
add
es
sub
cmc
andb
call
inc
push
add
mov
adc
sti
fmull
lods
dec
and
cmp
lock
iret
cmpsl
jmp
aad
movsb
mov
das
mov
sbb
mov
jo
sti
fsubl
push
mov
xchg
adc
pop
dec
mov
pop
cwtl
dec
adc
pop
loopew
jno
rolb
push
sub
push
imul
push
pop
adc
rorb
jae
ret
leave
adc
test
lock
repnz
sub
imul
pop
out
pop
jl
int
in
jne
inc
fs
loopne
imul
lret
or
mov
pop
aaa
cwtl
gs
in
jg
pusha
mov
cmp
hlt
lock
mov
mov
int3
push
push
jne
dec
stos
and
push
adc
pop
adc
loop
sub
pusha
faddl
xchg
rcll
arpl
push
sbb
aaa
fwait
lea
jl
pop
adc
insb
adc
adc
push
xchg
push
out
test
pop
outsb
test
test
adc
adc
push
in
fcoml
push
adc
cmp
nop
mov
inc
push
inc
mov
nop
leave
xchg
cmp
mov
mov
arpl
pop
adc
push
add
mov
fs
push
pop
jp
push
out
test
test
fstpl
xor
test
insb
adc
adc
ljmp
mov
jl
pop
adc
lds
push
adc
pop
adc
mov
xchg
adc
jmp
test
jo
pop
adc
ret
insb
test
je
pop
adc
pop
cs
stc
mov
fs
and
push
or
pop
hlt
lret
xchg
mov
add
dec
pop
cs
sub
push
mov
xchg
pop
movsb
adc
jo
inc
movsl
mov
pop
mov
fildll
add
add
mov
jb
add
cli
stos
xor
mov
mov
mov
movsb
or
movsl
sbb
icebp
std
aad
aad
jg
mov
push
pop
jg
add
pop
mov
adc
mov
mov
cmp
fmul
push
add
sar
movsb
shlb
inc
sti
add
aad
jo
stc
sub
mov
aas
in
push
push
je
fs
addb
or
sbbb
in
jnp
int
push
add
sbb
ror
cld
mov
sub
push
add
or
push
pop
scas
movsb
test
out
mov
and
jb
xchg
imul
out
add
scas
fwait
xlat
cs
xchg
shl
pusha
pusha
outsl
hlt
mov
fsubs
jmp
in
repz
fsubrs
lock
mov
jle
and
push
push
sub
fdivr
or
addr16
fwait
pop
hlt
shl
out
imul
xchg
in
push
cmp
add
aad
jmp
pop
dec
mov
out
and
push
fisubrs
add
and
es
push
sbb
fcmovnbe
dec
jne
insl
outsl
pop
aaa
xchg
or
or
or
xlat
sub
jge
mov
icebp
stos
out
mov
jnp
inc
mov
ret
and
add
sub
bound
in
lcall
std
psraw
test
pop
jg
imul
scas
fst
mov
aam
and
xchg
cmpb
ror
and
rorb
xchg
pusha
mov
xchg
fwait
stos
iret
popa
lods
out
cmpsb
call
mov
cmp
pop
adc
popl
xchg
icebp
mov
adc
mov
adc
inc
mov
fcoms
and
in
icebp
push
adc
pusha
test
clc
stos
mov
pop
pusha
test
xor
adc
stc
jp
xor
mov
xchg
lds
pusha
test
push
mov
push
popf
clc
movsl
insb
or
push
pusha
test
call
lock
and
jo
test
sub
and
jl
pop
adc
inc
adc
adc
fs
push
lahf
push
sub
fistpll
adc
sbb
xchg
enter
add
es
repnz
xchg
fs
pusha
test
into
xchg
adc
test
xchg
pusha
test
js
pop
adc
sbb
pop
adc
je
pop
adc
cwtl
dec
mov
imul
fs
push
jecxz,pt
push
lret
popf
jl
pop
adc
adc
clc
or
inc
inc
inc
je
pop
adc
push
push
fs
push
ljmp
cmp
sbb
aaa
jl
pop
adc
mov
lds
adc
adc
jo
and
mov
adc
mov
mov
pop
test
loopne
push
adc
je
cli
jge
js
mov
adc
adc
adc
adcb
inc
jg
fs
aas
fnsave
pop
pushf
ret
clc
stos
push
jnp
mov
push
xor
jmp
fstpt
imul
lds
adc
xlat
mov
add
or
xor
lock
dec
mov
cmp
addb
pop
loopne
push
adc
jl
clc
arpl
jge
xchg
pop
cs
xor
out
popf
cmp
pop
cmc
mov
sub
lret
sar
push
cli
mov
sbb
jnp
shrb
push
or
cli
int3
push
shrl
xchg
xchg
mov
and
call
clc
shlb
push
decb
mov
mov
lods
ret
jl
xchg
movsb
ret
in
inc
add
cli
dec
sahf
xchg
sarb
loopne
les
pushf
cmp
insl
mov
dec
stc
add
mov
and
nop
mov
jb
mov
jae
lcall
adc
mov
xlat
ret
jbe
xor
aam
cwtl
push
jns
add
divb
aad
enter
add
testb
call
repz
idivb
or
or
int
adc
call
mov
dec
scas
gs
ja
fwait
cli
xor
out
bound
out
insl
test
dec
inc
repnz
jle
jecxz
pop
fnstenv
pusha
aad
arpl
and
rcll
lds
lods
add
ret
push
cmp
add
pop
scas
mov
in
out
stos
inc
xchg
lods
pop
xchg
leave
push
ret
fdivs
in
dec
lock
mov
inc
fsubrl
je
dec
cmp
mov
cmpsl
hlt
push
xchg
cld
inc
inc
fs
xchg
insb
and
popf
inc
lret
jnp
in
out
mov
aam
jmp
pop
mov
aas
mov
xchg
fmuls
push
clc
push
ss
stos
js
fimull
push
lret
and
cwtl
pop
add
daa
movsl
pop
xchg
call
js
int
xor
insb
push
pop
arpl
je
inc
or
test
cmpsl
outsl
enter
data16
repnz
aaa
iret
dec
inc
or
sub
movsl
je
pop
movsl
neg
fistpl
fwait
push
aad
and
mov
rorl
insb
in
lret
ja
jno
test
fistps
jge
cmp
xor
ds
lret
mov
cmp
pop
mov
mov
inc
sbb
sub
js
cwtl
sarl
or
into
mov
in
pop
mov
test
lcall
sub
nop
sub
cmpsb
mov
insb
or
in
add
pop
lock
and
or
les
insb
mov
inc
xlat
pop
js
aam
mov
inc
pop
lret
jecxz
popa
dec
je
arpl
js
ret
jae
in
imul
lods
dec
push
sti
fstpl
mov
pop
mov
dec
mov
out
and
pusha
push
pop
lods
mov
ss
les
cld
imul
sub
mov
mov
push
ljmp
xorb
vpsllq
sbb
enter
sbb
and
or
rol
xor
mov
xor
cmp
xor
fidivrs
lock
mov
sbbl
sar
jecxz
inc
push
rcll
scas
inc
cmc
adc
pop
das
fisubrs
jnp
leave
mov
stos
int3
jge
out
adc
shlb
or
mov
cmpsb
pop
xor
inc
inc
push
dec
jne
jp
insb
and
pusha
arpl
pop
adc
adc
mov
push
sbbb
inc
ja
inc
cltd
mov
pusha
or
stc
jbe
lods
nop
inc
stos
push
arpl
popf
pop
lock
xor
in
and
pop
adc
xchg
add
push
sbb
push
dec
jg
adc
or
sub
mov
sub
addr16
popf
fisubl
adcl
call
mov
fs
orb
movsb
ficoms
sub
adc
sub
mov
aaa
add
movsb
loop
std
sub
and
pop
pop
cmp
cmc
mov
dec
dec
pushf
push
jge
mov
ss
div
jle
movsl
int
jae
into
mov
pop
ret
inc
add
cmp
sti
add
pop
mov
sub
int3
unpcklps
pop
xor
cmp
pushf
push
lret
inc
xor
daa
les
aam
jmp
daa
inc
in
inc
jle
lcall
fldenv
adcl
jcxz
xchg
dec
pop
in
add
call
xor
cmc
fdivl
out
shlb
push
pop
push
push
push
cmp
hlt
test
and
dec
sbb
add
and
sldt
jmp
movsl
jb
das
or
scas
xchg
popf
sbb
pop
jecxz
lock
mov
and
call
add
stos
add
adc
xchg
pop
std
out
sub
data16
pop
jp
std
push
sub
int
rorb
lods
andb
mov
jae
ss
rcrl
or
push
cltd
xor
xor
or
mov
xor
sub
jns
cmp
mov
mov
fbld
dec
mov
cmp
xchg
xor
pop
inc
xchg
mov
sub
popa
jmp
xchg
cmc
or
pop
imul
shlb
sub
inc
insl
sub
add
push
daa
pop
fisubs
pop
mov
and
fwait
add
push
sti
mov
and
cmpsl
cwtl
inc
add
push
mov
jo
push
cmp
inc
arpl
sub
xor
mov
les
xor
inc
pop
loop
push
mov
rolb
pushf
inc
pop
jecxz
and
sub
xchg
hlt
cmp
sbb
dec
jne
in
pop
stc
cmp
sbb
popl
js
loop
jmp
incl
mov
xchg
popa
dec
dec
fwait
inc
int
xchg
mov
jns
sub
mov
movsl
loop
addr16
lret
andb
adc
fistpll
lahf
xchg
xor
pop
adc
stc
mov
fcoms
jl
jmp
cs
add
adc
adc
adc
push
pop
adc
loope
mov
mov
mov
scas
sbb
in
sub
clc
pushf
loopne
pop
adc
inc
ss
inc
into
ja
adcb
adc
mov
xor
test
pop
adc
push
and
xchg
scas
jae
insb
test
xor
add
push
aaa
dec
mov
mov
mov
mov
mov
push
loopne
pop
adc
mov
test
xor
push
adc
inc
mov
add
pop
jle
push
mov
mov
mov
aaa
add
clc
xchg
adc
push
je
and
xor
pop
mov
add
xor
jae
cmp
ret
jg
pop
mov
rcrb
in
nop
andl
sbb
pop
loopne
jne
notl
das
stc
lret
cmp
jbe
pop
jp
inc
xchg
int3
arpl
or
xor
xor
ljmp
pop
push
jmp
jbe
cli
sub
loopne
pop
adc
jle
xchg
lock
les
add
jle
jg
mov
dec
ja
sbb
aaa
xchg
sarb
jle
adc
adc
cmp
mov
cli
jecxz
das
pop
mov
pop
cli
hlt
dec
jmp
into
popf
mov
mov
mov
std
or
mov
mov
and
xor
shll
xchg
add
movsb
movsl
lret
enter
cmp
arpl
aad
cmp
jmp
sahf
lcall
dec
pop
adc
adc
xor
pop
pop
in
nop
sub
pop
shlb
popf
insb
pushf
imul
mov
cli
leave
adc
insl
inc
repz
stos
in
iret
lret
shll
xchg
push
js
push
ret
mov
mov
inc
xchg
xchg
out
sub
mov
fdivrs
push
sti
aas
mov
in
mov
enter
pusha
or
xor
mov
rcll
xchg
daa
push
adc
pushf
adc
adc
std
xlat
hlt
adc
adc
push
cli
shrb
mov
adc
movsb
mov
data16
test
pop
adc
adc
lods
mov
lock
test
pop
adc
mov
test
sub
push
adc
mov
adc
adc
push
sbb
push
adc
push
movsb
mov
add
pop
adc
inc
add
mov
adc
push
pop
adc
sbb
dec
pusha
cs
lods
repnz
pop
shrl
xchg
or
inc
scas
mov
std
lods
mov
mov
mov
pop
adc
iret
stos
pop
mov
push
adc
cmp
dec
ss
repnz
loop
jns
ja
add
inc
mov
adc
popa
mov
xchg
popf
inc
test
push
sub
rorl
mov
cmpl
dec
in
lret
mov
lods
sub
es
loopne
dec
add
push
adc
pop
mov
dec
mov
pop
xor
pop
push
shll
je
bound
xor
mov
jno
inc
add
add
push
push
sub
xchg
fisubs
fcoml
lods
scas
jnp
aaa
in
push
movsb
out
fsts
cs
push
leave
add
mov
and
push
divl
sub
xlat
cli
stos
sahf
fisttpl
insl
insl
sbb
mov
and
std
nop
stc
mov
xor
fldt
push
and
jp
cltd
fcomp
adc
andb
insl
jno
in
adc
and
mov
inc
test
adc
sub
cmpsl
pop
adc
push
test
adc
in
imul
add
je
add
mov
pop
adc
sub
inc
addr16
cmp
sub
push
adc
add
pop
push
fst
rcl
call
inc
fmulp
out
adc
sbb
cmp
cmp
inc
push
xchg
repz
dec
cld
mov
nop
jnp
push
mov
and
dec
mov
xor
pop
js
pusha
popa
bound
sbb
dec
inc
or
outsb
test
sbb
pop
adc
jp
mov
and
int3
xchg
call
cmovp
jne
test
adc
mov
inc
push
hlt
call
and
add
ljmp
adc
pop
xchg
rclb
xchg
mov
popf
cmp
xchg
and
hlt
call
xor
in
shll
mov
adc
clc
hlt
call
pop
adc
sahf
repz
dec
cmp
inc
cmpsl
pop
adc
movsl
test
ljmp
adc
fildl
lock
cmp
mov
inc
cmpsl
pop
adc
pushf
lock
test
adc
or
dec
gs
add
push
sub
pop
adc
mov
mov
lgs
pusha
test
adc
push
adc
andl
or
mov
push
mov
adc
stos
in
xchg
into
shll
popf
rcrb
adc
pop
lret
js
jge
mov
sahf
pop
mov
pop
adc
xchg
fsubrs
mov
jmp
mov
and
pop
adc
and
pop
adc
jo
jmp
sbb
xchg
cmp
pop
addr16
rorb
repz
aas
fcmovb
pop
sahf
rcr
insl
inc
jo
pop
adc
xor
cmp
mov
push
cmp
repz
mov
cmp
adc
enter
in
pop
repnz
add
adcl
out
and
adc
adc
pop
in
lds
sub
arpl
push
mov
cmpsl
pop
adc
sbb
pop
adc
adc
pop
addr16
incb
mov
adc
sbb
jg
and
adc
and
xor
push
std
lea
insl
push
in
jbe
inc
cmpsl
pop
adc
push
sarl
loop
movsb
and
push
pop
adc
mov
xor
or
push
or
movsl
or
jecxz
es
mov
push
pop
adc
cmpsl
pop
adc
mov
dec
in
pusha
push
dec
test
cmpsb
leave
hlt
pop
std
test
xchg
inc
test
adc
adc
aad
cltd
popa
add
xchg
popf
dec
je
push
pop
adc
pop
adc
divb
cmpsl
pop
adc
mov
pop
adc
jecxz
decb
pop
xchg
rcll
pushf
aas
stc
sbb
xchg
outsl
out
bound
adc
pop
jg
inc
loope
mov
push
and
sub
lcall
mov
push
test
adc
in
lods
outsb
mov
pop
adc
xchg
jb
bound
pop
dec
fistpl
dec
lcall
ret
cmpsb
lock
pop
sbb
jne
and
mov
adc
popa
push
mov
push
mov
stos
cmpsl
add
jne
ret
test
clc
inc
inc
adc
outsb
stc
mov
mov
xchg
sub
adc
adc
and
bound
mov
pop
adc
push
adc
adc
mov
scas
dec
lds
mov
pop
dec
movsl
pop
adc
les
inc
test
adc
rcrl
sub
adc
xor
lahf
sbb
push
pop
hlt
adc
pushf
cmp
ret
rolb
add
cs
mov
fisttpll
das
repz
test
adc
xlat
out
cmpsl
pop
adc
or
cmpsl
pop
adc
jecxz
test
pop
cmp
mov
fsubl
push
test
adc
mov
enter
push
outsb
push
cld
inc
mov
pop
adc
nop
or
daa
movsl
hlt
mov
adc
addb
test
adc
in
jno
test
cli
shlb
pop
adc
inc
mov
and
pop
adc
ljmp
loopne
cmpsl
and
stos
xor
jge
shlb
or
push
push
shlb
mov
mov
pop
adc
mov
jo
mov
mov
pop
adc
pop
mov
xlat
mov
xchg
ret
and
sub
arpl
sbb
add
mov
mov
dec
lret
into
cmpsl
adc
jmp
lds
pop
out
jecxz
test
push
mov
lods
mov
add
in
aad
cs
mov
mov
fsubs
mov
enter
cs
mov
testb
push
es
cmp
xchg
imul
inc
cli
ds
jmp
fcompl
inc
or
rol
mov
push
inc
inc
jo
pushl
hlt
or
cmp
mov
jmp
fdivrl
loope
push
hlt
pop
in
rclb
adc
adc
adc
loope
addb
call
call
je
mov
insl
xchg
push
adc
ja
ffreep
addb
repz
push
popl
add
jnp
add
and
lahf
js
loope
pop
bound
lods
fcoms
je
repnz
addl
mov
xor
pop
push
xor
mov
sbb
sbb
mov
pusha
adc
adc
orl
dec
mov
mov
repz
outsb
les
jle
inc
xor
shlb
movd
cld
and
arpl
sbb
push
push
pop
mov
sbb
or
pop
adc
outsl
into
pop
push
repz
mov
shlb
or
pusha
adc
adc
out
or
cmp
adc
adc
pop
xor
mov
cmpsl
push
push
mov
aam
enter
cli
out
std
shlb
xor
mov
mov
inc
mov
pop
mov
es
and
inc
pusha
xchg
push
mov
xchg
mov
out
sbb
aam
loope
dec
enter
mov
mov
clc
imul
jb
inc
ds
scas
push
adc
movsb
inc
sbb
cmp
cmpsw
jo
pop
adc
xlat
stos
mov
push
pop
and
xor
add
adc
adc
lds
test
push
adc
movsl
ja
adc
adc
adc
adc
sbb
adc
icebp
adc
adc
adc
fisubrs
inc
dec
adc
pop
adc
and
dec
pop
adc
pop
and
ss
push
popa
or
pop
adc
push
aad
or
pop
adc
jl
xor
xchg
sbb
dec
int3
add
loope
xchg
pop
cmc
xchg
std
push
test
xchg
adc
rclb
mov
adc
cmpsl
nop
mov
adc
push
jp
lcall
xor
dec
rorb
inc
push
jne
cld
pop
pop
inc
xor
sub
std
mov
mov
mov
adc
mov
cmp
faddl
mov
mov
lods
outsb
scas
das
pop
adc
jno
sub
cmp
add
jmp
std
test
pop
pop
and
test
in
je
mov
adc
lret
xchg
jecxz
divl
push
outsl
mov
ret
enter
js
dec
pop
or
mov
sti
in
mov
add
xchg
push
push
jecxz
mov
adc
jp
inc
cmpsb
xor
bound
pop
mov
std
push
jecxz
movsl
mov
rolb
out
fwait
adc
popf
cmp
sub
lret
nop
mov
pushf
pop
jp
repz
loope
negw
cmp
test
les
jne
cmp
adc
xor
cli
stos
adc
mov
xchg
jne
push
hlt
add
mov
repnz
pop
leave
adc
xor
push
add
adc
adc
adc
enter
mov
mov
push
adc
ss
adc
cmp
or
xor
nop
xor
jge
mov
pop
xor
out
cwtl
jne
xchg
pop
das
stc
leave
shll
popa
rcr
push
jno
xchg
and
lret
sbb
mov
frstor
ja
popa
pop
shrb
test
pop
adc
adc
dec
clc
and
test
sub
rcl
hlt
call
sbb
xchg
or
pushf
push
nop
lea
inc
sub
test
add
enter
lds
cmpl
testb
sub
inc
or
jo
pop
ds
loope
arpl
mov
cmp
jge
inc
fnstenv
enter
dec
pop
adc
xchg
pusha
dec
pop
adc
stc
mov
adc
or
scas
cltd
in
in
jo
inc
in
aad
and
or
push
jp
mov
push
xchg
imul
movsl
inc
imul
test
push
add
js
xor
stc
mov
out
std
push
and
aad
or
adc
adc
push
pop
adc
sbb
ja
pop
mov
loopne
out
imul
imul
jnp
inc
out
xor
and
or
cmpsl
xchg
jecxz
mov
daa
push
add
pop
rolb
jns
or
std
mov
add
fwait
pop
mov
jmp
outsl
jmp
call
popf
imul
clc
mov
xchg
mov
pop
stos
inc
push
lds
push
test
pushf
cmpl
fs
add
sbb
rclb
clc
fiadds
xchg
fisubrl
fwait
aam
dec
jb
push
mov
pop
int3
test
pusha
xor
xor
ss
mov
push
sub
into
cmp
inc
sub
test
testb
repnz
into
jb
cmp
fstps
aaa
std
xor
mov
add
jecxz
push
subl
cmp
dec
pop
adc
sbb
mov
adc
loop
loop
pop
lret
xor
stos
or
push
movsl
mov
mov
aas
add
mov
aam
aaa
inc
icebp
push
sbb
insl
in
xchg
dec
adc
cli
mov
xor
out
mov
adc
fstpl
lods
loop
repnz
mov
adc
aas
cltd
jmp
pop
enter
popf
call
cltd
pop
add
jns
dec
cmp
and
dec
fs
fnstcw
nop
cmp
mov
cmp
or
dec
cld
scas
mov
clc
out
mov
icebp
or
cmpsl
pusha
xor
nop
xchg
push
rclb
push
shll
adc
mov
hlt
adc
jl
pop
movl
dec
sbb
mov
mov
pop
aad
pusha
and
clc
xor
push
int
inc
inc
inc
enter
or
dec
adc
inc
dec
sbb
je
dec
lods
ret
sbb
jns
adc
dec
inc
sub
test
cmp
add
add
cmp
add
popf
cmp
push
inc
inc
addb
inc
incb
mov
mov
inc
xlat
shll
push
jg
out
imul
orb
out
mov
jle
loopne
jns
jg
scas
cmpsl
roll
dec
push
add
push
pop
aaa
popl
mov
push
push
imul
roll
iret
pop
push
mov
push
add
cmpsb
inc
orb
xchg
push
pop
mov
dec
into
xchg
cmpsl
loope
jb
into
je
jno
rcrb
add
jle
push
lahf
dec
aas
in
pop
cs
jbe
into
mov
movsl
inc
cmpb
xchg
ja
push
les
fcoms
jbe
into
mov
movsl
inc
cmpb
xchg
call
dec
pop
adc
js
int3
xor
mov
lcall
cmp
cli
orl
out
popf
mov
xor
mov
mov
in
adc
shlb
rorl
mov
mov
adc
add
cmp
mov
inc
pop
or
lods
mov
jge
inc
pushf
cmp
cltd
aad
leave
dec
jne
sub
sbb
xchg
mov
sbb
and
adc
mov
sub
xchg
mov
testb
fcompl
loop
adc
fs
sbb
inc
pop
add
test
addr16
mov
ret
pop
cltd
nop
neg
in
lds
stos
dec
dec
dec
lahf
or
push
add
stos
dec
hlt
into
add
xlat
push
aad
inc
jno
push
adc
pop
adc
sub
cmp
cltd
mov
sbb
dec
pop
mov
pop
rcrl
cmpsl
stos
int3
daa
cmp
pop
hlt
pop
bound
test
jnp
mov
jmp
mov
push
les
dec
jne
mov
inc
loopne
sbb
stos
out
sub
dec
sub
mov
icebp
or
mov
mov
int3
les
outsl
mov
je
rcrb
add
xorl
ljmp
aaa
aad
rorl
cmp
mov
jmp
pop
ficoml
fadd
jg
mov
push
cmp
mov
xchg
xchg
mov
lds
add
rolb
mov
ljmp
fwait
mov
stos
adc
rorb
lahf
in
or
cmpsb
ljmp
pop
adc
add
and
or
pop
mov
or
sahf
fistpl
cmpsl
xor
daa
jecxz
ds
sub
sar
xchg
jno
mov
xor
xor
insl
leave
or
jne
inc
push
scas
cmp
mov
sbb
jge
test
insb
insl
insb
in
cltd
mov
sbb
in
or
xchg
jmp
mov
pop
pop
mov
loopne
push
pop
adc
mov
jge
addb
adc
cmp
dec
mov
ret
stos
xor
leave
les
push
pop
adc
test
lods
imul
scas
jae
out
roll
insb
arpl
jge
add
mov
gs
rcrb
insb
test
inc
dec
sarl
in
mov
enter
mov
add
inc
ja
popa
and
push
or
popf
cmp
test
xchg
mov
outsl
fwait
cmp
mov
adc
jmp
mov
push
push
lds
dec
hlt
ja
into
sub
cmp
ret
pop
cs
jmp
mov
mov
push
jne
movsl
sbb
mov
adcl
cld
into
popf
cmp
jbe
les
das
pop
mov
jge
mov
pop
push
sahf
sbb
bound
inc
test
inc
lds
mov
repz
mov
arpl
jnp
lret
push
ja
popa
fsubs
sbb
add
add
out
push
das
pop
aas
std
adc
roll
cmp
out
popf
dec
pushw
adc
xor
movswl
pushf
loopne
and
cld
test
pop
aaa
inc
inc
adcb
push
inc
xor
std
push
jb
xchg
jl
test
jbe
loopne
pop
cmp
rorb
pop
cwtl
xor
inc
pop
push
fldl
inc
lds
pop
das
pop
push
imul
adc
daa
mov
mov
sub
dec
inc
jne
andb
lcall
test
inc
xlat
stos
pushf
jne
or
pop
in
sbb
push
push
in
mov
das
pop
aas
mov
mov
movsl
test
mov
pusha
fsubrp
stos
dec
lea
cmp
sbb
xor
andb
mov
or
in
push
popa
xor
decb
dec
mov
das
outsl
std
lock
inc
cwtl
or
test
inc
ret
sub
add
rorl
stos
mov
jecxz
xchg
dec
mov
and
in
xor
test
test
pop
add
rcr
nop
jl
ret
add
test
movsb
in
lds
shrl
repz
testb
clc
inc
aaa
lret
mov
lea
loop
sbb
rcrl
loop
loopne
adc
push
outsl
and
pop
jmp
lds
inc
mov
adc
xor
imul
inc
fildll
lods
dec
and
data16
xchg
xor
and
cli
sbb
push
das
pusha
mov
lret
push
sbb
cs
and
push
xchg
je
aas
mov
in
shll
inc
and
jo
adc
fdivp
inc
cmpl
xor
enter
sub
cmp
iret
sub
sbb
push
adcb
pop
les
pop
outsl
xor
fadd
jbe
jmp
sub
outsb
test
jno
add
xchg
cli
sub
pop
es
ja
mov
xor
fistl
adc
add
adc
add
adc
add
adc
ficompl
cmp
mov
xor
call
leave
add
mov
sbb
loope
popa
leave
jae
adc
loop
sbb
adc
adc
sahf
add
icebp
cld
mov
adc
adc
push
adc
xchg
mov
adc
xorb
pop
mov
adc
insl
in
imul
sbb
fcomps
push
add
sub
nop
sbb
dec
push
addr16
push
mov
and
cmp
pop
mov
inc
push
mov
mov
lods
add
fstps
cs
add
outsl
mov
push
adc
dec
mov
xchg
mov
mov
leave
daa
sub
lds
in
stos
jno
lret
mov
add
lret
dec
mov
loope
in
lods
jecxz
js
sahf
cmp
pop
xchg
and
cmp
imul
clc
fs
sub
or
adc
leave
add
fimuls
into
btr
mov
pop
xlat
xor
dec
add
mov
mov
push
jo
inc
mov
bound
mov
or
mull
sbb
cwtl
insb
pop
push
ret
add
add
mov
inc
into
xor
mov
pop
push
aad
pop
pusha
cwtl
inc
mov
adc
xlat
pop
mov
loopne
push
out
cmp
xchg
pop
mov
orb
movsl
pop
adc
sbb
cmp
mov
fs
pop
adc
pop
adc
imul
bnd
mov
lret
adc
into
popf
cmp
shrb
add
gs
shll
call
daa
rcrl
jne
rolb
loopne
pop
adc
lds
inc
mov
xchg
mov
call
mov
mov
loopne
pop
adc
or
pop
ljmp
push
dec
lods
adc
xcrypt-ctr
cmpsl
pushf
cmp
idivb
adc
inc
cwtl
shlb
push
push
pop
adc
outsb
pop
mov
add
popf
fsubs
pusha
add
add
inc
pop
push
rolb
test
or
rclb
jge
mov
aam
aam
mov
add
pop
adc
imul
loope
addb
mov
mov
dec
js
cmp
mov
loopne
pop
adc
xor
inc
adc
adc
inc
mov
dec
dec
cmp
loope
add
paddusb
mov
fisubs
push
pop
adc
xorl
data16
add
mov
push
pop
adc
pop
adc
adc
mov
xchg
int
inc
les
adc
or
dec
enter
ljmp
adc
adc
push
repnz
inc
jns
decb
push
pop
adc
adc
aad
js
push
adc
sub
lods
fnstcw
sub
adc
shrl
push
pop
adc
in
imul
jo
movsl
outsl
push
push
pop
adc
mov
pop
adc
mov
sbb
test
push
pop
adc
hlt
mov
push
pop
adc
inc
push
pop
leave
cmp
mov
fldl
ja
pop
lods
or
or
sbb
pop
xchg
push
gs
lret
hlt
sub
rorb
push
pop
cli
mov
loop
mov
sti
aas
jb
rclb
cmp
in
orl
sub
pop
mov
add
pop
sbbb
das
pop
jecxz
push
pop
adc
xchg
mov
lcall
jl
pop
push
xchg
daa
andl
mov
push
pop
adc
push
pop
adc
inc
or
cmpsl
lret
push
pop
adc
imul
adc
fwait
sbb
push
pop
adc
daa
jecxz
sbb
out
push
je
xchg
adc
scas
cld
xchg
into
insl
data16
jno
xor
fs
aas
divl
sub
xchg
aaa
cmp
push
out
or
xor
or
popf
dec
repnz
and
aad
loop
andb
push
push
push
xor
jle
insb
push
pop
adc
mov
or
jno
int3
gs
ret
dec
jmp
scas
hlt
inc
xchg
or
ljmp
sub
bound
pop
jecxz
jns
mov
aam
fwait
dec
stos
sub
out
fistl
xchg
pop
scas
inc
mov
sbb
sti
adc
xchg
int
xchg
out
push
push
ss
or
sbb
or
out
les
stc
push
push
xor
add
sub
and
stc
xor
pop
test
mov
shlb
pop
lock
jo
pop
adc
shl
mov
aas
es
in
fidivl
push
inc
fcmovb
mov
sbb
inc
add
xchg
pop
mov
dec
jge
in
mov
add
push
pop
adc
xchg
fucomp
int3
aaa
adc
jl
mov
jne
lock
pop
push
pop
adc
mov
js
jecxz
stos
mov
pop
push
pop
adc
ljmp
mov
adc
adc
push
or
sub
insb
push
pop
adc
pop
es
out
pop
scas
das
add
lea
ret
push
cmpsl
push
insb
push
pop
adc
push
mov
pop
push
dec
out
ljmp
pop
adc
mov
cltd
mov
cmp
bound
andl
pop
cs
addb
pop
adc
mov
xor
mov
mov
lea
adc
call
pop
adc
dec
aaa
add
pop
bound
push
or
mov
sbb
adc
insl
and
fsubrl
pop
adc
inc
js
mov
cmc
lret
adc
xchg
mov
cwtl
andb
jl
pop
adc
mov
adc
or
mov
sub
jle
pop
adc
hlt
and
mov
js
pop
adc
in
jbe
in
mov
or
adc
add
lcall
push
pop
inc
sarb
push
mov
outsl
add
repz
aad
out
sub
pop
dec
dec
push
jmp
out
jle
sbbb
pop
sbbb
push
pop
adc
sarb
ret
sbb
adc
lret
and
mov
or
rorl
cli
jnp
test
int
call
lahf
scas
xchg
mov
mov
and
in
adc
insb
sub
cli
jo,pt
cmp
and
xchg
or
loopne
xchg
pusha
push
pop
adc
mov
imul
adc
cmp
adc
push
loop
add
mov
leave
popf
add
mov
inc
inc
jb
mov
mov
in
in
pop
adc
das
cmpb
inc
xor
in
dec
dec
mov
imul
cmp
cmp
out
inc
cmp
pop
aam
cli
xchg
mov
bound
movsl
jmp
pop
dec
stos
lods
mov
jae
cmp
outsb
xor
mov
push
jl
mov
jno,pn
loope
or
mov
xor
cli
pop
test
rolb
int3
mov
pop
push
ror
xchg
outsl
lcall
lret
push
pop
cwtl
gs
xor
push
lret
stos
or
arpl
xor
aaa
aaa
xor
inc
sbb
cli
ret
push
imul
call
out
out
sub
rcl
inc
lret
jl
cltd
inc
cmp
mov
loope
xor
fisubrl
mov
inc
mov
mov
movsb
push
or
pop
jno
xor
or
or
dec
lahf
insl
cmp
adc
in
mov
mov
sbb
jecxz
repz
xor
xchg
jns
adc
xchg
mov
out
into
xchg
push
cmp
in
push
push
das
mov
jbe
nop
sub
mov
mov
pop
loop
cld
jae
fidivs
lret
lcall
lds
cld
pop
dec
or
int3
fildl
push
outsb
test
cmpsb
mov
int
inc
xchg
cmp
mov
mov
push
mov
fdivs
shll
and
jne
or
jle
out
scas
fisubs
add
xchg
cld
sub
cmp
in
ljmp
push
cmp
push
imul
call
vpsllq
bound
add
clc
adc
mov
pop
push
jo
pop
adc
add
clc
mov
rcll
fadds
sbb
sub
loopne
or
cmp
shll
mov
pop
xor
hlt
call
hlt
mov
int3
jge
test
dec
test
popf
xchg
std
outsl
hlt
sahf
imul
jge
pop
jmp
enter
int
sub
sbb
push
jmp
cmpsb
sbb
jp
xor
mov
int3
scas
cli
sub
int3
push
push
xor
adcb
mov
hlt
xchg
push
das
sbb
test
fs
popf
mov
int3
shrb
movsb
or
inc
es
aaa
sub
hlt
ss
repnz
adc
push
cld
fwait
mov
mov
aas
insl
outsb
popl
imul
sahf
mov
daa
arpl
sub
adc
push
es
insl
xchg
and
adc
rcrl
pop
inc
push
int3
adc
leave
xor
shlb
sub
stc
xchg
into
mov
push
nop
xor
push
repnz
out
mov
push
daa
adc
adc
xchg
jno
ret
fistps
sub
aaa
add
ret
xchg
xorl
cli
xchg
jmp
push
and
or
decl
repnz
and
addl
mov
test
sbb
adc
xchg
push
pushf
pop
nop
fisubrl
mov
ljmp
popf
ret
add
xor
cmc
or
test
or
test
and
iret
imul
bound
fiaddl
adc
fistpll
nop
pop
sub
mov
push
fs
and
scas
cmp
dec
out
dec
stos
mov
jns
call
fcoms
sbb
inc
insb
loope
cmpl
add
mov
les
js
cmp
les
mov
insb
adc
xor
out
dec
xchg
adcl
xchg
aad
jecxz
call
mov
fs
xor
int
daa
push
or
push
fcoml
adc
pop
cwtl
or
dec
pusha
rorl
daa
push
and
in
inc
pop
into
pushf
ds
test
hlt
push
pop
adc
js
jecxz
mov
insb
mov
adc
push
popf
push
out
or
repnz
leave
push
xchg
xchg
mov
jae
jno
jb
sbb
sbb
lds
lret
xor
pop
or
sub
sbb
test
insl
in
daa
stc
mov
out
mov
cwtl
int
or
int3
and
outsl
leave
das
adc
jo
pop
adc
out
out
insb
xchg
sbb
cmp
dec
push
jb
inc
mov
mov
ds
mov
dec
sbb
xor
loope
mov
xorb
popa
aad
dec
mov
imul
add
aam
cwtl
ja
loopne
adc
loope
cmpsl
pop
mov
adc
cmp
dec
cmp
int3
arpl
and
cltd
scas
push
outsb
push
iret
jae
or
ss
imul
dec
std
aam
sbb
stos
addr16
clc
xor
lock
imul
inc
js
sub
inc
sub
mov
push
sbb
ret
and
pop
mov
sarb
inc
push
jne
push
jle
push
pop
adc
add
std
adc
dec
push
sarl
mov
inc
mov
mov
movsb
and
jl
hlt
inc
inc
insb
ljmp
sub
sub
pop
pop
pushf
ret
fstl
push
jo
pop
adc
add
pop
in
jg
add
xor
mov
das
pop
aaa
or
push
adcb
jg
aam
push
inc
mov
addl
ljmp
cs
cmovo
cmp
andl
in
fs
std
cli
ret
aad
sti
sbb
pusha
jo
pop
adc
xor
sbb
pop
in
rorb
psubsb
mov
aas
lock
neg
orb
jns
fs
pop
jnp
adc
mov
pop
inc
js
mov
lock
fisttpll
sub
pop
mov
jnp
jge
test
jno
popf
sub
cmp
sti
popa
push
jge
int3
jg
mov
call
das
pop
stos
xchg
push
ja
xchg
or
lahf
jg
hlt
pushf
arpl
ret
popa
pushf
dec
mov
mov
out
xchg
dec
sub
imulb
mov
cmp
popa
sbb
cs
imul
into
sbb
inc
or
push
mov
sti
jg
shrl
mov
enter
popf
sti
sub
push
cld
jne
mulb
mov
xchg
push
roll
mov
aas
jo
cmp
pop
pop
les
test
orb
mov
in
and
push
out
mov
inc
neg
jno
mov
fwait
es
and
rcrb
pop
sbb
pop
addr16
negb
xlat
jnp
mov
adc
pushf
adc
adc
mov
dec
hlt
adc
adc
in
pop
sub
fldl2e
rcrl
arpl
ljmp
push
mov
movsl
scas
ljmp
test
xor
out
aad
xor
lea
fwait
ja
mov
push
sarb
push
jb
loope
mov
jns
sbb
inc
in
ljmp
bnd
gs
pusha
sbb
cmp
mov
sti
ja
loopne
movsb
test
sbb
stos
int3
flds
adc
fcoms
in
sarb
clc
mov
cli
mov
lret
loope
dec
mov
and
scas
mov
jno
push
fistpll
jecxz
movsb
sahf
lcall
push
fistpll
movsl
popf
mov
dec
dec
lret
cmpsb
inc
mov
cltd
dec
inc
push
cmpsb
pop
adc
xchg
loopne
sbb
jnp
sti
outsl
mov
cwtl
into
leave
outsl
cmp
daa
jecxz
outsl
sbb
or
mov
push
jmp
ret
pop
jbe
ss
xchg
in
es
jle
mov
push
in
mov
xchg
inc
sub
lock
pop
rorb
pop
movsl
sahf
lea
jns
and
push
cmp
gs
pop
sbb
aad
mov
jbe
aad
mov
mov
or
add
xor
icebp
xor
add
inc
leave
movsb
in
adc
adc
mov
std
inc
adc
adc
loop
loope
cli
jmp
aam
stos
ja
outsl
frstor
in
dec
cmp
pop
adcb
adc
aad
jecxz
pop
xchg
pop
loopne
lock
test
xor
das
inc
scas
in
in
inc
ljmp
jecxz
pop
out
test
mov
pusha
stos
or
out
aas
jecxz
andl
loopne
aas
jo
push
in
adc
adc
fimuls
dec
cmp
push
jmp
rcrb
pop
adcb
adc
gs
jmp
jg
push
insl
push
add
pop
jmp
hlt
sarl
bound
cmp
mov
ljmp
jnp
in
loopne
sub
test
mov
and
fisttpl
or
int
xchg
popa
add
push
or
out
sarl
mov
push
adc
gs
mov
cmp
add
jnp
add
xchg
stos
and
mov
addb
mov
pop
enter
les
cmp
insb
leave
imul
rcl
push
jg
adc
ja
pop
push
mov
int
inc
out
cld
cmp
cmp
shlb
incb
mov
ds
or
xlat
cld
xchg
or
push
addr16
cmp
push
addb
ret
lcall
loopne
push
lcall
push
pop
adc
je
or
jmp
mov
xchg
rcrb
jbe
xor
dec
jae
add
imul
repz
daa
cwtl
inc
movb
out
int
popa
les
push
adc
adc
sbbb
bnd
jecxz
aas
pop
mov
ds
in
push
and
sbb
cmc
dec
mov
imul
les
sub
mov
rclb
imul
push
std
xchg
sbb
sub
add
mov
sub
mov
cmpsb
pop
adc
lock
rcll
cmpb
bound
rorb
pop
ljmp
cltd
popa
and
inc
adc
and
outsb
cmp
xchg
pop
push
pop
adc
push
in
lret
out
sbb
fists
jg
inc
mov
in
lea
out
xlat
fscale
add
push
frstor
into
push
push
pusha
loope
jl
add
dec
dec
lods
xchg
scas
jle
rcrb
push
stc
into
add
dec
sub
mov
enter
mov
cmp
dec
jge
cmp
mov
and
mov
movsb
pop
adc
fstps
mov
cmc
dec
pusha
xor
loope
nop
push
fs
mov
outsb
jbe
std
imul
repnz
rcl
fadds
pop
jns
fcmovb
push
fmuls
inc
push
cmc
mov
xlat
rol
daa
dec
xchg
into
jnp
and
int3
lods
flds
push
jno
stos
adc
fs
xchg
push
mov
mov
pop
bound
jb
popf
inc
sbb
dec
inc
mov
cmp
mov
jae
mov
lcall
inc
pusha
mov
push
and
or
das
jnp
lock
pop
mov
fists
and
push
lret
mov
fnstenv
jl
insl
mov
aas
outsb
test
dec
sahf
mov
fcompl
push
hlt
test
push
mov
sti
jl
gs
nop
or
roll
lahf
lcall
popf
jp
mov
mov
loop
hlt
rcrl
aas
mov
jle
jp
scas
inc
cmpb
or
or
inc
mov
imul
out
frstpm(287
mov
mov
mov
or
enter
pop
mov
push
lahf
jecxz
and
jg
dec
fwait
push
mov
out
mov
adc
inc
fcmovnbe
fildll
fldl
movsb
inc
push
cmp
sbb
and
pop
adc
push
pushf
test
out
fisttpll
inc
xor
adc
fiadds
in
or
out
push
xor
jge
push
push
mov
pusha
loopne
test
or
mov
pop
adc
and
enter
sub
add
rcll
mov
cli
push
pushf
and
mov
ja
cmc
pop
dec
xor
add
push
in
fidivl
das
pop
in
jne
pusha
pushf
test
inc
inc
loope
mov
add
add
shld
xor
xchg
jge
mov
pushf
test
out
pop
frstor
pop
setle
xor
or
xchg
popa
dec
inc
lock
xor
jg
shlb
pop
std
cli
enter
jns
enter
push
aam
xlat
push
and
mov
jmp
add
mov
jl
movsb
pop
hlt
ja
in
imul
jnp
inc
in
jnp
and
testl
add
sub
mov
inc
inc
cmc
pop
jbe
mov
mov
lods
sub
pushl
cli
jp
mov
insl
test
popa
push
xor
jae
dec
pop
es
sub
mov
or
dec
pop
out
jo
cmp
or
movsb
mov
and
inc
jmp
adc
ja
adcb
cltd
mov
cmpb
ret
dec
call
push
mov
inc
ret
test
das
inc
cmp
pmulhuw
pop
pop
lock
sarl
in
jl
sbb
mov
insb
xchg
sbb
mov
adc
inc
push
inc
add
std
mov
movsb
pop
adc
xchg
test
movsb
mov
jl
push
adc
sbb
adc
adc
mov
jecxz
mov
movsb
pop
adc
adc
adc
into
and
adc
cmp
iret
or
pop
adc
jle
lret
rcll
pop
lea
scas
aad
and
sbb
add
adc
add
inc
dec
movsl
pop
adc
imul
movsl
cs
insb
xchg
je
and
mov
aaa
lahf
sbb
mov
cmp
adc
adc
xor
cmp
and
cmc
test
or
mov
loop
mov
sub
cmp
push
adc
cmpsb
enter
pop
fisttps
jge
out
mov
jnp
jg
sub
mov
nop
and
xchg
cmpsl
mov
idivl
mov
xchg
loop
mov
dec
and
push
cwtl
push
scas
pop
pushf
fs
sarl
pop
cltd
sbb
cmp
sbb
clc
adc
adc
push
push
out
sub
adc
adc
subb
cmp
cmp
lds
pop
adc
outsb
mov
ret
pop
dec
movsl
sub
shrb
push
lcall
and
out
stos
jo
mov
lds
adc
pushf
fdivl
jmp
call
adc
adc
pop
sub
not
lds
sbb
add
pushf
lods
test
fmuls
inc
sbb
jb
sbb
mov
ljmp
mov
xlat
inc
inc
ficompl
adc
enter
mov
jle
jo
gs
fiadds
jge
cmpsl
insb
sub
in
pop
dec
sbb
sarl
fld
decl
cwtl
adc
scas
lds
in
xchg
and
out
mov
pop
pop
cld
ret
cwtl
jne
sbb
and
mov
xchg
pop
or
adc
add
out
jle
dec
and
mov
lret
cld
cmp
out
sbb
cmp
add
xchg
or
mov
cmpsl
stos
xor
mov
xor
inc
int
cs
mov
mov
in
fists
inc
rorl
or
fstpl
and
mov
xchg
dec
pop
mov
stc
and
and
xchg
das
or
xchg
or
add
xchg
pop
mov
mov
imul
cmpl
aaa
lcall
add
shll
xchg
mov
mov
dec
je
cmpb
pop
inc
aaa
jg
movsb
icebp
xchg
inc
pop
cmpsb
pop
xor
pushf
std
xor
shll
xor
punpcklwd
mov
xchg
rorl
add
sbb
rclb
push
adc
sub
adc
adc
dec
adc
leave
insb
sbb
dec
jge
int3
pop
daa
pop
mov
lds
add
insl
push
xchg
or
das
push
push
cmpl
call
out
fmul
jmp
shl
mov
orb
call
xor
and
cltd
mov
lret
xchg
sub
movsb
sbb
dec
ds
dec
xor
pop
rcrl
je
shrb
add
sbb
mov
std
xchg
lret
dec
jmp
out
pushf
jb
movsb
rcl
or
cmpl
sub
clc
imul
sbb
inc
mov
adc
mov
std
push
mov
clc
cmp
adc
adc
jb
in
adcb
adc
dec
aaa
outsb
test
inc
icebp
inc
mov
icebp
inc
ds
bound
stos
divl
sbb
es
cmp
andl
mov
add
sbb
push
mov
jecxz
pushl
inc
gs
fmuls
call
pop
loop
rclb
push
xchg
dec
shll
jmp
loop
adc
xchg
test
shll
pop
test
jne
mov
mov
adc
jns
das
iret
and
cld
lock
adc
inc
and
fs
add
xor
cmpsl
push
cmpsb
insl
and
inc
mov
jne
mov
mov
out
out
or
mov
mov
mov
movsl
pop
mov
enter
sbb
xchg
sbb
scas
stc
sub
data16
daa
and
cwtl
cmp
loop
cmpsl
xor
jae
mov
push
clc
les
mov
out
scas
shlb
movsl
sbbl
popl
out
jb
cmpsb
cmpsb
addr16
cmpl
pop
inc
addr16
xchg
pushf
out
ja
stos
add
mov
xor
adc
push
sbb
cmp
adc
ds
jae
cmp
fstl
mov
jae
repz
pop
int3
gs
mov
push
jae
movsl
or
adc
adc
ja
cs
fiadds
adc
xor
hlt
mov
push
adc
sub
in
mov
test
inc
out
xchg
loopne
shll
scas
jmp
cmpb
adc
mov
movsl
push
add
movsl
push
xchg
jecxz
add
mov
pop
lahf
pop
and
or
xor
push
mov
mov
sti
xchg
lahf
jmp
xchg
pop
mov
lds
sbb
add
sub
mov
js
pop
popa
xor
sbb
sub
and
loope
ljmp
push
das
cs
cmc
fildl
xchg
sub
out
mov
ja
aaa
lods
dec
mov
fcompl
cwtl
jne
and
sub
jo
sbb
push
inc
popa
lret
test
lahf
fnstenv
and
and
ret
or
push
lret
pop
pop
scas
imul
cld
test
popf
push
into
add
xchg
xchg
shlb
rorl
or
out
fwait
sbb
push
cli
unpcklps
push
pusha
push
movsl
xchg
xor
ret
ficoms
outsb
push
in
in
mov
jmp
notl
or
cmc
cld
jae
dec
xor
orl
jno
mov
push
and
and
pop
clc
xchg
enter
xor
inc
in
push
repz
inc
adc
int3
fdivrs
fcomi
fisttpll
repz
or
adc
sahf
test
adc
decl
add
dec
addb
jbe
repnz
cmpsb
pop
adc
addl
pop
mov
sub
rol
xorl
movb
pop
mov
pop
cmpsl
mov
xor
jbe
pop
jmp
mov
xchg
hlt
adc
adc
jns
in
xor
sub
loopew
xchg
push
mov
sub
cli
hlt
pushf
arpl
sbb
mov
shrb
dec
out
mov
mov
rorl
out
cld
aaa
xlat
in
mov
xchg
call
test
inc
add
aas
mov
or
aam
hlt
aam
mov
and
cmp
jge
jg
test
pop
jo
xchg
out
push
movsl
icebp
loopne
and
cmpsb
pop
adc
adc
jne
shrl
add
mov
rcr
fnsave
daa
addb
xor
pop
adc
sub
and
cmp
jnp
js
jmp
sar
sbb
adc
adc
popa
mov
jns
loop
dec
inc
test
mov
and
in
mov
push
popf
icebp
test
xchg
jo
ja
xor
pop
adc
mov
and
pop
adc
or
dec
jne
movb
cmpsb
pop
adc
popf
adc
stos
outsb
or
sahf
pop
or
push
into
jecxz
push
pop
iret
jbe
out
insl
or
out
jmp
xchg
insb
loopne
cmpsb
pop
adc
lahf
add
add
syscall
fs
push
jg
aam
into
sti
xchg
jbe
negl
push
int3
iret
es
jno
push
adc
adc
jp
pusha
sbb
pop
inc
inc
xchg
mov
mov
jb
and
rclb
jmp
insb
ljmp
sub
cmp
pop
mov
adc
xchg
test
and
stc
cwtl
clc
mov
adc
jmp
sbb
shrl
adc
pop
sub
xchg
leave
out
sub
daa
mov
adc
adc
mov
mov
xor
in
in
adc
adc
xor
jl
mov
pop
push
lahf
sbb
cmpsl
lods
outsl
jae
pop
xchg
clc
adcl
mov
iret
das
ret
jno
fdivs
mov
ret
mov
jle
mov
pop
push
out
add
pop
adc
adc
insb
push
dec
and
gs
inc
cmp
sbb
xor
push
mov
test
test
jge
or
les
push
stc
out
stos
adc
cmovl
push
dec
xchg
xlat
adc
sub
ja
mov
fimull
inc
inc
rol
inc
and
cmpb
push
adc
push
and
cmp
pop
cmp
push
adc
mov
pusha
repz
lcall
fldenv
lcall
jecxz
lods
leave
xor
daa
scas
xchg
nop
lods
push
adc
push
adc
adc
movsl
leave
inc
into
xchg
sbb
mov
add
mov
call
insb
mov
jg
inc
out
fwait
incl
push
adc
add
push
push
push
jmp
call
mov
jl
xchg
negl
aas
inc
subb
lods
lcall
js
lea
popf
insb
test
jge
mov
fimuls
pop
cwtl
mov
mov
adc
nop
imul
add
mov
stos
mov
and
add
inc
mov
mov
sub
pop
adc
cmp
push
adc
pop
cli
jle
pop
popa
mov
daa
and
adc
mov
or
mov
int
add
push
mov
pop
shl
mov
adc
mov
adc
gs
xchg
cmp
loope
push
mov
sbb
sar
leave
std
loopne
cmp
mov
aaa
xor
ret
and
jne
or
fsubl
xor
push
call
dec
lods
cmpsb
inc
or
pop
test
hlt
add
sbb
out
push
pusha
pusha
sar
adc
mov
test
push
inc
call
test
out
xchg
dec
filds
dec
cld
ljmp
pushf
sbb
xchg
jge
enter
sbb
sbb
movsl
cmc
movsl
jp
add
gs
jl
or
dec
mov
adc
mov
sub
mov
sub
andl
push
clc
jl
scas
popa
cmp
mov
aas
sub
cmc
or
in
das
cmp
push
outsl
lock
or
fbstp
cmp
fdivl
icebp
and
int
pop
or
hlt
int
pop
add
mov
dec
test
adc
scas
sub
add
fs
cwtl
fadd
rorl
arpl
cmpsb
pop
adc
sar
and
adc
pop
insl
sub
std
pop
mov
pop
adc
cmp
and
jne
xlat
sub
ret
scas
mov
mov
pop
inc
mov
push
adc
out
mov
push
test
dec
sub
xorb
mov
mov
mov
mov
ja
sbb
xchg
lret
push
adc
mov
mov
and
cmp
pop
dec
call
push
mov
adc
int
lea
insb
mov
scas
push
clc
mov
xor
push
sub
pusha
mov
adc
xchg
jbe
pop
sub
stos
es
add
push
xchg
lds
call
pop
adc
or
xchg
inc
cmp
shr
insb
xor
jo
push
dec
stc
popf
scas
and
push
mov
jecxz
mov
ret
pop
in
fidivrs
stos
cmpsb
fwait
sub
inc
xor
dec
pop
stos
push
pop
pop
ss
xor
cli
loopne
insl
or
mov
pop
adc
out
pop
dec
jp
mov
lods
das
addb
int3
adc
andb
mov
arpl
and
fwait
and
push
aam
and
ljmp
mov
push
adc
mov
adc
add
repnz
addb
mov
call
push
sbb
scas
sbb
xlat
mov
xchg
loopne
xchg
ljmp
add
dec
lret
cmpsb
pop
adc
sbb
mov
pop
movsl
xor
data16
xor
push
out
sub
inc
cwtl
jnp
aad
push
xor
sbb
test
ljmp
daa
or
push
outsb
and
mov
cmp
adc
push
ss
cmp
movsl
lret
add
or
pop
inc
cmp
mov
jg
mov
imul
clc
jo
pop
push
je
mov
mov
pop
push
mov
push
adc
mov
sbb
and
jns
sbb
stc
mul
das
sub
cmpsb
pop
adc
or
inc
in
adc
aad
xchg
fs
lds
mov
dec
arpl
mov
jns
or
or
xchg
out
sub
jmp
and
ret
test
cmpsb
pop
adc
xchg
add
xchg
mov
push
pop
jl
push
pusha
or
ljmp
pop
das
sbb
cmp
cli
push
xchg
out
sub
mov
dec
addb
mov
jecxz
popa
mov
sub
rcll
rorb
mov
std
inc
xor
sbb
pop
adc
arpl
adc
out
popf
cmp
pop
lds
push
adc
sub
pop
adc
cmc
ds
adcb
adc
inc
or
movsb
pop
adc
add
cmp
jne
movsb
adc
in
adc
sbb
dec
sub
imul
inc
push
movsb
sbb
pop
adc
negl
hlt
arpl
mov
mov
add
cs
jle
sub
push
adc
lods
das
pop
mov
xchg
leave
pusha
js
out
insb
xchg
dec
mov
xor
decl
or
pushf
push
xchg
lret
and
pop
adc
stc
push
sbb
loopne
movsl
sbb
inc
and
in
pop
pop
xor
aad
xchg
aam
icebp
imul
cmp
adc
adc
jne
pop
xchg
pop
and
push
cld
cmp
sub
or
add
mov
lock
push
std
mov
adc
jbe
sarb
cmp
cmp
inc
mov
xchg
sahf
shrb
jb
push
sub
push
jno
rolb
or
sbb
jne
cli
and
dec
scas
cmp
sbb
inc
mov
push
adc
sub
inc
cltd
jp
mov
lret
rcll
mov
sbb
mov
push
and
sbb
sub
mov
enter
add
scas
inc
mov
xchg
dec
and
mov
jnp
cwtl
sub
loop
jmp
jg
xchg
push
test
ret
lods
movsl
ficoms
cltd
sahf
mov
jne
jb
loope
jle
movsb
mov
outsl
ds
mov
sub
adc
adc
inc
dec
cmp
xor
xchg
rcr
mov
pushf
sbb
mov
mov
je
insl
test
add
cmp
mov
push
je
push
adc
jae
fdivl
mov
push
cmp
sbbl
sbb
mov
stos
mov
insl
cmp
out
mov
add
bound
test
stos
jne
outsl
push
ret
xchg
dec
push
jp
sub
aad
popf
rcrl
test
pop
adc
sbb
sub
loopne
mov
test
dec
sbb
icebp
mov
int3
nop
insl
mov
lret
hlt
cmp
add
or
int
lahf
sub
mov
arpl
mov
data16
test
pop
adc
test
inc
jg
sbb
fdiv
adc
xchg
push
push
xor
xchg
mov
pop
pop
inc
out
int3
cs
mov
adc
mov
sti
ficoml
mov
test
fstpl
aam
adc
mov
adc
inc
test
or
ja
xchg
movsb
or
xchg
xor
mov
roll
les
mov
test
push
es
ja
inc
pushf
stc
and
and
js
pushf
pop
dec
mov
jo
push
aad
ja
iret
int
and
xchg
mov
mov
add
mov
movsb
xchg
jbe
add
mov
dec
inc
dec
or
add
mov
mov
cmpsl
mov
and
in
cmp
je
cltd
xchg
mov
ret
sbb
or
hlt
les
arpl
xchg
pop
adc
mov
and
in
test
xor
pop
push
cmp
cli
xchg
ret
notl
push
lret
subb
sub
xor
jmp
or
das
fidivl
sbb
hlt
shrb
dec
mov
vcvtsi2sdl
imul
add
xchg
fwait
pop
mov
pop
int3
jle
movups
inc
into
popf
cmp
shll
lds
mov
ret
std
push
lcall
dec
inc
xchg
or
cmp
hlt
je
add
popa
pop
shrb
inc
nop
test
roll
dec
push
into
add
pop
out
or
add
out
add
shld
ret
fsubrl
stos
push
jne
movsb
push
mov
sti
in
adc
cs
add
add
sbb
push
int3
jl
adcl
mov
push
jbe
mov
pushf
push
cmpsb
lds
mov
cmpsl
ret
mov
subl
stc
aaa
aad
dec
loop
push
dec
and
push
je
popl
adc
sbbb
mov
push
lea
and
ret
mov
mov
xor
push
lret
xchg
popf
push
negl
add
and
adc
lahf
push
cmc
push
sub
pop
lods
inc
push
imulb
xlat
dec
adc
add
dec
je,pt
jecxz
mov
mov
mov
mov
ljmp
pop
dec
stc
xchg
repnz
cmp
or
add
dec
cmp
or
and
jne
or
xchg
add
jle
pushf
gs
push
jnp
jl
inc
aaa
not
sbb
push
mov
pop
xchg
pop
les
push
rcl
push
sbb
xchg
dec
call
xor
add
rorl
gs
pop
cmpsb
pop
shll
outsl
shrb
push
movsl
pushf
xchg
xor
and
xor
je
bound
or
testb
daa
js
jae
sahf
loope
mov
lret
mov
push
into
adc
fistpll
mov
call
jmp
stos
data16
mov
out
push
mov
adc
loope
dec
or
or
or
or
mov
mov
outsl
stos
push
lods
adc
fcmovbe
pusha
dec
mov
les
pushf
push
ret
pop
ja
lret
and
add
sti
fxch
addl
push
test
jb
je
sub
arpl
xor
fisubrl
mov
clc
xor
or
cs
jno
cmp
cmp
jae
int3
jae
gs
or
xchg
xchg
lahf
mov
dec
jl
iret
das
das
cs
nop
xlat
sahf
cmpsb
shrl
xchg
push
cmpsb
cmpsl
test
inc
fwait
xchg
ret
cmp
mov
out
inc
iret
jo
jecxz
adc
push
cs
pop
adc
in
call
leave
jo
mov
mov
shrb
cmp
xchg
or
xchg
fiaddl
push
insl
adcl
xor
mov
or
out
push
pushf
sbb
pop
adc
mov
inc
clc
jnp
movsb
mov
std
ds
enter
sub
add
push
pop
jne
mov
xor
rcl
mov
or
int3
adc
popf
cmp
mov
pop
ficomps
aaa
fsubl
inc
nopl
fsubl
mov
enter
subl
mov
sarb
push
or
inc
mov
add
mov
mov
push
xor
test
or
leave
rorb
in
jge
mov
pop
pop
xor
rcr
jl
data16
jbe
inc
cmpsl
pop
adc
arpl
mov
les
sbb
cmp
dec
inc
insl
add
cld
add
and
test
push
pop
in
cmp
cli
or
into
xchg
mov
lret
stc
and
mov
sub
imul
cmp
mov
dec
or
addb
sahf
push
mov
repnz
out
or
fldl
add
notl
xorb
clc
or
shl
js
fsub
testb
aam
pop
mov
mov
inc
arpl
iret
shr
test
jge
test
lret
in
xbegin
ss
add
ja
nop
sub
and
cmp
cmp
jp
sub
arpl
adc
scas
lods
ret
test
je
pop
jl
pop
add
inc
cmpsl
pop
adc
sub
imul
sbb
ds
in
xchg
loopne
mov
mov
sbb
data16
pop
inc
fisttpll
in
jge
push
and
add
mov
pop
adc
lahf
rcr
mov
sbb
in
movsb
pop
adc
sbb
adc
push
adc
pop
aad
in
mov
mov
inc
lcall
xor
jecxz
add
jle
inc
pop
adc
mov
andb
fidivl
pusha
xchg
loope
icebp
or
push
dec
push
mov
outsl
add
in
xchg
cmp
dec
xchg
xchg
and
rcrl
mov
out
aam
pop
adc
push
loopne
pop
sub
cmc
cli
rcrl
adc
adc
pop
xchg
nop
cmp
cwtl
ret
mov
xchg
addr16
repnz
inc
mov
inc
adcb
adc
ret
mov
cmp
movsl
pop
adc
and
movsl
pop
adc
mov
movsb
lock
fcmovne
frstor
iret
push
movaps
lods
in
ja
mov
inc
pop
inc
es
mov
adc
adc
out
sahf
push
sub
mov
sub
mov
jnp
sbbb
mov
inc
fsts
pop
xchg
icebp
push
repz
scas
clc
mov
xchg
cmpsl
or
out
mov
push
int
mov
nop
movsb
ds
adc
adc
cmc
pop
out
inc
addl
dec
shl
popa
fsubrl
aaa
cmp
loope
pop
mov
in
push
in
sub
jne
cmp
mov
shll
cwtl
in
adc
das
pop
sub
and
lret
cmp
xor
lds
out
andl
rorl
stos
addr16
repnz
dec
stos
xchg
xor
adc
jne
sbb
dec
scas
add
xor
adc
mov
aas
pop
loop
mov
jo
fdivl
mov
daa
ret
sbb
iret
mov
hlt
xorb
int3
cmp
or
push
sahf
jae
mov
jecxz
popf
cmp
adc
aad
add
add
lds
rcrl
js
sbb
lea
xor
ljmp
mov
cmp
mov
pop
push
pop
adc
int
add
shl
mov
xchg
dec
data16
jnp
pop
push
pop
adc
mov
fwait
xchg
cld
loop
pop
or
mov
fidivs
shrb
cmp
into
jbe
cmc
adc
inc
inc
jne
movb
das
pop
push
sub
push
addb
das
arpl
popf
cmp
addb
je
ret
stos
pop
mov
jnp
or
out
sub
cmp
add
popl
add
jo
shrb
cmp
loopne
lea
push
loopne
call
pop
push
std
push
sahf
push
add
jae
leave
adcb
movsl
sbb
outsb
mov
mov
mov
je
push
adc
out
xor
icebp
push
mov
push
jl
cmp
mov
shll
aam
rcll
pop
test
jge,pt
out
cs
mov
adc
fs
mov
mov
insb
outsl
cs
pop
push
ja
dec
sub
sbb
andl
push
fldcw
xor
pop
adc
adc
aas
jno
pop
rorb
cmp
mov
scas
xchg
mov
jnp
push
sbb
rcrl
in
jle
push
or
sbbb
mov
into
jne
mov
das
or
xor
out
test
imul
xchg
pop
jmp
arpl
pop
cltd
lcall
jne
call
inc
and
mov
adc
mov
jb
rorl
dec
insb
push
pop
adc
xorb
test
pop
lahf
push
cli
sbb
icebp
das
fs
jno
orb
push
adc
pop
or
inc
pop
int3
mov
mov
mov
adc
mov
stos
insb
push
pop
adc
xchg
or
ss
jl
push
adc
mov
push
lock
out
push
roll
pop
adc
inc
popa
jnp
scas
nop
jmp
push
push
adc
adc
mov
in
adc
adc
add
push
dec
jbe
xchg
push
push
inc
addr16
out
movsl
pushf
dec
stos
sub
ja
movsl
push
lods
xor
pop
adc
mov
outsl
xchg
xor
cs
mov
add
pop
sbb
movsl
pop
adc
push
aad
fdivs
add
out
jo
adc
ljmp
xor
jle
scas
shl
mov
ret
notl
push
in
cwtl
push
insb
testl
xlat
push
adc
in
orb
call
les
bound
adc
and
insb
jo
pop
adc
pop
ficoms
jo
fdivrs
cmp
aam
dec
jo
lock
outsb
jnp
inc
push
clc
jnp
out
das
int
sub
push
adc
test
xchg
mov
es
pop
leave
mov
sub
outsb
inc
sbbl
movsl
cmp
jo
sub
cs
sti
add
fs
cmp
inc
pop
mov
mov
sbb
jae
xchg
call
mov
imul
lods
push
inc
je
push
adc
push
paddb
cmp
enter
sbb
pop
and
cmp
push
in
cmp
nop
mov
sub
inc
xchg
and
adc
addl
mov
lds
push
in
mov
cmp
jle
jns
mov
jge
push
pushf
mulb
push
loopne
pop
rol
call
mov
pop
inc
shrb
jl
test
stos
cmp
pop
rorl
adc
adc
cli
jnp
push
mov
sbb
pop
inc
shrb
mov
rcll
bound
mov
adc
add
jmp
sub
aam
pop
call
js
push
adc
sbb
push
xor
push
push
ljmp
icebp
mov
cli
inc
jno
inc
jns
jmp
dec
js
lds
push
adc
ja
hlt
nopl
ds
mov
mov
pop
mov
mov
sub
fisttpl
adc
fmuls
das
dec
push
mov
mov
xchg
ret
fidivrl
pop
adc
lock
scas
lds
add
add
mov
shlb
roll
test
dec
js
inc
mov
mov
add
xor
pop
adc
adcb
adc
jmp
mov
jmp
dec
xor
repz
add
or
sti
cmc
sahf
aam
inc
sub
adc
or
add
pop
mulb
mov
push
repnz
jo
int
adc
sbb
mov
out
data16
dec
adc
ja
int
mov
icebp
inc
cmpsb
lahf
dec
repz
or
xchg
mov
ret
pop
pop
call
lock
out
aam
je
outsl
mov
rol
sub
fwait
mov
adc
pop
push
sbb
or
add
lcall
mov
and
or
stos
pop
or
dec
lds
push
imul
pop
adc
pop
and
fstp
sahf
lahf
daa
dec
test
push
adc
pop
adc
or
xchg
push
adc
dec
inc
add
adc
xchg
add
xor
sbb
sbbl
pushf
adc
adc
lods
push
imul
xchg
push
adc
push
hlt
adc
adc
movsl
pop
adc
sub
xor
jo
movsl
pop
adc
jno
push
push
aas
in
and
daa
popa
add
jle
pop
dec
std
push
outsl
arpl
addr16
es
jns
cmp
addr16
movsl
xor
loope
adc
adc
rclb
repnz
mov
rorl
mov
pop
adc
xchg
in
movsl
pop
adc
mov
xchg
jecxz
sahf
sbb
pop
dec
out
stos
lods
outsl
sub
sub
addr16
das
pop
push
xchg
faddl
inc
enter
in
jne
ds
mov
arpl
mov
dec
or
inc
imul
pop
pop
nop
sbb
sub
bound
push
mov
xor
or
xor
movsl
shll
push
sahf
movl
movsl
and
cmc
lock
mov
jno
clc
cltd
jmp
aas
dec
cmp
xchg
loope
mov
lahf
lods
mov
dec
cmp
push
aas
sub
aaa
jg
xor
add
xchg
xchg
xchg
data16
repnz
test
ja
push
mov
iret
xchg
or
hlt
push
sub
cmp
add
cwtl
jo
aas
lods
mov
in
mov
mov
inc
aam
lret
xlat
pop
clc
pop
mov
jecxz
pop
mov
cmp
hlt
data16
xchg
push
fwait
sbb
push
mov
ljmp
or
or
mov
push
icebp
xchg
scas
filds
rorb
lds
test
and
sahf
idivl
popf
sub
test
cld
decb
std
xchg
push
xor
xchg
cmp
shll
shrl
mov
call
mov
outsl
push
inc
cmc
mov
xchg
call
sqrtps
sbb
bound
mov
hlt
adc
dec
pushl
jecxz
shll
xchg
push
popa
pop
shrl
inc
and
inc
popa
lds
fcoml
dec
std
jo
inc
sub
packsswb
push
xor
daa
add
clc
mov
jge
mov
xchg
jle
hlt
sbb
sar
sbb
adc
dec
add
or
mov
jg
test
xor
jge
in
adc
mov
push
jmp
and
xor
test
jmp
mov
sbb
xchg
ret
test
sub
icebp
in
shlb
mov
pop
mov
vcvttsd2si
addb
add
leave
test
hlt
sbb
sarl
mul
into
popf
push
xlat
das
aad
shr
mov
out
mov
loopne
call
push
push
fcomps
fs
sub
push
sti
jg
jge
sub
inc
add
mov
int3
iret
push
xor
cmpsl
pop
adc
stc
cld
decl
cwtl
stos
enter
mov
ret
clc
jl
js
xlat
lea
imul
test
sub
jne
inc
ret
orb
cmp
xchg
adc
cmp
int
or
iret
dec
add
lea
stos
adc
shlb
lcall
mov
jl
call
and
pop
adc
cld
pop
mov
sub
scas
gs
push
rcl
cmpsl
jb
sub
push
mov
je
mov
push
jl
lahf
shll
dec
mov
negl
push
mov
mov
lods
jnp
es
out
inc
push
jp
jno
pop
mov
lret
dec
dec
ret
mov
adc
cmp
dec
inc
xorl
pop
or
push
xchg
xchg
push
jae
push
dec
mov
mov
mov
addr16
xchg
lret
loop
lahf
adc
inc
insb
lods
sub
cli
cmp
jmp
xchg
and
scas
sub
mov
xchg
ljmp
pop
sarb
jbe
insb
out
mov
fistpl
pop
stc
sbb
push
jl
mov
pop
jmp
in
jge
mov
add
inc
fcmovnb
daa
test
dec
cmp
nop
ss
adc
fs
add
fcomps
or
fsubp
xchg
stc
sbb
pop
fwait
repz
sub
leave
enter
leave
mov
mov
mov
test
shrb
nop
pop
xchg
xchg
nop
push
adc
sti
aam
add
adc
pop
push
mov
cmp
pop
fcmovu
fdivs
xchg
or
adc
cmp
pop
aaa
popf
xchg
gs
bnd
jp
mov
sbb
add
mov
mov
xchg
stos
adc
jne
mov
push
jbe
cs
xor
push
sbb
cwtl
clc
xlat
pop
xchg
fdivp
push
arpl
addr16
hlt
mov
in
ljmp
das
das
addr16
fcmovnb
pop
jp
push
cmpsl
cli
aad
mov
adc
stc
mov
mov
cmp
mov
aaa
sbb
cmp
adc
test
in
jl
xlat
test
pop
push
mov
mov
jg
adc
dec
pop
jle
lods
out
push
and
mov
adc
andb
mov
xchg
lock
pop
adc
dec
pop
adc
pop
fs
pop
aam
mov
or
pop
adc
shl
xor
xchg
dec
pop
adc
das
pop
sbb
inc
add
pinsrw
gs
jl
out
cli
xchg
mov
lds
and
dec
pop
adc
jnp
pop
push
xchg
dec
pop
adc
inc
jne
mov
xchg
ret
stc
and
icebp
adc
push
xor
cmp
inc
movsl
pop
adc
or
movsl
pop
adc
sbb
movsl
pop
adc
mov
repnz
jo
push
mov
dec
pop
adc
nop
or
mov
insb
sub
call
pop
adc
pop
pop
das
stc
sbb
xor
andb
movsl
pop
adc
dec
pop
adc
adc
sbbb
push
mov
sub
pop
in
aad
hlt
les
adc
clc
sbb
cltd
leave
roll
into
xchg
mov
les
xlat
sub
jge
push
and
sbb
pop
out
popf
mov
shl
inc
movsl
pop
adc
test
pop
push
mov
pop
ds
movsl
pop
adc
add
xor
inc
inc
push
ljmp
hlt
lahf
push
xor
xor
adc
loopne
decb
inc
clc
xchg
or
imul
jg
out
mov
push
mov
std
pop
or
pop
std
cmp
test
daa
in
aam
in
and
ds
jno
pop
mov
test
xor
stos
mov
sub
movsl
outsl
mov
add
fsubrs
jne
addl
adc
sahf
cmp
mov
in
cld
movsl
pop
adc
pop
cwtl
dec
pop
adc
dec
pop
adc
movsl
jbe
movsl
pop
adc
sub
pop
adc
insl
add
ljmp
test
into
inc
int
jmp
dec
sub
movsl
pop
adc
inc
test
les
adc
fcmovnbe
push
add
push
pop
adc
gs
xor
je
call
popa
jl
dec
roll
inc
xor
stc
les
adc
push
outsb
mov
rolb
mov
dec
mov
dec
pop
adc
movsb
dec
pop
adc
fmul
dec
ficoml
dec
pop
adc
mov
dec
pop
adc
mov
pop
in
fldl
jg
scas
les
adc
jg
neg
dec
cmp
dec
pop
adc
fs
sub
mov
mov
fistl
inc
push
mov
pop
adc
cmp
repz
mov
data16
sbb
xchg
dec
sub
dec
pop
adc
fbstp
mov
pop
adc
mov
or
leave
outsl
mov
dec
pop
adc
repnz
adc
cmc
sbb
xor
cs
cmpb
xor
or
cmp
pop
adc
inc
movsl
pop
adc
imul
pop
adc
enter
adc
test
jnp
mov
xchg
push
dec
dec
cmp
mov
dec
sub
mov
in
pop
into
lods
inc
or
xor
in
xorb
pushf
es
jp
adc
cmp
pop
adc
dec
pop
dec
ljmp
das
jmp
mov
movsl
pop
adc
cmpsl
jae
jns
and
adc
mov
js
mov
insb
movsl
pop
adc
out
out
jmp
mov
test
xlat
pop
push
fcoml
in
sub
test
mov
pop
pop
add
dec
xchg
aaa
mov
jp
aaa
and
in
sahf
imul
jae
in
ret
push
fs
mov
mov
lret
fcomip
std
push
repz
stos
sub
jecxz
mov
mov
push
repnz
inc
push
xchg
push
and
xor
fnstenv
pop
lock
mov
lds
aaa
ret
adc
push
jmp
and
xor
pop
rorb
sbb
gs
les
add
jle
hlt
call
or
scas
push
popa
inc
js
mov
lds
pop
jecxz
shrb
push
push
mov
subb
mov
vcvttsd2si
stos
xchg
sbb
jmp
jl
outsl
push
nopl
idiv
jecxz
add
inc
lock
scas
cli
xor
lods
sub
pushf
jmp
mov
test
daa
push
dec
cmp
leave
lahf
int3
add
cmp
out
je
pop
push
mov
mov
sbb
faddp
div
loopne
inc
push
loopne
xchg
dec
pop
adc
adc
add
pop
adc
adc
lock
adc
stc
ja
lea
adc
rorb
inc
or
les
adc
movsl
pop
adc
adc
push
xor
push
cmp
outsb
data16
lea
popa
adc
jge
clts
adc
sar
mov
mulb
cmpsb
sbb
popf
pop
or
call
sub
sub
outsb
push
js
dec
mov
rcrl
hlt
ficomps
jnp
jnp
sub
add
and
sbb
mov
mov
mov
stos
mov
sub
mov
jmp
aaa
jo
pop
adc
lock
and
sub
add
dec
mov
je
pop
xor
cld
mov
fildll
adc
jae
inc
mov
adcb
push
xlat
push
lods
dec
gs
fstpl
scas
mov
movsl
pop
adc
mov
nop
inc
sbb
decl
out
cmp
pop
lds
lcall
jg
int3
jns
push
call
push
adc
nop
jg
mov
ja
and
std
pusha
xorb
stos
in
xchg
ret
mov
mov
inc
or
add
pop
push
mov
rolb
out
xchg
push
adc
rol
lods
mov
pop
cmp
ja
adc
cmc
pop
shll
outsl
test
adc
mov
in
jmp
add
cmpsb
dec
xor
cmc
inc
xchg
sub
cmp
mov
fldt
jb
dec
aam
sbb
push
adc
sti
dec
cwtl
dec
cmpsl
adc
push
adc
scas
sti
loope
loope
or
push
adc
fs
mov
adc
das
push
loope
insl
sbb
std
push
inc
adc
fldcw
adc
lods
pusha
in
push
test
andb
xchg
cltd
xor
jae
jbe
push
mov
ficompl
aaa
movsl
jmp
pop
mov
jnp
loop
pop
in
and
arpl
dec
inc
stos
sbb
inc
movsl
add
mov
insl
pop
mov
loop
xor
jo
jp
lret
cs
sbb
cld
test
mov
mov
popa
leave
aad
in
lcall
bound
pop
inc
jg
sarb
cmp
subl
dec
pop
adc
lret
add
inc
mov
and
lea
movsl
pop
adc
in
std
push
mov
frstor
test
movsl
pop
adc
inc
mov
pop
jno
xor
jle
pushf
movsl
pop
adc
call
lods
xor
jle
jge
dec
into
fcmovne
mov
adc
pop
adc
mov
movsl
pop
adc
jmp
iret
pop
aaa
xor
xor
mov
mov
dec
pop
adc
lcall
in
push
or
inc
pop
mov
jecxz
popf
push
std
test
pop
adc
pop
xchg
mov
test
push
mov
shld
decb
adc
repz
xor
call
push
jbe
inc
sub
cmp
std
cli
ret
aad
sti
sbb
pusha
jo
pop
adc
mov
out
das
pop
lret
jo
js
inc
sbbl
pop
cmp
inc
and
out
mov
popf
push
pop
lds
shll
adc
or
addl
divl
pop
adc
lcall
lods
sub
loope
addb
jae
mov
jg
mov
adc
fstps
lds
aam
cltd
in
pmaddwd
out
push
cmp
mov
insb
sbbb
movsl
pop
adc
lret
adc
das
fstpt
xchg
shl
test
mov
inc
test
dec
sub
add
movsl
pop
adc
arpl
movsl
pop
adc
jo
inc
mov
stc
movsb
movsl
pop
adc
add
or
leave
pusha
add
mov
mov
xlat
nop
movsl
pop
adc
add
pop
jb
dec
mov
ljmp
jecxz
sub
push
push
mov
mov
push
jge
adcl
movsl
pop
adc
call
inc
mov
popa
inc
xchg
sahf
lods
ficomps
xchg
stos
adc
sub
jbe
movsl
pop
adc
test
mov
or
pop
adc
daa
mov
outsl
push
jecxz
clc
adc
pop
adc
test
pop
pop
push
bound
test
xchg
mov
xor
gs
mov
clc
dec
test
jo
mov
adc
mov
movsl
pop
adc
lret
pop
adc
mov
xor
enter
adc
loop
pop
les
cmpsb
lock
nop
jecxz,pn
dec
and
movsl
pop
adc
push
mov
scas
xchg
mov
movsl
pop
adc
mov
dec
pop
cmp
jg
push
fnstsw
push
pop
pop
bound
leave
dec
sbb
mov
jo
pop
adc
fld
push
iret
leave
dec
das
pop
adc
stos
lea
or
jle
dec
cmp
scas
add
movsl
sbb
andb
cmp
mov
adc
jecxz
xchg
xor
lret
iret
lret
ret
pop
adc
xor
inc
lock
sub
or
test
movsl
pop
adc
lea
movsl
pop
adc
xchg
push
or
adc
test
movsb
or
in
scas
test
or
add
mov
mov
pop
adc
inc
mov
movsl
pop
adc
push
jmp
cmp
sub
xchg
aaa
cmpb
cmpb
pushf
pushf
movsl
pop
adc
mov
pop
enter
push
loopne
imul
nop
mov
pop
cwtl
movsl
pop
adc
add
adc
adc
mov
ror
push
mov
pop
nop
movsb
movsl
pop
adc
sahf
fstl
jp
movsb
jns
popa
hlt
call
adc
aam
sbb
add
mov
jo
xchg
movsl
pop
adc
jns
cwtl
movsl
pop
adc
mov
movsl
pop
adc
inc
add
pushf
cmp
rorl
adc
push
mov
jl
push
adc
mov
jb
imul
pushf
aam
inc
cmc
pop
andl
pop
adc
popf
inc
dec
movsb
movsl
pop
adc
jbe
shll
inc
and
pop
adc
ret
movsl
pop
adc
loopne
imul
lds
adc
imul
adc
xchg
int3
je
jmp
movsl
pop
adc
arpl
mov
cmp
movsl
pop
adc
mov
pop
adc
bound
std
push
test
pop
adc
inc
add
pop
mov
aam
cli
jno
mov
pop
mov
stc
jmp
pop
lods
movsb
movsl
pop
adc
pop
jge
pusha
test
test
inc
dec
shll
lcall
pop
lret
lea
movsl
pop
adc
mov
sbb
and
xlat
jmp
stos
js
je
jmp
les
arpl
pop
ds
adc
and
adc
push
adc
sbb
hlt
call
xor
adc
push
in
testl
call
lds
mov
jo
std
cmp
ja
mov
movsl
pop
adc
cmp
les
dec
push
xchg
adc
mov
mov
push
fisubl
out
test
pop
in
aas
test
push
adc
mov
jns
lock
adcb
adc
and
mov
mov
mov
movsl
pop
adc
nop
movsl
pop
adc
lahf
push
jno
inc
pop
addr16
scas
in
ror
scas
loopne
insb
lock
dec
ret
jg
mov
rcrb
rcl
jno
rcll
sbb
add
ja
popa
test
pop
adc
pop
adc
fmul
ja
lcall
mov
nop
movsl
pop
adc
test
pop
adc
sub
cmp
dec
inc
pop
fs
arpl
dec
dec
cmp
xchg
fxch
mov
loope
test
sbb
inc
imul
rorl
add
jecxz
cmp
push
test
fprem
mov
push
ss
mov
pushf
clc
xlat
idivl
and
int3
ja
in
sub
pop
push
push
mov
pop
sbb
xor
mov
mov
rolb
outsb
cli
pop
add
adc
cld
sti
pop
mov
jg
mov
jle
push
push
and
adc
adc
xchg
mov
aam
mov
pop
outsl
xor
in
frstor
adc
adc
add
rcr
rclb
xchg
int
jo
pop
adc
pusha
popa
bound
push
adc
xchg
adc
mov
sub
out
mov
push
xchg
pop
or
sbb
data16
xor
jne
flds
orl
outsb
xor
in
or
fadds
xor
stos
cmp
pop
sub
mov
push
comiss
subps
hlt
mov
push
xchg
out
xchg
arpl
inc
or
jnp
ss
push
mov
mov
xchg
jae
xor
xchg
movsb
mov
pop
adc
imul
in
jle
out
add
dec
push
and
pop
fstpl
dec
xor
and
flds
sbb
daa
pop
fists
and
xchg
sub
sub
dec
lea
xchg
sub
inc
xor
in
add
mov
movsl
pop
adc
adc
sub
adc
mov
inc
out
mov
mov
push
pop
pop
push
lds
pop
mov
mov
pushl
xchg
inc
inc
or
push
pop
lods
movsl
pop
adc
lods
movsl
pop
adc
inc
out
or
das
aad
movsb
jns
and
cli
or
stos
xchg
mov
dec
jae
rorl
loope
cmp
jg
jle
cld
add
pop
cwtl
mov
sbbb
cld
jnp
ss
dec
jle
sub
add
ja
jmp
add
add
xlat
ljmp
mov
mov
or
stos
pop
push
pop
adc
mov
dec
xchg
pop
push
pop
adc
mov
pop
adc
mov
or
push
sbbb
cld
xchg
cs
movb
dec
loopne
jl
iret
pop
xor
push
aad
loopne
movsb
and
cmp
dec
cmp
repz
pop
call
lds
jg
pop
mov
mov
daa
sub
xchg
xor
xor
notl
fcom
inc
or
mov
cmp
jp
xchg
and
jp
movsl
pop
adc
mov
clc
adc
adc
cli
jns
popl
shl
adc
adc
push
xchg
test
or
push
adc
mov
pop
mov
les
cmpl
das
dec
movsl
pop
adc
push
adc
mov
pop
pushf
shlb
insl
and
push
adc
cld
clc
int3
movsl
pop
adc
movsl
pop
adc
adc
push
out
fisubl
xchg
jbe
add
pop
adc
ljmp
enter
xchg
fs
pop
add
test
jbe
xchg
mulb
adc
arpl
sub
pop
and
notb
fcomps
mov
push
sbb
mov
mov
jge
lahf
shlb
xchg
xchg
xor
loop
scas
add
test
stc
leave
xchg
add
and
arpl
xchg
jbe
ljmp
xchg
add
hlt
mov
loop
arpl
push
es
fcompl
mov
pop
imul
outsb
mov
lods
mov
mov
jb
in
and
daa
movsb
js
push
adc
dec
cltd
jmp
jp
call
pop
lods
fwait
mov
sbb
mov
sti
out
or
sub
pop
adc
movsl
dec
aaa
mov
mov
inc
cltd
movsl
fsubl
xor
out
mov
pop
adc
lea
adc
mov
lea
dec
jmp
sbb
mov
in
lret
out
repz
jle
add
mov
cmp
pop
stos
nop
and
idivb
push
inc
or
xchg
pop
mov
fwait
or
ret
xor
add
sub
cs
sbb
xor
gs
push
sbb
movsl
pop
lods
xor
lret
push
xor
lods
inc
dec
fildll
and
pop
cmpsb
fistpll
adc
push
outsl
xchg
cmp
pop
pop
sub
xchg
imul
pop
fsubrl
cmpsl
adc
imul
daa
add
call
cli
filds
stc
rcr
or
jb
cmpsb
arpl
mov
cmc
ja
mov
mov
pop
push
loop
mov
cmpsb
insl
fistl
gs
sbb
xchg
push
pop
lret
add
dec
xchg
mov
cmp
push
leave
test
or
and
jecxz
stos
test
add
push
fsubrs
lahf
mov
ja
mov
sbb
das
pop
sbb
mov
mov
xchg
in
aaa
mov
add
mov
subb
ret
sbb
inc
pop
push
dec
out
aaa
cmp
call
jge
push
xchg
mov
inc
jmp
jne
pop
shll
pushf
arpl
sti
int3
popa
shl
dec
xchg
pop
lds
inc
sub
cmc
lret
insb
sub
mov
inc
jns
pop
scas
jns
dec
repnz
jae
cmp
and
inc
leave
shrl
pop
loopne
xlat
stc
test
inc
or
sub
cmpsl
adc
sub
in
aad
or
mov
fdiv
outsl
fldl
xchg
cmp
jbe
jno
stos
adc
call
xchg
pop
cmp
mov
mov
xchg
adc
sub
add
sub
or
cmp
lret
lds
movzbl
pop
inc
movsb
sub
add
hlt
jnp
xchg
call
shl
mov
shlb
mov
mov
pop
jns
sbb
stc
lods
and
or
xor
jecxz
shlb
into
pop
mov
lds
ja
cmp
inc
addl
loop
shlb
dec
lock
std
dec
mov
mov
leave
les
mov
sub
cs
mov
xor
je
mov
mov
adc
mov
push
call
xor
add
jecxz
test
jo
andb
sti
and
pop
dec
pop
addl
mov
dec
dec
cs
ror
xchg
pop
push
scas
xchg
int
cmp
bound
ljmp
jnp
imul
fs
jb
pop
stc
and
push
mov
jbe
jns
dec
ficoml
insl
shrb
lods
jns
and
adc
jno
lea
sbb
push
ds
imul
xchg
fidivs
sub
sub
scas
jecxz
in
mov
jl
dec
add
mov
mov
aad
or
pushl
sbb
adc
cli
cmp
imul
pusha
mov
adc
mov
xchg
push
loopne
addr16
clc
push
clc
jg
aas
jae
dec
pop
adc
xchg
cwtl
jecxz
inc
add
pop
cmp
in
insb
andb
shrl
popa
pop
in
test
imul
dec
adc
mov
push
add
insb
jo
pop
adc
add
in
std
jae
inc
lret
leave
pop
xchg
scas
lods
mov
dec
les
leave
jbe
jae
cmp
jbe
add
xchg
inc
xchg
insl
fdivrl
mov
imul
xlat
xor
cs
inc
adcb
mov
sub
sbb
movsb
lcall
outsl
cmp
or
push
xchg
mov
sbb
call
lock
pop
sub
pop
fsubr
out
add
pop
test
mov
dec
dec
cmp
mov
and
cmp
fucomi
sub
out
ja
out
push
arpl
into
inc
sub
dec
arpl
mov
mov
cmp
bound
sub
cli
jg
incl
insb
fisttpl
clc
xchg
inc
lcall
arpl
mov
jbe
mov
or
ret
and
divw
xor
int
mov
subl
les
in
add
jno
out
pop
push
jo
mov
arpl
xchg
pushf
jl
cmc
jns
lahf
mov
cmpsl
or
cli
out
mov
fldt
or
pop
pop
pop
ret
aad
sti
sbb
pusha
jo
pop
adc
inc
fdivs
and
xchg
push
adc
std
pop
push
lcall
rolb
jmp
xor
pushf
add
mov
mov
adcb
add
mov
mov
insl
pushf
push
pop
mov
and
jp
mov
push
fsubrp
ss
lds
inc
add
adc
enter
leave
je
add
fbstp
adc
sbb
add
pop
enter
rorl
out
clc
sub
call
add
add
mov
enter
roll
inc
jae
into
popf
dec
jl
push
aad
mov
jmp
or
loopne
and
js
ret
push
testb
ret
mov
out
popf
shll
shlb
adc
push
arpl
push
mov
mov
std
aam
sub
dec
ja
sbb
or
enter
shll
bound
jo
adc
cmp
movsl
mov
lret
mov
jl
das
dec
loope
addl
lods
cmpsl
mov
cs
and
test
push
add
or
cli
loop
imul
adc
pop
mov
aas
jno
aad
dec
add
add
adc
popf
push
jg
daa
xor
sbb
lds
and
je
mov
mov
inc
push
test
iret
lcall
daa
repnz
mov
popf
push
adc
push
inc
and
push
cmp
mov
xor
int
ss
push
shlb
jge
push
and
adc
fisubl
scas
or
dec
and
in
fsts
cmp
dec
outsb
push
inc
pop
fcoms
mov
outsb
movsb
ret
cmp
fwait
popa
or
dec
mov
cwtl
pop
arpl
xor
and
adc
negl
push
jle
nop
mov
je
movsb
mov
sbb
cmpsb
pop
adc
and
add
mov
sbb
clc
stos
pop
xchg
mov
pop
cwtl
mov
les
jno
fnstsw
add
arpl
cmpsb
cmpsb
sub
bound
add
lahf
and
cs
imul
ds
or
cmp
pop
cmpsl
xchg
push
inc
lods
pop
enter
mov
push
repnz
pop
lcall
test
popa
adc
dec
bound
loop
mov
push
xchg
jo
shl
stos
or
ss
mov
push
aaa
mov
fstp
lcall
dec
jp
xor
push
movsl
mov
cmpsb
ss
and
nop
xchg
aas
mov
bound
out
data16
and
push
ret
loopne
clc
cmc
icebp
pop
mov
and
sbb
inc
sbb
mov
mov
push
push
cmp
xorb
adc
lea
hlt
inc
mov
loope
mov
jns
mov
cmpsb
cmc
xlat
int3
cmc
test
pusha
push
outsl
loopne
pop
adc
nop
aad
sub
scas
stos
mov
push
mov
mov
rcl
sbb
dec
sub
xor
adc
fdivl
or
roll
mov
sbbl
aam
and
fists
dec
test
imul
xor
push
sbb
orl
test
fidivs
out
sub
inc
dec
xchg
inc
sar
mov
dec
sbb
test
cmp
sbb
clc
je
inc
cmp
cs
mov
adc
movsb
test
je
cmp
pop
or
pop
adc
js
loopne
imull
push
ficompl
jae
and
aam
inc
sub
mov
loopne
adc
js
xchg
out
mov
sub
rolb
mov
push
add
add
jle
shlb
imul
fwait
cld
xchg
into
popf
cmp
addl
pop
xchg
call
loopne
nop
mov
mov
ss
shlb
lock
test
jbe
mov
pop
cmp
xchg
adc
lret
mov
es
hlt
add
imulb
nop
mov
mov
ja
out
rorb
and
pop
lret
js
lret
cmp
jle
mov
xchg
daa
rcrl
lock
dec
mov
jnp
addb
inc
or
inc
shrb
dec
mov
add
cmp
add
das
aad
jg
adc
pop
fcoms
push
adc
dec
inc
add
adc
adc
daa
mov
les
push
adc
adc
inc
mov
sub
xchg
adc
pop
cmp
sbb
rcl
inc
add
push
push
loop
jmp
push
rorl
lret
in
sub
cmpsl
hlt
and
push
inc
pop
ret
clc
push
dec
cmpsb
push
jg
lock
jg
insb
in
arpl
clc
js
mov
std
push
add
add
mov
mov
or
in
fdivp
mov
sbb
sub
or
or
popa
fistl
jl
scas
fiadds
jmp
cmc
pop
orl
cltd
call
push
cltd
push
jecxz
outsb
mov
nop
out
sahf
sub
loop
jge
sahf
mov
fisttps
jp
jmp
cmp
mov
dec
and
dec
jmp
and
jb
outsl
jg
mov
out
mov
sbb
push
rorb
adc
rcr
lods
test
jno
xor
shll
loop
mov
cmc
or
or
fsts
and
xchg
andl
inc
mov
mov
xchg
mov
aam
loop
or
lret
mov
mov
push
adc
mov
int3
and
iret
aam
pop
adc
pop
or
addb
hlt
push
movsb
clc
adc
adc
xchg
sub
nop
aam
pop
adc
mov
push
adc
mov
inc
mov
movsl
pop
adc
icebp
xor
pop
adc
or
aam
mov
aaa
and
xchg
fs
clc
adc
adc
es
clc
mov
ficomps
fmul
movsb
sub
jns
out
mov
mov
adc
mov
push
dec
movsl
pop
adc
je
loope
mov
inc
xchg
adc
jne
fs
nop
cltd
push
inc
mov
cli
mov
rep
inc
popa
pop
pop
mov
roll
push
xchg
in
mov
cmp
pop
push
movsb
pop
adc
mov
push
stc
leave
jb
dec
jge
or
cmp
jg
mov
mov
xor
lds
in
mov
xor
xchg
xchg
out
push
mov
addr16
pop
int
push
jmp
pop
mov
outsl
scas
mov
add
inc
add
scas
imul
sub
bound
mov
adc
adc
stos
das
jne
sbb
sub
test
rcrl
dec
lret
push
sbb
add
movb
nop
cmc
loopne
jo
inc
dec
and
or
sub
mov
repz
or
pop
mov
scas
fidivrl
dec
in
std
and
add
arpl
cmp
jge
mov
mov
jne
ja
stos
cmp
cld
dec
call
pop
ror
sti
mov
ror
push
push
hlt
mov
fnstsw
cld
adc
adc
sub
das
aam
out
ds
std
jo
inc
shrb
pop
xchg
hlt
call
jecxz
clc
divb
je
hlt
or
je
in
sbb
shlb
mov
jno
call
call
lods
sbb
and
std
cli
enter
shlb
adc
call
movsb
mull
aad
xlat
push
push
push
std
adc
test
dec
lahf
fsubs
mov
adcb
adc
fdivs
movsl
pop
adc
fsubs
bound
mov
lds
in
aad
jg
mov
push
adc
aam
pop
mov
xchg
int3
bound
aad
xchg
outsb
mov
add
lock
test
dec
movsl
pop
adc
mov
leave
jge
push
ss
cmc
pop
dec
jae
adc
addb
mov
mov
sub
pop
test
rcl
cli
xorb
dec
sti
xchg
pop
pop
jbe
push
cmp
mov
loop
cmp
add
ljmp
movl
jge
pop
mov
cmp
popa
sahf
aad
cmpsb
or
jl
aam
mov
imull
push
adc
rcrl
js
jno
push
pop
stc
sub
int3
imul
pop
dec
fisubl
stos
xchg
je
push
adc
dec
jb
xlat
jg
pop
out
adc
stos
out
clc
mov
call
cmpsb
fwait
shl
mov
sub
and
sub
fsubl
mov
insl
push
mov
xchg
cltd
mov
add
fsubl
fldcw
adcb
adc
xchg
fisubl
loope
fsubl
pusha
fsubl
pop
push
fmull
sub
pop
rcrb
popf
daa
dec
es
mov
or
cmp
dec
movsl
pop
adc
out
mov
mov
inc
imul
push
sarl
or
insb
divl
lret
pop
adc
out
cmpb
jne
pop
lret
xchg
sub
sub
mov
dec
rcrb
jmp
mov
fisttpl
jle
loopne
or
les
xchg
dec
clc
xchg
xor
mov
mov
scas
jge
push
or
pop
adcl
ds
rolb
cwtl
add
push
adc
lcall
cwtl
mov
rcr
push
mov
js
push
adc
fwait
cs
leave
js
adc
jo
pop
mov
xchg
orb
int3
dec
sub
jge
adc
adc
call
inc
push
into
sub
fildll
sbb
dec
insl
xlat
inc
rclb
out
or
dec
pop
adc
adc
ja
dec
sbb
jb
push
insb
and
clc
mov
mov
push
shlb
lret
mov
test
pop
test
out
pop
aad
inc
pop
sbb
sbb
fbstp
lret
mov
sti
jno
jns
fsubp
add
mov
xor
jo
pop
adc
add
push
pop
mov
cs
into
les
push
adc
aad
xorb
sub
jne
fistl
nop
xchg
and
and
mov
out
mov
and
pushf
and
mov
pop
adc
sub
mov
inc
inc
mov
add
fmull
test
dec
sbb
push
pop
adc
xchg
xchg
scas
fidivs
inc
mov
test
data16
mov
leave
cmc
int3
dec
call
inc
pop
in
mov
roll
or
ret
out
lahf
bound
add
xor
scas
movsl
test
push
fcmovu
hlt
push
pop
adc
shll
ds
cmp
mov
xor
cmp
nopl
add
dec
sbb
dec
data16
cli
push
pop
and
add
xor
icebp
loopne
call
pop
mov
xchg
jne
shlb
mov
stc
cmp
cltd
addr16
lret
push
pop
adc
stos
pop
inc
mov
dec
data16
mov
inc
xorb
inc
jmp
hlt
call
icebp
loopne
sub
xchg
push
xchg
mov
repnz
add
sub
jmp
incb
orl
mov
hlt
xchg
out
add
hlt
push
pop
adc
xor
dec
xchg
push
xchg
mov
lods
jle
lds
and
hlt
adc
aam
imul
sbb
sbb
rorb
inc
hlt
pop
ljmp
push
mov
pop
mov
filds
hlt
xchg
pop
inc
jns
add
adc
arpl
mov
bound
inc
inc
test
sbb
inc
xchg
mov
shll
push
lahf
cmp
sub
dec
sarb
gs
jno
ret
orb
shrl
gs
aas
jno
popf
stos
rcrl
add
sbb
cmc
int3
outsb
cwtl
push
sbb
nop
neg
in
lds
mov
or
cmp
mov
sub
ret
movb
gs
xchg
push
xchg
push
jl
dec
sub
dec
pop
sub
add
stos
xchg
in
pop
fisttpll
rcrl
and
std
sub
sub
sub
in
cmp
repz
mov
pop
inc
push
btc
das
cmp
outsb
push
shll
fwait
mov
shlb
push
add
add
add
pop
mov
cs
test
mov
inc
xchg
mov
out
pop
xor
adc
lock
dec
inc
adc
insl
lahf
cltd
jbe
sti
gs
rolb
scas
cmc
mov
jbe
sahf
mov
push
xor
mov
mov
cmpsb
nop
push
pop
cmp
cwtl
dec
xchg
xlat
pop
dec
stos
not
adc
add
or
movsb
mov
lods
sbb
in
in
mov
jl
repnz
cld
call
add
popf
pop
cmp
clc
imul
inc
dec
addr16
stos
jae
bound
fwait
imul
cltd
fwait
lcall
jecxz
push
ss
fs
addr16
sbb
dec
jl
pop
fimuls
inc
fwait
scas
cmp
inc
xor
jno
push
inc
pop
int3
ret
into
mov
mov
sub
in
mov
aaa
rcrl
push
push
mov
addr16
popf
jmp
fisubl
fists
daa
inc
and
sub
sbb
fisubs
or
push
jp
pop
repz
push
loop
out
aas
stc
mov
adc
adc
mov
scas
inc
fistl
cmp
xchg
mov
adc
mov
add
adc
mov
add
adc
rolb
pop
roll
adc
add
scas
mov
xor
and
shrl
daa
sarl
fs
inc
cmp
xlat
mov
push
in
pushl
das
dec
test
adc
mov
push
adc
ds
cwtl
mov
lds
pop
inc
aad
outsb
aam
stc
in
lret
pop
in
pop
adc
fmull
jmp
adc
adc
push
push
outsl
hlt
inc
jns
inc
stos
lret
es
std
jg
jle
pop
jle
xor
pop
xor
push
push
ja
pop
jge
mov
adc
lds
mov
es
ss
push
pusha
sbb
jge
cmp
jg
shrb
inc
nop
shl
jge
andb
jle
insb
leave
cmpsb
cld
add
pop
ficomps
ret
idiv
cmp
xchg
out
jp
mov
ss
in
xchg
cmpb
js
sbb
cld
rep
rorl
andnps
js
int
out
cltd
push
inc
push
clc
xchg
jg
call
xchg
jmp
cmp
add
das
mov
vcvttsd2si
and
inc
or
lret
jl
shrb
sbb
cwtl
mov
daa
mov
pop
out
sar
ja
std
xor
inc
sti
xor
sahf
fadd
adcb
out
clc
xlat
inc
push
cmp
inc
jmp
aas
sub
aaa
xor
imul
out
adc
iret
push
jae
outsb
mov
mov
les
mov
sbbb
jmp
or
push
in
lret
push
jbe
scas
lret
pop
xor
into
shr
pop
lea
cmpsl
push
jecxz
movsb
push
add
push
mov
dec
pop
adc
cmp
mov
ret
shrb
lock
loop
xchg
mov
mov
inc
cli
push
pop
fdivs
out
push
push
pop
or
cmp
inc
decb
dec
xchg
cmp
fldcw
into
add
or
rorb
addl
sbb
je
cmpsb
loop
repz
imul
cmp
filds
fistps
pop
sbb
lret
cwtl
sub
cmpsb
fsubr
ss
jecxz
lcall
scas
jo,pt
loopne
push
mov
cli
sbb
push
or
hlt
inc
or
push
mov
stos
out
add
mov
jb
ja
out
pop
cs
pop
inc
test
cltd
push
adc
pop
adc
jb
mov
dec
or
aad
bound
jmp
stos
outsb
jmp
mov
stos
and
push
push
xor
adc
ds
mov
xchg
xchg
xor
mov
push
adc
cwtl
std
and
cltd
pusha
loope
lods
mov
clc
xchg
push
and
addr16
xlat
mov
mov
push
movsl
mov
xchg
cwtl
add
cmp
xor
icebp
xor
cmp
and
lods
pusha
data16
jb
dec
fstpl
xchg
addr16
mov
daa
mov
mov
jmp
lea
ret
cmp
cld
mov
lret
dec
pop
rorb
mov
adc
jmp
xchg
cltd
mov
clc
pop
lods
mov
mov
in
mov
push
sub
int
and
pushf
ror
push
imul
call
sub
xor
clc
fidivl
push
pop
or
test
mov
add
adc
lahf
test
ror
js
sub
ss
dec
and
and
cwtl
or
aas
cli
sub
and
cmp
xor
fldcw
insl
rorl
cltd
sub
jg
out
movsb
xchg
dec
pop
stos
mov
jge
int
inc
or
cli
movsb
loopne
out
fstpl
fnstsw
sub
sbb
pop
add
dec
fisubrl
out
lods
rclb
push
xchg
test
or
jmp
cmp
xadd
inc
in
roll
sbb
push
pop
das
fnstenv
movsb
lret
movsb
xchg
subb
nop
lea
js
mov
sar
mov
hlt
call
bndstx
mov
js
or
outsl
imul
rcl
stc
mov
hlt
popf
imul
mov
nop
jg
adc
das
sub
repz
mov
or
xor
jecxz
mov
cltd
xor
dec
ds
gs
hlt
mov
pop
add
xchg
jo
lea
in
test
mov
inc
jmp
add
nop
shr
jge
enter
int3
jbe
cmc
pop
dec
adc
rcll
andl
jp
addb
stc
cwtl
sub
shlb
std
movsb
jo
pop
adc
cs
es
ud2
sub
mov
pop
ret
inc
or
ret
repz
shlb
roll
mov
inc
jg
vcvttsd2si
fwait
orl
pop
pushf
push
push
xchg
xorb
stc
mov
ljmp
mov
ljmp
test
pop
shrb
mov
push
jmp
add
xor
mov
test
jmp
jmp
sbb
gs
mov
and
inc
mov
adc
ljmp
sub
mov
mov
cmp
rorb
sub
cmc
sub
mov
pop
mov
push
add
dec
jae
icebp
add
add
push
pop
pop
jg
cmp
or
xor
repz
mov
sbb
or
sbb
out
xchg
xchg
test
arpl
pop
add
jno
fwait
push
push
pop
cld
in
inc
ret
push
xchg
repz
adc
xor
call
rcrl
and
cld
pop
cwtl
xchg
ficomps
inc
mov
mov
push
xchg
jmp
xor
mov
or
or
cld
inc
sbb
push
push
mov
arpl
fidivrl
int
test
dec
sarl
adc
adc
notl
mov
hlt
push
jnp
inc
mov
std
push
loope
inc
aaa
aad
sbb
xchg
arpl
imul
out
push
test
mov
push
sub
scas
ror
test
sub
dec
testl
jle
negb
loopne
shrb
adc
push
inc
push
in
xchg
xchg
push
ud2
jnp
push
cmpl
movsb
scas
or
inc
iret
sbb
lcall
dec
inc
mov
lret
mov
push
aaa
ficomps
fwait
fwait
adc
jbe
dec
aaa
mov
pop
fists
aad
xchg
das
or
lock
push
mov
mov
sub
fisttps
stc
fistpll
loope
dec
test
and
sbb
sub
push
push
inc
das
orb
popa
mov
ja
test
push
pop
cmpsl
xlat
fsubs
bound
cmp
mov
sti
subb
xchg
inc
sbb
dec
dec
dec
aaa
hlt
mov
fs
call
lods
adc
mov
sub
push
jmp
bound
push
int3
jae
out
xchg
xor
or
cltd
mov
inc
mov
add
dec
sub
sub
or
adc
call
out
dec
xchg
pop
or
mov
stos
mov
lret
lahf
movsl
mov
into
movsl
outsb
lahf
test
pop
sti
sar
pop
nop
xchg
aaa
dec
mov
addr16
jge
mov
push
cwtl
or
push
notl
mov
mov
leave
push
jno
push
jmp
sahf
pusha
pop
xor
pop
inc
sarl
das
mov
push
mov
sbb
ficoml
call
jno
roll
cmp
xchg
fsubrs
or
ljmp
sub
adc
adc
pop
dec
push
pop
adc
sbb
stos
loopne
dec
or
jb
mov
lods
in
jp
push
pop
adc
fsubrp
cmp
lods
fadd
leave
mov
dec
or
movsb
sbb
add
or
in
or
ds
in
add
add
sbb
shrd
pshufw
shrl
mov
mov
mov
imul
pop
sbbb
push
imul
sbbb
cmp
xchg
dec
call
leave
jne
dec
mov
sub
xor
mov
adc
jo
pop
adc
add
hlt
inc
xor
in
pop
adc
addb
or
and
adc
adc
inc
je
mov
in
pop
adc
adc
adc
mov
in
pop
adc
shlb
jg
cli
jle
movsb
sbb
pop
adcb
std
outsb
fisttpll
loop
and
in
lcall
dec
or
adc
and
xorb
movsb
idivl
jecxz
inc
cmpb
or
push
or
jnp
jg
jp
sub
leave
jg
dec
movsl
pop
adc
mov
cmp
sbb
cmc
faddl
out
adc
divl
inc
test
push
ja
push
jl
and
int3
ficoms
dec
push
jo
adc
adc
ds
xor
imul
jp
aas
jnp
inc
xchg
pusha
in
add
xor
sub
daa
and
and
sub
lock
xchg
xchg
pop
cmc
in
fcmove
int
dec
jnp
push
subl
clc
sbb
xlat
pop
fsubs
xchg
adc
stos
mov
jno
insb
sub
push
jp
ret
fcom
insl
cs
inc
mov
xlat
pop
fs
jne
insb
push
jbe
xor
addl
push
sbb
xchg
jle
adc
adc
xor
out
cld
loope
in
mov
mov
cmp
aam
daa
dec
cltd
gs
stos
jbe
rcrb
sub
add
out
sbb
and
loopne
jbe
inc
data16
pop
pop
es
scas
sub
dec
mov
aam
imul
les
xorl
out
lock
sbb
jae
rcr
popf
insb
add
aam
mov
adc
adc
pop
xchg
sbb
mov
movsl
insb
subb
add
sbb
adc
inc
mov
xor
add
jp
xor
jae
in
in
enter
or
mov
jmp
test
push
jg
mov
push
mov
aaa
movsw
push
xchg
stos
gs
or
jno
cs
mov
rcrl
xchg
test
pop
sbb
adc
loop
les
int
and
movsb
je
push
adc
mov
add
xlat
popf
fs
sbb
xchg
jbe
adc
adc
shll
stc
fildl
mov
inc
les
pop
das
movsl
sbb
add
out
loopne
mov
repz
scas
dec
sbb
adc
test
cld
sbbb
dec
movsl
pop
adc
shlb
int3
incb
in
xor
stos
cmp
cmp
cmc
mov
cmp
xor
xor
jecxz
movsl
aas
je
ljmp
mov
lea
adc
mov
jge
outsb
mov
mov
fincstp
test
sti
pop
out
mov
push
dec
aaa
cmp
cli
jle
shrl
mov
dec
fs
movsl
lods
mov
movsb
adc
adc
xchg
push
lock
jnp
mov
xchg
loope
bound
mov
jge,pt
pop
pushf
sbb
mov
insl
and
movsb
test
das
repz
std
xchg
sbb
out
xchg
aaa
sub
cmp
cld
jo
and
sub
fsubl
or
ss
movb
pop
adc
sti
mov
adc
lret
insb
push
xor
xchg
adc
pop
jne
jae
shl
mov
sub
push
stc
in
pop
movsb
inc
addb
push
ljmp
std
push
mov
pop
inc
push
push
inc
test
out
pop
jg
xchg
push
call
sahf
sub
jp
jae
lds
push
push
xchg
out
sub
loope
fadd
sub
in
sub
mov
jl
addr16
xor
adc
cwtl
push
or
pop
aad
hlt
push
push
push
in
mov
mov
icebp
jg
adc
int3
dec
aad
movsb
arpl
mov
sarl
loopne
pop
adc
or
shll
pop
adc
cmpsl
idivl
push
jbe
cmp
in
pop
adc
imul
xor
mov
pop
data16
mov
mov
icebp
add
in
repnz
ret
orb
pop
fisubs
cmpsb
adc
cwtl
popa
psrad
jmp
pop
xchg
out
shl
mov
mov
rcl
fisubl
dec
sbb
pop
adc
popf
in
loop
mov
xchg
xchg
mov
imul
or
cmpsl
cmp
rclb
push
scas
cmp
ss
fadd
mov
and
jb
pusha
out
mov
cmp
cli
fmuls
movsl
outsb
fsubl
loop
push
sbbl
aam
lcall
fs
cmovns
add
mov
adc
mov
lods
or
add
loop
xchg
out
push
mov
mov
mov
adc
mov
fcompl
sub
xchg
xchg
push
add
and
or
or
jecxz
test
lds
movsl
loop
cli
es
jno
add
push
jl
stos
inc
mov
push
adc
pop
cwtl
or
mov
mov
loopne
clc
mov
jo
push
ficoml
orl
and
fs
data16
push
jmp
repnz
lock
out
lret
popa
aad
arpl
mov
cmp
mov
lods
adc
aaa
cmc
mov
addr16
or
mov
popa
sbb
testl
repnz
cld
jmp
and
mov
fcmovbe
pop
sub
les
call
sub
inc
fwait
aaa
push
mov
lret
jp
mov
fwait
dec
aaa
bound
rclb
mov
mov
push
mov
ljmp
push
jecxz
xchg
xor
xor
inc
adc
sub
jg
add
adc
cmp
das
outsb
or
ficoms
fst
add
outsl
push
and
cwtl
pop
cmp
rcl
in
xchg
mov
imul
adcb
xchg
test
pusha
lret
popa
pop
xor
nop
imul
int3
push
and
and
std
jl
push
sub
cltd
xor
shl
cmp
ja
insl
inc
jg
jl
push
adc
inc
mov
arpl
or
xor
mov
adc
mov
and
orl
add
add
std
lods
add
add
incb
add
lock
pop
adc
pop
ds
shr
iret
mov
ljmp
inc
add
add
mov
movsl
pop
adc
stos
jb
push
jne
add
mov
std
jo
call
adc
pop
cli
jle
rorl
adc
adc
test
in
movsl
pop
adc
inc
stos
jle
mov
pop
cli
jle
mov
ret
js
mov
jle
outsl
jl
push
adc
sbb
or
or
rdtsc
mov
push
adc
jg
add
cmp
cmc
cmp
push
adc
xchg
lret
call
mov
loopne
js
test
and
movsl
pop
adc
jns
lcall
icebp
sub
adc
push
loopw
test
clc
fcompl
jg
movsl
sbb
push
call
dec
cld
cmp
jle
adc
mov
mov
movsb
inc
mov
les
cmp
push
adc
fs
insb
adcb
adc
movsl
pop
adc
dec
jl
lahf
push
adc
push
std
rorl
inc
xor
dec
imul
xor
push
mov
sarb
mov
mov
mov
pop
adc
sarb
xor
popa
mov
pusha
adc
add
cmc
flds
jle
repz
lods
push
adc
adc
inc
loopne
xor
jp
pop
fisubrl
call
imul
in
loop
aad
push
call
xchg
push
rclb
rorl
inc
xor
xlat
fldenv
sbb
jg
and
scas
mov
jle
fcoms
push
cmp
scas
pop
jae
dec
cmp
aaa
mov
dec
dec
cmp
xor
add
mov
dec
cmpl
jbe
shrb
mov
fidivl
push
sub
push
lret
movsb
push
shlb
imul
nop
outsb
aas
sti
cmc
aad
dec
xor
push
adc
sti
mov
fcomps
dec
add
push
dec
add
cli
and
push
movsl
out
pop
cld
xlat
subb
mov
jns
repnz
lods
scas
push
adc
jbe
jb
lock
scas
push
adc
sub
lahf
mov
ret
sarl
sti
fstpl
pop
mov
adc
in
xchg
jo
movsb
sbb
pop
mov
push
mov
push
adc
lods
aam
xchg
xor
push
adc
enter
cltd
out
or
mov
xchg
sub
xchg
test
lods
push
adc
mov
adc
sbb
mov
adc
sub
je
arpl
shl
mov
cs
mov
adc
in
mov
adc
inc
dec
dec
xor
imul
cmpb
adc
sub
xor
push
in
push
adc
pop
push
pushf
jg
mov
adc
loope
adc
mov
pushf
jns
cmp
cs
mov
adc
pop
fmulp
lcall
ss
mov
adc
cmp
pop
pop
sub
push
inc
mov
enter
dec
insl
mov
inc
addr16
repz
push
sub
mov
adc
fisubl
adc
jp
mov
adc
loop
cld
addb
ds
flds
shlb
push
in
or
insb
cmp
shlb
xor
pop
pop
in
clc
imul
push
adc
push
or
mov
shlb
mov
std
jo
mov
mov
push
adc
adc
add
mov
jmp
js
shl
pushf
mov
adc
stos
icebp
cmc
call
inc
inc
addr16
xor
push
repz
mov
push
dec
xchg
insl
mov
sbbb
daa
mov
pop
mov
adc
cmc
icebp
sti
hlt
lcall
ds
cmp
inc
mov
xor
pop
int
test
add
sti
hlt
scas
cwtl
mov
adc
sub
jl
sbbb
movsl
cmp
xor
mov
pop
das
pop
test
mov
mov
mov
pop
jns
mov
adc
decl
sbb
lret
shrl
add
adc
xor
sub
push
cmp
xchg
das
sub
std
cli
mov
mov
adc
mov
enter
jbe
mov
adc
stc
mov
mov
pusha
lods
inc
xchg
xor
in
sbb
dec
stc
lret
mov
dec
ret
call
aad
adc
xor
sub
cmp
lret
mov
push
jo
decl
fldl
adc
das
stos
inc
mov
xor
dec
lahf
das
pop
enter
and
lahf
addr16
push
pusha
xchg
sbb
aas
cwtl
mov
mov
cmp
jl
or
into
mov
mov
mov
stos
dec
lret
test
push
adc
repz
mov
clc
mov
or
dec
fcmovnu
ret
jbe
loop
je
inc
mov
or
sub
mov
lods
xor
cmp
out
xchg
push
mov
ret
stos
push
inc
fs
xlat
fldenv
pop
mov
or
and
mov
out
stos
cmp
sub
int3
xchg
mov
lahf
out
pop
sbb
fldl
and
les
repz
cmp
test
push
adc
ficomps
into
xchg
push
mov
out
and
push
adc
sub
vpaddb
fiadds
sub
mov
shr
outsb
in
mov
mov
les
lahf
inc
lahf
sub
fcomps
sub
pop
push
dec
pusha
sub
lock
mov
mov
jl
mov
test
rclb
mov
scas
pop
add
push
mov
mov
jp
cmp
gs
sbb
mov
push
push
addr16
outsl
gs
movsb
fstps
mul
out
outsl
enter
mov
adc
jl
mov
jnp
mov
imulb
jae
int3
ret
fldlg2
in
pop
test
and
mov
mov
cs
pop
xor
and
ja
push
mov
xchg
or
push
hlt
test
hlt
mov
adc
lea
xor
or
jbe
inc
jp
and
push
repnz
shr
pop
or
dec
pop
rcl
dec
inc
cs
push
xchg
and
scas
mov
pop
or
push
add
dec
push
xchg
in
ljmp
popf
call
fisttps
jae
jg,pn
mov
dec
iret
aad
outsl
fstpl
and
jb
test
push
mov
lods
pop
push
shll
out
push
movnti
add
pop
pop
sub
sbb
jecxz
fstpl
mov
sub
jnp
aas
int
stc
stos
cmpsb
sub
pop
jnp
cmp
sbb
sahf
jge
or
mov
push
adc
jno
jp
loop
ss
mov
mov
pop
xor
cmp
push
popa
inc
imul
sbb
push
adc
add
or
mov
subl
hlt
cmp
and
mov
lret
and
xchg
pop
push
mov
lods
inc
mov
rcrl
mov
pop
clc
clc
mov
sti
jmp
sbb
pop
xorb
ja
add
lea
cli
hlt
outsl
ds
xchg
loope
cli
hlt
sbb
mov
mov
mov
jle
lea
sub
mov
fnclex
sti
hlt
lcall
bound
test
std
jo
call
jae
fistpl
xor
jb
mov
movsl
dec
mov
cmp
dec
jbe
add
mov
in
rcl
hlt
stos
push
push
ret
push
je
push
adc
xchg
out
cld
cli
xchg
mov
daa
push
pop
jns
mov
push
lea
inc
ror
popf
sub
pop
mov
adc
jp
shll
add
mov
pop
xor
or
add
loop
dec
movsl
inc
repz
loop
xor
pop
cli
add
jle
dec
lock
push
cs
push
and
pop
aas
or
xchg
in
loop
jno
and
pop
out
mov
ret
fiaddl
add
loopne
jb
inc
ret
push
adc
paddw
cmpsb
aaa
cmp
dec
pop
cmp
push
dec
cmc
xchg
or
sahf
mov
push
adc
call
xor
test
out
bound
lock
pop
mov
inc
test
or
lcall
das
repz
insl
jmp
adc
xchg
cmpsb
push
xchg
imul
in
loop
push
push
outsb
mov
cmpsb
cmp
ljmp
adc
lea
in
nop
js
mov
cltd
sahf
rorl
or
push
adc
fadd
or
sbb
inc
mov
rclb
repnz
shrl
nop
sbb
dec
add
pop
fs
mov
pop
mov
push
adc
into
dec
or
push
orb
jp
sub
jo
notb
addr16
lret
sub
mov
mov
xchg
sub
sub
ret
push
adc
fucomp
scas
pop
xchg
and
mov
mov
dec
add
sahf
aaa
and
pushf
fldt
loopne
mov
pop
shufps
cltd
mov
roll
scas
pop
cmp
push
lea
les
adc
scas
movsl
hlt
mov
repz
les
adc
je
outsl
add
test
sbb
xchg
add
push
mov
push
mov
les
adc
mov
xchg
arpl
or
mov
cmp
ficoml
into
xchg
xchg
nop
in
lret
cs
lcall
or
inc
jne
mov
test
xor
xlat
and
pop
inc
mov
inc
inc
cmpsb
and
pop
repnz
shr
pushf
or
dec
pop
int3
inc
dec
inc
cs
jp
xor
inc
repnz
hlt
das
in
dec
cmp
out
add
lds
adc
hlt
or
push
rcrl
jg
movb
fsubp
mov
js
and
sub
cmpsb
dec
aam
movb
mov
jno
add
lock
movb
dec
jne
pop
pop
es
push
pop
loop
scas
mov
adc
ss
push
adc
in
ds
test
jne
dec
pop
sahf
mov
shlb
cmp
scas
fistpll
jmp
or
or
pusha
push
in
or
insb
cmp
shlb
lds
or
cli
loop
jae
inc
cmc
jge
jge,pt
loop
jb
inc
lret
jo
push
adc
cmp
movl
shll
adc
out
shll
jne
cmc
xchg
sub
sbb
ret
mov
incb
mov
xchg
enter
xor
mov
push
adc
or
inc
lock
adc
enter
scas
sbb
push
adc
xor
mov
lret
jmp
xchg
mov
and
pop
dec
iret
and
stos
push
je
aaa
adc
sub
jmp
push
jmp
push
adc
dec
out
cmc
call
sbb
je
or
das
sbb
lret
call
shrb
push
xchg
imul
ja
jp
and
push
adc
cmp
push
adc
lcall
or
sti
hlt
scas
xchg
lret
push
adc
mov
les
cmp
sti
decb
cmova
adc
jb
mov
je
enter
or
cli
xchg
mov
sub
pop
jns
int3
push
adc
push
push
mov
inc
ror
pushf
insl
sbbl
dec
icebp
add
jecxz
jno
inc
repnz
jecxz
ja
inc
leave
pop
int3
push
adc
or
ljmp
int3
push
adc
lret
imul
pop
test
addr16
movsb
int3
push
adc
lock
stc
incl
or
jl
int3
push
adc
mov
xchg
cmp
cmp
cmc
div
push
push
int
in
int3
push
adc
orl
cmpsb
sahf
push
pusha
adc
push
adc
bsf
fwait
pop
sbb
jg
ret
xor
push
adc
test
and
ljmp
adc
mov
ja
lcall
int
adc
sub
int
adc
lock
loop
into
push
adc
mov
jo
repnz
push
lcall
sub
push
adc
inc
pop
fs
in
xor
push
insb
adc
hlt
mov
sbb
xchg
push
test
dec
rorb
iret
push
adc
sbbb
sub
push
adc
push
lods
sub
jl
push
adc
fwait
int3
rolb
adc
mov
add
pop
or
sarb
mov
mov
dec
push
dec
push
dec
add
lret
sbb
fistpl
jl
push
adc
cli
je
je
ja
mov
or
push
adc
xor
inc
es
jb
jg
rolb
adc
sbb
lea
ret
addr16
sbb
sbb
test
pop
rolb
adc
leave
mov
fsubp
mov
lret
outsb
insl
lock
dec
aas
or
mov
mov
stos
or
rclb
test
cwtl
xchg
xchg
in
aaa
ret
sbb
sub
pop
jmp
insl
fcmove
cmc
test
shlb
and
xchg
jne
dec
jns
pop
xchg
xor
push
adc
out
push
repnz
fidivrs
jno
mov
loop
lret
cmp
xchg
dec
dec
inc
dec
push
repnz
fnstenv
xchg
sub
add
and
aaa
nop
cmp
push
adc
mov
push
add
xchg
cmp
fidivs
mov
dec
outsb
scas
das
cmp
es
and
jb
xchg
push
xchg
movsb
das
and
ret
sub
rcrl
ret
aad
adc
testl
inc
jo
cmc
movsl
push
mov
mov
sub
imul
mov
xchg
loope
jne
dec
les
mov
and
or
cmpsl
push
mov
pop
idivb
push
and
mov
lahf
test
xorb
rorl
adc
adc
sub
push
stc
cli
xchg
sbb
js
sbbb
ficomps
fs
jmp
lcall
js,pt
push
cmp
xor
mov
pop
es
mov
std
mov
xchg
jecxz
cmp
xchg
shll
addr16
push
adc
call
repz
testl
aam
add
xlat
push
adc
mov
cs
int
shr
std
in
test
xor
sti
hlt
lcall
xchg
bound
imul
xchg
shll
aas
jge
xchg
shll
arpl
stc
gs
loop
clc
cli
xchg
sbb
jns
xchg
push
push
lret
gs
aam
jg
jmp
lcall
mov
hlt
lcall
mov
mov
pop
sub
call
mov
pop
sub
or
jno
sbb
je
jb
das
sub
jmp
stc
in
rcl
xor
sbb
ds
in
rcl
cmc
mov
mov
pushf
adc
decl
mov
aas
push
mov
shll
pusha
mov
mov
xchg
stc
decl
mov
sbb
imul
ret
mov
adc
dec
in
cmp
mov
mov
or
sbb
sbb
jecxz
mov
sbb
sbbl
cmpl
stos
pop
fdivr
adc
mov
pop
hlt
and
push
sub
adc
jmp
push
rcl
pop
xchg
sbb
sub
loop
ljmp
jecxz
cmp
imul
mov
pop
mov
push
cltd
pop
push
xlat
iret
incl
xor
rcrl
jmp
and
mov
sbb
daa
notl
gs
iret
mov
shrl
aam
mov
dec
dec
cmp
adc
mov
lret
mov
mov
push
adc
fimuls
xchg
xchg
iret
or
out
and
fadds
adc
sub
ret
lret
sub
push
adc
ret
cmp
popl
dec
call
push
adc
aam
xchg
les
inc
sahf
test
fs
flds
adc
idivl
test
in
imul
xchg
flds
adc
jle
adc
inc
add
movsl
fisubl
push
adc
mov
add
sub
sbb
fiaddl
adc
lods
jle
gs
or
push
nop
fstps
insb
fiaddl
adc
std
xchg
jo
movsb
push
inc
pop
lods
and
iret
mov
jnp
fdivp
retw
ficoms
or
aam
push
adc
ficoml
lods
stc
push
xchg
loopne
popl
imul
xorl
or
dec
aam
xchg
sbb
mov
push
adc
ds
insl
sbb
aam
mov
jae
call
pop
sub
xor
or
mov
adc
adc
inc
repnz
cmp
pop
or
push
cmp
jge
xchg
in
rolb
pop
xor
out
mov
push
adc
loope
adc
mov
enter
cs
cwtl
ucomiss
fistl
push
adc
push
push
out
or
xorl
jno
push
dec
add
es
mov
test
mov
push
adc
sahf
lret
lods
mov
mov
loope
shl
push
jnp
enter
and
sbb
in
idivl
ljmp
aad
jp
and
ret
pop
cwtl
and
mov
lcall
mov
cld
cli
xchg
sbb
jl
xchg
push
pop
leave
les
jg
jmp
lcall
mov
mov
daa
repnz
mov
push
jmp
lcall
push
push
lcall
bound
test
mov
lods
add
shl
xchg
fldl
adc
push
das
sub
push
cld
cli
xchg
sbb
xchg
jl
xchg
mov
daa
sbb
adc
test
das
or
dec
or
push
adc
ror
mov
je
daa
push
das
sub
jmp
jbe
rcl
icebp
int3
sbb
xchg
jl
mov
fiadds
adc
int3
fiadds
adc
jecxz
std
mov
loope
xchg
insl
dec
scas
cli
hlt
call
sbb
sbbb
dec
mov
call
adc
test
sti
hlt
scas
push
filds
adc
xchg
jle
mov
sarb
push
sti
hlt
scas
je
push
adc
stos
and
pop
pushl
int3
filds
adc
pushl
loop
ret
and
push
mov
in
stc
shlb
filds
adc
enter
mov
loopne
into
mov
sub
insb
loopne
adc
data16
insb
and
clc
mov
push
xchg
pop
sbb
or
cmc
xor
xchg
dec
sbbb
sbb
xchg
out
dec
fisubrl
adc
loop
mov
je
lods
cmp
sbb
fcompl
sbb
sub
loop
xorb
call
xchg
push
scas
in
je
jmp
std
clc
sbb
and
adc
push
movsb
rcll
sbb
rorl
cmp
cld
or
pop
fcoml
sbb
repz
mov
lods
test
jmp
cmc
pusha
mov
mov
ret
xchg
addr16
pcmpgtb
repz
in
dec
xor
out
add
adc
repz
push
and
pop
mov
imul
push
adc
les
cmp
add
dec
lret
stos
sub
loope
adc
mov
arpl
into
out
iret
je
pop
sub
ja
nop
fildl
in
cwtl
fistpl
xchg
jmp
xchg
push
adc
jle
adc
jne
loop
adc
jl
add
mov
sbb
loop
adc
lods
jp
sub
cmp
addl
jo
cmp
and
adc
cmpsl
rol
ficoms
push
mov
jl
idivl
repnz
test
or
rclb
test
xchg
jmp
xchg
fimull
arpl
mov
push
adc
lods
fsub
push
adc
and
and
push
pushf
or
add
push
adc
gs
pop
mov
in
in
adc
push
dec
dec
pop
test
push
adc
cmp
ljmp
sub
xlat
gs
xchg
xchg
xchg
mov
push
enter
jo
adc
jb
jp,pn
movsb
cmc
std
cmp
subb
hlt
in
adc
shr
lods
pop
push
cmp
out
push
aas
ret
gs
sbb
push
adc
jbe
pop
pop
sub
arpl
dec
es
int
testb
jecxz
inc
in
adc
lea
mov
push
adc
popa
cmp
sbb
sub
or
push
mov
push
adc
popa
jl
add
pop
aaa
subb
or
xor
push
ja
imul
test
mov
xchg
out
push
push
in
push
or
xchg
out
sub
mov
bound
rolb
push
cmc
call
xor
add
inc
clc
stos
ds
mov
loop
cld
mov
mov
cwtl
push
pop
jns
out
adc
jg
lea
jbe
out
adc
mov
dec
repnz
adc
popa
in
xchg
imul
jmp
out
adc
pop
lahf
jle
mov
sub
mov
adc
aam
shll
insl
rclb
sub
sbb
ret
mov
loopne
inc
xchg
and
shl
add
push
adc
push
das
add
adc
sahf
pop
adc
jmp
xor
push
adc
push
das
sub
dec
cld
cli
xchg
mov
aaa
push
pop
dec
iret
jmp
inc
clc
stos
and
sti
push
jg
cwtl
out
adc
addr16
test
imul
jecxz
pop
mov
and
dec
sbb
ja
hlt
mov
or
cwtl
fcmovnb
mov
call
adc
clc
movsb
fisttpll
into
mov
jno
xchg
insb
lea
mov
shlb
adc
adc
pop
negb
sbb
cmp
mov
mov
or
push
adc
sti
cli
mov
ret
mov
orl
lods
jmp
mov
mov
fdivs
and
loop
inc
lock
mov
xor
adc
push
popa
mov
sub
pop
fwait
std
lock
inc
lds
push
sbb
sub
push
cld
cld
sbb
xor
mov
jb
and
rcl
shl
cld
mov
shll
push
rcll
ljmp
add
push
mov
movswl
inc
fs
adc
dec
repz
mov
push
adc
or
jmp
adc
inc
adc
xor
mov
hlt
ss
das
inc
xlat
fs
push
adc
xchg
xchg
sarb
sbb
out
xor
in
push
adc
mov
push
adc
sbb
in
push
adc
aam
jae
adc
in
push
adc
fisubrs
add
adc
xchg
mov
imul
jg
pop
push
or
adc
and
mov
out
push
jl
cmp
xor
cwtl
in
push
adc
mov
add
xchg
add
notrack
xor
fs
aam
jns
stc
cmp
pop
aam
push
adc
cld
out
add
add
and
into
pop
icebp
jnp
lret
mov
mov
pop
mov
mov
dec
pop
sbb
jp
adcb
in
ret
pushf
jmp
add
push
xor
in
std
enter
xchg
and
addr16
out
push
adc
loopne
out
push
adc
dec
sbb
push
adc
int3
jmp
mov
testl
inc
or
dec
repnz
or
xlat
pop
subl
xor
ja
push
out
push
adc
mov
enter
pop
lcall
pop
lahf
insl
xor
sbb
and
cwtl
and
push
adc
std
dec
push
leave
sbb
pop
pop
sbb
cmc
adc
mov
mov
pop
movsb
lock
adc
cmp
aas
clc
hlt
lock
adc
mov
mov
dec
inc
mov
push
cmp
push
adc
jmp
cmp
aad
lods
sahf
mov
fwait
adc
push
loope
mov
cmp
movsb
jl
lea
bound
mov
xor
adc
pop
pop
in
fsubrl
dec
std
mov
xchg
mov
sub
lea
inc
adc
mov
das
dec
sub
decl
mov
aas
jge
loop
bound
je
nop
adc
sub
jmp
inc
jmp
sbb
lea
lcall
rol
mov
and
shlb
cmovs
mov
sbb
pop
int
in
std
in
or
mov
cmp
sti
hlt
lcall
bound
mov
std
mov
push
aam
push
ds
sti
pop
inc
mov
and
pop
clc
jo
push
adc
xchg
shr
rcl
icebp
fcompl
mov
repnz
adc
stc
movsl
jo
pop
jl
mov
xor
packssdw
mov
lds
or
imul
xchg
mov
shlb
data16
clc
movsb
jge
pop
in
sti
decb
mov
aas
jl
jecxz
inc
movsb
inc
cld
test
jbe
sbb
sub
inc
dec
clc
test
sbb
jp
test
mov
sbb
addl
mov
push
sti
stc
xor
js
push
fcmovu
decl
subb
mov
hlt
loop
hlt
call
nop
adc
int
push
lcall
das
sub
mov
mov
and
pop
or
mov
mov
mov
push
rcl
lds
fadd
mov
and
jne
fld
cmp
or
pop
push
push
adc
lods
andb
outsl
sbb
adc
inc
push
repnz
push
lret
stos
cmpsb
fwait
lods
cmp
push
adc
inc
pop
push
cmpsl
mov
leave
or
cmc
push
adc
pop
push
pop
or
push
xor
inc
adc
adc
adc
sbb
or
fdiv
push
adc
mov
mov
xorl
push
adc
mov
add
insl
test
push
adc
mov
clc
sbb
mov
testl
pop
push
shrl
loope
ljmp
pop
and
movsb
cwtl
xchg
mov
xlat
das
pop
sbb
lock
subb
shll
out
addr16
xor
clc
push
adc
outsl
push
hlt
xchg
cli
lods
cmp
lock
mov
mov
mov
int3
mov
mov
adc
test
push
adc
aaa
fimull
arpl
clc
push
adc
cltd
or
inc
mov
mov
push
adc
adcb
jmp
shll
and
xlat
push
in
sbb
adc
cmp
sbb
mov
mov
mov
adc
lds
inc
gs
subl
xor
ja
cmpsl
in
icebp
mov
xchg
cs
rcr
sbb
push
xor
daa
jo
adc
push
adc
cmpsb
stos
xchg
dec
jb
push
stc
arpl
enter
data16
es
clc
sbb
push
adc
sub
add
lea
mov
add
dec
dec
pop
sbb
rolb
xchg
mov
cmp
adc
push
ret
sub
ljmp
test
gs
cmp
jg
jmp
lcall
ds
inc
ss
mov
sti
push
adc
mov
jg
jne
std
jo
mov
mov
push
adc
adc
add
mov
cld
push
adc
daa
mull
push
adc
sub
incb
movsb
cwtl
pop
mov
inc
dec
cmc
call
int3
test
jge
inc
mov
push
shr
popf
les
aam
std
cli
loop
addr16
jge
aas
jge
loop
data16
lds
jg
lea
cli
hlt
das
push
inc
xchg
cld
push
adc
sar
mov
je
daa
adc
push
adc
mov
cmc
call
mov
cmp
inc
ret
mov
lea
jbe
std
push
adc
cmp
mov
mov
jnp
sti
hlt
scas
dec
std
push
adc
mov
les
jg
jmp
lcall
cmovs
mov
sbb
pop
int
sub
inc
sti
hlt
lcall
cmp
cli
movsl
sbb
adc
add
mov
sti
cmc
jmp
cmpsl
inc
xchg
push
mov
or
xor
cmp
jp
cld
out
dec
push
shll
adc
fsubrp
aam
icebp
sahf
or
cwtl
jge
clc
sti
mov
mov
stos
or
jl
incb
adc
mov
xchg
dec
fisttpl
mov
inc
or
or
push
adc
add
decl
xor
fistpl
jg
sub
jmp
nop
gs
mov
xchg
test
dec
cld
mov
sarb
movsb
jmp
shlb
std
lcall
nop
iret
sti
xor
sbb
xor
aam
loopne
xlat
xlat
xchg
cmpsb
mov
sbb
daa
testl
gs
jg
ljmp
or
dec
pop
xor
dec
inc
sub
outsb
loope
add
cmpb
or
nop
loope
ss
add
das
xchg
xchg
loope
jp
enter
out
push
adc
hlt
incb
adc
fs
imul
push
adc
scas
mov
pop
imul
decl
mov
imul
and
push
dec
cmp
in
test
push
add
arpl
js
stos
popf
in
or
ret
movsl
popf
in
sbb
clc
push
jae
ret
add
daa
and
clc
pop
push
mov
es
push
jns
push
cmp
and
ss
lock
fucom
out
sbb
pop
push
in
fwait
sbb
cmp
enter
xchg
xchg
pop
ret
lcall
mov
pop
push
lock
shlb
xor
pop
int
cwtl
adc
push
adc
pushf
and
dec
mov
aas
movsl
bound
and
das
cmpsl
push
in
and
shl
adc
xlat
jno
mov
loop
lret
cmp
add
fs
pop
lods
wrmsr
enter
push
lret
cs
divb
inc
pop
xchg
sbb
lret
out
addr16
out
xchg
pushf
dec
jae
xchg
pop
enter
pop
lea
sub
jno
inc
cmp
out
lods
pop
push
inc
jo
out
clc
fwait
gs
lds
lcall
fisttps
in
pop
es
add
daa
mov
fisubrl
jecxz
int3
dec
jle
test
and
mov
mov
dec
add
adc
push
cmp
sbb
and
or
pop
arpl
in
js
jg
scas
and
je
loop
aad
xor
mov
fwait
sbb
insb
inc
in
mov
cmp
add
decl
call
mov
pushf
push
shlb
adc
sub
pop
int
dec
std
in
enter
xor
test
jge,pt
ljmp
daa
bnd
pop
pop
in
clc
imul
outsl
shlb
aas
jge
xchg
mov
addr16
add
or
mov
push
push
pop
in
pop
shll
adc
mov
cs
clc
int3
add
adc
neg
jmp
sbb
test
pop
xchg
mov
aaa
sbb
and
dec
cwtl
push
decl
daa
mov
fisttpll
pop
jns
add
adc
lahf
push
sbb
add
adc
sbb
repnz
pop
pop
sbb
xchg
or
mov
mov
jbe
add
adc
cmp
dec
cli
hlt
call
dec
hlt
call
sbb
out
popf
inc
xchg
pop
mov
cmpsb
inc
cmc
call
nopl
sbb
call
sbb
je
adc
das
sub
inc
cld
cli
mov
add
adc
mov
movb
xchg
dec
shr
int
lock
lods
mov
mov
sbb
pop
adc
mov
jbe
out
into
leave
shll
add
adc
pop
clc
cmpsl
inc
into
js
pop
adc
push
dec
cmc
in
jge
repz
aad
pop
xchg
push
cmp
js
int
lods
add
adc
sbb
mov
cmc
push
int
rolb
pop
adc
mov
add
adc
and
je
das
dec
das
loop
insb
jmp
loop
shl
jp
sbb
inc
cli
lret
mov
shll
outsl
sub
or
movsl
rorb
adc
iret
fldenv
mov
xchg
movsb
movsl
movsb
mov
xorl
sub
add
adc
rcll
mov
pop
push
test
pop
adc
cmp
xchg
scas
mov
out
sub
mov
inc
stos
xchg
xchg
rcl
add
adc
add
aas
test
clc
add
adc
mov
push
adc
icebp
add
daa
jl
add
shrb
push
test
pop
das
lds
add
jl
jbe
sub
pop
adc
out
pop
dec
xlat
shll
sub
add
mov
roll
scas
test
push
pop
adc
scas
movsl
loopne
cmp
mov
test
pop
adc
dec
pusha
outsl
xor
pop
pop
adc
sub
pop
adc
xchg
push
jg
pop
lret
leave
mov
push
andl
stos
mov
loopne
sub
xor
data16
push
stos
into
lods
test
pop
adc
call
push
push
int
aaa
push
sbb
xor
xor
pop
pop
adc
push
mov
cs
sbb
in
mov
lods
out
mov
dec
cmp
push
sbb
push
and
cmp
pop
cmc
mov
lods
movsb
adc
pop
adc
jle
xchg
xchg
out
scas
sarl
addr16
sbb
mov
pop
enter
daa
stc
pop
cltd
sti
fwait
sub
pop
push
xchg
addr16
fmulp
lcall
sbb
scas
jle
fs
cmp
mov
divb
movsb
pop
or
adc
bound
xchg
jecxz
fistps
xor
pop
pop
cltd
cmp
or
adc
dec
aad
cmp
mov
fiadds
or
pop
adc
xchg
push
jle
invd
ret
push
or
call
inc
xor
mov
cmp
or
jle
lea
test
cmc
mov
jge,pt
pushf
push
shlb
lds
or
inc
cmc
call
adc
mov
hlt
lcall
sub
sub
call
mov
mov
scas
or
lea
inc
adc
pop
das
dec
or
decl
mov
sbb
pop
dec
iret
shl
and
inc
lret
mov
pop
adc
or
cli
loop
fbld
sub
sub
lds
imul
xchg
mov
cmp
mov
lcall
dec
dec
test
ja
jecxz
mulb
dec
jb
hlt
call
sbb
or
adc
cmp
leave
sub
mov
adc
jmp
push
jle
les
sub
mov
mov
mov
pop
dec
iret
cmc
loop
adc
push
sti
push
add
mov
pop
adc
inc
loopne
inc
rcrb
pop
adc
dec
mov
repz
push
imul
int3
cli
cmc
popf
arpl
aas
or
xchg
in
jle
lret
pusha
mov
sbb
jbe
das
mov
mov
push
jbe
sbb
or
inc
mov
and
pop
shrb
pop
enter
and
icebp
lahf
jcxz
pusha
lret
or
cmc
xor
xchg
fdivs
and
loop
lock
and
icebp
lea
pop
pop
push
popa
pop
sub
lock
adc
mov
mov
jecxz
push
ds
out
mov
or
fldenv
push
rcl
lds
fadd
and
imul
mov
xlat
inc
sbb
add
push
pop
fidivl
clc
dec
lretw
test
rcrb
jae
xor
lods
ret
pop
adc
cmp
pop
cmp
inc
cmp
loope
lret
push
dec
fwait
insl
jecxz
xor
popf
add
push
xchg
xchg
aam
or
adc
and
pop
mov
ljmp
jge
lcall
fisubrl
outsl
sub
cmp
push
mul
jg
les
or
imul
cs
gs
mov
movsb
pushf
out
sbb
cli
mov
arpl
repnz
jae
mov
push
or
jo
jae
add
fists
icebp
sbb
les
sub
movsb
pusha
outsl
xor
or
xchg
out
sub
or
xor
push
jg
mov
leave
mov
push
xorl
ret
mov
and
sbb
add
dec
sub
push
xchg
cltd
test
aas
cmp
dec
jae
mov
cltd
mov
ret
jmp
and
loop
xchg
lea
rcrl
fsub
xor
pop
adc
dec
or
mov
jmp
lret
aas
stc
inc
xor
xlat
divb
iret
sbb
adc
das
in
jmp
rcr
add
push
xchg
xchg
xchg
push
ja
repnz
shrl
sbb
inc
pop
xchg
pop
outsb
fnsave
cmpsb
outsb
scas
mov
cmpsl
fnsave
popa
sub
icebp
jecxz
mov
pop
adc
xor
sub
and
jae
mov
ljmp
push
and
dec
test
xchg
mov
pop
imul
sbb
xor
nop
or
cld
mov
pop
adc
pop
hlt
cs
data16
inc
jns
and
pop
adc
push
dec
jg
or
fists
ret
adc
inc
sysret
adc
sub
bound
arpl
mov
incb
inc
xchg
xchg
leave
push
fucomp
roll
pop
adc
or
cmc
call
adc
mov
hlt
lcall
bound
test
cmp
inc
xchg
and
shl
jl
pop
adc
push
das
sub
mov
adc
adc
mov
mov
mov
jbe
adc
adc
pop
mov
lea
sub
shll
adc
shr
xlat
hlt
orl
enter
push
adc
adc
aad
cld
cli
adcb
pop
jns
fs
addb
clc
stos
and
sti
sbb
popa
in
jg
mov
lret
movsl
stc
orb
jl
pop
adc
mov
insl
mov
add
adc
adc
mov
lock
adc
xchg
in
inc
stos
jb
sub
das
sub
cmp
cli
mov
adc
adc
mov
enter
jbe
adc
adc
stc
mov
lea
rorl
mov
adc
shr
shl
cmpsb
movswl
cmp
mov
mov
mov
push
dec
push
adc
ljmp
adc
add
dec
xlat
jmp
in
adc
adc
mov
imul
cmpsb
aam
mov
adc
sbb
in
hlt
lret
mov
fidivrs
js
inc
hlt
cmpsb
xchg
scas
xchg
xor
into
lock
adc
shl
icebp
jne
inc
fwait
jmp
ss
pop
ret
adc
adc
xor
sti
mov
sub
jmp
cmp
pop
adc
sub
sub
adc
adc
or
adc
adc
rcl
mov
cmp
pop
adc
mov
movsb
cmp
lahf
cmpsl
flds
cld
gs
mov
mov
inc
gs
pop
and
ja
mov
inc
out
dec
or
mov
pop
adc
xchg
shlb
dec
pop
adc
and
loope
dec
fisubs
addr16
cmpsb
pushf
loope
in
data16
lret
movsb
push
mov
xchg
sub
pop
adc
cltd
adc
push
mov
mov
pop
inc
loopne
arpl
ficompl
sbb
adc
xor
popa
mov
push
or
daa
into
je
mov
sbbb
popf
mov
xlat
das
add
and
push
jae
xor
pop
adc
loopne
subb
add
pop
adc
jge
fsubrs
jae
shlb
lods
add
push
repz
xchg
xor
vpmacssdqh
mov
pop
mov
stos
test
loopne
sub
and
aam
xchg
aam
push
pop
adc
jb
out
adc
ret
and
fcoml
pop
adc
push
pushf
adc
aad
add
pop
adc
and
cmp
push
pop
pop
adc
or
pop
pop
adc
push
adc
je
sbb
adc
mov
lret
pop
push
pop
dec
mov
dec
sbb
adc
repnz
push
push
insb
sbb
adc
push
loope
cmpsl
push
mov
lret
pop
cwtl
sub
test
cmp
out
fstps
lock
xchg
ret
sbb
adc
imull
pop
sub
pop
pop
lret
daa
call
inc
xchg
cmpsb
loop
mov
lret
inc
sbb
aas
int
lds
add
or
sbb
adc
jle
out
jecxz
or
or
je
outsl
out
pop
enter
adc
out
inc
push
arpl
mov
cltd
mov
jge
cli
hlt
decb
insl
dec
jl
hlt
inc
push
inc
mov
xchg
les
jp
lea
and
sti
hlt
call
sbb
bound
mov
sbb
adc
jo
xchg
insl
mov
in
xchg
ret
shlb
adc
push
int
add
in
dec
das
shll
add
mov
pop
jp
inc
mov
sbb
adc
cli
rcl
mov
jecxz
sti
hlt
pushf
arpl
add
add
xor
iret
ja
call
xor
sub
je
call
xchg
push
das
sub
jmp
jns
rcl
icebp
mov
movsl
imul
jmp
pop
adc
push
das
sub
cld
cli
sbbb
jge
sbb
jl
sbbb
js
push
mov
les
inc
cmp
sub
bound
shl
sti
hlt
pushf
arpl
dec
mov
pop
in
mov
shll
cmc
call
xor
roll
inc
stc
stos
aas
sbb
mov
mov
mov
mov
sbb
adc
jge
sbb
xor
cmpsb
in
mov
inc
xor
ljmp
cmp
ret
mov
shl
mov
adc
call
aam
xor
and
mov
icebp
xchg
push
cmp
test
pop
adc
test
cmc
and
dec
mov
push
pusha
divb
inc
repnz
pop
adc
movsb
add
push
and
pop
adc
cmpsl
aad
mov
push
xchg
sub
push
cld
mov
pop
xor
aam
in
jb
push
jmp
rcl
sahf
mov
adc
imul
xor
roll
mov
in
fldl
in
pop
mov
test
fstl
jb
mov
push
cmp
fwait
lahf
jns
dec
dec
dec
pop
mov
pop
fs
or
pop
adc
js
repz
lods
movsl
xor
scas
xchg
xchg
xchg
pop
mov
shrb
push
sbb
lretw
pushf
dec
les
jnp
mov
sub
lods
sbb
aam
sub
adcb
xor
cmpsl
fucom
sbb
push
fcomps
dec
push
in
sbb
movsl
push
pop
adc
mov
pop
adc
mov
lock
push
pop
adc
stc
js
jae
add
ficoms
les
pop
adc
adc
push
sahf
sbb
pop
dec
and
test
icebp
jbe
jns
xchg
sbb
inc
pushf
push
pop
adc
btr
mov
push
pop
adc
xchg
lods
je
dec
fwait
sbb
lock
test
out
sbb
pop
adc
aaa
mov
arpl
popa
jb
mov
jp
adc
adc
iret
test
xchg
sub
inc
adc
pop
adc
push
popf
and
sbb
inc
in
jo
xlat
sub
ja
mov
inc
sub
sbb
movsl
dec
inc
hlt
or
push
fisubl
jg
test
imul
cmp
pop
pop
adc
das
xchg
pushf
dec
mov
ljmp
mov
cmp
ret
test
loope
clc
mov
mov
push
xchg
aam
jae
mov
dec
pop
xor
inc
cmp
pop
adc
jecxz
cmp
test
testb
lret
dec
sub
pop
push
and
push
push
int3
dec
cmp
pop
adc
sbb
pop
std
sub
jmp
push
jle
les
jg
jmp
scas
int3
and
adc
mov
fidivs
and
dec
sbb
mov
loop
xor
inc
repz
loop
sbb
je
iret
push
das
sbb
pop
adc
xor
cmc
call
jne
aas
jge
dec
and
adc
and
bound
sti
jle
mov
lret
popa
mov
xchg
aaa
push
ror
imull
in
dec
imul
mov
mov
pop
adc
mov
ror
popf
jecxz
pop
mov
mov
cmc
call
and
adc
enter
hlt
stos
push
ds
les
adc
mov
cld
cli
mov
and
adc
leave
call
adc
dec
jmp
pop
mov
and
pop
adc
std
xor
inc
pop
adc
push
jp
and
adc
ret
pushl
inc
pop
adc
sti
insl
xchg
mov
adc
xor
or
adc
movsl
push
das
stc
cmpl
inc
pop
adc
nop
mov
pop
pop
adc
jmp
adc
jmp
add
pop
adc
mov
mov
and
push
test
or
adc
sbb
sbb
pop
adc
push
mov
stos
or
lcall
push
push
xor
adc
adc
adc
ss
cmp
pop
adc
dec
arpl
pop
pop
adc
mov
out
int
stos
out
rclb
pop
adc
xor
push
inc
adc
adc
pop
pop
adc
jle
or
adc
jmp
xor
adc
mov
mov
sub
pop
adc
inc
orl
and
mov
sbb
sbb
inc
adc
adc
sbb
mov
adc
jnp
mov
lidtl
adc
adc
sub
cmpsl
jmp
test
pop
adc
outsl
pop
fs
insb
pop
pop
adc
dec
mov
inc
pop
adc
stc
ja
lods
inc
and
pop
adc
adc
rorb
cmp
xchg
add
in
les
sub
pop
cmp
in
or
push
es
sarl
sub
adc
imul
adc
adc
pusha
lds
or
xchg
cltd
outsb
imul
adc
adc
pop
adc
adc
lds
push
adc
fcoml
and
and
into
inc
adc
adc
fcomps
int3
popf
pop
adc
call
dec
or
lea
sbb
mov
mulb
fs
sub
adc
enter
lock
popf
pop
adc
repz
jno
or
mov
dec
andb
bound
outsb
clc
popf
pop
adc
lods
jl
pop
adc
aad
cmpsb
and
adc
jae
sub
std
inc
adc
adc
xlat
pushf
sub
push
adc
jo
fs
movsb
and
mov
lret
mov
out
or
adc
pop
pop
xor
adc
shrl
rorb
adc
leave
loope
sub
loope
push
adc
mov
scas
lock
adc
cmp
lods
sub
push
adc
sub
mov
push
gs
jo
fbld
popf
pop
adc
xor
push
adc
pop
add
adc
jmp
adc
sub
pop
adc
outsb
cmp
sahf
pop
adc
dec
decl
push
adc
mov
sbb
push
adc
ret
pushl
inc
pop
adc
sti
jb
ud1
sahf
pop
adc
mov
adc
out
cs
sbb
rcrb
and
popa
cli
push
mov
sahf
pop
adc
test
inc
pop
adc
dec
lcall
fcomps
mov
sub
dec
leave
jg
or
push
les
sahf
pop
adc
fsubrl
or
dec
sti
hlt
dec
in
mov
adc
or
and
push
adc
and
pop
adc
xchg
lahf
pop
adc
sub
bound
andb
pop
adc
jecxz
andl
fcmovbe
mov
lahf
pop
adc
push
movsbl
mov
push
adc
loop
inc
and
pop
adc
ljmp
adc
imul
pop
ret
imul
icebp
jno
ud1
cmp
mov
sbb
cmc
fisttpll
dec
lcall
insl
out
push
adc
push
ds
jge
ss
adc
mov
mov
pop
pop
aaa
jo
pop
nop
mov
stos
push
pop
pop
adc
es
cs
inc
mov
jecxz
jbe
inc
sarb
pop
adc
scas
push
xlat
mov
es
pop
adc
ret
shrb
adc
addb
and
std
not
xchg
sub
pop
adc
jb
lea
insb
sbb
in
ds
cli
icebp
mov
popf
pop
adc
mov
mov
dec
fiaddl
mov
xor
hlt
inc
pop
adc
dec
lock
sbb
push
push
adc
adc
inc
sti
mov
fstenv
sub
pop
adc
in
jmp
add
push
push
aam
loop
imul
pop
adc
out
inc
sub
sub
mov
jmp
dec
push
pop
pop
pushf
inc
pop
adc
fldenv
popf
pop
adc
pop
mov
add
push
call
sub
sbb
testb
fcompl
dec
dec
inc
insb
popf
pop
adc
mov
pop
adc
fstpt
adc
lahf
notl
sub
mov
mov
cmp
xchg
sub
pop
adc
ficomps
inc
pop
adc
adc
fwait
and
dec
in
add
jb
in
pop
adc
jecxz
lahf
pop
adc
jl
bound
mov
adc
adc
xor
adc
fsub
clc
pop
push
and
pop
adc
outsl
cmpsl
pusha
data16
inc
mov
rolb
pop
adc
adc
or
.byte
leave
add
add
or
popf
popa
mov
pusha
pushf
imul
popf
popa
call
pusha
pushf
popf
popa
pop
pusha
pushf
or
popf
popa
add
pusha
pushf
xor
popf
popa
mov
pusha
pushf
not
popf
popa
xor
pusha
pushf
popf
popa
ret
pusha
pushf
push
add
popf
popa
popl
pusha
pushf
add
popf
popa
add
pusha
pushf
imul
popf
popa
push
pusha
pushf
popf
popa
push
pusha
pushf
or
popf
popa
push
pusha
pushf
push
add
popf
popa
push
pusha
pushf
and
popf
popa
jmp
cmp
mov
sbb
push
add
popf
popa
call
pusha
pushf
push
add
popf
popa
subl
pusha
pushf
test
popf
popa
mov
pusha
pushf
push
add
popf
popa
mov
pusha
pushf
and
popf
popa
and
pusha
pushf
sub
popf
popa
add
pusha
pushf
xor
popf
popa
mov
pusha
pushf
and
popf
popa
mov
pusha
pushf
daa
popf
popa
movzwl
pusha
pushf
popf
popa
add
pusha
pushf
test
popf
popa
cltd
pusha
pushf
mov
popf
popa
mov
pusha
pushf
push
add
popf
popa
div
pusha
pushf
popf
popa
xor
pusha
pushf
mul
popf
popa
xor
pusha
pushf
sub
popf
popa
ror
pusha
pushf
push
add
popf
popa
inc
pusha
pushf
dec
popf
popa
cmp
pusha
pushf
aaa
popf
popa
jl
pusha
pushf
sub
popf
popa
call
pusha
pushf
sub
popf
popa
pop
pusha
pushf
push
add
popf
popa
test
pusha
pushf
mov
popf
popa
je
pusha
pushf
add
popf
popa
dec
pusha
pushf
cmp
popf
popa
je
pusha
pushf
push
add
popf
popa
dec
pusha
pushf
popf
popa
je
pusha
pushf
test
popf
popa
xor
pusha
pushf
not
popf
popa
ror
pusha
pushf
push
add
popf
popa
xor
pusha
pushf
sub
popf
popa
cmpw
pusha
pushf
mov
popf
popa
je
pusha
pushf
mov
popf
popa
sub
pusha
pushf
mov
popf
popa
and
pusha
pushf
cmp
popf
popa
jmp
pusha
pushf
cmp
popf
popa
add
pusha
pushf
xor
popf
popa
mov
pusha
pushf
popf
popa
cmpw
pusha
pushf
mov
popf
popa
jne
pusha
pushf
xchg
popf
popa
and
pusha
pushf
mov
popf
popa
pop
pusha
pushf
and
popf
popa
mov
pusha
pushf
xor
popf
popa
jmp
pusha
pushf
sub
popf
popa
xor
pusha
pushf
or
popf
popa
jmp
pusha
pushf
mov
popf
popa
xor
pusha
pushf
mov
popf
popa
jmp
add
outsl
pushf
push
xorl
jns
or
sub
cli
mov
lock
js
je
mov
add
or
outsb
xchg
ljmp
ss
cwtl
test
sbb
cmp
sub
repz
lds
mov
insb
iret
jmp
popa
imul
mov
mov
mov
aad
test
cltd
outsl
iret
les
or
out
repz
mov
imul
jns
jg
aaa
dec
inc
mov
or
dec
pop
js
movsl
leave
jmp
and
in
cmp
mov
orl
ret
into
adcb
and
pop
cld
xor
call
xchg
mov
inc
popa
andb
sub
add
cli
mov
pop
cld
adc
movsl
test
dec
dec
cmpsl
xor
add
inc
inc
fwait
xchg
shl
xor
mov
sahf
repz
mov
mov
test
or
mov
sbb
nop
sahf
stc
in
std
dec
mov
or
inc
repnz
clc
mov
pop
sti
clc
push
pop
mov
jg
push
mov
or
mov
ret
aad
and
inc
push
ret
add
leave
pop
push
dec
ljmp
loope
stos
clc
test
fcomps
add
imul
mov
aas
stc
mov
mov
adcl
push
or
repnz
push
or
mov
andl
inc
mov
and
mov
popa
sbb
add
add
mov
rolb
sbb
data16
ret
jae
sub
dec
ljmp
jecxz
mov
push
add
test
movsl
cmp
add
dec
lcall
jl
add
inc
into
jo
xlat
mov
out
xor
imul
fnstenv
sbbb
xchg
mov
orb
xor
jl
dec
sarl
or
inc
repz
shlb
dec
ds
cmpsl
je
sbb
loop
repnz
mov
pushl
dec
aas
aaa
inc
sub
enter
xor
sahf
pushf
in
into
mov
test
loopne
xor
aas
stc
out
add
and
add
pushf
or
ljmp
incl
call
pop
mov
mov
test
push
in
insb
test
cwtl
test
js
ljmp
addl
and
add
mov
cwtl
mov
push
push
addr16
je
js
mov
sbbb
inc
inc
out
lret
mov
rorl
mov
mov
sbb
push
xchg
cld
mov
fsubs
push
fs
mov
in
and
iret
xlat
mov
sar
dec
jmp
sbbb
push
dec
iret
addl
inc
out
loop
clc
and
add
rolb
call
jnp
jmp
pushf
sbb
mov
jge
clc
test
adc
mov
out
icebp
inc
cld
arpl
cs
cmpsl
out
pop
sub
loopne
call
into
repz
sbbb
fwait
test
sahf
add
mov
jae
or
js
je
cmp
cmp
pop
mov
mov
int
sbbl
stc
add
pop
pop
js
ljmp
mov
cmp
cmp
add
xor
sub
cld
inc
addl
lods
add
mov
sti
lahf
push
arpl
cli
test
cmp
inc
push
xlat
mov
add
pop
jge
cwtl
sbbb
out
loopne
cli
xchg
xchg
dec
mov
inc
dec
fistps
add
in
or
sbb
pop
in
xor
subl
in
add
pop
cld
dec
mov
cs
shlb
das
or
out
mov
and
dec
lea
loopne
arpl
pop
mov
and
mov
aaa
inc
sub
cs
out
push
sbb
mov
mov
pop
lock
lcall
push
pop
out
test
add
clc
test
add
rolb
call
inc
and
xor
or
sarl
movsl
cmc
adc
mov
out
xor
mov
mov
int
push
pop
cmp
imul
mov
xlat
imul
xchg
or
or
lds
push
aam
hlt
add
cmp
adc
mov
cmp
inc
and
dec
push
or
mov
stc
push
rorl
dec
adc
movsl
xor
inc
adc
fsubrs
mov
call
cmp
std
pop
pop
js
ret
in
jge
xor
call
inc
es
hlt
mov
jns
shlb
pop
push
ret
xor
pushf
jmp
orl
mov
test
adc
mov
out
icebp
inc
lret
loopne
lret
pop
mov
mov
out
push
decl
jecxz
icebp
inc
cwtl
sar
loopne
or
je
sarl
imul
ds
mov
or
add
xlat
cmp
add
andb
inc
xchg
stos
cmp
push
mov
jnp
int3
movsl
lock
mov
or
das
inc
insb
movl
call
arpl
adc
fisttps
mov
push
dec
inc
mov
mov
arpl
mov
xchg
inc
cmp
cmp
adc
ss
inc
pusha
filds
mov
lahf
call
pop
in
subl
inc
inc
xor
mov
out
push
dec
ss
push
add
ja
das
inc
out
out
es
loopne
xor
mov
stos
sti
jl
pop
lret
dec
mov
sbb
mov
dec
dec
push
aas
mov
sub
jl
jo
aad
scas
xlat
xchg
mov
push
dec
pop
inc
clc
movsl
cmc
cmc
inc
lar
push
iret
leave
mov
mov
mov
aad
jno
nop
shll
mov
mov
mov
sbb
xor
push
dec
rorb
xchg
cmp
clc
test
adc
mov
out
icebp
inc
lret
loopne
lret
pop
mov
mov
out
push
decl
jecxz
icebp
inc
cwtl
sar
loopne
or
push
inc
mov
add
jae
adcb
jne
pop
mov
aaa
dec
into
adc
adc
scas
or
or
cli
test
pop
cld
add
call
mov
cld
adc
mov
loopne
cli
push
ja
inc
pop
out
out
jne
mov
xchg
loope
mov
jg
jge
ss
dec
dec
push
js
sbb
add
or
push
mov
into
mov
in
enter
or
pop
popa
lcall
enter
sbb
xchg
inc
call
movsb
add
fs
sub
mov
mov
je
push
jg
jge
addb
subl
dec
inc
xor
mov
out
push
dec
ss
jge
dec
mov
add
add
testl
lods
aad
pop
js,pn
ret
fistpll
xor
rcll
inc
ret
inc
es
sbb
das
inc
ljmp
xor
cmp
xor
xor
pushf
adc
ds
lcall
iret
sti
jno
lret
cld
adc
jne
cmp
and
sbb
lds
pop
insb
iret
sti
jno
lret
cld
or
lods
mov
repnz
inc
lcall
cli
sarb
xor
aaa
mov
hlt
and
jo
xlat
mov
arpl
mov
addr16
inc
mov
jo
cli
rolb
and
mov
add
sub
inc
hlt
xchg
mov
rclb
pushf
add
jl
mov
mov
jnp
subb
jmp
sbb
inc
mov
push
dec
xor
mov
jmp
mov
cmp
or
and
add
subb
ds
dec
mov
cmpb
jns
icebp
jg
inc
mov
push
mov
add
mov
pop
sti
ret
popa
sbb
nop
mov
mov
inc
in
sbb
inc
adc
lods
jns
adc
xchg
rcrl
aaa
test
hlt
mov
leave
out
pop
mov
mov
pop
cli
call
ret
and
ljmp
xor
push
sar
mov
mov
ja
push
arpl
dec
ror
aaa
mov
mov
in
add
out
dec
push
push
pop
cli
sarb
xchg
or
insl
mov
lahf
call
dec
in
inc
out
add
mov
aad
xor
std
pop
mov
mov
jmp
pop
or
sarb
mulb
mov
aas
paddw
xchg
dec
add
cli
sarb
lret
popf
hlt
pop
inc
arpl
call
adc
add
cli
or
bound
mov
xor
pop
mov
xor
call
dec
iret
or
call
push
jo
pop
das
inc
pop
mov
paddd
push
dec
mov
out
xlat
lds
ret
out
pop
mov
xor
cli
pop
mov
mov
add
nop
addr16
jge
dec
clc
inc
inc
pop
inc
pop
xchg
pop
jns
mov
stos
hlt
inc
hlt
pop
jbe
mov
punpckhdq
lret
stos
xor
inc
js
mov
sbb
inc
pushf
adc
mov
and
add
pop
mov
hlt
pop
sub
std
pop
mov
cmp
call
xor
rol
pop
call
ret
jmp
cmp
test
inc
jno
mov
mov
mov
mov
in
ss
rolb
call
inc
pop
mov
add
call
pop
mov
inc
shll
xchg
rcrb
lcall
les
insb
cmova
or
rol
arpl
mov
add
adc
int
aam
dec
or
clc
test
push
jns
mov
push
or
shll
dec
and
into
mov
or
mov
jmp
mov
jne
pop
roll
adc
cli
and
movb
xor
jge
adcb
lock
roll
mov
adc
hlt
lods
inc
iret
mov
sbb
add
insl
pop
paddd
call
aad
lcall
sub
xchg
hlt
das
inc
imul
roll
add
int
shrb
mov
dec
and
iret
xlat
mov
sar
dec
mov
ffree
pushf
mov
dec
push
pusha
xchg
and
and
iret
xor
sar
push
jg
pop
add
cli
call
sub
lods
cli
das
inc
pop
add
pop
lock
inc
mov
fldl
mov
insb
movl
pop
mov
std
shll
fnstsw
add
pop
inc
mov
dec
pop
inc
pop
add
pop
sarl
icebp
push
dec
inc
or
popf
mov
inc
iret
jecxz
scas
int
sub
jle
dec
pop
mov
mov
add
lret
and
pop
pop
inc
insb
pop
dec
push
mov
mov
cmc
pop
mov
repz
inc
call
xchg
dec
push
ret
sbb
dec
pop
cli
ror
cmp
jae
pushf
cmp
mov
add
lcall
xchg
stos
paddw
mov
mov
mov
mov
cli
insl
inc
daa
inc
jno
mov
leave
inc
mov
push
mull
and
movb
and
mov
or
je
call
inc
add
mov
ja
cli
and
out
add
mov
sti
pop
cli
pop
pop
sbb
mov
dec
test
inc
stos
jne
mov
sub
repnz
mov
decb
hlt
mov
imul
xchg
das
cmp
add
cmp
mov
aaa
test
mov
int3
cmp
call
sub
xor
in
fstl
decb
pop
dec
jmp
lret
les
cli
ror
imul
mov
loop
mov
jne
mov
xchg
dec
mov
sub
adcb
lds
inc
pop
adcb
jne
jmp
push
dec
inc
adc
push
rolb
hlt
pop
clc
cmp
inc
jns
std
mov
aad
jne
push
inc
inc
repz
mov
roll
stos
paddd
arpl
or
mov
push
or
cmp
paddw
jns
mov
mov
xor
cli
rolb
addl
mov
mov
mov
mov
hlt
mov
mov
fildll
int
dec
jbe
and
pop
js
test
mov
mov
cli
call
and
cmp
pop
mov
repz
push
pop
push
inc
mov
das
push
out
leave
mov
inc
aaa
daa
inc
pop
mov
jnp
sub
aaa
shrl
das
ja
or
mov
daa
push
inc
pop
add
out
std
sub
cli
or
test
pop
sub
pop
pop
cli
das
cmpb
test
inc
cmp
push
mov
lret
shll
dec
arpl
mov
cmp
std
call
out
dec
shlb
hlt
pop
or
call
dec
xchg
dec
pop
cli
jmp
fdiv
mov
lock
adc
dec
ds
mov
or
clc
test
and
mov
push
or
rcl
aad
jno
into
mov
or
and
cmp
paddw
mov
cld
mov
aas
mov
popf
ja
add
loopne
sbb
mov
inc
pop
std
imul
add
jp
cmp
aaa
inc
pop
adcb
int
and
push
loopne
mov
mov
dec
pop
cli
call
stos
push
test
aas
rclb
rolb
popf
loopne
mov
andb
mov
rcrb
hlt
mov
cwtl
cmp
ret
xadd
das
cmp
pop
mov
in
cmp
aad
mov
mov
lds
negl
scas
lds
inc
pop
xchg
sub
call
cld
xchg
mov
or
fdivrs
repnz
fistpll
pop
std
mov
dec
jmp
fisttpl
cli
rolb
ss
pop
icebp
hlt
mov
ss
test
inc
std
mov
cli
das
or
cld
dec
insb
inc
add
pop
xchg
mov
xchg
ljmp
jge
add
jg
jbe
lret
bound
mov
dec
pop
std
rcll
jae
movsl
std
or
call
aad
ret
mov
sar
das
inc
xchg
pop
add
xchg
xchg
mov
pop
test
or
dec
dec
inc
xor
add
js,pn
icebp
sbb
lds
shrb
aam
mov
jae
add
in
stos
xchg
lahf
and
test
loopne
lcall
jecxz
or
loopne
sbb
mov
test
cli
ror
repnz
movsl
xor
rcll
imul
push
in
pop
push
mov
sbbb
cli
pop
ja
push
mov
jge
call
or
ja
jge
dec
clc
inc
or
pop
xchg
pop
jns
call
stos
mov
jbe
mov
punpckhdq
lret
stos
sub
mov
sbb
inc
pushf
rorl
hlt
shrb
pop
mov
hlt
pop
in
add
insl
dec
pop
decb
cld
mov
sbb
test
inc
outsb
pop
add
mov
pop
cli
pop
pop
incl
mov
dec
add
sbb
jo
arpl
mov
push
inc
enter
rcrb
mov
js
and
insb
push
pop
push
mov
or
loopne
sub
xor
test
cld
sarb
add
lret
mov
dec
dec
and
or
aad
icebp
ljmp
cmp
xor
pusha
out
jo
lret
mov
dec
inc
cmp
add
sub
mov
mov
cwtl
add
pop
mov
incl
emms
sbb
xorb
orb
cmp
or
sub
das
test
test
xor
pop
pop
cli
das
xor
pop
mov
xor
call
mov
ja
cli
xchg
js
testl
adc
insl
es
mov
ja
sub
dec
mov
int
je
pop
lock
es
pop
add
subb
mov
repz
xor
call
mov
gs
mov
jnp
jo
sub
int3
hlt
mov
je
mov
pop
mov
fdivs
jne
push
mov
sarl
das
or
addl
pop
mov
lock
pop
mov
imul
jge
dec
jl
mov
dec
pop
cli
imul
lds
add
subl
lahf
aaa
hlt
pop
mov
mov
popa
imul
int3
sbb
popf
add
jecxz
sbb
sub
imul
mov
fisttpl
mov
call
rorl
and
push
std
pop
fisttps
adc
add
inc
insl
lret
inc
dec
fists
ss
push
xor
push
mov
jnp
ds
jmp
shll
movsb
inc
aam
scas
pusha
jae
or
imul
nop
loope
mov
loope
jg
add
mov
push
xor
not
xor
shll
stos
je
cli
call
call
xchg
stos
push
arpl
js
cmp
dec
mov
jmp
add
insb
iret
jecxz
cmp
sbbb
cli
pop
xlat
mov
push
roll
enter
vmread
movsb
lds
inc
call
jbe
and
add
sub
dec
inc
add
add
je
mov
andl
iret
xor
sar
dec
mov
ffree
pushf
subb
js
pusha
xchg
xchg
and
add
iret
xor
sar
xchg
jg
mov
add
call
and
das
inc
arpl
jmp
roll
jb
hlt
mov
jg
adcb
jae
mov
cli
push
and
add
stos
sub
rolb
lret
or
rorl
jae
andb
std
arpl
les
ss
mov
cmp
sahf
aad
je
pop
cwtl
into
mov
push
std
pop
fistps
add
stos
mov
mov
into
jae
lret
mov
dec
inc
and
push
sub
mov
lahf
clc
repz
loope
call
inc
mov
aad
test
push
sub
xlat
imul
loope
dec
inc
loopne
mov
rcr
jg
add
inc
outsb
inc
fists
pop
xchg
push
std
pop
pop
push
adc
imul
or
dec
jno
into
mov
mov
or
andb
lods
loop
adc
mov
xchg
push
dec
ss
jge
dec
mov
or
fdivs
divb
dec
sbb
mov
test
or
push
or
lret
xor
pop
inc
loopne
fucomip
cmp
add
ja
movsl
pushf
stc
in
sti
jecxz
cvtpi2ps
scas
popa
xor
lret
imul
loop
xor
call
push
paddsw
lret
stos
jb
inc
js
mov
fbstp
add
imul
mov
xor
stos
outsb
movb
adcb
lock
call
xlat
test
repz
aas
lret
mov
imul
pop
rcrb
sbb
inc
mov
xlat
test
sarb
test
mov
xor
std
arpl
inc
xchg
jecxz
imul
cmpb
or
sbb
add
pop
jnp
cwtl
fadds
mov
out
jg
mov
outsb
out
ss
inc
or
je
cmp
mulb
jne
ret
mov
cmp
inc
jae
cld
push
xor
mov
std
roll
xlat
test
sarb
aas
xlat
mov
ds
popa
imul
sbb
xchg
and
mov
push
dec
iret
orl
mov
pop
orb
push
in
cmp
rolb
je
icebp
mov
add
hlt
mov
inc
adcb
jb
mov
cli
imul
hlt
mov
js
sub
mov
inc
sahf
add
cld
add
push
cwtl
push
std
pop
movsl
xor
xor
mov
add
xlat
test
mov
cli
das
xor
push
mov
cltd
inc
pop
pop
cvtpi2ps
out
imul
out
fwait
rorl
addr16
jecxz
pop
lock
mov
mov
jo
sbb
insb
imul
ds
jne
push
mov
icebp
xchg
and
call
dec
scas
shll
movsb
int
push
testb
dec
push
xor
mov
aaa
leave
pop
mov
mov
jne
movsb
int
push
testb
dec
dec
mov
in
mov
mov
sarl
je
and
pop
mov
es
scas
les
test
inc
loopne
call
repz
mov
mov
mov
sub
sahf
push
sahf
icebp
mov
xchg
mov
lds
mov
inc
sahf
add
cmp
add
sbb
adcl
jecxz
mov
jmp
sahf
add
jae
add
int
xchg
je
or
sti
push
fisubl
call
ds
sub
mov
xchg
mov
lds
add
scas
leave
aad
jbe
sarb
addl
iret
xor
ret
std
imul
pushf
sbbb
dec
js
mov
lahf
add
mov
mov
xchg
xor
mov
test
cmp
lret
jb
std
pop
mov
shll
gs
mov
call
fnstcw
mov
insb
pop
push
mov
mov
stos
paddd
imul
bound
iret
mov
jge
cs
ds
pop
cmp
repz
mov
ja
inc
push
mov
mov
or
mov
jmp
mov
add
pop
shl
dec
enter
adc
xor
jo
outsb
push
mov
fbstp
jne
push
mov
xor
lcall
mov
jbe
cli
pop
ss
or
mov
sbb
adc
or
mov
ficoms
mulb
aad
cs
addr16
insb
xlat
stos
mov
int
cmp
and
test
sub
rorl
ret
fwait
rolb
fisttps
push
roll
inc
lret
push
dec
ret
push
das
mov
leave
mov
gs
es
jns
pusha
movsl
jmp
mov
cmp
add
xor
dec
andb
std
arpl
add
cmp
icebp
inc
call
mov
mov
test
hlt
cmp
paddw
jns
mov
mov
lods
cmp
rolb
and
pop
mov
xor
loopne
into
sar
push
push
rcl
push
mov
test
jg
adcb
push
add
jo
insl
in
inc
prefetchwt1
dec
ret
jmp
add
dec
filds
sbb
mov
inc
and
movsl
loop
pushf
icebp
mov
into
sti
jge
aaa
leave
pop
push
dec
mov
sbb
mov
dec
cmp
movsl
in
pop
lock
pushf
cmp
imul
orl
cmpsb
add
lcall
sub
adc
xchg
dec
loop
mov
add
push
leave
jecxz
add
mov
std
push
movsl
jae
test
mov
push
mov
aas
pop
test
into
add
lods
call
test
adc
pop
pop
and
or
shlb
add
and
mov
int3
adc
aad
dec
push
ss
lahf
pop
mov
add
adc
jns
xchg
xor
mov
stc
xor
xchg
cmp
lds
shll
dec
test
std
sbb
xchg
dec
sti
insl
mov
in
imul
sub
push
shlb
shll
insl
