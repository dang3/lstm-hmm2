sbb
add
xor
sti
push
scas
inc
cwtl
into
mov
mov
movsl
jae
jp
incb
sub
xlat
pusha
sub
imul
push
cmp
cmp
jp
add
es
push
test
push
inc
fsubrl
imul
and
pop
mov
cmp
sbb
aad
push
dec
lods
jp
sbb
clc
push
pop
sub
mov
nop
xchg
jnp
sub
pushf
xor
jl
repz
jmp
mov
ret
push
cltd
pop
arpl
ror
loop
bound
int3
sub
nop
mov
mov
mov
les
sbb
cli
sbb
xor
shrb
outsb
andl
inc
sub
pop
sbb
test
sbb
inc
mov
sbb
add
into
fst
push
xchg
inc
or
push
stos
inc
pop
mov
xor
jp
jb
and
mov
sub
mov
loop
imul
fs
cmpsl
xchg
dec
mov
sub
in
iret
adc
and
rolb
dec
rcll
insl
out
mov
xchg
insb
inc
cs
xchg
out
mov
and
outsl
jl
mov
into
lret
xchg
jmp
and
aaa
arpl
sub
and
mov
mov
ficoms
inc
jecxz
xor
mov
jge
dec
sbb
ret
pop
mov
add
mov
and
stc
imul
mov
arpl
fistpll
cmp
idivb
push
lcall
xchg
testl
shl
stos
popa
inc
and
mov
ja
mov
ja
out
addl
push
lods
loop
push
sub
leave
sarb
and
lds
out
jecxz
out
pop
mov
mov
pop
into
out
or
fcomip
insl
sub
addr16
jge
rcrl
cwtl
mov
pusha
or
sbb
sar
push
add
push
dec
sbb
sub
popa
imul
add
ret
adc
hlt
addr16
stos
mov
dec
mov
or
dec
pushf
cmpsb
adc
mov
fwait
mov
andl
lods
mul
pop
dec
rcl
jae
mov
arpl
test
ljmp
stos
rolb
adc
fistpl
das
fldcw
icebp
and
clc
sub
jns
xchg
sub
push
cmp
mov
stc
jmp
xchg
adc
adc
loope
outsb
mov
and
inc
mov
mov
adc
add
dec
test
mov
push
inc
mov
sbb
clc
adc
sub
dec
iret
xchg
add
and
sbb
sub
popa
setae
fistpll
jb
ljmp
sti
adc
jne
cmovne
testb
dec
mov
mov
jecxz
jmp
mulb
cld
xor
inc
sbb
jg
inc
dec
mov
dec
pushf
cmp
adc
data16
lahf
jle
cwtl
orb
lds
lahf
pop
add
push
pop
mov
mov
int3
shll
test
mov
xlat
cmp
add
add
add
ret
push
lret
inc
hlt
push
dec
daa
sbb
aaa
ds
pop
daa
imul
rol
mov
mov
data16
jae
sbb
shlb
pop
inc
loope
iret
mov
adc
pusha
mov
push
dec
imul
nop
or
add
repz
pushf
mov
and
xchg
cmp
cmp
movl
cmp
stc
out
xor
or
and
je
lods
inc
cwtl
or
dec
mov
mov
cmp
icebp
jmp
mov
mov
imul
jo
add
and
mov
or
das
cmp
and
add
mov
xor
fmulp
sbb
dec
pushf
int
int3
mov
xchg
cmp
stos
popf
lea
xchg
hlt
hlt
cmp
aam
sbb
lret
dec
inc
subl
out
insl
test
leave
in
xchg
ds
xor
and
aam
les
int
mov
mov
orl
push
xor
shlb
lahf
subb
pop
xchg
and
push
lock
push
and
xchg
es
dec
inc
mov
lret
xacquire
add
push
xlat
inc
push
cld
push
inc
into
pop
lock
idiv
dec
mov
mov
adc
cmp
cmp
pop
xlat
push
mov
rcl
inc
inc
mov
lret
mov
cmp
repnz
push
mov
and
rol
jb
mov
cltd
add
dec
mov
insl
out
fwait
push
int
add
push
cmc
cmp
adc
in
out
push
scas
movsb
inc
adc
adc
clc
imul
popa
mov
aas
jo
rcrl
out
push
adc
pop
lods
mov
lahf
idiv
cmp
pop
movsl
mov
insl
mov
or
in
and
mov
or
xchg
inc
pop
cs
mov
xchg
inc
jge
xchg
xor
std
addr16
jo
inc
mov
pop
pop
and
mov
fiaddl
xchg
pusha
mov
fiadds
sbb
movl
adc
jo
cmpsb
repnz
mov
lret
or
mov
mov
xchg
adc
mov
inc
ror
pop
test
lret
es
inc
fadds
jecxz
data16
dec
hlt
lret
xchg
shlb
mov
testb
cmp
test
mov
adc
jl
or
sbb
cwtl
xchg
mov
xor
hlt
scas
es
enter
in
je
add
and
mov
movsb
add
mov
stc
add
mov
push
aad
mov
pop
ficoml
or
jecxz
lahf
in
cmp
dec
inc
lds
popa
add
or
frstor
jle
mov
out
mov
xchg
pusha
iret
xchg
mov
inc
pop
cld
xlat
fisttpll
je
idivl
push
xor
push
or
sahf
push
ljmp
and
lret
mov
in
adc
pusha
shll
cmp
scas
adc
mov
mov
inc
xor
mov
dec
jg
pop
insb
jne
xor
or
mov
xchg
rcrl
jge
or
and
orb
sub
jnp
cmp
lret
inc
out
mov
sar
mov
xor
inc
mov
sub
loop
repnz
scas
inc
inc
mov
sbb
dec
fstpl
jge
fisubl
cmp
dec
mov
or
jle
xor
mov
add
lcall
jb
fwait
aad
xchg
sbb
cwtl
outsb
rorl
sub
push
inc
movsl
adc
popf
out
movsb
mov
xor
test
imul
das
xchg
das
jg
mov
xchg
and
add
test
xchg
pop
enter
daa
insb
ds
repnz
and
add
jle
test
jecxz
mov
mov
cmp
xchg
aad
aaa
sbb
insl
jo
rcrl
sub
movsl
cld
cwtl
gs
std
mov
add
xchg
leave
aad
xchg
cmp
popf
daa
pop
sbb
cmpsb
test
sbb
ds
pushf
out
pop
inc
lods
xchg
aaa
lods
inc
out
pop
sbb
pop
xor
mov
inc
mov
sbb
ficoml
call
out
mov
mov
dec
mov
cli
sahf
adc
add
sahf
mov
fldt
outsl
lods
mov
xor
sub
lret
dec
fidivl
xorb
inc
pop
xchg
jne
mov
arpl
shrl
into
imul
cmp
jle
jecxz
testb
jmp
sbb
and
pcmpgtw
rorl
ret
nop
aad
adc
cli
lea
iret
aas
jge
mov
stos
adcb
fsts
and
ficompl
imul
mov
mov
cmpsb
mov
cwtl
pusha
mov
icebp
mov
aad
xchg
adc
xlat
dec
sub
stc
mov
stos
das
andnps
mov
ret
lahf
mov
adc
xlat
fucomip
hlt
andb
test
mov
in
mov
pop
jge
popf
push
jl
cmp
mov
jmp
mov
pop
hlt
loope
ljmp
repz
xchg
mov
pop
xchg
sub
xchg
xchg
pushf
mov
lock
test
push
imul
push
scas
imul
std
xchg
sub
xor
dec
inc
jl
dec
inc
test
mov
testb
mov
fldl
push
push
xlat
rolb
xchg
daa
aam
add
ficompl
scas
add
test
int
pusha
das
test
idivl
inc
sbb
adc
pop
jns
es
pop
xchg
dec
inc
ret
pop
aam
dec
sbb
pop
mov
les
ds
mov
jnp
lods
rolb
push
test
push
sub
out
insl
sti
cmpsb
hlt
pop
xchg
daa
ja
loop
sub
pop
int3
xor
mov
sub
push
cmp
add
mov
bound
jp
fdivr
mov
inc
std
jg
xchg
jmp
xchg
outsb
lret
jnp
dec
cltd
ret
jae
add
lock
mov
sti
cmp
lret
jp
into
and
xrstors
shl
loopne
xor
mov
lahf
fcompp
and
imul
icebp
popf
push
and
sub
sub
push
push
sbb
mov
call
add
xchg
iret
or
subb
repz
mov
stos
es
ss
aam
pop
hlt
lahf
add
cmp
fsubrl
pop
cmp
aad
fcmovnu
jae
daa
pusha
jg
dec
xchg
les
xchg
dec
mov
dec
sbb
cmp
sbb
or
in
jge
jmp
jbe
jb
in
sbb
inc
movsb
dec
cmp
xor
jno
pop
lods
mov
nop
lods
ja
enter
push
fnstsw
jp
pushf
cmpsb
jecxz
les
out
hlt
push
xchg
sarb
popf
jb
aad
cmpl
pop
imul
in
inc
orl
xchg
xor
sub
pop
cmp
in
adc
jecxz
mov
scas
jno
sub
outsl
mov
clc
push
xchg
fs
out
sarb
shlb
int
stos
or
call
lods
das
xchg
lea
jle
jmp
jecxz
pop
sub
cmp
pop
sti
cmp
sti
cli
cmp
lret
mov
xchg
xor
lds
iret
cld
cmp
int3
or
hlt
jne
ss
jnp
cwtl
dec
test
pop
in
out
jle
mov
pop
mov
rcrl
lcall
or
in
in
hlt
xchg
mov
lret
jmp
jae
addb
mov
or
fcmovne
add
cltd
jo
pop
cwtl
sbb
lods
dec
pop
xchg
mov
add
add
dec
addr16
enter
push
outsb
imul
orb
imul
in
sbb
imulb
sbb
aad
jmp
or
pop
cwtl
sbb
into
dec
mov
mov
lcall
mov
xchg
adc
les
in
mov
mov
rorb
mov
into
sbb
imulb
dec
scas
decb
shlb
cmp
and
sub
inc
pop
adc
int3
dec
jle
mov
aaa
mov
inc
insl
or
jle
pop
ja
test
jmp
and
scas
and
clc
fisubrs
fcomps
dec
in
clc
jb
cmp
pop
sti
mov
lret
es
enter
insl
loope
imulb
fs
sub
in
negl
pop
dec
gs
mov
pushf
pushf
ss
loope
mov
push
lock
push
push
push
movsb
push
xor
mov
sub
imul
push
xchg
jb
ss
push
or
int3
pushf
dec
cltd
mov
ja
pop
add
dec
mov
inc
sub
push
out
mov
mov
mov
dec
and
arpl
js
or
cmp
adc
sbb
scas
popf
cmp
xchg
mov
es
data16
loope
mov
pop
lahf
outsb
mov
sbb
ret
andl
mov
xor
pusha
inc
jp
aam
and
xchg
jno
repnz
pop
imul
mov
enter
jno
fistl
lret
jbe
cmp
movsl
fmuls
and
daa
test
and
gs
aaa
shl
mov
cmpb
jae
dec
cmpsl
xor
push
arpl
iret
dec
je
pop
and
clc
pop
sahf
xchg
xor
sub
push
mov
dec
fimuls
rcrl
and
and
jge
inc
int
cmp
ljmp
lcall
xchg
jns
imul
dec
jmp
xchg
jge
mov
lock
mov
pop
addl
mov
movsb
xchg
popf
mov
cld
sub
je
mov
movsb
or
mov
mov
imul
xchg
xor
xchg
cmp
test
xchg
icebp
xchg
dec
mov
imul
je
cmpsl
pop
int
in
dec
loop
pop
addb
push
int
inc
outsl
xchg
adc
hlt
or
mulb
jl
adc
pusha
push
cmp
in
push
or
imul
das
bound
dec
mov
pop
bound
arpl
adc
into
stc
push
xchg
sbb
mov
out
pop
xchg
outsb
outsb
rcll
sbb
push
push
push
jbe
pop
jno
sub
mov
add
mov
pop
mov
pop
cli
mov
ret
shll
jle
je
push
add
mov
xchg
add
jle
fs
mov
ds
es
jae
push
add
xchg
repnz
lret
sbb
pop
shl
insl
add
inc
imul
inc
inc
cmp
adc
loop
stos
jbe
push
mov
inc
jl
push
scas
ret
in
push
ss
xchg
test
mov
es
push
outsl
inc
cmpsl
pop
xchg
scas
pop
adcl
jl
dec
gs
add
mov
mov
pop
out
xchg
pushl
ss
jge
mov
or
mov
movb
mov
mov
and
mov
pop
mov
enter
jmp
adcb
notb
lret
and
fisttpl
sbb
int3
dec
std
insb
inc
ret
pusha
cld
rcl
ljmp
imull
push
pop
bswap
add
in
cltd
inc
mov
hlt
jno
pop
orl
pop
jge
jg
xchg
out
fwait
pop
fidivrl
xlat
lcall
xchg
xor
cmp
cmp
sbb
imul
mov
mov
inc
mov
mov
mov
lret
imul
jno
mov
mov
mov
xor
sbb
inc
mov
mov
jle
daa
mov
test
adc
scas
jp
lock
pop
clc
ljmp
notb
sbb
push
cwtl
xorb
je
xchg
dec
push
ljmp
jns
pop
shrb
ds
push
jle
add
je
repnz
push
pop
fidivl
call
outsb
sbb
cmpsl
ja
adc
xor
push
sbb
jle
mov
dec
mov
push
out
repnz
cmp
repz
icebp
jne
pop
ds
xor
mov
lock
in
loope
or
dec
or
sbb
ret
push
adc
nop
data16
je
add
push
or
xchg
mov
sbb
imul
cmp
mov
decl
push
dec
dec
stos
scas
adc
inc
push
outsb
push
pop
pushf
pop
xor
and
xchg
mov
clc
pop
cmpsb
rolb
sub
cmp
outsl
fisttps
ljmp
mov
adc
nop
xorb
dec
insb
ds
outsl
xchg
mov
xor
idivb
fcoml
mov
xor
cmc
push
out
sahf
push
and
rcl
mov
lods
xor
movsb
cwtl
imul
nop
sbb
mov
in
shl
je
lahf
mov
in
or
xor
movsl
sbbb
cli
mov
gs
dec
dec
lret
les
push
outsb
mov
outsb
add
ss
imul
dec
xor
clc
and
mov
std
loop
push
lea
mov
arpl
loope
mov
sub
addl
int
dec
loop
sbb
fdivp
jp
enter
lahf
loope
fsubl
jl
lret
mov
mov
fists
push
jp
pop
sahf
fisubs
lods
or
scas
jns
mov
sub
inc
and
and
xchg
adc
loop
in
dec
pop
outsl
icebp
es
idivb
cmp
sub
mov
push
adc
es
stc
and
mov
aas
sbb
cmp
cmp
mov
mov
jne
addr16
inc
adc
sbb
and
sub
ljmp
inc
addr16
in
sbb
test
xlat
pop
xchg
dec
aam
mov
orb
cwtl
int
xor
inc
jp
jno
xor
ja
pop
adc
xchg
xchg
xchg
jge
sti
adc
movsl
lock
jno
jg
mov
inc
xchg
outsb
dec
sub
dec
xor
mov
repz
adc
cmp
adc
inc
or
sbb
test
sbb
ror
sti
xorl
mov
mov
jmp
sub
cld
out
cmp
imul
into
cmp
sbb
stos
scas
lea
mov
in
ja
xlat
and
test
pop
adc
push
push
mov
test
fs
push
push
mov
sub
jmp
repz
fucomp
cmp
leave
mov
jle
psadbw
jo
aad
sub
mov
push
or
stos
sarl
xchg
xchg
sub
pop
mov
xor
mov
pusha
sub
xor
gs
lock
arpl
pushf
test
cmc
sbb
int
je
dec
pop
or
sbb
fcompl
mov
inc
fildl
xor
aaa
and
in
push
add
pop
loopne
push
in
jnp
aad
or
scas
adc
mov
addr16
push
movsl
arpl
jle
push
fiaddl
iret
xchg
das
cmp
or
popa
pop
xor
add
mov
outsb
pop
sbb
and
cmp
sbb
and
hlt
mov
xlat
jle
mov
lock
lret
add
test
mov
push
sub
fs
pop
push
incb
ljmp
cwtl
pop
mov
rcrl
add
loop
xchg
fmulp
mov
lds
dec
inc
add
sbb
scas
jle
andb
add
inc
out
jl
inc
cmp
lahf
or
insl
xor
aam
mov
je
ret
jp
das
lcall
scas
idivb
mov
xchg
xchg
push
xor
lock
sub
scas
xchg
punpckhdq
nop
lds
icebp
or
iret
dec
cld
pop
push
jmp
sub
push
and
cmp
dec
fstpt
cmovs
xor
scas
xlat
hlt
mov
ljmp
cmp
and
test
adc
gs
xchg
push
gs
dec
nop
aad
pop
mov
mov
mov
jle
fadds
in
sbb
js
sarl
cld
lock
lods
les
fcmovnbe
mov
call
xor
push
fwait
mov
pop
mov
loopne
xchg
push
sahf
clc
lock
repnz
or
inc
lret
pop
adc
daa
add
ret
fs
cmp
ret
sbb
mov
push
shll
xchg
pop
and
mov
adc
add
fsts
push
xchg
stos
mov
or
xor
add
sub
adc
shlb
sub
and
adcb
and
dec
mov
sbb
cmpsb
nop
sahf
js
mov
jmp
sbb
xchg
xchg
cmp
je
frstor
dec
roll
cmp
jp
rorl
sbb
arpl
fwait
mov
sbb
mov
pop
cmp
std
orb
add
mov
aad
jo
bound
inc
xor
xchg
icebp
imul
jne
jg
jecxz
adc
call
adc
xchg
lods
or
es
test
sub
nopw
lret
xchg
jb
stc
or
fcompl
mov
cmpsl
les
add
in
jecxz
jge
xor
out
inc
jae
and
stc
negl
dec
fsubs
xlat
call
pop
push
popa
fnsave
mov
test
subb
dec
orl
loope
aas
repz
int
add
mov
add
pop
mov
iret
into
lss
push
mov
flds
cli
popf
cwtl
lods
movsb
push
loope
stos
xor
pusha
lcall
mov
or
jbe
scas
dec
incb
int
outsb
pushf
in
inc
inc
pop
insl
dec
mov
stos
lret
shll
aad
inc
sti
mov
in
cli
js
or
scas
fsubr
add
enter
subl
fnstenv
xchg
xor
sub
mov
jecxz
outsb
pusha
adc
into
das
push
sub
mov
cltd
rcll
negl
cmpsl
sub
and
dec
int
dec
xchg
es
xchg
fistpll
cmp
enter
movsb
xor
and
test
scas
fdivrl
jo
sub
pop
lfs
shll
mov
ret
test
jl
in
push
cmpsl
jl
pop
or
jmp
hlt
sti
cwtl
xchg
dec
inc
mov
cmc
cmp
popf
sub
xchg
rcr
or
leave
sbb
and
shlb
mov
adc
pushf
push
je
mov
rol
cmp
in
sub
jne
sbb
cli
mov
dec
out
push
xchg
jge
and
push
cvtpi2ps
imul
jg
and
mov
arpl
pop
push
sahf
icebp
popw
or
lea
movsb
dec
stc
fistl
lahf
popf
loope
lret
mov
pop
aam
xchg
add
inc
push
bound
iret
mov
mov
or
push
mov
js
cmp
xchg
pop
test
repz
mov
inc
inc
or
in
jb
inc
outsb
cmp
add
sbb
movsl
les
cmp
add
mov
xor
rcll
and
cmpsb
in
mov
xchg
xchg
adc
out
jge
dec
test
mov
push
add
inc
cli
jnp
jnp
fs
out
mov
and
std
cmp
fsubl
insb
and
push
jmp
sub
bnd
out
mov
call
jb
push
xchg
pusha
lds
xor
orl
cmp
aaa
xor
pop
repnz
cmpsl
ret
xchg
mov
or
pop
push
cmpsb
pause
lods
iret
cmpsl
pop
bound
inc
mov
xchg
mov
loope
sarb
jle
xchg
jns
ss
xchg
xchg
and
out
lds
movsb
mov
sub
cli
push
sbb
mov
jb
mov
sarl
adc
icebp
fwait
addl
adc
xor
fcmovnu
pop
std
mov
jnp
dec
or
mov
cmp
sub
sub
xchg
pop
dec
lods
push
iret
cmp
xor
repnz
movb
out
ret
repnz
scas
dec
dec
adc
mov
jmp
lds
xchg
cltd
dec
dec
xor
push
lret
mov
leave
xchg
scas
pop
loope
imul
popa
std
mov
das
push
je
test
js
add
fcoml
in
adc
pop
add
cwtl
loope
pushf
mov
push
adc
push
add
cld
jno
push
mov
iret
cmp
lods
lds
stos
orb
push
pop
inc
repnz
sub
cs
enter
fldl
xchg
dec
cwtl
add
sbb
sub
jb
cmpsb
in
push
js
stos
je
mov
jl
fdivl
std
xlat
push
mov
cmp
pop
stc
cmp
add
lods
push
mov
jp
lahf
mov
mov
imul
aaa
cmp
aad
mov
mov
mov
aad
and
pop
int
mov
insl
cmp
mov
pushf
scas
in
imul
imul
jo
sbb
nop
or
ja
les
push
sbb
jg
jmp
inc
dec
xchg
je
adc
sub
aas
sub
fistps
jae
cmp
inc
mov
fucomip
cmc
fwait
inc
out
mov
mov
test
pusha
mov
scas
or
jb
je
mov
pop
lods
nop
add
adc
xchg
pop
lahf
xor
sahf
nop
cmp
out
add
test
idivb
outsb
pop
ror
xchg
int3
inc
test
xor
inc
in
xor
ja
adc
testb
sbb
je
scas
test
xor
sub
call
data16
adc
mov
lods
push
xlat
leave
sbb
xor
out
pop
push
pop
jl
mov
stos
ds
sbb
xchg
rorl
leave
adc
cmp
mov
sbb
dec
rcrl
jb
negl
leave
fnstenv
test
add
mov
pop
or
outsb
push
add
sub
jns
mov
pop
in
adc
mov
outsb
pushf
dec
sahf
mov
sub
test
lret
rcrl
mov
loopne
push
mov
lds
ljmp
rcr
push
add
lret
icebp
ljmp
mov
outsl
adc
jbe
xchg
leave
nop
dec
lock
sub
pmaxsw
adc
xor
dec
push
inc
repz
rol
mov
push
xchg
mov
je
inc
jne
jmp
bound
ret
arpl
push
int
adc
xor
sub
pop
test
mov
adc
pushf
jle
sti
gs
adc
dec
and
jnp
out
push
mov
jno
ret
ret
adc
add
push
sbb
mov
addr16
rcll
and
xor
pushf
push
xchg
lret
jmp
lcall
push
nop
adc
iret
test
or
mov
mov
push
ja
lods
lds
dec
aam
inc
xlat
mov
stos
xor
loop
push
cmpb
loop
stos
push
fs
mov
cltd
js
inc
lods
cmpsb
arpl
sub
mov
std
stos
inc
es
mov
outsl
out
test
stos
fs
or
or
popf
jb
xchg
xchg
and
cmp
cmpsb
push
push
bnd
pushf
test
clc
mov
mov
cmpsb
mov
mov
stc
test
dec
arpl
arpl
mov
lock
or
ss
popf
negb
ret
push
outsb
mov
nop
mov
add
mov
addr16
scas
stc
dec
add
lea
stos
aas
mov
xchg
not
negb
push
dec
push
outsl
scas
and
leave
inc
pop
movsl
mov
loopne
stos
or
inc
push
arpl
mov
push
push
loope
cmp
sub
sbb
sub
or
add
pop
xchg
mov
cmp
test
lret
addb
dec
aad
pushf
cmp
call
jl
loopne
es
pop
adcb
lock
imul
enter
sub
dec
icebp
mov
xlat
dec
sub
mov
mov
and
iret
pop
sub
jbe
xchg
mov
addb
mov
push
in
or
dec
call
push
cmc
sub
add
arpl
arpl
mov
sbb
sahf
addr16
pop
jg
sahf
aaa
mov
pusha
jmp
test
mov
test
push
out
test
cmpsl
add
xchg
jo
dec
mov
lods
mov
lret
inc
imull
pop
xchg
sub
pop
fstp
ljmp
dec
hlt
ds
scas
pop
jns
add
mov
mov
pop
lds
or
and
sbb
mov
shr
add
jecxz
std
xor
stos
mov
inc
lcall
lods
iret
inc
lcall
adc
je
data16
loop
shl
cld
into
mov
or
jno
imul
xor
dec
enter
popa
cmp
jns
loop
imull
xchg
xchg
mov
rcll
xchg
jns
test
cwtl
sbb
in
js
xchg
pusha
sahf
pop
cmp
mov
aas
sub
jnp
fst
fcomps
aaa
cmpsl
inc
shlb
lea
xor
mov
pop
cld
imul
lock
inc
push
int3
jno
xchg
push
mov
lods
in
fldcw
in
icebp
xchg
sti
in
push
sub
adc
rcl
adc
jg
pop
or
cmp
std
xchg
fcmovnbe
lods
stos
pop
adc
loope
push
xchg
xchg
fnstenv
fs
jbe
push
ss
dec
fsubrl
std
add
movsb
dec
xchg
jo
mov
xchg
out
sub
into
cmp
dec
jo
icebp
pop
sti
sbbb
cmp
in
lods
gs
std
and
gs
mov
fdiv
imul
cld
and
jge
mov
sbb
push
inc
sti
jno
mov
test
aad
sub
aam
mov
sbb
addl
repnz
push
mov
lahf
nop
xchg
enter
jne
sub
sbb
data16
shlb
cs
cmp
fld
and
cmp
and
mov
imul
jns
mov
les
stos
jp
jno
psubb
lea
cld
test
inc
js
fs
je
out
out
pop
imul
out
imul
jmp
and
jo
mov
xchg
sub
fldt
rclb
adc
add
into
jb
and
fs
lds
xchg
push
mov
cmpsl
aaa
push
loop
pop
repnz
roll
bound
mov
push
ds
xchg
and
mov
scas
mov
sbb
insb
mov
add
and
cltd
int3
pop
jne
xchg
add
push
cmp
je
sub
out
add
xor
jb
stc
or
xlat
sahf
js
inc
jecxz
cmp
jbe
je
jecxz
xchg
push
lret
or
mov
ljmp
shll
outsl
pop
rcr
pusha
movsl
imul
cmp
stos
and
lds
cmpsl
pop
imul
clc
sbb
push
pop
scas
push
test
sub
mov
shll
add
sbb
shll
rcrl
movsb
or
in
out
pop
je
mov
adcl
or
iret
dec
cs
rcrl
pop
push
pop
xlat
mov
jo
mov
fsubp
sub
add
dec
dec
arpl
rorb
pop
push
jle
test
fiadds
xor
lret
dec
sbb
jns
fildll
scas
and
movsl
jns
lock
xor
clc
fildl
dec
call
dec
lahf
jl
imul
xor
dec
push
mov
out
xchg
jecxz
mov
sbb
push
jo
ss
shl
mov
loopne
rorb
inc
or
mov
test
imul
push
aam
jne
iret
mov
dec
or
mov
dec
leave
push
cmp
into
insb
push
sti
pop
dec
fs
fwait
push
or
mov
xchg
lret
sbb
rcll
mov
sbb
mov
test
jg
jae
or
mov
add
mov
insl
pop
enter
jb
shrl
inc
les
dec
mov
adc
jecxz
movsb
shll
in
lock
cmp
pushf
mov
test
fisubs
dec
and
adc
mov
cmp
cld
sti
sbb
and
xchg
jae
out
push
mov
cmp
mov
xor
sbb
cmp
adc
add
mov
mov
aam
popa
or
dec
jb
dec
mov
scas
push
and
fs
nop
fstpt
cmp
push
sub
push
pusha
lret
jmp
cmp
je
call
inc
je
pop
subb
push
std
xchg
mov
mov
push
test
jle
mov
idivb
fldl
orb
loope
jno
sahf
push
xchg
sub
in
jo
mov
fwait
jmp
aaa
mov
inc
sbb
arpl
pushf
ss
and
fldt
jb
cmc
inc
xchg
int
add
mov
aas
into
jge
lahf
xchg
sub
xchg
or
out
xchg
call
jbe
push
les
or
dec
xchg
out
popa
push
mov
hlt
dec
lahf
shrb
and
outsb
jne
dec
lods
lods
xchg
cmp
fstps
rclb
dec
xchg
sbb
mov
xchg
fistpl
cmp
enter
lahf
inc
mov
roll
rep
pop
in
or
or
mov
mov
cwtl
mov
int3
loopne
inc
xor
dec
ss
inc
xor
jecxz
loop
jle
call
fs
mov
loopne
nop
xlat
inc
dec
and
lcall
gs
jbe
ret
sbb
dec
adc
pop
ss
mov
pop
or
lods
push
pop
push
ficomps
inc
in
nop
push
pop
lock
inc
push
push
das
repnz
movsb
outsl
jns
insb
std
repz
in
mov
xchg
sub
loope
mov
inc
sbb
xor
ret
push
mov
orb
call
jns
out
enter
push
sub
aaa
jo
xor
sbb
sub
stos
sub
xor
xor
pop
popa
xchg
jecxz
xchg
sub
jg
jp
es
push
outsb
movsl
aam
addr16
xor
jae
or
xchg
nop
mov
fwait
lea
out
fdivrp
repz
hlt
mov
cmpsb
inc
ss
dec
popf
jecxz
pop
mov
push
pop
fcompl
ficoml
sub
loop
mov
push
ror
adc
outsl
push
mov
fistpl
pop
xorb
lahf
pop
jno
push
push
mov
xchg
sbb
pop
jno
or
push
and
inc
sbb
xchg
mov
mov
add
sub
xor
test
cmpsb
in
adc
test
pop
in
push
cmp
popf
adc
pop
add
dec
roll
in
jle
sub
dec
std
mov
add
icebp
adc
mov
sub
aad
lahf
sahf
scas
dec
bound
rorl
int3
mov
pop
sub
dec
jge
add
pop
adc
push
mulb
addb
ljmp
xor
push
int
sbb
loop
pusha
dec
mov
out
mov
sbb
daa
test
mov
ss
jns
cmp
push
sub
or
insb
jno
mov
nop
fs
out
mov
adc
sbb
imul
mov
fnsave
fwait
popf
push
fdivs
mov
pop
aam
sbb
xchg
repz
jg
ss
std
push
cmp
sub
xchg
adc
subb
push
lods
in
fnstenv
push
mov
gs
fsubrl
ljmp
lahf
xor
cmpsb
push
add
ja
call
xchg
inc
cmpsl
pop
jg
xchg
dec
pop
arpl
dec
mov
xchg
mov
mov
mov
dec
xchg
mov
in
lods
lods
test
push
arpl
xchg
mov
and
mov
mov
push
xor
nop
mov
jmp
mov
add
sub
lods
pop
mov
testb
mov
jns
sarl
push
pop
jno
sar
add
sar
mulb
jo
das
adc
imul
repz
sub
inc
jae
fstpl
dec
int3
imul
mov
xchg
jnp
loope
dec
popf
or
aad
repnz
xchg
testb
cmpsb
cmp
inc
imul
mov
push
lods
adc
and
cmpsl
cwtl
xor
les
aad
xor
sub
add
out
das
pop
daa
lahf
stos
mov
stc
in
in
call
and
jae
popf
pop
cmp
mov
inc
sbb
lret
lods
sahf
lods
imul
push
hlt
pop
mov
or
scas
dec
fdivr
dec
add
nop
cmp
cli
addb
adc
fmull
in
sbb
adc
es
jns
test
shl
xchg
mov
pop
mov
xchg
push
adcb
rorb
xor
pop
sbb
add
add
jne
fnstcw
loop
xor
lret
push
jg
jne
enter
stc
sub
and
inc
int3
mov
push
insl
dec
mov
push
add
push
mov
cmpsl
imul
jo
inc
loop
data16
and
xor
xor
pop
or
rcrl
unpckhps
int
mov
js
inc
pop
gs
js
loope
rorb
test
cmp
jae
ja
bound
fmull
mov
jl
jle
sbb
es
roll
movsb
lret
movsl
mov
xchg
aam
inc
lods
inc
mov
sbb
fstpl
sub
inc
aaa
sbb
cli
jecxz
mov
jo
add
jnp
hlt
jmp
xor
mov
mov
lret
out
jmp
aad
mov
call
jl
clc
xorb
dec
sti
push
popf
jo
mov
or
push
cwtl
test
adc
xlat
aad
or
pand
xchg
inc
xlat
inc
xchg
call
movsb
jae
sbb
daa
mov
and
imull
arpl
xchg
or
jge
ja
mov
pop
jns
lods
pop
adc
mov
cli
loopne
cwtl
jg
mov
push
cmp
aad
hlt
sbb
lock
dec
pop
outsb
mov
daa
inc
jne
xchg
sub
pop
rcrl
out
in
loopne
sub
mov
lret
cli
pop
incb
cmp
fmulp
mov
std
mov
and
daa
iret
mov
int
xor
dec
enter
sbb
movsl
inc
xchg
cmpsl
jmp
dec
lcall
lret
adc
mov
mov
add
add
mov
inc
sub
push
dec
cmp
fcmovne
cli
outsb
bound
push
dec
mov
inc
mov
cwtl
pop
popf
ret
aaa
inc
jne
sbb
jno
or
dec
neg
sub
sbb
stos
pusha
dec
jge
aas
xor
mov
xor
fbld
push
stos
jl
cmp
mov
rcr
add
and
cmp
push
mov
pop
repnz
jb
ss
mov
xchg
scas
pushf
jp
and
int3
pop
ret
lret
repnz
out
sbb
sti
inc
pop
nop
cmp
leave
sbb
lods
jnp
lcall
filds
aad
fsubrl
mov
fstpt
and
pusha
sub
aad
nop
push
and
pop
or
cmp
xchg
pop
jb
mov
mov
sbb
inc
nop
push
pop
push
pop
cmpsb
aad
cbtw
scas
pop
add
dec
loop
ljmp
inc
mov
stos
notb
sub
rcrb
jmp
mov
push
lcall
jecxz
incb
lcall
jno
cmpsl
mov
stc
repnz
pop
stc
jbe
cltd
andl
adc
inc
scas
dec
and
mov
fwait
push
outsb
test
sub
jbe
mov
cwtl
push
lret
or
out
mov
xor
xchg
sub
jmp
test
adc
pop
mov
mov
pop
pop
sub
clc
outsb
xchg
mov
dec
or
fldt
sub
ret
add
pop
ja
mov
data16
mov
arpl
mov
mov
jmp
xchg
movsb
aad
repnz
mov
pop
jmp
sbb
popf
loopne
xchg
outsl
aad
clc
enter
cmp
ja
xchg
fs
inc
jmp
mov
cmp
ret
popa
lock
out
movsl
inc
inc
mov
repnz
loopne
lods
or
scas
arpl
clc
sub
push
mov
and
cmp
fldenv
pop
push
cmovle
sar
sbb
cmpsl
popa
mov
outsb
xor
jge
mov
cmpsl
mov
pop
adc
or
ja
mov
push
sahf
fucomi
fs
mov
dec
out
adc
test
divl
inc
mov
aad
dec
ss
cli
out
jg
scas
jmp
sub
push
sbb
mov
pop
and
jmp
add
mov
cmp
stos
dec
sbbl
hlt
pusha
mov
xchg
das
jb
fdivrs
cltd
push
cmp
pop
fbld
lds
inc
in
frstor
scas
mov
not
mov
scas
cmp
xor
in
int
xor
mov
inc
scas
mov
mov
pop
pop
sbb
mov
add
pop
sbb
test
out
add
sti
dec
sbb
daa
or
jo
xor
mov
dec
push
inc
roll
pop
inc
sbb
cld
adc
and
xchg
mov
sub
mov
add
mov
in
icebp
push
vphaddubq
jecxz
cli
xor
xchg
push
test
mov
sbb
lods
loope
scas
outsb
and
mov
lret
popa
pushf
sub
mov
or
lods
adc
add
mov
data16
lods
lods
push
mov
shll
pop
aam
jo
or
xchg
pop
pushf
and
jmp
add
cltd
mov
out
data16
pop
cmpsl
mov
scas
inc
pop
adc
sbb
sbb
adcl
mov
loope
sarb
lret
int3
mov
and
or
les
int3
jg
data16
mov
push
pop
rcrl
sub
sub
and
sub
out
cmpsl
jno
adc
xor
mov
lahf
fucomip
and
in
mov
cmp
cmp
xor
push
inc
ljmp
mov
cmp
mov
rcrb
adc
test
mov
sbb
sbbb
and
ja
dec
xor
in
lock
inc
int3
add
or
int
mov
mov
mov
mov
int3
jns
xchg
stos
or
mov
xor
sbb
leave
test
add
mov
in
mov
mov
test
test
fisttpll
aad
adc
in
sbb
pop
jnp
sbb
int
push
cld
jno
fs
or
out
test
test
ret
cld
xchg
sbb
and
jp
mov
inc
adc
pop
or
fdivp
pusha
adc
xor
loop
je
movsl
xchg
stc
lret
jae
mov
push
sbb
dec
sbb
into
mov
push
dec
or
imul
es
xor
inc
adc
push
mov
jl
mov
sbb
and
fxam
pop
inc
or
ret
dec
xchg
mov
dec
movsb
lods
dec
mov
xor
cmp
clc
push
loope
in
imul
mov
hlt
xor
popa
mov
dec
mov
jo
lods
mov
fcoml
cltd
lods
sub
js
xchg
in
pusha
mov
out
dec
jno
xchg
add
dec
mov
cmp
sbb
jo
adc
cmp
add
xchg
mov
scas
mov
ss
xor
jecxz
push
imul
and
push
or
sbb
mov
js
cld
std
mov
jno
test
insb
in
pop
rcrb
sar
adc
xchg
add
push
adc
mov
add
cs
mov
insb
mov
push
bound
push
dec
push
and
mov
lahf
test
or
aaa
xor
fldl2e
jne
lret
pushf
jg
cld
lret
dec
cld
push
fistpll
push
and
out
gs
repnz
ss
sbb
push
fadds
mov
ret
ss
jnp
cmp
cmp
add
mov
jns
jno
inc
xchg
xor
mov
dec
data16
loopne
in
repz
xchg
imul
adc
xor
jno
ficomps
and
dec
repz
dec
cmp
hlt
les
pop
dec
mov
xchg
repz
aas
rcll
sub
push
movb
xchg
dec
xchg
cmc
jle
movsl
outsl
mov
repnz
dec
xchg
test
adc
cmp
cmp
nop
mov
xlat
lds
addb
dec
test
ds
push
and
inc
add
movsb
sti
xor
mov
jecxz
cmp
xor
imul
fwait
outsb
and
lock
inc
popa
jb
test
cmp
mov
and
mov
cli
jbe
dec
aam
pusha
cmp
test
jg
vpsubsb
mov
xor
or
clc
cltd
adc
mov
aas
jae
pop
lea
sbb
leave
ficompl
mov
das
push
push
test
fcomps
int
shr
push
jae
cmp
rorb
ljmp
push
mov
cmp
mov
inc
push
lret
fstl
xchg
das
xchg
leave
cmp
cli
cmp
stc
jmp
push
dec
subl
pop
push
adc
testb
popf
pop
sbbl
sbb
or
jecxz
out
out
enter
add
int
into
dec
mov
cmpsl
fnstcw
mov
push
or
scas
xor
jae
push
sti
lcall
jecxz
mov
xchg
jl
cmp
adc
loopne
push
and
xchg
mov
push
lcall
pop
xor
testl
mov
sarb
mov
insb
and
cs
sub
inc
cltd
mov
jne
jb
adcb
pop
test
add
out
xchg
and
out
fisttpl
imul
push
lds
lea
mov
pop
push
aas
dec
cmp
cmc
add
lods
cld
lods
mov
jae
sbb
ficoml
inc
cmc
mov
dec
stc
cmp
movb
icebp
addl
sbb
inc
dec
xchg
cmc
mov
sub
and
push
js
in
and
cmp
dec
xchg
sbb
mov
arpl
pop
cmp
stos
movsb
rcr
call
jl
loop
scas
mov
push
fbstp
pop
negl
inc
pop
and
out
jle
mov
sub
add
jmp
jb
lcall
aam
mov
dec
mov
xchg
in
inc
lods
push
push
sbb
inc
mov
stos
pop
mov
inc
out
or
mov
movsl
add
inc
pop
and
or
sub
xchg
insl
inc
ja
shll
lds
sbb
repz
mov
dec
fwait
adc
ret
addl
pop
pop
xchg
outsl
cwtl
es
rcll
ret
out
mov
jae
or
cmp
push
push
iret
mov
inc
xchg
jns
sbb
adc
mov
xchg
and
pop
push
lcall
mov
mov
mov
add
and
cmpsb
cmp
loope
out
in
ja
adc
mov
sbb
popa
shr
ds
pop
push
xchg
add
lock
fdivl
adc
lods
shlb
lret
jns
push
sbb
jmp
cmp
xchg
xlat
push
loopne
mov
fs
ret
pusha
mov
gs
imul
jle
cmp
mov
dec
leave
test
sbb
ja
cs
inc
in
push
nop
rclb
and
lods
icebp
or
sbb
adc
fldcw
jne
push
xor
or
cmpsb
mov
fs
ret
movsl
fwait
sub
dec
jnp
repz
test
mov
pop
jp
mov
dec
jno
sub
push
cmpsl
pop
sbb
scas
out
pusha
add
dec
pushf
jg
shll
pushf
add
stc
push
scas
lea
roll
inc
lret
pop
rorl
dec
leave
mov
xor
sbbb
add
jae
stos
jp
adc
std
jge
js
jl
out
add
mov
and
push
cmp
in
idiv
push
jbe
cmp
xlat
mov
jno
das
lcall
pop
test
sbb
std
adc
pop
out
inc
fs
dec
pop
fdivl
repnz
stos
leave
xor
add
mov
mov
dec
js
adc
in
sbb
subb
pop
push
sub
shll
test
mov
gs
call
inc
adc
dec
iret
cmc
add
cld
pop
aas
and
lock
pop
mov
xor
cmp
in
or
mov
pop
fsub
scas
call
dec
dec
cld
sar
xchg
je
mov
adc
add
adc
jns
push
adc
mov
ds
sbbl
mov
pop
fcomp
fsubs
rclb
push
ret
int3
cmpsb
lds
pop
ss
mov
mov
fwait
popa
pop
stc
inc
jp
fcomp
xchg
pusha
cwtl
pop
loopne
pushf
push
aad
pop
mov
stc
adc
sbb
fcmove
cs
push
lahf
xor
in
and
xor
sbb
cmpsl
or
mov
sbb
push
mov
mov
fs
cmp
dec
jmp
sbb
aaa
test
jne
xor
add
arpl
imul
jno
addb
out
fucom
cmp
mov
dec
leave
sti
lock
inc
mov
or
and
mfence
repz
std
inc
jne
jge
mov
mov
es
push
call
rorb
pop
cld
dec
push
and
or
fstl
mov
into
lods
mov
js
push
lret
js
stos
lods
sub
xchg
cmp
adc
divl
sti
mov
pop
lods
in
fs
and
test
mov
cmp
dec
daa
adc
std
scas
in
lea
cwtl
dec
ret
sub
mov
push
jl
xor
bound
or
clc
out
stos
and
aam
jge
loop
inc
lds
call
dec
xchg
int3
lds
imul
cli
in
lods
xor
out
stc
jl
incl
sbb
cli
push
inc
and
xchg
popa
jl
push
stos
insb
ret
cmp
shrb
mov
mov
popf
loope
aas
push
movsb
push
data16
mov
sti
loope
add
jns
mov
das
loop
xor
pusha
pop
xchg
xor
xchg
pop
mov
mov
ja
roll
gs
lret
arpl
adc
xchg
inc
rep
xchg
loopne
pop
in
aaa
dec
outsl
push
and
inc
in
adc
push
xchg
mov
jge
xchg
int
popl
or
sbbl
cli
and
mov
scas
test
fs
jnp
sti
insl
test
lret
mov
pop
mov
inc
loop
lret
pusha
cmpsb
inc
mov
push
sahf
xor
pop
xchg
mov
push
fmuls
movsl
and
push
xchg
push
xor
sbb
nop
dec
pop
jb
cwtl
cmp
push
das
cmp
fxch
cmp
mov
mov
jp
popa
jge
movsb
sarl
nop
dec
adcl
dec
test
cmpb
rcrl
xchg
test
lcall
push
imul
sbb
jg
and
mov
mov
and
push
nop
xor
ss
cmp
mov
xchg
icebp
push
mov
add
add
and
push
out
repnz
dec
mov
int
lret
cld
or
daa
add
mov
cmpsb
xlat
push
dec
mov
sub
sub
fcomip
cmc
or
lret
icebp
std
xchg
lods
adc
movsl
mov
mov
ss
or
cli
push
bound
enter
lcall
testb
pop
sub
xorl
lds
mov
adc
inc
mov
imulb
mov
ja
lahf
into
mov
sub
aas
lahf
mov
xchg
pop
jge
jge
adc
in
cld
cmp
test
xor
xlat
adc
imul
xor
rolb
xchg
push
cmp
jbe
cmpsl
push
adc
xor
sbb
decb
pop
jl
movb
scas
fcmovnbe
jo
xor
mov
xchg
and
call
xchg
fsubs
xlat
fisubrs
pop
outsl
xor
ret
adc
mov
lods
pop
lods
test
out
inc
add
add
push
xor
out
pop
xchg
push
mov
mov
int
xor
mov
xor
out
outsl
xchg
dec
cmp
imul
inc
out
mov
fildl
and
hlt
add
inc
add
lret
cwtl
xchg
call
sbb
xor
shlb
push
or
mov
in
xchg
sub
mov
adc
dec
cli
xor
push
outsl
mov
xor
sbb
or
jmp
outsl
xor
adc
rcrl
xchg
ljmp
sbb
jg
push
mov
nop
into
jbe
xchg
mov
jle
lcall
mov
popa
fnstenv
sahf
les
pushl
pop
and
shlb
aaa
js
and
jbe
mov
fsubrs
add
int3
fwait
out
inc
sti
sub
inc
inc
xchg
or
popf
std
or
sub
jmp
pop
xchg
cwtl
ss
push
rorb
movsb
fmulp
pop
xchg
mov
xchg
and
dec
push
xchg
push
or
xlat
mov
xchg
push
mov
rorb
cmpsl
inc
xchg
and
inc
cwtl
dec
lahf
andb
aaa
outsl
sti
adc
insl
popa
cmp
cmp
dec
pop
xor
xor
cld
outsb
push
cmc
jg
adc
push
push
int
push
dec
push
mov
call
xchg
je
lock
rorl
jns
add
jp
data16
repz
and
jnp
jno
sub
leave
repz
dec
inc
lea
fdivrs
call
mov
ljmp
adc
add
sarb
ljmp
jae
add
outsb
pop
inc
xor
dec
xchg
inc
js
movsb
adc
ljmp
cmp
mov
fs
pop
add
jg
stos
int
sbb
lods
push
imul
lods
sub
gs
cld
xchg
cli
mov
pop
stos
fcmove
outsl
cmp
test
mov
lods
cmp
jge
sub
loop
mov
popf
pusha
add
imulb
pushf
movsl
xchg
cmp
push
addl
cltd
mov
fbld
xor
lret
loopne
ud0
xchg
pop
cmpb
popf
pop
jno
jg
pop
ret
in
xchg
pop
leave
nop
xor
sbb
lret
cmp
ja
out
jecxz
js
xchg
pop
mov
xchg
paddsb
xchg
aas
mov
aas
push
or
mov
ljmp
loopne
sar
xor
adc
insb
add
inc
ret
andb
cmp
jns
in
divl
xor
ret
out
jl
and
ficoms
pop
sbb
or
jmp
add
dec
jbe
dec
lahf
jns
mov
test
cmpsl
jne
dec
push
adc
lock
inc
pop
cltd
xchg
insb
jbe
movl
mov
dec
sbb
jb
inc
scas
cmc
ss
bswap
and
xchg
lahf
mov
and
pop
cltd
std
and
test
jg
inc
jecxz
xchg
push
arpl
sar
dec
in
or
inc
mov
scas
xchg
xchg
fldt
call
stos
iret
cs
hlt
adc
jp
sub
arpl
incb
popf
sub
push
mov
dec
rcl
dec
sbbb
out
jp
dec
stos
leave
popa
movsl
jg
scas
jnp
adcl
int
outsb
faddl
imul
push
pop
enter
sbb
in
jae
mov
lahf
rolb
mov
cmp
test
jecxz
mov
push
mov
xor
mov
inc
cmp
mov
out
insb
stos
dec
pop
fldl
inc
ret
gs
dec
fcomip
cmp
push
push
cmpsl
cmpsb
add
push
popa
fstpl
mulb
je
test
loop
inc
fs
ficoms
lret
cmpsl
jo
dec
insl
inc
roll
orb
pop
pop
lahf
pop
scas
jo
dec
shrl
sbb
pusha
xor
cmp
cmpsb
cmc
dec
in
cmp
push
int
mov
push
jmp
lret
or
ds
lcall
pop
lods
mov
cli
mov
add
dec
stos
hlt
or
dec
dec
loop
cltd
stos
push
pop
mov
adc
inc
sti
cli
cmpsb
into
lds
push
jmp
pop
xchg
add
push
dec
add
jno
data16
push
clc
pop
mov
in
xor
sub
fisubl
popa
lods
or
adcl
fs
in
mov
test
stc
adc
mov
ret
push
insb
dec
sbb
xor
lock
ss
xor
xchg
adc
gs
and
rorb
mov
jp
sub
inc
inc
or
jne
add
mov
sub
jo
jl
xchg
lahf
sub
test
dec
mov
lret
lcall
and
test
xchg
mov
xchg
mov
jge
mov
sbb
orb
sub
into
inc
inc
ja
cli
test
cmpsb
sub
adc
leave
push
fldt
int
mov
cld
dec
pop
popa
dec
sub
push
mov
leave
jge
pop
xor
arpl
fmul
mov
daa
push
movsb
xor
xchg
clc
cli
adc
rcrl
push
mov
mov
mov
fbstp
mov
or
fs
and
sub
sbb
xor
shll
lds
sbb
test
jmp
loop
scas
pop
lods
xchg
inc
and
push
xor
add
rcll
mov
inc
mov
push
loopne
mov
sar
repnz
cmp
fmull
jg
xchg
out
fs
int
imul
xor
fcoms
movsl
js
push
mov
lret
add
or
xchg
shll
cmp
imul
repz
movsl
outsb
inc
sub
add
out
push
inc
cmpb
rcll
lcall
inc
or
and
lods
mov
push
bound
rorb
das
mov
dec
popa
call
sub
lods
roll
pop
in
inc
fucomp
xchg
les
adc
daa
lds
into
fists
inc
sub
dec
in
cmc
popf
hlt
push
outsl
neg
cmp
lock
pusha
scas
lcall
out
lea
xchg
mov
jnp
dec
jno
pop
push
sbb
loopne
mov
mov
bound
lods
scas
add
dec
lock
pop
jb
inc
xor
ret
jl
mov
ret
shrd
lret
dec
xchg
adc
pop
addl
xor
mov
cmp
stos
sbb
add
and
into
divl
jl
fadds
fs
dec
stos
stos
es
sbb
and
ss
pusha
adcl
xchg
pop
shlb
inc
das
push
mov
inc
ss
int3
les
xor
mov
pop
stos
push
mov
sub
cld
jns
push
push
ret
mov
sbb
stos
int3
sbb
test
jge
cmp
mov
cmpsb
cmpsb
push
add
cld
pop
iret
fldl
sbb
sub
xor
xlat
imul
jbe
xchg
xchg
js
xchg
xchg
sahf
out
xchg
popf
sub
mov
loope,pn
icebp
cmp
mov
mov
and
mov
shlb
call
insb
push
inc
testb
push
andl
dec
rcr
pop
sbb
ss
cmp
fmull
inc
repnz
or
aad
xlat
incl
xchg
mov
insb
mov
aam
adc
push
and
jle
mov
popa
fbld
mov
push
pop
sub
push
das
mov
mov
icebp
mov
aad
mov
addr16
test
stos
xchg
iret
mov
mov
mov
shrl
dec
jge
ja
movsl
and
or
inc
add
and
lret
push
loope
scas
and
mov
in
dec
das
push
adc
and
jmp
lods
jns
lods
mov
in
in
push
ss
jo
sub
imul
mov
or
jns
mov
dec
and
mov
mov
rolb
cmp
or
fisttpl
vstmxcsr
insb
sbb
adc
sub
inc
pushf
fstps
push
fstps
pop
jno
insb
lods
mov
xchg
push
nop
fsubrl
mov
std
jbe
and
sub
je
jb
jne
das
addl
test
and
fisttpll
ja
inc
jae
lret
and
jno
and
inc
cld
mov
stos
sub
aaa
inc
imul
lds
sbb
push
push
les
fistpl
dec
fisttps
mov
or
push
test
cmc
icebp
out
sub
ret
scas
iret
sbb
shll
inc
stos
sti
pop
arpl
cmpsl
pop
sub
aad
vpsrad
insl
inc
loop
in
adc
rorl
cltd
aaa
cmp
fsubs
push
dec
jb
adc
push
ss
mov
ret
or
lahf
sub
push
js
std
push
pop
dec
stc
and
das
es
into
sbb
fcmovu
mov
sbb
and
out
mov
mov
out
daa
sbb
clc
sub
movsb
das
and
popa
aam
xor
cwtl
dec
mov
mov
shlb
add
jb
int3
adc
mov
bound
pop
jge
pushf
cmp
adc
aad
das
test
shrl
mov
pushf
xchg
int3
arpl
jne
jae
jecxz
in
mov
inc
mov
es
xchg
lods
lock
xor
int
dec
jp
shrb
cmpsl
sarb
cwtl
inc
fs
aas
cli
mov
lds
xor
dec
das
fs
dec
xchg
shlb
cmp
xchg
adc
in
mov
pop
dec
sbb
sub
pop
lret
sub
mov
mov
shll
sbb
sti
mov
adc
stc
call
imul
mov
fildl
inc
imul
dec
fstpt
sub
xor
fisttpll
mov
out
push
lods
or
jb
imull
mov
fcompl
int
pushf
pop
mov
test
call
jecxz
mov
test
insb
lret
insb
xor
mov
imul
gs
push
cmp
test
je
mov
rclb
jg
or
and
pop
jmp
lret
ret
push
das
cmp
mov
pop
xchg
mov
call
xor
lcall
sbb
rorb
push
pop
fwait
and
ds
stos
jecxz
cmc
pop
jbe
jno
ljmp
lea
std
jnp
lret
and
xchg
mov
arpl
aas
mov
dec
and
popa
dec
jp
mov
ds
sbb
gs
adc
movsl
shr
fcmovb
fidivl
fdivrp
shrb
push
or
adc
jbe
ret
xor
stc
xchg
push
push
cwtl
into
fcoml
sbb
movsb
xorb
dec
and
jl
arpl
push
test
xchg
pop
fdivrl
sbb
lock
and
stc
fmuls
push
movsb
pusha
sub
fstpt
cmp
adc
sub
in
add
js
inc
cli
xor
sub
call
inc
sti
callw
dec
stos
repz
add
push
add
mov
shrb
pop
in
push
orl
fwait
xchg
push
push
cmp
imul
icebp
out
stos
mov
int3
cwtl
stos
insb
lock
and
stos
sbb
xchg
push
push
and
add
and
scas
cmp
adc
cmp
pushf
lods
mov
mov
rol
sbb
jl
xor
test
sub
in
je
pop
in
in
js
pop
pop
cli
in
xchg
scas
in
jno
jmp
movsb
scas
mov
int
lock
call
int
mov
sbb
lods
inc
rcl
out
add
and
inc
repnz
and
stos
adc
out
aas
or
in
inc
popa
sub
dec
sub
mov
push
adc
push
mov
jnp
xor
mov
sbb
mov
ss
adc
sbbb
lea
adc
inc
mov
mov
gs
mov
in
lods
fdivr
dec
xchg
mov
cmc
and
cmp
gs
xor
fsubl
push
es
and
push
mov
ja
jbe
xchg
and
rclb
enter
jne
or
mov
sti
nop
mov
jns
dec
iret
dec
cld
xlat
dec
inc
test
xchg
sub
sub
xchg
xchg
push
sub
daa
inc
mov
sub
scas
lds
xchg
xchg
int3
call
sub
inc
sbbb
and
dec
dec
out
push
je,pn
push
and
pop
sbb
dec
std
cmp
sub
nop
and
adc
dec
shrl
pop
and
sub
aas
and
not
mov
das
mov
mov
mov
cmp
xchg
or
ds
mov
decb
fs
popa
out
scas
imul
pop
mov
mov
shrl
insb
xor
cmpsb
ficomps
sub
xor
mov
xorb
add
mov
addr16
xlat
addb
cmp
adc
or
adc
inc
in
inc
call
xchg
sub
sub
leave
dec
stos
not
xchg
sub
xchg
mov
inc
lea
mov
mov
mov
mov
dec
movsb
outsb
faddl
fs
pop
sub
jo
jns
pop
cmp
mov
dec
pop
scas
add
cmp
adc
enter
mov
je
jns
hlt
repnz
lock
jp
ds
shrb
inc
push
mov
ficompl
pop
fiadds
addps
push
mov
mov
stos
ss
jo
call
mov
jns
rolb
dec
leave
sub
xlat
xor
pop
adc
cld
and
add
pop
jl
mov
leave
stc
mov
lret
pop
fbld
jl
addr16
sbb
or
jl
jae,pt
cmp
dec
adc
stc
loopne
xchg
pop
outsl
std
push
mov
out
push
movsb
xor
inc
lods
and
push
rorb
adc
sbb
leave
fstp
cli
int
js
cmp
sub
arpl
xor
push
lahf
test
inc
stos
xchg
lret
push
les
sub
mov
pop
rclb
xor
cmp
or
dec
cwtl
inc
stc
xchg
lcall
scas
adc
push
imul
adc
adc
xor
pop
out
shrb
or
sbb
jnp
sbb
cmpsl
stc
adc
and
dec
rcll
lods
int
jle
mov
jecxz
lea
ja
pop
daa
pop
es
pusha
adc
mov
jle
push
or
sti
sbb
or
xor
lock
push
popa
loopne
push
arpl
mov
pop
bound
test
into
fcos
testl
xchg
xchg
rclb
push
scas
jle
or
subl
pop
scas
aaa
imul
xor
lock
pusha
mov
jecxz
dec
xor
sbb
popf
enter
sbb
jmp
xor
mov
xchg
xor
mov
arpl
mov
adcl
pop
sbb
xor
aas
push
push
push
movsb
mov
or
outsl
or
orb
cmp
imul
gs
pusha
pop
out
test
test
je
scas
xchg
fstps
call
divb
jecxz
scas
sbb
sbb
in
aad
pop
ljmp
push
mov
xor
xchg
fstpt
jne
out
int
hlt
iret
lret
cmp
fldl
out
lods
and
dec
or
shrb
lods
jbe
js
stos
int
scas
insb
jno
push
in
mov
adc
test
aaa
cmpsb
fisubrl
nop
xchg
cmpsl
rcrb
addr16
cmpsb
or
or
aam
fnstenv
shrb
mov
out
push
fucomp
out
cmpb
pop
xor
mov
add
fwait
or
fdivrs
shr
add
cs
ret
xchg
jl
loop
mov
ja
ja
outsl
lcall
jl
sbb
stc
flds
js
dec
pop
dec
inc
mov
dec
repz
ds
sub
jno
mov
out
or
test
inc
and
subl
out
add
inc
mov
cmc
ret
bound
adc
jge
hlt
mov
cmpsl
lock
arpl
call
scas
rolb
inc
cmp
ss
dec
jne
testl
lcall
cmpsb
pop
and
cmp
rcrb
test
outsl
push
dec
jmp
lods
mov
mov
jnp
je
out
cli
pop
sahf
inc
das
mov
aas
int3
jle
insb
bound
iret
pop
test
int
outsb
adc
inc
test
cmp
cmp
push
insb
nop
lods
bound
mov
mov
mov
xchg
inc
cmc
cmc
xor
test
and
inc
xchg
push
push
pop
cmpsl
lds
inc
xor
pushl
adc
shlb
mov
ss
cmpsl
ds
repnz
jo
stos
dec
dec
in
scas
xor
ja
scas
or
inc
jbe
inc
or
out
inc
cltd
xchg
enter
mov
xchg
mov
xchg
sbbb
lds
sbb
test
fsubl
gs
movsl
add
fsubl
pop
and
sbbl
fbstp
jb
out
es
test
xlat
mov
and
fmull
repnz
cmc
pop
sub
fidivl
mov
in
push
cwtl
dec
out
pop
out
je
repnz
mov
pop
jo
loope
repnz
push
or
mov
sbb
sbb
cli
cmpsb
mov
push
inc
popf
inc
fcomps
cmp
dec
stos
jmp
stc
adcb
xchg
or
sub
jb
movsl
xor
pop
push
push
icebp
push
or
sub
je
mov
cmpsb
pop
gs
ficoml
nop
icebp
sar
push
or
adc
fs
sub
je
cmp
inc
pop
adc
fcomps
pop
cmp
push
imul
ss
fwait
rorb
or
jecxz
mov
push
je
test
daa
push
movl
rcrl
sub
pop
push
aaa
stos
sbbl
push
es
cmpsl
mov
push
mov
sbb
xorb
push
mov
cmc
fstpl
cmp
imul
pusha
pop
pusha
pusha
xchg
sub
inc
int
lea
sahf
add
jl
aas
ss
pop
pushf
pop
inc
mov
mov
movsl
popa
dec
movsl
nop
fists
rolb
mul
outsl
rcl
fnstenv
ret
rcrb
bnd
mov
mov
mov
jl
mov
add
ss
orb
lfs
and
adc
mov
mov
adc
negl
enter
cli
fs
cmpsl
cmp
ds
and
cld
ss
mov
addr16
clc
xor
xor
adc
ret
sbb
xor
lods
bound
test
leave
mov
mov
sbb
xchg
sbb
imul
xchg
fmulp
in
xor
std
xchg
out
cmp
sbb
negb
push
push
push
fdivr
mov
inc
lods
imul
sbb
mov
xchg
aas
icebp
xchg
xchg
mov
mov
ljmp
cmp
push
cmp
fnsave
push
xchg
mov
cmp
call
imulb
xorl
dec
adc
cmp
fwait
push
pop
sub
in
jno
adc
sbb
fildll
test
xor
stos
jecxz
adc
shrb
and
jmp
pop
popl
pop
add
loopne
aam
xchg
cltd
and
jae
sub
nop
cmp
or
pop
ror
jmp
dec
mov
cmpsb
imul
xor
lea
arpl
pop
mov
lock
iret
mov
xor
jg
in
pop
in
dec
mov
ds
loop
andl
std
dec
push
inc
xor
pop
dec
pushf
mov
ret
sub
mov
sbb
sti
movsb
cmc
dec
gs
jb
scas
mov
outsl
shlb
jmp
push
mov
push
outsb
or
enter
xor
dec
rcll
or
stos
repnz
mov
mov
or
cli
sbb
pop
mov
inc
adc
pop
xchg
jle
repz
lods
int
lret
xchg
je
dec
adc
sub
aad
mull
gs
addl
mov
sub
xchg
adc
add
ljmp
in
lcall
jmp
lods
fistpl
movsb
and
iret
fistl
out
adcb
jb
inc
adc
fimuls
mov
xlat
dec
aaa
enter
mov
mov
rcrl
mov
adcl
fistpll
lods
arpl
xor
mov
cmc
dec
sbb
jl
lret
arpl
jp
sub
dec
pushf
and
mov
scas
mov
lock
pushf
fists
mov
xor
pop
add
jmp
shll
scas
dec
cmp
jne
or
shll
mov
stc
mov
cmp
orl
mov
mov
xchg
lods
inc
test
in
sub
ja
daa
push
jb
mov
sub
jbe
mov
leave
arpl
std
in
adc
addr16
mov
nop
sub
jmp
xchg
ss
mov
push
or
xchg
shrb
or
stos
pop
fildll
shrl
adc
inc
mov
in
shlb
lcall
mov
xchg
sub
fistpl
mov
popa
ret
and
sbb
push
cltd
test
movsl
les
adc
or
das
adc
pop
stos
mov
add
xchg
lock
sub
jae
ret
dec
out
lods
cltd
loop
jae
test
out
test
push
out
push
fwait
push
mov
xor
jbe
xchg
outsl
adc
cs
dec
test
or
sbb
pusha
pushf
js
std
mov
repz
inc
and
adc
mov
les
aaa
dec
cltd
enter
rolb
out
fsubrs
cmpsb
clc
push
sarb
lret
test
lahf
fwait
or
iret
add
cmp
popf
clc
mov
or
mov
add
ficoml
jno
or
nop
or
daa
pop
aas
sbb
mov
cmpl
lahf
rcll
loope
pop
adcb
fidivrl
pop
mov
lret
mov
inc
xchg
or
faddl
sbb
in
sub
and
scas
sarl
jge
dec
std
and
push
inc
scas
and
mov
fs
add
faddl
dec
lret
add
or
jae
sarl
sbb
mov
mov
mov
adc
xchg
mov
lods
xorb
stos
add
dec
imul
push
sarl
inc
aam
roll
pushf
xor
icebp
call
jecxz
push
adc
sbb
push
pop
mov
xlat
cs
and
cmp
dec
mov
sub
fcomip
rclb
clc
mov
shll
xchg
jne
mov
imul
sub
push
movsb
sub
lock
mov
sub
cltd
aas
cld
inc
sahf
adc
adc
cmpsl
jle
mov
sbb
add
jmp
jg
sub
and
pop
lds
icebp
mov
nop
repnz
mov
mov
adc
daa
outsb
jo
xorb
jno
cmp
cltd
cltd
loope
call
dec
ficoml
lcall
mov
loopne
adc
mov
fcomi
xchg
aam
in
add
sbb
nop
add
pop
xchg
add
shll
mov
pop
data16
mov
add
dec
aas
sbb
cli
pop
mov
xchg
mov
xchg
push
xlat
insl
push
mov
jecxz
push
je
loopne
sbb
pop
testb
mov
pusha
cmpsb
jno
loope
fstpt
mov
mov
stos
pop
in
mov
jo
xor
cltd
fsubrs
xor
sbb
jo
pop
sbbl
lods
gs
hlt
sub
mov
jl
fs
scas
and
stos
or
das
push
push
enter
sbb
jmp
pusha
inc
mov
xchg
mov
imul
stos
jne
arpl
int
dec
dec
in
push
cltd
cltd
mov
mov
push
sub
repz
push
adc
add
jp
mov
pop
sbb
andl
mov
ljmp
mov
xor
cs
fldt
and
add
add
xchg
into
push
pop
rcrb
aaa
test
and
and
mov
xorl
lret
pusha
mov
lret
shll
or
pop
das
or
int
add
sbb
shl
arpl
pop
xchg
into
mov
mov
mov
es
or
pop
push
mov
dec
je
repnz
push
sbb
pop
adc
repnz
inc
ds
xchg
sarb
out
aas
xlat
cltd
pusha
add
adc
sub
movsl
jecxz
push
fisttpll
jl
sub
pop
add
or
stc
das
cmp
inc
sti
mov
xchg
imul
pop
flds
mov
movl
dec
mov
daa
fwait
sub
in
mov
psubsb
shll
cltd
sub
pop
call
pop
lcall
pushf
adc
out
sub
lods
sub
leave
ss
movsl
cmc
cld
idivl
mov
pop
push
dec
scas
outsl
imull
mov
out
iret
ret
jnp
mov
jne
outsl
mov
lret
dec
inc
xchg
pushf
mov
popa
mov
mov
stos
push
mov
xchg
add
sub
sbb
pop
movsb
sub
jmp
dec
pop
mov
nop
ja
rorl
mov
movsl
lcallw
fadds
xchg
out
gs
nop
mov
or
mulb
jge
iret
call
push
mov
int
sbb
cmc
adc
sub
xchg
mov
sbb
std
test
aas
roll
mov
fs
lods
sub
push
mov
fisttps
ficompl
gs
push
sbb
mov
sti
sbb
je
loope
push
jmp
adc
in
outsb
push
test
in
lods
inc
lcall
sub
imul
mov
div
push
test
sub
mov
pop
jns
push
mov
aaa
xor
inc
xchg
fcom
xor
mov
int
adc
or
lds
xor
mov
fidivl
jp
cmc
and
jno
inc
je
xabort
xor
fldcw
sbb
mov
iret
pop
jne
sub
aaa
rclw
rcl
mulb
mov
push
adc
pop
fldenv
std
inc
jecxz
sti
cmp
aas
push
add
or
fdivrp
cmc
cmpsb
stos
sti
imul
and
stos
lret
sub
fwait
push
mov
int3
jno
dec
rclb
cmp
jge
leave
ds
mov
jl
cltd
imul
test
aad
xor
popf
movsl
shlb
mov
imulb
mov
mov
sbb
or
xchg
cmp
stos
add
and
cli
mov
add
cmpsb
imull
mov
sub
sbb
dec
mov
sub
repnz
add
and
mov
xchg
inc
push
or
adc
and
dec
mull
lods
sub
fs
mov
and
xor
dec
insb
scas
subb
call
dec
xchg
jns
fdivr
out
jbe
adc
unpcklps
mov
popf
adc
dec
mov
jns
outsb
jb
testb
push
sub
dec
test
ficomps
pushf
mov
loop
jp
push
lcall
sub
in
popa
ret
dec
insl
and
xor
mov
mov
ja
xchg
in
mov
in
push
and
mov
mov
jg
push
leave
mov
dec
idivl
jne
and
fisttpl
clc
push
vmovdqu
mov
fcomps
lret
dec
mov
andl
jmp
ljmp
push
hlt
pop
enter
sbb
stos
inc
lock
dec
xlat
cltd
iret
inc
pop
je
cmp
aam
pop
js
mov
or
mov
insb
sar
fwait
xchg
push
xor
out
movsb
jbe
sbb
scas
pop
fbld
mov
es
lds
mov
sub
mul
icebp
imulb
mov
adc
push
add
fdivrl
push
cmpsl
xor
scas
xchg
out
imul
outsl
pop
sub
jno
adc
mov
aas
sbb
jo
dec
mov
xchg
das
push
fstp
lds
jl
pop
in
pushf
adc
call
jmp
xchg
call
out
sub
jno
mov
jb
xor
loope
aad
mull
stos
aaa
fstpl
xchg
push
jge
insb
lret
popf
outsl
loopne
outsl
notl
ljmp
sub
fnstenv
inc
mov
loop
mov
lret
fildll
rorl
inc
into
fmuls
mov
sbb
lds
cmpl
cmp
ja
movsb
add
clc
sub
mov
cmp
je
sbb
popa
lahf
sub
adc
sbb
addr16
sbb
stc
inc
pop
es
cmpsl
adc
movsb
movsl
dec
ficomps
or
sbb
dec
fs
mov
jbe
mov
adc
outsb
mov
push
lds
dec
rclb
aad
fsubl
aas
addl
cmpsb
xchg
clc
push
hlt
daa
cmp
imul
enter
fs
add
das
mov
xor
xor
adc
cltd
insb
mov
xchg
popf
pop
push
cmp
xchg
in
inc
pusha
jns
mov
arpl
stos
add
sub
push
push
and
adc
bnd
ds
pop
pusha
fldenv
mov
jb
fstps
data16
push
shl
pushf
jl
leave
aaa
insl
movsb
dec
imul
xchg
std
pop
pop
aad
stos
hlt
push
aas
insb
lret
notb
jge
imul
pushf
jg
dec
sbb
mov
mov
or
mov
call
adc
aam
fucomi
shrb
fidivrs
imul
adc
fucomi
and
je
jmp
ljmp
test
lahf
cmp
fdivrl
or
mov
xor
or
or
stos
dec
scas
cltd
dec
push
cld
insl
or
and
adc
std
add
lcall
pop
pop
movsb
sub
sti
dec
mov
loopne
inc
repnz
jne
inc
inc
sbb
dec
jns
add
sbb
cmp
lods
dec
dec
mov
push
pusha
repz
dec
ret
cmp
sbb
xchg
and
cmp
in
add
sbb
shll
mov
pushf
in
xlat
icebp
loop
insl
dec
inc
cli
fcoms
lock
jg
fldt
outsl
xchg
lods
sub
daa
mov
nop
iret
mov
or
xchg
pop
cmp
lret
shl
call
mov
jns
cmp
out
fcomip
adc
jge
and
ret
je
ljmp
mov
sahf
pop
mov
jne
sub
in
outsb
adc
jbe
fst
lcall
lods
aaa
pop
mov
and
add
ljmp
push
lahf
jp
pop
std
jno
stos
jg
xchg
vandnps
in
mov
es
xor
pop
jne
std
xor
jns
jmp
in
loopne
popf
sbbl
jbe
adc
dec
cmp
push
cmp
push
jb
fidivs
inc
mov
push
fcomps
repnz
and
test
ds
sti
loopne
test
mov
mov
xor
fimuls
fs
dec
mov
aas
ret
adc
popf
les
adc
dec
dec
lahf
push
add
es
repnz
pop
mov
or
stos
and
add
mov
test
insl
movl
js
loop
mov
std
or
xor
data16
out
push
div
lcall
adcb
outsl
push
movsl
inc
or
push
pop
decl
das
ja
out
shr
das
push
insb
add
sub
shrb
or
shlb
or
add
push
in
aaa
jbe
clc
lock
push
dec
cmpsl
push
in
stos
add
pusha
lock
sub
cltd
xor
ja
in
dec
jne
add
sti
pop
jne
mov
push
xor
inc
dec
loop
out
add
into
dec
cmp
sbb
stos
repnz
mov
dec
rcrl
jl
jge
dec
add
jne
mov
pop
out
xchg
jb
mov
add
lock
mov
ds
sub
inc
dec
fwait
sbb
push
cli
and
mov
aaa
fstl
ficoms
std
setl
mov
dec
lcall
enter
nop
shlb
into
inc
mov
xchg
sarw
shl
ret
dec
ret
lret
cmp
repz
stos
mov
outsl
dec
shlb
repz
ret
jmp
or
or
in
cmpsb
cmpsl
jmp
and
push
stos
movsb
jno
outsb
movsl
cmp
fsts
mov
nop
cmp
cmpsb
je
enter
ret
nop
stc
addr16
jp
add
sti
jbe
and
jp
push
loope
int3
adc
scas
inc
mov
mov
cwtl
lret
leave
or
inc
mov
shll
cmp
mov
out
mov
jo
push
aam
pop
adc
std
rcr
psubq
cmp
push
and
ret
cmpsl
test
out
push
and
ljmp
mov
test
jno
and
xchg
sbb
push
hlt
dec
leave
les
jge
aam
xchg
jne
sbb
xchg
mov
xchg
jle
les
ljmp
push
sbb
mov
fwait
pop
jp
ja
arpl
dec
sub
mov
sub
dec
lcall
pop
out
adc
and
lods
bound
add
jge
fiadds
sub
data16
and
fisttps
out
shr
push
mov
dec
push
adc
fisubs
ds
jle
mov
fisubrl
mov
clc
inc
add
clc
out
add
andl
mov
icebp
sbb
sarl
jle
je
ds
std
cld
adc
or
es
loop
popf
xchg
dec
test
ja
add
fidivs
and
stc
xchg
dec
arpl
and
mov
lock
pushf
pop
cltd
dec
cmp
sti
fadds
dec
mov
and
rclb
xchg
mov
orl
fs
movsb
dec
scas
out
push
adc
push
maskmovq
idivl
push
daa
dec
cmpsl
sbb
mov
inc
mov
jno
js
fidivrs
lods
stos
pop
mov
mov
mov
in
std
bound
xchg
pop
mov
xchg
jne
sub
inc
ss
ret
repnz
pop
test
jmp
add
add
mov
je
xlat
loop
push
out
push
loope
xchg
in
pop
out
scas
mov
loop
or
int
sub
add
dec
out
dec
mov
adc
push
test
xor
leave
cmp
shll
and
mov
dec
je
scas
pop
pop
pop
int
xor
mov
sub
lea
imull
lods
mov
in
cmp
popa
adc
icebp
dec
les
sub
dec
imul
lods
and
sub
cmp
adc
push
imul
sbb
bound
cmp
insl
imul
adc
pop
mov
out
and
lds
and
pop
pslld
std
std
stc
ficoms
push
sub
mov
es
dec
popa
mov
xor
mov
repnz
lret
and
inc
sub
rol
pushf
mov
push
add
or
xchg
aas
fldenv
or
mov
fisubs
es
ss
dec
out
add
insb
pop
mov
scas
movsb
std
lea
imul
cmp
mov
mov
and
jno
push
mov
xchg
js
jl
mov
cmp
aaa
sbb
lods
xchg
xchg
aam
jecxz
push
iret
sub
fisttps
inc
outsb
push
stos
sub
mov
int3
dec
sbb
jmp
or
mov
loope
mov
jge
pop
mov
mov
dec
lock
cltd
enter
cli
cmpsb
std
push
jns
fimull
lods
pop
insl
cmp
push
loop
scas
push
stos
aad
xor
fisubrl
and
orl
adc
xchg
addr16
clc
xlat
out
adc
inc
jnp
push
mov
pop
sub
push
xlat
cs
fs
and
sbbb
inc
add
hlt
inc
mov
and
add
cmp
loop,pt
inc
bound
cmc
add
repz
repnz
outsb
fwait
push
mov
cmpsl
sub
leave
xchg
xchg
pop
pushf
lret
lods
nop
mov
jb
xor
jo
adc
or
inc
fdivp
and
leave
out
xor
xchg
pushf
in
jle
adc
inc
jno
arpl
lods
lsl
fwait
cmp
jno
adc
cs
sbb
sbb
and
jb
pop
mov
push
fcmovbe
sbb
in
aam
inc
sub
out
ret
cmp
std
test
mov
lods
sub
lods
cs
add
clc
mov
cltd
lods
jnp
movsl
mov
adc
sub
mov
dec
ljmp
ja
sahf
iret
int3
mov
inc
add
int
push
fisttpll
sbb
in
sbb
mov
cmpsl
out
mov
jp
lea
fistpl
js
outsb
inc
insl
adc
cs
insl
test
or
sti
in
mov
add
pushf
inc
pop
sub
movsb
out
dec
pop
push
test
imul
imull
pop
xchg
pop
push
jbe
and
mov
sbb
and
daa
cmp
dec
inc
in
clc
mov
sub
jnp
push
ret
push
xor
and
pusha
clc
loope
int
negl
push
pusha
jno
fiaddl
into
sti
and
pcmpgtb
inc
adc
mov
cmp
shrb
lods
inc
mov
jle
pop
call
movsb
mov
mov
ret
mov
jns
loop
dec
outsb
iret
mov
sbb
aam
pop
dec
fwait
shrb
mov
jecxz
aad
pop
and
add
push
je
inc
loop
bound
fistl
stos
andl
test
lods
mov
push
loope
dec
mov
addr16
out
fidivrl
xor
dec
cmpsb
ja
insb
sahf
dec
sub
mov
imul
fcoms
orb
repnz
icebp
dec
add
inc
xchg
mov
mov
inc
jb
mov
call
add
push
data16
add
lods
sarl
pop
les
test
dec
mov
mov
cwtl
sub
mov
mov
inc
clc
test
outsb
push
jno
push
call
sar
aam
enter
jecxz
movsl
mov
loop
mull
frstpm(287
xor
movsb
mov
jno
and
mov
push
movsb
repnz
pop
pop
rorb
dec
shrl
inc
xor
lods
fsubrl
push
mov
repz
jle
lcall
sub
cmp
jae
lret
pop
repz
mov
dec
cmp
pusha
or
in
push
test
lock
push
cld
cld
jmp
push
pop
xor
cmp
xor
push
fdivrl
sbb
sbb
cltd
hlt
inc
mov
in
data16
out
fs
xor
and
mov
nop
dec
cli
int3
idivb
inc
add
push
dec
mov
sub
arpl
ljmp
push
rcrb
scas
adc
add
pop
push
mov
pushf
mov
or
sbb
jmp
sub
cmp
jmp
icebp
mov
enter
lds
mov
fwait
and
jbe
pop
popf
sbb
pop
lret
push
pop
push
out
aaa
mov
js
ss
andnps
sti
pop
sti
dec
pop
neg
ds
sbb
pop
dec
push
mov
cwtl
lcall
mov
lcall
mov
sbb
sbb
xchg
push
outsl
push
loopne
add
js
vpxor
adc
fldl
jns
sub
iret
cmp
mov
ss
xor
mov
dec
daa
sti
pop
jl
cmp
add
cmc
pop
jmp
jno
or
xor
insb
and
repnz
push
pop
lret
iret
std
jmp
int
je
sbbb
loope
pop
inc
movsl
addr16
xchg
pushf
or
mov
push
pop
inc
scas
and
out
stc
rorl
gs
push
aas
add
jp
adc
cmc
ss
push
push
repnz
mov
jb
popf
mov
int
jle
pop
loope
adc
add
cmp
dec
insb
test
pop
and
insl
mov
mov
ficompl
in
out
iret
push
lea
inc
cmc
inc
in
test
dec
rolb
loop
xchg
push
movswl
movsl
mov
mov
and
push
jl
imul
cmp
js
loope
negb
in
push
clc
push
mov
sti
add
stos
xor
and
mov
icebp
sarl
sub
adc
jle
sbb
lret
loop
inc
stos
and
adc
dec
cmovae
push
inc
adc
loope
es
je
cltd
cmpsl
cmp
rol
mov
pop
jo
and
out
fistpll
jne
xorb
inc
icebp
adcl
mov
int3
sbb
adc
and
stc
mov
cs
cmp
mov
jb
mov
cmp
jmp
lock
test
xor
insl
in
lods
fdivs
add
lret
outsl
icebp
push
and
push
or
and
cli
leave
mov
arpl
pusha
mov
gs
imul
fisttps
leave
rclb
ret
stos
scas
rclb
bound
insb
add
int3
sub
daa
rcl
out
loopne
imul
insl
rcr
inc
xchg
pop
das
stos
ja
popa
mov
stos
pop
mov
loopne
aad
xchg
xor
in
push
fsubrs
sbb
or
pop
inc
cmp
cwtl
mov
xchg
push
or
mov
mov
and
daa
xchg
xchg
pop
jl
mov
dec
cmp
std
inc
cld
addr16
inc
or
sbb
addr16
cmc
arpl
xchg
test
fdivr
icebp
mov
mov
mov
jmp
sbb
insb
je
jmp
sti
pop
xlat
mov
das
dec
mov
mov
cmpsb
or
mov
sarb
add
inc
inc
test
sbbb
fidivrs
adc
fmul
sarl
les
inc
std
ds
shrb
jl
mov
adc
int
inc
daa
rolb
aad
ljmp
mov
sbb
push
or
jno
inc
xchg
sbb
faddl
movsl
mov
add
out
dec
popf
push
or
les
jge
icebp
jp
addr16
add
scas
bound
push
fildll
shrl
fmuls
jmp
mov
dec
xchg
test
mov
adc
jb
popf
cmpsb
aas
cs
jp
gs
xchg
jne
pop
mov
shl
frstor
mov
sub
cmp
jbe
inc
xor
xorb
pop
pop
mov
in
adc
aad
jno
jae
jns
cmp
cmpb
outsl
aam
pop
movzbl
sub
out
insb
test
push
adc
mov
dec
and
add
in
dec
mov
cmpsl
icebp
cwtl
dec
lcall
sub
xor
xchg
pop
xlat
leave
lret
lea
mov
inc
push
aam
pop
cmp
push
xchg
aad
outsl
jecxz
and
mov
sbb
mov
mov
fsubs
mov
mov
xor
and
pop
inc
int
movsb
cltd
pop
inc
sbb
les
sub
adc
jl
pop
loop
pop
out
lahf
mov
jle
and
pop
in
jne
mov
xor
and
adc
sub
int
sub
fnstsw
jb
sub
adc
int3
pop
not
mov
enter
sarl
push
test
jge
xlat
enter
fildl
push
repnz
scas
movsb
mov
in
dec
fidivrs
push
daa
push
inc
lea
mov
aas
inc
movsl
ja
jo
push
mov
and
push
and
mov
xchg
mov
pop
ret
std
mov
mov
lods
add
cmp
or
clc
pop
pop
sbb
lret
out
push
mov
icebp
pop
dec
into
insl
fs
push
push
dec
repnz
or
gs
sbb
subb
push
test
gs
jecxz
dec
adc
enter
lcall
push
in
rorl
mov
sub
loope
sub
adc
call
sbb
pop
xor
sub
or
dec
lret
scas
push
test
lret
push
jne
icebp
sub
jp
or
xor
inc
mov
jnp
in
or
pop
subl
add
xchg
and
mov
inc
add
fisubl
or
sbb
ja
push
inc
andb
test
xchg
jmp
out
daa
loop
int
inc
imul
les
xchg
inc
inc
xchg
pop
jnp
inc
add
out
xchg
mov
cmpsl
mov
and
mov
mov
sub
add
and
xchg
mov
fisttps
push
call
inc
aad
movl
mov
cmp
into
cmp
int3
mov
out
pop
mov
xchg
xchg
xchg
shrl
jl
inc
jb
clc
pop
insb
dec
pop
dec
xchg
aam
add
loopne
pmulhuw
mov
cmc
add
add
adc
or
jnp
aaa
push
jno
fidivrs
cmp
lcall
aaa
aas
pushf
addr16
and
or
dec
call
in
iret
mov
pop
sub
xor
xlat
mov
mov
or
mov
or
jle
bound
test
push
call
fldt
shll
ljmp
mov
mov
lods
fidivs
cmp
aad
movsl
or
or
ds
out
push
int3
push
in
pop
loopne
push
cmc
add
out
call
mov
xor
sub
ds
int
movsl
iret
loopne
addb
ret
sbb
es
out
add
mov
xchg
out
mov
sbb
xor
push
sbb
jecxz
hlt
aaa
sbb
cmp
jmp
inc
mov
add
out
mov
repz
fdivl
xor
jle
out
mov
push
das
cli
lret
adc
mov
and
popa
pop
sub
xchg
mov
xchg
jb
push
inc
ss
popa
pop
popa
rorl
ljmp
shll
mov
idivl
xor
xchg
pop
movb
das
xchg
pushf
out
sub
ja
iret
pop
call
hlt
cmp
xlat
cld
mov
repz
loope
shll
ret
push
fldcw
mov
sbb
movsl
push
mov
add
test
or
sub
dec
loopne
and
jb
std
adc
orb
mov
mov
sbb
outsl
ljmp
mov
call
ss
push
sahf
or
push
jge
inc
inc
sub
push
dec
sbb
das
into
repz
ficoml
loopne
outsb
dec
out
leave
js
pop
add
mov
jns
je
aam
mov
mov
mov
pop
add
jmp
sbb
outsl
or
lret
mov
mov
xor
divl
dec
divb
jb
add
jge
loop
adc
daa
push
sub
pop
scas
daa
cmp
scas
ja
sbb
shll
sbb
orl
mov
jne
or
loope
sbb
or
loopne
ficompl
imul
mov
inc
and
cli
push
rorl
xchg
cmpsb
and
xchg
mov
pop
cmp
adc
pop
dec
push
or
testb
push
dec
in
in
fucom
js
stc
in
out
pop
mov
cltd
lret
int
sub
mov
push
push
mov
cmp
pop
arpl
shl
aam
insl
rolb
movsl
adc
in
cmp
xlat
push
add
movsb
inc
mov
jbe
popf
loopne
in
cmp
dec
xor
mov
dec
push
sbb
lahf
jnp
mov
shlb
je
xlat
into
mov
push
push
movsb
push
sbbb
test
and
xor
push
xchg
ret
out
adc
enter
dec
mov
fucomip
testb
or
cmpsl
ret
popa
xchg
dec
jne
notb
shlb
mov
mov
jle
fisubrl
or
mov
sbb
xor
dec
sar
fsubp
fisubs
xchg
aad
js
sub
cmp
add
xadd
cmpsb
loopne
fdivr
sbb
ret
pop
out
popa
cmp
xchg
lods
cmp
jge
dec
push
fsubp
or
xchg
lds
pop
sub
xlat
pop
cmc
aas
or
jp
adc
jg
dec
or
test
sub
fnstenv
inc
mov
xchg
test
rorl
idivl
out
lahf
dec
imul
pop
jmp
aad
jo
nop
add
xorl
mov
add
ret
xchg
add
pop
inc
sbb
jno
pop
mov
not
mov
cmc
fcmovne
adc
xchg
pushf
pop
dec
push
xor
and
dec
shl
cmp
add
fcoms
popf
repz
jg
addr16
dec
out
andb
cmp
int
orb
hlt
jle
push
jecxz
insl
leave
or
xchg
iret
sub
jg
mov
mov
stos
sbb
xlat
test
adc
xchg
adc
mov
sbb
sti
out
outsl
lods
loope,pn
repnz
subb
sbb
add
and
movsl
inc
inc
addl
push
pop
mov
xchg
cwtl
loopne
subl
add
sbb
sub
cli
xor
pushf
mov
jp
insb
imul
or
inc
test
mov
pusha
lea
lret
aad
enter
xchg
mov
outsl
cmpl
sarb
pop
mov
push
pop
lahf
xlat
xor
inc
gs
or
ljmp
jl
xorb
sbb
xchg
cmpsb
clc
test
mov
dec
mov
jno
call
pop
pop
adc
jg
repnz
mov
cmp
pop
stos
and
pop
repz
sbb
or
add
ret
mov
cmpsb
xchg
push
mov
aad
pusha
enter
leave
movsl
ficoms
insl
xlat
cli
scas
daa
xor
xchg
dec
ljmp
push
xor
jnp
rorb
sbb
sbb
enter
sub
fstpt
xor
or
cmp
ss
cld
aam
pop
mov
cli
cmp
popf
and
iret
jl
push
sbb
xchg
pushf
inc
lahf
loopne
iret
stc
pop
lods
dec
jns
sbb
das
sti
cltd
subb
test
xchg
jno
insl
mov
outsb
loope
cmp
mov
mov
sbb
pusha
xchg
out
adc
mov
lock
lds
jbe
sbb
sub
jb
push
ror
mov
pop
adc
sahf
jp
aad
adc
push
stos
add
mov
loopne
popa
mov
adc
cmp
xor
or
daa
es
xor
out
mov
cwtl
adc
bound
fwait
stc
pop
jb
jecxz
bound
add
xor
jecxz
add
or
mov
pop
roll
cmpsb
daa
pop
daa
mov
fsts
cmp
iret
cmc
add
sub
inc
call
push
and
jmp
xlat
ljmp
push
call
cmp
sub
add
pop
std
dec
pushl
xchg
pop
in
sbb
fs
or
and
jl
and
pop
shll
xchg
add
lods
hlt
jle
jle
ds
xor
adc
popf
sub
hlt
dec
mov
fisubrs
or
jbe
jne
cld
gs
imul
dec
shrl
add
mov
lcall
inc
cmp
popa
or
mov
out
push
xlat
xchg
in
repz
shr
je
scas
aam
rol
jnp
sbb
inc
std
add
dec
inc
fwait
pop
test
add
rclb
cltd
divl
incl
jo
push
inc
and
add
insb
popf
ljmp
adc
xlat
dec
push
xchg
ljmp
and
pop
push
add
jecxz
or
xor
mov
mov
in
into
je
lods
jp
sub
shrl
mov
jno
in
test
sti
adc
lahf
loop
andl
inc
xchg
cwtl
pop
pusha
lcall
and
and
cmp
mov
push
test
cmp
and
out
dec
mov
push
inc
mov
lea
mov
out
fcomi
or
mov
imul
daa
ficompl
mov
imul
dec
cld
roll
stc
cld
xchg
mov
ret
fbld
addb
out
sti
loopne
adc
imul
sub
enter
add
mov
jg
decb
in
mov
scas
sbb
push
in
shll
ret
aas
mov
fwait
mov
data16
mov
sub
jo
xor
bound
cmc
push
push
xchg
loop
nop
jnp
div
fisubs
clc
cld
push
lock
mov
mov
imul
sbb
popf
es
shl
push
stos
test
sbb
push
adc
adc
add
stc
es
or
aaa
adc
and
jns
pusha
in
and
pop
sbb
test
fsubs
ljmp
cmp
nop
fnsave
ret
jae
jb
xchg
stos
loop
mov
scas
sbb
out
jnp
loope
cmp
int3
mov
xor
fstl
jg
mov
add
pop
pop
jns
fndisi(8087
inc
fdivrl
in
jmp
push
das
divb
dec
inc
dec
das
dec
shl
loope
int
mov
push
or
mov
cltd
testl
mov
mov
int
ss
out
lods
inc
inc
cmc
sbb
mov
addr16
pop
iret
test
inc
dec
push
fidivrl
jmp
ret
jne
mov
loop
flds
dec
les
std
sbb
jne
outsb
stc
dec
pop
cld
sub
dec
push
push
cmp
ds
dec
sbb
adc
out
scas
cmp
lea
xchg
jle
or
into
pop
sub
sbb
xor
sbb
adc
scas
push
push
iret
lds
adc
into
out
das
dec
loope
dec
sub
xor
in
rorb
cmp
inc
dec
outsb
add
es
push
mov
shrb
push
mov
add
sbb
inc
add
call
xor
mov
data16
sub
pop
ret
and
test
push
sbb
sbb
mov
lret
test
imull
cmp
jae
repz
lcall
mov
add
cmp
or
cwtl
sub
xor
push
js
xchg
test
cwtl
cmpsb
add
rolb
stc
dec
push
arpl
in
gs
add
mov
mov
in
lret
mov
jp
pop
clc
mov
test
xchg
popa
dec
pop
pop
cmp
xchg
inc
inc
mov
stos
adc
roll
mov
jge
pop
fucomip
and
xchg
mov
aas
shlb
ds
jecxz
shl
lret
js
daa
jle
dec
inc
push
pop
sub
test
push
pop
in
into
xchg
std
cmp
mov
xor
pusha
and
shlb
aam
loope
sub
bound
dec
ja
clc
nop
pop
jp
movsb
fs
jbe
jnp
push
cli
pop
dec
jbe
mov
or
fwait
mov
xor
pop
mov
inc
or
push
pop
adc
ficoms
xlat
xor
es
xlat
fidivrl
jae
fwait
mov
mov
rcl
jno
arpl
stos
xchg
scas
or
mov
mov
cmp
inc
stc
add
jno
xchg
mov
pop
scas
ret
movsl
cmp
frstor
loop
adc
sub
xlat
dec
jb
out
leave
ljmp
fs
xchg
lcall
es
mov
xor
jmp
in
cmp
inc
lahf
testb
lds
out
xor
aaa
sbb
pop
shrl
imul
arpl
arpl
mov
mov
stc
mov
xor
xor
std
scas
sub
mov
out
mov
push
in
outsl
dec
jbe
or
xor
leave
push
lock
es
xor
push
pushf
loope
imul
jp
fcoms
sarb
sub
sti
pusha
xchg
jg
stos
lock
inc
aaa
sar
sub
add
clc
roll
inc
into
or
push
mov
xlat
loopne
insb
pop
inc
pop
xchg
push
jbe
dec
mov
mov
ficoml
mov
lea
cld
loope
xchg
insb
push
sub
scas
pop
xor
fwait
lahf
push
dec
sub
lret
inc
aas
push
lods
pop
add
sbb
inc
push
movsl
fs
fwait
int
xchg
daa
xor
js
and
jmpw
push
sti
mov
pop
les
fwait
xor
pop
inc
push
ret
loop
xchg
leave
xchg
sub
mov
dec
pop
int
cmp
inc
mov
ss
inc
pop
dec
jne
call
ja
mov
in
dec
add
out
pop
and
faddl
cmpsb
inc
jge
daa
push
insl
jle
mov
ret
out
sbb
arpl
rorb
in
or
dec
clc
das
add
push
sahf
lret
test
test
enter
ret
mov
loopne
push
dec
xchg
divl
std
ja
ret
mov
lods
mov
popf
pop
cli
xchg
lock
dec
jne
fistpl
jb
jno
sub
icebp
into
push
call
stc
ficompl
and
pop
popf
push
mov
cmpsb
in
cwtl
notl
dec
xor
add
daa
insb
sub
and
or
adc
scas
xor
jo
andb
mov
orl
hlt
mov
add
and
out
cld
mov
mov
adc
cmpsb
cli
loop
mov
and
lds
lods
lods
and
and
mov
fdivl
xchg
cli
pop
jecxz
xlat
inc
dec
test
pusha
out
jbe
xchg
push
adc
xor
mov
add
in
adc
out
insb
jl
mov
in
ds
roll
push
test
push
mov
add
ss
jmp
pop
test
bound
mov
repz
mov
xchg
sub
sbb
out
movsl
mov
fisubrs
idivl
and
lret
xchg
mov
ja
lods
outsb
sti
cs
and
jno
popa
mov
or
mov
sub
stc
adc
rclb
arpl
xchg
or
mov
pop
div
mov
sbb
bound
icebp
fmuls
fidivrs
cmp
jae
lea
pop
cmovp
pop
push
inc
insb
pushf
mov
xlat
inc
fwait
xor
ss
js
xor
mov
add
lds
insb
jb
mov
movsl
push
lods
xchg
xor
pushl
lret
dec
hlt
cmp
xchg
mov
or
fisttpll
pop
or
or
js
mov
jb
arpl
movsb
add
rcrb
out
dec
inc
rcrl
dec
je
push
add
inc
sahf
in
lods
or
push
or
test
js
les
out
outsb
fiadds
inc
sub
push
mov
clc
jns
or
push
lods
cmc
stos
pusha
sbb
rorl
dec
and
repz
mov
fstpl
leave
cmp
test
xchg
cmp
insb
xchg
nop
or
add
out
lock
push
cmp
push
sbb
xchg
dec
adc
dec
mov
adc
push
test
cld
sub
sbb
f2xm1
ss
xor
cs
pop
push
into
mov
out
xchg
and
add
jbe
add
int
iret
pop
inc
divl
inc
mov
das
mov
jecxz
andl
arpl
pop
int3
pusha
or
pop
sahf
mov
mov
loope
mov
shl
scas
sub
mov
cmp
mov
cmc
jo
int3
cmp
push
xor
and
fildl
inc
aam
into
in
xchg
jecxz
sub
ds
roll
je
out
sub
jne
ret
mov
push
mov
add
jb
mov
mov
out
scas
fldl
inc
popf
out
inc
cmpsl
add
stc
cmp
orl
std
out
xchg
mov
test
dec
out
sub
rorb
mov
and
mov
lods
and
mov
mulb
popf
in
daa
aam
dec
popf
inc
push
cs
jecxz
push
mov
dec
outsl
daa
cltd
adc
add
push
push
jbe
xlat
pop
hlt
inc
aaa
xor
jae
lods
mov
loopne
mov
outsl
popf
ret
push
mov
jmp
clc
push
add
scas
movl
repz
push
add
rolb
iret
cwtl
add
mov
loopne
sahf
mov
outsl
hlt
xor
adc
fwait
stc
push
int3
jp
sahf
popf
adc
dec
mov
inc
repz
mov
xchg
mov
jp
xchg
add
adc
movsl
sbb
jp
lcallw
and
rorb
orb
je
mov
cmpsb
push
in
outsb
xchg
dec
pmullw
push
push
fst
pusha
fsubl
lahf
and
jns
cltd
xor
clc
mov
scas
addr16
jecxz
inc
inc
loope
stos
push
or
sub
jg
sti
fs
js
add
jge
push
lea
dec
lods
in
mull
adc
inc
mov
sub
mov
jg
sbb
push
pop
push
xor
adc
jg
out
inc
lock
xchg
jno
mov
jge
mov
sub
lret
push
mov
sub
gs
mov
sar
adc
inc
sbb
xlat
mov
push
mov
mov
jo
std
daa
into
ljmp
inc
push
dec
in
adcb
out
stc
repnz
loope
iret
xor
mov
inc
ss
adc
int3
xor
push
arpl
scas
mov
adc
xchg
xor
mov
insb
jae
pop
stc
ret
inc
fmulp
xchg
and
mov
shlb
cmp
das
lods
mov
lcall
mov
inc
xchg
fisttps
push
dec
or
push
shrl
lahf
jecxz
pop
les
xorb
gs
mov
inc
and
fs
adc
sbb
xlat
bound
pop
dec
sub
lods
cmp
jl
xor
fxch
sub
push
mov
cmpsb
mov
pop
arpl
repz
push
lret
insb
test
pop
sub
cmp
psubd
lods
cld
sbb
insb
gs
cmp
mov
xchg
sbb
mov
or
or
adc
push
mov
cmp
mov
mov
jp
xor
mov
inc
cmp
and
mov
inc
adc
test
icebp
jno
stos
out
sti
leave
and
ret
mov
andb
ror
push
jle
and
loopne
fstl
fiadds
sbb
sbb
out
mov
int3
jne
popf
fiaddl
cmp
sbb
pusha
aad
push
in
repnz
mov
pop
xchg
fsubrl
les
or
aas
and
push
add
xchg
xor
xchg
rcr
shrl
jg
sbb
jmp
or
mov
ret
push
xlat
cld
adc
xchg
xchg
inc
popa
daa
fnstcw
jb
inc
sbb
mov
into
outsb
lret
cmc
cmc
push
jle
pop
pusha
dec
fldl
jb
mov
cli
fiadds
hlt
add
inc
arpl
lahf
ret
rorb
push
adc
xchg
ljmp
ljmp
push
repz
fidivrs
sub
adc
lock
js
cmp
ljmp
dec
bound
iret
outsl
cmp
mov
push
xor
cmc
lea
jne
mov
xor
andl
fistpll
fldenv
sbb
xchg
cmc
testb
mov
pop
mov
scas
cmp
cltd
mov
push
mov
xchg
pop
into
stos
es
clc
xchg
mov
push
inc
dec
nop
xor
pop
mov
add
lret
ret
cltd
jo
cmpsb
mov
test
in
inc
aad
mov
push
lcall
ss
lret
lret
pop
das
lahf
jnp
fbld
and
ret
add
and
je
pop
int3
jle
rolb
fildl
out
imul
ds
testl
mov
sbbb
enter
movsl
and
inc
push
sub
scas
gs
add
jmp
jnp
in
jle
pop
jae
repz
xor
mov
orb
out
xor
fstps
out
dec
and
sbb
jae
call
int3
icebp
stos
push
and
fcoms
add
mov
insb
inc
ja
aaa
xchg
pop
loop
add
mov
cmp
loopne
mov
xchg
adc
jb
jp
lds
inc
lods
dec
add
xor
fidivl
mov
cs
mov
popa
ret
xor
or
out
jg
iret
iret
add
shll
push
test
sub
in
dec
shll
rcr
mov
setns
and
dec
sarb
xor
bound
mov
pop
or
cmc
arpl
into
clc
les
hlt
add
mov
inc
xchg
addr16
movsl
xor
or
xchg
inc
aas
sbb
outsb
pop
les
pop
lea
aad
insb
loope
mov
jecxz
xchg
mov
push
imul
xchg
add
ds
mov
inc
or
wrmsr
pop
repz
jns
into
inc
cwtl
jns
in
pop
loope
adc
test
sbb
and
ss
add
ret
sub
jle
sub
inc
ja
in
cli
xchg
mov
int
xchg
mov
and
dec
or
cmp
stc
add
push
jge
stos
outsl
cwtl
es
mov
cld
xor
xlat
insl
cmpsb
pop
bound
push
scas
adc
sub
xchg
mov
in
push
enter
lods
xchg
es
vpmacsdql
xor
ja
fisubl
mov
jmp
addl
cmpsb
mov
fldl
xor
add
out
xchg
jbe
mov
fbld
movsb
mov
xchg
lea
xchg
or
js
push
push
push
jno
mov
mov
pop
orl
jnp
shll
daa
in
sub
outsl
shlb
inc
sbb
mov
sbb
xchg
push
test
xchg
mov
mov
mov
jg
iret
dec
jb
lret
cmp
fisttps
mov
sub
jae
lock
sub
sbbl
fwait
xorb
call
mov
jl
dec
push
and
fsub
push
mov
mov
jg
shlb
push
lds
in
mov
int
xchg
add
outsb
imul
and
xchg
and
inc
adc
test
test
pop
cmc
sar
scas
xchg
jno
sbb
sub
jne
outsl
aas
pop
std
sub
pop
jle
lods
mov
pop
mov
scas
adc
in
dec
mov
ffree
bound
push
mov
xchg
jmp
xor
lds
aas
ret
or
or
sbb
aaa
aad
loope
pop
jbe
fistps
je
fiaddl
mov
clc
insb
gs
inc
push
andl
dec
pop
pop
sti
xrelease
dec
addl
das
inc
jmp
pop
jg
jnp
push
jo
sub
data16
aad
or
aam
dec
mov
push
push
in
pop
pop
cmp
sarl
ficoms
mov
sub
ds
cmp
push
in
mov
pop
out
and
test
sbb
xor
mov
push
fistpl
add
rolw
das
lret
test
cmpsl
jmp
das
int3
xchg
xor
jge
subb
shl
lods
lahf
xchg
cwtl
aad
jo
xor
ret
and
mov
push
sbb
ljmp
mov
cltd
lods
xchg
cld
fisubl
and
ja
sbb
mov
test
mov
imul
and
jmp
xchg
clc
sahf
std
pop
scas
pop
pop
fsubr
int
fdivrl
js
pop
xchg
and
js
mov
jae
push
sbb
dec
push
mov
test
pushf
push
loope
fxch
xchg
xchg
inc
pop
popa
inc
outsl
mov
jecxz
or
cwtl
outsb
cmpsb
das
test
loope
icebp
mov
dec
adc
ret
and
cmovb
jmp
and
dec
jns
inc
lahf
push
adc
js
pop
jg
fwait
pop
clc
sub
xchg
inc
in
xchg
pop
push
push
mov
int
icebp
push
mov
sub
dec
lcall
dec
clc
decb
int3
inc
lcall
popf
or
dec
inc
push
add
adc
mov
lcall
xchg
loope
iret
sub
cli
lea
cli
or
pop
sbb
lds
push
insl
xchg
push
insb
pop
data16
rorl
and
inc
jg
fcompl
dec
pop
insl
mov
out
jnp
lea
addr16
adc
fwait
mov
es
xchg
aas
enter
lret
outsb
lcall
sbb
mov
add
inc
and
movsl
mov
mov
jae
mov
pop
clc
xchg
mov
mov
or
out
stc
jl
ret
push
sbb
or
jmp
insl
inc
mov
fwait
push
outsb
fidivrl
mov
adc
xor
dec
adc
ljmp
sbb
jne
pop
aaa
lcall
sub
sbb
add
es
mov
adc
add
iret
jge
sub
andb
sbbl
or
mov
xor
and
clc
jo
mov
ds
mov
jnp
ja
xor
test
leave
addb
pop
mov
pop
das
jno
and
jle
mov
or
loope
lret
xchg
sbb
mov
or
jl
xor
out
in
mov
dec
out
mov
cmp
clc
ret
pop
dec
xchg
mov
shlb
lea
pusha
pop
pop
mov
xchg
pop
cmp
pop
mov
fnstenv
sahf
lret
mov
test
shl
jge
pop
inc
iret
pusha
jl
pop
fsubl
mov
sbb
arpl
aas
stc
addr16
jle
push
sahf
mov
or
in
stc
dec
add
sbb
xor
or
scas
jae
push
insb
jmp
cmp
aaa
push
pop
pop
sbb
in
aad
insb
sti
mov
stos
popa
xor
push
gs
stc
or
into
or
mov
lret
dec
push
add
cmp
jns
push
inc
jle
int3
aad
mov
lret
sbb
lds
inc
xchg
pop
and
in
inc
sub
in
out
or
lea
xlat
jns
mov
fld
cwtl
das
sbb
xlat
sub
push
mov
mov
xchg
add
dec
loope
shlb
adc
sbb
data16
ret
inc
lods
shrb
bound
push
ret
jl
or
mov
int3
cmpsl
xchg
out
mov
ret
pushf
or
inc
add
daa
pop
fnsave
mov
xor
or
dec
insb
imul
out
push
sub
jge
mov
mov
pop
sub
int
or
or
fucom
push
loop
pop
cli
mov
mov
push
mov
mov
pop
and
jnp
xchg
and
in
dec
cld
or
repz
dec
jnp
test
rcrb
shlb
fiaddl
cltd
push
adc
clc
jae
pop
or
mov
mov
or
fwait
cmc
push
pop
sub
sub
sub
jo
imul
mov
clc
mov
outsb
adc
incb
cmpsl
mov
shl
lahf
pop
lahf
cld
push
xchg
je
rorb
dec
mov
stc
adc
lret
test
les
mov
adc
in
pop
jb,pn
inc
shr
xor
lahf
jmp
popa
mov
sbb
push
inc
testb
int3
mov
inc
fiaddl
xorl
addr16
hlt
xchg
loope
scas
dec
cmp
inc
mov
bound
xchg
in
mov
insl
fadds
mov
sbb
xor
pop
push
fldt
adc
pop
ds
ret
push
push
xor
push
sub
aad
pop
mov
jl
loopne
pop
push
sbb
xor
push
push
arpl
push
xor
js
arpl
add
xchg
gs
or
jno
aam
jp
addr16
stos
jge
adc
inc
cltd
xchg
xchg
pop
lcall
xor
ss
icebp
popf
cmp
fwait
sti
scas
xor
rol
sub
mov
and
and
js
fstpl
push
add
inc
push
fadds
push
bound
sbb
lret
cwtl
xchg
pop
outsb
ljmp
lea
xor
jb
pop
or
bnd
mov
xor
inc
xlat
jmp
jge
mov
xor
cs
adc
stos
xor
cmc
rcl
int
out
fsts
orb
dec
add
add
inc
ret
popf
jb
lods
arpl
aas
fists
or
jecxz
imul
std
mov
lahf
cmpb
ljmp
cmpsl
scas
mov
sub
or
decb
cli
es
idiv
ret
mov
popf
es
mov
push
insb
push
sbb
je
xchg
xor
sti
mov
negb
adc
lods
push
sub
mov
mov
test
xor
sbb
in
loop
xor
sub
mov
mov
inc
icebp
mov
dec
inc
mov
push
mov
loop
ljmp
pop
ds
pop
and
loope
jmp
test
into
sub
int
call
or
mov
dec
xor
je
and
jb
insl
clc
or
fcmovb
int
lcall
aaa
sti
shll
sbb
mov
and
rcrl
lret
cmp
cmp
mov
roll
sub
sub
inc
inc
je
sahf
pop
push
jae
arpl
clc
jnp
xlat
pusha
add
and
mov
test
pushf
test
push
cmp
pop
enter
add
ror
mov
sub
mov
push
repnz
xchg
loope
jb
xchg
and
jno
xchg
push
test
lcall
and
arpl
rol
pop
and
sbb
push
jmp
mov
push
in
out
int3
mov
cwtl
orb
inc
nop
popf
sbb
mov
xor
jp
icebp
adc
xor
dec
clc
jge
dec
mov
sbb
add
inc
fwait
jb
mov
sarl
push
pusha
mov
pop
cmp
in
lret
xchg
adc
inc
sbb
int
loopne
xor
inc
aaa
sub
movsl
notl
adcl
sub
daa
lock
shll
arpl
rcrb
sub
add
cltd
cltd
ret
inc
jg
add
mov
leave
adc
pop
insb
pusha
and
add
fldcw
push
nop
loope
add
push
dec
nop
mov
movsb
and
shr
push
sub
jl
rcrb
and
pop
ds
jbe
shl
cmp
fcoml
or
adc
pop
je
cmp
dec
out
ss
mov
jge
shlb
bound
out
stos
sahf
lahf
jb
mov
xor
dec
jb
cltd
mov
addr16
pop
into
dec
sub
outsl
mov
pop
pop
cvtps2pd
imul
cmp
sbb
sub
insl
push
stos
out
jbe
mov
lods
xor
cmp
js
sbb
into
sub
testb
cmp
outsb
arpl
fadds
sbb
cli
or
lds
push
dec
sub
sbb
fimull
mov
lret
stc
pop
fwait
std
xchg
fidivrl
sbb
or
in
lods
mov
or
mov
repnz
popa
fcmovbe
addr16
cmp
fcoms
jb
push
push
pop
push
add
sbb
jns
jle
testl
and
sub
sbb
push
aas
inc
enter
movsb
jmp
xor
cmpsl
hlt
sarl
mov
xchg
mov
inc
rclb
jne
adcb
or
and
and
aaa
pop
mov
pop
jmp
xchg
popl
pop
push
mov
imulb
mov
nop
neg
stos
adc
int3
repz
cmp
mov
mov
test
stc
int3
push
out
into
add
push
add
adcb
xchg
adc
mov
sub
insl
lods
mov
ja
cli
add
cmp
dec
fbstp
popf
dec
into
lods
bound
inc
jmp
sub
or
sbb
dec
testl
fsubrl
jno
enter
mov
mov
test
test
aas
out
add
add
xchg
push
dec
push
out
jns
pop
enter
push
clc
lret
orl
pop
cmp
andb
add
iret
xlat
push
mov
dec
test
pop
mull
adc
adc
and
cwtl
xor
jne
adcl
jne
mov
cmc
test
and
test
mov
in
sub
inc
dec
movsb
int3
jnp
jmp
orl
xor
xchg
adc
inc
rdtsc
ret
pop
lret
inc
add
or
fisttps
inc
dec
mov
adc
das
and
jae
cmpsb
cmp
xchg
inc
adc
mov
pop
adcb
inc
std
dec
xchg
dec
cmp
popf
sbb
xchg
imulb
loop
and
inc
arpl
sbb
mov
scas
int3
lret
xchg
sbb
mov
das
scas
xchg
pusha
adc
ja
pushf
mov
and
out
lea
cltd
add
adc
mov
in
pushf
mov
fcmovbe
arpl
cwtl
enter
addr16
ja
scas
and
icebp
clc
lcall
xor
imul
jmp
fidivl
adc
mov
fst
push
mov
xor
cwtl
inc
jne
or
repz
mov
pop
dec
or
or
pop
sub
cld
xchg
test
sub
clc
or
adc
mov
mov
in
test
cmp
in
cmpsl
clc
xor
fistpl
outsl
sub
mov
jno
xchg
pop
popa
sub
push
lea
fidivrl
mov
inc
movsl
inc
sbb
mov
fucom
jg
mov
xor
sub
std
mov
mov
or
fdivrs
push
jmp
das
fstl
mov
add
mov
loop
xor
addb
insb
into
dec
ficoml
and
inc
xchg
je
cmp
mov
xchg
arpl
andl
push
cs
cwtl
mov
jecxz
xchg
jb
aas
mov
cmp
push
incb
stc
mov
push
jl
lahf
xchg
lods
jns
push
pop
mov
adc
and
aam
inc
loop
data16
cmp
ret
sbb
scas
xchg
das
jne
push
mov
cmp
cmpl
add
mov
pop
xor
je
cmp
mov
adc
mov
push
add
jg
sub
dec
in
mov
nop
mov
subb
movsl
pusha
fstl
inc
in
arpl
jnp
jne
out
jmp
data16
rclb
xor
push
jle
std
jg
xchg
loop
outsb
mov
mov
cs
xor
cwtl
inc
adc
xor
shll
dec
enter
pop
add
cltd
aaa
xlat
iret
add
fistps
stos
adc
xchg
add
mov
roll
insb
fwait
xlat
imul
or
adc
dec
pop
scas
adc
das
jbe
ss
leave
cld
xor
iret
jle
mov
int3
xchg
inc
mov
gs
sub
xchg
pop
add
adc
mov
dec
mov
mov
stc
jns
add
jg
xchg
inc
mov
xor
inc
lods
iret
addr16
scas
or
jecxz
pop
cmp
pop
jge
insl
cmp
adc
popf
loop,pt
aaa
mov
int
loop
sub
push
fldcw
add
decb
lea
mov
push
movsl
jl
jl
fs
movsl
lret
movsl
fisubrs
or
mov
sbb
int
loop
lds
stc
add
mov
dec
inc
icebp
sub
fs
mov
dec
rcll
and
fidivrs
mov
ficoml
sbb
jecxz
mov
pop
mov
inc
dec
popf
dec
sub
out
or
inc
es
inc
cld
mov
adc
xchg
stos
mov
jno
dec
imul
pop
lock
fucomi
fcompl
mov
dec
js
sub
mov
ret
arpl
lea
fnsave
jecxz
fwait
addr16
cmp
out
dec
stc
sub
lret
adc
or
fwait
clc
or
xchg
jp
lahf
ficomps
icebp
mov
stos
mov
imul
push
sub
cwtl
into
cli
or
sub
adc
mov
jb
mov
mov
je
xlat
popl
and
out
cmc
mov
inc
or
inc
mov
aad
inc
ret
aad
mov
idivb
fcmovnu
jo
test
ret
je
mov
push
or
push
lret
add
jne
bound
pop
decb
je
call
orl
jae
repnz
and
push
enter
lret
cmp
pop
cwtl
inc
aad
push
or
lret
push
inc
inc
mov
xchg
push
push
ficoml
cltd
sub
cmpsl
mov
dec
iret
sub
pushl
mov
addr16
add
imul
adc
jae
xchg
loopne
fcomps
into
add
dec
pop
loop
sub
test
pop
mov
push
cld
pop
lds
push
sbb
dec
bound
mov
lods
cltd
mov
jae
dec
nop
rolb
cld
push
cmc
test
mov
push
mov
adc
mov
leave
loopne
inc
sub
xlat
jp
cwtl
mov
call
sbb
xchg
or
loope,pn
out
lods
push
mov
cltd
sbb
scas
stos
iret
push
jecxz
popa
dec
cmp
push
dec
outsl
sub
push
les
or
inc
mov
jae
mov
mov
mov
mov
cmpsl
std
adc
lock
mov
inc
pop
push
mov
sbb
fidivl
pop
loopne
repz
pop
fucomp
push
or
popl
xchg
loopne
xchg
loopne,pt
pop
adc
cmp
out
fistpll
mov
lcall
sub
xchg
sbb
orb
cmp
push
adc
xchg
iret
fstpt
mov
sbbl
repz
push
mov
sbb
dec
cld
inc
jbe
cli
inc
inc
pop
push
mov
pushf
ficoml
cmpsb
jbe
mov
xchg
adc
sub
and
lods
adc
dec
shlb
jo
scas
fisttpll
add
pop
fcompl
dec
nop
mov
ljmp
mov
clc
dec
cmp
xor
adc
pop
add
aam
xlat
pushf
sbb
imul
cmp
jle
sbb
push
lret
cld
in
cltd
out
cmc
insb
fdivrp
dec
ret
push
out
adc
stos
adc
imul
xchg
or
fsubrp
mov
cltd
lock
xor
pushf
lahf
pusha
and
push
jb
xchg
lret
add
xchg
cmp
push
clc
cli
cmp
test
xlat
mov
fwait
dec
cmpsb
insl
mov
test
insl
pop
push
out
outsb
jae
fmul
or
in
imul
lods
subb
js
mov
addb
or
in
movsb
xchg
lret
inc
cwtl
mull
cmp
daa
ljmp
xor
andb
int
jb
cmp
dec
jmpw
jno
inc
les
repnz
fsubs
inc
lods
movb
iret
aaa
gs
adc
xchg
add
rcll
psrlw
pop
ljmp
push
sbb
pop
loope
xor
xchg
add
fldt
add
mov
or
jecxz
js
xchg
ss
insb
inc
cs
mov
aas
pop
and
mov
cmp
pop
xor
lock
out
adcb
or
vmwrite
xchg
mov
add
js
jl
popa
out
bound
int
sub
cmpb
enter
stc
insb
cmp
jl
hlt
rclb
inc
dec
fnstcw
mov
ret
aas
xchg
pop
scas
adc
mov
femms
sub
sarb
fwait
movsl
or
data16
mov
push
sub
adc
jecxz
or
xchg
fs
in
ret
jbe
xor
aam
pusha
xor
popa
out
loope
orl
sbb
imul
or
mov
add
andb
cmp
adc
pop
ret
sub
test
xchg
int
sbb
sbbl
insl
or
or
and
cmpsl
pop
add
outsl
sub
push
ror
test
ret
xchg
xchg
jmp
xor
or
lcall
mov
xchg
fiadds
mov
popa
mov
stc
jecxz
sbb
jecxz
push
push
sbb
mov
xor
jnp
add
mov
rcrb
xchg
inc
xchg
jns
jl
shld
xlat
aas
ja
hlt
out
pushf
xorb
sbbb
popa
imul
cld
and
fadd
xor
jae
sbb
rcrb
dec
sbb
inc
testb
fstpt
bound
test
inc
xchg
orl
out
jle
loop
adcb
cli
addr16
cmp
stc
pop
test
sub
or
mov
das
cmp
push
add
push
ss
add
fsubs
jecxz
loopne
fsubr
mov
aas
mov
pop
push
or
ret
sub
enter
sub
repnz
sub
sbb
jno
aam
jmp
imul
js
cmp
pop
stc
call
in
xchg
xchg
xor
aam
cld
in
fsubrs
mov
add
loop
fcomp
into
insb
lods
sub
push
push
bound
dec
cmp
or
xchg
or
stc
ficoms
sbb
add
lods
or
and
shll
aam
mov
cli
iret
adcb
push
ja
daa
fsubr
popa
fmul
jbe
cmp
add
sub
mov
int
rcll
mov
inc
aaa
pop
imul
adc
or
divl
mov
in
imul
pop
pop
jne
adc
adc
lods
mov
mov
stc
pop
pop
push
je
sub
fwait
movsl
lea
push
fistl
lods
inc
xor
or
fbld
add
iret
mov
test
repnz
call
lock
inc
xchg
cld
push
jbe
inc
ljmp
mov
mov
inc
mov
lea
jecxz
add
xchg
ds
int
aad
lea
push
rcll
pop
push
jp
sub
dec
out
inc
mov
push
out
mov
cltd
inc
movsb
and
jmp
mov
sbb
stc
xor
dec
xor
pop
fwait
pop
popf
jnp
loopne
std
sarl
lcall
push
dec
ret
inc
lret
aad
xchg
outsb
lock
js
sub
xchg
jne
aad
lea
pushf
je
mov
lret
sub
jo
mov
and
ja
add
ret
xor
or
pop
mov
mov
je
cmpb
jp
sbb
pop
mull
fisubs
inc
adc
dec
mov
in
out
inc
jle
add
icebp
add
popa
cmp
inc
mov
dec
call
ret
jo
fdivs
mov
cs
sbb
cld
sub
xor
andl
mov
lcall
pop
inc
fisttpl
cld
xchg
gs
cld
jge
inc
sub
fildl
and
adcl
in
and
adc
jg
push
mov
dec
sub
frstor
jns
xor
jns
mov
push
push
mov
push
imul
loope
jl
loopne
adc
mov
or
repnz
ljmp
mov
dec
xor
mov
lea
stos
ror
pusha
xchg
cmp
shr
dec
push
dec
mov
movsl
sar
mov
pop
mov
andl
mov
mov
push
xchg
xor
pop
sub
mov
fnsave
aad
push
loop
mov
mov
push
push
ret
sbb
pushf
lock
movsb
pop
add
xor
xchg
dec
out
jge
pop
in
add
mov
das
ret
das
out
jg
jae
stc
adc
test
sbbb
out
leave
dec
popf
outsl
adc
shl
daa
movsb
sbb
adc
mov
push
mov
lret
mov
xchg
sub
inc
jmp
dec
ljmp
in
jbe
stos
push
in
sbb
fistps
pop
test
mov
mov
mov
xchg
xor
movsl
cmp
sbb
jbe
icebp
cmp
lret
adc
les
mov
dec
lods
ret
fmull
jmp
mov
xor
mov
sbb
mov
cmp
xor
outsb
les
data16
mov
mov
or
roll
aas
cmp
adc
fldcw
test
sbbb
dec
in
sbb
dec
je
adc
sarb
inc
lcall
mov
or
test
xchg
int3
sub
mov
dec
bound
scas
xor
cmp
push
sub
test
pop
sti
xchg
xchg
xchg
add
in
inc
cs
or
mov
mov
movsl
cli
jae
test
cwtl
bound
test
in
pop
enter
aad
mov
adc
outsb
mov
push
cmp
mov
pop
stos
iret
ret
out
adc
adc
push
push
ret
mov
xchg
mov
cmpsb
lods
pop
jno
or
jno
sub
and
pop
pop
fidivrs
in
test
adc
xor
pop
adc
xor
outsl
pop
sub
fstpt
pop
mov
icebp
sbb
or
xchg
js
jge
daa
mov
mov
jno
test
push
cli
cltd
inc
lret
inc
push
sahf
in
bound
and
add
sti
jmp
and
pusha
fsubrl
xchg
insb
cmp
push
push
sbb
add
or
decb
fcmovu
mov
out
iret
mov
stos
sub
repnz
gs
xor
push
test
pop
push
dec
aas
pop
mov
cmpsl
aas
call
dec
cmpl
inc
adcl
addr16
or
mov
adc
je
xchg
fdivs
xchg
adc
xchg
push
ds
pushf
xchg
xor
mov
inc
xchg
jecxz
cmpsl
lcall
mov
mov
stos
xchg
add
xor
push
outsl
cmpsb
lcall
je
xor
adc
xchg
sbb
add
fists
inc
add
pushw
dec
fldenv
iret
les
cmp
dec
inc
jo
sub
lret
adc
repz
insl
lds
js
sub
jno
adc
test
jnp
lds
push
loop
pop
xchg
push
xor
dec
pop
loope
mov
out
xchg
jae
jbe
add
push
xor
mov
xchg
insl
or
comiss
std
inc
testl
mov
call
or
dec
mov
mov
adc
out
xor
adc
rclb
insb
adc
ja
sbb
ss
pop
xor
sbb
add
or
adc
adc
xor
dec
dec
outsl
lret
aam
push
pop
lahf
jb
aas
cmpsl
inc
mov
pop
in
mov
push
push
xchg
lea
decl
sub
mov
scas
inc
inc
jbe
rolb
add
cmp
subb
int
adc
cmp
outsl
xor
fisttpll
cmp
loopne
repz
xchg
xchg
mov
sahf
adc
int
int3
jae
dec
jmp
lds
pop
or
adc
idivl
xchg
lods
int
nop
fistl
aad
ficomps
jl
in
mov
adc
addr16
sahf
ljmp
add
add
ljmp
popa
arpl
rorl
and
cs
xchg
xchg
pop
and
stos
sbb
in
imul
cmp
inc
cmc
jnp
sub
fnsave
pop
outsl
sbb
outsl
in
pop
adc
adc
xchg
and
icebp
ds
sbb
loope
int
xor
push
dec
xchg
pop
mov
add
and
lock
xorl
aaa
arpl
js
jge
call
es
roll
iret
fcoms
cltd
mov
add
sub
enter
add
mov
mov
cmp
les
add
sub
int
imul
pop
adc
inc
add
shlb
arpl
xchg
lea
lret
mov
fmul
push
aaa
mov
fs
mov
adc
xor
cmp
insl
sbb
push
fwait
les
sub
jno
mov
cmc
icebp
sahf
mov
js
daa
es
pop
addr16
cmp
add
sti
xchg
add
add
clc
cli
test
push
pop
popa
jns
add
mov
arpl
pop
imul
cmp
stc
push
mov
stos
imull
ds
inc
mov
in
out
fwait
pop
insl
jl
imul
clc
test
mov
cltd
dec
xor
cmpsl
cmp
inc
add
cmc
mov
inc
cmp
mov
cmpsl
xlat
aam
arpl
mov
inc
cmp
cmp
test
imul
adc
mov
bound
sub
jmp
iret
js
aaa
adc
jmp
out
stc
in
xchg
adc
mov
mov
outsb
jge
push
in
lret
in
lahf
and
sarb
lods
and
imul
mov
mov
sbb
mov
mov
xor
je
out
mov
sub
xor
xchg
lret
add
repnz
cmp
mov
adcb
fs
cli
in
jg
iret
and
xchg
pop
inc
xchg
jg
mov
ret
dec
mov
xor
pop
push
mov
bound
add
xchg
mov
xlat
xor
jo
push
mov
cs
hlt
inc
pop
pop
or
cs
adc
sub
daa
and
es
jg
mov
and
daa
es
call
xchg
loopne
sbb
pop
lret
aaa
mov
push
stos
es
mov
mov
push
scas
jo
dec
cli
push
roll
popf
xchg
ljmp
ffree
pop
repnz
add
addr16
test
ret
in
loopne
and
xor
mov
or
lock
ljmp
movsl
adcb
ss
test
cmp
lods
or
in
push
stc
mov
rorb
adc
xlat
lea
pop
mov
dec
test
fstpt
push
push
leave
icebp
xchg
jle
andl
mov
fs
ljmp
inc
out
cs
fidivrs
rcl
xchg
stc
dec
jle
cmp
and
xor
jmp
cmpsb
mov
sbb
dec
enter
adc
hlt
lock
pop
mov
stos
out
leave
add
iret
mov
or
insl
out
inc
insb
or
fwait
stos
jecxz
dec
hlt
add
jp
sti
aad
popa
lcall
aad
outsb
xchg
out
inc
mov
aam
scas
dec
test
push
jl
cmp
xchg
stc
test
icebp
popa
mov
xchg
rcrl
cmpl
pushf
mov
outsl
pop
cmp
aas
daa
mov
fsts
inc
dec
mov
cmc
cmp
lea
es
imul
mov
lods
sbb
stos
cmpsb
fwait
sub
pop
shll
and
mov
mov
xchg
es
mov
sbb
pop
adc
ficomps
lahf
in
js
jne
sbb
inc
pminub
loop
pushf
jno
push
and
jae
jb
into
sub
inc
push
mov
adc
push
cmp
dec
aaa
pop
mov
mov
jno
ret
nop
mov
arpl
in
mov
mov
jnp
sub
jecxz
out
xor
ljmp
add
repnz
repz
hlt
inc
loopne
insl
scas
arpl
mov
cmp
sti
int3
sub
add
lods
test
sahf
xor
mov
out
adc
div
js
mov
pop
test
fcomps
xor
xor
mov
xchg
and
mov
mov
fidivl
sbb
nop
addl
xchg
decl
mov
sahf
loop
pop
dec
fistps
mov
add
pop
mov
insb
xlat
rol
mov
xchg
cmp
sbb
gs
mov
bound
mov
and
push
lahf
xchg
add
cld
cmp
xorl
leave
dec
shll
jbe
lret
sub
adc
push
and
xchg
hlt
lahf
mov
scas
xor
mov
push
subl
imul
leave
shl
push
sar
adc
sarb
fistps
es
xchg
repz
pop
movsb
ret
in
pop
mov
in
daa
rorl
int
push
out
cltd
int3
xchg
mov
in
mov
mov
jne
popa
lock
push
or
or
jmp
cmp
pop
add
sub
aam
pop
jmp
lods
pop
mov
sub
push
inc
rcl
in
mov
lods
push
mov
push
adc
pop
push
js
sbb
adc
jns
jne
cmp
lods
dec
mov
test
lods
jb
bound
mov
into
adc
xlat
push
dec
mov
scas
stc
mov
xor
insb
mov
sahf
addr16
lods
int
out
leave
and
xchg
call
stc
inc
cmpsl
cmp
scas
push
out
inc
push
xlat
cmp
lea
shlb
clc
ss
pop
pop
js
xchg
or
jne
sub
enter
xchg
or
pusha
rcr
mov
inc
das
decb
cwtl
je
stos
shl
add
fsubrs
mov
lret
or
jne
mov
hlt
maxps
loopne
aaa
cld
shlb
dec
fstpt
pusha
xchg
cmp
inc
aas
adc
pop
imul
dec
ja
in
ficompl
or
mov
leave
sub
or
mov
adc
mov
int
adc
ss
jae
js
mov
add
cmp
jmp
clc
xchg
ja
popf
arpl
cmpsl
shl
sub
stos
ja
dec
dec
mov
bound
sbb
movsb
addr16
jge
mov
inc
xlat
stc
outsb
add
xchg
mov
mov
adcl
std
cmp
incb
loop
mov
mov
test
outsl
outsl
addb
test
icebp
ja
pusha
sub
lahf
ficoms
adc
lret
je
inc
push
xchg
fbstp
jecxz
sub
testb
jle
jns
sbb
adc
dec
lcall
or
aad
loope
ds
mov
inc
sbb
pop
cmp
mov
in
repnz
xchg
or
cld
jno
mov
or
gs
add
fsubl
sub
aaa
ds
add
cmp
inc
nop
movsl
mov
lcall
pop
xchg
mov
add
inc
fistpll
jge
iret
sub
cwtl
loope
or
and
rcll
mov
je
mov
dec
mov
jne
out
pushf
push
lods
pusha
cltd
inc
in
shr
push
sbbl
add
in
push
lods
jle
mov
push
sbb
jmp
aam
sahf
ljmp
lret
iret
inc
arpl
lahf
sbb
add
popl
nop
jnp
ds
orb
lret
out
pop
enter
mov
nop
in
loopne
lret
xchg
es
movsb
cmp
gs
popf
pop
add
movb
shr
push
pusha
xorl
cmpsb
adc
aad
popf
lds
pop
and
subl
out
out
adc
inc
mov
rol
cmc
push
stc
pop
mov
in
adc
pusha
addb
sahf
out
jne
and
jae
fwait
sub
fildll
test
or
adc
movsl
shl
fs
mov
das
pop
sub
pushf
daa
jmp
xchg
sub
ja
daa
push
sub
dec
push
add
subb
jecxz
and
mov
push
adc
loope
sub
gs
push
mov
repnz
cmpsl
adc
mov
pop
xor
outsl
or
or
dec
sbb
xchg
fldt
lds
fwait
imul
jecxz
mov
in
das
mov
jnp
push
add
push
ljmp
and
std
mov
cmp
stc
xchg
pop
rcll
stc
xchg
mov
lods
movsl
fdivl
xorb
int3
arpl
lret
daa
sub
inc
in
insl
xor
ret
lods
dec
lcall
insl
ljmp
fists
shll
inc
push
jns
inc
dec
je
xor
fcomi
inc
adc
or
mov
shlb
nop
and
sbb
ss
mov
in
popf
mov
cmp
sub
mov
xchg
and
imul
cmpsb
lret
pop
sbb
ss
fidivs
divb
cmp
es
dec
lds
fiaddl
frstor
les
cmc
sahf
pop
data16
sub
test
mov
cmc
gs
or
mov
pop
inc
adc
cmp
scas
xchg
dec
dec
jo
pop
push
inc
gs
stc
jbe
out
or
mov
cli
inc
jmp
push
jb
enter
cmp
ljmp
movsb
cltd
imul
imulb
pusha
jl
fiaddl
ss
lods
add
mov
outsb
test
pop
pop
out
jae
icebp
xchg
push
loope
lret
jbe
push
push
xor
xchg
repz
lahf
in
mov
movsb
push
sbb
imul
lret
mov
xchg
lret
mov
test
cmpsl
repnz
daa
leave
stos
insb
scas
sub
stos
dec
dec
std
mov
inc
je
test
std
xchg
daa
mov
bound
mov
fistpl
or
sbb
test
rcrb
xor
xchg
and
call
cmpl
cli
mov
rorb
xchg
mov
mov
aaa
sbbb
test
add
sub
fs
xor
lds
inc
add
sub
jg
out
cmp
and
sub
clc
movsb
pop
mov
adc
mov
stc
cmc
sub
jns
mov
outsl
fmuls
sahf
or
iret
leave
test
cwtl
loope
cmp
fst
pop
jno
shll
jmp
add
and
mov
and
jne
filds
pop
cmp
xchg
cmp
in
jecxz
sti
mov
and
push
in
movsb
pop
cmp
lods
in
iret
sbb
lret
xchg
cmp
mov
js
ficompl
fidivrl
xlat
xchg
add
outsb
cmpsb
push
hlt
imul
jecxz
push
add
dec
ja
push
or
push
jmp
jge
xchg
sub
dec
iret
jne
movsb
aad
pop
mov
sahf
sbb
adc
sub
test
dec
pusha
imul
pusha
xor
hlt
mov
mov
adc
leave
pushf
xchg
jmp
stos
push
lret
movsl
xor
push
mov
and
imul
adc
hlt
jb
enter
and
gs
lods
fsubrl
push
sbb
cwtl
push
xor
xchg
xor
stos
push
lods
dec
adc
mov
in
gs
xchg
rcrb
push
aam
enter
jmpw
mov
dec
jmp
shll
ja
and
fs
add
mov
lret
jae
mov
nop
sbb
mov
mov
aaa
pop
int3
popf
xor
xor
loopne,pn
jo
mov
jg
lahf
faddl
sbb
mov
mov
sbb
aad
dec
xchg
aas
lods
test
movsl
add
pop
jns
sarl
and
add
fnstcw
insb
outsl
test
dec
lods
hlt
in
add
test
add
mov
mov
jmp
mov
lret
jl
xchg
jg
mov
jne
leave
mov
mov
cwtl
pop
out
stos
scas
jecxz
pop
leave
pop
idivl
imul
sbb
pop
pop
popa
adc
mull
lret
mov
clc
mov
shll
mov
cmp
push
sub
inc
sbbb
outsb
xor
sub
insl
sahf
xor
shll
mov
aaa
stos
push
xor
add
pop
sub
std
gs
xor
push
std
je
leave
jmp
outsb
sub
and
scas
jp
mov
xchg
loopne
push
pop
test
sarl
ret
bound
test
add
dec
inc
cmp
dec
push
mov
pop
lds
insb
mov
mov
cltd
sbb
mov
pop
inc
push
out
insb
xor
xchg
faddl
mov
xchg
out
sub
jnp
mov
loope
fiadds
lcall
pop
mov
add
shrl
shl
push
sbb
or
test
ljmp
incb
sti
adc
add
or
hlt
mov
or
loop
test
decb
pop
ds
inc
jnp
inc
loopne
ret
xchg
jp
pusha
fsubs
dec
or
std
lea
xor
nop
xor
int3
xor
sub
push
sub
int3
sti
pop
int
add
mov
mov
xor
adc
dec
sbb
pushl
xchg
adc
icebp
stos
mov
and
int3
lods
dec
ret
addr16
mov
mov
lret
xor
icebp
fimuls
jae
pusha
pop
int3
cli
pop
xchg
outsb
das
xchg
call
jbe
loop
rolb
jb
movsb
pop
scas
stc
mov
and
cmp
mov
es
imull
cs
dec
dec
sub
mov
xchg
lods
mov
sub
xchg
sbb
mov
push
push
lret
jno
jae
pop
fdivrl
pop
faddp
in
adc
xchg
lcall
adc
lea
stc
mov
mov
out
xchg
lahf
out
push
std
pop
xchg
lds
dec
cmp
lods
pop
mov
xchg
and
cmp
pop
adc
icebp
outsb
lret
arpl
ja
xchg
nop
inc
out
fmul
insb
push
push
jle
test
add
mov
fidivrs
mov
lret
ds
jne
mov
pop
mov
cmp
mov
in
fwait
or
jae
cmpsl
insl
imul
mov
xor
xchg
lds
insb
test
loop
xlat
add
xchg
pop
sbb
pop
mov
enter
in
mov
sub
xor
rcr
sbb
outsb
shrl
add
test
fldl
mov
pop
repz
xchg
push
mov
outsb
inc
sub
loop
and
rcrb
outsl
cltd
hlt
test
dec
push
imul
pop
dec
push
or
out
jae
push
mov
push
enter
out
adc
roll
loop
nop
add
xchg
insl
in
addl
fs
cltd
add
mov
inc
sbb
sarl
cmp
leave
test
int
mov
mov
push
arpl
aaa
cltd
push
inc
sbb
push
test
mov
arpl
push
fstp
cli
sbbl
in
mov
mov
xor
das
or
xchg
imul
jmp
jle
mov
movsl
stos
movsb
sub
jle
ficoms
sub
cmc
cmp
lods
mov
add
notl
nop
les
or
cmp
shl
addl
mov
sub
sbb
nop
cmp
int3
jno
push
loope
sbb
out
in
repz
roll
nop
adcl
addb
in
or
adc
jns
adc
sbb
out
lret
scas
sub
pop
inc
popf
push
loopne
pop
pop
ss
push
sbb
mov
lret
std
je
fcmovnb
sarb
test
pop
in
or
sub
inc
aad
hlt
lea
mov
adc
addr16
loop
sub
sub
lahf
in
popa
jb
enter
mov
mov
xchg
lret
shl
mov
shll
lods
in
out
cmpsl
data16
mov
adc
lret
mov
fcmovnu
cmp
pop
dec
mov
mov
dec
addr16
pop
pop
lcall
test
imul
inc
vpmovsxdq
enter
frstpm(287
cmc
or
sub
popa
pop
add
stos
ret
aam
movsb
cmp
fs
scas
aas
jb
or
push
das
lret
xchg
adc
mov
push
sbb
mov
dec
int
call
pop
sbb
notb
add
rcl
adc
adc
cmp
adc
cwtl
jecxz
jg
movsl
push
jae
xor
imul
mov
jecxz
shlb
icebp
cltd
or
mov
lea
imul
outsl
aas
or
jne
mov
incb
gs
loopne
cmp
adc
mov
insl
jg
push
mov
jecxz
je
add
loopne
mov
cld
gs
loopne
mov
mov
std
adc
fisttpl
mov
xlat
cwtl
mov
mov
cltd
sub
push
dec
rep
ficomps
cmpsb
sbb
mov
out
mov
push
arpl
fldcw
decb
sbb
xchg
jno
push
push
cs
fbstp
push
jmp
stos
in
dec
mov
rclb
adc
js
or
test
xor
cmp
dec
lcall
dec
jne
cmp
cld
sub
inc
add
push
repnz
dec
pop
inc
pop
or
add
pop
cmp
inc
stos
xlat
je
lds
and
test
cmc
mov
cli
pusha
inc
test
mov
xchg
mov
push
and
and
lcall
test
out
sbb
je
mov
xor
cmp
push
push
and
pop
pop
mov
inc
daa
mov
push
or
mov
out
js
loopne
mov
repz
repz
inc
inc
push
insl
inc
cmp
push
cmp
sbb
cltd
jnp
clc
stos
push
in
inc
pmaxsw
push
rcrl
hlt
popa
add
mov
mov
lea
lea
lock
inc
es
jo
push
sub
sbb
in
lcall
push
movb
ds
sub
test
dec
or
pop
lret
xor
xchg
inc
in
cld
repnz
mov
cltd
sbb
mov
mov
push
outsl
lds
sub
push
jmp
test
cmc
pushw
mov
push
add
and
aam
adc
jg,pt
push
pop
inc
jmp
and
inc
jp
daa
nop
out
imul
outsb
dec
mov
int
or
or
inc
mov
add
dec
or
jo
subl
xor
pop
test
mov
popf
mov
aad
push
xchg
sbb
mov
sbb
sbb
pop
push
outsl
cmp
inc
mov
push
gs
fbstp
mul
inc
or
push
dec
outsb
popa
sahf
sti
sbb
leave
rol
out
inc
mov
adc
repnz
add
push
icebp
jmp
mov
in
aaa
sbb
xor
sub
loope
loopne
mov
jns
push
cld
cmp
dec
mov
outsb
in
pop
jbe
or
or
pop
mov
shrl
cmp
mov
push
mov
pop
and
pop
in
pop
in
sub
cld
lds
mov
lret
xor
notb
std
add
fldt
and
mov
in
xchg
push
mov
inc
aam
sub
call
pop
jle
inc
mov
ljmp
and
pushf
xchg
xchg
jne
xor
and
notl
mov
xor
pop
insb
dec
cs
push
fwait
pop
dec
pop
mov
test
sbb
lcall
add
lcall
test
std
fucomp
inc
cli
inc
lds
les
out
loop
jecxz
movsb
pop
jl
in
out
inc
push
mov
loop
sarb
xor
in
pop
mov
adc
popf
dec
or
xchg
mov
rcr
ret
mov
add
mov
fadd
call
lahf
lret
js
sub
lcall
imul
push
mov
hlt
jb
cmpsl
fsubrp
repnz
xorb
and
iret
aaa
shr
mov
andl
xor
nop
cmc
mov
in
icebp
jae
jl
fdivrl
mov
sti
mov
add
js
test
cmpsb
jno
cmpsl
add
jne
lret
ret
jno
inc
inc
scas
add
fsubl
sbb
aam
pusha
and
lret
fistpl
pop
loop
out
mov
pop
outsb
in
pop
cltd
jne
pop
sub
push
lret
xlat
xor
mov
xor
into
sub
cwtl
and
aam
mov
sub
push
lds
inc
aam
cmpb
in
enter
adc
popf
dec
shrb
jne
mov
jl
jp
cltd
jo
and
ret
ds
sbb
cs
iret
lea
fidivrs
mov
cld
stc
add
jns
mov
arpl
or
add
push
cmp
dec
int3
les
inc
out
jge
ja
inc
push
mov
sub
lahf
cmp
repnz
or
xchg
sub
pop
test
mov
js
push
add
and
dec
jmp
push
sbb
rolb
xchg
mov
iret
test
ret
inc
sub
xchg
jle
test
or
sub
lods
int
ficoml
jo
popf
loope
fnstsw
insl
lods
jle
cmp
and
es
mov
sarl
pop
jno
movb
imul
test
jnp
jmp
push
adc
out
fisubl
cmp
push
adc
cwtl
sbb
ja
add
add
lea
fimuls
cld
loopne
pop
gs
ss
cmpsb
and
add
dec
push
test
jmp
lret
rcll
xchg
loope
dec
mov
nop
xor
fstpl
inc
scas
into
aaa
fisubs
xor
imul
cltd
and
mov
mov
scas
ret
stos
sbb
push
fimull
in
arpl
xor
adc
idivb
in
xor
je
mov
sub
test
dec
xor
frstor
negb
stc
out
in
add
sub
imul
shrl
in
cmp
fsubs
fwait
pushf
enter
cli
int3
nop
daa
mov
mov
in
outsl
jecxz
mov
loope
fisttpl
out
mov
adc
into
mov
dec
jns
and
fidivrs
push
mov
hlt
std
inc
inc
lahf
cmp
test
insb
jmp
mov
test
cltd
call
iret
pop
test
test
insb
ret
cmpsb
jne
cmc
mov
lret
sub
push
movsl
mov
mov
sbb
in
fwait
lds
add
sub
sub
outsb
mov
in
push
jl
enter
and
arpl
pop
adc
decl
lds
push
xor
lock
xorl
pop
mov
imul
lods
lea
outsl
fimull
out
or
inc
add
aam
inc
jp
loop
pushf
sbb
or
dec
test
popf
dec
outsb
iret
test
inc
push
dec
mov
mov
pop
sub
sbb
mov
lret
stc
in
movsl
inc
inc
jle
jne
shlb
pop
mov
xchg
cmp
fwait
push
mov
pop
sbb
ret
mov
enter
xor
xor
imul
ror
sbb
xor
dec
lret
push
xchg
jle
mov
adc
iret
and
cmp
bound
xchg
fiadds
js
jb
stos
jl
sub
nop
xor
lret
dec
fwait
jge
sahf
ja
mov
inc
stos
sbb
loope
dec
int3
xor
scas
mov
imul
cmp
jns
shrl
jle
xchg
addl
sti
pop
int3
mov
cmp
into
mov
mov
addr16
cld
in
imul
add
adcb
fisubs
push
into
push
mov
aam
add
push
cmc
movsb
dec
std
sbb
mov
rcrl
xchg
scas
pop
test
testl
dec
add
loope
insl
xlat
sbb
pop
out
inc
push
xchg
jb
push
cmp
lret
xchg
call
adc
js
aam
cmp
pop
leave
lea
out
rclb
clc
out
cwtl
add
cmpsb
nop
ljmp
or
jecxz
daa
insb
jl
out
and
js
fs
cmc
cwtl
mov
sub
std
orl
push
rclb
xchg
and
mov
dec
cmp
nop
or
stos
dec
xchg
pop
jnp
in
mov
dec
adc
imul
shl
fwait
sub
mov
add
jmp
or
das
xor
lcall
test
or
xor
test
jae
cld
mov
add
loop
pop
int3
and
jmp
xor
push
or
inc
mov
dec
inc
inc
jne
cld
fsubrs
out
jae
or
mov
or
lret
adc
sub
inc
fsubrs
xor
xchg
int3
or
push
rcll
jecxz
fisubrl
lock
xchg
aas
or
mov
jb
cmp
add
testl
repz
adc
pop
mov
mov
mov
cli
add
lock
adc
cli
lahf
dec
jae
out
lds
adc
decl
inc
lcall
mov
xchg
popf
mov
mov
jecxz
push
push
psllq
movsb
xchg
stos
cmp
leave
andl
scas
sub
push
clc
cs
sarb
lcall
jmp
and
xchg
mov
mov
jl
sbb
stos
add
pop
fs
xchg
cwtl
push
mov
aam
call
push
data16
test
push
in
pop
repz
cld
xor
or
xchg
cli
imul
pop
xchg
into
nop
push
addr16
mov
sub
icebp
out
or
cmpsb
push
cmp
cmp
rcrl
inc
cmp
jg
xchg
popf
and
daa
das
enter
jg
and
inc
xchg
add
dec
mov
or
adc
into
cmp
aam
mov
cs
les
test
sub
jnp
dec
sub
mov
aad
js
aaa
push
aas
clc
sub
movnti
jmp
lds
mov
cmp
inc
roll
in
cmp
out
push
dec
sbb
sahf
mov
jmp
sahf
xchg
mull
push
loopne
ljmp
loopne
insb
nop
nop
lret
div
arpl
and
pop
sbb
test
outsl
mov
jmp
ja
lock
fdivrl
in
std
jg
pop
push
dec
inc
push
jecxz
test
push
pop
and
or
pop
lret
xor
pop
out
out
cmpsl
test
xor
ja
jbe
push
jmp
test
jecxz
aas
gs
jne
mov
pop
mov
mov
jbe
push
add
xlat
dec
aad
pop
sbb
dec
daa
push
addr16
mov
hlt
imull
aaa
xor
jmp
jb
lock
lahf
mov
scas
sbb
imul
xor
mov
leave
push
out
fwait
mov
loope
es
iret
add
divb
cmpsb
arpl
rcrb
jno
lods
div
nop
mov
int3
sahf
jp
sbb
loopne
mov
filds
adc
cs
cmp
mov
pop
and
or
sbb
mov
push
ret
in
lds
fidivs
mov
ret
mov
inc
and
mov
or
pop
mov
pop
rolb
movl
sub
push
or
out
es
push
inc
sbb
cli
fcomps
xchg
pop
or
in
loop
sbb
and
pop
lahf
push
jnp
mov
dec
xor
push
rolb
in
cld
or
mov
and
cmp
or
mov
lret
fucomi
es
bound
jmp
lods
cmp
mov
pushf
es
mov
movsb
in
sub
insb
sub
and
push
fstl
in
xchg
cmpsl
fidivrs
push
inc
daa
mov
push
dec
mov
or
ret
pop
mov
rol
xor
stos
jae
std
mov
pop
dec
sarl
test
cltd
pop
jnp
mull
mov
in
push
lock
int3
mov
push
xchg
push
scas
ds
push
sbb
repz
pop
jl
pop
stc
lds
or
stos
add
pop
adc
out
xor
sub
xor
imull
test
movsb
shl
mov
sub
sub
push
popf
pop
push
in
arpl
stos
test
std
dec
pop
outsb
repz
dec
dec
lock
out
shlb
jns
pop
out
mov
jmp
mov
pop
cmp
clc
xor
in
mov
addl
cmp
mov
das
mov
sub
jno
int
xlat
jle
dec
sub
adc
popa
repz
mov
cmp
arpl
fidivrl
mov
test
pop
xor
sbb
adc
addr16
and
add
insb
mov
test
das
pop
xchg
add
cmp
cmp
mov
addr16
push
jbe
ds
or
iret
push
mov
in
lret
fwait
jno
pop
xchg
out
mov
std
cmc
cli
daa
shll
jg
dec
mov
and
fdivrs
inc
sbb
jg
mov
jge
sub
fs
add
dec
sub
dec
mov
xchg
cmpsb
and
cmp
jnp
push
popf
xchg
sbb
add
scas
imul
lret
adc
stos
aam
mov
fwait
push
xchg
fsts
or
in
cmpsl
mov
sub
test
sbb
popf
mov
cmp
scas
push
aaa
outsl
mov
stc
push
scas
or
movsb
arpl
fdivrl
rorb
jbe
sub
dec
mov
adc
mov
in
mov
adc
xor
push
pushf
inc
lcall
lods
arpl
leave
andl
iret
xchg
push
adc
push
std
aaa
cld
outsb
mov
mov
add
lahf
pop
sbb
dec
or
jo
jae
xchg
test
repz
jge
add
inc
ljmp
pusha
pop
cmpsl
bound
loope
sti
cmp
inc
adc
stos
mov
xor
xchg
or
cwtl
push
pop
add
fstpt
sbb
xchg
mov
xchg
idiv
xchg
cld
mov
add
cmp
jns
lret
andl
ret
jo
outsl
jae
jp
pop
not
cmp
sub
cmp
pop
or
xor
pop
aam
js
repnz
in
mov
clc
mov
xor
arpl
or
pushf
shlb
inc
mov
sbb
addl
roll
xorl
jecxz
lret
das
mov
push
mov
iret
mov
pop
stos
gs
inc
data16
mov
sbb
or
jb
or
xchg
loope
in
cmp
call
std
sub
out
push
fcoms
lahf
cmp
pop
xchg
inc
das
jb
inc
loope
add
xchg
xchg
ljmp
cmpsb
test
fildll
je
xchg
adc
cwtl
jae
xchg
pop
xchg
pop
and
cmp
mov
stos
mov
mov
test
lods
add
insl
jne
mov
negl
out
jns
out
or
xchg
pop
xchg
xchg
or
sub
or
pop
xor
jo
adc
dec
ja
fistpll
jnp
xchg
out
jge
push
fwait
dec
sbb
mov
or
xchg
fidivl
lcall
push
cmc
data16
iret
jb
iret
adc
cmpsl
and
xor
popf
insb
and
mov
sbb
pop
pop
pop
in
adc
mov
sbb
aaa
xorl
add
mov
out
pop
jno
das
inc
mov
stc
push
nop
cmp
out
cmp
shrl
lods
mov
in
dec
push
ja
je
xor
xor
in
cmc
adc
out
jns
loope
rclb
jl
xor
push
bound
sub
das
das
push
xor
cli
fiaddl
push
adc
xchg
xchg
add
mov
dec
adc
cmc
pop
icebp
xchg
mov
or
fbstp
push
xchg
insb
inc
sbb
jo
sbb
ret
add
and
clc
pop
mov
inc
push
push
repz
xor
push
or
gs
lock
aad
lret
aad
xlat
add
lretw
pop
sbb
std
mov
and
dec
imul
stos
mov
stc
xchg
fucomp
or
testl
shlb
movsl
iret
negl
gs
jae
mov
jmp
cmpsl
mov
add
jecxz
cld
xor
mov
rorb
cwtl
mov
stos
cmc
jle
mov
scas
in
jl
andb
repnz
or
sbb
push
lret
adc
ficoms
mov
aam
int3
dec
cmp
cmpsl
push
mov
or
jae
jo
sbb
js
sbb
lea
fisttps
je
dec
stc
pop
cmp
xor
push
sbb
sbb
push
fs
sbb
loope
cmc
pop
mov
scas
pop
aam
sbb
outsb
sarl
fsubs
addb
mov
and
popl
fnstenv
mov
mov
or
mov
mov
daa
jae
or
add
loopne,pt
xchg
dec
pop
ja
addr16
mov
clc
cmp
sub
test
cmp
inc
jb
jae
mov
das
imul
mov
xchg
xor
sbb
cld
xchg
rcrb
outsl
jl
mov
or
add
fdivrp
adc
inc
mov
xlat
test
pop
daa
sub
adc
outsb
adc
hlt
or
popa
lahf
pop
push
mov
aad
test
idivl
or
sbb
mov
sub
inc
pop
ret
fmuls
jbe
cmc
lods
int
mov
frstor
jno
jno
pop
shr
ret
scas
and
std
mov
shll
jle
xchg
jmp
clc
into
loope
xor
lret
dec
in
nop
imul
sbb
aaa
push
cmp
andl
push
mov
xor
ret
xor
call
lea
shlb
int
cld
xchg
repz
sub
mov
scas
push
popa
rcr
push
in
testb
into
xchg
add
add
jl
add
inc
sbb
lcall
dec
xor
mov
movsl
insl
int3
mov
push
shlb
fcmovbe
icebp
inc
in
test
dec
mov
test
ror
cmp
popa
jge
mov
sbb
dec
cmpsb
mov
mov
xor
aad
clc
dec
fiaddl
pop
jae
xorb
out
adc
mov
mov
adc
aaa
cmpsl
lea
add
repz
es
xor
mov
es
popa
popf
xchg
add
or
add
call
dec
sahf
fwait
mov
push
cmp
sbb
sbb
mov
xor
jb
xchg
mov
xor
jmp
inc
push
adc
cwtl
push
jo
push
jo
adc
sbb
pusha
cmc
inc
cmp
pop
lret
js
xchg
xor
ds
pop
xor
fmulp
dec
mov
lcall
mov
loop
addr16
mov
dec
mov
mov
adcb
mov
xchg
stos
push
mov
test
jmp
push
push
imul
imul
imul
cmc
aaa
pop
and
ss
shrb
cmp
les
lock
dec
in
mov
ret
mov
mov
bound
es
fwait
mov
jl
aas
cld
clc
test
movsb
adc
in
fcmovne
pop
cltd
add
xor
loop
sub
inc
dec
pop
mov
push
push
cmpsl
cmp
xor
jg
in
push
mov
dec
push
jne
rcll
xor
pusha
cmc
inc
adc
arpl
inc
inc
out
mov
stos
cmp
push
aam
dec
dec
pop
mov
mov
xchg
lret
cld
dec
pusha
mov
out
dec
mov
call
inc
ds
insb
out
cwtl
and
mov
popf
ret
insb
ror
sbb
pop
fnsave
jg
in
out
pop
repz
inc
shlb
sbbl
adc
xor
outsl
mov
lahf
clc
sub
or
in
cmp
jl
push
lods
xorb
dec
pop
push
repz
push
inc
arpl
mov
loopne
dec
repnz
movsb
xchg
stc
inc
fs
push
out
in
adc
mov
lods
xor
pop
xor
aaa
xor
dec
lods
idivb
sub
pop
mov
mov
cld
je
sbb
cltd
lea
imul
data16
jp
and
filds
mull
jno
lcall
sahf
aaa
loope
rcrb
sbb
outsb
gs
ret
sbb
nop
int3
mov
mov
xchg
jnp
cmp
adc
imul
cmp
add
jmp
mov
dec
popf
push
repnz
mov
dec
dec
and
loope
testl
push
push
and
ret
repz
adc
cmp
stc
pushf
push
sub
ret
cld
or
in
pop
jnp
or
push
sbb
je
or
sub
or
sub
jbe
jo
mov
jne
addr16
jl
adc
movb
mov
cmpsl
inc
pop
jb
jnp
mov
dec
mov
mov
fbld
add
negl
pop
in
mov
sub
mov
insb
lret
sbb
pop
stos
out
outsl
push
mov
sbb
push
scas
sub
pushf
outsl
or
lds
fldenv
pop
int3
or
mov
pop
lahf
pop
push
cmp
movsl
rclb
xchg
pop
nop
mov
rcll
iret
pop
jo
adc
lret
test
jg
mov
push
sbb
lret
mov
data16
add
incl
icebp
xchg
je
lods
mov
lahf
jae
ret
loopne
push
dec
inc
pop
imul
mov
jge
pop
sub
mov
xchg
jle
adcb
mov
clc
fdivrl
jmp
jge
sahf
push
stos
pushf
into
aas
cmc
orl
pop
xor
mov
pop
test
dec
add
hlt
gs
andl
push
popf
daa
test
inc
push
xor
stos
cmp
inc
fisttpll
je
fs
fs
in
cmp
fld
pop
pop
mov
xor
icebp
gs
jp
lcall
out
hlt
xchg
mov
out
dec
aam
or
in
movsb
mov
call
jne
call
sub
pushf
jns
inc
mov
xor
dec
push
imul
lea
mov
jge
test
pop
sub
push
cmp
or
cmp
add
cltd
and
fisttps
movsb
mov
in
fldenv
add
cmp
mov
fcoml
cmp
loop
cmp
mov
roll
mov
jnp
mov
mov
mov
pop
cmp
sti
pop
out
xchg
jmp
jbe
cs
aas
insl
xchg
pop
out
stc
push
lret
pop
ds
movsl
inc
or
dec
jp
sub
mov
incb
add
imul
adc
pop
pop
inc
inc
je
pop
shlb
dec
sub
xor
dec
popf
mov
fpatan
repnz
test
out
fwait
push
cmp
dec
movl
sbb
sti
jbe
sub
hlt
in
nop
pop
cs
rclb
lret
xlat
imul
repz
mov
in
xchg
sbb
sub
add
sub
inc
test
and
jae
push
aad
repz
in
loope
mov
jl
int
mov
outsb
imul
inc
push
lods
lods
add
aam
shrb
mov
push
mov
ds
inc
push
cli
cmp
jg
add
lods
push
outsb
pop
and
les
mov
loopne
adc
jae
popf
outsb
filds
mov
push
test
mov
das
mov
inc
and
nop
adc
jnp
test
jne
sti
adc
sbb
push
and
cmpsl
pop
cmp
out
aad
xlat
inc
cmp
and
push
xchg
xchg
mov
lea
sub
sub
sub
leave
test
jo
stos
mov
or
test
mov
xchg
adc
push
js
xchg
push
adc
int
es
in
add
push
mov
mov
jb
imul
popf
ja
adc
push
addr16
in
jg
and
lds
out
pushf
pop
mov
int
ja
sub
scas
pusha
lea
ja
insb
aad
or
rolb
adc
adc
or
cmp
sub
fs
aaa
and
testb
xchg
pop
xor
mov
out
push
in
fdivrl
fwait
jbe
adc
jo
mov
dec
mov
repnz
data16
addl
and
cmp
sub
bound
xchg
sbb
mov
mov
sub
mov
pushl
xor
aas
daa
cmp
pop
and
push
dec
add
aam
in
ja
test
sub
mov
pushf
jl
or
pop
aaa
out
xchg
inc
jae
adc
iret
sub
jmp
or
or
cltd
pop
in
add
jp
cmp
jb
mov
jnp
push
or
xchg
aas
cmp
add
pushf
hlt
xchg
mov
mov
or
mov
out
cmp
popf
xchg
jns
lahf
mov
arpl
jp
test
push
faddp
pushf
ret
mov
or
mov
jle
mov
flds
or
in
sub
sub
xchg
test
es
mov
inc
xchg
and
icebp
enter
pop
out
imul
fcom
fucomp
adc
bound
imul
lahf
lret
add
stos
lahf
dec
js
xor
adc
in
adcb
sub
les
cmpsl
and
jp
outsl
jnp
mov
aas
scas
dec
scas
cwtl
enter
sub
je
sub
clc
pop
fimuls
pop
cld
push
cwtl
xlat
sti
add
mov
mov
mov
pushf
lods
mov
movsb
test
xor
add
shr
adc
pop
dec
jmp
sbb
orb
popf
mov
ret
inc
xor
sbbl
and
dec
cmc
mov
inc
jl
sub
test
cmp
push
xor
cmp
into
mov
add
ret
inc
mov
lods
pop
or
push
mov
jg
add
push
push
or
mov
mov
shl
mov
pop
sub
jl
in
mov
jle
inc
pop
scas
mov
push
pop
dec
fdivrs
inc
xchg
dec
mov
sti
ljmp
dec
sub
insb
push
in
sub
gs
push
inc
cmp
sub
xchg
mov
iret
inc
in
push
xchg
inc
push
sbb
mov
out
pop
xchg
add
jbe
mov
popa
cmp
mov
push
mov
xchg
sbb
add
or
test
jb
aaa
rorb
sbb
push
dec
push
aam
sub
clc
sti
push
bound
sti
orl
lds
ds
rcl
cmp
adc
pop
mov
mov
pusha
pop
out
aas
out
pop
in
popf
xlat
mov
sbb
daa
jmp
or
imul
dec
outsl
loopne
jo
insb
lahf
cmp
xchg
into
js
cmp
sub
popf
out
xchg
push
or
jo
cmp
pop
dec
out
sbb
test
inc
xchg
cmc
dec
pop
int3
xchg
ss
xchg
push
xor
insb
into
mov
mov
loopne
pop
call
push
cwtl
aad
or
jl
jmp
xlat
mov
addr16
add
leave
fstpt
dec
and
and
pusha
lret
xor
mov
xor
or
cli
sub
pop
and
sbb
adc
inc
pusha
xor
mov
shlb
out
or
jo
mov
sbb
pop
xor
add
es
adcb
stos
addr16
pop
les
xchg
inc
jp
add
add
jmp
and
push
push
xchg
xor
xchg
add
inc
jp
rolb
adc
xor
or
xchg
out
cmpsb
cmc
jg
cmp
aam
add
pushf
fidivl
std
neg
mov
pop
stc
or
lret
pop
andl
push
xchg
jl
adc
inc
ja
mov
std
shrb
popf
push
or
das
sub
out
test
notb
es
cli
mov
call
sub
mov
jo
mov
mov
in
fimull
mov
aas
in
out
add
inc
push
xor
pop
test
mov
xchg
sahf
jmp
scas
pop
mov
xor
ret
dec
movsb
andb
js
push
or
mov
cmp
pop
scas
add
pop
ljmp
jecxz
lds
les
fisubrl
xchg
fildl
jne
sbb
ja
jb
jge
cwtl
mov
add
jmp
leave
insl
jne
cmc
jg
xchg
gs
insl
les
rcll
mov
ja
jmp
jle
inc
push
fldt
mov
and
dec
xor
mov
mov
mov
repnz
mov
sub
fsubr
insl
pop
ss
es
jae
leave
jp
shr
dec
cmovo
into
mov
ret
dec
and
pop
cmp
cmp
cmpsl
sbb
jne
or
int3
stos
jmp
scas
jg
fdivl
xor
aam
daa
test
mov
mov
cmpsb
lahf
sub
or
andl
push
jb
mov
in
or
dec
jnp
cld
les
or
incb
jo
daa
js
adc
adc
mov
inc
dec
jo
clc
xlat
push
psubq
inc
push
add
loopne
mov
push
sbb
enter
pushf
and
lods
xchg
mov
push
adc
movb
push
pushfw
cmp
scas
dec
inc
pop
dec
sbb
mov
jne
mov
popf
xor
ss
inc
or
and
mov
dec
movd
aaa
mov
mov
shll
jbe
jae
data16
addl
pop
sarb
pop
out
or
push
out
xchg
sub
mov
mov
pop
outsb
cmp
jge
inc
stc
lods
mov
mov
cmp
cmp
and
arpl
push
or
xchg
push
pop
add
mov
adc
clc
popa
outsl
pop
test
add
test
in
aad
stc
lock
pop
adc
sub
fdivrp
xchg
push
sub
push
cmp
outsb
ficoml
popl
cmp
mov
dec
pop
rcr
xor
cmp
int3
mov
pop
mov
outsl
mov
mov
fmuls
jle
jmp
fisttps
repz
insl
add
sub
xor
mov
js
test
sub
adc
in
insb
xor
mov
bound
out
sbb
dec
sbb
or
inc
xor
or
pop
lret
mov
inc
test
mov
es
dec
stc
movsb
pop
adc
movsl
aad
cmpsb
loope
adc
add
adc
ds
mov
cs
lret
js
nop
xchg
popa
pop
jecxz
test
jae
push
xchg
sbb
sub
icebp
xor
xorb
dec
adc
nop
mov
cli
rorb
push
ja
fiaddl
or
or
clc
loopne
xchg
mov
fsubl
mov
jecxz
xchg
out
sbb
fstpl
pop
ficompl
out
jb
out
fldenv
inc
or
jle
enter
mov
shrb
jnp
inc
jl
mov
clc
xchg
hlt
popw
addr16
mov
popa
imul
lds
pop
pop
out
popa
lods
adc
or
stos
xor
cltd
subl
pushw
movb
pop
add
arpl
mov
out
into
lret
rsqrtps
sub
sbb
cmpsb
sub
ficompl
shlb
call
cwtl
and
filds
mov
fldenv
ljmp
out
adc
ja
add
inc
arpl
push
daa
cmpl
out
jno
aas
push
fimull
cmp
and
pusha
lock
and
add
push
cmp
push
mov
insb
jo
andb
mov
jo
inc
jb
int3
adc
ss
pop
xor
cld
ja
xchg
icebp
lods
in
ss
dec
and
mov
mov
inc
push
iret
in
jp
or
cmp
test
test
lcall
pop
mov
pop
addr16
jp
aad
mov
mov
insl
cmp
test
mov
push
add
push
aaa
cmp
test
mov
pop
cmp
push
xchg
push
daa
imul
push
and
pop
push
add
daa
iret
xchg
les
sahf
aad
dec
jg
adc
movsb
dec
cmpsl
sub
mov
fsubrl
add
pushf
jg
je
dec
fistps
xor
sahf
pop
scas
fsubrl
cmp
je
cmp
bound
stos
jo
in
jae,pn
int3
mov
test
lods
sahf
fimuls
jbe
jecxz
incb
lods
out
subb
ja
adc
lcall
test
mov
outsb
call
jb
xchg
rcrl
adc
call
pop
popf
shlb
test
sbb
ss
out
mov
insb
mov
mov
mov
pop
jecxz
push
popa
mov
pop
loop
test
sbb
sub
or
fwait
iret
mov
adc
mov
adc
popl
jbe
les
insl
adc
mov
cs
divb
call
addl
ss
in
test
popf
xchg
cmpsb
dec
dec
sub
add
fdivrl
pop
mov
ret
pop
ret
sbb
xchg
lock
push
push
js
cmpsl
jle
aaa
shll
pushf
cld
dec
imul
iret
inc
xor
icebp
mov
addr16
push
inc
add
sub
mov
cs
pop
outsb
mov
std
dec
cmpsl
and
mov
xchg
mov
jge
aad
insb
inc
jle
xchg
jnp
into
xor
repnz
mov
push
xchg
and
pushf
stc
or
push
jmp
mov
push
lods
or
push
push
lock
les
adc
dec
in
andl
sub
jl
lret
sub
dec
and
xchg
jp
sub
lods
fidivl
xchg
pop
push
pushf
xchg
js
sti
sbb
sbb
test
cmp
adc
leave
pop
dec
add
cltd
or
in
pop
push
mov
sub
out
jle
jecxz
sub
or
sti
nop
dec
repz
out
dec
rolb
mov
sbb
xchg
imul
subb
pop
inc
cmc
out
or
in
mov
aam
inc
adc
adc
repz
inc
or
push
mov
dec
shll
mov
imul
xchg
ljmp
fisttpl
cmpsb
push
xchg
iret
notl
notb
and
cwtl
push
mov
cs
mov
movsb
outsl
or
cmp
mov
hlt
mov
enter
adc
and
xor
push
cmp
mov
mov
add
pushf
xchg
jnp
mov
cmpsl
mov
imul
lret
aaa
lcall
xchg
scas
arpl
repnz
cli
ficompl
in
xchg
sub
das
inc
out
xchg
pop
xchg
inc
lret
dec
dec
push
ljmp
jne
lcall
lods
add
dec
lcall
jmp
mov
inc
enter
hlt
mov
int
add
cmp
data16
mov
jg
jnp
scas
test
fidivrs
and
nop
aaa
dec
add
push
in
push
movsl
or
ret
leave
cmp
enter
movsb
pop
outsb
pop
or
incb
xchg
ljmp
imul
cli
xchg
mov
cli
mov
xchg
sub
pop
test
subl
cld
add
inc
mov
aaa
add
out
jnp
mov
lcall
or
aas
iret
cmpsb
outsl
negl
imul
dec
pushf
jbe
xchg
ret
pop
sub
xchg
lahf
add
std
xor
fisttpl
repz
cmp
dec
mov
push
mov
and
mov
cltd
int
rorl
stos
pop
add
xor
or
repz
sbb
adc
mov
jp
jle
outsb
jle
insb
repnz
fiaddl
bound
sub
mov
dec
cmp
loopne
nop
decl
stos
pop
add
or
mov
lods
xchg
enter
sbb
ds
iret
cmp
cld
cmp
cltd
sahf
mov
fxch
cmp
ret
adc
stos
push
cmpl
fcomps
cmp
idivl
pop
add
jb
cmc
push
mov
push
mov
sub
add
cltd
add
xor
std
in
mov
aaa
mov
xchg
sub
mov
pop
push
lret
or
mov
sub
fsubp
adc
cmpsl
arpl
sbb
cltd
out
inc
dec
insl
xchg
cmp
aaa
lcall
pop
or
movsl
xor
cmp
mov
jo
movsl
jp
rorl
pop
sti
lret
add
jp
pop
and
adc
jne
stos
dec
mov
insl
mov
cltd
pushf
cmp
or
mov
sahf
cli
call
jp
imul
mov
outsl
inc
dec
fdivrs
push
inc
cmp
mov
sbb
lret
inc
add
test
loop
cmc
pop
out
and
scas
or
mov
lret
inc
push
mov
cwtl
neg
imul
in
and
push
sbb
mov
push
jle
inc
xchg
lods
sub
mov
pop
imul
pop
in
xchg
mov
xchg
push
xchg
push
loop
clc
shlb
add
mov
pushf
push
xor
xor
xchg
inc
mov
push
leave
xchg
sahf
daa
pushf
mov
jp
imul
hlt
cmp
shlb
test
mov
lret
rcl
fs
cmp
add
sbb
test
fnstsw
idiv
clc
pop
sbb
and
add
mov
sub
cmpsl
popa
aaa
sub
jbe
jecxz
fiaddl
jno
rcrl
repnz
sbb
inc
mov
fmull
adc
mov
outsb
and
arpl
lahf
mov
sbb
mov
imul
mov
out
fsubr
jae
mov
mov
sbb
sbb
push
ds
fisttps
cs
sbb
pop
dec
lret
mov
push
mov
pop
cmp
adc
loopne
xchg
jns
or
mov
push
sub
ljmp
mov
inc
add
xchg
popa
or
xor
xchg
fisttpl
push
enter
mov
call
push
xchg
pop
mov
clc
fs
outsb
cmp
add
lret
or
ds
inc
mov
scas
xchg
leave
call
dec
mov
and
decl
jp
jb
push
fcoms
pop
sub
jecxz
cmp
std
push
dec
repz
xor
pushf
pusha
sbb
mov
mov
mov
mov
jnp
pusha
inc
pop
lods
call
or
leave
jnp
jno
fsubr
ret
orl
sti
lahf
xor
push
cmp
cld
ss
and
in
rcl
fldl
imul
inc
rcll
cmpsb
pop
loop
pop
movsl
push
push
push
jg
ficoml
idivl
daa
aas
rclb
repnz
out
jmp
inc
fdivp
push
out
cmp
pop
sarl
push
add
test
inc
mov
or
stos
inc
lods
cltd
mov
aam
mov
fwait
cmp
add
cltd
dec
pop
xchg
xor
lock
stos
fs
jecxz
push
addr16
fidivrs
cmp
jle,pn
cld
popf
idivl
loop
xor
pusha
out
inc
test
sub
pop
dec
loop
sub
mov
lret
dec
sahf
std
into
iret
sub
push
lahf
xlat
cli
push
cmp
xorb
fcmovbe
or
sti
call
divb
pop
jbe
fcmovnbe
in
sbb
mov
rcll
mov
inc
dec
adc
imull
and
cli
or
inc
lds
lods
add
mov
loopne
jne
pop
movsl
or
pop
pop
test
adc
loop
or
icebp
mov
idivl
fnstenv
sahf
stc
push
sbb
pushf
jno
lock
gs
push
mov
mov
cmpsb
cmp
cltd
scas
in
mov
outsb
push
fisttps
sbb
lods
mov
xor
int3
ds
icebp
mov
stc
sti
lcall
lds
mov
adc
cs
stc
out
pop
sub
lds
adc
pop
mov
pop
push
dec
dec
in
jns
push
mov
cmpsl
lret
orl
mov
divl
inc
dec
fidivrs
movsb
dec
dec
mov
adc
inc
dec
test
insl
lea
inc
push
imul
jno
dec
push
or
inc
mov
enter
xor
imul
sti
xlat
outsl
jecxz
loope
jb
sbb
lock
pop
dec
pop
lea
dec
and
mov
sbb
outsl
out
adcl
cmpsb
inc
out
dec
xlat
lahf
out
add
jge
test
xchg
mov
int3
shll
fnstcw
mov
mov
mov
sar
pusha
sbb
push
sarl
push
in
notb
iret
data16
lods
out
cwtl
sbb
jmp
loop
pop
xor
jns
test
test
iret
imul
insb
movsb
push
mov
xlat
int3
test
out
repnz
push
xchg
push
dec
cli
mov
std
cld
sarl
dec
arpl
mov
fldt
cmp
out
jl
mov
sbb
inc
cmp
or
in
arpl
lock
pushf
cli
test
movsb
cmp
lcall
lret
inc
mov
out
cltd
and
test
and
or
frstor
sahf
push
dec
mov
enter
outsb
adc
xor
int3
and
jp
sub
das
push
sub
jl
or
xor
mov
xchg
or
sub
in
lods
popa
jmp
dec
inc
push
test
xor
add
adc
addr16
ja
in
rcrb
hlt
fwait
jno
daa
leave
jmp
pushf
test
adc
rcrb
mov
hlt
hlt
dec
add
dec
jmp
popf
das
mov
icebp
mul
rcll
mov
lret
imul
adc
mov
fs
mov
inc
pop
or
rorb
pop
push
push
aad
lea
scas
mov
je
adc
pop
pop
movsb
das
ds
imul
mov
hlt
outsl
mov
je
and
pop
rcr
sub
push
pop
sbb
fcmovnb
test
dec
scas
lds
mov
push
rolb
inc
into
add
push
fsubrl
adc
dec
into
decb
loop
out
and
sub
mov
addr16
xchg
xchg
adc
mov
inc
ss
mov
gs
test
mov
mov
mov
pop
pushf
fwait
andl
pop
xlat
cmp
lods
push
mov
loope
dec
push
xor
pop
mov
je
inc
aas
dec
pop
fstps
xchg
dec
lds
xchg
popl
push
movsb
jns
or
inc
clc
lret
jmp
dec
push
push
nop
sbb
mov
adc
push
mov
frstor
shlb
cs
lcall
mov
mov
add
push
ss
jle
push
jns
dec
addr16
xchg
jl
ret
inc
xchg
xchg
or
scas
sub
imul
jbe
or
daa
sti
dec
add
dec
outsb
fsubl
push
ret
clc
jbe
push
repnz
sbb
leave
por
icebp
push
mov
and
push
ficomps
outsb
adc
fiaddl
xor
cmp
add
test
shrl
orl
fisubrl
roll
mov
inc
popa
mov
push
jbe
ja
in
dec
in
ret
cmpsl
add
das
fmulp
adc
xchg
out
fsubs
dec
pop
mov
or
repz
pushf
adc
add
mov
iret
and
add
int
daa
add
push
out
loope
cwtl
enter
in
subb
pop
mov
out
clc
sub
xchg
call
ljmp
cwtl
lea
stos
icebp
sub
mov
lret
sbb
in
std
pop
fistl
xchg
mov
das
add
jge
out
lahf
das
xor
jo
aad
dec
arpl
lock
out
cmp
jmp
inc
jmp
or
shlb
das
and
insb
push
adc
mov
out
dec
lock
fisttpll
loop
out
xchg
nop
mov
call
test
adc
jmp
lock
sub
inc
cmpsb
lahf
mov
mov
pop
stc
leave
inc
push
push
jb
sub
insl
test
pop
xchg
jae
pop
or
scas
xlat
fwait
sahf
mov
clc
cmp
jl
nop
adc
dec
mov
jecxz
arpl
rorl
orb
mov
lahf
push
adc
addb
sti
pop
dec
lods
xchg
repnz
mov
adc
jne
push
aam
xchg
in
js
pushf
jno
lods
xor
loop
cltd
stos
mov
fadd
jle
add
sub
lods
push
cmpsb
jl
shlb
or
stos
outsb
data16
mov
push
pop
ja
out
jmp
pop
int
enter
shlb
repnz
lods
imul
loopne
add
cmp
mov
fcompl
test
popa
mov
ret
xchg
in
push
or
sbbb
and
sbb
cmpsb
mov
inc
imul
lods
sti
ds
mov
mov
icebp
js
aas
push
data16
pop
hlt
out
das
jno
pop
ljmp
sbb
adc
stos
jl
cli
or
popf
add
adc
xchg
loopne
mov
mov
inc
sub
fdivrl
hlt
fwait
jb
imul
push
pop
inc
adc
clc
or
dec
lock
push
in
hlt
insl
enter
ficomps
fdivr
lock
sti
dec
mov
lds
into
dec
adc
lea
hlt
fs
jno
lret
into
bound
pop
xor
add
inc
icebp
subl
in
mov
lcall
sahf
inc
roll
cmp
cmp
adc
push
push
bnd
popf
adc
shll
int3
flds
int
cmp
lcall
dec
xor
inc
js,pn
sahf
das
inc
stc
jo
leave
and
sub
jbe
pop
sub
adc
add
punpckhbw
xchg
outsb
imul
cmp
mov
popf
loopne
pop
lods
shr
mov
pop
jp
push
cmp
mov
in
outsb
nop
and
out
andb
fiaddl
mov
pop
addr16
lea
or
imul
push
shlb
dec
outsl
adc
add
mov
mov
fidivs
xchg
sbb
push
aam
test
cmp
insb
scas
push
lods
xchg
ljmp
and
lret
sub
adc
push
lods
fnstsw
js
enter
stos
loop
lea
push
add
xor
ficomps
pop
outsl
or
ficompl
lahf
int3
nop
mov
popf
push
lss
loop
jbe
jb
into
mov
jle
inc
in
cmpsb
xchg
mov
loopne
icebp
adc
and
cmp
sub
pop
mov
insb
stc
push
sub
arpl
stos
mov
or
aad
fimuls
out
movsl
cmpsl
aaa
jb
xchg
push
mov
or
arpl
push
stc
mov
push
aaa
iret
xorl
mov
inc
push
test
sub
clc
mov
cmp
gs
cvtps2pi
mov
cmc
shr
imul
cmp
stos
dec
push
sub
dec
cmp
decl
sub
xor
dec
push
mov
inc
xchg
clc
bound
insl
lods
repnz
pop
rcrb
adc
pop
orb
ss
sub
daa
outsb
or
xorb
xor
aad
lret
iret
sbb
movsb
rcr
push
xchg
fs
cmp
pop
daa
xchg
cli
mov
outsb
cmp
ret
push
lcall
inc
rcrb
sahf
mov
lea
lahf
pop
cmp
icebp
bound
inc
pop
cmp
sbb
fcoms
push
xchg
sbb
popf
push
cmpsb
jno
cltd
notb
xchg
sub
stc
mul
add
mov
mov
dec
por
xchg
aad
adcb
dec
and
mov
pusha
dec
cld
sub
adc
sbb
cmpsl
push
and
out
mov
stos
mov
ljmp
enter
and
outsl
addr16
out
add
cli
jno
push
stos
push
mov
mov
dec
add
adc
xchg
pop
cmpsl
xlat
mov
mov
ljmp
mov
rcrb
cwtl
push
lods
lret
inc
cmp
and
adc
jle
rcl
adc
sbb
pop
adc
sub
mov
jl
or
push
pop
decb
lahf
push
and
xchg
adc
les
movsb
negb
ror
and
dec
sahf
or
xchg
arpl
inc
sub
int
and
out
repnz
mov
push
jnp
popl
xor
jne
xchg
ret
in
jo
js
xor
pop
adc
mov
mov
and
dec
fistpll
jns
mov
jmp
aaa
and
in
ret
or
ds
or
int
fisttpl
sub
int
cmp
mov
int3
sub
fldl
sub
mov
inc
addr16
sub
dec
int3
aaa
cltd
jmp
fnstenv
mov
ja
repnz
mov
fdivrs
scas
push
xchg
scas
mov
stc
clc
xchg
addr16
pop
sbb
jne
jg
pusha
pop
mov
gs
outsb
les
or
mov
cmp
int
dec
dec
testb
cwtl
mov
mov
les
add
and
sbb
std
fdivl
mov
dec
ret
or
and
jae
jne
pushf
jg
mov
cmp
outsb
mov
sbb
push
aam
push
aas
aad
rorb
mov
mov
push
es
rolb
jbe
enter
dec
les
js
push
push
adcl
lock
jb
xchg
je
add
xchg
xchg
sub
cmp
nop
cli
mov
and
push
mov
mov
stos
mov
push
dec
clc
add
mov
outsl
or
lret
inc
sbb
cltd
mov
ljmp
cmp
imul
mov
inc
inc
fsubs
adc
or
mov
mov
jmp
iret
iret
xchg
jnp
stc
fidivrs
addr16
daa
cmp
jo
sbb
jb
nop
lahf
mov
or
out
mov
or
mov
fwait
shr
pop
leave
das
push
stos
ss
lret
arpl
push
push
cmp
add
or
and
mov
jp
or
jmp
mov
push
jge
adc
add
mov
test
xor
push
je
inc
imul
mov
pop
mov
dec
fdivrl
jno
lock
nop
lahf
out
subl
cmp
out
add
fs
push
imul
pop
ret
mov
sbb
lcall
inc
xchg
add
imul
out
sbb
pcmpeqd
push
icebp
movsb
xor
sbb
mov
outsl
sahf
lods
inc
pop
push
int3
rolb
fs
iret
inc
fldenv
dec
jmp
loope
psubusw
aaa
mov
fwait
mov
mov
sti
icebp
dec
scas
mov
out
mov
dec
outsb
fildl
inc
or
lds
leave
shr
jp
xchg
mov
or
xor
scas
cmp
cmp
push
aas
cmp
aaa
xchg
stos
pop
or
adc
enter
xor
push
sbb
enter
sbb
mov
sahf
cmp
xchg
shrl
mov
mov
inc
lods
sbb
and
imul
lea
mov
addr16
and
add
push
cmp
sub
ds
outsb
jecxz
in
stc
aaa
pop
and
ret
rorl
mov
rcrb
mov
mov
mov
mov
scas
aam
aam
daa
gs
mov
int
and
jnp
sbb
loopne
inc
lods
call
xor
dec
xchg
mov
jp
push
mov
mov
mov
inc
sbb
daa
data16
cmc
xor
lahf
sbb
xchg
pop
negl
sub
pop
jno
or
aad
mov
mov
shl
aaa
xor
fimull
flds
jo
cmp
sub
and
in
xor
lds
xor
aaa
pop
xchg
cld
or
bswap
mov
mov
pusha
popa
mov
add
fistpl
movsl
ljmp
mov
and
aas
aad
movsl
cwtl
cmp
pop
mull
roll
ljmp
and
loopne
jg
push
testb
xor
add
add
test
icebp
loope
mov
pop
mov
test
in
loopne
push
movsb
mov
in
cs
js
dec
jo
jl
hlt
inc
sbb
fisttps
rcl
out
xor
xor
push
push
mov
dec
mov
sti
icebp
jns
stos
test
mov
jge
jmp
mov
add
roll
ljmp
imul
inc
out
push
outsb
lret
cs
in
adc
push
repz
push
pop
sbb
out
pop
imul
out
sbb
jmp
pop
movsl
xlat
xchg
loope
icebp
push
sbb
sbb
dec
sbb
dec
add
lahf
je
daa
cli
movsb
les
imul
fisubs
and
mov
out
fucomp
repnz
out
cmc
iret
and
stos
ljmp
lahf
jae
and
sub
mov
ja
ds
add
fwait
dec
es
lcall
ja
mov
shll
int
adc
iret
das
ds
and
xchg
ficomps
add
rcl
sbb
addb
cli
mov
aam
add
subl
pop
punpcklwd
fs
arpl
cltd
adc
addl
sub
fld1
push
pop
jnp
inc
stc
in
mov
lea
lahf
sub
pop
fs
push
and
inc
out
xor
adc
xchg
push
add
andb
in
push
jns
pop
fbstp
mov
mov
mov
cmovbe
fistl
cltd
or
ficoml
mov
dec
xlat
sbb
jns
frstor
sbb
sbb
mov
dec
jne
sub
out
dec
dec
push
push
push
sub
int
pop
sbb
gs
dec
icebp
flds
movsb
xchg
out
push
mov
andb
arpl
pop
mov
mov
add
or
pop
fmull
ret
lods
jecxz
jp
add
sub
push
push
in
cmpsb
fs
cltd
fists
xor
xchg
sbb
jecxz
inc
je
lcall
fldl
test
outsb
out
add
jl
popa
inc
fildll
mov
pop
fincstp
push
push
jmp
test
or
sbbl
add
in
data16
add
pop
and
adc
test
xor
fsts
movsl
push
xorb
xor
stos
pusha
adc
pusha
shlb
push
inc
outsl
mov
jl
ret
sub
add
mov
and
cmpsb
push
inc
cmp
subl
jbe
shl
cld
and
or
loope
and
inc
xor
inc
xchg
roll
mov
outsb
dec
test
cld
xor
and
sub
push
and
cwtl
fildll
rcll
ds
or
add
rorl
xchg
roll
and
or
push
adc
sbb
mov
mov
or
pop
inc
fisubrs
clc
test
aam
imul
mov
mov
ldmxcsr
dec
pop
or
hlt
xchg
jbe
outsl
mov
rol
sti
push
popf
adc
add
or
mul
dec
test
add
sbb
sub
adc
and
pushf
xchg
xchg
pop
cmp
adc
insl
mov
cmp
xsaves
jns
dec
dec
inc
out
mov
xchg
aas
and
pushf
int3
mov
pop
in
cli
rcll
xchg
pop
adc
clc
in
and
mov
mov
mov
pop
pushf
mov
outsl
jo
mov
outsb
rcll
fcmovbe
paddd
push
lret
in
or
dec
ret
cwtl
inc
push
inc
mov
xor
aam
outsl
lea
dec
fdiv
xor
xor
rcrb
out
xchg
and
ret
dec
jb
es
jnp
dec
icebp
mov
sarl
adc
cmpsb
dec
xchg
cltd
sbb
js
mov
ss
incl
and
mov
outsb
inc
cmp
enter
sbb
xchg
dec
sub
sbb
jno
invd
sbb
andnps
mov
push
loop
xor
scas
mov
inc
mov
jge
mov
lret
pusha
shl
out
pop
jnp
lds
jno
sbb
adc
or
sbb
leave
xor
mov
ja
je
cld
nop
inc
enter
inc
pop
push
sub
stc
add
inc
mov
out
cld
pop
mov
orl
mov
leave
push
and
loopne
repnz
jno
pop
scas
jnp
dec
test
xchg
shrb
call
xor
sub
outsl
stos
sub
je
sub
icebp
xlat
sub
cs
and
loope
adc
insl
mov
mov
add
jg
cltd
aad
mov
scas
push
cmp
jg
addr16
notl
xchg
clc
xchg
movsb
idivb
lret
cs
inc
pop
mov
and
ljmp
jb
stc
pop
xor
cmp
mov
sub
jne
stc
add
cmpsl
fcmovnbe
fwait
pop
test
rcrb
xor
adc
out
call
adc
into
fcom
in
xor
les
mov
adc
jo
or
cwtl
jns
in
data16
ds
loopne
dec
out
out
jl
fldenv
jg
cmp
push
fsubp
out
cmp
cld
rorb
mov
movsl
out
movl
push
and
lods
repz
mov
lods
repz
sbb
repz
cmpb
jo
and
daa
mov
push
xor
clc
movb
xchg
cwtl
sbb
xor
les
lea
rorl
popf
mov
test
out
adc
cmp
outsl
or
sbb
cli
xchg
daa
cld
icebp
jae
cmp
sbb
lods
aam
push
jno
lods
test
xchg
mov
stos
ds
ljmp
fiaddl
repz
adc
inc
mov
mov
push
les
shll
mov
add
sbb
inc
jb
add
sbb
scas
sahf
sti
scas
pushl
and
cmp
mov
jp
fisttpl
call
cltd
loop
inc
sarb
pusha
imul
or
ret
mov
dec
push
or
mov
repz
pop
push
mov
or
fwait
aaa
sbbb
cmp
pop
push
cli
je
divl
pusha
jmp
movsb
movl
js
das
mov
sub
mov
ds
push
stos
movsl
jge
adc
adc
jmp
call
mov
push
mov
sbb
dec
leave
out
into
stos
aad
ss
cmpsb
jle
push
sub
mov
mov
sti
subb
xchg
cwtl
mov
pop
shlb
dec
sahf
lcall
insb
dec
fwait
loopne
cmp
stos
cmp
xlat
jge
dec
dec
mov
mov
mov
jbe
out
jnp
ss
ds
rol
jbe
cmp
cmp
shrb
push
ja
outsb
loope
js
rorl
cwtl
mov
push
orb
mov
mov
dec
movb
mull
lret
rclb
pushl
leavew
int3
adc
fcmovnu
fadd
cmpsl
call
adc
dec
dec
int
push
popf
jbe
sub
cs
or
add
jg
mov
pop
repnz
je
adc
mov
add
mov
pusha
scas
jo,pn
pop
loop
adc
rcr
ds
cs
cmp
xchg
outsl
or
push
lods
test
cld
add
inc
and
adc
jmp
inc
jb
inc
movsl
sbb
mov
inc
lods
pop
xor
out
or
sub
aaa
xchg
lret
pop
sbb
jo
ds
xchg
arpl
int3
cld
test
cmp
xchg
cmp
fimuls
xchg
push
scas
cmp
lods
push
mov
lea
lds
lahf
xor
push
insb
mov
test
inc
pop
sbb
data16
cmp
aad
jbe
mov
sbb
mov
and
and
add
insl
mov
loopne
in
aam
arpl
dec
iret
mov
dec
sub
cltd
scas
jle
enter
loop
and
pushf
push
data16
push
xchg
sarb
and
mov
xchg
mov
in
test
cltd
mov
dec
and
dec
loope
adc
jg
inc
out
stos
push
out
xchg
jecxz
inc
shlb
fistpll
jo
lock
leave
movsb
pop
add
je
jle
movsl
mov
data16
xchg
ja
jne
dec
popa
lock
leave
dec
jmp
sub
mov
dec
sti
inc
xor
aas
dec
cmp
fsubl
mov
add
lret
sub
and
out
ds
lahf
out
lock
pop
mov
push
mov
in
or
in
jmp
idiv
mov
gs
xchg
xchg
jmp
xor
call
xor
imulb
xchg
aas
sbb
cld
icebp
push
lds
and
pop
push
push
cmp
dec
and
pmaxub
inc
or
mov
mov
sbb
leave
mov
or
movsb
cld
fsubl
dec
clc
adc
push
divb
fldt
dec
mov
sahf
adc
daa
dec
addr16
xchg
sbb
sbb
sbb
lcall
cmpps
push
inc
cltd
push
imul
popf
xor
enter
in
push
ret
push
push
cmp
inc
mov
jp
das
lcall
mov
push
mov
sub
mov
loope
or
push
adcl
or
cmp
inc
ljmp
push
xchg
cld
stos
push
pop
lcall
adc
cmp
add
inc
add
mov
punpckldq
pop
mov
test
cmp
dec
push
fisttps
fcoml
lods
and
adc
arpl
dec
push
add
cmp
pop
aam
aas
xor
scas
dec
negl
popa
xchg
shll
jbe
or
pop
test
gs
mov
in
lea
cmp
out
push
inc
inc
addr16
mov
jno
jns
repnz
push
sub
pushf
jge
sahf
in
addl
pop
xor
xlat
sbb
in
jae
into
fcompl
xlat
pop
add
stos
adc
and
sahf
adc
pushf
mov
shrl
xor
xor
push
xor
jae
out
movsl
jge
int
fidivs
pop
enter
jg
jge
pop
fldenv
adc
arpl
lahf
int
sti
outsb
dec
mov
xchg
xchg
test
xchg
lods
mov
xchg
jle
loop
push
mov
in
add
pop
je
popa
and
pushf
mov
out
pop
movsb
les
mov
sahf
out
scas
lock
mov
pop
xor
xlat
and
fldt
mov
adc
imulb
scas
cmp
jp
aaa
movsb
adc
mov
mov
into
mov
repnz
cmp
imul
pop
clc
pusha
out
sub
scas
icebp
dec
lea
in
sti
pop
sbb
push
cwtl
mov
mov
decl
push
push
lret
sbb
leave
lret
inc
out
insb
in
mov
mov
stos
ret
and
scas
mov
cs
outsl
mov
jnp
arpl
repnz
jne
mov
mov
dec
dec
mov
hlt
push
mov
fsubl
sbb
icebp
or
mov
mov
dec
adc
mov
xchg
les
bound
shll
stc
xchg
loope
jb
and
mov
sub
decb
jmp
insl
mov
out
loop
sbb
cli
lret
mov
sub
mov
fisubrl
xor
cmp
cltd
lods
jo
jo
sub
adc
xchg
mov
and
cs
cmp
addr16
cltd
xor
mov
adc
cmp
xchg
xor
ret
mov
jbe
dec
les
mov
and
add
push
cmp
mov
adc
sbb
mov
xor
mov
scas
test
dec
into
jno
mov
stos
xor
lods
mov
mov
sar
addr16
ficoms
lret
dec
lock
push
jle
ljmp
movsb
xor
movl
jle
pushf
dec
pop
xchg
shll
add
add
pop
xor
jb
jl
movsb
sub
and
fsub
icebp
lret
xchg
lcall
in
add
xchg
mov
dec
and
xor
xor
test
lret
inc
jno
sub
push
add
daa
sub
mov
fistpll
inc
rol
fisttpll
adc
xor
mov
js
or
pop
mov
cmp
hlt
mov
std
or
jmp
fbstp
mov
sub
popa
fwait
shll
int
pop
lret
xchg
adc
pop
psubw
adc
mov
adcl
xor
imulb
push
fmull
xchg
jmp
inc
cmp
pop
pop
stos
subl
sbb
mov
jne
das
mov
imul
test
and
fs
andb
mov
daa
pop
loopew
out
adc
cmpsb
rcll
xchg
and
nop
popf
push
test
cmp
adc
and
enter
aas
sub
pop
dec
pop
ljmp
fldl
xchg
data16
sub
arpl
push
cltd
jecxz
add
jl
mov
pop
mov
xor
fldcw
pop
mov
sub
xchg
push
mov
repnz
push
sub
fwait
push
mov
data16
or
xor
adc
xchg
adc
filds
loopne
mov
lods
cmp
push
add
xchg
data16
cmp
fdivrs
jae
adc
call
jl
pop
js
shl
cld
mov
mov
lret
dec
or
in
mov
dec
lahf
adc
pop
repz
jne
xchg
or
int
lea
push
mov
push
stos
leave
fwait
stos
inc
mov
mov
std
xchg
sbb
ffreep
add
jne
or
ss
adc
enter
movsl
pop
test
in
xchg
push
xchg
icebp
xor
lcall
leave
push
dec
shlb
lcall
std
and
cli
inc
hlt
mov
repnz
add
mov
push
mov
or
mov
iret
in
sub
pusha
mov
in
scas
ret
icebp
ljmp
or
scas
decl
fcoml
sbb
xor
data16
sub
cmp
fiaddl
lea
inc
dec
push
pop
retw
push
sub
sbb
xchg
mov
jle
cmp
les
outsb
call
jp
sub
fidivrl
jnp
pop
arpl
pop
push
dec
lods
aad
int3
stos
pop
pop
fdivrp
inc
mov
mov
pushf
jp
bound
xor
mov
movsl
sbb
imul
es
ret
sti
lock
fisubrl
lcall
popa
or
mov
insl
mov
pushf
ficoms
std
icebp
shrb
mov
lcall
incl
out
lock
mov
pop
cmp
pushf
pop
daa
cmpl
int
rolb
push
out
sar
push
mov
mov
xchg
aas
sub
mull
aas
ljmp
mov
inc
inc
cltd
ds
mov
mov
movsl
pushf
aas
popf
cmpsb
test
popf
xor
inc
jmp
mov
adc
enter
sub
addr16
incb
inc
add
dec
cs
loopne
shl
inc
lods
xchg
ss
add
outsl
movsb
fcoms
xor
and
rorl
cmp
fs
ss
and
rorl
sbb
shl
call
xchg
adc
daa
cs
dec
add
jo
inc
xchg
add
stos
sbb
cmp
out
loop
and
pop
int3
sub
and
push
lahf
loop
add
sbb
xchg
mov
push
lahf
insb
pop
sbb
scas
mov
adc
push
stc
push
aaa
ret
popf
adc
mov
repz
sbb
cmpsl
bound
incb
mov
pop
fisubs
scas
pop
notl
leave
pop
xor
and
cmp
mov
push
imul
stos
scas
mov
sbb
push
psadbw
loopne
and
aad
or
cmp
fs
inc
add
pop
adc
jmp
pop
xchg
sub
inc
push
scas
mov
ja
ljmp
lahf
stc
jmp
inc
stc
enter
xchg
xor
rorb
mov
cmpsb
lock
popw
outsb
cmp
ss
jg
jno
stos
add
rcll
jns
shr
rcrl
sbb
test
push
fistl
adc
jnp
mov
loop
and
lds
sub
fwait
in
or
fs
je
addl
mov
sbb
movsl
mov
test
sarb
jo
testl
cli
in
mov
cmp
repnz
std
in
mov
jne
movsl
mov
push
fisttps
jp
cmpsb
push
imul
popf
sub
and
jo
and
in
icebp
sbb
pop
pop
mov
pop
pushfw
pop
dec
int3
pop
jnp
cld
add
das
xchg
mov
jae
scas
sub
pop
mov
popf
pusha
mov
cmp
hlt
cmp
push
imul
mov
sahf
push
mov
pushl
mov
xchg
testb
or
es
mov
mov
mov
mov
out
sub
sar
lods
arpl
inc
mov
sub
dec
cwtl
mov
out
fcmovnb
sti
jle
out
sbb
mov
add
dec
scas
sbb
mov
icebp
jge
pop
scas
add
adc
pushf
aad
cmp
stos
mov
pop
mov
add
ds
mov
nop
mov
lcall
mov
cli
rcrl
aam
iret
loop
xor
and
enter
dec
inc
inc
inc
data16
call
pushf
ds
lret
loop
mov
out
adc
sarl
ja
xchg
push
cmp
mov
and
jne
shr
cwtl
mov
cltd
lds
fildll
xor
gs
cli
das
int
sbb
dec
call
icebp
mov
mov
inc
pop
mov
mov
rorb
fs
dec
jae
dec
dec
data16
inc
iret
std
in
cmp
sbb
test
insl
sbb
jno
in
data16
leave
in
fdivrs
jnp
dec
movsl
dec
mov
jnp
notb
xorb
cmpsb
inc
gs
imul
xor
je
outsl
mov
call
call
jno
cmp
mov
and
pop
addr16
cmc
test
js
add
or
mov
xchg
xchg
js
lock
xchg
fistps
jecxz
cld
adc
pop
mov
or
cmp
jp
inc
xor
stos
ljmp
mov
lods
push
lcall
rcll
xor
push
xor
pop
ss
jns
add
adc
cmpsl
dec
adc
mov
in
dec
jnp
mov
and
insl
xchg
inc
cmp
movntq
out
mov
dec
sbb
sub
push
xor
and
mov
test
repnz
rorl
add
adc
mov
stc
shrl
sbb
orps
inc
or
mov
lock
in
pop
pop
cwtl
adc
call
push
out
mov
xchg
push
scas
mov
enter
mov
sub
lahf
inc
js
hlt
pop
add
add
or
push
imul
call
inc
cmpsb
les
sbb
jmp
rorl
push
mov
sub
in
aam
jecxz
int
insl
outsb
xchg
cmp
pop
jp
inc
push
das
inc
test
cmpsl
push
jb
pop
cmp
and
sub
call
pop
or
in
rcll
jb
sbb
out
mov
mov
cmp
nop
jge
repz
gs
push
enter
les
dec
jecxz
sbbl
scas
pop
and
rcll
scas
lods
push
aad
stos
jb
push
adc
push
fsubrl
test
jo
add
bound
dec
sti
dec
addr16
fsubp
sbb
std
xor
clc
ret
fsubr
in
out
outsb
sbbl
fnsave
clc
push
aas
add
in
popf
sub
aam
movsl
fadd
sbb
callw
add
fcmovb
lods
test
sub
ret
stc
aas
jecxz
in
adcl
ss
repz
out
prefetch
rcll
xchg
mov
das
dec
xchg
rol
push
roll
nop
mov
mov
sahf
jge
jb
gs
sub
mov
push
xorb
loope
mov
inc
push
add
mov
gs
add
stos
rcrl
push
dec
lds
mulb
push
mov
mov
dec
mov
lea
sub
ja
or
lea
jle
in
insb
les
ds
adc
sar
test
xchg
icebp
push
addl
mov
sti
and
fstps
fscale
fsubrp
sahf
fldenv
push
mov
pushf
push
popa
scas
insl
mov
mov
pop
fimull
stos
cld
push
inc
out
and
inc
and
iret
mov
xchg
inc
roll
cmp
cmp
outsb
and
aam
shlb
stos
inc
adc
mov
icebp
dec
loope
mov
sub
sahf
sub
gs
adc
jg
fbstp
call
cmp
in
adc
lock
cmp
lahf
inc
lret
mov
mov
lds
or
mov
in
cmp
movsl
xchg
out
cli
adc
ss
jbe
shlb
addr16
push
in
pop
mov
adcb
add
add
loopne
mov
data16
pusha
outsb
addl
lcall
jbe
push
mov
call
dec
jo
inc
cmp
iret
mov
mov
mov
dec
lds
icebp
push
cmp
cmc
xchg
inc
inc
cmp
inc
mov
adc
fbld
lret
push
cld
test
in
jns
imul
cli
mov
aam
push
movsb
iret
push
cmp
inc
xor
stos
push
sbb
cmp
pop
punpcklwd
repnz
lahf
xchg
test
pop
mov
loopne
pop
lods
inc
ljmp
xchg
or
data16
scas
mov
in
lods
movsl
push
loop
aad
loope
insb
jbe
fcmovb
jge
mov
jge
roll
test
push
repnz
stos
adc
push
inc
sarb
lret
dec
orl
pop
lret
dec
and
adc
vmread
repnz
out
add
jecxz
adc
test
mov
xor
mov
sti
roll
xor
and
dec
sarb
cmp
aaa
data16
sahf
push
add
arpl
dec
cmp
or
jp
inc
lea
jnp
clc
fidivl
push
xchg
fdivp
out
jle
pop
mov
cmp
fs
lret
adc
nop
in
or
dec
sbb
mov
dec
test
js
stos
push
repnz
in
cmpsb
test
mov
iret
out
arpl
xchg
push
and
lcall
xchg
pop
int3
push
cmc
orb
sub
inc
pop
dec
cmp
jne
sbb
mov
outsl
inc
iret
bound
sti
fisttpl
xorb
xchg
lret
rcrb
ss
inc
and
ljmp
mov
dec
into
or
sub
sub
push
popf
out
cmpsl
dec
xlat
jno
pop
and
mov
les
or
imul
inc
dec
push
pop
dec
fdivp
pop
jne
lods
out
stc
pop
les
test
add
xor
sub
push
imul
adc
cld
rcrl
jae
test
rcrb
arpl
sbb
or
repz
xor
cmp
insl
mov
jmp
or
and
fisubrl
mov
mov
rcl
rcrl
jle
push
in
popa
mov
mov
push
adc
mov
imul
push
push
sbb
ret
ret
outsl
cltd
lret
mov
popa
out
xchg
push
pop
fldcw
sahf
or
gs
es
push
data16
popf
cld
mov
xor
adc
repnz
mov
push
sbb
push
jnp
mov
int3
and
in
add
loope
shlb
sarl
jp
daa
sub
cmp
mov
fnstenv
push
sub
adc
fldl
pop
stc
sbb
mov
or
push
add
loop
je
and
mov
roll
outsb
popa
lea
js
fildl
scas
scas
xor
push
adc
rcr
and
add
xchg
mov
pop
clc
inc
push
push
mov
ret
sahf
jbe
xlat
sahf
push
pop
stos
iret
in
lahf
xchg
mov
int3
aaa
scas
mov
xchg
xchg
dec
ds
in
clc
xor
and
inc
jle
shll
cmp
cmp
mov
mov
sub
jne,pt
mov
icebp
pop
mov
mov
outsl
xor
lcall
test
xor
jae
fistpll
push
arpl
orb
pop
cltd
cli
dec
in
lds
jns
subb
std
hlt
in
lds
adc
adc
testl
popa
or
test
icebp
pop
xchg
loop
push
insb
js
mov
insb
pop
scas
mov
mov
jnp
gs
xor
fidivrs
popf
mov
jbe
and
xor
cmp
or
or
loope
jb
outsb
cltd
mov
dec
ret
mov
adc
out
cs
fmuls
in
xchg
imul
call
push
push
sbb
mov
sbb
sub
pop
movsl
xlat
shl
lods
out
aas
jne
adc
push
jmp
xchg
add
and
lock
std
daa
push
and
jp
ror
push
mov
aaa
movb
es
sub
mov
xor
inc
xchg
pop
adc
arpl
pop
and
lret
sbb
jmp
lret
pop
adc
fsubr
jnp
fstpt
inc
mov
into
inc
ja
jne
jne
clc
les
xchg
imul
pop
mov
lahf
and
bound
hlt
and
sub
pusha
mov
leave
imul
lods
jno
or
fsub
cli
nop
xor
test
lret
loopne
lds
cmp
xor
add
mov
ja
sbb
or
sub
push
jne
and
mov
sbb
push
jnp
clc
add
push
les
arpl
inc
clc
sub
mov
iret
popf
inc
lds
ret
push
pop
mov
jmp
mov
in
or
rcrl
addr16
push
lcall
sarb
jb
push
stos
test
inc
push
or
aas
inc
or
cmpsl
xchg
pushl
iret
mov
nop
ror
in
enter
stc
jno
xchg
mov
pop
loopne
shlb
cmpsl
popa
lahf
pushf
jno
int
icebp
daa
mov
cvtdq2ps
sub
dec
test
adc
je
testb
jp
jl
or
mov
mov
insl
jmp
or
repnz
pop
arpl
fbstp
pop
dec
dec
cmp
sbb
dec
repnz
mov
push
lods
ss
sub
cltd
push
gs
cmp
adc
shrl
mov
xchg
sbb
mov
jbe
fwait
jne
imul
dec
or
cmpsb
jo
orb
cmc
xor
add
punpckldq
mov
aam
cmc
and
push
sbb
ds
dec
cld
mov
std
lds
fs
stos
es
outsl
mov
cli
pop
ss
ds
xor
dec
push
and
fwait
dec
mov
dec
lea
pop
orb
mov
mov
and
cmpsb
add
push
cmp
insb
or
pop
sbb
jl
lods
push
mov
arpl
cltd
lret
jns
test
inc
in
push
xchg
xlat
fnstsw
jne
push
mov
mov
adc
and
jmp
push
sub
cmpsb
ret
jecxz
or
adc
xchg
ljmp
jb
inc
iret
push
shrl
push
inc
sbb
out
mov
adc
sbb
push
mov
ret
loope
rcrl
aam
mov
xor
push
mov
jp
xchg
notl
xchg
push
cwtl
sub
fisttpl
jp
sub
orl
cmp
or
bsf
fisubrs
xchg
in
xchg
negl
cwtl
xlat
pop
lea
push
and
pop
add
mov
jo
icebp
loopne
cmp
ror
lret
sbb
dec
cmp
fs
dec
dec
cmp
ds
repnz
imul
mov
add
stos
dec
ror
xor
xor
dec
xchg
clc
std
inc
repnz
popl
cli
lea
mov
push
pushf
ja
loop
jae
fs
fcompl
push
dec
xorb
inc
xor
xchg
lods
pushf
mov
cmp
outsb
dec
ljmp
movsl
adc
sahf
fwait
dec
fwait
push
loop
push
inc
and
jmp
sub
push
adc
lea
mov
adc
loope
filds
or
push
and
shll
or
or
push
dec
jae
sbb
insb
mov
mov
loop
mov
pop
cmp
pop
test
xchg
mov
adcb
lret
push
inc
mov
mov
fnstcw
jp
dec
les
add
cmp
fwait
or
add
mov
sti
arpl
jne
mov
dec
or
jle
jecxz
jns
xlat
mov
and
and
sub
jmp
jb
xchg
add
or
pop
cld
cmp
out
dec
and
add
lds
lea
call
cltd
mov
jge
insl
ret
mov
sahf
sbb
insb
mov
push
lods
pop
aaa
les
dec
mov
push
or
dec
pop
sbb
lret
bound
mov
adc
mov
jmp
fildl
gs
mov
pusha
mov
movsb
push
jnp
shrb
fcom
mov
and
out
std
mov
in
int3
sub
sub
les
sub
dec
mov
shlb
mov
xlat
xchg
push
pusha
fidivrs
call
loope
or
insl
mov
sub
push
and
add
pop
mov
sahf
jmp
out
sub
stos
daa
sbbl
xchg
jne
add
push
daa
ljmp
sar
push
loopne
call
int3
fisttpl
inc
add
lcall
icebp
pop
rclb
mov
enter
loopne
jbe
dec
call
mov
adc
scas
pop
nop
or
sti
inc
pop
xor
inc
push
sub
test
xor
push
ljmp
cmp
jnp
lret
or
insb
cmc
es
inc
cs
push
xchg
sbbl
inc
enter
pop
dec
inc
xor
pop
mov
cmpsl
arpl
pop
jb
xchg
outsl
or
or
add
cmp
idivb
cmp
adc
mov
mov
xchg
leave
sbb
mov
decb
dec
les
cwtl
ja
mov
pop
push
aad
iret
jbe
fildl
sbb
push
xchg
add
int3
gs
mov
inc
movsl
cmp
inc
loopne
mov
movsl
jne,pn
lret
rcl
mov
mov
mov
inc
dec
js
mov
mov
mov
out
outsb
sarl
adc
int
call
pop
ret
push
pop
pushl
dec
cmp
cld
scas
sar
cmc
in
mov
inc
imul
inc
xor
sub
push
jmp
add
popa
lods
fidivrs
push
cmp
pop
insb
or
mov
lock
push
sub
push
jb
sar
ud2
sarl
test
ret
imul
push
popf
add
inc
mov
mov
imull
mov
outsb
pushf
lcall
fdiv
je
test
mov
xchg
out
or
stos
leave
cmp
inc
jp
pop
adc
sub
mov
pop
bound
dec
pop
sbb
clc
pusha
or
not
pop
pop
push
ss
lods
popf
lods
or
mov
in
mov
xchg
orb
std
js
push
push
imul
xchg
movsl
es
dec
idiv
aas
mov
lea
mov
inc
mov
call
into
lahf
mov
sbb
cwtl
popa
lar
loop
inc
add
jmp
fimull
adc
mov
and
mov
loope
test
push
mov
mov
dec
cwtl
jno
nop
add
int
cltd
mov
cmc
jo
pop
pop
and
mov
and
addb
repz
xchg
andb
mov
jbe
adc
pop
out
cli
out
scas
gs
lret
cmp
and
loopne
rclb
daa
cmp
ljmp
inc
cltd
aaa
imul
jb
inc
test
pop
mov
ljmp
sbb
aaa
inc
daa
pop
hlt
idivl
mov
sbb
push
pushf
mov
fs
lods
arpl
jp
arpl
leave
aas
mov
lret
je
movsb
fs
pop
jae
fwait
cmp
push
mov
mov
fsubrl
fisubs
inc
add
push
repz
fldcw
or
adcl
aaa
cwtl
dec
in
mov
and
ror
mov
xchg
lods
leave
or
scas
xlat
inc
cmpsb
arpl
mov
mov
dec
adc
stos
shr
lock
std
push
mov
add
dec
push
push
into
mov
sbb
loopne
inc
inc
aaa
addl
inc
arpl
out
inc
cmp
push
add
sbb
cwtl
xchg
stos
dec
cwtl
aaa
sbb
cld
push
xor
and
xchg
adcl
negb
pop
stc
out
adc
aas
add
mov
add
xor
repz
fcoms
xor
push
xor
mov
scas
jnp
sahf
data16
filds
jle
and
pop
xor
sti
xchg
xchg
ds
pusha
xor
push
or
inc
or
mov
jge
dec
or
jns
addr16
aam
mov
mov
sbb
mov
fidivs
scas
aam
mov
int
jo,pt
mov
cltd
scas
and
cmp
add
iret
xor
adc
xchg
pop
popf
int
push
addr16
cli
gs
and
or
aad
hlt
jns
fcompl
icebp
pop
decl
or
inc
hlt
shl
mov
pop
xchg
sub
push
jmp
hlt
testl
mov
inc
mov
jbe
fadds
dec
daa
loop
jle
mov
mov
xor
ljmp
ss
dec
fsubrp
xor
xchg
mov
loopne
and
aaa
jnp
and
mov
jnp
out
inc
add
sub
inc
lcall
cltd
das
ret
cmp
orl
cs
push
xchg
ja
mov
mov
add
neg
mov
pop
mov
inc
lods
xchg
mov
lds
test
int
mov
or
sbb
jle
enter
scas
mov
cli
lods
aas
hlt
inc
je
add
push
fwait
enter
into
movsl
mov
dec
jp
adc
jecxz
jg
or
xor
and
ds
sub
clc
popf
fsts
loopne
inc
sub
insb
jle
sub
push
lods
cwtl
roll
fs
lret
out
out
inc
xor
push
xorb
je
inc
inc
mov
addr16
xchg
cmp
loop
pop
push
out
scas
mov
lret
mov
out
out
adc
scas
js
mov
cmp
cmp
aas
xlat
and
add
loope
imulb
cmp
or
test
inc
rorl
clc
mov
mov
xchg
dec
fiadds
xchg
jnp
shr
stos
stc
ds
fcoml
outsl
add
cli
into
loopne
fld
pushl
movsl
gs
mov
pop
test
out
xchg
into
scas
je
ret
call
add
cld
std
xchg
aaa
cs
jo
and
xor
stc
or
cmp
xor
fnstenv
xor
pushf
pop
adc
or
pop
addb
lock
or
jecxz
pop
aas
lock
adc
xchg
arpl
shll
mov
jo
mov
cmp
shll
data16
imul
jae
outsl
aad
mov
ret
inc
rcll
punpcklwd
xor
fs
adc
push
dec
jmp
mov
pushf
push
pop
cmp
fxch
loop
or
lcall
lods
mov
sub
sub
inc
mov
scas
fistpl
stc
adc
push
mov
shl
in
xlat
bound
test
xchg
inc
mov
addr16
cmp
mov
mov
dec
pop
aas
scas
mov
pop
cmp
icebp
xchg
lcall
xlat
mov
jg
pop
arpl
pop
movsb
mulb
adc
mov
test
pop
loopne
jne
xor
or
pushf
push
mov
pop
pop
std
and
mov
mov
lret
lahf
lods
add
subb
stos
mov
mov
hlt
aas
mov
push
mov
mov
outsb
cmp
icebp
or
dec
inc
jo
cli
nop
andl
and
mov
inc
xor
pop
leave
or
add
sbb
sbb
xchg
in
adc
push
pop
mov
cmpl
mov
sbb
mov
nop
stc
mov
sub
daa
movlps
xlat
shlb
push
test
aad
xor
or
les
mov
pop
test
xchg
sbb
in
dec
fisubl
sub
in
xchg
fcomip
pop
pop
sub
fprem
mov
mov
jne
mov
fwait
mov
and
std
int3
mov
dec
pop
inc
push
lcall
pop
and
push
sub
stos
adc
les
cmp
xor
outsl
mov
sub
addr16
xchg
add
mov
iret
adc
jne
xor
push
aaa
out
pop
dec
std
scas
jns
mov
insb
stos
fcoms
sbb
repnz
jecxz
ror
in
cmpsb
fdivrl
xchg
lahf
inc
xchg
xchg
mov
push
cmpl
out
push
pop
stc
arpl
hlt
aas
idiv
ret
adc
jns
cmpsl
andl
repnz
lea
loopne
mov
iret
sub
or
jge
out
movsl
xchg
loopne
pop
in
es
dec
jo
lods
repnz
imul
lds
bound
xor
fbstp
aad
hlt
dec
divb
xchg
test
cmp
push
jle
jb
mov
xor
xchg
push
call
xor
xor
lods
shll
sbbb
xchg
data16
popa
rorb
inc
inc
gs
inc
ljmp
imul
inc
orl
adc
adc
inc
xor
cmp
and
sub
mov
outsl
lret
add
mov
pop
sub
iret
pop
int
enter
mov
test
enter
test
push
and
ja
xchg
push
loope
push
cli
xor
imul
add
push
mov
mov
mov
sub
push
sub
mov
xlat
push
bound
xchg
arpl
sub
stc
or
lea
test
dec
xchg
adc
ljmp
inc
rcrl
mov
adc
cmp
lahf
enter
daa
cmp
das
dec
mov
in
rorb
outsb
mov
cmp
call
mov
inc
mov
add
push
loope
cltd
and
faddl
and
mov
shrb
insb
mov
mov
dec
lods
je
insb
out
sbb
loope
sub
dec
push
sbb
rep
push
mov
and
dec
xorl
insb
jne
xchg
test
and
flds
push
ficompl
in
daa
xor
nop
loopne
ljmp
loop
dec
xorb
fadd
mov
xor
jb
test
add
pop
add
cmp
inc
lods
jecxz
or
jne
insl
test
test
xchg
mov
dec
stos
subb
push
call
les
push
cs
mov
sti
rcrb
aam
jp
xor
jl
mov
lock
dec
lock
mov
mov
adc
xor
xor
testb
pusha
lock
or
jbe
push
daa
in
xor
and
incl
ljmp
dec
xor
loope
cmp
call
idivl
dec
int3
mov
divb
test
pop
jg
stos
cmpsl
sahf
andl
mov
mov
mov
xchg
out
push
daa
or
repnz
inc
aam
adc
test
iret
roll
es
mov
pop
xlat
ja
cmpb
lret
push
xchg
cli
add
cld
es
stos
mov
cwtl
mov
push
jg
jge
dec
sub
or
ret
cmp
jb
fwait
lea
sar
ja
add
mov
mov
movsl
imul
aas
dec
jae
sbb
xor
mov
xor
pop
daa
and
insl
sub
in
and
fwait
lods
aad
mov
or
lcall
jnp
and
movsb
in
jge
jnp
adc
xchg
in
cmp
ss
jge
fdivrl
sbb
cmp
mov
fldt
mov
mov
xchg
shll
icebp
jge
adc
std
cmp
mov
inc
lock
mov
hlt
sbb
das
xor
shlb
repz
lret
lea
stc
mov
add
push
jp
pop
jg
testb
push
lods
mov
push
inc
fnstsw
lcall
and
cmpsl
imul
jo,pn
outsl
hlt
adc
sub
jp
inc
dec
jns
stos
js
lret
adc
in
fdivs
push
scas
mov
icebp
jne
mov
icebp
mov
cmpsl
jmp
inc
mov
inc
jnp
imul
mov
test
jle
xchg
into
insl
mov
or
lea
outsb
cmp
sub
mov
mov
or
nop
pop
in
cld
mov
les
ja
mov
xchg
push
addl
jmp
or
fstp
bound
call
dec
js
shlb
jnp
into
pop
mov
inc
push
cmp
scas
std
stc
rcrb
push
int3
pop
mov
jmp
or
jb
je
imul
aam
insb
lock
ss
mov
sahf
cmp
push
mov
fstpt
pop
pop
xlat
repz
adc
cs
clc
mov
das
cmp
dec
mov
or
cmp
cwtl
in
jl
fisttps
push
push
add
call
out
lcall
inc
mov
adc
push
test
jg
sub
mov
inc
or
sbb
pop
ljmp
inc
std
jb
scas
jno
and
lea
sahf
and
pop
popf
xchg
pushf
call
inc
in
outsl
and
aas
jp
mov
nop
xor
mov
into
xchg
lods
cmpsb
sub
and
mov
into
and
in
cmp
repnz
push
or
adc
xchg
add
int
xchg
jmp
mov
sub
lcall
sub
repnz
ret
hlt
jle
pusha
fs
lcall
dec
adc
cmp
add
dec
add
jne
add
xlat
mov
jae
push
sbb
mov
mov
jle
and
push
rorb
repz
and
fsub
inc
ds
sub
test
hlt
ja
shl
stc
mov
sti
loop
cmp
mov
cmpsb
stc
and
test
nop
mov
cld
data16
cld
ljmp
mov
push
inc
dec
sub
pop
mov
dec
movsl
jo
cmp
pop
cmp
leave
jl
aas
cmp
mov
pusha
stc
and
sub
dec
inc
inc
xor
xor
xchg
cmpsl
mov
popa
call
lods
dec
xchg
jbe
ljmp
int3
test
fwait
lea
sbb
xor
imul
ss
and
xlat
outsb
xor
les
mov
mov
clc
out
jp
les
stc
lret
pop
js
mov
insl
push
sub
mov
testl
shr
cmp
imul
adc
jne
xchg
daa
sti
test
adc
push
xor
dec
or
loope
pop
stos
arpl
mov
xlat
jbe
xor
mov
or
sub
mov
xchg
sbb
sbb
inc
pop
jp
sbb
pop
fldl
fs
push
sbbl
and
push
dec
adc
popl
and
lods
pop
mov
push
lret
xchg
push
push
adc
idivb
xor
shlb
testb
das
cmp
aad
pop
imul
js
ffree
cmp
push
mov
sti
in
jmp
in
mov
inc
xor
movsl
and
enter
mov
lods
cmp
xchg
js
cwtl
inc
fidivrl
fidivrs
nop
sbb
jns
xlat
mov
and
cld
pop
insb
xchg
or
push
mov
mov
scas
mov
cmc
cmp
fmul
clc
in
xlat
inc
inc
inc
cwtl
test
scas
in
mov
pop
inc
out
push
pop
icebp
mov
add
lret
pop
or
mov
pushf
in
mov
xchg
sbb
sbb
clc
aam
mov
mov
jnp
ret
or
sbb
adc
mov
and
outsl
pop
call
mov
or
enter
cli
add
xchg
push
adc
insb
pop
bound
xchg
fcompl
repnz
pop
inc
testb
in
lods
call
fsts
lds
mov
mov
fcmovb
dec
cltd
add
mov
addr16
mov
nop
insb
aad
mov
stc
inc
ret
mov
adc
andb
inc
cwtl
pop
fs
push
stos
fstl
pop
iret
mov
rol
jne
add
pushf
sub
dec
cmc
dec
ds
sub
sub
sahf
add
pop
mov
xor
pop
idivb
out
rclb
mov
imul
idivb
sub
stc
inc
cmpl
sbb
loop
xor
mov
xchg
pop
or
jno
mov
out
xor
dec
movsb
dec
adc
dec
or
insl
pop
xchg
mov
daa
insl
push
test
sbb
or
data16
mov
or
loopne
push
or
sbb
pop
pop
sub
test
sub
les
cmp
insb
jb
rcrb
cmp
pop
cmp
insb
repnz
rcrb
push
sub
mov
fdivrp
popf
push
dec
stc
pusha
popf
sub
sub
mov
in
push
jnp
lds
rol
mov
jbe
jns
divb
add
dec
test
cmp
xchg
fs
adc
flds
test
mov
pop
jge
sub
movsb
or
in
jne
pop
nop
inc
stc
push
mov
and
mov
xlat
iret
pop
into
insb
mov
pushf
outsl
scas
inc
adc
sub
dec
mov
fnstcw
sbb
or
in
mov
loopne
xchg
aad
out
push
push
inc
outsb
hlt
repz
bound
xor
ret
insb
mov
mov
cli
stos
inc
and
push
stos
cmpl
add
sbb
xor
outsl
add
pusha
sti
inc
xchg
movsb
cmc
push
inc
jg
jne
clc
cmp
add
mov
inc
and
mov
stos
popa
test
outsl
insb
call
mov
rolb
jb
sbb
arpl
inc
mov
lds
cmc
mov
adc
cs
insb
adc
aam
inc
xor
add
add
mov
add
lods
mov
inc
cmp
push
push
mov
in
sbb
jno
hlt
rolb
decl
pusha
mov
les
das
pop
outsb
push
xchg
lea
scas
loopew
sbb
sarb
les
sti
inc
or
add
or
imul
jecxz
mov
hlt
xor
aas
add
notb
xlat
outsb
dec
mov
fldcw
add
pop
push
and
fidivs
xor
and
decl
fstpl
mov
inc
roll
xchg
inc
in
add
mov
or
jp
sub
xchg
std
jecxz
insl
shl
test
inc
adcb
int3
test
bound
push
dec
ds
shlb
adc
in
adc
mov
in
or
lret
mov
out
std
lods
aas
add
jg
cmc
addr16
cwtl
pushl
stc
jnp
inc
cmp
lock
dec
xchg
test
mov
fs
xchg
rorl
pop
mov
iret
arpl
fcoms
xor
outsl
jmp
fldt
iret
inc
push
ds
adc
into
fldcw
mov
dec
call
xchg
xor
movsl
mov
aad
dec
adc
push
fadds
push
pop
add
inc
add
imul
fwait
test
sahf
mov
jo
add
mov
addr16
adc
cmpsl
fldt
xchg
pop
inc
daa
adc
inc
or
lea
push
jno
adc
pop
cmp
mov
add
pop
push
jbe
test
cld
push
xor
mov
mov
mov
push
insl
loop
in
shrl
xor
xchg
sub
out
xchg
es
out
iret
movsb
inc
xchg
js
adc
dec
punpckhdq
mov
pop
cltd
std
test
cmp
loope
test
push
jo
cs
push
add
xchg
xchg
out
imul
in
sbb
mov
mov
inc
pop
clc
ret
cmc
popf
lret
cmpsl
in
pop
pop
loopne
mov
dec
cwtl
loop
aas
js
leave
mov
pop
bound
call
cmp
test
js
cmc
jp
out
push
aad
dec
dec
fucomp
jmp
pop
adc
and
xchg
add
addr16
sahf
out
testb
mov
push
aaa
les
stos
mov
and
pop
ljmp
xor
push
subl
mov
or
bound
jecxz
inc
in
mov
outsb
or
dec
sub
lds
js
ds
and
leave
mov
mov
xchg
leave
pop
mov
xchg
jecxz
push
rolb
pop
fs
addr16
repnz
in
stos
lahf
adc
xchg
fwait
cmpsl
lock
repz
cld
std
pushf
pop
jae
js
rcr
imul
inc
add
jno
sbb
movb
xchg
pop
rorl
aaa
mov
test
loope
cmp
int
jle
cmp
push
xchg
adc
popa
ja
xor
mov
mov
mov
sub
or
retw
mov
fadds
jmp
xchg
adc
jl
mov
movsl
mov
ret
and
ds
mov
push
mov
pop
dec
mov
xor
out
test
inc
gs
jg
xor
cmp
stos
ja
setle
inc
mov
pop
pop
jle
lock
inc
sahf
jns
into
imul
mov
xchg
sti
mov
pop
jne
fmulp
outsl
dec
mov
mov
xor
dec
popa
je
mov
lcall
mov
mov
dec
insb
lcall
nop
mov
popa
ss
add
cltd
mull
jo
out
std
shll
or
in
jno
pop
sbb
aaa
cmp
xchg
idivb
xor
outsb
outsl
cmp
js
inc
shlb
scas
fdivl
fsubl
dec
xchg
test
xor
sbb
in
jle
test
imul
mov
inc
ret
shll
fsub
add
movsl
stos
aaa
push
dec
push
mov
mov
xchg
sbb
or
adc
pop
out
xchg
mov
out
out
orb
stc
jg
or
mov
stc
jb
pop
cs
je
and
push
cmp
shll
push
movaps
xchg
cld
xchg
jno
jb
pop
hlt
cmpsl
jb
mov
cmp
bound
faddl
mov
pop
and
idivl
leave
in
inc
mov
daa
rcrl
jl
mov
cltd
push
adc
sar
into
cmp
lahf
sbb
popa
test
push
imul
inc
arpl
aam
sar
pusha
mov
adc
cltd
mov
add
cmp
sub
bound
mov
out
mov
lahf
push
push
dec
daa
push
add
inc
stos
or
sar
lea
adc
xchg
subb
jnp
sbb
jmp
mov
cmp
xchg
adc
dec
push
xchg
xchg
pop
rolb
rorb
lahf
nop
cmp
push
mov
cmp
xchg
dec
jns
aad
fildl
xchg
jae
sub
adc
push
fidivrl
cmp
push
and
arpl
inc
lods
fsts
call
cmp
rcll
scas
and
dec
ds
dec
sbb
imul
pop
rcrl
dec
jle
add
imul
cmp
lahf
push
mov
push
rcl
cmp
sbb
fwait
pushf
loope
or
xorb
mov
or
mov
pop
jae
pop
push
popf
and
sub
in
shlb
xor
idivl
xchg
sub
cmp
and
add
stos
loopne
mov
jno
test
inc
outsb
cmpsb
out
hlt
jo
mov
mov
xchg
vxorps
mov
ret
xlat
pop
sbb
popl
xchg
and
outsl
push
rcrl
dec
add
insl
cmpsl
call
inc
dec
out
dec
imul
testl
std
mov
clc
aas
cmp
popf
arpl
mov
push
dec
xchg
dec
cmp
add
repz
jle
shlb
outsb
stos
and
insl
mov
sub
inc
popf
jne
jno
sub
sti
lds
test
push
lea
int3
mov
fwait
push
out
or
pop
xchg
loope
fwait
pop
mov
outsb
mov
dec
gs
pop
ret
jle
mov
pop
xchg
jle
inc
lods
fcmovnb
bound
lret
jmp
push
adc
ja
jle
xchg
xor
mov
sbb
pop
mov
pop
out
sbb
adc
pop
xor
mov
xchg
in
pop
sbb
aaa
shlb
data16
aad
sbb
adc
mov
jge
and
push
sbb
in
cmpsb
mov
stos
negl
inc
repz
push
sbb
sbb
jne
and
daa
rol
outsb
cmpsl
mov
pop
mov
jbe
jbe
mov
xchg
mov
repnz
sub
outsb
jns
cs
sti
xor
int
or
push
push
cmp
fcompl
inc
push
pop
xchg
fisttpll
ror
aaa
cmp
cmpsl
jne
pop
and
dec
hlt
ljmp
popf
out
loop
xlat
push
cltd
pop
xor
push
sub
enter
mov
sbb
ljmp
scas
push
inc
jl
pop
pop
mov
inc
jle
sbb
testl
outsl
aaa
cmp
mov
jecxz
or
es
sbb
scas
mov
pop
sarl
xor
mov
push
pop
mov
ljmp
push
sbb
lcall
mov
mov
pop
ds
stc
cmp
je
cmp
mov
mov
sbb
cmp
fs
cs
mov
and
lock
fdivrl
sahf
jg
jnp
rcr
xchg
lret
xor
out
pop
fst
test
push
sahf
or
cwtl
sbb
cmp
mov
ret
mov
in
loopne
push
xchg
inc
add
shll
dec
dec
out
mov
xchg
shlb
cmp
or
pop
pop
and
pusha
test
loop
test
add
mov
dec
lock
cltd
cmp
dec
and
cltd
mov
ret
enter
dec
ret
stos
test
andl
xor
jge
in
pop
movsl
mov
and
gs
push
push
das
stc
mov
or
xchg
adc
or
imul
mov
mov
ljmp
jecxz
jae
push
sbb
and
cltd
test
xor
push
das
es
mov
out
or
fs
ds
dec
ljmp
and
xchg
xchg
ret
mov
pop
dec
dec
lods
aad
cs
orb
xchg
and
gs
insl
push
add
sub
mov
insl
and
jne
adc
adc
repnz
sbbb
xchg
push
mov
xchg
and
int
gs
mov
aad
fisubl
sbb
or
cld
xor
sbb
sbb
out
and
sbb
mulb
scas
fistpll
sub
add
push
mov
push
adc
lcall
pop
cmc
clc
mov
in
mov
aaa
mov
sti
inc
cmp
popf
push
in
stc
fsubl
pop
pop
mov
lods
es
push
dec
mov
push
xor
test
mov
popf
xchg
push
scas
adc
push
ret
ret
leave
mov
sbb
adc
jecxz
aaa
mov
cmpsl
imul
or
xchg
mov
dec
push
xchg
repz
popf
jnp
sbb
in
jae
dec
loope
xor
mov
data16
cmp
cmp
outsb
fadds
jne
cmp
iret
mov
xchg
xchg
repz
in
cmp
xor
sbb
adc
sbb
pop
add
out
shrb
dec
pop
or
test
sbb
dec
imul
pop
sbb
pop
xchg
aaa
inc
je
dec
adc
dec
ret
shrb
cld
push
sbb
imul
scas
mov
push
lret
cmpsl
js
in
out
nop
cmc
idivb
sbbb
scas
xor
ret
es
ja
imul
insb
jecxz
fs
jo
pop
sub
les
push
sti
mov
add
or
incb
popa
cmp
cltd
mov
sub
stos
data16
mov
dec
add
movsl
sbb
in
or
or
fisttpll
jne
add
outsb
stos
fwait
push
xchg
outsb
repnz
and
mov
outsb
ss
mov
xchg
adcb
xor
outsl
cmpsl
repz
mov
imul
sahf
test
cmp
xor
stos
xchg
sub
cli
gs
sub
adc
mov
iret
sub
cmp
mulb
cmp
jns
or
dec
add
jne
sub
enter
in
mov
imul
mov
adc
adc
pop
cld
aas
pop
push
mov
repnz
negb
add
rcrb
sbb
push
fmull
lods
ret
movsb
fbstp
push
add
fsub
inc
divb
add
decb
sub
xor
outsb
int
mov
out
mov
mov
into
xor
sub
stos
inc
push
mov
adc
dec
int
or
arpl
gs
xchg
pop
sub
dec
into
mov
push
daa
mov
push
lea
ret
push
add
addb
into
bound
lcall
jns
sub
test
mov
inc
sti
jns
rep
ja
mov
mov
dec
or
adc
push
std
xchg
dec
outsl
push
loopne
fs
jp
dec
sahf
xor
cmp
rcrb
dec
pop
fstps
std
and
or
in
loopne
aas
aas
xor
push
lods
inc
out
jecxz
add
mov
lret
or
xchg
cmp
testb
lea
push
or
mov
fcomps
sbb
mov
push
shr
adc
pop
orb
jno
scas
out
inc
mov
shrb
jecxz
dec
imul
sub
mov
dec
incb
shll
movsb
dec
push
mov
sbbl
adc
das
ja
push
cmp
mov
cmp
popf
adc
out
jmp
cwtl
or
leave
xor
or
cwtl
pop
mov
jmp
int
mov
pushf
out
fcomps
xchg
jp
fidivrl
mov
inc
iret
mov
push
loope
push
dec
pop
lsl
aad
mov
ljmp
ja
inc
rcll
insb
aam
rcrb
popf
pushf
test
lods
mov
jne
and
in
ret
shlb
out
dec
hlt
ficomps
pop
jbe
mov
ljmp
icebp
adc
mov
imul
imul
in
jnp
lret
xlat
dec
inc
mov
hlt
xchg
sbb
aam
push
hlt
mov
inc
int3
and
aaa
inc
hlt
out
cmpsl
orb
pop
repnz
mov
dec
mov
adc
imul
cltd
test
push
sbb
adc
adc
call
mov
arpl
jne
repnz
incl
mov
icebp
lds
or
cmpsb
inc
cltd
push
rorb
jecxz
mov
pop
sub
loope
jns
out
and
insl
and
ds
jno
in
jg
add
test
cmpsl
mov
out
cwtl
dec
addr16
add
xor
jns
sahf
je
adc
cmc
shll
out
sbb
jmp
jmp
jl
out
xchg
cmp
inc
lea
jne
inc
or
pop
loope
es
cmp
inc
xor
imul
push
xchg
jae
in
std
add
fstpl
mov
in
lret
das
std
hlt
push
lods
mov
jbe
testb
arpl
xchg
dec
adc
icebp
push
lock
mov
ret
dec
adc
fisttpl
inc
loope
mov
or
and
aam
orb
out
xchg
inc
pushf
and
cmc
fstp
mov
iret
lods
dec
mov
sahf
lock
out
imul
fsts
scas
out
gs
iret
prefetcht0
lea
dec
push
push
pushf
cmp
pushf
xor
fcompl
jmp
lds
mov
loope
add
or
not
out
and
lds
sub
scas
pop
mov
or
jo
jp
and
les
adc
mov
sub
sbb
std
dec
xchg
pop
test
lahf
pop
mov
aaa
notb
movsl
dec
sbb
mov
testb
push
mov
cmp
inc
inc
test
fsubrl
or
and
cmp
or
fdivr
push
std
mov
mov
pop
stc
mov
jns
arpl
mov
repz
xor
push
or
imul
cmp
and
movsb
cmp
push
push
call
inc
xchg
fcoms
add
movsl
add
cmp
inc
js
xchg
jb
sub
push
sti
adc
cmp
repnz
and
mov
dec
mov
mov
xor
sbb
xorb
xorb
mov
push
imul
jge
enter
adc
push
test
inc
divl
inc
les
addr16
jb
pop
inc
pop
adc
xor
cli
dec
ficoml
cvttps2pi
xorl
sbb
xor
insb
ss
mov
jne
rcrb
in
dec
jp
cmpb
xchg
mov
popf
sbb
push
fcmovu
clc
dec
out
inc
mov
inc
xor
jbe
outsl
pop
stos
push
imul
sbb
push
sub
std
pop
mov
ja
mov
test
cmovp
mov
pop
add
mov
pop
test
sub
mov
icebp
push
ljmp
popa
mov
sahf
jns
push
inc
daa
push
xchg
xor
lds
pop
sub
fcomp
scas
mov
aam
ja
dec
fmuls
je
cmp
add
xor
lock
adc
add
jg
mov
imul
jb
cmpsb
shl
adcl
jno
cmp
fcom
push
insl
bound
mul
inc
lahf
imul
imul
repnz
jp
jp
and
inc
xchg
mov
add
add
jg
aam
sti
pop
sar
rcll
mov
adc
or
fmull
sub
inc
out
aas
sub
adc
nop
push
mov
shlb
call
sub
mov
and
pop
xor
inc
and
adc
test
fcoml
pop
adcl
in
sub
call
push
mov
mov
into
cmpsl
cmpsb
test
or
xchg
jae
cmp
aad
jmp
out
xchg
sub
popa
dec
add
lea
fsubrl
push
aas
push
cmpsb
stos
sub
int
add
adc
and
add
mov
int3
out
and
sub
shr
cmc
out
mov
mov
call
cmpsl
fwait
push
icebp
std
mov
pop
sub
add
xchg
push
mov
jb
xchg
push
push
lods
cltd
scas
js
out
sbb
mov
xor
shrb
movsl
mov
shl
pushf
fs
repz
sub
jnp
hlt
jbe
and
add
sub
xchg
mov
jmp
ss
push
push
pop
jo
movl
xchg
lds
dec
jno
push
jecxz
lea
push
in
filds
popa
clc
cmp
mov
sub
mov
cmp
orl
inc
adc
jae
inc
dec
adc
ret
insl
rcl
std
pop
jo
mov
sarb
iret
imul
push
cltd
cmpsl
test
data16
imul
and
xor
scas
shrb
outsb
fbstp
addr16
lods
lret
repnz
mov
daa
cmpsb
lcall
dec
xor
es
fdivr
or
ljmp
mov
loop
push
bound
mov
inc
push
dec
std
mov
add
inc
push
lret
mov
adc
mov
nop
push
shrl
shlb
icebp
adcb
test
xchg
mov
xor
imul
adc
int3
push
mov
cmp
dec
xor
divl
fucomi
inc
stc
xchg
sub
pop
add
mov
xchg
dec
popf
xor
mov
pop
mov
add
mov
loop
lods
inc
mov
mov
or
movsb
xchg
insb
fdivl
dec
pop
push
decb
inc
outsb
xor
jmp
jmp
stos
sti
lea
int3
jmp
stos
jmp
dec
or
out
inc
and
inc
sbb
les
movsb
jnp
xor
les
scas
inc
inc
mov
data16
repnz
in
nop
cltd
loopne
cmpsl
ret
pop
mov
jle
push
mov
add
sub
cld
cltd
outsb
mov
xor
jp
rcl
dec
adc
stos
jecxz
pushl
or
int3
fs
mov
out
fs
mov
jb
xchg
sbb
imul
push
stos
stc
mov
in
ds
mov
pop
mov
dec
push
into
int3
sti
xchg
inc
ss
sbb
sbb
fwait
ljmp
andb
pop
inc
repz
jo
jl
shll
mov
sub
cmp
mov
imul
int
aas
lret
mov
jnp,pt
push
adc
fmul
pushf
mov
and
mov
cmc
lods
cs
das
fdivrl
xchg
adc
or
sbb
jl
jo
xor
or
cmp
pop
jg
into
ret
in
inc
arpl
cmpsb
mov
mov
xchg
add
cmpsb
lods
and
pop
cmpps
push
imul
sub
mov
cs
sub
adc
sbb
inc
mov
je
bound
lret
andl
inc
out
mov
xor
adc
dec
pop
push
mov
ja
push
mov
pop
sub
je
dec
fisttps
rcll
mov
push
cmpsl
int
and
je
push
aas
dec
push
pop
in
mov
bound
rclb
sti
adcl
movsl
sti
xchg
fcmovnb
mov
clc
sub
dec
mov
mov
pop
mov
dec
pop
and
repnz
cld
and
sbb
add
push
jno
scas
fcmove
push
pusha
mov
push
sbb
loope
mov
lcall
lret
psllw
shll
xor
mov
bound
pop
dec
add
aad
inc
xchg
add
mov
pop
sbb
xchg
fcomi
pop
jge
push
pop
or
xchg
pop
decl
test
je
out
xor
aaa
ja
fmul
push
sub
adc
movsb
in
cwtl
add
cli
popa
jb
aad
mov
sub
add
loop
mov
mov
mov
push
push
popf
repz
xchg
imul
jecxz
mov
shlb
lea
cmp
jo
ds
xchg
mov
mov
inc
and
addb
ss
or
xchg
sarb
sbbb
gs
outsb
lahf
decl
pop
fs
sub
lcall
imul
ja
scas
enter
jae
gs
push
rcr
data16
inc
and
sbb
sub
shll
daa
pop
sbb
mov
jb
add
add
loop
sbb
adc
rcr
xchg
sub
lret
adc
scas
and
in
mov
jns
sahf
insl
fisubrl
jb
push
lods
je
hlt
sub
int3
and
mov
jbe
pcmpeqw
out
shlb
or
inc
mov
mov
insb
lret
cs
dec
pop
jp
cmp
sbb
jne
sbb
ds
push
cld
dec
mov
cli
addr16
ret
pop
xchg
mov
jmp
clc
cmpsl
inc
mov
mov
inc
sub
mov
pushf
sarl
pop
lahf
out
fimuls
mov
jecxz
jmp
and
in
cmp
pop
out
fiaddl
mov
sarl
mov
xchg
fists
jg
shll
mov
jae
mov
in
sbbl
sti
jns
adc
daa
add
mov
push
or
sbb
arpl
push
sbb
movsl
mov
jb
push
gs
dec
mov
lahf
pop
ret
pop
xchg
f2xm1
sbb
cli
add
fildl
cmpb
and
or
mov
shrl
iret
add
jecxz
mov
sub
and
mov
xor
inc
outsb
daa
add
and
call
out
xchg
and
mov
icebp
mov
loopne
clc
adc
aam
loop
mov
popf
mov
or
fsts
sbb
inc
and
adc
mov
cmp
adc
jns
dec
sbbl
sbb
cltd
rcll
lcall
nop
pushf
inc
cmp
jg
jnp
popf
push
andl
outsl
jo
cwtl
sbb
pop
fstpl
jmp
sub
jp
addr16
mov
lods
cmp
push
jnp
jmp
fstpl
jbe
test
cli
lret
xor
test
int3
pop
mov
into
repz
outsb
mov
mov
or
xchg
and
xchg
xor
dec
xchg
out
add
pop
enter
leave
inc
sbb
dec
into
inc
push
sbb
xchg
jo
cmpsl
mov
movsb
scas
nop
mov
pusha
push
xor
dec
and
jae
adc
les
sbbl
scas
jns
rorb
std
stos
cmp
or
aam
dec
aam
in
push
inc
add
jbe
negb
in
push
or
inc
shrb
mov
and
cld
dec
dec
mov
push
xorb
popa
mov
mov
or
xor
pushf
push
pop
push
rcrb
mov
sbbb
push
mov
jmp
mov
daa
iret
adc
add
lret
jecxz
in
les
aad
es
repnz
and
aas
adc
or
jp
ds
add
sub
pop
cmpsl
and
push
xchg
mov
int3
push
xchg
sub
icebp
inc
push
das
pop
pusha
cmp
icebp
in
popa
mov
xchg
test
push
dec
mov
lahf
mov
sbb
sbb
mov
outsl
pop
cmp
sub
data16
mov
arpl
jmp
cmpsb
push
mov
fxch
push
pop
xchg
inc
xchg
fildll
ds
push
int3
lods
pop
dec
jg
lea
lock
out
rep
rcrb
inc
pop
loopne
sbbl
roll
mov
push
aad
int3
outsb
in
fcompl
js
and
js
mov
dec
cmp
inc
inc
arpl
scas
add
icebp
sbbb
mov
or
scas
mov
sbb
icebp
roll
pop
lods
ds
adc
icebp
inc
push
cwtl
xchg
repz
push
clc
outsb
hlt
aad
ss
dec
lock
push
cltd
outsb
es
setae
ret
pop
jb
sub
int
outsl
ret
gs
insb
stos
lret
mov
mov
cmp
cmpsb
out
ret
jle
mov
mov
xchg
pop
mov
adc
stos
negb
jns
mov
mov
pop
stos
nop
mov
aaa
push
pushf
sub
cmpsb
in
mov
sub
adc
add
les
mov
add
inc
pop
mov
push
adc
frstor
pop
stc
dec
sub
pop
sbb
lret
mov
dec
mov
xor
das
bound
jp
mov
dec
jne
jecxz
push
cmp
mov
push
adc
push
push
fwait
roll
adc
sub
sbb
or
xchg
clc
sub
sbbl
decb
call
jecxz
mov
ja
xchg
shll
sub
lea
into
mov
stos
xchg
repz
pop
outsb
and
stc
imul
pop
dec
jecxz
mov
insl
pop
in
push
icebp
ja
inc
in
mov
pop
loope
mov
jns
and
push
pop
adc
fisttps
dec
lcall
jg
jns
jle
iret
jb
loope
out
xor
stos
push
and
imul
sub
xchg
fildl
rol
and
mov
cmpsb
in
mov
xchg
xor
push
mov
sti
mov
add
leave
stos
cmpsl
in
stos
outsb
push
push
jo
popa
fst
bound
pop
lret
inc
push
mov
dec
sbb
rorl
jns
and
shll
fdivrl
cwtl
mov
call
dec
jo
push
inc
dec
and
int3
fistl
mov
imul
pushf
pusha
mov
inc
lret
add
jl
rol
push
mov
cmp
ljmpw
enter
xor
sahf
adc
outsl
cmp
inc
xchg
sbb
fsubs
jl
int
popf
sub
inc
xchg
fucom
mov
inc
call
sbb
xchg
dec
add
or
mov
xchg
jae
test
mov
cld
mov
ja
cli
in
sub
push
lret
adc
xchg
lods
sbb
push
lds
rol
lret
add
clc
imul
or
leave
mov
add
imul
pop
xchg
pop
cmp
insb
cltd
adc
xor
repnz
add
call
push
push
gs
sub
hlt
xor
iret
push
or
sub
andb
mov
enter
mov
not
movsb
mov
inc
mov
gs
adc
cmp
and
div
popf
rorb
bound
push
pop
ss
adc
cmp
dec
imul
sbb
dec
rorb
dec
addr16
das
int3
cwtl
out
jb
int3
stos
sub
sbb
pop
hlt
sbb
add
shrl
dec
dec
je
lahf
mov
mov
in
adc
inc
pop
push
fstps
push
xchg
int3
mov
daa
mov
sbb
pop
out
inc
and
inc
mov
in
xor
pop
pop
sbb
mov
jle
repz
cmp
fbstp
loop
mov
mov
shlb
xchg
stos
dec
dec
bound
mov
push
movsl
fwait
cwtl
and
pop
ret
adc
mov
or
sbb
xchg
pop
sbb
rclb
or
xchg
sbb
adc
adc
cmp
cli
add
in
mov
sub
add
test
inc
mov
shr
imul
rcl
popf
outsb
rclb
mov
es
aas
lock
or
xor
dec
cmpsb
loop
and
jno
cmp
pushl
ja
ljmp
jl
push
insb
mov
rcl
out
jge
fsubl
jno
in
das
xchg
inc
cwtl
lock
aaa
dec
call
mov
fdivr
adc
jle
xor
fbld
jns
push
lret
test
jg
pushf
jmp
pushf
lret
shlb
lcall
sub
xchg
clc
sbb
lds
rcrl
and
pop
jns
and
fs
xlat
xchg
out
mulb
dec
sub
lret
add
mov
popf
xor
test
leave
xor
mov
pop
xor
push
add
jecxz
cmp
cmp
in
sbb
cmp
xlat
cmp
jns
std
jns
out
mov
xchg
in
mov
mov
repz
inc
imul
pusha
sbb
adc
pop
cs
in
std
popf
and
sbbl
stos
std
cmpsl
ret
mov
push
adc
es
enter
mov
rcrb
pop
mov
test
out
or
or
mov
mov
add
decb
sub
dec
pop
cltd
or
std
or
mov
xchg
orl
push
fwait
push
in
pop
ficomps
fs
fdiv
cmp
inc
or
rolb
out
mov
dec
mov
sbb
jbe
push
xchg
xor
insl
popf
sbb
mov
rcr
adc
cmp
cmp
jno
sbb
cmp
and
sbb
fisubrl
pop
sbb
inc
xor
lret
push
rorl
cmp
jb
ret
xorl
movsb
mov
jo
mov
dec
push
xor
lret
loopne
dec
xchg
repz
pop
xchg
jbe
pop
jne
js
shrl
fdivrs
jo,pn
sar
movsb
pop
jb
jmp
sub
cmp
push
lods
aad
rorl
jb
cmc
clc
lea
mov
cwtl
jecxz
xchg
cmpsb
lahf
int3
jbe
jns
pusha
mov
imul
cld
push
inc
rcrl
repnz
pop
xchg
shrb
mov
xchg
xor
or
ret
shlb
enter
mov
in
clc
clc
mov
sbb
fwait
pushf
in
sub
inc
aam
icebp
pop
or
mov
div
lods
lods
dec
or
into
gs
xor
and
inc
scas
rcll
stos
adc
hlt
or
fadd
imul
mov
call
mov
mov
cmp
or
mov
or
lods
xor
out
mov
dec
jae
or
fs
rorl
je
out
pop
dec
adc
test
insl
xchg
cld
and
sub
inc
sub
fnstenv
and
lock
xor
pushf
cmp
mov
pushf
pop
adc
nop
or
xchg
mov
lahf
dec
jp
adc
xlat
xlat
mov
jae
out
ret
repnz
jne
fs
cltd
mov
jns
je
cmpsb
mov
jecxz
and
mov
movsb
dec
xor
fs
xchg
movsl
pop
push
dec
fdivr
push
popf
sbb
add
xlat
testb
in
into
mov
mov
adc
movsb
arpl
dec
in
cmp
outsl
push
push
test
ss
fs
das
test
dec
or
pop
jge
mov
add
rorb
rorb
stc
ror
lods
inc
testb
add
add
scas
fcoms
and
adc
mov
nop
or
inc
or
sbb
dec
and
jne
and
cwtl
push
and
pop
arpl
hlt
mov
xchg
and
and
ljmp
rcrl
aad
pop
adc
cmp
loopne
cmp
dec
xchg
xor
xor
jnp
out
mov
xchg
les
icebp
rorb
sbb
cltd
aam
add
jne
ret
sub
or
notl
add
mov
push
mov
stos
ja
push
rorl
loope
sbb
cld
push
xacquire
fwait
pop
push
popa
or
and
xor
cmp
jmp
inc
jge
inc
inc
mov
stos
sbb
mov
insb
ret
icebp
adc
mov
sbb
xor
shr
ja
inc
shll
adc
jo
pop
lds
pop
push
enterw
scas
mov
popa
aad
or
dec
pop
in
jns
ja
jno
pop
dec
aad
out
add
loope
jp
dec
dec
nop
inc
ret
mov
ss
mov
and
pop
lds
rolb
add
test
mov
or
jb
ja
or
inc
and
pop
aam
and
jl
ret
gs
mov
adc
add
xchg
inc
pusha
jns
xor
dec
insl
push
out
xchg
test
lahf
mov
fs
cmpb
push
xchg
inc
cs
leave
or
cmc
fiadds
cltd
push
out
lahf
movsb
stos
fmul
sbb
loope
inc
xchg
orb
adc
mov
addl
mov
dec
loope
jns
mov
adc
push
cwtl
imul
fdiv
mov
iret
adc
mov
add
rcl
push
cld
idiv
dec
push
std
push
mov
mov
pop
pop
cmp
clc
adc
push
add
jle
or
mov
fiadds
jae
sbb
sahf
aas
jne
xchg
xor
test
jno
icebp
mov
sbb
and
cmp
lock
or
and
cmp
movl
mov
mov
push
nop
and
stos
xlat
ljmp
lcall
cmpsl
xchg
fucomip
adc
mov
in
test
pop
mov
cmpsl
sub
pop
data16
lcall
mov
xchg
movsl
push
bound
xor
adc
push
cmpsl
add
cmp
rcrb
push
jp
mov
push
and
mov
mov
cmp
fdivrs
add
push
push
and
lds
pop
clc
cmpsb
adcb
test
adc
out
sub
add
mov
mov
push
adc
popa
mov
xor
xor
lea
ds
aad
mov
inc
add
jge
sbb
andb
scas
lahf
xchg
jl
add
cmp
mov
sub
sub
and
push
icebp
or
push
ss
push
cmp
jge
test
pop
fnsave
mov
sub
sbb
inc
and
mov
jmp
ds
lea
mov
mov
testl
mov
testl
int3
rcr
clc
mov
mov
jmp
cwtl
aaa
pop
ficoms
mov
adc
pop
iret
lret
cmpsb
inc
out
testl
adc
pop
popf
int
js
daa
jg
orb
test
dec
ds
push
and
jecxz
jne
repnz
popa
pop
lahf
inc
mov
outsb
insl
sub
or
add
sub
cwtl
sub
out
jmp
push
jl
cmp
aas
aad
mov
pop
xchg
adc
jnp
pusha
mov
mov
sti
inc
fistpll
mov
pop
push
xchg
outsl
cmp
aam
pop
movsl
fwait
push
xorb
mov
fisttps
xchg
sbb
add
xor
mov
inc
pop
xchg
fisttps
xchg
xor
jne
and
adc
dec
or
loope
add
out
or
inc
jo
jge
lret
xor
jle
incb
js
movsl
jmp
jg
in
cmp
cmp
in
lods
clc
stc
or
dec
push
xchg
xchg
adc
sub
mov
xchg
test
xlat
fmull
cli
aam
pop
add
push
rcll
aaa
inc
mov
mov
ret
aam
enter
sti
jns
mov
cmp
aaa
push
and
iret
stos
pushl
das
lds
adc
cmp
test
scas
roll
adc
pop
push
test
fisttps
lods
xchg
or
mul
push
cmpsb
sub
ss
dec
bound
adc
xchg
dec
and
das
cmp
fimull
adc
stc
cmpsb
testb
ds
int3
adc
sub
cmp
cmc
jae
xchg
ret
subb
inc
outsb
cmc
lods
push
ljmp
lcall
test
mov
dec
mov
jmp
add
rorl
repnz
xchg
cmp
and
cltd
jbe
mov
incl
pop
push
cmpsb
mov
dec
movsl
insb
push
lea
incl
xor
int3
neg
lret
mov
xchg
cli
popa
popa
and
pop
xor
jle
pop
dec
repnz
es
sahf
into
and
jmp
imull
iret
and
mov
adc
adc
mov
test
fwait
call
mov
mov
inc
jo
fdivrp
mov
sbb
fistl
push
in
push
stc
ret
xorb
mov
ss
mov
out
repz
jae
xchg
xchg
inc
mov
js
or
xchg
stc
xor
mov
call
stc
cmp
std
ja
inc
subb
jmp
jbe
or
insb
pop
push
pop
xor
jle
mov
or
ljmp
pop
hlt
cld
xchg
mov
popf
push
inc
dec
shrb
jecxz
xchg
sub
cwtl
test
add
shlb
das
insb
sbb
jg
inc
and
out
test
das
jl
jge
jbe
mov
and
xor
and
cli
das
loop
lahf
in
sub
out
add
pop
jmp
dec
loopne
rolb
cmp
jp
jg
dec
jns
pushf
negl
dec
sbb
cmp
or
or
xor
mov
data16
jo
in
add
aaa
fstl
mov
aaa
pushf
or
loopne
jle
loopne
push
lods
jno
sahf
movsl
fidivrs
ss
or
add
inc
insl
js
sub
aad
into
cmpsb
mov
js
jne
call
enter
jns
mov
pop
mov
aaa
stos
sub
sub
sub
movsl
jae
addr16
daa
stc
inc
dec
push
xlat
mov
jne
push
mov
out
pop
insl
adcl
push
sbb
adc
dec
filds
stos
and
rol
nop
repnz
sti
push
int
mov
insl
je
jbe
shl
lahf
sbbl
xchg
pop
data16
or
nop
inc
out
in
fistl
adc
mov
shr
testl
sti
mov
repz
mov
mov
jno
loop
es
call
push
ret
icebp
xchg
repz
andl
mov
fimull
pop
andl
enter
xchg
xchg
rcll
sbb
jae
out
jne
adc
testb
mov
pop
sbb
xchg
shlb
pop
jg
sahf
aam
repnz
bt
das
loopne
cmp
mov
stos
in
out
out
movq
sbb
jns
pop
push
xor
ficoms
popf
in
sbb
jbe
and
mov
mov
leave
clc
push
dec
adc
jno
pop
xor
mov
mov
inc
dec
test
cltd
aaa
and
pusha
fistps
pop
enter
sti
inc
sub
std
in
cwtl
aad
aas
or
push
addr16
sbb
fstpl
push
xchg
push
pusha
push
pop
mov
cwtd
sub
scas
ss
dec
lds
repz
sbb
inc
test
mov
cs
or
test
insb
test
mov
cmp
jnp
cmp
test
lods
push
pop
sti
add
add
std
fisubl
mov
cltd
lret
cmp
pop
int3
push
nop
xchg
xchg
xchg
jp
pop
add
stc
mov
and
daa
lods
push
imulb
push
sbb
addw
pop
fstps
sub
ljmp
adc
mov
sub
push
jb
push
ds
sub
xchg
shll
cmpb
out
add
aas
insl
mov
lds
and
pushf
sti
mov
add
pop
cmpsb
in
jle
aam
sub
mov
mov
jg
pushf
cmp
adc
movb
repz
out
sbb
sbb
ret
lret
jle
mov
push
dec
and
push
add
lahf
lea
sahf
pop
nop
in
dec
aaa
sub
push
jnp
and
stos
sbb
filds
xchg
repz
jno
xor
mov
add
iret
mov
push
xor
arpl
insb
dec
dec
sbb
push
dec
rolb
ljmp
das
mov
sub
dec
insl
negb
bound
push
mov
xor
lods
xor
sub
mov
mov
cmp
imul
stos
repnz
jle
mov
jge
jp
das
cmp
mov
push
movsl
jmp
inc
jecxz
mov
inc
cmc
cmp
mov
dec
hlt
out
fdivrl
scas
std
shlb
jmp
sbb
cmpsb
mov
or
test
jp
dec
add
cltd
jle
add
cmp
push
adc
sbb
and
in
in
aam
insb
mov
in
sbb
je
repz
repz
mov
scas
sub
jecxz
sub
aaa
popa
push
cwtl
les
xchg
movsb
cmpsb
xchg
out
out
adc
das
dec
push
and
add
push
in
pop
pop
push
lret
push
pop
int3
popf
pop
cmp
fcomps
sub
into
cmp
xchg
and
sub
push
aas
test
mov
mov
lods
and
aaa
mov
mov
jg
xor
push
enter
sbbb
xor
ds
popa
dec
adc
sbb
dec
xchg
xchg
push
pop
adc
inc
xchg
mov
mov
repnz
and
pop
loop
mov
xor
inc
sbb
adc
cmpsb
leave
je
jb
xchg
sbb
bound
loope
rep
sbb
ljmp
mov
inc
adc
repnz
mov
fildl
cmpsb
ja
pop
cmp
ljmp
inc
cmp
std
out
jmp
and
and
xchg
push
inc
inc
sub
andl
cmp
stos
jb
and
add
and
fwait
clc
pop
lahf
pop
scas
dec
mov
es
dec
iret
add
dec
lods
cmpsw
xor
xor
lods
test
lcall
cli
sbb
in
cmp
lea
push
in
dec
sbb
stc
or
pop
es
popa
int
xchg
jae
aas
adc
xchg
adc
xchg
arpl
sbb
fisttpl
xor
xor
dec
push
jnp
sarb
xchg
jo
push
nop
popf
or
mov
lods
jecxz
lahf
fmuls
mulb
push
inc
out
cwtl
cltd
mov
rcll
or
cmc
sub
fistpl
pop
cli
scas
call
jp
lock
pop
testl
les
movsb
push
jne
xlat
push
mov
ljmp
add
mov
shl
push
inc
add
push
adc
int
out
paddb
jne
mov
andl
adc
iret
mov
jno
and
push
je
ja
jg
dec
cmp
es
aas
dec
out
loopne
fistl
cmp
lahf
out
jbe
sub
jno
stos
pop
js
push
fidivs
sbbb
and
or
sbb
add
mov
jmp
lds
mov
lret
sub
sub
jle
incl
shlb
sbb
dec
rcll
mov
fsts
push
xchg
ret
inc
test
dec
int3
test
popf
lahf
fwait
push
jle
push
jne
xorb
aam
mov
sbb
call
mov
jnp
inc
xlat
and
xor
sahf
call
mov
push
test
xchg
dec
pop
xchg
jns
loop
and
add
es
shl
popa
ret
aam
repz
lds
dec
pop
addb
mov
push
inc
out
fstps
dec
mov
and
lret
fs
push
gs
stos
std
pop
sahf
add
inc
xor
in
xor
pushw
sub
or
push
stos
and
daa
cli
cmp
sahf
mov
cmp
xchg
aas
inc
sahf
cmpsl
mov
in
pop
fiaddl
or
pushf
push
xor
in
mov
mov
mov
add
jge
dec
add
add
dec
xchg
pop
hlt
jbe
inc
push
jle
inc
and
loop
aam
aas
mov
out
xor
sub
scas
test
enter
loope
divb
test
cs
add
into
mov
dec
xorb
insl
addl
pop
sahf
cmpsb
test
dec
xchg
mov
or
imul
test
orl
and
and
cmp
push
cwtl
and
xor
lahf
add
stc
imul
and
sbb
cmp
push
sbb
sub
mov
mov
lret
xor
adc
jnp
icebp
cmp
pop
lret
or
out
sbb
or
sub
jle
mov
jo
sub
mov
cmova
mov
frstor
sub
pop
and
push
xlat
mov
mov
and
bound
lods
sti
mov
mov
popa
adc
leave
jnp
jge
imul
addr16
inc
out
loop
sar
mov
nop
and
jle
mov
xchg
pop
or
mov
xchg
inc
push
cmp
popf
enter
mov
inc
outsb
fnstenv
mov
shll
int3
and
sbb
shlb
leave
test
jno
xchg
nop
sub
fimull
stos
incb
arpl
inc
lock
dec
call
pop
rol
pusha
or
xor
out
mov
lcall
xor
cmp
fdivrp
int
cmp
in
xchg
xor
pop
adc
ja
shll
inc
cmc
sub
div
push
stos
cmc
pop
in
jbe
and
adc
mov
jl
sub
pop
fwait
mov
lds
orl
test
cmp
fdivrp
fists
in
scas
imul
lcall
mov
mov
push
mov
imul
popf
jmp
mov
pushl
and
adc
xlat
call
jae
adc
adc
dec
sub
testb
fmul
pop
out
sbb
data16
arpl
mov
test
pop
sub
sbb
push
jl
xchg
daa
inc
icebp
mul
outsl
out
test
mov
rcl
inc
les
push
and
jecxz
add
cmp
sbb
fxam
fsincos
rcll
shlb
jge
les
ret
scas
mov
pusha
xchg
mov
jge
pop
push
js
mov
xchg
push
mov
sub
mov
lds
insl
mov
or
addr16
ljmp
movsb
scas
inc
inc
adc
sub
sub
adc
int3
sub
cmp
je
mov
push
push
sub
sti
push
movsb
bound
iret
ficomps
out
std
decl
add
in
shr
movsb
lock
lcall
lret
movsl
sub
xor
mov
pop
mov
mov
adc
stos
test
nop
bound
lret
cmp
or
iret
lods
jno
imul
sbb
mov
rcr
shl
mov
rolb
mov
sbb
dec
inc
jge
sbb
cltd
mov
lea
cwtl
xchg
pop
cmpsl
xor
and
insl
cltd
cmp
rorl
xchg
xchg
sbb
pop
popf
mov
dec
xchg
xor
inc
and
adc
stc
lret
loope
adcb
jp
jmp
mov
pop
and
or
push
inc
xor
in
mov
push
xchg
divb
clc
leave
lahf
mov
sub
jno
ror
aad
sub
or
pop
ret
push
push
dec
stc
add
pop
loope
inc
or
push
mov
mov
push
sbb
lahf
push
push
leave
sub
sub
mov
xor
jnp
lock
test
or
xchg
nopl
sbbb
or
mov
pop
ss
out
sub
pop
pop
pop
mov
sub
ret
dec
leave
sub
jg
or
pop
pop
cmp
or
mov
jns
outsb
jno
dec
dec
rcrl
mov
inc
xchg
out
xchg
hlt
xchg
xor
repnz
sub
mov
mov
xchg
shlb
or
decb
pop
loope
shl
fistpll
iret
das
and
pop
inc
mov
mov
mov
and
jbe
xor
xor
bound
js
add
add
push
mov
adc
sti
insb
jae
jbe
add
loope
cmpsb
in
add
add
pop
mov
jno
leave
stos
lods
xchg
arpl
sbb
mov
int
jecxz
lahf
jae
mov
iret
pusha
lcall
popf
push
sbb
out
cmp
lahf
and
sub
outsl
ljmp
push
or
cli
imul
outsb
sub
hlt
std
repnz
mov
push
mov
mov
popf
push
jmp
test
and
push
hlt
cmpsl
sbbl
enter
xchg
dec
jle
insb
cmp
mov
sub
jno
movsb
sub
pop
jmp
rcrl
jb
addr16
adc
loopne
rorl
fisubrl
add
das
shlb
cs
wbinvd
js
call
repz
lcall
dec
inc
scas
cmpsl
pop
pop
movsb
into
loopne
jae
cmpl
sti
push
outsb
pop
fsts
inc
fcompl
sbb
push
sbb
clc
dec
jnp
int
enter
pop
arpl
or
push
fcoms
stos
popa
clc
out
inc
int
or
dec
lods
aad
push
mov
test
mov
mov
icebp
call
mov
fildl
inc
sahf
cs
or
loope
mov
push
mov
test
es
sti
mov
fistps
daa
lret
pop
mov
repz
fiaddl
fidivrl
aam
in
and
xchg
mov
jbe
xchg
iret
or
cltd
test
outsb
dec
mov
in
mov
sub
sbb
insl
sub
add
or
xchg
shr
lret
outsl
aam
dec
dec
fisubs
repnz
dec
outsb
inc
cmp
ljmp
mov
pusha
ds
out
scas
fnstenv
inc
cwtl
loop
pop
push
ret
dec
sbb
fimuls
cmp
inc
lock
xchg
enter
sbb
add
xlat
aas
xchg
mov
dec
sbb
pop
jl
or
pop
jns
popl
mov
xchg
add
xor
cmp
dec
jg
pop
daa
dec
cld
add
js
xchg
jge
bound
mov
dec
and
aas
lock
adc
xchg
jbe
mov
fadds
pop
or
jae
jecxz
or
rorb
into
dec
stc
cmp
leave
jmp
in
pop
into
das
call
imul
jmp
or
divl
xchg
shll
in
lea
insb
sub
add
dec
lock
aaa
lock
mov
aad
dec
fucomip
outsl
mov
push
xor
sbb
pop
aas
inc
incl
and
fcmovu
add
adc
sub
enter
fucom
xchg
push
inc
mov
popf
inc
xor
and
mov
pop
cs
inc
mov
adc
testb
setle
inc
or
xor
loop
and
cmp
and
inc
mov
cmp
cmp
fcoml
pop
and
push
adc
xchg
sti
mov
push
and
or
pop
mov
sbb
mov
std
hlt
ds
mov
sub
adc
mov
js
adc
cmp
dec
inc
or
jmp
jae
ds
jno
dec
lods
lahf
leave
jp
adc
in
pop
cmpsl
jo
mov
rcll
fadd
test
mov
mov
dec
adc
and
pop
movsl
in
js
cmp
sbb
mov
lcall
sbbl
push
mov
dec
mov
pop
cmpsb
movsl
and
cmp
idivb
sbb
in
clc
mov
push
hlt
and
adc
add
fists
mov
ljmp
jp
insl
movsl
and
jnp
xor
nop
sub
or
test
gs
aam
xor
cmpsb
sbb
lods
outsb
pop
test
mov
push
push
stos
sub
mov
mov
rcrb
jl
push
adc
fstpl
aas
aad
pop
cmc
aad
aaa
push
ret
cmc
imul
dec
add
sbbb
cmc
lahf
nop
fbstp
mov
or
mov
fmull
movsb
inc
dec
sub
imul
movsl
xor
dec
ret
mov
sub
sti
outsl
cmp
inc
jecxz
add
dec
fsubl
ret
jp
mov
repz
xchg
add
jnp
das
jbe,pt
outsl
add
out
js
out
loopne
cli
mov
adc
sbb
arpl
pop
xlat
mov
icebp
out
cli
je
cwtl
push
repz
iret
mov
cmc
dec
sub
and
mov
push
dec
cmp
shrl
mov
out
pushf
push
pop
dec
jg
fsubrs
cmc
and
das
mov
ficompl
std
hlt
shlb
jbe
and
lret
in
std
mov
jb
inc
mov
aam
into
sbb
aam
les
sub
fstpl
jbe
xchg
dec
pop
and
ds
lret
imul
inc
popa
push
add
mov
ljmp
sbb
jns
ret
xchg
push
mov
rclb
ret
or
fdivp
mov
leave
xlat
fcomps
sub
fiadds
pop
xchg
icebp
lods
lods
and
lods
dec
out
stc
test
add
mov
add
insb
out
lods
or
xor
loope
mov
mov
xchg
sbb
sbb
out
insb
in
cltd
loopne
popa
fidivs
scas
dec
pop
in
and
xchg
cmp
arpl
fldcw
repz
cltd
cs
adc
mov
mov
in
js
fiaddl
push
or
or
popf
in
cmpl
test
mov
test
inc
stos
pop
mov
pushf
and
xor
and
addr16
inc
mov
sarl
ss
add
hlt
in
outsb
mov
mov
inc
xchg
fs
sbb
sbb
mov
lods
test
cmp
or
fcomi
test
adc
xadd
jae
push
sbb
cwtl
je
bound
mov
mov
int3
movsl
jl
mov
inc
sbb
mov
ficoms
adc
xchg
stos
out
dec
push
in
sub
test
mov
pushf
mov
mov
adc
outsl
adc
jle
add
cs
popa
lock
popf
push
xor
lods
jo
test
test
sti
jg
xlat
ror
dec
push
cld
inc
pop
out
mov
nop
and
push
dec
and
div
pop
repz
inc
dec
loop
insl
dec
in
repz
pop
xlat
inc
ficomps
jle
pop
scas
adc
lahf
imul
add
shll
dec
outsb
push
bound
inc
imul
ja
inc
xchg
jne
adc
xchg
inc
push
lret
sbb
or
das
shl
mov
mov
ret
cmpsl
mov
roll
dec
or
jbe
dec
xor
jb
sbb
or
cs
pop
stos
mov
fistps
fadds
jecxz
sub
and
push
inc
cmp
frstor
dec
aas
jmp
das
scas
outsb
inc
imul
cmpsb
clc
aaa
movsb
jne
dec
fisttpll
and
ret
push
and
repnz
movsl
lods
pushf
int3
xchg
adc
stos
scas
aam
jne
pop
dec
xchg
es
xor
out
int3
push
pop
mov
popa
cli
je
test
xlat
jae
inc
jo
repz
loop
js
mov
inc
and
ss
or
clc
fisttps
sub
jno
loope
jg
je
mov
mov
lds
dec
jbe,pn
loopne
fisubs
jl
push
pusha
and
push
jne
leave
pushf
mov
jp
cmp
cmpsl
push
mov
adc
js
push
jne
insl
pop
stc
sub
pop
das
push
adcb
cmp
inc
das
fwait
push
mov
test
inc
xchg
outsb
dec
icebp
adc
xchg
cli
mov
push
cmp
icebp
rcpps
mov
inc
fsubrl
jecxz
mov
rorb
sub
lahf
movsl
sbb
cli
data16
fs
xchg
inc
daa
lret
inc
pop
repnz
dec
jge
lahf
enter
xchg
jne
mov
daa
mov
idivb
stos
xchg
sbb
dec
pop
pop
push
pop
push
negb
mov
in
mov
in
int
xor
test
in
adc
jne
jecxz
push
into
repnz
ret
aaa
fwait
mov
xor
xor
dec
fnstenv
jmp
cld
inc
in
dec
push
mov
mov
popf
xchg
les
lahf
testb
mov
sbb
aaa
shll
fimull
xchg
out
outsb
and
movsb
out
mov
aas
ds
roll
xchg
scas
and
nop
jae
mov
xchg
cmp
jmp
add
inc
xchg
ljmp
ss
ret
inc
lret
shlb
dec
xor
lahf
xchg
gs
push
adc
cmpsl
push
lcall
push
test
mov
cwtl
pop
arpl
shll
jns
sbb
add
jmp
les
outsb
pop
or
mov
xlat
add
and
jo
pusha
enter
aam
sub
pushf
and
testb
push
mov
bound
and
xor
aaa
out
popa
pop
sti
jnp
mov
mov
icebp
push
xchg
jne
inc
cmp
pop
inc
pushf
inc
add
icebp
loope
movsb
fwait
cmp
aaa
adc
les
repz
xor
adc
and
dec
cmpw
scas
loop
arpl
and
bound
gs
lock
imul
loopne
arpl
daa
add
lods
popa
mov
add
hlt
lret
fnstsw
cli
ja
jnp
push
leave
or
dec
push
popf
add
rcrl
scas
and
add
test
sbb
fistpl
sbb
push
shlb
ret
xor
mov
push
and
cli
adc
push
mov
test
cmp
xchg
cmp
sbb
jno
dec
sub
mov
cmp
test
mov
in
lock
mov
flds
xchg
imul
inc
test
dec
mov
adc
cmp
inc
cmp
mov
jp
pop
test
push
nop
mov
xchg
xor
shr
xor
scas
outsl
idiv
cld
dec
inc
pop
mov
subl
cmp
dec
cs
shrb
aas
mov
pop
sub
push
mov
adc
jle
imul
sub
dec
add
adc
adc
pop
ror
or
jnp
inc
adcl
insl
pop
jne
push
out
andl
dec
adc
out
pushf
mov
cli
pushw
repnz
addr16
and
mov
test
ss
ficoml
pop
aad
sbb
mov
cmpsl
or
xchg
rcl
pusha
js
fcmovnbe
cld
jmp
mov
into
adc
inc
sub
cmpsb
xor
jns
les
inc
andl
cli
sti
repnz
push
lret
cmp
dec
add
jae
mov
dec
shrl
stc
repnz
sarl
and
push
xchg
cld
loope
sub
lret
dec
mov
push
dec
aad
out
imul
scas
add
test
sub
leave
jbe
cmpsl
xor
test
xchg
xchg
sbb
sub
fcoml
mov
test
xorl
lcall
xchg
jae
pop
sub
dec
inc
xor
arpl
xor
mov
lock
push
addl
lret
arpl
pop
xorl
jae
mov
pop
fnsave
push
addr16
cmp
cmpb
out
sbb
call
rol
jle
cld
sub
and
sti
sub
xor
pop
bound
mov
into
add
dec
xor
cmp
test
movsb
add
rol
mov
xor
insl
jle
mov
mov
sbb
int3
ljmp
shlb
testl
es
jb
sbb
scas
add
repnz
rcr
repnz
xchg
mov
jecxz
and
xor
mov
xor
xor
xchg
adc
jle
hlt
hlt
and
mov
clc
push
sar
jg
cmc
pushl
cwtl
pop
xor
ficoml
lcall
mov
adc
hlt
into
out
mov
pop
das
push
and
cmp
shl
mov
icebp
push
nop
push
jb
jo
jecxz,pn
cltd
in
mov
inc
lret
cmp
outsl
aad
sti
fucomip
popa
fwait
in
xchg
negl
loope
fnstcw
ds
je
mov
cs
jmp
insl
jp
sub
sbb
ror
into
movb
push
mov
shrb
aaa
mov
mov
iret
repnz
and
test
ret
subb
iret
pop
sbb
mov
push
mov
jmp
push
stc
xor
into
stc
jo
or
fsubr
sub
mov
mov
jmp
loopne
shlb
mov
ret
mov
clc
jecxz
inc
inc
cld
std
jmp
int
ret
push
iret
lcall
rcrb
mov
xor
pop
or
cmp
sbb
xchg
xchg
leave
xchg
jecxz
es
cmp
rcl
cmpsb
inc
xor
faddl
mov
or
mov
jb
lcall
cmp
pop
push
nop
adc
cmpsl
test
mov
sbb
cwtl
cmp
dec
lret
bnd
xchg
pop
adc
cltd
andl
icebp
lcall
mov
sub
fisttpl
sbb
out
decb
fcom
or
pushf
imul
pop
inc
je
int
scas
ljmp
cmc
jo
leave
outsl
pop
lcall
popa
es
stos
stos
mov
adc
popf
xchg
inc
push
xchg
xor
push
xor
jp
xor
jns
sub
call
mov
add
in
fldl
es
decl
fidivrs
jecxz
pop
push
daa
jo
scas
fbld
int3
fisttps
lock
idivb
adc
fisubrl
cli
xor
nop
add
sbb
pop
pop
pop
or
xor
inc
dec
xor
in
sbb
int
ret
add
push
and
cwtl
sub
sub
add
ss
loop
je
test
inc
push
shrl
jle
icebp
movsl
adc
dec
jae
test
aad
mov
clc
inc
pop
pop
fisubrs
mov
out
mov
mov
sub
fldl
imul
repnz
roll
mov
dec
sub
mov
mov
daa
inc
push
xlat
lea
sahf
ret
cwtl
outsb
cmpsb
fxch
ds
lahf
jae
clc
pop
les
movsl
sbb
fcmovnbe
jbe
cwtl
cmpsl
push
insb
xchg
pusha
gs
cltd
inc
and
stc
jecxz
dec
mov
sub
rclb
and
and
popf
jp
mov
and
lret
push
inc
push
sarl
xchg
add
dec
xor
nop
sub
mov
addl
jnp
scas
stos
inc
outsl
push
add
jmp
inc
and
aam
mov
jbe
mov
push
adc
ss
fdivr
add
push
testl
xor
sbbb
push
popf
test
les
lea
mov
push
fnstcw
js
out
sbb
or
push
push
push
insl
xor
nop
jle
lret
push
mov
mov
ficoms
movsl
lods
jg
mov
inc
into
jecxz
add
xchg
testb
cli
daa
push
stos
dec
aam
cmp
adc
jnp
nop
pop
dec
clc
cmp
and
das
enter
leave
push
arpl
les
test
jns
out
sub
push
push
stos
pusha
shlb
clc
xchg
sarb
iret
fmul
repz
cmc
mov
cmp
rcrb
rcll
scas
loopne
lods
fsubl
addr16
jno
xlat
jb
jle
jmp
sub
xor
pushf
les
fwait
push
inc
mov
bound
xchg
mov
icebp
hlt
sbb
rcrb
push
mov
cmp
fs
in
sbb
pop
popf
jle
jle
lcall
mov
out
and
neg
lock
xchg
cmpsb
test
xchg
sbb
rcl
mov
insb
mov
incl
pop
jne
add
xchg
dec
cmp
dec
jge
xor
push
test
push
inc
pop
mov
test
adc
pop
mov
cmp
rcll
test
mull
xor
xchg
mov
aaa
mov
jne
sbb
mov
mov
mov
xchg
mov
or
cmc
jne
and
orb
add
push
cmpsl
add
inc
sbb
fsub
inc
jo
jle
jecxz
mov
mov
mov
jl
les
into
div
adc
shlb
sbbb
fidivs
jns
bound
fnsave
adc
push
ror
sti
dec
test
incl
stos
fbstp
or
icebp
add
vmovq
loopne
test
das
test
cmpsb
add
lods
loope
inc
insb
lea
dec
jb
pop
out
xchg
lea
jae
and
aaa
mov
aad
mov
jae
ss
cmp
mov
mov
pop
cmp
sub
loopne
shl
pop
pop
push
jae
lretw
rolb
push
mov
divl
addr16
repnz
outsl
xor
mov
mov
pop
sbb
adc
pop
mov
add
lds
aam
mov
in
popa
add
jb
sti
lahf
and
mov
scas
dec
sbb
repz
in
stos
gs
in
xchg
cmp
addr16
xchg
mov
add
sub
loop
fiaddl
xchg
dec
xor
push
xchg
xor
xchg
flds
sub
cmpsb
gs
sub
sub
xchg
icebp
xchg
jecxz
movsl
insl
push
push
gs
mov
rcll
pop
mov
ljmp
mov
out
mov
scas
jns
inc
jnp
mov
cmp
jae
clc
gs
mov
xchg
inc
insb
lods
cmp
fcmovnbe
inc
stos
insl
je
sarl
cli
sar
pop
cmp
pop
dec
lock
mov
rorb
mov
cmp
jmp
ror
loopne
mov
les
sbb
sarl
stos
movsb
mov
pop
lock
insl
mov
hlt
mov
sbb
push
icebp
rclb
ret
add
fdivrp
sub
xor
xor
ljmp
imul
and
or
fimull
addl
cmp
jno
and
iret
xchg
loopne
rclb
cmp
push
sbb
sub
dec
out
out
and
fwait
push
pop
dec
dec
sbb
dec
mov
adc
mov
pop
adc
mov
xor
popa
jl
in
dec
das
scas
cmp
and
dec
stos
pop
mov
sti
sbbb
cmpsb
xor
jge
xor
cmp
in
and
xor
aaa
push
pop
jns
xchg
or
stos
mov
mov
stos
push
ja
xchg
out
dec
aam
push
les
push
jl
jbe
imul
cmp
dec
xor
mov
xor
dec
add
cld
inc
sbb
xchg
dec
xlat
addr16
xchg
enter
in
push
jae
cmpsl
sti
insb
jecxz
cmp
add
dec
push
jge
jl
or
add
sub
mov
aaa
mov
leave
scas
ja
sarb
ja
lret
cmpsl
nop
test
push
fstpl
leave
mov
cld
mov
push
pusha
lret
cmp
sahf
or
ret
mov
cmp
outsb
fcoms
mov
push
mov
das
inc
add
jge
mov
jle
jae
movsl
cmovs
dec
jbe
push
lcall
in
aaa
mov
in
addr16
repnz
push
xlat
sub
clc
sti
mov
icebp
cmp
aaa
fdivs
shll
hlt
lahf
jne
das
jge
movsb
insl
jo
push
les
pop
add
test
scas
inc
pop
lret
jl
sub
dec
cmp
cmpsb
fnstenv
aaa
dec
arpl
stos
gs
xor
inc
mov
rcr
mov
xor
and
mov
imul
iret
lcall
sbb
sbb
gs
push
test
push
pop
fwait
movsb
arpl
xlat
fisttpl
xchg
cmp
dec
icebp
sub
mov
add
into
js
loopne
jbe
divb
testb
or
in
aad
out
mov
inc
cltd
xor
push
sbb
mov
fst
adc
mov
add
movsb
jbe
insb
jne
push
push
test
jmp
insl
mov
adc
sbb
cld
sbb
xor
popf
jb
fists
loopne
iret
mov
out
dec
add
inc
mov
cld
ret
sub
inc
jo
push
dec
xor
imul
mov
xor
pop
leave
enter
push
xor
cmp
jle
xchg
mov
leave
insl
mov
inc
leave
push
xchg
jbe
pop
pop
mov
inc
sahf
sbbb
insb
sti
xchg
sub
xchg
jne
inc
add
mov
and
mov
push
mov
mov
cmp
rcr
mov
movsb
push
lret
clc
loop
sub
push
insl
mov
inc
pushf
adc
movsl
mov
inc
ja
outsb
jne
xchg
daa
jae
xchg
nop
loope
push
adc
nop
mov
adc
ret
mov
cmp
adc
and
xchg
pop
add
inc
nop
add
adc
fildll
pop
call
push
inc
add
or
insl
inc
sub
rcl
sti
push
xchg
jo
jns
das
xchg
mov
lock
mov
inc
lods
mov
aaa
scas
aam
stos
and
clc
lock
and
dec
roll
push
xchg
fnstenv
lea
pop
and
adc
xchg
fdivp
mov
mov
jns
pop
add
pop
loopne
adc
or
pop
add
movsb
insb
jae
filds
pop
test
mov
mov
dec
and
inc
int3
pop
push
sbb
hlt
sti
gs
xchg
dec
push
cmp
movsl
sbb
ficomps
daa
lret
pop
push
jae
jae
sahf
lea
fst
mov
and
movsl
sbb
scas
in
cmp
icebp
or
cmp
dec
lea
sub
andb
insl
jnp
int3
hlt
mov
cmpb
adc
jbe
loopne
xchg
test
lahf
xor
popa
push
push
mov
xchg
addr16
out
and
mov
push
and
add
fbld
inc
mov
lret
movsl
jge
dec
div
mov
cmpsl
sar
js
add
dec
adc
jns
dec
fisubs
imul
ret
adcl
jbe
daa
add
push
roll
sbb
repnz
push
imul
outsl
jae
stc
mov
into
push
push
push
and
loopne
rol
mov
inc
push
push
sbb
xchg
divb
mov
jge
mov
dec
mov
sbb
push
adc
mov
loope
dec
and
cmpl
lea
jnp
das
out
or
popf
mov
cmp
xlat
adcl
sub
cmpsl
imul
pushf
inc
lds
inc
sarl
pop
cld
sbb
xorb
addb
jns
cmp
push
mov
fcomps
push
icebp
or
mulb
ss
iret
mov
fisubrs
sub
lahf
stos
inc
push
lds
sub
sbb
andps
flds
sub
daa
cld
adc
inc
push
int3
ss
fsubs
xor
mov
out
loopne
xor
cmpb
mov
lret
mov
inc
sbb
int
sub
int3
lahf
adc
int
fisttps
jge
xchg
addr16
lods
cmpsl
cmp
pop
push
push
lret
aam
into
mov
jmp
sub
push
sbb
mov
loopne
inc
sbb
mov
ror
cmpsb
js
cmc
xor
jecxz
enter
mov
lods
scas
leave
sbb
mov
jo
push
rorl
sahf
inc
mov
inc
inc
xlat
popf
repnz
pop
pop
jns
inc
loopne
lcall
inc
xor
icebp
mov
mov
jg
negb
std
fiadds
pop
lods
push
or
mov
adc
mov
lds
mov
mov
int
lret
lds
adc
mov
sbb
gs
adcb
ret
adc
rcll
jge
fistpll
xor
jmp
mov
inc
push
and
inc
jno
aaa
int
js
jnp
xchg
cltd
adc
xor
or
das
fs
enter
mov
outsl
xchg
jbe
jle
xchg
push
cld
div
jmp
cmp
jp
or
aas
add
arpl
mov
jmp
xor
sub
les
cwtl
outsl
mov
pop
inc
sbb
lods
push
xchg
dec
inc
test
pop
xchg
or
push
fistpll
cmp
rclb
pop
xchg
stc
mov
sarb
add
cmpsb
pop
pushw
sbb
into
ror
push
cmp
fwait
jno
gs
lret
loope
push
cmp
stos
mov
push
sbbl
xor
cltd
cmp
data16
mov
pop
push
pop
jge
mov
ja
enter
popa
xchg
push
outsl
movsb
mov
add
arpl
dec
nop
add
sub
fsub
fistps
pusha
push
cld
fidivrl
rorl
cltd
test
mov
fidivs
lret
mov
hlt
cltd
ja
lock
popf
jg
xlat
cmp
fmull
sbb
out
ss
mov
jmp
repz
or
jne
pop
clc
subl
and
roll
movsb
add
cwtl
sbb
xorb
pusha
pop
mov
daa
fimuls
add
loopne,pn
pop
iret
xor
push
xchg
mov
push
test
popa
lret
dec
in
or
lds
pop
pop
add
lock
leave
add
cmp
dec
lods
jb
std
jns
sbb
jecxz
xlat
jge
mov
jmp
sub
or
lret
cwtl
mov
test
inc
adc
out
roll
ror
nop
lea
testb
out
inc
ss
mov
dec
popa
jg
adc
dec
jnp
fsub
inc
popf
dec
sbb
stos
jecxz
or
mov
add
clc
push
push
mov
int
sub
lds
or
push
push
push
jns
jp
pusha
fmuls
inc
mov
push
fs
pop
imul
jp
fwait
pop
jbe
lods
repnz
pop
mov
add
jecxz
xor
and
popa
je
sbb
fmull
das
pop
bnd
mov
enter
push
cmpl
int
add
std
push
sbbl
xor
cli
adc
push
fadd
mov
imul
or
dec
fnstsw
mov
push
adc
push
jae
mov
push
or
dec
andl
mov
psubsw
xor
scas
ds
jge
imul
pop
cmc
mov
ret
fld
lahf
dec
or
scas
and
decl
jge
sub
mov
outsl
xor
in
lret
aam
cmp
push
hlt
adc
inc
sets
pop
cmp
in
push
loopne
pop
jge
pushf
int
push
add
pop
pop
lds
ret
bound
leave
stc
jb
xor
mov
mov
dec
inc
add
jae
out
repz
mov
cmc
in
scas
mov
sub
mov
sub
fidivrl
daa
mov
pop
mov
adc
cmp
add
pusha
or
test
stos
cmp
cwtl
std
sbb
repnz
insl
xchg
dec
and
pause
sub
insb
aam
xchg
push
cmp
inc
mov
stos
xchg
pop
das
inc
lret
daa
fdiv
mov
add
loopne
cltd
int3
scas
gs
inc
fdivp
cmpsl
mov
jo
sbb
insb
mov
loope
pop
rolb
cwtl
add
call
inc
xor
into
or
push
fs
xor
shrb
jbe
loop
or
mov
ljmp
stos
outsl
lds
xchg
inc
divl
shll
dec
gs
xchg
cmp
test
dec
lock
loope
cmp
jbe
cmpsl
loope
shll
and
lcall
movsl
cmp
sbb
lret
insb
or
mov
mov
push
aad
push
jno
push
mov
ss
lods
ret
in
sub
cli
inc
dec
mov
and
sub
cmp
bound
data16
inc
push
cld
pop
fbstp
out
mov
loope
sub
xchg
gs
movsb
pop
mov
xchg
xor
int
push
pop
mov
and
xlat
aaa
mov
stos
lret
pop
jle
cmp
push
push
loope
arpl
mov
add
add
cld
jmp
or
inc
fstpt
jns
lret
testl
jmp
cld
sbb
dec
in
jmp
insl
in
xchg
adc
fldl2e
inc
aas
das
ret
daa
bnd
andb
sbb
das
mov
sbb
mov
xlat
nop
or
pushf
stos
inc
sbb
lods
xchg
out
xchg
fs
dec
jl
shll
and
pop
insl
rcrl
dec
jns
or
fdivrs
sub
outsl
test
clc
mov
out
lcall
pop
jno
call
xchg
push
stos
sub
test
inc
leave
and
out
xor
xor
mov
roll
pop
movsl
push
xchg
mov
pusha
sar
and
push
popa
aad
xor
xchg
xor
sbb
rol
iret
sub
ljmp
iret
faddp
mov
sub
push
imul
xchg
sbb
push
push
push
jb
push
loopne
cmpsb
add
in
insl
cmp
fadds
int3
mov
mov
mov
xor
dec
cmp
and
fnstcw
push
ljmp
out
outsl
jle
pop
inc
jl
outsl
xor
imul
cli
add
arpl
in
aas
push
pop
xchg
mov
xor
int
mov
jmp
sbb
test
pop
cmp
push
loope
dec
mov
cmp
xor
frstor
rcrl
xchg
xchg
push
inc
dec
into
xor
inc
dec
or
mov
xchg
adc
imul
push
test
data16
push
decl
and
add
imul
outsl
inc
lods
cmp
xor
es
loop
ds
sahf
arpl
popa
lahf
pop
negb
imul
cld
mov
in
fildll
and
aad
dec
sub
xor
jl
or
jecxz
xchg
ret
cwtl
mov
push
sarb
jne
pop
pop
shll
cmp
aad
jle
cli
add
mov
dec
punpcklwd
dec
sub
adc
jecxz
inc
push
jmp
add
scas
jg
pop
push
push
mov
xchg
mov
ja
xchg
jmp
pushf
insb
arpl
pop
aas
sbb
jns
adc
in
sbb
aaa
cmc
lods
mov
fiaddl
mov
nop
rcrb
fsubl
adc
addl
lds
add
sub
loop
cmpl
inc
xchg
pop
adc
les
sub
int3
push
adc
leave
incl
pop
cwtl
mov
jmp
inc
lock
fistps
popf
into
adc
xor
sub
dec
leave
jl
subl
je
sub
clc
lds
std
das
repnz
cmpsb
int3
dec
xlat
cmpsb
ljmp
test
imul
mov
dec
or
in
mov
push
adc
dec
fstpt
mov
push
jl
jge
rolb
or
xchg
xlat
enter
xchg
dec
sti
lods
pop
jl
cmp
int3
imul
loopne
jle
xor
push
ja
das
loope
sbbb
mov
mov
scas
das
mov
repz
nop
jl
push
mov
and
pusha
clc
bound
cmc
into
pop
movsb
jl
push
or
adc
pusha
das
addr16
xchg
loopne
out
xchg
mov
fistpll
outsb
pop
push
jne
xlat
ret
adc
dec
aad
pop
dec
es
jecxz
push
lock
or
bound
sbb
fidivrs
mov
mov
cmp
sub
das
add
sub
mov
push
xchg
adc
ror
xchg
adc
fldl
xchg
xchg
and
outsl
cmc
lret
mov
and
sbb
mov
sbb
jl
jecxz
loopne
sub
jns
insb
and
dec
mov
aas
push
cmc
jmp
jbe,pn
fldt
pop
insb
xchg
push
xor
or
adc
xchg
push
dec
inc
in
inc
mov
xchg
loope
mov
push
mov
mov
ds
aas
sarb
aaa
js
inc
xchg
loopne
loopne,pt
lds
popf
cmpsl
and
xchg
xchg
shrl
test
movsl
in
pop
enter
das
lds
mov
xchg
xor
les
pop
jmp
data16
push
cmc
inc
sbb
gs
jmp
mov
int
out
fs
push
mov
cmp
lahf
inc
adc
jle
mov
daa
cwtl
dec
ja
add
or
movsb
leave
lahf
fsubrl
imulb
insl
scas
push
pop
inc
ljmp
js
repnz
mov
dec
xor
cmc
stos
dec
xchg
movsl
dec
cmpl
pushf
xlat
popa
repz
in
inc
hlt
sub
push
ret
sub
dec
pop
sbb
pushf
mov
mov
push
push
fstps
mov
js
scas
cmp
sub
lcall
repz
push
insb
call
movsl
inc
jmp
gs
aaa
popf
insb
mov
dec
jecxz
xor
adc
xchg
fidivrl
jl
sbb
or
faddp
and
sub
dec
inc
dec
fcmovb
adc
add
incb
lret
mov
mov
incl
dec
lds
addr16
shlb
pop
mov
jnp
dec
add
ret
sub
inc
into
jl
mov
mov
int3
jns
xor
fwait
lods
xor
das
fisubrl
add
inc
or
stos
ljmp
pop
das
lods
add
sbb
movsl
gs
push
int3
jle
push
sbb
sti
pop
dec
mov
xor
sub
pop
sbb
out
push
aas
push
fisubs
outsb
jp
sub
mov
rcrb
sub
xor
or
adc
and
cmp
sahf
mov
fcos
in
lret
sub
mov
outsb
and
and
ja
loopne
push
mov
test
xor
sbb
sahf
cld
mov
xor
outsl
push
mov
and
ljmp
inc
addr16
je
pop
out
pop
or
xchg
ret
mov
mov
cs
push
mov
sbbb
xchg
xchg
in
add
inc
and
cmp
dec
dec
shl
cld
and
das
xchg
sbb
xchg
jb
in
pop
cli
das
adc
or
jno
pushf
sti
xchg
les
and
jle
cmp
and
les
cmp
sub
lcall
fdivrs
fcompl
mov
lcall
or
aaa
into
popf
imul
pop
push
mov
outsb
call
jmp
sub
add
jne
and
pop
mov
movl
outsl
mov
dec
mov
dec
push
dec
test
push
pop
sbb
mov
lods
dec
fldl
lahf
lahf
push
jmp
jo
stc
call
fstpl
sbb
int3
cmp
lahf
mov
xchg
push
insl
aaa
xchg
dec
enter
jbe
cmp
adc
mov
sub
arpl
repz
stos
mov
in
addr16
lcall
in
insb
outsl
aam
mov
repnz
iret
imul
cld
mov
leave
scas
aam
jnp
ficomps
adc
mov
add
and
push
push
mov
loopne
cwtl
cli
mov
sbb
or
jae
sbb
sahf
xor
std
fistps
out
jns
push
cld
cmp
repnz
out
mov
loope
sub
lret
sub
outsl
push
pop
xchg
andb
insb
movsbl
jo
outsl
xchg
mov
pop
cmpsl
je
xor
inc
loopne
lods
lods
call
push
cmp
shlb
outsb
data16
adc
xchg
push
movsb
push
incl
xchg
fcoms
sti
clc
cmp
mov
sahf
inc
mov
arpl
testb
push
mov
das
and
push
ret
addb
cmc
xchg
loop
adc
pop
jl
lret
cmpl
das
jo
movsl
dec
dec
testl
es
lods
xchg
shll
mov
ja
out
movsb
adc
and
rcrb
pop
leave
cld
lcall
dec
jle
dec
dec
scas
mov
xchg
inc
cld
add
mov
scas
aad
popf
xchg
icebp
inc
fwait
icebp
pop
ret
sti
mov
cmpsl
lret
and
cld
inc
nop/reserved
xorb
sarl
mov
jnp
pop
inc
cld
xchg
gs
divb
js
dec
jae
in
mov
inc
cld
and
mov
inc
xor
fst
lret
call
sub
xorb
fmull
rcr
inc
es
dec
mov
push
inc
xor
clc
insb
mov
sbb
movsb
push
out
push
roll
icebp
sub
in
jb
push
ljmp
jl
dec
cld
cmp
and
out
aam
fmuls
push
mov
loope
loopne
push
mov
icebp
sbb
and
popf
or
and
ret
jge
lcall
jp
push
or
and
add
sub
aad
xchg
push
sbb
and
push
mov
sbb
pop
cmp
loopne
xlat
mov
add
out
out
adc
int3
ficompl
dec
mov
push
aas
add
orl
jb
or
divl
into
sbb
pushf
add
shl
out
mov
push
pushl
mov
test
lds
jl
fildl
call
icebp
xor
gs
push
mov
mov
fs
rcr
jecxz
mov
pop
adc
xor
fildll
loop
out
aas
div
mov
dec
lret
cld
adc
jg
mov
pop
xchg
jb
mov
data16
mov
cmp
mov
fcmovb
mov
pop
mov
xor
cwtl
xor
jnp
loopne
rol
jge
rol
imul
cmpsl
sahf
out
mov
cli
mov
sbb
test
aas
aad
push
in
sbb
daa
test
out
gs
xchg
das
ljmp
iret
repnz
cmpsl
adc
mov
cmp
cmp
mov
jnp
xchg
add
push
lock
pop
and
inc
fcmovnu
mov
pop
test
test
xchg
jg
add
shll
jl
call
push
shlb
push
dec
add
push
jnp
imul
pushl
testl
jne
into
push
ja
dec
pop
lcall
mov
daa
pop
pop
push
add
roll
mov
mov
cli
jp
and
jge
popa
inc
out
adc
or
xchg
and
movsl
cmp
loope
dec
or
in
bound
rcr
lret
leave
push
les
stc
imul
adc
sub
scas
lahf
pop
sub
mov
pop
jb
push
cmp
xor
jg
arpl
ret
cmp
pop
lret
xor
fcmovb
jb
lcall
cmp
jp
sbb
mov
cmp
xor
int3
addb
pop
xchg
dec
stos
icebp
jp
cmc
cmp
sbbl
adc
inc
inc
push
jp
rcll
xchg
pop
repz
jnp
mov
cld
sbb
mov
sahf
or
sub
adc
repnz
pusha
mov
or
inc
dec
icebp
cmpsl
dec
ljmp
movb
lods
xchg
mov
adc
aad
cmp
sbb
xchg
shrl
into
lds
sub
mov
stos
popf
xor
in
xchg
xor
xchg
sbb
inc
fmuls
xor
jbe
stos
aam
stos
xchg
mov
pop
mov
jge
movsw
insl
test
or
loope
add
in
rcr
je
hlt
sub
and
mov
jae
mov
test
test
leave
call
jne
add
jge
lret
sti
cmp
inc
pop
push
and
jl
dec
adc
sti
iret
ret
jo
outsb
xor
pusha
outsb
dec
lret
add
cmpsb
and
inc
imulb
xchg
inc
and
and
and
dec
or
mov
lret
ficoms
push
mov
in
loop
lret
xor
jle
mov
cld
outsl
mov
out
push
out
popf
movsl
imul
imul
xchg
pop
xchg
xchg
and
scas
adc
roll
fcom
test
xchg
test
ret
test
push
lock
loop
negb
pop
jmp
es
aaa
cld
movsb
mov
mov
mov
and
mov
and
and
sbb
lods
ljmp
add
outsb
aaa
ja
adc
lcall
movsb
js
lods
mov
shlb
fs
pop
test
push
fs
stos
out
outsl
and
jecxz
push
or
push
ret
aad
xlat
cmpsl
mov
jmp
jmp
and
stos
cmp
xorb
and
push
pop
sarl
addb
mov
push
xchg
xchg
pushf
add
sub
jno
or
inc
jno
stos
rolb
pushf
pusha
inc
xchg
aas
out
ss
mov
xor
fidivrs
hlt
sarb
fmull
scas
dec
jae
mov
in
mov
cmpsl
out
cmp
das
inc
mov
aam
jmp
fstpt
or
orb
outsl
add
aas
pop
xlat
push
rolb
pushf
mov
and
fstpt
sub
out
xor
mov
and
pop
push
or
sub
lcall
clc
test
adc
les
je
leave
jp
repnz
adc
jne
push
out
jp
sub
imul
cmpsl
dec
sbb
add
pop
push
and
adcl
clc
in
mov
inc
daa
adc
and
pop
out
jg
sbb
lods
adc
sahf
je
dec
adc
pop
adc
dec
sbb
popl
mov
in
aas
push
popa
mov
ror
ret
mull
lods
adc
cld
dec
in
pop
mov
enter
and
mov
add
arpl
sub
jecxz
sbb
roll
and
jl
mov
xor
in
ss
push
adc
xchg
aad
mov
mov
mov
sahf
adc
sub
inc
rolb
into
icebp
ret
adc
mov
mov
mov
aas
push
clc
ja
loopne
je
xchg
jge
xor
addl
fcomp
xor
cmpsl
cmp
popf
roll
push
scas
stc
imul
or
into
je
xchg
jne
bound
xor
fisubrs
mov
jmp
cmc
es
push
cld
add
adcl
idiv
pop
inc
xchg
test
inc
imul
scas
xor
push
loop
cmp
xchg
mov
push
nop
xor
jae
sub
cmp
adc
pop
ret
xor
test
ds
popf
dec
cli
push
dec
cmp
mov
ja
pop
push
cmc
and
stos
pop
dec
push
cmp
call
xor
xchg
push
loope
xchg
adc
inc
mov
js
test
xor
das
mov
xor
add
and
or
repz
adcl
pop
daa
jne
into
jno
jbe
lods
fwait
repz
xchg
push
jb
inc
aas
mov
pop
cmp
inc
ja
pop
in
dec
in
xor
inc
cmp
jl
lock
outsl
repnz
mov
fs
pop
out
pop
lret
ja
nop
sub
outsl
in
mov
mov
add
pop
cmp
xor
popl
divl
pop
push
push
mov
cwtl
or
shlb
and
jge
push
sbb
clc
aas
push
loopne
sub
dec
add
rclb
data16
mov
ss
popa
xchg
lock
inc
push
sbb
pushf
adc
out
dec
or
cmp
push
mov
jae
mov
push
scas
nop
bound
loop,pn
pop
sub
pop
inc
mov
cmp
in
iret
add
les
pop
xchg
popa
pinsrw
mov
xor
pop
push
mov
daa
aaa
repz
fstpl
jecxz
mov
sbb
xor
and
mov
push
mov
jge
rolb
cmp
into
in
adc
aas
adc
pop
jb
cmpsl
fcomps
test
inc
adc
lea
and
incl
adc
or
hlt
cli
pop
jo
xchg
mov
and
sub
bound
mov
and
jb
push
mov
sbb
pop
dec
fwait
ss
gs
sub
xor
pushf
in
stc
aam
xchg
dec
ss
add
fmuls
xchg
movsb
jge
pop
xor
icebp
popa
adc
xchg
mov
negl
pop
jae
leave
lods
jno
cmp
push
pop
shl
and
lods
inc
lods
mov
sbb
movl
xchg
push
loop
xor
xor
cmp
push
outsl
sub
mov
xchg
insl
hlt
test
out
iret
fcmovne
divl
fwait
nop
gs
gs
or
hlt
insb
adc
xor
fs
out
scas
cwtl
out
in
mov
mov
jmp
loop
setnp
xor
lods
dec
sbb
mov
je
sub
and
inc
outsb
add
inc
mov
or
test
fcomps
fdivr
sub
fisttpl
mov
dec
js
mov
imul
imul
and
xor
sbb
clc
int
enter
xchg
cmpsb
inc
cmp
xor
add
mov
rclb
cmp
cli
jp
mov
loope
jbe
push
jno
scas
dec
ja
cld
mov
pop
lret
push
jb
push
xchg
cs
or
jne
loopne
jno
cld
out
lahf
movsb
out
addr16
push
pop
test
cli
sbb
inc
or
insl
push
dec
push
and
add
movd
jg
xchg
stc
icebp
xchg
push
test
rcrb
std
cwtl
ret
pop
int
sti
push
xchg
stc
scas
cmp
orl
mov
shl
data16
pop
sbb
sub
cwtl
or
mov
jg
subps
iret
ja
hlt
cmc
and
mov
in
pop
int3
xchg
or
filds
shll
jne
enter
test
fldt
sti
lods
lock
jl
ffree
mov
push
mov
pop
idivl
xchg
push
adc
jmp
jg
ds
sbb
outsl
aas
leave
cmovle
pop
adc
loope
inc
arpl
xchg
nop
out
pushf
pop
mov
jns
lock
mov
ss
mull
fdivrl
cltd
cmp
jmp
push
call
mov
xchg
mov
xchg
inc
loopne
and
mov
lahf
jne
inc
cld
fs
adc
mov
xchg
inc
loopne
enter
lds
xor
lds
movsb
cs
inc
inc
scas
stos
inc
mov
pop
call
ja
sbb
and
mov
push
lcall
rclb
pop
mov
pop
mov
clc
jmp
insl
adc
inc
xor
arpl
out
ffree
add
jne
divb
xchg
jb
jmp
clc
cld
sbb
hlt
inc
and
push
push
out
je
arpl
mov
push
insb
pop
andb
mov
pop
fwait
jno
leave
scas
jmp
mov
sub
inc
addr16
negl
inc
mov
popa
lock
orb
sbb
cmp
aas
dec
mov
push
test
pop
subl
int
imul
cmp
outsl
inc
sarl
cmp
cs
call
mov
and
dec
xchg
leave
rcl
addr16
xlat
xchg
mov
frstor
inc
ja
mov
ss
fs
and
test
bound
and
or
clc
arpl
adc
lock
xor
inc
mov
in
inc
sbb
and
fwait
mov
lods
adc
pop
bound
pop
and
lcall
adc
mov
imul
das
ss
ja
pop
xor
repz
dec
nop
and
inc
mov
pop
mov
incb
mov
push
test
bound
cs
mov
xchg
pusha
lods
adc
rcrb
pop
cld
in
push
add
out
xor
out
mov
je
adc
ret
gs
sbb
das
mov
pushf
shll
in
frstor
xor
and
mov
jecxz
cmpsl
pop
jae
push
mov
and
dec
insl
dec
pop
inc
hlt
xor
jecxz
cs
ficompl
inc
hlt
into
aas
popf
les
loopne
push
push
pushf
cmp
sbb
out
leave
xchg
pushf
jb
popf
inc
and
or
shrl
call
cmp
rcl
testb
ja
xchg
shll
pop
push
sub
pushf
je
in
cmp
sbb
xchg
cwtl
inc
xchg
fstpl
pop
add
mov
jge
pop
push
je
mov
cmp
mov
cmp
out
jae
push
daa
dec
jmp
xchg
cmp
sub
fidivl
popf
faddl
xor
sarl
or
jns
mov
cmp
dec
mov
out
pushf
push
dec
ret
inc
test
fsubs
lea
out
icebp
sbb
mov
sub
xor
lahf
arpl
or
shl
xchg
cmp
pextrw
cmp
pop
push
mov
in
mov
cmc
pop
or
insb
adc
leave
mov
addr16
out
mov
jne
cmpsb
cmpsl
sub
test
jecxz
std
outsb
icebp
push
mov
aam
rcr
mov
psrld
and
arpl
divb
rorb
mov
nop
push
lock
out
aam
rcrb
fisubrs
xorb
loopne
pop
cmp
mov
mov
mov
imul
pop
mov
jne
pop
push
pop
icebp
cmpsb
push
lods
inc
call
in
je
pop
mov
and
movsl
sbb
push
data16
ficompl
push
sub
sbb
sub
inc
cmp
repnz
push
ret
loop
inc
dec
arpl
pop
mov
jmp
mov
mov
push
mov
and
xchg
xlat
push
in
adc
int
out
movsl
lret
lret
sbb
ja
hlt
add
or
or
xchg
std
jno
mov
shl
fst
mov
add
loope
lds
popf
arpl
cmp
dec
mov
int3
out
cmc
out
xchg
sar
push
int
push
lods
or
aaa
adc
cltd
and
sbb
xor
pop
jmp
dec
push
xor
adc
aad
or
lret
ss
addr16
or
jg
test
push
mov
jecxz
daa
pop
cld
sbb
jl
adc
push
mov
cmp
inc
jns
xchg
adc
inc
in
pushf
mov
aam
adc
mov
dec
imul
add
mov
xor
jg
fsincos
xchg
imul
ja
xor
sbb
arpl
adc
out
cmp
cld
pop
push
dec
pusha
jle
in
jb
sub
xor
movsb
or
fbstp
xchg
xchg
inc
test
lcall
mov
test
mov
push
mov
mov
and
mov
fnstenv
inc
lret
popf
pop
fdiv
push
sbb
cmc
pop
dec
jmp
call
mov
push
cmpsb
pop
xchg
pop
and
mov
enter
add
fstl
mov
scas
cwtl
dec
push
int
fsubl
das
or
loopne
jb
repnz
or
and
enter
sbb
ss
dec
inc
iret
or
mov
pop
and
fs
dec
loope
adc
mov
enter
movsl
jae,pt
daa
orb
jmp
ret
inc
aad
mov
dec
test
stc
js
dec
mov
xor
push
ss
cvtdq2ps
out
nop
into
cmp
icebp
adc
pushf
xchg
jns
imul
scas
cwtl
push
xorl
ss
fs
cs
repz
sarb
lcall
push
add
add
or
mov
pop
int
or
mov
rcrb
sbb
ljmp
pop
ljmp
mov
movb
push
mov
test
dec
adc
cltd
ds
popf
and
ficoms
mov
js
pop
cli
shll
fld
cmc
sub
mov
adc
xlat
cmp
jecxz
dec
clc
int
fisubs
inc
outsb
out
lods
dec
pop
jecxz
out
ret
aaa
iret
jp
jge
xchg
cwtl
sub
test
pop
or
in
mov
mov
lret
xchg
xchg
sbbb
lret
xchg
cmp
pop
cmc
mov
shrl
rol
scas
cmc
repnz
in
in
fmul
pop
cltd
or
nop
lcall
xchg
mov
test
iret
sbb
out
pop
insb
mov
jne
shr
cmp
mov
stos
clc
stc
jmp
jnp
jle
imull
test
sub
and
fdivl
add
in
popl
mov
mov
cmp
cmp
and
sti
xchg
movsl
adc
ret
repnz
push
into
xchg
cld
xchg
stos
jb
mov
sub
xor
inc
pop
push
pop
addr16
test
mov
hlt
cmp
sbb
sub
rcl
loop
sub
test
gs
data16
fsub
sub
ljmp
mov
leave
push
push
pop
insb
mov
mov
and
outsb
mov
iret
enter
sbb
mov
dec
dec
das
out
xchg
sar
in
lret
pop
sbb
subb
adc
pop
pop
out
in
xchg
mull
sbb
int
jnp
lods
sahf
lahf
xchg
adc
fistpl
std
clc
insb
xor
jbe
pop
sbbb
mov
push
iret
xchg
popf
mov
push
cwtl
cmc
pop
adc
cmp
pop
test
mov
cmp
fcomps
cmpsb
imul
push
push
mov
and
imul
xlat
xchg
mov
jo
lds
mov
dec
shll
mov
sahf
gs
gs
das
push
jecxz
push
sub
call
adc
mov
push
mov
ss
xchg
dec
and
or
daa
push
inc
test
mov
popf
idivb
adc
test
lret
popa
cmc
stos
xor
out
inc
jbe
fwait
pop
inc
cli
fbld
dec
inc
aam
pushf
inc
xor
fs
insb
ss
movsb
in
mov
mov
cmp
insb
or
jp
pop
mov
call
jmp
jmp
lcall
fcmovnbe
sub
stos
daa
std
neg
jmp
fisubl
lret
pop
jmp
ret
push
dec
push
jns
fcompl
adc
in
mov
dec
add
xor
mov
jmp
stc
adc
push
ret
andl
sbb
sar
pop
mov
sar
xchg
ficompl
add
je
aas
mov
pop
in
pushf
sbb
adcl
mov
pop
or
jmp
xlat
jmp
lret
lret
call
cmp
call
dec
scas
xchg
iret
sbb
dec
and
sahf
jo
aas
test
adc
sbb
imul
push
adc
mov
arpl
push
lds
or
jb
dec
push
imul
xchg
int
pop
jg
sub
movzwl
dec
jle
pop
dec
mov
sarb
adc
push
loop
sub
cmp
daa
es
dec
pop
mov
movsl
lds
jmp
jbe
mov
sub
mov
jecxz
test
sbbl
enter
insb
or
popa
ss
jae
dec
xchg
lods
add
pop
mov
iret
test
ja
bound
sub
ret
scas
cmp
mov
inc
sub
pop
add
add
push
aaa
outsl
mulps
je
push
bound
pop
clc
push
cmp
mov
lds
nop
movsl
dec
sub
test
lods
aam
js
and
cmp
jb
pushw
jge
enter
scas
adc
pop
rdpmc
jecxz
stos
scas
out
mov
icebp
xor
inc
scas
lods
mov
inc
mov
ljmp
jl
je
test
ror
xor
out
iret
add
sub
bound
inc
sbbb
jle
push
inc
subl
mov
add
mov
loopne
cli
or
hlt
inc
or
jnp
mov
lods
popf
xor
sbb
xchg
cli
add
pop
and
ljmp
sbb
push
pop
cmpsb
jo
xlat
pop
out
cmp
or
lcall
out
out
add
js
or
rcrl
out
test
mov
daa
rcrl
lret
sub
jnp
das
jns
adc
cwtl
and
or
xchg
dec
fadds
xchg
in
sbb
fildl
sti
das
popa
inc
push
jo
adc
rcrb
cltd
fdivs
into
int
std
add
insl
or
icebp
test
push
mov
repnz
push
pop
inc
stos
cltd
out
inc
enter
add
lahf
dec
sti
xor
push
or
daa
and
movsb
jbe
mov
nop
bound
sti
ss
pop
mov
push
dec
jmp
aas
in
movsl
bound
xchg
in
mov
mov
jbe
mov
test
add
pop
push
jb
inc
out
cltd
sbbb
sub
loop
adc
cmp
mov
mov
jge
mov
lahf
push
incl
sub
shr
push
test
cli
lret
fnstsw
add
fwait
mov
or
lcall
jl
lds
mov
mov
arpl
imul
std
mov
or
adc
subl
push
lock
mov
xor
push
dec
into
jbe
pusha
lret
lret
daa
cmp
fcomps
sahf
mov
adc
rcr
ret
rolb
adc
arpl
and
stos
call
flds
add
mov
xorl
std
imul
stc
mov
mov
in
in
stc
pop
aam
repz
cltd
pushf
push
addr16
nop
xchg
dec
sub
mull
pslld
cmpsb
xchg
sub
stc
lahf
push
into
dec
jne
xchg
imul
xor
inc
push
mov
and
cmp
scas
daa
insl
pop
mov
mov
ret
inc
movsl
fs
sub
imul
js
mov
outsb
fstl
mov
jl
pop
and
shll
xchg
pop
iret
jae
loopne
pop
inc
mov
lock
push
das
jno
lahf
xor
cwtl
or
jg
xor
rorb
inc
jecxz
idivl
pop
ja
mov
ljmp
dec
xchg
loope
add
pop
xchg
xlat
mov
insl
mov
std
xchg
enter
pop
mov
stos
dec
mov
hlt
xchg
jns
jne
xor
add
dec
imul
dec
adc
adc
dec
loop
fidivl
lds
mov
iret
ret
sbb
dec
popa
mov
jge
or
push
out
and
pusha
addl
loope
stos
ret
aas
iret
xchg
or
add
add
pop
cmpsb
and
jge
pop
inc
cld
mov
pop
lcall
fsubp
outsl
subl
mov
pop
adc
repz
sarb
or
ret
xchg
xchg
mov
enter
ficoml
dec
mov
mov
xor
lea
loope
nop
js
scas
cmpl
or
rcl
std
jae
cmp
mov
mov
int3
js
jne
xchg
mov
mov
and
push
stos
fistpll
or
cmp
rolb
push
xchg
test
cli
sbb
jo
pop
shrl
or
in
mov
lahf
rcrl
fimull
push
jge
inc
mov
cld
sub
cmp
daa
in
jp
popf
cmpl
cmc
popa
xor
inc
xchg
adc
mov
and
jno
or
jecxz
pop
jb
sub
js
xchg
sbb
mov
das
push
dec
shl
sub
dec
lods
iret
mov
xor
inc
push
je
mov
dec
cltd
decb
movsl
push
sub
sahf
dec
mov
adc
mov
daa
mov
es
clc
arpl
movsb
jne
ret
loopne
fbstp
mov
push
push
sub
adc
rorb
push
jecxz
xchg
ja
jle
xchg
cmp
jbe
push
xchg
push
cmp
jns
les
mov
add
cmp
jmp
jl
repnz
and
lods
in
add
add
xor
sbb
lret
add
inc
jne
dec
outsb
xlat
xacquire
cmc
adc
or
fbstp
fcmovnb
lock
push
push
xlat
insl
sbb
lahf
rol
dec
push
rorl
cmp
xchg
or
fisubrs
mov
mov
cltd
jne
mulb
lea
jne
orb
inc
js
lds
sahf
pop
dec
aas
pop
push
pop
jecxz
sub
hlt
rcrb
xchg
stos
leave
into
xchg
fwait
shlb
fcompl
mov
mov
inc
outsl
ja
popf
int
stos
int
xchg
dec
xchg
mov
sub
xor
cmp
xor
test
in
jb
enter
lahf
rcr
dec
mov
cmc
test
cmp
jne
test
sub
xor
cmpsb
jnp
xor
adc
mov
enter
lds
repz
mov
mov
cmp
pusha
aad
out
push
pop
nop
call
loopne
xor
push
add
les
mov
xchg
dec
repnz
loope
sub
into
sbb
pop
push
xchg
pop
data16
and
sub
mov
dec
adc
push
cltd
inc
sub
std
mov
jae
stc
mov
sub
adc
add
or
adc
and
test
mov
fisubrs
dec
lock
lahf
sub
mov
sar
ss
pop
sbb
xor
push
fbld
lcall
mov
fildll
mov
mov
sahf
add
cs
stos
aad
cmpsb
in
out
push
adc
jecxz
lods
popa
fwait
pop
daa
in
sbb
adc
leave
addl
mov
mov
int
dec
mov
bound
scas
jmp
int
jmp
icebp
jnp
add
mov
cmpsl
shrl
stc
scas
loopne
fstp
cli
test
pop
jns
sub
movsl
scas
mov
cmp
mov
cld
icebp
push
mov
inc
cmp
adc
int3
or
insb
popa
sub
and
shlb
pushf
iret
stc
cmc
mov
pushf
icebp
xchg
clc
int
adc
rcl
lds
test
cmpsl
fmuls
cld
test
out
add
iret
aas
fisubrs
faddl
jge
outsb
inc
adc
push
pop
test
mov
call
push
pop
jnp
cltd
std
sbb
adc
xchg
and
sbb
fidivs
push
lods
in
or
mov
add
push
les
mov
movsl
jg
sbb
push
mov
push
xor
cli
mov
mov
icebp
mov
loopne
fcmovnb
mov
dec
cmp
cltd
and
pusha
fsubl
cmpsl
add
cli
sti
lds
in
add
cmp
dec
leave
cld
iret
les
jae
jp
lret
aaa
mov
xor
xchg
inc
inc
dec
popa
ja
and
mov
jnp
stos
setle
xchg
jp
cmp
add
fldl
insl
cmp
es
pop
mov
aaa
sub
andb
ss
or
inc
xor
adc
leave
cs
cltd
or
insl
fmull
jb
xchg
sarl
fisttps
sub
sarl
aad
cld
push
xor
mov
push
push
xchg
addr16
orb
sub
inc
mov
arpl
loop
jg
dec
popa
stos
add
or
sahf
fistpll
fistps
hlt
leave
popf
sub
pop
pop
insl
test
pop
es
push
pop
fbstp
leave
or
in
fmul
add
rcrl
daa
fbld
xor
bound
cs
pushf
je
push
lds
into
mov
push
adc
push
lahf
mov
push
adc
dec
push
data16
sbb
cmp
pop
iret
mov
jns
jmp
mov
cmp
jbe
jge
dec
aas
cli
push
sti
imul
pop
pop
test
or
aam
mov
imulb
xorb
inc
lret
fisttpl
jns
xchg
bound
jmp
jne
xchg
imul
cwtl
or
add
add
jecxz
mov
lods
stc
gs
pop
xorl
xor
test
mov
sbb
dec
sub
mov
stos
cwtl
mov
sbb
and
ss
jle
rorb
popf
es
or
mov
jmp
xchg
loop
jmp
hlt
and
rorl
jns
mov
lods
int
addr16
loope
ja
lret
jne
aas
fstl
jl
pushl
hlt
ret
pop
psllw
outsl
das
cli
jg
test
xchg
popf
mov
sub
out
xchg
out
mov
xchg
dec
mov
hlt
sub
lock
int
cmpsl
inc
daa
or
out
xchg
adc
les
mov
xchg
pcmpeqb
pop
ret
stos
sbb
cmc
xor
jmp
fdivs
cmpsb
fidivrs
dec
mov
sbbb
push
imulb
pop
icebp
sarl
jmp
dec
xchg
xor
jno
mov
in
push
pop
jo
rorb
sti
adc
pop
js
pop
sbb
push
hlt
mov
stos
lret
lods
pop
add
leave
fsubl
mov
mov
add
rclb
push
cltd
inc
mov
pop
mov
rcl
and
dec
mov
bound
pop
aaa
cmp
cmp
inc
sti
js
imull
pop
daa
fsubrs
jmp
or
pop
cmpsb
out
adc
inc
xchg
into
scas
mov
jne
int
int
inc
push
cmpsl
out
lret
into
mov
icebp
mov
add
repz
jg
imul
movsb
arpl
add
iret
sub
out
lock
outsl
int3
mov
mov
add
cmp
popf
add
shll
mov
jnp
fadd
pop
out
sub
cmp
repnz
nop
dec
aaa
scas
lods
rcrl
div
cltd
pop
xchg
test
dec
addr16
cmpsb
inc
scas
fisubrs
notb
das
icebp
pop
xchg
sbb
add
jnp
mov
out
add
shl
cmp
xlat
sbb
inc
lea
push
andb
pop
fiadds
jl
jp
and
or
inc
scas
movsl
inc
hlt
jnp
lock
movsb
enter
ret
adc
dec
mov
push
dec
cmp
mov
xor
jno
lahf
mov
jo
test
xor
adc
fsubrl
cld
leave
loope
adc
dec
sbb
rep
and
out
jae
cmp
xlat
pop
test
mov
negb
cmp
sar
insl
mov
xchg
fsts
xchg
inc
inc
and
pop
movsb
push
adc
mov
or
sbbb
pop
jmp
mov
mov
jns
lret
jmp
nop
sub
xorb
and
das
pop
in
and
adcl
pop
ljmp
je
pop
dec
xchg
shl
in
pop
mov
xlat
xor
pop
lcall
insb
cmp
or
sahf
ret
xorb
add
push
jmp
mov
aas
mov
adc
idiv
les
xor
rclb
fucomip
cmp
mov
mov
push
cmp
mov
lock
jp
mov
jne
xorl
aam
das
bound
xlat
stc
sub
stos
xchg
sub
fucom
in
scas
push
cmpsl
outsl
ljmp
and
push
test
inc
sbb
xchg
imul
out
out
insl
adc
jmp
lahf
sub
lahf
cmp
js
cmp
xlat
mov
aas
push
jbe
mov
test
push
cmp
push
push
insl
repnz
jb
xchg
cwtl
repnz
data16
aaa
ljmp
mov
ljmp
leave
xchg
xchg
pop
out
push
add
push
test
add
adc
and
jg
jbe
inc
rol
rolb
sub
jbe
xchg
add
scas
dec
mov
in
push
leave
adc
test
pop
shll
xlat
daa
jl
test
stc
mov
jmp
push
fldcw
fisubrs
lods
in
icebp
inc
jae
ss
sbb
mov
fcoml
pop
push
xor
int3
dec
mov
inc
sbbb
adc
xchg
jecxz
fldcw
pop
push
xchg
out
sub
test
outsb
hlt
and
pop
or
sub
sub
out
pop
out
in
push
push
add
mov
jp
add
shlb
popf
dec
cmp
ljmp
mov
icebp
pop
test
imul
scas
popf
test
lret
cmpsb
jecxz
jne
repz
dec
pop
pop
pop
sti
adc
stc
mov
dec
fstl
ret
xrelease
sub
imul
movsl
shr
or
insb
inc
cli
sub
repnz
out
cmp
or
mov
in
dec
jl
ds
sbb
push
pusha
repnz
stc
mov
sahf
clc
adc
or
call
lcall
jmp
and
push
inc
xchg
adc
fidivs
arpl
nop
jnp
dec
sbb
out
mov
into
sahf
xor
lahf
rcr
lcall
inc
clc
aaa
mov
xchg
xor
daa
adc
mov
adc
xor
stos
mov
dec
xor
adc
dec
imul
jl
add
mov
fwait
xchg
in
jecxz
dec
movsb
sub
push
mov
pusha
xor
xor
pushf
mov
movb
or
fidivrs
mov
loope
mov
in
cltd
cld
into
jg
xor
add
in
mov
xchg
movsl
jmp
sti
in
pusha
jmp
out
das
pop
stc
push
cli
movsl
and
jg
inc
in
cs
push
shrb
nop
jmp
xor
nop
fadd
push
pop
dec
scas
mov
mov
sub
testb
orl
inc
dec
aas
mov
add
je
add
sbb
add
jns
add
xlat
iret
movsb
mov
addr16
shll
mov
sbb
fstpt
loop
lods
xchg
inc
jo
push
popf
or
fisubs
push
adc
scas
cmpsb
dec
dec
fwait
cmc
xchg
shr
add
xchg
outsb
roll
lds
jle
cmp
jmp
jge
aas
ja
push
pop
fucomi
inc
mov
in
in
xchg
test
push
mov
shrb
call
popa
lret
imul
lea
mov
inc
xchg
push
test
pusha
cmp
jl
add
lods
sbb
mov
fdivl
cmpsb
lea
or
imul
or
mov
lods
std
push
add
lock
sbb
pop
test
push
inc
mov
push
jae
call
mov
adc
mov
sbb
shr
or
jns
shll
mov
mov
js
arpl
leave
push
test
fcoms
push
ja
das
push
ret
call
cmp
push
lcall
enter
xchg
mov
out
xchg
and
sub
pop
sub
subl
stos
dec
inc
xchg
lret
or
jg
lock
cld
adc
ljmp
fsubs
loope
mov
out
mov
clc
out
pop
fwait
sti
ret
dec
jb
mov
adc
arpl
mov
add
dec
dec
pushf
lahf
aaa
or
jle
hlt
repz
mov
push
push
std
jecxz
jb
arpl
vphadduwq
xchg
mov
cmp
pop
cmpb
pop
and
cmp
lahf
push
sub
int3
cmp
movsb
test
mov
inc
pop
clc
aam
adc
gs
cwtl
in
lods
orl
das
es
fwait
push
adc
jge
and
pop
bound
movsl
jecxz
fldl
adc
sbb
ret
mov
mov
mov
gs
in
imul
and
mov
mov
mov
imul
mov
enter
lcall
pop
cmpsl
test
decl
pop
mov
loope
xor
xchg
push
in
ds
das
outsl
fwait
in
jae
or
cmpsl
inc
cltd
adc
mov
mov
ret
rcrl
mov
xorb
add
leave
jg
xor
dec
popf
iret
add
outsb
movsb
test
pop
pop
jbe
and
data16
adc
dec
loopne
or
xchg
and
sub
lcall
or
sub
fistpll
out
lods
mov
and
sbb
ljmp
cli
inc
movsl
mov
push
leave
in
sbb
shrb
clc
mov
xchg
mov
push
or
jecxz
sub
jae
test
leave
pop
cmp
subb
xchg
cmp
lcall
aam
dec
int
movsl
mov
into
nop
jmp
je
fcompl
pusha
repz
jge
out
in
push
sahf
mov
push
push
inc
popf
add
ja
in
out
xchg
mov
mov
int
adc
scas
mov
pop
pop
addr16
mov
push
lahf
inc
out
shl
shrl
aas
dec
xor
sarl
jp
stos
xchg
orb
fiaddl
lret
push
lret
outsl
mov
add
jecxz
popa
fucomp
daa
push
enter
filds
sbb
lcall
lahf
loopne
int3
cmp
popa
cmp
xlat
mov
cmp
sub
pop
push
mov
sbb
push
xchg
outsl
sahf
lds
out
or
gs
mov
lods
xchg
shl
cmpsl
bound
or
sahf
mov
jle
and
sti
push
sub
in
jmp
repnz
dec
ret
pop
xchg
add
mov
push
sub
sub
mov
ds
push
dec
and
pop
adc
mov
and
lret
lahf
jno
shr
insl
sbb
mov
repz
mov
jo
cli
and
sbb
xchg
cmpsb
mov
xchg
lret
idiv
das
sub
cmp
sbb
dec
lahf
xor
repz
in
jecxz
andb
inc
std
popa
cld
pop
mov
out
jb
in
pop
movsl
pop
mov
call
push
mov
ficoml
scas
push
sub
sahf
mov
shlb
mov
mov
pop
push
scas
push
js
out
sub
or
or
jg
out
cmp
xchg
cmp
test
daa
pop
sub
push
jecxz
xchg
and
ror
jns
and
push
mov
pop
cmp
sbb
ljmp
mov
stos
mov
leave
scas
arpl
mov
xchg
or
je
add
fildl
mov
adc
call
outsb
mov
inc
ja
into
gs
div
xor
rep
xchg
sarb
adc
inc
xor
dec
sahf
jecxz
pop
lret
dec
or
stc
jmp
aad
mov
push
adc
fdivs
jg
shrl
xlat
iret
jl
into
xchg
pop
and
shl
inc
out
push
mov
pop
loope
lret
and
dec
pop
daa
aad
xchg
outsl
js
xor
mov
in
add
fisubs
mov
imul
and
and
int3
lods
bound
leave
dec
mov
dec
mov
icebp
or
mull
or
jp
pop
mov
loop
jb
ds
insl
dec
xor
xor
jns
inc
push
repz
mov
repz
cli
out
popa
movsl
xor
test
cmp
pusha
xchg
enter
lahf
sub
insl
mov
mov
gs
fidivrs
jle
mov
repz
mov
addl
push
cmp
mov
xor
sahf
or
xor
out
negb
adc
xor
push
aad
pop
sub
inc
fldcw
cltd
in
leave
push
inc
xor
mov
bound
mov
mov
and
lret
stc
xchg
mov
mov
aam
xchg
test
push
aad
imul
lds
pop
das
inc
cmp
adc
call
xchg
arpl
xor
mov
mov
inc
sub
xchg
rol
bound
pushf
addr16
into
adc
aaa
pop
sbb
in
int3
pop
lret
jbe
faddl
mov
xchg
inc
mov
add
clc
add
push
in
repnz
jno
cmp
test
popa
leave
aam
pop
in
adc
push
out
mov
xor
ret
and
lahf
pop
repnz
sbbl
repz
out
jae
pop
loopne
mov
mov
mov
stc
outsb
repnz
push
in
loope
push
ja
inc
adc
inc
js
xchg
lret
repnz
addr16
stc
hlt
mulps
push
sbb
out
mov
test
fcmovb
cmp
shrb
mov
xor
sbb
addb
test
mov
cli
test
inc
out
inc
pusha
popa
and
hlt
jp
xor
pop
sub
adc
xchg
adc
push
mov
sbb
cmp
add
sahf
sahf
test
icebp
mov
xchg
aas
inc
sti
ss
dec
pop
or
jo
pop
jl
inc
test
ret
mov
fmul
cmp
lcall
mov
xor
adc
or
xchg
add
sub
lret
mov
sub
mov
hlt
sbb
mov
jnp
push
jnp
shll
stos
mov
aad
jp
fisubrl
add
pop
pop
mov
fcomp
das
pop
aaa
sbb
xchg
outsb
sbb
roll
and
xlat
push
push
cmp
ret
cmpsb
gs
cld
adc
rcll
jp
mov
cmc
xchg
imul
out
xchg
dec
out
fs
push
sbbl
lds
xor
lret
leave
aam
sahf
cmpsb
push
xchg
inc
dec
imul
mov
xor
inc
les
or
sbb
or
dec
adcb
je
icebp
test
lds
lret
xchg
push
push
clc
ret
jge
xorb
pop
lods
push
popa
ja
loope
push
andb
xchg
adc
mov
aas
inc
fbld
ror
rolb
js
mulb
je
adcl
add
cmp
sub
lret
inc
xor
test
push
addr16
aad
cli
and
pop
add
in
cld
sbb
and
scas
daa
test
inc
lds
adc
jl
mov
rsm
sbb
sbb
xor
into
repnz
push
aas
mov
fmul
push
dec
push
das
jo
lret
xor
xor
fs
push
mov
dec
shl
enter
and
dec
mov
je
jge
push
fadds
pusha
mov
scas
sub
shlb
icebp
mov
fsubl
cmpb
xchg
mov
sub
or
nop
imul
jge
sahf
scas
xor
sbb
test
test
jae
inc
popa
xchg
mov
cmpsl
inc
jg
inc
fimull
jge
lcall
xor
or
rcl
aad
and
sbb
js
mov
lret
test
sub
mov
or
sbb
xlat
xchg
xor
insl
xor
popl
rcll
shll
cmp
adc
arpl
jge
xorb
xor
add
mov
lahf
cmp
xchg
enter
xchg
pop
and
fsubs
test
jle
sub
sbb
inc
outsb
or
dec
roll
das
push
bound
jnp
andl
push
sub
ja
outsb
cli
push
cmpb
inc
aaa
mov
mov
dec
adc
push
sarl
lods
nop
mov
repz
into
loope
xchg
sahf
loopne
scas
fcomps
sub
fprem
test
push
adc
je
int
ja
inc
dec
inc
and
repz
mov
push
cmpsl
shrb
sbbb
push
mov
cmp
mov
mov
jno
xor
es
and
data16
mov
pushf
test
ret
in
stc
fcompl
jge
mov
insl
sbb
idivb
sbb
add
mov
nop/reserved
scas
cmp
mov
xor
cmpsb
outsb
sarb
out
inc
add
daa
inc
shlb
mov
cmp
and
mov
jle
jecxz
jg
add
ss
jge
or
ret
orl
and
and
lret
push
cmpl
dec
mov
push
fadds
xchg
push
adc
out
fcompl
pop
dec
lahf
pusha
mov
push
push
test
and
adc
push
dec
jo
popa
std
lods
xchg
jns
test
pop
add
mov
fimull
fcomp
or
mov
and
inc
fcoms
jnp
xchg
pop
push
data16
cli
ja
and
push
inc
pop
icebp
out
data16
in
and
dec
std
dec
jecxz
gs
mov
adcl
mov
test
popa
xor
ja
sub
hlt
jns
xchg
sarl
cli
add
adc
fbstp
mov
add
mov
ret
mov
adc
fucomip
xor
fmuls
rorb
test
sub
inc
jmp
mov
leave
cmc
clc
pushf
push
sub
pop
aaa
cmpsb
sub
jb
mov
mov
cmp
imul
mov
sbb
mov
adc
pop
jno
test
jnp
xchg
mov
outsl
xchg
sub
and
sub
dec
lcall
jg
mov
mov
xchg
xor
icebp
sub
mov
push
inc
dec
dec
push
adc
outsl
pusha
jne
dec
negl
pop
mov
cmpb
add
jb
push
bound
daa
cwtl
filds
shll
pop
cmp
xchg
xor
fnstsw
hlt
add
lds
mov
mov
mov
push
jo
xlat
pop
enter
les
or
testb
clc
and
mov
and
inc
dec
jg
sub
sbbb
xchg
push
push
jno
push
add
repz
mov
sarb
inc
clc
js
jae
ret
lock
inc
bound
daa
pusha
jecxz
mov
std
add
shrb
xchg
dec
jne
outsb
out
bound
dec
fucomi
jnp
out
popa
icebp
repz
fcoms
push
scas
xchg
sbb
mov
out
cltd
outsl
rol
pop
jb
fldt
or
or
dec
ret
test
inc
inc
mov
shll
jns
mov
sub
cmp
jmp
cld
addr16
xchg
adc
jns
cld
mov
push
test
sbb
cli
sub
leave
test
aam
pop
fcoml
push
push
mov
mov
mov
ret
xchg
test
fidivl
andl
icebp
sub
js
add
mov
pushf
in
jge
lods
sti
push
jb
dec
fcoms
and
fs
lret
sub
in
xchg
sub
mov
ljmp
ljmp
cmp
lods
xchg
aas
notl
out
aas
xchg
push
test
arpl
jg
cmp
dec
scas
daa
pop
push
stos
repnz
inc
mov
mov
cmpsb
xchg
inc
xor
xchg
idiv
clc
filds
rcrl
mov
inc
mov
fstpt
lahf
mov
or
inc
out
cmp
xchg
flds
xchg
inc
xchg
cs
cmp
fnstsw
sbb
in
into
pushl
mov
insl
and
les
push
ret
push
movsb
xor
inc
xor
cmp
and
mov
scas
xchg
and
pop
push
pushf
cmpsb
ja
jns
in
sahf
js
scas
lcall
push
dec
arpl
dec
cwtl
inc
das
push
outsl
jmp
jg
mov
rcrl
int3
cmp
dec
inc
mov
jae
and
pop
and
cmp
js
into
je
in
mov
subb
out
clc
dec
dec
aam
add
faddl
roll
and
lods
jmp
push
rcll
mov
dec
sbbl
push
ds
in
iret
aas
hlt
clc
push
stc
dec
imul
mov
mov
mov
mov
mov
call
push
mov
cmp
popa
add
andb
test
das
out
push
cmp
mov
dec
fsubs
outsl
cltd
xchg
mov
icebp
lds
movsb
cmc
arpl
repz
cmpsl
jg
stos
shl
inc
fstl
lods
push
jmp
mov
ret
fsubs
jmp
xor
fisubl
cmp
pop
or
xor
pop
aad
aaa
mov
dec
shl
bound
add
hlt
dec
pop
cmp
mov
ret
int3
pop
ret
cmp
inc
sbb
lahf
sub
sbb
mov
idivb
fidivl
aad
mov
mov
scas
adc
into
or
xor
mov
sub
xorl
xor
xlat
adc
pop
cld
int3
popl
and
pop
test
and
les
aad
mov
dec
cmp
stos
mov
out
jae
out
lods
shlb
leave
aas
pushf
addb
lds
adc
inc
push
cmc
dec
popf
pop
shll
int
mov
imul
and
or
mov
fmull
xchg
btr
jge
cmc
cwtl
or
push
into
sbb
divl
subl
repz
out
and
add
sub
jcxz
lret
outsl
enter
xchg
cmp
addr16
dec
mov
pop
mov
push
inc
movsl
iret
fnsave
push
dec
movsb
das
roll
addb
adc
pop
insb
loopne
lds
cmp
lea
xorl
dec
cmpsb
clc
xor
repnz
push
push
std
sub
adc
scas
dec
or
xchg
lea
movsl
xchg
jle
cmpsb
test
jbe
jg
aas
mov
pusha
pop
pop
stc
lahf
mov
dec
dec
and
insb
rcrl
add
int3
hlt
iret
add
mov
sbbb
test
inc
xchg
stos
mov
jns
ss
or
xchg
scas
push
push
adc
or
adc
sbb
and
idivb
push
push
sarb
int
jne
mov
sub
in
push
jb
xchg
or
lret
gs
stc
ljmp
ss
cli
jo
js
jnp
pop
lea
jno
fimull
and
jmp
jle
leave
in
push
push
mov
jo
xor
ja
pop
in
push
fwait
lods
mov
js
adc
xchg
or
xchg
fidivs
cs
subl
push
cs
dec
stos
lds
enter
scas
cmp
fcoms
cltd
ja
cltd
ja
cmpsb
cld
push
addr16
shll
mov
cld
cmp
dec
mov
mov
cltd
out
out
stos
push
test
mov
mov
push
je
imul
inc
mov
loopne
cmp
cmc
sub
inc
loopne
mov
inc
shl
and
jl
mov
imul
add
xorb
in
adc
js
mov
adc
outsl
cld
out
imul
mov
ret
jl
loop
xor
add
pop
and
sbb
lods
into
fisttpl
sub
fbld
adc
xchg
add
mov
ja
rcll
adcb
pop
int3
add
fs
lcall
push
or
dec
leave
je
aas
subl
cmpsb
mov
cmp
cmpsb
fadds
jecxz
dec
dec
shl
xchg
out
inc
mov
jne
xlat
mov
and
shlb
cld
sub
mov
ucomiss
pop
leave
inc
pop
push
or
jmp
inc
cmc
stos
in
mul
mov
mov
cmp
in
lods
inc
dec
clc
in
in
mov
ljmp
pop
movsb
leave
mov
sub
dec
push
dec
es
xlat
test
hlt
xchg
sub
xchg
cmpsl
mov
jo
or
add
pop
pop
subl
aas
popl
dec
mov
push
stos
fs
mov
outsb
cs
jmp
jp
mov
mov
icebp
sbb
orb
jno
pushf
jb
jo
jle
ds
xorb
mov
push
mov
es
lcall
insl
and
ds
nop
dec
jo
jecxz
movsl
or
sahf
stos
call
sub
es
mov
hlt
xchg
mov
ficoms
enter
push
mov
push
mov
stc
or
test
xchg
inc
xchg
outsl
xlat
fsub
push
enter
jge
and
or
jmp
stos
xlat
lods
frstor
pop
hlt
lcall
adc
mov
sub
and
inc
sbb
std
ljmp
sahf
sahf
into
mov
data16
lods
lret
cmpsl
cmpsb
aad
fcoms
pop
outsl
dec
adc
add
lcall
cmp
pop
pop
mov
sbb
repnz
adc
int
inc
fcoml
je
into
jbe
or
mov
repz
shll
cli
or
inc
insl
jp
inc
imull
push
and
jbe
adc
clc
lods
sbb
jae
in
jmp
sbb
adc
push
push
adc
pushf
xchg
addl
loope
dec
or
stos
jo,pn
mov
xor
push
aas
hlt
adc
scas
data16
push
pushf
mov
mov
aaa
fisubs
int3
inc
jg
sti
and
xchg
xchg
push
xor
test
pop
out
push
stc
xor
shlb
xchg
rorl
ffree
push
int3
loopne
add
imul
mov
pop
aaa
sbb
jecxz
mov
out
adc
test
sub
enter
arpl
pop
nop
push
xor
in
popf
pop
lock
mov
jg
cmp
fists
call
mov
arpl
push
lods
testb
fsubrl
mov
lcall
in
and
inc
push
pop
push
push
outsb
dec
cli
jmp
out
call
push
adc
movsb
adc
jno
iret
ds
xor
inc
sbb
rclb
pop
mov
inc
outsl
cmovs
lret
cmpsb
adc
jecxz
rorb
test
cmpsl
dec
cmc
imul
jp
cmc
mov
inc
hlt
mov
loopne
sti
dec
pop
jle
and
into
and
pop
and
divb
push
mov
push
ficompl
into
xchg
inc
mov
movsb
push
cmp
mov
cmp
fwait
sarl
adc
ds
aaa
inc
test
cmp
mov
xlat
je
xor
cmp
jmp
xchg
sbb
mov
jle
mov
jge
cmc
sbb
sbb
pop
inc
sub
int3
add
es
adc
insb
mov
xchg
nop
loope
add
daa
mov
xlat
shlb
loop,pt
icebp
pop
pop
sahf
sub
mov
xchg
cli
cmc
or
mov
inc
fstpl
dec
outsl
stc
fisttpll
push
shlb
pusha
xor
or
push
mov
insl
push
mov
rclb
mov
sahf
fdivrl
fisubrs
insl
inc
add
shlb
jg
mov
shrl
jp
mov
lret
les
pushf
add
jno
stos
in
cmp
sbb
pushf
xor
cmpsb
lock
pop
jbe
lds
mov
mov
inc
insl
ja
hlt
call
or
pop
push
das
push
in
sbb
add
out
rorb
cs
add
imul
mov
mov
mov
sahf
fildll
pop
rclb
mov
inc
inc
popf
popa
ja
jae
pop
cltd
push
ds
xchg
leave
pusha
push
sub
shll
jno
and
btr
inc
and
add
pop
and
into
dec
jns
stc
sub
mov
xor
mov
inc
or
xchg
xor
ds
xchg
sub
clc
dec
mov
imul
popa
into
das
out
jl
fistpll
pop
push
aaa
sarl
add
sbb
shl
jmp
mov
sub
and
pop
xchg
xor
cmp
aas
lock
mov
mov
imul
lret
mov
movsl
ret
popf
add
sti
je
rcl
push
sbb
aam
mov
out
pop
xchg
mov
xor
mov
fstpt
stos
test
repnz
cld
jmp
adc
mov
and
cmpsb
lret
aas
nop
xlat
xor
mov
mov
xchg
cmpsb
jbe
lcall
rcl
lock
inc
and
mov
das
adc
jge
cmpsl
sub
push
xchg
dec
dec
inc
in
add
aam
ret
jno
inc
and
and
mov
xor
mov
cs
mov
scas
or
cli
xor
pop
cmp
or
add
mov
jle
loope
testb
int3
push
push
lds
sub
movl
lret
cs
add
pop
arpl
cmp
mov
in
cmpb
fisubrl
cmp
lret
je
js
cmp
popl
dec
enter
jbe
movsb
push
push
mov
sub
push
stos
sbb
sbb
aaa
adc
fimuls
pop
mov
movsb
or
push
push
and
pop
inc
inc
cld
jns
jae
dec
movb
pop
scas
pop
pop
or
ja
adc
xchg
xchg
rcrb
push
pop
fstpl
inc
lods
or
into
lret
data16
les
and
ja
les
lret
inc
in
adc
xchg
mov
rcrb
lcall
mov
imul
leave
es
sbb
shl
cmpl
ss
cmp
add
scas
push
jae
inc
scas
outsl
and
cld
push
mov
pop
sub
or
aas
stc
les
mov
fcomps
mov
ret
inc
fistl
stos
inc
imul
addr16
rcr
pop
loopne
roll
repnz
popa
jp
xchg
pop
push
je
push
out
divl
cmpsl
movsb
xchg
jb
ss
xchg
aaa
cld
popa
daa
rol
xchg
lods
mov
adc
sub
dec
test
pop
and
xchg
xchg
or
dec
add
jmp
pushl
cwtl
sbb
test
shrb
cmp
repnz
inc
mov
stc
mov
push
std
jne
sarl
dec
and
jo
cmc
fistl
cmp
xorb
sti
in
push
xor
jae
rcll
loope
jbe
mov
gs
jp
mov
mov
ret
adc
lret
lahf
dec
jg
jno
addb
dec
bound
pop
iret
xchg
icebp
cmp
je
cltd
pop
mov
inc
loop
std
sub
stos
aas
jecxz
dec
jmp
addr16
xor
call
xchg
jmp
add
mov
stos
jecxz
decl
lods
rorb
dec
arpl
xchg
lock
mov
push
dec
rcr
jae
cmp
orl
or
push
repz
cld
sub
push
cmp
stos
pop
fpatan
xor
pop
inc
les
and
sbb
add
rcrl
xchg
add
lds
ror
xor
pop
int
aam
fwait
jnp
pop
pop
ja
or
cli
pushf
push
int3
jae
mov
push
mov
add
notb
pop
pop
mov
stos
repz
push
dec
jo
ret
jbe
xor
pushf
lea
add
cmp
bnd
scas
push
mov
push
adc
jp
push
movsb
and
or
sahf
jg
sarl
cld
jno
jo
or
repnz
pop
sub
mov
cmpsb
jb
sub
xor
push
inc
pop
inc
mov
popa
adc
outsl
mov
addr16
mov
pop
dec
mov
pop
ret
pop
xchg
inc
lods
mov
lcall
lea
jae
int
xorl
bound
sbb
mov
insl
shlb
dec
inc
fs
jmp
dec
ss
inc
jmp
pop
cmc
xchg
add
popa
orb
addb
or
cmp
pop
cli
shr
cmpsb
mov
lock
aam
sub
adc
imul
cmpsl
adc
adc
xor
daa
sub
and
loope
adc
sahf
push
aaa
sub
pop
xchg
fwait
cld
sub
mov
jge
aam
push
mov
in
outsb
sbb
pop
sti
loope
inc
mov
movsl
clc
fs
sbb
shlb
data16
jg
push
cltd
mov
fadds
daa
xor
mov
int
mov
and
or
js
das
xchg
cmpsl
sti
daa
sub
arpl
data16
sub
imul
mov
aas
inc
cmp
xlat
mov
fistpl
aaa
push
xchg
lahf
loopne
mov
arpl
xchg
pop
cmpsb
jae
push
add
xor
outsl
pop
push
hlt
out
mov
push
in
inc
push
or
pop
outsl
adc
int3
fisubrs
nop
test
sbb
dec
cmpsb
sub
icebp
fdivp
jl
sbb
push
sti
and
add
into
pop
aam
cmp
arpl
jb
pop
add
repz
insb
aas
xor
jae
add
xchg
insb
jl
stos
mov
push
addr16
in
insb
mov
push
into
loop
xor
push
and
sbb
inc
xor
jne
leave
sti
push
xor
xor
ss
repnz
add
push
jle
or
lcall
dec
jo
lods
ss
and
inc
sub
sbb
cmp
mov
test
and
rolb
int3
ficompl
imul
mov
dec
sbb
xor
outsl
adc
or
arpl
cwtl
fidivrl
stos
cmp
in
aas
int
das
fcmovbe
jl
adc
ret
sarl
in
fildll
sbb
shl
aas
outsl
and
ret
and
inc
std
fildl
dec
in
mov
call
aad
gs
push
jae
rorl
push
loope
popf
xor
ss
or
cmp
bound
add
jbe
lcall
ljmp
push
push
add
pop
adc
jno
adc
mov
mov
cs
pusha
stc
xchg
test
lcall
imul
jmp
fdivrs
push
xlat
dec
rcrb
xor
das
push
jne
lret
pop
in
loope
stos
shrl
cld
jns
inc
insl
clc
ret
inc
lds
insl
hlt
bswap
push
pop
out
add
lret
mov
repnz
xchg
mov
test
or
daa
inc
test
push
sti
push
push
fwait
mov
clc
pop
shlb
out
push
insb
jmp
iret
sub
test
in
push
test
nop
lock
inc
arpl
cmp
xor
je
xor
adc
hlt
mov
sbb
rolb
xor
mov
cmc
sti
test
inc
pop
jg
push
or
pop
fisttpl
mov
hlt
xchg
mov
mov
push
and
into
and
fidivl
aad
push
xchg
mov
incb
mov
cmp
jb
insb
mov
scas
sbb
ret
andb
faddl
and
add
out
or
cs
push
xchg
dec
adc
pop
cwtl
xchg
jge
mov
test
sbb
mov
mov
movsl
idivb
outsb
add
or
or
fisubrl
jns
out
fsubrl
fsubrl
or
sbb
cli
decb
test
xor
xor
popa
sub
orb
out
push
jecxz
aad
movsl
xchg
daa
stos
pusha
hlt
subb
test
xor
cld
dec
dec
repnz
scas
push
push
out
stos
pop
pusha
push
sarb
dec
bound
out
pop
xor
push
push
icebp
mov
add
push
lods
add
mov
jge
jp
and
jmp
inc
call
add
les
mov
popf
jmp
sbb
xor
mov
mov
notb
sbb
mov
and
cmp
xchg
sbb
int3
enter
test
fscale
adc
in
sub
pop
test
mov
outsl
loopne
or
mov
cli
push
jns
pop
scas
cmpb
add
xchg
jecxz
mov
jge
fdivl
add
aam
sub
add
out
push
push
xor
push
scas
mov
mov
int
mov
jmp
cld
xchg
pop
push
ror
pop
int3
adc
cmp
rorl
jnp
dec
js
jecxz
mov
cmp
stos
mov
or
add
mov
mov
rcr
stos
sbb
pop
cld
and
add
xchg
mov
adc
fs
jne
daa
enter
mov
arpl
sub
jno
lcall
pop
lahf
jge
fnstenv
sbb
in
dec
and
sub
ret
lds
ret
xor
xor
dec
xor
pop
pop
adc
shr
inc
aam
mov
and
mov
cmp
arpl
xchg
fistps
std
inc
xor
sti
add
lret
add
int
mov
adc
mov
xchg
sbb
fnstcw
push
fwait
pop
stos
out
xchg
fs
stos
sub
inc
movsb
mov
or
imul
mov
pushf
in
nop
int3
mov
aaa
jge
call
xchg
cmc
lahf
fnstcw
pop
and
pop
loopne
fisttpl
jae
lea
push
das
hlt
into
sbb
or
push
xchg
cld
addr16
pusha
lahf
pop
jb
jnp
mov
jbe
dec
dec
les
add
add
jns
loopne
pop
mov
cmp
cmp
es
stos
sbb
xchg
xchg
jge
ss
nop
mov
sub
adc
fwait
jne
test
mov
fs
lods
xor
std
mov
out
inc
pop
dec
nop
ficoms
push
mov
in
jle
outsl
je
notl
rolb
mov
or
jp
pop
mov
add
imul
mov
mov
lret
dec
daa
sbb
clc
mov
cld
out
mov
push
daa
pusha
int
or
out
pop
sub
push
cmp
movsb
pop
fwait
test
iret
mov
pop
dec
add
inc
sub
scas
fadds
jns
in
cmp
or
shrb
es
mov
mov
call
fldcw
sar
orb
push
call
sbb
in
hlt
pop
rcll
or
sti
iret
adc
xchg
dec
sbb
sarl
pusha
jo
cld
xlat
sbb
push
lcall
jp
dec
icebp
sbb
in
fnstcw
shrd
sub
gs
lret
jae
and
xor
push
aam
or
imul
mov
pop
mov
cwtl
mov
cmpl
imul
adc
push
cmp
test
xchg
insb
inc
das
ficompl
dec
fmull
jp
aas
leave
or
sub
insl
sbb
ja
push
shlb
data16
shrb
fstpl
or
fs
mov
sbb
push
mov
push
xchg
ss
xor
test
jne
mov
xlat
push
and
push
xlat
sub
jmp
je
cmc
xor
lcall
idiv
decb
repnz
push
xlat
pop
xchg
add
and
mov
xor
mov
or
lods
mov
jno
jge
aam
adc
xchg
ljmp
adc
cli
push
xor
imul
es
arpl
shll
and
ss
scas
xchg
or
aas
add
jle
and
sub
mov
pop
and
cld
xchg
add
jle
popf
test
mov
jnp
mov
psubsb
xchg
xchg
mov
ljmp
addr16
push
mov
gs
cmc
jno
mov
cld
sub
xchg
sub
sbb
data16
mov
inc
cwtl
jb
mov
stos
idivl
xchg
mov
jge
add
cmp
adc
imul
jne
ljmp
dec
jg
and
push
es
lret
loope
pushf
adc
mov
adc
fiaddl
mov
das
clc
pop
xchg
je
pop
cmpsb
sbb
loop
shlb
cmp
xchg
jmp
xor
notl
or
push
outsl
rcrl
mov
scas
out
or
jo
cmpsl
add
push
mov
lret
test
dec
inc
mov
sbb
pusha
mov
ds
pop
mov
or
jnp
ret
sbb
dec
dec
mov
out
out
sub
nop
mov
outsl
and
sbb
and
xchg
xchg
outsb
jl
xchg
out
lds
xchg
or
inc
mov
int3
mov
sub
push
pop
adc
xchg
incl
dec
aaa
cmp
xchg
jbe
push
stos
rolb
xor
and
push
cmc
xor
xlat
sub
int3
aaa
aaa
cmpsl
jmp
lret
leave
mov
jne
loopne
sti
into
mov
repnz
in
cltd
into
fimull
fwait
imul
mov
jo
mov
enter
inc
shlb
test
mov
pop
insb
std
mov
jl
aas
sub
add
sti
icebp
adc
jo
mov
fs
repnz
scas
push
or
int3
jno
cmpsl
pop
movsb
and
mov
das
filds
dec
fildl
inc
sub
xchg
push
rol
jecxz
subb
mov
xchg
jae
sbb
in
xchg
js
rcll
mov
inc
iret
sbb
mov
or
adcb
xchg
adc
push
fnstenv
fadds
shlb
mov
jmp
hlt
mov
add
shrl
push
ret
adc
insb
call
sbb
xchg
xchg
stos
mov
in
sbb
xchg
out
adc
sbb
pop
ja
sarl
scas
pop
rcrb
add
dec
stos
cwtl
popf
lock
les
dec
xor
pshufw
aam
ja
addr16
push
jge
xchg
leave
sub
arpl
pushf
pushf
lret
jmp
loop
or
pop
inc
out
xchg
fbstp
sub
fwait
insl
lods
pushf
pop
icebp
lcall
scas
inc
in
ret
lret
std
inc
dec
mov
sbb
cmpsl
mov
add
inc
dec
cmp
lcall
std
mov
and
gs
mov
pop
popf
fsubrs
or
fistl
arpl
outsl
negl
cmp
cs
out
ret
push
and
dec
test
fidivs
jbe
jp
jo
add
adcl
shll
cwtl
mov
lock
clc
rcr
popf
lcall
xor
das
sub
divb
test
fstps
inc
mov
xchg
dec
ss
jno
cmp
loope
lods
sub
push
cmp
pushf
test
js
inc
pop
rol
pop
add
pop
decl
ret
movsl
mov
mov
sub
call
xor
xchg
xor
cmp
in
mov
cmp
ss
divl
mov
sub
mov
cmp
sbb
popf
push
xorl
pop
inc
outsb
push
pushl
sub
push
cmc
pop
mov
dec
cmpsl
jecxz
xchg
push
pop
aam
cmp
pop
leave
add
inc
inc
ficoms
popf
movsl
cwtl
sbb
lcall
outsl
or
or
aam
std
jmp
pop
sub
jmp
and
lret
out
fbstp
jnp
ret
sub
mov
movb
jl
fisubrs
lods
les
fwait
mov
xchg
add
dec
loopne
iret
or
ds
dec
out
loopne
mov
cltd
xchg
mov
enter
ffree
xor
jge
pusha
shlb
push
and
test
fiaddl
pushf
push
sub
repnz
pop
jne
hlt
aaa
insl
mov
xchg
pop
into
loopne
leave
loopne
sbb
fwait
jo
mov
mov
fs
mov
push
jnp
lcall
push
dec
push
imul
pop
cmp
push
adc
shll
pusha
enter
mov
pop
push
lods
leave
sti
pop
mov
mov
outsl
addr16
mov
jne
jbe
xlat
or
fstpl
add
sar
mov
pop
jle
out
xchg
pop
jecxz
push
xchg
inc
xchg
nop
shll
mov
push
shll
sbb
lock
cmpsb
shr
inc
mov
lea
call
xor
lock
and
dec
mov
add
mov
lcall
push
push
push
xchg
in
pop
mov
sbb
lods
in
push
mov
fwait
js
xchg
orb
push
pop
adc
jp
pop
xchg
std
sti
lret
loop
push
dec
fs
daa
mov
mov
rep
loop
dec
push
cmp
rcrl
mov
sbb
or
bound
push
jecxz
sub
lahf
adc
loop
xor
lahf
les
imul
jmp
sub
xor
pop
in
add
ret
pop
shlb
mov
lock
gs
pop
sbb
icebp
push
shll
mov
xlat
jbe
inc
call
rolb
js
movsb
std
js
cmc
dec
insb
dec
sbb
jb
cmp
dec
pop
add
sbb
ficomps
push
sbb
das
ret
insb
mov
mov
fldcw
adc
icebp
inc
add
and
jbe
in
lods
int3
in
popa
push
into
jae
outsl
fdivs
push
leave
rcl
or
mov
xchg
int
sub
jp
out
xor
leave
mov
mov
cmp
ss
jp
push
add
in
push
mov
out
cmp
xchg
push
cld
icebp
cmpb
push
das
cmp
clc
fists
scas
add
repnz
out
push
and
clc
cmc
sub
movsb
pop
in
cmc
push
jns
mov
adc
cld
leave
jl
or
lea
dec
sbb
in
insl
nop
xchg
mov
fmuls
push
push
cmp
or
loopne
out
popf
addr16
pushf
imul
out
imul
fdivrs
jmp
mov
inc
mov
nop
repz
xchg
mov
jnp
add
mov
and
mov
mov
imul
pop
test
pop
pushf
xlat
sub
or
dec
xor
jo
sarl
iret
daa
pop
inc
cmpsl
mov
insb
fiadds
sub
push
cld
mov
cmp
push
fptan
xlat
add
fwait
aas
loope
sbb
rolb
in
xchg
test
out
jp
mov
sub
out
jno
shlb
cmpsb
fsubrl
add
pop
xchg
sbb
out
repz
ret
mov
gs
or
sbb
sbb
jp
repz
ljmp
sti
pop
mov
stos
xor
dec
mov
xchg
pop
jns
das
sbb
pop
jg
jecxz
sbb
inc
sub
rolb
mov
outsb
dec
arpl
movsb
xchg
adc
pop
aaa
mov
jb
insl
sti
loop
dec
push
sti
daa
ja
sub
dec
in
leave
mov
pushl
js
adc
dec
lret
dec
dec
sub
test
subb
cmp
cli
pop
xchg
shll
dec
ss
mov
xchg
adc
das
and
fdivl
pop
and
push
andl
pop
or
or
cltd
sti
scas
adc
cmpsb
jge
mov
mov
lret
ja
push
xchg
aam
test
and
sbb
les
sub
hlt
ss
and
adc
cmp
sub
or
and
jb
aaa
aam
fdivrp
sbb
mov
scas
and
subb
and
pop
outsb
test
js
mov
add
in
in
in
sahf
push
xchg
and
das
notl
outsb
adc
and
neg
pop
ljmp
mov
roll
dec
sub
cltd
mov
popa
leave
lea
stos
mov
or
insb
sub
adc
jo
mov
into
xchg
cmc
aam
sbb
sahf
rcrl
xor
lds
bound
pop
aad
jecxz
and
clc
cmp
ss
adc
out
or
jne
daa
mov
pop
cmp
cmpsb
mov
xchg
outsl
xlat
jmp
sbb
popa
push
adc
add
push
and
ljmp
lea
sub
add
enter
mov
arpl
mov
cmp
leave
jle
push
gs
clc
arpl
mov
add
push
enter
inc
mov
push
and
sahf
loope
aad
stos
out
mov
repnz
nop
je
add
jp
pop
nop
pop
in
xchg
mov
xor
add
mov
sub
jl
shrb
ja
aam
cs
cmp
std
shrl
xor
push
pop
int3
dec
push
movsb
sub
cmpsl
cs
xchg
mov
imul
adc
addl
mov
scas
jne
jecxz
lds
lahf
imull
or
repnz
cmpsl
cmp
sub
mov
or
and
and
fdivp
divb
inc
rol
hlt
dec
inc
push
fadds
jmp
jo
imul
stc
push
arpl
cmpsl
int3
cmp
dec
push
mov
or
lods
lods
sub
clc
push
mov
adc
mov
fwait
in
movsb
cmp
sbb
shr
popf
aas
test
sbb
gs
inc
xorl
sbb
xchg
xchg
andb
sub
in
ljmp
pop
loope
or
mov
fs
jle
outsb
gs
pop
cmp
sbb
shll
sub
jp
xor
daa
dec
mov
lcall
int
sbb
in
jle
lds
lods
iret
sub
jecxz
sub
inc
mov
dec
fmuls
arpl
mov
stos
jmp
insl
mov
fstps
dec
test
ret
sub
push
jmp
cmp
xchg
leave
jo
push
stos
ljmp
and
fnstenv
cltd
repnz
pop
pop
xor
imul
pop
lods
mov
mov
adc
add
movsl
movsl
adc
pop
cmp
inc
push
xchg
and
addl
cltd
jle
pop
jg
inc
jecxz
cmc
cmp
adcb
adc
mov
lods
or
dec
mov
shl
dec
enter
jb
adc
inc
inc
cmp
inc
ror
mov
pop
push
ja
les
bound
adc
jecxz
xor
idiv
xchg
gs
dec
add
ret
and
jns
aad
shl
jge
stc
ja
jbe
pop
or
mov
or
loope
std
jae
dec
mov
push
ret
cmpb
js
lcall
mov
in
out
call
dec
inc
dec
jo
mov
xchg
pop
test
loopne
bound
jb
arpl
lods
in
ret
lret
repz
push
lods
fcmovne
sbb
loopne
cmpl
hlt
or
xlat
or
lea
fdivrs
es
lret
push
sub
cli
repz
cmp
iret
mov
in
iret
bound
xchg
int
icebp
inc
pop
out
into
xor
jecxz
fcomi
xor
xchg
imul
pop
mov
mov
sub
mov
pop
lcall
adc
hlt
mov
add
dec
dec
aam
pop
mov
cmp
or
test
and
shlb
int3
xchg
inc
xchg
dec
lock
aas
xor
fsubl
adc
or
pusha
adc
jge
xor
insb
lahf
sub
mov
leave
xor
xor
add
fnstcw
lock
in
rcrl
dec
lret
inc
cli
lock
cmp
fldl
lret
rcrl
and
aas
jmp
int3
popa
inc
mov
lahf
adc
in
cmpsb
xor
lock
jo
stc
mov
add
insb
pusha
out
hlt
jmp
ret
add
jo
out
je
and
mov
pushf
int
pop
adc
lea
mov
aam
jmp
mov
aaa
fldenv
sahf
jecxz,pn
stos
inc
mov
icebp
fisubs
xor
inc
xor
mov
popa
inc
mov
sahf
xchg
xchg
fistpl
push
mov
mov
inc
mov
pop
cmp
in
pop
jle
xchg
or
in
xchg
jae
enter
jb
fisubrs
mov
sbb
arpl
dec
punpckhbw
sti
xorb
sub
repnz
shll
int
xchg
lret
popw
xor
sbb
jno
push
aaa
inc
jle
sbb
popa
in
pop
rol
sub
pushf
mov
ljmp
xchg
test
pushf
adc
subb
pop
cmp
sbb
pusha
out
out
cmpsl
cmp
and
das
ret
push
pop
rorb
lret
lret
movsl
mov
nop
xchg
or
xchg
xchg
arpl
jecxz
imul
xchg
out
or
push
test
mov
adc
mov
sahf
cs
dec
nop
pusha
popa
push
or
call
jno
mov
or
out
and
movsb
ret
mov
push
sbb
nop
aas
dec
cli
mov
je
out
test
ret
and
add
repz
push
dec
mov
lea
push
into
jno
arpl
jg
pop
cwtl
js
push
mov
push
inc
sbb
mov
inc
das
std
out
shl
sub
or
out
jbe
cmpsb
imul
sar
push
push
adc
int
mov
mov
xor
ficoml
test
xor
pop
or
aad
xorb
mov
mov
ljmp
lock
fwait
cwtl
mov
scas
sub
clc
inc
xor
daa
pop
test
orb
int
mov
add
in
mov
popa
push
sbb
mov
push
lods
push
jb
es
in
sbb
mov
add
stos
fisttps
push
inc
cmp
xor
inc
mov
xor
cli
or
jbe
cmpsb
inc
popf
sarb
xor
push
sahf
stos
pop
les
inc
jbe
shlb
inc
enter
cmpsb
je
shlb
outsb
popf
out
jae,pt
sarl
ds
mov
or
dec
outsl
or
ret
sub
and
mov
sub
hlt
push
mov
test
jecxz
in
dec
lods
jne
mov
push
int
add
xchg
into
jae
hlt
add
sahf
push
xchg
sbb
sbb
daa
mov
cmp
rol
lret
icebp
packsswb
dec
bnd
jp
jecxz
mov
test
sbb
mov
push
pop
pop
mov
xchg
in
out
loop
push
and
aas
scas
scas
add
movl
gs
mov
jge
or
out
mov
xor
cmp
add
adc
sbb
xchg
les
in
gs
test
jns
pop
mov
lret
mov
cwtl
jp
or
movsb
inc
jl
lods
inc
adc
repz
cmp
and
popf
call
fwait
mov
cs
in
rorb
lret
add
ss
pop
aas
dec
pop
and
or
inc
xor
and
popa
adc
sbb
enter
fidivrs
mov
sub
test
cwtl
stos
sub
dec
fsub
fcmovnbe
sub
xor
outsl
outsl
mov
add
out
roll
lret
push
xchg
in
xchg
pop
or
stc
push
call
or
cmp
ja
jp
out
stos
or
fcomi
xchg
fdivr
aam
data16
mov
mov
add
mov
xchg
mov
addr16
pop
inc
int3
lea
mov
mov
lahf
cli
nop
inc
stos
pop
jb
add
mov
aam
mov
outsb
cmp
arpl
ds
int
add
mov
cmpl
dec
in
and
inc
pop
imulb
lds
repnz
loop
xor
pop
aaa
cltd
hlt
filds
push
push
push
inc
lods
pop
and
mov
jno
in
mov
pop
dec
out
sub
mov
adc
xchg
pop
mov
je
fsqrt
cltd
jno
loope
movsl
cmp
inc
lahf
fdivr
lcall
enter
mov
lea
cld
scas
push
push
xor
jo
stos
or
jbe
aam
cmp
add
out
push
adc
inc
push
cmp
sarb
movsl
pop
xor
adc
xchg
std
or
ss
push
sbb
push
push
or
jp
insb
stos
cli
mov
jb
adc
dec
in
pushf
imul
push
movsb
out
push
fs
scas
dec
xchg
push
repz
mov
cmpsl
fdivr
outsb
ret
loope
xchg
stos
jae
fldcw
cmp
cmp
adc
sub
cmc
and
jno
sub
inc
mov
loopne
xlat
nop
push
cmc
lea
and
mov
out
push
int3
cld
push
add
jo
and
loop
pop
xor
ds
push
test
filds
inc
movb
add
call
dec
add
call
mov
outsl
pusha
mov
xchg
in
pop
stos
cmp
out
test
shlb
pop
int3
into
push
je
inc
sti
negl
inc
mov
jp
inc
stc
pop
rol
jmp
std
mov
int3
shrb
sahf
popa
ljmp
mov
rep
fucom
dec
adc
pop
cmc
cmp
js
hlt
mov
js
mov
lds
add
imulb
sbb
xor
or
ret
sub
cs
sbb
dec
xchg
pop
es
loop
imul
inc
std
add
mov
cmpsl
add
mov
jbe
pop
sub
xor
cmpsl
loop
dec
std
jb
adc
or
or
dec
push
add
xchg
mov
dec
pop
mov
xchg
sahf
lcall
push
xchg
fcmove
and
aam
adc
jmp
int
icebp
xchg
sahf
cltd
lret
in
pop
jnp
cld
add
or
push
addb
adc
clc
cmp
sbb
cltd
sub
or
ficoml
mov
dec
xchg
lret
mov
sub
lea
pushf
incl
mov
iret
xor
xor
mov
fadds
jg
adc
dec
test
push
test
bound
dec
jmp
mov
cmp
and
fcoms
cmp
jno
lret
cmp
ficompl
sahf
lret
sbb
outsb
mov
in
jg
pop
stos
out
in
pop
xchg
mov
xor
fistl
cmpsb
dec
out
xchg
mov
xor
dec
loop
cld
ljmp
or
pop
ret
xor
mov
xchg
push
sbb
add
fcompl
cmpsl
ret
in
test
add
repz
les
sbb
cltd
pop
scas
lcall
mov
dec
cli
jp
lret
aas
out
cltd
cmpsb
pop
jnp
sbb
push
sbb
jp
push
and
fdivl
xchg
cmp
imul
aam
push
pop
in
dec
push
out
dec
imul
mov
add
loopne
inc
pop
mov
jno
mov
mov
xor
jmp
dec
test
ss
das
mov
hlt
lcall
iret
negb
out
mov
stc
sbb
ror
mov
clc
add
add
pop
push
inc
cs
xchg
lds
out
pop
jmp
mov
aam
out
adc
sbb
ljmp
jnp
mov
rcll
pop
lods
aad
stc
js
or
daa
xor
lods
sbb
cltd
and
repnz
int
jecxz
sbb
insb
push
loop
int3
lods
mov
mov
or
mov
mov
scas
test
cld
sbb
subb
mov
jb
add
sti
mov
and
cltd
or
mov
lret
mov
pop
iret
pop
jbe
mov
sbb
jb
ss
mov
divb
icebp
mov
out
in
inc
ret
sub
call
cwtl
mov
pop
mov
jl
xorl
scas
and
pop
mov
sub
movl
add
scas
add
insl
cmp
or
xchg
mov
into
jb
pop
mov
or
adc
mov
in
movsb
outsl
clc
or
lods
lahf
repnz
add
int3
test
mov
push
stos
adc
testl
stos
jbe
mov
lods
jns
sub
mov
xchg
mov
inc
jo
add
dec
out
stos
xchg
fwait
loope
inc
nop
xor
lods
pop
repnz
or
ds
scas
ret
jle
xchg
testb
js
dec
push
pushf
mov
fs
add
inc
xor
aas
adc
pop
shrl
sub
xor
dec
pusha
ret
or
repnz
cltd
orb
out
sbb
cmp
out
cmp
jecxz
jp
mov
or
push
call
lahf
and
shlb
mov
dec
jl
jne
jbe
sti
xor
push
and
dec
lret
xchg
inc
adc
push
pop
idiv
inc
xchg
sbbl
les
dec
js
sbbl
mov
movsb
or
popa
repnz
ljmp
outsl
add
loopne
xchg
mov
dec
lods
pushf
test
hlt
mov
pop
sub
leave
mov
stos
nop
es
dec
inc
push
xchg
lods
int3
jp
push
ljmp
mov
dec
or
mov
fdiv
das
cmp
dec
sub
sub
dec
push
mov
or
xlat
xchg
in
into
rol
sbb
flds
push
pop
pushf
add
imul
push
inc
gs
rclb
mov
mov
pusha
mull
and
cmp
cmp
mov
ret
xor
mov
cmp
out
fs
mov
bound
add
sbb
push
and
adc
cmp
ja
fsubrs
jne
shl
or
lahf
aas
inc
sub
imul
iret
xchg
fucomp
ss
sahf
mov
add
xchg
notb
push
adc
jmp
aad
cld
jp
cwtl
loopne
shll
and
subb
pop
subb
ret
push
stc
idivl
adc
out
aad
je
rorb
dec
stos
scas
sub
stos
add
pop
out
inc
mov
jp
jns
ja
test
or
cmpsb
in
mov
pusha
out
hlt
addl
scas
xor
mov
sub
push
into
or
add
sbb
mov
dec
mov
adc
lea
adc
xor
push
cli
es
push
mov
xor
or
add
mov
shlb
scas
sub
jecxz
xor
mov
sbb
push
push
push
insl
pop
cmpsb
test
pop
and
lods
dec
imul
ret
cmovo
mov
lds
mov
sbb
shrl
jmp
popf
lret
popa
cmp
xchg
pop
inc
and
mov
and
shll
sbb
pop
mov
adc
fst
push
adc
addb
xor
adc
testl
mov
fwait
aas
cmp
sbb
xor
ss
or
testl
leave
jmp
ret
push
out
or
mov
out
xor
mov
sub
xor
loop
lret
lods
cmp
andb
shl
add
cmp
jecxz
popf
mov
adc
lods
aam
pop
pop
scas
and
pushf
pop
movsb
mov
push
mov
vpmaxub
or
fwait
movsb
shlb
inc
push
mov
jb
lods
jbe
inc
sub
roll
jp
ljmp
mov
and
hlt
add
sub
push
imul
ret
fmuls
lea
imul
cltd
iret
jae
and
add
repnz
pop
sub
mov
push
sub
cwtl
cmp
pop
into
repnz
jbe
mov
xchg
sbb
jmp
add
cld
or
clc
stc
xor
pop
inc
push
call
mov
mov
into
or
or
mov
in
jo
sar
cmp
adc
sub
cmp
dec
jo
xor
cmp
push
adc
hlt
xor
xchg
lea
pop
xchg
pop
js
dec
popa
aam
xor
sti
jmp
mov
push
ljmp
and
out
and
lcall
mov
sbb
test
popa
cmp
jg
fnsave
xor
mov
pop
sahf
xor
mov
xchg
adc
xor
daa
cli
daa
inc
inc
dec
shrl
xchg
stos
loope
dec
loop
sbb
shll
dec
ss
xchg
push
add
jmp
xchg
adc
clc
mov
cwtl
sbb
mov
and
pushf
frstor
mov
out
in
stos
mov
ficomps
test
outsl
pop
mov
cmp
or
xor
jns
pop
repnz
mov
insl
xor
mov
cmp
xchg
arpl
sub
xchg
cltd
hlt
fidivrs
jle
dec
icebp
in
jne
fsts
push
inc
mov
ret
es
xchg
xor
push
scas
rol
jl
ret
mov
es
lcall
mov
iret
inc
test
aad
adc
jmp
lds
in
mov
mov
fucomi
in
and
out
stos
sub
or
imul
js
jne
cmp
inc
std
bound
jno
out
dec
test
dec
push
jmp
jae
sub
ja
movsl
leave
inc
jns
pop
mov
jl
lock
mov
call
lcall
cmp
cwtl
lret
cmp
jecxz
xchg
adc
jb
adc
push
push
mov
mov
ret
imul
mov
das
repz
icebp
outsl
mov
mov
sbb
sbb
cmc
call
sub
and
jmp
jbe
vsqrtss
jae
jae
sbb
repnz
add
dec
add
cwtl
mov
inc
jge
loope
mov
mull
mov
loope
mov
out
pop
mov
and
jne
mov
jns
or
inc
cltd
mov
pop
sahf
popf
es
pop
mov
dec
inc
cli
nop
cmp
cltd
mov
mov
push
add
xchg
and
jecxz
sbb
cld
cmc
adcb
push
add
lods
enter
add
int
jnp
lret
mov
rcll
shrb
mov
pusha
and
or
mov
fists
push
inc
test
xlat
dec
push
xchg
add
pop
das
mov
mov
fsts
popf
mov
loop
xchg
lcall
test
lods
sub
out
xor
gs
in
ljmp
mov
jne
jno
out
movb
sbb
fistps
inc
lahf
test
mov
sbb
pop
mov
jge
lods
daa
shr
lods
adc
div
xchg
jmp
cmp
bnd
mov
adcl
out
sbb
aas
rorl
mov
sbb
sub
mov
cmp
sub
jecxz
sbb
enter
popa
fcompl
rorl
jae
arpl
jp
cli
xor
mov
data16
div
add
cltd
add
clc
testb
bound
popl
cli
repnz
jnp
stc
loopne
push
mov
cmpsl
push
sub
push
aas
imul
hlt
bndstx
fisttpl
outsl
cmpl
and
test
mov
mov
aas
imul
xchg
imul
bound
inc
push
insb
adc
pop
or
lea
dec
movsb
inc
dec
mov
xlat
out
shrb
sub
sub
sub
or
andb
sub
js
out
mov
in
xchg
mov
jb
pusha
pop
mov
pop
adc
or
adcb
test
mov
and
sbb
add
out
cmpsl
jmp
xor
dec
movsb
add
inc
pop
in
je
mov
cld
and
jno
lahf
inc
sub
pop
repz
and
cmpsb
ret
mov
adc
pop
addb
in
adc
jne
dec
inc
push
cmc
dec
fmuls
fdivr
mov
xor
inc
jecxz
adc
test
das
sbb
imul
xchg
push
shrb
shl
pushf
dec
mov
xchg
popf
call
out
mov
push
fisubrs
sbb
flds
xchg
inc
sub
pop
mov
insl
cmp
stos
testb
cmpsb
cwtl
and
jnp
sub
cmp
test
stos
adc
pop
out
outsb
push
and
pop
jo
cmp
neg
sub
mov
and
cli
in
and
or
dec
mov
jge
xchg
gs
dec
mov
ss
mov
int
jl
roll
int3
push
adc
int
test
imul
in
out
mov
shlb
mov
mov
or
cmp
mov
je
and
sarl
adc
add
nop
mov
mov
mov
add
loopne
pop
mov
je
xor
insl
out
push
nop
mov
push
or
test
scas
and
dec
ret
test
enter
mov
outsb
ja
mov
and
lock
loope
mov
cli
addr16
sarb
leave
leave
adc
pop
jb
ja
test
mov
imul
ret
out
loopne
push
sahf
pop
jge
dec
adc
int
cld
arpl
popf
insl
xchg
mov
stc
mov
push
adc
mov
xchg
icebp
push
repz
cmp
pop
mov
stc
add
mov
in
in
pop
add
inc
rorb
scas
shl
xor
jl
movsl
jge
xor
adc
mov
lods
xor
addl
push
cmp
pop
into
push
jbe
sbb
adc
scas
incb
jo
cmp
stos
bound
imul
fimull
push
stc
adc
lcall
xchg
fcompl
repnz
jp
mov
mov
sbb
out
ja
mov
fdivs
pop
lock
int
mov
fadds
mov
fnsave
rclb
daa
push
fmuls
dec
pop
or
xchg
clc
out
mov
repz
arpl
push
jp
mov
sbb
es
fsubrl
mov
test
sahf
into
xchg
push
ja
dec
popa
sbb
fwait
aam
insl
in
push
pop
das
mov
push
aaa
sbb
mov
fcmovnbe
push
dec
adc
fdivl
pop
shrl
mov
jmp
ret
popa
jg
jp
dec
and
fcoml
xchg
movl
sub
xchg
sub
ret
mov
cmp
shrl
mov
adc
mov
and
lahf
push
sub
sbb
arpl
enter
xor
cmpsl
lahf
call
xor
lcall
push
cmp
or
sub
pop
cmp
lcall
into
outsb
jmp
filds
jp
lret
loope
jp
or
pcmpgtw
adc
lahf
or
nop
mov
xchg
sbb
and
mov
call
fisubrs
xor
dec
inc
dec
jmp
jl
lahf
lret
and
inc
fsts
out
add
and
dec
xchg
jl
jl
ds
adc
imul
mov
enter
inc
lcall
xor
lods
mov
lock
bound
ret
jge
cmp
lock
sarl
pop
mov
jl
ss
xor
add
or
scas
cld
adc
pop
push
fisttps
stos
test
mov
aad
subl
cltd
faddl
sub
sub
push
jle
mov
mov
rclb
xor
rcrl
pop
in
push
in
daa
jle
and
adc
push
cmp
shlb
mov
lret
xchg
inc
push
pop
xchg
jno
push
push
push
pop
addr16
add
push
cmp
inc
lahf
clc
and
fnsave
jge
into
push
not
push
bnd
insl
xchg
cwtl
jb
mov
clc
aaa
int
or
mov
and
sbb
xor
mov
or
add
jg
lret
xor
aam
inc
lret
and
fwait
sti
xchg
xchg
arpl
pop
fists
sbb
hlt
test
aad
adc
adc
sub
out
mov
jb
nop
aad
inc
fnstsw
insl
mov
aam
ret
cwtl
scas
sbb
loop
insl
das
adc
bound
ret
dec
mov
lods
xchg
aam
scas
outsl
sbb
loope
push
fisttps
mov
hlt
and
rcll
adc
ja
xchg
dec
cmp
in
jo
iret
fmul
repz
xchg
adc
ret
jmp
in
ds
mov
cmc
xchg
mov
add
jbe
mov
inc
pop
fisubrl
pop
mov
add
mov
lret
and
xchg
idivl
ficoml
test
cld
and
and
repnz
or
jle
arpl
sub
xor
test
stc
xor
xor
pop
lcall
pop
shrl
inc
mov
imul
lds
mov
ror
add
mov
imul
sti
and
lea
mov
add
pop
cli
xchg
add
loopne
xchg
sbb
ss
and
push
adc
pop
les
jo
push
adc
push
daa
vunpcklps
das
dec
sbb
xor
xchg
sub
jg
popf
sub
xchg
xor
lock
and
dec
jne
mov
les
fldcw
mov
mov
leave
mov
mov
push
aad
ja
sbb
mov
out
xchg
push
jne
cmpsb
orb
and
iret
jbe
jnp
or
pop
jno
scas
inc
rol
sbb
and
outsl
xor
aas
test
jb
mov
push
push
sahf
jne
mov
daa
sarb
mov
mov
mov
stos
mov
cltd
sub
jb
jo
inc
out
cld
std
inc
mov
push
lret
pop
xorl
mov
jns
hlt
mov
outsl
inc
cmp
jecxz
fistps
fidivrl
push
fbstp
and
cmp
adc
cmp
js
sbb
dec
cmpsb
loop
pop
out
cmpsl
cltd
lret
test
lret
test
sahf
mov
nop
fistl
jge
mov
out
pop
fdivrs
jbe
call
lds
pop
outsl
inc
adc
imul
dec
lahf
ss
clc
dec
out
fsub
mov
mov
jb
sub
mov
sub
inc
inc
cwtl
and
pop
loopne
imul
mov
dec
add
adc
mov
in
push
inc
jecxz
mov
mov
test
aas
repz
hlt
push
insb
pop
into
addl
adc
xchg
test
push
xlat
es
popa
cmovp
and
pop
or
jns
jne
jmp
add
icebp
xor
sbb
or
cmp
insl
and
int
add
arpl
popa
stc
adc
cli
ljmp
sbb
sbb
insl
cli
gs
pop
dec
bnd
mov
stos
test
jns
daa
or
bound
dec
mov
bswap
mov
call
jmp
push
lods
loopne
arpl
sub
les
insl
sahf
es
imul
push
sub
or
dec
sub
sahf
lret
xor
push
inc
cmp
sub
add
mov
mov
mov
cmp
aaa
xor
xchg
mov
or
outsl
adc
and
leave
sbb
pop
push
shl
xor
daa
icebp
sbb
std
sahf
pushf
cmc
in
ljmp
push
jl
jg
gs
in
cli
js
jne
pop
sti
repnz
lea
mov
xchg
arpl
das
inc
adc
repz
push
jecxz
in
rcrb
es
cltd
inc
frstor
imul
out
mov
push
push
adc
cmp
xchg
insb
inc
push
mov
xchg
add
lods
fstpt
mov
push
ret
cmpsl
xchg
scas
cmpl
pop
and
addr16
call
mov
shll
cmpl
mov
pop
mov
jmp
aad
or
shlb
cmp
sbb
and
dec
pop
inc
lods
ja
and
imulb
fildl
pop
push
push
inc
sti
dec
jae
push
scas
into
sub
and
ja
test
sub
shll
int3
lods
push
dec
hlt
daa
sub
xchg
or
fs
faddl
cmpsl
lods
fidivrl
repz
and
call
xor
lcall
sub
popa
daa
pop
jno
repz
push
pop
mov
adc
jle
enter
jg
add
pop
negl
cwtl
jecxz
mov
push
mov
paddusw
int
mov
popa
push
push
or
adc
fnstenv
push
adc
sub
inc
jbe
out
jmp
ret
mov
xor
jl
xor
push
in
jb
and
push
ret
push
movsb
xchg
mov
adc
ret
call
xchg
mov
dec
aam
addr16
mov
mov
je
mov
cmpsb
std
rorb
inc
divb
idivb
cs
mov
adc
fsts
mov
pop
inc
fisttps
out
imul
xor
insl
enter
in
mov
lods
je
jo
cmp
sbb
pop
dec
push
sub
sbb
ja
dec
sbb
icebp
incl
shrl
lahf
ret
mov
jl
cmp
and
and
inc
hlt
fcoml
cmp
sahf
int3
rolb
sub
xchg
add
pop
xchg
js
test
cwtl
insl
fisttpl
stos
out
stos
adcl
xor
mov
xchg
or
cmp
push
sub
jecxz
jnp
loop
cld
sub
jo,pn
jg
mov
lret
shlb
pop
cmp
iret
testb
xorl
mov
and
lods
sbb
into
std
cmpsl
jne
inc
mov
rcr
call
int
mov
push
sub
mov
fdivrs
mov
stos
jecxz
fisttpll
xor
push
scas
lods
fcomip
int
es
mov
sbb
fsts
test
cwtl
sub
shrl
fdivrs
add
adc
cmp
jmp
or
das
adc
xor
jnp,pn
fisubrs
pop
jge
int3
inc
xchg
sub
mov
cmp
pop
into
mov
xchg
cs
push
ret
adc
stos
jne
mov
mov
scas
mov
out
mov
push
jmp
enter
cmp
repnz
adc
aas
roll
fistpl
iret
sysexit
mov
xor
rolb
xchg
mov
lock
jns
add
and
mov
lods
and
mov
lods
mov
add
adc
add
imul
mov
popa
gs
stos
push
outsl
int3
jns
add
cmpl
stos
stos
add
xchg
adc
aam
jae
test
out
inc
cli
sub
pushf
pusha
jne
out
das
test
push
jne
rorb
cltd
push
enter
sub
pop
mov
dec
and
pop
lahf
cld
je
jnp
or
jb
adc
repz
repz
repnz
xchg
mov
sbb
dec
loop
adc
cmpsl
shr
cmp
push
aaa
jg
ja
push
enter
not
push
push
or
jge
xchg
cmp
incb
cmp
jnp
sbb
mov
xor
lds
mov
test
insb
les
push
dec
iret
sbb
sbb
loope
sub
iret
loope
aas
mov
cmp
or
fdivrs
inc
mov
fimull
rcrb
out
into
scas
arpl
push
pop
out
stos
and
cmp
adc
pop
cmpsb
les
jmp
andl
gs
mov
xchg
xchg
pushf
aad
sub
divb
je
lahf
mov
popf
clc
jmp
push
addr16
dec
outsl
xchg
test
push
xchg
and
sbb
inc
mov
xchg
ljmp
adc
test
std
sbb
in
adcl
cmc
mov
in
inc
mov
sbb
xchg
ds
stc
aam
out
ljmp
in
pop
adc
mov
test
jg
lret
mov
mov
leave
mov
jno
push
mov
test
addr16
sub
xchg
repnz
lock
add
sub
pop
cmp
inc
int
idivl
call
cmp
inc
jo
jo
faddp
cmpsl
rorl
mov
mov
adc
fst
lods
pop
rcll
jmp
pop
fs
rcr
stos
ret
test
push
lock
frstor
arpl
mov
ds
outsb
das
andb
push
and
sti
push
ds
mov
addr16
js
lods
dec
hlt
adcb
push
xlat
pushf
add
ret
out
dec
lea
aam
pop
enter
repz
xchg
aas
popf
enter
lods
pop
cmp
mov
and
subb
mov
xor
inc
xor
fsubrs
bound
shrb
mov
xchg
dec
xchg
cmpsl
inc
xchg
sbb
jo
repz
imul
scas
rol
repnz
iret
cmp
adc
movd
or
cmpsl
mov
test
dec
imul
mov
lods
jns
mov
into
pop
pushf
fcmovb
dec
hlt
adc
push
inc
std
mov
sub
jecxz
repz
les
mov
or
icebp
loopne,pn
in
cwtl
int
outsb
sbb
pop
xchg
xor
cwtl
scas
in
stos
daa
push
pop
jg
sbb
scas
insl
jnp
sub
lcall
xchg
psubsw
dec
push
or
xor
push
test
inc
lcall
clc
push
jae
mov
lahf
mov
pop
test
cmpb
in
push
mov
push
lock
movsl
sub
sahf
cmp
sbb
scas
mov
jmp
iret
mov
dec
adc
fildl
xchg
fisttpll
xchg
insb
mov
out
lcall
adc
sub
sub
add
scas
iret
push
xchg
sbb
xchg
and
pop
jne
and
mov
sub
lds
int
rcll
mov
ffreep
and
add
cmp
outsl
xor
pop
dec
push
lods
mov
xor
sahf
cli
mov
sbb
faddl
cmpsl
jb
leave
out
popa
sub
xchg
cmp
rol
in
test
ja
aad
in
dec
ja
fcmovnb
ret
cltd
jg
dec
inc
dec
push
cld
test
mov
inc
jno
stos
sbb
add
lods
nop
adc
filds
pop
mov
pop
lret
sbb
movsb
dec
dec
enter
jge
add
or
in
mov
xchg
dec
ret
lret
lcall
adcb
jg
xchg
xchg
ja
xor
lods
divl
xchg
and
cltd
jb
hlt
or
add
aam
jo
fdivrl
sub
and
jl
pop
dec
je
push
mov
idivl
mov
int
and
xchg
push
jp
push
mov
cld
mov
cmpsb
imulb
sub
jnp
mov
je
test
and
insl
cmpsb
and
add
popf
sub
repnz
sbbl
jmp
pop
adc
push
jnp
cmpb
xchg
pushf
out
pop
push
pop
lret
loop
jp
clc
jge
aam
sub
lods
inc
stos
cmp
aas
mov
fs
inc
inc
insb
inc
jle
push
movsl
in
fwait
cmp
mov
jo
mov
xlat
push
mov
arpl
push
jmpw
cmp
push
ret
rcll
add
icebp
mov
fwait
pop
mov
or
sub
push
push
dec
insb
scas
dec
sub
repz
aam
ror
adc
adc
aam
addl
or
sbb
cmp
push
call
addb
in
pop
iret
fwait
inc
fildll
mov
or
fsubrl
sti
jge
fnstsw
xchg
sbb
jne
or
jp
ret
stc
jb
jge
sub
loopne
push
ss
pop
pop
fildl
jle
and
lock
fwait
pop
mov
xor
movsl
sbb
rcrb
adc
ja
rol
jl
ret
jbe
xor
mov
clc
sbb
dec
cmp
imul
popf
mov
xchg
jo
fiadds
das
mov
into
out
jo
dec
pop
add
add
mov
cltd
fcompl
shl
add
mov
cltd
daa
ret
push
push
or
sbb
jge
in
push
shl
pop
adc
fs
mov
repnz
cmp
ds
pusha
test
cmpsl
cmp
out
and
js
mov
mov
mov
mov
add
and
mov
cmp
pop
dec
jp
or
xchg
sahf
jp
movd
push
sti
addl
sub
sub
adc
pop
and
lahf
add
fucomip
pop
inc
sarl
inc
dec
call
cmc
stos
mov
jmp
ljmp
mov
push
insb
dec
ficoml
mov
cmp
xchg
and
dec
ret
adc
imul
adc
loopne
test
inc
fucom
cmpsb
mov
jl
mov
fsubrl
dec
sar
or
pop
xor
cmp
mov
lahf
ret
es
mov
fdivl
and
je
ret
lcall
out
mov
leave
repnz
add
cmc
fcmovb
mov
mull
xor
dec
mov
pop
mov
lea
mov
shll
xor
xchg
lret
mov
into
popf
mov
xorl
test
mov
ja
lcall
and
push
add
fdivrp
out
jne
sub
jecxz
sti
pop
or
ror
and
test
mov
fildll
mov
add
cmpsb
xlat
pop
xchg
fwait
add
add
mov
stos
insb
lods
lret
xchg
enter
fdivl
mov
jns
cli
int
add
push
addr16
cmp
pop
fbld
pop
push
lea
sub
mov
or
lea
test
ja
lea
shrb
push
fldl
xor
xchg
repz
cmp
ret
jge
fcoms
inc
lret
loope
lcall
hlt
fiaddl
in
mov
pop
inc
xor
inc
xor
notl
nop
push
dec
pop
mov
jno
hlt
scas
add
popf
dec
mov
aam
imul
inc
sub
jle
popa
lods
rorb
mov
xchg
mov
mov
xor
sub
xlat
fdivp
addr16
sar
inc
inc
repz
mov
inc
xor
sub
push
jmp
movsb
or
adc
xor
pop
fsub
or
enter
repz
ljmp
enter
inc
cmp
pop
test
movsb
mov
and
fld
jmp
lret
daa
adc
xor
xor
sahf
ficoms
mov
or
daa
sub
mov
push
lea
xchg
mov
psubb
fisttpll
ret
sub
nop
movsl
pop
popf
pop
dec
inc
add
jl
call
xchg
test
mov
mov
mov
cld
lret
lea
ss
lcall
cmpl
fbstp
sbb
idivb
sub
and
mov
ret
cmpsb
popa
jecxz
xchg
shl
inc
adc
cmp
cmp
sub
xorl
aam
sub
mov
or
lcall
xor
or
jnp
loop
out
lock
fs
xchg
pop
inc
fwait
rol
nop
clc
sbb
mov
dec
mov
adc
mov
or
ds
in
sti
add
push
pop
jge
arpl
mov
loopne
sahf
add
insl
mov
inc
push
lock
stos
fsts
mov
push
pushf
mov
out
fwait
push
out
dec
mov
mov
notb
jne
rcrl
in
testl
lret
lods
jae
mov
pop
inc
or
arpl
stc
or
or
pop
insl
cltd
cmp
sbb
int3
ljmp
or
pop
pop
insl
sbb
lock
int
into
dec
dec
sub
jo
lods
jecxz
adc
incl
mov
ret
data16
jne
pop
xorl
pushl
std
movsl
mov
and
fldl
jecxz
jge
pop
sbb
call
std
push
test
out
mov
sub
imul
push
jmp
xchg
repz
ds
sbb
xchg
or
or
repz
xchg
cmpsl
shrb
xchg
inc
insb
mov
sarb
sbb
mov
mov
and
sbbb
mov
lock
fstpt
or
out
mov
arpl
cmp
mov
and
sbb
rcr
cmpsl
jmp
sahf
sub
jecxz
out
movsb
lds
jne
pop
mov
insb
pusha
mov
and
xchg
divb
in
push
cmc
test
cmpsl
mov
jno
cmp
lahf
and
notb
cmpsb
loopne
inc
lods
bound
xchg
fs
mov
dec
mov
adc
popa
repnz
add
jb
xchg
int3
insb
jge
cmpsb
mul
or
add
mov
pop
cmc
in
stc
aaa
mov
orl
out
adc
pop
xchg
add
mov
sbb
dec
fs
stc
sti
sarb
push
pop
xchg
iret
push
xor
dec
or
dec
das
and
pusha
pusha
mov
add
aad
insb
pusha
mov
sti
or
divl
mov
add
daa
mov
loope
ds
and
loope
pop
inc
fdivrl
mov
sub
or
cmp
push
jo
mov
in
rcrl
sbb
xchg
dec
jns
mov
push
pop
sbb
scas
cmp
mov
out
adc
test
cmp
add
push
and
ret
and
pop
push
call
es
test
mov
sub
popa
popf
lods
loope
outsl
loopne
or
lea
mov
call
sub
mov
and
js
sub
in
in
xor
push
jns
mov
pop
jo
cmpsl
addr16
jbe
pop
scas
das
fwait
sub
or
ss
in
pusha
mov
out
mov
loope
fcomip
inc
bound
imul
mov
mov
dec
and
test
dec
ja
push
jl
in
mov
mov
stos
push
stc
sub
push
in
hlt
and
lret
hlt
and
dec
cmpsl
xor
or
test
fs
in
repz
scas
pop
adc
inc
shrl
cmp
into
gs
cmpsl
ss
mov
jo
or
fstl
imull
outsl
xlat
cmp
into
xchg
call
icebp
aaa
sub
push
mov
jmp
dec
xchg
inc
lds
test
aaa
jge
mov
xor
mov
inc
lea
lcall
lea
push
xchg
pop
push
leave
inc
fmuls
sbb
ret
jge
loop
adc
aad
fwait
mov
xchg
mov
jno
std
dec
popa
bound
inc
outsl
xchg
daa
repz
es
arpl
iret
dec
sti
popf
add
movsl
loope
sarl
push
andb
in
testl
pop
scas
and
lret
repnz
lahf
push
in
fsubs
or
cmp
xchg
xor
inc
fs
sub
or
lods
dec
add
dec
imul
xor
hlt
rsm
je
mov
popa
and
mov
cmp
xchg
and
jae
repz
iret
jecxz
cmp
push
mov
xorb
mov
and
push
divl
mov
iret
out
lods
sbb
loop
das
outsl
and
adcl
xor
icebp
xchg
push
in
jmp
jle
mov
rcll
lret
daa
mov
push
add
xchg
add
pop
and
pushf
pop
pusha
ss
sahf
xchg
sarb
aas
lock
test
jnp
loopne
pop
shrb
dec
mov
aas
mov
sbb
and
dec
mov
pop
scas
mov
jecxz
out
int3
and
xorl
mov
fdivrs
jl
add
sbb
sahf
nop
xchg
push
rolb
sub
and
adc
lods
imul
and
jl
fyl2xp1
aam
lea
cltd
aad
pop
inc
mov
sub
push
lea
push
jle
pop
mov
or
adcl
and
imul
repz
out
out
rolb
xchg
into
ret
xor
adc
test
adc
leave
rorb
jecxz
dec
jge
test
mov
xchg
stos
xor
mov
andl
mov
shll
mov
jae
dec
mov
pushf
xchg
cmp
inc
jg
mov
and
inc
test
stos
cmc
movsb
repnz
std
push
stc
insb
and
movsl
adc
mov
dec
jno
mov
pop
rcl
mov
jno
adc
test
dec
push
mov
lret
ds
in
inc
cmp
aad
sbb
push
jge
mov
or
jmp
add
ja
test
mov
aam
or
adc
and
sarl
sbb
xchg
mov
fwait
data16
loopne,pn
packssdw
sbb
inc
push
mov
jmp
lods
enter
sti
in
mov
aad
ja
aas
ss
pop
popf
or
adc
and
nop
lods
dec
es
push
inc
dec
imul
xchg
cmp
mov
xor
or
fs
fs
sub
xchg
stos
xorl
in
inc
rcrl
test
mov
push
mov
or
mov
jb
aam
jne
dec
sbb
in
xchg
subl
scas
in
xor
xor
gs
fmuls
lret
or
jl
and
cmp
xor
adc
adc
in
sbb
sbb
jle
push
stc
movsl
orl
and
pop
xor
mul
shlb
or
add
push
loopne
adc
jnp
mov
das
popa
shl
popf
pushf
adc
sub
out
stc
cmp
jge
ljmp
aad
pop
xchg
push
mov
in
in
xchg
sbb
adc
shl
add
inc
pop
jb
xchg
pop
ffreep
pop
rcll
adc
sub
mull
push
das
jg
cld
cmp
cli
sub
outsl
sbb
cmp
mov
outsb
lea
popf
nop
xchg
outsl
sbb
inc
enter
mov
xchg
daa
mov
movsl
and
jl
xchg
das
add
mov
ss
dec
adc
popa
pushf
daa
hlt
pop
repz
cmp
imul
jnp
inc
jmp
rdtsc
punpcklwd
add
adc
dec
lret
add
push
outsb
in
rorl
push
shl
mov
insl
and
push
inc
mov
repnz
test
mov
shll
jne
fwait
dec
repz
fs
xlat
lret
mov
pop
mov
orl
or
jl
mov
xor
push
xchg
mov
push
cld
sbb
sti
aaa
add
xor
ret
jecxz
adc
je
mov
dec
push
repnz
movsb
popf
xchg
cmp
push
mov
outsb
fimuls
out
aam
xor
and
mov
mul
andl
mov
test
loop
pop
lahf
mov
repz
outsl
mov
add
jb
push
cmc
cld
dec
jmp
xchg
adc
sbb
jmp
icebp
pusha
stos
add
loope
sub
test
or
cld
jmp
push
or
or
dec
inc
xor
mov
cmp
jnp
push
adc
fmuls
and
gs
cmpsl
jne
pop
aam
mov
pusha
cmp
xor
xchg
mov
addr16
setl
push
out
stos
pop
je
mov
jo
and
cmp
mov
mov
scas
adc
test
mov
mov
shlb
inc
out
dec
sbb
enter
push
and
je
xchg
mov
jle
lahf
clc
adc
jns
ss
xchg
fstpt
mov
stc
or
sahf
push
mov
cmpsb
and
add
pop
outsl
jecxz
mov
cmpsl
sahf
push
and
fsubs
insl
jecxz
fsubs
stos
jnp
sbb
xchg
fisttps
push
loop
or
pop
pop
scas
je
imul
inc
dec
sahf
xchg
test
es
fiadds
cmc
fimuls
movsl
std
inc
aad
mov
fwait
arpl
in
and
xchg
pop
pop
loope
sub
ret
xchg
cmpsw
mov
shr
hlt
test
nop
and
cmpsb
std
ja
inc
lock
jg
push
sbb
test
pop
push
ljmp
inc
mov
and
ds
dec
sbb
outsb
lret
or
loopne
jo
fnsave
inc
mov
arpl
fcomps
addl
ds
jge
jle
push
push
xchg
inc
ficomps
mov
cmp
scas
lea
icebp
sbb
mov
shll
push
or
das
push
loop
and
fwait
push
test
fcmovbe
outsb
jbe
and
dec
in
sbb
sbb
test
pop
nop
xchg
mov
jecxz
xor
out
sarl
cmp
cli
aad
or
pop
xchg
mov
pop
xchg
fidivl
stos
out
adc
or
mov
add
inc
dec
sub
sbb
shlb
shll
jmp
pop
aam
aas
jge
in
pop
int3
dec
add
cli
mov
in
ljmp
push
enter
ficompl
xor
xor
jns
jnp
adc
dec
jae
jl
dec
subl
mov
or
in
xchg
aas
pop
jmp
loope,pn
add
dec
dec
xlat
mov
push
xor
mov
or
sbb
sarb
call
and
lea
xchg
dec
lret
mov
out
and
push
aas
sbb
stos
dec
sub
dec
adc
hlt
sti
jle
shlb
in
negb
leave
fiaddl
push
ljmp
inc
or
fucom
imul
mov
sbb
adc
mov
ja
data16
dec
dec
xchg
insb
cmp
sbb
shrb
sbb
xchg
and
mov
je
sbb
push
dec
inc
pusha
js
cli
pushf
jns
cmpsl
bnd
and
add
jns
mov
push
xchg
xchg
cld
mov
dec
mov
lahf
fs
imul
lret
xchg
imul
outsb
xlat
bound
lret
jg
out
push
jne
in
add
pop
xchg
inc
stos
mov
insl
mov
pop
ffreep
lcall
iret
mov
mov
daa
sub
fidivs
jb
sbb
jns
inc
ljmp
insl
sub
jmp
arpl
mov
dec
std
jb
jmp
icebp
out
movsb
jae
sub
out
test
fwait
sbb
bound
iret
stos
cmp
fisttpll
je
pop
mov
and
pop
mov
push
or
notl
push
mov
pop
in
adc
enter
push
push
repnz
pop
xchg
mov
and
sub
lahf
or
ljmp
nop
xchg
in
outsb
adc
sbb
mov
insb
out
sub
out
sbb
xor
push
cmp
push
int
in
pop
arpl
lods
mov
inc
negl
pop
add
and
jbe
add
movsb
movsb
dec
stc
jecxz
cwtl
fisttps
stos
pop
add
push
mov
bound
loopne
out
mov
int3
mov
mov
lret
inc
xor
push
inc
push
mov
inc
bound
int
mov
mov
and
add
pop
pushf
sub
inc
xor
jle
dec
adc
cwtl
mov
mov
stos
roll
inc
cmp
sub
cltd
jp,pn
mov
mov
mov
xor
stos
mov
jbe
ret
nop
nop
int
mov
and
pop
push
xchg
movsb
test
jno
xchg
mov
mov
or
rolb
in
mov
cwtl
push
fisttps
fistl
dec
leave
xchg
inc
data16
pop
mov
lods
pop
xor
aas
and
insl
fcompl
and
xchg
cmp
jo
mov
frstpm(287
std
mov
jno
imul
fs
cs
sub
mov
adc
xchg
lret
pop
mov
stc
fdivrs
int3
jno
sti
inc
mov
mov
sub
add
jmp
pop
int3
in
ficomps
je
add
inc
frstor
add
xor
xor
mov
push
lret
mov
mov
lea
int
inc
outsl
pop
mov
loope
es
fimuls
xorl
lahf
lea
xlat
addr16
bound
lods
mov
pop
lea
xchg
pop
movsl
sbb
out
cwtl
insb
or
inc
shrb
fistpl
adc
lods
mov
add
mov
sahf
sub
add
jp
fiadds
cmp
iret
or
mov
push
adc
and
cmp
out
jbe
and
adc
mov
in
pop
faddl
aaa
mov
and
and
fwait
pop
inc
call
mov
xor
jns
jo
sbb
push
inc
mov
xor
outsb
inc
add
ja
out
icebp
push
repnz
test
push
mov
sar
fsincos
jnp
cmp
enter
nop
dec
jae
push
mov
and
pop
sbb
out
cld
movsl
pop
xchg
jo
inc
mov
test
xchg
rolb
sub
addb
mov
psubusw
icebp
daa
js
movsl
lock
mov
lods
icebp
mov
pop
add
xchg
add
cmc
inc
fmull
pop
jns
pop
rolb
movsl
inc
cmc
ret
mov
mov
lcall
mov
hlt
dec
in
adc
repnz
ficompl
stos
rcrl
mov
cmpsl
rcll
loope
jbe
fiadds
std
jns
sub
dec
insl
dec
or
inc
roll
leave
insl
fisubs
shlb
jb
mov
es
cld
call
xor
cmp
pop
out
test
loop
jns
aam
movsb
arpl
xlat
fs
jmp
lock
dec
jne
cltd
ss
mov
out
push
out
jo
gs
inc
push
shr
push
xor
cmpsb
imul
insl
lahf
stos
sub
ret
mov
scas
adc
les
repz
jo
fs
lea
sti
or
lahf
or
sbb
stos
int3
dec
sahf
pop
sbb
cmpsb
sqrtps
cmp
mov
lods
jbe
insl
ret
sub
jno
mov
pminsw
add
popa
iret
push
in
lods
int3
dec
sub
test
lds
mov
jg
int
jg
cmp
xchg
xchg
xchg
fcomps
sub
idivl
test
add
mov
adcl
add
cwtl
mov
std
add
push
mov
sub
inc
fsub
push
dec
das
imul
imul
or
clc
or
sti
jns
push
shrl
cmp
call
push
jle
sub
xchg
push
jb
negl
neg
push
mov
mov
jnp
mov
sbb
in
pop
sbb
mov
jmp
lds
xchg
and
mov
mov
jnp
je
call
arpl
lods
xor
into
ret
into
mov
mov
xor
fdivrl
sbbb
or
jmp
scas
jg
xor
push
or
int3
mov
je
aaa
sti
inc
stc
imul
cmpl
mov
dec
add
daa
cmpsl
xlat
sbb
sub
adc
cwtl
sbb
push
mov
add
sub
sub
sbb
arpl
iret
pop
lock
cmp
lret
jnp
or
popf
scas
sub
mov
cwtl
and
hlt
inc
push
push
and
aaa
inc
stos
mov
pop
imul
mov
outsb
dec
xchg
imull
xor
fnstenv
inc
fists
push
mov
lea
out
inc
inc
and
dec
into
xchg
iret
push
fbstp
and
sub
cmp
add
inc
test
sub
cwtl
lea
push
out
push
push
lods
push
mov
lret
xchg
ja
cmp
gs
mov
dec
pop
inc
mov
mov
add
cwtd
pop
test
in
test
xchg
popa
mov
inc
push
and
pop
mov
push
out
xor
jp
mov
loope
xchg
mov
adc
aaa
movsb
lcall
add
sbb
xor
loopne
aad
loop
jge
insl
push
sub
mov
add
xor
dec
mov
lods
xor
loope
mov
mov
xor
lea
ljmp
orl
xchg
pop
xor
jb
sub
clc
mov
add
and
xchg
sbb
imul
xchg
add
loope
dec
sbb
and
jp
sub
movsl
sub
imul
aaa
das
cld
dec
iret
stos
jmp
sub
push
or
xor
pushf
push
jae
mulb
hlt
xor
fsubs
roll
jae
push
mov
pop
fnsave
inc
mov
adcb
or
pop
push
pop
fisttpll
adc
repnz
ret
repnz
jo
cmpsb
pop
and
sbb
cmp
fimuls
orl
xor
lret
fwait
lret
fbld
lods
std
sbb
mov
es
sahf
stos
dec
insb
mov
sbb
outsl
aad
jae
fisttpll
inc
cmp
fbstp
sub
rclb
movswl
lret
or
lea
loop
mov
and
or
mov
test
add
adcb
xchg
pop
mov
loop
imulb
adcl
jno
jmp
push
in
mov
scas
ret
and
test
adc
add
fwait
inc
popa
ficompl
push
out
xchg
dec
mov
dec
stos
mov
mov
and
mov
xchg
inc
xchg
push
cmc
mov
ret
bound
dec
decl
dec
and
out
popf
rorl
cld
nop
int3
mov
aaa
imul
dec
sub
mov
pop
sbb
mov
pushf
dec
imull
cmp
in
lock
movsl
pop
adc
dec
pop
in
xchg
test
out
dec
inc
lret
fwait
out
test
divb
stc
into
popf
es
mov
dec
fnsave
enter
out
and
bound
jnp
adc
out
push
cmp
movsb
rcll
mov
jb
out
ljmp
outsl
ljmp
jge
jge
pop
pusha
xor
mov
icebp
sub
fnsave
lods
dec
test
insl
notb
adc
push
jmp
mov
test
test
popf
out
xlat
in
jae
sub
loope
int
pop
sub
mov
andb
push
pop
xor
rcl
sbb
sub
iret
or
sub
xlat
jno
sub
sahf
sub
pop
in
inc
jge
aad
pop
arpl
sbb
xchg
inc
cltd
enter
xchg
jo
pop
test
jo
xchg
stos
push
out
mov
xor
add
inc
ret
push
mov
dec
inc
addr16
dec
fmul
inc
lret
and
mov
cmp
cmp
pop
mov
jp
inc
mov
push
lock
imul
cs
adc
or
sub
jge
inc
js
pop
sarb
pop
cmpsb
dec
repnz
cmpsb
rorb
arpl
sahf
sub
mov
and
andb
jo
shl
mov
mov
inc
lock
mov
cmp
mov
sti
test
flds
add
or
stc
fimuls
pop
mov
pop
and
push
movb
ror
mov
test
nop
clc
dec
es
xchg
shll
adc
nop
jle
xor
add
pop
mov
pop
jge
js
int3
xchg
ret
into
ds
cltd
mov
cwtl
pop
mov
and
mov
shll
lret
arpl
push
ljmp
repz
mov
jl
rolb
cmp
add
jnp
and
mov
jnp
andl
imul
into
push
mov
cli
inc
int
pop
push
lahf
sarb
inc
iret
cld
mov
mov
pop
int3
andl
cmc
adc
sbb
pop
adc
sti
rcrl
stos
leave
cli
test
scas
sar
or
std
lock
add
push
mov
inc
neg
stos
pop
sub
cwtl
ret
sbb
clc
ja
out
pop
xor
movsb
push
aas
or
fscale
cld
in
cmp
and
subb
inc
cld
aaa
in
cld
mov
mov
sahf
push
clc
sti
mov
adc
pop
test
addr16
push
fcmovnb
es
ds
fists
xor
sub
cmp
test
push
mov
mov
push
hlt
push
cmp
ja
dec
stos
pop
lcall
call
nop
cmpsb
es
outsb
cltd
mov
add
in
shl
pop
rclb
pop
push
cmp
add
or
push
jne
stos
xchg
loop
fdiv
mov
adcb
and
dec
aaa
and
add
and
sahf
mov
xchg
dec
call
mov
clc
into
cmp
lahf
ret
inc
int
ficoml
xlat
or
repz
jb
add
xlat
add
test
in
pushf
pusha
int
or
popf
sub
push
push
test
xlat
das
popa
jge
mov
shl
arpl
and
lock
imul
push
push
adc
aam
rorb
sti
rcrb
mov
sbb
in
loop
add
inc
adc
addr16
pop
mov
sub
cmp
or
mov
les
loope
xlat
jmp
push
jmp
dec
jae
pop
icebp
cs
mov
adc
gs
jg
adc
adc
push
adc
ret
dec
je
add
xor
adc
lret
outsl
test
xor
pushf
xor
add
mov
lret
ret
sbb
lcall
or
cs
sbbl
dec
imul
jge
mov
jecxz
xor
dec
xchg
lods
mov
dec
add
push
mov
push
popf
lret
inc
outsl
or
lret
jne
ljmp
enter
cmp
push
cmp
ror
jp
pop
ficoml
cmpb
cli
pop
push
push
scas
sbb
add
dec
int3
push
cmp
fs
sub
cmpsb
xchg
stos
cwtl
pop
jmp
push
fcomps
push
dec
pop
leave
and
jbe
cmp
xchg
test
sbb
test
sarb
enter
aas
inc
lahf
or
or
add
cltd
mov
icebp
push
lea
mov
scas
pop
sbb
sub
aam
pop
push
ret
xchg
xor
in
aaa
js
pop
mov
stos
fidivs
jg
cwtl
xchg
push
pushf
ja
outsl
push
dec
fmull
push
cmc
sub
ja
lock
mov
idivl
paddd
sub
repnz
aad
jle
xchg
lret
ja
mov
into
rclb
rorl
call
pusha
or
sub
fwait
pop
sub
mov
mov
add
outsl
ss
lahf
or
xchg
mov
sub
cmp
adc
pop
call
pop
cltd
push
jbe
fldl
xlat
das
notb
or
repz
bound
lret
xor
xchg
call
mov
shlb
jge
or
ds
jle
xchg
lcall
lea
stos
add
pop
negl
lds
cmp
outsw
mov
sbb
call
aas
imul
mov
pop
andb
and
add
fwait
xchg
rcrl
lret
lods
mov
jle
mov
jecxz
pushf
xchg
std
int
movsb
cmp
cwtl
cmp
fimull
out
loop
pop
mov
and
mov
int3
cmp
mov
pop
fs
sub
lahf
jge
or
pushf
cmpsb
inc
in
pop
imul
pop
cli
jae
cli
mov
pop
lock
cli
test
popa
mov
cli
jnp
jg
fdiv
cli
movl
adc
aam
jmp
fs
xor
rdtsc
xorl
je
and
mov
push
xor
jo
lods
sahf
mov
xor
jmp
jno
add
cmp
mov
sti
cmp
addr16
lcall
mov
cs
xor
xchg
mov
push
pop
stos
lahf
js
in
push
cltd
adc
inc
or
pop
aas
stc
sbb
mov
test
dec
je
xor
mov
inc
inc
push
push
lahf
jb
mov
cmpsb
das
fcom
bound
sub
cmp
je
pop
scas
clc
lods
popa
xchg
and
xchg
outsl
mov
icebp
clc
pop
mov
pop
mov
add
stc
inc
mov
or
scas
btc
int3
sti
aad
add
and
xorl
dec
iret
xor
pop
dec
pop
mov
dec
sarl
add
push
xor
cld
add
aam
aaa
or
push
mov
test
mov
cmpsb
pop
lahf
loop
std
cld
daa
ljmp
out
and
int3
ret
nop
cmpsl
nop
and
add
push
mov
je
adc
and
scas
sti
mov
dec
lret
cltd
mov
call
sti
mov
movsl
cld
js
cwtl
cmpsb
xchg
xorl
adc
push
cld
std
and
repz
cmpsb
xor
push
pop
push
push
jl
cmp
inc
mov
push
pop
and
fists
test
andl
hlt
sbb
push
cli
in
lcall
pop
je
imul
cmp
pop
insl
fidivrl
enter
cmp
dec
in
lods
add
xlat
cmp
pop
inc
jns
fidivs
xor
cmp
xchg
jecxz
push
es
out
cld
adc
and
rorb
cli
mov
push
into
popf
insl
imul
cmp
out
or
test
lds
cmp
jns
dec
pusha
adc
loopne
fnstenv
xchg
gs
inc
mov
mov
pop
test
jno
xor
scas
andb
mov
jbe
add
add
lret
ds
repz
add
repz
inc
daa
sub
std
in
adc
sub
adc
and
loope
xchg
pop
std
jae
mov
mov
mov
push
dec
mov
cli
les
data16
xchg
fcoms
mov
mov
bound
clc
jl
jno
insl
cmp
dec
fcoml
stos
jno
scas
test
fs
test
fadds
pop
or
push
outsb
or
sbb
dec
and
mov
nop
fucom
icebp
out
fisttps
sbb
sub
dec
xchg
fsub
jo
push
dec
inc
push
mov
test
mov
add
fcmovbe
fwait
mov
xchg
jno
inc
and
out
sub
mulb
out
cmc
dec
scas
cmc
sti
jle
push
pop
popa
inc
cmc
loope
lods
lods
mov
imul
and
pop
push
xchg
dec
push
js
repz
ds
pmuludq
loope
mov
iret
in
outsl
sub
adc
cmpsb
cmp
adc
mov
jne
pushf
push
pop
push
loop
subb
adc
pop
test
inc
xor
pusha
call
add
xor
add
out
mov
jmp
pushf
sbb
dec
jb
xchg
movsb
imul
std
shr
int3
mov
sub
xor
dec
sub
push
jl
adc
data16
jne
or
inc
fnstenv
mov
jl
ds
data16
dec
jae
enter
arpl
inc
shlb
sub
adc
jecxz
outsl
fimull
fimull
xchg
jge
call
aaa
scas
popa
or
subb
xor
dec
add
mov
sub
int
and
std
test
and
aad
mov
xor
mov
adc
push
jmp
dec
push
in
sub
fdivr
mov
inc
push
mov
or
xor
xchg
cltd
cmp
push
xor
outsl
xchg
iret
xor
rcll
ljmp
push
sahf
pop
xchg
lret
mov
mov
int3
rcll
sub
loopne
xor
insb
mov
pusha
and
mov
mov
add
xchg
push
or
or
pop
xorl
shll
push
lret
xor
sbb
and
sarb
xor
dec
cs
les
aam
push
mov
push
xchg
xchg
shll
lret
cmp
scas
jge
jmp
repz
ljmp
mov
pop
xor
lods
xchg
fistpll
mov
sbb
xchg
push
and
je
xor
fstpl
adc
fsubs
inc
orb
mov
add
shll
adc
dec
dec
testb
pop
frstor
or
aam
xchg
neg
xor
adc
ss
adc
push
pop
decl
ds
jns
rcrl
mov
inc
push
pop
push
push
fstps
xor
dec
test
xor
mov
lea
xchg
mov
mov
sti
out
out
push
stos
ficompl
decl
shll
jnp
mov
mov
mov
sbb
xor
inc
aam
insl
jb
xor
lods
cli
jno
fwait
out
inc
mov
fcomps
fcoms
ds
arpl
xchg
std
adc
push
jae
iret
or
xor
mov
lods
movsb
jns
jae
push
sbb
pop
cli
add
mov
or
push
mov
xchg
add
dec
jbe
mov
pop
sub
rclb
push
fcompl
mov
mov
lock
hlt
cmp
dec
sbb
mov
sub
pop
mov
aaa
xor
dec
ficoml
xchg
jo
and
clc
xor
add
add
inc
mov
xor
inc
in
fisubrs
push
js
cmp
fistpl
ret
or
outsb
pop
xlat
or
push
int3
leave
inc
mov
xchg
jmp
outsb
popa
push
inc
xor
fidivrl
push
adc
and
imul
mov
and
inc
fcmovnbe
mov
and
cmp
push
scas
jg
mov
movsb
inc
pop
mov
fidivrs
enter
fcoml
movsl
idivb
in
dec
dec
jne
or
sub
in
jle
add
addl
push
out
adc
add
xchg
sub
daa
test
aas
je
cld
or
pop
inc
dec
or
es
lret
xor
ret
xlat
cmpsl
or
mov
lret
sub
lret
shll
xor
xchg
test
xchg
or
sub
adc
xchg
stc
inc
mov
and
popf
imul
xchg
adc
sbb
sti
scas
mov
ret
shrb
jae
xor
and
ds
and
lcall
jnp
cmp
fwait
or
jo
pop
jmp
or
clc
stos
test
test
pop
cmp
fabs
xlat
fstl
mov
pop
andb
aam
loopne
scas
pop
mov
mov
ret
mov
cmc
add
bound
or
add
setns
mov
rcrl
xor
jl
mov
iret
ror
add
mov
out
mov
jp
jecxz
xor
clc
insl
loope
mov
loopne
in
add
adc
push
lods
adc
push
push
add
adc
pop
mov
mov
fadd
cmc
inc
inc
xor
dec
divb
mov
icebp
jne
adc
bound
repz
mov
sahf
mov
sub
movsb
dec
std
inc
inc
push
mov
outsb
call
outsb
mov
mov
out
enter
mov
sbb
pop
add
and
inc
jle
outsb
mov
lods
jns
dec
mov
mov
mov
lahf
test
stc
sbb
andl
lock
cmp
mov
into
mov
pop
mov
xor
into
mov
hlt
jge
test
xlat
pop
xor
pop
nop
cmc
mov
andl
pop
cmpsb
sbb
jbe
cltd
aam
ret
mov
mov
jp
mov
flds
pop
sbb
data16
jo
ficompl
fst
imul
pop
movsb
popl
sub
xchg
clc
std
lcall
int
and
mov
ja
cmpl
popf
push
sahf
jge
lods
cmp
jne
and
fs
adc
rorl
xor
hlt
and
inc
inc
add
push
cmp
push
rol
dec
adc
cmp
cmpsl
sbb
sbb
add
and
mov
rcll
insb
jmp
mov
push
fistpll
gs
hlt
mov
scas
xchg
sbb
movsl
test
xchg
repnz
shrl
insl
push
pop
sub
loop
sub
gs
dec
je
daa
xchg
ror
sub
test
dec
outsl
xchg
dec
nop
dec
xchg
test
jge
test
enter
and
mov
cltd
pop
sub
insb
mov
fsubrl
push
aad
dec
adc
mov
stos
data16
xlat
jne
in
les
push
jp
nop
adc
mov
cmpsl
xchg
ret
mov
fildll
fbld
out
dec
dec
inc
test
mov
mov
cmp
cli
std
lds
adc
int3
jnp
test
icebp
insl
lret
in
out
orl
push
mov
loope
jo
imul
push
aam
lea
movsl
into
mov
push
int
cli
push
ret
arpl
jns
popa
pop
xor
push
jo
jbe
pop
pop
les
out
or
adc
aaa
arpl
xchg
mov
les
je
ljmp
fistps
pusha
mov
fs
xlat
imul
mov
bnd
mov
pusha
insl
or
cltd
push
and
xchg
push
adc
sbb
fiaddl
int
cmpsb
mov
xor
push
ret
fsubs
je
and
push
call
loop
shrb
sub
clc
int3
mov
inc
cmp
jne
cmp
pop
xchg
imul
jge
mov
push
enter
jecxz
int3
icebp
mov
mov
mov
dec
sub
xchg
outsl
push
rorl
jae
inc
roll
pop
jnp
push
repnz
xor
movsl
sub
popf
xor
icebp
icebp
jl
es
mov
sub
lret
jle
inc
jb
mov
ret
cmp
shll
push
push
loope
in
pushf
push
xchg
nop
je
fcompl
inc
add
cmpsb
js
fdivrs
add
lret
icebp
or
add
dec
and
loope
subl
ljmp
jp
and
iret
xchg
mov
mov
mov
sarl
arpl
stos
cmp
addr16
xor
xchg
xchg
pop
sbb
call
dec
push
stos
mov
popf
pop
sub
js
andb
movsl
jp
mov
data16
cmp
adc
into
leave
mov
pop
sub
daa
fisttps
ret
or
fiadds
cmp
loopne
lock
xor
popa
sahf
pop
aaa
andb
lods
xchg
xor
sub
cmpsb
in
push
movsl
inc
popf
fsubl
adcb
mov
iret
cwtl
daa
xor
jmp
sbb
push
pop
rorb
push
enter
popf
add
sub
fadd
pop
es
mov
push
jne
mov
mov
pop
mov
lcall
mov
fmulp
loopne
shrd
mov
cmc
into
jl
push
inc
pop
cli
sahf
enter
mov
or
dec
push
cltd
dec
repz
andb
sbb
out
aaa
sbbb
jle
div
pop
dec
or
test
dec
clc
in
aad
lcall
ds
mov
leave
ret
add
add
xchg
adcb
or
pop
dec
lds
push
inc
xchg
call
cmp
lret
arpl
lods
xchg
imul
insb
sbb
movb
lods
adc
pop
mov
and
add
mov
pop
mov
movsb
mov
pop
mov
or
lcall
repnz
out
and
scas
pop
mov
lahf
pop
insl
dec
dec
jecxz
add
pop
lahf
in
lods
xlat
xchg
roll
add
faddp
rol
pop
xor
lret
jb
aam
ja
iret
xlat
sub
jbe
aam
pop
mov
xor
ljmp
lcall
xchg
scas
jne
dec
push
lahf
and
in
sub
xor
sbb
adc
mov
mov
sub
adc
push
out
movb
add
xlat
inc
popa
mov
mov
mov
mov
push
sbb
xor
imulb
in
fldcw
fists
mov
mov
sub
cltd
pop
movsb
popa
mov
and
jmp
xchg
insb
outsb
xchg
lahf
iret
mov
push
ljmp
mov
adc
cmp
xchg
fwait
repz
scas
daa
cmp
fimull
ss
orl
jmp
jmp
mov
adc
in
lret
xchg
inc
mov
mov
aad
rolb
xchg
fwait
xchg
test
push
jge
scas
pop
mov
sbb
and
stc
sbb
sub
lea
adc
jmp
push
dec
cmp
or
jb
push
andl
lahf
aas
dec
outsb
hlt
shrl
daa
push
add
mov
xchg
in
jbe
sbb
mov
inc
jle
jb
cmp
aad
push
cmpsb
js
int3
mov
test
mov
aas
add
push
cwtl
or
cli
adc
sub
rcrb
pop
xor
cld
cmp
sbb
xchg
fidivs
jnp
add
sbb
daa
xchg
les
jge
fidivrl
adc
add
and
xor
jne
cwtl
popf
mov
or
test
jns
int
test
adc
sahf
xor
xchg
pop
enter
xlat
jle
dec
mov
lea
jnp
leave
test
mov
loope
fs
jle
jb
and
mov
xchg
enter
and
aaa
repnz
lcall
mov
ret
sbb
lret
jne
lcall
xchg
jg
cmp
and
cltd
xor
mov
out
adc
mulb
or
imul
mov
repz
xor
imul
inc
leave
mov
add
outsb
jo
push
push
rcrl
std
loope
pop
xlat
repz
repz
cmpsl
mov
adc
dec
sti
sbb
loope
jmp
adc
mov
fnstcw
jns
popa
or
adc
fidivl
repnz
stc
dec
test
arpl
dec
xchg
aad
outsb
stc
sub
loopne
adc
dec
or
xor
mov
push
mov
mov
imul
das
popf
push
push
pop
pop
jp
cs
or
pop
adc
cmpsl
lret
xchg
add
movsb
aam
std
cmp
rcr
jno
push
xchg
loop
popa
sub
mov
lcall
insl
xor
and
or
mov
cmpsl
inc
and
mov
out
enter
popa
xor
jmp
ljmp
out
repnz
pop
add
and
adc
adc
mov
xchg
movsl
in
adc
in
sub
aad
jmp
gs
lods
pop
ss
xor
pop
into
push
mov
stc
das
push
sti
adc
add
adc
inc
or
loope
fcoms
jb
mov
and
jmp
iret
vpunpckldq
cltd
mov
mov
xor
shl
dec
push
pop
push
dec
js
lret
xchg
xchg
inc
push
aas
rcr
cli
cs
push
cltd
cld
call
cmp
test
loope
xor
lret
and
mov
and
dec
xor
arpl
add
das
sbb
lea
subl
and
jbe
jbe
clc
mov
repz
or
pop
icebp
mov
and
dec
and
je
movsb
lret
jp
lea
push
cmpl
cmpsl
sbb
arpl
insb
mov
stos
inc
lret
scas
inc
inc
sub
inc
jns
cmp
pop
outsl
xor
or
jle
push
ret
sub
dec
addr16
sub
jmp
scas
insb
jle
dec
add
or
or
test
and
inc
scas
xchg
mov
inc
xchg
pop
incb
cmp
push
into
cmp
ds
jecxz
out
es
shrl
mov
insl
cmp
xchg
mov
ss
sbb
sbb
es
cld
xchg
sbb
test
pusha
fcomi
sub
outsl
xor
pop
iret
sbb
aaa
nop
jmp
push
loope
and
jecxz
cmp
xchg
mov
mov
mov
jmp
lret
popf
jge
addr16
jp
xchg
out
pop
lahf
sbb
jb
push
jno
lock
add
dec
int3
cmp
popf
jnp
xor
pop
xor
ret
cmp
pop
repnz
jp
pop
xlat
out
inc
pop
push
int
jecxz
add
mov
mov
pop
mov
jns
lods
cwtl
out
gs
add
fcompl
popf
clc
packsswb
in
xor
inc
xchg
fwait
dec
aaa
jmp
pop
add
pusha
ja
jecxz
mov
jbe
orl
adc
ja
cmpsl
lods
hlt
inc
js
ja
mov
clc
scas
movsb
test
push
in
rcll
divb
call
sbbl
jge
loope
xor
push
pop
in
push
aas
fdivp
adc
loope
mov
jno
jno
jmp
mov
shr
rclb
movl
ret
cltd
addb
push
into
adc
subb
pop
mov
rclb
lret
fldl
sar
jbe
adc
pop
xor
inc
movsl
imul
pop
adc
es
loop
xchg
lds
data16
int3
mov
jp
hlt
push
lahf
mov
loopne
jnp
mov
sbb
repz
mov
insl
sub
bound
repz
out
in
icebp
jmp
aaa
inc
aas
std
push
mov
mov
cmp
aad
stc
add
test
imul
test
mov
mov
push
pop
xchg
ljmp
dec
pop
out
outsl
imul
mov
jno
add
mov
roll
test
jbe
into
xchg
cmpb
aaa
lods
fs
stos
rcl
movsb
mov
les
loopew
mov
dec
jbe
push
add
fs
cmc
out
jle
xchg
ret
pop
gs
bound
cli
add
or
jae
xchg
imul
adc
scas
xor
loopne
xlat
adc
mov
arpl
jmp
scas
dec
cmp
mov
adc
cmp
mov
dec
daa
jg
bound
xor
scas
aas
je
pop
cmp
int
and
sbb
test
int3
or
dec
in
ficompl
into
inc
js
xchg
push
mov
inc
or
xchg
aaa
sub
and
push
mov
xchg
fsubrl
or
call
sub
sbb
and
rol
mov
mov
cmp
xchg
in
outsl
pop
jg
ja
jg
ljmp
mov
pop
lock
sub
jns
jne
mov
dec
adc
xor
lods
repnz
mov
sbb
rcrl
adc
mov
xchg
cli
jne
in
add
sahf
stc
dec
push
or
cmp
gs
stos
push
mov
aam
aaa
xchg
push
je
mov
jmp
gs
popf
mov
push
xchg
mov
in
cli
out
jl
cmpsl
repz
call
dec
mov
into
fisttpll
dec
std
mov
and
je
loope
fimull
xchg
mov
nop
or
adc
pop
lods
add
hlt
icebp
fldenv
pop
cmp
push
mov
std
iret
adc
repz
pop
jle
in
pop
mov
xor
pop
mov
lea
dec
pop
cwtl
push
cltd
mov
adc
test
ficompl
jle
mov
mov
aad
pop
dec
in
mov
andl
push
pop
inc
cmp
dec
in
xchg
fildll
ds
cs
in
xchg
push
pop
dec
decl
es
jns
xlat
rcrl
es
rorl
xor
leave
pop
or
decl
pop
std
and
repz
cmpsb
movsl
inc
cmpb
mov
add
xor
mov
jmp
mov
aas
or
mov
icebp
jns
or
xchg
jno
aaa
pop
pop
fdiv
jb
cmp
shlb
mov
sbb
sarl
adc
jecxz
dec
xchg
daa
mov
cmp
sub
sti
push
leave
push
leave
cmp
lea
stos
je
icebp
aas
test
sub
cltd
push
mov
mov
rcll
popf
sub
and
ret
faddl
inc
xor
xchg
test
loop
outsb
out
and
inc
pop
rol
sub
loop
repnz
je
mov
imul
bound
pop
out
jns
scas
and
pop
xor
sti
or
rorl
sbb
sbb
out
stc
mov
push
mov
addr16
and
mov
cmp
dec
js
in
cmp
mov
dec
or
jbe
dec
enter
inc
and
les
sbb
jg
outsl
dec
ja
mov
mov
les
mov
movsl
xchg
pop
pop
mov
aad
repz
dec
push
stc
mov
pop
push
mov
adc
out
and
leave
push
in
inc
outsl
fistps
scas
daa
inc
nop
movsb
shrb
pop
scas
cmp
xchg
test
cmp
or
adc
sub
orb
ficoms
mov
scas
popa
je
sahf
xchg
adc
mov
jo
sub
clc
je
notl
jo
int3
rcll
loope
xchg
and
imull
jecxz
aas
mov
inc
daa
jnp
ret
out
ret
pop
loop
jge
loop
add
add
push
xchg
push
add
add
adc
push
cmpb
cmp
xchg
adc
mov
mov
mov
mov
data16
cmp
test
dec
test
xor
sub
pop
dec
nop
xchg
cmp
ja
lcall
into
loopne
lahf
inc
cs
xor
cli
mov
inc
add
testl
mov
jno
int
ja
iret
cmp
fcoms
inc
xchg
jecxz
pop
ljmp
cmpsl
add
dec
push
jle
insl
push
and
scas
mov
mov
push
repz
repz
mov
stc
ret
std
insl
outsb
sbbb
adc
mov
jb
in
into
jne
xchg
aas
pushf
jge
inc
mov
dec
dec
inc
pop
ds
ljmp
dec
mov
scas
sub
nop
sbb
test
pop
loopne
push
inc
pop
mov
icebp
xor
sub
pop
repz
cmp
push
arpl
bnd
fcmovb
inc
int3
inc
es
shrl
shrl
movsl
push
sub
or
xor
sbb
ljmp
int3
jns
xorb
jecxz
dec
cmp
fwait
ljmp
outsl
mov
mov
out
ss
rcll
inc
dec
enter
xor
xchg
imul
pop
mov
inc
leave
jle
inc
mov
ret
mov
fimull
scas
sbb
push
shll
adc
shlb
stos
sub
xor
pop
fbld
add
mov
and
clc
cmp
xchg
push
jg
sti
stc
jo
jne
test
xchg
mov
or
push
ficomps
loope
scas
jns
mov
push
xor
add
popa
outsl
push
pop
je
aas
adc
addb
xor
push
xor
sub
mov
inc
dec
int
or
ret
pop
inc
cs
fimull
or
icebp
adc
jne
or
out
mov
pop
fdivr
add
pop
xor
pop
inc
loope
call
pop
jle
rclb
imul
fwait
mov
add
es
dec
add
aas
dec
mov
imul
das
xchg
inc
test
aas
inc
xchg
pop
mov
cmp
xor
xchg
push
fcoms
or
sbb
jle
push
jae
jbe
sti
mov
inc
inc
push
xchg
data16
cmpsb
mov
repz
push
push
test
mov
enter
jne
sarl
pop
mov
loope
in
mov
cmp
repnz
mov
xor
ljmp
xorb
dec
pop
mov
pop
add
scas
inc
jne
and
repz
mov
mov
mov
cmp
xchg
loopne
stc
call
fcomp
jno
aas
bnd
xchg
or
ja
fwait
jl
inc
jae
or
xor
mov
dec
inc
clc
add
add
popl
jnp
jmp
mulb
push
push
add
lret
movsl
xchg
jecxz
ret
inc
inc
xchg
jl
mov
and
cmpsl
push
mov
repz
mov
push
ljmp
scas
stos
adc
outsl
xchg
xchg
xor
or
pushf
add
inc
hlt
inc
mov
lock
imul
jns
hlt
mov
add
stos
and
loop
xor
xor
paddq
out
daa
testl
add
hlt
andb
ja
stos
fildl
popf
adc
loop
jmp
xchg
cli
mov
enter
testb
lret
hlt
push
fidivl
insl
outsl
in
xor
imul
jno
loopne
cmp
xor
in
cwtd
std
lods
repnz
sub
xchg
pop
sbb
scas
adc
adc
repnz
or
fisubrs
jl
mov
jno
mov
addr16
out
jle
inc
addr16
mov
cwtl
jne
repnz
nop
inc
pop
dec
cmp
add
cmpsl
and
pusha
pusha
pushf
mov
test
bound
sbb
cld
enter
lods
mov
push
or
fs
cmpsb
fcoms
lahf
scas
push
sbb
sub
and
sbb
sbb
movsb
xchg
or
jg
gs
std
jns
inc
inc
ret
pop
in
icebp
jno
jecxz
push
lret
sub
insl
xor
dec
in
iret
rolb
clc
adc
jns
movsl
cltd
ja
mov
popa
jl
inc
clc
pop
inc
push
rcrb
fcoms
les
adc
cli
ja
jecxz
and
lahf
push
mov
inc
bound
fisubl
push
data16
or
or
or
mov
sbb
ds
je
mov
sbb
jp
movsl
push
or
insl
jae
mov
pop
mov
shrb
xchg
xchg
add
xor
jl
xchg
add
faddl
mov
pop
sbb
jbe
testl
mov
mov
sahf
inc
ljmp
test
out
cltd
test
adc
sbb
les
imul
inc
lock
imul
xchg
in
rorb
jmp
jg
jle
movsb
sti
pop
jae
and
dec
or
adc
and
dec
cld
fists
jg
int3
adc
out
imul
add
mov
add
fcomi
mov
in
push
inc
cmp
rcll
test
into
mov
sub
mov
sbb
push
ficoms
and
iret
inc
outsl
scas
sbb
sbb
xchg
es
shld
mov
sub
mov
dec
mov
lcall
mulb
add
sti
scas
fs
stos
xor
xchg
inc
xor
test
out
push
ja
adc
mov
push
nop
xor
mov
cmp
ljmp
sub
add
shlb
lret
test
hlt
outsb
or
cmp
mov
andl
ret
add
xchg
rcll
negb
icebp
and
push
jne
int3
dec
ljmp
sub
outsl
shlb
fincstp
stos
xchg
xchg
mov
rclb
xor
js
popa
aam
punpckldq
out
test
push
inc
cwtl
xchg
aaa
bound
push
hlt
lcall
xchg
enter
test
inc
or
sub
jno,pt
xchg
mov
insl
dec
fsubrs
jle
jb
pop
aaa
out
cmp
inc
pop
or
adc
dec
scas
xchg
inc
divb
sbb
out
test
cli
call
mov
inc
insb
push
lcall
ficomps
pop
xchg
sbb
push
push
je
dec
hlt
inc
test
sti
insl
nop
dec
gs
and
inc
push
mov
adcl
cs
enter
and
gs
mov
push
mov
pop
fucomi
and
ret
mov
frstor
mov
sub
ds
jne
push
shrl
pop
test
gs
jl
lcall
xlat
cmpsl
loope
xchg
xor
mov
insb
je
dec
mov
pop
aam
push
outsl
fucomip
mov
jno
inc
outsb
dec
cwtl
adcl
jle
mov
add
call
xchg
das
notl
jbe
jecxz
movsb
push
les
movsl
jo
jb
cli
jb
movsb
xor
testb
shl
pop
pop
test
dec
or
outsl
je
sbbb
daa
adc
add
pop
add
cmp
test
fnstenv
sbb
out
lds
jnp
cmpl
loop
repnz
pop
jp
dec
sbb
add
fwait
mov
stos
mov
popf
pushf
subl
hlt
dec
cmp
repz
push
mov
dec
xchg
mov
xchg
mov
ja
stos
iret
push
lahf
mov
rolb
andl
addr16
lods
xor
xchg
outsb
mov
js
mov
xchg
inc
jae
out
stos
js
jle
sti
sub
stos
in
aas
mov
adc
inc
sbb
sbb
and
pop
xor
out
jl
sbb
mov
mov
pop
fwait
adc
sarl
sarl
mov
dec
mov
sahf
cmp
or
fstpt
sbb
fcoms
add
or
mov
rclb
adc
and
xchg
dec
cmp
mov
cmp
xchg
sti
jg
mov
mov
add
mov
jge
sub
call
movsb
mov
xor
mov
daa
add
cld
daa
mov
mov
xchg
in
sti
gs
add
jmp
push
ss
out
leave
adc
stc
jge
adc
in
cld
pusha
leave
xchg
daa
fbld
mov
sbb
adc
loope
adc
adc
dec
cld
arpl
lcall
lea
xchg
mov
pop
jge
or
ss
adc
fcompl
fildl
cs
fsubrl
sbb
das
mov
adc
shll
divl
add
iret
push
dec
in
mov
sti
arpl
push
sbb
adc
inc
mov
test
add
sbb
ljmp
sub
enter
fwait
pusha
in
add
mov
sub
int3
mov
das
mov
cmpsb
cmp
mov
inc
xchg
jp
add
imulb
or
dec
mov
pop
inc
add
mov
push
gs
rolb
sub
or
mov
scas
jecxz
shrb
pop
xor
test
cmp
jnp
shll
xchg
enter
sbb
loop
fstps
jae
add
add
jle
push
cmpl
or
inc
mov
mov
aaa
test
mov
push
mov
xor
pop
xchg
lcall
mov
stc
push
orb
in
movl
ja
enter
pop
cli
mov
cmp
pop
or
decl
or
push
mov
mov
call
add
add
mov
push
enter
fisubs
test
jg
or
sub
leave
cmpsb
filds
xchg
push
js
pop
mov
xor
loope
incl
cltd
fcmovnu
or
xlat
add
mov
mov
cmp
dec
rcrb
sub
movsb
pop
mov
sub
mov
pop
sbb
ficoml
lahf
ljmp
imul
mov
adc
int
sbb
ljmp
adc
mov
ficoms
imul
fnstcw
mov
push
in
xchg
push
cmp
lret
or
mov
jno
lret
cmp
jnp
dec
repnz
stos
push
cmp
sub
je
movsl
add
arpl
and
pop
arpl
test
ret
icebp
int
jae
dec
sub
mov
jp
mulb
push
repnz
pushf
mov
push
mov
xchg
xor
ret
or
cmp
xor
popa
adc
dec
push
mov
inc
pop
sbb
push
inc
xchg
int
inc
jmp
mov
mov
addr16
cmpsl
outsl
mov
mov
repz
jne
enter
outsb
pop
pop
loop
fstpl
push
sarl
in
push
pop
cmp
adc
sub
xchg
rcrl
test
cmp
add
push
push
cmp
ss
std
cwtl
jle
and
pop
gs
lahf
loop
movsl
testb
cld
stc
mov
cltd
mov
jnp
test
mov
data16
push
mov
inc
dec
aaa
es
cmc
mov
inc
and
dec
xlat
pop
std
add
pop
adc
pop
aaa
cli
jne
sub
stos
dec
sar
mov
std
pop
xchg
mov
out
imul
repnz
fldcw
dec
sub
mov
iret
cld
mov
int3
dec
cmpb
push
jecxz
sahf
pop
mov
fstl
daa
icebp
xor
into
daa
and
and
or
aas
inc
adc
xor
scas
inc
incl
call
jns
rorb
popa
lods
adc
pushf
les
push
inc
mov
js
mov
mov
sbb
add
mov
xchg
dec
xchg
mov
aas
cli
lods
or
inc
gs
mov
imul
jo
arpl
push
insl
jle
es
aas
data16
mov
pusha
lods
sub
xchg
push
sbb
push
jb
jo
cmp
pop
push
or
ljmp
fcomip
dec
pop
cmp
es
inc
inc
mov
outsb
call
push
and
pop
js
dec
pop
into
jnp
popa
push
outsl
dec
push
mov
loopne
pop
stc
insb
cmpsl
push
subl
subb
cmpsl
sbb
cld
xor
cmp
sub
es
addr16
push
fildl
fs
ret
jmp
sub
xor
sbb
mov
lock
out
jns
sbb
std
dec
push
outsl
push
or
mov
test
loope
mov
cld
jne
test
test
jg
loope
int
aas
mov
xor
push
mov
dec
adc
add
insb
mov
xor
sub
dec
mov
arpl
cld
and
js
pop
push
lahf
lret
sub
shlb
pop
dec
data16
jle
adc
int3
popf
xchg
mov
sbb
or
bswap
inc
outsb
pop
cli
aam
adc
jle
and
aaa
push
xchg
inc
ja
std
mov
inc
je
jecxz
fldt
std
les
or
mov
arpl
jp
lret
mov
pop
inc
aad
lea
adc
pop
lods
pop
test
ja
mov
outsb
add
jmp
pop
enter
out
push
mov
aaa
inc
ficomps
pop
inc
mov
inc
cmp
jae
sbb
and
popa
aaa
pop
das
sbb
lret
insb
xor
mov
inc
fwait
subl
aad
pop
insb
filds
or
imul
clc
adc
mov
and
ds
int3
cmpsl
xchg
sbb
jge
rclb
mov
adc
ret
add
push
sub
sbb
lret
mov
imul
fwait
cmpl
add
add
cs
stos
or
leave
dec
mov
adc
test
xchg
popa
xchg
adc
xor
xor
fists
adc
mov
dec
xchg
scas
call
leave
mov
adc
fcmovnb
mov
imul
incb
push
loop
xor
or
pop
sbb
adc
out
in
ret
jae
adc
repnz
jge
outsb
lods
add
cmp
inc
insb
or
inc
sub
jl
std
shll
inc
pop
cwtl
or
sub
fidivl
imul
stos
insb
and
int
shll
inc
jle
inc
or
out
ret
jnp
into
mov
and
imul
das
or
pop
shll
dec
dec
movsl
scas
push
cmp
popa
fildl
scas
sub
dec
rorl
arpl
jmp
inc
pushf
jmp
cmp
cmp
push
stos
pushf
or
shrl
push
sahf
xor
das
jbe
jmp
and
imul
xchg
dec
mov
xor
out
dec
and
xchg
loopne
fnsave
push
cli
dec
loopne
sbb
test
cmp
xor
cmp
nop
cmp
jns
pushf
lods
lods
jp
jp
aam
sub
dec
sub
add
or
out
pop
pop
jmp
or
shlb
inc
mov
repz
jmp
inc
scas
inc
mov
push
cltd
sbb
dec
outsb
jecxz
aam
jns
out
jno
es
inc
pushf
int
movsb
adc
stos
mov
dec
test
adc
xchg
loope
pop
outsb
xor
dec
cmc
pop
das
xchg
ljmp
loope
ror
fwait
mov
mov
out
dec
lods
out
fstpl
pop
adc
bound
mov
cs
in
and
mov
jle
add
lods
int3
mov
mov
jle
add
inc
or
push
jbe
add
fwait
lea
std
je
push
imul
xor
and
dec
mov
push
cld
loopne
push
lock
jmp
dec
cmp
xchg
loope
and
xor
push
jl
sub
fs
mov
int3
fucomip
adc
stc
or
or
xor
push
imul
loop
adc
sahf
andb
pop
adc
insl
sbb
xor
push
ja
mov
xor
ljmp
and
leave
push
xchg
out
push
aaa
jge,pn
mov
inc
ret
push
adc
pop
sub
daa
addr16
insb
sub
cmpsb
ja,pt
xor
stos
jmp
mov
or
aam
lock
jae
push
sub
push
jl
out
popa
pop
or
push
rolb
mov
mov
dec
xchg
flds
imul
fwait
dec
mov
enter
and
xchg
dec
repz
into
sbb
xchg
imul
repnz
pushf
jl
imul
mov
out
daa
sti
pushf
aad
push
stc
mov
fbld
xor
mov
cmpsl
rcll
in
push
jge
cwtl
sub
mov
mov
pop
nop
das
jns
cltd
cmp
inc
in
in
into
rcrl
push
sti
jle
and
push
sub
mov
push
cld
icebp
movsb
pop
ss
xor
sahf
into
pop
ja
dec
fidivrl
mov
mov
mov
and
cmp
xor
dec
repz
or
rol
es
jo
movsb
aam
jp
adc
cs
xorb
fidivrs
js
or
popf
je
mov
ja
jnp
adc
popa
dec
push
or
sti
adc
mov
dec
popa
sbb
ss
xchg
xor
sub
popf
or
ffreep
cmp
leave
cli
and
pushf
sbb
and
sbb
sbb
in
dec
xor
push
lods
aas
push
cltd
test
cmp
xchg
or
xchg
lret
push
fiadds
call
mov
push
sbb
arpl
mov
add
mov
popf
xor
cmp
test
xchg
cmp
push
fwait
xor
pushf
ss
out
mov
xchg
movsl
mov
xchg
clc
int
aas
mov
mov
and
ret
xchg
add
cmpsb
jo
xchg
jmp
insl
pop
push
test
push
fidivl
pop
sbb
aam
lds
inc
das
cs
jno
lcall
lret
adc
mov
hlt
lea
sbb
xlat
repz
sarb
add
jmp
dec
bound
movsl
sbb
or
and
sti
xor
fisubrl
pop
stos
inc
ds
cmp
mov
andb
sbb
push
fidivrs
idiv
rcll
mov
pop
jecxz
inc
or
es
jno
stc
or
adc
ss
xor
cmpsl
dec
movsl
and
cmp
int3
lods
testl
in
dec
fimuls
push
adc
data16
sbb
cmp
lods
in
inc
daa
xor
xchg
js
jg
or
and
pushf
icebp
out
stos
inc
lods
and
cmpsb
mov
sub
pushf
stos
xor
aad
add
dec
inc
or
fxtract
insb
mov
mov
jmp
notl
cmp
xchg
ficoml
aas
mov
mov
xchg
mov
ds
fwait
xchg
sahf
dec
jp
dec
lret
das
dec
push
andb
or
outsl
push
rcrb
mov
jo
subl
cmc
test
mov
lcall
add
mov
out
call
push
add
std
shrl
pop
out
aas
mov
addr16
lea
xor
rcr
insb
mov
sbb
pop
pop
xor
aam
dec
mov
and
mov
sbb
xlat
aaa
xor
push
mov
dec
xchg
dec
add
ja
cwtl
sub
mov
mov
adc
dec
imull
es
or
in
sub
test
shll
dec
aad
jae
sub
inc
push
cmp
sbb
sbb
or
in
sub
mov
add
popl
mov
xor
ss
arpl
pop
adc
inc
add
cli
test
mov
arpl
pushf
jae
js,pt
cmc
fldl
cmc
cwtl
or
add
cmp
xor
mov
insb
sub
add
inc
enter
fisubs
and
xchg
je
js
add
cmp
xor
pushf
mov
lahf
push
dec
sbb
add
insl
mov
mov
dec
pop
and
sub
dec
popa
jecxz
pop
rcr
lods
push
add
lret
inc
or
sbb
ds
mov
insl
pusha
ja
ret
cmpsb
gs
dec
inc
push
xor
or
xchg
fcomip
pusha
ljmp
lahf
sbbl
and
cld
inc
push
fildl
incl
rcr
mov
bound
sti
sbb
adc
cmp
sub
inc
lods
je
cwtl
int3
mov
add
cmp
adc
mov
adc
mov
repnz
pop
dec
stos
jns
int3
add
test
cmp
cmp
dec
sarb
cmp
xchg
int
xchg
pop
and
dec
je
dec
xchg
sahf
push
pop
lds
decl
mov
imul
xchg
sahf
or
adc
or
je
jnp
mov
xor
xchg
lods
test
and
insb
repz
push
loope
mov
or
mov
sbb
or
cmp
push
aaa
mov
mov
jge
repnz
add
mov
aam
push
mov
rorl
cld
pop
pop
stos
lea
sbbb
sti
xchg
mov
adc
leave
pop
add
aas
sbb
mov
insb
into
mov
movsb
mov
pop
test
adc
dec
xchg
push
lea
test
push
sub
mov
sub
xlat
testl
sbb
hlt
mov
mov
or
xor
mov
cmp
or
imulb
cmp
xor
mov
cmpsl
mov
xchg
pop
mov
sbb
inc
clc
hlt
roll
movsb
lcall
mov
inc
movsb
jno
dec
out
in
adc
dec
add
pop
js
aaa
ja
sub
and
pop
jnp
outsb
adc
mov
dec
dec
call
mov
xor
mov
xor
xor
sti
inc
or
dec
sbb
mov
gs
or
mov
in
xor
and
shlb
mov
dec
sub
rcrb
mov
dec
inc
lcall
mov
in
int3
xlat
es
test
enter
mov
xchg
orb
int
inc
pop
and
inc
imul
cmove
add
int3
sub
jae
and
and
loop
fs
pop
pop
je
sub
es
sar
cmpsb
stc
lahf
cmp
mov
outsl
test
mov
in
into
cli
mov
leave
icebp
sbb
mov
out
repnz
adc
sub
pusha
mov
pop
adc
jno
mov
inc
mov
loop
add
lret
pop
inc
das
ret
sub
lods
cmp
mov
fisttpll
out
adc
pop
xor
mov
or
pop
mov
adc
xchg
push
add
arpl
fadds
into
xor
jp
cltd
xchg
push
outsl
sub
loope
pushf
in
lods
rol
mov
and
dec
xor
fnsave
mov
jo
sub
cmpsl
jp
and
clc
mov
mov
rcrl
mov
pop
xchg
fwait
loope,pt
iret
insb
out
inc
rclb
push
push
xor
ljmp
mov
xor
dec
pop
daa
ffreep
mov
lret
mov
jge
and
outsb
outsb
and
pop
adc
out
mov
lock
data16
cmp
adc
fwait
ds
or
xchg
inc
jb
mov
push
imul
pusha
push
mov
push
jo
into
subl
sub
pop
cwtl
sub
pop
lcall
pop
add
dec
clc
sub
adc
and
lret
adcb
mov
stc
cwtl
xor
popf
pop
xor
and
cltd
jp
ljmp
imul
adc
lock
cmp
push
mov
mov
fwait
decb
and
call
imul
cmp
and
sbb
pop
pushf
add
imul
nop
test
and
inc
push
clc
lods
cltd
jno
inc
leave
test
stc
cmpsl
mov
into
int3
lret
adc
inc
mov
iret
in
ja
sub
sbb
ja
push
in
outsb
int3
loop
xchg
das
cmpsl
push
fadd
or
xchg
scas
in
dec
jmp
cmp
sbb
call
insl
push
jo
std
add
adc
in
nop
or
sbb
popf
dec
fsubrl
outsl
repnz
nop
sarb
adc
sbb
stos
lea
push
pop
lret
lock
pop
xlat
incb
rcll
adc
pop
push
jno
adc
xor
mov
mov
sub
fidivs
sub
loopne
lods
jne
cmpsl
cs
xchg
pop
jo
or
cli
roll
cli
mov
mov
dec
mov
imul
dec
or
mov
cs
sbb
or
jo
jg
mov
pop
jmp
pusha
xchg
lcall
or
loopne
jl
fidivrs
dec
inc
jl
add
mov
fdiv
out
inc
in
lods
and
stc
mov
jnp
xor
in
xchg
addr16
pop
rcl
fldl
cmp
mov
in
adcb
adc
insb
popf
dec
xor
jb
or
push
insb
outsb
dec
mov
sbb
test
adc
xchg
outsl
push
sub
jo
fimull
mov
and
fidivrl
lahf
adc
mov
mov
xchg
xorb
js
push
iret
icebp
dec
or
jg
mov
lret
divl
popa
push
test
xchg
out
xchg
xor
inc
sti
add
js
repnz
popf
out
nop
jns
or
mov
jnp
aam
rcl
inc
sbb
push
rcrl
mov
scas
pusha
lahf
ret
shll
mov
adc
xchg
sub
jg
sub
lahf
cmp
dec
push
xor
fmull
xchg
out
ljmp
mov
sbb
or
sub
jg
loopne
inc
sar
insb
mov
mov
jl
imul
mov
mov
iret
pop
and
sub
push
mov
sbb
repz
mov
xchg
cmpb
and
cld
adc
cli
icebp
xchg
iret
adc
pop
loopne
ret
aaa
inc
cmp
imul
dec
sub
cli
or
sarl
loope
adc
dec
mov
imul
jecxz
inc
adc
sub
stos
roll
insb
inc
mov
std
movsb
insl
or
pop
divl
xchg
lret
mov
es
lret
jmp
gs
and
and
adc
fwait
mov
jmp
xorl
aad
outsb
sbb
fdivl
and
aas
pop
push
mov
pop
in
or
xchg
subb
movsb
push
xor
ja
fildl
inc
lret
add
add
mov
mov
mov
pop
pop
ret
loope
mov
push
fidivrs
and
mov
jno
dec
call
add
push
ret
inc
inc
ss
and
lods
lock
sbb
ss
fsubp
ja
adc
cs
xchg
clc
outsl
adc
jb
xor
mov
xchg
pop
jno
lret
movsl
sahf
sub
mov
mov
mov
daa
mov
aas
sbb
insl
dec
mov
js
shl
lods
pminsw
fwait
cmp
push
fs
push
jnp
push
push
jmp
and
jo
xchg
mov
bound
xor
ret
xor
xchg
mov
sub
adc
insl
sti
enter
fildll
repz
pop
push
stc
sub
insl
idivl
scas
pop
inc
sub
rclb
es
xchg
xor
fnsave
leave
out
adc
test
xchg
push
push
fsubrl
add
subl
hlt
cltd
mov
cmc
outsl
xchg
inc
dec
fisttpll
loopne
orl
xchg
outsl
xor
and
inc
cmp
sbb
pop
add
dec
lds
add
inc
xchg
lret
test
jecxz
fs
mov
mov
test
inc
cmp
jb
add
insl
jns
testl
mov
stos
arpl
pop
or
fdiv
sbb
cmp
outsb
xorb
mov
mov
mov
in
mov
clc
push
out
sbb
popa
sub
cmp
addr16
in
ret
jecxz
insl
pop
fprem
adc
inc
sub
xor
sbb
cltd
or
fists
std
mov
jle
add
int
push
in
push
hlt
not
jle
cli
scas
inc
mov
mov
imul
iret
mov
mov
fadds
sti
xlat
idivl
mov
out
pushf
and
push
out
and
mov
out
cmp
xchg
mov
push
pop
mov
pop
cmc
push
outsb
lock
lods
push
pop
and
jg
loope
or
sbb
add
mov
and
push
enter
fldt
nop
add
xor
pop
popf
push
push
sbb
pop
addr16
out
jge
xchg
icebp
rcrl
adc
aam
sbb
nop
jmp
lock
sbb
cmpsl
std
imul
leave
pop
mov
xor
pop
rcrb
fdivrp
repz
test
and
test
xor
cmp
aaa
in
repnz
lods
push
cmp
mov
movb
push
xor
xor
push
mov
mov
pop
xchg
mov
jns
jae
adc
pop
push
jmp
daa
int
popl
subl
sbb
and
int3
or
xor
dec
test
stc
cli
icebp
push
lea
xchg
jno
mov
lahf
inc
daa
cmpsb
jge
and
lret
subl
jbe
ljmp
inc
in
fmuls
cmc
cmp
rcr
mov
sti
sub
test
mov
rolb
pushf
pop
mov
push
jge
and
mov
push
inc
stos
bound
loopne
jo
in
lock
sti
aad
mov
push
test
out
sbb
push
icebp
dec
mov
push
and
data16
cmp
lods
loope
stos
xchg
xor
jge
mov
cmp
lds
mov
leave
lods
int
sub
pop
test
cmc
arpl
xchg
hlt
mov
lods
sub
es
add
in
gs
test
movsl
mov
fldt
fisttpl
xor
popa
pop
pushf
dec
ljmp
inc
push
xor
xchg
aam
cltd
mov
imul
adc
and
outsb
add
popa
test
out
inc
fsubl
dec
in
cmpsb
dec
push
cwtl
pop
lret
stos
pop
roll
mov
add
adc
mov
aas
adc
mov
or
or
bound
icebp
loopne
push
xor
mov
pushf
lods
repz
or
xchg
jp
scas
sbb
pop
mov
and
dec
imul
pushf
loop
lea
mov
add
sub
rorb
sub
jp
idiv
sub
outsl
jne
bound
jg
xchg
daa
mov
imul
pop
and
jnp
mov
push
jns
dec
cmp
mov
push
lods
jnp
aas
xchg
icebp
ljmp
inc
shrb
std
mov
aad
leave
imul
push
cwtl
test
mov
test
xchg
sahf
mov
sbb
push
add
mov
aad
subl
lcall
mov
mov
mov
filds
out
and
aas
fldenv
dec
sub
ja
test
cmpsb
mov
lods
xor
mov
call
fmuls
dec
sub
negb
insb
push
pop
les
lahf
lahf
mov
test
add
jbe
cmp
pop
pop
jae
sbb
and
pop
into
pop
pop
sub
aad
push
lret
shlb
imul
mov
inc
imul
inc
bound
sbbb
in
jp
or
ficomps
scas
mov
and
sbb
push
movsl
popa
das
xchg
les
ficoms
cmp
ds
xorl
mov
cmp
sub
dec
jl
mov
shll
jbe
fs
popf
xor
mov
adc
sarl
loopne
xchg
dec
std
mov
jae
mov
sbb
outsb
fwait
sbb
or
pop
enter
test
and
leave
mov
shr
inc
rorl
add
pop
stc
lods
fcoml
jmp
mov
mov
or
jno
testl
aam
and
inc
push
imul
stos
aad
jmp
pop
xor
or
call
add
arpl
pop
add
add
cmpsb
dec
pop
in
ret
dec
test
xor
jg
icebp
sbb
iret
xor
xchg
shll
and
xchg
or
ror
gs
and
icebp
imul
xchg
lcall
mov
mov
xchg
ljmp
jb
imul
cmp
or
js
mov
xchg
jb
cwtl
movsb
lret
add
push
add
cmc
dec
mov
lahf
adcb
lock
mov
push
xor
push
jns
hlt
pop
inc
cmpsb
mov
fcomps
inc
out
push
push
and
adc
rcr
cld
inc
rol
jecxz
jecxz
repz
out
int
lods
pop
aaa
and
addr16
sub
in
xchg
pusha
or
psubb
aaa
fsts
adc
or
mov
push
cli
movsl
ret
mov
xor
dec
aas
and
sub
aaa
and
mov
inc
adc
cmp
addr16
push
sahf
dec
adc
add
dec
lahf
iret
iret
adc
push
hlt
xlat
scas
add
ljmp
fbstp
mov
jae
xor
add
in
adc
dec
mov
adcl
icebp
jmp
mov
inc
jno
push
add
sbb
add
lret
int
adc
enter
ja
aam
sub
das
pop
jmp
ss
ja
ret
and
out
cltd
les
sub
sub
mov
outsl
stc
data16
mov
pop
sbb
pop
pcmpgtw
stos
jecxz
mov
pop
in
xchg
cmp
test
dec
add
sub
add
sbb
orl
mov
mov
xchg
mov
dec
inc
and
cmc
fbld
sub
addr16
movups
andb
imul
ret
push
mov
mov
adc
insl
mov
and
jnp
leave
inc
pop
jo
jmp
shrl
sahf
insl
inc
mov
or
dec
mov
adc
inc
aaa
loop
outsb
xchg
inc
test
xchg
dec
fistps
and
mov
leave
or
inc
in
xrelease
divl
lods
cmp
or
es
outsl
dec
test
lahf
push
fstpt
jmp
and
mov
stos
sbb
les
pushw
fisubl
xchg
mov
mov
xchg
outsl
lds
pop
dec
std
cs
test
jbe
mov
mov
adc
ret
roll
jnp
push
cmp
lods
lea
popa
leave
mov
push
xor
cmp
mov
fistpl
xchg
nop
lea
add
daa
into
pop
add
lock
or
mov
adc
mov
and
inc
cld
cmp
or
lea
ret
mov
fsub
stc
shlb
sar
pop
pop
jb
add
add
mov
xchg
insb
push
adc
das
fadds
jae
push
xor
xor
jmp
dec
jnp
jge
pop
loopne
pop
daa
lcall
bound
movsl
sub
inc
cmp
push
sub
sub
enter
pop
jae
mov
repz
enter
cmp
sar
inc
cmpsb
fnstsw
xor
adc
mov
cmp
jmp
mov
icebp
inc
bndldx
test
dec
aad
inc
add
pop
repnz
dec
es
movsl
popa
fdivs
mov
and
inc
jg
sbb
ljmp
sub
cmp
insb
loop
push
sarl
out
movsb
or
push
je
repnz
sbb
add
sti
icebp
shll
rorb
in
fwait
push
das
pop
adc
pop
inc
or
jg
ret
in
jecxz
or
pop
shll
xchg
mov
dec
jb
add
jl
xchg
inc
xlat
out
fidivs
shll
insl
neg
jmp
pop
mov
mov
aad
arpl
cwtl
jbe
rcr
or
mov
bswap
in
mov
lret
scas
scas
mov
es
fisubrs
dec
mov
jmp
push
jp
lcall
sbb
sub
pop
xor
js
inc
or
inc
bnd
or
and
pop
pop
sbb
adc
into
inc
cmc
inc
aaa
xchg
xchg
cwtl
adc
jle
and
aad
xchg
stc
sub
js
and
nop
dec
mov
or
xchg
leave
cltd
std
lahf
xor
cmc
loopne
adc
jb
jns
dec
jg
mov
mov
lret
mov
aam
out
ljmp
rolb
mov
mov
jno
cld
in
call
push
fcmovne
sbb
stos
xor
sub
and
jmp
fsubrl
popf
xchg
addb
or
xchg
push
inc
out
adc
aaa
pop
ficompl
pop
pop
test
aam
enter
hlt
mov
push
imul
test
in
je
mov
pop
mov
adcb
mov
movsl
ret
bound
movsb
ficoms
pop
jle
adc
jbe
cmp
mulb
dec
aaa
popa
jns
sub
fnsave
pop
imul
movups
and
fs
hlt
dec
popa
fcompl
push
push
xchg
jl
mov
pop
add
js
ficomps
fdivs
loop
sbb
jns
jb
gs
push
jno
jge
ret
mov
cmpsb
lods
add
push
pop
dec
das
or
push
push
dec
push
jmp
popf
or
cmpsl
ja
pop
fists
fbstp
push
xor
mov
sbbl
mov
scas
jbe
out
xchg
inc
insb
pop
push
pop
mov
sub
xchg
in
add
jecxz
cmc
pop
inc
loop
cmp
sarl
sahf
mov
fldenv
das
push
xor
cmpsb
pop
adc
inc
fs
cmpsl
notl
addr16
sbb
jb
or
pop
hlt
mov
fcmovne
cmc
sbb
fidivrs
fdiv
lret
popa
sub
sub
aad
xor
add
insb
jl
test
fstps
dec
pop
xchg
and
sub
xchg
sbb
sbb
les
js
std
jbe
adc
add
fdivs
inc
imul
mov
push
shlb
mov
icebp
lock
xchg
mov
sub
sub
ret
imul
push
fldcw
sub
ds
and
cmp
enter
inc
sarl
and
jge
stc
and
popa
data16
jae
ds
push
xor
jp
scas
push
lea
scas
ds
mov
std
imul
jnp
js
int
fsubrl
jns
or
pop
jg
mov
xor
ret
jle
outsl
and
cmpsb
imull
mov
adc
xchg
imul
pop
dec
loope
rcrl
lcall
jmp
fsubr
dec
out
xor
dec
mov
dec
adc
jp
and
dec
jge
clc
lret
xchg
push
cmpsl
aam
xchg
mov
jle
mov
sbb
mov
sbb
jmp
roll
pop
jmp
adc
mov
jne
nop
subl
mov
and
inc
lret
inc
int
fildl
inc
gs
cs
pop
jns
xor
sub
call
fdivrp
aaa
xor
jnp
lret
lock
je
iret
xor
push
inc
movb
je
add
mov
add
jle
dec
gs
push
sarl
pusha
cmp
ds
xchg
adc
push
jno
pop
cltd
inc
push
js
fs
andb
inc
jno
aas
jecxz
pop
push
push
sbb
bound
inc
test
inc
fs
xchg
leave
ret
adc
test
std
xchg
and
mov
push
insl
mov
or
and
sbb
push
pusha
xor
pop
out
in
or
hlt
jge
mov
mov
loop
test
idiv
int3
inc
mov
mov
and
mov
pop
cmp
mov
fisubs
push
mov
jecxz
xchg
hlt
adc
insl
inc
and
cmp
mov
ja
push
int3
xchg
icebp
mov
jmp
rclb
or
lahf
jp
push
mov
sub
adc
shlb
and
xchg
mov
inc
enter
and
inc
addb
cltd
pop
push
mov
xchg
sub
cmp
xor
cmp
clc
mov
outsl
fcmovb
jge
dec
push
and
adc
fstps
imul
push
jg
loop
xor
dec
add
add
jo
pop
sbb
leave
outsb
and
enter
mov
testl
mov
dec
xor
jecxz
inc
cmp
jo
mov
pop
loop
jmp
imul
xchg
std
fdivr
sub
sbb
cmpsl
std
adc
loop
pushf
fincstp
push
add
nop
sbb
push
cmp
sbb
push
jle
cmpl
mov
mov
mov
cwtl
add
xchg
in
and
fisubs
pop
mov
in
mov
adc
fwait
les
mov
cmp
push
dec
call
pop
shll
or
lods
mov
rcrb
ljmp
jb,pt
stos
push
xchg
cmp
rcrl
mov
out
out
repnz
insb
sub
jnp
mov
ja
js
push
mov
sub
fidivs
or
fidivs
mov
push
inc
addr16
mov
inc
add
sub
loop
in
jb
and
fmul
or
roll
dec
or
pop
loopne
xchg
sbb
insl
lret
xchg
int
in
jmp
fs
sbb
fcmovne
dec
addl
testl
and
xor
jb
popl
imul
jl
lret
cmp
cltd
icebp
cmpsl
jmp
dec
loope
adc
lret
jo
and
adc
out
popf
mov
adc
rclb
xchg
push
cmpsb
repz
scas
or
mov
jbe
cmp
mov
xchg
stc
jmp
or
cmp
mov
repnz
mov
xchg
cld
dec
call
fcom
fistpll
sub
fnop
jno
sub
add
hlt
out
das
sbb
add
jns
jl
push
add
sti
xchg
subb
cvttps2pi
mov
ret
orl
mov
and
aad
adc
std
fdivrs
into
fisttps
cmp
leave
out
out
lret
ljmp
aad
loop
sub
mov
xor
in
in
mov
sbb
ficoml
cmp
in
loopne
andb
mov
addl
sub
sti
inc
loop
stos
adc
sbb
inc
lea
bound
xchg
or
add
push
xor
xor
dec
push
lahf
dec
cmp
std
mov
pop
xor
stos
or
pop
push
push
adc
lret
mov
mov
push
adc
fs
add
outsl
jle
add
dec
fwait
jnp
shl
mov
aaa
cmp
push
imul
or
bound
xchg
cs
hlt
pop
sbb
fiadds
nop
adc
subl
in
pop
xchg
inc
sub
pop
arpl
fsubrs
sub
fs
add
aam
lock
cwtl
ss
sbb
mov
fsub
mov
jl
mov
sub
sub
xchg
xchg
in
rcl
sarl
sub
sbb
lock
jne
iret
shlb
pop
mov
test
shlb
dec
cmpsb
cmc
inc
in
sbb
mov
xchg
jbe
out
pop
mov
decl
movsbl
mov
jmp
bswap
in
mov
xlat
jno
jmp
jge
lret
sbb
sarl
pusha
sub
mov
aaa
imull
loopne
popa
inc
xchg
jne
pop
mov
jno
stc
dec
stos
test
repz
pop
mov
jmp
ljmp
loope
push
push
or
cmc
jbe
sbb
rolb
xchg
pop
test
test
loopne
adcl
and
sti
fs
lods
imul
xor
push
es
or
pop
shlb
pusha
insl
push
inc
xchg
mov
mov
push
jmp
cs
lret
or
lock
out
mov
pop
les
and
xor
pop
sub
lret
fiadds
dec
sub
cmp
lcall
push
fists
incl
fs
mov
imul
jl
fistl
stos
rclb
lods
or
loop
dec
shlb
cmp
inc
pop
jmp
ljmp
inc
lock
imul
jge
inc
enter
stos
pop
sbb
lret
cs
pop
hlt
mov
test
xchg
add
jle
add
cmp
mov
test
sbb
xchg
cli
in
clc
add
repz
mov
out
cmp
jo
add
jae
lahf
stos
mov
adc
mov
mov
jle
loop
shl
in
mov
aas
pop
sub
and
repnz
cmpb
mov
mov
shll
cltd
mov
cmp
ret
mov
xor
pop
xchg
das
fcom
fnstenv
and
fiaddl
inc
mov
ljmp
enter
scas
jmp
std
cmp
inc
or
dec
or
or
lods
adc
ss
jne
sbb
flds
xor
int
and
add
mov
sti
icebp
cmpsb
test
sbb
or
xor
push
pop
push
cmc
xchg
sbb
ds
sub
roll
jae
shrb
data16
shll
aam
push
push
inc
shlb
jecxz
pop
adcl
add
dec
daa
add
bound
sarb
outsb
pop
loope
cmpsb
daa
inc
dec
fidivrs
in
jl
dec
adc
sbb
movsb
mov
jo
ss
test
fwait
jp
xchg
and
jbe
and
ret
out
sbbl
cli
repz
pop
ja
sub
sub
sub
xor
push
sub
jb
movsb
dec
aam
stos
dec
icebp
push
adc
dec
push
push
adc
push
xchg
cld
pop
xor
popfw
lock
mov
jg
cld
popa
xor
orb
pop
push
mov
sar
cmp
xor
sbb
fimuls
cmp
ds
xchg
aad
rcrl
lret
push
mov
in
cmp
mov
out
fcompl
inc
xchg
sti
mov
mov
adc
sbb
dec
ret
mov
inc
mov
mov
jmp
mov
cs
mov
out
dec
inc
jl
dec
cmpsl
and
lahf
xchg
jp
sub
jo
xor
mov
add
test
mov
jmp
loope
or
into
sbb
scas
movsw
inc
clc
call
test
cmp
mov
lcall
mov
out
or
push
loop
xchg
test
jecxz
and
lds
loop
lock
out
stc
outsl
cs
cltd
or
jne
loop
lock
cmpsb
out
out
push
xchg
scas
mov
xor
push
lahf
iret
ret
pop
xchg
or
cmp
cltd
into
out
gs
adc
inc
inc
mov
jbe
cli
mov
aad
in
mov
in
sahf
jg
cmc
or
inc
and
xor
xor
xlat
stc
sub
in
mov
out
fs
cmp
stos
outsl
data16
mov
nop
push
lea
mov
mov
leave
sub
add
xchg
jge
cmp
out
outsl
hlt
lods
dec
in
loop
leave
push
cmpsl
pop
cmc
out
and
push
mov
hlt
insb
push
gs
lods
divl
mov
jnp
dec
inc
dec
pushf
push
sbb
xor
int
jp
and
mov
rcrl
jae
je
aas
jle
ficoml
fwait
adc
cmp
sbb
ret
out
or
out
or
jg
adc
mov
ds
sbb
loope
mov
hlt
xchg
mov
shll
xchg
lret
rorl
daa
adc
dec
out
pushf
mov
cwtl
cmc
out
cmp
dec
int3
mov
adc
add
add
xchg
je
shl
sbb
sbb
inc
aad
outsb
sbb
adc
test
scas
mov
pop
jge
iret
mov
jae
sub
adc
repz
insb
gs
inc
lret
push
push
mov
aam
cmp
jbe
mov
pop
push
aas
arpl
ds
xchg
mov
mov
adc
ss
int3
popf
pop
mov
loope
ret
push
cmp
lock
jb
pop
pushf
das
pop
sahf
les
xorl
cld
jbe
jns
dec
shl
lea
cmp
loop
jne
push
xchg
rcrb
cmp
xor
xlat
cld
mov
shl
rol
shr
inc
mov
inc
jecxz
fimuls
sarl
aam
pushf
cwtl
cli
xor
les
sbb
mov
jge
jg
daa
lods
sbb
mov
push
mov
adc
xchg
inc
ja
or
stc
dec
mov
mov
roll
jp
push
fimull
sbb
jne
mov
enter
rol
and
adc
fsubl
inc
or
leave
push
sahf
ljmp
pop
push
jecxz
jnp
xchg
xor
addr16
adc
push
adc
add
scas
sbb
test
xchg
jb
arpl
dec
cwtl
or
push
shll
das
mov
sbb
mov
pop
faddp
sti
aam
pop
and
test
fucom
loopne
lds
pop
out
dec
call
pop
xor
unpckhps
xor
out
jne
sbbl
sbb
jns
xor
test
pop
xor
xchg
mov
xor
mov
negb
mov
mov
aaa
lock
xor
mov
lock
mov
lock
xor
mov
adc
add
pop
or
pop
mov
jp
sbb
cmpsl
mov
or
xchg
adc
add
jecxz
enter
jnp
pop
pop
dec
test
aam
sbb
sub
enter
jl
mov
xor
cltd
cmp
push
leave
int
pushf
and
mov
dec
fidivs
ss
and
call
push
jnp
adc
and
or
shr
test
ret
int3
scas
test
pop
mov
mov
adc
jno
adc
cmp
lcall
clc
jp
adc
enter
popf
hlt
enter
xchg
test
mov
iret
popa
lret
sub
push
cld
xor
lahf
add
dec
push
int
sarl
add
mov
repz
jnp
testb
xchg
icebp
jge
push
nop
aas
jmp
cmp
loop
sub
jmp
imul
pop
mov
jo
mov
push
cltd
bsr
pop
cld
test
movsb
inc
push
xchg
mov
xchg
sbb
int3
and
test
cmp
out
mov
mov
icebp
jb
jns
push
mov
outsb
or
adc
cs
mov
jne
xchg
scas
adc
cmp
cmp
sub
sub
loopne
jbe
add
cmp
push
push
clc
pop
dec
xchg
mov
jge
push
push
pop
inc
lods
das
xchg
movsl
cmp
aaa
aas
fildll
or
shll
inc
push
testb
cmp
push
cmp
pusha
dec
cmp
in
mov
andl
mov
xor
hlt
adc
lret
add
xor
outsl
dec
mov
cmp
jb
and
lea
std
and
mov
adc
add
xor
dec
mov
mul
fdivr
sbb
addr16
mov
pop
sub
jecxz
aas
mov
fsubrl
fisubl
je
adc
xchg
out
xchg
loopne
scas
sub
xchg
sbb
pop
aam
iret
pusha
xor
sbb
mov
sub
fidivrl
hlt
push
cmp
loopne
arpl
adc
add
adc
inc
pop
fadds
rorb
xchg
loope
mov
stos
inc
mov
aam
dec
adc
jnp
addl
cwtl
cmc
nop
js
mov
ret
pop
call
into
and
push
inc
pop
xchg
testb
out
mov
addr16
sub
mov
stc
pop
lret
cmp
sbb
and
fwait
or
jno
jmp
test
iret
inc
mov
mov
popa
mov
adc
mov
aas
aam
mov
dec
pop
in
cmp
or
jg
sbb
rorb
sahf
xor
mov
fsubrl
cmpsl
cwtl
sbb
arpl
stos
sub
ljmp
repz
pop
or
bound
pop
out
test
push
sub
les
mov
cmp
pop
gs
jmp
ret
mov
xor
inc
jecxz
cld
mov
movsl
mov
or
lds
mov
pushf
sahf
jb
imul
outsl
or
and
adc
adc
and
sbb
mov
xlat
aam
pop
sbb
push
pop
fwait
add
stc
dec
enter
sbb
lods
inc
pop
test
mov
add
mov
popf
hlt
adc
cmpsl
mov
jns
push
or
in
xchg
leave
into
lods
xchg
test
das
fistpll
imul
inc
daa
and
xchg
mov
in
add
subl
cs
jg
or
cmp
xchg
cmc
xchg
cmp
gs
js
mov
pop
mov
cmp
scas
ljmp
scas
or
sbb
sbb
aaa
mov
fimull
stc
shlb
cs
sub
jl
cmp
addl
clc
adc
sbb
ret
outsb
out
ret
sbb
movsl
js
sbb
imul
adc
jae
push
call
sbb
fstps
cwtl
movsb
cmp
sbb
lret
test
sub
rcrl
ja
roll
mov
ss
fadds
out
repnz
arpl
dec
out
hlt
popa
cmp
push
jne
ss
cld
sub
dec
fidivrl
testl
mov
fcoms
cmp
add
test
test
out
out
pop
push
imul
leave
dec
jb
jl
cs
or
dec
mov
adc
inc
sbb
out
and
adc
jns
leave
sbb
push
xor
sbb
roll
push
fwait
sti
push
mov
sub
mov
sbb
push
xchg
inc
cmp
mov
inc
dec
pushf
push
mov
cmpsb
inc
jne
sbb
xchg
xchg
cwtl
add
aad
movsb
xor
mov
out
sti
popa
jne
outsl
test
pop
xor
mov
pop
inc
jg,pn
mov
inc
fsub
xchg
and
xor
imul
fidivs
jg
dec
mov
bound
iret
dec
pop
add
mov
mov
iret
and
adc
xlat
mov
lods
push
fs
xchg
pop
stos
xor
pop
pop
mov
mov
and
add
or
dec
mov
jl
adc
lret
cmpsb
push
popa
sub
mov
pop
out
xlat
jge
popa
mov
cmpsb
mov
cli
sarl
push
xchg
pop
pop
hlt
sbb
adc
lret
and
mov
cmp
jae
jne
inc
imul
jno
out
or
mov
mov
fwait
sbb
test
add
mov
xchg
xchg
jge
pop
add
xor
ret
cs
and
jo
ror
ss
push
xchg
cmp
adc
cmp
xor
and
mov
jae
out
sub
add
push
loopne
mov
mov
push
mov
scas
pop
mov
sahf
mov
push
add
mov
mov
jns
leave
lock
inc
and
out
fwait
xorl
lret
pop
xchg
cld
mov
and
push
or
dec
mov
inc
movsl
mov
and
in
sti
push
xchg
push
sub
jg
inc
mov
rolb
data16
dec
out
fcmovu
fcom
sarb
inc
jb
inc
xor
cs
in
jecxz
xor
push
int3
aad
mov
dec
xor
ljmp
inc
cs
repz
sbb
inc
insb
fs
loopne
sbb
data16
and
dec
jge
inc
cwtl
in
icebp
mov
sbb
iret
push
mov
mov
mov
sbb
js
jbe
mov
aas
cs
ljmp
sbbb
fcmovnbe
inc
int
pop
cmp
test
es
test
insb
pop
sbbl
mov
test
lret
cmp
lock
mov
je
add
xor
mov
adc
adc
push
jle
add
sbb
cmpsb
int3
std
xchg
decb
js
push
pop
jo
push
in
sub
add
scas
in
inc
jbe
xchg
cwtl
dec
push
in
mov
roll
push
xchg
lods
push
cmp
scas
push
and
mov
mov
xor
orl
sub
sub
push
addr16
xchg
clc
mulb
sti
push
jle
push
jb
fs
popf
push
jno
lods
xchg
cwtl
push
add
out
sub
jmp
insl
pop
inc
aam
dec
mov
pop
jne
fistps
cmp
and
jge
mov
add
sbb
lods
add
fisttpl
lods
cmp
inc
cmpsb
cwtl
cmp
aam
jp
hlt
test
in
mov
pop
cmp
leave
jmp
pop
push
mov
adc
enter
push
rol
add
xlat
xlat
fisttps
xchg
sbb
jo
inc
loop
sar
fidivrl
xchg
push
xor
mov
add
call
repz
clc
add
mov
into
lret
push
jmp
call
outsl
or
xlat
test
scas
xchg
pop
mov
pop
xor
inc
sbb
dec
lret
mov
repnz
xchg
jns
cmc
in
pop
cld
adc
mov
mov
mov
addr16
cmp
jge
lock
mov
adcl
xor
gs
cmp
addr16
add
lock
xor
paddsw
addb
imul
jmp
rorb
jmp
outsl
leave
jno
mov
adc
and
test
jge,pt
mov
ss
push
mov
popf
and
or
negl
push
xchg
push
dec
jae
ds
addr16
xchg
pop
cmc
sub
cmp
repz
mov
and
mov
clc
mov
fiaddl
call
push
mov
jno
dec
lods
ficomps
mull
rcll
es
fimull
push
pushf
mov
mov
ret
inc
add
and
or
std
popa
outsl
in
repz
hlt
sub
adc
mov
lods
jg
cwtl
pop
lea
mov
dec
ja
mov
or
mov
gs
adcb
mov
jne
pusha
cli
inc
and
sbb
enter
cwtl
jl
rol
out
aam
adc
subb
aam
in
int
push
jmp
or
fstpl
jb
mov
inc
add
cs
sub
pop
mov
cmp
jb
imulb
add
fsubrs
pop
test
jae
das
imul
dec
mov
cld
insl
jp
mov
out
xchg
dec
stos
or
mov
push
jno
push
jge
cmp
ja
cli
jecxz
push
push
mov
xchg
and
mov
dec
sahf
adc
movsl
jecxz
inc
pop
xchg
inc
push
xchg
sbb
mov
add
mov
and
outsl
ficoms
das
cmc
fwait
dec
cmpsl
cmpsl
popw
out
dec
in
mov
lea
arpl
pop
cmp
sarb
mov
push
aaa
jb
daa
sub
es
pop
pop
inc
sub
dec
cmpb
popa
xchg
outsb
pop
inc
push
in
add
sbb
stc
ret
int
js
lea
lcall
xlat
dec
outsl
mov
iret
xor
mov
or
imul
xchg
les
mov
fsubrl
and
out
dec
xor
inc
pop
inc
dec
inc
sbb
cmpsb
clc
xor
or
aas
dec
ret
decl
jecxz
insl
andb
mov
mov
pop
cld
repz
pop
in
add
inc
lods
popf
xchg
adc
push
in
dec
pop
nop
mov
test
dec
or
ret
sarl
aam
gs
lods
nop
xchg
dec
mov
mov
push
sub
add
dec
push
rcrb
outsl
inc
jmp
or
out
cmovae
inc
pop
mov
rorb
mov
jge
cmp
cmp
mov
cmp
dec
popa
sub
mov
dec
ds
inc
xchg
out
pop
mov
js
sbbl
cltd
loope
pop
dec
push
mov
aam
xchg
rcrl
popa
lret
mov
cli
sbb
adc
fnstcw
loopne
rcll
xchg
dec
xchg
inc
cmpsb
sbb
push
pushf
and
int3
inc
outsl
lret
bound
mov
xchg
out
outsl
icebp
clc
jae
dec
fildll
mov
negl
into
jns
or
and
hlt
mov
pop
insb
aam
in
imul
dec
ret
xor
data16
mov
int3
in
arpl
sub
mov
out
sbb
cmp
adc
or
xchg
mov
pop
daa
sbb
dec
mov
jp
mov
pop
aad
out
stos
das
jmp
pop
adc
pop
and
mov
push
cmc
jo
popa
and
xor
ljmp
pusha
dec
xchg
xchg
add
xchg
xchg
test
add
setg
pop
pop
inc
loop
insb
in
pop
out
lods
mov
fists
jbe
jne
jbe
pop
dec
aad
pop
out
adcl
xorl
and
imul
test
int
jp
in
js
lea
sarb
cmc
hlt
xchg
insl
mov
outsl
jmp
mov
jo
sbb
popf
add
rcl
sub
outsl
add
jle
insb
cmp
push
stos
cpuid
insl
fsubrs
dec
sub
test
push
in
or
icebp
pop
push
jg
mov
stc
push
xchg
xor
lock
out
mov
xchg
mov
ljmpw
test
aad
jns
inc
xchg
rcll
cmc
and
add
pop
push
mov
pushf
lea
pop
fstps
cmp
rorl
push
iret
pop
repz
ret
subl
aas
jle
sub
jae
sub
les
je
and
js
dec
int3
loop
cltd
mov
or
cmp
add
and
add
mov
inc
fisttps
scas
ficoml
adc
and
jno
cmc
mov
call
vcomisd
dec
andl
push
sti
daa
and
lret
mov
pop
data16
adc
iret
jae
and
mov
push
fld
or
and
xchg
ja
pop
pusha
push
in
arpl
lret
mov
imulb
in
mov
pop
fiaddl
xchg
cmpsb
mov
adc
mov
fsubrp
mov
inc
dec
xchg
ss
sub
xor
add
mov
jecxz
rcr
pop
jo
mov
mov
pop
dec
adc
add
mov
xor
sarb
adc
into
das
cmpsl
xlat
out
jle
sub
lret
push
mov
outsl
sub
or
rcrb
add
mov
sbb
push
popf
inc
cmp
inc
cmpl
cmp
mov
sbb
les
add
ss
or
pop
lahf
movsl
mov
mov
stos
cmp
adc
jno
push
filds
jns
cmp
mov
arpl
push
dec
inc
adc
fcmove
add
and
adcb
outsb
hlt
pop
push
or
or
xchg
in
popa
or
clc
pop
addb
scas
stos
clc
pop
pop
adcb
cli
and
je
and
repnz
imul
adcl
add
gs
inc
cs
js
inc
mov
and
jge
lock
test
xchg
mov
add
adc
mov
cmpsb
fsubs
pop
pop
dec
stc
xchg
pushf
fwait
subl
notl
jle
dec
hlt
cmp
pop
cltd
cld
ret
xor
mov
dec
insl
frstor
in
xchg
push
int
jb
std
xchg
pusha
out
imul
push
cmpsb
shll
sub
mov
pop
mov
enter
mov
sarb
mov
pop
test
push
xchg
rcr
pop
js
decb
pop
outsl
xchg
out
cld
cli
test
fcoms
push
into
push
xchg
sub
fldt
scas
dec
sbb
bndstx
aas
xor
sbb
xchg
sbb
push
xor
in
xor
jle
sbb
inc
push
lock
jb
jmp
enter
aad
sub
and
mov
jge
aas
sahf
mov
cli
xor
mov
jae
sub
sbbb
xlat
test
push
fldl
leave
xchg
cmp
xchg
int3
adc
outsb
and
mul
xor
in
movsb
shll
jne
xchg
jns
lcall
or
or
scas
popa
lret
xor
xchg
xchg
mov
fsubrl
push
mov
xchg
hlt
fwait
sub
xchg
mov
pop
xor
mov
pushf
jmp
adc
movsb
int
stos
xchg
xchg
mov
scas
hlt
rcl
ret
fists
dec
out
push
pop
push
mov
jge
fwait
mov
inc
sbb
outsb
mov
fldt
xor
mov
ja
bnd
mov
jo
push
xor
push
xor
jnp
jle
test
push
jne
sbb
pusha
arpl
adc
int3
pop
add
orb
jo
mov
aad
sbb
notl
ret
test
or
push
xchg
and
cld
mov
push
push
movntq
cli
outsl
out
pushf
outsb
xlat
popf
xchg
inc
inc
pop
pusha
pop
js
jle
mov
push
sub
movsl
jle
fiadds
aaa
insl
pushf
negb
and
mov
inc
or
pop
mov
pop
push
pop
mov
xor
mov
or
xchg
insl
jns
nop
subb
cmp
enter
pop
xor
idivl
cmc
mov
jmp
pop
xchg
lods
inc
or
or
cmp
jnp
cli
pushf
hlt
scas
in
mov
shll
bound
sub
clc
jp
popa
sbb
test
data16
jle
test
int
mov
add
std
jp
jae
lock
lods
pusha
adc
cmp
xchg
or
ljmp
leave
sbb
jl
inc
dec
mov
stos
mov
mov
ret
push
popf
xchg
pop
xor
pusha
mov
xchg
in
mov
int3
or
push
je
imul
xor
iret
mov
jmp
push
je
lret
jo
jp
imul
mov
jbe
movl
into
push
inc
ljmp
dec
mov
dec
mov
scas
pop
decl
imull
aas
les
fmull
ja
mov
inc
movsb
arpl
add
cmc
fmuls
xchg
mov
sti
imul
xor
mov
cmpsb
sub
lea
inc
sub
scas
xchg
adc
sub
mov
mov
lods
xchg
es
pop
enter
negl
jnp
or
jnp
cmpsl
push
pop
ljmp
ror
adc
push
rcrl
inc
mov
lds
push
cmp
daa
arpl
or
divb
rcll
test
cmpsb
mov
js
subb
fisttpl
fimull
js
fimuls
mov
or
sub
push
in
in
sbbl
pop
and
fiaddl
lcall
add
imul
xchg
mov
das
outsl
fdivl
and
mov
xchg
jmp
xchg
mov
dec
idivb
andb
adcb
add
outsl
jp
stc
shrb
pop
xchg
pop
ret
mov
xchg
cltd
or
jo
cld
ds
xchg
cmp
mov
add
rolb
ja
dec
mov
mov
dec
lret
inc
mov
sbb
dec
jge
ss
out
push
imul
sahf
and
mov
hlt
and
inc
mov
movsb
or
pop
and
int
cmp
ss
or
push
arpl
pop
stos
push
aas
inc
jg
sub
gs
ljmp
in
mov
in
movsb
cmp
xor
push
cvtdq2ps
lcall
outsb
inc
xchg
pushf
es
or
mov
lods
jo
popf
push
popf
sub
fidivrs
jae
push
ja
push
out
hlt
inc
sbb
dec
mov
mov
stc
push
bound
nop
loopew
aaa
push
sar
cltd
cmp
pop
clc
call
mov
inc
dec
rcrb
push
add
cmpsl
pop
lock
addr16
cmp
mov
cmpb
sbb
mov
sbb
ss
mov
ja
cltd
pop
cmp
mov
pushf
movb
push
testb
sbb
movsb
inc
mov
cmp
adc
push
std
movsb
pop
xchg
dec
sub
in
pop
mov
push
sbb
idivb
sbb
ret
xchg
dec
dec
xchg
ret
push
sub
inc
pusha
repnz
push
gs
xor
into
pop
lret
push
shlb
lods
sub
gs
push
out
movsl
cmpsb
push
sti
or
pop
enter
fucomi
inc
pop
imul
addb
cwtl
fsub
or
popa
push
mov
aad
or
pushf
test
inc
addr16
in
cli
cltd
movsl
lods
push
fbld
xorb
mov
sub
js
sbb
xor
xchg
sub
add
popf
adc
mov
cld
push
shrl
shlb
jecxz
pop
dec
cmp
lret
ret
jae
addl
lret
frstor
jne
sbb
xchg
mov
mov
cmpsb
push
sarb
sub
jns
jmp
nop
les
movsb
out
and
jo
push
rorb
and
in
das
test
enter
cwtl
push
or
mov
ret
mov
push
add
lea
sbb
outsl
pop
inc
xorb
add
dec
jno
cmp
dec
cld
pop
xor
movsb
jmp
add
and
pusha
sub
testl
int
aas
test
and
jp
fldt
mov
jmp
in
jb
insl
mov
xchg
pop
fldcw
mov
mov
dec
xorb
ret
hlt
mov
daa
bound
xor
int3
inc
pop
in
mov
fwait
test
adc
addr16
std
xchg
adc
stc
test
aaa
inc
out
adc
popf
jo
decl
push
dec
dec
cli
pusha
call
mov
in
adc
sub
cmpsb
push
sti
dec
xchg
shll
adc
outsl
fldl
pop
cmc
sarl
pop
js
call
addl
jne
xor
inc
cmp
lahf
es
adc
lcall
clc
xchg
lods
mov
and
pop
sub
xchg
fs
ljmp
aas
ret
fwait
add
fmuls
sarb
mov
xacquire
test
fisubrs
push
fld
rcl
iret
pop
push
lds
imul
lock
jnp
cmp
lods
sbb
lds
cmp
mov
repnz
shl
lret
cmp
aam
sbb
imul
lret
mov
cld
fld
jbe
fsubl
push
push
bound
xchg
dec
adc
cltd
sbb
sbb
jg
mov
pop
mov
or
xchg
jle
xlat
cmpsb
cmp
ds
leave
pusha
jae
mov
jle
ret
fcmovb
in
cmp
hlt
or
lea
push
inc
pop
cwtl
pop
dec
popf
out
test
sub
adc
mov
bound
push
leave
movsb
ret
dec
sbb
and
nop
sti
fwait
icebp
je
mov
add
jle
and
subb
jns
mov
loopne
lds
lock
scas
jmp
xchg
inc
jb
test
mov
mov
negl
je
push
data16
or
aam
cmp
pushf
push
and
ljmp
sub
pop
shlb
sahf
testb
jmp
xor
stc
and
mov
add
inc
mov
mov
std
and
inc
and
add
jl
loopne
adc
xchg
fimuls
das
cmpsb
xchg
or
stc
xorb
mov
pusha
push
mov
mov
push
scas
xchg
sub
lret
pop
sub
fidivl
push
sub
inc
mov
or
xor
pop
ss
ljmp
fildl
fadd
jge
mov
inc
or
push
mov
push
or
xor
inc
adc
ljmp
test
or
inc
ficoml
repnz
inc
cmp
in
mov
lcall
fdivrp
daa
insb
out
das
fcompl
hlt
ss
xchg
mov
movsl
fistl
dec
stos
shrb
add
mov
mov
insl
stc
or
stos
hlt
shll
fisubl
adc
dec
test
and
clc
in
aaa
jnp
jmp
xchg
dec
sbb
lret
cmp
cld
jae
pop
insl
insb
inc
jg
in
inc
and
and
mov
xchg
mov
xchg
dec
jo
xchg
repnz
sbb
xchg
mov
mov
movsb
jl
xchg
repz
sub
sub
int
negb
add
and
inc
insb
pop
stos
jg
loope
xchg
test
lods
or
push
icebp
outsl
and
push
xor
mov
imul
mov
mov
cmc
pop
inc
ss
sbb
daa
dec
or
jp
jp
out
push
xchg
mov
push
jp,pn
inc
cmp
icebp
test
dec
xor
dec
jns,pn
pop
push
push
imul
dec
ds
fisttpl
push
mov
mov
cltd
push
aas
test
insb
push
je
add
je
mov
xchg
adc
push
mov
lods
sub
test
adcb
mov
es
sahf
jae
movsb
repnz
andb
push
out
cs
int3
jo
incb
push
pushf
mov
cmp
loop
outsl
jae
shlb
fcmovu
sahf
das
sbb
sahf
add
push
lcall
test
xchg
cmpsb
pop
in
jg,pn
xchg
ss
das
cmp
push
fidivs
push
lds
aaa
int
cmp
cmp
inc
leave
or
or
nop
fimuls
push
mov
cltd
jo
outsb
jb
adc
xchg
fldenv
lret
adcb
test
pushf
inc
mov
mov
mov
ror
movsb
pop
or
out
test
sub
push
fisubl
les
mov
mov
nopl
popa
in
dec
js
scas
fwait
cmp
xchg
hlt
ret
fstcw
dec
xchg
xchg
mov
mov
rol
cmp
mov
xchg
or
jb
push
mulb
dec
mov
or
dec
pop
std
or
jo
jbe
outsb
scas
loop
movsb
into
sub
cmpsl
test
loopne
sbb
adc
into
dec
pop
imul
divl
mov
mov
adc
clc
outsb
or
lret
xchg
clc
and
and
dec
lcall
lds
mov
sub
shr
add
cwtl
testl
lahf
or
mov
mov
add
sbb
mov
out
pushf
cmpsb
or
adc
jae
push
xchg
push
mov
pushf
ja
xor
jmp
xchg
push
scas
clc
aaa
cltd
cld
mov
push
test
inc
mov
cwtl
enter
and
clc
mov
mov
pop
push
push
cmpb
or
adc
fcomi
and
bound
divb
es
jp
loopne
xor
mov
xchg
lea
adc
push
xchg
loopne
fwait
popa
sarl
mov
lds
mov
jl
push
adc
loop
ss
push
mov
cltd
jg
adc
pop
push
lahf
lcallw
stc
mov
and
xchg
pop
loopne
dec
mov
frstor
shr
rorb
cmp
sti
jae
pop
in
scas
push
or
bound
mov
sub
mov
push
pop
fidivl
pop
aas
data16
scas
cmp
pop
leave
int
dec
popfw
pop
mov
loopne
les
call
js
jmp
aad
mov
xor
test
filds
loopne
xlat
leave
adc
xor
movsb
cmp
test
and
xchg
pop
push
movsl
je
lea
jecxz
addr16
cmp
xchg
mov
cmp
lods
cmpsb
in
jno
sub
popa
dec
mov
enter
push
dec
mov
arpl
and
shlb
xor
int
cwtl
ja
cmpsb
or
or
imul
das
dec
clc
adc
xchg
mov
cld
xchg
inc
nop
movsl
mov
jmp
sub
stc
pusha
push
cmp
push
addr16
mov
cltd
xchg
pop
pop
rcrb
arpl
add
iret
mov
jbe
daa
mov
outsl
in
sbb
arpl
push
xor
sub
jnp
pop
testb
mov
sbb
popf
pop
add
nop
lahf
mov
inc
test
ss
iret
jne
out
lret
mov
and
fistl
movsb
es
adc
mov
aaa
and
inc
invd
stos
dec
sbb
in
and
mov
jns
and
int
pop
gs
push
aas
mov
out
test
ljmp
jns
jp
in
int3
sti
jg
adc
sahf
mov
data16
cmp
adcb
test
test
roll
xorl
jle
gs
dec
aaa
fnsave
mov
iret
hlt
jne
push
push
test
test
mov
xchg
fbld
jge
ss
shrb
cmp
push
adc
mov
fcomi
add
mov
mov
adc
xor
dec
push
dec
jne
fidivrs
out
scas
ss
rorl
adc
xor
rorl
pop
imul
out
fwait
test
outsl
dec
cld
mov
dec
test
shr
dec
loop
addr16
pop
ljmp
bound
jl
dec
sbb
in
adc
mov
cmp
and
push
sub
pop
sbb
nop
push
xchg
cwtl
out
adc
std
repnz
loopne
popf
lods
and
pop
inc
jne
inc
enter
adc
sti
sbb
xchg
lods
or
cs
aaa
insb
jp
sub
mov
sbb
mov
mov
icebp
mov
je
ret
and
loopne
rcrb
inc
dec
rcrb
mov
fwait
test
call
dec
or
xor
jb
pop
jbe
add
xor
xchg
insb
aaa
push
pop
fmul
and
adc
push
test
sbb
adc
scas
or
sbb
test
and
scas
cli
rorb
js
jno
jns
arpl
pop
fistpll
cltd
xchg
mov
push
leave
dec
and
pop
push
aad
sbb
loopne
mov
insb
cmp
das
jns
fdivp
xchg
out
mov
pop
mov
push
mov
pop
mov
or
sbb
sarb
xor
add
enter
xor
or
out
lods
push
ret
jbe
xchg
and
filds
cwtl
rcr
xchg
fmul
sahf
fldcw
stos
jmp
fildl
cmp
mov
sub
repnz
and
out
cltd
int3
sbb
andl
sbb
test
lret
rcr
decl
add
popa
cmp
push
cs
call
dec
arpl
jns
outsl
xchg
aad
xor
dec
jecxz
pop
inc
js
arpl
or
testl
les
outsl
or
or
add
cmc
xchg
andl
push
bound
fidivrs
out
push
cwtl
sahf
pushf
ds
cmp
sub
push
add
mov
adc
mov
dec
fldl
rcrb
iret
test
jl
xchg
stc
add
push
mull
cwtl
es
inc
rolb
pop
mov
int
pop
jno
or
out
mov
enter
push
ret
xchg
arpl
sbb
lcall
lcall
nop
push
mov
cmp
jmp
imul
jecxz
push
test
add
dec
mov
imul
stos
mov
jl
leave
xchg
mov
push
jo
xor
pop
enter
sbbl
xlat
test
cmp
mov
pop
adc
adc
add
add
into
hlt
shl
push
sub
inc
xor
and
mov
cld
out
dec
add
rol
iret
pusha
popf
rcr
outsb
nop
jecxz
rclb
dec
in
jmp
pop
pusha
inc
jns
aam
add
cmp
inc
jge
movsb
sub
bound
loopne
outsl
out
add
jns
jecxz
or
imul
movaps
mov
bound
pusha
or
outsl
stos
sbb
dec
loopne
aad
inc
cmpsl
ljmp
in
subb
shr
or
jge
frstor
jae
mov
push
ss
dec
mov
scas
sahf
loopne
adc
pop
lds
jno
or
push
add
out
mov
mov
pop
mov
das
or
movsl
stos
and
imull
xchg
fmull
jne
sbb
mov
sub
mov
fnstcw
xchg
adc
mov
lret
adc
es
jo
mov
jno
push
pop
add
mov
int
icebp
inc
sbb
mov
cltd
xor
mov
mov
push
sahf
outsl
fidivrl
sbb
push
add
dec
mov
dec
iret
xchg
shrl
adcb
adc
push
dec
jno
push
fildll
push
and
xchg
mov
mov
js
xlat
mov
sub
rcll
pop
inc
call
mov
cmpb
mov
inc
incl
mov
add
pop
push
int3
ret
xchg
sub
inc
rcrl
pushf
js
into
outsb
xlat
in
ficoms
or
std
adc
pop
xchg
pop
lret
lret
addr16
adc
repnz
xchg
sahf
addr16
dec
jge
jecxz
test
fwait
adc
adc
repnz
popf
mov
imul
push
mov
data16
dec
mov
mov
inc
inc
add
sub
push
sbb
scas
add
or
outsb
dec
cltd
sahf
out
pop
roll
and
pop
ds
pop
js
enter
in
imul
stc
fdivl
xchg
xor
rol
fldenv
push
mov
cmpsl
mov
inc
test
jae
pop
cmpsb
sbb
jg
inc
push
fnstcw
aam
and
in
insb
cmp
dec
and
dec
flds
mov
popf
mov
jle
mov
movsb
repz
loop
cmp
jo
mov
fstl
notb
mov
jecxz
hlt
xchg
loope
stos
fadd
xchg
cmp
pop
loop
dec
pop
push
cmc
or
les
adc
adc
setle
pop
mov
pop
fmull
aad
rcl
filds
stos
insl
lcall
mov
loope
mov
xor
or
ret
jg
addb
sbb
pusha
mov
pop
shlb
dec
or
and
jle
daa
sbbb
add
enter
pushf
fldenv
adc
scas
arpl
nop
xchg
and
lret
mov
in
xchg
dec
xchg
stos
mov
or
add
xchg
sbb
ret
scas
push
mov
jle
xchg
nop
test
in
stos
repz
insb
jns
pop
xlat
stos
xchg
inc
repnz
testl
aaa
mov
gs
pop
jnp
sub
adc
out
adc
nop
mov
imul
dec
jl
std
adc
lea
xor
sub
push
fsubs
or
mov
mov
adc
sarl
jne
add
rclb
dec
add
sbb
sarb
shll
icebp
es
push
adc
icebp
cmpl
popa
rcrb
gs
sbbl
into
out
aam
pop
bound
push
addr16
and
add
xor
mov
les
xchg
inc
dec
cmp
sub
lret
jl
cltd
jle
add
adc
in
sub
xlat
icebp
and
push
das
cmp
and
jo
sub
lock
inc
inc
adc
fmuls
das
xlat
jle
pop
idivl
lods
add
mov
lea
in
sub
adc
lcall
addr16
jmp
xlat
mul
xchg
enter
fistl
movsl
imul
ljmp
sbb
jb
mov
cld
lcall
inc
into
mov
push
push
add
cli
jp
inc
in
sbb
pop
dec
movsb
adc
out
scas
shr
xlat
mov
in
jae
fidivs
imul
outsl
xchg
scas
cltd
xchg
push
mov
divl
push
loopne
inc
shll
mov
or
bound
sti
jae
mov
sbb
in
jmp
fdivrs
clc
pushf
xchg
aaa
vcmpps
ja
imul
mov
and
outsl
comiss
mov
icebp
sbb
cli
int
and
sbb
pop
adc
outsb
lret
aaa
fs
fmull
adc
xsha256
mov
xorb
daa
adc
mov
sub
xor
cmp
cld
lcall
sbb
ljmp
inc
or
lds
xlat
hlt
push
lds
scas
cld
xchg
and
mov
pop
add
out
out
dec
dec
add
or
js
aaa
sub
push
ljmp
push
sar
icebp
inc
add
jne
jp
ja
sbb
pop
push
mov
xchg
xchg
push
popa
movsb
dec
xor
orl
inc
sbb
popa
jmp
pop
lds
pop
xchg
adc
lea
jnp
or
ffree
jp
loopne
pop
and
bound
cmpps
flds
xchg
gs
xchg
jbe
scas
lods
les
das
xor
out
mov
jne
fnstenv
ja
jp
mov
xorb
xor
jmp
inc
rcrb
mov
cmp
sbb
add
sbbl
jne
aas
xchg
dec
xor
dec
mov
xchg
mov
notl
hlt
lahf
ja
cmp
ret
cmpsb
stc
nop
sarb
scas
int3
inc
into
cwtl
addr16
ljmp
or
mov
push
jns
pop
jmp
fprem
outsb
jns
ljmp
aas
xor
stc
dec
cmp
cmpsb
in
lea
dec
mov
lcall
test
popf
cli
sub
cmp
or
std
cmc
inc
add
mov
and
xchg
mov
cmc
pushfw
dec
mov
scas
jp
ljmp
jb
cmovne
stos
adc
inc
cs
cld
mov
adc
out
addr16
adc
push
imul
or
es
xor
rolb
inc
jo
sarb
inc
std
iret
jg
int
jns
push
rcrl
test
out
adc
mov
lret
or
mov
or
add
ds
mov
icebp
pop
mov
imul
ja
leave
xchg
fstps
jge
sub
lods
aaa
js
shrl
jb
dec
or
jne
lds
mov
xor
push
cld
aas
js
dec
mov
mov
lods
leave
repnz
cmp
ljmp
sub
jb
andb
mov
push
or
stos
les
mov
dec
icebp
inc
je
pop
jae
imul
add
fists
jp
mov
cltd
lods
lods
mov
jecxz
dec
rolb
fsubrs
out
je
inc
push
jb
jmp
cmp
stos
repz
rcll
gs
cmp
fucomip
push
mov
sarl
adc
cmc
lret
cmc
repz
cmp
jbe
leave
xchg
add
jbe
lret
test
ss
outsb
adcl
ss
mov
popf
in
in
inc
scas
pusha
ja
pop
imul
sub
xor
imul
nop
mulb
es
pop
xchg
js
mov
pop
cmp
and
jp
addr16
sbb
push
jmp
fidivl
enter
test
dec
mov
cmp
mov
pop
fwait
push
cmp
bound
and
andl
sub
xorb
pop
inc
mov
iret
xchg
mov
lcall
das
push
adc
adcb
mov
ret
inc
cmp
pusha
out
inc
inc
dec
mov
cld
dec
pop
rorb
shl
fdivrl
imul
fmul
cmp
icebp
mov
mov
mov
out
out
outsl
inc
std
mov
push
insl
pop
loop
adc
loopne
sbb
cli
push
adc
mov
and
fcomps
mov
into
mov
sbb
xor
cltd
mov
fldl
ss
lret
stc
and
sub
insl
mov
scas
mov
scas
mov
add
mov
imul
shl
cmp
les
push
outsl
imul
andb
xor
xor
fisubl
fiaddl
lret
xorl
ds
push
gs
sub
leave
idiv
testb
mov
ds
fiadds
test
add
sbb
aas
push
loop
imul
push
mov
dec
xor
out
and
mov
lahf
pushf
mov
adc
cmpsl
and
movsb
out
lock
rcrl
mov
and
dec
sub
jbe
into
call
inc
lea
xor
call
cmp
sbb
push
cmp
sbb
or
mov
mov
inc
inc
xor
cmc
xor
or
daa
loope
popf
inc
dec
cmp
lahf
xlat
inc
inc
daa
or
scas
cli
fucomip
fmull
dec
scas
roll
ja
clc
push
mov
faddl
lods
and
mov
loop
orl
or
mov
fcomps
outsb
inc
stos
out
sbb
mov
pop
jecxz
sbb
sbb
rcr
xor
jmp
es
mov
sbb
notl
mov
dec
je
test
lahf
into
ss
inc
nop
pop
popf
int3
xorb
cmpsl
inc
lea
rcrb
mov
add
ljmp
aaa
out
dec
xor
xor
iret
cltd
mov
mov
movsb
sti
lds
push
or
dec
cwtl
ret
lds
mov
sbb
push
loop
xchg
imul
lea
jp
je
and
xor
dec
ss
mov
sbb
sbb
mov
aam
cs
adc
adc
sbb
je
cli
shrl
ror
in
push
movsb
gs
inc
cs
int3
pop
xchg
andl
negb
test
mov
sahf
adc
stos
hlt
addr16
test
outsb
jp
lcall
inc
and
and
test
push
xchg
loop
pop
ljmp
adc
mov
pop
call
add
jl
lcall
insl
mov
mov
sbb
sbb
aam
dec
pop
lds
mov
xchg
or
mov
repnz
shl
cmp
mov
push
inc
mov
stos
adc
xchg
pop
xor
adc
clc
lods
xor
hlt
frstor
inc
popa
xchg
scas
push
lods
inc
popf
mov
es
mov
loop
mov
and
mov
sbbl
test
lea
cltd
stos
mov
lret
pop
fs
pop
push
adc
push
mov
mov
js
dec
or
xor
mov
jbe
mov
frstor
outsl
mov
movsl
mov
add
add
fbld
cld
pop
inc
add
pop
scas
add
sub
mov
ret
jo
mov
mov
jns
mov
gs
loop
and
xor
mov
rclb
out
std
lcall
pop
sbb
push
jbe
xlat
daa
imul
mov
cmp
fsubrl
mov
cmp
ljmp
repnz
sub
add
sbb
in
les
subl
xor
fmull
int3
pop
xchg
dec
xor
fistl
es
sub
lret
movsb
dec
mov
pushf
jbe
popa
sbb
iret
icebp
cmp
aaa
hlt
es
push
pop
shl
fwait
and
xchg
and
xor
pushf
push
and
das
mov
lea
push
ljmp
push
cmp
mov
pusha
in
ljmp
out
mov
lock
pop
add
jb
negl
pop
xchg
inc
arpl
pusha
jb
add
jle
ret
inc
sub
push
repz
or
stc
fsubs
mov
ja
ret
xor
inc
pop
cmpsl
jne
addb
xor
andl
pop
push
mov
sti
cmc
es
cwtl
fwait
aad
mov
aas
hlt
mov
jne
dec
fstpt
popa
push
or
xor
pop
adc
adcl
inc
imul
fsubrl
push
hlt
or
cmpsl
sbb
push
add
dec
leave
inc
rclb
notl
movsl
adc
xchg
imul
inc
aad
push
xor
cli
dec
imul
test
sub
xor
pop
rcl
xchg
mov
nop
sti
push
addl
sub
rcrb
jns
add
popa
mov
sub
sbb
mov
out
movsb
dec
orb
fstps
xchg
punpcklbw
add
add
xchg
lea
dec
push
add
xlat
mov
loopne
insb
inc
movlps
cwtl
dec
test
outsl
movl
mov
cwtl
test
adc
call
jns
popf
add
mov
stos
sbb
push
and
pop
push
jbe
sub
in
sbb
dec
pop
pushl
cmp
mov
mov
adc
es
or
push
jae
and
xor
lahf
dec
imul
adc
add
or
and
add
out
pop
jno
aas
add
sub
popf
leave
mov
mov
negl
mov
push
xchg
test
dec
lcall
xchg
iret
jl
jecxz
cmp
pop
and
shlb
xchg
push
sbb
mov
idivl
and
lret
lahf
cmpsb
test
xor
scas
mov
nop/reserved
mov
imul
xorl
test
or
adc
mov
shrb
or
in
negl
mov
mov
js
xor
sub
jo
mov
adc
push
nop
inc
int3
inc
mov
push
push
cmpsl
jg
mov
and
repz
das
xchg
dec
fdivr
int
ljmp
sbb
jecxz
loope
xchg
mov
aaa
mov
push
jne
sub
mov
sbb
pop
lods
test
imul
xchg
popf
iret
xor
movsl
pop
adc
xchg
scas
mov
cltd
in
aad
out
add
push
mov
dec
sbb
mov
mov
cmpsl
jecxz
or
xchg
sub
mov
jge
fstps
andb
iret
xor
loop
ret
lahf
lcall
movsb
loope
mov
push
mov
pop
adc
ret
repz
jg
and
xor
lea
xchg
mov
adc
movsl
outsl
mov
pop
movb
adc
inc
sbb
pusha
movsb
push
cmp
pop
jmp
cli
sbb
and
inc
mov
leave
or
ljmp
rcrl
insb
add
or
das
rorl
mov
daa
xchg
test
jge
pinsrw
aam
xor
add
jmp
and
aaa
jp
test
or
add
dec
mov
push
lahf
sub
cld
pop
mov
push
out
jae
jns
leave
jnp
ljmp
mov
pop
mov
jl
adc
sub
add
and
out
ds
xchg
and
pop
scas
dec
push
mov
ss
cmp
sub
outsb
fstp
mov
test
sbb
fwait
bound
aaa
lret
aad
mov
xorb
idivl
ss
iret
or
mov
nop
jae
incl
lahf
xor
pop
pop
dec
jge
or
xlat
fwait
xorb
fs
xor
loope
xlat
push
mov
and
inc
shrl
pop
mov
sub
ja
mov
dec
outsb
fildl
sahf
jno
jl
es
xor
xor
ljmp
pop
push
in
and
in
xor
repz
add
mov
les
enter
stos
movsl
int3
nop
pop
adc
test
xlat
in
adc
inc
bound
pop
push
shll
jno
loopne
loop
dec
enter
push
mov
mov
fsubrp
into
lds
push
nop
out
in
jno
sub
xchg
aaa
dec
lea
cli
dec
adc
mov
pop
insl
sub
add
imul
movsb
roll
xchg
inc
insb
or
ja
jl
sub
cwtl
dec
pop
or
push
outsb
add
imul
in
mov
mov
aad
loop
mov
mov
repnz
sub
daa
or
pop
enter
hlt
mov
sbb
mov
cs
and
mov
jmp
adc
fidivrs
arpl
sub
mov
xor
sub
ss
test
jbe
ds
dec
dec
mov
mov
shll
push
and
xchg
shrl
sbb
outsl
popl
jmp
stos
loop
pop
xchg
jl
dec
es
and
test
push
xor
sub
aas
sub
or
jecxz
in
inc
incl
push
jge
jns
inc
sbb
jg
movaps
sub
shrb
ret
adc
stc
stc
imul
jge
jge
sbb
inc
je
notl
jo
lahf
mov
jbe
xor
popa
push
or
pop
or
sub
ja,pn
sbb
das
mov
pop
ljmp
mov
ja
sub
mov
aad
test
aas
xchg
mov
insb
jb
xchg
sub
in
in
mov
shl
clc
cmp
gs
cltd
sub
data16
jns
cs
lahf
adc
out
lret
mov
js
xor
sub
mov
ja
sub
add
insb
xchg
fcmovbe
rcrl
sahf
sub
xchg
sub
das
jno
divb
cmc
dec
and
fiaddl
jg
lock
add
shrl
pop
inc
mov
fs
pop
nop
out
adc
loope
movsl
adc
popf
dec
cmp
movsb
popf
jae
adcl
sub
or
pop
xor
mov
xor
mov
subb
xor
cltd
mov
sahf
popa
add
mov
orb
fisubl
in
jg
in
adcl
subb
repz
xchg
mov
test
xchg
gs
cmpsl
and
add
pusha
rcrl
movsl
dec
mov
sbb
call
push
sbb
push
adc
sti
inc
xchg
mov
push
inc
sub
insl
mov
sbb
sbb
aas
cld
movsb
or
push
stos
push
lea
mov
into
cli
xchg
pushf
adc
xor
mov
push
andl
and
jmp
inc
xchg
movsb
push
test
cs
ret
mov
dec
jb
xchg
inc
aam
aas
stc
lock
pop
dec
test
jecxz
jno
mov
add
and
ret
jo
mov
arpl
mov
lcall
aam
lds
push
outsl
movsb
lret
ja
aas
pop
pushl
push
push
stos
adc
cmp
push
rcrl
push
stc
xchg
ficoms
and
nop
and
or
sub
into
in
xor
push
movsb
or
xor
mov
xor
imul
scas
pop
ret
je
fadd
xchg
lret
in
and
adc
cmp
add
add
dec
inc
mov
test
adc
fwait
ss
sub
and
mov
mov
loop
movsl
sti
sbb
sbb
push
testl
out
les
xor
mov
fwait
test
stos
in
jmp
jle
jb
cmpsb
loope
stos
pop
pop
jne
jl
test
ret
pusha
ret
xor
xchg
jo
aas
add
xchg
mov
fs
push
int
pop
loope
inc
ds
shrl
or
xchg
insb
loopne
jmp
or
aas
jle
xchg
push
xor
mov
scas
insb
pop
adc
pop
xchg
jno
arpl
dec
lods
lret
inc
out
ja
inc
mov
jne
inc
mov
fdivrs
scas
sub
mov
cmp
nop
out
mov
out
pop
loop
test
mov
mov
xchg
cmp
pop
add
and
js
or
sbb
repnz
data16
push
cmp
movsl
push
mov
push
ficompl
or
sub
inc
ds
jne
rorb
jbe
jbe
push
out
pop
mov
dec
pushf
cmpsl
jmp
cmp
sub
fnstenv
sbb
pushf
mov
cld
cwtl
movsl
push
mov
hlt
loop
testl
iret
lea
inc
sub
mov
test
mov
pop
lods
das
or
or
outsl
xchg
mov
adc
push
cmpsb
in
mov
dec
xor
inc
mov
or
int
xchg
adc
andl
xor
gs
into
mov
inc
enter
ffree
add
and
mov
jge
mov
mov
mov
lcall
or
add
xor
shll
xlat
xor
data16
or
xor
mov
or
lock
lret
mov
js
push
lret
mov
xchg
sahf
cli
lock
jb
pusha
ret
and
sub
inc
imul
pop
shl
dec
mov
cmp
fsubp
xchg
sub
mov
ljmp
add
jbe
pop
adc
push
and
fwait
divb
aam
lcall
jns
mov
je
std
xchg
in
dec
cmp
test
stos
add
pop
cmp
mov
push
pop
ret
mov
mov
ja
fnstcw
xchg
mov
gs
push
xchg
movsl
jp
cmc
test
stc
mov
out
mov
mov
out
aaa
ja
test
or
push
sub
aam
xchg
add
pop
scas
mov
mov
int
dec
jo
sbb
shl
mov
in
fwait
mov
sarl
inc
ja
daa
jmp
cmp
test
cmpsb
dec
popa
ja
dec
into
pop
mulb
out
dec
into
fistl
andb
stc
ret
aad
add
adc
jne
shrb
cmpl
cmp
jbe
jecxz
lods
fdivs
jbe
aad
or
push
jnp
mov
movl
xor
shr
xor
insb
stos
insl
push
xchg
pop
push
sub
add
std
jns
inc
cli
clc
mov
pop
cltd
and
test
ja
inc
ds
shrb
pop
gs
pop
cwtl
xor
push
mov
sbb
xor
sbb
sbb
pop
sbbl
mov
pop
lds
lock
mov
clc
sub
mov
adc
mov
add
shr
sbb
fistps
add
mov
mov
fwait
dec
add
pop
movq
outsb
imul
gs
jecxz
mov
dec
rclb
inc
lods
repnz
pop
sub
xor
scas
sub
sub
cli
enter
jo
pop
push
out
pop
fcmovnu
movsb
pop
sbbb
fs
sti
push
fwait
jne
ds
mov
aad
int3
orb
mov
xor
dec
int
imul
scas
sub
adc
sbb
cmpsb
sub
clc
aad
test
mov
call
xor
push
mov
sub
and
mov
jb
shll
inc
shlb
mov
sub
jmp
icebp
jg
xor
addr16
lcall
pop
ja
pop
or
push
mov
sub
std
repz
icebp
lret
jnp
cmp
shl
mov
outsb
sbb
insb
and
cmc
sbb
mov
pop
ss
cs
enter
xchg
loope
std
cld
imul
xchg
or
push
insl
scas
sub
lods
roll
dec
sub
jae
mov
push
push
es
cld
dec
sarl
fbld
sahf
lahf
pop
cmpsl
push
out
sti
mov
or
lods
cs
sub
in
pop
sbb
pop
push
pop
out
lret
in
mov
scas
and
or
loopne
sbb
out
pop
jl
xchg
xor
shlb
dec
push
dec
ja
add
lds
fcmovbe
js
jb
scas
jnp
icebp
ss
fstp
aas
lret
lret
movl
lods
pop
mov
mov
mov
popa
repz
or
pusha
add
pop
loopne
or
mov
mov
fsubp
cs
scas
push
inc
dec
cmp
mov
hlt
jne
or
cmpsb
orb
jmp
xor
adc
sahf
push
mov
cmp
cmp
fistpl
cmpsb
aas
xchg
ficoms
pop
inc
ljmp
cmpb
lods
sbb
and
push
jb
movsb
insl
cmc
int
sahf
stc
sbb
mov
sbb
sahf
arpl
sbb
add
sub
bound
lret
addb
outsl
sbb
cmpsb
inc
pop
and
in
imul
mov
mov
rclb
enter
flds
ss
mov
dec
xor
aaa
cmpsb
ret
nop
or
loop
cltd
fildll
jmp
xor
aas
jle
test
sahf
scas
jae
jo
cli
lret
mov
jno
rorb
cmpsb
push
rcrl
bswap
adc
jo
icebp
pop
addr16
fdivr
xchg
dec
loopne
ja
sub
push
fnstsw
pop
mov
mov
push
xchg
push
sub
mov
mov
mov
lds
inc
mov
out
mov
jp
ret
xchg
in
adc
mov
faddp
mov
cmp
lret
ss
jge
mov
push
jbe
loope
cltd
xor
repz
push
or
or
dec
adc
aas
call
inc
dec
insl
movsl
push
xchg
loope
cmp
mov
lods
pop
or
fcom
sbb
es
stc
mov
js
shlb
fs
cmova
sbb
outsb
jo
icebp
aam
xchg
lock
inc
in
sub
fmull
std
shlb
andl
pop
xchg
rolb
jo
loopne
mov
xor
or
push
jmp
pop
mov
pop
stos
push
shrb
adc
xchg
mov
push
addr16
fs
jbe
mov
xchg
push
int3
jno
jle
add
lea
dec
sub
or
sarb
add
lds
out
xor
pop
or
loope
xchg
arpl
andb
lds
pop
stos
cmp
or
test
jp
adc
loop
sahf
inc
pop
lahf
dec
sbb
xchg
push
or
into
mov
insb
data16
mov
test
pop
push
out
jge
pop
bswap
pop
push
inc
inc
shr
cmp
push
push
dec
imul
mov
movb
gs
cmc
iret
and
mov
test
lret
pop
int
pop
fists
mov
jne
mov
push
roll
cmp
adc
mov
sub
aad
jge
in
fcomip
loop
sbb
mov
cli
nop
dec
adc
clc
or
shlb
gs
fcoms
mov
movzbl
lret
aas
in
sbb
jb
jecxz
orb
ss
loop
jl
xchg
ret
sbb
into
mov
andb
xchg
popf
fisttps
mov
stos
cmpl
mov
arpl
push
mov
lret
xor
incl
testl
aas
cmp
sub
aas
call
cmp
mov
and
or
imulb
sti
daa
pop
add
xchg
rcrb
faddl
bound
mov
cmp
movsb
add
out
aam
aad
push
mov
and
icebp
inc
dec
adc
push
xor
and
adc
mov
loope
imulb
pop
xchg
arpl
lods
lods
rcrb
lock
popa
cmp
test
aas
jne
pushf
mov
int3
stc
das
cld
push
pop
jmp
pushf
je
xor
outsb
cmp
dec
push
ds
xlat
addr16
stos
lods
xor
mov
adc
add
imul
pop
mov
lret
jo
cmp
in
imul
jne
cmpsb
scas
je
adcl
add
push
mov
ror
pop
mov
dec
loope
dec
out
jbe
mov
push
or
lret
jnp
or
into
aam
pop
das
adc
cmc
sub
imul
sub
movsl
ret
pop
into
ret
adc
jg
mov
or
icebp
imul
scas
movsl
pop
sbb
cmp
push
sbb
xchg
dec
arpl
shr
pop
lret
loope
xchg
stos
data16
shrl
aaa
inc
cltd
loopne
stos
rclb
push
movsb
inc
cli
int
shrb
mov
out
imul
push
xchg
test
and
repnz
dec
cmp
or
xor
inc
loop
xor
gs
adc
mov
xchg
mov
sub
jne
mov
mov
in
test
les
xor
out
sbb
imul
jg
xchg
imul
push
daa
mov
out
or
mov
fcmovne
pop
andl
into
jmp
dec
and
sbb
outsb
mov
shrl
icebp
jns
mov
add
sub
add
std
hlt
dec
popf
shrb
out
addr16
sub
rclb
xchg
scas
rclb
in
sub
test
push
sbb
pop
in
xchg
xchg
adc
add
cmc
adc
lea
inc
jmp
shrl
dec
call
xchg
es
push
xor
xchg
or
push
inc
sbb
jmp
xchg
mov
dec
stc
cmp
mov
jmp
add
jle
ss
repnz
add
nop
aam
mov
mov
mov
push
ss
roll
in
lahf
cltd
adc
ret
mov
stos
dec
xchg
mov
xchg
inc
shll
xchg
fiadds
push
orl
inc
jns
shlb
rclb
add
xchg
xor
stc
arpl
dec
ret
lds
adc
pop
incb
in
push
filds
cs
ja
xchg
jp
in
or
cmp
xchg
mov
mull
mov
daa
and
int
adc
into
sahf
mov
scas
leave
xor
xchg
out
icebp
insl
sbb
and
insl
scas
add
xchg
sbb
int
or
pop
call
xor
bound
dec
pushf
push
inc
aaa
outsb
dec
in
push
in
adc
mov
ret
jno
cmp
xchg
fistpl
imul
xor
ja
sub
push
les
inc
lret
into
repnz
int
aam
pop
sub
jp
sbb
push
sbb
scas
es
xlat
loope
stc
sub
or
push
mov
dec
jl
jge
mov
cmp
jle
lock
or
dec
in
cmp
psubq
movsl
sti
in
add
adc
inc
xor
xlat
mov
into
pop
inc
mov
mov
adc
test
mov
and
loope
adc
ret
mov
sub
movsl
xor
leave
cmp
cs
and
shlb
xchg
sub
jle
pushl
cwtl
clc
leave
das
subb
jbe
lret
int
xchg
cmc
pop
cs
inc
jle
flds
push
bound
out
es
jge
std
filds
scas
es
jns
sub
pop
mov
jmp
dec
repz
push
inc
mov
dec
das
add
call
mov
xchg
mov
fstps
nop
aam
xorl
cltd
add
shll
mov
xchg
pop
mov
cltd
das
xor
into
add
lret
sub
or
mov
or
mov
mov
lods
popf
dec
push
out
call
push
out
and
inc
cmp
cmp
lds
inc
add
sti
sti
or
add
jb
add
dec
mov
add
and
ss
push
call
lock
lods
cmp
pop
or
in
or
mov
lahf
imul
push
jbe
xor
jae
mov
inc
mov
pop
fs
into
idiv
xchg
idivl
sbb
inc
test
cli
mov
mov
sbb
pop
shll
dec
sub
pop
arpl
test
outsb
mov
sub
out
and
clc
or
push
dec
xlat
cltd
jns
imul
or
aas
fs
adc
mov
addr16
cli
xor
dec
add
push
mov
loope
xchg
ss
or
pushaw
and
stos
movsb
add
mov
push
ret
int
mov
push
movb
pop
sub
js
and
and
loopne
sub
lods
jp
mov
xchg
sti
push
aas
sub
ljmp
aam
pop
scas
dec
cwtl
inc
mov
js
sub
cltd
mov
push
testl
cmp
aaa
xchg
loop
or
rolb
cmp
mov
cmp
pop
push
mov
aad
push
pop
rclb
mov
mov
mov
hlt
pusha
orb
add
cltd
ss
lods
movsl
and
popa
int
xor
xchg
je
mov
add
pop
push
pop
lods
imul
inc
sbb
dec
lcall
es
inc
xchg
pusha
jnp
mov
push
jg
rclb
in
xor
xchg
imul
pop
or
jp
stos
loop
fdivl
nop
es
lock
pushf
jmp
xor
xor
lods
scas
add
ret
ds
mov
mov
fildll
pop
xor
int3
pop
mov
insb
dec
pusha
aas
repz
and
or
xchg
jecxz
sti
add
and
movsl
sbb
push
lret
jns
cli
push
sbb
sbb
cli
arpl
adc
repnz
adc
orl
and
popa
push
imul
jo
jne
stc
jge
xchg
pop
lahf
jg
fcmovu
addr16
stc
movsb
mov
enter
out
xorb
and
out
lret
cmp
arpl
push
jl
int
cmc
je
cltd
jno
faddp
std
or
xor
mov
movsb
xor
add
les
mov
cmp
or
out
mov
xchg
xchg
outsb
dec
pop
sbb
sub
mov
adc
or
cltd
push
loopne
mov
test
lret
outsb
leave
imulb
xchg
push
adc
xor
in
fnstsw
inc
xchg
lret
mov
das
mov
dec
jnp
pop
pop
cltd
dec
cmp
test
or
aam
call
cvtps2pi
dec
out
mov
insl
xor
aam
lret
jp
sub
pop
dec
sub
ss
pop
pop
inc
cmp
sbb
dec
push
sti
adc
inc
fwait
pusha
or
pop
rorl
cmp
or
je
lock
push
fisttps
push
or
mov
or
push
arpl
test
lock
and
mov
sahf
repz
insb
and
repnz
mov
add
add
in
dec
inc
sbb
xor
mov
or
pop
pop
fmulp
jbe
cmp
pop
lret
sbb
or
lret
push
dec
aad
xor
inc
sub
xchg
sti
inc
mov
mov
push
popa
test
push
clc
cld
fwait
push
aam
stos
out
outsl
addb
inc
into
aad
fimuls
imul
enter
cmpsb
and
inc
ret
mov
or
push
dec
inc
push
cld
mov
jmp
gs
or
mov
scas
or
movsl
sub
cwtl
mov
mov
push
pushf
insl
push
insl
or
mov
iret
mov
xor
fimull
jb
inc
jno
push
rorl
mov
lock
aad
sbb
sbb
mov
sbb
ficompl
ja
add
adc
inc
xchg
ja
xchg
test
fimull
mov
xor
test
movhps
adc
fcmovnb
jae
inc
scas
fidivrs
dec
fwait
mov
shr
pop
das
outsl
ret
out
out
or
in
std
and
fisubl
inc
test
test
lea
inc
lahf
inc
xor
mov
jmp
aam
jl
int3
into
enter
inc
mov
xchg
pop
les
and
fstpt
xchg
xor
mov
outsb
sbbb
insl
xchg
jge
adc
imul
pop
out
fwait
lcall
pop
shrl
sarb
bnd
xor
orl
ja
mov
mov
and
xchg
mov
jle
pop
jns
xchg
cmp
add
filds
cmp
xor
clc
jle
xchg
cwtl
sbb
ret
imul
ds
shlb
sbb
int3
enter
mov
stc
xor
fwait
lds
movsb
mov
fs
gs
cltd
es
fucom
lret
inc
xchg
pop
mov
sbb
movsb
dec
ss
stos
lcall
out
and
jae
pop
pushf
cmp
pop
inc
or
mov
xlat
ret
adc
aam
leave
sub
cltd
jbe
push
mov
fdivl
inc
inc
fldcw
dec
inc
push
push
sub
dec
rorb
lahf
adc
iret
mov
leave
in
and
pop
fwait
ret
int
das
int3
add
arpl
mov
in
mov
mov
xor
push
cmp
jmp
jge
into
mov
mov
enter
xchg
aas
mov
jnp
mov
inc
jl
add
or
jne
mov
lret
mov
mov
stos
inc
jne
movsl
inc
lahf
lcall
fnstsw
mov
lahf
xor
movlps
cli
out
ret
hlt
adc
push
cmp
dec
das
mov
fstpt
movsb
sub
cli
inc
popa
sbb
hlt
push
sbb
out
or
shlb
fstpt
and
xlat
adc
popa
jne
xchg
aad
negl
and
inc
lret
add
push
push
mov
cmp
repz
mov
sbb
xchg
mov
imul
negl
leave
pop
aaa
dec
arpl
pop
push
outsb
and
mov
ljmp
cltd
jmp
cltd
in
push
pop
jns
test
dec
pop
daa
adc
and
std
xor
mov
addr16
cmpsb
xchg
idivl
sub
leave
iret
out
xor
jns
mov
xchg
xchg
std
fwait
aaa
enter
push
pop
jle
xor
out
cld
pop
cwtl
add
or
sbb
dec
adc
mov
ss
mov
shrb
out
xchg
xor
std
rclb
xor
cmp
jnp
add
push
int3
adc
int3
adc
jle
mov
xchg
sti
xor
daa
xor
mov
je
xlat
mov
js
addr16
aaa
mov
mov
lods
adc
das
repnz
add
in
cli
cmpsl
loop
pop
into
pusha
into
push
fdivr
popf
popa
lods
or
dec
cmpl
or
cmp
adc
cmp
dec
movsl
or
cs
addr16
stc
pop
xchg
mov
xchg
inc
add
jecxz
lcall
and
int3
sbb
fs
xor
inc
jle
jo
shlb
pop
add
arpl
or
or
xorb
es
rol
inc
mov
and
mov
mov
or
mulb
fdivr
dec
mov
cmp
pop
lods
aaa
mov
add
int3
mov
jnp
js
ljmp
inc
aas
movsb
gs
xor
stos
in
das
mov
jae
push
mov
dec
dec
lods
popf
shll
adc
ljmp
and
and
xor
mov
dec
inc
push
scas
js
sub
test
pop
add
xchg
jns
xor
inc
enter
sbb
test
pop
in
mov
pop
ds
inc
lahf
movsb
add
imul
push
clc
add
pop
and
idiv
fnsave
push
insb
inc
or
xlat
cltd
nop
icebp
push
push
mov
xchg
pusha
xchg
out
jns
sbb
xor
sbb
movsl
imull
sbb
and
mov
pop
movsb
dec
xchg
add
dec
adc
mov
mov
pop
mov
test
dec
mov
xchg
mov
xor
pop
xchg
mov
sub
cmpsl
and
dec
outsl
inc
push
inc
int3
jns
outsb
or
mov
and
xchg
dec
leave
push
mov
ficoml
int
sub
xor
stos
int3
jmp
mov
mov
pop
addr16
xor
jmp
fistl
xor
test
cld
scas
pusha
jno
mov
hlt
push
xor
jge
mov
add
mov
push
jae
push
test
inc
xchg
push
sub
lods
cmp
mov
int3
repnz
jge
mov
push
cmp
sub
loopne
dec
dec
pop
xor
push
out
stos
xchg
xor
mov
jo
cmpsb
filds
adc
mov
je
pop
dec
lcall
test
push
and
mov
sbb
lock
int3
into
xor
sub
outsl
mov
data16
lcall
cmp
inc
bound
jl
stc
into
addr16
jp
lea
cmpsl
es
pop
rol
pop
testb
out
lods
pop
sub
hlt
or
add
fsts
mov
push
push
lea
sub
add
addr16
es
aam
push
adc
add
ja
mov
shlb
imul
push
lahf
es
sub
aam
and
lcall
clc
fcoms
fdivr
dec
fdivs
and
sub
in
je
mov
bound
pop
lds
mov
xchg
add
cmpsl
or
test
in
jmp
out
jge
jmp
cmp
mov
add
jg
pop
mov
and
sbb
xchg
cmpsl
dec
sti
mov
sub
std
mov
pop
test
xor
scas
inc
pop
or
mov
repnz
push
pop
sub
lods
repnz
daa
add
lret
test
mov
bnd
sbb
jnp
mov
jb
push
aaa
aaa
mov
cltd
add
aaa
mov
clc
cmp
xchg
shll
xchg
loop
imul
in
inc
fs
and
sbb
or
fimull
pop
stc
sub
dec
mov
pop
jge
pop
mov
inc
insl
and
or
sub
out
fsubrp
mov
test
dec
push
out
andb
shrb
addr16
out
lock
enter
xchg
jae
arpl
pop
repz
fsubrl
mov
enter
out
subb
outsb
imul
rolb
imul
sbb
push
pop
data16
xchg
cmpsb
mov
pop
lret
and
ss
in
dec
pop
xlat
into
jmp
adcl
arpl
mov
mov
ret
mov
push
jae
test
movsb
leave
cmpsb
inc
das
lret
pop
fdivrs
xchg
inc
stos
dec
nop
mov
fdivs
aaa
mov
inc
out
clc
stos
sar
sbbb
dec
inc
mov
mov
push
outsl
push
in
dec
les
lea
add
cmp
mov
addr16
cmc
mov
ja
in
push
shll
dec
jg
outsl
arpl
test
sahf
pop
sbb
outsb
fwait
sub
loopne
stos
data16
adc
adc
repz
mov
xor
aas
push
push
or
xor
push
pusha
std
or
push
addr16
and
cmp
sbb
icebp
mov
push
ret
mov
add
inc
divl
test
add
push
cltd
xor
test
push
mov
xchg
dec
cmp
push
cld
push
fimuls
add
enter
or
or
inc
in
in
xchg
xchg
inc
mov
pop
xor
or
lods
pop
das
jecxz
adc
gs
mov
cmp
mov
or
loopne
arpl
lcall
xchg
push
outsb
insl
xchg
adc
and
push
inc
nop
adc
clc
mov
daa
lods
mov
lahf
jno
rcrl
not
dec
and
inc
and
cmpsl
dec
or
cs
pop
push
add
jl
shr
mov
jns
mov
sbb
xor
insl
pop
jge
leave
push
adc
or
jne
mov
sub
xchg
push
jns
pop
adc
cmc
in
sbb
mov
add
int
fninit
and
out
jg
cmp
push
cmp
popf
push
jg
sbb
aam
fdivrl
push
fldcw
xor
pop
sub
adc
and
dec
xchg
push
push
aas
scas
movsl
inc
adc
lods
pop
mov
inc
stc
inc
cs
adc
call
mov
cmp
int3
adc
icebp
out
mov
mov
lds
xor
xchg
jp
scas
sub
mov
call
jne
jo
pop
movsb
cwtl
and
pop
xchg
popf
addl
push
and
test
cmpsb
sbb
nop
pop
cli
outsl
xor
fwait
pop
dec
fisubrs
lods
mov
xor
jp
mov
xchg
jecxz
mov
sub
out
fs
mov
push
push
jbe
dec
arpl
fs
and
jl
movsl
rcrl
fs
mov
cmp
insl
test
out
xor
jnp
movb
out
push
into
orb
std
cwtl
in
mov
iret
xlat
dec
insb
dec
rep
fdivp
and
mov
pop
fnstenv
roll
mov
dec
inc
test
arpl
ds
shll
in
add
addr16
cmp
cmp
rorb
aaa
lods
inc
pop
cmc
push
scas
and
dec
pop
fadds
rorb
les
repz
lcall
lret
ljmp
add
ret
mov
add
jns
loop
dec
add
pop
movsl
cmpsl
sub
cs
lea
jecxz
cmpsb
loopne
shl
jae
scas
mov
lcall
in
and
ret
mov
push
mov
mulb
sbbl
mov
jle
loop
adc
and
in
xchg
cmp
sub
sub
cmp
bound
aam
inc
jge
xchg
cmpsl
ljmp
ret
jb
adc
scas
jecxz
lcall
mov
fildl
cmc
mov
and
ret
rcll
inc
data16
cmp
inc
cmp
inc
xchg
pushf
sub
add
aaa
fcoms
xchg
jmp
inc
cwtl
insl
in
mov
repz
mov
mov
leave
xor
fbstp
into
mov
into
sbb
push
rcll
xor
lret
or
test
ret
test
movsl
in
je
jne
push
test
adc
jl
add
sub
lea
shlb
pop
dec
push
lods
xor
and
daa
cwtl
movsb
cmp
pop
arpl
xor
and
lret
and
cwtl
cmc
sub
jo
push
je
push
cmp
add
insb
test
dec
js
inc
xchg
lds
sub
mov
dec
sub
jle
mov
shll
sub
imul
xor
inc
pop
xor
in
ror
pushf
bound
mull
and
ret
sbb
test
cmp
mov
daa
push
lret
or
lods
icebp
sub
mov
int
fcmovne
or
sub
lock
in
rcr
iret
sub
loope
pop
jbe
lds
outsb
call
xchg
push
mov
adc
adc
loop
fcoms
dec
dec
jnp
pop
ret
xchg
mov
bound
aam
outsl
enter
pop
jl
push
sub
mov
lods
lret
loop
mov
cmpsl
push
mov
outsl
repnz
or
mov
es
xchg
dec
das
and
stc
inc
mov
lcall
lods
shrb
sub
xchg
scas
sub
pop
jo
aas
xlat
sbb
cmp
call
adc
sbb
adcl
fildl
xchg
mov
dec
add
test
inc
inc
pop
xchg
andb
pop
enter
add
cmc
push
es
jge
push
mov
ja
aam
in
mov
lcall
pop
fldcw
leave
and
outsl
imul
mov
imul
js
cmp
or
sbbb
adcl
mov
mov
popf
pop
leave
test
imul
dec
cmp
sbb
sbb
cmp
lock
in
push
cmp
cs
or
leave
ljmp
sti
lahf
je
nop
push
sarb
int3
or
stos
lds
adc
lahf
and
lret
cmp
xchg
jne
push
and
fiadds
jmp
movsb
dec
daa
push
leave
dec
fdivp
push
into
mov
icebp
int
stos
subl
pushf
out
jo
jbe
dec
jo
test
out
push
adc
rcrb
mov
and
fs
pop
out
or
push
daa
sahf
std
xchg
xchg
sub
mov
cmp
adc
dec
cmp
mov
outsb
cmp
add
insl
mov
mov
and
sbb
aaa
add
ss
mov
xor
inc
imul
sub
mov
lret
cltd
sbb
dec
jno
pop
adc
add
lock
pop
pop
mov
inc
mull
dec
inc
push
and
lock
jns
xor
aam
jbe
ja
sbb
mov
adc
cmp
mov
dec
ret
jne
ljmp
lret
mov
mov
mov
xchg
and
fldcw
push
or
fldt
scas
into
sub
mov
jb
mov
cmp
sub
xchg
out
pop
jmp
pop
lds
push
push
and
and
sub
push
daa
call
lret
adc
pop
ja
repnz
mov
jge
es
adc
and
xor
mov
aas
xchg
jle
mov
leave
push
add
sbb
sub
or
cmp
fsubr
xor
jl
fldenv
fildll
jecxz
jp
xor
push
out
dec
inc
and
or
loope
dec
xchg
adc
or
dec
mov
arpl
inc
cmp
cmp
daa
pop
adc
ljmp
inc
xorb
les
inc
outsb
add
mov
cmp
pop
xor
jae
pop
xor
add
rol
clc
sahf
push
add
pop
mov
icebp
mov
ja
mov
je
into
mov
popa
idiv
push
enter
fld
in
push
xor
pop
repnz
pop
sub
jns
pop
stos
int
mov
out
in
icebp
dec
jns
divl
addl
mov
testl
aas
imul
mov
rorb
out
cmp
lcall
adc
fwait
xorl
sbb
lret
push
pushf
mov
in
inc
mov
mov
mov
sub
cs
cmpsb
out
jmp
inc
push
ffreep
outsb
in
inc
xchg
mov
je
frstor
pusha
addps
inc
or
mov
adc
jge
adc
nop
insb
mov
lds
loope
pushf
sbb
dec
xchg
lea
push
stos
xchg
sbb
aas
cmp
outsb
movb
or
sub
mulb
ss
mov
data16
sbb
jmp
cmp
jnp
sbb
in
mov
mov
dec
hlt
lret
push
imul
mov
scas
cmp
pop
jmp
push
inc
sub
sbb
push
and
cltd
dec
pop
xchg
pop
leave
sub
dec
jp
and
xor
icebp
fs
dec
mov
cmp
fdivrl
push
cmc
xor
loop
xor
add
mov
dec
adc
insl
sub
test
imul
popa
daa
mov
inc
shr
or
popf
cmp
jge
js
add
jns
ss
sub
jp
pop
sub
sbb
mov
movsl
inc
pcmpeqw
mov
loop
clc
mov
bound
repnz
add
leave
mov
pop
das
in
aam
cmpl
in
pop
or
std
push
or
scas
and
pusha
dec
cmpsb
test
jo
sahf
into
push
mov
addps
shr
rcrb
xorb
push
lds
mov
mov
or
inc
lahf
dec
je
ret
or
pop
or
jno
shrl
cmp
cli
jle
mov
pop
into
lds
lds
testl
xlat
cs
int3
and
imul
inc
dec
iret
fs
subb
push
xor
mov
fsubl
lcall
loop
push
outsb
xor
fcomip
jp
in
inc
cmp
das
popa
ret
dec
jo
out
int3
imul
lock
dec
sub
cmp
nop
pop
sub
hlt
sbb
mov
jbe
mov
into
clc
test
ret
int3
mov
xchg
xchg
inc
adc
add
adc
adc
dec
movsb
sub
in
xchg
frstpm(287
mov
sti
divb
cmc
jnp
and
add
jb
lcall
mov
sbbl
mov
or
push
aas
push
out
mov
mov
cli
dec
test
xor
jp
jmp
mov
pop
push
rcr
rcr
push
out
adc
pop
inc
push
shrl
sub
mov
push
pop
push
in
adc
movsb
sub
mov
sbb
into
mov
aas
jne
xor
pop
femms
sub
and
lcall
add
mov
sub
lret
pop
imulb
mov
xor
mov
dec
cmc
outsl
clc
jl,pn
push
xchg
mov
push
pushl
stos
sbb
movsl
jg
fdiv
cmc
add
into
lea
int
mov
mov
push
and
cmp
outsl
cmpl
xlat
jge
aam
push
adc
sub
call
mov
je
test
adc
xchg
ja
ret
mov
mov
icebp
daa
mov
into
jmp
pop
roll
sbb
out
dec
aam
pop
out
lods
sbb
fdivrl
sbb
insb
xor
shl
in
adc
sub
test
fdivr
add
xchg
xchg
sbb
addr16
ret
ret
xor
mov
std
repnz
mov
clc
enter
insl
mov
and
das
insb
adc
out
and
push
and
divb
call
addr16
jns
adcb
pop
pop
inc
push
xchg
ret
arpl
push
cmp
jnp
inc
mov
cwtl
shll
sub
or
out
push
add
out
dec
jae
dec
les
enter
jle
sub
push
push
push
jo
jmp
or
push
push
cli
cmp
lcall
pusha
aad
daa
ss
loope
fs
imul
fwait
movsl
and
loope
sub
aad
cmp
lahf
or
sub
js
pop
mov
xchg
push
xchg
iret
and
add
imul
lods
jmp
xor
into
push
sbb
fst
hlt
leave
cli
insl
push
push
fdivl
movsb
pop
adc
push
cmp
dec
and
pop
xchg
push
xorl
cmpsb
fnstcw
test
pop
jae
sbb
scas
and
ret
or
lds
push
pop
aas
scas
in
xor
lsl
dec
fsubl
dec
stos
fs
dec
xchg
sub
out
jb
pop
xchg
dec
insb
cmp
xchg
fsubrl
dec
outsb
mov
dec
xor
dec
mov
dec
inc
and
cs
rcr
popa
fisubrl
mov
push
scas
xor
add
mov
aas
divl
mov
sbb
fstpt
cltd
nop
jnp
fdivs
inc
mov
pop
add
adc
or
dec
and
out
loopne
jmp
sub
jae
dec
pop
mov
mov
cwtl
mov
mov
test
aaa
fldcw
mov
jl
sahf
int3
add
sbb
clc
lahf
pop
push
sti
sub
loopne
shll
sbb
adc
mov
scas
shll
rorl
mov
aas
jg
jmp
getsec
mov
hlt
xchg
aaa
push
rcll
xor
movsb
out
inc
cmp
out
push
popf
cmp
xchg
fsubrs
and
mov
inc
cld
and
sbb
add
daa
xchg
outsb
cwtl
je
shlb
or
imul
pop
mov
jp
loop
outsl
jmp
int
push
xchg
cmp
xchg
std
push
icebp
sub
test
je
arpl
lods
adc
rolb
cmp
ja
add
sbb
in
mov
pop
xchg
add
scas
lods
adc
jecxz
loope
cwtl
jo
mov
add
fwait
sbb
cltd
xor
push
lret
push
xor
xchg
out
sahf
int3
dec
xor
pop
or
leave
cmp
inc
lcall
scas
movsb
loopne
out
loop
fmul
inc
out
stc
out
leave
sbb
cmp
sahf
mov
mov
sbb
xchg
mov
jle
imul
cmp
fbstp
mov
push
int3
mov
test
xlat
popa
mov
jbe
loopne
pop
cmpsb
ret
fidivrl
mov
imul
out
and
push
test
add
and
mov
jp
push
xchg
loope
mov
outsl
or
ja
dec
roll
repnz
mov
aad
dec
sbb
and
jno
adc
cmp
test
dec
test
mov
ja
rcll
loopne
mov
cmp
or
or
xchg
push
push
pop
test
add
xor
pop
pop
mov
ficoml
cltd
popf
jno
daa
cld
in
cmc
adc
jle
xchg
outsl
stos
add
jnp
add
add
mov
and
subl
add
and
mov
call
dec
push
adc
adc
nop
sbb
adc
sahf
lret
sbb
imul
pop
out
push
div
lods
dec
mov
icebp
mov
push
stc
enter
test
lcall
sahf
ret
lock
xchg
movsl
test
std
shl
inc
adc
pop
jg,pn
fmulp
stc
int
js
xor
call
rcl
sbb
decb
test
jnp
mov
xlat
push
adc
testl
leave
mov
shr
add
cltd
mov
into
orl
cmpsl
popa
rcr
dec
in
adcb
leave
jmp
das
mov
jg
out
lret
xor
or
into
push
pop
mov
movsl
mov
imul
and
adc
test
and
push
push
adc
arpl
out
jl
roll
sbb
push
xchg
and
xchg
pusha
and
hlt
jecxz
std
pop
sarb
aam
jb
stos
dec
dec
mov
das
push
cltd
pop
jo
jmp
test
xor
cltd
les
pop
jnp
mov
push
cwtl
pop
mov
pop
jbe
xchg
jl
jne
leave
es
insb
inc
sbb
iret
pop
inc
adc
psraw
jle
adc
setbe
push
sub
jge
cmc
sbb
aad
adc
xorb
fsubrl
pop
into
lods
or
lock
repnz
jge
dec
mov
test
pop
jecxz
loop
push
in
daa
out
mov
in
or
mov
mov
jae
inc
cwtl
mov
dec
out
loopne
shrb
xchg
sarl
fs
or
xchg
les
sti
in
das
fwait
xchg
mov
icebp
nop
pop
fsubr
jbe
adcb
jecxz
cmp
inc
mov
pop
sbb
scas
shll
mov
xchg
jb
fmull
and
lahf
and
insl
sbb
inc
mov
and
push
sbb
fdivs
jo
stos
pop
aaa
test
jbe
dec
mov
cld
and
pop
cmp
jecxz
es
call
xchg
outsb
nop
mov
dec
cmpsl
lds
rclb
test
pop
das
pop
testb
loopne
shrb
and
push
out
push
aas
mov
adc
sbb
sbb
incb
add
adc
ss
pop
add
inc
sub
dec
mov
jb,pt
pop
pop
mov
or
mov
sahf
and
push
out
sbb
and
rorb
cltd
orb
cmpsl
mov
xchg
or
mov
dec
mov
cld
sar
fdiv
lods
mov
inc
lock
mov
into
nop
adc
sbb
mov
fwait
jle
leave
mov
xor
daa
cli
data16
leave
insb
das
mov
in
jno
ret
sub
jo
mov
sub
and
dec
push
setle
mov
jbe
and
fwait
loop
inc
or
aaa
push
adc
inc
call
fld
insl
cmpsl
aam
das
repz
add
xchg
xchg
mov
fbld
add
lods
or
jo
push
ss
in
mov
xchg
sbb
pop
sti
shrb
push
in
test
lahf
loopne
adc
pop
das
sbb
pushf
pusha
notl
jmp
fcomip
call
add
out
pushf
sbb
xchg
adc
rorb
leave
lcall
es
mov
ja
xchg
xchg
ret
cli
cmp
push
popw
push
xor
lods
mov
inc
dec
outsb
bound
jbe
lret
add
mov
sahf
jnp
mov
mov
rcrl
lds
mov
adcb
pop
xor
pushf
xor
pushf
aaa
fmull
sub
pop
pop
gs
insl
scas
inc
xchg
ror
adc
xchg
sbb
jb
or
mov
in
cmp
push
test
mov
add
sahf
sahf
push
dec
es
sbb
dec
mov
arpl
mov
pop
fs
sbb
inc
cmp
sbb
or
jb
mov
push
std
idivb
dec
adc
push
bound
mov
arpl
scas
sub
sub
cmpb
pop
dec
jmp
adc
add
jge
mov
sahf
push
inc
testl
arpl
dec
cmpsb
stos
pop
mov
lock
rcrl
xor
add
ss
aam
std
hlt
ss
paddq
nop
push
nop
test
mov
pop
cmp
js
or
add
mov
sub
ja
ljmp
mov
icebp
push
cmpsl
addr16
ja
addb
cmp
fsub
fisubrs
test
nop
add
adc
mov
xchg
xor
subl
and
mov
sbbb
xchg
arpl
jge
dec
shll
out
lods
stos
notb
sbb
js
pop
mov
mov
inc
cmp
adc
pop
pushf
jb
daa
mov
dec
arpl
lret
xchg
ja
loopne
sbb
sub
shll
movsl
rcrl
out
jge
lock
push
or
testb
pusha
roll
cld
or
enter
aaa
mov
pop
pop
jbe
int3
lea
cmp
mov
inc
mov
sub
mov
mov
neg
cmpsl
mov
dec
cmpsl
lcall
adc
xor
out
dec
daa
xchg
test
arpl
xchg
into
sbb
pop
sarb
mov
xor
pop
mov
ds
lds
or
xchg
inc
call
fstps
ljmp
sbb
rorb
ret
dec
pop
dec
jge
insb
in
stos
cmp
sbb
inc
mov
std
xor
fimuls
xor
lcall
mov
lret
int3
jnp
ret
outsl
mov
jo
mov
icebp
mov
add
pop
addr16
xor
jmp
iret
in
int3
lea
push
xor
push
xor
andb
sbb
push
cmp
add
fldl
nop
jp
mov
imul
sbb
loope
mov
lock
mov
add
sarl
das
dec
xchg
mov
rcrl
arpl
gs
xor
adc
pusha
or
xor
inc
roll
popf
js
inc
adc
jmp
dec
mov
add
pop
xor
daa
xor
adc
addl
push
dec
and
push
and
xchg
pop
inc
sbb
and
push
int
mov
xlat
mov
cmp
xor
jp
adcb
sbb
mov
dec
rcrl
mov
xchg
or
mov
divb
xchg
sbb
mov
call
push
clc
jmp
imul
fptan
lds
or
hlt
flds
and
cwtl
and
jns
mov
out
aad
pop
push
aam
sbb
mov
ljmp
sbb
and
loopne
stos
test
push
sbb
pop
xchg
mov
in
pop
sub
push
add
fstpl
inc
hlt
sub
popf
sub
push
data16
out
pushf
sub
das
std
pusha
jge
aaa
push
cli
clc
ror
outsl
mov
movsl
add
push
xchg
mov
scas
stos
arpl
xchg
sub
test
and
mov
out
push
and
aaa
pushf
jbe
je
push
outsl
popa
outsb
fidivs
enter
es
cli
pop
mov
sub
and
test
les
cld
fistl
mov
adc
inc
addr16
add
xlat
xor
stos
mov
mov
mov
add
imul
xor
sub
scas
std
inc
mov
shll
jmp
mov
scas
data16
cmpsb
jmp
jmp
clc
dec
jo
lret
pop
cli
push
insw
std
mov
aas
pop
out
sub
test
cli
cmp
mov
fbld
mov
jp
inc
xchg
stos
repnz
fcmove
stc
outsb
mov
sbb
out
int
inc
icebp
jp
sbb
jnp
cmc
sbb
adcb
pop
popf
and
loop
jmp
cmpb
in
dec
xchg
repz
std
lret
pop
out
push
fmull
and
pushf
jge
pop
xchg
or
stos
xchg
or
cmp
test
sbb
push
call
inc
test
jecxz
scas
push
and
sbb
repnz
test
cs
xchg
and
sbb
repnz
push
ret
subl
add
mov
mov
rcrl
jae
add
loop
fists
daa
bound
mov
out
mov
popf
jne
ret
imul
daa
shlb
mov
fwait
mov
lds
jp
fsts
lret
mov
cmp
fists
fistpll
shlb
psrlw
push
addr16
jge
mov
pop
repz
sbb
jbe
mov
into
insb
call
xchg
inc
add
aad
or
std
adc
outsl
js
jo
mov
jns
in
xor
popf
lret
into
or
xor
or
fwait
popa
jp
gs
mov
inc
or
lods
mov
xchg
pusha
cmp
sbb
rcrl
dec
mov
int3
arpl
sbb
sub
jg
push
adc
mov
cmp
in
add
lcall
cltd
jo
jecxz
mov
pop
orl
cs
pextrw
or
leave
daa
cld
push
adc
sub
jp
dec
clc
lret
add
push
sub
jl
sub
sti
pop
cmpsl
cmp
adc
inc
ljmp
push
pop
and
imulb
push
insb
and
adc
mov
cmp
xchg
fmull
inc
fstpl
mov
mov
mov
lea
jle
pop
cli
sub
stc
mov
jg
jl
jmp
cmpsl
mov
cmp
pop
mov
push
imul
jl,pn
aaa
and
jbe
inc
test
js
sbb
jb
filds
hlt
test
xchg
in
cli
xor
mov
hlt
mov
cmp
arpl
sub
xchg
les
in
push
cltd
or
push
xchg
popa
pop
bound
mov
dec
jle
aas
sahf
les
jno
into
mov
cmp
sbb
cmpsb
push
mov
cmp
cmp
jo
ficomps
jno
add
cmp
mov
add
jae
fnsave
jp
aas
mov
das
sar
movsb
loopne
insb
mov
loop
xchg
jns
cwtl
xchg
and
lcall
movsl
lods
cld
cmp
cld
push
int3
loop
fwait
insb
or
dec
xchg
sub
in
sub
icebp
scas
data16
das
ret
mov
addr16
stc
or
lahf
sub
arpl
jecxz
call
insl
addb
xchg
pop
aam
iret
lret
push
sbb
jp
push
cmp
xchg
mov
lcall
xchg
and
ret
mov
or
mov
jg
in
lds
aas
mov
scas
bound
sti
mov
sahf
inc
icebp
insl
pop
arpl
sbb
aaa
sti
outsl
ss
orl
test
mov
jae
dec
test
into
and
or
jp
in
test
push
jo
xchg
popa
cmp
sbb
mov
nop
adc
dec
cs
xor
test
mov
iret
mov
adc
enter
adc
mov
inc
pusha
jbe
pop
pop
push
and
rep
inc
adc
scas
mov
shrb
cmp
add
out
icebp
dec
inc
jge
iret
mov
mov
xor
enter
mov
sbb
ds
add
fcomps
mov
jl
adc
int3
fdivrs
xchg
stc
les
mov
pop
gs
dec
shr
lods
adc
push
pop
fmull
daa
imul
in
sarb
aaa
xchg
jp
push
and
jmp
cmp
or
test
jg
es
mov
dec
jns
jl
ss
inc
and
or
xchg
fs
lods
or
cmpsb
or
int
xchg
dec
out
ds
test
popa
mov
or
pushf
jbe
xor
sub
jge
hlt
pushw
aam
xchg
push
mov
iret
dec
in
sti
cld
sub
loop
stos
ss
je
cmp
iret
fcmovb
jae
ss
mov
imul
inc
adc
mov
popa
mov
inc
jnp
dec
add
ja
insb
sbb
loop
mov
cmp
into
jae
les
add
dec
fsubp
sub
push
pop
sub
inc
cmpsb
dec
aad
cld
mov
pop
enter
jo
jg
and
inc
add
divl
push
jp
pop
pop
int3
and
fdivr
push
inc
mov
out
int
xchg
call
ret
in
or
inc
sub
push
cmc
mulb
sarb
ret
popa
xor
subl
fimuls
mov
arpl
jg
repz
popa
dec
push
xor
add
gs
cltd
sbb
cmpsl
xor
xchg
fildl
in
pop
outsb
rcrb
cmp
sub
out
xor
out
xor
cmpsl
bound
or
fsubrs
jg
push
cmp
and
and
aad
rclb
pop
xor
shll
xor
xchg
and
push
xchg
imul
sub
pop
fxtract
jno
xchg
int
sbb
mov
fnstsw
outsl
cltd
shlb
repz
dec
xchg
inc
outsl
mov
jb
icebp
jno
xchg
jecxz
and
imul
mov
outsb
shrb
imul
push
mov
stos
mov
enter
mov
cli
jno
scas
pop
pop
adc
or
inc
test
popa
mov
jl
and
pop
xlat
mov
les
push
jb
into
aam
adc
into
hlt
sub
adc
adc
cmpsb
push
mov
decl
cmp
icebp
xor
mov
pushl
fcmovnb
push
pop
xor
or
dec
and
shr
ss
mov
mov
lods
sbb
mov
lods
lcall
pushl
es
sub
les
inc
add
pop
jo
pop
cmp
outsl
sub
test
dec
mov
jbe
adc
mov
push
sbb
bnd
insb
or
or
lds
mov
mov
cld
and
inc
adc
popf
push
cltd
notb
inc
xchg
je
jecxz
adc
aad
xchg
dec
xorb
sbb
push
mov
out
pop
dec
rcll
jb
pop
jae
js
aaa
xchg
cmp
xchg
sbb
mov
cmpsl
xor
pushf
mov
add
sub
mov
decb
sbb
jl
cmp
xlat
imul
cmpsb
cli
cmp
out
pop
sub
addb
daa
cwtl
sub
in
iret
sbbb
loop
pop
icebp
outsl
pop
pop
cmp
cmp
push
insb
sbb
adc
lock
jl
lds
inc
dec
add
clc
mov
inc
and
dec
jne
dec
mov
repnz
cmp
pop
xlat
jo
outsl
push
push
lea
sbb
inc
out
insl
loop
or
adc
mov
mov
bound
out
lock
cmpsl
les
xchg
pushf
mov
ret
rorl
add
nop
movnti
xchg
and
loope
std
repz
out
jbe
call
inc
mov
add
lock
pop
adc
aam
push
rclb
mov
xor
rcrl
imul
adc
ds
lock
cmp
lods
inc
jne
xchg
pop
xor
pop
es
loopne
lock
aad
dec
push
xchg
push
add
outsl
bound
inc
push
push
cs
add
lret
inc
inc
xchg
int3
hlt
push
dec
ljmp
stos
mov
push
inc
mov
cmp
fdivr
addr16
clc
xor
mov
dec
cltd
pop
movl
xor
jmp
lret
sub
inc
test
dec
xchg
xor
sbb
and
jbe
stc
pop
repz
cmp
mov
xchg
js
and
adc
xor
and
dec
mov
cli
mov
adc
stos
jle,pn
mov
xor
fisubs
sbb
xchg
dec
adcl
je
pop
call
in
inc
stos
cwtl
pop
cltd
jae
out
dec
sub
hlt
xchg
dec
mov
mulb
call
movsb
aad
mov
mov
xchg
sub
xor
arpl
call
push
mov
loop
push
mov
das
push
and
mov
out
mov
std
xor
pop
orb
cli
pop
out
ret
mov
arpl
repz
stos
adc
jnp
sbb
in
xor
movsb
xor
push
push
cmp
jp
repz
or
loope
lcall
sub
movsb
int
pop
jp
imul
add
test
clc
mov
sub
push
xor
push
lock
mov
cld
push
add
movsl
orb
sub
jecxz
jbe
arpl
cmp
xchg
cmpsb
out
mov
imul
inc
stc
les
pushf
loope
jb
in
jno
xor
mov
rol
pushf
shlb
mov
pop
mov
mov
int3
xchg
dec
iret
shr
mov
sbb
xor
fiaddl
lahf
aam
arpl
jp
inc
icebp
ljmp
filds
pop
lcall
movsl
jg
dec
popa
or
stos
ret
sarl
add
std
int3
test
popa
and
gs
xchg
mov
adc
cmpsl
push
cltd
mov
addl
jg
xchg
icebp
xchg
outsb
mov
data16
outsb
je
scas
jns
out
flds
inc
cwtl
fstpt
in
ret
mov
fnstcw
test
mov
scas
adc
mov
repz
sub
adc
mov
enter
rorb
xchg
es
xor
pop
ret
in
mov
lret
mov
or
inc
inc
stos
cwtl
test
xchg
enter
das
add
inc
xor
movsl
mov
mov
out
ljmp
popa
add
and
leave
roll
or
pop
daa
xchg
sub
rclb
fisttps
orb
mov
rcrl
or
test
push
mov
adc
mov
rcl
ret
aad
cld
lods
lds
mov
mov
add
roll
push
scas
lret
cmpsl
cmp
aas
bound
sub
icebp
gs
dec
add
rclb
ret
je
repnz
pop
push
jmp
mov
jne
mov
gs
xchg
testb
ret
mov
ss
imul
pop
movsl
mov
jl
add
mov
idivb
ror
or
dec
jno
int3
mov
cmp
pop
rcrl
push
dec
xor
ds
jbe
insb
daa
sbbl
mov
xchg
push
push
mov
push
sahf
sub
fildll
inc
jmp
jnp
les
bound
decb
add
stos
jns
insl
jo
or
js
repz
and
test
sub
scas
add
mov
xchg
cs
loop
lahf
scas
ljmp
fwait
xchg
xchg
and
mov
cmp
and
add
out
cmp
cmpsl
out
js
cld
out
imul
shlb
ljmp
stos
sbb
or
bound
or
mov
dec
das
ss
aad
ret
xor
inc
and
repnz
cld
imul
sti
and
pushf
sub
mov
jbe
sbb
mov
push
pusha
ret
dec
ljmp
mov
cs
adcl
aaa
cmp
loopne
push
fiadds
push
fnstsw
bound
jmp
fcmovnbe
test
das
sahf
xor
jge
inc
mov
cmp
insl
and
mov
aam
loope
sahf
in
sbb
js
addr16
push
xchg
dec
int3
je
ss
adc
inc
les
inc
out
inc
dec
dec
xor
jo
sub
or
imul
daa
jmp
mov
push
pushf
enter
pushf
pop
and
pop
or
mov
push
mov
rcrb
movsl
ret
pop
fldl
ljmp
sub
addr16
movsl
cmp
cmpsl
jle
outsl
dec
jge
int
mov
into
in
stc
adc
enter
cld
mov
shll
inc
leave
sahf
sub
pop
insl
popa
lods
mov
sub
sub
ljmp
std
cmp
or
and
das
sbb
or
aad
adc
aas
adc
fs
cmpsl
stos
jmp
sbb
sub
scas
pop
or
cmp
jp
pop
mov
adc
mov
mov
aaa
test
adc
into
and
fwait
or
sub
dec
inc
lret
enterw
adc
cmpsb
mov
pop
pusha
loope
push
sahf
scas
cs
add
adc
push
movsl
add
push
hlt
pop
mov
enter
jmp
outsb
repz
nop
nop
outsl
inc
fsub
imul
adc
ret
loope
fs
pop
or
push
jecxz
push
jmp
cmp
mov
sub
scas
sbb
push
adc
mov
push
stos
pop
fnstcw
imul
adc
jnp
add
outsl
mov
ljmp
mov
stc
xor
sub
jmp
dec
or
mov
aas
xchg
ret
cmp
inc
sub
js
in
mov
jne
sbb
int3
shrl
push
push
dec
shrl
fwait
sbb
lods
mov
cmp
xchg
jecxz
xchg
pop
clc
dec
xchg
mov
mov
mov
test
fwait
mov
aam
mov
ss
ret
sub
sbb
mov
and
clc
in
push
dec
fptan
movsb
jo
xchg
addl
pop
mov
or
lahf
push
into
testl
loop
ja
jno
cli
lock
xchg
push
mov
adc
inc
or
cmp
cli
mov
cwtl
xlat
aad
movsl
insb
pop
lods
lods
into
lret
mov
mov
jnp
ljmp
sbbl
or
orb
outsb
push
fs
and
or
sbb
xor
pop
fimull
push
mov
and
out
xadd
frstor
gs
mov
jmp
ret
inc
fsubrp
mov
out
lret
or
mov
lds
xor
gs
mov
outsl
mov
fdiv
cmp
sahf
dec
mov
out
sub
clc
push
and
data16
lea
lds
test
cmp
lods
in
sbb
ja
xchg
in
sti
test
movsl
aam
clc
out
jnp
imul
cmp
rorl
fisubrl
es
xchg
aad
push
int
mov
cmpl
js
ret
push
jmp
mov
test
xchg
fsubr
insl
add
test
xchg
cmpsb
hlt
imul
shll
enter
gs
imul
jno
dec
jle
leave
mov
pop
jae
mov
ficoms
incb
sti
mov
test
lret
inc
lock
jns
jle
push
scas
in
add
hlt
jns
ret
and
fst
js
xchg
mov
and
jp
ljmp
push
pop
or
loopne
orb
jae
dec
adc
fldl
mov
mov
stos
jge
jge
sub
insl
xchg
sahf
cmp
sbb
xchg
cmp
rcrb
lcall
clc
push
push
andb
int3
jg
shlb
int3
jge
imul
mov
push
adc
lret
fisubrs
fwait
repz
xor
mov
movsl
aaa
iret
lcall
mov
and
push
mov
aaa
lock
imul
shlb
nop
cltd
pop
pop
aas
mov
pop
xchg
sub
mov
mov
cltd
inc
ljmp
fwait
mov
adcl
mov
jne
arpl
and
mov
fldenv
add
inc
loope
mov
mov
pop
enter
sbb
icebp
imulb
popa
enter
inc
mov
scas
pop
add
pop
fiaddl
cmpsl
test
das
es
sub
lods
aam
lret
cs
pop
dec
out
xchg
pusha
pushf
mov
shll
xor
icebp
bnd
sti
xlat
xorl
lret
ret
jecxz
fs
cmp
sub
add
negl
pop
add
sub
rcrl
or
pop
mov
mov
mov
not
repz
les
cmovb
stc
icebp
dec
and
stc
cmc
call
adc
inc
push
aaa
ljmp
mov
jb
adc
dec
test
clc
mov
leave
in
mov
mov
iret
push
js
pop
scas
lds
adc
mov
lods
sub
mov
ret
insl
adc
inc
adc
outsl
add
mov
std
outsl
adc
out
jg
jb
jbe
and
pop
in
and
mov
aad
fistps
mov
mov
std
mov
in
jno
out
iret
popa
jo
xchg
dec
negb
dec
sub
lcall
mov
mov
loope
lret
movsl
icebp
ds
xchg
dec
sub
sbbb
xor
in
inc
movsb
lods
es
cs
or
jo
fsubr
and
hlt
test
adc
pop
ljmp
out
xor
faddp
loop
imul
inc
pushf
fwait
sbb
enter
adc
ficoml
lds
or
loop
mov
pop
mov
mov
push
cmp
pop
jnp
push
insb
mov
xchg
xchg
cmp
sbb
popa
and
mov
pusha
adc
repnz
fisttpl
scas
add
jg
xchg
inc
outsl
bound
adc
es
mov
dec
sub
inc
stc
mov
ljmp
cmp
outsb
rcll
or
cmp
repz
xor
div
mov
mov
push
adcl
loop
mov
mov
outsb
jp
ds
fsub
jbe
dec
stos
jmp
cmpsl
lret
rolb
sti
ljmp
cmp
cmpsl
imul
adc
cmp
es
cmpsl
data16
jg
mov
and
mov
jbe
jne
mov
and
xchg
sbb
in
dec
or
mulb
fistl
mov
adc
or
into
rol
inc
mov
jmp
push
push
add
call
rcrb
jmp
js
and
add
mov
push
or
or
outsl
mov
jae
gs
jae
fsubl
dec
aas
lds
sti
ja
les
aas
dec
sbb
xor
mov
push
shlb
inc
sbb
and
outsl
movsl
bound
stos
stos
xor
mov
push
pushf
jge
insl
fdivr
pop
inc
jne
or
inc
addr16
and
sti
push
mov
sbb
cmpsb
lods
jnp
xor
pop
and
inc
lahf
sub
notb
out
into
test
call
add
pop
add
dec
flds
sub
sbb
sub
and
imul
icebp
push
test
fwait
mov
xlat
in
lret
cmc
icebp
sbb
orb
sub
sub
les
daa
adc
adc
push
loope
inc
sbb
insl
push
int
sub
in
sahf
fisubrl
sbb
nop
sbb
fs
xlat
andl
testl
or
pop
clc
mov
aam
sbb
push
mov
inc
pushf
jnp
outsl
pop
ret
mov
mov
pop
fimull
out
push
push
subl
inc
jp
leave
inc
dec
ss
inc
aad
cwtl
push
enter
inc
movsb
inc
fsubrs
pop
scas
dec
bound
aaa
push
test
inc
daa
pop
int
mov
sub
js
push
lods
lahf
add
mov
add
mov
dec
sub
sub
fwait
mov
enter
sub
daa
mov
inc
mov
adc
lods
sub
xor
movsl
or
cmp
and
mov
in
mov
xchg
sub
inc
popl
movb
mov
test
sahf
jno
aas
fsubs
push
test
sbb
into
sub
sbb
insl
outsl
rcrl
mov
lahf
xor
xor
lahf
xchg
mov
sub
jl
xor
mov
cmp
sar
je
lea
xor
xchg
fadd
xor
out
or
bound
or
push
add
jecxz
xchg
pusha
icebp
dec
hlt
leave
fildll
ja
or
cmp
movsb
je
nop
inc
jmp
in
into
and
inc
lcall
movsl
test
std
push
sbb
aas
cli
jae
inc
int3
into
fldcw
mov
mov
adc
push
hlt
cmpsl
adc
sbb
pop
xor
into
mov
jmp
mov
inc
dec
fwait
into
pop
jg
sbb
aad
jecxz
ret
mov
stc
fucomp
gs
xor
call
rclb
inc
aam
xorl
push
lods
data16
in
dec
into
repnz
add
int
loop
mov
cwtl
test
nop
mov
popa
push
jns
inc
and
mov
sti
or
pop
inc
cmp
daa
mov
repz
insl
sub
mov
pop
pop
jb
jo
mov
mov
adc
outsl
xchg
mov
lret
ret
and
hlt
push
xor
sub
xchg
pop
ret
data16
ss
and
mov
xchg
push
mov
cwtl
test
ds
or
push
jae
xchg
pusha
dec
stc
out
lods
in
jnp
sahf
insb
cmp
xor
shrl
test
jg
pop
jle
add
and
dec
mov
aas
loopne
xchg
repz
ja
mov
fs
ret
mov
stos
daa
xchg
jmp
jbe
push
xchg
xchg
inc
xchg
or
outsb
loopne
aad
iret
adc
mov
sub
ret
and
sbbl
cmp
inc
push
mov
sub
std
jo
insb
movsl
sahf
and
repz
mov
cmpsb
das
xor
dec
sbb
idivb
mov
dec
lahf
jns
sub
mov
pop
flds
adc
or
jns
pop
or
sub
add
fs
stos
je
sub
das
movsb
mov
imul
testl
lea
xor
sahf
sub
or
in
cmp
mov
sub
cmpsb
movsb
and
andb
fstl
bound
sbb
aas
push
test
pop
inc
sbb
in
pop
push
sub
das
int
lahf
and
adc
push
shl
and
jae
lret
inc
push
xchg
mov
cmp
lock
out
dec
mov
sub
in
pop
enter
mov
roll
dec
aad
idivb
xor
in
shr
ds
in
stc
out
repnz
pop
repz
pop
ljmp
popa
in
mov
mov
fisttpll
cmc
dec
fcmovnbe
push
pop
rolb
dec
jbe
pop
movsl
ja
lea
cmpsb
lahf
in
dec
sbb
dec
dec
sbb
outsb
mov
movsl
add
fucom
addb
rcr
and
in
dec
jne
or
mov
mov
iret
push
cwtl
cmpsl
ljmp
lock
xor
test
inc
sahf
push
subb
fdivl
inc
adc
cmpsl
rcrb
dec
test
test
adc
es
sub
pusha
loope
out
jbe
out
pop
ljmp
lret
push
ret
inc
out
xchg
push
dec
add
mov
pop
xor
in
lods
jb
mov
and
or
sti
loopne
dec
mov
push
mov
outsl
std
scas
mov
mov
ficoml
rorb
repnz
std
les
loope
cs
fcomps
scas
cmp
or
add
mov
pusha
push
pop
jle
ljmp
pop
dec
cmp
add
mov
pop
mov
add
lock
mov
gs
shll
fadd
imul
pop
lea
xor
sbb
pop
sub
adc
movb
cmp
std
enter
cmp
and
icebp
scas
fdivrl
and
cmp
test
outsl
call
sti
jecxz
cli
mov
mov
add
pop
pop
jnp
dec
mov
jle
rcll
push
xchg
lret
outsl
mov
mov
enter
mov
pushf
test
das
in
loope
or
jge
clc
xchg
push
insb
test
sbb
daa
daa
or
data16
jge
jae
xor
jmp
pop
nop
popf
and
and
enter
sub
inc
js
and
jge
pop
movsl
test
fwait
push
sub
xlat
lret
pop
jo
jb
fistpll
mov
cmpsb
popa
lret
jmp
add
data16
xor
sbb
mov
push
push
xor
gs
jnp
adc
mov
xchg
ret
lds
cmc
sub
sub
movsb
aaa
pusha
mov
out
rcrb
sarb
mov
lea
pop
dec
test
or
sbb
xchg
sub
pushf
mov
cmp
dec
sbb
jecxz
jb
sbb
ljmp
push
and
jne
sub
es
mov
mov
pop
xor
repnz
sti
in
data16
aas
cmp
mov
inc
mov
mov
add
and
in
mov
jne
lock
ret
push
adc
jo
push
xlat
testb
add
popf
das
sub
jno
idiv
in
adc
sub
sub
sti
jnp
mov
xorb
shlb
push
fst
mov
mov
xchg
in
scas
push
xor
sbb
test
insb
test
mov
js
pushl
mov
mov
aam
adc
addr16
fs
xchg
inc
sbb
les
and
lock
sbb
test
popf
ret
int
sub
xor
or
sbb
sbb
loope
test
jae
mov
popf
rcrl
mov
dec
cmp
clc
test
out
mov
xor
js
lods
xor
stos
movsb
xor
lcall
int3
in
push
cltd
adc
aas
movsb
test
and
sbb
push
push
mov
ljmp
faddl
xchg
outsl
push
and
shrl
push
mov
mov
dec
dec
or
sbb
inc
mov
je
mov
mov
pop
sub
mov
jb
add
out
mov
int
arpl
fcmovne
mov
cmc
enter
data16
pop
cmp
fidivl
daa
sahf
scas
push
xchg
xchg
mov
or
clc
and
xchg
mov
test
ret
cmp
es
jns
or
sub
sub
push
outsl
pop
mov
lds
dec
in
inc
cmpsl
nop
mov
repnz
pop
lahf
les
mov
adc
rolb
xor
pusha
pop
lock
sbb
jno
loope
inc
dec
stos
in
std
loopne
cmpsb
or
les
jae
sahf
pop
test
bound
roll
cli
arpl
movsl
pop
xor
sub
test
ds
jg
adc
nop
push
sahf
sbb
mov
je
mov
jns
sub
test
push
pop
mov
jns
inc
push
dec
mov
pop
xchg
call
jb
loopne
mov
insb
pusha
fisubrl
add
lock
jmp
ss
jb
jns
test
aas
mov
adc
pushf
fisubrl
clc
ja
inc
shr
sub
jnp
addb
scas
inc
adc
mov
sti
clc
dec
inc
jns
jne
lret
fiadds
adc
lods
mov
jae
xchg
addr16
and
test
cmpl
sbb
mov
lds
cmpsb
fs
xor
xchg
mov
pop
mov
int
mov
inc
stos
mov
push
das
mov
shr
add
fidivs
pop
dec
stos
push
mov
inc
orb
sbb
cmp
fsts
and
test
sbb
mov
push
aas
addr16
pushl
loopne
loopne
in
lcall
fwait
je
iret
test
js
xchg
xor
jl
xor
mov
sub
dec
leave
repz
lcall
or
loop
inc
bound
outsb
sbb
sbb
mov
push
rol
std
xchg
sbbl
ss
in
adc
das
lcall
shr
jle
inc
push
out
fidivl
sysret
cmp
in
fsqrt
push
and
mov
inc
das
dec
or
mov
pop
gs
mov
mov
push
leave
fsts
inc
pop
fnstsw
and
int
lret
push
fisttps
sar
pop
js
je
push
push
sub
movsl
jp
cmp
hlt
xlat
xlat
cmc
popa
sub
lret
jge
mov
aam
lods
cwtl
scas
cmp
aad
adc
cmpsb
xor
inc
addl
mov
sbb
push
mov
sbbb
and
cmp
dec
in
and
inc
dec
pop
push
stc
cmp
fs
cmp
mov
mov
push
xor
cmp
mov
pop
mov
fs
pop
add
jbe
in
mov
xor
in
imul
xchg
add
adc
push
stos
cmp
ret
push
je
setne
or
ja
outsb
sti
add
test
mov
sub
lock
ljmp
fisttps
mov
xchg
jg
jb
addr16
cmpl
ds
fistpll
sbb
je
cmpsb
jge
outsb
imul
inc
cmpsl
sbb
xchg
adc
popa
pushf
xchg
iret
cmc
jg
fsub
push
jne
adcl
push
mov
push
add
int3
cltd
sub
fisubrl
scas
sbb
andb
adc
scas
lods
cld
mov
in
jle
xchg
sarb
outsb
repz
adc
pop
push
stc
xchg
aad
inc
repnz
mov
je
cwtl
ljmp
mov
pop
call
lahf
lahf
and
push
push
mov
push
je
add
inc
inc
jb
in
push
cli
and
andl
lods
mov
fcompl
pop
pop
cmp
pop
fwait
and
pusha
dec
mov
dec
dec
cld
or
jnp
in
mov
out
jp
xor
aad
jl
shrl
jmp
add
jmp
movsl
data16
and
push
jo
xor
dec
test
fidivl
sub
scas
stc
cmp
xchg
and
jns
mov
test
jno
scas
pop
xchg
xorb
mov
mov
js
dec
sub
adc
jl
rorb
sbb
leave
ficompl
jns
mov
add
adc
add
pop
sub
jo
push
jmp
dec
cwtl
stos
fimuls
out
hlt
int3
push
je
aaa
mov
mov
mov
scas
pop
mov
add
mov
pop
in
das
les
or
xchg
xchg
addr16
or
movsb
enter
shll
and
rcrb
jns
inc
stc
mov
iret
orb
insl
cli
mov
jecxz
jp
js
jl
ss
sub
cmpsl
test
fadds
in
cld
cmp
cmpsl
cmp
sbb
mov
jg
jb
add
movsb
out
pop
mov
pop
mov
rcrb
mov
movsb
hlt
fmul
dec
mov
adc
pop
cmp
leave
pop
call
jl
xchg
aam
push
cmc
pushf
mov
pop
push
scas
ja
out
dec
rolb
or
push
push
repz
adcl
out
mov
lock
insb
sarl
push
mov
jmp
pop
cmp
int3
xchg
lods
cs
jo
push
add
dec
xchg
loope
xchg
cmp
outsl
loope
sub
xor
jbe
inc
dec
int
cmp
or
mov
or
pop
loopne
mov
aam
pop
adc
lock
cs
xor
xorb
mov
adc
pusha
push
mov
cmp
and
adc
mov
fsubrs
imul
add
push
lret
in
in
mov
xor
sub
sysexit
pop
xor
mov
scas
mov
rcll
lret
leave
inc
mov
mov
faddl
xchg
pop
mov
stos
repnz
xchg
fs
notb
xchg
pop
arpl
push
test
lahf
loopne
jno
jmp
bound
push
push
sub
lods
xchg
mov
adc
push
mov
pop
imul
xchg
dec
cwtl
sarl
fdivl
jl
cmp
filds
test
das
push
outsl
repnz
outsl
bound
or
gs
outsb
popa
mov
int3
les
push
xchg
adc
push
mov
pop
mov
add
push
test
mov
adc
cmp
dec
cmc
cmpsb
mov
xlat
lahf
test
xchg
inc
imul
mov
subb
add
fsubrs
addr16
les
das
sbb
adcl
rolb
into
hlt
movsl
pop
push
movsb
adc
incl
push
push
jecxz
jne
mov
sbb
ljmp
test
sbb
jge
fistl
inc
mov
imul
imul
mov
sbb
aaa
mov
jp
push
or
les
or
cwtl
xor
stos
mov
cwtl
adc
ss
inc
aaa
and
test
adc
mov
xorl
out
xor
pop
mov
shll
cmpsl
sub
test
xchg
cmp
popa
mov
ss
pop
loop
add
cmp
mov
mov
call
add
jae
ja
jno
int
or
dec
mulb
adc
jnp
xchg
sti
push
ror
sbb
iret
xchg
sub
xchg
pop
lahf
pop
shll
lret
mov
mov
repz
inc
lcall
jge
leave
outsl
dec
addl
jg
and
mov
jecxz
clc
inc
xor
stos
cmpsb
test
fcmove
mov
fiaddl
flds
int
je
test
mov
ljmp
movsl
pop
nop
sub
cmpsl
pop
cs
test
jle
adc
jae
jb
mov
and
push
or
fwait
mov
insl
outsl
dec
fwait
jns
mov
inc
mov
or
cmc
sti
dec
add
mov
inc
cmpsl
les
hlt
idiv
mov
rcr
movsl
mov
mov
jb
and
test
jne
clc
or
dec
cwtl
mov
scas
shrl
push
subb
pushf
lods
ljmp
pusha
js
das
clc
scas
cld
dec
daa
into
subps
aas
loope
ficompl
clc
jle
testl
lea
mov
xor
stos
iret
inc
mov
inc
cmp
js
imul
jecxz
rorb
es
cmc
inc
adcb
filds
sahf
mov
stos
mov
mov
jb
sbb
pop
pop
fbld
jge
xchg
mov
inc
push
sub
daa
mov
push
fildl
pop
ret
jle
and
arpl
jnp
sahf
mov
sbb
push
int3
xchg
test
adc
push
add
repnz
inc
push
outsl
push
into
into
sbb
subb
cmpsb
mov
dec
xor
hlt
iret
stos
daa
and
aaa
daa
addr16
mov
adc
js
in
jp
lods
adc
jae
mov
pusha
push
sub
jbe
jle
out
add
and
andnps
addr16
lret
push
push
sub
jbe
cs
or
push
ss
repnz
mov
pop
shl
xor
lods
insl
jecxz
xchg
push
add
inc
mov
scas
pop
sub
jmp
data16
sub
fdivl
pop
jmp
add
jg
cmc
sti
ret
lea
lods
in
aaa
lds
and
add
stos
xor
dec
or
push
jmp
pop
mov
fildl
fists
imul
push
pop
mov
xor
jg
cmp
popf
mov
jne
lcall
ljmp
xor
lret
adcl
pop
nop
and
bound
sahf
addr16
push
aad
mov
push
pop
ds
incb
xlat
dec
xor
rcl
repz
cmp
mov
or
add
adc
mov
or
pop
mov
inc
add
aas
xlat
es
push
mov
sti
repnz
push
cmp
inc
icebp
insb
lock
cmc
mov
add
out
push
test
scas
xor
movsl
mulb
ror
data16
xor
dec
ret
mov
cmp
repz
dec
lea
shlb
insb
ljmp
in
jmp
icebp
insl
mov
decb
inc
adc
sbb
cmp
xchg
and
adc
lcall
adc
mov
stos
cmp
enter
xor
fidivrs
jb
jmp
and
fwait
sub
les
call
dec
sarl
imul
jp
add
adcl
push
ds
movsl
xchg
add
dec
jp
test
mov
inc
icebp
cli
loop
shrl
and
sarb
shrb
sub
mov
loope
jno
nop
dec
or
daa
cmp
push
rcrl
iret
sbb
adc
andl
in
cmc
sbb
aaa
add
sub
fs
sti
aas
int
and
rorl
sbbl
popa
pop
sub
movsl
jbe
xor
adc
hlt
inc
popa
mov
add
cli
ds
jbe
sbb
push
enter
aas
adc
push
adc
sub
and
sbb
cmp
xor
adc
cmp
out
out
xchg
in
cwtl
and
jno
xor
push
ret
jno
push
sub
push
in
scas
lret
or
push
xchg
in
xor
xor
roll
negl
xor
dec
xchg
and
mov
std
push
sub
rorl
cmp
in
or
push
mov
inc
in
mov
hlt
pushf
pop
mov
inc
mov
ret
and
xchg
inc
cmp
jo
into
aas
xchg
lods
cmpsl
dec
mov
add
stc
lahf
inc
lea
pop
and
aaa
lods
movsl
call
add
imul
lcall
faddl
sbb
xchg
mov
mov
pop
cmpsb
dec
lock
jge,pt
insb
movsl
lods
pop
and
ret
stos
cmp
sub
mov
mov
and
sbb
and
push
subl
out
dec
adc
cmpsl
faddl
jp
ret
popa
mov
in
les
testb
daa
sbb
mov
jge
insl
push
loop
inc
dec
mov
lods
xchg
xchg
es
push
jecxz
push
pop
xchg
xchg
cmp
fisubl
inc
ror
and
aas
jne
dec
dec
icebp
jae
or
jno
insb
loope
insb
or
push
adc
bound
mov
mov
mov
negl
outsb
or
sbb
into
gs
cltd
mov
gs
mov
out
cld
outsl
jnp,pt
scas
and
int
fsubl
push
pop
sbb
ljmp
in
xchg
sub
cmc
sub
and
icebp
pop
stos
nop
mov
lea
out
mov
or
cmpb
mov
dec
cs
inc
xchg
mov
inc
mov
jo
orb
sbb
push
das
push
inc
pop
cmpsl
inc
sub
fs
push
xchg
ds
mov
inc
lcall
mov
pop
mov
jae
sbb
xor
inc
aas
jb
xor
adc
sub
mov
fisttps
jle
inc
pop
dec
imul
sbb
scas
shrl
imul
and
xlat
stc
inc
cmp
fs
iret
pop
cmp
js
hlt
jne
push
push
daa
out
inc
inc
in
shlb
jo
es
pop
push
outsb
jp
in
andb
popf
mov
in
or
xor
pop
pop
jle
push
fwait
js
xor
nop
hlt
push
and
cmpsb
inc
jno
add
add
add
je
andb
enter
aas
repnz
popf
hlt
in
shlb
jnp
pop
fst
xor
repnz
popa
pop
sbb
xlat
fdivl
lret
mov
lea
sbb
in
jge
push
mov
lahf
jl
push
out
jne
add
add
sbb
mov
fldcw
mov
adc
and
pop
inc
mov
rol
out
xchg
cltd
iret
cmp
sbb
ljmp
dec
ror
loope
inc
pop
jb
inc
xchg
add
dec
mov
mov
hlt
in
aaa
xchg
or
add
sbb
jmp
pop
divb
xchg
sbb
test
ss
dec
daa
sti
and
std
pop
mov
test
xor
int
pushaw
aaa
addr16
mov
cmp
inc
mov
sti
inc
cltd
mov
dec
jns
mov
mov
out
push
lcall
jp
mov
inc
fwait
and
cmp
out
inc
out
or
jbe
sub
sbb
insb
mov
mov
inc
stos
jns
aad
jns
rcrb
xor
push
jno
mov
jbe
lea
add
cmp
mov
ljmp
rcl
mov
add
icebp
lods
arpl
mov
push
imul
pusha
mov
lds
xchg
fldenv
dec
or
jge
loop
aam
mov
in
pop
jp
clc
aam
int3
cs
mov
push
call
stos
lods
in
xor
ret
pop
pop
scas
mov
pop
adc
inc
cli
lret
addl
insl
ljmp
jnp
pop
add
or
dec
sbb
sub
fstpl
or
jnp
mov
push
and
jb
ljmp
pop
jecxz
cmp
xor
xor
xchg
mov
test
fucomip
sbb
in
xchg
inc
dec
sub
les
mull
cmp
sbb
xor
dec
fdivp
sub
jae
adc
mov
movb
imul
xchg
jmp
adc
xor
test
jae
faddl
daa
inc
popa
push
int
subb
ja
cld
jb
lret
in
cmpsb
aaa
and
mov
in
inc
orb
inc
es
cmp
ficompl
and
stos
push
test
test
cmpsb
sahf
add
or
adc
sbb
mov
sub
jns
push
in
and
mov
xorb
in
and
mov
or
std
sbb
sub
or
call
dec
jge
sub
pop
inc
fidivrs
mov
ror
cli
sub
xchg
mov
sbb
sbb
inc
mov
mov
int3
test
xorl
jo
xchg
xchg
test
sub
jle
mov
jns
into
test
push
cld
stos
xchg
and
or
into
mov
in
je
jmp
mov
pop
and
jmp
jecxz
inc
mov
jns
mov
aad
jo
lds
and
sub
jne
inc
xor
rorl
into
mov
push
mov
lahf
xorb
xor
outsb
dec
lods
mov
push
cwtl
scas
lds
hlt
mov
inc
jne
ljmp
test
sub
and
mov
shr
pop
lret
add
rclb
sub
dec
inc
dec
xor
sub
ficoml
jnp
sbb
jmp
sbb
stc
sahf
cmc
clc
cmp
enter
in
push
aad
out
adc
mov
hlt
icebp
mov
push
xchg
into
sub
aad
xor
orl
xchg
test
loop
insb
loope
lcall
jl
es
xor
jl
in
inc
jmp
push
mov
rcl
jmp
sarb
jno
lahf
inc
cmp
in
lods
push
popf
jmp
dec
das
jmp
mov
push
imul
mov
jp
lds
mov
fwait
inc
test
cmp
xchg
inc
sub
stc
cmp
adc
inc
mov
sbb
in
out
jecxz
cwtl
in
arpl
add
adc
outsb
mov
sti
lret
and
inc
ret
mov
dec
mov
mov
hlt
mov
ds
bnd
push
iret
gs
fnstsw
fsubrl
lods
mov
sbbb
hlt
mov
jo
repnz
fprem
jmp
idiv
add
fstpl
jp
es
outsb
sbb
mov
add
mov
push
or
push
stos
xor
xlat
popa
negb
sub
or
aas
clc
mov
cmp
mov
or
jecxz,pn
adc
inc
add
lock
cli
mov
in
adc
and
aas
aas
cmp
sbb
pop
adc
int3
stc
or
fwait
xchg
aam
jg
or
cwtl
in
jae
sbb
mov
dec
fcoml
jecxz
mov
icebp
xor
into
mov
mov
cmc
jno
pop
imul
popf
je
mov
loopne
sbbb
mov
jecxz
mov
xchg
gs
pop
repz
jo
add
fsubr
daa
inc
pmulhw
mov
jl
mov
fidivrs
dec
add
testl
clc
imul
push
xchg
rcrb
fwait
cmp
push
std
fnsave
cmp
test
pop
xor
cmpsb
decl
stos
pop
cltd
mov
fisttpl
and
jle
insb
adc
dec
addb
pop
pop
movsb
decb
lods
stos
stos
leave
lods
sbb
push
rorb
pusha
mov
xor
test
and
xchg
and
out
sahf
sbb
push
es
sub
rcpps
pop
add
adc
ficoms
xor
out
out
mov
sbb
bnd
imul
jbe
cltd
push
and
cmp
inc
push
call
mov
sub
test
cltd
xchg
push
repnz
outsb
cs
mov
in
test
mov
dec
lods
xor
pop
xor
and
mov
jg
shrl
mov
test
push
jns
push
insl
jle
in
mov
push
push
cli
dec
fcompl
imul
push
pop
adc
push
out
jo
int3
add
iret
inc
push
mov
cmp
bound
xchg
inc
push
mov
dec
in
or
pushf
movl
lret
out
es
push
mov
rcl
mov
fisttpl
xchg
hlt
imul
fs
fiadds
sbb
and
imul
nop
dec
jbe
cltd
mov
mov
popf
inc
ret
pop
push
mov
inc
push
movsb
je
push
in
aam
ficomps
imulb
das
and
or
loopne
mov
cs
iret
xlat
and
es
add
inc
mov
idiv
jo
ja
adc
sub
and
aaa
or
aaa
mov
push
sub
mov
enter
jg
fiadds
addr16
loop
push
movsb
mov
sbb
dec
mov
std
scas
sbb
es
leave
add
cmp
loope
xchg
lock
mov
ret
add
stos
cmp
aam
cwtl
cs
jnp
shrl
push
mov
jo
cs
pop
int
sub
push
sub
mov
adc
arpl
test
push
or
outsl
call
test
or
inc
je
dec
or
sbb
dec
xor
aaa
cmp
xor
mov
pop
in
cmc
inc
lahf
push
test
mov
cmc
xor
lods
js
dec
loopne
cli
in
ret
pushf
pop
or
sub
jbe
add
xchg
mov
outsb
sub
jg
push
dec
inc
aam
mov
lret
mov
shrb
pmulhuw
dec
and
push
cmp
jecxz
jle
div
subb
rcrl
lret
mov
mov
pop
xor
rol
jle
insb
jp
popa
js
es
dec
adc
inc
cmpsb
inc
in
ds
int
gs
adc
ret
sbb
xchg
xchg
sub
test
fmull
mov
dec
lret
add
dec
xchg
inc
in
lds
lcall
push
dec
add
mov
dec
out
jo
and
loop
inc
sub
jbe
frstor
lahf
lods
push
mov
jg
mov
lods
mov
fcoms
sarl
adc
dec
fcom
not
mov
seta
lret
ljmp
push
xchg
sub
push
scas
lahf
jb
inc
sub
or
sub
lods
andl
inc
loopne
pop
lods
daa
imul
adc
inc
mov
pusha
in
sbb
sub
cmp
cmp
imul
test
jp
arpl
mov
cmp
pop
push
xchg
sbb
lods
repz
push
mov
out
mov
in
loop
data16
jp
add
xchg
and
and
mov
jne
call
and
sbb
pop
xor
pusha
cmpsb
lret
sub
cmpsb
dec
icebp
fisubs
xor
xor
lcall
cwtl
mov
mov
sbb
and
jle
inc
int
insb
lds
ss
sub
push
xlat
mov
adc
es
xchg
cld
xorl
fsubp
add
sbb
js
or
pop
xchg
rorb
mov
dec
mov
jle
or
pushf
test
and
jns
daa
divl
vmread
push
lods
aas
daa
jns
mov
cltd
mov
ret
mov
adcl
fidivrs
mov
and
sti
xchg
sub
mov
insl
dec
sbb
cltd
sub
fs
mov
test
push
sahf
div
pop
dec
and
sbb
adc
mov
out
adc
jo
mov
divb
push
xchg
xchg
cmpb
mov
mov
adc
mov
testl
add
jno
sub
in
daa
cmpb
push
xor
pop
pop
cmp
test
push
incl
xor
ss
inc
and
mov
aam
icebp
ret
mov
sub
aaa
aam
pop
cmp
mov
adc
ds
in
in
jnp
movsl
and
xor
jb
add
sarb
cmp
adc
out
jns
aaa
lds
mov
sub
or
cmpl
xlat
mov
lds
cltd
data16
repz
jp
imul
sub
pop
pop
xchg
in
mov
jo
xor
inc
iret
add
shl
jmp
adc
dec
addr16
mov
sbb
or
pushf
gs
mov
test
xchg
or
dec
push
loope
xor
push
push
add
push
inc
cmc
stos
jmp
je
push
and
arpl
adc
inc
sbb
addb
mov
stos
mov
add
sarl
jmp
adc
cmp
jbe
add
fcompl
lret
mov
pop
pop
das
leave
enter
fiaddl
sahf
cld
inc
outsb
fbstp
pop
mov
clc
andb
fbstp
sbb
stos
lods
in
inc
push
sahf
push
scas
xchg
sub
cmp
mov
or
mov
cmp
adc
clc
stos
inc
test
in
dec
cmp
jle
pop
jg
jmp
or
lock
mov
subb
ss
dec
cmc
xchg
adc
hlt
xor
and
adc
shr
cwtl
je
dec
clc
or
stos
loope
test
es
jmp
pushw
dec
orl
fldenv
es
dec
fistl
gs
ret
movsl
or
and
sub
sbb
jle
test
mov
fldt
stos
sub
xchg
mov
aas
push
repnz
daa
int3
jae
dec
mov
mov
jle
orb
sbb
aad
cmp
sub
lahf
and
mov
negb
xchg
outsb
push
rcll
ss
sti
nop
mov
mov
mov
test
xorps
cs
jle
out
pop
decb
cmpb
mov
push
push
inc
jno
loope
xlat
lods
jno
cmp
push
cmp
cli
jb
stc
addr16
mov
push
pop
or
push
jecxz
mov
outsl
outsl
cmpsl
mov
or
aas
cli
or
test
insb
scas
gs
shrb
aad
mov
xchg
jmp
enter
fbld
dec
push
cmp
imul
cmpsl
fnstenv
push
fwait
pop
sub
mov
sub
dec
add
inc
lds
inc
clc
sub
mov
lds
sbb
fsts
enter
jp
mov
loopne
decl
inc
cmc
std
dec
ja
or
in
pop
jmp
jb
dec
push
cli
dec
jae
test
inc
pop
and
mov
xchg
mov
xor
outsb
lock
jge
ret
push
js
mov
add
jmp
mov
cmp
mov
jnp
pop
out
ss
call
mov
cli
pop
inc
cmp
sub
lcall
jo
lods
mov
fisttpll
add
adc
pop
push
adc
inc
popf
lea
jo
int
fsubl
adc
aaa
ret
popf
fiadds
in
adc
mov
aam
sbbb
out
xchg
add
jecxz
scas
xchg
sarb
fdivp
sbb
je
mov
popf
test
popa
mov
pop
ja
mov
sub
jns
xchg
ja
sub
pop
xor
fildll
es
pop
int
push
xchg
les
popa
cmp
ja
mov
lahf
xorb
loope
mov
jl
cmc
mov
or
ja
js
sub
sub
movsl
jne
icebp
mov
sbb
pop
push
mov
cmp
mov
iret
das
jne
rorb
push
lock
mov
push
sbb
mov
jmp
cmp
sub
push
add
mov
imul
rorl
out
pop
mov
aad
leave
mov
push
sbb
inc
addr16
or
cmp
out
hlt
push
fcmovnbe
cld
mov
sti
and
dec
lcall
repz
sub
into
add
pop
frstor
jb
js
into
jl
inc
xor
aam
dec
cmp
pop
jae
hlt
lret
loopne
mov
iret
negl
lods
sbb
aas
in
adcb
xor
and
dec
and
bound
gs
cmc
pop
pop
xor
icebp
sub
and
ja
lahf
add
fcomps
sti
pop
dec
fdivr
inc
jbe
into
sub
scas
xchg
cmp
xchg
stos
mov
xchg
out
repz
repnz
in
test
inc
stos
aam
mov
inc
nop
dec
cmp
repnz
imul
shll
in
out
xorl
cwtl
mov
test
lret
enter
push
movsl
xor
ret
ss
dec
add
jb
jp
int
sub
mov
mov
xchg
dec
fs
das
mov
int
jl
lret
fucomp
mov
nop
fsubrl
sub
int3
stos
inc
sub
leave
mulb
insl
les
stos
add
inc
fs
scas
jno
mov
cmp
and
rcrl
andb
decb
fucomi
push
inc
daa
or
jl
pop
fdiv
add
lahf
inc
loopne
lret
or
cmc
and
jnp
test
jmp
mov
cmp
jbe
lock
and
jno
mov
push
inc
lods
pop
jmp
ja
lods
push
sarl
add
mov
jl
test
jmp
inc
pop
stos
lret
adc
les
add
pop
stos
test
mov
pushf
push
aad
sub
dec
add
insb
out
jle
jae
jge
fisubrs
div
adc
in
bound
stos
mov
cwtl
push
push
xlat
inc
pop
sub
jecxz
cmp
lret
cmpsb
out
adcb
out
mov
mov
mov
jg
popf
inc
mov
pushf
xchg
mov
shlb
pop
mov
push
and
or
pop
shrb
inc
push
or
inc
fs
xorl
loop
int
add
inc
dec
insl
idivb
or
popa
jmp
lods
or
divl
mov
adc
push
into
mov
in
adc
pusha
cld
add
jno
push
push
pop
insl
outsb
jnp
add
or
insb
scas
sar
fmuls
xchg
hlt
adc
cmpsb
orb
mov
xchg
xchg
mov
addr16
add
jnp
out
cmpl
fs
add
out
lods
mov
aaa
xchg
outsb
int3
out
fdivrp
mov
jnp
xchg
mov
xchg
adc
movsb
rorb
lret
aas
out
or
xor
jno
fs
pop
aas
lret
xchg
ret
cmpb
std
mov
clc
pop
xchg
imul
fcomp
test
xor
mov
mov
pusha
push
jp
loop
push
fdivr
imul
jecxz
cwtl
push
lret
dec
jae
jae
inc
mov
out
mov
stos
movsl
sbb
mov
dec
pop
sub
mov
loop
xor
push
inc
rcrb
xor
cmpsl
push
push
and
insb
popa
mov
and
xchg
jne
add
xor
xchg
and
sahf
fs
leave
push
jle
ret
int
mov
out
iret
cmp
iret
cmpsl
adc
int3
mov
lcall
lahf
ja
xchg
je
inc
xor
mov
lea
push
mov
test
xor
jecxz
dec
add
cmpsb
or
jnp
or
and
sub
or
push
xor
pop
xor
sbbb
out
fs
leave
cmp
sbb
mov
repz
popa
pop
icebp
ret
sub
push
push
int
and
dec
es
lock
sbb
push
shr
in
jns
push
aam
push
mov
and
rcrb
inc
jbe
and
cmp
add
sbb
mov
dec
lods
clc
cmp
jmp
add
xchg
jle
push
call
lods
loope
loop
xchg
aam
pop
pusha
mov
mov
xchg
push
sar
sub
or
into
ljmp
scas
or
jge
cmc
ficoms
mov
ljmp
pop
dec
and
push
xchg
xor
arpl
loop
sub
shlb
xchg
addr16
fsubp
int
pop
sbb
enter
dec
or
inc
lret
mov
lret
sub
adc
mov
xchg
rcl
ds
rorl
js
adc
pop
mov
cli
clc
and
adc
adc
popf
and
call
or
bound
mov
test
inc
lea
mov
out
cli
xchg
xchg
rolb
pop
jb
or
cld
subl
movsb
test
inc
dec
repz
pop
daa
jns
cmp
data16
mov
push
fsubrs
addr16
xchg
std
rcrb
lret
inc
pop
jbe
call
add
pop
mov
dec
popf
push
loope
xor
and
ljmp
ret
cmp
add
add
pop
roll
mov
popf
and
push
and
mov
jp
mov
fldt
push
int
lahf
and
add
adc
repz
movsb
inc
sub
pushf
cltd
sub
cli
in
cmc
mov
insb
inc
js
xor
repnz
mov
addr16
lock
sbb
icebp
sub
mov
mov
xor
cmp
scas
lock
cmp
test
add
iret
jl
sbb
add
rcrl
into
mov
movsl
fisubrl
jecxz
push
sti
lret
mov
repnz
orb
fwait
and
andl
hlt
int3
add
stos
lods
scas
cwtl
pop
fs
add
jb
int3
rcl
negb
dec
inc
popf
xor
push
aad
xor
add
or
add
pop
movsb
orl
daa
and
xlat
push
sub
xchg
pop
mov
mov
enter
and
jnp
xchg
add
int
fstl
sahf
pop
loop
jne
orb
imul
in
ret
dec
and
and
fcomps
mov
filds
leave
test
outsb
testl
in
sbb
cmp
daa
cmp
push
ficoml
hlt
cmp
pop
pusha
test
xor
rolb
xor
cmpsl
rcl
js
cwtl
arpl
inc
stos
mov
xchg
push
xlat
push
loopne
out
add
or
jb
push
add
or
jmp
push
cwtl
cs
jmp
xchg
xorb
fsubs
mov
mov
mov
mov
jb
test
sti
cmpsb
mov
shll
inc
shl
int
enter
xchg
sbb
add
pop
dec
cs
nop
mov
xor
lea
std
inc
stos
repnz
outsb
lret
jo
sbb
lahf
fistps
subb
mov
push
ret
push
jo
inc
dec
aaa
enter
xchg
out
jl
mov
xchg
lahf
filds
mov
jns
cwtl
and
mov
out
mov
pop
pop
or
cmp
addr16
push
in
fisttpl
cmpsb
jmp
cwtl
sbb
jne
popa
out
out
push
cmp
pop
push
shl
rcrb
int
fsubrp
mov
dec
add
mov
add
push
insb
insb
mov
nop
xlat
daa
aad
xchg
das
or
sbb
shll
and
pop
xlat
or
jae
in
push
aas
popf
mov
xor
cmpsl
add
inc
xchg
cltd
cld
aas
out
jp
and
dec
ds
cmp
and
cmovno
push
mov
sub
push
jle
dec
lret
jg
inc
inc
hlt
loop
arpl
in
test
mov
loopnew
xor
rol
adc
push
lods
sub
push
and
out
clc
dec
sub
add
pop
enter
jg
in
push
push
cmp
shrl
clc
add
push
jb
imul
outsl
ljmp
sub
jno
scas
adc
dec
daa
push
std
cmc
mov
add
nop
jmp
jecxz
or
add
or
mov
rorl
fsubr
call
jne
scas
loopne
subb
dec
push
lods
xor
adc
rep
repz
adc
call
jb
xor
insl
mov
call
lods
int
cmp
fsts
and
mov
adc
xorl
outsb
out
in
rorl
add
sub
gs
dec
push
pop
dec
in
icebp
mov
and
test
mov
xor
sub
icebp
jbe
sub
add
adc
mov
ds
or
repz
adcl
bound
jg
stc
xchg
sub
ficoml
push
test
sub
or
in
mov
ss
loope
mov
cmp
fwait
adc
mov
in
xchg
push
mov
lahf
xor
dec
rorb
hlt
shrl
cmc
mov
cld
and
mov
push
and
test
pusha
mov
or
lds
mov
sbb
pop
sbb
jmp
scas
lcall
push
xchg
scas
ss
in
pop
push
int3
or
cmp
xor
mov
mov
hlt
aaa
fidivrs
and
jbe
or
iret
fadds
mov
cltd
push
jnp
insb
sbbl
and
pop
inc
jbe
mov
fdivs
addl
xchg
sti
fsubs
bound
sbb
xchg
ja
imul
jne
jnp
hlt
add
out
adc
lods
sub
movsl
rcll
dec
movsl
cmp
mov
ss
jne
mov
mov
enter
lods
xchg
xor
cmpsl
xchg
push
or
sbb
pushf
add
mov
int3
insl
sub
mov
push
stc
insl
lds
mov
fisttpll
ljmp
bound
xchg
push
pusha
cli
fdivrs
popa
cmpsl
dec
mov
int
call
lods
xchg
sbb
mov
addr16
sbb
cmp
pop
fistps
push
out
fidivrl
mov
shlb
jecxz
mov
jne
imul
aas
adc
pop
jecxz
lcall
cmp
out
xchg
es
sub
add
sub
push
aad
fdivrs
jo
inc
movsb
mov
leave
jge
and
cmpl
or
sahf
insb
pop
loopne
xchg
testl
and
add
and
scas
outsb
lock
pusha
xchg
loop
cmp
inc
sbb
test
arpl
mov
stc
int
js
mov
xor
mov
lret
and
enter
mov
xor
mov
push
cmp
std
adc
in
test
mov
je
ljmp
xchg
pop
mov
insb
in
dec
mov
and
pop
mov
add
or
inc
jl
sbb
jmp
clc
jecxz
std
mov
mov
pushf
and
mov
sub
cltd
cltd
pop
aad
hlt
dec
fdivr
insb
push
push
or
mov
in
and
sbb
clc
test
xchg
mov
icebp
inc
jno
add
xlat
push
out
add
xchg
and
dec
bnd
mov
data16
jae
cld
in
cmp
push
mov
and
mov
in
cmc
or
xor
add
stos
data16
mov
int3
mov
add
out
not
rcrl
pushf
jl
sbb
jp
aam
jle
mov
mov
aad
mov
inc
shll
push
push
cmc
push
jae
inc
sbb
movsb
sbb
in
fwait
cmp
psrlw
add
shl
xchg
ss
lret
sti
dec
imul
jmp
arpl
into
adc
adcl
xchg
scas
pop
ror
inc
lea
and
sub
cli
sub
xchg
mov
mov
mov
mov
nop
inc
cld
push
loop
xchg
and
dec
sahf
lcall
pop
jl
sbb
mov
jbe
xlat
pop
daa
jne
mov
and
aam
in
cmp
imul
mov
sub
into
pop
cltd
ss
ss
push
add
xchg
jmp
adc
cmc
xor
dec
push
cmpsb
pop
aad
xchg
mov
inc
sub
mov
push
daa
mov
cmp
pop
pop
jl
or
lock
push
push
pop
and
daa
jecxz
fs
popf
bound
add
xor
scas
fsts
popf
sbbb
inc
mov
or
or
xchg
push
xchg
inc
loop
push
cmpsb
lret
decb
mov
add
scas
xchg
insl
aaa
popf
lret
adc
enter
aam
inc
push
pop
in
cmpsb
leave
ds
pop
cmp
pcmpeqb
aad
mov
adc
loopne
push
sbb
leave
mov
mov
in
xor
iret
pop
mov
mov
iret
jmp
imul
dec
cli
loopne
cli
push
fdivl
sub
pop
dec
xchg
pop
dec
or
outsb
mov
cmp
jbe
icebp
and
enter
movsb
push
sub
adc
fisttps
mov
das
mov
jmp
jno
es
fidivl
sub
leave
pop
jb
sarb
or
dec
in
dec
xor
jno
aam
aaa
jp
mov
test
and
mov
movsb
stos
adc
pop
jmp
mov
into
dec
cs
pop
push
sti
and
in
lods
sub
int3
cltd
les
enter
icebp
push
repz
mov
je
call
lcall
popf
mov
int3
mov
shr
mov
out
mov
pushf
stos
fdivs
mov
adc
lret
push
aam
out
jecxz
cs
mov
sbb
push
mov
sbb
repnz
xchg
cmp
inc
mov
enter
jge
fcoml
daa
ljmp
lods
jae
adc
push
sub
pop
jp
bnd
lds
lods
mov
rorl
mov
aad
xor
push
cmp
pop
out
or
sub
xor
dec
jmp
rol
mov
fcoms
mov
sub
cmpsb
pop
in
xor
mov
mov
mov
dec
mov
mov
pop
inc
popa
jl
es
sbb
std
pusha
out
push
test
inc
xchg
xor
jb
push
jecxz
jmp
aaa
nop
add
stos
test
lock
test
mov
inc
divl
pop
push
xchg
jns
int
fcoms
xchg
jp
mov
mov
push
xor
sbbb
arpl
mov
bound
add
inc
ja
je
fcoms
push
movsb
mov
jmp
cltd
lock
idivb
aam
dec
xor
sbb
xor
sub
mov
xor
pop
test
rcrl
fisttpll
cmp
mov
imul
loope
outsb
stc
xor
call
pop
in
subl
mov
sbb
arpl
jne
mov
cli
adc
mov
je
repz
lret
popf
rcll
adc
add
dec
xchg
xchg
clc
add
adc
in
jecxz
inc
jp
xor
xor
xor
add
call
cmp
fcmovb
mov
lds
into
inc
mov
enter
test
sbb
jp
mov
jae
ret
push
sbb
jge
jbe
push
mov
in
loope
cmc
cltd
push
adc
repz
pop
adc
dec
setle
xchg
xor
mov
sub
cld
adc
addr16
adcb
stc
dec
lods
in
xchg
or
jmp
aad
jno
arpl
dec
inc
jno
stos
in
out
rcl
shr
testb
repz
xchg
inc
mov
cltd
gs
push
cli
mov
adc
in
push
pop
nop
or
inc
cs
stc
dec
idiv
adc
sub
xchg
scas
sub
sub
dec
jle
sub
fdivl
sub
outsl
test
mov
and
mov
fs
scas
push
js
lea
mov
aaa
jb
sbb
xchg
sbb
aaa
ret
je
test
xchg
in
pop
inc
pushf
xor
shlb
jg
pop
or
mov
xchg
cmpsl
icebp
lea
sahf
fisubrs
scas
fsub
cs
push
mov
packsswb
fisubs
or
hlt
ret
pop
pop
jle
mov
and
dec
imul
fdivl
sub
jns
cmp
xor
cmp
pop
or
ss
push
jle
jno
das
mov
xchg
or
sarl
jp
xor
scas
psrad
adc
dec
cmp
jne
pop
rorb
cmp
xor
fistpl
xlat
mov
pop
sbb
and
mov
and
enter
push
callw
xor
add
add
mov
rorb
xlat
rcl
faddl
rcr
jl
dec
and
int3
stos
add
notl
aaa
adc
pop
je
jne
and
ret
pop
inc
mulb
rorl
int
stc
ret
xchg
into
cld
or
sbb
pop
mov
repnz
or
or
lret
adc
add
mov
cld
subl
inc
inc
push
pusha
mov
xor
ss
push
inc
inc
mov
inc
sbb
sti
adc
movsl
sbb
pop
ds
cmp
fcompl
pop
test
inc
jns
lret
adc
stos
pop
add
sahf
sub
jbe
add
adc
dec
pop
pop
int3
lods
mov
and
mov
pushf
or
aad
enter
mov
push
scas
add
lods
fisttpl
icebp
jno
mov
cmp
test
sub
dec
jge
clc
stc
aaa
pop
mov
jle
leave
inc
scas
push
jae
bound
scas
dec
sahf
push
punpckhbw
mov
inc
aam
ret
lcall
scas
push
mov
cmp
mov
push
insl
test
xchg
or
xchg
xchg
add
jo
bnd
jl
mov
inc
test
dec
popa
loope
add
je
stos
mov
xor
mov
jle
pop
push
outsl
mov
dec
lcall
out
cli
sarb
ja
idiv
icebp
xchg
fwait
ljmp
fsubp
aam
test
in
int3
imul
sbb
sbb
push
jno
or
adc
cmpsl
cmp
mov
out
mov
ss
xor
push
pop
inc
aaa
cltd
push
or
into
mov
lods
cmpsl
cmp
fistl
mov
enter
pop
fidivs
add
xchg
mov
sbb
mov
push
sub
jbe
enter
push
mov
or
xor
popa
lcall
out
push
adc
push
jnp
adc
std
xor
iret
mov
rcrb
fcmovu
pushf
mov
outsl
lret
inc
pop
stc
xlat
push
packsswb
cmp
rcrb
inc
pminsw
pop
or
mov
mov
shll
and
ret
and
mov
enter
mov
out
mov
sbb
dec
cmpsb
inc
jno
lcall
pop
adc
rolb
cmp
dec
xchg
mov
pop
inc
mov
fbstp
push
pop
pop
icebp
xchg
movsl
rclb
rorb
sub
mov
pusha
pop
fisttps
jmp
jne
imul
ds
in
and
dec
push
push
dec
xchg
xor
push
mov
iret
dec
cmpb
ret
push
push
pop
test
jae
sub
pop
mov
aas
pop
repz
lahf
xchg
test
shlb
xchg
mov
cld
lods
jnp
ficoms
jl
test
std
xchg
mov
out
jnp
adc
pop
inc
jecxz
sub
push
or
sub
push
sub
pop
movsl
xlat
fldenv
lds
fcmovnbe
stc
gs
adcb
ret
inc
rolb
lock
mov
mov
lret
dec
inc
stos
sub
pop
sarl
jg
es
aam
pop
roll
inc
lahf
hlt
mov
iret
xchg
call
inc
dec
movsl
bound
cmp
xor
psubsw
adcl
push
dec
cmpsl
or
iret
mov
fbld
aam
scas
in
xchg
stc
mov
pop
mov
xchg
push
pop
fcmovne
cli
ljmp
movsb
loope
cmp
inc
cmp
add
jge
lret
adc
mov
dec
push
jmp
jle
adc
sahf
in
push
mov
sbb
dec
fstpl
pop
adc
mov
push
and
mov
inc
popf
dec
roll
divb
jns
inc
popl
or
pushf
sub
movsl
push
xor
mov
lea
enter
arpl
add
adc
nop
and
jp
int3
mov
test
adc
inc
test
fwait
or
sti
xchg
push
out
mov
dec
jl
add
jle
add
and
push
sbb
mov
push
rorl
dec
jne
mov
ret
xchg
pop
xchg
jns
stc
lods
inc
pusha
rclb
pop
stos
pop
leave
ficompl
mov
adc
ljmp
or
xor
loopne
ficompl
int
sbbb
std
ja
jno
ja
scas
mov
xor
testb
pusha
jecxz
sbb
loop
in
fists
inc
imul
aam
and
aad
shrb
jp
cmp
dec
in
testl
add
stc
sub
cmp
pop
mov
cmp
movsl
bound
adc
les
jb
sub
out
fldl
pop
or
xor
js
jb
xchg
fnstenv
movsl
mov
add
jle
leave
cmp
mov
mov
andb
inc
mov
mulb
mov
fcomps
xchg
roll
popa
movsl
inc
xor
and
rcll
cmp
dec
xchg
loopne
fs
pushf
imul
push
filds
call
cmc
xchg
push
sahf
in
clc
lcall
dec
lea
inc
and
dec
nop
dec
mov
xchg
add
push
mov
push
sub
cmpsb
sbb
mov
aaa
data16
push
adc
and
les
orl
icebp
pop
stos
aas
xchg
or
lock
mov
xor
fstp
xchg
add
lods
xchg
and
push
adc
cmpsb
dec
fistpl
adc
jae
push
mov
inc
fstpl
inc
xchg
lcall
loopne
leave
in
xor
fcomps
ss
pop
ds
jb
call
sar
sub
inc
inc
sbb
or
jno
inc
loope
aad
fdivs
sarl
stos
xchg
data16
cmp
stos
int3
inc
pushf
add
nop
lret
cmp
out
in
adc
and
ret
mov
sti
mov
mov
ja
pop
aaa
gs
sbb
xchg
sbbb
push
mov
adc
arpl
xchg
push
adc
mov
sbb
xlat
lds
jp
push
or
daa
or
mov
sti
dec
xchg
ds
test
js
jg
pop
mov
xchg
imul
sbb
sbb
jo
jg
jg
sbb
iret
cmpsb
jnp
push
sub
cmpsb
arpl
or
in
shlb
mov
cmpsb
rclb
data16
fsts
push
xor
mov
pop
insb
sti
cli
addl
les
push
add
or
shlb
push
fs
lods
pop
jmp
xorb
imul
sub
push
jp
fs
loop
mov
mov
dec
sub
xchg
idivl
loop
int
mov
dec
inc
ret
insl
loope
push
cmpsl
jno
jno
inc
clc
mov
imul
aad
test
add
push
push
add
int3
mov
movsb
sbb
add
ret
outsl
mov
pop
push
xchg
repz
lock
dec
mov
xor
daa
mov
xchg
jge
ljmp
mov
nop
push
iret
idivb
jmp
inc
mov
js
pushf
addb
mov
sbb
pop
add
pop
adcb
stos
call
cli
push
in
pop
xor
push
fists
fidivrs
out
and
fcmovnb
lcall
pop
insl
inc
dec
adc
mov
mov
lock
mov
cmpsb
loop
xor
stos
fcmovb
dec
jbe
push
lock
add
jno
dec
dec
imul
and
xchg
mov
add
repnz
out
inc
jl
xor
cmpsb
hlt
test
ljmp
mov
outsl
jo
scas
xor
mov
scas
or
data16
cli
and
inc
imul
xor
add
out
lret
rcll
lods
shl
test
xchg
sub
rorl
xchg
pop
pop
cmp
sbb
push
inc
aad
push
sti
in
popf
leave
and
mov
inc
sub
call
dec
nop
mov
loope
mov
mov
mov
sarl
xchg
xchg
mov
jmp
outsl
in
nop
and
in
sbb
insb
dec
jne
pop
aas
cmpsb
sbb
aaa
pop
cmp
std
movsb
pop
imul
lods
addr16
and
leave
outsl
popa
xchg
scas
test
pop
testl
fdivs
mov
pop
inc
lods
inc
and
ljmp
push
ds
test
lods
aam
push
sub
pop
popf
aad
popf
inc
xor
pop
adc
push
cmp
jb
or
add
xor
mov
ja
push
cmp
clc
insl
fsubl
cmc
sub
mov
out
rcrl
int
cli
and
jns
test
lcall
mov
dec
xchg
lret
jae
jns
mov
fistpll
test
out
test
dec
cmpsb
clc
cwtl
rclb
inc
mov
das
dec
es
dec
adc
adc
enter
push
mov
outsl
in
std
into
ja
orl
sbb
out
push
fs
jge
mov
ret
mov
pop
enter
xchg
or
vorps
cmp
sbb
or
jg
jecxz
hlt
pop
cmpsb
movsb
ja
push
pop
popf
xor
mov
jge
outsl
cmp
mov
push
inc
mov
mov
int
push
pushf
xor
push
cwtl
testl
or
xor
push
wrmsr
pop
sbb
cmp
add
push
rcr
icebp
inc
movsl
imul
cmp
xchg
test
xor
inc
lea
xchg
inc
push
push
adc
xchg
imul
mov
lahf
es
pop
je
cli
scas
adc
jnp
fisttpl
cmpsb
inc
cltd
pop
cmpsb
jg
test
andb
nop
sub
and
pop
add
mov
jae,pn
sbb
dec
push
or
arpl
lock
dec
inc
in
std
pop
push
and
and
ljmp
xchg
sbb
out
cmp
movsl
xorps
mov
adc
int
mov
adcb
lods
aaa
dec
fisttps
inc
or
pop
lahf
sbb
mov
mov
scas
nop
mov
jge
adc
push
mov
test
sbb
repnz
jle
ret
stc
js
mov
xchg
mov
out
daa
push
testl
jle
movsb
lock
push
cmpsb
cmp
fdivrl
arpl
sbb
sti
push
lcall
and
sbb
mov
and
into
inc
stc
pusha
sub
adc
sahf
cwtl
subl
jns
fstps
pop
cmp
sahf
flds
xchg
movsl
ret
or
mov
inc
push
adc
ret
jns
in
ficoms
mov
filds
popl
sub
ljmp
ja
and
add
mov
in
cmp
rcrl
or
std
push
cs
xor
jle
gs
jno
aam
mov
adc
shrb
in
es
xchg
cmp
sbb
rorl
popf
dec
sub
push
bound
mov
sub
in
scas
mov
sbb
rorb
cmpsl
subps
ljmp
mov
inc
push
and
bound
mov
ja
je
call
inc
mov
mov
jmp
pop
ret
sub
mov
ret
pushf
in
in
cmc
push
icebp
mov
xor
roll
add
adcb
mov
jae
push
lret
add
push
notl
push
cmp
pop
int3
notb
stos
movsb
mov
sbb
xor
into
push
andl
mov
push
jle
sub
imulb
or
loop
mov
jno
scas
iret
push
sti
xor
sbb
outsb
fildll
fdivl
data16
ret
cmpsb
stos
in
lock
pop
ret
pop
jecxz
shll
dec
clc
pslld
loopne
fnstsw
in
inc
cmp
push
jl
xchg
data16
loopne
push
pop
dec
jl
cmp
je
adc
sub
mov
test
mov
or
das
mov
push
cmp
pop
scas
inc
xor
scas
scas
sub
xchg
mov
and
ds
lcall
adc
pushf
jmp
call
xor
mov
sbb
pop
jnp
xor
jo
icebp
out
shl
mov
and
aad
loopne
stc
movsb
adc
cmp
jecxz
or
pushf
out
sbb
ljmp
inc
lods
mov
mov
jae
mov
pushf
loope
add
aas
mov
xor
mov
dec
rorb
and
push
lret
pusha
xchg
scas
xor
jns
fildl
dec
add
imul
test
mov
int3
addl
sub
push
cmp
fdivr
pop
pop
pop
sub
pop
adc
or
out
push
push
call
mov
scas
arpl
xor
adc
divl
xchg
push
ret
sub
cmc
ljmp
xchg
dec
leave
icebp
std
stc
ljmp
adc
fstl
cmpsb
sub
shll
sarl
push
clc
mov
sub
push
jno
sbb
in
xlat
mov
mov
inc
mov
inc
dec
sub
addr16
adc
shlb
ljmp
inc
mov
xchg
rcl
bound
jo
or
mov
or
loop
xchg
xchg
fs
enter
jle
das
add
sbb
add
je
push
fisttpll
sarb
mov
jg
push
out
iret
lret
std
mov
adc
and
mov
add
mov
movsb
xor
mov
inc
adc
imul
das
mov
scas
pop
cmc
or
mov
int3
roll
pop
cmp
jae
lret
mov
sub
mov
fiadds
call
and
pop
pop
pop
xor
sarl
sbb
repz
fstp
mov
xchg
aam
sarb
ficoms
mov
cli
std
jbe
ja
sbb
hlt
loope
sub
dec
ja
cmc
push
loope
adc
lcall
std
stos
jg
popa
xchg
xchg
cmp
cmp
xchg
fisttps
inc
or
xor
loope
lcall
sbb
and
lcall
or
push
inc
inc
fsubl
cmp
cmp
sahf
or
jl
inc
test
mov
mov
inc
pop
enter
dec
test
jbe
stos
and
out
cmpsl
scas
addl
ja
loop
aas
sub
sub
jge
fsubrl
filds
jnp
and
sub
jp
lods
push
out
sbb
mov
add
jmp
test
cmpl
test
out
das
ret
rcll
push
insb
inc
gs
gs
in
adc
outsl
ror
out
movsl
hlt
dec
cmc
cli
jno
popa
or
pop
clc
dec
push
and
adc
int3
hlt
enter
out
push
mov
mov
dec
divl
sbb
rclb
lea
push
mov
mov
mov
pop
push
subl
mov
pop
dec
sub
mov
push
mov
in
cmpsb
jmp
repnz
pop
pop
pop
cmpsl
and
in
push
xor
push
jecxz
pop
or
lds
mov
cwtl
je
or
sbb
adc
rcrl
mov
or
push
push
loope
out
lret
adc
cmpsl
shl
outsb
push
xchg
bound
aaa
mov
shlb
aad
mov
add
jb
sub
xchg
xchg
aad
cmpsb
jno
outsb
enter
clc
or
clc
dec
xor
dec
mov
sti
mov
xchg
cld
fsubs
jle
pop
mov
aad
and
loope
xlat
ljmp
cs
lret
movsl
xchg
inc
jg
popa
inc
insl
adc
out
ret
imul
push
mov
mov
lret
gs
mov
push
jmp
dec
stos
sahf
mov
out
cmp
nop
jl
cltd
icebp
ljmp
lea
xor
inc
fsts
iret
ljmp
mov
inc
icebp
xchg
popf
insw
jno
shlb
sti
std
mov
iret
inc
pop
lods
hlt
dec
cmpsl
jno
scas
popl
roll
lock
jge
xchg
cmp
iret
xor
cli
mov
fwait
cmp
ljmp
test
and
adc
sahf
mov
or
pop
pop
fs
xor
shlb
dec
sub
push
imul
subb
push
pop
push
mov
mov
icebp
pop
jg
cmc
ss
mov
adc
xor
ljmp
cmpsb
into
mov
dec
sbb
loop
repnz
mov
add
call
mov
loop
cmp
scas
js
add
js
dec
cmc
in
testb
xor
or
dec
ss
push
inc
push
push
ret
gs
insl
adc
mov
cmpb
fisubs
sbb
adc
ss
stc
es
cmc
dec
enter
push
mulb
ret
pushf
pop
mov
cmpsl
dec
sbb
pop
mov
stos
push
lea
and
fistl
mov
mov
adc
mov
or
xchg
lar
mov
cs
ret
sbb
xor
sahf
aad
mov
sub
stos
add
xchg
pop
enter
outsb
loope
fadds
and
pop
xchg
dec
push
lods
call
mov
test
lods
mov
jge
sbb
daa
nop
adc
mov
mov
jae
jo
mov
outsb
js
push
in
mov
popa
popf
pop
in
pop
cmovo
dec
adc
mov
inc
inc
or
mov
insl
in
ret
xor
and
das
pop
aaa
bound
pushl
pop
add
mov
cmpsb
cli
les
mov
cld
adc
mov
pop
pop
cmpsl
popa
arpl
pop
mov
jno
leave
addl
dec
mov
iret
mov
cli
repnz
sbb
mov
mov
sti
int
movsl
loope
ja
mov
mov
add
fnsave
mov
repz
adc
pusha
loope
fnstenv
mov
daa
in
mov
xchg
fadd
not
sub
cmp
cwtl
and
mov
popa
stos
loopne
sbb
js
addr16
scas
pushf
movl
mov
or
sub
in
inc
sub
xor
cmpsb
in
add
out
pop
addl
arpl
push
das
mov
push
mov
jnp
and
lea
scas
cmc
pop
and
aam
lods
adc
out
cmp
insb
lods
and
ja
or
aad
push
cmp
dec
loopne
inc
adc
jne
inc
fwait
xchg
dec
aas
and
mov
fcmovbe
cmp
mov
jl
sarl
pop
pop
sub
scas
nop
out
jmp
mov
inc
push
data16
stc
mov
mov
xchg
push
test
lods
mov
iret
lods
push
dec
jecxz
pop
cld
or
jl
sbbb
pop
mov
xchg
fildll
sti
pusha
mov
fcmove
adc
sub
mov
or
mov
adc
sarb
ljmp
sbb
sbb
jno
xorb
add
out
ficompl
subl
mov
mov
inc
insb
in
lea
rcrl
xchg
stos
and
shrl
push
cwtl
lea
movsl
inc
adc
add
fwait
jns
push
in
sbb
movsb
addb
or
add
inc
xchg
jne
or
mov
andb
lret
xor
sub
jae
fsubl
ja
cli
repnz
es
xchg
cmp
mov
and
push
rorb
mov
testb
daa
and
outsl
mov
sub
out
js
fnstsw
in
fdivrl
test
add
sub
stc
xchg
add
jae
push
fwait
mov
sarl
push
add
add
cli
or
inc
sub
pop
leave
mov
jne
mov
mov
pop
test
inc
mov
ret
outsb
pop
mov
pop
mov
lret
mov
shl
mov
and
in
mov
test
mov
subl
cli
lea
mov
stos
cmp
leave
push
shll
adc
lahf
dec
daa
incb
ja
std
xchg
mov
das
add
fs
xchg
or
ret
inc
cmp
mov
pop
out
push
shl
out
xlat
into
mov
pop
push
xor
orb
lods
nop
gs
push
inc
mov
jmp
into
rol
sub
xor
jmp
pop
ret
inc
mov
lods
and
ret
data16
inc
xchg
fdivr
or
mov
test
sti
addr16
not
scas
clc
mov
scas
xchg
add
lea
push
adc
int3
mov
in
sbb
inc
pop
mov
xchg
adc
movsl
js
mov
outsl
lret
xchg
test
mov
adc
shr
lock
inc
ljmp
inc
fisubl
xor
mov
cwtl
add
push
mov
call
ss
and
rcrb
inc
inc
mov
jmp
adc
dec
jne
lea
loop
pop
arpl
shlb
dec
adc
sub
mov
jl
jo
cwtl
xor
jo
cmpsb
pop
mov
ret
insl
or
shrl
xchg
lds
inc
add
mov
cmp
and
sbb
and
or
dec
cmp
pop
scas
pop
mov
out
fwait
mov
sti
rolb
addr16
inc
in
xchg
mov
negl
inc
push
sbb
pop
cmp
mov
int3
out
dec
xchg
jnp
push
orl
sub
mov
ljmp
cmp
loope
stc
mov
inc
mov
dec
mov
fucomi
jbe
and
lahf
mov
and
outsw
or
mov
stos
and
sub
ret
jge
push
les
or
or
mov
xor
or
es
or
andl
push
sbb
cltd
out
mov
sub
pop
push
fst
adc
repnz
pop
icebp
jecxz
pop
lods
mov
aas
xchg
jb
ja
arpl
and
jns
push
in
mov
insb
pop
jle
push
lods
sbb
out
pop
jmp
xor
pop
loopne
sub
aas
mov
loopne
push
prefetch
inc
cs
fcomps
sbb
lret
ret
mov
movsl
adc
jge
mov
push
and
cwtl
mov
mov
fdivrs
jmp
add
loopne
adc
dec
add
and
adc
xlat
dec
shll
inc
ss
sub
fwait
pop
pop
push
fucom
inc
repz
dec
mov
popa
add
cmp
sbb
es
sbb
push
or
test
arpl
notb
adc
cmc
shlb
jns
out
cmp
sbb
movsl
pop
les
mov
das
in
adc
add
in
ret
adc
stos
inc
and
pop
pop
push
mov
mov
dec
inc
mov
lods
scas
popl
shr
fcomps
sbb
xchg
fldenv
iret
pop
in
repnz
pop
xor
mov
or
sbb
dec
bound
addl
inc
mov
addl
jl
leave
and
fiadds
rorb
bound
mov
lods
enter
add
inc
xchg
sub
jecxz
mov
out
shlb
cmpsb
fsubr
or
sahf
decl
rorl
gs
leave
into
push
xchg
rcrl
inc
aaa
jae
xchg
sub
cmp
movsl
in
in
lods
pop
sbb
fstps
and
pop
push
test
pop
sub
jbe
jbe
push
imul
jbe
push
mov
mov
ret
addr16
lock
dec
jbe
sbb
popf
jmp
ljmp
lods
hlt
sub
mov
loop
stos
leave
sub
repz
jae
push
cmp
jne
and
mov
jmp
push
out
imull
add
or
shl
pop
or
push
lock
jg
mov
aam
xor
les
push
hlt
stos
ds
in
std
push
jge
mov
mov
inc
jmp
mov
inc
movsb
sbb
test
test
sub
mov
jo
cmpsb
mov
push
cmc
popf
adc
lea
jae
fsubs
aad
mov
mov
sti
bound
imul
cmp
ja
cltd
jmp
push
jp
mov
in
adc
push
mov
fs
adc
rcll
or
xor
push
ljmp
jnp
in
adc
scas
orl
push
jno
inc
sbb
pop
shr
sbb
test
push
es
sub
scas
scas
adc
mov
std
lock
mov
add
jb
dec
inc
test
stos
pusha
cmp
push
cmp
jp
jns
mov
sub
sbb
jg
cwtl
jae
add
and
xor
outsb
jg
cmp
jo
dec
mov
pop
mov
mov
adc
sub
and
mov
add
inc
lods
xlat
outsl
enter
je
add
and
out
int3
push
faddl
sbb
add
or
mov
mov
xor
loopne
jae
daa
xor
mov
imul
dec
aas
out
shll
leave
mov
loopne
shl
lock
call
ret
dec
clc
pushl
pushf
cmpsb
shlb
adc
mov
mov
mov
loopne
mov
jb
aam
pop
pop
adc
dec
pop
push
sbb
mov
fstl
sub
bound
inc
pop
aaa
push
dec
mov
add
sbb
adc
rep
adc
arpl
inc
xor
push
xor
iret
cmpsl
lret
jmp
mov
cmp
test
or
fistps
int
cld
mov
fcmovne
cmp
aam
adc
sbb
lds
push
in
inc
jne
sti
inc
int3
lods
push
inc
mov
mov
out
out
fdivl
jnp
cs
mov
jl
push
in
pop
gs
aaa
push
sub
insl
mov
jmp
or
or
movaps
mov
mov
xchg
leave
push
hlt
push
and
das
pop
or
mov
pop
xchg
jp
jbe
aam
lods
stos
xchg
xor
cmp
mov
sti
mov
mov
inc
hlt
mov
mov
bound
xor
adc
sbb
add
leave
xchg
mov
sbb
push
jmp
jbe
sbb
addr16
cli
pop
mov
xchg
in
dec
cmpsl
stc
sbb
push
notb
add
and
cmpsb
xchg
cld
pop
loop
mov
mov
push
jle
jmp
jbe
loopne
rorb
mov
cld
jp
pop
stos
pop
pop
add
xor
sbb
les
mov
inc
repz
dec
inc
insl
dec
int3
into
adcl
jge
sarb
lret
cltd
in
cmpsb
and
out
test
adc
ret
sbb
orl
fimull
inc
gs
mov
mov
insb
fildll
xchg
jecxz
xor
out
lea
daa
dec
inc
mov
lods
cmpsb
popf
inc
and
lret
sbbl
adc
mov
dec
mov
dec
xchg
lods
into
adc
fistl
fidivrs
iret
cmp
sbb
ret
test
pop
adc
add
std
pop
jle
aam
sub
aam
mov
jns
mov
outsl
cmpsb
add
leave
and
or
push
xlat
dec
nop
mov
inc
fs
repz
add
imul
pop
in
ljmp
xor
add
test
add
out
mov
xchg
daa
sbb
shl
sbb
pop
sbb
shll
sbb
jnp
in
pop
mov
insb
fisttpl
pop
xchg
loop
push
sbb
xlat
call
dec
jmp
fldcw
rcrl
jne
cmp
movsb
cmp
in
sbb
out
add
inc
gs
jmp
push
aas
or
jge
ljmp
inc
inc
pop
pop
stos
shrb
inc
dec
cwtl
adc
xchg
jb
pop
adc
iret
fmuls
ficomps
dec
sbb
rclb
out
ret
mov
sub
add
ret
daa
sbb
inc
jns
xchg
sub
add
mov
lods
mov
insb
ret
mov
out
sub
jmp
xor
movsb
jae
cmp
aam
or
and
and
ret
jp
pop
and
mov
clc
adc
xlat
mov
mov
cmp
insl
aad
xlat
xchg
and
adc
cmp
xchg
or
es
imul
daa
ljmp
in
add
or
lahf
mov
popa
lods
cli
or
sahf
nop
mov
std
jbe
ret
push
sahf
cwtl
iret
adc
imul
push
dec
dec
adc
es
repnz
mov
lret
xchg
or
lods
icebp
les
mov
push
pop
sbb
insl
dec
pop
add
sbbl
mov
xchg
aad
mov
sbb
jp
cmp
and
js
fs
jl
bound
cmp
mov
pop
sbb
sub
orb
mov
popf
cli
mov
inc
sti
aaa
jmp
mov
jb
mov
adc
cmp
xor
std
push
mov
insb
push
cmp
push
mov
add
out
sub
jmp
adc
stos
jnp
aad
jne
ja
mov
xor
loope
xchg
adc
lea
inc
dec
xor
xchg
xchg
addr16
popa
lock
outsb
idiv
ret
mov
fcoms
mov
cmc
cli
xorl
xchg
mov
dec
mov
fisubrs
xor
imull
jp
xor
pop
aaa
xchg
es
pusha
or
add
mov
rcr
scas
iret
mov
cltd
sub
mov
mov
pushf
push
movsb
sub
inc
cltd
add
mov
xchg
push
std
jb
imul
ljmp
mov
dec
sarb
add
sub
jmp
jp
dec
xchg
pusha
movsb
cmpsl
std
adc
mov
xchg
leave
jle
pop
mov
mov
sarb
sub
adc
or
xlat
js
mov
xlat
rcll
fistps
sahf
repz
xchg
arpl
lcall
dec
dec
cmpb
rcr
or
xchg
adc
xor
sbb
sbbb
cmp
push
inc
imul
mov
push
or
mov
mov
cmp
jle
mov
xorb
sub
jae
mov
pop
push
loopne
cmp
push
dec
sbb
aad
push
out
roll
push
fs
fiaddl
mov
movsl
es
xchg
test
or
mov
jl
rcrl
cmp
inc
jo
lcall
ret
jns
or
xorb
cwtl
adc
cmc
or
mov
push
cmp
test
lahf
and
gs
movsb
push
push
push
jp
into
in
mov
cld
jmp
sbb
or
push
sbb
push
adc
jge,pt
insb
addr16
std
sub
adc
mov
loope
lahf
nop
mov
inc
lds
mov
or
ljmp
in
lods
cs
fidivrl
mov
jae
test
push
divl
jg
adc
stos
mov
ficomps
push
xchg
xchg
ja
xchg
push
jl
xchg
pop
shll
loopne
push
int
scas
popa
sbb
mov
sbb
hlt
js
jge
jo
mov
mov
mov
ret
inc
loop
sub
inc
lcall
pop
push
pop
fcmove
pusha
sub
fwait
jmp
int
and
loope
scas
pop
loop
jbe
shr
enter
jbe
sub
add
cli
stos
mov
jno
jmp
mov
aaa
xrelease
or
in
int3
mov
jl
or
js
lea
out
mov
in
das
std
push
push
inc
add
adc
in
xchg
lret
clc
jmp
pop
les
or
jbe
fldl
js
cld
mov
lret
push
mov
xchg
je
jbe
pushf
in
lods
arpl
out
lds
fs
pop
mov
pop
es
inc
cmp
sbb
scas
sub
stos
jo
imul
nop
mov
dec
and
ss
int3
mov
adc
lds
in
jmp
or
lods
mov
aaa
inc
push
push
jb
ss
push
std
movsl
jecxz
andb
fmul
scas
imul
int
jl
xchg
cmp
or
push
push
lret
jl
push
int3
sbb
mov
xchg
nop
pop
xchg
jns
jns
les
xchg
mov
pop
lret
xchg
sub
mov
add
add
xchg
call
mov
pop
mov
ljmp
popa
scas
sub
sti
cmp
sbb
mov
shl
repnz
repnz
popf
in
adc
inc
mov
dec
lods
popf
adc
mov
xor
test
add
sbb
mov
ljmp
movsb
lea
insl
test
cmc
aad
adc
xor
cwtl
into
xchg
ret
inc
lock
sti
sbb
cwtl
inc
bound
pop
add
push
incl
jle
adc
shl
jmp
dec
and
sbb
enter
add
pop
inc
sbb
dec
lahf
xchg
test
es
test
jne
lea
inc
add
test
cmpsl
adcb
dec
jmp
push
dec
in
ret
lods
decb
xchg
and
in
and
inc
cmp
bound
adc
into
insb
push
mov
leave
lcall
push
addr16
stos
loopne
xor
lret
mov
cmp
jl
pop
sub
mov
out
pop
sub
fwait
bound
pop
bound
dec
inc
adcl
sbb
in
loope
sbbl
push
adc
or
cwtl
les
inc
dec
mov
aad
pop
pop
jmp
leave
ret
jg
jmp
movsb
xchg
push
sahf
inc
and
mov
insl
cmp
aaa
popa
cmpsb
iret
push
ljmp
cs
sub
adc
outsb
es
ret
mov
or
aam
dec
punpckhwd
push
movb
fldl
pop
add
sub
lock
testl
mov
fs
push
je
xchg
xlat
jge
add
dec
aaa
pop
bound
sub
flds
movsb
pop
adc
dec
push
add
push
icebp
ljmp
xchg
and
repnz
cmp
js
jbe
pusha
movsl
jge
movsb
enter
shlb
sub
mov
cld
rorl
imul
mov
cmpsl
lcall
and
in
cmpsb
std
mov
arpl
inc
mov
mov
inc
sbb
pop
movsb
fidivl
jne
or
adc
loopne
add
adc
lods
out
pop
mov
cmp
or
enter
mov
leave
fldl
cmpsb
aas
mov
pop
scas
mov
into
push
cltd
nop
int3
or
and
xor
call
sbb
xlat
repnz
movsl
jmp
nop
addb
add
inc
in
es
inc
push
jbe
int3
dec
fwait
fwait
pop
enter
xor
and
jnp
mov
outsl
or
loope
cmp
arpl
cmpsl
movsb
cmpsb
push
in
add
hlt
mov
push
mov
xchg
sti
sbb
mov
lea
pop
rcll
ljmp
loopne
mov
ret
lret
or
push
adc
xor
xlat
push
sub
adc
mov
mov
mov
inc
les
movsl
std
dec
push
xchg
cmp
scas
xor
ret
adc
or
jno
sbb
out
pop
mov
lret
shlb
fnstenv
loop
mov
dec
pop
jnp
cmp
inc
lcall
xchg
mov
addl
jb
fwait
cld
clc
outsl
xor
and
fistpll
shll
and
movsl
clc
icebp
or
mov
gs
ret
fistpl
xor
popa
mov
dec
aaa
aam
insb
fimull
ja
pop
push
push
xor
cmp
addr16
cmp
ss
fnstcw
adc
movsl
dec
add
dec
push
push
pop
scas
mov
jne
sub
cmp
es
or
add
movsb
test
enter
rcrl
add
cmp
add
inc
test
shlb
mov
inc
notl
stc
fldcw
rclb
sbb
jnp
std
hlt
mov
cmp
ss
inc
daa
cmp
xchg
and
push
inc
cmp
int
mov
popa
test
jo
ret
enter
lds
les
out
ret
clc
xchg
pop
add
adc
sub
inc
call
popa
aad
and
push
mov
pop
and
mov
subl
into
mov
rclb
xchg
and
adc
push
push
cli
rclb
clc
add
sahf
int
push
cmp
shlb
cli
cmp
xchg
out
mov
shrb
addr16
push
xor
and
jecxz
movb
loop
push
rolb
in
or
dec
enter
mov
rcl
lods
shlb
xor
cli
dec
xlat
lret
stos
mov
fwait
push
mov
leave
loope
xchg
mulb
sub
out
cmp
iret
outsb
je
mov
adc
dec
mov
and
imul
and
adc
sbb
push
cld
fs
ror
std
test
cld
leave
lret
dec
jle
jg
rorl
pop
cltd
xchg
stos
test
aad
xor
push
dec
push
mov
sbb
push
xchg
xor
mov
cmp
sti
rcr
ds
lea
std
sub
adc
into
xchg
lods
xchg
dec
lcall
dec
in
sbb
adc
sbb
cwtl
pop
xchg
mov
xchg
mov
les
insb
cmp
and
std
pop
lret
adc
push
inc
into
mov
das
jnp
mov
aaa
in
adc
rep
sbbl
data16
and
mov
cli
pushf
cmp
movsb
sahf
pop
fisubs
sbb
mull
cmpsb
movswl
dec
push
adc
pop
jg
popa
fists
xchg
xchg
shll
scas
mov
ja
lea
or
xchg
xor
mov
mov
lds
mov
loop
pop
xor
xor
stc
sub
repz
xor
aas
rclb
mov
pop
aaa
hlt
cmp
pop
idivl
and
jb
and
pop
movaps
addr16
test
mov
into
adc
pop
mov
pop
add
hlt
into
pushf
call
popl
mov
add
loope
adc
mov
adc
cltd
push
xor
repz
call
rol
push
sub
mov
aaa
mov
out
mov
add
or
cs
mov
iret
add
psubq
xor
loop
aas
cmp
xor
stos
std
mov
popf
mov
dec
xor
stc
cmpsb
jecxz
sbb
sti
and
sbb
rcrl
daa
push
sbb
xor
or
leave
lods
dec
mov
push
pop
ljmp
xchg
dec
or
dec
test
lcall
mov
mov
das
and
addl
xor
xchg
js
cmp
mov
mov
pop
in
mov
mov
sbb
mov
sbb
add
jg
push
rorb
ficoml
cmpsb
lods
adc
nop
lret
mov
cmp
push
lea
jne
shrb
dec
jae
fwait
stc
sbb
ja
in
jae
add
and
idivb
loopne
cld
xor
divl
sti
iret
and
fisubrl
fs
add
and
mov
xchg
inc
push
mov
cmp
daa
xchg
cmpsl
inc
jns
and
orb
mulb
add
dec
jmp
inc
subb
pop
out
add
pop
adc
mov
data16
mov
imulb
imul
movsb
mov
inc
sub
adc
fwait
lea
cltd
das
inc
ud1
rolb
daa
sbb
inc
ret
out
xchg
and
xchg
inc
les
or
pop
xor
inc
jb
inc
cli
aaa
test
ret
push
adc
movsl
ret
out
out
push
or
mov
ret
lock
fcoml
ret
fmuls
scas
add
mov
es
in
push
add
and
aaa
sbb
rorb
daa
inc
xchg
rolb
jno
mov
or
aad
int
cmc
call
sarb
loop
rcl
push
pop
fldenv
rep
inc
mov
ja
lahf
pop
inc
outsl
and
int3
iret
sbb
rol
out
addr16
mov
loopne
jo
mov
cld
leave
int
shrb
push
push
xchg
or
jae
xor
sti
cltd
sub
lea
nop
dec
stc
adc
jns
data16
outsl
hlt
repnz
mull
mov
jl
sbb
ljmp
out
jp
ljmp
invd
pushf
clc
stos
mov
out
arpl
adc
stc
pop
dec
sbb
shrb
add
lods
mov
push
cmp
inc
fisubrl
popa
jmp
lock
shlb
sbb
and
das
push
push
bound
xor
dec
mov
pusha
cmpsl
fcompl
decl
cmpl
inc
adc
test
sti
adc
fnsave
mov
nop
gs
cmp
dec
xor
cmp
sub
mov
cwtl
mov
aad
adc
jbe
lret
sub
shlb
dec
in
xchg
divl
dec
inc
repnz
pop
and
pusha
lret
ds
pop
cmp
cmpsb
insb
sub
outsl
in
aad
je
add
jbe
sbbl
push
sub
or
out
repnz
test
stos
cs
xchg
data16
in
mov
out
xor
fdivl
add
stos
pop
pusha
adc
xchg
xor
hlt
cwtl
mov
je
popa
clc
cmp
cmp
add
xor
in
cmp
xorl
xor
rcl
aaa
pop
stc
inc
daa
fsts
inc
jb
js
int
sbb
sub
iret
out
pop
or
fs
test
fwait
or
mov
dec
in
push
pop
imul
jp
xor
clc
cmpl
cmp
cmpsb
xlat
data16
pushf
mov
lcall
cld
pop
mov
mov
ftst
ret
in
and
xor
jae
push
ret
mov
shrb
leave
inc
xchg
mov
jno
xor
jp
xor
punpckhdq
das
ja
icebp
stos
jge
pushf
enter
mov
daa
xchg
xor
mov
mov
sbb
rcrl
or
pop
push
xchg
jl
punpcklbw
daa
js
arpl
dec
das
adc
outsl
mov
inc
or
mov
xlat
sbb
cmpsl
ret
jp
adcb
cwtl
cmp
mov
mov
xor
jne
xchg
out
arpl
int3
cmpsb
jecxz
mov
sbb
jb
lea
movsb
shrl
adc
pop
fcmovne
inc
lcall
ret
push
addr16
pop
inc
test
scas
jno
dec
xlat
pop
cld
xchg
mov
popf
fildl
sbbl
ret
loop
mov
dec
jns
mov
push
mov
test
int3
pop
jo
push
lods
into
ret
enter
outsb
mov
xor
sti
bound
sbb
sbb
xchg
enter
clc
xchg
xchg
pop
int3
cwtl
ret
mov
cld
mov
or
imul
test
sti
dec
or
mov
cltd
sti
fldenv
xchg
push
loopne
or
jne,pt
adcl
data16
call
cwtl
mov
adc
jle
mov
mov
mov
call
push
adcb
jo
pop
sbbl
mov
out
pop
pop
add
push
in
xorb
or
xchg
sub
icebp
pop
lret
fistl
mov
into
pop
adc
pop
inc
shll
sbb
adc
popa
xchg
mov
push
jge
push
loopne
xchg
sub
sub
inc
mov
jge
sub
loope
mov
sub
xor
jp
push
or
or
pop
jo
jns
popa
pop
je
xor
jecxz
out
push
idivl
jae
bnd
repnz
inc
icebp
je
xor
mov
xchg
ds
test
icebp
mov
fldt
loopne
xchg
add
sub
cmpsl
lret
push
sbb
iret
shrb
jg
xor
lahf
push
sbb
cmp
mov
in
dec
jnp
jp
pop
add
pop
ret
aas
push
xchg
sub
cld
mov
pop
ret
jo
mov
mov
insb
jle
sub
push
mov
mov
cpuid
or
scas
pop
mov
lcall
push
insl
mov
int
mov
in
rorl
cmp
mov
inc
or
jp
dec
pop
sub
loop
jle
inc
imul
push
inc
subb
leave
mov
inc
out
cmp
negb
mov
insb
cmp
addr16
adc
out
and
repnz
hlt
lahf
movsb
loope
out
test
fcomps
dec
adc
sub
push
andb
and
movsl
and
fldt
pop
jmp
adc
imul
xor
mov
add
jmp
pop
in
cmpsl
mov
xor
int
cs
ljmp
cmp
xchg
repnz
icebp
xchg
and
jbe
clc
add
xor
mov
inc
mov
lcall
sti
push
xor
jns
dec
xchg
sti
mov
sub
lret
and
loope
adc
mov
lods
mov
sar
cmpsl
mov
ss
adc
push
jb
sbb
cmp
pop
dec
lahf
adc
shlb
dec
subl
mov
stos
aaa
mov
xor
push
enter
loopne
adc
adc
leave
or
loop
xchg
ljmp
xor
imul
out
lret
std
or
out
inc
imul
mov
xor
clc
into
into
add
test
mov
mov
icebp
iret
das
mov
inc
lret
pop
fwait
movsl
cmp
clc
adc
mov
mov
mov
leave
rclb
aad
lods
and
pop
and
test
xchg
sub
je
cmpsl
js
xchg
das
dec
sbb
cmpsb
or
dec
jne
mov
xlat
js
cwtl
mov
es
mov
cmp
inc
cmpsl
xchg
lcall
nop
loop
mov
lret
mov
inc
inc
cld
leave
cmp
rorb
push
gs
cmc
xchg
movsb
lret
adc
int3
adcb
pop
dec
cmpsl
xor
arpl
int
mov
adc
pop
mov
outsl
aad
hlt
arpl
in
add
test
mov
add
dec
les
push
add
dec
inc
outsb
out
sub
subb
out
fbld
std
jbe
sbb
scas
xchg
mov
and
aaa
xchg
popf
xchg
cmpb
jmp
std
sahf
stos
mov
movsb
das
sub
adc
cmp
fcompl
xor
mov
sbb
das
rcrl
icebp
pop
and
into
subl
fsubl
cmp
nop
or
in
xor
jne
jmp
fsubrp
pop
fisttps
das
mov
jp
scas
push
dec
add
xchg
pop
jl
nop
dec
and
pop
sbb
or
push
or
jno
aad
jbe
cld
cs
idivl
jo
sbb
and
sbb
ljmp
sahf
pop
test
or
test
mov
insl
jnp
xor
xor
dec
imul
rcrb
pop
in
shlb
cmp
mov
dec
icebp
lret
int3
testb
pop
sbb
dec
jecxz
jecxz
and
mov
add
sub
jg
mov
sahf
pop
pushf
int
popa
pop
mov
push
pushf
jmp
loopne
and
pop
push
fcomps
jge
mov
adcb
mov
sbb
pop
mov
jae
fabs
repz
adc
add
push
adc
fwait
push
adc
xchg
cwtl
inc
mov
pop
mov
ja
rclb
mov
aam
add
lcall
cld
aaa
sti
pop
or
stc
rcll
inc
lods
es
fbstp
out
xchg
cmp
movsb
sti
ret
inc
ret
not
icebp
cmp
sahf
sub
mov
pop
xchg
fsts
xchg
loope
mov
cmc
mov
mov
jge
fwait
pop
adc
ljmp
dec
shlb
push
lods
outsb
dec
push
mov
int
int3
xchg
xchg
inc
bound
and
jno
dec
xchg
cli
push
sub
mov
xchg
add
xchg
aas
xor
or
rorb
mov
and
xchg
sbb
ss
push
sbb
adc
or
add
sbb
pop
out
imul
push
lds
push
or
dec
cli
sbb
mov
push
loop
jmp
mov
push
lods
pop
inc
cmp
aam
push
jae
clc
lret
add
aad
sub
stc
pop
imul
pop
pusha
adc
mov
xchg
popf
into
lcall
lea
mov
cld
pop
mov
xor
adc
pop
or
test
out
icebp
outsl
inc
aam
lods
add
and
stc
xor
mov
sarl
cld
clc
in
int3
or
mov
loop
aam
mov
sub
sub
and
inc
pop
pop
in
lods
incb
les
adc
push
aad
push
ljmp
inc
arpl
xchg
dec
mov
sub
leave
sbb
sbb
mov
fs
push
jnp
jp
pop
mov
push
cs
inc
dec
andl
rorl
lret
stos
push
cmp
fmul
out
adc
dec
add
pop
cmp
mov
iret
sub
test
insb
fcoms
loopne
dec
sbb
mov
push
ljmp
add
sbb
into
fwait
push
rcll
in
lods
jp
and
aad
xchg
inc
pop
and
push
jmp
or
fsubrl
das
adc
les
testl
mov
xchg
xchg
xchg
adc
pop
js
scas
pop
mov
push
ret
mov
nop
and
leave
sub
push
cmp
mov
insl
sub
mov
sbb
incl
testl
push
adc
xchg
add
dec
dec
imul
daa
pushf
dec
or
leave
popf
mov
out
in
cli
and
aaa
push
test
dec
pushf
test
lahf
hlt
ficompl
mov
sbb
xor
fs
sub
mov
xor
fcmovnu
mov
mov
shll
les
addr16
out
push
xchg
in
bound
pop
sub
inc
inc
dec
je
add
and
sub
insb
lahf
and
out
shl
mov
out
mov
inc
ds
data16
or
sti
fucomp
js
xchg
inc
sub
mov
xor
mov
xchg
lock
sbb
xchg
cli
sub
call
xor
and
sbb
mov
xchg
lahf
shrl
inc
sub
jae
mov
mov
push
ret
push
iret
bound
adc
sahf
pop
repnz
cmpsb
je
xlat
pushf
fisubl
ffreep
xchg
pop
adc
xor
xchg
rorb
shll
ds
adc
or
lods
push
cwtl
push
inc
pshufw
js
test
loopne
out
out
or
inc
mov
and
imul
xor
adc
fdivs
xchg
fwait
scas
cmp
sbb
inc
sbb
dec
lods
sub
push
pop
or
cmp
jnp
lret
pop
cmpb
scas
ret
loopne
movsb
push
pop
mov
sbb
pop
test
dec
outsl
and
xor
fadd
popl
pop
xor
fs
cmp
into
xor
mov
inc
dec
mov
cltd
enter
xchg
push
push
xor
lret
dec
pushf
loopne
decl
mov
jle
jg
data16
lcall
aas
jno
enter
cmp
cmpb
int
outsb
je
mov
aad
loop
std
outsl
loop
or
filds
sbb
ljmp
dec
sub
fwait
imul
inc
cmpsb
loopne
movsl
jnp
xchg
ficompl
movsb
stos
xchg
mov
sbb
jle
dec
mov
imul
jae
pushf
dec
sbbb
stos
lods
mov
aaa
pop
xor
js
inc
jl
push
xchg
pushf
mov
jbe
push
pop
pop
pop
sub
mov
and
cmp
repz
cmp
repnz
lds
adc
jg
fisttps
sub
enter
inc
imul
xor
pop
mov
cmpsb
inc
mov
mov
fwait
cmpb
mov
jl
daa
ljmp
inc
rclb
aad
mov
out
adc
inc
pushf
rorl
div
sub
in
adc
cwtl
std
aad
mov
inc
mov
lret
xchg
xlat
ss
sti
scas
or
ror
sub
enter
rcll
int
adc
aas
push
lods
mov
jecxz
mov
addl
adc
mov
data16
mov
sbb
out
add
mov
sub
mov
jo
cld
xor
inc
popa
pushf
mov
mov
fwait
and
mov
dec
je
mov
sarb
out
adc
ljmp
adc
aad
mov
adc
or
mov
sahf
mov
sub
int3
ret
jle
dec
popa
inc
stc
mov
ret
add
pop
scas
and
push
mov
ret
push
jb
loop
scas
int3
cmpsb
xchg
stc
sub
gs
mull
sub
jl
push
jg
xchg
shr
les
test
xchg
add
stos
cmp
sub
scas
inc
pop
sbb
insl
mov
xchg
in
gs
in
adc
or
dec
xchg
mov
mov
mov
daa
dec
adc
ljmp
shr
cmc
fsubl
cmpsb
cmp
in
sahf
imul
iret
jb
jae
mov
ficoms
jmp
fsub
icebp
imul
stos
jb
xor
je
fildl
cmpsb
inc
movsb
dec
das
repz
sub
push
mov
aad
leave
leave
dec
adc
lret
fwait
in
ret
adc
insl
push
shlb
inc
movsb
int
pop
adc
jo
mov
js
sub
cmpsl
mov
mov
mov
mov
xor
test
jecxz
std
fdiv
lea
test
pushf
rcrb
clc
xchg
mov
pop
imul
adc
sti
or
jle
push
das
iret
ja
mov
movsl
mov
push
jbe
mov
jge
xchg
rol
xchg
push
clc
and
sbb
xchg
inc
pop
push
sub
jbe
sub
push
mov
cwtl
push
cmp
adc
add
adc
add
mov
je
call
mov
lret
jbe
push
mov
mov
scas
jmp
dec
xchg
mov
mov
in
mov
dec
cmp
push
push
ljmp
mov
add
fs
inc
add
scas
test
movsl
imul
test
hlt
call
nop
dec
push
jg
pushf
push
enter
xchg
pop
add
pop
mov
xchg
loope
xchg
jmp
and
dec
adc
es
xchg
lods
cmp
pop
and
arpl
incl
sub
sarb
and
movl
jbe
add
lahf
mov
mov
add
test
sbb
cs
call
insb
mov
and
sbbl
mov
adc
sub
inc
shr
pop
mov
ss
add
rcll
mov
push
dec
push
fidivs
jecxz
xor
sbb
or
loop
ss
push
sbb
out
xor
out
scas
repz
scas
push
add
in
pop
push
cli
fmulp
aaa
scas
inc
test
mov
mov
cmp
cmp
cmp
xchg
in
xchg
lret
pop
ss
gs
xor
movsl
or
xchg
sub
xor
js
sbb
cwtl
dec
out
popf
bnd
lods
mov
jle
mov
xchg
add
or
jle
sbb
mov
ds
mov
dec
xchg
or
outsl
jg
xchg
fists
push
shl
mov
push
lds
imul
lods
sbb
mov
fwait
aad
inc
test
pop
sub
inc
sbb
dec
lods
mov
mov
mov
mov
xor
fnstcw
xchg
lods
mov
ffree
and
test
in
cmp
fwait
out
inc
repz
insl
lods
mov
stc
dec
push
mov
xchg
cmc
lock
cmpsl
nop
inc
push
test
xlat
sub
jo
sub
mov
or
js
dec
test
repnz
ss
sub
scas
sahf
rcll
shrl
adc
push
mov
pop
jecxz
shlb
cmp
sbb
jno
sub
in
mov
pop
sub
adc
testl
pop
adc
jmp
cmp
int3
and
mov
and
pop
scas
add
cmpsb
mov
push
dec
pop
sbb
pop
inc
cmp
pop
inc
repnz
mov
cmpsb
stos
mov
jno
loop
add
mov
es
xchg
mov
ficoms
adc
aam
test
insb
aam
andl
adc
xor
ret
imul
push
insl
pop
dec
out
leave
lahf
pop
addr16
inc
fneni(8087
shl
jmp
push
stc
in
jbe
xchg
gs
inc
aaa
mov
sahf
pop
shrb
xor
lcall
jno
cs
in
push
or
xor
mov
xor
sti
add
cwtl
xchg
mov
sbb
mov
js
mov
frstor
push
xorb
cli
test
mov
scas
sub
sub
cmp
add
mov
loopne
inc
pop
shrb
in
lahf
addl
shl
sbb
lock
sub
outsl
and
xchg
cmp
xchg
es
mov
or
cmc
inc
jb
xchg
int
mov
jmp
adc
pop
mov
jo
mov
dec
mov
or
mov
sub
addr16
mov
std
movsb
movsb
cmp
cmc
cli
cli
in
test
adc
sub
jbe
sub
js
lds
sahf
lds
sub
popa
sbb
repz
sbb
sbb
push
fidivrs
pusha
lds
jmp
mov
jo
inc
mov
jecxz
xor
or
xchg
sahf
int3
mov
add
orl
outsl
pop
pop
or
int
out
mov
pop
mov
cmpsl
xchg
sahf
mov
fwait
inc
daa
js
lret
xorb
leave
mov
mov
jb
scas
jge
push
ds
and
lcall
movsb
leave
loope
push
cmpl
pop
add
push
testb
outsl
out
mov
negl
adc
jge
test
cmc
aam
xor
inc
xchg
cmp
jbe
push
pushf
cwtl
mov
sbb
add
hlt
mov
enter
lods
mov
in
pop
fimuls
xor
or
jg
cmp
pop
sbb
pop
cld
dec
inc
mov
push
cwtl
scas
sub
dec
adc
mov
xchg
cwtl
add
lret
or
pop
cmp
pop
jmp
sbb
dec
imul
ja
hlt
sub
test
inc
pop
push
pop
fisubs
popa
or
loopne
mov
data16
cwtl
cmc
mov
outsl
addr16
xlat
or
int
adc
stos
in
mov
out
mov
aam
xchg
xchg
fwait
pop
lock
popa
loope
sbb
jno
push
test
out
xor
sbb
inc
inc
lret
or
and
dec
setge
pop
dec
mov
enter
test
popf
mov
repz
mov
out
mov
clc
outsb
call
popf
dec
mov
je
inc
add
or
mov
pop
and
in
adc
sar
jno
popa
bound
imul
mov
push
cmp
scas
cltd
jl
sub
mov
std
out
fildl
adc
push
mov
mov
call
jo
push
mov
js
xchg
cli
scas
scas
lret
sbb
out
loope
or
call
clc
andl
jb
cmc
cmp
sub
std
push
jb
sahf
push
add
test
sub
into
xchg
cmp
inc
mov
loop
test
jbe
mov
mov
mov
dec
int3
xor
in
pop
dec
add
lock
and
lock
repz
je
inc
test
pop
movsb
xchg
xchg
in
add
or
bound
mov
and
cmp
sbb
out
xchg
mov
repz
fcoml
enter
xchg
pop
jg
and
mov
arpl
andb
frstor
nop
or
dec
nop
mov
xor
xchg
mov
js
inc
pop
adc
cmpsl
jae
lds
cltd
daa
mov
lods
int
push
imul
mov
push
sbb
or
daa
cmc
rcl
ret
aam
pusha
test
xchg
push
dec
jmp
cmc
out
test
popf
shll
sub
call
dec
adc
lret
aad
mov
xlat
adc
leave
or
int3
mov
xor
jbe
adc
jno
jnp
testl
pop
mov
sbb
sub
cmp
in
div
rolb
mov
jg
imulb
cmpsb
shrl
inc
sbbl
jb
push
sti
adc
pop
cmp
sub
and
adc
vpmaxub
cwtl
rolb
inc
sti
inc
or
push
adc
jo
mov
jns
mov
push
dec
rclb
stc
or
out
pop
add
push
pushw
add
xchg
add
adc
mov
push
xor
in
je
data16
aas
xchg
xchg
inc
sub
jbe
inc
cmp
ret
or
inc
sub
mov
or
ds
aas
in
int
add
imul
jmp
cmpsl
repnz
xorb
jne
mov
sub
jbe
xorl
push
dec
mov
lock
jns
movsb
movsl
mov
pushf
out
es
cwtl
mov
cmp
push
test
cmpsl
push
dec
outsb
imul
adc
mov
xchg
pushf
push
sub
adc
pop
xchg
ret
sahf
das
xchg
jp
jp
jg
jo
inc
cmp
sbb
lahf
push
cmp
cmc
mov
mov
jae
mov
jl
jo
call
pop
out
insl
pop
xlat
cmp
jecxz
inc
nop
cmp
dec
dec
pop
sbb
stos
cmp
cmp
inc
les
mov
popf
inc
fwait
jo
divl
mov
sbb
lods
cmc
jge
adc
repz
dec
punpckhwd
jae
mov
sbb
sbb
mov
jle
outsb
cmp
pop
add
sbbl
mov
dec
xor
popf
stc
mov
rolb
lds
sub
in
imul
xchg
ss
pop
push
sbb
ret
add
jmp
js
cmp
and
mov
hlt
outsl
inc
leave
inc
movb
dec
push
subl
into
adc
sarl
loope
cli
mov
jnp
sahf
cmp
repnz
xchg
dec
xor
ror
xchg
cmpsl
dec
stos
sub
dec
and
jne,pn
out
in
xchg
xor
and
orb
jno
shll
sbb
fistpll
inc
jnp
scas
cmc
mov
pop
jp
xor
cmp
pop
aam
fwait
push
fisttps
xchg
push
add
jnp
push
push
xor
mov
xchg
jmp
addb
sahf
fistpll
dec
cld
mov
pop
imul
xor
cli
repnz
mov
cmpl
dec
ds
mov
add
jbe
xchg
or
mov
sbb
repz
stos
sbb
cmp
and
jno
insb
pop
jo
xor
js
leave
cmc
pop
adc
pop
adc
inc
aas
mov
or
jmp
jae,pt
and
hlt
mov
mov
dec
sahf
xor
jge,pn
pop
jae
loope
sbb
mov
pusha
scas
pop
dec
jb
data16
les
mov
mov
cmc
adc
addl
or
mov
sbb
jae
popa
pop
sub
pusha
out
xor
inc
pop
jg
jecxz
pop
nop
outsb
jbe
jle
jnp
adc
or
inc
mov
lods
and
jecxz
cmp
mov
push
xchg
xor
enter
inc
jle
xchg
shll
dec
jno
inc
inc
xchg
mov
mov
mov
sub
sbb
xchg
push
mov
sahf
rcl
pop
jno
lret
adc
repz
mov
dec
bnd
mov
pop
and
pusha
add
xor
dec
mov
fists
fnstsw
ret
add
scas
flds
or
or
cwtl
insb
dec
dec
adc
dec
mov
push
out
lret
cwtl
inc
add
imul
loopne
jbe
es
sbb
aaa
cmp
repz
ss
mov
and
jle
add
lea
imul
js
pop
and
push
sti
fnstcw
mov
mov
ficomps
fdivl
out
sub
push
ror
pop
cltd
mov
inc
icebp
enter
popf
mov
in
dec
data16
jno
pop
mov
nop
enter
sbb
fstpl
fimull
lds
xorl
mov
xchg
xor
jnp
lfs
sbb
aam
push
pop
adc
sbb
adc
icebp
fmuls
sbb
shll
push
adc
je
jmp
sub
andl
lret
mov
gs
jnp
mov
cs
popf
popf
add
into
mov
xor
das
mov
cmp
iret
lret
les
dec
push
rcrb
lea
sahf
xchg
gs
push
push
xor
sbb
pop
inc
shrl
pop
adc
imul
push
pusha
inc
pop
push
lock
mov
aas
sub
std
adc
cmpsb
fstpl
and
xchg
lcall
mov
adc
rorl
or
popf
loop
cltd
test
or
add
inc
push
inc
mov
std
loopne
enter
pop
fidivrs
jp
dec
dec
fwait
sub
cmp
movsb
inc
fldcw
push
push
pop
dec
jecxz
fs
or
cmp
cmp
ja
sbb
fildll
cmp
lret
mov
cmp
jnp
inc
dec
movsl
cmpsl
int
cmc
sbb
mov
cltd
inc
xor
out
cmpsl
outsl
add
jns
pop
test
and
int3
sbb
mov
icebp
lahf
xchg
and
dec
inc
sub
adc
xchg
inc
adc
imul
stos
jbe
jo
daa
mov
dec
add
mov
push
push
sbb
add
xlat
and
sti
int3
dec
sbb
cmp
lea
cs
xor
inc
mov
pop
jb
push
adc
xchg
xchg
pop
jmp
das
push
sar
jg
lea
das
xchg
jb
arpl
xchg
dec
popf
repnz
or
mov
jle
and
lds
int3
adc
sahf
ljmp
movsb
scas
shlb
cmpsb
jecxz
pop
ret
ja
cld
inc
jnp
fsub
jae
push
in
mov
in
pop
push
or
addr16
add
cmp
rclb
or
cmpl
cmp
aas
xor
xchg
push
decb
aad
add
cwtl
xchg
jmp
pop
aad
dec
lcall
sti
sbb
xchg
add
inc
addr16
xor
sub
hlt
dec
cmp
fldt
push
xchg
je
dec
dec
popa
mov
test
dec
cs
add
dec
pop
icebp
ss
xchg
xor
pop
outsl
and
push
inc
cmp
scas
cwtl
push
mov
mov
jbe
sub
mov
add
sbb
pop
shrb
cmp
addr16
std
mov
dec
dec
mov
push
loope
xor
xor
mov
stc
or
aam
ja
sbb
fwait
cmpsl
pop
pop
cwtl
jmp
mov
call
push
push
sub
arpl
sub
shrb
sbb
xchg
xchg
mull
shlb
faddp
jns
addr16
mov
and
ljmp
adc
filds
cli
add
outsl
sub
add
faddl
or
mov
mov
dec
jae
jecxz
test
jns
inc
xchg
sub
xchg
sbb
xchg
push
add
mov
mov
push
add
or
daa
mov
jle
clc
ja
ret
ficomps
or
and
lret
cmpsl
mov
mov
test
test
mov
cmpsl
outsb
lds
sub
sbb
out
xor
push
test
das
mov
daa
and
sti
cmp
test
mov
dec
xchg
rcll
es
jp
popa
decl
rclb
fldl
and
pop
imul
push
and
xchg
lret
jnp
adc
jbe
scas
and
ja
cltd
adc
cmp
push
lock
cmc
pop
cmp
inc
inc
dec
cli
xor
push
push
outsl
lret
out
mov
in
es
lea
xchg
push
stos
bound
rolb
sub
mov
test
sbb
xorl
push
mov
shll
adc
mov
call
mov
sub
fs
xchg
aaa
ss
loopne
aad
pop
pop
dec
icebp
in
mov
push
inc
pop
gs
out
int3
fstl
je
movsb
push
in
mov
subl
mov
mov
scas
adc
sub
in
cmp
outsl
dec
mov
fiaddl
shlb
sbb
jg
popa
xor
xchg
jecxz
shr
test
lods
out
xchg
inc
fs
sbb
std
pop
or
test
rcl
sub
fmuls
mov
push
fs
and
push
movsb
out
daa
adc
fwait
mov
stos
mov
xor
ficoms
push
add
stos
ret
je
mov
cmp
mov
movsb
pop
sahf
mov
push
push
sub
ss
pop
pop
mov
lods
repnz
and
movsb
xchg
sub
popa
push
leave
ja
pop
xor
scas
mov
nop
mov
mov
std
inc
and
movsl
push
adcl
mov
mov
cmp
pop
nop
clc
mov
push
pushf
leave
leave
adc
fdivs
mov
mov
jge
xchg
in
shrb
pop
adc
mov
push
or
fmuls
ret
pop
repz
rcll
frstor
sbb
adc
sub
inc
and
pop
outsl
adc
js
mov
jp
sbb
stos
fcoml
mov
push
aad
test
fucomi
fwait
inc
test
insb
adc
lcall
mov
in
mov
add
inc
xor
dec
shl
fwait
loop
push
in
push
xchg
mov
insl
out
pop
mov
rcl
inc
es
jo
cs
sub
push
and
and
jmp
fcmovnb
and
cmp
aam
std
popf
push
pop
xorb
cmp
imul
jl
fwait
in
adc
cmp
shrl
xor
sti
cmp
iret
adc
fldt
sbb
jae
ret
adc
mov
jns
fadds
shll
sbbb
xor
shlb
adc
addb
cmp
xchg
and
dec
loopne
xchg
adc
bnd
gs
xchg
mov
dec
sar
mov
hlt
xchg
mov
add
xchg
mov
push
cmp
sahf
andb
repnz
jl
cmp
pop
fcoml
xor
scas
push
outsb
lret
adc
repnz
out
ds
hlt
pop
inc
mulb
pushf
sbb
test
dec
sbb
popa
mov
dec
outsl
mov
gs
jle
lock
shll
cmp
xor
sarb
aad
mov
push
push
in
les
sub
sub
inc
or
stc
mov
inc
sbb
mov
sbb
stc
lock
jecxz
sub
mov
loop
sub
sbb
xchg
out
jbe
sub
loop
sub
lods
push
dec
outsb
or
xor
loope
pop
xchg
cmp
inc
ret
loop
mov
add
decl
lea
mov
pop
mov
xchg
stc
sbb
add
sbb
mov
out
jmp
dec
mov
add
xor
leave
jb
jb
and
cltd
pop
in
cli
test
in
xor
ja
pop
andb
xchg
mov
mov
sti
mov
test
cmp
andb
and
mov
sub
pop
pop
mov
jno
adc
xchg
mov
sar
sbb
cwtl
xor
js
xchg
pushf
frstor
test
push
rcll
push
mov
sbbb
jne
cmpl
movsl
and
stos
inc
pop
sub
jp
or
es
push
test
js
mov
pushf
shll
setl
xchg
inc
xor
and
mov
rcll
sbb
and
loopne
or
repnz
adc
fidivrs
lods
nop
shlb
mov
cmp
ret
jle
xchg
xor
test
and
sub
and
fiadds
pop
mov
orb
cmpsb
enter
xchg
xchg
mov
adc
dec
jb
ret
cmp
out
push
pop
push
push
xlat
jmp
add
mov
inc
and
movsl
gs
adc
das
adc
xchg
mov
movsb
add
mov
xor
in
sbb
xor
sub
jne
out
test
xchg
rorl
test
and
cmp
add
jo
shl
fdivrs
pop
test
imull
xor
leave
imul
xchg
mov
dec
mov
sub
adc
inc
jne
fisubrl
mov
in
push
dec
in
and
aas
stos
or
xorl
push
and
pop
insb
add
push
mov
xchg
pop
mov
push
fwait
ror
in
ljmp
push
sbb
loope
lods
clc
ret
xchg
mov
jmp
jmp
sub
xor
pop
fldt
pop
cmp
sbbb
push
mov
loope
dec
bnd
nop
cs
xchg
push
in
lret
out
je
out
dec
rcrl
dec
inc
sar
fsubrs
and
rorl
push
sbb
popf
inc
dec
adc
mov
mov
xchg
push
push
add
jns
mov
scas
mov
imul
push
or
fs
idivl
or
cmp
mov
negl
enter
das
loop
fists
popl
sti
inc
add
out
mov
clc
popf
mov
add
pop
stos
rcr
xchg
movsb
mov
jecxz
nop
and
or
mov
repz
sbb
jecxz
xor
out
data16
flds
mov
mov
dec
test
mov
test
push
lahf
xchg
add
int3
inc
call
lahf
pop
call
cmc
orl
stc
or
insb
ret
scas
and
loopne
push
xchg
pop
adc
jo
jmp
pop
push
lock
roll
insb
rol
push
rorb
mov
xor
add
fisubrl
cld
adc
mov
dec
addr16
sbbl
arpl
mov
mov
push
lahf
sarl
lds
pop
sbb
xor
add
aad
xor
cmp
aas
cmp
or
xlat
aaa
mov
add
mov
movsl
fisubrl
mov
push
enter
xchg
popa
daa
dec
subl
bound
and
inc
imul
cmp
xor
rorb
js
ja
in
cmp
lea
enter
push
add
fstpl
incb
in
jns
aas
andl
xchg
loop
adc
and
ret
sbb
xor
lcall
push
fisubrs
popa
pop
leave
xchg
push
xor
inc
pop
adc
int
xor
cmp
lret
into
repz
sbb
jp,pn
ret
leave
pop
sub
xor
scas
mov
lret
push
je
push
add
inc
mov
sahf
cmp
call
pop
dec
out
and
popa
mov
ret
xor
fnsave
cli
shrl
popa
aam
mov
fisttps
es
clc
rep
cmp
sahf
adc
sbb
ja
call
pop
lds
xor
cmpsl
ret
mov
addr16
loopne
addr16
cmp
inc
mov
js
pop
stc
and
fcmovbe
xchg
mov
or
adcb
or
xchg
ds
jnp
mov
test
jbe,pn
repz
sub
push
rol
pop
daa
divl
push
push
stos
push
sbb
pop
pop
xchg
ret
pop
fstpt
in
imul
jg
lahf
movb
sbb
sbb
les
inc
mov
lcall
push
test
scas
dec
lret
jo
pop
cmpsb
loop
movl
arpl
fiaddl
pop
notb
fstps
mov
mov
sub
sbb
pop
sbb
mov
lds
lods
sub
fwait
jb
in
test
sti
jae
enter
sbb
xor
imul
addr16
in
pop
pop
rclb
or
pop
lea
and
pop
iret
sub
push
cs
enter
add
fiadds
loopne
dec
jmp
orb
ja
mov
mov
dec
stos
mov
lahf
push
rclb
imul
movsl
orl
push
mov
frstor
mov
mov
dec
sbb
jmp
cmp
adc
push
aad
or
in
pop
push
std
sub
mov
xchg
pusha
push
repz
add
popa
int
outsl
icebp
inc
push
xchg
or
leave
test
push
frstor
push
ret
out
cmp
sarb
icebp
and
dec
add
stc
dec
sar
sbb
pop
jp,pn
sahf
mov
xor
sub
xchg
cltd
cmp
dec
inc
mov
ds
loope
js
imul
jo
and
pusha
jg
pushf
rcrb
inc
movsb
outsl
cmpsb
xchg
rorl
stos
cltd
xchg
xchg
dec
daa
jnp
jle
xor
xor
loopne
insl
out
xor
and
or
jecxz
cmpsb
roll
push
in
push
push
mov
std
mov
fimull
ja
adc
repnz
pushf
lods
insb
sbb
pop
inc
cmp
out
cmpsl
loop
push
push
pushf
dec
add
insl
cmc
push
sub
clc
shll
mul
dec
clc
sahf
dec
addr16
rcrl
add
push
sbb
cmpsl
and
or
les
clc
xor
jb
aaa
sub
cmpb
das
sbb
inc
shlb
int
stos
jb
inc
pop
mov
or
jo
inc
aas
loope
jo
scas
int3
inc
adc
jns
pop
insl
enter
mov
jnp
push
xor
push
test
loopne
cmp
sbb
cmp
xor
mov
ficomps
adc
inc
out
mov
add
in
sub
jae
aas
inc
mov
ss
or
xchg
mov
xor
pop
lcall
pop
call
fdivr
mov
push
mov
add
mov
lahf
push
add
add
mov
jl
push
mov
mov
mov
mov
loopne
test
mov
nop
cmp
imul
mov
mov
jge
pop
repz
cmp
loope
add
sub
cli
jnp
test
icebp
shlb
popa
in
cmp
cltd
jo
mov
mov
clc
rclb
xchg
cmp
lds
js
sub
lock
addr16
pusha
inc
aaa
stos
xor
jae
push
aam
fisubrs
jne
cmpsl
and
dec
fs
push
cmp
dec
lea
iret
push
loop
notl
adc
je
push
ficoml
jle
and
out
call
adc
aas
sbb
lods
push
mov
stc
sbb
mov
subb
mov
xchg
mov
cli
repnz
add
jg
test
mov
lret
lret
mov
aad
in
dec
stc
in
stos
fwait
mov
adc
popf
pop
shlb
stos
imul
lret
popf
pop
inc
pop
outsb
and
mov
lods
xor
test
cmc
sahf
inc
push
adc
int
lahf
jecxz
or
data16
mov
hlt
into
and
test
xor
cmp
cwtl
shlb
data16
and
mov
sbb
mov
sti
icebp
sbb
jne
push
cld
enter
nop
fnstsw
sar
cli
imul
sub
jge
adc
xchg
push
push
daa
add
ds
gs
lcall
mov
icebp
pop
inc
mov
imul
mov
sbb
inc
in
es
jb
or
add
adc
and
in
lcall
inc
in
stos
mov
xor
xlat
jnp
xchg
fs
cmp
mov
xchg
cltd
insl
add
aaa
ffree
dec
dec
les
repz
jo
pop
xor
iret
jmp
adc
aam
lret
mov
aas
mov
xor
xchg
imul
popf
cmp
ret
sbbb
dec
imul
loope
sbb
test
mov
adc
lea
ja
xchg
adc
lds
cltd
shlb
pop
push
pop
jno
ds
inc
jge
or
popf
adc
in
lods
jno
shll
mov
xor
push
mov
clc
lcall
jle
push
fldenv
or
add
insl
aad
cld
sbb
cld
outsl
jle
test
stos
test
lea
jge
lea
aas
decl
fstpt
dec
lret
imul
cmc
mov
pushf
arpl
enter
daa
leave
in
mov
xchg
pop
lret
jp
adc
mov
xor
xchg
aas
fsub
loop
mov
or
repnz
outsl
stos
cmp
aad
inc
sub
mov
sbb
lcall
pop
int3
mov
lahf
out
add
sub
ss
and
mov
sti
jl
mov
sahf
or
imul
movsl
sub
es
xchg
leave
pop
push
mov
shrl
jne
addr16
and
or
mov
jp
inc
sarl
sub
xchg
jae
xchg
mov
loopne
mov
stc
sub
repnz
and
loopne
fs
pusha
add
cmp
jecxz
push
loop
inc
inc
loop
cmpsb
mov
xchg
dec
negb
sub
inc
cmp
or
and
cltd
add
nop
clc
orb
pusha
xchg
pop
repnz
popl
das
cmp
ljmp
mov
popa
cmpsl
jmp
in
pop
inc
stos
mov
out
push
xchg
fcmovnbe
hlt
or
add
data16
subb
fs
ss
inc
aas
push
call
iret
popa
mov
fcoms
loopne
cmp
add
fucom
pushf
pop
push
cwtl
test
dec
test
mov
insl
test
mov
shlb
stc
imul
aaa
movsb
inc
inc
scas
in
and
sub
loopne
dec
out
inc
sahf
sbb
cmp
sub
int
out
push
inc
adc
pop
mov
in
push
inc
fisubrl
icebp
cltd
fstl
and
aam
rorl
testl
in
inc
shlb
pop
jp
cltd
fsub
xchg
out
mov
pop
cltd
jbe
movb
adc
adcb
pushf
ds
jmp
iret
push
repnz
insl
adc
cs
mov
mov
jnp
xchg
add
int
sub
push
dec
mov
pop
pusha
int
fistpl
ss
sbb
add
fs
in
and
sbb
push
nop
test
xchg
in
in
outsb
xor
cli
addr16
and
pop
push
adc
lock
rorb
sbb
mov
and
xor
rcl
inc
add
int
fadd
pop
mov
lea
sub
cs
fdivs
cs
sbbl
std
push
insb
data16
inc
mov
in
push
xchg
mov
xor
cmp
fs
xchg
mov
push
ljmp
mov
call
jno
mov
repz
mov
loop
mov
dec
and
insb
popf
mov
or
mov
xlat
fadds
fadds
fstpt
pop
fwait
out
out
sbb
mov
adc
xchg
mov
sarl
lock
cwtl
jmp
cltd
jo
shr
cmpsl
bound
cli
jb
fcmovb
mov
xchg
inc
add
jbe
out
sub
add
lods
arpl
scas
add
sbb
and
ljmp
cltd
inc
cld
push
pop
push
xchg
jbe
roll
push
push
cmp
fs
mov
iret
inc
sbb
mov
stc
rclb
pop
xor
and
cli
push
dec
pop
hlt
int
jg
sti
cmp
in
test
jecxz
fstps
test
insb
add
ljmp
aas
fwait
rcrb
jne
lock
sub
fwait
and
js
and
push
inc
movsb
adc
sbb
stos
mov
shll
adc
movsl
pusha
xorl
inc
clc
stc
inc
aad
push
je
push
mov
push
pop
movsb
sti
dec
or
adc
or
push
cld
jle
arpl
je
and
bound
adc
stc
scas
gs
and
sub
inc
in
mov
pop
xchg
and
daa
dec
mov
das
adc
mov
fsubrp
in
in
into
xchg
pushf
ror
in
jns
mov
add
adc
fs
sub
pushf
inc
movsl
cmpsl
pushf
xor
mov
sbbl
fildll
mov
fidivs
aaa
push
mov
adc
pop
shrb
push
jl
and
xchg
lret
inc
jle
jbe
hlt
dec
enter
jmp
cmp
and
sub
cmpl
movsb
insb
and
rclb
nop
fwait
xchg
lahf
xor
dec
jl
shll
jl
jnp
lret
add
ss
rol
scas
cmp
fcmovbe
mov
stos
dec
mov
and
xor
jp
stos
jb
jbe
jge
fdivrl
push
cmp
repnz
stc
and
loope
push
add
iret
sbb
outsb
adc
pop
not
mov
scas
jb
jg
push
cmp
mov
repnz
and
outsb
jecxz
jns
ja
je
inc
stc
inc
in
add
mov
mov
scas
dec
daa
inc
mov
lret
fldcw
mov
add
pop
mov
mov
cmc
pusha
ds
and
dec
adc
fwait
enter
push
push
sub
loopne
inc
mov
dec
repz
lea
jmp
mov
es
push
enter
mov
sub
sub
insb
xchg
mov
jne
xor
mov
daa
sub
cmp
inc
mov
cltd
xchg
or
test
cmpsb
stc
call
das
mov
and
scas
sahf
mov
or
mov
push
loopne
mov
in
mov
pop
xchg
das
sub
cmp
push
cwtl
mov
mov
sub
mov
cmpl
push
sbb
lock
inc
stos
jae
push
mov
cmpsb
mov
mov
push
nop
in
decb
and
sub
xchg
mov
and
js
jecxz
je
ljmp
gs
push
inc
jns
push
xchg
ss
sbb
mov
inc
dec
mov
xor
cld
outsb
push
adc
pop
mov
loopne
int3
inc
dec
mov
pop
push
inc
std
mov
gs
inc
sub
inc
push
mov
lock
shll
adc
jl
mulps
mov
cmp
cld
int3
mov
jmp
lods
fdivrl
xchg
aad
outsb
std
aad
pop
call
stos
sarl
fcomip
inc
inc
or
scas
test
mov
sub
mov
int
and
or
daa
sub
cmpsb
dec
pushf
push
mov
or
add
cmp
dec
mov
or
mov
mov
dec
clc
fcmovbe
push
cmpsb
je
lea
cmp
insb
stos
xor
xor
adc
ja
jo
push
xor
push
iret
arpl
cmp
jns
push
adc
push
xor
into
jmp
xchg
jecxz
js
and
adc
mov
dec
test
jno
sub
aaa
nop
mov
xlat
call
add
mov
lds
push
sbb
mov
add
sub
sbb
sbb
or
mov
cld
sub
repz
sbb
iret
stos
mov
lea
setge
call
push
xchg
lock
jbe
stos
sbb
or
add
mov
dec
mov
xchg
dec
aas
clc
or
jmp
in
insb
mov
sub
xchg
lock
adc
inc
push
enter
mov
int3
mov
jmp
stos
dec
sbb
or
test
mov
xor
jnp
and
jmp
ds
xor
test
push
test
mov
inc
mov
jno
pop
bound
jb
loop
addr16
push
fdivrs
push
pusha
std
push
das
xor
cmp
jmp
or
call
sbb
mov
outsb
jge
sub
daa
pop
aam
and
fmuls
mov
cmp
push
lcall
mov
dec
lea
rorl
jge
stos
iret
shrl
pop
dec
daa
jns
pop
or
std
mov
sbb
sarb
aaa
mov
sbb
cmp
push
bound
or
cwtl
sbb
imul
and
inc
push
xor
clc
cmp
out
inc
adc
lahf
pop
imul
jno
adc
icebp
mov
shlb
pop
jmp
fcompl
cmc
lcall
push
loopne
call
les
mov
add
icebp
fs
loope
push
mov
lock
lahf
jns
xchg
xchg
or
cmp
addr16
pop
dec
jge
fdivs
jns
push
insb
mov
or
jbe
aam
mov
push
test
insb
fdivl
and
stc
inc
add
mov
xor
mov
imul
xbegin
jns
xchg
xlat
shl
pop
pushf
xchg
jg
push
pop
in
pop
cmpsb
sbb
ja
mov
cmp
repz
dec
push
sbb
pop
mov
pop
test
cmp
lods
jns
cltd
jg
icebp
scas
cs
gs
jl
loope
xchg
repnz
leave
movb
cmp
mov
ror
push
cmc
dec
pop
mov
push
stos
pushf
insb
or
pop
adc
inc
rcrl
leave
xorb
fsubrs
cmp
popa
dec
int3
xchg
jo
xor
aad
add
push
insl
jl
mov
repnz
jno
test
pop
pop
test
xchg
sub
mov
int
aam
pop
mov
adc
adc
mov
or
imul
jecxz
test
jae
stos
sbb
mov
pusha
test
add
push
in
data16
mov
mov
sbb
jae
mov
inc
rcr
lea
cli
test
loopne
mov
inc
bnd
jb
jmp
cmp
sarb
loop
xor
sub
xchg
xchg
adc
sbbl
cmp
mov
adc
ret
andnps
aam
mov
inc
imul
push
sbb
in
cmc
aaa
dec
adcb
cmp
pop
sbb
inc
rcrb
mov
mov
jns
addr16
pop
ret
inc
pop
fnstsw
cmc
mov
outsb
inc
je
xchg
scas
push
push
gs
mov
leave
mov
mov
xchg
je
pop
data16
inc
or
xor
es
push
jge
jecxz
aam
xlat
cmp
jae
lods
jl
and
inc
cmp
add
movsl
mov
in
jge
cmp
push
dec
dec
scas
aas
or
cltd
dec
daa
pop
scas
dec
and
jno
jp
pusha
and
push
lcall
pop
out
jne
sub
sahf
push
aas
lods
fnsave
shl
cmp
cmp
sub
push
data16
add
push
mov
in
andb
dec
mov
and
mov
sbb
lcall
out
je
xchg
popf
push
fs
lret
mov
mov
jns
or
ret
fld
jns
sbb
scas
sub
sbb
stc
int3
pop
pop
insl
jne
xchg
mov
adc
and
inc
inc
xchg
stos
push
cld
push
push
icebp
and
movsb
sbb
fwait
insl
leave
pusha
cmp
push
add
pop
cmp
mov
mov
sbb
popf
mov
subl
mov
aas
push
dec
mov
cwtl
mov
scas
loope
int
xlat
mov
stos
sub
fwait
mov
adc
inc
mov
lds
pop
out
outsl
int
mov
jb
mov
pop
cwtl
mov
addl
lds
push
push
ljmp
xchg
jns
jp
cmp
xchg
push
xchg
sbbl
pop
pop
xchg
sbb
sar
sarl
dec
test
push
sub
mov
adcb
cmp
shrb
push
jo
into
repz
xor
scas
lahf
in
xchg
jl
movsl
mov
mov
inc
add
xchg
mov
comiss
xor
sbb
add
push
mov
stc
sti
fs
jle
fs
mov
mov
nop
push
mov
mov
pop
xchg
movsb
xor
rcll
xor
test
lret
cli
xchg
clc
mov
fldt
inc
call
fcomps
fldcw
out
cwtl
sbb
cli
int3
cli
in
mov
fidivl
mov
push
cli
or
jmp
sbb
loope
sbb
jb
aam
scas
inc
stos
cmpsl
divb
sbb
mov
jmp
mov
clc
sub
arpl
mov
shl
push
ds
and
in
mov
jge
out
push
insb
mov
cmpsl
push
xchg
scas
cli
xor
dec
inc
add
fnstcw
loop
pop
movsl
ljmp
mov
divb
adc
cmc
jp
dec
cmp
addr16
inc
or
sarl
jle
add
or
bound
fdivrp
mov
in
xor
and
xchg
sub
in
pop
mov
test
xchg
push
mov
adc
jmp
int3
iret
dec
gs
cltd
inc
pop
xor
xchg
add
jmp
add
dec
int
mov
dec
add
subl
xchg
stos
in
ret
xchg
pusha
fiadds
or
je
cmp
push
mov
or
sub
je
or
icebp
in
fs
test
sub
addr16
or
repz
push
je
orl
arpl
aad
mov
repz
inc
mov
pop
ret
pop
xlat
js
mov
fwait
push
pop
in
inc
fs
pop
mov
mov
out
push
or
mov
push
icebp
xor
loope
hlt
pop
push
push
cmc
data16
adc
lea
sbb
cmp
mov
jns
loope
andl
sub
movsb
mov
cli
fldt
movsl
xor
add
and
pause
fsubrs
sub
pop
lea
inc
inc
loop
push
sbb
into
in
xchg
sub
sbb
call
out
fidivs
inc
stc
stc
fiaddl
inc
xchg
movsb
push
push
inc
cmp
int3
pusha
ret
insl
pop
enter
cmp
inc
push
pop
cli
pop
test
cmp
jns
std
cmp
imul
repnz
je
or
mov
push
add
shl
aaa
mov
idiv
push
orl
xor
and
sub
loopne
xor
inc
pop
sbb
aaa
cmp
mov
in
add
push
andb
shll
lds
push
repz
dec
sub
pop
add
mov
psllw
xchg
jns
fstpl
lret
mov
push
addr16
scas
jo
xchg
cmp
addr16
jnp
scas
cmpsl
mov
ljmp
adc
push
mov
in
mov
push
sbbl
test
cs
jle
test
xchg
rorb
sarb
adc
std
nop
pop
enter
in
xor
and
dec
mov
mov
dec
in
sub
sub
in
test
rolb
sub
sbb
mov
jns
dec
and
inc
mov
jae
adc
xchg
ds
dec
xchg
idivl
shlb
in
data16
adc
or
jmp
divb
imul
ljmp
mov
ret
adc
inc
shl
xor
and
lcall
add
dec
add
ds
inc
and
push
mov
adcl
outsl
out
rorl
cli
or
add
push
xchg
movsb
push
mov
aaa
xor
mov
push
imul
xor
leave
jmp
push
adc
and
mov
cmc
int
mov
sbb
dec
mov
or
and
js
cltd
mov
outsb
adc
pop
enter
ret
ror
mov
fimull
ljmp
outsb
mov
push
fildll
std
xlat
in
outsl
cli
loopne
loope
add
or
outsb
gs
or
push
and
pop
and
imul
movsl
insb
dec
add
add
loope
sbb
jmp
outsb
inc
std
push
add
mov
imul
mov
xchg
insl
fs
mov
call
ss
lahf
pop
jne
pop
push
sub
out
nop
and
jl
mov
sbb
pop
push
push
outsl
xor
call
insl
jb
sub
mov
push
dec
cld
daa
inc
subb
pop
scas
jb
mov
pop
pushf
or
aad
fstl
je
inc
cmp
pop
test
xor
nop
cld
bnd
add
xorb
test
jl
and
pop
stos
dec
cld
sbb
xchg
sub
repz
cmp
leave
popl
xchg
sbb
xchg
aad
jg
ret
lret
lahf
les
inc
jmp
rcr
inc
push
mov
dec
mov
sarb
inc
dec
cmp
daa
in
pop
loop
mov
fisubl
xchg
repz
lahf
das
lods
lret
clc
adc
aam
daa
jno
push
cwtl
fisttps
pop
adc
mov
das
fwait
jae
dec
mov
sub
mov
stos
addb
inc
cmp
je
fadds
imul
jns
xor
mov
sub
mov
jle
mov
mov
loope
decb
lea
mov
lods
mov
xchg
insb
add
cmpsw
es
lahf
pop
xor
xor
dec
and
insl
xor
mov
scas
adc
js
popf
cltd
adc
and
dec
adc
inc
cmc
xchg
xchg
and
pop
pop
movsb
cmp
mov
mov
test
int
inc
adc
fwait
mov
lret
sbb
imul
jecxz
iret
push
mulb
shl
nop
shl
loop
jb
pop
add
xor
aaa
dec
sbb
aad
cmp
cmp
scas
push
or
enter
fildl
mov
mulb
push
data16
mov
mov
and
fidivrl
mov
push
fcmovnbe
mov
xchg
lea
sti
or
loope
push
mov
scas
ds
repnz
fdivr
pop
dec
cmp
fsubs
out
inc
jecxz
popf
cltd
add
jb
addr16
sbb
dec
loope
addb
fisttpl
test
mov
adc
or
add
jecxz
pop
sbb
loopne
and
mov
xlat
hlt
in
negb
jecxz
lcall
xchg
jb
inc
es
add
pushf
inc
insb
das
jbe
add
xchg
xor
or
xor
scas
js
sarl
out
fbld
shlb
cmp
or
sbb
mov
mov
ret
andb
sbb
cmp
xchg
sarl
pop
dec
sbb
xchg
xchg
lret
xor
aad
inc
jo
and
add
mov
adc
ficoms
popa
xchg
inc
imul
mov
or
vmovaps
jle,pt
and
ljmp
rcll
jb
clc
mov
stos
into
scas
mov
rorl
lods
pop
das
cmc
jecxz
das
mov
jmp
add
jecxz
or
add
push
js
pusha
aas
xor
adc
and
or
outsl
push
das
sub
cmc
mov
leave
jg
mov
outsb
out
aas
mov
jno
xchg
mov
out
mov
pop
push
sub
xchg
sahf
add
lds
aad
lods
std
inc
repnz
pop
ja
push
add
sub
push
dec
mov
sbb
and
jge
xor
sub
sbb
sti
dec
mov
push
mov
data16
mov
out
push
ret
lret
xchg
test
add
cmp
inc
hlt
sub
inc
loope
pushf
leave
add
xchg
sahf
scas
loop
jl
push
sub
or
cmovnp
push
cmp
add
and
adc
and
xor
cmpl
mov
sub
out
xchg
rep
fld
mov
pusha
pusha
cmp
xor
jb
or
push
mov
mov
stc
sub
dec
and
sbb
xorl
mov
dec
scas
sbb
fistl
and
push
dec
je
sub
loope
pusha
lods
pop
les
bound
or
rcr
repnz
sub
push
push
sub
xlat
pop
adc
clc
aaa
inc
test
imul
and
and
pop
sbb
adc
inc
sub
and
cld
inc
add
push
std
lret
ljmp
xor
cld
push
test
icebp
and
cs
mov
push
stos
arpl
xor
and
test
out
clc
push
outsl
or
sbb
jp
jnp
scas
jl
add
pop
and
add
ds
stc
pop
in
lcall
adc
mov
scas
std
cmp
jg
jp
lret
sbb
push
xchg
mov
daa
pusha
mov
shll
cmpsb
xchg
loopne
popf
push
sbb
jle
test
imul
aad
mov
cmp
dec
mov
stos
jl
orl
jne
inc
and
mov
fnstenv
fdivrl
fimull
lds
sbb
mov
push
popa
in
sub
xchg
js
rcr
je
into
out
cmp
call
stos
bound
int3
xor
push
pop
mov
movsl
cltd
cwtl
pop
push
scas
enter
sub
fldt
fs
mov
mov
mov
or
aaa
cwtl
sbb
pop
clc
ss
mov
jl
jb
sbb
cmpsl
into
xchg
push
ficoms
cwtl
sarb
and
pop
in
pop
xchg
add
mov
inc
sbb
pop
add
test
lcall
jns
lds
negb
jae
pop
icebp
sub
sbb
popf
fsubrl
push
ss
push
cli
push
ret
mov
or
mov
test
sbb
cmp
mov
icebp
xchg
sub
cmpsb
js
mov
or
test
jo
xor
lcall
pop
ljmp
loopne
pop
or
mov
cmp
cmp
mov
xor
cltd
push
and
mov
cmpsl
xchg
push
movl
xchg
and
cmpsl
xor
mov
or
inc
lahf
test
xor
xchg
outsb
mov
adc
pop
sbb
test
call
out
sub
cmpsb
lahf
cmp
popa
cmp
jge
rol
xor
orl
jmp
inc
or
aaa
gs
push
or
test
in
jle
push
push
out
vpavgw
xor
adc
inc
ret
inc
and
jg
lcall
push
fstpt
jae
inc
cs
xchg
insb
test
gs
or
sahf
push
pop
mov
in
leave
jg
sub
or
cmp
jge
cld
mov
add
pop
cs
and
dec
and
jmp
push
leave
popf
jb
arpl
cmpsl
inc
mov
dec
int
outsb
loop
add
dec
jns
fwait
jge
les
dec
and
shll
out
ljmp
cmp
cmpsl
xor
cmpl
xchg
mov
fsubl
jle
data16
jbe
push
enter
xor
xchg
jnp
jg
dec
xor
dec
gs
and
pop
fs
and
test
outsb
loope
jns
movsb
jmp
ds
pop
popa
jge
sub
fwait
push
fcomi
mov
addl
push
jg
or
jle
sarl
pop
shl
and
mov
imul
pushf
out
frstor
fdivrs
rcrl
js
push
daa
or
pop
outsb
fisttpl
mov
int3
sbb
insb
testl
fldt
mov
fbstp
jne
in
jg
in
xchg
stos
subl
lcall
fwait
push
push
or
inc
and
rcl
in
sub
jecxz
cli
in
or
mov
ds
mov
rol
out
movsl
jmp
jo
cmp
dec
mov
ja
mov
test
leave
fadds
in
stc
push
stos
mov
jg
add
adc
add
push
stos
std
or
and
out
icebp
stc
jbe
in
mov
cmp
mov
ret
add
daa
dec
addr16
stc
pop
jb
sbb
fisubl
pop
cmp
je
pop
mov
pop
dec
push
sbb
fld
lea
mov
cmp
push
ljmp
mov
push
fisubrl
fsub
pusha
sbb
fnsave
pop
lret
fisttpl
xchg
loope
dec
or
mov
popa
nop
pusha
mov
push
lcall
imul
and
sbb
push
pop
loop
popf
divb
push
mov
arpl
test
mov
lcall
pusha
jge
inc
in
mov
mov
adc
or
movsl
pushl
in
loope
xor
movsl
filds
jne
repnz
sahf
lcall
xchg
fsubl
insb
mov
jae
mov
sbb
daa
inc
xchg
push
sbb
out
adc
pop
fnstenv
pop
mov
push
jb
sub
jecxz
pop
sbb
insb
push
mov
mov
daa
inc
or
dec
sub
in
and
leave
xchg
sub
in
out
lods
int
inc
push
push
fimuls
aad
in
and
mov
insl
xchg
test
add
cmpsb
pusha
testl
loope
es
repz
jno
push
cs
in
pop
cmp
mov
jne
add
adc
notl
out
or
and
cmpsb
bound
arpl
mov
add
adc
roll
push
into
xchg
movsl
pop
pop
cmpsl
loope
dec
xlat
and
dec
or
pop
shlb
dec
sbb
mov
jno
jns
lock
hlt
insb
gs
push
cmp
add
scas
hlt
and
pop
xchg
cmp
xchg
rclb
or
push
mov
cltd
pusha
movsb
inc
pop
push
aam
mov
addr16
cltd
loope
nop
dec
xchg
ret
xchg
or
movsl
test
xchg
xorl
and
pushf
insl
dec
dec
dec
jp
mov
pop
xchg
in
pop
lock
out
lds
cli
push
push
push
cmp
xchg
fcomip
or
inc
pusha
lods
and
adc
gs
adc
xchg
lahf
sti
push
xor
sbb
pusha
ss
inc
sub
out
mov
cmp
je
xlat
jne
popa
sti
mov
out
fdivrs
stc
dec
fisttpll
sti
mov
imul
inc
fwait
adc
jns
inc
push
jns
test
mov
addr16
push
repnz
sahf
pushf
cli
pop
out
lods
and
xchg
out
js
aad
pop
sub
pop
xchg
push
sbb
push
mov
and
xor
inc
test
cmp
xor
add
add
and
xor
pop
jbe
insb
cs
mov
sbb
dec
xchg
shlb
test
in
xor
and
arpl
jno
jno
insb
stos
lret
fsts
out
imul
rcll
dec
icebp
ret
out
aas
data16
pop
lock
inc
jp
bound
or
mov
shll
imul
pop
mov
imul
sar
fadds
mov
daa
fnstcw
das
cmp
adc
ljmpw
jge
pop
lret
loope
loopne
xlat
mov
dec
and
call
mov
jae
dec
dec
fimuls
ficoms
mov
cvtpi2ps
aas
sbb
repnz
stos
sbb
mov
pop
mov
dec
outsl
cmp
test
test
lret
pcmpgtd
or
dec
sbb
sub
ret
dec
daa
repnz
push
das
out
pushf
cwtl
push
insl
or
xchg
icebp
cs
in
or
sub
insb
out
pop
xor
cmp
mov
jb
mov
popl
int
ret
notl
adc
lcall
imul
ss
inc
mov
fdivl
add
mov
xchg
jmp
sbb
sbb
pop
push
dec
xor
hlt
xchg
add
mov
jecxz
jae
js
mov
jecxz
cmp
orl
test
cli
mov
movsl
je
imul
push
dec
pusha
jl
xchg
sbb
jb
arpl
shrl
in
js
mov
pop
rclb
cwtl
mov
test
jne
sbb
stos
iret
imul
fcoms
jae
xor
sbb
adc
jb
scas
mov
xchg
xor
out
or
or
and
in
cmp
fstpl
sbb
bnd
test
mov
mov
mov
adc
movsb
fstpl
lods
insb
and
xchg
out
mov
lret
jbe
sub
sbb
ljmp
outsl
sbb
pop
cmpsl
xchg
sub
repz
pop
lods
jne
stos
int
aaa
push
sahf
add
rcll
dec
sahf
xor
mov
enter
jo
fs
push
inc
push
pop
dec
fnstsw
scas
cmp
dec
and
lret
xor
addr16
mov
out
adc
shlb
in
inc
xor
mov
mov
das
xchg
sbb
xor
clc
sub
icebp
sbb
fdivrs
addr16
pop
sbb
arpl
sbb
ja
dec
out
fistpl
lret
xchg
xchg
push
xchg
loop
ja
xor
fnstenv
mov
push
push
add
sub
ss
repnz
loopne
lcall
push
jle
add
jne
add
ja
sbb
mov
adc
pop
cltd
add
sahf
inc
dec
xchg
pop
or
pop
out
jecxz
mov
or
adc
cwtl
cmp
inc
pushf
xor
int3
jbe
xor
add
outsb
pop
jge
cmp
cmp
stos
imul
cmpsb
fwait
xor
sub
pop
enter
push
cmpsl
adcl
cmp
inc
ja
mov
fmul
push
jae
stc
sahf
rcll
and
ss
jbe
stos
push
out
inc
fstpt
add
mov
outsl
push
add
xchg
out
dec
lods
stos
cmp
jno
push
dec
and
cmp
not
in
xor
sub
pushf
outsl
pop
mov
sbb
xchg
cltd
dec
sub
daa
das
push
cwtl
xchg
or
cmp
dec
and
mov
es
loop
test
sub
jo
pop
repnz
das
mov
or
sub
mov
inc
sbb
sub
aam
dec
mov
cmp
sub
dec
sti
mov
push
lods
sub
mov
arpl
sbb
sub
js
xchg
jle
subl
out
es
imul
sbb
fs
test
push
repnz
cmp
xorl
daa
adc
ds
pushf
or
imul
cs
aas
or
mov
dec
ret
mov
xchg
add
lods
jecxz
std
sbb
xchg
push
outsb
or
ds
movsb
lret
adc
xchg
movsl
push
xor
push
imul
loop
in
cmpb
inc
cmp
cmpsl
out
xchg
enter
mov
add
int
xchg
imul
mov
sbbb
cmp
movsb
ret
push
decb
fisttpll
repz
fsin
cmpsb
aam
sub
or
mov
push
xorb
pop
pop
adc
adc
sbbl
fistpll
pop
mov
jo
cmp
icebp
jo
sbb
cmpsb
mov
mov
adcb
ss
pop
decb
mov
ja
repz
xchg
arpl
mov
cli
add
aam
push
shl
mov
sub
sub
fcmovbe
xchg
rcr
aas
add
sub
mov
mov
les
jecxz
mov
lods
iret
jo
mov
rcr
stos
cmp
repz
xchg
xor
std
add
mov
arpl
fcoms
mov
rcr
test
out
pop
inc
mov
cmp
test
sbb
adc
sbb
imul
add
cmp
pop
pop
sbb
fcomip
xchg
pop
flds
les
lea
addb
xor
out
and
jb
test
adc
jb
out
mov
dec
pop
xor
stos
movsl
lahf
adc
mov
fcom
dec
mov
ja
into
ret
dec
stos
pop
pop
out
dec
dec
fmull
movsl
xchg
push
or
ds
cmp
lods
bound
cltd
sbb
push
std
dec
adc
push
inc
fwait
lods
dec
pop
scas
lods
or
cmp
loopne
rcl
adc
fwait
iret
lods
and
push
imul
pop
dec
faddl
and
or
hlt
pop
cmc
jp
cld
fnstcw
movsl
sahf
stos
dec
loopne
and
mov
lods
jl
dec
lcall
cmp
and
push
shl
popa
aam
sbb
hlt
cld
xor
jb
std
cmp
loopne
and
mull
sbb
dec
bound
cmp
xchg
xor
in
cld
scas
js
or
and
cmp
sti
syscall
add
mov
insb
lods
test
pop
push
fdivs
pop
pop
cmp
cld
addl
sti
test
sub
jb
jl
jb
mov
sbb
push
jnp
jns
sbb
pop
sbb
pop
icebp
addl
into
mov
xor
cmp
mov
inc
cmp
outsl
xchg
fstpl
mov
sbb
clc
std
mov
std
ljmp
pop
xchg
lods
mov
jnp
inc
lret
popa
jg
inc
mov
cmp
pusha
adc
cs
inc
out
dec
push
cmpsl
pop
out
push
setge
notb
sarb
xlat
divb
push
shr
push
pop
rorb
pushf
aas
jae
mov
cmpb
icebp
fldt
inc
and
add
jo
lret
ret
and
adc
mov
ret
jo
into
xchg
or
push
ficoms
mov
sbb
in
xor
lods
leave
mov
jp
ljmp
scas
xchg
sti
loop
fidivrl
movsb
xor
pop
sarb
in
add
cld
movsb
jo
jns
sarb
jbe
push
iret
xor
sbb
loope
inc
and
add
push
ror
rcr
jne
out
mov
in
lea
pop
pop
fcoms
inc
push
or
mov
pop
push
ss
sti
push
mov
lods
fdiv
fnstcw
loop
pop
shlb
jecxz
pop
repnz
adc
or
idivb
jl
xchg
daa
and
inc
add
mov
sub
lock
cwtl
add
std
jl
push
cmp
adc
add
call
push
ret
fwait
lcall
ficomps
cmp
imul
push
sbb
testl
or
scas
and
adc
lods
xchg
repnz
xchg
pusha
fmull
in
test
dec
ljmp
popa
arpl
push
adc
jae
adc
out
rcrb
cmp
xchg
xchg
movsb
and
or
sbb
or
xor
dec
leave
xor
fisubrs
jo
push
push
mov
out
xchg
gs
ficoml
lods
mov
lds
pusha
ret
dec
cmp
adc
shrl
adc
sbb
icebp
pop
loopne
leave
loope
mov
or
inc
xor
mov
outsl
daa
cmp
icebp
inc
mov
sbb
leave
bswap
dec
std
dec
outsb
jg
mov
xchg
out
and
mov
mov
int3
adc
es
ljmp
xchg
adc
and
mov
push
scas
cli
adcb
in
sahf
inc
outsb
scas
mov
sbb
mov
call
cmp
push
jmp
scas
pop
roll
push
ret
hlt
adc
ret
mov
inc
in
mov
sbb
repnz
cmp
lahf
mov
psubusw
mov
cmp
xchg
inc
pop
mov
aam
jle
push
sbb
inc
mov
fldcw
add
pop
aad
mov
movsl
loopne
arpl
push
adc
dec
les
lds
mov
addb
aam
subl
jnp
movsl
lods
adc
push
idivl
orl
cmc
repnz
push
stc
pop
jmp
fsubrl
lods
sbbb
ds
fstps
add
daa
or
sbb
scas
adc
loope
xor
xor
mov
mov
pop
adc
mov
nop
lcall
add
xchg
inc
int
mov
mov
mov
mov
cmpsl
mov
stos
xor
sahf
fwait
es
fisubrs
jmp
jb
cld
std
cmp
mov
pop
adc
sahf
pusha
xchg
push
sub
pop
shrl
dec
mov
frstor
ljmp
jle
lock
sbb
add
mov
arpl
jb
enter
xchg
push
inc
jl
add
popa
fdivs
sub
inc
call
movsl
gs
hlt
movsb
das
cmp
push
dec
xchg
jle
push
repnz
sbb
mov
iret
or
add
push
nop
scas
xlat
enter
pop
push
adc
lea
pusha
scas
pop
mov
lret
inc
loope
jle
daa
pop
sub
js
ja
out
ss
push
push
jae
xchg
sbb
cwtl
test
jnp
cli
cld
outsl
or
cmp
std
mov
push
sbb
mov
sbb
pop
sub
cmovns
jecxz
pop
test
nop
insb
incb
lods
dec
inc
ret
stos
ret
mov
cwtl
mov
mov
push
js
lcall
push
ret
jmp
pop
ret
pop
push
cmp
dec
out
loope
xchg
mov
out
push
push
push
ds
test
bound
adc
or
jae
mov
bnd
arpl
outsl
mov
jno
leave
cmpsb
popf
out
shlb
test
push
insb
in
dec
jl
rclb
jns
movsb
push
xor
fbstp
pop
xchg
sti
scas
bound
mov
fwait
xor
add
inc
sahf
loopne
fmull
push
add
and
xor
js
mov
pop
hlt
sub
outsb
xlat
rcll
push
bound
mov
dec
js
pop
shr
push
adc
arpl
push
dec
xor
addr16
adc
lock
xor
mov
jecxz
lahf
outsl
dec
mov
test
stos
or
sbb
jecxz
push
sub
adc
hlt
sub
push
mov
js
gs
cmc
push
out
into
cltd
out
int3
js
lds
or
sub
sub
cmp
cmpsl
inc
cmp
xchg
xchg
push
xchg
int
mov
andl
pop
dec
adc
adc
les
sub
sbb
inc
push
xchg
bound
pop
jo
cmp
sahf
addr16
mov
cmp
test
stos
dec
jnp
mov
fs
jmp
sahf
sub
pop
pop
add
lock
fbstp
mov
arpl
jg
xor
push
sub
rcl
movl
xor
popf
sub
xor
scas
inc
idiv
dec
mov
sub
mov
lods
push
outsb
jne
inc
cmc
mov
cmp
in
inc
xor
stc
mov
inc
les
and
xchg
jecxz
adc
cld
pop
aad
aaa
fldcw
scas
stc
dec
xor
xor
pop
out
movl
bound
sti
and
dec
idivl
and
xlat
out
mov
jns
arpl
xor
jle
nop
lods
cmp
test
or
dec
loop
sub
mov
iret
sti
fistpll
push
inc
aam
test
outsl
aad
pop
pop
popf
test
xchg
xor
fnstsw
mov
adc
sub
adc
es
cld
cmp
aam
push
insl
mov
or
add
lock
cmc
test
xor
mov
mov
data16
and
sahf
or
dec
push
pusha
push
mov
shl
and
popf
into
es
jo
mov
cmp
pusha
cli
jae
mov
lret
or
out
mov
xor
sub
cmpsb
sbb
or
pop
fstl
mov
jg
inc
xlat
xchg
mov
inc
mov
in
adc
movsl
fnstcw
xor
inc
test
and
adc
arpl
sbbb
xor
iret
daa
jle
pop
dec
dec
stc
pop
sub
popa
es
outsb
es
adc
lret
dec
and
in
es
push
sbb
push
jle
pop
movsl
cmpsl
vucomiss
dec
inc
hlt
cmpsl
rcrb
mov
cmp
cld
idivl
adc
pop
in
xchg
pop
cld
mov
jg
call
pop
imul
es
iret
jle
pop
jecxz
jg
aad
scas
xchg
sub
jne
lock
jmp
lds
sbb
jmp
insb
pop
loope
inc
mov
push
push
dec
mov
inc
cli
shrl
ds
xor
mov
hlt
push
in
imul
lahf
jae
mov
pop
dec
js
jecxz
push
jae
sbb
pop
sub
sub
out
xor
int
in
xchg
xlat
inc
jp
fstp
or
movsl
pop
xchg
or
or
fisttpl
dec
sbb
aad
mov
fcoml
pop
lods
adc
loope
cmp
mov
sub
push
cmp
jl
lods
mov
lds
jecxz
pop
inc
cmp
jo
sub
mov
adc
sbbb
lea
add
movsb
xchg
mov
push
cli
and
je
cmp
aaa
fwait
ljmp
mov
add
dec
xor
popa
add
mov
cli
push
cltd
fldl
xchg
mov
push
dec
scas
inc
stos
aad
xlat
sahf
xor
cmc
loope
xchg
xor
jg
mov
xlat
es
jmp
shl
pop
movsb
dec
icebp
cmp
jmp
sbb
inc
gs
sbb
fcomps
enter
lods
orl
and
pop
push
sahf
stos
movsb
sbb
lret
cmp
jmp
dec
dec
xchg
loopne
insl
addr16
insl
inc
mov
pop
cmp
icebp
or
daa
xlat
les
cwtl
push
jne
mov
repnz
lds
or
out
sbb
cmp
xchg
out
cmpsb
mov
in
or
iret
xlat
add
daa
test
mov
aad
dec
aaa
sbb
dec
lock
movsl
js
add
pop
xor
and
mov
test
mov
inc
mov
adc
pop
call
add
jle
ret
pop
ret
xor
cmp
jmp
lcall
mov
xor
push
xchg
add
push
add
rorb
dec
leave
push
notb
add
jae
pop
rorb
adc
pop
test
dec
mov
inc
sub
adc
dec
cmp
out
adc
adc
dec
into
lret
xchg
add
movsl
fcomp
test
xchg
inc
les
mov
sub
movsb
inc
push
dec
movb
or
loopne
pop
sarb
push
fs
push
mov
cmp
rorl
movsb
aam
xchg
cwtl
scas
nop
std
arpl
andb
cs
or
andb
mov
add
repz
sbb
push
imul
cmp
daa
xor
jmp
sbb
fcoml
or
mov
sbb
outsl
std
rcrb
notl
push
js
or
xchg
addr16
ja
mov
dec
mov
or
push
cs
ds
dec
nop
dec
cmpl
andb
int3
lods
dec
mov
shll
fildl
insl
cmp
iret
mov
inc
cmp
int
mov
loopne
xchg
or
scas
in
imull
pop
xchg
fbstp
mov
or
test
cmpsl
pop
dec
or
dec
adc
arpl
xor
sub
or
clc
mov
lock
inc
mull
mov
pusha
xor
out
mov
je
hlt
sarb
jbe
pop
push
test
cmp
clc
cmpsb
mov
xor
std
cli
push
xchg
adc
shlb
jle
mov
mov
mov
stos
inc
enter
xchg
inc
push
jns
roll
repnz
movsl
add
scas
jns
pop
pop
mov
lss
test
mov
push
and
and
in
in
sbb
push
mov
cmp
push
fwait
sbb
mov
in
aam
dec
push
add
testb
fdivrs
mov
or
repz
mov
rcrl
clc
mov
ss
arpl
fstpl
push
outsb
outsb
inc
enter
out
sub
out
sbb
in
in
stos
push
mov
fisubrs
sbb
adc
or
imul
ljmp
sbb
xor
loop
xor
push
std
adc
inc
sbb
mov
clc
push
aaa
sub
pop
inc
dec
ss
sbb
jg
add
in
inc
cld
cmpb
push
and
loope
rclb
addr16
aad
mov
cwtl
lahf
adc
and
repz
pop
movsl
cmpsb
cmpsl
lock
cmp
mov
loop
enter
jle
mov
cwtl
into
cmp
adc
maskmovq
notl
jne
imul
in
addl
jb
jns
outsl
or
sbb
sub
in
mov
std
pop
adc
and
lret
pop
and
sub
pop
pop
das
xorb
cli
fidivrl
jnp
or
xchg
pop
sbb
arpl
or
cld
cmp
hlt
cwtl
and
orb
mov
jb
mov
jl
or
subb
sbb
jecxz
hlt
jno
divl
out
inc
sbb
cld
clc
mov
xchg
fcmovnbe
mov
add
cmp
dec
add
dec
xchg
mov
mov
lret
jle
popa
mov
mov
mov
jnp
mov
repnz
sbb
cmc
lea
fcom
cmpsl
pusha
mov
mov
add
lret
fisubrs
loope
jmp
push
mov
cli
scas
jge
adc
fidivrs
nop
jl
scas
mov
and
xor
pop
out
std
std
sub
gs
cmpsb
jb
roll
dec
adc
ret
test
inc
xchg
add
daa
orl
xorl
cmp
jl
negl
jmp
fsubl
or
gs
xor
mov
stos
lock
add
bound
sub
negb
data16
mov
sbb
int3
cmc
stos
mov
cld
daa
mov
stos
lds
sub
sbb
stos
xor
mov
fwait
add
mov
mov
in
movsl
xchg
mov
adc
xor
dec
xchg
test
and
or
arpl
rcrl
les
fimuls
xor
xchg
out
das
fisubrs
sarb
rorl
idivl
dec
mov
push
xor
jne
mov
inc
sub
pop
or
mov
sbb
daa
jo
aaa
mov
jl
inc
mov
xor
xchg
insl
add
xchg
sarb
lock
sahf
imul
mov
inc
clc
es
je
aaa
dec
xchg
stos
inc
mov
and
jle
cmp
or
daa
mov
mov
daa
divl
pop
adc
mov
cltd
pop
mov
imul
ret
push
mov
xor
cmp
add
ljmp
dec
sti
mov
jge
push
sub
loope
push
and
cmp
arpl
outsb
fildll
insb
lods
subl
repnz
push
inc
lea
cmpsb
jno
fmul
mov
or
rol
mov
insl
and
jl
hlt
push
jne
or
jns
jge
mov
adc
jp
ret
xor
mov
xchg
mov
or
pop
or
push
je
or
repnz
push
into
cmp
sub
push
mov
fldcw
data16
push
dec
and
nop
nop
xchg
and
cmp
sahf
dec
dec
jge
loop
pop
push
out
mov
fcomps
push
imul
mov
adc
filds
jmp
pushf
mov
addb
ret
ret
incb
fwait
sahf
mov
fisttpll
cmp
pusha
pop
pop
mov
fs
decb
xchg
sub
lahf
ljmp
sub
jp
ds
out
scas
xor
mov
cmp
scas
testb
push
dec
lret
enter
out
jbe
into
mov
jg
stc
and
cmp
paddusb
pop
jno
mov
sahf
push
inc
aas
scas
jnp
lods
movsl
dec
jns
loopne
sub
push
mov
push
or
fstpl
das
or
cmpxchg
mov
clc
sub
ror
mov
xchg
mov
cld
inc
sbb
testl
int3
pushl
into
mov
negb
stos
insb
fwait
lret
dec
or
mov
dec
cmp
pop
push
pop
dec
mov
cmp
xchg
ror
aas
sbb
pushf
jbe
clc
jg
cmp
cmp
cli
mov
pop
pop
pop
and
fldt
mov
dec
ret
fildll
or
cld
mov
jle
fwait
jp
xchg
cltd
int3
pop
jge
cmp
and
inc
arpl
add
mov
ss
jmp
imul
or
add
mov
fnsave
sti
test
add
dec
cmc
jl
sub
cmpsb
and
aaa
push
sub
mov
mov
pop
xchg
cmpsb
faddl
loope
stos
xor
ljmp
int
dec
cmpb
int
outsb
or
mov
aad
jae
mov
pop
arpl
nop
cmpsl
jp
push
pusha
inc
xchg
popf
neg
fidivs
aas
jp
dec
sub
mov
sbb
test
clc
push
and
lret
mov
xor
dec
push
cmp
iret
jmp
shll
inc
inc
les
xchg
incb
pop
sub
jge
fwait
xor
xchg
sub
imul
out
cmp
and
adc
cmpsl
lahf
push
in
inc
sub
loope
hlt
cmpsb
jmp
hlt
shr
push
push
mov
fisttpl
dec
sub
mov
pop
rcrb
sti
push
sbb
loop
leave
mov
push
mov
in
fwait
dec
shlb
sub
and
inc
or
push
add
adc
das
lods
mov
sbb
fwait
dec
dec
mov
pop
ljmp
push
sbb
and
dec
cld
out
mov
and
lcall
aas
ja
movsl
xchg
les
xor
rcrl
xchg
shll
ret
leave
lahf
imul
bound
test
push
mov
adc
scas
jno
nop
sbb
cmpsb
fstp
sarl
fnstenv
sub
xchg
iret
push
inc
aad
dec
push
ljmp
ds
inc
inc
inc
test
xor
dec
add
xchg
add
cmpsl
into
pop
insb
roll
cmpsl
sarl
jle
sbb
jnp
push
test
mov
call
cmp
in
xor
and
xchg
dec
movsl
xlat
addl
arpl
inc
xchg
mov
sbbl
add
es
xchg
push
push
xchg
sub
adc
mov
jo
adc
cltd
neg
pop
leave
mov
sti
xchg
fldcw
out
enter
or
movsb
mov
inc
ret
testb
mov
mov
xchg
lcall
in
pop
mov
jecxz
je
fcmovu
jp
insl
push
xchg
dec
mov
pop
pop
popf
xor
aam
sbb
iret
mov
cs
les
lods
fldt
mov
push
dec
call
cld
inc
scas
jne
sub
mov
out
notb
stos
rcrl
xchg
or
add
mov
imul
ficompl
mov
pop
notb
ss
cmp
movsl
sub
stos
dec
cmp
cmpsl
std
test
inc
inc
aaa
jge
loopne
mov
adc
push
rorb
lods
xchg
stc
push
enter
call
xor
ret
jbe
ret
push
shll
pop
punpckhdq
fcom
divb
sbb
or
pop
stc
mov
or
decb
ret
and
pop
out
jecxz
dec
sbb
xor
add
and
push
push
loop
mov
insl
lods
in
pop
test
jae
fisubl
inc
push
mov
dec
adcl
je
lahf
sub
adc
lret
js
bound
lds
pop
dec
push
fdiv
lods
lret
out
insb
mov
inc
mov
aad
mov
cmpsl
xchg
dec
int3
jnp
jo
xor
mov
jg
pop
add
out
cld
fwait
xor
lahf
inc
add
adc
dec
pop
mov
dec
push
push
es
in
mov
mov
jmp
pop
out
pop
xchg
add
xchg
stos
mov
xchg
cmpsl
and
iret
loopne
lahf
push
mov
lock
es
lahf
or
ss
push
lret
or
pop
divb
les
addl
out
sub
xlat
mov
daa
sbb
xchg
push
pop
repnz
xchg
stc
shlb
sbb
jb
cli
jmp
pop
sahf
jbe
mov
dec
and
pop
cmp
daa
xchg
call
push
or
in
movsb
pop
mov
or
or
push
dec
ss
fstpt
loopne
addb
push
or
push
mov
sti
stos
push
insl
fdivp
inc
pushl
inc
sub
add
jge
arpl
xchg
sub
ljmp
test
dec
roll
in
dec
push
loopne
int3
sti
xchg
call
push
fs
pop
dec
lds
or
dec
push
mov
jecxz
pop
pop
push
sbb
popf
aaa
sub
mov
cmp
out
push
mov
or
outsb
lods
je
bound
xchg
pop
xchg
sub
ja
in
das
push
fistpl
cmp
jp
xchg
pop
ds
mov
cld
sub
dec
in
sbb
sub
mov
cmp
mov
out
rcll
gs
fmuls
dec
adc
push
xor
and
sub
mov
ss
sub
mov
cmp
pop
test
lods
fbstp
pushl
loop
cltd
into
aas
pop
iret
and
sub
mov
lea
xlat
push
and
je
pop
pop
rcll
inc
out
pop
outsb
add
stc
ja
enter
dec
inc
and
mov
or
sti
fsubrl
ljmp
testl
add
psubusb
in
xchg
or
push
cwtl
jns
mov
clc
repnz
adc
imul
push
mov
je
cmp
xchg
inc
dec
lods
dec
mov
sbb
xchg
and
adc
mov
dec
xchg
push
cmpsl
stc
cmc
xchg
js
push
add
cmp
popa
fdivrs
lret
and
insb
push
add
mov
pop
outsb
jno
aad
mov
pop
jge
orb
add
out
xorl
loope
sbb
aas
mov
push
filds
icebp
mov
cmp
in
inc
pushf
call
xor
in
jne
pop
mov
clc
xor
es
ja
push
out
int3
jg
sbb
int
push
and
push
dec
add
iret
mov
shr
enter
fstpl
frstor
fdivrs
jbe
pop
popa
adc
cli
jg
jp
sti
or
add
push
add
outsb
dec
pop
pop
mov
dec
xor
and
cmp
lods
lds
xchg
bound
pop
call
push
jno
mov
xor
int
sub
cmp
lods
adc
outsb
cld
stos
dec
inc
dec
jp
vfrczss
push
inc
rcr
and
jg
cmp
fwait
daa
and
xor
daa
or
imul
and
icebp
imul
jl
dec
adc
push
scas
notl
mov
jp
pop
jne
in
lcall
sbb
xor
jl
out
lods
mov
cmc
pop
mov
out
sti
je
inc
and
jo
popa
mov
movsl
mov
jbe
xchg
mov
aad
enter
pop
push
les
mov
xchg
sub
leave
test
mov
sub
xor
xor
lret
rorl
jo
cld
mov
sub
cmp
push
cld
mov
inc
scas
xor
rolb
xchg
and
dec
arpl
scas
nop
lea
rorl
imul
jl
test
es
dec
arpl
add
cmpsl
mul
push
fisttpll
es
mov
inc
pop
mov
lcall
mov
lock
fistps
fs
mov
push
mov
mov
sub
insb
fimull
loopne
sbb
and
or
sahf
js
mov
pop
scas
sub
mov
jne
rorb
dec
dec
arpl
int3
dec
jle
fwait
mov
mov
nop
movsl
mov
push
mov
mov
movsb
mov
dec
adc
test
out
test
mov
negb
xchg
push
push
loopne
cmpsl
scas
orl
pop
push
mov
mov
sub
xchg
adc
and
xor
stc
lock
sub
or
cmpsb
xor
xchg
push
leave
add
ljmp
popf
mov
mov
jmp
outsb
lds
push
push
test
jae
push
jecxz
lret
andnps
mov
xor
das
pop
pusha
jno
sub
insb
cmc
sub
div
and
cld
push
xchg
rclb
mov
or
add
je
cmpsb
sti
cmc
lahf
jmp
dec
mov
dec
push
dec
add
fcmovb
xchg
ja
loop
popl
movsb
or
inc
dec
call
jg
incl
or
movsl
roll
das
pop
xlat
push
mov
aaa
lcall
cltd
movsl
fs
ret
or
subl
pop
pop
test
dec
sbb
xchg
int
loopne
je
dec
negb
xchg
shrl
push
push
cmp
mov
mov
sti
outsb
pop
rcrb
mov
or
pop
shr
leave
sahf
cmp
in
cmp
inc
cld
sbb
lock
fadds
fmulp
sub
gs
sub
and
jnp
push
cmp
sahf
daa
out
pop
or
popf
scas
mov
xchg
mov
cmpb
out
mov
cmpsl
sub
adc
adc
lds
jno
and
test
aam
add
aaa
into
pop
push
fstpt
rol
mov
shrl
push
outsl
cmp
dec
or
push
icebp
mov
cmc
xor
test
inc
sub
out
cmp
pop
test
mov
stos
cmp
mov
xchg
cmp
in
pop
jmp
mov
xchg
xor
xor
sub
or
xchg
fidivs
jns
cmp
xchg
std
imul
shll
inc
pusha
into
push
aad
shlb
mov
push
xchg
xchg
push
pop
cmpsb
and
cli
stos
outsb
sbbl
cs
fsubp
jle
push
vmovupd
push
lods
sub
mov
mov
cmp
dec
outsb
cmp
pusha
add
dec
add
xchg
divl
js
jb
sub
jge
insl
fisttps
repnz
push
jo
mov
test
sbb
pop
out
ja
into
clc
mov
or
pop
lock
out
adc
sub
xchg
rclb
xchg
mov
jmp
pop
lock
loopne
insl
inc
repnz
out
xchg
add
aas
mov
inc
dec
repz
cmpl
mov
pop
push
adc
lahf
es
roll
lret
leave
shlb
adc
shlb
addr16
fcompl
test
sub
fsts
mov
sbb
sub
leave
lods
and
jg
xor
dec
in
jno
mov
dec
fildl
fbstp
mov
imull
call
jmp
adc
pop
fmuls
or
popf
inc
inc
xor
fisubs
hlt
aam
xor
mov
xor
or
imul
push
cwtl
les
xchg
jmp
ja
shll
ja
mov
mov
push
lock
test
psubq
sahf
dec
inc
das
sbbl
or
pop
insl
add
sbb
repnz
mov
jo
lods
or
sahf
xchg
mov
xchg
in
or
sahf
pop
xor
push
cmpsl
movsb
cltd
ds
pop
inc
and
inc
mov
and
xchg
sbb
sahf
cmp
pop
mov
adc
in
icebp
fstps
stos
mov
jmp
mov
es
lods
push
faddl
cmp
cmp
popa
jle
xor
das
sbbl
lahf
push
fdivrs
mov
in
bnd
mov
and
inc
loopne
pop
mov
jae
ret
shlb
adc
cmp
jo
outsl
mov
dec
mov
cmp
adc
les
mov
lret
mov
push
out
cmp
cmp
jns
stc
outsl
daa
cmp
out
lahf
dec
lods
dec
mov
sbb
lret
aad
hlt
mov
adc
fnstcw
jg
js
nop
mov
xchg
mov
dec
inc
cmp
in
sti
addr16
outsl
xor
mov
lcall
add
imul
sbb
dec
dec
mov
flds
sub
jecxz
jo
in
test
xor
insl
cmp
add
xchg
ficoms
jge
and
fldl
je
mov
mov
push
cmc
push
aam
and
push
cmp
mov
sti
int
push
cs
mov
popf
test
push
jb
mov
xor
sbb
ja
mov
mov
sbb
sub
int
aaa
mov
push
fbld
cwtl
aas
jne
cmc
dec
xchg
cmp
mov
lds
mov
mov
movsl
xchg
shlb
clc
fldenv
sub
xor
and
mov
mov
sbb
mov
popl
jge
in
xchg
xor
adc
mov
stos
bound
fwait
loop
sbbb
lods
cmc
idivb
add
ret
js
clc
fnstcw
sbb
pop
mov
test
mov
xchg
xchg
adc
xorb
jae
das
jae
lea
pop
mov
lahf
enter
fwait
les
sub
int
out
rolb
sub
out
push
jb
push
xor
test
or
sub
and
ds
inc
cmpsl
push
mov
shl
je
loopne
nop
xchg
inc
in
jno
fimuls
mov
jo
cmp
sbb
iret
fistps
jns
int
icebp
cmovns
daa
sbb
jecxz
repnz
and
adc
pop
sbb
shrl
cld
sbb
mov
inc
push
stc
add
stos
clc
mov
sbb
xchg
add
and
mov
adc
dec
xor
int
sbb
jecxz
mov
hlt
push
lock
inc
add
lods
test
lods
inc
cmp
int3
lock
xchg
jg
inc
inc
dec
or
mov
add
sub
pop
sub
insb
mov
dec
imul
in
and
enter
fstps
fcompl
mov
cltd
negl
mov
or
or
sarb
aaa
rcrl
rclb
mov
jae
mov
nop
in
push
push
jmp
sbb
aaa
lds
adc
pop
jle
fcoms
lods
xor
push
test
pop
mov
sub
fldl
or
jmp
mov
in
aam
ret
aaa
mov
xchg
out
sub
sbb
jns
repnz
mov
cli
xchg
popa
add
cmp
pop
popa
clc
inc
mov
mov
xlat
pusha
or
sub
push
mov
les
lds
add
pusha
adc
aam
push
push
outsl
out
xor
rcll
adc
mov
jp
mov
jno
jp
jp
fs
mov
in
ja
inc
aas
popf
les
jne
bound
xor
in
pop
xor
aam
add
mov
adc
into
cli
lds
lods
lods
in
jmp
cmp
xchg
jbe
icebp
mov
pop
adc
cli
cli
sbb
sahf
push
test
xor
mov
xchg
pusha
jle
fsubp
mov
arpl
out
pop
cmp
imul
mov
das
clc
bound
mov
sub
aam
push
jb
inc
pop
xchg
mov
xlat
cli
popa
and
andl
popf
outsb
mov
mov
insb
adcb
stos
ss
sahf
xor
inc
push
test
movsb
int
outsl
insl
scas
sub
movsb
fsubrs
dec
test
xchg
popa
xor
stos
inc
ret
sub
and
inc
loop
xlat
aam
dec
jmp
sub
mov
shll
pop
pop
gs
and
outsl
xchg
lret
mov
pop
or
pop
add
ror
lea
iret
or
cltd
shlb
pushf
sub
adc
push
add
xchg
cwtl
mov
and
test
sbb
das
fdiv
sub
ja
fisttpll
pop
les
gs
push
push
cld
sub
push
pop
sbb
roll
notl
adc
mov
jne
jnp
mull
mov
int3
sti
lea
sub
dec
adc
aaa
mov
sbb
xor
not
mov
cmp
and
mov
pop
movl
push
loope
and
xor
mov
pop
push
push
cmpsb
pop
jecxz
sub
cmp
jle
lret
or
adc
sub
sub
lods
inc
mov
not
in
mov
xor
sub
enter
fcoms
test
xchg
dec
ret
cli
and
mov
cmp
pusha
test
out
mov
cmp
lret
adc
push
mov
push
add
lea
push
xor
repnz
pop
push
jb
jae
std
vpsrlq
and
cltd
call
popa
fadds
sbb
jg
or
daa
push
cmpsl
and
push
imul
cmp
movsb
inc
not
mov
lea
mulb
lock
pop
pop
inc
pop
add
cmp
fldt
cmp
pop
fistpl
sub
daa
mov
cs
out
loopne
and
rcrl
lret
imul
cmp
jae
adc
ret
lds
movsl
or
inc
add
dec
lret
icebp
shrl
dec
rcrb
xor
test
push
add
out
jo
sbb
push
adc
mov
lock
lods
and
ss
imul
push
rclb
mov
test
add
jo,pn
movsb
push
dec
cmpsb
leave
sbb
test
pop
xchg
jae
je
fidivrs
mov
ss
fdivl
fidivrs
dec
nop
sbb
push
cli
sub
pop
jnp
lea
mov
mov
jl
repnz
ficoms
push
mov
xchg
mov
dec
movsb
mov
je
insb
xor
aam
mov
andl
mov
test
fxch
and
xlat
xor
scas
mov
adc
negb
push
xor
mov
inc
pushf
clc
fsubs
outsb
lret
out
mov
add
pop
cmp
aas
fs
add
fiadds
adc
test
mov
fwait
mov
iret
xchg
sbb
sbb
jge
inc
andb
push
pop
dec
xchg
pusha
and
repnz
lods
mov
sbb
sbb
jbe
outsb
xor
aam
fnstcw
addl
mov
lock
pop
xor
fs
in
in
lds
fcoms
push
jb
mov
inc
popf
xchg
xchg
pop
mov
push
mov
adc
cmp
inc
push
xchg
cmp
inc
ljmp
stc
xchg
inc
lret
push
dec
cmpsb
jo
out
out
rsm
jl
stc
into
and
mov
fldt
out
inc
cmp
repz
pop
xchg
xchg
pop
cmc
jg
push
sbb
pop
aas
std
cmpl
cwtl
mov
lock
pop
lret
inc
hlt
push
mov
sar
mov
dec
jmp
mov
xchg
add
mov
xor
lods
imulb
popa
add
jnp
lods
addl
mov
push
pop
add
nop
adc
mov
inc
mov
dec
stos
jae
cmp
xlat
jp
and
xchg
xchg
push
bound
push
inc
movsb
mov
pop
pop
inc
and
addl
xor
in
xor
mov
xor
push
mov
cmp
sbb
xor
sbb
mov
mov
daa
in
dec
mov
jmp
outsl
out
pop
sti
push
jnp
rcl
cmp
loopne
mov
mov
or
or
pop
lret
cmp
xlat
movsl
in
xor
xchg
decb
mov
ja
push
pop
mov
xor
xchg
add
insb
imul
iret
in
ljmp
out
lods
xchg
mov
adc
mov
fs
pop
fnstsw
gs
push
mov
cmp
add
pop
lds
xchg
add
pop
gs
call
fs
ljmp
mov
out
jecxz
stc
jmp
in
scas
inc
movsl
push
das
push
out
and
push
push
insl
sub
sub
and
imul
stos
test
out
push
jle
icebp
setne
adc
sbb
mulb
mov
add
cltd
push
xor
mov
data16
sti
adc
cmp
pop
lcall
jne
outsl
dec
mov
sbb
repnz
push
xor
sub
cmpsb
ret
jbe
test
dec
xchg
mov
cmp
cld
daa
adc
pop
xor
adc
xchg
dec
xor
leave
mov
fstpt
rcrl
int3
lahf
cmp
add
jne
mov
add
cmpsb
mov
inc
jb
mov
clc
shrl
mov
sti
add
add
inc
sbb
adc
out
lock
iret
call
cltd
or
test
push
hlt
nop
inc
pop
cmp
enter
or
mov
shl
jae
stos
adc
and
and
jmp
mov
and
inc
insl
sbb
std
sub
adc
or
icebp
gs
inc
mov
jmp
add
dec
roll
pop
out
sahf
adc
repz
outsb
and
mov
movsl
arpl
in
adc
rcrb
cmp
cld
and
sub
fadds
stos
xor
call
add
mov
lock
lcall
cmpsb
test
mov
dec
test
and
jbe
fsubs
out
pop
out
cmp
mulb
pop
fcomps
jmp
shll
mov
fstpt
lcall
mov
sub
daa
stc
jmp
inc
pusha
sbb
dec
mov
addr16
mov
inc
mov
fsubr
insb
lea
fildl
pop
cmpsb
mov
push
stos
dec
dec
sbb
repnz
adc
mov
dec
and
xchg
aam
outsb
mov
iret
or
mov
push
cltd
addb
sbb
inc
pop
mov
jmp
lcall
or
mov
cltd
dec
repnz
mov
stos
int3
lock
or
sub
cmp
imul
inc
inc
mov
adc
adc
mov
lret
cli
mov
add
ficomps
aam
push
outsl
mov
lret
decb
loope
loope
xor
js
xrelease
pop
and
dec
push
push
outsl
lea
lcall
dec
gs
or
in
mov
or
pop
jecxz
aad
jecxz
dec
stc
lods
lret
mov
sbb
out
jge
ficompl
movsb
in
and
stos
fsubrs
cmp
mov
scas
mov
pop
or
rolb
js
out
lahf
mov
pop
outsb
sbb
mov
fbstp
lret
mov
mov
js
rclb
lods
sbb
dec
add
mov
bound
dec
test
adc
lret
fidivrs
rol
cs
loopne
les
loope
add
lahf
movsb
mov
jg
sahf
or
daa
pop
dec
lahf
push
out
xchg
mov
push
enter
test
pop
mov
and
push
jmp
inc
lcall
sahf
xchg
xchg
pushf
mov
mov
gs
les
pop
jae
sbbl
testl
std
xor
stos
mov
dec
fsub
arpl
sbb
mov
cmpsb
ja
jbe
pusha
jb
int
idivl
xor
shll
push
daa
push
cmpsl
pop
shll
cmp
daa
fsubr
cmp
mov
lock
jae
and
jge
inc
xchg
ja
sub
mov
mov
push
in
cltd
clc
pop
scas
fcmovb
test
es
data16
jne
and
pop
ja
and
arpl
sbb
adc
mov
lods
sub
or
xchg
inc
and
pop
xlat
lods
pusha
adc
pop
mov
call
shl
mov
mov
movsb
adc
mov
or
js
fxch
push
mov
inc
cmc
adc
into
mov
lcall
mov
enter
mov
rdtsc
jne
test
xchg
test
test
sbb
stos
dec
mov
xchg
aam
mov
dec
xorl
mov
movsl
push
repz
jecxz
inc
mov
in
xlat
test
sbb
cmpsb
adc
bound
loop
mov
or
mov
sbb
in
adc
sub
mov
mov
shlb
es
jns
imul
mov
imul
lock
lea
decl
fwait
popa
jecxz
movsl
aaa
xchg
dec
mov
sti
add
ds
cmp
out
mov
cmp
repnz
cwtl
outsl
mov
pop
dec
pop
adc
call
fisubrl
add
dec
bound
lret
das
pop
jl
jmp
sbb
inc
inc
out
out
int
xchg
xlat
push
or
xlat
lcall
loop
popf
inc
dec
data16
fnstsw
arpl
loop
pop
cmp
shll
push
cmp
add
xorb
push
cmp
sbb
cmpsl
mov
in
cltd
call
xor
and
enter
sarb
call
fiadds
ret
push
std
add
mov
rcrl
xor
jecxz,pn
aaa
out
jle
imul
inc
add
gs
push
xchg
inc
repz
sub
icebp
or
push
push
and
test
adc
imul
xchg
nop
cltd
pop
ja
jae
in
insb
sbb
or
mov
cli
sbb
loop
test
popf
faddp
xchg
out
int
ret
outsb
push
cmp
push
xor
xchg
mov
push
sahf
arpl
and
cli
push
fwait
out
out
loopne
outsb
fdivl
stos
mov
addr16
or
ds
mov
dec
fdivrs
pop
cmpsb
lds
in
and
jl
call
stc
push
pop
sti
jb
fstpt
mov
or
popf
or
inc
stos
jecxz
or
xchg
xchg
insl
xchg
in
lock
int
repnz
pop
adc
mov
dec
rcrb
and
push
in
inc
dec
stos
stc
sub
dec
adcb
idivb
cmp
movsb
adc
jbe
adc
out
insb
pop
ret
mov
fiaddl
xchg
cmpsl
mulb
cmpsl
insl
int
mov
insb
aam
dec
dec
xchg
mov
dec
mov
repz
push
pop
daa
sarb
push
pop
fsubr
enter
stc
inc
pop
fmull
inc
ret
ret
inc
mov
cmpsl
ja
push
out
js
adc
add
hlt
jge
mov
fstps
mov
sub
cld
jnp
movsb
lods
inc
mov
pop
lea
or
adc
shr
pop
addr16
or
push
mov
movsl
rorb
das
fsubrl
lret
xchg
pop
cmp
call
sub
ss
dec
and
mull
pop
sbb
test
mov
insl
mov
lahf
mov
mov
fsubrl
cli
fistps
call
in
aaa
cli
ret
cwtl
scas
mov
lods
pop
xor
dec
mov
out
jp
mov
push
aas
out
fidivl
inc
lret
sub
fiadds
scas
jmp
xor
cmp
stos
imul
jne
inc
loopne
mov
mov
dec
jg
mov
mov
sti
test
jl
add
rol
dec
test
pop
popf
push
adc
cmp
mov
iret
mov
test
xor
rorb
push
pop
loopne
dec
movsl
and
data16
dec
lcall
or
fisttpl
mov
test
jp
mov
cli
pop
jmp
pop
pop
div
jne
stos
mov
lds
loope
test
out
scas
mov
xchg
adc
iret
mov
insl
lret
add
shlb
insl
and
xor
xchg
mov
or
mov
repz
in
cmpb
sbb
popa
imul
jmp
fildl
mov
pop
dec
sbb
insl
and
inc
and
inc
gs
mov
ffreep
or
fwait
mov
cmp
push
sti
and
xor
js
dec
and
jg
mov
xchg
ja
enter
pop
xchg
es
push
inc
lods
or
jae
fistpl
jns
mov
add
imul
push
push
sti
cli
lret
push
cmp
mov
push
es
mov
push
test
and
xor
outsl
mov
xor
in
cs
sbb
sahf
xchg
adc
call
add
pushf
imul
scas
push
add
cmp
jb
cmpsl
push
cmpsl
leave
imul
push
mov
cmp
test
arpl
jbe
daa
xchg
mov
cld
and
pop
aad
xor
mov
in
sbb
sbb
push
es
mov
push
xchg
pop
mov
jne
cmp
sbb
jnp
jp
bnd
or
push
mov
sbb
js
jo
sub
jbe
in
out
pop
popf
mov
cmp
in
push
mov
mov
add
xchg
and
hlt
sti
pop
inc
xor
jmp
sub
lcall
jl
jno
fadds
push
or
mov
jecxz
jne
add
addr16
ja
arpl
je
adcb
add
fimuls
enter
fistl
or
mov
add
not
out
out
adc
stos
push
popa
je
out
test
ror
and
dec
mov
imul
es
jge
jmp
ds
adc
andl
test
imul
push
xchg
sarb
mov
cld
call
xchg
jg
inc
aas
cwtl
lcall
or
cmp
push
xlat
movsb
jne
test
lret
or
imul
std
test
inc
sbb
pop
mov
out
mov
mov
sbb
mov
lcall
dec
stos
push
pop
movsb
xchg
minps
pop
jns
mov
jne
mov
test
mov
lret
lea
stos
and
test
pop
fucomi
xchg
cmp
pop
in
addr16
push
lea
mov
mov
xchg
push
fstps
jecxz
movsb
and
outsl
incb
out
pop
sub
xlat
mov
shll
xor
jle
call
xor
xor
pusha
movsb
sbb
dec
dec
jns
outsl
push
sbb
jecxz
pop
adc
cmp
arpl
mov
cltd
sub
cltd
jo
cld
jge
mov
cld
mov
cmc
jae
mov
fldcw
enter
cmp
push
and
push
cmc
sbbb
push
sub
xor
cmpl
in
insb
scas
cmp
dec
stos
sub
fs
mov
push
bnd
jg
in
daa
lds
das
sbb
inc
std
lea
std
add
add
out
stos
sub
mul
mov
mov
das
enter
int3
xchg
cs
sete
push
imul
pop
sbb
push
aad
xlat
xor
in
cmp
dec
and
cmp
adc
lret
loop
stos
jnp
aam
mov
pusha
sahf
or
xor
and
jp
pop
ret
xchg
hlt
fldt
pushf
add
adc
into
cwtl
cmp
in
or
push
inc
and
repz
adc
int3
xchg
or
es
mov
or
inc
ljmp
ret
jg
and
lret
stos
flds
scas
cld
mov
xor
imul
adc
cmp
inc
push
mov
mov
cli
push
inc
mov
arpl
pop
lods
push
lods
sbb
addr16
ror
push
push
fisttpl
es
sub
inc
mov
shlb
pop
inc
mov
jo
add
or
mov
ja
xor
jg
aas
push
mov
xorl
test
xor
ret
push
pop
inc
push
jp
push
inc
dec
add
mov
or
test
mov
mov
mov
lds
inc
add
mov
out
xor
aaa
ds
fsubl
add
xchg
fcomps
xor
adcl
les
insl
out
outsl
daa
sbb
sbb
je
pop
test
hlt
dec
negl
stc
adc
cwtl
or
sarl
sbb
cli
cmp
mov
lret
cmp
mov
mov
xchg
test
iret
jae
int3
adc
cli
xchg
mov
iret
dec
jnp
out
sahf
jg
lods
decl
repz
pop
and
add
inc
mov
mov
outsb
pop
jnp
xchg
and
jp
repnz
mov
mov
inc
pop
pusha
cmp
scas
das
rolb
xor
inc
and
mov
das
enter
dec
xchg
cmp
or
and
sbb
clc
ret
mov
fstpl
and
icebp
and
sarl
push
rclb
xor
push
in
push
orl
cmpsb
mov
ret
jp
enter
pusha
adc
xchg
es
aad
xor
hlt
bound
dec
pop
mov
xor
cmp
lret
xchg
fisubrs
out
iret
jge
sbb
xor
mov
push
push
fsubs
adc
xorl
rolw
pusha
std
push
adc
nop
loopne
mov
add
push
and
fidivrs
daa
jno
fldl
shr
push
xchg
mov
jge
cmc
jp
call
les
jno
es
ljmp
sub
inc
mov
cs
xor
aam
je
xor
in
add
inc
cmp
pop
mov
stos
mov
jns
mov
add
xorl
cmpsl
dec
pop
das
outsb
ds
cmp
outsb
push
push
sbb
or
icebp
in
mov
pop
scas
xchg
jge
push
stos
mov
out
divb
push
sub
push
cmpsb
enter
shlb
mov
xor
push
adc
mov
cmp
or
push
insl
pop
fwait
or
loope
outsl
aaa
mov
pop
adc
add
xor
sbbb
mov
loop
adc
inc
loope
fistpl
jbe
cmpsb
mov
mov
sbb
shrb
popa
out
mov
jge
sbb
or
loop
sub
test
imul
add
lret
mov
jnp
or
adc
sub
roll
pop
lahf
and
or
jmp
pop
dec
pusha
sub
cmp
fs
lcall
mov
test
pop
push
pop
mov
add
sub
push
mov
testl
loop
jb
testb
into
data16
dec
jg
movsb
pop
mov
mov
mov
ljmp
aad
faddp
das
cmp
jecxz
xchg
std
cli
fnstcw
movsl
rcrl
cmc
and
aaa
pusha
arpl
xor
and
cmp
pushf
cmp
test
push
adc
out
pop
dec
push
sbb
xchg
out
mov
inc
or
lods
sub
xchg
inc
into
das
cmp
dec
fstps
movb
pop
negb
mov
or
add
xchg
dec
sbb
push
add
cld
in
ljmp
xlat
in
loop
leave
je
repz
cmpsl
adc
lds
mov
cmp
dec
inc
mov
lret
in
jne
and
or
int
cs
imul
inc
ret
and
lret
popf
dec
daa
sub
pop
cmp
push
sbb
sbbl
sbb
mov
loope
inc
xchg
cmp
mov
jge
cmp
in
pop
sbb
shll
xor
imul
sbb
fst
das
sti
xor
ljmp
cwtl
mov
enter
xchg
or
sarl
lret
adc
inc
xor
mov
jbe
in
sbbb
sub
or
scas
xor
leave
into
shlb
dec
sbb
lods
pop
jp
mov
sbb
and
pop
xchg
cmp
rolb
sti
sti
shrl
dec
inc
fildl
cmp
jne
add
les
xor
scas
lods
mov
push
leave
jl
outsb
mov
adc
mov
adc
push
push
dec
mov
pushl
test
leave
stc
repz
xor
or
stos
pop
pop
cmc
stc
xchg
mov
inc
icebp
mov
leave
nop
mov
adc
jnp
xchg
add
push
xor
je
or
pop
mov
and
inc
sub
mov
push
xchg
sar
cmp
cwtl
sahf
imul
push
scas
mov
xchg
pop
or
nop
repnz
fmull
sbbl
in
xchg
xor
xchg
cmp
ret
or
jae
xlat
sbb
loope
loope
or
pop
shlb
cs
inc
or
inc
jmp
popf
sub
jo
cwtl
pop
mov
xchg
cwtl
aas
jns
cmpb
push
adc
dec
mov
fstpt
cmp
daa
mov
je
arpl
in
mov
loope
jne
in
fs
mov
dec
scas
aad
cs
and
test
jbe
xchg
lods
sub
xchg
mov
jmp
xor
imul
sar
sarb
xor
nop
lods
mov
int
adc
dec
clc
dec
dec
dec
mov
xor
push
pop
add
pop
add
jae
push
inc
and
or
subl
scas
xchg
cmp
jbe
cmc
jp
cmp
mov
xchg
adc
pop
push
fmuls
mov
rolb
stos
mov
loop
data16
lock
gs
and
cmp
jp
popf
cmp
mov
jmp
sbb
frstpm(287
jno
add
into
fcoms
cmp
mov
sbb
cwtl
push
leave
mov
mov
daa
outsl
sub
out
cs
jle
sbb
setns
cmpsb
mov
pop
xchg
scas
sub
cmpsl
cwtl
je
aaa
cli
shrb
pop
test
or
std
dec
dec
inc
int3
loop
pop
dec
pop
sbb
and
fstpt
xchg
or
inc
pop
or
sbb
inc
dec
shl
into
sub
dec
lret
dec
iret
dec
xchg
fdivl
scas
cmp
inc
sbb
pop
stc
clc
push
mov
clc
test
pop
xchg
cmp
ror
add
xor
and
notb
stc
fnstenv
sbb
into
cs
loope
and
cmpsb
leave
dec
ret
ret
xchg
shll
pop
rclb
adc
das
or
pop
test
insb
call
enter
dec
ja
shr
xorl
cmp
arpl
es
adc
push
and
cmc
adc
rol
sbb
sub
sub
in
rcrb
icebp
lods
fisttpll
incl
cmp
xchg
jmp
imull
aaa
dec
iret
dec
int
dec
sarb
mov
push
push
loop
call
cltd
faddl
jnp
add
xchg
pop
arpl
outsl
cmp
icebp
and
mov
out
jbe
ljmp
and
mov
jne
lcall
lret
addr16
fcmovnu
pop
inc
mov
adc
jno
and
and
in
ss
into
jecxz
ret
dec
orl
mov
push
jecxz,pn
add
push
hlt
and
stos
cmp
cmpsb
push
aas
mov
pushf
inc
push
leave
addr16
movsb
imul
cwtl
imul
test
js
jne
pop
sbb
jbe
and
test
iret
xor
inc
in
mov
adc
pop
pop
or
aas
push
xorb
xlat
jae
lock
mov
xor
ja
or
stc
cmp
cltd
sub
dec
cmpsb
popa
pop
fwait
rcll
xchg
cli
lret
jecxz
xchg
mov
push
test
xchg
mov
scas
push
pop
inc
ljmp
jno
dec
mov
fsts
iret
add
cwtl
loop
ficoml
xor
jnp
clc
xlat
push
pop
dec
mov
and
bound
decl
sbb
addr16
pop
jae
mov
movsl
scas
lds
pop
xor
test
dec
loope
jecxz
jle
cltd
test
fmul
cmpb
and
loopne
add
inc
loop
mov
cltd
push
shl
ret
ret
mov
sub
adc
cli
test
inc
jge
or
mov
or
subl
arpl
leave
mull
or
sarb
jecxz
je
lds
setno
fidivl
mov
test
adc
adc
leave
fcoml
mov
scas
jg
mov
pop
leave
sub
call
mov
call
ljmp
insl
rcll
lea
mov
mov
pop
das
sahf
push
push
loop
xor
dec
dec
cmp
or
and
push
pop
enter
pop
sar
pop
pusha
jmp
add
or
or
xor
in
pop
popa
mov
sub
push
xchg
inc
scas
or
fisubs
arpl
insl
sbb
inc
shrl
lret
test
fsubrl
ret
mov
fmull
mov
lock
aad
insb
mov
inc
jnp
test
andl
std
imul
cmc
push
fistpll
pop
mov
and
cltd
fdivp
and
jp
sbb
xchg
jmp
jp
mov
jb
sahf
cmp
jnp
frstor
and
iret
out
mov
push
ret
mov
fcomps
cli
lods
push
sbb
scas
pop
sub
fcmove
cmpl
sahf
pop
push
add
xchg
aad
adc
or
push
rorb
pop
mov
imul
adc
out
pop
mov
inc
adc
out
vmovsd
movsb
jns
loope
shrb
ret
add
add
xor
mov
ja
mov
sar
xchg
sbb
sti
pop
pop
adc
fwait
imul
rol
lahf
aam
add
nop
add
inc
adc
jge
pop
mov
or
es
cmpsb
fs
sub
xor
and
pop
out
outsl
ds
aad
repz
jb
fsincos
push
out
ds
mov
pop
pop
jbe
pop
inc
and
add
dec
out
adc
cmp
push
mov
test
inc
in
leave
dec
or
clc
or
cmpsb
cmp
lea
push
sahf
arpl
and
ljmp
xchg
and
push
inc
push
sahf
mov
pop
shrb
in
xchg
mov
outsl
jl
scas
outsl
inc
pop
stos
or
jnp
testl
mov
xor
repz
loopne
xchg
cmp
xor
inc
mov
daa
stos
call
inc
mov
sti
sub
sbb
inc
loop
cmpsb
stos
enter
jo
jmp
lret
aas
jge
out
mov
dec
loopne
jns
idivl
filds
mov
push
arpl
aad
std
push
out
daa
lea
negl
in
loopne
xchg
sub
fldenv
adc
inc
daa
lcall
mov
aaa
stos
xchg
sub
and
lret
mov
jl
iret
and
add
daa
lret
nop
mov
das
pop
jbe
jbe
ljmp
push
or
xchg
and
out
ret
fsts
lds
cmpsb
push
adc
cltd
pop
jae
or
shll
and
mov
fdivl
jo
loopne
jnp
rolb
imul
xor
and
sub
push
adc
adc
ljmp
ja
mov
cmpsl
into
sub
pop
call
xor
packuswb
adc
das
in
addr16
testl
lods
cmp
xchg
popf
or
inc
jmp
lods
push
out
stos
dec
scas
cmp
movsl
shrl
xchg
mov
imul
inc
mov
jae
imul
fcmovnbe
xchg
shlb
inc
mov
add
ds
fwait
mov
cmpsl
xchg
jbe
push
pushfw
fs
mov
push
aad
push
in
fwait
iret
enter
es
push
jmp
in
dec
clc
xorl
stc
xchg
jmp
test
mov
cmc
addl
outsl
xchg
push
pop
add
fdivp
push
cmp
pop
movsb
pop
gs
clc
rol
push
fdiv
in
push
dec
mov
inc
fidivrs
test
ret
sub
test
int3
pop
jecxz
popf
das
cs
xor
push
xchg
jmp
sub
in
pop
inc
cmpsl
in
pop
lahf
into
sbb
sub
dec
popa
mov
mov
xor
cltd
xlat
stos
jle
decb
cmpsl
mov
loopne
bound
xchg
loope
cli
gs
ss
inc
fwait
add
pop
dec
jp
sbb
rolb
cmp
push
jecxz
in
adc
mov
sbbb
aad
cltd
jnp
cld
test
insl
or
adc
dec
rorb
ja
cmc
sahf
les
dec
xor
test
loope
sub
adc
insb
arpl
dec
add
aam
orb
loopne
popaw
fcmovb
scas
mov
lods
loope
in
insb
popl
lds
in
es
xchg
leave
ficoml
daa
cltd
cmp
pop
add
sbb
mov
sbb
jbe
inc
es
in
loopne
pop
stc
hlt
xchg
dec
mov
andb
pop
jbe
loopne
and
in
and
jle
jns
xchg
adc
out
in
cmovbe
adc
xor
sbbl
addr16
inc
int
test
or
aaa
negb
or
push
out
enter
int3
fs
call
gs
call
aad
push
dec
sarb
mov
mov
fwait
rorl
mov
pop
inc
inc
fldenv
fiadds
inc
or
cld
cmp
std
repnz
xchg
and
add
add
lret
in
or
or
or
push
outsl
int3
pop
testb
test
arpl
or
ret
jae
dec
repz
stos
pop
pop
mov
pop
mov
sbb
push
jmp
jge
pop
add
jae
mov
nop
ss
xchg
in
popf
repnz
or
push
jmp
jo
push
in
icebp
sar
jbe
or
ds
sarb
xor
jb
jle
daa
jbe
mov
xorb
mov
adc
pop
out
ljmp
add
mov
addr16
add
jmp
xor
sbb
sbb
iret
mov
jge
mov
cmp
adc
cmpsb
test
and
push
pop
fwait
xlat
clc
cmp
sbb
jl
loope
orb
xchg
mov
je
lahf
sbb
sahf
adc
mov
adc
mov
fiaddl
je
xchg
shlb
test
or
jp,pt
rcr
xchg
test
mov
fisubrl
rorl
mov
fucomip
dec
or
shlb
bound
cmp
data16
mov
mov
rorl
int
in
sbb
inc
mov
jae
inc
xchg
mov
out
aaa
push
in
pop
or
loop
push
loope
nop
fs
test
stos
les
bound
xchg
test
addr16
call
enter
out
stos
dec
dec
inc
dec
scas
icebp
and
push
sti
or
dec
jmp
mov
cli
mov
movsb
out
pop
mov
icebp
add
inc
je
out
lret
popa
outsl
jle
jmp
mov
inc
rcl
dec
stos
mov
dec
push
mov
rcrb
lods
push
incb
icebp
sbb
notl
mov
test
repz
cli
test
jne
addb
leave
xchg
jle
push
or
pop
lret
add
sub
frstor
push
fdivs
int3
aam
movsl
jne
mov
dec
sbb
xchg
rcrb
jl
inc
cmp
xor
push
pop
into
push
loope
insb
xchg
in
adc
subb
unpcklps
sub
adc
pop
sbb
in
stc
push
pop
mov
jns
cwtl
xchg
stos
sbb
movsb
xchg
pop
rclb
push
adc
adc
out
aaa
ljmp
or
pop
in
jae
testb
jo
mov
mov
push
ss
call
or
cmpsb
and
outsb
and
or
pop
push
mov
ror
or
arpl
rcl
jge
lret
cli
pop
push
push
add
sub
adc
cmp
add
daa
xchg
mov
inc
mov
dec
push
sub
cmp
and
test
mov
hlt
hlt
rcll
lods
inc
sub
inc
push
sbb
test
enter
repz
daa
adc
mov
mov
xchg
iret
mov
sub
adcl
inc
addb
mov
mov
push
loop
mov
pop
outsl
shrb
sahf
js
sbb
push
mov
pop
test
xchg
fisubrl
ja
adc
out
cmp
scas
xor
and
push
outsl
fisttps
xchg
inc
xor
xchg
mov
jmp
call
adc
adc
adc
jmp
xor
jge
pop
inc
jne
fwait
mov
xchg
sarl
fidivrl
out
mov
add
push
fwait
outsl
fldl
adc
sbb
pop
sbb
out
inc
xchg
dec
sub
cmp
mov
xchg
and
sahf
aas
cmp
into
push
mulps
sbb
cli
lret
stos
xlat
orl
imul
jns
mov
addr16
sub
mov
jb
imul
dec
mov
shlb
aaa
lea
mov
push
mov
lcall
xor
jp
sgdtl
cmpsb
jl
subb
cwtl
cmpb
jg
jle
loope
cmpsb
sub
xor
cmp
jo
mov
popf
fidivs
mov
push
lds
int
sub
pop
testb
mov
into
xchg
stos
cltd
sahf
push
jb
mov
pusha
test
nop
push
adc
sub
pop
push
mov
dec
shr
imul
jl
add
xor
sbb
loopne
adc
out
lret
sub
and
xchg
mov
cmp
shlb
test
lahf
cmp
cli
push
mov
sti
mov
inc
sbb
mov
dec
fbstp
in
push
pop
add
mov
mov
inc
aam
daa
or
ss
mov
les
and
xchg
mov
jle
push
dec
adc
leave
push
inc
cld
cmpsb
aas
pop
dec
inc
mov
lods
dec
inc
dec
clc
lods
lcall
sub
arpl
iret
gs
repnz
shlb
sbbb
rcl
ljmp
out
mov
mov
jns
cli
ret
or
jno
jne
or
dec
dec
xchg
fs
mov
mov
stos
pop
sub
daa
aas
or
sub
lods
mov
sbb
dec
jg
lret
dec
xchg
mov
loopne
adc
adc
pop
inc
arpl
leave
jg
jecxz
rcl
sbb
mov
jg
stc
xchg
dec
addl
xchg
out
cmp
and
popf
daa
mov
and
add
inc
add
or
rolb
fs
xchg
push
xchg
lret
sub
push
xchg
popf
mov
xchg
pop
mov
push
jb
int
stc
cmpsb
mov
ret
mov
cmp
xchg
or
insl
data16
fimull
stos
and
jb
mov
out
pop
mov
mov
jno
cmp
sahf
inc
xchg
pushf
in
xchg
orb
imul
cld
outsb
push
lock
pop
cmp
jbe
ss
xchg
cmp
xchg
jb
mov
push
xchg
pop
cmpsl
bound
jmp
loopne
cmc
lods
cs
bound
mov
sbb
xchg
xorl
test
popl
cmp
test
push
mov
or
mov
inc
mov
mov
shl
pop
aaa
mov
xchg
in
xchg
pop
cmp
aas
pop
cs
pushf
movsb
and
xlat
sub
adc
das
mov
movsl
jae
dec
rolb
mov
rorl
out
shrb
xchg
loopne
mov
pushf
mov
sbb
pop
cld
sbb
leave
cld
pushf
xor
dec
sbb
xor
mov
push
mov
fidivs
lods
inc
push
push
cmp
inc
add
cmp
jae
into
adc
or
add
push
fwait
js
aam
and
iret
dec
hlt
mov
jo
xchg
mov
jmp
jmp
jp
sub
ljmp
adc
popf
fs
ja
jae
jno
mull
sub
or
xchg
sub
pop
shlb
xchg
mov
insl
in
insb
in
mov
adc
dec
fidivrl
push
push
orl
pop
aas
pop
adc
fiadds
fs
mov
lock
fnstcw
and
xchg
sub
mov
sbb
xlat
jl
movsl
cwtl
ja
les
jg
dec
push
pop
fwait
pop
jecxz
sbb
cmp
ljmp
fiaddl
mul
mov
dec
rcll
sbb
add
inc
or
xchg
aaa
das
jne
scas
inc
inc
aas
mov
lea
fsts
mov
mov
loopne
pop
jecxz
std
stos
pop
lods
imul
pop
jns
insb
hlt
xchg
call
movsl
cwtl
sbb
rorl
mov
or
mov
push
in
push
push
cltd
daa
rolb
in
mov
pop
sbb
lret
mov
push
cmpl
clc
in
sbb
pop
lock
cld
sbb
pop
lret
inc
popl
ss
xchg
sub
insl
cs
fnstcw
cmpsl
sti
jb
pop
popf
in
stos
cli
ret
roll
xor
cmp
mov
sbb
cmpsb
ret
cs
sbb
sbb
test
pusha
cld
cwtl
sahf
sub
cmp
roll
inc
incl
jmp
cmpsl
loop
rcl
testb
nop
cmc
out
mov
out
xchg
push
pop
and
inc
xchg
or
push
inc
push
imul
sub
int3
pop
adc
divl
fwait
xor
cmp
xor
dec
jmp
mov
div
dec
lods
mov
mov
fdivs
and
inc
pop
ljmp
add
sbb
sbb
add
les
add
mov
push
int3
push
cmp
cmpsb
mov
adc
sub
bound
xor
pop
mov
subb
or
mov
sbb
movsb
in
in
lret
xchg
xchg
adc
dec
mov
push
sub
addr16
jge
out
pop
mov
inc
sub
mov
dec
mov
sub
or
xor
xor
bound
mov
loope
pop
cmp
xchg
scas
mov
mov
leave
add
in
push
push
push
shll
lahf
push
push
pop
roll
jns
lds
xor
cs
jb
pop
nop
pop
jae
mov
outsl
pop
mov
inc
popf
xlat
or
pop
push
jge
jle
mov
stos
inc
out
aas
test
insl
and
push
and
mov
ficompl
sar
sbb
add
mov
leave
xchg
and
pop
cmp
into
outsb
inc
inc
pop
cmp
add
cmc
push
popf
xchg
sub
inc
inc
outsb
dec
mov
arpl
hlt
testl
dec
cwtl
pop
or
and
push
ss
sub
out
mov
scas
mov
and
and
xchg
fdivrs
aas
out
pop
insl
xchg
jo
test
push
scas
int3
sbb
in
arpl
jp
repz
mov
enter
mov
cmp
jbe
lcall
dec
stos
bnd
or
xchg
addr16
imul
inc
sti
fildl
lcall
addr16
pusha
aas
faddl
pop
jecxz
movsb
imul
outsb
and
push
push
jae
adc
lret
add
push
jbe
pop
jg
in
mov
adc
shrb
xor
add
lahf
mov
sbb
and
loope
iret
ror
xchg
xchg
aaa
jg
ffreep
fiadds
loope
sarl
add
mov
les
cmovle
in
ja
xor
jg
lea
jle
xor
mov
cmp
inc
push
repz
ret
mov
ret
stos
fwait
or
cmp
dec
mov
and
in
imul
push
aas
stos
push
addb
sbb
stos
add
adc
or
mov
fildl
inc
fstl
mov
push
in
inc
rol
add
imul
and
inc
stc
adc
push
push
cltd
cltd
insb
push
or
pop
cmp
jmp
fsubr
addr16
dec
aam
scas
inc
cmp
xor
daa
addr16
and
sti
mov
sub
pop
sahf
cmc
push
test
pop
dec
xchg
fsubr
jno
pop
ret
pop
mov
push
ja
dec
pop
cmp
out
lret
jnp
pop
in
adc
scas
and
fidivs
push
stos
stos
mov
test
cmp
mov
daa
xor
cmc
jle
xor
fucom
cs
sbb
enter
push
lods
notb
jne
das
xchg
stos
xchg
lods
jo
int
ficompl
mov
out
sub
out
roll
sbb
daa
scas
xor
cmp
xor
scas
inc
jle
leave
hlt
mov
ss
or
cmp
fsub
or
incl
cmc
sbb
insb
call
pop
or
inc
push
adc
ljmp
jg
inc
mov
insb
testl
shrb
jg
int3
lods
fldenv
inc
inc
ret
adc
ret
xchg
pop
call
insl
and
test
and
push
insl
fsubrp
es
pusha
pop
push
dec
data16
popf
arpl
inc
js
mov
push
mov
and
pop
movsl
jecxz
mov
sub
mov
cmp
cs
pop
sub
sbb
into
out
cwtl
dec
cmp
jb
sub
jno
addb
xchg
sub
shll
pop
jp
dec
pop
or
sbb
cmp
mov
xor
clc
adc
cltd
xor
or
ja
out
pop
jge
in
stos
fildll
mov
daa
lcall
flds
pop
call
sahf
fidivrl
fs
fs
sbb
mov
adc
pop
orl
shlb
and
addr16
pop
ja
inc
push
jno
repz
push
dec
aam
mov
sub
sub
loopne
mov
cmp
js
not
bound
mov
sti
pop
lods
pop
jecxz
cli
clc
jge,pn
in
lea
sahf
and
mov
push
cmp
jb
push
les
or
and
nop
testl
jo
out
jecxz
mov
rclb
jbe
adcb
push
arpl
loop
faddl
lret
cmpsl
or
ds
ljmp
cmp
mov
cld
add
rol
push
adc
dec
inc
stos
pushf
sbb
int3
jb
cld
lods
push
mov
flds
mov
jo
adc
lret
loopne
orl
pop
mov
rorb
adc
rcr
lds
cmp
adc
inc
adc
jae
jo
or
jno
dec
lret
and
out
sbb
sbb
push
int3
stc
iret
pop
and
negb
mov
ja
mov
popa
inc
push
nop
xor
push
jno
leave
mov
mov
and
cltd
lahf
addl
pop
loopne
sub
subl
mov
pop
add
pop
negb
xor
je
jnp
jno
dec
lcall
ret
in
std
sbb
jns
inc
enter
add
add
xorb
ret
movsb
ljmp
mov
hlt
or
fisttpl
sub
lods
mov
cmp
lods
inc
out
frstor
sub
shrl
into
push
fisubrl
mov
jg
daa
sti
fs
dec
mov
fdiv
adc
lret
sti
icebp
jbe
xorl
scas
pop
std
mov
adc
test
adc
add
mov
sbb
pop
add
in
or
aam
shl
movb
sub
sbb
scas
enter
push
fsub
mov
gs
loope
nop
mov
ret
ss
dec
insb
enter
popf
test
outsb
xchg
or
or
loopne
mov
test
lods
jge,pn
mov
cmp
mov
stc
lods
sbb
gs
out
mov
push
test
lret
cmp
xchg
adc
pop
mov
shll
sbb
lret
out
mov
xchg
mov
clc
shlb
cmc
dec
and
test
add
movaps
pop
cmp
and
call
imul
add
in
ja
test
jle
add
jecxz
xorb
mov
shlb
sbb
loope
addr16
inc
les
and
nop
mov
ret
mov
xlat
mov
je
xchg
int
js
jge
jo
jae,pn
cmc
dec
das
dec
sbb
in
push
int
mov
jne
pop
std
cli
xor
adcb
mov
push
imul
aad
test
push
mov
push
scas
mov
jmp
neg
mov
imul
insl
add
int3
ret
mov
cmp
cmp
addr16
int
stos
sbb
add
jmp
pop
and
cmp
push
sbbb
cmp
mov
jmp
lret
cwtl
nop
incl
or
ror
xchg
shll
inc
fidivs
fildll
popf
sbbb
pop
aam
aad
fcmovnb
mov
mov
pop
enter
cmp
inc
sub
les
sbb
push
push
loope
or
push
nop
sub
dec
mov
mov
xor
push
bound
or
int
loope
mov
pop
mov
fnstsw
mov
adc
sbb
outsb
jbe
test
sbb
inc
add
sub
xor
adc
fadds
push
mov
or
dec
cmpl
sub
bound
test
jae
js
pusha
jns
lock
lods
mov
pop
mov
mov
mov
mov
sub
leave
and
loop
and
cmp
pop
addr16
push
sbb
cmp
inc
xor
mov
xor
sbb
sbb
sbb
jno
outsb
push
cmp
ss
xor
cmpl
cmp
mov
sub
mov
sbb
cltd
adc
jae
sub
sbb
xlat
mov
stc
les
out
sarb
imul
mov
xchg
inc
enter
or
mov
xor
adc
scas
adc
scas
aas
inc
ss
sub
outsb
sbb
push
mov
pushf
inc
fincstp
aas
gs
xchg
stos
rolb
fldl
add
add
mov
fistl
push
add
ja
repz
jae
lret
adc
popl
lcall
aam
dec
pop
repnz
xor
xor
test
cmp
sbb
popa
push
jbe
push
test
cmp
cltd
xchg
lods
imul
pop
mov
cmp
mov
outsl
sub
stc
lret
xchg
mov
icebp
shrl
fstl
out
adc
ret
clc
lods
outsb
les
push
aaa
sub
push
push
mov
fistl
and
mov
jg
gs
addr16
fs
xchg
ja
add
imul
push
cmpb
xchg
push
push
mov
push
mov
xchg
ja
mov
fadds
cmp
enter
cmpsb
mov
clc
mov
add
rolb
js
cmc
subb
insl
fucomip
jns
push
imul
mov
aam
xor
sub
ljmp
mov
in
lret
xchg
dec
arpl
mov
dec
pop
jae
xor
pop
jecxz
cltd
jbe
loop
mov
movsl
shl
mov
push
mov
jo
pop
loopne
pop
xchg
mov
mov
push
and
pop
jb
sahf
push
dec
add
pop
addr16
jae
add
cltd
ja
xchg
call
incl
dec
dec
xchg
lods
xchg
or
dec
insl
mov
subl
pop
movsb
adc
stc
dec
in
mov
stos
xor
add
je
shr
xchg
mov
out
jne
imul
popa
lock
push
bnd
int3
leave
sbb
lret
adc
jecxz
fs
loope
cmp
mov
inc
sub
mov
cmc
xor
inc
pushf
std
jle
xchg
jge
popf
mov
fnstenv
cmpsl
mov
fucomi
adc
sub
popa
std
cwtl
pop
dec
lcall
popf
pop
mov
jecxz
pop
adc
ljmp
outsb
int3
repnz
icebp
dec
icebp
sub
mov
mov
inc
dec
adc
jg
adc
call
jnp
pushf
cmp
filds
iret
lock
mov
lods
xor
mov
add
sub
xchg
lret
jmp
in
int3
sti
or
inc
mov
push
adc
cmp
inc
or
mov
scas
sbb
loope
pop
sbb
and
dec
jp
punpckhdq
xchg
cmp
add
mov
les
mov
fmulp
out
and
call
movsb
repnz
aad
cmpb
fs
test
ds
je
lret
stos
fcomi
sahf
add
ret
cs
xor
push
jle
cltd
popl
mov
mov
xor
lcall
inc
incl
jl
cmpsb
test
mov
outsl
inc
or
cmp
scas
jecxz
push
mov
sbbl
mov
shrl
and
dec
outsb
sti
fnstenv
lea
xor
enter
sahf
dec
mov
pushf
jo
lret
or
iret
pop
push
ret
movsb
cwtl
dec
loope
add
sub
mov
repz
nop
imul
sbb
lea
lret
xchg
gs
xor
jecxz
dec
popa
jg
pop
sub
push
mov
daa
adc
out
push
outsl
lock
inc
mov
test
in
inc
enter
adc
push
and
mov
dec
cmpb
leave
mov
mov
in
cmc
cwtl
jne
popa
jno
pop
mov
addl
bound
and
jne
jns
sub
jae
cmp
pop
dec
je
test
fs
dec
iret
sbb
ss
xor
popa
dec
dec
jmp
adc
cmp
sbb
pop
cmp
and
jnp
call
mov
repz
lret
pop
repz
insb
xor
mov
cmp
loop
mov
fsubrs
cwtl
shl
cmp
mov
ja
xor
mov
pop
ret
fildl
pusha
dec
push
stc
iret
icebp
cmp
xor
fisttpl
dec
xchg
repz
aam
jo
int
sub
jmp
dec
inc
jge
add
ds
xchg
xlat
js
pop
mov
sqrtps
xchg
lods
pop
jge
and
or
imul
insl
int
inc
addl
in
mov
jp
rorb
fimull
in
and
rcrl
mov
jo
lods
mov
mov
fists
xchg
stc
scas
mov
xor
or
jne
push
dec
dec
repz
or
cmp
and
je
out
imul
or
mov
and
cltd
add
repz
or
nop
xor
pop
cmpsb
cmpsb
rcrl
push
imul
cltd
xchg
test
adc
push
lods
das
sbb
repz
push
iret
fcmovu
lahf
dec
and
sub
mov
negl
fs
and
xor
or
cmc
shrb
mov
jmp
shl
sti
nop
inc
cmp
and
sarl
fs
fldcw
stc
or
ja
inc
xchg
mov
rdseed
mov
sub
or
add
and
adc
out
out
mov
jp
aas
pop
add
lcall
flds
mov
inc
mov
dec
and
adc
add
push
jmp
clc
in
and
mov
inc
push
sahf
aad
push
sbbb
fwait
jmp
insb
sbbb
clc
pop
es
jo
fdivrl
imul
call
jns
mov
lock
jecxz
and
jae
pushf
sti
int
loop
xchg
shlb
xchg
mov
lcall
hlt
jae
clc
in
cmp
xchg
loope
adc
hlt
sub
xchg
add
jnp
pop
dec
mov
xor
push
push
jl
push
mov
icebp
movl
mov
insb
inc
fs
pushf
mov
icebp
mov
popa
popf
mov
scas
sbb
pop
call
ret
mov
mov
xchg
std
mov
mov
sbb
lods
bound
xchg
mov
cvttps2pi
sub
cwtl
pop
jmp
or
cld
ret
jecxz
rcll
and
mov
mov
gs
je
mov
scas
imul
pop
out
push
das
lahf
pop
cltd
ja
cmp
fwait
shl
lret
pop
mov
shrl
stc
push
fidivs
dec
jl
sbb
outsb
fiadds
cmpl
ss
pusha
ds
leave
xchg
test
mov
cmp
ret
aaa
mov
adc
iret
add
sbb
add
sar
xchg
xlat
testb
fcompl
xchg
lahf
dec
lcall
aam
xchg
data16
mov
sub
sarb
dec
cmp
ret
notl
pop
stos
lcall
cmpsb
jmp
leave
jecxz
nop
push
push
repnz
adc
push
aaa
imul
dec
sub
xchg
pop
dec
dec
and
jb
xor
xchg
and
mov
ret
lods
mov
int3
pop
data16
das
jl
or
imul
orl
outsl
and
ret
enter
aaa
jne
aas
fwait
push
pop
fdivl
sbbb
and
repnz
imul
notb
or
fwait
enter
cwtl
mov
scas
xchg
adc
imul
push
ss
fisubs
pop
sbb
imul
stos
sub
inc
lods
scas
test
fnsave
and
jbe
pop
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
imul
aam
fistpl
loop
test
sub
das
aas
add
lock
mov
cmpsl
leave
xlat
fcoml
es
dec
adc
mov
repnz
adc
faddl
cld
movsb
and
sbb
jge
out
es
iret
inc
lea
pusha
pusha
add
mov
outsb
lods
dec
aaa
inc
call
fucomip
pushf
ja
sbb
divb
in
ja
fcmovnbe
int
or
or
sbb
out
xchg
mov
aam
sub
cld
mov
aas
daa
ficompl
and
sub
push
mov
lock
and
repnz
in
jl
cld
lods
and
bound
dec
std
push
and
jecxz
das
cmp
xor
and
xchg
mov
add
add
les
inc
dec
leave
mov
mov
ret
sub
mov
imul
fmull
jnp
mov
pop
sbb
hlt
mov
cmp
std
add
or
pop
and
adc
adc
movb
stos
push
imull
inc
bound
popf
out
xchg
inc
inc
dec
jp
fldcw
add
push
jmp
fldl
sarb
jl
nop
mov
dec
mov
push
push
das
scas
inc
aas
jns
imul
nop
push
and
xchg
repnz
adc
rorl
xor
insl
sahf
pusha
gs
shrl
call
add
mov
inc
popa
setae
xchg
adc
sub
aaa
xchg
mov
push
dec
outsb
ret
mov
mov
jge
push
jge
sbb
jl
mov
inc
dec
add
cmp
jo
sub
pop
pop
aas
fldenv
or
inc
cmp
sub
xchg
mov
div
into
xchg
mov
dec
je
sbb
xchg
mov
xchg
andb
pop
ret
xlat
mov
push
stos
jne
gs
sbb
pop
adc
aam
push
nop
pop
mov
sbb
loope
inc
adc
icebp
xor
sbb
xlat
cmpsb
push
adc
adc
inc
push
lret
cmpb
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
