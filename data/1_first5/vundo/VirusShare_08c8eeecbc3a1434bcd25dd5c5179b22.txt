jl
add
fcoms
add
imul
add
lds
add
jl
add
add
add
aaa
lcall
js
add
bound
add
add
pop
lcall
jno
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
lret
cltd
add
jl
add
jl
add
jl
add
cs
gs
jne
je
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
pushf
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
xchg
lahf
add
xchg
add
lahf
add
jl
add
adc
add
mov
sub
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
jb
jae
outsl
add
inc
add
add
imul
add
je
add
add
add
add
and
dec
add
ja
and
push
add
insl
add
outsb
add
add
add
outsl
add
popa
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
inc
add
imul
add
add
nop
hlt
inc
adc
adc
fisubrs
pop
out
rclb
cwtl
mov
pusha
add
push
mov
call
pop
pop
ret
pop
jmp
sub
jae
and
inc
dec
add
adc
and
add
add
das
add
cmpsb
add
fbstp
add
mov
add
lret
or
and
outsl
mov
jno
add
add
add
pop
sbb
mov
clc
cmp
inc
pop
sbb
fisttps
cmp
pop
jne
das
pop
dec
imul
add
push
stc
aaa
cld
adc
sbb
fdivr
dec
clc
mov
je
popf
lea
push
pop
mov
into
add
mov
and
std
leave
and
or
fsubr
add
lea
sbb
rorl
loopne
adc
sbb
push
decb
sti
rol
rol
mov
loopne
mov
call
mov
push
adc
xor
inc
jmp
aaa
pop
push
cmc
test
rolb
adc
adc
push
add
lea
mov
mov
mov
out
sub
into
add
aaa
incl
sbb
push
adc
mov
add
add
or
add
lahf
add
fadds
or
sbb
sbb
clc
add
sbb
push
fbld
in
fs
insl
outsl
shrl
fidivl
inc
jb
outsb
imul
mov
inc
hlt
popa
add
je
xor
insb
xor
or
je
gs
jae
and
push
imul
arpl
add
add
dec
add
adc
add
add
add
add
mov
add
add
addl
roll
add
add
add
add
add
inc
add
iret
ret
xlat
enter
das
cltd
jbe
pop
or
dec
mul
fcom
icebp
xchg
jmp
mov
inc
jmp
aad
adcb
mov
iret
xor
fidivs
adc
pop
ljmp
mov
shll
outsb
rorl
push
inc
jb
aas
pop
mov
mov
fwait
jbe
jl
push
jb
fstl
mov
jmp
cmp
movsb
sbb
nop
push
fsubl
gs
mov
test
xchg
or
leave
addr16
or
leave
and
popa
stc
lcall
test
js
xor
pushf
repz
cli
inc
icebp
dec
xchg
mov
int
mov
mov
cltd
mov
or
adc
outsl
mov
pop
outsl
stc
or
int3
sarb
mov
adc
sbb
insb
xchg
lods
sub
or
xor
xchg
stos
jg
mov
jno
add
imul
xor
sub
xchg
add
outsl
aaa
push
pop
cli
mov
call
std
loopne
mov
push
mull
daa
frstor
mov
pusha
nop
jno
xor
stc
test
cmpsl
and
aad
jmp
outsl
sarl
out
fsubs
sbb
in
jno
pop
mov
mov
sbb
push
xchg
and
xlat
test
pop
cs
stos
lret
dec
nop
xchg
cs
test
jmp
or
sub
in
mov
sub
iret
aas
hlt
sbb
mov
dec
pop
repnz
mov
addl
pop
push
add
aam
xor
sahf
test
and
sbb
push
xor
sbb
cld
lock
imul
adc
jmp
int
mov
pop
enter
mov
and
cwtl
dec
mov
cmpsl
adc
push
fwait
dec
push
jne
das
xlat
mov
arpl
rcr
mov
add
leave
popf
in
mov
test
or
mov
mov
out
ljmp
sub
int
add
mov
mov
lret
rcrb
pop
in
cmp
sbb
loop
test
xor
pop
cmp
sub
add
les
aam
cs
or
dec
add
imull
add
adc
test
push
test
call
je
pop
outsl
imul
pop
adc
pop
leave
pop
lods
mov
mov
pop
adc
jg
xor
incl
mov
push
cmp
xchg
dec
inc
xchg
xchg
mov
mov
add
ss
ret
cmp
out
xchg
or
mov
adc
inc
das
inc
nop
clc
mov
push
mov
and
daa
pop
xor
mov
jb
sbb
mov
cs
sbb
outsl
jge
cmp
int3
gs
int
xchg
adc
xchg
call
sbb
aad
xchg
ljmp
adc
pop
mov
adc
in
ret
lods
jmp
mov
lods
cmp
pop
movsl
pop
ficoms
aas
daa
pop
pop
xchg
adc
sbb
fnstcw
inc
cmp
sub
pop
fwait
lock
mov
or
icebp
lahf
xchg
dec
mov
push
or
lea
push
mov
divl
cmp
push
in
cmp
cwtl
ds
orb
nop
adc
cmpsb
inc
pop
sbb
add
jl
mov
pop
mov
inc
xchg
jbe
lret
jae
aam
ja
andb
mov
or
and
xchg
pop
ret
lahf
xchg
ss
mov
fnstcw
hlt
clc
out
add
cmc
outsb
push
repnz
das
imul
cmp
in
sarl
std
mov
sub
or
pop
aas
cs
divb
es
add
ret
push
stc
out
adc
sbb
mov
idivb
aad
sub
lds
push
adc
cltd
sbb
sarb
mov
dec
mov
iret
dec
call
xlat
inc
mov
scas
pop
call
sti
cmc
pop
stos
lret
or
push
pop
mov
sbb
std
pop
cmp
mov
cltd
cwtl
jp
jg
nop
inc
dec
into
in
fwait
mov
mov
in
jno
add
or
shll
cmp
sbb
push
pop
inc
mov
rol
cmp
arpl
inc
jecxz
mov
daa
cmp
les
out
adc
enter
arpl
jge
jp
insb
and
add
xchg
add
jo
jnp
xchg
test
pop
adc
mov
gs
sbb
or
int3
sbb
pop
test
mov
xor
fs
cltd
rorb
xlat
inc
jnp
add
mov
xchg
sub
rcll
shl
inc
scas
ss
mov
fisttpll
adc
rcll
popf
lods
fwait
outsl
pop
mov
xchg
insw
rorl
dec
lods
repnz
cmp
cltd
shrl
mov
insl
movsl
and
rclb
and
fildll
les
sbb
add
dec
and
xchg
jae
in
cmovs
ds
pop
jae
aaa
imul
mov
movsl
sbb
in
push
lock
pop
cmp
bound
mov
scas
mov
aaa
cmp
mov
out
jns
xchg
mov
pop
int
add
mov
push
je
and
je
cmc
shl
pop
adc
fisubl
ret
mov
mov
fs
push
test
and
push
outsl
mov
loope
test
mov
pop
cmpl
add
or
fmuls
jge
pusha
popa
push
mov
ja
scas
mov
mov
lret
inc
jne
push
inc
jp
and
or
js
push
jno
push
or
dec
xchg
or
dec
in
imul
repz
push
and
iret
push
pop
add
sti
mov
mov
inc
dec
sbb
loop
aaa
jbe
dec
add
mov
fistpl
imul
push
repnz
ja
pop
xchg
mov
sbb
xchg
mov
out
iret
sub
clc
out
lcall
ret
pop
push
imulb
ret
or
sub
sbb
sub
push
call
cltd
cs
leave
mov
dec
xor
inc
in
mov
nop
scas
jae
icebp
mov
outsl
dec
mov
cwtl
icebp
mov
fdivrl
addr16
cmp
mov
mov
jl
xchg
add
dec
dec
loop
outsb
repnz
push
mov
loop
rcl
mov
pop
mov
lret
push
cwtl
mov
pusha
mov
aam
xor
jb
mov
inc
jg
pop
pop
dec
inc
mov
enter
lock
in
jmp
out
mov
xor
jno
daa
lahf
out
scas
imul
add
jp
int
adc
cmpl
mov
outsl
jg
lock
ss
jb
in
mov
pop
mov
mov
sahf
pop
mov
push
test
mov
xlat
inc
popa
pop
int
push
or
sahf
in
xor
movl
cmc
dec
out
jl
fcoml
jl
das
or
dec
enter
and
lods
adc
dec
divl
mov
inc
xchg
xor
adc
and
xor
enter
push
iret
push
xlat
inc
dec
call
ja
mov
les
mov
xchg
cli
mov
push
test
cmp
mov
ljmp
cwtl
notl
hlt
mov
mov
xor
sub
inc
and
cmpsl
shrl
stos
push
jecxz
sbb
mov
fwait
sub
ss
and
pop
dec
leave
pop
dec
rcrl
xor
lea
sysenter
jae,pt
mulps
daa
popf
mulb
mov
jmp
cmpsb
cmp
dec
inc
adc
jnp
std
int
sbb
xlat
dec
movsl
inc
jne
test
inc
xchg
xor
cltd
test
jo
add
jbe
ja
inc
imul
xor
ss
cmp
insb
xchg
push
ret
dec
out
xor
mov
ja
in
ret
mov
cmp
lret
sub
sub
mov
dec
adcl
out
fsub
fld1
xchg
and
mov
fisttps
add
insl
sub
xorb
xchg
scas
mov
scas
inc
into
adc
cs
loopne
pop
add
or
xchg
push
repz
outsl
cmpsl
aas
decb
mov
and
mov
testl
jmp
or
into
dec
push
int
mov
ja
pusha
mov
sbb
int
jl
add
test
dec
or
out
mov
in
inc
ds
hlt
sub
fldl
xor
cmp
pop
jl
fistps
xchg
out
clc
bound
mov
xor
adc
push
pusha
add
adc
hlt
pusha
or
cltd
clc
shll
test
lock
pop
lahf
and
sbb
fimull
scas
aad
jmp
push
adc
out
lock
clc
inc
ljmp
sub
lods
mov
imul
test
in
sbb
stos
push
adc
aas
xchg
push
gs
ret
xchg
jge
fsubr
pop
dec
int3
ljmp
and
mov
cmp
mov
dec
xchg
jg
enter
push
test
mov
dec
subb
push
jmp
xor
jg
or
inc
arpl
inc
mov
lods
popf
lods
sub
cld
or
lods
hlt
adc
or
sbb
xor
test
push
inc
sbb
mov
mov
pusha
mov
nop
mov
mov
out
jl
xor
jns
xlat
mov
fisttps
pushf
fwait
push
add
mov
mov
mov
push
pop
lret
pushf
daa
icebp
out
setge
xchg
cltd
addl
movsb
pop
out
arpl
into
push
cmpsb
test
mov
dec
mov
subl
addr16
push
ljmp
push
gs
xor
mov
loop
stos
cmpsb
sbb
dec
mov
pushf
push
cmp
sbb
adc
or
add
pop
sarl
cmpsb
sub
das
fsubrs
int3
mov
lahf
push
jb
push
or
rcl
adc
loopne
cltd
or
mov
testb
or
hlt
pop
mov
sub
fadds
jne
xor
push
mov
mov
out
nop
dec
sbb
dec
in
rcrl
sahf
loope
or
add
lock
cmp
frstor
cmp
fdivl
lret
pop
xor
cmpsb
push
cmp
jne
push
xchg
xchg
sbb
cmp
inc
popa
daa
cs
stos
shrb
xor
push
stos
scas
and
js
or
cmp
cmp
das
xchg
leave
push
mov
popf
mov
cmpsb
mov
jmp
imull
push
xchg
negl
jl
leave
leave
xlat
mov
test
push
adc
pop
lret
in
xchg
je
mov
pop
sbb
movsl
adc
adc
fs
sbb
aam
pushf
sti
sahf
fimull
xchg
and
popf
movsl
jl
adc
or
imul
jecxz
mov
mov
adc
pop
mov
sbb
cmp
leave
push
subl
mov
jb
pop
sbb
xor
inc
push
xchg
jmp
sahf
popf
push
inc
lea
jbe
jno
imul
rcr
jnp
lcall
fs
dec
and
lcall
jns
lcall
xor
hlt
add
mov
mov
xchg
mov
es
push
push
and
xchg
sub
and
mov
mov
xchg
aad
call
inc
mov
add
mov
jmp
ror
sub
pop
aam
test
and
aad
pop
outsl
int
adc
stos
cmc
add
xor
jl
pop
imul
repnz
popa
xor
jne
add
add
popa
pop
jnp
fucomi
push
imul
mov
xor
mov
mov
mov
cld
cmpsb
vcvttps2dq
rolb
cs
mov
popf
mov
sbb
mov
push
std
adc
mov
insl
loope
jne
mov
dec
mov
jl
xor
mov
lcall
and
xchg
leave
mov
sti
iret
in
in
inc
mov
xchg
and
sub
push
loopne
mov
push
faddl
dec
cltd
mov
jl
adc
test
fidivs
xor
outsb
pushf
or
cmp
sarl
scas
fwait
push
aaa
ret
jge
and
cmp
or
xchg
loopne
fnstcw
jbe
icebp
rolb
cmpsb
xchg
or
mov
fistl
mov
std
scas
js
fmull
out
repnz
test
sub
mov
cmp
adc
bnd
xchg
pop
inc
mov
dec
fstpl
cli
icebp
stos
jmp
jbe
das
cmp
adc
ret
test
jecxz
test
push
loopne
hlt
push
mov
pop
dec
jp
dec
mov
dec
mov
sub
xchg
mov
sbb
ds
and
cmp
cmpsl
dec
jb
inc
xor
inc
cmp
and
sub
or
pop
sub
inc
stos
sub
rcl
repnz
pop
jno
push
push
call
es
outsb
inc
pushf
jb
push
xor
in
and
ss
mov
jecxz
or
ds
or
mov
lods
push
int
xchg
inc
insb
bound
jae
gs
pop
fnstsw
bound
and
outsl
or
sahf
push
inc
outsl
mov
aam
xchg
adc
cltd
ds
adc
popa
sub
cld
cmp
mov
aad
imul
sbb
notl
mov
pop
mov
and
sbb
and
dec
fidivl
push
loopne
cld
fnstenv
imul
sub
cmp
xor
nop
cmp
pop
sti
ja
out
movsb
fstpt
into
or
fldt
fisttps
adc
gs
fldcw
pop
hlt
and
rdtsc
hlt
dec
xlat
stos
negl
mov
lock
orl
popf
or
test
push
or
fildll
sub
cmp
iret
pop
repnz
es
inc
inc
loopne
lcall
in
dec
out
fcomps
aaa
mov
sub
data16
rorb
fwait
xchg
inc
gs
fisubs
lcall
loopne
out
aaa
ljmp
cmp
ljmp
stc
mov
loop
bound
popf
xor
jo
js
xchg
ret
arpl
push
pop
xchg
insl
daa
pushf
pushl
sub
cmpsl
les
xor
or
mov
mov
fisubrs
insl
xor
test
mov
leave
iret
sub
scas
sub
test
lock
xchg
sbb
jg
inc
insl
push
mov
xchg
or
cmpsb
out
push
push
adc
imul
aad
ds
daa
loope
push
jge
dec
xchg
xlat
movsb
or
inc
jle
or
push
add
xor
ss
sbb
mul
sbb
xor
mov
fs
jle
jle
test
push
scas
test
xlat
mov
ds
mov
xchg
xchg
movsl
mov
add
push
rcl
popf
fldl
dec
mov
test
jecxz
pop
rorb
xchg
or
and
jno
mov
out
add
loopne
adc
ljmp
xchg
push
sub
mov
xchg
xchg
dec
clc
out
je
xor
testl
sub
jb
fsubs
adc
add
and
xchg
mov
or
mov
dec
mov
leave
loop
dec
sub
pop
xlat
xchg
inc
dec
push
pop
or
lret
mov
popa
lahf
mov
arpl
xor
pop
and
dec
jae
sbb
jne
addr16
pop
mov
and
pop
hlt
movsb
xor
pop
mov
sub
push
add
push
cmp
cwtl
cmp
stos
xchg
lahf
stos
fstl
xor
loopne
imul
and
xor
or
and
push
repz
adc
push
imul
aaa
push
mov
les
pusha
mov
cmpsl
dec
out
movsb
jge
adcl
inc
mov
daa
xchg
lds
xchg
ljmp
sub
push
inc
shlb
sti
hlt
and
sahf
iret
scas
xchg
xchg
lahf
mov
arpl
inc
or
dec
fsubp
test
stos
mov
mov
mov
sub
pop
in
es
mov
push
mov
cmp
aad
ffree
repnz
testb
and
jbe
jp
pop
mov
test
hlt
or
dec
nopl
fisubs
mov
or
lods
mov
xchg
out
cltd
out
jg
dec
fptan
fiadds
jmp
ds
cli
pusha
int
pusha
and
add
add
popa
adc
cli
loopne
xchg
out
push
imulb
es
pop
xorl
inc
cmp
xchg
cli
ljmp
mov
rclb
push
dec
adc
xchg
cmpsl
pop
push
ljmp
cmp
inc
mov
dec
add
daa
jno
mov
inc
sub
imul
push
push
stc
in
inc
mov
loop
rcrb
mov
add
cmc
xor
or
faddl
testl
pop
push
pop
add
movb
inc
xchg
push
mov
fstpt
lods
sbb
fidivl
push
mov
loopne
out
imul
ja
mov
adc
mov
aad
fdivrl
sbb
sub
cltd
movsl
sub
xchg
dec
adc
in
and
mov
mov
push
in
pop
test
popf
adc
cmp
sub
stc
sub
push
fnstsw
shrl
ret
out
jae
test
push
sbb
jle
enter
xchg
mov
test
xor
mov
mov
jns
pop
xlat
xor
inc
push
fiadds
xchg
push
xchg
xchg
jbe
inc
andb
fcoms
in
subl
or
add
lds
add
std
cs
mov
pushf
pop
les
xor
rep
xor
push
push
data16
jbe
push
adc
xchg
rcr
repz
adc
rorb
mov
mov
adc
xor
stos
callw
aas
jae
ret
outsw
sahf
int3
ret
pop
sub
dec
inc
cld
imul
mov
aas
call
test
ljmp
repnz
insl
cmpsl
xchg
xchg
test
ja
add
cld
cmp
mov
jecxz
cmpsb
ss
add
push
or
push
out
stc
iret
xchg
sub
sub
mov
ror
mov
mov
icebp
jmp
add
in
add
dec
inc
js
dec
push
push
sti
inc
mov
dec
icebp
aad
jae
add
insb
add
add
loope
add
add
add
add
sldt
push
add
aas
add
mov
add
add
lahf
add
roll
dec
add
adc
add
add
add
add
mov
add
add
add
add
add
jno
add
add
jo
xor
xor
cmpsl
add
incb
add
add
push
stos
add
ja
xchg
ror
int3
int3
push
mov
sub
lea
push
push
push
pushl
call
cmpl
je
mov
cmp
je
call
movl
call
cmpl
jne
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
mov
push
push
push
push
push
pushl
call
pushl
call
call
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
xor
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
jmp
call
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
pushl
pushl
pushl
push
push
call
add
cmpl
jb
call
mov
pop
pop
pop
leave
ret
and
add
add
pop
mov
outsl
arpl
sub
mov
add
add
jecxz
add
adc
rcrl
add
add
add
add
add
in
add
add
popf
fldl
insb
xor
ret
lea
add
add
jge
add
add
sbb
sbb
push
sbb
fdivrl
pushf
ljmp
outsl
dec
add
pop
push
and
add
xchg
dec
mov
call
loop
adcl
test
add
test
xchg
or
cltd
sub
cld
adc
adc
ret
call
add
jo
push
push
mov
repz
dec
push
push
decl
add
add
leave
sub
or
mov
add
mov
mov
xor
lods
add
mov
rcrl
sbb
imul
dec
add
arpl
clc
push
add
cmp
adc
call
adc
inc
pushf
sub
enter
pop
call
lea
xor
mov
adc
add
adc
add
add
sbb
sbb
stos
std
sbb
sbb
sti
lods
sbb
sbb
shl
insb
add
inc
dec
je
jae
adc
push
mov
imull
mov
insl
dec
outsl
gs
sbb
jo
cmovno
dec
add
jns
dec
gs
sahf
inc
add
mov
inc
sub
jb
cmp
add
inc
or
mov
add
add
jecxz
add
add
rcrl
add
add
add
add
add
mov
add
add
lea
add
add
mulps
and
lea
xor
jp
or
sub
dec
pop
sbb
scas
out
lds
orl
xor
jl
divl
dec
push
mov
jl
push
xchg
pop
mov
cltd
stc
xchg
dec
and
add
pop
inc
xlat
lcall
push
xchg
dec
push
mov
insl
clc
out
repnz
popf
les
lcall
ss
mov
lea
int
xchg
fists
enter
pop
mov
jle
pop
xchg
fmull
cmp
push
fidivl
cmp
dec
mov
mov
outsl
and
jecxz
jmp
nop
mov
sub
push
xor
pop
adc
lahf
dec
gs
mov
outsl
int
jnp
cmpsb
je
push
mov
out
xor
push
lods
js
jge
enter
out
mov
xchg
clc
aam
test
sbb
xor
push
add
cmp
adc
mov
test
sub
xchg
rcrl
jge
aad
jne
lret
add
cmpsl
fs
inc
add
push
mov
fdivp
mov
andb
cmp
fs
ja
fisubrs
inc
fucomi
mov
xchg
mov
lea
loop
fcmovnu
cmp
movsl
stos
clc
enter
mov
add
rcrl
ret
xor
aas
not
push
cli
roll
xor
inc
cmp
sbb
inc
mov
inc
jns
pop
orb
test
xchg
fldt
mov
dec
lret
mov
popa
add
lock
mov
enter
mov
jle
mov
dec
push
pop
fsubrl
xlat
mov
mov
jbe
xor
dec
jns
sub
cld
sub
inc
pop
sbb
adc
je
mov
jns
or
jmp
and
in
out
add
dec
push
rorb
loop
sbb
lret
test
dec
lods
outsl
in
movsb
sarb
push
imul
mov
pushf
adc
fdecstp
rcrl
or
mov
push
addr16
add
fisubrs
pop
test
pop
ljmp
push
rclb
pop
mov
in
fists
fldl
add
mov
scas
jmp
je
std
int3
jmp
sub
loop
jnp
jmp
or
les
xchg
outsb
sbb
inc
mov
push
jle
popa
or
xchg
lret
adc
aas
stos
ret
xchg
movsl
mov
push
fs
lea
shll
in
dec
and
inc
and
xor
sbb
into
sub
pop
sub
or
mov
push
push
sub
push
sub
sub
jmp
and
ja
cmc
test
nop
add
sbb
les
jp
jmp
jo
dec
cs
inc
push
pop
popf
in
mull
jbe
outsb
outsb
out
in
repz
xorb
js
jo
mov
jbe
jno
or
mov
mov
fsubr
aas
test
cs
inc
push
out
xchg
xchg
es
lahf
push
shrl
or
outsl
dec
dec
jo
mov
xor
cmp
imul
sbbb
insb
addr16
ret
add
adc
add
xlat
test
out
jmp
repz
xor
xchg
adc
popf
jnp
push
mul
xchg
xchg
adc
mov
add
daa
xchg
xorb
cs
fdivr
xchg
dec
mov
mov
mov
arpl
aad
jle
mov
jb
inc
jno
lahf
sbb
jne
sub
stos
movsl
mov
lcall
sbb
insb
imul
inc
test
rcrb
test
dec
into
mov
mov
sub
push
cltd
adc
jnp
stc
pop
push
lret
dec
jecxz
pop
mov
mov
xchg
lds
add
in
rclb
sbb
xchg
push
jno
mov
and
sahf
mov
in
outsl
pop
push
test
jmp
pop
cmpsb
jmp
sbb
jl
test
mov
dec
andb
and
push
xor
cltd
in
jmp
jmp
and
push
fisubrl
xlat
xor
jmp
adc
test
or
out
push
ljmp
rcl
scas
imul
lret
jmp
mov
test
push
mov
out
and
or
int3
and
nop
sahf
xlat
mov
add
sbb
cmp
lea
popa
push
test
insb
mov
add
loopne
xchg
sub
mov
sub
or
enter
pop
imul
xor
rol
imul
pusha
ret
cs
or
and
cli
ja
sub
subb
nop
int
push
mov
dec
imul
sarl
xlat
rorl
negl
out
adc
popa
push
jge
mov
ret
addr16
out
cmpsl
mov
mov
inc
adc
mov
pop
xor
jl
or
nop
mov
popa
lods
test
cwtl
mov
jnp
pop
sbb
push
xor
xlat
dec
mov
pop
cltd
popf
cmpsl
mov
loopne
cli
cmc
or
adc
popf
popa
mov
ljmp
cmp
loopne
scas
or
ds
pushf
and
push
push
cs
cmp
xchg
mov
insb
add
repnz
pop
jae
out
loope
in
mov
jp
inc
cmp
jp
dec
mov
mov
neg
jns
fnstenv
das
xchg
sbb
add
fnstcw
cmp
sar
adc
loop
sti
cmc
adc
test
daa
mov
popa
mov
incb
xor
pop
adc
sub
scas
jmp
sbb
mov
lea
cs
scas
fbstp
ja
jg
cmp
cmp
scas
shlb
dec
pop
mov
sahf
jmp
pminsw
scas
jae
pop
jp
daa
icebp
inc
mov
test
fnstsw
lock
lods
dec
mov
aam
add
jne
test
mov
loopne
mov
adc
inc
movsl
fiadds
lods
jp
out
pop
inc
push
out
insl
insb
sbb
xchg
int3
adc
inc
adc
pop
add
mov
mov
icebp
dec
pop
sub
push
inc
js
push
dec
outsb
fwait
and
ja
xlat
enter
sti
stos
rorb
test
xor
ljmp
rclb
xchg
int3
cld
jmp
leave
cmp
and
leave
les
adc
dec
sbb
sub
cmpsb
or
dec
clc
into
enter
shll
mov
lock
add
fs
push
adc
add
xchg
sbb
xchg
xchg
and
adc
icebp
push
fsubs
push
iret
mov
gs
push
pop
loop
or
dec
outsl
movsb
sbb
test
or
xor
repnz
imul
push
dec
lret
jbe
or
mov
addl
sub
sub
jns
push
inc
fisubs
mov
sbb
outsb
jl
sub
cltd
stc
inc
sahf
addr16
xor
rcll
fwait
rorl
insl
mov
out
lret
or
rol
jmp
add
sbb
pop
sbb
cmpsl
iret
sti
dec
add
push
jno
jle
test
std
stos
mov
mov
mov
shlb
xorl
pop
out
stos
in
add
fwait
and
and
popf
idivl
jg
mov
insb
les
fisttpl
mov
mov
cmpsb
and
sub
sub
in
cmp
push
jb
lods
gs
add
testl
shlb
ja
push
sbb
fptan
hlt
pop
xlat
inc
dec
dec
insl
cs
push
call
ljmp
call
repz
inc
int
sub
in
pop
sbb
xor
sbb
dec
mov
test
pop
test
and
sbb
xchg
xor
rorb
je
and
stc
cmp
shrl
dec
loop
adcl
xchg
cli
fcompl
outsb
xor
aaa
mov
dec
aas
andb
lret
test
scas
daa
jne
pop
add
xchg
push
jno
sbb
sbb
xchg
es
ja
cmp
fwait
outsb
cmpsl
and
adc
daa
dec
xor
stc
sub
inc
imul
mov
int3
stos
lcall
cmp
icebp
adc
jmp
inc
sahf
shl
shll
cmp
pop
aad
lret
inc
push
push
or
mov
push
stos
insb
imul
adc
pop
in
scas
mov
mov
int
adc
fcoms
inc
stc
cld
adc
mov
int
js
in
and
sub
cwtl
pop
data16
lock
notb
aam
xadd
xchg
dec
dec
xlat
das
dec
add
lahf
jmp
xor
pop
call
xchg
inc
shrb
arpl
mov
in
mov
adc
mov
ficoml
clc
xorb
add
sarb
and
out
leave
lea
mov
test
clc
sbb
roll
cwtl
repz
mov
and
outsl
push
xor
xlat
and
jp
or
icebp
or
lahf
dec
popf
push
lahf
sub
lret
xchg
inc
dec
pop
cmp
mov
clc
orb
pop
sahf
in
and
xor
bswap
orl
push
pop
inc
lcall
mov
jo
les
std
mov
xchg
subb
mov
lret
fbld
rcll
and
jae
sarl
mov
sub
push
adc
xlat
fnstsw
pop
sub
inc
push
pushl
xchg
popa
sti
movsb
sub
dec
pop
jne
jmp
mov
or
lcall
mov
xchg
sub
iret
aam
jno
mov
data16
mov
insb
imul
sbb
inc
add
jo
sbb
xchg
mov
cs
les
fmull
jecxz
pushf
adc
out
hlt
dec
test
xchg
mov
sub
leave
cmp
mov
xchg
pushf
add
mov
or
push
fildll
sti
mov
or
add
xchg
push
mov
cwtl
mov
inc
pop
adc
push
adc
mov
cli
adc
adc
mov
cltd
js
iret
idivl
lcall
mov
inc
jmp
mov
sbb
iret
nop
inc
cwtl
mov
xor
nop
lods
sti
add
and
inc
jnp
pop
cld
das
add
sub
mov
and
sbb
cmp
data16
mov
clc
in
aas
divl
pop
cmpsb
lods
mov
pop
fs
mov
or
or
sub
sub
jns
push
inc
out
lods
pop
xchg
lods
jmp
and
shrl
mov
sbb
xor
bnd
loop
jb
rcr
adc
cltd
test
ds
jns
cmpsb
lret
ret
jnp
jg
imul
jg
dec
icebp
push
in
mov
xor
cwtl
loop
mov
push
xchg
jge
xor
xchg
iret
ret
mov
sbb
mov
xchg
cmc
xor
icebp
pop
jp
push
push
popa
jnp
sbb
icebp
xor
ret
clc
mov
rol
imul
jne
inc
mov
fistpl
xchg
loopne
jecxz
jmp
push
fwait
mov
mov
push
xchg
movsb
ja
xchg
pop
push
out
call
bound
pop
out
js
dec
jnp
mov
push
mov
sbb
into
pop
push
cwtl
cmc
ret
push
xor
adc
jnp
sbb
xchg
pop
push
push
adc
addr16
xchg
aad
jns
loop
dec
cmp
out
jge
push
inc
ret
add
xchg
fs
mov
push
mov
adc
leave
adc
shlb
loope
and
imul
inc
incl
xchg
lods
popf
into
sbb
jbe
dec
add
xor
pusha
dec
fimuls
les
testb
add
inc
ljmp
or
dec
push
mov
shr
adc
adc
push
daa
ljmp
out
push
sub
and
dec
cmpsl
stos
push
lods
clc
arpl
or
sbb
jge
push
hlt
rcrl
inc
sbbl
push
add
aam
or
mov
dec
and
imul
out
adc
jns
fwait
out
jbe
pop
daa
sbb
inc
or
fsubr
push
inc
or
cltd
xlat
cs
xorl
push
xchg
shll
test
mov
mov
dec
fmull
and
sbbl
pop
adc
ret
mov
or
xor
addb
cmpsb
jge
ja
jae
inc
imul
test
repz
icebp
in
cmp
lcall
mov
lods
xchg
nop
sub
dec
out
insl
negb
mov
dec
stos
hlt
in
sub
mov
push
insl
ficompl
pop
cwtl
mov
lahf
aaa
arpl
dec
fistl
shlb
push
fildll
ljmp
pop
xchg
mov
repnz
adc
cmpsb
pop
and
pop
negl
mov
add
push
iret
sub
dec
outsb
mov
mov
push
daa
sti
std
mov
stos
mov
roll
push
icebp
sbb
out
lods
mov
ds
jne
inc
xlat
mov
fst
dec
jge
cltd
ja
lea
push
lea
cmp
add
pop
mov
jne
ret
push
in
stc
loopne
out
push
jle
fistl
jecxz
sbb
clc
inc
pushf
hlt
xor
xorl
xlat
sbb
xchg
xchg
pop
cwtl
dec
xchg
ljmp
test
rcr
loop
cmc
out
jo
daa
mov
iret
aad
iret
filds
jg
add
push
cmp
pop
movsbl
xchg
int3
push
outsb
bound
mov
xor
hlt
in
sbb
iret
jecxz
inc
pop
out
sbb
dec
loop
xor
xchg
and
cld
dec
xor
push
movswl
or
arpl
lds
or
mov
flds
add
cwtl
mov
movl
adc
and
xchg
out
xor
fdivl
sbb
dec
sub
adc
add
lds
dec
pop
sub
jl
jbe
xor
loopne
fcom
pop
jmp
jle
pop
mov
push
push
mov
fdivl
int
pusha
ja
add
and
and
scas
or
mov
sub
jg
andb
inc
stos
aaa
popa
imul
xchg
or
mov
mov
out
je
xor
fwait
gs
fnstcw
rcl
rcrl
sub
pop
sbb
lret
addr16
push
xor
stc
mov
dec
sbb
dec
cmpsb
addr16
das
rol
pop
or
xchg
ficomps
out
sbbb
sahf
sahf
pop
and
insb
cld
ss
lods
pop
mov
lods
dec
jp
pop
jo
lods
mov
inc
stc
lahf
adc
mov
ret
push
mov
xchg
and
jl
sub
xor
push
xor
popa
std
cld
shr
fs
in
mov
sub
outsl
pop
cmp
iret
inc
mov
insl
and
inc
jge
xchg
fists
pop
scas
mov
loop
sbb
dec
rcll
stc
jae
adc
cmp
adc
mov
add
add
lcall
inc
pop
pop
insl
cmp
jg
inc
xchg
pop
shll
pop
les
pop
sahf
pop
jae
addb
jae
rcrb
cltd
in
lcall
mov
jbe
push
imul
iret
mov
cmp
sub
adc
cmp
test
or
xor
out
jnp
test
loopne
cli
cmpsb
pushf
cmp
xor
sbb
xchg
inc
adc
mov
js
adc
lods
adc
icebp
cmp
mov
cwtl
sbb
dec
xchg
cld
sbb
mov
inc
stos
jns
sbb
dec
fsubrs
ss
aas
xchg
mov
flds
or
jecxz
out
push
in
dec
mov
adc
cmp
out
pushl
leave
mov
loopne
ljmp
sahf
or
ss
insb
data16
shll
mov
iret
mov
push
jmp
icebp
loop
xor
movsb
push
inc
fldl
jmp
xlat
xchg
rcl
fidivl
das
push
insb
lret
aam
aad
cmpsl
dec
sub
lret
add
es
mov
push
fdivr
in
add
dec
insl
push
sbb
pop
jecxz
push
pop
pop
mov
dec
sbb
jns
lods
inc
out
movsl
out
mov
jle
pop
add
xchg
adc
mov
ret
ljmp
sub
push
jecxz
scas
fwait
sbb
clc
je
inc
jns
cmp
mov
jg
lods
fwait
int
and
jle
jmp
inc
test
arpl
imul
in
xchg
push
test
dec
bound
stos
add
xchg
sbbb
imul
inc
sub
sbb
in
pop
addr16
push
and
fs
cmp
and
pop
ja
mov
insl
sbb
les
push
lea
and
push
add
pop
fstl
in
push
decb
xchg
xchg
xor
mov
lods
lods
or
jae
xor
mov
push
negl
adc
push
nop
sub
rcrl
imul
lds
mov
cmp
inc
add
sub
gs
lahf
jp
sbb
lods
clc
dec
dec
popf
imul
add
data16
into
test
jecxz
test
sub
push
and
sub
in
inc
pop
pop
mov
adc
pop
mov
not
addr16
push
pop
faddp
xor
mov
cmp
out
hlt
cwtl
cmp
sub
sbb
ljmp
fsubrl
mov
mov
dec
sbb
push
add
fs
repz
push
jmp
jge
inc
mov
mov
lods
jnp
push
mov
inc
fcmovnb
push
ds
mov
push
addb
aaa
dec
cmpsl
loop
loopne
les
cwtl
icebp
xchg
scas
push
cmc
xchg
mov
lock
mov
mov
push
insl
dec
test
insl
xchg
stos
sub
idivl
push
adc
mov
popa
inc
mov
shrb
xor
push
sub
or
test
mov
pop
xchg
sbb
jnp
sub
sti
clc
lea
daa
mov
pushl
orl
push
cmc
add
jo
das
or
push
sub
lahf
lods
icebp
and
xchg
mov
dec
inc
sub
xor
xchg
mov
jle
cmp
mov
xor
sub
mov
mov
rol
fnstcw
sbb
ljmp
xchg
ret
sar
lcall
sbb
loope
mov
cmp
stos
decl
adc
push
enter
dec
addb
adc
lret
mov
mov
nop
cli
or
push
xor
or
jmp
aad
les
xor
in
xchg
mov
cmc
fnstenv
enter
jb
ss
out
aam
and
add
add
add
push
sbb
or
add
add
mov
and
add
add
pop
add
add
inc
or
mov
add
add
jecxz
add
add
rcrl
add
add
add
add
add
mov
add
add
lea
add
add
jge
add
add
add
addb
sbb
sub
add
mov
dec
int3
int3
int3
add
add
add
lret
push
and
gs
add
xor
add
ds
sahf
add
or
add
add
add
add
stos
add
push
add
add
cs
add
sbb
add
add
add
add
jae
jb,pn
push
arpl
jb
fs
mov
jb
inc
ucomiss
mov
sti
sarl
xchg
enter
mov
adc
incl
mov
rol
cmc
scas
call
clc
push
test
cld
push
incl
pop
add
mov
pop
push
adc
arpl
out
rolb
add
push
repz
gs
movl
or
pop
push
mov
cs
ja
sbb
push
cmp
test
or
adc
push
into
loopne
mov
loopne
adc
adc
jne
sar
hlt
shl
jo
mov
test
lea
subb
add
out
pop
ja
and
add
add
add
fwait
add
add
into
cmp
pop
add
sahf
sbb
cmp
pop
outsl
gs
insb
push
movsl
dec
gs
inc
inc
cmp
mov
inc
outsl
inc
outsl
push
imul
sub
insb
push
push
imul
jne
or
fisttpl
sub
mov
mov
insb
add
add
add
add
add
cmp
add
add
add
add
add
stos
add
push
add
jnp
add
add
dec
add
scas
add
sbb
add
movsl
mov
fcmovu
incb
out
jne
jne
andb
out
sub
std
xchg
xchg
outsl
hlt
inc
or
dec
jl
inc
jle
pop
inc
outsl
out
out
inc
rolb
cmp
and
lods
icebp
xchg
in
je
dec
push
loop
xchg
xor
aas
arpl
add
out
jbe
test
add
dec
nop
mov
subl
adc
or
aam
jns
cmp
cld
mov
out
movsb
sbb
stos
frstor
push
jge
bound
jne
nop
jg
fsub
jo
pop
xorb
dec
and
fldenv
testl
jnp
pop
fsubrl
js
add
pop
cmc
xor
hlt
push
pop
mov
lods
push
pop
adc
les
outsl
leave
jg
dec
rcrl
xlat
lret
push
xor
stc
sub
push
test
loopne
mov
xchg
dec
test
dec
pushf
cwtl
inc
dec
lret
jmp
test
arpl
in
sbb
mov
and
fs
xchg
cmp
lods
xor
scas
pop
sub
fistpl
jo
mov
dec
push
cmpsl
ret
sub
jno
out
dec
or
jecxz
xchg
jge
daa
or
fdiv
clc
mov
dec
push
inc
gs
push
inc
imul
xchg
in
stos
pop
fwait
popf
push
push
ret
out
pop
mov
enter
xchg
lret
pop
sub
mov
in
adcl
dec
shr
clc
sahf
dec
sub
ja
pop
adc
ret
xchg
sub
sti
dec
aaa
aad
aaa
push
lahf
clc
into
stos
or
push
lods
dec
mov
mov
jge
cld
adc
testl
aaa
mov
cmpsb
jo
js
xchg
dec
jnp
xor
push
cmc
stos
adc
bound
inc
xor
jmp
jmp
icebp
pop
enter
fidivs
add
lds
call
jnp
mov
roll
xchg
sbb
cwtl
xchg
jb
xor
cltd
xor
add
pop
movsb
adc
pop
out
push
js
sub
sbb
jo
js
out
shlb
push
outsb
push
das
insb
dec
and
ud1
sarl
sub
test
mov
out
movsl
ljmp
sub
or
outsl
rcl
cmp
inc
popf
in
mov
movsl
jp
ja
dec
xor
js
pop
add
fsubrs
or
or
pop
icebp
or
into
push
mov
cmpsl
pop
jb
out
pop
scas
dec
push
js
int
dec
enter
fcoml
pusha
daa
xchg
mov
adc
imul
mov
adc
xchg
sbb
pusha
push
gs
inc
sub
mov
aaa
rcrb
aad
sub
dec
lret
jo
bound
dec
and
push
fwait
or
jmp
pop
nop
sbb
fidivrs
mov
mov
push
cmp
mov
sub
jnp
mov
mov
lret
idiv
outsl
jne
jno
lahf
ss
sbb
dec
repz
add
mov
and
stc
cmpsb
mov
push
fmuls
fimull
push
test
or
cltd
aam
sub
push
loop
and
cmc
pop
loope
sbb
pop
shlb
mov
push
sbb
dec
xchg
or
sub
mov
cltd
cltd
std
jl
adc
adc
cli
adcb
pop
js
mov
int3
add
rorb
pop
leave
lods
xchg
inc
loop
pop
jg
xchg
ljmp
mov
cmpsb
aam
push
mov
lock
sub
aas
add
insl
cmp
or
mov
aad
sub
mov
movb
cmp
xchg
push
dec
cmp
push
mov
cli
fisttpl
adc
sti
bsf
fdivrl
mov
pop
pop
dec
sub
outsl
push
iret
insb
xchg
int3
scas
inc
xchg
xor
mov
xchg
mov
xor
lock
stc
fdivrs
mov
sbb
mov
inc
push
outsl
jecxz
jecxz
mov
add
pop
push
xor
inc
daa
dec
inc
leave
bound
or
or
imul
stc
jnp
xor
iret
push
push
je
push
jmp
sti
adc
pusha
loopne
gs
sbb
add
pop
add
iret
mov
push
rep
push
jnp
xor
cmp
loopne
sbb
jns
call
jp
pop
xor
sti
jo
push
cli
in
sub
xchg
xchg
push
cmc
cmpsl
and
cmp
loop
cmpsb
test
inc
clc
mov
outsl
in
lcall
mov
mov
cli
jecxz
pop
or
iret
add
jae
scas
daa
fistpll
dec
xchg
std
les
mov
jecxz
ljmp
jae
jno
subb
mov
scas
pushf
int
add
out
gs
out
in
sahf
ss
fwait
inc
dec
and
repz
iret
adc
cmc
std
mov
push
cmp
push
xor
into
pushf
pop
out
out
test
fidivs
sbb
loope
sbb
adc
mov
je
xchg
cmp
pop
mov
cli
sub
add
mov
pushf
test
inc
inc
xor
jne
pop
aaa
mov
mov
inc
out
sbb
shlb
mov
xchg
scas
jae
lcall
sbb
ds
fmuls
xor
mov
out
loope
mov
rolb
hlt
popa
inc
aad
lret
adc
add
xor
push
mov
hlt
cmpsb
fidivl
inc
dec
repz
arpl
xor
pop
sbb
divl
inc
dec
mov
jecxz
inc
daa
mov
jp
sbb
sub
mov
in
ja
aaa
int3
inc
jo
cld
jns
insb
jle
mov
arpl
inc
xchg
xchg
mov
test
xchg
pop
sbb
xlat
push
xor
or
mov
in
inc
adc
adc
or
add
jns
ljmp
xor
cmc
cmpsb
mov
jge
icebp
mov
inc
mov
std
and
jne
sub
imul
pop
pop
jb
pop
ret
mov
in
movsb
leave
jbe
in
adc
mov
movb
ss
xor
xor
popa
push
mov
and
es
push
or
clc
es
xor
or
push
and
pushf
addb
xor
inc
jo
roll
sarl
rcrb
clc
sub
sub
into
sti
cmp
xchg
hlt
push
push
aam
pusha
pop
aad
and
cmpsl
sbb
mov
push
lcall
sahf
push
pop
popa
out
sarl
xchg
daa
mov
sbb
mov
fs
stos
lss
testb
mov
lock
mov
xchg
jmp
repz
dec
stos
cltd
inc
pop
je
jp
xchg
jno
shlb
insl
sbb
in
xor
rcrb
fistpll
loopne
jge
xor
mov
mov
insl
in
test
int3
mov
sbb
dec
mov
inc
jns
and
fwait
lds
inc
pusha
xchg
fldl
inc
sbb
out
push
mov
and
add
mov
cmpsl
ret
mov
mov
test
cli
xchg
sti
in
sbb
gs
outsl
ret
mov
adc
pop
into
andb
sub
add
mov
push
pop
fdivl
cmp
int3
sub
je
bswap
and
movsb
xor
pop
jge
lds
mov
push
jo
ret
andb
sub
shlb
cmp
jns
sbb
call
loopne
mov
lea
and
outsb
lahf
lock
scas
dec
push
test
mov
sbb
jo
mov
or
add
cmpsl
subl
lods
or
and
dec
fadds
sub
jb
sbb
in
adc
pop
clc
insl
sub
leave
imull
xchg
xchg
dec
andb
mov
lds
xor
jno
push
jge
pop
cs
enter
fimuls
xchg
mov
jne
ret
andb
aam
jo
popf
jno
xor
sti
jne
popf
clc
in
mov
mov
mov
sarl
pop
and
pop
mov
inc
gs
xor
call
test
mov
stos
dec
loop
jl
enter
add
mov
rclb
in
cltd
xor
xchg
xchg
lahf
mov
push
aam
loop
and
adc
pushl
add
sarb
pushf
inc
popf
or
test
int3
xchg
or
ljmp
addb
mov
push
mov
out
xor
fs
and
shll
mov
rcrb
shlb
loop
sbb
fidivl
lock
cmpsl
or
enter
sbb
cs
push
lcall
or
dec
sbb
mov
fcmovbe
roll
dec
cltd
jbe
dec
pop
push
in
cltd
pop
dec
mov
fldenv
shll
test
scas
xchg
in
out
add
push
in
xchg
jo
scas
add
mov
pop
loopne
jecxz
mov
or
nop
mov
jne
rol
push
fdivp
push
lods
and
mov
jge
fisttpl
jecxz
adc
es
jl
into
loopne
je
sub
pop
fsubl
mov
inc
ds
stos
xor
add
aam
pop
hlt
mov
inc
pop
shr
data16
cmp
fdiv
lock
pop
cld
jns
mov
cmpsb
xchg
out
xchg
sbb
call
int3
sub
xlat
add
xor
movsb
inc
jecxz
or
sub
xchg
lods
xchg
fildl
jp
adc
inc
cmp
stos
mov
in
inc
aaa
pusha
jecxz
ret
andl
cmp
cli
hlt
fldl
sarb
repz
lahf
adc
cmp
test
lods
sbb
call
xor
jg
aaa
inc
mov
xor
or
sbb
sbb
pop
xor
mov
cmp
test
mov
push
rorb
mov
addr16
movb
into
jle
and
mov
or
xchg
and
and
lcall
leave
adc
lds
pop
or
aaa
or
popf
jp
dec
inc
xorl
jnp
jp
dec
fdivs
roll
push
mov
cmp
dec
fwait
cmp
pop
lods
jp
adc
imul
das
subb
vunpckhps
fdivrp
push
clc
cmpl
add
jmp
push
xlat
ret
dec
movsl
sub
lea
outsl
std
aam
test
xor
add
jecxz
push
push
dec
push
jnp
mov
push
inc
mov
int
out
loop
fimuls
add
jp
in
mov
adc
aas
clc
arpl
xor
aam
sbb
ffreep
adc
mov
sub
repz
push
and
sarl
push
fnstcw
stc
and
call
lret
jno
jbe
cmp
inc
mov
adc
std
addr16
bound
arpl
jmp
insb
test
mov
jge
popf
sub
pop
xor
jno
movsl
cmp
mov
aam
addl
push
insb
es
xchg
add
sbb
nop
lea
cmpsl
insl
dec
and
sbb
add
or
and
imul
mov
dec
repnz
mov
fistl
pusha
mov
imul
lea
rcll
mov
dec
fsts
std
inc
push
imul
lret
mov
pop
cmp
daa
push
push
movsl
daa
mov
mov
mov
mov
popf
xor
mov
lods
shlb
add
rorl
or
jb
je
jbe
outsl
ja
or
add
sub
xchg
cmc
inc
mov
movsb
daa
or
nop
sarb
ljmp
xor
dec
leave
test
sbb
sahf
aas
jecxz
jmp
xchg
jecxz
cli
fistpl
add
adc
mov
mov
jnp
add
pushf
push
xchg
mov
loopne
movb
insb
sbb
std
rorb
addr16
popf
sbb
dec
jae
jae
xchg
jle
sub
repz
jae
stc
dec
scas
lea
cmp
fidivrl
imul
pop
test
jl
int
mov
xchg
aad
inc
insb
outsl
push
out
cmpsl
add
lock
hlt
jmp
mov
jl
clc
dec
mov
push
insl
ja
ficoml
lods
mov
stc
jb
add
in
cmp
mov
xchg
test
pop
hlt
dec
xchg
jge
push
or
sbb
xchg
shll
dec
adc
lcall
and
pop
mov
jle
fistpl
xchg
mov
cltd
shll
cmp
sub
shll
dec
gs
xor
sbb
and
or
inc
pop
mov
frstor
jae
mov
push
or
xchg
jecxz
mulb
pop
adcl
addl
jbe
test
jl
xchg
sub
mov
mov
roll
xor
aas
stos
aaa
in
add
stc
insb
je
in
inc
inc
movsb
push
imulb
popf
adc
dec
cmp
push
inc
and
sub
lock
aam
ss
sbb
dec
rclb
inc
sbb
adc
pop
inc
mov
and
cwtl
icebp
jo
pop
jge
es
jae
cmp
fdivrl
sbb
outsl
xor
mov
stc
into
repz
cwtl
lods
push
sti
and
js
insb
into
jecxz
mov
enter
stos
adc
test
mov
test
pop
jmp
inc
cmpsl
cmp
mov
repnz
rorb
add
add
jge
fwait
imulb
rorl
push
adc
xchg
cmp
cmpsl
or
jb
jl
lret
mov
ret
outsl
xchg
fnsave
mov
pusha
fistl
push
mov
outsl
mov
test
and
add
mov
data16
adc
je
icebp
sub
mov
cwtl
xor
pusha
insb
lret
mov
xchg
imul
jp
xchg
loopne
xchg
push
jno
push
out
add
or
add
out
arpl
cs
gs
cli
out
std
dec
lret
cwtl
jne
jns
add
add
es
dec
test
push
jle
popf
mov
adc
stc
les
testb
mov
xchg
ds
xchg
aas
xor
stc
mov
adc
add
js
fidivrs
inc
sarb
dec
lret
test
mov
ss
push
orb
sbb
arpl
scas
mov
pop
dec
cmp
dec
std
rcrl
movsl
cmp
les
clc
fdivrs
imul
jl
push
popa
adc
mov
xchg
mov
mov
cmp
cmc
subb
bound
cmpl
test
sbb
gs
xchg
pop
das
imul
and
xor
cli
jl
pusha
mov
or
or
sub
jle
mov
es
jle
mov
jl
cmpsl
jns
sub
push
sub
xor
mov
push
rcl
daa
or
imul
jae
mov
into
xchg
xchg
test
and
test
xchg
push
sbb
mov
out
fcomp
faddp
inc
cld
pop
add
fcomps
fs
fisttps
push
cmpsl
int3
inc
mov
lods
iret
clc
enter
das
mov
movsl
les
cwtl
and
and
in
imul
mov
push
mov
sbb
xchg
iret
sbb
shlb
jb
shl
fisubrl
inc
stc
mov
mov
int
jle
cmp
mov
arpl
out
fdecstp
stos
pop
cwtl
pop
fadd
pop
mov
mov
cmpsb
jo
clc
es
xchg
xlat
fucomip
call
shlb
lcall
xchg
movsb
stos
push
lcall
lea
sub
xor
push
xor
xchg
add
add
jl
xchg
inc
pop
xchg
jno
or
xchg
and
or
cmp
push
daa
es
clc
jecxz
aam
dec
adc
adc
mov
repz
jo
cmp
outsl
sbb
and
cmpsb
insl
test
push
int3
mov
shl
int
ffreep
out
and
in
es
mov
loop
xorb
push
dec
lcall
mov
or
int
jb
dec
dec
push
outsb
inc
or
mov
ret
idivl
test
es
int
mov
push
int
push
mov
stc
popf
imul
sub
and
les
fcompl
int
and
xchg
mov
pushf
and
cwtl
shll
adc
mov
das
mov
inc
outsl
bound
mov
fildll
call
sub
adc
or
nop
mov
adc
pop
xchg
adc
jb
test
add
in
and
stos
dec
aam
lret
je
lret
nop
lret
jno
jne
dec
stos
cmc
mov
fwait
mov
nop
pop
stos
fucomp
rorl
push
xor
mov
xor
xor
addr16
push
sub
lods
or
xor
scas
dec
and
cld
mov
cmp
xor
push
xchg
sub
push
aaa
jns
imul
xor
jbe
mov
mov
aam
mov
jecxz
sub
mov
pop
mov
lea
dec
sbb
xchg
jns
shrb
mov
jne
or
pop
push
mov
inc
adc
xor
xchg
inc
jne,pt
divb
mov
pop
je
sbb
outsl
mov
pop
roll
cmpsl
andl
cmp
mov
repnz
cmpsb
push
ret
ret
pop
mov
nop
xchg
mov
fld
adc
arpl
ret
sub
arpl
mov
popa
fsubrp
outsw
mov
outsb
cli
in
dec
pop
and
rorb
into
rorb
lcall
fs
xor
pop
arpl
into
cmp
jns
mov
mov
jne
addr16
xchg
jnp
test
and
mov
inc
stos
pop
aam
scas
jne
adc
push
mov
bound
stos
pop
jno
cs
xlat
mov
lahf
mov
mov
sub
loop
cmpsb
shl
mov
jne
stc
sbb
in
mov
loop
std
and
sahf
push
or
arpl
pop
ja
addr16
lahf
adc
jno
movsb
dec
ja
xchg
popf
sbb
sbb
dec
dec
jmp
jae
push
sarl
jnp
adc
xchg
test
push
jbe
xchg
sahf
mov
rorb
jge
testl
xor
mov
out
push
cli
dec
lea
fstl
jae
cmp
cmp
mov
xor
shll
shrb
jae
adc
adc
dec
sub
fsubrl
push
mov
xor
icebp
adc
aas
ljmp
jl
xor
pop
inc
ja
and
cmp
adc
mov
mov
adc
and
add
ret
pushf
sub
iret
push
sbb
loopne
neg
xchg
cli
jmp
add
add
push
add
mov
add
add
pop
add
mov
add
add
add
add
add
fwait
add
incb
add
add
add
cmp
add
add
push
add
add
add
rolb
push
add
jp
add
add
inc
add
add
adc
in
in
verr
dec
inc
add
add
out
stos
stos
pop
add
js
push
js
js
int3
int3
int3
lods
add
jl
add
and
outsb
fs
mov
add
cld
add
mov
add
sbb
add
insl
add
or
gs
add
add
add
pushf
add
sub
add
add
add
add
add
cld
gs
inc
test
outsl
ja
dec
add
push
pop
mov
xor
addl
xchg
leave
push
incl
push
insb
lea
push
adc
mov
add
add
aad
clc
int
adc
setle
jns
mov
mov
cmp
add
push
add
push
jmp
mov
add
cli
lea
imul
sub
add
adc
imul
or
test
jne
add
lods
decl
adc
out
add
add
pushl
push
decl
adc
jl
pop
sub
or
mov
add
jne
and
push
add
jl
add
add
add
add
add
add
mov
je
inc
jns
inc
dec
sbb
inc
imul
outsl
push
jmp
inc
mov
je
pop
insb
outsb
insb
je
dec
arpl
inc
fs
push
xor
jb
mov
sahf
xchg
push
jmp
cs
arpl
js
push
add
pop
add
sbb
add
add
add
mov
add
sbb
add
add
add
add
add
add
pushf
add
sub
lea
push
push
cmc
and
mov
mov
and
fs
xor
or
icebp
jo
sub
dec
fs
mov
sub
int
fildll
sahf
xchg
add
sbb
mov
push
test
lcall
std
mov
in
jae
ja
pop
mov
addr16
out
outsl
push
push
push
dec
sbb
lods
mov
lret
xor
inc
mov
dec
sub
jno
pusha
je
sub
inc
xchg
add
push
or
movsb
into
sbb
sub
mov
lret
sub
testl
nop
cmp
pop
jnp
pop
xlat
jnp
ret
test
in
repz
xchg
ret
sub
and
adc
xchg
mov
orb
fnsave
pop
jo
xchg
call
mov
mov
es
icebp
mov
mov
or
ss
add
pop
movsl
cmp
adc
inc
mov
ljmp
jns
mov
and
pop
xor
inc
adc
shrb
adcb
dec
outsb
imul
cmp
pop
dec
pop
and
out
roll
xchg
sbb
fsts
xchg
fstpl
es
int3
mov
xor
insl
into
jecxz
jp
dec
xchg
cli
flds
ja
rol
leave
xor
xor
int
sub
or
pop
push
loope
dec
xchg
push
and
mov
pop
add
mov
out
fcoml
xor
ret
aam
dec
sti
inc
jno
out
or
push
and
dec
xchg
push
jns
adc
cld
ficompl
lea
pop
in
arpl
and
rorb
mov
mov
xchg
cmpsb
daa
stos
fistpl
pop
mov
insl
pop
lods
inc
out
pop
pavgb
mov
pushf
fs
popa
inc
cld
loopne
jb
into
push
gs
pop
repnz
push
cmpl
lcall
lea
mov
dec
pop
repz
mov
hlt
push
cmpsb
in
adc
add
popf
iret
xor
ret
xchg
mov
daa
out
stos
inc
insb
clc
cmpsb
and
adc
push
cmp
ja
jbe
insb
adc
adc
pusha
inc
out
cmp
inc
cmpsl
or
lret
mov
sub
stos
inc
push
adc
mov
sahf
jns
cmp
pop
repnz
data16
mov
aad
pop
add
daa
add
jp
jl
jae
mov
inc
cld
movsl
or
push
or
addr16
lret
and
jmp
or
mov
fists
mov
mov
pop
adc
fisubl
jle
loopne
stos
rolb
sahf
cwtl
mov
jl
and
rcrl
add
mov
les
jns
fisubl
ja
aad
lahf
fisttps
mov
jo
or
fsts
xorl
nop
shlb
jne
xchg
repnz
xchg
aaa
pop
sbb
scas
ljmp
dec
inc
rcll
mov
pop
pusha
loop
imul
aad
mov
testb
cs
jge
in
add
dec
push
ja
lods
outsb
add
mov
fnstsw
aaa
dec
push
lcall
or
adc
xchg
popa
push
int
push
jo
movsb
sbb
xchg
shlb
cmp
cmp
pop
stos
fisubs
add
aad
dec
push
fisttps
sbb
cs
sub
leave
mov
push
outsl
daa
or
mov
jle
lret
fildll
bound
add
dec
mov
pop
mov
lcall
stc
xlat
stos
fsubl
inc
and
lock
push
lock
sbb
jl
inc
insb
js
adc
jo
enter
xchg
cmpb
mov
stos
sbb
pop
mov
sub
lahf
pop
cmp
pusha
jl
lods
xchg
jmp
stos
mov
fcmovnbe
pop
push
and
cltd
mov
adc
pop
fistpll
pop
in
adc
lcall
mov
inc
xor
pushf
inc
loop
pusha
inc
testl
jae
jmp
push
mov
push
sbb
cwtl
popa
sbb
xlat
cli
mov
push
ss
adc
out
movsl
js
in
mov
jle
adc
fdivs
jl
dec
lret
sarb
pop
es
pop
int3
sub
cmp
jg
mov
std
dec
adc
dec
pop
add
sbb
mov
divl
es
pop
popa
inc
mov
jmp
xlat
xchg
inc
pop
mov
or
sahf
pushf
aaa
pop
shlb
fnstenv
loope
movsb
aad
outsl
enter
jl
loop
xor
lahf
rol
imul
inc
xchg
movsl
cmp
or
fdivrl
mov
jle
test
xchg
or
push
jbe
push
adc
dec
in
mov
pop
lock
mov
sub
lea
push
movb
sub
adc
mov
ss
cmp
lret
jae
xor
stc
fldenv
ljmp
add
mov
xor
arpl
jecxz
pop
in
jecxz
mov
mov
cmpsl
lret
sub
fcoml
add
cmp
mov
jo
mov
test
mov
in
inc
sub
jns
sbb
mov
xor
daa
dec
sub
cs
stos
and
xor
add
and
dec
lret
inc
fs
push
lret
jbe
mov
add
lods
inc
inc
repnz
adc
mov
mov
sti
dec
jmp
adc
mov
cmp
xchg
mov
rorb
pop
add
mov
data16
adc
lahf
mov
mov
shll
sub
dec
aas
std
fistps
push
inc
movsb
jno
scas
shl
imul
xchg
mov
push
cmp
xor
dec
inc
xchg
out
mov
in
xchg
or
mov
xor
bound
mov
adc
cmp
push
or
sub
popa
mov
jae
mov
in
adc
loope
mov
and
roll
cmp
sub
inc
scas
mov
or
pop
xchg
in
inc
inc
out
test
mov
jne
inc
cmp
std
adc
mov
adc
inc
fwait
gs
lds
nop
push
pop
push
mov
bound
movsl
push
pop
sub
divb
es
in
lahf
or
cmc
ret
pop
mov
or
mov
mov
xor
and
scas
add
mov
gs
in
movsb
test
mov
adc
jle
or
push
repnz
inc
mov
mov
mov
hlt
push
cwtl
movsl
lahf
fs
aam
daa
xchg
mov
mov
out
mov
addr16
xor
ja
cmp
test
xchg
ja
shll
pushfw
pop
dec
xchg
jne
or
and
mov
call
adc
sbb
push
mov
shlb
or
push
pop
sub
out
add
jo
xor
jl
jb
loope
pop
cmpl
mov
sub
push
insl
lods
add
jmp
dec
and
insb
aas
mov
data16
pop
ret
lret
call
or
fdivl
fs
test
gs
push
jge
fstpl
mov
les
test
cmp
add
mov
pop
dec
mov
sub
adc
mov
sub
icebp
in
fistpll
mov
xchg
jo,pt
cmp
mov
push
inc
dec
pop
or
or
mov
push
in
cmp
cmpl
pop
sbb
mov
or
in
push
mov
bound
sahf
lods
xor
adc
or
push
xchg
inc
pop
push
in
lea
mov
aam
push
fwait
xchg
lret
dec
les
add
loopne
enter
sbb
mov
pop
idivb
jbe
mov
add
in
cltd
gs
sub
push
or
jmp
cmp
std
mov
pushf
cmp
test
shll
std
and
sar
dec
cmp
dec
repz
in
pop
mov
inc
jg
dec
xchg
cmpsl
stos
clc
lret
mov
mov
jo
xlat
js
scas
fistpll
mov
pop
cmp
ss
or
addps
dec
add
push
sbb
insb
sub
aas
mov
add
lahf
jge
imul
xchg
sbb
xchg
hlt
inc
mov
insl
cmp
cmp
roll
mov
sbb
idivl
sub
ds
lods
mov
pop
enter
xchg
xchg
mov
pop
jnp
pop
dec
nop
push
mov
xor
cltd
push
fmuls
aad
popa
sub
and
jp
inc
and
sub
pop
ret
pusha
int3
inc
pop
out
and
rol
cmc
mov
mov
add
mov
xlat
mov
cmc
mov
loope
enter
ja
pop
mov
mov
arpl
insl
lret
std
lods
sub
int
xor
lret
adc
repz
xchg
xchg
insb
ret
sti
dec
xchg
popf
push
mov
push
inc
cmpsb
xchg
fs
inc
or
mov
adc
xor
jmp
inc
and
movsb
dec
and
mov
jg
lods
add
out
aaa
push
push
stc
xor
cmp
dec
lret
test
jp
jns
mov
mov
dec
push
sbb
xor
push
repz
lcall
rol
mov
fdiv
int3
xlat
nop
and
pushf
inc
clts
jns
imul
xchg
sbb
jne
cmc
test
fsubr
lea
movsl
orl
sbb
in
rol
mov
dec
repnz
pop
addr16
daa
xchg
mov
mov
mov
popf
cmp
dec
xchg
std
idivb
ljmp
or
xchg
dec
mov
ljmp
or
pop
adc
jae
int3
in
idivb
jo
rclb
stos
cmpb
push
jle
cli
or
sbb
push
xor
sahf
sti
mov
xor
or
lret
shlb
jge
stc
xlat
cltd
push
icebp
cmp
in
fcmovbe
push
div
repz
sub
xor
pop
pop
xchg
shll
or
push
addr16
or
or
in
leave
sti
mov
js
xchg
jmp
aam
pop
leave
or
dec
jp
lods
dec
cmp
pop
and
inc
push
xor
and
xchg
cmp
outsl
cmpsl
jle
xlat
cmp
cmp
ret
push
frstor
xor
lods
test
subb
stos
sbb
loopne
push
fcompl
push
movsl
movsb
rorb
mov
fwait
into
movsb
add
sub
pusha
outsb
ss
inc
jo
xor
jl
cwtl
dec
movsl
xchg
jne
push
int
xchg
ss
pop
fidivrs
inc
pop
xorb
mov
jmp
mov
push
rorb
roll
clc
pusha
fucomp
cmp
jb
xchg
or
flds
mov
das
test
or
add
ja
in
or
pop
sub
int3
out
ljmp
adc
xchg
add
jne
sbb
sub
test
rol
and
xchg
dec
mov
push
pop
and
test
mov
shl
dec
out
ds
pop
sub
jb
jnp
and
xor
pop
pop
fs
mov
fwait
testb
popa
sub
mov
orl
and
xchg
xchg
inc
pop
jbe
dec
cvtps2pi
lods
inc
jns
jnp
push
mov
cmc
je
sbb
and
js
mov
leave
push
clc
jl
imul
adc
dec
mov
dec
and
ret
jmp
bound
sbb
cmp
and
pop
icebp
int3
adc
xor
bnd
mov
fsubr
jle
pop
stc
bound
and
jecxz
ljmp
loopne
xchg
and
andb
push
sub
in
adc
dec
cmpsb
test
xchg
data16
pop
mov
xchg
enter
mov
mov
std
mov
push
sahf
cltd
xor
fnsave
notl
push
push
mov
add
lahf
pop
addr16
mov
popa
jo
repz
dec
xor
call
fistl
xor
loopne
ds
test
test
lock
dec
ljmp
sti
dec
push
mov
rcrb
mov
loopne
dec
push
sbb
or
xchg
cmpsl
test
lcall
aas
or
fcmovu
add
clc
dec
add
cmpl
dec
movsb
add
or
rol
mov
js
mulb
out
cmp
jp
jle
cli
push
scas
mov
sbbl
jmp
cmc
shlb
mov
add
jmp
mov
adc
addb
cli
sbb
addl
dec
test
clc
xor
ret
popf
sbb
stos
in
ret
arpl
jge
jbe
aas
jecxz
inc
lea
call
scas
xchg
sahf
mov
std
ret
popf
test
lcall
jns
movsb
adc
hlt
add
aas
inc
dec
dec
adc
xchg
inc
sub
call
pushf
mov
scas
mov
cmc
sub
notb
or
test
leave
xchg
fs
mov
cmp
inc
mov
mov
jmp
push
cmp
cmp
jno
in
lods
popa
xor
lods
loop
mov
ja
inc
out
mov
sahf
sub
movsl
jp
sbb
inc
pop
je
and
push
pop
in
lret
jne
mov
enter
shl
jmp
iret
pop
lods
pusha
mov
jg
lds
icebp
out
inc
inc
mov
inc
int
fnsave
pop
out
adc
arpl
das
push
ds
sub
inc
xor
int
bound
aad
pop
sbb
or
lcall
movsb
jnp
pop
mov
xor
stos
test
push
pop
and
shl
cwtl
xchg
xchg
or
add
test
jge
inc
clc
std
aas
stos
sbb
inc
shl
repnz
inc
sub
pop
lods
cmp
xchg
ds
adc
idiv
mov
xorb
sub
ja
cmpb
push
push
pop
cmp
mov
jnp
dec
mov
shl
ja
aad
push
cmc
and
xor
shlb
shlb
lods
mov
mov
pop
lds
or
cmpsb
inc
out
mov
imul
out
jle
inc
iret
cwtl
xchg
cmpsl
inc
sbb
xchg
repz
pop
or
jmp
iret
out
in
inc
sub
adcb
cmpb
cli
dec
xchg
ficoms
mov
xor
aad
in
dec
cmp
mov
pop
testb
push
popl
pop
push
stos
idivb
cmp
popa
xlat
pop
in
push
fwait
gs
pop
rclb
in
pushf
int3
fs
add
push
add
test
dec
sub
scas
in
fadds
test
sbb
dec
inc
lods
xor
cmp
mov
test
nop
fadd
sub
mull
out
fldl2t
mov
das
mov
lea
lock
mov
cltd
xchg
loop
adc
jmp
adc
test
cmp
daa
nop
push
popf
test
in
adcl
or
or
pop
enter
inc
rorl
sub
jns
inc
push
xor
scas
and
scas
mov
dec
sub
xor
std
dec
ret
test
xor
jmp
push
mov
add
divb
outsb
popa
push
xchg
xchg
das
pop
cli
test
cmc
fimuls
xor
sub
inc
rol
jmp
inc
pop
xchg
call
dec
test
lret
push
ret
mov
or
push
sbb
and
fdivrp
sbb
mov
in
insb
jl
out
pop
jg
jmp
out
mov
ficomps
cltd
xor
repz
mov
mov
adc
lret
inc
daa
rcr
adc
test
dec
push
nop
xor
cmp
lds
sarb
lret
fistps
and
and
shr
xchg
clc
sbb
cli
lret
sbb
loopne
sub
sbb
mov
pand
dec
pop
in
sub
sbb
push
popf
mov
lcall
sbb
shll
jne
ljmp
cmpsl
into
les
push
adc
jae
mov
push
fdivl
push
jg
jp
or
add
in
push
das
xchg
aaa
dec
and
add
inc
adc
dec
jno
push
lahf
fwait
sti
outsl
out
mov
shrb
addr16
sbb
sbb
xor
cld
into
fiaddl
lahf
loopne
ret
aaa
inc
insb
movb
rcr
cmp
movsb
roll
mov
sbb
push
and
pop
iret
lret
fimull
es
pop
rep
mov
fistps
cmpb
xchg
cmp
xchg
icebp
mov
pop
or
fdivrl
xchg
data16
notb
xor
and
lcall
stos
and
cmp
cld
lret
ret
test
add
pop
popa
aam
sbb
rcll
inc
or
cmpsl
std
negl
dec
xlat
inc
or
push
jno
aad
je
pop
adc
inc
jnp
or
ret
jmp
mov
bound
sbb
int3
scas
mov
clc
xor
mov
ljmp
cltd
arpl
hlt
xchg
ljmp
inc
cmp
fwait
lret
push
jbe
in
pop
sbb
arpl
stos
bound
xor
pop
lock
xor
inc
pop
or
call
dec
in
movsb
add
das
pop
aad
jecxz
push
add
jg
popa
popf
adc
cwtl
cli
loopne
jle
pop
mov
dec
jnp
pop
leave
mov
jns
mov
int3
xor
mov
dec
insl
or
aaa
ja
js
fcoml
popa
dec
pop
loop
push
pop
shrb
mov
outsb
mov
fwait
lds
xlat
cld
mov
inc
mov
jns
cld
ret
and
in
mov
jge
inc
int3
xor
inc
sbb
out
outsb
mov
cmp
jmp
push
sub
adc
jo
repnz
sub
int
data16
xor
push
xorb
movsl
push
loop
stc
movsb
ja
jbe
das
shlb
insl
pop
adc
mov
xchg
or
fstps
sub
test
stc
and
gs
icebp
push
stc
test
sti
add
shr
push
test
sbb
stos
popa
adcb
push
int3
mov
mov
or
lret
imul
pop
clc
aaa
dec
cld
sub
push
fstpt
push
shrl
frstor
xchg
xchg
inc
mov
std
fucomi
mov
enter
mov
outsb
cli
ds
inc
repnz
movsb
inc
vmovdqu
cmp
imul
daa
sub
mov
repz
sbb
push
pop
popf
idivb
xchg
cmp
push
fldt
adc
fsubs
fbld
imul
hlt
out
pop
pusha
subl
ljmp
mov
js
lret
loopne
xchg
sahf
jmp
sbb
in
add
add
cmp
add
add
add
popf
add
faddl
add
add
mov
add
add
add
add
add
add
add
mov
add
sbb
add
add
add
add
add
add
pushf
add
sub
add
jge
add
add
add
add
ja
gs
pushl
dec
int3
int3
int3
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
mov
push
mov
call
push
mov
call
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
or
mov
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
xor
add
xor
mov
mov
add
mov
mov
mov
mov
call
mov
movzbl
movzbl
sub
je
call
push
push
pushl
inc
pushl
pushl
call
mov
cmp
je
jmp
mov
mov
mov
mov
add
push
pushl
call
mov
mov
movzbl
movzbl
sub
je
addl
push
push
call
pop
pop
push
push
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
add
add
and
add
or
test
inc
mov
add
add
add
adc
add
add
inc
add
add
xchg
jo
add
add
and
add
push
sarl
add
add
add
xor
add
add
add
gs
rolb
inc
inc
cltd
add
mov
je
mov
pop
pop
fldpi
sahf
mov
sub
jmp
sbb
cld
inc
pop
in
test
inc
decl
add
cld
pop
cwtl
mov
incl
push
mov
push
push
add
ljmp
push
jns
push
push
shlb
mov
mov
mov
sub
add
push
daa
in
add
xor
scas
rcrb
jp
push
jmp
mov
call
add
sbb
xchg
loope
std
and
cld
add
mov
push
pop
push
incl
add
cmp
clc
loopne
aad
lret
sub
mov
adc
lock
push
jne
ljmp
and
add
add
add
dec
mov
add
add
loopne
add
jae
inc
add
and
stc
hlt
insl
jo
gs
xchg
push
add
jbe
je
arpl
dec
xchg
and
or
popa
jge
add
aaa
jb
outsl
imul
andb
jne
fsts
add
add
add
add
add
and
add
adc
add
add
inc
add
add
xchg
jo
add
add
add
add
xor
add
popf
hlt
dec
adc
cmp
mov
sub
mov
rcr
or
subl
cmp
scas
cmp
or
mov
imul
div
xchg
push
ret
cmpsl
add
inc
and
hlt
mov
test
mov
pop
sbb
mov
lret
cltd
call
cmp
adc
bound
pop
lds
gs
push
pop
mov
xchg
loop
stos
enter
xor
test
push
rcll
sbb
sbb
lods
pop
popf
lock
or
outsb
gs
jmp
popa
add
jns
cmpsb
movl
cmp
jge
or
std
ja
les
ret
cmp
addr16
addr16
js
addr16
fstps
aad
inc
imul
adc
lods
and
rcrl
stos
jns
daa
movl
aam
fs
jmp
mov
int
jmp
cli
mov
or
sahf
cmp
xchg
sbb
or
imull
into
aaa
mov
mov
pusha
inc
int3
test
es
nop
cmpsb
insl
push
movsb
push
arpl
loopne
mov
in
sbb
push
xor
lcall
sbb
sbb
push
addl
call
pop
jg
hlt
push
aaa
mov
jbe
popf
lret
mov
xchg
je
mov
cmpsl
cld
fs
test
add
or
pop
bound
cwtl
out
dec
mov
mov
fs
push
sub
mov
cli
adc
inc
sti
xchg
ds
dec
mov
shll
movsl
pop
push
sbb
push
mov
push
addr16
iret
cmp
jne
mov
xor
inc
cmp
int3
sub
incb
pop
fwait
outsb
mov
daa
iret
fcmovnbe
cld
test
daa
movsl
jno
sbb
enter
mov
mov
test
mov
data16
nop
imul
test
xchg
jge
inc
or
loop
aad
outsb
cwtl
test
cmp
sub
movsl
cmp
cmc
stos
rcrl
cmp
dec
pop
pop
cli
testl
pop
int3
lcall
sub
jns
push
ds
cltd
cmp
cs
push
mov
adc
jo
push
xchg
fmull
pop
mov
shl
jnp
mov
test
ljmp
fistps
xor
adc
push
cld
dec
inc
pop
insb
and
out
push
xor
and
loop
inc
insl
dec
mov
ret
retw
aaa
js
fcomps
dec
rclb
adc
outsl
pop
pop
mov
lret
stc
adc
mov
ss
mov
cli
jge
mov
mov
cmp
pushf
push
pop
cld
fadds
mov
pop
fisubl
mov
pop
cmc
cmp
jl
addr16
xor
or
xchg
gs
mov
and
daa
or
icebp
cmpsl
ss
pop
sbb
jg
jg
mov
std
in
mov
cmp
jge
sbbl
mov
mov
es
arpl
ds
mov
or
and
dec
les
inc
test
push
imul
xor
test
sbb
mov
cmp
gs
pop
or
iret
frstor
insb
out
xorl
xchg
sahf
xchg
mov
lret
push
leave
dec
mov
xchg
cmp
fs
cmpsl
pop
inc
adc
scas
sarl
lahf
push
cmp
cmpb
scas
fsubl
cs
jae
out
inc
call
dec
cli
inc
or
sbb
ljmp
jle
leave
mov
push
xor
fs
cs
movsb
js
mov
inc
sub
out
in
mov
inc
data16
xorb
jae
ss
dec
jno
mov
mov
adc
mov
cld
mov
in
lcall
clc
in
lret
pop
adc
mov
inc
mov
xlat
in
xor
or
shr
lret
jo
cli
cmc
jg
in
adc
js
xchg
loop
push
out
dec
sarl
push
xlat
pushf
mov
mov
lret
ljmp
scas
ret
andl
pop
and
jne
push
shlb
mov
adc
jp
dec
cltd
push
ljmp
jb
dec
loop
in
in
and
or
pop
aam
arpl
push
ss
xchg
sbb
rorb
mov
out
fcoms
xor
fwait
push
out
cmp
ljmp
loope
and
into
outsl
or
push
and
into
je
call
ss
lahf
mov
mov
or
scas
push
pop
sub
and
icebp
mov
popf
adc
pop
rcl
icebp
mov
repz
ret
add
ja
xchg
lcall
lods
addr16
and
out
aaa
popl
dec
push
cwtl
shrl
gs
inc
pop
and
sahf
call
cmp
in
scas
test
push
cltd
scas
jne
scas
fcmovnb
pop
mov
dec
or
std
es
int3
jmp
cld
mov
icebp
cmp
adc
xchg
daa
sbb
jns
dec
fmulp
push
pop
inc
arpl
outsl
pop
or
lods
push
ret
lods
xchg
push
in
fisubl
in
mov
or
in
or
pop
adc
and
dec
inc
movsl
push
dec
pop
and
fwait
mov
mov
lahf
jp
push
jmp
and
gs
aas
out
add
roll
xchg
nop
jae
mov
es
popf
das
add
push
insb
xchg
or
and
cli
inc
scas
push
test
rorl
fdivrs
mov
adc
inc
mov
and
and
ret
jns
cltd
xchg
adc
and
repz
aaa
fimuls
and
xor
cltd
xchg
hlt
aad
stos
inc
and
lahf
mov
and
sbb
leave
jle
jnp
dec
sub
cmp
mov
xor
into
lock
cli
lods
out
inc
jp
les
in
insl
xchg
enter
push
mov
cmp
pop
scas
jp
call
sbb
adc
jbe
jbe
sti
popf
lcall
xchg
xchg
inc
push
jmp
loop
out
idivl
jge
loop
xlat
push
jmp
pop
and
lods
imul
in
inc
scas
int3
cmp
enter
mov
cs
pop
nop
add
cld
outsb
or
mov
pop
inc
xor
mov
or
adcb
pop
mov
mov
and
icebp
mov
jbe
data16
sbb
dec
mov
cmc
movsb
test
push
outsl
addr16
ret
loop
adc
push
pop
out
mov
shlb
test
push
pushf
mov
jp
pop
mov
sbb
loopne
call
ret
cli
scas
jb
pop
dec
addb
notl
xchg
add
shr
test
lock
lcall
fiadds
mov
dec
xor
sbb
xor
out
jle
push
outsl
inc
out
outsl
adc
pop
ret
dec
gs
outsb
push
int
in
mov
nop
sub
in
jb
mov
stos
push
repnz
add
adc
sbb
and
aas
and
ja
sub
popf
xchg
push
mov
in
imul
aas
xor
mov
stc
inc
cmp
stos
lock
cmpsl
rclb
movsb
repnz
fnstsw
fnsave
xor
push
subb
aas
jmp
mov
jae
inc
stc
or
aam
mov
ss
xor
outsb
xchg
cli
xor
cmp
rolb
xor
jb
stc
in
jle
pop
cwtl
out
mov
xor
out
lods
es
jmp
xchg
cmpsb
loop
clc
les
add
xchg
jnp
mov
mulb
scas
test
popa
dec
xchg
sbb
or
repnz
pop
in
insl
pop
in
dec
inc
imul
sub
loope
dec
mov
lock
test
mov
fcoml
clc
nop
pop
js
fsts
or
data16
sub
adc
dec
mov
aad
andl
pop
dec
lret
in
aas
fmuls
push
lcall
adcb
jnp
inc
fbstp
mov
popa
rcr
jg
push
push
nop
and
call
movsb
jae
pop
in
fs
rcrl
push
mov
push
shlb
sarb
fwait
ss
fidivl
pop
mov
adc
mov
fldl
ret
cmp
lods
enter
repnz
mov
pop
xchg
xacquire
and
lea
xchg
rclb
imul
das
push
gs
or
call
arpl
dec
and
rcrl
sti
inc
dec
cmp
xchg
dec
sub
push
ljmp
jo
jp
addr16
sbbl
mov
sti
fcmove
and
sub
lret
pavgb
cmp
mov
je
push
loop
mov
in
mov
out
cmpb
adc
cmp
pushf
call
mov
push
out
dec
mov
int3
out
and
lcall
jno
pop
adc
pop
ret
push
mov
mov
out
js
ss
xchg
test
adcl
push
pop
sub
arpl
and
enter
jnp
bound
push
ljmp
pushf
test
scas
enter
pop
lock
mov
loopne
imul
push
and
add
pop
xchg
in
xchg
arpl
mov
insb
cmp
les
dec
cmp
test
fistpll
shll
sub
lret
dec
mov
int
out
inc
das
stos
jo
xchg
sub
adc
inc
fisttpll
and
mov
les
or
test
rolb
push
cmpsl
daa
mov
leave
test
pop
jno
stos
pop
dec
mov
js
lret
xor
rolb
and
dec
cmc
daa
pop
jge
popaw
push
add
pop
stc
mov
dec
mov
pop
inc
testl
nop
imull
inc
test
xor
andb
inc
push
add
cmp
es
mov
sub
decl
leave
jp
sub
repnz
cmpb
mov
push
xor
pop
mov
jns
les
sub
mov
lret
dec
xchg
sbb
and
mov
mov
mov
cs
inc
mov
mov
add
imul
loope
mov
xchg
jno
sub
pusha
adc
lock
xchg
cmpsl
js
xlat
dec
sbb
aaa
sbb
mov
or
aad
inc
cmpsb
sbb
mov
add
sub
fdivs
hlt
movsl
inc
lock
sbb
xor
lods
movb
dec
aas
adc
mov
mov
fildll
mov
inc
inc
jge
std
sar
shll
dec
or
dec
mov
cmp
add
sub
cltd
mov
cmpl
sbb
mov
loope
or
xor
imul
or
rorb
mov
cmp
dec
add
fdivs
mov
mov
enter
mov
call
shrb
inc
cmpsb
sbbb
into
mov
int3
sbb
mov
jbe
cs
mov
sub
xor
hlt
mov
jp
mov
adc
fs
out
push
jmp
aaa
into
or
in
fistps
xlat
add
mov
and
add
and
xor
mov
add
mov
int
fidivl
into
sbb
sub
addr16
daa
pusha
mov
mov
push
mov
out
aad
sub
mov
mov
lret
sbb
mov
loop
dec
fiaddl
fstp
xchg
addr16
jno
mov
imul
dec
loop
jae
or
xor
mov
mov
data16
jne
stos
sub
and
jle
in
sub
mov
out
insb
js
xor
repz
mov
xchg
hlt
mov
adc
xchg
icebp
cmp
sub
fstl
jp
aam
inc
out
xchg
and
add
pop
mov
scas
mov
iret
pop
ret
test
rclb
push
ja
jge
inc
push
mov
cli
jo
push
xorl
cmp
enter
sbb
cmpsl
nop
sub
cmp
inc
mov
lods
cmp
call
pushf
dec
mov
icebp
stos
jb
add
ret
mov
hlt
mov
lods
dec
jae
and
xor
or
popf
enter
xchg
pop
xlat
cwtl
scas
xchg
adc
imul
pop
mov
scas
jne
cmp
push
push
pop
and
adc
sbb
xchg
jge
pop
and
aam
lods
data16
ss
mov
mov
sbb
lods
push
lods
xor
push
pusha
dec
xor
xor
xchg
lods
incl
ja
jae
stc
in
pop
addr16
cmp
clc
and
std
movsl
cmp
inc
jp
jmp
mov
outsb
rorl
test
jae
shrl
push
xchg
jmp
dec
cmp
or
dec
and
xor
out
jmp
xchg
xor
cltd
push
imul
add
ss
sti
bound
pushf
js
fistpll
rorl
mov
bound
hlt
jmp
divl
arpl
adc
mov
pop
inc
mov
lret
xor
ja
outsl
lret
sub
mov
mov
jmp
leave
jo
jmp
pop
cmp
mov
rorb
pop
pop
push
ljmp
outsb
pop
sti
cmc
xor
pop
jmp
xchg
lcall
sub
jbe
mov
cmp
sub
xchg
and
pop
test
loopne
int3
mov
iret
fldenv
test
lods
cs
mov
mov
lea
hlt
ds
mov
lock
repnz
cld
std
and
push
not
cmp
cmc
and
jbe
add
andl
popa
popf
std
in
imul
cmc
in
sub
popf
and
mov
imul
push
cli
mov
das
inc
rcrl
sub
pushf
jg
cli
push
xchg
mov
jecxz
mov
fcmovne
sub
cmp
xor
enter
mov
stc
outsb
pop
inc
mov
sub
scas
orl
adcb
xchg
imul
in
jp
pop
sti
cltd
mov
pop
lds
ss
add
std
push
dec
push
jmp
aas
cmp
or
mov
and
adc
pop
pop
or
xor
inc
pop
jno
push
pushf
imul
and
lret
pusha
pop
iret
inc
outsl
lds
lret
jmp
jo
pushf
adc
mov
cmp
cmp
mov
movsb
loopne
cs
fnstsw
mov
nop
mov
inc
pop
andb
movsl
loopne,pn
mov
or
xchg
lcall
icebp
sbb
aam
popw
jbe
test
scas
mov
xor
mov
sub
pop
push
xor
push
int3
iret
imul
pop
das
into
jno
and
push
pop
icebp
xor
mov
mov
sbb
mov
push
mov
lret
mov
xor
repz
loop
jle
xchg
lcall
cwtl
fdivrl
shlb
sbb
push
in
and
fists
pushf
mov
mov
inc
in
sbb
in
stos
xlat
and
aas
ja
out
pushf
in
mov
cli
sti
inc
add
cmp
scas
pop
dec
sbb
clc
in
lods
jo
jecxz
loope
dec
add
mov
filds
cmpsl
add
or
pop
jecxz
imulb
lods
ja
mov
add
cltd
cmp
dec
pop
mov
outsb
aas
lea
aam
out
or
sti
pop
or
ds
repnz
vmovupd
push
rcr
jmp
mov
je
jle
test
repnz
movsl
and
aam
pop
arpl
jge
ss
adc
popa
test
faddp
loope
mov
cmpsl
xor
je
stos
jmp
mov
or
sbb
mov
stc
enter
std
xchg
cmp
jne
xlat
roll
lds
in
cmp
fcompl
jae
xor
add
xchg
xor
mov
jo
sub
mov
xor
mov
jecxz
popa
enter
cwtl
xorb
xchg
sub
xchg
mov
lret
insb
imul
pop
int
iret
adc
cmp
pop
cmp
jae
adcb
push
lea
sbb
std
sbb
icebp
nop
adc
mov
mov
jns
inc
adc
or
xchg
or
pop
test
cmpsl
mov
jbe
jmp
lcall
cmp
icebp
xchg
jmp
cwtl
cmp
pop
mov
push
xchg
rcr
adc
xchg
addr16
push
cltd
sbb
lock
ss
pop
jns
ds
pushf
dec
ljmp
in
lods
sbb
sbb
add
loope
subl
pop
stos
dec
pop
and
cmpb
in
jne
cs
movsl
repz
ja
stc
enter
lret
imul
mov
leave
dec
mov
cmp
fbld
lods
add
xchg
jnp
lret
mull
or
in
data16
push
or
cld
dec
pop
cmpsl
mov
sub
test
adc
add
mov
gs
cli
js
push
jne
and
jb
xchg
std
or
ss
rcl
push
call
mov
icebp
sub
mov
mov
popf
outsl
jl
mov
lcall
xchg
pop
and
test
ret
or
cltd
cltd
jnp
sub
out
dec
xor
lret
shll
and
mov
pop
imul
jno
enter
jae
pop
stc
sbb
in
xor
ss
jmp
pop
popf
pop
sarl
dec
test
cmc
imul
daa
orb
dec
loop
call
movsl
cwtl
test
push
shrl
ja
in
inc
mov
mov
insl
aaa
les
push
sub
repnz
add
xchg
into
lds
adc
scas
pop
push
xchg
push
xchg
ljmp
stos
fisttps
and
mov
or
arpl
xor
in
test
inc
push
xchg
inc
push
out
loopne
add
sub
jle
mov
shll
lret
enter
pop
xor
jb
mov
std
cmp
mov
jne
test
imul
pop
push
push
jmp
jb
cmp
sub
and
stos
in
xor
sti
clc
ftst
dec
test
mov
int3
fmull
jnp
mov
adc
dec
and
add
add
movsb
insb
add
push
push
mov
cwtl
lods
out
xchg
add
sbb
mov
nop
ss
popa
or
add
cmp
add
add
movsl
pusha
add
add
jne
add
add
inc
rolb
add
adc
add
and
add
add
add
add
add
add
and
add
adc
add
add
inc
add
add
xchg
jo
add
add
add
add
xor
add
add
xor
add
add
pushl
stos
stos
add
xor
ljmp
dec
mov
add
je
insl
add
add
sub
add
add
add
dec
or
fildl
add
add
add
mov
add
add
add
jg
add
add
add
add
sti
dec
add
ds
pop
imul
push
pop
emms
gs
add
and
ja
mov
faddp
add
add
js
add
add
push
fstpt
outsb
mov
orb
inc
cmp
call
or
or
jmp
test
mov
fwait
adc
jnp
mov
dec
inc
shlb
add
add
js
xchg
add
add
adc
xor
push
pop
xor
adc
test
lea
add
ljmp
popf
es
decl
std
je
adcl
repz
sarb
xchg
cld
add
repz
pop
jne
dec
test
push
incl
pop
jne
xor
add
lret
stc
dec
clc
jmp
add
adc
add
jmp
insb
mov
add
add
fstpt
sub
add
pusha
jnp
add
add
insl
lods
roll
inc
in
jne
adc
jo
push
inc
imul
insl
jne
je
inc
gs
inc
mov
inc
add
push
imul
sbb
insb
insb
js
gs
jne
outsb
jb
xor
inc
incl
fwait
add
fildl
add
add
add
jnp
add
add
add
dec
add
fildl
add
add
add
mov
add
add
add
sbb
add
add
add
mov
dec
ds
lret
popa
cltd
sbb
int3
lds
sbb
popa
mov
adc
std
mov
jb
mov
imul
icebp
mov
inc
jp
fimull
sbb
push
or
mov
inc
cmp
cmp
enter
stc
daa
loopne
cmpsl
xchg
mov
or
mov
imul
aad
fmulp
outsl
test
xchg
movsb
pop
arpl
cs
aad
cwtl
push
or
mov
xchg
je
cmp
addr16
mov
aam
out
mov
cmpsl
add
sahf
mov
push
jae
mov
push
mov
lret
and
jns
pop
xchg
cmp
repnz
xchg
ret
inc
mov
lret
cwtl
movsl
pop
xchg
outsb
adc
jmp
pop
push
mov
sbb
in
subb
je
pop
mov
loopne
iret
adc
outsl
scas
out
scas
sti
sarb
fsqrt
ljmp
std
fst
test
jecxz
mov
inc
fcomip
das
sti
inc
test
sbbl
cmc
jp
push
sub
cmpsl
les
jmp
jmp
inc
mov
dec
push
jmp
divl
pop
insb
fsubrl
cmp
rorl
pop
xlat
popf
dec
mov
cwtl
dec
lods
sahf
sub
lods
fiaddl
xor
push
push
push
dec
out
sahf
sbb
fmuls
jmp
jo
in
mov
xchg
jns
xor
cmp
or
cld
mov
inc
xor
pop
aam
and
dec
sub
xchg
movsl
addr16
imul
dec
jmp
or
lret
scas
inc
inc
xchg
mov
xlat
into
jbe
mov
ds
arpl
xlat
mov
iret
xchg
xor
mov
daa
mov
dec
pop
mov
pop
arpl
std
xchg
mov
gs
mov
sbb
push
loope
push
into
xlat
push
rcll
out
jae
scas
test
xor
fldt
std
outsb
push
das
and
repnz
dec
loop
pusha
xor
in
lret
inc
mov
pop
xlat
in
test
les
xchg
fsubl
aam
jbe
inc
jnp
icebp
mov
add
sub
addr16
ds
jo
xchg
pop
push
scas
cs
lods
xchg
filds
cmpsl
dec
daa
into
psrad
insl
rcll
fs
outsb
inc
lret
and
addb
or
lds
jge
cmpsl
jecxz
rcrb
in
or
mov
pop
int3
test
push
mov
fwait
sub
arpl
xor
pop
mov
out
mov
out
test
dec
adc
ja
lcall
cwtd
sti
jo
cltd
in
loope
gs
and
mov
or
or
aas
std
mov
insl
inc
icebp
mov
rorb
aas
mov
loopne
lea
fnstcw
mov
cmp
jno
nop
jb
mov
mov
subl
cli
adc
shrl
or
inc
adc
popa
in
add
or
arpl
les
das
pop
mov
out
xor
pop
jns
addb
mov
jns
das
lret
mov
fildl
inc
js
and
pop
fmuls
push
dec
aam
pop
xchg
or
mov
rol
popa
les
lods
push
fstl
dec
fisubrs
pop
sti
in
test
add
cli
inc
out
loopne
in
int3
sub
sbb
xchg
jmp
addr16
pop
outsb
lea
push
lret
je,pn
add
dec
push
add
fwait
and
jb
lods
inc
jmp
jne
and
mov
in
sahf
idivl
push
stc
movsl
mov
sub
dec
int3
cmp
out
movsl
sub
pop
rcr
push
negb
add
pop
lods
bound
or
or
lret
push
test
mov
movsl
lret
popa
pushf
rorb
shlb
sbb
dec
push
rcr
orl
rcll
dec
je
jne
xchg
mov
sbb
sbb
iret
dec
out
sub
sub
jg
xchg
insb
pusha
clc
das
lods
lret
std
pop
sbb
loopne
repz
mov
mulb
jo
sub
sub
jno
adc
push
xor
ja
rcrb
push
xchg
loop
cmp
enter
rcr
outsl
mov
inc
lahf
inc
test
lcall
addb
dec
fstpt
inc
push
jbe
xchg
sub
scas
xchg
jmp
popf
mov
je
xchg
gs
pop
mov
mov
push
dec
push
mov
pop
inc
fnstenv
push
nop
sbb
mov
pop
int3
test
jno
xor
ljmp
push
mov
mov
adc
divps
inc
mov
stos
pop
or
pushf
adc
addr16
push
cmp
adc
nop
or
or
sti
dec
lret
adc
adc
jg
arpl
jo
js
nop
test
sub
sbb
push
fdivr
jl
push
cmp
aam
arpl
push
enter
jnp
mov
in
cmpb
pushf
iret
pop
sub
das
repnz
adc
adc
lds
dec
push
push
iret
cld
mov
jle
or
fimuls
inc
xor
sahf
or
popf
adc
push
outsb
aaa
xchg
pop
adc
fnstenv
stos
inc
loopne
insb
dec
out
lock
and
insl
int
mov
push
enter
roll
lods
repz
mov
add
xor
xor
pop
aad
push
cld
lods
icebp
push
dec
das
adc
jnp
sahf
pusha
cmp
cli
sbb
cmp
inc
add
xchg
xor
int3
jg
xor
or
mov
ja
decl
xor
repnz
cltd
or
cmp
sahf
push
pop
mov
mov
fldcw
gs
pop
js
clc
mov
js
xchg
mov
pop
adc
sbb
sub
in
inc
xchg
fs
insl
sub
out
add
jecxz
das
dec
adc
add
nop
mov
xor
xor
stos
push
adc
add
inc
xor
sarl
jl
dec
ja
mov
enter
subw
rorb
jno
mov
jno
add
data16
cmp
and
mov
enter
sub
outsl
rolb
fidivs
add
fsub
mov
pusha
ja
cmpsl
in
mov
pop
xor
mov
xlat
lcall
stos
inc
pop
gs
shl
sub
add
xor
insl
lret
fsub
loope
fsub
sbb
and
clc
push
subb
imul
dec
and
testl
cld
ljmp
sub
sbb
mov
mov
stos
pushf
xchg
or
sbb
or
xor
jmp
mov
insb
pusha
ja
mov
lods
sub
stos
push
push
add
mov
pop
int3
andl
push
jns
aaa
in
or
push
popa
fdivp
dec
mov
adc
add
sbb
movsb
roll
loope
aad
xchg
loop
mov
push
pop
xor
xor
les
repnz
lods
test
int
mov
dec
sub
push
xchg
mov
scas
jg
mov
xor
enter
push
xchg
pop
sub
mov
xorl
add
inc
add
xchg
push
jecxz
cmpl
push
mov
sbbl
out
pop
popa
sbb
pop
iret
and
mov
push
rcl
jecxz
xchg
xchg
mov
dec
cmpsl
hlt
das
sub
and
or
xorl
inc
jns
dec
lods
fmuls
inc
pop
jno
pop
leave
cmp
inc
sbb
int
mov
hlt
inc
push
mulb
cmpsb
and
adc
inc
xchg
mov
sub
outsb
dec
xchg
mov
jne
mov
cwtl
pop
push
aam
fidivl
les
orb
fstl
jmp
int3
jbe
fs
stos
mov
mov
inc
mov
push
mov
fwait
ret
mov
xchg
cltd
dec
cli
push
lods
jp
jg
inc
mov
setbe
dec
addr16
xchg
inc
lea
pop
lahf
mov
lret
ljmp
cmpsb
jb
lea
xchg
mov
stos
add
push
sbb
xor
lret
movsl
popa
inc
xor
jmp
mov
loope
incb
fcompl
adc
loope
js
faddl
aaa
add
je
or
and
int
repz
add
ficomps
push
mov
sbb
enter
xor
lret
fidivl
add
sub
fs
xchg
sbb
int
lea
xchg
shll
add
inc
stos
push
jecxz
push
xlat
cli
cmp
insb
cmp
stos
bsr
iret
jmp
or
push
and
hlt
pop
pop
fs
iret
mov
mov
out
mov
scas
adc
mov
insl
daa
sahf
in
xor
sbb
out
stos
pop
fwait
addr16
pusha
jne
jmp
sub
xchg
out
enter
fildl
jecxz
ljmp
arpl
jecxz
mov
xlat
jbe
lret
push
cmp
imul
ret
cli
arpl
ret
ret
cmp
js
les
jge
jge
loopne
pop
roll
xchg
roll
cwtl
jb
xor
inc
adc
imul
fidivs
iret
adc
xchg
xor
mov
or
enter
lahf
add
xchg
xchg
adc
sbb
inc
inc
xlat
sbb
in
nop
insb
jno
es
in
dec
mov
in
push
fidivrs
mov
neg
out
and
pop
mov
hlt
mov
mov
test
inc
jne
sub
xor
dec
aad
cmp
cld
stc
jae
xchg
cmp
and
sub
jle
xor
sbb
shrl
jno
add
mov
jle
out
and
push
call
sub
mov
xchg
scas
adc
or
sahf
xchg
push
shll
dec
cmp
add
push
cmp
jmp
xchg
xor
push
insb
jne
mov
shr
pop
arpl
inc
xorb
scas
push
add
mov
jne
es
dec
sahf
inc
cwtl
pushf
pop
push
jb
adc
push
xor
mov
jbe
inc
add
adc
imul
push
mov
push
mov
std
dec
jbe
pusha
icebp
movsl
mov
xor
stos
or
mov
addr16
mov
clc
adc
mov
lahf
dec
lods
push
into
mov
nop
pop
mov
and
inc
stos
cs
orl
cmc
clc
cmp
rcl
sub
jmp
mov
jae
inc
out
rcll
insb
in
stc
out
and
arpl
add
mov
cmpl
mov
stos
dec
mov
push
or
mov
fldenv
rorb
lahf
cld
scas
xor
inc
mov
nop
dec
bound
push
ljmp
xchg
stos
jns
js
cmp
sub
add
ljmp
sub
and
gs
mov
and
push
fstl
loopne
pop
outsl
mov
xor
lods
xchg
stc
into
jg
orl
stos
xor
mov
jle
insl
jnp
push
es
in
mov
adc
ret
sub
aad
test
dec
pop
add
jmp
js
and
sbb
jecxz
inc
clc
and
stos
xor
sbb
push
cmp
jnp
jle
xchg
int
mov
imulb
dec
cmp
cmc
jae
faddl
pop
jl
or
cmpsl
ret
mov
pop
movsb
imul
sahf
std
dec
adc
rcrb
mov
inc
jecxz
enter
sti
mov
cmp
xchg
mov
dec
sub
mov
mov
cs
sbb
or
cmp
cld
and
or
ret
jmp
adc
test
mov
rol
stc
push
pop
add
and
lret
cmpsb
mov
fmul
xchg
push
ss
out
call
push
and
psadbw
mov
jnp
mov
push
dec
or
inc
push
add
das
loop
es
imul
in
jno
cltd
pop
sahf
in
add
mov
push
and
shl
ret
pop
fldl
lds
adc
sarl
sub
sbb
mov
lcall
mov
xor
and
push
add
add
ja
das
fimull
adc
or
jg
add
pop
inc
lcall
int
jns
pop
dec
push
push
xor
out
dec
pop
jae
dec
pop
xchg
std
adc
inc
or
js
test
loop
or
fsubrl
cld
xor
push
and
lea
sub
out
push
mov
outsb
dec
xor
sbb
xchg
insb
insl
aas
fcoms
dec
repz
mov
xor
sbb
mov
fildl
fwait
dec
push
les
out
aas
cmp
jno
scas
mov
ja
xor
xor
lahf
shrb
push
fistps
pop
xchg
add
dec
add
loope
cli
sti
pop
mov
or
sarl
and
scas
in
stos
sbb
or
xchg
lock
rcll
xchg
inc
mov
sub
mov
inc
pop
test
sub
aaa
push
jns
insb
adc
pop
das
insl
xchg
icebp
or
enter
stc
mov
fwait
and
mov
xor
jle
inc
jecxz
daa
sbb
aad
icebp
bts
dec
arpl
popf
xor
repnz
addr16
sarb
loop
cmp
add
arpl
fisttps
inc
mov
or
es
pop
scas
mov
push
bound
and
xor
movsb
or
fstl
push
ja
xchg
ds
rol
stos
dec
sub
xor
mov
lcall
sahf
test
jl,pn
or
inc
add
xchg
xchg
insl
jno
icebp
adc
mov
popf
stos
lret
pop
xor
outsb
sbb
mov
fcomps
and
fwait
shll
pop
mov
mov
out
lods
lods
or
xchg
pop
adc
adc
test
rcrl
fimull
mov
dec
or
mov
int
lahf
add
xchg
and
insl
mov
enter
sub
lds
aam
push
add
and
xchg
cmp
xor
sbb
inc
fs
mov
loopne
insb
mov
insb
push
pop
in
ret
movsl
mov
lret
pop
dec
std
add
sbb
inc
jmp
mov
fs
mov
push
leave
xchg
rorl
popa
push
popf
xchg
xchg
sub
xchg
pusha
ret
nop
mov
test
pop
test
test
cpuid
aam
push
lret
adc
push
repnz
pop
fucom
xchg
fs
ja
imul
pop
cwtl
sbb
add
scas
mov
sbb
es
mov
inc
leave
mov
xchg
xchg
jbe
sbb
sti
and
mov
fistpll
icebp
push
dec
inc
mov
movsb
loopne
mov
sahf
mov
out
mov
adcl
pop
icebp
insb
xchg
xor
add
jmp
xor
xor
js
mov
out
push
add
xorb
ret
or
ret
dec
ss
push
les
loop
and
pop
mov
enter
shl
adc
rorb
jno
xchg
jp
jns
sti
inc
rcrb
insl
call
in
leave
ljmp
mov
push
jge
lea
sbb
aaa
in
xchg
faddp
aas
jae
and
bound
movsl
inc
mov
in
ret
and
push
test
stc
popa
xchg
lock
in
sahf
xchg
jp
test
add
jbe,pn
jo
sahf
mov
mov
mov
xor
lret
outsl
push
and
test
sbb
fnstsw
jg
adc
mov
rclb
add
sbb
xchg
fstpt
imul
mov
dec
mov
jno
stc
std
add
inc
in
cli
imul
ja
xchg
test
jp
imul
in
add
cmc
fs
cwtl
xchg
dec
aam
int
xchg
cld
mov
mov
int3
in
pop
cmp
repnz
mov
ficoml
mov
out
sub
rcrb
movsb
shll
imul
popl
inc
sbb
jb
imul
push
xchg
or
pop
shrl
ret
xchg
inc
inc
push
adc
in
push
jp
repz
xchg
imul
pop
mov
dec
outsl
aaa
dec
or
mov
xchg
stc
les
fcomps
gs
and
pop
rolb
cmpsl
lock
out
sub
pop
inc
subb
je
or
mov
xchg
out
jl
push
and
movsb
push
call
push
adc
test
xor
ljmp
lds
repz
push
imull
mov
inc
mov
daa
stos
lret
mov
addr16
addr16
popa
sub
fstl
hlt
fbstp
ds
iret
in
adc
pop
or
jo
scas
jp
xchg
xchg
into
add
in
in
in
cmp
into
push
cmc
or
in
add
bound
outsb
ficomps
pop
jecxz
mov
fwait
insl
cmp
imulb
sub
pusha
negl
cmp
add
jg
subl
push
push
scas
mov
xor
cwtl
mov
add
fcmovbe
shlb
lods
aam
rorl
push
or
jge
lahf
xor
add
dec
adc
in
adc
lods
mov
push
cs
xor
pushf
adc
mov
cmp
push
lcall
dec
out
cmp
pop
mov
mov
sbbl
adc
cli
jp
notb
inc
sarl
ss
call
jb
dec
cmp
mov
and
or
mulb
in
cli
in
xlat
mov
xor
pop
je
push
push
xor
shrl
div
xchg
inc
add
rcrb
loope
xchg
jne
leave
xchg
mov
loopne
clc
inc
or
loopne
xchg
cmp
jmp
jmp
movsl
pop
xchg
mov
test
adc
xchg
mov
mov
jo
je
cwtl
pusha
xchg
xchg
sbb
jno
das
mov
mov
inc
notb
stos
mov
pop
fsts
fisttpll
sub
clc
incl
xchg
lods
shlb
jecxz
pop
leave
ficoml
mov
dec
xchg
out
xchg
icebp
add
dec
loope
jl
jnp
fistps
mov
dec
lock
pop
inc
mov
repz
js
cli
push
out
fisubl
clc
ret
stos
lods
js
sub
and
popa
inc
in
fadds
xchg
out
inc
pop
mov
pop
mov
add
sti
add
stos
add
lret
add
pop
add
sbb
add
add
imul
cmp
add
add
add
add
dec
add
sub
add
add
add
add
dec
add
add
fwait
add
mov
add
add
mov
add
add
add
add
add
xor
roll
sub
mov
roll
sti
adc
add
movsb
stos
stos
sbb
ja
mov
dec
int3
int3
int3
add
sldt
or
add
jb
and
inc
add
add
add
test
lret
jnp
add
insb
add
add
push
add
add
add
add
inc
out
add
add
sbb
add
add
dec
add
sti
test
mov
imul
fisubrl
inc
pop
add
push
pop
movl
add
xor
or
push
lea
inc
iret
mov
add
repz
cld
mov
cs
lea
imul
sti
incl
jne
push
add
push
jb
adc
push
jbe
lea
rorl
or
in
leave
std
add
shrb
aaa
cmp
fcoml
in
add
outsl
incl
jno
insb
cmp
dec
ljmp
incl
xor
or
cld
imul
and
or
add
rcrb
jecxz
mov
jecxz
jne
aas
xor
mov
call
call
fistpl
pop
add
or
add
add
add
stos
lcall
add
add
lret
jbe
jb
je
push
imul
add
add
je
loop
inc
lods
popa
outsb
mov
mov
sub
dec
add
imul
add
js
iret
add
outsl
jns
outsl
imul
arpl
bound
or
add
add
add
add
add
add
pop
add
cmp
add
add
push
add
add
add
add
add
cli
add
out
add
sub
pop
iret
int3
and
mov
xchg
repnz
pop
loope
enter
scas
lock
mov
cmp
mov
push
fsubr
cmp
dec
pop
popa
test
je
jp
xor
jle
shll
cmp
push
sbb
out
addl
cld
dec
push
mov
pop
adc
jno
dec
clc
dec
aas
in
mov
test
xor
jae
jne
insb
sub
mov
inc
out
imul
mov
push
les
gs
add
int3
cmp
ja
ret
mov
dec
sbbl
insl
or
mov
xor
js
sub
cmpsb
ja
or
add
push
out
pop
sub
bound
xchg
lret
ret
pop
pop
mov
leave
aad
cmp
cmc
sub
insb
push
xchg
jp
xchg
pop
cs
inc
outsb
ret
dec
ret
mov
shrb
mov
xchg
in
out
xorl
jbe
cmc
lock
out
and
bound
pop
test
lcall
adc
aaa
xchg
sub
mov
pop
repnz
cmc
aam
fnstcw
insl
ficoms
pushf
jp
sbb
or
ficoms
dec
adcl
mov
mov
inc
xchg
mov
push
stos
cmc
jmp
pop
or
lret
iret
push
pop
jle
and
out
ss
adc
loop
sbb
test
jg
int
rcrb
testb
cmpsl
sbb
aas
add
push
dec
icebp
loope
fldt
ja
inc
mov
xchg
pop
es
ret
cltd
test
cmp
stos
fdivs
dec
xchg
adc
les
cwtl
nop
sbb
push
aad
adc
out
dec
out
sti
inc
test
dec
adc
rolb
push
stc
sub
xchg
sbb
push
xchg
ucomiss
ds
pop
ficomps
push
lods
cmpsl
pop
xor
mov
sbb
sbb
fbld
es
sub
in
insb
dec
rcr
clc
sbb
in
xor
jp
push
lcall
mov
pop
mov
inc
mov
or
add
clc
scas
shll
fldenv
test
aam
inc
mov
icebp
pop
ljmp
mov
fs
jmp
fwait
add
cwtl
dec
popa
outsl
or
insl
mov
clc
mov
mov
sbb
test
sub
cmp
stos
sub
mov
lock
stc
pop
fldcw
adc
test
bound
push
bound
test
sub
pushf
lret
xchg
push
shl
dec
ljmp
daa
jns
dec
push
jns
icebp
shll
out
in
lret
bound
je
popf
pop
sbb
stos
xchg
sarl
push
jne
cmp
sub
pusha
dec
stos
add
cli
in
sahf
aaa
icebp
mov
pop
cwtl
jle
ficoml
sub
mov
popf
lea
jnp
mov
mov
cld
sub
shrb
stc
or
jmp
mov
inc
shll
adc
in
aas
mov
clc
sbb
mov
push
cmpsl
call
aad
adc
pop
mov
jns
mov
movb
adc
add
scas
shrl
movsl
push
cmp
inc
jo
adc
and
mov
jnp
jnp
cmc
dec
push
shl
insl
clc
shr
outsb
mov
insb
cs
cmpsb
or
fisubl
scas
xor
xor
sub
les
xchg
lea
aad
mov
pop
shrb
ljmp
addr16
cs
xchg
sarl
jle
jb
dec
les
out
or
adc
test
inc
adc
mov
dec
xorl
icebp
xchg
push
icebp
xchg
or
hlt
inc
xchg
popl
xor
jmp
scas
loop
ja
cmp
ljmp
cmp
jmp
inc
inc
xchg
xor
inc
add
cltd
sub
xchg
test
imul
and
xchg
fwait
xchg
xchg
or
or
mov
bound
adc
jne
cmp
insb
in
popa
cmpb
test
and
pop
xor
inc
and
xor
dec
pop
stc
lods
fcomi
push
xchg
sti
aas
adc
mov
popa
pop
cmc
fdivrl
cltd
cmp
pop
shrl
in
fimull
pop
mov
hlt
in
adc
int3
adc
jns
add
xchg
lea
rol
lcall
andb
and
xchg
lcall
xor
mov
cli
cmp
cmp
out
mov
xlat
mov
pop
scas
push
call
jl
sbb
mov
or
cmp
pop
enter
xchg
pop
ror
mov
mov
push
xchg
push
add
subl
sti
cmp
ret
divb
ds
push
and
mov
add
jo
sub
dec
sbb
pop
lcall
arpl
pop
int
stc
in
call
xor
dec
pop
dec
add
cwtl
push
gs
adc
jbe
data16
stos
mov
cmc
mov
jbe
jge
and
ss
fdiv
stos
xor
mov
adc
and
mov
pop
mov
jge
push
shlb
sub
loop
mov
cs
add
dec
filds
lock
into
sahf
pop
xchg
and
iret
jecxz
rorl
mov
faddp
aaa
movsl
push
addl
dec
and
or
fsubr
and
call
ss
pop
fwait
sbbb
mov
add
and
shrl
push
or
mov
sub
adc
jo
mov
cs
cli
es
and
jmp
and
lds
mov
adc
add
rcrb
mov
and
push
daa
cmp
push
cmp
mov
adc
mov
sbb
sbb
imul
mov
fistps
sub
inc
out
sbb
ja
imul
pop
mov
shll
xchg
sub
ljmp
das
mov
pop
mul
outsl
mov
in
inc
addl
and
inc
test
xchg
sbb
add
fnstenv
jl
cli
scas
js
add
cmp
mov
mov
in
bound
cmpsl
pop
and
lcall
or
sbb
sub
or
mov
in
and
push
push
jne
xlat
xor
out
pop
nop
mov
inc
xchg
arpl
test
mov
jecxz
inc
dec
iret
or
xor
or
mov
pop
adc
mov
lcall
movsl
out
jns
imul
out
shlb
insl
fdivs
pop
sub
in
call
in
mov
sbb
sahf
mov
enter
mov
std
ds
add
int3
cmp
ljmp
call
cld
jo
pop
mov
mov
xchg
aaa
sar
push
ja
mov
jecxz
pop
inc
push
mov
test
jg
stos
mov
daa
mov
loope
das
pop
aam
hlt
mov
dec
cmp
xchg
cmp
push
aas
dec
psrld
cmp
outsb
popa
imul
xchg
mov
stos
cmc
in
scas
stos
push
pop
movl
or
sti
int
push
mov
xor
cmp
sarb
mov
icebp
pop
ficoml
cmp
cmp
fwait
dec
clc
fimuls
mov
fidivl
stc
repnz
int3
xor
inc
inc
dec
popa
push
pop
cmp
sahf
cmp
adc
push
mov
out
and
ret
dec
cmp
sub
jnp
lods
sub
cmpsb
aas
xchg
popa
sub
out
dec
mov
mov
jns
xchg
dec
test
mov
pop
dec
lods
fistpll
in
cmp
mov
sub
and
mov
xor
scas
xchg
stc
xor
outsl
or
mov
cmpl
add
pop
in
pop
imul
les
dec
or
dec
inc
dec
in
pop
ss
cli
sbb
xorl
mull
mov
inc
dec
push
loop
pop
inc
xor
rclb
inc
mov
cmp
push
push
sub
jge
sub
lret
jp
and
sub
icebp
push
push
cmp
or
xor
in
cmp
adc
dec
adc
std
popf
lret
mov
fsts
mov
adc
nop
jno
mov
adc
shlb
cmp
bound
push
adc
and
data16
shlb
js
mov
or
jno
mov
xchg
ret
adc
sbbb
outsl
in
jge
dec
adc
lods
shlb
mov
out
sub
dec
pop
addr16
cmpsb
push
jp
addr16
push
jecxz
sarb
cltd
loope
or
push
mov
stos
std
fstpl
lods
cmp
jb
push
push
jnp
push
mov
pop
dec
add
sbb
repnz
inc
adc
mov
sbb
lds
sbb
insb
push
adc
lods
mov
sub
mov
dec
je
or
jmp
sbb
int
push
arpl
jb
orl
xchg
and
or
enter
stos
in
cs
stos
inc
sbb
out
nop
mov
push
dec
or
jae
jg
jb
mov
xlat
cltd
or
inc
xor
negb
test
mov
sub
sbb
push
ret
int
in
fbstp
push
cwtl
inc
add
pop
lods
mov
cmp
movl
pop
mov
jecxz
hlt
push
and
pop
data16
aaa
jg
push
cltd
cmp
cld
incl
mov
test
ds
not
mov
neg
hlt
outsb
inc
sub
mov
push
scas
or
xor
mov
ret
add
adc
popf
sarb
leave
pop
pop
mov
movsl
pushl
xor
mov
stos
or
and
mov
mov
fadds
inc
notb
fcoml
push
mov
and
pop
movsl
mov
pop
outsl
lds
lods
sbbl
mov
xchg
xor
test
imul
xchg
jmp
addr16
mov
pop
inc
adc
ss
outsb
call
icebp
jnp
push
lods
mov
int
dec
arpl
xor
pop
mov
es
fcompl
mov
sbb
pop
mov
inc
int
inc
cltd
jle
mov
sbb
jl
sti
pavgw
sbb
cwtl
stos
mov
push
mov
sahf
pop
mov
sbb
and
clc
xor
xchg
popa
mov
mov
cmpb
or
sbb
mov
pop
adc
lahf
ret
int
mov
push
add
aas
xchg
pop
les
nop
xchg
cmpsb
hlt
in
cmpsl
stos
sbb
dec
pushf
adcl
or
sbb
arpl
jl
cmp
ret
cmpsb
shlb
jmp
mov
mov
data16
and
outsb
adc
loope
mov
xchg
adc
int3
xchg
xor
sub
push
lret
sbb
pop
ss
sub
dec
and
mov
lret
mov
push
lods
test
cmpsl
cmp
dec
cld
sarb
cmp
icebp
or
sub
jno
mov
jg
push
fs
es
adc
shlb
shll
in
in
sti
mull
or
fimull
or
xor
jge
movsb
decl
sub
cwtl
mov
je
popl
mov
adc
ja
xor
mov
dec
push
scas
mov
leave
add
push
into
and
repz
aam
jmp
add
pop
int3
cmc
xlat
push
add
pusha
movsb
fisttps
fstpt
sbb
out
or
mov
cltd
mov
lods
mov
rol
stos
mov
int3
cwtl
sub
int
aaa
cmp
xchg
inc
pusha
fiaddl
dec
iret
mov
sub
fidivrs
xchg
cmpb
in
push
cmp
add
dec
sub
gs
ret
pop
cltd
insl
mov
popl
or
mov
dec
popa
popf
movsb
push
mov
xchg
stos
fs
or
push
mov
rclb
int3
test
data16
mov
ret
popf
jmp
ret
mulb
xchg
imulb
inc
lds
rcll
sbb
rclb
int
push
xchg
mov
movsl
daa
out
inc
cmpl
lea
fdivr
pop
into
lods
cmp
aaa
js
test
addr16
pop
out
lret
push
sbb
inc
enter
std
icebp
stos
stos
fcoms
sahf
xchg
nop
sbb
mov
popf
mov
jo
notb
aas
pop
std
dec
pop
ror
test
xor
xchg
pop
and
ja
test
cwtl
add
push
in
dec
pop
push
mov
sub
out
ret
jo
ficoml
inc
mov
jg
pusha
cmp
jecxz
add
popa
xor
stos
fiaddl
mov
cmp
dec
xchg
cwtl
xchg
add
repnz
jl
pop
push
in
xor
inc
imul
jp
xor
lods
add
jmp
push
jo
mov
adc
dec
scas
pop
cld
dec
pop
and
loop
mov
jg
push
ds
filds
cmp
pop
push
mov
xor
xchg
dec
ret
popf
popa
and
push
push
and
push
pop
push
arpl
jbe
xchg
rolb
js
cs
jmp
inc
and
popa
orl
push
or
xorb
add
stos
mov
imull
bound
cmpsb
cld
ds
cmc
adc
push
aam
cld
adc
nop
or
sbb
dec
push
xchg
orb
repz
pop
andb
xor
mov
clc
push
stos
add
push
push
or
dec
and
mov
and
cwtl
push
shl
xchg
lret
popl
jae
inc
andl
movsl
inc
popa
popf
jo
cli
dec
mov
cltd
mov
add
jmp
fs
push
and
into
sbb
loope
iret
mov
scas
sub
dec
dec
aas
push
push
mov
jg
mov
pop
fcoms
in
data16
ss
mov
cltd
jnp
mov
mov
ss
mov
cmp
aad
and
push
mov
mov
xchg
sbb
and
pop
adc
not
cli
jl
and
push
icebp
xchg
sub
out
icebp
dec
out
sbb
add
lret
movsb
aad
les
insb
add
xor
sub
ficoml
imul
adc
xchg
mov
cmp
popf
xor
mov
and
cmp
pop
in
dec
inc
leave
idivl
cmpsl
cld
xor
daa
movsl
sahf
je
push
sbb
mov
ret
stc
aaa
dec
data16
xchg
subl
fldcw
jne
sub
ja
add
insl
arpl
roll
es
fwait
out
mov
dec
push
and
cmp
cmp
sbb
mov
cmp
lock
cmpsl
xchg
int3
xchg
fidivl
lahf
stos
jmp
cmp
xchg
mov
jnp
inc
rolb
jae
insl
lret
in
daa
enter
adc
sbb
adc
fdivrs
pusha
shll
mov
icebp
xchg
in
imul
imul
outsb
filds
lahf
dec
xchg
xor
ror
enter
cmpsl
sub
nop
cltd
jge
jo
jb
sbb
sbb
pushf
pushf
ja
fsubr
int
cltd
push
sub
pop
fdivl
jecxz
jbe
and
inc
sbb
out
mov
xor
and
and
leave
dec
pop
dec
xor
lcall
sub
xchg
stc
dec
jae
ja
lds
mov
xor
fmuls
aas
lds
xor
sbb
arpl
lock
jns
enter
xor
pop
cmp
rcrl
push
inc
in
mov
addr16
popf
push
data16
test
sub
xchg
xchg
test
push
into
cli
inc
cld
mov
push
je
pop
or
rolb
xorl
mulb
aad
xor
sti
mov
lahf
adc
pop
das
sbb
rcr
les
cltd
mov
sbb
add
and
xchg
or
cmc
sbb
les
push
out
imul
ja
repnz
gs
shlb
xchg
sub
xchg
jp
imul
out
push
pop
adc
or
cmp
sbb
mov
adc
cwtl
shl
mov
nop
xchg
add
cmpsb
scas
sbb
push
sub
push
mov
imul
lock
and
sbb
mov
jns
or
hlt
cmp
push
jg
inc
shl
rorl
hlt
arpl
cld
in
jno
xchg
sti
int
sbb
cs
mov
ljmp
in
mov
mov
adc
fistpl
push
and
mov
inc
test
dec
ss
aas
jb
cld
sbb
jmp
loopne
jae
jp
mov
push
loope
inc
test
pop
cmp
jb
addl
mov
fcoml
and
sbb
in
fsubl
aas
sub
lods
cmpsb
sbb
data16
rcrb
aam
shl
add
dec
or
ds
cmp
gs
loopne
inc
dec
test
mov
xchg
ljmp
dec
loopne
in
adc
outsb
add
mov
xchg
das
xchg
pushf
sbb
insl
arpl
add
mov
je
inc
loop
out
push
mov
mov
subb
je
fistps
in
arpl
push
mov
jno
je
mov
jecxz
loope
stc
sbb
sarl
push
out
dec
mov
push
arpl
rorl
idivb
insl
stos
mov
mov
test
mov
loopne
pop
in
movsbl
cmp
mov
pop
xchg
push
jne
add
outsl
icebp
pop
push
jnp
dec
rorb
fcom
mov
jl
pop
adc
fs
mulb
mov
pop
add
insb
cmpsb
adc
sbb
test
out
lock
loopne
cmp
inc
aam
pop
sahf
fldenv
pusha
jmp
jmp
scas
cmp
inc
ret
enter
fildl
jne
test
andl
inc
sub
pop
jnp
scas
xchg
and
inc
pop
cltd
call
inc
cs
fnstcw
insl
js
sbb
lods
fadds
mov
fnstenv
jge
xchg
jg
scas
adcb
hlt
adc
or
adc
nop
cwtl
pusha
xchg
cmc
xor
mov
cmpl
test
or
sti
adc
or
mov
pusha
cwtl
insl
add
mov
push
push
aam
dec
sbb
rolb
lea
ss
xor
sub
outsl
or
shr
sbb
ret
fiaddl
sub
shll
mov
jge
mov
mov
mov
push
xchg
popf
or
jge
cwtl
cmpsl
cmpsb
xchg
and
jle
lds
jbe
push
sti
push
inc
lock
pop
add
add
add
dec
add
dec
add
lahf
add
mov
add
add
incl
add
add
sldt
or
add
add
add
add
add
add
add
pop
add
mov
nop
push
cmpb
pop
add
add
filds
adc
add
pop
add
pop
add
and
add
pop
add
dec
addb
add
adc
bound
and
add
jmp
add
cmpsl
outsb
imul
cmp
add
popl
jp
add
add
mov
add
add
fiaddl
adc
or
add
cmp
add
jb
dec
add
or
add
add
add
add
jns
and
insb
jns
jne
adc
outsb
add
add
insb
addr16
mov
or
jno
popa
ror
rolb
sub
mov
add
mov
mov
pop
or
push
ljmp
std
adc
ljmp
inc
pusha
add
lock
push
push
or
xor
mov
pop
pop
jns
push
or
push
call
jge
jl
add
add
ljmp
add
add
test
ljmp
cmp
test
test
jne
pushl
je
sbb
jne
or
call
ret
push
lcall
push
or
sbb
mov
ret
movsl
sti
add
push
popa
call
loopne
add
adc
mov
add
add
mov
add
add
pop
sbb
xor
sbb
sbb
pusha
add
mov
mov
popa
std
insb
add
add
js
cmp
dec
arpl
insb
gs
push
xor
push
outsl
add
add
sub
jne
jne
gs
add
insb
inc
cmc
xor
lret
mov
add
add
pop
add
sub
add
add
jp
add
add
mov
add
add
fiaddl
add
add
add
add
cmp
add
add
add
lcall
decb
lds
imul
push
xor
jg
ljmp
jno
dec
xchg
dec
stos
cmc
sub
or
push
orl
lods
fnstsw
dec
lahf
int
enter
mov
sub
pop
pop
es
dec
sbb
add
mov
fisubl
pop
rolb
popa
xchg
mov
jmp
or
push
loop
sarb
imul
fcomp
mov
sub
scas
or
sti
mov
xchg
out
test
pop
add
repz
pop
or
test
fs
or
lock
mov
jb
dec
loope
dec
jae
xchg
aas
adc
xchg
stos
and
jl
je
es
pop
insl
fs
imul
lock
mov
pushf
dec
les
cmp
push
xchg
inc
sbb
jp
dec
mov
gs
or
fimuls
imul
adc
in
popa
dec
jg
enter
notb
sbb
sbb
ret
int
gs
jmp
lret
rcll
pop
xchg
dec
inc
movsl
into
inc
jmp
push
mov
imul
popf
dec
mov
loop
out
or
movd
mov
stos
or
xor
mov
mov
in
xchg
les
rcll
push
adc
int3
gs
sbb
in
inc
cmc
scas
mov
push
push
std
cltd
shlb
inc
insb
mov
pop
outsl
and
fstpl
popa
std
push
scas
xchg
cmp
or
push
je
stc
jmp
mov
arpl
push
aad
loop
mov
test
rorb
pop
in
insl
xor
fwait
rclb
sarb
fwait
mov
sub
lcall
out
ret
andb
add
shl
xor
jne
lock
call
fldenv
mov
xor
dec
cmp
dec
div
or
mov
jae
xchg
aad
shlb
xchg
lret
rcrb
dec
dec
call
sarb
and
mov
or
and
repz
ret
adc
scas
dec
js
mov
sub
andb
adc
or
div
icebp
aad
paddq
sub
icebp
jecxz
pop
in
test
adcl
into
xor
adc
pusha
and
xor
orl
push
ret
clc
jno
cmp
mov
adc
mov
in
test
fisttpll
inc
pop
sahf
lea
daa
cmp
mov
aaa
orb
cs
pop
sbb
in
push
out
xor
mov
out
movsb
out
and
pop
or
jmp
lahf
gs
jmp
xor
xor
sub
outsb
xor
sub
sub
sbb
adc
mov
pop
mov
fcmovu
pusha
outsl
push
lcall
mov
sub
inc
fidivl
fs
in
adc
pop
repz
fstps
je
ja
je
pushf
iret
bound
cmp
lret
out
cmpsl
test
aam
adcb
xlat
mov
or
xor
mov
lock
xor
push
push
cmp
add
stc
iret
cmc
scas
pushf
loope
cmp
lds
push
cmp
addr16
fisubrl
xchg
call
shlb
mov
sbb
add
sbb
aaa
scas
test
adc
mov
aaa
bound
inc
and
mov
sub
or
loop
xchg
or
btsl
cld
pop
sub
sub
mov
addr16
sbb
push
pushf
xchg
cmp
decl
test
adc
cmp
sub
push
jg
jnp
cld
lea
out
out
popa
outsb
mov
mov
jmp
jl
jmp
inc
popa
stos
shlb
test
ljmp
arpl
add
cmp
sub
rclb
lods
pop
pop
pop
fildl
xchg
ret
insb
roll
imul
dec
dec
cltd
test
mov
xchg
test
sbb
mov
shlb
dec
sbb
push
lods
popf
popf
jnp
hlt
xchg
or
ret
clc
rol
dec
movsb
repz
lret
inc
lret
cmp
sub
sahf
dec
fbstp
push
divl
sub
loop
cmp
in
adc
test
xchg
shlb
lea
inc
sbb
cmpb
pop
push
lods
pushf
inc
mov
cmp
push
mov
jl
adc
loop
cmp
sbbb
aam
jno,pn
imul
xchg
jb
insb
dec
pop
out
dec
xchg
sub
rclb
out
xchg
ja
cmp
mov
or
iret
stc
movsb
andl
fwait
rclb
pop
std
aam
lock
mov
inc
imul
arpl
ss
mov
xchg
out
sub
rol
cwtl
push
xchg
lods
repz
clc
mov
mov
cmp
fisttpl
mov
add
negl
insb
mov
popa
aaa
pop
pop
cmpl
cwtl
out
addr16
mul
xor
jmp
rcrl
sti
ds
jl
adc
in
fcomps
psllq
scas
fistpll
stos
addl
push
push
push
dec
orb
mov
adcl
js
push
lret
add
fnstenv
xchg
lahf
pop
push
cmpsb
ss
adc
mov
rcrl
mov
or
cltd
in
and
mov
jp
jecxz
out
mov
jl
das
dec
mov
adc
add
fildl
iret
imul
insl
sahf
mov
xchg
mov
out
mov
in
cs
cmpsb
loope
push
add
add
out
xchg
dec
mov
sbbl
jl
push
roll
xchg
lret
dec
test
jbe
push
jnp
push
and
pushf
mov
jle
pop
inc
cwtl
push
mov
jecxz
lret
push
and
repnz
jle
add
and
add
xchg
inc
popa
roll
shll
push
mov
cli
adc
dec
xor
xchg
bound
sbb
xchg
dec
aam
subb
sub
xor
outsb
adc
mov
leave
jp
xor
aas
fbld
jb
cmpsl
fdivl
xor
mov
inc
push
enter
in
pop
push
pop
andb
xlat
mov
jb
repz
orl
in
in
mov
lret
jo
sub
mov
xchg
lods
inc
sub
sbb
icebp
pop
or
mov
std
icebp
push
push
cmpsb
lcall
jo
mov
pop
popf
pushf
fbstp
ret
xor
dec
inc
sbbb
jmp
rol
data16
into
repz
bound
mov
in
in
addb
xchg
mov
pusha
cmpsb
add
push
xchg
hlt
out
addr16
stc
mov
sub
mov
std
jae
mov
jae
lahf
dec
not
push
in
xor
adc
sbb
int
sub
ret
sub
mov
lods
loop
or
push
iret
jae
xlat
lods
xchg
test
movsb
loope
inc
jbe
jae
mov
ds
dec
xchg
jp
daa
jp
xor
insl
add
xorb
jl
cld
jo
xchg
mov
adc
xor
dec
cmp
ret
ss
in
out
sub
cwtl
mov
dec
ljmp
sbb
insb
mov
gs
cltd
pop
iret
aaa
icebp
adc
mov
movsb
mov
or
or
es
or
enter
stc
mov
sbb
addr16
lock
and
cwtl
std
push
loop
lods
ljmp
fbstp
aas
inc
push
inc
mov
int3
cmpsb
mov
arpl
or
mov
out
lret
dec
fisubrs
xchg
sbb
je
push
nop
pop
sbb
pusha
and
es
push
lcall
lret
add
out
andb
pusha
lret
mov
sti
lock
mov
push
lcall
mov
loop
lret
in
repnz
stos
adc
sbb
out
fprem
nop
xchg
push
inc
arpl
cwtl
mov
dec
adc
outsl
or
sbb
js
scas
pusha
dec
ret
sbb
mov
addr16
ret
mov
sbb
push
push
inc
mov
movsl
fsts
imul
adc
mov
mov
add
xor
sbb
addr16
pop
mov
push
adc
fstpt
pushf
xchg
push
xchg
imul
mov
add
aaa
testl
ficoms
dec
push
scas
adc
popa
sbb
movsl
inc
int
test
pop
jecxz
or
pop
pop
cli
imul
inc
lods
pop
cli
std
mov
cmp
sbb
outsb
mov
lahf
and
mov
mov
xchg
adc
push
nop
test
or
lods
jecxz
dec
into
cwtl
insb
lea
mov
into
pop
pop
cltd
or
jp,pt
mov
and
mov
in
push
adc
rcrb
add
jecxz
sbb
adc
mov
subb
pop
test
mov
movsb
cltd
out
push
aas
cvttps2pi
fsqrt
adc
dec
push
sti
test
daa
mov
sbb
pop
push
imul
lods
xlat
sahf
pop
not
stc
xchg
xchg
fiaddl
cmp
pop
cwtl
rcll
mov
push
inc
pop
jp
movsl
ja
dec
lods
addr16
and
sbb
dec
jno
imul
inc
push
sub
xchg
jp
stos
mov
insb
pop
mov
mov
fildll
jbe
xor
adcl
popa
lods
jg
int
into
jmp
mov
filds
or
mov
push
gs
xor
mov
or
pop
sbb
xor
jmp
mov
and
jne
jnp
dec
sbb
push
rcrb
out
xor
aam
or
xchg
jg
inc
out
jecxz
add
push
add
sub
xorl
jb
sub
ret
push
cmp
fidivl
dec
xchg
mov
pop
xchg
dec
stos
lret
fldt
xchg
sahf
and
sub
and
or
call
getsec
in
scas
outsl
and
pop
mov
xchg
or
cmpl
sbb
mov
and
pop
fwait
lock
xchg
xchg
push
xchg
mov
jae
inc
pop
adc
das
arpl
rorb
lret
sbb
pop
mov
fwait
dec
sub
aam
andb
pop
pop
dec
cld
inc
mov
fxch
fnstenv
xor
push
push
loop
xrelease
or
je
xchg
stos
jno
push
pusha
nop
adc
add
push
mov
pop
stos
lods
adc
hlt
sbb
loop
mov
out
cmp
xchg
jmp
add
push
xor
mov
loop
aad
adc
sub
ret
cmpb
xchg
jge
lds
xchg
popa
inc
jbe
out
fisubs
sub
gs
out
dec
mov
ja
adc
mov
outsl
xor
or
add
aas
and
push
aas
or
mov
mov
test
mov
aas
sub
mov
mov
add
push
jge
cmpsl
mov
dec
mov
dec
loopne
ljmp
adc
int
pop
inc
lock
cwtl
and
or
mov
arpl
push
dec
data16
cwtl
data16
mov
dec
jmp
hlt
mov
xchg
bound
test
nop
cmp
scas
insb
fldl
out
lret
dec
jne
imul
mov
xchg
add
cmp
js
movsl
xlat
clc
inc
in
sub
push
adc
or
pop
push
mov
leave
inc
movsl
cs
xor
inc
add
fstpl
pop
int
mov
jne
cmp
sbb
mov
mov
cmc
shll
xlat
jno
pop
mov
pop
scas
data16
or
outsb
mov
pop
ljmp
dec
mov
lahf
nop
inc
or
dec
rcrl
add
ss
pop
test
or
jecxz
xor
pop
arpl
add
xor
push
adc
and
and
mov
lods
or
jl
push
repz
std
imul
add
leave
sbb
sarl
imul
sbb
xchg
dec
jle
mov
push
lds
push
xor
iret
cmp
jae
dec
imul
add
sub
mov
xchg
xor
sahf
mov
cwtl
or
leave
add
mov
inc
and
repz
and
test
inc
cwtl
mov
and
jmp
add
sub
jbe
dec
xchg
out
jecxz
js
xor
jl
jne
test
jp
scas
cmp
cmp
pop
inc
xchg
mov
pop
nop
jg
xor
pop
dec
rcl
into
jecxz
pop
inc
adc
and
jnp
xchg
mov
std
ja
test
cwtl
shlb
inc
fwait
mov
mov
mov
inc
fisubrl
popf
mov
aam
sub
insl
jmp
lods
ds
lock
mov
test
ljmp
movsl
stc
and
adc
mov
push
and
stos
or
fldenv
fstpt
jno
push
lods
and
imulb
fcoml
sub
sti
push
es
adc
scas
int3
ficoms
mov
jle
and
sub
xchg
dec
in
cld
inc
xor
sbb
jmp
fimuls
add
leave
mov
inc
out
jno
mov
lods
push
sarb
mov
jg
cmp
addr16
lcall
out
sub
adc
sub
xor
sub
and
lods
pop
mov
mov
lds
sub
fisubrs
loope
dec
orl
lds
enter
aaa
ljmp
mov
mov
jne
ret
icebp
and
push
dec
loop
pop
cli
sahf
subb
in
mov
sub
add
bound
ss
push
popa
dec
xlat
mov
cld
push
adc
sbb
dec
inc
ret
int
xchg
subl
test
enter
arpl
imul
mov
pop
lds
fnstsw
push
mov
push
jge
pop
xor
inc
pop
ret
push
xor
mov
xchg
fs
mov
and
lods
roll
int
ret
cmp
inc
mov
scas
inc
outsb
loop
add
pop
movsb
xchg
cmpsl
es
fnstenv
sahf
jnp
push
addb
insl
out
mov
enter
and
dec
adc
fwait
stos
mov
inc
mov
dec
es
repz
push
mov
jmp
and
sub
dec
cltd
adc
sahf
pop
mov
cmp
pop
dec
or
sub
ss
mov
addb
mov
out
dec
dec
aaa
inc
mov
pmulhw
addr16
lahf
mov
pop
xchg
cwtl
xchg
push
dec
adc
std
pushf
sub
mov
sub
imull
inc
ds
scas
bound
notl
jp
inc
mov
cmc
mov
xor
xlat
in
adc
pop
movsl
push
jecxz
xor
inc
aam
out
ljmp
adc
pop
mov
cmp
sub
lcall
icebp
cltd
cmp
ja
in
scas
test
push
rclb
or
sub
pusha
loop
pusha
dec
xchg
cs
pusha
push
insl
andb
xchg
int3
ss
lods
mov
adc
rep
or
loope
push
popf
pop
xchg
aad
or
js
lret
in
mov
mov
arpl
jns
jmp
cld
pop
mov
and
pushf
mov
out
cld
out
std
xchg
mov
hlt
lea
ficomps
inc
lods
jbe
addl
mov
fistps
add
aad
jno
mov
pop
into
adcb
jl
sbb
cmpsb
cmp
sbb
push
and
jno
xchg
sub
cmc
mov
mov
mov
outsl
aam
jl
jnp
mov
mov
mov
dec
dec
sub
fwait
nop
cmpsb
sbb
xchg
cmp
aas
outsb
icebp
hlt
subl
arpl
xchg
cli
and
mull
mov
xor
scas
aam
inc
arpl
mov
pop
ds
adc
cmp
jbe,pn
xchg
xlat
daa
jmp
mov
and
call
push
jge
pop
lret
lret
es
pop
cmpsb
jbe
orl
lds
rcl
in
push
and
lcall
jmp
loop
jle
lahf
jae
popa
fldcw
adcb
hlt
iret
in
imul
xchg
or
push
push
lods
sub
inc
xchg
push
cli
jnp
lods
cmp
mov
pop
fcom
out
cmp
movsl
mov
add
xchg
pop
or
mov
jmp
adc
cmp
je
xchg
cs
mov
aaa
dec
xchg
inc
inc
dec
in
mov
dec
sub
adc
push
cmp
icebp
lds
add
gs
imul
xchg
inc
mov
sti
jbe
dec
ds
xchg
or
js
xor
dec
xor
jb
popa
jnp
cs
aad
mov
ds
repz
lea
dec
xor
jmp
sub
add
popa
mov
push
adc
xchg
pop
test
dec
out
lcall
ja
lods
push
push
add
dec
ds
mov
mov
daa
or
dec
pop
dec
inc
mov
sub
loope
adc
fdivl
push
sbbb
cmp
push
inc
xchg
rcrb
pop
and
out
daa
addr16
adc
and
fsubrl
mov
fcmovnb
ficoms
nop
adc
and
dec
add
sbb
sub
mov
xor
lea
xchg
iret
and
cwtl
testl
sub
fisttpl
add
fimull
imul
in
adc
dec
cmp
mov
imul
gs
subb
adc
push
fildll
cmpsl
or
mov
lods
jecxz
inc
add
pusha
mov
inc
mov
je
hlt
sbb
sub
add
push
subl
xchg
outsl
in
scas
ljmp
lods
cmp
cmp
fbld
lret
xchg
xor
loopne,pn
jl
stos
es
test
fs
outsb
inc
pop
test
mull
bound
iret
inc
dec
and
pusha
addr16
jne
mov
lret
mov
cs
outsb
out
mov
les
loope
mov
aad
add
nop
sti
popa
fadds
test
pop
loope
cmc
pop
cli
ret
xchg
inc
jne
insl
ja
imul
out
bound
cmc
fadds
mov
sahf
inc
jge
or
adc
fldenv
push
movl
leave
xchg
inc
shll
mov
sbb
push
das
and
xor
arpl
mov
cmp
inc
jmp
mov
repz
arpl
sbb
lds
sbb
dec
sub
int
jbe
mov
fdivs
xchg
sbb
in
cmp
cmp
jmp
add
add
add
jns
add
add
dec
add
pop
add
sbb
add
add
add
mov
add
add
mov
add
add
pop
add
sub
add
add
jp
add
add
add
add
add
cmp
add
add
dec
add
add
sahf
add
add
stos
add
test
sarb
mov
jo
jo
imul
int3
push
mov
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
push
push
movl
movl
mov
movl
call
push
mov
call
pop
ret
push
mov
sub
push
pushl
call
mov
pushl
xor
movl
pushl
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
push
call
mov
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
pushl
call
pushl
call
push
push
push
mov
pushl
call
call
push
pop
pop
ret
jae
jb
jo
add
adc
add
xor
call
push
push
push
call
push
imul
jb
je
arpl
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
into
add
mov
into
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
iret
add
dec
iret
add
inc
iret
add
cmp
add
xor
add
sub
add
and
add
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
add
or
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
add
cmp
add
pusha
rolb
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
mov
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
sbb
add
sub
add
cmp
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
add
add
inc
rolb
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
rolb
add
add
xchg
rolb
add
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fcom
add
loopne
add
in
rolb
add
roll
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
roll
add
roll
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
aam
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
aam
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
