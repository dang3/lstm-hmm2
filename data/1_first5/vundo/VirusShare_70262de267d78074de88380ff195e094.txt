inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
add
dec
and
sbbl
xchg
adc
or
add
push
add
add
add
add
or
mov
add
jl
jl
mov
add
aaa
add
add
add
add
add
add
xchg
add
add
add
lahf
add
push
add
add
add
add
aas
add
add
pop
cmp
jl
sub
popf
add
add
xor
roll
add
jl
sbb
ret
add
insb
add
add
add
add
add
add
adc
add
add
add
add
pop
in
add
add
jmp
arpl
jl
cli
add
add
add
add
add
add
add
add
add
pop
add
jl
and
insb
add
push
xchg
add
dec
add
add
add
add
add
sbb
fildl
jl
dec
add
add
push
xchg
add
dec
add
add
add
add
add
add
add
add
add
cli
add
add
add
add
add
add
add
and
jl
dec
add
add
stos
add
add
add
add
mov
add
add
add
add
add
add
or
add
add
add
add
add
add
add
cli
add
add
add
popf
add
add
pop
filds
or
in
add
add
xor
jl
adc
fadds
push
addl
push
add
add
add
add
ljmp
add
les
stos
add
add
add
add
inc
add
jl
jl
flds
jl
js
push
add
jmp
mov
jl
in
popf
add
add
and
jl
or
add
pop
add
add
add
add
add
add
add
add
jl
jl
mov
add
add
add
add
add
stos
add
add
add
in
add
jl
data16
add
add
add
add
add
add
add
add
add
add
add
cli
add
add
add
add
add
roll
add
sub
jl
xor
add
add
add
or
xor
outsb
add
add
add
add
pop
add
xchg
add
add
add
inc
add
xor
popf
add
aam
movsl
add
add
add
add
add
add
jne
ret
add
add
add
add
xchg
add
popf
add
add
add
add
add
mov
add
add
add
add
jl
jl
addl
add
sub
jl
addb
add
jl
jl
sub
jl
flds
mov
dec
add
in
jl
mov
add
add
add
jl
mov
add
add
add
add
jno
sbb
jl
jb
roll
add
mov
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
mov
add
popf
add
add
add
add
in
add
add
in
add
add
add
lret
aam
imul
ret
sbb
mov
xor
jb
mov
mov
repz
inc
add
fnstcw
push
icebp
mov
aam
mov
outsb
inc
out
sub
test
lods
and
icebp
mov
inc
es
pop
xchg
cmp
or
push
inc
push
addr16
addb
xor
mov
fs
insb
cmpsb
and
mov
sbb
aas
daa
sbb
push
movsl
or
insb
mov
in
pop
movsb
scas
adc
pop
jno
inc
mov
and
ljmp
lock
rorb
testb
sbb
andl
test
push
jns
mov
jl
test
push
push
testb
dec
cmp
enter
mov
and
mov
movsl
push
xor
cmpl
pop
cli
out
push
test
cwtl
xchg
sahf
or
loopne
xchg
dec
mov
ret
insl
mov
jae
addb
inc
jecxz
aam
in
andb
jno
pop
movsb
push
sarb
xor
push
out
pop
adc
inc
cltd
jns
mov
mov
lret
push
push
es
or
mov
shrb
sarl
sub
mov
bound
xor
mov
sbb
mov
les
andb
push
out
pop
mov
ffreep
dec
add
jl
mov
or
or
add
jp
mov
dec
test
mov
cmc
and
pop
sub
push
adcb
insb
xor
or
push
lds
pop
add
add
sub
jle
xor
arpl
inc
jle
pop
mov
jne
jne
outsb
xor
shlb
imul
lcall
cmp
lds
xor
jecxz
xor
jmp
jle
sbbl
out
sub
cld
xor
xor
sbb
addr16
cli
adc
insl
scas
jmp
sahf
pop
fisubrl
fwait
dec
clc
xchg
xchg
sub
or
cmp
cmpsb
pop
push
data16
cmpsb
add
mov
rol
in
or
test
leave
xor
fbld
inc
add
push
pop
xchg
aas
jge
cmp
xor
clc
dec
mov
loop
mov
int
dec
dec
adc
loopne
shlb
xchg
popf
push
mov
lock
rorb
or
xor
pop
mov
or
jmp
xor
xor
rcrl
add
into
clc
jb
add
sahf
aas
test
movsb
aam
daa
out
pop
xchg
out
popa
add
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
adc
pop
mov
jle
adc
push
in
mov
or
cmp
sub
pop
fimuls
mov
mov
jle
push
fcompl
int3
cs
ds
les
or
cmp
sub
xor
insb
push
pushf
inc
mov
data16
pop
faddl
int3
ss
sub
into
sbb
das
orb
mov
adc
pop
ds
pop
lds
aam
lods
push
cld
loop
sbb
jmp
jns
cmc
adc
bound
mov
dec
iret
roll
loopne
sub
fsub
dec
fdivp
mul
pop
push
repz
xor
inc
jl
cmp
daa
mov
dec
cmp
es
mov
dec
fisttpl
jns
sahf
mov
int
xchg
ds
jecxz
repz
mov
int
out
jbe
insl
scas
call
or
pop
push
fiadds
xchg
cs
jecxz
inc
sti
ret
sub
lahf
dec
and
scas
sbb
and
add
hlt
adc
pop
adc
cmp
mov
dec
jl
jns
pushf
pop
mov
imul
sbb
or
cmp
sub
pop
xchg
cmpsl
add
or
movsl
sub
push
mov
pushf
pop
nop
pop
loop
cli
sub
add
pop
jmp
jp
jo
inc
xchg
jnp
int3
push
fidivs
outsl
mov
xor
dec
fisubrs
mov
les
into
jle
jbe
push
int3
cs
ds
into
sbb
or
cmp
sub
pop
sahf
dec
scas
jl
insb
dec
pushf
pop
mov
jle
push
fcompl
int3
cs
ds
into
sbb
or
cmp
sub
pop
sahf
dec
scas
jl
insb
dec
pushf
popf
in
push
push
outsb
and
adc
add
adc
xor
lcall
fdivrl
js
aad
jns
bound
sbb
pop
hlt
cli
sbb
aad
cltd
or
popl
dec
pushf
aad
int3
loop
je
rolb
outsb
std
pop
das
cmc
int
nop
cmp
mov
cs
and
xchg
mov
sar
mov
nop
cmpb
loopne
mov
dec
fmul
mov
inc
pusha
popa
mov
dec
or
in
mov
jo
and
imul
push
lret
and
ds
mov
or
cmp
pusha
mov
push
fsubrl
pop
sti
add
xchg
xchg
cmp
scas
mov
ds
jg
dec
mov
leave
dec
mov
jmp
mov
push
and
enter
out
xchg
lds
mov
cs
jae
mov
sar
in
mov
les
dec
in
mov
jg
push
push
pop
jle
out
out
rolb
iret
add
pop
cmp
mov
add
ds
or
xchg
jb
add
xor
xlat
jmp
btr
xchg
out
lcall
lods
cld
inc
mov
in
dec
adc
imul
aad
ret
pop
cmpsl
mov
cmp
popa
push
sar
dec
jle
cwtl
mov
sub
call
lods
cmp
scas
push
inc
dec
pop
and
js
movsl
in
push
cli
xchg
mov
push
sbb
dec
daa
sub
mov
and
pop
sarl
mov
lahf
push
xchg
cwtl
mov
lahf
ficoml
cmp
ret
sbb
mov
cmp
call
cmc
jle
adc
mov
lahf
pop
jp
in
cmc
dec
jns
mov
stos
and
and
imul
adc
cmp
inc
inc
test
inc
push
daa
jb
sub
jno
mov
ja
mov
xor
arpl
jl
xor
imul
fwait
or
je
push
jne
mov
xchg
out
test
incl
in
xor
mov
push
ljmp
lock
outsl
test
jge
sub
pop
dec
pop
lock
out
mov
out
sub
cltd
mov
mov
adc
and
jge
push
out
xor
sbb
ret
dec
or
loopne
inc
mov
addr16
mov
and
aas
into
movsb
movd
leave
dec
jg
ficoml
outsb
aas
lods
xlat
jnp
lret
pop
xchg
inc
scas
inc
mov
shrd
shl
pushf
cmpsb
pop
jge
inc
rorb
negl
mov
mov
gs
loope
add
cmp
add
arpl
pushf
fcom
jno
push
or
add
scas
pop
jmp
and
mov
mov
gs
or
jae
xchg
test
sub
xchg
mov
pop
jnp
loope
hlt
ret
fidivrs
xchg
mov
pop
push
cmp
ss
xchg
idiv
mov
cmp
jecxz
std
adc
sbb
jmp
roll
mov
cmp
aam
sub
shll
and
ss
sub
aad
cld
ljmp
mov
xchg
cmp
inc
cli
sub
cltd
and
dec
orl
fistps
push
pop
pop
daa
stos
stos
out
cwtl
jo
sbb
pop
add
mov
jl
push
mov
lea
aas
testb
into
ret
and
and
aam
int
flds
push
shll
lods
cmp
inc
sahf
adc
test
xor
and
adc
cltd
mov
adc
add
mov
leave
push
pop
inc
mov
add
int
jmp
in
lret
jae
sti
popf
jl
mov
xchg
pop
xor
dec
daa
fxam
xor
nop
out
mov
icebp
add
or
mov
lods
pop
cli
cmpsb
push
sti
insb
push
es
sti
neg
push
sahf
test
pushf
rcl
jo
dec
out
clc
cmp
int
stos
repz
icebp
adc
daa
fnstsw
mov
cmp
lea
ffree
push
fdivl
sbb
movsl
dec
iret
orl
mov
push
push
and
imul
cmc
out
jne
in
loope
xor
cs
ficomps
mov
ficompl
xor
adc
pop
push
jl
lods
pop
adc
das
andl
in
mov
fnsave
pop
sbb
cs
add
jbe
fildll
inc
test
mov
push
cs
inc
idivb
push
mov
fisubrl
xor
dec
push
push
jle
pop
std
jmp
inc
sub
sbb
leave
lar
ret
inc
rcr
cli
popa
jl
ret
pop
fdivr
mov
dec
mov
cli
mov
and
jnp
and
test
cld
add
mov
pop
mov
adc
call
push
arpl
scas
mov
ljmp
idivb
add
out
sub
ljmp
iret
pusha
mov
dec
cmp
dec
adc
or
ljmp
es
jno
cmp
cwtl
mov
ja
std
inc
insl
shlb
mov
xor
lea
iret
mov
and
dec
negl
popf
and
jns
je
je
jge
jno
jp
ss
mov
push
in
cmp
cld
movsb
dec
xchg
xchg
cwtl
xchg
mov
adc
fstps
mov
add
add
mov
xchg
hlt
or
add
xchg
fwait
adc
mov
jno
pop
dec
mov
add
rolb
jg
sbbl
in
repnz
jmp
shl
sti
push
aas
mov
push
cmp
test
inc
push
in
xlat
mov
pusha
jp
out
leave
xorb
adc
push
mul
inc
push
mov
add
mov
xchg
jb
mov
jl
adc
jo
cmp
ljmp
xchg
inc
insl
ljmp
adc
jp
jecxz
outsl
xchg
and
bound
jo
int3
dec
mov
pusha
or
xchg
mov
jl
cmpsb
sbb
out
cmpsl
jb
pop
lcall
out
push
sti
inc
cmp
pop
xorb
adc
mov
je
push
inc
jb
int
xchg
arpl
xor
std
loopne
sub
jne
push
dec
leave
ja
insb
sarb
xlat
in
xchg
mov
popf
fs
mov
xor
mov
ficoms
ror
out
lret
mov
in
pop
cmc
in
xchg
xchg
nop
subl
sbb
rcll
sbb
subb
repz
inc
mov
stos
xchg
push
aam
sar
in
iret
push
fwait
hlt
shlb
je
xchg
mov
sbb
jne
out
cmp
clc
add
mov
mov
xchg
adc
popa
lret
jae
mov
or
mov
cmpsl
stc
mov
push
adc
aam
cmpsl
mov
testl
mov
out
insl
mov
iret
adc
popf
rclb
sahf
fidivrl
adc
or
xlat
mov
and
ss
jnp
repnz
negl
adc
into
push
jo
jmp
adc
movsb
inc
insb
jns
loope
inc
jmp
mov
mov
enter
call
mov
mov
jge
es
add
pop
not
dec
repnz
xor
lret
mov
movsl
cli
imull
adc
pop
push
lea
inc
xchg
mov
fmull
lock
mov
outsl
call
sub
lret
clc
fstps
sub
push
sbb
cmc
popa
repnz
dec
jp
inc
int3
mov
ss
fs
dec
pop
mov
lret
xchg
sbb
cltd
and
pop
add
inc
inc
enter
cli
repz
cmp
bound
push
cmpsl
test
jnp
push
push
jb
imul
popf
xchg
inc
push
test
stos
outsl
loopne
leave
rclb
add
fisttps
push
adc
insb
cwtl
mov
sbb
test
ret
mov
mov
lock
dec
mov
mov
or
jo
fcomps
loope
or
mov
das
inc
mov
fistps
or
jecxz
loop
call
push
inc
dec
daa
or
or
xor
push
sub
call
mov
inc
movsl
je
push
mov
pushf
jle
or
cmp
sub
stos
test
repz
sar
cmp
pop
push
jno
xor
or
out
cltd
in
or
xchg
and
leave
sub
push
hlt
into
mov
mov
add
push
icebp
mov
cmc
push
push
mov
push
rorl
cmpsl
iret
xor
imul
into
jg
bound
fdivs
notb
mov
adc
add
data16
adc
jecxz
mov
mov
push
mov
mov
xor
push
add
outsb
and
in
push
jecxz
out
lcall
or
cmp
sahf
mov
jmp
xchg
inc
fsubl
dec
lret
jle
push
lret
mov
push
pop
sbb
cmp
outsl
mov
ret
sbb
shll
aaa
dec
fsubr
dec
ja
dec
aam
xchg
push
insb
addr16
mov
add
mov
repz
cld
jge
mov
jno
icebp
mov
scas
and
xor
push
push
adc
mov
jl
inc
shl
mov
test
icebp
ror
iret
xor
loopne
loopne
aaa
ljmp
xchg
sub
xchg
push
adc
jmp
xor
mov
lock
ds
outsl
mov
fdivrp
gs
pusha
fwait
jecxz
popa
cmp
rolb
je
loope
xor
cmc
add
mov
xchg
lcall
cli
add
orb
jne
adc
mov
lock
cld
sbb
out
adc
xor
loop
mov
stos
stos
push
loopne
rcrl
push
arpl
arpl
jno
fsts
leave
jmp
out
adc
in
inc
cwtl
fcom
sub
mov
je
push
jb
pop
popf
fists
mov
adc
push
es
divl
xor
jo
data16
adc
daa
rorb
js
xchg
sub
insb
jp
cld
xchg
test
outsb
xchg
xchg
and
out
ficoms
sarb
movl
fidivl
lret
and
insl
jmp
ds
and
cld
iret
das
mov
cli
ljmp
addb
das
popf
push
lea
sbb
addl
mov
out
inc
inc
and
jb
data16
jle
dec
mov
andl
adc
fld
mov
mov
insl
divb
sub
adc
push
cli
and
cmpsl
push
push
jbe
push
or
push
insl
imul
mov
or
loopne
mov
aam
mov
int3
imull
mov
out
in
addb
ret
jno
icebp
dec
adc
stos
popa
cmp
rcl
pop
popf
cmp
movsl
fsubrs
mov
cmp
loop
fsubrl
test
test
roll
ja
cmp
movsb
xchg
cwtl
cmp
cmpsl
call
adc
push
fldl
das
cmp
lcall
lahf
repz
or
adc
mov
stos
fistl
lahf
xor
scas
mov
fs
outsl
mov
lods
xor
xchg
cmp
xor
pop
cmp
mov
cmp
push
insb
inc
adc
xchg
add
imul
test
or
pop
gs
in
cmp
jp
push
daa
cmp
dec
adc
push
jp
in
sub
mov
xor
out
or
test
pop
sbb
adc
movsl
push
mov
in
movsl
sub
idivb
mov
or
or
ret
add
inc
test
mov
mov
fwait
xor
xor
push
and
xlat
mov
imul
scas
out
lret
push
aas
jmp
sahf
sarl
pop
mov
in
in
leave
pop
les
nop
outsl
lret
and
xchg
loop
jb
mov
mov
lea
test
push
jb
push
adc
cmp
jp
insb
nop/reserved
push
mov
push
sub
int3
fadds
mov
filds
sbb
add
test
mov
mov
inc
pop
lret
loope
xchg
pusha
xlat
stos
movsb
jecxz
xor
enter
adc
sbb
cmp
and
sahf
test
in
jae
stos
jb
xchg
in
sub
jg
in
cwtl
subb
adc
dec
push
arpl
dec
xor
cmp
inc
loop
cmp
sub
jecxz
xor
mov
or
push
mov
jnp
xchg
xchg
inc
scas
mov
lods
pusha
adc
fs
and
loope
fucom
mov
aas
jno
cmp
rcrl
decb
out
dec
fcomip
outsl
ljmp
sbbl
jne
std
mov
mov
imul
xchg
sti
push
ss
sbb
mulb
mov
jl
dec
jns
outsl
cmpsb
mov
push
imul
in
rorb
sub
je
out
cwtl
ja
inc
mov
daa
or
pushf
push
mov
dec
imul
jbe
decb
jne
mov
mov
dec
stos
push
test
jl
ds
add
cltd
lods
popf
sarb
pop
add
add
mov
push
or
pop
gs
mov
lcall
lods
push
out
push
cmp
into
fnsave
hlt
jp
sub
xchg
sbb
sub
mov
jmp
adc
lret
and
arpl
and
lcall
or
add
or
mov
ja
mov
in
bound
and
nop
push
aaa
dec
sub
cmp
xorl
in
add
sbb
xchg
jecxz
cwtl
push
mov
out
mov
add
outsb
fcmove
pop
sbb
inc
sbb
into
add
xor
movsb
shll
cs
sahf
mov
lea
in
lock
ret
jge
inc
push
mov
sti
adc
xchg
inc
xor
insb
pop
push
fistl
lcall
je
push
push
imul
sub
insb
jmp
outsl
inc
dec
imul
sbb
ljmp
pop
rolb
fcmovnbe
or
lahf
outsb
sti
push
xor
push
fidivl
pop
jae
rcl
sbb
adc
ds
test
rolb
stc
adc
jg
lods
fs
mov
lret
sti
adc
mov
clc
jl,pt
hlt
bound
pop
mov
xchg
xor
fcomps
cmpsl
jns
imul
mov
inc
sbbb
pushf
push
ljmp
push
je,pt
push
repnz
in
in
arpl
in
es
sbb
imul
xchg
loopne
adc
xor
hlt
jg
and
mov
push
out
test
dec
or
gs
mov
out
pop
leave
shlb
xchg
jg
cwtl
dec
push
popa
dec
sbb
int3
mov
les
mov
lods
lock
addr16
decl
scas
pop
push
xor
inc
int3
sub
ljmp
add
orl
push
cmpb
pusha
and
jo
ret
xor
repz
jmp
int3
cltd
or
outsb
sub
out
or
lods
mov
inc
xchg
mov
lea
mov
inc
inc
out
lahf
dec
cs
sub
adc
sbb
pop
xlat
mov
out
cmp
mov
pop
add
dec
lds
adc
shll
push
mov
mov
lcall
movsb
js
in
fsubs
dec
clc
aas
xchg
stos
cld
fdiv
and
mov
cmp
inc
shlb
imul
sub
insl
insl
into
xor
test
ds
jle
repz
fistpl
in
mov
addb
pushf
pop
mov
pop
mov
sbb
push
xorb
xorl
add
test
cmp
dec
pop
lods
dec
popa
cwtl
or
test
addr16
out
cltd
aam
fs
push
pop
les
jnp
movsb
and
inc
fisubrs
ret
push
sarl
das
pop
cmp
cld
shll
ret
insb
push
sahf
xchg
push
mov
pop
push
subb
rclb
push
sub
mov
test
xor
scas
pushf
jg
sub
mull
test
sub
xchg
dec
leave
adc
cwtl
pushf
test
xor
stos
ret
in
and
mov
cmp
lret
sbb
xor
fcoml
clc
in
popf
dec
jae
xchg
ss
mov
xor
xchg
ret
sub
or
cmp
fisubrs
outsb
mov
into
mov
int
fbstp
rclb
mov
out
mov
mov
pop
mull
adc
or
xchg
mov
jp
mov
inc
push
dec
push
sahf
xchg
into
mov
test
nop
sub
cli
lds
fsubrs
sbb
xor
adc
std
push
movsb
std
pusha
pop
mov
shrl
dec
sub
stc
cltd
cmp
aad
mov
loope
jae
sub
add
xchg
or
fistps
loope
mov
mov
lahf
lods
inc
jl
les
mov
cmp
pop
call
rorl
sbb
repz
and
pop
dec
adc
aas
cwtl
mov
push
ret
rol
push
addb
sub
lcall
out
rorl
in
mov
add
add
push
pop
jmp
mov
ret
popf
mov
sbb
mov
lcall
adc
adc
jns
aad
fldcw
data16
dec
faddl
int3
lret
dec
andb
test
icebp
dec
and
bound
mov
jbe
out
test
pop
lret
outsb
jg
push
xchg
into
xor
adc
sbb
aad
add
xlat
es
and
in
and
adc
and
cs
bound
aad
adc
aaa
or
mov
xor
in
shl
cs
xor
or
jl
push
call
gs
xchg
lock
movsl
mov
subb
xchg
xor
lret
dec
lahf
fstpt
or
int3
mov
inc
es
scas
stc
or
jmp
or
pop
movsl
inc
or
lret
mov
outsb
fistps
cli
mov
mov
jmp
cmpsl
cmp
decb
test
and
jmp
and
outsb
cmpsl
fwait
mov
jl
pop
pop
mov
sub
xchg
in
int3
leave
pop
scas
jbe
inc
out
bound
cmp
movsl
sub
mov
jmp
and
jno
je
out
movsl
lahf
sahf
fdivrp
mov
lret
push
popa
lea
cwtl
test
dec
stos
pop
sti
adc
pop
add
xor
xor
inc
jno
pop
loope
cmpsb
testl
xchg
mov
std
aad
or
pop
shl
lahf
ja
adcb
cltd
push
pop
cltd
imulb
jns
xor
xchg
js
pop
popf
and
jo
int3
lock
sub
dec
sub
sub
mov
and
push
mov
outsb
call
in
lahf
loop
inc
fcmovnu
in
cwtl
mov
mov
das
push
fcmovnb
loop
push
test
sub
nop
push
divb
stos
out
fsub
xor
insb
out
fldenv
inc
push
cwtl
jno
and
cmp
inc
sbb
cwtl
dec
leave
mov
lea
fisubl
icebp
test
mov
jle
push
jnp
add
adc
cmp
rcl
xor
jno
add
scas
enter
and
mov
jnp
jge
mov
mov
jmp
aaa
inc
test
inc
cmpsl
mov
jns
lahf
stc
jl
xchg
mov
add
jae
pusha
jle
inc
add
test
fisttpl
in
mov
inc
or
gs
popf
cld
push
and
aas
test
out
xor
ficomps
aam
push
xchg
pop
push
and
cmp
pop
sbb
pop
repz
xor
push
sahf
jecxz
and
ja
pop
and
insl
es
xchg
in
lds
dec
mov
sbb
lods
mov
sbb
mov
cmp
or
sub
in
push
cmpb
inc
das
and
testb
dec
push
test
jae
loop
adc
sub
adc
jmp
ds
push
es
ret
out
test
jnp
push
xor
test
adc
int
mov
cs
in
mov
addl
sub
imul
int3
cs
ds
into
sbb
or
cmp
sub
pop
sahf
dec
scas
jl
insb
dec
pushf
pop
mov
jle
push
fcompl
int3
cs
ds
into
sbb
or
cmp
sub
pop
sahf
dec
scas
jl
insb
dec
pushf
pop
mov
jle
push
fcompl
int3
cs
ds
into
sbb
or
cmp
sub
pop
lcall
pushf
push
pop
mov
push
int3
scas
cld
mov
cmpsb
inc
cmp
pop
stc
aam
mov
addl
mov
pop
mov
xchg
push
test
cmp
or
jnp
out
xlat
pop
xlat
dec
daa
mov
pop
mov
ja
inc
fistl
cmpsl
cmp
or
jnp
imul
xlat
dec
daa
mov
pop
mov
ja
inc
fistl
cmpsl
xchg
mov
out
repnz
mov
hlt
dec
hlt
inc
cmp
or
mov
mov
mov
mov
pop
mov
mov
je
js
adc
frstor
mov
rorl
ficomps
sbb
iret
or
sbb
insb
jbe
arpl
cmp
fwait
and
cmpsl
out
rcr
push
stos
inc
movsb
xchg
ret
aaa
sub
push
sti
mov
pop
jmp
push
push
xor
loopne
inc
xchg
jg
pop
adc
ficompl
push
push
push
add
jg
inc
into
push
dec
iret
mov
lret
mov
lahf
xchg
inc
movsb
sub
fildll
xchg
jb
mov
sub
popa
sub
or
or
dec
dec
js
aaa
stos
pop
fwait
pop
mov
ja
inc
fistl
cmpsl
cmp
or
jnp
imul
xlat
and
jae
imul
loop
xchg
adc
add
add
dec
xchg
sbb
or
je
jae
pop
stc
add
das
lret
cmc
inc
ficompl
jp
lods
sbb
push
repnz
fs
out
es
ja
inc
fistl
cmpsl
cmp
or
jnp
imul
xlat
dec
daa
mov
pop
mov
ja
inc
fistl
cmpsl
cmp
or
jnp
imul
xlat
dec
daa
mov
inc
int3
adc
add
fiadds
dec
cmpsl
push
xchg
pusha
je
ja
mov
pop
stos
ficompl
mull
shl
std
xchg
jno
xor
cmp
arpl
repnz
xchg
cmp
fs
mov
movsl
insb
cli
xchg
inc
push
loopne
lcall
cmp
inc
sub
cmp
push
inc
je
mov
leave
mov
xchg
xchg
jbe
xor
shrb
lahf
push
pushf
stos
jmp
mov
jne
push
mov
and
and
inc
shll
js
or
cmpsb
xchg
xchg
and
je
stos
das
mov
ds
sahf
inc
ds
pop
xlat
rorb
xchg
xchg
add
fistpl
lea
mov
mov
jbe
stc
out
sub
lods
std
push
dec
mov
push
fmuls
out
add
sahf
cli
adc
das
lahf
sub
sub
clc
bound
jnp
outsl
cmpl
sbb
cmp
lods
incl
mov
xor
pop
shrl
add
fdivl
push
sub
mov
dec
leave
cmpsl
movsb
jle
enter
sbb
mov
loopne
scas
in
outsb
mov
adc
out
jb
pop
adc
loop
orl
mov
aaa
lock
sbbl
jp
fsubs
jg
jg
push
mov
xchg
out
sbb
stc
mov
out
mov
lea
popa
dec
adc
repnz
sarl
xchg
cmp
jbe
shrl
in
mov
add
cmpsb
pop
inc
test
in
inc
xor
add
sbb
inc
movsl
push
div
arpl
sbb
cltd
mov
inc
inc
push
lds
jle
outsb
fwait
sub
pushf
jl
mov
hlt
sarb
lret
pusha
in
cli
jg
fldt
jg
pushf
xor
lret
loope
aad
icebp
or
filds
dec
xor
push
test
or
clc
aam
push
dec
xchg
xchg
in
jle
jg
lret
nop
test
mov
mov
addb
sbb
dec
jnp
outsl
lret
aad
xchg
in
pop
xor
mov
jnp
pop
in
fisubl
mov
stos
adc
jmp
sti
test
popa
xor
arpl
mov
mov
xchg
addb
out
dec
mov
cmp
push
and
pop
cmp
dec
jns
adc
repz
xorl
jb
pop
sbb
adc
add
mov
xor
and
xchg
adc
lret
in
lods
add
loop
dec
cmc
sbb
pop
mov
mov
cmp
nop
xor
and
in
les
cmp
mov
xchg
or
xchg
pop
mov
shlb
mov
cmpb
lret
nop
out
sbb
sub
int
andb
shrb
loop
mov
lcall
mov
sbb
inc
xchg
xor
nop
mov
aas
subb
pop
repnz
xlat
push
aaa
in
lock
imul
mov
xchg
outsb
ljmp
mov
cmp
lods
cmpsb
sub
jbe
adc
sarb
mov
sbb
push
jl
mov
shrb
jl
cmpb
inc
ret
dec
das
fwait
daa
aad
jge,pn
mov
mov
in
outsl
fcmovu
push
mov
inc
xor
mov
movsl
jne
fstps
fwait
mov
mov
repz
fistps
lods
outsb
mov
and
inc
andb
subb
xor
popa
std
popf
pop
aad
mov
add
mov
jge
mov
xchg
in
jecxz
mov
rcr
out
bound
add
hlt
cmp
fcmovne
gs
rcr
xor
cs
add
dec
aam
inc
mov
call
ficomps
lods
inc
pusha
mov
fisttps
sbb
xor
imul
or
ljmp
mov
cmp
cmp
jecxz
cmp
lret
and
cmc
inc
push
outsb
adc
jne
sti
jl
inc
inc
dec
push
push
fwait
dec
gs
ret
loopne
in
push
push
pop
ds
fnsave
lds
aas
orb
pop
fcmovu
aad
aad
dec
fildl
mov
inc
mull
dec
fists
loope
ds
in
js
cmc
cmpsb
out
pop
sbb
fldt
pop
sub
loope
pop
jo
dec
push
adc
enter
mov
push
push
or
cmpsl
jne
mov
pop
stos
and
jae
xchg
stos
pop
scas
aas
rorb
push
sub
pop
xchg
out
inc
lock
fcmovnbe
and
insb
adc
mov
test
xchg
pop
xchg
mov
adc
pop
sub
xor
xor
nop
lods
add
shll
mov
mov
ja
gs
mov
cmp
sbb
lahf
aas
sbb
into
cmc
cld
lods
sub
js
in
scas
adc
jecxz
addl
pop
and
or
aas
fnsave
pop
mov
cmc
out
inc
mov
mov
insl
push
cmp
cmp
mov
jne
pushf
pop
dec
loope
mov
inc
jl
mov
mov
incb
mov
or
insb
ror
add
jl
add
adc
sub
xor
add
shrb
mov
adc
je
inc
test
into
or
fnstsw
jp
nop
add
bnd
and
addr16
cmpsl
cmp
xor
insl
sti
cmp
mov
mov
cmp
pop
iret
jbe
adc
xchg
leave
push
push
push
shl
add
adc
mov
cli
fcomps
dec
pusha
dec
sub
and
sbb
insl
dec
insb
mov
mov
loopne
dec
and
pop
fsubr
mov
inc
cmp
in
or
mov
and
stc
inc
lock
popa
mov
clc
add
mov
mov
and
je
test
ja
jbe
rcl
adc
adc
mov
loop
mov
jns
mov
mov
jp
jne
jecxz
xor
xchg
lods
pop
rcrl
mov
fcompl
jecxz
test
orb
clc
push
dec
mov
xor
outsb
fistpl
jl
add
xlat
insb
mov
sar
rcrl
sti
mov
daa
jo
cmpsb
push
lcall
scas
adc
lea
mov
addr16
and
data16
lahf
push
xor
in
shlb
pop
test
xor
outsl
test
push
aas
dec
or
test
cmp
test
xor
jne
fcompl
int3
gs
cmpsl
je
sub
push
sbb
ficoml
shl
cmpsl
ss
imul
ljmp
movsl
out
and
jb
jecxz
dec
dec
lock
lea
mov
mov
sbb
inc
cmpsb
or
xchg
mov
add
loopne
repnz
mov
bound
shll
push
maxps
pop
inc
adc
out
cmp
outsb
nop
repz
jno
pop
mov
cmpsl
ljmp
sub
loopne
jl
mov
xchg
xchg
or
popa
data16
cmpw
pop
lret
jge
movsl
xlat
jmp
stc
push
xor
pop
addb
jg
iret
cli
data16
xchg
mov
adc
rorl
and
pop
and
ss
repz
or
inc
aas
ret
cmp
mov
inc
pop
loopne
inc
outsl
inc
aad
data16
inc
sbb
in
imul
ret
out
outsl
in
xchg
popf
fdivrl
out
inc
loopne
maxps
fistpl
out
inc
notb
in
lods
cmp
addr16
lea
inc
jp
cmpsl
jge
rol
jmp
idivb
push
loope
loop
lret
lds
shrb
pop
ds
and
push
jb
shlb
loop
xchg
push
stc
popa
add
mov
mov
pop
push
mov
sbb
fiaddl
cmp
mov
xor
int
and
pop
test
fwait
sbb
mov
int
jl
jnp
mov
mov
pop
and
jge
dec
or
iret
xchg
cwtl
addl
xchg
fldcw
pusha
rcr
mov
or
packssdw
iret
mov
imul
lret
sbb
xor
push
movb
cmpb
pop
dec
lahf
xor
inc
cmp
aad
push
loopne
sbb
les
outsb
push
call
dec
mov
sbb
dec
mov
cmp
repz
mov
cltd
pop
mov
sbb
xor
outsb
ljmp
sbb
mov
sub
push
sbb
insl
mov
leave
cmp
cmpsb
in
dec
into
add
xor
xor
out
sub
sbb
lds
daa
xchg
push
adc
mov
sbb
les
jae
scas
imul
jb
dec
test
inc
cs
in
ret
sub
test
cmp
out
fidivs
test
pop
xor
pop
mov
jae
sarb
mov
clc
dec
dec
in
xor
dec
pop
adc
test
sub
xor
pop
movmskps
jno
mov
inc
lret
push
pop
je
pop
iret
movsb
or
lds
cmp
lret
xchg
and
aas
outsl
out
jg
shlb
ss
push
sahf
daa
mov
test
sbb
repz
mov
inc
daa
xor
imul
sub
insb
dec
scas
mov
enter
and
mov
cltd
pop
fcomps
jge
out
dec
ss
adc
xchg
ds
ss
push
lods
movsl
fisttps
and
insb
sub
push
xlat
jbe
out
fildl
fsub
and
inc
pop
mov
aam
or
test
cld
and
xor
mov
lahf
push
xor
jg
inc
push
pop
xor
adc
xor
xor
std
and
dec
dec
insl
jecxz
bound
jle
mov
dec
loop
ficoml
inc
xchg
cwtl
insb
adc
sarl
push
movsb
cmp
mov
and
xor
in
pop
orl
aam
cmp
lods
mov
inc
push
xchg
daa
bound
mov
aam
sti
mov
xchg
sub
xor
and
scas
imul
add
dec
aas
mov
inc
mov
sub
xlat
shlb
and
cmpsb
mov
push
sub
adc
add
and
add
pop
cmp
cmpsl
fldt
xchg
int
push
cli
xchg
mov
mov
popa
aam
dec
pop
ret
cmp
mov
aas
in
jo
data16
js
sbb
push
dec
adc
mov
arpl
xor
pop
adc
or
nop
sbb
push
sahf
das
repnz
inc
notb
xchg
xor
and
push
xchg
cs
sar
ret
xor
mov
fcmovbe
sub
pop
test
jbe
xor
add
cmc
out
addr16
aas
ret
mov
das
and
sti
jne
inc
popa
popf
sub
and
or
xorb
dec
lock
push
add
and
in
lret
mov
cmp
xor
pop
fldcw
pusha
cmp
in
pop
mov
movsl
fidivrs
sub
ss
dec
sub
sbb
jmp
neg
and
stos
inc
rcl
inc
call
push
xchg
ffreep
movsb
pop
inc
mov
jne
gs
dec
or
ret
in
inc
add
mov
or
es
out
xlat
push
aaa
xchg
movsl
dec
mov
inc
stos
je
sbb
dec
jle
call
call
mov
test
stos
xor
test
xchg
pop
ret
std
inc
xchg
enter
test
pop
cmc
pop
aaa
loopne
icebp
movsb
pop
xor
movsb
jecxz,pn
pop
sbb
lods
xlat
xchg
dec
mov
xchg
rol
insb
out
add
rcrl
add
jmp
les
sti
in
js
or
les
inc
push
mov
cs
push
sub
mov
outsb
cli
lea
fucomp
fs
sub
cmp
and
pop
jecxz
jg
push
pushf
insl
arpl
imul
stos
mov
int3
int
xor
dec
and
adc
inc
dec
hlt
das
rclb
xlat
ss
sub
dec
mov
fimuls
mov
fsubrs
das
es
inc
sub
aad
xchg
cmp
out
pop
subl
xor
into
pop
mov
imul
lock
nop
mov
cs
fildll
shll
test
cwtl
out
jmp
cmp
mov
cmpsb
out
sbb
test
scas
fistps
dec
jp
stc
adc
push
test
cwtl
fbld
xchg
popf
pop
jb
repz
stos
xchg
mov
push
jmp
lds
xor
int3
lahf
int
sbb
movsl
movsl
adc
cwtl
or
sti
mov
cmp
adc
jno
pop
inc
test
jae
mov
add
add
push
xor
mov
sub
xchg
dec
push
enter
jmp
out
addr16
sbb
js
jae
out
jle
mov
add
adc
push
jo
pop
leave
mov
sub
stos
cmp
sbb
rorl
mov
lret
push
pop
shrl
mov
outsl
xchg
jl
add
lds
sub
jp
dec
push
push
mov
inc
out
jae
ret
pop
in
cmovbe
push
inc
js
mov
adc
xchg
and
int
push
cltd
xor
jg
push
inc
test
orl
push
aas
fdivs
ds
add
cmpsl
xor
mov
aaa
dec
pop
repz
mov
sbbw
xchg
aam
mov
xchg
out
insb
sbb
mov
sbb
sbb
into
adc
in
inc
or
in
cmp
loopne
or
inc
cli
cmc
test
scas
push
pop
andl
add
xor
sub
and
shll
push
repnz
mov
jp
mov
add
cmp
xchg
lcall
scas
scas
xchg
mov
or
mov
pusha
xchg
inc
pop
ret
push
scas
movsb
mov
out
lds
dec
push
mov
cld
leave
cmp
loopne
in
mov
jno
inc
std
sub
rol
add
inc
ror
aaa
mov
mov
xchg
outsb
jno
sub
cltd
xchg
mov
mov
mov
lock
mov
rcll
movsl
xor
call
test
push
subl
cld
jns
lea
dec
cmp
jae
lock
mov
xchg
dec
add
mov
mov
and
out
inc
inc
stos
push
mov
jnp
aam
scas
sbb
mov
pop
push
sbb
add
jecxz
nop
xor
int3
mov
stos
rcll
jmp
jae
pop
aas
cld
out
cs
pop
xchg
dec
lods
out
pop
jae
jnp
packssdw
inc
sbb
xchg
dec
pop
bound
xchg
dec
mov
mov
in
or
cwtl
int
inc
std
jmp
insb
daa
adc
xchg
iret
jge
xchg
enter
cmp
add
add
and
movsb
sbb
push
or
and
sahf
cltd
dec
scas
mov
fs
mov
shl
dec
in
sbb
xchg
sarb
movsb
xor
mov
fisubrl
dec
or
test
jb
aas
movsl
pop
sbb
xchg
imul
or
add
nop
ds
rorl
xor
inc
and
or
jg
jmp
lret
mov
lods
popa
jne
imul
pop
imul
loop
inc
jg
lea
daa
dec
mov
in
or
in
imul
dec
sbb
fsubrs
daa
or
lock
push
nop
cmp
jmp
jg
outsb
jle
sahf
arpl
and
fstl
inc
leave
and
jecxz
orb
popa
lea
sbb
lret
mov
insb
inc
call
xor
nop
xchg
add
lods
in
or
fwait
aas
cmpb
mov
outsl
lret
lea
push
hlt
mov
sub
fcoml
scas
repnz
cmp
lret
hlt
lock
stos
aaa
icebp
stos
orb
mov
fidivl
mov
cli
pop
cmp
fsubr
jp
shlb
pop
in
dec
leave
lods
test
dec
add
mov
pop
daa
roll
sbb
push
scas
jae
fninit
pop
fisubrs
sbb
lret
cmp
push
inc
mov
dec
mulb
mov
fs
leave
nop
adc
dec
mov
movsb
loopne
dec
insb
push
sub
mov
fdiv
cmp
movsl
adc
mov
repnz
cwtl
jl
pop
mov
sbb
inc
int
and
adc
lea
sbb
sbb
scas
clc
xchg
scas
push
mov
or
xchg
loop
mov
roll
in
lock
xlat
cmp
jne
mov
fcmovb
sbb
imul
in
loop
jne
cmp
or
je
call
call
xchg
xchg
add
inc
test
ficoml
xchg
cmc
xor
stos
adc
insb
clc
rcr
jbe
mov
outsl
xor
dec
mov
push
fldenv
sub
fnstenv
movsl
pop
repz
xor
cmp
mulb
lock
outsl
mov
leave
ss
inc
xchg
pop
sub
adc
in
fwait
cmp
or
sub
sbb
lahf
push
add
jns
or
ja
cmpsb
loop
lods
popf
jae
movsl
adc
clc
inc
flds
xor
cli
hlt
adc
or
push
cmp
inc
bound
sbb
addr16
xchg
aas
push
sub
test
adc
mov
jno
push
add
or
xchg
pop
cltd
dec
dec
fsubrs
mov
in
sti
xor
in
push
jno
in
in
fdivl
stos
aam
pop
add
aam
or
icebp
jnp
pop
sbbb
and
dec
cs
jbe
roll
sub
shrb
dec
rorl
push
sar
push
mov
hlt
sbb
mov
pop
xchg
inc
push
sub
jae
pushf
loope
and
and
icebp
insb
dec
dec
pusha
loop
aam
mov
mov
hlt
xor
mov
mov
inc
pusha
clc
sbb
jae
aad
icebp
lds
cmc
xor
sub
dec
mov
xor
pop
dec
sahf
loope
outsl
pop
pop
push
and
mov
lods
icebp
xchg
cmp
push
outsb
xchg
pop
mov
or
jno
xchg
lcall
fildl
xchg
frstor
sub
mov
push
and
insb
xchg
out
or
pop
lcall
sub
mov
jns
in
aas
inc
dec
sub
xor
out
jb
ret
into
and
push
mull
ljmp
scas
dec
lret
out
test
push
sbb
mov
mov
inc
mov
rcll
mov
loopne
mov
inc
daa
fs
out
pop
fildll
test
imul
shll
and
ds
in
lret
adc
mov
or
sti
pop
push
lea
loopne
push
lods
and
cvttps2pi
lret
sub
int
scas
or
push
cmp
or
mov
jae
sbb
dec
mov
stc
xorb
cmp
mov
out
js
dec
sahf
in
and
fldcw
add
test
sbb
lds
or
push
aaa
pop
je
out
fistpll
pop
enter
or
add
pop
lds
add
rol
fnstenv
sahf
sub
xchg
test
or
shlb
rolb
pop
mov
lret
stos
add
or
outsb
mov
pusha
push
mov
inc
or
shrb
popf
jecxz,pt
push
mov
popf
shlb
xor
es
cltd
subb
pop
scas
xor
inc
dec
push
pop
push
add
push
or
sub
add
scas
sti
jb
dec
in
pop
lahf
mov
fwait
orl
scas
xchg
push
repnz
int
ror
cmpsl
add
mov
and
jecxz
add
jmp
cmp
push
sbb
fsubrl
fstpl
sarb
sub
mov
call
test
mov
js
fstpt
cmp
or
ja
jne
cmp
nop
cmp
jb
loope
pop
or
pushf
cmpl
fwait
orb
lock
push
popf
dec
mov
movsb
pop
ret
mov
pop
pop
sub
cmp
outsl
loopne
pop
daa
push
pop
push
or
bound
repnz
adc
fsub
or
pushl
or
imul
cmc
push
idivl
jno
push
imul
pop
test
pusha
adc
std
daa
lock
jmp
aas
shlb
aam
dec
in
pop
xor
xchg
inc
movsb
into
cmp
push
fsub
adc
and
push
sub
repnz
shlb
aaa
std
xor
pop
and
mov
outsb
int3
sahf
xchg
outsb
mov
xor
addr16
ja
inc
fistl
cmpsl
cmp
or
jnp
imul
xlat
dec
daa
mov
pop
mov
ja
inc
fistl
cmpsl
cmp
or
jnp
imul
xlat
dec
daa
mov
pop
mov
ja
inc
fistl
cmpsl
mov
xchg
or
jnp
imul
dec
es
pop
mov
ja
inc
fistl
cmpsl
cmp
jl
repz
cmp
sub
push
push
mov
push
push
push
push
movl
movl
movb
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
push
sbb
ja
sub
push
ja
push
sub
xlat
lcall
xchg
fiaddl
ljmp
sub
pop
pop
dec
aaa
jp
push
lcall
xchg
fiaddl
ljmp
sub
pop
pop
dec
aaa
jp
push
movsb
test
leave
stos
decl
leave
ljmp
adc
mov
sbb
std
sbb
xchg
adc
jno
and
adc
dec
subb
aad
mov
shll
daa
jmp
stos
push
cli
pop
push
scas
bswap
fdivrl
or
leave
jmp
pop
lods
je
mov
push
stc
rolb
inc
or
cmp
ds
pop
pop
pop
leave
xchg
dec
cmp
test
rcll
out
lcall
xor
sbb
pop
or
test
cmp
fistpll
mov
inc
outsb
cltd
sbb
test
test
jg
xor
xchg
xchg
dec
enter
xchg
fwait
movsbl
ds
iret
ljmp
sub
pop
pop
dec
aaa
jp
push
lcall
xchg
fiaddl
lods
adc
fsts
jl
insb
jnp
dec
or
data16
aam
repnz
mov
js
push
pop
xor
jge
aas
imul
push
ffreep
out
in
mov
movsl
lds
and
dec
pop
pop
ss
dec
aaa
jp
push
lcall
xchg
fiaddl
ljmp
sub
pop
pop
dec
aaa
jp
push
lcall
xchg
fiaddl
ljmp
inc
sti
int
lahf
mov
adc
out
pop
ret
daa
adc
xchg
flds
pop
stos
or
in
xchg
cmp
not
fldcw
out
fstpt
testl
scas
into
mov
inc
sub
sub
lds
daa
test
xor
mov
out
xchg
jle
push
fldl
shll
xor
pushf
inc
shlb
cli
push
pop
cmp
jne
adc
in
frstor
jno
mov
fs
adc
xchg
test
inc
jno
fwait
mov
cmp
inc
and
scas
or
popf
jge
mov
jmp
mov
mov
xor
jp
or
mov
cmp
dec
push
pop
test
and
or
jnp
push
xchg
xchg
std
dec
add
and
push
dec
test
iret
sbbl
filds
sbb
add
push
mov
clc
scas
movsb
lock
push
movsb
pop
mov
jecxz
cmc
loopne
jb
jl
adc
sbb
mov
aaa
je
and
push
and
leave
jg
nop
leave
mov
jp
data16
xor
dec
pop
mov
nop
push
mov
jecxz
bound
std
in
out
or
lcall
into
add
fstps
adc
aad
lret
adc
push
insl
mov
cmp
add
add
aam
jl
fldt
inc
sahf
pop
je
outsb
scas
xchg
fistpl
andb
or
test
out
cmp
or
and
popa
dec
add
int3
add
jo
sub
push
jae
push
scas
pop
dec
cmp
cld
movsl
cltd
ffreep
xchg
xor
mov
popa
jnp
insl
sahf
adc
xor
cltd
xor
pop
loope
and
sub
xchg
frstor
sub
movsb
loope
sub
mov
pop
mov
out
or
cli
iret
movsb
pop
test
shl
lahf
enter
inc
outsl
mov
xchg
jo
out
in
in
or
call
push
je
fadd
dec
xchg
dec
or
adc
nop
loope
lahf
push
dec
js
add
push
pop
mov
insb
out
jne
mov
adc
mov
jmp
and
dec
push
sbb
pop
fcomps
ret
jge
inc
stos
sahf
ret
ja
dec
aas
pop
dec
out
cmpsb
aam
mov
aas
mov
mov
pop
cmp
arpl
ljmp
sbb
cmp
or
cmp
mov
jnp
shrl
subl
sub
icebp
adc
hlt
push
jl
push
ss
mov
push
inc
pop
inc
lock
dec
or
mov
lcall
cmp
pop
xor
rolb
xchg
sbb
jg
xchg
lds
and
jmp
call
out
and
mov
push
dec
orb
leave
and
out
push
imul
push
andb
xor
es
add
pusha
mov
push
and
and
clc
and
mov
push
cld
pop
insl
icebp
pushw
aaa
add
in
xor
ds
neg
push
add
cltd
lcall
cmp
ss
push
pop
repz
lea
neg
sbb
stc
call
or
arpl
js
jne
or
sub
icebp
cwtl
push
adc
mov
test
repz
mov
mov
mov
mov
in
jp
pop
lock
adc
or
fisttpll
sbb
popa
push
outsl
imul
jmp
cmp
jno
xor
push
ret
push
imul
fsubrl
es
popf
add
iret
xchg
dec
push
or
cli
adc
rcrl
pusha
popf
sbb
pop
fmull
sub
or
lods
or
mov
mov
push
je
lods
cli
sbb
das
push
mov
add
mov
inc
sahf
jp
test
es
cmpsl
fcomp
xor
lds
push
xchg
rcrl
gs
mul
lret
cmp
or
adc
test
in
and
pop
mov
mov
xchg
dec
sub
in
lods
inc
mov
or
fwait
inc
stc
std
sbbb
pop
sbb
loopne
or
pusha
cmp
lock
sub
test
cmc
cmp
int
stos
hlt
mov
xchg
js
fidivrl
dec
and
and
mov
sahf
fwait
xchg
or
rcrl
mov
iret
fwait
stos
sbb
sub
or
mov
pop
lods
gs
addr16
loopne
pop
cs
loopne
mov
mov
sub
js
cltd
push
aas
sbb
lods
jb
punpckhdq
jne
mov
inc
adc
mov
repz
sbb
in
lea
rclb
outsb
cmp
cmp
dec
inc
aam
mov
jecxz
stos
cmc
add
aaa
ja
fmull
jne
mov
icebp
mov
std
xchg
mov
cmp
inc
cmp
aaa
push
sbb
ffreep
mov
imul
sbb
jmp
mov
daa
lret
je
jo
mov
test
insb
test
adcb
mov
jb
ljmp
mulb
xchg
imul
enter
pusha
mov
xchg
out
xlat
xor
push
int3
inc
int
sbb
arpl
in
inc
je
adc
stc
and
inc
or
cs
shr
lods
loop
dec
jge
jmp
movsb
stc
or
out
outsb
test
adc
fdivrl
mov
and
mov
xchg
roll
xchg
outsb
push
cmpsl
lock
or
fcoml
push
test
aam
std
or
pop
push
mov
cmp
mov
into
hlt
loop
in
imull
inc
and
mov
cltd
cmc
outsb
leave
loope
mov
mov
xchg
ja
xor
mov
roll
lods
dec
jns
divl
push
lcall
pop
push
cli
cwtl
dec
jg
clc
mov
sub
sbb
jmp
adc
sbb
inc
repnz
stc
mov
mov
xchg
mov
enter
aad
jno
inc
push
mov
loope
adc
jnp
mov
pop
imul
xor
jge
aad
lcall
lods
jb
fbstp
into
jno
xor
adc
mov
negb
ficoml
mov
inc
jmp
cli
inc
push
lock
rcll
xchg
std
inc
lret
sub
push
mov
pop
push
loope
out
lret
icebp
imul
cltd
pop
sbb
push
repnz
jecxz
cli
test
stos
and
jne
aad
sbb
lods
mov
or
out
lcall
fsubrl
mov
shll
dec
es
mov
out
jae
jecxz
daa
addl
add
je
jnp
loope
push
inc
lods
push
add
mov
mov
jae
or
lock
inc
icebp
mov
or
gs
adc
mov
lods
mov
jnp
and
mov
sahf
test
mov
scas
aam
xchg
ljmp
imul
push
pop
dec
add
mov
aas
int
subb
push
add
jnp
inc
push
lea
cs
cmpsl
mov
stc
loope
jp
dec
sbb
mov
jg
sbb
and
stc
adc
mov
movsb
imul
or
lret
sub
cwtl
and
jle
stos
jo
dec
das
push
ljmp
scas
popl
pop
pop
ret
sub
inc
pop
xchg
cmpsb
jb
xchg
aaa
mov
pop
cmc
xchg
lcall
add
push
xor
lea
push
insl
mov
cmp
divb
outsb
mov
jns
mov
push
fldt
popf
fnsave
jl
adc
sub
mov
cwtl
pop
push
xchg
mov
add
and
mov
insb
inc
sbb
hlt
and
add
and
hlt
mov
lcall
in
repnz
lcall
xchg
jl
lret
inc
jno
loop
xchg
imul
nop
mov
loope
mov
repz
lea
mov
jge
dec
and
insb
dec
sbb
aaa
push
push
inc
push
push
mov
test
int
lods
stc
pop
ret
lods
jl
xor
idivb
mov
mov
aaa
call
pushf
jne
cmp
sub
int3
xchg
sbbl
outsb
jl
xchg
in
add
pop
add
and
icebp
lret
or
cmp
fxch
icebp
sbb
cmp
jmp
mov
imul
aas
pop
decb
push
cmpsl
xchg
stos
mov
test
xchg
int3
popa
cltd
jne
test
cmp
add
push
pop
gs
mov
dec
mov
adc
aam
adc
in
and
add
fiaddl
sub
ret
daa
or
mov
aam
mov
xchg
sti
xor
dec
enter
fbstp
jmp
cli
aas
sbb
out
mov
fidivl
jno
shrl
dec
sbb
enter
loop
or
dec
fistpll
cmp
mov
and
jb
sub
aaa
ljmp
les
jno
push
loope
in
aaa
pushf
mov
mov
or
pop
sbb
sub
jmp
push
jmp
outsb
push
mov
sbb
xchg
push
cmp
add
mov
int3
sbbl
fiadds
cmp
jmp
jmp
cli
jle
sub
jle
and
or
jb
iret
insl
ja
outsb
lods
loop
jbe
pop
and
mov
mov
sahf
lahf
pop
outsl
loop
mov
inc
les
aaa
les
mov
adc
es
mov
mov
inc
imul
insl
std
add
push
ljmp
xor
cmp
andl
adc
sbb
insb
test
push
add
jae
dec
jle
jo
outsb
imul
movsl
or
ss
sbb
cld
sub
arpl
sbb
stc
enter
insl
adc
call
dec
xchg
sub
dec
sub
pop
cmp
sbb
mov
test
xor
dec
pop
xchg
into
ljmp
xor
and
jno
mov
inc
jae
jecxz
enter
lret
adc
xlat
stc
in
xchg
fildl
sub
ret
icebp
in
jp
ja
push
loopne
xchg
stos
xchg
xor
mov
ljmp
cli
dec
xchg
testb
je
lcall
push
xor
pop
insl
mov
or
xchg
inc
sub
jg
imul
stc
or
cs
ret
mov
sbb
shlb
test
addr16
movsl
ds
xchg
outsl
insl
xor
add
lea
sahf
mov
mov
popf
es
loope
and
inc
lahf
xchg
xchg
mov
sub
jo
xor
xchg
push
dec
sti
sub
mov
add
addl
out
push
in
mov
subb
lods
pop
out
imul
loop
push
cmp
push
xchg
daa
int3
push
popa
mov
pop
negl
mov
add
push
push
push
fiaddl
and
push
cmp
mov
dec
push
data16
sub
sbb
out
popf
mov
outsl
fs
adc
fcom
in
jb
inc
cmpsl
mov
cmpsl
sti
inc
dec
aas
adc
in
mov
mov
xchg
mov
clc
sbb
repnz
push
test
sub
add
adc
jae
push
jl
and
les
lret
adc
sti
adc
lock
jp
sbb
dec
sbb
dec
mov
fs
xchg
dec
add
sahf
inc
mov
push
mov
in
insb
out
add
mov
xchg
mov
leave
lcall
xchg
lds
insl
xchg
add
sahf
mov
pop
out
rcl
std
mov
rol
mov
mov
mov
jl
and
push
shrb
adc
xchg
hlt
mov
dec
adc
repz
push
mov
cmp
mov
testb
sbb
add
adc
iret
sbb
stos
pop
jg
adc
or
xchg
sbb
pop
shld
add
mov
in
or
out
ss
icebp
addr16
cs
dec
sbb
lret
cmp
insb
cmp
xor
clc
cmpsb
push
jp
sti
push
mov
and
enter
push
lods
gs
jb
ljmp
inc
push
mov
and
adc
out
push
pusha
mov
pop
pop
dec
cmp
pop
add
adc
cmp
sub
adc
or
lods
xchg
mov
cwtl
xor
add
mov
lods
lcall
and
lret
sub
outsl
cmpsl
aaa
loop
test
sahf
mov
cmpsl
cmc
leave
rcr
xchg
jge
add
pop
repz
out
repz
adc
leave
add
pop
sub
adc
sbb
lea
fwait
call
loopne
mov
rcrb
das
cmp
jg
mov
dec
daa
mov
or
mov
mov
or
xor
sbb
ja
adc
xchg
fsubl
jmp
jnp
negb
lret
xor
mov
xchg
add
ds
jl
insl
add
mov
dec
add
lcall
xchg
sub
pop
jge
jne
and
add
add
push
pop
cltd
mov
xchg
jmp
sbb
popf
or
xor
addr16
lahf
pop
push
inc
add
enter
test
jmp
sub
rcrl
ljmp
loop
xchg
or
loopne
sbbb
lcall
insl
mov
popf
sbb
and
aad
ljmp
push
or
es
pop
pop
push
repnz
and
adc
or
add
xchg
mov
je
sub
fdivl
clc
rdmsr
fisttps
aaa
push
xchg
rorl
adcl
test
sub
inc
mov
jo
mov
push
adc
popa
fstpl
sub
leave
pop
xchg
mov
inc
xchg
out
add
mov
push
scas
inc
mov
aaa
aas
shlb
jmp
cmp
movsl
mov
repnz
jecxz
jae
lret
or
dec
mov
push
xchg
popf
test
dec
repnz
test
adc
sub
ljmp
daa
aad
push
fildl
andl
aam
push
fistpl
push
aaa
sub
or
cmpsb
ret
inc
mov
movsl
dec
or
jb
mov
push
ja
dec
outsl
cmp
xlat
sub
xchg
lahf
fsubrl
sub
stos
push
mov
dec
sub
lahf
test
xor
ds
and
fildl
dec
and
mov
out
imul
push
jnp
jge
jecxz
mov
sub
fldl
lcall
jmp
cli
push
inc
mov
pushf
inc
movb
push
lahf
or
loope
dec
cmc
mov
jmp
jnp
or
mov
and
inc
mov
mov
inc
ja
mov
inc
ja
repz
lcall
mov
fadd
add
sahf
popf
and
ret
or
in
repnz
mov
data16
data16
lahf
dec
inc
mov
repnz
bound
add
cmp
add
test
mov
and
imul
cmp
scas
enter
insl
lock
icebp
xor
cmpsb
imul
pusha
sub
mov
xor
push
imul
cmp
push
out
cmp
cmc
gs
jns
pop
xor
or
add
xchg
insb
mov
or
arpl
add
idivl
mov
out
mov
fcomip
sbb
test
in
movsb
add
cmp
je
fsubrp
cmp
mov
out
test
gs
sbb
sbb
cmc
je
sbb
ret
iret
push
addb
aam
jno
rorl
inc
loope
push
aam
addb
and
xorl
pop
pop
dec
jecxz
cmc
ss
cli
cmpb
in
mov
mov
fistpll
js
dec
test
and
into
adc
xor
jnp
mov
ret
into
jmp
jp
xlat
leave
and
jne
push
xor
sub
sahf
notb
dec
frstor
xor
cmp
sti
in
ret
fld
cwtl
addr16
movsb
bound
lods
jo
mov
xchg
inc
test
push
sub
inc
shlb
fs
mov
ds
push
pop
fwait
push
and
mov
and
es
notl
popl
mov
jge
popf
xchg
pusha
jno
dec
ret
stos
lds
mov
gs
inc
dec
cmp
push
pop
ja
jle
dec
bound
sbb
cli
fstl
cmp
push
adc
and
nop
dec
or
adc
jae
mov
push
insb
pop
xchg
pop
popa
movsl
rcrl
push
in
or
and
or
test
fwait
scas
ret
aam
and
ror
pop
adc
mov
push
mov
push
shlb
lods
sbbl
adcb
dec
xchg
int
sbb
gs
jmp
jb
fiadds
add
adc
pop
jne
addl
gs
xor
fdiv
xor
movsb
mov
sbb
xlat
xchg
fsubl
insb
xchg
test
or
cs
rorl
inc
pop
push
push
cmc
daa
sarb
lahf
or
dec
jbe
stc
adc
mov
xchg
push
pop
aad
rolb
movsl
cmp
std
fsubr
mov
in
leave
insb
mov
push
inc
out
ret
and
or
popa
out
fcoms
inc
test
mov
push
cmc
mov
into
stos
mov
hlt
sbb
stc
lahf
hlt
test
rcrl
pop
rclb
add
xchg
inc
mov
push
push
mov
cmp
mov
lods
and
push
or
push
mov
loope
jae
js
out
mov
outsb
daa
mov
fcomps
es
pop
sbb
add
imul
je
daa
addr16
imul
dec
pusha
push
add
fdiv
lods
pop
xlat
inc
fs
push
inc
dec
mov
arpl
sub
test
jne
aam
mov
cli
enter
mov
ffree
test
cmpsl
dec
sbb
lret
inc
sbbl
jmp
jge
inc
ficompl
popa
jge
ds
xor
cld
in
out
mov
add
inc
xor
int3
call
insb
cmpsl
outsl
and
mov
sub
mov
out
xlat
int
out
push
xor
xchg
mov
int3
sbb
mov
push
jnp
or
cmpsb
repz
inc
sub
or
stc
xchg
fwait
movsl
outsl
lds
inc
subl
adc
loop
data16
outsb
jmp
in
insb
mov
outsb
adc
mov
cld
pop
out
or
stos
lcall
inc
sti
cmp
imul
loope
pop
pop
jle
push
cmp
mov
xlat
popa
out
jne
xlat
mov
push
mov
and
cmp
nop
in
lea
or
clc
xchg
pop
pop
leave
stos
dec
mov
pop
enter
ss
cmp
mov
mov
xor
xchg
arpl
fsubrl
xchg
xchg
mov
dec
xchg
out
mulb
sub
xor
lods
lahf
sbb
inc
jne
stos
pop
dec
adc
std
and
cmp
cmp
lretw
fs
iret
divl
imul
addl
mov
push
pushf
sti
sahf
movsl
adc
jmp
je
xchg
or
stos
and
cmp
aad
or
sahf
scas
data16
pop
pop
pop
or
sub
call
jecxz
cltd
mov
sti
test
outsb
mov
fimuls
stos
sbb
dec
push
pop
xor
sti
repnz
out
or
jbe
icebp
push
add
jno
lahf
adc
cmp
push
jns
in
sahf
test
mov
and
pop
push
aam
inc
outsb
and
inc
je
fdiv
arpl
insl
inc
xor
andl
out
mov
dec
push
mov
fwait
cmc
fs
mov
repz
inc
push
jge
cltd
mov
or
mov
xor
jae
mov
jl
cmpsl
sub
lods
enter
js
sbb
daa
add
sub
imul
xor
icebp
adc
dec
push
nop
nop
inc
les
ljmp
ss
int3
push
or
xchg
xchg
dec
movsb
pop
fimull
dec
cmp
pop
pop
pop
dec
aaa
jp
push
lcall
xchg
fiaddl
ljmp
sub
pop
pop
dec
aaa
jp
push
lcall
xchg
fiaddl
ljmp
sub
pop
pop
dec
aaa
jnp
push
lcall
xchg
fildl
ljmp
addr16
pop
pop
lret
daa
xchg
xlat
gs
and
out
loopne
sysexit
dec
add
adcb
mov
jne
test
xchg
xor
inc
xlat
in
cmc
xchg
add
mov
fptan
gs
add
sub
push
stos
jb
jb
cmc
mov
mov
imul
pop
and
insl
cli
pop
push
xchg
sub
cmc
sti
add
aam
xorl
lods
xchg
xchg
das
mov
cmp
stos
mov
jge
lret
mov
inc
ret
and
sub
into
int
movsl
add
push
push
jb
popf
js
add
adc
in
adc
inc
insl
jns
and
inc
or
adc
sub
aad
and
xchg
add
sub
sahf
jecxz
cltd
jp
lds
nop
fisttpll
les
stc
or
paddw
jbe
mov
popa
ficoml
mov
les
stos
xchg
inc
aam
hlt
jb
jp
bound
sub
and
std
dec
pop
jb
pop
les
sub
bound
add
mov
push
repnz
sbb
mov
std
dec
jmp
bound
xlat
data16
sbb
or
adc
ret
outsb
rolb
inc
fcoml
daa
mov
std
inc
jecxz
fldl
mov
or
ret
xor
arpl
push
xchg
sub
notl
push
fidivs
push
lcall
jne
test
xchg
xor
inc
aad
in
cmc
xchg
add
mov
push
repnz
adc
and
jb
cmc
xchg
add
rcrl
mov
adc
test
pop
mov
dec
jno
cwtl
imul
in
int3
or
lock
cmp
jne
inc
dec
stos
sbb
or
ja
loop
jo
jno
in
test
fldt
dec
movsl
sahf
movsb
sbb
xorb
das
and
js
mov
lret
stos
ret
cmp
lcall
lods
insb
adc
test
mov
add
cld
inc
push
out
sub
and
ds
mov
call
std
pop
xchg
xchg
mov
adc
enter
dec
sbb
fidivrl
cmpsl
inc
ja
adc
gs
add
push
pop
sbb
jne
inc
lds
jne
std
icebp
ss
pop
js
aad
fisubrl
mov
cmpsl
lods
ljmp
popa
pushf
cwtl
or
pop
inc
fldt
cmp
and
or
fidivrl
cmp
dec
sbb
stos
mov
icebp
cmp
cli
sbb
fs
popf
xlat
and
pop
jnp
jle
mov
adc
mov
dec
add
cld
sbb
push
js
sub
adc
jbe
js
push
or
cmpsl
and
lock
jecxz
sub
outsb
notb
add
call
pop
sub
sub
loope
jmp
cs
aad
mov
bound
or
lahf
xor
in
xchg
xor
push
push
pop
mov
test
and
jne
jbe
movl
cmp
cmp
mov
add
mov
jb
and
repnz
test
mov
fcoms
popa
fsubrs
mov
stc
dec
inc
imul
or
inc
outsl
mov
into
xchg
push
nop
pusha
ja
jns
jmp
cmp
repz
or
mov
iret
mov
sahf
pop
pop
add
lea
xor
pop
loope
scas
jne
jle
xchg
scas
test
sub
movsb
lcall
cmp
std
xor
pop
jmp
adc
out
sub
xchg
and
lret
or
add
sbb
repnz
lods
gs
dec
cmp
jb
aad
jle
test
dec
sub
pop
cmp
jbe
test
lods
ret
out
and
scas
in
push
ja
xchg
icebp
mov
movsb
xchg
fucom
shrb
and
cltd
into
mov
outsl
mov
sub
xor
mov
sub
jmp
xlat
loopne
dec
lock
arpl
cmp
fsubrl
adcb
add
adc
insl
cmp
fmull
pusha
push
sbb
mov
outsb
and
ret
ds
movsl
out
sub
jge
jo
mov
adcw
sub
add
shrb
mov
ret
cld
inc
into
pop
movsl
jle
bound
xor
lock
dec
pop
inc
push
xor
xchg
inc
fmull
into
pop
adc
hlt
mov
mov
pop
inc
sbb
push
jle
gs
cmpb
aad
xor
cmp
mov
cmpsb
addl
pushf
rcrl
and
adc
bound
push
js
sub
mov
aad
jge
outsb
cvttps2pi
shr
arpl
sub
popa
faddp
ficomps
push
pop
icebp
mov
in
mov
sub
jnp
or
shl
aaa
or
cs
jecxz
pop
jno
inc
sbb
xchg
movsb
in
cmp
jae
or
cmp
out
into
lret
mov
popa
imul
movsl
inc
and
pop
mov
ljmp
sbb
push
dec
orb
push
lret
ficoms
cmpsl
das
orb
pop
pop
orb
out
ror
fdivs
scas
fwait
xchg
repnz
rcrb
mov
push
dec
cmpsb
mov
or
pop
jecxz
in
arpl
mov
les
jnp
adc
sub
sbb
jp
xchg
fdivl
andb
sahf
cmc
imul
jb
xchg
shlb
mov
loopne
je
sbb
cmp
repnz
xchg
loop
pop
sar
pop
sub
xor
rorl
add
pop
shl
push
pop
das
lret
mov
xlat
push
sub
out
loopne
test
xor
fimuls
sub
ror
lahf
clc
outsb
scas
dec
xchg
into
jg
jns
xchg
mov
out
rclb
inc
aad
lods
cmpsl
xchg
xor
mov
ja
int3
add
scas
adc
rcrl
cwtl
xlat
stc
mov
push
add
pushf
sub
cmpsl
push
xchg
repnz
sbb
dec
lods
mov
and
imul
xlat
sarb
xlat
sub
stos
push
popa
sub
lret
lret
mov
in
jle
roll
ss
lea
pop
mov
sbb
loopne
or
and
pop
or
ja
adc
ret
insl
andb
enter
jnp
or
insb
imul
arpl
add
add
jns
imul
xchg
jmp
es
jne
test
xor
out
out
mov
push
jg
ret
sbb
jno
xchg
sbbl
ss
test
adc
fs
inc
pop
xor
push
xor
xchg
cld
movb
sub
pop
cld
mov
push
add
jp
mov
adc
repz
mov
add
lods
mov
jl
mov
mov
jbe
repz
pop
pop
shrb
shrl
mov
sub
mov
sbb
fnsave
rclb
call
push
jle
add
aad
out
lret
sub
punpckhdq
push
scas
sub
sarl
push
mov
cwtl
aas
or
mov
or
pop
mov
sbb
mov
add
xor
cmp
pop
xor
cmp
jbe
or
sub
or
daa
xchg
rcl
and
mov
adc
pop
clc
cmc
cmp
mov
mov
sbb
jge
xlat
andb
push
outsl
mov
pop
dec
fs
lods
mov
jecxz
dec
xchg
cmpsb
inc
cltd
dec
jge
push
and
adc
popa
dec
inc
or
lahf
test
leave
adc
pop
imul
jl
in
fiadds
push
push
adc
jne
and
ret
jle
in
push
inc
repnz
das
test
mov
adc
les
xchg
inc
add
adc
lret
dec
sub
sub
into
mov
or
lea
imul
pop
in
sub
or
jno
mov
jle
jae
loop
mov
fdivp
pop
or
cmc
icebp
ljmp
lea
addl
loope
testl
xchg
imul
int
mov
lea
dec
adc
lcall
sbb
notl
xor
xorl
imul
lea
cmpsl
movsl
xor
shlb
push
xchg
les
or
sbb
dec
aad
and
or
inc
shrl
leave
clc
push
pop
scas
call
bound
fld
idivb
dec
push
rorb
rorb
test
ficomps
jb
dec
mov
inc
xchg
sub
test
leave
std
not
sbb
andl
rcrl
outsb
or
push
cmp
push
cmpsb
jnp
adc
mov
cmp
mov
mov
xchg
sti
imul
fldcw
sbb
cltd
mov
xor
or
lea
cltd
cmpsl
fisttps
xchg
cmp
jmp
lcall
inc
xchg
xchg
dec
sbb
mov
cmpsb
pop
jnp
leave
sahf
push
clc
xlat
jns
popa
shlb
sbb
repnz
out
dec
cwtl
sbb
jns
test
jnp
sahf
push
lods
lds
xor
push
xor
push
jg
fstps
and
pop
xchg
jnp
scas
sbb
lods
pop
cltd
inc
mov
push
in
push
ret
jp
out
mov
gs
adc
rcll
lret
aam
mov
mov
lock
aas
imul
adc
arpl
lcall
mov
aaa
fidivrs
cmp
xchg
sti
fisubrl
xor
jno
inc
dec
bound
daa
cmpb
and
addl
aaa
mov
aam
push
inc
push
mov
pop
dec
rcrl
pushf
call
stc
mov
mov
shlb
subl
in
inc
sbb
fpatan
decl
cmp
gs
cmpsl
sbb
in
iret
jo
xor
in
imull
jno
test
scas
xor
iret
pop
ret
lea
xlat
out
cmp
or
inc
pusha
stc
push
pop
jp
xor
orb
lcall
outsb
xchg
push
test
adc
and
movsl
outsl
mov
or
inc
mov
ret
jb
cwtl
ret
or
mov
cmp
lahf
pop
gs
push
xchg
popa
testb
inc
sbb
jle
addb
mov
aad
sbb
sbb
data16
pop
movsb
je
addr16
xor
jo
add
xchg
jl
clc
inc
mov
pop
xchg
mov
push
pop
in
lcall
xchg
lds
lcall
sahf
gs
mov
mov
repz
es
stc
dec
mov
jecxz
jo
outsl
imul
xchg
stos
inc
inc
pop
cmc
push
xchg
inc
push
xor
loop
in
mul
repz
loopne
add
cmpb
xchg
lcall
mov
scas
lcall
cwtl
mov
add
lods
and
sub
sub
es
dec
outsb
inc
popa
cli
lahf
rorb
cmpsl
dec
je
stos
in
out
leave
pop
lea
loopne
adcb
push
push
jge
pop
je
scas
ret
clc
imul
add
xchg
dec
inc
xor
push
or
not
cmp
jle
jnp
mov
clc
ret
push
sub
cld
push
jns
dec
stc
pop
jno
std
notb
fs
mov
cmp
xor
jmp
into
add
mov
pop
cld
std
or
scas
pop
mov
cltd
push
inc
sar
in
inc
aam
sbb
insl
movsl
xchg
jbe
mov
sbb
xchg
outsb
gs
out
or
pop
pushf
inc
mov
imul
dec
sbb
xchg
push
and
xor
pop
aad
movsl
jno
or
rol
mov
cmp
jae
jmp
push
jo
or
xchg
dec
cmp
inc
sbb
add
daa
push
xor
ret
adc
xchg
mov
xbegin
in
scas
jecxz
movsl
sarl
mull
mov
ficomps
xchg
add
call
pop
pop
jbe
les
cmp
outsl
jp
call
mov
or
xor
mov
and
stos
hlt
xchg
shrl
mov
jns
pop
ret
add
xchg
mov
mov
pop
out
inc
pushf
jo
push
mov
push
xchg
mov
fucom
ret
imul
cltd
int3
imul
sub
mov
jnp
cld
pop
jne
lret
pop
fsubl
fadds
js
push
jo
fists
sub
aam
aad
testl
mov
enter
stos
lret
cmp
mov
arpl
in
sub
cmp
jge
xorl
sub
fucomp
stc
pop
ret
or
mov
arpl
iret
aas
popf
and
int
lahf
jle
fsubs
jno
add
aad
mov
out
push
inc
insb
mov
inc
and
mov
loope
es
shlb
pop
dec
xchg
aas
jge
ss
sub
shlb
aad
mov
inc
dec
ret
sahf
pop
xor
leave
jno
xchg
pop
aas
jno
ret
mov
int
in
pop
push
sbb
xor
into
or
int
mov
sbb
pop
inc
mov
pop
dec
repnz
shl
gs
xor
jbe
xlat
dec
popf
int3
jae
test
mov
addr16
or
ret
or
mov
jl
mov
cmp
xor
sbbl
dec
dec
outsl
mov
push
push
or
scas
xor
ja
cwtl
fdivrs
push
fstl
mov
dec
stc
xchg
xchg
mov
call
add
jg
movsb
xchg
pop
fstpl
dec
test
hlt
sar
in
daa
rclb
cmp
cli
ret
pop
jp
xchg
sbb
cld
out
mov
in
lds
clc
mul
js
imul
ret
add
je
push
movsb
ret
cld
pop
iret
outsb
adc
lret
sub
popa
mov
xor
xor
sbbb
in
imul
add
sub
icebp
enter
cli
les
popf
sub
push
adc
push
movsb
imul
das
or
mov
mov
mov
pusha
ds
mov
pop
leave
dec
addr16
push
pop
rcll
inc
jge
inc
lret
push
imul
inc
rolb
mov
dec
mov
mov
icebp
js
testb
dec
mov
push
push
enter
cli
gs
ds
sub
stos
add
imul
aaa
add
add
jp
out
nop
out
mov
fstpl
ret
sbb
shlb
adc
inc
addr16
fisttps
ljmp
dec
and
fiaddl
inc
mov
xchg
lds
in
xor
ljmp
push
arpl
push
xchg
pusha
push
imul
xchg
xor
and
or
jae
nop
fsubrl
aam
ljmp
or
ret
xchg
xchg
sarb
arpl
sbb
into
adc
scas
int
dec
xlat
ja
mov
cmp
mov
add
or
and
sub
inc
outsb
les
inc
push
sbb
push
jne
push
or
jno
jnp
stos
pop
cli
mov
pushf
xchg
inc
xor
add
mov
pusha
xchg
xor
and
cmp
enter
mov
xor
xor
ret
jns
hlt
xor
or
es
jae
fldenv
xchg
je
scas
mov
or
mov
fildl
adc
out
rclb
and
xor
sub
ret
jns
cmp
or
leave
push
lret
fiadds
cmpsl
pop
inc
sahf
push
pop
test
adc
fs
mov
icebp
outsl
out
pop
mov
xor
cltd
jo
popa
or
mov
dec
jmp
ds
popl
fsts
loopne
sub
jae
mov
ja
mov
sbbb
repz
jg
sub
inc
jns
or
sbb
call
ja
hlt
je
add
shr
or
stc
add
inc
sub
mov
adc
rolb
leave
fucom
lods
adc
movsl
mov
push
dec
std
pop
cmp
xchg
dec
out
mov
je
push
dec
das
push
sarl
loope
push
lods
loopne
lock
enter
push
test
inc
xchg
mov
dec
sub
fadds
cld
pop
icebp
inc
lods
sbb
fdivrl
iret
xchg
gs
jle
mov
push
imul
cmpsl
sub
cmp
cld
jge
push
push
dec
xchg
pop
in
fsubrp
and
incl
shll
pop
enter
fwait
xchg
cwtl
and
xor
pop
mov
lods
orl
imul
rclb
xor
loop
aam
push
bound
fmull
jae
sub
xchg
cmc
inc
rolb
push
dec
int3
notl
mov
sbb
push
mov
in
mov
pushf
outsl
inc
xor
adc
jecxz
in
push
cmp
push
cs
aaa
out
imul
adc
push
repnz
jmp
sub
loop
call
test
test
cli
cld
fwait
sbb
xchg
fwait
roll
dec
jp
aas
and
dec
rcl
add
push
aaa
sbb
inc
dec
outsl
mov
out
mov
insb
mov
xor
mov
sub
frstor
shlw
jmp
adc
push
sarl
pop
inc
cmpsl
scas
shlb
or
mov
ljmp
mov
ffree
lahf
jbe
jae
mov
xchg
fs
mov
mov
and
or
cli
and
loope
es
xchg
and
sub
sub
test
aad
push
xchg
push
out
jb
xchg
xchg
mov
test
and
int
hlt
enter
sub
data16
scas
andb
pushf
gs
icebp
ja
push
xchg
popf
xchg
cmp
sbb
mov
pop
xor
out
addb
les
jno
jnp
fildll
movsl
in
jge
pop
rorb
cmp
pop
ja
dec
dec
rcrb
jno
out
sbb
mov
cmp
cmc
add
mov
and
xchg
mov
sbb
push
fwait
sub
jns
movsl
ret
inc
pusha
pop
fnstcw
pop
imul
loopne
cmpsb
and
loope
out
test
pop
jne
mov
mov
sti
ret
xor
repnz
mov
les
popa
fildl
dec
call
mov
jge
cmp
fldt
dec
sub
shll
add
dec
mov
xchg
and
inc
std
adc
ficoml
outsl
mov
mov
enter
leave
pop
mov
les
out
repz
inc
xor
adc
push
mov
inc
pusha
shl
mov
out
stos
xrelease
lods
dec
bound
xchg
and
cmp
je
jg
inc
bound
cmp
insb
mov
sbb
xchg
pop
jno
cld
loopne
pop
or
fldt
sub
insl
pop
sub
inc
nop
xor
inc
jae
jnp
hlt
sahf
lock
inc
dec
insl
inc
xchg
adc
aad
arpl
jmp
jmp
lods
cmp
and
sarl
jb
imul
lea
cltd
movsb
cmp
xchg
mov
push
fwait
mov
adc
inc
in
pop
ret
add
movsb
lods
jne
imul
sti
sbb
or
jmp
xchg
popa
lods
int
dec
es
pop
inc
jge
popf
inc
pop
push
xchg
popa
xor
cwtl
rclb
mov
cmp
jp
cli
pop
aas
sbb
xchg
fdivrs
movsl
push
xor
cmp
add
inc
shll
xor
or
fnstenv
stos
and
jns
pop
outsb
pop
cmpl
pop
pop
imul
and
push
insb
pop
out
addr16
loopne
or
mov
sub
insl
ficomps
jnp
aas
lock
out
jl
add
cmp
popa
inc
lea
icebp
add
inc
pop
sub
mov
aad
ljmp
stos
subb
out
cli
cld
mov
mov
cmp
mov
sarl
std
aam
sub
repz
repz
mov
mov
add
int
mov
cmp
in
movsl
aaa
adc
gs
pop
hlt
push
jno
add
cmpsl
cld
bound
add
add
scas
stos
adc
jg
jnp
shr
push
mov
shll
dec
push
mov
lret
pop
cmp
or
xor
hlt
inc
jne
mov
jne
pop
xchg
inc
ds
lcall
pmulhuw
cmp
cmp
mov
xchg
push
notb
in
push
inc
adc
fldl
pop
rorl
int3
pusha
pop
inc
mov
xchg
je
mov
sbb
pop
int
call
lds
or
push
ljmp
pushf
pop
dec
rcrl
inc
or
mov
aad
xchg
repz
xlat
in
test
and
xacquire
shlb
push
cmpsb
ror
lods
xor
sti
xor
ljmp
jecxz
lret
out
mov
clc
sub
movsb
pusha
mov
jnp
dec
cltd
inc
shl
enter
or
filds
fsub
rorl
xchg
push
test
and
mov
inc
hlt
int3
push
cmc
mov
cmp
xchg
mov
and
push
sub
cmp
jmp
pop
adcb
fdivp
fimull
inc
test
mov
mov
jb
movsb
xchg
cmc
cmovne
mov
push
clc
or
push
xlat
or
insb
and
fsubr
xorl
xchg
repnz
mov
insl
aad
insb
lock
xchg
les
insl
shrl
hlt
xchg
movsb
xchg
loop
xchg
test
fwait
mov
jmp
int3
and
add
aam
mov
filds
fs
andb
xchg
fwait
test
xchg
int
mov
in
test
push
or
cmp
add
mov
lds
mov
notb
push
pop
fs
sub
fists
outsl
jl
inc
aam
adc
push
outsb
enter
andb
mov
jnp
int
pop
and
inc
inc
jmp
xchg
xor
bound
or
stos
fwait
sahf
shrl
test
lret
faddl
ja
decl
jg
lea
adc
rolb
push
repnz
adc
and
jb
cmc
xchg
add
mov
push
repnz
adc
and
jb
cmc
xchg
add
mov
std
repnz
adc
xchg
xor
inc
aad
lds
xchg
add
mov
push
jb
bound
jp
aas
cwtl
movsl
and
and
sbb
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xchg
mov
std
movsb
mov
push
sbb
add
sub
cs
pop
push
dec
data16
jbe
xchg
lods
int3
out
imul
push
push
push
or
sbb
sub
aas
push
pushf
data16
insb
xchg
mov
mov
aam
in
testb
xor
sub
sbb
sbb
repnz
enter
xor
in
bound
sub
scas
cmp
jp
mov
jo
xorb
rcrl
cmp
xor
jbe
fs
pushf
xchg
in
sub
sub
fsts
xor
arpl
enter
int3
insl
mov
int3
es
push
dec
sub
jbe
xchg
xchg
mov
mov
ret
or
movsb
notb
mov
fcomp
pop
sarl
testb
movsb
jbe
inc
inc
dec
dec
lahf
cld
xor
mov
out
xchg
inc
or
jns
sub
xor
shll
ja
jnp
imul
and
imul
popa
push
sbb
push
cmp
pand
and
xchg
fwait
cmpsb
lods
mov
int3
out
div
push
add
adc
and
push
pop
data16
or
stc
loop
iret
mov
movsb
mov
push
jne
je
imul
add
in
mov
int3
fisubrl
sahf
cwtl
movsb
andb
insl
and
outsl
inc
cmp
or
add
jecxz
xchg
jmp
mov
imul
push
sbb
or
cmp
sub
pop
push
dec
data16
insb
xchg
lods
int3
out
imul
push
sbb
or
cmp
sub
pop
push
dec
data16
insb
xchg
mov
push
sbb
cmpsb
mov
pop
mov
js
jne
shr
mov
mov
jmp
arpl
rorl
xor
in
loopne
in
sbb
and
cwtl
push
andb
int
xlat
je
pop
lcall
movsl
push
jle
adcl
rol
cmpl
mov
aaa
mov
dec
js
das
popf
push
jnp
xor
sub
fldt
xor
popf
fmull
sub
or
jnp
inc
push
dec
sub
or
adc
lretw
sub
dec
dec
push
fs
aam
xor
lock
repnz
shl
sbb
stos
add
push
pushl
sti
out
shlb
cmp
mov
dec
jns
ja
rcll
lcall
add
in
andb
jnp
dec
or
out
sub
xchg
scas
push
fsubs
mov
add
insl
movsb
icebp
inc
xchg
add
sbb
faddl
in
jmp
sub
xchg
and
aam
sub
invd
add
int
ss
out
cmpl
in
mov
hlt
xchg
add
movl
sub
or
cli
fldt
lret
sub
push
icebp
cmp
stos
out
inc
cmp
push
mov
outsb
adc
xor
push
out
mov
and
adc
bound
sub
inc
cmp
dec
cmp
movsb
mov
out
mov
mov
ror
adc
lods
push
scas
pop
fwait
js
setg
mov
or
int
pushf
shlb
sbb
imul
sbb
jmp
addb
xchg
push
xor
push
divb
adc
pushw
inc
pushf
adc
repz
movsl
push
mov
loop
lret
push
cs
pop
orb
inc
push
jp
enter
shrl
push
repz
and
outsl
shl
jno
or
or
dec
mov
dec
mov
out
push
les
out
ds
xor
repnz
shrl
push
cmp
inc
and
or
lea
jmp
mov
xor
imul
out
pop
int3
movsb
xor
sbb
dec
xchg
lods
pop
dec
adc
stos
sbb
xchg
pop
adc
je
int3
divb
dec
aad
loopne
xchg
cmc
mov
pop
push
push
sbb
iret
loop
or
orl
into
cmp
lea
adc
fs
in
and
jno
sub
roll
mov
repnz
sbb
notl
mov
stc
cmp
xchg
xlat
into
xor
test
imull
jmp
je
mov
adc
adc
cmpb
push
test
leave
insb
cmp
jg
sbb
pop
jno
mov
les
xchg
push
test
in
push
fiadds
pop
bound
repnz
mov
adc
sahf
xor
mov
mov
fiadds
arpl
in
adc
add
inc
pop
xchg
mov
add
pop
lock
lods
xor
scas
lcall
faddl
or
mov
ds
iret
faddl
enter
aas
pop
cmp
and
jno
bound
xchg
pop
test
fiadds
imul
sbb
mov
fwait
mov
inc
fidivrl
jnp
xchg
sbb
cltd
nop
pop
add
rcrb
mov
rcll
int
mov
imul
jmp
ja
xchg
inc
ret
call
fidivs
lds
scas
jno
push
ret
inc
jae
mov
add
inc
stc
lcall
pop
pop
mov
mov
pop
inc
ret
arpl
add
adcb
ret
sbb
pop
aaa
push
sbb
push
icebp
mov
or
cwtl
lods
cmp
pop
dec
test
jg
add
add
pop
ret
sub
xchg
jne
cmc
ljmp
fmuls
int
enter
daa
jle
dec
mov
mov
mov
aas
mov
mov
iret
and
xor
dec
mov
into
adc
gs
adc
inc
scas
aad
lods
adc
inc
insl
jnp
mov
jmp
and
ret
test
push
js
jnp
dec
std
mov
lcall
cmc
les
xlat
bound
sbb
xor
xchg
sub
inc
mov
das
int
adc
adc
nop
dec
icebp
data16
lret
outsb
jbe
pushf
int3
adc
xor
sub
mov
in
cmp
in
xchg
mov
ret
and
leave
insb
add
mov
mov
ficoms
pusha
data16
mov
cmc
xchg
sbb
repz
or
and
pusha
xor
jb
xchg
stc
lea
cmpsl
pop
push
std
pop
je
andl
add
adc
push
shll
sub
jne
mov
sbb
dec
adc
lcall
popa
pop
cltd
inc
dec
push
xor
mov
test
outsl
lea
clc
sub
andnps
pop
clc
ret
mov
cmp
push
fwait
or
adc
xor
in
jp
imul
jns
mov
insl
fucom
sub
inc
mov
or
add
js
push
sub
pop
mov
mov
and
pop
cwtl
in
das
jge
add
hlt
cmp
adc
jg
mov
mull
inc
dec
sbb
dec
inc
gs
testl
imul
jecxz
es
ljmp
add
into
movsl
sbb
gs
insb
aas
mov
addr16
jmp
out
pop
cmp
xor
or
je
or
fsub
pop
ds
gs
loopne
xchg
cld
inc
clc
xor
insl
imul
mov
mov
dec
pop
pop
pop
cmp
inc
ss
outsb
pusha
je
mov
pop
fwait
nop
mov
cld
jns
mov
shrl
push
mov
cmp
test
inc
and
pusha
push
mov
xor
int3
add
jo
pop
mov
dec
test
inc
and
or
iret
push
int3
ret
mov
les
rcll
stc
xchg
dec
fsubp
jns
mov
pop
xchg
addr16
rcr
mov
pushf
or
push
iret
inc
call
sub
pop
sbb
cli
mov
dec
xchg
mov
mov
clc
cmp
adc
dec
mov
cwtl
xchg
popl
and
xlat
lret
add
aam
imul
xchg
xchg
frstor
add
cmpb
movsl
dec
int3
test
mov
popa
or
into
mov
sub
add
adc
fistpll
jb
mov
xchg
fimull
ds
or
and
daa
sub
cmp
test
fs
jg
shl
stc
sbb
pop
xor
sub
mov
in
mov
pop
mov
add
xor
fldcw
daa
jecxz
adc
cli
xchg
cmp
punpcklbw
test
test
lods
aaa
rclb
sbb
je
sbb
add
in
out
adc
mov
adc
adc
cs
pushf
pop
lea
xor
xor
jecxz
rorl
xchg
jbe
movsb
cwtl
dec
scas
enter
data16
popa
xor
loopne
stos
enter
les
data16
sbb
cmp
or
mov
sahf
xor
pop
mov
dec
lds
and
sub
or
pop
sbb
add
fwait
mov
out
in
outsl
std
sub
push
mov
iret
mov
add
daa
jnp
dec
inc
sub
mov
fldenv
aad
or
movsb
sbb
cmp
or
movb
pop
mov
aam
popa
sbb
cs
sti
les
sub
xor
shrl
fs
adc
pusha
daa
dec
xchg
pusha
mov
jne
and
addl
sarl
rcrb
dec
pmaddwd
inc
fnstsw
rcrl
f2xm1
lds
sahf
repz
in
jle
addr16
sbb
mov
popf
push
lods
sub
dec
in
cltd
push
jne
xchg
pop
les
divl
call
jp
mov
test
fcoml
xor
daa
imul
cmp
arpl
sub
out
sbb
stos
sbb
inc
cmp
mov
lret
dec
and
popf
push
lds
pop
enter
jmp
adc
pop
test
xchg
jp
add
sub
push
push
testb
adc
imul
xor
popa
popa
daa
pop
mov
mov
sti
lretw
es
sti
je
stc
mov
xor
stos
in
addl
shlb
or
je
fdivs
out
push
outsb
xchg
cmp
imul
sbb
pop
jp
inc
mov
mov
mov
adc
mov
and
mov
push
fistl
fcmovnb
fsub
mov
adc
cmc
mov
sbb
sarl
daa
cmp
xor
cltd
pop
pop
push
dec
cwtl
loope
sahf
or
cli
fstps
bound
leave
and
lock
and
divb
cmp
lods
jmp
aad
mov
xchg
dec
test
xchg
mov
leave
mov
pop
xchg
add
dec
out
scas
or
int3
inc
add
cmpl
and
repnz
xchg
inc
mov
or
test
fiaddl
mov
cmpsl
sbbb
push
scas
out
add
mov
shll
adc
dec
gs
xor
in
in
je
in
rcll
insb
mov
loopne
lds
mov
dec
push
test
insb
cs
push
lds
ds
popa
sub
mov
stos
mov
mov
lods
pusha
fwait
add
addr16
addr16
fcompl
dec
lret
test
mov
mov
int3
dec
jne
cmp
jle
addr16
cltd
lahf
mov
pop
jnp
dec
and
inc
hlt
mov
mov
movsb
push
pop
lret
dec
mov
test
cmp
sbb
ljmp
sub
or
pop
or
out
jo
out
das
sti
mov
inc
pop
inc
gs
dec
push
pop
jo
lret
sub
xor
je
cwtl
iret
pop
sub
daa
sbb
mov
pop
jae
pushf
pop
adc
into
mov
add
inc
std
jle
and
mov
sub
pop
dec
jns
mov
std
mov
add
jbe
sub
xchg
out
js
ret
cli
mov
test
sbb
arpl
scas
cld
jns
rorl
mov
xchg
pop
dec
and
mov
in
mov
or
fs
inc
mull
rcll
cmc
je
xchg
and
stos
mov
inc
in
xchg
out
pop
in
ret
cmp
lret
and
pop
out
movsb
mov
pop
sub
mov
test
sbb
jg
ljmp
jp
ljmp
bound
mov
push
cmp
and
mov
addr16
cld
fmull
jecxz
and
mov
xchg
ja
jg
jmp
ds
mov
dec
xlat
jmp
test
xchg
imul
test
gs
fwait
jb
and
shl
adc
push
lret
and
scas
int
decb
cmp
in
sub
inc
jmp
aam
cmp
popf
mov
push
jno
out
jo
adc
insl
jb
sarb
in
jmp
rcr
and
jp
sbbb
jo
xchg
jne
fs
inc
popf
out
push
mov
lcall
cmpsb
and
fstpt
push
out
push
lods
aaa
inc
and
aaa
daa
insb
out
aad
int3
xchg
add
xor
cmpl
inc
mov
cmp
push
jmp
popa
push
jmp
js
cmp
in
sbb
mov
aas
sahf
jnp
lret
xor
ret
dec
cmpsb
sbb
movsl
mov
or
jecxz
mov
push
xor
push
add
cs
int
les
lret
xor
pushf
mov
sarb
adc
xchg
fldcw
icebp
sti
dec
pusha
or
mov
lret
data16
jns
cld
fnsave
pop
iret
cld
add
jle
call
sub
insl
daa
or
sbb
sub
cwtl
int
and
xlat
ss
jecxz
and
leave
jne
cltd
adc
adcl
add
xor
sbb
mov
or
cmp
dec
mov
sub
mov
out
mov
fsubrl
out
jge
aam
stos
sbb
pusha
pop
rcll
ret
lods
sub
aam
xchg
adc
fsubl
or
jl
push
cmpl
mov
rcll
out
sahf
mov
push
mov
mulb
call
dec
in
dec
jmp
mov
xchg
mov
call
aad
jg
out
fwait
bound
clc
xor
mov
push
loope
outsb
jge
gs
cwtl
nop
mov
dec
gs
mov
mov
stos
imul
out
stos
pop
cltd
in
arpl
mov
inc
insl
sbb
imul
test
xchg
lcall
and
xor
push
sub
mov
inc
popa
xchg
or
push
ss
outsl
call
repz
sbb
sbb
fs
mov
sub
xor
mov
shrl
dec
mov
ds
test
xlat
push
pop
lahf
xchg
cmp
adc
test
jle
and
adc
iret
jne
fst
xchg
je
sbb
push
mov
iret
cs
aas
sahf
lahf
popf
xor
adc
push
jne
jno
xchg
cmp
mov
fmull
lret
imul
addr16
test
jo
jo
nop
jne
lahf
mov
shll
pop
or
jnp
xchg
gs
cmp
cmp
in
add
lahf
scas
aas
icebp
inc
dec
imul
pop
es
and
mov
icebp
add
pushf
dec
repnz
mov
jmp
daa
or
sub
divl
icebp
paddq
and
xchg
lcall
imul
sbb
dec
mov
pop
popf
cmp
push
in
nop
mov
dec
mov
cmp
scas
inc
aad
pusha
rcll
insl
loop
and
stos
repz
jb
movsb
inc
sbb
add
ljmp
xor
out
in
hlt
push
pop
lock
out
test
je
dec
xchg
push
add
pop
xorb
cmp
push
push
push
fwait
lcall
inc
add
aaa
pushf
imul
stos
je
aaa
repz
push
cmpsb
or
jge
or
andb
cli
jle
push
gs
js
jge
push
cmp
adc
jne
jnp
in
mov
sub
sub
inc
dec
std
repnz
or
push
or
xchg
sahf
push
pushf
xor
lahf
ljmp
sub
xorb
in
fcomps
mull
ret
or
mov
lret
fsts
sahf
int3
aad
test
sub
sarb
push
mov
fwait
mov
pop
gs
xor
pusha
cmpsb
pop
push
aad
scas
rclb
pop
cld
jne
xor
mov
cltd
out
sub
test
loop
mov
mov
cli
mov
mov
add
mov
jecxz
or
adc
xchg
mov
iret
shr
cmc
mov
xchg
into
getsec
push
xor
repnz
jl
add
xchg
stos
lret
pop
movsl
mov
mov
sahf
cmpsb
cs
dec
mov
test
ja
enter
stos
mov
adc
ljmp
lret
push
mov
mov
xchg
rol
mov
shrb
pop
pop
test
enter
fwait
xchg
inc
xchg
sbbl
inc
lds
adc
mov
rcll
mov
mov
xor
mov
rorb
outsb
pop
mov
inc
test
mov
adc
ds
and
icebp
lcall
loope
or
test
jns
daa
stos
mov
nop
jbe
sbb
iret
mov
movsb
sahf
jae
repz
xor
dec
cs
les
jne
jp
sti
mov
call
add
sub
push
sub
jecxz
jg
and
jno
jne
cmp
push
sbb
sarb
mov
mov
push
lcall
xchg
and
cld
push
push
out
mov
fcmovbe
mov
adc
xchg
mov
lahf
inc
lret
jnp
addb
cmp
scas
xor
int
sub
mov
dec
xchg
xchg
inc
daa
test
jae
lods
pushf
int3
xchg
mov
movsl
std
push
or
pop
pop
cmp
jecxz
pop
fnstcw
outsl
sbb
mov
sbbl
pop
div
aaa
in
ret
cmp
rcll
test
mov
or
mov
out
xchg
or
cmp
adc
cld
insb
push
fldl
adc
inc
leave
out
setbe
mov
dec
sbb
test
sub
dec
push
jb
bound
lods
inc
inc
xor
jmp
cmpl
lods
out
mov
pop
loop
sbb
icebp
outsl
push
sub
mov
xor
xor
push
inc
movups
push
mov
outsl
iret
mov
mov
fildl
dec
mov
fs
pushf
add
mov
outsb
xlat
hlt
jb
and
scas
fsin
cwtl
sub
sbb
fidivrl
lcall
or
mov
sub
into
adc
or
inc
das
iret
pop
sbb
mov
sub
les
or
shlb
insb
push
xchg
jl
jnp
cmpb
xchg
aaa
adc
pop
jge
popa
jp
gs
sbb
xchg
mov
push
xchg
xchg
xchg
push
cmc
mov
cmp
mov
xor
pop
mov
aad
clc
push
inc
dec
pop
roll
sub
xchg
adcl
cmp
push
fucomp
stos
add
ficoms
mov
aad
pop
push
lret
ja
jb
cwtl
mov
mov
and
fucom
sub
lds
cs
xchg
fidivrs
pop
aas
loopne
out
shrl
push
and
pop
dec
xchg
sub
add
jmp
sub
jecxz
xchg
dec
inc
sub
push
inc
push
call
adc
pushw
fidivrl
add
mov
mov
jo
les
pop
sub
jnp
mov
gs
sbb
xchg
and
mov
stc
sbb
fcoms
mov
jnp
mov
gs
lods
movsb
mov
mov
jge
push
cmc
or
pop
aad
jno
or
insl
jb
xorb
or
jbe
sbb
lret
nop
adc
lock
fdivl
cli
add
lret
sbb
into
jae
out
testb
repnz
test
sbb
sbb
sbb
rcrl
mov
cmpb
clc
cmp
xchg
sub
les
dec
pop
mov
cltd
mov
xchg
inc
cmp
loope
stc
movsl
mov
pop
shll
mov
cmp
add
and
xor
lahf
xlat
or
xchg
cmp
fchs
stc
insb
lds
mov
jb
adc
stc
cli
pushf
xlat
into
sbb
push
xor
test
sub
jle
out
aam
shl
and
add
mov
mov
adc
push
fidivs
dec
mov
xchg
adc
shrb
xchg
sub
mov
dec
adc
rorl
jmp
loop
aaa
cmp
fisubs
insl
push
lret
fs
rcrb
mov
aam
sbb
inc
in
in
sub
popf
and
divl
lds
fs
iret
jmp
cmc
fs
pop
dec
or
or
push
mov
bswap
xchg
js
aam
push
pop
aas
jg
sbb
xchg
rolb
lcall
enter
xor
cmp
fisubrl
inc
fdivrp
sahf
push
push
scas
in
jne
and
pop
sahf
mov
lret
js
test
repnz
rcrb
jmp
insl
or
cld
ss
shlb
mov
loopne
mov
add
sarb
pop
pop
push
sar
icebp
je
loop
push
in
mov
faddl
pop
xor
inc
enter
test
addr16
ss
fnstsw
test
js
repnz
sahf
or
mov
xchg
aad
xlat
pop
push
push
sub
imul
jb
cmp
mov
sbb
leave
adc
mov
jmp
dec
dec
in
loopne
lea
dec
inc
testl
into
pop
mov
adc
and
rolb
pop
pop
xor
out
adc
in
add
enter
pop
mov
fcom
jb
xor
ret
push
adc
xchg
mov
or
add
in
lahf
in
jle
xchg
cmpl
enter
push
push
fdivr
push
pop
fwait
xchg
stos
sbb
dec
inc
push
jno
das
incb
fdivrl
push
mov
int3
out
imul
push
sbb
or
cmp
sub
pop
push
dec
data16
insb
xchg
lods
int3
out
imul
push
sbb
or
cmp
sub
pop
push
dec
data16
insb
xchg
lods
inc
int3
out
jbe
push
sbb
or
cmp
sub
data16
insb
xchg
lods
int3
out
imul
push
sbb
cmpsb
mov
pop
ss
mov
addl
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
pop
dec
dec
pop
jns
imul
inc
pop
aas
xchg
cli
sub
stc
sti
jmp
adc
dec
dec
pop
adc
wbinvd
das
sub
ret
leave
fistps
std
mov
loope
mov
addr16
push
imul
mov
xchg
mov
in
shlb
add
sbb
int3
add
sahf
adc
fs
fdivl
adc
push
lods
mov
mov
stc
data16
das
aaa
jg
in
mov
movsb
shrb
mov
add
aad
mov
rorl
or
jg
rolb
bound
test
add
scas
xchg
cli
test
and
out
or
pop
sub
jge
pop
jb
mov
sbb
lret
pop
nop
hlt
or
iret
subl
xor
stc
pop
lods
inc
fmull
movsl
cmp
xchg
xchg
cmc
out
loopne
cs
ljmp
add
fidivrl
lods
stos
mov
jns
imul
das
es
iret
push
neg
out
xchg
addl
dec
cmp
jbe
addr16
inc
sub
mov
mov
rol
int3
rcll
sub
or
adc
insb
push
int3
pop
jl
mov
mov
lahf
ror
call
pop
sbb
cmp
dec
cmp
pop
cmp
sub
fxch
leave
out
jmp
lahf
mov
dec
dec
pop
jns
imul
das
sub
fxch
leave
out
jmp
lahf
mov
dec
out
dec
mov
test
ror
fwait
test
or
push
cmpsl
pop
mov
adc
inc
in
push
call
mov
push
enter
fwait
push
andb
rolb
inc
bound
je
mov
sbb
mov
sbb
sbbb
out
xchg
dec
cltd
aam
enter
or
jns
mov
pop
sti
aam
shl
cltd
es
bound
mov
incb
inc
lods
sbb
ja
jno
ljmp
adc
mov
inc
adc
js
loopne
nop
popf
jno
and
jmp
mov
pushf
icebp
jp
leave
lret
jns
adc
push
sti
fsub
push
adc
push
mov
add
dec
or
ret
pop
nop
inc
ret
outsl
sub
lahf
into
loop
cmp
xor
dec
sbb
mov
test
movl
icebp
orl
ret
push
pop
inc
dec
cmp
add
popa
xchg
pop
cwtl
insb
fcmovbe
outsb
sub
mov
aaa
add
andb
or
cld
jo
push
add
jne
xchg
push
js
mov
push
dec
inc
sti
pop
bound
inc
mov
test
repz
or
inc
pop
and
mov
or
sbb
push
xor
mov
arpl
or
jo
push
rorb
xchg
popf
mov
inc
jl
mov
inc
fisubrl
sahf
inc
sahf
xchg
add
mov
test
sbb
mov
aam
clc
fildll
faddl
faddl
aam
in
cld
fisttpl
sub
push
pop
cmp
aad
mov
stos
je
mov
xor
cli
push
add
cmp
xor
in
and
shll
mov
cmp
pop
fistpll
rorb
xor
sbb
jae
test
cmpsb
cmp
jbe
lahf
inc
mull
and
or
xchg
mov
cld
scas
inc
fs
pop
sbb
or
xchg
cmp
and
push
sahf
cld
cmp
cmp
or
scas
sub
mov
push
cmpsl
sahf
imul
divb
leave
test
dec
push
movsl
jbe
sbb
repz
fldcw
jbe
pusha
sbb
das
xor
cli
sbb
jno
cwtl
cli
inc
jae
out
sysexit
xor
jo
movsb
xlat
mov
sarb
adc
shll
push
pop
sub
push
mov
cmp
lret
dec
sbb
or
imul
pop
push
sbb
push
stos
sbb
adc
daa
test
sbb
pop
mov
insb
fdiv
lea
pop
repnz
xchg
aaa
or
add
cmp
pop
xchg
xor
out
repnz
jb
addr16
aad
jmp
outsl
inc
pop
add
fwait
fs
mov
int3
iret
jge
pop
inc
or
dec
dec
pop
mov
mov
vmulss
cmpsl
int
repz
cmp
pop
cmpsl
jmp
mov
icebp
fdivl
push
sbbl
filds
add
lcall
jp
jmp
mov
cmp
jno
sbb
cli
xor
lods
jbe
loop
adcb
xchg
dec
xchg
dec
mov
stos
repz
mov
outsb
push
xor
jg
in
out
mov
cmpsl
or
clc
mov
aad
dec
in
mov
out
sbb
add
mov
in
sbb
mov
sub
std
ljmp
data16
push
fs
dec
loopne
movaps
repnz
lahf
mov
pop
call
ljmp
std
sbb
in
jmp
in
xchg
cmp
leave
call
inc
pusha
out
and
scas
jmp
push
xor
jb
mov
and
in
push
js
fadds
jns
clc
cmp
xchg
xchg
and
cmpsb
pushf
push
test
adc
push
pop
sub
leave
jecxz
insl
add
adc
pushf
lret
je
fisttpll
insb
jge
das
add
fisubrl
loopne
ss
sub
adc
jle
xchg
push
fwait
stc
in
mov
out
int
cmp
xor
jmp
cmp
xorps
inc
xchg
popa
leave
or
mov
hlt
inc
xlat
or
mov
pusha
outsb
mov
fnsave
jb
mov
mov
and
div
in
insl
call
cmp
push
inc
ss
aad
mov
sub
jle
mov
leave
inc
cmpsb
imul
or
sbb
inc
xchg
fs
outsl
inc
int3
adcl
and
jo
inc
mul
repz
bound
or
sbb
xor
cmp
add
in
pop
push
cmp
adc
popa
adc
scas
mov
push
dec
mov
push
out
mov
or
or
push
dec
pushf
lret
sbb
fbstp
cmp
aam
in
or
inc
repz
js
inc
xor
jae
shl
loope
js
mov
int
daa
mov
lock
rcll
sti
fidivrl
or
test
test
cmp
leave
ffreep
mov
mov
mov
xor
add
xchg
mov
rorb
mov
push
inc
mov
dec
int
and
mov
sub
gs
pop
xchg
pop
fcomps
xchg
and
out
inc
cli
inc
jo
push
jno
call
adc
push
push
mov
push
mov
dec
add
sbb
add
in
pushf
repz
enter
mov
popf
mov
adc
into
sub
lods
cmc
jp
jne
lods
clflush
mov
sbb
enter
daa
shr
or
test
jmp
inc
cmp
inc
jg
sbbb
ja
push
push
add
rcrl
xor
rcl
outsl
push
loop
or
or
loope
jp
daa
test
add
lret
pop
fwait
ljmp
mov
sub
ret
ja
aad
xchg
xchg
jo
int
sahf
and
and
push
sbbb
popa
xor
and
mov
add
xchg
fnstcw
sbb
je
notl
cmp
std
outsl
push
insl
mov
jge
sbb
cmp
mov
xlat
or
ljmp
inc
push
ret
add
or
fistpl
sbb
aas
dec
adc
push
mov
pop
scas
lods
mov
jo
negl
sbb
in
pop
mov
rcrb
ljmp
scas
pop
ja
xor
cmpsb
test
push
dec
jle
adc
sub
cmpsl
jg
js
cmp
xlat
pushf
push
add
adc
sub
push
rcrb
insl
lock
xchg
insl
add
mov
std
daa
pop
add
imul
mov
out
pusha
push
sub
mov
mov
dec
lds
inc
xchg
mov
or
cmp
adc
inc
cmp
std
xor
mov
fstpt
scas
nop
shlb
sahf
add
outsb
ja
adc
cmp
pushf
mov
sarb
pop
mov
sbb
add
push
jmp
add
mov
lods
pop
mov
adc
in
outsb
sarb
pop
mov
aam
dec
cmpsb
addr16
out
inc
adc
jecxz
mov
xor
js
das
xchg
ffree
int
movsb
inc
mov
inc
int3
out
shll
pop
je
sbb
imul
jns
cmp
push
cmpsl
pop
mov
andb
dec
shll
dec
jo
and
mov
lods
pop
call
mov
lret
xor
mov
jno
sub
icebp
push
lea
sbb
andb
cmp
rcl
mov
push
inc
psubb
and
inc
mov
xor
negl
cmp
test
daa
fsubrp
popa
mov
popa
mov
mov
lret
push
jl
sub
shlb
add
imul
adc
push
xor
jmp
push
xor
or
scas
lcall
push
mov
push
jbe
or
ss
push
jmp
mov
or
inc
sbb
mov
cmp
lock
xor
outsl
sub
iret
out
add
jns
pushf
call
mov
cmp
cmpsl
repnz
cwtl
sub
inc
fstpl
xor
mov
notl
and
ss
ds
dec
inc
adc
inc
or
scas
scas
pop
and
sub
scas
push
inc
out
mov
pop
inc
jno
dec
lret
jae
sbb
stc
mov
cmp
mov
lods
repnz
jl
ljmp
push
mov
mov
pop
repnz
cmp
popa
and
out
jg
int3
clc
sbb
or
addl
push
jns
sbb
shrl
pop
cs
add
push
pop
imul
out
dec
aaa
daa
xchg
xor
push
pop
popl
or
dec
gs
cmp
insb
lret
xor
xchg
and
adc
rcrl
ljmp
out
bnd
sub
mov
sub
push
mov
sub
jmp
and
adc
out
sti
sub
sub
jg
inc
in
xor
mov
ss
jb
negl
movsb
push
bound
out
add
jae
arpl
lock
aam
add
xchg
dec
sub
stos
dec
jg
out
mov
sub
subb
mov
xchg
mov
fildl
and
imul
into
cmp
adcb
push
pusha
in
ja
lods
out
rclb
stos
inc
push
out
bnd
inc
dec
pop
addr16
pusha
xor
mov
pop
xor
dec
shrl
sahf
call
popa
outsb
add
adc
cmp
les
or
and
icebp
and
into
popf
sahf
mov
pusha
xchg
sbb
cmpsl
mov
lods
xor
mov
xchg
loopne
icebp
mov
data16
jb
and
sbb
fistps
subb
push
push
xchg
sub
outsl
mov
aam
repz
scas
mov
iret
xor
xchg
and
inc
cmp
xchg
lock
or
sub
int3
arpl
shlb
imul
loopne
aam
leave
cmp
mov
push
movsl
in
ret
mov
stc
adc
insb
cli
mov
fs
dec
js
push
mov
sbb
insl
sti
enter
mov
pop
add
push
in
cmpb
clc
jb
enter
jge
out
push
mov
fstl
xchg
mov
sti
in
inc
sahf
in
test
repz
clc
mov
fdivrs
ljmp
inc
mov
call
rorb
inc
js
jne
adc
mov
cld
jb
lds
orl
shll
mov
or
stos
mov
xchg
cltd
push
jns
mov
mov
mov
ljmp
filds
mov
pop
lds
adc
inc
and
inc
gs
add
decb
ret
pop
jg
fucomip
cs
dec
out
mov
xchg
xchg
lcall
and
xchg
cld
test
mov
nop
mov
dec
stos
adc
pop
pop
in
jo
xchg
mov
jg
mov
xor
or
inc
sbb
clc
jge
outsl
shlb
and
inc
incb
fimull
in
sub
xchg
sbb
inc
adc
xor
mov
js
hlt
stc
cmpsl
jns
outsl
mov
movsb
add
sub
pop
push
cltd
enter
repnz
std
push
popf
movsl
mov
mov
lea
cmp
shl
xchg
pop
add
shll
sbb
mov
or
ja
dec
inc
sub
cmp
movl
mov
test
es
rolb
inc
cmp
loope
jbe
rclb
mov
and
pop
in
mov
cmp
in
mov
cwtl
dec
cmp
rol
int
inc
inc
jle
pop
and
outsl
fisttpl
mov
add
in
xor
mov
and
add
shll
in
std
cmc
fsubrs
mov
andl
push
test
and
xchg
mov
mov
dec
inc
push
push
sub
xchg
mov
cwtl
jmp
out
and
and
inc
push
xchg
adc
stc
jnp
test
push
insb
out
xor
sub
xlat
adc
movsl
jo
ljmp
or
inc
dec
fs
insb
aaa
cwtl
mov
mov
xchg
pop
inc
fcmovb
add
arpl
push
in
xchg
lds
xchg
push
lret
filds
lahf
cmp
lock
rcrl
jmp
sub
jno
popa
test
les
ds
dec
aas
mov
iret
mov
dec
out
push
pop
int
add
fiadds
test
std
pop
jnp
add
lods
xchg
std
aam
idivl
fisubs
inc
mov
mov
mov
insb
mov
xchg
xor
cmc
mov
cmpsl
fpatan
repz
jae
jl
mov
sbb
sbb
out
int
jge
push
mov
pop
jb
push
xchg
cld
mov
pushf
inc
add
fstl
or
or
in
adc
imul
add
cld
add
outsb
push
and
cmp
push
xor
fisttpl
pop
pop
ss
fwait
roll
jg
leave
jnp
fcompl
roll
mov
scas
popf
dec
ficoms
sbb
loope
insl
bnd
pop
imul
scas
clc
je
push
out
add
movl
dec
movsb
fs
and
daa
inc
xchg
or
rorl
lds
addl
jmp
cmpsl
andl
arpl
fs
push
push
or
lret
out
jo
adc
lock
data16
or
push
jae
mov
push
cmp
pop
sub
lock
sbb
mov
es
adc
iret
mov
les
aad
sub
int3
sbb
mov
cmp
movsb
inc
mov
sysexit
dec
lret
movl
add
add
push
inc
xchg
addr16
out
inc
xor
jb
sub
push
cmp
pop
push
shlb
loope
daa
sbb
loope
push
inc
xchg
shrb
inc
enter
sub
mov
and
outsl
jns
enter
adc
mov
mov
mov
orl
repz
addl
cld
movsl
lcall
pop
adc
mov
add
xchg
xchg
jmp
cmp
sahf
nop
scas
mov
inc
fsubrl
popa
out
pop
mov
pop
jne
push
mov
sbb
cbtw
and
and
nop
iret
or
mov
mov
shrb
cmp
test
mov
pop
xchg
push
sub
lock
insb
xchg
sbb
dec
jecxz
jae
and
adc
jmp
scas
xor
mov
lock
mov
es
lcall
jg
xor
movsl
nop
ret
xor
pop
js
insb
or
sbb
lock
jecxz
inc
mov
mov
rcr
sbb
ret
xchg
xor
dec
mov
rclb
jne
aad
cs
fs
cmp
adc
stos
mov
sbb
cmp
aaa
xchg
xchg
imul
push
imul
movsb
push
xchg
sbbl
adc
cmp
cwtl
sbb
pop
addl
testb
mov
push
and
xchg
mov
push
adc
xor
mov
push
inc
mov
aaa
jmp
rclb
jge
fistpl
mov
push
in
loopne
inc
shll
jp
imul
imul
add
jne
fisubrs
push
mov
lret
inc
shrl
xor
lahf
test
dec
enter
cmp
push
mov
adc
jle
xlat
ret
and
jl
cmp
ds
inc
adcl
insb
js
or
popl
idivl
rcrb
xchg
in
fistpl
repz
mov
add
imul
adc
pop
pop
hlt
les
dec
mov
sbb
xorb
mov
adc
cmp
and
movsb
cmp
mov
push
jmp
out
and
mov
fistl
dec
cld
sub
add
jns
mov
cmpsl
pop
movsl
or
and
lock
add
cs
hlt
mov
pop
push
mulb
push
mov
dec
sub
jne
xchg
jg
insb
add
lods
imul
add
mov
out
fnstcw
sub
les
push
ss
push
push
test
fcomps
loope
mov
add
in
fnstsw
out
cmp
lock
xor
dec
dec
stos
push
test
mov
cmpsb
cmp
lea
out
test
bound
push
call
sub
mov
mov
insl
xchg
mov
mov
xor
xor
popl
jecxz
loope
imul
inc
sarl
js
push
adc
jg
mov
and
and
loop
xor
adc
sahf
push
pop
push
mov
scas
fsubrs
lret
lods
mov
cmp
cmp
test
lods
test
rol
pop
push
pop
pop
in
pop
push
call
mov
sub
mov
sub
adc
je
mov
xor
fsubp
mov
push
pop
mov
xor
pop
mov
out
jo
rorl
sbb
inc
cmp
mov
jmp
ja
dec
xchg
push
or
std
mov
js
lods
jecxz
movsb
inc
fidivl
cli
clc
and
add
mov
rcrl
sub
xchg
xlat
inc
dec
xchg
into
loope
stos
inc
imul
sbbl
add
jmp
mov
imul
ds
mov
inc
sub
sub
xchg
add
jecxz
mov
ret
mov
mov
xchg
dec
jo
cmp
dec
movsl
imul
outsb
jns
cmp
cmp
je
popf
inc
push
jp
pushf
fistps
inc
lahf
aam
inc
pop
cld
jg
pop
jno
and
into
icebp
xchg
jno
cli
sub
scas
loope
enter
pop
movsb
sar
xor
fidivl
ret
jnp
mov
xchg
loop
notl
push
outsl
mov
mov
js
je
shlb
dec
mov
mov
push
or
adcb
sbb
dec
jge
test
test
cld
cmp
shll
js
add
dec
outsb
xor
or
mov
xchg
fwait
pop
lcall
sub
jno
fadds
mov
out
ds
je
mov
sti
add
pop
xchg
ds
sbbl
cli
rclb
notl
mov
outsb
data16
nop
mov
in
fdivr
sub
jno
dec
push
pop
aam
pop
test
scas
and
mov
scas
mov
lods
fmulp
push
imulb
dec
or
andl
aas
mov
inc
mov
popf
jae
cmp
push
push
mov
ljmp
cmp
sarl
ret
enter
lahf
test
xor
into
jg
sbb
push
mov
out
push
mov
arpl
and
push
sub
push
je
adc
loop
cmp
xor
push
mov
sub
aam
call
sub
outsb
inc
fisttpl
mov
lahf
adc
movsl
add
push
add
lret
and
push
test
dec
mov
arpl
aaa
jp
jge
imul
pop
dec
stc
and
out
in
lods
jmp
and
lods
popf
in
xlat
mov
mov
inc
es
divb
flds
add
adc
bound
stc
jb
movsb
stos
push
test
fucomp
bound
sbb
lcall
fs
pop
outsl
xchg
inc
dec
mov
lds
test
jno
mov
movsl
int
jo
mov
pusha
call
out
lea
stos
dec
pop
and
push
ret
pop
inc
push
xchg
jbe
cmc
pop
ret
mov
sbb
cmpsl
ror
push
add
jne
inc
or
pop
pop
xchg
sub
or
gs
xchg
and
sub
cmp
cli
mov
mov
cwtl
std
mov
gs
test
outsb
sub
or
mov
xor
ret
int3
xchg
push
cmp
jno
mov
leave
xor
inc
add
dec
and
cmc
dec
rcll
xchg
jl
arpl
add
jno
mov
push
mov
dec
stc
dec
adc
adc
mov
pop
testb
test
mov
sbb
lret
push
cli
mov
jg
cs
xchg
pop
outsl
imul
das
sub
fxch
leave
out
jmp
lahf
mov
dec
dec
pop
jns
imul
das
sub
fxch
leave
out
jmp
lahf
mov
dec
jns
sbb
jg
wbinvd
pop
cmp
jmp
fisttps
out
jmp
lahf
mov
dec
adc
jg
nopl
cmp
test
jne
out
jmp
loopne
rclb
push
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
data16
repz
ret
push
shrl
mov
sbb
movb
cmpsb
and
adc
jbe
inc
ret
push
shll
mov
push
mul
arpl
jae
inc
push
cmpsb
inc
mov
xchg
xchg
adc
jbe
inc
ret
push
shll
mov
push
xchg
out
aad
mov
mov
cmpsb
lds
jmpw
pop
addl
mov
sbb
in
sbbb
int3
sbb
sbb
stos
cmp
xlat
mov
mov
mov
mov
ds
or
sbb
jnp
cmp
push
cltd
repz
sub
pop
adc
out
in
int3
pop
dec
push
pop
arpl
jb
inc
push
lods
cmpsl
fdivrl
fbld
push
out
push
test
leave
mov
mov
jae
lahf
jnp
daa
test
divb
mov
jle
sbb
or
cmp
fcompp
sub
pop
cli
rcrb
dec
mov
and
xchg
repz
mov
test
cmp
arpl
lods
inc
xor
arpl
xchg
in
movsl
jecxz
repz
ret
push
shll
mov
push
xchg
out
divb
inc
push
cmpsb
and
push
add
adc
xchg
inc
in
imul
xchg
push
adc
je
jno
jbe
popl
lahf
and
loopne
testb
mov
mov
inc
shll
add
xor
push
adcl
out
divb
inc
push
cmpsb
and
adc
jbe
inc
ret
push
shll
mov
push
xchg
out
divb
inc
push
cmpsb
and
adc
pop
fcmovnu
lods
sub
push
or
jo
sub
int
pop
loope
and
arpl
sub
and
mov
aad
iret
out
cmpsb
sub
dec
mov
gs
mov
mov
pop
sbb
add
cs
mov
xchg
push
jns
and
test
ss
lds
or
inc
icebp
sub
mov
shl
cmp
out
lret
cmp
cltd
mov
or
push
cmp
jge
cmp
sbb
and
cmp
test
scas
or
outsl
lret
daa
cmp
mov
movsb
out
sbb
push
jp
fsts
xchg
or
mov
fcomps
lcall
and
loopne
push
adc
mov
cli
jge
pop
test
push
cmp
xchg
or
xchg
sbb
or
mov
popa
shll
pop
iret
sub
jge
sbb
xchg
mov
and
clc
xor
mov
es
data16
add
cltd
fsubrs
scas
mov
xchg
in
adc
in
adc
test
xchg
enter
enter
mov
movsl
sti
mov
push
xchg
addr16
mov
xor
lcall
push
adc
hlt
repnz
popa
mov
mov
sbb
or
filds
test
incb
mov
add
cmpsb
adc
call
aaa
add
es
das
lcall
outsb
addr16
mov
in
sahf
icebp
rclb
cli
jne
xor
movb
mov
pop
push
xchg
pop
cmpsb
add
jmp
loop
push
inc
rcrl
test
ja
and
nop
add
out
jnp
sub
bound
lcall
inc
das
pop
cmp
sbbl
jecxz
testl
in
jg
inc
shrb
jmp
mov
cli
jmp
and
js
je
mov
dec
or
repz
xchg
ja
pop
aam
cwtl
int3
dec
xor
push
add
popa
sahf
les
lds
ret
call
je
mov
adc
aaa
adc
nop
iret
imul
inc
xor
cmp
pop
push
jne
mov
jb
add
clc
in
fcom
or
fs
xchg
adc
mov
pop
or
inc
loope
mov
jecxz
adc
inc
cli
les
jno
pushf
push
xchg
pushf
lret
pop
loope
dec
xchg
invd
insb
push
pop
jno
loopne
aaa
adc
andl
dec
aad
add
out
rol
out
shr
or
gs
jo
out
mov
xor
test
js
popfw
ror
mov
inc
idivl
xchg
mov
cmp
pusha
mov
add
addb
or
push
das
imul
sub
test
imul
mov
mov
xchg
outsb
add
cmpsb
adc
mov
cmp
test
sub
test
adcl
arpl
pop
je
cmp
int3
adc
jge
mov
mov
fbld
xlat
int3
loop
inc
dec
sbb
cltd
xor
repz
add
push
int
mov
rcr
add
adc
lcall
iret
lahf
int3
mov
fsts
stos
adc
add
pop
roll
lea
or
roll
pop
nop
dec
add
inc
fdiv
int3
cld
fisttpl
imul
mov
clc
loopne
jns
xchg
lret
xor
and
lahf
cmp
sub
ja
aaa
rolb
in
adc
push
inc
xchg
out
push
and
mov
inc
fwait
inc
stc
jmp
ret
ret
or
push
inc
add
test
lock
mov
and
out
cmp
subb
imulb
push
out
push
pop
out
inc
out
add
jbe
xchg
and
test
sarl
popf
or
loop
aas
lret
sbb
cmpsb
or
xchg
adcl
out
aaa
cmp
pop
mov
hlt
rorl
mov
dec
mov
xchg
lret
xchg
add
imull
xor
pushf
arpl
repz
enter
call
je
dec
mov
push
repz
sahf
xchg
cmp
popf
mov
pop
scas
adc
aad
ficoml
adc
pop
ss
pop
add
jle
dec
xlat
bound
jle
lds
jbe
es
jmp
sub
xchg
jg
push
ret
loop
lret
dec
fistl
in
adc
inc
cmpsl
aam
stos
dec
sarb
push
push
cmp
or
data16
xor
into
aas
and
inc
inc
stc
or
fmull
adc
mov
loopne
mov
and
repz
push
sub
lret
cmp
test
pop
data16
push
sub
pushf
jmp
mov
ffree
mov
dec
insl
cmc
jo
test
mov
dec
and
les
aam
add
or
jecxz
xchg
mov
scas
push
aaa
mov
xchg
icebp
repnz
mov
or
loop
mov
xchg
stos
cltd
inc
dec
adc
mov
insl
adc
sub
mov
inc
popa
push
stos
outsl
adc
fisttps
loop
push
sub
dec
push
jg
adc
sbb
cli
ljmp
movsl
jl
xor
lds
gs
js
mov
insl
lret
pop
sub
sub
clc
sub
push
push
nop
pop
negl
jbe
xlat
out
lret
aaa
cld
pop
and
mov
jecxz
mov
inc
or
f2xm1
sbb
cmp
pushl
lds
cmp
out
adc
inc
sbbb
and
inc
xor
mov
jge
test
repnz
cmp
mov
aad
pop
cmp
mov
imul
push
add
outsl
fdivl
sub
jl
push
jns
push
enter
mov
or
xchg
imul
movsl
test
nop
insb
std
push
and
jno
xchg
or
pop
cltd
or
lret
sub
imul
mov
dec
push
adc
mov
cmp
pop
mov
mov
ss
and
clc
mov
xor
mov
sbb
jo
jns
push
sub
cmp
repnz
in
pop
pop
add
dec
sub
mov
or
xor
cmpsb
jecxz
inc
icebp
xorps
xchg
and
or
insb
js
pushf
mov
fnstsw
insl
mov
and
add
jae
xor
je
fldenv
cmp
repnz
outsl
test
les
cs
lcall
xchg
cmpsl
clc
lock
rorb
pushf
jo
aad
out
sbb
dec
push
int
mov
cmp
sbb
ljmp
cli
dec
jp
shlb
pop
mov
out
aas
dec
xor
inc
lret
std
jae
sub
cmp
rolb
lock
or
nop
add
xchg
xor
xchg
adc
stc
inc
loope
inc
lcall
sarl
jmp
mov
xchg
int3
sbb
pop
arpl
add
or
jns
aad
shlb
inc
push
jns
mov
push
imul
jecxz
lods
cmc
in
div
mov
add
add
ds
popf
cmp
cmpl
jl
push
into
mov
pushf
adc
in
mov
cs
fildll
loopne
pusha
fs
jno
je
xor
dec
sarb
aaa
fidivrs
movq
cmp
add
lret
push
and
push
inc
and
insl
lcall
fnstenv
mov
cli
xor
subl
and
add
es
push
push
sbb
adc
mov
jo
in
loop
ficomps
jb
jne
mov
in
inc
mov
fwait
repz
jmp
cmp
inc
sbb
fstpt
ret
push
ds
int3
in
pop
shll
sahf
jbe
lahf
ds
inc
mov
jmp
test
push
out
lods
ja
push
xor
dec
cmpsb
mov
add
mov
insb
xchg
fxch
pop
shrl
test
lret
dec
push
xor
hlt
imul
inc
incb
fsubrl
insl
sbb
push
daa
push
and
jne
push
add
aam
sbb
jb
fdivrs
jl
ret
pop
shlb
sub
shl
mov
dec
mov
out
push
mov
imul
jecxz
sub
test
mov
roll
and
xchg
rorb
mov
fnstenv
mov
xor
cmp
mov
movsl
dec
pop
or
pop
add
lds
popa
xlat
out
inc
cmp
push
iret
mov
stos
ficomps
dec
insb
test
jecxz
mov
or
shll
inc
loopne
pop
test
rolb
call
stos
arpl
sahf
jae
flds
mov
je
fildll
push
xor
push
mov
lcall
pop
inc
dec
test
cmpsl
and
mov
stos
jge
sbb
inc
ret
and
test
add
sub
or
xchg
shlb
sub
or
dec
add
sub
mov
out
ss
dec
xor
lea
mov
mov
leave
aad
ss
jl
pop
jge
addr16
ds
pop
mov
test
neg
insb
sbb
outsb
shrb
adc
and
inc
popa
scas
jns
in
lock
mov
insb
rclb
pushl
push
jb
jl
jmp
xchg
dec
call
out
mov
addr16
es
fs
aaa
aad
add
mov
stos
and
mov
mov
cwtl
nop
cmpsb
shlb
sbb
jl
dec
or
jae
pushf
mov
cs
pmaxsw
mov
test
and
xchg
adc
pop
cwtl
dec
popf
jge
mov
jl
dec
jbe
push
jbe
cmp
sbb
and
test
xor
xchg
cmp
inc
js
lret
xchg
push
pop
les
mov
sbbb
jne
test
ljmp
dec
fbld
jb
lret
mov
mov
aad
lds
or
test
xor
cltd
mov
ds
lahf
and
cmpsl
push
insl
lcall
xor
add
fildll
jmp
in
addr16
stc
leave
lods
nop
jns
jb
mov
jnp
sub
dec
testb
mov
sbb
cmpl
mov
xchg
lds
clc
int
les
jle
sub
fucomip
mov
movsl
inc
icebp
inc
lods
rolb
out
les
jo
lcall
xor
jg
jae
mov
and
jmp
pop
pop
ljmp
int3
adc
sbb
sahf
push
stos
xchg
call
stos
jg
jg
mov
enter
in
jno,pn
movsl
scas
leave
sar
test
mov
inc
cmp
enter
mov
add
rcll
add
inc
jo
out
mul
sub
and
ret
outsl
push
cmp
cmp
leave
add
imul
neg
cmc
icebp
jne
mov
sti
inc
fmul
jmp
or
pop
negl
fdivrs
push
mov
pop
jns
push
pop
cmp
inc
xchg
lret
push
push
jb
and
lods
mov
cmp
aas
or
inc
loope
sub
mov
inc
mov
jmp
int
dec
dec
stc
mov
fiadds
ret
sub
sub
xor
ds
jb
sti
repnz
hlt
subl
mov
stos
aam
mov
pop
imul
icebp
loope
rcrl
xlat
sub
adc
xchg
frstor
mov
mov
test
mov
jecxz
sbb
icebp
inc
gs
inc
and
and
arpl
aas
inc
dec
sbb
xchg
imul
fidivrs
push
aad
cmpsl
dec
bound
pop
out
fwait
cmp
push
iret
pop
mov
and
mov
stos
test
adc
lret
xchg
add
adc
or
pop
push
pop
cmp
lock
inc
fldt
jge
push
and
nop
mov
or
fsubrl
out
rorb
nop
dec
push
pop
jl
xchg
sub
cwtl
data16
js
inc
icebp
sub
repz
xchg
xchg
pop
cmpsb
imul
mov
sti
test
and
je
sbb
test
pop
pop
mov
mov
mov
lea
add
push
insb
testl
arpl
mov
push
dec
sbb
scas
and
inc
stos
push
and
loopne
movzbl
cltd
sbb
sbb
push
dec
and
or
push
jno
data16
pop
in
pop
mov
out
insl
sub
inc
test
xchg
repnz
clc
push
push
push
xchg
mov
push
ja
jmp
cmc
sub
push
add
fstpl
jmp
adc
adc
daa
std
in
aas
pop
addl
mov
enter
xchg
fcoml
adc
lods
pop
mov
push
imul
mov
or
scas
lock
xorb
xor
sub
inc
push
scas
mov
movsl
subl
lea
xchg
out
ror
xor
rclb
cmp
test
cmp
adc
lcall
xchg
xor
cmp
mov
jo
imul
imul
xchg
repz
or
aaa
sub
arpl
loope
movsb
into
jmp
addl
stc
pop
test
mov
xchg
mov
jle
cmp
lock
scas
outsb
push
cmpsl
loop
mov
vmovaps
out
pop
lods
fsubl
adc
dec
sbb
inc
vdivpd
jae
jmp
out
sti
sbb
addr16
jge
pop
shrl
sahf
and
dec
fwait
xlat
and
mov
cmc
movsb
aas
mov
inc
cmpsb
cmp
test
xchg
psubusb
ret
jne
add
jp
fidivrl
mov
add
cli
es
add
fists
mov
sarl
jl
jno
std
xor
xor
and
mov
insl
xor
mov
out
sbb
neg
aam
lret
repnz
cmp
test
push
cs
mov
and
pop
jecxz
icebp
or
fldenv
aam
lea
push
push
shl
aas
adc
mov
mov
jge
sti
xchg
cmp
xchg
xchg
ret
sbb
mov
mov
subl
cmp
in
outsb
ja
aas
jmp
mov
orb
adc
fucomip
fisubrl
sub
sbb
mov
stc
mov
sub
lcall
xor
adc
lret
mov
and
fwait
jge
adc
push
stos
jmp
push
leave
lcall
dec
pop
dec
or
push
repnz
into
fldcw
jge
hlt
call
xor
sbb
and
jge
jle
cmc
mov
mov
jmp
mov
lds
cmp
jge
jle
xchg
leave
movsb
sbb
push
pop
sbb
sbb
sub
mov
xor
xor
mov
imul
bound
data16
daa
pop
sub
xor
rol
lea
stc
repz
push
fwait
cmpsb
lock
sub
lea
addb
aas
pop
pop
dec
ss
mov
icebp
dec
xchg
repz
stc
out
nop
pusha
sar
outsl
cmp
mov
pushf
jecxz
add
ret
mov
push
pop
add
jmp
cmp
sbb
adc
clc
cmc
jns
xchg
mov
xchg
push
adc
adc
inc
push
ja
adc
les
insl
adc
addl
inc
leave
icebp
fcomps
and
sahf
and
cli
repz
jecxz
mov
incl
xchg
sbb
lret
js
xchg
and
or
stos
sub
xchg
outsb
call
jmp
sar
daa
bound
mov
daa
enter
jle
inc
andb
lods
je
sbb
fcomps
fisubrs
mov
out
nop
mov
xchg
mov
add
and
adc
cld
out
jg
pop
dec
out
adc
dec
aas
push
sub
ss
mov
or
adc
xorb
mov
fmul
xor
inc
fsubl
daa
rorl
cmpb
mov
mov
lods
in
mov
mov
fucomip
xchg
in
or
or
sub
cmp
test
dec
mov
cli
mov
mov
stc
lcall
test
popf
test
sbb
insl
aam
xchg
data16
xchg
or
inc
mov
adc
ret
inc
xchg
jo
mov
inc
fstpl
loopne
es
add
mov
jne
cmc
push
into
cltd
add
dec
into
in
push
push
mov
add
cmc
gs
test
shl
leave
add
sub
inc
lret
jp
jns
or
pop
pop
fldl
mov
adcl
ret
scas
in
insb
xor
cmpsl
cmp
test
xor
data16
cmc
jge
mov
sub
dec
pusha
adc
cltd
jge
daa
mov
ljmp
sub
sbb
int3
push
std
mov
add
pop
sbb
in
ss
arpl
scas
mov
jge
pop
rcrb
push
inc
pop
dec
sub
adc
sub
mov
mov
cmp
cmpsb
dec
cmpb
arpl
or
in
or
out
bound
insl
or
rcr
cmpsl
mov
and
jecxz
loop
jnp
lret
push
inc
inc
lret
jle
push
push
mov
leave
mov
push
cmp
js
lods
cmp
pop
nop
jge
in
xor
test
in
push
lods
addr16
stos
push
sbb
fistpll
dec
mov
add
mov
in
enter
jb
idivl
xor
or
cmpsl
icebp
lods
js
jo
arpl
xchg
mov
sbb
jae
dec
xor
mov
cld
adc
adc
or
and
or
xlat
pop
in
outsl
arpl
adc
push
fldt
out
movsl
rorb
push
jl
mov
xor
sbb
xchg
daa
dec
enter
cmp
pop
mov
aaa
hlt
insb
dec
test
popl
call
lods
pop
xor
xor
repz
mov
in
pop
sbb
mov
inc
dec
adc
push
push
push
bound
xchg
fdivrl
dec
cli
jne
sbb
push
jp
sbb
sub
dec
iret
sub
repnz
pop
mov
pop
je
lds
pop
inc
mov
popf
push
push
add
aam
xor
push
nop
xchg
or
add
add
and
push
or
movsb
mov
sahf
mov
pushf
push
aas
mov
rcrb
xor
aam
pop
and
aaa
nop
push
out
dec
sti
inc
pushf
xchg
mov
dec
movsl
fbstp
lahf
sbb
xchg
cmc
cmp
jecxz
add
icebp
adc
sar
push
push
push
mov
xor
add
cmp
push
int
test
xor
mov
nop
mov
mov
dec
add
add
mov
repnz
aad
cmp
pop
xchg
jae
icebp
loop
mov
addr16
jo
sarb
hlt
std
jo
dec
xchg
mov
stos
sbb
ret
push
cmp
repnz
or
dec
xor
das
clc
out
dec
scas
mov
pop
sbb
push
sub
daa
fsubs
mov
xchg
ss
and
repnz
xorb
pop
in
jne
filds
push
test
ljmp
popa
outsb
xor
repnz
insb
dec
xchg
pop
dec
mov
push
sub
cmp
ret
sbb
gs
fimuls
mov
mov
inc
adc
jg
sbb
and
inc
pop
sti
test
mov
pushf
adc
jl
stc
cs
xchg
inc
pop
das
std
add
add
pusha
dec
sbb
dec
mov
fmul
hlt
ljmp
or
adc
ret
and
shl
mov
mov
jo
pop
dec
xor
ret
aas
pop
sbb
stos
xlat
jp
add
xchg
mov
movb
push
fwait
js
rorb
jg
or
adc
push
xchg
nop
xchg
lcall
movsb
xor
mov
or
xlat
mov
adc
dec
fmull
int3
push
sbb
rcr
sbb
jecxz
ret
sarb
jle
adc
jl
jmp
sub
pop
dec
mov
out
adc
lcall
adc
mov
mov
mov
or
aaa
into
fcmovu
cmp
add
add
clc
xchg
mov
jne
fimuls
sub
aaa
lods
xorl
or
xor
sub
in
or
xor
call
sub
js
movsb
std
out
inc
ja
fsubrp
cmpsl
test
pop
push
push
test
and
pop
inc
cmp
iret
cmp
notl
jl
stc
xor
push
shll
mov
push
xchg
out
divb
inc
push
cmpsb
and
adc
jbe
inc
ret
push
shll
mov
push
xchg
out
divb
inc
push
cmpsb
and
adc
jbe
inc
ret
push
shll
mov
push
xchg
out
divb
inc
xlat
push
cmpsb
and
adc
jbe
inc
ret
push
shll
mov
xchg
push
sbb
fldcw
and
stos
ds
jle
outsb
in
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
dec
adc
inc
xor
and
aas
and
push
sbb
xchg
mov
aad
sub
push
adc
add
xor
and
push
inc
data16
dec
nop
xchg
orb
mov
out
mul
fdivl
lock
push
pusha
push
or
mov
nop
cli
mov
out
mov
inc
push
ss
bound
inc
int
adc
mov
xchg
jg
repnz
int3
mov
adc
push
inc
mov
lret
dec
repnz
add
jl
dec
pop
lock
lds
addr16
lods
push
js
pop
imul
cmp
xchg
imul
adc
adc
pop
xor
and
test
in
xchg
adc
dec
mov
repz
pushf
add
std
fxch
neg
mov
mov
pushf
inc
mov
xlat
pop
push
mov
xor
mov
push
flds
lock
pop
scas
mov
add
shlb
mov
out
xor
inc
pop
and
adc
jo
bnd
add
jle
test
cmpsb
in
enter
xchg
shlb
outsl
bound
sub
and
out
xlat
lock
mov
mov
push
sahf
inc
popa
inc
std
dec
das
add
adc
sbb
cmc
ret
loop
nop
mov
mov
xchg
xchg
mov
je
and
dec
add
inc
data16
pusha
xchg
mov
rcl
shl
mul
push
adc
add
xor
and
push
inc
data16
pusha
xchg
mov
rcl
shl
mul
push
adc
push
mov
into
or
jne
inc
mov
adc
jl
jmp
push
lea
mov
adc
fs
cwtl
lret
push
test
xchg
repnz
cmp
iret
cwtl
push
cmp
popf
mov
ja
movsb
stos
mov
jns
es
je
fs
icebp
fmull
out
pop
jecxz
popa
sub
xlat
fmul
mov
faddp
movsl
push
pushf
fdivs
jmp
mov
in
fimull
pop
xchg
mov
pop
test
iret
adc
xor
sbb
pop
xchg
stos
call
insl
lret
push
cld
sarl
jo
ljmp
cmp
aaa
dec
fsubrs
inc
pop
out
dec
or
stos
pop
push
bound
inc
cmpsl
aas
leave
lret
test
mov
pop
int
pop
sbb
in
fstpt
adc
mov
idivb
push
mov
dec
cltd
shrl
mov
aaa
leave
loop
adc
mov
movsb
cmovo
pushf
push
mov
or
imul
fdivl
out
sti
xor
jle
jae
and
fstpl
cmp
shlb
imul
aad
repz
lcall
inc
sbb
addr16
cltd
ret
pop
xchg
or
out
out
ud0
mov
sbb
push
dec
inc
or
test
daa
stc
adc
push
push
imul
dec
sub
pop
mov
mov
insb
xor
loopne
loope
jmp
pop
or
xchg
push
mov
or
pop
test
push
cwtl
push
pushl
jmp
jl
js
cmpsb
fcomip
jnp
cmp
mov
cmc
shl
inc
cmpsl
or
fimuls
push
nop
ror
jl
rorb
sub
das
aam
push
clc
xlat
add
cmpsb
or
xchg
sbb
inc
shll
lds
popf
ret
xorb
adc
push
mov
leave
jp
ret
dec
popf
loope
pop
adc
xorl
inc
movsb
pop
loope
cli
imul
adc
add
icebp
xor
cli
int3
pop
pushf
cld
xor
inc
mov
and
mov
rcrl
test
hlt
in
dec
mov
mov
frstor
insl
and
lret
adc
cmpsb
push
outsl
shlb
cmp
pop
pop
scas
inc
in
push
outsb
adc
lock
mov
mov
stos
int3
ret
and
push
or
fisttpl
out
popa
popf
sbb
mov
mov
das
mov
into
xor
inc
or
sbb
pop
mov
nop
mov
jo
pop
ss
mov
into
subb
ljmp
and
push
adc
cmpsb
das
das
jl
xchg
mov
cltd
das
xor
stc
mov
ret
xchg
lods
pop
aam
popf
aad
inc
into
dec
jbe
enter
inc
mov
pop
pop
xchg
test
ret
test
xchg
subl
pop
mov
or
xor
std
jno
fimuls
movsb
pop
mov
ja
push
add
jae
in
aad
and
adc
fs
daa
mov
jmp
stos
outsl
sbb
mov
inc
and
iret
jns
movsl
hlt
sbb
pop
cmp
push
sbb
sub
mov
ds
inc
dec
push
test
sbb
dec
and
push
stos
out
les
dec
mov
stos
lret
or
movsl
jae
xchg
test
rcl
push
bound
stos
in
mov
cmp
jae
sbb
inc
dec
in
iret
lods
adc
rorb
enter
push
ret
fs
dec
pusha
mov
jbe
cmp
sbb
adc
push
movsl
data16
enter
sbb
iret
test
xchg
xor
sub
popa
mov
or
test
push
lret
add
dec
outsb
dec
jbe
pop
pop
enter
aam
xchg
xchg
movsb
out
push
push
in
push
cli
pop
test
jae
movsl
cli
lods
jo
xlat
fsub
inc
or
pop
sub
dec
sub
gs
add
jg
add
ret
mov
pushf
aaa
sti
mov
fnstenv
das
cmp
lods
std
add
mov
xor
mov
xor
xor
dec
and
or
test
ret
cmp
lcall
cmpsl
out
push
cmp
int
adc
dec
es
cmp
jnp
sbb
outsl
loop
mov
aaa
cmpsb
imul
sarl
mov
mov
pop
bound
cmp
dec
notl
xchg
cmpsl
sbb
push
gs
mov
inc
adc
pop
push
movsb
mov
pop
outsb
outsb
clc
js
cmp
divl
add
push
add
cltd
sbb
cmc
ja
iret
inc
sti
mov
les
mov
imul
push
push
pop
fwait
inc
out
pop
cmc
mov
pop
std
mov
pop
mov
push
cmpsl
sub
xchg
inc
lahf
mov
jmp
cld
imul
js
mov
or
scas
sarb
pop
movsb
xor
xchg
aas
mov
mov
ror
push
sbb
nop
subl
jmp
mov
cmp
add
aaa
ja
xor
clc
mov
mov
fsts
out
daa
lock
mov
mov
and
fdivrl
push
pop
fs
push
cmp
and
hlt
lea
dec
cmp
mov
inc
sub
xor
std
call
xor
fstl
xchg
fcoml
dec
jecxz
mov
sbb
test
xor
roll
adc
lds
jns
dec
dec
pop
popl
xor
jbe
jmp
add
cmp
iret
jmp
xchg
clc
fldl
adc
daa
xor
ret
cwtl
pop
pop
lds
add
orl
mov
jge
loop
cmp
and
push
cmp
mov
lret
aam
pop
lahf
sarb
cwtl
adc
pop
mov
std
xchg
stos
or
test
fsts
test
jge
jns
orl
mov
mov
iret
xlat
into
pusha
clc
insb
xlat
push
push
int3
ficoml
adcl
lret
outsl
xor
stos
insb
fcmovne
pop
cmp
cmp
jbe
push
lods
ja
js
or
push
mov
cmp
pop
aam
inc
je
xor
clc
jmp
and
movsl
mov
imul
sub
add
outsl
ucomiss
pop
sub
loopne
jmp
xchg
xchg
aam
jl
or
fucomip
fnsave
or
cmp
inc
pop
std
xor
mov
sub
ja
in
push
pop
mov
jge
loope
mov
sub
ss
lods
ret
mov
push
bound
roll
movsl
fidivl
mov
sbb
pop
mov
bound
cld
xchg
mov
cld
inc
pop
in
hlt
sar
xchg
push
popf
lret
test
clc
addr16
push
repz
cld
pop
stos
mov
mov
call
hlt
test
jno
shll
jg
imul
repz
sub
lods
lret
lret
fs
nop
push
fidivs
ret
cmp
add
lret
lret
loopne
rolb
dec
imul
dec
in
cmpsb
adc
dec
cs
mov
test
mov
test
mov
xchg
dec
imul
xor
movsb
loope
add
xor
mov
bound
mov
repz
lds
cmp
or
iret
cmp
and
mov
popa
pop
fstpt
nop
jge
mov
push
lea
ss
adc
xor
icebp
fbld
xor
mov
fbstp
cmp
ds
shll
iret
icebp
xchg
in
add
or
add
enter
add
sub
mov
subb
and
fcmove
into
inc
jmp
test
in
das
push
mov
mov
adc
popf
enter
gs
loope
mov
dec
mov
icebp
ljmp
int
mov
mov
pushf
sub
push
adcb
test
out
pop
out
je
xchg
or
mov
scas
xchg
push
dec
sbb
sbb
cmp
pop
pop
jns
loope
cmp
xor
notl
pushf
insl
mov
pop
push
sub
xchg
pop
sbb
ljmp
imul
ss
lret
out
gs
mov
or
data16
jo
mov
fs
sbb
aas
jo
mov
push
mov
call
mov
test
js
cmpsl
mov
cs
push
mov
cmc
mov
int
push
mull
test
pop
fisttps
push
leave
pusha
fwait
pusha
ret
data16
adcb
pop
rclb
ret
std
sbb
aad
not
xchg
outsl
ljmp
pop
fistps
outsl
hlt
and
sub
xor
cmc
shr
pop
mov
mov
iret
loope
insb
jle
mov
mov
mov
repnz
out
js
push
test
icebp
mov
adc
xor
loopne
pop
test
jno
lods
sbb
jo
mov
clc
aam
mov
data16
xchg
loop
inc
test
dec
test
xor
clc
push
es
mov
xchg
mov
fsts
sbb
jmp
push
icebp
loope
mov
bound
mov
mov
mov
add
mov
lods
jp
fildll
push
ret
cmp
aam
mov
jge
cmc
xlat
shl
icebp
stos
lahf
data16
cmp
pop
fildl
pop
insb
jg
outsb
ret
in
je
adc
xchg
sub
dec
into
cli
mov
or
out
xchg
inc
ret
fnsave
in
cmp
and
call
mov
bound
insb
jge
fadd
fsub
stc
and
add
js
roll
sti
lret
push
stos
push
push
push
in
or
xlat
push
dec
mov
adc
xchg
out
rolb
cltd
insl
outsl
test
mov
or
shll
stos
adcl
add
test
sbb
xor
or
call
daa
jbe
icebp
clc
mov
mov
cmp
fcmovu
popa
lcall
jmp
jmp
movsl
les
jae
iret
jge
pop
leave
pop
push
sub
dec
in
insl
in
shll
adc
mov
and
push
sbb
sub
hlt
lods
iret
scas
xchg
mov
scas
xlat
push
pop
in
pop
mov
xor
pop
push
or
arpl
std
loopne
test
popf
sbb
inc
jbe
xchg
ja
lock
cmp
inc
sub
icebp
jecxz
push
pop
adc
ret
stos
mov
stc
and
push
imul
mov
xchg
aad
pop
int
jns
out
inc
jb
xchg
scas
lret
out
addr16
scas
xor
adc
push
shlb
repnz
cmp
mov
popa
xor
jl
enter
mov
pop
dec
sbb
decl
push
xchg
dec
mov
dec
xchg
lods
rcrl
mov
inc
jge
rorl
aaa
jo
sub
or
sub
pop
jo
nop
xchg
sub
in
mov
or
pop
mov
into
mov
dec
icebp
test
int3
push
mov
or
lret
enter
mov
mov
adc
sbb
jbe
push
nop
movsb
rcll
cmp
or
cmpb
pushf
and
mov
dec
std
cli
lahf
push
adc
aam
adc
bound
xchg
jg
mov
add
push
cld
iret
push
cmpsb
iret
in
loopne
and
fnstenv
push
push
mov
sbb
icebp
sub
mov
add
or
outsb
sbb
frstor
pop
push
outsl
push
fisubl
jl
fcoml
lods
mov
sahf
ljmp
scas
mov
enter
clc
adc
add
mov
and
popa
cmp
pop
push
mov
daa
cmp
cmp
wrmsr
mov
mov
add
cld
stos
xchg
cmp
sbb
std
rolb
cli
adc
or
push
dec
sarl
xchg
fstl
into
cmp
push
mov
dec
inc
pusha
in
arpl
inc
jb
jge
popf
test
sbb
std
outsb
push
leave
enter
scas
and
cmp
push
push
scas
cmp
push
xchg
fcoml
inc
push
cltd
ja
aas
pop
xor
cli
popa
mov
push
push
out
fwait
pop
cmp
iret
test
out
psrlq
jmp
ss
mov
or
adc
mov
xchg
call
adc
into
mov
jg
js
loopne
adc
ljmp
inc
test
aad
pop
and
fdivp
das
mov
cmc
dec
inc
sub
mov
lock
mov
dec
jg
stc
adc
pop
test
dec
or
stos
fwait
sbb
pop
fwait
mov
adc
jmp
insb
and
loopne
cmp
cmp
xchg
insl
jp
pop
pop
imul
test
or
xchg
ds
cmp
add
sbb
ret
out
mov
pop
or
and
fisubs
shrl
push
cmc
cmp
sub
addr16
orl
xlat
xor
stos
outsl
ret
mov
rcrb
out
dec
jg
jg
mov
and
adc
icebp
adc
sub
jecxz
pop
pop
je
in
xchg
push
popa
in
mov
out
cmc
xchg
lcall
cmp
cld
ret
push
lcall
cmpsb
popf
test
push
lds
mov
dec
pop
xchg
ss
sbb
push
inc
and
fidivs
faddl
add
pop
pop
cmp
push
aad
rcrl
in
xchg
popf
push
mov
pop
bound
add
mov
and
pop
test
fcoms
mov
scas
xor
std
or
cld
pop
inc
or
iret
gs
inc
stos
out
cmp
xchg
pop
cwtl
mov
ss
fcmovnbe
or
mov
imul
fcoml
nop
aad
inc
aad
jp
pop
popf
fwait
adc
xor
outsb
fistps
pop
dec
push
mov
int
xor
dec
jge
push
out
je
icebp
and
sub
xchg
jns
rcrl
loope
ja
std
mov
inc
jmp
xlat
ret
cmp
sub
cmpl
xorb
sub
push
and
jg
mov
sub
xor
pop
adc
lods
xchg
jl
push
mov
scas
inc
and
add
pop
sub
cmp
xlat
repnz
mov
sbb
jmp
loope
nop
jl
sub
pop
and
adc
xchg
mov
insb
pop
shlb
and
mov
push
test
cwtl
loope
inc
pop
mov
std
pop
scas
dec
loope
xchg
sbb
push
daa
imull
rcrb
xor
sbb
push
scas
xchg
adc
ret
add
add
ds
insb
popa
inc
repz
andl
inc
jae
xchg
dec
sbb
mov
movsl
mov
xchg
hlt
jmp
cltd
ss
jnp
cmp
adc
aad
mov
lods
stc
adc
mov
daa
notl
popa
lods
mov
sub
push
neg
sub
and
sti
bound
xchg
int3
int3
iret
xlat
subb
sub
das
addr16
add
hlt
and
inc
repz
in
inc
push
mov
mov
inc
or
out
xor
adc
xchg
xor
iret
push
xor
test
sbb
lahf
cmpl
and
icebp
mov
mov
add
cmpb
mov
inc
mov
out
mov
rorl
fwait
sahf
dec
je
rorl
mov
jp
shlb
out
or
ljmp
lahf
aad
jl
dec
outsb
into
or
mov
xchg
repnz
lcall
les
in
cmpsl
subb
popf
push
aad
cwtl
in
or
aas
dec
mov
lret
ljmp
mov
sub
inc
dec
push
les
and
adc
icebp
rcrb
pop
jmp
xor
mulb
adc
imul
jae
into
cmpsl
mov
ja
idivl
outsl
int
jmp
lret
or
jp
cmp
jge
lcall
pushf
mov
aad
cmpl
pusha
mov
imul
cli
loop
add
xor
insl
mov
mov
pop
mov
pop
dec
mov
mov
outsb
cmc
pop
inc
cmp
cld
mov
lahf
jo
mov
hlt
stos
xor
jmp
pop
loope
shlb
insl
adc
out
lods
sti
xchg
cmpsl
cltd
adc
push
cmp
mov
lret
xor
xor
mov
int
mov
rcr
lea
bound
dec
add
push
mov
pop
fsubl
pop
pop
pop
fwait
imul
push
add
iret
mov
cmp
movsb
sub
daa
mov
leave
dec
jmp
cli
mov
pop
xchg
int
in
in
movb
add
sbb
push
push
push
xor
push
in
xchg
xor
out
gs
ror
daa
hlt
add
pusha
xchg
push
lods
xchg
call
xor
jl
mov
xlat
subb
xchg
roll
cmp
push
dec
jns
and
mov
add
fs
cmp
or
jb
mov
imul
dec
aaa
and
frstor
inc
jmp
cs
repz
mov
iret
mov
mov
cmp
sbb
push
pop
std
or
mov
in
dec
push
xor
loope
pop
das
and
pop
sbb
sub
inc
mov
arpl
cld
nop
call
ss
dec
iret
dec
loopne
lcall
cli
pop
mov
mov
loope
jns
mov
mov
imul
sub
xor
orl
pusha
dec
mov
xor
cli
in
push
mov
push
dec
mov
daa
test
xchg
gs
xchg
push
mov
ds
jne
fs
inc
and
stos
sbb
shl
sbbl
mov
loopne
ret
inc
xor
ficoms
and
out
hlt
icebp
ljmp
mov
jo
into
jg
cmp
lds
push
or
out
loop
pop
data16
and
aas
push
mov
push
jge
stos
mov
and
repnz
push
rcll
xor
cmp
insl
popf
sbb
xor
scas
mov
in
nop
dec
inc
lds
or
sbb
in
and
sbbb
pop
sub
dec
out
adc
dec
test
pusha
inc
cmp
push
xchg
jle
cli
pop
ljmp
cmp
inc
mov
fdivrl
pop
insl
scas
enter
lea
push
ret
fistpll
pop
mov
cld
loope
movsl
adc
xor
aam
xchg
jne
cmp
mov
jo
inc
mov
adc
shlb
stc
pop
push
cmpsl
fcmovnb
lods
or
stos
mov
mov
dec
aaa
push
xchg
test
subb
sbbb
dec
cmp
adc
shl
andb
adc
cmp
pushf
mov
mov
shl
shlb
mov
fs
jmp
jle
les
add
test
insb
pop
sbb
mov
int3
jne
ficompl
mov
in
dec
push
call
sbb
pop
fistpl
pushf
in
pop
dec
push
movsl
adc
or
lods
ljmp
xchg
cmp
add
jbe
pop
addb
inc
mov
data16
lret
adc
pop
cmp
cmp
sub
stos
xor
cmpsl
cmc
xchg
subb
jns
icebp
adc
push
lods
cld
jo
popa
repz
sub
leave
nop
or
mov
add
fwait
daa
push
test
mov
les
push
sub
insl
mov
leave
cmovg
and
andl
ljmp
xchg
ds
xorl
sbbl
sbb
push
rorb
fldcw
in
inc
aad
xor
fs
lret
mov
mov
pushf
inc
jae
punpckhdq
add
jbe
call
jne
mov
outsl
movsl
aaa
fldt
ds
mov
inc
shrb
arpl
push
es
test
adc
int
dec
jae
jl
sub
push
inc
push
aaa
rorb
js
mov
ljmp
cmp
ljmp
mov
call
rcrl
cmp
mov
fcoml
jl
add
fsubrp
mov
pushf
xor
push
inc
data16
pusha
xchg
mov
rcl
shl
mul
push
adc
add
xor
and
push
inc
data16
pusha
xchg
mov
rcl
shl
mul
push
adc
push
sub
and
push
push
sub
ja
adcb
test
loop
movb
cmp
scas
aam
pusha
inc
push
inc
inc
data16
or
mov
mov
pop
mov
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
