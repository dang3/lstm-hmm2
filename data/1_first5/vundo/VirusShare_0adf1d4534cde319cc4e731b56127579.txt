push
jmp
pop
popl
jmp
pop
add
pushf
jmp
pop
add
pushf
jmp
pop
outsl
or
data16
xor
mov
sub
nop
dec
pop
ror
mov
inc
outsl
js
fwait
sub
mov
sub
pop
or
stos
or
adc
and
adc
add
and
mov
int
or
imul
xor
cmp
jnp
daa
push
jnp
iret
out
loop
mov
sub
fidivs
xor
mov
jp
or
adc
test
hlt
jmp
rcrl
cmp
cltd
or
stos
loopne
movsl
hlt
or
adc
insb
cld
fisubrs
cmpsl
ljmp
and
or
cltd
in
adc
sbb
sbb
rorb
cmp
xchg
mov
in
nop
cmc
stos
orb
leave
inc
andb
dec
xchg
xor
cmppd
cmp
cltd
pop
mov
xor
pop
and
and
lret
and
int
mov
inc
pop
xlat
leave
push
cwtl
ret
jno
or
addr16
int
sbb
nop
dec
out
rcl
sub
lds
pop
outsl
mov
in
flds
adcb
xor
sub
jns
jnp
fiadds
popa
out
into
sarl
pop
mov
daa
adc
ret
push
dec
popa
ljmp
ficoms
je
cli
lahf
int3
stos
adc
test
xchg
jl
inc
sti
rorl
ja
ljmp
addr16
in
lods
lret
push
push
insb
pop
fisubrs
fcmovnb
mov
leave
mov
ret
and
push
andb
and
movsl
icebp
idivb
pop
sbb
add
or
inc
adcb
jb
scas
dec
cmc
sbb
or
pop
cmp
dec
js
lret
cmp
push
andb
and
lods
adc
jns
fucomi
testb
push
sbb
test
idivl
fmulp
pop
jp
lret
mov
sub
and
test
rolb
add
ret
cld
adc
jnp
mov
push
sbb
fsubs
jecxz
jnp
push
inc
leave
push
test
fistpl
loop
mov
stos
in
mov
inc
pop
aam
leave
sbb
jle
push
mov
adc
mov
jb
dec
add
les
push
or
cli
mov
outsl
mov
ret
inc
adc
aaa
idiv
xchg
out
or
sbb
push
test
xchg
cltd
js
ret
or
jb
popa
pop
subl
idivb
and
dec
and
push
xchg
adc
dec
adc
icebp
mov
adc
andb
dec
stos
call
pushf
aaa
xor
mov
jp
cmp
and
cwtl
int
mov
jle
in
scas
iret
or
jle
sarl
popa
push
cli
sub
inc
dec
dec
nop
fsubs
add
mov
idivl
and
lock
adc
add
sbb
push
sub
dec
jbe
dec
mov
scas
stos
cmpsb
data16
dec
pop
and
dec
or
add
sahf
dec
fwait
andnps
xchg
push
cmpsl
sub
movsl
fistps
cli
das
push
dec
jb
mov
push
push
push
pushf
push
push
push
mov
mov
mov
add
mov
add
add
neg
inc
not
ror
sub
neg
add
neg
xor
dec
not
add
add
movzbl
inc
lea
jmp
pop
pop
shl
push
pushf
jmp
pop
pop
pop
shld
push
pushf
jmp
movzwl
add
add
sub
xchg
sub
not
add
cwtl
push
jmp
push
jmp
pop
pop
shr
push
pushf
jmp
pop
mov
jmp
movzbl
xor
ror
neg
add
not
rol
inc
inc
ror
inc
xor
pop
mov
jmp
pop
mov
push
jmp
and
pushl
jmp
mov
sub
not
ror
inc
inc
not
sub
sub
pushw
jmp
push
jmp
mov
add
sub
xchg
add
sub
not
add
push
jmp
pop
pop
shr
push
pushf
jmp
movzbl
inc
xor
ror
neg
add
not
rol
inc
ror
inc
xor
mov
push
jmp
pop
pop
shl
push
pushf
jmp
movzbl
sub
not
ror
inc
not
sub
sub
add
popw
jmp
pop
popw
jmp
pop
pop
shr
push
pushf
jmp
notl
pop
and
pushf
jmp
pop
pushw
jmp
pop
popl
jmp
pushw
jmp
movzbl
sub
add
not
rol
sub
xor
sub
xchg
cbtw
inc
cwtl
push
jmp
pop
not
notl
and
pushf
jmp
pop
mov
jmp
movzbl
sub
inc
add
not
rol
sub
xor
sub
push
jmp
pop
pop
pop
popf
pop
pop
pop
pop
pop
pop
ret
pop
pushw
jmp
fwait
jmp
pop
mov
push
jmp
pushw
jmp
pop
pop
mov
jmp
pop
pop
mov
jmp
mov
xor
rol
lea
xor
sub
not
xor
xor
push
jmp
pop
add
pushf
jmp
pop
pop
not
not
and
push
pushf
jmp
and
popl
jmp
pop
pop
pop
shrd
push
pushf
jmp
pop
pop
mov
jmp
pop
pop
imul
push
push
pushf
jmp
pop
mov
jmp
pop
pushl
jmp
pop
mov
jmp
pop
popw
jmp
pop
pushl
jmp
fsub
or
loopne
adc
jecxz
adc
loop
adc
loop
adc
adc
adc
loopne
adc
or
fsub
or
loop
adc
loope
adc
loop
adc
jecxz
adc
or
lcall
adc
or
cwtl
loop
adc
adc
loop
adc
loopne
adc
loope
adc
loop
adc
loop
adc
or
and
or
fsub
or
cld
loop
adc
loopne
adc
loop
adc
adc
adc
loop
adc
jecxz
adc
loop
adc
loop
adc
adc
loop
adc
loop
adc
loope
adc
or
fsub
or
sub
loop
adc
loope
adc
loop
adc
adc
loop
adc
loop
adc
jecxz
adc
loope
adc
loop
adc
loop
adc
adc
or
sbb
or
cwtl
loop
adc
loopne
adc
loope
adc
jecxz
adc
loopne
adc
jecxz
adc
loope
adc
loop
adc
loop
adc
loope
adc
loop
adc
jecxz
adc
loope
adc
loop
adc
loop
adc
loop
adc
loope
adc
adc
adc
loop
adc
loope
adc
loop
adc
jecxz
adc
jecxz
adc
loope
adc
loop
adc
jecxz
adc
loope
adc
loop
adc
loopne
adc
loope
adc
adc
adc
loope
adc
loop
adc
loope
adc
loopne
adc
or
cwtl
loop
adc
loope
adc
out
adc
or
sbb
or
or
add
xor
or
fsub
or
sbb
or
sub
loope
adc
loop
adc
loope
adc
loope
adc
loop
adc
loope
adc
loope
adc
or
ljmp
adc
loop
adc
loop
adc
loope
adc
loop
adc
or
cld
loope
adc
adc
adc
loop
adc
loop
adc
loop
adc
jecxz
adc
jecxz
adc
jecxz
adc
or
loopne
adc
loope
adc
loopne
adc
loope
adc
loop
adc
adc
jecxz
adc
adc
loope
adc
jecxz
adc
loope
adc
loope
adc
loop
adc
jecxz
adc
loope
adc
jecxz
adc
adc
adc
or
insb
loop
adc
loope
adc
loopne
adc
loope
adc
jecxz
adc
jecxz
adc
loop
adc
loope
adc
jecxz
adc
loop
adc
loop
adc
loopne
adc
jecxz
adc
or
loopne
adc
adc
loopne
adc
jecxz
adc
loop
adc
adc
adc
loope
adc
or
xor
or
sbb
jecxz
adc
loop
adc
jecxz
adc
loop
adc
loop
adc
loope
adc
loope
adc
or
icebp
loop
adc
loopne
adc
loope
adc
loopne
adc
adc
adc
or
loopne
or
psraw
adc
adc
loope
adc
loop
adc
adc
adc
jecxz
adc
or
loop
adc
loope
adc
loopne
adc
loop
adc
adc
loope
adc
adc
adc
loop
adc
or
cwtl
loop
adc
loopne
adc
loop
adc
loop
adc
or
jne
or
inc
loope
adc
loop
adc
adc
adc
adc
loop
adc
loop
adc
loope
adc
loop
adc
loope
adc
loop
adc
loopne
adc
pop
shl
push
pushf
jmp
call
pop
arpl
inc
mov
jns
test
ja
mov
push
cmc
mov
push
gs
or
mov
add
cmp
mov
adcl
pop
fwait
xchg
sahf
xor
or
pop
xchg
push
fdivl
and
pushf
test
pop
sar
jecxz
fidivrl
pop
ds
mov
sti
add
mov
ret
push
mov
or
cmc
pop
mov
aam
or
adc
jb
scas
insl
rolb
pop
clc
add
xchg
sub
and
daa
icebp
sub
adc
or
movsl
jl
or
cs
cmp
rol
or
fwait
cmp
xor
popf
mov
stos
in
or
insl
xchg
les
mov
scas
shl
pop
rol
addr16
subb
lahf
add
stos
mov
mov
das
xor
and
fwait
in
ds
jp
aas
and
rcpps
pop
sub
cmp
setae
inc
cmp
mov
or
int
pop
cmc
ja
push
das
shld
xchg
stc
push
fwait
aas
les
push
jecxz
mov
adc
das
test
adcb
xchg
adc
cmpsl
fildl
pop
adc
int
push
push
ret
shrl
sbb
int
inc
pop
out
jne
mov
fldcw
mov
rolb
jecxz
push
aam
cld
push
jmp
rcl
scas
inc
shrl
pop
data16
mov
subl
out
jmp
add
mov
cmp
aaa
inc
push
jae
pop
popa
or
pop
daa
pop
repnz
sbb
negl
add
pop
or
pop
mov
out
dec
xor
imul
arpl
xchg
je
std
hlt
pand
ljmp
dec
pop
inc
aad
jg
popf
out
jae
sbb
jp
add
add
mov
pop
pop
mov
int
repnz
popa
xor
loope
test
dec
sbb
jae
popf
lds
aaa
xchg
in
mov
jne
test
shlb
repnz
inc
lods
mov
ror
dec
xor
lock
je
outsl
push
aas
roll
cmp
xor
fldenv
fadd
inc
adc
and
jnp
sbb
add
fsts
mov
gs
inc
dec
xchg
cmp
pop
pop
fcmovu
sti
mov
outsl
cmp
fstp
xor
imul
loopne
test
std
test
mov
enter
pop
xor
fisubl
mov
loop
xor
mov
push
lcall
adc
dec
and
jae
ret
adcl
pushf
xchg
mov
pop
sbb
xchg
ret
jmp
mov
jp
jne
sbb
push
adc
gs
and
cli
test
sub
loopne
ljmp
and
das
xchg
clc
xchg
popa
ds
icebp
mov
loope
test
or
ficoml
loopne
mov
dec
mov
push
imul
scas
mov
jns
into
repnz
sub
mov
cmpsl
sahf
ljmp
xchg
stc
decb
sti
pop
or
shll
jl
shrl
icebp
xchg
xor
les
popa
enter
dec
and
clc
mov
aas
adc
jl
in
inc
aam
cmpsb
push
lahf
inc
idivl
jmp
outsl
xchg
jb
push
mov
push
lods
pusha
dec
insb
les
inc
dec
out
mov
sbb
add
outsl
and
xchg
mov
fwait
lea
jb
je
mov
inc
pop
out
lahf
adc
mov
cli
mov
and
inc
aaa
inc
sbb
popf
cwtl
lods
dec
jne
sti
xchg
cmc
std
test
ficomps
cs
cmpsl
or
shrb
mov
xchg
jbe
clc
outsb
dec
xchg
cmp
mov
and
lahf
ds
enter
lahf
mov
dec
dec
out
cmpsb
push
jl
mov
test
pop
mov
sbb
jmp
cmp
jg
jecxz
jae
pop
lds
leave
outsb
out
shlb
bound
sbb
std
mov
test
jnp
xchg
arpl
add
sub
cmp
mov
pushf
enter
sar
sub
cmovge
mov
push
cltd
rcrl
xchg
add
stc
mov
imull
daa
jno
pop
shlb
push
adc
jge
pop
pusha
push
add
or
into
out
adc
or
jmp
jl
or
or
jmp
mov
adc
icebp
repz
incl
mov
jmp
