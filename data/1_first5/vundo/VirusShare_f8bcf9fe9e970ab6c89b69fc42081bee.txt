jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
xchg
cwtl
lea
roll
add
or
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
add
add
add
arpl
pop
add
add
insl
add
adc
sub
dec
add
pop
add
add
dec
add
add
add
test
ss
add
mov
add
add
add
add
test
cld
add
add
jmp
icebp
add
add
add
push
add
or
add
add
add
add
or
cmp
add
inc
add
insl
add
addl
add
in
int3
add
jmp
repnz
add
movsl
add
add
dec
add
jbe
das
add
add
add
add
add
mov
cld
add
add
push
add
add
add
pop
add
add
pusha
add
lret
add
cmp
add
add
mov
pop
add
mov
add
popa
add
add
repnz
add
add
add
add
add
mov
pusha
add
or
sbb
jecxz
test
roll
add
add
xchg
add
add
add
add
add
mov
add
xor
fadds
sbb
arpl
test
xchg
add
test
aam
pop
add
add
test
sub
js
add
add
or
inc
add
add
add
add
add
pop
add
mov
add
sbb
test
test
inc
add
add
add
add
add
in
add
add
add
test
mov
add
add
add
adc
sub
add
add
add
filds
add
cmp
pop
add
dec
add
add
add
add
cmp
arpl
sub
flds
mov
add
add
add
xchg
add
add
add
add
test
dec
add
add
cmp
add
add
add
add
add
add
add
popa
add
mov
add
add
add
roll
addl
add
add
add
cltd
add
add
roll
es
add
ja
movl
xchg
add
add
or
pop
add
add
add
roll
mov
add
movl
adc
add
add
add
add
add
mov
add
push
add
test
jae
roll
inc
add
add
dec
add
add
add
add
add
add
sub
testb
add
add
add
add
add
sbb
or
lret
add
add
add
flds
les
sbb
xchg
add
add
add
movsl
add
or
testb
add
add
testb
add
add
add
add
add
add
add
add
add
add
add
add
mov
sub
pop
add
data16
add
add
add
arpl
sbb
popl
testl
test
int3
add
scas
add
add
add
repnz
add
add
add
jbe
insb
mov
push
mov
shlb
mov
int
sub
mov
or
jl
popl
cmc
sub
sti
mov
cmpsl
sub
es
fsubrl
dec
fimull
filds
les
push
dec
out
mov
je
mov
push
xor
adc
popf
dec
loope
scas
push
test
mov
inc
cmpl
out
mov
cmp
xor
dec
lret
enter
mov
xchg
push
xchg
jne
sahf
add
mov
lods
xchg
cs
shrl
jno
mov
push
and
rcl
xor
shll
push
addl
outsb
popa
ljmp
cmpsl
sub
gs
addl
aad
daa
push
loopne
test
cmpsb
or
add
fiaddl
and
mov
nop
add
push
add
ret
filds
movsb
loop
call
xchg
je
xchg
sub
int3
cmp
xor
and
pop
orb
or
ja
shr
lods
cmpsl
into
jo
ret
pop
fwait
mov
inc
cmp
push
fstpt
sti
fisubl
jl
loope
pop
sub
xor
imul
ljmp
and
jno
ljmp
gs
dec
push
loope
aas
in
mov
push
nop
jge
cmp
pop
mov
repnz
mov
lcall
rcll
lret
popf
lods
xchg
repnz
inc
mov
add
inc
dec
mov
mov
xchg
nop
push
xor
pushf
jl
dec
and
fnstsw
lahf
aaa
pop
or
add
imul
push
daa
jmp
cmp
dec
js
cmc
mov
test
imul
pusha
xchg
xchg
xor
sbb
xchg
in
mov
jb
cmpsl
aaa
pop
adc
int3
cwtl
adc
loope
filds
and
pop
and
jns
add
xchg
js
xchg
mov
mov
sub
loop
xchg
shll
movsl
repz
xor
pushf
dec
xchg
into
shl
nop
sbb
cwtl
xorl
scas
adc
loopne
pop
and
pushf
adc
insb
scas
or
fwait
mov
and
add
fucomip
outsl
push
cmp
fcompl
aaa
je
addl
faddp
pop
xor
xor
sub
dec
or
subb
cmpsb
cltd
fidivrl
dec
inc
sub
push
mov
mov
cmp
jae
cs
into
lret
add
dec
lea
inc
data16
fildl
popf
push
or
and
dec
add
stc
out
lea
sbb
fnstsw
adc
int
xor
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
int
xchg
mov
cmpsl
jmp
xlat
xlat
mov
xor
sbb
or
sub
leave
xchg
cmpsl
jmp
idivl
pop
dec
push
js
imul
sub
leave
scas
stc
mov
mov
mov
or
pop
sbb
pop
js
or
pop
push
pop
out
xchg
fbld
cmp
mov
pushl
and
push
fnstenv
mov
add
xor
and
dec
clc
mov
xchg
jl
or
push
fwait
sub
or
sub
cltd
aam
inc
in
ljmp
pop
clc
dec
addr16
xchg
test
add
inc
push
xchg
fcoml
sub
repnz
rorb
and
jnp
rorb
adc
aaa
dec
mov
ja
js
out
push
shl
xchg
pop
out
imull
and
inc
sbb
push
lahf
leave
ja
xchg
clc
inc
sub
push
dec
add
xor
and
pop
clc
dec
enter
xchg
or
xchg
cmp
push
flds
jmp
idivl
pop
dec
das
jns
imul
jle
in
loop
sarb
stos
std
cmc
fmull
push
inc
sub
cmp
dec
adc
dec
xchg
mov
movsl
shlb
test
xchg
push
push
cmp
jl
lahf
pop
pop
addr16
cwtl
mov
rcrb
mov
mov
pop
dec
aaa
jns
imul
sub
leave
mov
cmpsl
jmp
idivl
pop
dec
aaa
jns
imul
sub
loope
xchg
iret
cs
insb
fildl
dec
leave
adc
sbb
push
sub
push
ds
jbe
push
inc
xor
mov
xor
les
and
mov
sbb
in
dec
sbb
mov
adc
jmp
outsb
imul
push
sbb
inc
shlb
cwtl
fsubr
xchg
mov
sti
jne
test
lcall
add
enter
xor
pop
es
lahf
jmp
xor
std
popf
ja
cmp
xchg
inc
mov
data16
jb
mov
jecxz
nopl
mov
ljmp
mov
es
mov
ss
adc
push
mov
scas
inc
rcrb
push
inc
mov
aaa
leave
imul
outsl
lea
iret
aas
push
jne
jo
fcmovnbe
scas
mov
out
mov
cmp
add
rclb
inc
or
in
xchg
sbb
sahf
pop
push
mov
pop
jl
cmpsl
rep
int3
xchg
ficompl
cmp
inc
xchg
sub
lock
xchg
push
sub
adc
sub
jmp
add
add
jge
jbe
scas
pop
sub
push
fcompl
adc
lahf
loope
or
dec
cmp
pop
popa
roll
inc
jns
loop
jae
jo
inc
lret
in
imul
loopne
push
outsl
js
cmpsb
jne
movsl
xor
add
pop
mov
push
jmp
imull
in
push
gs
mov
repnz
repz
shll
fmuls
pop
mov
iret
xlat
dec
mov
rol
mov
inc
pusha
lahf
out
xchg
push
cmp
es
rcrb
in
shlb
pushf
xchg
sti
mov
das
pop
fimuls
shll
aam
cltd
sbb
mov
cwtl
jp
dec
mov
adc
hlt
ds
and
add
jg
cmp
mov
xchg
adc
test
xchg
sub
std
dec
outsl
fwait
mov
loope
repz
sub
adcb
lods
clc
cmp
mov
jle
movsb
jg
add
inc
ja
mov
and
jp
into
fwait
in
aas
mov
jbe
int3
pop
or
mov
inc
push
in
orl
mov
or
inc
fstps
jp
enter
dec
jmp
sbb
cmp
pop
or
or
mov
outsb
adc
inc
shr
inc
xchg
leave
mov
test
push
jle
addr16
mov
aaa
pop
outsl
lock
pop
cwtl
int3
arpl
dec
cmp
fiaddl
cmp
loope
sahf
ret
test
and
adc
mov
les
mov
dec
ficompl
xchg
push
pop
je
out
ljmp
xchg
and
repnz
dec
fimull
data16
in
out
shll
scas
sbb
fldt
subb
push
out
mov
mov
loopne
cmp
mov
aam
nop
pop
pop
mov
sahf
stc
out
or
ret
cmp
and
inc
jae
pop
in
sbb
sub
pop
lea
das
aad
xor
insb
test
cmc
mov
pop
test
out
mov
inc
aad
xchg
inc
mov
mov
inc
xchg
xchg
cmc
fsubr
xor
xor
pop
rcrl
psadbw
test
adc
loopne
leave
loopne
mov
clc
mov
mov
ret
ja
jns
ret
je
stos
repnz
and
js
in
dec
insl
cmp
stos
jle
es
imul
movsl
cld
pushf
nop
insl
push
insl
inc
loop
lods
loopne
xor
fcmovnu
jne
add
pop
insl
int3
xor
aaa
and
rclb
mov
or
inc
adc
cs
movsb
mov
xlat
rorb
out
data16
jl
pop
jmp
inc
push
and
cmp
jo
xor
dec
loop
ret
cmpsb
xor
xchg
jmp
adc
imul
push
and
cmp
push
and
jmp
fildl
and
movsb
aas
and
ret
in
out
or
pop
aas
loopne
pusha
les
push
je
push
mov
xor
jo
shlb
mov
sbb
mov
imul
xchg
sbb
mov
and
mov
adc
adc
cmp
ret
jbe
sub
jae
mov
mov
je
hlt
fs
xchg
loopne
xchg
rcl
push
lds
push
jmp
leave
xchg
jp
sbb
adc
cwtl
stos
and
or
pop
dec
xchg
mov
mov
add
sbb
dec
test
mov
jae
or
ja
push
insl
mov
mov
rcrl
aam
mov
cmp
fwait
nop
and
inc
iret
cmp
mov
out
int
pop
or
jo
cld
loopne
fwait
or
add
jg
xor
xchg
movsb
pop
cltd
xor
sahf
cltd
fdivp
add
fcomps
inc
adc
fisttpll
es
xorl
test
inc
outsb
cs
imul
sbb
xor
mov
das
pop
aam
test
dec
je
int
lods
repnz
cmp
jne
aaa
fnstsw
incb
xchg
and
jnp
mov
test
scas
cli
ss
in
mov
stc
xchg
jnp
pushl
push
in
push
test
pop
cmp
mov
inc
or
or
scas
jbe
cmp
insb
fs
jmp
sbb
xchg
ret
insb
ficoml
mov
mov
pop
in
cmp
sbb
xor
loopne
lcall
and
add
test
repnz
cs
sub
or
inc
sub
js
jl
fbld
rorl
stos
pusha
test
xchg
cltd
mov
adc
stc
jne
mov
pusha
xchg
jns
shrl
jo
adc
addb
adcl
or
pop
xchg
and
outsl
dec
push
sub
xchg
mov
lret
mov
cmc
das
sbb
add
jo
mov
in
clc
and
jle
lahf
jl
enter
mov
faddl
mov
pop
push
cmp
push
sbb
sbb
outsb
cmc
mov
mov
jno
xor
clc
mov
cmpsl
int3
stos
pop
loope
loopne
mov
jecxz
daa
mov
sahf
ss
sbb
pop
push
int
and
sbb
jl
push
int
mov
adc
xchg
loop
mov
mov
cmp
out
cli
orb
iret
ret
mov
adc
into
inc
mov
pushf
push
nop
scas
les
add
xchg
sbb
pop
aad
adc
jae
in
mov
addr16
rcr
test
push
sbb
leave
scas
rclb
sub
dec
push
daa
mov
mov
xor
xor
arpl
adc
jmp
jbe
pop
mov
stos
div
scas
mov
imul
stc
adc
cli
imul
jmp
shl
or
pop
rcrb
icebp
mov
and
mov
call
orb
scas
ret
pop
and
mov
adc
sub
insl
pushf
mov
xchg
jb
pop
inc
adc
out
rclb
cmp
loop
pusha
ficompl
in
mov
or
leave
mov
lods
cmpsb
cli
dec
mov
mov
and
xchg
mov
inc
cmp
stc
jo
out
jp
lcall
xor
fbstp
pushf
mov
jns
cmpsl
cmpl
jo
mov
and
mov
dec
test
jo
rorb
add
mov
shll
dec
test
stos
pop
cmp
mov
mov
addr16
jmp
or
jb
mov
sbb
jg
cmp
jno
xor
xchg
push
js
es
xchg
xchg
jg
push
mov
iret
dec
roll
mov
call
jp
fdiv
out
push
jmp
jno
mov
fs
cmp
mov
fwait
popa
in
inc
adc
test
dec
xor
sti
adc
int3
inc
sub
dec
lahf
jmp
xchg
imul
push
push
clc
xchg
jnp
push
movl
pop
xchg
push
scas
pop
push
sahf
push
xor
cs
sub
mov
loope
add
and
movsb
jmp
insl
int
adc
fs
mov
xchg
in
scas
pop
fidivrs
lret
aad
jmp
adc
aam
les
adc
call
cs
jo
add
loopne
mov
shlb
outsl
mov
pop
mov
sub
fstpt
addr16
xchg
dec
int
shlb
sbb
and
pusha
inc
xor
popa
ja
inc
out
dec
enter
in
or
daa
add
adc
ret
jg
jg
scas
or
and
ljmp
lahf
mov
lods
sbb
sub
mov
mov
js
push
dec
xor
pop
mov
or
cmp
test
xor
add
int
out
lea
add
sub
inc
lds
stos
or
fadd
dec
add
dec
inc
mov
leave
test
jno
cmp
xchg
add
mov
xchg
jbe
mov
pop
hlt
adc
mov
fnsave
fldenv
lods
sub
stc
mov
test
sub
pop
loopne
mov
pop
in
icebp
jmp
nop
addr16
popf
pop
jl
push
mov
xchg
movsl
sub
daa
leave
and
rcrl
lds
inc
ret
scas
mov
cmpsb
out
inc
test
push
mov
push
sub
fbstp
inc
mov
out
loop
dec
pop
fstps
cwtl
inc
fld
mov
dec
int3
out
pop
mov
pop
rolb
outsb
pop
xor
inc
sub
sub
test
jno
xchg
cmpsl
push
adc
rorb
sahf
sub
fildll
dec
pushf
mov
incl
dec
scas
pushf
lret
ret
pop
xchg
xor
dec
or
outsl
dec
stc
pop
inc
push
in
sub
shlb
mov
pop
cmp
xchg
sbb
push
xor
out
aad
mov
andb
fmuls
cmp
pushl
sbb
out
hlt
dec
insl
push
lret
test
popf
push
ss
pop
inc
movsl
xchg
mov
and
sbb
aas
jg
push
xor
adc
mov
ja
imul
cmp
and
push
cmpl
std
cmp
movsb
out
mov
cltd
sub
adc
icebp
shlb
jp
dec
andb
shr
ret
xor
adc
iret
and
pop
es
iret
mov
jp
das
xchg
jne
jmp
mov
and
roll
fcompl
daa
arpl
xor
xchg
outsl
jmp
sub
xor
jge
in
addb
stos
sub
push
xchg
pop
cmpsb
in
inc
sti
ds
push
jns
and
lds
scas
fwait
stos
je
jg
pop
mov
xchg
pop
leave
add
jmp
idivb
jo
push
repz
mov
adc
into
std
iret
adc
mov
ss
movsb
sbb
cmpl
cmp
pop
jp
pop
movsl
jl
loope
mov
out
clc
push
fwait
xor
adc
add
stc
pop
testl
push
mov
cs
fs
mov
mov
cs
sti
pop
pop
mov
cmp
mov
mov
lds
xchg
inc
call
adcl
aas
xorb
iret
mov
imul
add
jle
mov
sbb
sbb
pusha
stc
hlt
jmp
std
mov
pop
pop
jmp
mov
sub
inc
stc
push
aas
lahf
and
hlt
fmuls
scas
daa
inc
ja
ds
fadd
lcall
ficomps
adc
jns
inc
lret
or
inc
mov
cs
dec
adc
mov
aaa
in
pop
pop
and
xlat
es
pop
arpl
int
in
movsb
push
xchg
lea
stos
fld
icebp
xchg
mov
xchg
and
sbb
or
data16
adc
fs
jns
jne
stc
dec
mov
pop
or
mov
xchg
and
mov
push
cmp
mov
popa
inc
push
dec
pop
xor
push
lea
int3
xchg
add
fsubs
call
loop
cltd
adc
sub
pop
vxorpd
dec
mov
or
dec
add
popa
ja
xor
push
push
xlat
xor
out
gs
dec
lea
mov
leave
xchg
or
fiaddl
xor
inc
movsl
push
out
cmp
scas
xor
scas
pushl
sbb
push
lds
push
mov
add
jmp
sete
loop
push
mov
xchg
xchg
push
sti
mov
and
std
in
aam
xor
int3
sbb
das
andb
mov
rcr
mov
fcomi
ret
push
mov
jecxz
inc
sub
push
mov
jge
mov
jg
repnz
int3
es
popf
inc
mov
loopne
push
and
dec
aas
jo
inc
push
data16
lahf
sbb
imul
insb
mov
pop
ss
repz
out
into
mov
sbb
xor
or
sbb
lret
cltd
lret
clc
orl
lret
stc
lret
push
add
mov
into
add
sub
cmpsl
gs
lret
lret
hlt
fs
xchg
xor
mov
adc
add
hlt
jl
mov
dec
mov
adc
or
sahf
xchg
fdiv
jecxz
cmpsl
pushf
add
fst
push
icebp
test
xor
aas
xchg
dec
in
out
bound
hlt
inc
out
int3
fwait
leave
mov
mov
mov
jl
cli
mov
jp
fdiv
xor
callw
fwait
rorb
cld
mov
imul
xchg
cs
inc
xchg
mov
xor
add
call
test
inc
inc
in
or
cwtl
push
out
popa
dec
loope
inc
out
leave
push
push
cmp
cli
mov
mov
js
pop
movsl
fimull
xor
jle
mov
sub
push
mov
sbb
mov
and
mov
lcall
cmpsl
fstpl
mov
sbb
mov
fcoms
xor
and
sub
enter
adc
std
into
ljmp
jg
inc
popf
bound
cmp
and
mov
push
jae
mov
cmpsb
mov
cltd
rcll
add
cmp
lea
loope
and
xor
mov
jl
mov
xchg
and
push
mov
xchg
inc
test
push
mov
sbb
add
push
frstpm(287
test
insl
fsubp
lcall
insb
push
out
inc
mov
aam
xchg
pop
rcr
sub
sub
pop
outsl
lret
js
sub
mov
ror
dec
cs
aam
jg
and
xor
add
cmp
inc
mov
sti
leave
sbb
inc
fcoms
es
and
push
add
into
sbb
pop
iret
inc
imul
aad
orl
shrb
sub
xor
ret
adc
jnp
and
popf
fildll
repnz
xor
and
dec
shll
xchg
pushf
mov
mov
aaa
scas
add
outsl
fiaddl
xchg
cli
mov
xor
mov
cld
mov
sbb
inc
sub
sub
mov
add
hlt
cmpsb
enter
xchg
jne
xchg
mov
cmc
enter
mov
adc
mov
add
or
icebp
add
inc
push
ja
out
scas
stos
jbe
mov
cmp
or
sub
mov
pinsrw
pop
cmp
xchg
adc
xchg
lret
ret
jg
stc
test
popa
or
mov
lock
or
out
lret
xchg
stc
mov
aam
icebp
mov
sti
sub
jecxz
inc
rolb
mov
ret
int3
dec
xlat
inc
stos
xchg
fsubrs
xchg
jle
fcoms
mov
add
lcall
mov
leave
js
mov
and
adc
gs
rcr
dec
jl
repnz
popf
and
push
sar
xor
dec
jmp
scas
rdseed
ret
xchg
loopne
loopne
loope
xchg
out
les
testb
setns
cli
sub
sbb
xor
shr
in
dec
mov
repnz
fnstsw
shr
mov
pop
and
popf
pop
outsl
shll
mov
mov
and
jnp
das
dec
cwtl
pop
dec
test
xor
mov
or
dec
or
hlt
cmp
lahf
cmp
inc
jae
pusha
push
dec
mov
scas
std
add
mov
clc
mov
xchg
pop
xorl
inc
or
add
jno,pn
mov
int3
sar
fstpt
out
adc
aas
pop
leave
mov
inc
out
xchg
push
fidivrl
pop
jo
jmp
ljmp
sub
jnp
sbb
loopne
test
cmpsb
repnz
in
jg
mov
xor
in
ds
jle
rcrl
push
lcall
pushf
or
xlat
inc
je
mov
and
sbb
sbb
addb
out
xchg
cwtl
hlt
testl
push
jg
fwait
outsw
popw
jg
in
mov
push
call
test
cmp
iret
mov
inc
sahf
lds
jp
or
ficompl
push
bswap
mov
rcrb
out
add
das
jg
sub
cmp
xchg
aaa
addr16
mov
cmp
jbe
sbb
mov
adc
push
mov
cmp
inc
xor
loopne
lahf
sbbb
xchg
push
adc
mov
shl
ljmp
xchg
iret
leave
jp
mov
aad
ror
clc
jl
lahf
or
cmp
and
outsl
cli
pop
lahf
lcall
adc
cmpsb
add
ret
dec
mov
add
ds
dec
movsb
fstpt
inc
add
xor
int
cmp
scas
int
mov
in
pop
sub
jle
lcall
jb
out
xchg
dec
xor
cmc
xor
js
or
mov
cld
jmp
jl
int3
rcr
push
cmp
sbb
test
dec
mov
mov
and
jo
lret
mov
fwait
push
jb
enter
add
cltd
inc
inc
fucomp
dec
cld
sub
or
testb
ret
push
scas
cmc
cmp
mov
data16
mov
into
fcompl
andb
mov
int3
cmp
les
mov
loope
push
fldl
inc
lock
rolb
dec
lcall
and
rcrb
push
out
jge
inc
ljmp
les
icebp
test
je
lret
inc
fildll
xchg
cmp
push
stc
mov
add
std
push
movsl
stos
push
cmpl
or
jmp
data16
pop
mov
xor
add
mov
imul
dec
push
in
or
dec
jo
push
lret
mov
inc
sbbb
push
mov
cmp
mov
jecxz
adc
out
mov
leave
mov
mov
mov
shll
cmc
dec
movsb
aam
out
aas
add
imul
and
int
lcall
lret
xor
cmc
mov
clc
test
movsb
add
aad
inc
in
sub
cld
lret
sbb
xchg
popa
mov
dec
loop
adc
jl
push
jmp
adc
fisubl
jg
arpl
out
ficoml
imul
out
or
dec
xchg
cmp
xor
negb
aaa
in
jne
pop
mov
repz
add
and
cmp
int3
lods
clc
pop
aas
lret
hlt
fucomi
roll
clc
pop
sub
push
scas
sbb
and
sbb
xor
in
aas
push
lods
inc
mov
mov
div
sbb
in
test
fistpl
inc
or
xchg
loope
mov
aam
int
cmc
clc
sbb
or
popa
sbb
mov
sti
icebp
fs
or
das
mov
div
cwtl
mov
data16
sbbl
sbb
jle
xchg
add
and
xlat
dec
sbb
inc
repz
and
mov
scas
lcall
cld
outsb
cmpsl
mov
fldenv
or
mov
cmc
fwait
pop
push
adc
xlat
ret
mov
pusha
rorl
ss
inc
lock
cli
push
push
or
fwait
sbb
cmp
bound
ja
icebp
fstl
push
negb
loop
mov
sbb
mov
xchg
sub
mov
in
test
push
and
push
mov
lea
fs
inc
cmp
hlt
or
pop
add
addb
out
outsl
cmp
mov
insl
sbb
repz
mov
pop
fcmovb
call
and
int
insl
jne
test
cmp
loopne
loopne
leave
out
cmpsl
jmp
idivl
pop
dec
aaa
jns
imul
sub
leave
mov
cmpsl
jmp
idivl
pop
dec
aaa
jns
imul
sub
leave
mov
cmpsl
jmp
idivl
pop
dec
xor
imul
push
sub
stc
cmpsl
jmp
ja
addr16
jns
push
and
cwtl
mov
or
cmp
or
cs
ds
outsb
mov
sahf
dec
scas
jns
imul
cmp
pop
push
fstps
leave
pop
icebp
ds
outsb
mov
sahf
scas
jecxz
pop
into
sub
inc
out
xor
sbb
fstps
ljmp
cmp
int
sbb
int3
or
push
fdivp
gs
les
out
insl
add
inc
dec
test
inc
loop,pt
pop
and
in
pop
and
or
clc
xor
mov
dec
outsl
xor
adc
ss
nop
cmc
iret
lock
leave
adc
fdivs
clc
push
pop
out
push
jne
insl
mov
dec
fdivrs
imul
stc
xchg
movsb
push
pop
push
sub
mov
add
inc
jl
jno
ljmp
sub
or
clc
call
push
cli
loop
sbb
pushf
mov
imul
cmpsb
mov
or
mov
adc
sub
je
das
jnp
jb
pop
int3
outsb
push
push
ret
rcl
sahf
imul
cmp
mov
cs
ds
movsl
pop
outsb
mov
mull
lret
adc
xchg
mov
dec
lcall
sub
aaa
out
int
rorb
fildl
out
push
sbb
sbb
outsl
stos
jnp
sub
or
out
cli
test
into
push
fimuls
out
cmp
sub
fstps
leave
cs
ds
outsb
mov
sahf
dec
scas
jns
imul
cmp
sub
fstps
leave
cs
ds
outsb
mov
cmp
adc
jle
ljmp
push
push
jno
lcall
cmp
out
inc
mov
int3
fsubrs
cli
fisubrl
xlat
ret
scas
insb
decb
test
sbb
jae
or
in
cli
add
mov
das
lock
cmpsl
rcrb
xor
jne
ljmp
mov
sbb
hlt
or
hlt
inc
out
fistpll
xchg
inc
stc
stc
inc
push
sti
lret
rcl
fdivl
lods
jp
insl
xor
cs
shll
fdivr
lock
pusha
xorb
cs
pop
mov
mov
jmp
out
imul
mov
fcoms
shrb
add
ret
aad
imul
stos
inc
push
cltd
scas
insb
sahf
fwait
icebp
loop
mov
sub
pop
xor
xlat
cltd
mov
lret
push
icebp
mov
sbb
lret
loop
sbb
fbld
sbb
imul
movsl
sbb
push
mov
push
xchg
xor
xchg
mov
adc
fisubrs
and
ret
icebp
inc
sarb
mov
es
bound
adc
daa
mov
dec
add
popf
std
js
test
mov
jle
adc
mov
cld
dec
dec
out
jae
js
ljmp
sahf
lret
inc
loope
push
repz
bound
mov
jl
insl
xchg
mov
in
daa
jno
cmp
aas
out
ds
adc
sarb
adc
sub
inc
inc
pop
cli
inc
lahf
xlat
inc
xchg
ljmp
add
jmp
cmp
rdtsc
scas
xchg
mov
mov
mov
dec
jmp
loopne
adc
push
filds
mov
xchg
inc
icebp
aad
subb
inc
pop
dec
add
insb
mov
sub
out
fbstp
xor
sti
insl
les
jmp
cwtl
out
aaa
lds
jg
std
lods
sub
push
mov
sbb
jbe
in
in
mov
test
push
in
movsl
mov
lret
xchg
mov
mov
dec
addb
mov
add
imul
popfw
inc
or
xchg
adc
cmp
and
outsl
mov
lcall
fisubrl
enter
cmp
mov
scas
sarb
add
outsl
test
lock
mov
inc
lahf
xor
jge
xchg
nop
fistl
and
out
fs
cmpsl
mov
pop
cmp
mov
dec
sub
outsb
xorl
clc
xchg
test
bound
imul
and
fs
out
cmp
test
mov
test
mov
hlt
xchg
push
cmp
gs
xor
push
push
push
aad
sbb
xlat
pop
in
jle
in
adc
out
xor
sub
sahf
adc
gs
mov
loopne
sub
adc
jbe
push
scas
sahf
std
mov
inc
xchg
fdivs
test
mov
sbb
repz
arpl
jo
sub
jno
cmp
or
into
sub
ljmp
sbb
pusha
mov
mov
mov
or
popa
push
mov
aaa
jg
mov
lcall
xor
adc
pop
mov
arpl
adc
lods
ret
cs
adc
jge
adc
jg
movsb
add
test
adc
and
sbb
push
mov
push
ljmp
movsl
inc
jo
inc
jp
add
add
iret
cmpsb
test
les
adc
mov
loope
xor
decb
cmp
sbbb
jp
fwait
clc
fdivrs
in
xchg
adc
pop
pop
sbb
jbe
sub
js
mov
loopne
xchg
mov
xchg
mov
inc
lds
xchg
ret
loop
test
fstps
cwtl
popf
xchg
push
in
in
das
and
cli
cmpsb
pop
scas
jp
and
into
inc
je
pop
jae
fcmovb
jo
fcmovbe
sub
push
sbb
fadds
arpl
js
inc
fsub
bound
ret
and
push
mov
xor
into
shrl
gs
add
imull
rcr
adc
jbe
aam
mov
stc
xchg
decb
cmpsl
sbb
adc
std
jl
test
pop
sahf
mov
adc
jnp
and
roll
hlt
mov
xor
push
movsb
inc
aaa
bound
shrl
js
insb
inc
nop
in
or
or
stos
pop
inc
data16
push
cmp
ret
mov
pushf
js
xor
pop
sbb
xor
lds
sub
mov
fwait
addr16
ficomps
and
mov
and
stos
inc
pop
fidivs
mov
and
dec
mov
push
aad
dec
mov
bound
testl
dec
roll
mov
in
stc
outsl
aam
shlb
ds
rcr
test
jle
sub
xor
shll
push
or
notb
xchg
or
xor
cld
je
jno
pop
mov
push
jns
pop
imul
rcll
sbb
dec
push
xor
xchg
pop
faddp
cwtl
rorb
push
shll
push
mov
sti
and
scas
jmp
push
enter
push
pop
push
mov
sub
push
scas
pusha
xchg
xchg
shrl
adc
add
adc
sub
int3
int3
add
cmp
xchg
inc
add
mov
inc
mov
cmp
lds
into
cltd
lret
loope
mov
fldl
jne
cmp
xchg
out
jne
adc
add
lahf
adc
cmc
bnd
push
sarb
or
mov
nop
mov
jo
lcall
mov
adc
loopne
cmp
fwait
lods
adc
add
push
pop
outsl
scas
jp
cmp
int
xor
in
loopne
and
adc
cmp
jg
je
push
dec
and
sub
mov
pop
stc
data16
adcl
punpckhbw
mov
rclb
inc
mov
push
pop
push
fs
test
jge
idivb
dec
push
inc
jns
inc
call
jl
scas
dec
mov
pop
and
pop
jp
add
push
jo
cmpsl
sti
adc
cwtl
pop
aad
shlb
pop
ljmp
loopne
scas
xlat
jbe
lahf
push
pop
sbb
nop
mov
cmpsb
mov
aad
in
ja
dec
xchg
sub
test
push
mov
pop
push
xchg
aaa
repz
dec
jb
lret
fdivl
mov
loopne
push
jecxz
push
movsb
add
lahf
xor
orl
sbb
jne
mov
scas
cli
pop
fdivl
add
mov
enter
mov
sub
cltd
adc
push
sub
popa
push
xor
inc
test
push
pop
xchg
xor
push
ds
bound
dec
and
xchg
push
divb
shlb
incl
sub
ret
jo
ds
iret
push
pop
inc
call
lcall
push
push
adc
cld
or
shlb
scas
int
es
lds
jmp
mov
add
imul
addr16
sub
movl
xchg
cmpsb
pop
out
sahf
sbbb
lret
mov
jbe
mov
js
sub
fdivl
xchg
arpl
pop
test
daa
adcb
jge
arpl
int3
push
mov
das
test
pop
sbb
test
or
mov
test
pop
insb
insl
xlat
or
jecxz
mov
repz
outsl
dec
test
js
icebp
dec
mov
lcall
cli
pop
stc
daa
mov
mov
out
mov
pop
mov
pop
popf
fs
cmp
test
xor
test
daa
jmp
in
push
push
movsb
mov
movsb
lea
lods
gs
sub
sub
mov
ja
pop
sub
sarl
les
fisubl
ror
and
ret
jecxz
aaa
dec
mov
sbb
push
fistps
cmp
in
cmp
or
les
outsb
dec
xchg
jnp
jb
cmp
data16
jg
dec
into
mov
xchg
inc
jecxz
es
mov
xchg
ja
mov
dec
int
inc
add
mov
jno
vpmaxub
test
jp
sbb
bound
dec
xchg
pop
mov
jl
mov
insl
xchg
movsl
jmp
mov
movsb
rclb
jl
sub
jg
arpl
out
sub
imul
dec
jp
xor
je
popf
fidivrs
cmpsb
cmp
mov
sar
ljmp
jnp
arpl
cmp
in
push
mov
sti
or
jne
es
in
cmpsl
pop
adc
pop
add
xchg
jle
in
xchg
stos
or
mov
js
pop
dec
ss
clc
sbb
pop
fucom
daa
int
inc
lods
pop
les
xchg
sar
outsl
orl
cmp
xchg
lret
enter
nop
push
inc
arpl
push
mov
sub
jns
or
xor
fs
cwtl
rcrl
cmp
sti
cmp
les
dec
fstps
lret
out
cmpsb
popa
repnz
fldcw
addr16
rclb
fstps
lret
addr16
imul
pop
insb
push
loopne
ljmp
push
out
test
lret
outsl
stos
xlat
popa
lret
mov
scas
in
pop
std
xchg
ret
stos
arpl
test
inc
jle
sub
loope
and
fildll
sbb
push
inc
xchg
jnp
and
loopne
and
and
sub
rcrl
mov
outsb
jecxz
push
outsb
movsb
frstor
in
mov
in
xchg
inc
sub
mov
and
outsl
idivb
inc
ja
xchg
xor
jmp
sbb
sti
xor
jne
outsl
xor
mov
inc
jnp
jl
js
daa
and
pop
xor
inc
bound
mov
dec
inc
or
xchg
cltd
mov
jmp
add
cmp
daa
mov
xchg
mov
ss
popf
cmp
adc
sub
mov
mov
sbb
mov
and
push
lcall
subb
hlt
push
pop
in
and
pusha
mov
mov
xchg
and
add
mov
lds
setge
sbb
sbb
cs
int3
dec
movsl
jmp
sub
imul
lahf
loope
xchg
ret
in
in
add
jnp
or
in
pop
inc
push
out
ljmp
cmpl
test
xchg
iret
repz
adc
sahf
nop
inc
mov
dec
jno
or
cmp
cs
bound
outsl
sub
inc
push
orl
imul
sub
mov
dec
and
insl
adc
rcll
or
aad
pop
lods
mov
es
cs
or
push
jp
pop
enter
mov
enter
or
in
loope
cmp
inc
popa
out
fwait
push
shll
dec
mov
test
rcl
into
stc
or
xchg
inc
sub
cs
fucomi
pop
adc
inc
pop
xor
push
mov
mov
mov
dec
outsl
test
fidivl
mov
test
mov
test
add
mov
adc
dec
rcl
mov
ja,pt
mov
inc
xor
dec
repz
sahf
iret
jge
fs
cmc
imul
push
bound
sub
daa
push
divl
sbb
aas
movsb
jl
adc
xchg
jecxz
pop
pop
lds
int3
dec
pop
cmpsl
sub
xorb
rclb
mov
pop
sub
mov
push
iret
xor
lods
add
adc
fistps
fildll
movsb
jecxz
sar
pusha
xchg
mov
sti
cmp
mov
ja
push
and
jne
cmp
fildl
or
mov
mov
ja
loop
ja
outsl
enter
shr
arpl
fdivl
movsb
mov
push
dec
mov
call
cltd
out
cmp
mov
inc
stos
ret
ds
push
nop
sbb
fwait
ds
outsb
popf
xor
sbb
sbb
bound
out
and
je
mov
add
xor
sbb
inc
lcall
adc
or
mov
inc
stos
push
xchg
test
aam
or
icebp
add
mov
adc
das
mov
outsb
out
cs
push
fs
mov
mov
push
push
roll
in
pushf
pop
ret
adc
jnp
or
xchg
scas
jle
outsb
add
or
iret
adc
xchg
and
adc
push
rolb
inc
mov
call
gs
sub
test
and
arpl
pop
ljmp
push
mov
pusha
inc
cmpsb
insb
add
sbb
lahf
sarb
imulb
mov
out
imul
mov
and
test
cli
imul
fdivrs
push
out
xlat
ret
test
jb
mov
in
mov
dec
sub
pop
xchg
mov
stos
or
xchg
lods
mov
xor
dec
mov
jns
xor
adc
adc
mov
leave
cltd
dec
ret
jae
and
mov
lock
sbb
lods
mov
sbb
jae
lar
test
jnp
popf
and
or
mov
and
xor
inc
sbb
push
cmp
rorl
push
rcrb
xchg
das
xchg
inc
repz
flds
inc
pop
faddl
clc
sub
dec
jne
mov
mov
testb
and
insb
inc
shrl
sbb
sbb
mov
push
dec
hlt
int
ret
into
mov
mov
fs
repnz
addr16
stos
pop
xor
rclb
or
pop
shrl
inc
loop
dec
sub
shrl
pop
ljmp
jbe
jg
and
mull
es
push
inc
loop
aad
js
adc
xchg
stc
loop
fmull
aam
pop
mov
xchg
cmp
add
push
jp
int3
xchg
lock
neg
adc
dec
dec
ja
push
fists
std
fisubrs
sub
stc
stc
push
js
jle
insb
inc
pop
fsubrl
pushf
scas
push
xchg
xor
dec
sbbl
ja
pop
pop
jno
jnp
mov
ret
hlt
dec
shl
das
dec
leave
dec
mov
and
in
into
fdiv
xor
mov
aad
mov
dec
xlat
mov
jl
lret
add
test
call
subps
aam
in
test
movsb
or
lahf
aaa
pusha
pop
jne
mov
pop
cmpsb
mov
pop
jge
xor
shl
mov
xchg
imul
xor
jecxz
pop
cmp
cmp
scas
pop
pushf
mov
idivl
or
rcll
insb
in
inc
pop
loope,pn
push
mov
push
and
outsb
stos
inc
sbb
pop
inc
mov
dec
jno
mov
imul
repnz
movsl
rol
cmpsb
adc
sti
and
jne
mov
les
lods
mov
pop
hlt
movsl
jge
mov
out
push
mov
je
out
mov
mov
mov
shr
inc
daa
sub
lahf
jle
mov
sbb
mov
js
push
scas
xchg
loop
mov
cmp
pop
divb
xchg
dec
in
sbb
and
add
in
push
movsb
and
aaa
xchg
cmp
fstp
fldenv
stos
adc
xchg
test
subb
xchg
or
aad
iret
pop
shl
lret
fildll
loope
adc
adc
loopne
aas
or
cmpsb
je
inc
mov
xor
test
sub
pop
xchg
and
addl
cs
clc
ret
lea
xlat
sbb
ret
dec
jecxz
in
iret
int3
sbb
xchg
mov
push
jg
push
gs
std
mov
jl
dec
mov
cmp
add
mov
imul
imul
or
and
sbbl
ds
add
adc
and
sbb
fiaddl
adc
cs
jg
sahf
stos
les
fidivs
fdivrl
xor
add
mov
in
sahf
sbb
arpl
popf
mov
xor
int3
shlb
and
mov
scas
xor
push
into
xchg
roll
sub
test
push
call
sbb
sub
loope
out
adc
gs
or
pushf
push
or
push
jl
pop
sbb
insl
jne
jnp
add
mov
repnz
cmpsl
fsubs
rcr
cmp
pop
loop
cmp
xchg
sti
inc
fidivrl
xchg
xchg
xchg
mov
mov
xchg
pop
pop
loop
pop
int
and
jmp
xchg
std
ja
out
xchg
sub
cmpsl
adc
add
push
jg
cmp
pop
dec
adc
xor
fdivr
inc
stos
lods
sbb
cmp
adc
mov
out
pop
ss
test
je
jmp
lea
out
cwtl
stos
xor
repnz
nop
adc
clc
cmpsb
fistps
jne
jo
and
icebp
mov
daa
insb
fldenv
outsl
sub
mov
ljmp
sub
xor
outsb
xor
inc
test
aad
adc
cmp
cmp
or
xchg
in
ss
stos
lock
mov
es
jb
es
int3
and
dec
cs
push
lds
cmc
jnp
subl
mov
jns
ret
mov
dec
loop
iret
movsl
push
jecxz
xor
jae
lock
shr
add
sbb
ds
xchg
dec
mov
cmp
out
loopne
mov
pop
lret
mov
iret
hlt
pushf
pop
andl
push
adc
cmp
movsb
cwtl
jne
stc
daa
jl
loope
loope
out
addl
lods
cmpsb
xor
stos
adc
mov
mov
lds
jecxz
pop
add
test
dec
jb
cmp
in
in
sub
xchg
jle
jecxz
stc
ret
mov
fstl
sbb
sub
das
mov
popf
mov
cmp
call
inc
scas
std
andb
daa
cmp
hlt
adc
clc
xor
and
push
fmuls
mov
rolb
test
mov
mov
outsl
in
iret
mov
test
fdivs
push
lahf
cmp
test
lahf
add
and
je
dec
push
pop
repz
lret
stos
inc
add
imul
popa
adc
aas
or
adc
add
aam
jmp
mov
jo
push
xor
mov
sti
sbb
xor
bound
addb
jno
cmp
dec
and
sbb
dec
dec
mov
scas
add
xlat
sub
or
inc
in
push
std
stos
scas
mov
mov
mov
add
in
jle
jo
ds
push
adc
mov
adc
sbb
mov
repz
mov
movsl
cmp
enter
bound
sub
xor
cmp
xchg
dec
and
in
ret
jge
leave
mov
aaa
xor
inc
lret
hlt
call
sbb
mov
xor
mov
dec
xchg
sbb
lds
sub
mov
inc
xor
mov
mov
xchg
push
add
push
adc
jp
mov
pop
jecxz
das
dec
dec
in
xchg
cmpsb
mulb
cmp
pop
call
getsec
pop
xchg
insb
mov
popa
push
mov
adc
sbb
ja
clc
mov
daa
iret
cmp
sub
xchg
sbb
int3
dec
xchg
jne
test
fs
pop
jecxz
test
fstpl
cld
pop
cs
in
jo
lahf
sbb
sbb
xchg
scas
cld
jb
pusha
jecxz
inc
add
mov
xchg
or
arpl
mov
rcrb
or
jmp
cmp
push
add
and
testb
repnz
sbb
pop
das
or
cmpsl
add
jns
cmp
sub
dec
xchg
add
cmp
adc
ds
sbb
lret
repnz
mov
or
or
adc
xchg
push
cmp
fs
stc
call
adc
xchg
repnz
test
aaa
inc
lret
jbe
stos
daa
in
push
adc
jnp
mov
xorl
sbb
leave
je
lea
push
call
or
fcoml
mov
icebp
addr16
outsl
pop
mov
loop
bound
hlt
mov
les
rcl
dec
and
push
and
mov
jmp
jno
js
aad
subb
mov
push
test
nop
cltd
in
imul
fimull
call
xchg
movsl
lock
into
dec
or
inc
pop
push
mov
cltd
repz
rolb
jmp
mov
pop
inc
adc
sbb
cmpsb
mov
mov
fs
sbb
mov
sahf
aam
int3
push
mov
repz
adc
adc
frstor
test
mov
lods
outsb
push
jg
inc
mov
xchg
out
mov
test
jl
imul
cmp
sub
fstps
leave
cs
ds
outsb
mov
sahf
dec
scas
jns
imul
cmp
sub
fstps
leave
cs
ds
outsb
mov
sahf
inc
scas
popa
mov
out
cmp
push
int
stc
loopne,pt
popf
pop
mov
jle
mov
mov
or
mov
push
arpl
icebp
xchg
roll
in
xor
faddl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
xorl
add
mov
ret
dec
xor
and
adc
add
push
out
push
pusha
inc
in
nop
mov
shl
jecxz
shl
ret
add
adc
adc
add
jae
arpl
jo
cmp
push
jecxz
shl
ret
fs
xor
dec
ja
add
and
and
out
mov
cld
mov
xor
add
or
movl
mov
call
insb
in
and
cmc
xor
sbb
aad
xor
fsubl
push
or
pusha
add
mov
cmpsb
out
or
xor
xchg
ret
das
push
into
adc
xor
jb
mov
pop
cmpsb
clc
and
pop
cmpl
shl
pop
pop
lock
call
into
push
mov
lods
jo
jg
popf
pop
adcb
jl
repnz
imulb
jnp
and
xchg
je
in
jne
add
lods
jl
jg
or
jp
xchg
outsb
pop
cmpsb
lds
xor
and
add
mov
mov
and
test
loopne
push
ret
xor
add
jae
arpl
jo
jmp
cli
enter
mov
xchg
add
push
inc
jnp
inc
xor
adc
push
adc
mov
test
movsb
movsl
ret
addr16
inc
push
and
insb
cmp
aas
or
xor
in
cli
cld
lock
out
repz
loopne
lock
add
adc
and
xor
inc
jae
arpl
jo
xorb
add
shl
loopne
lock
add
adc
and
xor
inc
jae
arpl
jo
xorb
les
aas
scas
adc
daa
push
call
mov
mov
cmpsb
sub
mov
jae
pushf
loopne
sbb
lds
outsb
pop
xchg
call
scas
lds
mov
inc
test
pop
jg
adc
ja
icebp
lods
cmp
mov
sbb
ror
jg
fwait
cli
dec
pop
mov
idivl
push
repnz
pusha
adc
pop
cmpsl
lea
cmp
or
mov
and
jns
sub
pop
das
mov
leave
ror
iret
bound
pop
fstpt
mov
push
movsl
push
mov
sahf
push
xchg
push
dec
addr16
cs
mov
fldcw
icebp
ror
xor
push
cmpsl
push
dec
clc
pop
dec
rol
adc
ret
mov
mov
sub
fwait
and
mov
mov
mov
sbb
test
negb
stos
xor
sarl
push
sahf
in
xor
pop
popf
stc
jnp
pop
mull
mov
outsb
iret
shlb
repz
xlat
cmp
andb
repnz
sub
stc
shrl
cmp
jo
and
fimuls
outsl
sbb
divb
enter
in
nop
jp
sarb
scas
sbb
push
cld
nop
subb
shl
movsl
add
dec
adcb
movsl
pop
in
pop
add
scas
push
sbb
ret
inc
adc
idiv
test
test
aaa
popf
and
int3
scas
pushl
das
test
xor
xchg
icebp
mov
ja
inc
std
sub
icebp
mov
pop
loope
out
inc
pop
arpl
jo
les
inc
inc
repnz
lcall
sarl
pop
sub
adc
xor
es
mov
xlat
push
dec
leave
std
jb
aad
not
mov
fmul
xchg
les
jg
inc
jmp
push
xlat
enter
pop
xor
shl
sub
ss
or
out
xchg
lock
adc
pop
and
jo
jp
dec
iret
or
lahf
aaa
push
adc
aad
cli
outsb
jno
stos
ja
xchg
lahf
push
movsl
sub
hlt
mov
repz
ret
movsl
enter
sbb
out
pop
inc
sbb
in
je
popf
sbb
mov
xor
js
inc
aad
mov
adc
xchg
adc
in
xor
mov
dec
xor
mov
jle
sahf
je
fldt
pushf
xor
je
push
das
test
and
test
pop
mov
out
nop
mov
stos
xor
ljmp
fbld
sub
cmp
das
mov
lahf
xlat
lahf
mov
mov
cmc
pop
push
out
xchg
push
pop
mov
mov
movsb
jle
pop
pop
jmp
stos
push
mov
nop
or
or
movsb
repnz
rcrb
and
fs
int3
rorl
adc
test
mov
out
xchg
lret
jmp
test
je
dec
sbb
dec
lds
cmp
fnstsw
mov
lret
ds
and
scas
mov
dec
xor
pop
jo
popf
mov
jae
je
cmpsl
out
es
test
cmp
cmp
fstpt
in
xchg
lods
fsts
add
push
je
mov
mov
inc
iret
push
loope
adc
in
mov
hlt
mov
mov
add
push
pmaxub
cs
inc
mov
xor
xor
cmp
push
jnp
mov
stos
ret
cmp
test
xor
cltd
add
fiaddl
cmp
popa
sbb
aas
adc
shlb
pop
xchg
jne
sbb
leave
cmpsb
subb
or
lods
lds
sub
and
jmp
out
je
dec
int
ss
mov
add
imul
ljmp
test
add
inc
jne
mov
sbb
cmpsb
and
roll
mov
adc
sub
mov
aad
or
cmpl
jg
daa
xchg
add
dec
adc
jg
fsubp
lcall
test
push
sub
sbb
insb
sti
mov
add
int
repnz
xor
jb
sbbl
cmpsb
mov
sbb
push
dec
mov
test
add
mov
fdivs
push
sub
je
or
jp
out
and
push
mov
lods
ja
leave
fmul
dec
pusha
addr16
cli
or
lcall
loop
shll
in
or
test
xor
mov
push
pop
leave
fldt
lock
mov
xorl
js
sarb
xlat
xchg
xchg
and
mov
cld
aam
mov
and
or
test
aad
jnp
fwait
scas
sbb
push
and
push
imul
pop
mov
mov
stc
in
cmpb
les
mov
hlt
icebp
in
xlat
mov
cmp
shll
sahf
inc
mov
pop
test
sbb
and
gs
push
div
mov
fcmovbe
out
sti
pop
addr16
pop
mov
das
clc
test
lahf
scas
enter
push
mov
mov
sbb
mov
inc
jecxz
dec
mov
xchg
test
sbb
sbb
ss
test
cmp
repz
jl
test
rol
xchg
pop
mov
js
scas
test
ljmp
inc
pop
jl
pop
repnz
jl
ja
push
xor
sahf
dec
stos
pop
xchg
pop
daa
adc
cmp
andl
lret
jae
mov
xlat
fidivs
fmul
out
repnz
pop
push
jp
sub
xchg
scas
leave
pop
mov
cltd
std
fwait
adc
mov
add
test
leave
dec
inc
jne
incl
dec
ret
in
subl
add
popl
shl
inc
xor
fwait
add
xor
inc
pop
cs
lds
jnp
es
mov
jno
stos
push
xchg
mov
push
insl
aaa
jmp
mov
test
jno
xor
xchg
nop
jo
in
dec
xor
push
jecxz
or
jmp
adc
push
cmc
out
pop
inc
sbb
xor
stos
mov
push
xorl
adc
jbe
add
clc
mov
cmp
out
test
pop
mov
pop
mov
test
sub
or
pop
mov
in
mov
repz
in
insl
fcomp
or
jbe
sahf
aad
sbb
fistpll
out
test
xor
pushf
xor
inc
jne
sbb
es
cwtl
addr16
sub
xlat
adc
mov
dec
rol
adc
incl
enter
jl
js
outsl
inc
push
inc
pop
push
es
push
adc
jl
mull
jno
dec
jl
adc
xchg
addr16
pop
std
outsl
sub
fidivrs
add
inc
pop
xchg
mov
fs
pop
inc
fcompl
fimull
js
xor
xor
pshufw
sbb
dec
loope
fcomi
dec
mov
aaa
mov
movsl
movsb
dec
sbb
mov
mov
dec
shrl
fidivrl
cs
stos
jmp
cmp
ficomps
sbb
clc
inc
mov
mov
push
insb
loop
or
in
mov
fdiv
xor
pop
xor
xor
adc
dec
bnd
push
cmc
xchg
arpl
push
sub
push
jns
cmp
and
scas
addr16
xor
and
adc
test
ret
dec
lock
pop
test
sbb
cs
scas
cli
ja
scas
out
adc
das
icebp
add
sub
arpl
in
jo
mov
cmpsb
mov
lcall
push
cmp
out
push
push
addr16
icebp
pushf
pop
jge
out
cmpsl
lods
sub
pop
cmc
cwtl
cmp
lods
hlt
or
jp
scas
mov
dec
fstpl
and
into
vpcmpgtd
cmc
xor
sti
pop
xchg
jb
xchg
fdivs
in
pop
pop
xchg
rorb
push
add
add
addb
outsb
xchg
mov
addr16
enter
aam
pop
pop
add
xor
and
testl
pushl
mov
les
push
add
or
gs
insb
jecxz
rcll
sub
dec
clc
mov
mov
fs
cmp
call
call
and
sbbb
inc
xchg
ss
dec
cmp
cmp
sahf
or
jbe
inc
iret
mov
mov
fdiv
mov
push
pop
mov
jo
mov
or
pop
ror
pop
sub
nop
or
and
mov
jb
dec
sbb
xorb
sbb
jbe
push
pushf
aam
mov
fmull
adc
dec
jae
and
or
inc
in
aas
mov
and
or
sub
jns
mov
clc
dec
orb
push
xchg
addr16
int
dec
xchg
xchg
mov
popa
mov
imul
insl
lcall
inc
add
xchg
imul
fists
scas
mov
rorb
add
jmp
pop
call
mov
outsl
sub
xchg
dec
xor
mov
or
test
pop
or
sbb
push
data16
mov
xchg
sub
lods
mov
cmp
or
movsl
lcall
inc
rcr
xchg
lret
pop
push
nop
leave
dec
pop
jo
insl
dec
push
in
imul
rorb
aas
inc
mov
icebp
push
lods
and
adc
dec
js
in
xor
dec
and
pop
movsb
aam
inc
push
rorl
and
pop
fildl
stos
jnp
pop
aad
sub
adc
lods
xchg
mov
dec
sub
or
inc
int3
pop
or
das
ret
cmpsb
cli
scas
lret
pop
insb
sbbb
xor
jne
loop
movsb
push
andl
test
cmp
addr16
mov
inc
dec
pushf
incb
fwait
mov
and
scas
add
fucomi
adc
xorl
idivl
inc
and
mov
adc
ret
movsb
test
jmp
pusha
xchg
movl
and
jns
add
cmp
xchg
add
imul
sbb
icebp
xchg
mov
xor
xchg
out
lahf
mov
pop
rcrb
mov
dec
testl
cltd
mov
pop
sbb
mov
jbe
sub
rcr
rcl
pop
movsl
mov
lcall
pop
das
les
push
inc
pop
ret
mov
jo
loopne
lods
jp
add
adc
cmp
in
push
jb
pop
rol
loop
lods
and
inc
lcall
scas
pop
mov
adc
pop
add
movsl
xchg
shll
movsl
sub
fadds
lea
push
mov
in
inc
inc
aam
outsb
and
imul
cmp
and
xchg
lea
mov
ja
call
shl
xorl
movsb
mov
adc
inc
pop
nop
pop
or
xchg
popa
xor
fldt
mov
icebp
pop
jge
mov
lret
ja
push
cmpsl
ret
sub
pop
lahf
mov
sub
push
out
loope
jg
into
jne
mov
roll
dec
mov
mov
das
addr16
jne
inc
out
out
pop
stos
push
dec
mov
and
jns
pop
out
jge
cli
xlat
ret
mov
leave
push
stc
inc
std
outsb
mov
mov
fcmove
jo
sbb
mov
jnp
cmp
jae
pop
mov
shll
push
hlt
imul
add
icebp
test
int3
mov
stos
arpl
mov
mov
jnp
inc
mov
push
push
loop
ljmp
sar
sbb
loop
in
dec
push
aad
or
incl
dec
in
mov
pop
lahf
pop
in
leave
iretw
xor
jbe
inc
jo
jp
mov
aam
mov
mov
mov
stc
cmp
out
scas
adc
mov
ljmp
ret
orb
std
adc
insb
je
int3
lods
rolb
add
or
fsubrl
clc
mov
cli
fidivrl
jmp
popa
inc
mov
out
jae
add
stc
repnz
inc
subl
lea
jne
jle
jmp
enter
xchg
cld
cli
out
and
sbb
jae
sub
mov
ficoms
or
inc
jge
xchg
cmp
mov
pop
inc
or
fimuls
in
in
les
incl
ljmp
aas
lods
movsl
call
xlat
mov
pop
jne
es
adc
sahf
or
arpl
repnz
pop
xchg
stos
gs
out
lcall
shl
leave
hlt
jmp
mov
mov
cmp
arpl
or
outsb
fildll
decl
xchg
pusha
pop
fwait
dec
cs
in
js
and
adc
xchg
loop
mov
mov
adc
ds
xorb
or
into
xchg
icebp
push
push
stos
andw
movsb
jl
test
push
movd
jmp
nop
das
xor
mov
push
adc
or
cltd
inc
mov
iret
cwtl
cmc
cltd
mov
mov
and
fsubr
and
adc
pop
ds
mov
inc
das
mov
and
xor
aas
leave
cwtl
stc
cmp
pop
add
adc
jle
cltd
add
xor
inc
sub
ds
and
mul
dec
pop
aas
jmp
icebp
push
mov
sub
xor
arpl
fadds
sub
fdivrl
lret
loope
enter
out
pop
and
xchg
or
inc
push
in
xor
mov
sbb
sbb
rorb
xchg
outsl
pop
inc
cld
psrad
std
push
xor
repnz
jge
mov
js
stc
dec
fcoml
mov
xorb
jo
imul
fwait
roll
shll
dec
aaa
inc
adc
imul
lret
mov
cld
inc
lds
stc
dec
push
push
rcrb
cwtl
cmp
stc
je
cmpsb
and
jmp
xor
outsl
in
push
ret
push
xchg
jo
xchg
lret
sbb
jge
ds
pop
lods
mov
mov
jl
test
aas
push
in
push
mov
and
mov
push
aas
adc
lea
push
imul
inc
dec
clc
arpl
cmp
or
rol
jb
cwtl
stos
movsl
or
or
cs
bound
jge
and
rep
lcall
mov
inc
stos
lret
ret
jle
xchg
fsubrs
sarl
pop
mov
xor
pushf
movsb
in
jmp
jo
addr16
sub
dec
lods
js
frstpm(287
push
push
push
nop
xchg
shrl
aas
fisubrl
inc
aam
pop
sbb
rep
xor
push
std
or
fcmovb
in
addr16
jno
mov
mov
fcoml
lahf
pop
xor
stos
mov
pop
hlt
js
fnsave
dec
lea
fucomp
sub
mov
sub
enter
leave
aas
mov
mov
lahf
shrb
jmp
push
or
jecxz
inc
int
icebp
addr16
mov
das
jbe
mov
add
bound
out
adc
sbb
jg
mov
aaa
push
icebp
mov
push
leave
iret
cmp
sbb
pop
insl
sbb
mov
rcrl
push
push
call
inc
bound
imul
repz
mov
addl
add
idivb
imul
daa
pop
inc
mov
mov
ljmp
popf
icebp
ret
and
sub
pusha
cld
inc
mov
push
ffreep
jns
loope
movb
mov
arpl
mov
adc
sub
sti
jp
adc
loop
pop
test
push
std
sbb
pop
push
dec
add
scas
lret
imul
out
mov
push
movl
stc
jno
sbb
lods
or
div
fildll
ret
fisttps
enter
incb
aas
xchg
mov
mov
lcall
je
mov
rorl
or
push
mov
jb
jb
dec
xchg
mov
inc
ss
xor
inc
xor
cmp
mov
and
std
xchg
add
out
aad
addr16
cmp
inc
jae
push
leave
repz
xor
scas
cmp
aas
addr16
inc
lahf
xor
sub
jo
aam
pop
ljmp
inc
lret
and
ljmp
sub
adc
or
or
imul
or
in
or
lret
and
insb
adc
std
out
popa
pop
mov
inc
pop
dec
mov
push
cltd
sbb
add
insl
mov
aas
imul
nop
out
pop
or
in
cltd
jmp
xchg
mov
xor
xor
pop
rcll
push
aad
xlat
js
xchg
cmp
sbb
gs
fwait
sbb
xchg
insl
inc
jecxz
lahf
scas
jnp
adc
mov
repz
in
out
add
idivl
xchg
addr16
aam
testb
pop
roll
jle
shlb
das
loope
xor
test
xor
inc
iret
pop
and
push
adc
or
sbb
inc
adc
mov
sbb
mov
xchg
inc
xchg
scas
mov
add
out
sub
sbb
pop
xchg
lock
push
inc
inc
in
or
rolb
push
addr16
gs
sub
lcall
ds
dec
mov
add
cmp
pusha
and
pminub
ret
xchg
incb
call
js
push
stos
inc
xchg
scas
jo
mov
lahf
xchg
aas
aas
ficoml
insl
ss
adc
pop
mov
inc
sbb
adc
jae
pop
loopne
aad
clc
shlb
or
or
bound
and
aad
xor
iret
jae
out
sub
mov
add
push
sub
mov
dec
pusha
pop
inc
addl
das
pop
sub
fidivrs
xchg
adc
mov
jecxz
mov
stos
es
pop
jae
sbb
arpl
iret
clc
push
push
ss
mov
aas
mov
cmp
mov
dec
outsl
jecxz
fistpl
int
mov
std
mov
dec
inc
ja
xor
pop
jmp
pop
jne
fs
push
iret
xor
jge
out
xor
cmp
iret
xor
xorb
sar
shl
mov
sub
sub
jg
inc
andl
fnsave
jle
push
inc
loopne
movsb
pop
popa
push
cld
dec
ds
jno
dec
mov
jecxz
or
adc
jmp
lds
xchg
adc
test
ja
into
pop
pop
mov
cmp
lods
shll
adc
insl
mov
nop
fistl
movsl
cwtl
repz
and
jmp
or
and
ds
das
scas
fisubl
fcompl
fisubs
addb
or
insb
enter
aam
repnz
lods
cmp
mov
cmp
mov
sbb
and
push
cmp
jle
stos
pusha
push
jmp
rcll
inc
mov
and
sbb
push
stos
stos
cs
icebp
cwtl
mov
popa
pop
sti
pop
jns
mov
sbb
in
pop
mov
rcrb
jg
sub
pop
xchg
lret
shrl
pop
cmc
and
mov
popa
cmp
int
popf
dec
movsl
lahf
jnp
mov
cs
test
ret
mov
push
and
cmc
mov
xchg
mov
cmpl
pop
cmp
loopne
imul
roll
inc
pop
push
pop
dec
repnz
ja
adc
inc
and
insl
mov
pop
mov
std
mov
stos
imul
pop
dec
dec
ljmp
jnp
cli
andl
hlt
jne
imul
call
test
cmp
mov
aas
adc
loop
aad
sub
jle
aam
in
nop
cmp
pop
and
mov
jp
adc
stos
sub
test
ficoml
mov
or
xchg
mov
test
aad
mov
scas
leave
loop
fbstp
test
mov
pushf
xor
pop
ja
cmc
add
xchg
mov
and
mov
push
mov
js
out
repnz
mov
dec
sbb
or
cmpsb
xchg
and
and
hlt
xor
ss
es
jge
mov
fsubs
jo
dec
enter
out
adc
sbb
sbb
sbb
mov
mov
neg
mov
loop
mov
lea
xchg
scas
push
arpl
jp
push
inc
mov
mov
push
jmp
push
icebp
and
xlat
add
cmpsb
popf
add
and
andb
push
movsl
xchg
sub
icebp
push
daa
aad
mov
add
xchg
cmp
js
sub
std
jmp
sahf
jmp
aam
xor
popa
jmp
mov
fstps
rcrl
scas
cwtl
inc
ret
enter
dec
push
cmp
cmp
dec
imul
xchg
push
jle
je
cmp
test
mov
je
jmp
xchg
lret
jns
xchg
js
push
lahf
jbe
adcb
in
inc
and
ljmp
xchg
lret
cmpsl
aas
cmp
shl
jecxz
shl
ret
add
adc
and
xor
inc
jae
arpl
jo
xorb
add
shl
loopne
lock
add
adc
and
xor
inc
jae
arpl
jo
xorb
adcl
arpl
shll
ret
add
xor
inc
jae
arpl
cwtl
inc
xchg
mov
mov
shl
jecxz
shll
add
out
mov
sti
fcomps
lea
mov
sbb
adc
filds
sbb
lret
pop
out
insl
jge
lea
popf
das
lods
aas
mov
outsl
in
jg
fisttps
mov
pop
out
insl
jge
lea
mov
inc
in
xchg
or
ficomps
orl
add
imul
mov
imul
mov
in
inc
adc
lcall
fimuls
pop
icebp
mov
pop
int
pop
inc
in
testl
cmp
dec
dec
xchg
outsb
insl
jb
pop
lea
nop
das
mov
pop
sbb
inc
test
pop
pusha
nop
push
je
insl
xor
pop
sbb
mov
mov
dec
outsb
mov
add
test
frstor
mov
loop
sar
pushl
mov
fcoml
aaa
fisttpll
iret
push
push
sarb
mov
or
adc
mov
cmpsl
adc
ja
addr16
scas
aad
sub
fisttps
stos
insl
out
push
das
lods
push
mov
outsl
in
std
jge
or
cmp
out
insl
fwait
adc
mov
imul
mov
stos
push
test
decl
dec
cmpsb
push
mov
fwait
adc
xor
call
hlt
mov
add
fs
pop
mov
cmp
aad
fistpll
or
pop
jg
or
mov
pop
out
insl
jge
lea
popf
das
lods
aas
mov
outsl
in
jg
or
mov
pop
out
insl
jge
fcomi
xchg
jg
mov
loop
and
mov
pushf
dec
cwtl
call
or
fmuls
mov
adc
js
and
mov
call
movsl
lahf
pop
xchg
stos
fcoms
fs
ja
stos
ljmp
pop
in
or
sub
movsb
xchg
mov
lcall
lods
or
add
aad
mov
cs
movsl
gs
sub
pop
inc
int
mov
or
call
out
fwait
insl
mov
aaa
add
or
xchg
sub
push
sbb
xor
pop
testb
into
mov
jbe
repnz
jnp
inc
jb
add
out
mov
sbb
movsl
xchg
data16
fmuls
and
xchg
dec
ja
inc
and
jmp
xchg
xor
enter
mov
pop
fs
js
add
fnsave
xor
sbb
xchg
inc
or
push
inc
mov
pusha
sub
mov
fdivs
cmp
int
in
cmpsl
scas
into
out
jmp
push
dec
mov
pushf
insb
xchg
mov
mov
jbe
and
sbb
xchg
fmull
stos
rcrb
aaa
push
lea
cmp
lcall
pop
mov
out
mov
rorb
mov
int
xchg
into
js
in
sbb
mov
js
mov
sub
mov
xor
cmp
jae
jae
jns
lret
push
test
lods
mov
push
fwait
repnz
xor
jae
movsl
adc
out
dec
cmp
movsl
push
fdecstp
in
dec
push
jbe
lock
int
dec
push
cmc
sub
jae
push
stc
or
in
cmp
lods
sti
push
or
in
mov
repz
fdivrs
inc
outsl
lods
add
jge
xor
lret
sti
sbb
lock
fnsave
pushf
dec
xor
shll
out
xchg
mov
std
jle
adcb
inc
out
lods
cmp
fisttpll
call
add
push
dec
push
push
shl
inc
mov
or
shl
cwtl
popa
mov
cli
cmp
ficoms
test
push
dec
add
outsb
test
xor
jne
fnstsw
sbb
fsts
pusha
xchg
test
adc
mov
fs
cli
sub
test
ret
inc
and
std
pop
xchg
mov
push
test
push
dec
fpatan
push
shlb
push
addr16
jmp
hlt
sub
mov
mov
sub
ret
mov
jbe
xchg
arpl
in
mov
pop
mov
or
or
je
dec
lahf
loop
fcmovbe
insl
push
mov
jne
sub
mov
push
cmp
jl
mov
sahf
pop
dec
push
add
sahf
xor
les
and
sub
outsb
in
add
sbb
inc
sbb
pop
push
xor
xorps
mov
jmp
push
ja
lock
mov
fidivl
xor
loop
jmp
sub
aam
xor
cmp
sbb
xor
push
negb
mov
pop
pop
mov
push
stc
jl
cmp
sbb
and
ljmp
mov
sbb
outsl
dec
adc
aas
sub
sbb
mov
aas
fs
fmuls
fidivrs
mov
in
mov
popf
out
jge
adc
sbb
pop
outsb
adc
lods
xchg
cs
cmpsl
ficoms
adc
aam
nop
scas
ljmp
push
rclb
je
inc
mov
int3
lret
pop
pop
iret
imul
out
pop
mov
in
outsb
cmc
sub
sbb
add
fisubs
mov
popf
das
sti
adc
imul
pop
dec
mov
mov
in
fists
push
mov
add
pop
xchg
data16
xchg
mov
stos
rorl
es
mov
int3
xor
rcrb
scas
ljmp
xchg
test
leave
jb
inc
push
fbld
jp
jl
lods
add
mov
stos
mov
sub
out
jns
icebp
and
in
call
lcall
out
pop
mov
mov
mov
lahf
fimull
add
sbb
jbe
mov
sub
sub
jp,pn
divl
sub
rcll
rorb
mov
or
cmpl
pop
or
or
shl
xchg
mov
cmpl
mov
fnsave
inc
cmp
sub
push
test
insb
sub
cmpsl
add
cltd
cs
mov
scas
call
adc
mov
imul
das
subb
mov
jnp
push
or
sbbb
ds
ss
fisttpll
test
xchg
pop
incb
push
sub
clc
sub
pop
lock
sbb
add
add
add
out
test
mov
jnp
pop
sub
adc
xor
or
xchg
inc
stos
cmp
jge
fcmovne
jno
push
or
mov
adc
cmpsb
mov
mov
repnz
xchg
jno
sbb
popaw
cmp
fadds
pop
aaa
pop
push
xor
pop
nop
inc
adc
je
jl
orl
mov
fcoms
mov
add
cld
sub
in
sub
fadd
and
les
push
cs
jne
sbb
fadd
fs
push
sbb
cltd
mov
push
ret
aas
shlb
loopne
lock
push
in
test
cmp
cmc
arpl
add
jp
inc
je
jae
xor
scas
movsl
rcrl
xor
push
xor
daa
push
repz
loop
movsb
mov
pop
sbb
inc
sbb
into
sub
pop
adc
daa
mov
pop
or
stc
pop
sub
fsubs
out
loope
sub
dec
xor
cmc
filds
cmc
push
jb
xor
push
fisttpl
xchg
jb
xor
sub
shll
jle
rolb
pop
mov
sbb
shl
xchg
pusha
cmp
loopne
cmp
in
push
fisttpl
or
lock
in
test
bound
push
sbbb
popa
out
mov
leave
out
jg
mov
jg
cwtl
negl
jae
and
pushf
out
pop
iret
sbb
push
dec
loope
cmp
lock
movsb
or
add
sbb
adc
sbb
jnp
test
push
fiadds
mov
cwtl
movsb
std
add
jb
cmp
xchg
and
cmp
ljmp
fcompl
push
xorb
roll
inc
ja
xor
dec
lcall
shl
mov
inc
and
pop
and
xor
enter
data16
inc
pusha
inc
mov
or
adc
jg
leave
push
test
ja
inc
ret
andl
add
mov
mov
in
cmc
mov
xlat
pop
mov
gs
in
ficoms
xchg
fdiv
and
and
sub
xchg
fcompl
jno
enter
lret
and
push
mov
pop
push
add
in
in
loope
add
cmp
cmp
rcrl
aaa
mov
movl
mov
xor
adc
test
dec
and
rorl
push
jge
push
test
rorb
mov
inc
mov
and
jecxz
mov
repnz
adc
in
cs
dec
insl
inc
xchg
push
push
adc
or
fstpt
out
icebp
pop
sub
fsubl
fadd
subb
lret
push
ds
flds
sbb
rcll
or
bound
push
xlat
cld
fs
rclb
jns
or
inc
or
add
and
mov
pop
loopne
push
iret
mov
fmuls
cmpsb
dec
pusha
jp
mov
xchg
mov
adc
lcall
leave
inc
into
jecxz
mov
mov
adc
orb
mov
clc
lea
mov
cli
mov
jb
add
jmp
or
fiadds
mov
insl
sub
xchg
ficomps
mov
mov
aaa
push
sub
jbe
cmpsb
push
mov
fwait
lock
xchg
push
push
fisubrl
aas
jno
inc
add
and
enter
lea
xchg
jne
xchg
push
jl
add
jo
hlt
mov
popa
clc
insl
stc
packssdw
pop
add
pop
ret
mov
cmp
xor
xor
inc
imul
mov
ds
mov
xor
sbb
dec
repz
fnstcw
das
jmp
xor
add
in
lret
inc
add
add
js
push
sbb
pop
iret
mov
and
icebp
and
and
push
jg
ret
pop
add
cmp
loope
add
bound
sub
push
stos
adc
fildll
add
xchg
xchg
inc
orl
aad
inc
inc
pop
and
sub
sar
push
aam
adc
cmpsl
push
jle
pop
jp
cmpb
call
divw
out
mov
insb
mov
cld
imul
push
ret
mov
cmp
test
jo
cs
or
pop
or
mov
aam
sub
mov
mov
mov
sbb
outsl
out
or
addr16
cmp
pop
loope
mov
xor
or
adc
lock
pushf
mov
sbb
ret
lcall
pop
inc
lahf
add
lahf
loope
mov
xchg
mov
sub
pop
ja
fdivr
pop
pop
inc
cld
push
sti
mov
inc
popa
fs
mov
pop
test
das
out
lret
jno
dec
hlt
icebp
cwtl
enter
mov
and
pushf
push
cmpsl
into
bound
push
lods
adc
sbb
push
cmp
or
dec
test
shll
pop
aad
stos
sub
mov
adcl
call
mov
mov
push
xlat
or
jmp
xchg
sub
adc
sub
aad
loope
dec
enter
bound
addb
jmp
shl
addr16
pop
cmpsl
jbe
ljmp
fs
idivb
add
test
pushf
mov
push
fimull
movsb
gs
or
push
cwtl
or
pop
xchg
lcall
loopne
divl
js
lea
mov
push
inc
push
dec
outsl
push
xchg
xorb
rcrb
outsl
fisttps
jge
cmp
int3
inc
into
int3
jne
scas
out
scas
adc
sbb
pop
arpl
out
enter
cmp
adc
enter
xor
std
adcb
or
test
ja
sbb
or
enter
sar
outsl
movsl
jg
or
cmp
cmpsb
mov
cmc
push
mov
cmpsb
dec
test
into
xlat
inc
fdivrl
in
add
iret
mov
icebp
pushf
daa
sub
push
cmp
or
sbbl
push
push
imul
sbb
adc
push
dec
leave
andl
cmp
js
aam
sbb
dec
or
sub
out
adc
xchg
lods
insl
lret
pop
cld
cmp
jl
xchg
orl
test
inc
sub
fstl
sahf
ja
inc
shr
mov
sti
xlat
jno
and
xor
lahf
in
jb
fistpl
aas
jb
sbb
addr16
leave
jo
xchg
mov
in
xor
sbb
xlat
fistps
je
mov
jl
adc
xorb
test
lea
scas
setp
jnp
xchg
je
jno
outsb
xchg
outsl
ja
xchg
mov
das
sti
mov
test
dec
mov
shl
add
into
xchg
mov
dec
jae
mov
loopne
cltd
mov
xchg
test
jo
xor
mov
push
and
in
adc
aam
cmp
pusha
xchg
mov
je
and
imul
pusha
dec
mov
cmp
add
xor
js
ljmp
daa
arpl
dec
mov
sub
push
hlt
jp
inc
or
add
add
sbb
fdivrs
repnz
adc
mov
mov
pop
fcmovnu
cli
push
mov
pop
xor
mov
insl
das
out
jge
mulb
mov
test
es
shll
insl
cmpl
mov
decl
imul
test
movsl
pop
jne
jmp
rcr
in
imul
fwait
mov
ja
into
outsl
addb
xor
cmc
cli
pop
data16
hlt
and
pop
lret
scas
xchg
or
rcrb
lahf
shl
fdivrl
imul
mov
pop
push
lcall
pop
or
mov
mov
sub
mov
cmpsl
orl
or
repnz
loopne
das
pop
std
pop
sbb
cmc
mov
adc
out
mov
add
hlt
rcr
sahf
ds
aas
sub
mov
xor
inc
pop
js
adc
push
mov
lods
jl
popa
mov
jge
or
and
jl
and
xlat
xchg
sarl
lea
dec
outsb
add
pop
xchg
add
inc
icebp
xchg
in
inc
add
push
mov
sub
push
pushf
cld
stos
out
xchg
pusha
mov
pop
clc
xor
sbb
test
cmpsb
and
xor
nop
push
pop
cwtl
frstor
mov
outsb
inc
add
insl
test
fwait
das
jecxz
and
fstps
test
stc
adc
sbb
shl
push
fsts
shlb
lods
or
push
mov
dec
imul
pop
mov
pop
fldl
insl
push
inc
pusha
icebp
test
pop
std
rol
pushf
fstpl
mov
test
mov
adc
mov
inc
xor
pop
mov
les
jmp
pushf
ljmp
jno
lret
outsb
or
loopne
cli
inc
inc
fisubrl
pop
jecxz
fildll
es
out
rcrl
mov
xchg
sbb
lret
scas
inc
dec
dec
sub
pop
adc
imul
or
or
ja
pop
mov
mov
arpl
test
js
call
fwait
cmc
mov
cld
cmc
cli
jge
mov
sbb
jl
xchg
adc
sbb
enter
push
mov
xor
data16
filds
loope
movsl
push
mov
push
push
ja
adc
repz
xlat
clc
xchg
inc
sub
mov
add
lods
and
or
and
in
cli
add
in
iret
inc
mov
pop
xchg
push
jae
dec
pop
mov
loope
push
movsb
in
add
test
test
mov
inc
or
jb
xchg
shll
out
out
sbb
popl
push
sbb
stc
incb
out
pop
inc
das
push
fimull
aad
mov
dec
jns,pn
and
insl
xchg
shlb
jbe
mov
or
jp
in
decl
fistpll
jbe
dec
pop
lds
fwait
std
test
les
push
or
cmc
std
fcmovnu
mov
push
mov
outsl
shll
lock
jle
inc
cmc
lcall
adc
loop
cmc
fildll
mov
xchg
adc
icebp
xchg
add
cmc
outsb
xor
dec
inc
xor
outsb
ja
in
and
mov
mov
and
jne
shlb
insl
add
inc
pop
icebp
imul
lret
lret
cmpsb
test
insl
xchg
dec
aas
lods
sub
sub
sbb
out
imul
xor
mov
jbe
push
sti
pop
push
adc
xchg
jl
shl
scas
repz
jne
jmp
cmp
xchg
mov
jne
cmp
insl
sub
or
mov
pushf
movsl
imul
mov
xor
pop
sbb
fadd
ljmp
xchg
mov
fisttpl
popf
pusha
add
in
push
jo
and
loop
ja
or
sbb
jg
repnz
nop
cld
jp
rcr
xchg
je
jne
or
test
jp
jle
outsl
sub
and
pop
push
scas
cli
cltd
cwtl
mov
mov
lcall
add
xorb
std
sbb
ret
jl
lods
cmp
in
mov
sbb
xor
imul
jo
adc
push
xor
fcompl
dec
int3
jno
lahf
ljmp
sub
xor
push
add
mov
or
cmpb
dec
popa
inc
adc
xor
dec
lods
lcall
scas
fdivs
sbb
pop
addl
push
fcoms
push
out
scas
shrb
sub
iret
inc
dec
jp
mov
je
sahf
or
mov
push
mov
jle
xchg
jnp
repnz
mov
cmc
xchg
sub
loope
add
xlat
loope
xchg
or
fcomps
push
or
push
push
push
and
add
sub
push
mov
nop
jae
loope
jge
pop
ret
int3
out
inc
leave
jnp
mov
mov
fs
sbbb
jo
or
insb
movsb
pop
xor
jle
loopne
or
aaa
sub
loope
jae
xchg
outsl
loope
and
jl
testl
xchg
push
stos
xlat
jbe
aam
mov
cmp
daa
int
push
idiv
xchg
loop
mov
xchg
bound
popa
jae
imul
stos
and
stos
mov
testb
ss
sub
push
daa
mov
je
jns
dec
out
jl
cmp
push
mov
shl
cmc
and
cmpb
mov
add
adc
mov
push
sarl
int3
nop
add
mov
push
addr16
imul
lret
js
jmp
mov
orl
jp
fnstcw
adc
sti
incb
add
mov
rcrb
test
cmpsl
insb
lahf
sub
enter
aad
add
inc
ljmp
test
sub
in
imull
inc
cmc
fnstenv
dec
cmp
scas
inc
sbb
xor
or
clc
arpl
shll
push
push
dec
jo
push
cmovg
mov
loope
ret
into
push
jnp
sbb
or
dec
xor
fimuls
js
mov
loope
loop
fldcw
je
mov
in
cs
xor
or
jns
insl
push
pop
push
xor
xchg
outsl
xor
mov
cmp
dec
push
lret
pop
in
pop
sahf
lds
inc
test
inc
stos
push
mov
jle
in
xchg
retw
shll
in
adc
aaa
add
and
ja
or
push
popf
popf
jns
iret
jae
adc
ficoml
in
test
insl
lret
fisubrs
inc
sahf
lock
int
jge
out
fucomp
fs
mov
pop
mov
mov
mov
rcrb
jmp
push
addl
inc
lea
cmp
add
cld
repz
mov
cmp
mov
dec
jae
lock
call
and
in
outsb
mov
jbe
or
sbb
pop
fdivl
lods
in
add
cmp
or
sbb
mov
dec
jne
sbb
fistl
ret
mov
ja
xor
mov
and
mov
repz
lds
mov
lret
popf
cmpsb
jne
dec
ficomps
cmpsl
pushf
pop
in
movsb
or
dec
sub
sbb
adc
decb
pop
popa
and
mov
pop
sar
lret
int
jge
and
jo
lcall
pop
and
mov
aam
xchg
arpl
mov
sahf
in
push
sub
adc
fistps
scas
pop
xchg
imul
cwtl
fwait
imul
xlat
mov
mov
fistpl
jg
mov
int3
sub
push
cmp
movsl
sub
sub
jecxz
adc
dec
sub
sub
inc
mov
andb
aad
jne
or
xor
mov
mov
push
js
xchg
loopne
or
push
fst
in
or
ljmp
pop
jp
mov
xchg
es
aam
cmp
repnz
mov
sti
dec
and
icebp
out
mov
loop
sub
roll
into
or
lods
or
icebp
int
push
rcll
sbb
sbb
ficompl
aas
mov
popf
jno
das
out
ljmp
ja
mov
shr
faddl
adc
xor
and
movsb
lret
or
sub
dec
sub
pop
fistps
add
xor
add
sbb
push
fldl
mov
sbb
or
cmpsb
sbb
cltd
mov
cmp
sti
add
fcomi
adc
sub
shr
add
adc
cmp
pop
bound
sbbl
ja
rorl
xchg
dec
std
xor
mov
adcl
adc
push
aaa
and
pushl
jmp
ljmp
jecxz
lea
insb
xor
in
fsqrt
xor
dec
pop
lret
pop
push
xor
xor
lret
aad
ret
popf
imull
pop
jg
or
mov
pop
out
insl
jge
lea
popf
das
lods
aas
mov
outsl
in
jg
or
mov
pop
out
insl
jge
lea
dec
int
jle
mov
mov
pop
jmp
iret
jge
lea
popf
cmpsl
lods
pop
mov
outsl
in
std
or
mov
mov
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
cmp
sub
sbb
or
jno
psrad
push
dec
cwtl
imul
fdivrs
enter
sub
sbb
or
js
push
fstpt
jg
outsl
clc
insl
jmp
das
cmp
sub
sbb
or
js
push
mov
pop
mov
in
sbb
push
fwait
jnp
dec
mov
mov
ja
aas
dec
mov
ret
inc
jo
addl
jnp
insb
jne
arpl
inc
out
cmc
mov
movsb
inc
mov
mov
das
ja
scas
jg
push
mov
cltd
xlat
movl
mov
adc
movsb
xchg
mov
repnz
pop
mov
nop
stc
mov
enter
wrmsr
fildl
bsf
lahf
xchg
lahf
add
dec
sub
and
loop
and
mov
rolb
pop
lods
xor
pop
dec
cli
movsb
mov
mov
xchg
test
push
stos
add
sarb
push
adc
pop
pushl
in
and
sbb
mov
sub
enter
out
out
js
push
mov
pop
test
cwtl
data16
pop
call
cs
fisttps
pop
lcall
aaa
ror
lret
int
jmp
int
jle
test
inc
dec
mov
cmpsb
jnp
dec
sbbb
or
sub
sbb
cmpxchg
pop
pop
fildll
iret
pop
fwait
insl
stos
cmp
mov
test
cwtl
jg
outsl
clc
pop
call
das
cmp
sub
sbb
or
js
push
scas
mov
jg
outsl
clc
pop
call
das
cmp
dec
faddl
adc
dec
mov
shll
xchg
add
inc
mov
icebp
jns
cld
dec
xchg
movsl
je
and
stc
pop
loopne
enter
ljmp
sbbb
rolb
jg
mov
es
sbb
les
cmp
xchg
inc
jg
pop
lods
xchg
in
lods
and
iret
add
dec
mov
jbe
inc
or
xchg
mov
pop
jno
xchg
std
and
mov
xor
and
je
shrb
insl
adc
push
jl
stc
and
nop
xor
lahf
xchg
add
insb
push
out
stos
ret
mov
add
jo
sbb
insb
js
sbb
and
mov
xchg
out
mov
pop
push
cmp
cmp
ljmp
das
pusha
or
or
testl
pop
ffreep
nop
mov
shrb
pop
lcall
arpl
lret
imul
into
je
pop
rolb
repz
leave
int3
add
lods
pop
int
or
sub
stc
cmp
lods
rcrb
int
fildll
xchg
jbe
std
addb
and
dec
aas
roll
jbe
jne
int
mov
in
inc
cmpsl
xor
daa
mov
jmp
shll
out
dec
jmp
loopne
jbe
xor
aas
aad
icebp
wbinvd
sub
fimull
ret
int3
je
loopne
cmp
sub
ffree
adc
ret
mov
lret
adc
addr16
and
pop
mov
insb
setns
pop
dec
adc
xchg
cmp
jae
std
shl
jl
scas
test
jle
add
into
lods
popf
inc
in
jno
mov
inc
lods
adc
jbe
jmp
mov
xchg
mov
cld
sbb
js
sbb
stos
test
mov
push
push
mov
imul
inc
cmc
jg
sarb
and
test
movsl
loope
xchg
cmp
sahf
jo
mov
pusha
notl
mov
add
jo
nop
mov
sarb
loope
clc
rorl
out
ret
inc
sub
add
stos
sbb
lds
mov
cmp
mov
popa
sub
or
inc
cld
mov
add
addr16
fstps
jns
inc
lret
jbe
push
test
jmp
xor
jno
push
xor
sarb
xor
imul
dec
xor
mov
clc
shl
jns
sbb
pop
push
mov
cltd
xchg
out
test
out
xchg
sar
repnz
jbe
subb
icebp
jecxz
mov
sbb
ja
subl
aas
mov
cld
das
add
imul
test
pop
pop
stc
scas
mov
loopne
and
cs
jbe
fcmovbe
pop
inc
xlat
lcall
add
push
mov
nop
mov
xchg
push
fwait
dec
mov
xchg
int3
out
out
das
lock
ss
pop
stos
pop
iret
shrb
loop
es
aad
movsb
outsb
mov
jge
adc
popa
add
mov
stc
add
dec
cli
adc
fsubrl
or
mov
xor
int
adc
jp
out
ljmp
mov
mov
pop
mov
xlat
int3
xchg
mov
test
shrl
cmp
sub
jo
mull
mov
push
jecxz
nop
rorb
aaa
lahf
push
iret
cmc
outsb
jns
mov
jno
sahf
xchg
ret
divb
loopne
add
xchg
xchg
mov
jl
mov
ss
dec
mov
into
pusha
scas
xor
cmc
dec
cmp
dec
inc
outsl
out
mov
lods
ret
mov
int3
icebp
fstpt
add
sub
push
xor
pop
aaa
adc
or
sub
mov
jbe
out
add
cmovns
jno
shll
mov
pop
push
pop
pop
pop
inc
xchg
mov
mov
pop
xor
out
leave
mov
and
pop
jp
add
fimull
or
inc
in
mov
cmp
sahf
jne
out
in
cmp
or
jmp
cmpb
and
clc
les
clc
mov
daa
pop
dec
xchg
out
data16
adc
ret
fcompl
cltd
sar
adc
push
addr16
cltd
sub
push
mov
dec
pop
adc
testl
sub
xlat
cli
push
imull
std
sti
clc
enter
or
es
scas
xchg
or
fs
lcall
repz
and
pusha
dec
mov
lcall
stos
push
push
and
shlb
ljmp
jmp
mulb
cmpsl
ja
pop
out
jle
or
fdivrs
std
mov
jl
test
ja
push
pop
ror
push
dec
push
xor
xor
mov
jg
xchg
hlt
sub
pop
xor
clc
dec
pusha
mov
int
sahf
sbb
sub
stos
fnsave
jg
test
mov
dec
daa
mov
stos
mov
add
add
outsl
loop
push
xchg
jle
movsb
mov
cmp
cmpsb
scas
xor
icebp
jbe
push
jne
and
adc
sarb
mov
ret
lods
test
cmc
not
lds
lock
ja
xchg
imul
add
cmp
push
movsl
inc
arpl
loopne
sbb
mov
dec
imulb
xchg
cmp
mov
mov
andb
insb
adc
filds
popa
lea
icebp
aam
and
cmp
icebp
cmp
pop
in
mov
sbb
mov
adc
push
movsb
xchg
mov
pop
sub
pusha
cltd
or
mov
mov
xchg
in
jae
fs
js
sbb
xchg
mov
lds
push
cmpsb
iret
jnp
dec
fisubl
out
es
lret
mov
out
popa
pop
jmp
dec
dec
imul
xchg
sub
mov
pop
push
mov
or
arpl
dec
leave
mov
pop
mov
jmp
mov
aad
sub
mov
lahf
jnp
adc
not
and
mov
bound
pop
and
cld
jge
addb
mov
mov
or
not
negl
add
lcall
jnp
adc
fbld
pop
pushf
lcall
sub
fnsetpm(287
or
les
fwait
pusha
lods
pop
rcrb
xchg
pop
loop
mov
and
lahf
jl,pn
aas
mov
ds
xlat
popa
icebp
inc
dec
xchg
in
adcb
mov
push
clc
push
cmpb
xor
fisubrl
aas
mov
inc
mov
jb
jno
adc
ret
xlat
jp
or
jns
mov
stos
jge
push
mov
cmp
cmp
lret
jbe
cld
or
scas
loop
orl
mov
jle
xchg
mov
les
xor
jle
xor
xchg
fs
fisttps
mov
jns
mov
pop
and
es
int3
or
push
pop
push
fdivrl
shll
out
ds
test
pop
pop
jl
jle
mov
pop
sbb
mov
shrb
outsb
testb
xor
jbe
push
lock
test
jb
sub
jecxz
push
sarl
sub
imul
mov
mov
jge
test
rcrl
outsl
sbbb
jecxz
mov
pop
inc
mov
cmp
pop
stos
sarb
push
roll
or
mov
shrb
mov
sub
cmp
aam
add
jae
jo
mov
xor
xor
mov
aas
adc
test
xor
add
adc
js
fstpl
aam
xor
test
daa
cmp
imul
or
add
add
scas
sub
mov
dec
inc
fs
fs
xlat
cmp
jp
les
mov
lods
push
inc
push
push
dec
push
add
adc
fsubs
xor
or
test
imull
repz
jo
mov
and
mov
out
sub
fsts
ja
stos
daa
mov
cld
push
or
rcll
xchg
inc
jne
stos
push
pushf
test
aad
mov
loope
bound
aam
push
nop
mov
jge
mov
lods
sbb
sbb
and
add
rcl
lds
cmp
int
mov
mov
int
jg
gs
gs
mov
cmp
push
jg
dec
push
lahf
into
cmp
mov
dec
insl
jg
pop
stc
sub
enter
pusha
and
mov
xchg
in
ds
shrb
adc
lret
push
add
leave
xor
sbb
dec
and
imul
mov
aaa
data16
and
outsb
mov
out
mov
cmp
xor
pop
add
clc
pusha
xchg
cmp
pop
inc
das
cld
sti
mov
aam
or
push
rclb
aad
mov
and
xor
mov
sahf
sahf
inc
cmp
dec
mov
push
jns
jo
leave
push
rcr
and
mov
repnz
jg
leave
iret
jns
lret
mov
stc
ret
cmp
xor
jge
pop
pusha
fnstsw
bswap
xor
and
aas
stos
dec
inc
add
xor
jae
repnz
fs
in
push
mulps
jg
mov
pop
pop
lds
pop
pusha
and
insl
repz
in
push
add
outsb
imul
and
call
xor
fwait
add
jecxz
mov
imul
sahf
orb
mov
movsb
scas
out
pop
es
lret
dec
dec
aaa
jecxz
sahf
js
push
sbb
ret
jp
mov
push
and
cmp
call
in
add
loopne
arpl
ffreep
mov
and
sti
pop
cmp
and
sub
lods
sbb
clc
mov
add
sahf
mov
test
shrb
inc
cmp
popf
pushf
insl
hlt
or
xor
push
push
jmp
cmp
cli
jno
fnstsw
fwait
out
xor
in
pop
mov
xchg
call
xor
shlb
inc
adc
call
xor
sbb
pop
fisubrs
cmpsb
ficoms
xor
daa
lods
pop
push
leave
subl
loope
repz
lea
mov
cli
cmpb
out
inc
ret
push
je
jge
in
int
xchg
mov
pop
mov
clc
hlt
pusha
scas
sub
cmpsl
nop
cld
mov
push
dec
mov
mov
pop
loopne
addb
jmp
in
xor
icebp
int
push
daa
dec
sbb
pusha
mov
xor
xor
mov
lods
pop
mov
rcll
pop
push
sub
sbbl
mov
std
sti
lock
daa
jmp
sub
dec
mov
into
fdivrl
jmp
sbb
lret
add
push
std
ss
into
mov
inc
pop
sub
into
push
or
inc
xlat
inc
cwtl
out
inc
mov
nop
lods
mov
sti
dec
jmp
mov
test
in
mov
inc
lret
jg
cwtl
cmp
lahf
pop
adc
xchg
add
xchg
outsl
leave
sbbb
jecxz
fisubl
addl
xor
inc
xor
test
mov
mov
pop
and
mov
push
sti
sub
push
dec
movsl
lahf
xlat
xchg
push
jns
test
push
lock
mov
mov
add
cmp
cmp
xchg
aam
jecxz
stos
sbb
es
dec
dec
sub
push
pushf
push
dec
xchg
pop
cmp
aaa
mov
stos
jne
push
imul
in
mov
rcl
enter
stos
sub
dec
loope
aaa
les
jle
mov
push
add
sub
dec
mov
mov
inc
scas
popa
xchg
loop
dec
pushf
jp
dec
mov
or
jae
test
mov
adc
push
imul
sbb
mov
push
pop
in
je
xchg
inc
push
adc
xchg
jns
fsubs
push
jl
leave
xchg
loop
lret
out
or
jbe
mov
pushf
out
push
lret
outsb
aam
pushf
push
jecxz
lret
xor
adcb
leave
dec
push
jno
aaa
jmp
or
cmp
lds
sti
push
mov
rcll
mov
mov
xlat
outsl
dec
fidivrs
add
aad
test
int3
add
jnp
cwtl
cmc
push
pop
aad
jle
jns
in
inc
xorb
push
and
std
xchg
loopne
mov
jae
outsl
shll
stos
lds
pop
repz
dec
addl
enter
ds
cmpsb
mov
cwtl
mov
fs
stos
outsb
mov
add
jbe
adc
movsb
xchg
pop
adcb
or
das
fs
iret
push
das
mov
cmp
mov
in
mov
pusha
incl
inc
insl
mov
push
ljmp
incb
mov
mov
scas
mov
lret
pop
daa
cmp
scas
cmc
movsl
movsb
push
cs
fisubl
pop
lods
stos
arpl
dec
movsb
push
or
ret
pushf
lret
and
xorl
pop
mov
push
jle
outsb
xchg
hlt
stos
dec
jg
mov
mov
mov
xor
xor
add
data16
add
rcrb
sbb
dec
cmp
pushf
stos
aam
je
sbb
testb
or
lds
movsl
sub
punpcklwd
push
mov
inc
out
pop
ss
lret
lret
ss
xor
xchg
push
and
lods
sbb
mov
outsb
test
inc
bound
push
scas
sahf
lock
jg
and
pop
mov
cltd
sbb
cmp
movsb
pushf
fldcw
cwtl
jg
xchg
cmc
mov
inc
lock
sub
insb
or
mov
aad
aaa
xchg
add
mov
popa
fistpl
cmp
mov
mov
call
imul
and
jnp
out
mov
rol
mov
push
xchg
xlat
hlt
aaa
mov
add
out
out
addl
mov
pusha
lcall
cltd
push
addl
or
pusha
dec
xor
or
mov
jmp
mov
ret
out
cld
adc
adc
dec
cmpsb
inc
or
cmp
adc
and
cmc
inc
mov
sbb
fimuls
xor
imul
nop
push
jno
push
cmpsb
outsb
sbb
xchg
xlat
mov
pop
push
mov
push
xchg
negb
or
iret
mov
fwait
mov
lds
aad
dec
test
mov
or
enter
adc
xchg
add
xor
xor
test
xor
ja
jl
test
or
add
aas
xchg
mov
sbb
and
repz
gs
fbld
or
sahf
bound
sub
or
cmpsb
leave
js
mov
mov
sub
xor
xchg
sub
dec
sbb
xor
dec
repz
mov
mov
shl
pop
sub
lcall
stos
mov
or
push
ret
or
jmp
mov
jmp
mov
push
fimuls
cltd
out
push
xchg
in
sub
xchg
pop
push
sbb
stos
push
fdivrp
pop
je
sbbl
sub
in
adc
adc
dec
push
inc
loop
lahf
test
cmp
aaa
cli
cmp
popf
cmp
push
mov
cmp
dec
sbb
out
dec
xchg
jmp
dec
in
jbe
push
pushf
dec
imul
in
test
inc
pop
sbb
shrl
mov
mov
fdivrs
inc
pop
cmpsl
orb
in
jnp
sub
lret
mov
leave
sub
jnp
fidivl
shll
dec
xor
aam
push
sub
lods
pushf
cmpsl
lea
in
pop
and
sub
xchg
mov
mul
fyl2x
or
jge
divl
mov
push
and
jl
pop
pop
mov
aam
iret
pop
aad
inc
aad
pusha
jp
and
rcrl
mov
movl
inc
enter
imul
mov
js
fcoml
addr16
lods
sbb
sub
rorb
add
testl
lds
push
lock
sbbl
dec
pop
sti
add
dec
xchg
repz
mov
insb
sub
shl
sahf
andl
and
stc
les
mov
icebp
push
xlat
push
mov
aam
dec
int
stos
pop
push
test
jp
out
xchg
add
dec
pop
enter
cs
daa
pop
test
xchg
not
xlat
js
mov
pop
incb
mov
les
insb
les
pop
orb
mov
xorl
shrb
dec
jbe
mov
push
shll
add
cwtl
in
jae
insl
inc
stos
or
mov
call
mul
adc
clc
mov
mov
jecxz
push
xlat
pop
sub
outsl
adc
or
ret
mov
inc
push
mov
mov
es
pop
pushf
aam
or
add
aam
fldenv
add
cld
sub
aad
ds
adc
addr16
mov
in
push
jbe
daa
mov
imul
mov
out
rcll
imul
jle
push
fidivrs
aad
dec
fidivrl
mov
jno
pop
popa
and
nop
addr16
mov
cmp
mov
fcmove
pop
pop
pop
fmuls
dec
jg
inc
mov
mov
mov
mov
aaa
mov
push
lahf
rcrb
out
jle
leave
xor
fbld
loope
mov
ss
inc
int3
mov
push
daa
int3
shl
push
jecxz
mov
fisubrl
mov
addr16
repnz
mov
cli
lds
sarb
push
je
ja
dec
mov
decl
mov
movsl
sub
fmull
pusha
mov
xchg
lret
dec
jns
lock
leave
pushf
rolb
fiaddl
jg
pop
mov
mov
mov
inc
shrb
movb
in
lahf
cld
sbb
insb
negb
clc
mov
or
std
gs
dec
adcl
jp
inc
out
imul
stos
stc
aaa
xchg
fisttpl
ljmp
mov
out
jnp
ljmp
scas
aas
out
adc
mov
popa
jle
pop
push
xlat
arpl
in
mov
mov
cs
or
lahf
scas
xchg
cmp
xchg
jo
dec
popf
xchg
out
inc
dec
and
mov
cmc
je
xor
clc
and
dec
js
into
or
xchg
jl
or
pusha
push
xchg
aas
je
les
xchg
push
mov
or
stos
xor
inc
insb
jae
mov
lods
mov
jo
cs
push
test
xor
push
push
data16
push
push
jnp
mov
outsl
lret
sbb
dec
and
imul
cmpb
jno
or
xor
or
or
loope
imul
hlt
adc
out
push
lods
imul
rcrl
scas
add
mov
jmp
test
fisubl
jl
cltd
push
scas
loope
xchg
ffreep
lret
dec
ja
xor
dec
adc
pop
sbbb
xor
cmp
jne
dec
adc
jmp
je
jns
loope
pop
ljmp
shlb
and
xchg
cmp
scas
push
dec
sub
dec
push
es
stc
push
cmp
inc
pop
out
fldl
fwait
sub
mov
pop
xor
les
imul
ret
mov
ja
push
mov
push
jno
lock
xor
icebp
stos
jg
aam
fildll
fdivp
mov
mov
flds
sbb
nop
mov
cs
icebp
out
das
addr16
and
or
pusha
bound
adc
xor
and
jno
xchg
sarl
mov
pop
lcall
cmp
sti
sbb
xchg
and
outsb
imul
adcb
xlat
xchg
mov
outsl
jns
mov
pusha
xchg
xor
xchg
add
dec
ret
pop
sub
add
jnp
push
pop
mov
sub
icebp
sbb
cmp
mov
ficoms
insl
lds
xor
int3
mov
sbb
negl
pop
popa
mov
xchg
xor
popa
ret
and
mov
and
arpl
jle
test
inc
scas
xor
mov
mov
push
dec
xchg
jmp
popa
jmp
js
popa
std
cmp
mov
jb
jl
shll
enter
jmp
jecxz
iret
daa
decl
out
js
push
scas
mov
jg
outsl
clc
pop
call
das
cmp
sub
sbb
or
js
push
scas
mov
jg
outsl
clc
pop
call
das
cmp
sub
sbb
or
js
imul
cwtl
jg
imul
call
sub
fldt
lret
sbb
or
js
push
outsl
inc
pop
push
in
jg
sbb
inc
xor
jb
inc
repnz
dec
jbe
pop
int3
push
mov
repnz
jae
add
xor
loop
repnz
andb
xor
loop
repnz
jb
ret
mov
xorb
ret
jb
inc
repnz
andb
xor
fdivl
push
mov
rolb
lock
push
out
xchg
popf
bound
mov
test
popf
cmpsl
jmp
mov
inc
movsl
push
push
or
pop
mov
xor
ficoml
sbb
ret
std
bound
cmp
mov
movsb
in
xchg
or
mov
inc
and
or
mov
push
mov
xor
mov
inc
movsl
and
inc
iret
rcl
out
cmp
sub
mov
pushl
mov
xchg
or
int
std
testl
psraw
in
divl
xor
aas
out
mov
inc
jns
inc
jmp
mov
adc
pop
rclb
lahf
inc
addr16
mov
push
jb
inc
repnz
andb
xor
loop
repnz
jb
add
xor
orl
mov
orb
addr16
inc
mov
fwait
bound
lret
inc
add
and
add
fisubrl
adc
cmpsl
add
add
jl
dec
testl
lea
sahf
es
dec
xchg
xor
loop
repnz
jb
add
xor
loop
repnz
andb
xor
loop
repnz
jb
add
xor
jg
fldl
adc
std
mov
icebp
xchg
or
jno
sub
div
mov
addr16
mov
int
lret
daa
mov
int
push
sbb
insl
dec
mov
mov
adc
jae
jmp
push
sub
shll
mov
inc
mov
pop
xchg
sub
xchg
test
repz
xchg
popa
popaw
movsb
mov
dec
dec
je
enter
or
sub
mov
lods
stc
repnz
pusha
mov
cwtl
push
in
mov
dec
movsl
sti
sbb
sub
or
in
xor
sbb
aaa
outsl
dec
sub
cmp
stos
mov
aad
xchg
mov
in
and
sti
or
cmp
dec
add
leave
lods
sbb
mov
roll
or
shl
push
adc
adc
cltd
mov
sbb
int
pop
loope
hlt
adc
cltd
repz
sub
fcomps
std
xor
pop
dec
inc
out
inc
bound
aam
cmp
lahf
cmpsl
add
xor
das
out
sbb
xchg
pop
ret
stos
dec
push
cmp
add
fsubs
cmp
inc
cmp
into
fistpl
and
pop
std
inc
pushf
loop
data16
andl
mov
imul
push
adc
xor
das
out
fistpl
aad
jp
cmp
push
cwtl
jb
mov
addr16
add
dec
push
and
in
sbb
mov
or
xchg
mov
xchg
jae
xor
lds
mov
dec
fmul
movsl
sub
jg
push
pusha
pop
pop
fisttps
clc
into
inc
and
imul
pop
enter
xor
out
test
loopne
dec
mov
lods
mov
pop
fwait
sarb
and
cmpsb
hlt
insl
fmull
aam
aad
cwtl
aas
ljmp
cmp
fcmovu
dec
mov
mov
inc
aas
push
test
std
or
jl
arpl
and
shr
cmp
clc
fwait
dec
das
pop
fcomi
cmp
cs
sub
gs
sbb
aad
bound
mov
lods
push
insb
sub
loop
mov
imul
xchg
pop
jae
mov
loopne
test
scas
jae
pop
mov
fiaddl
lret
cmp
pop
xor
cli
es
or
cmpsl
sbb
mov
adc
push
or
inc
and
xor
cmp
add
outsb
xor
out
pusha
push
jne
xchg
out
add
sti
push
lcall
xchg
ds
mov
jmp
xchg
out
sbb
or
xchg
lods
pop
adc
lcall
imul
lds
pop
mov
dec
rclb
or
sub
testl
lret
mov
dec
dec
mov
mov
push
jae
cmp
enter
mov
in
push
es
iret
pop
std
mov
dec
add
ja
stos
and
sbb
scas
inc
fstps
fiaddl
add
shl
inc
addr16
adc
xchg
lods
jp
aad
fldenv
iret
cwtl
repz
mov
inc
nop
das
xor
aam
fwait
in
cmpsb
scas
rcrw
fnstenv
cmp
inc
inc
pop
add
inc
mov
sbb
jns
mov
loop
stc
clc
mov
dec
mov
ljmp
mov
sbb
setns
imul
mov
mov
popf
sbb
call
add
outsl
subl
inc
push
lret
add
lods
repnz
inc
mov
lock
jmp
jne
and
lret
sub
out
icebp
adc
bound
mov
pop
or
aad
mov
shll
call
shrl
xchg
pop
jmp
xchg
dec
outsl
xchg
dec
rolb
repnz
jge
or
and
arpl
xchg
mov
sub
pop
les
sti
sbb
mov
cmovno
pushf
pop
xor
sub
decb
mov
sahf
into
and
mov
push
lods
xor
out
fisttps
push
inc
xchg
jmpw
mov
cmp
iret
addb
fiadds
dec
loop
outsb
dec
stc
or
nop
stc
cmpsl
mov
mov
jmp
pushl
out
mov
mov
daa
add
out
insl
mul
scas
shll
pop
push
mov
jle
fxch
ljmp
std
iret
roll
lcall
out
lahf
in
xchg
jb
mov
pushf
adc
rcl
push
jp
xchg
xor
xor
dec
or
rcr
and
mov
or
aas
jle
or
pop
sti
jp
mov
in
scas
out
mov
sbb
fnstenv
out
mov
enter
aaa
xchg
stos
sbbl
adc
add
xchg
cmp
and
stc
insl
sbb
shlb
out
ror
cltd
xchg
aas
pop
ret
mov
lahf
push
scas
scas
popf
jbe
adc
adc
inc
mov
pushf
mov
push
xor
or
movsl
lea
shlb
rclb
imul
or
repnz
psubusw
mov
addr16
mul
in
jne
jmp
ficoml
jecxz
jb
jge
movsb
fistpl
orb
lret
pop
inc
sar
cs
jmp
lret
pop
adc
and
mov
std
pop
add
mov
jnp
inc
imull
dec
outsb
imul
loopne
jns
lods
inc
jg
imul
ret
mov
in
imul
mov
les
or
lock
cs
pop
and
cmc
inc
jl
cld
lods
aad
xchg
ret
push
movsb
cmp
sbb
sbb
movsb
data16
inc
icebp
addr16
jbe
movsb
add
xor
out
xchg
xor
push
jb
push
sbbb
add
or
dec
adc
es
inc
insb
or
cmp
jb
pop
xor
add
xchg
jg
shll
and
add
mov
popa
mov
dec
inc
nop
jno
jo
sahf
orb
lcall
ret
out
shl
enter
adc
aas
test
gs
cmpsl
inc
cmp
cmp
add
jnp
push
lret
pop
dec
sub
dec
add
lods
aas
sub
sub
rolb
jecxz
mov
ss
inc
inc
pop
cli
xchg
mov
test
mov
fistl
adc
fstpl
push
xchg
cld
mov
lock
fstps
sub
push
lock
hlt
testl
push
inc
jnp
ds
or
dec
xor
in
cli
andps
arpl
cmp
es
arpl
cld
pusha
jns
out
arpl
mov
aas
popf
in
mov
test
mov
loope
and
imul
test
cld
nopl
jmp
insb
sahf
popf
lret
call
fcompl
xchg
mov
cmp
mov
pop
adc
mov
pop
enter
inc
pop
jg
adc
jnp
in
push
ss
dec
into
jne
nop
negb
xor
fsubrs
jo
jge
sub
sbb
push
dec
arpl
or
sub
fildll
sbb
loop
sbb
xchg
adc
pop
insl
cld
inc
sbb
mov
and
jp
cmpsb
stos
pop
push
cltd
sbbb
mov
idivl
mov
pop
js
jb
cmp
pop
mov
xchg
pop
ficoms
cmp
mov
add
xor
mov
popf
iret
cmp
inc
cld
mov
aad
mov
fdivrs
jbe
lret
sub
push
cmp
mov
addr16
stc
push
lods
sbb
addr16
jmp
xlat
incl
nop
test
mov
jp
cli
out
inc
sub
jmp
xor
push
and
xchg
std
push
loopne
hlt
mov
out
insl
pop
out
enter
mov
cmp
cmp
xchg
push
rorl
xchg
push
insb
arpl
jecxz
sbb
imul
mov
sbb
cli
mov
or
int3
fdivr
std
insl
adc
test
cmpsb
scas
aam
xor
pop
and
add
mov
jae
aas
mov
dec
aad
jl
pop
adc
jae
ss
jp
pop
or
test
shlb
rolb
mov
into
aam
cltd
xlat
pop
cli
scas
cmpsb
dec
jns
test
cld
push
pop
into
test
lods
jno
lods
push
sahf
mov
push
out
sbb
jge
outsb
in
hlt
xchg
lret
mov
pop
test
and
xchg
pop
sbbb
push
movsl
dec
sbb
hlt
sub
inc
pop
rol
xchg
lret
loopne
enter
mov
cld
pop
cs
test
gs
push
push
xchg
sbb
xchg
pusha
pushf
cmp
scas
lock
test
sub
aam
inc
xchg
arpl
xor
fs
stos
adc
mov
leave
jl
cmp
dec
sub
jmp
ljmp
inc
je
loopne
cmp
neg
outsb
xor
gs
sub
sbb
fs
icebp
dec
ret
pop
sub
push
push
sub
lahf
loop
out
es
mov
bound
psubusw
push
imul
or
add
jge
adc
sbb
sub
pop
mov
pop
fiaddl
jne
xchg
jo
add
inc
fildl
outsl
stos
jp
lds
cbtw
loop
ja
pop
popa
add
jnp
arpl
xchg
fwait
push
jnp
adc
aas
rcrb
ljmp
arpl
mov
sarb
dec
mov
lods
testb
mov
xchg
cwtl
mov
jo
fidivs
mov
and
cwtl
ljmp
lret
lahf
clc
outsb
or
cli
movsb
jo
ss
xor
movsb
mov
adc
jle
pop
dec
ds
pop
pop
and
int3
inc
inc
xchg
popa
mov
out
jecxz
inc
push
sub
lds
sub
setae
mov
ret
inc
xchg
scas
pop
and
or
mov
and
dec
sbb
cmpsl
lret
mov
cmc
mov
ret
inc
sub
and
and
xchg
mov
pop
and
pop
or
jae
or
xchg
jno
cmp
adc
cmpsl
shlb
sbb
fistps
cwtl
jmp
daa
sub
dec
cltd
mov
or
xor
jno
aad
adc
adc
mov
inc
fists
repz
ja
and
lods
outsl
mov
jmp
xor
add
inc
movsb
sahf
xor
xor
fldt
mov
cmp
loopne
fisttps
loopne
or
paddw
mov
call
jno
insb
adc
test
insl
test
xchg
push
psrlq
push
mov
pop
std
jb,pt
mov
mov
lcall
es
sub
jae
pop
mov
out
or
jmp
jbe
mov
ss
lcall
pop
lcall
inc
lods
clc
adc
nop
pop
leave
cmp
int
subl
outsb
nop
outsb
addr16
xor
sbb
les
aam
rolb
pop
xchg
cmc
cld
xchg
sub
lret
dec
push
scas
cld
inc
mov
sbb
adc
adc
mov
adc
loop
cmp
mov
add
jne
pop
mov
in
mov
int
lret
pushf
outsl
dec
inc
int3
sbb
out
and
lret
ja
inc
sub
pop
stc
jns
adc
sbb
outsb
negl
sub
imul
cmp
stos
nop
sub
hlt
loope
mov
adc
push
pushf
ja
pop
add
test
mov
push
fstl
ljmp
mov
in
aas
sub
and
inc
mov
lock
dec
leave
jno
test
stc
sete
shll
in
repnz
lock
pop
arpl
inc
repz
sbb
cmp
cmp
add
std
cli
and
pop
mov
push
sbbb
in
adc
loope
cli
push
fstpt
mov
jmp
addr16
xor
and
sbb
sub
popf
lea
daa
rcrl
inc
sbb
mov
push
sub
jnp
js
movsl
into
adc
push
int
into
xchg
adc
sahf
loop
jmp
mov
movsl
ljmp
test
mov
testl
out
mov
adc
cmp
adc
ret
fisubl
pop
push
dec
ret
jb
int
sahf
jno
sub
dec
inc
dec
jo
sbb
jecxz
inc
lea
movsb
sub
lock
pop
inc
jle
xchg
out
sub
sbb
mov
adc
adc
pushf
data16
jb
adc
ficoml
or
xor
jns
jle
pop
leave
pop
push
ja
jns
cwtl
dec
out
mov
mov
mov
out
hlt
bound
gs
inc
sbb
push
icebp
into
js
loope
xor
lock
or
adc
pushf
adc
test
int3
icebp
and
ljmp
cld
jmp
dec
pop
mov
stos
bound
mov
mov
movsb
add
pop
scas
dec
hlt
hlt
fistpll
sub
xor
push
mov
xor
push
cmp
jns
movsb
inc
inc
add
insl
jle
movsl
loopne
loop
in
jnp
cmp
add
dec
pop
out
adcb
lods
mov
sbb
push
daa
push
shlb
cltd
fcmovnb
adc
gs
and
or
leave
jecxz
mov
scas
or
xchg
pop
mov
pop
fmuls
enter
mulb
dec
mov
sarl
in
enter
mov
push
cmp
push
mov
xchg
shlb
lock
scas
fdivr
bound
daa
iret
cltd
jl
push
fs
mov
pandn
pop
mov
enter
outsb
or
mov
rcrl
dec
ds
xchg
push
inc
loope
data16
dec
sbb
cs
and
dec
mov
or
sbb
xor
lea
shl
cwtl
pop
test
fisubrl
cmp
pop
gs
add
jb
xor
subb
test
iret
mov
sbb
dec
insb
and
repz
pop
mov
pusha
sbb
js
add
xor
das
pop
pop
int3
pusha
in
inc
mov
rorl
push
xor
or
lcall
movsb
cmp
cmp
xor
cmc
in
sbb
lods
loop
dec
adc
and
xlat
and
push
pusha
lcall
pop
sub
bound
xchg
push
jge
mov
jl
mov
jnp
ljmp
jmp
or
xor
sub
push
les
pop
cltd
mov
enter
les
xchg
mov
popa
xchg
aaa
fcmovb
jl
js
and
lods
mov
mov
jnp
int3
daa
in
sahf
xor
pushf
outsb
mov
lods
jo
iret
mov
inc
cs
xchg
mov
test
pop
outsb
fstl
mov
imul
cwtl
imul
pop
mov
xor
fs
mov
inc
pop
add
mov
rcrl
aam
pop
jg
inc
mov
stc
jmp
and
jb
pusha
cmp
inc
subb
stc
and
jmp
mov
js
arpl
xor
enter
xor
jmp
inc
in
jp
std
mov
std
sub
inc
xor
add
mov
dec
inc
int3
jg
pop
mov
pop
sub
jnp
lahf
push
sbb
mov
roll
call
push
lods
xor
mov
outsb
jl
loopne
mov
xor
insl
lret
test
jmp
rolb
mov
dec
mov
in
jbe
repz
mov
inc
int3
mov
mov
lret
push
in
sub
cmpsl
xor
dec
popa
mov
push
cmp
sti
stc
cmc
push
add
fcomi
lcall
jecxz
sub
xor
xor
cwtl
jge
fimull
inc
mov
and
sahf
stos
push
mov
aam
leave
int3
insl
sub
ja,pn
rolb
dec
into
xor
jp
out
mov
xor
outsl
mov
insl
mov
mov
xor
mov
sti
loope
cmp
pop
aad
add
dec
in
icebp
sub
mov
sub
jae
push
pop
dec
aad
js
mov
or
add
push
fidivs
cli
or
ret
sub
rcr
dec
add
arpl
push
mov
sub
repnz
inc
les
cmp
les
mov
gs
sbb
or
jmp
xchg
rcl
dec
sub
je
gs
mov
in
sarb
sub
adc
lock
scas
jne
cmp
jne
je
pop
jecxz
out
mov
in
mov
add
mov
xor
movsl
xor
push
pop
adc
pop
jnp
mov
push
xchg
iret
inc
mov
xchg
lcall
stc
sub
xchg
addr16
test
mov
sub
sbb
fcmovnu
mov
pop
jno
xor
leave
rcll
mov
test
inc
mov
aaa
jnp
dec
in
fwait
pusha
mov
sahf
jbe
xor
cmpsb
out
shrb
xor
lret
xchg
hlt
out
xor
repnz
shll
add
int3
inc
sbb
outsb
dec
sub
fdivrs
add
dec
push
dec
mov
daa
cmp
imul
stc
scas
push
dec
dec
clc
pop
daa
jg
jne
stc
in
sub
int
hlt
aad
movsl
push
xor
mov
mov
shll
shlb
dec
dec
movsb
cmp
sub
dec
dec
ljmp
ljmp
fsubs
sub
xor
mov
test
mov
mov
jl
repnz
out
sbb
inc
cld
fsts
jns
ret
push
dec
lcall
xchg
les
xchg
popf
pop
mov
mov
in
lods
cmp
imul
and
das
add
push
out
pop
inc
push
xlat
insb
jecxz
testb
popa
test
add
and
add
andb
mov
dec
cltd
add
mov
insb
add
aas
das
and
xchg
movsb
sub
mov
sub
sbb
js
out
mov
movsb
cmp
xchg
jae
dec
sbb
adc
pop
jp
insb
lret
pop
fidivrl
fidivrl
adc
jbe
adc
xor
push
add
lea
xor
adc
fstpl
insl
add
pop
lea
hlt
push
fildll
daa
pop
add
in
push
xor
roll
adc
test
or
dec
mov
sbb
loope
or
cmp
mov
ss
stos
jae
push
fildll
sbb
fisttpl
ja
xor
movq
dec
cld
out
int3
add
iret
dec
sbb
repz
shl
and
rol
mov
daa
pusha
xchg
in
mov
mov
rolb
iret
arpl
pop
in
push
pop
outsb
xor
outsb
dec
aas
adc
pop
imul
cli
adc
mov
fwait
scas
push
inc
cmp
es
mov
cltd
ret
loope
pop
sbb
push
push
sbb
das
jbe
je
add
xor
xor
rorl
leave
inc
roll
inc
movsb
mov
pop
test
inc
icebp
popa
and
ljmp
pop
pop
cmp
ljmp
shlb
cmp
mov
into
inc
push
ret
ja
jge
lret
mov
fsubl
adc
cmp
inc
lock
sbb
leave
add
pop
shrd
lods
inc
sbb
cmp
cld
scas
mov
aam
jbe
hlt
mov
scas
test
lret
mov
arpl
jecxz
mov
push
mov
mov
pop
push
inc
jecxz
dec
aad
inc
fmul
into
imul
mov
lods
stos
pop
nop
push
cmp
stos
lds
lcall
andb
daa
pop
clc
iret
mov
sahf
cmp
aam
and
jge
cmc
out
jnp
or
jmp
jecxz
sahf
adc
rcll
loope
inc
pop
std
lds
pushf
xchg
fstpt
mov
jo
add
sbb
add
adc
inc
lcall
rclb
cwtl
adc
outsl
xchg
std
adc
add
cmp
in
adc
jmp
int3
inc
movsb
cmpsb
daa
call
shrl
push
fucomp
xchg
mov
sbb
insl
dec
testb
mov
stos
ja
cltd
pop
sub
push
mov
mov
cli
iret
add
push
leave
aas
and
and
test
ljmp
pop
pop
pop
push
xor
inc
rcll
das
jle
mov
push
cmp
xchg
lret
xlat
mov
jb
inc
repnz
andb
xor
loop
repnz
jb
add
xor
loop
repnz
andb
xor
loop
repnz
jb
add
xor
bound
push
add
xchg
xor
loop
repz
jb
add
xor
loop
repnz
andb
mov
xorb
enter
jb
bound
jge
insl
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
in
jne
lcall
sarb
insb
or
dec
sub
sub
push
jp
mov
lcall
mov
mov
jge
dec
sub
sub
sub
lcall
movsl
out
add
loop
aad
jns
jne
dec
sub
push
dec
jp
mov
out
std
mov
and
or
jp
mov
xlat
aad
sub
insb
add
mov
lret
mov
mov
mov
mov
cltd
or
mov
lahf
ds
xchg
outsb
cltd
cmp
push
dec
pop
jno
xchg
mov
push
pop
or
dec
in
mov
stc
add
mov
add
js
mov
movsl
xchg
jo
inc
stc
cmp
lahf
shl
cli
insl
pop
mov
cmp
sbb
test
mov
mov
push
xchg
or
jb
aad
and
outsb
movsl
or
mov
push
fnsave
lea
test
mov
push
cmp
and
push
adc
fcomps
xchg
fidivrs
popf
lahf
insl
dec
adc
pop
cmp
and
jo
or
movsl
mov
xchg
outsl
sbb
sbb
sub
or
mov
xchg
frstor
scas
mov
cli
insl
or
dec
sub
sub
push
jp
mov
lcall
mov
cli
insl
or
dec
sub
sub
push
jp
mov
dec
jb
scas
xchg
rcll
out
lahf
movsb
movsl
mov
pop
sub
pop
add
out
fcomps
adc
xor
into
xlat
es
mov
dec
popf
ret
add
cmp
rol
xchg
and
jae
sbb
xor
and
jnp
push
cmp
lock
shlb
jb
xor
cmp
pushf
data16
jns
adcb
fsts
push
or
pop
imul
adc
and
shl
sub
mov
insl
sbb
add
mull
bound
cmp
fadds
clc
mull
xor
mov
loope
push
pushf
in
mov
mov
adcl
jne
lock
adc
mov
and
xchg
jns
out
data16
mov
sub
das
test
jae
or
push
stos
testl
stos
pop
outsb
jmp
orl
jg
pop
outsl
or
jns
pop
mov
ret
mov
sub
decl
pop
mov
mov
out
in
push
push
sahf
insl
inc
xchg
inc
add
fwait
xchg
push
or
addr16
xor
mov
rcll
mov
mov
mov
adcl
jns
int3
popl
cltd
out
xchg
sub
les
psubsb
test
or
lds
fiaddl
xchg
push
dec
aas
sbb
ljmp
lret
sti
jo
sahf
mov
mov
pop
and
sarb
mov
dec
fisubl
xchg
out
push
push
ficoms
outsb
jl
les
mov
adc
mov
adc
int
and
adc
pop
pushf
movsl
gs
add
mov
xor
aam
xchg
fs
sti
cmpsl
scas
pop
jecxz
xchg
cmpsb
mov
popf
push
in
jbe
icebp
js
mov
leave
cmpl
mov
xchg
mov
mov
fisubs
lahf
in
cltd
loop,pn
inc
in
or
popf
bound
jmp
loop
jp
or
xor
movsl
pop
cli
xor
movsb
push
loope
jns
sarb
ja
mov
add
xor
imul
xchg
push
mov
dec
and
xchg
nop
mov
jno
out
mov
shlb
jmp
shll
cmp
mov
mov
mov
jge
lcall
xchg
and
mov
stos
xchg
push
lret
clc
adc
in
dec
stc
imul
loope
loopne
add
sbb
mov
es
int
and
arpl
sahf
xor
mov
repnz
fsubr
popa
mov
ljmp
dec
fisubl
in
insl
test
test
jb
out
mov
xorl
dec
pop
addr16
push
ret
adc
shlb
idivb
lds
in
pop
es
xor
and
and
xchg
cmp
subb
fwait
rol
fadds
adc
jmp
cmp
lods
xchg
insb
scas
sbb
lahf
push
pop
or
xchg
mov
iret
lea
sarb
insb
pop
cmp
aaa
js
cmpsl
filds
jg
lahf
xchg
adc
insl
fwait
push
cmp
dec
popf
stc
jne
loopne
stos
cli
fmul
lret
mov
fisubl
imul
xlat
movl
sahf
inc
std
jnp
push
out
push
cmp
loope
mov
das
push
loopne
and
repnz
dec
lret
insb
les
mov
sbb
ljmp
test
jae
movsb
mov
popa
jecxz
dec
adc
adc
inc
ljmp
mov
add
mov
test
cld
push
pop
loop
xchg
xchg
xchg
bound
add
fcom
dec
inc
scas
lock
fdivl
mov
jle
push
add
das
lds
jae
cs
sub
jl
test
xor
jae
iret
gs
leave
pop
ss
test
inc
nop
icebp
pop
je
cmp
mov
out
push
mov
inc
cli
jmp
mov
xchg
add
scas
test
gs
jae
out
movsl
xor
ds
fcoml
pop
imul
lods
scas
lret
aam
xor
inc
dec
movsl
push
dec
jle
arpl
jnp
mov
mov
fwait
scas
mov
arpl
scas
mov
int3
fdivr
sbb
pop
leave
cld
adc
sbb
xchg
inc
cs
loope
pop
and
push
jb
mov
into
mov
out
push
ret
inc
ficompl
xor
xchg
or
lret
or
and
sub
push
aaa
pop
jge
jne
pop
jb
in
loope
lods
dec
dec
scas
ja
es
fwait
pop
movsb
insl
xor
stos
jns
adc
sub
jp
push
xchg
push
dec
adc
insl
addr16
jns
test
mov
sub
nop
and
or
adc
cltd
pop
pop
xchg
mov
jmp
add
repnz
hlt
sub
stos
pop
or
out
fucomip
xor
sub
inc
scas
imul
mov
sub
dec
jmp
xchg
rol
in
js
ret
mov
push
imul
mov
arpl
add
sub
ljmp
mov
int
lods
aas
cs
mov
pusha
ljmp
insl
leave
mov
or
or
pop
ret
test
mov
stos
and
add
push
aas
nop
arpl
test
rclb
xor
test
push
or
inc
sti
push
mov
test
loop
inc
add
xor
adc
sub
or
or
mov
mov
inc
adc
sbb
jl
test
pop
iret
cs
jp
adc
addb
push
xchg
inc
cli
push
sub
jnp
jge
adc
les
mov
ficompl
fwait
outsl
xor
add
fwait
mov
in
push
imul
cmpsl
sbb
cmp
cmp
pop
adc
pop
lret
sti
out
rclb
xchg
enter
mov
mov
or
inc
les
cs
sar
and
mov
push
xor
cmc
shrl
or
and
inc
mov
in
jnp
inc
loop
outsl
bound
xor
scas
push
dec
inc
dec
test
mov
imul
outsb
cmc
mov
sub
mov
xor
addr16
pop
outsl
add
test
cli
mov
cli
mov
cmp
mov
in
pop
out
in
jl
and
dec
decb
ret
add
jecxz
push
push
aam
jns
push
aad
push
bound
adc
sbb
andb
push
fsts
es
cmp
ret
mov
imul
pop
out
xor
xor
adc
sub
push
xor
es
std
out
clc
push
rcrl
lods
sub
std
xchg
gs
push
into
adc
lret
addl
test
outsb
sub
sub
psubsb
xorl
in
pop
mov
xchg
add
aam
fwait
ss
mov
cmpl
push
lock
sbb
jmp
dec
lods
pusha
sbb
mov
sub
ss
add
enter
pop
fsts
add
insl
adc
pop
dec
insb
xchg
lea
movsb
inc
lahf
das
ficoml
jmp
iret
dec
xchg
push
jno
or
dec
push
add
dec
jge
int
faddl
mov
lea
xor
test
mov
ds
xchg
outsl
repz
mov
ss
js
notb
hlt
stc
push
outsb
outsl
cld
stos
jno
mov
scas
and
adc
dec
jb
insb
mov
inc
lcall
fisttpl
mov
sbb
lret
sbb
outsb
push
jae
fs
lods
push
rcrb
cld
dec
in
and
andl
mov
movsb
incb
in
ja
imul
inc
loop
sti
outsb
push
fs
add
movsbl
dec
insb
repnz
inc
mov
shrl
xchg
mov
cld
stos
scas
xor
jae
icebp
shlb
inc
mov
popf
pop
adc
les
pusha
jp
xchg
in
rorl
testl
xor
es
roll
mov
out
jle
or
add
add
jle
sub
addb
mov
mov
cmp
sub
aaa
add
mov
mov
or
into
mov
mov
jae
les
mov
nop
mov
sub
or
add
dec
scas
pushf
addb
sbb
lret
adc
negl
iret
pop
fwait
sbb
rcll
jo
mov
inc
jbe
loope
xchg
fcompl
out
ja
and
cmp
cmp
sub
ret
adc
add
data16
shlb
fnstsw
sbb
loopne
jmp
sub
scas
fwait
cmc
in
sbb
stc
int3
cltd
ja
shll
lcall
inc
push
out
jno
pop
dec
cltd
outsb
mov
cwtl
inc
fsubrp
nop
pop
jp
loopne
aad
out
mov
sbb
inc
repz
add
lahf
or
mov
dec
outsl
mov
aas
xchg
pop
mov
dec
dec
mov
cmc
movsl
sbb
loope
cmp
outsb
aaa
lahf
sub
mov
mov
ficoms
ja
or
add
data16
idivb
xor
ss
pop
sub
push
mov
sbb
bound
test
cmp
imul
adc
or
movsl
inc
data16
dec
mov
xchg
adc
mov
pop
out
adc
shll
lods
add
add
push
loopne
pop
push
or
loope
push
pop
lods
mov
or
cltd
push
scas
jae
add
or
jmp
jbe
jae
aad
push
stos
mov
out
inc
sahf
mov
mov
mov
xchg
pusha
adc
shll
enter
push
xor
pusha
lret
and
bound
cmp
sahf
mov
pop
inc
or
popf
cmc
ss
xor
mov
mov
xor
xor
pop
add
hlt
in
xchg
xchg
xor
cwtl
imul
leave
mov
addr16
inc
rolb
jb
mov
xor
add
lea
pusha
sub
push
insb
xor
jle
aad
lods
daa
outsb
mov
or
push
fs
fcmovu
cli
add
testb
repnz
lock
out
pop
sbb
sub
nop
push
jne
mov
insb
inc
push
xchg
xor
xchg
lret
adc
scas
fisubrl
repz
ret
shrb
jp
or
lock
sbb
scas
ret
icebp
fs
ljmp
cmp
cmp
adc
mov
rorl
ret
mov
xor
imulw
jb
or
test
or
push
das
mov
repz
xchg
cmpsb
hlt
sub
lret
out
ds
rcr
cld
inc
fcmovnu
xchg
push
lods
or
xchg
aas
push
sbb
sub
shlb
mov
cmpsl
inc
and
jae
xchg
fmull
loope
cmpsb
je
xchg
sub
jae
push
mov
and
imul
add
addr16
test
mov
pop
nop
lea
stos
dec
and
lods
pushf
ret
and
cmp
pushf
mov
imul
test
or
std
sbb
iret
push
cwtl
scas
jne
adc
sbb
cmp
cltd
insb
xchg
push
mov
lcall
call
cmc
pushf
xchg
sub
pop
and
lahf
lret
sarl
in
test
push
mov
loopne
pop
bound
mov
pop
clc
scas
pop
xchg
xor
pop
setnp
add
cmp
aam
mov
test
mov
dec
ljmp
fstpl
jns
cs
mov
rol
sahf
rcll
vaesenclast
test
and
aas
push
mov
in
jle
cmp
cmp
xchg
adc
sub
inc
fisubl
insl
mov
cmc
fstl
mov
mov
xchg
jns
mov
lret
mov
popa
fildll
stos
adc
mov
repz
dec
movsl
push
sbb
imul
xor
xchg
and
jp
outsb
push
push
mov
iret
jle
imul
iret
lahf
mov
div
lods
pop
icebp
inc
mov
xor
cmp
mov
push
je
push
add
add
sbb
adc
adc
test
dec
aas
adc
add
jge
dec
cltd
dec
hlt
fildl
adcb
fbld
push
mov
lock
in
call
ja
mov
mov
fists
jae
cmc
mov
push
aaa
outsl
push
repnz
jl
pop
push
aas
movsl
ror
pusha
cmpsl
repnz
fnstsw
movsl
adc
dec
daa
jns
paddsw
xchg
and
xchg
pop
jno
jno
sbb
mov
cmp
jmp
jo
lds
mov
test
push
pop
sub
dec
push
icebp
jb
test
ret
ljmp
mov
xchg
push
ss
xor
repz
test
xchg
pushf
cmpsl
lea
push
add
adc
xor
pusha
add
or
aam
cltd
or
ljmp
addr16
dec
sub
sbb
or
mov
pop
inc
cltd
sub
nop
std
enter
aas
add
call
stos
aam
jmp
clc
sub
lcall
jb
mov
xchg
xchg
or
xchg
jmp
cs
jae
mov
mov
mov
add
xchg
pop
dec
dec
jecxz
mov
out
jg
inc
js
mov
scas
push
sbb
mov
sbb
mov
and
mov
loop
js
out
pop
aas
push
adc
xchg
roll
mov
jge
xor
decl
stos
loopne
out
adc
cmp
insl
xchg
test
pop
inc
daa
and
sar
xor
subl
test
mov
mov
repz
mov
stos
push
xchg
icebp
mov
out
mov
imul
incl
cmpsl
mov
mov
add
pop
repz
sarl
das
lock
ljmp
jb
rorb
and
adc
mov
out
push
ret
lcall
sbb
loope
dec
ljmp
pop
mov
inc
js
push
orl
xchg
leave
out
fsubrl
pushf
mov
jp
mov
fmul
add
mov
xor
mov
inc
pop
and
stc
sub
xchg
mov
sbb
nop
popa
mov
fistpll
xchg
ret
lds
fdivrp
repnz
mov
ficoms
add
inc
movsl
jno
push
out
call
outsl
xlat
mov
pop
adc
outsb
sarb
idivb
xchg
call
stos
sbb
add
cmp
sbb
sahf
mov
adc
jno
aad
sub
movl
inc
mov
adc
hlt
mov
popf
nop
push
sbb
stos
scas
mov
inc
add
lea
out
sbb
test
popa
fcmovne
xchg
mov
test
repz
loope
xchg
int
sti
jno
pop
cld
push
dec
lret
aad
xor
pop
mov
jo
inc
dec
je
xlat
in
sbb
in
out
cwtl
fwait
sbb
push
fadd
add
stos
hlt
pop
mov
and
and
cmc
xlat
push
sub
pop
outsl
inc
jne
sbb
lds
xor
int
fistpl
mov
bound
mov
hlt
fnstsw
adc
pop
mov
mov
rorb
cmp
jecxz
jecxz
mov
imul
leave
repnz
cwtl
cmc
testl
lds
mov
inc
aaa
test
add
popa
pusha
fistl
test
pop
and
scas
jl
inc
cltd
cmp
mov
xor
jns
jae
roll
push
ljmp
out
push
xchg
sbb
sbb
sub
std
dec
insb
xor
pop
sbbb
lds
cmp
push
push
adc
aaa
setg
and
enter
sbb
and
mov
add
aas
sub
push
xchg
jns
add
mov
js
mov
lods
ret
dec
test
rolb
sbb
pop
stc
in
cltd
fcmovne
jge
dec
int
pop
scas
aas
inc
cli
shlb
sub
mov
out
add
lods
cmp
loopnew
jns
xchg
int
inc
test
enter
pop
insl
mov
sbb
sahf
cmc
outsl
mov
jge
aad
pushf
rcl
sub
out
ret
push
test
int
cmc
data16
xor
push
push
xor
mov
adc
or
daa
sti
and
out
inc
enter
fisubrl
adc
xchg
jp
test
insl
jae
push
dec
in
jecxz
push
out
xorl
pop
stos
mov
push
jecxz
xor
pop
mov
and
stos
mov
jecxz
xlat
and
sbb
xor
sub
xchg
stos
outsl
push
xchg
xor
cmp
lret
cmp
mov
loopne
or
fists
out
pop
bound
popa
cmp
ss
arpl
cmp
popf
ret
outsl
pushf
pop
and
jne
orb
repnz
sub
fsubrl
inc
mov
push
rcll
push
inc
imul
pop
add
outsl
nop
aaa
imul
cwtl
stc
mov
sarl
adc
sti
out
scas
jp
mov
jmp
push
data16
jo
push
lock
sbb
fs
sbb
lods
hlt
lods
sbb
popf
stos
cmp
aaa
push
cmpsl
cmp
cmpsl
push
cwtl
jmp
or
out
sub
push
sub
add
cwtl
nop
repnz
sub
dec
jo
test
dec
sbb
mov
sbb
push
icebp
pop
and
dec
add
xor
add
mov
inc
ret
loope
cmp
jne
dec
cmp
dec
jge
xor
sub
or
aam
arpl
jge
push
dec
xor
sti
add
pop
lahf
aaa
in
inc
test
pop
xor
xchg
pop
dec
and
aam
add
xlat
scas
shrl
lea
outsb
in
jae
ret
jb
jmp
adc
sti
test
test
pushf
rcl
pop
dec
out
repz
mov
mov
or
adc
sbb
inc
dec
dec
rorl
leave
leave
lret
insl
add
xchg
lea
test
xchg
in
aaa
pop
lcall
adc
jb
push
ja
mov
mov
arpl
cmp
popf
repnz
loop
sbb
fidivl
xchg
jecxz
shl
jp
pop
adc
push
and
sub
loop
outsb
inc
fwait
mov
cmpb
sbb
sahf
and
xor
adc
push
fcos
jle
arpl
cmp
dec
mov
jecxz
mov
xchg
push
out
dec
orb
pop
push
int
cmp
sub
test
in
shr
ja
lret
jl
xor
mov
sbb
xor
xchg
cmp
jl
push
ret
out
mov
xchg
popf
add
push
cmpsb
aad
inc
sbb
inc
and
add
jge
cmp
mov
jle
test
cmp
cltd
push
lods
inc
xchg
mov
nop
sarl
cmpsl
push
test
pusha
ljmp
pop
jo
push
inc
pop
rcrb
pop
mov
lcall
sub
push
test
push
and
xor
ja
and
stos
call
cmp
cmpsb
shlb
addr16
push
jle
push
sbbl
data16
aam
sar
xchg
cmp
push
inc
xchg
insb
lock
lock
mov
das
fmull
nop
and
popa
loopne
xor
add
pop
push
cmp
rolb
fdivl
jmp
shlb
shrb
hlt
lds
mov
pop
ds
mov
mov
cs
in
imul
lret
push
dec
cli
xchg
jo
inc
data16
push
adc
push
or
sub
jmp
push
orl
xchg
mov
and
or
inc
cmp
xor
inc
les
ret
test
or
rolb
scas
push
or
outsb
and
clc
std
mov
into
aad
xor
sbb
jp
pop
divl
std
hlt
mov
or
int
jg
pop
ljmp
mov
aas
mov
mov
test
das
add
mov
in
push
xchg
repnz
mov
mov
mov
out
mov
pop
adc
adc
mov
bound
orb
cmp
mov
cmp
add
andb
les
lds
push
and
mov
push
push
jae
lcall
mov
cli
insl
or
dec
sub
sub
push
jp
mov
lcall
mov
cli
insl
or
dec
sub
sub
push
jp
mov
ror
rcr
mov
ljmp
dec
sub
sub
dec
pop
jp
mov
lcall
mov
cli
xchg
cmc
xorb
ret
repnz
loop
push
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
or
stos
push
cwtl
ja
sub
fmuls
les
call
dec
mov
push
lcall
push
cli
cmp
sub
fimull
enter
call
jp
push
lcall
jno
add
adc
and
xor
cmp
repnz
lea
cmp
and
pop
out
add
and
or
jecxz
imul
roll
cmpsb
fldl2t
fwait
push
or
cld
jnp
push
jae
mov
inc
loope
iret
add
jmp
fistl
lahf
mov
arpl
cmpsl
call
jb
xchg
in
cmpsl
mov
mov
lret
or
dec
inc
or
lahf
les
pop
pop
or
insl
in
mov
pop
or
pop
fidivrl
out
sbb
xlat
or
ret
lret
sbb
xor
addr16
jne
jmp
cmp
hlt
cli
push
jg
push
sub
or
and
bound
test
js
mov
add
sub
in
dec
in
cmpsl
clc
cs
dec
std
jnp
imul
push
lret
and
xor
rorb
cmp
sub
pop
orb
mov
into
dec
jns
imul
mov
mov
lods
dec
xchg
cmc
push
fistl
mov
leave
dec
into
or
insl
mov
pop
xchg
inc
dec
mov
dec
stos
adc
cmp
sub
jne
in
sbb
fwait
je
or
cmp
sub
fmuls
enter
call
jp
push
lcall
push
cli
cmp
sub
fmuls
enter
call
jp
push
lcall
jnp
and
cmp
inc
add
mov
lahf
jns
mov
cmpsb
loopne
jmp
ja
cmp
aas
out
cld
pop
sub
jne
mov
adc
pop
jg
imul
mov
mov
loopne
mov
sub
inc
repnz
mulb
pop
ret
dec
push
fsubrs
cmpsl
inc
fdivr
cmp
sub
mov
pushf
mov
cld
add
jae
adc
sarl
in
mov
dec
jle
cmp
aaa
push
mov
adc
fisubrs
push
dec
pusha
pop
test
pop
xchg
scas
jno
test
lds
xchg
in
inc
mov
dec
mov
hlt
fcomi
xchg
loop
mov
adc
cmc
lret
in
and
xchg
ljmp
outsl
jae
aad
push
xor
dec
inc
shl
xchg
or
sarl
das
mov
int
scas
cmpsl
scas
xchg
das
xchg
mov
and
outsb
les
in
push
int
jl
mov
jmp
dec
xchg
mov
jbe
pop
divb
adc
dec
int3
mov
push
pop
jne
dec
mov
lea
or
lock
mov
xor
jno
dec
out
cltd
pop
addr16
push
dec
mov
pop
inc
mov
mov
inc
popa
mov
mov
sbb
mov
and
push
or
or
xor
stos
popa
mov
or
and
xlat
inc
fldt
and
dec
cwtl
mov
inc
loope
pop
inc
mov
add
pop
sarb
jne
ficompl
jp
dec
pop
orl
jmp
xchg
cmp
mov
nop
jge
mov
sbb
pop
fwait
add
movzbl
dec
loop
add
fs
lea
jp
outsb
ret
stos
dec
dec
push
nop
push
into
test
inc
and
std
pop
ljmp
cmpsb
push
xor
lret
cmp
rep
jmp
dec
popa
pop
sbb
stos
xchg
cmp
cmpsb
inc
pusha
sti
mov
mov
out
in
adc
rorb
push
icebp
stc
mov
cmp
hlt
aas
push
outsl
popl
cmp
jbe
addr16
push
pusha
test
insb
add
or
xor
and
jmp
lea
cmpsb
popf
mov
mov
pop
inc
movmskps
int
scas
xchg
pusha
sbb
repz
fstl
jl
and
cltd
stc
lock
or
popf
repz
popa
jg
xchg
sub
lods
mov
inc
push
data16
addl
aam
mov
gs
lea
es
jb
lea
fimull
inc
es
sbb
xchg
add
lahf
jge
aaa
aam
adc
lret
fidivrs
das
jae
out
lret
stc
roll
and
cmpb
je
xchg
test
pop
xor
cmp
rcrl
mov
in
push
jl
movsl
pop
sbb
mov
mov
or
pusha
sbb
movaps
mov
ret
mov
inc
or
fldl
mov
cld
xchg
mov
inc
sbb
cmp
ret
imul
out
cmp
add
push
sub
add
lea
pusha
iret
dec
ret
subl
ret
push
jo
subl
add
cs
pop
mov
and
add
fs
and
in
loop
mov
stc
in
aad
int3
in
je
jne
jmp
dec
mov
cmpsl
testb
das
xor
repz
xchg
fwait
testl
jb
dec
mov
pop
orl
test
pop
cmp
aad
out
lds
dec
push
push
outsl
ret
addr16
cmp
push
fmull
stos
add
jno
mov
sbb
call
xchg
outsb
jno
popf
and
cltd
mov
sbb
fwait
cmp
sbb
dec
push
xchg
dec
jnp
outsl
and
lea
mov
jge
rcl
leave
xor
sbb
mov
dec
jb
test
push
fcmovnu
mov
xchg
cltd
lea
fidivl
cmc
add
dec
std
sbb
jae
push
xchg
aaa
int
cmp
mov
mov
out
lcall
add
xchg
mov
xchg
cmpsb
dec
es
and
sub
fmul
inc
mov
mov
jns
and
stos
scas
repz
inc
mov
xchg
bound
mov
sbb
inc
ret
sub
test
xlat
fs
and
push
je
outsl
dec
sbb
inc
and
gs
mov
mov
or
xor
add
jo
int3
pop
sub
dec
adc
ror
cs
push
mov
xchg
shlb
test
xchg
xchg
scas
aad
xor
fildll
clc
sbb
ret
add
jb
leave
jbe
dec
jo
or
sbbb
popf
fimuls
ret
xchg
push
popa
cld
mov
sbb
mov
fsubr
xlat
loopne
addb
or
sub
or
mov
stos
push
and
fisttpl
sbb
loope
xchg
inc
cmp
cld
push
adcl
dec
pop
pop
mov
xor
cmp
out
mov
int3
and
mov
pop
xor
push
jg
fistl
sub
pop
inc
sub
dec
lret
lock
push
cmpsl
out
sbb
inc
fdivrs
enter
sub
pop
xchg
mov
dec
fwait
mov
lock
mov
shrb
sarl
ds
bound
incl
mov
cmpsb
je
jmp
mov
ret
push
xor
xorl
out
push
rclb
bound
fisubl
stos
push
xor
mov
sub
cltd
pop
stos
mov
out
dec
and
mov
pop
rorb
js
popa
jl
mov
shlb
ret
fstps
xchg
mov
xor
mov
nop
jg
sbb
ss
xchg
arpl
test
sahf
inc
jb
shlb
fistl
and
mov
lods
mov
sbb
inc
cmp
shll
cmp
push
mov
in
dec
inc
xchg
mov
insb
mov
adc
lods
cwtl
sahf
jae
fmull
cmp
fs
xchg
or
dec
repz
loop
mov
loop
imul
add
mov
and
ss
in
int
sub
outsb
or
xchg
fdivp
repnz
shrb
cld
jl
jns
jp
lods
popa
inc
nop
push
sub
fildl
adc
add
cwtl
push
add
sub
sub
je
mov
out
std
hlt
movsl
xchg
xor
loop
mov
mov
cmpsb
and
outsb
jmp
xchg
and
sti
inc
sbb
lock
js
push
mov
xchg
lea
mov
out
ljmp
gs
fsubrs
lahf
cmp
or
lea
xchg
inc
popa
mov
rorl
fbld
arpl
repnz
dec
ret
cmpsl
xchg
fs
push
pop
addr16
sbb
or
fsubrp
shlb
push
or
mov
pop
imul
jns
fdivs
pop
out
ss
out
xchg
sbbl
add
pop
scas
inc
out
shlb
stos
lds
popf
jbe
mov
add
pop
and
pop
mov
mov
push
mov
test
pushl
jne
imulb
repz
push
out
push
xor
je
jp
mov
xor
neg
in
mov
popa
inc
push
test
mov
imul
sub
mov
fisubs
xor
nop
cmp
inc
testl
inc
push
icebp
pop
dec
inc
mov
das
mov
pop
cmc
shl
cmp
cmpl
mov
outsb
xor
sti
push
ret
inc
xchg
and
leave
rcl
push
movsl
add
test
add
lahf
dec
jl
fmuls
adc
and
inc
push
cli
es
cwtl
sbb
sti
out
add
jp
jmp
fbld
sbb
pop
mov
or
sub
inc
sub
icebp
xlat
mov
fimuls
mov
jb
mov
aas
ja
hlt
mov
lea
add
lret
dec
xchg
es
ror
pusha
xor
loopne
pushf
les
mov
hlt
fbstp
sub
movl
xchg
std
divl
shll
sub
movsl
shrl
mov
pop
push
xor
push
xor
adc
int
jle
add
lock
in
sub
sbb
pop
test
lea
ss
xor
mov
jnp
sub
cmp
adc
lret
mov
add
add
jge
lock
idivb
xchg
push
pop
mov
gs
jmp
jnp
cwtl
mov
fdivrp
sbb
push
dec
sub
pop
movsb
jecxz
cmp
insl
scas
hlt
jae
mov
push
inc
fcompl
shlb
mov
movsb
pop
sar
inc
in
cmp
ficoml
pop
mov
rolb
add
outsl
imul
sbb
test
lock
mov
jmp
and
or
pop
das
jbe
shrb
push
jo
test
inc
add
mov
scas
fcompl
outsb
daa
data16
clc
jns
and
test
pop
pop
fildll
jno
cli
fnstcw
pusha
jecxz
dec
ljmp
sbb
push
xor
addr16
jns
dec
inc
push
outsb
dec
or
lock
add
pop
and
xor
lods
cld
dec
icebp
or
int
jnp
outsb
js
inc
dec
iret
insb
fwait
repz
inc
cli
jg
div
repz
add
fldl
mov
dec
repnz
loope
test
xor
and
push
sbb
stos
in
sbbl
jl
fisubrl
mov
sahf
lods
loopne
in
sahf
mov
cmp
sbb
cmp
lret
in
into
mov
push
bound
mov
roll
cltd
les
fstps
adc
sbb
push
push
mov
test
idivl
inc
popf
ror
aas
push
ljmp
pop
cmc
add
mov
test
into
push
cmpsl
in
push
popf
mov
inc
sbb
leave
cmc
pop
scas
push
cmc
mov
push
sbb
inc
int
jbe
and
add
and
int
pop
dec
movl
dec
or
scas
inc
test
push
hlt
sahf
jp
jbe
xor
adc
cmp
jns
adc
fidivs
push
sbb
fldcw
test
leave
push
add
mov
cmp
lret
lock
or
and
sti
jne
das
jo
fistpll
sbb
push
mov
nop
lret
cs
and
mov
cltd
ficoml
fstpt
test
add
insl
or
mov
push
ja
fsubl
dec
cltd
push
adc
std
or
lret
movsb
leave
push
jle
sub
jmp
mov
testl
je
in
in
inc
jge
inc
jp
or
lahf
mov
jbe
ret
sub
cmp
loopne
cmp
ror
push
inc
mov
arpl
sub
sti
std
pop
cld
arpl
sahf
pushf
dec
pusha
pushf
in
ja
stos
ds
mov
push
imul
out
mov
add
jg
jl
inc
mov
lea
mov
mov
out
ja
push
jnp
sbb
js
cs
sahf
pop
rcl
out
push
ret
mov
cli
or
out
ss
pop
out
fldenv
jge
xchg
inc
test
mov
cmpsb
sbb
sbb
insb
scas
push
lods
fdivrl
xor
call
push
sbb
das
xchg
js
adc
popa
or
jle
lea
or
pop
jp
add
xor
adc
leave
in
jl
in
ffreep
cltd
mov
jo
mov
push
mov
push
scas
das
test
in
mov
mov
out
mov
jns
fwait
mov
mov
mov
imul
pop
or
pop
dec
mov
sbb
cmp
jmp
mov
push
pop
ret
ss
xchg
xchg
inc
jp
repz
push
lcall
lock
push
push
adc
outsb
inc
xor
jl
movsb
push
ja
dec
scas
lock
or
mov
pop
and
xchg
shl
mov
rorb
mov
lds
rcll
bound
mov
add
cltd
jle
and
dec
fwait
stos
mov
std
sbb
push
nop
cmp
inc
pop
cmp
mov
xor
mov
pop
mov
inc
gs
iret
popf
and
mov
cmp
cmc
adc
push
xorb
lret
pop
adc
icebp
enter
sbb
repnz
stos
in
jno
dec
cmpsl
inc
xor
in
shrl
push
iret
stos
sbb
sub
cmpsl
jecxz
xor
dec
je
mov
rcr
jge
add
daa
outsb
outsl
stos
pop
imul
test
test
lret
test
out
or
mov
faddl
xchg
xchg
xor
sub
repz
pushf
mov
mov
popf
mov
nop
jl
fistps
push
add
dec
jb
fbstp
cltd
push
mov
adc
stos
push
push
repz
sahf
cmp
loopne
addr16
out
pop
pop
cltd
in
adc
test
xor
add
jl
les
lea
test
cmp
push
hlt
xchg
lods
stos
sti
jo
xchg
mov
lods
sub
fistps
mov
push
pop
aas
cld
jl
pop
dec
enter
dec
pusha
outsl
add
daa
movsl
cmpsl
xor
sbb
insb
cwtl
popa
push
push
fcmovu
roll
or
pop
mov
sarb
hlt
out
jl
sub
roll
arpl
sar
xlat
xchg
adc
push
cmpsb
cmp
int
xor
imul
pop
inc
jns
icebp
mov
push
dec
push
lcall
fldt
and
sbb
movl
enter
cwtl
shlb
imul
iret
fnsave
add
add
aaa
push
arpl
mov
call
lods
cmc
adc
jle
sbb
sub
xor
into
pop
sbb
mov
xchg
imul
add
addb
cld
xor
mov
and
icebp
shl
pop
dec
in
jl
mov
out
jmp
dec
inc
dec
mov
in
push
test
das
sub
xor
jno
and
pop
stos
call
push
mov
jge
sub
mov
daa
or
cmp
and
xor
call
les
fstl
in
rcll
dec
jmp
push
shll
scas
or
sbb
pop
cmp
sbb
into
mov
adc
ud1
xor
pop
jae
jl
push
fdivrp
sbb
adc
sbb
test
fistpl
push
or
xchg
add
dec
jno
fimuls
fwait
adc
lahf
and
xlat
add
ret
cmp
jge
leave
call
loopne
cmp
cmp
push
sbb
outsl
mov
fisttps
lcall
cwtl
mov
pop
pop
mov
movsl
nop
add
fdivp
fnstcw
es
stos
iret
stos
add
xor
call
ja
idivl
or
test
mov
mov
sbb
rol
jge
or
sarw
in
ss
and
sbb
push
scas
icebp
jo
dec
xchg
jecxz
cwtl
cmp
les
aad
xchg
mov
inc
jmp
pop
aaa
mov
mov
inc
mov
mov
rcll
sbb
pop
aaa
aad
std
pop
inc
sub
mov
bound
jne
jp
mov
mov
out
mov
pushf
lret
fwait
adc
or
jecxz
fiaddl
je
xor
in
jns
add
pusha
sub
xchg
mov
incb
jno
dec
and
cmp
or
loop
xor
xor
push
pop
iret
cmp
mov
insb
pop
fdivl
scas
sbb
dec
push
push
xchg
xchg
mov
nop
mov
out
out
push
adc
dec
sbb
xchg
into
mov
sub
add
push
cmpsl
mov
out
jns
push
add
sarb
mov
movsb
push
xchg
jne
dec
test
call
pop
out
mov
sbb
mov
lret
xchg
push
fcomp
aas
jae
insb
sbb
adc
icebp
test
mov
movsb
push
mov
jecxz
inc
lcall
int
xchg
les
outsb
push
enter
lcall
insl
dec
sub
pop
test
xchg
pop
std
test
ss
sbb
mov
mov
jle
icebp
les
cmp
push
int3
lret
add
ret
lds
and
cmp
bound
xchg
shl
add
xor
call
leave
adc
in
fstps
jge
ret
repnz
xchg
add
aaa
ret
loope
add
dec
mov
and
pop
sbb
pop
ret
mov
sub
pushw
push
aaa
gs
sti
fldcw
cmp
stc
inc
and
pushf
or
mov
inc
xchg
mov
push
popf
fidivrl
adc
daa
jne
jmp
pop
lds
pop
mov
imul
arpl
adc
cltd
loopne
adc
mov
add
dec
loope
aam
push
push
push
out
pop
scas
cmp
jno
shrb
les
mov
add
push
jne
addl
test
lahf
negl
test
fimull
mov
adc
test
dec
dec
sub
push
jae
mov
arpl
mov
jne
iret
lcall
jmp
leave
addb
jl
mov
xchg
jg
push
cwtl
test
incl
cs
popf
mov
adc
xchg
mov
loope
orl
aam
xor
mov
push
fisttpl
mov
adc
xor
fisubrl
aad
or
cmpsl
ss
hlt
xor
jecxz
cmp
iret
add
aam
in
fistpll
mov
mov
pop
shlb
sbb
orb
xchg
jmp
pushf
stc
popf
pop
fs
jae
es
jno
movsb
aas
or
inc
push
xor
cmc
fmul
dec
push
lods
leave
push
and
mov
jo
lcall
fwait
sar
and
xor
pop
cmpsl
and
sub
stos
jbe
jne
loopne
push
sar
mov
popa
inc
jl
cmp
and
fimull
pushf
rol
jecxz
add
push
sbb
adc
dec
add
repnz
mov
or
movsl
inc
in
mov
mov
mov
mov
cmp
ss
xchg
jnp
fwait
roll
je
insb
cli
cmpsl
out
js
sarb
jmp
sub
mov
push
xchg
push
adc
mov
sub
sarl
adc
ss
cwtl
jl
loop
jmp
mov
cmpb
popf
out
lret
or
push
les
out
iret
add
popa
sarl
push
aas
mov
and
sbb
xchg
dec
fucomp
fisttpll
fwait
pop
sub
arpl
adc
lods
out
test
xorb
mov
sub
adc
cmp
push
pop
cmp
pop
mov
lods
push
insb
ret
jns
dec
cli
add
fwait
loop
ja
add
sarl
mov
int3
imul
mov
or
cmp
cltd
fdivrs
pusha
aad
xchg
mov
add
jb
negb
test
mov
push
in
push
jne
ret
inc
dec
push
test
mov
pop
jne
push
addr16
sbbb
inc
pusha
hlt
insl
push
cmp
pop
mov
lret
mov
cld
jne
fsubp
outsl
mov
or
inc
jmp
aaa
std
cmp
scas
arpl
jae
aad
or
leave
push
subb
push
xor
popa
bound
xchg
mov
push
add
jae
cwtl
outsl
repz
clc
and
mov
adc
mov
imul
mov
fwait
jno
xchg
mov
cmp
pop
xchg
jb
mov
cmp
scas
ja
pop
and
inc
cli
xor
push
sarb
jp
aaa
dec
inc
sbb
xchg
xchg
sub
outsb
cmp
pusha
cmp
xchg
xchg
jl
sub
pushf
push
inc
pop
push
adc
jo
mov
dec
ss
cmp
jle
adc
and
clc
mov
push
loop
xlat
pushf
andb
lcall
mov
inc
xchg
icebp
push
das
dec
mov
pusha
outsb
lods
pop
mov
dec
dec
ror
cmp
add
adc
enter
sbb
rclb
pop
das
dec
fistl
lea
dec
xlat
xor
xchg
in
add
jp
cli
mov
sub
mov
or
in
insl
aaa
mov
sbb
sbb
aas
stos
cmp
xchg
rorb
jbe
dec
mov
mov
fcoml
inc
add
cmp
lret
add
in
testl
mov
cmp
mov
fsubs
cmpsl
testl
dec
es
stos
push
cli
cmp
sub
fmuls
enter
call
jp
push
lcall
push
cli
cmp
sub
fmuls
enter
call
jp
push
lcall
push
cli
cmp
sub
fmuls
enter
jmp
jp
imul
js
push
cli
cmp
sub
fmuls
bound
adc
ja
inc
xchg
push
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
