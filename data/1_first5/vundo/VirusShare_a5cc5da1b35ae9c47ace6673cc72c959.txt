inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
add
add
test
lock
sbb
add
add
or
add
add
add
add
mov
xlat
add
add
add
jo
test
inc
pop
xor
dec
add
push
add
mov
add
add
lds
dec
add
add
or
faddl
add
lock
add
add
test
sbb
add
add
add
bound
cltd
add
popf
add
add
add
add
cwtl
add
dec
add
sub
sbb
sbb
add
inc
add
dec
add
add
push
add
add
inc
add
dec
add
add
dec
add
add
popf
add
mov
adc
sbb
add
or
add
xor
mov
sub
sbb
add
or
ret
add
mov
lcall
add
add
popf
add
dec
add
pop
add
add
add
lea
ret
add
mov
mov
sub
sbb
add
add
mov
mov
push
add
add
add
add
or
add
add
dec
add
add
add
add
loopne
cmp
push
add
mov
add
test
cltd
add
sub
add
add
xlat
add
add
add
pop
add
add
add
add
add
sub
xchg
add
add
mov
test
aad
stc
add
add
add
sbb
add
push
jmp
add
add
add
fwait
add
add
add
sub
push
add
inc
add
dec
add
add
add
add
outsl
add
add
add
add
sbb
add
add
add
adc
mov
movsb
add
add
add
enter
pop
add
add
add
push
sbb
add
add
in
roll
inc
add
push
add
or
sub
add
mov
mov
aad
lea
movl
popa
add
push
add
add
testl
sub
add
outsl
add
add
add
add
add
add
add
bound
aad
dec
add
or
pushf
add
add
xor
add
push
add
add
test
dec
add
add
add
ret
add
add
add
add
add
add
aas
add
add
add
add
out
add
inc
add
ltr
add
add
add
add
add
add
add
add
add
add
aas
add
sbb
add
add
cltd
add
sub
ret
add
add
mov
sub
push
add
add
pop
add
test
dec
add
add
bound
dec
add
add
adc
sub
pop
add
add
pop
add
or
popf
add
stc
add
add
add
add
cltd
add
adc
bound
or
dec
add
bound
popa
add
add
lcall
add
add
add
add
add
add
int
inc
add
add
add
add
jl
mov
ja
add
pop
add
push
add
add
add
add
add
test
insl
add
xor
jle
arpl
ret
stos
ficomps
push
xor
inc
xchg
mov
data16
cwtl
xlat
sub
je
mov
jns
outsb
pushf
inc
or
and
repz
gs
adc
inc
sahf
mov
or
shlb
lea
xchg
xchg
sbbl
xchg
jnp
add
lgs
leave
popa
repnz
es
mov
mov
in
jmp
dec
fmull
cmp
sbb
fidivrl
xchg
pop
and
and
orb
subb
fisubrl
mov
pop
cli
jno
lcall
cmp
lcall
mov
out
in
fwait
pop
lock
dec
push
lret
and
popf
das
mov
sub
adc
mov
dec
scas
push
imul
in
std
lret
ret
decl
enter
rcrb
mov
mov
mov
out
imul
sbb
std
scas
cmp
or
xor
jne
loopne
cmp
lret
into
push
aas
adc
cmpb
inc
cmc
jnp
sahf
sub
jbe
cmc
mov
jge
inc
dec
iret
cld
std
sub
push
inc
push
cmp
and
rorb
cmp
mov
outsl
out
sub
popf
arpl
stc
jae
fcoms
add
lds
xchg
cmp
mov
addb
fidivrs
xchg
fnstcw
cmp
adc
lret
push
inc
mov
xor
jns
out
adc
xor
out
or
dec
inc
xor
mov
push
mov
rcrb
fisubrs
dec
xchg
pop
out
pop
scas
adc
mov
mov
iret
cmpsb
std
dec
xor
dec
lock
mov
out
mov
add
mov
pop
out
inc
fisubrl
cmpsl
push
adc
cs
cmp
sbb
sub
out
push
je
xor
test
mov
loop
hlt
sti
dec
js
add
adc
add
jns
xchg
cmpsb
pop
inc
jno
aad
loope
shlb
inc
out
adc
dec
out
sub
xchg
int
bnd
mov
pop
rol
dec
add
inc
out
leave
push
stc
arpl
push
outsb
aad
mov
pop
daa
dec
out
movsl
push
pop
mov
addl
lods
pop
arpl
jmp
jge
xchg
out
call
inc
inc
jae
pop
daa
cmp
mov
test
in
imul
lods
xchg
cmp
adc
ss
gs
data16
pop
daa
push
out
push
push
dec
sbb
mov
mov
xchg
mov
sbb
or
test
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
lods
ret
sub
sbb
or
cmpsb
dec
idivb
xchg
xchg
mov
push
mov
add
cli
int3
daa
int3
aaa
cmp
sub
sbb
xchg
cmpsl
dec
cltd
mov
outsl
mov
sub
pop
fsubl
int3
aaa
cmp
sub
sbb
or
jl
insb
fistps
test
jmp
jno
push
mov
xchg
push
mov
xchg
testl
scas
test
and
js
mov
inc
jl
les
or
arpl
pop
cmp
mov
add
add
adc
lods
xor
mov
mov
out
xlat
push
cmp
mov
data16
inc
hlt
sub
pop
repz
sti
sub
cmp
loopne
jl
inc
cmpsl
mov
ret
popf
cwtl
fs
adc
dec
rcll
sub
sbb
xchg
mov
xchg
pop
dec
dec
aam
flds
int3
xchg
pop
je
mov
xchg
xchg
mov
pushf
enter
xlat
mov
jmp
outsl
in
push
int
arpl
negl
or
jl
insb
xchg
pop
cmpsl
dec
and
pushf
mov
cmp
stc
fdivrl
int3
add
jo
inc
fwait
aas
and
cli
sbb
sub
aam
push
daa
repz
mov
js
push
mov
xchg
push
aad
lds
test
shll
xor
lahf
pop
mov
inc
dec
mov
aaa
jg
sub
cmp
cmpsl
dec
mov
inc
lods
push
pushf
mov
pop
in
pop
fsubl
int3
aaa
cmp
sub
sbb
or
jl
insb
xchg
pop
cmpsl
dec
mov
inc
lods
push
pushf
mov
pop
in
pop
fsubl
int3
aaa
cmp
sub
pavgb
je
addr16
pop
repz
mov
stos
pushf
cmp
leave
push
test
push
daa
rep
pop
mov
jge
dec
jo
add
jle
push
pop
dec
pop
inc
popa
adc
insl
dec
cltd
inc
sub
xchg
lods
nop
xchg
push
shll
pop
inc
std
or
mov
out
jbe
xchg
aam
or
mov
jne
mov
scas
mov
mov
push
mov
mov
lcall
or
fmull
clc
ret
jmp
rcrb
scas
sub
xchg
mov
arpl
in
lea
lea
daa
sar
cmp
xchg
sbb
mov
pop
jbe
aas
xchg
pop
xor
daa
bound
cmc
enter
adc
test
movsb
xorb
insl
stos
repnz
add
js
cmp
js
xor
scas
mov
shrd
cmp
mov
dec
add
xor
je
les
std
mov
mov
dec
rorb
xor
pop
fisubrl
gs
pop
push
fwait
mov
xchg
sbb
mov
out
test
pusha
mov
in
in
rcrb
dec
xor
out
test
inc
lods
jo
into
rcrl
cmp
mov
jle
std
sarb
jo
mov
and
in
add
fdivl
nop
daa
outsl
dec
sbb
dec
jl
into
jge
push
imul
testl
lahf
iret
sub
cs
mov
mov
inc
popf
repnz
es
int
bnd
pop
stos
lea
rorb
loopne
inc
mov
lods
pop
sbb
pusha
rorl
testl
lcall
loope
mov
mov
cmp
cltd
mov
repz
jns
sub
jno
or
cmp
xchg
dec
test
pop
popa
mov
fists
mov
int
mov
cs
clc
mov
rdpmc
rcr
test
in
mov
dec
xchg
adc
ljmp
xchg
dec
je
pusha
ljmp
and
rcrl
adc
leave
mov
int
in
popf
stos
pushf
xchg
stc
scas
test
in
adcb
ds
std
movsl
cmc
xor
push
sbb
xor
dec
add
jae
xor
cmc
pop
aaa
add
pushf
mov
mov
dec
adc
sbb
std
int
sub
push
ror
sti
bound
in
insl
lretw
lods
mov
pop
jo
add
aam
push
jg
mov
imul
cmp
push
fistps
into
aam
jmp
pusha
add
insb
fnstcw
ret
mov
add
jo
sub
out
mov
add
outsb
repnz
jmp
mov
aam
xor
push
popf
mov
mov
fwait
add
fwait
mov
add
mov
aam
jne
xchg
xchg
lcall
dec
push
push
das
lea
fcompl
push
shll
xchg
adc
push
xchg
xlat
aam
test
mov
jecxz
mov
xor
iret
add
lds
xchg
inc
jmp
dec
inc
cmp
xor
adc
lods
fimull
aas
stos
cmp
adc
pop
ds
hlt
or
dec
ret
jo
inc
xor
out
dec
push
fidivrs
xchg
pop
inc
jns
sahf
pop
gs
sbb
xchg
insb
cltd
jo
stos
pop
mov
fstpl
push
lcall
mov
sub
sub
loop
into
jg
decb
xor
ljmp
cld
dec
aaa
lock
mov
ljmp
fldl
lcall
push
mov
es
sarl
inc
inc
les
and
adc
fsubrl
inc
pop
in
mov
or
in
pop
mov
out
sub
push
xor
lock
cmp
aas
or
xor
jecxz
mov
mov
xchg
mov
push
lock
cli
sub
push
jbe
popl
int
jae
fbld
jnp
pop
jp
mov
out
pop
scas
lea
imul
and
ret
ret
jo
adc
add
mov
mov
sub
sbbl
cmpsb
mov
cmp
push
mov
jge
mov
cmp
bound
aad
call
sbb
arpl
xchg
inc
aad
repz
jecxz
das
stc
int3
aad
mov
xor
mulb
data16
loopne
cmc
jmp
adc
iret
inc
push
push
inc
xor
loopne
cmp
in
sub
test
lcall
mov
ljmp
adc
cmp
ljmp
jmp
cmp
shll
in
lret
jle
fmuls
push
mov
dec
popf
lret
imul
push
mov
add
addb
push
pop
call
das
lods
mov
cmpsb
movsb
or
and
mov
xlat
jecxz
jnp
jne
mov
sub
pushf
and
fadds
xorb
rol
jge
pusha
frstor
cmp
out
insb
push
jne
jecxz
repz
rorb
in
mov
jge
cltd
lods
pop
pop
mov
jno
int
fnstenv
or
lock
rclb
dec
dec
mov
push
xchg
leave
mov
fucomi
sub
in
stos
push
adc
jg
or
and
pusha
xchg
lds
mov
xor
fwait
xchg
or
or
sbb
mov
pop
sub
pop
mov
or
cld
shlb
or
mov
pushf
jp
or
mov
sub
pop
sub
dec
add
inc
adc
inc
add
fs
mov
cmp
push
pop
std
data16
and
jle
inc
mov
cmp
jae
cwtl
mov
fucomip
jnp
mov
arpl
repnz
pop
mov
loopne
xor
cwtl
adc
mov
mov
pop
ret
ss
xchg
xchg
and
shll
dec
std
mov
in
cltd
inc
xchg
push
mov
dec
push
jp
sub
test
shrb
fdivr
leave
loope
cmp
sub
jge
cmp
push
stc
mov
dec
ljmp
jecxz
xchg
shrb
cmp
aad
xchg
inc
sbb
cmpsb
push
dec
movb
in
test
inc
jo
cmpl
mov
jp
jle
iret
les
jle
xlat
mov
mov
test
inc
inc
pop
xor
or
jl
dec
push
push
into
adc
pushf
scas
shrl
lock
mov
mov
repz
xchg
insb
ret
mov
inc
and
insl
jb
add
push
in
sub
movsb
les
mov
and
inc
cmp
mov
dec
push
fmull
mov
pop
fs
rcr
or
out
movsb
out
repz
cmp
idivb
push
arpl
divb
sbb
cmp
fdivs
loop
outsl
push
mov
adc
mov
mov
aam
mov
xchg
inc
sbb
dec
ret
loop
add
push
lods
lcall
jg
pusha
loop
ss
and
fwait
adc
dec
ret
jnp
pop
cmpl
adc
fnstenv
jge
xor
mov
mov
fcomps
sbb
xor
cmp
dec
pop
inc
mov
fnstcw
int3
sub
dec
loop
movsl
fisubrl
mov
test
dec
mov
shll
pop
inc
movsl
jo
fldl
hlt
into
aas
in
push
add
into
mov
mov
add
out
cmp
cmp
pop
push
cwtl
xchg
test
in
mov
sbb
out
push
xchg
inc
adc
add
add
sub
sbb
pop
jnp
fucomip
pop
test
pop
movsb
lods
xchg
lods
cmp
notb
and
test
js
xor
jmp
inc
std
xchg
pusha
pop
dec
mov
sub
mov
xchg
xchg
mov
adc
mov
jmp
pop
xor
lret
xchg
mov
out
and
bound
add
into
xor
mov
or
repnz
pop
push
and
stos
je
mov
iret
pop
jp
test
shlb
scas
xchg
pop
or
mov
popf
rcll
mov
in
jmp
mov
mov
or
testb
rolb
jge
xchg
outsb
mov
cltd
hlt
push
imul
in
mov
xor
jmp
arpl
jp
out
xchg
test
mov
pop
sbb
dec
aam
xor
pusha
imul
fiaddl
xchg
or
jo
and
mov
aam
hlt
aad
or
push
in
xor
fadds
std
cmpsl
rclb
out
fs
jno
sub
xor
cli
lds
mov
mov
in
popl
xchg
dec
pmulhuw
ret
jl
in
or
push
pop
cmp
cmp
mov
and
dec
inc
hlt
mov
sbb
incl
je
outsb
inc
dec
sbb
fcoml
lret
mov
subl
jmp
hlt
dec
shrl
xor
dec
scas
into
les
mov
or
mov
movsb
xchg
pop
push
aad
pop
pop
fwait
mov
popf
push
mov
fsubrs
hlt
ss
stc
or
and
out
push
shl
scas
xchg
or
sub
jecxz
or
inc
pop
mov
jmp
cmp
xchg
push
repnz
xchg
sub
cmpsl
mov
xchg
cld
xchg
inc
and
popa
in
pop
dec
xor
jo
ja
add
cli
xor
aad
cwtl
rolb
cld
mov
cmp
outsb
cmpsb
dec
cli
inc
pop
pop
cmpsl
daa
pushf
and
lcall
imul
pusha
lret
xchg
mov
ljmp
push
mov
popf
out
add
cmp
test
jecxz
mov
dec
stc
dec
jmp
mov
cmp
call
loop
addr16
sub
movsl
or
jmp
adc
clc
dec
mov
popa
mov
cmp
daa
in
movsl
and
jp
jbe
mov
mov
ja
inc
call
sarl
stc
call
loopne
sbb
dec
stos
in
mov
or
test
xchg
ficompl
add
fbld
arpl
jge
and
in
adc
sub
sub
add
icebp
adc
lods
arpl
ja
cmp
adc
sub
loope
jge
jecxz
idivb
repz
xchg
lahf
dec
dec
add
insb
xchg
loop
lods
pop
popa
int
lock
leave
jmp
add
jge
mov
mov
sarl
mov
dec
sbb
nop
lock
inc
jbe
mov
xchg
dec
xor
cmp
push
push
jp
push
inc
ds
jno
add
sbb
add
lret
push
ss
fistpl
adc
loop
stos
int
das
scas
pop
dec
xor
subl
shll
adcl
jbe
mov
gs
imulb
add
sub
sub
sub
out
sti
pop
xor
xor
lahf
aad
mov
incl
pop
or
jg
out
adc
xor
jmp
repz
lret
or
push
mov
enter
mov
lea
repnz
inc
xor
sub
sbb
fbld
mov
popf
push
jmp
inc
jl
rorl
sbb
sbb
mov
movswl
push
je
cmp
adc
adc
test
adc
in
fs
mov
rorl
xchg
jge
push
cmp
xchg
xlat
stc
test
or
frstors
inc
inc
inc
sbb
dec
dec
and
adc
and
ret
push
ds
loop
jbe
outsl
mov
mov
int
fcmovnbe
stos
mov
andl
loope
loope
xor
lahf
test
inc
jbe
or
out
xor
sbb
or
jecxz
or
xor
stos
or
ja
xchg
aad
gs
das
inc
lret
jmp
lods
lcall
out
dec
jne
xlat
sbb
cld
divb
dec
cmpsl
in
je
pop
aas
test
xor
test
repz
inc
mov
xchg
and
mov
cmc
clc
js
inc
addr16
jno
nop
adc
pop
stc
cld
mov
and
inc
and
std
mull
fwait
mov
push
mov
loopne
cld
iret
stc
iret
fistpll
incb
mull
in
repnz
loopne
out
fistps
sbb
add
push
fwait
arpl
fdivrp
lahf
add
cwtl
push
cld
fwait
lret
adc
ret
xchg
movsl
hlt
lcall
cs
gs
pop
sbb
iret
fcompl
cltd
outsl
xchg
jb
mov
jo
ss
pop
push
gs
icebp
je
pushf
pop
sarb
jp
gs
mov
mov
fists
dec
dec
sub
adc
sahf
cmp
pop
cmc
shlb
ror
ret
lock
push
jmp
adc
test
mov
push
ret
mov
pop
add
mov
dec
inc
mov
cmp
inc
or
lods
xor
sub
xor
hlt
call
mov
and
cltd
aaa
jno
rcrl
mov
push
inc
cmpsb
mov
das
add
jle
repnz
sbb
mov
and
iret
add
sub
jg
cmpsb
mov
and
stos
int3
xchg
jnp
scas
ss
pop
dec
iret
lcall
sbb
mov
and
jne
mov
mov
pushf
adc
lods
or
daa
mov
clc
lret
mov
popa
mov
cld
or
mov
jo
pop
mov
dec
loope
mov
neg
fwait
in
outsb
mov
icebp
mov
loope
popf
test
in
cs
negb
lret
pop
cmp
cmpsl
je
int
and
pop
icebp
push
sbb
jb
std
jae
cmc
cmc
rcll
push
xchg
lea
cltd
stos
mov
add
jecxz
leave
push
das
cmpsl
dec
mov
add
adc
xor
or
mov
push
sbb
popa
add
and
xor
pop
jae
jns
clc
xor
testl
repnz
cmp
mov
sbb
and
mov
and
scas
mov
fwait
mov
jg
mov
mov
xchg
enter
mov
int3
push
lods
push
test
adc
in
mov
inc
sbb
adc
add
xlat
sti
in
dec
add
adc
jbe
neg
xchg
mov
clc
push
ljmp
push
mov
mov
push
pop
jne
cld
sub
out
negl
cmp
fistl
jle
ret
aam
loope
add
orl
xor
dec
cld
roll
inc
lds
add
hlt
sub
jl
call
shrb
incb
xor
jo
ds
mov
mov
loopne
cmp
mov
mov
icebp
lret
xor
mov
mov
std
movsl
outsl
mov
int3
insl
mov
jne
call
andl
sbb
cmpsl
loop
jo
fldt
dec
jle
xchg
add
in
push
dec
xchg
push
lret
shr
jmp
dec
mov
outsl
adc
into
sub
jg
xchg
rclb
mov
fnsave
mov
dec
xor
cli
sbb
fcompl
mov
or
adc
cs
sub
js
jne
xor
sbb
cwtl
fisttps
adc
daa
sbb
shll
imul
mov
out
gs
mov
icebp
shrd
imul
arpl
xchg
add
dec
les
sahf
ljmp
xchg
hlt
sbb
inc
jbe
xchg
roll
cmp
cmc
mov
xor
clc
int3
out
je
jo
scas
addr16
call
bndstx
cld
dec
loop
jo
stos
sarl
inc
jns
pusha
push
addb
jo
dec
fmulp
sub
loope
mov
or
pop
cli
enter
push
cltd
mov
stc
push
add
aad
adc
or
movsl
std
in
insl
add
ljmp
jp
lret
inc
or
adc
sub
cmp
and
idiv
jge
cmpl
adc
out
movsl
lret
addl
xor
orb
sbb
lods
add
mov
xor
pusha
loop
std
and
dec
rorl
jb
inc
ss
arpl
dec
ret
fwait
jmp
mov
xchg
inc
cmp
cmpsb
notb
mov
enter
mov
cmp
repz
ror
lcall
sub
mov
xchg
push
inc
pop
or
add
mov
cli
mov
sub
lret
jo
mov
cmp
dec
push
cmpsb
pop
les
sub
sahf
lods
inc
ret
add
sbb
popf
and
int
cmc
pushf
adc
int3
shlb
mov
dec
jg
cmp
inc
or
loope
add
pop
jns
adc
insl
sbb
jge
mov
sbb
test
inc
in
jae
test
jb
nop
sub
xchg
icebp
mov
int
jbe
shl
fnstsw
outsl
into
aad
mov
pop
sbb
jo
dec
mov
ss
inc
mov
daa
fs
inc
push
movsb
mov
imul
adc
pop
xchg
xchg
mov
pop
push
and
aas
inc
testb
mov
jmp
cmp
pop
and
inc
sbb
xor
ja
hlt
jnp
add
fsub
roll
call
aaa
lea
adc
popf
cmp
adc
push
fwait
int3
sub
into
xchg
stos
push
lcall
lock
adcb
xchg
mov
sahf
pop
cmp
das
imul
jne
inc
mov
push
and
pop
mov
incl
add
jns
mov
sub
in
sbb
cmpsl
sbb
xchg
out
outsb
outsl
pop
mov
dec
xor
insl
insl
sbb
sub
xor
mov
ljmp
xchg
sub
add
push
lock
ja
jle
jg
iret
out
hlt
das
out
sahf
push
out
psraw
dec
rcr
dec
jns
cmp
and
cli
jbe
mov
cmp
inc
mov
call
stc
add
push
pop
cltd
sub
mov
lcall
prefetch
or
cmp
dec
adc
popf
dec
push
pop
lcall
ret
push
stos
ss
stos
jbe
push
mov
dec
andl
pop
imul
rcll
call
int
push
sbb
sbb
or
sub
shll
pop
lods
loopne
lea
add
cmp
loop
test
push
dec
and
lret
fdivs
inc
call
clc
pop
push
ljmp
mov
mov
mov
fnstsw
lea
dec
sub
inc
and
fistl
xchg
push
lds
mov
jns
jge
adc
mov
push
cli
mov
sahf
cmp
fwait
dec
out
sbb
push
jecxz
inc
scas
mov
jne
fdivr
je
test
sub
mov
sub
in
loop
xchg
sbb
inc
jne
dec
xchg
mov
daa
int
xor
fs
popa
insl
add
sarl
popa
ja
dec
cmc
mov
jo
outsb
in
mov
xchg
jp
bnd
dec
dec
jmp
loop
pop
mov
int3
sub
add
push
jnp
xchg
shld
in
mov
adc
xchg
push
cli
dec
adc
dec
mov
or
jl
adc
and
add
inc
roll
mov
sbb
xor
data16
or
xorb
lahf
mov
loope
push
mov
mov
test
insl
and
xchg
dec
repnz
add
hlt
push
das
fs
popf
cmp
xor
adc
lcall
mov
dec
divl
push
mov
into
lods
sbb
xchg
imul
mov
loopne
test
or
sub
repz
push
inc
popa
sub
movsb
daa
pop
aad
mov
add
ljmp
inc
adc
jb
roll
push
pusha
loopne
fstps
movsb
cmp
das
adc
jbe
xor
mov
inc
xor
shlb
cmp
adc
mov
movsl
xchg
mov
cmp
fcoml
push
xchg
fbstp
jno
xchg
mov
subb
push
add
lods
push
push
repnz
aad
out
aam
and
xchg
sbb
inc
fneni(8087
mov
adc
repnz
hlt
push
sbb
or
sbb
jno
test
jge
imul
ljmp
dec
jno
movsl
cmp
push
clc
and
mov
or
jl
insb
xchg
pop
cmpsl
dec
mov
inc
lods
push
pushf
mov
pop
in
pop
fsubl
int3
aaa
cmp
sub
sbb
or
jl
insb
xchg
pop
cmpsl
dec
mov
inc
lods
push
pushf
mov
pop
in
pop
fsubl
int3
aaa
cmp
sub
sbb
or
jl
insb
cld
pop
mov
lods
push
pushf
mov
add
pop
fsubrl
int
cmp
add
jl
insb
xchg
pop
daa
dec
ja
mov
mov
mov
outsl
and
dec
dec
out
pop
add
jns
add
cs
aas
xor
lret
mov
mov
cltd
shrb
pop
add
jns
or
inc
sub
pusha
leave
xchg
flds
mov
mov
add
jns
or
pop
sub
jp
jae
mov
mov
shl
cmp
inc
adc
ret
mov
jecxz
testb
cld
inc
or
mov
xchg
mov
sbb
jne
push
push
ficoms
xchg
push
call
xchg
outsl
xor
lret
inc
jecxz
data16
int3
inc
stc
or
and
sub
mov
add
jo
xorb
lahf
cmp
push
jg
push
push
pop
flds
xor
in
iret
test
divb
mov
enter
fs
jb
fnstcw
mov
loopne
xor
mov
mov
xchg
mov
or
outsb
btc
mov
pop
pop
imul
sbb
imul
cwtl
jmp
enter
lock
add
xor
and
cs
sbb
or
lcall
xchg
int3
lock
lea
push
cmp
insb
adc
or
jmp
stc
jecxz
mov
roll
das
push
sbb
dec
cmp
inc
sub
pusha
leave
nop
flds
mov
cltd
shrb
pop
add
jns
or
inc
sub
pusha
leave
nop
flds
mov
cltd
shrb
cmp
fldcw
jbe
xchg
xchg
aad
adc
into
mov
repnz
hlt
ret
stc
dec
pop
push
das
jp
jns
xchg
iret
push
mov
movsb
push
insb
cmp
push
fsubrl
xchg
fisubrl
std
cmp
pushf
insl
fmuls
xor
enter
icebp
push
add
dec
cmpsb
jmp
and
lret
xchg
cmp
sub
stc
ret
pop
shlb
fsubs
mov
outsl
scas
push
es
loope
adcb
jp
loope
add
add
out
and
jl
shll
dec
les
pusha
adc
jmp
dec
xchg
push
jnp
cmp
cmp
push
out
bnd
mov
push
idivl
mov
dec
inc
xor
push
xor
mov
je
fwait
pushf
or
mov
aas
dec
dec
dec
and
lds
xor
pop
shlb
add
cltd
loope
jg
imul
enter
pop
cmc
pop
push
hlt
fcoml
inc
hlt
pop
mov
iret
and
dec
lods
test
leave
aad
pop
push
pop
enter
test
mov
cmp
adc
icebp
sbb
stc
jno
sub
stos
das
sbb
xchg
frstor
outsb
add
inc
aas
jno
inc
vpmuludq
sub
adc
xchg
repnz
mov
lds
jp
cmp
cmp
xchg
mov
popf
and
mov
and
push
jo
or
in
ret
or
jnp
sbb
jl
mov
or
and
in
jg
sbb
inc
cwtl
sbb
clc
jae
fisubrl
mov
and
iret
xchg
rolb
shll
std
imul
addb
shlb
stos
mov
out
xor
mov
pop
mov
lds
push
popf
mov
enter
das
popf
adc
dec
sbb
adc
pop
jge
xorl
ret
and
aad
aaa
push
in
int3
fdivs
sub
mov
popf
or
cmp
test
icebp
sti
mov
outsl
lock
push
ds
adc
mov
push
mov
idivl
cli
dec
add
mov
sub
jle
cwtl
or
mov
add
in
and
add
fildll
push
sahf
add
sub
sbb
cmp
das
jno
rorb
or
pop
lea
mov
mov
data16
pop
mov
cmp
outsl
lret
stc
xor
sub
pop
pop
ret
mov
jle
adc
mul
jmp
jno
xor
daa
fld
jb
hlt
jecxz
mov
xchg
inc
ret
jg
dec
dec
inc
mov
loope
pop
out
jo
scas
or
and
clc
jo
sahf
xor
std
fistpl
fsubs
add
hlt
jo
push
pop
or
cmc
or
sbb
in
outsl
sub
lods
pop
mov
imul
add
jns
scas
int
mov
pop
xor
jae
daa
test
shrb
jge
leave
sbb
pop
in
popa
pop
xorb
sub
cmpsb
lods
pop
std
jae
mov
or
shl
push
out
xlat
mov
jg
jnp
scas
aad
jl
xchg
outsl
push
in
mov
mov
mov
cwtl
jns
ds
xchg
jae
mov
lahf
inc
pop
call
sti
sbb
bound
xchg
and
cld
inc
jmp
imul
stc
xchg
xor
jns
add
iret
mov
pop
test
and
sbb
out
inc
es
dec
xor
mov
scas
add
inc
loop
and
aad
addr16
iret
sub
ds
rclb
shlb
pop
enter
dec
lret
or
sti
cmc
add
xchg
mov
push
xchg
cmp
pop
xchg
inc
push
and
jae
pop
mov
pcmpgtb
imul
test
push
add
shrb
ds
popa
sub
mov
shlb
mov
push
ss
das
push
bound
pop
lods
cmc
xor
pop
fisubrs
mov
in
xchg
cs
in
pop
cwtl
xor
push
je
pop
mov
andb
dec
out
popa
gs
xchg
adc
aam
xchg
push
lret
jns
into
in
pop
jns
ljmp
push
mov
jae
scas
cmpsl
mov
dec
and
lahf
mov
popf
mov
sbb
stos
lret
fs
addl
inc
jnp
jle
xchg
push
into
lods
mov
test
fs
mov
cmpb
sbb
adc
pop
xchg
in
data16
dec
bound
fistpl
and
inc
loopne
and
or
nop
jge
inc
jae
repz
insb
aaa
jns
sub
and
dec
cmp
xor
filds
bound
popa
test
ds
mov
mov
and
fisubrs
mov
and
cli
and
mov
int
jecxz
ret
jnp
sahf
or
push
adcb
leave
js
daa
test
pop
leave
movsl
jecxz
mov
insb
pop
xchg
data16
and
pop
scas
sbb
mov
cmp
out
lea
jmp
mov
arpl
xchg
scas
mov
push
insb
sub
cmp
in
add
adc
add
out
aaa
push
aas
dec
data16
fidivrs
fsubrl
jbe
aad
push
movsb
cmpsb
in
insb
mov
fstpt
repnz
fs
dec
add
sub
or
xor
or
ds
sbb
in
sbb
xor
xchg
or
es
lret
pop
cmpsb
mov
jb
pop
mov
int
cmc
lahf
and
call
lods
sub
xchg
xchg
inc
lret
jecxz
push
jbe
xchg
push
gs
and
lahf
pop
outsb
pop
int3
das
into
aam
fidivrs
add
inc
dec
sub
pop
push
fidivs
dec
add
or
add
jmp
divb
xchg
push
enter
mov
inc
mov
jg
sbb
cwtl
test
jmp
loopne
testb
sbbl
orb
xor
mov
jl
pop
arpl
mov
sub
mov
pushf
jmp
fiadds
mov
sbb
xor
or
xchg
dec
sbb
sbb
les
mov
add
cmp
dec
xor
movsl
push
leave
call
push
and
in
push
inc
into
test
arpl
or
stc
xchg
dec
scas
icebp
shl
jmp
and
out
add
xchg
lret
xchg
jg
int3
push
rclb
jp
push
mov
and
push
fs
pop
xor
movsb
jns
cmc
sbb
insl
data16
jecxz
xchg
mulb
mov
and
loope
adc
movsl
aaa
stos
cmpsl
addr16
push
test
repz
js
cli
loopne
ficomps
jbe
jne
out
loopne
shll
aaa
in
je
jne
adc
leave
xchg
data16
mov
adc
xchg
xchg
jmp
idiv
popf
negb
call
inc
iret
test
push
shlb
sub
cmp
xor
loop
add
flds
arpl
add
dec
pop
lods
movsb
outsb
mov
rol
data16
jmp
icebp
mov
test
mov
mov
mov
push
push
or
dec
mov
xchg
mov
xchg
jno
pop
pop
mov
xchg
pop
pop
push
pusha
aaa
testl
add
loopne
xchg
pop
js
fwait
stos
cmp
inc
std
pop
pop
incl
sub
sbb
xchg
loopne
jp
add
popf
roll
popf
scas
jmp
lods
sar
imul
jmp
aad
sbb
push
cmc
jge
ret
lcall
add
repnz
aaa
imul
and
loop
dec
out
mov
inc
gs
js
int3
imul
mov
pop
or
pop
mov
pop
aad
inc
xor
loop
push
xor
add
adcl
repz
sar
mov
push
sub
or
mov
jl
lahf
mov
in
xor
scas
sub
or
sbbb
aad
sbb
mov
pushf
adc
ficompl
mov
adc
jns
mov
jo,pn
adc
popa
dec
sbb
jl
ds
xchg
sbb
repz
hlt
iret
push
dec
ror
add
les
cmpsb
jbe
lea
add
jecxz
out
stos
aaa
cmp
lds
and
sub
cs
call
outsl
mov
xchg
into
out
call
bound
push
sub
mov
shrb
sbb
in
fwait
idivb
mov
push
mov
push
or
out
xchg
push
inc
test
dec
popa
insl
xchg
rcrl
or
mov
push
jae
nop
push
test
sub
jne
xor
test
data16
xchg
inc
jb
mov
sti
pop
lahf
pop
adc
lock
aas
scas
cld
pop
test
mov
cmp
jne
push
xchg
test
aaa
cmp
lret
repz
lods
nop
cmpsl
inc
adc
rclb
sbb
movsl
jp
test
jnp
pop
sub
iret
xchg
cmp
rclb
sub
dec
clc
lods
mov
or
imul
dec
adcl
in
das
sbb
sti
and
in
test
sub
xor
or
mov
add
fistps
xchg
push
icebp
push
scas
mov
shrl
inc
bound
nop
ret
add
cmpsw
jne
sbb
lock
lahf
cmp
pop
xor
in
inc
mov
pop
lcall
xlat
fimull
mov
mov
mov
jmp
lret
cmpsl
dec
out
out
or
mov
daa
cli
inc
xchg
stc
movsl
xchg
xchg
mov
jbe
call
sub
xchg
push
div
in
std
dec
ret
dec
dec
and
pop
out
push
sbb
push
je
loope
mov
inc
or
pop
cltd
jbe
sbb
std
js
cmp
xchg
mov
dec
adcb
inc
mov
inc
cltd
lret
test
insb
out
sahf
push
scas
dec
sub
mov
into
cmc
add
or
scas
ljmp
sub
in
int
jge
lods
dec
jne
mov
xchg
es
add
je
push
xchg
movl
std
test
lret
sbb
ficoml
push
xchg
lret
lcall
mov
pop
or
jb
sbb
sbb
mov
push
push
movsl
repnz
add
inc
lret
test
xchg
andb
pop
add
jnp
push
cmp
mov
add
loop
jne
mov
cli
dec
mov
or
add
jns
jbe
push
cli
loope
rclb
je
xchg
test
jp
jae
push
call
add
push
and
jno
js
arpl
in
mov
movsl
cli
pop
data16
movsb
lret
push
inc
fwait
rorb
add
fwait
test
sbb
adc
inc
imul
in
mov
mov
inc
push
mov
ljmp
xor
cmp
in
cmp
cmp
pop
rcrb
jl
inc
push
inc
adcb
xor
mov
mov
outsb
mov
add
jne
dec
xor
sbb
stc
shrb
jno
lahf
xor
inc
and
imul
lods
mov
push
lods
sbb
les
loop
mov
jl
pop
inc
aad
out
xchg
inc
arpl
xchg
push
lds
gs
push
or
and
mov
or
gs
inc
ret
popa
loopne
clc
lea
lods
xchg
or
dec
daa
inc
xlat
sbb
ficompl
loop
test
out
pop
sti
stc
xchg
dec
mov
pop
inc
jns
dec
call
pop
push
je
lock
push
mov
lcall
or
inc
out
dec
sahf
out
mov
hlt
sub
jnp
cmpsb
in
roll
add
jns
daa
push
sbbl
xor
dec
sbb
aaa
mul
in
cmpsb
jbe
or
lock
leave
mov
iret
lock
mov
rcll
mov
adc
sbb
fs
iret
sti
adc
cmp
cmpsb
adc
inc
lods
test
fiaddl
sbb
fnstenv
lret
iret
in
rcrb
jno
add
adc
in
mov
xor
pop
mov
mov
pop
cmpb
mov
and
enter
pushf
mov
popf
cld
jbe
call
jno
test
cwtl
dec
mov
or
push
imul
push
inc
dec
rcll
inc
push
lret
add
sbb
sahf
xchg
xchg
push
rol
pop
pop
or
into
dec
popa
aaa
loop
jne
pop
ja
jae
jb
cmp
and
jnp
mov
jmp
xchg
cmp
popa
adc
cltd
adc
dec
dec
enter
subl
mov
sbb
sub
mov
loope
fwait
jp
imul
jp
jp
aaa
jecxz
sbb
push
insl
fdivrl
sti
sub
out
mov
push
mov
jae
jp
mov
pop
pop
adc
mov
inc
cltd
xchg
cli
pop
mov
lcall
adc
sbb
push
and
int3
cli
xor
lret
pop
and
pop
xchg
fldenv
cmp
add
imul
mov
jg
insl
sub
xchg
add
xor
inc
out
adc
loop
xor
and
lea
sar
and
mov
jb
inc
jns
lock
or
inc
pusha
add
jnp
or
movsl
pop
pop
mov
xchg
xorb
out
cmc
clc
push
fcomps
int3
movsl
imul
and
mov
mov
fnstcw
mov
inc
gs
dec
movsl
mov
fcomps
lods
lcall
add
or
push
es
xchg
sahf
ret
mov
inc
jne
jp
add
stos
add
inc
aad
jp
aaa
sbbb
loope
ret
test
jo
inc
mov
push
insl
fucom
dec
clc
bound
in
lds
jno
adc
es
ficomps
push
or
pop
out
flds
cmp
and
orl
xchg
cmpsl
popa
mov
addl
popa
hlt
ret
ss
lret
sbb
xor
in
jno
jle
lret
jg
aad
mov
divb
sub
jge
lock
mov
scas
movsl
fisubs
mov
add
sbb
or
movsl
adc
cltd
dec
mov
dec
xchg
mov
cli
jg
lret
pop
fisubrl
int3
test
inc
push
lahf
push
xchg
jg
iret
fwait
or
mov
sbb
lret
lds
es
clc
daa
ret
jns
cld
repz
pop
stos
adc
push
adc
stc
sub
xchg
scas
push
pop
sbb
dec
sub
sbb
sbb
aad
xchg
and
decl
into
adc
xchg
xchg
push
inc
inc
movsb
or
test
cli
inc
fs
or
aaa
and
inc
fcmovbe
or
jp
scas
push
add
add
push
enter
lahf
div
mov
icebp
jb
jae
push
inc
gs
lods
daa
xor
add
dec
mov
xor
pop
push
xor
mov
hlt
fadds
in
xor
testl
dec
mov
mov
pop
sbb
int
ljmp
inc
lahf
mov
and
adc
imul
addr16
cmc
outsl
bound
jo
lret
pop
std
subb
out
xchg
into
outsl
mov
or
psllq
xchg
clc
fwait
popa
sbb
rorb
push
test
lods
jg
mov
push
cmp
and
in
loope
mov
repz
lahf
dec
pop
je
dec
inc
popa
cs
xor
test
fldl
es
push
inc
sarb
scas
sbb
jno
fldt
das
add
mov
xchg
mov
outsl
out
jbe
inc
mov
lahf
lock
adcb
pop
in
or
push
push
pop
pusha
ret
sub
lret
pop
jp
jno
icebp
dec
lea
repnz
popf
ljmp
lods
aaa
ljmp
dec
and
scas
clc
mov
cmp
sbbl
cwtl
pusha
arpl
out
leave
cmp
inc
dec
sub
call
adc
adc
add
iret
push
sbb
push
mull
shrb
sar
cmpsb
dec
enter
sbb
or
jo
pop
xor
inc
jge
out
jecxz
nop
or
fdivrs
out
mov
jl
add
lahf
or
inc
fdivrs
in
divl
mov
fwait
loop
cmp
dec
push
jl
cmp
mov
in
dec
pop
xor
sbb
ds
push
outsl
pop
push
pop
add
outsl
scas
push
mov
sbbl
xchg
mov
int3
mov
sarb
inc
outsb
sbb
adc
lcall
fidivrl
xchg
loopne
jbe
xchg
jl
test
cltd
xchg
insl
push
roll
xchg
gs
enter
scas
popf
cld
dec
mov
and
sbb
jmp
data16
or
aad
je
mov
pop
inc
out
jge
aaa
push
rcr
shll
jbe
in
mov
scas
pop
clc
stos
aad
push
lahf
std
xchg
and
rcll
aaa
test
roll
or
cmc
ja
out
pop
jnp
ficomps
sub
les
mov
enter
in
xchg
bound
push
in
mov
mov
sub
ja
or
lea
and
sbb
fidivrl
mov
leave
mov
jmp
jb
or
loop
mov
es
mov
mov
push
gs
mov
add
add
data16
push
cmp
stos
sbb
pop
add
stos
sbb
xchg
dec
jle
addr16
sbb
decl
hlt
andb
jecxz
enter
ss
mov
aas
mov
repnz
jmp
aaa
mov
jae
mov
adc
push
mov
lahf
adc
sub
push
jbe
in
inc
add
pop
je
push
cmp
mov
subl
mov
scas
cmp
fcom
xchg
dec
inc
roll
cmp
push
pop
outsb
out
mov
pushf
ljmp
imul
stos
dec
xchg
sbb
pop
pushf
loop
mov
cmp
adc
sub
sarb
ret
mov
sub
sub
sub
pop
lods
sbb
aaa
into
xchg
mov
lcall
loop
daa
dec
btc
ljmp
in
or
inc
cmp
nop
je
sub
dec
mov
push
and
in
pop
call
adc
jo
imul
adc
sbb
fs
xor
mov
adc
cli
iret
jae
jl
out
sub
test
inc
leave
out
and
inc
out
add
fwait
mov
ret
ja
mov
mov
ss
jb
mov
add
imulb
fnsave
test
xor
cli
push
cli
pop
push
shll
add
js
aad
lods
aam
lea
xor
mov
xchg
fnstsw
mov
mov
pop
pop
jge
loope
lahf
stos
aaa
imul
leave
pop
popf
dec
push
or
imul
pusha
scas
pop
out
jae
test
or
jmp
jecxz
push
fs
push
ljmp
mov
push
repz
add
icebp
fdivrs
mov
sahf
bound
int3
mov
out
pop
out
clc
mov
jne
inc
cmp
xor
xlat
mov
mov
or
cmp
dec
lret
jnp
inc
lds
inc
clc
lods
adc
imul
shrb
xchg
out
insb
cmp
pop
testl
xlat
xor
icebp
popa
call
out
out
sbb
hlt
mov
and
cli
loope
out
roll
mov
push
icebp
lcall
add
sbb
push
xor
enter
aam
dec
ljmp
mov
frstor
mov
mov
jno
leave
and
and
mov
mov
fwait
pop
mov
inc
in
paddsb
addr16
sub
and
test
sbbb
hlt
xor
or
mov
xor
sub
into
test
jl
dec
cs
roll
popf
aas
fmuls
pushf
xchg
adc
xor
les
sub
xor
mov
fistl
leave
lcall
cmp
pop
cmpb
mov
jne
popw
cmp
inc
es
stc
xchg
rorb
mov
ljmp
repnz
mov
test
hlt
rcrb
and
loop
or
jecxz
ret
mov
mov
jno
inc
mov
in
add
hlt
test
stos
in
in
stos
xor
jl
sbbl
xchg
and
mov
fistpll
or
inc
sub
pusha
leave
nop
flds
mov
cltd
shrb
pop
add
jns
or
inc
sub
pusha
leave
nop
flds
mov
cltd
shrb
pop
add
jns
or
inc
sub
pusha
enter
jmp
rcrb
loopne
adc
imul
sbb
jo
pusha
ss
sub
stc
xlat
pop
adc
push
cmovno
push
mov
sub
push
push
mov
push
push
push
push
movl
movl
movb
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
jnp
sahf
push
testl
in
xchg
sub
xchg
ja
addr16
out
aaa
daa
xlat
es
push
testl
xchg
inc
push
cmpsb
inc
mov
jnp
pop
aaa
daa
in
xlat
cmpsb
nop
test
xchg
mov
fs
mov
push
ja
push
mov
jno
std
mov
adcb
sub
mov
xor
push
mov
js
test
cs
bound
xchg
cltd
add
ret
and
imul
into
push
aaa
dec
jbe
xlat
ss
xchg
lahf
pop
pop
and
testb
lret
js
or
imul
mov
lahf
jae
pop
jecxz
fists
ja
cltd
xchg
inc
pop
mov
repz
jnp
in
ret
cmp
fistl
mov
in
adc
push
xchg
testb
mov
pop
xchg
mov
mov
es
jmp
xchg
sahf
dec
sarl
pop
adc
popl
push
xchg
aaa
xor
imull
jbe
and
inc
push
xor
dec
ja
addr16
pop
clc
pop
aaa
mov
xchg
push
out
inc
icebp
daa
repz
cs
adc
adc
dec
subl
xchg
int
pop
sti
pop
lret
cmp
xor
ds
add
popa
xchg
xchg
adc
xorb
xchg
inc
cmpsl
mov
cmpsb
inc
xchg
ja
notb
out
aaa
daa
xlat
es
push
testl
xchg
inc
cmpsl
mov
cmpsb
inc
xchg
ja
notb
out
aaa
daa
xlat
loop
mov
jecxz
sbb
fcmovne
sbb
adc
roll
mov
test
out
arpl
xchg
repz
int
outsl
and
pop
inc
fs
imul
sub
les
bound
mov
xor
mov
jle
jmp
ficoml
adc
subb
lea
xor
adc
mov
andl
mov
xor
push
xchg
pop
iret
sbb
mov
mov
and
cwtl
aam
fisttps
clc
xchg
cmp
dec
rorl
mov
ret
pop
ja
std
adc
pushf
sti
aaa
dec
and
xchg
loop
jmp
xorl
jbe
sahf
loop
rclb
cmp
mov
add
mov
jl
ret
iret
dec
sbb
sbb
fcoms
push
push
cwtl
push
jecxz
pop
xor
push
push
stos
testl
push
and
not
adc
sbb
mov
push
mov
jmp
sbb
sub
cmpsl
adc
cltd
mov
sbb
sar
push
xor
mov
ds
pop
mov
sub
and
cmc
adc
jb
mov
sbb
mov
push
or
mov
cmp
enter
adc
addr16
mov
fs
icebp
mov
and
enter
cs
movsb
push
ret
es
cmp
test
jo
cld
xlat
inc
push
adc
mov
xchg
jmp
je
repnz
jae
je
and
pop
xchg
inc
ret
add
inc
ficomps
sarb
or
pushw
mov
imul
out
mov
and
mov
add
xchg
imul
dec
dec
pop
and
fs
adc
sub
sub
enter
shlb
icebp
arpl
or
jo
jo
inc
push
xchg
and
mov
gs
fs
out
sbb
mov
adc
mov
push
lahf
icebp
lods
push
in
jle
mov
cmpsl
iret
sbb
pop
lahf
test
mov
fiadds
jne
cmp
test
lods
and
push
pop
cli
xor
cmp
adc
testl
xchg
xlat
shrb
xor
fnsave
sbb
jl
subb
sub
adc
mov
push
xorl
lret
and
jecxz
jge
cmp
lock
out
add
jl
es
add
shr
dec
or
sbb
xor
ss
lret
sbb
iret
fcom
xor
add
mov
stc
jnp
aas
mov
xor
dec
nop
test
je
addr16
inc
fisubl
xchg
addb
mov
xchg
xchg
add
mov
out
mov
add
mov
jp
dec
pop
idivb
jecxz
test
mov
ret
mov
push
lods
adc
dec
sub
adc
pop
inc
cmp
mov
pushf
push
jl
rol
call
out
jecxz
inc
inc
mov
push
test
push
jne
int
divb
or
cwtl
dec
sub
xadd
xorl
add
cltd
loop
ljmp
cmp
push
mov
xchg
lock
mov
fiaddl
sub
fs
xor
cmpsl
add
aam
mov
mov
push
sar
xchg
clc
mov
icebp
mov
insl
movsl
dec
push
mov
mov
mov
xor
loop
into
aas
shlb
ljmp
out
mov
add
js
out
aas
adc
cmp
jns
sub
repnz
jge
dec
dec
mov
jp
outsb
xlat
and
xor
xchg
mov
je
mulb
and
push
mov
imul
adc
push
add
das
bnd
dec
movsl
loopne
xchg
pop
and
aam
test
lcall
stos
stos
lods
lcall
and
stos
mov
clc
mov
xchg
pop
adc
movsl
dec
outsb
dec
cmp
dec
jle
inc
lock
jno
mov
das
in
adc
stos
pop
leave
push
cmp
ja
cli
dec
mov
sbb
pop
push
in
call
push
push
inc
fisubl
nop
fiaddl
pop
in
call
ljmp
daa
aaa
fstl
add
shll
sub
inc
pop
clc
imul
loope
fxch
pop
dec
repnz
jb
aaa
lods
sub
es
mov
mov
in
lcall
push
mov
push
xchg
fidivrs
popa
neg
and
repz
and
add
push
mov
pop
sbb
add
aad
xorb
or
cmp
pusha
jnp
sahf
ret
nop
outsb
jae
popa
jmp
xchg
mov
mov
and
jno
pop
into
stos
in
dec
in
aaa
or
hlt
sbb
dec
rcrb
fldenv
mov
xor
add
mov
in
stos
bound
sbb
jb
lods
cmp
cltd
pusha
sbb
dec
xchg
idivb
inc
scas
cmc
jno
call
add
push
jmp
ljmp
outsb
mov
cmpsl
mov
lret
push
mov
add
pop
addb
daa
inc
mov
cmp
in
pop
lods
mov
mov
pop
push
or
and
js
sbb
je
orl
xchg
push
fcmove
inc
inc
xlat
out
imul
inc
inc
jle
fistpl
jns
fcmovnbe
xchg
movsl
pushl
in
xor
jae
add
push
xlat
ret
sbb
mov
lock
jg
dec
mov
pop
pop
jb
nop
dec
dec
mov
test
jne
insb
push
xchg
push
loope
dec
cwtl
lea
push
mov
imul
inc
xor
add
pop
jp,pn
iret
or
imul
lock
mov
adc
adc
aam
fistpll
sbbl
push
das
add
repnz
fs
push
subl
arpl
sbb
test
mov
ja
xchg
mov
jbe
lods
addr16
gs
push
sub
and
cmp
mov
lds
mov
cli
xor
cmp
mov
imul
rcrb
lods
cmp
pop
lcall
pusha
rclb
jl
and
out
sub
lret
add
hlt
mov
into
add
sbb
imul
hlt
dec
mov
rcrl
mov
inc
pop
ret
icebp
cmp
jl
adc
das
lock
sub
or
das
sbb
fisubl
notl
xchg
xor
cmc
test
adc
sarb
pop
ret
xchg
sub
dec
into
and
push
dec
ss
sub
dec
test
repnz
jmp
sbb
cmp
push
xlat
sahf
and
jbe
lea
cmpl
or
sti
fwait
icebp
mov
iret
icebp
inc
dec
aas
push
pushf
xlat
lret
xor
add
scas
loopne
cmp
es
aad
xchg
pop
sbb
sub
js
cmp
sub
mov
imul
dec
adc
xchg
jmp
lds
fsubr
push
fcoml
negl
call
rcrl
adc
in
movsl
or
fldenv
adc
faddl
cmp
or
fisubl
mov
mov
or
adc
jb
shll
xchg
pushf
mov
shll
push
cmpb
or
mov
push
jge
in
xchg
mov
jb
test
lds
arpl
sbb
mov
jle
xchg
stos
dec
adc
fwait
sbb
and
scas
pop
scas
pop
jno
sub
gs
or
fs
fisubl
stc
inc
repnz
fs
test
dec
in
mov
pop
dec
in
sub
inc
test
sbb
cwtl
repz
fldcw
fiaddl
xchg
outsb
push
outsb
push
imul
out
push
xor
and
and
cld
push
mov
stc
aad
fs
jno
test
inc
sbb
pop
fistps
xor
lock
push
orb
add
lock
cld
dec
cmpsb
icebp
bound
aam
test
fwait
sub
cwtl
jo
and
inc
es
test
mov
popf
movsb
jae
popf
les
jl
pop
push
divb
mov
jnp
les
outsb
clc
push
rol
cld
adc
push
sarb
lods
cmp
cwtl
insb
mov
in
fcoms
loop
shrb
out
movsb
fstpl
cmp
in
jns
clc
fwait
dec
je
cmp
test
xor
rorb
cmp
filds
movsb
ja
or
xchg
clc
in
jle
or
in
jno
out
cmpxchg
inc
andl
pop
insb
vcvtps2dq
add
mov
insb
inc
call
mov
jl
lret
testl
sahf
loop
mov
or
int3
es
dec
push
sbb
cmpsl
aaa
js
add
or
notl
lds
inc
in
cld
mov
in
push
push
das
push
sub
movsl
lea
jb
out
push
pusha
jp
pop
test
xchg
gs
pop
fidivrs
dec
mov
xchg
hlt
mov
cmc
ss
inc
test
xor
ret
dec
test
dec
pop
lret
movl
pop
test
jl
mov
jl
cwtl
loope
mov
push
std
in
jnp
imul
mov
sub
test
pop
sub
lahf
sbb
cltd
sbb
jl
or
and
jno
or
jp
lahf
and
jae
js
jge
sub
call
movsb
and
xor
pop
loope
mov
or
xchg
call
xor
mov
mov
mov
stos
mov
push
inc
jo
pop
jae
popf
mov
jmp
test
dec
dec
fidivs
push
mov
dec
sub
fdivr
jmp
ja
mov
pop
incb
testb
mov
rcrl
sub
icebp
into
jb
xlat
js
pop
xchg
mov
push
or
inc
enter
loopne
adcb
in
push
mov
ja
pop
xor
movsl
sub
lahf
pop
int3
push
xchg
and
jno
sbb
dec
addr16
cld
fstl
adcl
popf
mov
sbb
lds
cmp
xor
lods
xchg
ret
repnz
cli
popf
mov
push
add
jle
addr16
aaa
and
cmp
add
movsl
les
das
repz
xor
hlt
sbb
xchg
fldt
sub
out
push
rcl
inc
fistpl
sbb
sub
or
shll
mov
repz
jge
cmovb
insl
pusha
sbb
pop
roll
jae
inc
inc
inc
jns
jnp
sbb
mov
jecxz
out
loope,pt
loope
xchg
adc
or
jl
cmc
xchg
push
inc
jns
jg
nop
cmp
sbb
add
pop
loop
jecxz
rcrl
xchg
mov
push
adc
outsb
out
lret
inc
inc
cmpsb
scas
dec
xchg
add
dec
icebp
xchg
jge
lods
dec
hlt
popa
jmp
cmp
jno
addr16
rol
cwtl
push
loop
sbb
enter
aam
iret
test
add
mulb
mov
enter
add
cmp
cwtl
jp
sbb
sbb
cmp
push
aam
aad
push
and
cwtl
dec
insl
loope
cld
pop
xchg
mov
cvtps2pd
fsubr
shlb
xor
pop
cmp
ljmp
repz
cld
push
rcr
cmpsl
push
add
xor
pop
fiaddl
or
xchg
daa
ljmpw
aaa
rcrb
adc
ljmp
pop
push
jns
push
jo
cmc
mov
dec
add
sbb
inc
or
fwait
inc
xor
movsl
sub
sbb
mov
les
jae
int
test
das
xor
xchg
jno
in
lahf
loope
popf
dec
popf
div
andl
push
gs
lret
addl
orl
rcl
cltd
enter
stc
out
stos
sbb
ficoms
push
test
shrl
inc
cld
lods
scas
sahf
or
fs
jmp
mov
add
shr
push
lock
xchg
mov
ret
lds
call
xchg
mov
pop
dec
gs
pop
scas
xchg
inc
xor
in
add
xor
mov
push
cli
inc
stos
ret
cmp
push
xchg
add
cmp
test
jne
cmpl
aaa
jmp
dec
push
cwtl
rcrl
dec
lahf
sahf
inc
sahf
pop
push
leave
stc
test
shlb
push
xchg
mov
xchg
and
lock
lret
xchg
mov
fs
popf
jle
ljmp
out
sbb
and
lea
dec
divps
push
jns
xchg
gs
and
sahf
test
aad
ljmp
ds
test
ljmp
adc
inc
adc
test
outsl
fdivrp
cmp
inc
push
ja
mov
dec
fsubs
xchg
dec
jnp
pop
pop
outsl
pop
or
ret
and
push
sbb
xchg
and
mov
lret
insl
pushf
dec
inc
mov
in
addl
scas
stos
stc
loop
ss
mov
mov
mov
nop
mov
lret
orb
ror
dec
push
pop
jmp
sub
dec
out
fidivl
gs
call
pop
inc
xor
mov
adc
mov
xor
jp
outsl
arpl
push
cwtl
in
mov
mov
mov
sub
es
pop
xchg
or
pop
int3
mov
xor
ljmp
test
std
cmpsb
push
mov
aam
fidivs
mov
mov
ficomps
jle
pop
push
rclb
xchg
aad
fisttps
dec
ja
mov
cmp
push
mov
sbb
je
inc
cltd
test
cmp
imul
sbb
call
ds
andl
std
mov
add
mov
icebp
sub
les
shlb
cwtl
incl
insl
pop
ljmp
inc
jle
ljmp
cmovo
notl
pop
mov
call
movsl
in
sbb
xor
mov
push
push
pop
dec
in
adc
shl
push
rcr
cmpb
lahf
sbb
add
enter
test
xchg
jbe
aaa
ror
xchg
sbb
mov
ficoms
std
xchg
loope
adc
push
adc
and
push
mov
pop
cmp
inc
dec
jb
test
sub
ficompl
cmpsb
pop
sub
subl
cmp
jno
into
cmp
dec
hlt
icebp
push
pop
mov
ss
pop
enter
and
add
mov
std
popa
jne
inc
cltd
xchg
lcall
out
lds
xchg
cs
das
cs
aas
pop
jae
xchg
push
popa
or
inc
pop
test
xor
imul
lds
bound
bound
lahf
jo
pusha
test
cs
push
leave
jae
pop
sub
cmp
jne
arpl
stc
dec
ret
mov
pop
pop
adc
sti
nop
movsl
dec
dec
or
mov
jns
sbb
push
sbb
add
jnp
pop
data16
int3
addr16
pop
sarl
scas
dec
into
push
je
mov
fidivrl
xchg
sub
mov
imul
xor
sub
lea
sbb
movsb
call
mov
xchg
repz
int3
das
mov
mov
ficoms
adc
mov
sbb
ret
mov
mov
shlb
ja
push
cmp
lds
push
aad
fucomi
arpl
movsl
sbb
sbb
dec
pop
lods
les
pusha
or
mov
fisubs
adc
jmp
fcmovnb
movsb
push
adcb
push
pop
rcll
ss
dec
lret
pop
movsb
sub
push
mov
xchg
out
xchg
lock
roll
pop
fdivr
sbb
xchg
pusha
in
mov
inc
outsl
lds
ret
rorb
sbb
dec
das
add
lcall
cmp
fdiv
fs
in
cmp
sub
sbb
cmc
outsb
daa
xchg
mov
sarb
rolb
jg
inc
sbb
pop
mov
hlt
mov
jl
nop
outsl
icebp
sbb
xor
dec
push
cli
jno
sbb
cmp
or
sbb
testl
dec
inc
test
test
scas
sub
cmpsb
jnp
adcl
xchg
fadds
xchg
mov
sub
push
sbb
test
jecxz
ljmp
add
push
jp
jns
ds
pop
je
leave
mov
pop
add
and
xor
dec
cmp
inc
dec
inc
int3
lahf
in
test
stos
out
pop
imul
add
jae
mov
or
int
das
loope
pop
cmp
xchg
div
popf
insb
imul
mov
enter
lahf
aam
and
int
xor
nop
outsb
aad
icebp
jo
mov
mov
ds
mov
jo
ds
mov
sub
cmp
daa
mov
insb
add
orl
xlat
mov
js
sarb
xor
jmp
jbe
inc
add
les
push
lock
xchg
xchg
outsb
mov
jle
jb
mov
es
std
mov
aas
xchg
jb
scas
cld
popa
test
mov
subb
mov
xchg
rcr
xchg
push
xor
mov
or
sub
cmpsb
pop
mov
fmulp
sahf
sarb
xchg
jge
test
mov
jl
jle
mov
jmp
sub
cld
std
push
in
dec
push
xchg
mov
scas
outsb
push
cmc
sbb
push
idivl
push
loopne
mov
ja
push
and
mov
xor
sbb
sub
lock
dec
cmp
rol
mov
movsb
mov
popa
mov
xchg
cltd
stc
lea
xchg
push
test
adc
inc
pushf
sbb
je
jmp
push
adc
stc
adc
mov
sbb
mov
ljmp
out
popa
int3
push
mov
mov
sub
in
mov
cmp
mov
mov
add
jp
mov
or
jecxz
push
push
in
mov
cmp
mov
movsl
ds
imulb
movsl
pushf
fcomps
adc
test
jp
shlb
sbb
inc
jg
pop
mov
insl
xrelease
add
outsb
leave
rol
pusha
insb
and
sub
and
pop
sti
popa
imul
ljmp
inc
cmpsl
leave
fisubs
cmp
jle
xchg
adc
pushf
pop
jno
lods
std
lods
sbb
lods
arpl
int3
sub
pop
je
stos
jns
out
sti
out
jo
or
mov
scas
mov
movsb
fs
and
pop
popf
xor
add
out
adc
mull
sub
faddl
es
sub
push
pop
in
gs
hlt
outsb
gs
ja
jl
and
xchg
mov
movsb
mov
xor
scas
aaa
pop
xchg
mov
bound
ret
jne
test
or
xlat
sarl
out
add
jne
and
dec
fdiv
add
jne
inc
jecxz
ja
adc
cmp
sub
dec
add
lods
aas
insl
sub
cwtl
out
fs
loop
push
sub
repnz
jg
adc
aas
dec
jmp
fistpl
dec
dec
jb
iret
xor
outsb
xchg
xchg
out
addr16
call
popa
inc
pop
movsb
sub
mov
gs
dec
les
ja
das
int3
pop
cmp
into
push
mov
mov
mov
dec
popf
push
fstps
std
cld
sub
jne
jne
pop
push
idivb
cmp
ror
xchg
mov
insb
pop
mov
sub
jne
sub
push
add
imul
lds
push
mov
outsl
jmp
clc
ret
ja
push
mov
sti
ja
jno
sub
pusha
movsb
jb
push
sub
mov
imul
mov
js
js
in
pushf
hlt
xchg
jmp
dec
mov
hlt
xchg
test
das
insl
fs
jnp
add
or
or
xlat
mov
imul
xlat
push
jl
push
nop
inc
mov
sub
ja
popa
divb
add
fnstenv
mov
popa
les
cmpb
lcall
insl
dec
jns
cli
jbe
jmp
dec
lcall
and
sbb
dec
sub
and
pop
push
ds
aas
cmp
sbb
jbe
xchg
inc
cmpsl
mov
cmpsb
inc
xchg
ja
notb
out
aaa
daa
xlat
es
push
testl
xchg
inc
cmpsl
mov
cmpsb
inc
xchg
ja
notb
out
aaa
daa
xlat
and
out
xchg
bound
mov
cmpsb
inc
lahf
ja
notb
incl
shlb
mulb
xlat
or
sahf
imull
out
xchg
jbe
push
mov
cmpsl
mov
pop
in
cmp
xchg
sbbl
adc
and
xor
pop
sbb
or
lds
nop
add
nop
loopnew
lock
adc
adc
xor
inc
jb
bound
jo
mov
jb
shl
loop
nop
lock
or
cmp
sub
pop
jb
bound
addr16
sbbb
mov
out
mov
lea
xor
jge
jge
push
dec
mov
adcl
push
pop
mov
sub
call
fs
mov
xchg
scas
popf
nop
push
mov
pop
pop
xchg
mov
push
or
jge
lea
xor
repnz
push
call
jb
push
pop
lock
dec
jg
repz
and
aaa
dec
shlb
add
gs
bound
imul
rolb
sbbl
shr
fnstsw
inc
std
adc
ja
inc
pusha
rorl
mov
push
rcrl
insl
sub
adc
outsl
je
sti
std
pop
fucomi
andb
mov
pop
xorb
add
lock
shlb
and
adc
add
dec
bound
imul
xchg
test
loop
shr
stos
jae
jne
inc
jnp
imul
bound
sbb
sar
faddp
lods
xchg
mov
test
xchg
addl
adc
inc
adc
jo
cmp
push
or
xor
xlat
in
xchg
mov
xchg
imul
cmp
bound
jo
xorb
add
shl
loopne
lock
adc
and
xor
inc
jb
bound
jo
xorb
add
shl
loopne
lock
shrl
mov
dec
xchg
loopne
pop
jmp
imul
pushf
jne
inc
push
sub
dec
ljmp
fs
and
or
fisttpll
mov
push
nop
mov
adc
jno
and
mov
sub
aaa
pop
sub
xchg
xor
orl
rclb
mov
js
or
aam
mov
inc
or
hlt
mov
fdiv
jns
aaa
mov
cmpsl
dec
sbb
lods
jge
ret
cwtl
aam
add
shll
jp
nop
cli
xor
inc
sub
add
iret
xor
fldcw
cmp
mov
push
fiaddl
insl
cmpsb
sbb
dec
movsb
sbb
andnps
and
js
sti
jg
inc
repz
cmp
push
scas
push
pop
aaa
jb
jl
sbb
sti
sbb
enter
sbbl
adc
int3
pop
pop
andb
inc
and
mov
mov
jle
mov
and
sbb
in
inc
data16
sub
subb
cli
repnz
into
jbe
adc
adc
cmp
int
ds
jne
pop
out
or
xor
in
shll
lret
cwtl
movsb
cli
mov
push
dec
adc
fs
lock
cmp
mov
shrb
fdivl
inc
mov
cltd
sub
in
fistps
fbstp
in
jne
jns
ja
dec
mov
push
or
push
and
fs
adc
jo
mov
out
and
enter
enter
mov
push
rcll
cmp
jno
push
inc
icebp
int
inc
and
xchg
call
add
pusha
xchg
cli
jp
mov
lahf
add
push
outsb
pop
mov
jmp
mov
mov
es
xlat
fcoms
aam
mov
enter
lret
xor
cmc
and
ja
mov
mov
icebp
addr16
test
cmp
jbe
das
cltd
xlat
pop
push
push
faddl
cmp
push
mov
out
stc
push
sub
pop
icebp
pop
inc
enter
addb
sub
xchg
mov
out
inc
rcll
sbb
inc
div
adc
adc
xlat
cwtl
push
leave
xchg
push
add
cli
sahf
cli
test
sbb
xor
adcl
push
das
fpatan
push
test
ret
dec
push
outsl
sahf
lahf
mov
ds
xchg
mov
xor
adc
inc
mov
adc
aas
adc
xor
push
iret
test
hlt
dec
bound
or
ljmp
xor
fists
aad
xchg
es
test
jno
cmp
popf
cwtl
cmp
jmp
mov
or
shll
in
jo
inc
adc
push
rorl
fildll
out
add
pop
int
sbb
aaa
aas
push
xlat
xchg
xlat
cmp
ja
add
int3
lret
or
loope
mov
sti
shlb
jle
inc
mov
repnz
lea
adcl
flds
outsb
loope
xchg
je
fcomi
pop
cwtl
push
pop
outsw
and
fnsave
mov
sub
cmp
xchg
rcrl
or
add
adc
out
adc
mov
pop
push
jns
pop
push
movsl
cwtl
xorb
mov
adc
fsubl
ret
cltd
inc
es
or
xor
sub
stos
iret
repnz
cmp
jae
xor
mov
push
jb
pop
push
sbb
leave
pop
add
push
pop
scas
sub
mov
arpl
push
adc
stos
mov
movsb
jg
and
jmp
add
imul
adc
cld
xchg
out
jmp
mov
shlb
or
sbb
mov
fnstsw
sub
pushf
popf
inc
jl
inc
lea
pop
test
stos
ljmp
scas
adc
cmp
repz
mov
jnp
push
lock
push
cmp
aas
or
je
inc
jl
adc
jecxz
pop
xor
mov
std
movsb
lahf
cltd
push
into
mov
fsubrs
into
mov
fs
aaa
and
ret
cmp
inc
pop
sbb
test
jno
mov
inc
enter
sbbb
hlt
pop
scas
or
movsb
pop
test
mov
ja
cmp
rcr
das
sbb
ret
stos
mov
sub
in
stc
shl
hlt
gs
jp
lea
or
mov
cmp
push
adc
ja
or
mov
clc
mov
add
adc
sbb
jbe
sub
aaa
outsb
inc
aam
repnz
movsb
xchg
mov
dec
mov
fidivs
popf
mov
cwtl
inc
xlat
sahf
imul
mov
inc
inc
out
clc
pop
jl
stos
movsb
mov
rorb
xchg
scas
jns
push
int3
mov
mov
or
f2xm1
aaa
inc
daa
jb
jle
insb
mov
cld
sbb
or
pop
and
das
sbb
mov
dec
or
scas
xorl
jnp
gs
test
std
ds
or
inc
repz
jb
das
jbe
cld
in
fsubrl
and
mov
add
shr
add
mov
pop
mov
in
jle
addb
add
pop
add
leave
xchg
jb
je
mov
mov
loopne
cmpsb
sbb
sbb
push
mov
ljmp
aaa
int3
pusha
ds
and
xchg
add
mov
fwait
iret
std
pop
cmp
pop
cmp
mov
cmpsb
rorl
push
pop
sti
inc
pop
es
inc
push
mov
dec
jns
xorb
sub
sbb
jbe
cltd
mov
add
jmp
sub
or
call
jo,pn
push
cmp
push
mov
jecxz
out
push
xor
dec
popf
lds
jne
jne
aaa
sbb
ffree
add
lret
out
and
test
fwait
inc
out
mov
leave
lods
fcomi
and
or
into
negl
fisttpl
movsl
movsb
mov
pop
mov
dec
popf
lds
jg
pop
loop
je,pn
xor
jb
loop
sub
mov
out
pop
imul
push
not
arpl
cmc
decb
sbb
insb
iret
outsb
xchg
add
or
jmp
dec
adcb
xchg
mulps
cmp
adc
adc
jg
fldt
loopne
sbb
sub
mov
xchg
test
aad
mov
cmp
rol
dec
lahf
adc
loop
mov
cmpsb
sbb
es
mov
and
invd
push
cld
mov
and
out
rclb
sbb
xchg
arpl
cli
or
sub
in
pcmpgtd
stos
in
lods
adc
stos
adc
cmpb
and
pop
or
mov
divl
pop
add
cmp
add
cltd
movsb
fistps
cltd
negb
test
add
fwait
push
add
testl
jle
fwait
into
xor
xchg
sbb
cmpsb
cmpsl
sti
je
enter
in
pop
mov
add
add
and
insl
scas
xor
aad
inc
mov
jg
or
xorl
adc
lret
sbb
mov
outsb
jge
bound
pop
movzwl
mov
pop
adc
push
fsubs
into
xchg
xchg
pop
and
call
shll
je
test
fdivrs
push
scas
jnp
pop
aad
pushf
xor
add
push
add
inc
cltd
test
loopne
jl
lcall
nop
rcrb
cmc
inc
inc
sbb
mov
xchg
xchg
movhps
sub
int
iret
stc
inc
fwait
cmpsl
add
add
fsubrl
mov
pop
repz
aas
fwait
jle
and
add
rcrb
fsub
loopne
in
or
push
jnp
fnstenv
stos
popa
hlt
adc
cmp
out
test
and
scas
xor
std
inc
stc
sbb
cmp
inc
aas
mov
ss
adc
push
jg
inc
sub
sbb
out
clc
push
nop
mov
ret
rorb
xor
jecxz
lods
jg
xchg
mov
dec
xor
sbb
das
adc
aam
xchg
mov
imul
sub
inc
jns
into
push
adc
roll
cli
or
out
push
or
rcr
les
pop
sbb
clc
fildl
fcmovnb
sbb
ja
adc
call
outsb
mov
aam
dec
mov
adc
dec
mov
and
cmpsb
or
scas
ret
lods
int
js
arpl
divl
in
in
out
push
inc
int3
imul
je
mov
pop
sbb
subl
sub
test
dec
repnz
int3
mov
and
xchg
xchg
push
enter
outsl
push
lods
out
xchg
jo
adc
lret
xor
dec
aas
lock
jns
std
push
add
dec
sahf
or
popf
sbb
scas
xor
xor
cwtl
fwait
sub
test
mov
mov
not
inc
fwait
mov
jle
pop
mov
mov
hlt
cmp
aaa
repnz
pop
mov
fwait
add
xchg
dec
pop
mov
rcll
sarl
in
adc
jl
xor
inc
sub
cmp
lods
test
dec
addr16
jmp
aas
dec
mov
xor
in
gs
cld
inc
mov
xor
xor
cmp
sbb
fsub
rcrb
push
cwtl
cmp
and
and
pop
adc
inc
daa
jl
loopne
data16
jno
or
mov
data16
imul
fdivl
jge
fisubrs
aas
xchg
inc
add
fwait
adc
movsl
dec
es
add
testb
mov
add
xchg
ret
int3
inc
or
cld
mov
dec
sbb
push
neg
and
jns
sub
xor
jb
lret
sbb
je
leave
mov
jl
sahf
mov
int
je
into
iret
fs
xor
ret
daa
xor
mov
lahf
sub
data16
mov
mov
or
dec
fwait
push
lods
lock
push
jge
xor
push
mov
outsb
inc
das
pop
pop
cld
movsb
rcrb
dec
fadd
ret
stos
mov
insl
pop
jp
jecxz
ficomps
ja
loopne
insl
and
scas
ret
ljmp
xchg
jecxz
adc
dec
push
push
jae
adc
sahf
jle
cmp
cmp
jge
pop
mov
xchg
sti
pop
roll
nop
imul
filds
fsubrl
addl
mov
inc
push
shl
jnp
pop
mov
cmp
pop
push
ret
jle
xchg
sbb
ss
mov
push
and
clc
push
outsb
adc
lods
xchg
lea
xchg
and
and
push
mov
push
js
dec
lea
ljmp
push
les
lea
mov
or
push
test
cmp
out
loopne
mov
shr
jge
int3
in
aad
scas
and
mov
scas
mov
xchg
push
xchg
loopne
adc
jp
jecxz
icebp
movsbl
pop
in
mov
and
cwtl
jmp
sbb
xor
sbb
sub
setge
or
jp
lret
cmpsb
mov
ret
bound
xchg
jns
out
or
mov
lock
cmp
adc
imul
jo
jle
das
and
fstl
cmpsl
iret
js
sub
push
roll
movsl
stos
and
jmp
fwait
sbb
push
add
lret
sbb
hlt
xor
sbb
out
bound
ret
mov
mov
cmp
or
out
add
sbb
jns
aaa
popa
or
and
nop
mov
stc
les
sti
xchg
out
mov
push
adc
icebp
and
dec
mov
shl
xor
popa
fcoms
inc
aas
cwtl
jo
mov
lahf
adc
add
test
ljmp
or
test
int
or
mov
sbbb
out
sbb
dec
inc
lret
ret
rolb
stc
lret
xchg
push
sarl
dec
call
and
nop
js
inc
loopne
ret
sub
xlat
mov
lahf
pop
mov
data16
in
inc
xlat
mov
mov
jle
jns
mov
jp
loopne
lcall
ja
and
lods
cmp
mov
inc
fbstp
daa
sarb
std
xor
ficompl
mov
sbb
jae
inc
fisttpl
insb
pop
ds
push
and
rorb
jae
lret
aaa
sbb
xor
jecxz
add
lahf
inc
and
inc
pop
sbb
sub
sub
rcrb
test
shrl
mov
pop
xchg
dec
jnp
outsl
push
arpl
outsl
shrl
mov
push
jge
popl
pop
lret
mov
vpsubd
pop
sahf
mov
lret
jmp
shl
addr16
test
data16
mov
dec
add
push
add
and
sbb
out
pop
imul
jp
arpl
movsb
out
sbb
cmp
xor
lret
push
popf
push
andl
push
push
xchg
sarb
sub
sbb
inc
out
mov
mov
jle
lea
stos
ror
cli
lods
test
pop
inc
shlb
movntps
sbb
dec
adc
and
popf
sbb
aad
mov
fistpl
orb
xor
imulb
aam
and
mov
fs
adc
xchg
loope
int
popa
jp
hlt
iret
stos
pop
push
inc
lahf
aam
or
mov
hlt
add
push
cwtl
cmp
cwtl
pop
les
ljmp
mov
sub
pop
cmp
lret
mov
push
mov
fidivrs
push
imul
sbb
fildl
push
outsl
jbe
call
add
jo
push
mov
sbb
fldenv
mov
mov
dec
jb
rorb
lods
shlb
sahf
cmp
lcall
lock
mov
xchg
sub
pop
mov
push
insl
inc
fstp
pop
dec
daa
lahf
pop
lea
cmp
push
imul
stos
cmp
push
jbe
das
inc
jl
stos
fsubrs
xchg
gs
push
loop
pop
fnsave
lea
rcll
cmpsl
imul
mov
scas
inc
push
inc
pop
pop
add
dec
cmp
daa
outsb
mov
mov
test
loope
xor
mov
cmp
xchg
aas
shlb
fistpl
dec
mov
pop
and
test
mov
cmp
jecxz
bound
mov
fldenv
jns
xchg
rcll
sti
push
lret
jl
aaa
in
xor
mov
frstor
rcl
lds
xor
gs
mov
xchg
cmpsb
sub
xor
pop
jp
scas
jmp
add
bound
scas
sub
loope
jb
aad
and
and
jo
sbb
jl
sub
jmp
lock
inc
cltd
and
add
mov
movsl
inc
aam
push
std
sbb
pop
lret
xchg
je
popf
aas
aam
mov
push
push
pop
test
test
and
ret
sub
sub
jmp
ss
xchg
icebp
loope
lock
in
enter
jg
js
jg
mov
test
iret
adc
pop
pop
jp
sahf
out
xor
nop
mov
cli
outsl
pop
xchg
jg
xchg
stos
dec
mov
mov
inc
scas
or
int
and
adc
adc
pop
mov
or
ja
test
scas
jg
call
xchg
lds
test
test
out
clc
push
push
dec
push
das
fs
scas
jo
cmp
shrl
add
inc
cmp
addr16
daa
addr16
inc
popa
jae
rcrl
push
push
add
insb
lahf
cmp
je
add
clc
add
inc
xchg
mov
jb
jbe
push
mov
ja
mov
mov
sbb
popf
insb
int
push
jg
cmp
int3
jno
jmp
mov
pusha
popf
pop
add
or
jae
icebp
cmp
xchg
nop
les
pop
daa
inc
push
xchg
fs
mov
mov
movsb
mov
jae
xor
cmp
xlat
subb
cwtl
mov
repnz
sbbl
or
out
pop
bound
cs
jge
mov
pushl
nop
iret
jle
inc
int
and
adc
rcll
xchg
push
xor
addr16
xor
shl
or
pcmpgtb
sbb
daa
sub
movsb
rorl
enter
inc
nop
call
cli
ja
in
sbb
fldenv
cld
ret
xchg
fsts
ret
out
insb
lds
inc
repnz
dec
inc
notb
pop
pop
inc
cld
aad
xor
leave
mov
in
fwait
js
fcmovnu
lcall
xchg
inc
lcall
jbe
jmp
jns
dec
enter
mov
mov
mov
jno
push
jmp
pop
movsl
loopne
iret
push
xor
lods
add
scas
es
pop
sbb
cmpsb
xor
pop
fwait
pop
mov
xchg
outsb
jmp
call
mov
jno
into
add
scas
sti
mov
add
dec
or
xlat
mov
repz
repnz
js
subl
xor
dec
sbb
into
pop
ja
push
lods
fnstenv
pop
mov
movsb
sti
in
jnp
push
or
clc
mov
les
out
out
mov
push
outsb
test
lods
pop
xorl
popa
sarb
enter
jo
xor
adc
add
ja
dec
scas
sub
mov
inc
sbbb
fsubp
or
pop
enter
cmp
mov
pop
push
icebp
dec
adc
sub
pop
fsts
repnz
jmp
clc
into
outsb
dec
stc
mov
inc
and
pop
or
sub
pop
dec
ficompl
xor
nop
pop
cmp
xor
outsl
cmp
xor
pop
incb
mov
dec
dec
and
sar
cmpsb
push
pop
popf
pop
inc
scas
lds
repz
lret
repnz
pop
rcrb
or
sbb
loopne
movl
stos
jge
jg
into
lock
pusha
cs
xchg
int
and
and
out
cmp
sarl
pop
add
negb
andl
das
ficomps
inc
fsubrs
adc
test
xor
add
mov
and
jno
pop
jle
inc
ret
fildl
int3
pop
out
andb
nop
daa
mov
pushf
dec
shll
cwtl
shl
mov
mov
popa
push
adc
cmp
cmpsb
lret
ret
fmul
popa
mov
fmul
xchg
xchg
add
and
adc
or
push
pop
sbb
loope
pop
repz
and
and
int
sub
mov
push
xchg
mov
dec
dec
pushf
fistpl
leave
iret
sbb
mov
push
int
in
adc
mov
xor
pop
aam
int3
test
jecxz
cs
andb
stos
pop
sub
int3
subl
sar
leave
incl
ljmp
inc
sbb
xlat
jp
or
xor
sub
adc
jne
adc
adc
sub
dec
mov
mov
clc
loope
dec
cmpsl
dec
ret
popf
in
bound
mov
fbstp
mov
dec
push
jmp
or
decb
or
push
mov
rclb
mov
mov
adc
push
pop
pop
adc
ret
cmp
out
and
loope,pn
leave
sbb
faddl
fwait
inc
ss
out
lahf
clc
cli
fisubrs
add
loope
sbb
cmp
cwtl
insb
mov
push
daa
mov
ljmp
ret
cwtl
imul
in
stc
push
mov
insb
sub
sub
push
push
mov
movsb
xor
dec
dec
and
adc
pop
push
adc
push
jo
add
xchg
or
sbb
pop
ret
xchg
sub
les
inc
aam
mov
fistpll
push
push
push
and
push
pop
dec
push
fisubl
lods
mov
adc
xor
cmp
je
call
xlat
scas
lcall
aad
pop
ret
rcrb
sub
sub
or
sub
sbb
es
sub
test
pop
pop
cmc
xchg
sbb
jae
stc
or
es
xor
inc
std
add
dec
cmp
jmp
push
sbb
and
jae
pop
sub
das
cmp
xchg
xchg
fadd
dec
add
push
xchg
pop
xchg
sbb
jmp
mov
das
sub
aad
test
sub
lcall
lods
pushf
jne
jecxz
adc
loopne
ljmp
mov
orl
stos
flds
arpl
repz
test
pop
xor
dec
jle
movsb
mov
rcl
mov
xorb
and
inc
pop
cmp
mov
arpl
cmp
sbb
mov
push
xchg
or
outsl
movsb
xor
stos
mov
fiaddl
pop
stc
lock
adcb
in
cmpsl
adcb
add
pushf
sti
bound
mov
xor
inc
jb
bound
jo
xorb
add
shl
loopne
lock
adc
and
xor
inc
jb
bound
jo
xorb
add
shl
loopne
lock
adc
inc
jb
loop
push
jo
xorb
mov
shl
loop
rol
ret
and
push
adc
add
push
loopne
lock
jg
outsl
or
xchg
mov
mov
pop
sbb
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
test
mov
leave
movsb
clc
movb
adc
sub
cmp
push
pop
data16
js
mov
mov
out
negb
inc
sub
cmp
sub
jbe
mov
test
mov
clc
call
xor
push
sub
or
cmpsb
sti
ret
aaa
cmp
inc
mov
jae
rcll
xchg
jb
push
push
es
call
pusha
jnp
lock
mov
pop
or
data16
pop
sarl
jg
test
cmp
push
sbb
cs
push
mov
fs
in
mov
add
pop
out
cmp
fcomps
loopne
sbb
hlt
push
out
out
enter
push
mov
jns
fwait
xchg
mov
inc
pop
aaa
insl
mov
xchg
or
add
push
dec
sahf
add
jns
or
cmp
ret
jno
or
sbb
pop
ret
pop
add
xchg
mov
cwtl
cmpsb
test
mov
out
push
clc
rorb
sbb
push
cmp
dec
pop
pop
push
push
in
shr
into
stc
test
testb
push
dec
xor
cmp
bndldx
sbb
aam
xlat
fldt
mov
inc
push
dec
dec
push
sub
aaa
sub
leave
cli
lret
int
rclb
idiv
push
or
sbb
sub
cmp
push
pop
pushw
xchg
mov
enter
call
push
sbb
sub
cmp
push
pop
pushw
xchg
jbe
or
and
cmpsb
sub
idivl
dec
cmpsl
mov
pop
pop
popa
inc
mov
add
mov
daa
lret
dec
and
ss
bound
shlb
fiadds
pop
data16
cltd
xor
out
clc
clc
mov
scas
or
out
imul
icebp
mov
sbb
dec
divps
sbb
lods
push
fistps
or
movsb
pop
mov
inc
sub
repnz
lea
sbb
mov
xor
pop
xchg
sti
fdivl
push
pop
jg
out
aam
pop
aas
call
adcb
pop
loop
ret
shlb
gs
cltd
sbb
fdivr
dec
push
int3
push
fisubs
push
xchg
mov
mov
mov
xchg
shl
mov
std
add
in
jmp
add
loop
xor
ret
fisubl
insl
mov
jnp
or
popa
xlat
or
xchg
lods
cli
sub
mov
out
mov
sbb
dec
outsl
mov
stc
pop
jae
mov
jo
adc
pop
cmp
test
lods
pop
add
aam
adc
in
push
mov
sbb
mov
iret
jl
jp
push
cs
jnp
cmp
cmc
pop
sbb
xchg
test
fnstcw
dec
and
lods
pop
mov
mov
and
adc
pop
jno
test
jle
aas
enter
pop
mov
jp
aam
mov
popl
mov
add
or
adc
sbb
test
xchg
mov
jecxz
xchg
ja
rcl
jp
mov
mov
cmc
adc
jmp
cmpsb
outsl
mov
sahf
icebp
scas
stos
push
jns
mov
sbb
dec
int
mov
inc
add
inc
dec
mov
negb
cmp
sahf
lret
push
sahf
int
and
out
jae
jns
or
aas
sub
xor
shl
scas
pushf
sbb
test
in
nop
dec
gs
jo
push
mov
cmp
leave
pusha
xchg
push
sbb
mov
inc
gs
dec
xchg
je
xor
ret
mov
sbbb
xor
pusha
xor
out
fdivrl
data16
jae
mov
mov
test
cmpsb
mov
cmpsl
cmp
in
xchg
imul
sbb
xchg
stos
jno
jmp
cmp
cmp
xchg
pop
adc
cmpb
and
popa
cs
jae
test
adc
cwtl
push
inc
sti
sub
sub
xchg
lcall
rcrb
scas
fwait
pushf
popa
leave
cltd
pop
ds
stos
sbb
imul
mov
lea
pop
add
test
loopne
sarl
mov
ds
out
es
aam
dec
xor
xchg
adc
cmp
push
rcrb
cmp
repnz
rcrb
and
sbb
mov
add
mov
outsb
pop
push
cmp
or
xchg
mov
orl
pop
xchg
and
pop
inc
shrb
xchg
rcrb
cmp
mov
pop
cld
jo
or
lds
insl
jbe
ret
incb
lret
lods
mov
cltd
test
or
das
cs
mov
jns
movsl
adc
aas
jl
add
fmulp
pop
and
inc
test
fisubrl
mov
sbb
cwtl
and
or
sub
outsb
into
inc
sbb
adc
xchg
jb
dec
hlt
xor
pop
mov
cltd
pop
pop
insl
dec
mov
and
out
adc
jnp
test
mov
mov
scas
sbb
push
xchg
lret
daa
rcl
ljmp
sub
jle
inc
pop
mov
ljmp
inc
cld
inc
popa
lods
inc
mov
and
clc
and
stc
xchg
in
mov
test
cmp
adc
loop
dec
mov
cmp
mov
fs
pop
iret
popf
inc
popa
dec
mov
pusha
jle
mov
out
push
lea
pushf
mov
add
adc
rclb
fcomps
add
xor
add
add
xchg
mov
aad
out
sub
inc
jmp
ret
or
sub
jnp
outsl
add
inc
xchg
xchg
cmp
movsb
dec
or
mov
add
or
push
mov
xchg
cwtl
mov
rcll
mov
test
cmpsl
lods
pop
pop
xlat
cmpsb
movsb
xchg
inc
les
cmp
aam
int3
enter
mov
fcomi
xor
dec
dec
sbb
sahf
into
adc
add
cli
inc
roll
sub
rcl
cmp
pop
add
dec
ret
xchg
lock
pop
scas
enter
lock
mov
out
push
sbb
insb
shlb
dec
shll
lret
ljmp
ss
stos
sbb
enter
add
repz
stc
rorl
xlat
mov
add
xor
cmpsl
idiv
cltd
lea
aad
mov
adc
jbe
add
outsl
popf
and
int3
or
and
loope
aaa
inc
or
jp
or
cmpsl
xchg
std
dec
push
int3
insb
shl
into
cld
pusha
loop
jg
jae
push
push
outsl
jl
cmp
flds
jb
sbb
pop
sti
negb
mov
jo
daa
sbb
popf
push
lret
imul
aad
into
rolb
xchg
cmp
pushf
cwtl
cltd
hlt
pop
adc
test
pushf
and
push
call
daa
sahf
pusha
mov
rolb
jnp
jl
mov
stos
or
mov
mov
popf
xlat
jle
mov
lcall
adc
shrl
ret
hlt
lcall
insb
sub
push
aaa
and
outsb
pushf
sbb
add
in
les
hlt
aam
or
adc
adc
loop
adc
pop
push
fnsave
mov
iret
cld
sub
js
ds
cld
lods
repz
negl
push
pop
call
pop
jmp
xchg
data16
fnsave
lea
test
xchg
inc
sub
sub
clc
cmp
stos
xchg
das
xor
sahf
cmp
inc
popf
fsubrs
dec
jae
cmp
mov
xchg
fbld
or
pop
add
push
lea
cmp
mov
sub
test
pop
mov
icebp
mov
daa
ret
jle
and
adc
inc
mov
mov
rcrb
jne
int
scas
fcmovbe
xor
dec
out
inc
mov
mov
loopne
sbb
xor
ljmp
repnz
inc
inc
mov
call
or
push
mov
shrl
aaa
mov
pop
sub
xor
jno
pop
sbb
dec
jge
jge
inc
mov
dec
mov
test
into
xchg
dec
aas
pushf
and
popa
xchg
push
push
orb
lods
pop
jns
add
mov
test
cmpsl
stc
shl
jne
adc
dec
sub
or
pop
inc
push
data16
xor
nop
test
jno
or
subb
lret
arpl
mov
int
jecxz
or
aaa
xlat
icebp
mov
test
add
mov
add
or
sbb
add
loope
cmpsb
leave
mov
sub
sbb
outsl
xor
xlat
mov
std
scas
and
sbb
xor
inc
xchg
sbb
cmp
lcall
sarb
sub
negb
sbb
loop
xchg
adc
fidivs
sbb
fcmovb
mov
xlat
fidivrs
out
ds
rcll
jmp
push
psraw
mov
inc
xchg
les
jmp
stc
ret
fwait
xchg
push
xchg
imul
ret
sbb
fwait
and
imul
mov
cmc
insb
jo
dec
dec
enter
dec
inc
test
or
nop
iret
popa
cmpsl
gs
incb
loop
dec
imul
cmp
addr16
jmp
jo
pop
xchg
cli
es
mov
mov
add
je
cltd
xchg
ret
out
mov
xor
sahf
or
cmp
add
jge
fdiv
fdivr
in
jnp
mov
xchg
mov
insl
jne
aas
arpl
jae
js
sub
fists
jmp
ss
outsb
cmpsb
dec
xchg
jmp
jl
xchg
ljmp
pop
mov
mov
insb
test
and
das
imul
aas
imul
in
in
fstl
pop
xor
sub
imul
pop
insb
test
mov
cmp
mov
xor
fldt
adc
sub
mulb
fsubrs
add
scas
xor
push
rclb
lds
jae
iret
and
lods
aas
in
mov
dec
mov
jb
lcall
js
shrb
sbb
mov
pushf
incl
xorb
jg
fsubs
lock
not
cld
stos
imul
in
idiv
sbb
in
mov
mov
adc
pop
lods
jmp
iret
push
nop
xchg
in
shlb
cld
stos
sub
insb
daa
lock
jl
xchg
ret
lcall
loopne
adc
iret
inc
shlb
ljmp
movsb
aam
popl
mov
sti
and
enter
in
inc
cmpsl
sbb
push
fmul
jne
mov
inc
idivb
dec
pop
cmp
stos
jmp
not
test
adc
call
gs
in
add
or
loop
push
dec
leave
inc
jecxz
mov
xlat
fbstp
xor
fwait
aad
aaa
es
xchg
mov
testl
sub
pop
shl
add
mov
sbb
xlat
rclb
mov
test
and
aas
cmp
iret
out
mull
push
push
je
cmp
shr
push
and
pop
punpckldq
mov
std
loop
inc
mov
add
xchg
icebp
push
fistpl
sub
fnstcw
sbb
repnz
notl
sub
lods
stos
sub
scas
xchg
mov
jge
xor
mov
adc
enter
xchg
sub
pop
mov
jp
cld
cld
or
gs
fistps
and
das
shrl
gs
xor
adc
jle
rol
mov
sbb
cmpsl
mov
stc
fisttpll
jl
inc
mov
sub
repz
inc
fwait
outsb
lret
mov
sbb
mov
jnp
test
cli
test
leave
push
and
mov
das
loop
adc
xor
add
sbb
aam
subl
jle
push
fwait
or
lds
cltd
daa
ret
push
test
lds
ret
and
sub
les
mov
sbb
das
sbb
icebp
fidivs
pop
inc
xchg
mov
pop
mov
lea
push
ret
xchg
xor
lods
es
lods
pop
pop
mov
mov
pop
cld
into
xchg
or
lcall
lock
repz
dec
inc
or
pop
adc
xchg
jne
ljmp
lock
cmc
pop
and
loopne
push
mov
sub
bound
pop
add
pop
ds
sub
or
jmp
in
lods
push
popa
sahf
mov
sarb
dec
cmp
pusha
imul
adc
stos
lret
pusha
sarb
pop
pop
cmpsl
cmp
popa
fcomps
cmpsb
cli
inc
sub
jns
lret
lret
jp
push
sub
jo
mov
loop,pt
jno
mov
int
pop
sub
push
imull
jo
ja
fcom
push
call
pop
inc
adc
and
or
sbb
test
mov
cmp
ret
popa
sbb
ljmp
push
test
sbb
test
xchg
call
hlt
mov
pop
cs
cli
in
fcmovnbe
scas
mov
jo
repz
pop
pop
lret
in
fdivs
push
loope
jecxz
out
lods
xchg
cmpsl
jbe
push
cltd
xchg
inc
pusha
aaa
pop
mov
pop
or
mov
lret
pop
lock
sbb
pop
dec
and
dec
adc
in
push
xchg
sub
jae
insb
enter
mov
mov
sarb
jb
jb
pop
jbe
out
movsb
push
jae
es
sbb
inc
xchg
inc
or
mov
mov
mov
mov
jbe
pop
mov
in
and
xchg
xor
loopne
jg
into
mov
les
data16
mov
jmp
push
dec
dec
lea
and
cmp
mov
test
bound
insl
je
xchg
or
es
jge
lahf
test
pushf
xchg
lahf
push
ljmp
sub
or
cmp
inc
pop
or
in
jp
out
lret
lods
pop
sbb
and
xchg
dec
jl
or
fmuls
adc
dec
sahf
les
jl
lcall
stos
mov
out
es
jmp
jo
mov
push
pop
out
lds
cli
lret
xor
push
loope
xor
xchg
add
cs
ljmp
and
push
jnp
loopne
jle
test
mov
test
or
ljmp
add
xchg
shll
iret
lea
pop
bound
dec
aas
mov
xchg
adc
call
cwtl
cmp
push
adc
out
leave
cwtl
outsl
mov
aam
lods
in
mov
mov
ret
hlt
ljmp
adc
sbb
in
lahf
xchg
push
add
nop
not
dec
xchg
push
addr16
repz
inc
add
stc
lea
push
xchg
sbb
ds
stc
push
mov
fs
pop
sub
cmp
mov
or
aaa
jne
dec
and
shr
inc
mov
pushf
mov
into
xchg
cmp
aam
movsl
int3
push
jo
sub
mov
icebp
cmp
sub
or
insl
xchg
jle
push
into
sbb
push
cs
ja
sub
mov
arpl
bound
repnz
adc
out
jae
test
ljmp
pop
test
cli
inc
mov
sbb
jne
add
divb
fs
push
mov
pop
mov
jp
cltd
dec
push
test
xchg
pop
pop
frstor
xor
inc
sub
or
mov
push
dec
push
outsl
mov
je
mov
fwait
rorl
cmp
mov
cmpsl
je
jnp
inc
push
inc
call
mov
xchg
jle
pop
and
jp
bound
cmc
in
mov
rcl
insl
test
dec
stos
mov
into
xor
outsb
push
nop
adc
adc
pop
mov
stos
movsb
pop
jmp
jle
popf
mov
les
ret
and
sub
fiaddl
push
or
jo
or
imul
xchg
push
adc
xor
push
je
jnp
daa
or
xchg
loope
iret
pushw
cmpb
in
push
mull
mov
cmp
push
dec
fs
pushf
ret
stos
out
xchg
mov
sbb
adc
pop
sub
push
jge
sub
jb
testl
inc
xor
int3
cmp
fcmovne
and
inc
cmpl
xchg
adc
outsl
shll
orb
pslld
and
shll
mov
fidivrs
or
stc
inc
aas
add
popf
pop
popa
xchg
std
pop
sub
sub
cmc
in
pop
icebp
ret
arpl
or
sarl
test
repnz
push
mov
mov
add
cld
out
jmp
shrb
jl
cmp
adc
cmpl
push
adc
push
jne
int
sbbl
or
ja
mov
adc
ret
lock
sub
loope
sub
bound
sbb
pop
xchg
and
cmp
insl
dec
push
ss
mov
repz
rcll
cmp
movd
pop
adc
sub
xor
cli
ljmp
jb
fs
fucomi
push
clc
xchg
loopne
xchg
ljmp
and
insb
mov
pop
or
mov
push
or
mov
jmp
gs
lret
popf
mov
cmc
jge
mov
dec
fwait
mov
inc
adc
jle
pop
inc
cwtl
jnp
sbb
sti
dec
inc
fdivrl
pop
aas
jl
mov
fidivs
jg
loope
in
sbb
lods
sbb
mov
test
daa
js
push
data16
xor
or
cmc
or
jmp
pop
sub
fsub
scas
add
outsl
mov
sti
and
push
push
lods
add
call
mov
mov
lcall
mov
sbb
mov
add
movb
pop
add
stos
mov
jge
test
aam
repnz
cli
mov
and
addr16
stc
scas
lcall
cmc
pop
xor
push
test
cmp
sar
xchg
ficomps
ficoms
add
xor
and
and
sbb
sbb
mov
popa
rcrl
int
dec
fwait
data16
add
bound
das
or
xchg
mov
and
orl
shr
xchg
jp
scas
stos
inc
sub
cmpsb
cmpsl
push
xchg
in
xor
adc
lcall
mov
ret
popf
inc
insl
call
cld
in
cmp
cld
lcall
rol
xor
mov
loope
mov
lahf
popf
and
outsb
sbbb
fucomi
fwait
testb
push
adc
jae
sub
mov
cmpsb
jp
in
dec
mov
hlt
inc
sub
movsb
push
dec
xor
mov
pushf
lods
andl
ficompl
sbb
rclb
stos
jecxz
mov
push
adc
add
dec
push
jecxz
int3
jno
fs
in
adc
iret
and
dec
loopne
push
aam
movsb
clc
jbe
stos
aam
jo
and
in
stos
rclb
sub
stc
mov
hlt
dec
push
int
pop
inc
sbb
mov
pop
lods
jl
and
push
ret
mov
dec
ficomps
jbe
clc
cwtl
and
pop
dec
mov
mov
lds
jmp
mov
call
pop
xchg
ja
into
xchg
mov
shlb
inc
add
bound
dec
inc
xor
lods
aas
bswap
lods
shrl
int3
pop
sti
punpckhwd
jns
add
cld
push
icebp
inc
pop
aaa
and
repz
and
int
xor
inc
dec
jo
stc
test
insb
and
fs
into
inc
iret
dec
pop
mov
adc
stc
cmpsb
incb
mov
add
or
mov
sbb
imul
dec
hlt
call
pop
out
leave
sti
push
push
add
and
sbb
sti
fs
sahf
repnz
inc
or
cli
sub
push
dec
inc
jle
in
fucomp
dec
dec
jne
clc
push
cli
into
mov
add
push
iret
jb
test
pop
mov
push
adcl
sub
cld
push
loopne
lahf
outsb
cmovp
jle
sub
stos
adc
icebp
scas
xchg
lret
andb
xlat
js
xor
add
shlb
clc
xor
add
outsl
inc
sbb
aas
test
mov
mov
xorb
jne
mov
and
adc
fistps
inc
fnsave
and
inc
cmp
jbe
pop
rorl
cmp
inc
xchg
inc
clc
ljmp
out
jb
test
aaa
fsubrs
dec
mov
std
xchg
sub
inc
outsl
sub
lock
adc
push
adc
or
jo
push
test
std
mov
test
sbb
fcomi
push
out
test
ret
xchg
push
cwtl
push
dec
xchg
xchg
cld
xchg
mov
les
fcmovne
inc
enter
fchs
mov
pusha
jne
cmp
mov
add
std
addb
jbe
cmpb
add
loop
in
incl
subb
cmpsl
test
es
lret
push
aad
jge
push
push
pop
jnp
scas
push
test
ja
dec
dec
fidivrs
das
ss
jae
sub
xor
push
ret
divb
ret
clc
mov
movsl
cmp
add
test
push
fdivs
add
imul
and
ss
out
sbb
or
inc
or
jle
dec
loopne
in
jbe
mov
mov
popa
fwait
adc
cld
addr16
enter
in
and
sub
das
add
mov
cmpsb
xor
gs
enter
fs
lea
pop
dec
cmp
sub
pop
xor
inc
mov
xor
das
testb
aaa
insb
mov
insl
arpl
mov
add
inc
mov
mov
or
shrb
aam
cli
int3
dec
push
popf
test
sbb
xchg
out
adcb
jno
push
dec
cmp
or
rol
inc
les
cli
push
dec
and
mov
mov
add
div
outsb
pop
nop
lds
popa
rcrb
mov
fwait
mov
pop
adc
and
push
es
dec
int3
negb
popa
outsb
mov
xlat
popa
fdivl
and
mov
repnz
loope
mov
enter
call
push
sbb
sub
cmp
push
pop
pushw
xchg
mov
enter
call
push
sbb
sub
cmp
push
pop
pushw
xchg
mov
push
enter
call
push
sbb
sub
cmp
inc
pop
pushw
xchg
mov
cwtl
cld
test
mov
out
jbe
push
or
mov
sub
dec
xor
fisubs
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
cmpsb
jge
dec
xchg
inc
loopne
pop
movsb
dec
lret
sbb
push
int
fnsave
fs
mov
cmpsb
jge
dec
xchg
sub
imul
int
fnsave
push
mov
scas
mov
pop
out
adc
add
jecxz
add
dec
xchg
jle
jbe
or
or
adc
xchg
cmp
or
adc
lds
divps
mov
ja
aaa
out
insb
out
pop
cmp
fsubrl
rcll
pop
mov
shrd
movsl
clc
int
lods
jbe
push
mov
js
push
shlb
bound
popa
pusha
fnstcw
inc
mov
lea
lea
pop
mov
push
sub
loop
adc
lods
and
stc
and
gs
into
out
sub
or
js
add
loopne
pop
or
fisttpll
pushf
push
bound
inc
rcl
jns
or
mov
leave
in
stos
xchg
imul
lds
lods
xor
sbb
mov
push
loope
idivb
das
imul
push
fstpl
xchg
outsb
cmpl
fidivrl
ret
jge
push
bnd
pop
adcb
js
stos
dec
mov
jbe
add
and
sub
fldcw
cmp
sub
js
inc
out
arpl
stos
push
test
mov
and
and
sarl
lret
sbb
out
or
es
push
int
fnsave
mov
inc
popf
mov
cmpsb
jge
dec
xchg
sub
sbb
push
int
fnsave
mov
inc
popf
mov
mov
lcall
sar
xchg
jns
mov
inc
outsl
sbb
lock
or
popf
jns
xchg
pop
mov
out
lahf
and
mov
jb
sbb
fisttpl
clc
jne
xor
fmul
mov
add
cmpsl
adc
push
mov
mov
js
xor
xor
xchg
xor
or
or
lods
ja
inc
sahf
push
and
xchg
xchg
fdivr
out
scas
cltd
fsubrl
mov
dec
jp
inc
lds
xchg
lods
push
shrb
mov
jb
jmp
cmc
cmpsb
sub
mov
dec
pop
cmp
add
not
jg
jne
xor
ffreep
repz
rcrl
repnz
adc
inc
mov
fsubl
std
dec
xchg
cmpsl
jbe
test
cmp
sub
pop
xor
fistps
sbb
xchg
out
mov
pop
inc
std
lcall
jmp
jecxz
dec
fucomp
add
push
aad
fstpl
ret
popf
repnz
jae
nop
jg
repz
out
int3
data16
gs
ficompl
and
into
and
jle,pn
xchg
lods
pop
scas
mov
cltd
xchg
and
push
loope
inc
inc
fidivl
adc
test
cmpsl
push
ret
gs
movsb
jecxz
stos
test
adcl
xchg
insb
out
inc
gs
pop
mov
cmp
shl
mov
lret
aam
or
ret
push
ja
xchg
cltd
shrb
test
xchg
mov
jmp
daa
rclb
inc
hlt
scas
sub
int
ret
and
out
inc
sub
lcall
cmpl
test
xor
out
cmp
dec
mov
mov
mov
leave
dec
add
xchg
out
movsl
adc
ja
in
push
xchg
sbb
pop
mov
adc
subb
or
sbb
fidivs
mov
mov
sub
xchg
je
pop
xor
test
ja
push
pop
dec
mov
fdivs
push
cmp
mov
dec
sbb
out
lcall
aad
xor
ret
fidivrl
sub
sti
mov
cmpsl
dec
insb
cli
popf
push
int3
fwait
sbb
cmpb
hlt
mov
fistps
call
std
nop
nop
fiadds
in
in
pop
pushl
lret
cmp
int3
mov
dec
outsl
insl
mov
in
mov
repnz
in
rcrl
mov
lahf
jmp
gs
adc
popf
sbb
imul
fwait
data16
pop
mov
imul
cs
push
int
mov
xorb
dec
cmp
add
pushf
inc
or
testl
pushl
out
iret
pop
or
xor
sub
insb
call
push
mulb
dec
push
cld
sub
enter
xorl
cmp
adc
leave
sub
hlt
pop
add
mov
adc
std
std
pusha
jbe
gs
inc
lret
xchg
rorl
sti
fs
aad
fisubl
mov
dec
aad
dec
lahf
rorl
pop
aas
ljmp
and
sbbl
xor
ret
leave
out
sub
gs
inc
pushf
jp
sub
mov
push
in
int3
scas
lea
jg
mov
push
mov
icebp
enter
imul
icebp
add
fldcw
jp
jl
inc
ds
cmc
fsts
and
aas
adc
xor
jbe
or
hlt
loope
es
popf
sbb
cmp
and
hlt
push
iret
and
rorb
push
dec
jnp
orb
repnz
mov
and
or
popa
dec
and
mov
or
xor
ja
fdivr
adc
addr16
adc
dec
lock
dec
mov
adc
inc
mov
or
xor
stos
mov
inc
pop
xchg
int3
mov
mov
test
mov
lock
jl
add
int
mov
loope
in
adc
xchg
data16
cmp
mov
add
test
inc
xchg
cltd
jmp
lahf
mov
xchg
mov
call
mov
jbe
pop
and
scas
rcrb
jb
ljmp
call
push
or
repnz
stos
sbb
cmp
es
add
arpl
jo
fs
fdivl
pop
dec
xor
ss
push
or
xor
popf
cltd
sbb
jb
fwait
pop
pop
ds
cmpsb
cmpsb
lret
xchg
stos
popa
pushf
xor
das
in
xchg
or
outsb
push
insb
mov
aam
sti
into
fnstenv
roll
and
jge
aaa
xchg
add
repz
std
or
popa
add
imulb
xlat
cwtl
jbe
pop
pop
rorb
push
cmp
ja
icebp
nop
or
imul
test
cmp
stos
test
bound
popf
dec
ss
addr16
inc
jae
inc
jae
pop
adc
les
or
mov
cli
aas
das
pop
rcl
movsl
or
adc
ficoms
aas
xlat
rcl
aas
lret
push
or
adc
mov
cwtl
push
sub
es
sbb
and
sbb
stos
cltd
lods
test
loopne
das
jl
jno
bound
mov
jne
call
ud0
lods
in
popa
jno
notb
stos
dec
inc
mov
xor
jge
adc
icebp
into
push
mov
xchg
sti
mov
push
ss
stos
mov
mov
sub
scas
sbb
stos
xchg
subb
sub
popf
insb
sub
loop
fdivrs
ds
call
mov
sbb
mov
push
and
sbb
jg
pop
arpl
sbb
xchg
or
sub
andb
subb
cli
ja
arpl
jne
ret
test
mov
sub
inc
mov
inc
stc
cwtl
ds
cmpsl
test
sahf
adc
xchg
ret
in
or
mov
sub
stos
xchg
fwait
out
subl
adc
paddd
aad
addr16
dec
movq
inc
xorb
mov
outsl
adc
pop
adc
cli
xor
jg
add
ds
push
stos
dec
shl
fsubrp
push
inc
sbb
jmp
lcall
adc
jl
sbb
pop
pop
xchg
hlt
adc
inc
dec
out
adc
dec
push
jg
stc
sub
mov
out
cmp
inc
filds
aad
jnp
xor
cmp
xchg
sub
cmp
sbb
sbb
dec
je
scas
push
pop
loope
add
test
ds
loope
sahf
dec
add
xor
jb
imul
popf
arpl
push
icebp
and
cmp
jmp
out
pop
xchg
cvtpi2ps
jo
in
and
mov
call
or
push
lahf
mov
cld
inc
lret
cmp
sahf
jnp
cld
out
mov
ds
xchg
sub
ret
pop
inc
xor
or
fildll
fidivl
les
add
push
jae
ret
mov
jno
decb
inc
jae
mov
mov
push
mov
pop
dec
mov
clc
or
mov
add
sub
jbe
clc
sti
push
dec
jle
minps
sti
mov
sti
scas
pop
mov
les
mov
jg
in
or
cwtl
add
or
push
jo
xorb
das
sbbl
cwtl
addb
pop
cmp
fidivrl
xlat
dec
or
or
out
cmp
and
stos
inc
xchg
ds
jecxz
adc
adc
xchg
out
sbb
and
mov
add
xor
shll
xchg
xchg
inc
lock
das
ret
dec
pushf
jl
fwait
shr
out
push
jp
arpl
cmp
int
lds
icebp
rcll
jns
aas
add
sub
std
or
inc
icebp
fimull
movb
sub
mov
and
fscale
add
dec
sub
mov
dec
mov
cmpsl
sub
pop
aad
lahf
xchg
out
inc
jg
jecxz
xchg
and
lea
push
ljmp
ret
clc
pop
int3
add
lds
std
sub
xor
ss
and
jle
int3
aad
out
xor
lock
cmpsl
dec
add
xor
xchg
pop
outsl
aaa
inc
cmp
push
out
out
mov
and
clc
stc
xlat
outsl
inc
cmp
dec
arpl
xchg
jle
leave
xor
sub
add
inc
out
add
jge
popa
add
dec
gs
push
lcall
sbb
jae
xor
iret
jns
lock
xchg
sahf
adc
lock
jmp
bound
das
cmovnp
and
scas
sub
xchg
ret
loop
or
mov
push
add
jb
pop
sbb
into
in
clc
lret
loopne
cltd
inc
outsb
xchg
mov
adc
mov
adc
out
xor
dec
std
sub
arpl
jbe
ss
sub
stc
test
imul
sub
bound
in
dec
push
std
adc
or
cmc
rorl
jno
hlt
out
mov
jp
or
and
addb
ds
inc
fnstcw
lahf
cld
jecxz
pop
sbb
add
mov
je
fiaddl
sbb
xor
cltd
and
push
lods
sbb
cmc
pop
xchg
pop
dec
stos
imul
mov
sti
jmp
cli
mov
sbb
inc
lea
add
fs
mov
lods
pop
add
fcomip
xchg
pop
pop
jecxz
fs
mov
mov
mov
decl
push
addr16
stos
inc
ds
cmpsb
xor
jns
and
cmc
xor
insb
popa
test
and
ret
push
and
cmp
test
ret
jle
and
or
in
fldt
jge
add
das
xchg
pop
sbb
shll
adc
pop
mov
rcrb
push
mov
and
push
add
inc
pop
push
in
mov
xor
push
mov
mov
mov
push
sub
fisubrs
or
mov
bound
scas
dec
aaa
mov
mov
xor
pop
fcmovb
mov
orl
lahf
shl
dec
jo
jb
repz
xchg
clc
sub
add
scas
dec
push
jp
pop
mov
dec
xor
or
mov
cmpsb
in
xor
fidivl
push
push
push
add
push
xchg
and
mov
mov
loopne
jecxz
out
imull
or
mov
jo
pop
mulb
or
mov
stos
insb
mov
int
and
xor
xchg
or
mov
ja
je
sbbl
mov
mov
ds
xchg
imul
lahf
cmpsl
xor
lods
es
addr16
dec
test
insl
inc
lahf
jo
sbb
pop
and
jge
pusha
add
out
xchg
mov
or
daa
loopne
out
lcall
pop
fldenv
jnp
mov
or
scas
sub
xor
sub
shll
add
mov
add
xchg
test
add
dec
hlt
push
mov
call
out
add
mov
int3
mov
mov
insl
in
inc
js
dec
jg
test
add
pushf
fisubl
repnz
lock
pop
sub
cmp
jne
sarb
decl
js
scas
lods
aas
sbb
push
mov
jge
cmp
pop
sbb
and
sbb
mov
inc
pop
jmp
rcll
or
push
cmp
adc
pop
push
dec
mov
icebp
decb
ds
xchg
mov
xchg
cld
shll
das
loop
jecxz
call
cmpsb
mov
bound
out
sbb
enter
gs
movsl
push
cmc
test
punpckhbw
xchg
inc
sub
fdivr
imul
test
data16
in
movb
xor
push
pop
fldcw
cmp
mov
jmp
jecxz
push
mov
inc
pop
mov
xor
pop
pushf
lahf
push
and
mov
jnp
sub
inc
and
xchg
stos
aam
loope
xor
fdivp
shlb
das
mov
aad
pop
mov
int
ljmp
mov
add
psubsw
mov
ror
jns
mov
push
lods
xchg
loop
dec
es
lcall
sub
push
mov
push
shlb
cmp
leave
jecxz
aam
out
dec
sub
sar
es
jmp
pushf
imul
repz
push
leave
inc
lret
in
inc
and
orb
mov
and
jo
loop
push
imul
cli
mov
mov
jle
popf
jae
dec
scas
and
inc
jl
jno
sbb
mov
jl
es
adc
popf
in
jecxz
and
jae
mov
fsub
or
aad
jecxz
mov
pop
mov
cmpsb
fisubl
pop
adc
lds
jmp
pop
daa
cmp
fildll
push
jb
mov
inc
cmpsl
arpl
sub
test
cmp
add
test
xchg
xchg
outsb
pop
andb
jae
es
jl
inc
inc
jae
cmp
add
adc
ja
mov
sarb
mov
adc
roll
adc
insb
imul
push
cmp
rorb
sbb
mov
xchg
sti
xor
cld
xchg
mov
out
lret
mov
in
and
stos
cmc
dec
les
pop
add
js
and
fdivrp
or
mov
sub
push
dec
pop
push
add
mov
out
pop
add
scas
jge
inc
ds
rorb
loope
test
rorb
ret
mov
repz
xor
sbb
inc
fsubs
fidivrl
out
fdivrs
pop
and
pop
xor
shr
mov
jno
lea
insl
adc
scas
cld
bound
jmp
lock
pop
inc
push
scas
and
mov
scas
cmp
scas
mov
leave
xchg
nop
jmp
xlat
loopne
inc
dec
fld1
cmpb
mov
pop
xchg
in
test
push
std
mov
mov
or
and
cmp
call
mov
jne
pop
xor
xor
ljmp
adc
adc
inc
jbe
icebp
sub
test
jle
jl
push
test
mov
cltd
lods
enter
mov
lcall
scas
push
inc
mov
daa
mov
or
push
pop
sahf
lock
shrl
mov
imul
nop
mov
push
cmp
fwait
repnz
sbb
cld
dec
mov
fsubp
xchg
xlat
repz
es
filds
test
jecxz
xchg
dec
pop
popw
jmp
test
mov
jl
sub
mov
jo
in
inc
bound
movsb
mov
mov
ljmp
nop
lcall
jno
and
jno
loope
mov
xor
clc
popf
cmc
int
je
mov
sbb
adc
dec
sub
in
xchg
and
xchg
cli
xor
lods
shll
loopne
pusha
mov
pop
rolb
push
out
enterw
fbld
pop
adc
pop
pushw
push
xor
fistl
adc
les
push
sub
mov
pusha
push
ds
daa
push
ror
and
pop
mov
inc
repnz
call
dec
jbe
push
int3
test
adc
mov
xor
enter
pop
xchg
fldl
inc
sti
stos
jmp
movsb
outsl
scas
jns
test
mov
sarb
mov
xchg
sub
dec
mov
dec
lock
cmp
sub
jmp
push
pushf
int
push
xchg
add
jle
cmp
mov
push
pushf
adc
sahf
out
mov
xor
lods
push
cmpsl
adc
popf
addr16
jmp
dec
icebp
mov
mov
xor
mov
cmp
popa
xchg
cmp
mov
pop
int
mov
ss
das
jmp
mov
mov
lea
subb
arpl
fs
sbb
sbb
push
and
pop
mov
jnp
sbb
xchg
add
mov
movsb
loop
repz
mov
pushf
and
xlat
in
shrl
pushf
add
xor
push
add
imulb
pop
fsubp
cld
adcl
ret
rclb
testl
dec
lahf
js
push
or
mov
lret
icebp
and
adc
cmc
dec
push
jecxz
pop
test
addr16
dec
mov
nop
inc
dec
xchg
adc
mov
roll
in
aaa
xorb
divb
addr16
add
or
roll
aas
push
in
out
fdivp
push
push
or
movl
cmp
fwait
insl
inc
movsb
pop
rorl
cli
jl
sub
mov
adc
cltd
sarl
icebp
js
or
mov
mov
divl
into
mov
movsb
and
js
xor
lcall
add
push
xchg
fiaddl
popl
les
std
stos
cmpsl
negl
xchg
sbb
fs
or
scas
mov
pop
inc
add
or
push
inc
mov
ss
ret
das
std
andl
cmp
mov
scas
mulb
inc
lret
add
lds
xchg
dec
outsb
popf
out
mov
out
cmp
xor
cmc
es
fisttpl
xor
imul
bound
rcrb
adc
call
ja
or
push
cld
or
out
movsl
fstl
daa
orl
das
xorb
dec
jnp
cli
ja
imul
dec
and
ja
mov
mov
push
clc
inc
or
mov
adc
repz
std
imul
pop
mov
xchg
jge
lahf
inc
or
push
jmp
hlt
cmp
pushf
aas
and
add
xchg
int3
xchg
bound
lea
inc
in
sbb
jnp
repnz
insl
dec
shrb
xchg
iret
jle
lcall
repz
movaps
repnz
sub
xchg
call
vorps
inc
fmull
push
sbb
mov
xchg
jnp
cmp
xchg
fbld
fldenv
push
inc
mov
imull
aaa
mov
lods
decl
mov
pusha
ficoml
dec
sbbl
movsb
fsubrl
sub
mov
sahf
xor
dec
sbb
sub
ja
sahf
jge
adc
rorb
push
movsb
rorb
xor
lret
loope
lahf
adc
cs
xchg
rcrb
jecxz
push
ss
add
in
lods
roll
cmc
stc
popa
push
sbb
mov
arpl
adc
sets
cmpsb
mov
xchg
std
pop
sub
sti
loop
orb
push
je
ficompl
lock
dec
or
fsubrl
push
mov
inc
ja
sub
add
in
pop
pusha
cmp
cmp
xor
test
clc
stos
mov
fdivr
xchg
cmp
push
outsl
xor
xchg
out
cltd
jmp
xor
xor
cmp
jbe
cmpsb
dec
nop
clc
jne
mov
rcl
shll
pop
insb
jns
sbb
aam
out
cmpsb
pop
sbb
pop
cs
cmc
jae
push
shrb
insb
and
sahf
dec
pop
sbb
inc
jle
mov
sbb
mov
xor
loop
cwtl
stc
xchg
lds
xchg
cmp
adc
dec
out
fsubl
sub
sti
cmp
popa
add
mov
insb
push
adc
push
mov
pop
daa
xchg
or
sub
stc
ljmp
sbb
cmp
outsl
icebp
in
mov
mov
cmp
fdivs
push
ja
idivb
dec
icebp
lds
and
jno
ficoml
or
cli
or
add
repz
push
cmp
inc
xor
push
push
sub
imul
lods
cwtl
nop
mov
daa
jmp
jbe
pop
mov
dec
test
mov
rorl
inc
xor
xchg
xchg
nop
lods
cmp
out
xchg
mov
cli
js
int3
mov
or
add
ret
xor
mov
ss
mov
add
pop
lret
stos
enter
inc
mov
pusha
inc
fwait
dec
ret
lock
xor
xchg
add
push
insb
jmp
or
xchg
mov
insl
dec
shl
je
mov
mov
xor
sub
mov
sbb
sarb
aas
mov
sub
scas
mov
repz
sti
cmc
and
scas
or
xchg
lahf
test
jle
scas
arpl
sbb
add
jnp
inc
into
cs
cmp
mov
mov
aad
push
adc
std
ljmp
mov
cmp
movb
cmp
outsl
add
push
jg
jge
and
cmp
ss
es
push
int
fnsave
mov
inc
popf
mov
cmpsb
jge
dec
xchg
sub
sbb
push
int
fnsave
mov
inc
popf
mov
cmpsb
xor
imulb
sbb
push
int
fnsave
addr16
mov
movsb
jge
dec
xchg
out
push
lea
leave
adc
push
mov
and
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
adcl
add
pop
mov
arpl
xchg
adc
inc
rcll
arpl
jae
adcl
add
push
roll
jae
arpl
xchg
adc
adc
ret
arpl
jae
adcl
add
push
roll
jae
arpl
lods
xor
dec
ret
xor
push
xchg
sbb
ja
push
or
or
stos
mov
hlt
pop
aam
sbb
js
sub
sbb
inc
jmp
dec
fdivrl
sarl
cs
jecxz
mov
mov
xor
pop
roll
fwait
aad
dec
dec
add
enter
loop
push
inc
jge
mov
arpl
shrl
lock
or
loop
in
xchg
add
xor
push
lcallw
xchg
xchg
fisttpll
pop
mov
or
jae
inc
in
ficomps
mov
andb
lods
xchg
bnd
jle
insb
sti
pusha
xor
push
add
repz
insb
jecxz
fdivl
fidivs
es
jecxz
adc
and
push
roll
jae
arpl
xchg
adc
inc
rcll
arpl
jae
ret
ror
jne
gs
cmp
add
pushl
and
dec
int
mov
xor
dec
xor
je
ss
insl
fwait
sbb
arpl
inc
out
and
xor
inc
mov
push
out
xchg
ja
inc
fists
aas
roll
jae
arpl
xchg
adc
inc
rcll
arpl
jae
adcl
add
push
roll
jae
arpl
xchg
adc
inc
rcll
arpl
jae
adcl
push
rcrl
sbb
pop
sbb
xor
data16
outsl
loop
into
hlt
cld
mov
inc
ljmp
xor
or
stc
jg
dec
imul
mov
int
sti
dec
sub
cmp
pop
or
mov
xor
pop
xor
jne
mov
inc
push
jl
mov
cmpsb
pop
xchg
sub
testb
in
fld
xchg
sti
sahf
out
dec
das
push
leave
push
push
pop
add
ret
aad
inc
dec
xor
mov
inc
cld
jae
xor
xchg
cli
inc
pushf
pop
cmpsb
pop
xor
sub
xchg
fs
mov
or
sub
clc
enter
pop
sub
scas
hlt
sbb
fisttpl
insb
insb
jp
pop
iret
pop
cmp
fwait
imul
sbb
test
gs
push
in
stc
fcompl
psubq
add
push
cmp
xchg
clc
adc
jmp
popa
jnp
dec
imul
xchg
inc
dec
cvttps2pi
push
inc
push
sarb
push
dec
push
in
in
loope,pt
sbbl
mov
roll
imul
cs
stos
pop
jbe
cltd
dec
mov
iret
in
or
sub
ret
frstor
mov
call
outsb
adc
roll
mov
andl
xchg
jl
es
or
out
jo
jp
jp
lods
fistl
add
xchg
sbb
add
push
or
mov
push
sub
hlt
pop
or
pop
inc
adc
pushf
inc
sub
jae
dec
in
jne
cmpsl
dec
xchg
adc
ja
xor
dec
fisubrl
mov
in
int
sub
xchg
das
mov
xchg
test
push
mov
test
fists
cmp
cli
lods
dec
or
subl
repz
stos
sti
hlt
loope
add
mov
and
mov
and
xor
jle
dec
sub
push
mov
pop
mov
adc
imul
mov
xchg
pop
cmp
aam
push
jns
arpl
leave
ja
mov
aad
dec
push
mov
add
aas
loop
jo
sub
push
aam
rolb
mov
dec
inc
inc
testl
sub
inc
jno
testl
sti
ret
in
push
mov
pop
add
dec
cmp
rcrl
mov
adc
gs
cwtl
add
repz
mov
movb
xor
shll
jne
pushf
insl
lret
dec
imul
popf
cwtl
mov
into
pop
aaa
mull
int3
jg
test
jns
mov
shll
jle,pn
cli
jmp
insb
shlb
mov
push
fwait
lods
stos
mov
aas
out
jb
add
or
dec
loope
movsb
add
jmp
shl
pop
fisttpll
mov
les
std
or
sub
xchg
hlt
les
dec
stos
sbbl
out
mov
adc
dec
popf
xchg
mov
int3
mov
jecxz
inc
push
adc
test
push
xchg
mov
hlt
mov
sbb
mov
adc
mov
aad
fstpt
mov
pop
adc
sbb
rcrl
std
call
iret
dec
ja
jo
popfw
mov
into
dec
sbb
rcll
rclb
add
pushf
jno
and
into
lcall
fs
cmpsb
bound
imul
adcl
test
fisttps
gs
jns
mov
mov
in
xchg
test
fistpll
and
add
ret
stc
out
push
jl
ret
cmp
xchg
adc
sbbb
xor
lret
fwait
mov
fwait
push
jo
mov
and
in
dec
push
rcll
fwait
out
das
hlt
push
cli
xchg
addr16
mov
mov
fwait
or
aad
lds
add
adc
mov
or
sbb
dec
add
or
and
cmp
fwait
imul
mov
push
sub
int
add
nop
cmp
inc
push
scas
and
mov
jo
out
push
test
aam
sub
fimull
and
test
xlat
mov
push
stc
or
rolb
jbe
clc
out
js
push
jbe
and
mov
push
jl
cmpsl
jb
sub
loop
shr
loop
mov
adc
outsl
scas
pop
inc
pop
xor
inc
aaa
popa
faddl
pushf
xor
jae
cmpb
sbbb
mov
enter
mov
imul
in
jl
sub
mov
dec
enter
ret
je
or
pop
fwait
sub
and
adc
iret
and
scas
or
bound
cmp
push
mov
push
add
and
outsb
aad
xorb
mov
push
inc
inc
arpl
inc
pop
mov
aaa
push
rorb
mov
jge
or
mov
test
js
insb
shlb
test
adc
cs
dec
and
into
and
xor
and
mov
mov
out
xor
lods
aad
or
das
ds
mov
outsl
sbb
ss
jne
in
mov
or
adc
or
and
jb
test
lods
rcll
cld
adc
push
inc
and
in
pusha
ret
leave
lock
outsb
lock
insl
aam
cmpsl
pusha
dec
fildll
dec
push
test
or
mov
add
mov
fldt
add
hlt
popf
jnp
mov
add
and
sahf
in
or
xlat
xor
lock
xchg
out
mov
cmpsb
arpl
pushf
dec
xchg
out
fwait
repz
das
aam
mov
inc
loope
ds
bound
icebp
jmp
insl
and
outsb
dec
popf
sbb
out
jne
inc
jae
add
call
dec
xchg
push
js
mov
insb
arpl
mov
call
mov
arpl
jne
mov
notb
jp
pushf
jo
mov
out
xor
outsl
addr16
ja
add
push
inc
dec
xor
rol
dec
cmp
ror
inc
dec
jmp
jno
lret
sub
pop
dec
pop
cmp
mov
arpl
or
fdivs
jns
sub
das
jmp
push
mov
mov
lret
mov
cmc
mov
dec
jg
movsb
test
fistpll
call
ja
sti
mov
repnz
in
loope
push
lods
sbb
test
sbb
pushf
cmc
mul
fdivl
and
mov
out
pusha
das
xor
push
push
jmp
xor
shrl
mov
jno
mov
and
mull
popa
mov
movsl
nop
pop
jl
mov
test
popa
push
dec
popf
and
into
nop
sub
sbb
xchg
ss
mov
push
daa
pushf
jg
mov
xor
dec
push
inc
scas
mov
mov
pop
aaa
and
sub
mov
mov
fs
insl
sbb
fsubs
bound
loop
inc
in
es
xor
dec
sbb
shrl
loop
inc
push
out
cmp
or
pop
inc
inc
std
pop
test
cmp
add
jae
cltd
add
xor
mov
pop
mov
mov
xor
jle
push
mov
xchg
xlat
push
dec
dec
stos
pop
outsl
ss
sbb
sub
add
push
add
inc
adc
addr16
sub
daa
popa
push
scas
xor
pop
test
pop
outsb
cli
sbb
fnstenv
filds
push
inc
and
or
aas
or
sbb
mov
sub
dec
rcr
xlat
mov
xchg
rcrb
xor
in
sub
sub
sahf
cmp
adc
sbb
mov
pusha
ljmp
jmp
aad
cld
rcrb
fwait
xchg
out
jae
cld
or
pop
mov
outsb
xlat
iret
mov
js
std
push
fsub
xor
enter
dec
push
push
sub
repz
inc
cltd
cld
imul
xchg
sub
push
data16
fwait
mov
push
and
mov
dec
out
dec
push
aaa
inc
pop
fnsave
fwait
and
mov
sub
mov
push
rcll
fxch
mov
inc
or
jae
fisubs
fadds
test
mov
rcll
mov
mov
loopne
outsb
and
mov
dec
mov
loop
mov
mov
js
fcmovu
cld
fidivrs
sahf
jg
psrlq
imulb
jecxz
sbb
fnstsw
xchg
adc
jno
dec
dec
ljmp
mov
mov
cmp
push
jne
jmp
push
or
les
push
addb
jmp
ffreep
xchg
jbe
and
sub
xchg
push
rcl
cli
xor
push
push
jo
mov
mov
jp
repz
mov
inc
xor
je
aad
mov
pushf
mov
push
cmp
mov
jmp
repnz
jbe
neg
clc
daa
cmc
mov
call
ret
test
imul
sbb
mov
pop
sub
data16
addr16
aas
lods
aad
pop
stos
inc
test
and
int
jnp
adc
out
jmp
and
orl
cwtl
mov
inc
mov
lahf
xchg
addr16
lock
les
daa
adc
lods
in
sub
jne
ds
add
jns
pushf
jae
insb
cmp
sahf
xor
jecxz
pop
inc
push
enter
adc
gs
dec
pushf
jns
or
shll
push
clc
adc
lods
sub
cmc
aaa
add
aas
add
inc
popf
or
enterw
mov
pop
mov
add
pop
push
mov
repz
data16
aas
mov
and
repz
scas
cli
mov
test
repz
repz
dec
dec
and
pushl
int
jbe
jg
loope
add
sub
sub
scas
gs
pop
add
fdivrl
mov
test
dec
jmp
mov
sub
insb
int
repz
sbb
mov
cwtl
xor
xchg
inc
arpl
loope
add
cld
add
pop
add
xchg
dec
rorb
and
out
cltd
sarb
loope
and
bound
mov
and
cmp
pop
mov
int3
arpl
outsl
gs
aam
dec
dec
cli
dec
or
jns
or
add
outsb
or
insb
cmp
rorl
and
popf
insl
arpl
push
outsl
mov
cmp
outsb
jmp
cmp
mov
xor
lods
mov
jge
or
jo
test
pop
dec
mov
adc
adc
mov
rolb
push
int
rorl
cli
inc
iret
inc
mov
mov
stos
mov
pop
cmp
imul
add
pop
push
cwtl
mov
xor
shrb
loop
xor
in
cmpsb
outsl
xchg
std
js
push
sbb
jnp
xor
inc
sbb
pop
push
add
in
push
call
out
push
add
sarl
mov
das
adc
xlat
jne
add
daa
sahf
in
cwtl
movsb
jecxz
xor
jg
mov
cli
push
shrb
jnp
xchg
mov
rcrl
or
lods
std
pop
repnz
movsb
mov
daa
jle
lds
out
loop
int
inc
cmpxchg
add
dec
inc
jb
dec
scas
loope
push
js
inc
ljmp
cltd
pop
insb
or
mov
shr
js
add
xchg
mov
push
hlt
fs
mov
xchg
xchg
inc
dec
enter
mov
arpl
mov
adc
sub
pop
push
js
adc
insb
mov
jg
cwtl
test
stc
fbstp
dec
add
mov
pop
inc
pop
enter
hlt
cmp
sbb
popf
je
mov
sbb
cld
cltd
adc
sahf
cld
sti
inc
fnstsw
sti
cltd
pop
mov
fistl
orps
sqrtps
inc
jg
daa
push
mov
push
cli
xchg
sbb
test
mov
out
inc
add
sbb
or
pop
fistpl
dec
or
adc
in
sbb
mov
mov
mov
cmpsb
hlt
xor
adc
and
xchg
ja
cmp
loop
idivb
xlat
and
loope
movl
add
pop
mov
popf
push
jge
test
arpl
int
out
cmc
cmp
sbb
sarl
in
roll
scas
xchg
inc
xchg
push
inc
xlat
repz
outsl
push
cltd
jge
cmp
cmp
sub
jle
sub
jae
xchg
fwait
jmp
pop
xlat
jbe
stc
mov
pop
pop
in
pop
out
lret
lret
mov
adc
mov
orl
movsl
ss
lds
cli
lock
jnp
pop
push
xchg
sbb
imul
pop
call
and
fildl
cli
imul
rolb
pop
pop
roll
xchg
inc
pop
ljmp
ret
dec
pop
popf
xor
mov
sub
arpl
cmpsb
insl
xor
or
iret
and
cltd
adc
mov
mov
or
inc
dec
aaa
lds
lods
fistps
add
push
lds
std
sahf
addl
add
jp
mov
fisubs
mov
pop
cmp
and
cmpsb
jne
pop
sbb
ret
pop
dec
inc
jmp
test
icebp
std
push
xchg
pop
dec
mov
mov
inc
inc
push
lea
fcmovu
lods
aam
pop
sar
es
jp
xchg
jecxz
pusha
inc
rcll
xchg
ror
pushf
std
mov
pop
dec
negb
jae
andb
das
dec
les
mov
into
mov
cmc
and
lods
dec
aad
add
mov
or
mov
mov
dec
fisttpl
enter
sahf
dec
icebp
mov
dec
ret
sahf
cmpsb
and
bound
pop
gs
adc
das
ss
ret
cli
call
mov
cld
inc
mov
pop
repz
sbbl
push
fisttpll
cmc
stc
fdivrl
bound
rol
fdivl
fnstenv
fcmovnbe
sub
dec
lcall
xor
push
inc
and
jecxz
loopne
pop
xchg
je
out
sub
sbb
xorb
sub
fildll
inc
dec
jnp
jmp
xchg
rorb
cmp
movsl
inc
sub
add
loope
lods
cmp
pop
cmp
xchg
das
adc
ret
jne
lcall
pop
arpl
and
aad
push
lods
pop
ss
pop
lock
cmp
xor
jno
cmp
mov
lret
push
jecxz
mov
pop
mov
mov
pop
inc
fwait
push
inc
iret
orl
push
pop
mov
mov
outsb
push
pop
lods
mov
jl
notb
cmp
cmpsl
and
mov
pop
add
dec
enter
dec
sbb
aam
repnz
lds
xchg
xor
out
aaa
inc
mov
les
rcpps
loop
into
push
push
jne
dec
sti
ja
adc
ret
mov
pop
es
xchg
push
scas
xlat
stc
dec
mov
inc
mov
pop
in
push
pop
js
jne
divb
jae
xor
jns
rcll
jae
mov
sbb
jmp
pop
cmp
arpl
ret
in
call
pop
fs
add
shrb
push
push
lcall
xor
dec
adc
bound
push
jmp
xchg
push
sbb
out
mov
popa
sub
aaa
jo
sub
mov
sub
ffree
push
sbb
mov
dec
pop
mov
cmp
arpl
inc
xchg
lods
out
adc
ficoms
pusha
fcoms
inc
popf
repnz
fidivl
adcb
add
jp
insb
sbb
int3
movsl
in
pop
pop
cmp
xchg
pushl
jbe
outsb
popa
mov
pop
inc
sbb
jg
push
xor
rcll
fpatan
xchg
ficoms
fidivrs
inc
push
push
clc
inc
mov
js
pop
idivl
xor
mov
adc
jmp
pop
lock
xchg
fimuls
inc
ficoml
sub
pop
cmpsl
or
int3
cli
test
mov
repz
sti
inc
dec
cmp
xor
cmp
lock
or
pop
sbb
addr16
test
subb
push
scas
js
fidivrs
add
scas
in
mov
scas
test
ds
push
popa
stos
push
or
out
push
mov
jmp
es
mov
ror
popf
repnz
aad
fs
rolb
add
jae
je
push
jae
lahf
in
into
mov
test
mov
mov
push
mov
adc
inc
mov
xchg
scas
add
nop
sahf
pop
imul
jno
dec
addl
push
popa
and
xchg
div
add
fwait
sbb
jae
movsl
lods
shrb
mov
adc
sbb
stos
les
inc
jae
mov
lahf
xor
data16
xlat
test
fisubs
push
cmp
or
in
xor
xchg
orb
or
sub
fcompl
int
fdivr
mov
sbb
fsubp
pop
inc
or
mov
test
sub
jbe
sbb
aad
xchg
pop
mov
call
mov
jno
cld
dec
xlat
in
pop
sti
fcomp
and
ss
jp
or
outsb
outsl
xchg
mov
lods
fwait
in
jb
fisttpl
cmp
int3
jno
clc
aad
xchg
sbb
mov
pop
into
inc
rcrl
out
pop
in
xchg
leave
fstpt
ja
cltd
sbb
lock
xchg
and
test
movsb
sbb
or
lret
cltd
adc
lret
xor
pop
call
pushf
xchg
mov
add
lods
out
loop
out
jo
les
insb
mov
inc
push
ljmp
inc
lea
mov
pop
fdivr
and
jne
fmull
psubusb
dec
rol
lahf
dec
loop
jmp
add
cs
cmc
sti
push
aaa
pop
push
and
cs
pop
outsl
xchg
ja
pop
sbb
es
js
fisubrs
mov
xchg
jnp
push
ret
ljmp
notb
cmp
lret
pop
and
lahf
add
inc
adc
lret
lods
push
pushf
repnz
sub
sti
sub
adc
pop
adc
xor
iret
mov
or
mov
add
jne
push
cwtl
ret
fs
xor
or
repnz
push
pop
cmp
ss
pop
rclb
add
addr16
notb
cmpsb
mov
enter
sub
mov
mov
pop
cli
pusha
adc
cmp
movl
pop
data16
adc
xchg
dec
icebp
and
or
cmp
push
lahf
es
push
bound
push
je
insb
push
lret
les
sahf
add
call
sahf
repnz
stc
or
cli
add
pop
scas
push
imul
ret
ret
push
int
pop
out
or
sub
cwtl
mov
and
cs
push
pushf
sub
jne
int3
popa
mov
push
shlb
in
mov
xchg
inc
sbb
xlat
jae
fucom
mov
sahf
push
je
add
ret
ffreep
rcll
inc
movsl
jmp
js
mov
popf
out
leave
outsb
push
fst
cltd
pusha
pop
pop
cwtl
inc
xchg
movsb
pop
jl
dec
mov
push
add
and
mov
es
lret
lret
dec
arpl
fimuls
into
dec
lret
pop
fidivrl
mov
jno
pushf
in
xor
xor
fimull
adc
sub
jnp
mov
mov
adc
jne
inc
int
cld
mov
xor
sbbb
push
dec
fwait
and
ljmp
mov
das
jne
outsl
dec
sahf
inc
pushf
rorl
das
adc
addl
out
mov
dec
std
mov
movsb
gs
dec
fistpll
mov
in
insl
lret
push
test
mov
jo
cmp
enter
movsl
test
adc
xchg
jecxz
adc
xor
imul
and
les
push
mov
mov
in
xor
mov
jbe
in
test
stc
test
sub
and
jno
mov
inc
iret
sahf
arpl
mov
jmp
add
push
mov
icebp
scas
sbb
out
cmpl
push
sub
mov
jmp
dec
xor
mov
mov
inc
dec
stos
pusha
mov
adc
fmuls
notl
mov
jle
inc
ljmp
mov
test
jge
fwait
test
xchg
sbb
push
aam
int
pop
xchg
out
cmp
and
scas
jecxz
aam
adc
mov
xchg
or
inc
push
js
aas
stos
sub
test
jg
push
push
mov
xchg
adc
and
or
jge
pop
cwtl
push
pop
out
aas
inc
adc
xchg
add
adc
xor
pop
push
mov
adcb
and
cld
icebp
push
mov
out
out
add
push
roll
jae
arpl
xchg
adc
inc
rcll
arpl
jae
adcl
add
push
roll
jae
arpl
xchg
adc
inc
rcll
arpl
jae
adcl
add
xor
inc
jecxz
jae
add
xor
arpl
jae
adcl
add
push
rol
jecxz
repz
add
mov
and
or
sbb
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
xchg
xchg
jmp
enter
xor
mov
dec
push
push
inc
cmp
sbb
xchg
xchg
jmp
mov
idiv
push
jne
imul
push
sub
jbe
xchg
xchg
lock
shll
out
notb
push
and
cmp
jbe
pop
sub
iretw
mov
cltd
aad
les
insl
jp
les
gs
int
inc
mov
or
sarb
cltd
in
leave
push
pop
in
data16
xchg
xchg
stos
or
ja
jmp
sbb
xchg
cwtl
xor
sbbb
jl
fnstenv
pop
mov
pushf
fists
ret
cmpsl
xchg
push
shlb
aaa
lcall
sahf
or
cltd
push
xchg
stos
cmpsb
adc
mov
out
sbb
loop
int3
mov
out
mul
push
test
xchg
mov
push
cmp
push
scas
popf
loope
push
inc
xor
or
cwtl
jge
push
adc
cmpsb
jae
jp
push
leave
sbb
psubusb
xchg
stc
cmpsb
shlb
out
notb
es
ss
inc
and
add
sar
fwait
ret
mov
lahf
enter
in
inc
push
adc
pop
pop
sub
pop
aas
sub
jbe
test
shll
out
idivb
addr16
dec
and
sub
jbe
out
stc
bnd
mov
test
push
jns
imul
cmp
sbb
xchg
xchg
jmp
mov
testb
pop
ss
inc
cmp
sbb
xchg
xor
sbb
xor
fnstcw
sub
pop
jo
adc
or
or
mov
je
jecxz
test
jg
and
inc
stos
xor
mov
arpl
clc
test
scas
push
inc
mov
add
movsb
imul
mov
bound
add
cld
mov
popf
push
popa
call
add
sbbb
cltd
inc
mov
dec
cltd
and
fidivrl
push
fstps
popa
mov
dec
cltd
push
je
push
aad
mov
jecxz
xchg
inc
rcll
stos
in
dec
xchg
adc
notb
push
aad
mov
pop
mov
rcl
scas
xor
in
add
cli
mov
movsb
and
ret
mov
adc
sbb
popf
or
rcrb
mov
mov
pop
pop
scas
cmp
jno
ret
sahf
pop
adc
ds
fisttpl
int
sarl
out
push
out
fisttps
jno
orl
popa
pushf
xor
insl
stos
cli
mov
xchg
push
je
jae
push
add
sub
cmpb
jb
xor
cmp
dec
sub
test
or
mov
sbb
pop
jae
out
and
jge
inc
scas
mov
adcl
psrad
adc
lods
mov
fcomi
dec
mov
roll
or
jle
scas
cmp
std
outsl
pop
mov
add
inc
shrl
cld
rcrl
pop
bound
popf
gs
sti
or
sub
xor
or
imul
mov
push
loop
loop
xchg
daa
das
add
sub
ds
jle
pop
in
test
sbbl
lretw
lock
jns
sub
outsl
push
aas
xchg
ret
xor
icebp
inc
xchg
mov
xorb
pop
cltd
mov
push
jns
icebp
and
pop
mov
popf
imul
lret
sbb
xor
ljmp
clc
inc
ds
jmp
dec
divb
stc
cmp
mov
and
dec
dec
fdivrs
jns
movsb
jmp
fsub
aad
aad
lods
lods
jo
pop
imul
imul
dec
out
pop
fadd
js
das
cmp
popf
xchg
fsubrs
sub
mov
xchg
xchg
dec
pop
inc
repz
dec
push
push
enter
jno
outsb
rolb
out
rol
enter
add
mov
cmp
push
or
mov
push
dec
add
cltd
ja
and
add
mov
repnz
mov
xchg
out
sets
sub
jnp
push
ror
push
es
ljmp
inc
xorb
ds
dec
xlat
lods
xchg
inc
xor
testb
addb
stc
mov
xchg
or
mul
xchg
jae
es
fisubrl
or
nop
pop
dec
pop
mov
lods
push
cmp
cwtl
rclb
ret
pop
jae
mov
add
jo
andb
sbb
lds
lahf
inc
add
in
cli
enter
in
xor
dec
orl
js
jb
and
sbb
in
cs
stos
cmp
cmc
or
lret
or
adc
jnp
pop
mov
mov
cld
sub
adc
icebp
push
inc
fisubl
mov
mov
xor
xchg
inc
insb
movsb
dec
loopne
stos
sahf
pop
lret
pop
insl
pop
mov
jo
cmp
or
outsb
out
push
xor
aam
fldcw
dec
out
adc
xor
es
in
clc
ret
rorb
out
inc
push
shl
insb
add
mov
xor
out
sahf
lret
andl
and
movsl
and
dec
push
sarl
in
pop
cmc
outsl
adc
call
jle
add
pop
scas
or
and
or
or
cmp
dec
fwait
jge
adc
nop
and
push
sbb
and
xchg
jne
leave
rol
xchg
push
mov
sti
add
aam
mov
test
dec
daa
xor
in
sub
jp
push
cmp
pop
xchg
adcb
iret
pop
addr16
pusha
test
adc
jno
daa
fistl
xlat
iret
sub
fcoms
test
pop
scas
aaa
adc
mov
rcrb
add
ss
mov
stos
or
cs
dec
dec
xchg
lahf
sub
push
push
mov
in
test
push
xor
adc
or
add
jmp
inc
sahf
test
sbb
test
fstp
ds
and
dec
imul
pop
jmp
out
adc
jo
inc
xlat
and
pop
mov
into
cwtl
mov
mov
fmuls
xchg
xchg
xchg
outsl
into
movsl
adc
push
push
es
and
repnz
or
jnp
xlat
mov
sub
cmpsl
xchg
dec
or
loopne
add
pop
js
inc
push
test
loope
loop
xchg
push
push
pushf
mov
xchg
shrb
out
xchg
or
aaa
idiv
inc
out
cld
bound
adc
mov
sub
mov
js
mov
cltd
rcl
test
clc
std
aam
pop
mov
ds
pop
adc
adc
xchg
and
rcll
pop
in
pop
arpl
and
test
or
push
xchg
inc
lods
repz
lret
mov
push
inc
pop
jns
enter
jne
shrb
pop
mov
pushf
push
cmp
test
add
out
inc
xchg
sarl
pushf
sbb
insl
push
outsb
push
cmovg
add
add
test
xchg
jb
insb
lret
cmp
divb
xchg
mov
xchg
mov
add
mov
out
aam
jp
jp
xor
push
add
jne
push
test
push
pop
mov
fbld
or
inc
jg
inc
cmp
les
adc
loope
add
sub
enter
aaa
pop
mov
sti
notb
cwtl
adc
mov
mov
xchg
pushf
push
ret
arpl
and
add
mov
add
insl
cmp
test
nop
pusha
addb
adc
inc
loope
push
xchg
repz
sbb
sub
mov
pop
mov
mov
gs
aam
push
stos
xchg
adc
inc
and
xchg
das
imul
sti
mov
ret
outsl
xor
ds
stos
insl
fiadds
cmp
pop
loope
movsb
mov
sahf
test
movsl
adc
jne
cli
rorl
and
jns
scas
sbb
pop
push
cs
mov
mov
lret
or
sahf
push
sbb
popf
push
mov
stos
cltd
loope
add
sbb
shlb
negb
sub
push
mov
imul
xchg
jmp
ss
xor
pop
mov
pusha
mov
xchg
mov
and
in
jbe
in
mov
out
test
enter
insl
mov
loopne
ja
je
dec
ljmp
loope
lret
sbb
sahf
mov
pop
cmpsb
xchg
jmp
adc
add
ficoml
icebp
loopne
dec
adc
aam
shlb
iret
es
and
mov
or
testl
loopne,pt
mov
lcall
jp
int
imul
roll
addr16
mov
daa
js
movsb
pusha
gs
push
sbbb
aad
mov
dec
sti
push
pop
and
arpl
mov
mov
pop
inc
add
call
jge
mov
mov
mov
std
dec
cmpsl
and
dec
shlb
and
adc
mov
paddb
dec
pop
into
mov
ja
fdivs
aas
insl
dec
jp
sbbl
orb
es
add
mov
jnp
mov
loop
inc
enter
pop
out
sub
pusha
mov
or
or
push
aaa
clc
push
call
scas
mov
xlat
repz
xchg
fcmovnu
shll
ds
in
pop
sti
push
adc
fmull
xchg
es
xor
in
sub
and
dec
pushf
xchg
les
ret
mov
mov
jp
imul
sub
dec
ret
and
jmp
inc
push
or
mov
mov
ljmp
xor
fdivs
fiadds
cmp
pop
enter
mov
iret
out
pop
cmp
bnd
lahf
inc
clc
inc
aam
push
or
push
les
movsb
mov
push
mov
data16
aaa
mov
push
xchg
adc
xchg
sub
xchg
jns
adc
sub
mov
jns
loop
dec
int3
enter
mov
inc
icebp
jp
sbb
sbb
and
mov
mov
sbb
jmp
sti
xor
mov
imul
push
pop
push
mov
shlb
cmpl
xor
push
inc
fdivs
jp
adc
pop
sub
cmpb
adc
push
fisubrl
sub
sbbl
xor
in
inc
out
roll
orb
push
cmp
push
cmc
mul
jbe
hlt
cmp
xor
adc
and
into
pop
add
adc
sar
inc
mov
ret
sbb
ljmp
dec
dec
sarb
inc
mov
js
push
sbb
jmp
iret
test
push
divl
adc
mov
adc
lods
shrb
imul
out
jmp
fimuls
cltd
dec
movb
mov
jae
mov
mov
mov
add
pop
mov
pushf
popf
data16
ret
push
mov
sbb
test
lock
inc
xchg
mov
es
ja
cmc
icebp
cmc
push
cmp
xchg
xchg
xor
scas
adc
rol
add
and
test
jmp
mov
jge
dec
sti
lcall
push
test
mov
fsubl
mov
adc
sbb
xor
mov
rcrl
mov
fs
addr16
cmp
inc
loope
xchg
ljmp
mov
cmp
cmc
dec
je
bound
sbb
jno
shlb
test
sbb
lods
cmp
and
pop
rol
add
popa
nop
inc
sub
mov
xchg
dec
adc
shrb
pop
insb
sysret
or
xor
add
nop
push
push
dec
es
jns
into
cmc
xor
mov
aad
fcmovnbe
push
push
mov
mov
xchg
in
and
daa
sub
push
add
cli
outsl
mov
fnstsw
add
and
imul
add
notb
lods
mov
or
outsb
jmp
aaa
sub
scas
cmc
pop
mov
sbb
jmp
leave
or
mov
mov
loopne
mov
int
inc
xor
push
pop
ss
lods
inc
xor
jno
inc
sub
adc
pop
xchg
icebp
xor
rolb
xor
push
insb
leave
push
je
cmpsl
movsb
loopne
push
sbb
inc
jno
outsl
mov
shl
into
arpl
ljmp
xor
nop
int
leave
pusha
pop
enter
sub
mov
adc
pusha
push
push
and
adc
fs
loop
subb
insl
cltd
cmpsl
push
lds
xchg
jne
movsb
push
adc
pop
dec
sti
mov
adc
imul
loope
push
sub
cmp
dec
jo
or
jle
bound
mov
es
shrb
jmp
and
lds
ss
pop
sbb
xor
imul
or
xchg
test
pop
mov
mov
les
fwait
icebp
dec
outsb
es
cmpsb
das
sahf
scas
cmp
outsl
leave
xor
jae
jecxz
inc
les
scas
pushf
lahf
fidivrs
mov
adc
outsb
enter
scas
out
adc
adcl
mov
mov
pop
mov
xor
ja
dec
cltd
into
xchg
lret
and
fs
xchg
shlb
es
es
iret
jb
movsb
or
mov
aad
mov
push
sbb
orl
ja
mov
xchg
jg
negl
sub
shll
pop
aas
xchg
push
or
or
adc
mov
cmc
xchg
jae
fistpl
inc
inc
test
jbe
add
jnp
cmp
iret
or
push
mov
test
cmp
pop
push
popa
out
jmp
shll
dec
sub
xor
inc
push
popf
xchg
xchg
mov
xor
cmp
xor
sahf
lea
sbb
fmull
out
out
add
fcoml
lods
lock
xchg
out
sbb
test
jle
and
pop
push
or
into
aam
ficomps
cli
in
jp
push
mov
stos
mov
jmp
mov
pusha
loope
shld
xchg
xor
sarb
jp
sbb
mov
mov
stos
xor
ss
lcall
sub
lods
daa
and
in
add
cmp
imul
pop
xchg
cmp
or
shlb
fldenv
add
push
mov
lods
jno
jmp
sub
mov
adc
pop
cs
data16
cli
jo
and
mov
adc
pop
stos
sub
fcompl
jo
jbe
insl
out
loop
outsl
vmovapd
cwtl
mov
imul
std
cmp
cmp
jecxz
imul
dec
in
pop
dec
fwait
xchg
ss
imul
push
aaa
ficoml
dec
loop
jb
out
dec
test
pop
sub
imul
and
gs
jl
scas
adc
sub
sub
cmp
js
pop
std
int
into
xor
jne
std
and
daa
jae
fs
pop
std
cmp
addl
xchg
jp
and
mov
mov
bound
inc
add
addb
js
enter
pushf
lret
push
pop
or
pop
rolb
rclb
adc
and
shlb
add
cmp
push
mov
adcl
test
sub
jg
xor
mov
dec
push
sbb
pusha
andb
arpl
and
lret
add
mov
inc
jbe
popa
in
ja
stc
mov
push
jno
xchg
pop
fcoms
mov
xchg
scas
mov
mov
adc
jecxz
in
fdivrl
jl
popa
pop
rorb
mov
cmc
fnclex
or
dec
sti
test
push
dec
out
mov
or
incl
sahf
xchg
jae
xor
aaa
cmpsb
dec
daa
js
int3
or
cli
test
xchg
hlt
aam
in
nop
add
add
shlb
pop
cmpsl
scas
xor
dec
mov
dec
enter
jg
ljmp
leave
test
lds
inc
xor
pop
fisttpll
push
fdivrl
daa
int
xor
push
jb
imulb
outsl
std
lds
scas
mov
inc
or
loope
lock
jne
lds
mov
mov
mov
repz
loopne
lods
ret
pop
or
xchg
cmp
mov
gs
jmp
pop
insb
mov
das
fs
loop
fwait
icebp
xchg
clc
mov
imul
mov
call
mov
xorb
ss
jg
or
sbb
mov
test
xor
push
lock
or
jno
mov
je
out
scas
inc
mov
gs
fstpt
cs
stos
xchg
xor
mov
ljmp
cli
fwait
cmp
mov
jg
data16
ret
xchg
xor
test
mov
retw
adc
nopl
repnz
and
cmp
or
mov
out
inc
fnstcw
test
ljmp
cmovg
xchg
scas
stos
cld
inc
xor
or
inc
mov
dec
or
lret
push
mov
outsl
push
push
pop
inc
pushl
or
sbb
push
out
js
repnz
mov
ror
xor
ret
push
mov
cmp
pop
popa
icebp
push
pop
mov
cmp
clc
je
and
sub
test
sbb
ljmp
popa
or
les
popa
add
xrelease
pop
movsl
jmp
adc
divb
lea
add
bound
pop
dec
push
loope
bound
int3
mov
call
fisttpll
sbb
cmpsb
cmp
pop
lret
add
mov
xlat
jne
fimull
jg
dec
push
mov
sbb
cmp
add
aam
mov
lods
cmpsb
mov
jnp
xchg
add
xor
pop
movsb
popf
rcl
adc
cwtl
in
pop
jp
dec
les
scas
mov
sub
mov
fiaddl
mov
fimull
push
cmc
pop
pusha
popf
lock
jl
icebp
jo
pop
in
repz
pop
jl
out
addr16
push
mov
inc
lods
lahf
lret
out
inc
mov
jno
rorb
add
and
mov
mov
xchg
sub
cmp
lock
push
adc
and
leave
mov
sub
push
in
fldt
push
push
push
pop
mov
mov
push
mov
sub
call
test
mov
mov
rorb
cld
das
mov
mov
xor
or
ret
fdivl
fmul
and
dec
adc
les
mov
pop
paddd
mov
inc
in
pop
jg
bound
psllw
sub
test
hlt
lods
push
outsl
cmp
xchg
push
xor
mov
cltd
cmp
int3
sbb
push
repz
xchg
sbb
ja
je
in
lds
push
pop
idiv
push
mov
jno
pop
in
dec
xchg
mov
add
cli
xchg
xchg
aaa
stos
fdivr
out
int3
addb
pop
aad
stos
mov
out
push
jg
inc
repz
xchg
cmp
stos
pop
jne
xchg
push
js
arpl
mov
popa
xor
testl
sbb
or
mov
dec
xchg
xchg
xlat
adc
inc
pop
mov
dec
jmp
loop
inc
outsl
pop
mov
add
cmp
dec
mov
mov
sub
popa
popa
mov
fsubrp
pop
add
mov
fwait
mov
cwtl
les
xchg
icebp
push
sub
dec
and
xor
mov
mov
fadds
xchg
xchg
sahf
iret
lret
fnstsw
nop
inc
rclb
xlat
inc
pushf
xchg
movsb
cmp
int
addl
jle
cmp
lcall
incl
call
xor
cld
out
cmp
clc
in
mov
mov
sbbb
sti
das
mov
int
fistps
repz
cwtl
fcmovnu
sub
push
mov
sbb
repnz
xchg
jno
sbb
dec
sbb
les
mov
cli
ror
jecxz
lret
call
gs
fimuls
ds
mov
adc
mov
bound
xchg
mov
loope
loope
xor
pop
mov
push
cwtl
cmpsb
aaa
jge
mov
sbb
out
loope
inc
xor
into
in
mov
outsb
popf
cmp
imul
pop
sbb
mov
pop
inc
sbb
cmc
inc
test
sti
jns
das
or
enter
push
mov
adc
cli
call
in
shl
enter
ja
inc
xchg
mov
das
dec
jp
mov
movsl
arpl
sbb
lret
or
pop
push
push
jae
or
adc
or
fs
js
push
je
cltd
lock
jnp
inc
pop
mov
repz
adc
pop
dec
sahf
cmpsb
jge
pop
ds
and
mov
adc
xor
dec
ja
xor
mov
sbb
dec
fistpl
cmc
sbb
pop
mov
xchg
ljmp
xchg
sbb
xchg
pop
dec
cmp
dec
lea
das
or
dec
ljmp
pop
cltd
inc
add
mov
or
test
lea
or
lret
sti
cmp
insl
push
out
aad
pushf
in
or
imul
sub
ja
in
nop
add
jbe
out
pop
div
dec
loopne
loop
xor
pop
and
inc
inc
je
rcr
cs
jecxz
push
dec
roll
mov
add
ja
sub
sbb
inc
jl
ja
lock
xchg
and
cmp
sub
or
add
mov
mov
mov
mov
and
sub
pusha
repnz
dec
jnp
xchg
popl
cltd
rorb
cmp
mov
shlb
sub
cmpsb
mov
mov
mov
push
xchg
mov
outsb
mov
movsl
push
sbb
lds
cmp
rorl
mov
and
sub
or
test
jl
push
push
cmp
xchg
test
loope
pop
jb
arpl
mov
scas
and
jl
lret
mov
add
jmp
mov
testb
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
mov
testb
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
mov
testb
pop
ss
inc
cmp
sbb
xchg
xchg
in
cmpsb
fnsave
test
push
jns
ret
mov
xor
mov
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
