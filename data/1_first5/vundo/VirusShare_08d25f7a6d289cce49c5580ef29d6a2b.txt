cmp
bound
jle
cmp
mov
jle
cwtl
aaa
jle
cwtl
aaa
jle
repz
outsb
cmp
call
aaa
jle
xchg
cmp
int
jle
leave
aaa
jle
nop
aaa
jle
xchg
aaa
jle
cltd
aaa
jle
scas
aaa
jle
ret
ss
ss
xchg
aaa
jle
inc
aaa
jle
jae
jle
jae
jle
test
ss
cmp
xchg
jle
xchg
jle
shll
jle
lahf
ss
xchg
aaa
jle
scas
aaa
jle
repnz
jle
nop
aaa
jle
int
jle
shlb
jle
jmp
jle
nop
aaa
jle
cwtl
aaa
jle
ss
pushf
aaa
jle
jmp
aaa
jle
xlat
aaa
jle
sti
aaa
jle
jnp
jle
aaa
jle
lea
jle
aaa
jle
aaa
jle
mov
jle
mov
ss
mov
jle
xchg
aaa
jle
xchg
aaa
jle
cwtl
aaa
jle
add
add
mov
pop
mov
ret
add
add
sub
add
add
clc
dec
enter
enter
enter
enter
dec
movsb
icebp
dec
fsubs
lret
dec
dec
out
leave
dec
addr16
enter
dec
lods
pop
lret
dec
jle
enter
enter
enter
enter
enter
leave
dec
jecxz
dec
ja
dec
cli
daa
dec
lds
dec
mov
sbb
dec
dec
fadd
dec
xor
leave
dec
or
add
add
dec
ja
add
add
xchg
push
add
add
add
add
add
add
add
sub
add
pop
add
add
add
aaa
aas
add
js
add
js
add
bound
add
add
ret
push
mov
sub
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
sub
je
xor
mov
call
mov
movl
mov
sub
movzbl
cmp
mov
je
movl
sub
mov
mov
movzbl
mov
movl
call
mov
mov
sub
movzbl
movzbl
sub
je
int3
push
mov
pushl
pushl
call
mov
call
jmp
push
movl
call
call
call
pushl
pushl
pushl
pushl
call
jmp
mov
push
push
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
call
pop
xor
push
lea
push
push
push
push
call
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
pushl
call
xor
pop
leave
ret
push
mov
andl
push
movl
movl
movl
movl
call
test
jne
mov
test
je
push
push
call
mov
mov
movzbl
sub
je
int3
call
call
call
jmp
mov
movb
mov
movb
movb
movb
movb
mov
andl
push
push
mov
movl
movl
movb
movl
call
push
mov
call
pop
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
push
push
push
push
pushl
movb
call
mov
push
call
push
mov
call
pushl
mov
call
pushl
movl
movb
movl
pushl
movb
movl
movb
movl
movl
movb
movl
call
add
test
jne
push
pop
jmp
mov
push
xor
lea
push
push
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
jae
jb
popa
je
push
mov
push
push
mov
mov
push
xor
cmp
mov
je
cmp
je
mov
push
cmp
je
mov
mov
jmp
mov
mov
mov
call
movzbl
mov
mov
mov
movzbl
sub
je
int3
push
push
push
push
push
push
call
push
call
mov
cmp
je
xor
mov
mov
push
mov
pop
pop
cmp
movzwl
sbb
and
add
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
not
mov
or
mov
call
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
pop
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
prefetchnta
cld
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
sbb
cmp
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
enter
call
sbb
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sbb
insb
sbb
je
inc
add
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rcrb
add
sbb
fcomps
inc
add
sbb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lcall
inc
add
sbb
in
inc
add
sbb
aam
inc
add
sbb
les
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
sbb
add
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
sbb
add
sbb
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
sbb
inc
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
sbb
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
movzbl
nop
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
mov
jae
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
cmp
mov
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
push
andl
mov
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
lea
cmpb
jne
mov
jmp
mov
xor
mov
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
nop
nop
nop
nop
nop
nop
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
mov
and
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
mov
cmp
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
xor
mov
mov
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
and
shll
cmp
cmpb
sarl
flds
lods
jno
arpl
mov
mov
sub
cmp
rcrl
mov
xor
add
adc
add
adc
mov
cmp
jno
and
ret
scas
dec
mov
or
and
pop
iret
or
jl
or
xor
fwait
rcll
jb
cld
in
int3
adc
pop
cmp
mov
lret
sarb
and
add
ss
adc
sub
cmp
fldcw
jge
and
mov
daa
mov
xor
jp
push
sub
add
sub
mov
sub
ds
into
stos
jno
and
std
and
mov
adc
movsb
test
ret
aad
movsb
dec
fsts
sub
xor
fiaddl
pop
and
popa
flds
mov
mov
cld
mov
mov
add
out
cltd
sbb
mov
lds
jns
dec
adc
jge
or
mov
out
add
dec
leave
pop
cmpsl
cltd
mov
das
sbb
pop
or
test
mov
mov
push
std
adc
and
icebp
loopne
lock
movsb
inc
sahf
pop
shlb
push
rcll
lods
je
data16
fsubrl
sbb
dec
out
rcrl
insb
xchg
cmp
or
sbb
jmp
adc
add
push
cltd
inc
imul
cmp
or
sbb
jmp
adc
add
push
cltd
inc
imul
sbb
inc
mov
pop
ud1
fcmovb
cmp
mov
imul
adc
pop
pop
dec
xchg
mov
orl
data16
cmp
xor
lret
push
sbb
testl
jecxz
pop
jge
pop
dec
cld
loopne
inc
push
xor
test
mov
repz
cmpsl
jno
jb
ss
test
in
cld
in
cltd
xchg
push
sahf
inc
and
mov
sub
pop
out
in
cmpsb
aaa
jae
movsb
add
jge
fs
mov
lret
push
dec
mov
hlt
lods
adc
in
xor
jo
add
pop
jp
xchg
movsl
into
inc
mov
cmc
adc
cmp
roll
ss
sbb
test
daa
int
xchg
insl
push
cmp
movsl
mov
ret
mov
push
lods
add
and
inc
and
push
adc
adc
shlb
lret
sarl
daa
mov
and
inc
xor
insl
cld
xchg
pop
add
inc
sbb
fwait
lods
test
insb
cmpsb
cmp
aaa
testl
ja
loope
jecxz
mov
sbb
loop
xchg
aas
sahf
mov
es
push
jmp
ljmp
cmp
pop
cld
test
dec
xchg
lock
das
jmp
int
out
push
int3
mov
jo
add
jp
jne
add
xor
pop
adc
lcall
clc
sub
dec
cwtl
test
int
xorl
jmp
push
xchg
shl
jge
inc
fadds
leave
or
sahf
sub
fs
fnstsw
cmp
pushf
shrl
mov
outsl
jne
mov
mov
incl
scas
arpl
inc
jp
sub
or
in
ret
sub
jae,pt
fs
sub
mov
je
xchg
xchg
inc
out
test
sbb
dec
cmp
mov
movsb
shlb
adc
inc
and
andl
dec
in
out
inc
loope
jae
add
adc
out
clc
xchg
and
mov
adc
cwtl
mov
xchg
push
xor
xor
loopne
or
add
in
repz
adc
mov
hlt
jbe
xor
xor
call
pop
sub
std
pop
fisubs
insb
sub
pop
mov
lcall
jbe
cli
cmpsb
ret
xchg
jge
push
pop
pop
cmp
mov
adc
adc
mov
cli
jecxz
jae
and
inc
subl
cmp
or
roll
xor
shrl
test
popa
loopne
adc
or
pop
fisubs
fs
jnp
jg
and
mov
pop
fmuls
test
cmpsl
xchg
xchg
in
mov
cmp
scas
dec
sub
push
cmp
scas
xchg
jo
aad
lret
xchg
sbb
sbb
mov
test
push
ljmp
fwait
sbb
push
outsb
inc
cwtl
fisttpl
imul
mov
xchg
inc
insl
or
pop
jmp
lahf
addl
xchg
lods
ja,pn
fs
and
pusha
shrl
cmp
fs
sub
adc
in
cld
mov
mov
fucomp
imul
data16
mov
cmpsl
adc
add
inc
in
adc
add
adc
push
das
sbb
lahf
mov
adc
xor
cmp
int3
sahf
leave
cmp
scas
push
xor
cmpsw
movsl
ret
and
sub
fsts
les
xchg
or
pop
rcrb
sbb
fcoml
lea
popf
out
ret
cmp
mov
sub
inc
dec
out
or
sbb
enter
xor
jp
icebp
js
test
pushf
in
push
iret
and
add
sub
mov
add
mov
leave
cmp
lret
hlt
fisubrs
repz
inc
and
out
fs
fcoml
and
movsl
setb
cld
inc
out
popf
pop
xchg
pop
sti
mov
pop
xor
push
push
shlb
or
xor
std
push
xor
sbb
xchg
stc
jo
mov
pop
lock
imul
sti
rolb
cltd
pusha
pop
movss
pop
sbb
mov
movsb
mov
adc
inc
shlb
movsl
push
aaa
loopne
mov
sub
or
aad
out
xor
hlt
mov
jnp
mov
mov
popa
cmc
lret
pop
sub
and
repz
and
adc
or
jbe
pop
jmp
rcrb
daa
or
fmuls
loopne
test
mov
mov
or
aad
out
mov
dec
js
test
pop
ror
xor
and
shrb
stos
mov
or
xor
aaa
and
cmc
push
ret
je
pop
leave
cmpsl
xor
xor
add
xor
dec
int3
aaa
mov
mov
add
push
andb
out
sub
xchg
xor
scas
sbb
popf
les
cmp
pop
in
addr16
mov
push
in
imul
cmp
adc
scas
out
into
icebp
ficoms
lods
test
sar
xor
dec
and
push
stos
loopne
dec
xor
rclb
mov
sub
pop
popa
inc
ja
cmpsb
ficompl
aaa
lret
mov
inc
out
or
test
sti
mov
daa
push
xchg
std
mov
sbb
push
lahf
andl
outsb
movsl
loop
xchg
fidivrs
and
adc
popf
imul
negb
leave
mov
push
xchg
mov
mov
mov
and
push
ds
and
fbstp
pop
lret
xor
xchg
fisubs
add
arpl
cli
repnz
lcall
mov
mov
xchg
lahf
mov
push
jecxz
pop
int3
sarb
mov
lds
in
xor
mov
mov
imul
jl
xchg
test
ss
fbstp
shl
movb
add
sub
decb
push
lds
enter
sub
out
vandpd
call
and
dec
or
xor
sub
adc
sbb
add
sub
fcompl
push
data16
arpl
popa
xchg
fwait
xchg
xor
jecxz
jns
xchg
scas
sub
fsubrl
mov
insb
jg
xchg
mov
sbb
addr16
xor
pop
repz
mov
adc
les
cmp
into
pop
mov
test
cmp
imul
aaa
adc
mov
lret
mov
shlb
rorb
stos
repnz
cmp
popf
fistpl
push
cltd
sbb
fnstcw
mov
pop
int
mov
stos
xchg
clc
outsb
out
jnp
dec
add
pop
ret
sub
jb
xor
xchg
sbb
push
dec
sbb
xor
fbstp
and
mov
sub
and
imul
enter
jp
out
push
inc
jg
bound
popa
xor
in
pop
pop
mov
jo
xor
shlb
push
inc
mov
shl
pop
adc
nop
cmp
add
or
adc
add
stos
sub
or
mov
outsb
jmp
filds
mov
pop
adc
mov
roll
in
jbe
jnp
inc
and
js,pt
add
in
inc
sar
aam
mov
test
sbb
mov
adc
pop
inc
stc
fsubs
addr16
mov
and
lods
dec
jno
xchg
and
sahf
rclb
sbb
je
mov
lods
cli
int
repnz
or
out
or
push
pusha
sbb
int3
jo
xchg
das
test
jo
int
cmp
addl
into
sub
mov
lcall
mov
test
inc
adc
movsl
lea
add
push
push
les
lods
movsb
inc
xchg
sub
in
sbb
sub
xchg
outsl
push
mov
lcall
mov
stc
inc
js
xchg
movsl
push
xor
push
outsl
lret
add
dec
lahf
int
cmp
push
inc
mov
mov
cmp
ljmp
ja
mov
clc
pop
adc
cmc
orl
ret
fistl
push
notl
sbb
or
xor
dec
out
int
and
mov
jbe
je
lds
popa
sub
xlat
jb
pop
fisubrs
cmp
lock
hlt
comiss
or
and
pushf
mov
push
dec
popf
stc
and
sti
mov
lahf
sbb
jbe
mov
icebp
add
repz
sahf
mov
inc
ret
adc
or
fisttps
and
adc
sbbl
fst
loopne
cmp
enter
xor
inc
pop
mov
jbe
mov
sbb
or
sbb
loop
stos
sti
andl
or
xchg
cmpsb
rcrl
fwait
push
imul
jae
andl
or
or
xchg
lock
test
mov
je
daa
fstpl
and
jge
ror
jnp
int3
adc
leave
cli
push
inc
dec
push
adc
insb
and
sbb
rolb
mov
mov
adc
add
xor
addb
leave
jecxz
mov
sub
jno
mov
cmp
ret
adc
jge
or
mov
push
imul
push
adcb
xchg
in
enter
rclb
daa
jne
or
dec
mov
push
sub
popf
lret
mov
dec
cmpsb
cmpsl
or
and
out
or
mov
ds
jno
mov
adc
roll
cmp
arpl
sbb
cmpsb
shrb
cmc
out
mov
jle
ds
test
int3
add
push
and
adc
jbe
adc
xchg
jo
inc
insl
sahf
cwtl
xor
insb
dec
lret
push
and
or
dec
enter
data16
imul
xchg
dec
lods
xchg
in
outsl
push
dec
and
mov
inc
sahf
mov
ja
rcll
lcall
not
or
into
mov
xchg
aad
std
jns
int
dec
in
pop
hlt
ja
jb
jmp
outsb
outsl
or
cmp
jb
jbe
jo
inc
andb
adc
fidivrl
mov
and
cmp
lahf
mov
push
jo
das
out
jl
das
dec
mov
ss
lret
das
iret
incb
decl
pushf
push
mov
jnp
pop
jge
jo
cmpsb
out
enter
dec
outsb
nop
mov
pop
push
jbe
cmpsl
mov
outsb
inc
ja
popf
mov
jle
mov
xchg
std
rcrl
fists
mov
fnsave
rcll
clc
push
push
inc
pusha
mov
jns
dec
fmull
mov
les
arpl
lea
cmp
lds
outsl
jge
or
in
sbb
aad
outsl
mov
sbb
jp
xchg
dec
mov
push
pusha
push
popf
das
lock
sub
fcoml
test
test
jo
imul
dec
cmp
jl
xchg
jns
fwait
or
xchg
sbb
test
dec
popa
pop
div
inc
mov
adc
cmp
cmp
adc
sub
lahf
dec
push
pop
inc
arpl
push
push
cmp
mov
and
movsl
add
mov
iret
and
movsl
mov
or
or
jecxz
inc
sub
add
enter
or
call
pand
add
and
jno
add
shll
dec
inc
movsb
gs
mov
cwtl
cmp
add
lret
and
adc
lods
nop
inc
out
xchg
mov
pop
popf
mov
pop
push
cmp
outsl
mov
adc
add
push
mov
insb
or
mov
cli
in
cmpsl
adc
sub
pusha
xlat
pop
fucomp
add
test
insb
rolb
loop
xchg
adc
cmp
icebp
dec
sbb
scas
nop
in
adc
xorb
test
adc
movsb
cmpsb
jae
test
in
mov
icebp
jmp
xchg
dec
adc
jle
lahf
in
in
adc
mov
sbb
add
imul
jne
cld
dec
push
adc
pop
fistl
mov
xor
mov
push
sahf
jae
cli
in
or
orb
mov
insb
mov
roll
aaa
cmp
aad
out
addr16
repz
xchg
stc
pop
test
lahf
lcall
add
adc
in
imull
sbb
sahf
push
or
rcrb
jb
cmp
fwait
xor
js
sar
adc
jnp
fistl
mov
xor
or
sbb
inc
test
adc
mov
mov
lret
test
xchg
fcomps
scas
jb
sub
xor
push
pop
or
and
stos
test
mov
popf
mov
in
jle
push
add
mov
adcb
mov
push
dec
or
sbb
cld
sub
mov
pop
nop
hlt
mov
cmpsl
es
repnz
gs
or
call
jb
pop
mov
fwait
xchg
sahf
lret
lea
in
daa
xchg
fmuls
jmp
push
xchg
or
gs
mov
repz
inc
lret
and
or
stos
cmp
push
ss
xor
sub
jbe
int3
push
inc
in
shll
push
or
shl
jne
pop
lahf
js
jno
add
sbb
push
push
aam
out
dec
xchg
je
clc
mov
sbb
xchg
mov
pop
jecxz
sbb
movsb
mov
push
gs
pushl
loop
fstps
xorb
sub
aad
repnz
in
test
fs
in
out
or
and
movl
bound
mov
sub
add
loope
lock
fidivrs
add
ljmp
lods
inc
xchg
pusha
mov
test
inc
xor
nop
pusha
sysret
pop
add
pop
jl
sbb
mov
cmpsl
mul
lret
push
lahf
mov
fistpl
sbb
add
add
jnp
mov
imul
dec
push
sub
pop
icebp
sbb
sbb
push
fwait
int
gs
mov
lock
stos
pop
sub
iret
adc
cld
cmp
pop
mov
cwtl
loope
aam
test
mov
popa
sbb
bound
repnz
cmp
into
inc
mov
data16
sub
sub
sub
mov
out
jp
and
test
ds
mov
sti
sub
mov
xchg
fisubrl
outsb
aad
roll
je
jge
stc
push
mov
xorl
ret
and
cmc
test
ret
sub
mov
or
cmp
pop
loope
xor
popa
sbb
pop
test
sti
fisubrl
jecxz
bound
sub
popf
aaa
data16
cmp
dec
xchg
fldl
mov
sub
sub
pushf
mov
daa
add
test
sahf
insb
sub
pop
cs
adc
cli
mov
add
pop
push
dec
cld
movsb
xchg
cld
xchg
jg
test
cmpsb
or
fwait
or
jo
lods
xor
fcmovbe
jle
lahf
push
outsl
repnz
insl
cmpsb
loop
adc
ss
testb
test
nop
lods
into
mov
fnstenv
jge
xor
jle
adc
out
push
mov
and
lcall
popf
sarl
outsl
loope
out
leave
dec
adc
sbb
das
ficoms
in
dec
xchg
sub
sbb
fcomp
imul
sub
es
sti
imul
pop
or
cmpl
jo
lds
xchg
cld
setl
orb
add
cli
mov
adc
into
jge
gs
dec
leave
je
jno
mov
mov
or
lahf
sbb
decb
pop
in
dec
cmp
xor
cmpsb
add
fsincos
loope
std
out
inc
aaa
push
xlat
xchg
adc
decb
outsb
lods
dec
adc
cmp
insb
mov
or
and
cli
movsb
push
adc
orl
lds
mov
lds
icebp
outsl
xor
push
cmpsl
adc
fincstp
stc
sub
mov
hlt
pop
xchg
or
out
sti
sbb
add
lahf
push
fdiv
es
movsb
cmpsb
and
dec
loopne
fwait
test
popf
in
test
fisubs
or
or
leave
and
and
test
out
xchg
popf
or
dec
xchg
aaa
cmpb
jno
fsubrp
cmp
mov
movsl
mov
pop
shrb
mov
jp
mov
aam
in
add
cmp
pop
cld
mov
sahf
mov
mov
jecxz
lret
sub
and
iret
loope
imull
hlt
cmp
and
adc
es
and
adc
cs
je
ret
lods
mov
mov
mov
xor
jge
ss
cmpsl
pop
sub
xchg
fistl
jp
das
lods
mov
out
jl,pn
in
jne
fwait
jg
scas
inc
stc
fldlg2
nop
outsb
pop
dec
adc
sbb
mov
xchg
icebp
call
sti
xor
jmp
fidivs
lea
lds
insl
sub
push
daa
fldenv
jo
test
pop
in
pop
xchg
pop
jbe
iret
hlt
sbb
dec
insl
subb
mov
pop
xlat
push
push
pop
sbb
imul
jp
out
dec
cmp
jle
insl
jmp
mov
arpl
mov
filds
mov
cmp
lods
xlat
aad
xor
pop
add
ss
push
jo
xchg
out
pop
iret
push
add
inc
cli
sub
scas
mov
push
lea
cmp
pop
xor
ret
jecxz
push
xor
mov
cmp
insb
out
hlt
lret
inc
sub
aad
insb
ret
ret
push
dec
pushf
xlat
and
mov
jns
push
loop
cli
aaa
xor
mov
aam
test
lahf
outsb
pop
pop
push
popl
pop
ja
je
mov
add
add
jecxz
mov
popf
push
sbb
push
xor
punpcklbw
sub
xor
inc
repnz
add
mov
leave
xchg
iret
ds
test
and
dec
push
jae
jecxz
xchg
push
or
pop
sbb
inc
pop
into
cwtl
and
aam
push
mov
cmpsl
dec
idivb
leave
cmc
pop
nop
repz
std
xlat
jmp
enter
sbb
movsl
push
rorb
mov
cli
xchg
gs
jo
subl
dec
cld
lret
jg
scas
cmc
mov
cmp
icebp
hlt
bound
mov
or
add
nop
incb
enter
lods
les
add
mov
insl
pop
lock
loop
dec
std
clc
stos
jge
cmp
pop
cwtl
and
add
lock
out
sbb
pop
filds
xchg
call
xlat
ret
jecxz
mov
stos
jb
sbb
pop
shll
push
insl
lret
repnz
adc
outsb
dec
ror
jb
xchg
rcrb
shl
and
movsl
inc
addr16
pusha
cmpsl
jle
fimuls
xchg
mov
jo
add
jmp
pop
aas
add
addr16
jl
lods
xchg
sbb
out
xor
sub
shlb
mov
mov
xchg
ror
sahf
ljmp
leave
lds
push
sbb
test
sub
pusha
jns
pop
or
out
jg
sub
adc
mov
jle
stc
dec
repnz
push
cmp
fmuls
lock
nop
add
adcl
pop
sti
mov
and
xchg
sbb
or
jae
sbb
add
outsb
ficomps
mov
inc
push
push
dec
sub
cmc
mov
pushf
out
ja
lcall
rcrb
ljmp
push
call
incl
push
je
and
es
pop
pusha
adcb
sub
sub
popa
dec
cltd
lcall
je
sub
in
xor
loope
imul
lret
mov
push
fucomip
aaa
and
jnp
jmp
and
pop
or
mov
mov
jmp
push
pop
ret
popa
xchg
xchg
mov
aam
mov
addb
lcall
cmp
jb
sub
lea
pop
jmp
iret
dec
out
shrl
push
sarl
pop
dec
sahf
incb
push
jmp
mov
fwait
jg
test
adc
in
or
pop
stos
inc
adc
fs
arpl
pop
xchg
mov
pop
int3
xchg
mov
std
mov
mov
repnz
sbbb
lretw
mov
mov
push
les
fcompl
lahf
inc
divl
push
add
jnp
adc
jb
leave
in
push
cmp
jge
das
lea
imul
sbb
dec
cli
gs
jns
icebp
stc
sub
fldenv
je
push
pop
xchg
idiv
inc
outsb
jecxz
and
adc
test
xor
rorl
add
push
pop
lods
int
sub
xchg
inc
orl
push
pop
jle
add
int3
inc
or
bound
ret
adc
and
inc
les
or
pop
fdivrl
dec
pusha
add
fstpt
imul
sbb
adc
test
into
pop
mov
cmp
leave
arpl
notl
and
sub
gs
shll
sbb
pop
fistpl
xchg
xchg
sbb
mov
das
inc
push
decb
out
lret
sahf
popf
cmp
push
or
mov
lcall
xchg
xchg
lds
ja
andb
loopne
xchg
stos
mov
int3
pop
or
sbb
pop
out
xlat
fdivl
mov
inc
xor
ja
int3
ds
pop
dec
adcl
popa
inc
arpl
jmp
sub
ret
dec
scas
inc
mov
imul
mov
inc
cmp
les
shll
xlat
jbe
xor
or
test
add
mov
push
cltd
mov
mov
sahf
nop
in
cld
jmp
int3
dec
mov
jmp
shrb
add
jmp
les
testl
push
rorb
mov
and
mov
sbb
cmp
mov
cmc
int
and
sub
inc
xchg
lcall
xlat
sbb
aaa
sub
and
push
mov
mov
pop
mov
inc
mov
mov
cmp
or
sbb
push
lods
mov
mov
test
cmp
lret
out
popf
loopne
jle
mov
icebp
and
sub
adc
stos
jnp
jg
jae
push
test
faddp
cmp
adc
inc
aad
sub
or
mov
mov
leave
xchg
mov
arpl
inc
aad
scas
mov
mov
scas
fmull
lea
test
roll
dec
aaa
jnp
inc
test
into
and
ds
mov
arpl
add
into
lret
negl
addr16
repnz
ret
test
pop
lret
push
imul
pushf
and
sub
shr
movsl
xchg
ljmp
xchg
cmp
out
lods
aam
xchg
int3
xor
mov
sbb
out
dec
xlat
mov
cmc
test
push
xchg
mov
xchg
mov
jae
fisubs
and
daa
mov
outsl
gs
enter
jo
push
aaa
imul
loope
fldl
icebp
push
gs
cmp
add
or
lea
je
mov
and
mov
gs
mov
inc
dec
and
xor
jg
insb
jne
xchg
icebp
outsb
and
push
xchg
in
mov
ds
ss
cmc
xchg
xchg
mov
pop
mull
in
pushf
scas
xor
mov
xchg
pop
push
cmc
push
dec
xor
fwait
pop
and
mov
movsb
aas
dec
jae
addr16
cmp
or
lds
pop
push
mov
dec
movsl
insl
out
mov
inc
inc
movsb
mov
mov
and
mov
xchg
jle
cli
inc
dec
shlb
sarl
inc
dec
ss
dec
mov
cli
in
add
fdivr
popf
addb
int
dec
mov
lret
jnp
roll
arpl
xchg
sub
dec
push
mov
out
push
daa
aas
adc
aam
sub
inc
popa
jne
pushf
inc
or
add
ss
xor
sub
fcmovne
sbb
mov
or
lret
lahf
daa
out
jge
inc
cmpsl
pop
jmp
ss
scas
xor
fsts
inc
mov
push
out
fwait
out
inc
je
push
fidivrs
out
mov
or
lcall
inc
add
push
fdivl
xchg
or
xor
dec
cltd
push
into
daa
les
fucomp
test
cli
mov
sti
scas
ds
push
in
test
mov
push
inc
pop
dec
sbb
adcb
pop
push
fcomp
add
sahf
cltd
idivb
stos
add
sub
mov
repnz
ljmp
xor
mov
test
mov
xor
mov
repnz
fstl
lcall
mov
inc
es
jle
or
jo
outsl
add
or
shrb
push
je
iret
mov
mov
das
mov
dec
lock
cltd
and
fmuls
outsb
loope
pop
xchg
ss
cmp
push
push
clc
jle
fnstcw
imul
popa
mov
dec
xor
mov
and
xchg
scas
ljmp
test
andl
xchg
orb
push
pop
jb
stc
scas
and
push
pop
add
in
jo
mov
xor
or
lods
xchg
adc
in
enter
xchg
or
push
out
iret
inc
scas
aad
cld
pop
cmp
sbb
mov
gs
dec
mov
inc
mov
sub
sbb
ret
push
cwtl
mov
mov
adc
cmp
js
pusha
and
mov
ljmp
in
mov
aam
xchg
mov
sub
cmp
or
sbb
jmp
adc
add
push
cltd
inc
imul
cmp
or
sbb
jmp
adc
add
push
cltd
inc
imul
cmp
shr
stc
and
adc
add
jno
inc
jno
push
mov
sub
sub
or
shr
push
mov
fnstenv
stc
xor
int3
int3
int3
int3
ds
cs
ja
or
sub
inc
mov
dec
into
dec
cmp
sub
or
or
clc
cs
jle
outsb
test
cwtl
dec
mov
js
dec
pop
out
sub
sbb
or
loope
call
jle
outsb
mov
orb
dec
jns
inc
popf
dec
cmpsl
or
dec
sbbl
push
cmp
push
lds
repz
xchg
pop
mov
jae
gs
in
push
shlb
repz
xor
mov
clc
and
test
sbb
outsl
je
inc
lods
sub
mov
fs
mov
int
sub
pop
out
dec
ds
test
cwtl
or
push
cwtl
xchg
push
dec
sub
xchg
jg
jno
scas
imul
es
inc
bound
stos
or
cwtl
dec
push
mov
cmc
cmpsb
sub
sbb
outsb
movsl
and
testl
cwtl
icebp
add
in
cli
mov
jmp
outsb
dec
in
sbb
pop
sbb
int3
sbb
clc
lcall
enter
mov
dec
xchg
mov
inc
mov
and
aas
ficomps
into
insb
pop
popf
dec
call
sbb
add
xor
lret
adc
adc
or
scas
jnp
sbb
call
sbb
and
in
add
or
sub
or
dec
mov
je
insl
pop
mov
imul
cwtl
dec
mov
pop
mov
cmp
sub
sbb
or
clc
cs
jle
outsb
test
cwtl
dec
mov
pop
mov
cmp
sub
sbb
or
clc
dec
outsl
cmp
fldt
jl
ret
dec
push
xor
mov
stos
fisubl
subb
inc
mov
arpl
inc
clc
mov
xchg
sarb
iret
imul
xchg
xchg
jecxz
or
int
leave
mov
scas
loope
dec
jecxz
icebp
jb
mov
mov
jecxz
or
loop
inc
lret
mov
lahf
mov
out
sub
in
push
or
cs
sahf
xchg
push
inc
xchg
arpl
enter
xlat
sti
push
push
lea
xor
xchg
lock
ret
fsub
sbb
repnz
xchg
xor
gs
jne
mov
xchg
push
fwait
add
sbb
fimull
mov
std
and
add
ljmp
dec
mov
pop
jnp
out
out
lock
repnz
aaa
popa
stos
cld
or
pop
pop
xchg
hlt
leave
aaa
push
mov
mov
int3
sbb
mov
mov
movsb
push
push
clc
push
pop
cmpsb
andl
pop
ret
in
pushw
mov
and
orl
mov
bound
std
jno
sar
addr16
shlb
test
and
std
out
out
sbb
push
mov
sub
mov
packsswb
insl
roll
lret
mov
fucomip
and
or
inc
jne
icebp
fsubrl
jae
mov
popa
outsb
mov
imul
test
adc
jecxz
jg
pop
inc
jno
jnp
int3
xor
xor
int3
test
jae
mov
mov
dec
mov
xchg
stos
rorl
mov
cld
add
sbb
xchg
ret
popf
mov
mov
test
aas
outsb
stos
sti
divb
clc
movsl
mov
jg
jg
pushf
int
jecxz
jbe
ds
cmp
xchg
mov
subps
hlt
mov
pop
mov
test
clc
or
sub
pop
cmp
dec
inc
mov
mov
lcall
nop
out
imul
sub
jne
mov
pop
jp
pop
adc
iret
pop
aaa
push
sti
push
jnp
das
loope
jne
xor
enter
jno
adc
sbb
arpl
fmulp
bound
inc
outsl
mov
jno
and
gs
xchg
adc
pop
mov
dec
and
add
rclb
xchg
xchg
jb
xor
cmc
jbe
pop
ja
imul
clc
jle
test
cld
xor
lea
jmp
out
cmp
std
lret
push
xchg
shl
jno
enter
xchg
cmpsl
jns
cmp
jae
andb
dec
int3
popf
push
data16
push
add
testl
cmpsb
scas
inc
cmc
js
push
mov
cmpsl
cmp
xchg
mov
jge
lret
jns
aam
or
sbbl
jbe
icebp
insl
adc
ja
xor
insl
cltd
add
xor
test
adc
xchg
imull
sbb
jae
hlt
jg
push
stos
in
jg
ss
inc
loopne
push
push
les
lock
mov
inc
mov
xchg
ja
je
bound
mov
and
cli
mov
ret
dec
dec
mov
lahf
and
in
xchg
sub
fs
jo
pop
test
add
jmp
lret
sbb
rol
aaa
adc
fisubrs
arpl
sbb
adcb
xor
pushf
repnz
push
repz
cmpsl
and
fdiv
cld
pusha
nop
out
add
pmaxub
sbb
lret
repnz
out
pop
inc
lock
lcall
and
inc
movsl
dec
inc
sbb
cmpb
cli
jmp
dec
fs
mov
xchg
roll
xchg
push
repz
pop
add
fwait
aam
in
pop
int3
add
call
xor
pop
lcall
and
jg
adc
pop
aaa
jne
xlat
jbe
push
sahf
rorl
cmp
imul
pop
clc
add
mov
jb
inc
data16
jmp
pushf
dec
xchg
dec
repnz
in
leave
jo
nop
pop
jb
pop
pop
mov
ret
repnz
push
inc
sub
rolb
pushf
neg
stos
stc
push
sbb
dec
in
leave
into
mov
push
inc
sub
negb
or
icebp
mov
mov
clc
jne
negb
push
pop
adc
add
punpcklwd
inc
dec
xchg
ss
jge
popf
int
cmpsl
mov
fcmovbe
mov
outsl
cmc
aam
mov
data16
push
sbb
fucomp
dec
lock
jmp
jle
cmc
fisubs
and
ljmp
mov
and
xchg
and
in
push
cmp
xchg
fs
and
inc
pushf
inc
adc
sahf
ja
imul
fwait
test
adc
cmp
push
push
adc
jmp
jmp
cmpsl
sbb
scas
jmp
push
sub
cmp
adc
dec
add
std
cmpl
jl
xchg
xchg
mov
mov
adc
repnz
mov
mov
adc
jmp
js
or
stos
call
and
mov
or
frstor
mov
inc
sbbb
mov
adcb
push
leave
xchg
out
xor
shr
pushf
push
pushf
cs
out
or
xor
and
in
mov
sub
frstor
inc
sbb
sub
or
iret
mov
fldenv
sbb
sbb
addb
xor
jo
jle
dec
fsubrl
sbb
xchg
mov
cwtl
sub
xchg
sahf
in
dec
push
add
and
push
inc
scas
popa
cmpsl
pop
push
xchg
xchg
mov
out
xchg
ret
xor
xchg
sahf
jl
mov
fisubrl
dec
cmp
std
mov
imul
sahf
sbbl
jmp
push
or
loop
data16
jns
sub
pop
insl
test
repnz
in
dec
dec
sbb
movsl
mov
xchg
out
mov
out
fmulp
pop
pop
rcrl
fsubrl
or
lea
jno
out
pop
bound
rcr
mov
mov
mov
lcall
mov
and
outsl
cmp
js
scas
hlt
mov
bound
xor
out
jg
sbb
xor
pop
inc
jmp
mov
and
dec
pop
jo
call
movsb
dec
add
daa
pop
imul
mov
aaa
pop
adc
cmp
pop
mov
xor
adc
or
pop
inc
cld
int
mov
and
pop
mov
nop
cmp
fdivs
dec
lret
pop
loopne
cld
and
setno
shll
fs
inc
inc
in
jns
xchg
adc
xchg
aas
outsl
fdivr
jae
cld
push
ljmp
sub
insl
xor
orb
jmp
scas
arpl
cmpl
inc
movb
or
xor
bswap
mov
insl
push
outsb
dec
mov
mov
jl
dec
push
pop
cmp
decl
xchg
imul
das
mov
xchg
mov
lret
mov
fidivs
sub
jo
mov
aam
test
inc
jmp
pop
arpl
sub
sub
jg
inc
xor
cmpsb
adc
cltd
enter
decl
repz
xchg
daa
shlb
test
pop
vmread
jbe
loope
cmovno
fldl
movsl
xor
adc
icebp
inc
sbb
xchg
push
and
mov
movsl
aam
movsb
mov
arpl
mov
mov
or
mov
imul
push
push
lods
sub
mov
and
xor
push
jl
mov
das
addr16
and
aad
mov
cli
pop
xchg
loop
in
test
jle
fldl
mov
scas
ret
inc
rcr
stc
insb
nop
push
outsb
std
xchg
jnp
push
pop
lock
out
and
adc
sbb
lock
cmp
decl
enter
lcall
mov
ja
or
scas
add
icebp
jo
xchg
fistps
xor
in
xchg
add
aaa
add
in
mov
loopne
loop
cmp
jp
jbe
mov
sub
push
xor
notl
outsl
xchg
xchg
cmp
dec
sub
sbb
imul
movsb
aas
icebp
adc
mov
bound
mov
xlat
out
xor
aas
lahf
je
das
jbe
push
push
jb
cmp
xor
popa
lcall
mov
out
mov
jae
mov
and
cld
aas
dec
and
cs
sbb
dec
sub
loope
loop
mov
push
xchg
xchg
xchg
push
jo
cmp
or
cld
fwait
or
test
not
dec
and
cmp
jnp
push
mov
loop
lock
dec
or
mov
mov
cmpsb
jne
adc
or
rolb
repz
xor
xchg
pop
cmp
pop
lahf
pop
int3
negb
sub
jbe
repnz
clc
add
mull
and
push
and
imul
std
aam
push
xchg
decb
and
pop
cmpsl
dec
pop
dec
xor
push
pop
mov
inc
jno
clc
call
adc
cld
adc
xchg
inc
outsb
fcoms
jl
cltd
push
lock
add
call
ffreep
sub
mov
insl
pop
mov
sbb
mov
pop
bound
sbb
lahf
mov
xor
cmp
sti
sti
mov
movsb
lret
pop
pop
ficoml
scas
insb
pushf
stos
push
jno
inc
adc
int
jne
call
mov
mov
dec
pop
leave
adc
inc
fadds
test
and
je
jl
cmp
xor
xor
jns
jno
pop
mov
rclb
adc
push
mov
mov
sbb
leave
cmpb
imul
mov
out
cmp
rorl
shll
cwtl
jecxz
into
cmp
test
push
jbe
lock
lock
pop
push
pushf
mov
pop
ljmp
sbb
xor
and
push
lods
mov
shrl
mov
jl
mov
jecxz
push
shll
arpl
aad
fs
xchg
jns
in
stc
cmc
jp
pop
push
adc
mov
sbb
sbb
clc
call
in
push
outsb
jmp
loop
dec
mov
add
push
xchg
out
dec
fwait
mov
mov
shrl
movl
sbb
insl
daa
push
adc
in
inc
scas
and
mov
mov
in
xchg
cmp
adc
lret
sbb
pop
test
lock
inc
call
lods
les
cmpsl
lods
inc
adc
pop
xor
sbb
scas
daa
push
and
nop
xchg
icebp
xchg
negl
xchg
add
inc
ljmp
sbb
stc
push
adc
rorl
sti
and
jmp
fisubrl
mov
sub
aaa
sti
js
test
divb
cmp
pop
test
add
int3
cwtl
cld
lret
fnstsw
imul
and
mov
add
sbb
sbb
and
add
jge
in
sti
jmp
pop
ss
mov
push
scas
dec
sti
and
inc
out
jns
dec
scas
mov
ss
dec
xor
mov
lret
in
push
ljmp
sbb
jnp
pop
inc
shl
push
jmp
sbb
cmp
xor
mov
inc
mov
or
fldt
loop
push
push
cli
xlat
nop
pop
fistpll
inc
push
or
aad
movsl
fs
int3
aas
xchg
pop
test
dec
ret
sbb
movsl
mov
cmp
out
cmp
jmp
mov
sub
mov
dec
xchg
fists
push
and
iret
cmpsl
adc
cwtl
aad
test
cmp
mov
mov
ret
rcll
sub
and
mov
xchg
rol
mov
daa
sub
xchg
imul
fildll
cltd
xor
mov
jg
shr
adc
add
sbb
mov
jg
in
cltd
or
mov
out
cwtl
pop
or
xchg
lret
out
insl
enter
push
out
mov
fimuls
push
sbb
test
xorl
sbb
push
or
xor
inc
add
nop
les
and
movl
sbb
xor
fiaddl
fdivl
jae
mov
inc
das
mov
mov
xor
leave
out
mov
push
fbstp
dec
shrl
jg
mov
ljmp
cli
push
mov
cmp
loop
xor
lds
test
insl
repz
imul
sahf
add
inc
adc
mov
data16
or
adc
and
mov
bound
cld
sub
hlt
je
mov
js
rol
pop
dec
xchg
inc
push
mov
xor
sub
int
or
and
outsb
fdivrs
jns
scas
xchg
les
adc
cmp
mov
pusha
out
test
rcrl
and
mov
and
xor
mov
cs
sub
pushf
sbb
mov
xchg
xchg
out
jmp
mov
push
mov
aam
jbe
xor
push
movl
sub
nop
lcall
lds
cmpb
push
inc
lahf
mov
jge
jge
adc
xchg
sub
xchg
adc
and
dec
pop
mov
in
sbb
subb
outsb
pop
fdivl
sbb
sub
cmpsl
imul
jne
pop
out
inc
lret
xchg
leave
jge
addl
push
pop
fadd
inc
rcrl
adc
es
push
push
adc
sbb
dec
dec
sarl
sub
sub
cli
rcrl
mov
inc
rol
repnz
sub
inc
dec
dec
sub
or
pop
jge
cmp
xchg
int3
testl
ja
or
pop
push
pop
inc
and
xor
push
sar
loop
dec
scas
dec
pop
jno
inc
addr16
push
jg
adc
dec
jmp
lret
lahf
popf
in
mov
lcall
mull
dec
in
fcomp
mov
adc
pop
xchg
testb
push
mov
jns
mov
mov
movsl
pop
push
test
sbb
sbb
imul
dec
and
imul
xor
popa
fcompl
mov
add
jecxz
sbb
adc
iret
mov
cld
arpl
aaa
sbb
push
dec
sbb
add
mov
out
in
loopne
lods
dec
lds
lds
loop
lea
in
fistpll
cmp
inc
xchg
mov
adc
sbb
dec
add
leave
mov
in
mov
loope
dec
xchg
in
push
cwtl
and
sahf
mov
mov
or
call
lret
sbb
xor
inc
mov
scas
inc
sti
xor
loop
push
test
dec
jge
xor
cmp
adc
sub
sti
ss
cmp
fwait
adc
popa
ror
or
xor
dec
dec
insl
pop
or
stc
jo
andb
pop
and
and
sub
shl
dec
sahf
pop
or
mov
les
sbb
lds
cld
loop
mov
fldcw
les
call
test
sbb
jne
and
mov
sub
pop
inc
sbb
mov
mov
inc
out
cs
test
or
test
out
out
pop
jb
mov
mov
in
fisttpll
insb
or
loopne
nop
data16
dec
insl
mov
out
adc
jae
xor
nop
std
jge
sbb
insl
stos
sahf
enter
jmp
adc
les
mov
add
xchg
stc
lret
stc
ss
adc
mov
data16
fcmovu
push
das
int
mov
mov
and
cmpsb
outsl
leave
in
cs
push
out
add
mov
mov
jl
add
mov
sub
xchg
pop
mov
mov
mov
jg
fdivr
inc
leave
xor
lret
lock
mull
repnz
pop
mov
sahf
push
mov
lods
fimull
mov
stos
decb
jg
imul
mov
test
test
mov
mov
mov
nop
roll
mov
lock
fs
pop
push
fidivrs
filds
aad
xchg
cli
sub
dec
out
cmpl
shlb
das
and
pop
ss
xlat
cmp
inc
dec
adc
jl
adc
push
out
repz
popf
adc
cmp
cs
xor
enter
ret
cmp
push
ret
out
xor
mov
mov
or
sbb
jno
dec
pop
adcl
push
sub
xchg
popf
sbb
jbe
rcr
cmp
in
in
cmp
jmp
dec
dec
or
push
out
pop
jle
sbb
adc
inc
inc
adc
in
cmp
std
jnp
and
ret
ret
icebp
icebp
push
xchg
jmp
loop,pn
and
inc
andl
xor
loope
mov
and
or
ss
lods
cmp
out
xor
mov
nop
lea
das
pop
mov
sub
inc
push
dec
jmp
push
adc
loope
pop
cmp
fldt
mov
test
pop
jmp
adc
repnz
mov
cld
test
in
out
daa
repnz
sarl
xchg
cmp
xchg
mov
aad
outsb
dec
outsl
mov
mov
out
lea
pop
pop
into
or
dec
cltd
imul
mov
dec
stos
in
mov
inc
push
dec
std
cmp
fldenv
and
orl
out
movd
movsl
lea
das
ret
test
addl
or
adc
cltd
pop
gs
fstl
pop
int
pop
testb
add
decb
dec
and
das
dec
cltd
out
mov
dec
xchg
hlt
dec
push
cmc
xor
pop
xchg
push
adc
scas
dec
mov
popa
movsb
mov
ficomps
adc
lret
sub
xchg
rcr
cld
push
cmc
mov
lret
or
sub
push
ljmp
add
xor
je
inc
mov
sub
aaa
jmp
or
sahf
adc
jecxz
nop
jbe
enter
cs
jecxz
push
push
and
xchg
jne
jo
push
mov
or
pop
ja
inc
or
imul
loopne
jp
flds
rcll
adc
mov
lahf
mov
daa
stc
cmp
adc
jmp
pop
cmp
lds
xchg
mov
scas
ficoms
psrld
out
imul
jmp
stc
outsb
stos
lock
jmp
add
jg
mov
push
inc
aam
or
or
fadds
inc
add
xchg
pop
xlat
pop
xor
clc
lds
out
inc
out
aad
dec
adc
cltd
jne
cli
icebp
pop
mov
sbb
sar
xchg
in
and
cmp
stos
inc
dec
sar
dec
popf
xchg
lock
adc
movsl
sbb
lahf
or
lcall
mov
xlat
mov
cmpsl
hlt
cmp
imul
xor
and
push
aad
fildll
hlt
sub
icebp
fwait
cmc
mov
add
push
mov
cltd
mov
fsubl
adc
lahf
jno
mov
xchg
sub
adc
add
sbb
dec
imull
inc
gs
pop
lods
test
adc
je
and
cmp
sub
inc
loopne
out
psllw
and
scas
sub
int3
dec
dec
lret
sbb
xchg
ljmp
inc
negb
lcall
fs
xor
mov
inc
jle
imul
lds
lods
xchg
sub
jmp
fwait
jmp
sti
cmpsb
fwait
or
or
cs
or
outsb
clc
lods
cld
and
ret
aaa
push
repz
and
ss
xor
aaa
pushf
divl
ret
out
fstps
sub
sbb
mov
divl
add
bound
cs
jnp
cmp
test
imul
pop
popa
mov
jne
adc
xchg
mov
jecxz
push
shlb
stc
popf
cld
pop
push
movl
daa
hlt
pop
push
rcl
and
leave
sub
in
ret
jmp
mov
insb
dec
mov
or
das
cmc
das
cs
lea
add
push
xor
mov
stos
add
cmp
movsb
sbb
adc
sub
push
stos
mov
sub
mov
xor
aam
or
add
jno
lcall
test
mov
repnz
or
sahf
loop
adc
push
inc
clc
pop
push
aaa
imull
pop
sub
insb
in
repnz
arpl
ljmp
int
inc
jbe
nop
sahf
mov
lods
stos
adc
cmpsl
sub
inc
pop
mov
dec
or
pop
loop
in
jl
dec
scas
ja
insl
fidivrl
jbe
lret
jle
in
ss
jp
enter
arpl
lret
out
enter
mov
mov
in
push
jae
and
cmp
repz
cs
inc
dec
loope
jmp
or
sbb
idiv
into
dec
test
mov
ljmp
sbb
push
fnstsw
shll
add
mov
push
xchg
jno
inc
icebp
push
into
lret
fcomps
out
ss
inc
dec
push
fidivl
push
jp
stc
and
shrb
shrl
stos
out
or
mov
insb
jle
inc
imul
rol
mov
pop
xor
adc
rcl
xor
ret
xchg
add
jae
add
ret
mov
pop
wbinvd
nop
mov
push
sbb
andb
ret
jmp
dec
test
sbb
es
cmp
dec
in
fs
push
jae
xor
cld
mov
cmp
jge
adc
xchg
data16
or
or
rcrb
ljmp
test
out
fstps
jbe
mov
es
shrb
pushf
add
xor
push
xchg
into
fdivs
add
lret
or
mov
mov
cltd
add
mov
out
repz
xor
js
mov
mov
leave
dec
leave
or
nop
cltd
jne
mov
cmp
fdivrs
les
dec
jmp
push
add
sub
test
repnz
out
mov
push
sarb
dec
xor
in
inc
stos
or
mov
lret
loope
add
push
push
mov
iret
mov
dec
out
adc
pushf
in
jmp
stos
or
dec
shlb
outsb
dec
cld
stos
push
movsb
add
sub
xchg
out
mov
sbb
leave
faddp
bound
sbb
orb
inc
mov
and
and
outsb
mov
pop
pop
sarl
adc
cli
sub
lret
mov
dec
mov
sbbl
xor
inc
sub
sub
dec
push
jecxz
in
out
cmpsl
mov
in
inc
mov
decl
push
addl
hlt
imul
gs
in
push
add
jg
repnz
les
xor
add
in
sarb
aam
mov
and
fcompl
stc
gs
inc
mov
mov
jge
loop
outsb
jmp
mov
sbb
rorl
sub
ret
fistpll
mov
cltd
mov
adc
stos
xor
and
xor
mov
jl
movb
mov
push
mull
dec
cmp
dec
xchg
rcrl
loop
adc
sbb
dec
aaa
cs
xchg
xchg
cli
adc
out
sti
mov
mov
xchg
cltd
mov
sbb
fisubs
cli
lods
inc
les
dec
jecxz
mov
push
adc
shlb
xor
testl
icebp
fsubp
adc
enter
lods
xchg
enter
ret
push
dec
mov
jmp
jle
cmpsb
push
pop
fsubrs
sub
pop
test
mov
and
repnz
inc
insl
jae
adc
scas
ret
mov
inc
inc
adc
xchg
rcrl
or
cmp
push
sar
mov
mov
fstl
xlat
gs
push
ljmp
pop
xchg
rcll
xchg
fcmovnbe
je
push
movsb
aam
dec
in
mov
push
lret
mov
cli
test
push
and
and
int3
testb
jbe
xchg
push
les
lea
jmp
mov
jns
sahf
outsl
sub
xchg
mov
mov
ljmp
pusha
and
xor
int
repz
add
pop
and
adc
jns
imul
mov
sbb
daa
add
loopne
inc
call
scas
les
adc
flds
dec
je
movsl
sbb
or
inc
lods
or
inc
jp
outsb
fnstenv
leave
mov
mov
test
addr16
in
xchg
mov
adc
popa
fistps
imul
lahf
mov
push
daa
dec
rcrl
shll
mov
jns
subb
mov
xchg
out
icebp
dec
clc
js
jns
scas
and
push
jp
xor
sbb
cli
loopne
pop
fwait
adc
mov
xor
data16
sbb
int3
adc
xor
movsl
cmpb
xor
stos
mov
ficoms
xchg
jnp
leave
les
jge
das
add
popf
leave
push
xchg
xor
push
mov
lds
pop
leave
mov
popf
stos
icebp
dec
ret
mov
gs
in
inc
stos
pop
jo
push
sub
push
push
mov
ljmp
jno
in
sbb
lock
mov
mov
pop
gs
insb
call
mov
adc
add
and
mov
or
pop
pop
das
in
jno
push
shl
jg
dec
xchg
fistl
loopne
push
push
pop
mov
inc
cmovl
add
pop
mov
dec
jnp
stos
sarb
sub
mov
decb
push
push
fdivs
mov
sti
call
jle
outsb
test
cwtl
dec
mov
pop
mov
cmp
sub
sbb
or
clc
cs
jle
outsb
test
cwtl
dec
mov
pop
mov
cmp
sub
sbb
or
clc
cs
jle
outsl
test
cwtl
dec
mov
pop
out
sub
sbb
or
clc
cs
jle
outsb
test
cwtl
into
mov
push
ret
mov
mov
ss
mov
push
sbb
add
xchg
cmp
sub
sbb
or
pop
mov
stos
push
fwait
push
sbb
or
cmp
sub
fidivrl
lret
sbb
or
jnp
imul
mov
mov
push
and
sub
mov
jg
or
ds
add
sub
dec
xor
push
hlt
jp
add
push
cmp
or
add
iret
popf
movsl
stc
and
mov
scas
mov
std
out
je
js
adc
frstor
aam
sbb
xchg
xchg
jecxz
mov
shll
cmp
fwait
sbb
mov
lret
fucomi
testb
xchg
ret
and
lahf
push
xchg
in
dec
stos
lds
mov
in
pop
adc
movsl
pop
inc
push
pop
push
divl
cmp
into
mov
jl
in
lret
fildll
xchg
inc
movsb
cmpsb
movsl
sub
xchg
jb
mov
lds
into
imul
or
outsb
fldcw
mov
push
sti
jb
cmp
mov
sbb
push
sub
subb
stos
and
aam
stos
push
repnz
jne
fs
xchg
sub
lahf
jae
dec
call
pop
iret
or
mov
or
jae
outsl
iret
lods
jg
mov
jp
fs
in
sarl
jmp
ss
sbb
cmp
dec
sti
or
cmp
sub
fidivrl
lret
sbb
or
pop
stos
dec
pop
mov
push
sbb
or
cmp
sub
fidivrl
lret
sbb
or
pop
stos
dec
pop
mov
stos
int3
aad
jne
ret
bound
pop
xchg
iret
in
out
movups
rorb
scas
movsl
mov
mov
add
repz
shrl
xchg
pop
test
ret
imul
ret
cli
and
mov
clc
push
lock
test
sbb
mov
mov
movsl
jl
outsb
dec
cwtl
jg
push
nop
jmp
cmp
stos
mov
addb
jo
stos
pop
lods
pop
fiaddl
mov
xchg
mov
dec
es
cmp
leave
xor
mov
dec
xchg
das
jb
dec
adc
fdivl
jae
cltd
jecxz
pop
add
fdivs
and
lret
inc
push
ret
sub
push
dec
out
cpuid
xor
sarl
sbb
mov
sub
pop
addr16
ds
and
jne
pop
mov
movsb
dec
xchg
sti
popa
jns
inc
mov
cmp
rorb
fisttpl
arpl
outsb
test
cmp
pop
loop
and
icebp
mov
mov
xchg
push
lock
adc
in
idivl
inc
filds
frstor
mov
inc
int
repnz
adc
add
xchg
rolb
fstps
cmp
or
adc
aaa
test
pop
stc
les
or
cmp
movsb
fwait
jb
loope
rcll
outsl
mov
mov
pop
cmpsl
cmp
out
gs
jnp
in
mov
repz
aas
xchg
clc
add
inc
fildl
jo
clc
mov
cltd
mov
jmp
xor
sub
shll
sbb
ljmp
fcoms
std
cli
orb
cmp
sbb
test
xchg
iret
pop
xlat
dec
inc
mov
push
jne
je
pop
adc
icebp
xlat
into
sub
int
sbbb
mov
add
clc
or
scas
pop
repnz
outsb
sub
lcall
rorb
push
pushf
xchg
ds
mov
out
jns
out
nop
in
aas
pop
sub
imul
test
inc
cmp
add
dec
out
adc
lods
add
aaa
and
or
mov
and
pusha
fcmovnu
xor
push
sub
out
cmp
dec
ljmp
stc
cld
mov
jp
or
shrl
cld
adc
adc
stc
sbb
inc
insl
and
sub
sti
pop
pop
int3
sahf
mov
mov
nop
out
cmp
lods
stc
movsl
ficoms
insb
mov
ja
push
mov
fdivs
inc
jnp
call
xchg
imul
pop
mov
in
inc
mov
orb
xlat
or
dec
movsl
add
mov
cmp
jmp
xor
and
lahf
sahf
or
push
push
fistpl
mov
xor
iret
xor
aam
in
in
loopnew
stos
xor
adc
mov
pop
mov
sbb
push
jecxz
lahf
sub
stc
cwtl
sub
jne
push
repnz
in
xchg
pop
jecxz
shll
jle
repz
cs
cmp
mov
ficomps
xor
xor
sbb
mov
out
sub
imul
daa
mov
icebp
movb
cld
pop
jmp
jb
mov
jmp
mov
fisubl
dec
or
les
mov
add
out
fdivrl
mov
mov
imul
ficoml
daa
cmpsb
in
insl
inc
push
sbb
add
popf
inc
icebp
dec
mov
addl
dec
orb
mulb
xor
lods
addr16
and
inc
and
mov
xor
mov
mov
pop
mov
iret
xchg
jo
mov
mov
push
jmp
std
dec
xchg
xor
fisubs
loopne
push
popl
push
enter
or
loop
mov
fs
mov
push
pusha
bound
pop
das
sbbb
shll
ja
loope
dec
shlb
rorb
jmp
xchg
push
shlb
lahf
lahf
pop
cmp
outsb
inc
aad
repnz
xlat
sub
mov
xor
jle
push
adc
stos
xor
data16
mov
inc
pop
in
mov
ret
inc
and
outsl
push
inc
push
pop
sti
pusha
vpxor
lock
rol
ja
lahf
popf
notl
jno
mov
imul
icebp
jecxz
sbb
jmp
xor
push
lret
lock
pop
cmp
lods
or
push
mov
push
roll
js
lcall
in
adc
mov
pop
inc
aam
loop
sahf
mov
mov
pop
cmp
dec
les
and
push
cltd
push
sub
sbb
rorl
mov
pop
cmpsb
stos
stos
test
scas
orb
or
in
pop
scas
cld
lret
and
mov
or
sub
and
push
out
movsb
in
add
sbb
mov
push
dec
aas
popa
out
xchg
stos
cmp
rorb
dec
out
adc
xchg
or
cltd
xchg
mov
mov
push
cli
nop
sahf
orb
rcrl
mov
stc
imul
inc
call
mov
push
inc
das
sub
outsb
enter
mov
mov
mov
lret
pop
test
lahf
repnz
push
roll
cmp
adc
enter
mov
lret
add
or
adc
cmpsb
mov
pusha
adc
mov
rolb
mov
enter
faddl
mov
rcl
jne
out
lahf
pop
inc
rclb
mul
popf
add
lret
dec
repz
push
inc
sbb
popf
jo
xor
dec
lcall
bound
jns
in
mov
mov
xchg
push
orl
lds
mov
in
out
imul
add
js
mov
or
iret
push
popa
push
ja
xchg
fisttpl
stos
jbe
rcrl
imul
rcll
sub
stos
mov
test
mov
mov
lock
dec
sub
out
cmc
mov
nop
xor
rcrl
lods
std
push
mov
mov
lods
stos
daa
arpl
mov
aas
xor
mov
mov
jmp
lock
rcll
mov
cmp
and
mov
iret
cmp
mov
adcb
imul
pop
cmp
je
pop
and
lret
pop
jmp
sbb
into
pop
inc
mov
pop
cmpsb
push
xor
adcb
xchg
in
popa
fsubr
rcrb
es
push
faddl
leave
lods
jnp
rolb
pop
adc
xchg
push
inc
xchg
rolb
sub
add
out
jecxz
pop
xchg
xorl
sbb
icebp
and
jecxz
and
pop
imul
push
mov
sti
push
adc
and
mov
mov
add
add
dec
imul
cmp
lret
cs
cmp
add
jns
lahf
jo
jae
adc
dec
xchg
mov
push
xchg
outsb
lods
sarl
in
adc
lahf
out
out
lods
aam
mov
sbb
mov
jp
imul
in
iret
mov
inc
pop
loop
cwtl
xchg
jp
push
dec
inc
cmpsl
in
mov
scas
and
sub
mov
mov
lret
ljmp
xchg
sub
cmpsl
cmp
test
iret
push
xchg
idiv
aam
xchg
mov
aam
push
sub
mov
or
loop
jo
mov
xor
mov
ss
mov
int
rcl
push
sub
cltd
mov
pop
or
xlat
xchg
cmp
lcall
aaa
xchg
jns
pop
push
rorb
popa
jl
mov
push
jg
lock
add
std
inc
inc
push
inc
test
test
imul
es
jp
mov
test
ljmp
cmp
sbb
dec
es
mov
push
push
rorl
das
cmp
loopne
inc
push
dec
cmp
mov
mov
jbe
add
std
pandn
js
dec
shl
push
lds
aas
xor
dec
cmp
mov
addb
mov
sbb
sbbl
inc
xor
dec
in
fbld
jns
lock
mov
dec
inc
xor
mov
cwtl
jp
and
shlb
lds
and
in
sbb
sub
jmp
mov
dec
ret
or
pop
mov
and
mov
inc
hlt
dec
gs
xchg
sti
dec
and
ret
jae
into
sub
xchg
or
inc
pop
imul
in
int3
in
ffreep
push
cmpsb
movsb
movsb
and
mov
icebp
adc
rorb
mov
adc
movsl
sub
sbbl
push
dec
fucomi
cmc
inc
fs
fiadds
je
stos
das
mov
cmp
sub
jle,pn
fistl
test
dec
xchg
cmp
sbb
ficompl
mov
adc
xor
arpl
jne
and
add
mov
repz
or
das
and
mov
push
inc
arpl
shrl
sbb
enter
stc
add
aas
packssdw
data16
sbb
clc
dec
fmuls
or
mov
or
nop
out
mov
cli
rol
fcompl
insl
sahf
ret
inc
adc
repnz
sti
stos
xlat
xlat
dec
push
arpl
fmul
stos
mov
jp
cmp
sub
push
cmpsb
mov
mov
sub
rorb
fmuls
js
movsl
mov
addl
enter
popf
dec
xlat
in
xor
lods
push
xchg
test
inc
ja
sbb
movl
cmc
cmp
push
adc
cwtl
sbb
cmpsl
push
push
push
or
or
aam
pop
fidivrl
mov
lcall
outsb
jecxz
test
js
and
pusha
int
inc
xchg
mov
insl
jne
jecxz
mov
jge
and
cs
cs
cmp
sub
in
jo
adc
lret
push
sub
sbb
lock
mov
dec
mov
rcll
cmpsl
dec
sti
dec
mov
push
lds
push
mov
xchg
jmp
pop
imul
cmpsb
adc
mov
repnz
add
repz
push
xor
xchg
fwait
ret
xchg
dec
dec
add
movsl
or
jle
cmpsb
add
xchg
loop
les
add
repnz
adc
stos
int3
jle
in
pop
movl
and
inc
jp
adc
add
cltd
xor
andb
mov
or
pop
xor
cmp
adc
arpl
xchg
inc
add
lods
pop
sub
sub
xchg
repnz
sbb
or
xlat
loop
jl
or
add
lods
inc
lahf
dec
outsl
jns
ss
and
push
pop
mov
popf
xchg
pusha
rcr
out
test
jns
xlat
ret
push
dec
in
imul
cmp
inc
imul
outsl
pop
icebp
insl
sub
lcall
fwait
ja
add
outsl
pop
rcll
xchg
inc
in
pop
cs
dec
add
mov
cmp
or
pop
imul
inc
jg
not
adc
rcll
push
je
leave
fcoms
loopne
rcrb
and
xchg
or
popf
inc
daa
andl
mov
ljmp
mov
call
aam
sbb
adc
les
das
push
jle
push
lock
cmpb
lds
cmp
std
lea
xchg
and
jns
ja
or
in
inc
imul
les
ror
or
mov
ljmp
rcr
cmpsb
cmp
mov
repnz
movsb
lods
hlt
xchg
daa
lcall
mov
xorl
add
pop
loop
sub
mov
jbe
xlat
push
in
mov
inc
cmp
jl
mov
mov
fildl
lret
or
sbb
stos
movsb
out
jecxz
call
fidivrl
jl
lods
jle
mov
pop
jno
mov
sub
popa
int
sysenter
dec
ss
push
cwtl
jmp
xchg
fscale
cmp
stos
sub
in
mov
cmp
add
sahf
nop
and
add
mov
cmc
mov
xorb
adc
mov
dec
jecxz
popa
push
xor
mov
jae
push
xlat
test
sbb
xchg
loope
aad
jmp
xor
mov
xchg
and
test
fcmove
push
in
mov
test
push
and
push
mov
sub
std
sti
adc
loope
xorl
aad
enter
ds
jno
stos
add
mov
xchg
out
movsb
jle
mov
xchg
xchg
pop
dec
push
ljmp
push
sub
pop
dec
or
loop
jno
roll
mov
aam
out
xor
dec
mov
in
dec
jb
scas
or
ss
sti
jl
sub
mov
punpckhwd
andb
insb
shl
repz
inc
xchg
in
cld
cmp
pop
lods
cmpsl
xchg
dec
loope
adc
mov
shlb
loope
arpl
push
in
push
test
and
sub
xor
xchg
mov
jns
ljmp
mov
iret
repz
gs
adc
inc
xchg
test
and
mov
lret
pop
dec
add
add
mov
sbb
fcoms
and
mov
enter
xor
fdivrs
adc
sbb
xchg
insb
xor
rcr
lods
add
adc
inc
push
shlb
jbe
daa
cmp
roll
std
lret
aas
es
jb
add
idivl
jns
cmp
imul
or
scas
jno
dec
lock
xlat
push
dec
das
adc
inc
sbb
loope
push
insb
pusha
ljmp
add
rep
xchg
jne
imul
psraw
jmp
pop
sbb
scas
addr16
ljmp
xorl
scas
sbb
sub
mov
sbb
mov
and
cmp
rolb
std
xchg
cld
and
cmc
stos
jmp
jmp
cwtl
jo
scas
mov
fidivs
sahf
std
inc
cs
repz
push
sub
inc
xor
mov
or
inc
mov
mov
inc
testl
shlb
aad
or
ret
ds
inc
rol
nop
call
push
sarl
insl
ret
jns
sub
push
cmp
in
outsb
mov
jmp
popf
or
push
xor
sub
mov
mov
arpl
jecxz
daa
lret
inc
sbb
pop
insb
jg
pop
lods
mov
daa
mov
pop
jl
jbe
cmp
mov
lahf
adc
dec
out
cli
movsb
cmc
rolb
and
outsl
flds
jle
mov
out
jbe
imul
out
cld
jns
xor
push
loop
sub
ss
xor
cmp
mov
pop
imul
popf
test
jnp
and
xchg
jle
dec
outsl
pop
fildl
in
push
dec
and
outsb
inc
ja
cld
lods
mov
pop
lret
cmp
aaa
rclb
and
pushf
cs
pop
xchg
icebp
xor
test
jl
js
es
xor
out
xchg
jne
outsl
add
mov
out
stos
mov
or
test
mov
mov
xor
push
fisttpll
jl
mov
sub
sbb
aam
adc
mov
mov
insb
sti
mov
sbb
or
cmp
dec
int3
outsb
out
dec
in
insl
mov
aad
add
or
out
test
inc
mov
fisubs
or
or
nop
adc
push
push
dec
imul
cmp
clc
push
test
les
inc
sbb
out
and
outsb
lea
test
inc
and
cs
xlat
and
outsb
push
loop
sbb
mov
stc
test
popa
movups
mov
adc
push
loopne
ret
sbbl
aas
testb
add
icebp
xchg
sub
insl
js
xchg
mov
fcmovb
mov
xchg
sahf
pop
jecxz
mov
jnp
jl
mov
mov
out
mov
icebp
inc
cmpsl
jp
dec
mov
addl
jecxz
jo
pop
daa
mov
pop
cmc
mov
jns
int3
ljmp
mov
and
lea
add
pop
out
pop
push
sub
dec
int3
mov
aad
pushf
repz
dec
or
in
mov
idivl
add
pop
mov
dec
test
or
sarb
aad
and
lea
inc
out
leave
out
sub
jb
fdivrs
sbb
call
int3
iret
jns
test
ret
sbb
addb
sbb
mov
inc
mov
fbstp
fwait
sbb
cmp
pusha
push
pop
lods
sbb
pop
lahf
cltd
test
or
stos
scas
mov
fs
or
popa
mov
int
sbb
cli
imul
dec
in
jmp
repz
add
enter
and
adc
shll
arpl
arpl
fwait
movsl
stos
add
in
lret
add
mov
stc
sbb
lods
test
adc
push
mov
sub
popf
pop
xor
pop
push
fisubl
dec
cmp
addl
and
int
mov
mov
push
xchg
dec
xor
mov
sbb
jns
fprem
xchg
ja
pop
push
pop
and
in
lea
imul
aas
sub
and
sbbl
pop
sub
push
adc
sub
sbb
xchg
sub
nop
mov
outsb
lea
cmp
inc
ret
xor
push
cmpsb
imul
or
arpl
jge
rcrb
daa
pop
mov
lods
sub
xchg
nop
roll
push
mov
sbbl
inc
push
je
sub
sub
inc
mov
push
dec
jnp
int
call
das
mov
inc
pop
mov
into
pushf
dec
aad
xor
add
shrl
mov
push
mov
aad
popf
inc
cmp
leave
mov
insb
sarl
dec
pop
js
jl
mov
ficomps
data16
repnz
cmp
fnsave
divl
in
dec
out
mov
or
push
das
sarb
pop
xchg
iret
xor
sbb
mov
ds
sbbl
fildll
das
lcall
in
mov
outsl
imul
mov
pop
imul
mov
and
sti
or
dec
mov
dec
pushf
test
lods
xchg
stos
scas
sub
pushf
xchg
adc
aas
mov
int
imul
xchg
xor
xchg
popa
pop
das
arpl
xor
pushf
jl
xor
aaa
push
xchg
and
test
orb
ja
xchg
shll
pusha
dec
aas
xor
and
popf
scas
xchg
popa
std
or
jecxz
pusha
cwtl
fucomp
adc
addr16
andb
dec
mov
pusha
js
shlb
mov
pushl
lret
mov
cmp
mov
pop
je
ja
push
or
lock
lcall
and
add
movsb
data16
adc
aaa
std
jmp
icebp
int
pop
aas
xchg
add
jge
bound
data16
fs
loopne
lcall
sub
je
mov
std
push
jb
into
sub
sbb
cmpb
jge
add
push
cmp
pop
dec
cmpsl
jmp
sub
dec
sbbb
mov
shl
bswap
std
sub
fistpll
out
adc
mov
or
imul
and
ljmp
dec
ja
and
pop
or
popf
shl
push
add
stc
test
jne
xchg
push
xor
dec
testl
cmc
fidivrl
and
lods
jle
outsl
pop
push
fnsave
or
ljmp
scas
or
mov
or
lret
xor
adc
xor
lret
or
jo
cwtl
xlat
fildll
sub
aad
cwtl
fnstenv
nop
dec
scas
mov
lcall
bound
mov
shll
imul
push
outsl
scas
hlt
cwtl
nop
mov
jne
cmpsl
scas
xchg
outsl
mov
gs
fldt
mov
jb
imul
xor
mov
test
scas
icebp
sbb
sbb
cmp
jecxz
shrl
fwait
adc
xor
or
int3
mov
cmp
jo
roll
fs
xchg
pushf
pop
adc
mov
ss
mov
hlt
inc
inc
test
mov
fidivl
xor
mov
stos
jle
mov
mov
dec
mov
lcall
idiv
pop
xchg
mov
mov
stos
out
dec
mov
adcb
and
fwait
mov
add
inc
jns
mov
sub
dec
fptan
hlt
sub
pop
push
mov
pop
or
pop
sbbb
mov
sbb
jb
lods
aaa
sahf
or
push
cmp
jne
push
inc
and
ja
test
loopne
sub
mov
pop
fs
and
mov
bound
sbb
pop
pop
mov
and
lds
push
jns
cmp
ss
xchg
aaa
aas
dec
inc
js
fistl
xchg
movsb
lods
les
inc
js
lret
dec
mov
pop
daa
pop
arpl
clc
pop
hlt
gs
scas
movaps
pop
dec
push
dec
push
mov
jnp
cmp
push
bound
fs
fiaddl
adc
xchg
or
outsl
and
xor
leave
xor
mov
fwait
push
ret
hlt
xor
xor
sbb
daa
in
mov
fwait
pop
jl
mov
stos
sbb
jb
arpl
mov
xchg
pop
dec
scas
fidivrl
xor
lock
inc
push
pop
mov
test
inc
sub
inc
outsb
adc
js
mov
mov
push
add
push
int
fwait
add
inc
xor
push
in
mov
les
xlat
arpl
pushf
pop
sahf
aas
loopne
jbe
int
push
testl
pusha
jno
or
pop
mov
sub
push
mov
je
out
movsl
fdiv
sbb
jae
popf
imul
lahf
mov
into
xchg
loope
imul
push
xchg
push
lock
in
fcomps
pop
dec
and
outsl
sahf
mov
dec
mov
xchg
and
pushf
imul
inc
adc
push
sub
sub
dec
call
jl
mov
sbb
push
pop
cld
cmovp
mov
inc
ror
adc
xor
or
pushf
in
fiadds
xor
push
mov
in
inc
and
cmp
stos
daa
pop
sub
pop
fwait
adc
push
shll
push
js
out
cld
lcall
pusha
imul
out
mov
aam
test
cmc
fiadds
into
ds
push
sbb
pusha
cmp
mov
popa
or
push
repnz
sarb
push
cmc
sbb
push
xor
pop
adc
mov
sub
pop
es
out
stos
ljmp
xor
add
xlat
pop
dec
mov
cmc
mov
cmp
adc
pop
add
std
mov
dec
push
lods
mov
jo
popf
cmc
cmp
aaa
nop
cmp
cmp
inc
lds
xchg
or
ja
aam
add
movsb
sub
xchg
inc
daa
stos
jmp
mov
sub
test
xor
dec
movb
dec
xchg
xchg
push
fwait
ret
mov
das
jmp
or
mov
mov
xchg
jg
xlat
sbb
inc
leave
jmp
mov
adc
fsub
leave
jmp
lock
mov
iret
stos
xor
les
push
enter
and
cwtl
or
or
movsb
mov
xchg
and
xchg
push
pop
shrb
xchg
adc
int
dec
push
lahf
cwtl
push
ds
stos
pop
pop
insb
pop
hlt
or
jne
out
test
inc
xchg
mov
dec
and
xor
dec
mov
xchg
sbb
ret
scas
inc
fisubs
mov
outsb
bound
or
or
pop
shlb
jl
jp
mov
push
bound
fidivl
stos
or
xor
or
jl
cmp
mov
add
pop
pop
pop
ret
repnz
dec
sbb
pop
addr16
sti
cwtl
xchg
test
adc
rcrb
fidivs
and
mov
adc
mov
pusha
sahf
mov
xor
inc
outsb
xchg
push
je
inc
dec
lods
lahf
jbe
cltd
repnz
daa
sbb
adc
movsb
gs
test
cmc
cmp
movsb
shrl
divps
pop
sbb
xchg
cltd
push
or
sub
in
pop
adc
jmp
inc
loop
mov
rcrb
sub
cmp
into
ljmp
mov
push
add
es
cltd
xchg
mov
adc
push
jle
movsl
loope
mov
outsb
ret
fcmovnbe
add
loop
sbb
pop
sub
and
ja
cmp
pusha
adc
sbb
ljmp
jmp
mov
add
mov
mov
test
xor
push
popa
aas
in
fistpll
test
xor
sbb
shll
mov
mov
add
cld
gs
sarl
add
mov
xor
stc
int3
jmp
adcb
in
mov
pushf
inc
movsl
fdivrl
cmpsb
sbbl
test
mov
add
inc
jmp
insb
repnz
jecxz
pop
cmp
sahf
in
mov
inc
test
adc
ficomps
std
imul
push
stos
inc
loope
aad
loopne
cmp
xchg
lret
xor
lods
xchg
pop
inc
addb
inc
in
rcrb
mov
dec
push
hlt
dec
sbb
shll
js
cs
jnp
mov
stos
cmp
sti
or
cmp
sub
fidivrl
lret
sbb
or
pop
stos
dec
pop
mov
push
sbb
or
cmp
sub
fidivrl
lret
sbb
or
pop
stos
dec
pop
mov
push
mov
or
fucomi
lret
fidivrl
ljmp
pop
inc
dec
dec
mov
dec
mov
sti
sbb
cmp
stos
lret
fidivrl
xor
jl
repz
int3
int3
int3
xlat
ja
and
ja
mov
xor
rcl
call
xchg
mov
inc
jae
arpl
ja
pop
xor
and
adc
sub
xchg
test
cmpsl
xchg
mov
inc
aad
movsl
addr16
ja
pop
add
imul
aaa
xor
repz
rolb
inc
xchg
fsub
aaa
aaa
push
and
add
mov
fcmovu
nop
add
inc
js
sbb
xchg
cmpsb
sub
insb
cmp
adc
mov
push
sbb
mov
sub
mov
cmpsb
push
into
ret
cmp
push
mov
fistps
pop
repnz
mov
or
and
repnz
xorb
inc
push
fwait
inc
pop
daa
cmp
shll
mov
jbe
add
sub
ret
les
mov
mov
sahf
xor
bound
shlb
scas
shlb
xor
fcos
mov
rorb
mov
in
es
out
fbld
add
mov
jp
repz
out
jg
jmp
addr16
ja
pop
xor
and
adc
xchg
repz
dec
out
idiv
xchg
mov
xor
or
aas
cmp
inc
xchg
jb
pusha
push
inc
scas
mov
xchg
mov
mov
lret
ljmp
aas
das
bound
jno
jp
xor
adcl
lock
jns
add
push
das
inc
jg
and
adc
add
repz
jecxz
shl
ret
xchg
mov
inc
jae
arpl
ja
pop
xor
and
adc
add
repz
jecxz
shl
ret
xchg
mov
inc
jae
xor
je
arpl
sahf
shl
jb
inc
xorb
orl
dec
fdivr
mov
sub
lods
outsl
hlt
or
push
out
outsb
or
add
xchg
hlt
xchg
leave
bound
data16
push
or
mov
lods
mov
pusha
push
insb
loopne
cld
lret
sahf
mov
cmp
mov
push
xor
push
test
rclb
fdivrs
pop
lcall
push
orb
dec
xlat
and
jns
sub
xor
sbb
mov
aaa
fcoms
xor
in
lea
push
aam
lock
je
adc
stos
mov
mov
or
fldenv
iret
adc
mov
out
mov
cld
out
jg
push
jge
push
or
mov
dec
mov
mov
lds
and
enter
add
shl
inc
data16
pop
xlat
aad
sti
jno
and
dec
xor
and
cmpsl
int3
push
bnd
and
jg
in
xor
ss
lcall
js
push
xor
loop
ficoms
dec
mov
xchg
stos
mov
or
pop
leave
dec
rolb
xlat
mov
mov
pop
jnp
imul
mov
xor
sub
cmp
pop
xchg
test
iret
dec
into
dec
sub
icebp
cmpsl
outsb
data16
jp
out
aaa
int
jecxz
fs
push
xor
iret
and
jg
mov
mov
lcall
fisubrs
jae
sub
dec
icebp
inc
adc
frndint
add
leave
lock
lods
xor
cli
test
mov
arpl
stos
jnp
out
sub
or
or
movsb
sahf
dec
jl
mov
les
inc
jae
pop
fisttps
mov
jecxz
aad
add
ficoml
xor
xchg
inc
sbb
jmp
cmp
lcall
test
xchg
loop
push
dec
sub
mov
cli
xchg
mov
mov
dec
add
out
outsl
xor
jl
sub
rcrl
push
xchg
sub
lahf
adc
inc
mov
sub
test
aam
ret
cltd
mov
adc
jns
mov
fwait
mov
xchg
push
mov
fbld
shll
xor
in
cmp
out
in
mov
ret
out
movl
or
or
push
or
and
jp
push
lods
mov
mov
mov
fwait
mov
das
add
adc
adcb
xor
test
sbb
addr16
or
sub
jl
pop
flds
imul
inc
cmc
inc
xchg
lea
jecxz
enter
mov
push
jne
inc
mov
inc
mov
pop
mov
lahf
xor
mov
xchg
rcr
outsl
xor
mov
aaa
xor
repz
stos
inc
loope
nop
imul
xchg
mov
add
fiadds
aas
and
and
pop
aam
jg
lea
mov
pop
pop
sti
and
jnp
scas
stc
push
out
add
dec
shl
cmpsb
fwait
xor
lsl
mov
add
push
mov
fbld
nop
or
adc
inc
dec
fcomip
aas
pop
jg
imul
xchg
push
inc
lret
mov
stos
and
imul
out
adc
mov
jb
jae
cmc
icebp
addb
aam
mov
sub
xor
cmpsb
inc
lods
push
sbb
es
inc
pop
sbb
jmp
aad
outsl
fsubrs
sbb
dec
test
cmc
and
jo
loopne
push
leave
or
sar
ss
lods
push
pop
fwait
mov
xor
in
add
pop
mov
pop
out
add
jo
pop
movsb
ja
rorl
pop
pushf
xlat
jle
orb
test
sub
aas
js
les
stos
outsl
jb
aam
cmp
movl
push
pop
test
inc
out
xchg
test
aas
or
dec
xchg
push
add
mov
jmp
mov
adc
lret
insl
push
icebp
movsl
loopne
clc
je
mov
mov
jae
fnstenv
xlat
push
shl
sub
inc
sub
movsl
xor
sbb
sbb
lret
popa
push
push
negl
push
lret
xchg
sti
mov
loop
mov
pop
test
add
loopne
loope
and
inc
ljmp
or
mov
adc
jno
sub
in
mov
cmp
idivl
stc
mov
lods
add
adc
ret
mov
rcr
mov
jae
ds
out
gs
push
icebp
pop
sahf
shrl
jl
dec
out
sti
adc
jp
sahf
sbb
and
icebp
xor
decb
dec
and
pop
push
mov
test
inc
ljmp
and
xor
mov
inc
cld
lret
into
pop
out
push
popf
mov
or
cmp
xor
cltd
xchg
dec
jp
mov
mov
mov
test
cmp
enter
outsl
jle
testb
dec
mov
pop
pop
sub
push
in
mov
movsl
dec
cmp
or
fsubrs
data16
lea
jp
in
mov
adc
shrl
test
push
add
mov
pop
sbb
insb
adc
mov
push
ljmp
push
xchg
jg
pop
xchg
sub
mov
jbe
sub
cmpsb
pop
pop
scas
mov
repz
es
scas
sahf
dec
pop
loopne
out
add
and
aas
lock
inc
rcl
es
jbe
inc
sub
add
cwtl
mov
inc
daa
mov
mov
push
popa
inc
arpl
mov
jle
mov
lock
jl
adc
sub
push
cmp
jne
imul
or
fucom
repz
std
outsb
pushf
popa
in
and
icebp
jbe
mov
xchg
shrb
scas
adc
stc
outsb
mov
adc
mov
jbe
fldenv
mov
dec
frstor
mov
pop
bnd
ja
push
mov
aaa
aas
lcall
cld
sub
cmpsl
mov
imul
xor
xchg
mov
sub
sbb
or
sub
cmp
and
aaa
fistps
mov
pushf
or
cmpsl
std
mov
popf
cmp
mov
pop
mov
test
cmc
in
and
xchg
cmp
or
dec
cli
sbb
ss
lock
jne
int3
sarl
je
sarl
scas
adc
xchg
cmp
mov
push
lahf
xchg
fbstp
pop
cltd
sub
xlat
jp
jns
push
cmc
or
mov
inc
ss
arpl
pop
adc
xor
mov
mov
das
xor
mov
push
in
in
out
lock
sar
jns
sub
test
fcoml
inc
mov
dec
sub
mov
popa
std
sub
ja
out
sbb
insl
or
mov
sbb
data16
mov
aaa
pop
ret
jns
das
mov
xchg
hlt
pop
leave
sbb
imul
es
and
xor
fwait
sub
adc
dec
push
outsb
mov
mov
loope
stos
pop
fistps
rorl
in
fdivrl
or
in
repz
add
cld
xor
fs
and
and
outsl
adc
dec
or
push
pop
push
jae
mov
pop
xor
push
add
ret
std
adc
push
mov
ret
push
mov
sti
push
in
sbb
and
add
testl
imul
shr
cmp
stos
es
xlat
sar
mov
cmp
or
call
dec
mov
in
cmp
and
sbb
test
testl
push
mov
sbb
dec
mov
sub
cmp
add
fdivl
jbe
stos
aaa
push
mov
mov
pop
jbe
mov
cmpsb
or
movsl
sbb
repz
icebp
in
pop
cld
pop
pop
lock
sbb
xlat
cmp
jp
and
or
xlat
mov
das
std
push
xor
mov
jbe
mov
adc
lods
xor
mov
cmp
jl
fsts
mov
dec
lret
fs
loop
test
mov
int
test
test
xor
jmp
xor
and
lods
ret
cmp
mov
mov
lret
push
ss
push
pop
xor
and
xchg
sub
sbb
cmp
aam
or
imul
pop
dec
clc
mov
push
test
stos
dec
into
fcompl
in
nop
testl
cmpl
adc
mov
lahf
lds
add
idivb
out
data16
loop
pop
adc
push
dec
mov
scas
insl
movsb
loopne
jne
adc
xor
xor
scas
add
bound
mov
ds
mov
jmp
vmovaps
add
push
push
push
call
mov
test
add
and
andl
sar
inc
aaa
jg
dec
aas
cmpb
es
or
fisubrs
push
sub
ss
cld
stos
iret
popa
xor
add
ret
jne
imul
jmp
adc
cmp
shl
bound
rcrl
fisubs
sti
les
ror
sub
shl
xchg
lods
sub
sub
fcmove
xlat
loope
stos
enter
je
cwtl
mov
pushf
repz
out
xor
sahf
jns
pushf
aam
pop
sbb
cmp
sbb
in
xlat
inc
push
jmp
mov
ror
cli
rol
bound
add
inc
shll
aam
fsubrp
jbe
or
scas
fs
into
jnp
ret
ret
aaa
jp
push
pop
inc
dec
xchg
add
mov
imull
add
dec
adc
and
stc
bound
sbb
xor
loope
fwait
xor
fbld
push
pusha
sbb
mov
in
sub
cmp
inc
pop
sub
cmp
jns
cli
popf
sbb
rclb
insb
stc
push
lds
rclb
jg
fisubrs
dec
push
int
into
adc
cli
jnp
push
inc
pop
inc
or
repnz
jmp
pushf
mov
add
lds
in
fsubs
inc
repz
dec
popa
dec
sub
hlt
mov
out
lods
push
aad
cmc
pop
dec
out
loop
xchg
mov
lret
dec
jle
mov
popa
pop
adc
sbb
cs
mov
loope
pop
andl
jmp
mov
jo
fs
stc
gs
jo
lret
out
jmp
cmpsb
lock
sahf
andl
rcl
cmp
xchg
insb
out
xor
cmpl
xchg
sub
enter
js
sub
ljmp
jge
lds
js
sub
ljmp
lret
roll
imul
pop
lods
cltd
sti
mov
stos
xchg
adc
lods
xchg
sbb
xchg
aad
je
fwait
mov
sbb
fsubrs
and
loopne
mov
jo
call
push
cmove
add
sub
call
movsb
fcmovnbe
mov
sahf
xchg
jl
push
xchg
int3
rorl
roll
mov
int
dec
cmp
arpl
outsb
add
inc
imul
mov
jns
test
xchg
mov
pop
out
shlb
popa
dec
testb
adc
repnz
scas
imull
push
inc
stc
mov
scas
imul
adc
dec
int3
xor
pushf
mov
or
imull
inc
movsb
cltd
out
fcoml
mov
inc
xchg
popa
pop
dec
incl
pushf
mov
add
mov
and
cmp
mov
imul
leave
dec
push
insb
ds
cmp
sub
add
inc
jecxz
mov
in
and
movsb
out
imul
or
sub
or
outsb
adc
sub
cmc
xchg
cmpsl
fmull
cmp
repnz
dec
loopne
ret
cmpsl
mov
mov
cwtl
gs
ja
sarb
inc
ret
je
mov
sbb
movlps
cmpsb
or
and
jge
jecxz
push
scas
sub
sub
ficomps
icebp
out
mov
dec
mov
sbb
fisttps
pop
cmpsl
repz
stos
push
pop
mov
dec
lods
ds
xor
add
push
sbb
ljmp
mov
test
inc
push
dec
test
or
addb
inc
dec
loopne
mov
and
pop
jb
rcrb
enter
int3
push
mov
cld
inc
pusha
sahf
xor
insl
clc
sti
popf
mov
or
xchg
mov
mov
add
xchg
cli
les
call
xchg
cmpsl
xchg
add
dec
lret
sub
push
jge
adc
add
mov
fisubs
adc
xorl
ret
inc
lret
mov
push
sub
xor
daa
jecxz
and
mov
mov
push
lods
push
dec
mov
and
aas
clc
mov
fcmovnu
jbe
sbb
cmpb
sbb
int
jecxz
sti
add
pop
adc
nop
jmp
and
mov
mov
inc
mov
dec
and
inc
cwtl
xor
xchg
cmp
jae
sbb
out
jp
out
xorl
sub
and
in
sbb
mov
pop
gs
lret
mov
or
xlat
aas
in
dec
lret
xor
testl
pop
xor
adc
push
mov
daa
mov
bound
cmp
xor
fisubrl
jae
pushf
mov
xchg
push
xchg
pop
xchg
loopne
inc
subb
dec
or
jecxz
kmovq
aaa
or
in
inc
add
mov
xchg
add
sahf
sub
ficomps
inc
adc
jne
xor
sub
sbb
test
popf
xor
lcall
jb
rolb
es
dec
xchg
enter
pusha
xor
add
inc
test
adc
lods
xchg
mov
jmp
test
xlat
pop
outsl
jns
movsb
sarb
cmp
adc
ljmp
insl
pop
xchg
mov
mov
sub
push
shl
push
push
lcall
outsl
mov
nop
xchg
pop
jbe
adc
pop
dec
ljmp
push
sub
push
and
cmp
sbb
fcomi
jo
mov
iret
mov
arpl
stos
aas
push
or
leave
mov
fld1
mov
lods
mov
xchg
and
inc
sti
xchg
or
call
dec
dec
mov
xchg
push
ret
mov
sbb
add
dec
data16
mov
mov
out
scas
xchg
xchg
add
gs
mov
out
mov
dec
out
out
mov
cmc
sarl
adc
js
add
arpl
push
or
leave
xor
pop
cmp
cmp
and
mov
idiv
and
inc
sbb
push
scas
stos
dec
mov
xchg
xor
ljmp
pop
insl
jo
cld
aam
mov
loop
sbbb
fldl
or
flds
dec
pop
subl
clc
adc
icebp
jge
sub
cltd
xor
xor
mov
addr16
pop
movsl
fsubs
out
push
dec
add
fisttpl
sub
and
aaa
and
mov
movsb
inc
pop
xor
sbb
sbb
or
fldln2
insb
lret
leave
or
xor
jg
outsb
cld
ret
lcall
lret
movsb
addr16
inc
lea
sub
int
inc
jle
pop
outsb
test
pop
cltd
lods
call
popf
in
ret
lret
jbe
dec
and
clc
add
dec
dec
sbb
lock
jg
aas
pop
fidivrs
add
pop
fwait
icebp
les
pop
out
testb
loope
lret
icebp
sbb
ficoml
mov
shrl
xor
lods
movntq
xor
xchg
sub
je
jmp
cmp
pushl
stos
pop
xor
xchg
xchg
pop
and
std
sbb
negl
scas
ret
mov
pop
push
pushf
fsubrs
dec
xor
sbb
iret
insl
push
push
dec
mov
cmpl
mov
dec
push
and
loop
sub
xor
mov
xor
imul
jmp
cmp
clc
cs
loop
pusha
jns
int3
push
mov
mov
iret
xchg
push
dec
add
hlt
sbbb
cli
sub
push
mov
enter
mov
push
fcompl
add
outsl
aaa
dec
xor
fisubs
fstl
faddl
insb
and
mov
lcall
push
ret
xchg
push
pop
ss
mov
in
in
push
sbb
int3
sub
xchg
cli
pop
push
in
sbb
mov
xor
jnp
enter
pop
ljmp
pop
cltd
out
inc
inc
repnz
and
je
cmp
bnd
jg
add
sbb
adc
jecxz
sti
jbe
sbb
inc
lock
movsb
push
add
fisubrs
or
sbb
jle
je
adc
stos
mov
and
pop
sbb
sti
movsb
scas
cwtl
imull
sub
jns
push
dec
test
sbb
data16
testb
xor
or
and
imul
ret
pop
aas
xchg
pop
shrl
sarb
out
arpl
test
add
movsb
fcomip
add
jbe
jmp
mov
pop
bound
fs
mov
sub
rcrb
in
fidivrl
aam
fsub
shll
shr
jg,pt
in
sub
roll
adc
fnstsw
into
enter
es
repz
push
pop
lret
mov
adc
jmp
les
int3
mov
pop
adc
adc
cmpsl
fisttps
lds
xchg
and
mov
or
jnp
mov
cmp
mov
adc
popa
dec
out
icebp
je
ss
or
and
mov
xlat
popa
stc
mov
pop
arpl
mov
insl
cltd
sub
push
aam
in
fs
push
stc
icebp
out
out
dec
int
jbe
es
mov
jp
repnz
lahf
pushf
sbb
aam
jmpw
insl
fmull
cmpsb
cmp
cld
xchg
int3
cs
cmc
and
and
clc
aad
xchg
add
sarb
jg
and
push
pushf
sbb
push
lret
adc
aad
test
jne
mov
mov
adc
cmpsb
and
push
pop
mov
xchg
gs
xchg
inc
and
xchg
mov
in
repnz
sbb
dec
sub
jne
pop
inc
cmp
pop
mov
inc
lock
insl
pushw
lret
adc
loope
enter
pop
imul
enter
push
cld
pop
dec
dec
sbb
sarl
pop
or
xorl
iret
aam
push
mov
jge
xor
pop
cmpsl
sbb
mov
imul
lods
icebp
lret
das
and
cltd
dec
popa
jnp
and
jle
sarl
mov
adc
adc
dec
daa
mov
add
js
mov
lahf
lds
test
loope
inc
jecxz
movsl
xchg
pop
and
xchg
pop
sub
cwtl
roll
cmp
ja
rcrl
mov
int
cmpsb
test
cmc
in
or
jno
pop
addl
outsb
mov
inc
cld
iret
push
inc
je
sub
add
test
in
jb
stos
xchg
add
test
xchg
sub
imul
add
jne
jp
ffree
fstpt
iret
sub
push
sub
jno
out
jb
pop
loope
dec
loop
push
dec
daa
adc
js
xchg
or
mov
mov
mov
stos
movsl
pop
push
dec
test
cwtl
xchg
sbb
aaa
cmp
lds
sti
xor
inc
and
cmp
cmp
imul
es
adc
xchg
ds
into
jns
jnp
outsl
cmp
and
xchg
push
push
aad
mov
lods
add
aam
push
pop
xlat
xor
mov
sub
in
or
clc
lods
jecxz
xor
add
shl
and
str
inc
pop
fbstp
repnz
out
xchg
mov
cmpsl
je
popf
into
movsb
and
mov
outsb
sub
in
sbb
and
loope
lea
popa
les
cltd
dec
outsl
shl
mov
push
pop
fldt
fucomip
pop
dec
adc
sti
jb
jecxz
xchg
aas
es
mov
cmp
scas
sarl
and
ret
out
pop
stc
dec
mov
out
jle
mov
in
mov
popa
cli
dec
call
cwtl
frstor
mov
fimuls
aas
adc
xchg
outsl
adc
jge
mov
rcl
xor
ss
pushf
mov
sbb
add
shld
rcr
xor
mov
jg
xorb
test
leave
adc
out
lds
jp
jbe
outsl
cmpsl
or
shll
aad
dec
or
and
mov
jecxz
and
mov
aaa
stos
mov
and
push
cmpsb
loop
js
scas
pop
add
and
outsl
sub
stos
push
stc
sbb
shlb
jb
and
sbb
icebp
sub
sarb
sbb
or
push
dec
subb
out
in
jp
leave
in
inc
out
lods
movsb
es
xor
aas
call
mov
adc
push
ret
insb
mov
cltd
jo
sub
add
mov
push
pop
out
mov
imul
mov
mov
xchg
into
test
sbb
ja
je
ror
fadd
mov
test
ss
adc
lods
add
jg
xor
or
and
push
sahf
pop
fs
and
or
ds
adc
scas
scas
subb
sti
rcrb
jle
pop
test
scas
imul
fwait
xchg
and
imul
sub
lahf
xchg
mov
fwait
cltd
in
push
shrl
enter
pop
mov
jbe
sub
cmpb
dec
and
adc
dec
mov
stos
inc
nop
xlat
shl
mov
jmp
mov
pop
int3
cld
jns
push
pop
fdiv
mov
pop
cmpl
mov
out
lods
and
hlt
aad
xor
mov
push
xor
add
daa
push
fldt
push
mov
mov
lahf
loope
lods
mov
push
ds
xchg
in
mov
and
lcall
jg
push
iret
pop
add
test
mov
mull
mov
insb
je
mov
subb
faddp
popf
add
inc
inc
dec
push
jle
pop
or
jo
jmp
mov
test
jp
or
mov
mov
push
inc
inc
shl
lret
pop
int
add
jbe
mov
rcr
jle
sbb
cwtl
stc
rcrb
jmp
stc
shll
inc
adc
adc
orb
arpl
sub
jne
mov
xor
push
xlat
ret
adc
cmpsb
add
mov
mov
in
inc
adc
ret
sub
cmp
inc
jae
test
rcr
mov
inc
push
sbb
jae
push
sbb
mov
inc
fisttps
push
adcb
xchg
adc
lcall
pop
xchg
hlt
dec
adc
adc
into
adc
mov
out
ror
fxch
mov
sbb
pop
cmp
lret
imul
scas
mov
add
ret
cmp
hlt
push
fidivl
sub
adc
mov
jae
out
std
imul
in
aam
ja
or
mov
jno
jecxz
and
int3
or
movsb
pushf
cmpsb
sub
cmp
lea
out
imul
pop
test
mov
outsb
mov
xchg
cwtl
movsl
fidivl
dec
and
xchg
in
cmp
push
js
inc
jmp
insb
shlb
sar
pop
xchg
pop
test
scas
and
mov
xchg
outsb
lds
sub
lcall
leave
iret
push
mov
iret
test
insl
push
xchg
ss
inc
mov
or
pop
fiaddl
dec
pop
adc
push
push
xchg
fildl
mov
popf
loopne
inc
jnp
push
or
scas
mov
in
sub
outsl
inc
dec
es
popf
std
les
arpl
loopne
add
int3
xchg
hlt
dec
adc
dec
hlt
fisttpl
pop
pop
jb
jo
mov
jmp
lock
inc
push
aad
rolb
pop
sbb
xchg
pop
mov
sar
adcb
hlt
aas
scas
cmp
push
mov
jo
addr16
mov
pop
imul
cmp
cld
mov
out
xchg
jnp
jmp
in
pop
pop
cmp
lret
jle
lods
mov
hlt
enter
or
jmp
lcall
inc
leave
pusha
lcall
fidivs
in
rorl
jmp
sub
push
mov
ljmp
and
xchg
data16
enter
mov
out
push
sbb
dec
call
jle
and
clc
push
mov
faddp
cld
fcmovb
ljmp
push
dec
enter
les
cmpl
dec
adc
xor
in
mov
mov
inc
mov
mov
cwtl
aad
jp
or
addb
push
addb
std
jl
aas
mov
inc
lahf
repz
xor
in
cmpsl
push
idivb
movsl
xor
inc
es
aam
rcl
jne
dec
and
inc
ds
aam
cmp
addl
cmp
inc
push
push
or
sub
clc
nop
insb
push
cwtl
xor
js
jg
sub
pop
push
rcr
mov
pop
test
and
lahf
sarl
shlb
mov
in
xor
out
aaa
inc
jl
popa
mov
dec
xlat
cs
enter
clc
dec
jb
cmp
pop
adc
outsb
jge
int3
in
mov
xchg
jo
int3
jno
jecxz
adc
inc
add
cs
loop
fcmovu
mov
jb
xor
add
xor
aad
cmp
insb
or
mov
lcall
leave
lcall
adc
imulb
jmp
repz
arpl
ja
pop
xor
and
adc
add
repz
jecxz
shl
ret
xchg
mov
inc
jae
arpl
ja
pop
xor
and
adc
add
repz
jecxz
shl
ret
xchg
mov
inc
ja
insl
addr16
ja
pop
xor
dec
daa
pop
aaa
add
repnz
out
shl
lret
xchg
mov
inc
xchg
push
xchg
ja
pop
xor
and
xchg
aaa
ret
or
dec
dec
shl
mov
lret
pop
fistpl
dec
sti
int3
int3
int3
int3
push
mov
mov
mov
mov
push
add
push
mov
pop
mov
movb
add
mov
mov
mov
movzbl
movzbl
sub
je
push
push
pushl
push
call
push
push
push
push
mov
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
ret
mov
inc
aad
mov
outsl
cli
push
and
jne
inc
shlb
and
xchg
jbe
inc
aad
movsl
es
test
xchg
bound
jne
and
cmpsl
and
xchg
outsl
fstpl
dec
mov
push
orb
and
jbe
jl
xchg
sub
push
mov
mov
divl
cmp
mov
push
pop
leave
cmp
in
js
lds
push
bound
lds
pop
jmp
mov
call
push
jne
or
lods
mov
xchg
xor
mov
fiaddl
jo
scas
xchg
shll
mov
mov
xchg
push
push
sbb
pop
mov
jns
xchg
mov
jne
xchg
push
test
sbb
outsl
movsb
xor
adc
mov
ds
gs
mov
pushf
mov
mov
nop
and
pop
ret
es
test
mov
jl
insl
out
pop
fisttps
mov
or
xchg
xchg
add
and
push
xchg
jae
mov
aaa
ret
dec
ret
push
mov
jmp
cmc
pop
mov
fstpt
jb
and
xchg
jne
add
inc
mov
loope
loop
data16
jbe
and
adc
adc
xchg
push
gs
testb
and
xchg
jbe
inc
aad
movsl
es
test
xchg
push
gs
testb
and
xchg
gs
sarl
add
push
clc
std
mov
and
out
sub
mov
jb
push
mov
sbb
or
or
mov
stc
jne
mov
popf
mov
mov
xchg
mov
or
cmp
stos
pop
testb
push
in
test
lock
roll
sbb
adc
mov
hlt
dec
shr
ds
test
cmc
popf
jmp
push
ss
sub
pop
js
lcall
jmp
mov
xchg
sub
jg
xchg
adc
adc
arpl
in
ds
into
mov
loope
or
test
xor
jmp
mov
daa
sahf
inc
and
jo
in
mov
lret
cmp
sarb
movb
in
movsl
cmp
sub
loop
jo
xchg
mov
and
ja
mov
dec
inc
in
rcrl
nop
mov
or
bound
dec
cli
cld
add
xor
negb
jge
sbb
and
in
loopne
test
xchg
xor
add
int3
into
into
hlt
pop
push
mov
cmp
mul
std
lret
in
into
aad
mov
mov
xchg
aas
stos
es
sbb
out
in
test
dec
add
loope
lock
lahf
outsb
adc
addl
ja
push
pop
shlb
sbb
imul
cmp
mov
mov
test
lret
sbb
out
jg
in
pushf
and
xor
cmp
dec
inc
ljmp
or
sub
cltd
pop
hlt
fisttpl
inc
adc
lcall
mov
xor
sub
test
in
lock
pop
pop
pop
xchg
ret
and
stos
int
jno
xor
mov
scas
mov
push
mov
pop
xor
subl
pusha
mov
pop
xchg
aaa
hlt
add
pop
in
movsl
jns
call
xchg
push
mov
jnp
outsl
sbb
and
fsubl
mov
mov
dec
cmp
jl
imul
and
lds
and
and
inc
xchg
mov
and
ret
add
cwtl
pop
mov
mov
movsb
pop
js
mov
mov
movsb
jg
js
mov
rcrb
add
dec
lock
mov
int
pop
test
mov
add
gs
popa
loopne
or
dec
mov
outsl
out
mov
addr16
cmp
jo
and
pushf
or
fxch
clc
mov
fwait
outsb
xor
push
mov
push
cmc
shr
xchg
pop
mov
lods
insb
adc
das
cmpb
xchg
inc
mov
shrl
xor
cs
stc
mov
sub
je
lock
and
sbb
ss
sub
fmul
push
sbb
xor
pusha
push
pop
inc
outsl
inc
stos
add
dec
sub
and
pop
fisttpl
jns
or
incl
rcll
mov
adc
adc
sub
dec
ljmp
loop
xor
fldt
ja
fwait
jp
daa
addr16
fs
dec
xorl
fdivr
xorl
push
and
insl
lcall
bound
jmp
in
mov
scas
sbb
push
mov
int
loope
pop
ljmp
dec
inc
jb
cltd
pop
xor
jae
ja
add
push
ljmp
pop
gs
in
icebp
mov
test
jle
pop
and
dec
fiadds
lods
xor
mov
adc
jnp
inc
adc
popf
aad
inc
dec
imulb
cmpsl
add
xor
call
adc
popf
push
pop
ret
pusha
aaa
jge
mov
aam
testb
cmp
dec
cltd
repz
add
sbb
jmp
mov
push
js
out
insl
adc
pop
push
sbb
mov
fwait
add
inc
push
adc
outsb
ror
lea
or
aas
push
testb
aam
pop
cmp
cmpsl
roll
addr16
cmp
dec
sbbb
aaa
cld
mov
inc
cwtl
pop
psrld
mov
pusha
psrlq
sahf
pop
mov
movsb
out
pusha
mov
jb
sub
mov
pop
mov
roll
call
jl
push
xchg
enter
push
jge
or
pop
jecxz
xchg
lods
push
xor
mov
mov
mov
mov
and
subb
in
adc
out
subl
or
sbb
inc
in
inc
aaa
ss
jo
int
adc
inc
and
pusha
and
mov
inc
sahf
add
fs
out
mov
rolb
out
cmp
out
movsb
push
iret
push
pop
jbe
arpl
std
dec
push
pop
cmp
pop
clc
scas
inc
push
int3
or
out
mov
cmpsb
out
adc
or
das
xchg
ret
lahf
mov
fidivl
pop
adc
jno
mov
inc
push
mov
insl
icebp
xlat
xlat
or
jo
pop
stos
aad
fs
rol
cwtl
xor
push
loop
pop
pop
mov
dec
cmp
dec
js
std
scas
xchg
cltd
mov
xchg
test
adc
add
ficomps
inc
scas
fwait
mov
jbe
repz
test
mov
xchg
pop
ret
loopne
and
and
ljmp
xor
xchg
sbb
dec
push
jp
inc
pop
js
xchg
imul
cmpsl
inc
jg
inc
out
sbb
and
test
test
xchg
int
cmpsb
pop
sub
bound
push
out
sub
and
cltd
insl
add
dec
mov
rorl
jle
pop
mov
mov
cld
mov
cmp
mov
sbb
loope
ds
sti
test
outsb
faddl
push
loope,pn
and
mov
cmpsl
ds
adc
test
je
adc
jae
sbb
jge
je
shlb
in
push
lods
movswl
xchg
cmc
push
es
push
sub
movb
cwtl
fucomi
fucomp
mov
jmp
adc
mov
cmp
jnp
or
and
lret
repz
xchg
fcomi
fsubs
fs
out
je
stc
sti
add
push
ficoms
dec
cmp
out
test
stos
jge
lds
adc
cld
jg
ds
orb
dec
sub
nopl
mov
and
loop
mov
out
cmp
into
sub
sub
adcl
and
fwait
adc
int3
inc
mul
test
movsb
mov
hlt
addr16
cmc
jo
inc
into
cld
cwtl
jnp
and
rolb
je
dec
cmc
sbb
mov
sti
jmp
sbb
lods
xchg
gs
xchg
xchg
add
adc
xor
jo
in
sub
cli
pop
inc
mov
mov
es
loope
jne
sbb
sbb
stc
push
cmpsb
jns
out
xchg
mov
loopne
dec
cwtl
and
adc
iret
lahf
lahf
rcrl
dec
popa
xlat
cmp
inc
lods
add
sahf
nop
mov
in
mov
lds
add
clc
pop
sbb
mov
mov
xchg
mov
lret
lea
lret
fisubl
pop
mov
aas
jnp
popw
and
lret
shll
push
data16
subb
lret
mov
shr
or
xchg
rolb
pop
bswap
cmpsl
shrb
push
call
fsubl
dec
push
cmpb
cmp
nop
and
cltd
pop
leave
cmp
pop
loop
xor
inc
cmpsb
adc
repz
inc
mov
pop
pop
xor
outsl
mov
lret
les
mov
jns,pt
and
xor
jbe
stos
push
int3
outsb
push
push
rcrl
push
sbb
adc
cltd
lea
push
cmp
jo
xchg
pop
sub
loop
dec
lret
fldt
cmp
or
imul
xor
jmp
mov
shll
inc
adc
push
and
adcb
and
stc
mov
loopne
cltd
pushf
sub
stos
xchg
and
push
jecxz
mov
or
lods
pop
push
add
cmp
sbb
inc
es
out
cmc
jne
push
icebp
in
lcall
or
sub
push
fsubrl
add
hlt
push
push
popf
xchg
mov
insb
daa
sbb
loopne
push
das
jle
cwtl
sub
mov
movsl
push
mov
hlt
ret
sbb
fimull
pop
sbb
mov
into
mov
jb
jle
popf
out
dec
and
or
iret
mov
fiaddl
push
dec
lcall
mov
pop
cmp
in
nop
jge
bound
sub
mov
cwtl
lock
jo
pop
incl
aaa
pop
iret
adc
adc
jno
ret
shlb
cli
es
js
mov
dec
clc
test
bound
pop
stos
or
data16
add
stos
jp
dec
push
xchg
shrb
sbb
add
dec
loopne
imul
cld
out
sub
wrmsr
xchg
dec
idivl
inc
sahf
or
jg
bound
ret
out
sub
gs
xor
cmc
scas
pop
jle
gs
dec
inc
xchg
and
xor
insb
repnz
adc
xchg
cmc
lea
sbb
or
mov
xchg
js
scas
mov
adc
push
in
int3
les
push
lods
jecxz
cmp
jge
hlt
or
adc
fdivl
mov
icebp
cld
inc
cmpsb
lret
lds
jno
jo
xchg
mov
lds
rorl
bound
popa
mov
push
scas
xchg
jb
ret
push
lds
mov
lods
xchg
mov
mov
add
xchg
mov
pop
or
and
or
arpl
movsl
mov
push
mov
pop
jp
adc
push
ljmp
xchg
xchg
das
and
stos
sbb
sbb
das
mov
cmp
xor
add
pop
cmp
mov
xchg
jbe
jp
enter
testb
pop
andl
sub
mov
repnz
mov
adc
stc
fst
pop
adc
push
daa
mov
fldt
loop
int3
test
sbb
call
bound
sub
pop
adc
mov
push
ret
scas
xchg
test
and
into
sbb
ror
in
push
vpunpckhdq
adc
push
lret
sub
and
dec
repz
incl
icebp
xlat
jae
pop
in
sbb
fcompl
mov
jns
pop
jmp
into
jp
cwtl
ret
in
ret
mov
mov
cmp
rclb
lods
pop
jo
sbb
xchg
leave
dec
imul
push
xor
mov
es
mov
sahf
jb
xor
shrl
lahf
xchg
int3
adc
pop
aaa
lods
mov
mov
out
jno
out
push
rorl
push
adc
sbbb
ds
subl
sti
push
gs
add
out
lds
inc
outsb
in
rcrl
jmp
sbb
ret
jmp
or
je
js
xor
cmp
into
pusha
lret
out
and
sub
cmp
fcmovnbe
gs
lds
xorl
outsl
add
push
mov
pop
stos
popa
call
sbb
inc
xor
jno
les
mov
dec
ffree
outsb
dec
add
addr16
rol
pop
mov
sbb
pop
add
sub
es
imul
mov
and
nop
arpl
mov
cmpsb
outsb
dec
loopne
mov
fsub
push
jb
in
popf
int
lret
cmp
xchg
rcll
fdivrp
push
popf
mov
cmp
bound
popf
hlt
gs
aaa
in
mov
aam
cmpsl
loopne
in
xchg
cmpsb
lock
sub
cld
mov
mov
lahf
scas
pop
mov
fnsave
mov
pop
es
repz
cmp
mov
push
mov
sti
shlb
push
sbb
fildl
xchg
and
push
andps
scas
aas
cmp
arpl
sti
lds
push
dec
push
cmc
movsl
out
or
rcr
mov
xchg
jge
rcl
aas
jle
lcall
mov
outsl
idivb
fmuls
mov
ss
sub
stc
mov
in
jecxz
in
pop
push
jecxz
aam
or
shll
jns
pushf
xchg
es
pusha
push
add
pop
xor
fistps
xor
out
push
pop
xchg
aas
jnp
or
fwait
adc
cmp
or
outsb
sub
mov
mov
jne
aas
aam
ja
lods
stos
imul
hlt
adc
aad
stc
pop
push
adc
pop
mov
pushf
std
sbb
cwtl
mov
xor
inc
shr
add
xor
fwait
pop
aad
push
mov
int3
shrb
inc
cmpb
dec
shlb
in
pop
dec
pusha
nop
repnz
sbb
cltd
xchg
mov
add
cwtl
stc
movsb
jg
push
xchg
adcl
lock
ja,pt
push
xchg
popa
dec
lock
jl
jne
lods
dec
push
inc
dec
insb
adcl
jno
xchg
ss
lret
cltd
fidivrl
mov
lret
or
in
add
cltd
loope
sub
or
mov
add
mov
lds
dec
push
lahf
rolb
sbbl
sbb
sub
jo
cmc
enter
push
xchg
xor
sti
jmp
push
xchg
xchg
fwait
pushl
test
int3
popa
mov
aas
rcr
xor
rclw
add
subb
sti
nop
ljmp
sbb
pop
rorl
mul
mov
sub
add
pop
jns
mov
jo
sub
out
inc
and
test
loope
adc
mov
clc
push
push
xor
inc
inc
add
loopne
hlt
inc
rorl
cmp
cmp
fwait
push
cmc
xor
fisubrs
jbe
push
cmp
das
or
mov
xor
xchg
pusha
mov
sbb
inc
push
or
jnp
pop
cmp
jmp
jnp
aaa
push
mov
sbb
mov
paddusw
js
mov
cmp
mov
cs
and
popa
jp
and
fiaddl
cmp
test
insb
pop
dec
into
xchg
out
mov
inc
sub
ficoms
in
movsl
bound
movsb
push
add
or
mov
fistps
pop
icebp
subl
inc
stc
mov
or
jnp
mov
pop
in
xchg
push
movsl
imul
push
cwtl
cmp
loope
jecxz
pusha
push
pop
add
outsl
testl
idivb
xor
cmp
sbb
cmp
mov
xor
dec
xor
fistpll
imul
rclb
jno
mov
adc
add
and
mov
orl
in
pushl
push
jbe
cmpb
int3
ret
push
push
sbb
sti
insl
bound
push
mov
pop
clc
lahf
out
xchg
push
gs
lods
mov
lods
add
out
stc
ja
fistps
test
mov
divb
dec
mov
daa
pusha
push
das
push
adc
pusha
sub
adc
jbe
pop
stos
adc
and
add
idiv
add
leave
in
inc
cwtl
lock
inc
movsb
cmp
pop
jne
std
and
scas
inc
aas
clc
inc
pop
mov
imul
xchg
nop
jg
cmp
std
adc
aas
out
aad
cmp
adc
test
out
daa
or
lcall
xor
lcall
rcl
pop
mov
xchg
pop
dec
ljmp
xchg
jg
repz
push
pop
cmp
sahf
cmpsb
mov
push
insb
xchg
add
aad
cwtl
mov
ss
andl
aam
adc
lcall
movl
push
sti
xchg
addr16
xor
mov
and
mov
and
fisttpll
or
incb
add
adc
call
ret
add
mov
dec
stos
mov
add
scas
int3
fsubp
xchg
cwtl
sti
loopne
jno
sub
mov
jne
and
js
and
adc
add
shr
sub
cli
mov
mov
rcr
sub
inc
pop
sahf
divl
inc
inc
ficoms
jl
cmp
mov
mov
pop
bound
sbb
xchg
movsl
adcb
jnp
mov
movsl
jno
fiaddl
sbb
dec
ja
shll
dec
outsb
loop
jg
jp
xor
out
mov
adc
push
jecxz
ss
sub
dec
stos
fnstenv
das
fsts
lods
mov
sub
scas
in
sub
dec
jnp
dec
xchg
inc
lret
dec
push
mov
push
clc
cmpsl
jnp
and
addr16
jle
cmp
out
mov
or
cmp
je
mov
xor
push
xor
push
fadds
xor
mov
xchg
sbb
jge
inc
in
sbb
mov
push
dec
ror
ficoml
stc
ror
gs
xlat
jns
dec
movsl
mov
imul
repz
jmp
push
mov
push
loope
sti
and
addr16
subb
xor
fiaddl
push
insl
adcb
xor
shlb
lcall
pusha
ret
sub
sub
jnp
repnz
cmp
popl
push
mov
imul
adc
loopne
mov
push
ljmp
add
call
sub
ret
inc
push
mov
sub
outsb
fidivs
in
sub
bound
inc
insl
xchg
movsb
jmp
cmpsl
lret
or
fdivs
data16
mov
sarb
das
test
or
fisubrs
pop
adc
ljmp
lock
fcomip
bnd
add
dec
ret
pushf
cmpsl
xlat
jns
push
mov
push
mov
scas
sub
dec
out
fs
adc
cmpsl
enter
movsl
ret
test
leave
bound
jo
stc
mov
pop
mov
xchg
xchg
mov
jmp
std
mov
xchg
xchg
adc
xor
popf
fcomps
xchg
xor
lret
lcall
ret
mov
idivb
popf
and
mov
movsl
lcall
sbb
jnp
or
cmpsl
mov
movsl
jb
movsb
lock
dec
push
fwait
loop
popa
in
push
add
loope
fadds
dec
lret
fs
jns
stos
xchg
fmulp
inc
ficoms
jecxz
mov
iret
pusha
out
cmpsl
ljmp
jno
out
or
sbb
cmp
cmc
inc
pop
jg
pushf
add
push
gs
dec
xor
in
stos
rcr
mov
lahf
dec
leave
adc
sbb
lods
sbb
push
cltd
dec
xlat
pop
in
ja
cld
in
mov
cmp
fnstsw
mov
jnp
sub
mov
push
xchg
pop
in
cmp
adc
push
push
sub
ret
scas
loope
inc
stc
loope
into
push
jg
pop
test
in
jmp
stc
aas
test
or
dec
sub
sub
xchg
pop
je
rclb
daa
js
dec
xlat
fidivrs
xor
pop
rcll
and
notb
scas
fisttpl
pop
fcoms
xchg
sti
stos
pop
scas
leave
pop
push
adc
cmp
fsts
movsl
inc
dec
loopne
mov
mov
loopne
jo
xor
in
cmpb
sbb
and
fsts
loope
jae
ret
xchg
dec
iret
js
fst
mov
cpuid
ret
cmpsb
mov
lret
cwtl
loop
mov
ret
adc
adc
push
cmp
or
enter
mov
or
push
mov
or
sti
aaa
adc
xchg
pop
sub
jno
sti
mov
jg
ret
mov
adc
fidivrs
andb
push
and
cmp
loop
pop
and
push
mov
ret
in
xchg
cmp
arpl
into
hlt
rcr
mov
mov
les
jmp
es
aam
rclb
fs
cmc
ret
jecxz
xchg
jle
adc
data16
push
adc
sub
inc
jp
xor
fisttpl
mov
stos
jge
dec
sub
iret
mov
shlb
lods
xchg
arpl
xor
imul
out
repnz
ficomps
adc
hlt
call
mov
jl
adc
mov
push
cmp
jbe
adc
bound
repz
push
dec
stos
sarl
sbb
rolb
in
mov
data16
icebp
fdivrs
int3
rclb
add
in
jbe
add
jge
in
jnp
xchg
xor
test
push
cltd
daa
pop
int3
jb
std
call
adc
ret
inc
fiaddl
inc
inc
das
sub
xor
mov
loope
push
cltd
sbb
insl
into
mov
cmpsl
pop
sub
sbb
decl
jb
sub
mov
push
cmp
push
jmp
dec
mov
sbb
leave
and
jp
imul
ret
lods
add
sub
setle
sub
add
mov
xor
fcomps
push
and
jmp
int
cmc
cmp
or
bound
rcrl
xor
pop
mov
push
adc
and
mov
ficoml
dec
cmp
movsb
pop
mov
xchg
push
nop
iret
mov
nop
std
outsl
inc
in
mov
sub
ficomps
jbe
mov
sahf
xchg
or
in
cli
outsl
sbb
jmp
loopne
sahf
shll
jnp
push
lcall
std
lods
repnz
mov
jg
out
stc
mov
cmpsb
pop
jl
pop
pop
sub
dec
sub
loope
shrl
lods
bound
out
ljmp
out
in
xchg
push
aam
xchg
enter
mov
push
adc
pop
lret
sbb
mov
int3
push
jnp
cs
sar
test
std
mov
add
sub
mov
jecxz
lods
jno
mov
push
imul
xor
mov
jecxz
imul
mov
jge
push
cli
sub
and
ret
sti
mov
mov
clc
adc
int3
xor
lods
xor
xlat
das
cmp
dec
aaa
xor
scas
sbb
push
or
hlt
test
pop
push
scas
xchg
dec
pop
sub
adc
jp
leave
mov
mov
sub
out
scas
or
adc
jne
rol
sbb
xchg
test
hlt
pop
adc
std
stos
jge
jmp
xchg
push
xchg
xchg
mov
jecxz
ret
fistpl
inc
sub
add
xchg
add
xchg
movsl
push
cmp
and
popf
daa
mov
xchg
push
jns
repz
bswap
fsubrl
scas
stos
imul
movaps
xchg
outsb
inc
leave
iret
dec
mov
hlt
jnp
nop
sub
aas
leave
xchg
jnp
or
je
hlt
test
inc
ds
and
inc
mov
xchg
pop
mov
iret
in
es
push
cmp
stc
xor
dec
dec
mov
repz
push
or
push
xor
and
mov
pop
aam
and
dec
scas
cmp
iret
sbb
out
mov
outsl
jb
in
pusha
out
lods
test
pop
cmp
ljmp
cli
or
xchg
jmp
js
lret
dec
push
fs
insb
ljmp
imul
cmpb
ret
out
das
es
ds
mov
mov
mov
int
pop
fcomps
stos
mov
xlat
cld
jge
stos
popa
rol
sti
in
mov
cli
cmpsb
dec
cmp
daa
push
movsb
fistpll
adc
mov
dec
loope
and
int3
out
popf
lods
lea
outsb
push
into
jmp
and
adc
sub
mov
push
mov
mov
pop
sub
mov
add
rclb
sahf
fcmovnb
pushf
das
bound
or
shr
pop
sub
fldt
inc
jle
mov
std
imull
cmp
push
aam
sbb
jmp
ss
dec
daa
test
push
inc
cld
fstpt
mov
lret
mov
inc
int3
adc
dec
icebp
xor
mov
inc
les
pop
mov
push
xchg
push
stos
xchg
jecxz
jecxz
lea
fwait
stos
notl
das
cwtl
add
inc
dec
gs
and
pop
in
faddl
mov
push
out
sti
inc
mov
mov
or
sbb
std
sbb
lea
cld
test
adc
lret
ja
jbe
fwait
scas
sub
xor
sahf
sub
jle
jno
scas
adc
jmp
pop
test
scas
aad
mov
xchg
daa
dec
pop
popa
in
jle
in
cmp
sbb
mov
xchg
fwait
pop
movsl
pop
push
fs
sbb
push
xchg
jb
mov
mov
outsb
imul
pop
or
mov
mov
mov
sub
cld
mov
adc
jmp
repnz
mov
push
jp
mov
mov
jno
jecxz
mov
lea
xchg
jle
lahf
leave
inc
mov
pop
negl
pop
mov
dec
hlt
jecxz
test
fwait
mov
push
xor
cmp
hlt
test
sub
cmpsl
sbb
pop
popa
insl
in
push
pop
pop
lret
gs
pop
in
mov
movsl
xor
aam
and
outsl
jmp
pushl
or
jl
or
js
sub
or
pusha
insb
jnp
out
jbe
jg
jp
insb
mov
push
push
xchg
xor
cli
xor
xor
xchg
sbb
js
scas
arpl
fimuls
jae
sbb
push
out
sbb
loope
in
xchg
cmc
mov
inc
lock
sub
mov
rol
pop
ljmp
adc
sbb
lret
int3
int3
mov
inc
pop
xor
or
icebp
cmp
and
in
pop
mov
lock
ds
push
mov
fdivl
mov
inc
sbb
sbb
test
cmpsl
cmpsl
lods
pop
mov
jmp
inc
mov
nop
pop
cli
imul
xchg
xor
lds
mov
icebp
jecxz
xor
dec
stos
push
daa
out
movsb
mov
mov
sub
jbe
inc
aad
movsl
es
test
xchg
push
gs
testb
and
xchg
jbe
inc
aad
movsl
es
test
xchg
push
gs
testb
and
xchg
jbe
inc
aad
movsl
es
test
xchg
push
gs
testb
shlb
andb
jb
inc
aad
movsl
es
add
out
pop
out
push
mov
cli
stc
ljmp
rcll
gs
jne
enter
dec
loop
mov
in
cmc
popa
test
xchg
inc
movsl
xor
shll
loope
xchg
adc
mov
in
cmc
popa
inc
adc
and
push
shll
loope
xchg
adc
mov
mov
cmc
popa
test
rclb
sbb
xor
int3
push
sahf
inc
cs
inc
movsb
dec
sbb
jno
rcll
fxtract
mov
fiadds
cli
imul
and
xor
popa
jp
xchg
mov
xor
fstl
push
add
scas
mov
and
xchg
cmpl
ror
and
push
rorl
jne
and
add
dec
bound
sbb
aad
es
addb
dec
mov
test
mov
rcll
cmpsb
dec
jo
sub
lea
inc
cmc
xor
cmp
pop
out
test
jne
xchg
scas
and
and
out
sbb
loopne
xor
shll
loope
xchg
adc
mov
in
cmc
popa
test
xchg
add
mov
sbb
add
aam
rol
cmp
lea
test
mov
inc
and
sbb
pop
fisubs
mov
daa
cmc
or
leave
inc
rorb
push
mov
test
xchg
dec
std
adc
mov
in
cmc
popa
test
xchg
add
rcll
gs
jne
add
mov
mov
in
cmc
popa
test
xchg
add
shll
clc
add
sti
push
addr16
fistpll
and
pop
fistpll
mov
xchg
imul
sbb
sahf
loop
and
out
mov
cmp
pop
dec
call
xor
cmovno
adc
cwtl
inc
fcmovnbe
orb
sbb
aam
push
adc
pop
cmp
fisttpll
push
nop
dec
adc
add
repnz
add
stos
in
in
jbe
ja
mov
mov
rcl
dec
sub
push
addr16
fldl
mov
inc
js
mov
out
mov
adc
mov
mov
dec
popf
push
sbb
pop
or
loope
mov
xchg
mov
push
sbb
xchg
cmp
xlat
add
test
loope
dec
aad
je
fcmovu
int
push
xchg
sbb
lcall
add
cmp
sbb
xor
shr
sar
aaa
ret
es
add
fnstenv
xor
pop
adcb
pop
and
xchg
cmpsl
mov
ja
and
cmp
adc
rclb
js
lods
add
push
cmp
jb
pushf
stc
imul
xor
mov
ror
or
loop
mov
aam
add
or
insb
and
dec
or
cmpsb
in
adc
jae
xchg
pop
nop
sbb
shlb
into
jmp
push
sbb
je
xchg
cld
adc
mov
ja
mov
jl
lahf
inc
or
es
jle
push
or
and
icebp
xor
push
cli
or
or
jne
cmpsb
jl
jb
dec
mov
jecxz
shlb
mov
sahf
or
call
fcmovnbe
push
ja
stos
mov
mov
inc
and
inc
ds
pusha
pusha
dec
mov
imulb
mov
sbb
out
std
out
iret
sti
cltd
pop
jp
dec
cmp
inc
sub
pop
jle
rcrb
adc
in
jne
enter
or
movsb
movsl
rol
icebp
sub
xor
add
jmp
jg
sbb
fldl
mov
fidivl
shrl
rcll
add
pop
xor
mov
mov
das
fcmovnu
sti
ljmp
adc
jg
pop
sub
cmp
mov
cmp
cmpsb
xlat
and
inc
rolb
dec
lahf
and
loopne
cmpb
es
cs
sti
stos
mov
sbb
sahf
inc
nop
movsl
xchg
jmp
in
mov
dec
jmp
testl
stos
repz
iret
lret
adc
inc
movsl
adc
mov
sbb
lcall
test
and
arpl
sub
cltd
sti
pop
fisubrs
cmp
and
out
fs
cmp
aas
lahf
jae
rolb
and
pop
ja
jecxz
inc
sub
jnp
lea
test
pop
testb
lret
je
dec
sub
push
leave
int3
mull
or
fdivl
push
pop
mov
mov
adcl
lods
pusha
movsb
rorl
mov
push
clc
add
aad
sahf
mov
mov
sbb
out
and
jg
xchg
addps
xlat
shrb
out
or
in
inc
and
arpl
sbb
cmp
jg
pop
push
or
lcall
outsb
mov
mov
adc
mov
mov
mov
std
lcall
xor
sti
or
xor
outsb
fimull
inc
jle
int3
out
cmc
in
mov
sbb
mov
jg
fsubs
imulb
pop
cs
or
jbe
pushf
popf
arpl
xchg
int
in
jbe
inc
push
repnz
mov
inc
jge
pop
inc
mov
mov
pop
cmp
fdivrl
mov
mov
out
ss
cmpsb
mov
dec
mov
ret
mov
cli
fmul
mov
cmp
sbb
cmp
out
out
dec
pop
cmpsb
or
fdiv
and
sub
cmp
mov
iret
jge
sub
jb
mov
push
sub
push
xchg
js
pop
call
jno
xor
lcall
or
and
or
gs
jbe
push
push
scas
or
mov
adc
mov
shrl
inc
dec
jl
test
xor
fisubrl
orl
incb
sub
fnstenv
lret
adc
loope
xlat
mov
xchg
out
xchg
jb
xchg
scas
add
push
fbstp
repnz
pop
dec
sub
jbe
mov
and
cltd
popf
adc
cwtl
jo
popa
aad
aaa
mov
adc
ljmp
xchg
inc
jp
and
pop
outsb
mov
mov
cs
call
std
and
xchg
cmp
or
jnp
or
ss
bound
mov
sti
cli
sbb
outsl
dec
push
xadd
jnp
mov
mov
enter
or
call
call
repnz
scas
sbb
shlb
mov
push
cwtl
mov
xor
push
mov
dec
pusha
adc
xlat
pop
ljmp
mov
scas
jmp
dec
xchg
iret
adc
lock
movsl
fdivrp
into
xchg
ljmp
mov
adc
sahf
lea
test
mov
lock
mov
cmp
aas
lock
sub
and
xchg
ret
std
pop
repnz
mov
mov
or
or
push
mov
mov
jae
int
inc
xchg
imul
neg
stc
sub
hlt
shl
xchg
jno
je
popf
add
cwtl
xchg
xor
cmpsl
dec
push
push
cli
and
ja
jp
push
shlb
xchg
outsl
jmp
les
inc
clc
mov
jmp
inc
push
int3
aaa
add
xor
sbb
cs
mov
pop
out
fs
fwait
push
and
adc
js
test
or
nop
and
push
pop
dec
nop
sub
push
xchg
jmp
mov
mov
dec
adc
rcr
push
push
pop
sub
push
test
nop
xchg
aam
repnz
cltd
mov
addl
fwait
dec
cmpsl
lds
out
adc
mov
add
sar
test
popf
mov
aad
push
in
mov
leave
mov
out
push
loope
outsb
or
push
mov
fistl
xor
nop
fisubl
insb
adc
scas
popa
or
xlat
jne
adc
jmp
ljmp
xor
inc
loope
jnp
dec
mov
ja
iret
mov
jl
call
mov
mov
cmp
out
adc
jp
push
icebp
loopne
push
dec
inc
bound
xor
adc
and
subw
out
fwait
sbb
mov
mov
outsb
xor
inc
jmp
mov
sahf
int3
dec
mov
mulb
inc
call
lcall
lds
add
fisttps
adc
xchg
cmp
jp
lcall
pop
lods
std
sbb
or
insb
xchg
js
and
push
xchg
movsl
daa
mov
xchg
jecxz
insl
hlt
sub
movsb
fwait
stos
push
xchg
mov
add
nop
push
push
fnstenv
pushf
cmpl
push
hlt
sbb
fwait
adc
mov
or
push
jno
int3
shll
cmc
pop
inc
mov
movsb
sbbb
sub
sbb
test
jns
jp
mov
pop
push
cmpsl
dec
pop
mov
sbb
aam
shll
pop
or
pop
data16
test
in
xchg
inc
pop
mov
pusha
xchg
in
icebp
lret
cltd
imul
mov
mov
scas
xor
inc
sahf
jbe
mov
out
mov
aas
sarl
dec
or
mov
cmpps
mov
cmc
fcomps
jg
dec
mov
cld
push
fwait
notrack
jle
fisttps
xchg
stos
adc
fistps
sub
cmpsb
push
iret
jae
fisubs
arpl
addr16
movsb
stos
je
mov
dec
dec
push
insl
nop
rol
sub
add
mov
pop
push
dec
mov
fstp
sbb
mov
mov
jo
push
lcall
cli
jecxz
add
sub
cmpsb
mov
int
inc
pusha
stos
jbe
push
mov
imul
fstp
inc
pop
pop
aaa
push
xor
pusha
cmc
push
jle
jne
sub
in
mov
pop
push
fildll
icebp
lcall
dec
xchg
and
enter
sahf
mov
adc
cmpl
cmp
sub
sub
xor
pushf
jno
push
pop
lahf
cmc
inc
sar
jnp
cltd
fisubrl
jle
inc
cld
push
out
cmp
mov
mov
mov
fistpl
inc
cmp
shrl
ja
inc
sbb
out
pop
cmp
repnz
ljmp
rcrl
dec
out
sbb
out
push
or
scas
cli
mov
shll
jg
cmp
xchg
adc
lahf
push
mov
fwait
jge
xchg
xor
rcrb
pop
and
sarb
adc
outsb
jmp
pop
mov
push
add
pop
and
or
push
jno
out
pop
cs
adc
or
xor
iret
idivb
push
mov
imul
adc
xchg
jne
mov
cltd
ret
jg
sub
sahf
jb
mov
and
addr16
push
push
repnz
das
and
cltd
xchg
in
sarl
mov
insl
in
icebp
inc
movsl
out
xchg
push
push
and
jle
jb
movsb
repnz
mov
xchg
inc
out
push
xorb
add
cld
jge
pusha
jnp
das
lea
dec
jg
push
xchg
push
cmp
xchg
jae
arpl
adc
inc
cmp
push
mov
int3
mov
fs
jge
test
rol
out
imul
outsl
mov
sbb
push
inc
and
xchg
test
cwtl
ret
dec
and
cmp
jno
cmp
addr16
push
les
mov
test
and
in
ret
outsb
dec
mov
sub
imul
add
repz
add
in
ret
jg
mov
movsl
jg
pop
mov
pop
xchg
lds
mov
push
paddb
xchg
jge
pusha
sbb
stos
pushf
mov
ficoms
lret
mov
push
es
aaa
rep
cmp
sbb
int3
in
push
mov
xchg
aaa
outsl
movsb
cmp
adc
push
adc
push
mov
and
mov
pop
push
mov
jb
add
dec
and
push
push
pop
pop
xchg
mov
and
in
push
adc
push
mov
mov
imul
test
unpckhps
pop
sbb
and
add
test
sub
mov
pop
sar
push
popa
cmp
shrb
test
push
idivl
jle
repnz
loope
test
dec
pop
cmpsl
sub
out
cmpsl
jp
inc
pushf
sub
push
insb
cmpsl
pop
xor
lods
jo
rcrb
adc
gs
fsubs
dec
lods
dec
push
hlt
mov
sbb
push
and
int
dec
dec
sub
and
dec
push
mov
dec
leave
push
sbb
roll
mov
icebp
dec
dec
lret
mov
or
in
xchg
or
in
jns
add
pop
or
cmp
sub
xchg
das
fcmove
dec
mov
test
dec
inc
pop
fwait
dec
dec
pushf
int
test
xor
cmpsb
cmp
rcrl
jne
test
or
arpl
pop
jecxz
adc
jmp
xchg
sbb
mov
in
scas
lock
push
aam
dec
cs
out
scas
daa
in
jb
push
sahf
sbb
ds
mov
mov
pop
fiadds
mov
push
xor
cmc
adc
stos
xchg
mov
lea
jnp
adc
aas
xor
frstor
push
jp
dec
test
and
repnz
adc
lcall
loopne
sbb
scas
popa
or
dec
ja
xchg
lods
lock
xor
cmp
es
hlt
inc
loop
mov
jne
xchg
dec
sub
les
les
clc
in
inc
adc
addr16
inc
mov
mov
or
loop
aas
jecxz
add
mov
cli
cmp
lock
xor
dec
testb
lods
ljmp
or
xor
ss
and
aas
mov
pop
cmc
shlb
mov
aaa
and
repz
popl
dec
sbbb
adc
mov
jbe
add
inc
stos
popf
cltd
add
xchg
mov
sar
push
cld
cld
dec
ds
ljmp
call
and
push
xchg
gs
insb
pop
inc
insl
cmp
sub
dec
sarl
pop
std
adc
ds
mov
pop
leave
int
jmp
xor
stos
xor
in
sub
ds
dec
mov
mov
xchg
ja
add
xor
jbe
rorb
out
fisttpl
outsb
xchg
fisttpll
stos
mov
stos
sub
orl
or
test
push
js
sahf
lcall
test
push
sub
mov
pop
jmp
xor
adc
jg
xor
call
jle
mov
negl
loop
adc
mov
shlb
xchg
mov
inc
stos
push
and
jl
jne
mov
scas
cltd
sti
push
arpl
leave
push
cmp
cmc
and
push
ret
cmp
fistpl
cmp
sbb
cmp
in
xchg
in
jg
mov
mov
je
cmp
adc
outsb
test
inc
jge
and
sub
jbe
sub
jmp
jnp
inc
cmp
xor
mov
insb
shr
fsub
mov
push
fwait
inc
push
xchg
mov
js
aam
decl
mov
into
call
scas
pop
inc
outsb
push
xor
or
and
in
push
and
iret
dec
and
or
shrb
je
mov
xorl
ret
icebp
repnz
and
mov
in
push
bound
rcll
sub
out
rolb
mov
jae
inc
adc
jmp
cli
jle
add
inc
dec
out
out
clc
cli
push
outsb
pusha
fmull
push
pop
cmpsl
sbb
fmull
fcoml
stos
dec
popa
mov
fidivs
mov
inc
push
cmp
mov
and
out
jmp
jb
jae
push
in
adc
push
cmc
mov
in
fisubrs
jae
or
popa
add
mov
loope
push
dec
xchg
dec
jge
add
dec
clc
ja
fucomip
sbb
dec
xor
cmpsb
xor
pop
in
sub
leave
je
in
pop
in
popa
xor
aam
mov
jmp
iret
and
es
sbb
xor
or
pop
jns
enter
xor
and
adc
sbb
ficoms
lcall
shr
es
push
lcall
inc
cmp
xlat
mov
mov
daa
ss
out
je
xor
addb
arpl
mov
and
inc
jbe
outsb
dec
sahf
out
sbb
sbb
das
iret
fldt
cmpl
jp
mov
outsb
idivb
pop
mov
and
scas
fisubrl
out
or
scas
je
fstpt
dec
mov
mov
push
sub
fstps
add
outsb
mov
into
jne
mov
stos
and
movsb
jbe
jg
and
test
sub
mov
cli
arpl
mov
cwtl
iret
mov
sub
inc
xchg
popf
jecxz
push
jns
mov
or
pop
push
repz
pop
jne
testb
dec
pop
sub
jge
lds
arpl
inc
stos
jnp
scas
jle
dec
xor
in
mov
push
dec
fimull
cmc
into
xchg
cmp
out
imul
xchg
mov
out
bound
cwtl
shlb
adc
pop
xchg
sub
cmp
test
pop
shlb
xor
mov
fsubp
inc
jb
push
sbb
insb
xor
add
pop
cmp
sub
and
mov
fiadds
popf
fstpl
aad
mov
das
imul
jl
dec
mov
inc
loopne
lods
aam
xor
incl
jecxz
test
int
mov
movb
mov
or
mov
lret
mov
fdivrl
xchg
bound
inc
cld
int3
fnstcw
movsl
mov
arpl
popa
mov
lock
arpl
movsb
xchg
lods
bswap
adc
jmp
in
iret
or
ljmp
sbb
xchg
xchg
in
xor
fs
ds
in
faddl
xor
fstpt
test
xchg
lds
jnp
xor
sahf
aas
pushf
jae
scas
or
hlt
call
inc
icebp
dec
incl
lahf
mov
jb
xchg
and
push
divb
jb
out
or
xchg
xchg
pop
aas
or
sbb
lahf
je
mov
push
cmpsl
and
push
nop
mov
cwtl
cmp
rcr
push
call
cli
jl
fisubs
and
insl
add
out
jae
mov
in
push
jne
pop
push
xor
out
stos
data16
adc
xor
aam
xchg
sub
jp
sbb
sub
or
push
mov
add
push
movsl
inc
test
pusha
inc
pusha
shl
pop
test
sub
int3
pop
mov
sub
lods
and
and
adc
push
xchg
fstps
inc
pop
jge
mov
sub
out
std
add
mov
rcrl
aas
les
jne
inc
subl
bound
test
xor
dec
lods
into
mov
cmp
bound
mov
push
pop
mov
adc
jg
pop
loope
jae
jge
sub
xor
inc
jb
lret
data16
test
imul
add
jns
mov
mov
leave
mov
cltd
pop
xchg
je
push
scas
push
sub
adc
mov
and
cs
dec
or
out
dec
cli
aam
fcmovb
push
and
xor
dec
push
dec
ss
xchg
pushl
in
enter
fnsave
xchg
fsubr
aas
aas
outsl
scas
sbb
inc
gs
imul
mov
mov
addl
leave
fs
mov
std
xor
jno
cmp
mov
and
inc
mov
out
dec
negb
or
and
insb
repz
mov
push
push
out
fisttpl
jnp
mov
or
sahf
arpl
mov
pop
subl
ret
mov
xchg
loopne
lret
fisubl
shll
push
out
decl
adcl
clc
ss
jne
cwtl
ficompl
es
lds
dec
stos
cwtl
xlat
fldenv
and
push
int
aad
lcall
dec
push
scas
adc
std
pop
pop
push
jae
push
fisubrl
inc
or
mov
stos
arpl
jp
in
movsb
push
aam
in
add
dec
mov
out
mov
enter
xchg
pop
mov
jno
xlat
faddl
push
xchg
xor
stos
cld
sub
pop
xlat
sbb
xchg
add
and
cmp
or
fsubp
gs
mov
or
pop
and
mov
cmp
faddl
test
dec
incb
cmpsb
inc
fldt
adc
das
cmp
dec
jle
jnp
shl
mov
sbbl
pop
xor
repnz
pushf
inc
mov
xchg
pushf
mov
mov
jp
mov
lret
jns
pushl
jp
or
rorb
or
nop
cmp
mov
addr16
insl
stos
fldenv
mov
cli
addr16
xchg
dec
out
test
add
jmp
popf
mov
push
jns
xchg
or
movsl
xchg
loope
sahf
push
add
inc
test
adc
test
call
xchg
ret
aas
imull
dec
gs
rcrl
ja
adc
je
add
call
adc
mov
fldl
ds
xor
mov
inc
rcll
mov
add
mov
insl
in
call
repnz
xchg
xchg
xlat
push
push
add
push
enter
sbb
orl
sbb
xchg
sub
cli
jbe
cmp
mov
sbb
xchg
sbb
fistl
sbb
inc
mov
jmp
scas
and
je
lds
sti
xchg
insb
jae
sub
and
sahf
mov
mov
stos
std
mov
adc
dec
jns
bound
jne
sub
mov
sub
imul
cmp
cmp
push
aad
in
shl
pusha
push
stc
cmpb
out
inc
mov
dec
sbb
or
movsb
arpl
sti
jns
mov
xchg
and
pop
lcallw
xchg
xchg
push
jecxz
adc
sbb
out
add
mov
hlt
and
mov
dec
push
pop
fisubrs
pushf
mull
and
loope
cs
or
mov
gs
jae
dec
jne
sbbl
mov
mov
les
in
mov
cwtl
push
push
cli
aas
jmp
lahf
cld
add
insb
arpl
mov
push
fidivl
pop
mov
xor
inc
add
mov
add
jbe
psrld
add
and
sub
insb
mov
lods
daa
mov
out
dec
jle
enter
adc
adc
sub
add
push
mov
jb
out
jne
iret
loope
call
jl
and
inc
daa
cmp
pop
dec
dec
test
arpl
dec
adc
and
sub
push
mov
jp
fs
xlat
std
xchg
xchg
shlb
adc
dec
mov
cmpsl
int
xchg
xchg
sbb
out
add
push
adc
mov
cmc
out
arpl
pushf
std
fadd
pop
xor
push
add
add
lret
jp
xor
mov
cmp
sar
jle
xorl
xor
dec
and
mov
and
xchg
mov
rcrl
dec
push
xlat
pop
xchg
and
repz
data16
in
sbb
push
lods
das
xchg
mov
jp
mov
das
lods
jg
pop
inc
mov
popa
mov
test
lods
dec
inc
jge
scas
and
aam
xlat
sbbl
in
mov
dec
sub
jnp
lcall
scas
jbe
into
out
sbb
in
popa
adc
cld
push
cmp
adc
dec
jecxz
adc
les
pop
xchg
fsub
pop
sub
std
inc
add
inc
loop
jecxz
jg
mov
mov
mov
jecxz
mov
jbe
sti
mov
pop
push
outsb
inc
and
ljmp
adc
lcall
push
je
fcoml
repnz
push
adc
jecxz
mov
mov
je
mov
lods
adc
dec
sub
jns
mov
nop
mov
xchg
jae
and
inc
xchg
jmp
clc
shr
sub
inc
mov
inc
jmp
mov
rorb
fldt
daa
sbb
gs
ss
sbb
push
fadds
in
fnstcw
mov
fildll
in
and
aad
movsl
pop
mov
or
push
add
loop
push
pop
mov
rcrl
lahf
inc
xchg
xchg
add
add
fwait
inc
test
clc
mov
lods
popa
mov
sub
repnz
adc
loope
mov
jb
xorl
xor
sbb
xor
mov
cmpsb
aaa
push
sub
daa
pop
inc
fcomp
in
sbbb
leave
sub
out
nop
pushf
or
adc
fldt
hlt
in
pop
mov
vpcmpgtw
hlt
outsb
xchg
xchg
mov
cmp
mov
xchg
lock
ss
cmpsb
ficoml
imul
mov
out
fs
add
fld
into
cmp
jno
imul
or
add
mov
aas
and
enter
out
cmp
out
jge
push
rcrl
adc
xchg
aad
lcall
jnp
or
adc
cmpsb
lcall
jmp
test
and
xlat
jmp
cmpsl
out
mov
cmp
pop
adc
stos
jbe
lock
test
inc
xor
lret
pop
inc
ss
sub
lahf
inc
dec
dec
or
pop
cmp
and
lea
cmp
fs
pop
and
inc
mov
hlt
push
orb
in
cli
push
movsb
stos
inc
cmp
and
inc
adc
cmp
mov
push
pop
std
leave
or
inc
sub
mov
nop
dec
addr16
jo
mov
shll
insb
sub
dec
jge
xchg
mov
aad
push
add
loopne
fldenv
out
mov
jne
insl
fwait
mov
lea
adc
mov
or
movsb
or
pop
or
mov
xor
iret
imul
sub
shll
sbb
into
into
mov
std
add
cmp
cmpsl
or
cmp
test
push
stc
mov
mov
sahf
addr16
int
push
bound
push
fldcw
test
imul
jle
inc
cmc
lock
fs
or
sub
cmpl
lcall
xchg
mov
xchg
add
inc
jns
les
mov
dec
mov
aaa
push
push
push
and
mov
mov
add
cmp
pop
dec
movsb
movsb
lcall
dec
test
test
mov
jnp
ds
orb
xchg
mov
out
je
rolb
fistps
hlt
push
sub
dec
mov
mull
xor
or
mov
adc
or
inc
push
mul
sub
push
push
mov
adc
cmpsl
adc
ret
stos
pop
mov
outsb
daa
sbb
in
fdivl
sbb
mov
adc
and
push
dec
fnstsw
dec
jns
ret
or
je
mov
pop
sbb
int3
dec
inc
or
sbb
mov
mov
xor
cli
mov
lret
lea
negl
xchg
mov
pop
in
adc
shll
add
mov
mov
in
cmc
popa
test
xchg
add
rcll
gs
jne
add
mov
mov
in
cmc
popa
test
xchg
add
aad
shl
jne
test
mov
lds
inc
in
cmc
popa
test
xchg
add
rcll
gs
jne
add
xor
jmp
jno
push
cmc
cltd
in
aad
int3
int3
int3
repnz
loop
rcrb
ret
jle
dec
loopne
dec
jae
bound
xor
and
add
add
repnz
loop
rcrb
ret
jg
outsl
xchg
pop
subb
mov
dec
xor
add
jmp
sti
das
lret
bts
outsl
mov
dec
imul
loope
mov
push
mov
rorb
loope
mov
dec
hlt
cmp
push
fcmovnb
sbb
cmp
lcall
sbb
sbbb
pop
dec
push
scas
pusha
mov
mov
addr16
sahf
or
int
enter
mov
and
cltd
iret
jo
add
rcll
push
add
repz
cmp
or
pop
dec
jg
das
insl
push
subl
pop
mov
setns
outsl
rcrb
and
dec
hlt
mov
dec
xor
mov
lret
in
mov
das
sbb
cmp
xor
lea
adc
out
jno
adc
add
cmp
sti
das
rcrb
ret
jg
outsl
xchg
pop
fwait
dec
imul
out
or
add
mov
mov
sarl
sbb
cmp
mov
int3
pushl
mov
pusha
lods
outsl
stos
popf
push
addl
mov
fidivrs
sub
fiaddl
fstl
add
xor
data16
xchg
jle
jl
jp
ja
dec
mov
dec
jb
bound
xor
and
adc
add
repnz
loop
rcrb
ret
jg
outsl
xchg
pop
orb
bound
xor
and
adc
add
repnz
int
insl
jo
enter
cmpsb
lock
mov
in
and
sbb
insb
or
insl
cmp
push
in
fs
cmpsl
adc
sub
aaa
sbb
daa
xlat
and
mov
mov
sbb
adc
push
roll
je,pt
jno
bound
dec
push
iret
lret
mov
xchg
decl
or
or
imul
enter
sbb
mov
sub
or
cwtl
xchg
dec
dec
imul
xlat
addr16
jbe
stos
jge
xor
fcmovnbe
inc
test
in
mov
xchg
push
arpl
ja
cmpsl
out
mov
dec
sti
mov
popa
add
jmp
cmc
or
mov
sub
mov
jae
adc
lahf
divl
push
push
shrl
sub
aas
pop
pushf
ret
jnp
mov
xchg
push
cmpsb
jp
lock
jmp
imul
xchg
adc
pop
test
push
rcrb
mov
push
inc
iret
jb
test
insl
subl
dec
sub
repz
out
jecxz
and
cmpl
call
pop
mov
push
inc
adc
testl
xchg
stos
shl
adc
aas
mov
aaa
add
xchg
pop
div
outsl
stc
faddp
adc
adc
pop
lahf
cmp
cmp
lahf
outsl
adc
add
loop
je
sbb
inc
rorl
or
das
adc
shll
ffreep
mov
jae
cli
jbe
pop
jb
xchg
push
sti
cmc
out
xor
or
lods
inc
fs
popa
fs
stos
stc
int
mov
add
jb
in
pop
fs
cs
fisttpl
lds
push
pop
cld
xor
mov
fs
sbb
lods
inc
roll
push
mov
sbb
push
shll
scas
dec
scas
clc
dec
add
ds
mov
scas
mov
aaa
adc
add
jbe
jge
cmp
stos
sub
sub
orb
pop
ret
into
add
popl
or
jg
daa
cmp
dec
fstps
fdivs
push
cmp
fwait
pop
adc
inc
push
push
sbbl
sub
jge
imul
add
and
cmc
loope
push
js
sub
pop
aad
jge
adc
mov
xchg
out
xchg
pushf
jg
ret
mov
push
shl
pop
call
stos
rorl
into
roll
in
loopne
imul
popl
mov
sahf
and
repnz
push
fwait
cwtl
inc
pop
jmp
subb
enter
test
popa
sub
stos
cmc
or
xor
arpl
mov
xor
adcb
mov
inc
mov
int
test
mov
mov
repz
loope
fwait
sub
push
and
notl
xor
and
xlat
mov
sub
or
push
repz
lds
dec
rol
ja
daa
xchg
lcall
lods
inc
fildll
into
test
lods
pop
inc
stc
jecxz
fnstsw
push
outsl
adc
dec
out
popa
iret
or
mov
jmp
js
pusha
mov
push
ds
xchg
aam
dec
out
xchg
or
decb
pop
out
idivl
outsb
or
pop
icebp
ret
sub
out
adc
push
enter
inc
faddl
push
hlt
push
jb
cmpsl
xchg
pop
lods
sub
cwtl
push
xchg
shll
dec
add
iret
push
fldcw
stos
xor
movsb
scas
jbe
jb
mov
pop
filds
cmp
sub
shrb
rcrl
push
inc
cmp
jo
mov
xlat
les
push
and
adc
inc
in
movsb
mov
negl
xchg
insl
inc
push
mov
add
mov
or
mov
or
and
js
ljmp
je
mov
mov
je
ss
mov
cltd
inc
mov
lds
rcrb
jp
jecxz
stos
in
push
cld
hlt
or
xor
iret
fcompl
loopne
dec
and
adc
mov
cwtl
dec
repz
push
enter
in
aaa
mov
rcll
cmp
loope
orl
mov
in
insb
leave
insl
out
stos
loopne
lcall
sbb
push
cmp
mov
xchg
inc
push
or
lea
or
xor
inc
std
sbb
outsb
xor
lock
out
lahf
or
or
in
mov
inc
mov
sbb
inc
mov
loop
pushl
lods
nop
leave
test
mov
sti
dec
sarl
jae
mov
or
mov
lds
cltd
mov
push
in
cmpsb
bound
cmc
out
or
and
pop
ret
mov
adc
mov
sbb
jle
xchg
je
adc
xor
repnz
or
jnp
mov
jge
call
lods
and
mov
in
test
adc
push
dec
push
mov
or
stos
cmpsb
pop
ljmp
loope
inc
or
cmp
adc
pop
test
xchg
xchg
loope
mov
cmp
mov
dec
pusha
or
mov
call
scas
daa
das
repz
fwait
inc
xor
dec
imul
cmpsl
and
cltd
ljmp
inc
mov
lret
push
add
mov
sub
int
push
sbb
xor
ljmp
out
js
xchg
popa
in
rclb
popf
shr
sbb
cmovp
ljmp
jae
stos
and
cmpsb
cmp
and
sahf
scas
pop
xor
mov
in
cmp
add
push
mov
mov
pop
mov
cmp
in
add
in
cmc
outsl
pop
sub
cltd
scas
push
jno
pushf
jmp
xor
ja
lret
mov
jecxz
loope
dec
jmp
je
je
xlat
jno
xchg
pop
jno
mov
scas
adc
jnp
pop
mov
or
fwait
cmp
or
mov
xlat
aaa
push
pusha
adc
movb
or
mov
sahf
in
inc
js
mov
pop
xchg
xchg
jnp
mov
shl
int3
cli
sub
in
mov
dec
inc
bound
pop
xchg
sti
in
fnstcw
jne
sub
lea
popf
enter
inc
cmp
push
cmp
sahf
cli
in
or
testb
cmp
jns
pushf
addb
test
fcoml
xor
addr16
aaa
test
dec
xchg
mov
xchg
jl
imul
dec
ljmp
cmp
push
imul
enter
push
or
ss
push
and
fisubl
ja
mov
je
int
cmp
mov
movd
sarl
mov
and
gs
adcl
in
inc
adc
xchg
lret
cmp
and
and
aad
ret
js
sahf
mov
jle
out
sbb
dec
add
cmp
fs
cltd
sub
lret
shr
test
push
cmp
rorl
std
adc
sub
flds
fs
aaa
xchg
xor
lods
in
movsl
xchg
sbb
pop
inc
xchg
scas
mov
insl
pop
pop
faddl
push
inc
add
pop
push
push
mov
lea
dec
jmp
or
and
rcl
pop
mov
in
popa
jo
adc
outsb
sti
cmp
inc
sti
fnstcw
xlat
add
dec
pop
idivl
xor
lret
sti
push
clc
sarl
sbb
push
mov
out
push
mov
dec
rcrl
inc
les
xchg
repz
or
xor
std
mov
add
adc
movsl
push
imul
bound
stc
outsl
mov
es
push
and
inc
fcmovu
jle
cmpsl
and
dec
gs
in
sbb
dec
stos
jne
inc
sub
push
push
adc
inc
popa
mov
and
dec
xor
loop
cmc
stos
cmp
sub
stos
clc
arpl
rol
in
aas
mov
inc
jo
mov
int3
test
fwait
cmp
mov
scas
out
add
lret
aam
dec
cltd
addb
xlat
movsb
push
mov
gs
iret
lods
jmp
stos
cmp
enter
pushf
das
pusha
rcrb
mov
jae,pt
pushf
popf
sub
sti
xchg
dec
sbbb
out
daa
dec
or
cltd
mov
pop
xchg
lret
add
out
sub
cmpsl
sub
or
insl
imul
cmpsb
inc
pop
int3
bound
xor
shlb
push
in
lcall
inc
jmp
mov
mov
cld
xchg
popa
cmp
add
xchg
and
mov
jae
xchg
xor
sbb
sbb
xor
add
cmpsb
push
adc
pop
test
dec
loop
add
inc
inc
ja
hlt
sahf
mov
out
loopne
xor
cs
test
scas
cwtl
cltd
inc
fdivr
lret
lret
jl
into
cs
or
jb
dec
xchg
xchg
ret
loope
insl
xor
mov
push
jb
xchg
idivb
rcll
pop
je
or
sbb
lret
into
sub
cs
cli
je
xor
or
mov
or
xlat
sbb
stos
cmp
pushf
pop
jp
stos
outsb
daa
cwtl
das
mov
cmp
dec
mov
rcrb
dec
adc
cmc
push
imul
xchg
lock
stc
xor
lds
cmp
xor
inc
imul
inc
sub
and
mov
data16
pop
sbbl
jg
nop
adc
dec
test
inc
cltd
sub
jle
aas
es
pop
push
mov
jle
xchg
adc
stc
jle
and
adc
mov
pop
or
pusha
inc
lods
jno
xchg
dec
dec
or
nop
sbb
repz
push
jge
xchg
shlb
mov
cmp
ja
add
dec
sbb
sbb
jg
mov
push
fucom
les
dec
jno
and
inc
adc
jmp
jp
outsl
stos
fcomip
jae
mov
inc
cmc
shll
lcall
filds
sarl
jecxz
cmp
negl
std
ja
lret
cmpsl
jp
sbb
or
call
clc
je
xor
rcll
mov
jl
ret
cwtl
movsb
xchg
jne
mov
ljmp
pop
das
inc
mov
or
mov
std
insb
loopne
cmp
jno
test
int
int3
dec
mov
dec
movsb
add
subb
hlt
fdivrl
inc
pop
xor
cmp
mov
jbe
pop
out
es
pop
and
push
xchg
push
dec
sti
cld
lahf
xorb
push
sub
inc
dec
cmp
ret
enter
sub
jge
fisubrs
ljmp
xchg
daa
xor
adc
repnz
test
mov
jecxz
aam
mov
fwait
push
sub
pushf
clc
pop
lock
mov
shll
push
ja
cmc
inc
ds
lods
pop
aas
ret
jmp
inc
iret
call
jno
adc
jmp
popa
pop
pop
jns
xchg
dec
imul
jmp
mov
or
test
pslld
mov
jae
ret
or
jne
fisttpl
jl
fdivl
gs
das
dec
mov
test
or
inc
rcr
sub
mov
aas
xlat
adcl
xor
or
es
sti
add
inc
cld
and
jae
mov
pop
jecxz
xchg
cmp
inc
inc
test
std
mov
jns
aam
popl
push
fs
adc
nop
mov
push
je
add
cli
push
sub
ret
hlt
clc
popa
sbb
pop
mov
addl
mov
inc
lods
outsb
bound
pop
lahf
stc
lret
into
ja
jge
lods
xor
aas
adc
js,pt
inc
les
mov
addr16
mov
cwtl
mov
daa
sub
loope
sub
or
cltd
inc
or
add
dec
scas
cmp
loop
insl
clc
aam
dec
and
addr16
push
fdivs
lret
mov
cld
lahf
push
sbb
aad
mov
mov
out
mov
ret
or
inc
or
dec
call
insl
xchg
shlb
adc
aam
push
insl
icebp
lret
and
into
pop
stos
pusha
lock
jp
mulb
rcrl
ja
and
mov
jg
mov
xchg
cmpsb
lods
ss
jae
sub
lods
pop
adcl
test
sub
adc
sbb
jg
pushf
cs
mov
mov
xchg
add
movsb
mov
mov
pop
xchg
jge
inc
cwtl
sub
inc
sbb
adc
stos
fists
cltd
push
dec
sbb
inc
test
inc
jmp
or
add
dec
fadds
shlb
pushf
mov
mov
es
xor
xchg
xchg
jo
add
cmp
mov
cmp
xchg
or
out
shrl
mov
jecxz
sub
xor
imul
lcall
or
push
push
adc
ss
clc
xchg
std
fisttpll
pusha
pop
ficompl
push
sub
movsl
mov
pop
rcr
jecxz
pop
icebp
outsl
push
push
push
pop
cli
mov
je
clc
movsl
mov
cwtl
mov
fcomi
inc
sarl
and
les
sbb
and
xchg
fs
jns
enter
push
sub
stos
mov
ljmp
cmp
ret
mov
mov
mov
in
add
jg
fldenv
push
orb
fstpl
aam
cmpl
bound
lds
in
xchg
arpl
sbb
xchg
xor
int3
sbb
imul
clc
ja
jp
pushf
ret
or
fstl
pop
add
add
pop
into
sbb
rcr
in
mov
clc
dec
cmp
fnstsw
fnstcw
lods
ds
cmp
inc
mov
or
mov
xchg
mov
push
push
mov
jecxz
mov
add
scas
insl
mov
test
out
jle
data16
leave
ffree
js
out
mov
dec
mov
add
inc
lock
dec
out
ja
lahf
mov
scas
popf
dec
pop
add
push
xchg
sub
jno
test
rcrb
arpl
gs
enter
adc
ds
stos
or
adc
mov
or
sahf
pop
loop
mov
push
dec
dec
mov
pop
jb
mov
xchg
mov
rcll
test
push
push
arpl
cmpsl
in
ret
ret
mov
mov
bswap
inc
cmc
pop
hlt
push
inc
repnz
pop
loope
pusha
mov
je
nop
insb
add
leave
and
into
insl
mov
cmp
add
sub
push
lcall
je
inc
and
clc
cwtl
addl
jge
dec
fwait
leave
pop
sbb
scas
xlat
iret
sbb
fldcw
jl
movsl
mov
xchg
adc
ja
jge
fst
popa
je
arpl
push
pop
daa
dec
and
loop
xor
push
je
and
xchg
aad
sbb
fs
test
ficomps
jge
in
repnz
popa
mov
dec
mov
pushf
sahf
out
in
pop
loopne
pusha
test
add
mov
cmp
lea
bnd
cwtl
into
inc
mul
ds
cltd
cmp
jns
cmpsl
imul
jp
loopne
sahf
and
movsl
fisttpll
ss
movsl
or
push
jnp
pop
xchg
roll
sub
cmp
xorl
mov
dec
aas
cmpl
rol
add
inc
pusha
jmp
lret
outsb
hlt
mov
imul
inc
xlat
aad
movsl
xchg
dec
xlat
dec
lods
dec
mov
mov
mov
adc
mulb
xor
std
mov
stos
hlt
mov
xchg
pusha
roll
push
ljmp
mov
subb
ljmp
lahf
push
call
in
mov
or
xchg
hlt
adc
xchg
mov
shrl
push
dec
fadds
mov
popf
xchg
loop
loope
sub
loopne
imul
mov
jbe
xor
stos
lds
mov
loop
mov
jmp
add
cmp
or
repz
cwtl
mov
fldt
sbb
stc
es
fiaddl
cld
inc
dec
movsb
jno
mov
mov
sub
cmp
daa
aas
sbb
jg
loope
arpl
icebp
int
cwtl
test
in
sarl
insb
push
add
push
mov
xchg
in
xor
aad
jmp
or
popa
xor
pop
lcall
cmp
stc
frstor
mov
cmpl
fcoms
dec
sub
pop
pop
call
cmpl
rcrb
push
push
insb
adc
sahf
jns
and
scas
dec
xor
lret
inc
data16
insl
lcall
popa
ljmp
popa
mov
add
ja
aad
add
cwtl
popa
das
push
xchg
xchg
mov
fwait
or
pop
mov
lcall
data16
outsb
push
push
iret
call
jnp
sub
fst
and
inc
addl
popa
inc
sub
fcomip
dec
test
dec
lcall
xchg
sub
sbb
mov
fists
into
lret
jae
push
out
push
lret
push
mov
fdivs
lods
dec
push
std
fsubrs
cli
movsb
int
stos
pop
pop
dec
add
pop
sbb
xrelease
imul
cltd
and
and
stos
fs
cwtl
jmp
das
sbb
inc
jecxz
int
jno
adc
shl
xchg
cwtl
js
and
jg
adc
mov
dec
psraw
imul
fcmovbe
dec
insb
fcomi
mov
mov
lcall
ja
push
mov
mov
jne
sub
or
add
push
and
ljmp
es
nop
mov
dec
pushf
jl
lods
pop
sbb
je
pop
pop
jmp
popa
scas
mov
in
dec
jge
adc
cmpsb
movsb
enter
cmp
inc
push
dec
pusha
mov
cmpb
add
scas
pusha
jmp
pusha
out
icebp
xchg
lcall
xchg
fwait
jp
dec
sti
std
pop
ljmp
ja
mov
fidivl
imul
sahf
jle
sahf
sub
mov
mov
bound
repz
adcb
subb
stos
shll
xchg
div
nop
inc
adc
mov
aaa
ljmp
vmovups
or
loope
in
jno
lea
dec
std
sbb
mov
and
in
cmp
xor
ja
jg
adc
insb
jmp
pop
inc
call
das
mov
add
inc
jae
aad
adc
adc
test
push
lahf
push
xchg
jle
cmp
cwtl
les
and
out
cmp
mov
or
fisttpl
mov
xchg
stos
fimull
pop
and
cmp
sbb
fstl
mov
dec
es
mov
or
inc
addr16
shr
stos
sub
pop
mov
into
lret
mov
repz
popf
mov
std
cmp
test
fwait
scas
mov
aad
int
jo
adc
out
xor
daa
stos
fisttpl
cld
dec
cmp
push
jge
gs
dec
aam
movsb
insb
shrb
cmp
fcomps
add
stos
add
add
mov
ds
push
rclb
push
adc
mov
testb
mov
aad
jns
and
adc
or
aad
and
pop
leave
and
idivl
in
push
push
cmpsl
or
adcb
pusha
jmp
lds
jmp
imul
and
sub
test
cld
inc
sahf
mov
imul
mov
fwait
cli
add
lcall
subl
iret
sbb
repnz
pop
dec
adc
sbb
inc
ret
aaa
xchg
fmul
dec
decl
imul
es
sub
sbb
mov
clc
cmp
jecxz
ds
stos
mov
xlat
addr16
pushf
daa
lea
js
mov
gs
pop
hlt
jmp
mov
xchg
jnp
mov
inc
mov
and
jmp
imul
xlat
leave
out
das
lcall
mov
pop
je
inc
into
cmp
add
loopne
pop
into
xchg
ret
push
inc
test
jl
dec
mov
shll
test
lods
add
ja
mov
sti
dec
stc
ss
out
cs
cmpsl
add
addr16
xchg
xor
xchg
cmp
sbb
add
add
xor
xchg
mov
xchg
mov
pop
xor
add
dec
adc
and
leave
pop
in
mov
sub
inc
inc
mov
fnsave
cs
stos
mov
insl
xchg
jg
fldcw
push
lods
repnz
and
subl
imul
addb
gs
daa
mov
ss
inc
sub
inc
push
sbb
mov
push
pop
and
cwtl
xor
inc
shlb
mov
adc
adc
or
push
in
stc
sbb
aam
xchg
adc
xchg
shll
jmp
xor
insl
or
fstps
xchg
lea
sub
or
adc
stos
push
add
xchg
mov
ss
in
movsb
jno
dec
xor
aad
lods
jmp
sahf
enter
sub
idivb
jg
sub
mov
sbb
push
or
inc
loop
outsb
add
je
push
fcmovne
or
mov
xchg
popf
mov
and
or
pop
inc
push
add
pop
push
hlt
into
lcall
or
scas
std
nop
xchg
test
jle
scas
add
outsl
push
lea
jg
or
pop
add
test
cld
and
cmp
push
pop
pushf
cmpsl
mov
lea
shl
pop
inc
pop
cmp
sbb
mov
pop
inc
and
push
icebp
es
iret
push
mov
hlt
jecxz
loop
jae
push
lds
es
jno
dec
adc
sub
xorb
cmpsb
out
iret
or
js
movsb
jbe
add
mov
mov
jmp
imul
jl
push
dec
and
add
push
cmpsb
int3
push
pusha
jmp
pushl
xlat
adc
arpl
inc
dec
loopne
rcr
jp
jl
cmpsl
gs
adc
and
cmp
sub
jnp
subb
and
mov
jg
xorl
ja
sahf
fwait
mov
lret
in
stos
fcoml
sbb
ss
and
sti
aas
ret
adc
adc
push
mov
int
lahf
mov
cmp
js
out
mov
dec
xor
inc
sub
push
sahf
filds
add
dec
xchg
mov
jmp
fldt
push
rclb
in
cmp
jnp
mov
scas
adc
pop
xchg
inc
push
inc
out
push
dec
inc
stos
mov
jg
or
lds
sub
push
jo
push
pusha
loop
xor
loopne
mov
mov
mov
and
or
decl
dec
insb
lahf
in
or
mov
fs
iret
mov
dec
je
mov
in
dec
lock
jle
lods
lods
xor
gs
js
mov
inc
je
dec
inc
cmpb
out
test
aad
mov
int
add
mov
cmp
jb
push
test
xlat
out
out
ficoms
int
jp
daa
xor
clc
es
loop
add
loopne
pop
xor
mov
ret
pop
sub
mov
sbb
cltd
loope
mov
push
ljmp
mov
cmp
add
in
pop
iret
loope
repz
mov
inc
sub
es
rolb
testb
sbb
pop
sub
push
fdivs
cmp
pop
lods
cmpl
inc
jp
pusha
decl
fidivl
je
sub
cli
cmc
jo
pop
push
xchg
push
aaa
sbb
imul
adc
les
add
jbe
mov
fsubr
jge
arpl
add
mov
dec
mov
stos
mov
je
and
adc
or
mov
aad
sbb
pop
jle
sti
and
dec
jbe
xchg
or
maskmovq
testl
push
push
insb
xorb
xor
pop
jae
xor
mov
fwait
and
insl
in
cmp
in
jle
inc
shrl
mov
jge
cmp
aad
sbb
mov
push
fidivrs
and
push
and
imul
inc
push
push
sbb
sbb
sbb
mov
sbb
insb
add
test
stos
rorb
sahf
jbe,pt
adc
lods
scas
aaa
outsl
sub
push
cmp
fs
iret
mov
data16
fcmovu
lcall
sub
sti
lock
into
lcall
insl
call
sbb
lret
add
inc
jmp
xchg
sbbb
pusha
insb
pop
sarl
mov
out
ja
andl
mov
outsb
sub
addr16
pushf
sbb
cmp
inc
inc
leave
dec
push
add
mov
xor
pop
sbb
cltd
pusha
lahf
push
and
pop
aas
ss
popa
lock
pop
push
aad
fxtract
fistpll
inc
pop
xlat
mov
mov
adc
fs
shll
dec
or
jecxz
les
sahf
or
stos
xchg
insb
ss
and
adc
das
out
pop
xchg
cmpsb
fldt
mov
inc
cmp
ja
out
test
or
push
inc
loope
cmp
cmp
jmp
mov
dec
pop
sub
outsb
cmp
ret
dec
jbe
pusha
pop
xor
pushf
iret
popf
mov
dec
cmp
gs
pop
out
pop
out
sub
add
push
and
or
mov
out
into
ljmp
cwtl
es
jle
jecxz
insl
mov
pop
push
sbb
add
jns
outsb
and
push
incl
loope
mov
jnp
icebp
xchg
movsl
fcoml
jle
rorl
adc
push
push
outsb
add
mov
xlat
jle
jae
mov
lret
add
int
xchg
jns
fsubrs
mov
fdivs
mov
clc
xlat
adc
push
repnz
leave
mov
adc
fwait
push
mov
fwait
and
fmuls
dec
pop
push
ja
pop
test
shlb
mov
test
mov
fwait
std
mov
iret
push
cmpsb
cmpsl
call
pop
pop
das
fcomps
ret
jg
outsl
xchg
pop
orb
bound
xor
and
adc
add
repnz
loop
rcrb
ret
jg
outsl
xchg
pop
orb
bound
xor
and
adc
add
repnz
loop
rcrb
ret
jg
outsl
xchg
pop
orb
bound
xor
and
adc
add
repnz
loopne
rcrl
ret
jg
outsl
adc
lea
inc
clc
inc
ja
adc
and
xor
int3
int3
int3
outsb
je
insb
insb
cs
insb
add
in
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
movl
movb
mov
movzbl
mov
sub
movzbl
sub
test
je
mov
add
mov
push
pushl
call
mov
andl
push
push
push
pushl
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
pushl
call
mov
pushl
pushl
pushl
pushl
pushl
call
push
pushl
call
mov
push
pushl
call
mov
call
mov
push
pushl
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
andl
jmp
mov
inc
mov
mov
sub
mov
add
mov
movzwl
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
and
mov
call
andl
jmp
jmp
pushl
call
cmpl
jb
mov
leave
ret
cmp
or
ds
xlat
mov
pop
mov
sti
addr16
fildl
push
cmp
or
pop
dec
scas
mov
pop
mov
sti
or
ja
inc
lret
push
cmp
or
pop
dec
xlat
mov
jne
jbe
xor
and
aam
push
imul
dec
mov
jns
jno
push
into
fsubrs
and
addr16
int3
mov
mov
xchg
aas
out
fildl
jb
iret
mov
enter
jae
daa
mov
ret
out
mov
and
xor
cmpb
loope
pop
jb
ja
ret
jle
sub
jnp
jnp
movsl
lods
and
sti
fdivrs
testl
rcrl
jno
xor
shrb
pop
lods
dec
imull
clc
add
jbe
jmp
test
pop
xchg
jmp
and
aas
movsb
iret
rclb
dec
add
daa
jmp
fildl
inc
cmpsl
sub
jnp
imul
dec
xlat
mov
pop
mov
sti
addr16
fildl
jge,pt
inc
idivb
outsb
xchg
pop
andb
orl
ss
out
sahf
and
adc
ret
dec
loop
xchg
cmp
scas
dec
mov
insb
test
jb
or
cmp
dec
pushl
or
jnp
imul
dec
xlat
mov
pop
mov
sti
addr16
fildl
push
cmp
or
pop
dec
xlat
mov
pop
mov
sti
addr16
fildl
push
cmp
das
push
mov
imul
das
and
icebp
add
mov
daa
dec
popa
cmpsb
mov
or
inc
cmpsl
icebp
pop
xchg
enter
xor
popf
jno
push
imul
lahf
mov
mov
xchg
push
movsl
cmp
scas
and
movsl
push
out
mov
ja
pop
sub
arpl
outsl
loop
jae
adc
xor
add
sub
je
inc
mov
cmp
fistps
rcrb
fistpl
sub
loop
cli
loop
scas
mov
mov
xchg
ss
push
add
jmp
aas
aam
add
mov
cmp
mov
repz
addr16
cld
orb
xor
dec
cmp
dec
movsl
dec
lahf
movsb
pop
loop
test
test
dec
push
dec
test
jb
inc
aas
cmp
fsubr
int3
cmp
sub
xchg
or
cmpsl
push
pop
dec
dec
cmp
xor
lock
inc
fs
pop
int
dec
mov
test
les
lods
es
mov
sub
xchg
sar
sahf
push
or
pop
mov
sbb
hlt
jle
ret
sti
sbb
xor
cld
arpl
sub
sub
cmp
ds
pop
push
push
mov
les
mov
jo
inc
adc
pop
adc
daa
inc
int3
xor
jmp
shll
push
sbb
scas
repz
xchg
mov
pop
addr16
cs
aas
aad
jo
xchg
jmp
add
mov
mov
cmp
int
cltd
pop
jge
aad
sbb
push
xor
jne
adc
xchg
sbb
insb
adc
mov
mov
popf
and
dec
lret
jb
ret
add
in
mov
mov
testb
xchg
ret
bound
push
push
mov
dec
lret
adc
cmp
mov
sahf
xlat
jl
mov
jbe
push
dec
outsb
push
pusha
es
into
mov
push
push
inc
ljmp
call
inc
cltd
mov
sbb
loopne
adc
sar
loope
imul
imul
cli
dec
lds
jne
mov
imul
lock
negl
adc
xchg
int3
test
popf
inc
pop
mov
add
cmp
popf
movsb
jg
shll
out
push
rorb
pop
cli
sbb
cmp
and
pop
xchg
daa
addr16
jns
inc
shll
pusha
ja
fisttpll
cmp
mov
fcomps
sub
clc
sub
mov
addl
pop
les
add
push
dec
inc
clc
push
mov
mov
dec
or
std
cmc
sbb
push
cmp
scas
ret
lock
in
addr16
sbb
je
out
or
mov
mov
dec
jg
arpl
jno
jle
mov
cmc
dec
hlt
push
push
fxch
mov
push
cmp
inc
ja
pushf
mov
pop
dec
push
imul
push
jns
jnp
mov
jge
inc
test
dec
jno
loope
sahf
and
xor
cmp
pop
push
xchg
je
faddl
fmuls
repz
out
js,pn
push
adcl
out
lret
jle
add
adc
inc
ret
inc
xor
sbb
lods
loopne
mov
fnsave
fcmovu
push
add
ss
addb
inc
dec
push
adc
lret
cltd
sbb
icebp
loop
xchg
pop
inc
fistps
cs
repnz
dec
dec
mov
mov
pushf
mov
andl
rolb
add
stc
pop
imul
inc
call
in
cwtl
loop
daa
mov
xchg
rcrb
outsl
lock
dec
pop
imul
lds
sbb
mov
inc
sti
outsb
lock
dec
and
jge
scas
xchg
mov
hlt
push
test
or
popa
push
cmp
test
ds
dec
popf
mov
ja,pn
push
push
or
jle
inc
fistps
clts
xchg
decl
in
popf
pusha
adc
int
pop
mov
out
mov
lods
mov
aam
scas
push
rcll
or
scas
jle
out
fdivr
cli
xchg
mov
test
cmp
pop
pop
lds
stc
fistpl
sbb
adc
lds
mov
sbb
pop
and
pusha
les
mov
pop
test
in
push
inc
dec
mov
int
mov
in
clc
push
out
inc
cli
stc
test
int
in
int3
pop
mov
cli
jb
insb
cmpsb
stos
sti
int3
mov
mov
scas
xchg
icebp
aam
jae
mov
xchg
inc
loope
push
movsl
xchg
hlt
or
xor
cmp
scas
dec
sub
stos
mov
out
push
mov
push
xchg
mov
mov
pop
mov
rclb
lock
testb
mov
mov
call
jns
pop
dec
icebp
pop
fidivrl
test
adc
adc
mov
xor
test
xchg
xorb
xorb
ds
aam
pop
dec
cmp
cs
shll
daa
pusha
xchg
out
and
xchg
insb
pop
nop
adc
pinsrw
lods
dec
dec
or
xchg
pop
or
adc
mov
push
sub
push
dec
mov
aas
in
mov
stos
adc
pop
adc
call
sub
cmp
shl
sbb
adc
push
or
or
mov
mov
xchg
jne
adc
inc
or
imul
aad
and
scas
js
inc
push
and
fcoml
jle
xor
mov
out
cmp
pop
mov
xor
and
inc
cld
xchg
mov
jb
leave
addb
pop
pop
pop
and
sub
subl
cltd
cld
out
ret
xor
inc
jmp
fsubrs
shlb
test
fnsave
mov
mov
test
rcl
ret
insl
xchg
and
mov
sbb
lock
xchg
add
sbbl
add
xor
xchg
movsb
test
clc
shll
adc
mov
pop
pop
int3
ss
push
dec
or
ret
add
out
cmc
push
push
and
ljmp
in
loopne
jae
push
fwait
or
aas
xchg
inc
jmp
jnp
int3
mov
daa
sbb
hlt
cld
ret
icebp
loopne
cmp
js
mov
outsb
pop
or
sti
lock
jp,pn
pop
cmp
and
dec
mov
orb
testl
push
cmp
sbb
rcrl
icebp
sub
test
push
push
sbb
mov
clc
mov
sbbb
push
mov
scas
xlat
pop
aas
push
or
rcrl
mov
fsubs
ret
xchg
mov
inc
cmp
add
int
fstpl
pop
pop
jge
pop
xchg
jle
inc
scas
xor
daa
lock
pushf
fdivrl
decb
mov
xchg
repz
mov
pop
xchg
push
jp
adc
pop
sub
sbb
pop
imull
les
sub
in
lret
xchg
push
jmp
mov
aaa
add
ret
sub
ljmp
sub
inc
sub
inc
nop
fcoms
aad
ja
hlt
es
and
adc
test
dec
fsubrl
push
cmp
repnz
mov
sbb
mov
repz
rorb
jge
pop
lods
pop
rcrb
das
and
sub
mov
mov
jnp
pop
add
fsubl
sahf
aad
pop
test
stos
repz
cli
jns
xor
add
inc
clc
repz
adc
mov
xchg
sbb
push
bound
adc
movsb
jmp
sub
xor
jmp
xor
stc
mov
adc
jmp
cmp
pop
scas
mov
jns
in
adcb
sub
pop
mov
sbb
in
bound
xchg
cmp
inc
test
out
scas
mov
push
push
push
pop
sub
mov
xchg
or
inc
ds
out
jle
test
sbb
mov
cltd
js
mov
and
inc
test
fld
mov
push
jge
push
mov
clc
sub
dec
and
dec
jbe
or
xchg
mov
jnp
cmp
test
sbb
clc
xor
xor
fucomp
sub
or
pop
add
jle
fisttps
mov
test
mov
cmpsb
scas
sub
mov
mov
addr16
mov
mov
lahf
aad
imul
or
dec
loop
cmp
sbb
fbld
pop
mov
addr16
cmp
call
cmp
mov
or
xchg
jb
mov
pop
je
dec
jmp
mov
xchg
outsl
leave
jle
bound
pop
gs
dec
lods
outsb
inc
add
inc
cmpsb
data16
int3
lret
and
ja
fwait
lret
and
rep
fdivr
outsb
cmp
ret
jmp
or
dec
loop
test
cmp
bound
arpl
cmpsl
cmp
mov
mov
hlt
pusha
insb
mov
arpl
inc
xor
push
add
rcrb
inc
dec
fiadds
mov
xor
jb
jnp
mov
pop
arpl
cmp
inc
aad
popl
es
push
gs
test
pop
dec
stos
shlb
adc
push
and
push
dec
mov
mov
inc
aad
lret
push
les
jne
leave
out
pop
stos
imul
dec
cmc
xor
pop
ret
clc
jbe
xchg
inc
push
or
data16
xchg
pop
pop
stc
addr16
add
mov
sub
cmp
into
inc
push
mov
cmpsl
stc
mov
fldenv
roll
push
outsb
out
lds
push
and
cwtl
lods
push
daa
repz
mov
and
mov
add
clc
arpl
subb
call
cwtl
loop
int3
lods
adc
cli
int3
jae
mov
or
jmp
add
sub
aaa
loop
jne
jg
pop
pop
xchg
aad
adc
sub
subl
jg
cmp
fdivrl
mov
sbbl
ret
mov
gs
dec
xor
mov
inc
ja
cld
dec
xlat
mov
or
pop
inc
jnp
call
in
shlb
ljmp
sub
push
inc
adc
lahf
lock
push
push
lret
rol
pop
test
lahf
push
mov
push
fwait
ljmp
repnz
sub
out
imul
push
cmp
mov
or
mov
xor
mov
cmp
es
sub
fidivs
mov
mov
sbb
fyl2x
mov
js
addb
cmpsb
jae
xor
dec
sar
loop
inc
dec
mov
fs
xchg
xchg
mov
sbb
inc
or
js
dec
sbb
addl
adc
mov
int3
pop
je
xchg
out
mov
cmp
movsl
cld
fisttpl
sub
fbld
in
rep
pop
push
adc
repnz
cmp
in
add
call
mov
xor
outsl
cmpsb
or
or
sub
dec
jecxz
fcompl
clc
inc
test
push
lods
std
dec
inc
jbe
mov
dec
pop
cwtl
out
xchg
hlt
ljmp
fs
adc
xor
push
pop
cmpsb
rorb
daa
mov
pop
rolb
jmp
movsb
fsub
mov
movsl
aas
push
mov
cmp
xlat
dec
adc
scas
cmp
out
inc
mov
push
lods
push
inc
orl
push
adcl
shrb
jb
push
adc
sbb
iret
pop
mov
sbb
jmp
lock
mov
sbb
jmp
rcl
icebp
insl
mov
out
insb
lds
xorl
jl
lcall
xor
call
loopne
aam
cli
mov
pop
or
sub
sahf
xor
dec
pop
dec
xor
cmpsb
outsb
cmp
js
scas
push
lods
call
xchg
out
cmpsl
aam
inc
imul
push
rclb
aad
pushf
test
sub
ds
stc
mov
mov
ret
add
and
mov
or
xor
imul
aam
or
in
dec
xchg
sub
lcall
jp
xchg
mov
in
or
sbb
jge
ja
fwait
dec
test
push
push
iret
xchg
out
cmc
or
or
mov
test
mov
xchg
adc
outsl
push
lret
and
stc
mov
jne
pop
sarb
ret
xor
mov
mov
sbb
nop
add
fidivs
shll
mov
cmp
repz
xor
add
hlt
cmpsb
shll
jmp
xchg
mov
xchg
add
nop
nop
jae
fildl
mov
inc
xchg
stos
lods
xlat
ficoms
sub
xor
adc
stos
adc
fs
dec
jge
pop
or
or
mov
add
dec
mov
pop
scas
inc
test
or
das
xor
sub
out
dec
fwait
int
ss
xchg
mov
pop
fs
mov
jno
and
jmp
enter
sub
sub
movsl
pop
insl
aaa
fs
mov
and
out
pop
jnp
dec
mov
outsb
fidivs
popf
add
ljmp
dec
mov
loopne
push
mov
mov
pop
push
stos
or
popa
ficomps
imul
in
shlb
mov
in
mov
lret
pop
mov
push
cmp
jno
jmp
sbb
xor
lock
push
adc
in
je
push
cmova
inc
inc
test
dec
add
mov
cld
sbb
xchg
jl
imul
leave
movb
rolb
pop
and
daa
pop
xchg
mov
xor
out
enter
and
push
jne
jne
es
js
lret
daa
inc
or
pop
stos
xor
popa
loopne
mov
aad
pushf
pop
mov
shlb
outsb
dec
lret
xchg
data16
jle
sub
dec
jo
jecxz
cltd
add
test
jns
cmpsb
je
out
jnp
push
dec
jmp
stc
jmp
sbbl
outsl
iret
pop
jnp
jle
adc
lret
pushf
pop
addr16
push
addr16
cmpb
sub
jmp
shll
mov
les
out
mov
xor
mov
pandn
aas
pushf
lret
push
mov
imull
subb
lock
popa
cmpsb
jae
adc
add
into
lds
pop
cmp
je
fists
cltd
or
mov
adc
sti
mov
jg
sub
fisubrl
popa
cmp
rcr
cmp
sbb
dec
add
or
jo
sub
popa
sti
pop
push
pop
pop
sub
rorl
xorb
movsl
and
fimull
fsubrs
adc
pusha
push
lahf
jecxz
jmp
cmc
xor
ret
out
mov
orl
cltd
or
das
shl
add
lods
sub
mov
lcall
sub
sbb
inc
es
jp
jns
xchg
pop
inc
cmp
cmp
mov
mov
arpl
repnz
imul
into
scas
testl
xor
out
xchg
popa
lods
adc
sahf
mov
fstl
inc
hlt
jno
push
dec
daa
mov
clc
insl
pop
les
adc
shlb
sti
jl
cmp
scas
mov
insl
out
jmp
xor
mov
lahf
dec
in
mov
jl
push
aad
cmp
inc
push
adc
xor
ljmp
or
jns
ret
ds
int3
xor
mov
add
movsb
shl
je
xchg
and
jge
nop
lahf
sub
enter
mov
incb
jmp
in
int3
dec
repz
mov
sub
adc
cmpsb
jle
jl
in
xchg
pop
loop
aam
pop
mov
or
cmpl
inc
popa
push
lea
cmp
iret
insl
mov
sbb
jns
or
or
push
mov
movl
cmp
icebp
cmp
test
jno
fistpl
or
lds
adcb
sub
sub
lcall
cwtl
mov
jp
imul
out
adc
int3
push
call
cli
push
sub
ja
cmp
inc
jl
fwait
jmp
add
mov
push
inc
adc
xor
lcall
int
fs
stc
xor
fstl
add
jmp
ret
adc
add
mov
push
and
adc
push
daa
adc
mov
imul
jbe
iret
in
push
arpl
scas
lahf
in
pop
jp
fimuls
pop
bound
divb
push
sub
testl
and
cwtl
gs
cmp
arpl
xchg
inc
sub
iret
jno
inc
jae
and
lods
dec
mov
xchg
roll
pop
inc
jmp
jecxz
cmp
lea
jae
sub
sub
jge
push
int3
inc
loope
aaa
std
sub
jg
out
ljmp
mov
mov
push
ljmp
push
loope
in
adc
out
jne
and
mov
pop
js
jle
dec
adc
addr16
or
add
popa
adc
push
inc
xchg
xchg
lahf
adcl
mov
outsl
mov
icebp
mov
hlt
mov
test
add
out
xor
fidivl
subb
nop
out
cmp
or
jne
es
xor
imul
mov
ds
fimull
add
shl
inc
mull
loopne
aaa
stos
fsubs
push
std
pop
mov
lcall
sbb
jns
std
imul
add
ficoml
aad
sarl
in
mov
enter
cltd
push
push
dec
push
outsl
fisttps
bound
cmpsb
mov
mov
mov
mov
fnstenv
mov
cmpsl
cmpsb
mov
sbb
sub
test
lahf
xchg
push
out
dec
enter
rolb
xchg
lret
inc
fcomps
cltd
pop
pop
mov
dec
mov
test
dec
stc
push
xchg
mov
dec
psrld
mov
mov
xchg
jmp
mov
adc
mov
ss
cld
aaa
mov
out
add
cmp
loop
mov
jg
out
in
adc
sub
and
cltd
jns
rorl
fists
push
insb
pushf
test
mov
push
fs
cmp
cmp
xchg
cmpsl
stc
cltd
icebp
adc
xor
sbb
lock
xlat
add
and
sub
mov
rcll
fs
jmp
popa
xor
xchg
dec
adcl
test
dec
aam
dec
imul
addr16
sbb
rorl
sub
dec
inc
add
xchg
insl
les
mov
scas
sub
xchg
pop
dec
jl
inc
lret
push
fisubl
icebp
push
les
xchg
mov
int
das
pop
stos
sub
movsb
adc
pop
add
and
loop
cmp
mov
and
dec
rclb
scas
shrl
adc
dec
cmp
in
cmp
push
or
xchg
sahf
fs
mov
push
adc
into
mov
or
mov
scas
imul
pop
movsl
cmpsb
mov
sbb
jg
ret
push
sahf
cmp
xor
lret
mov
sbb
daa
mov
inc
jo
lret
scas
dec
mov
fs
xor
popa
sbb
aaa
in
xchg
sub
and
not
jecxz
stos
add
imul
adc
adc
dec
and
inc
mov
ds
mov
ficoms
int3
les
adc
imul
mov
jge
jg
imul
incl
mov
shll
jo
daa
pop
mov
in
sub
fs
mov
inc
adc
xor
pop
mov
lods
and
outsl
mov
mov
or
mov
das
pop
aad
fldenv
fstpt
xchg
mov
loopne
mov
sbb
inc
pusha
mov
cmp
sbb
aas
sbb
in
mov
outsb
mov
out
stos
adc
insl
lods
test
xor
or
je
and
jns
cmp
cmp
jb
jl
xor
repz
inc
mov
iret
clc
mov
pop
xor
adc
jmp
or
lret
inc
push
jmp
jmp
jno
push
icebp
jnp
imul
aad
mov
rorl
aam
imul
rorb
mov
sbb
xchg
dec
and
sbb
std
mov
mov
je
pop
jl
push
add
sub
and
lock
adc
subl
in
or
lcall
stc
mov
movsl
ss
in
icebp
getsec
pop
es
xchg
fnstcw
not
inc
and
test
push
mov
scas
lock
mov
jl
dec
xchg
rorl
les
int
jl
push
cmp
mov
idivb
in
imul
and
hlt
aam
jae
std
xlat
xor
out
loope
mov
test
outsl
les
xor
subl
scas
dec
pop
xchg
pshufw
lods
push
test
push
mov
mov
xor
cmp
or
cli
fnsave
testl
movsb
dec
dec
fildl
inc
daa
xchg
std
mov
inc
jmp
sahf
dec
pop
cmp
xchg
sub
nop
dec
dec
jns
or
inc
hlt
sahf
inc
xlat
inc
or
andl
lods
repz
xchg
lods
pop
fwait
mov
aad
xor
xor
dec
push
loopne
aad
imul
mov
stc
push
sbb
push
testl
imul
sbbb
out
cmp
movsl
xlat
fneni(8087
movsl
pop
pop
inc
jp
sbb
js
xor
sub
cmp
sbb
adc
popf
ds
aas
imul
mov
push
or
sub
scas
ret
mov
mov
and
stos
jl
into
and
sub
pop
int3
pusha
cmpsl
sbb
cs
je
rolb
mov
fistps
arpl
popf
dec
jecxz
out
das
nop
test
call
sub
std
lcall
jmp
pop
add
mov
or
dec
ja
or
out
aad
ss
aad
leave
mov
or
cld
dec
and
add
pop
xchg
mov
shr
cmp
jge
gs
adc
scas
int
cmp
pusha
and
mov
addr16
in
and
shrl
mov
subl
pop
xorb
sub
mov
imul
ds
push
adc
stc
aad
int
repz
cmp
add
sub
mov
mov
std
jnp
out
sbb
xor
pop
jecxz
rcr
and
adc
jmp
jg
inc
or
inc
pop
popa
inc
mov
mov
ret
pushf
ret
and
add
bound
repz
mov
dec
jb
loope
xchg
int3
dec
pushf
clc
sbb
cltd
or
popf
shlb
sbb
mov
mov
and
les
push
leave
fldcw
pop
jbe
cmpl
ss
add
push
ficoml
inc
aam
nop
mov
jo
xchg
xor
add
push
and
js
ret
or
fsubrs
idivb
pop
popa
int3
das
xchg
sbb
rclb
rorb
cltd
outsb
mov
add
cld
xchg
sub
pop
cmpsb
cmp
sub
jae
test
cld
js
fsubs
lods
sti
sahf
mov
or
in
and
mov
orb
fdivrl
int
ret
mov
or
icebp
xor
jo
push
sbb
sub
cli
mov
test
out
jmp
pusha
mov
push
sbb
sub
pop
xchg
dec
push
pop
jns
sti
pop
xor
fnstcw
lcall
cld
and
aaa
pop
jmp
movb
pop
mov
mov
cld
mov
dec
mov
lret
or
mov
push
jbe
fisubrs
and
loop
or
push
add
lods
pop
jbe
int3
mov
insl
mov
dec
imul
adc
xlat
inc
aaa
xor
jns
inc
repnz
mov
ja
or
push
sub
lahf
dec
in
ret
sub
cs
gs
decb
add
mov
add
hlt
dec
adc
aas
push
sahf
mov
mov
les
stos
jo
pop
mov
dec
and
add
push
xor
inc
lcall
mov
lds
imul
sub
dec
test
lea
out
or
jnp
cs
dec
cli
jge
pushf
stc
orb
mov
mov
aad
inc
stos
xchg
out
rcll
inc
cwtl
cmpl
test
fidivrs
lock
arpl
ja
and
aaa
lcall
mov
inc
jge
insb
mov
xchg
xchg
mov
dec
cmp
lret
in
mov
adc
icebp
or
sahf
inc
xchg
push
xchg
or
mov
sub
lret
cmp
int
or
push
push
inc
addr16
and
into
cli
fcompl
inc
or
ljmp
mov
cmp
mov
xchg
push
scas
inc
gs
sub
xchg
pop
call
cmp
push
ret
pop
and
adc
movsb
and
lret
sarb
or
mov
rorb
loop
cld
int3
jbe
cmc
repz
mov
popa
xchg
out
adc
add
decb
push
inc
push
push
daa
jnp
clc
lods
ljmp
fisubs
adc
out
xor
cld
cmp
scas
mov
or
push
xchg
pop
imul
imul
mov
sbb
in
mov
push
inc
xchg
xchg
jnp
imul
dec
xlat
mov
pop
mov
sti
addr16
fildl
push
cmp
or
pop
dec
xlat
mov
pop
mov
sti
addr16
fildl
push
cmp
or
pop
dec
xlat
mov
pop
mov
sti
addr16
fildl
push
cmp
or
pop
dec
xlat
mov
pop
mov
out
arpl
int3
int3
int3
int3
