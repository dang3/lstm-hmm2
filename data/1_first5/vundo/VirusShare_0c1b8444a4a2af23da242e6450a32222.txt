inc
add
add
push
inc
add
add
add
push
lock
or
cmp
nop
add
lock
or
jo
cli
add
sbb
inc
add
add
add
or
add
push
push
add
add
add
or
add
or
add
or
pusha
add
wrmsr
add
add
out
cmovo
pop
or
add
or
add
add
fwait
add
and
fisttps
pusha
add
or
add
add
rolb
jg
and
jl
mov
mov
pusha
add
push
mov
clc
pop
mov
add
adc
mov
adc
movsb
add
add
rolb
or
add
add
lock
mov
add
loopne
and
rolb
add
and
lods
or
add
or
mov
pusha
add
push
inc
add
add
rolb
or
add
or
add
inc
add
rolb
fldl
push
add
jo
dec
or
add
add
nop
add
add
add
rolb
add
adc
lock
push
xor
stos
or
cmpsl
add
add
mov
dec
or
add
add
push
adc
pop
or
add
or
pusha
add
or
add
xor
lret
add
add
add
add
lods
repz
add
add
add
or
mov
add
push
jo
inc
add
add
or
add
add
add
wrmsr
add
add
incl
mov
sbb
add
or
add
add
add
push
rolb
sbb
push
jo
xlat
add
add
push
add
pop
mov
fiaddl
rolb
mov
cmovo
xchg
or
add
and
dec
add
or
add
or
add
add
add
add
add
or
mov
add
add
add
add
add
push
or
mov
add
push
adc
mov
jo
push
or
add
xor
inc
add
add
lock
or
in
movb
mov
movl
mov
mov
push
popl
call
mov
push
popl
cmp
jne
push
popl
mov
ret
push
popl
movb
push
sbbb
push
subl
mov
orl
sbbb
pusha
subb
addw
call
movw
push
popl
mov
subw
push
movw
xorl
orl
xorw
addl
push
popl
push
popl
push
add
andw
call
sbbb
cmpl
jne
push
popl
call
push
popl
push
popl
ret
sub
jmp
push
popl
xor
orb
mov
subw
push
popl
shl
movw
mov
orl
shl
push
popl
or
mov
or
orl
cmp
jne
push
popl
movb
mov
orb
sub
push
popl
addl
call
or
popa
push
popl
pusha
addb
call
addw
mov
push
popl
xorb
push
andw
xorl
push
popl
addl
sbbb
push
push
popl
call
addl
sbbw
push
subl
xorl
orb
addl
push
popl
sbbb
pop
movl
cmp
jne
xorl
ret
push
popl
popa
push
popl
call
orw
push
addb
push
popl
xorl
orb
subb
addl
push
popl
subb
push
sbbb
push
popl
call
addb
push
popl
push
push
inc
xor
mov
sub
xchg
add
push
popl
mov
or
shl
push
popl
add
push
push
popl
xor
xor
push
popl
push
orb
call
orl
subb
push
add
xorb
mov
orb
subb
push
sub
jmp
movl
pop
push
popl
push
popl
mov
sbbb
push
xorb
or
push
push
popl
push
sbbl
mov
push
popl
mov
subw
addb
rep
movb
push
popl
pop
and
addl
pop
push
sub
add
mov
xor
xchg
push
xor
lea
mov
xor
xchg
xorl
xor
movl
xorb
jmp
push
popl
sub
push
popl
mov
xorl
andl
sub
orw
sub
orb
movl
mov
xorl
sub
orl
sub
or
jne
subl
xorw
add
push
popl
jmp
andb
andw
mov
andw
shr
sbbw
shl
push
popl
mov
sbbb
xorw
add
subl
or
jmp
sub
sub
subb
mov
xorb
push
popl
add
and
xorb
cmp
jne
add
push
popl
mov
push
popl
add
addl
addl
mov
push
popl
add
xorb
push
popl
cmp
jne
or
sbbl
ret
movb
sbbb
push
andl
xor
movl
xor
pushl
push
popl
andw
pop
movb
lea
movl
push
popl
or
addl
movl
mov
addw
mov
andb
sbbl
lods
sub
mov
and
push
popl
pop
xorl
push
popl
ret
sub
push
andl
xorw
mov
subb
add
movb
push
popl
push
push
popl
xorw
push
push
popl
push
movl
push
popl
push
subw
push
popl
push
xorw
mov
push
popl
push
popl
mov
xor
add
andl
pushl
push
popl
orb
mov
addw
andl
add
andl
add
xor
push
popl
mov
push
popl
andl
add
push
popl
xor
push
popl
lea
orw
mov
sbbb
add
movw
mov
push
popl
xor
push
popl
push
popl
rol
movw
push
popl
xor
push
popl
inc
push
popl
addb
cmpb
jne
sbbl
cmp
je
orb
inc
push
popl
sbbl
cmp
jb
sbbb
mov
push
popl
add
or
movzwl
sub
movw
mov
push
popl
xorw
add
andw
mov
sub
add
push
popl
pop
push
popl
cmp
jbe
push
popl
or
cmp
jae
xorl
push
popl
pushl
andw
pushl
andw
push
popl
push
addl
sbbb
xorl
push
popl
addl
xor
mov
pushl
addb
xorb
call
add
call
push
popl
orb
pop
push
popl
pop
add
orw
pop
sub
andl
pop
add
sub
pop
addl
push
popl
leave
orb
push
popl
ret
addl
subl
call
and
aam
ret
dec
ror
mov
mov
inc
scas
sbb
lock
sub
mov
jl
fdivs
xchg
ds
movsb
xor
mov
mov
ret
mov
and
mov
cmp
mov
neg
rcrb
push
enter
cld
aad
pusha
ror
add
mov
pop
cmpsb
jbe
fstps
stc
test
pop
push
cli
sbbb
rcl
lret
adc
and
call
xor
popa
and
adc
push
fdivp
cwtl
or
mov
ret
ds
sti
imul
shrb
ret
cmpsb
jp
fstps
in
inc
adc
aad
and
mov
repnz
add
out
iret
stos
adc
adc
inc
rorb
mov
cmpsl
or
mov
xlat
jmp
imul
and
lret
adc
push
mov
mov
pop
xchg
fisttpll
in
add
stos
in
lret
testb
lret
mov
mov
sbb
xor
cltd
push
lcall
hlt
sub
rcrl
inc
jle
cmc
push
pusha
rorb
out
daa
dec
add
mov
and
iret
loopne
sub
fcomps
cmc
dec
aas
bound
xor
pop
mov
jle
sbb
pusha
adc
loope
sti
out
sti
out
dec
test
sub
out
outsb
pop
push
mov
ljmp
cmp
sbb
and
loope
out
push
jno
inc
push
xor
mov
xor
mov
and
das
imul
shl
or
ficoms
adc
ret
insb
hlt
and
stos
jae
pusha
rorb
imul
cmp
push
pusha
xor
mov
or
cmpsb
push
push
mov
dec
enter
xchg
repnz
push
rcrb
pop
test
iret
mov
dec
in
cmpsb
insb
dec
fnstcw
cmpsb
in
sbb
inc
mov
dec
sarl
mov
rcl
popf
xchg
lret
mov
popa
ror
sbb
mov
adc
jecxz
cmpsb
xor
or
fld
ret
push
shll
xlat
and
xlat
mov
ljmp
add
popa
lcall
mov
gs
xor
jecxz,pt
call
mov
int3
int
and
pusha
ror
lcall
push
pushf
push
xchg
lcall
lret
lods
roll
clc
mov
aaa
in
lea
and
aad
inc
ficoml
xor
cmpsl
fldt
gs
xchg
pop
fimuls
xchg
lock
ret
lods
rcl
inc
popf
ret
push
fsubs
popa
jo
xor
ss
or
jnp
out
inc
mov
jae
pop
outsl
mov
jg
pop
xor
ds
scas
ss
es
mov
mov
popf
arpl
dec
testb
aad
inc
aad
inc
xorl
add
repnz
fldcw
movsl
inc
cli
xor
dec
sbb
cmp
gs
mov
in
xchg
dec
xor
mov
pusha
and
jo
les
lret
pop
mov
loope
lods
add
shrl
lea
pop
dec
xlat
xchg
sub
lods
adc
sbb
pop
jge
push
test
test
add
xlat
cltd
cmp
in
cmp
xchg
mov
cwtl
xor
mov
xchg
ror
adc
cli
rcrl
leave
dec
ljmp
or
add
in
sub
nop
inc
cwtl
dec
sub
or
cmp
inc
lret
rcll
mov
insl
and
ja
mov
and
jbe
pop
mov
mov
inc
mov
mov
arpl
pop
cmp
mov
adc
mov
call
mov
loopne
mov
mov
dec
ja
or
mov
jne
sub
les
and
cmpsl
mov
jmp
das
dec
call
adc
xor
xor
jl
rolb
push
mov
popa
pop
add
fwait
adc
lea
shll
out
xor
aas
cmp
xchg
sub
rcl
xchg
mov
sbb
pop
mov
iret
gs
mov
scas
clc
bound
sar
dec
jl
lods
repnz
rcr
sarb
loopne
lret
inc
in
sub
dec
in
insl
ret
pusha
rorb
add
mov
movsl
inc
mov
dec
aaa
ljmp
and
push
mov
lods
mov
js
hlt
bound
incb
pop
add
inc
xor
adc
push
xor
nop
dec
pop
mov
xlat
int
int
test
mov
in
shrl
lds
lahf
inc
jg
ror
mov
xchg
mov
pop
or
pop
sbb
inc
shlb
cs
push
mov
pusha
in
fnstenv
into
mov
in
xor
shrb
std
into
inc
mov
add
cld
fisubrs
add
ret
sub
push
jbe
mov
int3
mov
pusha
sub
jg
dec
jb
push
lret
mov
jmp
out
mov
jp
lock
pop
xor
bound
sub
sub
lock
scas
push
xchg
movb
dec
aam
mov
dec
mov
stc
cmp
mov
pop
add
test
push
stos
dec
and
fdivs
pop
sbb
rcl
std
data16
sbb
ret
cmp
dec
call
stc
adc
cmp
mov
ljmp
pusha
iret
dec
jg
sbb
jo
out
ret
dec
pusha
jbe
int
lods
repz
pop
cmp
sbb
mov
add
lret
dec
js
and
jecxz
pop
xchg
mov
in
pop
push
xor
int3
out
pop
dec
jo
fwait
dec
jl
ret
in
push
mov
ret
dec
loop
mov
addr16
mov
cmp
add
fdivl
loope
xor
and
clc
mov
lds
in
xor
popa
adc
cltd
outsl
cmp
jnp
pusha
rcl
fidivrs
lret
in
pop
pusha
and
jns
mov
xlat
lret
xchg
rcll
lods
divb
cli
ja
lcall
sbb
mov
inc
aam
pushfw
mov
mov
enter
add
sbb
repnz
ljmp
out
xor
ret
adc
jns
lret
mov
int
mov
pusha
add
loope
outsl
or
inc
out
dec
test
sub
mov
lods
mov
mov
fildll
and
adcb
lcall
xchg
mov
mov
jb
js
dec
jl
and
addr16
mov
push
xchg
int
mov
imul
mov
enter
xchg
pop
pusha
ror
xlat
ljmp
adc
or
mov
mov
or
pusha
ror
das
out
and
jmp
add
xor
push
sub
orb
jmp
pop
repz
cmp
lret
fcomps
sahf
mov
or
mov
xor
inc
shrb
mov
mov
idivb
mov
and
cltd
fnstcw
sbb
inc
push
mov
mov
test
and
pop
cld
cwtl
shl
fidivrs
ror
or
mov
mov
arpl
in
mov
cld
dec
mov
add
or
orl
xchg
shll
mov
xchg
pop
pop
loope
out
jg
fnstsw
loope
ret
add
jo
pop
pusha
ror
sahf
mov
mov
loop
pop
add
fsubl
int3
mov
fs
push
adc
leave
aas
insb
loope
fcoml
ror
sub
out
jle
das
aaa
mov
shrb
subb
js
iret
mov
dec
push
and
and
mov
sbb
repz
es
out
repnz
into
mov
mov
pop
dec
jae
lock
pusha
ror
mov
ret
pop
inc
mov
insb
out
mov
bound
mov
mov
cmp
loope
fldln2
add
insb
mov
mov
sbb
and
jns
mov
push
or
push
pop
cmp
dec
mov
inc
or
add
stos
je
xchg
and
cmp
out
pop
xor
dec
mov
addr16
mov
inc
das
das
dec
fcmove
mov
and
sbb
lods
add
rol
jb
mov
add
je
jmp
mov
or
pusha
pop
rorl
out
out
mov
and
aad
inc
ficoml
insl
pop
sub
or
ds
pop
pop
cli
std
rolb
xchg
xor
mov
inc
xchg
psubusw
jbe
rcrb
aas
cmp
loope
mov
jmp
add
rorl
in
out
push
pusha
sarb
pop
dec
in
sub
inc
cmp
cltd
imul
leave
cmpsb
jg
pop
mov
fwait
mov
fcmovu
scas
lahf
or
push
insl
nop
outsl
inc
mov
cmp
adc
and
mov
inc
iret
pop
pusha
ror
das
cmp
mov
repz
loopne
jne
lcall
cmpsb
test
pop
push
jo
fidivs
inc
sbb
add
jae
mov
mov
paddsw
dec
mov
inc
je
sub
or
pop
adc
repz
xlat
aad
mov
aad
push
jne
jno
out
rep
mov
jecxz
sub
pop
push
adc
pop
sub
lods
add
mov
aam
in
adc
jne
fidivl
xchg
xor
scas
cmc
fidivrl
xchg
xchg
and
shll
pusha
ror
cmp
jecxz
lret
das
mov
adc
sub
xor
fucompp
cmp
out
aas
loopne,pn
inc
xor
mov
fsubr
sbb
jle
fcom
movsl
mov
sub
xchg
scas
or
xor
in
in
inc
fsubr
jne
jbe
push
cld
mov
pop
add
pop
dec
in
push
pusha
mov
fstps
ret
mov
jecxz
ds
cmpsl
jecxz
int
addr16
leave
pop
mov
or
adc
cs
add
loope
sarb
test
and
loope
cltd
out
cmc
aad
pusha
ror
mov
xchg
hlt
adc
cmp
or
pmulhuw
and
inc
mov
mov
xchg
ror
or
mov
mov
arpl
in
test
inc
mov
add
mov
or
pop
dec
rcrl
outsl
mov
adc
pusha
inc
pop
cmpsb
mov
or
dec
and
xor
mov
ds
jecxz
scas
cli
pop
popa
popa
inc
push
scas
fidivs
jo
ja
mov
cld
shrb
xor
fsubrl
jns
adcb
dec
mov
mov
cmp
sti
aas
cwtl
pop
dec
lahf
negb
cmc
push
pusha
shl
cmp
incb
jns
mov
popa
nop
pop
inc
sahf
add
cmp
jmp
lds
mov
data16
lret
das
cld
lods
pop
jecxz
mov
add
dec
out
mov
mov
icebp
pusha
xor
or
cli
pop
inc
pushf
jb
xchg
sub
mov
xchg
cs
aam
out
lcall
pop
in
shrl
add
xchg
mov
pop
aas
cwtl
inc
ror
mov
mov
insb
push
out
mov
loopne
jle
fmull
push
xchg
mov
add
inc
and
insb
repz
or
je
scas
and
clc
mov
fidivrl
xchg
jae
jno
sbb
jae
hlt
or
ret
cs
adc
loope
pop
pop
pusha
cli
out
sbb
pop
pop
pusha
sub
pop
jne
fnstcw
hlt
add
mov
test
movsl
insb
dec
addr16
popa
in
or
shlb
arpl
addr16
out
mov
in
add
ret
cltd
in
mov
ds
fcomps
cmp
lret
adc
jecxz
lret
das
lods
and
stos
or
jae
jecxz
pop
scas
add
xor
roll
in
ds
xchg
cmpsb
subb
cmpsl
gs
lock
xor
nop
inc
adc
add
jl
dec
fildll
dec
cwtl
je
jg
testb
aam
jno
movsl
sbb
dec
jne
cmc
in
arpl
punpcklwd
lret
movb
sarb
mov
xchg
sti
cmpsl
sub
lock
and
lret
add
inc
adc
inc
cmp
mov
scas
out
scas
push
xor
xor
or
ds
mov
jg
das
ret
icebp
cmp
cmpsl
out
mov
cmc
fcmovnbe
or
push
xor
js
call
out
rorl
and
aad
testw
jge
aad
jg
testl
jmp
inc
mov
sbb
outsl
dec
push
loopne
mov
aad
mov
cmc
sahf
push
pusha
loopne
incb
test
dec
jmp
lcall
enter
stos
mov
xor
call
mov
jmp
inc
sahf
sar
push
pop
subl
out
push
jmp
sbb
pop
mov
jae
mov
pop
mov
mov
dec
in
jle
dec
jl
lods
icebp
jmp
mov
pushf
mov
pop
dec
mov
loope
adc
ror
out
sub
add
mov
mov
pop
push
jmp
gs
jns
xor
aam
mov
and
dec
push
nop
mov
add
and
sbb
xchg
jno
gs
outsb
push
iret
mov
dec
iret
clc
push
pusha
pop
mov
pop
ss
pusha
shlb
jbe
fsubs
jmp
lods
repnz
mov
and
mov
sbb
xchg
mov
orl
or
xchg
sbb
cltd
ds
xor
xor
adc
sub
push
dec
aad
pop
pusha
and
add
test
and
popa
inc
rorb
int3
rcrb
pushf
cmp
cmp
cmpsb
test
jns
xlat
rclb
gs
stc
pop
sbb
pusha
xor
jns
daa
adc
xchg
inc
imul
xor
dec
movsl
sub
mulb
out
adc
adc
lcall
mov
pop
les
lods
mov
mov
je
ljmp
inc
popf
cmpsb
test
andb
rclb
xchg
jl
mov
lods
mov
bound
xlat
movsl
push
rolb
ljmp
ret
loop
mov
push
pop
loope
out
lds
and
lret
xor
ror
cmpsb
es
dec
dec
fisubs
cmpsb
gs
jno
gs
in
clc
mov
sbb
mov
fdivr
arpl
inc
insb
sbb
xor
roll
cld
out
pop
rcrl
mov
or
lods
dec
fxch
mov
cltd
add
inc
dec
rolb
outsl
dec
test
test
add
lret
and
mov
shlb
popa
adc
lods
push
cmp
xor
faddp
pop
dec
loopne
push
lds
fstl
mov
shll
stos
mov
mov
dec
sarl
pop
loopne
lret
adc
pushf
xchg
mov
sahf
push
lock
jl
and
adc
aaa
dec
in
push
pusha
ljmp
adc
test
add
push
cmp
loopne
pop
iret
scas
push
mov
inc
imul
xor
dec
lods
cld
and
adc
test
sbb
xor
dec
mov
cld
out
pop
rcll
add
xchg
mov
pop
xchg
xchg
cmp
xor
dec
lahf
int3
mov
and
and
mov
iret
pop
pusha
ror
das
jns
or
lea
loop
xor
mov
js
mov
mov
add
insb
push
push
jg
pop
xchg
xor
mov
mov
sbb
rorl
stc
sti
in
popa
add
sbb
dec
xor
mov
xchg
fisttpll
in
push
inc
int
int3
testb
push
add
add
lods
push
xor
aad
jmp
jb
add
into
inc
aam
inc
xchg
fst
repz
shll
inc
sarb
movsl
and
popf
rcll
cmp
mov
xchg
cmp
dec
in
xchg
inc
mov
in
mov
pop
inc
out
adc
mov
pop
jb
call
pop
outsb
or
cmp
jae
ficoms
jb
mov
inc
insl
push
ja
mov
xor
dec
mov
cmc
jo
popa
add
sbb
shll
int3
and
bound
add
add
and
lret
cmp
rorl
popl
sub
pop
aam
out
push
pop
sbb
cmp
push
frstor
pop
xor
ss
mov
inc
orb
mov
inc
jbe
xchg
iret
mov
shr
fwait
nop
xlat
mov
nop
ds
std
sub
mov
daa
sbb
pop
out
es
cmp
ret
pusha
inc
cmpsb
mov
jo
add
fstp
popf
sub
dec
in
jmp
mov
xchg
je
clc
push
lds
inc
mov
ja
fidivrl
and
mov
mov
outsb
pop
push
lds
mov
mov
or
sbb
inc
mov
mov
movsl
xor
pop
in
push
mov
dec
out
aas
out
movl
cltd
or
inc
jb
xlat
popa
jnp
sub
mov
add
fstpl
xor
cmp
nop
fidivrs
rcrb
pop
into
fucomp
and
jl
jmp
test
ficoms
jb
push
xchg
mov
repnz
mov
push
mov
add
dec
adc
pushf
jle
mov
movsl
mov
outsl
jno
enter
fcmovu
adc
lods
add
dec
xorb
xchg
iret
movsl
push
jg
inc
fwait
xchg
pop
roll
mov
cmp
imul
cmp
call
inc
mov
dec
sbb
loopne
mov
and
push
pop
inc
or
jnp
xor
pop
push
and
stc
cmp
ret
loope
mov
sbb
fildl
ret
cmp
lock
cmp
add
sarb
das
sbb
mov
mov
imul
pop
cld
lea
lahf
dec
fisttps
orl
push
nop
inc
and
cmp
ret
dec
aaa
out
into
inc
inc
aas
cmp
hlt
xor
mov
mov
je
inc
imul
fisttps
retw
mov
leave
loop
sti
imul
cmpb
and
sbb
xor
cmc
movsl
clc
dec
jae
pop
pop
in
std
mov
ret
aad
and
xor
sbb
ret
xchg
fwait
daa
adc
dec
add
call
push
dec
pop
pop
pop
mov
loope,pt
out
and
arpl
jns
dec
and
jae
adc
mov
lahf
mov
outsl
and
out
mov
idivl
push
scas
cmpsl
add
jge
cmc
fimull
xor
push
cs
xor
add
mov
fidivl
std
mov
mov
push
fldenv
push
dec
andl
xchg
lret
divb
out
lods
pushl
jmp
std
jecxz
shll
mov
ret
pop
je
push
pusha
shlb
fldl
add
mov
mov
in
test
imul
andl
inc
add
fisubs
xor
cmp
xor
jp
inc
lcall
inc
inc
xor
mov
xchg
dec
fldt
dec
popa
mov
les
push
fisubrs
or
push
pusha
pop
ret
adc
mov
loopne
pop
xchg
push
mov
test
and
pop
pusha
daa
dec
mov
dec
lret
cmp
ficompl
dec
lds
mov
pop
mov
mov
ja
lret
lret
sbb
dec
xor
dec
pushf
dec
adc
out
adc
enter
adc
jmp
int
popf
sub
inc
xchg
jns
test
inc
dec
out
cmc
cmpsb
fbstp
and
std
inc
in
xor
pop
or
xchg
stos
sub
dec
cmp
jmp
adc
ret
sbb
ds
mov
push
pusha
enter
addr16
stos
and
pop
lcall
cmp
loop
jge
dec
and
loope
addr16
aad
pusha
ror
cmpsb
nop
jne
add
mov
daa
aam
shl
jp
push
mov
mov
dec
mov
mov
pusha
rcrb
add
in
dec
or
cld
xchg
adc
inc
xor
movsl
subl
or
fnstenv
ds
in
mov
loope
push
test
stos
adc
mov
push
adc
lret
or
mov
mov
arpl
in
push
cs
rorb
xlat
inc
add
fcompl
ljmp
imul
adc
push
pusha
xor
cmp
mov
sarb
xor
fistpl
dec
scas
rcrb
adc
sub
fcomps
in
mov
out
pop
out
movsl
fcomps
ds
ret
dec
clc
dec
iret
shrb
aad
inc
xlat
inc
mov
xlat
int3
ja
or
inc
fwait
sbb
fldl
add
dec
je
aaa
jmp
inc
mov
lret
and
mov
pop
and
cmp
push
shr
mov
or
cmp
jne
es
xor
aad
in
shlb
inc
sub
sbb
mov
ds
imul
out
push
ret
inc
outsl
ljmp
adc
and
fisttps
pop
shr
mov
mov
xchg
stos
jle
mov
data16
testb
mov
xchg
fisttpll
in
mov
sbb
int3
testb
lret
inc
iret
pop
aad
mov
cmc
push
pushf
cmp
pushf
dec
inc
dec
cmc
mov
dec
in
dec
popa
and
push
outsl
pop
ds
inc
jecxz
dec
xchg
insl
lods
idiv
movsl
aas
fnstcw
cld
mov
ss
js
fidivl
jns
mov
lods
mov
mov
jge
add
flds
xor
xor
add
jne
ja,pt
test
sahf
cmp
inc
ljmp
imul
fisubrs
int3
inc
mov
pop
sbb
mov
cmpsl
pop
stos
mov
xlat
pop
loope
mov
and
inc
imul
xor
dec
lods
xchg
mov
out
adc
mov
lret
mov
dec
imul
es
dec
cmp
xor
xlat
inc
lahf
cmpsb
jg
cwtl
imul
xorb
std
mov
push
test
nop
jae
mov
les
inc
mov
push
pop
insl
sbb
push
in
mov
ljmp
lret
dec
sahf
push
adc
cmpsb
je
fstps
hlt
jmp
subb
jecxz
cmp
dec
and
mov
mov
and
lret
sub
outsl
cmp
mov
ret
sti
out
xor
scas
inc
mov
dec
insl
cmpl
pop
mov
jge
ret
mov
sbb
adc
lcall
sbb
mov
xchg
mov
xchg
xor
sahf
cwtl
pop
hlt
in
daa
out
sbb
mov
adc
pushf
mov
mov
xchg
cmp
jl
and
mov
pop
dec
pushf
fs
mov
stos
fnsave
addr16
mov
lcall
push
jbe
mov
mov
in
fidivrl
fmulp
in
push
mov
cmpl
xchg
mov
and
sbb
and
or
hlt
xor
cmp
test
jno
ja
movsb
and
fnop
or
lock
lahf
shl
outsb
outsb
pop
testb
lods
test
dec
in
mov
sub
and
in
out
push
pusha
sarb
enter
and
add
push
aaa
fists
scas
scas
clc
mov
xlat
cmp
dec
fisttps
dec
add
lods
and
add
dec
dec
inc
xchg
adcl
fildl
rcrb
pop
outsl
sbb
arpl
dec
fiaddl
mov
push
mov
ja
ret
push
aaa
push
xchg
cmc
in
mov
dec
jmp
mov
aam
fdivs
push
test
push
xor
nop
inc
div
movsl
mov
dec
dec
push
enter
mov
data16
cmpsb
aam
xor
in
out
nop
fidivrl
test
push
mov
lret
addr16
imul
and
ja
fstps
lea
ret
mov
xchg
sub
cld
mov
inc
in
decb
js
mov
pop
shlb
imul
in
mov
in
adc
mov
mov
mov
xchg
ds
cmpsl
test
sbb
mov
push
inc
mov
inc
lret
dec
add
je
pop
mov
mov
inc
out
orb
outsl
out
jo
mov
inc
cmp
pushf
adc
scas
fisubrs
stos
inc
jno
dec
sbb
out
pusha
ror
adc
ds
mov
cwtl
daa
and
sbb
mov
adc
rorl
pushf
xlat
mov
xchg
jno
mov
and
out
enter
inc
lcall
mov
lods
mov
test
orl
test
shll
add
lcall
jecxz
and
repnz
nop
jae
mov
inc
mov
xchg
fwait
pop
shll
jo
xchg
mov
cmc
lret
dec
xor
mov
enter
mov
mov
jno
mov
cwtl
push
cmove
xchg
into
movsl
data16
push
dec
das
into
jl
pop
out
mov
leave
add
pop
jecxz
mov
pop
std
xchg
mov
xchg
and
jmp
pop
popa
rorb
xchg
ljmp
aad
test
mov
fxam
ds
lea
xor
push
dec
scas
xchg
inc
sahf
std
push
push
mov
jno
call
outsl
jbe
in
push
pusha
xor
sbb
mov
mov
shlb
lret
pop
inc
leave
es
sarb
aad
mov
imulb
sbb
xchg
arpl
fucomi
std
mov
out
xor
dec
sti
sub
lods
or
cltd
mov
inc
mov
add
cmp
push
jl
xchg
pop
shll
cwtl
fiadds
and
lret
shll
pusha
ror
mov
push
inc
push
cmpsb
cmc
or
rcr
mov
in
xorl
pop
shlw
inc
shll
scas
fsts
jo
das
aam
fistl
push
cmpsl
add
clc
ljmp
in
mov
xchg
arpl
dec
std
sarb
sti
inc
xor
xor
push
gs
adc
lock
icebp
ljmp
into
lods
mov
test
cmp
mov
arpl
in
into
aas
scas
mov
xchg
fisubs
dec
sahf
arpl
in
xchg
mov
hlt
jp
jno
dec
fsubs
add
adc
xor
cmp
adc
outsl
aaa
aaa
mov
pop
stos
dec
icebp
lret
pop
and
arpl
shlb
sbb
aaa
mov
adc
ds
orb
sub
sub
inc
dec
cmp
inc
movsl
inc
das
popf
shl
jl
imul
xor
out
insb
mov
inc
addr16
in
icebp
insb
inc
pop
cld
mov
call
pop
rcl
xor
jg
in
push
or
ret
test
repnz
jae
shlb
addr16
mov
fucom
dec
mov
enter
outsb
cs
out
xchg
js
sbb
add
int3
mov
mov
insb
mov
loope
out
push
mov
loopne
rcll
mov
mov
andb
mov
or
inc
ror
fidivrs
and
mov
adc
lcall
xchg
inc
jb
nop
fidivrl
mov
xchg
lret
mov
jns
lret
adc
cs
add
push
xchg
xchg
mov
sub
test
and
and
push
pusha
iret
dec
or
jnp
pop
xor
fistps
jae
stc
cmp
in
push
cltd
adc
out
push
pusha
and
jae
je
out
int3
mov
popa
sub
addr16
outsl
mov
sahf
add
mov
ret
clc
loope
add
arpl
sub
js
pop
and
ret
aad
mov
add
shl
sbb
cmpsb
xor
cli
ret
hlt
aad
pop
bound
js
sub
pop
mov
inc
jne
and
mov
mov
dec
mov
sbb
inc
jl
jo
call
fs
adc
pop
inc
fcmovu
lds
jl
dec
mov
pop
fmuls
arpl
sub
mov
jno
popa
mov
mov
mov
jp
movzwl
sbb
pusha
inc
mulb
push
mov
inc
dec
test
dec
pop
inc
push
xor
std
fstpt
xor
mov
or
push
xor
sahf
scas
add
fldl2t
mov
push
dec
popf
push
loop
rclb
aad
xor
inc
fistps
dec
lods
out
push
pusha
add
lods
cmp
mov
arpl
in
mov
sbb
inc
ds
fcomps
lret
xchg
and
es
mov
cmpsl
push
mov
mov
mov
test
and
ret
aam
sti
fwait
test
mov
enter
pop
sbb
jno
pusha
inc
and
xchg
mov
test
mov
mov
repz
pop
sbb
cmpsl
mov
mov
adc
mov
jge
mov
dec
lods
int
popa
mov
mull
out
cltd
cmpsb
cwtl
out
cmc
cmp
movsl
sub
mov
pusha
ror
das
push
lods
adc
mov
cmp
imul
or
int
mov
adc
sub
leave
push
mov
subb
daa
lcall
fdivl
rclb
mov
jae
or
cmpl
cmp
frstor
cmpsb
fst
popa
cld
xchg
fiadds
cmp
xor
pop
add
inc
cwtl
inc
ror
mov
mov
fstpl
out
xchg
fsts
das
inc
push
mov
icebp
lods
or
mov
add
fnstcw
push
inc
mov
push
mov
jp
in
or
lods
add
ja
cmp
and
pop
inc
aam
xor
mov
xchg
sarb
dec
sbb
and
aad
mov
jo
dec
xor
jge
and
enter
loopne
xor
fwait
bound
pop
cmpsb
ja
xchg
lret
jp
fnstsw
test
adc
inc
or
jb
jle
mov
pop
lret
dec
xor
dec
mov
popa
or
sbb
dec
cmc
insl
loope
jne
lcall
mov
mov
jo
arpl
jg
sarl
inc
mov
gs
iret
fidivs
push
es
dec
pusha
cmpsl
mov
mov
aaa
fadd
fs
fisubl
rcl
mov
fcmove
sahf
mov
aam
or
xlat
call
inc
adc
sbb
js
gs
adc
daa
mov
fs
and
and
push
jmp
ret
dec
in
cmpsb
push
push
xchg
mov
outsl
lahf
add
mov
adc
out
pusha
push
xchg
iret
mov
mov
dec
ss
add
xor
push
gs
dec
adc
rcl
inc
mov
adc
xor
rcr
outsb
pusha
sbb
mov
orl
sbb
dec
inc
and
stos
fnstenv
lods
xchg
fs
and
add
cmp
mov
stos
cmp
mov
stos
bnd
fistl
ret
or
mov
mov
xor
ds
test
cwtl
pop
test
arpl
add
mov
adc
fstpl
lret
pusha
ret
cmp
insl
sub
sbb
inc
sbb
dec
mov
adc
dec
fmul
mov
mov
fstps
das
or
push
out
mov
out
scas
cmp
test
push
pusha
sarb
xor
sbb
mov
mov
frstor
fs
mov
inc
js
adc
popl
xor
ds
cltd
ds
and
mov
mov
push
cs
pop
sbb
out
das
lret
mov
and
xchg
xor
mov
dec
call
pop
popf
ds
dec
ds
enter
xchg
jo
pop
mov
or
pop
pusha
iret
inc
iret
mov
jmp
mov
imul
int3
movsl
addr16
or
aas
cwtl
pop
orb
stos
icebp
push
pusha
sarb
sbb
dec
jge
lods
out
sbbl
ds
icebp
ror
cmp
icebp
add
cmp
dec
aam
fnstenv
arpl
stos
push
shlb
xor
jae
in
cmp
leave
xor
shll
in
lods
mov
mov
xor
aaa
mulb
cltd
inc
decl
popf
out
jg
lods
fimull
and
aad
inc
or
gs
dec
loope
sub
xchg
xchg
test
inc
test
inc
nop
je
mov
mov
xchg
xchg
inc
push
mov
ficomps
in
out
and
mov
lret
stos
or
rclb
scas
imul
dec
aam
imul
fstpt
loope
lret
mov
dec
cli
gs
xchg
lods
xor
mov
adc
popf
das
jecxz
aam
fnstenv
stos
inc
sub
into
add
rclb
test
lcall
test
add
inc
ss
shrl
jo
push
and
popa
mov
lret
inc
and
or
rcrb
inc
ljmp
ret
sub
push
sub
inc
jno
mov
gs
fadds
cmpsl
lret
inc
repnz
outsl
adc
enter
jle
jns
lods
add
dec
fdivrs
cmp
mov
jnp
lods
repnz
mov
mov
mov
lret
in
mov
dec
mov
dec
fxch
mov
lock
dec
fadds
popw
insl
pushf
scas
add
addr16
mov
mov
inc
sarl
stos
mov
scas
or
sbb
sub
sub
and
jae
and
fwait
repz
into
pop
and
addr16
outsl
jmp
mov
mov
in
andb
mov
ja
jecxz
aam
mov
js
mov
add
mov
pop
jo
stos
les
in
idivl
fsubrl
sti
ja
pop
jmp
lret
loopew
movsb
mov
lcall
inc
scas
sbb
xlat
in
out
dec
sahf
mov
iret
lods
adc
adc
inc
rorb
scas
arpl
dec
cmc
loop
mov
inc
ljmp
adc
cmpsb
nop
cmpb
xor
nop
inc
cmp
dec
iret
cmp
mov
test
and
stos
inc
push
cmp
movsl
stos
lcall
mov
ret
loope
in
sahf
mov
ror
pop
and
shr
dec
fildll
cmpsb
fdivl
gs
inc
push
inc
cs
sbb
pusha
ror
mov
jg
adc
imulb
mov
cs
adc
std
pop
aas
rcrb
orl
inc
lods
jb
popa
jmp
cmp
pop
mov
rclb
jmp
fsub
mov
sbb
pusha
sbb
loope
mov
call
sub
sub
and
js
fst
int3
mov
inc
lcall
and
lret
jp
enter
mov
mov
and
xor
sub
inc
push
sbb
add
push
dec
leave
in
push
pusha
repz
jne
and
mov
add
lret
inc
mov
mov
in
addr16
mov
scas
mov
xchg
dec
ret
cwtl
push
dec
das
and
into
js
push
ret
aad
mov
decb
and
loopne
xor
rcll
fnstenv
insl
mov
push
stos
loopne
pop
stos
inc
xchg
xor
jno
dec
sahf
or
sub
mov
or
jmp
inc
mov
mov
jae
lret
mov
in
push
aad
mov
pusha
test
std
mov
nop
insl
adc
push
xor
pshufw
mov
add
push
mov
mov
or
loop
mov
sbb
inc
sub
movsl
mov
xchg
xchg
cltd
inc
sbb
cwtl
and
cmpsb
xchg
das
stos
les
xor
nop
inc
ror
hlt
test
jp
xor
rolb
cmp
dec
aas
push
ja
into
jmp
inc
pushf
test
lds
jnp
pop
and
cmp
rol
pop
das
mov
popa
xor
sub
add
popa
ds
fcomps
iret
iret
mov
into
movb
add
cmp
clc
push
pusha
rcl
loope
and
ret
jmp
lods
dec
subb
push
adc
pusha
aam
mov
lods
add
in
push
xchg
shlb
out
out
add
push
push
mov
adcb
cs
adc
lret
xchg
inc
jmp
mov
gs
out
jge
icebp
ja
inc
inc
cmpsb
test
sarl
ss
push
addr16
push
jb
dec
dec
jecxz
nop
jae
mov
add
xchg
xor
dec
fistl
mov
iret
sbb
and
popf
add
or
xchg
nop
inc
nop
cwtl
popf
stos
inc
icebp
movsl
jge
cmp
rcl
inc
cmpsl
sub
mov
xlat
lods
pop
and
jbe
fidivl
mov
inc
loopne
or
clc
movsl
mov
stc
xchg
mov
outsl
ficompl
and
cltd
inc
cmp
cmp
dec
mov
sarb
fsubrp
cmp
mov
and
inc
mov
inc
push
in
sbb
ror
shlb
fldcw
mov
inc
scas
sbb
xor
mov
xor
mov
mov
pop
xchg
xchg
add
loop
int3
testb
sbb
xchg
mov
pop
in
pop
sbb
lret
mov
adc
lret
mov
movsw
and
flds
dec
fidivrl
push
inc
pop
jl
int3
xor
xchg
mov
inc
icebp
xor
and
nop
xor
ss
pop
push
cmc
enter
add
mov
xchg
sub
lods
addr16
cltd
cs
and
loope
cwtl
or
out
dec
test
sub
ret
dec
and
outsl
dec
mov
test
inc
fbstp
outsl
out
jo
daa
push
or
shll
arpl
in
cld
sbb
lods
outsb
dec
shlb
out
hlt
add
xchg
jns
ror
jmp
xlat
inc
jp
lods
insb
mov
add
mov
adc
xchg
xchg
cmp
or
faddp
pop
jae
outsl
push
lods
mov
push
add
mov
inc
mov
jl
pop
mov
jmp
fisttpl
pusha
sarb
sub
sbb
nop
jle
inc
cmp
xor
inc
jmp
or
es
xlat
sub
cmp
xor
pop
xchg
pop
cli
inc
scas
nop
jbe
mov
imul
mov
hlt
dec
scas
xchg
inc
adc
mov
jno
sbb
mov
xchg
movb
ljmp
pop
aaa
jecxz
jnp
outsb
inc
rol
and
sti
mov
push
jb
ds
sbb
out
popa
decb
cmp
dec
mov
xchg
dec
movsb
and
aam
sbb
push
mov
movsl
shlb
cs
mov
das
lock
mov
mov
dec
inc
arpl
in
jb
and
sbb
fnstcw
adc
aaa
mov
aam
fdivs
arpl
lods
xor
mov
dec
mov
and
aas
mov
ss
or
pop
inc
int3
mov
aad
movb
adc
adc
mov
mov
xor
dec
lret
mov
divb
ret
add
push
sub
popf
mov
push
les
xor
jmp
lret
lods
add
aad
inc
fstpl
mov
dec
inc
sub
iret
scas
push
mov
and
jecxz
pop
xchg
nop
mov
shlb
out
pop
dec
sbb
or
cmp
pop
sarl
arpl
fcompl
js
lods
add
xlat
int
jecxz
cmpsb
or
dec
mov
inc
stos
idivb
cwtl
pop
dec
xchg
and
cmc
push
pusha
sarb
jno
mov
fwait
pop
jno
gs
iret
jo
cltd
lea
pusha
inc
mull
lods
cmp
jb
dec
dec
inc
dec
xor
rcrb
ficoml
mov
std
lret
sub
mov
pusha
cmp
mov
aaa
jnp
insl
loopne
das
xlat
cmp
aad
or
adc
and
ljmp
ljmp
iret
push
mov
cltd
dec
cld
mov
mov
mov
xchg
rorl
in
sbbb
mov
dec
insl
mov
dec
mov
dec
ror
mov
mov
inc
scas
sbb
adc
and
fsts
iret
stos
adc
arpl
pop
pusha
rclb
outsl
adc
fwait
sahf
xlat
mov
mov
sbb
push
out
cmp
mov
sbb
inc
jl
adc
fstpl
mov
jo
mov
js
mov
enter
and
push
lret
jp
cmc
fadd
ret
fmull
dec
add
dec
subb
pop
mov
imulb
iret
lret
pop
cli
imul
or
cmp
xor
inc
cmp
jge
leave
mov
subl
mov
testl
aas
cld
xor
mov
clc
aas
fildll
fstps
leave
in
cmpsb
push
popf
dec
fidivrs
inc
stos
fimuls
ds
xor
popa
adc
xchg
xchg
cmp
mov
inc
adc
push
ffreep
and
fmul
or
xor
sub
ret
cmp
inc
mov
mov
mov
pop
xchg
rcll
int3
out
xchg
dec
push
les
mov
stos
repz
int3
testb
dec
mov
xchg
pop
loopne
fxch
mov
rorb
mov
aam
add
add
xchg
lea
mov
mov
ret
mov
xchg
xchg
leave
mov
pop
in
and
in
int3
xchg
rcl
int
inc
cwtl
pop
sarl
pusha
shlb
add
and
inc
jo
sti
scas
push
nop
mov
add
mov
in
adc
inc
rorb
dec
cwtl
adc
pusha
and
inc
mov
xchg
inc
inc
mov
mov
jmp
sbb
mov
fimull
in
push
pusha
xchg
mov
dec
gs
aad
jmp
fisttpl
movsb
out
mov
hlt
add
scas
imul
addb
xchg
arpl
mov
mov
mov
int
in
in
push
ljmp
lret
xchg
xor
mov
ret
in
lret
mov
mov
shll
lods
sbb
xor
jecxz
js
jmp
lahf
aam
mov
test
mov
jg
icebp
popl
fldl
stos
mov
ljmp
mov
add
popa
dec
push
and
lret
shll
pusha
ror
cmp
pusha
ror
cmp
pusha
pop
pusha
rcrb
add
stos
cmpsl
dec
cmp
xor
lea
test
add
mov
mov
dec
scas
xchg
or
adc
lcall
add
int3
stos
mov
xlat
fidivl
jno
fs
cmp
xlat
lret
fnstenv
xor
mov
shrb
mov
dec
xlat
sub
lahf
xchg
iret
mov
out
and
arpl
pusha
shlb
insl
mov
inc
pop
dec
out
in
sarl
pop
push
outsb
inc
fsubrs
ja,pn
inc
in
fcom
mov
xor
ja
xlat
nop
inc
in
sarl
dec
dec
shll
cmpsl
cmp
repnz
jno
jae
dec
and
imul
stc
cli
pushf
cltd
loop
repnz
inc
fdivr
idivl
sub
fcoms
sub
cmp
xor
mov
inc
pop
sub
pop
scas
xor
int
repz
pusha
mov
inc
insl
push
cmc
imul
dec
andl
add
sbb
inc
out
outsl
push
in
mov
pusha
ror
or
jl
mov
xchg
ds
mov
repz
add
mov
ret
pop
rcr
aas
scas
ret
mov
les
dec
jne
data16
mov
dec
out
cmpsb
imul
testb
sti
gs
inc
sub
imul
popa
adc
xchg
movsl
cmp
sub
enter
faddp
pop
xlat
cmp
ror
cmp
jl
lret
in
push
pusha
daa
and
pop
mov
mov
test
out
jbe
mov
inc
inc
push
inc
xchg
movb
faddl
lods
aam
fldcw
out
xor
ljmp
jo
xchg
ftst
mov
jmp
inc
mov
cmpsl
xorb
rcrb
mov
cmpsl
push
stos
mov
mov
jb
inc
out
and
aas
cwtl
pop
jge
das
ret
stos
repnz
pusha
shlb
dec
fildl
push
pop
loop
jecxz
int
insb
mov
mov
int3
rcl
pop
and
inc
insb
sbb
xor
dec
sbbb
ret
popa
cld
out
pop
shll
push
inc
xor
dec
pushf
orb
adc
push
mov
fmuls
or
repz
add
xor
xor
push
out
shll
xor
data16
pop
sub
ja
mov
mov
inc
iret
xlat
test
clc
cmp
cmp
xchg
imul
xor
mov
pop
inc
aam
mov
mov
mov
enter
xchg
sbb
aas
insl
mov
add
dec
ljmp
lret
cmc
sbb
fdivl
xchg
scas
test
add
stc
pop
ljmp
adc
cmpsl
out
push
pusha
sarb
cmp
jmp
enter
dec
lret
loopne
dec
inc
sub
dec
iret
sub
lods
or
aad
addr16
sub
add
popa
add
int
leave
mov
test
in
leave
mov
add
jns
insb
pop
dec
ret
mov
add
mov
mov
add
pop
je
fadds
and
mov
imul
in
cld
mov
sbb
rorb
push
pusha
cwtl
addr16
mov
int3
inc
out
repz
fs
xor
in
mov
jp
inc
xor
sahf
cwtl
inc
inc
imul
sub
add
xchg
scas
mov
xlat
pop
add
lods
mov
mov
and
and
mov
jmp
mov
sub
int3
dec
dec
loope
cmpsb
dec
rcrb
repz
outsb
iret
stos
adc
ror
or
xchg
arpl
dec
cmc
cmp
sub
pop
mov
fdivrs
pop
mov
mov
int
jnp
popf
pop
jbe
add
cmc
sbb
cmp
scas
or
incb
cmp
fisttpll
cmpsl
aam
jle
andl
jecxz
dec
lret
fs
xlat
mov
les
leave
cmp
cld
mov
fistl
loope
out
push
mov
push
scas
mov
aas
mov
pop
repnz
inc
fsubs
push
je
into
in
movsl
icebp
xor
add
gs
shlb
cmp
push
pop
dec
fisubrs
dec
pop
in
jmp
inc
test
add
xchg
dec
cmp
lret
mov
aas
ja
ljmp
loope
lods
mov
in
mov
jmp
mov
jg
push
repnz
fst
popa
std
addr16
push
cmp
add
roll
mov
in
loop
push
in
push
mov
inc
mov
or
out
out
add
std
mov
scas
dec
sbbl
or
dec
cld
ljmp
das
mov
xor
iret
xchg
sti
fwait
clc
pop
leave
dec
in
ret
out
push
jns
jmp
aad
addr16
cmp
mov
fstp
popa
std
imul
sub
mov
lret
xor
cmc
mov
jecxz
lret
das
cwtl
lods
adc
fwait
cmp
lods
mov
lods
pop
pop
dec
jmp
lret
into
adcb
aam
add
popa
std
jmp
xorb
lret
ret
dec
rcl
mov
aaa
fs
scas
fcomps
or
icebp
out
inc
jl
push
outsl
out
mull
adc
cmp
lret
ds
loope
jo
xor
ror
sub
push
or
mov
jnp
dec
xchg
imul
jno
mov
mov
mov
inc
sub
in
mov
mov
ljmp
ret
add
repnz
in
add
and
ljmp
inc
sub
cwtl
fcmovne
lret
sub
pusha
rcrb
in
aaa
push
add
pop
pop
jmp
dec
push
push
aam
fnstenv
adc
out
popa
xor
ljmp
or
cltd
mov
inc
nop
pop
out
subb
pop
out
xchg
ret
out
repnz
pop
mov
aad
arpl
dec
mov
mov
fldcw
mov
cmp
xchg
xchg
inc
dec
subb
cmp
leave
mov
pop
jmp
notb
pusha
sarb
sbb
loope
cmpsb
imul
dec
jge
lods
lock
or
lods
adc
inc
sarb
mov
andb
scas
arpl
adc
cmc
mov
les
nop
lahf
int
fiadds
jmp
dec
dec
lods
ficompl
jg
dec
in
dec
inc
fwait
insb
and
mov
imul
mov
mov
pop
aas
push
enter
push
pop
pusha
ror
or
lods
mov
pop
jbe
ss
hlt
add
lret
cmpsl
and
mov
adc
inc
lcall
ds
or
andl
scas
xor
xchg
ret
mov
add
out
jmp
in
aas
sub
test
shlb
inc
jns
movl
push
mov
push
insl
push
sub
inc
lcall
daa
and
push
arpl
inc
xorl
inc
int3
movsl
jp
xorl
out
shrl
fdivs
inc
mov
mov
push
jne
mov
cs
iret
ljmp
xlat
mov
fcomps
fs
and
ret
cwtl
inc
ror
mov
andl
xchg
mov
int
clc
cmpsl
inc
movsl
rorb
aam
icebp
adc
inc
jg
loopne
fsubrl
dec
xchg
clc
xchg
imulb
ljmp
aas
adc
mov
xchg
fmull
pop
mov
out
xchg
dec
insb
mov
lods
mov
ss
loopne
mov
dec
sbb
sbb
push
sbb
subb
add
mulb
ds
repz
addr16
adc
data16
mov
dec
aas
sbb
mov
xchg
push
adc
sbb
mov
mov
fcoms
into
mov
jae
mov
aaa
mov
cltd
and
mov
fnstenv
iret
scas
push
mov
ds
and
cmpsb
in
mov
jmp
inc
pop
dec
and
xor
lds
cmpsb
jg
shlb
add
jmp
xchg
insb
addr16
adc
loopne
mov
cltd
inc
mov
jmp
roll
into
inc
cwtl
pop
inc
mov
sti
stos
clc
push
pusha
rcrb
cmc
mov
cs
xchg
mov
mov
mov
testb
jge
and
or
fistpl
ror
mov
pusha
mov
mov
push
xchg
je
pop
mov
sub
aad
mov
test
inc
jp
in
loop
cmp
jge
sti
add
das
jg
outsl
clc
cwtl
sub
popf
pop
add
add
fistpll
pushf
xchg
ds
jmp
inc
mov
shrb
push
mov
mov
imul
in
cmp
fucompp
fistpl
push
xchg
cmp
dec
fstpl
int3
aad
data16
dec
adc
sbb
mov
popf
xor
jl
push
sbb
leave
xchg
inc
mov
sbb
lret
lods
add
aad
ja
roll
lcall
fisttpl
cmp
rcrl
jmp
jecxz
in
sbb
mov
mov
dec
and
mov
jge
lods
icebp
sbb
lret
pop
and
fadds
sbb
fimull
shl
pushf
cs
loope
pop
lods
or
pop
cmp
decb
push
pop
stc
adc
inc
mov
sti
rol
push
clc
pop
inc
ss
dec
adc
enterw
jl
std
mov
mov
xor
and
ljmp
inc
and
popa
aam
adc
sbb
sub
jmp
test
arpl
fucomi
in
jmp
xor
dec
out
jno
popf
sahf
jbe
addl
fmul
jecxz
xchg
ss
outsb
into
xchg
pop
inc
pusha
int
jmp
inc
mov
pop
jo
adc
pop
add
lret
xchg
not
sbb
lret
aad
add
lahf
push
test
jo
popa
mov
push
push
inc
sub
mov
inc
aad
aad
mov
jno
add
inc
cmp
in
popf
or
pushf
lods
or
jb
xchg
sti
inc
jns
jb
mov
and
leave
dec
fildll
dec
rol
mov
out
shrl
sbb
mov
sahf
push
sti
xchg
xor
lods
and
mov
testb
dec
sub
xor
mov
mov
xchg
dec
out
fwait
mov
dec
cwtl
mov
sarb
and
inc
push
lods
nop
jne
scas
popa
mov
pop
xchg
xor
add
push
gs
daa
and
mov
ror
mov
arpl
sarl
xchg
lret
pop
xlat
jno
inc
shll
pushf
popf
xlat
mov
movsl
push
in
stc
pop
je
and
xchg
mov
fs
stos
repz
pusha
ror
xor
sub
jecxz
into
movsl
insb
call
testb
rcl
mov
mov
mov
ret
insb
xchg
sbb
gs
mov
jae
mov
xor
jno
arpl
jg
mov
adc
mov
xchg
inc
dec
in
push
pusha
push
or
push
and
scas
sbb
adc
in
mov
sub
mov
jne
stos
inc
outsb
mov
sub
out
cwtl
inc
push
iret
repz
movsl
addr16
and
lret
out
dec
call
jbe
fstps
add
ret
dec
leave
inc
fbstp
cmpsb
aad
cltd
rcl
mov
jl
add
stos
ds
pushf
es
inc
gs
sub
add
mov
ret
push
mov
ljmp
jmp
jnp
add
sbb
pop
jns
mov
call
lret
pop
fsubr
add
adc
lods
add
aam
pop
rclb
push
inc
pop
movsl
pop
mov
adc
add
insb
ret
pop
add
mov
inc
fldcw
jp
lods
lcall
in
dec
dec
mov
movsb
dec
push
and
pop
xchg
mov
in
adc
cli
ror
movb
pop
adc
nop
in
call
dec
daa
outsl
in
aaa
cmp
leave
fs
adc
xchg
jl
lds
or
mov
mov
arpl
in
adc
cmpsb
addr16
int3
movsl
push
iret
lods
adc
outsl
push
adc
sbb
jecxz
cs
dec
mov
jg
sbb
out
adc
inc
scas
pop
jmp
and
loope
xchg
cld
mov
jle
fidivl
test
mov
testb
or
jnp
mov
inc
fxch
js
mov
les
push
lret
jp
stos
mov
dec
add
mov
dec
lods
pop
loopne
scas
ret
pop
mov
mov
sbb
add
jecxz
jge
jne
test
mov
push
lret
or
jmp
lret
sub
sub
gs
popf
out
repnz
jbe
clc
ficoms
mov
mov
inc
ror
mov
test
arpl
cmpsb
xor
mov
js
lret
mov
sub
cmp
cmpsl
pop
fsts
sbb
ficomps
jp
insb
dec
push
loopne
in
aaa
jmp
jl
mov
std
jbe
push
ja
push
push
cmp
dec
ficoms
test
xor
in
aad
loop
nop
jno
mov
cmp
scas
lds
call
mov
loope
or
es
sbb
ror
loope
sub
sub
push
xor
lret
mov
pop
mov
mov
fwait
leave
lret
push
daa
adc
sbb
out
cmc
enter
call
xchg
mov
leave
popa
dec
mov
cmpsb
lds
aam
ftst
ds
xchg
pop
test
pop
fcomps
dec
rclb
pop
dec
mov
in
sbb
arpl
in
fsubs
imul
sub
lcall
xchg
xor
inc
sbb
dec
aaa
stc
movsl
xor
sbb
cmc
enter
jmp
inc
pop
adc
mov
inc
in
lods
xchg
icebp
cmp
ds
rcrb
lods
sbb
dec
xlat
cs
push
and
jmp
inc
cmpsl
fildl
dec
jb
das
and
mov
cli
add
push
lods
cmp
dec
add
xor
bnd
mov
mov
sub
lret
mov
pusha
ror
loope
pop
aas
sbb
sarl
cmc
rcll
fdivrs
int
cs
jne
lret
pop
jns
mov
dec
sahf
fs
aad
mov
jns
jg
insl
cmpsl
insb
pop
repnz
inc
xlat
sbb
sub
cmpsb
addb
pop
push
pop
cltd
mov
push
nop
inc
jp
cmp
pop
push
adc
jecxz
mov
ficoml
inc
dec
cmp
inc
sti
cld
out
clc
sbb
fistl
in
out
push
pusha
sarb
push
dec
in
lahf
int3
clc
add
xor
push
sbb
jmp
push
mov
repz
inc
dec
loope
inc
lahf
inc
jb
dec
adc
test
outsl
jne
jns
scas
and
fs
push
inc
and
fs
movsl
jns
or
lret
insb
and
fs
cmp
mov
xchg
push
or
xchg
nop
inc
cmc
fstp
jne
lds
pop
lret
dec
out
xor
daa
add
jge
and
sti
stos
fimuls
push
pop
sub
and
jecxz
lret
das
jge
sbb
jae
adc
jbe
loopne
push
inc
xchg
cmp
mov
xchg
or
lret
rclb
push
mov
shlb
daa
inc
iret
xlat
test
xor
or
add
pop
in
sti
mov
mov
mov
arpl
in
int3
jns
mov
shrl
loope
sbb
arpl
aam
and
lret
mov
mov
arpl
in
sarl
inc
add
dec
jnp
lods
hlt
stos
testl
outsl
jmp
xlat
movntq
cmc
and
add
in
push
aaa
mov
in
lcall
lods
add
in
cmpsl
in
lahf
je
and
fidivrl
adc
mov
inc
ljmp
jno
pusha
inc
adc
mov
sahf
je
cld
sbb
push
mov
test
jo
inc
loop
jle
dec
rorb
inc
jge
dec
or
in
push
stos
and
push
xor
insl
mov
enter
jle
sub
sbb
insb
push
mov
call
pop
int3
adc
mov
mov
arpl
in
lret
dec
add
inc
hlt
lods
add
dec
fcoms
xor
cmp
dec
subb
pop
sbb
sarl
jo
and
and
out
inc
jl
fsubrs
mov
notb
jne
pop
sbb
in
ret
mov
insb
xlat
lret
sbb
in
dec
sti
dec
int3
in
push
pusha
xchg
mov
cmp
xlat
sbb
out
fdivs
jne
and
inc
es
mov
daa
pusha
arpl
movsl
out
inc
add
enter
in
cltd
cmp
mov
cmp
cli
jecxz
pop
cmp
pop
fisttpll
popa
jmp
push
xor
fidivrl
mov
xchg
jno
popa
and
cmp
xchg
dec
xlat
lret
fistl
sarl
out
push
decl
lcall
cli
fs
lret
dec
aas
pop
and
sbb
call
pop
jno
or
adc
add
or
mov
stc
adc
movsl
mov
xchg
jle
lret
sub
icebp
inc
mov
jbe
mov
mov
rcr
pop
mov
mov
aam
into
add
push
add
add
jge
push
sbb
pop
int
mov
loope
mov
sbb
ror
jge
xchg
sub
inc
scas
sbb
sahf
movsb
rolb
movsl
je
push
lret
stos
mov
cmp
into
mov
mov
dec
out
cmpsb
imul
jmp
test
add
gs
mov
pusha
in
push
pusha
pop
xchg
sbb
xor
push
mov
sbb
sbb
xor
arpl
mov
mov
mov
fdivr
fdivrs
std
cmp
fsubr
add
cmp
stos
fldcw
mov
xor
ret
enter
sub
mov
in
dec
adc
sbb
addr16
popa
xor
out
scas
jno
jne
adc
mov
aad
mov
and
leave
loope
dec
out
cmpsb
insb
or
in
shll
add
aad
test
je
push
inc
cs
ret
mov
cmpsb
dec
mov
add
loope
pop
rclb
sub
ds
mov
xlat
pmulhw
mov
arpl
in
or
lods
add
fwait
cmp
mov
lods
in
inc
pop
mov
adc
jae
mov
xor
cmpsb
jne
fstps
repz
andb
cld
push
idivl
dec
push
icebp
aas
mov
int
cwtl
pop
mov
cmc
push
pusha
sar
nop
repnz
mov
pop
jnp
enter
ds
fcomps
lods
cltd
lods
sub
pop
mov
dec
scas
ret
ds
sub
cmpsb
mov
mov
addr16
add
fcomps
loopne
in
iret
pop
adcl
push
inc
out
js
adc
movsl
push
in
test
and
stos
or
out
inc
stos
xchg
mov
sti
fwait
jle
mov
cmpsb
insb
xchg
cmp
sbb
push
in
pmaxub
push
adc
iret
mov
pushf
mov
mov
mov
pop
fs
and
dec
mov
mov
out
notb
pusha
and
mov
fcmovu
inc
dec
pop
mov
into
mov
cmpl
popf
xor
ja
inc
xchg
pop
pop
cld
dec
jmp
dec
pusha
test
fnstenv
inc
daa
xor
cs
lock
jbe
imul
inc
inc
xlat
fs
clc
out
cmp
and
push
mov
mov
mov
xchg
mov
mov
test
out
pop
dec
pushf
and
dec
or
in
inc
lret
lret
cmp
aam
lret
inc
jmp
mov
xchg
lods
push
stc
inc
loope
je
mov
mov
fisttpl
imul
mov
loope
lret
mov
dec
stc
leave
jg
ret
xchg
mov
hlt
mov
aam
fnstenv
sbb
cld
mov
dec
mov
test
gs
fisubrl
dec
mov
sbb
aas
push
jnp
stos
mov
pop
adc
shll
pushf
mov
mov
mov
sbb
adc
dec
fwait
lds
ljmp
out
push
xchg
sbb
sbb
pop
outsb
mov
fidivs
popa
adc
mov
cmp
pop
jmp
roll
ffreep
and
mov
out
fidivrl
loop
in
push
mov
enter
popa
ljmp
lret
cltd
out
or
arpl
push
js
loopne
jno
addr16
adc
dec
and
push
sti
nop
adc
mov
mov
arpl
in
pop
push
lret
out
add
mov
int3
aaa
inc
es
lods
repnz
jmp
and
call
ret
mov
outsb
xor
test
lahf
repz
fidivrs
adc
jg
xchg
cs
adc
loope
inc
adc
sub
adc
xchg
jl
add
ret
in
lahf
adc
xor
inc
add
js
xor
push
inc
mov
sbb
in
pop
dec
and
push
add
mov
les
cmp
out
jne
cltd
or
in
imul
mov
arpl
in
sbb
scas
fldcw
mov
ja
dec
jecxz
shlb
inc
sub
xchg
fmulp
mov
lret
and
adc
ret
pop
lcall
shlb
mov
out
push
pusha
es
mov
dec
fcmove
mov
pop
or
cli
je
rcrl
sub
fcomps
xor
cmp
stos
aad
mov
pusha
ror
das
or
sbb
xchg
icebp
add
jmp
in
push
or
mov
and
es
jp
aaa
fnstenv
movsl
pop
dec
inc
cmc
call
ret
dec
leave
xchg
inc
ret
icebp
sbb
fs
sti
cwtl
or
jnp
mov
test
scas
cwtl
sub
xor
mov
adc
ret
lret
pusha
js
mov
je
mov
mov
mov
xchg
mov
ror
sahf
mov
rorb
mov
mov
arpl
in
mov
out
xchg
int3
add
mov
push
dec
inc
cmp
dec
jle
lods
out
cli
pop
mov
inc
jnp
std
fwait
dec
lret
inc
repnz
pusha
and
or
mov
xorl
or
xor
xchg
cwtl
cmp
sbb
cmp
ret
or
mov
lret
jmp
mov
ljmp
inc
and
rclb
rcrl
jmp
dec
daa
jne
cmpsl
pop
adc
clc
in
shrl
data16
jno
arpl
dec
frstor
mov
pop
shr
loope
lret
mov
dec
stc
adc
cmc
mov
out
or
mov
and
aam
fnstenv
das
stos
outsl
scas
cltd
xlat
fimuls
cmp
add
dec
fldcw
dec
psubsb
or
push
xchg
fisubrs
push
jnp
inc
lods
sbb
push
or
pop
mov
leave
xchg
and
ror
mov
sbb
push
dec
roll
arpl
cltd
ds
popf
add
inc
sbb
push
and
cmp
mov
xchg
ss
pop
mov
ljmp
cwtl
pop
mov
push
pusha
shlb
jl
fstps
cwtl
cmpsl
jno
popa
mov
add
jle
xor
sub
arpl
in
add
cmc
in
mov
sti
push
xor
stc
rclb
in
testb
lock
xchg
mov
rolb
cmp
push
loope
scas
xchg
sbb
dec
gs
loopne
inc
mov
clc
sub
out
repnz
push
jns
push
mov
mov
enter
hlt
jg
fwait
push
push
xchg
stos
inc
stos
sub
movsb
inc
bound
insb
lret
ds
mov
push
fildll
stos
stos
inc
int3
xlat
movsl
ja
aam
pop
shr
push
mov
pusha
ror
or
roll
arpl
in
shlb
sbb
lods
out
pop
pop
mov
add
mov
fmul
fadds
pushf
pusha
jg
pop
out
xchg
movb
fisubs
stos
into
dec
xchg
in
xor
add
adc
imul
outsl
call
mov
ljmp
js
iret
xor
fidivl
callw
push
ret
and
data16
gs
mov
jb
mov
sub
jp
dec
fmulp
pop
mov
jl
lret
mov
lret
mov
int
les
jnp
fstps
decl
shlb
out
push
out
out
stos
lret
shll
out
sbb
inc
shlb
mov
mov
ljmp
dec
lret
pusha
push
leave
mov
loop
lret
sbb
mov
pushf
lcall
lcall
hlt
sub
movsb
inc
in
pop
gs
leave
in
in
push
pusha
and
jae
pusha
mov
mov
inc
mov
pop
mov
mov
ret
jecxz
lret
mov
pusha
inc
fsubs
mov
aas
push
fnstsw
xor
sahf
mov
inc
lods
xor
jne
jl
inc
stos
xor
ss
or
jns
mov
dec
mov
inc
stos
dec
push
mov
jle
hlt
ror
mov
push
stc
test
out
je
nop
fidivrl
dec
ret
mov
test
pop
xchg
mov
pop
xorl
cmp
sbb
lods
rcrb
dec
inc
jl
cmp
push
sti
daa
push
mov
mov
sub
lods
sbb
call
mov
mov
push
leave
loopne
pop
test
lret
bound
cmp
jle
dec
fldt
dec
shll
test
scas
iret
lahf
cmpsl
cwtl
nopl
fisubrs
mov
dec
jg
lock
xor
in
pusha
fs
lods
and
ret
cmp
fstp
add
enter
bound
pop
or
addr16
mov
add
pop
lret
ja
inc
mov
lahf
or
sbb
lahf
ja
and
push
mov
mov
inc
aam
pop
test
xchg
out
jne
fisttps
arpl
in
mov
and
jl
fisubrs
push
arpl
test
adc
roll
adc
test
mov
call
aas
ret
sub
in
push
mov
test
pop
xchg
mov
bound
sbb
movsl
mov
out
insl
loope
lret
mov
dec
pushl
sbb
pop
inc
lea
loope
scas
sub
lods
adc
and
aam
inc
inc
xor
cmc
cmpsl
lret
pop
xchg
push
add
sub
fildll
jge
out
mov
inc
sarb
in
pop
sbb
inc
sub
dec
and
jp
cli
fadds
je
push
cs
dec
and
xor
xor
mov
mov
je
sahf
xor
mov
mov
je
mov
std
mov
xchg
xchg
stos
xor
mov
and
adc
rcl
fidivrs
mov
pusha
iret
and
mov
lret
das
mov
icebp
mov
mov
insl
idivb
pop
mov
inc
test
jmp
icebp
push
pusha
rol
cmpsb
jne
fstps
lcall
add
adc
dec
jbe
sti
lea
in
addr16
divb
movsb
or
or
jne
pop
inc
mov
xchg
shll
or
mov
mov
leave
jb
lea
jmp
lret
pop
jo
dec
fbld
cmpsb
push
push
mov
inc
sub
xlat
mov
mov
arpl
in
mov
rcrb
xor
jb
pushf
cmp
mov
sbb
inc
cmp
cmp
inc
iret
xlat
stos
adc
rorb
and
mov
xchg
xor
mov
push
jns
insb
daa
dec
mov
lea
cmp
fisubrs
inc
in
bound
aad
jp
shr
inc
jnp
xchg
mov
xor
xchg
inc
gs
dec
xchg
or
jb
jp
xchg
inc
inc
aas
cmp
and
mov
push
fnsave
outsb
xchg
iret
inc
in
loop
push
js
inc
aaa
mov
xchg
push
in
sti
enter
imulb
cmp
mov
ficoms
clc
test
or
jne
add
mov
imul
in
pop
in
aaa
outsb
add
aas
inc
lahf
xchg
mov
mov
mov
mov
xchg
jb
cwtl
fnstenv
rolb
xchg
push
fst
popa
push
add
aad
mov
lahf
fs
sub
out
std
mov
in
push
mov
lods
add
rorb
out
repz
ss
inc
cs
sti
imul
push
pusha
mov
daa
push
mov
pop
icebp
mov
xor
ffree
xor
pop
xor
subb
cltd
jnp
xor
iret
popa
sti
xchg
push
imul
popf
push
sbb
and
pop
rcrb
stos
icebp
push
pusha
shrb
jl
fstps
jno
lret
pushf
js
jecxz
int3
movsl
push
cmp
aad
mov
mov
mov
arpl
in
mov
push
mov
push
movsl
aas
in
bound
std
nop
jl
add
sub
rorb
mov
inc
mov
aaa
lods
pushf
xor
popl
jp
repnz
mov
push
ficompl
rclb
lods
orl
mov
lret
insl
ret
and
enter
inc
add
mov
or
xchg
ret
sti
mov
dec
and
mov
sub
and
xchg
ret
mov
pop
inc
insl
mov
jl
gs
mov
jb
mov
popa
inc
mov
dec
or
pop
mov
adc
pop
imulb
mov
mov
dec
add
insl
fistpl
aaa
push
xor
xchg
xchg
scas
arpl
and
aaa
sti
sbb
ja
cmpsl
aas
sbb
stc
mov
lods
adc
sbb
adc
popa
cli
test
or
cmpsb
push
sbb
icebp
jno
iret
ds
mov
mov
mov
sbb
or
sbb
and
daa
cmpsb
xorl
outsl
pop
in
cld
mov
fwait
inc
insl
push
cmpsb
fisttps
ds
dec
mov
popa
add
sbb
ret
or
jmp
jmp
pop
adc
jmp
popa
xor
pop
les
inc
into
and
aad
inc
fsubrs
int
sub
jecxz
sub
arpl
and
cs
cmpsl
dec
addr16
jae
ss
jae
fldl
mov
sub
mov
pop
stos
xchg
mov
mov
rorl
pop
out
inc
test
jns
mov
pushf
xor
das
pusha
sub
ljmp
call
shlb
lods
xor
nop
inc
sarb
fst
popa
push
adc
jp
shrl
inc
imul
push
lds
fs
mov
mov
inc
mov
dec
fadds
xchg
and
lret
dec
inc
adc
cltd
call
das
sub
fidivrl
jmp
jb
xchg
mov
xchg
les
loopew
lret
mov
dec
clc
pop
ror
les
xlat
aad
inc
xlat
pop
jp
pop
pop
out
jbe
xor
add
sub
and
inc
fnstenv
jnp
out
movsb
xchg
mov
push
xchg
fisubrs
xor
xlat
push
mov
mov
pusha
iret
sbb
and
movsl
add
cmc
lods
mov
mov
xchg
shll
in
in
aam
and
xor
nop
pusha
xchg
jmp
inc
mov
data16
std
xor
outsl
push
and
arpl
xor
mov
mov
dec
jmp
jae
add
insl
mov
cmpsb
enter
out
iret
sub
mov
xor
nop
inc
xchg
test
shlb
scas
pop
lock
mov
cmp
inc
cli
fldt
jbe
cli
sbb
mov
dec
aaa
hlt
int
mov
ror
das
add
mov
mov
add
movsl
jl
shl
shrb
and
xor
fisubrs
push
inc
inc
out
cmpsl
icebp
stos
loope
rclb
js
dec
es
in
inc
cmpsl
fdivp
xlat
mov
mov
xchg
mov
jmp
cmpsl
pop
popf
adc
out
pop
dec
mov
sbb
repnz
inc
jl
mov
and
fs
adc
rorl
pop
xor
es
das
mov
adc
ret
sub
mov
shll
pusha
ror
or
mov
mov
arpl
in
cmp
cmp
insl
mov
pop
insb
inc
xchg
jno
arpl
dec
push
and
dec
pusha
fs
int3
lret
adc
mov
push
pusha
stos
sbb
loop
and
test
add
lcall
out
ds
inc
sub
pop
aad
mov
sub
add
xor
dec
shr
scas
xchg
into
inc
sbb
lds
rolb
jne
xor
fsubrs
cmp
mov
std
mov
test
ret
cmp
fs
shl
adc
inc
sarb
sbb
mov
fcoms
dec
stos
je
inc
or
mov
iret
lret
sbb
or
adc
nopl
shll
cmp
repz
jbe
dec
xor
pop
jp
inc
mov
dec
inc
mov
inc
dec
dec
jbe
xchg
xor
lods
jo
in
sub
mov
and
ret
aad
mov
movsl
aas
jmp
xor
mov
cmp
pop
lds
push
in
sbb
xchg
scas
inc
jg
xor
nop
ds
inc
jae
stos
les
int3
xlat
mov
pop
mov
subb
push
lret
lahf
stos
sbb
mov
pusha
