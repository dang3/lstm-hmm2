jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
and
cld
shlb
and
lds
ficoml
pop
dec
add
add
pop
add
add
add
or
ret
add
add
push
add
add
push
roll
add
lock
add
add
add
and
push
add
add
ret
add
add
add
add
xchg
aad
incl
pop
add
add
add
add
test
jae
ret
push
and
xchg
cwtl
add
add
add
add
add
add
add
add
add
and
add
add
ljmp
add
add
add
add
pop
add
add
inc
add
and
add
push
add
and
cld
push
icebp
add
add
add
add
add
add
mov
and
add
add
add
add
add
xor
and
sahf
add
add
addl
add
push
mov
add
add
movsl
add
add
add
add
xchg
add
add
adc
add
pop
add
add
jecxz
and
cld
push
push
add
and
xor
fldl
or
ret
push
and
cmp
mov
filds
sbb
add
and
mov
mov
ja
and
push
add
add
add
adc
add
adc
or
pop
add
add
add
add
add
pop
add
add
aas
add
add
add
add
add
add
jne
or
mov
cs
add
add
add
add
and
and
mov
add
loope
adc
pop
add
jae
and
inc
add
add
add
push
add
add
mov
ja
pop
add
add
add
add
add
push
and
outsb
add
push
push
add
add
add
add
add
add
pusha
add
and
flds
icebp
add
add
add
add
add
mov
add
add
push
cmp
lret
add
add
add
add
and
push
add
add
les
sub
and
cld
push
cmp
popf
add
add
add
and
push
add
adc
add
add
add
add
pusha
add
push
and
mov
mov
mov
mov
int
sub
push
add
add
push
and
sbb
sldt
add
add
ds
add
add
and
add
add
mov
cmp
enter
incl
and
add
clc
add
add
add
add
add
add
add
add
add
push
adc
pop
add
filds
cmp
cmp
or
add
and
add
test
addl
add
and
cwtl
add
add
add
ltr
mov
test
cmpsl
add
incl
and
mov
pusha
add
ret
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
and
pop
add
add
add
add
push
and
jne
test
inc
add
push
add
add
clc
add
add
add
and
pop
add
test
jmp
add
add
add
add
add
add
pop
add
push
add
add
add
add
and
incl
cld
push
mov
add
xchg
add
add
add
add
add
push
fildl
jno
cltd
mov
sbb
push
hlt
adc
filds
xchg
sbbb
sbb
ss
aam
add
and
je
lret
cltd
push
and
jp
xor
jb
jb
jg
mov
arpl
mov
sti
imul
invd
fildl
or
loop
adc
dec
xchg
daa
dec
andb
lahf
out
ja
jbe
movb
out
ds
arpl
fmul
sbb
pop
into
leave
mov
cmpsb
or
xchg
insb
and
push
cwtl
and
idivl
rorb
cwtl
ss
mov
mov
daa
je
cmp
push
xchg
sbb
xor
in
and
fistpl
call
nop
imul
shrl
sar
pop
movsl
out
push
fnsave
or
roll
jmp
sub
dec
mov
sbb
fdivl
ret
lret
jnp
aad
stos
mov
push
test
push
add
in
cmp
call
inc
mov
jb
mov
pushf
push
jne
jnp
adc
test
jns
ss
mov
imul
fdivrl
dec
out
cmpb
jno
jmp
popl
andb
into
das
dec
test
mov
dec
shlb
inc
jle
lods
inc
addl
pop
jg
xor
sub
and
andb
push
mov
pop
movsb
lcall
mov
fsubr
jbe
scas
add
mov
shl
jge
cli
in
and
mov
mov
xorl
in
jmp
jge
jnp
cmp
fisttpl
push
cmc
push
push
mov
pop
dec
push
dec
jg
outsb
push
rolb
inc
ret
add
clc
mov
lahf
pop
idivl
out
icebp
dec
fnstcw
push
mov
cmp
mov
fstps
xchg
jge
iret
std
out
add
movsb
jne
ss
popa
imul
addl
adc
andb
pop
xchg
adc
leave
cmp
fsubp
jae
mov
inc
mov
pop
sbb
push
cli
inc
sbb
xor
xchg
fs
adc
mov
pop
xchg
cmp
retw
mov
pop
adc
push
scas
push
mov
sub
das
xor
xchg
or
cmc
bound
mov
xchg
fcomp
ret
in
pop
xor
push
mov
aam
mov
les
xor
jg
call
sub
lods
das
push
or
xlat
popf
je
movb
xchg
divb
subl
hlt
test
insl
mov
sub
bound
insb
dec
xchg
shlb
push
mov
jge
xchg
mov
inc
mov
lds
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
and
adc
xor
mov
addb
push
loopne
bnd
and
adc
inc
push
mov
cmp
push
loopne
shlb
inc
cmp
or
pop
into
push
fdivrl
outsl
call
adc
pop
add
data16
jo,pt
xorl
enter
icebp
in
sbb
iret
sub
lahf
lods
dec
xchg
lds
lds
and
inc
outsb
stc
mov
loopne
shlb
int
movsl
push
fldenv
in
fwait
divl
dec
es
rorl
rclb
and
and
imul
sub
mov
mov
outsl
mov
dec
lock
test
mov
repnz
ss
scas
mov
out
pusha
mov
aas
add
rcl
inc
outsb
out
or
jl
inc
mov
pop
xchg
pop
pop
cmp
stc
movsl
pop
mov
inc
jmp
adc
inc
dec
fistpll
jns
jle
dec
rolb
mov
aam
repz
hlt
push
xchg
pop
fsubl
repz
arpl
adc
sub
push
iret
outsl
in
jmp
inc
mov
aad
xorb
loopne
fwait
data16
mov
inc
mov
cmpsb
insb
bnd
sub
jo
inc
push
mov
push
nop
push
loopne
lock
and
adc
inc
push
mov
push
nop
push
loopne
lock
and
arpl
push
mov
xchg
pop
lret
xor
shl
icebp
loope
push
pop
scas
xchg
shr
mov
mov
data16
jb
shrb
xchg
cmp
and
mov
orl
cmc
mov
sbb
jecxz
sbb
or
sub
xlat
sub
adc
cmp
push
jb
outsb
and
mov
or
add
pushf
jp
addr16
xchg
or
out
mov
xchg
cld
pop
inc
xchg
inc
mov
pop
and
xor
add
and
cmp
mov
in
inc
lods
rcll
mov
pop
lds
rorl
pop
or
out
mov
pop
push
push
daa
insl
sub
push
push
icebp
dec
or
aam
push
sub
ljmp
rcl
loop,pn
cmp
ret
inc
les
mov
out
lret
andb
loopne
lds
popf
cmp
xchg
add
jle
push
xchg
pop
jnp
insl
es
push
jo
in
sbb
stc
adc
insl
adc
rclb
mov
in
js
fmuls
or
out
jno
dec
adc
mov
add
pusha
pop
mov
jmp
fisubrs
mov
lahf
pop
ja
jg
mov
mov
xor
icebp
subl
sbb
aas
inc
call
jo
push
lods
and
mov
xor
or
mov
push
xchg
xor
out
jns
iret
jl
std
xor
test
hlt
adc
or
add
ss
and
sub
dec
push
mov
mov
repz
add
sub
inc
adc
dec
dec
mov
stos
push
dec
xlat
addb
mov
dec
or
jne
gs
pop
push
push
mov
or
or
lods
mov
mov
dec
pushf
jg
std
adc
pop
scas
mov
stos
push
mov
mov
jb
mov
ret
sub
add
cmpsb
mov
fwait
cld
ret
ror
mov
push
xchg
outsl
cmp
insl
mov
cs
jp
roll
icebp
adc
ficompl
mov
punpcklwd
in
xchg
popf
dec
js
and
leave
dec
jb
lret
lea
xor
mov
out
inc
xor
sbb
fisttpl
shll
mov
mov
cmovnp
xchg
push
sub
icebp
add
mov
or
or
sub
lret
stos
andl
insl
pop
mov
cwtl
add
xor
or
adc
mov
insb
jmp
pop
sub
mov
rcl
push
mov
fsubrs
mov
dec
xor
and
inc
pop
popa
mov
inc
xchg
xchg
out
stos
dec
sub
es
inc
mov
ja
inc
or
sbb
sub
adc
out
icebp
sub
movsl
scas
pop
pop
xor
mov
mov
mov
cmp
inc
jnp
push
fadd
fidivl
pop
fistpll
mov
sbb
ret
and
enter
je
mov
filds
mov
mov
inc
pop
sbb
add
mov
mov
dec
and
jnp
or
divl
jmp
pop
mov
movsl
mull
mov
adc
ficoms
add
push
imul
testl
lret
mov
cmp
push
and
out
iret
aad
jns
popa
mov
push
dec
sbb
js
movsb
xchg
pop
aad
mov
xchg
cmp
dec
shlb
mov
sub
mov
jecxz
mov
mov
add
sbb
add
vrsqrtps
clc
jns
movsl
addb
cmpsl
test
cmp
dec
fwait
mov
sub
xchg
cmpsb
pop
xor
pop
mov
jb
js
push
out
and
enter
jl
sub
sbb
in
jbe
mov
xorb
add
pop
xchg
inc
sub
push
jecxz
and
into
jns
out
xlat
inc
fstp
add
and
ljmp
dec
outsl
subb
or
scas
loope
or
sub
fsubs
ds
mov
or
add
dec
mov
cmp
sarb
mov
cmp
jmp
xor
test
cmpsl
xchg
cmc
addr16
push
xchg
mov
stc
shlb
aaa
xchg
dec
dec
inc
lret
ljmp
outsb
add
jge
nop
rcrb
gs
loope
icebp
xlat
or
ljmp
and
ja
cmpsl
or
push
leave
push
pop
ret
inc
lock
push
push
dec
xchg
sbb
xor
push
mov
dec
shr
cmpsb
outsl
imul
rorb
shrb
inc
ja
leave
ret
movsl
sbb
pushf
cld
push
pop
fistps
js
mov
lret
into
mov
nop
leave
sbb
leave
das
mov
and
add
add
popf
mov
and
jg
xchg
loopne
pop
je
inc
into
jge
test
frndint
pop
mov
and
out
fucom
add
cmp
iret
push
inc
jns
lea
iret
insb
cmp
adc
roll
jmp
sub
xor
rcrl
fmul
adc
fdivrp
add
insb
call
imul
loop
inc
cmp
mov
or
or
out
cmp
lcall
adc
push
nop
mov
inc
push
inc
fcoms
iret
filds
push
mov
adc
xchg
jle
inc
lds
xchg
rclb
icebp
pop
jb
xchg
ja
testl
bound
lahf
jnp
add
sarb
movsl
sbb
loopne
xor
outsl
xlat
push
sahf
xor
sub
pop
int
adc
sbb
sbb
fdivs
sbb
les
lea
cld
scas
xor
test
call
outsl
cmp
push
aas
pushf
xchg
cmp
loopne
push
cmp
push
outsb
push
ret
add
aad
mov
arpl
daa
cmp
mov
and
lret
push
nop
test
jbe
xchg
int
ds
adc
xchg
xor
fidivrs
ret
lds
ret
pusha
sbb
jl,pt
in
sub
jl
xchg
stos
je
out
sub
fsubs
insl
sbb
call
movsl
ljmp
rcrl
jne
cmp
push
subl
cmpsl
insl
jo
clc
cmpsl
push
jle
sbb
adc
sub
stos
test
push
ret
dec
aas
mov
adc
int
ljmp
push
add
pop
or
pop
icebp
call
repnz
cli
call
jmp
repnz
pop
jle
sub
push
je
xor
jbe
insl
or
push
xor
jg
xor
adc
mov
mov
pop
roll
xchg
in
bound
lahf
ror
sub
and
dec
ficompl
add
cmp
jo
pop
adc
jmp
mov
into
jecxz
and
adc
les
outsb
and
xor
mov
lcall
loope
jecxz
lret
jbe
jns
cmpb
call
movsb
or
sbb
pop
movsb
adc
test
inc
outsb
outsb
orl
jge
pop
add
xlat
setne
xchg
test
or
rorb
adc
out
xchg
in
and
mov
fnstsw
test
call
gs
addb
xchg
sbb
mov
ja
inc
es
inc
les
int3
clc
sbb
sub
pop
xchg
inc
xchg
add
ljmp
pusha
fsubs
xor
mov
aaa
jb
js
and
cmpsl
jge
mov
pusha
jg
cwtl
pop
sub
pop
and
fbld
xchg
subl
mov
sub
call
loopne
rorl
push
repnz
lret
and
test
cmp
sub
mov
loopne
pop
in
push
mov
fwait
roll
icebp
push
cs
lods
mov
cwtl
shr
movsb
bound
popf
mov
sub
push
cmp
push
xchg
test
push
dec
push
mov
pop
out
mov
cmpsl
sbb
pop
xor
clc
lahf
adc
sub
push
out
xchg
imul
into
rcll
negl
mov
sub
jl
int
or
daa
add
popa
jb
sub
pusha
push
orb
fs
xor
outsl
scas
inc
popf
pusha
xchg
mov
pop
sub
mov
jns
jg
enter
mov
jecxz
pop
mov
cli
xchg
pop
stc
push
scas
xor
xor
data16
das
dec
adc
stos
imul
inc
sub
insb
jbe
dec
jg
pop
or
rcrb
pop
ljmp
lock
adc
add
lods
push
add
xchg
ficompl
push
das
and
and
bound
dec
or
or
shll
adc
push
cmp
push
pop
dec
jp
insb
mov
jbe
fwait
pushf
pusha
outsl
xor
iret
xchg
imul
inc
jp
cmc
cmpsl
jmp
and
sbb
in
icebp
lret
jmp
jo
test
cwtl
pop
cmp
ror
dec
xchg
cmp
xchg
subb
scas
fisubl
lods
pop
imul
xorl
lret
fisubl
inc
pop
cwtl
shlb
xchg
mov
cwtl
push
dec
xchg
loopne
mov
and
in
cs
push
pop
jecxz
add
cli
cmp
push
mov
cli
nop
adc
out
cli
jle
mov
or
sub
push
pop
daa
cs
fists
hlt
add
call
sbb
or
rcr
xchg
mov
jb
lret
fcomp
arpl
in
sub
push
sub
lods
inc
outsb
xchg
pop
mov
pop
adc
sbb
sub
scas
inc
addr16
pop
icebp
push
jno
and
mov
push
jns
fwait
les
icebp
jecxz
dec
sbb
sub
pop
scas
dec
jp
mov
pop
and
sti
test
mov
push
push
inc
add
shrl
fnstcw
dec
aas
cmc
test
mov
bound
sub
jne
ss
icebp
pop
aad
cmc
dec
sbb
hlt
rolb
pop
rep
jbe
cmpsb
dec
xor
pop
jb
mov
push
mov
jmp
pop
cmp
test
cwtl
xor
pop
cld
mov
mov
daa
jo
lea
ljmp
mov
fwait
mov
ja
xchg
call
sub
cli
lret
in
jns
add
aas
insb
inc
cmpb
shrl
cs
lret
cmp
jnp
mov
loope
cmp
and
loop
sbb
out
insb
fmul
fisubs
cmpb
adc
fildl
or
mov
mov
add
mull
out
mov
push
outsb
mov
add
sub
aad
mov
adc
repnz
jb
lret
sti
out
mov
mov
enter
mov
push
add
subb
in
dec
cmp
adc
loope
xor
int
and
js
add
push
cmp
divb
fwait
mov
stos
inc
insl
andb
jb
fidivl
jp
mov
dec
dec
addr16
mov
in
jb
mov
imul
popa
les
ljmp
dec
stos
adc
scas
dec
adc
sbb
lods
dec
mov
je
mov
aam
ja
pop
stos
ds
dec
push
lahf
push
popf
or
out
inc
xor
xchg
push
or
sbb
adc
pushf
mov
mov
lock
push
jno
dec
sbb
sub
lds
ret
pop
fsubl
nop
imul
push
sti
in
add
jg
aad
ss
inc
enter
adc
scas
xchg
gs
es
lret
int
repnz
loope
dec
jl
pop
lcall
stc
fcmovnb
mov
scas
adc
xchg
mov
movsl
pushf
loope
out
dec
jae
pop
pop
test
xor
in
mov
sub
jb
push
cld
int
imul
dec
pop
enter
lret
outsl
sbb
dec
xchg
sub
adc
stos
repz
outsb
inc
out
xor
sbb
ljmp
sub
or
aad
scas
mov
das
sbb
es
adc
pusha
sub
in
fidivl
test
sbb
punpckldq
mov
stos
std
inc
in
out
mov
shll
or
out
cmp
scas
mov
mov
clc
jb
test
pop
sarb
hlt
pop
mov
cmp
xchg
jecxz
frstor
sarb
pop
push
jno
cmp
fcompl
fiadds
adc
fstpt
gs
fisubs
dec
sbb
iret
test
adc
lds
xlat
jnp
popa
aad
ljmp
movsl
pop
sbb
push
iret
mov
nop
fs
jae
jbe
movsb
push
imul
cmp
xlat
jne
lret
inc
fildl
jl
jne
and
iret
jns
fwait
in
jl
fs
pop
dec
xchg
inc
daa
outsb
cmp
fsubrp
or
sbb
dec
shll
loopne
and
clc
clc
cmpsb
xchg
ret
imul
mov
vmovlps
jmp
jb
lret
out
addl
gs
adcl
pop
das
lods
adc
pop
sub
cmp
push
jge
scas
es
and
call
jbe
outsl
xchg
mull
icebp
or
push
pop
pop
mov
push
jne
gs
icebp
push
repz
push
and
sahf
sbb
loop
or
push
divb
test
add
lds
int3
jns
inc
push
cmp
lods
mov
sbb
pop
subl
nop
inc
fcoms
test
jb
ret
adc
cmp
stos
mov
pop
mov
cmp
std
mov
xor
push
fnstenv
cmpsl
pop
xchg
inc
loop
push
fidivrs
mov
add
mov
mov
add
sarl
jecxz
bound
adc
mov
mov
xchg
xor
shrl
mov
sub
repnz
lret
cpuid
mov
js
into
and
jmp
xor
jg
mov
fsubs
sbb
dec
add
sub
pop
out
cmp
ds
loopne
lahf
cli
dec
dec
leave
sub
dec
fs
xor
fisubl
inc
xchg
lret
ror
je
mov
mov
jmp
xor
sub
xor
ficompl
stos
mov
cmp
bound
xchg
lret
call
pusha
mov
cmp
aam
mov
adc
cmp
xchg
jne
fbld
fldt
nop
daa
cmpsb
push
mov
cltd
jge
outsl
lret
mov
pop
pop
imul
mov
dec
jno
les
mov
sbb
cli
test
jno
xor
jecxz
xor
dec
xchg
sub
inc
in
pop
cmp
fsubrs
and
lret
or
jo
shr
dec
daa
jb
mov
int3
popl
xor
hlt
xor
mov
push
arpl
and
jo
je
int
cmp
inc
mov
cmpsb
mov
lods
loopne
ljmp
loop
inc
imul
xor
add
out
or
sub
xchg
call
push
push
leave
xchg
pop
repnz
sbb
and
mov
jle
call
pop
jg
lahf
in
cmp
lds
push
iret
cmp
daa
js
rclb
dec
cli
inc
hlt
fcoml
sbb
lret
push
add
push
jecxz
sar
jo
jl
mov
dec
das
push
aas
mov
cltd
das
aam
bound
pop
or
mov
sbb
xor
or
or
sahf
inc
divl
jp
dec
push
push
ljmp
lods
in
cmp
aam
out
sbb
mov
adc
xchg
adc
notl
jb
add
std
xchg
je
jg
xchg
clc
mov
adc
sbb
je
test
xchg
in
repz
mov
ss
std
test
or
inc
imul
jp
or
inc
loopne
cltd
lds
jg
insb
or
jmp
popa
mov
daa
fcmovb
jnp
cwtl
inc
popf
adc
and
lods
jb
adc
push
jecxz
imul
jnp
dec
shr
repz
add
enter
insl
push
insl
je
imul
ljmp
into
ds
or
mov
int3
jno
pop
lea
insb
pop
sub
mov
loopne
aad
pop
outsl
aas
ret
lahf
in
shl
lods
roll
fmull
adcl
sub
push
bswap
push
bound
cmp
pushf
shrl
push
mov
into
sbb
stos
shrl
xchg
adcl
jno
insb
push
arpl
aam
lods
mov
call
mov
lret
push
sbb
lret
arpl
push
jbe
in
fdivs
adc
push
stos
mov
push
dec
out
scas
jne
push
jb
fwait
shlb
loope
sub
jp
pop
clc
add
push
mov
jae
pop
jg
sub
adc
jb
popa
dec
ret
dec
fucomp
xor
gs
cmp
stos
leave
mov
xchg
shrl
mov
inc
fwait
add
iret
popa
inc
xchg
fadd
mov
cmp
aam
jle
dec
popa
push
inc
notb
push
jno
pop
inc
jnp
aaa
in
add
ja
cltd
mov
dec
test
sti
sahf
adc
jno
sbb
push
xor
cmp
mov
pop
xchg
adc
insb
push
push
sbb
dec
dec
jb
mov
dec
xchg
dec
jle
in
mov
mov
lahf
decb
cmpsb
cmpb
cli
xor
xor
push
pop
sub
nop
scas
movsl
adc
clc
or
jne
jmp
addb
loop
sub
and
fsts
mov
mov
lret
out
stc
dec
jp
and
xchg
or
addr16
cmp
mov
mov
mov
jp
fadds
icebp
pusha
aaa
lea
mov
jb
cmc
or
fs
into
loope
and
push
sti
stos
out
rcrl
ss
and
sbb
cmpsb
xchg
inc
stos
pop
or
jns
lods
jno
fsubrs
pop
add
pusha
jne
mov
inc
cld
enter
jl
fsubrp
adc
sbb
jne
nop
sbbb
jne
xchg
adc
mov
adc
nop
test
enter
shr
pop
scas
lods
jmp
add
das
push
stos
mov
dec
adc
mov
xchg
lods
fbstp
ror
das
lods
aas
adc
imul
leave
lods
mov
pop
out
sbb
push
inc
scas
cli
mov
shlb
xchg
scas
mov
xchg
insb
xor
psubusw
push
xchg
inc
pop
out
inc
add
pusha
pushf
cmp
push
cltd
sahf
repz
jno
sbb
mov
pop
faddl
out
roll
outsl
xchg
pop
test
or
push
mov
in
mov
dec
sbb
xchg
shl
sbb
xchg
mov
jmp
lea
xchg
and
nop
repz
ss
rcll
mov
sbb
inc
addr16
nop
subb
movsb
cmpsb
jg
movsb
jae
xchg
fdivs
nop
daa
sbb
mov
ds
add
and
popa
movsb
cmp
jbe
jns
rol
mov
ljmp
movsb
and
bound
rorb
inc
rcrb
push
lods
mov
mov
cmp
push
fcmovnu
adcl
pop
test
mov
stos
shrl
mov
cmp
lea
rcl
cli
mov
xor
ljmp
dec
inc
mov
push
xor
xor
aaa
xor
mov
aam
inc
in
jne
out
test
clc
out
fcomip
leave
add
movsb
mov
mov
pop
fstps
lret
test
fstps
orps
std
and
sub
mov
jg
pop
xor
xlat
ret
xchg
shlb
stc
arpl
cltd
jns
jge
loope
jmp
dec
xchg
mov
xor
dec
xor
sbb
or
mov
pop
ja
clc
dec
dec
jle
cli
push
mov
lock
adc
mov
aad
xchg
xchg
out
icebp
ja
adc
scas
xchg
xor
scas
dec
jbe
adc
push
dec
stos
shld
pop
test
icebp
sbb
inc
mov
sbb
push
fldenv
mov
int3
cwtl
mov
fstp
jle
scas
int3
pop
scas
jbe
hlt
add
xchg
mov
add
outsb
inc
mov
lods
inc
pushf
mov
jns
or
cltd
daa
lret
push
out
int3
and
sub
cmpsb
scas
aad
xchg
cli
dec
mov
out
xlat
mov
test
sbb
in
scas
mov
or
je
pop
push
aad
and
aad
cmp
test
aam
aad
push
dec
jno
mov
test
sub
xchg
or
fimull
popf
pop
push
mov
mov
loopne
adcl
stos
push
into
shlb
xchg
popf
dec
popa
push
dec
movsb
inc
imull
sub
lea
or
xchg
jo
inc
push
mov
push
nop
push
loopne
lock
and
adc
inc
push
mov
push
nop
push
loopne
lock
and
adc
inc
push
mov
push
nop
add
jbe
data16
and
adc
rcl
push
pop
ss
mov
push
nop
jno
js
aas
sub
cmp
push
push
inc
es
addr16
inc
xor
fs
test
xchg
cmpsb
divl
out
mulb
es
addr16
pop
push
pop
data16
jbe
xchg
xchg
cmpsb
divl
xchg
mov
cmpsl
push
push
push
inc
es
addr16
pop
push
pop
data16
jbe
xchg
mov
xchg
out
lds
cmpsl
jb
ja
adc
dec
roll
lea
xchg
lods
divl
pop
push
cmp
outsb
ljmp
cwtl
inc
out
push
clc
lcall
cmpsl
pop
testl
mov
cmpsl
pop
stc
inc
jl
dec
cmpb
inc
test
pop
cmpl
repnz
xchg
pop
mov
dec
mulb
in
xor
push
test
ja
in
rolb
dec
sbb
dec
jge
push
lret
mov
pop
jbe
lcall
sub
cmp
ret
div
cmp
out
mov
insl
add
cld
data16
push
repz
and
jae
mov
push
inc
es
addr16
pop
push
pop
data16
jbe
xchg
xchg
cmpsb
divl
xchg
mov
loope
cmp
pusha
xor
and
inc
or
push
idivb
xrelease
xchg
incb
push
bound
and
sub
pop
xor
hlt
xchg
icebp
stos
mov
pop
pushf
leave
popa
pop
push
xor
push
adc
jnp
pop
data16
jbe
xchg
xchg
cmpsb
divl
xchg
mov
cmpsl
push
push
push
inc
es
addr16
pop
push
pop
data16
jbe
xchg
xchg
cmpsb
divl
xchg
mov
cmpsl
push
push
ja
mov
rclb
js
ret
out
adc
sbb
push
fists
dec
mov
scas
pop
mov
je
div
lcall
fxch
cmpsb
pop
xchg
pushl
or
loopne
outsl
xchg
popf
negb
sti
adc
loope
add
test
test
push
inc
lcall
sub
dec
jb
push
dec
push
cmp
imul
push
jnp
dec
cmp
adc
pop
mov
push
cmp
popa
cmp
pop
and
sti
lods
xchg
std
mov
subb
es
mov
mov
lret
add
imul
repz
shr
int
mov
lret
fsubp
cmpsb
lock
lret
cmpb
faddp
cmp
add
movsl
shl
pusha
lods
mov
clc
ss
fcoms
mov
lahf
je
pop
fisubl
int3
les
fcmovu
xor
cs
xlat
cs
push
into
arpl
dec
sarb
ds
and
fstpl
adc
pop
jg
idivl
rorb
cmp
dec
or
and
sbb
inc
push
popf
adc
mov
das
pop
mov
in
js
and
xor
jbe
push
or
stos
lcall
test
pop
fcomps
add
rorb
inc
dec
push
mov
je
mov
lock
xchg
dec
xchg
cmpl
jge
xor
sti
mov
add
push
fidivrl
add
out
jns
aad
cmpsb
inc
movb
jecxz
ljmp
pop
icebp
pop
xor
icebp
insb
pop
mov
or
rcrb
fisubl
jg
aas
adc
fwait
add
iret
movl
mov
mov
jb
xchg
lods
mov
insl
dec
and
push
notl
jno
loopne
adc
scas
pop
test
fstps
sbb
or
dec
rcll
pop
xor
jmp
adc
lods
dec
daa
cld
xchg
mov
les
lahf
repnz
jbe
cwtl
dec
or
xchg
push
fidivs
pop
sbb
shlb
pop
xchg
xchg
out
adc
sub
je
jne
xchg
pop
ror
shlb
pop
aaa
sbb
push
repz
jl
dec
imul
pop
pop
jbe
xchg
das
mov
xor
inc
jnp
dec
mov
cmp
push
push
in
sbb
jg
adc
and
fwait
sbbl
shrb
repnz
jg
xchg
add
mov
sbb
push
pop
mov
or
sbb
push
dec
xchg
mov
movsl
cmp
and
cmpsb
push
jbe
repnz
arpl
pop
jecxz
mov
ljmp
pop
mov
fstpt
rclb
daa
stc
mov
and
jmp
push
add
mov
jp
jno
shl
xchg
inc
imul
rcrl
imul
je
inc
hlt
mov
frstor
jb
jb
movl
das
dec
mov
push
add
or
loopne
jno
pop
sub
and
stos
mov
inc
cmp
or
and
lea
leave
cmpsl
sub
scas
jno
gs
dec
and
push
sbb
imul
stc
jbe
cmp
xchg
test
fwait
jl
dec
or
in
or
popf
pop
mov
mov
push
repz
pop
rcrb
and
ja
in
pusha
push
aas
clc
xor
cmpsb
lods
pop
fdivrl
ljmp
adc
data16
pushf
sahf
jg
popf
push
xor
sbb
pop
mov
leave
fmull
cmp
mov
repz
dec
cs
sbb
add
popf
lock
movsl
scas
dec
aaa
push
lods
icebp
inc
in
sbb
in
mov
loope
aaa
jecxz
mov
adc
cmc
mov
aaa
xchg
fstl
add
mov
sbb
clc
jmp
xchg
mov
in
shl
xor
push
rorl
cld
cmc
xlat
nop
cmpsb
movsl
lret
jp
and
jne
push
mov
and
xor
loope
loope
fcmovnu
rcl
out
pop
gs
out
in
mov
sbb
out
push
pop
insl
adc
cwtl
jmp
in
ret
es
mov
ljmp
inc
mov
leave
gs
push
sahf
xchg
fmul
insl
in
cmp
mov
jge
push
daa
xlat
sar
mov
sbb
xor
pop
jne
or
inc
xor
push
jno
cmpsl
aad
sub
movsl
cmc
cmp
dec
leave
fldl
arpl
movsl
jbe
sub
mov
inc
stos
ret
mov
or
and
leave
push
xor
std
aaa
jae
fwait
or
xchg
mov
sub
movl
dec
push
js
lret
lock
jecxz
cmp
dec
int
into
ret
push
jb
movsl
stc
cmp
aas
stc
shlb
cld
dec
cmpsl
icebp
daa
and
sub
int3
push
mov
sub
add
ljmp
ljmp
inc
cld
dec
shlb
adcl
test
pop
std
push
aam
and
pushf
aaa
loope
repz
cmp
push
imul
or
xchg
cmp
call
in
jg
adc
ret
pushf
adc
push
and
cmp
sbb
xor
sbb
test
mov
aam
test
pop
pop
ja
push
sub
sub
jge
arpl
test
and
test
cmp
addl
mov
jg
sub
jns
imul
push
hlt
aam
push
jecxz
dec
cmp
push
inc
rcl
nop
xchg
xlat
or
xor
filds
mov
xor
mov
leave
addr16
sub
pusha
cmp
in
shll
mov
sub
lea
imul
add
pop
imul
test
repnz
roll
cli
popa
adc
in
repz
xor
bound
dec
adc
stos
sub
push
push
and
mov
mov
sbb
push
mov
test
and
jb
cmpsl
pop
jno
and
ljmp
repz
repnz
ja
sti
shlb
adc
cmp
fs
dec
das
test
or
xchg
jmp
pop
addr16
in
inc
dec
scas
iret
jno
cmpsb
fadds
add
mov
fwait
pop
sub
popf
pop
ds
inc
outsl
das
jno
adc
fs
cli
sub
sub
pop
outsb
cmp
jp
lds
xchg
pop
in
add
xor
mov
loop
call
sub
xchg
adc
jle
insl
sub
mov
les
or
add
es
mov
inc
cld
leave
xchg
cld
xor
push
and
sbb
hlt
mov
adc
rol
lret
xchg
in
imul
out
dec
sbbb
xchg
jmp
in
call
sub
jbe
cmp
das
pop
mov
es
xchg
mov
es
pop
dec
int3
dec
mov
pusha
mov
ret
shll
out
mov
and
test
mov
addr16
out
stc
or
test
addl
or
jl
scas
dec
lahf
stc
or
mov
paddusw
cmp
int
popl
scas
cs
in
push
cmc
mov
sti
stc
adc
push
dec
mov
cs
daa
and
adc
adc
out
and
pop
xchg
pushf
div
fcmovu
xor
dec
nop
pop
push
cld
mov
sbb
xchg
ficoml
scas
js
ret
repnz
bound
mov
cmp
bound
jne
ret
clc
pop
aam
mov
push
dec
mov
je
std
mov
call
mov
cwtl
lret
mov
das
js
in
mov
jg
addl
aas
icebp
cmpsb
out
add
ret
pop
ret
pushf
fisubrl
lods
das
call
stos
mov
push
ficomps
xor
in
push
rclb
xchg
aad
sti
addl
add
push
je
pushf
fstpt
cmp
mov
mov
fnstsw
xchg
aad
push
stos
xlat
xchg
in
fstps
and
mov
fdivrl
lret
cmc
outsl
or
lea
inc
add
xchg
aas
push
inc
mov
pop
mov
mov
pop
imul
addr16
pop
stc
out
inc
das
out
in
pop
cmp
test
adc
gs
inc
adc
mov
sub
mov
test
clc
mov
jecxz
adc
xchg
loope
xchg
and
jle
ret
cmpsb
pop
jb
push
inc
adc
dec
stos
js
ja
inc
sub
push
mov
fs
lods
ret
jno
test
sahf
ficompl
ss
in
rcrb
in
lahf
jb
sub
cmp
leavew
fisttpl
fdiv
pop
das
fstpl
xchg
cmp
or
xchg
adc
and
jne
and
out
jp
jae
or
sub
fmulp
aam
in
and
pop
add
test
cmpb
hlt
test
cld
jns
inc
cmp
add
adc
test
xchg
in
jmp
add
push
sub
mov
pushf
sub
mov
mov
test
ds
adc
pop
mov
jbe
pop
cwtl
lods
stos
inc
add
pop
pop
testl
pop
mov
push
cs
mulb
or
es
aam
aad
fidivs
sbb
nop
lret
les
lods
fstl
cmp
rcrl
addl
push
push
pop
in
dec
pop
or
sbb
push
out
sar
inc
call
xor
in
dec
mov
push
inc
cmp
jle
xor
pop
xor
ja
bound
mov
call
sbb
insl
cs
push
mov
popf
in
fsubrl
jnp
shlb
sub
ret
sbb
push
jge
mov
popa
inc
in
outsb
and
or
scas
popa
xchg
pop
pusha
andl
dec
shrb
or
fildll
mov
iret
shlb
push
jmp
jge
movl
push
push
adc
loopne
xchg
dec
inc
xlat
sub
insb
adc
scas
ja
bound
xchg
sbb
or
mov
xchg
or
out
cmp
mov
cld
hlt
adc
push
fnstenv
dec
aam
adc
pushf
mov
sub
mov
stos
or
gs
jmp
inc
push
mov
mov
cmp
jp
jb
mov
imull
fistpll
ja
xchg
shl
mov
dec
clc
outsl
or
loopne
or
mull
rolb
data16
enter
add
or
insb
xchg
lds
lods
sbb
lcall
jmp
xchg
leave
scas
bound
mov
fsubrl
fdivrs
lea
dec
daa
nop
popa
mov
sbb
push
cs
sbb
inc
or
and
jmp
add
rorb
inc
mov
stc
test
lods
or
push
and
mov
push
aam
shlb
mov
into
xchg
into
lds
xchg
int
fwait
push
mov
rcrb
adc
fistl
les
pop
xlat
add
add
mov
insb
pop
dec
jge
sub
mov
shlb
sarl
xchg
sbb
stos
int
daa
xchg
stos
out
cmpsb
je
test
jecxz
imul
cmp
orl
jp
es
test
lock
and
insl
cmp
nop
pusha
and
lcall
sub
ret
les
cmp
cmp
movsb
sub
adc
jae
sbb
dec
loopne
test
mov
xchg
pop
mov
adcb
sarl
jg
sub
rolb
fdivl
or
dec
lods
repnz
dec
fimull
out
lret
sbb
pop
sub
fisttpl
sbb
int
sbb
push
xor
out
enter
push
fs
lods
add
jo
cmp
jle
imul
popf
ss
jnp
dec
xor
mov
jo
cmp
sbb
cmp
scas
out
dec
pop
or
xchg
out
mov
xchg
mov
mov
and
movsl
cmp
pop
and
stos
mov
dec
js
movsl
in
and
pop
push
add
push
mov
sub
int
push
inc
or
pop
cld
enter
dec
lret
inc
scas
les
sub
mov
adc
shrl
movsl
cmp
cmp
add
sbb
cld
cmp
or
addr16
hlt
inc
jo
or
xchg
es
mov
loopne
in
jb
shlb
out
into
push
nop
dec
inc
mov
mov
mov
xor
adc
pop
mov
push
fistl
rcl
mov
xchg
adc
cmp
sbb
enter
jecxz
sahf
mov
xor
fstpt
or
repnz
xchg
sbb
push
mov
push
add
sbb
lea
imul
loope
add
cwtl
mov
daa
mov
ja
je
xchg
lods
stos
ret
outsb
push
mov
mov
xor
mov
in
js
shll
xchg
push
stc
pushf
mov
inc
mov
add
sub
dec
inc
fnstcw
cwtl
or
sub
inc
pop
pop
pushf
add
pop
xchg
mov
sub
movsl
sub
mov
mov
xchg
sub
call
add
mov
cwtl
das
add
fildl
fnstenv
cld
int
addl
pushf
outsb
loop
mov
xchg
fs
loope
lcall
das
dec
dec
fists
push
leave
nop
dec
cmp
xchg
stc
pushf
mov
xor
ror
testb
adc
mov
add
push
cmp
inc
inc
data16
popa
sahf
insb
or
fmuls
mov
daa
lods
mov
add
inc
std
shlb
inc
jne
cmp
cli
hlt
xchg
frstor
push
je
inc
push
pusha
mov
dec
icebp
mov
inc
ficompl
mov
out
push
pop
pop
movsb
adc
sbb
inc
jae
xchg
mov
testb
mov
mov
xchg
pop
lret
xchg
jg
push
lcall
mov
testl
pop
mov
jns
cli
scas
xor
add
pop
jbe
push
shlb
lods
adc
mov
mov
lcall
jb
jmp
sbb
rcrb
int
dec
mov
les
inc
dec
mov
shrl
pop
addl
and
add
rcrb
adc
imul
mov
xor
orl
mov
mov
test
bound
xchg
pop
mov
in
jmp
push
fimull
ret
mov
cwtl
inc
aas
leave
inc
mov
cltd
aam
cmpsl
sub
pop
imul
movsl
iret
sbb
imul
jae
test
and
arpl
movsb
push
fwait
addr16
out
cld
cmp
ret
out
insb
and
out
inc
mov
jns
cmp
dec
nop
pop
sahf
fs
add
in
mov
daa
aas
push
push
inc
sti
ss
push
out
call
cld
or
movsl
aaa
in
mov
jnp
subl
aas
out
stos
dec
dec
add
sub
inc
out
rorl
outsb
xchg
adc
xchg
mov
in
seta
adcb
mov
xchg
xchg
inc
inc
daa
mov
xor
jnp
rclb
cli
mov
push
or
mov
shrb
or
mov
popf
lcall
push
dec
cwtl
fsubp
out
inc
mov
ret
pop
inc
mov
aaa
inc
mov
and
aam
stos
pop
jo
xor
shlb
xor
fcoms
pushl
in
fsubs
mov
incl
lods
movsb
stos
or
mov
out
or
xchg
inc
aaa
cwtl
jns
shlb
or
lahf
out
or
and
push
mov
or
clc
fidivl
and
mov
lret
arpl
mov
cmp
repnz
into
aam
rcl
push
cmpsb
data16
jbe
aaa
push
sub
mov
inc
mov
xchg
imul
leave
jmp
mov
test
lods
lret
fcoml
decl
cmpsl
dec
iret
popa
out
mov
mov
or
adc
cmp
adc
in
xchg
xchg
mull
icebp
sub
pop
test
push
call
adc
iret
sub
adc
int3
shrl
je
lds
sahf
std
mov
cltd
dec
push
push
add
stos
test
outsl
or
icebp
sub
push
xor
aam
vmovlps
mov
mov
push
mov
pop
lods
repnz
int
sub
and
pop
lret
stos
in
repz
test
es
fcompl
scas
push
sbb
lahf
sub
stc
mov
or
add
lret
and
or
gs
mov
and
adc
add
sbb
jae
in
jne
push
shll
push
jne
jp
icebp
lods
mov
subl
mov
aam
jbe
fwait
popa
movb
and
jg
pop
pop
cmpsl
rclb
orl
inc
and
rcl
sbb
sub
lods
sub
xchg
mov
aas
xor
aaa
xor
or
mov
or
jnp
mov
mov
sti
jecxz
push
sbb
ja
rolb
les
popa
pop
ja
push
xchg
mov
xor
ret
inc
ror
filds
pop
leave
mov
insb
cld
loop
and
shlb
xor
or
sub
mov
push
lret
xor
enter
aad
jmp
pop
popa
movsb
and
jp
shll
pop
and
repz
mov
xchg
add
mov
insb
insl
jnp
imul
loop
push
call
pusha
jle
cltd
pop
or
sbb
fmull
loope
out
ficoml
add
call
dec
lret
fisubrl
add
pop
pop
shl
add
mov
pop
fmuls
push
std
xor
pushf
test
mov
mov
repnz
imul
popf
clc
or
addr16
cwtl
loopne
dec
adc
pushf
mov
mov
or
mov
and
push
das
aad
jecxz
or
and
daa
xlat
and
stos
xchg
adc
xor
mov
sbb
fincstp
sub
fwait
gs
lret
or
xor
popf
xchg
pushf
out
lcall
mov
sahf
mov
or
hlt
adc
ja
push
sbb
xor
pushf
addb
in
shll
cmpsl
push
pushf
cmp
inc
adc
add
cltd
stos
in
jb
add
jb
mov
inc
jnp
test
in
pop
sbb
cmc
outsb
sub
mov
push
sub
pop
jmp
push
movsl
jo
in
loop
push
jno
mov
fsubrs
fidivrl
add
xor
and
xchg
dec
lcall
and
in
pushf
dec
cmpsb
inc
mov
adcl
fisubl
scas
into
aaa
ja
mov
push
and
fldl
cmp
inc
cmpsb
push
aam
or
cmp
cmp
or
stc
jne
sbb
ljmp
add
pop
mov
sub
outsl
jnp
mov
add
adc
cwtl
pop
pop
into
lds
rolb
cld
pusha
sahf
mov
ss
xor
adc
xchg
scas
push
movsb
insl
sbb
das
jmp
mov
fadd
scas
cmp
sahf
xchg
cmp
and
jnp
lcall
dec
sbb
or
pop
xor
sbb
jnp
ret
aas
xchg
shrb
add
neg
mov
cmp
cmc
ret
cmp
scas
adcb
push
lods
jns
cmp
nop
cltd
jns
sahf
mov
subb
push
xor
popf
or
hlt
sub
pop
mov
imul
jns
repz
icebp
sbb
xor
or
xor
divl
cmp
daa
mov
fcoml
mov
lods
dec
shlb
lcall
or
jle
shl
mov
xor
push
adc
mov
je
jmp
addr16
loopne
cs
call
xchg
push
mov
and
adc
jns
aam
or
mov
pushf
add
loopne
pop
cmp
iret
pusha
aad
pop
push
inc
bound
and
ljmp
dec
addr16
pop
test
jl
mov
or
lods
outsb
daa
loop
gs
inc
shlb
inc
sbb
addr16
pop
push
pop
data16
jbe
xchg
xchg
cmpsb
divl
xchg
mov
cmpsl
push
push
push
inc
es
addr16
pop
push
pop
data16
jbe
xchg
xchg
cmpsb
divl
xchg
mov
cmpsl
push
push
push
inc
es
inc
pop
push
pop
data16
xchg
xchg
cmpsb
divl
xchg
mov
cmpsl
push
push
push
inc
es
arpl
push
xchg
mov
fdivrs
imul
pop
pop
js
dec
push
pop
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
outsb
inc
out
push
fisubs
jbe
outsb
mov
push
ljmp
out
idivb
xchg
adc
cmpsb
push
mov
inc
out
push
fbld
jbe
push
scas
push
sahf
mov
jle
outsb
mov
out
idivb
xchg
xchg
push
in
mov
inc
out
push
fisubs
jbe
push
scas
push
sahf
mov
jle
outsb
aas
subb
pop
ret
inc
stc
ds
mov
inc
out
or
rorl
lcall
ficoms
pop
jae
inc
mov
je
adc
stos
add
jmp
or
xchg
sub
out
jnp
repz
div
out
push
out
inc
rcll
and
adc
cmp
sub
es
addb
aas
cmp
aad
stos
and
pop
adcb
test
test
pop
sbb
imul
cmpsb
adc
push
pop
cmpsb
add
cmp
orl
xchg
inc
push
pop
icebp
cmp
shr
test
pop
jae
fwait
push
dec
xorl
cs
pop
mov
mov
inc
out
push
fisubs
jbe
push
scas
push
sahf
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
fisttps
jo
push
fldcw
pushw
mov
sub
jae
jp
mov
data16
dec
lret
push
divb
sub
add
jne
pop
std
dec
ret
adc
mov
rolb
push
scas
push
sahf
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
mov
inc
out
push
fisubs
jbe
push
scas
push
sahf
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
mov
inc
jmp
push
aam
xor
lret
jp
popa
les
leave
cmp
cmpsb
out
scas
jg
fld
lcall
mov
and
push
adc
mov
fs
test
or
lahf
push
mov
imul
xchg
inc
jno
sbb
cmp
mov
push
fdivr
imul
push
add
bound
scas
xchg
and
pop
in
inc
add
or
leave
pop
mov
mov
insl
pop
notl
and
mov
dec
shlb
sub
inc
shrl
orl
cmp
aam
int
mov
inc
and
and
add
rcll
dec
sub
pop
xchg
mov
icebp
pmaxub
cwtl
out
test
dec
je
movsl
test
add
sahf
ret
shlb
lret
pop
in
adc
in
cmp
jae
pushf
sub
lcall
arpl
add
lahf
or
push
repz
icebp
and
out
cmp
inc
adc
stos
add
mov
cmp
in
gs
dec
sub
xchg
mov
mov
jo
pop
ss
js
inc
in
dec
jnp
cmpb
push
lock
jae
ss
jl
sbb
cmpsl
stos
popf
pop
sarl
lret
and
negl
fwait
jns
cltd
popf
push
cmp
mov
loope
cwtl
dec
pop
jl
and
add
sub
leave
cmp
nop
aad
or
and
dec
add
dec
in
cld
fimuls
test
add
jl
pusha
pop
cmpsl
inc
add
cwtl
mov
es
jg
loop
xor
push
sub
das
out
pop
xchg
aam
fcompl
xor
or
orl
mov
sbb
cld
xor
add
in
int3
and
lock
cli
sub
daa
sub
push
mov
into
xlat
mov
arpl
dec
mov
loop
mov
xor
xchg
pop
scas
push
push
sti
lret
test
xor
arpl
inc
cmp
xchg
imul
mov
in
repnz
fcoms
into
add
dec
mov
ror
jnp
std
jo
add
les
test
xor
sbb
jge
test
and
dec
cwtl
xor
frstor
cmp
insb
fildl
adc
and
cld
dec
scas
jae
out
out
scas
jl
shl
jl
and
adc
imul
sub
inc
int
fdivrs
into
sbb
jne
lods
dec
in
adc
mov
and
js
push
adcl
jecxz
or
out
jns
pusha
adc
es
mov
inc
movsl
sbb
push
scas
sub
mov
stc
popf
dec
in
xchg
cwtl
in
jp
xor
test
mov
push
push
fidivrs
xor
xor
gs
lcall
add
cmp
out
insl
mov
jnp
test
xorl
movsl
jmp
mov
adcl
adcl
sub
sub
and
xlat
pop
add
xchg
push
lds
add
mov
push
sbb
sbb
ret
add
fwait
inc
out
jmp
das
pushf
cmovs
mov
lret
add
sbb
fsubr
xchg
ret
jge
scas
or
clc
fnstcw
data16
mov
call
add
pop
jmp
push
data16
pop
movsb
cli
sbb
subl
dec
fisttpll
in
cmp
sbb
hlt
add
scas
cli
add
gs
add
adc
adc
xor
orl
loope
xor
out
in
rcrb
lret
adc
and
mov
stos
ret
mov
mov
or
cmpsl
jge
fstpt
sbb
sub
xchg
inc
divl
dec
add
push
sbb
insl
mov
jmp
cmp
sbb
stos
push
push
push
int3
shrl
and
push
int
or
sbb
out
loopne
data16
cmp
nop
dec
push
mov
sti
dec
mov
into
push
or
cmp
jbe
jmp
pop
cmp
sbb
lods
mov
dec
test
mov
mov
xchg
movsl
sbb
test
xchg
jecxz
loope
jno
out
movsl
xor
xor
das
mov
out
aad
mov
cltd
jb
in
push
and
loop
push
or
cmpsl
push
sub
xor
push
pop
xchg
inc
scas
fwait
sbb
pop
lret
add
fldcw
and
add
jle
orb
push
push
int
push
call
mov
sub
gs
mov
int3
or
clc
movb
mov
imul
sbb
ja
enter
pop
adc
repz
int
jl
insb
xlat
or
mov
cld
fwait
push
mov
sbb
dec
and
sbb
add
jae
push
addl
std
push
xor
cmp
leave
xchg
or
mov
cmp
jne
or
pop
shlb
xor
push
xchg
cwtl
ret
lret
mov
sbb
inc
inc
lret
out
jecxz
inc
test
cmc
mov
scas
lret
scas
movsl
cs
ret
jg
sbb
sub
andb
xchg
cmp
sub
test
adcl
inc
push
sbb
cli
jnp
les
std
dec
sbb
xor
sti
outsl
lods
cmpsb
stos
sbb
pusha
pop
jno
mov
je
add
in
cli
dec
mov
push
cs
jecxz
insb
out
and
stc
and
mov
movhps
test
ss
jge
bound
push
pop
pop
and
xchg
pop
fldl
mov
xlat
or
jns
push
scas
js
out
pop
push
aam
xchg
adc
add
test
mov
bound
cmpsl
das
movsb
sub
cmp
andl
sub
inc
cld
clc
jmp
stos
aaa
ljmp
and
push
cld
fbstp
pop
out
or
roll
add
dec
cmpsl
xor
jl
xchg
cmp
mul
mov
or
fwait
je
fisubl
cld
negb
push
cmp
push
pop
loop
xrelease
pop
mov
roll
push
push
out
xorb
repz
sbb
cld
fbld
fldl2e
xchg
mov
adc
cmp
rolb
aas
push
push
pop
mov
sub
out
adc
rolb
mov
pop
push
inc
imul
ficoms
fsubrs
gs
mov
adc
jae
and
call
xor
cmpsb
lret
pop
push
popf
xchg
into
idivb
gs
and
in
sti
imul
lret
jmp
insb
scas
aaa
addr16
mov
push
add
sbb
cmc
out
or
nop
or
inc
push
sar
mov
pop
sbb
je
mov
out
pusha
jmp
clc
xlat
ret
mov
mov
lret
mov
xor
es
lahf
sbb
jns
lret
jmp
or
xor
and
fucom
lahf
mov
add
stos
xor
test
mov
xlat
imul
adc
loopne
loop
xchg
mov
push
inc
mov
and
mov
dec
jbe
mov
xchg
push
xchg
fs
add
rorb
cmp
icebp
jl
arpl
aaa
inc
andb
sti
leave
xchg
outsb
add
das
mov
test
ficoms
insb
jle
adc
rorl
adc
out
rcr
jl
lcall
xchg
sti
inc
push
in
adc
and
ret
scas
ljmp
cmp
mov
push
in
out
stos
mov
add
push
mov
jl
pop
mov
cltd
ljmp
xchg
ljmp
shrl
ficomps
cmpsb
push
cmc
sbb
push
stc
les
lds
lods
jl,pn
test
jbe
cmp
mov
hlt
mov
push
lea
fcmovnbe
mov
and
jl
jge
cmp
cmpsl
pop
insl
mov
push
pop
cs
mov
sub
movsb
add
ja
mov
cmpsb
ret
stc
call
push
push
in
dec
pop
cmp
xor
jecxz
aaa
inc
pop
test
aad
jg
or
sub
jnp
hlt
mov
lds
sub
stc
out
dec
enter
xchg
inc
add
sarl
pop
dec
insb
push
cmpsb
mov
mov
mov
jl
mov
jecxz
push
pusha
pop
dec
mov
mov
add
xor
cmc
popf
data16
imul
in
pop
adc
and
push
fsub
hlt
sub
dec
or
pop
xorl
xor
aam
add
shrb
stos
nop
cmp
mov
ljmp
stos
push
popf
cmp
imul
fisttpl
insl
clc
mov
adc
cmp
imul
push
es
inc
icebp
cltd
or
jbe
stos
push
fstpt
xor
stos
jl
imul
xchg
sub
nop
incl
mov
sbb
icebp
jg
dec
iret
ja,pn
add
in
cld
push
push
jecxz
imul
popf
cmp
mov
sbb
cmpl
dec
ss
inc
in
dec
and
lods
push
fistpll
fwait
mov
stos
xchg
imul
xlat
jo
scas
jno
push
push
pop
push
ss
rorb
fiadds
add
push
cld
sbb
xchg
lcall
sbb
gs
jle
fcoms
xor
push
jb
pusha
lea
mov
pusha
stc
ljmp
retw
mov
in
sbb
mov
adc
loopne
sahf
mov
mov
sbb
push
mov
out
xchg
cwtl
leave
jmp
push
add
jl
xchg
dec
inc
jl
cmp
xor
cmp
jg
jo
sar
adc
gs
xchg
pop
mov
mov
loope
sub
shr
outsl
lds
sbb
xchg
pop
cmp
jb
push
cmp
stc
in
das
stc
jmp
shrb
mov
adc
clc
cli
push
adc
sbb
dec
sub
jmp
dec
jns
mov
ja
rclb
or
inc
cmp
mov
lcall
or
and
mov
dec
adc
sbb
ds
push
fsub
rorl
mov
add
dec
loopew
or
dec
imul
je
fcmovu
std
mov
mov
mov
repz
loope
jno
ret
fnstcw
dec
loopne
mov
mov
push
jmp
sbb
movsl
sahf
dec
pop
cli
and
and
pop
push
gs
in
movsb
push
pop
sub
cmp
mov
jle
aaa
inc
xorw
bound
inc
add
loopne
lahf
adc
mov
mov
cmpb
out
and
out
pop
je
std
loop
data16
push
mov
cs
ret
les
ds
xchg
xchg
into
sbb
loop
js
iret
stos
shr
aam
mov
cmpxchg
fists
xchg
je
cmp
jecxz
jbe
mov
sbb
dec
adc
or
scas
js
xor
dec
mov
adc
pop
test
mov
arpl
mov
sub
push
mov
mov
sbbb
aas
mov
inc
or
mov
clc
cli
aas
push
sub
les
sbb
xchg
fcmovu
lcall
pop
jae
and
mov
ss
push
mov
fwait
jns
testb
jae
daa
dec
jae
das
hlt
sbb
mov
and
mov
xchg
pop
mov
mov
inc
jne
sub
inc
push
sbb
cmp
repnz
stos
mul
mov
inc
sub
jl
mov
sub
lcall
out
stos
add
ret
mov
fsubp
jmp
subl
aad
addr16
repz
dec
dec
filds
imul
sarb
xchg
int3
sub
incl
sbb
subb
mov
test
or
icebp
lahf
scas
pop
popa
cmpb
outsb
xor
push
fsubrs
andl
stos
mov
out
mov
sarb
jae
xchg
inc
mov
xchg
mov
pop
mov
cs
mov
jne
jp
lods
push
push
out
insb
in
pop
or
xchg
das
pop
cmpsl
stos
mov
testb
shl
and
xchg
mov
lds
psubq
add
bound
add
rorl
mov
adc
popf
outsl
insb
outsl
fwait
sbb
push
dec
stos
andb
movaps
les
insl
ljmp
sub
xor
sti
pop
dec
sbb
das
pusha
int3
push
inc
imulb
inc
aas
jmp
outsl
add
test
popf
and
cwtl
xchg
cmp
mov
paddd
psubsw
xchg
push
push
and
lds
ljmp
jbe
push
xchg
xor
repnz
pop
aad
loop
rcrb
mov
je
loop
pop
ja
dec
xchg
push
xchg
subb
scas
pop
xchg
push
cmpsb
and
fisubrs
push
xchg
jle
frstor
into
aas
push
xchg
arpl
push
inc
lcall
push
xchg
cmp
fsts
cmp
out
push
xchg
push
movsb
dec
add
arpl
sbbb
cmp
aas
andl
cmp
and
jl
jl
dec
xor
mov
xchg
movsb
sub
ljmp
lock
inc
and
or
inc
aas
jno
std
int
dec
insb
fadd
leave
movsb
sahf
jmp
mov
pop
aam
mov
js
out
push
shll
test
push
push
les
or
aaa
mov
aad
xchg
mov
jo
adcb
in
clc
cmp
and
cmc
js
inc
mov
jg
jns
cmp
or
push
adc
push
jo
mov
or
add
mov
int
fdivs
clc
push
lret
mov
xchg
mov
dec
div
pop
sub
and
out
addr16
mov
or
sub
adc
push
xor
xor
test
jmp
mov
test
inc
insb
mov
out
pop
dec
sbb
imul
push
fists
jle
sbb
arpl
or
xchg
adc
test
jne
mov
sbb
pop
sti
comiss
icebp
pop
cmp
or
jb
dec
inc
daa
aad
push
frstor
adc
inc
cmp
push
dec
and
addr16
daa
push
fbld
lcall
repz
scas
mov
rcrb
clc
out
loop
and
shlb
shr
aas
lds
pop
fwait
jbe
pop
iret
adc
fwait
push
xchg
mov
sub
jnp
repnz
xor
mov
mov
fbstp
mov
bound
gs
aam
in
push
mov
dec
xor
mov
insl
mov
fcompp
xorb
sti
pop
arpl
xor
xchg
fmul
rcr
inc
movsb
loop
mov
push
mov
mov
xor
dec
dec
mov
xlat
testl
inc
rcpps
cltd
cmp
jecxz
dec
dec
pusha
adcl
xor
out
popf
aas
int
pop
xchg
cld
cs
push
ja
mov
jg
xchg
dec
jmp
mov
jnp
push
flds
filds
mov
mov
xchg
outsb
adc
mov
lds
nop
and
and
xchg
mov
push
gs
sahf
nop
std
xor
rol
pop
dec
xchg
lcall
or
je
push
xchg
mov
mov
inc
sbb
fsubl
loope
pop
rcr
push
add
fs
fwait
jge
dec
ret
xchg
and
jo
pop
out
pop
jecxz
fcmovb
mov
mov
cmp
sbb
fists
and
fstpl
and
outsl
sub
ss
push
sbb
xor
test
push
popf
sub
inc
pop
aam
mov
push
or
popf
sub
jo
movl
dec
scas
ja
pushf
js
mov
clc
dec
mov
inc
rcrl
xchg
pop
mov
add
mov
mov
inc
inc
setae
inc
rcrb
mov
roll
mov
in
cli
mov
mov
ret
fiadds
mov
sbb
fs
es
fidivl
adc
push
add
mov
add
mov
in
rcll
stos
xchg
jecxz
xchg
or
mov
stos
xor
lret
js
lret
mov
jae
jbe
add
jns
xor
insb
aam
repnz
xchg
lret
mov
jle
jl
dec
adc
xchg
dec
mov
stos
lock
sbb
jns
testl
mov
dec
aas
int3
mov
inc
mov
and
ja
jg
cmp
dec
and
sbb
cmp
mov
push
stc
sbb
xor
inc
and
mov
mov
or
sbb
mov
add
jo
pop
or
add
xor
sub
test
add
call
into
fwait
mov
stc
push
mov
mov
mov
cmp
lock
and
repz
or
inc
pop
andb
subl
xchg
fldl
dec
adcb
push
xor
inc
fcomps
push
cmp
mov
or
sbb
aaa
incl
cmc
jl
lret
cmpsl
jge
pop
leave
stos
imul
lcall
add
sarl
fs
add
cmp
inc
pusha
and
push
cli
pop
js
call
mov
orl
mul
sub
jge
jge
movsb
xchg
xchg
inc
mov
jo
movsb
jg
inc
testb
or
cmp
mov
push
jge,pt
pop
sbb
iret
ja
dec
lds
das
andb
adc
and
repz
dec
aam
pop
sub
scas
cmp
int3
pusha
push
push
push
jae
cmp
std
push
cmp
hlt
or
adc
push
shrl
leave
mov
sbb
fwait
rclb
fwait
cmp
or
cmp
data16
sbb
cld
sbb
jns
or
or
loope
xchg
pusha
or
out
push
addr16
mov
daa
xchg
out
mull
add
inc
xchg
fstpt
add
cmpsb
mov
inc
es
sub
pop
lret
pop
inc
inc
loope
jl
inc
addr16
test
icebp
jl
xchg
out
insl
push
aad
ret
ja
sbb
subl
cs
mov
scas
adc
xor
mov
sti
aad
shlb
mov
daa
jbe
in
lods
push
or
fimuls
jo
cmp
fidivrl
mov
cmp
push
dec
cmp
aad
push
bound
pop
cmc
mov
aas
movsb
mov
sub
xchg
sahf
ret
lret
out
inc
popf
shrl
cltd
fdivrp
and
scas
or
pop
pop
rcr
ljmp
mov
inc
add
rorl
mov
push
iret
pop
mov
negb
xchg
push
adc
lret
ja
mov
inc
add
test
jo
ja
lcall
mov
mov
ret
pop
pop
cwtl
ja
cmp
push
loopne
mov
ljmp
das
insb
push
lea
pushf
cmp
and
pushf
ljmp
or
mov
sbb
aam
or
jge
adc
sub
pop
mov
loop
inc
xchg
sub
pop
in
test
test
add
jb
pop
pop
test
fiadds
ds
or
int3
aas
stos
sbb
mov
loop
popf
les
adc
sbb
and
sti
dec
mov
xor
fdivl
xor
cmp
mov
xchg
inc
adc
mov
mov
xchg
cmp
lods
fwait
inc
nop
jbe
mov
decl
lods
dec
les
jle
aad
adc
mov
out
or
pop
or
jecxz
cmp
jne
test
imul
mov
push
sub
jmp
sbb
outsb
or
pop
xor
push
sub
repz
or
inc
out
mov
out
mov
mov
out
or
mov
imul
subb
in
cmp
orb
jg
aam
leave
cltd
jg
sub
jo
mov
pop
data16
mov
rcrl
lcall
fstpl
cmp
mov
xor
sarl
xchg
lcall
jge
cmp
inc
repnz
and
nop
lds
mov
fmul
mov
adc
inc
popl
cmp
ss
aaa
fdivrs
xchg
movsb
stos
jbe
test
mov
sub
xor
pusha
fdiv
jnp
jg
pop
dec
cmpsb
adc
stos
xchg
adc
aam
ds
pop
pop
pop
fcompl
in
adc
data16
jbe
push
scas
push
sahf
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
mov
inc
out
push
fisubs
jbe
push
scas
push
sahf
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
push
mov
inc
out
fsubp
into
jbe
push
scas
xchg
sahf
mov
jle
outsb
pop
out
idivb
xchg
xchg
push
cmpsb
movzbl
inc
out
push
fbld
jbe
push
scas
push
sahf
mov
jle
outsb
jl
out
orl
icebp
dec
insb
add
xor
sbb
xor
int3
mov
andl
shl
sub
xor
add
adc
popa
inc
jno
inc
bound
icebp
xorb
loope
xchg
rol
loop
repnz
add
xor
cmp
bound
mov
shl
rol
xchg
lods
test
jno
pop
inc
dec
data16
bound
inc
jmp
mov
mov
lret
mov
test
lods
sub
jle
mov
inc
mov
push
aad
and
mov
fs
inc
loop
mov
add
xor
dec
add
xor
aam
pop
jle
outsl
loop
xlat
jl
xor
dec
fs
dec
ss
inc
gs
loope
push
inc
or
mov
loop
xchg
outsb
push
insb
ret
aam
rep
jbe
inc
jb
mov
add
jge
fidivrs
xchg
mov
xchg
icebp
rclb
xchg
lahf
xor
les
aaa
pop
xchg
dec
roll
icebp
addl
jge
popa
inc
xor
jb
andb
pop
mov
out
rol
loop
fwait
push
push
inc
push
inc
and
add
push
and
es
xchg
rol
lock
mov
xchg
mov
inc
inc
fidivl
or
adc
sub
leave
lock
icebp
std
xlat
xchg
lods
xchg
shll
add
push
push
push
and
jno
inc
bound
mov
mov
icebp
rol
loop
repnz
xor
add
adc
popa
inc
jno
inc
bound
mov
mov
icebp
rol
loop
repnz
cmc
jp
iret
dec
lock
pop
dec
dec
insl
in
push
sub
sub
mov
push
dec
fstpt
fldl
mov
jg,pn
cmp
lahf
mov
int3
mov
jb,pn
dec
sti
inc
test
cmp
repnz
push
ror
jb
fwait
jl
xor
repz
sbb
roll
jo
ljmp
pop
xchg
inc
xor
mov
arpl
minps
fimuls
pop
inc
xchg
ds
and
inc
loop
imul
rcl
mov
push
mov
outsb
pminub
enter
outsl
in
pop
and
dec
jae
mov
or
sbb
lds
xlat
xor
cmp
adc
jnp
dec
dec
outsl
loop
adc
push
fwait
repnz
je
and
stc
push
jl
int3
jp
add
fwait
xchg
pop
lods
ja
inc
inc
adc
jl
mov
jns
pop
leave
jl
outsl
scas
iret
lcall
jae
sbb
adc
mov
and
dec
mov
mov
or
popf
mov
mov
pop
in
gs
add
adcb
xchg
sbb
shlb
mov
andl
decb
into
int3
adc
out
inc
pop
mov
xor
mov
xlat
xor
xchg
dec
sar
mov
mov
sti
aas
jl
aas
cmp
push
loopne
cltd
in
aas
dec
cmp
jl
cld
xchg
mov
es
xor
mov
lret
lods
rorb
inc
js
fwait
in
push
clc
push
out
and
xlat
mov
roll
xorb
or
jne
push
xor
idivb
pusha
imul
lcall
mov
xchg
add
popw
test
xchg
add
stos
shrl
adc
add
xchg
inc
in
iret
or
push
rolb
mov
call
jb
add
mov
popa
jle
aas
cmpsl
psrad
bound
pop
and
mov
mov
out
ja
int3
lret
xchg
add
or
add
cmpsb
cs
xchg
test
fcompl
push
xor
ret
in
sub
iret
push
ret
pop
xor
frstor
sbb
jb
pop
dec
pop
stos
rol
sarl
push
mov
or
xor
ret
adc
movsb
cltd
pop
inc
mov
daa
xchg
sub
bound
sbb
pushf
mov
fbld
xor
nop
mov
imul
xchg
mov
lret
mov
mov
mov
mov
mov
arpl
dec
popf
adc
jge
sbb
aas
in
cmp
ss
and
lds
push
icebp
lret
push
or
sbb
dec
lods
sub
inc
sarb
arpl
jmp
je
push
mov
cmc
or
pop
je
rcll
loop
arpl
fld1
jge
popa
xchg
mov
adc
popa
push
sbb
fwait
inc
clc
ret
pop
enter
sbb
test
dec
gs
pop
mov
cwtl
jnp
push
mov
mov
jg
jp
int3
pop
repnz
aaa
xlat
inc
aaa
lret
adc
fdiv
daa
mov
mov
jecxz
insl
and
dec
rorb
or
mov
repz
pop
xchg
in
popa
out
imul
imul
mov
pop
add
jns
int
push
add
and
aas
jle
xor
xchg
testb
nop
pop
bound
xor
mov
aad
xchg
loopne
jb
adc
mov
scas
popf
into
and
lret
ficoml
ror
out
inc
stos
push
cmpb
adc
cmp
xor
jnp
push
add
push
fisubrs
or
es
testl
nop
pop
jns
shlb
adc
imul
mov
mov
cmpsb
fimull
sbb
lahf
push
das
or
xor
and
fmuls
inc
cmc
or
es
pop
push
mov
jns
ret
mov
scas
mov
cmp
pop
sbb
sub
xor
lods
mov
insl
push
pop
popf
int
test
jbe
inc
xor
jb
ds
add
pop
push
jb
daa
xor
xchg
insb
ret
repnz
rorb
mov
es
jge
mov
push
mov
pop
sbb
rclb
xor
stc
push
jns
inc
xchg
sub
nop
outsl
pop
jecxz
mov
inc
cmpsb
mov
dec
dec
dec
mov
or
lret
les
add
in
lock
mov
add
icebp
icebp
inc
or
inc
adc
imul
pop
mov
sub
fdivrp
push
adc
out
icebp
aad
lock
popa
jle
push
jg
iret
xor
cmp
inc
icebp
cmc
sbb
divb
and
pop
mov
mov
xchg
dec
adc
hlt
cmpl
iret
rcrl
add
sub
add
mov
movsb
mov
inc
sub
cmpb
sbb
jge
pusha
sahf
repz
stos
sbb
fs
lods
push
sub
sub
push
rorl
lcall
adc
out
cmp
mov
mov
jb
xor
xchg
popa
roll
xchg
xor
aam
mov
xor
adc
cmp
cmp
dec
lods
loop
scas
or
mov
push
dec
mov
sbb
out
xchg
ljmp
loopne
inc
cld
push
dec
cmp
icebp
ret
sbb
mov
test
mov
mov
jmp
js
sahf
mov
xor
xchg
pop
stos
cmp
add
movsb
xchg
adc
or
sub
and
push
sbb
stos
lds
mov
push
mov
sbbl
pop
fsub
mov
cmp
outsl
pop
sbb
pop
aam
out
gs
xchg
rcrb
lcall
lods
jge
push
push
jp
adc
lret
shrl
in
inc
mov
mov
dec
imul
push
xchg
mov
push
push
mov
fcomps
leave
cmp
and
xchg
fisubrl
mov
sbb
inc
cmc
lret
adc
lock
dec
je
out
test
icebp
xchg
out
add
push
lods
inc
test
imul
and
jmp
neg
aam
add
jp
adc
or
xor
std
pushf
jmp
xchg
bound
es
cmp
xchg
sub
push
sub
sarl
shlb
push
je
push
js
add
out
dec
jnp
mov
pop
outsl
inc
adc
fdivs
sbb
cld
sbb
shl
inc
cltd
jb
loop
mov
pop
or
jno
ds
sub
sbb
dec
or
enter
sti
aam
inc
mov
insl
fbstp
add
mov
cwtl
pop
mov
adc
dec
mov
sub
dec
sti
cwtl
les
insb
sahf
inc
mov
mov
pop
pushl
pop
ss
pop
or
sti
scas
fcompl
hlt
push
dec
rcrl
ja
test
mov
and
rol
add
mov
adc
and
sti
jmp
bound
movl
sbbb
mov
pop
and
adc
push
and
cmp
in
aad
arpl
jae
call
shrb
orl
imul
fsubr
xchg
or
loop
sbb
cld
mov
cmp
fbld
aam
test
push
aas
lods
shrb
aas
and
mov
fmull
mov
out
out
mov
gs
fisubs
outsb
push
add
pushl
hlt
fistpll
mov
jle
leave
divb
fld
das
movsb
lea
inc
cmp
jmp
push
fs
out
les
ss
js
pop
repz
xorl
sbbl
test
xor
mov
mov
lods
addr16
test
cld
mov
jae
and
jne
lods
xchg
sbbl
imul
push
push
into
fimull
inc
stc
push
mov
fisubl
out
sbb
mov
mov
pop
adc
sub
jne
hlt
and
adc
or
push
mov
ss
push
adc
pushf
addb
scas
pop
jbe
mov
mov
jecxz
sub
test
and
fwait
mov
and
shll
push
inc
push
push
call
iretw
stc
xchg
test
js
insl
hlt
jmp
jo
daa
push
lret
jg
ret
jbe
inc
out
fnstsw
sarb
iret
idivb
test
push
and
cmp
xchg
std
mov
cmc
lret
pop
add
insb
les
lret
add
stos
mov
xchg
pop
pop
leave
movsb
pushf
lcall
adc
cmpl
dec
stos
mov
add
and
sub
in
mov
mov
jmp
jae
arpl
data16
pop
xchg
cli
notb
push
repz
lods
sbbb
dec
in
out
xchg
fwait
push
cld
icebp
fisubrs
outsb
add
xchg
mov
inc
into
mov
inc
out
jne
xor
pop
aas
dec
xchg
pusha
jecxz
std
mov
push
xchg
push
or
incb
call
jne
inc
xchg
fsts
mov
jp
xchg
adc
movsb
mov
ret
stos
test
adc
push
inc
dec
inc
adcb
rcr
push
dec
pop
mov
add
icebp
faddp
js
push
jmp
faddl
jp
pop
lods
movsl
aam
fiaddl
mov
push
pop
nop
xchg
pop
cmpsl
xor
xchg
cmp
dec
jecxz
xor
jge
mov
shlb
fmull
pop
xchg
mov
push
loope
jns
jmp
xor
xor
fstl
rcrl
mov
mov
rcl
stos
in
cmp
addr16
and
mov
imul
mov
call
xchg
mov
sub
bound
add
mov
jnp
loop
stc
lcall
jnp
call
add
and
into
adc
lods
xchg
inc
sbb
inc
jns
std
mov
fisttpl
jp
push
shll
mov
push
push
jecxz
pop
fmul
ret
push
call
dec
dec
or
jmp
lea
and
lret
inc
aaa
sub
mov
mov
inc
lock
jbe
mov
out
or
jg
pop
xlat
addl
push
mov
lahf
pop
dec
sub
pop
mov
rcl
mov
cwtl
mov
movsb
rcl
push
adc
adc
mov
push
jbe
jg
pop
scas
fwait
dec
xchg
pop
out
push
push
push
addr16
jbe
scas
xor
mov
out
andb
or
shrl
and
xchg
mov
shlb
call
emms
mov
imul
jp
pop
ds
stc
into
out
jbe
sbb
into
pushw
testl
jmp
into
cltd
outsl
xchg
jbe
dec
or
subl
and
ficoml
cwtl
fisttps
sbb
cmp
fs
ror
sub
jle
lea
pushf
and
mov
dec
xchg
mov
and
test
rorl
fildll
in
mov
mov
inc
fisubrs
mov
addr16
arpl
int
movsb
repz
pop
repz
sbb
sub
adc
cmpsb
cmp
incb
cmpsb
push
scas
dec
push
sub
jno
sbb
mov
push
xchg
ficompl
add
sub
cmc
ret
mov
gs
inc
andl
ja
lret
or
lcall
mov
cmp
sub
fcompl
push
imul
and
in
adc
stos
xor
pop
jg
inc
sbb
jae
pop
repz
arpl
mov
and
nop
gs
xor
add
in
mov
mov
fstl
subb
in
out
daa
dec
add
sbb
pop
xor
das
mov
xchg
rolb
adc
lds
dec
sub
xchg
nop
push
cs
mov
cmp
cmp
test
sub
xor
adc
xchg
mov
mov
popf
in
adcb
and
dec
mov
daa
dec
adc
push
lds
fists
gs
int3
mov
jne
icebp
rorl
sub
jb
sub
test
push
mov
pusha
adc
mov
mov
mov
dec
scas
dec
xor
stos
repz
es
xchg
mov
jb
push
cld
jbe
lcall
out
xchg
dec
jge
cwtl
cs
addr16
out
loope
ja
sbb
inc
push
ficompl
jmp
mov
popf
sbb
cld
dec
test
outsl
mov
pop
adc
and
mov
imul
pop
int3
sbb
ljmp
xor
sub
dec
out
lock
push
mov
ja
xor
nop
loop
mov
or
inc
sbb
mov
push
leave
out
cwtl
mov
pop
xchg
popa
mov
mov
xlat
bswap
fwait
jmp
cmp
mov
or
adc
xchg
or
add
adc
sbb
inc
das
daa
outsb
fisubs
fnsave
mov
ja
rcll
mov
in
in
insb
sbb
jmp
add
test
mov
sub
sbb
push
mov
mov
xlat
push
sub
mov
cmp
pop
fldl
into
jb
in
test
push
clc
push
dec
add
sub
mov
fcmove
int
popa
das
mov
mov
cmp
arpl
pushf
mov
test
sub
das
fisttpll
xchg
outsb
jecxz
mov
lock
lret
adc
je
inc
mov
jg
cmpsb
mov
add
outsb
js
lds
lcall
sub
and
pop
pop
push
std
jo
cmpl
test
jle
jg
test
add
inc
aad
mov
fsubr
int3
push
rcl
mov
arpl
orb
add
sbb
add
adc
ret
fs
inc
cmpsb
dec
push
jnp
lods
push
imul
cmpsb
hlt
adc
gs
xor
jge
decl
xchg
fdivl
lods
jo
out
push
jmp
mov
inc
xlat
fstp
and
xor
mov
or
imul
sbb
adc
sub
xor
imul
ljmp
loopne
rcll
clc
add
mov
sub
mov
jecxz
adc
fwait
mov
fstps
add
sbb
add
pop
test
lahf
je
je
cwtl
cmpsl
cmp
xor
push
popa
jp
xchg
push
lock
xchg
pop
push
xchg
sub
adc
lcall
jbe
mov
pop
and
xchg
adc
call
and
loopne
push
aaa
xchg
ljmp
sarb
mov
repz
pop
sbb
sbb
movsb
lss
les
xacquire
cmpsl
hlt
test
mov
fisttpll
fisttps
push
mov
sub
xor
and
mov
sub
push
mov
js
push
dec
mov
xchg
das
dec
adc
inc
mov
das
jmp
mov
or
mov
enter
cld
mul
xchg
fnstcw
adc
divl
mov
sbb
mov
jno
add
mov
cltd
aas
adc
rorl
rcrl
mov
mov
or
mov
daa
xchg
xor
add
cwtl
cmp
inc
cli
aas
dec
sub
inc
dec
or
push
pop
add
test
fisubrs
test
sbbb
aam
cmp
mov
xor
jbe
insl
fidivs
jp
mov
imul
cmpsl
iret
cld
jnp
inc
xchg
xchg
loopne
lock
imulb
inc
arpl
add
cmc
inc
retw
and
sub
pop
xor
loope
aas
or
sub
pop
jl
xchg
xchg
insl
stos
movsl
inc
jl
push
test
lahf
mov
leave
insl
mov
add
mov
jb
rclb
ljmp
cmp
or
lods
cmpl
stc
shl
inc
mov
jge
fidivrl
test
imul
stc
sahf
xor
out
push
pusha
pusha
imul
arpl
pop
add
outsl
mov
sub
lcall
sub
and
rolb
pop
ja
scas
jecxz
dec
xchg
mov
add
out
mov
fsubrl
sub
faddl
leave
mov
cmp
inc
xlat
ret
rcrb
ljmp
sbb
fsubr
insb
lods
in
mov
in
xchg
bound
mov
xchg
inc
orl
cld
dec
scas
cmp
pop
jb
sbb
or
loop
sub
lahf
cmp
lahf
push
jno
inc
pop
insb
xor
int3
mov
shrb
fdivr
cmc
mov
lock
cs
push
and
or
enter
sub
sub
jecxz
xlat
shrd
cmp
xchg
cltd
jmp
xchg
add
test
popf
cmp
fadds
push
add
lret
out
cwtl
pusha
pop
lds
jmp
js
outsb
test
pushf
mul
mov
push
or
repnz
mov
ret
xor
mov
icebp
stos
add
iret
in
pop
pop
jg
sub
and
std
inc
pop
jmp
jecxz
fdivrl
cmp
dec
insb
inc
loopne
or
seto
jl
subb
pop
sbb
cmpsb
lret
pop
dec
inc
adc
push
in
or
movsl
or
adc
cmp
scas
push
xor
sbb
test
mov
inc
adc
sub
add
sub
ffreep
and
cmp
jbe
mov
stc
cmpsb
std
pop
add
dec
test
mov
add
cmp
data16
adcb
lcall
push
rolb
jb
add
mov
pop
push
rcrb
pop
imul
or
xor
mov
mov
pand
ffree
imul
nop
mov
bt
or
xchg
and
inc
sarl
out
pop
inc
xchg
pushf
adc
xchg
and
push
mov
mov
fcompl
fsts
cmp
push
ljmp
insb
inc
popa
and
out
je
divl
xchg
insl
fucomip
btr
lock
jecxz
lahf
das
mov
add
or
cmp
inc
leave
inc
jg
jecxz
inc
cltd
mov
mov
gs
mov
mov
bound
jne
xchg
mov
cmp
ret
adc
sub
sbb
jl
pop
push
pop
push
ficomps
das
fstpl
mov
cmc
out
adc
scas
pop
xchg
fcmovnu
lahf
cmp
scas
ret
lret
ljmp
adc
xor
jg
cmp
arpl
pop
fsubs
dec
fildll
sbb
sbb
imulb
popa
push
sbb
xor
outsb
add
inc
ret
mov
das
jecxz
inc
scas
pop
mulb
idiv
ds
jnp
mov
xlat
mov
dec
or
sbb
xchg
add
inc
push
mov
push
into
push
sub
push
xchg
ds
xchg
lcall
inc
dec
ret
dec
int3
test
fcom
sub
inc
inc
xor
jae
adc
fs
ficoms
and
add
scas
inc
mov
and
ficoms
hlt
jno
sti
shll
notb
mov
jecxz
adc
cli
mov
mov
mov
jns
xchg
mov
mov
mov
shrb
pop
push
cmp
jmp
gs
addr16
mov
fnstsw
mov
scas
xor
inc
mov
pusha
sbb
mov
push
mov
in
mov
ljmp
mov
mov
cmc
ret
mov
sub
mov
imul
testb
cs
addr16
dec
jae
lds
js
scas
out
jo
out
nop
lcall
jl
aad
mov
push
push
and
in
fldcw
mov
aaa
pop
dec
mov
mov
out
jns
fisubs
shl
jecxz
inc
fwait
sahf
cmp
or
dec
jb
ja
and
mov
sub
out
das
mov
xor
outsb
dec
sub
lock
in
adc
loop
mov
sbb
pop
xchg
out
les
mov
inc
addb
pop
sbb
add
hlt
xchg
pop
xorl
outsl
xchg
xchg
cwtl
jo
sbb
out
in
sub
sti
fadds
mov
std
gs
sbb
or
push
inc
bound
mov
mov
icebp
rol
loop
repnz
xor
add
adc
popa
inc
jno
inc
bound
mov
mov
icebp
rol
loop
repnz
xor
adc
adc
pusha
inc
jne
inc
bound
movsl
xorb
loope
call
repnz
sbb
xor
popa
push
inc
jb
orb
mov
jns
ds
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
shl
rorl
jl
and
xor
insl
push
popf
inc
xorl
add
xor
and
rcrl
loope
xchg
pop
orl
lahf
inc
lea
mov
and
roll
or
xchg
inc
adcl
jle
mov
enter
pushf
bound
cwtl
sbb
xchg
cmpsb
shll
pop
lods
xchg
push
fwait
push
mov
ss
mov
inc
jge
add
insb
sarl
notl
cmpsl
sbb
in
out
pop
adc
xor
fbld
cmp
dec
iret
or
adcl
or
mov
mov
push
add
in
xchg
dec
rorb
jge
lea
leave
xchg
push
int
jb
pop
inc
push
out
mov
xor
xchg
and
fxch
sub
mov
sub
mov
lods
pushf
mov
inc
sar
xor
cs
in
mov
add
imul
loopne
pushf
sub
sub
add
sbb
loope
xchg
pop
orl
test
jno
popa
mov
lds
fidivl
std
and
xchg
cmp
sub
or
and
adc
add
hlt
inc
cmc
adc
or
sahf
jne
jne
shlb
or
xlat
cs
jg
sbb
in
xor
and
je
push
mov
mov
pop
loopne
xchg
xor
insl
push
popf
inc
lea
popa
lods
adc
add
xor
and
rcrl
loope
xchg
pop
orl
popf
inc
lea
popa
lods
adc
add
xor
and
rcrl
lds
dec
pusha
jg
les
mov
fimull
stos
push
test
add
ret
xchg
xchg
cmp
push
mov
mov
lcall
or
mov
inc
or
push
nop
jecxz
adc
cmc
iret
ljmp
jns
je
mov
inc
mov
sahf
add
shll
or
repnz
es
jecxz
adc
mov
enter
ret
mov
mov
and
cmp
mov
inc
jg
xchg
adc
pop
xchg
js
mov
insl
addr16
xor
jl
pop
mov
pop
dec
loope
insl
xchg
enter
sbb
mov
nop
xchg
scas
mov
cmp
sub
into
pop
mov
mov
test
jp
adc
dec
sub
sub
push
dec
mov
and
scas
mov
push
xchg
popf
xorb
add
mov
add
lret
stc
lods
or
loope
lock
hlt
adc
popa
das
xlat
aam
inc
es
push
frstor
mov
andl
mov
pop
mov
test
fldl
sub
ret
xchg
imul
movsb
mov
jle
mov
mov
ljmp
push
loopne
ret
inc
inc
test
fwait
push
sbb
movsl
cmp
sub
cmc
lret
fisttps
mov
sarl
jg
rcr
iret
stos
dec
frstor
adc
xor
sub
std
leave
inc
pop
in
push
ret
ss
pop
js
imul
les
in
aam
mov
adc
mov
shl
sbb
insl
pushf
imul
push
movsl
mov
mov
andps
inc
sbb
idivb
icebp
or
aaa
mov
test
pop
ret
and
shll
fiaddl
rolb
sbb
pop
push
mov
jle
mov
and
cmp
pop
pushf
sub
xor
mov
mov
xchg
xchg
xchg
loope
std
popf
and
mov
call
outsb
lods
dec
testl
dec
mov
pop
out
mov
mov
sbb
inc
mov
or
scas
add
xchg
xlat
and
jb
out
push
int3
cmp
aaa
dec
and
pop
fcomps
pusha
test
sbb
push
xchg
mov
test
pop
push
inc
sub
mov
aad
dec
xor
test
mov
dec
mov
loope
mov
jae
dec
fdivs
jg
fcompl
testb
out
in
divb
insl
cmpsl
jo
gs
stos
ficoml
pop
jp
sbb
sbb
lahf
push
sub
cmp
cld
mov
mov
cmc
imul
sar
cmpsb
jmp
vphaddbw
les
push
jmp
push
outsb
pop
inc
aas
lock
cld
cmp
xor
and
vmwrite
xchg
subl
addr16
loop
shlb
daa
add
inc
loopne
xor
mov
cwtl
add
jns
lcall
add
or
jb
mov
push
mov
jmp
lcall
mov
mov
ret
sbb
push
mov
mov
inc
das
notb
sti
call
fisubrl
adc
cmc
in
aaa
lahf
shrl
mov
xchg
in
loopne
in
shll
xor
jno
fildl
movsb
popf
jo
in
daa
sbb
popa
pop
xchg
pop
mov
cld
and
call
mov
aam
mov
ds
sub
jbe
or
nop
aaa
scas
in
out
daa
lds
inc
xchg
es
pop
cmpsb
or
mov
dec
lods
pushf
push
addr16
addl
loop
aad
jnp
adc
imul
sbb
inc
les
inc
adc
adc
sti
out
mov
test
dec
cmpsb
dec
shlb
pop
and
gs
pop
into
jns
in
gs
jecxz
rcrl
jbe
sbb
pop
push
cmpsb
fistpll
and
stc
aas
imul
xchg
mov
pop
cmpsl
sbb
adc
fbld
inc
in
icebp
sbb
ret
jae
jb
jns
mov
ljmp
xor
mov
cmp
sti
cmc
xor
pushf
jnp
fcomip
into
push
insb
mov
jmp
or
daa
test
aam
inc
sbb
pop
push
in
aas
fidivrl
pop
aaa
or
ret
mov
fcoml
in
and
pop
jmp
lcall
and
fistpl
ja
clc
add
inc
iret
fists
lds
hlt
or
adc
push
iret
into
mov
or
sbb
cs
mov
jo
push
dec
out
dec
mov
sarb
fs
shll
mov
sbb
in
inc
adc
mov
jns
and
out
pop
xrelease
dec
add
jne
std
popa
dec
cmpsl
arpl
xlat
fimull
in
jmp
jo
shrb
daa
or
and
jne
shl
push
inc
adcl
dec
and
nop
fstps
dec
or
fdivp
sbb
sarb
test
mov
add
xchg
test
lcall
pop
in
and
outsb
leave
xor
or
inc
xchg
push
lods
movswl
mov
xor
mov
dec
xchg
inc
fs
es
stc
sahf
xor
loopne
clc
xor
and
sarl
pop
sbbl
aad
inc
or
icebp
andb
lock
scas
or
mov
in
mov
hlt
jmp
xlat
movsl
fdivp
les
sar
pop
jg
and
lods
xchg
insb
mov
push
pusha
into
dec
bound
mov
and
or
sub
int3
mov
out
inc
inc
leave
into
cld
dec
xchg
adc
mov
cmp
sbb
shr
movsb
or
jl
jns
out
push
arpl
and
sti
dec
out
inc
and
jg
xchg
add
adc
pop
mov
out
sarb
mov
mov
mov
out
xor
mov
adc
mov
iret
sub
outsl
lret
or
arpl
add
fsubrs
adc
inc
movsb
and
xchg
movsl
repnz
pop
cs
cmp
imulw
adc
jo
sbb
pusha
lock
jno
xchg
adc
sub
mov
in
pop
push
imul
lea
add
adc
jo
pop
or
out
push
cmp
xchg
pop
sub
je
in
popa
jmp
aas
xchg
sub
pusha
xchg
and
nop
and
cld
xchg
bswap
ja
mov
sti
or
lret
cmp
xor
insl
dec
fstl
lahf
fcmovnu
test
cmp
test
pop
mov
dec
push
inc
ja
sti
and
sbb
loope
iret
sbbb
in
and
pushf
pop
lahf
lea
inc
andl
add
mov
addr16
arpl
jne
test
and
cmc
cmpsl
pop
inc
sub
test
jno
sub
enter
mov
jp
fisubrs
xchg
icebp
jo
push
sub
dec
insl
mov
lret
add
popa
mov
in
rcl
shr
imul
repnz
sbbl
dec
inc
mov
jecxz
fscale
cmp
jp
lds
jecxz
mov
adc
ret
dec
push
negb
mov
adc
fisubrl
fildll
jl
and
push
aas
cltd
hlt
jno
arpl
xor
mov
sub
push
xchg
jge
pushf
and
push
jbe
inc
push
dec
cmp
sbb
fiaddl
xor
inc
fs
or
stos
and
xchg
sbb
testl
pop
sbb
out
inc
inc
mov
popa
jnp
xchg
lret
rclb
rorb
sub
push
jns
lahf
inc
into
xchg
inc
lods
in
lods
add
push
sbb
jg
hlt
stos
jne
adc
insb
push
fmull
sahf
jmp
pop
jne
xor
or
popf
aas
sub
add
out
sbb
add
inc
int3
lret
out
sbb
lea
fcmovnb
mov
lret
nop
notl
add
add
or
mov
xchg
stos
push
pop
mov
jle
outsb
movsb
sbb
out
or
dec
fnstsw
fwait
dec
rcr
pop
js
pop
je
mov
outsb
push
and
stc
jmp
dec
les
ror
mov
icebp
fdivr
clc
xchg
movsl
fldcw
sbb
cmpsl
mov
ret
aaa
xor
shll
mov
pop
lea
ja
dec
call
pop
xchg
cli
xchg
cltd
daa
ds
test
pop
mov
fnstcw
xor
das
xlat
pop
xor
stc
add
sbb
jb
inc
jg
popf
or
xor
lods
lret
loope
sub
jecxz
loope
in
inc
push
ret
loope
adc
inc
push
mov
dec
dec
mov
repnz
loopne
bound
inc
adc
fimuls
mov
stos
add
sti
out
lock
mov
xor
cli
mov
jmp
movsb
inc
ja
decl
ffreep
out
jno
push
pop
adc
loop
cmp
inc
mov
std
xor
lcall
das
inc
dec
aad
dec
jg
jp
imul
nop
adc
sub
mov
xchg
aam
and
fldl
adc
and
dec
test
int
cmp
mov
stos
mov
movsb
and
into
or
mov
sub
or
cmp
sbb
in
into
xor
xchg
sti
pop
pop
hlt
or
or
push
bound
pop
fistl
aad
jl
mov
xor
lahf
mov
mov
mov
add
or
jae
sbb
fisttps
mov
sub
push
cltd
icebp
icebp
in
fsubrl
mov
stos
mov
inc
dec
mov
leave
xchg
clc
fldl
rolb
bound
push
jl
jnp
dec
lret
loop
jecxz
xchg
clc
fdivrl
jb
arpl
cli
push
xlat
mov
or
aam
jge
xor
dec
lret
dec
mov
mov
ja
fwait
in
xchg
mul
mov
xorb
jno
aas
add
ja
mov
sub
setg
psubsb
pop
sbb
mov
je
push
test
into
cmp
sub
fmull
and
add
fidivl
sbb
in
loopne
mov
lret
out
inc
add
mov
xchg
pop
jp
sahf
std
push
xor
and
call
movsb
scas
push
dec
sbb
dec
insb
stos
inc
fisttpl
xchg
movsl
cltd
mov
sti
sarl
pop
dec
or
int
cmpsb
pop
mov
mov
addr16
jle
out
aas
bound
aaa
push
adc
push
repnz
jge
and
jae
cmp
pop
jg
and
sbb
inc
jo
add
push
std
jl
ja
aam
negl
outsb
sub
lea
es
sahf
or
test
loopw
test
cmpsb
pop
inc
xor
or
pop
mov
mov
xor
cs
push
out
das
outsl
pop
xor
ljmp
int
push
repz
push
loop
xor
sbb
push
inc
fcmovbe
shl
repnz
mov
data16
or
shrl
sbb
inc
fs
fbld
xor
lock
xchg
cmp
sbb
and
mov
movsl
and
clc
inc
fstps
cmp
mov
test
icebp
cmc
xor
cmp
mov
pop
jp
cwtl
or
js
jb
pushf
orb
or
aad
cmp
or
mov
aaa
ja
test
gs
loope
lret
iret
dec
mov
mov
sbb
and
push
shrb
sub
or
jl
sub
test
jge
lret
jg
jb
aaa
cmc
mov
pushf
pop
bound
mov
xchg
and
aaa
mov
int3
push
xchg
cld
sub
fdivr
fs
xchg
dec
cmp
pop
repz
lods
xor
add
loopne
not
xchg
lods
daa
mov
push
dec
jecxz
xchg
add
mov
dec
sbb
shll
movsl
ror
or
xor
loope
jmp
es
sbb
lds
cltd
push
dec
adc
mov
cwtl
inc
sub
data16
les
adc
dec
ja
cmpsl
pop
inc
rolb
mov
add
push
loopne
inc
sbb
jno
adc
loop
inc
mov
push
xor
out
outsb
in
iret
aad
fld
ss
inc
mov
aam
lock
or
hlt
pop
or
cs
and
inc
inc
mov
es
and
sbb
ror
adcb
mov
aaa
jae
mov
adcl
xor
cmpsl
add
pop
xchg
stc
sbb
adc
iret
cmpl
xchg
mov
cmpsb
pop
xchg
jp
daa
bound
outsl
outsb
fistpl
enter
pop
addl
iret
push
mov
test
out
jle
jbe
push
adc
ret
dec
out
andl
push
inc
popa
fldt
leave
std
or
sub
xchg
cmpsl
lds
adc
mov
mov
je
ficoms
fidivrs
dec
dec
arpl
sbb
sub
shlb
dec
arpl
jne
push
jge
pop
ss
cmpsl
adc
mov
sub
sub
jl
cmp
lcall
and
jno
cld
aam
add
ror
mov
cwtl
icebp
repnz
cmpsl
xchg
dec
int
cmp
inc
fidivrs
stos
or
and
popa
jae
mov
mov
jl
loope
out
ret
jp
mov
test
mov
sub
addr16
mov
mov
in
mov
les
daa
cmp
xor
jmp
sbb
cli
leave
in
pop
pop
jle
aad
push
nop
fmul
sbbb
test
stos
outsl
es
insb
push
mov
sbb
lods
clc
sbb
call
xchg
cmpsl
lea
or
ds
pop
xchg
sub
int
push
xor
ret
mov
test
lods
add
orl
jmp
cmpsb
dec
loope
xchg
xor
mov
movsl
inc
lcall
repz
mov
shl
sbb
mov
jns
sub
dec
inc
shll
stos
or
push
xchg
loopne
jbe
push
mov
rorl
dec
fisttpl
dec
mov
imul
push
stc
pusha
push
stc
pop
xor
incl
popf
pusha
adc
data16
lcall
bound
adcb
cmpsl
inc
scas
adc
insb
in
pop
jb
iret
cld
rcl
aam
xor
or
int3
xchg
data16
out
xchg
mov
pop
aaa
sub
mov
fidivl
jg
sub
and
lods
cmpsl
icebp
add
mov
orl
clc
lahf
jnp
mov
ja
add
int3
out
push
sti
cmp
cwtl
xchg
push
lods
adc
jae
data16
insb
fildll
ds
cmp
xor
inc
pop
pop
hlt
mov
xchg
jg
flds
rorb
cmp
enter
xor
outsb
neg
add
shrl
pop
leave
add
cmc
es
pusha
push
nop
gs
mov
push
in
mov
shll
add
xor
inc
loopne
subl
jnp
xlat
sti
insl
andb
imul
inc
mov
xchg
push
in
test
sbb
test
mov
pop
lahf
cmpsl
shlb
and
rorl
pusha
push
dec
sub
mov
mul
sub
xchg
mov
iret
jmp
insl
jnp
stos
loop
aam
xchg
fiaddl
mov
jp
sbb
mov
pop
jae
repz
and
insb
add
cmpsl
jbe
cmpsl
iret
outsl
push
imull
cmpb
pusha
pop
push
sbb
adc
pop
rcrb
movsl
mov
movsl
or
pop
test
add
pop
dec
xor
mov
xchg
loopne
out
int
rcr
out
loope
loope
lods
or
mov
mov
lret
fmuls
out
sub
stc
mov
pop
repz
or
mov
mov
xchg
mov
ss
sub
mov
or
mov
fwait
mov
scas
ds
xor
imul
daa
movsl
mov
and
stos
mov
jp
ret
std
xchg
pop
fs
xor
jp
gs
pop
in
push
sbbb
imul
lea
sbb
enter
cmp
adc
gs
cld
outsb
insl
mov
pop
dec
insb
xchg
leave
xchg
cmpsb
jne
push
cwtl
and
imul
lock
sahf
and
andl
mov
and
xchg
lahf
iret
es
mov
clc
pop
int
add
mov
jge
int
lds
bound
ja
enter
shll
xlat
sub
mov
cli
and
cld
pop
jno
mov
test
aad
aas
ja
mov
sbb
sarb
xor
mov
adc
sub
cmp
push
sbb
dec
push
and
addb
dec
pusha
jnp
aam
inc
test
mov
or
pop
xor
roll
aaa
iret
adc
dec
mov
and
lahf
cmp
ds
jg
xchg
ljmp
and
mov
in
and
movsl
push
fbld
dec
fsubs
sub
mov
bound
xor
cwtl
stc
movsl
inc
dec
push
lret
or
std
in
lea
lods
add
inc
fbstp
enter
push
loopne
and
xchg
das
push
adc
fwait
test
jg
out
mov
xchg
nop
adc
pop
cmpsl
frstor
jne
push
daa
out
adc
cmpsb
test
out
push
xor
mulb
jo
jg
in
loop
je
ja
xor
adc
and
cmp
mov
shlb
push
add
es
enter
mov
sbb
jbe
sarl
jnp
rcrl
dec
repz
imul
insl
lds
inc
and
xor
jae
cwtl
hlt
jg
mov
and
push
inc
sbb
adc
xor
sub
jo
fcoml
stos
divl
pushl
mov
loope
sub
pop
mov
mov
inc
in
mov
mov
int
fisttpl
mov
cmp
adc
mov
sub
mov
or
ljmp
add
push
xchg
lds
ret
shll
stos
adc
insl
cmp
xor
add
xor
jb
sbb
xchg
add
in
fimull
loop
push
adc
xor
pop
xchg
dec
cmpsb
mulb
sub
pop
loop
dec
idiv
dec
insb
xor
adc
leave
mov
add
lahf
out
cmp
lea
mov
dec
pop
fildll
add
sbb
push
call
pop
xchg
cmp
stos
xor
sub
pop
push
rcll
dec
orl
inc
orb
enter
jae
mov
and
jp
mov
popa
xchg
lds
ljmp
adc
stc
les
lret
mov
dec
jl
out
jmp
add
push
mov
jle
and
jecxz
pop
push
leave
mov
cmp
fs
push
push
cmpsl
push
pop
ljmp
and
call
iret
inc
adc
adc
fwait
dec
gs
jno
inc
out
mov
xlat
cmpsb
push
test
vpandn
push
sub
dec
jne
je
fsubs
daa
xor
loope
cmp
loop
dec
xor
shr
leave
mov
mov
and
xlat
lock
sbb
and
scas
inc
insl
or
jae
adc
push
or
mov
add
mov
ja
fdivr
mov
popf
sti
out
mov
daa
not
movsl
out
or
add
inc
inc
fcmovne
adc
sbb
cltd
arpl
and
fimull
insl
push
mov
ja
fdivs
inc
ret
mov
pop
repnz
xchg
xchg
adc
loopne
push
loop
jl
mov
dec
je
or
mov
jns
je
xchg
inc
lods
and
adc
daa
gs
cmc
lahf
mov
mov
inc
outsb
ja
dec
xlat
lods
mov
ss
lods
shlb
rclb
cmp
mov
test
jg
xchg
sub
mov
decl
mov
adc
mov
fstpl
cmova
sbb
mov
lea
pusha
or
cmp
lea
js
call
and
std
faddl
lcall
fwait
adc
ja
cld
jp
sti
mov
xor
rolb
mov
jecxz,pn
hlt
jge
stos
cmc
ljmp
or
or
push
xchg
pop
xchg
outsl
in
push
cmp
jno
xor
jp
out
add
xchg
subb
sub
add
ror
in
xchg
inc
mov
stos
call
adc
ss
addl
sub
cmp
shl
xchg
mov
mov
stos
sub
pushw
shlb
pop
roll
mov
or
inc
push
or
xchg
pop
orl
popf
inc
lea
popa
lods
adc
add
xor
and
rcrl
loope
xchg
pop
orl
popf
inc
lea
popa
lods
adc
add
xor
and
rcrl
loope
xchg
pop
orl
popf
inc
lea
popa
lods
adc
add
xor
and
rcrl
loope
xchg
pop
orl
popf
inc
daa
fstpt
mov
into
add
adc
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
xor
daa
pop
testb
ja
adc
cmpsb
sti
push
inc
inc
xchg
jbe
notw
out
xlat
xlat
es
daa
jnp
pop
out
xchg
or
inc
shlb
jbe
data16
out
xlat
jbe
popl
test
in
stos
pop
mov
rorl
loop
pushf
inc
xchg
outsl
addl
pop
imul
mov
insb
jle
push
xchg
cld
enter
mov
out
shll
js
pop
fcmovnbe
xchg
lods
sbbb
out
lret
jae
push
adc
jnp
or
mov
stos
leave
xlat
in
adc
mov
adc
jmp
mov
ss
dec
repnz
pop
mov
inc
pop
mov
cmpsl
push
adc
lcall
jne
ret
sub
aaa
movsl
lcall
mov
and
xchg
mov
data16
out
das
daa
lret
fxch
push
mov
fmull
divb
test
cs
mov
jp
mov
xlat
les
pop
jb
in
xchg
xchg
pop
xchg
loope
jno
cmp
cs
ss
dec
pop
test
arpl
or
and
inc
ret
mov
hlt
add
add
jne
ja
inc
jp
inc
xchg
retw
push
stc
add
shlb
cmc
adc
inc
mov
push
xchg
orb
cmpsb
push
test
xchg
inc
cmpsb
mov
cmpsl
inc
xchg
jbe
notw
out
xlat
ss
es
daa
pop
testb
ja
xchg
inc
cmpsb
mov
cmpsl
inc
xchg
jbe
notw
out
xlat
ss
es
adcl
mov
inc
aam
sub
in
pop
mov
in
adc
jmp
int3
mov
push
cmp
fstpt
inc
fmul
sbbl
shll
inc
into
popa
lock
xchg
mov
test
adc
pop
mov
sbbl
jecxz
add
sahf
imul
stc
adc
xchg
fistpll
inc
faddl
mov
pop
test
adcb
xchg
mov
bound
pushf
scas
sub
xorl
clc
cld
and
sub
or
push
sub
adc
sarl
shrb
xlat
push
mov
xchg
aas
jbe
and
bound
pop
jnp
add
inc
into
sub
lock
mov
cmc
mov
lea
int
insb
sbb
mov
mov
mov
in
mov
cmp
mov
pop
cld
sbb
stos
pop
mov
jmp
push
inc
and
fdivl
push
out
dec
xchg
adc
pop
mov
addr16
push
imul
mov
clc
xor
adc
mov
je
dec
pusha
or
or
lods
mov
int3
imul
inc
lds
inc
cmp
notl
mov
cmp
xor
cli
mov
test
fwait
pop
fwait
jnp
das
push
imul
mov
jl
and
bnd
push
mov
scas
mull
outsl
mov
jmp
sub
std
pop
incb
aad
xor
in
xchg
mov
subl
mov
jmp
fdivrl
nop
sahf
adc
push
sub
rep
int3
dec
add
scas
outsl
cmpsb
xor
and
fucomp
sbb
sub
add
sbb
int3
mov
cmp
lock
ljmp
bnd
mov
mov
test
xchg
mov
sbb
jo
mov
ja
xor
push
dec
iret
pop
xlat
xor
jno
dec
or
call
rcrl
inc
repnz
inc
cli
pop
fsubl
cmp
imul
add
adc
aad
jne
adc
mov
pusha
fdivs
rol
cmpsb
ret
xchg
lahf
in
rcrl
insb
ljmp
push
adc
stos
popa
or
xor
adc
out
inc
jns
out
iret
out
scas
push
inc
push
arpl
and
iret
loope
cld
push
out
add
inc
mov
mov
lods
pop
mov
dec
adc
mov
les
adc
mov
mov
pop
add
add
leave
sub
xor
push
movsl
in
cltd
and
clc
cmova
shlb
or
leave
mov
mov
sbb
adc
jg
push
cmpsl
mov
sbb
rcr
xor
sahf
or
sbb
lea
add
movsb
incb
add
cmpsl
mov
clc
les
cmp
andb
test
lods
in
cmc
movsl
add
fnstenv
scas
cmpsb
push
pop
lods
push
std
or
in
aaa
nop
out
or
inc
or
sbb
pop
lds
outsl
outsb
adc
outsb
cli
je
sarl
ss
xchg
add
jp
jo
or
jge
push
xor
test
jo,pn
enter
sub
int
inc
dec
push
mov
movsl
lret
subb
adc
mov
jecxz
mov
mov
or
ja
pusha
mov
sub
xor
inc
fadds
sbb
mov
cmpsl
jmp
adc
and
andb
mov
sub
rcrb
rolb
dec
and
scas
sub
mov
divb
or
inc
movsb
insl
add
jno
mov
and
insl
sbb
fwait
in
xchg
fcompl
sarb
xchg
movsb
dec
mov
jns
push
xor
incb
cmp
push
push
js
sub
aaa
in
adc
pop
mov
lret
xor
adc
insb
xor
xor
pop
stos
jae
in
loopne
rcrl
push
dec
xchg
push
incl
sbb
push
add
bound
cli
mov
xor
fstps
push
sbb
mov
popa
fcoms
roll
int
mov
lcall
cmp
mov
mov
jns
xchg
into
lock
fs
iret
sbb
pop
movsb
jl
xor
into
cmp
jb
jne
add
rorl
xchg
lods
ljmp
leave
orl
add
sbb
add
cmp
iret
jnp
jecxz
std
jo
jns
aas
outsl
test
dec
push
mull
ret
jmp
inc
lahf
fcoms
dec
mov
or
arpl
lods
and
and
outsl
arpl
add
push
mulps
sbb
daa
repnz
sbb
repz
daa
out
fwait
in
mov
sub
arpl
cwtl
aaa
sbb
test
call
and
enter
dec
nop
cmp
sub
dec
loopne
push
cmp
test
cmpl
fsubs
scas
jnp
outsl
aaa
mov
mov
fmuls
add
or
lret
cmp
scas
cld
mov
fists
stc
in
data16
not
pop
pop
cli
mov
lods
mov
inc
adc
jl
rolb
pop
and
cmpsb
sub
loop
mov
jmp
out
insb
xor
lods
test
jb
je
fstps
inc
sub
push
jb
pop
sub
aaa
cmc
fxtract
testl
jecxz
dec
mov
aad
mov
ds
mov
in
sti
and
xchg
or
das
fdivrs
insb
dec
cltd
fistpll
dec
sbb
sbb
dec
fistpll
inc
sahf
dec
adc
adcl
cltd
std
leave
lock
and
adc
call
std
or
jg
into
pop
pop
dec
iret
js
pop
aam
fnstcw
ret
out
sub
into
mov
movsb
fwait
mov
push
lock
cltd
ret
subb
cwtl
cmpb
pushf
lret
add
mov
xchg
lds
pop
iret
das
les
je
and
ret
and
inc
xchg
adc
in
push
jl
cmp
dec
mov
or
cs
dec
xorl
cmp
xor
insb
loopne
jb
cmp
outsl
fdivl
in
daa
sbb
in
les
pop
imul
jbe
repz
dec
jg
jne
popfw
or
rcrl
sub
inc
and
mov
lahf
mov
into
out
or
addr16
test
push
or
pop
iret
ficomps
roll
and
cwtl
sarb
cltd
xchg
cs
cltd
push
xchg
addr16
mov
call
xor
pop
xchg
cmp
xor
sbb
sub
fldt
sbb
imul
mov
popa
adc
jmp
leave
mov
fsubrl
mov
push
and
jb
out
mov
push
shrb
sub
imul
mov
sbb
cltd
in
imul
in
dec
pop
jae
push
mov
push
mov
push
rcrb
out
pop
xchg
sti
add
push
lret
mov
shlb
enter
lret
fbstp
jle
adc
ret
fcmove
sub
mov
rcrl
fiaddl
shl
aaa
dec
sub
xchg
mov
xor
insb
mov
sahf
pcmpgtd
int
fwait
sub
sbb
out
xchg
mov
shl
fmul
xor
cmp
and
fimuls
mov
sbb
pusha
aaa
xchg
jae
pop
inc
pop
xlat
test
test
xchg
adc
push
jno
out
popf
mov
bound
jae
jmp
test
or
dec
cltd
push
jp
jp
mov
add
and
push
jl
dec
arpl
xor
ds
inc
sbb
clc
and
xlat
nop
push
add
jns
sub
cli
mov
sub
outsl
imul
call
ret
popf
nop
and
pop
and
rolb
je
dec
mov
push
mov
ret
movb
pop
test
dec
clc
and
ds
adc
add
pop
aad
adc
jb
xor
loopne
push
sbbl
or
add
lcall
data16
pop
clc
push
mov
out
and
mov
bound
rol
push
lea
test
and
stc
mov
leave
outsl
cmp
ss
jne
or
or
insl
dec
push
into
ljmp
lods
dec
ljmp
fmuls
daa
mov
int3
pop
dec
jns
out
adc
jg
inc
cmp
lods
inc
and
xor
aas
in
lcall
test
lahf
cli
mov
aaa
in
enter
js
aas
lods
add
faddp
xchg
lods
xchg
mov
mov
out
imul
outsb
or
xchg
loope
or
xchg
push
rorl
jbe
ret
fwait
mov
dec
mov
bound
xchg
sti
fisubrs
shrl
mov
ret
xor
lods
dec
dec
pop
push
mov
sbb
pusha
mov
cmp
stc
and
jbe
aam
mov
fstpt
rcll
pushf
icebp
in
rclb
cmp
pusha
jle
xor
push
and
and
stos
lret
fnstcw
pop
fisubrl
mov
pop
lret
sbb
jl
xor
in
test
sub
movsb
cmc
mov
xchg
repnz
adc
push
adc
ljmp
movsb
mov
scas
std
adc
loope
fcomps
aam
cltd
or
push
mov
add
and
inc
lcall
les
jns
cld
jmp
jnp
and
xorl
dec
mov
ret
sbb
andl
cmp
xor
testl
dec
ficoml
cltd
xlat
sbb
mov
xchg
sub
insb
outsl
shrb
jp
mov
dec
jecxz
lahf
mov
xor
stos
fwait
mov
push
jne
shll
out
cld
pop
or
shrd
jg
mov
cmp
dec
push
aam
add
sub
mov
dec
mov
or
imul
jae
mov
pop
fldlg2
loopne
jp
inc
push
test
fdivrs
out
in
sbb
and
hlt
repz
adcl
xor
stos
movb
jbe
mov
xor
xchg
cmp
lock
mov
out
stos
subb
dec
cmpsb
or
fwait
sbb
out
into
mov
mov
leave
lods
int3
cmp
arpl
xchg
jno
adc
cwtl
mov
fsubs
jg
jae
stos
xor
lahf
and
jne
int
mov
aam
push
fwait
dec
add
icebp
lahf
push
mov
dec
mov
xchg
pop
cmp
push
inc
adc
mov
repnz
dec
call
loope
sub
lods
movsb
pop
mov
rolb
int
mov
scas
jns
mov
mov
es
stc
xor
mov
test
lcall
jge
or
fcoml
pop
and
arpl
xorb
cwtl
in
mov
jae
dec
xchg
lcall
mov
outsb
lret
cli
movsl
shl
lods
aam
cmp
mov
mov
pusha
sub
adc
mov
and
leave
inc
das
fildll
movl
mov
push
mov
je
idivl
aas
or
popa
nop
xchg
lods
clc
xchg
stos
sub
lahf
dec
xchg
int3
pop
aas
int
pop
mov
xchg
sbbb
out
scas
cmc
or
mov
and
stos
mov
shll
push
cmp
add
rorl
lods
fs
sbb
sub
loopne
xor
lds
pop
lods
push
xchg
stos
stos
jno,pn
pop
cli
roll
scas
pop
xchg
dec
je
fstpl
xchg
push
mov
in
push
sbb
sub
ffree
and
pop
enter
gs
jle
mov
pop
pop
jle
stos
and
adc
add
popf
shl
pop
mov
inc
add
xchg
ret
mov
je
sbb
in
nop
stos
pop
or
call
add
jmp
out
jle
iret
call
dec
scas
cli
or
pusha
je
xor
pushf
inc
mov
adc
test
rclb
lds
fidivrl
and
adc
or
dec
mov
enter
iret
cli
lds
inc
push
sahf
push
inc
dec
xor
dec
shlb
rolb
jnp
aaa
jecxz
dec
push
insl
mov
test
lea
dec
mov
das
daa
lret
add
sti
xchg
pop
out
repz
push
test
and
out
lods
dec
pop
sbb
mov
addb
sahf
sub
xlat
rorb
mov
lea
aas
pushf
xchg
cmc
pusha
jbe
repnz
cmc
into
pushf
addr16
lea
lret
pop
sti
add
push
shrb
enter
lcall
out
sbb
cmc
push
mov
nop
clc
push
cld
decl
mov
scas
sub
je
sti
fisttpl
or
jecxz
mul
repz
xchg
nop
and
inc
data16
push
push
add
pop
xchg
dec
sub
cmp
adc
jno
hlt
ficomps
push
inc
sub
push
pop
jo
adc
jmp
dec
pop
stos
jb
and
out
dec
mov
movsb
add
add
xlat
pop
dec
into
fs
iret
add
and
mov
xchg
or
xchg
loope
cs
mov
jmp
dec
fucomip
ror
js
fxch
mov
push
mov
mov
lods
push
jo
fstpt
push
xchg
adc
push
ja
cmp
cs
aam
mov
rorb
push
and
leave
mov
cmpsl
jo
stc
shrl
or
mov
into
not
int3
fistps
dec
mov
cwtl
outsl
iret
xchg
fwait
xor
cmpl
add
leave
lods
call
xchg
cwtl
pop
iret
xor
mov
pop
xorl
loopne
jp
leave
addl
or
pop
daa
es
aam
shlb
fsubs
movsb
iret
int
xchg
pop
mov
test
add
mov
sbb
mov
cli
xchg
lret
mov
jecxz
nop
pusha
shr
adc
jne
xorb
les
mov
and
sub
cld
je
aaa
outsb
std
cli
mov
dec
mov
mov
or
jecxz
fdivrp
ror
push
fcmovbe
mov
cmc
imul
pop
xchg
cmp
sub
xor
fmull
xchg
ret
push
cmp
in
adc
inc
xchg
mov
sub
push
mov
sub
lock
push
sbb
popa
xlat
cmpsb
mov
leave
out
cmpsb
push
adc
testb
inc
incb
stos
xchg
pop
cltd
aam
lahf
stos
xor
fmull
adc
imul
xchg
das
call
outsl
push
ja
cld
push
test
push
out
adc
subb
call
in
jl
mov
out
or
jne
cld
mov
fs
scas
push
xorl
push
push
dec
orl
call
push
fstl
lcall
or
loopne
push
mov
or
test
cli
movsl
popa
mov
lret
dec
cmpsb
jbe
mov
sahf
ss
es
push
mov
and
cvtps2pd
mov
and
mov
fneni(8087
mov
int
ret
icebp
mov
inc
notb
loope
ds
out
insl
stos
mov
imul
mov
test
pop
andb
fs
mov
idiv
cwtl
push
pop
lods
and
je
xchg
cltd
jge
adc
sarb
cmp
mov
movsl
andb
sbb
lods
sub
lea
scas
addl
xchg
imull
jno
jbe
loope
adc
rorl
push
int
test
sub
pop
sbb
pop
add
push
inc
scas
arpl
in
push
js
mov
sbb
xchg
mov
outsl
push
pop
mov
jl
cld
mov
sub
shll
jmp
adc
test
aad
jae
je
sbb
xor
nop
negb
adc
lret
xchg
nop
mov
xchg
mov
mov
fstps
insb
push
xchg
lahf
cli
push
leave
daa
pop
ljmp
inc
mov
loopne
dec
ret
mov
push
sbb
jbe
xchg
test
bnd
imul
cmp
out
dec
fistps
stos
pop
pop
loop
hlt
fwait
or
faddp
aam
dec
fnstcw
push
in
jg
and
inc
mov
rorl
dec
aaa
mov
push
sbbl
jmp
adc
xchg
call
pop
pop
inc
xchg
imul
cmp
push
push
adc
stos
imul
fcomps
cmpsl
sbb
adc
test
lods
repz
inc
dec
and
xlat
lods
ss
aas
cli
jns
jg
push
movsb
jb
xor
popa
xor
shlb
bnd
xchg
int3
fwait
and
sbb
data16
xchg
lods
jl
jge
int3
push
jne
icebp
dec
xchg
dec
mov
cmp
stos
xchg
fxch
insb
xor
inc
push
xchg
nop
jle
mov
xchg
mov
sbb
das
les
xchg
lods
push
mov
addr16
stos
ja
jle
xor
push
repnz
pushf
sub
mov
sub
mov
test
and
loop
mov
xor
cld
dec
xchg
jae
ljmp
mov
negl
jg
loope
mov
dec
xchg
movsl
pop
xor
mov
lds
jge
pushf
add
mov
xor
fbld
or
enter
bound
cmp
dec
dec
jno
idivb
pop
cmpb
fistps
lock
adc
push
jle
iret
mov
aad
aad
clc
or
shl
push
cltd
shll
fstl
inc
enter
out
jl
leave
sub
mov
pop
mov
mov
mov
and
add
xor
sbb
xor
mov
in
divb
int
xor
mov
aas
jb
dec
mov
lods
and
inc
loop
inc
lret
std
dec
insl
lcall
stos
dec
out
push
or
fnsave
cmp
jle
fists
bound
fdivl
out
lahf
mov
inc
sub
cmpsl
fs
das
dec
mov
push
cwtl
dec
sub
pop
cwtl
mov
or
dec
outsl
lods
hlt
xor
orl
cmp
xchg
ss
jecxz
cmp
push
jno,pt
push
jecxz
lahf
icebp
pop
sbb
adc
xchg
mov
sahf
jg
fwait
sub
add
cmc
lret
in
pop
xor
pop
adc
mov
test
fbld
stos
xchg
iret
and
jnp
aas
mov
xor
ss
mov
inc
pop
or
int3
je
cld
dec
enter
lds
cs
cmpsl
mov
sbb
test
xor
arpl
sbb
jns
lods
mov
test
aaa
test
dec
jmp
lret
jg
mov
mov
in
dec
test
xchg
dec
adc
add
cli
ret
push
shrl
enter
sbb
or
das
shl
andb
sbb
dec
dec
ljmp
adc
inc
rcrb
pop
repnz
xchg
sti
xor
cmpl
fidivrl
sti
aad
clc
cmp
sbbl
xor
outsl
test
arpl
out
sbb
popa
shl
ret
pusha
push
mov
ret
insl
clc
cmpsl
and
test
jno
mov
lret
cmp
and
add
pop
sub
mov
xchg
and
pop
rol
fistpl
mov
inc
fdivrs
test
push
push
mov
inc
call
adc
mov
cmp
lret
addr16
dec
dec
ja
insl
andb
cwtl
mov
rcl
test
jl
ljmp
xchg
pushf
fiaddl
lret
ret
mov
cmpsl
xlat
jl
leave
jmp
in
fdivr
aad
bound
out
outsb
sub
mov
jo
roll
mov
test
push
mov
sub
cs
and
jle
add
cli
idivb
sub
mov
push
xchg
adc
push
aad
jne
mov
fmulp
jno
jns
inc
aaa
roll
inc
repnz
cli
lods
add
mov
ja
push
lcall
push
mov
cmpsb
mov
cmpsl
inc
xchg
jbe
notw
out
xlat
ss
es
daa
pop
testb
ja
xchg
inc
cmpsb
mov
cmpsl
inc
xchg
jbe
notw
out
xlat
ss
es
pop
mov
pop
out
xchg
addr16
mov
cmpsb
mov
cmpsl
inc
addr16
notw
testl
and
jnp
dec
mulb
out
xchg
ja
push
ss
cmpsb
mov
pop
in
cmp
sahf
outsl
stc
sub
cmp
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
and
sub
scas
sbb
dec
sub
pop
sub
in
xchg
int
mov
rorb
add
dec
bound
push
and
aad
int
xchg
repnz
ret
lea
stos
add
adc
bound
push
aas
mov
mov
popf
lret
mov
mov
sub
push
jle
stos
xor
aam
sahf
stos
int3
ret
jbe
adc
lahf
push
cmpsb
gs
xchg
push
mov
mov
sub
mov
add
adc
insl
popf
sbb
push
pop
shlb
xor
add
mov
leave
in
or
mov
fcoml
mov
push
cmpsl
dec
rorb
jge
insl
push
sub
fstl
das
js
or
sbb
out
in
mov
push
jb
rcr
icebp
dec
fsubp
mov
mov
or
add
or
shrl
popf
mov
insl
push
or
scas
inc
mov
mov
jg
xchg
out
icebp
xor
sub
dec
bound
push
lahf
mov
fists
inc
ret
mov
imul
and
add
push
xlat
popf
cmpb
jecxz
bnd
xchg
in
cmp
addr16
bound
jg
je
ds
pushf
jecxz
orb
lods
scas
clc
cmpsl
incb
xor
jno,pn
sub
mov
fstl
lods
ret
lea
jge
insl
add
dec
bound
push
or
sbb
int
mov
rorb
lahf
and
scas
sbb
jl
int3
lds
cmp
adc
das
imul
in
popf
jno
out
mov
test
mov
pop
in
sub
arpl
sub
add
dec
shl
sbb
mov
or
enter
test
mov
push
pop
into
ror
aam
inc
sarl
pop
fadds
int3
dec
jnp
insl
cmp
mov
imull
test
pop
mov
and
gs
bnd
push
imul
or
dec
insl
xlat
dec
in
and
mov
adc
lods
and
push
and
dec
jmp
outsb
sbb
sub
add
sub
cmp
lret
dec
movsl
in
and
icebp
lods
mov
cmp
push
in
std
push
ss
mov
or
jge
or
popa
aad
js
jns
sti
dec
jae
mov
mov
cli
icebp
sti
arpl
adc
inc
lret
cmp
dec
mov
jge
aad
bound
and
inc
dec
lret
push
stos
mov
cmc
cmp
push
inc
test
fcompl
mov
mov
mov
mov
cmp
cmp
in
ja
clc
aas
xor
xor
cmp
push
hlt
lcall
pop
mov
test
fisubl
test
jae
inc
icebp
push
push
sbb
pop
scas
xor
lahf
mov
popf
fildll
adc
sbb
adc
pand
xorl
xchg
xchg
andl
adc
pop
sti
sbb
mov
mov
mov
pop
or
add
repnz
jo
add
ds
push
xor
lcall
mov
fbld
and
cmp
test
adc
cmp
aaa
das
mov
cmpsl
or
clc
mov
andl
iret
sbb
dec
mov
mov
add
bound
mov
gs
inc
ja
shl
cmpb
aas
xchg
inc
mov
add
xchg
outsb
push
xchg
pop
neg
mov
mov
out
inc
out
add
out
cli
int
imul
fadd
sub
hlt
aas
repz
les
mov
daa
xchg
icebp
and
adc
pcmpgtd
ror
pop
in
lahf
outsb
repz
cmp
leave
cmp
pop
fdivr
pop
cld
mov
adc
ror
aad
push
ljmp
xchg
ret
iret
call
incl
adc
sub
imull
iret
add
orl
and
into
xchg
sub
ljmp
mov
mov
push
fsubrl
jmp
cld
aas
popf
das
shll
jp
pop
int
mov
push
adc
jecxz
pushl
push
arpl
mov
push
arpl
jae
cwtl
fstpl
lret
jecxz
pop
jbe
popf
repnz
cmp
mov
dec
arpl
jae
int3
xor
xor
lods
xor
dec
call
sarb
mov
stos
loope
push
cmp
orb
jnp
xchg
pop
pop
sbb
fldenv
xchg
clc
dec
arpl
mov
xchg
sbb
mov
repz
out
stos
cmpl
jge
sti
add
inc
mov
ds
sub
test
mov
dec
divl
xchg
xor
icebp
push
xor
ds
dec
movsl
jno
xchg
pop
push
mov
jns
dec
stos
sub
sarb
push
stos
cmp
mov
push
sub
dec
mov
cmc
mov
mov
mov
lcall
sub
popa
mov
call
xor
stos
insb
push
and
xchg
sbb
mov
ds
cmp
and
in
dec
pusha
test
in
ds
or
dec
shlb
jl
cmp
ror
dec
ret
sbb
sahf
cli
bound
in
lea
ret
cmpsb
in
and
pop
push
push
in
in
insl
jne
push
and
lods
in
pop
sub
xor
push
lahf
pusha
in
pop
lea
stos
push
ja
data16
xchg
aas
mov
sbb
mov
mov
inc
mov
lods
repz
cs
jp
jg
clc
xchg
leave
pop
js
xor
test
fs
sti
xlat
push
xchg
mov
xchg
sub
int
ja
push
shll
rcll
and
push
pop
stos
xchg
fnstcw
out
adc
ds
jnp
mov
lahf
dec
insl
sbb
and
xor
stos
imul
mov
outsb
enter
push
xadd
mov
adc
jae
lret
sub
xor
push
ja
and
imul
push
insb
pop
sti
mov
cmp
int3
sbb
incb
xchg
pop
mov
sbb
sbb
jg
jno
lods
xchg
pop
insb
xlat
inc
push
push
out
insl
add
lea
mov
xlat
push
mov
test
sbbb
sub
scas
jno
call
xchg
jp
aam
outsb
ss
aad
mov
xchg
lcall
ss
or
shl
fidivl
fidivrs
call
cmp
inc
and
dec
popa
test
xchg
ret
inc
clc
js
mov
sub
mov
sub
mov
clc
inc
mov
aad
mov
or
sub
mov
sub
mov
push
xchg
sbb
sti
add
in
int
jge
test
jno
add
aad
mov
shll
ds
sbb
jg
mov
cmp
popf
mov
movb
pop
mov
inc
aam
mov
loop
hlt
xor
sbb
cltd
nop
mov
std
push
mov
push
subb
jo
xor
and
scas
push
and
mov
daa
mov
pop
arpl
repz
mov
imul
jne
iret
or
je
or
icebp
mov
popa
mov
jns
fucom
or
sub
dec
mov
adc
mov
dec
sub
or
sbb
fcomip
push
popa
add
jge
arpl
bound
push
adc
push
adcb
mov
nop
sub
int3
mov
leave
sub
das
xor
mov
push
cmp
push
add
mov
add
cmp
push
dec
mov
sti
mov
push
xor
xor
mov
lods
dec
or
mov
pop
mov
jae
cld
fwait
lock
rol
adc
push
mov
cmpsl
mov
and
push
inc
ja
aad
in
outsb
aam
aas
dec
mov
sbb
jae
sub
imul
stos
mov
sub
jne
movsl
test
loopne
cltd
shlb
ds
adc
dec
dec
ds
addr16
fstps
cmpsb
xor
outsb
add
xor
int
leave
cmp
mov
xor
mov
pop
repnz
outsb
inc
cmp
rorb
test
sti
jo
shl
fdivr
ja
cs
fdivrs
nop
push
jmp
aam
loope
clc
xchg
dec
cmp
jo
adc
inc
shrb
inc
push
add
push
jg
pop
dec
xchg
in
pop
lret
dec
add
out
pop
xlat
in
mov
and
push
mov
lret
cmp
fstps
mov
xchg
out
push
es
jecxz
mov
xchg
aas
and
push
lahf
mov
outsb
sub
stos
rcrl
ja
cmpsb
data16
cs
cli
out
ss
xchg
lods
mov
jns
mov
jbe
pushf
dec
iret
mov
jge
movsl
addl
lcall
je
mov
enter
addr16
rcrb
and
cwtl
dec
call
leave
daa
add
std
les
adc
movsl
sbb
rolb
jg
mov
adc
dec
add
test
les
inc
les
push
xchg
push
in
enter
sbb
lds
lret
lods
or
pushf
push
mov
and
inc
out
push
ss
sarb
sbb
jmp
pop
or
cs
icebp
mov
clc
jle
mov
xor
repnz
orl
push
push
fisttps
xorb
iret
pop
or
cmpsb
addr16
pusha
jl
or
adc
cmc
fmuls
add
popa
fsubp
mov
sbb
cmp
sahf
sub
cmc
je
mov
jmp
sub
jge
in
data16
lahf
cmpsl
out
das
test
jle
clc
push
or
out
enter
cmp
je
adc
xchg
sbbl
mov
std
add
jg
shrb
sub
neg
test
push
cs
xor
iret
xchg
mov
das
xor
cli
imul
int
or
into
xor
adc
jbe
mov
pop
push
add
pop
stc
aad
lods
movsl
adcb
adcl
sbb
inc
jg
aas
add
pop
scas
fimuls
sbb
inc
iret
cltd
scas
stc
gs
fwait
dec
loop
mov
shl
mov
adc
mov
cmp
leave
mov
fmull
fldenv
pop
fs
sub
pop
gs
inc
bound
xchg
mov
or
xor
cmp
sbb
xorb
insl
rcr
inc
sub
cmp
rcrl
std
andb
fdivl
push
xor
dec
test
sahf
sar
stos
sub
pusha
push
sub
mov
mov
inc
aam
cltd
outsb
xchg
lret
rcr
jnp
and
push
frstor
mov
add
loopne
pop
dec
sbb
loope
es
cld
jne
ret
mov
int3
ficoms
scas
lcall
push
insl
xchg
adc
arpl
sub
sbb
sbb
outsb
sub
outsl
and
mov
fs
ss
bound
mov
xchg
mov
jnp
adc
xorl
les
jp
adc
test
mov
pusha
mov
xchg
rcll
fcmovbe
outsl
jg
jl
lret
cltd
mov
jbe
lds
sub
lods
fisubs
ljmp
sbb
int
adc
es
cmp
lret
in
or
push
adc
xchg
lahf
test
push
dec
or
and
pop
mov
and
inc
lds
mov
sub
ja
sub
loopne
push
xchg
pop
repz
arpl
popa
arpl
pop
dec
pop
mov
adc
fldcw
cwtl
or
aam
stos
repnz
sub
push
mov
or
movsl
push
jo
adc
test
xor
jbe
out
xchg
loope
gs
fistpll
fistpll
sbb
les
push
cld
xchg
inc
adc
cmp
push
and
push
mov
jne
daa
push
in
loopne
push
int
cs
fsubrl
incl
icebp
mov
dec
inc
dec
in
stc
cmp
repz
cwtl
test
movsl
addr16
and
add
cmpsb
inc
inc
sub
hlt
shrb
dec
sti
loope
push
lock
jl
bound
push
xor
mov
cmpsb
push
jmp
mov
xor
lahf
push
mov
insb
aam
in
add
mov
adc
jne
pop
pushl
jbe
out
xchg
fldt
sbb
and
popf
xchg
pop
jle
jns
and
ret
fs
std
loope
adc
mov
xor
pop
cli
mov
or
cli
out
js
inc
cmp
scas
mov
testl
lret
jns
sub
aam
cltd
mov
mov
loop
sub
cwtl
cmp
pop
add
mov
mov
in
jle
je
mov
mov
mov
ja
aas
mov
mov
cmc
mov
cmpl
pop
adc
lods
cmpsl
add
xor
jb
add
pushf
shrb
loope
nop
add
adc
mov
jl
jecxz
pop
icebp
mov
mov
aam
jae
int
fcompl
adc
add
andl
mov
insl
or
push
loopw
in
test
xor
sbb
lcall
cmpb
push
jp
lods
dec
pop
imul
call
push
fucomp
popf
in
cmp
jl
cmp
lods
lods
in
arpl
ljmp
cmp
or
popa
lret
inc
lods
inc
dec
mov
scas
rcr
rcrl
bound
in
xor
aam
call
fs
scas
dec
scas
fidivs
xor
inc
sbb
xchg
mov
sub
pop
out
or
dec
mov
push
sbbl
jnp
cmp
iret
mov
sarl
lock
cmp
xchg
xchg
jno
jne
and
and
sbb
jecxz
mov
popf
mov
xchg
push
scas
mov
sbb
inc
mov
xor
shrb
or
sbb
and
rorb
aaa
or
movsl
dec
mov
mov
jp
repz
and
and
mov
and
inc
or
repz
arpl
out
xor
enter
pop
jl
mov
jmp
cwtl
ret
movsb
cmp
sub
push
cmp
mov
and
sti
popl
adc
sub
insl
in
jl
cmp
dec
mov
cmc
add
cli
inc
lea
xchg
dec
aam
ljmp
stos
enter
dec
push
jp
mov
in
mov
loope
outsl
add
jno
stc
xor
lods
shlb
dec
lret
adc
data16
mov
popf
push
adc
pop
and
fstpt
sbb
aam
je
lods
pop
and
xchg
lcall
aas
inc
daa
dec
mov
stc
adc
loope
sbb
mov
test
push
add
jnp
int
mov
xor
repnz
push
fyl2x
dec
adc
sub
mov
push
jb
pop
std
in
push
pop
aas
js
fdivrs
adc
dec
popf
mov
jae
dec
enter
xor
and
push
xchg
cmp
push
pop
cmp
ljmp
push
jbe
outsb
ror
cmc
push
imul
dec
lahf
mov
jmp
int3
dec
or
lret
je
pop
adc
sbb
cs
fistpl
stos
insb
imul
add
rol
jno
and
mov
in
xchg
jecxz
push
adc
sub
icebp
cmc
das
ja
cmp
mov
fdivrl
mov
daa
push
xchg
add
scas
dec
sub
push
arpl
add
lret
lahf
and
xchg
fsubs
mov
sub
movsb
popa
aad
push
mov
push
adc
push
xor
test
push
xchg
and
jmp
jb
jnp
jno
sbb
mov
loope
jmp
xchg
orb
or
imul
ja
or
sbb
add
dec
sub
imul
outsl
aam
lds
fprem
lds
mov
pop
in
xchg
pop
ds
mov
inc
adc
push
xlat
fisttpl
shr
dec
push
mov
testl
mov
inc
test
adc
mov
mov
les
aad
cmp
and
sbb
inc
out
jle
xor
call
push
fmull
cld
lock
mov
sub
std
adc
sarb
fisttpl
mov
jbe
pop
sub
or
jns
mov
loopne
insl
mov
mov
add
or
into
mov
rcrl
cltd
mov
test
fsubl
pop
gs
jecxz
loopne
push
adcb
imul
push
sub
xchg
mov
mov
stos
sub
pop
pop
and
imul
les
sub
sub
stmxcsr
push
lods
outsl
fstps
outsl
xor
and
dec
aaa
sub
fcmovnb
dec
jno
add
es
or
add
mov
ja
push
lret
lahf
in
mov
cmpsb
mov
xchg
mov
aas
push
rcrl
ja
adc
or
in
test
push
cld
test
sub
dec
icebp
rorb
ficomps
add
lods
js
insl
daa
adc
or
cltd
jmp
inc
daa
gs
test
sub
test
mov
inc
or
pop
mov
vmovlps
mov
xor
dec
xchg
sbb
test
sti
push
movsb
lea
repnz
mov
push
sbb
es
mov
sub
movsl
pop
fadds
and
jle
daa
pop
call
dec
fidivrs
jge
fidivrl
pop
pop
mov
mov
clc
int3
sub
jg
sub
dec
pop
push
push
lods
scas
push
clc
repz
jbe
jbe
xor
enter
fsubr
pop
repnz
addl
xchg
mov
pop
xor
or
adc
pop
inc
adc
ss
addr16
in
dec
xchg
popa
jl
jl
cmpsb
shlb
sub
adc
jmp
hlt
mov
sub
fs
mov
rol
push
fdivr
mov
fs
sub
scas
jecxz
insl
mov
inc
jle
sub
xchg
sahf
loopne
pushf
mov
ja
xchg
out
push
jle
pop
shll
std
imul
dec
stos
out
std
jp
out
dec
enter
inc
jno
lods
ss
cmp
pop
shlb
test
jp
xchg
inc
das
inc
sbb
jne
je
sbb
fidivl
pop
cltd
shrl
cli
push
push
mov
pop
pop
xlat
ljmp
fsqrt
add
or
cmp
xor
inc
push
scas
xor
mov
flds
testl
insb
fs
in
xor
push
sub
lret
repz
aam
loop
mov
mov
adc
pop
dec
or
mov
addr16
movsl
cmc
cmp
leave
or
adc
xchg
bound
inc
jns
das
jecxz
jle,pn
sbbl
pop
jmp
adc
loopne
xchg
jns
mov
ror
test
enter
jl
mov
or
jo
inc
mov
or
aaa
or
fisubrl
movsl
inc
jns
imul
xor
in
or
icebp
jl
cmp
cmc
push
das
xor
dec
mov
push
dec
or
mov
addr16
inc
test
dec
fs
push
mov
cmp
jl
mov
ret
int
cmp
outsl
js
push
pop
fists
aaa
mov
or
cmp
in
les
mov
int3
mov
mov
jg
movsb
inc
jae
popa
negb
repz
or
mov
in
aam
cli
mov
dec
out
cli
lock
add
jne
xchg
dec
imull
not
rorb
in
cmpsl
or
jnp
xor
daa
cwtl
movsb
int
cmp
add
xor
xchg
lahf
mov
imul
ficomps
je
and
dec
fimuls
jbe
cmp
ss
lahf
sub
inc
push
xchg
adc
imul
and
dec
iret
mov
test
dec
adcl
cwtl
test
orb
loopne
dec
shlb
cmp
lahf
push
insb
mov
push
bound
popf
pop
rcr
sub
mov
pop
aam
adc
imull
pop
sub
inc
and
xchg
inc
lea
adc
stos
in
pop
rorb
mov
pop
add
dec
out
or
outsb
inc
push
test
push
out
jmp
pop
mov
dec
je
lcall
mov
and
mov
sub
rcrb
jno
test
subl
dec
fisttpl
in
inc
aaa
lock
imul
mov
xor
lods
das
sbb
sub
stos
sarb
std
pusha
test
adc
in
mov
mov
jl
mov
out
fmul
pusha
fwait
jnp
pop
imul
pop
cmp
inc
movsb
stos
and
xchg
xchg
mov
cltd
pop
fmull
mov
loopne
and
aas
movsb
jnp
pop
push
cmp
sub
out
mov
mov
mov
and
jne
js
clc
mov
sub
push
mov
lock
cmp
add
pusha
mov
push
dec
or
subb
sbb
sub
xchg
lock
and
lock
rolb
or
add
adc
dec
xlat
xchg
imul
popa
adc
hlt
imul
into
cmpsl
mov
jo
js
dec
push
mov
cmp
enter
cmp
or
xchg
dec
sar
dec
int3
out
add
ds
mov
shrb
sbb
jo
xor
aaa
and
aas
mov
xchg
lahf
test
sbb
jns
lret
aas
cmp
sbb
cmc
pop
mov
sbb
fwait
cmpsl
sub
mov
out
add
sub
push
xor
loopne
ret
xor
adc
cmp
push
or
sbb
int
mov
rorb
add
dec
bound
push
or
sbb
int
mov
rorb
addb
loop
jb
inc
sbb
or
sbb
lods
ret
imul
mov
jb
inc
popf
push
int
add
mov
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
sti
out
mov
enter
hlt
mov
dec
outsl
jnp
sub
jnp
or
sbb
cld
iret
sti
out
stos
mov
fisubl
jnp
das
outsb
cltd
jg
push
pop
or
sbb
repnz
loop
shr
ret
pushl
scas
mov
daa
or
adc
jbe
js
jb
fwait
cmp
xchg
jo
lods
bound
xorb
pop
xchg
push
rclb
jmp
jbe
lret
test
jb
lahf
inc
adc
push
xor
mov
push
push
pop
insb
inc
out
xchg
outsb
data16
pop
cmpb
push
cltd
je
jl
dec
test
imul
cmp
lret
push
test
arpl
adc
scas
pop
push
aas
or
add
xchg
adc
jo
decb
dec
pop
nop
pop
jg
pop
cmp
xchg
fisttps
xchg
sti
leave
test
notl
shlb
imul
pop
mov
pop
sub
sub
das
sbb
sub
sti
out
int3
mov
scas
cmpb
outsl
inc
jg
mov
or
add
iret
sahf
cmpsb
scas
scas
mov
jmp
lret
pop
aas
jnp
cmp
pop
outsb
pop
jle
jmp
sti
mov
cmpsl
fstps
clc
ficoms
push
or
sub
jnp
sbb
mov
mov
mov
fwait
mov
dec
outsl
pop
jg
pop
or
sbb
jmp
sti
out
stos
mov
mov
dec
outsl
pop
jg
pop
or
sbb
jmp
cmp
xchg
xorb
dec
xchg
xchg
dec
test
push
and
testl
imul
mov
push
mov
or
mov
testl
in
mov
in
xchg
push
shll
shrb
call
popa
fs
mov
loope
add
xor
inc
sbbb
pop
mov
mov
push
or
mov
mull
jno
ret
sbb
jo
negl
dec
les
sbb
xorl
inc
xchg
aam
sbb
jns
sub
sti
in
cltd
xor
cmpsl
call
dec
adc
loop
cmp
lods
outsl
movl
dec
pop
and
mov
xchg
cmp
pop
or
mov
paddq
pop
iret
push
int
dec
out
lahf
xor
rolb
sub
lds
or
out
pop
push
lods
xor
xchg
mov
adc
or
pop
add
sete
jl
adc
cli
mov
ds
mov
loopne
push
cmp
mov
mov
stos
cmp
pop
pushl
scas
xchg
fdivrl
fadds
les
test
bound
mov
adc
pop
lret
xor
mov
in
push
mov
popf
inc
cmp
insb
xlat
push
xlat
std
ret
pop
adc
adc
jno
push
pop
mov
cltd
ljmp
sbb
loope
xchg
lret
rclb
jg
rorl
shl
sub
mov
cmpsb
jmp
lds
or
lock
mov
cld
lods
dec
adc
pusha
push
mov
mov
fnsave
mov
lcall
js
cs
mov
and
hlt
rolb
dec
cld
jns
aas
adc
out
repz
mov
sub
jecxz
ljmp
cwtl
mov
mov
xlat
inc
adc
shr
clc
addr16
es
inc
mov
inc
clc
ss
cwtl
and
add
imul
mov
or
cltd
push
xchg
jnp
and
or
adc
stc
fcomps
stos
popf
xor
dec
add
pop
push
adc
add
or
sub
jl
in
shll
fwait
sbb
or
mov
pop
push
mov
xchg
or
popa
xchg
jge
adc
pop
imul
scas
aad
mov
pushf
pop
jge
ret
jo
sbb
fbld
dec
test
shll
fs
pop
sbb
inc
ljmp
mov
setnp
jecxz
xchg
clc
xchg
mov
sahf
add
pop
mov
sub
int
push
aas
out
test
and
add
jno
dec
mov
dec
inc
dec
jae
repnz
jae,pt
mov
nop
and
test
jle
rclb
mov
sub
push
movb
mov
push
push
push
push
push
dec
mov
jp
ret
icebp
leave
and
testb
filds
dec
xchg
pop
jg
repnz
push
sahf
mov
lahf
in
test
stos
dec
xchg
or
hlt
cmp
sub
and
movsl
dec
inc
scas
mov
in
push
or
inc
xchg
dec
jmp
out
mov
mov
scas
cmpsb
pop
insl
fldl
and
sub
roll
enter
xchg
cmp
les
je
outsl
and
mov
out
or
xchg
mov
or
scas
mov
or
and
int
cmp
adc
cmc
push
mov
notl
sbb
add
insl
int
mov
ret
hlt
jno
and
sahf
cmp
lcall
mov
push
outsl
pop
ds
sub
subl
aad
jae
xor
or
cli
scas
sbb
in
lods
mov
inc
pop
xchg
lcall
push
push
lods
orb
ljmp
push
dec
imul
push
je
lea
push
adc
cmp
enter
mov
push
dec
xchg
mov
dec
ja
pop
lods
lret
mov
mov
fwait
in
adc
test
je
adc
mov
cmp
xchg
inc
cmp
or
imul
and
mov
in
lcall
js
pop
mov
mov
fnstenv
cmp
sub
cld
test
ss
mov
sub
jle
jns
orb
ret
cmp
daa
sbb
add
mov
lcall
add
jne
icebp
lret
push
xor
sbb
into
loop
cmp
or
int3
sub
mov
mov
lds
dec
sub
mov
mov
jle
sbb
adc
daa
loopne
imul
jp
pop
jg
mov
xchg
dec
xchg
in
mov
fcoml
push
and
sbb
inc
ret
sbb
seta
and
daa
mov
jbe
adc
rcrl
xor
mov
jae
rolb
cmp
cmp
sub
inc
loopne
aaa
mov
cltd
and
outsb
inc
sbb
inc
outsb
pop
cmpl
pop
mov
cmpsb
ss
inc
mov
stc
ret
and
xor
into
lock
sub
fisttpl
pop
insl
out
add
pop
fistl
stc
std
out
adc
pop
pusha
mov
cltd
scas
arpl
mov
repz
sbb
ja
inc
dec
movsl
fldcw
rol
adc
jp
popf
insl
nop
in
pop
xlat
mov
xchg
inc
mov
out
sub
shl
cmp
xchg
cmp
fistpll
enter
roll
fwait
inc
cltd
sub
sub
insl
dec
add
jbe
dec
mov
pop
fs
ljmp
inc
mov
adc
je
sti
nop
pushf
add
pop
les
cmp
out
sbb
push
ds
and
sbb
das
inc
clc
mov
cmpl
les
inc
dec
je
fwait
lods
dec
jnp
xor
call
mov
mov
loop
xor
sub
jge
and
pushf
and
popf
daa
inc
jge
sub
subb
arpl
add
shl
lods
or
push
inc
call
rorl
scas
or
adc
jg
test
adc
dec
and
cmp
pop
cwtl
ret
aaa
mov
fildll
pusha
pushf
outsb
xchg
inc
dec
fisttpl
cmp
and
mov
push
aaa
inc
orb
aam
rorl
xchg
adc
imul
dec
std
jo
add
xorb
pusha
xor
inc
jp
pop
cmp
jge
arpl
cmpsb
out
add
inc
jne
imul
ficoml
lcall
inc
outsl
icebp
into
popa
fidivl
add
inc
outsl
test
leave
and
and
testl
dec
mov
stc
ss
cltd
imul
dec
icebp
jle
push
mov
lret
xrelease
lods
mov
xor
pop
jmp
xsaveopt
aad
lahf
xor
xor
inc
xchg
mov
sub
mov
or
inc
ss
or
push
int
sub
xor
dec
ss
adc
or
sub
jle
loop
aad
jnp
mov
imul
aad
add
popw
mov
mov
jae
daa
jno
roll
push
fwait
outsb
adc
xchg
pop
in
popf
or
jns
data16
rolb
adc
jle
mov
adc
lods
ret
dec
loope
pop
gs
pop
push
jns
xchg
addr16
push
adc
cmpsb
mov
aam
push
rorl
jg
pop
pop
xchg
mov
bound
or
mov
mov
out
add
ljmp
xor
fcomp
mov
add
fistps
jl
lods
inc
jo
jl
adc
test
cmp
mov
std
sub
dec
mov
hlt
pop
fimull
push
fwait
pop
cwtl
sbb
or
mov
cmp
fadd
and
cmpsl
jne
jmp
mov
sbb
xor
and
aam
arpl
jmp
adc
call
sbb
cltd
pop
out
aad
icebp
push
xchg
jmp
cmp
adc
add
insb
mov
and
out
pop
sub
stos
mov
inc
insb
iret
aad
aad
loopne
cmp
mov
outsl
ds
movsl
mov
add
movsb
adc
aam
movsb
xor
sbb
xchg
xchg
add
jno
dec
mov
pop
and
jae
icebp
sub
lcall
daa
xchg
push
frstor
je
fisttps
mov
les
mov
repz
xchg
ret
fdivrs
dec
sbb
inc
stos
mov
dec
push
mov
push
mov
je
out
inc
pop
mov
jmp
and
outsl
inc
ja
xlat
icebp
jl
outsl
insb
pop
mov
lock
nop
cltd
mov
pop
dec
push
arpl
shrb
push
stos
fucom
mov
mov
xchg
out
fldl
jecxz
push
or
mov
movsl
out
push
dec
sahf
jb
add
inc
repz
clc
pop
cmp
xorl
js
ss
xorb
jl
lret
enter
fmuls
loope
mov
jl
repnz
bound
mov
mov
inc
dec
sub
loopne
jnp
fimull
and
pop
mov
pop
cmpsb
pop
subl
pop
lret
mov
jg
fcoml
ds
push
cmp
mov
in
mov
sti
fildl
fwait
cmp
pop
int
adc
adcb
jno
adc
and
cld
sti
rol
clc
sti
adc
and
mov
sub
adc
inc
aaa
xor
mov
test
subb
popf
jbe
mov
dec
popf
ljmp
mov
clc
mov
pop
cmpb
insl
mov
fnstsw
lahf
iret
sbb
iret
stos
dec
inc
sub
sub
or
les
pop
pushf
fidivrl
ror
mov
or
es
aam
leave
mov
or
mov
xchg
sarb
sbb
in
lcall
loop
in
add
dec
jo
xchg
hlt
rcrb
ror
incl
push
mov
fnstsw
add
xor
jbe
xor
stc
js
hlt
iret
inc
out
adc
lea
loop
pop
push
mov
add
mov
inc
jg
pop
jo
sbb
sbb
out
xor
testb
jne
push
stos
add
testl
and
cmp
xor
aam
sbb
ficompl
push
lods
xchg
sbbl
pop
xor
mov
jae
jge
lcall
imul
push
lods
pushf
gs
movsb
mulb
aaa
push
cmp
and
xor
int
insl
and
incl
mov
arpl
push
jge
loopne
xor
data16
clc
lret
sbb
mov
inc
push
push
dec
and
mov
jne
push
dec
rcrl
rcll
cmp
xor
pop
inc
fcoms
adc
pop
rol
je
es
sbb
cmp
jbe
ret
pop
loop
xchg
icebp
mov
lahf
cld
orb
mull
aas
xchg
jo
dec
jno
adc
data16
adc
jo
testb
imul
or
int
mov
or
adc
sbb
popa
cmpsb
dec
and
and
xchg
lret
pop
adc
mov
xor
push
data16
jns
jbe
sbb
mov
popa
cli
jp
push
lret
shlb
mov
adc
pusha
mov
mov
sub
mov
push
mov
sub
addr16
outsb
es
push
pop
imul
test
and
mov
xor
cs
inc
xor
add
sub
or
cld
ljmp
jmp
mov
lcall
push
test
leave
jl
nop
push
pusha
cmpsl
dec
sbb
shll
arpl
mov
xor
xchg
ljmp
mov
enter
cli
icebp
pop
cmpl
jns
or
out
cmp
inc
dec
out
mov
mov
xor
mov
push
ds
xchg
lods
mov
mov
lret
stos
out
dec
xor
cli
dec
xor
push
cmp
repz
pop
xor
data16
add
sbb
xchg
sbb
adc
lcall
sub
and
popa
push
bound
fwait
cmc
mov
jecxz
cmp
cmp
cmp
mov
push
mov
mov
or
mov
or
popa
mov
add
jns
pop
dec
sub
cmc
inc
sbbb
aam
in
and
or
stos
dec
mov
pop
add
push
inc
clc
inc
xorl
in
and
cmpsb
les
test
rcr
mov
mov
mov
xchg
ret
mov
push
sbb
pop
or
jp
mov
dec
mov
cld
movsb
and
add
test
imul
inc
jb
shll
cwtl
insl
mov
ret
loope
jmp
fiadds
xchg
pop
ja
aaa
cmp
cmp
std
test
cld
aam
lcall
dec
xchg
cmp
or
ficoml
shlb
mov
fildll
push
xor
pop
sti
sti
dec
jae
leave
sub
push
adc
mov
or
lods
or
fldenv
cmp
call
fsubs
xor
addb
sarl
imul
pop
mov
loop
cmpsb
mov
pushf
mov
pop
mov
js
and
je
add
icebp
mov
cmp
pop
out
fsubl
or
fstps
outsb
adc
outsl
add
and
clc
lahf
add
lahf
and
jns
mov
mov
mov
daa
inc
enter
jb
and
push
fwait
cwtl
jp
cmp
ss
mov
cmp
repnz
or
cmp
mov
ss
arpl
sbb
push
test
inc
adc
jnp
lahf
fbstp
xor
or
fcmovnb
hlt
addl
mov
push
push
cmp
mull
or
lea
pop
add
push
test
nop
adc
mov
jae
ss
push
rol
mov
lahf
cld
jge
repnz
dec
int3
cwtl
aas
fistpll
mov
in
mull
xor
enter
cmpsb
cli
dec
cmp
xchg
xor
movsl
or
cmpsl
bound
lds
lret
xor
rorl
xor
mov
pop
popa
call
jmp
jp
out
adc
mov
lahf
es
or
mov
les
jbe
sub
rol
js
fsub
fsubp
cmp
lds
in
jecxz
pop
pop
mov
rcl
xchg
out
rorl
jmp
pop
daa
imul
in
sub
mov
sbb
aas
jge
jb
mov
or
add
pushf
test
cmc
sbb
sub
push
mov
inc
fs
cs
fmuls
push
imul
pop
imul
xor
pop
mov
mov
dec
out
add
push
sub
test
xchg
sub
inc
test
mov
mov
sbbl
jl
imul
sbb
pop
in
addr16
int
andb
ljmp
dec
out
js
xor
or
mov
movsl
and
xor
xor
push
push
leave
sahf
out
or
dec
jne
fsubrl
mov
enter
repz
sti
sti
xchg
test
cmp
mov
dec
push
adc
xor
cmpsl
sub
xor
xchg
jnp
sbb
gs
jae
or
sbb
mov
daa
mov
nop
inc
xchg
jno
fidivrl
xchg
push
push
lods
or
pop
dec
or
sbb
in
test
xchg
sub
sbb
jg
jg
ret
pop
sbb
loope
in
pop
cmp
addr16
mov
aam
lock
sub
jne
lret
in
out
push
popf
jne
mov
flds
pop
lcall
add
aaa
je
inc
shrb
icebp
repnz
pop
mov
clc
out
mov
add
xchg
sub
fsub
adc
mov
std
mov
fistl
dec
lret
pop
scas
fcompl
mov
icebp
imul
push
push
pop
inc
xor
pop
jg
scas
xor
loope
and
leave
daa
inc
push
sub
and
and
dec
push
adc
or
mov
xchg
inc
fnstenv
and
daa
push
cmp
lcall
xor
mov
sbb
mov
subb
adc
sbb
pop
xor
push
roll
cmp
mov
mov
push
jns
add
cs
jns
out
lret
daa
aad
stc
movsl
xchg
dec
sahf
mov
dec
xor
jge
pop
iret
push
push
mov
fstpl
xor
jecxz
mov
xchg
gs
stc
push
aam
fucomip
int
rcrl
sahf
cmp
inc
ret
push
lock
mov
dec
add
jmp
mov
pushl
sbb
fcomps
mov
movsb
popf
push
mov
pop
cmp
adc
addr16
imul
rcrl
xor
adc
sub
pop
jg
popa
jmp
inc
mov
fiaddl
dec
repnz
fisttps
pop
sub
or
into
push
lcall
lret
mov
ret
adc
jp
stos
sahf
dec
fisubl
ds
cs
leave
fistpll
std
or
or
pusha
fistl
pop
pop
and
and
cli
xchg
fsubrs
fcompl
sbb
cli
adc
lock
sbb
xchg
aad
xchg
repz
je
div
ljmp
lods
lods
mov
xor
int3
push
push
fdecstp
sarb
fs
push
jae
push
sub
lahf
nop
adc
ja
inc
fs
insl
and
push
cmp
shll
inc
insl
sahf
movsl
outsl
push
push
in
arpl
movsl
and
pop
roll
push
push
aaa
push
stc
cmp
bound
lcall
mov
sbb
aaa
stos
mov
and
mov
fsubrp
icebp
aaa
pushf
rcll
mov
imul
mov
jge
mov
cmp
push
dec
mov
test
pushf
call
bound
pop
or
pop
mov
rorb
aad
loope
mov
inc
aaa
imul
nop
push
add
jp
or
jne
jno
fmul
cmp
in
dec
xchg
roll
or
movsl
sbb
mov
jae
icebp
and
push
xor
scas
shrb
mov
push
mov
into
jo
fiadds
jns
jg
pop
aam
jge
jmp
mov
adc
divl
mov
push
or
adc
jp
bound
popa
jge
loopne
add
sub
dec
xchg
test
xcrypt-ecb
cmpsl
or
pushf
in
les
mov
dec
adc
clc
fsubrs
push
ret
mov
xor
ficompl
lods
mov
loope
inc
cmpl
popf
lahf
mov
test
cmp
into
mov
push
imul
inc
jo
stos
dec
aaa
add
sbb
movsl
cmp
pop
adc
mov
mov
stos
out
rclb
or
fs
and
and
sbb
cs
fisubrs
cmp
push
rorb
push
jno
mov
lea
mov
dec
mov
mov
mov
insb
add
jp
stos
jbe
imulb
sbb
xchg
push
mov
pop
mov
pop
adc
in
fs
test
inc
jl
aas
lods
lock
popf
je
mov
je
sub
adc
dec
pop
mov
adc
pop
mov
jno
pop
jl
and
adc
sub
pushf
jmp
add
jecxz
pop
inc
push
hlt
lds
sub
dec
or
out
dec
push
pusha
jle
movsl
sbb
pop
ss
mulb
xchg
int3
test
jg
loop
movsl
mov
repz
iret
enter
ss
xchg
inc
repz
dec
shll
daa
push
cmp
fidivrl
lret
icebp
jmp
cs
fildll
maxps
dec
add
push
leave
sub
mov
mov
jmp
dec
es
jge
pop
add
sub
ficoms
xchg
sbb
imul
out
sti
or
adc
xor
sub
cmp
cmc
push
outsl
nop
enter
add
popf
rolb
jns
fbstp
out
stos
mov
mov
dec
outsl
pop
jg
pop
or
sbb
jmp
sti
out
stos
mov
mov
dec
outsl
pop
jg
pop
or
sbb
jmp
sti
out
stos
mov
mov
dec
outsl
pop
jg
pop
or
sub
iret
out
stos
mov
jg
dec
test
loope
pop
or
loopne
shl
ror
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
