add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
loopne
lock
shlb
ss
inc
cmp
setp
mov
xchg
inc
mov
cmpsb
and
xor
out
mul
push
lock
shlb
mov
xchg
add
jo
inc
cmpsb
push
mov
mov
aam
out
mul
pop
lock
shrb
mov
jle
insb
pusha
xchg
sub
push
ret
and
jle
mov
inc
mov
xchg
mov
mov
mov
jne,pt
push
sbb
test
jnp
pushf
das
das
pop
ss
jle
insl
mov
imulb
mov
popf
push
mov
clc
jge
adc
lds
push
into
sub
and
inc
int3
nop
dec
jo
dec
outsl
gs
mov
pop
lock
xchg
inc
add
data16
push
jo
sbbl
out
adcl
and
das
inc
stc
xchg
push
mov
imul
iret
push
mov
jae
stc
punpckldq
ficomps
int3
inc
repz
out
cmp
pop
js
jo
mov
lock
lock
sarb
mov
xchg
outsl
pusha
xchg
inc
mov
xor
add
adc
mov
inc
mov
aaa
in
xchg
adc
adc
shll
mov
push
lcall
mov
sbb
adc
inc
add
ret
push
mov
mov
insb
andl
scas
inc
mov
push
andb
pusha
xchg
inc
cmpsb
push
mov
xor
add
adc
loopne
lock
shlb
mov
xchg
jbe
xchg
inc
cmpsb
push
mov
xor
add
adc
loopne
aad
pop
mov
adc
mov
out
mov
jge
mov
fnstcw
mov
out
and
pop
xor
mov
nop
sahf
mov
iret
cmpsl
sub
loope
pop
xchg
jmp
pop
movsb
ret
ja
cwtl
cmc
and
insl
fst
push
xchg
sbb
pop
pusha
subl
jbe
aaa
outsb
xchg
pop
xlat
inc
mov
dec
xor
mov
jbe
int
out
pop
xor
cmp
in
dec
xchg
lret
mov
add
mov
cwtl
fbstp
pop
int3
movsb
cmpsl
pop
mov
rorb
pop
sysexit
les
aaa
rorl
out
xor
lds
subb
pop
ljmp
cmp
imul
mov
out
sub
mov
sub
arpl
jl
ret
dec
push
dec
outsb
cmp
inc
daa
addb
inc
push
test
dec
xor
pop
and
orb
push
repnz
pop
cmp
nop
ja
popf
scas
mov
or
adc
andl
divb
mov
mov
fucomip
jne
xchg
cmc
lahf
iret
lock
adc
sbb
or
imul
mov
pusha
xor
mov
sub
add
sbb
mov
xchg
mov
xor
mov
xchg
outsb
jb
push
xchg
sbb
in
mov
mov
fisubl
or
shrl
pop
std
xor
mov
jmp
inc
inc
mov
hlt
xchg
or
aad
add
lea
add
rolb
sar
sbb
stc
cmp
or
popa
scas
adc
test
je
ljmp
out
addb
cmp
xchg
aas
imul
les
adcl
cmc
fimull
out
into
inc
jp
aaa
xlat
mov
sub
rclb
mov
mov
aaa
lods
lret
sbb
dec
jae
jg
push
pop
mov
subl
add
cmp
adc
test
mov
and
movsl
ds
rcrb
sti
push
inc
pushf
in
loope
shll
push
xorl
push
jno
aad
scas
push
pop
xchg
or
or
mov
rolb
loopne
call
lds
f2xm1
test
jb
pop
into
xor
int3
mov
xor
fidivrl
dec
scas
xor
pop
add
repz
jo
add
mov
sarb
cs
mov
or
mov
xchg
adc
cmp
push
incl
scas
pop
dec
in
sub
push
fdiv
cmp
popa
jp
lock
dec
and
imul
inc
popa
cmp
cli
adc
pop
sbb
data16
inc
push
mov
repnz
or
sti
scas
push
dec
push
movl
mov
and
out
nop
add
in
push
mov
or
sti
cmp
aad
in
and
adc
repnz
dec
inc
push
stc
jae
test
sub
push
and
aad
cmpsb
mov
incl
loopne
sub
lea
repnz
mov
mov
pop
pusha
xchg
ss
push
stc
add
jp
shr
lcall
call
sahf
jp
xchg
xchg
mov
or
icebp
aas
popa
pop
shrb
aad
lret
jnp
pop
cmp
pusha
add
jae
fcmovnb
xor
cld
pop
es
mov
mov
xor
push
add
getsec
push
imul
test
jnp
mov
fstl
xor
and
sbb
jecxz
je
or
sbb
out
adc
insl
xorl
repnz
gs
push
jp
aaa
test
call
test
jo
shrl
pop
sub
add
je
add
inc
int3
out
jmp
fisubrs
adc
fdivs
scas
push
gs
xchg
adc
subl
inc
cld
rcl
and
push
cmp
sub
lahf
xor
sbb
cmp
fildl
xorl
jbe
pop
pop
or
pmaxub
or
inc
lods
pop
sbb
into
push
popf
mov
xchg
adc
outsl
xor
pop
add
loopne
cld
jmp
in
jns
xchg
cwtl
fcmovnbe
bound
cmp
push
ss
xor
xchg
int3
icebp
adc
in
mov
xor
xor
lret
in
and
nop
adc
mov
and
cmc
push
into
pop
popa
xchg
lahf
jne
mov
mov
daa
pop
sub
adc
or
mov
jbe
aam
push
pop
hlt
data16
scas
jmp
cmpl
cld
lds
dec
out
int3
mov
cmovnp
sahf
inc
mov
popf
sbb
add
xchg
cmp
inc
dec
insb
imul
lock
mov
insb
repz
sub
into
sbb
dec
shlb
inc
mov
add
rcrl
adc
dec
sbbl
fs
clc
mov
imull
lret
cmp
cmp
lahf
mov
pop
addb
inc
push
wrmsr
push
iret
sbb
jmp
ljmp
std
xor
imul
and
aaa
or
xchg
lods
js
cmp
cmpsl
loope
aad
xchg
or
adc
xchg
xlat
pop
test
jg
or
enter
sbb
addr16
movsb
inc
inc
push
inc
mov
pop
test
rclb
mov
xor
or
gs
outsb
mov
xor
and
sbb
push
dec
cmp
xor
in
stos
aaa
lods
gs
imul
jmp
ljmp
add
test
sbb
into
outsl
imul
aaa
inc
pop
xor
xor
dec
mov
xchg
add
icebp
out
mov
lods
push
repz
aad
xchg
mov
mov
sti
sahf
rolb
jns
or
movsl
push
pop
nop
rorl
add
sub
pop
jne
enter
rclb
mov
mov
iret
stos
out
enter
fwait
ret
jge,pn
or
dec
stos
and
dec
sti
jns
cs
add
pop
pop
int
repnz
pushf
xor
ficompl
call
faddl
imulb
popf
dec
push
sub
jns
andl
scas
jbe
psrlw
insl
sarb
int
jp
popa
sbb
add
and
shrb
sub
shlb
mov
cmc
sub
xor
ss
in
mov
lcall
push
dec
sti
xchg
stos
inc
hlt
sbb
dec
dec
sbb
add
movsb
stos
xor
pop
mov
dec
shrl
dec
jb
popf
mov
cmp
cwtl
fstps
inc
lret
mov
dec
mov
cld
xor
sbb
ret
fiadds
lea
test
out
inc
adcb
hlt
mov
testl
push
insl
add
inc
xchg
sahf
xor
adc
xchg
inc
mov
insb
jne
push
out
in
push
loopne
sub
cmpsl
fs
stos
rolb
mov
pop
stos
rcrb
inc
rolb
xchg
xor
mov
scas
xchg
xorb
inc
cmc
push
mov
rcr
sub
jb
push
inc
shll
or
xchg
add
ss
mov
shlb
xor
xchg
mov
outsl
mov
push
lock
mov
stc
jb
jno
sti
jae
mov
mov
mov
sahf
xor
xchg
push
xchg
out
das
pop
test
cltd
les
les
dec
std
rolb
pop
insl
add
push
scas
and
jne
insb
add
ret
push
inc
test
jge
xor
ds
push
cmp
jp
add
and
arpl
or
ds
and
mov
stos
fs
xchg
ja
rcrl
out
fs
push
fcmovnu
jns
jecxz
and
cli
mov
les
xchg
imul
add
sbb
adc
in
pop
xchg
jno
bnd
cld
push
cmp
bound
mov
mov
lahf
mov
orl
stos
scas
add
addl
ja
pop
arpl
mov
hlt
shll
fidivrs
test
adc
out
lds
ret
mov
sbb
hlt
int
or
mov
notb
mov
adc
daa
push
lds
outsl
push
idivl
aas
sbb
or
push
pop
xchg
jo
shlb
in
sbbl
out
retw
and
or
mov
dec
mov
mov
shlb
sbb
pop
lds
pop
pop
or
fmuls
arpl
adc
mov
jno
sub
rorb
clc
cwtl
cs
negb
ja
or
xchg
hlt
fistpll
daa
push
pop
out
adc
lods
fildll
push
xchg
sub
mov
bound
ds
xor
pop
dec
cmp
sub
or
icebp
sub
pop
aas
aam
or
dec
jl
mov
je
xor
faddl
in
cmp
fiadds
loope
xor
insb
iret
pop
es
add
xchg
hlt
dec
mov
insb
xchg
inc
and
fcompl
inc
xchg
xchg
nop
adc
enter
fidivrs
shlb
push
push
push
cmp
shrb
xor
leave
mov
pop
cmp
jbe
and
ljmp
movsb
sub
adcl
push
adc
jne
sbb
imul
fildll
test
sub
lret
loop
or
mov
jge
shl
adc
and
push
sub
pop
es
aad
nop
xor
cli
jnp
push
xor
push
dec
divb
rcl
mov
stos
scas
in
mov
cwtl
push
mov
mov
cli
call
pop
stos
xlat
mov
push
aas
inc
push
sub
std
and
outsl
lret
out
std
sbb
movsb
aas
mov
data16
adc
into
dec
fistps
mov
dec
mov
fnstsw
adc
adc
mov
imul
cmp
xor
addr16
js
cmp
or
pusha
lahf
call
aas
xchg
popf
nop
sbb
repz
add
mov
and
mov
mov
addl
rcrb
pushf
mov
pop
jns
or
test
and
xchg
and
out
add
or
imul
pushf
not
scas
pop
xchg
xchg
loope
into
ljmp
xor
daa
push
test
fidivl
xor
idiv
push
lret
mov
lcall
jns
fwait
and
idivb
adc
xor
xchg
popa
sbb
and
dec
into
xor
inc
sahf
mov
mov
adc
mov
sahf
and
or
mov
adcb
pop
mov
and
test
fcompl
lods
xor
and
cmp
push
mov
pcmpeqb
mov
mov
sti
mov
add
dec
add
negb
sub
inc
jle
mov
fcoms
inc
mov
fistpl
pop
pop
sbb
push
test
fcomi
aad
and
pop
mov
roll
ret
mov
pop
add
mov
dec
shll
dec
ror
xchg
pop
xchg
insb
aam
mov
pop
dec
cs
sbb
pop
mov
sahf
andl
jno
mov
lcall
push
cmp
sarb
scas
into
lods
cmp
test
add
mov
jns
leave
or
and
cli
xchg
sub
jecxz
les
dec
insb
adc
mov
cmp
and
mov
push
xchg
pop
or
sti
bswap
jno
inc
jns
sahf
enter
andb
shl
mov
push
mov
mov
movsl
test
test
sub
sahf
or
or
sbb
pop
test
inc
jne
inc
sbb
scas
sar
ja
into
inc
out
cmovbe
sbb
roll
sub
xchg
out
xchg
and
stos
lea
fbstp
or
sub
adc
xlat
mov
and
ret
push
fcmovbe
repnz
sahf
and
xchg
std
xor
sbb
push
add
imul
xor
cmp
int
jge,pt
inc
mov
mov
fisubl
dec
dec
and
cmp
xor
pop
jbe
sarl
xchg
mov
fcomp
sub
jg
sub
mov
loope
push
cmpsl
in
aad
jnp
mov
add
dec
jae
dec
sbb
ret
jbe
sub
ds
insb
xlat
add
pop
mov
loop
in
push
add
mov
pop
xor
jbe
stos
jecxz
sub
imull
xchg
repz
ficoml
shl
fisubrl
lods
and
pop
iret
je
mov
clc
cwtl
mov
lods
adc
pop
fnstcw
repz
lds
jb
or
insl
pop
js
fwait
lods
pop
ret
call
xchg
pop
pop
dec
das
test
lahf
fs
pop
adc
pop
fcoms
arpl
movb
inc
pop
dec
sub
mov
test
jecxz
pop
flds
push
inc
aas
les
push
ljmp
scas
scas
decl
mov
out
leave
sbb
pop
mov
out
outsl
adc
push
inc
fstpl
sti
push
call
call
sbb
sbb
lahf
mov
push
mov
shrb
pop
inc
fcomps
mov
mov
in
mulb
xchg
testb
outsb
xor
inc
into
aam
push
dec
mov
inc
and
test
inc
popl
jg
in
insb
inc
cld
inc
cmp
insb
jmp
inc
cld
rep
addr16
test
mov
repnz
outsb
sbb
hlt
std
int3
roll
inc
addr16
cmpsl
aad
mov
test
inc
loope
sbb
adc
cmp
cmp
rolb
fnstcw
notl
lret
movsl
lcall
lea
dec
fs
push
out
xchg
int3
fisttpll
out
loope
aad
cmp
leave
rclb
loop
es
jp
mov
aas
test
outsl
cmp
in
adc
pop
inc
pop
insb
movsl
mov
sbb
push
or
push
jle
xchg
stos
pop
call
icebp
pop
inc
test
cmpxchg
iret
cmp
xchg
arpl
mov
inc
les
inc
test
sbb
shl
int3
in
and
add
pop
loopne
shrl
sub
lods
jo
xor
in
insl
cs
sar
cmc
je
dec
pop
adc
or
inc
mov
jbe
push
icebp
scas
divl
and
sahf
cmp
push
shlb
pop
mov
and
fmull
sub
xor
daa
sahf
lea
ret
sub
lods
push
mov
cmc
leave
in
sbb
call
cmp
pop
std
lods
mov
xor
push
scas
sbb
fwait
dec
sub
mov
or
out
pop
mov
or
imul
push
and
cwtl
mov
xchg
insb
cli
jecxz
es
cld
repnz
loope
daa
mov
test
mov
mov
push
nop
push
or
in
sahf
neg
test
xor
pop
aas
daa
call
repnz
add
insl
out
xor
add
adc
into
loopne
jge
push
nopl
cmp
sbb
fcomp
push
test
pcmpgtd
in
and
push
cld
and
out
pop
and
movsl
jns
js
test
inc
test
loop
movsl
jmp
lret
jp
aaa
pop
pop
push
mov
sbbl
xchg
rolb
and
xor
rorb
sub
sti
test
add
shlb
cltd
xor
mov
andb
movsl
test
sub
pop
out
jb
dec
loopne
mov
repnz
jb
mov
dec
mov
mov
sahf
das
cltd
pop
xchg
mov
pusha
push
xchg
add
dec
je
or
aaa
lcall
ret
out
xor
jae
xchg
push
mov
xchg
insb
movsl
push
in
sbb
in
cltd
mov
nop
xor
mov
and
fadd
pop
lods
outsb
inc
lret
scas
cmp
lea
jne
sub
ret
arpl
mov
lcall
xchg
mov
dec
xor
in
sbb
sub
icebp
das
sahf
cmpsl
shll
jns
dec
ror
imul
inc
and
or
hlt
je
mov
das
hlt
add
idiv
out
pop
xchg
pop
add
sbb
and
arpl
fcmovb
inc
fmull
and
xchg
sahf
fcoml
jae
mov
adc
bnd
pop
sbb
xor
sub
pop
lock
mov
stc
cmp
jne
aad
dec
xlat
or
call
jmp
adc
cmpsl
jl
xor
jae
sti
pop
mov
and
mov
aas
fmul
sub
sbb
inc
stc
mov
movhps
cwtl
xchg
mov
mov
push
pusha
imul
jecxz
es
cmpsb
repnz
mov
or
xchg
in
dec
xchg
test
jns
xchg
jbe
xor
hlt
rcrb
arpl
cmc
test
leave
incl
push
jecxz
add
jae
jmp
mov
mov
add
fsub
push
adc
dec
movsb
cmp
add
js
push
test
jl
and
xchg
xchg
popf
mov
lock
movsb
xchg
cltd
push
js
sbb
leave
and
fsubrl
and
in
mov
into
call
stc
scas
mov
jne
icebp
xchg
sub
sti
pusha
shl
or
lret
adc
or
mov
sahf
arpl
mov
jae
dec
and
jmp
xchg
test
mov
dec
add
pop
mov
mov
scas
jl
loop
or
idivb
xor
enter
pop
leave
adc
pushf
adc
popa
mov
das
pop
lea
pushf
and
jl
not
pushf
pop
or
hlt
jg
fmull
jne
mov
cmp
mov
cmp
inc
add
sbb
pop
mov
pusha
leave
mov
xor
mov
lods
sub
lahf
dec
pavgb
adc
or
jb
cld
xor
inc
sub
nop
addr16
stc
sbb
xchg
scas
cmp
addr16
mov
or
inc
mov
fadd
mov
mov
mov
and
pusha
fdivs
cmp
mov
jb
and
lods
fs
sbb
ret
ljmp
adc
jno
jl
mov
sbbb
popa
cmpsb
mov
iret
push
mov
insl
dec
ffreep
dec
mov
aaa
stos
jb
or
sub
push
sbb
pusha
movsb
pop
outsb
adc
xor
add
fcmovbe
mov
dec
add
mov
insb
test
sub
daa
sti
stos
dec
xor
outsb
fcompp
mov
pop
ljmp
dec
test
add
nop
frstpm(287
ja
cmovne
lahf
in
imul
scas
dec
into
adc
pop
pop
pop
add
inc
cmp
sub
and
leave
loope
and
testb
xor
or
push
jecxz
movsb
cmc
inc
and
lea
ret
cs
faddl
in
jge
mov
call
decl
ret
in
into
rorl
push
fs
push
xchg
cmp
leave
and
jl
pusha
fcmovnb
push
pop
adcl
cmp
mov
ss
push
and
pop
adc
lahf
or
jg
add
ds
mov
out
fs
sbb
icebp
xchg
shrl
aas
mov
mov
jecxz
push
fimull
das
mov
dec
stos
xchg
rclb
mov
loope
push
pop
shl
cwtl
das
outsl
iret
jge
jb
xchg
mov
shrl
adc
testb
mov
hlt
imulb
pop
popa
test
sub
adc
lods
dec
xchg
sbb
or
gs
pop
ret
pop
jb
inc
jle
mov
jo
and
jmp
mov
scas
scas
out
dec
scas
xor
sbb
call
iret
aaa
dec
inc
dec
push
and
cs
test
and
loope
sbb
je
push
mov
xchg
add
adc
addl
cltd
add
lds
cmpsl
adc
xor
jle
bound
cmc
dec
in
ret
inc
outsl
int
mov
sbb
lods
lods
sbb
cmp
mov
pop
mov
lods
add
mov
add
add
es
cwtl
or
loopne
jne
cs
in
jns
fsubl
call
mov
int
lods
pushf
ret
fbstp
and
cmp
int3
push
shll
mov
xchg
jbe
xchg
inc
cmpsb
push
mov
xor
add
adc
loopne
lock
shlb
mov
xchg
jbe
xchg
inc
cmpsb
push
mov
xor
add
adc
loopne
jo
inc
shlb
and
push
andb
pusha
xchg
inc
cmpsb
push
mov
xor
add
adc
loopne
lock
and
mov
xchg
mov
xchg
ljmp
test
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
into
cmp
insb
out
sbb
or
pop
out
or
dec
js
cmpsl
outsb
lods
jle
push
stc
push
add
fdivrl
int3
into
cmp
sub
sbb
or
jl
insb
scas
pop
mov
lods
sbb
in
fdivrl
int3
into
lcall
mov
scas
push
mov
sbb
scas
jge
pusha
scas
push
test
js
insl
popf
dec
mov
jae
xchg
and
aaa
test
fisubrs
loopne
and
inc
aas
out
sbb
rep
imul
mov
inc
jo
jecxz
sti
fdiv
jmp
rolb
inc
jbe
rclb
push
pop
dec
mov
adc
scas
seta
dec
or
or
sbb
mov
pop
push
pushf
rorl
dec
jecxz
pop
lock
cmp
xor
stos
roll
xchg
insl
scas
popf
mov
sti
jle
idivl
sbb
into
sub
ret
out
test
xor
push
sub
dec
push
out
xor
xchg
dec
cmp
xor
cmpsb
nop
mov
or
push
sahf
insb
scas
pop
mov
add
sahf
jle
push
rcrb
les
decb
jo
pusha
loop
xlat
add
sub
or
lcall
or
mov
push
int
lods
push
outsl
fwait
pusha
enter
scas
xor
pop
fldcw
into
cmp
mov
mov
pusha
mov
sahf
insb
scas
pop
mov
lods
outsb
pushf
jle
push
cld
push
in
fdivrl
int3
into
cmp
sub
sbb
or
jl
insb
scas
pop
mov
lods
outsb
pushf
jle
push
cld
push
in
fdivrl
int3
into
cmp
jp
popa
push
sbb
fistl
stos
and
adc
popa
sbb
mov
mov
inc
sub
mov
sub
cwtl
test
pop
add
and
adc
lret
add
stc
out
jbe
mov
sarb
imul
cmp
fcmovnbe
je
mov
or
sti
inc
cwtl
xor
xchg
sbb
inc
cld
add
jnp
mov
out
lea
test
cmc
repnz
or
push
mov
sbb
in
aad
adc
and
nop
sahf
fmulp
sahf
mov
xlat
xor
cwtl
sub
lahf
ja
jns
dec
push
mov
mov
adc
dec
imul
dec
and
scas
bound
sbb
adc
mov
cmpsl
movsl
mov
imul
xchg
rep
and
divl
jl
or
xchg
arpl
inc
xchg
sub
mov
or
int3
sub
jb
push
xchg
and
dec
xchg
inc
xor
clc
addr16
lahf
cld
and
mov
imul
jle
mov
and
adcl
gs
das
xchg
idivb
lods
in
mov
insb
decl
sbb
inc
inc
or
daa
xor
cmp
loop
jns
sahf
pop
mov
pop
iret
sahf
negb
push
sbb
fdivrl
aas
sbb
cmp
dec
mov
scas
mov
neg
in
into
mov
shrb
inc
xchg
negl
xor
fisttps
insl
sbb
in
xor
icebp
sub
mov
out
outsl
adc
ret
inc
mov
iret
mov
pop
jg
and
inc
mov
scas
pop
daa
push
mov
loope
repnz
push
pop
fiadds
cmp
ficoml
sti
adc
push
jmp
adc
add
sbb
movsl
js
les
rorb
or
push
dec
es
push
jecxz
mov
repnz
aad
jae
mov
nop
sbb
xor
in
pop
sub
test
mov
mov
ficoml
call
lock
sub
fst
xchg
ret
aam
test
mov
xor
inc
sbb
lret
lock
sbb
sub
sbb
scas
add
andb
xlat
jecxz
loopne
xor
inc
inc
std
hlt
lcall
or
pop
in
and
and
rcl
imul
jp
push
fs
or
cmp
jmp
cmp
nop
hlt
jmp
cli
jl
mov
call
loopne
ror
cs
fildll
xchg
jnp
in
aad
sub
pop
movsl
mov
add
scas
inc
jl
jne
jb
push
xchg
lods
sub
pop
xchg
sub
mov
add
sahf
push
or
fwait
iret
cli
xor
push
movsb
out
jb
or
or
lods
mov
iret
sahf
jb
pushf
lea
mov
loopne
mov
lea
dec
inc
xchg
gs
lea
push
inc
inc
stos
sbb
cmovl
sbb
sbb
testl
cwtl
std
dec
pop
pushf
mov
or
js
fmul
test
push
shlb
jae
add
mov
add
ret
jnp
and
push
ja
fcmove
adc
push
cmpl
lds
or
in
ret
test
or
or
lods
lods
sub
movsl
inc
cmp
cmp
shl
repnz
insb
pop
push
enter
mov
fwait
or
or
inc
sbb
mov
mov
outsb
xchg
xor
mov
scas
ljmp
scas
into
adc
lods
outsb
lea
dec
enter
mov
outsb
xchg
aad
add
scas
fdivl
ret
add
js
sbb
movsl
push
fprem
jnp
mov
fldl2e
xchg
shll
aas
enter
add
jp
push
or
enter
es
hlt
push
mov
bound
nop
xor
xlat
fidivrl
out
add
push
cmp
xchg
adcl
icebp
stc
mov
enter
xor
pop
jae
loop
lret
adc
insl
xor
fucomi
mov
xchg
adc
or
push
scas
pop
pop
iret
popa
imul
push
outsl
dec
sahf
or
add
xchg
dec
out
push
lret
je
repz
mov
lret
ja
xor
aaa
xor
jae
clc
imul
add
lods
dec
cmpsb
xor
andl
test
dec
xchg
sub
lahf
mov
push
int
inc
xor
jmp
mov
cmp
add
pushl
push
cmpsb
andb
inc
addl
ss
ljmp
into
jmp
punpckhwd
out
fwait
mov
in
sub
mov
sbb
fldenv
sahf
inc
pop
dec
cmp
arpl
or
xchg
rcr
or
aaa
ret
pushl
sub
mov
dec
mov
and
cltd
add
ficompl
and
loopne
arpl
test
lods
cwtl
inc
mov
js
mov
ss
sbb
xor
js
fwait
mov
arpl
pop
sub
xor
pop
in
pushf
sub
movl
push
xchg
jmp
pop
or
push
inc
pushf
lret
dec
adcb
xchg
insb
mov
jmp
push
jp
cmp
andl
rorb
jo
pop
enter
lea
imul
bound
call
pop
movsl
je
lock
pop
push
pushf
xchg
inc
imulb
push
int
jge
ljmp
xchg
or
fisttpl
rclb
xor
xor
and
pop
or
pop
rcrl
jl
inc
mov
ficoml
call
pop
cmp
jnp
mov
pop
cmpsb
orl
mov
adc
aaa
xor
cmp
je
lcall
lret
jo
das
es
push
xchg
xchg
xlat
cmp
jbe
or
or
push
dec
sub
dec
fnsave
out
rclb
enter
and
daa
push
xor
xchg
mov
add
pop
test
sub
cmp
push
outsb
repz
cmpl
pop
and
ficomps
cld
into
and
xchg
sub
pop
xchg
dec
adc
fnstcw
fmul
pusha
paddd
xor
push
pusha
sub
orb
movsb
xor
ret
jns
mov
std
adcb
sti
adc
xchg
jns
es
and
jb
mov
icebp
aam
repz
dec
subl
and
ror
popf
loope
arpl
mov
xchg
sub
sbb
sbb
call
enter
or
outsl
cli
inc
jno,pn
scas
gs
in
push
push
cmp
sti
rcrb
xchg
dec
push
and
push
mov
dec
cwtl
cld
add
adc
mov
testb
push
mov
test
jb
rolb
in
int3
out
adc
nop
test
cmp
or
bound
int
xchg
cmp
jmp
in
subb
sbbb
cmp
test
enter
icebp
data16
push
push
dec
aam
jne
adcb
outsb
push
and
inc
fsts
fwait
and
dec
test
sub
into
bound
outsb
or
icebp
and
ss
js
mov
sub
mov
test
rcr
push
mov
inc
bound
inc
cld
xor
push
jmp
pop
inc
push
shr
pop
sbb
xchg
mov
mov
and
or
dec
lret
add
mov
aas
dec
xchg
mov
fcomip
inc
ss
push
test
loope
pop
push
in
jge
mov
iret
cmp
jns
xor
inc
sub
shl
sahf
jecxz
push
xchg
loopne
adc
inc
mov
jp
mov
add
sub
push
arpl
lods
and
clc
push
mov
jge
cmpsl
jbe
cmc
xor
sub
adc
cmpsl
add
call
fildl
jae
fldt
cld
push
hlt
stos
cwtl
xor
repnz
shlb
jns
enter
flds
cwtl
sub
daa
pusha
cld
xchg
jp
mov
jns
dec
movsb
or
cltd
mov
xchg
sbb
cli
xorb
arpl
xor
scas
int
jns
aas
mov
sub
jecxz
ret
les
das
mov
imul
aaa
leave
or
fcoml
test
ja
push
les
xor
adc
ss
mov
pusha
pop
add
inc
in
xor
outsl
mov
adc
leave
and
fcomi
pop
dec
jns
cmpb
pop
jo
out
xchg
push
sub
sar
cmp
repz
inc
cmpsb
into
jl
jge
mov
xor
movsl
jbe
rcll
bound
push
inc
bound
jecxz
xchg
add
xchg
mov
cmc
lret
cmp
or
pop
xchg
iret
aam
imul
gs
outsl
outsb
pop
stc
xor
lret
lds
std
std
push
loop
sbb
enter
and
add
pushf
fwait
mov
add
mov
sbbl
icebp
test
sbb
adc
xchg
inc
push
repz
mov
inc
cs
fdivs
jno
jmp
jnp
jmp
cmp
mov
push
stos
shlb
cmp
xorb
mov
mov
sahf
add
jge
aas
mov
outsl
mov
adc
mov
loopne
jmp
xchg
sti
gs
push
imul
popf
daa
jg
icebp
cmp
test
jne
loopne
add
mov
rclb
pop
stos
jmp
inc
es
sub
das
rcr
jne
xor
or
push
movsl
push
paddq
lds
dec
mov
loope
iret
test
dec
call
out
mov
or
addr16
or
mov
ljmp
dec
sbb
jno
stos
jo
roll
mov
out
jnp
or
add
cmpsl
iret
push
dec
lret
les
xchg
das
mov
fwait
pop
push
push
rolb
jbe
push
mov
lahf
enter
jmp
fstpt
fidivs
jnp
jo
test
aad
mov
cmp
into
mov
add
dec
pop
fsubrs
and
test
dec
or
push
nop
in
shlb
scas
fcoms
out
jb
vunpcklps
insl
mov
negb
inc
adc
jmp
and
xchg
test
shlb
jns
mov
ret
jne
mov
scas
dec
lcall
test
cld
dec
fdivr
out
or
ret
xor
fwait
in
push
xor
adc
add
xchg
xor
mov
sub
int
lods
clc
cs
mov
rol
xor
xchg
jp
cmpsl
stc
or
testb
pusha
jp
mov
sarl
bound
push
sbb
loope
imul
mov
out
out
leave
fisubl
stos
pop
add
fidivrs
mov
or
mov
jge
cmpl
inc
fists
stos
in
test
and
dec
in
out
aas
push
lods
iret
mov
or
adc
inc
mov
icebp
and
mull
jae
cmpsl
xchg
cld
jp
hlt
fcomps
xor
jnp
inc
fsubs
pop
jmp
jp
jb
clc
into
dec
in
fcom
enter
push
jmp
jl
push
dec
mov
dec
sub
jb
sahf
ss
mov
xchg
add
mov
fucomp
gs
into
sub
lods
lret
jecxz
mul
ja
out
sub
pusha
mov
mov
or
add
cmc
mov
jmp
outsb
arpl
pop
cmp
inc
push
sbb
dec
dec
hlt
jbe
and
push
xchg
cwtl
xchg
jne
xchg
mov
sti
xchg
inc
push
and
push
mov
sbb
sub
mov
test
sbb
jno
in
adc
lock
es
mov
or
sub
movsb
cmpsl
loop
mov
cmp
xor
lods
out
and
sbb
add
in
insb
pop
sbb
sti
xchg
cwtl
xchg
movsb
xor
jnp
push
inc
mov
inc
lahf
lret
jmp
in
sub
adc
mov
leave
and
cs
rolb
in
stos
dec
int3
push
ficoms
call
jo
lods
push
push
int3
add
mov
loope
or
ret
xor
pop
and
adc
cmp
lds
jecxz
jecxz
cs
mov
repnz
mov
mov
mov
aad
movb
les
mov
jmp
lahf
mov
fmul
jns
fcoms
adc
lahf
addb
push
test
push
push
cli
sbb
divl
xchg
mov
cltd
mov
popa
inc
outsb
mov
xor
inc
aad
int3
pusha
push
inc
add
outsl
outsl
loopne
mov
fstpt
fiaddl
shrb
dec
cmc
mov
inc
fadds
aaa
and
jp
aam
push
mov
cmpsb
je
push
push
inc
test
sub
mov
shl
movntps
cmp
push
mov
pop
sbb
mull
mov
test
inc
sub
mov
and
pushf
inc
fldl
pop
test
out
repnz
xorb
scas
inc
insl
and
adc
jnp
sbb
ror
ficoms
clc
insl
or
dec
push
jmp
add
shr
sbb
mov
and
or
dec
or
mov
jg
pushf
mov
sahf
or
push
aam
mov
sub
subb
sub
push
sbb
cmpsb
cmc
loop
lcall
stc
cmp
add
mov
fwait
add
sub
jo
xchg
mov
xchg
xor
pop
stc
adc
test
jl
or
ljmp
push
pop
mov
jno
fsubrl
loopne
xchg
cmp
mov
adc
add
xchg
push
push
ret
push
test
push
xor
ds
pop
xchg
add
push
jge
mov
les
xchg
or
mov
into
mov
out
jnp
pop
fisubrl
clc
push
imul
xlat
mov
push
and
test
mov
cmp
dec
into
ja
pop
adc
data16
sbb
pop
movsl
mov
dec
or
rep
add
outsb
loope,pn
mov
test
push
cli
shll
sahf
push
cwtl
cmc
ret
hlt
mov
mov
or
cmp
stc
out
daa
push
xor
loopne
shlb
cmp
push
pop
lods
enter
pop
mov
leave
jb
push
push
dec
jmp
jno
fimuls
out
into
testl
inc
aas
mov
mull
daa
jno
fwait
lods
jp
jp
sub
ljmp
dec
pop
mov
jo
dec
imul
mov
adc
pop
and
rcrb
dec
jp
xchg
fidivs
dec
clc
sub
add
and
rclb
lahf
xor
movsb
sbb
in
daa
cld
or
cmpsl
pop
aaa
cmp
repz
xchg
out
mov
add
xchg
fdivr
add
mov
jle
repz
jo
in
jno
push
xchg
pop
push
inc
mov
lock
ret
fnsave
sbb
sub
sub
icebp
xchg
movsl
or
xor
es
xor
pmullw
mov
aam
dec
sub
xor
dec
xor
xlat
test
sbb
jecxz
push
dec
dec
ret
xchg
sub
in
mov
pop
cmp
inc
mov
andb
lahf
inc
repnz
movsb
xchg
popf
push
xor
pop
mov
in
mov
mov
out
add
xor
mov
xor
sarb
les
in
std
cvtpi2ps
xchg
and
jnp
or
sub
fldl
lret
sbb
mov
push
mov
push
ficompl
cmp
repnz
filds
sbb
inc
insl
adc
enter
push
pop
ret
in
cmp
push
pop
dec
pop
lods
jmp
mov
pop
outsb
mov
shll
ja
lret
fnsave
inc
cmp
pushf
arpl
lret
xor
xchg
xchg
es
jb
insl
ja
cmp
clc
insb
lods
push
call
pop
fs
cmp
shrl
es
je,pn
outsl
cmp
loop
movzbl
addl
adc
pop
mov
xchg
sbb
add
ss
inc
mov
adc
int
cwtl
rcrl
mov
and
jg
mov
pop
xrelease
mov
mov
idiv
inc
roll
push
out
inc
iret
ljmp
addr16
cmp
mov
lahf
into
jae
dec
or
pop
lock
or
xor
movsb
xlat
mov
stc
outsb
or
fstpt
ret
cmpsb
xchg
push
adc
cmp
ss
loopne
mov
mov
sti
jmp
mov
pop
ja
push
std
in
xchg
addb
enter
aas
inc
adc
xor
mov
pop
ljmp
and
inc
sub
mov
ss
jbe
xor
daa
mov
shll
loopne
fstpt
mov
aam
dec
cmp
repnz
push
sub
lcall
mov
addr16
dec
cmp
sbb
mov
pusha
sbb
cld
cmp
xor
popf
arpl
mov
stos
mov
or
ss
sbbl
leave
add
mov
xor
push
arpl
dec
in
xchg
push
lods
xchg
add
mov
jl
daa
mov
rcrb
jl
jle
mov
mov
rol
cmova
rolb
enter
out
adc
xchg
inc
es
stc
add
jmp
insb
jbe
push
repz
loope
mov
out
and
inc
push
lea
xchg
push
xchg
xchg
cmp
fistl
or
lret
mov
sarl
nop
adc
clc
daa
jmp
xchg
fadds
sbb
jo
mov
pop
xchg
inc
sarl
aam
stc
mov
mov
cmpsb
or
adc
leave
jmp
add
sarl
and
mov
dec
aad
xor
into
mov
mov
popa
jge
inc
in
mov
xor
jg
xchg
pusha
out
aas
sbb
pop
push
jge
test
cmp
je
data16
arpl
push
push
mov
add
mov
mov
repnz
sbb
movsl
cli
xchg
mov
cmpsb
mov
push
mov
aaa
stos
cmc
jo
mov
and
inc
lods
mov
pop
xchg
dec
cld
adc
dec
loope
sbb
lret
out
inc
daa
mov
push
inc
xchg
push
mov
mov
sub
ror
inc
mov
out
ja
sahf
in
cwtl
leave
jg
push
jle
push
xchg
fs
cltd
es
xchg
out
aaa
imul
mov
mov
andb
adc
pop
fstps
jg
in
adc
aas
das
imul
sbb
and
pandn
push
shrl
adc
mov
repz
pop
les
jle
mov
ficompl
cwtl
dec
aaa
loopne
es
gs
fsubrs
push
leave
mov
dec
dec
xchg
push
jmp
cwtl
pushf
std
mov
or
or
mov
cmp
dec
lret
shrb
pop
xchg
xchg
pushl
adc
ds
sti
insb
mov
xor
lret
xchg
xchg
out
mov
mov
mov
addr16
sbb
int
mov
mov
sub
and
dec
mov
das
cmp
dec
cmpl
fldenv
out
mov
shl
pop
add
xor
pop
mov
loopne
call
inc
out
jp
jns
sub
arpl
mov
xchg
xor
fsubrs
insl
aam
insb
dec
add
pusha
divl
push
sub
div
je
rorl
mov
ss
shrl
lock
cmp
icebp
leave
inc
fldt
fnstenv
fidivs
adc
scas
mov
out
mov
sub
jbe
pop
hlt
fwait
insb
mov
icebp
xchg
jecxz
or
sbb
insl
daa
movsb
and
cmp
xlat
out
jns
lcall
popf
jnp
sbb
decb
test
adc
mov
leave
insb
jmp
and
loope
in
sub
add
sbb
pop
pushf
cmp
outsl
stos
dec
aas
fiadds
jns
fisubrl
je
or
lods
enter
inc
sahf
mov
std
add
jb
xchg
subb
push
sub
push
dec
or
cld
ja
insb
ficomps
aas
mov
mov
pop
lret
mov
pop
pop
xchg
dec
das
out
ret
std
push
jo
cmp
push
std
clc
cmc
out
insb
ret
xor
in
out
icebp
imulb
cmp
fimuls
jmp
xchg
xor
enter
dec
enter
aad
clc
sti
dec
sub
sbb
or
jl
insb
scas
pop
mov
lods
outsb
pushf
jle
push
cld
push
in
fdivrl
int3
into
cmp
sub
sbb
or
jl
insb
scas
pop
mov
lods
outsb
pushf
jle
push
cld
push
in
fdivrl
int3
into
cmp
and
add
or
pop
mov
test
pushf
jle
push
clc
push
in
cs
sub
fcomp
enter
dec
mov
scas
fdivrl
push
les
xchg
shll
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
pop
inc
dec
jno
popa
insl
adc
sub
popf
arpl
icebp
std
loope
xchg
pushf
orl
jge
insl
adc
and
ffree
int
cld
loope
sar
orl
jecxz
mov
or
mov
loop
cltd
cwtl
test
in
std
fidivrl
adc
or
or
xchg
pop
repnz
adc
clc
mov
movsl
imul
or
lods
cmpsl
daa
int
xor
clc
outsb
fst
mov
pop
cld
scas
dec
add
add
ja
fcoms
ret
cmp
adc
xchg
ror
sti
loope
andl
popa
shrb
pop
xchg
push
add
shlb
shll
cmp
push
mov
mov
mov
cmp
in
xchg
mov
mov
and
icebp
add
dec
aad
dec
scas
add
pop
jo
lahf
gs
push
call
movsb
loop
mov
fnsave
pop
pop
dec
jno
popa
insl
cmc
sbb
xchg
xchg
shr
fstps
mov
xor
cmp
sub
pop
outsl
jns
pop
and
lods
xchg
aam
scas
test
fmul
enter
and
xor
fs
les
add
lcall
fcomp
loopne
cmp
sbb
adc
xor
ror
std
loope
xchg
popf
orl
jno
popa
insl
adc
and
icebp
std
loope
xchg
popf
orl
mov
mov
mov
dec
push
xchg
jge
mov
mov
hlt
stos
lcall
xor
cmp
cmp
std
je
and
mov
cmp
sti
mov
jmp
shl
xor
jb
cmp
sub
dec
ret
inc
orl
jg
cmpsb
into
test
xlat
cwtl
xor
xor
sarb
insl
and
lret
nop
scas
in
push
push
xchg
inc
scas
xchg
fmul
pop
cli
push
mov
out
sub
mov
cmpsl
mov
cmpb
les
push
dec
mov
jle
pop
jge
ds
xor
lahf
clc
inc
dec
inc
xor
xchg
fwait
les
add
mov
mov
aad
pushf
aad
aaa
in
sub
cmp
dec
pop
sub
test
or
data16
movl
aam
stc
jmp
cs
rcll
push
imul
cmp
ds
cmp
ja
mov
ja
jmp
jg
cmp
daa
jge
mov
pop
cltd
add
or
mov
icebp
jle
jle
jp
mov
or
push
push
inc
ret
movb
lret
shll
and
and
cmp
sarb
push
xor
mov
inc
ret
iret
jo
jle
push
fbstp
fcomip
or
test
inc
lahf
addl
dec
mov
and
jne
cmp
sub
add
jp
and
outsb
lret
sbb
add
arpl
cmp
pushf
hlt
sub
clc
push
mov
movsl
aaa
rcll
adc
lret
pushf
cltd
idivl
jmp
jle
pop
wrmsr
es
rcpps
js
or
sysret
outsb
popa
adc
cltd
cmp
dec
in
pop
or
insb
xchg
dec
jle
dec
les
mov
pop
cmp
add
dec
adc
xchg
dec
mov
shrl
mov
dec
mov
gs
in
sbb
xchg
jnp
in
test
push
sub
aad
es
in
call
testl
sti
rorl
fistpll
cmp
pop
mov
std
adc
push
pop
cmp
rorb
leave
pushf
push
mov
xor
adc
pop
pop
jecxz
sub
fistpl
popf
lock
add
movsl
cs
movsb
jg
adc
fwait
cli
pop
fmull
or
es
clc
psadbw
mov
cld
iret
stos
outsb
adc
lcall
xchg
jmp
stos
fxtract
scas
mov
pop
fs
push
cld
xchg
sarb
out
aaa
add
pop
in
test
outsb
popf
and
sub
xor
jne
push
into
xchg
dec
in
mov
pop
add
sbb
sub
inc
add
ss
inc
push
fstpt
imul
in
jae
cmc
pop
mov
pushf
adc
imul
aam
pop
mov
add
xor
lret
lods
mov
push
pop
out
xchg
faddp
and
enter
jbe
adc
popf
pop
shll
aam
stos
pop
sbb
mov
cs
mov
jle
push
push
icebp
pop
fmull
cld
mov
push
xor
scas
in
mov
test
xchg
pop
loope
inc
pop
loop
add
lret
cmp
daa
dec
push
test
mov
dec
pop
pop
andb
xchg
sub
mov
cld
dec
pop
dec
or
pop
insl
in
lods
mov
out
insb
add
push
pop
icebp
cwtl
int3
inc
cli
popa
iret
fs
subb
das
xchg
sbb
outsb
cmpsb
jne
aaa
ds
xor
lret
mov
adc
leave
pop
sub
xchg
mov
dec
push
or
fwait
sti
std
incb
lock
add
subb
pop
cltd
inc
insl
sbb
ret
aaa
mov
daa
or
mov
sbb
xchg
mov
stc
je
xor
std
pusha
aaa
fs
xor
mov
jge
and
pop
pop
ret
repz
push
daa
mov
jp
xor
pop
mov
and
jmp
cmpsl
sbb
mov
fwait
test
cmpsb
orl
push
movsb
lret
push
cmpsb
fisubl
push
xchg
mov
mov
adc
add
negl
mov
jb
mov
mov
loop
test
sti
lock
mov
fstps
xchg
add
mov
xor
in
xchg
andb
or
push
ja
in
insl
xchg
shll
push
ret
dec
out
icebp
fmull
rcll
jle
inc
jmp
aas
xor
int
stos
dec
xchg
jns
mov
sub
push
xchg
inc
call
cmp
add
cltd
or
mov
rolb
pop
nop
in
sub
mov
flds
test
popa
inc
sti
jae
pop
icebp
push
add
arpl
popa
in
xchg
and
sub
popf
sbb
pop
pop
push
inc
cmp
push
mov
or
jl
pop
push
inc
pushf
ljmp
sbb
dec
inc
jp
outsb
jmp
movsl
outsb
movsb
or
push
sub
and
movsb
roll
aad
ss
push
cmc
je
test
mov
mov
incb
inc
sarl
aas
ret
sbb
xchg
lret
pop
push
jmp
dec
mov
iret
test
aas
sbbl
adc
into
lock
mov
call
push
nop
jg
outsb
xor
adc
pop
cmovns
jae
push
jno
jo
fbstp
scas
push
mov
incl
adc
outsl
pop
imul
pushf
inc
test
mov
gs
scas
dec
shrb
in
repnz
mov
jl
push
aaa
push
push
idivl
scas
dec
cmp
mov
or
aaa
cld
gs
or
xchg
loope
out
inc
in
mov
int
dec
in
mov
outsb
stos
sbb
mov
jmp
push
push
scas
jne
repz
cs
sub
or
sti
xor
xchg
in
jmp
int
dec
inc
pusha
pop
mov
cli
lea
xor
call
js
pop
mov
les
push
out
push
loop
not
inc
xor
jle
xor
leave
xor
inc
dec
stc
aas
sbb
xor
mov
jns
push
mov
adc
arpl
inc
mov
lds
int
adc
inc
cld
or
in
sahf
inc
mov
les
push
mov
jbe
lds
sub
int
gs
xchg
scas
mov
inc
pop
mov
adc
mov
mov
adc
pop
inc
lods
les
or
push
fld
cmc
xchg
pop
int3
aaa
fstp
lea
xchg
add
iret
inc
mov
loope
dec
push
in
leave
ret
sbb
mov
mov
into
leave
push
test
orl
inc
adc
shrl
sahf
in
outsb
inc
push
fisttpl
jmp
ja,pt
cmp
xchg
out
sahf
fs
js
pusha
xor
adc
xorl
std
mov
and
outsb
fcmovu
jp
test
shr
and
outsb
ss
les
arpl
jno
insl
or
pushf
sarb
ret
ds
add
push
insb
icebp
daa
jb
jmp
add
fidivrs
dec
cmp
test
fwait
xorb
dec
xchg
aas
push
adcl
int
out
cwtl
mov
cmp
fsubrl
fimull
cmp
clc
in
dec
mov
jns
mov
out
dec
repz
push
mov
imul
sahf
fldt
jns
and
stos
mov
adc
cmp
nop
or
das
pop
sbb
add
scas
xchg
mov
mov
mov
repz
fldenv
movsb
in
clc
xchg
test
lcall
in
or
repz
insl
lds
mov
aaa
push
xor
lock
test
lods
mov
lock
jae
pusha
mov
xchg
insb
pop
pop
sub
fisubl
mov
cmp
lahf
mov
addr16
negb
pushf
je
xchg
leave
sahf
mov
shl
xchg
mov
in
lahf
vmaxpd
pop
test
mov
daa
push
js
mov
jmp
xchg
mov
mov
push
stc
pop
arpl
xchg
or
mov
xor
aam
pushf
inc
sub
les
mov
mov
and
cmp
cld
mov
xor
fsubrp
iret
test
xor
pop
rcr
les
add
xor
test
inc
jl
in
and
aam
lock
fistl
sti
out
adc
jbe
cmpsl
movl
aam
adc
enter
das
fisubl
fwait
inc
pop
dec
xor
fcom
push
lods
pop
add
shlb
adcb
stos
test
adc
cmp
xor
lcall
xchg
out
mov
testb
mov
or
pop
xor
fdivl
lock
mov
pushf
jge
and
xchg
and
shll
ss
loop
ds
stos
test
sahf
and
push
imul
pusha
cmpsl
fisubl
lret
and
out
clc
pop
aas
in
int3
jbe
inc
ficomps
xchg
sub
lret
les
das
mov
and
in
test
xchg
stos
adc
ljmp
or
cmpsb
inc
pop
or
jmp
stos
loope
ss
les
mov
or
cmp
mov
add
jle
cltd
jb
cld
mov
and
xor
clc
adc
sub
mov
add
lds
mov
cwtl
pop
imul
pop
loope
mov
rcrl
addr16
xor
ret
iret
inc
stos
out
shrl
or
pop
cmp
sub
xor
repnz
mov
pop
scas
mov
pop
lret
mov
fidivs
jecxz
cmp
gs
mov
les
xor
sti
cmp
mov
bound
mov
nop
cmpsl
sub
cs
test
pop
iret
stos
daa
add
mov
xchg
mov
idivb
pop
push
jae
sbb
xor
lock
pop
addl
and
js
cmp
int
lcall
and
scas
mov
mov
adc
cmpb
xchg
adc
mov
dec
pop
subl
shrl
mov
mov
xchg
xchg
lods
imul
pop
dec
xor
push
jnp
or
pop
fidivrs
fidivs
test
mov
jmp
fdivl
jmp
mov
and
mov
cmp
addr16
jg
movsb
adcb
dec
adc
or
loopne
cmp
pop
dec
repz
fdivl
xchg
call
mov
lcall
mov
in
out
data16
test
daa
jg
pop
sbb
loope
call
pop
pop
mov
pop
sub
inc
lea
jmp
aam
fs
add
les
sbb
or
sub
sti
clc
sub
rcrb
mov
test
test
ja
jne
mov
les
cmp
cmp
pop
xchg
loope
and
mov
ficomps
jnp
cli
stc
dec
xchg
sbb
cmp
cmp
test
aam
adc
test
mov
idivl
xor
outsl
imul
js
sub
sub
sbb
sbb
add
inc
shll
jno
cmp
repz
dec
addl
push
xorb
int
xchg
adc
loop
scas
imul
push
add
jecxz
dec
pop
ljmp
xchg
loope
mov
pop
dec
out
mov
decl
pop
jl
xor
mov
xchg
mov
jg
mov
ljmp
add
mov
orl
and
lods
mov
in
cltd
cli
xchg
xchg
out
jae
imul
and
push
call
test
add
mov
xor
or
pop
addl
xlat
push
stc
aam
leave
shll
jle
xchg
movsb
in
xchg
dec
jl
add
clc
je
popa
arpl
dec
xchg
xchg
in
cmc
loope
sub
xchg
iret
notl
scas
push
push
mov
lcall
sbb
out
sbb
repnz
sub
stos
shll
stos
mov
pop
push
shr
cmpsb
adc
mov
int
pop
pop
dec
ror
jp
dec
pop
sbb
pop
inc
hlt
sub
mov
imul
dec
rcrb
sbb
add
push
mov
les
add
push
push
xchg
les
cs
sbb
sub
mov
pop
hlt
iret
out
js
pushf
out
fprem1
push
xor
je
pop
jmp
sbb
cs
xchg
rcrb
mov
cmp
jne
out
aas
test
jnp
add
jp
mov
push
and
mov
xor
in
push
rorl
pop
adc
daa
jbe
add
dec
test
movsb
mov
mov
popf
fs
daa
push
and
mov
mov
int3
popa
out
inc
cmp
loop
in
mov
xchg
mov
fmull
enter
cld
jecxz
ss
mov
testb
push
jae
test
aad
jl
and
inc
mov
jg
ret
sub
std
nop
mov
test
adc
insl
sbb
and
inc
js
inc
rclb
repnz
stos
aad
cs
pop
sti
pop
mov
mov
mov
xor
popf
adc
or
sub
mov
or
push
cltd
inc
mov
sbbb
mov
adc
pop
mov
add
xor
jle
mov
cmpl
cmp
out
je
dec
ja
add
pop
add
xchg
or
addr16
iret
cmpsl
lret
aad
popf
jle
movsb
fldcw
mov
jne
xchg
movsb
jne
outsb
out
xchg
sub
out
roll
inc
jge
sub
xchg
insb
xor
popf
dec
adc
adc
mov
gs
xchg
mov
cmp
pop
jl
insb
mov
imul
sbb
xchg
push
push
adc
jbe
fwait
xorb
inc
push
outsl
icebp
fiadds
xor
into
push
cwtl
dec
mov
dec
insl
lret
mov
jg
mov
test
shl
lret
dec
dec
nop
inc
gs
data16
hlt
xchg
cmp
out
in
cmp
jnp
ja
repnz
jmp
jge
lret
mov
add
gs
mov
or
mov
jno
mov
jge
inc
jns
xchg
mov
cmpsb
rclb
inc
in
jbe
test
out
dec
nop
popl
sti
add
add
pop
xor
push
in
ljmp
fcompl
inc
cmp
call
sahf
push
jb
inc
cwtl
sti
outsl
add
and
into
test
hlt
and
loope
or
adc
cmp
sbb
inc
int
dec
inc
addr16
mov
cmp
inc
add
jmp
add
jmp
pop
lock
imul
fwait
push
in
xchg
addr16
inc
mov
cmpsl
add
jbe
imul
adc
cmp
testb
inc
mov
push
fstpl
inc
ret
xchg
inc
jg
or
imul
and
push
orl
int3
insb
cwtl
and
inc
scas
pop
pushf
push
xchg
int3
inc
mov
popf
mov
mov
fnstenv
or
ja
jne,pt
das
stos
pcmpgtw
and
lock
dec
pop
test
dec
adc
jne
and
mov
mov
mov
push
std
mov
mov
and
nop
jle
aaa
ret
push
inc
imul
sarb
ljmp
adc
movsb
aaa
fs
mov
push
sbb
dec
mov
icebp
push
push
lock
ljmp
dec
inc
pop
out
pop
mov
lret
add
repz
mov
xor
mov
int3
cmp
xchg
fnstcw
inc
arpl
test
fwait
sbb
inc
sub
sub
jno
adc
push
add
dec
jno
mov
cmp
mov
das
imul
icebp
mov
jecxz
cmpsb
ret
add
cltd
dec
stos
adc
or
and
sahf
and
mov
pop
leave
frstor
lds
sbb
lea
cmpsb
repnz
and
xchg
pop
les
ljmp
js
sbb
dec
lahf
das
sbb
loop
adcb
xchg
ret
lods
push
in
inc
sub
inc
or
leave
outsl
stos
jne
std
sub
pop
mov
sub
movsl
imul
punpcklbw
scas
gs
out
xorb
or
or
inc
lods
xor
and
mov
and
jge
xchg
pop
std
sbb
mov
jno
jo
out
sbb
ljmp
push
rclb
arpl
adc
xchg
loope
mov
cmc
outsb
sub
jnp
das
ror
loope
jle
add
test
jbe
loop
sub
jno
dec
les
ljmp
xor
or
ds
int3
aas
jns
ror
scas
jmp
mov
mov
cmp
cmp
fwait
xor
push
cmp
lret
and
add
inc
or
mov
sbb
xorl
hlt
loop
xchg
sub
in
fldenv
aad
js
fisttpl
add
fldt
psrlw
pop
mov
in
jae
jb
movsl
out
es
test
dec
iret
cmp
orl
gs
lcall
ss
out
inc
jge
les
inc
sub
xchg
sbb
incb
loope
dec
xor
in
push
rolb
subl
xchg
test
arpl
sbb
xorl
adc
mov
push
inc
pop
jge
cli
add
sbb
mov
cmp
pop
sub
int
arpl
xchg
testb
ljmp
daa
xchg
fldenv
xchg
stos
clc
jp
dec
inc
enter
cmp
clc
mov
sbb
mov
into
sbb
das
sti
xchg
inc
iret
js
inc
cmp
or
push
lds
dec
adc
jb
mov
or
hlt
sbb
in
xchg
lods
in
mov
xor
adc
add
lds
mov
xchg
repz
cli
jbe
das
dec
mov
xor
xchg
mov
jnp
rorb
sbb
mov
out
cmp
ret
mov
jle
or
gs
inc
or
sub
stos
xlat
or
push
icebp
test
jae
xor
mov
sbb
andl
sub
mov
dec
das
mov
sbb
imul
mov
mov
out
jnp
cmp
mov
xlat
inc
dec
push
mov
or
pop
hlt
inc
jle
sbb
inc
jbe
mov
and
sbb
ror
std
sub
fidivs
adc
and
cmp
jbe
mov
sub
add
or
ffree
aaa
inc
cmp
test
gs
nop
mov
divb
rolb
mov
movsb
xor
insb
cmp
fndisi(8087
xchg
into
sbbb
pop
mov
mov
ret
ds
lods
repnz
xchg
in
push
inc
mov
sbb
out
lea
and
push
repz
cmpsl
adc
mov
test
push
aas
adc
insl
adc
push
jle
ret
xchg
testl
loop
lds
fwait
inc
gs
dec
ja
fwait
andb
mov
rcll
xchg
stc
test
in
fnsave
fs
mov
aaa
out
inc
xor
scas
pop
pushf
jnp
mov
mov
arpl
and
das
push
stos
stos
jne
pop
test
in
mov
adc
cmpsl
stc
ret
imul
decl
pop
mov
int
popf
enter
movl
xor
out
add
stos
jg
and
xchg
or
cmpsb
push
ljmp
je
xchg
add
shlb
pop
adc
mov
lret
cmp
mov
insl
test
nop
mov
sbb
leave
pusha
cmpsl
xchg
shrl
stc
stos
adc
inc
pop
repnz
push
lods
sub
and
inc
popa
fmuls
pop
popl
sbbb
aam
push
movsb
shll
add
lods
int3
fsubr
addr16
push
pop
pop
outsl
xchg
int
xchg
enter
push
ljmp
cmp
sub
call
pop
mov
js
mov
cmpsb
and
test
cld
jmp
jbe
or
fnstenv
mov
insl
adc
and
icebp
std
loope
xchg
popf
orl
jno
popa
insl
adc
and
icebp
std
loope
xchg
popf
orl
adc
insl
sbbl
ror
std
loope
xchg
popf
xchg
lea
pop
sbb
insl
adc
mov
addr16
std
loope
out
or
inc
pop
push
fstl
fcmovnu
out
pop
test
sbb
add
xor
and
push
stos
inc
mov
cwtl
imul
shrb
shlb
jmp
fistpl
lret
and
push
les
jo
pusha
fwait
dec
stc
add
jecxz
pop
rclb
pop
fsub
sbb
adc
cwtl
push
xchg
inc
test
cld
sbb
pop
call
fwait
shrl
adc
pop
sbb
mov
pop
jecxz
and
add
or
ss
loopne
push
adc
out
sub
fisttpl
pop
xchg
into
std
stos
iret
mov
sarl
mov
push
shrb
mov
and
js
add
jle
inc
ficoms
mov
mov
aad
clc
imul
cmc
jecxz
sub
push
icebp
lock
add
fbld
lahf
enter
xchg
dec
sbb
das
cmovae
add
jmp
or
lcall
dec
pop
add
mov
call
xor
ret
aad
inc
inc
xor
imul
shrb
test
lock
loop
xchg
cmp
xor
add
loop
idivb
or
jne
pop
mov
jecxz
cmpl
mov
cs
add
daa
cli
nop
or
imull
imul
mov
ja
mov
push
scas
dec
mov
add
cmp
loope
xchg
dec
sarb
or
sbb
jmp
sti
xor
and
push
stos
inc
mov
nop
imul
shrb
sarb
or
sbb
jmp
sti
xor
and
push
stos
inc
mov
nop
imul
pushl
mov
sub
std
stc
addr16
loop
jbe
inc
and
mov
sbb
addb
adc
mov
fwait
jp
in
pusha
rcrb
sarl
sub
scas
nop
dec
pop
outsb
push
fs
and
sub
addr16
mov
jo
pusha
jo
sub
call
push
fidivrs
das
sub
movsl
rorb
mov
mov
inc
or
popa
or
stos
std
push
sbb
mov
sti
xor
lret
rcll
sub
enter
mov
icebp
in
jbe
rcll
lahf
aas
mov
pop
emms
sbbl
cltd
xor
in
inc
adc
fwait
jnp
mov
adc
dec
iret
in
mov
clc
pushf
lahf
movsl
call
shll
or
jns
fwait
mov
push
outsl
jo
hlt
jne
jg
aam
sbb
repnz
pop
and
leave
inc
xchg
push
jge
push
std
inc
stos
out
sub
cltd
mov
ficompl
aad
and
xchg
ds
sbb
loopne
push
mov
xadd
mov
dec
push
fldcw
xlat
or
cmp
popa
lods
mov
stos
lahf
mov
or
jmp
sub
xchg
mov
xchg
and
cmc
fcoms
fistpl
push
cmpsl
dec
add
pop
rorl
push
or
add
imul
repnz
push
mov
cs
aad
scas
dec
jmp
inc
lds
shlb
adc
inc
or
xchg
and
and
push
sarb
f2xm1
outsb
lds
pop
std
sbb
out
aad
scas
jae
adc
mov
mov
add
mov
xchg
mov
test
push
rcrb
or
mov
call
imulb
or
lret
lods
nop
decb
pop
outsb
mov
or
mov
sbb
imul
ljmp
push
arpl
sub
jp
xchg
push
pushl
add
cmp
faddl
push
push
test
movsb
lods
sbb
add
pop
into
sbb
sub
jmp
mov
cltd
insl
out
repz
push
push
imul
dec
icebp
add
jg
cmp
rclb
mov
mov
mov
fidivl
pop
mov
stos
cmp
ror
int3
sbb
dec
mov
and
or
jne
cmp
fsub
lahf
ss
push
and
lds
push
js
repz
mov
fcmovbe
in
lret
call
push
outsl
fcomip
push
inc
sahf
pusha
sbb
gs
outsb
jnp
jns
or
xchg
scas
push
dec
das
pop
addr16
and
testb
in
xor
lcall
bound
popw
xchg
aam
pop
or
fstpt
shll
dec
insb
call
sbb
rorb
test
sarl
mov
test
pop
jnp
fisubs
mov
sbbl
lods
push
dec
enter
fimull
xor
ret
stos
sub
test
xlat
test
stos
int
adc
repz
pop
sahf
add
lods
sahf
sub
or
out
mov
outsl
lods
mov
push
pusha
dec
push
push
pop
mov
insb
inc
iret
scas
dec
test
sbb
pop
mov
jnp
mov
push
sub
dec
outsb
jno
xor
leave
sub
push
adc
daa
push
popf
sbb
sbbb
call
xchg
pusha
mov
leave
xchg
lods
cmp
xchg
aas
dec
mov
jae
push
outsb
insl
mov
jmp
pusha
outsl
cld
and
jno
mov
mov
mov
inc
mov
aaa
divb
loop
cmovns
stc
sub
std
cmc
jge
jns
stos
fimull
cmpsl
shll
sub
xor
test
aaa
imul
ffreep
shrb
sub
or
mov
add
shl
push
jno,pt
pop
cmpsb
pop
cmp
ret
xor
jmp
pushf
js
fwait
adc
or
dec
mov
insl
fstps
outsl
imul
mov
jne
stos
mov
pop
sub
push
loope
lods
scas
jns
scas
xchg
in
sub
js
cmp
mov
fs
inc
sbb
cmp
imul
ds
int
push
jns
ss
sarb
jecxz
jns
jecxz
out
cmp
or
mov
out
jl
loop
test
mov
or
push
xchg
xchg
shll
and
sub
cmp
cltd
jmp
bnd
dec
cmp
mov
popa
in
jg
xchg
adc
stos
dec
cbtw
inc
pmaddwd
xchg
add
loop
pop
cmpsl
das
out
pop
and
xchg
int3
xchg
push
inc
ljmp
inc
mov
es
mov
pop
push
mov
push
inc
hlt
push
jb
and
cli
insb
add
pop
push
or
jp
and
or
ficoms
lret
rcll
call
mov
jmp
mov
test
inc
decl
jecxz
outsb
stos
add
rcr
loop
daa
fwait
sub
sbb
shl
inc
add
scas
push
jl
jns
push
and
push
cmovb
fiadds
test
repz
dec
push
in
inc
roll
pop
inc
movb
jbe
pop
or
rcrb
repnz
pop
jl
sti
xchg
je
mov
das
les
xor
jp
orb
test
sahf
inc
mov
popf
xchg
cmp
pop
lods
xchg
and
mov
enter
add
clc
repz
pop
sub
loopne
call
pop
adc
stos
lds
cld
adc
shrb
repnz
xlat
sbbb
inc
pop
sub
or
stos
push
sub
nopl
movsl
mov
lcall
jo
inc
ret
xor
jmp
fs
fbld
cmp
push
adc
or
stos
or
mov
les
loopne
inc
cmp
xor
pusha
mov
push
sub
in
sub
sbb
mov
jmp
jno
fbld
pop
cmp
hlt
push
pop
aas
aad
push
pop
or
push
and
cmp
leave
xor
pushf
add
mov
push
flds
and
or
sbb
fs
out
lret
push
jle
mov
pop
mov
insl
push
sub
fdivrp
pop
dec
sub
mov
or
mov
pop
and
sbb
add
sbb
stc
scas
jmp
cmp
negl
mov
cmp
in
mov
dec
sub
mov
dec
or
dec
ds
out
gs
mov
lret
inc
lret
test
or
out
xor
cmc
xchg
nop
push
test
in
push
mov
das
loope
mov
push
cmp
shlb
scas
repz
mov
fbld
push
div
add
push
adc
popf
subb
and
dec
imul
popf
pop
adc
add
cmc
mov
sbb
dec
jmp
cli
out
or
inc
push
mov
mov
jbe
ds
data16
out
push
adc
cmp
adc
jle
mov
xchg
xor
add
dec
and
iret
pop
aas
out
js
into
fsin
jle
les
popa
inc
add
xchg
mov
aam
mov
outsl
push
mov
fucomp
pop
pop
sub
push
dec
sti
int
gs
cmp
lcall
shr
iret
repz
xchg
pusha
stc
push
or
mov
sub
fnstsw
aas
sub
push
inc
sbb
mov
inc
or
je
ss
xchg
sub
out
sub
cmp
mov
cmp
dec
or
sbb
jns
sbb
jns
incb
insb
lret
mov
mov
lahf
inc
shl
push
clc
ja
jne
ss
shl
adc
mov
xchg
inc
leave
cmp
dec
ret
xchg
jle
test
adc
cmc
or
into
or
push
je
xor
or
enter
push
push
jecxz
lods
xchg
ds
daa
xor
popa
push
je
repnz
cmpsb
out
push
mov
xchg
pop
mov
adc
cltd
mov
fstps
adc
xchg
mov
aam
enter
xor
and
mov
mov
push
mov
rcrb
or
icebp
popf
rorl
adc
xor
and
mov
cltd
xor
xor
lds
xchg
xor
test
jmp
xchg
rol
das
mov
mov
divb
fcmove
cltd
mov
int
enter
cmp
push
cli
aas
hlt
pop
test
int
insl
inc
sbb
push
or
push
mov
cmp
call
test
lea
pop
push
in
cmp
mov
pop
mov
inc
and
daa
gs
ljmp
mov
xchg
cmp
int
or
push
stos
in
add
rcrb
mov
pop
loope
loopne
inc
into
and
adc
pop
outsb
hlt
cmpsb
and
inc
xor
enter
mov
cltd
arpl
and
andl
icebp
bound
push
scas
or
xor
ss
and
out
push
stc
scas
fbld
gs
fwait
xor
add
jno
cmp
xor
xor
call
leave
xor
mov
inc
dec
mov
cli
dec
les
push
push
pop
dec
pop
dec
jne
fwait
mov
repnz
fcoml
cmpsb
sub
mov
xchg
jae
and
mov
pop
iret
mov
lret
xchg
in
ljmp
mov
add
dec
adc
inc
jl
pop
cwtl
cmp
popf
and
sti
test
lods
test
and
fisubs
pop
pop
ret
nop
inc
stc
hlt
xor
sti
mov
and
sub
aas
arpl
push
rcl
insl
aas
sarb
leave
jnp
cmp
mov
adc
test
adc
push
outsl
pop
ja
lods
jae
pop
ljmp
repnz
cmp
cmp
mov
andl
mov
pop
hlt
xlat
sbb
inc
mov
sarb
clc
xchg
jo
ja
push
mov
jmp
dec
push
cmc
pop
jns
xor
sahf
pusha
dec
and
mov
jecxz
fst
loope
test
jb
jge
insb
jnp
sbb
jecxz
popf
incl
rcr
inc
imul
mov
adc
sbb
push
xchg
dec
xchg
or
jle
jecxz
inc
mov
into
shll
cmp
in
fwait
ret
and
cli
pop
xchg
sub
push
cmc
jno
pop
or
fdivs
jbe
movsl
or
cmpsb
das
xor
pop
mov
xchg
push
xchg
inc
push
ds
lcall
pop
inc
ret
std
cs
loope
and
cmp
stc
sbb
scas
and
xorl
insl
mov
cs
dec
sub
js
add
adcl
movsw
sar
pop
dec
dec
mov
sub
pop
filds
sarb
add
mov
push
cmp
mov
mov
sbb
sbb
and
sbb
test
hlt
xchg
push
jnp
xchg
cld
pop
aas
subb
lods
outsb
and
lahf
adc
je
push
xchg
xchg
insl
mov
mov
fisttps
jl
sub
int3
or
mov
aad
cltd
xchg
scas
jnp
leave
xchg
inc
jbe
pushf
test
pop
adc
xor
lods
xchg
and
mov
cmp
adc
mov
inc
ret
push
xchg
mov
adc
cmp
out
cmp
xchg
pop
jnp
out
jmp
cmp
mov
sbb
inc
mov
lcall
ret
cmp
cmp
sbb
pop
mov
gs
xor
lds
mov
add
push
leave
sub
call
add
bound
stc
fisttps
jbe
popf
enter
pop
mov
inc
cwtl
sub
dec
adc
ret
int3
mov
cmp
cmpsl
pop
sub
pop
ds
xchg
adc
bnd
jbe
outsl
dec
pop
xchg
ret
sbb
push
xor
sub
daa
inc
rcrl
mov
mov
es
xchg
add
xlat
push
inc
inc
aaa
or
mov
xchg
mov
xchg
push
popa
stos
xchg
pop
mov
xchg
sub
mov
shll
jbe
inc
cltd
mulb
mov
std
add
and
mov
pushf
sub
pop
or
nop
call
jae
in
mov
das
insl
jae
or
dec
mov
std
loope
jns
shrb
xchg
rorb
lcall
mov
movsl
pusha
lret
out
push
hlt
dec
xchg
xlat
pop
pushf
jo
fs
notb
adc
jbe
pop
std
xchg
xchg
out
add
leave
shlb
movsb
sbb
add
or
inc
es
js
shl
push
cwtl
aas
mov
inc
rolb
fwait
bound
cmpsl
div
out
sarb
xor
mov
sub
cmp
push
cmp
mov
dec
xlat
mov
and
shrl
push
subb
pushf
or
jle
pop
push
or
and
pop
subl
ds
pop
call
add
movsb
cmc
push
out
jge
daa
in
and
das
jl
leave
inc
mov
ljmp
xor
movsb
mov
korw
addb
pop
clc
das
fdivp
fiadds
xchg
push
fisubrs
andb
pop
sub
popl
popa
sub
lret
jb
out
movsl
sbb
jg
xorb
push
in
addr16
push
into
jne
addr16
xorl
sub
mov
cmp
lcall
jge
xor
dec
lcall
adc
movsb
lahf
lods
fs
push
adc
dec
mov
mov
les
jge
sbb
adc
jl
movsl
jb
push
notb
les
xchg
cltd
nop
dec
jle
mov
lods
xchg
adc
fwait
daa
testb
sarb
mov
stos
sahf
jns
or
xchg
pushf
fsts
ljmp
bnd
dec
in
in
dec
leavew
pop
inc
inc
pop
pop
lock
bound
in
test
rolb
aaa
pop
icebp
sub
pop
mov
push
shrb
mov
push
dec
mov
sbb
sub
clc
mov
add
mov
jno
aas
jmp
and
out
push
mov
ljmp
arpl
mov
dec
cmp
mov
sti
pusha
lret
dec
sbb
xchg
push
dec
dec
add
and
cwtl
inc
cli
aad
out
cmp
push
in
fldl
divb
dec
mov
lods
inc
movsb
sbb
or
cmp
jns
ljmp
push
sbb
addr16
mov
ljmp
inc
mov
dec
mov
push
out
into
outsb
add
in
sbb
punpckhbw
push
push
adc
nop
jb
mov
or
mov
movsl
pop
dec
mov
mov
test
fmul
arpl
fsubl
sub
and
push
jge
lahf
sarb
stos
mov
mov
mov
repz
inc
stc
xor
push
out
mov
xor
jle
mov
mov
sbb
jle
adc
popa
std
dec
fs
xchg
or
inc
push
push
push
ret
xor
pusha
cmpsl
lcall
clc
scas
clc
sbb
cs
pop
and
jle
neg
outsb
ljmp
cmc
xchg
push
xchg
dec
and
mov
sub
ds
lock
sti
icebp
xchg
jo
cmp
sbbl
mov
mov
xchg
pop
mov
mov
imul
push
cmp
mov
mov
negb
mov
xor
enter
mov
jle
pop
test
push
lret
xchg
call
and
cmp
cmc
pushf
out
push
lret
pop
inc
ljmp
iret
push
jns
dec
inc
aaa
lock
add
lds
insb
sub
sbb
dec
ja
dec
lahf
xor
cmp
sahf
mov
shll
in
popl
data16
adcl
out
ret
jecxz
sti
adc
add
inc
jp
repz
enter
adc
jae
pop
xchg
push
sti
fisubrs
push
lahf
cmp
je
test
xor
stos
mov
or
out
test
push
cmpsb
xor
jge
nop
and
ret
push
mov
std
fwait
push
ror
xchg
mov
pusha
adc
sar
jno
rcrb
cmp
adc
scas
dec
mov
jns
daa
pop
jg
dec
cwtl
in
and
cmc
add
outsl
add
fdiv
pusha
and
sbb
icebp
jge
push
dec
inc
cld
mov
inc
push
sub
addr16
arpl
lods
push
outsl
popa
mov
and
movsb
xchg
pop
lret
mov
push
or
push
cmp
jge
xor
cltd
add
lods
push
imull
mov
lcall
cmp
mov
sbb
inc
lock
cmp
mov
imul
cmp
adc
loopne
bound
jb
subl
xor
popa
add
loope
add
mov
pop
jnp
call
out
push
sti
jmp
sbb
cld
les
ja
int3
cmpsl
mov
test
xor
sub
push
in
idivl
pushf
sub
fimull
repz
jl
jae
mov
mov
cmpsl
das
mov
fs
push
nop
stos
fcmovbe
cmpsb
inc
imul
pop
insl
scas
jno
pop
addb
faddp
dec
enter
cmpsl
out
rclb
add
and
mov
adc
dec
sub
mov
dec
shr
pop
popa
mov
mov
out
mov
cmp
mov
push
in
int
push
sub
inc
push
mov
xchg
mov
js
fcompl
test
lds
xlat
mov
push
push
testb
aam
cwtl
sti
cmp
mov
es
popa
das
push
cmp
aam
or
ja
jbe
fwait
and
leave
fists
notl
sub
lock
jne
pop
xchg
aas
imul
test
sbb
sarl
inc
adc
rorl
add
nop
test
pop
std
outsb
aaa
mov
outsl
pop
jecxz
push
loop
push
leave
cld
insb
dec
gs
mov
pushfw
mov
sar
leave
xchg
mov
xchg
pop
fldenv
mov
stc
fsubrs
jle
jnp
or
pop
ljmp
push
fsubrs
lcall
add
xor
leave
xchg
mov
pop
es
movsb
mov
push
xchg
xor
repnz
ret
adc
movsl
jnp
sbb
push
pop
dec
pop
xchg
dec
cmp
adc
out
iret
inc
mulb
push
adc
sub
std
fsubs
aas
mov
pop
loop
test
push
jno
call
push
adc
popa
push
push
repz
lcall
stos
xchg
mov
popf
cld
dec
cmp
xlat
sbbl
add
xor
and
xchg
and
dec
pop
pop
clc
and
lock
repz
shll
jno
pop
movsb
push
js
mov
ret
jecxz
mov
sbb
popf
pop
enter
jge
mov
clc
notb
adc
test
dec
test
adc
xor
pop
jecxz
lahf
mov
pop
jmp
push
dec
xchg
aad
inc
out
push
jns
int
sub
jge
jo
jnp
icebp
adc
popf
jne
push
adcl
cmp
stc
out
xchg
xor
popf
test
enter
sahf
jo
pop
into
fbld
lock
sub
nop
mov
xor
mov
rorl
sbb
out
outsl
mov
mov
pop
adc
add
les
jae
add
sub
mov
ror
xchg
js
mov
addl
jns
popl
loopne
and
push
sub
ljmp
pop
jp
test
xor
mov
mov
movsl
popa
adc
repnz
pop
inc
mov
bound
ss
push
or
mov
mov
dec
test
adc
cwtl
lods
mov
scas
repz
mov
dec
aad
xchg
xlat
lock
inc
mov
mov
sarl
stos
or
inc
mov
sub
cmp
repz
mov
shll
lods
outsb
cmpsl
cmp
xor
inc
mov
movsl
push
shl
stos
sahf
dec
std
jecxz
icebp
roll
das
and
mov
xor
push
imull
sub
out
test
adc
fbstp
lea
daa
mov
cmp
or
sbb
jmp
sti
xor
and
push
stos
inc
mov
nop
imul
shrb
sarb
or
sbb
jmp
sti
xor
and
push
stos
inc
mov
nop
imul
shrl
les
adc
add
cmp
and
push
stos
pop
mov
mov
jnp
dec
mov
sub
cmp
mov
adc
push
lcall
inc
je
fs
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
dec
jl
insb
outsb
pop
jle
pop
push
xor
fdivr
int3
mov
mov
pop
insb
outsb
pop
jle
push
cmp
sub
sbb
or
cld
fsubrp
out
fdivr
int3
mov
mov
pop
insb
outsb
pop
jle
push
cmp
sub
sbb
or
ret
sahf
lods
fwait
int3
mov
in
enter
mov
jl
sbb
pop
mov
lds
mov
push
loopne
mov
add
stc
inc
mov
dec
xorl
adc
add
inc
push
mov
faddl
int
jl
daa
clc
pushf
out
jo
imul
pop
imul
in
popa
lea
lret
adc
fnstcw
mov
mov
insl
lods
pop
jns
cmp
ja
ds
ds
push
stc
mov
xor
out
sahf
cld
push
bound
nop
jmp
xorl
jecxz
pop
iret
mov
jne
fidivs
push
popf
mov
xchg
push
pop
cmpl
mov
mov
fcoms
imul
jle
push
cmp
sub
sbb
or
cld
fsubrp
out
fdivr
int3
mov
lret
cmp
or
jno
inc
jns
jl
nop
mov
mov
lret
push
into
jmp
or
pop
push
add
jnp
mov
mov
mov
jmp
pop
sbb
sub
cmp
push
sub
sbb
or
cld
fsubrp
out
fdivr
int3
mov
mov
pop
insb
outsb
pop
jle
push
cmp
sub
sbb
or
cld
fsubrp
out
fdivr
int3
mov
mov
aas
jns
scas
add
xor
out
mov
dec
mov
jl
push
scas
outsb
jb
mov
aam
adc
sarl
cmp
xor
push
bound
loope
loope
bound
call
mov
insb
dec
ljmp
mov
int3
out
push
les
jmp
mov
jle
or
push
jbe
or
push
mov
cmp
push
outsl
sub
pop
clc
cmp
in
mov
sahf
lcall
jle
ljmp
popa
cmp
cmpsb
mov
dec
pop
dec
lcall
mov
fimuls
jmp
cmpl
fistpll
lcall
jge
dec
mov
mov
jp
leave
xchg
mov
inc
lret
out
inc
into
shlb
add
stc
or
scas
in
or
inc
andl
lahf
sub
out
jmp
aas
cbtw
cmp
and
adc
adc
mov
rclb
mov
cmpsl
cltd
sub
and
adc
mov
stos
jecxz
add
es
mov
xor
sub
aam
cmp
add
xor
jno
adcl
cmp
imul
fsubs
jns
test
loop
sti
pushf
inc
add
mov
mov
lods
jb
sahf
outsb
sub
xor
nop
scas
jecxz
mov
jo
mov
mov
jp
fst
adcb
test
push
mov
sub
daa
mov
cmpsl
cmpsb
sbb
imul
pop
xor
lods
mov
call
fs
jbe
or
xchg
stc
cmpsl
popa
scas
test
jae
cmp
movsb
add
jbe
movsb
xchg
sbb
mov
pop
insb
pop
jnp
dec
pop
fisubrs
ss
sub
jmp
js
das
mov
pop
lds
roll
aam
or
jns
mov
rcll
dec
mov
sbb
je
int3
imul
lret
mov
shr
add
ljmp
fwait
cld
aas
mov
hlt
or
movsl
aad
cld
sarb
cmp
dec
popa
pop
cli
inc
rcrl
cmp
add
mov
mov
mov
dec
adc
add
add
and
frstor
adc
dec
push
inc
add
pop
cmp
fisttpll
cwtl
pop
lret
testb
negb
ljmp
xorl
mov
mov
push
push
dec
dec
pusha
sti
jae
stc
stos
outsb
push
mov
add
adc
aaa
std
ror
aas
pop
mov
and
adc
fisttpll
add
mov
and
xchg
loop
sbb
in
cmp
mov
lahf
dec
inc
ret
push
dec
outsb
cmpsb
sub
jecxz
jne
popa
dec
jnp
je
shll
int
addr16
xor
test
mov
insl
test
call
divb
imulb
inc
cli
pop
add
cmpsb
add
shl
pop
imul
fmull
add
test
mov
push
jle
js
sbb
dec
xchg
push
mov
pop
in
pop
push
dec
sbb
pop
xchg
mov
xchg
fildll
xchg
xor
stos
lret
jno
orl
fdiv
test
pop
dec
daa
cmp
and
mov
movsb
xor
sbb
pop
fldcw
inc
xor
pop
outsl
jmp
je
mov
sub
into
sarl
sbb
fyl2xp1
jecxz
in
popa
hlt
fidivrs
cmp
jbe
xlat
sub
cmp
into
insl
aad
cltd
sub
movsl
jb
mov
int3
inc
popa
push
pop
pop
pop
xchg
push
sarb
out
mov
cltd
enter
shlb
or
inc
jg
sbb
sbbb
enter
sub
mov
in
shll
add
or
pop
dec
imul
adc
popa
ljmp
mov
cld
sahf
mov
push
dec
xor
out
iret
jns
pusha
nop
inc
jne
push
inc
out
mov
nop
sub
xchg
cld
scas
and
xchg
jecxz
and
test
adc
das
adc
pop
ja
adc
lds
xlat
int3
les
or
out
mov
in
les
push
cli
mov
mov
inc
mov
mov
fsubp
pop
sbb
hlt
fs
stos
dec
lahf
mov
ljmp
hlt
or
mov
dec
inc
ret
pop
insl
lods
fisubl
or
test
push
inc
aam
fldt
test
leave
cmp
inc
int
mov
in
xor
adc
ljmp
pop
mov
fdivs
inc
xchg
and
mov
mov
mov
jnp
jle
leave
xchg
stos
jg
js
mov
scas
pop
xor
pop
inc
sub
fwait
enter
adc
ja
mov
aad
data16
mov
sbb
into
pop
push
loop
dec
pop
push
mov
es
inc
dec
ds
rcrb
and
add
std
repz
xchg
adc
push
dec
mov
pop
in
cmpsb
orb
popa
jle
mov
stos
inc
mov
mov
std
or
test
jo
out
jmp
xchg
fidivl
lock
hlt
xor
add
xor
movsb
ret
jns
je
xor
and
out
mov
mov
cmp
xchg
psubusw
out
dec
pusha
stc
aas
sbb
dec
outsb
jb
and
mov
ficoml
lds
filds
mov
dec
divl
mov
cmp
push
lods
fwait
and
xor
xchg
insl
xchg
movsb
push
mov
in
clc
xchg
mov
test
push
pop
and
inc
push
inc
jae
add
inc
sbb
imul
es
adc
jo
incl
cwtl
popa
pop
adc
fists
iret
jecxz
js
xor
dec
fistpl
mov
and
xchg
jl
push
les
lods
dec
jb
push
mov
sub
xchg
inc
shr
in
mov
ja
add
pop
ror
adc
jae
mov
or
pop
cmp
cld
sub
xor
cld
inc
mov
adc
movsb
dec
rcrw
mov
ret
or
sub
jns
cmc
insb
out
shll
cmpb
fcom
mov
xor
clc
push
push
frstor
outsl
jg
iret
cmpsl
sti
in
push
stos
shll
sub
cmp
pop
jns
push
sub
xlat
adc
popw
fs
xchg
xor
lds
mov
mov
xor
aam
std
jecxz
dec
cmp
fisubs
push
icebp
pop
mov
loopne
push
push
gs
dec
cmpsl
jp
lea
add
dec
and
mov
add
mov
negl
jmp
or
cmpsb
cld
test
es
add
mov
xlat
int
testb
mov
mov
loopne
in
mov
scas
int
out
xchg
xchg
jnp
xchg
lret
das
xlat
vpmuludq
xor
mov
cwtl
cmpsl
jnp
stos
inc
dec
sub
popf
cmp
jl
bound
or
pop
sub
outsb
pop
mov
fists
mov
cmp
test
xor
lods
inc
push
lea
loopne
stos
xchg
mov
inc
clc
xchg
ds
xor
push
mov
mov
inc
add
cmp
sbb
mov
cmpsb
add
clc
fildll
ds
adc
test
sbb
stos
sbb
out
or
pop
sub
sbb
mov
cmp
andb
pop
pop
mov
xchg
idivb
enter
adc
bound
cli
stc
push
mov
jge
inc
xchg
push
lea
adc
mov
arpl
enter
int
mov
mov
loopne
adc
pushf
aas
jo
ror
pop
aaa
sub
in
push
pop
jl
mov
xor
inc
int3
ljmp
andb
add
xchg
add
add
pop
xchg
inc
and
jp
test
xorl
push
inc
cmpsl
cwtl
adc
ficoms
rclb
mov
xor
jnp
adc
jae
pop
jne
sub
push
and
or
and
stc
ja
adc
mov
pop
cmpsb
mov
imul
add
leave
lret
sbb
cmpb
test
dec
push
in
mov
jbe
add
mov
aad
stos
cwtl
sbb
pop
sti
xor
push
into
daa
lcall
and
sub
ror
xchg
imul
jmp
xorl
jbe
mov
sub
cmpsl
int
pop
sub
mov
scas
cmp
cmp
jecxz
cwtl
pop
test
fadds
sbbb
xchg
hlt
xor
rorb
dec
jbe
sbb
fbstp
mov
pop
add
adc
movsl
xlat
xor
jnp
sbb
sub
push
outsl
lea
lock
rolb
pop
mov
add
mov
das
subl
adc
fstl
ficomps
repz
jle
sub
inc
out
test
scas
lock
repz
push
icebp
cltd
xchg
in
sahf
fnstcw
mov
mov
lcall
mov
push
ss
test
jl
sbb
add
add
ja
push
fcompl
jb
popa
xchg
hlt
loope
jnp
pop
cmp
stc
arpl
xor
dec
sub
fldcw
push
xchg
xchg
push
push
sbb
pop
pop
inc
xchg
fstpl
add
sbb
xchg
mov
sub
dec
or
jecxz
fcompl
movsb
push
sub
mov
mov
adc
ljmp
arpl
dec
dec
int
outsb
or
lock
stc
mov
lret
or
cmp
jb
add
insl
inc
gs
mov
pop
pop
fdivp
add
shr
xor
and
pop
inc
xabort
pop
cmp
stos
mov
std
test
loope
loop
cmp
aaa
dec
dec
mov
push
fs
call
bound
nop
adc
or
aaa
pop
inc
xchg
mov
dec
shlb
shll
ret
rcl
test
enter
inc
shrl
cmpsb
fcmovne
mov
jl
out
lock
mov
ljmp
mov
mov
xor
clc
mov
pop
push
lock
aam
push
push
test
adc
mov
sarb
cmp
or
lret
dec
es
std
sub
ds
aas
sbb
dec
mov
in
movsl
insw
clc
outsl
outsb
mov
lret
pop
push
lret
jmpw
inc
or
stos
cmpsb
sbb
mov
pop
aad
aas
xchg
cltd
push
and
stos
dec
sbb
arpl
mov
jno
imul
in
cli
or
clc
push
inc
cmp
bound
mov
lock
pop
lcall
popa
cli
mov
ret
pop
push
dec
das
ret
insb
dec
nop
xchg
pop
cmpsb
and
scas
mov
jg
pop
js
sub
out
out
xchg
mov
add
clc
xchg
stos
add
adc
mov
mov
jno
cmp
fstps
cmpsb
movsb
lcall
push
rorl
inc
sub
cmpsb
cltd
sahf
data16
es
inc
repnz
adc
dec
dec
or
xchg
cmpsb
or
xchg
fiadds
adc
and
jb
cmp
mov
bound
push
lahf
and
push
sarb
jg
push
out
addr16
mov
pop
mov
into
imul
mov
or
loopne
lret
addr16
sub
mov
adc
das
adc
dec
adc
ds
pop
pop
idivb
mov
roll
fstl
cmp
pusha
pushf
bound
in
cs
in
add
imul
mov
fists
add
xchg
flds
ret
les
data16
mov
mov
mov
or
addb
aaa
shrb
loope
xchg
inc
jg
jae
or
inc
adc
add
je
push
outsb
outsl
lea
jmp
or
cmpsl
imul
test
gs
push
pop
jne
push
mov
sbb
dec
clc
inc
aam
pushf
xor
xchg
mov
mov
push
inc
push
inc
cmp
sarb
xor
mov
insb
mov
mov
lret
hlt
push
add
lods
hlt
mov
mov
loope
mov
cmp
mulb
mov
cli
mov
ja
roll
cld
aas
out
leave
lret
mov
cltd
cmp
aam
xchg
das
dec
test
jmp
hlt
js
mov
push
or
dec
dec
jbe
push
and
sub
test
jl
adc
cs
sbb
add
pop
mov
outsb
outsl
in
push
psubusw
mov
and
hlt
push
hlt
cltd
je
xor
outsl
pop
cmpsl
jle
mov
dec
lods
into
jle
xor
cld
fadds
lods
jo
aam
dec
sub
scas
aaa
mov
pop
sahf
xchg
and
or
fs
in
add
test
and
push
cmc
stc
outsl
add
lock
das
cmp
xchg
xor
mov
pop
shlb
and
sbb
data16
or
xchg
xor
test
js
insb
xchg
or
cmp
or
xchg
and
xchg
and
sub
sub
jmp
and
add
cmpsl
shr
mov
mov
daa
mov
mov
nop
sahf
jnp
pop
iret
sub
mov
mov
inc
cmpsl
es
xchg
or
je
or
sub
loopne
lahf
xchg
dec
int
aad
test
ror
add
jle
xchg
imul
leave
popa
dec
lret
hlt
fiaddl
xchg
cmc
xchg
dec
pushf
outsl
insl
pop
sti
arpl
cld
shr
stos
add
int3
mov
pop
sub
add
insl
push
bts
add
je
out
pop
xor
add
hlt
shl
sahf
xor
outsb
mov
and
cmpsb
inc
or
cwtl
push
or
je
cmpsl
dec
test
xchg
jb
sub
dec
add
add
or
adc
notl
lahf
add
imul
imul
xchg
inc
lret
and
mov
iret
negb
inc
cmp
js
fwait
jg
insl
push
outsb
cmpsb
movsl
xor
jae
xor
stos
aad
ljmp
adc
sbb
ret
or
jge
mov
adc
fwait
xchg
jnp
adc
fwait
cmpsl
out
mov
lock
jp
dec
sub
hlt
lods
aam
arpl
dec
bound
cmp
push
shrl
push
or
cmc
ds
dec
xor
push
pop
popf
mov
sbb
add
call
mov
mov
fmuls
mov
cmp
pop
sub
stos
sub
dec
adc
pop
in
xchg
iret
adc
xchg
fdivrl
jb
inc
mov
andl
sbb
inc
or
out
loope
jecxz
mov
xchg
mov
adc
daa
xor
jae
add
insw
push
cmpsl
mov
add
push
mov
js
push
stos
push
xor
pusha
and
push
arpl
push
in
outsl
cmp
pop
ja
push
sbb
hlt
mov
sbb
sbb
sbb
dec
repz
mov
jl
psrad
repnz
sti
js
aam
aam
inc
mov
out
in
cli
mov
popa
in
dec
push
aaa
mov
mov
push
es
mov
inc
sbb
loopne
fdivrs
sahf
int3
test
mov
cmp
xor
ret
and
sub
sbb
stc
and
pusha
cmpsb
pushf
andl
lret
dec
lea
jno
outsb
jle
das
sub
push
dec
loop
cmc
das
pop
pop
cwtl
cmp
ficoml
dec
cltd
ljmp
pop
mov
in
sti
and
call
fwait
mov
inc
add
cmp
cmp
push
insl
mov
mov
test
xchg
sbb
adc
repz
pushf
test
dec
outsl
arpl
cld
pop
cmp
push
outsl
mov
ret
pushf
outsl
xor
sub
mov
mov
pop
xchg
adc
mov
popa
scas
jg
lea
cmp
shll
fadds
out
dec
dec
or
xchg
or
or
movl
lahf
clc
in
je
ret
in
mov
pop
mov
cs
arpl
jns
xor
shlb
rorb
dec
push
mov
pop
in
pop
shl
xchg
bound
and
and
das
test
lods
mov
xchg
and
hlt
mov
mov
add
jne
jbe
pop
stos
sbb
sbb
loope
mov
push
je
adc
cmp
out
mov
pushf
dec
xchg
aas
int3
in
xchg
jb
addr16
outsb
pushf
js
cltd
mov
out
add
enter
jo
xor
xor
sub
or
loop
sub
ja
fbld
imulb
sbb
inc
xor
adc
in
mov
pop
push
dec
outsb
int3
or
jnp
jmp
adc
xchg
jns
lea
into
in
in
std
mov
ret
mov
add
jp
cmp
xchg
ss
adc
ja
adc
mov
arpl
ret
je
cmpsb
cwtl
push
mov
jecxz
jmp
daa
xchg
outsl
sti
int
push
pusha
scas
pop
ss
or
mov
scas
fidivs
rcll
cmp
mov
push
inc
loope
push
jb
sbb
and
lods
mov
mov
mov
mov
repnz
sub
lcall
aad
jo
outsl
mov
stc
es
mov
std
sahf
cmp
ret
add
repnz
pop
mov
mov
cmp
inc
gs
push
data16
in
jno
xchg
xchg
xor
adc
mov
push
loop
mov
jne
sti
rcr
sub
xor
xor
lcall
pushf
arpl
fs
mov
testb
mov
imull
adc
pop
inc
push
dec
xor
sbb
xchg
push
iret
test
into
sub
push
out
or
and
test
aam
out
cmp
mov
mov
mov
sahf
sbb
iret
push
pop
sbb
and
mov
xchg
pop
cmp
cmpsb
add
dec
lock
mov
dec
xchg
adc
scas
cmp
adc
sbbl
fxch
popf
or
add
pop
imul
out
xor
repz
sub
aas
and
xor
outsb
mov
push
repz
inc
cli
in
jmp
and
jp
sahf
inc
enter
rcr
clc
pop
cwtl
or
xchg
mov
popf
outsb
inc
sti
xchg
mov
push
movsb
mov
add
xor
in
push
test
sub
sub
or
or
cld
mov
bound
stos
and
adc
lea
enter
imul
sub
push
icebp
add
sbb
ja
jnp
fdivp
or
gs
sub
arpl
fs
les
imul
insb
into
pop
dec
sub
sub
imul
call
push
pop
lock
adc
inc
shll
sub
push
xchg
out
add
cld
loopne
xor
filds
xor
mov
cli
aad
ret
decl
notl
adc
mov
mov
sahf
xchg
push
inc
out
lock
cmpsb
movsb
scas
cmpsb
add
mov
pop
pop
jns
add
std
and
sub
cmp
les
push
inc
xor
jp
test
xor
out
andb
fwait
or
data16
inc
xchg
cmc
push
xchg
inc
mov
pop
or
jae
inc
cltd
jle
sbb
cli
ds
sbb
lret
scas
fs
out
notl
cltd
sub
inc
call
shrb
mov
push
push
fnsave
mov
ficompl
cmp
dec
inc
fistl
push
or
xchg
jmp
in
decb
mov
mov
scas
outsb
leave
jge
loop
sbb
mov
mov
dec
jno
xor
dec
fsubs
and
sub
pop
push
mov
mov
adc
xchg
test
clc
lods
push
hlt
fs
ss
dec
inc
leave
and
rcl
ret
mov
mov
xor
je
sbb
pop
ljmp
mov
sub
subb
or
jne
push
test
xor
mov
push
push
in
inc
repnz
adc
and
scas
int
pop
subb
dec
mov
mov
push
mov
test
cmp
lret
stos
mov
dec
loop
imul
inc
notb
hlt
das
jns
mov
mov
das
femms
les
xchg
in
sbb
outsb
mov
dec
jo
cli
insb
push
pop
jle
push
cmp
sub
sbb
or
cld
fsubrp
out
fdivr
int3
mov
mov
pop
insb
outsb
pop
jle
push
cmp
sub
sbb
or
cld
fsubrp
out
fdivr
int3
mov
mov
pop
insb
outsb
pop
jle
push
cmp
sub
sbb
fsubrp
out
fdivr
int3
mov
mov
insb
outsb
pop
jle
push
cmp
lods
scas
pushf
mov
inc
inc
fdivr
mov
push
arpl
mov
movsl
push
xchg
test
inc
adc
outsb
xor
and
scas
jne
addr16
inc
incb
mov
movsl
push
xchg
test
cmc
pop
in
aad
lds
and
mov
push
into
push
incb
lods
push
mov
cs
pop
std
dec
int
lds
sahf
push
lods
dec
int3
jge
jne
or
fsubrl
inc
xchg
push
repz
jle
dec
adc
add
mov
fdivrp
pushf
ja
jge
fimuls
dec
pop
xchg
bound
stos
fistps
lret
push
jbe
fs
or
jmp
fidivs
push
mov
add
ret
sub
push
popa
into
pop
lea
add
lret
cltd
into
push
jnp
push
mov
mov
pop
push
mov
dec
sub
nop
mov
cmp
dec
mov
gs
hlt
inc
out
in
sub
outsb
mov
cwtl
adc
dec
xor
inc
cmc
stos
lea
push
adc
inc
adc
jp
or
xchg
jbe
sub
inc
push
mov
push
incb
jl
mov
loop,pn
cmc
dec
aad
fsubrl
sahf
cmp
scas
insl
fidivrs
dec
incb
fstps
rorb
icebp
xchg
andl
cmp
cmp
jne
add
fidivrl
imul
cmc
cs
xor
add
pop
xchg
or
inc
notl
mov
iret
and
leave
inc
stc
dec
in
dec
mov
jle
outsb
xor
mov
gs
push
incb
mov
movsl
push
xchg
test
cmc
pop
in
aad
lds
sahf
and
scas
jne
gs
push
incb
mov
mov
shl
in
cltd
sub
cmp
add
pop
addb
xlat
xchg
dec
jno
push
das
loope
cmp
inc
pop
xor
ret
or
ficoml
cmovno
ljmp
movsl
xor
cwtl
jb
push
pop
push
jnp
mul
cs
mov
ret
fidivs
xor
ret
xor
std
mov
repz
inc
pop
lret
inc
aam
fdivrl
movsb
js
mov
xchg
cmp
mov
inc
je
xchg
mov
outsb
mov
xchg
mov
adc
pop
mov
stc
stos
xor
xlat
xlat
jbe
xchg
push
dec
add
inc
pusha
dec
sbb
ret
mov
mov
sub
adc
fidivs
dec
mov
push
push
stos
inc
repz
inc
adc
ja
fisubrl
jmp
mov
mov
cmpsb
jo
dec
gs
pop
mov
addr16
lahf
in
sbb
cmp
int
sbb
lds
pop
sbb
jle
shl
inc
fsubrp
and
add
icebp
inc
jo
sti
pusha
es
or
mov
mov
movsb
pop
jo
xchg
xorb
shrb
dec
mov
mov
movsb
dec
andl
sub
xor
pop
pop
in
imul
outsb
add
jmp
daa
repz
out
loope
add
or
lds
fisttpll
push
dec
mov
push
sarl
cmc
loop
mov
mov
div
jg,pt
cmpsb
jg
xchg
and
inc
mov
js,pn
inc
sub
sahf
stc
mov
pop
sub
pop
push
imull
imul
ret
cmpsl
call
xor
data16
jno
mov
insl
sub
popa
lcall
push
shrb
jbe
and
lock
rcll
sbb
stos
dec
iret
rclb
fsubr
outsb
push
jp
xchg
xor
and
out
std
mov
int
dec
or
notb
les
ljmp
mov
add
or
push
adc
pop
cmpsb
cld
pop
inc
stc
jmp
jbe
and
enter
dec
mov
out
hlt
fnstenv
xchg
mov
int
js
call
pop
mov
push
adcb
stc
dec
xor
pop
adc
loopne
popf
dec
push
stos
cwtl
lahf
mov
push
notl
cmp
push
xchg
or
loop
dec
mov
adc
dec
and
cmp
pop
xchg
add
add
popl
mov
jnp
hlt
dec
outsb
xchg
outsl
jl
inc
inc
add
je
mov
and
jae
stc
mov
dec
inc
jecxz
test
fs
xor
scas
cmp
orl
pop
and
stos
push
imul
jge
add
subb
jp
sub
xchg
cli
fisubs
aam
inc
ss
data16
ja
jg
xchg
adc
cli
mov
testl
mov
inc
aad
shll
and
test
cmp
inc
hlt
into
nop
shll
and
dec
mov
jg
fidivl
pushf
xchg
push
insb
ja
jbe
sbb
dec
pop
xchg
loop
lcall
push
pop
loop
mov
std
insb
lods
sbb
add
and
push
stc
leave
lcall
into
sbb
lcall
popa
inc
mov
cmp
fistpll
xchg
cld
mov
int3
cmp
test
jno
mov
and
insl
les
sbb
push
clc
xlat
jb
shrl
jmp
sbb
scas
call
push
scas
lret
xchg
dec
in
mov
mov
shl
pop
jge
dec
fstpt
xchg
cwtl
addl
enter
and
outsb
adc
aas
dec
pop
xchg
out
les
sbb
imul
xchg
push
mov
bound
fsubrs
sbb
icebp
lods
loope
inc
jmp
xchg
jne
test
iret
and
mov
push
mov
push
test
arpl
in
xor
repz
shrb
or
movsb
movsl
popf
stos
adc
aas
daa
outsl
jo
adc
sti
dec
sbb
jne
sbb
loop
outsl
xchg
mov
daa
nop
sahf
sub
mov
add
clc
pop
shll
sub
ljmp
sbb
insl
ja
lods
jecxz
loop
out
cmpsl
ja
mov
call
mov
pop
and
adc
mov
push
mov
and
mov
push
xchg
add
pop
jae
pop
mov
fstp
aam
and
loop
into
or
enter
cmp
cli
mov
notl
scas
sub
icebp
outsl
ds
cmpsl
fisttpll
pop
and
mov
das
jle
mov
pusha
cmp
inc
arpl
imul
insl
and
out
mov
orl
je
fwait
jae
sub
and
int
xchg
jl
test
jo
xchg
adc
inc
out
sahf
mov
fisttps
xchg
dec
cmc
gs
jle
cli
adc
sbb
adc
dec
movsb
ja
push
cmp
jmp
movsl
cmpsb
mov
aam
cmp
fsts
xor
js
push
popa
stos
mov
fbld
and
pop
sbb
adc
sbb
xor
aas
push
js
aaa
inc
hlt
cwtl
sti
cli
lret
fisubrs
inc
xor
cmp
enter
andl
mov
sbb
ds
outsb
lds
mov
add
xchg
cmp
jno
mov
in
insl
adc
push
dec
ret
inc
loopne
sbb
dec
jne
xor
stc
dec
pop
repz
sti
push
adc
dec
movsl
pop
fidivrs
lock
pop
xchg
daa
jmp
sbb
lcall
inc
fdivs
and
nop
int
stos
pop
in
cmpsl
and
add
xor
xchg
lahf
cwtl
jl
push
into
jmp
stos
push
inc
test
jl
mov
test
add
stos
les
cwtl
and
xchg
jno
jmp
ret
push
mov
aaa
cmp
jnp
mov
push
mov
insb
lcall
sbb
ljmp
jbe
mov
dec
test
cwtl
scas
arpl
jne
addb
cld
jp
rcrl
or
jno
imul
xchg
jnp
sbbl
fidivs
dec
pop
cmpsl
jmp
dec
or
enter
xchg
mov
cmp
sbbl
jno
lret
mov
add
loopne
out
jge
xchg
push
add
push
push
and
hlt
and
fs
mov
outsl
test
mov
scas
je
test
cmp
lret
sbb
fwait
cmp
icebp
clc
dec
test
es
outsb
mov
xor
orl
or
push
aaa
sub
mov
pop
out
imul
movsb
xor
scas
jl
lds
sbb
cmc
popf
data16
icebp
into
xchg
cmp
imul
sar
icebp
xchg
push
sub
push
add
mov
xchg
loope
push
xchg
push
cmpsl
call
das
lahf
mov
imul
lods
loopne
cwtl
fwait
push
cmp
xchg
leave
mov
pusha
fildll
es
dec
pop
mov
sub
cwtl
cmp
inc
xor
in
cwtl
sbb
add
test
ret
arpl
addr16
xchg
sbb
jbe
add
xor
mov
leave
xor
mov
outsb
push
in
ljmp
sbb
jae
lret
inc
cmp
push
mov
xor
cmp
int3
mov
fs
fidivs
inc
jo
lret
notl
xor
adc
push
jg
cmpsb
push
sub
imulb
mov
sbb
aam
sbb
out
xor
addr16
sbb
mov
in
or
cmp
mov
xchg
popa
push
push
lock
inc
add
out
imul
push
fistpll
xor
xchg
jp
or
xor
ds
jae
mov
add
rcrl
outsl
mov
subl
mov
mov
fnstsw
call
push
xchg
push
pop
loopne
push
decb
shlb
aam
cmp
popfw
stos
test
adc
aam
daa
ret
xchg
sbbl
pop
out
mov
neg
mov
das
imul
and
adc
adc
mov
adc
ss
fs
subl
mov
add
jno
mov
fcoms
stos
int3
enter
ret
lahf
les
fidivl
mov
mov
mov
inc
jl
push
mov
lds
out
fsub
push
and
cwtl
cmp
xlat
fsubl
inc
out
imul
lock
mov
xor
or
inc
scas
xchg
mov
pop
inc
gs
adc
adc
aaa
push
jle
cmp
pop
int
or
cmp
movsb
repnz
fwait
sti
jbe
incb
push
fsts
and
aas
inc
mov
xor
jg
inc
inc
jnp
pop
lds
rolb
inc
add
in
jb
std
ja
push
movsl
cmp
or
inc
and
aad
and
subl
test
inc
push
xchg
jmp
sbb
lods
or
xor
jle
fs
das
scas
dec
push
jbe
jl
out
outsb
rclb
push
fstpt
sub
lock
add
xchg
das
or
pop
icebp
jmp
xor
into
std
lds
call
adc
shlb
jbe
cmp
ret
mov
add
loope
sbb
mov
ds
mov
xlat
xor
mov
xchg
arpl
sub
inc
popf
lahf
inc
cmp
fnstenv
or
sbb
das
xor
popf
pop
jge
mov
fidivs
mov
dec
pop
push
mov
les
mov
add
cmp
aas
repz
push
push
in
out
loop
push
push
nop
int
pop
pop
xor
and
xchg
js
jg
add
mov
mov
dec
xchg
xchg
data16
imul
pop
stc
out
outsl
mov
mov
pop
cmp
dec
in
in
mov
hlt
test
arpl
xor
xlat
cwtl
std
mov
out
es
dec
cmpsl
dec
fwait
dec
inc
cmp
jb
in
repnz
jo
mov
test
popa
int3
inc
test
dec
mov
mov
mov
xchg
xchg
pop
mov
arpl
negl
lods
inc
sub
lods
int
rorl
pop
adc
jns
or
cld
lock
mov
mov
out
into
sbb
in
inc
sub
out
xor
outsl
mov
jo
aaa
push
push
stos
or
cmc
xchg
lea
loopne
stc
jp
mov
push
and
roll
insb
xor
push
cmp
lds
or
pop
addr16
mov
mov
push
pop
push
and
and
pop
test
adc
cwtl
push
and
mov
dec
xchg
adc
in
push
xor
mov
sti
mov
adc
inc
inc
or
cwtl
mov
rorl
mov
and
pop
jle
shl
imul
dec
inc
fs
mov
das
fcoml
shlb
cmpsl
xchg
xor
sbb
or
cmc
ljmp
cmpsl
dec
push
std
mov
sub
mov
xor
add
xchg
push
sbb
movsl
push
xchg
add
jg
aam
inc
xlat
cmpl
push
insl
inc
mov
mov
inc
test
dec
dec
push
scas
lock
jg
addl
or
dec
std
push
je
std
mov
pop
scas
push
movsb
push
lea
pop
jb
mov
addr16
dec
ds
iret
gs
mov
orl
out
je
mov
add
xchg
gs
movsl
mov
loop
das
or
das
fsubs
leave
aam
lret
mov
lock
sub
out
aad
lret
bound
mov
mov
xor
dec
lods
ljmp
cmp
daa
fsub
add
movsb
push
mov
lds
aad
xchg
mov
loope
adc
xchg
cltd
xchg
xchg
ret
mov
mov
xchg
bound
pop
arpl
mov
enter
je
xor
mov
repz
outsl
adc
xlat
inc
jo
jns
cmp
cs
lret
insl
dec
je
iret
push
mov
fmuls
cwtl
cmp
sbb
stos
push
pusha
dec
hlt
pop
out
loope
push
cmp
int3
fcoml
and
test
and
pop
stos
lcall
jo
cs
loopne
xor
adc
lahf
jge
les
xor
xor
sahf
imul
xchg
icebp
push
and
or
xchg
xor
jbe
xchg
xchg
adc
scas
push
gs
lret
xchg
and
sti
mov
push
cmp
insb
ret
cltd
dec
mov
adc
inc
push
push
mov
lret
fsubs
outsb
repnz
jns
popa
mov
sub
das
adc
add
ja
pusha
jne
scas
xorl
pop
and
cld
mov
aas
leave
out
ret
jno
dec
mov
jecxz
dec
insb
movsl
mov
pop
sub
cmpsl
mov
in
and
lds
aaa
mov
rcl
test
push
ja
aam
sahf
in
lahf
inc
xchg
inc
cmp
repnz
cmp
xchg
mov
cmpsl
dec
std
cmp
fldl
xor
insl
jl
in
jbe
xchg
test
mov
inc
or
cs
shlb
repnz
imul
cmpsb
mov
popf
cld
xchg
daa
outsl
push
sub
sbb
pop
leave
xlat
dec
clc
dec
imul
add
aam
dec
fidivl
fstpt
movsb
mov
and
scas
ds
cmp
dec
sbb
push
loop
mov
inc
ljmp
mov
inc
imul
ja
push
lahf
push
add
push
outsb
push
pusha
dec
mov
rol
xor
mov
push
in
inc
pusha
jno
lds
stc
add
shr
subl
leave
pop
cmp
adc
shr
xor
mov
pop
mov
dec
fildl
imul
sub
add
cmp
push
sbb
cmpb
push
xlat
pop
add
fcompl
jge
js
mov
pop
cli
adc
fimull
jecxz
out
in
sbbl
xor
xlat
mov
xchg
sub
outsl
push
dec
mov
mov
push
xchg
test
xchg
sahf
fwait
loopne
pop
mov
test
push
adc
lock
jns
lock
mov
jbe
cmp
pmulhuw
inc
test
stos
ffree
into
les
cmp
fstpt
sub
xchg
ds
jnp
xor
das
in
pop
pop
push
dec
sbb
cmpsb
cmc
testb
jbe
cmp
pcmpeqb
lahf
xchg
inc
lahf
repnz
insb
fwait
xlat
push
add
cvttps2pi
jbe
add
out
in
and
and
adc
xor
push
or
mov
out
push
jo
out
pop
jmp
outsl
push
fistl
mov
aam
mov
add
in
fs
movsl
mov
aas
push
add
ret
mov
hlt
popa
jge
fdivl
dec
xor
push
stos
inc
push
out
imul
je
dec
imulb
fst
rorl
jl
xchg
dec
lock
adc
fcomi
pop
adc
std
outsb
push
ret
cld
cmp
lret
je
fucomp
inc
je
fcomps
shrl
push
pextrw
pop
sub
add
inc
xchg
out
mov
mov
shl
inc
xlat
ficomps
pop
mov
xorl
or
jo
mov
stos
fcoms
xchg
dec
xorl
add
lods
xchg
mov
mov
fnstsw
lcall
xor
pop
or
add
sti
pusha
pushf
or
mov
add
scas
fildl
xchg
lahf
mov
rorl
dec
add
mov
cli
add
jns
sub
add
xlat
mov
add
fndisi(8087
mov
ja
xlat
jae
xor
sarl
in
rorl
incl
in
adc
sbb
pop
sarb
fcoml
xchg
das
movsl
xor
jb
enter
mov
aaa
ds
push
jno
xchg
or
sub
outsb
es
in
cmc
inc
mov
cld
push
iret
cltd
popa
or
dec
add
dec
jle
push
out
inc
add
push
xchg
mov
out
push
fadd
js
or
repnz
popa
cmp
push
adc
mov
stos
inc
jo
sub
add
fs
fildl
jmp
sbb
mov
aam
add
mov
push
nop
insl
inc
aaa
cmc
and
dec
jno
inc
xor
jnp
insb
outsb
rcll
and
mov
push
out
add
push
cltd
loopne
pushl
adc
fimull
mov
jecxz
pop
mov
mov
scas
in
or
adc
fs
adc
dec
ficompl
ret
pop
and
jb
push
repnz
xchg
mov
mov
lret
je
push
jns
dec
push
lret
mull
iret
js
in
push
out
shr
aaa
negb
inc
pop
popa
jns
xor
jns
outsb
rorl
inc
xor
movsw
or
movsl
sbb
mov
loop
aam
fs
cli
jne
jmp
mov
lods
mov
int
scas
dec
push
or
ljmp
orb
or
cmp
pop
jnp
out
fisubrl
jl
test
aas
xchg
pop
repnz
rcll
mov
mov
ret
mov
cld
nop
dec
pusha
std
jmp
leave
push
lret
ficompl
popa
frstpm(287
push
sbbl
xor
mov
push
ds
std
sahf
xor
clc
mov
xchg
shlb
arpl
xchg
stos
mov
jle
imul
scas
jbe
xchg
cmpl
push
mov
mov
mov
mov
rclb
or
arpl
sbb
loope
push
inc
js
loopne
lahf
add
lsl
pop
inc
jle
jns
lahf
call
xor
xchg
sbb
pusha
out
lret
mov
loopne
mov
push
xchg
jle
push
xor
shrl
xchg
insb
aaa
cwtl
int3
cmpsb
or
inc
inc
popf
cld
inc
jmp
inc
adcl
test
jmp
repz
pop
mov
repz
xor
add
test
inc
lahf
jb
out
hlt
and
pop
adc
jmp
not
or
ja
in
jnp
jmp
scas
push
push
lea
fistl
mov
in
push
xchg
mov
and
enter
mov
popa
loopne
fsts
mov
xchg
cwtl
push
outsb
test
and
adc
or
in
shll
dec
mov
lahf
xchg
in
es
add
cltd
mov
cmp
add
mov
push
mov
adc
xchg
movsl
cmp
ljmp
rcrb
repz
or
arpl
mov
iret
aad
jo
popl
mov
xchg
sbb
xor
xchg
fisubrl
fdivrs
mov
data16
jle
scas
hlt
push
mov
popa
mov
in
mov
xor
std
loopne
add
xor
inc
dec
adcl
addl
lret
xor
incb
fwait
test
and
mov
in
mov
test
out
cmp
or
out
mov
jbe
mov
ljmp
push
xchg
stos
sub
loop
daa
add
xor
jle
sti
and
test
add
gs
jle
test
dec
sti
cli
xchg
pop
ret
push
cwtl
adc
cld
cmpsb
outsb
dec
push
shll
jecxz
sub
mov
cmpsb
dec
jecxz
and
mov
push
out
sbb
sahf
daa
pop
leave
mov
sub
fwait
lcall
mov
cmp
jle
lods
out
xchg
out
xor
adc
lds
adc
movsb
loope
jl
cwtl
rcll
std
les
and
push
bound
enter
clc
and
outsl
scas
and
adc
pop
mov
fisttpl
cmpl
pushf
insb
mov
jns
cld
xlat
push
mov
fldcw
adc
scas
sub
or
fs
jo
in
dec
pop
mov
ffree
sbb
xchg
xchg
imul
scas
pop
and
mov
cli
pop
and
lret
xchg
cwtl
mov
xchg
sbb
test
inc
jmp
notl
cli
pop
inc
xchg
push
ds
jl
lahf
cmp
popf
or
sub
fildll
call
ret
cmp
push
pushf
aas
bound
cmpsb
mov
inc
xchg
popf
int3
push
jle
insb
cmp
cmp
dec
mov
cmp
pushf
aaa
pop
adc
push
lahf
test
cmc
pop
in
aad
lds
sahf
and
scas
jne
gs
push
incb
mov
movsl
push
xchg
test
cmc
pop
in
aad
lds
sahf
and
scas
jne
gs
push
incb
mov
movsl
push
xchg
test
cmc
pop
in
aad
lds
sahf
and
scas
jne
fs
push
incb
mov
cmpsl
push
xchg
test
negl
dec
push
jle
outsb
lret
and
mov
in
xor
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sub
pop
push
outsl
inc
jg
addr16
jo
aas
mov
loop
shr
loop
mov
loop
xchg
scas
cmpb
outsl
inc
jg
mov
adc
add
clc
iret
loop
mov
add
mov
mov
mov
dec
outsl
pop
jg
pop
or
adc
fistpll
lret
loope
jmp
add
add
add
cmp
fdivrp
and
sti
cmp
push
sbb
sbb
pop
adc
cmpsl
lea
sbb
fists
push
xor
fucom
loop
lret
jg
daa
sbb
jb
cli
cmc
jae
decl
out
call
bound
cwtl
adcb
andb
add
shl
xor
add
out
cmp
mov
mov
aaa
pop
cli
mov
mov
aaa
in
pusha
rclb
xor
ljmp
add
adc
adc
aas
sbb
jp
xchg
fldenv
sbb
jp
xchg
repnz
sub
or
inc
jb
mov
jb
cmpb
outsl
push
jg
adc
sbb
jmp
cli
out
stos
mov
add
pop
pop
aaa
push
es
push
arpl
adc
outsl
xchg
lods
mov
imull
bound
outsl
inc
or
jle
inc
aas
lock
stos
xchg
mov
hlt
loop
sub
push
push
or
pop
inc
sbb
and
adc
add
repnz
loop
shr
ret
mov
mov
push
outsl
inc
jg
mov
adc
add
repnz
loop
shr
ret
mov
mov
or
sub
sbb
mov
int3
add
int
dec
sbb
mov
and
out
and
xchg
repnz
repz
push
subl
and
and
out
stos
dec
push
push
sub
enter
cmp
incb
add
movaps
arpl
jbe
imul
stc
stc
push
call
xchg
inc
inc
mov
and
insl
xchg
jmp
push
xchg
imull
add
pop
mov
in
cmp
mov
add
or
cmpsb
loopne
in
adc
ret
fistl
aam
mov
cmp
cli
mov
adc
repz
push
mov
push
inc
jle
add
in
mov
xor
lods
jl
mov
add
jg
mov
aas
push
ds
sbbl
in
sub
push
pop
mov
aas
sub
fists
xor
pop
sub
test
pop
push
inc
loop
pushf
out
fldenv
sar
mov
jmp
ja
ret
int3
jne
sub
fstpl
add
and
std
jge
jp
inc
jmp
push
pop
aaa
push
add
xor
loop
mov
mov
leave
fnstenv
sarb
test
stos
pop
and
and
lahf
jl
mov
cmp
mov
sub
xchg
mov
and
loopne
mov
add
sbb
call
inc
jmp
movsb
jb
fstpt
or
fisubrs
imul
inc
xchg
insl
pop
dec
int3
or
lcall
iret
mov
mov
adc
ret
dec
adc
divb
fmuls
mov
in
add
pop
push
inc
icebp
inc
repnz
adc
sub
sub
std
sub
cmp
dec
jmp
mov
push
cmpsb
lods
push
add
aam
or
inc
jp
or
xlat
icebp
push
out
sub
in
add
out
mov
popa
adc
xor
out
adc
mov
cmpsl
and
adc
sub
mov
mov
std
sbb
jbe
int3
lret
jl
inc
add
pop
lods
inc
in
lcall
sub
insb
dec
repnz
lret
jmp
push
jge
sbbl
xchg
adc
pop
mov
jno
aad
pop
nop
inc
mov
arpl
test
xchg
addr16
int
jg
mov
push
or
and
test
cmp
xchg
mov
pusha
jg
adc
and
xor
lret
dec
lock
and
inc
loope
sub
and
push
adc
jne
mov
or
mov
cs
push
sti
mov
movaps
int
lds
pop
dec
inc
jbe
rorl
shll
add
in
sbb
push
in
lahf
sar
xchg
dec
push
jne
or
repnz
mov
repz
aam
scas
xchg
mov
pushf
sarl
push
mov
jp
in
xor
jle
insb
pop
repz
pop
movsl
pop
jae
js
dec
mov
xchg
sub
icebp
stos
sub
mov
add
loop
test
arpl
int
pop
push
sub
loopne
out
adc
jle
loopne
pop
scas
sub
outsl
mov
pusha
xlat
enter
sbb
stos
or
fdivl
sub
xor
jno
cmp
dec
addr16
mov
mov
ja
cli
jo
push
add
push
cmpsb
mov
lcall
and
pop
mov
jno
or
leave
fisubl
sub
outsb
fucomp
mov
test
adc
pop
and
cltd
inc
lret
inc
fldl
lahf
in
mov
mov
stos
lock
pop
in
mov
fdivrp
adc
mov
stos
sbb
test
das
xlat
clc
push
add
sub
jge
sbb
clc
add
pop
jae
jo
mov
push
jecxz
xchg
fsubl
sbb
dec
and
xor
push
cmp
arpl
aam
lds
dec
std
jnp
ss
shrb
js
pop
leave
adc
call
pop
inc
cld
data16
cs
pop
loop
sub
hlt
cmp
xchg
in
or
rclb
insl
fsubs
or
or
in
jno
bound
or
repnz
fs
xlat
shrl
pop
xchg
stos
jns
fidivl
inc
aaa
fs
jg
xlat
mov
mov
fs
sbb
jge
xor
dec
push
mov
dec
cmp
addb
mov
sub
jbe
cld
adc
adc
xor
cmp
mov
mov
in
mov
xchg
cmc
and
and
mov
enter
scas
out
out
int3
fdivrs
js
jmp
das
push
pusha
testl
xlat
push
xacquire
and
int3
jmp
arpl
loope
push
jne
xchg
mov
cmp
or
sbb
pop
and
out
and
scas
mov
mov
rcl
inc
subb
sbb
mov
test
jae
testb
mov
lds
ret
jo
inc
stos
pop
ss
and
mov
mov
lods
into
hlt
inc
pushf
dec
cmp
mov
sub
les
jns
xchg
aas
add
sub
std
mov
data16
sub
fisubs
movsl
pusha
inc
sbb
clc
aas
rolb
out
push
rcll
mov
inc
into
lock
xor
push
iret
mov
shlb
movsb
pop
add
in
push
test
lcall
ret
xchg
xlat
xchg
add
cltd
and
pop
adc
fidivrs
lret
inc
or
rolb
js
out
mov
adc
sbb
jno
push
push
adc
in
pop
and
push
pop
out
jo
inc
ljmp
stos
imul
add
pop
inc
cmp
clc
jg
aad
out
lds
enter
icebp
cs
fwait
xchg
hlt
lahf
mov
mov
lret
lds
xchg
iret
imul
test
mov
pop
hlt
fwait
je
popf
popf
mov
insl
popf
add
xchg
mov
into
and
lds
mov
outsb
outsb
mov
cmp
jb
scas
mov
imul
lea
adc
cli
mov
push
mov
and
or
gs
aam
jne
int3
mov
mov
sbb
aaa
fs
in
push
icebp
ljmp
les
cmc
mov
fdivr
jo
xor
jecxz
pop
fmuls
cmp
test
xorl
sti
push
jae
push
mov
inc
out
test
and
lds
shl
inc
or
stos
jg
adc
dec
sbb
sbb
out
cmc
cs
insb
xchg
xlat
cwtl
mov
xchg
mov
jge
stos
arpl
mov
mov
testb
sub
pusha
std
es
add
lea
scas
aam
pop
lahf
outsb
mov
loopne
cli
cmp
cmp
bound
xor
decl
enter
sbb
dec
add
lock
xor
mov
xchg
and
dec
sti
mov
outsl
stos
in
sarb
iret
sbb
lahf
pushf
inc
sbb
out
into
jo
pop
stc
pop
jae
jne
in
mov
fwait
push
fistpll
shll
push
aad
add
lahf
movsb
pop
cmpsl
sbb
lcall
lret
stc
sub
mov
mov
mov
xlat
fists
sbb
cmp
stos
xchg
jnp
jmp
sbb
sti
cli
and
adc
ss
jbe
sub
mov
adc
adc
cltd
imul
mov
add
cmp
mov
loopne
and
aam
fwait
hlt
push
pop
dec
jns
and
out
mov
xor
loop
mov
mov
ret
or
inc
and
ss
add
scas
cmp
shlb
out
mov
cwtl
push
and
ljmp
jl
jns
mov
mov
jge
jg
inc
pop
mov
inc
and
outsl
dec
mov
and
xchg
stc
sub
ret
pop
mov
lods
xchg
adc
mov
jne
rcrb
fsubrs
rcll
mov
shlb
lret
stos
jle
hlt
inc
jp
test
inc
add
aaa
and
push
pusha
jae
divb
push
mov
lret
call
cld
xor
out
jbe
fldt
jae
mov
aaa
pop
adc
inc
xchg
out
and
sbb
cltd
xorb
push
mov
mov
mov
mov
xchg
ficoml
sbb
jl
sahf
xchg
loopne
mov
xchg
loopne
adc
cmp
xchg
sub
test
in
pop
push
push
cmp
mov
test
xchg
mov
dec
xor
scas
sub
shll
mov
iret
ret
repz
cmpsl
jae
outsl
stos
cmc
dec
jl
addr16
pop
lahf
jbe
pop
xchg
dec
adc
xchg
testl
sbb
iret
xor
pushf
and
das
pmaddwd
xchg
cmp
mov
inc
shrl
clc
mov
xor
js
out
fwait
and
sub
mov
inc
add
mov
xor
lahf
and
dec
in
mov
add
int3
mov
jmp
ret
mov
inc
ss
ret
xlat
jl
ljmp
rcr
mulb
inc
cltd
cltd
pop
mov
mov
rcrl
cmp
mov
or
xor
mov
xor
sbb
out
or
sub
fsubrs
push
pop
sbb
dec
pop
cmp
mov
jnp
in
mov
xor
fcompl
mov
sbb
dec
repnz
les
call
sbb
mov
in
clc
loopne
daa
std
enter
pop
sub
cwtl
jo
ja
out
test
fwait
out
shrl
adc
mov
sbb
sbb
dec
dec
aad
sbb
shlb
pop
leave
aaa
ss
add
std
push
test
fdivl
notb
mov
aas
test
lret
stc
stos
push
das
pop
and
inc
push
repnz
cmp
int
xlat
testb
cmp
push
inc
nop
loop
pop
inc
pop
sub
cmpsb
mov
mov
sti
inc
aaa
push
sahf
or
jae
add
or
push
or
push
push
wrmsr
in
fnstsw
pop
push
jne
mov
movsb
mov
popa
push
dec
fadds
sti
inc
xor
dec
loop
daa
je
loope
cltd
mov
and
push
stos
and
mov
or
xchg
xchg
push
push
cltd
cwtl
sbb
jo
popf
jl
enter
pop
cwtl
leave
xchg
shlb
mov
movsl
pop
and
stc
mov
out
cmpsb
sti
sub
lret
xchg
test
dec
rorl
cmp
inc
popl
lcall
sub
pop
movsl
push
push
movsb
fildll
imul
out
jb
cmp
mov
dec
enter
sub
into
out
out
in
and
dec
call
jae
loopne
loope
cli
sbb
cmp
adc
rolb
das
sbbl
lds
loop
mov
mov
rcl
push
stc
sbb
adc
jbe
enter
inc
test
das
add
pop
inc
push
int3
mov
sub
and
movsl
aad
fadds
test
pop
repz
imul
adc
aas
push
icebp
adc
pop
cld
leave
fcoml
mov
dec
inc
push
fucomp
jg
mov
mov
and
outsl
icebp
mov
pushf
cli
stos
cs
ret
jge
out
jle
stos
bound
dec
push
mov
xor
pop
jecxz
rclb
sbb
sub
add
push
xor
cmpsb
call
or
push
or
aam
pop
loopne
push
jbe
pop
lods
leave
xor
lods
xor
and
testl
mov
test
cmpsb
pop
sub
and
or
or
pop
sahf
and
lahf
xchg
daa
cmp
jmp
push
inc
dec
or
mov
cmp
ret
shr
inc
push
jne
adc
jbe
add
or
test
pop
dec
push
mov
pusha
xor
mov
dec
cmp
in
stos
stos
leave
outsb
sbb
mov
and
bound
mov
sahf
mov
dec
pop
or
sti
push
pop
cmpsb
shll
insb
loop
jge
stos
jns
add
cmp
push
test
add
xor
sub
mov
cltd
and
pushf
dec
push
cmp
hlt
jnp
mov
jmp
cmc
mov
and
adc
fsub
daa
repnz
adc
pop
cmp
add
xchg
sbb
xor
sbb
std
sub
outsb
adc
sti
rolb
lahf
inc
xor
xor
arpl
xorl
pop
xchg
push
lea
out
sbb
lea
dec
mov
decl
and
mov
lods
pushf
ret
test
push
cmpsb
jmp
lret
xor
lcall
push
add
repnz
mov
add
sbb
stos
out
mov
or
call
and
lret
aad
in
repnz
sub
push
stos
and
rcll
mov
rorb
hlt
daa
inc
in
les
sti
pop
popf
pop
mov
inc
cmp
orl
movsl
sbb
aam
in
and
xor
movsl
scas
jp
cmpsl
lock
xor
mov
sub
pop
pop
sub
mov
cmpsl
fsubrs
push
enter
pop
dec
sbb
pusha
mov
out
and
jp
into
cmp
jl
scas
fcomps
es
pop
lret
push
sbb
push
outsl
inc
out
cmc
testb
push
jo
or
int3
sbb
ret
pop
jnp
cltd
cli
bound
pop
mov
daa
hlt
mov
lret
subl
cmp
or
sbb
movsb
movsl
push
imulb
sbb
adc
xchg
aad
jnp
ret
xor
mov
lods
sarb
jae
sub
push
inc
sbb
mov
loopne
nop
lahf
add
mov
dec
scas
test
push
mov
insl
lock
aaa
cltd
repz
pop
inc
outsb
cmp
jmp
fsubrp
insb
out
fcmove
cmp
sbb
popf
test
xor
push
fisttpll
shll
xor
mov
out
push
imul
xchg
mov
cmp
imul
and
je
jmp
les
and
sub
dec
in
or
cld
inc
cli
mov
sub
push
jle
outsb
pop
mov
ljmp
bound
mov
or
inc
popf
ret
mov
dec
sub
hlt
mov
pushf
andb
pop
pop
and
gs
leave
stc
mov
movsb
loopne
cmpsl
xchg
pop
outsb
mov
adc
fmull
bound
dec
subb
push
repnz
test
xchg
cwtl
pop
mov
insl
mov
mov
js
cltd
jle
cmpsb
cmp
inc
jecxz
arpl
fistl
stos
jne
mov
into
sub
jle
mov
jmp
inc
xchg
jo
xor
and
cmpsl
xor
popa
std
dec
js
shrb
mov
scas
xchg
jg
jle
cmpl
pop
into
push
mov
cmp
mov
xorb
call
cmpps
xor
cs
adc
pop
insb
clc
pushf
iret
ljmp
fiadds
das
adc
dec
pop
ljmp
movsl
and
sbb
add
jge
insb
pop
into
loop
jns
ficoms
xchg
icebp
in
jne
enter
lahf
inc
test
movsl
xchg
pop
addr16
mov
outsb
xchg
fdivrl
cmpsl
inc
aas
insb
sub
sbb
inc
pop
pop
test
adc
mov
imul
sbb
push
pop
out
pop
lds
mov
mov
nop
ja
sarl
fsubl
mov
adc
pusha
bound
scas
xlat
xor
mull
pushl
adc
gs
mov
pop
add
xchg
aam
stc
and
inc
pop
sbb
xchg
sbb
push
aaa
leave
test
iret
out
je
nop
add
stc
add
mov
test
aad
sub
sub
arpl
or
and
dec
inc
jb
in
and
add
out
mov
dec
rorl
push
ret
pop
and
call
cmp
pusha
mov
rorl
xchg
pop
andb
in
lcall
lcall
lcall
scas
and
daa
inc
cwtl
dec
mov
in
xchg
cmp
mov
jo
mov
dec
sub
insb
aad
fxch
sbb
negl
imul
test
inc
ljmp
xchg
cs
mov
xor
cmc
sahf
mov
aam
repz
add
mov
andb
sbb
mov
imul
int3
fs
fstpt
or
out
pop
xchg
push
mov
icebp
jp
push
or
mov
shll
jno
aas
and
mov
ret
inc
push
xchg
out
in
test
add
add
testl
pop
sar
fwait
inc
push
shlb
inc
test
mov
hlt
fsub
std
iret
pop
mov
int
sub
adc
punpckhdq
dec
push
jge
cmp
xchg
xchg
enter
test
notl
cmpsl
ret
in
flds
or
jle
push
fscale
jb
fcompl
xor
aaa
stc
sbb
xor
in
cmc
dec
push
outsl
aaa
mov
rolb
aas
mov
ret
into
cmpsl
xor
data16
test
sar
and
lahf
pusha
pcmpeqb
mov
dec
inc
xor
out
mov
and
loopne
jns
pop
sub
xchg
loope
rcr
fildll
mov
lds
cwtl
fldcw
pop
test
aad
sbb
flds
adcb
cmp
jl
pop
call
mov
imul
add
ja
push
imul
pop
into
add
and
xor
mov
jmp
add
cmpsb
sub
popf
mov
xchg
or
add
pop
ljmp
bound
xchg
mov
popa
rolb
mov
ja
movsb
call
sbb
sbb
pushf
js
pop
inc
mov
movsb
lea
dec
push
loope
dec
lcall
movsb
or
shlb
not
add
sub
pop
inc
sbb
adc
stc
std
inc
std
mov
lret
cmp
ds
mov
int
jecxz
jne
mov
mov
mov
mov
js
lret
test
jp
push
push
aaa
push
fmuls
adc
gs
xchg
inc
and
inc
int
xchg
pop
pop
push
mov
pop
jo
push
shll
xchg
push
repz
cmpsl
movsb
addl
push
cmpsl
jmp
ss
cmp
xchg
out
push
dec
lret
jb
out
adc
push
mov
vmaxps
add
mov
jg
sbb
cs
jb
std
xor
push
sub
mov
and
or
pop
mov
jecxz
ret
xchg
pop
lock
push
mov
cmc
aam
or
movsb
cwtl
mov
int
mov
mov
subl
push
xor
push
jge
xchg
scas
pusha
push
push
sbbl
in
sti
gs
jb
pop
sub
xor
lods
lock
ljmp
repz
sub
sub
mov
shlb
lcall
xor
ret
shlb
jecxz
mov
sub
movsb
jecxz
cmpsl
xchg
jg
mov
sub
inc
addb
andb
outsb
mov
enter
mov
jg
std
and
inc
lret
shrb
out
data16
mov
cmp
in
pop
in
sbb
sbb
lods
cmpl
fcmove
adc
stc
stos
jae
sub
stos
mov
mov
inc
out
int
loope
fcmovu
loope
pusha
inc
mov
mov
sbb
jbe
dec
sahf
add
je
and
pusha
mov
cmp
jp
mov
mov
and
mov
test
inc
mov
int
push
sub
stos
mov
popf
adc
fldl
jg
xchg
loope
mov
xor
mov
cltd
sub
in
xchg
mov
into
cli
inc
pusha
shll
ljmp
dec
mov
sarb
mov
das
cld
loope
mov
xor
call
int3
ficomps
inc
cmc
iret
insl
sbb
in
test
scas
adc
leave
sub
pop
aas
fsubl
lods
xchg
fbstp
cli
lds
jns
mov
xchg
inc
or
xchg
fcmovu
push
jno
cli
lds
into
gs
push
mov
or
push
stos
movsb
loope
push
fisubrs
orl
fildl
push
ficoml
ljmp
mov
pop
outsl
inc
jg
mov
adc
add
repnz
loop
shr
ret
mov
mov
push
outsl
inc
jg
mov
adc
add
repnz
loop
shr
ret
mov
mov
push
out
inc
jg
mov
adc
add
repnz
loop
out
ret
cmpsb
lahf
xchg
scas
mov
inc
dec
push
pop
outsl
inc
jg
mov
xchg
das
cmpb
iret
sbb
mov
pop
sub
push
jge
ljmp
cmpsl
xor
test
cli
pop
ljmp
push
stos
inc
mov
addr16
push
pop
mov
cmpsl
cmp
sub
sbb
or
cli
adc
lret
xor
xchg
lcall
xchg
dec
mov
sbb
or
cli
hlt
ljmp
push
ret
sub
xchg
push
push
ret
sbb
cmp
push
loope
cmp
jnp
jmp
jno
mov
add
lret
das
aas
or
pop
and
outsl
xchg
adc
daa
inc
rclb
xchg
ja
sub
push
sub
andl
mov
push
sbb
push
jp
cmpsb
xchg
cmp
push
pop
cli
scas
or
ljmp
fcomps
stc
mov
xchg
pop
inc
shl
and
sbb
lahf
pop
mov
daa
jmp
ja
cwtl
sbbb
insb
loop
loop
int3
push
push
cmp
scas
and
into
add
xor
xchg
push
pop
cmpsl
dec
mov
sbb
or
cli
pminsw
fisubrl
lret
dec
stos
push
lcall
xchg
mov
cmpsb
jns
dec
test
xchg
jle
jg
bound
adc
ja
or
movl
cmc
sbb
xchg
inc
scas
fs
and
xchg
add
inc
loop
push
jnp
sub
sbb
or
cli
pop
ljmp
push
stos
inc
lcall
xchg
dec
cmpsl
cmp
sub
sbb
or
cli
pop
ljmp
push
stos
inc
lcall
add
xchg
sbb
in
inc
mov
jmp
shll
or
sub
add
mov
push
nop
out
pop
mov
xchg
mov
adc
dec
loopne
or
push
jo
push
and
sbb
hlt
xchg
arpl
and
out
xor
cltd
adc
xor
ds
pop
outsl
pop
out
inc
outsb
xlat
lock
cs
rcl
cmp
das
fcomi
xchg
mov
push
push
arpl
sbb
std
lods
xor
push
xchg
repz
xchg
push
push
cmp
aam
roll
mov
sbb
mov
das
outsl
adc
jb
aad
mov
outsb
stos
or
cmpsb
stos
xchg
mov
cmp
aam
lcall
sti
adcb
xchg
popa
sti
jp
xor
popa
imul
fidivrs
repz
or
jns
std
add
pop
loopne
pop
pushf
sbb
sbb
cwtl
lods
or
js
pop
sbbb
in
fiaddl
int3
daa
aad
add
repz
arpl
shll
push
pop
or
int3
pop
add
rep
lds
pop
mov
add
jle
sbb
test
rclb
dec
and
dec
xchg
mov
push
mov
sbb
fidivrs
ljmp
cmc
xor
sub
js
push
lcall
aaa
mov
jo
sub
pop
lds
push
jae
lock
dec
les
loopne
sbb
adc
sbb
cmpsl
aad
dec
mov
mov
enter
lret
popf
sub
add
jns
insl
and
js
pop
mov
push
ss
cmp
mov
xlat
inc
cmp
jo
jmp
add
sti
cmpsb
add
pop
push
push
and
jnp
fldt
add
cmc
leave
in
pop
push
push
xor
xchg
pop
fadds
xchg
hlt
mov
test
mov
aad
xchg
insb
mov
cmp
movsb
cmp
dec
or
xlat
cltd
and
add
loopne
insb
inc
sbb
push
int
sub
inc
test
mov
insb
testb
int
jecxz
icebp
popa
jmp
stos
insb
and
stc
je
push
xchg
mov
cmc
test
lods
jmp
jno
pop
out
jne
add
or
insb
pop
dec
lods
xchg
dec
ret
stos
xchg
push
outsl
int
insl
push
movl
mov
dec
lock
inc
daa
jns
dec
cmp
lcall
xchg
jmp
push
lret
mov
add
shrl
mov
pop
xor
insl
out
popa
jmp
test
add
xor
add
or
xchg
fsubrs
or
fs
mov
jns
or
out
into
jmp
dec
dec
jle
sbb
insl
push
cmp
sub
and
leave
ja
mov
lgs
out
cmp
xchg
ficoml
sahf
repz
inc
and
nop
ljmp
stos
mov
cmp
add
out
mov
mov
sbb
test
jae
negl
sbb
test
push
or
out
cmp
repnz
and
jnp
scas
cmp
adc
fadds
clc
dec
mov
sahf
fwait
clc
xor
sbb
adc
test
cltd
inc
push
fdivrs
dec
jmp
add
fisttpl
test
iret
mov
sarb
push
inc
sub
inc
or
mov
dec
aas
mov
lea
aas
addb
sbb
out
pop
mov
mov
mov
jecxz
daa
inc
mov
mov
cmp
test
cmpsl
push
xor
cmp
push
dec
mov
mov
mov
jl
bound
cmp
ja
mov
pushf
mov
int3
mov
sub
arpl
pop
inc
ds
pop
sub
mov
pop
lret
mov
sub
xchg
xchg
in
fldcw
ja
dec
movsl
jg
sub
fs
scas
sbb
stc
std
jb
add
mov
mov
insb
clc
ja
push
jns
or
cmc
mov
in
outsl
cmp
cmpsl
dec
adc
out
xor
aas
inc
add
into
mov
adc
std
int3
push
sub
mov
mov
lret
test
orl
xor
pop
test
sbb
push
movsl
enter
push
jno
cmp
adc
mov
out
pop
jg
pop
cmpl
aas
lds
outsl
mov
enter
insb
push
test
or
call
nop
or
jbe
outsl
rcrb
inc
xchg
mov
pop
jecxz
pop
les
out
jmp
ret
pop
mov
test
mov
sub
fnstcw
test
into
mov
add
jbe
out
push
out
pusha
jmp
pop
lods
sbb
cld
sahf
fs
xchg
dec
sahf
popf
test
sub
popf
jg
inc
arpl
pop
push
mov
imull
inc
aam
pop
push
std
out
push
shl
xor
imul
sbb
mov
or
lods
fdiv
cmpsb
ret
fdiv
push
lret
roll
cmp
add
adc
ret
scas
inc
adc
inc
dec
mov
enter
jp
xor
imul
in
push
push
push
cmp
dec
mov
int3
inc
iret
cmpsl
push
xor
lods
dec
mov
out
fldt
mov
sub
inc
sub
mov
mov
mov
sbb
jle
lods
pop
or
testl
notb
int3
jecxz
es
adc
fidivs
test
jmp
jno
adc
fcmovnbe
scas
push
mov
leave
loop
rorl
dec
mov
sub
ror
sub
fdivr
jg
pop
lcall
pop
loope
pop
dec
sahf
scas
cmpsb
test
inc
xchg
and
push
out
mov
fdivr
xchg
mov
sub
leave
jmp
inc
lods
cmc
add
dec
push
push
dec
fsubp
hlt
and
out
nop
outsl
aad
lods
in
xchg
dec
test
push
mov
and
jmp
mov
sbb
cmp
lret
movsl
push
pop
adc
nopl
popa
int
ss
jp
push
inc
in
dec
and
fidivrl
test
pusha
or
les
xlat
test
fimuls
pop
adc
loopne
pop
cwtl
mov
lds
lahf
nop
outsb
or
clc
xchg
push
push
inc
mov
dec
lock
sbb
push
mov
repz
stc
addr16
into
or
outsb
xor
add
mov
and
pop
btr
pushf
or
enter
and
outsb
lock
into
jmp
js
fs
hlt
add
enter
iret
lods
and
dec
pop
jae
nop
rorb
aad
push
cmpb
mov
popa
rcr
jecxz
or
mov
xchg
mov
mov
jbe
or
pop
push
xorl
mov
sub
add
incb
and
pmuludq
mov
jmp
adc
or
xchg
popf
pop
loop
dec
dec
and
je
notl
push
call
jmp
in
js
sbb
dec
and
les
fmull
mov
stc
pop
dec
in
or
sub
sti
repnz
daa
mulb
aad
les
jbe
adc
movsl
pusha
data16
dec
nop
mov
mov
jo
fimull
cmp
cs
lahf
lret
lret
std
mov
test
sahf
roll
xchg
mov
push
fstpt
sub
sbb
mov
jecxz
pusha
test
pop
fdivrl
lret
sti
std
lods
mov
mov
cld
ficomps
outsb
mov
dec
out
cmp
repz
loop
gs
movsb
cs
sahf
in
lds
push
push
adc
ror
out
dec
pop
push
cmovns
loopne
mov
jae
stos
xchg
ja
cmpsl
popf
stos
add
xor
mov
xchg
dec
test
and
roll
mov
cltd
test
fcmovne
dec
push
inc
stos
sbb
and
pop
aaa
jne
mov
push
jb
adc
dec
stos
and
les
insb
jo
push
in
das
adc
std
lods
in
mov
xchg
push
jae
rclb
xchg
cld
add
dec
and
lods
adc
mov
adc
cmpsb
pop
or
pop
sub
pop
cltd
push
sub
popa
test
xchg
push
and
sti
xchg
ret
and
inc
arpl
decb
push
mov
fstps
lcall
sub
test
mov
icebp
and
cs
inc
loope
sub
jne
popa
roll
pop
lahf
aaa
ja
in
push
lret
aad
int
jmp
leave
inc
mov
fcoml
xchg
incb
repnz
xchg
pop
loopne
daa
mov
into
sahf
loope
add
lods
icebp
test
xchg
lcall
push
adc
loope
xor
pop
push
leave
aad
shll
pop
mov
pushf
aaa
sarb
push
ja
cmp
fdivl
mov
mov
push
mov
add
dec
fimuls
mov
pop
pop
add
cltd
dec
sbb
adc
aas
jb
mov
adc
and
popa
xlat
jne
cmp
cmc
cwtl
sbb
dec
dec
jnp
push
pop
dec
mov
iret
clc
inc
imul
das
les
addr16
lods
mov
scas
cmp
xor
fxch
out
rol
aaa
scas
mov
xchg
dec
rcrb
or
cmp
or
cmpb
arpl
inc
or
lods
push
sti
scas
xchg
xchg
mov
add
leave
inc
data16
in
adc
das
xlat
fists
scas
or
mov
jp
mov
add
pop
inc
out
ds
mov
mov
pop
clc
das
xchg
leave
lahf
dec
cmc
ja
dec
xor
jo
or
sbb
pop
outsb
sbb
add
and
mov
jb
adc
test
and
out
mov
mov
adc
and
test
push
fisttpll
out
nop
test
cltd
sub
call
divb
mov
subb
jle
xchg
pop
xchg
push
iret
inc
fwait
sub
pop
push
jo
out
xchg
dec
mov
shrb
and
jmp
subl
add
call
loopne
push
aam
jae
push
adc
scas
std
out
fisubl
xchg
into
loopne
jno
outsb
push
loope
stos
int3
add
in
imul
and
or
outsl
jge
repz
cmp
insl
xor
pusha
leave
shlb
fsubrs
arpl
stc
pop
inc
push
fstpl
int
leave
pop
cmp
lret
ja
sub
imul
mov
arpl
mov
pop
jae
loopne
mov
pop
mov
loopne
jg
jae
sbb
mov
cmp
stos
lea
insb
pop
cmp
loope
xchg
aad
std
lea
jge
sbb
jb
loope
mov
fdivs
add
xor
mov
adc
or
mov
aad
pop
xchg
or
xchg
sub
cmpsl
pop
shlb
push
aam
lret
dec
lahf
dec
jecxz
and
mov
stc
out
inc
insl
aad
nop
sbb
int
mov
pop
jp
push
test
push
stos
popa
lea
mulb
dec
cmp
data16
pop
mov
jmp
inc
cld
xchg
xchg
or
cmpsb
ss
lea
into
fwait
nop
mov
jl
mov
lods
inc
clc
add
repz
imul
jbe
pop
dec
mov
jg
pop
lret
xchg
push
repz
enter
mov
ss
mov
and
xchg
cmp
mov
repz
and
xchg
iret
cmp
mov
xorl
pop
dec
lret
and
xchg
hlt
in
pop
mov
pop
in
loopne
sub
js
or
xlat
pop
in
xchg
push
popf
jecxz
stos
jge
ss
mov
leave
sbb
mov
je
sbb
stc
adc
icebp
pusha
int
iret
imul
push
xchg
pop
push
sti
mov
dec
sbb
jae
mov
xchg
and
xchg
lea
outsb
push
cmp
movsl
sbb
add
dec
push
lret
adc
shrl
pusha
push
imul
into
cmpsl
mov
jmp
cmp
pushf
jecxz
clc
push
out
and
mov
xchg
dec
jno
push
adc
loop
and
clc
aam
cwtl
xor
test
pop
jnp
jb
adc
std
sti
sti
je
cmp
rorb
outsl
aad
pop
fbld
cmpsl
lret
pop
in
pop
cli
mov
lods
ljmp
cmp
pop
add
cli
push
sbb
pusha
pop
es
fistl
loopne
sub
inc
iret
inc
arpl
test
dec
adc
ret
mov
bound
aam
xchg
test
fnstcw
enter
push
dec
mov
jmp
stos
push
mov
daa
dec
orl
sbb
xor
xchg
shrb
arpl
imul
arpl
call
addl
sub
fadd
push
lret
inc
jge
nop
xor
imul
cmpb
xor
mov
repz
xor
xor
std
repnz
dec
cmpsb
rorb
xor
fyl2x
add
in
movsl
and
sbb
daa
or
inc
loope
xlat
mov
cmp
icebp
es
jae
adc
add
adcl
push
sbb
add
sub
mov
xor
push
sub
jb
mov
mov
mov
out
xor
cmc
fcmovne
cmpsl
in
into
outsl
fdivs
push
mov
mov
int3
loopne
fnsave
gs
sub
xchg
ja
js
or
cltd
inc
cmc
pop
sbb
jle
add
cltd
mov
subl
jp
imul
sub
mov
or
jae
fnstsw
idivb
call
std
popf
xor
stos
dec
jbe
cmp
outsb
xor
das
js,pn
mov
ljmp
aas
cmp
jns
lods
insl
xor
fsubrl
fst
fildll
lds
push
add
mov
cmp
or
add
lahf
popf
dec
add
mov
pcmpeqd
or
xchg
dec
aam
push
mov
lcall
hlt
xor
scas
inc
test
xor
add
adc
push
loopne
xchg
pop
inc
sbb
xchg
movsl
and
inc
pushw
mov
out
push
jmp
mov
sub
ss
loopne
jl
insb
es
repz
jne
sub
pop
sbb
aas
cs
sub
adc
cs
xchg
jp
sub
sbb
test
nop
cmp
insb
sbb
dec
jnp
mov
les
pop
cmc
pop
call
adc
xchg
loope
inc
das
mov
pop
lock
push
dec
lock
or
fimull
fmuls
and
andl
jbe
fs
iret
mov
data16
enter
test
pop
nop
lret
lret
sbb
and
pop
adc
xor
pusha
jae
cmpsb
sub
mov
icebp
lods
call
adc
ljmp
aas
jnp
adc
not
mov
xchg
ja
mov
push
push
push
xor
pop
and
lret
xorb
outsl
cld
ja
cs
or
or
gs
cmpl
sbbb
shl
stc
xor
mov
push
ja
mov
or
xchg
movsl
stos
jno
jg
dec
cwtl
mov
rcr
mov
sbb
icebp
pop
leave
cmp
sahf
in
orl
dec
fsubr
lcall
xchg
add
movzwl
mov
pop
arpl
inc
sti
popf
sub
jle
and
or
mov
xchg
int3
out
push
mov
sbb
or
imul
sbb
subl
out
fs
sti
jecxz
lock
jb
mov
xchg
fcompl
cwtl
js
pop
push
ret
dec
pop
push
popa
jl
jno
mov
sar
into
push
adc
xor
adc
ds
fwait
or
ds
xchg
pop
mov
movb
sbb
gs
push
rcl
jns
push
xor
neg
xchg
inc
cmpsb
inc
out
sti
fdivrp
sbb
out
ss
iret
sub
jno
inc
mov
pop
repz
into
push
movsb
sarl
iret
jecxz
push
dec
sbb
repnz
sub
mov
sbb
xchg
push
xlat
mov
insl
loope
push
in
pop
loope
xchg
bound
xor
lock
lahf
sbb
ds
je
adc
add
imul
int3
and
sub
adcb
into
in
push
ljmp
push
imul
add
adc
sbb
imul
push
inc
mov
daa
nop
mov
int3
inc
pop
xor
dec
outsl
daa
adc
mov
jg
clc
sub
stc
aam
pop
cmp
shr
stc
mov
sub
in
insl
mov
xchg
jbe
rcrl
jno
das
lcall
insb
xchg
stc
cmp
std
mov
and
inc
xor
pusha
out
in
adc
mov
mov
or
cmp
loope
daa
jo
mov
hlt
ret
sti
fiaddl
out
mov
iret
lods
pop
mov
in
clc
movsl
mov
int3
xchg
sbb
sub
mov
mov
out
xchg
daa
add
adc
ret
in
rclb
insb
push
movsb
xor
movl
mov
xor
std
and
xor
jo
add
push
adc
leave
das
incl
mov
mov
int3
or
and
lcall
push
inc
loope
push
pop
sbb
push
scas
cmpsl
jl
rcrb
nop
xchg
and
cs
loop
repz
xor
das
sbb
dec
cltd
test
inc
in
sbb
mov
add
daa
and
push
sahf
jge
call
in
cmp
sahf
or
ljmp
pop
in
out
ficomps
add
sub
out
and
cmpsb
jl
add
push
dec
in
inc
xlat
jae
sbb
ljmp
out
and
sbb
mov
mov
push
faddp
je
or
into
add
xchg
inc
inc
mov
bound
sub
push
lea
dec
adc
and
test
add
jne
jmp
in
inc
dec
sub
xchg
adc
loope
lret
in
pusha
test
loope
mov
push
add
adcb
sbb
repz
pop
movsl
in
cmpsb
adc
mov
and
mov
push
mov
cs
addr16
dec
mov
arpl
sbb
test
mov
xor
mov
dec
push
inc
je
adc
call
in
xchg
lds
pusha
sbb
pop
fcmove
in
sarb
inc
mov
or
ljmp
or
stos
mov
lea
pop
mov
jmp
sarl
or
je
ficoml
movsb
or
mov
loop
xchg
ss
sub
push
popf
movsb
mov
jmp
mov
adc
push
fs
mov
inc
push
or
mov
add
pop
icebp
jns
scas
in
add
mov
cs
cwtl
cmpsl
pop
jl
add
ret
cmp
add
loope
insb
adc
jno
mov
push
mov
outsb
fs
pop
jbe
test
sbb
mov
jecxz
pop
test
hlt
sarl
xor
adc
jl
jecxz
aam
jle
xor
pop
out
inc
xor
mov
popf
jmp
sahf
mov
fwait
out
lret
mov
jb
fcoms
sbb
stc
lds
xor
pop
sahf
mov
cmc
jl
xor
cmp
ds
sub
dec
outsb
sub
or
mov
sub
lock
inc
mov
addr16
xchg
out
popl
les
jns
add
dec
outsl
pushf
dec
subb
das
dec
stos
and
test
xchg
mov
ret
xchg
jbe
cmp
adc
mov
mov
xor
and
notl
pop
cmc
cmpsl
sub
pusha
pop
push
popa
std
shr
xchg
nop
sub
adc
jae
mov
mov
lahf
add
vcvttsd2si
repz
dec
cmp
lret
cmp
jo
add
int3
xor
pop
pop
mov
out
mov
loopne
sbb
loopne
mov
fnsetpm(287
gs
negb
dec
stos
pop
das
or
fdivp
lret
insb
popf
das
jns
mov
fisubs
outsl
push
scas
ss
inc
adc
fisubrs
stc
in
in
mov
movb
xlat
out
jmp
xor
fstpt
sub
pop
xchg
jmp
mov
mov
mov
sub
leave
mov
daa
xor
std
add
sub
xchg
push
test
cltd
inc
mov
mov
sbb
fiaddl
aaa
mov
cmp
arpl
pusha
and
xlat
sbb
ja
push
lock
lret
in
mov
adc
cmpsl
cmp
sub
sbb
or
cli
pop
ljmp
push
stos
inc
lcall
xchg
dec
cmpsl
cmp
sub
sbb
or
cli
pop
ljmp
push
stos
inc
lcall
xchg
dec
cmpsl
cmp
sub
sbb
or
cli
pop
ljmp
push
stos
inc
lcall
xchg
dec
cmpsl
cmp
sub
sbb
or
cli
pop
ljmp
fbld
mov
push
mov
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
nop
jae
int
mov
out
xorps
add
or
add
add
push
add
add
add
add
add
push
jg
int
xor
mov
add
add
xor
fadds
add
add
add
add
add
add
add
add
lds
add
add
fiadds
add
add
nop
add
cmpsl
add
add
add
add
add
add
imul
leave
add
add
add
lcall
add
add
add
add
add
add
add
add
movsb
add
add
add
daa
add
add
add
add
add
add
add
add
mov
nop
add
add
add
data16
add
add
ja
nop
add
add
add
add
add
add
dec
add
add
aaa
add
fadds
push
add
add
mov
add
add
add
movl
lds
or
add
add
add
add
add
sub
push
add
add
add
push
add
inc
add
cmp
fadds
mov
add
add
add
add
or
add
add
add
inc
add
add
add
add
mov
mov
add
add
movl
and
xor
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
nop
add
add
dec
add
testl
fadds
mov
add
push
add
add
nop
add
and
add
jp
fadds
and
add
add
adc
popf
add
push
add
jne
mov
push
add
sbb
mov
fadds
fadds
mov
add
add
add
ja
in
add
add
add
add
fadds
add
cmpsb
add
add
add
add
add
add
fadds
push
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
in
insl
add
add
addl
nop
add
add
add
add
add
add
cmp
nop
add
add
enter
or
nop
add
add
add
cmp
mov
sub
ret
add
add
add
jo
xchg
add
add
add
add
push
enter
leave
add
mov
nop
add
add
add
add
add
add
add
add
xor
leave
add
add
mov
hlt
add
add
fadds
fadds
xchg
add
cld
add
lds
fadds
insl
add
add
add
add
add
add
add
add
add
xor
nop
add
add
add
add
add
sub
das
add
add
add
add
add
add
add
hlt
add
add
das
add
add
add
leave
add
fadds
fldl
mov
daa
add
add
add
add
add
jl
add
add
add
jbe
data16
add
sbb
xor
nop
add
cmp
mov
fiadds
lds
xor
sbb
adc
xchg
add
add
add
dec
mov
push
or
nop
xor
imul
or
dec
test
arpl
xchg
rcrl
sbb
push
fs
jg
dec
lock
cmp
in
out
out
mov
iret
pop
mov
shlb
cmp
mov
inc
mov
xor
jge
dec
std
bound
mov
repz
mov
bound
es
cmp
insb
jns
jp
mov
lds
sub
inc
jge
pushf
jae
pop
and
xchg
dec
jmp
pop
addr16
and
xchg
mov
mov
ja
nop
bound
scas
leave
dec
stos
daa
ljmp
cmp
test
sbb
ret
pop
stos
xchg
mov
adc
in
rol
pop
daa
shlb
mov
cmp
mov
xor
hlt
arpl
xchg
xchg
ss
xor
jae
cmp
xor
dec
imul
call
jne
es
or
mov
dec
cmp
push
test
les
mov
lods
push
add
rclb
mov
cmpl
mov
inc
jle
xor
and
das
mov
jnp
add
dec
inc
out
add
lcall
or
bound
movsl
hlt
sbb
lahf
ds
cmpsb
lods
nop
mov
cld
int
cmp
and
out
mov
jb
sbbb
ficomps
lods
xor
adc
lcall
dec
jbe
lahf
mov
loope
xchg
push
std
xchg
or
in
push
popa
cwtl
je
loop
and
adc
shrb
mov
add
mov
popf
pop
out
jg
rcrb
jmp
cmp
sub
int
and
int
stc
aas
cmp
pop
loope
push
sub
ret
hlt
scas
shll
mov
mov
adc
xchg
and
cmc
xchg
add
das
das
fiaddl
push
std
test
mov
test
out
sub
or
dec
sub
xor
pop
xor
add
imul
out
mov
enter
mov
pusha
xchg
xchg
mov
popl
pusha
sub
mov
push
lock
jmp
popa
add
cmpsb
sbb
inc
enter
push
jne
push
sub
ljmp
xchg
imul
cmp
les
incl
fcmovne
jp
adc
popa
nop
stos
repnz
xor
lret
jb
pop
sti
push
in
lcall
add
call
gs
iret
xchg
call
out
dec
mov
cmpsb
filds
nop
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
