jmp
fimull
call
push
push
jmp
add
jle
sub
mov
sbb
xlat
les
add
loop
xor
shr
test
cmp
dec
loope
hlt
sbb
sbbl
mov
or
add
ljmp
lea
ret
jmp
push
nop
mov
lret
pop
jmp
test
add
add
rcll
push
fldl2t
push
add
add
repnz
sar
lahf
in
mov
mov
jmp
xchg
test
xor
imul
fucomip
or
add
cli
stos
or
pop
push
mov
jmp
and
sahf
jg
xchg
stos
fwait
cmp
jbe
in
fsubr
or
add
dec
add
push
dec
dec
outsl
jl
pop
mov
les
mov
jmp
addr16
mov
cmpb
jnp
icebp
sub
jmp
push
inc
sub
and
sub
jmp
dec
fsub
mov
inc
je
adc
loopne
pop
add
mov
jmp
push
push
clc
shll
add
push
push
jmp
cmp
sbb
inc
out
aam
jmp
jge
ret
inc
jns
pop
insb
xor
adc
add
cmp
xchg
pop
add
and
pushf
movsl
jp
pop
push
push
neg
cmp
lea
mov
inc
dec
clc
cld
pop
pop
jmp
sub
jmp
xor
shlb
int3
push
push
jmp
sbb
int
xchg
pop
jmp
ror
into
out
cld
add
jmp
test
or
add
addl
jle
dec
push
push
push
pop
mov
cld
pop
pop
mov
jmp
cmc
mov
sbb
xlat
les
cs
jmp
pop
gs
dec
loope
hlt
sbb
add
mov
js
mov
push
push
jmp
push
nop
mov
jmp
lcall
std
repnz
sar
lahf
add
jmp
in
mov
mov
test
push
mov
jmp
imul
stos
or
push
and
shr
add
add
and
leave
jmp
fstps
fwait
cmp
jbe
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
es
push
jmp
add
jne
jnp
icebp
push
inc
pop
jmp
sub
scas
add
jmp
dec
fsub
mov
ljmp
inc
je
adc
aas
jle
pop
jmp
or
sub
jmp
push
clc
shll
aaa
movsb
pop
push
push
jmp
or
das
cmp
sbb
inc
out
pop
jmp
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
jmp
add
and
pushf
movsl
jp
mov
inc
pop
pop
or
je
push
push
test
test
not
inc
cld
pop
pop
ret
push
jmp
pop
push
dec
adc
push
sub
adc
add
sbb
int
xchg
ror
into
out
cld
test
add
jmp
or
add
addl
jle
sub
push
mov
jmp
sti
sbb
xlat
les
sub
jmp
cs
pop
gs
dec
loope
pop
mov
push
push
lea
and
mov
inc
cld
pop
pop
cpuid
push
push
push
pop
xor
sub
inc
cld
pop
pop
cmp
jne
push
push
pop
jmp
mov
js
mov
and
inc
sub
jmp
push
nop
mov
lret
test
cmpsw
push
std
repnz
add
cmp
jne
push
push
mov
xchg
neg
xor
rol
dec
mov
inc
cld
pop
pop
ret
push
push
cmp
neg
test
cmp
xchg
and
push
pop
dec
cld
pop
pop
jmp
add
push
mov
jmp
xchg
test
xor
imul
stos
or
add
add
pop
xor
push
jmp
push
mov
jmp
and
fstps
add
jmp
fwait
cmp
jbe
push
mov
jmp
dec
add
push
dec
dec
outsl
jl
sub
jmp
pop
mov
es
mov
push
push
pop
jmp
add
jne
sub
jmp
jnp
icebp
push
inc
sub
scas
dec
fsub
pop
push
jmp
enter
je
adc
loopne
pop
aas
or
push
mov
ret
add
clc
shll
add
jmp
aaa
movsb
or
push
das
cmp
mov
jmp
lds
dec
sub
daa
aam
jb
inc
jns
add
push
push
jmp
mov
pop
add
and
add
add
add
outsb
setl
sbb
push
lea
mov
test
inc
mov
not
cld
pop
pop
lods
push
push
mov
cmp
test
cmp
cld
pop
pop
mov
push
push
jmp
shlb
int3
adc
div
pop
jmp
fs
xchg
ror
into
out
cld
test
or
add
bnd
cmpsb
out
cmp
inc
outsl
int3
jmp
add
sub
jmp
jle
sub
mov
sbb
xlat
les
jmp
lods
loop
xor
jns
add
add
pop
gs
push
push
jmp
push
hlt
sbb
ficomps
movswl
mov
and
inc
push
nop
mov
enter
add
mov
ret
push
and
jns
jmp
cmpsw
push
std
repnz
sar
lahf
in
mov
sub
jmp
mov
test
in
push
push
pop
jmp
lock
stos
or
or
and
sahf
pop
push
jmp
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
mov
jmp
pop
mov
jmp
push
mov
pop
lods
pop
push
push
push
mov
adc
cmp
cmp
xor
dec
cld
pop
pop
push
push
push
neg
xor
cmp
xor
test
inc
cld
pop
pop
push
push
mov
jmp
sub
scas
dec
fsub
mov
add
add
popa
xchg
jmp
push
push
clc
shll
aaa
movsb
or
push
pop
jmp
push
das
cmp
fsubr
adc
sbb
inc
out
aam
jb
inc
jns
pop
insb
pop
mov
push
push
lea
clc
cld
pop
pop
mov
push
jmp
xchg
pop
mov
jmp
add
and
pushf
add
jmp
movsl
jp
mov
inc
pop
xor
pop
push
mov
jmp
mov
adc
sub
mov
jmp
xchg
div
fs
or
add
adcb
test
call
or
cmpsb
out
cmp
sub
jmp
jle
sub
mov
sbb
xlat
pop
push
jmp
jae
test
sub
pop
gs
dec
loope
hlt
sbb
add
jmp
fidivrs
js
mov
and
inc
push
nop
pop
mov
push
push
inc
xor
cld
pop
pop
add
push
push
not
rcl
inc
cld
cld
pop
pop
mov
push
push
jmp
test
cmpsw
push
std
repnz
sar
lahf
pop
jmp
in
mov
mov
test
xor
imul
push
add
add
pop
add
add
jmp
mov
ret
les
and
les
adc
add
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
push
dec
sub
jmp
dec
outsl
jl
pop
mov
testb
jmp
addr16
mov
shll
mov
push
push
mov
not
cmp
ror
cld
pop
pop
mov
push
push
xchg
ror
dec
clc
cld
pop
pop
add
push
push
xchg
push
pop
inc
lea
lea
xor
cld
pop
pop
xor
push
push
jmp
push
inc
sub
scas
dec
fsub
mov
add
imul
xchg
repz
je
pop
push
jmp
loopne
pop
aas
or
push
clc
shll
aaa
mov
jmp
movsb
or
push
das
cmp
sbb
inc
out
add
jmp
aam
jb
inc
pop
rol
sub
jmp
insb
xor
xchg
pop
add
and
mov
or
add
outsb
setl
add
push
push
pop
jmp
mov
int3
adc
div
fs
lret
add
add
push
push
xor
lea
push
pop
inc
cld
pop
pop
cmpb
jne
push
push
jmp
fimull
call
add
add
addl
lret
jmp
cmp
sub
mov
sbb
xlat
les
test
cmp
dec
loope
hlt
sbb
aas
mov
or
add
arpl
fidivrs
js
add
jmp
mov
and
inc
push
nop
pop
cmp
je
push
jmp
mov
shll
or
jmp
cmpsl
push
std
repnz
rolb
jmp
stc
ds
in
mov
mov
test
xor
push
jmp
sbb
cli
stos
or
pop
jmp
push
and
fstps
jg
xchg
stos
fwait
cmp
push
push
push
pop
cmp
sub
inc
cld
pop
pop
cmp
jb
push
push
push
pop
mov
cld
pop
pop
mov
push
mov
jmp
push
dec
dec
sub
jmp
outsl
jl
pop
mov
es
mov
pop
push
jmp
pop
lods
jne
push
pop
jmp
jnp
icebp
push
inc
sub
scas
dec
faddl
iret
jmp
in
imul
add
push
push
mov
rcl
shr
inc
cld
pop
pop
movzwl
add
push
push
pop
jmp
aas
or
push
clc
shll
aaa
movsb
or
or
adc
push
das
cmp
sbb
inc
sbb
push
jmp
daa
aam
jb
inc
jns
jmp
mov
cmp
xchg
pop
sub
jmp
add
and
pushf
movsl
jp
mov
inc
pop
pop
add
add
push
push
jmp
pop
push
dec
adc
div
pop
jmp
fs
xchg
shrb
xlat
jmp
leave
into
out
cld
test
pop
push
jmp
cmp
jle
push
pop
jmp
sub
mov
sbb
jmp
push
xlat
les
cs
pop
pop
mov
push
mov
jmp
dec
loope
hlt
sbb
imul
add
fidivrs
jmp
dec
jl
rcll
cmp
mov
jbe
cmp
rcl
cld
pop
pop
pop
push
push
cmp
mov
mov
xor
xor
xor
mov
cld
pop
pop
pop
push
push
test
dec
cld
pop
pop
pop
jmp
mov
adc
addr16
lret
pop
jmp
test
data16
add
cmpsl
push
std
repnz
sub
jmp
sar
push
push
jmp
in
mov
jmp
dec
mov
test
xor
imul
pop
add
add
pop
leave
jmp
xchg
push
push
jmp
xchg
stos
fwait
cmp
jbe
in
add
push
dec
pop
jmp
dec
outsl
jl
pop
mov
es
mov
add
jmp
cmpb
jnp
icebp
pop
push
mov
jmp
inc
sub
sub
jmp
scas
dec
fsub
pop
ret
push
push
dec
cmp
js
xor
mov
cmp
not
push
pop
dec
cld
pop
pop
push
jmp
enter
je
adc
loopne
call
jmp
or
push
clc
shll
aaa
movsb
or
add
mov
push
push
xchg
dec
cld
pop
pop
add
push
push
xchg
mov
neg
mov
xchg
not
mov
cld
pop
pop
push
jmp
sub
jmp
daa
aam
jb
inc
jns
pop
jmp
insb
xor
xchg
pop
add
and
rcrb
jmp
pusha
rcrb
add
add
movsl
jp
push
push
push
xchg
std
cld
pop
pop
push
sub
jmp
pop
rclb
or
int3
adc
div
fs
push
pop
jmp
xchg
ror
into
out
cld
test
or
add
iret
jmp
xor
mov
push
push
lea
inc
cld
pop
pop
mov
push
push
jmp
sbb
xlat
les
jae
test
repz
gs
dec
loope
hlt
sbb
fidivrs
sti
xor
jmp
fstpt
mov
and
inc
push
nop
mov
repz
lcall
repnz
push
xor
mov
neg
inc
cmp
cmp
xchg
repnz
cld
pop
pop
mov
push
push
cmp
std
cld
pop
pop
test
je
push
push
jmp
ds
in
mov
mov
add
fdivs
push
xchg
test
xor
imul
jmp
and
movb
pop
push
lea
mov
neg
xchg
mov
dec
cld
pop
pop
mov
jmp
fstps
fwait
cmp
jbe
in
add
or
pop
add
add
push
dec
dec
outsl
jl
add
jmp
pop
mov
es
mov
cmpb
gs
jmp
lods
jne
enter
jnp
icebp
push
inc
pop
push
push
push
mov
lea
mov
dec
nop
cld
pop
pop
push
jmp
repz
scas
dec
fsub
mov
xchg
mov
out
popa
rclb
add
jecxz
cltd
pop
aas
or
push
clc
shll
aaa
pushl
push
push
xchg
not
rol
cld
pop
pop
call
push
push
jmp
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
jmp
mov
cmp
xchg
pop
add
and
or
outsb
setl
push
push
jmp
pop
shlb
jmp
dec
adc
imulb
lret
mull
xchg
rcrb
rclb
mov
lea
xor
or
cmp
test
dec
xchg
cld
pop
pop
test
jne
push
push
mov
not
dec
cld
pop
pop
push
jmp
test
or
add
adcl
cmp
sub
mov
shr
add
add
sbb
xlat
les
push
jmp
iret
pop
gs
jmp
cmp
dec
loope
hlt
add
jmp
sbb
.byte
.byte
