dec
scas
push
add
dec
pop
add
push
add
dec
push
add
pop
add
in
push
add
push
add
pop
pop
add
adc
test
ljmp
xorb
pop
push
or
add
popl
mov
jp
call
cli
pop
mov
stos
repnz
xchg
or
out
dec
mov
xchg
mov
sbb
stos
push
xchg
in
and
je
push
popa
jp
jo
cmpsl
jg
xchg
imul
pushf
stos
clc
hlt
and
pop
and
rcl
inc
jbe
add
cmpsl
jecxz
in
loopne
pop
inc
mov
adc
push
neg
lahf
popl
xor
jmp
push
xor
mov
jmp
dec
jo
dec
dec
cmp
adc
jl
lock
pop
loopne
in
mov
pop
ja
aas
cwtl
sbb
mov
addr16
xlat
add
xorl
inc
or
jo
lods
mov
pop
ret
push
mov
add
push
push
orw
jns
call
mov
xchg
sub
lods
addr16
mov
or
pop
jnp
mov
push
icebp
stos
mov
daa
push
sub
xor
add
std
repz
ljmp
movl
addr16
jo
mov
adc
mov
imul
push
enter
popa
xor
jl
xor
cmp
imul
xchg
xchg
loopne
mov
loopne
popl
push
push
mov
mov
add
jmp
cltd
int3
cmp
dec
aas
or
or
sub
push
push
cltd
xchg
jmp
pop
sub
jae
mov
add
add
mov
subl
add
xor
lea
mov
add
mov
xor
rol
xor
inc
jmp
ss
mov
movsb
lock
xchg
ret
and
mov
push
decl
push
incb
das
inc
xor
xorl
dec
sarb
addb
inc
out
frstor
dec
repz
mov
sub
aas
inc
adc
shlb
mov
sbb
jo
inc
pop
adc
add
jle
fiaddl
arpl
in
xlat
pop
push
loop
mov
cmp
jne
cmp
je
inc
cmp
jb
mov
add
movzwl
mov
pushl
popl
jne
push
mov
orb
orl
pop
add
mov
jmp
outsb
test
adc
movsl
inc
bound
mov
sub
je
inc
push
and
rcrl
jbe
cmp
jae
pushl
pushl
push
push
lea
ror
mov
xor
pop
addl
pushl
call
call
jmp
decl
icebp
in
adc
xchg
sarb
fucomi
mov
fidivrl
negl
test
lret
popa
add
xchg
repz
jge
leave
pop
pop
pop
pop
leave
push
popl
jns
call
test
fistpll
fcmove
fidivrs
call
lret
sub
out
rol
imul
cmp
ds
js
out
cmp
lods
test
cmp
xor
fistpll
xlat
sub
pop
into
cmc
iret
out
lods
mov
sub
ret
pop
mov
sbb
enter
add
popa
mov
lods
or
add
pop
mov
add
ret
call
jmp
xor
sub
push
popf
jne
push
std
mov
movsl
mov
jl
inc
mov
jmp
mov
outsl
loope
inc
incl
aaa
repz
hlt
inc
orl
mov
ficoms
sbb
sub
and
mov
dec
sub
insb
mov
outsb
js
es
test
add
add
push
push
mov
call
push
sub
mov
mov
mov
mov
mov
shr
rol
mov
add
xchg
addl
push
call
push
push
not
xor
not
mov
add
xchg
mov
or
jns
push
mov
movb
pop
pusha
call
mov
push
xor
mov
xor
xchg
addl
push
call
cmpl
jne
jmp
jmp
popa
add
pusha
call
mov
push
add
mov
sub
xchg
addl
push
call
mov
push
or
sub
popl
mov
mov
xor
xor
push
popl
rol
inc
dec
jne
cmp
je
cmp
jne
popa
jmp
mov
cwtl
hlt
fisttpll
popa
int
dec
repnz
and
or
fsts
dec
sahf
fildl
outsl
inc
dec
xor
and
stos
adc
cmp
dec
adc
out
push
jbe
mov
ja
add
in
mov
fadds
outsb
subb
mov
int3
fimull
pushl
push
push
xor
push
call
int3
add
js
call
pop
mov
pusha
or
inc
stos
xorl
jno
adc
jnp
mov
pop
testb
ja
jo
mov
mov
subb
sbbb
lods
lret
jne
adc
or
adc
cwtl
in
popa
icebp
inc
sub
push
sbb
inc
inc
ret
movsb
sub
adc
mov
stc
sub
push
aas
scas
and
test
adc
roll
add
popa
shl
push
xor
push
jmp
dec
aas
or
in
and
imul
leave
popa
mov
xchg
roll
enter
daa
add
add
fwait
jne
jecxz
ds
lds
cltd
add
add
push
mov
aas
lcall
push
inc
cli
cmpsl
push
in
adc
add
pop
fwait
std
arpl
btr
rorl
repnz
call
push
mov
push
jmp
movsb
xor
mov
in
scas
rcrl
mov
adc
xor
push
adc
and
sub
sbb
rorb
cwtl
mov
inc
dec
sbb
out
daa
ja
fst
int
jge,pt
pop
xchg
jb
enter
xchg
add
pop
mov
push
push
push
movl
jae
push
mov
movb
sbbb
orl
andb
pop
mov
mov
rep
pop
pop
push
xor
rol
lea
mov
add
xchg
push
xor
jmp
jmp
jp
jae
sub
mov
enter
faddl
lret
xchg
mov
lods
ficompl
cltd
jmp
shrb
shrl
pop
jno
imul
xor
adc
add
lcall
je
sub
jmp
ljmp
cmp
je
testb
jp
call
test
imul
sub
pop
xchg
push
call
insl
leave
fcomp
into
jge
mov
test
mov
test
fisubrl
in
call
mov
imul
outsb
nop
add
jns
in
push
fwait
xchg
loopne
fdivrs
nop
popl
mov
add
or
jne
jmp
jle
pop
pop
filds
rclb
cmc
divb
jmp
sti
ret
sbb
mov
push
push
fnstenv
les
in
xchg
sub
jae
sbb
xor
popa
test
sti
jae
iret
jmp
pop
enter
xchg
hlt
cmp
xor
rcll
xor
jg
inc
xchg
out
and
push
hlt
xor
js
pop
arpl
push
mov
sbb
les
jmp
mov
shr
shl
mov
push
popl
jno
push
mov
movl
movw
subb
pop
jmp
sub
mov
cmp
jne
mov
add
cmpw
jne
jmp
and
mov
inc
sub
ficoml
cld
ficoml
adcb
scas
cmp
jno
movsb
loop
inc
pushf
sbb
lcall
add
add
mov
xchg
cmp
dec
push
iret
and
repnz
xor
inc
outsb
jl
rorb
ds
scas
jns
stos
in
jmp
in
mov
mov
xor
inc
mov
adc
xor
inc
jg
dec
loope
xchg
outsl
orl
rolb
icebp
lahf
add
outsb
add
ret
call
daa
and
or
shll
add
push
cli
in
lods
xchg
adc
aas
mov
int
in
in
mov
lret
repnz
add
sub
cmp
cmp
rcrl
test
xchg
inc
ffreep
insb
ss
dec
inc
icebp
and
and
out
cmp
jno
sarb
cmp
sbb
jns
fimuls
adc
adc
scas
or
jne
call
notl
add
adc
in
add
mov
pop
lock
mov
mov
xchg
and
adc
fidivl
jne
adc
aas
mov
lock
daa
sbb
inc
jg
cmp
jb
mov
insl
dec
in
fdivs
pop
cmp
xchg
sbb
sub
adc
sti
xor
into
pop
orb
and
rcrb
push
les
popf
push
cmp
or
in
mov
inc
dec
in
in
mov
dec
in
inc
cmc
or
and
dec
pushf
jnp
js
adc
or
and
aam
aaa
mov
sub
fstpt
out
push
in
in
and
mov
pop
jbe
mov
ss
mov
lock
mov
or
push
xchg
lods
or
sub
pop
fmul
cld
mov
addr16
push
std
jne
cmp
xchg
stos
das
les
mov
and
push
repnz
sbb
push
sahf
aas
in
cmp
push
out
inc
rcrl
dec
cmp
int3
jbe
sar
int3
xchg
negb
movsb
int
sub
mov
pushf
inc
or
inc
cmp
and
pop
rorb
into
mov
xor
fwait
pusha
inc
mov
mov
and
in
in
cmp
add
mov
pushf
xchg
inc
dec
ja
or
jno
adc
push
adc
movsl
mov
inc
test
sti
mov
jae
jecxz
adc
mov
add
rolb
and
dec
fnstenv
or
cmp
out
cmp
mov
out
rclb
negl
pop
pushl
jecxz
sbb
aam
rcl
repnz
adc
mov
cmp
mov
insl
fimull
in
mov
jl
aas
dec
mov
sub
add
das
je
cmc
or
imul
mov
imul
xchg
xor
icebp
pop
pop
jl
inc
cmp
mov
push
inc
gs
jns
addr16
or
lcall
cmc
fs
out
imul
jge
repnz
mov
aas
xlat
jb
mov
pop
cltd
and
insb
jp
adc
repz
adc
fadds
pop
test
pop
push
mov
lret
inc
push
push
lret
icebp
pushf
inc
jne
jge
in
cmp
faddl
xchg
dec
push
jno
sub
enter
scas
imull
push
gs
dec
jecxz
jp
in
pop
imul
mov
or
xor
xor
inc
loope
movsl
int3
lods
int
sbb
fnstenv
dec
in
inc
xchg
gs
adc
xchg
rcrl
inc
lock
sub
lret
shll
scas
fisttpll
mov
xor
ds
push
mov
jnp
data16
mov
mull
or
lret
lret
fdivs
mov
inc
popf
rcll
push
cmp
lea
cmp
mov
sub
nop
int
int
adc
cmp
cmc
movsl
mov
sbb
xchg
jnp,pn
pop
aam
js
loopne
and
fadds
xor
cld
cltd
pop
out
mov
mov
or
mov
dec
in
js
jne
push
adc
repnz
add
sub
cmp
out
cmp
fs
divb
movl
in
fadd
xchg
out
dec
adc
mov
icebp
or
jbe
inc
loop
mov
sub
sbb
jbe
lret
add
ja
cmc
push
and
cmp
push
movaps
jg
and
sbb
testb
sbb
ss
int
xor
and
sub
sahf
sbb
fisttpl
cmpsb
loope
sub
push
xchg
mov
imul
ret
xchg
divb
jbe
cltd
jb
std
sbb
dec
xchg
mulb
dec
pop
cmp
icebp
mov
pushf
jp
mov
push
in
aas
and
and
mov
mov
subl
inc
ja
mov
sub
add
xchg
xchg
sub
mov
or
cmp
push
add
jecxz
fisttpll
movl
std
dec
in
in
dec
nop
outsl
and
xchg
push
pop
cmp
lods
fs
and
inc
add
sub
out
les
sub
fimull
flds
loopne,pn
repnz
mov
xor
add
ds
mov
int
lods
xchg
xchg
mov
icebp
and
jl
int
push
add
sub
pop
dec
sub
add
lret
adc
enter
add
pusha
mov
cmpsl
sbb
mov
inc
scas
mov
frstor
test
xor
push
ret
addr16
call
cmp
fidivl
dec
in
mov
mov
ja
jg
out
dec
adc
icebp
lcall
jnp
imul
and
xor
push
jno
test
cmp
mov
fcomp
hlt
lods
dec
cmp
pop
xlat
repnz
jb
ret
divb
jge
push
fwait
push
mov
xchg
sahf
push
jno
mov
and
xlat
cmp
pop
int3
dec
lcall
test
mov
xlat
push
fsubl
sbb
pop
xchg
mov
fldt
mov
mov
mov
sbb
stc
cmp
in
and
mov
cs
mov
cmc
jecxz
lods
cmp
adc
insb
andl
jo
push
dec
push
dec
arpl
and
lods
popf
scas
loop
bound
repz
sub
je
mov
and
fidivs
loopne
inc
lds
xor
lods
sub
mov
push
daa
sub
inc
mov
iret
inc
jg
sbb
mov
add
pop
jno
cld
mov
daa
inc
push
icebp
sub
je
call
stos
popa
rcrb
mov
push
push
aam
push
and
sar
mov
imul
xor
dec
inc
cmp
or
jl
aas
xlat
push
or
and
mov
subl
pushf
addr16
loopne
jae
xor
sub
cmp
inc
cmpsl
adc
into
xchg
repz
fisubl
push
or
sbb
or
jle
out
dec
inc
mov
add
fiaddl
sub
add
cmp
mov
cmp
jo
adc
inc
jnp
xlat
pop
and
sbb
mov
hlt
sbb
pop
rolb
sub
cmp
mov
loopne
mov
lods
xor
aad
movsb
or
pop
mov
leave
es
xchg
ljmp
arpl
mov
fldenv
mov
loopne
and
add
das
pusha
faddl
out
lods
inc
add
and
and
aam
mov
jne
fisttps
push
or
xchg
hlt
xchg
dec
pop
cmp
icebp
dec
push
mov
fwait
inc
jl
or
and
sub
dec
insl
and
mov
lds
icebp
ss
es
outsl
cmp
lds
mov
in
xor
sub
add
cli
lds
add
or
neg
frstor
sbb
cmp
in
xchg
jno
cmp
inc
cmc
adc
jle
add
push
test
lret
fnstcw
ljmp
loopne
xchg
icebp
and
adc
sub
cmp
jecxz
cmpsb
lret
fs
cmp
popf
mov
or
test
pop
sub
cmp
and
inc
xchg
xor
pop
in
in
cmp
mov
jb
mov
push
enter
aas
iret
ficompl
in
sbb
push
mov
js
xchg
dec
and
flds
lcall
inc
pop
dec
lcall
mov
sar
push
sahf
rolb
pop
out
sbb
push
jmp
ds
hlt
jno
cmp
fldenv
xchg
jae
pop
das
addr16
mov
sbb
movsb
dec
stos
cmp
loopne
push
outsb
gs
gs
sbb
push
mov
outsl
inc
adc
sub
cmp
outsl
push
fwait
dec
scas
lcall
sub
sub
enter
mov
cmp
out
jle
mov
out
fnstenv
fs
in
addr16
and
into
cmp
repz
pop
inc
mov
jl
cmp
inc
out
mov
jge
rol
out
inc
enter
jmp
mov
div
pop
push
mov
push
adc
push
psllw
pop
xchg
sbb
jp
inc
cmp
in
xor
cmp
divb
sbb
lahf
mov
dec
out
or
xchg
push
cld
adc
dec
stos
ss
scas
sub
dec
sub
out
repz
sub
imul
pop
mov
in
pop
xor
sbb
cmp
icebp
cmp
jb
sbbw
hlt
pop
mov
sub
and
sti
push
push
pop
xor
pop
insb
jge
fcmovnu
pop
cmp
or
dec
das
dec
out
add
call
jne
nop
imul
in
cmpsl
add
mov
repnz
lods
and
insb
mov
jl
dec
inc
cmp
dec
scas
cwtl
xor
notb
in
in
adc
cld
std
ljmp
or
mov
xlat
jno
push
cld
or
pop
mov
aam
mov
pushf
jbe
mov
sbb
out
shr
dec
stc
add
or
or
mov
cmpb
adc
stc
mov
add
mov
js
cli
xchg
cmp
aad
cmp
movsb
loopne
outsl
mov
shl
cmp
fstpt
cmp
fs
inc
add
ja
rdmsr
mov
test
jg
mov
inc
jns
nop
mov
nop
cmp
out
cmp
out
ja
orb
popf
adc
scas
bound
or
lds
int3
mov
ja
xor
ss
xchg
loope
cmp
mov
jg
adc
js
addr16
scas
ret
sub
clc
fimull
dec
in
popf
lea
dec
shrb
mov
add
in
adc
mov
sbb
repz
aaa
mov
pop
rolb
movl
icebp
imul
push
ret
lahf
add
mov
mov
cli
insl
cltd
cwtl
jp
cmpsb
inc
pop
test
mov
lea
jb
cmp
cmp
lock
and
in
cmp
xchg
lret
movb
div
repz
push
shll
push
shll
and
adc
jo
push
test
push
adc
push
lahf
cli
cmp
mov
xor
mov
pop
pop
mov
js
clc
cmp
cmp
dec
in
cs
rorb
inc
push
ss
jmp
fldl
out
cmp
arpl
xchg
lea
sbb
mov
scas
push
add
or
dec
mov
cmc
jno
mov
inc
lahf
iret
testl
icebp
mov
pop
mov
or
pusha
mov
add
subb
mov
and
mov
push
loope
mov
cs
iret
jmp
leave
sbb
inc
sbb
aaa
mov
pop
xlat
dec
lahf
jne
mov
adc
mov
imul
test
push
js
xor
and
xor
pop
inc
cmp
push
in
jne
mov
xor
cmpsb
sbb
cld
xchg
test
cli
test
fsub
mov
icebp
mov
dec
in
jne
icebp
and
aad
and
in
rorb
test
lahf
or
sbb
or
inc
cld
sub
movsl
ss
std
inc
shrl
adc
xor
inc
pop
add
cmp
dec
arpl
and
hlt
and
lahf
fsubs
and
ror
lahf
lods
ret
jns
fsubs
mov
xor
sarl
and
xor
push
les
out
push
push
inc
add
lods
arpl
pop
nop
mov
aam
push
shlb
sbb
add
scas
in
and
push
pop
mov
pop
fildll
or
addr16
push
je
xor
lds
icebp
and
int3
loope
dec
nop
repz
inc
daa
fmull
rorb
shl
aad
repz
loop
xor
setge
mov
mov
push
icebp
repnz
dec
pushf
repz
pop
jge
or
aas
and
cld
rol
and
scas
js
sub
add
cmp
adc
xchg
mov
push
xlat
addr16
mov
mov
gs
cltd
int
sub
icebp
je
dec
fmuls
lea
xchg
div
cltd
outsl
repz
clc
pop
xchg
out
scas
sub
stos
or
mov
jmp
das
cmp
sbb
push
mov
xchg
clc
push
mov
lock
cmp
mov
insb
sti
mov
adc
pop
icebp
leave
nop
mov
in
and
inc
inc
mov
sbb
jl
xor
imul
xchg
hlt
sub
arpl
xor
dec
js
inc
aaa
rorl
dec
in
in
mov
es
sbb
test
lahf
adc
sbb
cmp
fwait
push
stos
cltd
adc
and
int3
aas
test
jb
js
add
imul
lret
adc
lea
and
or
inc
or
add
cltd
ss
cmpsb
popl
mov
mov
arpl
inc
out
mov
adc
pop
and
pop
mov
js
fsubs
xlat
mov
push
fsubs
mov
sub
out
inc
mov
xor
xchg
je
mov
imul
test
mov
push
xchg
in
ds
sbb
mov
addl
mov
dec
push
out
mov
cmpsb
aad
inc
or
test
ja
in
cmp
xchg
int3
cld
fsubs
sbb
pusha
xchg
sbb
mov
sbb
shll
dec
jae
sbb
push
jmp
arpl
and
addr16
in
cmp
stos
outsl
repnz
shl
sqrtps
mov
dec
sub
mov
test
add
lcall
int3
mov
test
push
sub
jnp
dec
mov
jl
jns
xor
mov
pop
aam
push
jle
sbb
xor
and
push
fidivrl
pop
fnstenv
dec
xchg
pop
and
dec
gs
popf
call
add
mov
and
repz
pop
aas
add
icebp
test
into
insb
fdivrl
ret
xor
inc
imul
cmp
and
cmp
daa
push
mov
dec
sbbl
stc
add
ljmp
sub
in
loopne
ret
stc
and
mov
xchg
jb
faddl
and
or
out
and
mov
mov
sbb
sbb
imul
cmc
sub
cmp
aaa
cmp
cmp
add
pop
das
stos
test
rclb
adc
xchg
push
push
mov
mov
inc
xor
shlw
cmp
push
xor
xor
in
test
mov
es
pshufw
cmp
mov
add
imul
daa
sbb
popf
mov
or
sti
hlt
icebp
outsw
popa
jl
mov
sbb
adc
orb
mov
pop
cvtps2pi
scas
push
js
dec
notl
push
lret
imul
mov
lret
addr16
push
test
jbe
shrd
xlat
and
mov
cs
stos
ds
dec
test
xor
xchg
pop
mov
inc
mov
sbb
out
fadds
daa
push
clc
dec
call
data16
inc
aam
std
shl
and
push
scas
jns
clc
sub
add
cmp
mov
stc
jg
add
cmp
xorl
mov
dec
repz
and
stc
pop
movsb
and
jo
jae
andb
ja
push
cmpsb
pop
jnp
and
cmp
pop
or
orb
jecxz
shlb
adcl
sub
add
inc
adc
into
mov
cli
fidivrs
lret
adc
in
mov
fimull
dec
in
loop
push
test
ret
sub
cmp
cli
inc
dec
jnp
popf
stc
les
jp
add
fwait
or
es
and
ret
dec
in
in
scas
lret
sub
in
insl
lea
test
or
xlat
ss
faddl
mov
mov
mov
jb
hlt
sbb
into
in
in
cmp
pop
push
mov
adc
mov
or
sbb
sub
lcall
add
add
popf
cs
jb
pop
inc
add
cmp
addr16
cmp
push
and
popa
jne
sub
mov
enter
imul
stos
cmpsl
and
cmp
movsl
push
ljmp
sbb
push
repz
das
lock
mov
mov
ja
dec
jmp
popf
lds
in
jg
out
in
cmp
jl
inc
jb
sbb
cmp
js
sbb
push
cmp
test
aaa
sub
lock
sub
bound
scas
int3
and
xchg
imul
ror
mov
scas
and
imul
xchg
sti
fwait
push
lods
adc
xor
or
and
add
mov
jo
pop
adc
in
scas
cmc
xorb
cmp
or
and
push
sbb
out
out
cmpsl
rcl
fisubrs
hlt
fisubrl
enter
hlt
and
inc
mov
cmp
jno
mov
bswap
push
push
and
add
test
mov
aaa
xor
xor
inc
cmpsb
sbb
negl
mov
sbb
shll
xchg
mov
push
mov
mov
push
jno
jg
mov
add
mov
and
mov
icebp
and
outsl
lret
stos
mov
pop
mov
insl
mov
mov
fildl
dec
in
cmpb
iret
jne
iret
mov
mov
imul
fwait
mov
sbb
or
cmc
dec
xor
in
cmp
in
in
cmp
dec
push
addr16
in
in
mov
sub
mov
imulb
mov
adc
mov
lahf
or
in
xchg
xor
mov
shrl
cmp
adc
cmp
jb
push
adc
imul
scas
sub
jno
adc
mov
pop
mov
and
or
and
pop
jb
cmp
icebp
push
cli
rcl
in
cmp
mov
jne
in
cmp
sub
fimuls
sahf
xlat
ds
arpl
push
dec
imul
jno
enter
inc
xchg
mov
xor
ret
push
bound
adc
sbb
test
pop
xchg
xor
daa
orl
in
in
xchg
testl
add
psrlq
jo
pop
in
xchg
shll
and
adc
xor
daa
gs
sbb
mov
outsl
lea
call
cmp
inc
xchg
loopne
dec
and
std
sbb
loopne
movl
lret
mov
outsb
or
dec
add
aaa
shlb
ret
inc
insb
scas
xchg
xchg
xor
mov
sbb
push
pop
icebp
orl
in
in
and
pop
fidivl
and
xor
pop
cmp
sbb
lcall
sbb
jne
sub
aas
mov
cld
cmp
xchg
dec
or
das
rcl
mov
push
xchg
cmp
cmp
out
cmp
sbb
shll
inc
pusha
and
and
dec
pop
mov
scas
xchg
adc
andb
jp
inc
mov
adc
icebp
inc
and
repnz
cmp
out
cmp
dec
ja
cli
sahf
std
cmp
xchg
sbbl
jg
adc
loope
je
sbb
cmp
icebp
or
adc
mov
mov
adc
mov
or
and
pop
xchg
addr16
outsl
dec
pop
push
repz
pop
ret
push
add
and
xor
mov
or
enter
pop
fdiv
adc
fadds
push
pop
push
sahf
divb
push
scas
inc
sbb
sub
and
icebp
and
cmp
sbb
inc
mov
mov
lea
lock
jo
inc
cmc
and
mov
mov
cli
sbb
in
sbb
cmc
mov
jbe
out
xlat
or
inc
stc
aas
aad
repz
test
shll
out
cmc
mov
mov
xchg
inc
xor
addr16
in
cmp
push
push
orl
mov
inc
leave
subl
jmp
cmp
std
and
mov
std
push
les
lods
gs
call
cmp
pop
inc
loopne
inc
and
dec
lds
addr16
mov
pop
and
lds
mov
and
xor
popa
fcoml
repnz
nop
or
seto
adc
daa
jne
add
lds
sbb
cmp
nop
add
jns
clc
adc
lcall
inc
clc
push
dec
add
out
and
int3
outsl
mov
in
addr16
and
sub
and
out
cmp
push
jge
stc
outsb
repnz
add
sub
cmp
out
cmp
fcmovnbe
adc
push
cmpsl
cmp
je
aas
dec
xor
cmpsl
add
out
push
push
loop
pop
jp
lcall
inc
pop
mov
in
cmp
mov
jge
mov
jp
lods
push
push
sti
and
fsubrs
fimull
mov
inc
cs
pop
push
dec
in
in
mov
lock
stc
and
cmp
out
cmp
inc
fsub
xor
in
jecxz
mov
jle
sbb
scas
das
push
lock
mov
or
rorl
in
cmp
nop
ffreep
test
xchg
loop
rorb
dec
and
or
cld
pop
in
inc
xbegin
in
fmuls
call
add
jns
sub
push
mov
aas
pop
sub
cld
incb
push
mov
push
push
sub
das
pop
sub
or
xchg
je
pop
mov
sub
push
cli
outsb
repnz
add
sub
lahf
aad
push
or
and
or
and
sbb
cli
dec
mov
mov
mov
cmp
mov
jns
testb
cmp
sbb
pop
lds
stc
dec
and
in
movsb
jae
push
je
icebp
adc
hlt
and
cmp
cmp
aad
cwtl
xchg
inc
jle
sbb
xor
and
xlat
ss
outsl
in
pushf
inc
mov
insb
jb
dec
sub
cmp
adcb
push
dec
in
in
mov
lock
mov
testb
hlt
mov
inc
or
push
dec
sbb
scas
mov
xchg
mov
je
add
rol
pop
aam
push
clc
mov
and
xor
or
scas
and
push
mov
lds
jno
cmp
jb
cmp
xchg
cmpsl
mov
popa
dec
dec
add
loopne
rclb
sub
pop
or
and
ror
mov
dec
and
sub
hlt
leave
xchg
lahf
jg
jle
shlb
imul
fadds
das
sbb
push
ljmp
dec
call
mov
jp
cmp
sub
or
and
pop
stos
xchg
mov
pop
sub
mov
push
dec
xorb
and
adc
mov
pop
rcl
push
or
and
jno
in
cmp
nop
cmp
call
pop
xor
stc
sbb
lcall
scas
sbb
add
jle
inc
out
in
cmp
inc
or
and
and
mov
inc
aaa
dec
ja
dec
rolb
in
into
xorb
outsl
pusha
mov
mov
mov
pusha
xchg
sbb
jl
jle
inc
repz
iret
dec
or
push
mov
pop
andl
cmp
pop
rclb
nop
sbb
aam
sub
sbb
xchg
shll
test
mov
jmp
scas
push
icebp
pop
stos
mov
adc
or
pop
jmp
cmpsb
popf
lods
jmp
add
lds
xchg
xor
mov
shlb
cmc
ds
inc
fldt
or
mov
out
jno
rsm
push
jo
and
shl
sub
jns
add
xchg
fnstsw
cmp
push
adc
inc
inc
fsubs
das
xor
add
insl
add
fisubl
and
and
stos
scas
adc
out
sbb
jno
loope
dec
insl
xchg
imul
fldenv
and
sub
jns
leave
jne
adc
incb
jns
outsl
int3
jbe
dec
aad
out
cmp
jl
inc
cmp
jg
cltd
sbb
push
in
mov
mov
mov
cmpsl
or
test
cmc
aaa
ss
mov
fwait
data16
jmp
and
lods
jae
repz
js
xchg
cmc
and
mov
pop
outsl
fidivrl
or
adc
mov
cmpsl
mov
push
scas
add
aaa
or
dec
paddd
stos
mov
or
add
mov
mov
pop
das
or
jne
dec
test
popa
faddl
idivb
lret
dec
lods
xor
mov
test
cmp
adc
push
add
cmpsl
sbb
icebp
rcrl
fs
shl
xchg
outsl
cwtl
mov
rcrb
loopne
repnz
cld
sbb
adc
mov
enter
lds
popa
add
xor
mov
or
add
xor
ret
out
inc
pop
daa
test
mov
imul
mov
pop
js
xor
ds
inc
jns
imulb
and
aas
sub
popf
loopne
jp
mov
rcl
mov
or
lods
inc
pushf
jno
mov
in
sti
adc
movsb
inc
jle
gs
mov
je
jge
xchg
jo
push
cmp
js
sbb
pop
ret
push
push
or
xchg
jmp
cmp
into
jo
add
xchg
mov
inc
mov
xchg
sahf
push
nop
into
pop
aaa
insl
adc
pop
std
lcall
stc
or
dec
faddl
jbe
mov
js
cmp
fisttpl
mov
icebp
sbb
xchg
divl
adc
ret
and
dec
jns
dec
xchg
cmp
lods
mov
popa
or
and
inc
in
pop
push
dec
das
cmpsl
shll
ljmp
cmpsl
iret
mov
fisubs
dec
fs
movsb
jo
sub
inc
pop
mov
iret
stc
and
fcmovu
jno
or
pop
dec
in
in
lret
sbb
in
aam
pop
xchg
fnsave
cmp
inc
dec
mov
xchg
addr16
xlat
ret
scas
jecxz
out
cmpsb
fmuls
sbb
fisttpl
mov
inc
adc
test
idivl
xor
dec
in
add
insl
popf
jle
dec
bnd
imul
mov
xlat
push
rcrb
cmp
mov
mov
mov
leave
in
or
sub
imul
and
aas
mov
pop
jno
jl
sbb
inc
xor
cmp
movsl
ja
lds
xchg
pusha
movsb
sub
xchg
mov
std
jne
mov
out
sbb
ficoms
xor
or
lods
jg
and
cld
dec
in
in
pop
sbb
cmp
jae
icebp
and
jecxz
pop
cmc
jbe
inc
cmp
mov
out
mov
add
push
mov
jae
rol
and
sub
aas
outsl
xor
mov
xchg
jle
enter
test
pusha
in
cmp
icebp
fs
shl
in
cmp
je
cmp
mov
cmp
jno
mov
mov
cld
shll
push
outsl
adc
es
lcall
xchg
out
pop
xchg
sbb
mov
hlt
pop
in
in
cmp
xchg
and
dec
sbb
cmp
cmpsl
pop
or
and
loop
in
cmp
jmp
out
cmp
fmull
adc
cmpsl
adc
add
adc
rorb
cmpl
inc
fnstcw
lods
pop
add
in
in
and
shl
lock
xchg
xor
cmp
icebp
or
daa
inc
shll
adc
cmpsl
add
dec
stc
xchg
pushf
sub
in
std
loope
xchg
sahf
or
dec
movsl
jmp
lock
into
daa
adc
imul
mulb
dec
cmpsl
repnz
icebp
cmpsl
es
jp
pusha
pop
inc
adc
call
mov
and
add
and
mov
sbb
ja
jle
in
dec
jb
out
adc
arpl
addr16
fdivrp
cmp
or
adc
addr16
sti
shll
fisttps
ret
lds
or
pop
xchg
lcall
scas
arpl
lods
in
xchg
or
lods
dec
fstps
mov
push
lcall
fs
inc
fiaddl
pop
mov
inc
fldenv
iret
mov
push
cli
hlt
mov
xor
xor
cmp
cmc
loop
cmpl
cmp
mov
inc
add
cli
in
daa
and
loop
test
jbe
int3
cmp
pavgw
movsl
js
lea
pop
cli
cmp
out
cmp
clc
lahf
mov
and
sub
mov
in
insl
int
push
dec
mov
pop
fadds
cmp
and
mov
or
push
push
lock
adc
iret
and
in
cmp
repz
es
or
add
aas
popa
inc
and
fidivl
repnz
jnp
mov
cs
lods
inc
mov
adc
jns
addl
popa
out
xchg
mov
cwtl
mov
out
adc
jb
push
lret
stos
int3
fprem
hlt
push
pop
fldcw
push
and
neg
xchg
cmc
or
cmp
dec
or
fcomps
or
rclb
fsubrl
imul
fiaddl
dec
in
int3
imul
jecxz
lock
scas
xchg
fldl2e
jmp
ja
fcomps
shrl
and
add
pop
mov
sub
add
cmp
fimull
dec
in
mov
sbb
rcrb
popf
inc
shr
pushl
push
roll
into
imul
lods
hlt
xchg
cmc
dec
xor
in
cmp
jmp
arpl
mov
inc
shlb
or
jbe
cmpsl
push
test
loopne
sbb
and
add
mov
shr
xchg
mov
ss
and
insb
or
and
sbb
gs
cli
aaa
jp
cmc
mov
inc
and
or
bound
and
daa
sub
dec
add
jl
sub
fwait
or
movsb
sbb
sub
jnp
scas
cmp
insl
lahf
cmc
inc
insb
cmc
mov
cmp
cmp
xor
dec
fmuls
int3
jns
jecxz
add
je
jmp
fcompp
test
test
sbb
in
fcoml
xchg
mov
ret
gs
leave
out
shll
mov
shrl
push
push
je
add
aam
and
mov
pop
lahf
fldenv
push
or
daa
sub
pop
movsb
sahf
aaa
push
jle
lea
arpl
scas
out
and
insl
je
cli
lret
lcall
add
and
roll
nop
dec
ret
outsb
jecxz
fisubrs
xor
addr16
mov
mov
jo
jno
popa
call
xor
stos
testb
ljmp
dec
std
outsl
outsb
or
and
outsl
in
in
cmp
inc
and
jmp
xchg
xchg
outsb
das
xorl
in
mov
mov
dec
js
inc
push
adc
cmpsb
dec
fiaddl
dec
in
insb
inc
inc
in
add
out
outsl
mov
iret
xchg
xchg
mov
daa
pop
inc
jnp
pushl
cmp
adc
fnstcw
or
lock
jp
add
push
mov
cmp
inc
enter
jns
mov
faddl
jnp
adcl
inc
xor
bound
jae
push
or
push
arpl
in
stc
loop
ss
xorl
aas
call
nop
pop
cmc
sub
nop
mov
inc
push
scas
out
sbb
imull
mov
mov
xchg
test
dec
add
mov
fisttps
xchg
inc
lods
outsb
shrb
stc
sbb
movsb
push
loope
aas
in
aad
push
cmp
daa
xor
rorb
stos
inc
cmp
roll
adc
jns
cmp
and
or
ds
pop
xor
sbb
movsl
and
repnz
push
dec
xor
ret
jecxz
jp
push
xchg
inc
out
mov
or
repz
movsl
loope
std
lods
sub
notl
or
cli
fsub
ja
aaa
sub
pop
das
cmp
sbbb
out
jo
notb
insb
and
lcall
adcl
and
cmp
fsubs
aad
sbb
push
data16
jbe
data16
jge
pop
pop
hlt
loopne
sub
pop
mov
scas
push
adc
les
adc
repz
imul
sti
sbb
push
ss
push
xor
jg
aam
lahf
rcrb
mov
pop
shrl
js
push
bswap
push
popa
dec
in
in
mov
xor
cwtl
dec
mov
jp
cltd
cmp
adc
mov
xchg
add
dec
and
lcall
ja
push
xchg
pop
cmp
in
loopne
adc
cld
jl
push
flds
jmp
cmp
mov
adc
repz
adc
lret
out
mov
adc
ljmp
nop
sahf
cld
xor
sbb
mov
sbb
jns
xchg
arpl
call
fsubp
xor
daa
in
and
adc
mov
test
mov
push
push
aam
lds
push
jno
in
in
cmp
lods
push
mov
das
imul
dec
int
pop
mov
incb
mov
sahf
and
movsl
or
push
loope
xorl
pop
sbb
gs
outsl
scas
adcl
mov
int
repz
loopne
xor
ljmp
fwait
repnz
or
xchg
decl
lret
sti
xor
aad
inc
inc
mov
ss
push
push
mov
adc
xor
fsubr
in
cmp
dec
fsts
shlb
mov
mov
sub
cmp
ss
and
add
add
cmp
in
in
sub
mov
xchg
xor
sti
enter
push
out
xchg
mull
jmp
sub
and
in
shlb
cmc
scas
push
les
push
fimuls
test
adcl
mov
mov
mov
lds
inc
inc
cmc
push
and
dec
push
imull
and
mov
fwait
cmp
pop
inc
push
or
dec
xor
dec
push
aad
mov
add
push
push
jp
lods
iret
cltd
call
or
xchg
pop
fsubs
adc
xchg
and
push
lcall
cmp
lea
sti
sbb
stos
int3
and
push
mov
jl
and
das
cmpsl
into
lds
cmp
out
push
movsl
idivb
icebp
sbb
nop
or
mov
adcl
cmp
je
inc
fidivl
and
lds
xlat
pop
or
and
roll
leave
loope
dec
loope
int3
cld
test
sti
jg
lea
jge
cmpb
addr16
mov
lock
imul
xor
or
mov
es
xor
test
sbb
adc
pop
push
and
inc
rorl
push
cmp
out
cmp
jne
add
xchg
das
sbb
loope
jp
push
xchg
fcmovnu
fists
in
popf
jmp
or
or
and
or
and
cli
mov
sti
lock
rcrb
pop
out
adc
jmp
out
pop
push
test
xchg
es
adc
int
addr16
cwtl
insb
mov
pop
cmp
enter
sub
cmp
or
into
loope
pusha
mov
into
outsl
inc
lcall
fs
ss
xor
dec
cmp
add
daa
cld
addr16
fdivs
sbb
rcll
js
popf
test
inc
inc
lret
sub
outsb
adc
mov
mov
cmpb
dec
popa
test
stc
cld
jae
aad
arpl
adc
inc
mov
cmp
out
cmp
mov
call
and
push
outsb
out
stc
in
cmp
popf
arpl
xor
sbb
mov
or
stos
xor
inc
aas
xchg
fidivrl
cmp
xor
xchg
out
sub
jnp
gs
sbb
in
popf
aas
cmp
fisubrl
movl
push
iret
sahf
lock
call
in
xchg
jae
and
mov
mov
ret
or
xchg
cli
out
subb
in
sub
mov
cs
mov
test
imul
iret
call
fwait
mov
dec
and
dec
dec
movsb
xchg
cmp
pop
stos
mov
syscall
mov
leave
and
and
xchg
push
lahf
pop
not
sub
icebp
sub
add
nop
stc
jp
or
inc
cmp
std
push
rcr
cs
ja
mov
push
sub
out
ljmp
imulb
sahf
jbe
dec
xchg
mov
mov
xchg
repnz
pop
or
icebp
dec
push
jp
cs
mov
cmpl
testl
sbb
mov
add
lea
add
icebp
scas
mov
add
out
mov
mov
and
clc
xor
hlt
scas
sub
adc
idivb
or
and
inc
push
mov
jne
loope
xchg
stos
loopne
jmp
inc
sub
add
ds
or
fisubl
popa
xchg
ja
adc
adc
cmc
lea
repz
das
ror
cmc
shl
or
or
popa
or
and
loop
push
mov
sbb
and
pop
pushf
and
pop
scas
cwtl
xor
inc
in
loop
or
cltd
push
fldenv
cmp
jnp
jl
sbb
dec
in
jae
sbb
cmp
fldenv
scas
arpl
jmp
mov
ds
dec
iret
add
or
pusha
fs
mov
es
xor
stos
inc
jl
cwtl
cmp
jg
jp
sbb
cltd
pushf
mov
mov
jns
mov
adc
inc
lcall
mov
push
inc
dec
std
mov
xchg
mov
test
sub
pop
jbe
jns
sbb
jbe
cmc
cmp
popf
jecxz
dec
inc
dec
inc
mov
rcr
add
push
stc
scas
inc
rclb
cmp
push
and
xchg
cmpsb
je
or
out
add
sub
test
pop
sarb
lods
stc
fcomps
popa
push
sbb
jl
xchg
xor
shlb
cmp
rcrb
sub
aas
out
arpl
xchg
pop
xor
jg
sbb
jle
dec
fcmovu
fildl
stos
sub
jno
xchg
sti
mov
arpl
xchg
cld
mov
push
sbb
icebp
setle
incb
push
adc
jns
sahf
sub
notb
inc
pop
mov
or
mov
dec
into
jl
ds
push
cs
daa
cmp
add
dec
lods
adc
lods
jge
test
gs
add
inc
push
imul
jb
and
cmpsl
xor
xchg
mov
ret
xchg
fnstcw
clc
fstps
dec
dec
das
cmc
addr16
sbb
xchg
and
paddw
adc
and
mov
mov
mov
hlt
aaa
and
dec
jae
dec
nop
mulb
jmp
aas
insb
mulb
jmp
or
cmpsb
aam
sbb
pop
sar
loop
dec
ja
addr16
pop
jecxz
cmc
cmovg
in
sub
data16
jecxz
testl
and
fisubl
and
lret
mov
xchg
fisttpll
xor
cld
mov
test
sbb
icebp
and
outsl
in
in
cmp
fcoms
mov
movsb
mov
cmp
mov
scas
popf
mov
idiv
incb
popa
je
aam
in
cmp
std
rolb
cmp
cmp
daa
xor
repz
dec
and
insb
jecxz
or
repz
lret
outsb
pop
cltd
push
jnp
mov
cmp
out
imul
add
arpl
and
mov
addr16
lret
sbb
mov
mov
mov
pop
out
pushf
mov
fsubr
lret
xor
xlat
lods
inc
or
scas
jg
std
mov
insl
sbb
pop
cmp
icebp
jo
push
dec
cmpl
inc
mov
pop
hlt
pop
insb
dec
push
fsubp
dec
fwait
cltd
adc
fs
iret
pop
cmp
fidivl
push
dec
aad
rcll
repz
xlat
pop
aas
dec
xlat
scas
xchg
ss
aaa
vsqrtsd
mov
sahf
ror
mov
nop
mov
dec
nop
aad
cmp
add
dec
into
divl
mov
cmp
cmp
mov
aas
sbb
cmp
lods
mov
push
js
scas
cltd
lahf
dec
xchg
lock
test
add
mov
sbb
jne
daa
dec
cmc
add
lahf
sbbb
in
out
dec
xchg
iret
loopne
adc
mov
fsubrs
rolb
int
mov
xchg
stos
add
cmc
pop
xor
mov
cld
jb
or
and
mov
and
into
ja
dec
shlb
aas
shlb
mov
and
mov
xor
sbb
dec
in
in
dec
jbe
aas
sbb
js
mov
lcall
and
fidivl
lcall
xchg
insl
ret
jns
jecxz
orl
jle
cmp
mov
test
push
cld
jb
or
and
pushf
mov
icebp
and
paddw
psllw
addr16
in
cmp
orl
loopne
fcompl
jp
mov
jg
pop
loope
xchg
pop
imul
push
add
pushf
inc
push
adc
dec
bound
adc
in
xor
jns
sbbb
cmp
adc
ret
xor
test
inc
mov
jmp
iret
bnd
push
ds
cmpsl
and
and
jmp
aam
cmpsb
sub
outsb
jno
sub
hlt
pop
lds
mov
pop
in
push
jb
rclb
push
add
pop
adc
and
adc
dec
in
xor
and
fistpl
xor
nop
ffreep
psadbw
and
test
in
in
cmp
xchg
mov
jo
push
lock
scas
mov
dec
inc
lds
fisubrs
aam
mov
and
sub
dec
dec
pop
pop
dec
ret
sbb
or
or
xchg
dec
and
lret
mov
push
insl
insb
push
hlt
inc
pop
out
lret
cld
push
add
push
and
xor
in
cmp
fst
insb
push
icebp
and
addr16
dec
mov
add
mov
inc
mov
mov
mov
mov
sub
cmp
ljmp
jmp
push
xlat
ret
in
cld
call
rcrb
fdivrs
inc
jbe
lods
adc
pop
mov
pcmpeqb
je
out
xor
dec
fmull
mov
mov
stos
popa
inc
push
rorl
aaa
fcomps
xor
add
stos
stos
xchg
mov
cmpsb
cmp
in
cmp
jae
cmp
sub
add
mov
cwtl
cwtl
sahf
pop
sbb
iret
xor
aad
pop
loope
lcall
pop
rcr
jmp
push
testl
ss
or
cmpsb
cmp
in
in
cmp
je
cmp
sub
pop
and
mov
jg
sbb
sub
mov
paddw
or
and
test
in
cmp
push
test
scas
xor
pop
cmp
int3
movsl
sbb
push
loope
pushf
or
and
pop
out
xor
dec
shl
pop
les
ret
insl
cmpsl
push
jae
cmp
push
mov
test
das
cmc
inc
scas
js
xchg
scas
aad
mov
mov
cmp
pmaxsw
mov
test
mov
adc
es
mov
fucom
push
mov
cwtl
insl
dec
aam
in
cmp
lcall
mov
cmp
fnstsw
xchg
in
int3
in
mov
callw
cmpl
stc
jl
test
or
and
xchg
fnstcw
cld
jnp
cmp
arpl
lcall
stos
lahf
and
cmp
out
mov
out
cld
sar
and
ficomps
jb
inc
rclb
cmp
sub
ds
fimuls
jmp
mov
cmp
add
mov
movsb
enter
cmp
sbb
negl
popa
sbb
jge
lcall
fiadds
mov
les
repnz
sbb
inc
mov
pop
and
dec
mov
adc
jp
psubw
cmp
movsl
ds
pop
popa
hlt
mov
adc
mov
inc
int3
jl
inc
pop
lods
jns
sub
pop
cmp
mov
clc
fcos
cmc
test
fwait
lods
jecxz
je
push
or
mov
or
and
in
jne
loop
aaa
mov
jo
dec
dec
mov
sti
in
pop
lods
fldenv
jne
aaa
push
dec
std
dec
data16
call
je
mov
shlb
push
call
dec
and
pushf
in
or
cs
pop
mov
push
add
mov
repnz
dec
fs
aaa
repz
cwtl
fs
adc
sub
push
and
pop
cmc
mov
mull
test
ljmp
loop
aas
pop
les
fisttps
xor
sub
push
and
dec
or
decb
sbb
cmc
adc
ljmp
xchg
sbb
mov
pop
adc
mov
movsl
push
jge
add
pmaddwd
xor
or
mov
pop
sub
pop
wrmsr
shll
stos
roll
mov
ds
jnp
imul
cmp
movsb
fistps
cmpsl
jbe
fcoml
add
addr16
dec
test
inc
dec
mov
push
js
and
xchg
ffree
pop
add
out
into
out
sahf
and
adc
pop
add
inc
sbb
jbe
dec
out
adc
incb
lea
or
popa
push
imul
movl
push
adc
ja
sbb
loopne
cltd
imul
addl
push
das
dec
jle
bswap
shl
lret
jbe
cmp
pause
or
jne
aas
add
movsb
jns
cmpnleps
dec
fisubl
xor
inc
xchg
shrb
ljmp
es
inc
fidivl
daa
outsl
test
out
mov
lods
shlb
cmp
sbb
mov
cli
push
fcomps
dec
rcll
loope
mov
mov
es
addr16
sbb
outsl
pop
pop
rcll
sbbb
filds
push
lahf
outsb
popa
cltd
ljmp
fistpll
repz
cld
ror
and
cmp
mov
inc
idivl
ret
neg
adc
lods
fwait
mov
mov
nop/reserved
jmp
cmpsb
mov
mov
xchg
stc
cld
rolb
cmp
aas
stos
xor
dec
inc
mov
push
xor
int
fs
or
rclb
or
shrb
ss
cmp
pusha
lods
addr16
outsl
push
or
and
mov
test
lods
fidivl
or
aam
cs
jecxz
sub
enter
aam
push
loope
sub
icebp
scas
adc
andb
and
inc
add
mov
dec
push
push
dec
in
in
jne
push
pop
mov
jbe
xor
xchg
xor
ss
dec
mov
rorb
inc
mov
mov
cmc
and
cmp
ja
test
loope
inc
scas
xor
enter
mov
xor
jne
mov
andl
sbb
xor
sbb
push
jg
jo
or
and
int
or
dec
fnop
cli
out
lea
into
je
sbb
push
cwtl
sbb
in
lcall
push
mov
cmp
push
pop
inc
mov
fiaddl
aaa
lods
xor
or
and
sub
das
and
inc
dec
scas
sub
and
xlat
jae
ret
xchg
xor
push
fldln2
rdtsc
inc
js
fadd
pop
iret
dec
and
mov
pushf
sub
pop
cmc
dec
xor
in
cmp
in
in
and
fdivrs
xchg
lcall
ror
add
xchg
mov
xchg
xchg
and
and
divl
cmp
dec
dec
xchg
data16
cmp
xchg
insb
mov
repnz
push
xor
in
hlt
out
clc
sbb
mov
leave
or
sub
mov
inc
cmp
test
inc
cmp
pop
and
daa
test
jns
test
