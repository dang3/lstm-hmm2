je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
jb
push
divb
inc
adcl
add
add
add
or
pop
add
add
add
push
inc
add
mov
add
add
add
add
add
add
add
add
add
add
add
leave
add
add
add
testb
add
mov
add
add
lea
push
add
push
add
inc
add
add
add
add
inc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
pop
add
add
add
add
testl
push
add
push
add
add
add
add
add
add
pop
add
add
add
xlat
add
add
pop
add
add
add
add
add
pop
add
add
add
imul
ja
or
sub
mov
add
sub
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
cld
add
add
inc
add
add
add
add
add
add
flds
scas
add
add
add
add
cld
add
add
add
cmp
or
add
cmpsb
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
cmpsb
add
add
add
add
pop
add
add
add
pop
add
fildl
popl
scas
add
testl
test
sbb
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
and
imul
addl
sub
lret
add
add
add
add
push
add
add
add
add
add
add
dec
add
add
add
add
add
sbb
test
inc
add
add
add
mov
or
pusha
add
pop
add
testb
add
pop
add
add
add
pop
add
add
add
add
cmc
add
or
test
push
add
add
add
add
add
lock
mov
add
mov
add
add
add
dec
add
add
add
add
add
xchg
add
add
add
mov
sahf
add
add
add
add
or
sub
testl
testl
mov
add
lds
in
add
add
add
add
add
add
add
add
lret
add
add
fildl
scas
add
add
add
mov
add
testl
push
add
add
add
sub
mov
add
add
add
add
add
add
add
add
add
add
jge
sub
add
add
add
add
daa
xchg
shlb
dec
movsl
jb
das
jl
lcall
lods
sbb
pop
nop
sub
xchg
sub
or
xlat
lret
arpl
pop
cli
ficoml
xlat
add
sbb
inc
cmp
mov
in
pop
mov
pop
imul
or
mov
push
jp
shlb
cmp
mov
cwtl
data16
pop
ss
mov
sbbb
mov
inc
mov
xor
outsl
xchg
fsin
push
mov
mov
shlb
mov
or
lcall
mov
popa
sbb
inc
mov
mov
inc
rolb
sub
pop
cmpl
and
sub
jg
sbb
lock
sub
sysenter
std
test
inc
addr16
cmpsb
push
jl
push
pop
jp
mov
push
jp
mov
adc
icebp
pop
cmp
bound
mov
push
jge
fstps
sub
xchg
leave
scas
inc
sub
imul
xor
push
xor
jle
mov
popa
movsl
jmp
mov
pop
push
loopne
roll
sub
orl
insl
sub
test
mov
aad
sub
fs
lock
and
cld
addr16
jl
negb
lock
nop
int
outsl
mov
leave
or
push
xor
andb
je
stos
scas
into
add
jl
bound
jg
xchg
icebp
lahf
test
or
xor
ret
mov
jle
adc
icebp
push
inc
push
or
cmp
cmpsb
xor
adc
dec
sub
jo
sbb
xor
mov
pop
popa
pop
outsl
xchg
in
in
loop
repz
adc
das
test
and
insl
dec
cmp
xor
in
lahf
mov
lods
push
int3
ficompl
notl
jns
sbb
cmp
imul
xchg
std
jns
xchg
jp
out
int
lret
inc
xchg
mov
enter
dec
mov
loope
gs
cs
movsl
xchg
mov
sar
and
adc
daa
int3
add
or
jl
jle
mov
adc
lahf
ja
fistpll
push
cli
mov
or
push
jne
dec
xchg
dec
inc
fidivl
sbb
push
sub
pusha
pop
jl
push
mov
out
or
sub
sub
and
in
fmuls
stos
cmc
jo
in
cmp
fisttps
dec
fildl
test
inc
jmp
sub
pop
cmp
add
je
clc
sbb
lock
jl
mov
or
jb
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
pop
into
push
int
scas
inc
icebp
cmp
std
jle
dec
cld
jle
mov
push
test
mov
push
mov
dec
les
sub
mov
cs
aas
lcall
out
jo
pusha
mov
cmpsl
add
enter
xchg
sub
jge
ja
sahf
add
sub
rolb
lret
xlat
xchg
adc
sti
pop
jo
adc
push
adc
out
dec
jae
into
popa
into
sub
inc
jmp
xlat
push
cmpsl
aaa
andl
xchg
call
xchg
inc
arpl
xor
cmpl
insb
enter
andb
movsb
test
std
ds
out
cmpsl
cs
push
sub
pop
sahf
mov
dec
pop
add
mov
sbb
push
int
cmpsl
xchg
xchg
stos
or
enter
and
daa
pop
adc
test
out
push
mov
sub
nop
push
repnz
mov
xchg
mov
pop
pop
out
mov
push
mov
into
jno
js
or
ja
data16
loope
nop
orb
pop
mov
stos
or
sarl
inc
repz
sbb
xor
imul
aam
and
xor
or
push
loop
fisttpl
insb
mov
sub
dec
clc
dec
cwtl
jle
push
int3
xchg
pop
stos
or
cmp
mov
sahf
cmp
jle
dec
call
ds
push
test
mov
into
push
mov
cmp
jle
dec
call
ds
push
test
mov
xchg
out
mov
addl
cmp
mov
popa
xchg
cmp
add
cmp
xlat
ficoms
popf
xchg
scas
gs
mov
mov
dec
jg
cmp
iret
jbe
sub
sub
xor
aas
mov
push
sub
add
jnp
xchg
pop
in
fnstcw
dec
or
pop
sarb
inc
xchg
cmp
pushf
iret
or
int3
mov
std
mov
and
inc
movsb
adc
mov
scas
jbe
inc
inc
sarl
sti
mov
push
fildll
push
in
mov
xchg
push
insb
rcl
jmp
outsb
pushf
mov
shlb
popf
aam
in
dec
inc
inc
pushf
jns
jbe
daa
mov
sahf
stc
pop
pop
stos
pop
sub
and
pusha
repz
popf
cmp
sub
push
mov
dec
dec
adcb
les
outsl
lock
pop
sbb
sarb
adc
xor
pop
jmp
mov
mov
stos
and
popf
movsl
bound
gs
insl
lea
add
or
into
cmpsb
test
clc
shlb
fsubrl
ds
push
movsbl
xor
xchg
fldenv
xlat
aam
push
push
adc
and
fwait
cmp
push
add
adc
jmp
dec
cmp
dec
stc
daa
sbb
fiadds
test
xchg
cli
xor
loop
mov
or
sbb
xchg
xchg
sahf
jecxz
jl
jbe
test
out
mov
mov
and
pop
mov
sub
movsl
lcall
dec
cli
jge
pop
inc
std
loop
pusha
xor
loope
pop
dec
xchg
stos
mov
inc
lea
movsl
jne
pushf
orb
cmc
jno
cmp
dec
loopne
movsb
mov
inc
popf
xchg
mov
leave
push
stos
imul
test
in
out
or
fcom
ficoms
adc
clc
call
mov
out
adc
aam
fldenv
sbb
xor
mov
jbe
jno
loopne
sub
jle
cmp
add
sub
pop
adc
xlat
ljmp
mov
push
gs
mov
les
push
mov
jbe
outsl
testl
mov
or
shlb
popa
xchg
and
imul
das
sub
xchg
mov
test
leave
into
pop
cmpsb
push
push
jo
sbb
out
cmp
bound
imul
add
sti
cmp
xchg
rcl
sbb
loop
out
enter
or
pop
adc
xorl
loop
push
fsts
or
cmp
je
sub
mov
test
xchg
adc
sti
adc
dec
push
cltd
cmp
sahf
and
jne
inc
xor
sub
push
popa
stc
icebp
js
add
ret
pop
hlt
mov
jl
mov
stos
xchg
in
cmp
jle
and
pusha
movsb
cmpl
movsl
inc
cli
fdivrl
xchg
lret
hlt
imul
cld
jmp
aas
int3
xorl
orl
cmp
push
in
fcmovu
out
in
cli
sub
xor
scas
sub
or
sub
jo
in
or
mov
xchg
stos
pop
or
pop
ret
sub
mov
mov
xor
or
sbb
add
aam
mov
and
jns
lods
jnp
dec
push
sti
icebp
int
cli
push
out
pop
inc
mov
dec
jo
lret
jg
dec
push
and
and
mov
lret
cmovs
add
adc
mov
rcr
cmpsl
repnz
inc
or
test
daa
push
add
mov
pusha
pop
cmp
xor
cwtl
lcall
sbb
mov
dec
loope
mov
jno
sbb
sbb
in
or
xor
xchg
mov
adc
inc
sti
aaa
and
push
jmp
stc
hlt
jno
cltd
cmp
je
scas
add
adc
fmul
daa
aam
std
dec
push
stos
call
popa
lock
icebp
cmp
repnz
jae
inc
adc
cld
add
and
and
xchg
flds
aad
cmpsl
lock
cmpb
sar
rcr
or
dec
xor
mov
and
popf
add
push
xor
cld
loop
inc
dec
lods
pop
call
loopne
nop
loope
sbb
ss
jne
sbb
shlb
lret
mov
rorl
cmpsl
pop
fcoms
les
fstpl
mov
cmpsl
fcomp
iret
out
repnz
mov
xchg
xchg
jne
sub
sahf
ret
loopne
jp
mov
mov
imul
cmc
clc
cmp
pop
lahf
shll
mov
dec
jge
imul
sub
sub
inc
dec
xchg
or
and
xchg
push
sbb
or
cmp
fwait
push
addb
jg
add
fidivrl
pop
faddl
js
dec
test
bound
imul
clc
out
testb
sahf
ret
pop
test
dec
xchg
push
mov
cmp
addl
std
or
push
xchg
push
push
fmulp
test
sub
push
rorb
imul
int3
lock
jmp
jnp
mov
cmpsl
jae
in
in
and
push
dec
repnz
cld
sti
jo
cmpsl
cmp
scas
add
cld
xchg
pop
fs
sbb
cmp
xchg
into
xor
jb
rorl
mov
and
xor
push
jo
cmpsb
sbb
adc
fnstcw
int
cld
in
cli
xlat
mov
mov
push
jl
out
inc
scas
or
cmpsb
fcompp
mov
xchg
jae
sub
xor
lds
mov
lret
adc
or
sub
mov
sub
mov
stc
loop
xor
aam
in
sub
testb
inc
mov
jae
test
shrl
pop
sbb
mov
ss
push
lock
mov
movsl
xchg
scas
in
push
sahf
or
xchg
xchg
push
insl
fisttpl
xchg
add
cwtl
push
jg
mov
aaa
ds
mov
outsl
ljmp
xchg
in
and
pop
pusha
and
xorb
cld
js
fcompl
clc
push
das
mov
push
and
insl
pop
stc
loop
mov
mov
cmpl
in
sub
sub
push
fsubrs
inc
test
pop
enter
data16
adc
pop
test
jne
jmp
mov
fwait
push
mov
imul
sbb
sbb
push
int3
out
test
orb
out
fcmovnb
mov
jecxz
mov
enter
xchg
ret
mov
inc
inc
mov
insb
jmp
mov
and
and
iret
adc
cmp
and
jbe
stos
out
ja
push
add
xor
inc
pusha
ret
int3
adc
movsl
das
ljmp
mov
push
pop
add
inc
ja
iret
fistps
adc
sub
inc
mov
cmp
imulb
ror
nop
pop
and
fwait
packssdw
xor
es
push
fstl
addr16
hlt
push
push
push
sbb
jb
rorl
leave
enter
fsubs
dec
inc
and
mov
fwait
jmp
sbb
jl
pop
out
in
mov
ficomps
sub
sbb
sub
fdivrp
stos
orl
sar
jne
inc
jecxz
add
inc
lods
adc
xor
test
stos
cmpb
cmp
sarb
les
xor
mov
push
adc
xor
push
jae
xchg
or
ss
nop
les
xchg
jno
xchg
adc
jp
hlt
ficomps
inc
int
dec
rcrl
push
leave
add
scas
pop
push
shrb
inc
push
xchg
sbb
push
out
add
loopne
cld
push
push
jecxz
xlat
mov
pop
push
mov
inc
xchg
sti
test
adc
add
popf
mov
jle
cltd
adc
ffree
xchg
pop
popl
xchg
scas
sub
jb
jg
adc
jne
shl
pop
and
jne
xchg
cmp
and
test
pop
xchg
test
mov
add
jbe
lahf
mov
bound
jbe
cmp
sub
and
push
dec
xchg
adc
or
xchg
mov
addr16
xor
dec
aad
sbb
push
mov
and
int3
lret
iret
pop
ret
in
adc
jno
adc
mov
sub
pop
push
mov
imul
push
pop
pop
hlt
mov
int
cmp
cli
out
lods
or
test
sub
into
sub
or
aam
xchg
enter
je
repz
sbb
sbb
movb
and
mov
sbbb
ffreep
add
fs
loopne
test
hlt
pop
fsubrs
push
shlb
aas
ret
or
dec
push
mov
jne
mov
je
pop
ss
add
jl
out
cmc
imul
dec
and
je
fstps
loop
or
pop
sbb
and
in
mov
mov
and
xlat
das
fcom
popa
and
mov
xchg
mov
mov
pop
out
add
scas
hlt
push
icebp
and
xorb
out
xor
sbbl
lea
pop
pushf
mov
dec
in
subl
fsub
jle
sarb
cld
fst
xlat
push
roll
mov
cmp
and
lcall
adc
pushf
fcoml
push
pmovmskb
mov
les
adc
hlt
push
xchg
sub
ja
insb
push
adc
out
mov
mov
push
xchg
insb
cmp
push
add
fmuls
jb
in
xchg
jg
dec
mov
es
imul
fwait
das
je
pop
movsb
mov
nop
sarb
xor
test
xor
arpl
mov
aas
lahf
call
mov
int
ja
push
ljmp
in
cld
mov
insl
stos
pop
jl
mov
or
cmp
jne
cwtl
inc
push
scas
cmp
or
js
stos
repz
cmp
and
jne
xchg
adc
dec
rolb
lcall
add
inc
dec
mov
sbb
ja
orl
jno,pt
push
mov
sti
and
mov
jo
fildll
lcall
das
dec
lret
pop
mov
test
cmpsb
shrl
sarb
inc
sbb
andb
lds
mov
push
fadds
mov
sbb
stos
imul
into
adc
imul
push
push
movsb
pop
pop
addr16
jge
test
dec
push
cld
ret
into
xor
popa
add
and
xchg
inc
mov
and
lahf
jg
xchg
das
arpl
std
arpl
cs
lods
push
imul
jmp
add
xchg
push
push
and
out
jb
push
or
aaa
dec
mov
pop
and
fmull
cld
popf
xor
adc
into
lods
negb
pop
inc
or
and
pop
pop
iret
cmpsl
push
rorl
pop
repz
inc
int
pop
stos
stos
jg
fsubl
xchg
or
inc
push
addl
cltd
mov
int
lret
adc
or
cmpsl
dec
and
imul
ja
fcomip
pop
out
mov
inc
shl
cli
inc
or
xor
mov
imul
and
ret
sbb
pushf
das
popa
add
lret
les
mov
loope
cs
imul
jge
cmpsb
stos
jo
ljmp
dec
jge
addb
fstl
adc
push
aad
mov
mov
adc
shl
subb
orb
lea
add
out
sahf
jne
jnp
add
mov
push
cs
stc
divl
sbb
mov
popf
xlat
add
les
xor
push
xchg
pop
jne
outsl
test
mov
lods
in
les
sbb
adc
addl
dec
push
flds
sub
or
xor
xchg
inc
pop
xchg
and
lcall
sbb
sub
sbb
leave
adc
mov
sti
dec
insl
ja
fcmovu
xchg
fimuls
or
jbe
dec
xchg
inc
xor
jle
xchg
jbe
push
in
add
jbe
sub
push
fisubrs
mov
in
psubusb
inc
mov
pop
jns
inc
sahf
mov
sbb
nop
push
inc
inc
stc
test
mov
cmp
pushf
jmp
dec
imul
mov
ss
dec
xchg
addb
mov
sub
xchg
lods
lock
jp
xorl
mov
xlat
pop
lds
mov
enter
aas
sbb
pop
and
mov
loopne
int
dec
vcvttss2si
jno
cmp
ljmp
sbb
in
adc
repnz
mov
adc
push
popa
je
rcrl
rcr
sub
or
add
xor
mov
xchg
fsubl
std
js
add
lahf
mov
sarl
push
jg
int3
fnstenv
sub
sub
jp
adc
loop
leave
or
int
adc
divb
shlb
fs
daa
lret
filds
call
daa
push
pop
mov
test
es
xor
push
clc
mov
add
add
aaa
ficoms
sbb
xchg
mov
jle
stos
add
sahf
inc
inc
fsubs
sbb
mov
and
arpl
sbb
nop
popa
cmc
or
adcl
sahf
dec
dec
push
cmp
mov
rcrb
test
and
jg
mov
hlt
mov
sbb
sub
cld
jl
ss
shufps
cmc
das
movsl
adc
nop
jnp
icebp
pop
or
mov
mov
popf
mov
sbb
sti
sbb
clc
xchg
jns
cmc
jnp
push
ss
push
mov
out
sub
or
leave
mov
lock
jnp
xchg
pop
or
add
adcb
push
scas
push
xchg
mov
rclb
lret
mov
adc
imul
aas
cltd
in
push
pop
notl
das
pop
sub
mov
repnz
sarl
call
nop
xchg
inc
inc
outsb
pop
jnp
add
mov
out
rcll
in
mov
out
in
fwait
movsb
xchg
jo
push
aaa
stc
push
jns
inc
aam
inc
xchg
stos
pusha
xor
xor
push
sub
jmp
scas
in
mov
sbb
cmp
rolb
mov
mov
call
sub
aas
dec
push
sti
lods
test
movsl
aad
jns
or
loope
mov
bnd
inc
je
outsb
cmc
das
stos
lods
cmp
sahf
std
sbb
pusha
mov
loop
icebp
imul
xor
push
push
clc
jge
cld
into
xlat
in
out
iret
push
mov
sub
or
push
dec
mov
jmp
lret
stos
cmpsb
sub
shlb
and
mov
sub
sub
xlat
xor
mov
xor
pop
add
push
push
aas
and
dec
lahf
jae
or
cli
pop
loop
aad
test
dec
sub
push
mov
add
push
add
inc
jge
add
in
aam
xor
notb
cmp
movl
or
in
lds
rcrl
mov
push
xchg
outsb
adc
xchg
xchg
add
inc
jae
rcl
add
fnstsw
test
in
mov
scas
call
aas
xor
aaa
cmp
cmp
sbb
mov
sbb
mov
lcall
shlb
pop
repnz
mov
imul
cmpsl
xor
lahf
in
mov
movsb
jo
dec
clc
cmpsl
cmp
pop
rcl
ja,pn
push
mov
or
imul
inc
cmpsl
push
inc
xor
inc
inc
push
cs
fucomp
cltd
aas
push
and
loope
rcl
xchg
xchg
faddp
sbb
inc
mov
ret
lock
sbb
jp
xlat
fwait
or
jnp
icebp
cltd
sub
mov
andb
icebp
divb
data16
test
cmp
test
jmp
sarl
push
and
ss
sbb
insb
pop
push
dec
movsl
or
pop
adc
or
push
add
sub
lcall
dec
or
pop
ss
xor
clc
rcll
mov
cmp
mov
adc
dec
mov
lods
jb
inc
ljmp
ficomps
ret
and
cwtl
push
xchg
in
orl
mov
pop
cmp
out
fmul
out
mov
not
shl
nop
push
sbb
pop
lcall
jecxz
or
xchg
call
jnp
mov
inc
jno
in
xor
lods
sub
push
xchg
add
mov
cmp
decb
imul
and
fisttpl
shlb
mov
aaa
lahf
xor
imul
in
sbb
popf
out
test
add
cwtl
mov
lea
or
mov
aaa
sub
scas
jge
dec
js
jg
inc
sub
cwtl
test
xchg
xchg
jno
jecxz
hlt
lods
xchg
outsb
idivb
mov
cmc
cld
mov
jg
ja
test
ficompl
inc
mov
bnd
push
cmp
dec
dec
push
push
adc
push
cwtl
mov
loope
cmp
pop
addr16
pop
pop
frstor
movsb
jmp
xchg
xor
xchg
inc
dec
pop
cmp
in
dec
mov
or
jb
lods
insl
into
pop
mov
push
inc
pop
aas
iret
or
imul
ds
lods
pop
lahf
les
push
stc
ja
arpl
mov
xor
xorb
xchg
or
adc
insb
push
pop
iret
mov
inc
in
rorb
scas
popa
dec
pop
xor
shl
cmp
xchg
movsb
js
repnz
add
push
mov
lds
imul
sbb
sbbl
hlt
cld
jecxz
xor
in
fs
or
dec
or
jge
loopne
push
ljmp
sbb
testb
gs
andl
jns
jno
cmp
insl
std
bound
push
inc
inc
mov
mov
cltd
notl
movsl
aam
jne
mov
or
cmc
mov
test
or
mov
push
mov
jg
jnp
adc
lahf
push
das
xchg
mov
mov
sub
dec
pop
popf
test
add
xchg
pop
daa
jl
iret
sbb
test
and
push
mov
aad
dec
testb
jnp
incl
cmp
jnp
push
jns
dec
add
jb
outsl
lcall
cmpsb
xchg
cld
les
neg
mov
and
gs
add
loopne
mov
pop
pop
data16
aad
pusha
daa
or
mov
adc
setno
arpl
mov
out
jae
fcoms
or
aaa
fistl
cmpsb
pusha
enter
inc
in
inc
sarb
movsb
adc
sub
loopne
popa
lock
inc
fsubr
or
or
push
jp
loope
inc
push
test
pusha
pop
pop
insl
cmp
ret
dec
std
daa
pop
sub
mov
out
ds
pop
daa
imul
pushf
jbe
sub
push
pushf
add
mov
xlat
dec
dec
xor
pushf
push
stc
or
and
cmp
shl
aad
add
stos
loope
xchg
xor
dec
mov
cwtl
cwtl
call
mov
test
popf
adc
lock
xor
into
test
mov
arpl
sbb
add
fcoms
cltd
in
xchg
push
xchg
cmc
push
lret
xor
dec
xor
cmpb
dec
sbb
jno
xor
fbstp
fcmove
je
jg
jns
movsb
stc
dec
data16
fdivrl
fs
adc
je
cmp
rclb
adc
mov
adc
lock
ljmp
dec
popf
popf
dec
mov
inc
xor
inc
mov
sub
test
mov
push
sti
dec
hlt
add
outsl
add
jmp
jle
sub
iret
sbb
imulb
adc
push
cmpsl
mov
jnp
fiaddl
fstps
mov
xchg
xor
cmp
andl
xchg
jg
jmp
xor
xor
jp
cmp
jbe
dec
sbb
loop
flds
scas
stc
bound
addl
mov
xor
and
mov
push
adc
inc
fwait
inc
cld
push
addr16
pop
cmc
outsb
mov
sbb
bound
mov
popf
push
pop
movb
xchg
or
dec
mov
outsl
cmpsl
xchg
jo
inc
add
push
push
repnz
xchg
xchg
jbe
push
cwtl
fxch
xchg
jg
in
mov
fyl2x
test
lret
or
in
orb
sbb
outsl
dec
in
fildl
lds
loopne
push
cmp
in
adc
repz
movsl
dec
fs
pop
or
adc
aad
push
pushf
js
outsb
movsb
or
sbb
repnz
test
xor
loop
jae
push
jg
in
fs
sbb
scas
idivl
pusha
jmp
dec
xchg
pop
pop
fsubs
cltd
or
neg
push
lcall
ss
std
in
or
dec
data16
pusha
fistl
adc
mov
loope
mov
jg
xchg
cs
popf
lcall
sbb
loope
dec
mov
dec
inc
fsubrp
mov
nop
pop
pop
or
push
int3
sbb
pushf
popa
jno
mov
jl
and
mov
ljmp
pop
sbbb
add
add
dec
add
dec
cwtl
cld
aad
push
int3
add
and
or
pop
stos
out
or
mov
inc
push
add
inc
jae
cli
and
repz
aad
sbb
or
bound
jmp
adc
fnstcw
mov
out
lahf
mov
xor
inc
iret
add
cmp
ret
dec
jne
sub
mov
fiadds
call
add
data16
adc
hlt
je
movq
cwtl
xor
add
adc
xor
frstor
mov
ja
rclb
or
dec
lahf
loop
les
mov
xchg
inc
mov
and
lahf
add
mov
inc
and
adc
sbb
sahf
pushf
dec
iret
test
jge
lds
daa
pop
mov
mov
test
xlat
xchg
xchg
bound
psubw
ljmp
mov
push
int3
ret
push
push
imul
mov
mov
jae
lods
push
or
mov
cmp
iret
ss
insl
dec
mov
in
dec
push
add
movsl
in
idivl
mov
xor
inc
repnz
pop
xchg
js
or
cmp
jle
dec
call
ds
push
test
mov
into
push
mov
cmp
jle
dec
call
ds
push
test
mov
into
push
mov
cmp
jle
dec
call
cmp
fimull
clc
insb
fidivrs
or
clc
xchg
enter
call
mov
icebp
xlat
loope
int3
int3
int3
int3
int3
aas
out
imul
iret
or
jnp
outsl
jg
outsl
mov
aas
das
push
pop
fisttpl
lret
cmp
sub
sbb
or
pop
gs
outsl
stos
sub
das
jmp
fisttpl
lret
lcall
iret
jge
dec
scas
and
mov
popa
stc
push
test
lea
popa
scas
mov
out
push
dec
mov
xchg
adc
je
mov
fstps
mov
aas
out
and
xorb
sub
hlt
xchg
outsb
sub
xchg
movsb
jns
mov
shlb
shr
mov
push
icebp
xchg
push
fs
inc
inc
sti
loope
mov
adc
add
jne
or
or
cmp
sub
outsl
mov
jg
jg
shlb
shr
popw
and
mov
in
fwait
mov
div
add
movsb
push
lcall
dec
jnp
jnp
xchg
sub
inc
add
xlat
aam
outsb
das
fildl
outsb
cwtl
pusha
sub
das
call
or
add
addr16
out
or
outsl
iret
or
pop
fnstcw
outsl
add
dec
mov
das
add
mov
ja
addr16
out
cli
cs
or
clc
imul
ds
pop
mov
pop
mov
stc
sub
cmp
fisubrl
push
leave
or
insl
mov
mov
mov
into
addr16
pop
dec
jg
outsl
stos
pop
fwait
dec
mov
sti
das
jmp
fisttpl
lret
cmp
sub
sbb
or
pop
dec
jg
outsl
stos
pop
fwait
dec
mov
sti
das
jmp
fisttpl
lret
cmp
fs
gs
mov
jg
insb
movsl
in
jg
jns
hlt
add
push
xor
mov
sub
xor
ja
xor
push
ret
mov
add
addl
lods
adc
cmc
ds
sub
hlt
in
insb
push
cmp
jmp
add
xchg
out
into
adc
mov
loopne
aam
and
cmp
push
out
fwait
lcall
and
and
loopne
mov
adc
addl
dec
outsl
sti
adc
push
mov
jne
xchg
adc
int3
xor
xchg
sub
insl
xchg
sahf
push
jno
xchg
fistpll
xchg
jge
repnz
inc
cmc
jb
xor
sub
push
lea
or
and
test
and
ljmp
inc
lret
dec
xor
sti
dec
pop
pop
sub
lock
dec
dec
mov
push
cmp
pop
mov
mov
fadd
pop
imul
int3
jmp
push
cmc
icebp
or
je
inc
shl
mov
adc
add
lods
adc
rcll
imul
idiv
scas
adc
and
lret
out
mov
cs
mov
sbb
stos
xchg
pop
push
mov
mov
jbe
mov
lea
sbb
sub
sbb
iret
daa
pop
mov
xchg
or
mov
mov
pop
pusha
or
adc
outsl
inc
test
data16
jns
daa
mov
cmpsl
enter
and
adcl
arpl
xor
or
or
pop
sarb
ds
test
icebp
adc
sbb
xor
mov
mov
mov
add
mov
test
mov
pop
cmp
cli
mov
jge
idivb
js
push
divl
push
xchg
iret
mov
inc
popf
int3
pusha
cmp
cmp
pushf
cmc
cmp
repnz
or
mov
lods
test
in
mov
add
mov
lcall
outsb
out
jb
push
push
mov
pop
idivl
iret
and
push
test
jno
jns
shl
aad
jmp
cwtl
add
dec
bound
test
sar
sbb
mov
sub
inc
cmp
movsb
repnz
out
mov
cmp
bound
sarl
xor
and
stos
add
adc
jae
mov
shlb
add
or
mov
ret
xorl
push
sbb
jbe
ret
arpl
adc
cmc
push
cmpsb
dec
pusha
loop
test
iret
scas
test
adc
les
in
adc
or
in
sti
lret
psrlw
push
jle
aas
lcall
dec
fs
shrb
mov
icebp
push
mov
movsl
xor
sbb
dec
adc
push
fisubs
flds
ret
jl
fmul
test
das
rclb
mov
add
pushf
je
dec
sub
daa
ficompl
cmp
bound
fwait
sbb
inc
cltd
push
xor
add
mov
or
sbb
mov
popa
mov
ds
cmp
stc
mov
push
xor
imul
inc
std
cwtl
adc
outsl
stos
in
ret
adc
mov
push
shrb
xor
fldt
sbb
jo
fs
outsl
fisttps
flds
mov
ret
addb
repz
or
popa
jae
mov
imul
add
sbb
pop
adc
icebp
ret
movsl
in
add
nop
outsb
or
cld
and
mov
in
sub
sahf
and
in
mull
inc
rol
test
push
cmp
sbb
pop
insl
in
mov
fsubs
pop
jnp
int3
mov
ret
mov
sahf
cmp
add
mov
call
sbb
iret
int
adc
ljmp
sbbb
sub
rcrl
cld
andb
sbbl
sbb
js
stos
js
sbbb
lahf
dec
dec
cmp
sub
jp
out
popl
ret
jns
sbb
loopne
out
inc
fisubrl
enter
and
into
lea
lcall
subl
jl
popf
leave
xchg
xor
xchg
inc
iret
jle
jmp
test
jae
stos
in
push
popa
repnz
mov
cld
je
mov
or
mov
xchg
outsb
icebp
gs
icebp
in
popf
aaa
in
sub
mov
jne
aad
testl
mov
adc
ret
sarb
xorb
lds
and
aam
jne
js
cmp
jno
mov
add
sub
test
scas
std
mov
test
stos
inc
out
push
arpl
int
jnp
xchg
push
lret
mov
inc
outsb
adc
sbb
inc
inc
fdivl
fwait
imulb
in
inc
xchg
cmc
sub
mov
mov
push
mov
test
out
pop
gs
int3
testl
lret
jbe
or
pushf
and
lea
jp
push
cmp
lods
orl
adc
lea
adc
push
insb
xchg
or
pop
cwtl
daa
outsl
into
mov
out
test
loopne
shl
pop
xchg
stos
les
sbb
aaa
and
jl
push
cmp
lret
cltd
or
stos
inc
add
pop
mov
scas
ljmp
xor
movl
and
push
call
lcall
xor
iret
and
ficompl
pop
fldcw
sbb
pop
test
daa
lahf
stos
sbb
mov
test
into
out
mov
push
sbbb
add
pop
orl
lahf
repnz
push
pop
cli
ret
adc
sub
xchg
fs
push
jge
stos
pop
mov
jno
sbb
in
adc
and
movsl
cs
add
dec
sub
mov
loopne
aas
mov
adc
lea
lahf
out
in
mov
xchg
push
idiv
sar
mov
ret
jmp
lock
insl
sbb
fidivrl
sub
sarb
leave
push
dec
jg
dec
push
movsb
sbb
cwtl
and
insl
xchg
dec
stos
iret
insb
add
or
dec
jg
test
nop
or
sahf
dec
push
inc
add
pusha
imul
pusha
int3
dec
push
jmp
sub
hlt
cmp
mov
arpl
bound
pop
pop
or
and
dec
popa
idiv
ds
lret
imul
test
ret
sbb
fst
loope
and
mov
outsb
cmp
daa
cld
xchg
inc
imulb
pop
jo
inc
jo
dec
pusha
push
pop
push
mov
outsl
xchg
pushf
inc
pop
shrl
dec
pop
popa
call
mov
fstl
lret
xlat
sub
add
shl
fistl
inc
stos
test
je
jle
sbb
pusha
cltd
or
jne
inc
jnp
aaa
popa
or
insl
incb
js
test
fisubl
push
loop
adc
int3
pop
adc
pushf
sub
bound
nop
nop
stos
cli
push
push
dec
jg
shrb
adc
xchg
push
cmp
jbe
push
xchg
cmc
dec
push
xchg
push
lret
mov
call
pop
pop
sub
aaa
fnstcw
sub
mov
push
lds
jge
sbb
jge
mov
mov
cmp
xor
std
sbb
pop
fistps
xchg
jp
data16
ret
mov
in
or
xchg
popf
jl
xchg
test
bound
hlt
popf
ret
lret
mov
ja
lret
pop
mov
fwait
lock
cmp
enter
mov
subl
jmp
pushf
mov
lods
cmp
jecxz
inc
lods
movsb
fmulp
and
mov
faddl
mov
fsubp
xchg
xchg
mov
mov
jns
inc
adc
mov
jge
mov
xchg
insl
out
sbb
adc
adc
sbb
inc
in
imul
mov
pop
test
xor
jb
jl
mov
nop
popa
sti
pop
pop
mov
dec
mov
aas
outsl
jmp
shrl
cwtl
cli
test
nop
lds
nop
sub
xchg
ret
enter
xor
shlb
jle
les
sarl
mov
es
add
iret
int3
push
insl
dec
push
mov
sub
cmp
add
test
inc
arpl
or
lahf
or
lock
sbb
mov
into
mov
jecxz
jnp
jp
lret
mov
aad
add
jmp
nop
xchg
fsubs
mov
test
or
and
xorl
pop
rolb
pop
mov
push
push
ds
push
jmp
fisttps
mov
xchg
dec
cmpsl
repnz
push
sbb
stos
pop
adc
cwtl
push
jecxz
mov
sub
mov
mov
inc
pop
sbb
imul
test
jmp
add
jmp
push
scas
mov
pop
das
mov
sbb
cmpsb
inc
cmp
testl
negb
push
jg
addb
mov
adc
adc
mov
cwtl
push
lds
pop
adc
call
inc
mov
out
add
dec
stos
cwtl
add
jnp
clc
jnp
pop
xchg
fisttps
jmp
push
xchg
iret
pop
add
cmpsb
lock
xchg
js
xor
cmp
or
pop
ret
mov
mov
sti
adc
xor
lods
jo
negb
mov
mov
sbb
inc
sbb
in
or
mov
mull
dec
jb
idivb
cltd
out
dec
movsb
bound
add
mov
mov
test
jno
lds
dec
push
push
pop
lea
icebp
mov
or
popf
loopne
out
mov
mov
inc
data16
push
xchg
std
enter
inc
xchg
clc
insb
fistps
jp
bound
cltd
stc
mov
js
sub
std
sarb
and
scas
aad
cmp
js
or
mov
rclb
into
mov
cmp
or
andl
cmovl
vpmadcswd
xor
xor
loop
mov
lcall
pop
fs
fidivl
mov
lods
aaa
std
add
mov
mov
xor
dec
inc
adc
pop
mov
int
dec
insb
les
and
push
dec
mov
cmp
imul
jl
or
rol
mov
mov
and
push
std
js
mov
insb
testl
xor
out
mov
add
push
movsl
adc
mov
pop
and
cmp
nop
mov
rcrl
fcoml
lea
ds
das
adc
xlat
push
mov
inc
push
ret
push
rorl
cli
dec
ljmp
jb
shrb
xor
push
es
adc
pop
loop
popa
mov
in
call
inc
loopne
sub
inc
and
mov
xchg
ret
arpl
jb
js
push
in
cmp
dec
cltd
lds
cwtl
cmp
xchg
push
mov
dec
shl
xor
inc
in
jnp
xor
fucomi
push
mov
test
mov
fstl
pop
xchg
dec
add
addr16
sbb
mov
jbe
mov
jns
js
in
adc
std
int3
aaa
xlat
xchg
scas
xchg
xchg
xchg
adc
bound
data16
or
fucom
xor
aas
cmc
cmp
repz
mov
mov
sarb
stc
jbe
sbb
lcall
loopne
push
pushf
stos
cmp
pop
jb
mov
lret
aam
inc
int
push
pop
mov
pop
cmpsl
xchg
pop
js
add
jg
and
mov
add
out
fldcw
push
cmp
add
int3
adc
cmp
fldenv
push
lea
mov
xchg
and
push
push
arpl
iret
dec
push
rcl
daa
dec
lahf
sbb
test
add
test
lock
loop
cwtl
nop
ja
hlt
pop
cmp
xchg
jae
int
loop
ffree
test
nop
jge
xor
inc
sub
pop
outsl
and
fs
rcl
and
ljmp
cli
hlt
cmp
cmp
jae
dec
pop
shrb
lock
sbb
xchg
cmp
cmpsb
sti
cmp
movsl
stc
push
addr16
nop
fwait
divb
adc
std
insl
pop
inc
imul
jge
divl
sbb
sub
int3
push
stos
shlb
in
xor
shr
aad
mov
into
inc
mov
jge
cwtl
int3
jg
out
pop
jb
sub
repz
xor
inc
ljmp
inc
push
ja
or
add
mov
add
sub
arpl
dec
push
mov
jp
xor
dec
cmp
jbe
popf
xchg
shr
cmp
out
mov
xchg
jno
cwtl
cmp
mov
cmc
int
jns
xchg
adc
mov
sub
jnp
gs
repnz
push
stc
jns
pop
cmp
leave
popf
fiaddl
ret
call
and
cmp
insl
fidivrl
mov
sub
push
mov
call
outsl
clc
popf
push
pop
cmp
push
mov
push
xchg
cld
clc
test
xchg
scas
andl
repnz
dec
adc
adc
push
sbb
xchg
sahf
shlb
sahf
dec
push
cltd
dec
sbbl
mov
push
jge,pn
jmp
das
addr16
mov
movsl
jmp
cmc
cmpsl
push
xchg
clc
js
cmpsl
outsl
and
sbb
and
mov
lcall
push
xor
js
and
jo
outsb
call
dec
aas
dec
aam
loopne
push
fisubrs
jnp
or
mov
aaa
stos
and
adc
dec
shll
and
pusha
ficomps
lds
mov
push
pop
xor
pusha
out
lret
push
pop
sub
mov
test
sbb
lahf
aaa
mov
inc
roll
aas
sarb
pop
sub
fdivrp
loop
and
ljmp
scas
aam
lds
leave
sbb
and
movsl
and
inc
insl
dec
movsb
dec
fldl
xlat
loopne
ljmp
stos
rcll
sub
push
add
pop
xchg
mov
cs
loopne
ret
add
stos
loope
jns
xor
outsb
in
not
fmul
ret
andl
inc
addr16
notb
imul
mov
and
xchg
ja
cmp
sub
dec
jle
push
arpl
js
and
je
bound
dec
jl
fstp
xor
lock
inc
scas
or
gs
testl
xor
mov
cld
movsb
xchg
arpl
push
push
loop
cwtl
sbb
dec
jl
push
daa
orl
add
cmp
icebp
jp
push
mov
ret
repnz
mov
mov
stos
xchg
jne
negl
pushf
hlt
jmp
push
xchg
lds
outsb
inc
aas
aaa
push
dec
pop
cmpsb
add
cld
ror
jmp
mov
jle
sub
sbb
addr16
xchg
sub
inc
sub
das
xchg
dec
mov
push
ret
pop
mov
int3
ja
cli
adc
pushf
leave
in
dec
imul
popa
push
dec
outsl
frstor
sbb
stos
and
cmp
cmp
bswap
adcl
in
mov
sub
lret
or
add
scas
push
shlb
dec
jo
test
insb
jle
mov
mov
insb
jb
push
adc
jns
cmp
idivb
adc
sub
cmpsb
mov
adc
fdivl
add
inc
icebp
imul
push
and
jle
xchg
in
into
or
das
loope
adc
jp
xchg
xor
mov
shlb
mov
mov
xor
mov
stc
jg
std
push
shrb
outsb
cmpsb
out
mov
add
sub
adc
pop
add
sarl
inc
lods
sub
mov
jl
push
mov
add
xor
leave
mov
and
and
hlt
movsl
into
fildl
sbb
or
push
rol
sbb
or
loope
add
repnz
bound
sub
cs
sbb
jb
cld
sub
cmc
jne
dec
mov
cmpsb
xchg
mov
mov
sub
mov
inc
add
cmpsl
mov
lret
out
jmp
pop
mov
sbb
dec
lods
leave
aad
movsl
bound
jg
or
mov
mov
data16
mov
cmpsl
add
std
hlt
jb
mov
cwtl
test
cs
fidivs
xor
outsl
lahf
adc
mov
loope
xor
enter
stos
je
es
mov
orb
push
jbe
enter
jle
sbb
repz
aad
sub
push
inc
mov
mov
out
add
jo
ret
scas
inc
cmp
ja
ficoml
fldl
xor
hlt
lock
std
pop
test
imul
pop
cmpl
mov
je
cmc
push
xchg
lret
insl
push
scas
rorb
xor
lahf
fsubrl
flds
xchg
xor
add
inc
add
dec
movsl
push
iret
fwait
insl
mov
hlt
mov
sub
or
lock
dec
leave
pop
ss
aas
and
cmp
xlat
or
inc
push
repz
push
fs
cmp
insb
sahf
lock
rcll
jo
scas
xorb
or
fwait
xor
clc
gs
iret
in
push
dec
mov
push
pushf
in
dec
xchg
mov
icebp
pop
sub
mov
nop
stc
aaa
inc
pop
jne
testb
scas
nop
lods
idivl
sbb
test
jne
sub
jb
pop
scas
inc
cmp
lds
add
cld
call
iret
mov
push
roll
dec
loopne
icebp
stos
fidivs
ficompl
stc
sbb
mov
daa
enter
scas
sub
jns
add
cli
mov
js
outsb
out
aam
mov
sbb
jne
daa
sub
das
sbb
sbb
shl
cmc
sbb
cli
stos
loopnew
mov
xchg
lock
jl
incl
xor
jl
sbb
stos
daa
in
cwtl
push
jae
jae
xorl
popf
pop
test
jg
pop
jmp
pushf
adc
push
cmp
xor
and
in
not
mov
mov
xor
div
pop
pushf
and
pop
add
sub
jle
dec
mov
pop
pop
cld
mov
sbb
insl
shll
xchg
pop
sub
xchg
rcrb
cmp
stc
inc
mov
cwtl
push
jge
inc
imul
decl
loopne
adc
bound
xchg
jmp
xchg
cld
and
jae
xor
inc
ss
xchg
insb
mov
pop
orl
pop
js
dec
mov
jns
test
adc
clc
mov
loope
addr16
mov
mov
push
mov
jb
mov
jae
jo
xor
cmp
inc
icebp
dec
jle
pushf
stos
push
mov
xchg
fstpl
nop
in
xor
es
push
push
and
inc
aam
sub
push
outsb
push
adc
xchg
pop
sbb
push
xor
inc
cmc
jmp
orl
enter
and
xchg
addr16
adc
fsubl
mov
mov
push
divb
lds
in
dec
nop
sbb
sbb
out
es
mov
pop
das
sub
or
insl
fs
scas
xor
stos
aaa
mov
repz
idivl
cli
daa
ljmp
jae
lods
cmp
jne
subl
xor
xor
adc
lods
and
jne
dec
inc
lcall
inc
push
inc
cmc
inc
in
lret
sbb
rcl
orb
ds
jl
fstps
mov
popa
and
aam
cli
pop
andb
inc
xor
sbb
repz
push
sbb
cld
xor
dec
clc
pop
push
and
cmp
inc
daa
cmpsb
dec
std
add
mov
cmp
add
jl
rcll
jo
shrb
mov
fimull
sbb
fwait
lods
cli
cmp
push
imul
loopne
sub
inc
ffreep
fdiv
xchg
incb
xchg
lds
or
ss
xchg
bound
enter
push
xchg
in
cwtl
mov
inc
add
outsl
les
or
mov
cs
in
stc
out
ds
cmpl
push
xor
out
mov
dec
in
daa
pop
aad
dec
add
xor
jo
jmp
xchg
pop
pop
adc
jae
mov
iret
mov
xor
stos
ds
mov
sub
dec
je
inc
insb
lods
mov
xchg
sarl
gs
loope
test
ds
xchg
les
arpl
cmp
sbb
cmp
fisttpll
jns
in
aad
sub
or
repz
outsl
adcb
ficomps
xchg
cmpsb
rcrl
hlt
movsb
inc
xorl
or
xchg
pop
nop
loop
jb
hlt
xchg
push
or
lea
mov
inc
jb
loop
inc
xchg
outsb
sbb
fidivs
pop
cs
xlat
and
stos
pop
adc
inc
and
shll
lods
dec
fdivs
imul
icebp
adc
addr16
lods
cltd
jno
xchg
push
orl
mov
scas
dec
cmp
je
lea
mov
lret
popf
inc
sahf
mov
fsub
je
fwait
imul
push
loopne
fsubr
pop
dec
mov
mov
pusha
insl
dec
imul
mov
mov
cmp
inc
xchg
inc
aas
jp
adc
fcoms
sbb
pop
mov
mov
mov
jno
mov
mov
and
jmp
push
push
jae
and
neg
scas
movsb
sub
or
js
jns
lds
mov
fs
xchg
into
cmp
pop
add
dec
dec
push
sti
test
inc
or
mov
mov
and
xor
mov
lret
sarb
lods
dec
imul
leave
cmp
cwtl
dec
iret
pop
inc
filds
cltd
es
xor
ja
pop
xor
sub
into
push
sub
fsubp
mov
ljmp
mov
movsb
stos
dec
loope
jo
out
sbb
inc
popa
jg
pop
int3
lods
mov
cmp
jno
sbb
inc
or
test
push
mov
mov
jl
sub
cmp
push
or
push
enter
xchg
call
or
pop
dec
jg
outsl
stos
pop
fwait
dec
mov
sti
das
jmp
fisttpl
lret
cmp
sub
sbb
or
pop
dec
jg
outsl
stos
pop
fwait
dec
mov
sti
das
jmp
fisttpl
lret
aas
out
and
mov
pop
dec
jg
outsl
scas
pop
fwait
dec
cmpb
das
jmp
rorb
das
fucomip
iret
iret
dec
mov
fisttpl
add
fwait
dec
cld
dec
andl
int3
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
push
movl
movb
movl
mov
movb
call
push
push
mov
call
andl
mov
lea
movl
push
movb
movl
movb
movl
movb
movb
movl
call
pop
leave
ret
or
cmp
sbb
lcall
dec
fcomps
jns
jns
mov
cltd
sub
pop
fldcw
jp
lcall
cmp
sub
pop
ljmp
cltd
xor
inc
fnstenv
jp
xchg
or
push
lret
add
arpl
jne
sub
dec
fcompl
jae
ss
ljmp
and
jb
rcr
xor
in
push
ret
xchg
fstps
out
popa
out
jae
sbb
sub
pop
lret
roll
pop
fnstcw
jle
test
pop
loope
mov
sbb
mov
gs
mov
mov
pop
fsts
cmc
fwait
out
out
inc
mov
popa
sbb
jns
dec
xchg
cmpsw
push
fidivl
mov
pop
or
dec
cmp
sbb
dec
adc
sar
insl
pop
lds
cltd
arpl
jne
pop
sbb
pop
mov
ljmp
cltd
sub
dec
fldcw
arpl
xchg
or
cmp
dec
ret
imul
loopne
call
cmp
daa
mov
mov
add
jp
dec
lret
push
cwtl
sbb
cmc
inc
loope
fisubl
mov
push
sub
leave
insb
ljmp
dec
sti
imul
mov
pushf
or
sub
inc
int3
push
roll
pop
fldcw
jp
mov
lcall
dec
ficompl
imul
cltd
sub
pop
fldcw
jp
mov
lcall
dec
ficompl
imul
mov
dec
jle
cmp
adc
sbb
inc
cmpsl
cmp
and
fucomip
or
ds
pop
sub
cmc
adc
testb
les
push
das
nop
imul
adc
cli
xorl
dec
mov
cmp
pop
or
pop
aad
xchg
push
push
sbb
mov
sbb
data16
dec
sub
mov
aam
sbb
lret
jl
out
lahf
pop
movsb
sub
lret
stc
mov
enter
nop
cmovge
cmp
xor
inc
push
inc
mov
xchg
ffree
jno
cltd
clc
sbb
cmp
sbb
addr16
cmpsb
loop
testb
sbb
call
sbb
fisttpl
gs
lods
test
push
xor
and
out
ds
pop
int3
push
jl
dec
popa
push
inc
loop
stos
test
dec
add
add
outsl
dec
jne
sub
mov
inc
adc
add
or
xchg
test
or
adcb
mull
stc
shll
inc
add
sbb
sub
and
inc
pop
icebp
movsb
adc
sub
add
cli
popf
ds
mov
test
xchg
push
xchg
sub
push
jecxz
ja
rcl
pusha
call
lock
ds
outsb
fsub
mov
jg
iret
jmp
imul
shrb
cwtl
mov
lods
push
xchg
sbb
out
jecxz
addr16
xchg
and
pop
inc
lods
loop
dec
or
inc
mov
sub
aas
and
mov
pop
sbb
enter
xchg
imul
outsb
mov
mov
dec
cmp
outsb
add
fcomps
jo
sbb
sbb
in
notb
push
data16
in
push
and
repnz
dec
sbb
idivb
cli
in
and
into
mov
push
int3
aam
xchg
cmc
fiaddl
push
mov
mov
inc
cmpsl
cwtl
inc
test
jp
lods
cmp
sbb
lods
aaa
int
add
push
loopne
inc
fsubs
adcl
and
test
add
jecxz
and
mov
stos
and
cli
jl
cmpsl
dec
inc
test
mov
bound
jg
sahf
dec
aam
push
repz
test
fstps
sbb
sbb
mov
sbb
mov
adc
les
frstor
and
dec
jne
lret
pop
xchg
add
outsl
adc
push
icebp
jnp
bound
mov
inc
inc
pusha
push
and
mov
sarb
loopne
jno
pop
clc
fiaddl
push
stos
shr
lsl
mov
xchg
pop
pop
sbb
scas
push
ljmp
movsb
inc
mov
mov
ss
aad
mov
jae
mov
lods
sbb
push
inc
nop
or
arpl
sub
push
enter
ret
ljmp
mov
inc
js
or
lahf
cmc
lds
cmp
mov
xchg
mov
negb
subl
shrb
cmpl
repz
int
add
and
inc
cli
mov
fs
test
xor
mov
call
icebp
cmp
mov
mov
mov
jns
das
loopne
aas
movsb
gs
pop
std
popf
mov
mov
das
mov
pop
and
xor
inc
repz
cmpsl
les
mov
dec
pop
push
imul
popa
cmp
or
mov
cmp
jne
fcomps
push
addb
push
mov
jle
push
fdivs
and
jmp
and
dec
jbe,pt
xchg
test
rol
dec
mov
cmpsl
adc
sub
mov
inc
mov
jge
adc
mov
into
jle
xchg
jl
shrl
or
fsubl
test
pushf
call
jge
sbb
jl
in
fnstenv
test
lods
inc
sbb
xchg
lods
xor
stos
ret
in
pop
pushl
in
and
loope
jg
sbb
add
xor
lea
sbb
pop
pop
das
aam
sbb
xchg
jae
jp
inc
ret
pop
mov
or
inc
aad
ljmp
out
sub
sub
shll
xor
push
sbbl
shrb
shl
fbld
aam
cmpsl
inc
or
negl
scas
in
adc
pusha
and
push
popf
adc
jbe
mov
out
nop
inc
in
mov
pop
lret
popa
jge
imul
outsb
xchg
ss
sahf
add
pop
cmpb
dec
icebp
jle,pn
sti
out
push
push
xor
cmp
xor
sbb
fsubrl
lret
add
dec
cvtdq2ps
comiss
stos
sub
rcr
popf
rcll
mov
fisttpll
push
sbb
pop
push
stos
inc
xlat
jno
dec
dec
stos
jns
push
fldt
lcall
fldpi
add
xor
or
mov
jg
pop
lods
mov
jecxz
mov
sub
cmpl
jge
mov
jns
cmp
inc
or
mov
jg
cmp
cmc
sub
cmp
xchg
cmpl
pop
neg
push
ljmp
xor
jmp
lods
and
sti
test
cmp
mov
jl
daa
add
pop
dec
dec
xchg
loop
dec
sbb
imul
cmc
mov
in
cmp
and
adc
or
ds
jbe
test
insl
subl
call
jle
sbb
adc
cmp
mov
stc
push
add
jo
fcmovb
call
fwait
mov
inc
jbe
pop
or
xor
lret
stos
enter
mov
sub
jmp
push
jecxz
fadd
lds
loopne
mov
cwtl
sbb
lods
enter
mov
stos
push
inc
gs
movsl
lret
pop
jo
fnstsw
and
jge
bound
popa
popf
and
mov
mov
imul
sbb
nop
pop
aas
and
add
arpl
xchg
das
sbb
addl
xchg
push
nop
mov
movsw
in
push
pop
scas
mov
inc
cltd
call
fdivl
mov
fcoml
jo
sbb
sbb
pop
sbb
pop
test
and
js
xlat
rolb
dec
or
out
adcl
fwait
push
stc
stos
in
loope
cmp
cmp
out
rclb
xor
test
xchg
flds
out
xchg
fdivr
les
pop
lahf
dec
repnz
fildl
in
xchg
popf
movsb
cs
mov
in
into
insl
jecxz
or
jno
out
xor
je
pop
pop
fs
mov
cmp
imul
fmul
jns
pop
cwtl
fisubs
pop
and
outsb
gs
pop
inc
icebp
loopne
mov
pop
mov
arpl
sbb
mov
mov
inc
mov
push
and
mov
addr16
loop
pop
sub
fsubs
roll
push
movq
je
mov
in
mov
pushf
std
mov
jno
ret
sub
fisttpll
int
fcmovbe
fxch
dec
jns
pop
sbb
push
inc
out
adc
inc
adc
ja
in
addb
scas
pushf
adc
sub
lret
xchg
jp
xchg
sbb
mov
jnp
sub
push
lcall
into
inc
pop
out
inc
not
mov
lock
out
test
repz
lahf
dec
test
cmp
std
mov
movsb
orl
jge
imul
pop
push
push
cli
loope
ficoml
cs
and
or
or
sbb
std
test
mov
cmpsl
jge
mov
xchg
sub
movsb
pop
jle
xchg
aad
andl
inc
cmp
pop
iret
orl
inc
sub
test
adc
loope
mov
out
add
rcrb
in
sub
leave
sbb
xchg
wrmsr
lcall
add
jecxz
or
or
fiaddl
ss
jg
pop
xor
and
pop
dec
or
int3
mov
imul
jno
xor
xchg
lret
mov
loop
mov
arpl
pop
sbb
mov
push
cld
enter
pop
jge
mov
sbb
repz
xor
sahf
mov
and
aaa
mov
je
mov
cli
inc
nop
cmp
mov
lahf
aad
stc
cmc
cmp
sub
es
loope
fldt
pop
adc
cmp
xchg
jmp
xchg
jne
shrl
sub
mov
enter
cmp
cmc
dec
jle
dec
mov
nop
pusha
aam
xor
mov
mov
dec
adc
xchg
and
lods
mov
cltd
out
pop
imul
les
push
push
jl
mov
les
es
fiadds
sub
pop
stos
je
ret
pop
repnz
loopne
loop
pop
sub
mov
cmc
and
test
daa
loop
sub
insb
shlb
sbb
or
jge
mov
imul
lcall
dec
inc
pop
sub
sti
mov
add
outsb
or
mul
mov
mov
mov
orb
mov
in
jp
mov
pusha
and
sahf
lcall
mov
jl
pop
popl
mov
pop
repnz
xchg
jbe
out
or
and
sbb
mov
lock
aam
mov
mov
repz
push
jmp
test
insl
addps
pushf
sub
sbb
xchg
or
pop
mov
inc
xchg
inc
jo
sbb
mov
dec
mov
shll
mov
mov
cld
les
mov
or
and
sbb
xor
les
ror
mov
sbb
cmc
xchg
and
mov
idivb
or
and
mov
sbb
mov
mov
dec
push
std
std
adc
cmp
mov
sub
aas
ds
in
sarb
pushf
pop
sub
jae
addb
jg
push
jl
mov
enter
inc
test
adc
sbb
pop
cmpsl
fidivs
xchg
cltd
push
xor
add
test
cli
push
inc
iret
fwait
adc
mov
repnz
movsl
cld
in
jecxz
test
pop
xor
dec
icebp
xor
ret
xchg
xchg
in
adcb
pop
and
test
xchg
lods
cld
mov
cltd
fisubrl
cltd
popa
loop
sub
mov
dec
in
dec
es
mov
sub
inc
xor
jne
pop
sub
jge
xchg
mov
rcl
sub
add
insb
fwait
mov
mov
repnz
xchg
outsb
adc
ja
enter
adcb
imul
cmpl
jae
xlat
sbb
movsb
je
fwait
pop
lods
mov
dec
jle
dec
and
mov
mov
and
and
mov
mov
mov
push
cs
push
rcr
sub
pusha
jbe
pop
orb
mov
fs
mov
mov
inc
adc
mov
into
mov
sti
int
jae
lock
int
lret
or
notb
ja
cmp
data16
iret
fsubs
jle
rol
mov
sahf
add
mov
imul
in
cmp
insl
cltd
sbb
ss
pop
cmp
ds
and
and
fdecstp
dec
push
push
jne
outsb
or
inc
sub
les
test
ja
jge
jno
jo
add
push
dec
aad
xlat
cltd
mov
mov
sbb
lret
xlat
push
mov
dec
fisubrl
sarb
mov
repz
dec
inc
cmp
add
jnp
cmp
adc
push
jnp
ficomps
xchg
jbe
push
mov
xlat
fnstsw
pop
mov
out
adc
xor
std
movsb
pop
jne
push
bnd
mov
fsubrs
dec
out
repz
enter
rclb
fldlg2
pop
and
xlat
movsl
xchg
xchg
push
mov
pusha
shl
scas
in
cmp
imul
and
xchg
fidivrl
cmpsb
xchg
push
bound
shl
daa
and
sti
adc
sub
or
clc
and
fs
push
jb
fsubrs
inc
pop
jge
push
in
mov
imul
or
and
push
lret
inc
pusha
jge
mov
addr16
xchg
push
cs
inc
pop
data16
and
lds
jp
cwtl
sbbl
dec
dec
aad
xchg
xor
out
jbe
or
addr16
out
mov
inc
es
push
cmp
push
push
xor
adc
inc
scas
or
pop
xchg
mov
or
aad
push
aaa
jg
stos
push
or
xor
movsl
pop
add
test
push
cmp
push
loopne
pop
dec
pop
insb
xor
ja
jge
jb
cwtl
push
sbb
enter
fbld
push
mov
xchg
xor
mov
adc
daa
push
mov
das
mov
xchg
fbstp
xorb
jecxz
hlt
int3
nop
sub
lret
sahf
push
fs
mov
out
shrl
xchg
scas
sti
inc
add
subb
jg
adc
sub
loop
sub
out
rorl
pop
dec
and
fsts
arpl
stos
sbb
inc
mov
jns
dec
and
cmpsl
mov
xor
inc
jg
xor
orl
movsl
mov
jle
add
imul
dec
mov
sar
or
jle
or
in
stos
mov
in
stos
sub
xchg
xchg
mov
int
jge
xorl
pop
mov
jecxz
jbe
js
and
xchg
stos
popa
into
nop
outsl
jp
pop
sub
mov
adc
mov
mov
mov
ds
mov
repnz
mov
aam
sbb
xlat
outsl
inc
hlt
push
xor
xchg
cmp
adc
push
test
xor
dec
push
movsb
mov
pop
repnz
into
shr
in
icebp
cwtl
fnstcw
add
add
in
orb
leave
xlat
in
push
fwait
les
add
fstpt
pop
add
xor
leave
xchg
hlt
push
lds
mov
or
in
push
inc
jb
mov
add
jg
xor
pop
jb
dec
pop
cmp
cli
mov
and
xchg
inc
xchg
aas
mov
xchg
push
lret
dec
jo
leave
rolb
loope
jo
fwait
and
mov
mov
mov
fwait
jecxz
pop
and
cmp
pop
outsb
mov
repnz
cmp
cmc
sbb
xchg
jno
push
adc
cli
loope
sub
xor
pop
inc
adc
outsl
stos
cmp
jge
push
mov
mov
leave
popa
adc
lods
mov
and
sbb
jmp
and
push
cmpsl
daa
mov
xchg
xor
lret
or
sub
movsl
adc
sahf
push
mov
imul
and
sbb
hlt
cmp
std
sub
and
and
jmp
cmp
js
das
jge
std
inc
dec
pop
sbb
out
in
into
pop
cltd
push
fs
push
dec
lods
fstpl
fdivrl
add
jmp
js
call
fs
push
bound
sahf
cmp
add
push
cmpsl
adc
aad
insb
lret
cwtl
pop
mov
mov
push
in
or
test
sbb
mov
push
stc
mov
outsb
cmp
cmpsl
cmp
sub
sub
xchg
adc
sbb
mov
adc
jo
leave
push
popf
adc
push
repnz
jg
cwtl
sbb
pop
xchg
adc
jg
inc
sub
bound
jp
pop
pop
aam
xor
xchg
pop
xor
insl
dec
fnstenv
rcrl
xor
rcrb
mov
push
cltd
sub
cwtl
cmp
shrb
mov
in
daa
push
hlt
mov
adc
cmpsb
push
movsb
lock
call
ljmp
sbb
mov
push
shlb
aaa
sbb
push
outsb
in
or
or
xchg
xchg
add
sub
enter
fucom
gs
sbb
addr16
ss
ret
outsb
insl
icebp
add
scas
and
xchg
jmp
xchg
ret
xor
add
jmp
pushf
ja
xchg
push
fwait
mov
dec
sub
fisubs
movsb
cli
aas
pop
push
jnp
jecxz
sub
incb
cltd
adc
dec
push
add
lds
adc
out
mov
icebp
xor
addb
outsl
xorl
mov
jecxz
fs
dec
aas
lcall
add
push
sbb
shlb
push
stos
pop
ror
repz
cltd
jmp
pop
shll
sub
stos
cmpsl
movsl
aaa
hlt
inc
sbb
pop
sbb
inc
sbb
sbb
js
xor
ss
sbb
sub
inc
inc
es
ret
push
and
test
sub
jmp
outsl
out
fmull
pop
adc
mov
arpl
add
fisubrl
in
clc
ds
xchg
push
cmp
pop
xchg
inc
call
cli
scas
data16
mov
add
sub
stc
dec
dec
add
push
and
adc
xchg
nop
mov
leave
std
push
shrl
xlat
cmpsb
dec
push
test
cmp
sub
divl
das
add
mov
or
and
xlat
xchg
adc
xchg
shrb
dec
repz
xchg
add
cmp
push
test
mov
gs
insl
test
pop
pop
lea
sarb
xchg
jge
jno
mov
shlb
jle
ret
mov
mov
negb
fldenv
mov
add
leave
ss
and
in
rcrb
pop
pop
fldln2
in
push
xchg
std
clc
cwtl
popa
mov
bnd
inc
jecxz
add
jbe
iret
jbe
xchg
rcrl
push
out
ss
lea
mov
in
sbb
fld
shrl
xor
and
mov
lret
mov
test
por
adc
xchg
movsl
adc
xor
mov
or
cs
shlb
shll
out
bound
jbe
test
cs
lea
mov
cmp
dec
inc
scas
lcall
add
lret
rclb
push
fwait
testl
addr16
xor
iret
lcall
mov
stos
xor
mov
inc
xor
sub
dec
ret
pop
jl
icebp
leave
adc
fldl
gs
inc
movsw
pushf
scas
roll
sub
cmp
call
adc
pop
addb
xor
jae
and
xor
outsb
adc
mov
mov
icebp
mov
pop
and
ret
xor
ret
lock
mov
add
and
sub
dec
pop
gs
sbb
loopne
adc
jo
addr16
test
frstor
mov
xchg
mov
push
jae
inc
dec
and
cli
lds
lds
aaa
outsl
jnp
jo
jb
test
aad
mov
mov
jmp
or
cmpsl
add
lahf
or
pop
cmp
int
mov
mov
xor
push
adc
inc
shll
sbb
sarl
ljmp
lea
lods
cmp
popa
xor
inc
xchg
sahf
out
lret
jo
into
neg
adc
dec
in
jle
and
pop
cmpsb
sbb
and
or
divb
add
adc
pop
sbb
imul
imul
cmpsb
adc
sahf
adc
or
cmp
push
lock
inc
jb
xor
mov
arpl
or
lock
sbb
sub
pushf
mov
outsl
icebp
ret
sub
loopne
rorb
test
pop
mov
repnz
imul
jmp
inc
stc
xchg
not
mov
ret
test
jnp
lret
xchg
movsb
scas
mov
mov
inc
sub
movsb
pop
jo
cmpsb
cwtl
ret
ss
stc
jo
or
shll
dec
dec
test
test
mov
sarl
dec
add
sub
out
xorb
std
xor
or
inc
sbb
mov
push
sub
add
xor
xor
inc
lock
in
sbb
inc
cs
popa
lock
pop
call
or
push
pop
arpl
iret
or
fdivl
movsb
sbb
xchg
test
ror
mov
sub
cli
push
in
inc
xor
mov
pop
test
stos
and
cmpsb
jg
hlt
fnstcw
mov
pop
int3
sbb
xor
or
xor
xlat
ljmp
int3
repz
cmp
adc
mov
mov
push
aaa
add
loopne
mov
and
push
outsl
jl
jno
and
pop
mov
mov
in
adc
xchg
sbb
daa
gs
mov
rorl
push
imul
pop
mov
xchg
std
das
outsl
fsts
mov
xchg
loope
or
das
mov
subb
and
pop
daa
adc
lret
pop
cmpsb
jb
ljmp
add
fnstenv
scas
xor
test
push
xchg
push
or
mov
or
xchg
cmc
lock
xchg
and
loopne
data16
push
sub
aad
mov
adc
fcmovnbe
jmp
dec
mov
outsb
dec
lret
aaa
adc
lds
rcrl
mov
ds
out
les
testl
out
mov
aaa
sbb
mov
fidivl
jl
cmp
sub
lds
fwait
jle
xor
lea
and
in
out
push
stos
xor
in
cmp
or
sbb
dec
push
ret
push
adc
daa
push
leave
mov
dec
lahf
out
and
push
lahf
mov
int3
fisubs
mov
push
divl
jne
stos
clc
lods
and
or
push
fidivrs
dec
out
mov
lret
inc
repnz
cmc
leave
xor
jecxz
ljmp
cmc
mov
push
xor
imul
jecxz
scas
std
pop
rclb
cmc
ja
mov
pushf
inc
pop
and
adc
hlt
xor
fcmovne
pop
pop
in
test
mov
lret
cmp
cmp
dec
sub
or
xor
ss
push
aad
sub
scas
je
push
je
leave
jge
push
lea
jmp
repz
jb
mov
mov
push
and
add
pop
jns
in
in
mov
test
pop
inc
int
or
dec
ret
cmpsb
stc
mov
push
jbe,pn
xchg
cmp
mov
lods
mov
jns
sub
sub
repnz
xchg
mov
in
cltd
and
pop
fldcw
jp
mov
lcall
dec
ficompl
imul
cltd
sub
pop
fldcw
jp
mov
lcall
dec
ficompl
imul
cltd
sub
pop
fldcw
jp
mov
lcall
dec
fistpl
imul
cltd
sub
pop
fldl2e
jmp
gs
sub
cmpsb
adc
int3
int3
int3
int3
aas
in
cmc
push
lds
cmp
dec
outsl
xchg
mov
inc
ret
and
adcb
lds
xor
add
cld
inc
ret
and
adcb
lds
ds
xchg
repnz
mov
mov
mov
push
in
icebp
adc
push
mov
addr16
xchg
jbe
jns
and
inc
dec
add
out
xlat
mov
mov
aam
sub
fisttpll
mov
adc
aaa
in
mov
and
jb
push
xor
mov
data16
mov
sbb
xchg
dec
and
fstl
sbb
hlt
das
les
shll
frstor
out
mov
ret
stos
aas
jbe
gs
jge
idivl
or
movsl
mov
ret
xor
mov
sub
in
mov
inc
mull
or
mov
dec
sti
adc
lcall
aaa
fisubl
adc
push
lds
aad
movsl
data16
test
jne
inc
fcoml
and
out
add
sub
pop
lret
add
arpl
xchg
or
cmp
dec
int3
dec
out
lds
movsb
ljmp
rolb
ljmp
mov
scas
cmp
dec
pop
out
ret
jnp
mov
andl
leave
and
repnz
rolb
push
mov
mov
adc
push
lds
xor
add
rolb
push
mov
mov
adc
cli
aaa
sbb
dec
ss
adc
icebp
ds
sub
mov
jns
lds
pop
cmpsb
ljmp
movsl
je
push
ret
or
cmp
xchg
addb
es
test
fstl
mov
imul
mov
stc
jae
aad
stos
dec
clc
jnp
mov
in
dec
mov
mov
test
push
inc
iret
repnz
push
imul
sub
pop
cmp
fdivr
inc
mov
sub
cmp
lds
cmc
cli
lock
sbb
aad
loopne
mov
inc
aad
xchg
sub
enter
jge
sbb
scas
jp
cmp
jecxz
xor
add
jl
mov
shr
mov
ret
xor
shll
int
mov
fadds
stc
test
ja
gs
jecxz
mov
mov
sbb
sbb
in
jp,pn
mov
jne
pop
pop
inc
sub
add
or
clc
push
mov
incl
test
jge
or
stc
lods
in
fiadds
pop
inc
mov
mov
sbb
cmp
add
xchg
fldcw
in
sub
pusha
push
mov
shll
fwait
mov
dec
pushf
fimuls
xchg
dec
jp
pop
sahf
mov
fisubs
pop
in
mov
pop
popa
add
dec
ret
imul
stc
and
sbb
inc
rcrl
jo
sarb
repnz
mov
adc
mov
xchg
mov
mov
or
push
lcall
addr16
adc
lds
cmp
rorb
roll
adc
jae
popf
mov
sbbl
cmp
and
xor
mov
test
fdivrs
push
jg
cltd
sub
xchg
insb
xor
leave
xchg
ret
mov
test
xchg
xchg
pop
je
pop
dec
insb
rcll
adc
add
lahf
jl
stos
jle
cmp
dec
mov
rcl
and
dec
sub
repz
xor
mov
add
lret
jle
mov
shr
add
mov
or
outsl
out
mov
and
je
pusha
mov
test
add
and
divb
inc
faddp
lods
jecxz
int
mov
or
outsl
xor
xchg
xor
out
push
jg
outsb
ret
ret
jp
cltd
or
rcl
or
scas
xor
xchg
jecxz
add
imul
hlt
roll
xlat
push
pop
jns
stos
ret
lock
arpl
jno
jmp
insl
mov
adc
or
jno
add
test
gs
push
arpl
fbld
and
pop
cmpsb
ss
xor
jle
aad
sbb
movsl
aam
std
mov
add
jmp
or
daa
imul
mov
fldt
mov
adc
push
ret
inc
mov
mov
nop
mov
push
into
and
pop
out
repnz
push
xor
sbb
push
pop
jecxz
in
inc
arpl
loop
mov
mov
mov
test
xchg
das
mov
jno
sub
mov
jp
cld
lahf
jp
sbb
out
sbb
pop
cmp
rorl
imulb
jns
loope
addb
or
rcrl
imul
aam
loope
sbb
pop
sbb
jmp
int3
mov
fwait
xchg
pop
mov
push
xchg
loope
push
push
ret
mov
fwait
shlb
mov
sti
add
test
daa
and
loopne
outsl
sub
jmp
and
mov
pop
aad
in
inc
cmp
xchg
mov
mov
cmc
cmpsl
sub
cmp
lds
inc
outsb
pop
shrl
inc
or
dec
std
push
mov
xor
jg
shlb
xor
cs
movsl
jae
mov
xor
and
mov
mov
jge
lds
xchg
mov
push
add
xor
jb
push
sbb
cmpsb
push
push
sbb
sti
or
jb
xchg
insl
loopne
in
xor
inc
int
push
push
sbb
sub
xor
xor
mov
inc
xor
push
arpl
aam
inc
rol
add
subl
fisubl
ret
movsl
cmc
inc
dec
mov
mov
sbb
jns
pushf
inc
cmp
in
sbb
cmp
addr16
inc
sub
iret
sub
stos
into
adc
xor
jl
fld
fildl
enter
push
mov
mov
mov
inc
xor
xchg
xchg
xlat
lahf
inc
stc
fcoml
out
sbb
js
jo
outsl
enter
sub
jo
insl
mov
push
popf
mov
inc
ficoms
lcall
push
lods
or
imulb
jle
dec
loopne
ss
jno
aaa
mov
and
mov
mov
mov
loop
jae
outsl
imul
loope
mov
imul
std
loope
mov
fisubrs
jmp
daa
sub
mov
xor
sbb
ja
jae
mov
sbb
push
jp
jnp
push
into
fcompl
lods
fwait
jecxz
add
fcomps
dec
xchg
enter
rolb
push
jle
ljmp
jecxz
div
popl
jo
jp
jae
lock
add
les
jecxz
sbbb
adc
cmp
rclb
ljmp
push
ja
mov
add
in
pop
inc
sar
movsb
dec
jle
iret
push
andb
mov
jg
adc
int
lcall
leave
adc
test
pop
add
ret
cltd
push
add
dec
call
bound
fcompl
mov
jne
stos
dec
loopne
aam
inc
inc
aad
push
sbb
loope
pop
inc
enter
test
fisttpl
adc
int
lret
dec
subb
adc
mov
mov
lock
bnd
aad
and
jbe
pusha
enter
daa
xchg
outsl
testb
inc
xor
cmpsl
adc
or
mov
loope
mov
add
nop
ret
sbb
arpl
dec
push
xchg
fimull
push
ret
ftst
dec
sub
or
or
adc
lahf
and
lahf
inc
push
xchg
xor
aam
in
in
jl
mov
or
jmp
imul
or
sub
sbb
cld
or
movsl
stc
fcomi
sti
mov
sub
push
jo
jle
cltd
je
aas
out
adc
shrl
or
data16
xchg
mov
imul
mov
test
mov
rcl
lret
leave
push
int3
dec
loope
out
xchg
test
sub
ja
push
je
pop
mov
or
jp
xor
cmpsl
jg
addb
cmp
pop
sbb
ret
pop
jmp
and
mov
jbe
lret
add
mov
rep
sti
push
dec
or
mov
in
dec
aas
rcl
in
xor
mov
dec
cltd
stos
daa
push
sub
jns
mov
pop
out
jb
orl
mov
pusha
shlb
lcall
aad
aas
push
nop
loope
or
adc
pop
lcall
out
roll
fsubl
sbb
ljmp
xor
cmpsl
mov
enter
test
jge
popa
outsl
add
mov
add
movsb
and
mov
pusha
xor
mov
shll
adc
fdivrl
lret
add
test
dec
cmp
stc
int
sti
cwtl
leave
xchg
xchg
pusha
pop
lret
popf
gs
lods
movsl
out
pop
movsb
out
xlat
je
jmp
in
lret
cmp
ja
pop
ds
pop
in
pop
adc
push
sbb
dec
lahf
mov
xor
aam
xchg
cmpsl
mov
loop
mov
mov
jno
add
enter
cmp
jp
jmp
test
mov
sbb
push
sub
pop
pop
imul
ljmp
lahf
popa
out
test
out
in
sbb
jmp
orb
jne
dec
xchg
sbb
test
push
mov
and
fsub
inc
shl
stos
cli
cmp
pop
xlat
arpl
in
outsb
or
push
inc
jecxz
aam
sti
adc
mov
inc
or
cmpsb
mov
shrb
push
outsl
addl
dec
push
fxch
xlat
sub
cmpsb
data16
imul
stos
sti
lahf
lods
mov
shlb
lea
jo
push
push
cmp
or
adc
imul
out
ja
aas
bound
bound
xchg
push
popf
stos
in
mov
sbb
sub
imulb
inc
enter
inc
call
lcall
and
xor
add
ds
mov
das
mov
aaa
sahf
rorb
sbb
mov
adc
inc
inc
add
orb
ja
mov
pop
or
dec
lahf
lret
and
clc
and
shlb
gs
test
adc
scas
mov
stos
sub
xor
fldcw
adc
fwait
xor
iret
cmp
ds
test
add
sbb
sub
xor
movsb
inc
mov
push
hlt
cmp
xorl
cmc
in
lret
sbb
xchg
xlat
aaa
inc
jo
and
jmp
or
xor
faddl
push
mov
push
mov
sub
sti
je
sub
jo
lret
ss
push
push
push
push
add
push
cmp
pop
mov
jno
fmull
sarb
fcompl
fistpl
sarl
add
or
mov
inc
cmp
shrb
rolb
xchg
stc
subb
inc
mov
dec
addr16
jno
adc
insb
pop
adc
mov
or
jbe
sbb
int3
pusha
jo
rol
sbb
add
out
mov
push
push
pop
or
mov
xchg
hlt
mov
ss
mov
or
pop
movsl
sbb
xor
push
call
push
int3
ljmp
mov
daa
sahf
repz
lret
lea
andl
shll
and
mov
das
xorb
les
insl
jb
push
mov
jne
ror
dec
mov
add
mov
adc
inc
dec
pop
xchg
inc
dec
dec
loopne
jb
daa
in
xchg
repnz
xchg
pop
or
in
out
push
icebp
arpl
jle
call
and
pop
xchg
pop
shrb
mov
fisttpll
aas
jl
push
nop
cmp
pop
jg
fs
xchg
enter
or
pop
faddl
or
and
jb
lahf
es
and
jmp
shll
ja
jbe
mov
mov
xadd
in
lock
imul
jne
xchg
ljmp
aad
jno
aad
lock
ljmp
dec
pop
or
xorl
insb
addr16
pop
je
cmp
pcmpeqb
in
flds
fdivrl
aam
mov
insl
add
mov
shl
iret
nop
pop
sti
insb
fbstp
mov
fprem
cs
mov
insl
movsl
xor
lods
jg
and
roll
in
imul
js
enter
mov
loop
dec
in
xchg
jb
sbb
sub
pop
xor
jo
cld
mov
outsb
bound
ds
dec
jae
aas
loopne
popf
push
aad
sub
push
jl
mov
arpl
mov
cmp
sti
push
mov
or
adc
jge
xchg
jne
cld
leave
jmp
jmp
sbb
sub
cmp
jns
lret
sbb
in
push
or
cli
imul
loope
xchg
hlt
mov
popf
xchg
ss
pop
pop
mov
mov
movsl
sbb
push
push
mov
leave
loop
push
mov
ret
lods
adc
mov
dec
jp
adc
outsb
lods
xchg
cmp
push
jp
scas
and
aas
rorl
cmp
jl
or
dec
xor
sub
test
js
adc
mov
mov
xor
inc
insl
jbe
push
xchg
rol
fcoms
sub
inc
push
xchg
fisubs
and
inc
cmpsb
les
scas
sbb
out
sub
pop
pop
xor
popf
push
lds
mov
xor
jbe
cmp
je
mov
push
in
stc
mov
fucomp
adc
stos
fmull
dec
shlb
test
test
push
lods
int3
clc
sub
mov
mov
mov
sbb
push
add
fidivrl
xchg
adc
push
push
lods
jl
setno
in
xor
push
jnp
or
jo
fcoms
mov
int3
cmp
push
outsl
cmp
ja
popa
adc
add
mov
xor
add
cmp
xlat
push
cmpsb
js
mov
jns
arpl
bound
pop
fidivrs
int3
stos
adc
stos
aad
add
and
or
fcmove
or
xor
test
dec
aam
mov
jmp
cli
aas
rcrl
mov
aad
aad
nop
lcall
xchg
or
addr16
hlt
jecxz
dec
adc
out
aas
jge
ss
les
mov
data16
loopne
scas
fsubs
mov
cmc
rorl
inc
sbb
lahf
test
sub
dec
repnz
jmp
push
jns
in
ret
xchg
push
mov
test
mov
mov
and
pop
push
fisubrs
mov
push
or
sbb
dec
cmpb
pushf
mov
mov
repnz
sbb
pop
rcrb
mov
pshufw
add
into
or
push
stos
push
loope
sub
and
hlt
xchg
dec
mov
jl
sbb
dec
sbb
in
dec
in
jmp
enter
mov
inc
push
jb
pushf
shlb
pop
push
stc
push
dec
gs
ret
xor
pop
jmp
fisttpl
out
jne
out
into
mov
cmp
test
or
dec
dec
das
pop
jmp
ds
movl
push
hlt
mov
lock
icebp
in
xchg
insb
xchg
jmp
sub
loop
xorl
sub
movsl
sti
out
and
mov
fisttpl
stos
dec
jge
dec
mov
sbb
jle
mov
or
sub
dec
xchg
fadds
fisttpl
hlt
mov
stc
sub
push
inc
cld
push
dec
inc
pop
add
add
in
mov
loop
adc
fimull
jbe
scas
ret
xchg
shlb
add
mov
repz
loopne
inc
jae
mov
lea
cld
jmp
mov
adc
shlb
adc
push
cltd
lahf
mov
in
test
xchg
nop
mov
gs
or
mov
lock
sbb
adc
inc
or
aam
push
hlt
mov
hlt
sbb
fidivrl
mov
ljmp
xor
jecxz
sbb
pop
mov
movsl
filds
addr16
pop
insb
or
das
les
sbb
pop
ffreep
cli
add
pop
mov
or
aad
into
icebp
test
pusha
and
and
xchg
out
sbb
popf
xchg
jmp
mov
pushl
jmp
into
push
test
nop
and
xor
ss
aas
retw
mov
and
xchg
out
mov
pop
adcb
sub
push
test
pop
lret
mov
mov
pop
cmpsb
fsubr
and
mov
or
lock
push
sub
or
fldl
cmc
inc
sub
add
mov
push
cmpsl
popa
je
mov
outsb
jecxz
push
push
cmp
inc
lahf
repnz
fsubl
sti
loopne
pop
sub
scas
mov
and
enter
mov
popa
fdivr
icebp
outsb
mov
cmp
aad
or
fstp
jno
incb
push
imulb
int3
aad
lds
push
adc
dec
sub
xor
arpl
xor
xchg
pop
xchg
test
cmp
dec
out
cli
mov
push
out
test
mov
or
jl
imul
std
jnp
mov
addr16
adc
in
inc
mov
cmp
jno
push
mov
jns
ds
hlt
add
inc
pop
jb
scas
leave
outsb
insb
ss
mov
imul
shrb
cmp
mov
dec
rclb
sub
scas
jle
mov
rorb
sarb
sub
pop
ss
adc
cmpsb
arpl
fbstp
pop
or
mov
push
mov
jp
sbb
adc
test
jmp
sub
repnz
xor
dec
inc
fimuls
jns
cltd
jp
dec
xchg
or
sbbb
cmp
fs
fs
subl
jo
imul
aam
dec
mov
add
nop
imul
into
scas
add
outsl
add
inc
js
stos
or
adc
pop
stos
push
lret
mov
adc
xor
mov
and
and
inc
jns
xor
mov
stos
mov
jg
xchg
pop
xchg
loope
inc
in
mov
add
loope
imull
xor
popa
out
enter
cs
test
test
dec
pop
dec
jns
jp
jb
inc
clc
dec
jl
test
inc
fdivs
aad
enter
xchg
inc
adc
pop
aad
icebp
xchg
std
mov
arpl
jnp
cmp
leave
xchg
push
stc
stc
sbb
or
jo
ficomps
int
jnp
out
test
mov
inc
stos
xor
cli
test
xchg
adc
scas
ret
cli
bswap
imul
out
ljmp
shlb
mov
adc
dec
lahf
xor
or
addb
push
data16
mull
cmp
adc
mov
sbb
inc
inc
loop
jo
jg
jae
loop
xchg
das
ljmp
popa
jle
loopne
popf
fs
adc
sub
div
out
cmp
push
fiadds
mov
sbb
cli
jp
imul
inc
iret
movsl
leave
je
pusha
sub
xor
clc
and
and
add
call
in
rcrb
mull
aam
and
daa
or
xchg
pop
pusha
adc
cmp
xchg
or
imul
loop
mov
inc
int3
or
ficompl
faddp
sub
scas
add
mov
cwtl
je
addl
push
je
or
pop
cmpsl
push
fisttpl
fxch
pop
outsl
and
cld
es
cmp
mov
add
and
aad
fdiv
lret
icebp
mov
mov
add
xlat
daa
pop
sub
jge
fnsave
mov
mov
js
jnp
cmp
cltd
fwait
inc
add
xchg
call
mov
mov
dec
sbb
rcrl
mov
jmp
scas
dec
sbb
repnz
mov
loop
mov
pusha
xor
lahf
adc
pop
mov
inc
aas
add
pushf
push
jecxz
stos
fcomp
pop
ja
xchg
cmp
pop
lock
cld
and
jmp
pop
mov
cmp
sub
rcll
push
jae
mov
push
jae
mov
xchg
sahf
inc
mov
jo
add
dec
and
or
pop
fsubl
xor
fninit
adc
mov
cmp
fisubrl
sbb
inc
mov
push
cltd
nop
mov
push
dec
stos
pop
inc
pop
sub
xchg
dec
rcll
fldt
lods
adc
and
push
xlat
add
dec
dec
xchg
and
dec
pop
dec
insl
pop
ja
or
pop
das
mov
push
lcall
imul
push
xor
sbb
xor
and
jnp
lock
jle
or
add
cltd
fstl
loope
mov
ds
sub
cwtl
jl
xchg
add
mov
xchg
clc
mov
stc
mov
fistps
or
stos
pop
lcall
xchg
sub
inc
pusha
push
insl
daa
push
leave
nopl
mov
push
fstpt
sbb
push
pop
repz
je
cmp
adc
cmp
lods
inc
out
push
movsl
test
cli
mov
jns
repnz
xchg
mov
adc
ljmp
cmpsb
icebp
into
shlb
shll
mov
push
dec
or
js
nop
rol
lret
lods
enter
xchg
mov
hlt
mov
jb
in
loopne
int3
imul
sub
xchg
pop
rolb
frstor
ljmp
sub
mov
imul
scas
lds
push
pusha
dec
or
and
fistl
in
jmp
mov
xchg
fsubrl
xchg
into
js
mov
repnz
pop
data16
sub
lahf
pop
inc
adc
test
adc
xchg
adc
jne
cmp
mov
mov
shll
and
les
or
lret
imull
in
xor
fs
adc
adc
aaa
inc
lods
or
dec
pop
pop
pop
je
scas
add
imul
push
xlat
fisttps
mov
mov
jl
movsl
mov
xor
mov
bound
adc
sub
adc
adc
jbe
sbb
push
xchg
dec
cmpsl
mov
mov
fs
and
cwtl
imul
cmp
rcl
pop
in
sti
roll
imul
dec
lods
sti
in
repz
jae
xor
xor
and
in
fstl
inc
lock
mov
and
in
push
rcrb
sahf
xchg
jp
mov
jg
dec
ret
and
fsubrl
mov
idiv
jno
add
xor
pop
dec
mov
sub
xchg
sarl
push
scas
or
and
xor
cmpsb
out
dec
xor
mov
push
arpl
dec
pushw
xor
inc
dec
dec
adc
popa
aam
sbb
adc
sahf
pop
hlt
mov
push
jg
xchg
sbb
shr
rcll
sub
popa
mov
add
push
jne
jg
xchg
cmpsl
jmp
add
mov
xorl
adc
lret
cltd
and
sarl
dec
sub
pushf
xor
aaa
pop
outsb
xchg
call
mov
sarl
adc
test
rolb
lods
sbb
addl
jbe
daa
mov
cmp
xchg
or
inc
adcl
add
es
jge
jne
popa
scas
pop
mov
mov
cmp
imul
sub
xchg
push
xchg
stc
test
js
pop
fwait
or
std
mov
in
pop
out
inc
repnz
fsubr
cmpsb
jae
iret
xchg
int3
sub
push
scas
mov
mov
dec
lahf
rolb
push
xchg
stos
leave
mov
fnsave
mov
leave
shll
or
scas
push
mov
hlt
repnz
add
enter
sti
ret
fimull
sbb
pop
push
jl
int3
xchg
and
pop
das
jl
sbb
mov
jmp
xlat
pop
push
pop
cmc
pop
les
xor
add
rolb
push
mov
mov
adc
push
lds
xor
add
rolb
push
mov
mov
adc
inc
lds
xor
add
fildl
push
mov
mov
adc
fcmovb
push
xor
subb
sbb
and
lods
sub
insl
cli
jge
int3
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
scas
imul
fimull
lret
pop
stc
das
jmp
fidivrl
scas
imul
leave
jg
das
jmp
pop
mov
scas
imul
fldenv
mov
cltd
or
xor
sbb
sub
jns
add
push
or
shlb
loop
repz
mov
push
addr16
mov
xchg
xchg
inc
sbb
mov
pop
cs
mov
cmp
cmpsb
xlat
and
dec
inc
fisttpl
repz
jbe
addr16
jmp
dec
add
pop
lcall
jno
neg
pusha
pusha
sub
sub
inc
jae
rclb
outsl
leave
and
and
or
pusha
cld
sub
jl
repz
dec
pop
or
sbb
inc
xor
cmp
sahf
jp
pop
or
cmpl
pop
ficompl
lcall
mov
cmp
sub
leave
pop
stc
das
jmp
pop
mov
loopne
lahf
aas
das
jl
data16
lods
scas
test
inc
lods
jns
cs
fnstcw
das
cmp
int
xchg
jl
insb
ljmp
dec
jmp
xor
or
das
ds
dec
int3
aas
or
pop
iret
or
cmp
sub
leave
pop
stc
das
jmp
pop
mov
scas
imul
leave
pop
stc
das
jmp
pop
mov
sbb
xor
fucomi
xchg
push
out
add
sub
jb
mov
out
lret
sub
fbstp
mov
mov
leave
inc
outsb
cld
filds
xor
ss
lcall
inc
jge
or
or
dec
xchg
sbb
mov
xor
xor
arpl
pop
cmp
orl
and
cltd
adc
das
add
inc
jae
push
repz
je
js
std
or
xchg
jns
add
jg
mov
inc
hlt
icebp
stc
xchg
fisubrs
fs
pushf
sbb
fistps
ljmp
mov
mov
test
push
xor
pop
int
cmp
add
scas
daa
lret
loope
je
xchg
insb
push
mov
fwait
mov
popf
sub
sbb
mov
pop
adc
repnz
inc
inc
push
jl
in
xchg
stos
std
push
or
and
sahf
iret
cmp
aaa
mov
ret
jmp
push
cmpl
sbb
cmc
mov
cmpsl
mov
insb
sub
stc
mov
jp
adc
adc
cmp
aaa
cmp
inc
and
sbb
pop
pop
cmp
loop
jg
cmp
mov
sbb
lock
out
dec
mov
xchg
and
sub
mov
mov
jae,pn
test
inc
and
aaa
out
xchg
scas
add
pop
inc
adc
adcl
cmpsl
scas
imul
js
stos
xchg
pop
ja
fwait
add
add
decb
add
sbb
cmpb
add
ror
jmp
pop
jl
imul
in
outsb
cmp
sbb
jbe
iret
test
mov
mov
mov
mov
fwait
int3
jns
push
pop
loopne
dec
xchg
inc
cli
sub
repz
stos
and
sbb
sbb
xchg
int
mov
pop
inc
pop
insl
outsb
sub
mov
scas
aaa
dec
xchg
pop
adc
shlb
pop
divl
outsw
push
decb
fwait
cmp
push
push
xchg
in
rorl
rcrb
int
imul
pop
imul
adc
mov
push
jns
cmpsl
mov
cmp
cltd
lods
inc
ja
es
pop
aad
jg
icebp
loopne
data16
pop
sti
in
lock
cmp
fsubrs
sub
pop
inc
lret
mov
rolb
mov
add
mov
cwtl
add
push
popa
mov
sbb
pop
push
sbb
rcrl
aad
adc
shlb
lret
cli
es
sbb
fsubp
sub
mov
aad
cmc
jecxz
jnp
sub
rolb
mov
or
pop
hlt
rcr
mov
out
test
mov
and
cmpsb
xchg
push
bound
pop
push
lods
pusha
fldcw
cmc
jg
mov
push
inc
jnp
addr16
sub
mov
or
out
xor
movsl
ret
fimull
mov
pop
iret
push
or
mov
lods
sub
clc
mov
dec
shll
cld
nop
pusha
mov
push
mov
popf
lods
scas
lods
add
fildll
pusha
jne
std
xchg
and
and
mov
push
fidivl
in
pop
popf
mov
int3
inc
lret
mov
adc
fcmove
jecxz
and
dec
inc
push
stc
fbstp
mov
add
js
jle
pop
lea
dec
lahf
mov
xchg
cmp
dec
pop
dec
mov
mov
adc
lret
add
aas
aaa
mov
les
andb
lret
push
sub
ja
sbb
pop
xor
sbb
loopne
push
lahf
jecxz
or
ds
cmpsl
mov
mov
adc
xchg
xor
jo
xor
jmp
mov
pop
mov
imul
mov
movsb
sub
fisubrs
rcll
aad
jnp
xchg
inc
or
int
or
mov
and
adc
push
aad
push
cmp
stos
rorb
cld
jmp
mov
popa
xchg
aaa
mov
dec
push
add
mov
rcrb
lds
mov
push
xor
mov
negl
push
adc
push
mov
insb
lods
lahf
mov
adcb
mov
iret
rorl
jecxz
mov
gs
pushf
lret
out
push
mov
test
icebp
pop
lahf
fnstcw
ret
int
inc
or
mov
repz
sbb
out
lods
cltd
out
ljmp
sti
xor
inc
into
jle
jbe
inc
dec
es
int3
push
mov
repnz
aaa
stos
jne
mov
sbb
aam
and
out
js
mov
insb
push
sub
sahf
mov
mov
adc
in
stos
mov
mov
ds
dec
int
jg
pop
pop
stos
xlat
or
jne
push
lea
out
push
cmp
rorb
mov
mulb
inc
xchg
inc
cli
outsb
lret
fstl
add
iret
mov
in
xchg
cmp
jmp
lods
mov
pop
popa
scas
xor
repz
lea
mov
ljmp
mov
xor
xlat
add
cltd
add
int
lea
dec
pop
fistpl
xlat
mov
jecxz
movsl
cmp
push
ret
adcb
jnp
enter
pop
sbb
xor
bound
rorl
cmp
xor
add
push
jb
push
in
jecxz
je
or
leave
sbb
cmpsl
xor
in
xor
mov
mov
mov
xchg
sbb
popa
fisttpl
pop
movsb
pop
adc
jle
jne
jne
pop
iret
sub
pop
cwtl
sbb
iret
addr16
popf
movsb
mov
add
mov
jb
pop
movsb
aad
inc
mov
fldt
and
jg
push
jg
in
mov
shll
les
inc
inc
enter
push
cli
add
rclb
sub
int3
stc
mov
pop
popa
fnstenv
push
add
shl
int
mov
int
pop
lret
rorb
sahf
dec
pop
repnz
in
or
add
movsb
or
xor
sbb
push
mov
inc
lods
daa
pop
jb
daa
jo
jle
dec
movl
cs
std
jecxz
je
mov
das
sti
mov
insl
push
call
push
scas
push
push
mov
pusha
push
mov
stos
lea
lods
pop
pop
aaa
inc
or
adc
out
jp
adc
mov
shrl
xchg
or
imul
into
xchg
outsl
adc
lea
stos
cld
push
push
fimull
sbb
or
cmpb
outsb
lods
or
lock
jno
sub
pushf
sti
mov
sub
leave
lahf
jg
xor
mov
add
out
jp
inc
in
jge
and
jnp
movsl
cmpsl
fistpll
and
repnz
je
fwait
test
xchg
push
addr16
test
fldt
jg
leave
push
addb
std
aaa
or
xorb
sbb
faddl
je
stos
mov
lods
sbb
sti
inc
inc
call
mov
scas
sbb
lahf
je
or
hlt
fs
jnp
fstp
lret
std
inc
cmpsl
jno
and
ljmp
into
cld
mov
jmp
int3
out
je
or
test
gs
clc
lods
out
sbb
in
pop
mov
sbb
cmpsl
pop
fstpl
cmovbe
je
cld
and
outsb
scas
test
inc
jbe
out
push
imul
int3
mov
mov
jnp
pop
fwait
fs
stos
mov
test
mov
push
sub
mov
mov
lcall
mov
sti
jle
inc
inc
xor
out
imul
les
cmp
mov
add
and
insl
sub
pop
pop
ss
shrb
mov
sbb
lahf
faddl
sar
push
xchg
sbb
mov
pop
pusha
stc
loopne
cmpsb
stc
add
aam
pop
mov
shrd
sbb
jl
or
aam
gs
fst
ret
sub
add
sbb
inc
imul
xor
test
xor
mov
lods
mov
insb
jns
jmp
ret
cmpsl
ror
mov
push
sbb
pop
sub
inc
dec
pop
test
or
adc
sarl
shrb
mov
xchg
push
cmp
ja
stc
xchg
gs
test
cmp
mov
out
mov
add
and
and
fiadds
testl
stos
adc
dec
insl
stc
lret
jecxz
cltd
jne
ret
pop
jno
aam
dec
adc
inc
ljmp
movb
les
jp
sub
mull
in
jno
inc
int
jns
xchg
xchg
les
dec
pop
imulb
or
bound
daa
dec
lret
not
mov
push
shlb
lcall
fsubl
insl
cs
lcall
and
push
xchg
pushf
leave
sbb
dec
outsb
inc
push
repnz
push
or
addl
fsubl
xchg
jns
out
ss
cmpb
lods
mov
push
stos
sahf
mov
shll
int
fists
push
mov
ljmp
pop
data16
mov
inc
icebp
mov
mov
lretw
outsb
cmc
leave
sub
cmp
cli
push
adc
fs
or
cmc
add
jbe
adc
push
sbb
les
cmp
mov
mov
jne
xor
sbb
push
test
sub
lahf
insb
adc
pop
leave
enter
scas
test
in
dec
xorl
negl
sbb
jl
lret
push
cmp
pop
cmp
mov
stos
into
add
lds
data16
pop
popf
rorb
int3
test
int3
in
xlat
sub
cli
jl
jge
xchg
ljmp
push
fwait
ret
std
push
and
mov
sub
mov
ja
adc
dec
mov
int3
hlt
ja
jmp
cmpsl
out
enter
jg
lods
jno
xlat
arpl
js
out
test
dec
into
sub
rorb
imul
aad
cmp
cld
daa
mov
mov
sub
pop
dec
aaa
lods
scas
dec
in
sub
clc
cwtl
inc
push
jmp
or
push
fimuls
push
mov
pushf
adc
mov
push
lret
scas
gs
sbb
cs
fcom
or
pushf
cmp
addl
sbb
cmp
pop
inc
dec
jne
mov
sbb
mov
movsl
movsl
fs
cwtl
ret
mov
cmp
or
mov
std
sub
dec
jecxz
mov
cmp
out
lcall
in
add
rolb
or
adc
jp
popa
scas
mov
sub
xchg
and
push
xchg
mov
xchg
inc
sub
xchg
test
stos
mov
std
jnp
mov
add
and
pop
push
fnstenv
test
pop
xor
jmp
mov
repnz
lea
hlt
jg
sub
sub
or
xchg
mov
mov
cwtl
cmc
das
push
inc
in
xchg
ficomps
loop
fidivl
adc
and
mov
pop
push
mov
mov
insb
test
shr
push
pusha
jmp
mov
fwait
ss
imul
daa
xchg
sbb
pop
or
mov
add
or
adc
mov
into
and
jns
fadd
jae
imul
pop
pop
add
aas
sahf
jb
mov
xor
pop
test
ret
leave
int3
mov
jmp
dec
pop
xchg
add
in
and
dec
push
mov
xchg
movsl
push
sgdtl
out
lcall
and
es
or
movsl
mov
fisttpll
adc
dec
sbb
sbb
lahf
jne
out
jecxz,pn
xchg
adc
sub
fdivp
push
sub
pop
sbb
pop
pushw
mov
dec
mov
ret
and
fiaddl
mov
xchg
cmp
push
sbb
aad
cmpsl
mov
nop
ds
jb
ret
fdivl
imul
push
sbbl
jae
test
pushf
enter
push
push
test
xchg
sbb
pop
add
scas
mov
popf
fildll
jo
push
sub
jb
mov
sahf
jge
addr16
sbb
pop
jg
ljmp
push
jmp
push
shrl
mov
xchg
xchg
nop
push
jge
cli
test
push
ret
inc
xchg
sub
cmp
mov
pop
add
inc
push
pop
mov
stos
jmp
cmp
fs
fs
pop
lret
in
jb
mov
out
inc
xlat
or
jnp
xor
fstl
cmpsl
mov
mov
and
adc
cmp
mov
std
push
dec
nop
sub
or
mov
outsb
xorl
test
or
les
adcl
push
scas
dec
std
ficompl
cmp
pop
or
sub
gs
adc
lock
lods
and
dec
push
mov
repz
mov
push
jnp
icebp
in
fdivl
mov
mov
and
sbb
or
pop
mulb
push
xchg
mov
sbb
sbb
imul
pop
inc
pop
sti
and
mov
shl
xchg
dec
psubq
xchg
adc
testl
mov
insl
fbld
loop
sub
pop
sbb
cmp
pop
dec
pop
cmpl
pop
cmp
push
cmc
cwtl
fdiv
xlat
mov
repz
mov
cmpsl
mov
dec
movsb
insl
les
fucom
cwtl
add
mov
addl
inc
xlat
pushf
adc
jmp
loopne
das
pushf
inc
in
lret
dec
shll
loop
es
mov
adc
stc
test
push
hlt
fcompp
cmp
cli
shrb
mov
movsl
jmp
pop
mov
fisubs
outsl
or
mov
adc
mov
mov
pop
pushf
mov
sbb
aas
mov
pusha
aaa
psrlq
pushf
xchg
shll
pop
jo
mov
test
and
rolb
aam
js
dec
cmp
fucom
sbb
data16
into
arpl
jge
xchg
cmpsl
shl
mov
xchg
sbb
lret
movsl
lret
mov
pop
pop
xchg
es
jbe
hlt
and
inc
cmpsb
xor
mov
push
mov
push
add
daa
les
dec
cld
aas
pop
lods
push
mov
and
push
rolb
inc
fst
jecxz
repz
sahf
ljmp
pop
mov
mov
fsubl
cmp
adc
in
xor
and
mov
xchg
imul
pop
sub
ja
add
rcr
jae
add
aas
xchg
inc
pop
jb
mov
ret
dec
out
data16
addr16
mov
inc
pusha
jmp
mov
push
jns
imul
pop
hlt
pop
ret
jge
cli
cltd
js
mov
mov
out
sbb
shll
fstpt
sahf
aas
sub
or
lahf
gs
stc
jl
scas
mov
outsb
incl
test
mov
sbb
inc
or
lret
out
ljmp
outsl
cmp
adc
pop
cmp
push
xchg
inc
fisubrs
mov
flds
push
inc
fsts
movsb
nop
insb
mov
rol
loopne
sub
mov
xchg
push
scas
nop
aam
fdivs
dec
cmp
cmp
and
scas
xchg
add
sbb
in
ljmp
jle
and
and
rol
aam
repnz
mov
add
andb
mov
lods
test
popf
add
enter
repz
jo
into
das
push
daa
lods
push
jb
xchg
test
insl
loope
jle
std
or
xor
jge
push
mov
jbe
mov
imull
cmp
icebp
ret
and
or
or
push
fldcw
lahf
lret
jno
push
cmpl
mov
andb
fcom
jp
in
cmp
sub
movsl
xlat
sbb
movsl
add
enter
arpl
pop
and
icebp
movsl
test
imul
jecxz
mov
sbb
repz
imul
dec
fisttps
nop
dec
outsb
cmp
repnz
push
mov
ret
xchg
addr16
mov
fs
push
push
in
inc
mov
cmp
je
hlt
inc
xchg
mov
mov
imul
cwtl
jecxz
loop
mov
push
cmpsl
fwait
and
dec
nop
sbb
scas
push
mov
insb
mov
xor
and
lea
sub
jg
mov
cmp
int
and
cld
ljmp
lds
sti
inc
shll
loope
dec
and
push
xchg
dec
inc
cmp
xchg
subb
cmp
out
dec
push
adc
sub
xor
aaa
loope
dec
loope
xchg
dec
nop
sti
xchg
add
jmp
sbb
rcl
add
rclb
dec
loopne
flds
sbb
mov
pop
rorl
test
sub
imul
sbb
repnz
sahf
xor
inc
ret
or
icebp
mov
fidivrl
aam
daa
mov
test
fildll
pop
addr16
xor
inc
push
loopne
jp
mov
pop
add
mov
and
les
cmp
daa
test
inc
fistps
pop
and
int
ffreep
push
fidivs
push
ret
jecxz
icebp
into
ja
xor
xchg
pushf
push
ret
loop
push
into
call
nop
jmp
dec
loop
push
ret
add
das
test
daa
lods
push
enter
xor
push
xchg
mov
shrl
loope
repz
test
std
gs
lret
dec
pop
dec
into
xchg
mov
inc
das
ret
xor
cmc
lret
scas
push
xorb
dec
rcrl
or
dec
jns
mov
or
lock
pop
nop
cltd
arpl
mov
cmpsb
loopne
sub
cmp
loope
addr16
jno
movsl
xor
xor
jbe
jne
xchg
jno
sbb
or
aas
cmpsb
test
mov
xchg
clc
movsb
je
fs
repnz
leave
outsl
ret
out
jmp
out
mov
inc
fdiv
addr16
lret
dec
push
adcl
cmp
nop
dec
das
scas
and
cmpsb
es
jbe
inc
pop
jg
mov
push
fistpl
sub
jecxz
pop
push
and
fldt
jecxz
pop
popa
mov
adc
mov
sub
into
jge
aam
arpl
adc
daa
mov
fimull
mov
aaa
jp
mov
movsb
xchg
sbb
push
lcall
or
xchg
cmp
pushf
fidivl
hlt
icebp
aad
xchg
add
lods
pop
lcall
sub
in
lds
xlat
adc
pop
test
sbb
lcall
jns
push
stc
cmp
sti
dec
shlb
mov
mov
ret
xchg
dec
add
nop
or
stos
mov
add
adc
mov
js
cmp
adc
fs
sbb
xchg
dec
push
xlat
cmpsl
mov
sub
pop
stc
mov
cmp
and
test
pop
lods
cmp
dec
mov
inc
call
lret
lcall
mov
jle
inc
loope
ficoms
pop
jb
addr16
mov
cltd
int3
pop
cltd
sti
xchg
popa
push
into
add
push
arpl
fcoml
sarl
cmp
pmulhuw
push
fcoml
xor
fwait
xor
fwait
lea
test
call
xchg
jb
ja
ret
or
ror
int
push
loope
xor
adc
jge
adc
aam
and
in
push
or
mov
inc
dec
arpl
xor
in
mov
xchg
adc
imul
push
test
ljmp
adc
push
sbb
mov
push
test
and
xchg
test
cltd
and
mov
adc
or
xlat
and
sub
mov
ret
mov
xstore-rng
cmpsl
sbb
push
xor
mov
jle
dec
inc
shlb
inc
mov
push
test
push
inc
rcr
sub
and
sub
pop
add
pop
add
add
adc
dec
and
pop
xchg
adcl
push
ds
xor
cmc
test
sarl
pop
cmpsb
mov
fidivs
pop
push
dec
js
stc
xchg
mov
das
adc
in
ljmp
shll
fisubl
mov
icebp
popf
xor
add
lods
dec
inc
divl
jbe
loop
int3
cmpsl
xor
xchg
mov
arpl
scas
iret
xor
mov
test
xchg
adc
scas
jne
cmc
mov
mov
cltd
push
insl
jmp
push
push
jne
stos
addr16
test
dec
jl
fs
je
and
mov
cs
addb
mov
gs
adcb
and
imul
sti
mov
loope
and
cltd
icebp
daa
dec
out
adc
dec
or
mov
dec
inc
xor
xchg
or
sbbb
popa
test
rcrb
cld
mov
fmul
fidivl
add
adc
jo
xchg
cmp
pop
cmp
sahf
out
pop
das
js
loop
dec
into
cmpl
add
mov
fcom
imul
idivb
mov
pop
add
fsubs
inc
or
fisubrs
mov
jo
enter
cmp
test
mov
push
ds
popa
addr16
test
adc
int
arpl
inc
in
frstor
push
in
lods
js
jg
addr16
fwait
scas
lock
decb
jb
sbb
lret
pusha
iret
jb
inc
mov
xor
inc
scas
push
jae
cwtl
mov
shr
imul
mov
mov
imul
xchg
jo
fcomps
adc
icebp
clc
sub
or
sbb
sbb
lock
repnz
mov
cmpsb
add
sub
inc
jmp
adc
pop
pop
add
ret
std
loop
pop
mov
into
sub
movsl
outsl
pushf
sbb
push
or
xorl
test
jbe
rolb
mov
push
out
sub
cmpsl
inc
stc
or
enter
jnp
cmp
cmp
add
mov
subl
fs
xchg
icebp
test
xchg
pop
aaa
adc
jbe
mov
push
xchg
scas
lea
mov
mov
enter
sub
jo
xchg
push
rcrb
cltd
jg
xchg
pusha
notl
jbe
jle
dec
js
jb
xorb
mov
ror
mov
mov
imul
inc
insb
adc
or
cmp
ficoml
cmp
mov
mov
pusha
ss
cmp
mov
xor
hlt
adc
xlat
mov
mov
arpl
ja
inc
scas
imul
leave
pop
stc
das
jmp
pop
mov
scas
imul
leave
pop
stc
das
jmp
pop
mov
das
imul
fmuls
call
pop
mov
scas
imul
es
mov
das
jmp
mov
int3
int3
int3
int3
int3
cli
push
jp
dec
fstps
nop
je
enter
mov
jns
imul
cmp
or
jp
dec
fstps
sub
sbb
ljmp
dec
stos
push
mov
or
jp
dec
jno
lret
sub
sbb
stos
push
mov
inc
stos
insl
cmc
or
stc
jp
push
lods
or
test
push
imul
lds
movsb
fstpl
aas
jb
clc
aas
sbbl
sub
outsl
lret
lahf
pop
add
pop
push
cmp
sbbb
test
clc
jnp
inc
ret
cmp
cs
ljmp
les
jp
or
fistps
lods
cmp
push
mov
sub
sbb
xchg
lret
insb
xor
lcall
add
mov
ret
in
or
jns
sahf
fimull
push
sub
or
xchg
cmp
ror
repz
sub
jne
jns
add
cmp
lea
pop
pop
ret
sub
sbb
ljmp
add
sbb
jmp
imul
jg
cmpb
sub
sub
negb
pop
out
push
ds
pop
lcall
xchg
aas
mov
mov
fidivrl
bound
push
scas
sub
cmp
ljmp
dec
stos
cmp
or
jp
dec
fstps
sub
sbb
lret
dec
stos
cmp
or
jg
jp
in
and
mov
int
or
lods
add
fistpl
mov
int3
negl
pop
xchg
dec
sub
xor
std
mov
fisubrs
cmp
xchg
inc
push
xor
cmp
test
sbb
and
xor
cs
add
pop
mov
insb
push
jecxz
adc
mov
jl
sahf
movsl
mov
testb
sub
mov
xchg
sub
push
shrb
xchg
dec
cmp
sbb
mov
cmpb
int3
mov
scas
cmp
mov
push
insl
adc
mov
in
mov
rcrl
pop
mov
and
imul
or
sti
and
sti
xchg
cmp
and
pmaxub
stos
pop
mov
insb
mov
aas
adc
xchg
cmp
imul
stos
push
mov
mov
sbb
xchg
rorb
inc
dec
mov
jmp
lods
push
xor
add
push
mov
dec
and
sub
aaa
dec
in
scas
dec
pop
cmpsl
pop
jle
out
lcall
push
cmp
js
in
ds
xor
rcl
and
mov
dec
loop
mov
lcall
dec
jecxz
sub
push
inc
lods
jmp
cmpsl
rol
call
pop
subl
pushf
sub
mov
pop
push
in
ffreep
xchg
mov
or
imulb
xchg
mov
jns
mov
cmp
es
lds
scas
xchg
out
sub
testb
arpl
push
lcall
cmp
popa
sbb
movb
xchg
add
inc
aaa
mov
fucompp
jge
ret
fsubr
pop
dec
out
imul
rolb
xchg
pop
push
loop
push
push
sarb
adc
dec
pop
adc
pop
xor
daa
mov
push
test
cmp
sbb
addr16
pop
in
outsb
mov
jp
mov
aas
jae
movsl
or
aam
mov
xchg
or
dec
out
sti
aaa
cmpsb
push
fbstp
mov
repnz
add
imul
push
adc
pusha
add
or
loope
out
cwtl
fidivl
test
cwtl
int3
sbb
decb
rclb
mov
mov
and
lcall
mov
rorb
cmp
mov
add
gs
fsubrl
adcb
inc
xorl
test
enter
cmpsb
mov
lcall
inc
add
xchg
scas
iret
inc
adc
std
rclb
leave
inc
fdivr
mov
add
arpl
ret
jl
dec
cmp
scas
mov
pushf
pop
mov
in
cmp
sub
pop
cmp
adc
pop
adc
addr16
jno
jae
and
out
aam
cmpsl
popa
inc
sbb
pop
or
pop
xchg
fmull
sbb
mull
nop
push
push
sub
leave
add
ss
test
test
xor
in
pushf
call
sub
inc
cli
mov
xor
mov
sbb
push
aad
lock
retw
stos
xor
xchg
sub
jno
adc
test
hlt
xchg
imulb
inc
lods
aaa
push
andb
enter
dec
fs
test
ss
xchg
imul
aas
loop
pop
inc
mov
xchg
lahf
aaa
mov
fists
or
add
push
or
insb
ret
lcall
mov
stos
call
testb
fsubs
inc
es
in
push
data16
shrb
loop
add
stc
pop
mov
int3
pop
fsubl
sub
int3
jne
aad
loop
mov
dec
xor
mov
inc
inc
mov
cli
lods
sub
inc
pop
xchg
mov
je
das
jecxz
mov
imul
aam
jmp
xor
aam
out
sbb
lods
mov
mov
push
push
fsubs
mov
inc
out
sbb
pusha
adcb
and
ret
lds
or
cmp
orl
dec
leave
into
inc
outsl
jno
adc
bound
xchg
mov
sub
add
mov
add
mov
and
push
or
mull
add
push
and
outsl
pusha
mov
xlat
lods
dec
test
pop
loopne
popf
in
sbb
xor
mov
sbbb
addl
xor
push
or
fbld
rolb
imulb
nop
lock
aam
add
mov
fldenv
cmp
out
out
push
icebp
ret
fsubr
aas
mov
push
cmp
inc
push
xor
mov
pop
cld
test
fwait
jmp
out
mov
out
out
mov
ds
jmp
sbb
hlt
or
mov
repnz
out
cmp
mov
mov
in
fisubs
or
in
pop
mov
jae
inc
in
inc
aam
out
push
push
and
jne
cmp
jns
in
scas
fists
sub
dec
mov
mov
sub
xchg
data16
es
pusha
movsl
sub
js
test
push
cli
push
mov
mov
jno
ja
js
ss
leave
scas
aaa
mov
add
push
jae
mov
cwtl
insl
pop
xchg
and
mov
xchg
mov
repz
inc
or
jnp
mov
xor
rolb
divl
mov
pop
sarl
lods
jg
dec
and
push
popf
adc
cmp
imul
mov
icebp
xor
jae
push
incl
ret
pop
scas
xor
push
inc
mov
std
pop
lock
push
sti
int3
mov
dec
push
or
into
iret
jae
dec
jge
and
lahf
loopne
jnp
inc
repnz
sahf
xchg
xor
test
or
mov
mov
sarl
les
inc
shll
cmpsb
lcall
cmp
lcall
add
pop
mov
bound
xchg
push
add
aad
imul
cmp
into
ret
mov
popf
loope
ja
inc
xchg
push
stc
jo
push
shl
push
test
cmp
mul
jns
in
in
les
mov
pop
or
test
push
inc
sbb
push
loop
adc
shr
xchg
out
lock
or
lret
push
inc
gs
pop
inc
mov
adc
dec
daa
xchg
loopne
int3
add
fisubl
xor
sbb
imul
mov
daa
cli
push
mov
outsl
inc
push
mov
jns
xor
cmpsl
mov
jle
push
sub
mov
vmptrld
sub
hlt
inc
sub
mov
jp
mov
sahf
jo
jb
push
data16
xchg
outsl
jae
mov
repnz
lock
sub
inc
js
movsl
inc
popf
je
sbb
mov
mov
ds
out
or
les
push
mov
loop
dec
gs
pop
mov
add
fldt
repz
insb
push
test
addr16
sbb
insl
xchg
pop
int
fsubrs
ds
and
fsubrl
jecxz
add
cmpl
or
rorl
repnz
sub
nop
loopne
push
aaa
in
loop
mov
pop
std
icebp
test
cmp
jae
sub
insb
inc
xor
cli
pop
insl
jns
xor
imul
jae
addr16
or
sbb
cld
mov
hlt
gs
fwait
pop
xchg
repz
mov
test
mov
lea
bsr
mov
xchg
cmovge
test
mov
shlb
dec
std
imul
int3
adc
xchg
or
pop
mov
pop
add
push
mulb
arpl
sub
sub
pop
sub
mov
outsl
filds
test
fsub
adc
test
enter
adc
cmpb
ljmp
cmc
xor
sbb
push
and
test
and
mov
jbe
and
sbb
fst
out
add
into
dec
std
xor
or
or
jp
ja
fidivl
mov
and
insb
mov
sub
or
cmc
outsl
adc
xchg
enter
jnp
fidivl
in
push
mov
xor
repnz
mov
pop
xchg
in
dec
cs
dec
adc
mov
subb
inc
pop
fidivrl
inc
add
push
jno
push
pushf
push
gs
push
sbb
mov
add
inc
push
dec
push
xorl
insb
and
rcr
test
repz
iret
adc
pop
ss
rcll
pop
bound
mov
in
adc
dec
and
sub
iret
and
and
add
jno
xor
add
mov
dec
mov
test
fimuls
push
imul
fsubl
iret
mov
ss
fnstcw
scas
mov
mov
xor
fnsave
add
jp
aaa
dec
imul
movsb
jae
out
packuswb
imul
lea
aaa
xor
and
inc
jp
fs
and
jecxz
dec
fnsave
sbb
mov
loopne
xchg
or
cmp
cmp
outsb
jle
data16
hlt
add
fmuls
int
pop
xor
push
xchg
gs
sub
mov
dec
xor
fwait
insl
and
sbb
inc
lahf
push
dec
mov
pop
xchg
inc
aas
push
nop
lret
jmp
sbb
rol
sahf
xchg
mov
inc
mov
mov
mov
lods
inc
sahf
jnp
inc
pop
cld
xchg
push
jae
xlat
xchg
iret
jnp
popf
pop
inc
rcr
mov
shl
repnz
and
mov
jp
out
jns
push
xchg
fildll
ss
xor
cmp
and
lahf
ja
add
shll
add
les
inc
std
xor
arpl
inc
and
mov
lret
jp
mov
or
cwtl
fcoml
sbb
shrb
sub
inc
int
jl
cltd
dec
into
push
mov
xchg
push
int3
xlat
cwtl
push
ficoms
loopne
aam
scas
cmp
aas
out
lock
mov
rorl
jle
pop
jl
in
pop
popa
lcall
xchg
xorl
outsb
bnd
mov
mov
imul
hlt
sub
leave
mov
mov
jnp
rolb
cwtl
std
in
add
pop
out
cmp
ss
les
sub
mov
mov
mov
lret
add
or
sub
fcmovbe
shll
push
or
jnp
dec
jle
mov
aas
dec
into
mov
sbbb
xchg
rcr
xchg
push
cmp
mov
fnstsw
jae
test
xor
cmp
je
xchg
mov
sti
ja
mov
lods
enter
pop
inc
lcall
pop
dec
out
cmp
insb
popl
xchg
pop
out
cmp
lahf
cmp
jnp
add
cwtl
mov
jb
cld
mov
or
andl
add
js
lahf
dec
cli
and
dec
mov
jns
mov
sub
jl
negb
fcoml
push
stc
loopne
in
fildll
rcl
ds
xor
or
pop
call
pop
mov
rcl
sahf
test
sub
ds
pop
sbbb
lret
dec
gs
std
xchg
scas
pop
stos
xchg
pusha
shlb
out
in
jb
cmp
jle
pop
adc
mov
xchg
dec
push
and
pop
add
test
and
cmp
jnp
or
xor
dec
gs
lods
dec
gs
leave
mov
ret
mov
ficoms
addr16
pop
inc
mov
ljmp
mov
std
subl
fwait
or
xchg
jb
or
out
push
mov
jbe
loopne
mov
mov
jnp
pop
leave
cwtl
adc
mov
notl
cmp
test
mov
data16
scas
push
mov
cli
jno
sub
out
clc
sub
cltd
push
mov
sub
imull
inc
pop
and
repnz
ss
cmpsl
xor
into
jmp
dec
orl
sbb
dec
inc
inc
adc
push
jmp
pop
xchg
sub
es
inc
inc
xor
sahf
ljmp
xchg
ret
and
adc
lea
cmp
pushf
test
loopne
dec
sbb
mov
jne
sub
jno
jnp
mov
add
sar
or
out
rcrb
arpl
test
cmp
stc
cmpsl
jb
sbb
mov
out
call
lea
int3
dec
subb
cmp
jecxz
sub
add
push
or
clc
sar
pop
ret
ja
add
inc
xor
ficomps
lcall
punpckhdq
hlt
cli
mov
mov
icebp
inc
add
push
clc
notb
xor
mov
in
jg
je
adc
in
pop
mov
jl
mov
cli
lods
lods
imul
push
or
and
jge
lock
and
cmp
mov
lret
cmp
cltd
data16
sub
xorl
xchg
leave
xor
movb
fistpl
scas
push
jbe
push
adc
cmp
add
push
adc
in
lock
fimuls
fs
jle
add
mov
sbb
push
aam
push
jmp
mov
adc
mov
push
enter
fdivrl
cmp
je
sbb
xor
xor
jle
fstpt
push
js
stos
jecxz
repnz
or
in
xor
int
scas
mov
sub
mov
subb
push
xchg
xor
mov
xchg
sar
ss
push
sbb
es
pop
call
notl
bound
cmp
inc
inc
jecxz
lcall
cmp
inc
jne
or
imul
xchg
push
dec
xlat
push
mov
sbb
pop
dec
dec
jp
repnz
clc
addl
mov
inc
mov
dec
cmc
push
add
outsb
mov
out
xchg
js
sub
jb
adc
jg
jae
xchg
fbld
call
add
dec
andl
or
push
xlat
fxam
xchg
push
adc
mov
cmp
fistpll
scas
push
inc
inc
hlt
je
sbb
insl
ds
push
sub
adc
sub
or
push
pop
fwait
or
sahf
mov
subl
pop
xor
xchg
std
mov
push
jle
pushf
sub
std
daa
into
neg
jmp
dec
jmp
xor
rol
rorl
pop
inc
jmp
push
jne
int
rorb
mov
push
cmp
fbld
aas
cmp
sbb
inc
pop
mov
popa
jle
clc
pop
xchg
jecxz
data16
add
inc
push
mov
xchg
or
jb
adc
push
int
dec
movsl
in
mov
fisttpll
xor
jecxz
and
cmp
or
fcompl
lea
mov
sbb
ljmp
dec
nop
mov
xlat
or
mov
bound
xchg
stos
dec
dec
sbb
sub
lea
jge
jge
mov
subl
pop
xor
jl
inc
sbb
aaa
cmpb
loopne
ret
nop
jl
mov
cmp
cmpsb
xor
xchg
bound
es
jg
rcrl
stos
shll
lds
adc
ret
insl
add
std
cmp
mov
aam
or
sbb
mov
inc
mov
popa
lea
testl
pushf
mov
xor
loope
adc
dec
push
push
inc
cwtl
clc
dec
add
dec
mov
pop
mov
xchg
out
es
loop
loope
rcr
mov
push
lea
jecxz
or
and
and
dec
xor
cmp
sarl
leave
out
xchg
add
push
pop
cmp
lods
xor
in
movsl
fmull
jbe
loope
gs
jbe
lds
mov
inc
or
fwait
out
xchg
cli
rorb
insl
lds
and
ret
jb
cmc
push
shrb
aad
dec
inc
dec
dec
or
xchg
or
mov
jb
pushf
ljmp
dec
dec
popf
roll
gs
add
cmp
pop
xchg
xor
pop
fldenv
mov
push
dec
pushf
repz
lods
pop
sub
xlat
jb
lret
or
cwtl
les
mov
mov
jns
in
mov
xor
add
inc
cmpsb
stc
das
jle
dec
lds
jmp
cltd
sbb
fbstp
xorb
cwtl
pop
cmp
push
push
je
aas
repnz
ljmp
mov
rolb
xor
testb
js
hlt
mov
dec
repz
rcrb
and
inc
popf
push
jl
adc
or
loop
adc
jns
aam
jmp
add
dec
mov
jmp
sbb
addr16
pop
and
and
push
xor
jl
dec
inc
xor
fsubl
loopne
jae
je
push
outsb
inc
sahf
fmul
push
push
sti
mov
jnp
inc
aam
test
outsl
das
push
popf
jnp
adc
daa
jge
scas
and
nop
notl
mov
push
mov
subl
xchg
pop
popa
lds
fwait
scas
mov
sub
jmp
jno
jns
jge
pop
cmc
xchg
inc
das
or
or
imul
lock
fidivl
pop
pop
ljmp
dec
out
adc
and
dec
inc
daa
rorb
jge
popf
mov
popa
xlat
adc
daa
or
shll
adc
jmp
inc
in
or
mov
dec
lcall
push
add
into
dec
bnd
mov
gs
jecxz
sti
or
adc
imul
shlb
out
cmp
aas
dec
fsub
xchg
adc
pop
arpl
pop
xor
xchg
fwait
adc
push
rorb
jp
adc
push
sub
adc
pop
mov
adc
addb
and
cltd
jns
mov
out
movsb
xor
stc
in
add
sbb
push
or
std
imul
jmp
leave
fld
mov
cmpsb
test
aaa
rol
sarl
fmul
inc
xchg
sbb
cmc
sbb
daa
sahf
je
cmc
sbb
or
and
push
jle
xchg
sarl
insb
dec
dec
mov
aad
imul
aam
lret
cmc
add
scas
js
push
mov
clc
sbb
and
inc
and
mov
add
popf
pop
shrb
gs
ja
adcl
sbb
push
out
mov
out
xchg
fisttpl
lods
lret
loope
bnd
jecxz
inc
mov
push
call
mov
pop
lods
cld
popf
movsl
sub
jno
aam
and
xchg
push
push
inc
xor
sub
push
lds
cli
jnp
test
inc
mov
pop
cwtl
mov
clc
inc
mov
xor
rcrl
insl
xor
mov
mov
dec
aas
into
pushf
lea
movsb
mov
cmp
cli
pop
int3
test
shll
rol
sub
mov
lahf
imull
out
jge
popf
sub
lcall
jo
gs
push
and
cmpsl
pop
cmpsl
arpl
sub
push
aad
pop
inc
rorl
outsb
aam
or
mov
dec
mov
mov
scas
jmp
or
mov
push
iret
dec
pop
inc
fsubrs
sub
mov
lret
adc
xchg
jno
jne
adc
sbb
stc
jl
cmc
leave
and
and
mov
ja
xorb
lods
pop
and
call
xor
lcall
jp
mov
jecxz
cmp
inc
clc
dec
aam
cmpsb
mov
daa
adc
mov
or
sbb
cli
cwtl
fdivr
mov
or
popa
adc
repnz
fsubl
push
mov
mov
xor
dec
movaps
hlt
out
lcall
ss
mull
inc
stos
jne
idivl
dec
or
notb
mov
or
mov
mov
int
sub
stos
cli
sub
cmp
mov
pop
sub
dec
xor
scas
cmp
lods
inc
test
mov
and
sbb
into
and
xchg
jns
lods
add
scas
or
sub
or
cmpsl
push
sub
fdivp
mov
jmp
xor
movsb
data16
fmuls
push
mov
mov
and
sbb
ficoml
pop
adc
push
pop
lods
icebp
cli
daa
or
sbb
mov
mov
mov
jmp
add
js
fs
shll
mov
faddl
xchg
pushf
adcl
mov
cmp
nop
shlb
add
pop
into
scas
mov
push
push
fs
into
sub
sub
mov
icebp
mov
cmpsb
js
clc
cmp
mov
or
xor
rorb
fucomi
push
inc
in
aaa
imul
mov
movsb
in
cmpsl
push
sbb
iret
add
enter
sbb
pop
cld
cmpb
out
lock
mov
fwait
stos
nop
sub
lret
fwait
ret
push
aas
jnp
inc
fsts
js
repnz
mov
mov
pop
scas
fstl
scas
add
sub
xchg
aas
or
movsl
call
imul
mov
sub
out
mov
mov
sbb
aam
jmp
cld
insb
out
push
cli
sub
xchg
jne
or
mov
lahf
xor
dec
xchg
sbb
frstor
ljmp
pop
mul
and
sub
pop
lock
and
lock
imul
aas
jl
or
and
pop
pusha
push
incb
push
nop
les
sub
add
int3
cltd
xchg
negb
xchg
inc
rclb
sahf
ret
repnz
sub
mov
mov
inc
sahf
cli
loop
push
cwtl
sbb
push
pop
ljmp
add
leave
lcall
pop
call
outsb
sbb
les
xchg
insb
data16
icebp
loop
inc
push
push
mov
sub
and
pop
out
repz
pop
hlt
es
cmpsb
mov
mov
fucomi
cmp
dec
sub
adc
xchg
add
sub
pusha
test
jns
pop
and
fistpl
sub
mov
popa
aaa
inc
dec
pop
mov
add
adc
or
push
add
pop
fisubs
sub
js
add
out
scas
sub
mov
outsb
sbb
arpl
mov
sti
inc
jae
push
rcr
in
je
cmpsb
movsb
xchg
jmp
sub
sbb
lret
dec
stos
cmp
or
jp
dec
fstps
sub
sbb
lret
dec
stos
cmp
or
jp
dec
mov
cmp
or
cli
imul
cmp
or
jnp
dec
fstps
sub
sbb
pusha
pop
fidivrl
fnsave
gs
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
mov
push
push
pushl
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
icebp
mov
pop
shrl
jns
sub
ja
mov
jno
pusha
aad
stc
inc
sti
xor
add
shrl
jns
or
cmp
popa
fsts
inc
stc
icebp
ljmp
icebp
push
loope
shll
pusha
mov
mov
and
inc
jecxz
pushf
inc
stc
xor
dec
mull
mov
rcrl
sub
lcall
push
fsubr
subb
push
add
sbb
andb
mov
xor
or
int3
inc
test
jmp
sbb
sbb
aad
dec
xor
jl
cltd
pop
cltd
je
add
mov
sub
cld
cltd
in
scas
or
push
into
fisubl
xchg
and
push
jno
mov
call
jns
cmp
lods
cmp
test
push
mov
jae
push
clc
sbb
xorl
fisubrl
cmp
jns
arpl
xor
rcll
loopne
xchg
and
mov
xchg
pop
mov
pop
shll
inc
adcl
mov
xor
and
jb
inc
aam
xor
mov
in
jmp
mov
mov
xor
dec
idivb
je
xchg
or
cmp
or
sbb
leave
popa
fsts
inc
stc
xor
add
shrl
jns
or
cmp
popa
fsts
inc
stc
xor
add
dec
dec
out
push
xor
das
and
mov
ss
mov
push
inc
mov
add
insl
xor
neg
clc
lock
out
mov
push
inc
fcomps
push
dec
enter
push
lret
lcall
stos
jmp
or
out
sbb
inc
loope
sarl
call
cmp
in
and
mov
mov
mov
add
in
adc
mov
fwait
push
jb
mov
or
ret
addr16
cmpl
das
or
shrb
sub
push
lea
push
jae
xchg
int
and
inc
movsl
cwtl
pop
ja
mov
fs
test
push
insb
and
mov
fdivrs
mov
insl
and
cmp
xor
test
aad
ja
fldt
shlb
mov
jg
xchg
insb
sbb
fdivp
test
das
andl
mov
dec
in
mov
lds
or
outsb
leave
stc
rolb
shlb
in
sub
sbbb
fwait
xchg
push
push
push
shlb
aam
mov
and
adc
push
inc
mov
mov
les
or
ja
scas
addr16
dec
mov
inc
je
ds
sti
into
aas
inc
std
mov
jnp
jecxz
sub
mov
push
ret
iret
cmc
push
jo
loopne
push
mov
sbb
sbb
test
dec
lds
repz
cli
mov
jmp
xor
cmp
lea
mov
pop
cmp
mov
xor
in
sub
jb
adc
int3
xchg
and
pushf
xor
insl
jb
mov
mov
sub
mov
cmpsb
or
sbb
addr16
sub
shrl
xchg
leave
and
sbb
inc
xchg
repnz
push
clc
int
imul
repnz
stos
insl
lahf
in
push
mov
aas
in
push
jecxz
push
xor
xor
mov
adc
sub
cltd
pop
imul
loop
pop
into
scas
popa
stc
leave
fistl
out
and
dec
stc
or
mov
fcoml
sti
sub
add
loopne
ljmp
fcmovnbe
and
and
ds
mov
bound
and
roll
xchg
cmp
mov
mov
es
aam
ljmp
inc
or
test
jne
xchg
pop
lds
cs
mov
push
divl
out
cld
mov
or
insl
cmpsb
imul
mov
int
js
fwait
sub
push
adc
popa
das
mov
or
jecxz
lds
mov
xchg
sahf
enter
rol
adc
inc
in
add
and
insb
addr16
jne
lahf
in
mov
sub
arpl
xchg
push
cltd
dec
outsb
arpl
lret
mov
jmp
adc
imul
push
jns
jno
in
les
and
pop
in
and
cmc
in
mov
in
mov
mov
or
pop
mov
fabs
adc
lds
push
xchg
mov
push
pop
mov
ret
enter
mov
in
xchg
dec
inc
add
jae
les
stos
add
pop
jecxz
loopnew
mov
sub
ror
aaa
fdivl
dec
cmpb
nop
arpl
icebp
lds
das
shll
es
rcr
add
insb
and
out
hlt
inc
add
inc
stc
push
imul
jl
sub
add
fs
test
jns
ljmp
mov
pop
push
je
scas
in
sbb
nop
idivb
adc
sbb
xor
push
cld
repnz
cmp
dec
jecxz
sub
add
aaa
pop
inc
outsl
lea
icebp
das
xor
mov
adc
ja
push
push
cmp
dec
mov
xchg
push
jmp
mov
sbb
and
sub
jb
es
test
fmuls
add
or
push
daa
mov
fdivrl
mov
adc
pop
xchg
loop
inc
es
icebp
push
mov
iret
popf
push
dec
movsb
or
mov
sbb
dec
push
cmp
mov
data16
rclb
aaa
mov
mov
cmp
cli
call
pop
test
jo
add
jg
or
pop
fdivs
fsubr
xchg
cmp
sbb
sub
adc
addl
enter
mov
mov
mov
jo
in
nop
push
jg
inc
fisubrl
pop
scas
dec
nop
std
fdivrs
pop
and
int3
aad
enter
mov
mov
mov
out
fcoml
stos
bound
adc
cmovge
push
cmp
mov
xor
sub
inc
xchg
fs
mov
popf
or
add
dec
xchg
cmp
cmp
ja
rol
sti
push
adc
fiaddl
out
xor
mov
mov
pop
test
inc
das
shrb
jbe
fadds
sbb
push
and
je
fstpl
mov
ds
cmpsb
xchg
push
nop
out
push
pop
std
imul
iret
prefetch
lods
popa
push
cltd
jp
and
inc
out
jmp
mov
lret
dec
xor
xor
ret
sbb
popl
inc
dec
cmp
icebp
or
cmp
inc
fbld
xor
or
add
pop
stos
out
adc
push
sbb
xchg
adc
lods
imul
out
icebp
aam
in
aam
jmp
addr16
mov
roll
mov
popf
push
lahf
out
push
pop
xchg
pop
fdivl
in
pop
push
in
mov
add
lahf
clc
jb
lret
xchg
jg
mov
cmpl
sahf
dec
mov
mov
adc
fdivs
std
test
insl
enter
dec
adc
cmp
mov
pop
loop
decb
mov
fwait
xlat
jno
orl
push
repnz
mov
sahf
lea
mov
xor
mov
lods
cmpsl
ficomps
mov
mov
ljmp
inc
sub
jmp
push
test
shll
divb
mov
rcll
pushf
inc
pop
cwtl
mov
mov
repnz
cltd
fwait
sti
push
roll
adc
dec
testl
fs
mov
loope
rcrb
and
out
xchg
push
inc
insl
and
test
dec
dec
sub
insb
dec
mov
and
repz
mov
in
pop
inc
movsl
adc
add
push
push
xchg
jno
shl
icebp
xchg
xor
dec
dec
adc
in
sbb
mov
stc
ds
push
sbb
ret
sbb
cmpsb
pop
xor
cmp
rclb
cmc
in
inc
loopne
dec
push
xorl
push
xchg
add
hlt
mov
ss
and
sbb
mov
pop
dec
push
cmc
in
jne
clc
add
jns
aaa
leave
sahf
imul
dec
fcoms
adcb
dec
inc
push
sub
cwtl
cli
adc
sub
sbb
jbe
jl
jns
std
xchg
pop
pop
js
cvtpi2ps
cmp
mov
popa
cltd
inc
loopne
insl
lods
repnz
dec
sbb
inc
or
mov
pop
mov
dec
fistps
shl
mov
jge
fwait
xor
sti
and
scas
in
sbb
aad
or
pop
or
jmp
movsl
aam
movsb
fbld
or
and
arpl
test
loopne
clc
sbb
pop
xor
std
jne
or
mov
jns
cmp
add
aas
push
pop
loopne
mov
dec
xor
movsb
or
dec
pop
sbb
test
dec
into
xchg
add
loopne
movsb
gs
movsl
fcoml
imul
mov
sub
lds
or
repnz
data16
loope
mov
push
and
jo
xchg
jmp
mov
mov
push
sub
mov
mov
mov
fmulp
jb
insb
in
sahf
dec
dec
jno
scas
sbb
aad
fnstsw
push
xor
sub
pop
cmp
stc
pop
and
ljmp
cmp
cmp
add
ja
dec
push
out
xchg
inc
adc
iret
fs
mov
imul
cmp
fldcw
inc
mov
inc
lahf
test
add
adcb
jg
pop
in
andb
lock
rol
mov
int3
sub
gs
cmp
shll
iret
xor
lcall
jns
fdiv
dec
popa
mov
sub
iret
mov
pushf
sub
pop
pop
cmp
mov
mov
aaa
inc
addr16
sbb
jecxz
test
mov
push
loop,pn
xchg
fidivrs
div
push
call
ds
sub
fadds
jle
out
sbb
arpl
pop
gs
mov
and
push
fcmovbe
xchg
mov
push
pop
cmp
mov
enter
jnp
lret
lods
mov
out
sbb
repnz
sti
adc
jo
push
dec
shr
xor
shlb
mov
stos
jecxz
mov
and
stos
das
hlt
inc
push
dec
push
shrb
loope
adc
cli
pop
mov
and
das
icebp
cmpl
nop
sbb
mov
pop
je
test
loopne
push
mov
push
outsb
or
push
test
testl
jmp
adc
ss
mov
jg
test
je
mov
sbb
in
add
jne,pn
inc
outsb
cld
or
lret
lahf
movsl
add
mov
jecxz
scas
adc
push
mov
into
mov
mov
mov
dec
in
xchg
jo
inc
push
sub
push
xor
insl
mov
jns
shll
inc
insb
mov
pop
jmp
dec
out
ret
lds
sbb
mov
push
and
clc
xchg
js
ss
dec
sub
pop
push
jnp
push
ret
aam
arpl
mov
jle
xor
fsubr
sbb
jge
cmpsb
pop
gs
xchg
xor
out
add
pop
inc
sahf
fstpl
mov
daa
push
xchg
sub
mov
out
adc
stc
daa
imul
or
sbb
pop
mov
pop
and
div
imulb
out
or
imul
mov
lds
xchg
adc
pop
add
fcomp
ds
sub
inc
ja
insb
sti
sti
dec
sysexit
jge
loop
push
inc
add
pop
or
je
into
and
fistps
leave
test
out
mov
fxch
pop
hlt
mov
or
sbb
cli
test
pop
pop
std
in
in
push
mov
dec
cmpsb
mov
jno
and
outsl
imul
adc
popf
mov
imul
mov
out
aad
in
in
pop
movsb
out
and
adc
push
or
inc
xor
into
test
sub
idivb
out
mov
out
popf
cmp
xor
gs
leave
adc
rcr
xchg
push
lock
clc
test
dec
scas
jg
push
rcr
in
data16
cs
pushf
inc
or
xlat
dec
hlt
or
or
dec
pop
rclb
out
xchg
sub
cmp
arpl
popa
out
pop
mov
idiv
and
mov
aam
pusha
xlat
pop
repz
or
addr16
pusha
std
jle
fldl
fcmove
cmc
shlb
call
iret
push
push
repz
add
xlat
adc
lret
xchg
mov
les
mov
jo
les
int3
inc
aam
cmp
rcrb
mov
or
jae
and
mov
xchg
cmp
and
jno
jbe
mov
in
adc
lock
popf
push
sarl
addb
or
sbb
pop
mov
lahf
cmpb
lcall
cmpb
add
inc
in
push
sbb
adc
test
jle
aad
pop
adc
fcomps
adc
cltd
sub
jle
xchg
mov
adc
enter
adc
data16
stos
mov
mov
stc
in
les
cmp
fistl
adc
test
adc
inc
aas
sbbb
repnz
lock
loope
sub
or
iret
pop
cmpsb
faddl
mov
imul
cmp
mov
pop
mov
not
outsb
ljmp
dec
inc
bound
inc
daa
mov
pop
cmp
cmc
jp
add
xor
out
pushl
das
scas
mov
adc
roll
push
es
mov
pusha
aad
fwait
shll
or
ds
iret
iret
divb
dec
arpl
mov
jge
aas
and
addr16
inc
bound
aaa
and
inc
push
adc
call
add
pop
mov
mov
xor
jae
repnz
imul
xchg
and
sbb
stos
or
mov
cs
xchg
or
js
lcall
xor
adc
and
xchg
mov
adc
jp
loop
ja
inc
lods
cli
loop
fstp
xor
sbb
dec
loope
or
ret
add
push
out
cmp
mov
xchg
adc
xchg
push
into
sbb
mov
xor
xchg
jle
xor
ss
les
sub
cmp
int3
mov
ret
sbb
jecxz
adc
ds
scas
pop
pop
addr16
pop
out
mov
jp
imul
xchg
cmpsl
nop
movsb
push
or
enter
call
in
jecxz
jp
pop
cmpsb
sahf
jle
cmp
inc
outsl
or
mov
nop
aaa
out
sti
pop
dec
nop
pushf
test
aas
inc
aam
divb
out
mov
in
daa
sub
cmpl
imul
outsb
loop
sbb
jbe
cmp
cmp
pop
mov
jo
mov
pop
cmp
insb
mov
je
dec
andb
sbb
imulb
in
call
jnp
imulb
pop
dec
jbe
cmp
cmc
mov
and
aaa
fistpll
insb
dec
xchg
std
lret
loop
sarl
fisubs
push
shrl
push
xchg
repz
xor
mov
mov
not
stos
lea
push
push
jmp
mov
in
pop
add
adc
dec
dec
scas
sahf
andb
jno
push
sbb
mov
cli
dec
push
inc
lcall
dec
aam
imull
xchg
xor
in
jne
in
adc
xor
shrl
jo
xchg
push
insb
lret
push
lods
and
push
jle
add
push
cmp
test
fsts
fstl
add
lods
fst
cmpsl
push
push
and
mov
and
repnz
ds
scas
lret
mov
sarb
test
addr16
push
arpl
mov
flds
ljmp
pop
aaa
insl
add
movsl
nop
cmp
xor
push
scas
and
fmull
in
push
cmp
cld
arpl
mov
test
mov
leave
jb
or
pop
dec
push
lods
pushf
push
sahf
cld
outsb
rorl
sub
mov
cmp
stc
inc
movsl
mov
push
mov
sub
dec
lods
insb
mov
lret
sbb
dec
imul
lock
sbb
ret
xchg
mov
inc
js
out
push
hlt
sub
cwtl
mov
fsubs
in
pop
mov
mov
imul
in
shlb
mov
aas
out
cmp
insl
aas
or
dec
pop
sbb
insb
pop
fstps
cwtl
fnstenv
cltd
test
mov
stos
rcll
aaa
clc
lock
fsubl
push
hlt
sub
or
scas
and
mov
cmp
mov
scas
aam
mov
xchg
xorl
sub
test
jmp
ljmp
dec
filds
pop
push
rcrl
aaa
xor
movsb
or
hlt
roll
inc
xor
addl
cmpsb
or
xchg
or
mov
ret
push
movsb
fdivp
or
call
mov
adc
push
jno
imul
push
out
in
rolb
and
add
sub
dec
dec
leave
pop
shrb
in
loop
jno
adc
sbb
mov
push
mov
ljmp
xchg
pop
shl
scas
mov
pop
js
dec
cmpsb
mov
mov
push
push
gs
in
lahf
sub
sub
aam
push
lods
sbb
aaa
repnz
movsl
and
add
inc
inc
xor
or
mov
xor
mov
add
pop
insb
adc
push
mov
ret
out
rcr
scas
sub
xor
pop
sti
and
shlb
xchg
mov
ret
add
dec
add
mov
divl
je
jne
cmpsl
mov
push
mov
and
mov
mull
add
push
xor
xor
mov
and
idivb
dec
clc
outsb
lds
divb
mov
cmp
xchg
mov
or
inc
dec
xchg
sub
or
dec
xchg
mov
aad
sar
lock
mov
cwtl
pusha
and
pop
pop
adcl
xlat
je
adc
fiadds
test
test
and
push
lcall
in
fimull
mov
std
out
push
insb
aaa
mov
inc
popa
jmp
cmp
loopne
adc
loopne
cs
cmp
cmp
push
jg
mov
enter
mov
dec
inc
popf
fidivrs
mov
inc
cli
lods
mov
call
fstps
or
pop
pop
pop
out
ret
test
jo
cmpsb
mov
jl
jno
ret
int3
dec
fcomip
stc
add
inc
dec
aas
adc
shrb
sbb
add
push
dec
add
mov
lods
mov
mov
icebp
addr16
inc
movsb
sbb
jmp
and
mov
fwait
cs
popf
aas
push
xchg
scas
mov
iret
xchg
xchg
ret
sub
xchg
xchg
popf
push
mov
aas
and
xchg
subl
jne
mov
xchg
movsb
cmpsl
stos
push
lds
jp
or
dec
sub
or
jns
adc
cmp
test
and
filds
test
mov
mov
fldcw
ret
mov
imul
scas
scas
sbb
cmp
inc
in
push
ja
xchg
insl
ficoms
inc
cmp
cmc
aas
jb
xchg
or
xor
mov
adc
std
lds
adcw
cmpsl
push
or
addl
bound
pusha
sbb
dec
imul
in
adc
fildll
xor
fwait
pop
aam
pop
ja
jnp
push
aam
dec
add
pop
inc
xchg
mov
iret
mov
sbb
lret
bsr
popl
leave
mov
clc
pop
sub
xchg
adc
movsb
into
ds
sbb
cld
std
jp
movsl
mov
pushf
inc
nop
std
sub
dec
pop
test
iret
insb
loopne
pop
test
aad
pop
lret
insb
mov
inc
push
jp
in
dec
xchg
mov
cltd
dec
sti
push
daa
imul
xchg
test
push
jno
sahf
or
sub
jb
in
orb
rorl
or
xchg
mov
cmovbe
movsl
mov
aaa
fnstenv
std
out
mov
pop
je
fidivrl
inc
push
sub
and
movsb
gs
movups
shr
ret
daa
xchg
mov
nop
or
inc
pop
cli
mov
aam
push
aaa
scas
in
fadds
cmp
sub
mov
out
lock
cmpsb
dec
loopne
and
outsl
imul
inc
andl
popf
xchg
into
addr16
add
cmp
movswl
sub
packssdw
mov
addr16
imull
mov
leave
jmp
cmp
int3
and
mov
sarl
lods
xchg
test
add
in
inc
inc
sub
adc
cwtl
lods
pop
mov
xchg
mov
or
les
loop
xchg
dec
push
ret
push
lret
mov
xchg
adc
or
mov
dec
pop
xchg
subl
push
lods
stc
loop
adc
sbb
and
adc
dec
aam
xchg
decl
pop
or
jge
pop
cmp
inc
lahf
outsl
cmp
icebp
and
xor
testl
add
cmp
pop
push
sub
cltd
fdivl
xor
andl
pop
and
jmp
andl
in
ficoms
mov
pop
sub
xchg
jb
and
iret
adc
inc
cmp
jle
adc
xor
aaa
cmp
scas
lea
pop
pop
sbb
push
dec
pop
lcall
je
dec
ds
hlt
nop
out
mov
sti
cld
loop
push
fdivl
add
xor
sbb
dec
enter
jle
stos
pushf
shrb
rcll
loopne
fnstsw
jbe
fmull
jmp
popf
push
push
xor
inc
sbb
lahf
popf
mov
in
stos
xchg
dec
testl
or
mov
jns
jecxz
rclb
xchg
mov
jg
ret
pushf
xchg
and
mov
out
ss
inc
movsb
mov
add
inc
or
pop
lahf
adc
or
xchg
sub
mov
stc
js
scas
jl
fstps
xor
dec
sbb
insl
dec
cmp
sbb
jmp
mov
ds
dec
jbe
xlat
inc
ror
ja
xor
lock
adc
bnd
inc
mov
xchg
dec
push
mov
insb
mov
mov
adc
and
nop
jae
mov
icebp
sub
xlat
cmp
stos
inc
push
cli
jb
outsl
sti
or
out
dec
cmp
lahf
mov
pop
pop
add
in
xor
dec
in
sbb
pop
inc
aaa
xchg
idivl
fbstp
bound
fsubl
scas
icebp
xor
test
call
mov
push
add
or
and
push
nopl
jle
mov
fs
xchg
dec
sti
jle
flds
mov
pop
mov
jno
dec
lods
add
sub
push
or
inc
cmp
in
inc
push
daa
das
and
cld
add
jne
sub
shll
gs
loope
add
sub
pop
inc
insb
into
lock
je
aas
test
repnz
rorl
jbe
ljmp
pop
sub
mov
fdivrl
ljmp
and
outsl
adc
push
xchg
aam
sub
push
cmp
cmc
hlt
and
out
xor
lea
xor
sub
pop
pushf
pop
rcrb
xchg
xchg
and
xchg
mov
iret
sub
ja
lcall
push
scas
pop
and
push
sub
mov
push
gs
or
adc
rolb
pop
pusha
xor
sub
push
out
jmp
sbb
insb
rcrb
sarl
mov
cmp
popa
fsts
inc
stc
xor
add
shrl
jns
or
cmp
popa
fsts
inc
stc
xor
add
push
imul
sbb
leave
popa
fsts
inc
clc
xor
add
shrl
jns
or
cmp
popa
jae
jmp
push
popaw
push
jno
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
mov
subb
push
rorb
add
adc
bound
dec
inc
jp
push
lcall
loop
repnz
rclb
arpl
adc
and
jb
inc
jp
push
lcall
cld
ficoml
ljmp
ja
or
add
int3
jmp
sti
stos
out
repnz
sbb
popa
gs
add
repz
push
daa
pop
jb
inc
icebp
push
xor
add
pop
das
int3
fidivl
dec
repnz
loopne
outsb
inc
cmc
xchg
out
dec
popf
pop
addl
cmp
xchg
rolb
lret
mov
pop
arpl
jp
dec
aaa
dec
mov
outsb
sarb
fisubrl
sbb
nop
rclb
in
cmc
xchg
jb
inc
jo
imul
fisubl
push
jp
dec
nop
pop
lret
mov
add
push
cs
or
mov
pop
das
pop
subl
add
or
pop
mov
out
out
pop
and
inc
jp
jg
lcall
push
fimull
ljmp
and
sub
dec
jo
push
add
sahf
ror
mov
pushf
mov
and
or
ja
adc
sbb
sub
aaa
and
call
out
lock
stos
mov
xchg
add
dec
sbb
add
jecxz
ror
hlt
repnz
shr
and
xor
add
adc
bound
dec
inc
jp
push
lcall
loop
repnz
shr
and
xor
add
adc
bound
dec
inc
jp
push
lcall
sub
add
dec
sbb
inc
fildll
test
outsb
inc
rcrl
pop
xor
jnp
fs
pop
mov
lods
into
push
xorb
jne
pop
rclb
movsb
out
inc
pop
lds
scas
repnz
push
rcll
cli
ret
dec
jbe
mov
xchg
sbb
inc
shl
or
mov
je
cld
and
stos
xchg
sub
mov
or
jne
mov
add
clc
cmp
aad
xchg
xlat
mov
jmp
daa
sub
aad
sahf
jae
movsl
push
push
std
push
sbb
mov
out
rolb
call
ret
sub
movb
or
pop
fistpl
in
mov
aaa
xor
sbb
and
cs
int3
cld
or
dec
push
lea
jnp
pop
scas
aam
pop
inc
popf
push
inc
dec
and
mov
pop
es
cmpps
add
je
in
inc
push
xor
sub
fnstcw
scas
mov
jl
jns
xchg
add
cmpsb
jmp
xlat
jae
lds
fwait
int
dec
lods
cltd
add
pusha
dec
leave
sub
loope
dec
lcall
enter
lret
dec
xchg
sub
mov
xchg
daa
jno
test
fdivs
sub
lahf
test
inc
int3
jp
dec
push
mov
add
inc
repnz
dec
mov
push
andl
fwait
sub
push
mov
xor
int
pusha
aas
test
jno
xchg
cmp
mov
aam
dec
or
das
insb
mov
xlat
popf
push
mov
inc
jno
popa
xor
inc
icebp
mov
dec
jo
std
mov
js
in
adc
add
add
or
dec
jns
popf
adc
mov
insb
out
in
rclb
jae
shll
in
adc
adc
fsubl
xchg
sbb
and
dec
scas
mov
mov
pushf
and
adc
jecxz
sub
sarl
and
pop
jecxz
push
into
sbb
imulb
xor
cmp
std
sub
mov
rol
js,pn
sub
sub
ja
xchg
dec
repz
daa
std
and
add
cmp
loope
ret
insl
imulb
stos
inc
les
into
ss
add
jp
jle
sbb
push
fst
add
mov
inc
ret
ret
stos
adcb
out
mov
subb
push
and
gs
jmp
mov
orb
lods
addr16
das
mov
out
sbb
or
mov
sub
mov
mov
xchg
cwtl
mov
cmc
ret
and
cmpsb
aam
push
and
rcll
mov
xor
incl
pop
lea
and
xor
mov
sbbl
push
push
call
inc
mul
or
or
and
mov
mov
push
xor
mov
pop
ficomps
pusha
sti
int
sub
and
pop
or
lds
pop
addr16
xchg
or
leave
imul
arpl
jb
adc
sub
ret
jecxz
pop
test
daa
aad
mov
lcall
in
pop
dec
je
out
mov
dec
lds
mov
mov
into
and
loop
xchg
nop
sbb
inc
sub
aad
aad
inc
inc
cmp
loopne
mov
sub
pop
pushf
mov
clc
shr
loopne
adc
and
and
test
inc
imul
and
out
xor
mov
sbb
in
mov
ficoml
and
js
loopne
adc
insl
cmp
jmp
jg
jge
insl
cmp
jne
pop
or
andl
ljmp
and
ja
jmp
shr
fstpl
ds
xchg
scas
lea
and
fsubl
sub
inc
xor
int
gs
arpl
xchg
and
and
clc
fsubr
sub
fcmovbe
mov
cs
ds
pop
jno
pop
cmc
inc
stos
ret
subl
push
or
jmp
dec
mov
push
dec
cmp
dec
cmp
shrl
fbld
inc
mov
jl
adc
mov
push
inc
arpl
cltd
pop
sub
cltd
jmp
or
inc
jg
inc
and
jmp
mov
lds
dec
jno
xchg
lret
faddl
mov
sub
pop
or
js
dec
daa
insl
mov
dec
out
dec
jg
cld
cwtl
je
movzbl
int
push
stc
lret
icebp
repnz
mov
sub
or
dec
rcrb
fldl
sbb
sbbl
adcb
clc
stc
push
inc
ljmp
jge
clc
sub
jbe
dec
test
movsb
movl
movsb
dec
in
in
insl
jno
push
jge
std
ljmp
sub
mov
fiadds
fldl
add
sub
mov
fistpll
jg
pop
mov
std
cwtl
in
lahf
pop
jne
repnz
or
cmp
push
scas
pop
sbb
xchg
imul
inc
or
xchg
lea
pusha
mov
ja
inc
mov
test
jns
mov
sbb
popa
inc
out
leave
cmp
mov
fwait
dec
sarb
cwtl
inc
repz
pusha
mov
mov
sub
push
imul
daa
ret
inc
fcoms
adcb
add
jp
jp
insb
or
xor
sahf
lds
mov
ja
ss
dec
and
or
scas
scas
and
out
mov
subl
insb
push
ret
jnp
cmpsl
xor
push
scas
push
dec
fildl
or
imul
adc
jp
or
outsl
out
mov
push
or
roll
data16
jmp
test
push
leave
inc
lds
adc
jmp
xchg
loope
ret
das
shrl
pop
call
or
movsb
fadds
add
sti
xor
ds
cld
jns
push
bound
stos
jecxz
sbb
mov
ret
test
jns
sub
dec
and
stc
jbe
inc
xor
push
movsb
lcall
lcall
mov
rcr
repz
fsts
jmp
movsl
js
add
and
fdivs
cmpsl
int3
daa
scas
mov
aas
cli
dec
aas
xor
jbe
out
xor
ds
stc
or
fistps
push
sbb
scas
shl
jge
jecxz
cmpsb
mov
dec
bnd
push
pop
mov
mov
push
inc
cmp
lcall
inc
ja
popa
adc
hlt
adc
shl
push
or
push
cmpsb
nop
fsubs
inc
push
mov
pusha
mov
inc
jge
mov
push
dec
lods
jns
fst
call
jge
sbb
and
inc
jnp
jnp
jp
add
fildll
jb
mov
loopne
pusha
pop
xor
fwait
sbb
mov
cmp
fldcw
inc
jmp
frstor
testb
push
aaa
cwtl
fnsave
and
xor
cmp
xor
arpl
scas
jb
pop
shr
mov
dec
out
mov
movsb
mov
out
add
push
fsubr
inc
add
pop
add
or
push
ret
pushl
push
repnz
pop
out
adc
popa
clc
hlt
jl
loope
push
stc
inc
mov
aam
fbld
xor
jbe
cmp
addr16
sbb
mov
add
mov
imul
cmpsl
test
stc
fidivrl
in
inc
imul
sbb
xor
mov
ret
xor
stc
cmp
repnz
sbb
xchg
in
lcall
addb
arpl
lret
leave
adc
and
test
sbb
push
dec
and
fsts
lret
sahf
and
push
fisubrl
shlb
das
sbb
dec
push
sub
leave
fdivrs
das
xchg
mov
jmp
ret
add
mov
clc
in
push
pop
xor
jnp
cs
push
jp
jbe
data16
adc
fmuls
pop
lods
xchg
xor
int
lret
leave
cmp
xor
sbb
xor
adc
fwait
shlb
roll
dec
jle
mov
jo
xor
in
push
xor
popa
test
or
sbb
lods
xchg
fwait
leave
aas
loop
rolb
cmc
dec
es
push
call
sbb
cmc
aad
sbb
fidivl
fistps
lods
lods
add
sub
daa
into
stos
out
push
mov
sarb
dec
add
xchg
mov
jl
pop
iret
js
notb
stos
mov
pop
adc
jo
sub
push
das
outsl
outsl
adc
rcr
in
hlt
scas
inc
cld
jp
aad
fldt
std
je
jne
scas
test
arpl
fwait
cwtl
mov
xchg
ret
cmc
insl
pop
mov
inc
lods
orb
fs
xor
mov
in
mov
adc
and
and
jnp
dec
sbb
in
and
sub
pop
pop
in
icebp
jb
inc
das
fisubrl
cmc
inc
push
xchg
sti
jmp
jle
lcall
addr16
sahf
test
pop
out
pop
pop
or
lahf
jle
cmp
stos
push
aaa
lcall
mov
dec
add
stc
mov
idivl
adc
addr16
out
shll
stos
pop
cmp
fcomi
pop
test
fsubl
mov
xor
lea
and
into
iret
hlt
jle
mov
ja
lods
push
nop
sbb
mov
faddl
push
ja
mov
test
outsl
jne
push
mov
ljmp
or
jmp
push
cmp
pop
adc
ret
dec
cld
push
jns
xchg
imul
mov
jae
mov
scas
adc
cld
push
divl
mov
and
inc
jecxz
in
jp
sub
lahf
arpl
out
scas
and
push
push
into
mov
je
mov
nop
add
and
bndstx
pop
shrb
push
iret
fiaddl
test
bound
sub
imul
sbb
xchg
cmp
sbb
in
fld
inc
in
push
and
test
lret
and
mov
les
fidivs
iret
jle
adc
add
pop
sbb
rclb
fwait
leave
add
in
sbb
inc
in
add
lods
push
sti
xchg
ficompl
pusha
popf
cmpsb
insl
mov
aas
popf
daa
lcall
aad
gs
sub
insl
cwtl
pop
popa
mov
ret
sahf
push
lds
add
cld
mov
mul
xor
add
mov
test
fwait
ror
xchg
xchg
das
or
sub
push
out
inc
movsl
mov
mov
movsl
pusha
insb
fidivrl
incl
stos
out
cs
or
mov
or
mov
push
sbb
ja
mov
shll
xchg
test
inc
shrb
push
inc
insl
lret
call
nop
lret
mov
cmp
pop
cmp
mov
iret
js
xor
dec
mov
out
push
mov
mov
add
mov
je
xor
iret
fs
xchg
rorb
xor
xchg
hlt
xlat
dec
add
or
mov
into
loope
sub
dec
xchg
cs
inc
pop
out
sbb
aas
xor
sub
push
incb
cmp
inc
mov
mov
or
fcoms
mov
lds
fsub
popf
cwtl
in
into
adc
and
or
or
insb
arpl
sbb
mov
jg
into
out
sub
adc
aaa
pop
ret
imul
pusha
xor
out
cmp
je
mov
jo
cmp
lea
push
in
test
test
loopne
out
adc
and
fwait
in
xchg
xchg
cltd
mov
or
xlat
sbb
inc
ret
nop
inc
int3
out
mov
inc
lret
lcall
or
inc
mov
call
cmpsl
push
ja
inc
mov
adc
mov
pop
ficoml
jge
cmc
jbe
xor
insl
sarb
jge
jp
pop
sub
jno
dec
cld
sub
mov
xchg
sbb
xchg
adc
faddp
xchg
push
fldenv
mov
xlat
add
cltd
cs
xchg
xor
and
mov
sub
push
or
cld
mov
xor
cli
in
pop
outsl
lds
je
or
cli
aad
xor
mov
pop
ds
fiadds
addr16
dec
cmp
les
stos
and
fdivr
adc
das
cs
mov
in
dec
push
aas
pop
xchg
pop
sub
mov
and
pop
jno
inc
cmp
mov
mov
rorl
cmp
addr16
ret
into
cli
ds
daa
movsb
add
rcll
fs
xor
std
xor
adc
push
and
popf
xchg
dec
daa
dec
stos
pop
sub
inc
jnp
repnz
or
fists
rorl
and
cmp
cwtl
cmp
lea
push
addr16
sbb
pop
out
imul
jb
mov
sub
jecxz
outsl
lea
out
rcrb
mov
lds
clc
mov
lods
iret
call
fcomps
and
test
push
pop
cmp
stc
cmp
in
mov
imul
push
ror
ret
push
mov
sub
imul
sub
aam
sbb
jb
ljmp
or
lods
movsl
cltd
xsha256
cmpsb
aad
ds
cmp
and
lods
jne
xor
mov
fisttpl
mov
mov
ret
negl
inc
test
xor
mov
mov
jno
push
lret
inc
jp
and
and
jp
sbb
leave
lods
push
push
xor
xor
and
sub
addr16
fcmovu
sbb
sub
je
mov
jb
push
push
adc
sbb
mov
fldpi
aad
push
lds
add
push
and
repnz
xor
mov
and
cli
mov
movsb
or
adc
lret
icebp
xchg
sahf
mov
inc
icebp
clc
ds
aaa
cwtl
test
inc
cmp
fdivs
loop
adcl
mov
mov
jmp
lahf
sub
je
and
sbb
aam
frstpm(287
mov
lret
loop
push
cs
pop
frstor
pop
pop
dec
in
inc
inc
cmc
out
call
pushf
dec
repz
ljmp
in
sarl
jae
cmp
in
dec
inc
inc
test
sbb
loop
xor
enter
push
pop
adc
and
sahf
ret
xchg
fcompl
mov
hlt
fdivl
rcrl
aam
xor
or
sub
push
bound
push
inc
fisubl
xor
das
xchg
push
loopne
call
or
mov
lahf
inc
jge
ljmp
mov
xchg
sbb
aam
sbb
ss
cs
movsb
jp
gs
cli
pushw
add
mov
pusha
outsl
pusha
and
lret
or
cli
push
mov
xchg
jae
pop
mov
jp
xor
mov
aaa
bnd
mov
xchg
mov
loope
addr16
sub
bound
pop
pop
sub
ficomps
pushf
or
in
popa
arpl
lcall
xchg
lret
lcall
push
cmp
loopne
outsl
sub
jnp
cmp
or
sahf
lods
imulb
and
jmp
insb
in
xchg
jo
fmull
mov
cmp
hlt
adc
test
or
sbb
shll
mov
xlat
xchg
mov
inc
jg
stos
pop
inc
xchg
sbb
mov
xlat
jns
mov
xchg
aas
add
push
jle
in
adc
sbb
loop
addl
aam
pop
sbb
imul
outsb
pop
adc
gs
mov
xchg
cmp
mov
insb
mov
gs
into
loopne
cs
icebp
cmp
inc
movsl
nop
movsb
insb
mov
pushl
xor
aad
ss
lods
mov
lock
xchg
pop
aam
mov
push
orb
lock
inc
clc
ds
mov
nop
jns
ljmp
or
test
push
mov
push
lret
jae
cmp
test
pop
insl
fisubrl
enter
dec
ficomps
pop
aas
dec
mov
pop
or
jno
pop
adc
push
pop
mov
pop
mov
shl
push
adc
lret
sub
push
and
and
push
cld
fs
rorl
dec
gs
in
jl
cmp
inc
in
sub
insb
in
testl
jecxz
push
cltd
and
test
add
cmpsb
cmp
popf
in
test
andb
or
je
sub
sbb
or
and
in
mov
ss
or
mov
mov
outsb
xchg
mov
jmp
hlt
fs
sbb
icebp
ret
nop
jns
dec
cmp
mov
xchg
ret
jnp
push
testl
shrl
cmp
in
xorl
xor
lret
sub
cmc
rol
dec
push
lods
pop
push
mov
xchg
add
es
ja
outsb
add
int3
inc
iret
jne
jbe
and
jl
inc
jle
out
xor
shrb
dec
frstor
fnsave
andl
or
xchg
test
test
adc
jmp
lret
jmp
mov
repz
cmp
xchg
jmp
pop
ljmp
sbb
fiaddl
jb
xor
push
mov
lds
dec
pop
add
mov
xor
aaa
addr16
and
and
xor
xchg
cmp
cmpsb
or
or
mov
xchg
aam
jo
shl
xchg
sub
push
icebp
push
xchg
gs
fnstsw
push
and
jae,pn
lahf
adc
xor
cltd
mov
cmp
imul
mov
jg
cmp
nop
outsl
shlb
cmp
inc
add
mov
mov
mov
and
fmuls
xlat
sbb
dec
fs
enter
adc
stos
push
pop
dec
adc
lods
fst
mov
dec
cmp
sbb
je
cmp
or
faddp
and
adc
mov
sarb
lds
jecxz
push
aad
fwait
mov
jmp
jae
pop
inc
inc
cmp
enter
add
sub
push
push
sub
add
xchg
call
mov
aam
sub
push
jns
jg
jno
popf
cltd
scas
repz
push
sub
push
fdivs
cmpsb
mov
sbbl
int
pop
cmpsb
hlt
mov
stos
insl
imul
adc
imul
dec
or
cmp
insl
fnsave
test
mov
lcall
repnz
insb
or
dec
test
lret
mov
push
mov
rorl
mov
push
sub
pop
in
aaa
xchg
out
push
push
add
fldl
adcl
mov
add
sub
int3
mov
std
mov
add
in
loop
adc
cmc
cltd
and
popa
pop
idiv
sbb
fs
imul
scas
cli
pop
insl
loopne
ror
cmpsb
mov
and
into
test
xor
js,pt
scas
setl
adc
mov
dec
xor
and
mov
in
and
jns
addr16
or
xchg
mov
call
sti
adc
aaa
fldenv
pop
icebp
mov
movsl
cmc
xchg
jmp
insl
push
or
into
inc
into
lods
push
imul
cmp
ss
mov
shll
dec
inc
mov
sahf
mov
out
xchg
pop
jmp
nop
ljmp
es
jnp
pop
fmuls
stc
enter
movsb
aad
cmpsl
jbe
dec
clc
mov
mov
cltd
mulb
mov
ret
in
jnp
stc
xor
mov
aaa
pop
std
mov
push
jo
stos
popf
loope
rcll
fcomps
mov
mov
fisubs
shl
test
aaa
cmp
xchg
xor
xlat
lock
cwtl
pushf
add
jmp
lods
jge
ja
ret
xchg
aaa
xor
scas
fsub
or
mov
rclb
xchg
pop
xchg
lret
jns
int
add
adc
add
mov
out
xchg
mov
sbb
adc
mov
clc
inc
jnp
push
into
jl
cmp
push
fmul
in
push
jae
out
inc
jge
icebp
loop
jne
mulb
mov
add
sti
xor
ds
mov
mov
cmpsb
loope
or
jmp
dec
cmpl
pushl
ficompl
lock
sub
push
outsl
mov
mov
push
arpl
mov
in
insb
fwait
push
dec
cmp
pop
push
mov
fldenv
mov
add
inc
mov
adc
ss
pop
in
jne
dec
sbb
test
push
in
pusha
dec
fdivr
test
movsb
sbbb
js
pop
xor
dec
and
jno
stos
mov
mov
andb
sub
faddl
std
mov
xor
mov
fisubs
rcr
mov
mov
pop
mov
and
mov
and
outsl
mov
pop
lret
loop
out
scas
dec
lahf
dec
or
gs
rcrb
es
shrb
scas
icebp
mov
lods
or
push
jg
or
test
mov
dec
scas
adc
movsl
inc
and
jnp
push
or
jge
pop
fs
cmp
lcall
clc
aaa
js
out
jbe
and
mov
mov
xchg
cmp
or
stos
fwait
repnz
mov
sub
pop
imul
out
mov
popa
mov
mov
outsl
shrb
cmpsl
shlb
push
pop
adc
scas
sub
imul
ret
and
dec
jb
pop
dec
pop
repnz
pusha
cltd
stc
cld
push
and
xor
shlb
outsl
dec
int3
or
adc
loopne
out
sbb
sub
sti
mov
cmp
mov
mov
inc
aas
pop
add
fiadds
scas
aas
mov
add
les
test
jle
jno
sub
stos
dec
xor
fstp
dec
sub
xchg
aaa
loop
pop
out
rcll
clc
dec
add
pop
cmp
insb
push
and
loope
in
mov
or
insb
leave
call
cmpsl
sub
cltd
xchg
andb
and
sub
std
lods
sti
adc
cwtl
test
jmp
sub
jle
ds
sub
call
xchg
movsl
insb
fimull
es
add
ret
fucomi
push
ret
mov
mov
je
dec
shlb
repz
or
imul
lds
repnz
shr
and
xor
add
adc
bound
dec
inc
jp
push
lcall
loop
repnz
shr
and
xor
add
adc
bound
dec
inc
jp
push
lcall
jb
repnz
adc
and
xor
repnz
sub
bound
jp
push
lcall
loop
loop
ret
ljmp
adc
sar
mov
test
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
add
add
add
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
test
add
je
add
insb
add
add
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
push
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
push
add
cld
push
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
pop
add
pop
pop
add
push
pop
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fmull
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
or
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
or
add
or
add
or
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
