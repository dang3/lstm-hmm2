add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
add
mov
xchg
gs
lea
push
pop
or
add
add
push
add
add
add
add
add
add
add
add
clc
add
lret
add
add
add
add
add
push
add
add
add
test
aad
inc
add
sbb
sbb
pop
add
jns
inc
add
add
add
add
add
add
lret
add
push
add
add
add
hlt
add
add
xchg
add
or
add
jnp
aad
cmp
xchg
add
add
aad
add
add
dec
add
add
add
cmp
aad
cmp
xchg
add
jp
into
add
add
hlt
add
add
add
add
cmpsb
add
add
aad
sub
xchg
add
add
add
add
aad
add
xchg
add
add
add
fadds
aad
insl
add
add
push
add
in
xchg
add
add
sbb
mov
jns
push
add
add
jns
and
out
mov
pop
add
add
add
sub
add
add
add
add
add
test
stos
add
mov
add
testb
add
add
adc
roll
lret
add
add
imul
add
add
add
add
cmp
pop
add
add
add
add
add
sbb
inc
add
add
aad
add
jns
sub
mov
dec
add
add
add
add
ss
add
roll
add
add
push
add
add
add
add
movsb
add
add
add
clc
add
add
add
add
add
add
outsl
add
add
add
into
add
add
add
add
add
mov
adc
sbb
or
pop
add
into
add
add
add
add
add
add
and
or
sub
addl
add
add
sbb
aad
pop
add
mov
add
roll
out
add
add
add
addl
add
add
xchg
add
addl
mov
inc
add
add
cmp
pop
add
enter
popa
add
mov
add
int3
add
add
add
test
sbb
imul
add
popl
fwait
add
xor
add
pop
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
sub
sbb
lods
add
add
add
add
add
jp
mov
mov
popl
pop
add
add
lods
add
add
add
add
add
add
add
add
add
add
jp
popl
pop
add
stos
add
add
ss
add
xchg
add
add
add
repnz
add
add
xor
add
cmpsb
add
add
add
mov
adc
push
add
add
add
add
add
xchg
add
adc
add
jg
out
xor
add
add
out
adc
cmp
pop
add
mov
out
xor
aad
sub
xchg
add
data16
add
add
add
add
pop
add
add
or
pop
add
add
add
add
xchg
add
add
addl
add
add
add
lret
add
add
xor
out
cmpl
dec
mov
mov
lea
rclb
into
mov
dec
xor
xorb
iret
sbb
sbb
cmp
mov
jg
roll
jl
and
andb
arpl
inc
lret
cwtl
scas
fcomi
add
pop
mov
outsl
pop
inc
jo
out
js
fwait
xor
mov
out
int3
leave
test
out
rcr
xchg
shlb
mov
add
add
sub
or
cmc
call
ds
jl
adc
in
ret
out
mov
sub
jmp
popf
jle
and
mov
cmp
and
cli
add
mov
adc
pop
cmp
push
mov
lret
mov
or
out
ljmp
fwait
cmpsl
xchg
repnz
sub
push
jo
jmp
xchg
cmpsl
rol
mov
sub
jle
mov
in
addr16
add
add
test
fs
inc
inc
cltd
push
mov
aam
fs
out
hlt
into
sbb
fbld
push
shrb
xor
sbb
add
cmp
les
inc
fistl
movsl
dec
incl
lds
jns
lret
fsts
inc
jno
sbb
xor
insl
hlt
ds
shrb
adc
icebp
and
jp
sti
cmp
icebp
clc
jo
jle
jbe
push
pop
stos
insl
xor
faddp
jl
or
mov
and
stc
dec
sub
push
cmp
aam
inc
sbb
and
and
and
add
test
movsl
sbb
xchg
or
adc
mov
cmovno
mov
aaa
pop
jo
push
divl
shrl
mov
arpl
inc
xchg
ss
mov
lret
fdivrl
imul
mov
cltd
push
add
lods
test
mov
or
aad
cs
inc
add
fsubs
jae
das
mov
clc
cwtl
inc
mov
xor
fpatan
xchg
pusha
punpckhwd
lods
jnp
pop
in
orb
dec
xchg
inc
xlat
call
mov
fcom
fisttpll
xchg
popa
bound
inc
pop
push
xor
fwait
xchg
aas
int3
push
xchg
ds
jl
test
in
and
aam
sbb
inc
adcb
gs
out
loop
sbb
out
repz
scas
mov
idivb
jno
add
and
jns
faddl
push
cmpb
xchg
xor
mov
sbb
xor
lds
cmpsb
imul
lock
mov
mov
fcoml
lea
push
cmp
sbb
jg
add
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
add
xchg
and
and
into
add
mov
inc
rclb
popa
loop
adcw
mov
push
pop
jb
addb
xor
and
push
loop
bnd
adc
xchg
mov
ljmp
jmp
lret
inc
test
adc
pop
jmp
aam
in
notb
mov
add
jno
mov
imulb
out
or
andb
shrb
je
out
daa
dec
dec
and
pusha
or
xchg
push
mov
adc
push
inc
jp
mov
mov
sub
jp
mov
or
sbb
cmp
inc
es
int
inc
shrb
std
xchg
pop
jns
repnz
xor
in
xchg
jmp
push
adc
mov
adc
push
sbb
mov
inc
sub
mov
mov
mov
xchg
jns
fiadds
dec
inc
subl
and
sub
bound
aam
inc
xchg
xlat
aam
cmpb
fsubrs
imul
xchg
push
loop
lahf
sub
mov
addb
push
xlat
pop
mov
mov
adc
ja
push
rclb
scas
aaa
loop
daa
popf
in
rolb
lret
adc
sbb
jle
inc
icebp
popa
rclb
movsl
push
shll
jb
addb
adc
inc
rclb
popa
bnd
adcl
mov
rcll
loope
icebp
addb
adc
inc
rclb
popa
bnd
xorl
lcall
push
sub
push
or
rcl
test
dec
xor
clc
fsub
mov
out
xchg
and
jmp
test
mov
int
push
les
mov
ja
lea
pop
aas
mov
jns
in
dec
and
lret
mov
out
cmp
test
das
mov
jne
cmc
es
mov
push
lcallw
pop
jle
arpl
movsl
fdivl
mov
jns
jle
push
push
std
ret
mov
je
lods
popf
and
repnz
xchg
fstps
push
mov
icebp
hlt
addl
mov
gs
cli
test
mov
push
or
push
push
icebp
mov
int
cmpsl
sahf
retw
lea
stc
sub
aaa
and
test
cmpsl
iret
cmovp
call
xchg
pop
testb
loope
mov
mov
jp
test
in
inc
cs
loopne
cltd
icebp
dec
adc
sub
stc
lahf
jo
or
jg
xor
test
in
in
and
adc
das
adc
and
iret
push
int
fwait
cmp
popa
out
fdivs
sub
jl
into
stc
mov
push
adc
mov
loop
out
xchg
testb
aad
or
dec
int3
mov
or
pusha
scas
push
popa
mov
xchg
rcrl
test
mov
jecxz
movsl
xchg
xchg
xchg
mov
jae
mov
inc
es
mov
xor
and
insl
xor
mov
mov
shr
jecxz
dec
push
push
out
jae
mov
sbb
loop
sbb
test
lds
cmpl
loop
and
adc
sbb
repnz
lcall
ja
xor
lret
lahf
push
out
push
fsubrl
insb
dec
xor
or
fidivrs
notb
inc
xchg
test
lock
clc
cmpsb
xchg
mov
and
cld
cmp
mov
mov
arpl
scas
ret
add
xor
pop
sub
add
mov
mov
pusha
testl
lahf
mov
jbe
ds
mov
ljmp
mov
push
loop
loopne
cs
in
mov
mov
stc
rorl
std
repz
bound
fldpi
in
and
jnp
push
mov
jmp
sub
xlat
xchg
cmp
out
fcmovnu
push
scas
stos
cmp
cmpsl
inc
loopne
dec
popa
in
mov
lds
jo
inc
xchg
leave
hlt
addr16
xorb
and
nop
pop
cs
das
out
inc
inc
dec
mov
dec
ret
icebp
cmp
cmp
repz
fldl
mov
add
and
ja
xlat
xchg
test
dec
jle
aas
jo
in
outsb
inc
enter
inc
mov
mov
or
mov
fucomp
or
sub
mov
and
xchg
or
js
jge
cmp
lcall
cmp
in
fmuls
lock
xor
shll
mov
aas
lcall
mov
repnz
fisubs
add
in
xor
pop
jbe
dec
loopne
xchg
cli
mov
jo
adc
aad
pop
out
mov
iret
or
dec
imul
sbb
rol
int3
jmp
dec
out
stos
data16
shll
sbb
xchg
movsl
loope
lods
mov
jmp
jno
sub
cmp
mov
loope
cwtl
movsl
int3
adcl
rorb
xchg
and
cmp
or
or
popa
ret
mov
sti
xchg
push
mov
scas
mov
mov
push
push
mov
pop
mov
dec
leave
rcl
leave
xor
dec
arpl
inc
int3
ret
popa
popa
cmpsl
aam
daa
or
pop
dec
mov
mov
jnp
loope
cwtl
sbb
cmp
pop
add
mov
cs
fmuls
pushf
gs
mov
and
mov
rorl
adc
mov
lret
fsubrs
xchg
pop
xchg
push
sbb
dec
stos
xchg
ja
and
call
das
xor
sbb
jl
lret
xchg
je
pop
sub
xlat
mov
jnp
jmp
imul
rcll
rcr
sti
and
mov
repnz
mov
pop
pop
push
xchg
pop
jecxz
xchg
sbb
mov
in
ret
movq
fidivl
sbb
push
in
mov
and
sub
shrb
xor
mov
sub
je
jns
fsubrl
add
xor
addl
icebp
out
cmp
test
outsl
dec
insl
mov
cmc
pop
mov
push
xlat
adc
aam
xchg
mov
xor
dec
ljmp
test
into
push
lret
scas
pop
xor
dec
call
dec
fcmovbe
cmp
push
cwtl
dec
jno
sub
and
test
or
lea
dec
loope
pop
lds
scas
mov
movsb
xor
popf
pop
xchg
stos
xlat
adc
loopne
int3
or
clc
jle
popf
inc
push
int3
in
cld
push
cltd
fcoms
xor
xor
ret
and
mov
gs
or
dec
mov
cmpsl
dec
dec
push
bound
mov
jnp
add
pop
dec
icebp
and
dec
es
imull
sbb
imul
into
push
jo
xor
stos
out
nop
sub
lret
inc
cmp
jae
or
arpl
mov
std
orb
xlat
xor
aad
test
inc
xor
and
mov
mov
shlb
pop
dec
xor
mov
call
xchg
pop
jb
les
loope
mov
ja
mov
leave
mov
push
mov
inc
fstl
jg
push
clc
adc
pop
xchg
ja
or
xor
js
mov
push
test
mov
jecxz
mov
imul
in
movsl
pop
leave
gs
mov
push
push
pop
jnp
xchg
mov
push
call
xor
mov
mulb
test
push
test
push
xchg
cwtl
iret
mov
es
js
sti
sbbb
cli
sub
arpl
leave
and
popf
fst
jg
push
icebp
cmp
jnp
test
or
dec
mov
inc
and
push
movsl
push
mov
pop
cmp
fmul
dec
lock
push
or
mov
cmp
sbbb
xchg
mov
adc
mov
fldt
shrb
pop
stos
jmp
repz
push
jne
mov
icebp
loop
fstps
dec
addl
mov
jl
sub
es
xchg
or
pop
mov
xchg
lret
and
xlat
push
xlat
data16
movsl
aas
jg
lret
push
mov
incb
filds
iret
and
iret
push
ljmp
cmpsb
lret
adcl
jae
pop
ljmpw
inc
jmp
pop
jle
stos
aad
add
fbld
sbb
jb
cltd
sahf
loopne
loopne
adc
lds
rorb
out
or
push
dec
adc
sub
in
aas
adc
repnz
sbb
pop
lcall
int3
dec
in
mov
mov
adc
lea
bound
imul
cld
setae
call
fidivrl
arpl
out
les
mov
outsl
stos
setb
in
and
lock
adc
ret
jb
xor
rolb
and
cltd
sbb
sub
scas
punpckhwd
pop
jecxz
lret
in
pop
leave
stos
jg
arpl
add
push
jmp
fmuls
outsb
scas
cmp
fs
mov
bound
jge
ds
mov
jno
inc
jb
jnp
aas
pop
add
aad
or
pop
subb
addr16
lret
mov
push
xchg
adcl
cmp
or
mov
pop
inc
pop
pop
jo
cmc
pop
scas
stos
and
dec
inc
rorb
imul
cmp
jns
aad
mov
mov
ds
dec
ret
and
mov
sub
ror
loop
xchg
sub
divl
stc
lods
cli
mov
push
sarl
fcomp
repnz
test
jle
push
insb
push
sub
mov
decb
and
rolb
test
das
loopne
adc
pushl
inc
push
add
test
mov
subb
and
imul
push
mov
inc
and
cs
pop
test
cmpb
loope
cltd
sbb
pop
sahf
jns
push
fwait
mov
jmp
push
std
enter
mov
mov
in
sub
or
gs
pop
jo
dec
inc
test
pop
js
fcomps
test
mov
inc
repz
mov
pushf
mov
sub
mov
jge
sbb
mov
pop
jo
outsb
in
cmpb
add
mov
loop
fcmovb
aad
xchg
mov
cwtl
mov
fs
bound
push
sbb
adc
mov
clc
pop
dec
cld
mov
dec
nop
repz
movsb
out
pusha
lock
lods
add
or
pushf
movsl
popa
loop
jmp
cwtl
clc
rorb
push
aaa
int
jg
mov
sbb
or
dec
mov
cmpsb
pop
aam
dec
cmpl
sub
pop
inc
in
mov
test
lods
popa
imull
push
ret
pop
mov
aam
test
dec
aas
cmc
add
push
jg
jecxz
pop
or
imul
lcall
inc
movsl
and
and
sbb
jg
shr
stc
lahf
push
outsb
push
or
dec
js
pop
sub
xchg
pop
aas
dec
movsl
test
or
sarb
ret
inc
aad
pop
call
xchg
fcoml
mov
xchg
rolb
aam
sbb
mov
push
mov
inc
mov
subb
incl
mov
data16
ficompl
pop
xchg
into
add
or
pop
nop
jp
xor
inc
std
cmc
dec
insl
mov
lods
roll
scas
dec
dec
or
adc
xchg
xor
add
adc
inc
mov
sbb
pop
fmulp
dec
jge
dec
loop
and
aam
or
mov
adc
inc
divb
cmp
and
fnsave
or
movsl
sub
jg
push
notb
clc
outsb
or
sbb
push
xchg
ror
shrb
mov
cwtl
inc
clc
xchg
daa
cmpsl
fsub
inc
or
cmp
loope
jns
andl
aad
add
push
outsb
loop
fdivr
dec
loop
outsb
test
or
or
cmp
mov
and
mov
lret
out
xor
movsl
or
ret
xchg
add
jle
mov
ljmp
xchg
mov
cmpsl
lret
leave
lea
ljmp
enter
jp
pop
jp
jmp
sbb
js
sarl
mov
inc
jbe
jecxz
push
mov
inc
mov
xchg
data16
push
popa
adc
and
in
jns
sub
jg
scas
pop
aam
xlat
cs
fnstcw
xchg
test
inc
or
arpl
divb
xchg
mov
fdivrl
inc
dec
lods
mov
cmpsl
push
inc
in
ljmp
pushf
in
lock
inc
fsts
out
push
rolb
out
les
nop
out
mov
inc
dec
mov
cmpsb
ss
or
test
mov
jbe
push
xlat
jo
lret
in
cmp
and
fildll
push
sub
or
imul
sub
inc
lret
je
or
jne
dec
mov
inc
fbstp
pushf
jmp
outsb
xchg
mov
ja
fmull
jecxz
daa
jmp
dec
ret
sub
insl
icebp
vpbroadcastmb2q
addb
mov
xor
out
xor
and
mov
pusha
xor
lds
aad
pop
xchg
xor
aam
mov
cmpsb
add
popa
out
and
fimull
mov
add
mov
push
cmpsl
sarb
loopne
ljmp
mov
in
stos
xchg
lret
repnz
dec
dec
lahf
sub
push
lock
call
subb
idivb
pop
movsb
inc
mov
push
push
add
mov
cli
sarb
call
and
addb
xor
rolb
jmp
insl
cmp
fsubrs
idivb
cmp
rolb
pushf
mov
mov
iret
insl
call
jo
divl
lret
jmp
mov
adc
rorl
cld
push
call
xor
lds
dec
in
rcll
lds
rcl
sub
ret
pop
jnp
and
add
cld
jbe
pop
lea
std
test
and
decl
test
enter
fwait
outsb
sub
loopne
testl
imul
dec
insl
xchg
xchg
and
xlat
add
jno
dec
addb
nop
push
aad
lods
iret
sbb
jno
mov
popl
mov
popf
shl
fistpll
cmp
xchg
add
xlat
mov
lahf
push
push
dec
push
outsl
notb
fwait
imul
nop
jbe
fidivl
or
out
test
dec
mov
stc
lds
jecxz
or
or
pop
xchg
cmc
test
and
sub
xchg
loopne
rcrb
lahf
pop
test
inc
inc
mov
test
fwait
je
sub
icebp
pop
jb
test
aaa
pop
jmp
lret
or
xor
lods
mov
mov
int3
dec
mov
cmpsl
lea
repnz
sbb
adc
in
xor
sarb
adc
popf
sbb
cmpsl
lea
sub
icebp
push
dec
das
mov
xlat
pop
mov
sub
out
daa
sbb
xor
dec
movsb
jne
xor
mov
pop
jl
scas
xchg
lcall
pop
out
ja
cmpsb
mov
push
dec
subb
test
lock
mov
movsl
sbb
vshufps
sbb
or
xlat
or
cwtl
andl
outsl
in
mov
sub
fmuls
mov
addr16
xlat
cmp
pop
in
rclb
in
inc
stos
test
popf
lret
cld
fildl
xchg
inc
pop
fwait
sbb
rcll
xor
cmpsb
imul
insl
in
dec
or
xchg
nop
add
fdivr
insb
add
xchg
sub
int
mov
out
rclb
mov
mov
xchg
push
outsl
push
adc
orb
mov
mov
js
push
rcrl
pop
pop
push
push
xchg
xchg
push
das
jb
mov
addb
aad
lret
repnz
adc
insl
mov
mov
ret
out
jmp
push
out
das
das
popf
jmp
mov
cli
pop
jle
outsl
in
mov
aam
aam
adc
jno
insb
xchg
pop
mov
sub
insb
sbb
inc
lret
movb
mov
pop
int
mov
insb
jo
dec
aad
shlb
movsl
aaa
rolb
inc
xor
repnz
add
aaa
rclb
mov
mov
push
cltd
fcoml
mov
dec
or
mov
repnz
jne
mov
jno
add
mov
mov
xchg
in
bound
in
dec
and
mov
das
push
stc
sbb
int3
test
or
scas
xchg
pop
lret
pop
xabort
fldt
ja
adc
inc
and
ret
mov
cmp
andl
es
inc
mov
and
clc
xchg
lret
and
sub
in
xchg
out
loope
lods
in
fisubl
mov
leave
xchg
mov
lds
movsl
insb
push
loop
fcoms
xor
dec
nop
dec
sub
rcr
out
dec
call
repz
sbb
mov
in
mov
jecxz
addl
mov
pop
jo
cmp
inc
leave
xor
sub
fimuls
dec
push
repz
adc
nop
andb
lea
sub
mov
fiadds
mov
push
enter
arpl
iret
jnp
call
add
push
test
aad
push
aam
mov
stos
sbb
xchg
dec
add
pop
in
xchg
jmp
in
jo
inc
aaa
pop
mov
mov
cmpsb
lahf
fistpl
dec
pop
out
inc
out
mov
xchg
or
push
push
mov
fsubr
sbb
inc
push
mov
or
stos
in
jecxz
push
lods
dec
mov
aas
xor
cli
jle
imul
mov
fsubrs
ret
js
ljmp
rorl
or
cli
or
das
jbe
jns
arpl
add
push
mov
inc
mov
sub
add
pushf
in
mov
movsb
imul
sahf
aad
lret
jg
data16
imul
orl
std
stc
movsb
adc
and
in
sbb
mov
dec
fsubrl
add
adc
adc
mov
push
xor
jnp
pop
mov
jno
push
mov
div
jbe
cli
push
adc
mov
in
xor
popf
or
ret
pop
xchg
cmp
jae
jmp
push
xchg
inc
mov
fmul
aam
pop
popf
dec
add
cmp
fisubrl
popf
xlat
mov
int3
mov
add
into
std
mov
adc
fildl
stc
push
pushl
mov
cs
scas
fwait
mov
cmp
adc
pcmpgtw
adc
pop
repnz
lock
andl
xor
outsb
mov
push
inc
inc
movsb
stc
std
mov
lds
dec
sarb
add
orl
inc
rcrb
sub
or
mov
jne
loopne
sti
lods
leave
xchg
push
ja
cld
call
out
out
sbb
bound
hlt
sub
jne
inc
ret
je
mov
xchg
out
adc
jbe
in
test
stos
rorl
ss
mov
movsb
sub
loopne
xor
shlb
nop
sti
push
cmp
test
cltd
push
inc
xchg
inc
pop
adc
mov
aad
mov
ret
out
ds
jl
mov
gs
divb
mov
in
addr16
add
loopne
lahf
jecxz
fs
call
mov
xor
popa
gs
inc
ret
mov
and
test
and
mov
imul
addb
push
mov
dec
dec
and
and
fwait
insb
add
adc
gs
mov
and
or
outsl
scas
add
pusha
scas
jo
sbbb
inc
xchg
or
movsb
lods
cmc
mov
sahf
adc
push
xor
mov
dec
int
sahf
fsubrp
jns
scas
dec
cltd
or
movsl
mov
addr16
sub
push
and
and
mov
aaa
push
mov
pop
sbb
mov
adc
out
sbb
inc
mov
lods
add
and
mov
inc
sbb
sbb
mov
fadd
sbb
imul
pop
lahf
je
cmp
clc
add
popf
xchg
inc
sbb
es
ljmp
out
pop
lret
loopne
out
ja
int
lcall
sub
pop
fidivs
push
out
xchg
ficomps
stos
add
sbb
xchg
add
div
rcll
loopne
or
dec
mov
mov
sub
int
out
fmuls
cli
out
and
popa
inc
rcll
xchg
push
test
push
repz
jmp
or
nop
daa
testl
pop
xchg
cmp
push
mov
clc
sbb
gs
xchg
mov
mov
ret
stos
sbb
movsl
jg
stos
fistps
imul
pop
pushf
jnp
fsubp
in
inc
add
jnp
sbb
lea
sub
dec
add
loope
test
mov
inc
nop
xchg
insl
or
jp
or
test
cmp
fucomi
fnstsw
dec
xchg
sahf
mov
jae
fwait
dec
clc
lods
mov
rorl
and
popa
scas
add
mov
fsubl
fistps
adc
fcomps
loopne
add
cmp
fs
cmp
ja
out
jl
inc
fdivrl
daa
decb
adc
mov
rcl
arpl
out
and
and
xlat
iret
and
mov
pcmpgtw
adc
push
mov
mov
ret
fdivr
fsubrs
fsubr
pop
shrl
outsb
dec
pop
std
cld
iret
push
mov
jns
or
ljmp
xchg
xchg
xchg
jo
jo
pop
jae
jl
loope
cmp
lea
das
inc
jb
pop
lea
mov
mov
repz
and
sbb
lods
mov
into
mov
scas
aam
fdivrl
call
mov
cmp
mov
add
out
and
insl
xchg
push
mov
shlb
mov
int
insb
nop
out
sbb
dec
out
ds
je
mov
xchg
gs
mov
rcll
loope
icebp
addb
adc
inc
rclb
popa
bnd
adcl
mov
rcll
loope
icebp
addb
adc
inc
rclb
popa
bnd
andl
mov
rcll
loope
icebp
sbb
adc
mov
ret
push
loop
sbb
orl
inc
roll
popa
repnz
cmp
mov
mov
pop
scas
sbb
lods
push
inc
arpl
arpl
xor
dec
jl
and
rcl
iret
jecxz
repnz
xchg
xchg
andl
push
inc
arpl
arpl
adc
add
xor
and
rcl
ret
jecxz
repz
lock
push
mov
dec
push
inc
arpl
jp
or
sbb
sub
cmp
xor
stc
popl
cld
in
in
mov
arpl
pop
call
sub
sbb
push
xor
repnz
mov
or
fadds
aas
sti
mov
fnstsw
push
sub
or
jl
xchg
hlt
mov
out
adc
pop
mov
add
push
xchg
jecxz
xor
sub
dec
mov
inc
add
or
push
and
push
ret
cmpsb
imul
dec
adcl
adc
jl
cmp
mov
pop
xor
jmp
pop
test
data16
jecxz
sti
insb
push
repz
pop
mov
jae
test
sub
loop
or
scas
xchg
shlb
xlat
sbb
fcomi
rol
push
mul
dec
xor
arpl
jns
adc
add
sub
cmp
lret
rcr
jecxz
repz
orl
movl
jb
bound
inc
popa
insl
inc
pop
xor
mov
mov
mov
into
sub
inc
push
add
add
xor
popa
dec
cmpsb
stos
andb
loope
in
iret
ffreep
adc
or
pop
push
dec
jg
add
xor
and
rcl
ret
jecxz
repz
xchg
xchg
andl
push
inc
arpl
arpl
adc
add
xor
and
rcl
ret
jecxz
repz
xchg
xchg
andl
jbe
push
pop
jo
cs
xor
jl
dec
int
jo
add
popf
mov
lock
insl
push
iret
ljmp
ljmp
fdivrs
lret
push
and
jno
mov
mov
test
subl
push
dec
test
sbb
outsb
adc
imul
jnp
jl
mov
pop
daa
lds
or
push
fidivrs
ss
stos
lret
pusha
mov
out
dec
outsl
cmpsb
sbb
ret
xlat
gs
aaa
push
ja
movsl
inc
int3
jo
push
cwtl
mov
mov
push
jl
call
test
sbb
jns
jle
out
pushf
dec
outsb
jne
ss
cmovle
mov
nop
aaa
and
jp
aad
arpl
pushf
js
outsb
das
sbb
jle,pt
stos
pusha
xor
jecxz
mov
roll
lea
fsubrs
or
ja
fs
pop
xlat
sbbl
lret
ja
inc
adc
jnp
push
in
jmp
pop
je
dec
arpl
push
dec
aaa
es
pushf
aas
js
addr16
cli
mov
out
pusha
jle
sarb
xor
add
jbe
repz
sbb
es
jb
subl
inc
and
loop
jecxz,pt
cmp
rorl
jo
fstpt
mov
push
daa
mov
add
jbe
iret
inc
mov
in
mov
dec
rolb
js
mov
daa
xorl
cltd
gs
pusha
mov
inc
shlb
je
or
cmpsl
call
mov
mov
pop
inc
xor
call
dec
jecxz
mov
xchg
mov
cmpl
outsb
xor
or
mov
mov
in
dec
repnz
and
sub
jmp
imul
div
movsb
scas
out
jb
jb
sahf
adc
mov
pop
mov
pusha
imulb
xchg
call
xchg
pop
cmpsl
mov
mov
out
jge
les
imul
cmc
stc
int3
incl
loopne
push
inc
adc
add
xchg
xor
mov
cmp
sub
xor
xchg
lahf
fsubrs
js
sahf
pop
repz
fcoms
adc
icebp
lcall
lahf
adc
adc
loop
in
add
mov
rolb
adc
ret
adc
mov
jbe
sbb
scas
pop
sub
or
or
pushf
push
mov
out
fstpl
cld
xchg
pop
inc
add
cmp
jno
ror
in
xlat
popa
ja
add
stos
fisubl
sbb
xorb
mov
lcall
adc
add
popf
or
rorb
lret
add
addr16
sub
pop
push
dec
mov
sarl
lret
mov
inc
repnz
adc
scas
sub
insl
mov
mov
sub
cmc
movsl
mov
xor
scas
add
jl
daa
into
cs
adcb
cltd
and
dec
dec
push
adc
test
add
mov
adc
xchg
lahf
adc
movb
xor
xor
cmp
sub
rcll
aad
insb
int
inc
loop
int
inc
mov
sbb
into
xchg
inc
adc
pop
dec
xchg
mov
testb
rcll
movsb
dec
jbe
popl
push
scas
iret
in
in
jp
xchg
inc
push
outsl
mov
mov
test
mov
xchg
jmp
add
jbe
in
mov
mov
mov
mov
rorl
ss
mov
lret
mov
repz
sub
mov
push
sub
lcall
add
out
or
mov
add
sbb
jmp
cmp
insl
ljmp
fldenv
jns
push
mov
bound
or
mov
xchg
mov
and
test
and
adc
cmpsb
sub
jbe
sarb
sbb
mov
cmpsl
sbb
add
nop
pop
out
or
movsl
mov
and
jb
push
outsb
ljmp
lcall
jp
insl
inc
repnz
out
dec
ljmp
push
mov
push
jb
pop
mov
xchg
jb
mov
jo
cmp
sub
mov
lcall
ficomps
mov
in
aam
std
pop
mov
mov
cmp
adc
popa
dec
xchg
push
mov
jns
rcr
test
pop
addr16
subb
test
popa
cmpb
mov
aam
jbe
clc
scas
icebp
push
adc
jns
int
mov
popf
adc
ret
xlat
out
mov
mov
pop
test
lods
mov
mov
flds
adc
mov
jb
repz
fs
stos
xor
in
outsb
dec
mov
lcall
xchg
cmp
or
dec
movsb
int3
arpl
stos
inc
mov
adc
jae
repz
cmpsl
jmp
outsb
jns
xchg
jbe
loopne
or
push
pop
add
fwait
adc
test
lea
push
imul
mov
jecxz
xor
sub
inc
stos
insl
inc
lods
sub
out
repz
add
mulb
xor
sub
mov
sub
push
push
mov
loope
push
sbb
sahf
in
addr16
cmpsl
or
mov
cld
mov
lret
xor
and
inc
fsubr
sahf
pop
cs
pop
outsl
jle
and
sub
stos
mov
int
mov
push
test
push
outsl
bound
push
mov
fadds
out
mov
or
xchg
je
repnz
negl
jmp
xchg
cmp
inc
dec
jg
or
leave
dec
add
ss
aaa
adc
xchg
lea
mov
ss
push
inc
in
and
rorl
mov
or
push
enter
js
xchg
and
scas
xor
pop
cltd
push
lods
inc
xor
xchg
ljmp
dec
movsb
sub
je
sub
adc
test
mov
test
dec
stc
mov
push
dec
sub
dec
sub
ds
sub
ret
cs
popa
mov
inc
lock
xchg
out
call
mov
movsl
lcall
sbb
cmp
xchg
inc
adc
andb
sbb
rcl
ljmp
sub
pop
rcl
xor
orb
loop
push
adc
xchg
mov
out
xor
dec
xchg
or
sbbl
and
pusha
arpl
arpl
arpl
daa
outsb
lods
cltd
xchg
std
xlat
inc
loopne
jbe
inc
outsb
lret
shr
pop
es
jae
add
xor
imulb
movsb
and
dec
bndldx
sbb
js
loope
dec
les
mov
and
cmp
fisttps
cmp
cmp
mov
cmpsb
mov
dec
cmp
add
mov
xor
jp
cmp
in
push
inc
mov
lahf
das
movsl
inc
std
inc
xchg
loope
es
sbbb
andb
insb
cmp
out
lock
fwait
test
adc
pop
test
jg
push
pop
cmpsl
pushf
ficoml
push
jbe
inc
cmp
into
and
imul
cmp
and
dec
in
mov
fs
jae
push
stc
addr16
rcrl
fdivrs
test
lods
sbbb
bnd
icebp
jbe
mov
cld
mov
cli
popf
test
xchg
and
aaa
out
jmp
xchg
movsl
gs
mov
scas
xor
mov
les
dec
sbb
pushf
pushf
push
call
ror
cmp
imul
push
xor
mov
cmpsl
mov
lods
stos
mov
add
stos
clc
into
cmp
flds
add
mov
jne
pop
mov
data16
fs
rcll
jge
loop
inc
jge
subl
sbb
mov
mov
ja
push
mov
mov
call
pop
fnstsw
das
add
aaa
mov
mov
pop
xor
push
jae
stos
decl
sub
outsl
hlt
add
ss
mov
leave
mov
mov
in
mov
mov
sahf
lret
xor
sub
mov
fs
add
mov
add
out
adc
pop
lock
leave
mov
add
adc
pcmpeqw
lods
sti
test
xchg
inc
cmp
dec
out
lds
push
outsb
xchg
mov
pop
lock
inc
leave
push
pusha
adc
inc
and
mov
out
jle
xor
xchg
or
or
xor
idivb
fwait
ljmp
and
inc
and
ja
cmc
pop
and
cmpsl
test
jmp
pop
test
aaa
jge
fsubr
pop
dec
jmp
adc
cli
stos
stos
add
lret
jecxz
scas
dec
lahf
push
scas
repnz
lea
test
or
cmp
in
cwtl
daa
add
es
and
icebp
pop
inc
pop
cmp
outsb
loop
mov
ret
cmc
push
lret
jne
sti
fcomip
out
jb
and
sbb
jmp
in
fisubrl
xchg
fiadds
call
dec
push
cltd
cld
cmpb
sbb
jne
pushf
roll
stc
xor
xor
adc
pop
add
xor
pop
lea
push
loope
or
out
mov
sub
or
mov
jge
loopne
out
popf
jno
jp
jmp
lcall
cltd
mov
jbe
adc
sub
pop
pop
ret
and
pop
xchg
gs
lret
mov
sbb
shrb
insb
aaa
cmp
lds
cmp
ficomps
jle
mov
xchg
xor
mov
cwtl
sbb
test
ds
inc
lcall
and
pop
test
addb
out
mov
lock
scas
rcr
mov
test
jl
sbb
fldenv
inc
stos
xor
movsl
push
outsl
call
int
lcall
dec
cmp
loope
pop
mov
adc
xchg
sub
movsb
in
nop
inc
dec
add
fwait
lods
xchg
ss
aam
or
lret
scas
sub
cmp
repnz
movsb
lret
or
sbb
xor
sbb
push
les
inc
xchg
jbe
xor
cmpl
lcall
mov
lret
bound
loop
push
or
xor
jecxz
jecxz
addr16
roll
sub
inc
testb
sub
stc
filds
loopne
nop
pop
jmp
pop
lods
xchg
aad
dec
push
lods
push
mov
adc
jo
fisttps
in
jnp
in
lods
addr16
pop
xchg
sub
in
adc
jmp
push
out
es
pushf
mov
ja
sub
mov
xor
mov
inc
dec
mov
jb
cmp
int
jp
jp
pop
or
xchg
aaa
jo
add
vpaddq
pop
jne
test
test
bound
mov
lock
inc
insb
loope
test
pop
push
aas
in
fwait
push
xor
adc
adc
nop
out
in
lahf
xor
pop
dec
xor
sarl
push
rcll
out
inc
mov
in
ret
pop
js
ficompl
mov
imul
lds
into
pop
outsl
xchg
push
push
fst
push
mov
and
mov
aaa
mov
push
cltd
out
mov
or
adc
mov
xor
add
xchg
add
mov
xchg
push
mov
loope
imul
and
cmp
push
jl
add
xchg
or
mov
adc
add
mov
mov
push
test
les
cmp
cwtl
or
pop
fildll
aas
leave
nop
add
mov
mov
lcall
or
or
sbb
movsb
pushf
sub
nop
mov
add
adc
jmp
push
lock
ja
loop
and
inc
stos
test
call
scas
pop
jl
dec
scas
shll
jno
inc
xchg
jo
push
jo
mov
mov
je
jg
or
jno
adc
or
push
mov
sub
mov
dec
sub
mov
mov
in
sub
push
adc
xchg
cmc
call
dec
and
add
cmc
mov
pop
stos
inc
test
cmp
test
mov
out
inc
cwtl
arpl
and
jns
cmpsl
xor
dec
push
push
cs
addr16
faddl
jo
cmp
dec
dec
sub
push
lret
xchg
push
fs
stos
sbb
out
and
xchg
dec
aaa
cli
pop
mov
test
push
push
inc
mov
call
mov
sbb
add
push
push
lahf
mov
jae
fistpl
mov
lods
mov
js
pop
or
dec
xchg
mov
aaa
mov
sub
or
lcall
scas
mov
or
loopne
push
sub
pop
js
mov
adc
aas
data16
adc
int
lahf
decl
outsb
cmp
and
cmp
pop
dec
dec
fsubrl
es
push
lcall
mov
dec
adc
and
cmp
dec
std
sub
sti
jns
jae
std
insb
add
push
lds
daa
bound
mov
mov
dec
rcll
mov
lods
mov
loopne
push
or
popl
cmpsl
loope
sub
out
repnz
lods
loope
movsl
popa
mov
sub
gs
jp
sbb
xor
xor
in
loope
xchg
or
sti
jmp
sub
gs
mov
pusha
clc
dec
rorl
sbb
shrb
lahf
or
jg
cs
jge
mov
cli
js
loop
mov
push
cmc
jmp
stos
ret
lcall
mov
filds
xchg
jle
inc
outsb
jno
mov
in
dec
sbb
imul
adc
and
dec
mov
cli
add
lret
dec
mov
mov
inc
push
cmp
in
aas
icebp
stc
xor
jle
mov
fdivs
xchg
cmc
mov
pop
xchg
adc
push
pop
popf
jmp
fwait
dec
mov
jae
mov
mov
lods
xchg
mov
mov
test
sbb
in
fisttps
clc
and
mov
jl
and
mov
and
into
mov
test
sahf
int
mov
jae
and
fdivr
dec
shr
xor
and
jmp
repz
dec
ds
push
push
fldenv
arpl
clc
mov
cli
iret
sbb
mov
cli
aam
fisttpl
lds
in
psubd
sub
mov
mov
adc
jle
ss
cmc
xlat
cltd
icebp
jl
push
lea
mov
cmp
lds
xor
pop
sbb
jno
adc
xchg
xor
std
xlat
pminub
aam
adc
mov
mov
dec
gs
mov
popa
mov
repnz
lods
lods
cmp
dec
cli
push
cmc
and
lods
jb
xchg
adc
sbb
jnp
ss
fwait
jbe
inc
cs
hlt
stos
xchg
cmpsb
lret
rclb
xor
or
adc
adc
xchg
testl
fnstsw
fcomps
scas
lods
or
inc
xor
push
ffree
push
xchg
test
loopne
fmul
leave
sbb
inc
dec
jp
adc
jmp
in
adc
stos
pop
arpl
jno
inc
dec
mov
shll
jns
lea
inc
xor
dec
jmp
adc
sete
or
add
adc
xor
xchg
push
into
dec
aaa
loop
mov
jl
mov
jae
mov
movsb
add
xchg
jecxz
pop
dec
shll
loopne
pop
mov
adc
xchg
jge
xchg
cmpsl
mov
push
mov
rcl
mov
sbb
andl
popa
mov
and
pop
dec
int
mov
and
inc
bound
mov
dec
test
dec
inc
in
xor
dec
nop
ja
cvtpi2ps
or
clc
xchg
jae
xlat
mov
popf
test
repz
shll
pop
xchg
sbb
push
std
mov
add
sbbl
je
mov
add
pop
cmpsl
aad
dec
popf
out
rolb
icebp
xchg
dec
rcll
and
cmp
add
xchg
fisttpll
jg
xor
hlt
jbe
xchg
fnstenv
bound
adc
jno
xorb
mov
ja
xchg
xchg
in
pop
adc
sahf
cmc
inc
gs
aaa
adc
ljmp
xor
gs
mov
pop
jle
xchg
mov
or
gs
sub
pop
push
add
sbb
cli
mov
add
sbb
jno
movsl
fcoml
cmpsl
cwtl
leave
xchg
loopne
mov
fcoms
es
test
or
mov
jmp
inc
cwtl
dec
fisubrs
cltd
lret
xorl
flds
repnz
dec
dec
sahf
push
divb
es
insb
mov
test
ret
jae
arpl
push
lret
rorb
out
xlat
mov
adc
pop
sub
jne
into
jle
pop
mov
arpl
adc
cmpsb
mov
shl
dec
push
aad
push
and
xchg
push
and
das
adcl
mov
or
in
imul
push
fwait
mov
insl
popf
or
jae
cs
mov
ffreep
add
js
mov
sub
fnstenv
mov
mov
cmp
push
or
je
and
mov
stos
je
dec
mov
sub
andb
mov
loop
push
shll
pop
push
xor
or
inc
mov
cmp
push
jmp
xchg
mov
rcll
push
jecxz
mov
jecxz
dec
mov
call
mov
orb
test
cli
movsb
outsl
ret
sub
pop
clc
or
push
pusha
pop
mov
dec
repnz
mov
int
popf
mov
sub
insl
xchg
sub
inc
test
push
icebp
mov
popa
sub
addr16
jmp
lds
fldt
bound
ror
sbb
stc
fmuls
imul
dec
xchg
push
inc
in
mov
out
pop
das
inc
xchg
inc
fstl
dec
or
xor
and
push
jg
ret
inc
sahf
ret
xor
cmp
stc
sbb
cmpsl
add
out
mov
frstor
sbb
aaa
leave
std
ljmp
or
cmp
jl
out
pop
mov
in
dec
mov
std
jmp
lods
dec
xchg
mov
nop
aaa
inc
inc
cmpl
shrb
scas
push
dec
les
ljmp
dec
push
out
mov
insl
cmp
ficompl
in
stc
hlt
ret
call
xchg
test
mov
mov
jbe
xor
mov
insl
pop
and
xor
in
mov
pop
adc
es
das
dec
jbe
test
add
xchg
ret
xchg
add
icebp
or
aam
mov
and
in
and
inc
in
shlb
out
push
ret
cmpsl
int3
dec
add
fsubs
test
ja
xchg
rol
sahf
fnstenvs
in
aam
dec
jo
or
xorb
and
mov
add
jmp
push
jnp
sbb
mov
fcompl
lds
daa
jae
nop
rorb
inc
fmuls
mov
mov
mov
inc
icebp
out
movsl
pop
fs
movsl
dec
cmp
adc
fistpl
lret
movsb
mov
subl
rorl
cmp
arpl
aam
mov
ds
nop
push
sbb
push
cmp
sbb
lcall
out
push
push
ds
ja
mov
iret
lret
inc
gs
int
sub
test
mov
cmpsl
fisubl
push
sub
sbbl
jnp
fwait
push
xor
data16
imul
mov
sbb
rcll
movzwl
test
repz
mov
mov
add
out
mov
pop
pushf
out
mov
popa
push
xchg
repz
jb
inc
inc
repnz
and
mov
push
push
xchg
push
jns
cmc
inc
xchg
scas
cs
sbb
pop
or
push
imul
dec
lods
cltd
xchg
mov
ljmp
ret
push
repnz
pop
mov
sub
sub
xor
mov
repnz
jl
xor
bound
xor
mov
or
in
add
cmpsb
dec
jg
test
lds
mov
push
rcl
push
pop
js
sub
scas
test
add
or
outsl
cmpsb
mov
aaa
divl
mov
bnd
mov
push
clc
addr16
jecxz
mov
out
pop
sbb
cmp
jb
add
inc
cs
push
cli
pushf
mov
sbb
fidivrs
imul
cmpsl
jno
jg
jnp
inc
jp
gs
xor
mov
imul
xlat
in
add
iret
push
in
ret
adc
ds
push
inc
bound
add
xor
and
rcl
ret
jecxz
repz
xchg
xchg
andl
push
inc
arpl
arpl
adc
add
xor
and
rcl
ret
jecxz
repz
xchg
xchg
andl
roll
jae
arpl
xor
ret
jecxz
repz
xchg
xchg
andl
push
inc
arpl
arpl
adc
add
xor
and
rcl
imul
jecxz
rorl
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
mov
pop
stc
xchg
xchg
gs
xor
and
adc
add
jo
pusha
xor
inc
pushf
mov
mov
pop
lock
sub
or
push
adc
add
jo
popa
mov
mov
mov
inc
lock
rolb
in
add
pusha
mov
test
adc
sub
les
rorl
jmp
std
cmp
dec
repz
or
std
push
jmp
mov
insb
pop
imulb
jge
lock
loopne
sub
sub
mov
lods
add
pushf
jmp
daa
int3
pusha
loop
jl
fs
lock
jg
add
aas
lahf
inc
mov
xor
and
jmp
rorl
adcl
sets
sub
js
cltd
rorb
and
lret
mov
jmp
jge
paddsb
dec
sub
dec
je
adc
add
scas
loopne
scas
filds
mov
jg
rorb
gs
loopne
push
xchg
test
pop
xchg
mov
jae
mov
pop
lock
cmp
or
add
adc
add
jo
pusha
movsb
push
xchg
inc
popf
aad
ret
push
sub
cmp
pusha
inc
jns
addl
enter
leave
and
movb
xor
js
cs
cwtl
inc
cltd
insl
test
add
call
sub
sbb
or
sbb
in
and
adc
add
jo
pusha
mov
mov
mov
pop
lock
cmp
or
sbb
in
and
adc
add
jo
pusha
mov
mov
shrl
lcall
cmpsl
xor
jle
sub
call
lock
lahf
jle
inc
icebp
dec
je
lahf
call
xlat
subl
lret
xchg
sbb
adc
inc
mov
das
in
push
lcall
rcll
or
bound
add
push
push
negl
mov
sub
sub
call
sbb
add
jecxz
out
xor
adc
push
dec
ss
mov
movsl
sub
jbe
sub
xor
mov
cwtl
and
mov
xchg
lahf
ds
jo
jle
mov
xchg
call
stos
jmp
lea
or
sti
add
fsubrl
cmpsb
shlb
sbb
stc
cmpsl
ja
rcll
stos
test
ret
and
in
imul
jmp
sbb
loopne
loopne
and
enter
adc
or
shrl
push
outsb
xchg
in
inc
nop
jle
adc
test
sub
mov
mov
add
shrb
das
fcoms
sahf
lock
aam
leave
rcrl
je
sbb
mov
push
ds
test
push
mov
jmp
inc
xchg
lods
cmp
xchg
in
sbb
in
push
into
cmp
adc
jecxz
sub
dec
and
and
sbb
mov
push
cwtl
mov
push
sub
ret
pop
inc
mov
adc
or
fistl
mov
sbb
xchg
frstor
pusha
call
push
push
and
sbb
adc
adc
xchg
adc
pop
pop
shrb
add
push
adc
or
cmp
bound
mov
add
inc
cmp
and
je
inc
jg
cmc
call
adc
push
or
xor
mov
leave
jl
jmp
iret
pop
aam
dec
jns
bnd
and
andl
iret
sub
xor
and
add
jle
mov
push
je
shrl
fwait
cmpsb
add
aaa
jl
sub
ffreep
movsb
jno
lds
cwtl
xlat
push
inc
pop
mov
cmpsl
sub
out
jb
adc
rorl
xchg
xchg
mov
sbb
sbb
ljmp
insb
push
mov
clc
aam
mov
pop
jo
arpl
outsl
and
xlat
jnp
cs
pop
dec
xchg
je,pt
or
mov
xor
test
sub
pop
xchg
popl
aaa
pop
jb
sub
mov
fdivs
mov
lret
call
lret
xchg
xchg
sbb
mov
xor
cmp
push
inc
std
scas
xchg
sbb
xor
inc
jg
add
jne
sub
pop
out
popa
ljmp
mov
lahf
cwtl
lock
sub
mov
fs
in
test
jge
cmc
jne
and
mov
sub
xor
jecxz
cmp
scas
ja
insl
or
mov
or
rorl
popa
mov
sub
rcl
sbb
add
jge
sub
mov
fistps
cmp
push
sbb
xorl
std
xchg
mov
ja
aam
lret
push
xchg
sahf
leave
jmp
cld
xchg
lret
stc
pop
lock
or
cmp
or
lods
push
pop
mov
out
idiv
dec
pop
aaa
ljmp
daa
pop
or
mov
out
pop
add
in
cmp
leave
add
shlb
mov
jle
mov
lock
js
fdivs
in
pop
lret
xchg
and
cmpsl
dec
divl
ret
rcrb
ret
adc
sbb
and
jle
add
and
pop
arpl
mov
aam
popf
test
xchg
lret
aam
stos
les
movsl
adc
xor
pop
sub
fsubrs
jle
push
aad
sbb
jae
lds
adc
mov
pop
push
xchg
ss
test
and
int3
inc
xor
inc
or
add
mov
fwait
and
iret
and
jns
adc
inc
dec
push
iret
sbb
and
ss
sbbb
jo
loop
lahf
adc
push
ret
cmp
cmc
push
fisttpll
jg
aad
jge
xchg
mov
add
les
mov
aas
stos
cld
cmpsb
mov
out
int
scas
test
je
mov
sbb
lds
jne
or
push
xor
aas
xor
lock
push
test
fidivs
iret
je
clc
jnp
mov
xchg
fwait
cmpsb
scas
push
popf
fwait
pusha
dec
push
push
insb
leave
fwait
pop
mov
jl
and
xchg
inc
aas
mov
out
jnp
adc
inc
rcll
rorl
jl
xchg
adc
cwtl
mov
test
inc
cmp
pushf
fidivl
fmulp
test
sub
or
mov
arpl
outsb
add
arpl
std
cwtl
mov
mov
dec
inc
cltd
scas
adc
sahf
adc
xor
pop
push
mov
repnz
inc
pop
pop
sub
lahf
jge
loop
stc
enter
pusha
mov
bnd
mov
xchg
insb
repnz
mov
mov
roll
int3
cld
loop
jle
fdivrs
pop
andl
pusha
aas
xchg
xor
or
icebp
dec
fcomp
hlt
pop
fdivrs
lahf
leave
mov
inc
push
aam
sub
inc
aad
pushf
push
ficoml
inc
push
out
cmp
xor
dec
or
pop
sbb
repz
dec
movsb
push
fsubs
ljmp
repz
and
ret
hlt
pop
mov
sbb
fdiv
je
loopne
idivb
inc
leave
add
js
push
jns
adcb
mov
pushf
pop
or
pop
pop
sub
iret
pusha
clc
fisubrs
shl
xor
sbb
mov
jbe
mov
mov
cltd
mov
sub
pop
mov
sub
push
dec
jecxz
xor
jo
repnz
and
sub
jg
mov
pop
test
sub
mov
xorb
ljmp
sub
xchg
adcb
sub
movsl
jp
add
jmp
and
inc
xchg
mov
sub
and
xchg
aam
stos
stos
pop
push
mov
ret
stc
cmp
or
pop
ljmp
shlb
mov
in
xchg
call
sti
std
mov
xlat
and
fwait
sbb
cmpsl
ss
jge
shlb
rcrb
scas
clc
stc
xor
jnp
mov
or
inc
push
mov
fidivrl
mov
cmpsl
mov
jbe
in
adc
insl
int
push
mov
adc
out
nop
scas
rcrl
xor
fisubl
mov
lock
iret
mov
shll
enter
or
das
pusha
inc
sarb
test
sahf
and
loop
aad
jns
sbb
or
mov
push
movsb
xchg
jle
lcall
pop
div
pop
std
in
dec
pushf
add
and
or
sbb
jg
test
sbb
les
cmp
dec
inc
ja
mov
jecxz
cld
add
cmp
push
or
test
push
test
sub
out
fsubrl
icebp
jo
pop
pop
sbb
out
sbb
gs
mov
pop
push
mov
lret
loop
lret
inc
sub
jmp
out
icebp
fidivrl
stos
pop
mov
jmp
in
jbe
mov
insb
sub
mov
mov
ret
jg
pusha
inc
loope
lret
lods
pusha
sub
icebp
mov
cmp
ror
lds
icebp
push
outsl
out
dec
xor
xchg
xor
and
por
enter
movsl
or
rorl
xlat
pushf
mov
popa
xor
xor
ret
loopne
jle
arpl
test
mov
sub
scas
testl
popf
mov
loop
icebp
or
pusha
xor
push
fidivs
arpl
mov
lret
push
fwait
sbb
leave
sub
shr
mov
out
stos
mov
imul
add
mov
sbb
add
cs
and
push
gs
scas
push
adc
daa
arpl
dec
sahf
pop
mov
lock
bound
or
and
mov
imul
xchg
inc
testl
or
cmp
inc
loope
out
add
into
sbb
fidivrs
or
push
fsubl
leave
jns
lahf
sbb
jnp
push
adc
dec
xchg
rcr
sarb
neg
dec
call
jge
aaa
sub
inc
add
push
inc
pop
movb
xor
inc
push
mov
dec
push
loop
add
mov
lods
mov
pop
xor
fwait
js
pop
dec
sub
iret
stc
mov
mov
push
lahf
pop
imul
ljmp
popf
push
cmp
jp
lea
out
and
sub
xchg
in
pusha
scas
cmpsl
pushf
loop
cmpsb
add
cltd
notl
pop
mov
call
or
sahf
mov
xchg
jle
pusha
imul
jle
mov
pop
movsl
dec
mov
fsubl
ret
dec
lds
out
call
sti
imull
inc
rorl
mov
push
mov
dec
pop
push
mov
ljmp
cmpsb
or
outsl
mov
cwtl
jne
out
sub
xchg
jne
int
leave
lret
sbb
cmp
ficoml
sbb
aad
loopne
aad
test
dec
sbb
inc
js
xchg
mov
nop
nop
test
mov
inc
xor
lea
or
outsb
xor
mov
rol
sbbb
push
push
testl
push
cmp
dec
mov
call
sahf
dec
gs
int
test
sbb
nop
shrb
mov
imul
adc
xor
push
and
add
adc
mov
pushf
jae
ret
sbbl
sbb
js
cmp
fcomps
add
xchg
and
adc
pop
adc
jp
or
sbb
testb
fwait
xor
and
cwtl
in
inc
shll
xor
imul
and
int
shlb
rorb
mov
mov
loopne
or
xlat
cmp
ret
adc
xchg
inc
adc
arpl
leave
inc
imul
scas
adc
xor
mov
cmp
and
adc
popa
xchg
stos
les
inc
shll
js
xchg
push
nop
dec
pop
or
roll
fucomi
cmpsl
gs
lds
mov
mov
out
fbstp
imul
push
mov
mov
in
repz
mov
jl
testl
lods
push
pop
fcoms
mov
data16
mov
xchg
xor
dec
dec
ret
pusha
jnp
scas
add
adc
fldt
mov
xor
iret
push
loopne
adcb
jecxz
popa
mov
xchg
test
outsl
sbb
jge
pop
inc
mov
aas
cmpsb
mov
sub
out
jnp
pusha
stos
xchg
insb
inc
jp
add
inc
loope
pop
imul
mov
sub
push
or
fwait
aad
mov
dec
loop
pop
mov
push
je
stc
dec
or
mov
xchg
dec
add
in
push
loop
adc
add
mov
xor
sub
push
in
in
rolb
sub
xor
jo
scas
dec
sahf
sbb
mov
cmpsb
sbb
cmp
test
pop
daa
insb
jmp
mov
push
ret
int
je
stc
adc
sbb
add
cld
dec
cmpsb
inc
cmc
iret
js
cld
test
xor
mov
pop
xchg
xor
mulb
xlat
and
inc
mov
sub
into
pusha
xchg
cwtl
adcl
repz
jns
lret
lret
pop
xchg
mov
sbb
push
adc
adc
sbb
add
mov
lock
clc
push
cmc
mov
aam
mov
repz
pop
icebp
out
loope
cmpsb
inc
nopl
lds
stc
test
in
mov
jp
mov
in
ficompl
pop
pusha
and
imul
xorb
jge
mov
jns
int
xorl
jg
stos
fbld
es
mov
insb
in
mov
adc
mov
inc
mov
aam
jnp
xchg
loopne
adc
jnp
adc
out
outsb
in
mov
insb
int
lret
pop
sahf
xor
push
xlat
xor
push
dec
jnp
loope
mov
mov
in
xchg
test
arpl
jnp
test
dec
pop
push
out
push
fs
inc
fld
insb
or
sbb
push
pop
dec
jbe
mov
adc
sub
add
fwait
pop
js
das
lret
out
mov
or
stos
and
sti
sub
fdivl
xor
sub
sbb
lods
into
ret
test
jnp
pop
call
pop
mov
mov
xor
lahf
mov
je
lret
and
adc
mov
rolb
iret
xor
sub
rolb
fsubp
outsb
xchg
fwait
adc
call
cmp
push
cmpsb
or
lcall
sahf
xlat
xor
jge
adc
mov
mov
test
repz
movsb
pop
scas
imulb
pop
push
cld
or
jge
mov
repnz
call
fucomp
xor
adc
into
dec
cmp
aad
scas
fisttpl
int
loop
mov
test
hlt
inc
rcrb
mov
xchg
adc
jmp
jo
push
std
inc
sbb
push
call
xchg
int3
mov
aaa
mov
ficompl
mov
out
xchg
je
lds
mov
ds
shlb
in
mul
dec
movsl
aam
jnp
pop
cmc
sbb
je
les
push
shrl
cmpsl
dec
or
fs
and
mov
xchg
push
imul
out
test
push
daa
aas
push
test
lahf
stos
rolb
das
or
xchg
lahf
mov
add
fildl
daa
clc
out
shr
cmp
sub
sub
push
pop
mov
jp
pushf
int3
popf
lods
ret
xor
mov
sbb
int3
cli
jge
or
hlt
daa
add
mov
jo
inc
in
lahf
push
sti
lea
xchg
adc
bound
cld
and
stos
and
xchg
dec
inc
pop
fists
lahf
dec
jne
sbb
popl
and
out
repz
cvtdq2ps
les
jo
inc
pop
jmp
fiadds
mov
pop
inc
pop
adc
daa
mov
hlt
andb
test
inc
in
mov
mov
mov
mov
or
fiaddl
mov
or
loopne
or
test
cmpsb
cs
mov
xor
mov
incb
ss
mov
shrl
xor
or
inc
or
shrb
in
lea
sub
pushl
bound
enter
clc
mov
xchg
popa
mov
xor
out
call
pop
or
movsb
mov
pop
cmc
or
mov
ds
sub
add
push
mov
les
fisttps
scas
adc
call
mov
cltd
add
clc
out
popa
fcom
mov
jge
xor
adc
test
insb
fdivl
clc
insb
lcall
ds
clc
sbb
mov
sub
push
ja
loope
add
ret
ljmp
mov
test
iret
or
push
pop
mov
push
jp
jno
cmp
xchg
jne
add
pop
int
or
cmp
push
arpl
mov
inc
repz
pop
fsubp
in
pushf
mov
subl
aas
inc
jle
jmp
and
sbb
jle
stos
nop
out
xchg
lods
rcr
cld
dec
mov
sub
pop
xchg
pop
cwtl
mov
movsb
scas
sbb
pushl
pop
push
push
jl
mov
rorl
mov
lods
sbb
popf
out
push
fiaddl
adc
sub
xchg
jge
xor
jnp
movsb
cli
inc
notl
xchg
xlat
scas
add
adc
xchg
repz
scas
in
mov
loope
cmp
sbb
stos
xor
adc
stc
pop
mov
xor
insb
enter
push
dec
loopne
and
inc
jle
mov
shld
jnp
fisttpll
repz
lret
push
push
out
pop
and
mov
mov
jmp
int3
sbb
add
mov
stos
xor
mov
ret
fsubl
inc
inc
cmp
in
pushf
mov
cmp
insb
mov
add
fs
or
arpl
cs
out
mov
and
dec
les
imul
push
adc
push
mov
scas
fisubs
mov
loop
imul
and
inc
pop
mov
ror
fnstenv
inc
aas
xchg
clc
ljmp
test
pop
add
ret
dec
xor
pop
dec
mov
std
nop
bound
in
repnz
flds
das
pop
lret
cmp
leave
mov
je
ret
add
mov
dec
fwait
ljmp
in
fildll
jno
sub
cwtl
test
adc
popa
xchg
push
int3
into
fcomip
dec
stos
push
push
pop
push
xchg
xchg
adc
negb
inc
jmp
mov
xchg
sbb
cmp
inc
mov
sub
fcmovnu
mov
sbb
sbb
adc
add
jecxz
push
mov
dec
inc
movsb
scas
xchg
pop
xor
pop
adc
or
loope
cmp
mov
jae
adc
jbe
xchg
dec
push
enterw
movsl
sti
inc
andl
shlb
bound
loopne
outsl
fisubrs
cmp
scas
add
inc
inc
cmp
fwait
lret
std
dec
adc
mov
aam
dec
std
out
popf
pop
je
jp
pop
xchg
fwait
add
movlps
icebp
jno,pn
or
push
adc
push
das
mov
bnd
cmc
inc
repnz
in
inc
frstor
mov
xchg
dec
push
enter
push
sub
push
xorb
movsb
dec
test
sub
push
loopne
lock
lret
sub
jbe
mov
out
in
cmc
jae
sub
bound
in
idivl
mov
add
ljmp
mov
jns
and
xchg
rorl
lods
push
adc
inc
xor
data16
test
mov
mov
lret
loopne
adc
fisubrl
mov
sahf
xchg
mov
push
shrb
and
pop
mov
add
dec
popa
cli
or
stc
or
mov
in
cld
test
sbb
xor
jle
pop
imul
clc
mov
ja
xor
sub
adc
sahf
and
adc
mov
xchg
iret
xchg
mov
sub
mov
divb
xlat
scas
sahf
add
lea
inc
mov
jp
in
inc
pop
inc
cmpsl
jb
testl
out
mov
xor
fsubrl
iret
push
dec
and
cmp
xchg
pop
or
inc
xchg
dec
add
aad
fimuls
jnp
pop
xchg
mov
ja
jnp
cwtl
inc
hlt
or
push
mov
jp
repz
mov
dec
in
loopne
or
cwtl
jne
mov
fcomps
call
add
lds
pop
mov
or
leave
scas
inc
xchg
subb
cmp
movl
les
ror
cmc
imul
inc
mov
insb
bound
adc
adc
pmaddwd
sub
or
jmp
loopne
in
ror
add
ret
lcall
mov
xchg
inc
mov
mov
mov
fiaddl
int3
in
insb
mov
out
pop
dec
push
jnp
aaa
lahf
push
out
push
mov
ss
aad
stc
mov
adc
mov
sub
push
add
outsl
sub
xor
mov
xlat
adc
xor
std
out
inc
sub
jecxz
cmp
xchg
mov
subl
xlat
push
loop
fs
mov
rcll
cmp
mov
adc
jle
pop
fwait
pusha
xchg
clc
and
mov
xor
lret
sbb
inc
and
pop
bound
sbbb
out
movsl
addr16
cmp
sbb
xor
and
jmp
out
test
loope
mov
arpl
pop
outsl
adc
mov
mov
add
enter
pop
adc
pop
out
and
dec
je
push
cmc
push
add
mov
inc
inc
push
mov
xlat
lea
inc
push
test
pop
pop
mov
lea
xchg
arpl
je
mov
dec
insl
mov
adc
jmp
xor
gs
adc
repnz
mov
jmp
pop
ljmp
xor
sbb
scas
dec
sbbb
cmp
or
sbb
in
and
adc
add
jo
pusha
mov
mov
mov
pop
lock
cmp
or
sbb
in
and
adc
add
jo
pusha
mov
mov
mov
pop
lock
cmp
or
sbb
in
and
adc
add
jo
pusha
mov
mov
mov
pop
lock
cmp
or
fmul
in
fists
int3
add
test
mov
sbb
and
jns
mov
cltd
or
js
dec
jmp
mov
cmp
dec
clc
pop
enter
sub
sbb
dec
stos
pop
stc
test
mov
cmp
dec
clc
pop
enter
sub
cmp
add
stc
loope
mov
push
inc
mov
jge
pop
loop
sar
cmp
push
push
cmp
pop
add
jge
adc
cmpsb
ret
outsl
cs
popa
push
test
insl
xor
push
push
xor
inc
ficoms
push
mov
jmp
xchg
sub
imull
inc
enter
sub
sbb
lcall
call
xchg
push
sub
test
jmp
dec
push
pop
je
jmp
mov
dec
leave
jl
cli
cmp
into
sbb
jns
fnstcw
test
dec
je
lahf
and
dec
js
adc
aam
sbb
cltd
js
push
cltd
lock
jns
dec
std
xor
testb
sbb
dec
clc
pop
enter
sub
sbb
dec
jmp
rcrl
in
inc
std
push
test
cltd
sub
cmp
imul
decl
jmp
mov
fsubrs
std
dec
scas
add
dec
icebp
cmp
dec
enter
stos
sub
cmp
dec
loope
cltd
pop
call
imul
cltd
or
js
dec
jmp
mov
cmp
dec
clc
pop
enter
sub
sbb
dec
jmp
sbb
jle
test
imull
movsl
push
fcoms
inc
fisttps
sbb
push
dec
and
enter
pop
dec
sti
bound
lahf
mov
or
js
xlat
jns
xor
xchg
xchg
jp
and
ja
repz
add
adc
test
push
and
adc
cmp
testb
xchg
mov
and
rcl
jle
dec
pop
dec
jmp
mov
pop
mov
push
insl
adc
in
jae
jecxz
mov
jbe
mov
fsubrp
jmp
mov
imul
std
cmp
idiv
and
xchg
xchg
lods
loop
in
xor
hlt
pop
dec
and
idivl
mov
cmp
imul
xlat
mov
mov
xchg
xor
mov
dec
inc
out
mov
cmp
dec
adc
scas
jmp
lahf
pop
popf
gs
sbb
push
and
aaa
enter
cwtl
das
fcmove
push
into
enter
mov
lret
jle
in
cmp
or
adc
mov
add
cmp
mov
cmp
adcl
les
lahf
std
les
mov
mov
jp
shll
ret
aaa
leave
sbb
xchg
mov
pop
xchg
scas
sar
into
or
jle
lds
cwtl
addl
cmp
jge
xor
std
pop
jecxz
out
mov
fisubs
or
bound
insl
or
mov
rorb
lock
cmp
add
jg
iret
lock
add
sbb
and
addr16
xor
in
fwait
popa
mov
out
aaa
ja
mov
ljmp
test
pop
cmp
ljmp
cmc
cmpsl
inc
pop
cmp
sub
les
or
je
fiadds
bound
or
dec
jns
in
cmp
cmc
jle
insl
push
mov
mov
out
adc
aad
and
mov
jno
fstpt
mov
loop
xor
lcall
cli
in
adc
js
sbb
les
call
mov
or
lods
cli
and
sub
sbb
xor
fisubs
mov
pop
test
cmp
jl
sub
in
iret
fistpl
test
and
hlt
lret
stc
int3
sbb
test
mov
imul
jnp
lcall
push
xchg
rsm
in
imul
mov
cs
cltd
mov
or
lahf
jno
push
jg
adc
mov
cmp
mov
adc
mov
ja
sbb
add
mov
mov
dec
mov
dec
sbb
in
fcompl
sub
aas
push
ret
call
mov
mov
add
sbb
ljmp
ja
xor
icebp
inc
mov
into
jns
pop
sbb
xchg
iret
xchg
ds
add
idivl
cmp
lret
pop
shrb
cmc
pop
mov
ss
mov
mov
aaa
imul
adc
call
outsl
push
mov
clc
adc
adc
in
and
sbb
fidivrl
jecxz
adc
mov
fstp
push
call
outsb
fmull
or
arpl
movsb
xchg
std
loop
dec
mov
das
bsr
into
jmp
cmpsb
lcall
jae
mov
fidivrs
and
dec
insb
in
std
outsb
nop
jo
insl
xor
mov
std
and
dec
mov
sub
mov
and
jns
rclb
mov
test
mov
pop
mov
cmp
stos
shll
iret
ljmp
jae
insb
sahf
jae
cmpsl
or
sub
and
scas
ficoml
sbb
int3
movsb
sbb
loopne
jne
stos
and
pushf
sub
sti
ds
push
jg
jnp
sub
adc
imul
push
mov
cmp
in
sbb
hlt
mov
xchg
xchg
mov
push
lods
adc
jmp
dec
mov
jne
adc
push
or
xor
ret
sbb
xchg
pop
popa
mov
sub
iret
sbb
pop
outsb
mov
adc
popa
fs
jle
add
iret
imull
mov
clc
sbb
add
lock
push
mov
push
jae
sbb
dec
jp
adc
test
aas
adc
pmullw
cli
icebp
mov
lds
cwtl
and
loop
jecxz
mov
out
bound
cmpsb
js
jg
in
push
out
jge
lcall
cld
push
inc
gs
cmp
popa
movsb
dec
jae
sub
orb
mov
pop
dec
sub
or
fmull
and
sub
shrb
iret
sahf
in
mov
ret
inc
sbb
les
iret
in
mov
scas
adc
stc
adc
in
insb
divl
adc
dec
rcl
sbb
mov
les
dec
lret
jmp
in
adc
jbe
mov
test
sarb
negb
jns
aam
adc
lock
or
aad
cld
clc
xor
popf
loope
or
ret
push
push
mov
mov
xchg
dec
push
arpl
jo
xchg
dec
outsl
or
roll
and
cmpsl
mov
cwtl
cmpsl
jbe
sahf
add
xchg
push
aaa
mov
insl
popf
fcompl
ja
enter
out
stos
fwait
sarb
jbe
outsb
adc
or
jle
dec
js
ret
mov
mov
inc
jo
and
mov
mov
sahf
loopne
aaa
jae
ss
icebp
jo
fcoms
insb
imul
cmpb
adc
inc
fisubrs
arpl
xchg
outsb
mov
and
and
insl
push
push
fpatan
xchg
pop
and
add
push
pop
and
sahf
adc
loop
scas
and
clc
or
fs
xor
aam
sbb
shl
insb
push
jnp
xor
inc
test
xor
push
iret
push
mov
and
xor
in
mov
push
push
fbstp
cli
mov
movsl
leave
movsb
add
jg
stos
pop
insl
int3
pop
sbb
repnz
and
ret
cmp
popf
sub
sub
cmc
sub
rcl
mov
fsubrl
sbb
jle
mov
cwtl
out
xchg
clc
sbb
cmp
and
or
lods
or
pop
mov
mov
insb
cli
lods
jae
movsb
sbbl
in
hlt
sub
loopne
lret
lods
xchg
jp
push
inc
aam
js
or
outsb
mov
in
xor
xchg
daa
cwtl
insb
frstor
sbb
sbb
cmp
cltd
push
lahf
pop
lcall
xchg
jae
sbb
mov
pop
daa
stos
mov
xchg
movl
jne
mov
pop
mov
sub
jmp
pop
cmp
dec
inc
pusha
inc
mov
icebp
and
cmpsl
popa
sahf
addr16
cli
xor
push
and
jns
incl
mov
les
loopne
call
jmp
mov
add
jmp
insl
add
mov
aas
inc
or
add
outsb
movsb
mov
jno
out
inc
sbb
cli
es
xor
gs
aaa
filds
add
mov
mov
sub
jno
xor
mov
dec
int3
out
xchg
dec
inc
divb
and
inc
aaa
push
lds
cs
jge
mov
cmp
cmp
cli
mov
jg
call
cli
pop
xor
push
xchg
sbb
xchg
xchg
pop
adc
push
enter
cmp
mov
and
sti
test
sbb
inc
push
leave
aad
test
ljmp
popl
or
push
jle
decl
adc
fstps
cmp
and
fcompl
movsl
inc
pop
xchg
imul
push
stc
sbbb
pop
jmp
sti
xor
push
movsl
jae
pop
adc
aas
dec
jne
inc
xor
dec
mov
pop
pushf
adc
stos
push
and
jnp
inc
out
or
movsl
sbb
icebp
push
sahf
testl
iret
xchg
jmp
add
push
xchg
andl
mov
pop
sbb
and
add
jne
dec
xor
mov
aam
les
mov
int3
push
movsb
push
ret
sbb
pop
out
or
into
jnp
lcall
pusha
sub
in
mov
out
clc
mov
bound
sbb
xchg
push
stos
stos
hlt
out
test
add
lock
sub
sbb
add
idivl
sub
mov
test
fwait
pop
mov
in
lea
and
cld
adc
adc
mov
jns
pop
call
aas
sbb
and
push
inc
and
xor
pusha
jbe
sub
lret
loopne
jecxz
cmpl
jg
xor
mov
ret
loopne
das
adc
cli
call
call
mov
call
inc
sbb
mov
mov
sub
das
movsb
xchg
fwait
and
in
push
pop
aam
mov
xorl
dec
mov
mov
aad
lods
ret
mov
mov
rcr
push
adc
movsb
sahf
pop
fisubrs
pop
sub
mov
cld
jg
and
and
cli
out
add
sahf
stos
test
sub
imul
jp
imul
cli
xchg
jmp
and
mov
mov
sub
push
pop
and
jbe
loope
insb
movsb
add
cmp
rclb
stos
inc
mov
adc
mov
out
cmp
out
mov
fst
xchg
in
xor
inc
xchg
jg
ficompl
imul
xchg
inc
push
jmp
mov
enter
inc
jb
mov
rcrb
and
push
jnp
mov
xchg
xchg
jbe
in
syscall
fdivs
das
add
dec
xchg
inc
xor
mov
loope
sub
mov
sbb
and
test
add
shrb
vpmacssdql
add
sahf
fcmovu
or
adc
pop
out
inc
xor
inc
and
ja
lods
movsl
addr16
xchg
fwait
daa
dec
push
enter
divb
rorl
outsl
fcomps
mov
cld
push
cmp
jo
lock
xor
pop
mov
popa
dec
push
mov
gs
cwtl
pusha
sti
filds
cld
sub
pop
stos
popa
lock
mov
fsubr
cmc
mov
xchg
pop
ret
pop
js
mov
scas
jns
sti
sbb
stos
inc
cmp
shl
pop
xchg
push
les
shrl
aad
mov
inc
jp
or
mov
in
cmpsb
std
daa
imul
push
out
push
jo
loope
insb
js
cmpsb
mov
scas
cmp
fwait
mov
sbb
ja
stos
inc
pop
fldt
sti
sbb
push
xchg
pop
das
in
sbb
xor
out
movsl
lds
gs
xor
add
leave
sarb
jl
mov
adc
lret
push
add
mov
adc
je
in
jg
int
aaa
pop
sbb
scas
xorb
sub
mov
jmp
sbb
shrl
sub
nop
mov
repz
mov
and
adc
push
in
sbb
sbb
dec
cmp
mov
add
lret
int
jae
ljmp
push
dec
pop
fdivrs
sarb
enter
in
jge
dec
in
lcall
push
or
pop
push
jbe
sub
mov
or
cmp
leave
mov
jecxz
shll
jb
mov
int3
cmpb
lods
sbb
sahf
jmp
or
xchg
pop
loope
mov
in
lahf
xlat
aas
mov
adc
aas
cmp
push
jp
filds
popa
pusha
pop
fucomp
pop
inc
xchg
dec
jecxz
and
jle
pop
and
xchg
add
outsl
lahf
mov
pop
dec
push
stc
pop
inc
stos
loop
push
cmp
mov
xchg
in
and
mov
leave
pusha
movsl
pop
pop
xlat
inc
pop
mov
or
pop
dec
sub
movsl
cli
pop
js
add
push
in
jle
inc
cltd
test
pop
add
sub
dec
pop
lahf
je
cmc
cmp
and
jp
lahf
inc
pop
mov
shrl
xchg
pop
iret
movsl
fsubs
clc
fwait
push
xchg
push
ss
mov
cmpsl
push
pop
stos
je
mov
loope
inc
mov
scas
and
jnp
mov
push
mov
pop
ficoml
sub
lcall
outsb
pop
mov
or
mov
mov
out
xchg
loopne
pop
sbb
adc
pop
call
sti
cmp
nop
and
sahf
push
sbb
xor
jg
add
loope
sbb
pop
jne
popa
mov
pusha
iret
sub
sbb
push
or
adcl
ss
cmp
mov
inc
xor
inc
mov
push
rcrl
popf
cwtl
pop
aad
sub
mov
aas
ljmp
dec
add
pop
xchg
jmp
out
shlb
inc
mul
ss
flds
sub
lretw
cltd
addr16
cmp
stos
inc
push
mov
gs
test
dec
mov
out
shlb
and
inc
jae
addl
inc
mov
clc
rcrb
popf
cmp
int
and
mov
js
fwait
add
sbb
repnz
mov
clc
inc
mov
lret
pop
pop
pop
xchg
cmp
imul
cmpsl
mov
out
cli
test
popa
mov
scas
sub
mull
mov
or
pushf
std
dec
sar
and
pop
lcall
push
inc
jecxz
sub
xchg
aaa
mov
leave
push
aam
jnp
arpl
jmp
out
mov
push
push
out
push
lea
nop
inc
ficomps
adc
lods
punpckhwd
sub
xlat
popa
jg
cmp
js
pop
out
rsm
jae
push
popf
xor
pop
xor
add
std
push
into
les
or
addl
xchg
je
mov
loop
cmpl
cmp
ja
cmpsl
dec
push
xlat
adc
push
imul
insl
sbb
imull
int3
cwtl
jge
add
xchg
sbb
mov
cmpsl
ja
loope
addr16
pop
in
loop
sub
mov
sub
fwait
inc
xchg
fdivrs
outsl
mov
mov
leave
or
in
mov
and
pop
jecxz
or
push
jno
sbb
outsl
test
dec
sbb
jg
push
add
lods
fsubrl
xchg
push
cmp
jbe
leave
js
notb
int
xchg
cmpb
sbb
adc
jmp
mov
inc
fisubs
mov
pushf
in
inc
sub
push
sar
push
push
jo
xchg
xor
mov
sub
xchg
shll
rcrl
jno
sbb
inc
jne
pushf
sti
testb
insl
rorl
fistps
lods
xchg
stos
adc
push
mov
pop
add
lods
test
sbbb
lods
xchg
dec
pop
int
dec
xchg
fstps
ficoms
mov
sub
mov
jle
icebp
dec
jae
cmpsb
mov
mov
inc
xadd
aaa
inc
pusha
in
int
add
and
dec
outsb
inc
push
ja
adc
cld
and
xor
adc
push
jae
in
ja
addr16
test
jle
push
cmpsb
ja
push
pop
subb
in
pop
lock
dec
dec
addr16
mov
or
pop
cmpsl
dec
add
jmp
or
push
fisubl
dec
pop
imul
loopne
mov
xchg
or
jle
fwait
xchg
mov
sbb
cmpsb
xchg
out
sahf
out
std
out
xor
sub
dec
insb
dec
fmuls
mov
pop
mov
mov
call
lret
dec
filds
sbb
add
dec
out
push
out
arpl
xor
sub
repnz
out
inc
notl
ret
sbb
cmp
fdivrl
jge
daa
add
sti
push
fistpl
push
rorb
and
mov
in
xor
sbb
sbb
pusha
rorb
fwait
push
test
nop
sbb
out
scas
cmpsb
stos
or
lods
or
mov
push
insb
xor
test
das
out
and
popa
mov
lock
lock
xchg
loope
shll
ds
incl
outsl
add
push
jb
js
scas
xchg
fistpll
xorb
pop
lahf
dec
push
adc
std
inc
lret
imul
push
shlb
sub
xor
loop
fldt
jnp
lea
out
shlb
hlt
jmp
mov
negl
pop
repz
mov
cmp
inc
outsb
sub
pop
and
fistps
xor
sahf
add
cmc
adc
js
andb
push
mov
mov
addb
dec
data16
cmp
leave
xor
jnp
lds
jne
dec
and
movsl
pop
imul
mov
ja
push
cmp
lahf
sbb
pop
xchg
stc
ljmp
outsl
add
push
xor
scas
shrb
fadds
cmp
popf
jl
lods
or
cs
xchg
pop
cmpsl
out
adc
adc
fstpt
adc
sbb
add
mov
mov
outsb
cmp
in
cmp
cmp
fsub
mov
imul
lea
mov
sub
or
push
sub
movsb
mov
pop
std
dec
cs
lret
dec
or
notl
sti
in
outsb
loop
loop
push
fnstcw
mov
jge
pop
mov
xchg
sub
imul
ret
ret
test
pop
jb
mov
sub
std
cs
fiadds
arpl
sti
lock
rep
lret
add
ja
dec
cmp
dec
mov
add
jecxz
ret
dec
and
test
xor
std
xchg
mov
pop
or
outsl
fidivs
int3
inc
push
subl
jge
jge
mov
sbb
daa
add
mov
out
in
out
stos
jns
stos
aam
in
fmull
in
dec
pop
hlt
inc
daa
out
mov
or
cmc
fcomps
cmc
xchg
scas
or
fidivrs
xorl
fwait
or
sti
int3
and
fldcw
adc
pop
in
sbb
cmp
daa
adc
cmp
pop
ret
pusha
andl
bound
clc
rorb
aaa
shr
lahf
or
xchg
add
ja
repnz
sbb
and
and
mov
cmp
or
push
fs
xor
out
loopne
mov
xor
es
test
push
xchg
or
fincstp
js
out
sarl
push
cmpsb
cmp
out
jle
cld
call
and
pop
xchg
addr16
sub
xor
inc
lea
and
or
jns
scas
inc
incb
lods
ret
sahf
in
enter
movsb
cmpsb
push
test
or
adc
inc
pop
inc
pop
sarb
sub
fcoml
ja
or
data16
addr16
fadd
sbb
fdivs
xor
or
jl
xlat
ret
add
sbb
mov
aad
and
sbb
xchg
or
pop
mov
cmpsl
push
push
pop
mov
or
or
xor
pushf
mov
leave
push
pusha
fisubl
pop
and
xchg
mov
cmp
aam
icebp
sbb
pushf
leave
stos
jno
xor
mov
stos
push
cmp
cmpsb
sub
inc
fists
imul
add
xchg
xor
test
adc
addl
jnp
mov
or
jecxz
and
fs
cmp
push
cmpsb
inc
pop
adc
lods
cmp
cmpsb
push
stc
mov
adc
in
call
dec
leave
inc
jno
push
inc
lret
cmp
cld
mov
mov
out
mov
dec
mov
test
jns
or
cmc
call
loope
cli
decl
popa
mulb
scas
dec
pop
mov
mov
sub
push
add
cmpsl
cmp
repz
add
mov
loope
clc
push
or
or
faddl
cmp
mov
jnp
adc
js
mov
sub
adc
sbb
inc
xchg
test
push
outsb
xchg
fwait
mov
dec
shl
popf
repz
movb
stc
les
xor
push
test
mov
jne
out
inc
stos
inc
lea
out
lea
fsubl
inc
popa
out
or
data16
in
fmul
push
mov
mov
mov
pop
mov
xchg
ret
xor
ja
leave
sub
aas
inc
cli
loopne
pop
aaa
dec
sub
outsb
jb
cmp
or
scas
arpl
xor
cmp
nop
push
int
xor
sbb
pop
and
inc
shlb
inc
adc
cmp
outsb
subb
enter
lock
and
daa
loope
xchg
shll
call
movsl
mov
mov
add
sub
pop
enter
sub
sbb
dec
jmp
mov
cmp
dec
clc
pop
enter
sub
sbb
dec
jmp
mov
cmp
dec
clc
fxch
imul
cltd
or
js
dec
jmp
mov
cmp
dec
clc
pop
enter
sub
sbb
pop
inc
lock
cmpsl
push
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
dec
cld
enter
call
ret
int3
mov
dec
insb
jns
push
insb
sub
or
cld
enter
call
lods
mov
jl
insb
sbb
sbb
sub
sbb
or
cld
enter
call
lods
mov
inc
dec
xor
sub
dec
jnp
popa
dec
sbb
or
cld
enter
mov
insl
inc
lahf
fwait
outsl
fldenv
cmp
cmp
adc
pushf
hlt
outsl
xchg
mov
lods
int
xor
nop
fldl
pop
in
in
mull
pop
jmp
mov
xor
sbb
cmpsb
cmp
pop
mov
add
in
fcomp
add
cwtl
mov
test
dec
dec
mov
mov
pop
jl
loop
sub
stos
or
xor
adcb
test
xor
cmp
jg
hlt
pusha
imul
js
inc
scas
inc
push
outsb
or
pop
in
insb
ret
or
cmp
sub
cld
enter
call
lods
mov
jl
insb
js
push
sub
sbb
dec
lods
xchg
mov
xchg
lcall
stc
int
xor
cli
add
insb
push
inc
push
push
sahf
pop
imul
fldlg2
cmpb
and
and
jnp
push
lods
out
fwait
test
mov
mov
jl
insb
js
push
sub
sbb
or
cld
enter
call
lods
mov
jl
insb
js
push
sub
sbb
or
cld
int
jne
mov
push
add
jg
mov
fnstenv
and
lahf
and
ret
les
fwait
cmp
and
mov
fcoms
in
mov
stos
mov
aas
in
out
hlt
adc
xchg
jl
stos
pop
aaa
push
mov
jae
das
ss
cmp
mov
dec
jp
ds
fldt
sbbb
jb
loopne
shlb
inc
lret
subl
ds
lahf
test
mov
iret
std
into
iret
mov
lds
sahf
adc
or
stos
mov
jnp
loope
daa
cltd
jecxz
stos
cmovno
fistpll
xchg
jae
inc
inc
sbb
cmp
in
pop
outsb
bound
jecxz
scas
pop
test
test
test
mov
sub
rcll
lret
cmp
das
ss
movsl
addr16
xchg
int3
nop
movb
cltd
loop
inc
xchg
nop
nop
bound
pop
fidivl
and
scas
lods
xor
in
insl
push
imul
arpl
dec
iret
adc
sub
ja
aaa
adc
jmp
fstpt
sub
rcrb
pushf
xchg
push
mov
lret
mov
xor
into
add
call
xchg
shrb
inc
xlat
test
sbb
mov
jae
xor
clc
pop
popf
mov
ja
mov
sbb
repz
in
sub
add
mov
js
dec
hlt
das
inc
jmp
adc
mov
sub
jmp
cltd
adc
ljmp
sbb
mov
loop
into
mov
fs
aam
mov
sub
daa
lahf
sbbb
test
sub
adc
add
aaa
xchg
lds
out
test
jae
out
inc
mov
in
mov
fcmovbe
ds
int
cmp
pop
cs
lods
xchg
insl
loop
ss
cmp
outsl
arpl
fists
movsb
push
popf
cltd
rcrl
inc
pop
pop
mov
ds
pusha
mov
nop
leave
daa
cs
test
repz
sub
and
test
fwait
cmc
into
sahf
insl
std
xor
in
jb
mov
jbe
push
pop
and
add
stos
push
les
fidivrs
cmpb
popf
dec
xor
and
add
mov
fs
jge
shlb
jbe
aas
push
jle
mov
xchg
dec
xchg
cwtl
cmpb
or
and
imul
sti
mov
andb
cmp
jnp
cmc
push
leave
fs
adc
lock
fwait
mov
test
lods
sbb
jnp
mov
ret
loope
push
js
cmc
inc
pop
mov
into
aam
pushf
mov
lcall
iret
cmp
sbb
movsl
ljmp
outsl
shl
in
xchg
hlt
fld
xor
lret
mov
enter
adc
xor
rcl
push
pushl
cmpsb
xor
mov
inc
cmp
jo
inc
nop
and
push
mov
pop
and
mov
int
xchg
push
std
adc
adc
in
pop
adc
and
fistpl
or
popa
shll
mov
call
scas
mov
pop
cmp
imul
pop
mov
dec
push
mov
sbb
push
xor
push
dec
pop
imul
shlb
dec
insb
adc
sbb
mov
push
xchg
notl
jle
jbe
xchg
mov
push
test
shl
lods
fnsave
fwait
xor
popl
mov
add
arpl
rsm
push
add
mov
loop
fcmovnb
lret
fwait
dec
mov
push
mov
jb
sub
xlat
fs
popf
popf
sub
ljmp
cmp
jmp
push
or
cmp
xorl
std
mov
push
sarl
or
roll
outsl
in
cli
clc
push
dec
mov
lret
adc
insb
mov
js
lret
xchg
lcall
add
mov
testb
aam
aas
xchg
xchg
push
idivb
or
jmp
dec
adc
mov
test
dec
cwtl
xlat
inc
subb
xor
cwtl
dec
out
movsl
inc
or
ret
das
jb
mov
out
int
xchg
mov
lcall
pop
shll
mov
add
or
sbb
lock
or
push
movsb
add
mov
cmp
aam
imul
jo
xlat
dec
add
dec
leave
sub
lods
and
ret
add
nop
sbb
cwtl
aam
jl
sub
lea
test
push
mov
push
jmp
in
cmp
movsb
mov
cmp
cmp
jg
push
mov
jmp
xchg
xor
sub
out
xor
or
loop
add
cmp
xchg
movsb
cmp
fdivrs
mov
adc
pusha
stos
dec
jmp
jge
push
mov
fs
sti
fcoms
pushf
pop
arpl
pop
or
out
pop
pop
aaa
aam
mov
ret
arpl
add
sbb
arpl
enter
dec
adc
fdivl
scas
push
mov
nop
mov
in
pop
cmp
cmp
push
adc
ds
mov
dec
pop
scas
lods
bound
gs
dec
test
fistpl
aad
sbb
dec
dec
inc
add
rolb
inc
dec
and
cltd
push
nop
adc
push
xchg
xchg
sbb
popf
sbb
arpl
loop
repnz
mov
push
fistl
ret
inc
and
out
neg
sub
insb
add
ds
aas
in
pop
mov
add
cmp
in
sub
repz
sbb
lret
mov
and
push
ret
loop
mov
mov
sbb
cmc
ficoml
cmp
nop
aas
shll
das
pushf
ret
pop
inc
sarb
and
cmp
mov
xchg
fs
hlt
decb
lods
call
fcoms
lret
out
into
mov
rcll
add
push
sub
push
dec
packssdw
sbb
pop
sbb
aam
ret
ret
enter
cmp
mov
jno
inc
push
daa
aad
clc
ficoms
xor
jl
jmp
jo
pop
nop
mov
jb
rep
cld
test
movsl
push
xchg
add
ja
insl
sbb
pop
roll
push
xor
in
push
or
aaa
das
outsb
rorb
loope
test
pop
sbb
cmpsb
and
shlb
jns
sub
xchg
push
dec
add
mov
data16
fcmovu
out
dec
inc
push
xchg
es
and
jecxz
jne
ss
pop
lock
sar
in
sbb
loope
movlps
cmp
pushf
enter
push
mov
and
xchg
push
sbb
scas
scas
fadd
inc
test
xchg
xchg
fldcw
jnp
xor
insl
dec
cli
std
fcmove
xor
mov
mov
and
divb
adc
adc
cltd
sbb
push
bnd
push
mov
std
cmpsb
push
dec
xchg
mov
xor
xchg
scas
divl
mov
ss
jg
mov
and
push
es
stos
add
mov
add
push
push
fiadds
or
sub
gs
xchg
xorb
xor
popa
mov
sub
mov
adc
imul
or
popf
jbe
sti
stos
shll
test
or
xchg
sbb
mov
fnstenv
mov
fcmovnb
xchg
add
adc
mov
lret
cmp
hlt
es
test
in
aam
call
cmp
fwait
mov
xor
jno
aam
popf
add
xchg
scas
mov
ds
pop
cmp
test
hlt
and
adc
leave
paddd
ja
iret
sbb
ss
add
mov
mov
sarb
xchg
out
je
cmp
stc
jmp
push
ret
loopne
fisubrl
inc
mov
leave
mov
pop
dec
and
xchg
xchg
lds
lcall
pop
jnp
cmpl
popf
aas
sub
jge
inc
cmp
iret
xor
dec
push
mov
sbb
mov
call
xor
add
cmp
loop
cltd
pop
sub
ds
mov
fmuls
shll
es
inc
int3
jno
jae
add
sahf
xchg
pop
dec
stos
in
adc
fistpl
cmp
mov
mov
lock
sbb
pop
daa
add
jmp
sbb
push
cmc
dec
cs
jp
sbb
add
xchg
add
xchg
ja
repz
jbe
cmp
shll
push
xor
dec
icebp
outsl
inc
push
sub
arpl
pop
je
into
pop
lds
fsub
cmpsl
and
stos
mov
pop
jae
cwtl
cltd
aad
mov
in
lret
in
jecxz
and
cmp
push
lahf
xor
push
pop
jno
xor
dec
mov
js
or
fiadds
jns
sub
je
aaa
xchg
popa
or
sub
lods
jbe
ret
jmp
cwtl
roll
mov
jg
aam
sub
pusha
ds
xchg
insb
dec
push
ffreep
sbb
inc
push
lahf
sub
out
ljmp
mov
jno
dec
push
xor
scas
sarb
jl
xchg
add
sbb
jo
and
push
out
call
daa
rcrl
mov
jmp
mov
jae
lock
add
mov
outsb
cli
data16
leave
push
lock
ret
dec
nop
lods
or
lea
mov
jmp
dec
popf
fcmovnu
sbb
inc
notl
cmp
and
test
push
ret
insl
scas
add
sub
dec
jg
shll
xchg
push
mov
pushf
insl
fstps
das
inc
sub
jo
push
out
addr16
mov
leave
mov
inc
mov
dec
sbbb
rcl
sub
sbb
sbb
fldz
icebp
inc
sub
repnz
movsl
sub
push
ss
xchg
fucomi
pop
mov
push
pop
mov
push
dec
pop
in
push
test
pop
call
sub
fnstsw
mov
mov
inc
pop
push
incb
fimuls
in
in
or
adc
add
lods
xchg
xor
test
cltd
dec
jno
adc
push
jns
sub
fs
in
jge
ret
mov
or
xor
jno
mov
dec
sub
xchg
sub
cmp
hlt
xchg
cmp
pop
scas
into
sbb
les
sub
sahf
pop
sbb
addl
sarl
mov
push
push
pop
fisttps
repz
gs
xchg
es
mov
pop
int
xor
popf
adc
les
xchg
in
mov
fsubrs
xchg
rcrb
jb
movsl
femms
and
mov
cmc
repnz
leave
rolb
mov
test
addr16
imul
push
shlb
insb
imull
movsl
push
or
mov
mull
jo
test
cmpl
retw
xchg
int3
addr16
mov
xor
lods
jmp
cltd
fdivrl
into
out
sub
rep
push
and
rcrb
je
pusha
jge
test
or
rorb
pop
jne
inc
stos
aas
dec
ljmp
fiaddl
cmp
inc
mov
push
push
sbb
inc
adc
dec
fs
jne
jnp
ljmp
movsb
mov
addb
fdivrs
fstpl
fs
sar
leave
add
xchg
and
sbb
daa
adc
mov
mov
out
dec
adc
daa
mov
cmp
pusha
mov
std
mov
cld
inc
mov
mov
jo
push
mov
push
mov
fsubs
lret
nop
int3
xchg
dec
push
jae
aam
mov
push
cmpsl
dec
and
rorb
stos
fs
jno
jmp
stc
iret
mov
sbb
cwtl
aad
repz
xor
mov
mov
pop
popl
ljmp
add
fldenv
mov
rolb
mov
mov
sti
adc
mov
test
sti
xor
sub
cwtl
sub
clc
out
mov
cmp
inc
lahf
aaa
xlat
stos
addr16
pushf
xor
xchg
jge
aam
fists
fs
roll
test
pop
add
push
mov
pop
and
mov
inc
fsubrl
js
add
imul
fsubl
dec
jp
add
adc
sbb
loopne
jle
fnsave
fcompl
cmp
in
cmp
xchg
pop
insb
pop
mov
cwtl
or
aaa
sbb
xor
outsb
xrelease
addb
icebp
cmp
mov
push
sahf
lret
inc
lock
pop
pop
outsb
sti
sub
movsb
adcl
popf
adc
sti
testl
jg
ds
mov
sub
inc
aad
lea
push
dec
push
lret
xchg
dec
pushf
pop
pop
imul
jg
mov
aaa
in
sub
adc
aad
lcall
sahf
dec
push
push
push
lcall
daa
cmp
mov
or
xchg
outsb
jge
jbe
jb
inc
pop
jg
pop
stos
into
lret
mov
xchg
jge
pop
movsb
or
cmpsb
jo
sub
xchg
jbe
jo
push
andl
lcall
lahf
out
xchg
stc
inc
mov
xor
push
movsb
push
xchg
inc
add
bound
stos
adc
test
push
shll
adc
xor
mov
mov
dec
clc
adc
and
dec
sbbl
jmp
and
cmp
mov
sahf
lods
js
cmp
mov
xor
sahf
mov
push
roll
cmpsl
inc
aaa
ret
fsubrl
inc
inc
pop
lcall
fimull
stc
clc
inc
int3
loope
cwtl
in
push
idiv
bound
mov
mov
lret
cmc
addb
lea
iret
outsl
mov
test
test
pushf
mov
xchg
and
fnsave
fsubrl
mov
mov
xor
nop
pop
xchg
clc
adc
mov
dec
movsl
mov
xor
and
dec
pop
subl
in
inc
adc
mov
pushf
aas
push
mov
rclb
and
dec
inc
dec
inc
pop
js
call
enter
rcrl
pop
jbe
cmp
out
rorl
ret
mov
ficoms
leave
ljmp
sub
clc
xchg
xchg
mov
xchg
arpl
jecxz
sti
cs
loopne
jecxz
mov
xor
into
insl
mov
cs
cltd
add
push
test
mov
cld
pop
test
dec
shlb
inc
push
add
sbb
es
mov
mov
xor
cmp
cmpsl
mov
sub
xchg
xlat
stc
jmp
mov
add
sub
lahf
mov
xchg
out
jne
fdecstp
ret
sub
mov
xchg
mov
int3
subl
cmp
frstor
dec
add
mov
dec
dec
adc
into
inc
ja
add
sbb
std
lret
sbb
mov
jb
mov
prefetch
sub
jg
add
cmp
in
stos
cmp
cwtl
jne
and
sub
adc
xchg
pushf
out
in
mov
mov
cs
dec
sub
xchg
cmovno
xor
ficoml
xchg
ficomps
sub
loopne
inc
pop
xor
inc
imul
xchg
push
inc
cmp
movsb
scas
dec
shll
rcl
popf
add
movsl
subl
fwait
xchg
cmpsl
push
ret
mov
cmp
cld
mov
test
das
push
pushf
in
cli
cmp
pop
repnz
std
lcall
cmp
in
jne
push
xchg
dec
clc
mov
iret
jp
nop
or
les
mov
je
cmp
sub
loopne
push
lock
insb
adc
adc
gs
fs
ljmp
push
xchg
push
mov
cltd
mov
into
mov
dec
iret
cwtl
lds
jbe
shlb
in
rcll
invd
cwtl
stos
ret
jle
stc
addr16
jno
bnd
xchg
mov
arpl
das
out
adc
lcall
cmpsb
inc
repnz
jae
jle
cmp
or
and
out
xchg
cmpb
fldcw
js
ja
push
jno
lea
and
mov
ret
call
int3
mov
and
and
cmpb
sub
push
mov
iret
xchg
arpl
jle
sub
and
mov
jp
fsubs
inc
shrb
adc
sub
inc
pop
ljmp
dec
sarl
xchg
loope
das
push
fwait
mov
lock
fstps
jnp
mov
out
aam
call
popf
mov
mov
lcall
cmpsl
shll
xor
lret
sbb
je
test
adc
movsl
adcb
xchg
rcll
sub
test
test
stos
cmp
ljmp
mov
pop
sub
mov
rcll
sar
pop
xor
xchg
and
rcrl
pop
xchg
negl
mov
sub
xchg
dec
aaa
imul
push
insb
push
arpl
popf
bound
mov
fs
mov
outsl
sti
add
push
adc
ljmp
mov
shll
fidivrl
sbb
rolb
jns
fdivl
test
movsl
repz
aam
ljmp
call
insb
lcall
out
or
sub
lahf
leave
out
pop
and
inc
div
pop
sarb
push
insl
lahf
lock
jns
dec
out
repz
jnp
mov
gs
fs
sbb
jns
iret
xchg
popf
and
jle
xchg
lea
test
add
xlat
push
imul
js
int
rcr
cltd
ja
ljmp
popf
mov
or
or
or
cmpsl
iret
and
jle
ret
xchg
inc
jg
cs
mov
rcl
ja
jmp
iret
pop
mov
aaa
or
sbb
lcall
mov
push
xor
int3
aas
jp
push
mov
xor
movsb
cwtl
add
je
decl
mov
or
xlat
arpl
xor
stos
push
std
jbe
pop
cld
enter
pop
std
cld
and
outsl
pop
sub
sub
or
insl
cwtl
mov
jno
push
or
leave
pop
cs
movsl
rclb
fmuls
push
imul
je
shlb
dec
adc
jne
hlt
ljmp
imul
cmp
or
out
mov
into
imulb
jns
aaa
push
jg
sub
push
into
inc
imul
sub
jne
mov
inc
ds
ss
sbb
and
jno
mov
xchg
loop
add
inc
ficoms
sub
mov
cmpsb
jp
mov
mov
test
jnp
stc
movl
lods
xlat
out
scas
xchg
adc
ljmp
xor
aad
push
sbb
or
pushf
in
push
bound
xchg
xor
push
mov
inc
pop
bound
int
fwait
adc
sbb
js
scas
or
roll
cmpsl
cmp
cmp
loope
je
loopne
fnstcw
or
fldlg2
sub
imul
mov
jbe
dec
cmc
lret
neg
scas
fdivrl
cs
jns
shll
push
or
adc
xchg
cmp
mov
les
jne
jo
inc
dec
xchg
bound
mov
popl
out
lds
push
jecxz
test
jne
repz
ljmp
add
push
xchg
lock
std
test
daa
mov
sbb
adc
sub
cmpl
xchg
xchg
add
imul
pop
xor
dec
mov
mov
jecxz
dec
faddl
int3
enter
push
pop
aam
pop
dec
insb
ds
scas
mov
add
jns
lea
jle
ret
addr16
iret
enter
and
add
adc
inc
addl
jno
cmpsl
mov
sub
jp
lods
jg
jbe
jae
sub
int3
inc
xor
xchg
inc
fistpll
sbb
stc
jmp
mov
add
cmpsl
mov
es
stc
das
ss
addr16
push
call
les
add
aaa
pop
ret
jne
jb
inc
std
int
adc
call
lret
cmp
jmp
mov
mov
xor
out
pop
leave
adc
xchg
jle
dec
and
xlat
outsb
gs
adc
mov
cli
and
xchg
sbb
and
insb
clc
imul
dec
arpl
xor
sahf
dec
cmp
sbb
je
pop
mov
and
lret
test
repnz
pop
hlt
lcall
adc
mov
jecxz
in
push
fucomp
int3
cwtl
mov
test
pop
jl
insb
js
push
sub
sbb
or
cld
enter
call
lods
mov
jl
insb
js
push
sub
sbb
or
clc
enter
call
lods
mov
jl
insl
js
push
sub
sbb
or
cld
leave
in
stc
fsubr
enter
sub
sbb
jae
orl
pop
push
rol
jecxz
repz
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
in
cmc
rol
jecxz
repz
testl
push
jae
add
adc
ret
cmc
rol
jecxz
rep
xorl
jne
jne
inc
arpl
and
and
rcr
jecxz
repz
mov
push
jo
adc
inc
pop
dec
inc
inc
mov
mov
xchg
inc
sub
jecxz
mov
int3
stos
or
add
test
insb
fs
or
mov
mov
add
pop
lods
mov
add
bound
ret
or
mov
adc
push
push
out
adc
fsubs
and
cmpsb
adc
testl
mov
jp
xchg
dec
out
mov
stos
xchg
fiaddl
xor
xor
mov
jle
or
xchg
gs
movsl
ja
push
xor
int
inc
adc
mov
xorb
lcall
pushaw
add
add
ret
in
rol
jecxz
repz
movsl
xchg
test
insl
push
pop
arpl
add
pop
mov
nop
xchg
mov
out
cli
enter
cmp
push
ss
xor
and
pop
js
mov
movsl
repz
out
mov
test
xlat
or
sub
adc
and
jne
pop
addb
xchg
in
lods
mov
test
jne
inc
arpl
and
and
rol
jecxz
rep
xorl
gs
jne
inc
arpl
and
and
mov
leave
test
fisubrs
add
or
out
adc
out
out
sbb
push
push
lds
xchg
or
fisubrl
inc
fwait
ss
mov
jp
sub
or
dec
loop
mov
dec
aad
cmpl
mov
rorl
fidivrs
int3
push
cmp
jb
rclb
dec
sub
mov
or
mov
and
jno
imul
mov
add
les
adcl
push
add
inc
in
call
xchg
testl
and
arpl
sti
add
mov
popa
shrl
push
pop
inc
sbb
jo
ss
stos
add
push
shufps
mov
sbb
int
fbstp
mov
test
jne
and
xor
cmpsb
scas
cwtl
mov
stos
adc
fs
xorb
std
push
sub
adcb
mov
jp
aas
xor
xchg
push
ds
dec
scas
cmp
adc
sti
subb
std
mov
loopne
sub
jmp
xchg
xor
enter
iret
mov
mov
push
rcrl
sbb
push
cltd
jle,pt
call
stos
fadds
sahf
iret
cmpb
test
add
xchg
nop
xchg
aad
inc
stos
push
dec
andb
shll
faddl
push
mov
adc
adc
pushf
push
xorl
repz
dec
daa
sub
pop
jp
push
mov
fstps
ret
jle
ds
imul
jae
jno
pop
inc
push
lret
jns
mov
loopne
lret
cmc
fistps
mov
ficoms
dec
dec
adc
and
or
andb
sahf
enter
mov
inc
pushl
mov
push
push
cmpsb
ss
pop
lcall
and
or
sub
add
cmp
xchg
push
in
mov
mov
ds
xlat
pop
fsubr
lea
inc
pop
mov
les
jl
je
mov
fcomip
int
xor
and
ds
mov
mov
sahf
jne
lods
shl
loopne
rolb
testb
out
gs
je
stc
xchg
std
mov
stc
mov
fiadds
inc
pop
fs
push
call
bound
test
xchg
pop
mov
popa
jmp
push
cmovbe
imul
rcrl
es
xchg
sub
mov
mov
mov
imul
outsl
sub
leave
mov
sub
mov
in
xchg
sarb
insb
jl
dec
mulb
add
mov
mov
insb
xor
push
xlat
je
add
cmpsb
xor
ja
pop
cwtl
nop
pusha
cmpsl
movsl
push
xchg
hlt
mov
push
and
lahf
adc
scas
sahf
xor
jbe
sub
mov
cltd
lcall
lea
push
or
out
mov
mov
ljmp
add
and
div
js
add
out
and
jbe
push
popf
xchg
push
adc
sbb
xor
push
jg
mov
or
cld
clc
cld
out
sub
inc
xchg
daa
pop
mov
aam
aas
fildll
cmc
jp
or
js
xchg
pop
mov
bound
mov
jnp
je
dec
pusha
mov
mov
xchg
inc
pop
sub
push
popf
repz
fucomp
mov
jge
sbb
testb
add
dec
rclb
pushf
pop
rcl
inc
or
lret
in
insl
cmp
inc
ja
mov
dec
pop
and
bound
sub
cli
cmpsb
xchg
or
mov
inc
iret
jb
loopne
cmp
push
loop
leave
jbe
pop
cld
push
loop
dec
loop
mov
mov
pop
out
fisttpl
push
pop
mov
insl
jg
cmc
dec
aaa
ljmp
scas
or
push
push
xor
inc
ja
iret
xchg
mov
or
jb
add
push
and
jle
aam
add
mov
push
cmp
test
inc
sub
loope
stos
leave
sub
xchg
outsb
mov
cmp
fistl
sbbl
loop
inc
jge
ret
jbe
push
add
adc
cmp
cmp
aam
push
pop
icebp
jne
iret
sub
jno
outsl
mov
in
rcll
inc
mov
jo
inc
imulb
sub
cmpb
xlat
dec
xchg
jmp
movsb
mov
pop
imul
adc
mov
fstpl
rorl
mov
xchg
jb
cltd
lcall
inc
lods
stos
les
dec
and
push
sub
push
test
mov
call
sbb
out
dec
mov
jl
mov
cmpsl
popf
shrl
ret
jns
movsb
inc
hlt
mov
js
mov
out
cmp
sub
out
sub
enter
test
dec
pop
cmp
sub
pop
xchg
popf
gs
add
or
das
bnd
jbe
test
mov
scas
push
cmp
mov
fisttpl
jnp
shll
jle
cmp
xor
sbb
inc
into
push
cltd
lods
lcall
stos
faddl
dec
lock
out
mov
mov
mov
push
pop
jno
push
pop
aad
cs
fs
or
addr16
cmc
daa
outsb
push
push
xor
mov
sbb
jbe
pop
ljmp
jg
sub
std
popa
das
push
lods
dec
and
mov
xchg
add
jecxz
adc
cmc
sbb
jno
cmp
stos
mov
mov
adc
dec
sbb
ret
push
loope
dec
mov
push
adc
out
pop
scas
mov
push
sub
std
pop
adc
cli
mov
mov
add
leave
jge
fdivl
lods
test
and
insl
sub
int3
adc
xor
push
mov
adc
outsb
movsb
xor
pop
into
xchg
sub
movsb
mov
inc
dec
scas
lods
jmp
lods
push
mov
jecxz
xor
repz
es
imul
sbb
xchg
jecxz
fistpll
in
pop
mov
xchg
sub
sub
scas
jge
add
dec
or
popf
add
xchg
push
lock
pop
ss
add
shlb
inc
es
push
nop
es
insb
loop
mov
dec
dec
and
sub
outsb
push
push
leave
aam
sbb
push
cmpsl
cmc
data16
fimull
loope
stos
lret
loope
stos
aad
pop
stc
push
insb
out
fisubs
mov
add
icebp
fcmovnbe
rcrl
fwait
dec
repnz
cmp
pop
imul
mov
mov
xchg
push
mov
icebp
and
push
lock
xor
and
dec
mov
movb
mov
mov
sbb
pop
push
pushf
imul
mov
out
addb
hlt
xor
push
or
sbb
dec
xchg
jb
roll
fmul
popf
xor
jg
dec
in
mov
mov
inc
cmp
jae
sub
pmulhuw
jg
jle
les
push
or
mov
int
out
push
xor
addr16
cmpsl
adc
rcll
mov
xor
cmp
inc
jmp
xor
cmpl
scas
pop
xor
mov
mov
xor
push
idivb
xor
add
aad
xchg
leave
cmp
cmp
mov
pop
gs
in
ror
pushf
mov
outsl
testb
rcll
mov
ret
or
and
xchg
popf
cld
sub
dec
mov
cs
icebp
movsl
test
testb
inc
loop
insb
rol
fisttpll
outsb
push
lret
fdivrs
hlt
push
mov
and
cmp
ret
fistps
js
notl
xor
insb
cmp
js
xor
pop
mov
testb
mov
movsb
lods
and
sbb
pop
jno
js
clc
movsl
push
and
enter
ja
mov
mov
xor
iret
aad
pop
in
mov
es
mov
sbb
fldl
lret
movsb
pop
in
xor
mov
pop
stos
faddl
jg
xchg
mov
add
mov
pop
dec
jl
sbb
xchg
cltd
push
in
stos
sub
icebp
pop
dec
mov
jle
mov
cmp
dec
roll
pop
sub
push
fisttps
mov
xchg
hlt
hlt
sbb
aad
hlt
jg
xor
ret
in
rclb
fistpl
mov
lret
test
and
imul
sub
in
cwtl
nop
pop
pop
clc
adc
jbe
gs
fstl
popf
cmp
pop
xor
push
and
sub
dec
cmp
ss
dec
push
push
movsl
dec
dec
mov
lea
cmp
sahf
je
lods
mov
stos
mov
adc
jo
mov
addr16
add
jp
js
xchg
sbb
mov
cmpsl
arpl
or
mov
cmp
inc
mov
or
ja
adc
enter
inc
push
adc
lcall
xlat
pop
imul
xchg
orb
mov
popf
je
pushf
or
leave
or
loopne
xor
popf
ret
or
stc
jle
cmpsb
jecxz
sarb
add
ja
das
lds
or
adc
sub
and
gs
mov
jp
cs
out
cmpsb
movsl
imulb
jmp
xchg
cmp
sub
cmc
inc
fpatan
mov
imul
sub
inc
jmp
bound
push
sbb
sahf
ror
fcoml
or
xchg
xor
mov
add
fwait
les
xor
in
adc
sub
sub
xchg
or
mov
outsb
pop
popf
jnp
subb
pop
fisttps
nop
pop
int3
cli
add
sub
sub
sub
mov
imul
inc
cld
mov
fwait
add
and
pop
add
sub
cmpsb
push
popa
push
sahf
pop
popa
dec
jge
push
scas
sti
push
dec
inc
fidivl
push
hlt
imul
jb,pn
mov
xchg
mov
pop
mov
je
push
ja
pop
sub
out
adc
loop
xchg
push
in
in
cmc
das
add
jmp
mov
std
pop
das
mov
jmp
push
lock
jb
jb
sub
enter
lods
lds
sub
jecxz
sub
xor
mov
jmp
mov
out
cs
mov
mov
rcll
cmp
pop
sub
pop
lea
xchg
sarl
dec
in
aad
in
push
call
sbb
mov
frstor
xchg
stos
inc
pushf
jo
pop
mov
shl
sbb
insb
pop
stos
daa
testl
dec
fdivs
ret
xchg
push
fwait
cmpsb
push
sub
aaa
xchg
pop
mov
out
arpl
sub
push
push
add
pushf
or
adc
fstps
dec
mov
sub
rclb
jecxz
scas
xor
aaa
jge
dec
in
lods
adc
sub
clc
jns
scas
popf
mov
push
andb
ss
mov
sti
outsl
cmpsl
into
lea
shll
scas
jl
pop
add
sahf
aam
mov
lcall
mov
cld
jo
in
pop
mov
and
inc
loop
xor
icebp
push
add
xor
and
fstpl
lret
sbb
sub
in
pushl
aam
stc
fmul
gs
mov
jne
jo
cmp
and
push
pop
xchg
rol
ret
fisubrs
adc
cmp
stos
les
mov
adc
daa
xchg
scas
xchg
lahf
loope
sub
mov
push
mov
cltd
pop
xchg
into
inc
sub
cwtl
mov
sahf
mov
cltd
dec
lret
xchg
int
mov
loop
jg
sub
jb
icebp
call
dec
push
arpl
pop
outsl
pop
inc
ret
test
out
or
dec
pop
and
repz
push
imul
into
push
in
enter
repz
out
cmp
cmpsb
or
pop
loope
push
daa
dec
pop
pop
mov
mov
pop
notb
pop
pushf
mov
mov
or
pop
ret
lret
sahf
out
jl
and
push
dec
pop
popf
loopne
ljmp
cmp
jg
inc
adc
outsb
arpl
in
adc
jne
jp
push
xchg
add
out
std
push
faddp
outsb
ret
jo
add
test
jg
push
add
xchg
std
sbbb
lret
xor
push
xor
pop
push
cs
cmpsl
mov
outsl
pop
dec
pop
stc
sub
in
inc
push
popa
pop
mov
cmp
add
pop
lahf
mov
xlat
adc
cli
xchg
mov
nop
pusha
sahf
add
or
orl
bound
das
outsb
xchg
je
pop
mov
jg
pop
xor
inc
es
push
cltd
mov
out
fcoms
mov
pop
call
add
ret
add
lods
xchg
addl
jnp
and
and
insb
add
xchg
dec
push
pop
out
ficompl
and
imul
jnp
fs
mov
sub
scas
cwtl
je
pop
pop
ss
mov
into
repnz
xor
outsb
test
cmpl
pop
cli
repz
pushf
popf
pop
sbb
add
scas
and
and
mov
pop
jbe
lcall
mov
push
shrb
mov
lret
or
mov
lock
lahf
loope
and
stc
sbb
sbb
push
and
les
mov
idivl
sbb
aaa
aad
orl
jae
in
leave
or
cmp
lock
add
out
mov
rol
add
fldcw
jo
dec
lods
jbe
add
mov
das
mov
arpl
cld
in
cwtl
std
push
dec
dec
loop
mov
std
inc
imul
ret
push
inc
mov
sti
rclb
fwait
in
or
sbb
xchg
jnp
into
push
mov
cld
shrb
notl
cld
popa
cwtl
xchg
gs
add
js
push
pop
ja
fs
out
add
sbb
jmp
jnp
xor
mov
jp
sub
pop
jae
call
dec
inc
mov
sub
xchg
rcll
jno
sub
idivl
notb
pushf
or
scas
sbb
jmp
push
pop
xchg
rcrl
dec
adcb
call
in
repnz
xorb
push
push
lcall
pop
sbb
and
test
mov
xchg
inc
int3
arpl
add
jmp
jl
mov
test
add
dec
jae
jmp
dec
jnp
pop
mov
jbe
mov
push
sub
rcl
mov
dec
test
cs
push
inc
push
adc
out
aas
cmp
lret
stos
adc
idiv
xor
adc
arpl
aam
inc
call
mov
inc
iret
add
adc
pop
jge
add
je
insb
push
push
cmp
nop
jl
pop
dec
add
rclb
push
dec
pop
xor
lahf
xchg
mov
out
inc
and
mov
rcrl
test
fmull
in
mov
int
imul
add
jge
bound
pop
sbb
leave
add
inc
pop
push
adc
ljmp
lods
movsl
cld
out
pop
mov
cmp
mov
dec
sub
mov
adc
imul
in
imul
and
out
push
adc
dec
push
popa
fadds
or
push
push
mov
adc
int
cli
cmp
sub
cmpsb
push
push
add
mov
push
dec
scas
dec
cli
cwtl
test
fnstcw
aad
shr
sbb
cmp
lds
dec
sub
rorl
sbb
dec
push
push
pushf
and
pop
mov
sub
xor
inc
inc
subl
mov
loopne
in
fwait
sub
xchg
ds
pop
loope
ds
out
mov
clc
mov
dec
jne
mov
and
pop
insl
or
mov
xchg
mov
push
sbb
sbb
inc
adc
cs
cld
adc
mov
shl
cwtl
mov
mov
int
in
es
jmp
shl
or
xchg
sbb
bound
cld
ret
cld
ret
fisttpll
inc
call
pop
jnp
mov
rcrl
jbe
subl
inc
mov
mov
sbb
aam
jae
ljmp
out
mov
jmp
stc
mov
push
xchg
ret
mov
pop
pushf
mov
stos
mov
adc
out
shlb
push
out
jnp
nop
ret
xor
orl
lods
mov
pop
aas
mov
dec
sbb
mov
into
xor
jecxz
xor
fadd
cs
jle
jne
pop
arpl
test
add
mov
imul
imul
rorb
sbb
sbb
push
repz
jg
mov
jno
sahf
push
xor
xchg
imul
aas
aam
gs
pop
nop
scas
xchg
mov
adc
mov
popa
popa
mov
scas
xlat
xor
aad
mov
xlat
push
xor
scas
fnstsw
xor
mov
pushf
push
jecxz
aaa
mov
push
fisubs
jecxz
mov
push
arpl
pop
jb
ret
nop
lea
push
adc
lret
popa
movsb
loopne
cmpsl
xchg
mov
lret
push
cld
jp
lds
sub
cmpsl
dec
in
pop
adc
jno
lods
leave
sub
dec
xor
mov
dec
add
push
mulb
xlat
jb
cmc
cmp
add
dec
mov
jge
aas
jecxz
push
xchg
and
in
shlb
int
fcmovu
cmpsb
and
mov
adc
lds
stc
decb
into
inc
xchg
inc
push
aam
jmp
push
pop
xchg
mov
mov
xchg
pop
arpl
adc
mov
pop
aad
shll
movsl
add
in
push
add
push
mov
mov
insl
mov
test
cmp
sub
sub
adc
aaa
fidivrl
popa
fucomp
int3
and
insb
xor
insl
inc
xchg
icebp
sbb
mov
mov
adc
icebp
lahf
mov
sub
dec
notl
push
stc
jb
pop
xchg
nop
insl
pop
mov
mov
and
and
pop
xor
rcrl
scas
dec
mov
mul
insb
jo
jbe
mov
dec
jge
mov
sbb
cmp
jg
cmc
xchg
mov
pop
inc
dec
add
cwtl
hlt
cmp
or
mov
adc
lcall
xor
rcr
xlat
inc
and
cmp
imul
addr16
je
rcrb
mov
pop
inc
mov
and
push
dec
cmpsb
xor
inc
pop
mov
out
sarb
jmp
adc
divl
jne
in
sub
out
ret
into
pushf
hlt
lahf
jecxz
sub
cmp
std
and
sbbl
adc
sbb
mov
mov
mov
stos
ljmp
push
cmp
push
jb
into
popa
jae
in
popf
scas
or
mov
rclb
adc
jp
cli
sahf
int
int
sbb
pop
push
fisubrl
enter
adc
pop
imul
iret
mov
pop
xchg
in
lods
ljmp
mov
movl
cmp
xchg
mov
insl
xchg
je
mov
je
andb
cltd
test
inc
dec
mov
mov
adc
inc
jp
in
inc
fs
dec
add
mov
bound
dec
scas
rclb
inc
dec
sbb
arpl
xor
xor
fwait
inc
cmp
sub
mov
pushf
xor
inc
xlat
add
setg
inc
enter
mov
jb
inc
and
push
mov
cmp
mov
or
fistpl
popf
subb
jns
fidivrs
ret
add
push
ret
ja
call
jb
inc
call
push
and
pop
xor
test
in
loope
jno
in
push
sbb
fildll
lcall
mov
shlb
lahf
xor
int
loop
mov
repnz
scas
inc
sbb
jno
sub
imul
xor
loop
test
out
pop
fists
cmpb
fcompl
pop
adc
in
push
jmp
pop
js
hlt
in
jl
into
adc
cmpsb
test
jp
jge
sub
or
mov
xor
adc
xor
aad
add
dec
jb
outsb
lds
orb
hlt
movsb
cmp
add
out
dec
cmp
mov
mov
mov
dec
cmp
mov
ret
pusha
mov
jb
add
test
push
jne
sahf
lea
and
insl
mov
adc
loope
inc
or
jne
sub
in
cmc
lods
in
in
int
pop
xor
dec
add
mov
ds
movsl
mov
test
roll
loopne
repz
sbb
dec
inc
cs
out
mov
popa
lods
ss
push
mov
sbb
jecxz
ror
jecxz
rep
xorl
gs
jne
inc
arpl
and
and
rol
jecxz
rep
xorl
gs
jne
inc
arpl
and
and
rol
jecxz
rep
xorl
gs
jne
inc
arpl
and
and
xor
ret
not
cmpsl
xorl
lcall
add
mov
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
dec
popf
stos
leave
and
cmp
rcr
xchg
add
pop
shlb
cltd
adc
inc
fsts
stc
jb
rcrb
xchg
or
mov
loop
repnz
and
fists
sbb
sbbb
sub
pop
rcrl
or
or
ljmpw
pop
xor
jno
mov
xchg
imulb
adcl
dec
sbb
mov
inc
dec
push
notb
push
out
cmc
pop
pop
jns
dec
inc
push
arpl
jg
push
icebp
add
and
mov
lret
xor
or
ret
sbb
dec
xlat
cmp
lods
lods
scas
inc
cltd
push
pop
mov
lods
stc
arpl
jo
xchg
pushf
shr
dec
sub
rol
testl
repnz
mov
cmp
adc
pop
fnstenv
pop
mov
xchg
xchg
jbe
int3
xchg
jns
xchg
stos
cmp
mov
pop
mov
xor
or
xchg
loop
xor
pop
test
stc
lret
sbb
mov
mov
popa
xchg
pop
jo
fs
aad
lds
daa
movsb
jno
adc
repnz
rorl
push
mov
add
fistps
lds
mov
fwait
push
nop
add
mov
imul
mov
mov
xchg
sbb
sbb
and
aad
lds
xchg
push
leave
stc
jb
sbbb
or
pop
rorb
jns
imul
mov
push
leave
stc
jb
sbbb
or
pop
rorb
jns
imul
les
push
mov
out
cwtl
sub
xchg
pop
sahf
fcoml
pop
push
aad
scas
xor
sbb
aam
mov
and
je
push
push
ds
push
cmpsb
add
aad
and
mov
inc
aas
scas
mov
jecxz
popf
fimuls
fidivl
sti
das
lds
stos
leave
jp
leave
push
xor
adc
jmp
js
outsb
dec
xor
jmp
addr16
or
mov
or
sub
xor
push
popa
cmp
test
inc
in
insl
xlat
icebp
test
xchg
jbe
ss
aam
pop
pop
xchg
call
mov
mov
popf
popa
rep
jecxz
pop
inc
pop
cs
in
jl,pn
clc
lods
cwtl
out
imul
data16
or
cmp
inc
mov
pop
shl
mov
icebp
rolb
mov
loop
push
cmp
adc
adc
fisubrl
xchg
ja
test
imul
je
fdiv
lea
sbb
push
jge
sub
push
rcll
cli
mov
popa
in
cmc
mov
aam
arpl
dec
mov
popf
daa
mov
pusha
dec
fbstp
inc
pop
stos
clc
sub
cmpsb
push
and
enter
rcr
cmp
xchg
inc
push
shll
inc
xchg
push
xchg
mov
call
es
cmp
loop
and
jae
out
test
inc
adc
cmpsb
test
fldcw
mov
jecxz
jg
loope
mov
and
fisubl
mov
fwait
xchg
mov
out
mov
jno
mov
inc
stos
icebp
jg
js
imul
repz
add
ret
mov
xchg
xchg
sub
add
call
outsl
mov
shlb
imul
sbb
xor
jbe
inc
mov
call
sub
cli
add
or
aaa
clc
push
cmp
or
dec
adc
mov
gs
fnstenv
lock
or
js
lret
vcmpss
out
fnstsw
imul
jae
xor
fsubl
stc
sub
outsb
popa
xor
rcl
jbe
or
xor
cli
mov
mov
cmpsb
js
lret
fnstsw
mov
daa
stc
add
jne
xchg
mov
push
pop
adc
mov
out
jnp
pushf
dec
inc
nop
and
jmp
cltd
cmpsb
add
sti
fsubs
pusha
fists
cmp
stos
pushf
lret
jecxz
mov
pop
push
movsl
xor
and
stos
daa
lret
jl
outsb
inc
xchg
divb
mov
jp
and
adc
je
orb
fstpl
es
inc
dec
cmp
fimull
push
adc
leave
jge
lea
shll
adc
pop
mov
ds
mov
push
sbb
cmp
outsl
sbb
in
push
aam
in
add
loopne
add
and
push
mov
out
push
add
insb
psrlq
scas
cmp
mov
call
or
mov
jmp
lods
fistpll
js
shl
adc
and
push
mov
out
movsb
gs
and
insl
adc
leave
out
mov
bound
xor
cmpsb
jmp
mull
cmpl
pop
or
push
inc
xchg
pushf
push
xor
pop
xorb
jp
add
mov
xorb
fs
fwait
xchg
sbb
cmp
mov
es
pop
cwtl
and
inc
movsl
mov
pushf
push
rcll
imul
adc
xlat
push
es
cmp
movsb
xchg
push
das
mov
and
xchg
xchg
cmpsb
mov
ret
xor
fwait
in
pop
repz
mov
or
stos
cltd
mov
add
dec
jae
mov
mov
sub
outsl
jle,pn
ror
out
data16
cmp
decl
pop
cli
rclb
pop
mov
push
int
jmp
pop
dec
test
xchg
jl
insb
jne
in
repnz
lcall
popf
pop
scas
testl
jnp
mov
xor
sbb
cmp
pushf
mov
sub
mov
mov
sub
subb
xor
lahf
dec
mov
in
frstor
setge
push
push
push
or
push
in
mov
mov
mov
sahf
iret
orb
sbb
addps
cmp
testl
insb
and
and
xlat
and
lret
cmp
lcall
dec
lods
push
sbb
xchg
cltd
ds
cmp
dec
mov
mov
push
and
repz
sbb
dec
dec
loopne
adc
mov
sarb
stc
ja
or
mov
xor
dec
lahf
xor
xchg
loope,pn
jnp
inc
jl
or
pusha
out
fisubs
dec
add
cwtl
adc
jg
stos
or
xchg
mov
dec
iret
cs
stc
mov
call
mov
jmp
dec
cmp
xchg
sbb
or
inc
push
addr16
lods
mov
aad
sbb
inc
xor
int
popf
add
int3
sbb
pop
or
jb
dec
hlt
cltd
sub
adc
jns
fisubl
add
add
jp
loop
ret
rorl
and
jb
das
inc
lahf
sbb
leave
sbb
push
adc
pop
mov
push
repnz
movsb
adc
repnz
adc
subb
icebp
hlt
add
cmpsl
icebp
adc
arpl
lea
sbb
push
mov
js
outsl
add
bndldx
jmp
or
leave
pmullw
push
movsl
fldenv
adc
pushf
lock
xor
aam
mov
mov
sahf
and
imul
test
andl
and
or
mov
mov
push
jge
fildl
mov
roll
sub
sbb
cwtl
push
negl
icebp
add
int
test
and
jo
ror
and
aas
psubusw
fcmovne
test
in
loop
mov
jo
mov
fdivrl
sub
aam
mov
xchg
mov
gs
and
scas
sbb
fadds
cltd
popa
pusha
test
mov
fidivl
imul
sbb
mov
cli
pushf
pop
sub
cmp
in
out
push
sbb
ja
pop
xorl
cmp
mov
cmp
jbe
lods
dec
push
jns
push
adc
iret
dec
mov
fistps
cmc
test
jo
jne
cmpb
dec
loopne
xchg
sbb
mov
xor
xchg
mov
jae
cmp
imul
rcrb
les
cmp
add
push
lcall
pusha
jo
shrb
mulb
fnstcw
adc
adc
inc
mov
scas
scas
fs
push
dec
int
push
andb
addr16
dec
pop
ret
stc
dec
or
sbb
in
es
sbb
lock
test
dec
jmp
in
lcall
stos
ljmp
inc
loop
sti
mov
mov
mov
scas
aas
pop
adc
push
cmp
ror
or
dec
sbb
pop
repnz
push
sub
fdivr
jnp
movb
leave
repnz
add
pushf
fmull
push
mov
sbb
stos
cmc
aad
js
mov
mov
inc
adc
dec
push
xchg
jmp
cmpsw
push
stos
pop
xor
arpl
add
dec
mov
push
mov
jne
pop
loopne
es
ret
dec
cmpsl
mov
jl
int3
xchg
dec
scas
xchg
std
mov
mov
fidivs
dec
rcrb
mov
dec
or
sub
imul
mov
xchg
xchg
shlb
mov
dec
pusha
jae
ficomps
sub
icebp
mov
dec
mov
and
nop
ja
xchg
fwait
stc
sbb
pop
mov
inc
je
jnp
inc
mov
cli
jbe
mov
dec
sbbb
xor
mov
mov
cmpsl
xor
push
es
test
or
in
test
nop
inc
pop
rcrl
jl
sub
cltd
rorl
loopne
mov
aas
out
repz
sub
push
add
lret
cmp
push
dec
sub
jne
movsl
pop
fninit
jb
xor
popa
xchg
movsl
and
and
ljmp
sbb
shlb
add
pop
pop
dec
ficoms
mov
xchg
push
jno
imul
push
sbb
popa
mov
push
sub
repz
mov
cmp
push
mov
jo
cmp
pop
std
sub
lds
lds
push
stos
and
jne
jbe
arpl
jns
std
push
or
mov
cld
cvtps2pd
pop
rcrl
test
hlt
fnstenv
mov
repz
xchg
lds
js
dec
out
and
loop
mov
push
sub
test
dec
push
cwtl
xchg
inc
pusha
push
in
adc
cmp
lret
xlat
mov
lret
test
jge
popa
push
pop
xor
cmp
rorl
push
adc
pop
push
ficompl
mov
dec
lret
xchg
or
aam
cmpsl
cmc
push
jo
xchg
cmpsl
aad
push
fs
add
inc
pop
xor
mov
shl
mov
dec
leave
and
sbb
pop
pop
icebp
xlat
lret
stc
sti
test
fwait
sarb
jnp
pop
lcall
shrb
mov
adc
aad
sarb
xor
mov
negl
xor
outsl
in
pop
adc
xchg
push
repnz
add
leave
shr
adc
imul
fwait
sub
jo
test
hlt
test
popf
push
push
or
mov
imull
cli
pop
sbb
mov
jl
shr
fldl2e
and
adc
cltd
pop
cmpps
dec
jbe
repnz
or
ss
and
lods
push
stos
pop
xchg
in
je
sbb
lret
and
inc
dec
push
mov
cmpsl
jb
jp
xor
push
test
mov
in
mov
imul
mov
fdivrl
sbbb
sub
or
pop
and
rorb
mov
gs
mov
mov
leave
push
cli
sbb
jae
cmp
mov
sub
push
cwtl
adc
jb
mov
push
mov
rcrb
mov
cli
decb
cmp
cmpb
roll
fcmovnu
out
daa
xlat
push
sahf
xor
add
lea
cli
insb
lret
inc
insb
jp
mov
pusha
loop
xor
je
adc
cmpsl
aaa
sbb
popf
push
push
in
xor
subb
xchg
cmp
hlt
in
jg
imul
sub
jne
out
cmpl
and
add
jg
pop
outsb
pop
repnz
sub
popa
fwait
pop
pop
cs
mov
xchg
leave
inc
or
bswap
stc
mov
aas
ja
sbb
std
xchg
inc
jae
cld
out
popa
and
test
xchg
lahf
scas
sub
inc
decl
shll
mov
icebp
adc
cmp
mov
xchg
pop
decb
call
scas
cmpsb
and
movsl
movsb
add
adc
or
ljmp
mov
pop
mov
and
pusha
sti
mov
dec
cmc
pop
jno
jp
repnz
push
sbb
pop
inc
xchg
mov
xor
in
scas
mov
jne
fstl
mov
into
mov
je
mov
clc
in
in
xorl
xor
dec
aad
push
sub
call
lods
lods
scas
mov
jns
arpl
frstor
pop
imul
lods
adc
test
loop
fdivp
inc
xchg
mov
push
inc
push
mov
lret
aad
out
jl
frstor
out
outsb
les
pop
xor
pop
xchg
into
gs
out
out
in
ds
mov
fucomip
xchg
push
push
xchg
out
aaa
cli
stos
iret
out
or
xorl
push
jp
and
push
mov
mov
dec
pop
popa
iret
xchg
add
mov
mov
pcmpeqb
push
stos
stc
cmpsl
fisubs
in
jg
or
inc
loope
lods
xchg
cwtl
addl
mov
mov
in
jl
jbe
repnz
movsb
ret
test
andl
aam
add
sbb
sbb
lahf
out
fistpll
addr16
fs
and
adc
inc
out
mov
imul
pop
stos
pusha
cmpsl
xor
out
test
movsb
jbe
sbb
pop
jge
rcl
dec
jmp
sahf
dec
jae
push
in
repnz
and
leave
mov
ljmp
sub
mov
mov
inc
pop
pop
shlb
mov
aaa
test
out
xlat
and
add
mov
jl
sub
xchg
sbb
or
arpl
les
and
decb
enter
shrl
cmc
dec
leave
xchg
nop
and
adc
jle
xor
jp
stc
or
jg
add
test
call
inc
test
imul
pop
shr
jb
mov
fdiv
mov
lock
dec
or
xor
repnz
jg
xchg
mov
dec
int
dec
lcall
and
aam
enter
js
cli
or
adc
and
mov
push
push
pop
jo
mov
push
je
into
or
jp
fiaddl
mov
data16
test
pop
mov
jno
out
lret
jmp
shl
outsb
xor
push
mov
mov
cmpsb
mov
mov
xchg
sbb
lahf
mov
popa
xchg
jno
subl
dec
cltd
aad
cmp
push
addr16
lret
ljmp
xchg
add
je
outsl
push
xchg
je
lea
pop
pushf
sub
or
pop
shlb
push
in
and
mov
out
vpminub
push
daa
push
cmp
cmpsl
mov
insl
sbb
mov
or
fwait
jns
fcomps
jns
xor
or
cld
cmpsb
insl
push
pop
inc
push
scas
movsb
ja
mov
in
lahf
lock
lret
fadd
lods
mov
int3
xor
xor
xor
je
je
insb
dec
lret
js
out
jno
mov
iret
sbb
cmpsb
mov
push
scas
sbb
out
push
mov
sbb
mov
in
in
cmp
dec
cmpsl
and
push
sub
adc
mov
xor
and
ficompl
out
or
jg
inc
scas
stc
pop
cld
sbb
mov
ficomps
adc
fwait
sub
ret
ret
movzbl
push
addr16
loopne
je
cmpsl
cmp
fildl
xchg
andb
inc
xchg
movsb
cmp
les
mov
cltd
cmc
add
arpl
push
js
rclb
test
mov
divl
subl
rep
sub
inc
lock
pop
scas
inc
sub
jns
test
dec
xor
aaa
mov
sbb
testl
push
cmpsl
fnstcw
arpl
scas
and
push
mov
lods
dec
arpl
leave
fldenv
dec
pushf
stc
jne
shl
out
inc
cwtl
pop
addr16
add
shlb
ror
js
mov
and
cli
add
jb
xorl
cmp
xchg
mov
loope
addr16
int3
push
pop
cli
icebp
mov
std
add
fcomip
outsl
int3
sub
jecxz
push
jno
inc
andb
fdivs
push
dec
jmp
cltd
ret
push
dec
mov
cmc
pushf
ret
mov
sarl
data16
jecxz
cmp
addr16
in
scas
inc
xor
add
push
pushf
and
push
xor
divb
lret
pusha
jmp
repnz
add
in
add
rolb
fildll
test
scas
sub
add
repz
dec
sub
pop
push
ret
sub
lods
mov
nop
mov
mov
movsb
movsl
mov
movsb
xor
pushl
push
mov
neg
ret
inc
dec
mov
mov
and
push
mov
mov
pushf
and
adc
rol
scas
fs
mov
fstpl
jge
jle
sub
jp
xor
aaa
jp
loop
popa
mov
jle
call
xor
jno
xor
ja
sub
subl
rcrb
lcall
shlb
jo
pop
sub
jbe
pop
inc
xchg
mov
pop
push
mov
mov
out
mov
add
inc
fnsave
testb
out
xchg
push
movsb
ja
loope
leave
enter
fs
dec
jnp
into
imul
out
insl
cmpb
jmp
leave
mov
dec
shrl
ja
and
and
push
lret
ret
sub
cmp
sbb
adc
insl
and
into
gs
mov
jb
cwtl
and
inc
sti
loop
in
fwait
or
cmp
out
and
subb
nop
xchg
mov
push
cmp
pop
cmc
je
cmp
push
subb
sub
or
jl
inc
sub
xchg
ljmp
add
adc
nop
aam
pop
ficomps
and
pop
lcall
xor
inc
pop
movsl
cmpsl
std
in
jle
or
xchg
xchg
pop
xchg
negl
sbb
lock
icebp
xor
push
mov
jg
lret
and
sbb
adc
xchg
in
stos
xor
cmp
das
sbb
jne
mov
in
cmpsl
sbb
pushf
xor
push
xchg
outsl
cli
hlt
dec
scas
aam
push
popa
xor
pushf
imul
xchg
lods
ret
lret
dec
dec
aad
mov
jae
sbb
sbb
dec
add
ljmp
arpl
int3
pop
xor
dec
jl
call
mov
rclb
lahf
cmc
pop
lea
iret
xor
mov
bound
mov
ljmp
lods
mov
adc
xchg
out
stos
sub
cld
mov
out
test
mov
xchg
jg,pt
mov
aaa
adc
lods
mov
sbb
pop
icebp
jb
pop
pop
mov
sub
cwtl
mov
xchg
ret
test
push
push
sub
jae
inc
pop
inc
push
dec
aas
push
xchg
push
jecxz
adc
mov
ss
add
cltd
pop
dec
test
jecxz
sti
inc
fldt
xchg
lods
aaa
not
dec
mov
movsb
inc
mov
pop
mov
je
fstpt
popf
outsb
ret
orb
popf
dec
clc
pop
or
in
pop
ret
push
mov
push
sbb
sub
daa
pop
inc
adc
lea
xor
in
cwtl
sub
mov
push
mov
xchg
lods
sti
clc
cmp
sbb
mov
imul
mov
pop
adc
adc
fcoms
inc
sub
into
shl
xor
int
arpl
xchg
inc
jnp
push
mov
mov
adc
dec
adc
mov
or
push
jnp
insb
testb
stos
xor
mov
in
mov
or
das
notl
insb
out
cli
pop
outsb
pop
xor
jecxz
das
ftst
enter
xchg
dec
scas
out
sub
mov
jnp
iret
and
jl
loopne
pop
inc
lret
xor
rorl
cld
sbb
imul
out
mov
cmp
dec
mov
ret
cli
aaa
cmp
sti
jg
sbb
mov
fisubrs
popa
cmp
mov
or
aam
push
icebp
pusha
cld
sbb
fst
dec
int
dec
aad
testl
in
mov
xchg
shlb
mov
fcomps
insl
loope
mov
inc
xor
imul
movsl
add
aad
jo
xlat
sbb
or
sti
mov
jmp
jae
cld
push
or
mov
xor
cmpb
xchg
gs
xor
xchg
ret
mov
dec
or
sbb
mov
xchg
dec
dec
mov
xor
xchg
adc
push
outsl
movsl
inc
int3
arpl
js
sbb
idivl
mov
adc
xchg
mov
add
test
rorl
mov
out
decl
je
loop
mov
cmp
lds
in
mov
xor
pop
addr16
hlt
je
stos
leave
add
ret
pop
cwtl
xor
lret
xchg
mov
outsl
popf
and
mov
pop
and
jne
fsubrl
gs
pop
repnz
mov
pop
aad
out
push
push
cltd
idivl
loop
dec
pop
dec
lea
fidivrl
mov
jno
and
clc
aad
inc
rorl
inc
shll
adc
stos
mov
movsb
inc
jne
out
adc
sbb
subl
icebp
icebp
cwtl
shl
sbb
mov
sbb
mov
mov
xchg
test
sub
in
repz
mov
movsb
je
out
paddsb
and
loope
sub
and
pop
stos
jecxz
lret
dec
push
insl
and
lods
mov
xchg
push
shll
lcall
mov
or
in
adc
sbb
test
xor
leave
stc
jb
sbbb
or
pop
rorb
jns
imul
mov
push
leave
stc
jb
sbbb
or
pop
rorb
jns
imul
mov
push
mov
xchg
xchg
or
ret
dec
out
ret
jge
insl
stos
pop
sbb
inc
flds
bound
sub
cmp
xor
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
roll
adc
inc
mov
jae
cmp
or
jnp
imul
add
xor
inc
lret
push
sti
arpl
push
adc
jmp
sarl
imul
add
xor
inc
rclb
arpl
jae
addl
push
pop
fnsave
test
dec
mov
jo
push
sar
aaa
mov
loopne
rep
repnz
xbegin
jae
fs
fwait
add
add
push
xor
or
and
rclb
cmpsb
out
sbb
xchg
pop
out
push
adc
hlt
xchg
push
lret
mov
hlt
xchg
imul
out
shrl
aas
dec
mov
incb
push
adc
xchg
das
jg
insb
cmp
ss
sbb
cmp
je
loop
fistpll
mov
or
jl
xchg
pop
sub
testb
add
data16
fcomps
jmp
hlt
xchg
sub
pop
sbbl
mov
mov
inc
rcll
arpl
jae
adcl
and
push
sarl
jb
call
iret
jb
add
daa
stc
push
xchg
outsl
repz
aaa
mov
xchg
push
xchg
push
xchg
fwait
outsl
mov
imul
xchg
xor
pop
sbb
or
jle
pop
loope
cmpsb
cmp
xchg
repnz
mov
dec
mov
arpl
jae
orl
cmp
dec
sarl
imul
add
xor
inc
lret
push
sti
arpl
jae
orl
cmp
dec
sarl
imul
add
loop
ret
hlt
hlt
mov
lcall
dec
enter
insb
fistps
push
pop
repnz
nop
add
in
and
push
fisttpll
loop
mov
aad
push
mov
aaa
mov
test
push
adc
xor
mov
pusha
jns
mov
inc
out
mov
test
mov
daa
sbb
sbb
jo
sbb
mov
shrl
sahf
jecxz
sbb
mov
and
lcall
xchg
mov
outsl
xchg
imul
xlat
fsubrs
inc
add
dec
push
cmp
cwtl
orl
adc
ficoms
outsb
mov
adc
addr16
and
enter
adc
jp
ds
xchg
add
fadds
pop
cmpsb
cmp
push
cmovp
or
sbb
loopne
jns
pop
jno
fadds
sbb
or
leave
aaa
pop
inc
jecxz
and
adc
cmpsb
push
je
in
cmp
in
ret
xchg
test
xor
xor
mov
xchg
jo
inc
sahf
dec
inc
scas
pushf
stos
pop
push
shl
scas
pop
aas
sbb
jg
xchg
cmc
movsb
jo
sbb
jbe
inc
pop
add
xchg
mov
fimuls
push
shll
mov
mov
inc
aas
in
adcl
call
je
add
lock
dec
call
lods
jge
xchg
adc
popa
call
sbb
mov
add
insb
test
lods
sbb
jne
mov
cs
dec
stc
and
clc
pop
sbb
addl
add
mov
sub
imul
mov
jae
xlat
jns
and
cmp
add
and
jbe
lahf
pop
lahf
inc
movsb
cmc
xchg
mov
pushf
jo
mov
push
push
push
cwtl
sarl
mov
adc
loopne
pop
adc
mov
sbb
push
add
stos
pop
mov
sbb
inc
xchg
xchg
addr16
inc
je
ja
mov
pop
outsl
pop
gs
pop
loopne
fs
insl
nop
jle
push
add
sbbb
push
xchg
or
stos
popa
mull
add
xor
inc
vcvttss2si
xor
cmp
mov
mov
add
xor
xchg
inc
jl
movsb
icebp
popl
stos
pop
push
hlt
int3
in
fsubrl
in
mov
int3
xchg
jae
mov
syscall
movsb
dec
sub
jns
aad
xchg
fimull
outsb
sbb
jg
mov
test
and
inc
and
push
aas
dec
and
cmc
jl
adc
xchg
lret
push
push
mov
adc
dec
not
sub
jle
push
mov
pushf
push
jbe
inc
inc
int3
sub
mov
xchg
repnz
lds
push
xchg
lds
pop
push
mov
pop
aas
inc
xchg
cmp
stos
hlt
add
ljmp
mov
int3
or
fistps
xchg
imul
addb
test
mov
sarl
pop
stos
sarl
test
scas
mov
sub
cmpsb
insl
loop
xor
sub
js
jle
test
xchg
rol
mov
lods
dec
ss
fdivrs
movsb
or
pop
lcall
xchg
outsl
cltd
test
test
mov
mov
jb
aad
sbb
shll
xor
pop
mov
cmp
repz
arpl
movsb
aad
int
and
adc
cmpl
aaa
adc
test
rcrl
mov
dec
mov
and
leave
pop
hlt
jl
icebp
mov
imull
in
hlt
test
pop
mov
fsubrs
xchg
dec
imull
addr16
mov
cmpsb
repz
mov
aas
pop
icebp
mov
lcall
push
mov
adc
lods
lsl
mov
in
xchg
shll
out
out
stc
movl
hlt
mov
test
adc
lahf
push
and
jns
ret
loope
addr16
pop
dec
inc
add
xor
inc
int3
in
mov
adc
xor
stc
cmpsb
aad
fdivp
daa
movsb
fwait
lcall
cld
mov
add
sti
mov
add
xor
int
cli
jns
push
inc
ret
cwtl
dec
ja,pt
sub
pusha
jmp
dec
jmp
cmpsb
xchg
test
insl
mov
lcall
imul
xor
test
call
jecxz
and
lds
mov
xlat
dec
bound
lea
sub
jb
push
and
loopne
sub
dec
xchg
inc
loopne
mov
rclb
imul
mov
xchg
inc
and
out
pop
in
sbb
int3
pushf
jno
pop
mov
rorl
sub
mov
mov
stc
pop
out
ja
repnz
mov
loopne
jecxz
scas
and
and
cltd
xor
pop
std
adc
cmc
cmp
jmp
xchg
mov
lcall
xchg
mov
pop
adc
or
std
cmpsb
stos
es
ljmp
add
push
pop
xor
xchg
pusha
in
in
je
orb
les
out
mov
dec
mov
jecxz
adc
out
insl
adc
push
pop
sbb
outsl
dec
movsl
dec
hlt
mov
dec
call
dec
adc
dec
cmp
in
cmp
ljmp
fcoml
mov
fcom
jmp
xchg
data16
mov
popa
in
or
cwtl
std
sbb
cmp
sbb
into
or
jb
dec
cmpsl
sub
jmp
sbb
decb
mov
stc
outsb
fwait
stos
outsl
pop
pop
dec
cmpsl
int
fiadds
int
push
inc
mov
mov
clc
adc
push
dec
outsl
sub
andb
jmp
sbb
leave
mov
sub
xor
pop
je
lret
movntps
imul
or
xor
xor
jno,pn
pop
mov
add
and
in
ffreep
xchg
cltd
mov
push
scas
leave
aas
out
xchg
pop
xchg
push
add
inc
xor
enter
dec
sub
dec
mov
mov
outsb
repz
cli
xchg
pop
add
arpl
lea
inc
xor
sarl
lret
mov
movsb
inc
sbb
dec
add
xchg
lcall
or
in
shl
xchg
sbb
jbe
mov
fiaddl
fs
xchg
push
jbe
jb
stos
dec
and
sbb
sbb
testl
jns
xchg
pop
ret
das
mov
mov
mov
mov
and
mov
faddp
fucomip
jnp
sahf
incb
push
add
push
daa
inc
aaa
mov
test
pop
test
push
in
out
pop
jge
xor
push
cs
imul
rcrl
in
call
fcmovb
cmp
dec
mov
shrb
and
mov
clc
imulb
push
mov
xor
test
ret
les
popf
push
out
cmpsb
mov
sub
cmp
xorb
test
imul
insb
not
std
mov
jle
jp
cltd
es
sti
bound
pop
imul
fistpll
jl
pop
or
mov
fisttps
jecxz
push
ja
push
lahf
dec
sbb
ss
into
jbe
dec
mov
cmp
adc
xchg
or
push
daa
addr16
lock
ljmp
or
add
fisttps
dec
inc
repz
mov
bound
fdivp
pop
imul
inc
js
dec
add
xchg
movsl
push
push
out
mov
fildl
jmp
or
dec
mov
loopne
jmp
jmp
mov
and
into
nop
xchg
jno
cli
mov
scas
out
fstl
dec
adc
ss
pop
push
add
fstpl
fwait
adc
or
in
pusha
cmp
or
aas
out
mov
mov
jmp
mov
iret
aaa
dec
shll
mov
sbb
aam
fs
cmp
cmc
dec
dec
mov
leave
fistpll
and
sti
hlt
or
repz
test
and
jecxz
push
das
mov
mov
les
nop
mov
xchg
cs
in
in
pop
xor
sbb
mov
mov
das
push
cmp
sbb
mov
inc
aad
jl
lock
mov
add
clc
adc
adc
mov
mov
mov
lods
jecxz
out
call
jle
pop
addb
mov
and
lea
push
add
pusha
and
idiv
rcrl
sub
xchg
aam
fmuls
dec
out
scas
xchg
stc
mov
dec
cwtl
movsl
cmpsl
xchg
and
mov
into
jmp
lds
xchg
add
fcompl
icebp
jne
xor
and
stos
push
arpl
jbe
push
es
push
insl
or
xor
test
insb
push
es
mov
mov
or
and
jp
lret
pop
mov
sbb
cmpsb
xchg
cmp
sub
push
nop
fstpt
mull
inc
and
test
inc
push
mov
fnstsw
lcall
xor
jecxz
ja
and
out
lea
add
jge
inc
xchg
pop
pushf
out
hlt
push
and
adc
jnp
sti
push
fs
aas
std
pminsw
lcall
dec
xor
insb
mov
add
outsl
cmp
icebp
sahf
pushf
push
sbb
jecxz
stos
enter
call
out
fsts
mov
rol
or
repz
ja
adc
daa
sti
adc
mov
jg
cmp
leave
scas
cltd
call
mov
pop
xlat
movsb
icebp
sar
mov
sub
or
mov
xchg
jnp
nop
sarb
xchg
mov
mov
ss
adc
imul
fcomps
mov
dec
movsb
push
fdivl
cmc
sub
fisttpll
hlt
cmpsb
add
add
lahf
adc
dec
or
xchg
les
dec
in
mov
cli
adc
ja
add
dec
inc
test
and
xchg
adc
and
mov
imul
jg
popf
pop
or
popf
outsb
jmp
icebp
rorb
rol
add
pop
insb
cli
dec
hlt
ljmp
xchg
insb
in
movsl
stos
mov
inc
mov
fs
mov
les
in
insb
les
lahf
pop
xor
jae
push
sbb
xchg
pop
nop
ss
loop
push
out
xor
mov
jl
pop
inc
cwtl
in
daa
movsb
lahf
shl
out
mov
pop
xor
dec
mov
ljmp
scas
out
enter
mov
scas
cmp
xchg
mov
inc
sti
scas
jle
sbb
jae
xchg
insl
clc
xchg
add
call
mov
sbb
aas
dec
in
xor
jne
scas
andb
sarb
movsb
sbb
mov
gs
pop
xchg
or
jb
addr16
jae
lock
ja
add
cmc
popa
popf
lahf
fisubs
jne
jg
sub
mov
push
cwtl
pop
in
xchg
cmpsl
iret
push
jbe
mov
mov
stos
mov
xchg
adcb
xlat
sub
inc
lret
xor
pushf
inc
in
test
xchg
fcmovu
mov
mov
repnz
outsb
cli
in
inc
add
call
jp
sahf
fistpl
sbb
loop
push
pusha
popa
fs
push
jae
push
xlat
cmpsl
cmp
sub
pop
mov
leave
subl
cwtl
mov
test
pusha
aam
inc
out
dec
push
out
sbb
popa
inc
mov
int
loopne
xor
movsb
jge
or
jno
inc
mov
rcll
cmp
inc
fbstp
sub
xchg
inc
inc
mov
sub
push
leave
dec
jle
daa
mov
dec
cmpsl
hlt
push
lods
loopne
into
leave
lods
jne
xchg
pop
addl
test
ds
inc
es
js
inc
clc
sbb
pop
shl
fnsave
dec
inc
and
xchg
push
jnp
and
loop
mov
test
pop
movsb
fadds
mov
clc
out
push
insl
add
in
cld
xchg
cmc
mov
leave
repz
xchg
mov
cmp
mov
mov
lock
and
ffree
pop
sub
out
dec
roll
lods
idiv
push
mov
ret
fwait
cmp
clc
mov
je
xchg
and
ret
mov
or
mov
insb
cltd
subb
jb
mulb
lods
aaa
pop
ja
cmp
mov
es
mov
sub
add
push
pop
mov
js
ja
add
jp
repnz
aas
xor
mov
push
dec
fdivrl
lret
or
and
addr16
cli
xchg
mov
sbb
call
lea
mov
movsl
cmpsl
add
xchg
xchg
inc
push
push
in
pop
dec
mov
cmp
cmpsb
mov
dec
jl
mov
adc
mov
imul
je
xchg
or
pop
sub
scas
shll
xor
lods
fnstsw
sahf
cwtl
jnp
fcoml
inc
insb
loope
mov
mov
dec
je
sti
ret
or
insb
or
inc
aam
mov
xchg
push
or
sub
das
jg
adc
xchg
js
ror
sbb
sub
cmp
push
and
sbb
out
xchg
int3
cli
mov
xor
fscale
or
xor
inc
les
and
or
lock
lret
xlat
stos
jmp
shrb
je
pop
mov
jns
cld
movsb
insl
dec
fcmovnbe
dec
cmc
inc
xchg
lods
imul
or
scas
scas
pusha
mov
daa
mov
ret
and
and
adc
sub
hlt
je
fdivs
mov
outsl
mov
sahf
mov
mov
xor
xchg
pop
jno
jo
mov
push
je
sbb
dec
xor
loop
inc
sbb
cmp
lahf
out
jbe
push
and
lret
out
fnstcw
hlt
mov
into
and
and
insl
fiaddl
pushf
jecxz
mov
mov
insb
xchg
iret
fidivrs
adc
sub
mov
mov
fprem
mov
lahf
push
ss
jb
sbb
aaa
cltd
rolb
xchg
jne
dec
cmp
rolb
lret
das
cmpsb
mov
fadds
push
xor
mov
inc
jg
cmp
xchg
mov
sbb
inc
jecxz
mov
popf
sub
xor
inc
adc
shlb
or
out
or
pop
or
sbb
or
push
out
xlat
dec
out
fiaddl
je
pusha
cmp
shr
aaa
les
mov
inc
fbld
dec
das
xchg
lea
cltd
fnsave
cmpsb
movsb
mov
or
adc
fcmovb
pushf
pop
jmp
add
xor
int
andl
xor
jnp
in
jne
push
scas
pusha
pop
push
rcl
pop
addr16
shl
xor
inc
wrmsr
pop
aam
mov
pop
pop
cld
push
fimull
fsubl
stos
xlat
cmp
mov
popa
and
fcoml
xchg
rolb
call
mov
xorb
outsb
xchg
xchg
pop
cmpsl
mov
pop
inc
scas
test
mov
clc
testl
xor
xchg
std
push
iret
push
xchg
ljmp
lods
xor
or
dec
xor
daa
jge
daa
pushw
ds
xlat
arpl
mov
in
push
mov
fdivrp
iret
sbb
fsubrs
ds
test
test
push
test
push
mov
xor
rol
fs
nop
lock
pop
inc
sub
xlat
loopne
add
nop
mov
dec
cmp
ljmp
outsl
rorb
in
dec
cmpsl
icebp
lods
mov
test
ljmp
int
push
lods
orb
cmp
jecxz
fldenv
leave
cmpsl
add
fidivrl
cmp
clc
mov
jmp
lret
pusha
mov
dec
jge
dec
pop
sti
dec
outsb
scas
nop
mov
testb
mov
enter
lods
das
leave
dec
mov
movsl
fucomi
fidivl
jns
outsl
xor
push
mov
movsb
outsb
or
inc
or
mov
push
iret
sub
lea
mov
dec
into
push
mov
add
cmp
and
xchg
jae
dec
mov
cmp
shr
pop
add
push
jno
les
int3
jge
loopne
mov
pusha
cmp
shll
xchg
rorl
rcrb
xlat
test
jge
fs
mov
das
sti
pusha
jae
mov
out
push
mov
sub
jle
mov
pop
push
xchg
jecxz
stos
insl
add
xor
push
std
jge
mov
dec
push
inc
sub
cli
ss
adc
xor
es
int3
mov
adc
mov
lods
imul
or
inc
cmpb
add
add
mov
mov
mov
out
fdivrl
mov
jbe
sub
rclb
mov
inc
std
inc
push
leave
rcr
mov
test
std
andb
ljmp
ljmp
xchg
inc
andb
lds
dec
call
push
pop
lret
pop
fsubrl
mov
in
sbb
shlb
lods
dec
xchg
fcoml
xchg
jp
sbb
mov
fimull
pop
shl
inc
scas
cmpsl
movsb
jg
mov
stc
jp
arpl
sub
xor
arpl
sbb
jno
pop
sti
les
pop
xchg
xchg
aam
dec
movsb
mov
add
sbb
dec
jnp
xor
or
lds
fnstsw
or
addr16
jl
lock
aam
and
testl
or
mov
sub
in
movsl
sbb
stos
sub
push
out
dec
imul
cmp
push
lods
fisubrs
test
cld
sbb
scas
push
dec
jmp
inc
or
nop
xlat
pop
mov
pop
test
jb
enter
call
xchg
aas
mov
push
push
mov
dec
pop
dec
adc
lcall
loope
mov
jnp
js
jg
test
jbe
jo
movsl
jg
dec
add
pop
iret
add
popf
vmulsd
pop
jl
inc
rep
test
dec
pop
mull
push
cmpsb
mov
hlt
test
jp
mov
rcll
sub
adc
add
adcl
dec
xchg
jne
inc
cltd
les
mov
xchg
mov
jo
stos
dec
push
packuswb
lcall
adc
bound
xor
popf
mov
jb
and
stc
hlt
sub
clc
jno
lods
ds
enter
roll
xchg
push
enter
cmp
pop
xchg
push
in
or
lods
mov
add
or
xchg
mov
rcll
imul
lea
xor
test
mov
pusha
fmuls
daa
test
scas
and
ret
test
jno
mov
pop
push
dec
pop
xchg
cmp
iret
inc
mov
lods
mov
mov
pop
xchg
mov
cmp
data16
push
jge
enter
leave
aad
js
fidivrl
xor
jb
test
mov
ja
pop
push
xor
adc
bound
mov
fisubs
inc
gs
cmpsb
mov
std
in
jne
sub
sub
popf
sub
icebp
lds
sbb
jp
inc
sbb
cltd
loopne
test
pop
pop
ror
aas
fwait
in
ss
shrl
push
addr16
xor
sub
mov
rorl
push
sub
push
dec
sbb
scas
in
push
es
cltd
add
adc
iret
or
std
dec
out
inc
fmuls
jnp
pop
aad
fistl
mov
add
jg
and
mov
pop
scas
adc
test
jne
mov
sub
imul
mov
xor
dec
repnz
xchg
inc
lds
shr
mov
adc
lods
shrl
jo
out
int3
imul
andl
iret
or
pop
mov
jl
inc
dec
inc
push
pop
out
and
xchg
das
pop
loope
cwtl
sbb
jle
orb
cmp
cmpsb
imul
aad
or
jecxz
mov
cli
push
add
mull
in
mov
aam
sub
sub
jecxz
addl
mov
pop
dec
rorb
or
jae
loopne
adc
rcr
sbb
mov
call
add
roll
and
or
gs
in
es
rcr
add
arpl
sbb
xorl
insl
stos
push
inc
xor
cltd
aas
gs
sahf
or
sbb
loop
jo
shl
imul
sbb
lret
aad
inc
cmp
aas
push
jl
and
ret
jne
xchg
lds
sbbl
testl
lods
lahf
xchg
lea
in
popa
ret
scas
aad
xorl
std
pop
push
xor
xor
inc
or
idivb
adc
pop
and
mov
pushf
sti
jmp
xchg
das
xor
ds
jp
jmp
mov
adc
and
push
sti
arpl
jae
orl
cmp
dec
sarl
imul
add
xor
inc
lret
push
sti
arpl
jae
orl
cmp
dec
sarl
imul
add
xor
inc
lret
push
sti
arpl
jae
orl
aas
mov
dec
sarl
pop
repz
add
xor
inc
lret
push
jnp
imul
mov
ret
sub
sbb
or
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
