add
imul
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
outsb
fstl
dec
mov
sbb
mov
add
push
pop
add
add
add
add
aam
adc
dec
add
push
add
add
add
je
imul
add
add
jb
add
pop
add
add
add
add
add
jb
sbb
push
add
add
add
add
add
add
add
add
pop
add
add
inc
add
add
add
add
jge
aam
ret
add
add
add
add
add
or
push
add
add
add
adc
cltd
add
adc
push
add
add
add
mov
imul
jb
push
add
sub
adc
lcall
add
add
dec
add
add
add
add
add
add
add
or
push
add
add
add
jb
push
add
sub
adc
push
mov
movb
add
add
cld
add
repnz
add
xchg
and
adc
roll
or
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
add
popf
add
add
add
addb
add
cltd
add
adc
sub
leave
add
pop
add
add
add
inc
add
add
push
add
add
add
inc
add
add
clc
add
add
push
add
ret
add
push
add
add
add
and
and
outsl
add
sbb
add
inc
add
or
pop
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
dec
add
add
add
add
add
add
push
add
fadds
outsl
add
add
add
js
daa
add
add
add
push
add
and
adc
dec
add
add
imul
add
add
add
and
nop
add
add
popl
cmp
popl
testb
add
mov
imul
add
add
pop
add
imul
aaa
add
add
add
leave
add
add
pop
add
add
add
add
dec
add
inc
add
add
pop
add
add
adc
sub
in
fadds
adc
pop
add
sbb
push
add
lea
sbb
adc
sub
push
add
add
push
add
pop
add
add
add
add
add
add
xor
add
add
pop
add
add
add
inc
add
cmp
cld
add
add
add
fadds
inc
add
add
add
add
add
add
inc
add
add
in
mov
jge
dec
add
cmp
inc
add
add
add
cmp
push
add
lcall
add
add
add
inc
add
add
add
add
add
add
popl
push
add
add
add
jge
testb
add
adc
xor
add
add
add
push
add
add
add
add
add
add
dec
add
add
insb
add
add
cmp
leave
add
imul
add
add
add
add
add
mov
inc
add
adc
pop
add
testl
adc
adc
or
adc
jb
sbb
push
add
adc
add
add
adc
fadds
ret
add
add
jno
and
cmp
or
and
inc
add
add
add
add
outsl
add
add
push
add
add
add
add
outsl
add
outsl
add
add
cmp
int
sbb
lcall
imul
imul
jg
mov
pop
scas
mov
dec
in
je
mov
ficompl
pop
cld
jbe
int
lock
pop
gs
jle
pushw
das
jg
push
fdivrs
adc
pop
cltd
sub
push
dec
popa
push
data16
jbe
mov
jge
dec
xor
jo
testl
ds
or
hlt
jo
xchg
xor
enter
dec
sbb
outsb
jb
fcmovnbe
push
rep
nop
push
mov
ret
clc
sub
in
pop
imul
mov
fildl
out
mov
mov
mov
jl
jge
add
shrl
or
pop
movsl
gs
dec
out
or
in
rcl
shr
icebp
or
sub
jmp
rolb
pop
inc
ret
dec
movsb
ja
add
in
sub
mov
jmp
arpl
fisttpl
ficoms
scas
sub
test
dec
outsl
mov
sbb
dec
sub
out
sbb
lock
clc
int
movq
inc
ja
mov
je
sarb
popf
lahf
or
mov
or
and
sbb
nop
push
or
je
inc
mov
push
pop
adc
add
cli
mov
test
scas
aam
adc
xlat
jne
inc
sahf
push
icebp
adc
int3
bound
inc
rcr
movsl
mov
jl
mov
test
in
sahf
rcll
clc
dec
nop
movsl
test
xor
cltd
outsl
into
je
mov
call
stos
test
mov
addr16
sbb
leave
shl
outsb
ret
test
mov
add
test
inc
sarb
cmp
lahf
xchg
les
inc
pop
sub
daa
sub
movb
je
jns
mov
xor
or
xchg
xor
sub
pop
les
mov
mov
xchg
dec
push
outsl
outsl
std
pop
push
push
jmp
xchg
in
dec
mov
stc
into
enter
sbb
ds
push
cmpsl
adc
and
and
mov
lret
ljmp
mov
test
xor
adc
shrl
or
aas
adc
pop
sti
fs
adc
dec
negl
dec
mov
push
xchg
int3
inc
sbb
mov
movsb
xchg
jp
repz
clc
jne
cli
or
mov
sahf
sahf
lret
repnz
in
hlt
mov
sbb
jmp
test
dec
xchg
int
enter
mov
lret
mov
outsb
add
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
and
cmp
or
sbb
add
adc
jae
mov
mov
pushf
stos
in
mov
fsubl
jle
dec
or
sbb
insb
jl,pt
dec
push
pop
mov
mov
pushf
scas
in
mov
cmp
or
sbb
insb
jbe
and
out
add
mov
mov
in
fsubrl
sub
arpl
arpl
dec
movsl
stos
jnp
or
std
mov
fsts
jne
sti
ja
les
mov
jle
roll
inc
add
lea
adc
pushf
adc
dec
sti
fidivs
loope
lods
jp
es
push
add
dec
and
in
xor
cmp
mov
das
insl
sarl
mov
fidivs
int3
and
popa
push
jmp
add
mov
imul
scas
jmp
jae
pop
pop
cld
mov
push
jmp
jle
mov
sti
in
sbb
icebp
mov
out
push
flds
mov
sub
mov
fstpl
jle
dec
or
sbb
insb
jp
push
dec
cmpsb
pop
sbb
insb
mov
into
in
mov
mov
inc
or
xor
add
sbb
leave
mov
fcmovb
rorb
outsb
sub
or
sbb
insl
pop
aam
leave
stos
in
mov
fisttpll
fisttps
fs
jns
insb
jl,pt
dec
push
pop
out
lods
mov
scas
in
mov
fsubrl
jle
dec
or
sbb
insb
jl,pt
dec
push
pop
out
lods
mov
scas
in
mov
fsubrl
mov
pop
bound
xor
ja
mov
dec
stc
dec
repnz
js
imul
xchg
ret
es
inc
mov
out
push
mov
hlt
inc
mov
mov
and
mov
cmpsb
push
add
cmp
xchg
sbb
mov
sbb
push
inc
mov
sbb
shl
pop
shl
pop
inc
leave
jge
int3
inc
pop
lods
out
cmp
fucom
ret
aam
sti
jns
mov
cwtl
mov
in
repnz
xor
sub
outsb
mov
sbb
xor
cwtl
jb
inc
pop
insb
pop
add
xor
jns
ja
jmp
pop
fcomps
insl
out
leave
push
pop
or
into
rcr
orl
sbb
xchg
pop
leave
inc
mov
test
cmp
jns
arpl
mov
dec
lcall
xchg
dec
lock
sub
xchg
stc
paddb
leave
sti
sti
sub
jecxz
ds
movl
fldt
mov
push
das
jae
lock
daa
out
and
xor
mov
adc
popf
mov
cmp
arpl
orw
lea
mov
push
repnz
cld
adc
repnz
pop
mov
pop
jge
add
xorl
movsb
cli
mov
aam
in
cmpl
mov
sub
xlat
push
or
inc
sub
aam
push
push
push
sub
addb
pop
pop
inc
jl
push
arpl
or
mov
fsubrl
jge
cmc
pushf
mov
std
out
add
clc
pop
inc
and
in
stos
outsb
jae
icebp
push
push
ljmp
jns
mov
mov
test
rcl
mov
sbb
push
hlt
loop
jo
xor
clc
or
xor
jp
daa
jge
mov
mov
scas
fstpt
call
fldt
dec
mov
loopne
popf
imul
cmp
push
add
andl
jns
pop
adc
cmpsb
mov
jne
push
cld
sbb
and
rcrb
cmp
xor
jae
incb
cltd
mov
aad
rcl
or
and
frstor
mov
loop
xchg
mov
or
dec
popf
jae
fstl
ret
fimuls
xor
xchg
cmp
arpl
test
dec
pop
jae
nop
outsb
test
lods
pop
push
pop
push
xor
mov
popa
addr16
add
and
rcl
mov
add
repnz
dec
pop
paddsw
adc
lds
test
inc
repnz
mov
and
sbb
dec
xchg
gs
pop
and
inc
loopne
sub
mov
clc
lea
sbb
outsb
or
adc
sub
lret
aaa
cmp
outsl
cltd
mov
mov
sbb
cmp
mov
sbb
fsts
arpl
bswap
out
pop
xor
and
mov
lret
mov
mov
mov
xor
jp
adc
xchg
lock
pusha
out
mov
inc
mov
adcl
cmp
test
pop
cmpsb
fdivrs
scas
hlt
cmpsl
xchg
push
outsl
cmp
test
xchg
aad
jae
loop
in
dec
cmp
adc
dec
sbb
add
mov
dec
xchg
repz
subl
shlb
fsub
imul
test
and
movsb
cmpsl
jae
jbe
cmp
jle
cmp
pushf
nop
cmc
mov
mov
mov
xor
in
sbb
jo
pop
je
ljmp
cli
sub
sbb
and
nop
pop
add
xor
push
subb
cli
push
fistpl
fsubs
out
fisubl
add
mov
ja
xchg
nop
mov
cld
xchg
bound
loope
add
daa
sbb
mov
lods
mov
je
test
test
adc
into
icebp
jno
out
fs
jb
sar
ret
dec
xchg
push
dec
cmp
std
bound
mov
add
xlat
xchg
test
hlt
lahf
fcmovu
cmpl
add
cmp
jno
sub
mov
sub
add
gs
movsl
inc
jae
aas
lea
push
ss
xor
sbb
cld
inc
pop
push
pop
mov
test
jl
std
push
xor
lea
daa
or
adc
stos
clc
pop
stc
je
enter
or
ja
lahf
mov
adc
loop
mov
push
mov
outsb
sub
fwait
mov
into
jge
test
movsb
cli
sti
xchg
andl
add
scas
ja
fnstsw
mov
ss
mov
xchg
int3
adc
sahf
lods
aad
xor
mov
push
sub
add
dec
js
ficoms
cmp
and
cmovne
mov
inc
daa
cmpsl
pusha
or
cmp
lea
insb
addr16
push
xchg
in
or
dec
mov
and
or
xchg
rcll
in
ficoms
scas
fsubs
and
sub
adc
out
fsubl
pop
or
pusha
outsb
cltd
mov
or
xor
push
pop
push
in
sahf
dec
xchg
cmpsb
pop
sub
add
inc
xchg
stos
or
or
sarb
test
movsl
or
js
fbld
pop
xchg
stos
mov
or
mov
pop
insb
jns
dec
dec
mov
lock
push
sbb
dec
lea
mov
jp
add
xchg
ss
cmp
cmp
or
jno
stc
hlt
shr
fmuls
mov
sub
nop
push
mov
xchg
and
or
xchg
mov
pop
add
jmp
inc
inc
cmpsb
fst
data16
mov
mov
dec
xor
mov
pop
xor
pop
sbb
jmp
out
mov
std
popa
cwtl
fimull
jge
je
mov
repz
sti
movsl
ja
mov
mov
test
shrl
mov
sahf
xchg
push
cmp
fwait
jns
aaa
cltd
insl
dec
xchg
dec
jge
imul
and
jg
fdivs
fstps
rcl
mov
jecxz
subl
inc
outsb
gs
popf
xor
repnz
sbb
out
pop
and
cmp
aad
nop
leave
push
mov
and
outsb
jne
mov
into
fldcw
arpl
lcall
mov
test
push
cmp
lea
sbb
loope
jne
stc
add
xchg
xor
inc
add
js
sub
mov
divb
add
subl
pop
jl
mov
sahf
iret
int3
outsb
xchg
xchg
scas
or
mov
jle
fidivrl
je
sbb
sub
push
test
or
dec
jge
lcall
xchg
mov
cmpb
aam
pop
xchg
popf
jno
push
push
dec
shll
mov
jne
cltd
fnstsw
in
jl
jne
mov
push
xchg
push
dec
stc
int3
loope
xchg
lea
daa
je
adc
int
mov
jno
das
jmp
int3
leave
lock
shld
ret
ljmp
test
push
mov
dec
mov
mov
loop
jae
lahf
fimull
lods
mov
addl
or
push
fcmovnbe
or
int3
out
in
xchg
sti
push
xchg
cmc
or
cld
add
pop
ss
ljmp
adc
outsl
sbb
jge
int3
pop
dec
shl
mov
pusha
aam
add
jno
sahf
pushf
stc
push
and
cmpsb
mov
cmc
push
mov
daa
push
or
clc
mov
inc
ds
inc
sub
jb
lret
ret
push
cmc
bound
lods
aam
sbb
and
popf
stos
inc
sbb
test
push
cmpsl
sub
icebp
push
mov
scas
inc
jecxz
cs
insl
scas
sbb
pop
pop
aam
ret
addb
sti
sbb
and
pop
int3
or
ds
mov
cltd
iret
sbb
push
xchg
cmc
scas
mov
mulb
outsb
sbbb
mov
or
jmp
add
test
lret
dec
sub
push
pushf
sbb
dec
mov
lods
and
ficoms
ficoml
ljmp
dec
test
orb
and
xor
mov
xchg
into
mov
or
cmp
add
vpunpcklqdq
aas
push
mov
rcrb
mov
xchg
mov
lods
inc
std
cltd
fistl
xor
mov
int
ja
jb
adc
pop
push
adc
xor
imul
stos
and
aas
lock
jne
xor
test
adc
xor
xchg
fs
jno
lods
enter
es
push
jmp
lods
add
pushf
xor
mov
or
scas
adc
mov
popf
jl
ljmp
xchg
lods
adc
das
aas
sbb
cs
clc
mov
iret
jb
nop
lods
and
loop
adc
je
mov
clc
mov
loopne
dec
jmp
addb
popf
or
sbb
xchg
xor
lcall
daa
lods
mov
mov
mov
sub
pop
rolb
xchg
xlat
in
imul
sub
in
or
sub
mov
xor
mov
leave
imul
rclb
inc
cs
orl
xor
ds
mov
shll
and
loope
mov
mov
sbb
xor
adc
mov
fnstenv
leave
das
push
lahf
add
out
mul
outsb
cmpsl
dec
pop
inc
sub
loope
pop
insl
cmp
mov
test
inc
xor
iret
scas
xor
aad
pop
fisubrl
out
and
mov
mov
mov
ret
insb
dec
sub
cmpsl
jbe
fucomi
mov
cs
sbb
mov
push
stc
push
jnp
cld
lods
pusha
mov
daa
xchg
cli
scas
lret
xchg
fsts
push
insb
mov
pop
cmp
and
imull
insb
mov
dec
mov
cmp
mov
inc
enter
inc
mov
sub
rolb
sbb
lret
js
adc
cmpsl
orb
flds
pusha
outsl
add
movsl
jge
lret
lods
mov
jae
fimuls
in
stc
mov
into
fiadds
test
mov
pusha
push
jecxz
and
mov
fs
jbe
jo,pn
adc
add
and
xchg
and
mov
scas
cli
mov
sub
adc
adc
orb
push
jmp
cld
mov
loopne
ret
push
sbb
xchg
rcrl
inc
lret
mov
push
cltd
fmull
stc
jecxz
and
adc
mov
pop
push
or
leave
ljmp
int3
in
repnz
outsb
fcomps
mov
dec
push
test
dec
fimull
bound
push
mov
push
movsl
imul
mov
sub
fs
sbb
inc
jbe
pop
fisttpll
cmp
imul
and
sbb
cwtl
outsl
mov
in
loope
sbb
jecxz
mov
jns
xlat
inc
cmp
jmp
mov
out
arpl
test
mov
add
cmp
push
out
adc
xchg
jge
push
push
shlb
mov
or
sti
and
in
shrb
and
test
adc
mov
inc
xlat
out
iret
daa
mov
iret
cli
cmovp
mov
shll
out
int3
xlat
jg
repnz
inc
dec
stc
sub
cmovge
or
loope
sub
int
mov
xchg
sbb
xchg
lods
cmp
mov
test
add
xchg
mov
pop
stos
fdiv
sbb
mov
pop
leave
push
xchg
je
std
push
test
aad
dec
fbstp
inc
mov
push
test
pop
dec
int3
lea
in
pushw
outsb
stc
aad
xchg
mov
jl
stos
pop
xchg
add
pushl
sbb
jno
addr16
cmp
xlat
fstl
test
das
adc
test
sub
mov
inc
xor
cmp
fwait
inc
or
xchg
sub
cmp
push
das
outsl
movsl
ds
mov
mov
bound
jbe
out
and
xchg
dec
insb
pop
adc
and
and
loope
and
std
xor
dec
mov
out
and
addr16
push
pushf
insb
cmpsb
jbe
or
or
push
aaa
cmp
lret
jg
inc
ret
cmp
sbb
sub
inc
adc
int
lret
decl
push
inc
pop
pop
in
sti
sub
ljmp
insb
in
add
test
lahf
lahf
into
fwait
pop
xchg
repnz
scas
popf
xchg
adc
scas
jno
scas
pop
stos
lods
jecxz
mov
jae
sub
jnp
xor
or
int3
les
fwait
push
adc
ja
xor
adc
gs
jns
sbb
mov
and
leave
xor
fadds
and
push
ss
scas
or
push
in
jp
jne
xor
fbstp
mov
fadd
into
push
repnz
sahf
in
enter
xor
js
mov
inc
hlt
mov
jae
outsl
or
movsb
leave
mov
adc
sub
jg
in
jno
les
jle
imul
mov
or
int3
jbe
ret
call
inc
and
push
out
xchg
dec
lcall
gs
or
nop
test
jmp
in
dec
testb
enter
adc
pop
outsb
and
push
fadd
ret
dec
push
in
push
pop
sub
xor
iret
inc
dec
sbb
inc
xchg
sub
cmpsl
push
ds
inc
ljmp
jmp
in
iret
jp
pop
call
xor
mov
inc
push
in
ds
adc
or
cmp
test
imul
sub
inc
pop
mov
xchg
dec
enter
test
movsb
aad
cs
shlb
add
lahf
clc
fstpl
mov
push
sub
fcoml
scas
fldenv
loopne
clc
xchg
loopne
inc
aad
imul
insl
add
push
test
stos
lods
in
or
mov
out
sahf
adc
jo
mov
jg
mov
xor
push
shlb
inc
xlat
aas
xchg
int
sbb
fwait
outsb
lods
enter
dec
sub
out
sbb
stc
jp
sub
mov
adc
jno
pop
adc
push
sub
cmc
in
or
stos
test
xchg
add
jp
lods
mov
fnstsw
dec
imul
dec
cmc
dec
ret
dec
das
xor
ret
popl
push
mov
imul
dec
orb
jp
cmpsl
aas
lret
iret
das
fimull
mov
adc
cmp
mov
fldl
push
adc
xor
stc
mov
cmpsb
icebp
pop
jnp
adc
jg
inc
dec
cmp
adc
jne
and
and
mov
cwtl
insb
bound
jbe
cmpb
loopne
add
lahf
xlat
jmp
cmp
sub
aas
clc
jnp
mov
mov
and
out
xor
popa
xchg
sbb
addr16
pop
cmp
loope
rolb
mov
in
je
and
xor
xchg
loope
scas
or
lahf
xor
xor
xor
and
dec
add
cmpsl
pop
repz
mov
mov
test
std
mov
and
mov
cmp
sub
insl
add
jg
ja
ljmp
inc
push
and
jecxz
lods
std
sbb
mov
pop
mov
jae
mov
jg
fmuls
jmp
inc
femms
jns
cmp
cmc
outsl
xlat
ljmp
xchg
icebp
xor
stos
das
or
pop
loop
dec
add
adc
ror
or
imul
mov
jb
adc
jmp
xchg
bound
inc
notl
cs
sub
lahf
jmp
aad
sbb
mov
lock
push
xchg
lcall
cmp
fcoml
outsl
lods
inc
stos
jecxz
add
leave
rorl
push
cwtl
enter
sbb
push
or
pop
pusha
and
mul
jmp
movsb
pop
add
xchg
push
sbb
mov
dec
xor
rcrb
leave
out
mov
xchg
jle
cmpsb
test
push
pop
mov
push
or
pop
jecxz
and
adc
push
jns
in
mov
mov
mov
xor
mov
std
push
xchg
mov
test
insl
pop
push
insb
out
inc
out
les
mov
lds
lds
xor
movsb
push
xor
cmp
and
push
jo
lret
mov
inc
ljmp
pusha
call
addr16
stos
xor
mov
out
xor
pusha
in
add
pop
ljmp
jecxz
cmp
bound
adc
shrb
mov
mov
push
sahf
repz
mov
hlt
jae
ds
cmpsl
jg
bound
push
cs
pop
dec
in
insw
sbb
cmpsb
int
test
imul
xchg
sbb
and
mov
es
orl
fnsave
mov
int3
popf
imul
inc
subb
shlb
mov
xchg
int3
jbe
adc
cmp
clc
push
jbe
adc
mov
push
inc
out
or
mov
or
dec
xchg
rcrl
lahf
int
push
adc
lahf
and
out
inc
xlat
cwtl
inc
sbbl
sbb
cmp
divb
jl
enter
imul
add
dec
adc
out
mov
rcr
xor
sub
int
cmp
xor
add
testl
lods
hlt
mov
in
mov
aas
jo
cwtl
jge
subb
xchg
testl
add
or
arpl
push
cmp
in
fs
out
leave
in
dec
add
imul
hlt
imul
cmc
push
xor
adc
int
lret
test
dec
sub
pop
jg
add
test
fucomp
clc
lds
cwtl
and
into
sub
ljmp
pop
adc
sahf
or
jno
adc
sub
inc
outsl
outsl
add
iret
xchg
cmpb
jl
mov
or
pushf
hlt
ja
mov
ret
or
jo
hlt
pushf
hlt
xchg
cmpsb
push
mov
mov
jecxz
daa
bound
punpckhdq
rcrb
push
adc
je
jne
jo
sbb
mov
in
inc
pop
iret
lcall
insl
mov
test
addb
adc
pop
insl
cmp
sub
adcb
or
out
adc
xchg
outsl
in
clc
lds
lcall
dec
cmpsl
mov
shll
mov
int3
daa
add
mov
sub
xchg
adc
fiaddl
inc
cmp
inc
cs
xchg
fs
out
mov
sbb
lret
xchg
addr16
dec
stc
fucomi
mov
sti
pop
outsb
scas
pop
aad
xchg
sub
sub
add
orl
ljmp
lods
inc
xlat
jmp
pusha
fildl
pop
repnz
inc
mov
mov
adc
fists
push
push
push
push
call
xchg
call
adc
aam
adc
adc
sbb
iret
sbb
je
xchg
jae
sbb
sub
xchg
fwait
insl
fcmovnbe
cld
fstpl
mov
cmp
loopne
ja
repz
loopne
and
fisttps
call
stc
outsl
cmpsb
mov
and
inc
aad
sbbl
fldl
dec
rol
dec
fiaddl
inc
pop
push
or
lcall
dec
in
push
lret
jno
cld
punpckhbw
jg
mov
lahf
cld
sarb
clc
ficompl
in
aas
sub
inc
sub
cmp
cmpsl
femms
enter
aam
fnstsw
dec
hlt
fldl2e
jp
dec
xchg
dec
cli
lcall
repnz
lods
out
pop
int
packsswb
jecxz
xchg
cmpsb
jecxz
add
lods
imul
ror
aas
add
and
hlt
push
add
dec
inc
scas
xor
sbb
xchg
enter
mov
fsubrp
push
mov
lret
push
jo
xchg
fldenv
cmc
aas
cmp
insl
loop
out
xrelease
push
and
lods
lret
pop
add
mov
in
xchg
sbb
test
mov
inc
jo
stos
test
outsl
jg
xchg
fwait
xchg
clc
cmp
push
sbb
and
push
or
mov
jnp
push
ficoml
stc
mov
jg
lcall
imul
and
int
cwtl
lea
out
adc
pop
jb
inc
fcmovnb
sbb
jge
push
sbb
mov
mov
cmc
jl
add
loope
mov
incb
xchg
add
jl
xchg
add
enter
add
int3
adc
mov
mov
mov
gs
cmp
inc
sbb
ds
xchg
scas
sub
data16
xor
jle
in
lods
adc
out
and
dec
xlat
add
mov
scas
pop
int3
mov
adc
pop
dec
cltd
rcr
inc
fimuls
xchg
mov
les
or
push
add
jg
imul
sbb
or
sbb
insb
jl,pt
dec
push
pop
out
lods
mov
scas
in
mov
fsubrl
jle
dec
or
sbb
insb
jl,pt
dec
push
pop
out
lods
mov
scas
in
mov
fsubrl
jge
pop
mov
das
insb
cmp
push
dec
pop
pop
ljmp
pushf
scas
in
cmpsl
cld
mov
scas
fdivl
push
cmp
or
sbb
insb
jl,pn
dec
sahf
pop
out
lods
add
fs
jmp
fs
popa
and
dec
in
pop
orl
push
pushf
inc
ret
sbb
call
dec
ficompl
dec
mov
lret
push
in
pop
pushf
sub
push
ljmp
sbb
or
cwtl
lds
js
push
hlt
inc
test
xchg
and
inc
ret
sbb
xor
inc
dec
fiadds
lods
push
adc
jo
xchg
push
fldenv
int3
orb
je
ret
fdivl
cld
movsb
pop
mov
gs
xchg
push
popa
fsubs
mov
pushl
jle
cmp
insl
mov
sub
xchg
pop
jecxz
dec
mov
or
fdivrl
dec
addr16
push
push
lods
out
mov
xor
cltd
sti
pop
inc
jl
push
xor
int3
or
pop
mov
clc
imul
aam
cmp
int3
cwtl
mov
popa
xchg
and
pop
fstps
xchg
mov
fdivr
sbb
fdivl
mov
int3
outsl
cld
pop
sti
inc
mov
xchg
cmp
push
loopne
shll
add
adc
cmp
xor
js
dec
mov
jle
push
mov
orl
lds
pop
mov
fcoml
int3
js
cmp
pop
call
insb
jmp
cltd
cmp
xlat
dec
in
std
mov
sbb
in
mov
mov
call
insb
fcomps
or
cmp
sub
fsubrl
js
dec
in
pop
pushf
sub
pop
call
insb
fcomps
or
cmp
sub
fsubrl
jmp
adc
adcb
pop
push
sbbl
popf
xor
cmc
lahf
pop
xor
inc
aam
das
xlat
out
movsl
and
mov
nopl
lahf
mov
or
jecxz
lods
das
sbb
pop
es
shll
mov
orb
jne
jnp
jne
dec
loopne
mov
mov
test
jmp
int
ss
sbb
mov
xor
gs
aam
insb
or
aas
sub
pusha
out
clc
xchg
mov
mov
aas
xchg
xchg
movsb
cli
xor
imul
mov
mov
push
mov
pop
lds
pop
cli
and
xchg
bswap
and
shl
pop
iret
stos
call
arpl
shl
stc
bndldx
jmp
data16
pop
stc
test
and
outsb
in
add
mov
or
xchg
imul
fcmovnbe
xor
inc
addb
xor
add
mov
repnz
mov
mov
mov
mov
add
rcr
jmp
sub
gs
daa
pusha
xor
cmp
sub
dec
and
movsb
mulb
xor
mov
stc
mov
mov
pop
dec
aaa
mov
daa
outsl
sahf
fildl
cmp
lods
daa
jb
std
pop
sbb
sub
sbb
mov
dec
leave
dec
outsb
xchg
mov
enter
jne
icebp
push
cmpsb
mov
mov
jns
ret
and
mov
call
pop
rclb
inc
out
into
hlt
sub
cmp
add
sub
divb
jbe
mov
xchg
mov
cld
sbbb
adc
fcmovb
scas
dec
lahf
push
or
inc
jns
lret
aad
xchg
fildl
dec
xchg
push
test
push
in
cmc
jno
and
push
lods
push
xchg
and
mov
je
or
mov
mov
jb
lret
cmpsl
stos
lds
imul
push
imul
aas
mov
stos
lret
sub
cltd
xor
push
ljmp
and
push
cmp
aam
loopne
mov
mov
ffreep
mov
sub
aas
pusha
imul
add
imul
lods
cmova
pop
and
mov
repnz
leave
inc
aam
std
xor
das
and
lret
in
xchg
mov
hlt
sub
cli
insb
into
xlat
sbb
xor
mov
mov
add
inc
std
xor
rcrb
imul
mov
enter
insl
xor
fwait
sub
sbb
inc
add
mov
adc
cli
pop
stos
push
xor
xor
xchg
inc
sbb
jle
pop
sub
pop
xor
aam
sbb
test
jne
aas
addr16
jae
adc
jmp
fstps
jnp
sbb
and
adc
inc
inc
dec
pop
cmpsb
in
sub
xor
stos
push
cmp
dec
jmp
aaa
fmull
adc
mov
mov
xchg
out
adc
inc
shrb
jne
imul
sbb
push
sarl
mov
adc
inc
mov
fcomp
lcall
push
scas
push
add
pop
or
rcr
outsb
jno
and
push
xor
sti
xchg
sbb
loop
pop
sbb
sbb
jno
inc
or
xor
dec
insb
cmc
popa
lahf
lds
sub
movsl
ja
movsl
pop
leave
adc
sbb
pop
scas
sti
pop
adcb
mov
mov
inc
test
push
stc
jno
sbb
mov
out
mov
pop
aam
cmp
icebp
xchg
pop
jno
aaa
filds
int3
cli
dec
xchg
add
repz
cmp
adc
cmp
ds
jmp
loope
or
fdivl
and
sub
mov
lcall
pop
and
cmp
in
cwtl
mov
sub
pop
and
fsubr
or
adc
inc
incb
sub
repnz
mov
mov
or
mov
and
adc
lea
call
pop
cmc
cli
dec
add
adc
jmp
mov
pop
notb
xlat
cmc
fnstenv
adc
sahf
sti
lods
movzbl
roll
sub
xchg
clc
push
insl
mov
sub
or
test
pop
pop
sarb
clc
jbe
lahf
in
das
ret
icebp
add
sarl
mov
cmpb
mov
shlb
notl
xor
ljmp
sbb
mov
call
loopne
dec
mov
dec
jb
pop
xchg
adc
mov
sbb
jno
stc
into
jns
rolb
aaa
and
loope
fdivs
fwait
shr
adc
push
testl
mov
mov
ljmp
cwtl
cwtl
mov
fadd
mov
sub
or
pushf
sbb
push
and
inc
dec
mov
dec
dec
out
sbb
push
push
push
jb
aaa
inc
mov
push
push
testl
dec
jmp
xor
and
mov
mov
leave
inc
mov
or
jns
mov
out
inc
cmp
shll
lock
push
jb
dec
dec
jmp
popf
jge
sbb
lds
mov
xor
cmpl
mov
pushf
fdivrp
sbb
jmp
flds
stos
into
cli
loope
outsl
mov
movsl
js
sahf
in
push
inc
ror
cltd
mov
test
out
dec
mov
inc
sti
pop
xchg
fwait
pop
data16
inc
mov
arpl
dec
push
iret
popf
and
pop
lahf
out
aam
mov
inc
sub
add
fisttpl
arpl
mov
adc
lods
mov
repz
js
out
sub
sbb
cs
loop
or
in
mov
fbstp
add
mov
lea
filds
ljmp
sbb
mov
xor
mov
cmp
jge
add
xchg
cli
sub
mov
mov
fimuls
xor
jb
addb
lret
jae
dec
rclb
in
inc
ret
rcr
and
push
adc
sti
sbb
repnz
cmp
dec
dec
popf
pop
gs
mov
cmp
fdivs
jnp
push
or
fidivrs
out
iret
mov
sti
jnp
divl
jb
add
ret
clc
stos
test
insb
cmp
xlat
mov
in
pop
negl
xor
int
and
mov
rorb
ss
into
cmc
and
push
sub
mov
push
adc
frstor
add
ljmp
js
cwtl
sub
es
mov
lock
movsl
mov
sahf
jns
or
add
jecxz
int
aam
push
or
add
ret
test
push
pusha
or
inc
pop
cs
popf
std
fwait
sbbb
and
push
sbb
pop
mov
push
mov
xchg
fimuls
mov
add
ds
test
repnz
bnd
testl
mov
mov
cmpsb
mov
je
iret
pop
negl
fs
pop
mov
in
sbb
cltd
fiaddl
js
hlt
lods
cli
mov
mov
out
sub
pop
pushl
dec
add
cmp
jbe
popf
aad
pop
pop
lret
or
sbb
nop
iret
flds
mov
jecxz
stos
ja
stos
xor
rorl
cltd
push
cmp
gs
std
rorb
cmp
xchg
jns
fwait
pop
adc
mov
clc
test
sub
cmp
je
push
inc
lret
jg
out
in
sub
test
test
test
push
xor
daa
xchg
pop
sub
mov
sub
xlat
jae
adc
movsb
push
hlt
lods
mov
repz
lcall
mov
int3
xchg
lcall
gs
inc
inc
lock
movsl
push
movsl
push
fcmovb
mov
out
adc
xchg
aas
inc
xchg
cmp
mov
jle
cltd
loopne
xor
adc
cmpl
cs
imul
and
popf
leave
mov
push
movlps
jo
gs
adc
fbld
test
inc
jp
sbb
lds
and
xchg
xor
jge
inc
sub
iret
aad
cs
loopne
or
lahf
test
xchg
into
jbe
jg
cmp
inc
dec
dec
ret
cld
inc
popf
mov
bound
mov
add
out
loop
stos
faddl
sbb
test
push
jno
jge
xchg
jae
pop
pop
and
inc
repnz
and
xchg
aad
es
pushf
xchg
and
pop
std
lcall
imul
jnp
cmpsl
mov
mov
movsb
jecxz
adc
inc
popf
stc
or
mov
jl
fldl2t
mov
jp
iret
mov
testb
pop
enter
shrb
mov
push
push
in
sub
idivl
sub
or
js
fcoml
xchg
mov
jo
js
es
inc
xchg
xchg
pop
pop
mov
and
pop
add
push
sbb
call
jns
sub
arpl
sub
sbb
pop
mov
iret
pop
adc
adc
mov
jle
jno
addr16
outsl
mov
jno
stos
xor
lock
or
mov
xor
ror
fst
fists
into
mov
movsb
sub
lret
lea
mov
outsl
pusha
adc
adc
xchg
lahf
and
cmp
shlb
enter
mov
iret
std
mov
add
loop
push
mov
jne
js
or
loopne
js
push
ja
aas
aad
adc
cltd
jecxz
insb
jne
in
xchg
fbld
cs
push
movsl
push
push
nop
lods
iret
lds
cmp
dec
fstl
add
out
stc
ffree
push
mov
test
jbe
arpl
ror
push
dec
fistpll
lds
dec
hlt
push
cs
mov
ja
enter
push
out
call
scas
outsl
inc
or
pop
push
sbbl
mov
in
jg
add
es
mov
cmp
adc
pand
cmp
xchg
pusha
in
lock
fwait
inc
bound
inc
push
push
fdivrs
insb
dec
cmpsb
aas
mov
and
cmp
add
es
xlat
mov
pop
push
scas
mov
jle
pop
push
stos
shlb
cwtl
pslld
loope
pop
negl
sbb
inc
lods
inc
out
std
stos
add
push
xchg
push
add
cmpsb
fwait
iret
sub
icebp
aad
mov
jnp
addb
out
js
jge
repnz
ljmp
inc
loop
cmp
sub
mov
stos
lock
xor
aam
int3
rcll
loopne
fmuls
loopne
inc
cs
movsb
push
stos
mov
mov
pushw
adc
push
inc
push
and
mov
cmp
mov
xor
adc
sub
lahf
in
mov
les
cli
daa
push
fs
cmc
pop
ficomps
mov
xchg
clc
mov
sub
enter
or
sub
lods
sbb
lods
ja
jno
mov
iret
sub
or
mov
dec
xor
sbb
or
mov
push
lahf
jbe
mov
or
ss
push
cmc
rclb
scas
jp
mov
pop
mov
pop
mov
lcall
adc
aad
sbb
adc
shrl
pop
push
push
nop
notb
repnz
sub
pop
inc
and
stos
aad
inc
loop
test
or
dec
fdivrp
out
pop
and
aad
pop
xor
rcr
push
pop
and
mov
xor
jp
adc
xor
push
ja
adcl
sbb
bswap
push
adc
jge
xor
std
xchg
sub
cmc
cmp
imul
mov
dec
nop
arpl
push
and
clc
cmp
xchg
add
pop
fnstenv
and
or
fcomps
xor
pop
gs
xor
jns
shrb
out
adc
out
cmp
jno
push
ljmp
gs
pushf
addr16
mov
jg
in
sub
arpl
inc
sarb
je
push
dec
push
in
jo
push
jecxz
addr16
stos
cmp
mov
hlt
inc
dec
xchg
xchg
cld
in
xor
adc
adc
inc
and
mov
xor
add
cs
aam
mov
stos
push
xor
sarb
xchg
insb
and
adc
jnp
mov
stos
dec
or
sbbb
test
test
push
dec
pop
inc
insb
out
ret
cmp
lsl
pushf
push
shrb
lods
adc
dec
fnsave
mov
add
jno
test
adc
int
dec
push
push
sbb
lcall
sarl
and
sbb
cld
and
adc
jle
test
fldt
xchg
push
iret
jp
sub
shll
add
mov
mov
xor
enter
test
iret
and
test
add
rclb
cmp
xor
in
mull
lods
mov
inc
rorb
in
es
sub
add
add
mov
insb
or
scas
sbb
orb
mov
fwait
jp
add
loopne
sar
and
jne
rclb
mov
in
shlb
add
and
and
jns
adc
lods
push
push
imul
sti
sbb
xor
jge
decl
and
jb
cmp
xor
fcomi
jno
les
shrb
cwtl
jp
scas
in
adc
or
pushf
pop
adc
push
mov
cmp
mov
fsubs
cwtl
out
sub
push
cmpsl
cli
setno
push
rcrb
daa
and
rsm
sbb
clc
nop
cwtl
hlt
mov
gs
out
adc
sbb
mov
std
popf
enter
push
dec
aas
pop
nop
outsl
insb
imul
cs
arpl
jmp
add
imul
jmp
shll
addr16
fucomip
mov
imul
push
inc
and
test
fcomps
rorb
push
push
jecxz
xchg
into
add
call
sti
test
pusha
decl
and
andl
inc
outsl
lods
lret
adc
or
pushf
xchg
dec
loope
sub
xchg
xor
mov
loop
ds
jecxz
clc
in
aas
push
and
mov
jl
jo
ficoml
xchg
cmp
and
or
stc
mov
loope
loopne
xchg
inc
mov
xor
inc
mov
add
xchg
test
lahf
push
fsubs
fwait
les
sub
mov
jno
loop
aas
pop
dec
repz
outsl
push
jmp
mov
inc
xchg
push
sbb
push
inc
jp
jle
data16
push
xchg
jnp
mov
lods
lahf
mov
in
or
addl
sbb
imul
cwtl
jmp
xchg
or
sub
xlat
jns
dec
shrl
outsl
pop
inc
sub
shll
mov
push
ja
jge
mov
cmpsl
pop
lods
mov
mov
push
dec
push
mov
jbe
ss
iret
dec
clc
cmpsl
mov
dec
xor
lds
xchg
arpl
push
mov
sub
int
ret
into
out
dec
loopne
mov
xor
sub
jae
aam
pop
push
xor
adc
mov
push
lds
lcall
addr16
test
mov
dec
jo
add
int
int3
mov
mov
repnz
sti
lea
shrb
add
or
jnp
es
jl
jmp
adc
shll
in
pop
lods
stos
mov
mov
popa
dec
fildl
fcomip
out
mov
xchg
daa
leave
lods
adc
in
add
mov
dec
jmp
lock
jo
xchg
pop
and
xlat
push
rcrb
mov
push
mov
mov
xchg
rcll
repnz
repnz
pop
mov
cli
frstor
mov
jg
cmp
jo
subl
lea
sbb
in
loop
clc
in
js
mov
int
in
fdivrl
jl
jns
xchg
xlat
or
stos
sbb
cld
mov
sub
ficomps
pop
fbld
aam
stos
cmp
lods
push
outsl
pop
cmpsb
or
mov
inc
fwait
push
sbb
loopne
sbb
dec
adc
jp
sub
movsl
inc
inc
and
pop
loope
shlb
insl
xchg
push
push
mov
adc
lahf
repnz
cwtl
xchg
out
mov
push
mov
xor
mov
cmp
adc
int
fwait
mov
jnp
into
xchg
mov
push
inc
pop
rcll
mov
pop
push
pop
cmp
add
fs
pop
push
scas
jl
cltd
push
fnstenv
xchg
loop,pn
push
xchg
jmp
shl
push
sbb
mov
and
mov
sub
sahf
cmp
and
add
inc
stc
js
out
in
add
popa
and
xor
insb
ftst
pop
pop
xor
shrb
add
dec
loop
mov
xchg
inc
mov
cmp
or
jge
push
test
popf
push
icebp
push
outsb
orl
es
jne
push
ja
fists
or
mov
mov
repnz
dec
dec
mov
lods
jmp
fsubrl
repz
dec
xor
add
mov
cli
out
test
xchg
push
movsb
xor
pop
inc
cmpsl
xor
pop
adc
inc
xor
lds
sahf
sbb
cmp
push
push
int
iret
sub
stos
and
xchg
jns
ret
test
and
mov
push
pop
enter
popf
ss
stc
push
sbb
sbb
icebp
inc
mov
popf
mov
push
bound
pop
pop
rclb
sbb
cmp
into
cwtl
or
xor
jmp
adc
mov
dec
xchg
and
je
mov
mov
pushw
sbb
insl
mov
test
adc
jg
push
xchg
std
or
xchg
xchg
cltd
push
test
mov
shlb
into
in
xchg
setne
jge
popa
mov
icebp
je
push
xchg
jg
sbb
aaa
pop
imul
in
mov
rcrb
in
cmp
dec
je
out
pop
xchg
jnp
mov
sbb
dec
test
xor
add
icebp
sub
sub
and
sbb
flds
and
mov
insb
or
xor
xchg
pop
dec
jmp
push
xor
inc
push
push
sbb
aas
xchg
add
xor
rclb
or
or
xchg
cmp
dec
cmp
out
sub
in
sbb
mov
xor
dec
or
sarb
je
repnz
sbb
mov
rcl
push
xor
pop
add
inc
push
mov
dec
sbb
pop
and
push
sbb
les
fs
mov
mov
or
add
cmp
and
mov
adc
gs
jg
mov
adc
push
ljmp
xchg
sbb
mov
fwait
push
add
insl
lret
in
push
cld
push
dec
pusha
test
cmp
cld
sbb
int
fs
mov
push
sub
int
mov
pop
mov
push
orb
jno
stos
or
into
loopne
rcll
xchg
push
out
test
pop
bound
add
jp
xchg
dec
outsb
xchg
xor
mov
loop
mov
push
add
inc
bound
out
cs
rorb
mov
sbb
mov
inc
add
fdiv
mov
lods
scas
xor
fdivrl
inc
cld
inc
cmp
add
push
call
push
cmp
sbb
bound
mov
sbb
cwtd
lcall
movsl
jb
push
outsl
pop
bound
and
iret
xor
mov
fimuls
mov
pop
divb
fcompl
jne
lret
xchg
sub
imul
into
adc
jmp
sub
shll
inc
cmp
pop
sub
movsl
xor
cmp
jge
mov
add
popf
xchg
and
rorb
fdivs
aam
divl
mov
xor
add
das
xor
inc
test
jb
jge
lret
in
xor
enter
xchg
hlt
xchg
or
ja
mov
outsl
insb
xchg
jg
sub
jb
stos
adc
mov
mov
adc
lods
sbb
pop
sti
test
imul
cmp
ds
xchg
rep
or
mov
out
cmp
popf
pop
aas
push
fiaddl
outsl
ss
mov
pop
add
test
mov
lds
and
add
std
push
pop
fs
fimull
pop
cmp
loopne
inc
mov
leave
in
testb
mov
cmpsl
push
jge
les
stos
subl
push
jle
cmp
dec
adc
pop
or
mov
add
test
in
in
pop
pushf
sub
pop
call
insb
fcomps
or
cmp
sub
fsubrl
js
dec
in
pop
pushf
sub
pop
call
insb
fcomps
or
cmp
sub
fsubrl
js
dec
in
pop
pushf
sub
pop
call
insb
fstps
or
call
dec
in
pop
pushf
sub
mov
enter
and
push
mov
sub
andl
push
mov
push
pushl
movl
movl
movb
movl
movb
call
andl
mov
mov
push
push
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
leave
ret
jge
insl
adc
fs
je
and
add
cld
add
aam
hlt
mov
movsb
lea
fs
je
add
adc
and
sbb
in
aam
in
ret
hlt
mov
movsb
lea
push
add
xor
push
in
into
testl
fcmovbe
adc
add
outsb
or
cmc
jnp
push
sub
pop
mov
lods
cwtl
inc
pop
mov
xchg
and
adc
lret
js
les
and
xor
das
jb
subb
scas
cmp
test
outsl
stos
lds
in
inc
or
jo
jae
inc
jge
xchg
pusha
imul
or
jbe
in
xor
sbb
cmc
inc
xchg
lods
sbb
pop
enter
test
ret
adc
std
out
sbb
cmp
andl
lea
ret
out
push
add
test
in
rcrl
enter
adc
sub
cmpsb
in
cmc
jl
out
enter
jp
mov
or
cmp
cmp
dec
mov
or
movsb
scas
inc
test
sti
out
shl
fstl
add
xor
cmp
inc
sbb
movsl
mov
mov
shr
sbb
add
dec
sub
xor
in
aam
in
hlt
mov
movsb
lea
fs
je
add
adc
and
xor
in
aam
in
hlt
mov
movsb
lea
sbb
lcall
xor
xor
insb
fiadds
mov
iret
stos
pop
divl
cmp
scas
inc
push
mov
out
enter
ss
mov
repnz
push
cld
loope
fists
leave
or
xchg
and
jno
cmpsl
cmp
push
mov
cs
lods
mov
lds
add
sub
lods
mov
push
dec
cld
sahf
test
sub
mov
ds
pop
jecxz
xchg
jecxz
ret
and
lcall
inc
sbb
push
xlat
stc
in
pop
mov
cmp
cmp
jnp
data16
sub
mov
ficoml
subl
cmp
add
clc
jae
inc
and
ja
orl
cmpsb
ds
insl
out
and
ds
mov
cmc
sbb
mov
add
js
arpl
and
cmpsb
dec
lods
cs
adc
sbbl
push
mov
xlat
pop
std
mov
cmp
fsubs
int
int
leave
dec
pop
cltd
orb
es
mov
pop
xchg
push
int
push
rolb
lcall
xlat
imul
push
int3
ljmp
xchg
mov
sbb
in
cmpsb
lods
in
xlat
or
cmp
outsb
xor
mov
xchg
add
xchg
movsl
mov
aam
jmp
cmp
xor
pushl
xchg
jae
outsb
rorb
pop
cmp
stos
cmpsl
jne
pop
das
mov
or
leave
outsb
push
lods
mov
loope
roll
adc
add
lahf
jnp
jmp
xor
pusha
lahf
fisttpl
or
mov
jge
fs
cmp
sub
xlat
push
std
and
and
add
or
pop
out
ss
mov
push
mov
sbb
mov
xor
lret
jge
xchg
call
outsb
lods
cmp
addl
les
enter
fidivs
rclb
lock
insl
pop
rcrl
pop
dec
pop
mov
mov
mov
mov
fdivrs
mov
sub
sbb
mov
cmp
xchg
pop
mov
aam
mov
inc
fldl
imul
ficoms
add
pop
push
test
push
dec
add
mov
jnp
nop
aam
inc
xchg
ds
aaa
xchg
mov
mov
ss
sub
sbb
adc
rolb
sbb
pop
dec
xchg
mov
mov
jle
inc
pusha
xchg
jle
sub
jecxz
push
xchg
mov
loopne
jae
loopne
push
fidivl
mov
jns
jge
and
fldenv
sarl
push
sbb
out
pop
jge
and
outsb
jle
rcll
mov
mov
int3
cmpsb
loop
xor
imul
cmpsb
mov
test
inc
test
rorl
rolb
adc
sbb
mov
fsubs
add
pop
mov
cmpb
push
adc
jge
outsb
ret
xchg
pop
test
bound
xor
inc
mov
test
cmp
out
xchg
mov
leave
adc
into
movnti
xchg
je
std
inc
inc
out
les
add
inc
pop
cli
dec
mov
xlat
jae
lea
adc
xor
sub
aam
mov
mov
jae
lahf
add
aad
sti
outsb
cld
pusha
imul
insl
popl
insb
out
mov
jle
pop
push
sub
jmp
js
xor
push
movsl
scas
jns
mov
outsl
sti
lock
cmp
cs
pop
aam
mov
cmpsl
jns
add
clc
iret
test
mov
scas
add
jo
push
fsubl
hlt
xchg
stc
add
sbb
in
mov
inc
mov
outsb
push
les
insl
push
clc
imul
es
push
mov
inc
aam
push
sub
jmp
mov
inc
adc
mov
pop
pop
mov
inc
stc
xchg
ljmp
jbe
testb
stos
jmp
leave
cmp
ds
and
mov
jnp
cmp
jl
adc
mov
add
xchg
insb
adc
sub
mov
arpl
xchg
cli
add
jo
in
jb
mov
addl
decb
mov
sub
jne
cmpsb
sub
pop
push
sub
rclb
iret
stos
rcrl
loop
and
adc
lds
test
jmp
add
push
inc
orb
pop
mov
xlat
xchg
cli
popa
pop
imul
xchg
daa
into
fldenv
sar
xor
push
push
fdivl
or
roll
adc
mov
or
dec
jle
pop
movnti
imul
mul
outsl
xor
xchg
xchg
movsb
pop
adc
sub
jmp
jl
sbb
xor
jmp
rcrl
pop
out
cmp
cmp
xchg
cmpl
push
mov
push
add
mov
adc
mov
cmp
insb
mov
push
xchg
jg
jge
inc
scas
stos
mov
cmpsl
xlat
lock
add
je
or
sbb
xor
scas
adc
pop
mov
aaa
fisubrl
jae
dec
sub
inc
dec
into
pop
sub
test
rolb
xchg
dec
enter
cmpsb
leave
cmc
inc
push
aaa
imul
scas
xor
sub
sbb
test
mov
inc
add
scas
insb
mov
add
fildll
jno
add
lea
popaw
vcmpps
stos
aas
add
jae
insb
xor
sbb
jp
iret
mov
fcomps
test
int
cmpsl
fmull
adc
mov
dec
push
hlt
sbb
sar
lods
iret
adc
fldl
cmc
call
pop
xor
jmp
ret
xchg
js
daa
pop
dec
idivb
es
icebp
aam
mov
les
or
adc
and
jg
pop
push
mov
and
mov
xor
jmp
xchg
sbb
cmpsl
leave
push
mov
sbb
jecxz
add
mov
and
jle
cmp
aas
xchg
and
enter
xchg
jg
push
cli
outsl
int
roll
cmp
fs
jae
push
cli
xchg
es
shr
in
and
fcompl
add
push
rorl
dec
jge
in
shlb
adc
shlb
aaa
aaa
iret
ret
call
xchg
pop
sub
adc
or
adc
mov
aaa
mov
jnp
jmp
jle
out
std
add
pop
cmc
std
add
mov
push
mov
outsl
pop
mov
pop
cmpsb
cmpsl
je
or
mov
mov
iret
aas
cwtl
mov
dec
jb
xlat
mov
lods
daa
icebp
data16
add
inc
iret
repnz
or
fiadds
mov
imul
inc
mov
scas
jle
sub
mov
or
rolb
mov
jnp
and
es
loope
cmp
pop
lods
xchg
cmp
ret
cmpb
outsb
or
or
subb
out
dec
scas
das
xchg
mov
pop
in
sub
insb
rcl
lds
icebp
imul
and
push
sbb
cmp
xor
into
mov
adc
mov
hlt
pop
fcoms
jnp
mov
ficoml
cli
pop
and
jae
cmpl
lahf
test
inc
mov
sub
and
add
shlb
jno
das
insb
pop
rolb
call
punpckhbw
push
inc
stos
test
movsl
movsb
pop
cwtl
jno
movsb
test
push
lods
sahf
js
popf
sub
adc
jmp
enter
loopne
pop
inc
pop
mov
xor
mov
jl
push
test
lds
jmp
mov
repnz
jecxz
ret
loopne
sub
ret
cld
cmp
clc
arpl
sub
cmc
dec
dec
dec
inc
in
test
push
and
popa
imul
jg
mov
mov
dec
bound
mov
adc
dec
insb
cmp
add
push
jns
into
inc
add
scas
decl
scas
cmp
in
pusha
xor
xor
mov
jle
bound
inc
popl
push
jp
cmpsl
andl
adc
cli
mov
lret
stos
in
inc
mov
and
add
int3
or
das
dec
xchg
test
shrl
adc
pop
sub
push
push
mov
xor
stos
mov
sahf
lds
mov
ljmp
push
dec
movsl
out
push
repnz
adc
scas
sbb
mov
mov
roll
mov
or
lcall
inc
les
test
rolb
sub
cmp
test
orb
mov
pop
xchg
xor
loope
popf
repz
mov
push
mov
loopne
mov
or
sbb
pop
loop
adc
mov
push
jecxz,pn
xor
cmp
in
mov
cwtl
cmpsb
jb
adc
mov
mov
pop
push
xchg
scas
loop
rol
cmpsl
xor
and
sbb
lods
inc
pop
imul
inc
pop
scas
push
xchg
out
xchg
cmpl
sarb
shlb
popa
test
mov
and
jmp
jecxz
test
pop
in
test
pop
jmp
mov
mov
xchg
js
or
out
movsb
or
sbb
pop
mov
cli
inc
cld
shrl
mov
sub
cmpsl
sub
sbb
lds
andb
sbb
cmp
mulb
or
xchg
outsb
cmpsl
fldt
xchg
cmp
or
rcll
stc
idivl
leave
out
aad
pop
dec
xor
dec
pop
lds
icebp
add
add
inc
stos
ret
jl
scas
adc
and
push
aaa
xchg
dec
andb
aaa
cmp
iret
stos
inc
sahf
repnz
lret
mov
sbb
leave
filds
mov
test
dec
loopw
aam
xor
adc
sbb
aaa
inc
mov
mov
and
imulb
ljmp
cmp
mov
lret
pop
inc
mov
push
call
adc
divb
icebp
push
push
jo
sbb
push
jns
sub
add
stos
or
xchg
ljmp
dec
dec
mov
cmp
fnsave
jp
pop
rcll
sahf
imul
pushf
dec
negb
in
call
fnstsw
add
and
sbb
xor
outsb
and
lods
imul
lods
lea
enter
cwtl
cs
jae
iret
sahf
dec
lahf
sub
insl
out
mov
add
fstl
sbb
in
outsb
pushl
add
adc
add
inc
adc
mov
in
shlb
lock
mov
xchg
mov
andb
iret
mov
pop
cs
and
gs
roll
je
xchg
mov
adc
mov
xchg
or
inc
and
fisttpl
rcll
lret
std
aad
cmpsb
mov
cli
out
add
or
push
movsb
and
ja
cmc
ror
data16
mov
sub
lahf
ja
mov
loope
pop
out
push
bound
adc
cmpb
or
mov
hlt
sbb
mov
arpl
nop
jne
mov
sbb
mov
xchg
mov
pop
popa
xlat
inc
add
call
sub
jb
shrb
dec
out
mov
dec
dec
int3
mov
notb
add
or
rcrb
in
jo
sub
push
mov
jbe
int
push
xchg
inc
inc
das
test
fsubrl
xlat
jno
cmp
rol
adc
testl
popf
dec
icebp
int3
jb
push
aas
or
adcb
adc
mov
je
jae
lret
shrl
mov
insb
cmpsl
pop
lods
cs
dec
in
rclb
xchg
nop
test
mov
push
xchg
mov
fs
cmp
lea
or
jmp
test
cmp
mov
xchg
or
ljmp
fnstcw
xchg
inc
xchg
stos
mov
xchg
xor
bound
sbb
cmpsl
mov
jns
sub
les
xchg
hlt
shr
push
stos
cmp
repnz
ds
sti
cmp
loopne
outsb
and
stos
lock
aad
test
mov
xor
fidivl
aaa
push
sub
inc
popa
push
loop
mov
push
aam
clc
cmpsb
aas
add
out
inc
and
add
jl
shlb
imul
loopne
cltd
fldcw
cld
adc
dec
je
bound
mov
ret
lahf
add
imul
cmp
ret
sti
push
xchg
imul
repnz
xchg
call
mov
ret
inc
cmp
call
mov
mov
decb
mov
mov
xor
fwait
push
or
test
imull
push
aam
movsl
lcall
xchg
cmpsb
mov
jns
sbb
or
adc
icebp
je
xchg
out
push
and
xchg
pop
imul
sbb
dec
cmp
daa
xchg
pop
mov
pop
icebp
mov
xchg
fcoml
sti
cmp
dec
inc
jl
gs
or
nop
andb
sbb
mov
shrb
shrl
lahf
lods
andl
dec
cmp
xchg
push
fsts
xchg
adcl
cmp
fwait
call
dec
daa
clc
mov
pop
jle
sti
daa
inc
scas
insl
or
add
sbb
add
inc
popa
fstpt
les
cld
outsl
sbb
loopw
or
hlt
je
sarb
cmpsl
xchg
push
or
lea
xor
loope
imul
popf
leave
pop
out
ss
imul
mov
adc
jle
or
and
sti
mov
cltd
mov
cmp
jl
pop
or
inc
ss
jno
jnp
xchg
jge
testb
stc
or
shll
std
scas
addb
stos
mov
and
add
and
stc
pop
jnp
lds
or
pop
and
aad
scas
inc
xbegin
out
sbb
fdivrl
fdiv
adc
lret
sbb
and
dec
pop
fisubs
pop
scas
cmc
pusha
sbb
cmp
nop
sub
sub
jmp
jp
or
inc
adc
cmpsb
mov
cmp
sbb
mov
jbe
xor
out
rolb
sti
loop
mov
mov
sbb
bound
mov
aad
outsl
inc
mov
or
aam
stos
mov
cmc
pusha
lods
aaa
fisubrs
insb
and
mov
sub
test
mov
sbb
adc
mov
cmpsb
xchg
ds
mov
pop
repz
sbbb
xchg
add
scas
cmp
sti
mov
pop
push
add
xlat
pop
xor
stos
insl
test
inc
xlat
and
push
push
stc
mov
sub
pop
fsubs
aaa
push
out
adc
inc
add
enter
aaa
push
popa
push
repnz
stc
push
icebp
jecxz
pop
add
xlat
mov
push
xchg
sub
jmp
rcrl
jecxz
or
jl
sub
jns
movsb
sbb
cli
cmpsb
cmp
xchg
adcl
push
push
rcll
or
jle
xchg
or
xor
xor
inc
adc
lea
push
sbb
push
fidivrl
pusha
xor
adc
mov
or
and
cmp
push
ss
jmp
pop
sbb
ss
or
lock
jle
mov
push
fst
mov
jge
je
movsb
rcr
ret
inc
aas
fxtract
cs
in
out
mov
pop
lret
gs
insl
fldl
imull
dec
push
int3
push
cmpsb
adc
fs
jl
mov
scas
fldenv
pop
mov
call
inc
push
jecxz
repz
out
clc
xor
aad
inc
mov
add
mov
sub
fisubs
outsb
int3
pop
ljmp
push
mov
outsb
pop
adc
pop
sbbb
insb
dec
xchg
cs
push
ret
pop
fidivrs
hlt
ret
imul
aam
popa
inc
mov
shlb
cltd
ds
xchg
sbb
jp
stc
dec
pop
xchg
arpl
or
inc
mov
jnp
push
dec
jne
dec
push
cs
sbb
xor
lds
inc
in
add
insb
pop
pushf
sbb
add
addr16
test
sub
mov
xchg
leave
and
js
and
in
xchg
sarb
das
xchg
loopne
fucomp
mov
in
cmp
pop
divb
mov
jne
decl
xor
pop
lea
ljmp
xor
leave
jp
fsubrl
xor
aas
push
fiadds
loopne
cwtl
out
mov
sub
sbb
mov
in
out
aad
inc
icebp
xchg
push
lsl
jnp
xor
push
icebp
inc
pop
imul
in
jg
aas
arpl
mov
jmp
jle
jg
shlb
adc
mov
mov
sbb
ja
sti
push
out
adc
fcomp
subb
mov
dec
popa
aad
dec
xor
incl
lcall
int3
lret
mov
lods
outsl
add
push
push
in
adc
cmp
in
sbb
dec
icebp
mov
in
inc
popa
pop
xchg
dec
sub
pop
fs
mov
mov
insb
imul
fxch
xor
cmp
inc
and
sub
subl
mov
cmc
and
stos
xchg
xor
mov
sub
push
add
pop
ljmp
push
mov
fwait
and
cmp
lret
cltd
mov
xchg
cs
inc
sub
cmpb
push
jbe
xor
insb
int3
xchg
jno
jae
push
xor
movsl
cmp
dec
cmovle
rcrb
lods
add
stc
insb
add
cmc
cltd
pop
andl
leave
loope
jle
sbb
lret
aad
cli
lock
ret
mov
aam
movsb
cmp
and
mov
inc
enter
loopne
in
sbb
call
andl
mov
pop
shll
insl
push
stos
mov
sbb
mov
movsb
gs
cltd
inc
wrmsr
sti
lods
ljmp
out
and
std
iret
dec
push
leave
sti
add
sbb
cmp
loop
out
mov
iret
push
ds
sub
sub
insl
andl
inc
out
inc
in
testb
or
sahf
aam
loope
pop
mov
sbb
push
cmpsl
pop
das
sbb
lds
icebp
dec
sarl
inc
std
add
popf
lret
and
sbb
pop
bound
neg
arpl
lock
sbb
roll
mull
add
lret
daa
sub
test
jo
jb
int
clc
das
mov
pop
test
inc
mov
mov
adc
inc
ret
pop
test
xor
fadds
mov
xor
icebp
pop
hlt
gs
stos
push
notl
lret
mov
add
push
sub
fcoml
mov
jno
push
cwtl
xchg
leave
cmp
add
fistpll
push
popf
outsb
and
dec
pop
inc
add
je
imul
aas
xchg
stos
cmc
dec
daa
push
orb
pop
and
arpl
dec
mov
xchg
push
ljmp
popf
movsb
pop
andl
nop
cmp
hlt
dec
js
inc
push
xchg
pop
fidivrs
inc
adc
or
cmp
jecxz
int3
sub
cmc
adc
mov
mov
mov
leave
stos
maskmovq
sbb
das
xor
add
cmpsl
es
sarl
repz
aaa
xor
mov
jae
inc
das
push
push
xchg
imul
sar
out
xor
movsl
sub
add
test
jnp
cmpsl
jo
pushf
cmp
out
sbb
xor
popa
push
lahf
lret
aaa
dec
out
add
mov
add
dec
mov
xchg
inc
in
mov
and
mov
out
aad
push
aad
inc
adc
mov
sbb
xchg
push
je
mov
in
push
push
daa
add
shlb
add
dec
je
cmp
sarb
sbb
insb
xlat
jns
jb
mov
or
sub
int
add
int3
cmp
sub
mov
cmp
or
das
inc
add
movsb
daa
test
push
pop
adc
xor
pop
orb
cld
or
push
mov
hlt
jnp
into
test
lcall
xor
popf
jl
mov
jle
pop
outsl
je
pushw
mov
ss
inc
cmp
mov
sarl
inc
in
movsb
ss
aam
cwtl
add
out
sbb
lret
inc
rclb
out
xor
repnz
xchg
in
lock
pop
aam
mov
xor
xor
scas
call
or
js
in
aaa
jns
jmp
scas
jge
push
adc
xor
popa
dec
je
add
adc
and
xor
in
aam
in
hlt
mov
movsb
lea
fs
je
add
adc
and
xor
in
aam
in
hlt
mov
movsb
lea
jl
jo
add
jg
and
rcr
in
std
mov
lods
push
jge
outsl
mov
orb
add
adc
movsb
hlt
add
adc
in
or
and
int3
aas
push
das
mov
jbe
or
mov
jg
jge
dec
iret
pop
aas
scas
das
mov
jg
outsl
jae
iret
dec
stos
mov
jg
jg
bswap
pop
aas
cmp
setge
outsl
ret
pop
and
mov
push
ljmp
cmp
rcrl
cli
lretw
cmp
les
ja
test
jb
fs
or
scas
loopne
repnz
outsl
add
or
outsl
popa
addr16
test
out
mov
shrb
mov
mov
adc
mov
xchg
decb
jg
iret
dec
aas
outsl
or
pop
out
nop
xchg
push
xor
and
and
cmp
scas
outsb
out
andb
inc
or
mov
repnz
mov
das
adc
add
scas
cmp
jle
pop
iret
mov
and
test
jl
pop
and
das
ljmp
outsb
mov
scas
das
dec
pop
or
xchg
jg
outsl
lcall
dec
pop
mov
pop
push
incl
xchg
dec
iret
xor
dec
mov
sbb
lret
mov
in
jnp
jbe
add
ds
ljmp
sbb
or
loop
js
aas
mov
mov
movsl
xor
stc
das
clc
pop
fildll
cmp
dec
fistpll
jg
jg
dec
iret
pop
aas
scas
das
mov
jg
outsl
lcall
dec
fistpll
jg
jg
dec
iret
pop
aas
scas
dec
push
scas
jbe
sub
xchg
addr16
push
fidivrl
adc
pop
xor
sti
mov
mov
sub
shll
jge
push
hlt
dec
push
movsb
movsw
fwait
cmc
sub
add
xchg
push
pop
mov
cmp
std
inc
cli
dec
sbbl
or
popf
sbb
xchg
push
cmovbe
and
mov
cmpsl
sub
pop
mov
enter
shll
jnp
cmp
sub
movsw
jmp
lret
imul
stos
or
cmp
int
mull
mov
or
add
push
popa
lcall
pop
addb
scas
lahf
cs
in
or
mov
jecxz
push
lret
in
je
mov
xchg
imulb
iret
mov
cmp
jno
cs
mov
movsb
push
aad
mov
lcall
jno
push
pusha
xchg
jne
jl
das
xor
fcompl
fldl
test
pop
pop
les
mov
adc
notl
adc
adc
test
jno
ffree
cmp
adc
xor
das
out
pop
test
lcall
xor
lret
mov
mov
xchg
sbb
insl
adc
and
jecxz
mov
add
int
add
xlat
jge
negl
divl
subl
mov
add
mulb
fwait
dec
or
and
cmp
sar
or
insb
stc
mov
mov
jb
testb
cmpl
dec
jne
imul
call
and
dec
jg
fnstsw
push
insb
add
mov
aad
in
cmp
add
pop
sbb
mov
imul
cld
stc
xchg
lcall
adc
in
iret
pop
dec
sarb
outsl
jnp
arpl
fdivr
cmp
pusha
jo
push
xchg
jecxz
std
xor
jb
pop
push
lret
mov
imull
insb
movsb
inc
lods
adc
dec
add
sub
jnp
mov
daa
jge
sub
adc
xor
iret
xor
lahf
loop
bound
inc
stc
fidivrs
fwait
inc
out
lea
inc
loopne,pn
cltd
push
cmp
cmp
push
ss
add
stc
in
dec
icebp
xor
mov
fisubrs
push
and
sbb
jecxz
dec
jno
fldenv
iret
rcr
fildll
inc
or
fidivrs
xor
vpcmpeqw
xor
mov
leave
pop
and
push
mov
stos
loope
pop
push
jno
mov
loope
test
add
pusha
popf
insl
xor
push
outsb
sti
sbb
or
stc
add
mov
push
mov
mov
xor
sbb
icebp
inc
add
and
and
sti
popf
cli
imul
fmuls
mov
scas
cwtl
out
cld
xor
daa
mov
in
insb
testl
dec
cwtl
ds
xchg
adc
shl
mov
adc
mov
shlb
in
test
push
lahf
ret
or
pushf
stc
mov
jae
mov
cli
mov
loopne
stc
stos
faddl
fsubrp
out
idivl
stc
inc
jnp
mov
enter
adc
ss
xor
fldenv
xor
xor
ffreep
pop
and
test
adc
push
pop
nop
adc
inc
mov
jge
rcr
or
mov
fwait
cmpsl
jl
pop
dec
mov
mov
sbb
add
jo
cmpsb
shr
popa
mov
out
mov
dec
xchg
xchg
or
cmp
xchg
sub
out
lret
xor
not
es
mov
mov
call
jb
scas
or
xor
scas
sub
sbbl
inc
in
fstps
pop
shrl
dec
lret
xchg
imul
pusha
loop
arpl
cmpsb
mov
mov
push
inc
mov
push
push
dec
inc
sahf
pop
lcall
jo
push
shlb
add
lahf
mov
rolb
aam
out
ja
je
xor
shrb
jne
and
das
adc
jl
sbb
xor
adcb
sbb
adc
bound
jno
push
inc
aad
test
sub
sub
aaa
add
out
push
leave
je
rcrl
sbb
sbb
mov
or
call
push
ret
or
lods
xchg
push
and
inc
lods
mov
arpl
cmp
jmp
cmpsl
ljmp
sub
lods
push
mov
lods
clc
popf
aaa
inc
dec
xor
or
shr
data16
mov
scas
and
scas
fcomps
push
pop
fucomi
in
push
sub
in
dec
std
pop
mov
cwtl
mov
cltd
aam
xchg
movb
out
popa
fsubrp
mov
adcb
lds
jne
mov
jo
cld
add
pop
jge
adcb
xchg
inc
in
lods
test
adc
in
or
lock
mov
pushl
adc
notb
push
cmp
mov
and
inc
lret
or
inc
js
es
lods
add
jmp
xor
xchg
enter
push
pop
jae
add
jmp
icebp
fdiv
loopne
sbb
clc
pop
lea
and
cld
jb
cmp
insl
lods
pop
int3
sub
pop
add
or
das
cmp
jmp
cmp
in
adc
push
xor
mov
pop
insl
popa
xor
cmp
cmpsb
orb
lods
sti
push
or
arpl
lods
outsb
sub
shl
mov
pop
sahf
mov
jb
es
or
in
fstp
cld
mov
sub
add
adc
cmp
pop
nop
xchg
inc
fildll
fwait
jmp
das
pop
inc
jle
or
ja
mov
sbb
add
jg
jb
lahf
push
js
jbe
sbb
inc
les
inc
or
inc
or
mov
mov
popa
push
das
xor
iret
in
xor
push
jecxz
mov
pusha
jg
and
sbb
in
xor
ss
xor
jnp
cmp
jne
add
xlat
dec
negl
inc
sub
les
stc
ss
inc
mov
pop
sub
adc
cwtl
imul
sahf
out
cmp
ljmp
insb
and
inc
outsl
and
aas
xor
sti
mov
out
ret
cli
std
push
je
xor
and
negb
pop
scas
jmp
sub
pop
sbbb
adc
daa
xchg
sub
mov
and
aam
adc
cli
and
mov
push
fiaddl
cmpsb
out
js
mov
or
aad
lods
lahf
in
inc
dec
cld
ret
mov
std
lret
jl
mov
push
int
movsl
insl
mov
and
cmc
lahf
push
and
mov
rolb
daa
clc
cmp
clc
jne
aad
scas
cmpsb
stos
and
aas
fstl
mov
xor
out
loope
cmpsl
jbe
lods
inc
push
mov
push
mov
fists
jnp
mov
fildl
leave
lock
adc
jmp
jne
inc
mov
and
mov
psraw
inc
xor
or
outsb
lds
stos
sbb
add
cmp
inc
call
jmp
lahf
testb
fwait
mov
fbld
sahf
lret
push
in
les
or
fwait
cmp
push
in
jne
negb
lods
daa
sub
in
mov
mov
push
cwtl
pop
push
rorb
mov
or
dec
mov
or
mov
inc
jecxz
fisubrs
jmp
xorl
and
jle
and
int
aad
sub
and
mov
pop
scas
loopne
repz
mov
fnsave
inc
pop
and
pop
inc
adc
push
inc
cmp
sarl
xor
pop
pop
mov
push
sbb
loope
fcoml
sahf
clc
cs
nop
and
popa
cld
and
push
push
aad
je
pop
jb
mov
jns
popl
sahf
pop
dec
out
cmpsl
pop
in
mov
push
les
add
rcrl
mov
test
mov
adc
lock
scas
add
cmpsb
les
jl
pop
cmp
test
dec
addr16
jbe
je
test
insb
data16
inc
loopne
cmpl
insl
fbstp
add
cwtl
dec
rorb
rol
pop
sub
xchg
sbb
popa
jl
cmpsb
xchg
inc
xchg
addr16
sbb
lret
mov
inc
sbb
mov
fcoml
loopne
mov
bound
test
stc
daa
in
test
popa
add
mov
lcall
or
jp
aad
or
repz
sub
loopne
outsl
aaa
cld
mov
xor
cli
pusha
sbb
xor
lea
inc
jno
js
hlt
out
cmp
movsb
pushf
add
xchg
jecxz
jo
push
cmp
lods
nop
pop
repnz
outsb
sbb
repz
loop
arpl
je
adc
lods
push
stos
ds
cmp
addl
cmp
xchg
cmc
pop
lret
cwtl
pop
adc
jae
mov
cltd
push
adc
xor
dec
pop
scas
add
into
cmp
sbb
insl
nop
sbb
das
repnz
das
xor
data16
fnstsw
cmpsl
dec
inc
adc
dec
mov
mov
or
push
jge
ss
hlt
sbb
fsqrt
sub
dec
mov
popa
inc
add
mov
int
sti
lahf
ljmp
cmp
lahf
aas
lahf
jge
mov
pop
lcall
lock
xor
sub
pop
in
xchg
filds
push
adc
and
aam
jl
mov
lret
imul
cmp
icebp
popa
ja
or
fucomi
dec
pop
pop
addb
and
inc
mov
sahf
ss
arpl
cltd
mov
inc
xchg
clc
rcll
push
push
out
inc
daa
mov
rclb
rorb
xlat
nop
test
adc
imul
cmp
imul
inc
push
fsubl
test
movsb
dec
mov
roll
push
scas
cs
inc
in
lds
jb
inc
adc
mov
cmpsl
test
addr16
fldl
sub
outsb
add
xchg
xor
dec
jne
add
push
jle
loopne
movsl
add
push
arpl
and
mov
fst
popf
fsubl
xor
lods
inc
cwtl
inc
jns
out
push
enter
jnp
mov
shlb
test
dec
ret
mov
ja
shrl
outsb
iret
scas
mov
loope
js
adc
repnz
in
scas
cltd
sub
jbe
decl
jmp
push
hlt
popa
test
cltd
xchg
lods
and
scas
inc
iret
bound
cltd
xadd
fwait
inc
pop
ja
sub
dec
or
mov
es
xchg
lahf
xorb
into
cwtl
aad
push
arpl
shrb
repz
idivl
sbb
cs
lret
xchg
jp
adc
xor
xor
lock
cld
mov
and
jne
loope
inc
xor
mov
pop
adc
add
xor
jge
mov
sbb
les
add
stos
jae
popf
adc
mov
nop
in
cmp
mov
push
mov
in
pop
leave
mov
adc
outsb
jmp
pop
insb
xchg
adcb
cld
mov
mov
pop
push
sahf
cmpl
negb
cmp
mov
jbe
test
lods
pop
arpl
ret
stc
les
mov
fistl
test
pop
leave
ja
dec
jne
push
jae
pop
movsl
shlb
fidivrs
xchg
icebp
stos
mov
fistps
das
sub
in
jmp
mov
nop
in
jae
sahf
mov
shll
push
xor
lret
sub
pop
xchg
sbb
insl
ret
nop
inc
out
cmp
and
rcll
push
jb
mov
mov
push
jo
sarb
xorl
cmp
mov
loop
and
add
jo
ds
outsl
in
pushf
dec
lods
rolb
out
stos
sub
pop
dec
pop
push
aam
xlat
or
cs
push
xadd
pop
inc
call
xor
xchg
imul
adc
and
movsb
pop
aam
pop
push
mov
xlat
push
testl
pop
rcrl
pop
sub
sub
repz
lods
ds
es
mov
lods
fisubs
push
sbb
ret
arpl
adc
dec
js
fisubrs
add
mov
and
cltd
jns
in
lds
push
jecxz
lods
xor
jmp
mov
std
loop
dec
or
shll
ret
jmp
jo
outsb
push
imul
ret
inc
pop
cmpsb
mov
inc
push
inc
imul
xchg
sub
call
xor
mov
inc
sahf
inc
fisubrs
enter
adc
cmp
sub
adc
xchg
adc
leave
loop
stos
mov
mov
or
push
add
xchg
loopne
std
dec
sbb
jp
cltd
insl
adc
repz
push
or
arpl
scas
and
inc
loopne,pn
xchg
sbb
mov
loope
fimull
mov
mov
test
jnp
inc
add
cltd
mov
mov
mov
aaa
mov
out
mov
push
lock
clc
aad
sbb
lods
rclb
pop
shll
rclb
icebp
mov
cltd
mov
mov
dec
pop
outsb
test
xchg
scas
xchg
mov
mov
mov
ss
mov
xor
shrl
push
mov
jg
sarb
mov
test
dec
iret
loop
out
sub
adc
in
push
rolb
mov
cmp
fdivrs
or
pop
inc
test
sbb
push
pushf
mov
sbb
jl
fidivs
cs
lcall
out
lods
sahf
xor
sbb
loope
ljmp
push
stos
inc
outsb
and
in
fmull
jno
call
push
ds
popw
xchg
std
mov
mov
in
pop
nop
loope
imul
cmp
imul
mov
lahf
cmp
lcall
pop
scas
mov
outsb
rsqrtps
pop
mov
cmp
jl
test
adc
cli
mov
push
mov
les
jl
outsl
jns
jb
mov
popf
movsb
neg
or
lea
and
mov
xchg
rclb
mov
and
inc
sbb
cmp
sti
popf
mov
imul
pop
rcr
xchg
dec
inc
fcomps
jle
dec
sti
outsl
outsl
mov
fimuls
pop
mov
mov
loope
mov
cmp
hlt
jg
push
popf
push
repz
dec
shrl
sahf
js
inc
ds
repz
mov
push
mov
fnstsw
dec
and
adc
adc
cmp
rorl
xchg
inc
cmpsl
into
das
mov
adc
add
add
push
cmp
xorb
mov
sub
mov
test
jl
xchg
jp
ficomps
jge
pop
and
push
push
imul
mov
xor
subl
and
adc
shlw
push
jae
pop
jg
repz
icebp
int3
fcompl
popa
xor
in
add
inc
cmp
mov
stc
clc
and
sub
jbe
jg
jo
push
xchg
push
cmp
jg
repnz
test
adc
shll
shll
aam
jbe
xor
shrb
test
loop
sbb
and
in
add
inc
lahf
sarl
inc
std
outsb
jp
pop
cmp
mov
lret
in
fistpll
cmp
add
gs
cmp
cmp
daa
adc
cmp
mov
jae
jmp
adc
out
xchg
sahf
movsb
inc
dec
or
icebp
loope
cli
sub
sahf
dec
inc
push
xlat
cmp
xor
pusha
and
inc
fs
mov
repz
daa
testl
or
xor
adc
int3
stos
lret
dec
jne
xor
push
jbe
jns
pop
push
jb
mov
inc
add
pop
push
arpl
sub
fistps
adc
fnsave
sbb
or
lret
aam
jecxz
and
sarl
ss
fisttps
hlt
sbb
out
pusha
push
scas
adc
sti
jno
scas
aam
fcomps
jl
repz
mov
ret
sub
insl
ror
or
stos
mov
push
sub
ret
movsl
adc
arpl
cmp
push
shlb
insl
sub
jnp
mov
mov
or
cld
mov
or
loop
test
in
inc
call
in
mov
test
pop
divl
cmp
aas
xchg
dec
push
cld
pop
pop
out
sahf
hlt
fprem
mov
mov
inc
fadds
loope
cmp
hlt
and
in
and
bound
xchg
push
sbbl
xor
mov
nop
out
mov
decl
add
xchg
inc
add
lahf
sub
xor
adc
add
out
push
push
lock
insl
cli
movsl
push
sub
cmpb
xchg
lret
pop
test
xchg
movsl
inc
jae
mov
call
lea
arpl
xchg
fld
rcrl
je
fcomps
popa
sub
xchg
dec
mov
int
fwait
jno
pop
out
and
or
jb
lahf
lea
fidivrs
pop
insb
mov
les
subb
or
shlb
push
movsb
shll
lcall
lret
pop
xor
rcrl
fbstp
dec
add
mov
repnz
mov
mov
shlb
into
int3
mov
mov
pushf
jne
mov
xor
inc
lock
mov
xor
stc
add
lcall
imul
shll
jae
insb
pop
mov
xor
stos
cmpsb
es
out
jl
inc
addr16
movsb
cwtl
imul
dec
insb
push
hlt
filds
pop
outsb
jne
out
inc
or
stos
movsl
in
repnz
pop
mov
nop
mov
es
xor
adc
cli
adc
fdivrl
into
push
xor
xor
pushf
shl
sub
ss
push
dec
out
dec
dec
popf
pop
addr16
or
cli
sub
in
aad
nop
loope
jns
xchg
inc
int
push
mov
xlat
cmp
daa
mov
loop
dec
stos
popf
mov
sub
movsl
inc
hlt
shrb
popl
stc
fildll
cmc
cmpb
ret
push
jns
or
xlat
push
in
aaa
push
daa
imul
adc
aas
xor
sbb
scas
jg
cmpsl
bound
cmp
xchg
je
test
neg
mov
push
pop
pop
mov
insb
loopne
ret
pop
xchg
dec
or
inc
andb
dec
leave
mov
stos
out
jns
call
fbstp
ret
mov
out
mov
rclb
enter
mov
inc
push
cld
xor
notb
mov
mov
push
inc
sub
jne
jl
into
arpl
xor
mov
pop
mov
adc
sbb
or
mov
fbld
mov
in
insl
jl
cmc
push
sub
ljmp
dec
lahf
stos
cmp
xchg
out
cmp
xor
mov
rol
mov
scas
vpmadcsswd
mov
pop
xchg
pop
lds
sbb
dec
xlat
int3
mov
or
out
sub
mov
push
push
repnz
shr
mov
and
hlt
in
mov
dec
scas
popf
sahf
cld
jle
push
insb
fbld
pop
or
loop
sub
push
mov
clc
icebp
push
mov
sub
insb
je
pop
aam
fcompl
icebp
cmp
jmp
shrl
pop
leave
dec
ret
xchg
xlat
sub
test
jle
cmp
out
xlat
fnstsw
sub
int
in
dec
andb
fidivs
lock
xchg
mov
cmp
dec
mov
pushf
cs
cmpsl
orl
xor
jmp
movsl
sbb
jp
add
dec
out
push
inc
inc
push
xchg
push
jecxz
pushf
imull
mov
jg
pop
mov
test
in
jne
shr
push
push
lahf
inc
cmp
mov
gs
fdivr
cmpsb
nop
cmp
sbb
les
mov
stc
imul
mov
pusha
loop
xor
push
movsb
in
gs
inc
scas
inc
jp
sub
cmp
inc
das
mov
aad
mov
xchg
push
sbb
mov
and
dec
andl
dec
sbb
pop
rcrb
fcoms
stos
jne
cs
aam
and
push
cltd
pusha
sbb
pop
popa
popl
sbb
es
cmc
jb
leave
ja
mov
mov
cs
mov
sbb
push
pushf
and
mov
enter
mov
mov
jmp
mull
mov
adc
xchg
jb
aas
mov
push
cltd
mov
stos
dec
das
adc
mov
enter
mov
arpl
arpl
popf
fs
rcrl
loopne
mov
jg
outsl
lcall
dec
fistpll
jg
jg
dec
iret
pop
aas
scas
das
mov
jg
outsl
lcall
dec
fistpll
jg
jg
dec
iret
pop
aas
scas
das
negl
testl
push
pop
iret
dec
fistpll
jle
jg
outsl
iret
pop
aas
scas
das
mov
jg
outsl
fisttps
filds
push
xchg
xor
out
andb
aaa
mov
in
sbb
pop
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
cmp
pop
or
or
add
inc
mov
xchg
mov
fst
int
cmp
pop
or
addr16
push
dec
inc
mov
xchg
lea
fst
int
cmp
pop
or
addr16
push
dec
inc
mov
out
xchg
movsl
addb
aaa
dec
push
sbb
mov
cmpsb
push
push
mov
fsubrl
dec
sarb
pop
leave
push
jne
cmpsb
addr16
push
repnz
orb
dec
inc
or
bound
in
insb
mov
inc
cmp
and
imul
sbb
push
adc
mov
xchg
dec
inc
lods
notl
cmp
push
or
ja
mov
sub
add
out
stos
int
std
shl
and
insl
cwtl
fisubrs
sti
cmpsb
sbb
mov
aas
adc
shlb
jb
mov
dec
ret
pop
mov
xchg
movsl
xchg
ret
icebp
aaa
sub
pop
jge
insl
addr16
push
dec
inc
mov
xchg
lea
fst
int
jl
pop
hlt
je
fs
jge
pop
cmp
dec
aaa
mov
stc
cmc
jmp
mov
jbe
insl
js
popa
push
jge
sub
cmp
inc
fdiv
cld
lret
lahf
rorl
mov
mov
push
jb
popa
jae
sbb
pop
push
dec
inc
mov
xchg
lea
fst
int
cmp
pop
or
addr16
push
dec
inc
mov
xchg
lea
fst
int
cmp
in
xorl
ret
add
mov
sarl
cmp
pop
push
mull
add
rcrb
mov
lods
in
ror
dec
inc
xchg
xlat
rorl
add
jne
pop
ret
cwtl
js
cmp
sarb
mov
mov
jp
movsb
mov
addb
ret
jg,pn
ds
enter
inc
cmp
cmpsl
inc
jge
push
pop
push
addr16
mov
lods
pop
lcall
lret
xchg
into
pop
mov
daa
lods
mov
imul
and
out
sbb
clc
inc
and
inc
fucom
ficompl
add
cmpsl
ja
jmp
js
push
xor
cmp
hlt
mov
enter
add
pop
movsb
fstpt
and
jge
jge
xor
and
sub
and
andb
jle
xchg
loope
sbb
and
inc
cwtl
push
and
aaa
push
scas
inc
cmc
adc
mov
jl
xor
sbb
js
sbb
lahf
inc
lahf
mov
xor
pop
repz
adc
jl
imul
je
push
je
mov
sub
mov
test
dec
mov
pop
mov
sbb
jg
stos
popa
imul
out
inc
pop
dec
cli
fisttpl
icebp
mov
mov
cmp
mov
pop
push
xor
js
mov
jge
sub
lret
mov
mov
divb
xor
mov
dec
push
dec
test
fstpl
insb
cmp
adc
lods
mov
cli
mov
in
cltd
xchg
movsl
fdivr
out
sbb
popl
push
xor
je
sbb
aaa
jp
mov
inc
arpl
add
sbb
mov
mov
push
movsb
mov
mov
rcrb
rolb
ret
dec
insl
and
mov
xor
into
ret
lock
pop
jl
push
les
dec
inc
pop
repz
mov
mov
cmp
xchg
inc
xor
das
jnp
scas
inc
pushf
test
mulb
stos
pusha
out
in
jb
lcall
inc
add
sti
popa
cwtl
xor
xor
xchg
sub
cmp
imulb
insl
or
out
loop
xchg
enter
jae
mov
dec
pop
push
into
xor
bound
pushf
mov
and
out
cmp
jecxz
lods
outsl
jge
dec
push
jle
dec
sar
sbb
xlat
int3
call
mov
inc
mov
mov
out
cmp
insb
pop
rcrb
jbe
add
pop
mov
mov
test
mov
mulb
out
notl
cmp
add
push
sbb
dec
scas
cmp
push
pushf
mov
push
nop
mov
fidivs
and
movsl
sub
push
and
and
lcall
pop
pop
mov
xchg
or
fnstsw
jns
idivl
inc
mov
mov
jg
loopne
lcall
aaa
imul
push
andl
inc
pop
sbb
lret
insl
xor
out
xor
push
add
out
cwtl
rcl
in
mov
jge
add
imul
lea
mov
and
repz
inc
and
je
mov
fcoml
xchg
xchg
pop
xlat
enter
and
in
fmull
push
dec
mov
mov
or
jae
sub
mov
or
sbb
lret
fnstsw
mov
subb
mov
and
cmp
add
adc
mov
test
outsb
pop
mov
mov
fnsave
jle
icebp
fsubl
loopne
repz
daa
inc
ret
sub
xorl
mov
pop
sub
lret
pop
jl
in
xor
out
daa
movsl
push
lea
mov
gs
push
push
xchg
xchg
sbb
xor
into
cmpsb
adcl
lock
push
xchg
loopne
shll
pop
jecxz
negb
sub
out
fldt
hlt
pop
les
imul
push
mov
gs
stos
pop
fisubs
in
repz
push
jnp
xchg
imul
nop
mov
out
test
out
inc
cld
mov
dec
sub
test
clc
arpl
pop
add
xor
addr16
jge
sub
outsl
and
jb
mov
lret
push
mov
lahf
arpl
dec
xor
mov
movsl
xorl
leave
mov
sub
les
dec
and
or
filds
lahf
lret
mov
xchg
xor
je
pop
xor
fldt
and
insb
adc
pop
faddl
mov
in
push
addl
or
xor
pop
push
aam
in
and
cmp
cmpb
aam
add
xchg
and
xor
orb
mov
in
inc
jl
or
xchg
sub
stc
fdivrl
pop
mov
adc
jae
and
lock
jmp
rep
xor
xchg
pop
insb
adc
fstl
jo
or
sarb
dec
push
ror
pop
mov
cmp
inc
mov
pop
pop
icebp
repnz
mov
xlat
int
and
mov
bound
mov
and
dec
mov
and
icebp
inc
jae
push
fxch
fcoms
push
push
mov
jns
in
daa
in
repz
cmp
xchg
sub
cmp
or
test
andl
int3
push
scas
dec
push
xor
pop
iret
hlt
push
jns
aad
mov
push
pop
xor
push
test
adc
sbb
or
add
push
push
and
movsb
lret
push
movsl
inc
dec
lods
mov
push
dec
test
sub
jb
cli
stc
dec
xchg
rcrl
and
orb
pop
xlat
andb
jmp
or
adc
sbb
adc
imul
or
xchg
jp
les
addl
arpl
into
repz
inc
mov
mov
out
sti
xchg
mov
jl
lahf
push
fs
je
imulb
ja
mov
or
xor
in
push
dec
hlt
mov
inc
sub
lods
mov
pop
andb
repz
or
cs
inc
call
inc
mov
mov
outsl
pop
int
data16
lahf
push
jno
push
mov
in
sub
mov
mov
imul
mov
xchg
aam
sbb
loop
mov
xchg
cmc
and
daa
pop
cld
cmp
cwtl
pop
lds
stos
push
or
loop
pop
pop
adc
jne
leave
adc
std
adc
xchg
dec
shrb
jge
mov
and
inc
mov
lock
add
rcl
ljmp
mov
pushf
mov
lock
sub
push
jmp
jmp
cltd
stos
sbb
mov
out
adc
jb
sub
gs
adc
xor
out
xor
nop
xor
pop
stos
lods
or
sub
lahf
es
pop
push
sbb
outsb
scas
dec
and
or
mov
jl
inc
and
cmpsl
stos
mov
ljmp
cmp
fnstenv
xlat
push
imul
sub
mov
adc
push
mov
adc
in
mov
das
cmp
add
sbb
test
adc
add
cltd
mov
pop
fsubl
pusha
mov
aas
jns
lods
in
iret
sbb
inc
std
xlat
add
jb
adc
jnp
cwtl
and
cmp
pop
daa
jge,pt
jb
xchg
mov
mov
mov
negb
dec
fcoml
mov
imul
push
out
push
rol
fists
je
xchg
mov
lods
sub
shlb
popf
pop
push
jmp
dec
test
mov
adc
cmpsl
adc
addb
testb
test
enter
negb
mov
lret
mov
xlat
or
enter
xchg
xchg
sbb
mov
int
lods
iret
js
shrb
mov
insb
out
xor
icebp
mov
fisubl
mov
lahf
aaa
ret
push
pushfw
xchg
push
sbb
mov
jle
leave
btsl
push
gs
sbb
lcall
pop
jns
subb
xlat
insb
dec
cmp
cld
push
divl
xor
adc
push
insl
movsl
xlat
iret
xchg
pusha
mov
adc
in
stc
cmp
push
cmpsl
sub
and
sub
mov
int
das
je
xorl
out
or
mov
ret
scas
or
mov
sub
les
sti
vpsrad
add
mov
sbb
pop
and
mov
jo
test
rcr
shll
cmpsl
push
jp
adc
jmp
int
jecxz
sti
and
xchg
test
dec
shr
adc
rcl
sbb
ja
pop
dec
jne
incl
ljmp
pop
pop
inc
inc
cmp
jno
sub
pop
sub
in
pop
cmp
mov
fwait
lock
fs
cmp
dec
mov
mov
mov
ret
or
mov
ds
and
sub
bound
mov
lret
or
jle
xor
push
cs
std
push
scas
shlb
add
aaa
pop
negl
sbb
mov
dec
sar
dec
leave
adc
adc
stos
mov
nop
lret
cmp
fcomip
pop
jo,pt
push
xchg
jle
imul
inc
sbb
inc
int
push
jmp
repnz
sti
jo
lret
inc
ja
push
jnp
push
push
xor
orb
or
aaa
mov
jecxz
stos
aaa
push
xchg
in
int3
out
shll
aaa
pop
dec
add
xlat
cmpsb
je
jae
into
jo
jmp
mov
cmpsb
inc
jmp
or
mov
dec
ret
sbb
nop
jle
stos
pop
fidivs
outsl
jbe
push
test
cmpsb
mov
or
aad
lods
push
mov
shll
call
test
aaa
jns
lret
cltd
out
mov
popf
push
inc
pop
jb
je
cli
test
js
mov
xchg
arpl
push
pop
mov
xor
add
ret
lock
call
xchg
jmp
mov
dec
pop
mov
jb
lret
mov
jb
enter
data16
adc
or
pop
iret
cmp
pusha
mov
push
adc
add
sbb
add
jmp
mov
xchg
rcl
inc
sti
fiaddl
arpl
out
cltd
gs
sub
sub
xchg
mov
loope
jae
jmp
inc
jmp
in
adcl
pop
stc
cmp
lret
in
jns
or
mov
push
fistl
test
pusha
mov
and
outsb
add
inc
fldcw
push
pop
xchg
nop
nop
js
mov
xchg
test
jmp
outsb
push
dec
inc
jae
mov
repz
mov
int3
in
loope
xchg
cmpsb
sahf
mov
out
dec
push
sbb
shrb
sub
xchg
adc
cltd
sub
push
adc
push
push
xchg
push
sbb
pop
xor
push
push
jle
dec
inc
int
xchg
mov
andb
push
adc
mov
jnp
pop
xor
in
mov
sbbb
test
loop
arpl
sbb
jb
xchg
fnstenv
test
adc
or
pop
push
cmp
jge
clc
leave
call
sbb
lds
out
or
or
cmpsb
sbb
pop
or
sbb
or
int
lock
mov
cmp
aaa
ret
push
sbb
add
dec
cmp
in
enter
jp
lods
std
ja
adc
xchg
ja
push
frstor
std
ljmp
scas
dec
mov
sub
clc
mov
xor
sahf
test
hlt
dec
lods
mov
jbe
call
mov
cmp
mov
sub
fwait
sbb
xor
adc
add
mov
addr16
cmpsl
dec
test
out
jnp
imul
test
push
mov
add
ss
and
pop
and
mov
sbb
adc
xchg
inc
imul
shlb
arpl
jle
fstpt
sbb
push
cwtl
loop
xorb
mov
cmp
dec
das
mov
push
xchg
rcl
popa
lcall
dec
fcompl
outsb
xchg
dec
sbb
cmp
ja
rol
mov
cmpl
xchg
test
das
clc
jne
inc
aam
sub
imul
inc
mov
ficomps
xchg
sub
div
int
add
mov
or
popa
jno
mov
mov
push
ja
rclb
pushf
adcb
iret
and
fcmovb
ds
push
aaa
add
push
jns
sub
in
push
aaa
sub
cli
orl
add
or
pushf
push
push
xrelease
in
mov
pop
push
push
repz
xlat
mov
fsts
mov
push
xchg
ror
sbb
sub
orl
mov
inc
xor
into
jb
or
add
loopne
shlb
repz
cmp
int
xchg
movsl
je
cmpsl
or
shrl
xor
adc
or
mov
mov
mov
push
xchg
inc
cwtl
lret
push
push
pop
sarb
inc
push
lcall
pushf
adc
leave
arpl
insl
xchg
push
imul
ds
mov
pop
aas
mov
adc
push
ficompl
xchg
pop
xchg
mov
jg
add
dec
add
lods
test
adc
das
adc
aad
add
filds
or
jle
mov
mov
int3
mov
fisubl
mov
jno
insl
mov
or
jp
cmp
movsl
cwtl
xchg
jne
or
rorb
repnz
xchg
mov
mov
inc
lods
mov
cmp
arpl
add
call
ja
popa
fcompl
xchg
or
scas
rcrl
and
test
dec
and
data16
fstps
sbb
jno
stos
push
mov
and
mov
sbb
xchg
mov
vxorps
jl
ja
jg
test
int
arpl
daa
push
adc
loopne
adc
test
xchg
jmp
incl
xchg
imul
ljmp
sbb
jb
mov
mov
sbb
jnp
out
mov
adc
or
hlt
ret
cmp
cld
popf
add
out
nop
add
mov
pop
sub
je
fstpl
fiaddl
pop
mov
sbb
cmp
subl
dec
push
fmull
sub
fcoms
push
xadd
lret
lds
bound
loope
dec
push
cwtl
push
jne
jmp
add
dec
std
fmull
ja
andps
pusha
sub
push
in
out
pusha
mov
push
je
xchg
pusha
push
fidivl
call
movq
or
ret
mov
mov
add
cli
incb
mov
mov
fimull
mov
or
inc
out
cmp
call
and
lret
inc
mov
lret
pop
or
and
xor
mov
xchg
dec
rolb
inc
or
cmpsl
xchg
out
jl
xchg
aas
gs
cli
cmc
pop
dec
into
inc
xor
clc
push
lods
jnp
jne
mov
inc
imul
leave
in
movl
pop
ret
xor
cmpsl
in
in
int3
pusha
pushf
add
xor
cmp
sub
movsl
jno
adc
ds
mov
test
shlb
mull
repnz
call
lahf
xor
call
jns
jbe
fsubrs
xchg
popa
je
push
add
cmp
mov
jnp
mov
push
sub
ljmp
ljmp
loope
in
adcl
out
gs
jmp
lret
and
inc
jle
cmp
inc
pop
xor
les
and
inc
mov
fwait
pop
cmp
cmp
xorl
ror
rcrl
insb
mov
push
ljmp
cwtl
cld
pop
jg
sub
and
jl
dec
loopne
mov
das
fbld
xchg
test
inc
dec
rorl
in
imul
fdivrl
xchg
mov
xchg
mov
mov
in
pop
push
lock
add
je
in
pop
cli
loopne
ret
fwait
mov
enter
dec
lods
ljmp
xchg
xor
jge
mov
cmp
dec
inc
in
lahf
dec
xchg
insb
lcall
push
andl
mov
sbb
fdivrl
call
mov
xor
daa
aaa
jbe
adc
push
jno
xchg
lret
scas
rcrl
jmp
mov
sbb
jb
sub
imul
enter
andl
add
sbb
push
inc
std
cmp
mov
repz
out
push
mov
jno
push
stos
je
adc
mov
mov
arpl
mov
cs
mov
addr16
insl
mov
adc
mov
and
int
hlt
xor
mov
push
jle
jne
and
jo
xchg
loopne
gs
xor
mov
lret
and
inc
push
in
push
es
sbb
stc
jae
cmpb
push
pop
movsb
je
cltd
repz
fisubs
push
cmc
push
repnz
jns
lock
shll
loope
xchg
push
lret
sarb
mov
mov
jb
jmp
pop
jl
push
xor
xor
cmc
inc
in
cwtl
push
ss
pop
adc
push
rol
in
push
xchg
lret
in
pop
or
sahf
in
or
sub
pop
out
add
and
dec
jmp
inc
insb
in
movsb
stos
and
mov
xor
xchg
out
push
sbb
das
push
cli
insl
add
lds
faddl
inc
icebp
cmpsl
test
insb
in
inc
mov
inc
inc
mov
je,pt
adc
imul
vpxor
fildll
lods
mov
xchg
add
idivl
je
dec
stos
xor
xorl
add
add
roll
jns
pop
aaa
inc
mov
gs
jmp
jl
pop
std
dec
sbb
inc
mov
aaa
lea
xchg
mov
xor
xor
dec
fisubrl
dec
xor
sti
jns
daa
pop
inc
push
repz
das
cmp
push
mov
inc
xlat
jg
push
shl
pusha
repz
xor
push
fildl
inc
lock
call
lahf
shll
mov
lds
mov
adc
test
inc
and
cltd
mov
shlb
stos
test
xor
shlb
jne
clc
sub
je
cltd
sub
pop
jg
xchg
outsb
movsb
mov
ficomps
dec
push
pushf
insl
clc
int
pop
bnd
or
xchg
test
mov
sbb
repnz
pop
pop
xchg
xor
mull
movsb
outsb
mov
insl
mov
hlt
sub
cwtl
push
dec
cmpb
mov
or
jo
addr16
pop
jb
jp
cmp
pop
adc
sahf
insw
hlt
dec
cmp
mov
mov
pop
mov
and
cmpsl
sub
pop
jle
enter
inc
fisubrl
jae
scas
dec
popa
lcall
push
mov
mov
or
push
sub
inc
imul
or
movsl
adc
xor
xor
ljmp
popa
mov
inc
or
aaa
divl
sub
or
dec
test
dec
aam
adc
std
and
or
xor
or
pop
cmpsb
mov
cmpsb
jnp
push
inc
adc
push
insl
cmp
jle
dec
dec
push
fnstenv
jb
jge
es
inc
mov
pop
in
addl
out
call
dec
or
lds
lods
push
loop
mov
push
lock
mov
aas
push
pushf
es
orps
scas
push
or
mov
cmp
lock
xchg
cwtl
into
pop
movsb
or
icebp
popl
pop
mov
mov
cltd
aaa
jp
rol
mov
xchg
and
jmp
or
sub
lock
sbb
or
orb
sarl
mov
pusha
sub
pop
jl
aam
pop
push
cmp
jmp
jnp
inc
pop
daa
dec
in
mov
xor
jle
jae
jle
xor
mov
loop
push
and
mov
xlat
inc
std
xlat
mov
mov
pop
inc
xchg
xorb
mov
fstps
ss
je
push
fucomi
rolb
mov
push
movsb
or
inc
loop
pop
xor
nop
shr
jge
xchg
push
adc
enter
adc
movsl
mov
cmp
xorl
adc
bound
pop
jge
insl
addr16
push
dec
inc
mov
xchg
lea
fst
int
cmp
pop
or
addr16
push
dec
inc
mov
xchg
lea
fst
int
cmp
pop
or
addr16
push
int
mov
xchg
lea
fst
int
cmp
pop
or
out
xlat
dec
mov
aaa
xchg
lock
sbb
push
pop
inc
outsb
jne
add
dec
adc
faddp
out
cmc
in
xchg
sahf
test
push
pop
inc
outsb
jne
gs
adc
ds
into
aad
lds
stc
sahf
test
push
pop
inc
outsb
jne
gs
adc
ds
popf
xchg
test
sar
loopne
rcl
pop
es
or
sbb
push
add
ss
es
popf
add
ds
cli
lds
loop
fwait
sub
loopne
adc
enter
lock
jnp
jno
mov
inc
hlt
mov
aad
cmpsb
pop
mulb
sbb
shlb
xorl
adcb
lret
xor
or
pop
popa
sbb
xor
mov
add
pop
push
fcmovne
sub
cmp
fadds
scas
mov
sub
mov
adc
add
decb
ja
add
pushf
test
stos
pop
mov
enterw
and
sarl
mov
push
or
lahf
scas
mov
mov
push
pop
inc
outsb
jne
gs
adc
ds
out
cmc
in
xchg
sahf
test
push
aaa
add
jne
bound
insb
dec
jae
jno
lods
fcmovb
lea
mul
ljmp
and
adc
gs
jns
dec
cs
ds
stos
sahf
fdivrl
sti
lret
jecxz
lret
cmp
push
cmp
add
into
aad
in
xchg
sahf
test
push
pop
inc
outsb
jne
gs
adc
ds
out
cmc
in
xchg
sahf
test
push
sti
sub
aam
xchg
inc
xor
fmulp
xchg
lahf
xor
sti
rolb
loop
outsb
movsl
push
call
mov
dec
negl
pop
pushf
hlt
ja
jno
lret
lods
loop
aad
xchg
inc
fnstsw
outsl
loopne
xor
xchg
cmp
aaa
fsubrl
ja
cld
xchg
push
pushf
cmp
add
cmpsl
mov
ficoml
mov
xchg
test
cltd
sbb
sub
shl
in
test
and
sbb
xorb
stos
lcall
ljmp
fiaddl
insb
or
sbb
push
add
and
push
stos
lcall
mov
repz
mov
or
xchg
pop
or
aam
add
ret
rorb
and
inc
enter
mov
xor
dec
push
pushf
dec
enter
and
xchg
outsl
xchg
int3
out
cwtl
pop
adc
jno
or
stc
pop
xchg
mov
or
lds
cs
call
cmp
push
in
xchg
adc
es
bound
cmp
int3
pusha
cmp
cld
xorb
or
cld
cwtl
cmp
mov
mov
scas
xor
sub
cmp
fcoml
push
js
dec
xchg
stos
into
jae
mov
xchg
imul
ljmp
sahf
sti
xor
cld
push
sub
sbb
or
sbb
scas
xchg
sbb
adc
imul
mov
mov
dec
xchg
mov
sbb
sub
push
xor
sbb
aam
or
push
push
ds
and
cld
push
jns
ret
pop
test
imul
jo
into
cmp
arpl
cmpsl
pop
enter
add
xor
cmp
lret
insl
dec
mov
push
pop
aad
cmovno
ss
or
or
lea
push
push
inc
cltd
add
cltd
xchg
pop
jmp
shrb
xorl
sbb
js
dec
les
inc
pop
mov
xchg
jmp
mov
roll
stos
push
movaps
push
cwtl
mov
subb
cmp
mov
mov
stos
jg
mov
push
dec
lock
int3
jae
lds
loop
mov
mov
test
adc
out
inc
pop
cli
daa
mov
cmp
shll
mov
jle
into
and
sub
jmp
add
cwtl
dec
sub
push
test
pop
xor
cmc
inc
adc
dec
mov
dec
scas
jecxz
jno
stos
xchg
in
dec
sub
xor
xchg
fistps
mov
push
sbb
pop
mov
or
bound
mov
add
cmpsl
sbb
mov
lcall
stos
in
jae
test
cmpsb
insb
ret
lret
cmp
mov
jle
cmpsl
cmp
jp
shrb
jecxz
dec
lcall
addb
ss
dec
cmc
pushf
xor
lea
aam
sbb
mov
stos
pop
cmp
shrb
pop
add
mov
in
mov
xor
jb
outsb
rcl
add
negl
cmpb
fdivrs
sbb
and
jecxz
das
movsl
rorl
repz
iret
outsl
bound
test
lea
aad
ljmp
in
xor
fwait
sbb
addb
popf
push
add
int3
out
pop
xor
ret
shlb
xchg
xor
insl
scas
stos
mov
and
nop
pop
ror
fwait
mov
pop
add
cmp
sub
xchg
mov
push
add
cltd
cmpsb
outsl
cmp
ficomps
stos
leave
jb
shl
sarb
jno
jmp
mov
movsl
jp
ret
jo
push
call
aad
sub
movsb
je
jo
adc
dec
out
cmp
jg
inc
mov
ss
add
rorl
mov
and
add
scas
adc
pop
add
lock
mov
leave
lret
sub
mov
cwtl
in
jge
pop
dec
mov
push
hlt
add
f2xm1
les
test
arpl
or
in
or
ljmp
mov
addr16
mov
rcrb
sub
movsb
ljmp
xchg
xchg
mov
pop
fstpt
mov
ds
mov
sti
push
pop
push
pop
adc
xchg
dec
dec
jge
shl
adc
loopne
inc
mov
add
cmp
cmp
cmp
add
lods
cmc
push
gs
dec
out
test
and
pop
cmp
clc
xchg
hlt
push
mov
xchg
repnz
aam
mov
cmp
ss
cwtl
or
or
push
xorb
adc
inc
arpl
add
cmpsl
rorl
adc
outsl
jg
or
push
jmp
lea
test
rorb
push
fisubrl
hlt
push
iret
xchg
repnz
in
out
add
jmp
jnp
sbb
cli
dec
repz
loop
xchg
je
pop
les
fldt
xor
test
negl
xor
test
cmpsb
test
dec
and
repnz
inc
adc
sbb
push
jae
stos
rcr
das
mov
filds
push
adc
cmp
mov
fs
cmpsb
jns
dec
sub
push
and
pusha
push
out
cld
jae
iret
repz
daa
or
es
insb
in
ss
sbb
jg
les
mov
jp
rorb
mov
cmpb
or
lret
aad
sbb
and
pop
xchg
cltd
xlat
mov
aam
adc
pop
rolb
jg
lret
and
movsb
pop
popf
cmp
jmp
mov
xchg
je
fs
imul
mov
cmpsl
gs
add
popf
xchg
outsb
and
xchg
xchg
cmp
mov
push
pop
mov
push
pop
jne
loop
shll
xor
and
rol
mov
lret
xchg
adc
jnp
xor
lods
push
insl
add
xchg
js
insl
jg
sbb
or
and
xchg
mov
pop
adc
push
or
push
out
hlt
jb
sub
push
movsb
stc
add
cltd
cltd
lret
imul
cmpsl
and
int3
fidivrs
jmp
mov
outsl
pop
loope
mov
hlt
pop
pop
out
push
lcall
cmpsb
and
jle
js
push
xchg
out
movsb
icebp
xlat
pop
jb
pop
jne
xchg
dec
sub
mov
aad
movsb
rcrl
hlt
mov
pop
xchg
jmp
and
sub
test
fisubrs
jnp
lock
inc
xor
in
adc
ljmp
cmpsl
push
mov
hlt
and
mov
les
push
aaa
mov
xlat
add
pusha
jle
enter
popa
lret
xchg
shll
dec
mov
add
xor
popf
cs
lret
inc
into
xchg
or
std
add
lret
js
outsl
dec
push
jnp
shr
stos
into
adc
cmp
loop
ret
stc
xor
sbb
xlat
in
lcall
fwait
inc
xor
jnp
arpl
dec
or
push
out
push
xor
add
mov
lret
mov
or
lds
in
xor
inc
aaa
scas
fnsave
xor
ss
subb
cwtl
ret
xor
lea
mov
std
movsl
jns
adc
js
aad
hlt
mov
mov
movsb
shl
or
dec
lds
mov
and
sub
leave
adc
pushf
or
scas
pusha
sub
stos
jbe
das
rcll
sub
sub
push
shrb
jne
xchg
mov
outsl
xchg
xor
jbe
outsl
repnz
push
andb
adc
mov
insl
test
and
or
adc
icebp
bound
and
ds
xor
repz
lret
lret
inc
popa
fnsetpm(287
dec
dec
imul
sub
cmpsb
out
nop
push
insl
ret
imul
mov
call
jae
js
hlt
mov
sub
pop
repz
mov
lods
add
inc
test
and
enter
lock
push
add
xchg
in
jl
sbb
sub
lods
sub
or
xorb
data16
insb
adc
js
lock
sbb
fidivrs
push
inc
mov
cmp
jb
nop
je
xor
out
xchg
adc
stc
mov
sbb
popf
test
mov
add
sbbl
and
push
test
enter
or
orb
push
rorl
jl
xchg
cs
ret
lahf
std
outsl
mov
mov
hlt
jp
pop
fisubl
mov
shrb
fmulp
add
int3
or
cmp
hlt
jb
nopl
adc
xor
addb
out
add
lock
ss
xchg
call
and
js
mov
mov
out
fs
cmp
fsubrl
js
sbb
xchg
or
and
lods
inc
inc
inc
mov
sbb
dec
lds
or
add
adc
push
sbb
je
aad
sar
or
insb
mov
push
cmc
cmp
xor
in
mov
mov
push
nop
pop
cmpsl
outsl
sbb
and
cmpsl
xor
dec
adc
ret
sbb
xchg
cmc
mov
xchg
out
mov
clc
dec
out
dec
daa
mov
mov
add
mov
shll
es
fisubl
fisubrs
and
lahf
xor
jo
pop
mov
adc
aad
mov
push
lret
cmc
jae
jae
cmp
enter
popf
iret
clc
lret
or
insl
loope
xchg
mov
and
inc
sbb
lcall
aas
orb
lods
and
lods
imul
inc
lea
aaa
xor
ja
sbb
xchg
imul
outsb
aad
add
mov
test
jmp
icebp
inc
add
push
sbb
adc
cmp
lea
mov
cmpb
push
and
pop
out
sbb
movsl
lods
sbb
sub
xor
cli
testb
aad
sbb
fisubs
jae
jl
nop
or
or
leave
arpl
repz
mov
jae
pop
stos
mov
sbb
fsts
lods
add
cld
fidivrs
inc
ds
adc
mov
stos
and
mov
jge
scas
rcrl
jp
stos
bound
mov
movsb
in
adc
xor
or
add
pusha
repz
lcall
mov
out
or
xchg
jno
add
xchg
pop
sbb
ret
scas
mov
inc
mov
cmpsb
lahf
pop
mov
lea
js
frstor
push
shll
out
insl
jno
lret
bound
popf
cmp
hlt
ljmp
bound
ljmp
hlt
lret
fwait
pop
inc
aad
xor
daa
add
insb
es
xchg
push
xchg
je
sbb
orps
stos
lret
push
cmp
inc
out
dec
xor
mov
loope
adc
mov
cmp
push
ret
mov
test
rorb
daa
or
arpl
repnz
out
adc
sbb
push
push
push
mov
jl
cwtl
jnp
mov
dec
mov
xchg
mov
pop
or
inc
push
movsl
int
or
subb
in
xchg
outsb
xor
and
mov
enter
pop
xchg
pop
xor
rclb
sbb
and
mov
jl
add
fs
imul
inc
inc
std
and
push
sbb
rorb
fildl
test
pop
cmp
sbb
out
ja
add
xor
inc
andl
popf
cmp
mov
jp
push
sbb
movsl
push
pop
das
out
jnp
ret
add
data16
jnp
or
cmp
fidivs
sbb
clc
mov
mov
sub
mov
popf
jbe
jecxz
push
stc
in
cmpsb
leave
in
cmpsb
movsl
mov
xor
xor
sub
popa
icebp
add
add
fisttpl
insb
test
fs
cld
mov
jmp
adc
mov
mov
test
dec
add
pop
std
lds
stc
push
lea
inc
and
fs
rorl
xor
fisubrl
inc
scas
mov
sub
adc
xor
jne
pop
mov
push
push
xorb
jl
arpl
dec
jle
loope
sub
dec
je
jp
je
mov
and
ja
dec
rorb
pop
cwtl
test
add
xchg
lds
xchg
gs
fldcw
or
bound
aam
loopne
xchg
push
push
repz
movsb
lods
enter
loope
and
dec
mov
inc
icebp
push
jmp
add
mov
movsb
add
pushf
lret
mov
pop
repnz
fisubrs
fdivs
mov
sbb
lcall
push
push
mov
or
inc
add
int
aaa
xchg
or
xchg
mov
fucomp
ret
sti
mov
push
bound
int
fabs
fdivr
pop
push
popa
call
add
adc
das
xchg
mov
in
sub
pop
sub
pop
std
call
pop
pop
jb
pop
dec
addr16
cmp
and
xor
adc
mov
adc
in
push
push
notb
jnp
pop
pop
aad
jae
sti
jo
aaa
into
fwait
cmp
daa
mov
jns
xor
out
lahf
jge
fisubrs
push
bound
xchg
mov
add
dec
adc
mov
mov
jns
cmpsb
push
mov
aas
adc
movsl
ret
add
sbb
movsl
push
mov
in
mov
movl
pop
xor
sub
or
pop
sub
push
xchg
cltd
pop
xor
lock
cmp
data16
sbb
jle
rcr
mov
adcb
pop
cmpsb
inc
adc
jmp
popf
aas
pop
lahf
mov
xor
jbe
les
popf
dec
inc
cmp
js
cmp
lea
dec
xchg
cmpl
repnz
mov
or
mov
mov
dec
push
adc
popa
add
or
or
or
xor
sti
scas
in
inc
js
fistps
sti
out
into
cs
xor
dec
psubd
out
dec
jl
jp
jg
xor
xchg
xchg
jle
mov
ds
xor
cmpl
cmp
es
out
add
in
mov
cmc
je
test
cmp
pop
aad
mov
add
xor
jge
mov
add
pop
shlb
pop
cmp
dec
inc
pop
les
les
pop
push
xchg
inc
sub
hlt
lret
inc
ljmp
bound
jne
sti
cmova
cmp
mov
xchg
daa
push
sbb
dec
xor
jno
xor
mov
inc
add
inc
cmp
mov
jbe
int3
movsb
dec
inc
dec
repnz
mov
nop
or
xorl
pushf
push
movsb
test
xchg
dec
xorb
push
test
es
mov
push
ucomiss
neg
stos
cmpsl
xor
pop
jecxz
aad
std
call
push
push
cmp
inc
leave
jne
iret
xchg
ss
or
cli
inc
inc
xchg
and
enter
inc
jbe
jno
fildll
mov
movsl
or
outsl
and
push
xchg
aas
sti
testb
sub
jbe
xor
call
dec
aad
into
jge
xchg
inc
bound
adc
loopne
inc
lds
xlat
mov
or
call
outsl
rorb
lds
pop
mov
bound
add
mov
into
xor
hlt
mov
fidivrl
mov
imul
cmp
lret
decl
sub
scas
inc
dec
inc
pop
dec
ljmp
pop
loopne
rcr
mov
jb
in
mov
cmpl
loopne
xchg
xor
cmpsl
and
icebp
push
ret
cmp
or
mov
pop
pop
mov
pop
jne
mov
sbb
out
add
aas
mov
jno
and
je
xor
stc
lods
sti
js
sub
push
sar
or
adc
pop
rcl
xor
mov
jmp
rol
rcrb
dec
fdivs
pushf
jnp
lock
or
out
imul
addl
or
das
mov
cwtl
pushl
xor
cmpb
inc
sub
lods
push
pop
dec
push
stos
mull
push
mov
push
xlat
pop
lahf
fistl
and
out
inc
loope
insb
mov
jge
push
pop
fucom
inc
sahf
das
test
stos
mov
popf
xor
adc
cmp
je
mov
movsl
jmp
push
dec
mov
xor
sub
in
add
pop
jbe
leave
cmp
jp
sbb
sar
fstps
xor
sbb
inc
vdivss
push
xlat
notb
outsb
add
cs
sub
scas
cmc
push
jle
pop
cmc
inc
mov
or
push
and
sbb
or
or
dec
bound
leave
sahf
jo
xorb
dec
not
aad
sub
push
xchg
fistl
sbb
fwait
mov
das
and
xchg
cmp
xor
xchg
out
aaa
mov
mov
out
cmc
stc
or
dec
js
imul
pusha
pop
lcall
pop
add
push
shll
in
bound
iret
sbb
in
cmpsl
sahf
push
xor
adc
leave
pop
in
add
bound
aas
mov
add
fimuls
jl
sub
jp
arpl
sar
sub
clc
rorl
adc
xchg
enter
call
or
xchg
insb
loop
mov
shl
sub
cmp
pop
lret
push
cli
sti
in
xor
and
popf
subl
mov
adc
xchg
pop
pusha
outsb
fstpt
xchg
add
push
roll
xchg
push
cmp
es
push
xor
out
cltd
ds
sub
stos
push
adc
in
fmuls
dec
fidivrs
mov
xor
jp
ret
lret
fwait
mov
insl
adc
cld
sub
paddw
or
push
xor
mov
mov
pop
aam
daa
cwtl
int
jbe
adc
test
mov
or
loope
leave
sbb
sbb
jecxz
push
adc
dec
push
push
lcall
in
outsl
sbb
sub
stos
stc
sbb
jge
fcmovne
inc
sub
jmp
and
adc
stos
in
dec
push
lea
nop
sbb
out
jns
push
lcall
xchg
stos
or
cmp
push
je
mov
test
orl
sub
out
push
xchg
jecxz
movsb
filds
mov
xchg
movsl
push
imul
and
xchg
fs
hlt
movsb
addr16
sbb
test
xor
pop
inc
mov
sbb
sub
pop
nop
adc
xchg
and
out
int
and
cs
jbe
ds
adc
xor
cmp
pop
mov
push
or
mov
jmp
cmp
dec
enter
sub
xchg
xlat
xor
xchg
dec
cld
loop
sub
scas
outsb
cmp
adcb
mov
xor
ret
movsb
pop
jo
xor
and
in
mov
aam
rorb
loope
addr16
inc
es
cld
or
inc
sbb
imul
stc
arpl
sbb
test
ja
xchg
add
mov
dec
test
ds
cmp
jbe
sbb
icebp
aas
xor
push
pushf
sbb
xchg
ss
cmpsl
push
cmp
sub
cli
mov
arpl
push
and
jne
sbb
ss
popf
js
mov
push
cmpl
jp
sub
aaa
inc
in
push
or
cli
imul
int
adc
clc
push
push
int3
push
inc
les
andnps
insl
in
or
and
loop
fildl
sbb
push
sub
jmp
mov
sbb
roll
cmp
addr16
leave
insl
mov
mov
test
les
adc
add
xchg
xor
aad
repz
sub
rorl
cmpsb
xchg
and
aad
xor
rolb
xchg
add
sub
data16
jg
cltd
jl
xor
xchg
out
daa
push
in
out
repnz
stc
or
out
sbbl
adc
mov
mov
loop
and
xchg
or
jbe
adc
lahf
pop
lock
movsl
or
mov
jp
lret
xchg
nop
add
cmp
cmp
dec
aam
push
movsl
ss
loopne
loop
fyl2x
sub
fdivrs
cld
stc
ss
aam
xor
jne
sbb
stos
jb
inc
pavgw
jle
inc
xorb
push
adc
ds
out
cmc
in
xchg
sahf
test
push
pop
inc
outsb
jne
gs
adc
ds
out
cmc
in
xchg
sahf
test
push
pop
inc
outsb
jne
gs
adc
ds
out
cmc
in
xchg
sahf
test
push
pop
inc
outsb
jne
gs
adc
ds
inc
cmc
xchg
stc
sbb
inc
pop
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
xor
sub
sbb
popa
je
enter
or
pop
icebp
pop
loope
adc
and
push
call
adc
jns
or
pop
icebp
dec
loope
or
or
push
cmp
dec
mov
imul
mov
adc
adc
pop
in
cwtl
push
loope
cld
cltd
call
mov
sbb
inc
mov
mov
pop
push
dec
cwtl
push
adc
cmp
mov
mov
into
outsb
pop
jg
loope
pop
xchg
mov
inc
in
push
add
push
inc
sti
cmp
xchg
sub
push
icebp
je
fs
sar
into
fs
push
call
in
jno
jg
dec
imulb
in
push
icebp
inc
xchg
movsl
mov
xchg
pusha
xor
jns
or
insl
stos
jle
dec
dec
sbb
mov
xor
stos
pop
fildl
in
jo
xor
stc
sub
xchg
dec
cld
pop
cmc
stc
cmp
pop
repz
out
push
adc
push
nop
inc
fdivs
js
xchg
mov
outsb
test
mov
push
dec
loopne
adc
jae
push
lock
xchg
push
xchg
lods
sbb
jnp
jge
insl
les
mov
ret
xor
int
ljmp
cvtps2pi
jp
sbb
jo
add
or
stc
push
call
popa
cmp
or
pop
icebp
dec
loope
adc
and
push
call
popa
cmp
or
pop
icebp
dec
loope
adc
adc
dec
and
ficoml
lds
adc
lea
aas
repnz
fwait
jae
popf
sbb
and
sub
mov
ljmp
cmp
or
icebp
push
add
aam
scas
sub
fiaddl
and
addr16
sbb
jbe
arpl
xor
jno
popa
xor
rorb
incb
lret
fwait
push
pushf
repnz
rcrl
sbb
or
sub
adc
adc
into
push
int
push
sub
add
dec
sbb
call
orb
sbb
test
jmp
and
xchg
subl
push
fimuls
push
mov
xor
fwait
pop
inc
cld
push
push
cmpsb
mov
loopne
sub
decl
pop
ss
clc
jae
std
shr
mov
outsb
xchg
cmpsb
sbb
daa
dec
pop
out
mov
or
ret
mov
leave
jmp
add
nop
nop
sub
cmp
pop
pop
out
pop
push
jp
cmc
and
ficomps
xchg
addr16
repz
sub
lds
inc
icebp
xor
push
push
jo
sub
push
cmpsb
and
testb
cmp
adc
jno
pop
dec
push
scas
dec
sub
cwtl
fnsave
jb
lahf
xor
mov
xchg
les
imul
sub
xchg
adc
xor
xchg
movsl
sub
or
jne
rclb
dec
out
or
dec
mov
out
mov
cmp
rolb
xchg
loop
jne
popa
dec
dec
out
push
lcall
mov
inc
pop
int
push
sbb
fchs
stos
inc
clc
cmc
imul
lds
sarl
cmp
sbb
arpl
ljmp
cltd
jmp
pop
fisttpl
loope
es
psubusb
mov
mov
js
insl
xlat
push
xchg
add
xchg
repnz
scas
xchg
sarb
jae
aad
sbb
inc
pop
dec
ss
lcall
mov
div
imul
mov
divb
xchg
loope
pop
dec
iret
mov
loope
add
mov
fdivl
cmpsl
shrb
test
bound
jle
jg
test
adc
mov
adc
cmp
push
movsl
pop
sarl
inc
mov
push
pop
scas
or
leave
jnp
repz
icebp
pop
int3
xchg
cmpsl
fdivrl
sub
cmp
xchg
dec
mov
xor
sarl
pop
xorb
out
xorb
mov
dec
push
or
xchg
sbb
lods
cli
sbb
cwtl
bound
lret
jg
sti
dec
xchg
and
cmpsl
or
pushf
and
mov
loopne
decl
into
inc
pop
or
push
lods
sub
mov
hlt
mov
mov
outsl
and
adc
mov
sbb
popa
pop
or
popa
pop
data16
mov
mov
inc
rorb
mov
mov
add
cmp
mov
mov
les
repnz
leave
popf
clc
mov
xchg
jb
iret
xchg
lret
rcll
cmpsb
sbb
mov
mov
mov
hlt
js
cli
fisubrl
divb
push
aaa
and
out
sub
aad
mov
test
or
cmpsb
push
xchg
int
or
fisubrs
cmp
push
push
ja
cmp
push
sbb
xorb
into
adc
frstor
inc
add
movsl
imul
xchg
inc
xor
sarl
xchg
pusha
ret
fsubrs
xor
mov
cmc
lock
loop
int
cmp
sub
mov
push
push
cmpsb
outsb
cltd
scas
mov
dec
push
int3
adc
sub
adc
sbb
call
dec
pushf
fsubp
addr16
mov
and
xor
stos
scas
pop
cmp
cmp
mov
in
popf
cmp
jae
sbb
pop
mov
push
jbe
fmuls
ret
scas
lret
es
repnz
aaa
mov
das
cli
lcall
bound
push
jne
in
outsb
or
xor
mov
sbb
xor
or
mov
fcomi
inc
cmp
fucomp
shll
xchg
xor
std
lret
xor
jl
outsl
aad
sub
xor
or
push
cmp
push
fcmove
jmp
and
shr
adc
inc
mov
add
or
insl
sti
xchg
push
add
add
mov
adc
leave
xchg
push
inc
sbb
mov
inc
mov
in
or
popa
jns
rcrb
sbb
test
or
pop
sbb
mov
loop
popf
bound
cmpsl
and
dec
cmp
cmc
jb
xchg
nop
pop
sbb
je
in
add
outsl
cmp
dec
data16
lea
push
and
out
cmpsb
mov
add
in
push
cmp
xor
int3
in
jle
ss
lods
das
ljmp
pop
dec
ss
adc
scas
imul
es
enter
scas
icebp
cmc
data16
mov
lea
scas
bound
inc
out
repz
stos
repz
pop
cmp
movsb
and
loope
mov
pop
fildl
cmp
test
jp
push
push
inc
fmull
push
es
xor
cs
mov
outsl
or
push
leave
test
fisttpl
aas
xor
repnz
jmp
lods
imul
adc
mov
adc
dec
add
jno
loope
inc
scas
repnz
dec
mov
or
and
movsb
rcll
pop
popf
cmp
mov
cld
cmc
or
and
cltd
xchg
mov
mov
push
lea
inc
push
push
iret
negb
adc
in
fstl
xchg
push
xlat
xor
cmpb
xlat
pop
xchg
jnp
add
sub
xchg
fstpt
and
loop
and
or
mov
int3
rcr
xor
fdivl
frstor
ds
adc
mov
jmp
fldt
push
mov
cmpsl
pop
mov
cld
pusha
sub
mov
scas
test
bound
cmp
push
fs
out
std
clc
outsl
fstl
adc
cmp
jno
insb
push
sub
adc
mov
outsl
xchg
mov
test
xor
push
fcomps
adc
data16
xchg
mov
mov
push
rclb
sarb
cmpsl
shrb
cmp
lods
lods
lret
fnsave
lret
push
xchg
cwtl
int
cwtl
xlat
dec
cmc
test
cwtl
mov
lahf
add
inc
jg
cmpsb
shr
jmp
mov
push
test
dec
cmp
adc
aas
shll
xor
ja
push
icebp
dec
or
inc
test
sbb
movsb
clc
jo
std
dec
jp
xchg
xchg
add
inc
loope
sub
lret
fxch
ret
mov
movsl
pop
push
jecxz
test
cmp
sub
add
fildll
xchg
int3
push
mov
int3
lods
mov
test
pop
sbb
hlt
mov
xchg
xlat
inc
out
cmp
xchg
ret
cltd
add
or
movsb
mov
mov
inc
sub
int
dec
push
mov
dec
lods
jo
inc
mov
sub
mov
sub
push
sub
or
cmpl
cmp
inc
in
and
mov
mov
jle
fisubrs
sahf
pop
nop
mov
loopne
pop
pop
xchg
ja
adc
mov
pop
flds
jecxz
xchg
cli
push
xor
std
sub
jno
lahf
jl
lods
sbb
testb
cmc
jecxz
iret
mov
mov
lret
and
ljmp
dec
mov
dec
cmp
pop
call
jnp
ret
mov
test
popf
imul
jnp
xchg
sbb
andb
xchg
mov
sub
ja
pop
add
out
iret
shll
scas
ds
fprem
cmp
and
int3
scas
and
dec
loopne
pop
in
aaa
test
jns
mov
shrl
mov
push
push
xchg
std
xor
xchg
out
ss
jg
sbb
scas
jl
int3
in
cltd
inc
mov
sbb
sub
in
mov
shr
adc
pusha
loope
loop
ja
mov
jge
in
nop
jbe
stos
popf
dec
xor
inc
daa
pop
push
aaa
jmp
adc
imul
xchg
dec
mull
and
cs
dec
add
ror
add
mov
xchg
subl
rcr
cmp
inc
or
ret
lcall
std
sbb
xchg
mov
mov
dec
adc
test
adc
daa
jbe
insb
ret
sbb
mov
cmp
insb
or
mov
jnp
sub
fsubrp
enter
movsb
sub
and
push
jecxz
and
sbb
cmp
lods
xchg
or
sahf
aaa
ret
sbb
aaa
repnz
fadd
loope
or
pop
subb
cmp
jbe
mov
arpl
sarb
addb
mov
vmread
adc
inc
rolb
pop
scas
mov
mov
lock
pop
shll
xchg
fistps
dec
sub
popf
lret
andb
aaa
jmp
push
pop
push
sub
and
jne
cltd
and
pop
lret
cmpsl
cmp
pop
addb
call
inc
mov
cld
jns
loope
add
imull
enter
out
sub
icebp
cmp
or
xor
enter
mov
scas
mov
sbb
pop
dec
jp
mov
pop
loop
cld
dec
sbb
and
xchg
ljmp
jae
gs
out
fwait
push
add
rcrl
xor
sbb
inc
jbe
loopne
xor
pushf
cltd
mov
iret
sahf
sub
xchg
dec
cmpsb
and
add
out
shr
fisubl
fidivl
out
orl
es
es
outsl
int3
pop
das
out
repnz
sbb
mov
mov
xor
mov
sub
not
ja
lahf
cmp
loop
cs
mov
push
sub
or
inc
pop
adc
pusha
push
fdivp
sbb
aam
dec
pushf
jmp
addr16
test
int3
test
or
gs
mov
cmp
pop
add
and
arpl
sahf
ss
pop
jp
mov
outsl
xor
jmp
out
jecxz
call
mov
fnstsw
notb
push
notl
dec
push
fldl
in
jle
clc
in
or
leave
out
mov
xchg
cmp
xchg
cmp
or
negl
ds
sbb
cmp
mov
jl
enter
adc
mov
jne
outsb
sub
sbb
jp
fimuls
xlat
das
xchg
in
inc
or
aaa
push
popf
push
test
cmpsl
shrb
sahf
mov
dec
notl
into
rorb
pop
sarb
and
mov
jmp
add
sti
sbb
or
sub
push
mov
xor
jmp
and
lahf
shrb
ljmp
cmova
adc
xor
xchg
jecxz
loop
jne
dec
in
jmp
mov
pop
lahf
icebp
ss
mov
xchg
xchg
add
out
add
and
stos
in
repz
cmp
or
xor
mov
aaa
ljmp
pop
cmp
das
mov
loopne
xchg
mov
rcr
or
sub
iret
insb
add
or
and
or
add
jl
out
test
jno
pop
std
dec
int
insb
bound
pop
hlt
fnstcw
icebp
add
cmp
push
sbb
push
mov
push
jg
sahf
xchg
jmp
push
jle
xchg
jnp
in
push
fldenv
xchg
xor
shll
scas
int
push
xor
push
mov
xchg
jle
xchg
lods
sarb
adc
loopne
jbe
shr
lret
xchg
mov
lret
push
xor
ds
jmp
push
outsb
sarl
push
subb
cmpsb
or
push
and
mov
aad
pop
lds
jae
aaa
add
in
lods
xor
hlt
push
mov
int3
icebp
pop
jecxz
jnp
insb
xor
es
cmpsl
sbb
addl
sub
insb
jns
into
or
stc
dec
fwait
loope
mov
js
cmp
inc
stos
shll
movsl
xlat
cmp
lret
lods
test
out
stos
ss
mov
xchg
push
out
in
push
xor
adc
adc
jge
dec
divl
sbbb
sub
sbb
mov
fwait
jnp
sub
adc
into
and
xor
or
nop
jns
add
test
stos
and
sub
add
or
mov
shlb
in
ret
push
sbb
jo
dec
ja,pt
shl
pushf
test
mov
psrld
imul
dec
frndint
inc
outsb
inc
aad
je
and
adc
fstp
sahf
popf
jbe
jp,pn
lahf
mov
xchg
push
add
les
sahf
pop
cmp
shlb
in
add
insl
pop
mov
insl
loop
mov
push
fldl
fimuls
xchg
pop
fidivrl
call
pop
push
lea
shr
push
loopne
xchg
fldl
push
loop
mov
xchg
out
xor
ret
gs
jmp
xor
out
add
inc
mov
xchg
lcall
iret
add
mov
jo
rcl
pop
test
hlt
and
xchg
sarb
cltd
out
sub
inc
mov
es
iret
aad
cmp
push
jl
mov
test
pop
xchg
add
xchg
aas
xchg
pop
mov
xor
mov
jbe
mov
arpl
sbb
dec
test
outsb
pop
cmp
jae
lea
mov
mulb
pushf
mov
pop
out
xchg
pusha
sarb
mov
inc
int
xor
pop
je
jnp
lret
js
inc
adc
mov
scas
push
add
test
daa
dec
inc
out
jle
sahf
stos
push
pop
mov
mov
shl
fcompl
popf
cs
ja
repnz
jecxz
sbb
push
cmp
rcll
sbb
jo
into
insl
test
addl
jecxz
mov
or
xchg
push
pop
aam
mov
lcall
frstor
movsb
inc
cmp
mov
cmp
int
leave
in
iret
lahf
test
mov
outsb
lcall
xchg
popa
js
and
xchg
stos
loop
aaa
xchg
dec
cmp
dec
push
popa
push
scas
mov
push
sbb
enter
loope
mov
aaa
mov
subb
mov
mov
dec
add
push
jge
cli
inc
in
loope
push
mov
xchg
ss
fldl
inc
inc
mov
test
xchg
or
mov
sbb
in
or
mov
mov
inc
dec
arpl
dec
scas
aaa
outsl
ret
inc
ja
mov
nop
je
mov
repnz
jnp
pop
iret
inc
nop
jbe
in
subb
mov
dec
xchg
lods
test
cmp
cmp
inc
push
lret
test
cmp
xchg
mov
add
dec
xor
and
mov
je
mov
sub
ret
adc
mov
fucomi
fs
cltd
add
ljmp
stc
xchg
test
stos
enter
or
xchg
clc
les
imul
enter
sub
push
xor
sub
pop
and
stos
xor
add
add
push
out
sub
push
inc
cmpsl
scas
sbb
pushf
mov
bound
sbb
xchg
int
sahf
popa
fnstcw
xchg
shlb
int3
or
scas
icebp
pop
outsb
fwait
sbb
lahf
mov
shl
add
mov
hlt
dec
es
push
daa
lds
sub
mov
scas
and
mov
nop
outsl
cmpsl
cmp
add
xchg
addb
sbb
jbe
mov
pushf
push
or
xchg
rclb
dec
outsl
sub
sti
mov
cmpsb
xchg
sub
xchg
xlat
xchg
sbb
cmp
push
andb
clc
fyl2x
mov
mov
inc
int
jecxz
ret
out
adc
ficoml
into
sbb
adc
mov
hlt
repnz
bound
lea
mov
adc
das
ja
rorl
sub
pop
xchg
popfw
push
mov
inc
lret
and
xor
movsl
mov
or
into
jmp
cltd
fcoml
mov
pop
mov
mov
inc
xchg
cmc
shll
push
pop
hlt
push
bound
inc
xchg
mov
pushf
mov
jg
rorl
lods
mov
adc
sbb
sub
imul
rcrl
jl
pushf
popfw
xchg
bound
mov
add
fstpl
loopne
enter
pop
xchg
pop
into
or
jg
pushl
aas
mov
clc
rorl
pop
mov
jmp
dec
and
jo
inc
add
mov
and
jecxz
pop
or
mov
pop
push
push
sub
add
or
popf
and
xchg
mov
sub
pop
leave
or
jecxz
daa
outsl
addr16
scas
jns
scas
jnp
xor
add
push
shll
data16
incw
int
paddsw
inc
lret
mov
std
xchg
and
add
adc
andl
pop
imul
in
ljmp
test
pop
pop
test
mov
pop
bound
test
xor
scas
das
stc
push
out
js
inc
sbb
gs
fstl
xchg
ljmp
mov
nop
pop
xor
xchg
mov
and
andl
inc
imul
xor
imul
jb
adc
push
adc
or
out
push
cmp
xor
push
add
test
jns
aad
lcall
std
out
pop
jmp
push
pop
pop
push
jp
add
mov
jle
scas
loop
adc
sub
ret
fwait
pop
xchg
mov
sti
sbb
es
pop
xchg
jns
cmp
lock
sub
fwait
pop
into
xchg
jg
vpunpckldq
orl
xor
out
inc
xor
aam
and
out
inc
mull
and
fs
push
sti
mov
dec
xchg
iret
fmull
out
adc
lods
mov
popf
xchg
iret
xor
ja
xchg
mov
pusha
lret
push
in
fs
in
pop
imul
mov
add
pop
push
inc
pop
jb
add
mov
int3
scas
jo
and
rclb
add
das
add
fsubrs
aaa
stc
aam
jne
repz
jne
sub
addr16
jmp
pop
xchg
repnz
minps
or
xor
cmc
leave
add
mov
ja
add
neg
repz
ljmp
out
and
inc
mov
pop
pop
mov
stos
hlt
test
adc
stos
movsb
daa
adc
xchg
adc
mov
icebp
insl
pop
add
rclb
mov
outsb
lock
and
push
jb
ret
inc
out
pop
adc
adc
push
ljmp
jno
sub
sub
mov
mov
jno
lods
mov
adc
ret
sbb
ss
outsb
lods
scas
popf
decl
pop
add
add
dec
movsl
or
out
cmp
in
add
lods
sbb
jnp
int3
in
outsl
jb
xchg
das
push
xor
jno
sbb
stc
stc
sub
sbb
sub
push
push
les
sub
sbb
call
cmp
enter
pop
std
lcall
sbb
sbb
inc
loop
jno
push
ret
lds
es
push
mov
stc
mov
lock
cmpsb
jmp
mov
cmpb
clc
xlat
std
xor
sbbb
jmp
jle
jl
iret
popf
repz
dec
xchg
push
fsubrs
pop
sub
push
push
xchg
movsb
jno
pop
dec
push
pop
mov
divl
xor
push
lods
or
das
xor
fs
cltd
or
xchg
imul
loopne
inc
jae
jg
push
bound
adc
add
sbb
sbb
scas
jno
xor
xchg
pop
addr16
sarb
inc
pop
xchg
push
push
jge
fmull
cli
loopne
push
lahf
sbb
es
popa
nop
test
push
xor
mov
inc
jne
or
push
stc
add
dec
and
sbb
jmp
xlat
push
and
mov
daa
sub
xchg
inc
divl
push
cmp
inc
xlat
pop
xchg
push
and
xchg
xor
sahf
arpl
in
sbb
and
sti
ss
aad
js
mov
mov
sub
add
mov
daa
xor
pop
gs
xchg
jns
mov
xchg
lcall
mov
adcb
pushf
inc
cmc
inc
pop
fcoms
cmp
dec
stos
jbe
adc
adc
fisttpl
jl
aas
out
push
adc
jo
pop
lret
add
lret
add
andb
int
or
add
xor
inc
fdivs
popa
cmp
or
pop
icebp
dec
loope
adc
and
push
call
popa
cmp
or
pop
icebp
dec
loope
adc
and
call
popa
cmp
or
pop
cmc
mov
add
clc
push
clc
inc
fdivs
mov
mov
or
mulps
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
cmpl
dec
jmp
popa
or
jne
or
stos
loope
loope
adc
imul
and
cmp
jno
popa
outsb
xchg
sti
sub
rcr
shrl
jnp
imul
and
cmp
jno
popa
or
mov
test
sar
mov
popa
aaa
add
jge
jno
fiaddl
push
push
adc
pop
mov
xor
cmpsb
fs
inc
jnp
jnp
xor
push
sub
sti
xchg
adc
in
jle
call
stos
ds
and
ficoml
inc
mov
lret
in
rclb
sti
shr
out
pop
xor
inc
add
testb
adc
sbb
xchg
adc
addl
dec
dec
xor
jmp
in
mov
xor
mov
dec
popa
or
add
loope
mov
mov
jmp
in
inc
mov
mov
outsb
sti
push
out
les
sar
fwait
loopne
dec
jnp
imul
and
cmp
jno
popa
or
stos
icebp
fwait
loope
gs
adc
outsl
or
jl
pop
ss
jg
mov
repnz
in
pushf
jmp
inc
pop
inc
adc
xor
and
and
leave
mov
mov
mov
cmp
cmp
add
adc
inc
sub
popa
or
stos
icebp
fwait
loope
adc
imul
and
cmp
jno
popa
or
stos
icebp
fwait
loope
adc
inc
mov
into
xor
mov
push
mov
pushf
mov
xor
out
shrl
push
aas
shll
adc
pop
pop
adcl
clc
or
pop
add
ror
jp
sub
leave
fistps
fs
push
xor
push
mov
cmpsl
out
jo
or
adc
cmp
cltd
xor
adc
fildl
inc
adc
adc
inc
icebp
and
out
cmp
sti
test
adcl
mov
js
fistps
negl
sub
add
ret
mov
pop
push
push
adcl
add
clc
test
xchg
out
add
push
adc
push
adc
ja
pop
ss
pop
mov
mov
movsb
clc
lods
or
mov
add
xor
mov
sub
mov
xor
fneni(8087
or
subl
jmp
inc
sti
inc
jg
mov
lock
les
pop
mov
lahf
shlb
nop
cmp
imul
sahf
mov
pop
inc
jmp
mov
add
push
shll
jge
mov
sbb
jg
cltd
call
fisubs
dec
xchg
pop
push
xchg
pop
cmp
dec
gs
lock
div
mov
gs
das
jb
push
mov
push
lock
fidivrl
call
jno
inc
out
mov
ja
xchg
cmc
push
leave
mov
fcmovbe
sbb
adc
pop
sbb
icebp
enter
add
push
flds
or
rcrb
lret
sub
addr16
mov
mov
lock
loopne
das
pushf
adc
lret
pop
mov
cmpsl
fmull
aaa
lods
insb
outsl
sbb
and
fistpl
cmp
cmp
stos
pop
outsb
pop
dec
andb
jl
sub
into
push
or
jbe
daa
or
les
mov
lock
clc
cs
inc
out
lea
out
jb
sub
push
mov
stos
dec
mov
ss
aam
xor
arpl
mov
insl
in
push
jae
mov
ficomps
mov
scas
and
xchg
inc
inc
pop
xchg
lods
push
ficoml
xchg
mov
mov
pop
push
imul
mov
inc
scas
xchg
mov
ffree
pop
repz
cmp
aaa
fisubl
adc
mov
rorl
jnp
sbb
inc
int
xchg
cmp
mov
xor
mov
jmp
inc
out
int
push
repz
ljmp
dec
push
int
or
mov
in
xchg
movsl
outsb
rorl
pop
mov
xlat
mov
pusha
dec
jmp
add
out
cwtl
js
aad
cld
cld
ljmp
repnz
pop
out
sti
xor
sub
jmp
lea
repz
fisubrl
sbb
or
clc
add
jae
and
ret
cmp
pop
pop
jecxz
call
pop
fistpl
sbb
icebp
dec
pop
jg
dec
pop
mov
or
inc
shrl
cmp
xchg
shll
xchg
repnz
ja
xlat
xlat
push
cwtl
lret
jge
add
ljmp
adc
aam
push
pop
mov
cltd
jg
jae
enter
pshufw
cmc
lock
dec
adc
rolb
scas
lret
rorb
or
jae
out
cmp
push
or
mov
ss
mov
mov
jmp
pop
fstps
jle
pop
mov
pop
sub
mov
mov
gs
repnz
stos
pop
sbb
cmpl
jae
and
push
js
and
sahf
sub
push
or
in
mov
ss
inc
bound
outsl
mov
xchg
fmul
jo
cmp
mov
fcomp
pop
push
sti
int
sub
call
les
dec
lods
mov
imul
pop
mov
loope
fs
rcr
int
sbb
sub
mov
dec
int3
xchg
adc
dec
dec
jnp
pop
setb
lds
js
ret
cltd
imul
out
sub
dec
push
cld
mov
ret
push
out
fwait
jnp
push
mov
aaa
cltd
sub
jmp
cld
stos
jp
mov
inc
jmp
sahf
dec
fwait
rclb
stc
jnp
push
fcoml
out
and
sahf
push
repnz
int
add
inc
in
jae
xchg
and
xor
movsb
sub
lahf
fdivl
insb
cltd
add
adc
imul
sti
jmp
mov
sub
push
push
add
cltd
bound
fmul
mov
stos
dec
sub
or
mov
imul
icebp
aas
pop
mov
in
adc
pop
dec
adc
dec
xor
loope
mov
cmp
cli
cmpsl
push
xchg
dec
int
sti
cmp
movsb
xor
cmc
scas
cli
pop
or
mov
ret
mov
push
push
divb
int
mov
sub
xchg
mov
stc
loopne
sahf
loop
cltd
fcoml
ret
cld
ja
push
cmp
mov
add
loopne
movsl
pop
in
ljmp
or
ret
jp
sbb
jno
add
sub
fldt
nop
in
cmp
add
daa
jmp
icebp
lock
lea
jecxz
mov
imulb
pop
push
ja
mov
aam
inc
adc
dec
xrelease
sub
enter
mov
aad
and
push
rclb
push
fisubrs
push
mov
and
imul
inc
lds
add
mov
rcrb
xor
cwtl
sub
cmp
mov
cli
pop
inc
std
test
adc
and
mov
dec
in
cmp
dec
jmp
mov
inc
stos
push
sbb
cltd
xchg
sbb
cli
mov
popa
mov
test
mov
jb
hlt
ficoml
xlat
in
push
nop
roll
rcr
push
outsb
push
pushf
push
xchg
push
push
lds
jae
adc
ret
add
hlt
add
mov
mov
imul
mov
sub
icebp
jae
add
jmp
jne
cmc
imull
movsb
ds
pop
xlat
cmp
sbb
dec
push
and
xor
pop
rcrl
or
sbb
cmc
jge,pt
addr16
rclb
push
orb
jae
jle
mov
lock
cmp
push
lock
xor
xor
lret
rclb
mov
imul
mov
scas
or
sub
push
jl
jge
ret
out
and
xchg
jg
mov
xchg
repnz
sub
popf
psrlw
gs
in
insl
in
addr16
fs
pop
sbb
ljmp
jo
imul
int3
adc
jmp
cmpsb
or
bound
test
arpl
jmp
jbe
test
fimull
andl
shrb
xchg
cli
or
jbe
ja
push
cmp
mov
ret
mov
jp
sub
ficomps
or
inc
add
mov
mov
add
cmp
cmp
cs
sti
in
mov
nop
jg
nop
arpl
cmc
jb
add
orl
xchg
incb
orb
punpcklbw
out
dec
pop
call
shl
sbb
or
pushf
sbb
and
loopne
or
mov
enter
sti
jmp
mov
dec
lcall
pop
dec
in
fcoms
xor
cli
scas
push
xchg
fldcw
xor
jmp
rorb
mov
roll
inc
sbb
lods
das
or
out
int
in
pop
bound
jmp
fcomps
inc
ret
cmp
inc
jns
adc
add
mov
mov
clc
scas
jo
jne
leave
push
jne
popa
mov
mov
xor
fcompl
dec
ja
scas
cli
dec
jae
dec
push
popa
mov
mov
xchg
les
pop
ljmp
push
inc
jecxz
daa
dec
pop
jp
push
dec
inc
inc
lds
hlt
adc
and
je
bound
mov
jae
push
fstpl
pop
cli
int
xor
into
jno
cmp
push
lahf
mov
mov
clc
or
mov
pop
xlat
cmp
mov
stc
lcall
test
sub
movsb
inc
sbb
push
sub
inc
adc
clc
sbb
xlat
jbe
insb
rcrl
lret
pop
fstpt
dec
shll
push
mov
pop
sbb
sub
adc
mov
xor
and
call
xor
cld
outsl
divl
lret
sete
adc
mov
es
jae
in
adc
popf
push
pop
in
push
cmp
mov
add
sbb
mov
jge
test
sub
cmpsb
scas
sar
fxch
mov
jns
ds
adc
dec
aas
add
and
hlt
ret
cs
adc
mov
jbe
adc
sbb
fwait
insl
mov
mov
mov
cmpsl
loopne
lea
js
jmp
je
mov
xor
jb
jns
lods
add
or
push
jmp
inc
call
pop
js
xchg
adc
and
dec
and
xchg
lods
lahf
push
lock
sub
mov
jb
test
clc
outsb
push
jp
pop
in
sub
pop
jmp
lret
out
insl
jo
call
fidivs
add
jmp
cltd
aaa
movsb
fstp
sbb
fwait
shlb
les
scas
ss
pusha
cmp
mov
int3
ret
push
sahf
bound
out
or
int3
ds
sahf
xor
and
out
cmp
sti
pop
sbb
in
scas
cld
out
cmp
aas
adc
test
les
int
mov
jl
stos
mov
mov
clc
ljmp
jno
scas
mov
nop
inc
push
push
dec
imul
or
js
jecxz
pop
pop
stos
pushf
ficoml
jle
imul
fldt
cli
push
cmpsl
jns
shll
dec
push
dec
mov
mov
scas
xor
push
mov
or
cmc
mov
sbb
and
inc
cvtps2pi
sub
dec
mov
push
jle
aas
adc
in
cmp
scas
cmpsb
push
popa
fldt
dec
xchg
cli
cmc
xor
in
ret
pusha
push
dec
adc
pop
loopne
imull
out
outsb
push
add
add
loope
dec
add
add
dec
mov
xor
sbb
or
loopne
mov
pop
outsl
sbb
loopne
lods
mov
sub
xor
jge
ljmp
out
call
bound
test
addb
ljmp
aas
sbb
adc
sub
push
shl
popf
pop
roll
mov
cli
lock
adc
inc
popa
iret
sbb
in
or
movsb
jg
jae
sub
lret
addr16
outsl
rcll
push
xchg
cmp
test
or
outsl
push
sbb
mov
out
add
inc
mov
popf
imul
add
js
mov
jge
shrl
aad
jl
fistpll
lcall
adc
hlt
add
lcall
xchg
and
adc
add
and
add
cmp
enter
aas
add
imul
pop
hlt
ret
jp
dec
test
out
loopne
push
push
test
cwtl
cmp
mov
or
pop
lea
inc
shrl
dec
jge
pop
inc
cltd
pop
out
out
mov
aas
xlat
loop
loopne
mov
scas
push
and
or
clc
push
sub
push
in
fstps
pop
xchg
push
push
pop
cli
push
icebp
aam
dec
call
scas
sahf
fcmove
fxch
pop
mov
les
mov
xchg
xor
lret
jl
or
push
stc
aam
fwait
loopne
jb
ljmp
mov
imul
mov
add
lret
cld
les
xchg
jl
sbb
vshufps
les
inc
adc
popa
fdivrl
imul
insl
add
push
sbb
lea
hlt
xor
xchg
mov
xor
test
in
test
push
add
or
add
dec
push
xchg
loopne
or
add
push
pop
pushf
mov
xchg
dec
rcll
inc
sbb
lods
gs
sbb
lods
mov
rcr
lds
jmp
ja
mov
nop
mov
push
push
cltd
aaa
pop
mov
mov
es
in
test
add
push
aas
sub
push
rol
and
mov
mov
sub
dec
call
xchg
push
mov
shl
test
sbb
jae
or
adc
cli
fwait
jmp
cwtl
inc
adc
fwait
idivl
fwait
outsl
inc
mov
pop
pop
jbe
jle
addr16
ja
cmc
dec
fwait
sti
xchg
cmpsl
testb
push
rcrl
and
sub
mov
test
jno
mov
pop
sub
jmp
lods
add
call
xor
jo
test
jmp
cmp
inc
pop
lods
inc
out
test
xor
dec
or
je
std
rcr
push
enter
sti
pop
pop
mov
adc
push
mov
push
or
fsubrl
and
bound
and
adc
insl
in
jecxz
test
add
aas
orb
push
fstpl
stos
adc
fs
stos
jnp
pop
shl
cld
and
stos
xchg
nop
insb
out
sbb
jne
out
enter
aad
data16
into
sub
fidivs
jg
dec
in
mov
push
push
cmp
or
add
add
or
lock
xchg
and
mov
rcll
sbb
lds
mov
pop
lret
cmp
jp
adc
push
mov
mov
or
and
jno
popf
pop
dec
call
leave
addb
out
call
pusha
imull
push
aam
shlb
pop
out
int
dec
add
ds
sahf
push
jmp
out
gs
pop
inc
cmpsl
pop
addr16
inc
je
cmc
inc
mov
fmull
or
pop
mov
rcrb
pop
push
xchg
jmp
sub
pop
clc
dec
and
das
xor
dec
push
mov
rolb
cmp
push
ja
sub
pusha
mov
shr
sbb
xor
sub
push
jp
sbb
lods
inc
adc
pop
and
jmp
or
das
jp
call
movsl
inc
sub
sbb
test
imul
popf
cmp
sbb
jo
aas
out
rcrb
jecxz
pop
stc
aaa
push
data16
push
cltd
jae
insb
cmp
clc
sub
cmp
repnz
rcrl
in
dec
mov
aaa
jl
add
mull
dec
inc
mov
mov
lock
pushf
popl
mov
je
mov
sahf
cmp
js
mov
lea
or
in
mov
inc
enter
out
mov
mov
inc
sbb
mov
in
inc
push
mov
mov
xor
cmpsb
sahf
cli
stos
xor
pop
ljmp
mov
push
das
ljmp
inc
mov
ret
mov
inc
test
jae
aaa
fildl
mov
bound
mov
xchg
mov
mov
sbb
inc
mov
mov
mov
popf
push
add
out
dec
jg
xchg
addl
or
and
je
sbb
nop
push
int3
and
int3
mov
add
aas
push
and
int
pop
jb
sbbl
adc
push
pop
and
andb
paddsw
cs
push
push
and
mov
cmp
lahf
cli
mov
dec
cmp
add
pop
flds
pop
pop
std
int
add
cmp
push
inc
pop
stos
movsb
fs
out
push
popa
cltd
mov
daa
inc
push
pop
mov
mov
or
dec
mov
test
push
push
out
leave
push
add
add
in
dec
out
or
aaa
sub
push
sahf
lcall
pop
sbb
stc
xor
cmp
lea
mov
mov
pop
arpl
mov
imul
lock
hlt
or
test
std
sub
push
cmp
add
insb
push
insl
stos
mov
cmpsb
loopne
pushf
jo
and
push
iret
adcb
arpl
jnp
or
mov
daa
adc
cmpsl
popa
ret
nopl
ljmp
idiv
mov
xchg
push
shrb
data16
clc
dec
adc
pop
in
xlat
sarl
cmp
jecxz
inc
call
adc
call
je
push
and
jno
pushf
cmpsl
sub
nop
jmp
cmpsb
cli
lds
cmc
push
leave
and
testl
vorps
push
or
push
shll
mov
or
out
pop
bound
adc
or
scas
mov
ret
xchg
ret
fdivr
stos
dec
inc
mov
aaa
out
fadd
push
test
aad
jl
xchg
das
jmp
jmp
xor
repnz
add
rcl
and
cld
add
sbb
xchg
loopne
sbb
imull
out
fldt
int3
scas
fwait
pop
loopne
loope
lret
std
cmp
sbb
loop
pop
and
or
mov
lret
jne
jmp
mov
je
cltd
int
pop
mov
or
dec
or
lret
cmpsl
dec
sbb
inc
and
sbb
jmp
mov
adc
xchg
jne
xchg
mov
cwtl
dec
pushf
jns
push
mov
jmp
inc
jbe
or
mov
dec
cmp
jbe
adcl
mov
jo
ds
inc
inc
inc
cmp
jb
dec
aas
dec
int3
testl
pop
sbb
arpl
iret
sub
movsb
mov
cld
dec
pop
lds
fcoml
cmp
mov
mov
or
cmp
mov
mov
cmpsl
loopne
jo
jmp
loopne
inc
shlb
jmp
push
insl
xchg
andl
leave
or
adc
movaps
in
movsl
xchg
lods
outsb
mov
xor
sub
mov
orl
inc
sahf
test
fnsave
pushf
xchg
xchg
push
rorb
add
push
adc
pop
aad
and
cmpsl
nop
shrb
mov
ret
nop
pushl
xchg
pop
pushf
movsb
loopne
negl
xchg
push
adc
mov
inc
mov
cmp
out
xchg
movsb
jg
mov
arpl
mov
ljmp
xor
inc
fstpl
adc
lea
aam
and
fistps
xchg
int
adc
lret
test
in
sbb
lret
repz
mov
imul
ljmp
in
jae
imul
scas
push
mov
gs
pop
sbb
mov
mov
je
out
inc
inc
cmp
fsubs
rcrb
cmp
aam
in
adc
adc
jle
dec
cmp
jbe
loop
ret
sbb
jae
lds
roll
push
aam
je
mov
ret
lea
popf
jo
sub
mov
push
movsl
push
ret
or
fsqrt
dec
cmc
adc
pop
out
sbb
les
fwait
dec
jl
pop
and
insb
cld
aaa
inc
mov
jnp
jp
cmp
cltd
ret
movsl
sbb
jmp
jmp
fucomp
xor
into
dec
aad
adc
movsb
into
jecxz
mov
rclb
ja
incb
cmp
push
fs
or
mov
sbb
les
in
mov
mov
popf
mov
push
insb
xchg
cmc
ljmp
addl
or
dec
adc
pop
sbb
mov
call
mov
or
sahf
xor
or
adc
mov
adc
dec
mov
xchg
dec
pop
cmc
icebp
into
cmp
sbb
sub
mov
fcomp
cmpsb
push
adc
and
adc
push
or
inc
ljmp
inc
inc
adc
mov
cmp
or
jnp
std
xor
cmpsl
mov
scas
dec
push
jns
mov
jnp
stos
jmp
rolb
jl
and
ss
mov
aam
pop
push
adc
clc
hlt
cli
cltd
loop
insl
xchg
addb
pusha
roll
and
into
mov
and
fstpl
push
les
mov
push
mov
mov
xor
jp
mov
adc
std
aad
flds
sbb
fsubrs
pop
adc
out
addr16
repz
lock
and
or
lret
push
jb
mov
in
pusha
leave
enter
daa
push
mov
dec
push
cmp
jno
popa
or
stos
icebp
fwait
loope
adc
imul
and
cmp
jno
popa
or
stos
icebp
fwait
loope
adc
imul
and
cmp
jno
popa
or
stos
icebp
fwait
loopne
adc
imul
and
cmp
jno
popa
lret
xchg
sti
addl
xor
push
fs
je
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
push
call
mov
add
mov
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
sbb
add
inc
hlt
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
hlt
add
movsb
hlt
add
pushf
hlt
add
xchg
hlt
add
mov
add
test
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fdiv
add
loopne
add
in
hlt
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
cmc
add
shl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
testb
push
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
testl
add
testl
add
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
clc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
stc
add
pop
stc
add
fs
add
insb
stc
add
je
add
jl
add
test
add
xchg
stc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
stc
add
fdivr
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
