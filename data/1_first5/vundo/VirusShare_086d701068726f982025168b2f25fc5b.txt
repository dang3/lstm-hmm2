push
add
add
sbb
add
arpl
lock
or
iret
add
add
add
dec
or
add
adc
sbb
add
cwtl
or
mov
xor
and
out
or
addl
loopne
push
mov
int
mov
add
loopne
mov
or
add
add
add
add
add
lock
or
rolb
mov
add
or
pop
or
fwait
add
add
pop
add
call
push
inc
add
adc
cmp
and
dec
add
nop
add
or
sbb
rolb
mov
and
xor
addb
or
add
and
pop
or
add
cmovo
or
addb
or
add
add
add
and
push
or
add
or
fmuls
push
add
or
rolb
or
add
or
add
add
pop
add
add
push
mov
add
or
add
add
add
add
and
filds
mov
into
cmpxchg
inc
or
add
push
add
jg
nop
add
add
jae
mov
testl
add
rolb
mov
inc
add
or
and
pushf
or
add
add
dec
addl
add
add
cmp
add
dec
and
add
or
add
cs
add
or
add
pop
addb
or
add
loopne
jmp
mov
xchg
mov
in
pusha
add
add
add
push
add
cmpsl
or
loopne
insl
add
add
xor
or
rolb
push
add
dec
or
add
and
xchg
or
add
or
add
push
inc
add
add
and
pusha
add
or
add
lock
add
add
inc
add
mov
loopne
xor
orb
add
push
xor
sti
or
add
or
add
push
add
or
add
or
add
or
add
pop
mov
add
or
add
mov
add
mov
xorw
push
popl
xor
andl
movw
call
subl
test
jne
sbbl
ret
push
popl
xorw
push
movl
push
push
popl
mov
push
popl
pusha
subb
orb
call
push
popl
mov
subl
addl
push
sbbl
xorl
movw
push
popl
addl
addb
sbbl
push
addl
call
orw
movl
cmpl
jne
push
popl
call
push
popl
subl
ret
orw
orl
jmp
movl
subw
xor
movw
addw
mov
subw
push
popl
shl
xorl
andb
mov
andl
shl
andl
andw
mov
movl
cmp
jne
push
popl
call
push
popl
subl
popa
orl
pusha
push
popl
call
movl
mov
movl
addl
push
orw
xorl
push
popl
addl
addl
xorw
push
subl
push
popl
call
sbbw
addb
push
push
popl
xorl
push
popl
addl
xorl
addl
pop
xorb
cmp
jne
push
popl
subl
ret
push
popl
popa
xorb
andl
call
subw
push
addl
xorl
push
popl
addl
push
popl
andb
push
addl
push
popl
call
subb
push
push
rol
ror
add
mov
sub
xchg
push
popl
addb
mov
orb
xorb
shl
subw
push
addb
xor
movl
subl
push
xorb
call
addl
push
subl
addl
mov
movw
push
popl
push
andl
jmp
push
popl
pop
subb
subl
mov
push
popl
push
popl
push
subl
push
andl
orw
push
subl
xorb
mov
addl
mov
movb
xorl
rep
push
popl
subl
pop
push
popl
sbbb
pop
push
mov
add
xchg
push
lea
xor
not
mov
add
xchg
push
popl
xor
subl
jmp
push
popl
sub
movw
push
popl
mov
xorl
sub
push
popl
sub
push
popl
mov
push
popl
push
popl
sub
addl
sbbl
or
jne
subb
push
popl
add
orl
jmp
push
popl
sbbb
mov
orl
shr
subb
shl
movl
mov
orl
addl
xor
subl
push
popl
jmp
andl
sub
subl
mov
push
popl
xor
andw
cmp
jne
xorl
mov
push
popl
orl
add
xorb
cmpw
jne
xorw
ret
orl
push
xorw
xor
andb
sbbl
pushl
subl
push
popl
pop
sbbw
sbbl
lea
xorl
xorl
or
movw
mov
andl
push
popl
mov
push
popl
orb
lods
subw
xorw
mov
push
popl
pop
push
popl
ret
subl
sbbw
push
orl
push
popl
mov
addl
movl
add
movl
xorb
push
addl
orl
push
xorw
push
push
popl
xorl
push
push
popl
andb
push
push
popl
push
popl
mov
andb
addb
mov
movb
subl
add
sbbw
pushl
andl
addl
mov
sbbb
orl
add
sbbl
add
push
popl
andb
mov
push
popl
push
popl
add
andw
addw
xor
push
popl
lea
andl
mov
andl
add
andb
xorb
mov
xorl
xor
andl
push
popl
rol
sbbl
andw
xor
movl
push
popl
inc
subl
push
popl
cmpb
jne
addl
cmp
je
xorw
inc
orb
push
popl
cmp
jb
sbbl
xorl
mov
push
popl
add
subb
addb
movzwl
addl
push
popl
mov
sbbl
subl
add
push
popl
mov
orw
andl
add
andl
pop
movb
push
popl
cmp
jbe
push
popl
cmp
jae
movw
pushl
addl
push
popl
pushl
push
popl
orl
push
movb
xorl
addb
addl
sbbl
addw
pushl
subw
call
sbbw
call
andw
push
popl
pop
push
popl
pop
subl
orl
pop
addl
pop
push
popl
pop
andb
leave
push
popl
movl
ret
subw
orw
call
sti
add
jbe
cmp
fildl
movsl
popf
push
mov
cmpsl
scas
xor
or
aam
adc
std
out
lds
lcall
sbb
push
mov
and
nop
inc
bswap
xchg
xor
jo
mov
imul
imul
test
lods
testb
jne
inc
lods
lret
cmp
mov
bnd
sbb
xchg
pop
imulb
inc
loope
and
lods
stos
or
out
imul
mov
xchg
mov
sub
aas
das
cmc
mov
popa
adc
int
and
push
add
sub
mov
adcb
fldl
xlat
add
js
lock
addr16
insl
pushl
cmp
sub
cmp
jecxz
mov
push
mov
js
mov
xlat
mov
call
daa
and
lods
lret
icebp
xor
jge
and
and
mov
out
pusha
mov
cltd
sub
and
imul
stos
jmp
jne
fcoml
add
jo
testb
popl
sbb
push
add
aad
in
int3
push
jns
push
call
inc
cmp
sbb
andl
mov
cmp
cwtl
fidivrs
mov
jb
aaa
mov
shrb
inc
inc
or
jae
xor
adc
aas
xchg
fistl
bound
out
fsubr
lahf
scas
push
dec
add
jno
out
cs
pop
hlt
mov
out
test
dec
push
lret
test
pop
daa
adc
leave
mov
jnp
add
mov
lret
hlt
add
mov
iret
mov
and
push
dec
xor
rcrl
jecxz
lds
mov
mull
jg
imulb
pop
mulb
cmp
xlat
cmpsb
and
jns
adc
imul
dec
rorl
jg
push
shl
lcall
push
aaa
arpl
hlt
sahf
jmp
sbb
push
out
inc
aas
jle
dec
add
mov
popf
inc
adcl
mov
mov
mov
sbb
andb
shlb
movsl
cmp
adc
xchg
js
aam
pop
je
cli
test
outsl
rclb
scas
xlat
jge
out
insl
aaa
jno
push
add
js
ds
fmul
pop
jmp
daa
jno,pt
cmpsb
cmp
pop
dec
add
dec
int
jge
fwait
mov
lahf
push
sub
xchg
xchg
loop
mov
mov
xchg
stos
mov
jmp
dec
adc
neg
out
test
cli
cltd
pop
inc
cld
subb
jnp
insl
mov
es
pop
or
int3
sub
nop
in
inc
std
xorl
outsl
jnp
insl
pushf
dec
pushf
stc
lock
sub
out
dec
xchg
lcall
mov
stc
stos
mov
enter
xor
leave
daa
test
nop
into
xorl
cmpsb
out
into
daa
movsl
cmp
repnz
mov
out
mov
call
arpl
cmc
push
jns
sbb
movsl
nop
pusha
jmp
dec
inc
push
out
adc
shrb
inc
inc
ja
lcall
cmpsl
cmpsb
xchg
mov
push
sbb
dec
add
pop
jg
pop
daa
pop
xchg
mov
cmpsb
movsb
call
cmpsb
cmp
out
jbe
add
jnp
test
mov
sbb
cld
sbb
xor
loopne
test
call
js
loopne
test
or
add
mov
das
adc
jl
xrelease
repz
mov
jnp
loop
mov
dec
pop
and
push
adc
lret
jbe
lret
mov
mov
pop
ss
push
jae
pop
aas
mov
fldcw
inc
aas
dec
xchg
dec
jmp
sbb
adc
push
out
mov
std
mov
inc
sarl
or
daa
xor
scas
xchg
dec
sti
popa
pop
call
in
fdiv
fwait
pop
sbb
fildll
mov
mov
shrb
xchg
add
out
jmp
mov
xchg
das
push
push
sub
sub
pop
in
data16
lret
imul
lods
lret
mov
add
fwait
mov
test
lretw
xchg
mov
sbb
stos
cmp
mov
lods
aas
adcl
push
clc
add
imul
mov
adc
out
and
push
out
cltd
push
adc
mov
push
xorb
mov
dec
add
jnp
insl
test
daa
or
int3
push
leave
xchg
ljmp
out
fsub
pop
jmp
mov
mov
push
das
mov
cli
imul
xchg
cmc
xor
push
rcrl
lods
mov
dec
add
pop
loop
xchg
mov
adc
and
push
sbb
jmp
sub
mov
sti
sbb
hlt
pop
ljmp
mov
and
mov
daa
movsl
lcall
nop
dec
out
sti
sub
mov
mov
sarl
stos
lods
xorb
lret
cld
xchg
push
nop
or
repnz
mov
es
cmpsl
mul
lret
cmp
xchg
out
stc
ja
jmp
inc
sub
dec
lock
lods
lret
or
repz
das
pop
in
push
clc
into
xchg
stos
cmp
in
leave
or
mov
push
scas
xchg
jg
ss
jmp
lea
fildl
sbb
fldcw
lock
dec
out
lods
and
daa
lea
lret
mov
lret
and
inc
fsubrp
out
aad
xchg
pop
push
enter
notl
lds
and
pop
xchg
push
lock
cwtl
or
fcompl
adc
ljmp
xor
add
pop
inc
imulb
dec
mov
fwait
mov
cmpsb
je
push
sub
sbb
push
and
or
lods
lret
and
ret
jp
jg
ljmp
jmp
jns
pusha
cltd
lds
shll
and
inc
inc
sbb
icebp
scas
imul
add
fcompl
aas
lock
add
ljmp
or
repnz
mov
es
int3
push
leave
xchg
ljmp
nop
jecxz
icebp
mov
ja
and
rorb
or
xor
stos
and
xchg
xchg
fstpl
xchg
lret
daa
movsl
cmp
inc
loope
sbb
lcall
sbb
push
adc
pusha
es
lcall
mov
xchg
jno
arpl
mov
and
aas
scas
mov
sbb
sub
cli
fstl
adc
leave
movb
push
lret
bound
out
jg
ret
jge
ja
xchg
lds
mov
lret
add
aaa
xor
js
sbb
xchg
sahf
and
adc
xchg
int
stos
aaa
outsb
pusha
scas
mov
daa
movsl
lea
push
pop
dec
jge
stos
imul
and
cwtl
push
and
push
push
pusha
sbb
dec
and
or
sbb
sti
mov
mov
cmp
mov
sti
jnp,pt
aaa
iret
test
and
push
imulb
in
xchg
shlb
movsl
cmp
nop
cmp
sub
fdivrs
fadds
mov
lods
cmp
mov
inc
iret
outsb
sub
xchg
repnz
cmpsl
and
inc
xchg
mov
test
cmp
push
scas
cmp
clc
test
dec
adc
fildl
divl
shrl
and
es
pop
dec
and
jns
lea
push
jge
fwait
mov
jns
rcr
mov
sbb
sub
or
dec
and
sbb
daa
movsl
push
mov
and
and
xlat
dec
jmp
and
popf
scas
in
mov
push
sub
sbb
daa
movsl
mov
add
aad
into
lea
lea
mulb
mov
add
xchg
push
xchg
es
push
add
jne
push
sbb
xchg
movsl
mov
lcall
xchg
cli
and
cmp
and
mov
gs
fcomi
ds
std
adc
lret
mov
cmpsl
add
cmp
push
sbb
in
xchg
rep
mov
inc
inc
sbbl
iret
dec
stc
mov
cmovs
and
cmp
pop
imull
mov
std
mov
dec
sub
pop
in
data16
adc
movsl
ret
xlat
mov
test
jmp
cmp
repz
mov
sarl
sub
scas
aaa
jno
xor
call
lock
pop
xchg
popf
and
addb
and
test
xchg
add
push
push
loope
imul
ds
pop
movsb
lods
out
sbb
lahf
inc
ja
push
insb
push
inc
ds
xor
xchg
in
imul
and
sahf
aam
movl
imul
das
or
out
fmull
jnp
in
xchg
dec
sub
dec
lock
lods
lret
lret
push
and
adcl
sti
xchg
repnz
aas
es
or
stos
scas
andl
push
aam
adc
lods
test
lea
jns
sarl
arpl
add
mov
sub
sbb
or
sub
sahf
sub
sbb
adc
push
mov
mov
mov
aaa
inc
stos
mov
and
push
fidivl
fcomi
data16
test
bound
lods
lret
lods
dec
repz
push
xchg
ret
shl
ret
mov
fcmovu
mov
lds
xchg
jns
and
inc
aam
mov
int3
xchg
mov
jae
sarl
xor
push
pop
daa
jne
test
hlt
movsb
pop
outsb
lods
push
sbbb
push
adc
rolb
and
jg
lahf
mov
pushl
lea
rol
lret
xlat
pop
lcall
jmp
dec
inc
shr
dec
push
enter
ret
or
loop
sbb
cld
dec
fwait
out
ret
stc
fs
ja
dec
movsb
cmp
mov
or
jle
xor
pop
testb
mov
movsl
cmp
repnz
mov
push
push
cmpsl
mov
push
push
push
pop
leave
cmp
ja
hlt
fbstp
lods
lret
test
push
stos
popf
mov
add
xchg
add
push
xchg
repnz
xor
or
pop
dec
addr16
pop
jbe
add
cmpsl
jecxz
mov
lods
out
add
add
repnz
dec
or
int3
mov
into
roll
pop
lods
sub
sbb
mov
push
test
mov
cmp
into
push
xchg
inc
cmp
and
or
or
mov
xchg
pusha
test
in
fisubrs
daa
movsl
nop
fisttpll
xor
xchg
pop
imulb
ss
fdivrl
cmp
cmp
rclb
stos
push
pusha
add
addr16
ret
jge
dec
sbb
pop
mov
mov
xor
lcall
dec
out
movsl
mov
lret
sbb
cmc
testl
adc
mov
adc
rcl
sbb
lahf
adc
dec
in
orl
gs
pop
mov
fldt
das
outsl
xchg
xor
aaa
lret
adc
xchg
sbb
cmp
pop
dec
das
mov
sbb
add
add
in
and
mov
cmp
ja
xor
push
repnz
stc
imul
divb
sbb
fisubrl
dec
push
call
jno
shll
loopne
dec
push
cmp
add
sbbb
pushf
lods
decb
xchg
jne
stc
lods
lret
xor
mov
movsl
cmp
adc
repz
xchg
mov
lods
daa
xchg
mov
push
imulb
repz
mov
ja
loope
das
lea
cmp
call
lea
pop
divb
xchg
sub
je
mov
inc
std
bound
xchg
pop
imulb
pop
add
xchg
sahf
jb
in
lods
and
dec
movsb
sbb
lret
daa
movsl
mov
pop
mov
add
leave
cmc
jp
mov
xchg
fstl
shlb
insl
stos
mov
out
sub
les
scas
divl
ficomps
cmc
inc
stc
mov
dec
sbb
cwtl
fucomi
idivl
and
imulb
sbb
cmp
xchg
icebp
aad
mov
shlb
outsb
iret
adc
mov
pop
mov
clc
clc
outsl
stos
mov
call
xorb
inc
int
stc
outsl
sbb
push
xchg
fcomp
pop
jmp
scas
movsl
and
cmp
pop
dec
cld
sbb
in
xchg
into
daa
movsl
cmp
add
and
sub
mov
xchg
ret
jg
inc
adc
xor
jb
fisttpl
mov
ljmp
aaa
mov
sub
jnp
push
fmull
push
adc
push
lea
dec
add
out
push
pop
out
test
out
lds
pop
sub
pop
in
cmpw
ja
test
mov
movsl
cmp
sub
xor
loope
andl
aaa
lods
lret
sbb
aas
nop
pop
push
inc
in
jo
cltd
shl
cmp
and
mov
popaw
mov
mov
imul
and
mov
insb
inc
adc
pop
daa
rcpps
lret
test
pop
cwtl
and
mov
jnp
std
sbb
pop
imul
test
add
outsb
subb
loope
mov
out
inc
repz
sbb
js
and
ret
pop
ja
and
adc
je
cmp
pop
add
xchg
int
outsl
mov
jnp
iret
jl
pusha
cltd
call
daa
add
sub
inc
and
pop
dec
sub
loope
std
lods
lret
inc
push
rcrl
xchg
faddl
mov
xor
repnz
leave
push
add
sbb
push
add
push
add
fidivs
nop
ret
sub
cmpsl
inc
adc
stc
xchg
int3
dec
movsb
pop
in
push
cld
sbb
xchg
enter
sbb
mov
add
test
jne
stos
mov
add
popa
test
js
xchg
lahf
fdivs
add
leave
push
imul
mov
adc
ljmp
pop
adc
mov
addl
cltd
inc
adc
or
cmpsl
movsl
cmp
pop
dec
sub
xor
daa
push
push
dec
repz
push
mov
or
and
loopne
dec
ljmp
rol
stos
fnsave
flds
sbb
cmc
mov
test
fwait
mov
insb
test
or
add
js
in
mov
or
xchg
stos
mov
in
dec
and
pusha
imul
out
xchg
jns
mov
or
call
movsl
cmp
cmp
mov
add
xchg
xchg
fstp
stos
insb
cmp
or
mov
sti
loop
out
mov
pop
imulb
repnz
inc
or
ds
xchg
repnz
lock
mov
push
fisttps
aam
test
sub
pop
loop
cmp
and
stos
imul
or
jmp
lret
in
nop
cmp
fnop
pop
jmp
in
cmp
dec
mov
push
xor
adcl
and
adc
arpl
std
sbb
ja
mov
xor
jnp
push
iret
cmp
nop
dec
sub
pop
mov
sti
mov
psadbw
gs
lahf
arpl
mov
and
jge
add
out
mov
mov
addr16
fisubrs
fstps
cmp
in
cmc
and
sbb
mov
cmp
and
mov
jle
cwtl
pop
and
addr16
and
inc
lret
aad
push
pop
hlt
push
sbb
ret
pop
rcll
mov
pop
cmpsl
dec
or
pop
idiv
dec
and
mov
daa
movsl
lret
adc
in
std
push
jecxz
mov
es
rclb
cmpsl
xor
add
cli
std
sbb
fincstp
pop
loope
test
sbb
adc
sub
loop
insl
popf
mov
add
inc
lea
divb
add
bound
sub
stos
push
shlb
mov
xchg
das
nop
inc
les
mov
das
xchg
sub
outsb
loopne
mov
dec
stc
mov
jbe
or
out
addb
sar
jns
iret
fmull
pushf
stc
sbb
stc
loop
frstor
inc
sbb
add
and
mov
mov
pop
adc
xchg
sti
pop
pop
js
push
xchg
rcr
arpl
inc
cmp
aas
insb
aaa
loop
mov
bound
cmp
pop
scas
mov
stc
jbe
mov
out
fimuls
add
cmpsb
cmp
mov
or
dec
incl
jnp
insl
scas
push
daa
or
inc
aam
int3
inc
leave
xchg
call
sub
lret
daa
movsl
cmp
mov
stos
mov
xlat
pop
subb
mov
pop
pop
ficomps
and
fsubs
pop
push
add
std
xchg
xchg
mov
or
sbb
xor
insb
test
jnp
cmp
popf
sub
mov
nop
jnp
add
stc
pop
sarl
cwtl
jnp
mov
adc
in
int
jnp
push
cmp
sub
push
sbb
cmpsb
cltd
nop
stos
iret
push
out
lods
push
icebp
pop
sbb
lea
dec
sub
lods
sbb
mov
xchg
shlb
movsl
cmp
imulb
fldl
mov
dec
ljmp
dec
daa
mov
fldcw
dec
sbb
stos
xor
imul
sub
xchg
pushf
pop
movsl
cmp
sbb
jns
aam
dec
lods
jne
test
cmc
and
mov
or
lds
push
imul
jo
push
sbb
enter
xchg
in
push
loope
sub
add
jmp
sub
loope
movsl
cmp
push
ja
pop
and
outsl
jne
imulb
repz
sub
adc
mov
mov
movsl
pop
lret
ret
shl
mov
iret
xchg
test
call
dec
jecxz
mov
decl
adc
and
pop
testb
push
cmpsb
cmp
pop
jg
or
and
pop
fwait
lods
sbb
push
subb
and
ds
dec
and
and
pop
mov
dec
add
pop
dec
push
loopne
pop
or
sbb
testl
push
add
cmp
pop
mulb
js
xor
lods
adc
xchg
shl
les
orb
ret
jg
arpl
pop
cmp
and
or
idivl
adc
inc
push
out
mov
mov
mov
loopne
mov
lods
stos
ret
xchg
shll
mov
pop
xchg
add
push
add
push
insb
mov
jnp
jg
fdivrs
mov
subl
push
xchg
mov
movsl
cmp
pop
cld
sbb
cmpsl
loope
loopne
test
and
inc
sub
jl
insl
popf
shl
adc
flds
sub
jo
and
jno
pop
xchg
jbe
mov
add
jp
mov
in
into
dec
movsl
xor
lods
jo
fildl
rcrl
mov
and
nop
dec
incb
adc
pop
jns
sti
dec
push
nop
ficoms
hlt
imul
dec
jge
mov
sub
in
xchg
dec
jae
cmp
lock
in
jo
xlat
mov
scas
enter
gs
aaa
lret
pop
mov
jg
lea
out
jge
fwait
mov
test
mov
sbb
sub
sbb
cmp
and
out
fstpl
cli
pushf
cmp
nop
dec
stos
faddl
cwtl
mov
outsl
mov
cmp
cmpsl
ficoml
and
daa
data16
std
popa
cwtl
push
xchg
jne
or
pop
dec
ffree
popf
dec
and
xchg
add
jno
iret
mov
test
repnz
jg
pop
inc
push
hlt
dec
sbbl
lods
into
rolb
in
adc
push
icebp
pop
push
fcmovu
cltd
scas
jne
mov
push
lret
ja
sbb
xchg
sahf
fwait
rol
or
jge
data16
mov
lcall
mov
jbe
addr16
call
outsl
sarl
and
jnp
mov
mov
mov
shrb
xor
xchg
xor
movsl
cmp
mov
pop
push
shlb
lods
or
xor
js
dec
xchg
int3
cmp
stc
xchg
repnz
data16
xchg
xchg
sub
push
loop
push
aas
pushf
sbb
dec
mov
pop
or
shlb
test
jge
or
mov
popf
xchg
mov
push
loope
stc
mov
imulb
ss
dec
out
cli
repz
std
fdivrl
andb
aam
lods
and
add
xchg
les
movsl
cmp
mov
testl
pop
imulb
data16
jmp
xchg
jns
into
adc
xor
jl
stos
sbb
xor
lret
pushf
out
and
inc
into
and
mov
or
stos
sub
clc
cltd
int3
mov
or
sbb
repz
shll
cmp
dec
mov
aaa
sub
xchg
testb
jnp
test
jmp
mov
push
or
test
adc
cmp
adc
pop
mov
repnz
lret
lods
leave
repnz
lock
xor
xchg
es
aas
mov
xchg
or
lods
dec
mov
mov
addr16
sarl
lds
ds
push
aad
xor
xor
movsl
sbb
jo
xor
mov
mov
jl
cmc
and
movl
loope
mov
mov
mov
mov
mov
lods
aas
inc
nop
bound
inc
pop
add
pop
es
int
in
pop
js
jp
xchg
jbe
fldcw
cmp
jno
ljmp
push
jecxz
dec
push
add
aaa
xor
cmpl
add
insl
lods
push
pop
shrb
push
inc
lea
divb
mov
loope
sub
stos
xor
arpl
inc
dec
out
lods
and
add
stc
jo
dec
popa
ja
mov
mov
mov
mov
or
sub
pop
sub
dec
adc
fidivs
inc
pop
mov
adc
das
mov
nop
cmp
subl
test
or
repnz
popf
stc
sub
sub
xchg
out
dec
sub
sbb
daa
lret
sbb
cs
xchg
outsl
pop
dec
in
test
xchg
xchg
arpl
pop
int
sbb
sbb
mov
push
sub
cmp
aaa
add
nop
or
xchg
sub
stos
mov
cld
mov
mov
or
xor
and
jb
dec
in
repnz
pop
lea
clc
xchg
shll
adc
xchg
lods
xchg
xchg
dec
mov
mov
cmpsl
pushf
adc
inc
mov
push
stos
scas
xorl
cltd
pop
sub
push
hlt
mov
add
xchg
mov
add
pushf
cwtl
xchg
and
in
push
lods
fisttpll
inc
cmp
and
test
xor
pop
repnz
cmp
xor
pop
imulb
push
add
lea
lea
notb
das
sar
js
push
xchg
rclb
pop
push
mov
outsb
rclb
stos
dec
insl
cli
xchg
xor
or
mov
mov
lods
aas
sbb
bound
push
mov
filds
int3
test
repz
cmp
inc
call
and
dec
sarb
je
sbb
pop
jmp
pop
in
jo
add
or
test
pop
fwait
sbb
dec
push
stos
mov
add
rorl
loop
adc
cmp
fistps
push
lcall
sbb
add
movsl
jnp
dec
aam
mov
cs
aaa
lret
xor
cmp
bound
out
jnp
lods
xchg
push
insb
mov
lea
movsb
dec
mov
push
imulb
repnz
das
xor
pop
cltd
push
push
js
pop
pusha
into
xchg
ret
fwait
mov
mov
cld
lods
lret
mov
mov
or
stc
xor
je
jge
daa
lea
sub
std
sbb
filds
stc
imul
into
sub
loopne
stc
into
jo
mov
rcrb
jle
aas
jecxz
mov
clc
clc
xchg
stos
mov
int3
call
jb
mul
out
test
aaa
add
fsubrp
add
movsl
mov
add
mov
adc
imulb
mov
loope
pop
mov
xor
test
imulb
jl
xchg
icebp
mov
inc
inc
test
sbb
adc
repz
mov
cmp
jl
cmp
xor
or
mov
pop
mov
sub
add
ljmp
loop
xorl
jmp
filds
aad
cmp
pop
dec
xor
pop
idiv
sti
out
cmpb
inc
xor
shrl
jge
es
negl
cmp
sahf
aam
jge
jp
in
sub
push
cmpsb
cmp
mov
jge
aas
xchg
enter
and
into
mov
dec
into
std
ret
rcll
dec
add
jnp
insl
rcll
adc
pop
leave
xchg
jmp
mov
push
fnsave
mov
jge
int
leave
inc
xor
mov
mov
adc
shll
mov
lcall
inc
inc
sbb
iret
jne
cmp
push
jg
inc
psubb
sub
out
dec
std
ret
or
inc
sub
xor
add
fwait
pusha
loope
adc
sbb
or
cmp
test
xchg
xchg
iret
daa
movsl
cmp
loope
daa
adc
jno
adc
or
arpl
jae
jnp
fisubrl
in
outsl
lret
daa
movsl
mov
lret
adc
pop
mov
mov
leave
hlt
stos
dec
push
jl
nop
add
loopne
test
jnp
push
inc
fs
gs
add
xchg
mov
test
dec
push
lods
into
dec
std
nop
loopne
fldcw
in
mov
or
insb
stos
mov
aad
dec
idivl
dec
outsl
lcall
add
cld
adcb
or
push
xor
sub
nop
in
testb
and
or
stc
fidivs
sub
sub
mov
push
fdivs
xor
rcll
lods
xor
sar
int
daa
mov
pop
je
mov
aas
das
cli
arpl
jnp
repz
push
rcrl
cltd
inc
arpl
push
inc
cmp
push
and
sbb
xchg
data16
ds
pop
lds
in
nopl
idivb
nop
mov
push
adc
pop
sbb
push
inc
lret
and
sqrtps
pop
dec
das
lods
sub
les
fmul
pop
in
idivl
inc
xor
push
popa
and
test
repz
mov
lea
xorb
sub
dec
popa
call
lea
test
stos
fwait
subl
pushf
mov
mov
lret
and
add
test
mov
add
lret
call
pop
cmp
adc
push
and
mov
rcl
lods
es
mov
outsb
loope
ret
cmp
daa
movsl
cmp
ja
lret
mov
xor
and
adc
clc
add
imul
jmp
mov
xchg
jno
adc
push
lods
cld
cli
sbb
jns
and
ret
and
jge
stc
pop
push
call
call
mov
add
inc
adc
into
add
int
insl
mov
es
cmp
ret
ja
xchg
out
cwtl
jbe
inc
push
stos
mov
add
cli
loopne
sbb
xchg
enter
out
in
mov
mov
sbb
dec
add
jnp
insl
lret
daa
fdivrs
orb
leave
xchg
in
push
mov
int
add
mov
lods
aas
cltd
nop
popa
test
out
dec
push
test
jp
clc
es
cmpsl
aad
pop
inc
adc
and
or
into
mov
dec
sbb
mov
jnp
ret
loope
jp
loop
mov
push
nop
ljmp
lods
imul
cwtl
popa
mov
dec
rcl
push
inc
loope
mov
sub
gs
xchg
jle
out
scas
cmp
push
sbb
mov
and
mov
es
adc
popa
subl
mov
scas
jmp
pop
mov
inc
push
jnp
mov
xchg
iret
lods
xchg
push
jle
flds
into
add
sbb
std
dec
and
xor
lret
incl
mov
push
push
dec
das
xchg
xor
cli
xchg
rcrb
mov
lret
cmp
add
dec
and
arpl
ja
mov
daa
movsl
and
mov
nop
cmp
adc
pushf
cmp
lods
lret
clc
call
sub
cmc
jne
imulb
and
xor
insb
jmp
imul
push
test
mov
push
or
icebp
cld
mov
popa
adc
pop
movsl
nop
dec
in
repnz
ds
jmp
std
scas
test
and
ljmp
lret
stos
mov
xlat
xchg
dec
icebp
loope
lods
push
idivl
jecxz
fsubrl
repnz
cmpsl
cmp
fsubrs
add
lret
insb
lret
xchg
sbb
adc
pop
sbb
mov
outsb
push
cmp
sahf
push
pop
sub
sarl
xor
sbb
outsl
cs
ljmp
and
icebp
mov
js
int
cltd
adc
dec
cmp
push
or
sbb
mov
push
and
jno
in
nop
pusha
sub
sub
mov
pop
push
movsl
push
dec
xchg
fnsave
add
sub
daa
movsl
or
jl
into
mov
add
pop
jns
rclb
test
out
fmull
xor
lds
xor
into
sbb
or
shrb
xchg
add
das
sti
imul
idivl
adc
cmc
sbb
pop
fwait
lods
and
adc
shlb
dec
mov
jns
and
test
cmp
xchg
gs
dec
add
sbb
jne
cmp
repz
sub
cmp
pop
pop
stos
inc
ficoms
or
pop
fldt
jge
es
adc
lds
pop
popf
push
dec
mov
add
int
inc
add
fstl
ja
xor
lods
add
mov
lcall
add
mov
out
mov
arpl
rcrl
mov
stos
mov
add
loope
xchg
mov
outsb
sub
mov
and
mulb
sbbb
in
mov
fcompl
push
cmp
ret
push
sbb
cs
lret
cmp
mov
lods
aas
pusha
nop
fs
ror
fs
add
jo
and
popa
cmp
xchg
push
lods
or
push
out
add
xchg
and
ds
movswl
es
add
sahf
sbb
add
mov
into
or
sbb
xor
pop
loope
test
sbb
xor
addl
lea
push
decb
fwait
inc
push
and
mov
daa
movsl
cmpsl
loope
dec
inc
cmp
xchg
stos
addr16
js
mov
mov
add
clc
xorl
xchg
mov
std
and
adc
or
popw
mov
movsl
cmp
push
cmp
js
push
xchg
shrl
out
das
lea
nop
inc
jb
movsb
out
sub
jne
ljmp
jns
ja
jnp
sbbb
imulb
gs
icebp
adc
cmpsb
and
jno
xchg
sub
or
pop
dec
imul
pop
add
add
je
iret
add
lods
push
dec
add
testl
mov
cs
push
imul
es
jmp
pushf
and
lcall
mov
lea
setp
mov
imul
add
adc
sub
rolb
fimull
or
add
pushf
lods
mov
mov
subl
and
adc
mov
adc
notl
jmp
daa
idivb
mov
jp
and
adc
mov
ds
sti
nop
shrl
adc
push
dec
mov
and
adc
add
and
pop
sbb
cmp
in
push
or
mov
das
lods
sub
dec
js
test
mov
mov
adc
push
lret
jbe
push
test
das
daa
xor
pop
mov
sbb
mov
ja
xchg
scas
ret
push
add
mov
pop
pop
daa
xchg
xchg
repnz
or
popa
test
mov
mov
pop
mov
mov
ror
rcll
xchg
shll
cmp
inc
cmp
sbb
popl
rcrb
movsb
mov
out
ljmp
pop
push
jne
cmp
and
fneni(8087
mov
clc
add
leave
sub
jae
loopne
jge
rcr
adc
ret
data16
scas
out
shrl
orl
adcl
inc
push
mov
cmp
sbb
adc
xor
lret
xchg
pop
sbb
or
shlb
xor
lahf
and
fldcw
mov
cltd
pop
mov
add
fstpt
dec
sahf
sbb
loopne
mov
mov
loope
mov
push
or
imul
stos
mov
jnp
jecxz
frstor
mov
xchg
fisubl
mov
push
lds
addb
mov
test
push
sbb
es
pop
jmp
js
adc
cmpsb
inc
mov
dec
cld
mov
sarb
lea
insb
rcrb
lahf
andnps
and
scas
fcomps
mov
or
inc
decb
cmp
xor
sbb
inc
cmp
mov
lret
and
cmpsl
and
adc
mov
push
aas
adc
mov
xchg
rclb
je
cmp
push
sbb
push
js
xorl
jnp
xchg
jecxz
mov
testl
in
xor
daa
sbb
filds
adc
sub
cld
dec
or
sbb
pop
imul
jmp
xchg
stc
xchg
dec
and
cmp
mov
xchg
push
bound
add
sbb
or
stos
stc
lds
pop
cs
pop
jmp
sub
xor
outsb
cli
mov
push
ror
add
sbb
or
aam
cmp
test
xchg
out
push
jae
xor
mov
push
ljmp
jne
pop
push
not
pop
and
shll
cmp
dec
aad
popf
andb
out
xchg
mov
data16
push
es
insb
xor
inc
adc
rolb
test
push
lods
and
push
pop
push
sbb
imul
or
mov
jno
pop
and
fimuls
daa
movsl
push
add
rcrl
xorl
or
nop
movl
in
xlat
mov
aas
das
clc
mov
dec
jge
fwait
mov
xchg
jo
mov
pop
es
mov
dec
adc
push
mov
mov
outsl
in
dec
das
mov
nop
cmp
into
cmp
jle
repnz
fcom
pop
jmp
sbb
sarl
push
stos
inc
xor
lods
xchg
pop
dec
push
mov
push
add
xor
fwait
mov
decb
xchg
mov
mov
imul
mov
ret
cmp
and
cmp
int3
inc
bound
sbb
outsl
xchg
mov
bound
ss
andl
sti
mov
ja
in
cltd
or
jne
imulb
gs
mov
js
cli
inc
ja
or
pop
or
loop
repz
outsb
js
inc
outsb
lret
ss
sbbb
popf
out
test
in
sub
xchg
mov
push
mov
cmpb
lods
jbe
jmp
fdivrs
cmc
es
jge
xor
push
das
and
dec
mov
mov
mov
mov
or
jle
test
test
add
cmp
lock
movzbl
add
xchg
shlb
cli
mov
xchg
int3
lods
movsb
pop
in
or
jnp
rep
inc
jg
and
xor
mov
mov
jecxz
cmp
mov
xor
pop
ja
push
js
mov
adc
lods
lret
imul
xor
adc
js
pop
sub
xchg
repnz
dec
outsb
das
fnstenv
jae
pusha
mov
sub
cmpsl
pop
lcall
lret
scas
dec
jbe
notl
adc
sbb
mov
xchg
int3
fwait
movsb
pop
in
push
insb
mov
cmc
sahf
aaa
lea
movsb
pop
pop
pop
lods
jne
imulb
sarb
mov
add
jb
jb
adc
or
popf
cmp
popf
or
mov
shrb
or
fistps
push
sti
or
and
sti
pop
movl
movsb
stos
jae
push
outsl
ret
adc
and
inc
lahf
sbb
xor
or
mov
mov
test
cmpsb
xchg
shll
movsl
cmp
cmp
and
repz
fs
aaa
outsl
popa
dec
xchg
inc
aas
movsl
cmp
pop
scas
les
stos
mov
mov
sub
stos
idivl
push
push
inc
icebp
sub
cld
imul
add
ja
adc
es
pop
and
push
pop
xchg
jmp
pop
push
lcallw
aam
in
pop
mov
popl
loope
cmp
and
mov
cs
mov
mov
repz
cli
xchg
pop
dec
decl
xchg
aad
pop
fisubrs
jns
push
xchg
int
mov
scas
push
shlb
dec
or
pop
ret
insl
stos
xchg
imul
es
test
xchg
or
dec
outsl
xchg
xor
in
sahf
and
ds
ljmp
std
jnp
xchg
insb
or
jle
xor
mov
movsl
cmp
test
outsb
dec
repz
mov
pop
pushf
stos
push
imul
imul
std
int
lea
notb
adc
mulb
dec
adc
addr16
mov
stc
sbb
sub
push
adc
sub
pusha
dec
mov
cmp
pop
mov
ja
dec
push
fnstsw
pop
outsl
mov
in
out
inc
mov
ljmp
push
in
jo
popf
scas
mov
in
adcb
xchg
or
sbb
shrl
mov
cmpb
sub
pop
call
cli
mov
sub
imulb
fmul
pop
jmp
cmp
sub
aaa
sub
cld
dec
or
jge
fwait
mov
mov
mov
or
mov
dec
sbb
lret
arpl
movsl
rclb
movsb
xchg
ss
test
sub
shlb
mov
xor
jge
leave
movsb
sbb
or
das
mov
loopne
pushf
mov
mov
lock
cmp
inc
jmp
xchg
dec
sahf
sarl
mov
scas
inc
inc
stos
xor
or
xchg
in
pop
ja
jmp
daa
jg
push
imulb
repz
mov
leave
fistl
iret
cli
xchg
int
or
jne
push
jne
test
test
into
daa
movsl
cmp
repnz
mov
ja
aad
dec
fsubl
sub
mov
stc
scas
or
movsb
sbb
leave
add
fdivrs
les
stc
gs
ficompl
inc
mov
dec
add
std
lea
add
das
test
cmp
cmp
and
xor
loopne
movsb
sbb
int
loope
push
add
xorb
lea
pop
testb
repnz
mov
ss
rcll
scas
ret
test
ret
in
aaa
je
xor
mov
and
sbb
cmp
icebp
clc
mov
mov
mov
sbb
es
push
std
jl
lret
mov
dec
outsl
xchg
inc
mov
nop
dec
or
in
insb
pop
push
lret
cmp
ret
xchg
mov
les
and
add
idivb
or
mov
lea
movb
hlt
outsb
js
das
loope
and
test
xlat
mov
and
or
mov
pop
ja
xchg
fistps
jne
imulb
cmpsl
mov
xchg
js
mov
and
xchg
fnstcw
test
rcll
movsl
dec
xchg
fiadds
mov
ds
mov
lods
lret
pop
in
xchg
ss
rorb
dec
das
scas
sub
cmpl
sbb
cmpsl
xchg
frstor
in
mov
jns
test
sub
dec
push
jo
mov
mov
into
mov
xor
add
or
das
mov
test
lea
sub
adc
cmc
stos
lret
and
mov
imul
es
in
gs
jmp
movb
iret
imul
dec
and
jbe
in
ja
push
dec
add
jae
sbb
out
xor
mov
fs
loopne
mov
jmp
cwtl
stos
mov
jmp
mov
out
addb
jmp
inc
sub
lea
cmc
std
stc
mov
xchg
push
mov
out
popw
and
sbb
adc
push
xor
adc
jl
push
sbb
and
lods
jb
mov
mov
mov
out
and
addr16
lea
leave
popf
mov
mov
loopne
dec
and
aaa
add
jno
pop
and
sub
mov
scas
bound
and
cmp
push
push
mov
sbb
sbb
xchg
adc
fbstp
popf
mov
aaa
jno
sub
jns
ja
push
jecxz
cmp
imulb
repnz
xchg
jnp
lret
inc
das
xchg
sub
or
mov
stos
sbb
and
adc
lods
lret
and
pop
test
mov
add
nop
fldt
das
xchg
das
nop
cmp
out
mov
sti
and
sub
lods
xor
idivb
scas
adc
fs
mov
push
add
inc
sub
dec
mov
dec
jle
in
movsl
cmp
fadds
cmpsb
jno
sub
add
inc
add
in
std
fidivs
cmc
fcmovnb
std
mov
add
xchg
out
dec
dec
in
stos
and
daa
mov
lret
xor
mov
incl
imulb
and
rcr
mov
adc
scas
je
insb
cmp
push
cld
pop
lds
sub
mov
imulb
pop
imulb
fnstcw
push
push
shr
ljmp
dec
das
xchg
cmp
mov
or
rcrl
jb
clc
fdivl
cmp
or
pop
push
mov
lea
outsb
lods
xchg
and
mov
cmp
enter
or
sbb
test
repz
jmp
cmp
push
mov
sub
aad
push
bound
and
stc
bound
enter
jbe
movsb
mov
inc
mov
mov
ret
cmp
daa
movsl
cmp
sar
lcall
shrl
mov
mov
pop
jl
rcrl
movsb
sub
movsl
cmp
xor
and
adc
push
lret
jg,pt
movsl
popf
xchg
mov
inc
dec
push
std
fwait
loope
and
test
push
jecxz
push
xor
test
jmp
mov
je
xor
mov
cmp
xchg
cmp
test
cmp
or
sbb
lret
out
push
repz
fiadds
push
jb
std
jnp
push
push
loope
dec
and
lods
lret
xor
movsl
mov
push
jge
sbb
dec
test
jge
es
repz
lods
jg
popf
adc
dec
clc
xchg
fsubrs
js
and
fcoml
popa
push
pop
jno
and
pop
test
shll
lret
imul
xchg
cld
sbbb
iret
test
pop
dec
imul
je
cmc
jmpw
sbb
push
adc
xchg
std
push
std
dec
pop
pop
cltd
icebp
jl
inc
cmp
sbb
js
movsl
mov
ret
mov
popa
fistps
lret
daa
movsl
mov
add
movsl
cmp
imulb
arpl
je
and
adc
inc
cmp
jno
cmp
xorl
add
test
add
dec
add
dec
push
movsl
cmp
daa
cli
mov
leave
adc
enter
loopne
mov
adc
xchg
int
lock
jae
jns
iret
mov
pop
jecxz
cmc
or
lea
and
xor
loope
sub
lods
mov
addr16
or
adc
mov
cmp
and
adc
mov
cmp
jb
pop
subb
jno
cmp
js
xchg
out
push
xchg
jae
mov
int
xchg
sbb
lea
lods
cmc
ljmp
lods
insl
mov
adc
add
rorl
fwait
bound
inc
xor
lods
xchg
pop
jns
lret
pushf
and
shlb
push
inc
inc
cmpsb
xchg
xor
out
sbb
adc
adc
xchg
fmull
sahf
xor
adc
sbb
push
xchg
pushl
xchg
int
mov
add
jecxz
dec
sub
fsubr
cld
lods
lret
shrb
loope
and
lret
cli
xchg
int3
aaa
movsb
sbb
mov
xor
jo
mov
movsl
cmp
test
cs
lock
adc
clc
xchg
sarl
mov
mov
add
push
pop
ja
cmc
cwtl
adc
or
lods
lret
and
stos
push
js
daa
in
cld
movsb
sbb
pop
jnp
adc
cmp
fidivs
addr16
fbld
sub
popf
mov
es
adc
dec
sti
bound
cmc
lock
or
jns
and
pop
rcrl
xchg
inc
ret
push
sbb
adc
scas
std
mov
es
push
adc
mov
mov
lods
aas
lds
loopne
push
xlat
and
lahf
sub
xor
insb
sbb
adc
insb
outsb
cmp
cmp
inc
jg
cmpsl
mov
jnp
subb
loopne
stc
add
jno
push
jne
idivb
in
mov
sbb
mov
aad
lds
ja
insb
dec
repnz
sbb
push
and
mov
add
cmp
push
pop
lods
pop
mov
in
in
pop
movsb
lods
inc
adcb
fs
jecxz
insl
adc
popf
pusha
pop
stos
lea
mov
ljmp
lea
daa
dec
push
jns
les
or
in
mov
pop
jo
mov
clc
imulb
fisttps
nop
pusha
fisubl
outsb
lods
sub
aas
test
repz
pop
sti
inc
stos
mov
mov
cmp
push
sbb
xchg
dec
push
dec
add
rorl
add
sbb
repnz
sub
mul
leave
lods
sbb
lods
cwtl
repnz
aad
xchg
cs
insb
inc
pop
pop
push
insb
fildl
add
and
mov
pop
sar
mov
sahf
popf
movb
mov
add
mov
outsb
cmp
pop
sbb
adc
in
jno
stos
mov
lea
hlt
jns
jp
sbb
xchg
jno
rcr
mov
scas
jmp
out
sub
add
outsl
cwtl
cli
fcom
mov
icebp
inc
push
inc
add
dec
xchg
cwtl
bound
nop
pop
xchg
std
dec
or
dec
push
mov
fstl
rolb
mov
dec
imull
or
jnp
enter
adc
cmc
add
inc
sub
fucomip
adc
lret
cmp
cmp
and
adc
lds
gs
pop
repz
mov
add
data16
jl
pop
arpl
pop
push
pop
call
dec
hlt
dec
sbb
and
leave
and
pop
push
daa
and
and
ja
test
pusha
dec
dec
sub
mov
jnp
cld
sbb
adc
fsubrs
mov
sub
adc
sub
add
out
movsl
pop
out
test
pop
pop
mov
in
loope
in
data16
mov
insb
lret
mov
mov
inc
cmp
and
mov
daa
stos
in
xchg
sub
mov
iret
and
ljmp
pop
call
mov
pop
xchg
mov
insl
lds
movsb
push
popf
lods
mov
push
jns
sarl
jmp
dec
pop
int
imul
push
imul
and
mov
fstps
and
jne
jp
dec
and
push
sbb
and
js
push
je
mov
mov
inc
push
call
jge
mov
push
add
lods
lret
sbb
icebp
stc
push
pop
mov
inc
mov
ja
das
jecxz
cwtl
aaa
and
inc
ss
pop
pop
imul
addl
loopne
subl
mov
xor
mov
push
cwtl
pop
imulb
add
cmp
jl
dec
jmp
into
xchg
rcr
pop
rcrl
leave
leave
push
add
push
cmp
add
out
mov
mov
sbb
fists
loope
in
data16
daa
movsl
cmp
cmovl
mov
cli
lods
lret
aad
sbb
sbb
jb
adc
stos
mov
or
add
in
push
pop
mov
dec
pop
push
sub
pop
ljmp
aaa
loope
mov
and
mov
ret
cli
pop
mov
add
push
mov
movsb
mov
movsl
cmp
add
push
xorl
sub
mov
jae
push
mov
dec
out
sbb
xchg
hlt
xchg
shll
movsl
cmp
dec
jg
mov
add
xchg
lret
ret
stos
push
cmpb
adc
push
fiaddl
push
jge
inc
cmovp
stos
lret
add
loope,pn
jmp
dec
push
push
pop
outsb
lods
jb
adc
adc
xchg
push
shll
movsb
out
insl
add
xchg
jns
insl
xlat
clc
icebp
xlat
push
adc
xchg
cli
jge
ret
dec
sbb
mov
or
lods
lret
imul
scas
jnp
and
pop
or
pusha
cmp
sub
push
popf
lods
mov
out
jns
repnz
and
sub
mov
xchg
clc
push
mov
mov
jns
icebp
or
movsl
ds
xor
mov
dec
add
jecxz
fsubrl
repz
and
das
xor
std
imul
inc
adc
adc
mov
and
and
ljmp
dec
out
es
jnp
sub
shlb
pop
mov
mov
movsb
rcrb
movsb
movups
cli
add
out
xor
imul
cmp
fstps
push
cld
dec
or
out
pop
pop
lcall
or
jge
es
sbbl
xorl
and
iret
mov
cmp
push
xchg
dec
je
sub
sbb
movsb
arpl
rcll
push
daa
and
mov
cmp
loop
icebp
pop
aam
xchg
and
dec
xchg
mov
loopne
nop
inc
pop
sub
imul
std
xchg
into
xchg
mov
or
outsb
lods
pop
repz
jbe
adc
add
mov
mov
mov
adc
std
cmp
nop
push
cmpb
add
fsts
add
push
xor
sub
ss
mov
in
fidivrl
pusha
incb
push
or
add
add
aas
fisubrs
jns
push
xchg
int3
subb
mov
clc
fsubs
xchg
loop
and
xor
mov
or
xchg
sub
pop
jmp
dec
cld
dec
and
jne
fidivs
xor
insl
xchg
fidivrl
cmp
imul
stos
jns
mov
jle
pop
push
insb
mov
repz
push
insb
add
dec
lahf
sti
popa
aad
jmp
arpl
test
repz
jno
das
fisubrl
cmp
jp
xor
mov
cmp
jno
fistps
fistps
jo
stc
stos
mov
call
in
imul
out
cmp
and
loopne
outsl
jl
dec
sub
xor
lods
lret
inc
js
push
xchg
rorb
lea
cmpsl
and
mov
flds
test
cmp
into
pop
mov
or
lods
lret
and
ja
std
repnz
lret
mov
add
lods
sub
clc
js
push
aas
cmpsb
cmp
mov
shrl
push
adc
addr16
pop
clc
aam
add
lods
inc
or
and
add
mov
stos
sbb
xchg
push
fs
in
push
add
faddp
jecxz
pushf
jmp
leave
sub
adc
add
and
icebp
add
cmpsb
lods
mov
jo
insb
cmpsb
cmp
and
mov
lea
mov
sub
fwait
dec
mov
xchg
popa
sub
and
mov
adc
jecxz
scas
leave
mov
push
add
xchg
pop
dec
push
dec
jbe
add
mov
popa
subb
pop
push
scas
movsb
pop
mov
mov
dec
sub
mov
xchg
push
xchg
cmp
add
push
and
daa
movsl
insl
mov
jge
mov
add
xchg
stc
push
lock
sub
push
or
mov
xlat
adc
lods
lret
mov
or
mov
cwtl
and
sbb
jge
lods
xorb
dec
idiv
decb
bound
push
daa
movsl
xchg
enter
mov
jmp
xchg
push
and
dec
ljmp
inc
in
movsb
sbb
xchg
push
ror
testb
fwait
mov
insb
adc
std
jl
or
add
mov
stc
jo
dec
aad
popf
pop
and
inc
dec
stos
cmp
mov
das
push
outsl
bound
and
in
sti
movsl
push
mov
jle
mov
lods
push
jae
mov
lods
jb
and
sbb
push
pop
jecxz
xchg
sbb
add
out
fcompl
imul
sub
pop
jmp
stc
xchg
and
mov
pop
jge
fwait
mov
outsb
incl
outsl
mov
sbb
and
add
mov
sbb
jns
pusha
inc
jnp
hlt
lret
sub
push
popf
xorl
ds
fstpt
add
decl
stos
or
pop
xor
adc
dec
add
add
imul
or
out
decl
out
and
imul
cli
mov
lret
and
adc
sbb
and
xchg
and
out
cmp
hlt
sbb
outsl
sarb
sbb
push
push
and
cmp
je
inc
jl
ljmp
mov
rcl
pushf
jmp
stos
sub
insl
or
shlb
cmp
lods
lret
aam
lods
jae
pop
movsb
lods
xchg
adc
popa
out
mov
ljmp
icebp
push
mov
int3
in
nop
shll
mov
cwtl
xor
lahf
jecxz
sbbb
push
out
daa
mov
xor
mov
imul
xchg
lahf
test
jp
inc
sub
xchg
inc
adc
mov
add
mov
jnp
out
scas
call
push
les
lret
xorb
and
pop
sub
xor
mov
movsl
cmp
xor
xchg
das
lea
nop
cmp
pop
flds
sub
addr16
lea
lret
daa
movsl
cmp
push
loope
ss
sub
push
pop
push
movsb
subl
lock
cltd
push
jle
nop
xchg
loop
mov
push
sbb
std
mov
sub
mov
cld
or
clc
pop
jmp
cli
ret
jns
sub
add
fbstp
adc
cmp
fiadds
stos
lret
fs
cmp
xchg
mov
dec
add
cs
xor
xchg
out
sub
mov
or
jle
lea
add
fadds
pop
imul
fidivrs
std
ja
icebp
movsl
cltd
divl
test
xchg
sub
dec
incb
repnz
popf
ds
cmp
xchg
out
loope
pop
jge
cld
scas
fcomp
pop
jmp
and
sbb
fs
push
shll
movsl
cmp
sarl
pop
inc
std
sbb
or
repnz
les
and
dec
mov
lret
xor
xchg
out
mov
push
lock
inc
add
ss
pop
jns
cmp
and
mov
mov
insb
js
clc
lahf
pop
aad
pop
insl
je
lock
or
adc
push
mov
test
push
icebp
pop
and
lods
xlat
mov
pop
add
out
fadds
add
hlt
pop
sarl
and
sub
test
cmpsl
adc
lcall
sbb
repz
jnp
add
pushl
int
aaa
aaa
xchg
mov
ret
add
add
xor
push
fwait
xchg
mov
movsl
cmp
adc
xlat
mov
or
scas
or
sbb
push
imul
daa
sbb
lock
lret
lea
adc
fwait
mov
mov
xor
or
mov
jno
xchg
dec
in
jp
repnz
mov
or
mov
mov
in
cmp
adc
stos
lret
mov
dec
xlat
in
cmp
and
pop
decl
push
repz
push
or
sbb
and
adc
dec
push
push
and
arpl
fldenv
es
bound
sbb
int
fisubl
mov
jl
pop
ja
cmp
adc
jne
subl
inc
add
xor
push
mov
mov
popf
mov
lret
adc
push
push
mov
in
fwait
mov
mov
cwtl
orl
leave
push
lods
sbb
repz
out
jno
adc
les
pushf
fsubrs
mov
and
mov
in
divl
lods
loopne
cmp
out
rorb
mov
addr16
jns
xchg
in
es
mov
dec
mov
jge
and
mov
lods
aas
jmp
pop
lock
sbb
cs
addr16
repnz
ss
js
sub
lahf
sarl
mov
jmp
loope
stos
inc
push
pop
inc
or
jle
imul
mov
pop
movsb
lods
lcall
orl
cltd
loopne
cmp
std
jge
jg
repnz
jbe
add
sbb
mov
pop
out
push
lods
in
xchg
inc
mov
push
pop
mov
ljmp
xchg
out
out
js
dec
xchg
rcrb
lcall
cmpsl
iret
mov
dec
aaa
inc
xor
fsubr
push
ja
cs
inc
jne
imulb
aad
xchg
fnstcw
cmp
mov
jge
pop
xlat
add
xor
jge
fwait
mov
sahf
jle
cmc
sub
and
pop
jns
lret
pushf
push
and
adc
imul
dec
push
add
imul
loopne
fidivl
es
stos
push
test
mov
xorl
xor
out
sbb
cld
repz
cmpl
shlb
xlat
in
mov
out
cmp
flds
nop
sub
mov
jge
sub
mov
sbb
pop
ljmp
movsl
jmp
mov
rcrl
fdivl
mov
mov
inc
adc
add
cmp
or
xchg
jl
insb
jnp
insl
cltd
enter
movsl
in
lret
pop
leave
xchg
jmp
lods
mov
mov
xor
daa
cmp
js
push
xchg
into
rcrb
into
std
xchg
shl
test
xchg
sub
mov
cmp
pushf
inc
and
xor
movaps
cld
pop
pop
and
int3
das
xor
lock
repnz
pop
int3
lds
jno
sbb
sub
adc
lods
adc
mov
ret
loope
mov
mov
jo
adc
jno
xor
fdivrs
sahf
test
push
sbbb
dec
mov
push
insl
mov
test
jecxz
repnz
xchg
pop
imulb
repz
or
popf
inc
das
nop
sub
cmc
xchg
sub
outsl
and
in
pop
ftst
pop
jmp
subb
cmpsb
insb
mov
push
add
pop
mov
jmp
loop
cmc
push
cmpsb
inc
mov
dec
ffreep
jge
cmc
mov
jns
and
add
aam
and
or
adc
lea
dec
incb
repnz
mov
es
addl
int3
cmp
xchg
out
sub
test
std
xchg
shlb
movsl
cmp
adcl
decb
mov
cmp
dec
imul
movsl
aaa
adc
add
aaa
in
mov
mov
jl
mov
in
dec
negl
mov
out
xchg
push
pop
inc
fs
jbe
add
pushf
mov
shrd
dec
std
nop
jmp
dec
data16
adc
add
mov
addr16
pop
adc
xchg
push
pop
dec
popf
dec
and
mov
stos
inc
loope
dec
das
pushf
stos
sbb
adc
push
aad
sti
mov
test
mov
fsts
xchg
push
shll
inc
xor
bound
xchg
mov
enter
add
sti
lods
lret
xchg
sub
pop
das
mov
nop
cmp
add
jge
pop
dec
data16
aas
jbe
add
outsb
hlt
test
pop
idiv
shrb
adc
ret
sub
mov
dec
jge
fwait
mov
outsb
mov
sbb
push
and
lds
ja
into
adc
mov
sbb
and
pop
mov
int3
clc
push
xor
or
enter
mov
xor
and
adc
sub
push
lods
mov
pop
sub
sbb
mov
sbb
xchg
lock
sub
sub
lods
adc
rcll
sti
mov
insl
pop
fsubrs
inc
mov
mov
sub
pop
inc
gs
stc
add
movsl
dec
test
jno
dec
xchg
scas
jl
add
mov
dec
fidivs
jle
cwtl
divl
pop
mov
cmp
mov
fmuls
inc
sub
and
ljmp
mov
dec
fistl
mov
je
dec
psraw
rclb
cld
mov
push
call
lcall
imul
inc
mov
mov
push
test
cmp
scas
push
or
push
push
jge
add
nop
shll
mov
jle
out
inc
pushf
push
insl
xchg
dec
add
jnp
insl
lcall
cmp
in
out
int
lret
clc
pushf
mov
lret
add
loop
cmp
push
mov
adc
mov
mov
insb
fisubrl
ficoms
daa
movsl
mov
int3
daa
movsl
mov
ljmp
jo
jp
push
cmp
mov
inc
dec
popa
sbb
dec
jb
adcl
or
pop
fiadds
out
lea
add
xlat
dec
mov
and
xchg
shll
mov
mov
ffreep
xchg
imul
das
add
xchg
sub
pop
push
add
sbb
cmp
xchg
loope
rolb
xor
xor
sub
mov
sbb
jl
mov
mov
mov
jbe
icebp
stos
lret
test
cmp
and
adc
dec
ja
daa
stos
inc
movsb
pop
push
repz
or
leave
ja
or
pop
jbe
lock
and
aad
push
sbb
adc
aaa
mov
test
sub
mov
push
insl
xchg
mov
lret
daa
movsl
mov
push
add
mov
xor
push
dec
shrl
add
mov
sbb
xchg
jmp
xchg
insl
and
mov
mov
mov
jl
xor
lahf
fdivl
popf
mov
pop
mov
push
and
sub
mov
fwait
adc
add
add
data16
ret
stos
xchg
in
mov
and
xor
dec
xor
adc
cmp
adc
repnz
mov
jnp
xlat
lret
push
leave
xchg
ljmp
and
push
imulb
in
je
into
daa
movsl
cmp
repnz
jp
ret
sub
ror
or
ret
shl
dec
incl
jnp
insl
mov
daa
sub
inc
leave
xchg
call
insl
xchg
imul
cmpsb
cmpsw
or
jne
imulb
mov
popf
push
mov
js
or
jge
xchg
add
xchg
dec
or
out
mov
cs
xchg
pop
push
cmp
addr16
shrb
pop
mov
mov
push
or
in
sub
and
aas
and
cld
sarl
pop
pop
cli
cmp
arpl
dec
sub
jle
stc
lods
lret
and
cmp
inc
addr16
cmp
and
es
mov
lods
lret
mov
mov
mov
aaa
cmp
add
jo
int3
popf
hlt
decb
xlat
and
pop
orb
mov
push
lods
inc
inc
push
cs
movsb
adc
push
dec
add
inc
inc
and
sbb
scas
or
sti
dec
xor
pop
divb
sbb
sti
mov
adcb
cmp
insb
push
scas
mov
adc
mov
mov
std
xchg
repnz
inc
repnz
aaa
jae
and
movsl
xchg
ret
dec
imul
add
mov
push
jl
lods
testb
mov
in
and
mov
shlb
movsl
cmp
nop
cmp
scas
pusha
das
xchg
sub
in
mov
pop
ds
lea
stos
fildl
imulb
mov
fwait
pop
adc
fcomi
sub
xchg
repnz
mov
mov
test
mov
lods
orl
jecxz
pop
idiv
sbb
fcmovnbe
pop
add
mov
aaa
mov
push
sub
adc
daa
movsl
mov
int3
daa
movsl
mov
lret
sub
lods
aas
lret
nop
lret
leave
in
push
jecxz
sub
and
daa
xchg
in
outsl
or
add
ficompl
mov
pop
pop
push
sbb
pop
int
hlt
xchg
mov
adc
repz
test
sti
movsl
lret
clc
pushf
mov
scas
lret
mov
jp
stos
cmp
adc
gs
push
ljmp
adc
push
daa
mov
pop
xor
mov
or
stos
cmp
adc
das
lea
nop
cmp
push
flds
push
popf
xchg
in
sbb
dec
out
sub
outsb
or
shrb
xchg
dec
mov
cld
sbb
loopne
pop
shrb
mov
repnz
inc
sub
xor
jle
divl
data16
mov
and
aaa
daa
mov
sbb
sub
adc
sub
mov
notb
adc
stc
push
add
and
mov
ficoml
sbb
xchg
aas
cmp
add
iret
pop
push
movsb
xchg
pop
popa
adc
mov
out
imul
sbb
jo
add
cmp
and
add
mov
imulb
dec
mov
movsl
cmp
adc
cmpsl
divl
mov
xor
xchg
fcmovu
scas
mov
shrb
dec
icebp
dec
sub
call
andl
dec
push
cmpsb
cmp
push
fs
ret
mov
mov
mov
jb,pt
and
dec
push
pop
mov
cli
inc
cmp
and
out
xchg
aad
xchg
mov
push
xchg
in
push
mov
stos
adc
mov
jne
mov
lea
mov
dec
mov
adc
in
dec
ljmp
lcall
cmp
adc
sub
xor
and
add
mov
stos
lret
pop
lret
xchg
jb
test
repnz
mov
jp
and
movsb
pop
cmp
dec
xchg
cs
out
dec
xchg
sub
lea
js
lret
js
mov
data16
and
adc
add
stos
cmp
or
iret
sbb
ja
lret
sub
cmp
in
faddp
xchg
add
xor
leave
shrl
push
or
shlb
andl
lods
fldcw
ss
and
movsl
into
fmul
pop
jmp
cmp
je
push
xor
pop
testb
fmuls
lret
push
mov
inc
mov
movsl
data16
mov
mov
jo
adc
xlat
call
pushf
div
clc
mov
jae
test
xchg
loopne
nop
cmp
shrl
mov
jbe
jne
jmp
aaa
dec
sbb
dec
jecxz
mov
sar
stos
mov
mov
jge
pop
mul
out
test
aaa
shl
aaa
xor
js
xor
mov
movsl
cmp
shrl
jns
dec
xchg
sarb
movb
stc
test
sbbb
lods
xchg
cmp
add
fcmovu
mov
daa
movsl
test
flds
mov
sub
or
adc
lea
xor
es
shlb
pop
and
xor
dec
out
cli
into
nop
nop
lods
mov
ss
aaa
outsl
popa
cmp
faddp
dec
push
pushf
stc
sbb
loope
sub
add
and
and
outsb
jle
cltd
cld
sbb
and
jmp
js
mov
les
stos
arpl
push
leave
repnz
scas
push
call
inc
inc
xchg
dec
and
fidivs
push
adc
mov
jmp
xchg
les
xor
daa
mov
imul
mov
and
add
mov
lea
imul
pop
add
xchg
pop
test
lods
push
dec
add
sbb
or
push
xchg
lods
mov
sbb
pusha
repz
jp
scas
es
rcrl
daa
loope
xchg
or
add
mov
dec
and
movsb
mov
das
cs
add
roll
movsl
inc
dec
jb
jne
imulb
mul
mov
jnp
inc
das
mov
cmpsb
or
push
pop
ja
les
imulb
push
push
xchg
int3
lcall
repnz
movsb
sbb
leave
lods
and
mov
rolb
sbb
icebp
bound
rorl
shlb
orl
sub
outsl
lock
jle
adc
nop
inc
ljmp
std
xchg
repnz
mov
sbb
jns
sbb
sbb
lahf
sub
iret
sub
shrb
inc
inc
divl
notb
cs
lret
and
adc
sub
daa
lret
add
pop
testl
fsubl
mov
js
add
cmp
push
push
sbb
gs
mov
imul
in
scas
sbb
push
cmp
nop
push
movsl
das
jecxz
push
data16
inc
jp
and
push
sbb
or
cld
nop
fisubl
mov
inc
dec
int
ret
cmp
inc
gs
cmp
mov
daa
movsl
cmp
psraw
pop
dec
cltd
imul
es
mov
call
jo
push
lret
jne
and
push
dec
add
push
test
pop
jnp
test
sbb
cmpsb
clc
cmp
ss
test
xor
repnz
rcrl
stos
imul
push
fucomip
out
adc
cmp
jns
or
pop
jmp
inc
inc
mov
pusha
dec
or
or
mov
cmpl
into
push
fsts
add
stos
test
repz
sbb
xchg
and
lcall
sti
popa
cmp
addl
push
mov
adc
cmp
push
adc
mov
xchg
adc
in
sub
gs
jmp
imul
les
jo
jp
popa
push
mov
arpl
notl
and
adc
push
adc
xchg
mov
xchg
scas
bound
addr16
xor
dec
add
mov
inc
cltd
push
sbb
mov
adc
or
clc
mov
enter
mov
lahf
out
add
mov
sbb
es
xchg
xchg
xchg
sar
sbbb
fidivs
lcall
and
pop
jmp
mov
sub
outsl
popa
stc
pop
pop
daa
sbb
or
push
push
movsb
pop
mov
mov
popf
or
imul
loop
cmp
mov
push
movsl
mov
sub
and
mov
pop
and
lcall
or
rclb
lds
lret
xchg
js
dec
push
fisubrs
imul
leave
ds
cld
cmp
imul
sti
push
inc
pop
rolb
dec
sbb
popf
mov
and
and
push
cltd
dec
mov
data16
movsl
sbb
stc
jge
fwait
mov
mov
mov
sbb
sub
repnz
imul
xchg
js
jl
cmc
mov
mov
cld
mov
ret
mov
daa
mov
mov
or
insl
mov
int
push
int3
pop
leave
xchg
jmp
cld
dec
and
and
js
mov
daa
movsl
cmovl
ss
add
in
stc
push
mov
sub
xchg
repnz
xor
loopne
mov
mov
xor
xor
dec
mov
sbb
lods
movsl
orl
test
repnz
jne
pop
mov
mov
loopne
out
cmp
inc
sbb
and
jne
push
add
and
cmp
scas
and
stc
dec
movaps
push
jg
xchg
aam
movsl
cmp
adc
inc
outsl
mov
and
fidivrl
dec
psraw
mov
mov
push
mov
xchg
fwait
mov
ja
cmp
mov
sbb
es
cmp
loope
cltd
push
jp
lret
mov
dec
in
cmpsl
sub
in
push
pop
lods
addb
and
cmp
add
jne
movsb
outsl
sarb
sbb
xor
pop
fbstp
push
in
xor
jecxz
daa
loop
pop
divb
push
dec
clc
mov
sub
pop
mov
inc
or
mov
imul
sbb
pop
fiaddl
into
clc
cmc
mov
je
ret
fwait
mov
je
imul
and
pop
dec
call
lods
mov
and
movsb
loop
sahf
add
out
cld
out
sub
and
hlt
daa
mull
pop
mov
xorb
jnp
ja
imul
mov
mov
jnp
mov
je
ret
dec
and
mov
outsb
dec
scas
mov
dec
aad
popf
stos
and
subb
inc
inc
cmpl
movsl
dec
adc
out
jb
push
mov
mov
mov
sarb
sub
dec
mov
xchg
mov
mov
lods
jae
mov
call
lods
pop
cmp
rcl
jbe
repnz
ret
sub
add
sub
nop
in
mov
dec
mov
insb
test
jns
movsl
lahf
fsub
pop
jmp
jle
push
jo
inc
mov
dec
stos
inc
xor
cmp
cmp
inc
pop
je
mov
jmp
lods
lret
cmp
jae
push
or
jge
es
out
mov
and
adc
pop
xor
dec
xchg
rcrl
loope
fwait
mov
push
cmp
jecxz
xor
shll
cmpsl
xchg
push
or
add
pushf
lods
aaa
add
inc
std
adc
or
repnz
mov
cmp
popa
int3
xor
xchg
out
dec
cmpsl
lret
or
pop
ja
pop
adc
lods
lret
lret
js
push
xchg
iret
mov
scas
mov
pop
mov
leave
or
dec
and
sub
add
xchg
xchg
pop
push
lods
fimuls
xchg
out
ja
cli
sbb
jne
imulb
repnz
xchg
loop
nop
cmp
mov
adc
ljmp
addr16
lea
.byte
