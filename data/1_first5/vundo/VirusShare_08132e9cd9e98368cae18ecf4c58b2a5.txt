outsb
incl
mov
mov
add
sub
add
fisttps
stc
orb
xchg
dec
pop
or
mov
mov
and
ds
push
outsb
jno
addr16
push
dec
out
xlat
pop
addr16
enter
dec
mov
paddw
shll
inc
or
fmull
lock
fidivl
add
cli
add
mov
adc
fstps
push
rolb
rolb
dec
xor
std
idiv
les
mov
add
inc
xor
add
fsubs
jo
mov
inc
push
mov
push
push
push
add
fisttps
out
imul
add
popa
ja
ljmp
mov
fmuls
aaa
xor
dec
inc
and
add
test
add
jbe
mov
pop
fistps
pop
cmp
std
fcomi
notl
stc
imul
inc
pop
adc
inc
push
dec
add
pop
mov
lods
cmp
cmp
xor
cwtl
or
lock
test
adc
dec
mov
js
inc
aaa
fildll
ja
fs
dec
dec
mov
dec
punpckhdq
aas
add
fldt
or
imul
push
mov
mov
xor
dec
push
mov
sarl
mov
ss
inc
mov
push
inc
add
call
push
insl
imul
and
cld
call
jne
jmp
add
mov
or
arpl
inc
icebp
inc
add
data16
outsb
xor
dec
push
inc
dec
mov
mov
fdivr
push
mov
add
push
dec
std
push
push
mov
or
cmp
sbb
mov
dec
jns
outsl
out
repnz
mov
inc
ja
xor
push
mov
add
mov
std
jmp
sub
jae
jb
pop
dec
insb
dec
pop
lret
mov
push
ret
dec
pop
das
fdivl
jo
mov
imul
mov
sti
mov
push
imul
into
mov
fdivr
int3
jg
lret
xchg
jb
inc
mov
jmp
mov
dec
out
imul
pop
std
add
cli
push
sarb
insl
aaa
mov
insl
je
push
jmp
cs
fcomip
aad
inc
outsl
inc
dec
fs
xor
mov
insb
loope
insl
frstor
pop
imul
movb
push
jbe
sbb
mov
sti
mov
movsl
jecxz
insl
aaa
fs
fiadds
jns
or
out
movsb
pop
and
jmp
mov
lret
push
pop
negw
lock
push
out
push
popa
push
add
push
mov
xchg
xchg
dec
jo
movsb
sti
mov
inc
hlt
mov
js
xor
add
dec
xor
inc
xor
pop
test
repnz
sbb
or
mov
insl
dec
adc
inc
arpl
imul
bound
lds
sbb
aad
idiv
addr16
inc
popl
mov
pop
in
mov
cmp
insb
dec
ss
mov
fdiv
out
xor
inc
push
dec
aaa
out
push
mov
inc
dec
add
sbb
call
push
cld
mov
outsl
sbb
push
jecxz
cltd
jmp
mov
pop
js
or
lea
lret
incl
mov
or
mov
mov
mov
cli
ss
popa
add
lods
add
or
rcrb
add
add
sti
ficoml
push
pop
roll
pop
xchg
pop
testl
mov
shr
lods
fstpt
mov
ret
mov
or
inc
jne
mov
mov
jo
push
stc
inc
jmp
jle
or
sub
popa
or
jb
lea
insb
sub
test
add
add
fstps
push
dec
xor
jl
pop
enter
cli
cvtdq2ps
std
mov
dec
add
push
cmpsl
push
push
fld
out
insb
jo
push
jge
in
xchg
fcmovb
dec
lahf
dec
jecxz
enter
scas
jo
mov
inc
adc
in
mov
lods
jno
fwait
add
ret
andb
dec
inc
hlt
mov
push
add
repnz
inc
sbb
jmp
pop
pop
inc
jb
jo
jbe
dec
mov
fisttps
push
jns
insl
cli
in
lods
inc
mov
push
fmuls
rcl
stc
dec
inc
mov
jge
in
mov
add
sbb
cmpsb
cmp
add
ret
dec
mov
push
sbb
mov
aaa
mov
or
testb
mov
ss
sarb
pop
les
xor
dec
scas
pop
mov
mov
or
cmp
outsb
fs
sbb
js
mov
dec
push
popa
mov
mov
xor
or
loope
add
dec
mov
outsb
pop
addr16
out
jne
push
inc
psubb
insb
clc
cltd
in
mov
pop
rcrl
push
pop
cmp
inc
ret
insl
sti
or
iret
adc
divl
sbb
add
loopne
sub
mov
xchg
ret
mov
ret
scas
lock
fstpl
jnp
testl
in
add
pusha
enter
jns
dec
outsl
inc
or
push
mov
push
cmp
xchg
aaa
mov
push
fs
test
shlb
xchg
repnz
xlat
xchg
into
fs
xchg
xchg
push
and
push
inc
out
in
in
pop
cmp
lahf
add
adc
mov
jp
push
stc
test
decb
icebp
jo
xchg
xchg
mov
cmpsb
adc
xchg
in
movsl
jno
insb
int3
ficoms
or
mov
enter
xchg
pop
scas
call
lret
lret
filds
push
inc
sarl
orl
mov
pop
pop
fs
pop
and
fs
shll
xchg
in
jbe
jg
adc
push
test
in
fnstcw
xchg
shl
xchg
mov
sbb
or
out
jbe
push
mov
or
mov
stos
add
pop
je
int
divl
add
jae
adc
or
and
in
jbe
add
push
cmp
sub
sbb
fnstcw
jno
mov
dec
fcmovu
jl
sbb
ret
repz
jl
mov
out
xor
outsb
outsb
jg
xchg
cmc
jl
add
incl
ret
incl
or
cmp
test
int3
pand
in
adc
xchg
loope
dec
xor
add
aaa
je
faddl
shlb
sbb
out
fucom
fbstp
jmp
push
xchg
adc
xlat
mov
ja
mov
call
sub
repz
push
int3
sbb
repnz
cmp
or
mov
fs
sbb
jnp
and
cmp
push
lret
out
fwait
imul
dec
mov
mov
jne
jnp
adc
insb
dec
lret
fildl
jno
sbb
insl
mov
jo
jbe
inc
out
add
pop
pop
cmp
inc
movsb
adc
ljmp
in
xor
mov
repnz
pop
call
divl
add
pop
fsts
push
subb
fldlg2
out
jbe
shr
xchg
xchg
repnz
je
mov
jb
sub
imul
das
lods
adc
mov
orl
mov
xchg
jno
or
jno
out
iret
inc
outsl
jg
jns
pushf
sahf
dec
dec
mov
jle
xchg
mov
adc
dec
sub
pushf
or
data16
push
flds
push
sbb
jbe
push
fs
cmp
nop
mov
dec
dec
and
dec
test
push
pushl
mov
push
bound
or
es
xchg
dec
dec
pop
outsl
mov
aad
and
sbb
aas
pop
mov
fcomps
iret
xchg
push
fstpt
adc
push
mov
aad
insl
aaa
mov
adc
xchg
insb
mov
aad
add
outsb
outsb
push
orl
push
xchg
mov
adc
jnp
popa
and
cmp
or
clc
push
dec
int
pop
push
jnp
pop
jp
sbb
cmp
imul
or
gs
insb
ficomps
cld
mov
sbbl
outsb
pop
ja,pn
xor
jmp
sarb
sbb
xchg
outsb
mov
cltd
ja
adc
push
xchg
shl
data16
fsubr
push
js
or
push
outsl
fldt
pop
jmp
imul
loopne
sbb
pop
mov
clc
add
jno
push
push
jo
outsl
addr16
jg
addr16
insl
xchg
repz
out
gs
iret
jne
cwtl
imul
push
aas
cmc
call
pushl
inc
ret
add
imul
jmp
addr16
je
notb
push
and
clc
rcll
out
call
loop
daa
push
loop
push
and
lret
sar
xor
fimull
jo
add
lea
adc
add
aaa
fidivrs
push
les
ret
dec
or
and
lods
lcall
les
or
pop
inc
cld
push
fstl
adc
mov
lret
push
je
js
adc
jb
ja
aaa
sub
call
mov
mov
add
out
lret
mov
mov
orb
pop
add
sarb
mov
sub
sbb
out
or
ret
adc
xor
in
jl
pop
cli
hlt
rorb
repnz
jg
into
adc
das
pop
dec
in
adc
and
inc
cmp
mov
jo
cmp
ljmp
pop
mov
xchg
hlt
and
cmp
sub
cmp
mov
paddb
sub
jl
xchg
adc
lock
push
mov
add
dec
std
fcomip
and
adc
pop
rorl
pop
fcoms
dec
les
aaa
outsl
pop
mov
mov
add
mov
inc
and
mov
lret
adc
or
add
sbb
clc
or
xchg
jg
push
addr16
rorb
hlt
push
xor
mov
mov
mov
mov
mov
mov
add
jg
ljmp
into
cltd
xlat
dec
add
lea
and
orb
scas
xchg
mov
mov
call
and
ret
cld
jg
cmp
enter
pop
cs
insl
xor
cli
sbb
shll
sar
mov
addr16
add
mov
and
stc
pushl
lret
mov
subb
jo
rcrb
mov
mov
insb
mov
jb
push
das
mov
push
fwait
mov
push
push
cmp
jl
test
jmp
sbb
xor
outsl
outsl
push
pop
cmp
fnsave
fstps
in
adc
sbb
dec
sbb
cld
pop
jno
punpckhbw
push
add
mov
lret
push
arpl
test
lcall
std
sub
dec
pushf
test
dec
jbe
fsts
dec
inc
xor
push
loopne
loopne
das
mov
popf
xchg
lret
adc
jns
jno
mov
sbb
lahf
sbb
or
dec
or
inc
in
jp
pop
sub
xlat
das
cld
mov
cmpl
lea
pop
pop
jnp
push
loopne
das
mov
mov
add
les
adc
sbb
sub
test
mov
or
push
pop
or
ljmp
roll
xchg
mov
mov
xor
push
jge
sub
pop
mov
in
sarl
mov
fildll
pop
xchg
sbb
cmp
es
jo
xchg
fistps
ret
call
cmp
ss
pop
jbe
jle
jo
add
movsb
push
sub
fadd
add
cld
add
add
incl
hlt
mov
xor
inc
inc
push
cmp
decl
bound
jbe
insb
and
dec
cmp
ja
movsb
es
jae
lret
jle
and
or
adc
or
jbe
std
pushl
insb
inc
mov
push
pop
push
push
dec
adc
lods
mov
mov
pop
or
inc
cs
cmpsb
sub
scas
mov
pop
pushf
ljmp
decl
into
xchg
cmc
pop
or
pushf
je
dec
ss
pushl
jns
sub
and
jns
adc
or
lret
pop
daa
aas
in
cmp
xchg
je
add
and
fwait
cmc
outsl
add
scas
push
in
iret
jmp
cmp
sub
push
sub
insb
cs
aam
dec
mov
enter
in
call
adc
stos
repz
xchg
cmp
sub
dec
xor
ffree
decl
or
push
sbb
lods
dec
lret
and
cmp
cmpsb
push
les
pop
ret
add
sarl
mov
cld
into
orb
mov
lock
ror
inc
and
push
fnstcw
call
xchg
sub
fs
insl
dec
loop
inc
pop
je
adc
fistpll
adc
xor
popa
dec
mov
sbb
mov
pop
cmp
jae
stos
out
out
lods
pop
cld
mov
adc
jne
insb
lcall
loop
jbe
push
jne
cmp
pop
and
pop
cmpsb
pop
pop
pop
int
lds
aam
fs
outsb
out
push
mov
xlat
ds
es
push
sub
and
or
pop
pop
and
xchg
inc
mov
js
pusha
cs
dec
inc
addr16
repnz
lcall
add
cmp
mov
mov
dec
das
jle
imul
das
sub
sti
xor
and
mov
in
shl
pop
pop
lcall
add
ja
add
sub
out
push
outsb
cmp
sub
cltd
stos
mov
mov
jns
gs
jno
sti
mov
dec
cmp
es
lret
sbb
cmp
cmp
movsb
or
call
call
ss
fcoml
jne
adc
push
push
fisubrs
out
mov
cmp
fdivs
rorl
fldcw
cwtl
or
mov
mov
call
xchg
pop
xchg
dec
outsl
sar
js
outsl
outsb
cmc
jb
std
dec
sbb
inc
divb
stc
adc
arpl
xchg
jl
dec
sub
shl
dec
dec
jae
shl
pop
cmp
xlat
xor
es
clc
xchg
xor
cmc
outsl
decl
sub
arpl
sub
jp
push
lods
mov
jl
imul
sbb
lcall
pop
loop
xor
gs
pusha
out
rorl
mov
rorb
push
rcrb
cmp
sub
mov
outsb
xchg
cs
outsl
hlt
bound
test
xchg
lret
mov
push
dec
mov
roll
inc
mov
xchg
jne
sahf
jl
and
decl
into
dec
mov
test
xor
arpl
or
mov
mov
pop
xchg
add
mov
dec
xchg
push
cld
jg
and
push
pop
mov
push
ja
stos
sbb
adc
inc
jmp
xor
shlb
xor
or
jg
lret
jg
ja
cmp
adc
sbb
decl
cli
and
or
cmp
inc
xchg
mov
out
jmp
sub
clc
es
rorb
out
sub
add
cmp
leave
addr16
int
aad
mov
into
push
loop
add
jg
cmc
jo
ficomps
fwait
adc
ss
call
jb
inc
cmp
xor
adc
cmp
dec
push
adc
pop
loopne
mov
xchg
je
or
ljmp
loopne
ljmp
jns
mov
vdivsd
lods
fmull
push
mov
mov
cli
sbb
adc
pop
lea
jo
sub
out
mov
cvtps2pi
pusha
das
pop
push
sub
mov
aaa
lock
or
adc
shrl
sbb
inc
xchg
sub
fstps
aaa
hlt
xor
pop
xchg
add
xor
or
and
xchg
ret
mov
test
fcom
out
call
push
cmpsb
or
nop
sti
outsl
imul
fdivrp
sub
mov
mov
jae
adc
cmp
adc
pop
lods
push
dec
mov
push
sub
sar
lcall
mov
xchg
pusha
and
lcall
js
fsts
add
es
jae
xlat
lret
sub
xor
add
call
mov
sub
gs
pop
movsl
cli
shll
push
les
push
xor
push
bound
pop
sarl
mov
outsl
mov
mov
adc
pop
push
jns
jg
pop
std
imul
or
push
pop
cmp
ss
pop
or
adc
arpl
inc
cmpsb
bound
lcall
mov
out
cs
in
sbb
adc
lock
jbe
rclw
dec
cmp
push
outsl
out
jno
push
shll
lock
sub
test
fucomi
xchg
in
hlt
add
pushf
aad
inc
cmp
fucomip
loop
pop
xor
jbe
fwait
jmp
int3
and
push
ret
pop
insb
adc
or
inc
or
inc
mov
jo
dec
mov
push
mov
mov
cmp
repz
cld
cmp
imulb
xchg
push
push
cmpsl
dec
lods
dec
jns
fistpll
scas
sub
push
push
cmpb
int
dec
sub
inc
test
outsl
mov
lock
loope
push
mov
pop
dec
stos
push
aaa
ss
ja
dec
pop
mov
outsb
pop
mov
test
lea
mov
dec
movsl
dec
std
decl
jnp
mov
mov
sub
mov
not
pop
aam
mov
add
in
and
sbb
jo
push
add
cltd
icebp
pop
insb
clc
mov
dec
mov
jne
add
leave
idiv
mov
jne
push
mov
lock
adc
ds
lcall
mov
add
das
jg
testb
inc
inc
out
fbstp
push
imul
lret
int
or
scas
jecxz
add
insl
sahf
cmp
jge
shll
lea
jecxz
xor
add
sub
test
jno
das
xchg
xor
adc
jge
into
mov
std
push
ss
sub
or
int
outsl
hlt
mov
das
ss
mov
and
push
pop
mov
add
pop
sbb
jne
jb
and
loopne
mov
jle
mov
sbb
decl
hlt
mov
jne
nop
out
cmc
push
or
dec
dec
lea
mov
and
mov
or
adc
sbbl
push
xor
jecxz
xchg
sbb
sbbb
pop
clc
movsl
stc
pop
adc
decl
mov
cmp
je
data16
mov
cwtl
mov
cmp
imul
das
mov
and
mov
ljmp
and
test
jb
movsl
dec
divb
lods
xor
repz
aam
xor
cmp
xchg
imul
call
lcall
or
adc
xchg
pop
mov
inc
pop
mov
lds
push
fistl
mov
in
xchg
aad
and
lock
ss
jecxz
scas
pop
enter
shll
adc
sbb
inc
jmp
add
pushl
add
andl
jle
mov
pop
leave
ret
lcall
jne
mov
cmp
dec
negb
inc
pop
pushl
dec
jo
xor
cmp
jne
fistps
jmp
xor
jg
jecxz
bound
in
adcb
rorb
push
nop
sbb
add
std
and
int
aas
ret
pop
leave
sti
in
int
and
enter
and
and
xlat
cmpl
mov
lcall
xor
cmp
or
dec
jne
sbb
das
pushl
cmp
push
cltd
shll
incb
push
inc
nop
es
pop
cs
mov
push
xchg
cld
or
shlb
and
pop
je
cs
aaa
or
dec
and
test
dec
test
mov
jb
pop
sub
imul
jg
cmp
stos
mov
outsl
inc
mov
sub
and
test
cmpsl
aaa
cli
das
xchg
mov
add
leave
nop
mov
xor
mov
xchg
cmpsl
imul
dec
adc
pop
mov
add
xchg
rorl
daa
jmp
adc
enter
pop
adc
dec
scas
loopne
jg
inc
pop
and
cmpl
mov
inc
adc
dec
mov
test
das
sbb
es
pop
lods
loopne
mov
push
or
call
pop
mov
mov
imul
inc
mov
adc
sbb
ss
out
push
and
ljmp
sub
jbe
push
std
xchg
and
and
popf
jmp
sti
lret
cld
lret
pop
add
add
mov
adc
xchg
xor
sub
call
orb
sbb
loope
cmp
mov
add
clc
mov
adc
adc
lcall
xlat
fistpl
jg
mov
daa
or
mov
lcall
cmp
out
pop
aaa
lea
shlb
mov
call
incl
jne
inc
mov
adc
xor
and
dec
outsl
movsl
fiadds
je
fidivrl
or
sub
xchg
stos
cmpsl
or
aam
imul
adc
and
cmp
dec
xchg
jg
in
fists
imul
fdiv
insl
mov
outsb
dec
pusha
mov
mov
jmp
and
imulb
sub
sub
xchg
pop
cmp
inc
loop
mov
test
cmc
add
loopne
inc
nop
sub
dec
and
dec
std
lcall
repz
pop
push
add
push
push
adc
and
lcall
das
icebp
pusha
mov
jle
or
call
inc
and
mov
add
xchg
mov
mov
rcll
fistps
dec
sub
js
idiv
mov
inc
mov
pop
adc
pop
repnz
inc
test
cld
pop
cwtl
push
sub
sbbl
pop
push
jo
daa
lods
inc
ja
xor
pop
or
out
and
mov
pushf
jp
xor
dec
cld
xor
test
and
fdivr
ljmp
sti
ja
push
in
shlb
mov
xchg
js
push
aad
sbb
cmp
movsb
xchg
pop
sbb
inc
pop
decl
clc
outsb
push
or
sub
fildl
insl
fcoms
jne
call
scas
pop
add
stc
inc
mov
and
mov
aad
in
andl
push
ljmp
push
push
xor
and
sub
daa
xchg
mov
scas
packssdw
inc
lods
add
adc
push
add
pop
inc
push
mov
mov
jo
or
mov
das
aad
lods
mov
iret
push
or
loop
dec
inc
outsb
popf
inc
out
xchg
xrelease
fdivs
xchg
adc
mov
pop
loopne
sbb
imul
adc
in
movsb
pop
or
mov
imul
jge
mov
or
mov
cmp
dec
or
enter
pop
notl
adc
incl
call
daa
sbb
arpl
adc
popf
and
xchg
loope
xchg
sub
push
les
cmp
negb
cld
mov
pop
out
sbb
and
pop
dec
xchg
das
cld
icebp
mov
sbb
stos
fsubrs
lret
outsl
mov
xchg
push
inc
sar
popa
cmp
mov
cmp
mov
outsl
mov
decl
inc
and
loop
and
mov
call
sub
push
xchg
push
lea
xlat
stc
sbb
fiadds
push
aas
mov
lock
xchg
ja
inc
or
xlat
push
outsl
decl
cld
gs
insl
pop
adc
cmp
test
or
ja
fsubr
fcomps
mov
push
sbb
adc
adc
pushf
call
test
js
fcom
or
call
ljmp
das
inc
push
sbb
xchg
mov
xorl
outsl
cmp
push
xchg
mov
cmp
inc
les
enter
das
out
mov
sbb
mov
sar
add
std
sbb
out
data16
iret
out
repnz
loopne
mov
add
or
jle
lds
sti
push
add
cmp
dec
jecxz
call
sbb
sbb
cwtl
push
sbb
mov
ss
cmc
mov
inc
or
jns
dec
or
inc
test
data16
mov
repnz
jg
movsl
jg
jo
inc
and
xlat
mov
ss
das
test
enter
or
xchg
jecxz
ljmp
daa
push
out
cmc
and
lahf
loope
pop
in
jb
and
cmp
iret
inc
dec
mov
call
jg
jmp
and
cwtl
or
aas
call
and
int
inc
inc
in
out
push
sbb
mov
or
or
dec
xlat
aad
call
cmp
mov
jg
push
dec
cmp
cld
push
mov
cmp
insl
jmp
in
out
std
pop
call
ljmp
cwtl
mov
test
pandn
push
sbb
je
mov
xchg
mov
sahf
fwait
or
hlt
jg
inc
fsts
jb
add
call
dec
aam
fnstsw
push
or
push
divl
es
lods
ljmp
nop
rorl
js
mov
popf
sbb
fdivrs
bound
mov
and
scas
cld
call
mov
xor
lahf
push
int
mov
cmp
push
lcall
fdivrp
pop
fcoms
stos
loop
cmp
sarb
jg
inc
or
shl
test
sti
fwait
push
gs
pusha
dec
mov
inc
add
add
sub
aaa
je
test
mov
add
mov
fidivrl
addr16
js
dec
cltd
push
notl
mov
sub
aaa
clc
fstpt
add
cmp
add
cmp
std
push
das
pop
sbb
test
push
lahf
rolb
mov
cmp
shlb
mov
clc
cld
decl
test
mov
jle
mov
fbstp
ljmp
shlb
jne
cwtl
and
cmpsb
dec
mov
ja
push
test
pop
arpl
adc
adc
xchg
cli
sbb
inc
inc
or
mov
scas
out
js
sub
das
mov
jmp
scas
lock
pop
mov
outsb
and
adc
mov
movsb
in
lds
or
push
dec
das
std
call
push
lea
das
mov
or
dec
cmp
inc
jg
dec
push
fdivs
call
mov
jmp
cltd
xchg
jle
and
adc
cmp
dec
mov
cmp
cld
pop
stos
pusha
out
imul
orl
outsl
clc
sar
jb
aad
inc
call
adc
xor
jmp
dec
jg
clc
mov
or
scas
in
ffreep
push
bound
dec
inc
mov
add
or
pop
call
or
pop
aas
rolb
or
pushf
mov
mov
cmpb
outsb
fsts
lahf
and
mov
push
addl
iret
push
lods
or
inc
and
mov
jmp
mov
push
sub
jg
test
data16
sub
insb
xchg
and
or
clc
xor
jbe
inc
adc
shr
vmread
push
loopne
decl
dec
pusha
mov
lcall
push
dec
dec
cmp
int3
push
aas
push
mov
repnz
call
push
loop
mov
jle
cmp
sti
pop
lock
int3
filds
sti
or
sti
add
dec
adc
dec
jne
jo
push
inc
mov
dec
punpcklbw
jo
orb
fdivrp
mov
movsl
or
sbb
movsl
mov
jmp
dec
adc
dec
inc
push
jle
push
push
jo
das
add
adc
or
das
rol
mov
add
fucomi
or
mov
call
mov
add
or
test
xchg
mov
inc
sti
inc
out
ljmp
clc
sub
call
dec
add
das
test
adc
xor
aad
arpl
sarb
jp
loope
sti
sub
lock
mov
adc
int3
cmp
cmpl
push
push
ffree
pop
xor
mov
inc
push
xchg
sub
leave
flds
push
pop
aaa
mov
mov
jne
cmp
lds
mov
xchg
loopne
sbb
dec
jle
ljmp
xchg
shlb
adcb
icebp
sub
push
xlat
cmp
nop
and
sarl
std
decl
test
sub
ret
test
cld
test
sub
pushf
and
insl
movsb
push
pushl
pop
cmp
lahf
add
add
sbb
sbb
pop
mov
test
inc
cmp
inc
mov
inc
je
xchg
cmpsl
pop
mov
or
xchg
ss
cmpl
inc
aas
dec
imul
js
outsl
rorl
adc
test
shlb
push
ret
gs
mov
insl
xor
test
adc
dec
call
xchg
aas
gs
push
pushl
pushf
push
mov
add
mov
fsub
jg
sbb
lahf
out
sbb
mov
inc
adc
test
in
incl
adc
sbb
xor
xor
push
daa
mov
movsl
inc
aas
imul
pop
adc
lea
test
mov
cmp
decb
les
loope
push
lahf
outsb
andb
mov
mov
mov
jl
ja
sti
scas
or
das
and
or
push
cmp
mov
inc
mov
outsl
dec
fidivrl
mov
out
loope
push
or
mov
aad
in
mov
add
dec
pop
cmp
mov
push
fstpl
xor
pop
add
cmp
outsl
pusha
inc
cs
call
adc
push
xlat
ss
call
movsb
pusha
out
pop
orl
sbb
push
xchg
cmp
or
adc
mov
sub
inc
clc
lds
push
adc
cmpl
in
ljmp
test
push
mov
insl
jmp
aaa
dec
or
fists
mov
test
hlt
sbb
mov
cmc
cli
dec
lea
std
jg
nop
adc
push
fnsave
push
mov
push
fnstsw
push
pop
jp
jecxz
mov
ret
jns
add
pop
push
pop
fldenv
jg
dec
into
xor
clc
loop
xchg
xor
loope
aaa
mov
pushf
dec
aaa
mov
xchg
pop
out
push
xchg
aaa
aad
es
push
jns
mov
in
repnz
ljmp
or
and
ss
gs
pop
movsb
cs
gs
dec
sbb
test
sahf
hlt
loopne
popf
jne
add
adc
incl
fs
xor
cmp
sub
in
ljmp
cmp
mov
push
pop
fucomp
and
cmc
popf
mov
pushl
xchg
jmp
cmpsb
aad
xor
mov
adc
andl
inc
jle
push
aaa
arpl
xor
xchg
scas
das
loopne
bound
rorl
pop
push
aam
sahf
dec
cmc
incl
jge
add
mov
xor
loope
xchg
xchg
cld
jmp
cltd
jnp
inc
cli
leave
lods
shlb
push
and
push
push
jne
in
push
pop
xchg
jmp
push
stos
call
mov
pushf
dec
mov
mov
mov
sbb
in
lea
add
mov
idivb
daa
je
push
test
add
or
push
and
outsl
outsl
mov
sbb
inc
mov
adc
ja
fcoml
stos
adc
add
and
movsl
loop
and
push
std
inc
rclb
xchg
jne
mov
xchg
mov
jo
sub
push
rorb
or
inc
cmpsb
cld
decl
mov
push
mov
xor
es
aas
clc
incl
xor
mov
stos
mov
daa
fadds
scas
nop
push
xchg
lds
mov
or
or
int
call
mov
dec
or
mov
adc
jg
clc
adc
and
test
inc
fcmovu
cli
pushf
bound
sub
cs
into
jno
cmp
mov
add
cltd
mov
mov
test
neg
cli
and
xchg
movzbl
lea
adc
sbb
mov
outsl
pop
mov
mov
or
push
push
mov
push
mov
popf
test
or
mov
push
xor
jae
adc
mov
pop
and
mov
xchg
cmp
push
or
pcmpeqb
decl
mov
push
mov
repz
mov
les
std
jbe
incb
jmp
je
scas
and
mov
fbld
push
sub
fidivl
jbe
cs
mov
arpl
mov
and
pop
or
dec
fadds
scas
mov
add
inc
mov
sub
js
pop
aad
icebp
jmp
xchg
adc
sahf
mov
pop
in
idivl
sbb
push
outsb
jae
jle
lock
sub
dec
call
mov
aaa
fisubrl
push
add
in
adc
mov
cmp
fisttpll
adc
sub
add
push
pop
jmp
mov
push
sbb
notl
pushf
pop
lcall
lock
or
or
sub
or
pop
loop
push
cli
mov
dec
mov
pop
dec
and
push
cmpsb
call
mov
loop
dec
js
aam
mov
sub
mov
test
add
dec
je
jbe
push
clc
mov
lcall
and
jnp
dec
and
mov
jne
fistl
out
aaa
dec
add
xchg
inc
ljmp
loope
gs
ficoms
mov
insb
loop
std
aaa
std
sub
lods
and
cmp
pop
incb
adc
sbb
mov
push
push
add
std
mov
and
jmp
xchg
inc
mov
or
mov
adc
jne
ljmp
lods
aas
daa
dec
inc
mov
imul
subb
pop
cld
jge
aam
shll
adc
jmp
mov
push
cmp
mov
dec
and
icebp
cwtl
xchg
cmp
loop
mov
mov
cmp
fsubs
jnp
mov
clc
inc
xchg
insb
add
inc
mov
jl
pop
inc
dec
outsl
inc
imul
push
mov
xor
mov
sbb
stc
add
stos
pop
ja
lret
in
pop
push
data16
imul
cmp
push
xchg
loope
cmc
mov
test
into
mov
out
shrb
pop
cmp
xchg
ljmp
std
add
mov
add
dec
icebp
jg
out
inc
lock
sbb
mov
dec
outsl
fdivrl
mov
sub
mov
je
sbb
loopne
push
mov
xchg
inc
fidivrl
and
sub
xor
shl
mov
sti
xchg
ret
pop
mov
push
mov
sbb
call
cmp
pop
sbb
les
es
shlb
test
lock
mov
push
sub
add
xchg
mov
data16
mov
add
inc
push
pop
mov
lcall
add
shrb
addb
xchg
rcr
push
loopne
mov
cmp
clc
mov
loope
sbbl
cwtl
fstpl
pop
shlb
or
cwtl
shll
jne
sub
and
nop
cmovnp
out
xor
push
xor
pop
cs
or
sbb
add
daa
pop
gs
lods
xchg
xor
shll
mov
dec
adc
sub
add
jg
hlt
push
test
pop
adc
les
push
and
cmp
nop
test
ds
mov
decl
mov
add
sarl
test
or
fld1
adc
fsubs
cmp
sub
pop
mov
fs
add
ds
pop
jl
mov
jmp
lds
inc
cmp
les
popa
adc
in
add
push
mov
dec
enter
jle
mov
dec
jg
mov
and
lock
jg
or
or
mov
sbb
push
ljmp
in
xchg
fsubrl
lods
jge
push
int
xor
lods
in
repnz
ss
or
dec
mov
mov
pop
mov
xor
and
mov
and
pop
fsubrl
mov
cmp
lahf
xor
add
rorb
xchg
or
pop
negb
icebp
add
push
and
sbb
mov
or
push
sbb
dec
xlat
push
and
sti
es
dec
push
in
mov
add
add
dec
movsl
xchg
orb
pop
rcrl
push
das
mov
mov
add
mov
adc
adc
repnz
ja
lods
xlat
incl
add
sub
xor
sbb
inc
test
out
xor
ss
push
insb
cwtl
and
add
mov
push
call
mov
nop
movsb
movsb
dec
inc
sub
ljmp
cmp
dec
roll
cmp
inc
sbb
stc
pop
mov
or
jmp
ja
push
push
nop
cmpb
mov
loopne
mov
mov
addr16
xchg
or
notb
push
push
xor
jl
mov
mov
mov
mov
or
test
rorb
cmp
adc
push
xchg
sbb
inc
mov
mov
pop
mov
loopne
xor
sbbl
sar
dec
dec
lods
call
lods
cwtl
mov
inc
mov
mov
jo
repz
add
je
test
mov
incl
loopne
shlb
je
sub
push
mov
icebp
push
repz
sbb
lret
xor
xchg
adc
cmpl
js
test
ljmp
insb
push
lock
std
fwait
mov
push
sub
mov
cli
lcall
das
cli
cmp
jne
clc
sub
in
icebp
dec
or
loopne
aas
pop
add
fucomp
popf
addb
push
pop
repnz
fistpll
test
mov
jmp
jno
add
lea
in
sub
or
ljmp
jl
push
push
add
es
mov
or
jno
bnd
test
and
shll
sbb
jbe
sbbl
cmpsb
mov
xor
add
jnp
pop
mov
pop
into
or
cmp
addr16
cmc
push
xchg
jg
popa
and
xchg
lock
stos
xchg
sub
shrl
ds
adc
cltd
xor
mov
stc
in
or
dec
rclb
loopne
stos
jg
adc
scas
mov
scas
fistl
jle
cmp
xor
shl
das
icebp
inc
inc
xor
xchg
loope
call
sub
mov
and
and
push
xchg
stc
adc
pop
ret
fsubs
dec
push
push
pop
idiv
das
decl
xchg
dec
or
sub
inc
ret
cwtl
lcall
lods
mov
push
leave
mov
testl
sti
dec
adcl
stc
mov
mov
enter
xor
pop
not
inc
cmp
xor
pop
mov
sub
ficoml
mov
push
dec
sub
movsl
xchg
test
sbbl
ret
pop
jnp
js
sub
mov
adc
pop
sub
add
cmc
addb
jmp
mov
rclb
sub
jb
pop
mov
jle
adc
jo
lcall
pop
xor
repnz
ja
cmp
jecxz
jmp
sbb
call
jae
sub
xchg
mov
mov
les
inc
inc
sahf
test
or
fadds
ljmp
pop
mov
add
roll
mov
fdivs
es
ss
xchg
sub
std
leave
xchg
mov
in
lea
sbb
cli
dec
pop
inc
or
jmp
sub
pop
adc
inc
jmp
push
mov
call
pop
adc
mov
arpl
jecxz
into
cmp
cmp
add
lea
xor
daa
test
mov
mov
insl
sti
jge
arpl
cmp
clc
lret
or
adc
stc
incl
mov
mov
adc
lcall
movsl
or
insl
pop
sub
popf
dec
jns
add
and
pop
xor
push
or
push
aaa
sub
and
test
arpl
inc
sub
add
jnp
dec
arpl
jo
pop
idivl
test
lds
mov
jmp
fistl
fimull
adc
and
xchg
mov
call
out
bound
cmp
mov
repz
call
pop
mov
xor
push
xor
pop
ret
mov
nop
pop
std
sahf
adc
addb
add
cmc
in
jg
and
or
rolb
adc
fstl
cmp
cli
iret
incl
mov
and
pop
add
call
je
ljmp
test
pop
data16
lds
dec
std
jo
lcall
add
push
push
cmp
addb
jo
mov
iret
pop
decl
cs
je
sub
fnstsw
xchg
pop
xchg
lock
push
mov
ds
jae
outsl
popf
jle
cmp
push
cwtl
call
push
mov
fiadds
jno
mov
mov
pop
ljmp
or
xor
ja
stos
mov
movsl
jbe
mov
dec
mov
clc
or
movsl
pop
xchg
sub
test
or
lock
mov
pop
clc
icebp
xor
lahf
or
push
movsb
or
sub
outsb
aad
inc
xchg
shrl
inc
mov
and
call
mov
mov
ret
lock
cmc
das
shlb
mov
fcomi
mov
daa
popf
stos
add
jns
xor
jecxz
dec
xor
adc
cmpsl
pop
jno
mov
or
add
cmp
pop
scas
and
jne
sti
sub
inc
adc
cmpsl
call
out
or
gs
lods
add
movsl
fwait
push
shl
mov
or
xor
sub
inc
push
sub
movsb
fld
xchg
mov
push
cmp
add
push
in
ret
nop
loop
ljmp
rclb
fwait
movsl
inc
or
mov
push
or
inc
push
loopne
mov
sbb
and
add
sar
or
dec
dec
jnp
out
js
sub
les
dec
test
adcl
xor
pop
dec
mov
enter
arpl
mov
inc
mov
pushl
jg
mov
inc
movsl
aaa
dec
mov
repz
mov
mov
clc
jne
sarb
mov
jg
or
int
cmp
push
rcrb
xor
adc
lds
xchg
addl
mov
andb
fwait
mov
jno
push
add
test
push
jmp
rcll
push
test
clc
sar
push
addl
xchg
sbb
and
jnp
stos
hlt
in
sbb
aaa
lods
adc
bound
repnz
fwait
xchg
js
push
or
jno
xor
push
cs
push
mov
sub
rcrb
mov
cmp
push
rclb
mov
in
aas
mov
arpl
loop
inc
idivl
movsb
mov
jg
ret
addr16
negl
pop
lock
enter
popa
adcl
push
dec
dec
insb
and
inc
inc
xchg
lods
push
ret
sti
mov
testl
pop
mov
or
jecxz
ja
mov
dec
xchg
add
iret
mov
std
testl
xor
push
ret
mov
or
negb
bound
jg
sbb
movsb
into
pop
inc
inc
ljmp
mov
mov
sbb
jmp
movsl
dec
add
fsubrs
mov
lcall
ja
repnz
pop
adc
divb
adc
adc
mov
inc
nop
filds
dec
shr
sub
xor
xor
cmc
gs
out
outsl
loopne
xor
test
inc
scas
pop
dec
push
sub
cltd
jmp
incl
push
neg
sbb
and
cltd
inc
fisttpll
mov
jp
xchg
sbb
shlb
stc
dec
inc
sub
das
xor
mov
in
imul
adc
push
push
test
xchg
sbb
adc
dec
push
test
hlt
sub
pop
jl
mov
aam
iret
jb
push
stos
xchg
cs
and
sub
loop
jg
and
test
icebp
or
adc
mov
roll
popf
call
push
outsb
enter
popl
clc
dec
hlt
and
lret
push
enter
mov
jae
pop
cld
outsl
hlt
call
xchg
push
inc
cmpb
pop
test
jle
mov
repz
imul
jns
hlt
mov
push
fistps
fucomp
mov
dec
xlat
in
dec
cmp
cld
mov
cmpl
addr16
or
add
das
xchg
inc
add
mov
ljmp
orb
xchg
ss
push
aam
pop
pusha
fnstenv
xchg
mov
je
or
add
pop
sub
pop
inc
push
mov
cs
push
mov
jbe
shr
jo
pop
jnp
adc
pop
repnz
mov
icebp
leave
mov
sbb
mov
xchg
inc
adc
bound
loope
in
cwtl
sbb
and
push
add
dec
adc
ret
aas
push
push
dec
or
inc
or
addb
shll
mov
dec
mov
pop
ss
mov
mov
cmp
inc
jecxz
popf
push
and
sbb
inc
out
mov
sub
test
xchg
decl
je
sub
bound
call
mov
loop
dec
cs
mov
fsubr
das
hlt
sub
in
int3
mov
jo
mov
ljmp
leave
add
pop
xchg
loopne
cwtl
mov
add
lock
adc
mov
adc
jns
decl
popa
and
push
repnz
xchg
adc
aam
test
mov
or
xchg
and
nop
xor
or
fadds
loopne
rolb
lret
inc
jp
push
dec
and
push
add
dec
xchg
sbb
sbb
test
jge
pop
fdivr
pop
fadd
std
lods
adc
fisubrs
adc
fdivl
hlt
pop
sbb
adc
xchg
int
flds
pop
dec
mov
sbb
jne
inc
inc
fisubrl
sub
xchg
xchg
or
inc
into
sbb
decl
insl
scas
add
mov
jnp
inc
scas
xchg
mov
shl
add
jnp
pusha
pop
fs
mov
ds
or
mov
lcall
pop
fwait
movb
mov
loop
imul
xchg
aas
cld
xchg
fadds
and
rorb
xchg
inc
mov
jge
outsl
dec
jno
adc
mov
enter
fcom
sbb
jle
cmc
fiadds
mov
clc
fstpt
je
inc
ret
jbe
mov
cld
or
icebp
lcall
jge
adc
sbb
xchg
or
add
enter
jmp
jl
adc
inc
pop
dec
adc
repnz
jg
sub
push
or
inc
and
ficoms
xchg
jnp
pop
pop
mov
xchg
lret
xor
push
push
in
inc
shl
incl
stc
fnstcw
loopne
call
inc
push
rolb
clc
popa
adc
pop
int3
mov
lea
ds
jae
loopne
out
shr
decl
leave
dec
push
jle
dec
jbe
jnp
aad
jmp
xchg
jle
xor
mov
jb
mov
scas
aaa
sbb
lcall
ret
adc
jo
jns
push
and
sub
das
sbb
adc
mov
shrb
pop
sbb
out
adc
popf
add
pop
xor
jge
mov
movsb
pop
into
std
cmpsb
nop
jae
push
in
lret
inc
adcl
hlt
ljmp
stc
or
sbb
or
and
mov
sub
ss
or
dec
inc
cli
sub
repz
lcall
or
xchg
fldcw
or
inc
pop
hlt
out
mov
jae
sar
out
push
hlt
cld
xor
ja
sbb
push
mov
push
sbb
movsb
push
jno
jecxz
dec
sbbl
rorb
dec
pushl
jp
decb
pop
mov
mov
xchg
call
xor
mov
mov
mov
ja
add
cmp
xlat
fs
movsb
test
mov
scas
mov
call
pop
sbb
push
push
jne
inc
sub
sub
aad
mov
cwtl
or
jo
aas
das
mov
adc
hlt
dec
hlt
push
hlt
rcll
inc
mov
lcall
sbb
std
fistpll
push
mov
push
clc
mov
popl
xchg
jno
aam
dec
jle
and
push
jg
movsl
jbe
enter
pop
add
call
jbe
or
mov
dec
jnp
notb
jmp
clc
jl
adc
pop
add
sbb
mov
add
push
xor
cs
jg
in
lds
mov
push
pop
cmp
ret
sbb
xor
cld
in
xchg
sbb
jge
pop
std
add
adc
data16
mov
call
mov
in
pop
addb
mov
imul
lock
pop
idiv
push
mov
sbb
inc
jmp
inc
jne
jns
push
test
mov
je
jb
pop
lods
xchg
xchg
push
xchg
jg
mov
loop
inc
jne
pushf
and
les
sub
xchg
cli
lcall
pop
ja
stos
leave
notb
ret
ja
pop
out
push
clc
fwait
mov
cld
cmp
enter
inc
dec
inc
fs
icebp
in
repz
adc
in
test
test
clc
add
xlat
xor
mov
bound
sar
or
movsb
aaa
sbb
gs
xor
call
xchg
stos
mov
and
push
adc
popa
push
lcall
xor
adc
or
adc
push
xorl
dec
dec
cmp
push
lahf
jl
and
pop
je
mov
mov
aaa
call
push
loop
into
xor
jmp
jle
je
xor
mov
mov
xchg
mov
mov
je
xchg
lret
test
js
jmp
sbb
sub
xchg
hlt
fisttpll
sbb
or
fdivrs
sbb
and
gs
hlt
out
loop
xchg
idiv
adc
and
lock
or
jb
cmpl
mov
push
icebp
xor
sbbl
mov
arpl
enter
fldl2e
jecxz
sub
jbe
or
and
stos
scas
shlb
add
jmp
inc
mov
push
inc
lds
xorb
add
ficomps
andb
cltd
mov
sbb
test
stos
xor
xchg
nop
or
push
jg
sarb
jb
xlat
dec
gs
loop
and
adc
inc
mov
mov
jmp
dec
jne
mov
mov
and
mov
test
push
sub
mov
outsb
cltd
or
or
nop
sbb
scas
jno
ljmp
sub
loopne
ljmp
push
mov
push
pop
dec
incl
push
push
call
xlat
lea
cwtl
adc
std
or
sub
mov
decb
je
shlb
daa
das
jmp
adc
push
in
leave
jne
cli
mov
mov
lods
call
jg
sbb
or
jmp
loop
inc
pusha
dec
and
add
es
jle
dec
inc
imul
push
cwtl
out
decl
fwait
scas
mov
sti
shll
inc
or
lret
mov
dec
imul
mov
jmp
push
cmp
mov
cmp
mov
ja
jb
xor
fwait
clc
ja
sub
push
cld
mov
std
sar
leave
cwtl
adc
loope
rcll
and
mov
arpl
das
fmuls
push
adc
fimuls
or
call
in
pushf
rorb
xor
xchg
pop
sar
cmp
jg
inc
scas
nop
ret
mov
sbb
pop
mov
cmp
jae
adc
push
sub
popf
adc
mov
jmp
push
mov
cs
scas
test
shl
in
push
cld
ja
mov
ret
push
mov
icebp
in
xor
imul
call
pop
cltd
notl
sti
mov
test
mov
decl
dec
mov
cmp
clc
rcrb
repnz
loope
push
scas
scas
xorl
adc
nop
xchg
and
mov
inc
lods
add
add
xor
mov
inc
mov
or
insl
rcl
call
aad
mov
hlt
pushl
negb
out
sub
and
sub
fwait
scas
push
clc
or
push
int
inc
xor
lock
out
imul
cs
in
fdivrl
sbb
ret
adc
mov
mov
shlb
call
lea
adc
imul
xchg
sbb
sar
incl
mull
test
xchg
call
dec
movsl
pushl
mov
fidivs
push
lea
inc
shll
outsl
mov
adc
repz
add
decb
adc
push
dec
aas
xchg
loopne
dec
cmc
jns
add
aad
shl
mov
mov
lds
cmp
outsl
jmp
inc
push
hlt
lods
clc
out
aaa
lock
aas
fdivrp
mov
and
cmc
ret
jle
lods
dec
pop
aas
xchg
subb
in
call
dec
mov
lcall
mov
mov
xor
cmp
test
mov
loopne
sub
jmp
mov
lea
sbb
mov
inc
inc
xchg
and
imul
xchg
loopne
test
cmp
jg
pushl
mov
and
sub
cmp
data16
std
mov
sahf
arpl
adc
cs
sub
jecxz
pop
je
mov
sub
add
lods
out
and
cmc
ret
fsubrs
mov
call
outsl
sarb
cld
or
sub
jmp
lcall
xor
and
mov
es
or
and
nop
jb
pop
jp
icebp
adc
push
xchg
mov
mov
mov
inc
jge
stos
ljmp
je
stos
aaa
jae
mov
int3
in
fsubr
inc
dec
and
add
dec
or
mov
cmp
xor
jb
jp
fst
dec
adc
xchg
xchg
or
loope
clc
decl
add
mov
sub
out
jmp
stc
mov
adc
cmp
shl
outsl
push
cli
outsb
and
dec
std
pop
call
add
insb
sti
cwtl
sub
call
dec
push
or
movsb
addl
je
adc
mov
decl
arpl
xlat
cmp
mov
cmc
test
lds
lock
loop
out
mov
add
decl
scas
sar
fistl
adc
cmp
inc
testb
test
pop
sub
loopne
cmpsb
subl
je
shrl
fdiv
call
cwtl
jle
dec
ret
fdivl
xor
pop
push
or
push
popf
adc
pop
cli
add
or
mov
add
push
jmp
mov
fwait
mov
ret
lock
lcall
popa
pop
call
stos
jns
les
mov
mov
cld
jg
dec
jle
pop
fbld
jmp
sub
adc
inc
je
push
dec
cld
fists
jmp
das
and
xor
or
clc
inc
mov
nop
cmp
jl
call
dec
sub
ror
inc
dec
call
jb
idiv
xchg
mov
repnz
mov
lods
adc
and
into
call
pop
loop
mov
mov
fwait
ljmp
call
js
or
push
arpl
test
adc
xchg
icebp
or
lahf
ret
inc
dec
mov
cmp
sub
dec
mov
jb
inc
xor
xor
xchg
in
lret
mov
call
and
mov
push
push
adc
jo,pn
lret
xchg
lods
adc
ffreep
jl
test
movsl
add
mov
fsubp
dec
push
ret
nop
out
imul
pop
rcrl
icebp
push
or
lcall
dec
add
test
subb
xchg
dec
pop
aas
ret
sbb
ljmp
xor
test
das
lock
sbb
in
call
aam
cmc
sbb
sub
scas
adc
std
mov
ds
lcall
mov
lret
dec
adc
int
add
xchg
js
add
cld
aas
mov
int
mov
imul
sub
verw
data16
mov
mov
xchg
mov
push
fwait
jg
test
xlat
sbb
cltd
jne
inc
mov
test
and
scas
mov
jo
es
shll
jl
jmp
rol
out
test
mov
sub
jno
mov
jle
mov
jno
jne
adc
fwait
mov
sbb
pop
jp
mov
dec
push
inc
or
in
mov
mov
dec
adc
or
hlt
aad
mov
pusha
jp
fists
fs
inc
out
xchg
add
ret
cli
mov
inc
jb
popa
and
test
stos
shlb
or
cmp
movsl
sbb
fsub
push
push
mov
or
xchg
testl
sar
push
scas
aad
inc
outsb
pop
jae
or
cmp
dec
fs
lcall
fwait
add
fwait
lcall
or
sub
in
jmp
aam
mov
adc
imul
adc
mov
mov
mov
ret
sbb
repnz
jg
jge
cmpsl
pop
test
clc
or
jg
jl
inc
jmp
mov
adc
push
sahf
data16
inc
push
adc
loopne
or
adc
out
pop
movsb
mov
mov
xor
sbb
inc
inc
in
push
aam
add
scas
aas
fwait
mov
lock
movb
inc
fs
pop
sbb
pop
movsb
xor
jmp
je
in
je
mov
push
adc
sbb
jg
cmp
roll
dec
cmp
push
lcall
test
mov
adc
mov
mov
or
mov
xchg
adc
call
jp
mov
push
cmp
add
rorb
sahf
subl
call
mov
push
pop
mov
xorb
cli
fcoms
xor
push
lods
sbb
repnz
sti
aas
std
out
pop
jns
jns
jmp
aad
xchg
push
mov
xor
xchg
clc
aaa
orb
mov
out
inc
call
decl
push
aas
sub
mov
xchg
cmpl
orl
mov
in
push
loope
aas
dec
and
or
and
repnz
mov
icebp
jg
adc
add
sbb
inc
jmp
cmp
stos
sub
inc
ret
fnsave
adc
out
dec
pop
loop
call
or
imull
add
filds
mov
push
xor
cmp
cmp
add
add
icebp
mov
sbb
stos
and
inc
pop
cmpb
call
dec
inc
mov
add
xor
repz
adc
mov
mov
sub
aas
in
mov
std
outsl
mov
inc
jmp
jl
fmull
push
in
pushf
jne
adc
call
and
mov
inc
lret
out
insb
jp
gs
xlat
add
out
push
cs
pushl
jl
cmp
out
clc
push
repz
cmp
pop
or
jbe
dec
loope
jmp
push
outsl
mov
push
hlt
push
aaa
aaa
js
cmp
call
mov
pop
hlt
sbb
aam
aas
std
mov
adc
jmp
sbb
andl
push
ss
or
dec
adc
lock
and
jle
jmp
test
ret
leave
sarl
jne
dec
cmp
push
mov
les
dec
cld
inc
push
jnp
mov
push
jne
movsl
cmp
push
divl
cld
dec
pop
mov
sub
ja
clc
cld
fistpll
in
inc
adcb
cmp
push
dec
cmpsl
mov
mov
sub
es
aas
cld
decl
inc
xchg
sub
lea
data16
cltd
and
loopne
aam
fcoms
dec
loope
out
int3
lcall
les
xor
adc
xlat
mov
outsb
imul
movsb
pushl
jbe
pop
stos
or
cmc
add
dec
mov
lock
subb
les
aaa
outsl
aaa
mov
add
inc
lds
mov
lds
clc
jg
lds
mov
xchg
loopne
scas
and
dec
jnp
shrl
imul
out
and
aad
dec
mov
testb
or
add
cli
and
xchg
or
mov
enter
cmc
add
push
add
sub
orl
les
mov
sahf
enter
stos
xchg
repnz
cwtl
sub
jge
leave
rep
data16
push
das
sbb
xchg
ss
mov
adc
ret
mov
outsl
and
sbb
push
icebp
or
xchg
ss
mov
mov
inc
iret
inc
pusha
fnstenv
mov
fdivs
clc
jl
mov
push
aaa
mov
rcll
imul
in
loop
pop
sarl
sti
push
dec
push
xor
ffreep
es
decl
in
repnz
repz
inc
mov
mov
mov
lock
jg
std
outsl
mov
jno
subl
bound
decb
sub
push
imul
pop
cmp
jb
pop
mov
in
je
jmp
ret
js
push
jg
dec
add
sbb
mov
lcall
gs
mov
add
sahf
sub
fucomi
ljmp
cld
jo
ds
mov
filds
jne
pop
cld
push
out
mov
neg
cltd
int3
lock
fcomip
mov
ja
xor
mov
out
cld
xchg
shr
add
fsubrs
faddl
movsl
call
mov
int
adc
xor
es
jne
xor
sar
negb
int3
jl
cld
cmpsb
pop
lcall
xor
dec
repnz
insl
sub
lock
push
sub
pop
dec
jl
ret
pop
adc
mov
or
push
inc
movl
mov
inc
pop
inc
pop
fisubrl
arpl
insb
cmp
xchg
adc
add
lods
je
pop
sub
addb
pop
inc
fiadds
xchg
jge
ret
sbb
call
jg
fucomip
scas
push
and
jae
call
insb
lret
ja
incl
sub
adc
jmp
call
add
jmp
cwtl
cmp
imul
jl
cwtl
insl
jmp
nop
setno
stc
or
and
jge
mov
adc
mov
jl
push
or
mov
pop
ljmp
push
mov
push
jb
bound
imul
push
into
xorb
mov
test
movsl
inc
cs
lret
outsb
xor
push
rcll
adc
jg
mov
dec
lret
sub
pop
and
popa
mov
je
mov
mov
jg
jmp
bsf
inc
mov
pop
clc
ljmp
pop
adc
int
xlat
pop
test
adc
pop
cmp
push
push
decb
stc
sub
and
das
call
xor
xlat
call
dec
inc
nop
sub
inc
pop
in
out
push
int
fwait
jmp
dec
daa
fiaddl
xchg
jmp
inc
cltd
jmp
test
idivb
movl
add
lods
call
sub
lahf
push
or
inc
and
mov
jl
testb
adc
sub
or
stos
or
push
fcomps
or
and
loopne
icebp
aaa
aad
push
enter
arpl
sarl
cmp
jl
fwait
out
adc
cwtl
xchg
mov
sbb
dec
pop
cld
mov
jg
sarl
fldlg2
jl
mov
xchg
or
sub
int
cltd
xor
call
xor
lods
jp
cmp
loope
pop
insb
push
add
lea
push
lods
xchg
and
gs
dec
icebp
das
rcl
inc
mov
jle
ljmp
incl
cmp
outsl
icebp
mov
push
call
xor
shrl
pusha
or
xchg
fmuls
clc
push
add
or
lods
testb
adc
cmp
cmp
and
xor
out
ds
or
dec
ljmp
ds
pop
loopne
cld
xchg
aaa
jb
sub
fsubrl
in
sbb
clc
fwait
cs
popa
repz
jg
std
jmp
cmpsb
ffreep
mov
push
push
sbb
inc
je
cs
mov
mov
cmc
inc
sub
aaa
aas
dec
or
or
sub
or
std
mov
cmpsb
inc
in
jmp
incl
mov
clc
lahf
iret
movsl
push
mov
add
jl
xchg
call
sub
insb
sub
lahf
in
inc
add
in
xchg
inc
push
mov
mov
inc
lock
shll
ljmp
mov
popf
stos
nop
sbb
jle
lcall
pop
leave
jns
into
sub
or
gs
push
sub
push
outsl
sarb
test
xor
popf
or
sbb
aaa
es
mov
lret
and
adc
mov
cmp
push
hlt
daa
js
dec
je
and
subl
adc
decl
cmp
in
push
enter
push
sti
ds
add
sub
xchg
jl
pop
jle
pop
iret
cmp
test
cmpsb
andb
push
movsb
adc
pop
idiv
int
fists
pop
mov
outsl
lock
sti
push
xchg
dec
je
imul
mov
mov
test
test
pop
mov
fistpll
sub
cmp
pop
aam
pop
lea
lds
or
mov
ds
push
enter
add
xchg
and
add
mov
shl
cltd
mov
dec
inc
sub
daa
xor
jg
cmp
ds
add
popa
and
sub
jo
enter
pop
jnp
std
mov
call
std
in
xchg
push
cwtl
adc
ret
jno
xor
lret
mov
and
sbb
test
in
sub
or
xchg
xchg
or
sub
mov
ret
pop
mov
dec
lcall
aam
and
sbb
sub
jp
mov
sub
add
inc
idiv
push
pushl
lea
xor
inc
push
xor
lods
push
push
lcall
sbb
les
dec
or
or
xor
adc
jmp
das
shrb
pop
cli
mov
xchg
or
cmp
mov
ss
flds
pop
shrl
lret
ja,pn
loop
addl
test
xchg
mov
hlt
add
add
clc
jne
mov
clc
cmp
pop
cld
ljmp
cwtl
pop
cmp
pop
ret
sub
daa
ljmp
fildl
or
nop
and
ss
outsl
std
sbb
push
adc
mov
dec
cli
andl
and
cmc
rcll
xchg
adc
mov
xadd
lcall
pop
pop
sbb
inc
outsl
aad
mov
sub
insl
loop
mov
loope
in
call
arpl
sub
push
out
lea
xlat
aad
pop
jg
mov
subl
in
shll
adc
or
jl
xor
xchg
push
sub
mov
nop
pop
mov
aam
je
das
cld
clc
outsl
pop
gs
sbb
mov
adc
aas
jg
adc
pop
mov
cmp
inc
dec
lret
jl
clc
scas
push
cmp
cld
and
sbb
adc
fs
or
dec
fistps
pop
out
mov
fwait
repz
hlt
lahf
data16
push
decb
call
les
jl
leave
mov
lret
mov
cmp
push
scas
mov
pop
sbb
jnp
jmp
jae
call
les
js
imul
lds
mov
sbb
outsl
fst
ljmp
je
dec
xchg
push
dec
lahf
xor
loop
icebp
xchg
addb
ljmpw
ljmp
and
movsb
scas
cmc
ss
sbb
nop
lock
testb
sti
aam
fcomip
insb
xchg
or
movsl
cld
inc
in
stos
xchg
in
jl
adc
pop
push
push
imul
mov
fwait
cmpsb
jnp
pop
dec
fiaddl
or
lcall
jecxz
lea
daa
insl
push
push
call
rorl
jmp
adc
inc
cmp
les
mov
mov
pop
icebp
incl
or
adc
sbb
xor
push
or
and
inc
jo
lods
incb
fs
fdivs
rcrb
push
or
mov
daa
adc
adc
test
dec
ficoml
xchg
jmp
cli
mov
lcall
fildll
nop
int3
dec
xor
adc
or
lods
stos
dec
add
aas
test
loop
inc
aas
mov
jecxz
addl
seto
test
call
sbb
mov
xchg
and
xchg
xorb
push
push
cs
mov
test
sub
std
mov
loopne
fwait
repnz
addb
and
les
xor
lds
in
les
push
pushf
decl
pop
or
bound
xor
sbb
out
mov
adc
adc
and
pop
push
mov
je
je
and
push
sbb
scas
shrl
orl
mov
or
lcall
and
fmuls
lods
jne
sub
sbb
clc
sub
les
push
pop
ret
mov
das
icebp
pushl
cld
push
mov
pop
pop
test
test
stos
cmp
add
jle
add
sub
pop
clc
rcl
lds
mov
dec
add
dec
aas
jl
push
xor
je
dec
negb
std
movsb
push
cmc
mov
mov
into
repz
jg
adc
xchg
or
xchg
nop
push
repnz
hlt
lret
adc
idiv
repz
mov
aas
sub
and
loop
dec
loopne
pop
addr16
sahf
xor
daa
icebp
add
or
ffreep
mov
or
mov
dec
roll
imul
mov
cmp
sub
ljmp
shrb
dec
pop
xor
dec
stos
imul
dec
mov
pop
cmp
cld
or
xorb
out
jmp
add
mov
call
jno
ror
sbb
mov
bound
sub
call
pop
test
sub
lods
jle
pop
mov
in
aaa
hlt
sub
mov
jmp
inc
fwait
adc
subb
outsl
aad
push
dec
sub
dec
lods
sbb
jne
xor
adc
aam
xchg
int
je
and
test
sbb
out
fistpl
orl
nop
sbb
jg
repnz
lea
push
out
and
ret
stos
fwait
pop
mov
pop
sbb
mov
xchg
adc
sub
mov
les
push
cli
arpl
data16
or
adc
cmp
iret
mov
lret
push
lods
lods
pop
enter
push
lea
pop
jmp
jno
incb
movsl
scas
cli
insl
mov
cmp
push
ret
push
cmp
insl
add
cmp
repz
out
mov
and
mov
imul
orl
fstps
test
ljmp
mov
add
loopnew
daa
mov
sub
mov
fs
out
adc
xor
cld
mov
repnz
inc
fcoms
les
add
ds
inc
js
xor
pop
jp
and
incb
enter
andb
adc
inc
lahf
jo
cmp
xor
lahf
xchg
enter
dec
std
decl
mov
das
movsb
mov
jl
outsl
icebp
decl
imul
and
je
sub
daa
imul
ret
jg
dec
notb
and
hlt
loop
and
mov
xor
fbld
sbb
scas
enter
and
out
mov
aam
pop
mov
pop
cmpsb
xchg
push
push
xor
insb
movl
xor
mov
mov
jl
inc
xor
repz
jnp
adc
xchg
mov
test
icebp
mov
dec
mov
xchg
xchg
xchg
call
scas
and
je
mov
dec
rclb
sbb
jnp
pop
sbb
test
clc
ljmp
cs
mov
xchg
in
shl
mov
stos
shll
ret
rolb
mov
sbb
xor
jg
jge
lods
data16
shlb
aaa
lret
and
sti
mov
xor
cld
or
dec
add
js
or
pop
xor
and
aas
mov
popa
sbb
mov
mov
aad
decl
push
add
ret
or
inc
jge
pop
mov
xor
cld
jne
push
pop
cmpsb
ror
mov
cmp
bound
adc
mov
push
lret
mov
lea
ud0
cs
out
lea
jge
jnp
je
clc
ffree
push
movsl
clc
adc
sbb
add
jl
pusha
pop
ficoms
cmp
out
or
add
push
jno
cmp
xchg
mov
loope
sbb
jp
lcall
aaa
int3
mov
into
mov
imul
ja
jle
adc
flds
adc
outsl
or
out
inc
incl
xor
xchg
nop
adc
arpl
movsl
add
stos
and
mov
stc
insb
insb
dec
and
out
xor
xor
cmpsl
insl
negb
and
aas
cwtl
js
jg
es
clc
call
lahf
in
loop
jg
sub
mov
push
in
inc
or
imul
pop
mov
in
ret
or
clc
addr16
pop
pop
int
pusha
pop
lock
call
imul
adc
push
sub
jge
aaa
decl
jmp
jnp
mov
loop
jne
decl
inc
sarl
rorb
filds
sahf
mov
cld
and
adc
and
aam
jg
shll
sbb
rol
dec
pop
sti
sub
fwait
loopne
loop
adc
sub
lret
imul
icebp
push
xlat
daa
mov
push
or
stos
and
cld
inc
xlat
jle
fwait
or
incl
dec
test
push
adc
push
insl
inc
xchg
stos
popa
ret
test
clc
lcall
in
loopne
mov
adc
mov
je
adc
mov
test
loopne
xchg
inc
jmp
cli
sub
push
pop
in
push
inc
pop
out
test
popf
rcrb
mov
icebp
inc
sub
jge
mov
hlt
aaa
popa
call
pop
pop
push
pop
cmp
xor
add
inc
sub
cmpsb
cli
or
mov
insb
loope
test
or
mov
inc
mull
jl
mov
jg
pop
in
loopne
xor
je
mov
scas
xlat
cmp
rolb
xor
sbb
sbb
std
lcall
cmp
push
in
and
add
test
aaa
xor
inc
call
push
jp
xor
adc
dec
inc
lods
or
inc
fdivrs
pop
in
hlt
adc
int
das
cld
pop
out
push
je
cmpl
cwtl
jne
mov
or
sbb
ja
sbb
jg
incl
cmp
xor
test
mov
and
push
nop
aam
or
in
bound
mov
xchg
xchg
dec
sub
sbb
arpl
ja
loope
jg
fwait
sub
test
xchg
testb
call
test
sub
or
pop
lcall
leave
mov
ljmp
lahf
sbb
scas
das
mov
sub
jne
mov
int3
fdivl
jg
add
jmp
add
mov
fildl
mov
mov
aas
and
jmp
and
jmp
es
cmp
stc
add
int3
fbstp
faddl
cmpl
je
incl
cli
clc
sbb
leave
loope
adc
in
hlt
push
mov
lcall
jbe
fists
push
fidivs
push
inc
scas
into
sbb
jp
popa
gs
mov
call
call
loopne
and
lods
data16
xchg
adc
pop
movsb
dec
push
sub
jg
shl
and
mov
aaa
mov
outsl
shlb
out
cmp
or
xchg
push
arpl
push
shlb
dec
jge
xchg
mov
or
push
adc
stos
xlat
jo
inc
pop
cmp
lret
pop
cli
xchg
cmp
cltd
repz
idivl
call
dec
test
xchg
or
mull
jb
jg
lods
scas
dec
adc
mov
das
pop
jmp
bound
loopne
incl
call
mov
jmp
cmp
cmc
ja
mov
add
rcrl
clc
clc
mov
add
andb
jb
add
mov
cld
ljmp
lar
pop
pop
mov
jmp
mov
fcoml
adc
mov
adc
rep
cli
fs
sub
jg
adc
push
add
jmp
loopne
sub
pop
adc
mov
or
adc
pop
gs
pop
inc
repz
cmp
push
pop
outsl
hlt
jg
int3
push
sub
fimull
xor
sub
jg
movsb
cmp
arpl
or
cmp
mov
adc
and
aaa
adc
pusha
pop
sbb
call
or
sub
clc
or
mov
or
add
push
clc
insl
cmp
push
cmc
xor
fdivr
decl
xchg
and
mov
lret
mov
cmp
mov
jb
mov
cmpsl
inc
neg
jnp
jmp
jmp
xchg
adc
mov
dec
push
adc
mov
jg
je
aas
loopne
movsb
out
sbb
out
or
movsl
push
mov
jne
adc
jecxz
leave
push
and
ret
lret
mov
lahf
movsb
mov
jbe
xchg
jecxz
jmp
pop
mov
adc
and
dec
fdivrl
js
lock
sub
adc
icebp
ja
or
pushf
in
and
xor
jnp
mov
push
mov
mov
mov
pop
cld
jg
fnstenv
and
xor
daa
pop
sub
adc
jg
call
popf
fcmovb
cld
sbb
lods
push
sub
jne
cmpsb
pop
decl
inc
dec
inc
fisubl
dec
lahf
push
sbbb
mov
push
repz
jmp
stc
and
fcompl
repz
out
sub
fwait
loopne
movdqa
dec
adc
jg
or
loopne,pt
and
add
outsl
std
jmp
shlb
jle
aaa
xor
pop
jno
ja
fdivs
mov
jg
cmpsb
mov
mov
hlt
int3
aaa
stc
jmp
add
sbb
hlt
sub
and
enter
lret
ret
cmp
in
andb
addb
insl
or
aaa
dec
xchg
into
inc
jg
mov
outsl
push
mov
push
ljmp
inc
int
sti
call
and
imul
pop
add
sub
mov
ja
lcall
je
inc
rep
push
jmp
outsl
mov
xor
cwtl
in
lock
sbb
imul
popf
clc
jg
push
sub
push
or
call
jne
stos
push
mov
nop
mov
add
pusha
sahf
pushl
jae
fwait
pop
cld
xchg
mov
or
outsl
call
dec
ret
xchg
dec
push
and
addr16
and
pushl
add
xchg
jo
add
fmuls
stos
jo
imul
jnp
xor
js
ffreep
mov
popf
sub
cmpsb
adc
inc
push
pop
out
call
dec
cmp
pop
or
xor
ja
add
pop
clc
aaa
cmp
inc
push
pop
call
lock
daa
ret
mov
pop
mull
pop
add
push
mov
mov
add
jge
arpl
fs
mov
hlt
cmp
cmpsl
scas
dec
cmp
xor
stos
icebp
incl
and
iret
filds
cmp
and
fcompl
les
mov
inc
int3
sub
ret
cltd
cli
pop
and
add
xor
jmp
ret
rorb
iret
jnp
xor
mov
add
decl
iret
xor
mov
daa
sbb
int3
inc
or
leave
add
pop
test
stc
lcall
mov
std
pop
xor
cmp
adc
xchg
jne
int3
fs
xchg
std
pop
outsl
add
xchg
clc
ss
call
ja
add
jle
mov
cmpb
rcll
sbb
mov
pop
pop
fcoms
call
cmc
movl
jne
mov
and
or
jl
in
pop
add
std
pushl
lods
pop
push
adc
sbb
or
sub
cmpsb
fcompl
adc
push
dec
xor
aad
or
test
test
cmp
mov
sub
and
sub
dec
cmpsb
xlat
jmp
jnp
pop
push
clc
or
xorb
call
adc
cmp
ljmp
jl
xor
adc
xor
cmp
xor
xor
dec
xchg
or
jmp
or
mov
dec
outsb
cli
mov
push
pop
xor
cli
iret
cmp
jbe
out
movsb
cmp
call
rcll
add
dec
dec
adcb
std
filds
inc
dec
jmp
mov
popl
inc
mov
add
idivl
outsl
xlat
bound
dec
decl
push
aas
dec
pop
adc
pop
and
fidivrl
mov
xchg
and
sbb
push
loop
aaa
sbb
repnz
lcall
bound
repnz
jg
pushl
je
pop
roll
andl
cmp
out
push
and
push
cli
decl
xchg
pop
adc
insb
lods
int3
push
and
addl
mov
aaa
jle
dec
hlt
xchg
out
rol
push
inc
sbb
sbb
add
fadd
decl
xchg
rcl
sub
sub
shufps
dec
insl
cld
call
or
push
mov
test
loopne
or
popa
add
jne
lcall
fisubs
inc
pop
mov
or
add
xchg
out
push
cmpb
fucomip
and
mov
mov
fildll
call
pusha
pop
push
xlat
and
xor
push
cld
or
cwtl
mov
pop
not
das
cmc
out
pop
mov
mov
ret
popf
les
mov
out
in
dec
adc
sub
inc
imul
add
ss
clc
dec
pop
mov
sbb
gs
je
mov
cmp
add
addl
cwtl
addr16
xchg
clc
jecxz
mov
push
jg
push
adc
mov
add
add
in
mov
es
ret
lds
push
mov
pushl
or
adc
loop
adc
dec
jno
js
ss
push
stos
dec
icebp
iret
popf
dec
cmc
mov
xor
sbb
dec
leave
or
xor
cli
and
int3
sub
into
sub
insb
add
ret
dec
cld
fs
jmp
ds
sub
or
push
push
push
xor
lods
cli
lahf
cli
mov
scas
hlt
test
hlt
and
es
mov
lds
cmp
push
push
cmp
sub
out
or
lods
mov
jl
fs
mov
rolb
fcomip
in
jmp
dec
mov
out
iret
icebp
dec
mov
or
dec
dec
rcll
jo
push
out
lret
lock
cmpsl
mov
sar
adcl
sbb
into
inc
add
imul
push
push
test
out
mov
jle
nop
subb
sub
or
mov
pop
popf
mov
mov
mov
es
aam
inc
call
mov
shlb
out
nop
inc
and
inc
mov
test
pop
cmp
imul
andl
pop
call
stos
add
adc
data16
xchg
dec
jns
test
adc
sub
lret
lahf
adc
or
mov
xor
mov
jbe
test
addl
sbb
decb
or
fwait
push
incl
fbld
orl
sbb
lcall
mov
or
jo
adc
les
std
in
sub
push
lods
fucom
js
mov
sbb
cmp
xchg
inc
ja
dec
jb
inc
inc
enter
cltd
xchg
or
das
icebp
cmp
jb
mov
sbb
or
popf
xor
int
inc
and
mov
andps
pushl
inc
adc
jb
je
jbe
xchg
inc
je
outsb
fs
enter
lcall
mov
mov
xor
dec
lcall
dec
jle
loop
xchg
pop
and
aas
lock
aam
pop
jb
or
pop
scas
push
sub
fldt
pushl
mov
in
scas
lock
push
enter
lahf
decb
sbb
bound
lcall
and
dec
cmp
inc
cltd
rorb
sub
inc
sbb
adc
cld
mov
ss
dec
mov
fildl
test
ljmp
mov
or
adc
mov
in
movsl
mov
cmc
leave
jmp
ret
or
inc
bound
pusha
xchg
xchg
push
decl
sub
ret
pop
pop
and
cmpsb
mov
fistpl
test
mov
mov
sub
jg
ja
mov
pop
xchg
jne
movsl
fcmovb
or
dec
jp
adc
jge
nop
lret
pop
cmp
sbb
adc
adc
inc
sbb
jne
outsl
mov
in
scas
dec
sub
xchg
stos
popa
test
inc
sbb
fmull
fnsave
inc
or
or
push
rclb
cli
out
out
inc
fiadds
mov
sahf
mov
addr16
mov
push
fcoml
or
lcall
sbb
in
mov
sbb
imull
aaa
cmp
sub
and
aaa
inc
xchg
sbb
jecxz
jmp
cmc
mov
and
jg
decl
pop
add
loope
inc
fyl2x
test
dec
ds
push
push
or
sub
xchg
outsb
mov
mov
mov
aaa
sub
inc
sub
cwtl
repnz
adc
test
data16
ret
clc
pop
mov
mov
nop
add
xlat
cld
jle
pop
faddl
add
jne
xchg
push
out
clc
fisttps
lret
lods
jnp
sar
mov
or
cli
mov
das
repnz
xchg
push
add
mov
lea
outsb
push
cmpl
lea
or
sbb
mov
dec
loopne
xor
das
out
push
dec
idiv
movl
pusha
ror
adc
test
push
xor
incl
repz
fs
bound
jg
int3
sub
push
add
sbb
outsb
push
or
cmp
inc
cld
incl
or
mov
sub
inc
inc
daa
cmpsb
cli
jg
mov
push
cwtl
sbb
lahf
jbe
decl
xlat
fldenv
lds
or
or
inc
inc
popf
adc
or
cmp
mov
dec
or
popa
mov
mov
jle
insb
push
mov
mov
leave
dec
mov
and
adcb
lds
nop
sbb
cli
incl
push
pop
je
syscall
jecxz
dec
andl
inc
adc
loopne
faddp
xchg
jns
enter
pusha
dec
mov
mov
adc
ljmp
call
insb
sbb
adc
pop
and
jl
mov
aam
test
push
pop
mov
or
push
xor
sub
addb
pop
cmp
jne
ljmp
lret
and
cmp
jg
outsl
add
test
test
push
test
fistl
push
add
cmc
add
cmp
je
sub
jle
adc
jne
clc
xchg
add
xorb
les
pop
mov
pop
add
xor
js
mov
stc
and
aad
lcall
addb
sub
hlt
inc
adc
pop
fucomp
or
cli
lahf
stos
shll
or
fdivrl
call
ret
addr16
out
cmp
mov
xor
in
adc
popa
cmp
icebp
ljmp
add
shl
shr
iret
repnz
mov
test
sub
loop
loopne
out
clc
scas
cmp
add
hlt
adc
aaa
test
call
xor
and
test
shll
xlat
add
std
incl
cs
mov
aam
cmpsb
push
loopne
hlt
sub
bound
pop
xchg
outsl
pop
add
inc
or
dec
test
adc
or
and
pop
scas
push
insl
xchg
lahf
decl
cwtl
imul
xchg
enter
or
mov
and
hlt
adc
sub
aaa
stos
sbb
push
mov
orl
fwait
in
and
push
ret
push
cld
sub
and
cld
movq
cmp
movsb
sbb
outsb
je
cwtl
push
jne
jns
jge
sub
iret
xchg
mov
jl
incl
inc
les
insl
jo
loope
lahf
sbb
pop
mov
adc
mov
mov
lcall
imul
dec
add
push
outsl
lea
ja
test
fisttpll
mov
scas
fldcw
mov
sbb
adc
test
das
test
sbb
int
and
test
jmp
inc
jmp
xchg
sub
insb
add
push
loopne,pn
shrl
push
aam
adc
jnp
sbb
filds
iret
cmp
imul
decl
mov
cwtl
cmp
mov
push
inc
inc
jmp
sub
sbb
jmp
and
pushf
xchg
mov
xor
call
cltd
jbe
mov
fidivs
pushl
adc
jb
xor
or
inc
jae
mov
push
push
dec
mov
or
sub
orb
inc
stos
test
push
outsl
ds
inc
adc
mov
pop
cmc
sbb
rcll
into
push
ja
ficompl
cmc
sahf
xor
mov
jp
lods
mov
jg
arpl
jns
ret
inc
adc
cli
add
push
push
fneni(8087
fists
mov
es
sbbb
out
arpl
dec
or
add
xor
add
std
std
movsb
push
push
enter
sbb
cltd
pop
push
cmc
je
mov
dec
arpl
adc
pop
mov
cld
pop
ljmp
ss
sub
call
jo
inc
sub
inc
mov
add
cmp
sar
aad
add
adc
mov
dec
outsl
fs
pop
xor
popa
jb
mov
dec
popa
or
sbb
dec
jg
and
cmpsl
test
mov
iret
adc
jo
adc
test
ljmp
dec
jl
inc
and
test
dec
inc
push
sar
sar
adc
cmp
out
fcmovnb
fistps
clc
cmp
xchg
inc
outsl
inc
or
add
addr16
dec
jg
decl
adc
outsl
mov
fldenv
adc
sub
es
stc
and
adc
incl
sbb
fisubrs
cwtl
fs
movsb
xchg
cmp
cmp
xchg
mov
call
sti
inc
push
mov
pushf
scas
nop
pop
int3
mov
out
in
push
lret
sbb
pop
cmp
sbb
mov
adc
mov
inc
jae
inc
adc
adc
mov
and
push
aaa
shrl
aaa
icebp
ljmp
xchg
push
mov
cmp
movzwl
and
aam
mov
stos
subb
sub
push
dec
inc
inc
push
push
sbb
xlat
xchg
ja
into
push
mov
insb
icebp
pop
decb
mov
add
inc
test
inc
jae
push
bound
cmp
fadds
add
or
jmp
pop
add
add
inc
mov
inc
dec
add
pop
loopne
lock
out
js
jl
inc
and
aam
mov
inc
sub
mov
arpl
mov
push
jg
hlt
and
repnz
and
dec
test
pushf
mov
in
mov
lret
aam
popf
add
adc
jo
loop
mov
popf
loopne
mov
ljmp
mov
lret
into
mov
jecxz
add
incl
leave
push
roll
jae
sub
icebp
pushf
stc
mov
pop
jg
jg
jnp
icebp
stc
clc
push
cmp
dec
and
inc
std
ljmp
xchg
mov
ret
add
cmp
pop
clc
mov
call
fsubrp
dec
in
lcall
add
push
imul
pop
lret
cmp
push
movsl
ds
push
sub
mov
filds
adc
les
cmp
or
adc
std
pushl
cmp
imul
test
mov
aas
out
inc
pushl
ljmp
pop
dec
add
mov
stos
iret
mov
pop
xor
sub
call
pop
mov
mov
repz
in
repz
xor
push
cwtl
cmpb
lock
mov
add
mov
cld
pop
xor
cmp
cmp
push
cmp
js
bound
push
jg
add
testl
call
incl
bound
sahf
ds
pop
jmp
mov
mov
pusha
data16
hlt
mov
cld
test
test
in
adc
subl
cmp
cltd
aas
sahf
aas
movsb
aas
stos
aas
sarl
aas
loope
stc
push
add
inc
ja
cmp
dec
add
pop
iret
addr16
sar
shld
iret
mov
mov
cmp
loop
dec
mov
push
aas
jb
je
iret
add
dec
imul
cld
outsl
sub
iret
iret
out
fxch
cs
adc
xor
int3
cld
push
and
jbe
mov
fwait
cld
cmpsb
cld
mov
cld
int
sar
fisttpll
js
pop
sbb
cmp
push
cmp
cmp
and
inc
lahf
bound
push
mov
filds
imul
jmp
hlt
repz
pushl
clc
xor
xchg
repz
push
pop
movsb
loope
jmp
shl
out
xor
xor
jl
jle
fsubr
dec
hlt
jle
jle
sbb
sahf
rcl
pop
call
xchg
or
lea
or
cmp
addl
lcall
fdivrl
jecxz
or
cmovle
lea
xchg
xchg
aas
shl
stc
cmp
stc
loope
sbb
cmp
lock
in
mov
aas
mov
cmp
sahf
sahf
out
xor
jge
mov
fstl
in
ljmp
aaa
addr16
rcl
dec
jne
jle
repnz
inc
jbe
cmpsb
lcall
addr16
dec
xchg
jle
mov
mov
pop
fs
cld
sub
outsl
fisubl
subb
fdivp
out
out
stc
mov
cmc
mov
push
scas
adc
mov
cmp
xchg
and
jo
js
sub
xchg
loop
mov
mov
clc
mov
sub
cld
xchg
cld
pop
sarb
sti
cld
jno
aaa
ja
jge
xchg
cmp
incl
in
idivb
das
dec
inc
mov
iret
enter
decl
into
dec
jmp
cmp
lret
ss
insl
insb
repz
fcoml
pop
in
arpl
push
mov
cmp
and
das
xor
sahf
mov
jbe
jle
mov
out
das
mov
out
sbb
jge
push
bound
jp
imul
jo
mov
sbb
add
push
dec
cmp
mov
mov
sub
sbb
fnstsw
iret
test
sar
cmpsb
xchg
lods
mov
inc
rcrl
outsl
push
dec
pushw
dec
dec
add
pop
jl
ljmp
cld
scas
lcall
je
in
mov
inc
add
call
dec
sbb
out
test
fwait
mov
addr16
mov
xor
xchg
aaa
add
mov
daa
inc
cmp
xchg
sbbb
or
insl
loopne
xor
sbb
in
aas
lock
clc
jmp
adc
and
sub
add
aad
incl
cmpsl
add
mov
push
jle
sbb
call
push
sbb
xchg
lahf
mov
daa
dec
pop
sarb
leave
dec
shll
in
mov
jb
je
jbe
cmpsb
sbb
dec
pop
nop
gs
pop
icebp
pop
mov
call
ljmp
cld
addr16
iret
sarl
test
sbbb
inc
add
inc
mov
test
mov
xor
cli
cld
cld
sub
jmp
xor
push
xchg
mov
in
call
lret
jo
dec
in
lock
pop
jge
fnclex
or
sbb
jo
mov
enter
xlat
xor
loope
call
js
std
fildll
mov
mov
jbe
js
jp
jl
mov
jle
jle
adc
ljmp
je
imul
mov
cmpl
xchg
je
test
cmp
add
jg
adc
inc
js
aas
xchg
jle
movsb
enter
imul
mov
pop
add
lahf
frstor
inc
sbb
pop
outsb
cld
add
scas
or
xor
jg
out
insb
orb
mov
into
cmp
sub
clc
lahf
sti
xchg
inc
xorl
shll
inc
es
inc
pushl
jmp
add
ds
call
mov
pop
dec
cmp
sbb
fisttpll
idivl
jmp
or
cmp
jmp
or
mov
daa
clc
lods
inc
ror
jg
cli
push
jl
jmp
cmp
sub
les
dec
fcoms
or
aaa
cmp
inc
fnstenv
lods
and
loopne
arpl
mov
mov
movsl
mov
outsb
mov
mov
lahf
pop
pop
sbbb
inc
mov
les
pop
icebp
jg
sbb
inc
daa
dec
inc
mov
mov
ljmp
sarl
xor
test
test
int3
jp
jl
jle
aaa
sbb
adc
push
mov
jle
jle
sbb
xor
std
out
jns
ret
sub
repnz
sub
fidivrl
in
add
nop
jmp
push
out
jp
jl
jle
stos
jle
pop
push
push
xchg
ljmp
mov
int
xchg
sbb
div
aaa
push
inc
jo
out
mov
or
mov
mov
mov
cmc
adc
out
ret
rcrl
flds
pop
inc
insb
addr16
jnp
xchg
popf
adc
clc
mov
adc
xor
dec
subb
adc
fwait
movsl
xor
rcrl
push
inc
dec
push
push
dec
daa
in
iret
addb
mov
iret
mov
mov
mov
out
xor
dec
insb
loopne
xor
divb
ss
add
cld
lods
iret
shll
icebp
sub
sbb
cmp
add
or
or
pop
call
push
addr16
js
jle
sub
push
pop
fistps
es
pop
cmpsl
xchg
mov
fistpll
dec
in
call
jl
adcb
xchg
fadds
add
or
adc
repz
movsl
and
sbb
or
xchg
add
pop
xchg
lea
sub
lahf
test
lods
gs
mov
pop
ss
aaa
push
or
fsts
testb
rorb
call
in
jno
and
arpl
cmp
in
ljmp
das
xor
addr16
loopne
mov
iret
repnz
jmp
cld
in
in
stc
hlt
cli
adc
ljmp
mov
dec
cmp
adc
push
stc
cmp
ss
sti
mov
pushf
sti
subb
mov
cld
filds
jl
fld
shlb
and
push
and
sbb
bound
ljmp
hlt
mov
adcl
xchg
js
cwtl
roll
out
push
in
jg
loop
pop
mov
add
int3
leave
js
hlt
dec
idivl
jnp
int3
inc
shlb
xchg
cmpsl
data16
inc
test
call
and
sub
out
push
cmp
inc
stc
inc
xor
push
shlb
inc
nop
xlat
stos
mov
repz
push
movsb
lret
inc
iret
and
push
movsb
lods
ret
jecxz
adc
cmp
mov
lock
mov
add
enter
roll
inc
mov
int
fmuls
lds
inc
movsl
imul
and
enter
sub
jns
mov
and
pop
lds
ror
cs
and
dec
mov
or
pop
adc
add
sub
or
sbb
mov
mov
xchg
fmuls
sbb
or
jp
cmp
lods
rcrb
adc
xchg
lret
das
nop
into
ret
nop
or
sbb
aad
inc
aad
adc
xor
mov
add
test
cmp
test
fs
arpl
xor
int
xor
adc
push
subl
xchg
scas
and
nop
in
sbb
and
fwait
in
cmpsl
inc
mov
sbb
push
adc
sub
mov
aam
in
pop
flds
outsl
jb
cmp
and
push
sbb
jnp
or
sbb
adc
or
push
sbb
in
in
mov
lret
and
sub
rcrb
or
fsubs
in
hlt
adc
sub
mov
jbe
dec
ret
mov
sub
push
ret
fs
iret
jns
in
addl
xchg
push
fists
and
cmp
lods
or
les
addb
sbbb
mov
push
movsl
sbb
adc
mov
fwait
inc
or
lret
push
sbb
cmp
mov
sbb
cmp
ja
add
dec
leave
js
mov
push
xchg
mov
ret
adc
je
fists
sbb
rolb
and
add
das
inc
shlb
aaa
bound
flds
mov
add
jne
cmpsb
push
jmp
sbb
push
add
jb
jae
sub
or
data16
jb
movsb
adc
cmc
popa
sub
sub
add
int3
fisttpll
scas
mov
andb
les
or
push
or
clc
add
fildl
or
mov
or
daa
outsl
xchg
sar
and
hlt
ret
jae
mov
sub
sbb
xchg
aam
scas
lea
adc
sub
imul
adc
outsb
mov
mov
adc
dec
sahf
pusha
sbb
ljmp
popa
add
and
test
pop
pop
push
inc
sti
xchg
or
lea
sbb
ret
aas
jnp
pop
pop
lcall
jbe
sub
adc
add
mov
test
test
jp
jge
insb
scas
cmp
pop
aaa
or
movsb
jnp
imul
or
dec
leave
jg
add
fucomi
out
pushf
lret
mov
sti
adc
xchg
xlat
and
out
xor
jg
xor
lahf
or
repz
gs
clc
adc
inc
dec
test
repz
nop
adc
orb
je
aad
pop
mov
sub
push
enter
cmpsb
sub
mov
andl
aaa
add
add
inc
jns
and
fildl
int3
jne
xchg
mov
and
pop
or
dec
je
adc
push
scas
pop
in
inc
pop
fwait
adc
sub
adc
and
add
push
mov
push
dec
je
adc
xor
fdivs
cli
adc
rcrb
push
sub
cli
push
pop
test
xchg
nop
xor
mov
pop
or
pop
mov
aas
adc
popa
popa
adc
in
inc
dec
jo
add
cmpl
mov
rclb
push
pushf
fnstenv
test
shlb
leave
js
pop
nop
mov
lahf
inc
xchg
inc
outsb
xchg
inc
xchg
dec
in
mov
out
pop
add
scas
sub
dec
add
mov
sahf
or
je
mov
fwait
inc
jbe
sub
cltd
adc
push
mov
xchg
ret
sbb
push
fs
xor
cmp
leave
data16
xor
pusha
pop
inc
dec
xchg
loopne
add
adc
add
fstl
es
add
xchg
insb
lods
mov
mov
jne
fcoms
call
mov
fldenv
mov
and
push
fcomip
cmp
pusha
fcompl
mov
sti
test
test
fmul
lahf
push
jbe
pusha
andb
rcll
je
icebp
dec
pushf
cs
mov
inc
xor
pop
faddl
or
pop
mov
jge
pop
insb
inc
sbb
push
and
sub
scas
mov
xchg
outsl
inc
dec
or
sbb
sbb
fs
xchg
xchg
les
push
loope
sbbb
xor
ds
dec
mov
nop
mov
inc
int
lea
stc
test
or
subb
lea
sbb
or
pop
call
out
js
and
jg
add
push
loopne
xchg
fucomi
mov
mov
xchg
in
iret
jecxz
dec
cmp
repz
adc
adc
lret
add
sbb
je
loope
add
in
mov
aaa
xchg
pop
inc
or
mov
enter
sbb
fwait
pop
dec
popf
call
or
repnz
aaa
xchg
sahf
xlat
inc
xchg
lea
jge
das
fsubrp
add
adc
push
jge
inc
pop
subb
js
or
push
flds
loope
in
jb
mov
mov
fistpll
testb
or
leave
dec
ja
adc
mov
mov
enter
scas
ds
cmp
mov
imul
dec
mov
jmp
adc
jmp
fiaddl
enter
ss
inc
push
inc
add
adc
lret
stc
inc
ljmp
add
xorb
insl
fcompl
pop
add
adc
dec
scas
mov
dec
adc
and
pop
fldenv
lock
jl
sub
and
mov
mov
sahf
mov
mov
sahf
scas
nop
arpl
add
adc
mov
sub
test
add
jbe
adc
xchg
push
cs
das
cmp
out
jmp
rcll
cli
or
jne
pushf
lret
or
pushf
xchg
cmp
popf
adc
insb
lods
lret
add
rolb
lea
clc
nop
sub
fadds
cmp
or
mov
cmp
pop
inc
push
lret
test
addr16
and
or
cs
das
push
pop
cmp
and
pop
xchg
aam
add
js
pushf
icebp
jecxz
fisubrl
xor
jge
and
jl
mov
idiv
call
push
test
and
adc
xchg
call
or
daa
inc
mov
jno
das
out
jbe
dec
mov
push
mov
es
js
insb
dec
push
imul
sbb
xor
inc
lods
mov
xchg
cmpsb
push
jns
rclb
inc
out
and
std
inc
sbb
add
pop
jbe
mov
sbb
fldenv
daa
mov
enter
or
jbe
arpl
add
mov
pop
xchg
jno
in
mov
sub
lods
cmc
lret
add
dec
mov
pop
cmp
loopne
fildl
push
and
fldl
push
or
enter
pop
pop
xchg
xchg
loop
movsl
jb
rcll
push
xchg
or
pusha
popa
dec
mov
sub
push
dec
push
add
mov
and
clc
sub
mov
std
invd
aam
adc
pop
hlt
inc
xchg
push
movb
dec
repnz
lds
or
jb
ret
lcall
or
fiaddl
sbb
jmp
testb
cmp
or
outsb
jge
pop
cltd
cmp
push
nop
test
xor
mov
xorl
mov
mov
jl
repnz
leave
adc
mov
inc
pavgw
push
mov
into
ret
push
jo
aam
arpl
add
pop
push
inc
lock
out
inc
dec
test
inc
js
ja
add
ret
adc
das
fwait
repnz
xchg
push
fidivs
sbbl
stos
adc
call
or
mov
add
xchg
adc
adc
push
or
scas
adc
jno
rol
or
pop
push
pop
jbe
daa
mov
int3
or
cltd
inc
xlat
fcmovnb
add
mov
nop
aam
aaa
shll
rcll
pusha
dec
loop
sbb
outsl
push
imul
xchg
in
add
aam
and
mov
inc
stos
adc
or
push
lea
icebp
xchg
add
lods
arpl
or
sub
insl
jg
ds
or
jne
mov
xor
lret
stc
out
sub
rclb
adc
test
imul
sub
dec
fldt
mov
xor
fistpl
mov
jb
rolb
mov
inc
ret
je
mov
push
mov
test
push
mov
pusha
push
xchg
mov
cs
or
and
enter
adc
test
das
sub
mov
cmc
pop
xor
rclb
or
stc
ljmp
subl
imul
dec
scas
popa
js
jl
xchg
incl
daa
les
xchg
pop
or
add
aam
push
insl
push
call
imul
arpl
mov
out
leave
mov
mov
jno
negb
sbb
ljmp
pop
dec
enter
cmp
pusha
lcall
test
and
sbb
cmpsl
imul
xchg
sbb
and
adc
movb
pop
mov
sbb
push
ret
xchg
inc
fcomps
out
inc
enter
xchg
cmp
xchg
shrb
push
mov
inc
ret
xor
loopne
imull
inc
cmp
jmp
dec
sub
sahf
cwtl
dec
xchg
cwtl
jno
cmpsb
dec
dec
and
push
divw
cmp
mov
int3
fucom
sub
in
loope
mov
mov
test
mov
xor
enter
shlb
cmp
rorb
dec
lea
lahf
xchg
sub
pop
es
das
pop
push
lods
mov
sbb
sub
loopne
mov
enter
ds
xchg
or
cmp
testb
or
pop
xchg
cs
mov
outsb
ret
out
into
repnz
and
les
and
mov
add
test
xchg
add
adc
sub
ret
cltd
dec
lcall
add
or
jle
sbb
or
div
movsl
xchg
mov
mov
jo
mov
je
sbb
insl
sub
mov
sub
je
sub
push
mov
into
cmpsb
dec
mov
push
in
sub
dec
mov
jmp
or
iret
mov
es
mov
dec
repz
xor
fstpl
inc
sbb
rcrb
xor
aas
in
mov
sub
xchg
in
mov
movsb
sbb
xchg
clc
sbb
aam
imul
xchg
lds
out
mov
inc
xchg
fisttpll
ds
inc
xor
jo
test
and
jae
test
test
inc
adc
jmp
push
push
rolb
fstpt
sbb
pushf
jb,pn
unpckhps
popl
jmp
mov
int3
xchg
jno
or
jle
std
pop
or
sub
bound
lock
pop
xor
mov
lret
lret
outsb
mov
mov
fs
or
mov
ljmp
icebp
cmpsl
or
clc
es
cmp
inc
sbb
pushf
xor
mov
jp
inc
pop
aad
xor
jmp
lods
clc
fcmovu
inc
aaa
push
rcr
in
mov
addr16
addb
sub
xchg
int
sub
add
dec
mov
into
adc
shlb
pop
sahf
pop
pop
cmpsl
insb
xor
pop
imul
daa
aas
mov
repnz
test
xchg
dec
aam
rorl
rcrb
and
and
sti
ljmp
sbb
mov
pop
and
inc
je
call
inc
add
xchg
sub
je
sbb
dec
test
jb
pop
jle
sbb
xor
xor
mov
add
or
inc
push
movsb
fisubrl
mov
lock
gs
mov
mov
sbb
subb
stos
xchg
lds
outsl
adc
addl
push
and
ret
test
jo
inc
enter
test
shld
inc
push
push
out
jmp
clc
ret
push
insl
jecxz
sbb
test
lods
in
stos
pusha
lods
xchg
push
xor
add
adc
dec
ja
or
clc
out
iret
pop
pop
lock
loop
add
aam
pushf
xchg
fucomip
in
push
or
movsl
stos
addr16
add
mov
xor
sbb
or
mov
lea
aam
data16
es
lahf
jl
cld
dec
hlt
cmpsb
push
pop
outsb
loopne
out
xchg
mov
adc
inc
cmc
lds
insb
push
push
lock
cmp
pop
sahf
push
enter
stos
cmc
dec
test
add
xor
loopne
lds
jg
cltd
loope
pop
push
jmp
xor
and
sbb
push
fldl
leave
mov
or
fiadds
add
xchg
fisubl
dec
jmp
movsl
and
cld
lret
mov
dec
mov
sbb
leave
ret
gs
xchg
dec
dec
hlt
push
or
in
jno
lea
sbb
in
pop
loope
addl
repz
out
loop
pop
gs
push
sub
inc
seto
cltd
add
andb
enter
test
mov
outsl
dec
rorb
mov
mov
pop
and
orb
enter
mov
inc
mov
cld
leave
je
mov
mov
jg
or
hlt
or
ret
jg
enter
xchg
pusha
sub
movsl
ret
add
out
or
cmpsl
adc
adc
add
ret
ljmp
je
popf
sbb
pop
add
push
xorl
inc
pop
add
push
jo
push
sub
mov
setnp
ljmp
jg
cmp
mov
or
dec
push
hlt
movsb
loop
push
mov
hlt
mov
add
inc
lods
mov
inc
daa
ljmp
cmp
adc
int3
ljmp
daa
dec
in
cmp
adc
cwtl
jo
adc
and
pop
jg
push
repz
pop
jo
cmp
lret
dec
mov
rorl
xor
ljmp
adc
xlat
cld
test
inc
xchg
xor
negb
jge
push
push
jnp
negb
test
and
sub
pop
sbb
dec
cs
adc
push
decb
cmp
dec
adc
test
test
cld
xor
cmp
movl
lock
and
pop
iret
ja
js
cmpsl
push
mov
xchg
fs
je
cmc
sbb
mull
clc
mov
cmpsb
nop
sub
jns
adc
nop
or
and
pushf
stos
negl
push
aaa
sbbb
push
int3
or
divl
cmpsb
adc
cmc
test
jnp
dec
dec
dec
xor
dec
loopne
gs
mov
push
push
outsl
aad
jnp
jp,pt
push
stc
mov
mov
push
mov
cmpsb
mov
fsubr
mov
mov
push
mov
pushl
fcoml
cmpl
or
xchg
sbb
std
xor
adc
sub
adc
leave
mov
cmp
or
cld
dec
in
fs
hlt
dec
insb
repz
pop
inc
mov
pop
jg
adc
addb
into
or
sbb
xor
add
sbb
jmp
fbstp
movsb
cmp
mov
push
mov
aaa
pop
mov
outsb
push
das
or
or
popa
mov
mov
mov
ljmp
mov
lahf
xchg
cmp
jo
push
jb
or
cltd
movsb
adc
dec
call
and
cmp
cmpsb
mov
mov
test
insb
leave
sbb
cld
add
mov
nop
clc
push
arpl
sarl
sub
fdiv
mov
sbb
push
or
and
es
cli
cld
hlt
mov
and
stos
and
adc
pusha
adc
sub
aaa
xchg
stc
psrlw
pusha
cmc
jnp
testb
das
fsub
popa
test
and
bound
mov
aas
rcll
or
xor
ss
dec
js
les
mov
push
movsl
cmpl
add
jp
mov
imul
adc
sbb
mov
push
fstl
loope
mov
or
loopne
pop
sub
sub
push
and
punpcklbw
sbb
scas
insl
fsubs
adc
push
pop
movsb
push
lcall
push
adc
in
repnz
push
mov
imul
jbe
push
repz
fsubrl
je
loope
ja
pop
push
fldt
imul
xchg
cmp
pop
imul
sub
stos
jecxz
lret
pusha
jns
xor
jge
xchg
ficoms
xchg
push
sbb
shll
xchg
mov
pop
sbb
mov
adc
insl
sbb
or
call
push
push
loop
xchg
mov
and
pop
sub
data16
mov
cltd
cli
adc
or
movsl
push
xor
aas
test
mov
jb
jno
push
push
hlt
inc
ret
daa
xchg
adc
repz
sbb
test
dec
sahf
lods
leave
push
dec
pop
or
orl
cmpsb
or
adcb
jp
adcb
sbb
jl
dec
lret
fsubl
test
inc
dec
insl
inc
push
clc
sbb
mulb
dec
out
shlb
icebp
xor
lret
and
jmp
add
loopne
cld
or
dec
pop
lea
inc
js
xor
jmp
rorb
clc
call
mov
xlat
xor
jno
fstpt
call
pusha
mov
std
inc
lcall
nop
mov
dec
xchg
sbb
mov
into
sbb
je
cmp
pop
popl
mov
push
dec
lock
jb
xchg
int
les
and
stc
fs
inc
push
repz
push
clc
and
dec
sar
xchg
sti
or
int
vmovdqa
cmp
ds
test
mov
inc
mov
jbe
and
xor
popf
fs
popa
mov
xchg
mov
jmp
stc
movhps
jo
aaa
jg
push
sbb
jl
dec
in
mov
movsl
xchg
sbb
pop
sbb
mov
dec
idiv
sbb
rclb
push
cwtl
sbbb
je
pop
dec
xchg
mov
out
xor
orl
lock
or
pop
mov
pop
nop
jmp
int
dec
or
jne
mov
cmp
pop
push
push
mov
cld
inc
add
mov
add
enter
ljmp
inc
jmp
movsb
cmp
add
sbb
adcl
pop
cli
lods
cmpl
stos
or
pop
outsb
ja
mov
mov
mov
sbb
add
je
pop
nop
mov
pop
inc
test
push
inc
mov
insl
mov
and
dec
shlb
aam
das
push
mov
or
push
xchg
mov
jle
inc
hlt
inc
or
pop
in
add
inc
in
or
push
sarb
add
call
cmp
repz
imul
mov
inc
incl
pop
inc
sub
call
cmp
and
call
and
setge
stos
inc
jecxz
jmp
clc
addr16
out
jne
pop
push
mov
lods
dec
pop
mov
repz
movsb
add
sub
cltd
cmp
in
popa
or
sbb
xor
sbb
or
hlt
cmp
or
nop
ljmp
scas
fsubs
xor
add
das
inc
add
add
mov
pop
add
xor
jmp
bound
inc
lds
cmpsb
dec
mov
jns
ja
add
out
jle
ss
dec
xor
add
add
ljmp
mov
call
mov
push
add
add
push
arpl
sti
inc
and
add
out
dec
push
cld
imul
push
imul
popa
sub
or
add
xor
incl
rolb
add
xor
mov
dec
inc
pop
neg
in
mov
shlb
ljmp
xlat
std
push
stc
ds
add
mov
add
add
inc
idiv
fists
add
aas
sldt
pop
outsb
or
mov
iret
aaa
push
pop
dec
mov
popa
dec
jbe
jge
jmp
jnp
inc
add
mov
push
sub
add
mov
mov
mov
dec
or
out
jecxz
aas
adc
mov
and
mov
repnz
fwait
push
mov
ret
jp
push
ret
mov
test
icebp
icebp
sbb
aas
shlb
dec
jb
lret
xor
sub
push
adc
dec
and
adc
push
sarb
adc
cmp
xchg
inc
jmp
mov
mov
and
xor
cmp
mov
mov
and
mov
mov
xchg
xlat
and
sbb
sahf
adc
lahf
add
jo
add
mov
push
rcr
jne
pop
mov
dec
mov
cmc
or
shrl
jnp
cmp
pcmpeqw
add
dec
sub
outsb
xchg
lahf
js
loop
xor
loop
pop
lods
adc
inc
add
and
js
dec
push
mov
sbb
mov
cmp
pop
lods
or
stc
aas
xor
mov
sbb
and
or
repz
cmp
test
xchg
mov
cltd
dec
mov
or
push
mov
mov
mov
pop
mov
push
pusha
cmp
cld
daa
jnp
jne
call
xor
jmp
ds
repz
adc
add
mov
or
push
fldl
lods
leave
and
lret
call
mov
cmp
fimuls
loop
jge
inc
loope
call
mov
lcall
inc
adc
push
push
popf
iret
and
lcall
push
mov
push
xor
add
cmp
fdivrs
pop
lock
mov
cli
std
jmp
lock
mov
sbb
pop
jl
lods
cli
sub
jp
adc
fs
sbb
stos
cmp
cli
fs
sub
lret
inc
dec
test
pop
add
out
xor
ret
into
and
insl
ficomps
imul
clc
fs
dec
inc
sub
dec
rorb
dec
inc
leave
pop
mov
xchg
mov
ss
add
dec
and
pop
xchg
mov
test
shrl
mov
or
mov
mov
xchg
arpl
mov
xchg
inc
and
sub
push
adc
or
and
fcmovne
cmp
or
or
loop
mov
dec
jo
jg
sbb
add
dec
or
inc
xor
and
movsb
jecxz
and
push
lahf
and
xchg
fwait
aaa
dec
rolb
inc
ja
pop
std
daa
jne
sub
sbb
aas
in
test
push
xlat
mov
stos
sub
push
cmpsb
cmp
sub
pushf
push
xor
jle
xchg
clc
stos
push
jg
xor
repz
test
xchg
add
xlat
or
pop
pop
fs
inc
enter
mov
add
inc
jl
dec
sahf
test
push
sbb
orb
into
adcb
loopne
sub
xor
and
xchg
lock
lock
xchg
iret
lea
pusha
xchg
imulb
xchg
push
add
into
incl
xchg
mov
mov
dec
adc
test
or
xchg
shll
mov
add
inc
pop
pop
jge
fldl
add
xchg
in
xchg
repnz
and
jg
mov
push
in
dec
dec
adc
lahf
lahf
sbb
cmp
xchg
roll
pusha
mov
cs
cwtl
int
dec
jne
and
test
or
cmp
or
mov
imul
lret
xor
push
mov
lret
inc
ror
movsl
rclb
pop
shll
mov
push
pavgw
mov
sbb
and
cmp
xor
sbb
pop
add
nop
in
sbb
unpcklps
fcoml
es
inc
dec
pop
push
xor
mov
mov
rolb
adc
or
xchg
fistpl
das
sub
sub
xor
orl
jle
lcall
enter
fs
incb
adc
cmp
adc
push
add
out
xchg
test
adc
inc
mov
xchg
test
mov
jge
pop
inc
jae
arpl
cmp
test
dec
jne
lods
aad
fisubrs
or
shlb
pop
out
test
pushl
das
mov
pop
hlt
adc
and
add
cmpsl
outsl
lock
and
popa
adc
daa
push
js
inc
jbe
cs
ds
cmp
bound
mov
jno
mov
loope
and
xor
mov
or
movsb
push
lds
in
loopne
idiv
mov
push
dec
xor
cmc
punpckhwd
bound
sub
xor
add
xor
jae
rorb
stos
cmp
mov
adc
pushf
cwtl
div
sahf
mov
mov
ret
call
or
cli
gs
jmp
mov
sti
push
aam
clc
into
inc
mov
mov
xchg
jmp
std
mov
pushf
push
pop
dec
lret
stc
sbb
push
sub
cmp
sub
and
adc
mov
adc
adc
inc
add
test
cld
jg
stc
cmpb
pop
dec
jbe
lock
pusha
lcall
and
and
loope
mov
or
loopne
mov
or
cmc
in
adc
ss
xor
sub
add
mov
and
stos
push
jne
dec
sar
hlt
jle
xchg
inc
or
ficomps
movsb
jbe
das
and
lods
cmp
xor
je
decl
add
js
lds
cmp
addr16
icebp
pop
pusha
incl
sahf
pushf
testb
jo
adc
inc
bound
mov
repnz
out
das
or
xchg
sbb
les
decl
mov
out
adc
cmp
push
frstor
mov
dec
xchg
sbb
mov
mov
add
jbe
push
lods
in
cld
mov
jb
pop
pop
divb
cmp
pop
gs
jne
jp
add
lahf
cmp
push
and
or
or
cmc
lret
stos
dec
jle
call
mov
aas
shll
sbb
test
fs
test
xorl
jo
in
pop
ds
xchg
sub
jbe
sub
roll
popa
cmp
dec
xor
pop
stc
mov
cmp
cld
cs
daa
aam
shll
push
repnz
aad
jl
lcall
rcl
xchg
push
xor
jo
out
call
pop
cmp
pop
roll
icebp
jb
mov
inc
les
add
call
adc
int
xlat
adc
xlat
mov
push
aam
push
push
or
fcom
ret
fcompl
jns
jl
aam
mov
jg
fdivr
in
pop
sub
sub
fists
in
push
divb
int3
fldl
or
movd
xchg
sbb
mulb
jge
arpl
push
push
popf
or
out
cmp
out
into
adc
or
or
mov
sub
mov
push
adc
dec
lcall
fistl
movb
lcall
add
movsb
cmp
or
lcall
or
mov
jge
data16
jmp
dec
outsl
nop
or
imul
inc
icebp
xor
mov
aad
push
insl
xchg
loope
pop
push
repz
es
dec
cs
aam
mov
cmpsl
int
in
sbb
clc
push
push
xor
xchg
sbb
movsl
popa
cs
rcrb
xlat
repnz
fisttpll
shrl
loopne
je
frstor
dec
in
dec
jae
pushf
ffree
fdiv
leave
and
fcompp
or
dec
ja
or
fucomi
sub
sbbb
aam
lds
and
jge
sarb
leave
cld
out
negb
and
mov
incl
repnz
jbe
and
sbb
addr16
sbb
sahf
push
lcall
mov
fdivr
repz
cld
in
int3
or
lods
xchg
xchg
and
out
fsubrl
sbb
mov
call
push
dec
sbb
loopne
adc
xchg
aam
fadd
cmp
push
ret
mov
call
inc
shr
xlat
ret
jp
mov
std
jl
jge
pushf
lods
mov
incl
std
lahf
loopne
pusha
jg
or
and
mov
jle
or
or
mov
mov
popf
pop
dec
orb
sbb
xchg
pmulhuw
stc
pop
lds
jge
push
sbb
and
into
adc
mov
jo
jle
adc
cmp
movsl
jns
pop
pusha
pop
loopne
xchg
mov
mov
test
clc
aas
push
mov
lret
fsubs
mov
sbb
cs
icebp
stc
in
xchg
dec
stc
mov
cs
shrb
sbb
iret
mov
dec
ja
or
cwtl
lcall
shrl
dec
dec
lcall
xchg
out
mov
adc
dec
sbb
repz
enter
dec
lret
adc
xor
xchg
xchg
out
cli
hlt
testl
insl
hlt
icebp
lock
cs
repnz
std
imul
and
shrb
sbb
push
push
loope
scas
push
loopne
ljmp
ffree
push
shlb
jle
fstl
push
jne
lcall
pusha
fsubs
loopne
sbb
push
jl
push
xor
inc
outsl
push
push
xchg
sub
xor
push
leave
push
jbe
xchg
imul
insl
loopne
lret
popa
adc
test
outsl
outsb
sti
out
aad
jbe
jno
xor
in
xchg
add
jne
clc
dec
popf
add
cmp
inc
in
cli
xchg
rorb
dec
mov
mov
dec
mov
or
ret
pop
out
sti
jno
jge
sbb
jno
enter
adc
imul
jp,pt
push
outsb
fistpl
test
pop
jns
pop
dec
mov
mov
aas
lahf
or
inc
lcall
inc
idivl
mov
jge
inc
loopne
adc
int
shrb
sahf
loope
push
jle
mov
test
add
out
jae
negb
pop
cmp
fdivl
ficoms
ja
mov
cmpsl
pop
or
gs
test
sub
mov
popa
jge
enter
into
lea
sbb
dec
ds
testb
fcomps
ret
sahf
push
mov
mov
mov
aam
dec
fcoms
push
or
and
rcl
cmp
data16
xor
jo
jno
push
faddp
adc
in
out
push
insl
xchg
pop
andl
out
into
sahf
dec
push
int3
out
cmp
dec
into
ds
jno
mov
mov
ffree
lret
xchg
push
lds
jns
sub
inc
fdivrl
icebp
lea
fsubs
aas
sub
or
inc
jns
mov
fnstenv
fists
idivb
les
and
push
cltd
xchg
inc
mov
jge
test
popf
adc
call
push
push
mov
pop
outsl
insb
test
inc
xchg
ljmp
adc
ret
pop
dec
xchg
and
mov
fnstsw
mov
sbb
xchg
imul
aad
into
pop
push
xlat
push
test
aad
and
jge
push
ss
test
adc
cltd
cmp
cld
fs
push
loopne
mov
xor
stc
clc
enter
mov
mov
mov
sbb
dec
sahf
xchg
popa
outsb
rorl
sti
xchg
in
xor
push
pop
pop
cltd
adc
sub
pop
sub
adc
in
in
push
imulb
dec
jmp
loope
add
inc
ljmp
mov
outsl
add
and
jge
ja
nop
jge
out
or
arpl
or
cltd
or
test
pusha
sub
sarb
push
outsl
cmp
loopne
push
rcrb
aad
dec
pushf
push
mov
cltd
push
imul
push
pop
or
cltd
xor
inc
xlat
jne
dec
mov
push
cmpsb
mov
scas
movsb
or
test
push
out
xchg
call
test
add
mov
push
inc
dec
cltd
int
xor
jecxz
fstpl
cltd
loope
int3
mov
arpl
es
or
dec
xchg
add
mov
insl
repz
push
repz
cltd
bound
imul
scas
pop
xchg
andb
sub
sub
insl
xchg
in
xchg
popf
loop
lock
out
pop
cmp
cltd
push
mov
cltd
or
mov
rorl
in
sbb
dec
mov
add
jle
push
mov
push
and
test
sbb
repz
push
adcb
push
push
movsl
add
outsl
pop
clc
push
xchg
loopne
lods
sbb
mov
in
in
jmp
xchg
inc
jl
mov
repz
loop
push
jne
adc
mul
ret
ss
insl
in
scas
mov
test
xlat
lea
arpl
dec
in
pop
xchg
rcl
fildll
fimuls
jle
cmp
inc
jno
cltd
cmp
adc
insl
jp
push
cltd
loopne
mov
mov
outsl
mov
ficoml
xchg
fidivs
aaa
xchg
jb
es
adc
mov
fucom
lods
fwait
xor
and
pushf
jg
xchg
pushl
sbb
inc
pusha
xchg
mov
fs
jae
xor
pop
mov
cmp
mov
aad
shrb
lea
pop
mov
sub
mov
sbb
aad
dec
push
enter
fmuls
lea
popf
xor
ss
or
adc
jns
jo
shlb
push
pop
orl
in
inc
jge
hlt
fcomp
insb
daa
aas
sbb
push
ja
fisubrs
or
sbb
loope
fs
fistpl
xchg
adc
jg
aas
cmc
outsb
fwait
pushf
imul
add
pop
xor
es
jge
out
imul
gs
push
dec
test
push
pop
fsubrl
je
mov
and
push
sbb
fldt
pop
jle
in
je
add
xor
cmp
inc
jge
adc
xchg
push
mov
mov
popf
gs
xchg
in
and
clc
test
call
jo
adc
jmp
xlat
lea
adc
xchg
or
jae
ret
or
adc
lcall
inc
xchg
cwtl
add
adc
jo
out
push
jbe
add
mov
dec
jge
sub
jg
gs
pusha
daa
mov
sbb
outsl
lcall
or
int
push
push
gs
jge
cmpsb
jg
fmuls
shlb
int
sub
adc
adc
mov
xor
cs
imul
leave
sub
or
or
mov
adc
nop
push
add
add
lret
or
adc
push
add
popa
add
add
ljmp
ja
outsb
add
add
jb
gs
out
add
addl
push
add
imul
xlat
mov
dec
or
jae
scas
mov
gs
or
jne
popa
fdiv
int3
negl
pop
cmp
xor
xlat
jge
fsubrs
pop
adc
mov
leave
orl
popa
mov
adc
test
inc
sub
jb
ret
popf
outsl
out
inc
jae
add
xchg
push
scas
aad
or
jbe
sti
scas
jmp
xor
jb
add
sub
fadds
jo
pop
fs
popa
adc
daa
jnp
inc
mov
je
jg
mov
mov
sbb
lret
bound
fcomps
jne,pt
pop
jmp
cmp
lea
jno
or
dec
cmp
mov
push
dec
mull
insl
movsl
nop
scas
cmp
mov
mov
dec
inc
arpl
insb
sub
sbb
or
decl
popa
out
push
pop
add
dec
mov
jge
outsb
and
loope
adc
fldl
es
mov
js
sub
adc
mov
or
sub
dec
mov
fucom
lcall
insl
xchg
jnp
arpl
inc
jge
jg
xchg
mov
dec
jae
add
xor
es
jae
js
stc
bound
pop
mov
xor
ja
sbbl
xlat
orl
add
xor
push
insb
sbb
push
into
add
push
pop
add
in
sub
orl
cmp
sbb
pop
inc
cmp
xchg
mov
insb
mov
sub
ret
imul
or
adc
cmpl
adc
push
cmp
inc
dec
sbb
fucomp
or
and
lods
lahf
add
hlt
addr16
push
arpl
add
shlb
out
jg
xchg
lods
sti
push
pop
sbb
jb
add
and
inc
jne
dec
stos
jne
cmpsl
aaa
leave
or
inc
dec
imul
pop
sar
jnp
popa
out
jo
fisttps
insb
es
test
in
adc
test
jo
push
into
mov
xorl
in
jg
inc
xor
pop
jnp
xorps
negb
je
fbld
es
jp
jae
pop
outsb
sarl
out
sbb
or
repz
fwait
or
cmpl
xorb
xchg
dec
mov
fimuls
mov
lds
mov
push
push
xchg
out
jmp
mov
mov
mov
jo
pop
je
push
sbb
adc
jae
inc
dec
xor
stc
mov
in
cmc
lds
mov
jnp
leave
jae
mov
xor
pushf
or
push
imul
insl
cmp
dec
xchg
xchg
push
dec
inc
jge
stc
out
jo
cli
xor
rcrl
mov
pop
popa
push
sub
dec
imul
sbb
sub
sbbb
in
test
sub
or
and
dec
mov
pushf
adc
inc
mov
sub
jg
jecxz
adc
push
es
mul
push
insl
pop
adc
lds
ja
mov
gs
outsl
adc
out
dec
loopne
and
aad
push
je
and
pop
adc
gs
shll
adc
mov
sub
lcall
sbb
jae
popa
pop
pop
fwait
fs
jecxz
pusha
push
mov
inc
push
int
jnp
fdiv
or
or
add
inc
cmpsl
inc
jge
xchg
leave
lds
aas
add
lret
dec
and
jmp
dec
and
adc
mov
cmc
mov
inc
xor
dec
imul
addr16
inc
clc
cwtl
shrl
imul
out
ja
cmp
jne
sub
popa
lds
pusha
cmp
lea
sbb
dec
sbb
in
mov
inc
daa
lahf
jne
outsb
sub
imul
adc
cmp
inc
aad
sbb
loope
jecxz
leave
adc
mov
gs
xchg
pop
pop
lds
mov
inc
sub
pop
sbb
arpl
inc
xchg
dec
jo
xor
push
iret
add
into
cmp
add
imul
cltd
sbb
adc
pop
cmp
insl
jge
add
rclb
in
sub
mov
repz
pushf
and
pop
and
mov
dec
mov
shrl
ja
push
add
fcompl
das
dec
popa
fldcw
mov
in
or
jne
ret
stos
add
popa
add
jmp
mov
adc
push
and
vpshufd
pop
adc
and
iret
or
mov
dec
push
adc
or
sbb
insl
sbb
insl
addr16
sbb
push
mov
push
loope
jg
lea
fmuls
popa
inc
sub
bound
das
popa
stc
or
shr
popa
fsubs
dec
push
cmpsl
dec
in
dec
sbb
sti
xor
movsb
push
or
cmc
xor
adc
subl
add
push
jno
and
jno
in
fisubs
mov
idivl
and
jne
ret
arpl
das
mov
dec
fnstenv
xchg
inc
sarl
cmp
push
and
sbb
cmp
cmp
add
xor
bound
pop
push
sbb
lods
xchg
arpl
insb
xlat
nop
movsb
sbb
lods
jb
adc
jmp
ja
leave
push
arpl
mov
cmp
xchg
lods
aaa
add
popa
test
lcall
int
and
mov
add
daa
int3
shrb
sbb
push
insb
push
cmp
push
or
or
rcll
add
inc
jb
cmovo
mov
or
mov
aad
pop
mov
lcall
mov
cmpsl
stc
pop
insl
xchg
lods
xchg
jno
add
xor
push
adc
xchg
jno
js
notl
mov
pcmpgtd
fwait
jo
xor
jmp
mov
sub
pop
push
mov
cmp
addl
in
and
jae
daa
popa
jno
adc
push
xor
fndisi(8087
jmp
add
sbb
xchg
js
or
pop
dec
int
xchg
mov
test
xor
and
or
testl
sub
filds
pop
addr16
xor
sbb
dec
jno
dec
jp
dec
loopne
test
pop
dec
jnp
lcall
xor
adc
and
jo
inc
xor
mov
popa
jp
cwtl
adc
out
out
insb
mov
jp
jb
push
and
lcall
sbb
cmp
push
pop
sub
xor
sbb
shll
adc
push
gs
test
or
fwait
outsl
jae
or
cmp
xlat
aaa
and
scas
dec
xorl
or
mov
or
bound
mov
je
subl
movsl
popa
imul
jno
adc
sbb
jnp
xor
insb
xchg
mov
dec
mov
imul
cmp
and
push
ja
or
loope
enter
popl
sbb
or
xor
loope
std
gs
fistpl
insl
pop
jae
mov
pop
or
add
stos
jmp
mov
mov
cli
push
adc
ret
test
jge
push
jge
pop
lds
and
mov
outsl
rcl
imul
push
int
cmp
int3
clc
aaa
add
xor
and
xchg
jae
test
sub
sbb
ja
adc
lahf
dec
out
inc
xor
dec
repz
es
jns
and
and
fs
jecxz
pushf
test
inc
mov
cmp
add
dec
dec
popa
cmpsl
jge
or
aad
cmc
xor
mov
jne
dec
push
add
jp
inc
pop
jg
outsl
fstps
jne
xor
and
and
push
sub
rorl
das
pop
inc
xchg
cmp
sti
jne
inc
mov
mov
gs
in
mov
cmpsl
outsl
dec
daa
mov
cmovns
add
fucomi
lds
loopne
mov
jmp
je
inc
lcall
das
jbe
push
imul
sbb
add
bound
int
inc
insb
mov
push
sbb
ja
outsl
shrb
bound
shll
sbb
popa
shll
stc
adcl
or
or
dec
add
xlat
push
push
insl
add
ds
jbe
sbb
add
xchg
aam
fbstp
mov
imul
adc
push
out
or
jbe
jnp
inc
loop
xchg
cmp
dec
add
daa
es
mov
bound
jnp
push
or
sub
pop
inc
shlb
subl
pop
fnstenv
out
in
test
sbb
pop
pop
std
lods
inc
add
pop
pop
fbstp
xor
mov
xor
ret
cltd
jg
shll
push
imul
lock
pop
andl
dec
rorl
scas
dec
xor
lahf
and
inc
xchg
dec
and
xchg
lahf
mov
pushf
lcall
push
ret
mov
and
loope
roll
movsb
dec
inc
mov
and
push
mov
aaa
push
xor
mov
pop
jmp
lret
xchg
insb
in
add
ja
inc
sbb
sub
subb
movups
sbb
mov
add
mov
aad
imul
and
lahf
dec
cwtl
int
push
cmp
xchg
mov
jnp
xlat
mov
movsl
xor
and
insb
mov
inc
ljmp
pop
dec
inc
jne
cltd
xchg
leave
call
jg
movsb
gs
test
das
ret
or
or
or
mov
pop
and
ss
cltd
dec
out
lds
fisttpll
imul
jp
sbb
mov
add
sbb
lock
adc
xchg
mov
xchg
add
mov
cmp
mov
lods
lret
jmp
shrb
lea
daa
setg
cwtl
je
push
int
jae
xor
cli
jne
pop
arpl
test
jmp
repz
loopne
sbb
dec
push
fists
jae
or
fwait
add
adc
sbb
push
xlat
jge
inc
jle
dec
sub
pop
xchg
add
add
pop
fcmovnb
mov
pop
test
movsb
push
pop
mov
sbb
mov
jmp
and
sarb
leave
stc
inc
cld
mov
add
daa
bound
aam
and
fucomip
pop
inc
pop
pop
pusha
add
jae
mov
add
jg
outsl
add
jb
jo
push
or
je
jb
arpl
fs
jae
push
in
jmp
push
je
jb
jne
dec
outsb
outsw
inc
adc
jne
gs
imul
adc
jbe
je
cmp
fcomps
pop
xor
outsb
addr16
sbb
lahf
fldl
push
outsl
insb
outsb
inc
outsb
fs
imul
jg
push
pop
dec
popa
pop
add
inc
mov
popa
addr16
imul
pop
inc
jb
ja
addr16
push
insb
mov
scas
sbb
mov
jae
gs
cmp
mov
jbe
push
push
inc
pop
frstor
xchg
push
outsb
and
add
fiaddl
imul
push
cs
or
mov
scas
sbb
pop
sti
pusha
pop
inc
outsb
popa
pusha
inc
inc
test
imul
xlat
or
inc
inc
or
sub
insl
jo
test
mov
imul
outsl
into
std
popa
sub
bound
arpl
adc
arpl
es
hlt
mov
dec
sbb
jne
hlt
in
out
xor
sbb
push
xor
inc
sbb
inc
pop
push
jo
push
jns
ja
insl
sbb
jb
jae
insb
arpl
out
in
xchg
or
inc
and
imul
enter
imul
ret
notb
inc
imul
addr16
outsl
js
inc
insl
adc
jbe
mov
add
out
ret
lds
jae
dec
sub
movsl
sbb
mov
dec
jle
adc
sbb
push
mov
ror
arpl
outsl
lahf
ret
cmp
ret
mov
pusha
test
dec
mov
pop
movsl
and
add
iret
bound
popl
fstpl
adc
or
jae
clc
clc
jmp
push
imul
pusha
lds
add
and
loopne
sidtl
add
ja
iret
in
add
jo
popa
adc
adc
inc
or
test
lahf
ficomps
pusha
adc
push
roll
push
lret
faddp
into
xor
pop
push
add
sti
mov
xor
or
hlt
stos
subl
enter
repnz
out
mov
jnp
test
shll
into
lock
je
pop
enter
mov
jmp
and
int
jb
sbb
cmc
popa
push
leave
add
fucomp
cs
add
fcoml
add
fisubl
rorb
pop
sub
sub
repz
and
ljmp
xchg
inc
sbb
loop
inc
push
add
add
add
add
pusha
mov
lea
push
jmp
adc
inc
add
jne
mov
sub
adc
jb
xor
inc
nop
nop
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
