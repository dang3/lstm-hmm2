jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
dec
inc
fdivrl
movsl
or
sbb
mov
daa
inc
add
add
pop
pop
or
add
add
mov
mov
sbb
mov
testb
add
add
add
add
ret
add
add
imul
add
sbb
and
push
add
add
add
add
add
add
adc
adc
adc
xor
loope
sbb
adc
add
add
add
cmp
mov
add
add
add
ret
add
add
add
or
cmp
add
sbb
das
add
add
add
add
add
add
pop
add
add
add
sbb
xor
dec
add
add
add
add
lret
add
add
add
or
cmp
add
sbb
das
add
cmp
add
add
add
sbb
xor
mov
add
add
add
add
add
lods
add
add
and
cmp
add
add
add
add
add
add
xor
adc
inc
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
mov
add
xchg
add
daa
add
and
addr16
add
add
addr16
add
jl
test
lret
add
testb
add
sahf
add
add
add
add
add
aas
add
add
dec
add
add
fiaddl
cmp
xor
add
add
push
add
sbb
pop
add
add
add
add
add
add
add
add
add
out
sbb
add
mov
add
add
add
add
add
push
add
add
add
add
add
add
add
jb
sbb
add
rolb
pop
add
push
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
mov
sbb
dec
add
add
sbb
xchg
add
add
add
add
add
pop
add
mov
pop
add
mov
inc
add
mov
sbb
test
xchg
add
add
and
addr16
add
iret
add
pop
add
add
add
fildl
add
dec
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
test
adc
lea
iret
add
popl
jns
add
add
add
add
add
add
add
mov
add
add
add
add
addr16
add
add
add
add
testl
mov
add
add
add
add
add
add
jmp
and
adc
push
add
sbb
xor
push
add
dec
add
add
add
add
aaa
add
add
iret
add
add
sahf
add
cmp
aaa
add
add
add
add
add
jno
jmp
ltr
add
add
add
sbb
push
add
add
mov
add
add
add
iret
add
add
sub
dec
add
addl
add
add
add
add
outsl
add
add
add
add
and
add
add
add
bound
add
dec
add
add
add
add
add
push
add
add
add
out
pop
sub
pop
inc
pop
mov
imul
pop
xchg
or
rol
push
dec
fidivrs
xchg
jns
outsl
fisttpll
xor
jecxz
loop
nop
nop
cmp
push
adc
cmp
clc
inc
pop
add
mov
pop
loop
dec
in
lods
jbe
jmp
test
negl
sbb
sbb
pop
adc
dec
shrl
add
sub
jmp
pushf
imul
dec
jbe
in
and
mov
xor
ja
shld
lds
jne
xchg
loopne
sub
inc
out
add
mov
mov
es
jp
iret
push
gs
cmp
stc
rorb
aas
jb
icebp
and
dec
fsub
push
ret
clc
and
imul
fcomi
pop
mov
stos
jno
pop
jns
mov
repnz
pop
mov
addr16
fimuls
push
ss
stos
cmp
ret
dec
xlat
pop
sahf
mov
add
xlat
xchg
or
dec
cmp
adc
mov
icebp
in
lret
fdivrs
cmp
mov
dec
or
xchg
mov
outsb
and
in
outsb
cli
out
adc
add
xchg
ljmp
add
or
or
shl
mov
hlt
ror
pop
cld
ljmp
push
lret
movsb
inc
cmp
mov
sbb
adc
sahf
test
jbe
ffreep
mov
inc
push
push
xlat
lahf
jecxz
test
rolb
scas
mov
dec
dec
lock
xor
xchg
out
pop
shll
inc
mov
mov
mov
fmulp
ljmp
push
push
pusha
adc
push
call
mov
cmp
sub
lcall
fwait
xlat
jl
mov
gs
pushf
outsb
sbb
mov
fisubrl
fnsave
dec
xchg
mov
dec
lock
xchg
xchg
dec
and
aaa
or
inc
push
lret
sub
cwtl
mov
pop
ret
out
inc
gs
dec
sbb
jo
inc
dec
sub
fdivp
sub
jns
push
aas
shll
mov
cmpsl
out
movl
xchg
movsl
leave
jp
pop
test
sub
or
fs
in
outsb
xorl
scas
jnp
shlb
test
jb
mov
into
push
push
and
std
xchg
out
shrb
jg
inc
popa
cmp
ljmp
adcl
xlat
std
jns
add
lds
lods
leave
sbb
out
sub
pop
bound
add
add
add
rolb
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
adc
xor
adc
popa
nopl
mov
fisttps
rcr
shrb
pop
add
jg
sqrtps
inc
das
jno
add
xchg
filds
mov
shrl
inc
add
and
inc
aaa
jno
popa
iret
xchg
aam
adc
iret
mov
xchg
xchg
aas
pop
pop
jno
bound
inc
pop
jmp
scas
sbb
fs
daa
jge
ljmp
cmpsl
push
mov
dec
adc
adc
outsl
lods
enter
imul
push
andl
mov
ror
inc
dec
xor
es
out
sbb
cmp
xchg
and
jo
add
pushf
dec
adc
and
ja
push
or
jns
cmp
ja
and
ror
out
test
scas
shll
sub
fcmovu
scas
aas
and
popa
outsb
and
sbbb
scas
dec
pop
pop
and
xchg
lret
adc
xor
pop
dec
rorb
adc
outsl
xor
pop
push
add
popa
xchg
movl
scas
icebp
cmpsb
cmpsl
cmp
cmp
jo
pusha
imul
xor
mov
loop
shl
movsl
sti
xchg
sbb
dec
jge
insl
or
inc
jnp
jno
inc
es
int
fcomip
stos
mov
ljmp
mov
push
insl
push
or
ja
pop
inc
das
jno
popa
iret
xchg
filds
rcrl
loope
adc
outsl
xor
sqrtps
inc
das
jno
popa
iret
xchg
filds
rcrl
loope
adc
and
fcmove
aas
pushf
fisubrl
sarl
test
push
cltd
out
and
inc
je
cmp
int
in
cmp
sbb
jo
gs
test
shll
repz
cmpl
cmpsb
jecxz
sbb
or
lods
and
mov
mov
mov
out
ds
ja
sti
and
add
adc
repnz
jg
mov
cmp
and
lcall
jne
mov
mov
mov
sbb
or
sub
inc
cwtl
inc
popa
add
mov
iret
cmp
push
sub
lods
sbbb
mov
punpcklbw
in
out
aas
mov
pushf
in
cmc
xchg
andb
xchg
fs
inc
xor
mov
in
mov
aas
xor
or
adc
adc
addr16
cmp
cmc
mov
adcb
lock
adc
imul
mov
inc
xor
lods
sarl
xlat
cmp
lea
push
mov
leave
cmpsl
mov
jl
stos
mov
push
lea
loop
addr16
jbe
push
cli
mov
insl
or
add
add
mov
fs
in
lahf
mov
jle
das
cmp
test
and
sbb
fcomps
push
fsts
push
sti
test
nop
out
push
push
push
xchg
xor
mov
cmp
int3
xor
sub
outsl
sbb
mov
call
neg
adc
sbb
fsubs
cmpb
inc
mov
xchg
mov
push
in
lds
jno
out
into
test
push
adcb
int3
jns
notb
repnz
bound
sub
or
dec
jno
xchg
pop
fs
add
or
aas
pop
pop
mov
inc
jnp
or
push
fwait
xchg
popa
in
inc
add
mov
nop
mov
mov
ret
imul
test
jl
xlat
inc
dec
xchg
push
lods
mov
inc
movsl
pop
ds
adc
jnp
fistps
aam
jp
rolb
adc
lods
inc
popa
sbb
adc
mov
sub
mov
lcall
sahf
dec
imul
inc
ds
lret
dec
push
mov
push
sbbl
push
icebp
push
ljmp
std
test
dec
scas
clc
in
outsl
sub
jns
inc
ljmp
dec
push
xorb
and
mov
xchg
mov
sub
fs
pop
cltd
mov
out
mov
mov
imul
lds
mov
addl
mov
negl
xchg
sub
leave
jl
out
fisubs
bound
xchg
inc
roll
test
add
dec
mov
lret
fisttpl
lods
xchg
in
mov
jle
gs
inc
pop
and
pop
mov
test
shrl
cmp
push
divb
push
clc
icebp
aaa
cmp
inc
int
int3
xlat
add
lea
iret
lock
add
arpl
adc
xor
cmp
sub
and
mov
insl
stos
incb
fists
mov
xchg
jge
lock
rcrl
pop
jns
std
cmc
hlt
cmpb
mul
int3
and
fdiv
test
hlt
mov
notb
xchg
sti
scas
int3
ds
mov
mov
dec
ljmp
add
ljmp
mov
mov
lret
lods
mov
fadds
cmove
mov
xchg
cmp
or
frstor
pop
xchg
and
cli
jge
std
or
inc
movsl
push
and
ljmp
call
and
xor
test
push
stos
xlat
test
jle
inc
sbbl
jmp
or
xchg
mov
push
sub
push
insl
push
sahf
xchg
test
xchg
mov
lret
and
and
aam
xorb
pushf
xor
sub
inc
mov
and
pop
jmp
dec
or
mov
push
pusha
and
leave
pop
xchg
out
sbbb
outsl
dec
fidivrl
push
add
mov
gs
xlat
xchg
mov
sbb
jbe
inc
adc
jo
jle
or
lcall
push
push
sbb
lods
jl
imul
dec
int
shll
dec
dec
dec
xlat
gs
jb
inc
xor
push
stc
adcl
mov
cmpsl
aam
and
out
push
fnstenv
push
inc
sbb
out
cmc
aam
scas
or
inc
mov
fidivrs
pop
fwait
repz
mov
sbb
jnp
arpl
mov
pop
jl
outsb
movsb
jae
push
mov
fwait
push
bound
xor
xor
lcall
add
data16
loopne
jl
inc
test
mov
xchg
leave
xchg
pop
pop
aas
dec
xchg
lahf
iret
dec
lock
ret
lds
cmp
popf
nop
push
mov
push
xor
movsl
psubusb
add
push
test
sarl
mov
mov
pop
repz
mov
mov
ja
jae
pop
lret
ja
mov
sub
and
out
pusha
sbb
cmp
ss
jmp
hlt
dec
cld
int3
adc
push
mov
into
int3
or
mov
cmpb
aas
ret
mov
ret
dec
shrl
jae,pt
jg
dec
jecxz
fistps
icebp
rolb
push
sub
daa
mov
cmpsb
out
or
inc
pop
pop
xchg
mov
addl
dec
scas
jp
aad
jne
mov
xchg
or
fldt
cmp
pop
push
xlat
leave
leave
loope
xlat
rcll
stos
sub
sbb
cmp
jg
hlt
cmp
xor
mov
push
push
jg
pop
call
rcrb
or
mov
mov
mov
mov
scas
mov
cmp
rcrb
ffree
add
mov
mov
sub
gs
inc
dec
imul
add
mov
ret
mov
aaa
jl
in
das
inc
inc
stos
sbbl
mov
cli
popa
cmpl
call
fildl
mulb
aas
in
sbb
insl
adc
push
and
push
sbb
sbb
cmpsl
rolb
in
adc
mov
ss
arpl
adc
fwait
in
fistpll
ffree
xchg
sub
pmulhw
jns
add
ret
cs
jbe
jnp
arpl
and
repnz
ret
push
stc
push
scas
jo
sbb
pop
adc
sub
out
pop
inc
cmpsl
cmpsl
int
scas
outsb
bswap
sbb
mov
lds
xchg
jae
ljmp
pop
daa
das
or
mov
lcall
xor
pop
dec
cmp
outsl
mov
popa
loopne
fmull
nop
scas
pop
inc
and
xchg
inc
loop
mov
cli
es
pop
jg
sbb
jae
push
mov
push
ret
fsubl
jb
mov
adc
jae
pop
fadds
mov
xor
sbb
lds
cmc
cmpsl
sub
xchg
mov
das
mov
cwtl
insb
loope
mov
inc
fcompl
sbb
outsl
dec
push
xchg
xchg
daa
out
push
add
cwtl
ret
in
sub
imul
xchg
sub
scas
push
jbe
or
mov
lret
push
adc
bound
gs
mov
lea
insl
sub
stc
mov
cld
jns
xor
dec
dec
add
mov
cli
jge
imul
sub
enter
outsl
mov
and
push
lds
push
iret
leave
adc
adc
mov
into
or
adc
sub
cs
dec
mov
aaa
xor
adc
movsb
movsl
cwtl
xchg
data16
inc
leave
cld
addr16
mov
cmp
jmp
sub
adc
jb
dec
mov
arpl
lret
sub
iret
pushf
mov
stos
adc
mov
cmpsb
sbb
cld
into
sbb
mov
mov
mov
adc
fnstenv
sub
repz
test
in
shll
mov
rolb
mov
xchg
jne
jmp
lret
jb,pt
popa
mov
in
lcall
fcoml
sub
clc
fistl
mov
add
jge
outsl
mov
test
xchg
fistps
inc
adc
enter
or
push
ret
mov
cmpsb
sub
pop
and
daa
out
dec
push
push
xchg
xchg
jle
sub
or
jl
mov
push
dec
insl
cmp
data16
mov
push
mov
inc
loope
leave
ret
jl
cs
popa
inc
jmp
scas
push
mov
or
adc
xor
pusha
push
pop
lahf
in
or
jbe
jp
icebp
inc
clc
jecxz
movsl
roll
sub
jns
iret
adc
jl
xchg
cmp
and
repz
add
in
and
int3
fisttps
arpl
scas
outsb
or
cmpsb
out
adc
imul
out
xor
aas
sbb
xor
jmp
cmp
adc
mov
icebp
or
scas
fiaddl
jp
cwtl
popa
iret
ret
cmpsb
icebp
jl
push
shlb
shrl
fdivrs
mov
jle
inc
dec
xchg
stos
clc
ss
inc
add
sub
mul
cmc
push
insl
add
cmp
icebp
or
sub
enter
cmpsl
fnstsw
push
loopne
inc
pop
fwait
insb
lds
pop
mov
adc
jno
rorl
xchg
jecxz
cmp
xchg
jmp
mov
adc
add
popf
inc
jmp
mov
mov
lahf
cld
inc
xchg
add
adc
andl
sahf
or
jnp
dec
out
iret
xor
add
xchg
xchg
mov
jecxz
cmp
push
push
data16
push
add
insb
es
loop
sub
mov
lds
dec
test
test
pop
cwtl
outsl
and
mov
jecxz
outsb
fildll
aad
lods
lret
fisttps
pop
xchg
cmp
mov
push
int
insl
addr16
dec
int
mov
mov
push
enter
imul
cmp
test
xchg
xchg
outsb
pop
add
mov
shrl
jo
and
pop
cmpl
mov
das
loop
adcb
pop
dec
sbb
and
push
mov
or
cmp
ret
out
ret
lahf
cmpsl
les
add
loopne
push
pop
loop
stos
xchg
add
leave
xor
in
dec
inc
push
xchg
les
jae,pn
jmp
ja
add
das
jae
or
inc
sbb
adc
sbb
in
pop
ret
sbb
out
jo
push
aaa
mov
js
sub
out
inc
sbb
push
inc
xchg
xchg
mov
push
dec
cmpb
popf
or
and
push
and
leave
sub
mov
jae
les
sub
mov
out
fdivrs
ret
cmpl
out
adc
imul
mov
adc
add
push
clc
mov
xor
jmp
mov
jns
ret
or
jge
cld
pmaxub
mov
daa
mov
ficoml
jno
aaa
or
test
jns
in
ds
inc
mov
lea
push
inc
sbb
pop
adc
mov
sbb
lods
lods
push
mov
dec
pop
mov
inc
add
test
test
xchg
mov
sub
ljmp
jge
or
orl
sub
ret
add
jbe
imul
mov
mov
cmpsl
shl
mov
dec
sub
cwtl
das
ss
adc
add
std
out
and
cld
jl
xchg
ds
repz
xchg
pop
hlt
fldl
gs
mov
and
dec
jns
adc
in
mov
sub
es
lods
mov
lahf
mov
pop
cmp
jle
xchg
cld
mov
lret
xchg
insl
and
cmp
insl
mov
and
dec
pop
pop
std
add
cmp
pop
shlb
jecxz
xchg
push
cmp
adc
sub
pop
out
insl
push
shlb
inc
into
jmp
icebp
cmp
xchg
out
and
xchg
push
xor
das
sbb
stc
loope
adc
arpl
insb
leave
push
mov
mov
adc
cmp
cs
xchg
or
push
fidivrs
xor
daa
mov
or
fdivs
nop
adc
and
cmp
push
jl
or
dec
xor
push
nop
push
inc
cltd
js
loopne
cli
repz
out
imulb
and
mov
mov
cmp
xchg
ja
test
in
sub
jae
xchg
adc
xor
mov
inc
in
loop
scas
mov
mov
mov
push
leave
and
xchg
std
jg
icebp
test
ret
int3
push
mov
sbb
andb
push
push
inc
testb
ret
clc
jl
cmp
cwtl
adc
adc
addr16
pushf
mov
scas
shr
push
mov
dec
int
repnz
mov
sarb
dec
bound
gs
xchg
aad
xchg
out
negl
jmp
sbb
mov
fstpt
cli
jl
data16
jecxz
jmp
cmp
addb
cmp
pop
add
movsl
fstl
or
fcmovu
mov
mov
and
mov
add
adc
jmp
test
jbe
pop
push
dec
push
mov
les
daa
mov
mov
cmc
test
add
push
jae
add
daa
clc
cwtl
sub
jnp
ds
ret
movsb
pop
aaa
add
mov
aam
push
xchg
adc
jns
dec
jmp
out
pop
jle
cmpsl
xchg
lds
cli
mov
push
pop
mov
movsb
popf
loop
xlat
inc
xor
inc
xlat
ret
cs
mov
cwtl
adc
repnz
lea
jg
je
aad
xchg
fwait
mov
xor
stc
xlat
sbb
mov
pop
loopne
adc
cmp
and
or
mov
fwait
mov
mov
lret
stos
pop
jo
push
daa
jp
sub
jbe
pop
and
popa
es
add
ret
or
mov
pop
imul
or
mov
repz
jnp
out
jo
bound
cwtl
stos
int3
add
lods
cli
xor
inc
add
jl
xchg
int
lret
stos
and
clc
outsl
and
sub
cmp
addb
mov
mov
mov
jmp
mov
sarb
xchg
lea
fmul
mov
push
mov
jae
and
mov
daa
cmpsb
sti
xchg
and
in
iret
sbb
js
push
das
mulb
adc
outsl
jae
imul
pop
inc
push
or
cmp
pop
jns
movsl
sub
sahf
loop
pushf
dec
push
mov
cli
hlt
push
repz
xchg
repz
aaa
xor
mov
call
fisttpl
push
pop
sub
mov
add
insl
xchg
daa
cltd
sbb
mov
xor
sub
sahf
dec
in
mov
inc
test
fisubl
fwait
lock
mov
jnp
imul
jo
aaa
in
and
cmc
dec
repz
sub
clc
out
xchg
mov
xchg
aaa
in
mov
idivl
and
dec
into
fnstcw
lods
cmc
inc
add
in
test
aaa
lret
or
mov
divb
ficomps
ds
xchg
xor
orl
xor
test
jecxz
cltd
ss
cmp
lahf
cmp
sub
push
push
mov
cmp
insl
test
outsb
push
jge
stos
mov
scas
test
mov
sbb
push
jne
mov
imul
sbb
xchg
andl
pop
jecxz
push
loope
adc
cs
mov
fdivrl
mov
pop
jae
sbb
faddp
fidivs
test
jp
mov
movq
arpl
mov
xor
cmpsb
adc
xchg
sbb
adc
cmp
stos
mov
mov
inc
xor
inc
jge
push
int
imul
adc
cmp
cmp
test
int3
es
fucomp
inc
pop
add
mov
sbb
ja
xlat
mov
mov
xor
xor
lods
sub
lcall
cmp
mov
nop
jnp
ss
hlt
adc
lods
sub
push
roll
xor
jb
and
aam
lds
call
gs
ds
push
es
clc
jae
cmp
dec
dec
add
dec
stc
fdivl
outsb
mov
inc
jecxz
fstl
stc
adc
fst
shlb
add
xchg
pop
lds
jmp
std
pop
xchg
in
sub
or
pop
sbb
inc
push
out
and
xchg
shr
mulb
in
das
movsb
sti
adc
test
mov
push
out
pop
mov
sub
es
mov
mov
and
das
fsubl
insl
and
es
std
cli
stc
cmp
mov
ja
mov
xor
in
or
sbb
repz
xchg
test
add
mov
jge
int
mov
stos
pop
popf
sahf
or
sbb
adc
icebp
enter
sbb
pop
push
in
push
mov
lahf
sub
aaa
sbb
cwtl
mov
shlb
pop
hlt
jge
mov
nop
iret
push
mov
je
in
cwtl
sub
inc
inc
mov
mov
stc
mov
jmp
pop
xor
fstps
xor
jb
inc
mov
sub
or
daa
loopne
push
cmpb
xchg
sbb
inc
jg
addb
divl
hlt
ret
push
cli
sti
nop
mov
push
mov
xor
cwtl
jne
inc
out
add
cmp
in
hlt
addb
mov
add
les
cmp
xchg
jp
in
dec
addb
jnp
dec
aaa
mov
sbb
sti
mov
out
mov
pop
ds
inc
or
cs
sti
fadds
lds
lcall
popf
push
or
in
sbb
imul
or
in
pushf
pop
loope
es
cltd
xor
mov
cmp
pop
daa
rcll
orb
andb
shrl
pushf
sub
out
xchg
aas
andb
in
xor
loopne
repnz
fs
or
pushf
int3
es
gs
xchg
mov
push
jno
lret
scas
dec
pushf
int3
adc
icebp
xor
sub
idivl
addl
add
lds
push
stc
xor
jnp
repz
hlt
xor
cmp
xor
sbb
jo
std
fistpl
fsub
push
imul
xchg
and
mov
adc
movsb
fidivrs
out
jbe
je
andl
repz
and
add
repz
lcall
iret
pop
cwtl
lea
jbe
pop
sub
jno
mov
cs
jne
push
or
mov
or
in
cmp
cmp
aad
fcmovu
scas
pop
inc
repnz
jle
ja
dec
inc
mov
add
lds
cwtl
dec
sbb
add
std
jp
cmc
cmp
fwait
cmc
pop
pop
cmc
out
rorl
stos
mov
lcall
cld
pop
push
iret
pushf
sbb
lods
jb
jmp
fsubl
ficompl
lods
fildl
pop
adc
pop
fwait
out
bound
adc
push
mov
jne
add
cmp
add
cmp
cmp
mov
mov
pushl
mov
inc
sbb
inc
in
stc
popa
push
mov
in
shll
jp
daa
in
push
xchg
movsb
out
outsl
xchg
mov
out
lea
loope
out
mov
ret
fsts
pop
or
aas
leave
ds
push
sarl
stos
mov
jge
jno
popf
push
cld
fcmovnu
sbb
push
mov
call
pop
sarl
dec
adc
pushf
pop
fdivr
call
adcl
out
lahf
jne
lahf
pop
in
sahf
xor
mov
jbe
aam
adc
and
call
mov
inc
jae
movb
add
inc
push
stos
in
aam
xor
adc
lods
lret
test
adc
fimuls
mov
test
adc
adc
cltd
and
ret
fldt
in
ficoms
insb
push
adc
push
mov
sub
fisubl
insl
lds
and
sahf
adc
jb
mov
xchg
mov
in
mov
xor
inc
mov
sahf
xchg
xchg
test
stos
idivb
dec
lcall
and
pop
adc
inc
mov
mov
nop
push
call
inc
push
les
int3
hlt
lods
adc
stc
mov
mov
and
push
pop
inc
das
jno
popa
iret
xchg
filds
rcrl
loope
adc
outsl
xor
sqrtps
inc
das
jno
popa
iret
xchg
filds
rcrl
loope
adc
outsl
xor
sqrtps
inc
das
jno
popa
iret
xchg
filds
rcrl
loope
adc
pop
xor
sqrtps
inc
scas
jno
mov
inc
mov
clc
pop
pop
ds
push
inc
push
fs
xchg
inc
movsb
push
xor
or
mov
hlt
adc
and
xor
inc
mov
test
test
movsb
push
mov
les
add
adc
in
hlt
xor
and
xor
sub
fs
je
inc
or
mov
clc
xor
add
adc
in
hlt
ja
jnp
inc
int3
adc
cmp
sub
shll
loope
repz
clc
out
sub
pop
cs
or
xchg
movsb
and
sub
bswap
test
lds
mov
and
inc
dec
dec
push
and
inc
mov
stc
pushf
test
xchg
mov
and
jg
mov
mov
loope
push
and
xor
mov
in
in
dec
adc
enter
stos
test
jl
imull
loopne
xchg
add
push
or
jecxz
xor
pop
mov
fs
mov
mov
mov
xor
sti
movsb
lahf
or
xchg
sub
inc
mov
test
cmp
mov
add
adc
in
hlt
rol
xor
jl
push
xchg
sbb
sbb
lcall
push
xchg
movsl
inc
lock
cmpsl
push
mov
and
and
push
aad
lds
xchg
bound
adc
andl
push
rcll
testb
shrl
mov
adc
in
hlt
adc
and
xor
inc
mov
test
test
movsb
push
mov
les
add
adc
in
hlt
adc
and
xor
inc
mov
test
fs
inc
incl
jo
pop
lods
add
xchg
sub
adc
in
mov
mov
adc
sbb
cmp
push
pop
pop
nop
inc
jle
ror
lret
mov
sar
mov
notl
jp
cmp
popa
out
testl
out
loopne
fwait
push
xor
ret
xor
xchg
mov
dec
adc
push
pop
xor
sub
rcr
ficoml
scas
jae
fs
xchg
fisubs
cmpsb
jge
jecxz
pushf
pop
and
xchg
mov
out
inc
push
fs
pusha
inc
leave
into
insb
arpl
iret
out
fcmovb
test
daa
insl
push
push
mov
jle
adc
add
repz
lods
cli
push
cwtl
push
les
mov
sub
dec
mov
dec
sbb
or
mov
loope
jecxz
mov
and
xchg
dec
cmp
adc
aas
cmpsb
sbb
or
insl
xor
test
mov
ljmp
dec
fnstenv
add
insb
negb
and
sub
aas
dec
shr
mov
push
dec
aad
or
mov
lret
test
sub
and
push
xor
aaa
test
cmp
aaa
sar
into
push
aam
mov
xchg
into
mov
loopne
or
das
xchg
imull
xchg
orl
cs
mov
loop
mov
push
mov
or
call
cmpl
orl
sub
and
mov
cmp
jmp
test
inc
nop
cld
sbb
mov
ret
call
neg
cmp
mov
xor
xchg
lret
imul
jns
mov
xchg
int
int
or
add
aam
push
xchg
rcr
mov
cltd
fstpl
das
icebp
or
sbb
movsl
cmpsl
push
sub
insl
movsl
sahf
cli
push
adc
cmpsl
sub
mov
enter
sub
sub
xchg
ret
mov
xchg
sbb
ja
xor
jo
inc
pop
adc
fcoms
and
iret
cs
aas
movsl
jnp
ret
mov
xchg
push
mov
jmp
roll
and
inc
xor
ja
cmp
out
inc
jbe
push
jo
out
jle
cmp
or
cmc
out
mov
test
mov
mov
leave
add
sbb
mov
sbb
sub
xchg
gs
idivl
rorl
inc
and
mov
mov
gs
addl
nop
aaa
int3
fs
jne
das
mov
cmp
mov
addr16
add
mov
inc
or
sub
pop
inc
or
and
xor
dec
or
push
push
pop
shlb
sub
sub
je
jl
popf
inc
adc
pop
push
inc
dec
dec
or
lahf
repnz
xchg
adc
fcmovnb
ror
imul
jp
mov
mov
inc
test
mov
loope
ljmp
movsl
test
mov
cmp
in
push
scas
push
add
mov
mov
jg
jbe
inc
sbb
lods
int
testl
sbb
push
sbb
cmp
xor
push
rorl
leave
scas
cwtl
sub
aad
icebp
sub
sbb
add
push
or
aam
add
mov
jg
mov
pop
cmp
loope
insb
cmp
sti
stos
imul
cld
or
sbb
es
inc
les
arpl
fildl
xlat
or
icebp
cwtl
out
cs
fs
mov
scas
fmull
push
mov
aaa
mov
adc
pop
sti
ret
aaa
sbb
fmull
jle
mov
mull
in
cmp
mov
pop
gs
subl
mov
adc
xchg
hlt
add
cwtl
sti
or
movaps
jne
or
pushf
sub
loopne
cmp
cmp
clc
adcb
daa
sbb
ja
sbb
adc
test
decb
pop
popf
xlat
or
rcll
sub
xchg
icebp
sarl
jl
xor
insl
aam
scas
int
cmp
lahf
push
cmpsb
test
add
xlat
xchg
cmpsb
cld
xchg
js
add
push
cmc
sbb
das
lahf
push
int
jnp
js
fidivl
sti
dec
cmp
mov
or
lret
cli
pop
mov
leave
sbb
cwtl
xchg
nop
fcmovne
mov
dec
ja
mov
and
in
imul
mov
popf
pop
sbb
mov
in
movsl
add
xor
sub
test
push
mov
fisubs
mov
imul
xchg
mov
mov
fcmovbe
jnp
inc
add
out
pushf
cmp
cmpsl
mov
cmp
inc
imul
mov
roll
das
arpl
popa
mov
add
in
orl
pop
mov
push
push
sbb
push
jle
pop
popf
outsb
test
pop
sub
add
aas
jbe
testb
jl
inc
sub
and
ret
daa
mov
mov
xorb
mov
testb
out
fwait
scas
repnz
shrl
cmp
or
fcmovnb
sub
and
mov
rcr
mov
repnz
lcall
cld
and
lahf
mov
test
repz
dec
ror
or
popa
ljmp
pop
pop
xchg
mov
adc
arpl
aas
and
cmc
addl
or
imul
daa
mov
pop
mov
and
repz
cmc
lods
ljmp
or
out
xor
call
sbb
mov
add
pop
sbb
push
insb
jp
out
xor
dec
add
insb
xor
lock
cmc
fsubl
dec
subl
loopne
jne
in
nop
mov
call
push
out
rolb
call
mov
cwtl
jae
cwtl
adc
adc
dec
inc
sub
mov
loopne
adc
lea
les
sbb
repz
js
jecxz
xchg
out
jns
insl
push
cmc
add
loope
repz
mov
push
decl
adc
mov
shr
sbb
push
lds
ljmp
cmp
insl
les
xor
lcall
xorl
pop
imul
es
jo
movsb
pop
mov
jle
adc
inc
inc
cli
ret
xor
orb
lds
push
enter
jle,pn
and
mov
sti
in
xchg
shl
dec
cmpb
and
incb
lcall
jo
mov
ds
ja
cmc
push
mov
ret
xor
jmp
mov
in
out
ds
shlb
push
mov
shlb
push
jp
cwtl
out
std
push
loop
adc
xchg
xor
pop
push
push
popa
sarl
fcmovnu
loopne
mov
rclb
mov
lea
mov
fistl
xor
das
fwait
lret
aad
lds
ds
ja
inc
cmpl
mov
cli
mov
in
pop
sub
gs
push
mov
add
sbb
daa
and
push
testl
mov
mov
cmp
daa
cmpsb
out
mov
in
andl
push
mov
imul
cmpsl
and
sub
in
ss
insb
cs
ret
imul
push
in
push
or
mov
and
loope
inc
loop
push
and
push
mov
dec
inc
add
bound
xchg
or
inc
or
add
jbe
cmpsb
movsb
aaa
cmp
sub
inc
add
fldl
adc
pop
in
std
out
xchg
cmp
add
setp
push
ficomps
jecxz
dec
das
dec
dec
push
sti
mov
popa
movsl
sbb
fwait
xlat
int
jo
inc
je
ljmp
xor
ret
xchg
addb
std
mov
ds
lock
int3
mov
jmp
popa
mov
dec
imul
cmp
push
push
rorl
daa
into
ficomps
cmpl
shlb
and
jnp
push
xor
lock
pop
jl
daa
test
loopne
jo
and
rorb
push
and
cmp
xor
repz
pop
add
xchg
sbb
sbb
jmp
clc
fnstenv
xchg
in
dec
in
clc
das
enter
adc
outsl
xorb
imul
ret
in
mov
pop
mov
pop
xchg
pop
in
ret
repnz
pushf
cli
ja
into
or
repnz
int3
out
lds
adc
mov
fstl
pop
jnp
in
and
shll
adc
mov
dec
inc
insb
xchg
push
or
scas
push
push
pop
xchg
pop
cmp
inc
fcomps
cmpsl
loopne
jb
push
sti
or
stc
mov
adc
out
popf
mov
out
mov
mov
add
idivl
pusha
stc
pop
daa
mov
push
pop
call
cwtl
and
adc
test
mov
mov
pusha
cld
xchg
enter
cmc
push
cltd
xchg
sbb
pop
loope
xchg
push
mov
std
xchg
ret
mov
movb
out
subb
dec
bound
inc
cmp
imul
xor
adc
and
lret
mov
cmpsb
inc
xchg
pop
mov
subl
cmp
mov
sti
test
mov
movsl
enter
adc
pop
adc
xchg
push
pop
inc
arpl
push
push
mov
loop
in
sub
cmpl
push
fisubl
test
lds
dec
mov
mov
fistps
enter
adc
out
or
xor
leave
loope
fstpl
arpl
pop
mov
inc
ret
flds
ja
jbe
mov
and
or
dec
iret
pop
mov
data16
mov
pushf
pusha
lods
push
int
fstps
mov
addl
pop
fiaddl
fcoml
popf
repnz
push
xor
xor
mov
push
jno
and
or
scas
lds
movb
jl
out
push
inc
mov
xor
mov
mov
cmp
jb
sub
test
adc
mov
pop
int3
adcl
adc
mov
mov
add
lret
iret
xor
stc
pop
inc
mov
lea
ret
sub
out
push
or
jo
std
pop
xor
call
lea
std
mov
repz
cmpsl
int3
lea
jb
cs
push
inc
push
int
and
push
scas
enter
andl
lahf
call
xor
sub
movb
rcrl
mov
rcrl
movsl
aaa
out
outsb
sbb
mov
cmpsl
cmp
inc
testb
mov
sbb
lcall
xchg
sbb
int3
scas
add
mov
aad
hlt
negl
out
jg
mov
test
mov
or
arpl
xchg
inc
in
jns
ja
jbe
sahf
movsb
jge
pop
ja
and
xor
jb
rcl
jbe
jb
dec
mov
mov
ja
hlt
mov
shlb
inc
popa
sub
enter
sahf
mov
sarl
dec
pop
push
sarl
imul
outsl
mov
jnp
and
pop
repnz
mov
outsb
sub
fsts
inc
shufps
test
repnz
and
pop
sbb
sbb
fcomps
jne
aad
jne
int
pop
xor
daa
jae
loop
push
jge
in
lds
ja
out
jae
sbb
dec
push
inc
add
mov
mov
pop
pop
mov
cwtl
ds
pop
or
and
push
push
add
out
cmp
fdivp
add
sub
js
add
inc
adc
dec
mov
mov
outsb
jb
add
jno
xor
test
ret
inc
fnstenv
ret
mov
xor
mov
cmc
cs
in
in
sahf
fisubrs
nop
inc
xchg
push
and
sbb
mov
scas
pop
lcall
mov
std
out
or
xchg
cmp
clc
loop
xor
lds
fucomi
fbstp
sub
stos
test
insb
mov
outsl
rolb
push
repz
sbb
std
aas
es
or
ja
jb
pop
ljmp
shl
test
ds
ss
pop
adc
rcr
lcall
iret
inc
pop
iret
sbb
insb
dec
jns
push
fwait
repnz
testl
push
popf
shll
jnp
pop
loopne
xor
sbbb
outsb
mov
rcr
arpl
sub
mov
mulb
insb
jg
pusha
popf
adc
aaa
mov
and
mov
xchg
mov
imull
push
pop
and
or
xor
xor
fwait
shr
xor
xor
mov
inc
in
inc
rolb
inc
fsub
push
nop
jg
inc
out
stos
and
and
or
xor
mov
call
inc
sub
jmp
je
sbb
test
movsb
aad
fisttpl
loopne
jnp
sahf
push
div
mov
pusha
movsl
data16
pop
addr16
push
jno
out
test
lret
out
jmp
jecxz
sbb
add
test
in
dec
xchg
outsb
lods
push
sti
cltd
in
mov
push
jae
je
movsb
incl
aam
fidivrl
xchg
sbb
divb
das
sub
sub
push
lar
dec
mov
in
gs
mov
lahf
clc
push
xor
mov
stos
jns
popa
push
das
mov
mov
fidivl
xor
outsb
xchg
inc
cmp
in
lahf
jg
or
mov
shrl
or
jnp
test
mov
sub
lea
inc
pop
mov
scas
mov
xchg
sub
adc
call
push
xor
pop
adc
push
aaa
fisubrs
int3
es
sub
sub
movsl
or
loopne
adc
or
push
or
daa
lods
or
sti
subl
test
dec
sahf
dec
ss
les
lock
cs
sub
push
or
shlb
add
push
out
repz
jne
int3
or
jp
pop
cmpsb
cwtl
jbe
cwtl
in
bound
inc
push
or
stos
jge
rorb
adc
call
xor
test
add
ret
jns
jns
cs
clc
xchg
popa
movsl
daa
mov
rclb
mov
inc
xor
sub
dec
loopne
pop
xchg
jmp
lcall
scas
push
sbb
mov
mov
add
cmp
fcoms
add
pop
cmp
iret
arpl
int3
inc
fwait
adc
xorb
push
xor
sbb
mov
cmp
adc
repnz
xlat
iret
dec
imul
inc
fs
sbbl
popf
daa
jecxz
ret
repnz
add
add
sbbb
clc
int
mov
push
xor
or
shrl
aad
lcall
xchg
mov
lods
inc
dec
and
mov
paddq
cs
ret
dec
in
dec
dec
dec
mov
inc
inc
mov
add
sbb
jp
mov
add
in
push
jle
int3
mulb
ror
mov
fstpl
adc
mov
int3
pop
pop
add
push
add
xchg
jae
cs
mov
push
xor
push
mov
pop
movsl
fwait
add
and
js
fistpl
pop
lcall
mov
mov
adc
pop
adc
ss
stos
dec
lahf
xchg
mov
inc
rcrb
inc
js,pn
gs
pop
push
enter
push
xchg
pop
jo
xchg
aas
and
xlat
jp
xlat
xor
lahf
inc
rolb
jmp
hlt
push
add
cmp
aaa
jmp
mov
push
push
jg
leave
xchg
dec
push
fldt
scas
test
push
push
paddusb
sbb
adcb
in
adcl
mov
sti
pop
insb
pop
daa
stos
jge
mov
fimull
stos
jo
jo
or
aaa
lock
dec
in
js
loopne
sbb
add
jb
loopne
pop
nop
sbbb
mov
adc
scas
sarb
into
sbb
ret
call
mov
sbb
das
fadd
imul
insl
xchg
inc
imul
and
xchg
push
and
hlt
jmp
je
cmpsb
sbb
xor
in
adc
cmc
push
mov
xchg
ss
jp
xor
test
ds
loop
cmpsl
xor
mov
icebp
push
adc
push
jnp
cs
out
adc
and
push
das
pop
push
xor
push
add
sbb
ficompl
push
add
std
sahf
int3
dec
fdivrl
fwait
xchg
pop
mov
or
mov
pop
jbe
xchg
mov
incb
fists
sub
decb
fldt
je
or
jne
movsb
sbb
sub
push
cs
xchg
mov
jbe
ljmp
push
cli
pop
mov
lcall
bt
lcall
mov
lods
sti
and
inc
dec
mov
or
mov
mov
imul
jg
cmp
aas
inc
rcrb
popa
mov
dec
fs
jo
mov
icebp
xchg
je
ret
add
sub
stos
lret
sbb
xor
inc
sbb
mov
shl
cmpsl
bound
aaa
lcall
xor
cmc
push
mov
xor
mov
cwtl
es
mov
add
dec
out
mov
sbb
adc
dec
sahf
nop
add
lcall
mov
mov
in
push
in
push
enter
shll
fbstp
daa
or
push
jg
sbb
fwait
movsl
pop
dec
adc
out
add
xchg
das
ss
and
mov
and
cmp
adc
rorl
cwtl
pop
lods
test
sahf
cltd
sub
fdiv
sub
dec
inc
popa
in
bswap
cltd
cli
ret
out
or
xlat
sbb
rcl
ljmp
mov
sub
xor
xchg
sbb
and
push
loope
mov
jns
mov
mov
jae
je
cltd
push
pop
lea
es
lock
jae
pmaddwd
ds
lahf
jge
or
aad
fiadds
outsl
sub
cli
xchg
clc
adc
fs
lds
mov
test
jb
add
or
push
xchg
adc
push
out
sub
cmp
xchg
popf
inc
lret
push
into
push
into
repnz
jns
les
sub
mov
ds
mov
insb
rcrl
jg
pop
movb
clc
ret
mov
enter
rcrb
leave
pop
leave
mov
pop
negb
or
jo
popf
iret
jp
mov
xor
arpl
and
dec
sub
stos
adc
mov
call
inc
adcb
ret
cmpsl
mov
mulb
jnp
sbb
adc
fxch
popw
cltd
test
repz
jb
cmp
sub
sub
mov
push
jge
outsl
sti
add
or
inc
sub
mov
cld
faddl
paddusb
xchg
add
push
cmpsb
subl
and
push
pop
pop
xlat
cmpsl
add
or
push
mov
pushf
inc
leave
cld
test
les
and
popf
enter
mov
push
and
or
sbb
sbb
dec
or
cmpsl
lds
add
out
test
push
iret
inc
mov
xchg
addr16
cmp
dec
int3
xor
lret
arpl
mov
pop
mov
jno
lods
and
ds
and
mov
js
sub
jmp
pop
pop
cwtl
les
sub
jge
push
das
aaa
loopew
xor
std
add
int3
sub
dec
mov
sub
xchg
pop
jl
add
and
inc
pop
lock
pop
mov
jnp
push
mov
lret
subl
mov
pop
jns
arpl
and
mov
cmp
rorb
ja
popa
mulb
popl
jae
in
xchg
jns
mov
mov
das
inc
imul
or
cmpsb
xchg
xor
or
mov
insl
push
cmc
dec
fsubrl
cs
insl
add
adc
sti
cmp
or
mov
cmp
dec
pop
xchg
pop
pop
in
sbb
xchg
mov
popf
xchg
sub
inc
inc
hlt
test
push
adc
sub
aad
mov
push
addr16
mov
mov
cmpsb
repnz
sbb
xor
out
jnp
mov
mov
and
shlb
or
jmp
les
add
adc
in
hlt
adc
and
xor
inc
mov
test
test
movsb
push
mov
les
add
adc
in
hlt
adc
and
xor
inc
mov
test
test
fcoml
les
add
adc
in
hlt
adc
and
xor
inc
mov
test
test
movsb
push
mov
les
add
adc
in
hlt
mov
ror
cmp
jnp
imul
xor
faddl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
fcmovnbe
enter
call
loope
xchg
xchg
js
push
add
xor
and
call
cmpb
dec
inc
sbb
bound
or
cmp
sub
pusha
sarb
ret
xor
xchg
test
cmp
imul
or
push
insb
pop
je
mov
test
pushf
mov
xchg
subl
mov
aaa
daa
mov
or
cmp
sub
xor
xor
js
insl
addr16
or
xor
es
std
addr16
push
out
push
lret
cmp
xlat
jae
rorb
in
lcall
push
add
iret
insl
sub
or
dec
add
mov
lcall
add
xor
fsubrs
mov
out
or
cmp
sub
daa
cmpsb
lds
sbb
or
fsubs
cmpb
push
js
sub
add
xor
daa
push
push
dec
stc
loop
mov
inc
mov
dec
adc
mov
cmp
sub
adc
ret
call
cmpb
rolb
jb
bound
add
or
sub
mov
loop
mul
jmp
hlt
test
pop
sub
inc
sbb
push
addr16
dec
dec
insb
xchg
mov
cmpsl
mov
in
into
dec
aas
sbb
cmp
adc
popa
jl
add
imul
cmpb
mov
push
dec
inc
js
push
add
xor
and
ror
ret
call
cmpb
dec
inc
js
push
add
xor
and
shrb
cmp
sub
push
out
pop
inc
dec
jg
add
adc
mov
push
or
adcl
xchg
nop
dec
hlt
jo
xchg
jbe
lcall
push
mov
push
jbe
inc
xchg
cmp
push
xor
inc
movsb
add
sbb
fdivrs
pop
insl
xor
or
test
mov
enter
mov
cltd
jnp
fdivrp
pop
pop
jle
insb
shlb
bound
pop
imul
pop
adc
inc
mov
andb
clc
fwait
sbb
mov
jge
dec
push
xor
pop
shlb
incb
jae
xchg
sub
jge
fucomp
pop
xchg
sbb
ret
js
xchg
ud0
insl
mov
ret
mov
add
icebp
mov
ret
sbb
sbb
inc
int3
ljmp
neg
popf
inc
mov
adcl
sbb
pop
and
inc
pop
or
nop
add
sub
icebp
sbb
iret
xchg
out
int3
add
outsb
pop
shlb
sub
push
movsl
cmp
iret
pop
mov
mov
push
loope
outsl
gs
sarl
xor
mov
pop
das
shll
imul
mov
rcrw
mov
shl
shlb
dec
das
sbb
test
fcmovne
pushf
aas
sbb
mov
pushf
in
hlt
ret
shll
dec
mov
lcall
pop
bound
cltd
lods
inc
mov
frstor
cmpb
inc
push
rorl
addr16
fstl
loope
adc
inc
cmc
je
out
add
fdivrl
ret
cmp
out
stc
mov
lods
mov
je
mov
out
in
adc
enter
lods
sub
in
xor
jbe
dec
outsl
pop
jg
cmp
xchg
movsb
sub
jle
iret
ficompl
sbb
push
or
movsb
test
sbb
pushf
cmp
insb
lds
enter
xor
cmp
stc
cli
call
xchg
sbb
lcall
and
cltd
jae
inc
push
pop
clc
mov
imul
xchg
sub
fisttpl
jl
fnstcw
je
fs
mov
pop
mov
sub
mov
dec
sbb
jb
inc
popa
add
out
movsl
adc
mov
mov
popf
clc
inc
sub
test
dec
sub
cltd
je
repnz
add
loopne
bound
cmp
mov
adc
ret
pop
int3
pop
mov
sbb
mov
or
dec
add
call
add
cmp
inc
adc
pusha
scas
xchg
push
lods
cmp
dec
pop
push
jns
xor
push
and
imul
pop
imul
add
cmp
xorl
cmpl
xor
dec
and
pop
jge
inc
addr16
adc
aad
push
dec
sub
cmp
insl
call
aaa
pusha
pop
inc
mov
lret
or
pop
or
shrb
dec
xor
jecxz
and
jle
and
add
xor
cltd
mov
adc
cmp
xchg
rcr
adc
popa
dec
in
inc
or
and
xor
mov
pop
add
inc
fwait
repz
js
orl
pushf
pop
add
loop
ret
mov
pop
shll
xlat
test
mov
cmpsl
add
je
xchg
fs
ficomps
sar
fildll
enter
jle
dec
fucomip
bound
rorl
lea
scas
lds
adc
rolb
push
test
xchg
mov
clc
movsb
repz
jmp
adc
loopne
and
rcrl
pop
nop
xor
mov
jb
outsb
mov
popf
dec
ss
cmp
test
hlt
bound
sbb
gs
push
lret
loop
add
dec
adc
aad
jecxz
xor
ss
cmc
idivl
bound
xor
pop
int
cmpsl
jbe
fimull
mov
es
addr16
sbb
dec
xchg
xor
pop
js
sub
push
call
mov
aam
fwait
dec
cmp
adc
cmp
inc
stos
mov
je
mov
fstpt
xorl
push
push
fs
add
test
popf
ja
test
pop
icebp
movsl
mov
aam
lods
not
in
test
icebp
cmp
lea
pop
imul
test
jge
jg
test
inc
sbb
or
and
test
push
adc
push
adc
adc
fdivrs
std
js
shrl
adc
out
mov
add
adc
pop
push
cmpsl
aas
inc
out
test
xchg
cwtl
cltd
clc
aaa
ret
lahf
or
daa
mov
mov
jbe
pop
arpl
pop
add
push
inc
jl
dec
loope
lcall
scas
repz
scas
stos
lahf
xchg
sbb
ret
hlt
fimull
scas
sub
cs
ljmp
fs
test
iret
jae
in
inc
les
and
shll
sub
movl
xchg
cmp
inc
mov
movsb
xchg
cmp
fs
loopne
xchg
fwait
jnp
sbb
mov
repz
ds
jae
push
mov
or
inc
inc
hlt
lods
xor
inc
fs
fsubs
stos
push
adc
roll
add
inc
mov
mov
je
int
out
ret
in
adc
clc
nop
stc
or
es
cld
out
iret
sti
sbb
inc
jns
addr16
or
sbb
and
adc
cwtl
int3
sarl
cs
repz
cld
mov
pop
push
adc
nop
push
xchg
jle
cmpsl
loope
rclb
ret
cmp
cmp
ja
push
stos
dec
pop
dec
arpl
lcall
in
inc
aas
pop
jp
loope
rcl
insl
sub
jno
cltd
out
pushf
adc
shlb
mov
inc
ja
jl
mulb
push
nop
movsb
cltd
bound
ss
xchg
lods
xor
xchg
sub
adc
jl
sahf
sub
inc
mov
xor
xor
subb
sub
in
jns
insl
orb
loopne
pop
xchg
frstor
xchg
jo
xchg
sbb
stos
mov
popf
stc
or
aam
in
rorl
push
dec
sbb
gs
mov
pop
mov
testb
aam
pop
outsl
ds
push
xor
mov
fildll
mov
imulb
xchg
and
std
add
jmp
jp
mov
mov
jbe
mov
xor
mov
xlat
push
jnp
jnp
mov
loop
shlb
sub
adc
inc
cmp
xor
dec
adc
jns
aam
insb
mov
lods
pushf
je
xlat
mov
aad
shl
fwait
sbb
pop
aas
push
sub
jb
mov
leave
mov
fadds
mov
xor
dec
xchg
sub
xchg
and
pop
push
test
shr
js
xor
add
xchg
lock
pusha
test
dec
test
and
push
inc
cmp
dec
pop
sbb
aad
add
mov
sub
test
call
xchg
push
add
xor
xor
cs
inc
leave
sbb
pop
cmp
and
popa
sahf
pop
in
and
daa
lret
scas
dec
stc
jmp
fcomp
or
jg
xor
xlat
mov
loop
out
lods
jo
mov
xor
xchg
bnd
push
mov
mov
adc
cmp
jbe
jl
xchg
stc
inc
test
je
jl
and
jno
fisubrs
push
andps
shll
mov
fidivrs
sbb
push
pop
rclb
push
hlt
xchg
xorl
adc
lahf
sub
xor
mov
sub
mov
add
dec
call
cmpb
lret
dec
xor
test
inc
pop
fcomps
jbe
inc
sbb
repnz
pop
insb
ja
mov
mov
shll
in
mov
mov
push
ret
xchg
push
ret
jb
test
inc
and
scas
inc
and
lock
in
pop
testb
mov
in
jnp
mov
jo
inc
test
pop
shr
dec
push
ret
and
shll
je
fldcw
sub
imull
addb
xlat
xchg
pop
mov
loop
cmc
lods
divb
sub
ds
cmovl
add
adc
xchg
nop
add
arpl
fdivs
pop
fdivs
lea
adc
inc
xchg
xor
and
scas
sbbb
push
je
lock
xlat
push
int3
xchg
sub
lahf
stos
sbb
lock
push
dec
cmpb
cwtl
inc
and
and
and
arpl
fwait
dec
mov
mov
insl
fwait
push
dec
call
jmp
jo
add
idivb
popf
pop
fisubs
andb
push
imul
ds
xor
sbb
stos
pop
xchg
jo
gs
fcoml
insl
int
pop
data16
ss
sub
sub
fsubs
mov
cmp
xor
adc
outsl
sarb
pop
std
dec
arpl
xchg
in
push
rcrb
mov
test
fwait
daa
sti
test
in
ret
lock
test
xchg
arpl
push
mov
lcall
jmp
lods
pop
pop
pop
inc
decb
cmpsb
in
mov
shlb
sub
mov
data16
jae
fcoms
js
ds
leave
imul
mov
pusha
daa
lods
repz
cmp
pusha
push
hlt
add
adc
sbb
add
pusha
or
ja
inc
leave
clc
adc
ds
jo
sub
adc
mov
mov
mov
mov
imul
mov
pop
in
sub
out
adcb
dec
imull
in
xor
mov
mov
xchg
jnp
mov
cmp
xor
pushf
jno
stos
mov
sti
push
mov
xor
jno
mull
and
sti
xchg
mov
call
mov
les
fs
jbe
adc
pop
and
cmc
lods
cli
inc
rorb
and
push
scas
xor
test
insb
es
test
push
push
mull
pop
dec
es
mov
mov
pop
cwtl
add
mov
xchg
inc
xor
push
or
dec
push
or
pushf
push
mov
ret
loope
adc
sarl
movsl
add
or
dec
test
pop
mov
mov
dec
push
aam
shll
je
cmp
fstps
shlw
adc
jbe
bound
sbb
test
xor
out
shlb
mov
gs
dec
push
xor
cli
xchg
push
xchg
aaa
dec
fcoml
daa
jmp
xchg
push
pop
mov
jmp
popf
pop
pop
mov
and
clc
je
pusha
cmp
pop
mov
add
jbe
or
cs
testb
xchg
xchg
fidivs
ss
dec
adc
xchg
xor
pop
sub
sahf
fs
movsl
and
xchg
jge
mov
shlb
ret
out
jbe
out
jno
jge
lea
aam
inc
cwtl
inc
xchg
fidivrs
xchg
fisubl
cmpsl
lods
jbe
inc
mov
or
inc
cli
rorl
jne
push
jl
cmc
vfmsub132ss
stos
repz
dec
in
jecxz
xor
test
push
push
sub
and
popf
adc
sub
push
mov
dec
dec
fidivrl
out
jmp
jae
mov
testb
push
insl
addb
fistpll
jnp
pop
sub
mov
stc
sbb
adc
sti
push
sub
imul
push
and
sub
push
push
xor
push
test
add
adc
jo
pop
and
in
pushl
outsl
add
or
dec
cmp
clc
pop
es
inc
movsb
sti
fisubrs
pop
movsb
popa
jecxz
xor
jmp
movsl
adc
cmp
dec
adc
fs
out
jb
int
enter
push
add
xor
mov
dec
xchg
pop
add
xor
insl
sbb
fstl
xlat
shrl
add
lcall
pop
push
or
imul
addr16
je
decl
loop
pop
sahf
sbb
out
mov
rep
std
xor
and
mov
mov
lea
mov
imul
and
das
dec
jge
testb
fsubs
imul
cwtl
push
adc
jmp
add
in
cmp
ss
sbb
pop
test
insb
push
cmp
cmpsb
notb
scas
mov
scas
ret
in
orl
push
add
lret
mov
adc
fistpl
or
in
js
popf
xchg
mov
or
jle
stos
shll
shrb
xchg
and
jo
inc
xchg
sub
movb
mov
cld
mov
push
xor
or
sub
sbb
adc
arpl
xor
mov
lods
test
pop
movb
mov
jp
mov
push
mov
adc
les
push
cli
push
sbbl
jae
loope
jp
push
push
testb
ljmp
lea
insl
ljmp
jg
popa
cli
sbb
mov
sbb
rorb
mov
pusha
mov
out
repz
and
push
jge
mov
iret
fdiv
adc
out
orl
inc
dec
dec
clc
inc
mov
mov
scas
inc
jge
or
push
xor
movsl
jge
jp
mov
or
inc
or
sbb
and
ret
add
into
inc
test
divl
repnz
dec
pop
mov
mov
jb
test
adc
pusha
repz
subl
push
addr16
mov
call
push
lods
inc
xchg
sbb
lcall
loop
pop
sub
sbb
std
sahf
push
or
jl
jns
or
scas
and
popa
xlat
pushf
and
call
inc
push
cmp
xor
jge
sahf
jmp
cld
fiaddl
xchg
iret
popa
ljmp
inc
lods
pop
xchg
adc
je
dec
insl
sbb
shll
fldenv
setb
in
jb
mov
in
fistps
test
xchg
je
sub
int
adc
movsl
mov
inc
and
inc
sub
loopne
fistpl
cltd
das
mov
push
sbbb
push
ljmp
jae
cltd
push
xchg
pop
mov
cs
xor
dec
fistpll
stos
stos
jle
inc
mov
inc
js
in
pushf
cld
push
leave
adc
mov
cmc
je
dec
adc
cmpsl
and
arpl
cmp
aas
cltd
pop
pop
cmp
mov
push
add
jnp
push
lds
and
mov
mov
js
filds
iret
dec
je
pushf
or
hlt
data16
shlb
repnz
mov
int
dec
popa
ja
xchg
loopne
pop
into
mov
js
inc
lcall
repz
outsb
data16
sub
repnz
cwtl
out
inc
in
mov
push
sub
cmpb
mov
ds
adc
stos
push
pushf
dec
clc
jg
sub
scas
shll
jne
fs
shll
mov
mov
or
xor
cli
lods
xor
sbb
ret
xchg
adc
out
adc
lahf
sub
fsts
mov
jg
add
loop
push
mov
push
shrb
sti
stos
pop
jge
cmp
lods
mov
loopew
int
cld
or
out
mov
or
mov
sbb
or
popf
call
mov
sbb
ds
jg
ret
add
jae
xchg
cmp
or
jbe
sti
push
out
mull
das
dec
in
mov
jno
jbe
inc
movsl
xchg
adc
loopne
stos
negl
aas
sahf
imul
inc
test
mov
and
sub
cmp
and
cmp
call
imul
lods
test
fst
dec
bound
inc
mov
pop
fadd
mov
push
xchg
jne
ret
and
orb
loope
movsl
dec
push
ja
outsl
jnp
call
inc
jno
int3
mov
imul
test
dec
mov
add
lock
sub
mov
jb
pop
push
xchg
push
mov
rclb
leave
cli
repz
test
jmp
fldl
cld
xchg
test
cltd
xlat
xlat
cmp
mov
pop
gs
out
lcall
jle
adc
movsl
divl
ljmp
inc
frstor
adc
pop
lods
cmp
mov
or
jp
xor
sarb
repz
or
sub
int
loop
test
add
imul
cmp
movsb
pusha
and
ds
enter
scas
loopne
insl
push
and
adc
mov
push
xchg
dec
shl
or
insl
data16
and
pop
add
test
mov
inc
stc
mov
arpl
arpl
stos
mov
ret
sbb
push
in
mov
inc
test
xchg
push
out
rcrl
fisttpl
mov
repnz
sub
and
mov
lods
loope
xchg
xor
stc
or
pop
inc
les
icebp
xchg
inc
add
icebp
hlt
nop
or
inc
mov
lock
xchg
shrl
imul
notl
push
addr16
imul
in
jo
sar
rcl
sbb
addb
push
jge
and
scas
sarl
and
scas
pop
jae
mov
sbbb
inc
jmp
out
aaa
call
sub
sub
push
outsl
rsm
add
jg
addr16
jmp
bound
mov
les
push
mov
ret
cmpsb
cmpsb
inc
dec
sbb
test
shl
movsb
adc
push
repnz
sbb
scas
jnp
cmp
imul
or
ret
adc
pop
mov
clc
mov
test
jmp
cld
add
adc
jne
lock
lret
gs
fucomip
shll
cmp
push
sub
mov
ficoml
aam
fildl
inc
dec
mov
adcl
inc
or
mov
add
inc
int3
xor
cmp
bnd
js
movhps
shlb
lahf
xor
mov
cmp
jne
lret
push
sub
mov
test
cmc
ja
scas
test
cmp
cmp
ja
cwtl
add
dec
stos
fmull
sahf
xchg
xchg
fisubs
loope
dec
xchg
lock
scas
sahf
xor
sti
clc
roll
popa
adc
mov
cmp
jae
or
sarb
daa
test
lcall
in
mov
push
jle
imul
cmc
xchg
rorl
push
out
mov
iret
data16
sbb
fs
adc
mov
mov
imul
mov
mov
sti
cld
mov
subl
sub
mov
push
or
icebp
mov
std
fwait
aaa
jg
adc
fs
cmp
dec
sub
je
fnstenv
adc
orl
sub
scas
xlat
out
sti
into
or
push
rcl
push
ret
insl
dec
inc
mov
pop
out
xchg
sbb
or
or
lcall
iret
insb
jne
and
mov
add
mov
mov
inc
cmp
in
dec
stos
xchg
cmp
loope
xor
shr
or
movsb
es
xor
and
cmp
ds
pop
in
pop
add
adc
push
xor
pop
ret
fdiv
ret
stos
lea
dec
cmp
out
stc
dec
out
js
rorb
test
aad
testb
cmpsl
leave
mov
or
in
insl
sbb
lods
aaa
pop
xchg
push
fisubs
push
push
movsb
sbb
push
mov
int3
sub
jae
sub
mov
ss
in
arpl
pusha
add
int3
mov
mov
push
push
cli
push
shlb
out
mov
inc
push
aad
loop
add
sub
mov
mov
or
sub
inc
mov
cmp
out
stc
pop
int3
mov
mov
rcl
mov
xor
pop
inc
js
sub
mov
add
and
dec
xor
mov
aad
popf
adc
and
push
xchg
pop
sub
push
into
scas
push
das
add
jbe
ljmp
ljmp
push
adc
scas
push
add
fimull
or
or
mov
xor
xor
push
push
sti
in
push
ds
pop
pop
xorb
sbb
cmp
into
addr16
ja
mov
pop
xchg
dec
int3
xchg
jno
popa
mov
ss
scas
popf
push
cmpsl
enter
or
add
bnd
cmpb
dec
inc
js
push
add
xor
and
ror
ret
call
cmpb
dec
inc
js
push
add
xor
and
sar
ret
call
cmpb
dec
inc
mov
bound
adc
add
xor
and
rclb
cwtl
xchg
cwtl
cmpb
mov
shlb
adc
int
fnstsw
sub
cmp
or
sbb
cmp
inc
pop
mov
mov
mov
cmp
sub
sbb
or
jp
push
pop
dec
dec
pop
stos
test
test
fcmove
lret
sub
cmp
or
sbb
jb
inc
dec
dec
pop
mov
stc
repnz
cli
mov
popf
fsts
inc
dec
sbb
cmc
sub
lea
adc
jmp
add
adc
sbb
xchg
inc
fists
adc
fldenv
je
stos
sub
jb
leave
xor
out
jmp
ds
repnz
fsubr
imul
cli
jmp
lret
cmp
rorl
cs
movsl
mov
stos
lods
scas
ja
add
test
push
cmpsl
lds
imul
mov
jne
stos
add
ljmp
lods
lret
or
insb
test
inc
faddl
daa
test
ficompl
fcmovu
lret
sub
cmp
or
sbb
jp
pop
dec
push
pop
mov
mov
stc
ror
lahf
push
inc
dec
ljmp
or
pop
sub
sub
out
idiv
test
mov
jne
jp
push
or
push
pop
sbb
in
iret
aad
cmc
cli
xchg
mov
jns
dec
jbe
bound
add
dec
pop
mov
mov
stc
fcmove
lret
sub
cmp
or
sbb
push
pop
dec
dec
pop
mov
mov
stc
fcmove
lret
sub
enter
xchg
daa
jae
jb
or
ror
cmp
int3
dec
mov
sbb
or
rcr
ja
jo
mov
aaa
mov
outsb
into
lds
test
jne
rcrb
adc
out
xchg
inc
pop
or
pushf
dec
dec
push
and
and
arpl
mov
jmp
jp
add
mov
or
xor
and
xor
xor
mov
stc
pop
dec
lock
sub
mov
pop
pop
adc
and
mov
pop
test
pop
loope
mov
jne
pop
test
dec
xchg
cmp
enter
jno
xchg
pop
and
jno
mov
or
mov
sti
dec
mov
pop
sub
pop
pop
pop
lods
lods
mov
mov
push
push
cmp
fwait
jb,pn
push
mov
xchg
test
push
aaa
adcb
mov
mov
add
sub
jg
aaa
rcrl
adc
mov
enter
movsl
outsb
arpl
into
dec
push
sahf
mov
mov
adc
dec
imull
sti
lock
fs
mov
arpl
pop
mov
mov
popf
pop
loop
andl
ret
cmp
aad
and
pop
xor
aas
dec
mov
cld
mov
mov
js
insl
or
jo
mov
inc
pop
sahf
mov
out
push
push
mov
or
mov
imul
xlat
nop
adc
mov
das
jb
jns
stos
lods
or
das
hlt
stos
nopl
mulb
out
dec
adc
cmpsb
mov
mov
nop
add
call
popf
push
fcom
fsubr
xchg
loopne
pop
mov
cmp
ret
xchg
fwait
mov
fwait
pushf
repz
dec
push
pop
jge
aas
mov
add
nop
in
dec
push
dec
sbb
sbbl
xor
push
mov
gs
adc
xchg
and
lods
enter
xchg
pusha
les
xchg
shl
pop
das
rcl
push
cmp
sub
fisubrs
jecxz
fidivrl
mov
in
mov
cmpsl
or
test
add
push
insl
popf
push
pop
jl
and
inc
inc
gs
xchg
insl
repnz
push
in
or
fsts
jp
and
sahf
cmpsl
iret
out
mov
mov
icebp
aam
adc
xorl
cmp
orb
cmp
mov
mov
test
add
out
mov
movsb
ret
aam
xor
dec
xchg
dec
mov
xchg
pop
repz
mov
cmpsb
lds
pop
movd
mov
fisubrs
cmp
xchg
idiv
inc
fimuls
push
sarb
insb
xchg
out
lock
inc
fs
sub
movsl
sub
movb
sbb
sahf
in
adc
pushf
in
mov
repnz
data16
test
adc
sub
pop
imul
adc
mov
les
or
pavgb
push
por
aas
pop
cmc
inc
rcll
pop
ficoms
and
andl
shlb
pop
pop
outsb
cli
mov
or
dec
shrl
loope
rorb
jbe
mov
in
cmp
lods
scas
js
mov
pop
iret
mov
push
movsb
fwait
mov
lock
inc
cltd
or
dec
push
sbb
or
lock
mov
fimull
xor
inc
subl
and
or
sbb
push
testl
pop
xchg
push
arpl
sub
sub
add
jnp
ss
push
mov
push
ss
das
pushw
cpuid
mov
lock
sub
push
mov
inc
jg
mov
ljmp
addl
add
aad
daa
shlb
jne
fisubrs
xchg
imul
into
and
ret
cmp
dec
lock
xchg
rcr
out
pop
or
nop
xlat
insl
cmp
in
lds
jp
cli
lds
xor
out
sbb
sub
pop
in
push
mov
jnp
xor
cmp
pop
in
popa
jge
pop
jge
add
les
add
cmpsb
inc
stc
enter
lea
cmp
daa
jle
es
push
mov
pop
jno
jno
call
adc
stos
cmp
adc
inc
mov
dec
popa
jnp
mov
cld
icebp
or
bound
mov
decl
imul
in
scas
jp
scas
gs
mov
stos
or
xchg
rcll
cmc
add
imul
or
xchg
rorl
mov
inc
js
dec
bound
mov
fcomi
mov
sahf
or
pop
mov
rorl
and
sub
les
dec
push
sub
aas
jle
scas
xor
pop
pushf
mov
int
cmp
es
sub
adc
lcall
adc
mov
ret
out
lds
shrb
or
shl
lret
movsb
pop
aas
rorl
jl
dec
mov
xchg
xchg
pop
or
jle,pn
inc
filds
adc
jno
add
sbb
mov
mov
loopne
dec
sbb
loope
neg
and
jno
push
scas
sysret
mov
pop
js
mov
mov
int
dec
xor
add
movsl
jg
pop
mov
push
xor
pop
cli
ret
pusha
inc
mov
dec
jo
pop
mov
bound
cmp
or
jo
xor
andl
dec
ds
xor
sbb
xchg
jmp
shlb
jno
std
shlb
pop
pop
aad
jnp
pop
out
jns
xchg
cld
mov
push
shll
mov
lods
jae
lds
jb
dec
inc
lock
dec
jle
adc
adc
sub
pop
xchg
jg
enter
nop
mov
fdivrl
jl
inc
pushf
mov
enter
lea
fs
jmp
in
sub
mov
loop
out
idiv
jns
rcl
or
mov
fsubr
outsl
add
outsl
or
sub
xor
xlat
loope
xchg
mov
fs
sbb
xor
sbb
sbb
pop
popa
sub
add
mov
sbb
pop
fistl
dec
jecxz
in
rcll
adc
sub
js
stc
fdivrs
pop
mulb
sbb
jbe
daa
popa
stc
adc
jg
in
scas
push
inc
dec
xor
loope
and
mov
gs
das
mov
in
ret
pop
pop
mov
and
dec
lahf
nop
pop
push
cmp
stc
mov
enter
aas
repnz
movsl
jbe
cmp
rcrb
push
ljmp
sti
xchg
dec
rcrb
fcom
add
inc
adcb
iret
test
lock
fidivrl
sub
lcall
movsb
cmc
mov
xchg
push
mov
or
movsb
mov
shrb
xor
mov
jnp
or
ljmp
mov
xchg
xlat
outsl
adc
xchg
sbb
imul
fld
pop
ljmp
jb
add
xchg
mov
push
cs
mov
test
sbbb
sbb
dec
shll
test
sbb
or
cmc
mov
aam
cwtl
adc
inc
dec
aaa
mov
jbe
jnp
mov
int
cmp
call
lret
add
push
inc
inc
xchg
mov
lahf
mov
js
andl
repnz
xchg
mov
cmp
xor
aad
cmpsb
mov
mov
fldcw
sbb
and
xchg
orl
testl
jp
push
mov
jbe
mov
pusha
and
inc
jl
mov
mov
push
dec
xchg
pop
push
movsl
addr16
stos
daa
mov
push
mov
loopne
mov
cwtl
aaa
adc
fwait
into
pop
shll
adc
shr
out
sub
shll
pusha
dec
jmp
fcomps
dec
mov
mov
stos
push
das
xchg
nop
fucomip
imul
fadds
cmp
es
adc
in
mov
mov
sahf
xchg
in
jne
jge
cs
aas
inc
push
clc
xchg
into
xchg
dec
iret
lret
aaa
mov
and
cltd
mov
jmp
pop
xor
jl
pop
push
sbb
loope
mov
mov
sub
dec
xchg
out
xchg
bound
mov
loope
mov
push
stos
flds
orl
sbb
rorb
loope
out
mov
and
outsb
rorb
notl
scas
lea
aam
ret
sbb
pusha
push
into
jecxz
lahf
addl
testb
lahf
mov
fiadds
ret
jnp
mov
int
xor
in
jbe
xchg
cmpb
adc
jne
push
std
popa
loopne
in
pushf
outsl
mov
or
pop
jmp
lahf
adc
insb
add
xchg
push
jno
jnp
pop
ss
repz
jge
or
rcrl
adc
or
das
xor
push
outsb
mov
pop
dec
adc
fdivrl
sbb
inc
sbb
adcl
and
fwait
dec
jle
repz
mov
movsl
mov
rolb
dec
out
jle
pop
jno
mov
test
or
jle
js
pop
mov
dec
sbb
aas
fnclex
and
js
test
fmul
mov
jp
es
mov
lods
push
cmpb
pop
xchg
out
adc
jmp
xchg
pusha
in
xchg
jb
dec
cld
jns
jg
fcompl
test
push
mov
cmp
ret
jo
dec
xchg
aad
lahf
cmc
sbb
xchg
fwait
jmp
adc
out
fnstsw
mov
and
dec
fnstcw
rclb
xchg
divb
call
jecxz
pushf
adc
dec
push
sarl
sbb
inc
mov
adc
push
inc
mov
fisubs
xor
mov
dec
movsl
sbbl
and
pop
mov
lret
cmp
mul
pop
aas
fidivs
hlt
mov
scas
cmp
jecxz
es
push
cmp
xor
inc
cmp
pusha
ds
jg
mov
mov
pop
dec
inc
add
inc
push
adc
cmp
and
mov
push
in
call
imul
adc
scas
cmp
sub
cmp
and
xchg
add
divl
push
ret
fdiv
lret
dec
pop
mov
fwait
jge
imul
or
push
mov
addl
popa
dec
clc
pavgw
or
stos
sub
js
filds
loope
ss
adc
imul
xlat
getsec
sub
lcall
subl
sub
idivl
adc
dec
jp
inc
sarb
test
icebp
mov
int3
add
cmp
and
adc
mov
ja
adc
adc
pop
sbb
std
ljmp
leave
cmpsb
test
cwtl
into
dec
add
outsl
sbb
mov
mov
adc
insl
xchg
shlb
mov
push
ljmp
in
pushf
xlat
and
bound
pop
mov
xchg
fst
mov
fwait
mov
out
xchg
ja
mov
in
cltd
mov
mov
lock
aam
int
xchg
mov
cmp
loopne
bt
cmc
shll
mov
test
xor
dec
push
mov
jns
lods
xchg
xchg
xchg
fnstcw
sbb
rorl
cmp
or
adc
xchg
repz
mov
xchg
add
add
mov
pop
ljmp
jmp
shrl
test
mov
hlt
xchg
jle
add
or
adc
cli
xchg
aaa
je
jmp
or
mov
cmp
and
out
or
rcrb
add
ror
in
rclb
mov
imul
repnz
sbb
or
pop
mov
mov
mov
jnp
cmp
sahf
xor
jp
aad
add
repnz
sbb
push
inc
jns
mov
xchg
push
fcmovbe
into
lahf
out
rol
xchg
sub
push
xchg
dec
andl
adc
sbb
and
imul
mov
subb
subl
in
mov
cmp
int
in
push
popa
sub
dec
push
mov
ljmp
ds
jecxz
sbb
sub
pop
aaa
xchg
clc
jo
or
scas
in
xchg
xor
ret
inc
ret
int
inc
mov
pop
daa
sub
adc
xchg
mov
jcxz
mov
xchg
cli
daa
xchg
setbe
lret
daa
or
aam
mov
icebp
test
sbb
out
repnz
inc
sub
mov
aaa
addr16
popf
pop
mov
sub
jne
push
xchg
shll
inc
lret
adc
inc
mov
das
inc
cmp
jo
mov
daa
or
ret
inc
in
lcall
lar
jb
cli
sub
ljmp
scas
xor
popf
cmp
jne
inc
xorl
xchg
cmc
iret
outsl
stos
jl
mov
add
xchg
out
pop
ret
xor
xchg
push
xor
and
dec
sub
jecxz
bound
cmpsb
fistpl
mov
xor
mov
fsub
in
inc
inc
sub
cmp
mov
pop
mov
pop
push
pop
cmp
or
jo
pop
and
sbb
aad
sti
xchg
mov
and
pop
dec
int
xlat
movsb
daa
and
mov
mov
int3
xor
dec
push
dec
mov
mov
or
mov
push
sub
pushf
je
mov
in
jb
or
sub
jp
stos
dec
out
pushf
mov
aas
stc
loope
fists
xor
and
and
loop
lock
dec
out
push
rcl
inc
outsl
sbb
mov
dec
xor
shll
cmpsl
in
jge
dec
dec
push
mov
jbe
jmp
jbe
push
xchg
in
or
and
ja
loopne
mov
and
xor
mov
dec
mov
pop
sbb
pusha
mov
cmp
lds
cmp
popa
lods
int3
jge,pn
inc
das
and
or
inc
jne
and
sti
dec
or
mov
push
xchg
adc
xor
mov
test
movsl
mov
fmulp
addr16
dec
push
and
pop
xchg
push
xchg
inc
cmp
pop
xchg
aad
xor
ja
xchg
or
daa
or
mov
out
xor
xor
iret
aas
js
insl
mov
aas
test
stos
pop
xchg
lods
push
sub
lock
mov
shlb
and
inc
sti
dec
sbb
je
scas
cli
leave
lock
pop
sub
push
mov
pop
flds
rorl
mov
popa
jp
movsb
gs
sub
outsl
add
jmp
inc
xor
push
ret
mov
inc
mulb
pop
mov
mov
stos
arpl
mov
hlt
xchg
xchg
adc
jp
xchg
mov
andl
stos
jl
and
lahf
sahf
fstpt
movsl
xlat
mov
xchg
in
cmc
jecxz
ret
adc
les
lea
cwtl
std
hlt
insl
and
mov
popl
imul
xchg
ret
jmp
xchg
sbb
das
out
and
call
ds
insl
fildl
adc
or
aaa
push
mov
jno
fdivs
mov
mov
stos
adc
sub
push
imul
and
addl
cmp
fwait
out
pop
icebp
rorb
xchg
fildll
xor
add
repz
adc
mov
cwtl
pop
inc
into
and
inc
out
xchg
dec
mov
jl
ja
push
mov
aam
xchg
aam
inc
pop
inc
stos
push
mov
or
or
loop
and
lea
popf
int3
and
ret
push
cltd
fstpt
nop
jmp
out
pop
add
test
push
int3
loope
sar
inc
xor
repnz
or
aam
test
mov
ret
jg
cmp
mov
pop
loopne
fldl
jo
xchg
mov
hlt
mov
cmp
fisttpl
xchg
rcr
repz
rorl
sahf
jbe
ficoms
pop
mov
in
lahf
icebp
ds
and
std
in
mov
les
xor
inc
shl
icebp
call
scas
mov
mov
imul
dec
push
cld
sub
punpckhwd
pop
shlb
aam
fs
das
mov
insb
or
nop
in
pop
or
and
cltd
iret
cltd
inc
add
les
jns
adc
sub
sub
inc
push
pop
cs
scas
aad
pop
es
jge
xor
sbb
mov
or
sbb
xchg
leave
cmpsl
push
aam
push
pop
xor
cli
js
pop
pop
mov
pop
pop
scas
rorb
sub
das
test
xor
outsl
jae
sbb
sbb
sbb
mov
int3
dec
and
mov
cwtl
or
outsb
outsb
sub
pop
jns
pop
divl
sahf
add
xor
adc
iret
push
andb
jmp
idivl
cmpsb
or
pop
or
lret
mov
dec
and
stos
xor
sub
movsl
dec
dec
sbb
in
jmp
iret
imul
ficompl
je
xor
test
cmc
mov
jb
lcall
fwait
pop
cmp
sbb
pop
cs
cmp
lea
je
iret
or
nop
push
jp
test
push
rcr
ljmp
xor
test
aaa
cld
pop
sub
insl
neg
cmp
mov
popa
mov
je
icebp
loopne
hlt
sub
mov
aas
popa
xchg
rcrb
sub
dec
cmp
test
mov
imul
movsl
into
add
mov
cli
bound
mov
std
sbb
dec
movsb
ja
xchg
xorl
xchg
jns
fwait
pop
mov
xlat
arpl
adc
scas
std
sbb
and
or
push
pop
push
cmp
sbb
push
les
add
sub
imul
loopne
popa
test
adc
adc
push
roll
adc
pop
and
rcrb
xorb
jne
cmc
stos
std
sarb
pop
lret
rcrb
jns
xchg
fidivs
cmp
ds
push
add
std
xchg
xor
lahf
fcomi
movsb
cwtl
or
stc
xor
cmp
ds
enter
clc
pop
pop
insl
jo
jle
pop
gs
popf
sbb
testb
mov
aad
cld
fs
pop
jb
cld
mov
or
cmp
and
fistl
lea
das
in
mov
add
xor
aad
or
movsb
xchg
dec
and
scas
push
orl
adc
xor
mov
addb
movsl
pop
dec
xchg
subb
scas
cmpsl
scas
jmp
or
fnsave
adc
jne
or
and
mov
into
inc
mull
cmp
push
jecxz
jb
sbb
rorb
movsb
push
mov
push
out
jl
dec
sti
shrb
push
sbb
push
inc
xchg
pop
inc
repnz
ret
mov
sub
or
or
out
gs
aaa
inc
sbb
fisttps
push
add
fldenv
mov
or
filds
mov
lret
jp
pop
pop
or
dec
pop
push
lahf
jb
push
es
loope
inc
mov
jbe
sbb
jge
gs
mov
xchg
fdivrl
adc
aad
and
cmp
divb
repnz
xor
ret
xchg
out
adc
clc
jnp
fdivrl
lea
aad
aas
and
cmpsb
mov
add
or
cmp
jp
jns
rol
sbb
pop
jge
lea
add
jmp
jmp
inc
imul
in
push
jle
popf
scas
sahf
mov
cmpsb
daa
insb
jle
push
out
lret
jns
fst
mov
out
aad
xor
stc
loop
adc
imull
jne
push
mov
mov
enter
cli
sbb
inc
mov
mov
mov
aam
push
fcmovbe
add
inc
mov
jbe
xchg
je
sub
mov
movsl
push
push
sbb
pop
arpl
jne
xor
and
or
mov
ror
xor
xchg
or
jne
pop
sbb
push
fcomip
mov
loopne
stc
ja
sub
push
and
mov
iret
push
sub
pop
pushf
pop
push
loop
and
daa
addr16
dec
pop
mov
xlat
sahf
xchg
dec
decl
movsl
sub
test
imul
aam
sbb
stos
push
mov
inc
clc
repnz
inc
andb
sbb
push
mov
xchg
pusha
cmc
movzbl
cmpb
outsl
cmpsb
xchg
push
and
outsb
push
fmul
inc
rorb
in
ret
movsl
out
test
out
jnp
lahf
out
test
loop
sbb
roll
xchg
xor
clc
mov
aad
out
outsb
aam
xor
sbb
or
sbb
push
pop
dec
dec
pop
mov
mov
stc
fcmove
lret
sub
cmp
or
sbb
push
pop
dec
dec
pop
mov
mov
stc
fcmove
lret
sub
or
jp
push
pop
dec
dec
pop
mov
mov
stc
fcmove
enter
sub
sbb
or
fcmove
lret
push
push
adc
mov
push
and
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
dec
or
dec
xchg
cmp
adc
ja
imul
shll
loope
icebp
pop
or
adc
and
xor
inc
mov
cmpsl
popa
xchg
jno
shll
addr16
ja
inc
rcll
pop
icebp
pop
fucomi
xchg
out
iret
neg
push
scas
sbb
adcl
dec
xchg
inc
addb
divl
mov
inc
dec
lret
jle
or
mov
xchg
in
scas
push
cmp
sbb
xchg
sbb
inc
cmpsb
sbb
cmp
cmp
pop
dec
sbb
insb
pop
inc
pop
inc
inc
mov
jb
pop
jl
push
or
pusha
and
and
shl
cmpsl
pop
jmp
ret
pop
daa
adc
scas
pop
inc
cmpsl
imul
inc
xchg
scas
addr16
iret
jae
xchg
daa
ret
mov
mov
hlt
popf
push
insl
test
in
push
fisubrs
icebp
daa
mov
cmp
pop
adc
stos
mov
test
test
adc
xchg
or
lea
or
imul
rcll
call
adc
and
pop
fldl
adc
sahf
jae
add
dec
scas
pop
mov
pop
xchg
arpl
addr16
pop
das
loope
leave
jb
adc
loopne
rcrb
icebp
add
sub
pop
mov
add
cli
ret
xor
mov
and
add
inc
mov
xchg
jnp
bound
and
add
push
cmpsl
popa
xchg
jno
xorl
inc
shll
daa
loope
icebp
pop
add
adc
and
xor
inc
mov
cmpsl
popa
xchg
jno
xorl
inc
shll
daa
loope
icebp
pop
add
aad
mov
outsb
aam
mov
inc
jae
int
mov
sbb
xor
or
cmp
stos
lods
pop
xchg
sub
and
repz
out
jae
push
xchg
ljmp
push
inc
inc
xchg
cmp
dec
loope
fistpl
mov
mov
loope
fimull
flds
dec
loop
es
lret
mov
ljmp
sub
pusha
pop
fnstenv
sub
pop
aaa
mov
ret
xor
out
jbe
cmc
sarl
xchg
cwtl
and
jge
sub
lds
mov
out
lods
mov
nop
mov
push
sub
in
fnsave
fsubrl
clc
insb
jmp
nop
add
xor
js
imul
sub
inc
shlb
movsb
and
imul
cli
push
lahf
pop
imul
repnz
loop
repz
xchg
lcall
imul
ret
and
addr16
sahf
das
ror
stos
rcr
test
mov
push
fwait
lods
cmpsl
pop
fiaddl
xor
sbb
lock
ret
sbb
xchg
inc
jmp
movsl
push
cmp
mov
pop
pop
mov
pop
lret
mov
inc
sbb
pop
push
scas
xor
lret
and
jl
lock
mov
scas
sahf
lret
xchg
adc
je
cmpsl
or
lods
mov
mov
push
cli
rolb
dec
jbe
sbb
lods
shll
jecxz
call
inc
pop
movsb
sub
mov
ljmp
or
cld
inc
fiaddl
scas
mov
dec
jns
pop
les
cltd
mov
fstpt
mov
add
icebp
inc
test
or
add
subl
cmpsb
test
push
call
repnz
loopne
std
mov
push
outsb
mov
inc
mov
adc
test
aad
cmp
test
mov
xchg
sub
pushf
shlb
aad
xor
imul
pushf
push
test
scas
mov
xchg
mov
mov
sub
repnz
mov
mov
xchg
mov
mov
and
sub
leave
js
adc
scas
lock
sahf
dec
bound
or
dec
and
add
jae
add
or
ja
fsubrl
xchg
pop
or
in
mov
xchg
xor
fwait
xor
push
bound
call
push
scas
mov
mov
cltd
pop
sbbl
stos
int3
or
or
push
pop
xchg
pop
xor
shlb
or
add
mov
scas
mov
lods
pslld
out
and
xor
cmpsb
jp
and
imul
add
mov
xchg
cmp
mov
mov
push
repnz
jnp
cld
fprem
dec
xor
sahf
es
aaa
jp
stc
loop
adc
sub
push
mov
out
pop
or
xor
loop
lcall
add
adc
adc
jbe
push
jne
push
sbb
lret
and
push
mov
fadd
pusha
pop
cwtl
xchg
and
or
sub
sti
ja
or
inc
jne
loop
stc
xor
idivl
mov
mul
fs
jge
xchg
or
addr16
inc
xchg
inc
fisttps
ds
fldl
jl
xchg
repz
cmp
movb
lret
push
aam
test
out
sub
sub
mov
adcl
and
cmp
inc
mov
xlat
dec
repz
pop
daa
push
sub
pop
mov
ja
pop
lods
hlt
pop
or
iret
stos
int
insb
ret
roll
lahf
sahf
inc
cmp
mov
ret
pop
out
mov
add
sbb
sbb
ljmp
xor
addl
inc
shrb
test
aas
cmc
push
or
dec
dec
xchg
lods
lahf
dec
insb
sahf
pop
inc
mov
idivb
sti
push
in
fwait
mov
xchg
fcompl
add
lcall
and
push
sub
icebp
out
les
jbe
fimuls
cmp
mov
cltd
test
and
popf
xor
inc
add
inc
fcoms
test
ret
repz
fwait
in
jno
popf
data16
pop
call
lahf
test
adc
cmp
xchg
inc
and
adc
cmc
popf
in
add
cmp
add
scas
addb
jp
stos
push
sub
jmp
inc
inc
jp
add
or
fnstcw
xchg
jle
or
adc
roll
xor
shrb
mov
sub
fsubr
jg
push
ja
inc
les
jecxz
jecxz
testl
call
rcrl
adc
sahf
mov
ja
mov
add
cmpsl
pop
pushw
wbinvd
jo
sbb
xor
in
jo
cld
rcrb
pop
xchg
xchg
push
mov
mov
negl
stc
daa
dec
mov
xchg
int
mov
mov
vmovsldup
mov
xchg
sbb
les
loop
lret
sbb
push
push
and
cmpsb
int3
mov
add
push
hlt
enter
std
mov
inc
fsubl
jno
or
xor
mov
and
dec
outsl
or
mov
dec
and
and
std
push
lods
mov
movsl
das
adc
inc
ljmp
lea
push
mov
testb
jge
pusha
sbb
insl
jge
xor
xor
sub
fimull
xor
dec
adc
lock
popa
inc
push
iret
sbb
mov
cmp
loope
daa
shl
dec
bound
repz
dec
lea
data16
les
adc
jnp
adc
shlb
xchg
xchg
fucom
lahf
and
xor
fstpl
test
int
repnz
movd
cmp
les
bound
ds
dec
xor
fsubr
mov
out
push
stc
xor
adc
out
andl
cmp
inc
cmp
imul
jmp
dec
lds
loopne
xchg
mov
or
insl
adc
jge
outsl
sbb
cmpb
xchg
ja
call
lods
mov
rolb
arpl
clc
jp
add
sahf
roll
and
mov
insl
pop
xor
dec
inc
mov
lock
inc
in
dec
push
xchg
sub
adc
cli
lods
xor
cmp
out
inc
shll
daa
pop
ret
shll
lods
push
sti
repnz
add
repz
fnstenv
mov
ja
rcll
jae
sub
dec
popf
dec
mov
dec
mov
fadd
add
lods
test
cltd
ret
mov
push
fcompl
fld
inc
aas
xchg
push
jecxz
cwtl
stc
int
stos
leave
jle
mov
aad
or
out
push
jnp
or
cltd
fwait
mov
jae
mov
xor
push
outsl
loopne
pop
or
fstpl
int3
add
fisubl
add
scas
fidivl
fwait
call
add
xor
or
dec
sbb
stc
xchg
ror
xchg
fbld
aad
and
fucom
inc
cs
fdivrs
out
outsl
decl
pop
lock
es
pop
mov
stos
mov
out
cld
xor
cmpsl
lds
cwtl
inc
out
in
cmp
and
clc
push
rcl
mov
pop
mov
xchg
push
jl
movups
data16
dec
xchg
mov
lods
std
int
pop
lret
ret
cmp
pop
mov
xor
call
jmp
call
mov
aas
mov
or
sub
repnz
movsl
mov
ret
test
fst
sub
xchg
cli
xlat
hlt
xor
in
hlt
addl
mov
sti
sahf
pusha
pop
leave
out
jnp
sbb
jnp
mov
adc
sub
sub
loop
cmp
aas
and
mov
mov
popa
mov
xor
jae
es
jo
adc
shrl
push
adc
add
pop
jl
adc
nop
adc
popf
cmpsb
call
push
test
mov
pop
pop
push
dec
push
mov
scas
add
leave
or
xor
pop
fcoml
outsb
mov
in
lcall
inc
loop
inc
movsb
lcall
push
sub
inc
sbb
into
pop
bound
hlt
fmull
and
and
and
cld
rcr
stos
popa
lret
fs
clc
sub
push
xor
lahf
std
and
pop
pop
rcrb
cmp
or
cmc
out
jae
mov
sbb
add
cmp
clc
pop
leave
frstor
and
aad
mov
fdivl
xchg
je
xchg
outsb
xor
inc
fisubrl
xchg
mov
insb
ret
outsl
jns
iret
pusha
sbb
mov
cmp
pop
xchg
mov
out
bound
pop
lea
xchg
in
add
pop
pop
inc
sub
dec
and
aad
nop
hlt
jg
gs
xor
xchg
test
pop
mov
das
lock
adc
outsl
sbbb
movsl
outsl
sbbl
xchg
mov
pop
stos
pop
xor
stos
mov
dec
pusha
xchg
fcoms
into
js
xor
xor
inc
xchg
daa
ret
loope
sub
pop
dec
adc
add
or
outsb
scas
gs
xchg
cmc
in
int3
mov
icebp
stos
insl
cmpsl
mov
pop
push
adc
outsb
jnp
mov
sbb
icebp
sub
mov
cmp
sub
lock
push
lret
cmp
dec
mov
sub
out
lcall
mov
sub
pusha
sub
xchg
lret
jnp
xchg
xchg
jle
out
lods
mov
pop
gs
mov
mov
add
cmpsb
mov
int3
fdivrl
scas
ds
pop
arpl
dec
jne
and
mov
notl
xor
push
push
pop
movb
in
cltd
pushf
pushf
negb
jns
add
stos
fmull
imul
das
mov
xchg
repz
mov
in
push
cmpsb
in
push
push
sarl
mov
out
mov
mov
sub
out
xor
test
add
in
mov
sbb
mov
xor
mov
add
sbb
fs
and
rorl
jno
xor
das
sbb
cmp
mov
pop
pop
pop
and
pop
pop
cld
xchg
mov
cltd
or
enter
xchg
sbb
xor
shlb
push
movsb
sub
fsubrl
aaa
xchg
dec
inc
cmp
scas
scas
jae
imul
rclb
or
cmp
mov
inc
or
push
sbb
out
ds
and
push
repnz
out
xlat
lahf
or
ds
shlb
xlat
ss
push
jg
mov
dec
and
js
xchg
pop
cmc
push
mov
add
add
lahf
add
dec
pop
pop
push
sub
cltd
add
mov
mov
aam
push
sub
and
fnsave
imul
lcall
mov
push
stc
daa
fwait
add
fs
jl
add
inc
cmp
leave
sti
jbe
push
cmp
xchg
sub
xor
or
insl
js
mov
mov
jp
inc
movsb
mov
nop
mov
sub
lcall
int
pop
mov
xchg
shrb
push
es
mov
insl
mov
pop
aad
aam
dec
or
adc
jp
in
hlt
fistl
nop
and
enter
js
cmc
lret
mov
arpl
dec
pop
jmp
add
sbb
or
mov
inc
cld
insl
aas
lahf
cmpl
in
lods
xor
ret
movsb
ljmp
fdivr
daa
push
icebp
sti
adc
jle
jp
shrb
ficomps
popf
div
cmc
pop
cmp
mov
stos
clc
pop
arpl
nop
sub
xor
mov
cmp
mov
xchg
lcall
int
mov
cmp
jae
xlat
pop
outsl
jne
sub
or
cmpsl
sbb
push
xchg
add
jmp
aaa
inc
leave
sub
lret
cmp
out
sbbl
stos
xor
pushf
push
and
ja
in
dec
jb
mov
cmpl
mov
mov
call
pop
pop
pop
test
std
dec
xor
inc
pop
stc
push
mov
mov
ja
stos
jbe
xchg
jae
and
fcom
sahf
rol
pop
pop
out
xchg
and
xchg
xlat
jle
bound
adc
imul
ror
insb
mov
cmp
insl
jns
dec
cltd
ljmp
push
lahf
or
fidivl
pop
lcall
mov
or
xchg
sbb
outsl
push
jno
mov
add
add
push
push
push
les
cmp
xchg
ds
mov
add
fdiv
pop
loop
adcl
scas
out
cmp
dec
fwait
or
push
addr16
mov
mov
addr16
mov
inc
imul
push
mov
cmp
fistpl
je
xchg
add
shl
loope
jle
adc
cmc
rol
cmpsl
jbe
dec
pop
dec
sahf
mov
arpl
xchg
xor
popa
pop
push
dec
loop
mov
pop
dec
pushf
ret
mov
lcall
cmp
shr
and
int3
scas
daa
sub
adc
xchg
scas
fstp
ljmp
or
xchg
imul
mov
repnz
insb
cwtl
adc
mov
xor
xlat
ss
cmp
popf
push
xchg
jnp
fidivrl
addr16
scas
inc
push
lcall
sub
push
add
mov
cli
sub
xchg
jl
scas
iret
icebp
addr16
es
jp
adc
das
fs
sti
icebp
mov
cmpsb
push
stos
or
gs
repz
dec
stos
xlat
jbe
lds
mov
dec
test
daa
imul
push
xor
or
xchg
lock
sbb
outsl
push
rcl
adc
or
jg
mov
clc
fisubl
sbb
jo
dec
sti
cmpsl
gs
pop
and
je
sbb
pop
stos
mov
inc
aam
mov
jge
popf
xchg
cmp
pop
sahf
and
pop
jo
cli
push
push
cld
shll
and
sbbl
xchg
cltd
test
fsubrp
dec
inc
fbstp
push
inc
xlat
stc
xor
xchg
test
push
lret
les
in
xchg
pop
mov
adc
icebp
cwtl
inc
cmp
out
into
xor
cld
mov
push
mov
js
stos
das
mov
sub
xchg
and
shlb
lcall
mov
daa
xchg
dec
ljmp
add
sbb
mov
mov
in
dec
and
adc
ds
es
dec
mov
int
lahf
xchg
inc
jmp
stos
xchg
cld
shrl
rcll
xor
jg
mov
clc
leave
and
rorw
pop
mov
sar
es
daa
out
add
sbb
xchg
orb
xchg
fldln2
sbb
test
mov
jecxz
and
dec
repz
hlt
pushl
aam
mov
mov
and
inc
ret
mull
jmp
arpl
out
sbb
loopne
xorl
ljmp
dec
pop
mov
pusha
jecxz
lds
adc
jno
jecxz
mov
movsl
loopne
aas
in
fisttpl
jge
pusha
sub
jle
stos
push
jno
ljmp
das
or
add
aad
pop
ss
jl
pusha
add
jbe
clc
ret
inc
add
stos
jnp
mov
nop
fsubrp
jno
std
lods
mov
fistps
and
negl
pop
hlt
adc
test
les
std
cmp
pop
in
or
inc
push
xchg
cs
insl
cmp
std
xchg
fisttpl
arpl
movsl
inc
fucomp
dec
cmp
daa
mov
cli
jae
mov
into
and
pop
mov
mov
loop
je
test
or
mov
cli
lret
adc
cld
mov
fmull
push
push
lret
jge
cs
popf
mov
dec
xor
in
or
lea
xlat
cmc
dec
push
lret
push
fsubrl
push
sub
fisubrl
scas
je
mov
mov
js
fwait
sbbb
popf
adc
dec
xor
shrl
push
icebp
pushf
mov
popf
daa
repnz
mov
lret
mov
jl
fisttps
xchg
sub
in
lret
subl
lret
enter
js
int3
xchg
mov
jle
movsb
mov
xchg
fldt
xchg
mov
out
mov
lahf
mov
add
outsb
pop
cmp
cmp
xor
xchg
adc
outsb
repz
pop
lods
cld
sub
inc
ds
pop
cmp
jbe
mov
add
stos
sub
pop
repnz
add
dec
pusha
mov
push
mov
or
push
mov
add
in
xchg
add
enter
dec
cmp
lock
outsb
add
pop
lea
ret
sbb
adc
xchg
adc
adc
sbb
sub
mov
sub
aad
and
dec
add
test
mov
mov
xchg
inc
xlat
bound
xchg
cs
mov
sti
ss
daa
push
jecxz
xor
aaa
push
cmp
sbb
test
xlat
test
add
inc
fcompl
xor
test
and
cmpsl
out
xor
loopne
cmp
xorl
mov
adc
adc
aad
sbb
jp
in
sbb
daa
js
adc
ret
insb
push
cmp
push
movsb
sbb
add
popa
cmpsl
pop
enter
int3
push
movsb
sti
out
out
enter
adc
popa
cmp
mull
dec
loop
int
pop
or
je
or
mov
aad
xor
push
jo
jge
daa
pop
jmp
and
cmp
or
or
das
in
loop
pop
out
and
pop
repz
cmpl
mov
or
jo
mov
and
cmpsl
xorl
punpcklbw
push
hlt
push
rcrl
mov
mov
int3
cli
cmc
sahf
leave
or
jge
fwait
cmpsb
xchg
dec
adcb
mov
mov
int3
scas
scas
test
movsl
jle
ss
cwtl
insl
lods
xor
mov
lret
mov
ret
fwait
lods
clc
mov
inc
add
aad
test
dec
iret
dec
pop
pusha
js
xchg
jo
popf
cmp
mov
sbb
dec
sbb
out
mov
mov
xor
jp
jbe
iret
cmpsl
test
lea
add
test
and
pop
in
jno
nop
gs
fwait
mov
inc
je
loope
mov
into
jp
push
fbld
lock
sub
jb
push
sbb
mov
out
in
jnp
sub
pop
inc
mov
call
sbb
outsl
lea
jne
mov
push
mov
add
inc
mov
scas
cmp
in
enter
icebp
lret
dec
pop
inc
in
xor
jnp
mov
sahf
or
loopne
dec
mov
pop
and
xchg
aad
pop
dec
dec
sarb
stc
dec
add
mov
ja
xchg
psubd
imul
lods
adc
dec
lock
lods
jno,pt
fstpt
ss
out
mov
out
pushf
ja
sbb
add
fcmovnbe
test
data16
mov
pop
das
xchg
cli
sahf
cmp
insl
std
fs
mov
out
scas
insl
jo
std
mov
not
scas
push
cmp
xchg
lds
addr16
daa
add
mov
mov
adc
lret
mov
mov
in
pop
testb
inc
rol
sbb
push
std
aad
jecxz
or
xchg
push
dec
scas
push
lea
cwtl
jb
dec
inc
ljmp
jb
xor
sub
inc
adc
out
out
mov
jne
fcompl
or
pop
sbb
xchg
notb
inc
out
jbe
les
fwait
mov
in
jns
out
xchg
lret
in
stos
mov
or
fdiv
int3
xlat
xor
add
push
cmp
jge
mov
fs
cmp
in
pop
lea
mov
cmpsl
mov
lcall
add
pop
and
cmp
and
xchg
in
lds
or
pushf
aaa
jmp
jecxz
inc
adc
cmp
jns
pop
inc
sub
ret
mov
add
mov
cli
xchg
jmp
jp
xor
out
lret
jecxz
and
and
cli
sub
cmp
lret
daa
iret
addr16
aaa
std
roll
aam
and
out
ja
xorl
pushfw
rcrl
ret
ret
call
fstl
cltd
clc
mov
lea
lock
das
fsubr
xchg
pop
das
fimull
mov
das
or
push
mov
es
sbb
out
cmp
cmpsl
popa
xchg
jno
xorl
inc
shll
daa
loope
icebp
pop
add
adc
and
xor
inc
mov
cmpsl
popa
xchg
jno
xorl
inc
shll
daa
loope
icebp
pop
add
adc
xor
xor
inc
mov
cmpsl
popa
xchg
jo
test
addr16
mov
shll
daa
in
roll
idivl
movl
icebp
xchg
push
mov
mov
pop
fcomps
call
mov
subl
ljmp
cmp
add
adc
arpl
push
mov
subl
jecxz
repz
and
xor
arpl
push
mov
subl
jecxz
repz
and
fnsave
jbe
arpl
add
add
cmp
addl
sub
lret
sub
pop
cmp
push
sbb
or
clc
push
stos
movsl
adc
dec
sbb
or
jecxz
repz
sub
jge
and
in
jo
clc
jae
adc
adc
ficoml
mov
and
or
rcrl
sub
clc
pop
rclb
mov
mov
or
lcall
mov
adc
lods
xor
jae
mov
lods
mov
sbb
rorl
aas
cmp
and
cmp
xor
push
xor
or
js
nop
addr16
ret
frstor
std
jns
xchg
push
mov
subl
jecxz
repz
and
xor
add
adc
arpl
push
aam
and
pop
lds
sbb
push
test
test
in
xor
es
and
aad
pop
loopne
rorb
xchg
jns
pop
xchg
cmp
jle
adc
sub
cmp
les
push
lds
repz
and
xor
add
adc
arpl
push
mov
subl
jecxz
repz
and
xor
add
adc
arpl
push
mov
push
fucomip
cmp
ror
and
insl
xchg
aas
push
sti
rorl
sub
sub
fwait
mov
mov
aas
lods
js
jbe
leave
arpl
into
insl
lret
jns
movsl
lret
sbb
lds
sub
in
imul
jp
xor
sahf
xor
stc
push
push
mov
insb
ss
cmpsl
jle
rcll
mov
add
mov
mov
in
mov
sub
test
pop
in
fisttpl
cld
jecxz
xor
hlt
lret
out
inc
jb
int
and
or
js
cs
sub
sbb
adc
movsb
sbb
insl
out
hlt
imul
push
fcmove
sti
pusha
or
mov
insl
mov
stc
dec
mov
aam
es
test
adc
or
shrl
aad
mov
subb
inc
xor
pop
mov
arpl
sahf
in
xchg
jns
out
cmp
sahf
xchg
cltd
lods
mov
pusha
xor
or
scas
inc
xchg
mov
ds
fwait
fwait
or
cs
cmp
jmp
jg
cmp
int3
rcrb
sbb
nop
xor
mov
mov
fs
das
shl
stos
xor
push
xor
negl
pop
js
push
or
adc
jmp
rcr
and
repnz
test
cmpsl
dec
xchg
push
sbb
jecxz
repz
pop
lret
and
dec
fdivrl
cmp
xor
sub
push
inc
and
or
mov
xor
sbbb
dec
cmp
std
xlat
sbb
scas
insb
insb
mov
iret
xchg
jl
xor
iret
sub
pop
sbb
jl
mov
aaa
and
imul
xchg
leave
fucomi
jae
shr
xchg
adc
xor
test
loopne
movsb
jecxz
insl
push
xor
imul
int
adc
inc
cmp
or
rorl
cmc
and
loop
out
and
int3
inc
aas
arpl
ret
aaa
out
cld
stc
imul
sub
js
sbb
xchg
cli
dec
cmp
cmp
mov
fwait
xchg
mov
push
rcrb
inc
adc
gs
je
xor
cwtl
ret
jno
push
mov
xor
addr16
mulb
push
int
outsb
pusha
push
cmp
cs
in
push
mov
cmp
mov
lods
loope
pop
fadd
push
push
add
push
sub
sbb
rolb
pop
mov
in
imul
mov
cmp
xor
gs
sbb
add
shll
push
int3
mov
dec
data16
mov
cmpsl
cmp
fcoms
into
jbe
jne
cmp
push
jnp
pop
xor
sahf
push
rol
xchg
je
and
cli
push
jns
cli
mov
sarl
out
fsubrs
sub
jmp
xor
cmc
negl
add
cmpps
icebp
push
cs
push
shl
and
jnp
sub
fmuls
gs
insb
push
cmp
pop
test
loop
les
mov
xchg
sbb
adc
inc
stos
dec
xchg
scas
ljmp
sub
mov
mov
cmpsl
ss
push
cmc
rorb
mov
xchg
jmp
sti
and
lock
cmp
dec
mov
and
stc
stos
in
cltd
xor
int3
setp
pop
mov
or
mov
jecxz
xor
int
mov
ret
jge
les
aaa
stc
cwtl
dec
cmp
sbb
sub
mov
cmp
movb
lcall
sbb
ss
sbb
mov
cmpsl
pop
rorb
and
mov
pop
out
and
mov
lock
cli
xor
scas
test
jg
sub
iret
cli
cmpsl
pop
mov
ds
popf
mov
lret
mov
data16
add
mov
in
fldcw
orb
mov
xchg
push
lret
pushf
sub
and
cmp
ret
into
jno
lds
or
sahf
push
mov
inc
xor
sbb
mov
mov
push
dec
fidivrs
dec
sahf
push
or
adc
inc
pop
outsb
lea
loop
pop
adc
and
enter
dec
cmp
decb
dec
mov
jle
cmp
mov
mov
add
dec
sbb
jno
jae
icebp
mulb
xlat
icebp
and
fnstcw
int3
pop
add
outsl
or
lcall
and
cli
out
daa
cmp
add
xchg
push
pop
sbb
js
xor
add
pushf
adc
dec
jns
push
jge
cmc
or
rolb
dec
into
push
sbb
cs
push
push
xchg
repz
rcl
pop
cmp
or
repnz
rcll
outsl
addl
ss
add
mov
add
jl
loop
lods
or
mov
xchg
ret
pusha
sti
push
add
das
rorl
inc
mov
shll
aaa
cwtl
out
mov
mov
dec
or
mov
jns
cmp
sbb
and
test
das
enter
ljmp
movsl
imul
add
jg,pn
mov
adc
ja
push
xor
sub
pop
clc
sarl
ds
or
shll
jge
adc
mov
fistpl
retw
mov
sti
outsl
lahf
shlb
sbb
jbe
xlat
sub
sub
mov
xchg
xchg
fsubrl
pushf
pop
outsb
pop
addr16
outsl
jmp
clc
add
jns
jne
pop
pop
push
int
in
mov
xchg
xorl
sbb
cmp
mov
scas
scas
std
call
pusha
test
stc
aas
cmpsl
sbb
lret
add
or
inc
xor
pop
mov
jmp
aas
adc
fcoms
push
inc
mov
push
test
jae
ret
lret
xchg
or
cmp
jnp
fsub
mov
shlb
lret
mov
mov
push
lcall
push
ljmp
inc
fidivrl
pushf
out
xchg
stos
adc
into
cmpsb
je
ss
aad
sub
pop
jnp
cmp
ret
mov
cltd
xlat
popa
repz
pop
test
cmp
into
cmp
sub
or
mov
mov
cmpsl
add
leave
dec
jne
loope
push
add
pop
fimull
test
pop
cltd
pop
mul
sbb
je
btl
adcb
mov
mov
xchg
dec
jp
sbb
pop
adcl
push
int
xchg
sub
scas
mov
out
jle
sub
iret
icebp
jnp
out
inc
or
sbb
pop
pop
xchg
xchg
cli
push
ja
int
push
push
jbe
push
testl
push
inc
das
aam
movsl
and
push
lret
movsb
mov
xchg
loopne
xchg
sbb
cmc
leave
into
xchg
push
sbb
mov
mov
cmp
jl
dec
mov
int3
mov
lods
out
mov
mov
lea
add
and
add
adc
and
adc
pop
or
inc
lcall
inc
pusha
fdivs
repnz
es
mov
popf
fsubr
cmp
cmp
adc
xor
xchg
andl
shll
mov
pop
xor
xchg
mov
cli
sbb
int
sbb
scas
inc
rorl
fstl
stos
stos
enter
cs
sbb
pop
inc
pop
out
cmpsl
stos
pop
mov
push
inc
mov
enter
imul
je
mov
jecxz
pusha
pushl
mov
or
in
das
fadd
mov
movsb
dec
mov
push
ljmp
pop
stos
cltd
dec
in
insb
jg
and
xlat
jmp
push
or
inc
dec
sub
out
pop
mov
jns
mov
cmp
jbe
xlat
outsl
inc
adc
jg
or
les
mov
cmp
fs
nop
hlt
inc
jp
orb
xor
leave
gs
aam
dec
sbb
das
cs
pop
cmpsl
mov
cmp
mov
lds
or
outsb
push
cs
pop
pop
push
test
jp
mov
ficomps
mov
aaa
sub
add
cmpsl
add
out
ljmp
aas
add
jns
mov
cltd
push
push
lods
fsubr
add
aaa
pop
mov
dec
inc
dec
in
mov
sub
push
pusha
jecxz
lret
popa
xchg
ds
popl
frstor
pop
loopne
in
pop
xor
fsubr
ret
inc
stos
push
cwtl
jb
mov
jg
int
hlt
inc
cmpsl
imul
push
or
pop
jne
es
xor
mov
sub
aad
jb
mov
call
inc
ss
mov
mov
out
dec
cwtl
mov
pop
cs
mov
ja
out
fldl
push
jmp
adc
lods
adc
ljmp
rorl
pop
push
scas
xor
jae
push
fimuls
and
jo
dec
dec
push
gs
and
inc
pop
sbb
xor
out
gs
out
mov
jmp
mov
shlb
dec
ds
lcall
cmp
test
inc
sub
jbe
jmp
adc
leave
lods
test
xchg
push
or
dec
pushf
outsb
int3
cmpsl
lcall
inc
sub
or
fsts
pop
and
sub
xchg
dec
xchg
add
push
movsl
xchg
test
popa
mov
dec
or
mov
daa
js
dec
mov
sbb
inc
add
inc
xor
test
push
jle
adc
cmpsl
mov
imul
push
inc
push
inc
les
mov
into
push
adc
sub
pop
mov
push
shl
push
adc
js
xchg
dec
sbb
sub
inc
cmp
sti
jne
and
loopne
and
jne
push
sti
and
int3
xor
xchg
fnstcw
push
lahf
and
insl
jae
mov
movb
mov
xor
call
bound
stc
lds
pushf
mov
cmp
ret
mov
mov
dec
out
pop
setge
es
mov
dec
stc
add
andl
xor
cltd
or
or
fxch
cltd
push
inc
sbb
sub
cmpl
je
cmp
push
mov
scas
cmp
lahf
outsl
and
rorl
fst
push
divl
xchg
lock
lock
sahf
outsb
je
xchg
adcb
pop
add
sahf
jp
pop
or
stc
mov
scas
sbb
in
js
pop
sarl
inc
cmc
sub
fcoml
pop
rolb
std
lret
sbb
add
add
push
xor
dec
sub
int3
push
pop
xor
push
fldcw
mov
jbe
ja
aas
push
jp
push
aad
lods
pop
sti
icebp
stc
icebp
jbe
jns
popf
or
aad
dec
add
subb
movl
xchg
fisttpl
dec
adc
adc
mov
push
popf
cmp
call
push
js
jle
jne
lret
loopne
mov
and
rcl
jle
or
hlt
ljmp
fwait
push
test
push
add
pop
std
idiv
dec
fsubl
popf
call
rorb
and
adc
rcll
pop
xor
cmpsb
inc
outsl
adc
push
jmp
xchg
dec
and
and
add
lock
inc
pushl
cmp
and
lcall
xchg
push
imul
bound
mov
jbe
xor
sub
enter
sahf
or
inc
mov
faddl
roll
jb
jmp
jle
into
ret
cli
pop
hlt
mov
push
mov
jnp
jmp
cmpsl
push
sbb
cmp
sub
lret
ja
push
roll
sbb
sub
mov
ja
cmp
rclb
add
divb
jge
mov
cmp
rcrl
cmpsl
cwtl
jmp
pop
push
xor
repz
adc
fnstsw
lods
cmpsb
bswap
mov
lret
mov
cmc
ret
mov
add
mov
and
stc
lret
mov
jmp
daa
jbe
adc
push
loope
mov
movsb
je
mov
out
jl
cmpb
movsl
mov
mov
divl
jns
clc
fdivl
loope
std
pop
fsubrs
xchg
lods
addr16
loopne
stos
jmp
dec
inc
int
rcr
ret
xchg
ja
rcl
mov
fdivs
into
mov
je
push
pop
nop
movd
xchg
mov
movsl
dec
sbb
rorb
xchg
sub
push
add
sbb
pop
pop
push
dec
outsb
xchg
js
push
jae
cltd
pop
cli
mov
inc
or
mov
sbb
pop
mov
pop
jbe
jmp
in
push
sbb
scas
cli
inc
push
stos
xor
cld
xor
jg
or
xchg
rcll
cmp
inc
cmpsb
into
insl
push
cmp
outsb
lds
clc
and
js
lods
stos
scas
cltd
int3
sti
mov
aam
xor
mov
js
insb
inc
test
push
lret
adc
es
pop
lock
lret
add
xor
lds
mov
mov
fnsave
mov
dec
mov
inc
mov
push
push
addb
out
mov
pop
cs
inc
and
push
mov
dec
dec
mov
mov
xor
xchg
pushf
cmp
cli
cmp
cld
lods
xor
and
xchg
rcrb
in
aad
push
and
sar
imul
out
in
inc
pop
and
mov
sarb
cmp
mov
out
roll
and
in
add
fisubs
push
lea
mov
push
aas
or
dec
in
movsb
jp
sub
fsub
loope
icebp
imul
popa
mov
popa
dec
jle
outsl
into
rcl
lods
test
cwtl
pushf
mov
sub
orb
cli
lds
inc
xchg
sar
lock
ret
imul
pusha
pop
lcall
pop
push
loope
or
call
sar
inc
bound
and
scas
mov
lcall
sub
lods
dec
outsb
loop
lods
out
sbb
hlt
mov
adc
cmp
jnp
push
add
bnd
push
cmc
mov
fsubl
add
pop
add
fnstsw
fcom
movsl
ret
fists
mull
xchg
cmpb
test
add
stos
frstor
pop
xor
and
push
or
mov
push
cwtl
jmp
mov
xor
mov
dec
xchg
shlb
dec
push
popf
loope
xor
inc
sbb
cwtl
xor
loope
adcl
mov
xor
ficoml
xor
mov
cmp
int3
stc
lcall
nop
jg
jo
dec
popl
out
adc
mov
in
loope
pop
fildll
inc
dec
jne
jecxz
movsl
jp
pusha
std
aad
aam
mov
sbb
mov
lea
fucomi
push
pop
mov
cmpsl
pop
repnz
push
dec
inc
jno
sub
jne
mov
push
in
push
outsb
test
or
imul
mov
xor
push
cmpsb
hlt
repz
add
cs
sbb
sub
pop
outsl
xor
or
pop
std
lds
std
mov
xchg
inc
das
bound
pop
pop
fcmovnbe
push
shrb
jno
inc
push
sti
testl
mov
aas
imul
je
sar
jb
lods
inc
add
dec
imul
test
out
jns
mov
sbb
scas
mov
fidivl
adc
fst
xchg
loope
loope
pushl
mov
dec
in
push
push
fwait
cli
sti
xor
and
cli
or
stos
xor
dec
jle
cmp
inc
push
outsb
andl
mov
clc
mov
push
xchg
aam
mov
cwtl
ret
jno
xor
fwait
push
mov
inc
stc
outsl
lods
jb
mov
cli
fprem
push
and
dec
lahf
lea
pop
mov
mov
pop
pusha
loop
lods
ja
adc
aam
push
adc
ret
nop
imul
cmpsb
popa
shr
dec
cmpsl
pop
stos
xchg
test
mov
cmc
mov
jb
jecxz
push
std
stc
jge
imul
mov
push
or
or
fnstsw
add
sub
xchg
jmp
sbb
cmp
inc
sbb
add
xchg
mov
int
mov
pushf
mov
leave
movsl
mov
daa
repnz
pop
jmp
jno
jle
sbb
mov
push
in
test
jne
js
adc
mov
idivb
mov
inc
mov
cld
xchg
jl
cmp
les
push
add
lods
mov
sbb
imul
movsb
cmp
dec
lret
mov
add
sub
fwait
ja
mov
pop
pop
and
pop
sub
mov
jl
adcl
fistps
fiaddl
fldenv
sbb
adc
inc
xchg
enter
pop
imul
pop
mov
fisttpl
or
lret
mov
cmp
dec
or
orb
cmp
fwait
pop
mov
pushl
hlt
push
and
cmpsl
int3
xchg
mov
jmp
xor
cwtl
push
daa
outsb
push
add
test
jne
cli
adc
jns
das
imul
sahf
push
cmp
into
pop
stos
int3
adc
dec
xchg
mov
xchg
inc
sarl
mov
inc
ret
daa
cli
inc
push
pop
lods
mov
js
rorb
test
and
jns
cmc
fldl
scas
or
cmpsb
cs
pop
xor
adc
jecxz
xor
mov
push
icebp
jmp
jge
add
cltd
out
aam
jo
mov
movsl
test
lea
daa
das
cmc
pop
stc
aam
fadd
and
xorl
or
push
movsl
xchg
mov
inc
cmc
mov
and
in
jge
push
les
push
dec
popa
cmp
in
add
adc
test
pushf
hlt
or
in
push
xor
pop
bound
sbb
lahf
push
data16
lcall
push
fisttpl
mov
cmpb
insb
cmc
sahf
ss
inc
adc
mov
inc
inc
test
push
movsl
mov
push
aaa
adc
mov
je
test
jmp
fnstsw
fbstp
xor
or
dec
and
jb
mov
mov
int
push
cmp
jb
mov
je
sbb
or
mov
lods
out
and
xchg
adc
pop
mov
rclb
imul
in
ret
mov
jb
movsl
adc
xor
aaa
jnp
sarl
inc
lea
adc
arpl
lock
cli
jmp
cs
push
jle
pop
mov
sti
mov
adc
mov
dec
push
push
imul
lcall
jbe
or
xchg
inc
mov
mov
dec
mov
or
mov
into
mov
push
sbb
jbe
sub
push
cmp
sbb
sti
adc
sub
popf
sbb
test
movsb
push
ret
xor
test
xchg
sbb
adc
push
mov
mov
xchg
dec
mov
lods
out
inc
cmc
scas
pop
lahf
mov
popf
sbb
iret
ds
lods
mov
lret
mov
iret
sbb
lret
dec
xchg
negl
push
fcoms
rcll
sub
out
outsb
and
insb
push
pop
push
push
call
sti
fnstsw
leave
jno
cmp
pop
mov
lret
cmp
push
sbb
dec
xchg
pop
sahf
incl
repnz
fistl
mov
sbb
jne
and
lcall
xchg
xor
and
mov
push
xor
push
aaa
in
push
pop
cs
mov
inc
lret
cmp
cmp
stc
dec
sub
ljmp
jmp
cltd
daa
jno
and
shl
into
mov
and
stos
jecxz
jge
xor
pop
je
ljmp
jg
add
lcall
mov
jne
add
inc
stos
ja
je
aaa
push
xor
cmp
mov
mov
fbstp
loope
hlt
add
xchg
popf
or
out
cmpsl
out
flds
cmp
cmp
lret
cmc
pop
pop
das
or
push
sub
clc
or
jno
gs
jp
add
hlt
xor
pop
jne
loope
stc
test
adc
pop
cmp
sbb
dec
jl
fsts
mov
jmp
cmpl
or
mov
cld
loopne
out
jge
stos
fidivl
sub
inc
imul
repnz
cmp
inc
pop
cmpsl
push
fnstsw
pop
out
insb
mov
mov
aaa
and
fidivrl
jg
cltd
xchg
sahf
fs
mov
mov
sub
ret
push
add
insl
xchg
jge
or
sarl
add
adc
arpl
push
mov
subl
jecxz
repz
and
xor
add
adc
arpl
push
mov
sub
jge
or
sarl
add
adc
arpl
push
mov
subl
jecxz
repz
fmul
int3
ja
in
adc
mov
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
push
push
push
add
jno
popa
xorl
pusha
add
je
mov
mov
insb
out
mov
mov
jno,pn
popa
dec
adc
outsb
xor
mov
sahf
shrl
fiadds
push
negl
xchg
jmp
pop
dec
and
outsb
cmp
mov
mov
xchg
into
ret
fwait
ret
nop
lds
jp
and
xchg
aad
gs
loopne
pop
push
ds
mov
or
dec
cli
ljmp
rcrl
into
sbb
sbb
xor
in
pop
cmp
sbb
sub
clc
in
and
ror
shrl
bound
pushw
push
push
inc
inc
jne
popa
imul
sbb
push
push
aam
xor
xchg
mov
pop
and
in
lock
repnz
ret
adc
loop
sub
scas
loope
in
add
mov
pop
lods
repnz
jle
flds
xchg
mov
pop
jle
ret
popa
cs
pop
add
jle
mov
sahf
imul
test
push
inc
sbb
sub
or
mov
movb
lds
pop
dec
add
dec
inc
sbb
pop
sub
jmp
iret
mov
mov
mov
adc
shrb
push
mov
add
add
jle
mov
sahf
shrl
fiadds
push
push
push
inc
jno,pn
popa
dec
adc
outsb
xor
mov
sahf
shrl
fiadds
push
push
cmp
mov
adc
fcomip
jne
xor
pop
cmpb
dec
adc
pop
push
les
push
mov
jmp
ljmp
aam
dec
loopne
cmpsb
mov
lock
inc
xchg
jb
rcrb
ret
repz
fists
or
xlat
stc
inc
cmpsl
pop
aam
adc
push
adc
and
in
dec
jge
decb
dec
cli
das
xor
jp
scas
mov
es
xor
mulb
int
orb
push
xchg
adc
outsl
mov
and
loop
push
insw
addr16
aad
dec
rorb
repz
jae
lods
or
mov
ficoms
arpl
mov
push
fbld
das
lret
decb
jle
pop
inc
sub
push
inc
insl
jnp
push
pop
push
ja
pusha
fbstp
nop
pushf
loop
ds
test
das
lret
push
inc
stc
pop
fcmovbe
and
adc
fnstenv
mov
rcrl
arpl
rcll
cmp
and
mov
ret
dec
mov
cmp
les
xor
sub
mov
inc
sub
inc
inc
insl
xchg
cmp
inc
pop
fst
rorl
int3
test
or
leave
scas
mov
add
cltd
adc
xor
js
aaa
mov
mov
ret
out
jecxz
push
popa
xor
or
sbb
add
fcoms
repz
sub
sbb
xchg
adc
add
dec
mov
insl
and
or
sbb
jge
leave
lahf
xchg
xor
out
push
movsb
mov
dec
ss
inc
jecxz
pop
lahf
pop
aad
add
adc
repnz
xor
xchg
aas
and
mov
lahf
jle
dec
leave
pop
cmp
cmpb
xchg
adc
sahf
pop
and
test
fdivp
cmp
sarl
insb
mov
outsb
test
int3
jnp
xor
sbb
dec
sub
mov
aam
sbb
je
add
hlt
movsl
ss
inc
ret
cmpsl
mov
ret
scas
stos
jge
rorb
enter
mov
push
xor
inc
repnz
push
or
or
fadds
dec
sbb
jl
cmp
jb,pt
xor
inc
arpl
icebp
or
pop
adc
inc
xchg
clc
push
jne
and
mov
add
pusha
sbb
dec
test
in
movl
negb
daa
popa
repz
cld
mov
add
mov
or
in
imul
mov
mov
xchg
lahf
jno
mov
or
adc
std
cmp
cmp
push
cmp
sbb
daa
cmp
mov
pushf
add
and
inc
lahf
sbb
movsl
loopne
mov
pop
cmp
mov
jae
xor
add
comiss
sahf
jae
pop
lret
push
addl
das
clc
lods
jae
jle
pushf
fs
lock
loopne
adc
imul
inc
pop
movsl
xchg
ds
lahf
or
sub
mov
push
cmp
and
add
out
int3
xor
push
jmp
mov
loopne
in
je
and
dec
fwait
das
xchg
mov
cs
call
mov
cli
out
push
push
cmp
pop
push
cs
jbe
mov
mov
mov
lea
ss
jb
cmp
lods
adc
aaa
xchg
fcmovbe
insb
movsb
sbb
rcrl
cmp
test
and
in
pop
imul
into
inc
mov
arpl
mov
test
cmp
cmp
stos
js
push
cmp
fcmovbe
sbb
mov
mov
outsb
pop
cmp
push
sub
sti
jo
cmp
mov
adc
rorl
fildl
pop
int
push
adc
arpl
jne
and
dec
pop
dec
jne
push
mov
stos
pop
mov
jnp
das
stc
lret
xchg
dec
aaa
fisttpl
xlat
and
es
xchg
fnstsw
add
divl
mov
leave
jp
push
pop
mov
jg
lret
stos
xor
and
ret
lods
adc
and
sti
rolb
mov
push
cmovs
mov
xchg
pop
inc
sahf
push
js
mov
bound
adc
ret
dec
sub
dec
frstor
lods
cmpsl
mov
stos
jo
mov
ljmp
arpl
out
mov
or
jg
addr16
add
xlat
push
mov
jbe
and
sbb
xor
mov
ja,pn
xor
fisttps
or
iret
fwait
push
mov
and
imul
xchg
pop
pop
push
add
xor
sub
xchg
pop
and
cmp
fbld
sub
mov
fs
mov
xor
cmp
stc
repnz
daa
pop
sub
hlt
mov
mov
dec
mov
and
in
in
dec
loop
adc
adc
or
outsb
push
and
mov
out
mov
push
adc
movsl
daa
rcrb
jns
cmp
mov
sub
shr
sbb
mov
aaa
insl
jg
out
cld
out
pop
mov
sti
in
mov
in
lds
mov
dec
inc
in
pop
add
adc
les
dec
adcb
pop
jo
mov
ja
in
lahf
mov
sbb
stc
mov
andb
out
inc
and
cmp
fs
andl
call
icebp
or
loop
sbb
test
jne
dec
fimull
fwait
in
test
outsl
cmp
lods
out
jne
add
lea
cwtl
xor
jecxz
test
mov
mov
stos
cmpsb
shlb
in
shll
sub
jmp
pusha
xorl
mov
dec
push
pop
xchg
mov
shll
and
or
test
cwtl
cmp
test
dec
sbb
cmp
and
jo
test
jp
ret
cs
ljmp
jns
fbld
andb
movsl
fists
sub
pop
pop
mov
dec
add
lcall
sbb
mov
xchg
jp
shll
jno
inc
and
mov
inc
shll
push
xchg
mov
les
sti
dec
roll
cmc
dec
add
leave
xchg
sbb
adc
les
shlb
xor
mov
lret
adc
xorb
push
test
cli
fildll
scas
pop
call
cmp
sbb
adc
mulb
daa
dec
loop
sbb
push
out
mov
or
fiadds
in
xor
push
pop
lods
push
test
cli
fmull
movsb
add
mov
je
mov
movsl
cmc
shlb
aad
xchg
sarl
test
mov
in
test
and
push
and
jns
mov
shrl
test
jmp
fwait
sbb
pop
pusha
and
sub
in
aaa
fisubs
stc
sub
xchg
addr16
jecxz
cmp
stc
mov
pop
test
shll
lret
addr16
fwait
pop
adc
xor
shl
push
and
andl
push
test
pop
push
pushl
push
or
xor
pop
cmpl
adc
inc
lea
xor
jae
test
jne
mov
int3
push
ds
sti
cmp
repnz
iret
scas
mov
sub
xchg
add
or
sbb
nop
pop
pop
mov
xor
fidivrl
mov
push
in
mov
inc
arpl
push
andl
loopne
adc
inc
pop
jbe
or
inc
mov
fildll
out
mov
xchg
inc
jp
jmp
lret
mov
shufps
out
mov
bound
movsl
jne
mov
pop
push
mov
fsubs
adc
mulb
test
pop
lahf
xor
dec
jns
inc
sbbl
pop
inc
les
inc
sbb
pop
in
dec
push
mov
mov
add
les
sbb
mov
loop
mov
clc
cli
cmpsb
fsts
push
sub
inc
fdivs
push
jnp
mov
cli
cltd
inc
rorb
sbb
sysenter
ljmp
cmp
adc
mov
mov
jp
jmp
xor
movsl
pop
push
fistps
add
es
data16
std
mov
stos
das
dec
push
leave
rcrl
leave
pop
jmp
cmp
test
xchg
leave
outsl
lea
scas
shrb
insl
pop
call
mov
or
js
jo
jo
jo
cmp
mov
cs
test
ret
add
lcall
sub
cmpsb
stc
sti
lds
cmp
add
movsb
addr16
fsubr
adc
pop
fidivrl
cmp
sbb
or
sub
pop
out
xchg
test
inc
mov
mov
and
mov
and
jae
test
inc
dec
pusha
test
ret
jo
negl
sbb
iret
mov
pusha
enter
in
subb
clc
leave
xor
push
xchg
movsb
mov
movsb
andl
in
int
push
ret
sub
jb
cltd
push
xor
scas
adc
mov
mov
out
mov
in
lods
movsb
lahf
sbb
lods
xchg
aaa
xlat
mov
loop
negl
adc
adc
jnp
addr16
inc
or
js
pushf
xchg
test
mov
rolb
sti
mov
jge
scas
ficoms
mov
add
cs
arpl
dec
mov
lock
out
inc
or
les
push
test
fbstp
cmp
int
or
sub
scas
int3
push
addl
out
and
pop
aad
leave
loop
xchg
jnp
popa
sub
xchg
sub
jnp
sti
and
or
addl
push
dec
and
test
jo
fisttpl
xchg
das
mov
test
shrb
cltd
inc
movb
in
xchg
daa
mov
adc
lret
mov
mov
pop
lods
xchg
jns
lods
jb
inc
lods
xchg
or
mov
int3
jae
mov
ret
sub
and
xchg
scas
stos
xchg
jbe
pop
mov
pushf
out
ret
mov
stc
pushf
pop
popf
push
call
mov
cmpsl
inc
push
rclb
cmp
jns
jecxz
add
into
inc
in
dec
or
and
or
lret
mov
aas
add
test
push
add
cmp
xchg
dec
mov
push
jae
or
inc
in
mov
mov
out
jo
mov
sub
pop
mov
adc
push
rolb
iret
nop
pop
sbb
jle
lea
add
stc
or
and
fstpl
sbb
cmp
shrb
xchg
xor
jp
repz
xor
jbe
icebp
push
repz
imul
push
mov
xchg
test
cmp
pop
push
inc
push
inc
xor
dec
lea
fstps
push
xor
hlt
and
repz
jae
cmpsb
gs
ljmp
dec
adc
mov
sbb
loope
clc
mov
nop
jle
insl
and
jle
out
adc
pop
je
push
insl
rcll
or
adc
aaa
repz
pop
hlt
jbe
jmp
jns
jno
enter
loopne
addr16
pop
inc
push
xor
fcompl
popf
mov
inc
lock
sbb
gs
push
xchg
pop
loopne
mov
xchg
data16
pop
fdivrs
mov
and
adc
and
xlat
jle
leave
dec
xor
add
and
xchg
cmp
inc
xor
ret
cltd
mov
jae
lcall
je
adc
iret
mov
jmp
mov
xchg
loop
std
jmp
jmp
out
xchg
mov
call
sub
fsts
aam
mov
insb
push
jne
mov
fldl
cmp
orb
fmul
scas
cmc
mov
mov
add
testl
rcl
or
adc
jns
xchg
insb
sub
xchg
push
clc
sbb
cmp
in
mov
adc
push
enter
sti
daa
xor
or
jge
and
mov
push
daa
repnz
pop
repz
and
push
stos
fwait
sbb
or
push
or
add
ret
mov
adc
dec
gs
dec
fnstenv
daa
pop
pusha
fcompl
sahf
sub
loope
or
fisttps
adc
add
mov
outsb
bswap
or
mov
loope
je
outsl
dec
xorl
in
inc
in
test
lcall
repz
mov
call
jno
out
outsl
in
mov
movb
pop
dec
fcmovnu
fnstenv
push
mov
int3
sub
rcrb
iret
xor
pop
repnz
les
and
adc
cmpb
scas
pop
test
cmpsb
push
push
mov
outsb
sbb
adc
sti
sub
or
aad
sub
pushf
cmp
xchg
mov
or
fisubrs
xor
data16
out
pop
adc
lea
push
pop
push
mov
fistps
xor
mov
imul
or
xchg
mov
call
push
adcl
push
mov
push
cli
fninit
shl
inc
xchg
testb
cmp
pushf
in
cwtl
inc
xchg
ja
lods
js
fisubs
mov
stc
cmp
sti
in
or
test
xchg
pop
jl
inc
stc
adc
and
movsl
push
icebp
mov
rcrb
jmp
pusha
add
fbstp
push
and
outsb
aas
nop
or
cwtl
out
daa
repz
pop
cmp
test
add
pushaw
jbe
js
xchg
aam
cmpl
into
lds
cmp
popf
sti
scas
push
jno
pop
in
pop
insb
add
add
in
in
xlat
repnz
jae
xor
dec
jl
mov
in
das
pop
lret
in
lock
or
aam
and
into
jne
repz
mov
lret
aad
mov
sub
push
icebp
les
jnp
push
test
push
movsl
add
cmp
pop
cmpsb
push
das
pop
sbb
fwait
inc
lret
jbe
mov
fstl
popf
out
xchg
shl
or
jns
ja
mov
outsb
mov
inc
mov
sti
push
xor
test
dec
jo
pop
mov
xchg
sti
nop
push
das
inc
xor
or
inc
or
ret
cli
in
shrl
push
imul
pop
jmp
pop
imul
xchg
xchg
mov
out
imul
stc
fldenv
mov
inc
mov
lret
sbb
lock
int3
in
or
aam
lods
test
mov
sbb
push
aas
push
mov
and
inc
pop
mov
jge
shlb
and
or
outsb
mov
mov
add
mov
scas
sbb
sub
jle
call
mov
mov
lcall
in
or
fists
sub
or
xor
fsubrp
out
inc
jb
push
cwtl
jo
push
add
xlat
xchg
xchg
fisttpll
inc
mov
clts
xchg
loop
or
out
sbb
or
xchg
sbb
add
dec
int
aas
mov
js
dec
mov
testb
lret
fisubrs
jmp
mov
or
and
out
lcall
mov
mov
cmp
les
xor
mov
imul
xchg
cs
aam
sub
int3
add
pop
ret
inc
out
mov
push
sbb
pusha
add
cmp
or
sub
push
inc
test
lea
orb
scas
arpl
jae
adc
cmpsb
scas
lcall
push
inc
dec
fdivl
stos
divl
pop
cwtl
in
sbb
mov
pop
push
adc
adc
push
test
mov
out
repz
sbb
negb
cmp
iret
fwait
imul
in
popa
pop
xor
stos
mov
pop
stos
pop
cli
push
dec
mov
add
insl
jno
mov
mov
pop
lea
in
mov
and
loop
cmpb
adc
add
bnd
das
inc
ds
dec
lcall
dec
lock
xor
xor
scas
movsb
sbb
inc
mov
sbb
inc
outsb
scas
lcall
cmp
inc
icebp
fcmovbe
adcb
pop
sub
mov
inc
mov
in
sbb
xchg
lahf
or
js,pt
jmp
mov
divb
and
test
xor
jb
into
and
cwtl
das
outsl
movsb
js
jns
aas
inc
adcb
xor
leave
pop
xor
arpl
mov
and
or
sahf
pop
cmp
outsb
xor
ja
add
inc
mov
shrb
movsb
shr
popa
icebp
outsl
test
dec
push
stos
clc
add
inc
adc
mov
js
and
adc
xchg
sbb
aad
cmpsb
out
rorl
mov
push
jbe
sbb
dec
outsb
pop
shll
push
cvtdq2ps
movsb
scas
cmpsb
xchg
or
rolb
leave
adc
jb
and
xor
daa
mov
push
rcrb
notb
push
adc
fildll
aam
xchg
pop
ja
adc
jmp
enter
add
pop
pop
add
jns
imul
xor
xor
cmp
mov
xchg
or
sub
nop
adc
je
push
jecxz
int
dec
cmp
arpl
lcall
and
push
add
pop
cs
cltd
stos
xchg
sahf
mov
fsubl
pop
add
jo
add
shlb
es
ret
cmp
pop
jge
fdivrs
popf
shll
push
mov
inc
lods
std
insb
jo
outsl
pop
push
jmp
rcrl
jle
test
push
add
push
fstl
mov
pop
arpl
fnstcw
testl
movsb
mov
add
nop
mov
or
inc
adc
mov
adc
xchg
mov
ret
roll
into
xchg
dec
divb
in
and
sbb
loop
aad
popf
inc
xchg
push
fbstp
add
lods
add
mov
into
sub
int
mov
xlat
fistpl
sub
xor
movsl
push
out
jg
mov
shlb
lods
adc
mov
shl
xor
inc
cmp
jnp
addl
lods
xchg
dec
scas
mov
xchg
xchg
js
out
sub
sub
gs
rcrb
xchg
adc
adc
fisttpl
sub
mov
dec
jns
aad
bound
inc
push
add
cmpsl
push
iret
fscale
fwait
hlt
jnp
hlt
or
pmovmskb
xor
mov
aam
mov
add
xchg
mov
xorb
inc
enter
fimuls
dec
push
shlb
cwtl
add
cmp
or
add
daa
daa
enter
outsb
add
xor
adc
in
outsb
mov
mov
addr16
test
mov
xchg
repz
cs
and
scas
nop
rclb
bound
out
aaa
adc
mov
ds
cmpsl
stos
inc
mov
jl
mov
dec
jns
fwait
mov
clc
dec
inc
adc
test
scas
dec
pushf
xchg
daa
daa
adcb
in
push
mov
fisubl
icebp
xor
push
cmp
xchg
mov
outsb
dec
xor
cs
push
dec
fidivrl
cmp
daa
or
ja
out
enter
add
adc
pop
dec
cmp
rcll
mov
movsb
sbb
push
mov
inc
sbb
pop
jo
or
fnstcw
sbb
leave
mov
dec
inc
mov
fwait
scas
fiaddl
jae,pt
jp
mov
inc
jae
sub
push
mov
dec
dec
lods
dec
repz
cli
leave
cli
xchg
leave
enter
xchg
test
nop
hlt
clc
incb
pusha
loopne
xor
cmp
dec
cmp
cli
pop
sub
push
or
xchg
ja
in
clc
rcr
xor
or
fwait
mov
or
mov
mov
and
lds
adc
mov
cmpsl
push
jl
repnz
aad
push
ret
push
or
xchg
dec
aam
mov
push
nop
mov
jne
xchg
or
flds
loop
mov
adc
fwait
aaa
jg
dec
dec
adc
sub
xchg
loopne
imul
hlt
push
xor
enter
shlb
daa
call
test
push
mov
div
cmp
sbb
xchg
stos
shl
daa
or
sub
sti
or
jo
mov
mov
xchg
in
daa
enter
pop
sbb
xchg
cltd
cmp
lods
mov
inc
pcmpgtw
fimuls
or
fidivl
ds
fs
mov
mov
out
test
add
xchg
mov
call
pushf
in
lret
cmc
push
shlb
sbb
and
jnp
shlb
in
push
in
cmc
inc
das
je
popa
dec
adc
outsb
xor
mov
sahf
shrl
fiadds
push
push
push
inc
jno,pn
popa
dec
adc
outsb
xor
mov
sahf
shrl
fiadds
push
push
sahf
dec
scas
imul
push
xor
sahf
lds
xchg
fiadds
push
mov
movsl
cs
and
pop
add
jle
mov
sahf
imul
xchg
mov
leave
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
aad
push
sbb
jne
mov
add
lds
cmc
stos
test
xchg
push
mov
mov
inc
or
sub
add
push
push
lds
cmc
mov
movsl
ljmp
xor
add
jb
pusha
lds
nop
iret
out
cld
scas
test
push
push
dec
and
fimuls
xlat
ljmp
push
repnz
fcoms
add
sbb
mov
sub
js
js
push
lods
sbb
rclb
gs
lahf
jno
pop
inc
daa
lds
or
outsl
push
arpl
ljmp
inc
aad
imul
push
fs
sbb
pop
mov
mov
in
aad
dec
in
mov
adc
push
cmc
add
enter
mov
push
outsb
out
shl
mov
rcr
sub
loop
lock
push
js
icebp
loop
cmp
push
or
jne
add
push
arpl
mov
and
cmc
mov
movsl
lock
xor
adc
dec
cmp
dec
jo
bound
push
pop
lods
in
lcall
enter
sbb
jae
pop
cmp
adc
push
dec
dec
xchg
mov
mov
cmc
lea
sbb
dec
push
jg
jns
pop
and
mov
lcall
xchg
fisubl
or
sub
add
push
jp
mov
lcall
xchg
fisubl
or
call
shll
loop
and
xorb
mov
mov
movsl
add
add
mov
push
jmp
les
push
cs
scas
imul
sahf
jnp
inc
repnz
mov
push
push
jo
and
push
pop
or
cmpsb
sbb
pop
xchg
xor
mov
sbb
iret
add
pop
jnp
mov
jno
sub
fwait
push
cli
inc
outsb
lret
jg
inc
roll
lret
and
mov
sbb
bound
scas
movsb
adc
sti
out
pop
mov
fsubs
jp
fisubrs
sub
test
fdivrl
aad
push
in
push
mov
cmpsb
mov
cmp
mov
pusha
cmp
int
mov
std
sub
bound
das
lods
add
test
push
jo
lcall
les
icebp
loope
and
test
imul
pop
sar
ret
push
adc
insb
jae
test
mov
push
add
lock
addr16
sbb
cmp
repz
insb
jg
roll
outsb
sbb
mov
addr16
out
cmp
sub
cmp
sbb
cli
sbb
dec
sbb
aad
pop
xlat
int
sti
and
mov
xchg
inc
mov
mov
jo
add
inc
cwtl
add
add
mov
xlat
mov
in
cmp
arpl
add
mov
sbb
pusha
jnp
xor
jmp
sub
inc
rcrl
insb
dec
fs
andl
jmp
adcl
out
stc
enter
shll
lcall
ret
fiaddl
test
mov
pop
gs
cmp
sbb
insb
insb
int3
call
push
aad
xchg
scas
and
adc
xor
ret
bnd
add
test
sarl
add
inc
mov
mov
aad
add
or
lret
clc
xchg
pop
jo
js
xchg
out
jnp
jne
push
scas
aad
pop
or
loopne
scas
icebp
repz
test
adc
mov
aam
cmpsl
sub
out
or
push
cmc
icebp
rcl
fs
fwait
inc
adc
mov
test
das
in
or
sbb
add
xor
sub
xchg
xchg
lock
add
xchg
push
pop
inc
mov
dec
inc
lahf
push
push
in
push
mov
fsubrp
dec
xchg
xchg
mov
inc
jo
pop
out
mov
cmp
imul
aaa
xchg
pop
stos
inc
pop
out
popl
enter
inc
les
mov
es
mov
sbb
adc
add
sub
pop
jp
stos
adc
out
mov
jnp
iret
jecxz
push
pop
push
push
push
and
push
push
xchg
pop
cmpsl
jo
scas
adc
xlat
adc
jns
popa
outsl
ljmp
pop
in
add
gs
and
cmp
outsb
push
mov
std
aas
mov
mov
aam
pop
add
xlat
fcoml
sub
add
fistpll
cs
aam
sti
pop
insb
sbb
jae
or
dec
out
pushl
jmp
adc
dec
xorb
je
rclb
push
mov
cld
push
xchg
movsl
sbb
and
filds
pop
sbb
xchg
data16
jns
std
pop
add
int
push
pop
mov
push
addr16
and
add
adc
add
inc
repz
mov
mov
fstl
in
mov
adc
mov
xchg
out
and
test
mov
rorl
icebp
frstor
inc
in
or
loop
mov
enter
pusha
mov
fbstp
xor
xor
or
pop
xor
test
xchg
inc
inc
mov
cs
jp
mov
push
push
mov
mov
pop
js
lea
decl
mov
cltd
push
outsw
jae
xlat
add
add
adc
adc
mov
ds
pop
mov
adc
leave
mov
rcl
sahf
xor
das
and
pop
sub
mov
mov
mov
inc
mov
cmp
push
aad
mov
out
or
inc
sti
sbb
pop
jnp
dec
sub
sti
rcll
jmp
xchg
fwait
rcll
xor
mov
aas
push
mov
pop
mov
push
jle
push
sbb
leave
xlat
adc
mov
mov
adc
push
adc
ds
inc
ret
mov
pop
jns
aas
push
inc
mov
ljmp
sbb
stos
inc
enter
xchg
jb
fmuls
int3
aas
push
cmp
fidivrl
xor
mov
sbb
addb
mov
das
xchg
leave
cmpsb
stos
pop
sub
jle
lret
in
xor
mov
out
insl
inc
push
scas
lods
bnd
ret
add
outsb
clc
into
pop
pop
push
cltd
neg
incb
test
cltd
call
outsb
cmp
dec
leave
ficompl
subl
xor
jge
rorl
movsl
fstpl
hlt
ret
test
popa
mov
sbb
xor
xor
cmp
bound
fsubrs
aad
pop
dec
mov
insb
rorb
inc
pop
sbb
test
adc
mov
stos
jo
movsl
ljmp
popf
mov
lock
xor
pop
sbb
mov
outsb
fs
rorb
fcoms
mov
cmp
inc
jmp
pop
add
push
sti
mov
push
in
mov
jb
repz
sbb
jg
sbb
mov
adc
js
jmp
mov
lods
shlb
mov
incl
pop
fsubrl
pop
xchg
arpl
adc
pop
inc
in
shlb
mov
mov
mov
lcall
in
push
and
dec
sbb
es
popf
cwtl
gs
or
sbb
or
jge
mov
insb
sbb
mov
xadd
push
xor
loopne
aam
mov
pop
into
add
sub
jg
repnz
dec
dec
fs
jl
jb
test
jae
adcl
adc
fs
push
and
rcll
stos
cli
or
cmp
in
mov
sbb
movb
pop
icebp
push
lds
and
inc
cmp
mov
stc
fnstsw
xchg
mov
les
aas
insb
jb
fisttpl
mov
sub
cmpsl
icebp
pop
xchg
jmp
sar
dec
push
xor
sbb
ret
push
push
sub
fdivrl
ret
lcall
xchg
cmp
mov
scas
and
notb
aas
mov
inc
and
ror
xchg
lds
adc
xchg
imul
pop
fistps
rolb
in
xor
mov
sub
ljmp
xchg
lds
les
movsb
adc
add
inc
xchg
data16
sub
mov
ret
or
ds
xor
add
xor
loopne
mov
jmp
sbb
mov
add
xchg
je
sbbl
mov
add
push
jle
mov
mov
jns
and
ljmp
jns
pop
adc
icebp
outsl
stos
mov
cmp
fstps
inc
rcrl
movsl
or
decb
push
sbb
sbb
cltd
xor
in
xorl
pop
es
jb
fcoms
mov
xor
cli
movsb
pop
mov
nop
jg
cld
sbb
sub
xlat
daa
pop
loope
mov
mov
mov
outsb
mov
loopne
push
push
enter
rcl
adc
pop
lods
and
pop
cmp
inc
aas
mov
aad
dec
push
mov
mov
adc
cmc
sbb
sub
stc
dec
mov
in
lods
xchg
mov
lea
push
add
std
dec
push
dec
push
test
jecxz
push
and
xrelease
mov
das
cli
clc
cmp
adc
imul
sbb
es
aaa
rolb
jae
jo
loopne
jmp
jge
sahf
lahf
stos
fcomps
push
arpl
out
push
adc
fst
adc
subb
imul
pop
mov
faddl
xor
add
loope
mov
adc
lahf
add
dec
jmp
mov
push
xor
mov
rcrb
jp
daa
sbb
inc
repnz
lret
xchg
xlat
cmpsl
add
cmpsb
push
inc
cmp
inc
sub
pop
dec
sbb
repnz
adc
xchg
js
in
and
aaa
orl
fwait
cmp
inc
in
out
or
cmp
push
fisubl
xchg
jl
les
inc
jmp
repz
cld
arpl
xlat
loop
fnstsw
mov
shll
and
stc
dec
pop
lea
repnz
testl
pop
xchg
sub
xchg
int
fadds
add
cld
fidivrs
iret
iret
subb
inc
imul
sub
fsub
cmc
es
pushf
xchg
fildl
cltd
add
push
xor
fwait
scas
pop
or
rorl
mov
pop
mov
push
sub
mov
jle
and
jmp
and
jmp
push
cmp
jmp
mov
and
pop
inc
test
aaa
xor
cwtl
mov
lock
xlat
xchg
pushf
data16
movsb
idivl
out
sub
xchg
out
aam
inc
fldcw
xchg
pop
sbb
lret
inc
data16
add
lock
scas
int3
inc
jbe
xor
mov
xacquire
clc
sarl
mov
pop
shll
imul
stos
dec
mov
cmp
das
xor
cmpsb
mov
inc
sub
or
fnstcw
adc
in
or
xchg
pusha
test
push
push
adc
jb
sub
in
mov
xlat
cmpsl
add
add
jmp
inc
and
fmuls
push
inc
jp
in
in
jo
push
adc
ficoms
or
mov
xor
pop
jmp
icebp
and
xchg
fwait
add
movsb
fmul
loopne
fbld
lock
sbb
push
add
xchg
mov
or
xchg
popa
add
add
shl
out
add
je
pop
fs
cmp
fistpll
push
inc
icebp
stc
mov
mov
popa
cmc
mov
jmp
xchg
mov
popf
jle
in
incb
xlat
push
test
testl
into
das
dec
popa
pop
out
inc
int
insl
les
mov
idivb
daa
dec
lea
jg
mov
rclb
mov
dec
fucomi
mov
sbb
mov
fcomi
popf
pusha
sbb
push
loope
mov
add
xchg
jmp
data16
pushl
roll
jns
mov
dec
inc
leave
sub
xor
stc
mov
jge
stc
fadd
jae
mov
sbb
push
and
or
sub
lds
lods
cwtl
and
in
mov
lea
adc
fwait
lcall
mov
lea
adc
ljmp
xchg
imulb
in
pop
jo
or
stos
fistpll
xchg
xlat
test
cmp
data16
aas
push
fnstenv
cmp
cmp
sbb
stc
clc
jno
sub
iret
popl
ljmp
mov
and
jmp
out
jl
fcomp
xor
ficoml
jmp
call
pop
dec
je
stos
lods
adcb
int3
lods
loope
fucomi
pop
xor
and
pop
sub
pop
cld
xor
push
xchg
push
sub
pop
repnz
mov
inc
ljmp
jno
dec
mov
movsl
pusha
test
xlat
cmpsl
adc
sub
xor
cmpsb
jle
das
std
push
add
mov
repz
pop
add
ss
dec
bound
pop
xchg
mov
pop
inc
es
inc
xor
mov
iret
test
sub
cwtl
dec
and
sub
test
push
adc
add
ds
mov
lds
mov
mov
and
mov
inc
xchg
arpl
in
adcb
mov
rcpps
outsb
test
jg
xor
imul
popf
adc
inc
inc
shll
test
push
sahf
and
jne
pop
movsb
out
in
imul
imul
mov
scas
stos
arpl
push
and
enter
pusha
fistps
loopne
mov
xor
push
out
and
into
imull
clc
jb
mov
mov
mov
mov
dec
test
loope
inc
sbb
lret
xchg
cmp
add
das
idivl
jae
int
and
cwtl
jp
imul
push
xlat
add
jmp
call
stos
mov
mov
sbb
pop
dec
jo
fnstsw
stc
jne
scas
test
xchg
cmp
insl
hlt
push
mov
mov
in
xor
sub
mov
and
mov
int
sbb
mov
jb
sbb
add
pop
pusha
imull
cs
mov
jnp
push
gs
shll
mov
sbb
sub
xchg
cmc
stos
pop
inc
mov
insb
mov
enter
add
adc
mov
mov
scas
pop
cmp
lods
fnstcw
clc
cs
aad
mov
stos
orl
or
icebp
sbb
dec
repz
sar
fisttpl
pop
sub
movsb
dec
jae
sbb
in
xor
mov
daa
sbb
and
mov
jl
push
adc
add
cli
out
test
dec
fcmovnbe
dec
xor
cmp
mov
dec
and
or
jge
mov
pop
test
mov
std
popa
inc
sub
fldcw
inc
push
test
add
xor
or
scas
inc
scas
and
jae
and
leave
adc
mov
pop
pop
loopne
cmp
iret
xchg
es
dec
mov
pop
stos
jl
sbb
and
dec
ret
lods
insl
mov
loopne
and
pop
cmp
inc
jmp
roll
adc
int3
js
mov
xchg
imul
xchg
or
add
jbe
shll
lods
mov
adc
add
cmp
imul
sbbl
dec
jno
sub
dec
notb
mov
rorb
aaa
enter
push
push
mov
dec
mov
xlat
xchg
in
out
dec
inc
mov
stos
push
jecxz
sbb
fwait
or
jle
and
jmp
inc
xchg
ds
add
lcall
dec
and
das
pop
out
leave
ficomps
movsb
or
fwait
xor
mov
and
aaa
jne
adc
call
outsl
cmpsl
xchg
xchg
dec
mov
scas
add
loopne
rcll
ss
call
dec
mov
mov
mov
sub
push
jae
xlat
push
sbb
add
out
int
cmpsb
sub
ret
inc
mov
fxtract
pop
fisubl
in
jno
mov
xchg
add
push
jbe
psraw
sbb
mov
mov
jg
pop
and
add
iret
shrl
inc
inc
fwait
mov
daa
push
pop
xchg
sarl
cli
in
les
xor
test
mov
cli
and
sbb
sti
les
adc
jno
jbe
bound
ljmp
dec
sar
scas
insb
and
sbb
and
in
scas
push
or
push
and
ss
sbb
mov
inc
fldl
movsl
mov
adc
and
xchg
ds
pop
inc
neg
jb
mov
pushf
or
nop
and
push
stos
dec
or
lods
inc
loop
inc
push
fists
inc
js
int
lea
das
cmp
lahf
dec
push
mov
pop
dec
mov
sbb
sub
call
cmp
loope
pop
shlb
xchg
stos
into
mov
int
lods
in
pusha
in
andb
sbb
cmpsb
push
outsl
movsl
jle
es
and
xchg
imul
loope
fbld
fbstp
xchg
mov
nop
fiadds
xlat
dec
lock
in
clc
push
lods
in
popf
rolb
pop
mov
xchg
sbb
mov
sub
adc
bound
bsr
aam
jl
stos
push
sbb
sub
dec
cmp
pop
imul
hlt
xchg
ror
pop
in
and
movsb
dec
rcll
inc
icebp
pushl
loop
fwait
and
dec
js
mov
fistpll
mov
into
adc
cmpsl
rol
mov
in
outsl
sbb
jmp
loop
jmp
pop
movsb
and
icebp
lea
lahf
mov
je
sbb
inc
and
nop
xchg
jmp
mov
shlb
sbb
movsb
loopne
mov
inc
jno
sbb
iret
xor
in
notb
or
dec
cmpsl
cld
cmc
call
jl
je
enter
or
test
pusha
mov
mov
stc
jnp
inc
mov
icebp
test
gs
paddq
test
arpl
les
ret
inc
std
add
dec
repz
mov
adc
xor
shrl
stos
jbe
sbb
pop
lret
or
dec
jo
or
xlat
jg
add
dec
cmpsl
adc
jno
int
into
and
loop
mov
and
cmpsl
xor
dec
movsb
mov
sbb
ja
mov
lods
jns
jb
repz
mov
sub
jle
hlt
lret
and
enter
sbb
call
jb
sub
sti
mov
into
xor
adc
mov
sbb
push
test
sbb
cmp
mov
pop
push
jle
sbb
jb
lds
icebp
sbb
mov
jecxz
lods
imul
daa
aam
je
mov
mov
test
sub
sub
push
cmp
mov
mov
xchg
negl
shlb
inc
xor
ret
or
sub
sub
out
mov
leave
add
les
scas
lock
jbe
push
xchg
jle
inc
scas
aad
mov
inc
mov
sub
iret
dec
fiadds
rcr
mov
test
ficompl
jbe
lds
sub
cmpsb
mov
or
pop
es
xchg
xchg
shr
outsb
fmulp
cmp
dec
popf
repnz
mov
cmpsb
hlt
dec
loop
xchg
sub
adc
mov
leave
insb
jmp
out
or
insb
cmp
sbb
dec
push
or
jl
adc
test
push
fadd
fidivs
xchg
enter
jae
hlt
adc
call
add
sbb
mov
push
mov
jbe
in
fistl
stos
fcmovnbe
add
cli
sub
adc
fldenv
fs
fsubrs
loopw
jb
pushf
jnp
push
imul
sub
pusha
mov
dec
mov
jp
shlb
xchg
in
xorl
push
lds
mov
pop
fsubp
cmp
mov
int3
adc
and
mov
ret
mov
sbb
test
scas
pop
push
lock
jmp
mov
mov
ljmp
jne
iret
stc
xchg
in
loop
jne
ret
int3
lea
mov
orl
push
pusha
sub
dec
js
mov
jp
int
fidivs
xor
ja
lcall
je
sbb
and
and
dec
into
hlt
mov
shll
sub
in
push
daa
dec
add
mov
pop
repnz
add
jmp
ss
lret
mov
je
add
jo
push
dec
xchg
fsubl
xor
test
lcall
ret
dec
js
repz
call
dec
mov
stos
sub
adc
mov
fldl
and
je
push
xchg
pop
outsl
subl
dec
fiadds
ret
fists
divl
test
and
mov
mov
cli
gs
jbe
cmpl
adc
mov
lfs
cmpb
inc
xchg
pop
repz
xorb
cmp
pop
or
jae
xchg
aaa
jnp
data16
mov
mov
decl
fsts
ja
jne
lds
in
ss
mov
dec
push
xor
mov
movsb
jne
jb
das
test
cmp
in
xchg
gs
mov
dec
jne
div
cltd
mov
jge
fistpl
xchg
mov
inc
xlat
push
add
fwait
and
sub
mov
pop
outsl
push
mov
sarl
movsb
xchg
mov
cmp
pop
xchg
jne
push
or
adc
call
mov
inc
sbb
orl
push
int
ret
jmp
cs
sub
fisttpl
push
cmp
cmp
mov
repz
sub
jle
cmp
movsb
inc
jmp
xchg
jne
fldenv
lret
daa
mov
mov
adc
shrl
clc
ret
sub
mov
std
add
mov
loopne
sahf
cmpsb
cli
jbe
pop
gs
sarb
cld
inc
js
cld
popf
js
inc
jp
add
popa
push
insb
mov
mov
pop
sbb
sub
add
push
jp
mov
lcall
xchg
fisubl
or
sub
add
push
jp
mov
lcall
xchg
fisubl
or
sub
add
push
jp
mov
lcall
xchg
fisubl
push
push
push
fs
add
push
mov
dec
stos
cmc
int
inc
sbb
test
in
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
