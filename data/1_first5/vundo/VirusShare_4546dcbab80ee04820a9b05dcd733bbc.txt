add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
cwtl
sti
imul
jle
jo
cs
or
add
add
add
add
add
sbb
cmpsb
add
add
add
add
bound
cmpsb
add
add
add
add
add
jnp
or
cmpsb
add
add
mov
inc
add
inc
add
out
add
mov
push
add
add
add
inc
add
cmpsb
add
add
add
or
cmpsb
add
add
add
add
add
add
call
add
add
cmpsb
add
arpl
cmp
adc
sbb
cmpsb
add
add
add
arpl
pop
add
add
cmpsb
add
inc
add
add
add
add
outsb
add
add
add
add
add
add
cmpsb
add
arpl
sub
adc
sbb
cmpsb
add
add
add
add
add
add
add
adc
lock
add
add
jmp
push
add
add
add
add
add
add
add
or
inc
add
add
inc
add
add
out
cmpsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xor
push
add
add
add
add
dec
add
add
add
add
arpl
in
sub
sub
add
jge
mov
add
add
add
add
push
add
add
add
add
add
dec
add
add
add
call
add
jg
adc
mov
add
add
or
sbb
out
cmpsb
add
add
and
imul
dec
add
add
add
sbb
testb
add
add
add
add
cmp
add
add
add
add
add
add
dec
add
add
add
add
enter
dec
add
add
add
add
add
add
add
add
add
add
inc
add
add
testb
add
add
or
push
add
push
add
push
add
add
xchg
add
cmp
push
add
add
add
sub
add
add
arpl
pop
add
add
add
add
cmpsb
add
pop
add
lret
add
add
dec
add
add
add
add
cmp
add
add
dec
add
pop
add
dec
add
or
add
add
add
xchg
add
add
add
add
push
add
call
or
dec
add
add
dec
add
mov
add
add
add
lcall
add
add
add
and
cmpsb
add
addb
add
push
or
add
add
arpl
add
add
adc
cmpsb
add
add
add
add
add
cmpsb
add
add
filds
sub
scas
add
add
add
jge
adc
adc
cmpsb
add
push
add
scas
add
add
add
add
add
inc
add
add
add
add
bound
jmp
or
adc
mov
sbb
xchg
add
push
add
jno
out
fldt
out
inc
popf
and
cmp
popf
cwtl
mov
test
in
int3
fs
cmp
and
in
mov
scas
test
or
pop
jg
dec
adc
pop
cltd
call
mov
loope
pop
pop
jno
ret
stos
or
fisubrl
adc
push
movsl
sub
sbb
popf
ftst
mov
jae
outsb
iret
rorl
cld
and
push
mov
cmp
xchg
jne
fdivrs
pop
or
lods
cmp
rcrl
add
int3
mov
ror
push
sbb
in
addb
mov
jns
adc
fdiv
ret
mov
pop
lret
sarb
ja
xchg
jmp
add
lahf
mov
jns
shlb
insl
sbb
popf
fsts
jnp
xor
adc
mov
xor
inc
je
std
lock
lret
sub
mov
add
gs
loopne
jns
mov
pusha
mov
push
shll
push
clc
add
cmp
in
enter
jle
movsb
or
pop
mov
cmovg
roll
lahf
shr
xchg
ja
nop
xchg
add
ljmp
adc
data16
and
cmp
test
adc
xchg
cmc
ds
xor
push
sbb
add
cmc
icebp
push
dec
push
hlt
mov
pop
insl
sbb
adc
jge
int3
dec
inc
lret
push
push
mov
inc
stos
sbb
shll
mov
sub
cli
jae
in
mulb
push
movsl
sub
gs
repz
jb
sub
loop
pop
xchg
enter
cwtl
inc
push
inc
fistl
jle
add
jno
insl
inc
mov
je
dec
ret
jne
xchg
jae
ljmp
sub
or
mov
test
pop
orl
sub
sbb
jno
test
daa
out
lret
lods
sub
push
mov
mov
or
fs
pop
xchg
scas
jmp
cmp
and
dec
ffreep
dec
pop
mov
inc
push
out
pop
loope
leave
cs
xor
pop
out
dec
test
mov
jg
lods
sbb
mov
imulb
ss
outsl
sub
scas
jae
jge
inc
addb
addl
ljmp
cmp
push
fwait
push
or
pop
mov
pop
fcmovu
mov
push
lret
dec
enter
or
cld
pop
push
fnstcw
jae
popf
movsb
sbb
outsl
call
xor
outsb
mulb
test
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
gs
jne
inc
out
push
sub
inc
repz
jo
in
cmc
pop
lds
outsb
movsl
push
mov
test
xchg
ds
jne
inc
out
push
and
scas
adc
pop
mov
aad
movsl
jl
sbb
cs
ds
jne
inc
notb
and
mov
movsb
in
cmc
jge
pop
sti
or
inc
push
pop
sti
push
sub
jne
mov
cltd
gs
xor
push
daa
xchg
das
adc
mulb
inc
out
into
leave
push
mov
fsubrs
push
push
jecxz
adc
push
sbbl
imul
push
mov
fstp
mov
js
sti
jecxz
dec
lahf
pop
cmp
addl
nop
je
xor
aam
and
fidivrl
in
in
dec
xchg
repz
xor
fwait
test
xchg
cs
mov
cmpsb
adc
cmc
mov
mov
sub
push
gs
mov
add
mov
fldl
cmp
scas
sahf
out
mov
lahf
xor
xchg
nop
sbbl
fnstenv
inc
notl
and
scas
adc
inc
lds
movsl
push
mov
test
lods
and
jl
pusha
ret
movsb
and
pop
cmpsb
push
sbb
imul
roll
cmpsw
pop
mov
popf
xor
add
cmp
cmp
loope
testl
fisubrs
push
mov
add
dec
cmc
pop
lds
jle
push
mov
test
xchg
ds
jne
inc
out
push
and
scas
adc
pop
lds
jle
push
mov
test
xchg
ds
ror
imul
cmp
sbb
adc
push
jge
fadd
loopne
jmp
popa
sbb
jmp
aas
nop
adc
test
xchg
mov
inc
sub
fcoms
fwait
aas
jno
mov
xchg
out
cmpsb
or
outsl
test
pop
cmp
clc
sub
jnp
xor
rcl
push
jno
popf
mov
mov
jge
leave
rclb
push
pop
arpl
cmc
dec
add
imul
adc
outsl
mov
sbb
fwait
cli
test
sar
int
lret
adc
push
add
movsb
notb
mov
rcrl
int
subb
in
test
movsl
faddl
jge
add
sbb
jo
sarl
cmp
inc
outsl
sub
sahf
popa
dec
dec
mov
or
xchg
sbb
xor
ds
sarl
jno
adc
push
into
or
test
outsb
lcall
pop
inc
orb
inc
jp
je
mov
cmp
sbbl
mov
jne
fmull
lret
cld
jmp
movsl
andb
stos
xchg
out
mov
push
push
cmpsl
jg
xor
or
adc
sbb
mov
imul
pop
arpl
push
lods
lahf
imul
push
mov
popa
dec
fsubr
jge
jmp
jmp
in
test
daa
mov
std
daa
push
xor
stos
mov
daa
pusha
orl
push
cmovge
out
fmuls
cltd
dec
xchg
pop
push
or
add
in
mov
scas
sub
or
and
sbb
out
mov
lcall
stc
loop
mov
xlat
mov
mov
mov
aas
add
adc
xchg
cmp
or
dec
int3
int3
and
jle
add
pop
mov
fwait
insl
jle
or
push
loope
je
call
sub
fistl
add
push
cmp
dec
dec
shl
aas
sub
imul
lahf
mov
pop
lods
sbb
cmc
pop
adc
add
xor
shlb
jge
out
push
lods
jge
outsb
pop
dec
and
rorl
sub
dec
dec
jle
jp
sarb
aad
ja
stos
ffree
mov
stos
addb
mov
decb
enter
xor
add
cs
xchg
cmpsb
sub
xor
push
popf
fldcw
jne
mov
sbb
les
icebp
inc
popf
lret
lcall
mov
cltd
add
pop
rclb
dec
xor
mov
test
lock
fidivrs
dec
inc
fisttps
mov
cmp
in
pop
fimull
les
lret
in
and
cmp
out
inc
mov
mov
fldt
sti
mov
fs
aam
popf
rorb
into
cwtl
in
lahf
and
std
sub
cmpsb
mov
inc
mov
xchg
adc
mov
aaa
and
imul
into
fwait
jo
adc
add
jle
repz
insl
jbe
addl
pop
ss
xchg
int3
mov
cmp
inc
mov
and
xchg
loopne
pop
xor
jl
sarb
popf
push
mov
outsl
inc
les
and
sahf
xlat
pop
or
adc
testl
and
push
pop
mov
test
and
push
dec
fidivrs
sbbb
stos
stos
addr16
mov
add
xlat
test
les
icebp
jbe
mov
push
or
adc
mov
mov
imul
loope
nop
xchg
xchg
addr16
ret
bound
bound
sub
pop
add
inc
jle
insb
or
mov
stos
inc
cmp
gs
mov
pop
xchg
or
jle
mov
mov
stos
pop
and
je
loope
je
icebp
jo
nop
jbe
addr16
jl
adc
lods
inc
cmc
shr
and
push
mov
adcb
cmpsb
mov
mov
jnp
or
add
aaa
mov
inc
in
sbbl
jo
push
in
xchg
adc
cmp
xchg
mov
or
scas
xchg
dec
scas
mov
insb
xor
jmp
out
and
lods
add
push
out
pop
jae
stc
inc
mov
out
int3
lds
movsl
cmpsb
imul
push
pop
inc
fcmove
cmp
notl
popf
rcll
inc
fincstp
fidivrs
mov
inc
pop
popf
sbb
je
dec
and
pop
add
inc
movsl
movsb
add
mov
xor
jecxz
pop
repnz
sub
mov
fmuls
jb
mov
inc
jae
cs
cmp
or
mov
sub
enter
mov
addr16
inc
jae
mov
mov
scas
out
mov
and
in
rep
mov
pop
aam
dec
cmp
inc
ret
inc
leave
jmp
ss
and
push
push
jbe
pop
dec
ret
sub
jle
or
ret
add
test
out
adc
addr16
int3
andl
test
jg
stos
cmp
xor
xchg
dec
jl
and
pop
popf
cli
inc
rclb
pop
iret
jmp
adc
jp
xchg
mov
das
addr16
js
push
and
push
inc
movd
jge
scas
xor
mov
inc
insb
inc
clc
mov
jns
dec
jle
xor
inc
adc
sbb
in
xchg
cmpsb
cld
dec
iret
inc
sbb
pop
outsb
or
cmc
push
repz
push
mov
pop
pop
xchg
and
xchg
xor
sti
add
and
dec
xor
cmpsb
or
mov
mov
addr16
subb
dec
filds
je
enter
scas
into
xchg
movsb
cwtl
lret
xlat
out
cmpsl
dec
das
hlt
insl
add
push
rolb
xor
inc
add
add
sub
push
pop
xchg
in
push
xchg
call
test
jo
ds
push
push
mov
ret
ja
mov
imul
fimull
aaa
lods
pop
mov
in
daa
mov
dec
andb
sbb
lcall
fldt
clc
pop
test
loope
inc
dec
xor
sahf
sub
adc
sub
adc
jns
cmpsb
out
imul
push
lock
lods
imul
scas
jmp
and
jo
sbb
in
push
sub
pop
outsb
lock
aad
dec
xor
inc
test
cmpsb
or
ds
fldt
aad
adc
test
lock
adc
or
mov
std
ret
movsb
gs
in
dec
cmp
stc
mov
das
stos
mov
lea
sub
mov
inc
xchg
repnz
test
adc
mov
jl
mov
bound
push
inc
cmp
cs
mov
sbb
pusha
addr16
xor
add
xchg
ja
es
sahf
jecxz
lods
outsl
pop
or
dec
roll
out
orl
gs
hlt
test
mov
shll
push
jae
es
popf
cmp
pushf
fmuls
or
xchg
dec
and
sub
out
mov
mov
enter
mov
cmc
hlt
es
mov
jbe
pop
lock
mov
push
sahf
cs
inc
adc
aas
sarl
aas
js
xchg
cmp
push
or
ret
dec
xor
aad
out
loopne
mov
sub
outsl
ljmp
lahf
jb
push
sbbl
and
jg
mov
pop
outsl
sub
in
and
xchg
fldenv
xchg
sub
pop
shll
xchg
int3
cmp
inc
mov
andb
cld
dec
push
rolb
loope
mov
fldcw
roll
nop
pushf
scas
mov
movsl
add
add
push
xor
cmp
and
je
jbe
mov
popf
aad
pusha
sbb
aaa
dec
loopne
std
in
sub
insl
movsl
cs
stc
test
mov
xor
mov
cld
fs
stos
mov
out
mov
js
fnstsw
outsl
and
inc
or
sbb
outsl
mov
or
jae
in
hlt
sub
fwait
loope
pop
mov
push
inc
test
add
inc
popf
add
mulb
cmp
insl
das
add
xor
inc
or
lret
xchg
ds
xchg
pop
mov
xor
flds
icebp
push
test
shll
mov
pop
in
pop
ret
pusha
repnz
jmp
out
dec
jg
push
clc
pop
testb
sahf
out
outsl
sbb
mov
bnd
test
popf
sarl
cmpsb
push
adc
test
cmp
mov
jns
out
data16
inc
mov
stos
jbe
cmpsb
sub
das
loop
mov
stc
xchg
add
jl
mov
mov
and
ss
xor
mov
loop
dec
push
incb
mov
mov
jmp
lock
jbe
xchg
add
jb
mov
arpl
add
pop
inc
cltd
sbb
xchg
sub
shlb
stc
sti
mov
pop
mov
sub
call
lock
xchg
insb
jp
cld
xlat
scas
lds
xchg
pop
loopne
test
jbe
push
xchg
mov
dec
mov
int3
jno
je
in
stos
pushf
fwait
sbb
sbbb
sbb
push
test
mov
ret
mov
mov
jno
nop
movl
cmpb
adc
sbb
push
mov
adc
mov
inc
arpl
sbb
sub
xchg
lret
pop
pop
ficompl
add
sbb
roll
pop
and
iret
lcall
xor
jg
sbb
sub
lods
mov
dec
ret
jbe
lret
push
ss
pop
mov
enter
or
imul
xchg
cmp
out
aam
mov
push
jge
adc
inc
or
lock
mov
dec
aaa
sub
pop
cli
int3
adc
rol
cmc
orl
cwtl
pusha
std
push
sub
mov
int
fimull
push
fdivp
std
mov
jmp
bound
fsub
repz
and
in
subl
or
inc
ss
hlt
out
fwait
cmp
push
push
ljmp
ja
es
sub
idivl
xchg
xchg
push
insb
xor
adc
mov
xor
cmp
push
push
jmp
lds
hlt
push
sbb
pop
or
xor
mov
movsl
aas
add
xchg
or
outsb
push
xor
aam
pop
aam
hlt
mov
push
aam
mov
in
cli
and
inc
xor
rcrb
mov
arpl
jle
cld
mov
xor
mov
pop
jl
aas
or
pop
push
movsb
xor
mov
call
and
jl
aas
push
subl
push
mov
push
imul
xchg
and
dec
push
xor
mov
ret
into
mov
inc
rorb
mov
rcrl
loopne
mov
call
push
and
cld
and
or
xchg
mov
xchg
lret
jns
dec
hlt
mov
subl
pushf
push
adc
jns
rcrb
mov
mov
pop
in
lahf
jb
ja
rcrl
sarb
lods
data16
cmp
or
test
cld
out
mov
mov
adc
mov
dec
dec
mov
aas
pop
cs
pop
ret
in
cmpl
or
dec
inc
push
dec
xchg
test
or
mov
xchg
test
sub
ret
mov
adc
adc
push
xchg
add
xchg
sarb
fs
jae
scas
push
cltd
sbb
sub
addr16
xor
cmp
sub
fsubl
imul
int
iret
sbb
inc
or
sar
cmp
in
lret
jns
loopne
lods
insb
dec
mov
int
inc
mov
insl
add
or
adc
out
addr16
jo
pop
testl
sub
cld
stc
or
ds
jmp
jae
adc
sbb
test
and
imul
bnd
fwait
sbb
sarl
sbb
push
mov
xchg
out
xor
rcrb
imull
lret
jmp
sbb
stc
xchg
fldcw
frstor
jns
adc
ds
into
dec
and
ds
mov
movsb
adc
lods
fwait
test
mov
fldl
je
fwait
xor
mov
sbb
jmp
out
cmc
mov
and
dec
xor
in
leave
dec
sub
inc
add
dec
pop
lret
pop
pop
mov
imul
push
lods
adc
data16
es
int
lds
sub
pop
jnp
inc
inc
xlat
mov
repz
dec
jle
mov
dec
jb
loopne
fucomip
push
xchg
dec
sbb
mov
or
fs
mov
push
rorb
mov
notl
out
leave
adc
push
fisubl
pop
jp
jp
xor
rcrl
mov
xor
test
lods
jmp
out
mov
jecxz
pusha
dec
insl
test
pop
xor
sub
sbb
in
sahf
pop
push
add
cmc
and
push
aaa
ja
xlat
and
xor
ret
popa
and
das
fs
push
xchg
add
pusha
xor
sbb
lods
mov
add
xor
push
das
rcl
sbb
decl
idiv
mov
fnstcw
dec
xchg
icebp
mov
mov
jmp
adc
inc
ret
inc
sub
imul
sub
mov
out
shlb
sti
imul
movsl
repnz
popf
rorb
jmp
shrl
jo
into
pop
test
movsb
xor
and
fldcw
adc
mov
lea
xchg
fsts
bound
mov
sub
jb
sub
jno
xchg
push
cltd
mov
fnstcw
mov
mov
dec
mov
dec
or
push
dec
lods
stc
popa
mov
data16
adc
hlt
mov
cli
inc
rcll
push
popa
cmp
out
mov
mov
in
lcall
sub
adcl
call
jne
sub
jo
jno
mov
ret
or
std
loop
xchg
rcl
sbb
sbb
pop
adc
adc
jmp
addr16
push
cmc
inc
imull
je
movsb
lret
jp
cs
fldl
lds
push
mov
cmpsl
bnd
stos
and
loopne
daa
dec
cmp
xor
or
jb
lcall
or
xchg
wrmsr
hlt
stos
lcall
push
xor
sub
icebp
int
jo
adc
ss
push
ds
cmp
and
jnp
or
int3
out
adc
cwtl
imul
pop
mov
sbb
shr
and
pop
or
scas
xchg
cmp
push
sarl
fcmovnu
cmp
cmp
out
sbb
repnz
cmpsb
xor
push
add
add
divl
dec
mov
inc
jmp
movups
in
lods
pusha
adc
cltd
test
mov
adc
cli
dec
sbb
xorb
cmpb
mov
cli
lcall
int3
pop
adc
fimull
stc
call
pop
andb
dec
mov
pop
and
lcall
test
dec
ret
lcall
push
xchg
dec
lods
arpl
dec
ret
cmc
jecxz
mov
in
push
push
jl
jmp
inc
push
inc
mov
add
imul
inc
sbb
add
addr16
jge
cli
test
jnp
push
pop
fisubs
cmp
mov
insl
push
jnp
fsubrl
sub
and
ss
sbb
mov
in
cltd
cmpsb
adc
and
xor
xor
mov
xor
mov
push
dec
mov
pop
mov
imul
or
arpl
cwtl
xor
scas
rorb
repnz
fsubrs
mov
test
inc
fld
stos
lret
scas
sub
lfs
shrb
lods
cltd
ret
mov
pop
mov
or
pop
fidivl
xchg
adc
stos
xchg
cmp
push
sbb
mov
int3
mov
aaa
bound
mov
int
cmp
jg
hlt
enter
cmc
ret
imul
inc
stos
mov
not
xchg
xor
inc
mov
test
popf
cld
stos
sarl
inc
mov
rcrb
test
aam
test
fldcw
mov
jp
jb
pop
or
lahf
aam
insb
ficoms
cwtl
pop
cmp
cwtl
inc
dec
loope
jb
jnp
xchg
mov
sub
xor
xchg
sbb
or
jge
jge
mov
inc
mov
cmpl
push
jns,pt
xchg
mov
lds
add
sarb
std
xchg
stos
les
fwait
rcrl
cmp
jmp
movsl
rorl
push
out
icebp
mov
sbb
test
mov
test
xchg
add
leave
repz
mov
and
xchg
ds
mov
xor
sbb
push
loop
stc
insb
dec
shrl
add
jl
test
es
add
adc
in
loop
cmp
xchg
xchg
cmp
inc
iret
clc
mov
mov
pop
aam
stc
fistpl
fmull
outsl
add
sti
insl
add
mov
jb
sbb
pop
clc
xchg
cmp
stos
dec
xor
ljmp
mov
pop
loope
xor
mov
jno
dec
xor
add
insl
mov
ds
das
mov
sbbb
sarl
aam
lcall
out
repnz
mov
inc
mov
cmc
xor
and
mov
sub
cmpsb
popa
or
loope
std
sub
subl
sub
in
fimuls
jno
orl
inc
roll
cwtl
stos
jne
scas
xor
mov
xchg
inc
sbb
dec
sti
out
jbe
negb
add
adc
lcall
adc
pop
mov
ja
lahf
clc
andb
add
mov
stc
das
out
in
popa
aam
fdivl
adc
popf
push
push
dec
adc
int
fisttps
das
out
pop
or
cmpsb
sahf
mov
stos
sbb
fcmove
les
push
repnz
jbe
fcoml
or
fstl
jno
and
cmc
ret
jo
sbb
or
stos
hlt
mov
cmp
ljmp
mov
inc
mov
test
sbb
fsubr
imul
sbb
repnz
sbb
rolb
xor
and
and
sub
icebp
sti
cld
push
pcmpgtb
jns
rorb
sarl
push
std
lea
test
adc
sub
cli
push
fs
repz
insl
into
xor
call
ss
add
xchg
xchg
fcomps
add
cmp
cmc
mov
repz
mov
xor
or
add
xor
push
mov
dec
pop
les
sub
jne
jbe
popa
in
xor
and
adc
out
and
repnz
pusha
xor
or
add
mov
jecxz
lahf
dec
inc
popa
xchg
repnz
ret
or
ljmp
push
fchs
mov
in
sub
xor
jnp
or
icebp
or
insb
inc
adc
popa
hlt
and
adc
and
js
push
push
xchg
xor
jecxz
das
aad
cmpb
or
inc
jne
les
mov
mov
pop
xchg
adc
pop
sbb
lds
jmp
add
xchg
mov
cmpxchg
or
mov
push
arpl
and
mov
or
dec
inc
daa
ficoml
iret
imull
jmp
sub
cwtl
mov
or
bound
outsb
add
fisttps
cwtl
repz
xchg
incb
es
mov
hlt
pusha
outsb
push
int3
mov
push
sub
out
cmpsb
sbb
mov
gs
imul
and
dec
xlat
lret
pushf
adc
mov
jp
push
fisubrs
rorl
cld
and
movsl
test
push
sbb
sub
loopne
push
int3
aas
int
pop
push
dec
jnp
mov
in
lods
push
cltd
dec
sbb
int3
push
xlat
jbe
jle
jmp
cmp
fnstenv
add
xchg
stos
mov
popa
lds
jecxz
sub
xor
cmp
inc
or
test
aad
mov
clc
pop
movsl
outsb
or
lods
ret
mov
into
js
cmc
mov
pop
test
pop
shlb
inc
lods
popw
stos
outsl
jge
orb
cltd
xor
inc
push
inc
lods
push
movsl
mov
xchg
mov
ficoms
mov
mov
lds
jle
push
mov
test
xchg
ds
jne
inc
out
push
and
scas
adc
pop
lds
jle
push
mov
test
xchg
ds
jne
inc
out
push
and
scas
adc
pop
lds
jp
push
mov
test
xchg
cmp
jne
inc
ljmp
add
dec
cmc
hlt
outsl
outsb
aad
rolb
push
mov
fcoml
iret
mov
fmull
pop
adc
jno
inc
sbb
or
cld
mov
sbb
icebp
lods
rcrl
add
popa
push
jo
inc
sbb
or
cld
mov
sbb
icebp
lods
rcrl
jno
je
popa
push
cmp
shlb
out
pushf
cmpsb
test
jmp
xchg
push
xor
jns
cmp
xchg
push
push
dec
scas
dec
fs
insb
dec
loope
icebp
sub
or
ss
in
sbb
pop
pop
cld
fndisi(8087
jmp
fmul
mov
and
outsl
mov
lahf
sub
adc
cli
sub
cltd
push
mov
mov
xchg
fwait
mov
push
lods
cwtl
not
jb
cmpl
cmp
sarb
mov
add
insb
inc
push
xor
and
and
lcall
sbb
repnz
jns
popa
mov
mov
ror
insl
je
icebp
movsb
jnp
test
jg
sbb
sbb
mov
sbb
icebp
lods
rcrl
add
popa
cmp
sub
sbb
gs
clc
shrb
test
sahf
lds
add
push
cmp
jg
dec
and
and
cltd
lds
test
mov
call
jl
adc
xchg
push
adc
sub
arpl
mov
hlt
test
rcrl
add
popa
cmp
sub
sbb
or
cld
mov
sbb
icebp
lods
rcrl
add
popa
cmp
sub
sbb
or
cld
rolb
enter
outsl
loope
popf
stc
ja
aas
inc
cltd
and
mov
scas
loopne
gs
and
stos
adc
push
sti
or
mov
lock
adc
pop
push
movsb
lds
xor
out
stc
pop
xor
or
sbb
adc
rcrb
push
int
int
or
inc
mov
add
adc
cmp
jae
loope
jp
or
sbb
push
std
xor
lahf
add
jecxz
stos
mov
push
ret
push
add
cmp
dec
fs
fsubl
add
lret
cmp
xchg
adc
add
push
pop
insl
xor
cmp
jns
test
jb
fbstp
cmp
int
and
ficompl
cmpsb
lret
mov
jle
xchg
xor
out
xlat
mov
xor
mov
inc
sahf
push
or
movsb
lea
push
sub
inc
mov
lret
rolb
pop
hlt
push
jb
inc
mov
ss
and
pop
lret
xchg
push
jp
sub
icebp
adc
sub
into
test
push
push
adc
movups
add
fwait
daa
push
in
add
ds
mov
mov
pop
add
inc
push
mov
std
imul
ret
jmp
push
test
shll
push
loopne
iret
std
mov
mov
leave
call
rcrl
lods
or
adc
stos
or
adc
outsb
push
jno
and
pop
xor
leave
mov
xchg
jae
xchg
xor
int3
add
and
cltd
pop
or
cmp
dec
push
sbb
inc
mov
inc
mov
inc
cmp
push
inc
repnz
popa
sbbl
leave
mov
xor
int3
inc
stos
jno
add
adc
and
sbbl
test
fsubrs
xchg
push
push
stc
stos
add
movsl
sbbl
sbb
jno
stos
pusha
mov
inc
mov
pop
inc
jl
mov
mov
or
sbb
enter
roll
jb
mul
je
insl
notb
shrl
mov
or
je
cltd
das
insl
sahf
add
xchg
dec
sahf
in
lock
ret
pop
mov
xchg
xor
popa
test
pop
or
push
in
aas
in
outsb
ret
sbb
lds
fisttpl
sub
add
inc
mov
dec
mov
jmp
or
insl
pop
icebp
lret
or
jp
test
jns
mov
lcall
jg
jp
ret
xchg
test
push
pop
rcrl
testb
fnstcw
mov
push
aas
repnz
cwtl
cmpb
inc
pop
adc
pop
mov
add
cs
jp
sti
add
aam
jb
sub
mov
dec
mov
jne
ss
xchg
jne
inc
outsl
out
xchg
cld
fisttps
jp
add
mov
xchg
dec
pop
fs
add
jne
dec
repz
and
sbb
mov
cmp
shrl
xor
repnz
sbb
aad
fadds
jnp
mov
cmpb
std
pop
fcmovne
push
sub
mov
sub
dec
fmull
pop
sub
or
les
inc
shl
stc
jns
vrcpss
xor
data16
mov
int
add
outsl
pop
sahf
test
add
inc
je
call
xor
ret
cmc
xchg
adc
dec
outsb
pop
sbb
cs
sbb
push
out
push
add
dec
lahf
jecxz
mov
push
jmp
mov
pop
ss
rolb
pop
mov
push
jl
fisttps
mov
cmp
scas
out
mov
std
mov
xchg
cmp
call
out
fnstsw
adc
les
jnp
js
inc
xor
inc
mov
orl
test
ret
add
push
xchg
or
mov
mov
cmp
mov
leave
jge
sub
xchg
xlat
xchg
stos
testb
push
out
jno
shll
pop
lret
xor
adc
push
out
bound
insl
xor
push
and
ret
sub
lock
jns
cwtl
addr16
test
scas
push
pop
adc
pop
cmp
push
aaa
xchg
std
push
mov
sahf
jmp
aad
or
jbe
sub
dec
mov
in
mov
mov
pop
daa
sub
pop
fidivs
inc
in
adc
rolb
inc
insl
adc
dec
mov
pop
cmp
flds
jge
stos
imul
aam
in
es
jecxz
outsl
movsb
lret
sbb
aas
lahf
dec
jae
pop
pushf
mov
push
ljmp
pop
shl
gs
mov
xlat
out
sub
sub
push
sbb
popf
inc
ficoml
jl
sub
scas
stos
cmp
sbb
push
push
inc
aad
rol
and
jae
add
jns
sub
or
mov
add
popa
pop
inc
xorl
mov
testb
inc
push
lods
mov
jl
test
fildl
sbb
cs
adc
jae
mov
xchg
out
addr16
jb
aaa
push
les
pop
lahf
jg
sbb
xor
push
cld
addl
data16
mov
gs
mov
shlb
mov
add
add
dec
test
and
cmp
push
pop
jmp
rcrl
jmp
data16
adc
push
cmp
std
insl
jl
xchg
adc
xor
push
imulb
lods
xchg
or
push
dec
das
push
out
outsb
sub
push
push
jmp
push
xchg
jnp
fidivl
aaa
movsb
pop
dec
and
push
inc
xchg
pop
adc
cmpsl
mov
sbbl
into
sbb
in
iret
xchg
inc
idivb
lahf
mov
mov
push
pop
cmpsl
imul
dec
bound
add
cs
cmp
sbb
aaa
int3
add
xchg
cmpsb
cs
xchg
add
and
clc
dec
mov
das
test
fnstsw
pop
aas
xchg
add
aaa
inc
outsb
push
aas
jp
roll
je
je
mov
and
sbb
cli
xor
add
popf
xchg
shlb
add
adc
push
out
mov
enter
xchg
clc
xor
xor
movsb
fstpl
jno
loope
in
shrb
xor
iret
int
leave
dec
test
sbb
mov
lock
sub
add
imul
mov
sbb
pop
in
push
jl
lods
les
movsl
fsubp
clc
lock
jge
mov
int3
push
sbbb
pop
push
hlt
push
jns
not
push
cmp
jne,pt
push
pop
mov
and
mov
and
jb
adc
dec
jp
pushf
dec
cmp
repz
inc
mov
mov
lods
add
out
pop
iret
in
and
hlt
add
sti
and
or
add
inc
dec
push
mov
sub
add
push
and
sbb
cli
jp
add
dec
jg
inc
rcrb
aam
sub
mov
lods
xchg
lcall
pop
test
rolb
adc
jo
fwait
inc
sub
int
xor
addr16
cmp
add
dec
pushf
pop
das
cwtl
xor
mov
lcall
adc
cs
inc
and
and
mov
cmp
or
sub
std
ss
jp
aas
xchg
pop
insl
or
sbb
push
xchg
jmp
cmp
std
ret
xchg
sti
aam
test
jp
jg
xor
scas
dec
loop
imul
xchg
mov
sbb
shrb
idivb
push
mov
lods
push
xchg
mov
testl
mov
aaa
aaa
mov
cmp
jg
jle
push
lahf
rcrl
nop
add
test
fmuls
aas
xor
add
pusha
and
push
xchg
fsubl
loopne
subb
push
adc
cli
pop
bound
pop
lahf
sbb
sub
push
sbb
jmp
sbb
out
xor
mov
add
jbe
sbbl
xor
jne
and
in
repz
das
lea
imul
lods
outsb
les
push
call
add
mov
and
lds
test
sti
xchg
cmc
cltd
sub
cmp
test
fs
test
rolb
cmp
push
arpl
out
cmc
in
inc
push
scas
xor
pop
aam
cli
movsb
pusha
adc
imul
insb
ficomps
xor
popf
add
inc
and
cmpsl
repnz
jl
cwtl
cmp
dec
out
or
sub
jne
mov
pusha
or
movsl
mov
in
mov
jo
mov
sti
jbe
add
mov
in
out
movsb
adc
dec
and
popa
xchg
cmp
add
fisttps
into
scas
repnz
cwtl
pop
jbe
mov
arpl
int
adc
jle
out
or
jecxz
dec
mov
jle
ds
stos
add
or
dec
fcoms
dec
mov
sbb
out
mov
movb
push
jo
inc
cltd
rcrb
pop
mov
inc
idiv
enter
scas
jae
mov
inc
pop
jb
stos
dec
fdivs
sbb
sub
xchg
pop
divl
push
cmp
inc
or
sbb
pusha
out
in
xlat
xor
fildl
mov
ljmp
push
in
dec
xchg
and
pop
test
sub
jmp
es
jecxz
push
mov
outsl
pushf
jl
mov
adc
pop
nop
jmp
cmp
push
sahf
lock
lds
pop
out
popa
mov
test
lds
loop
jp
loope
sub
addb
adc
repnz
mov
pushw
mov
mov
and
outsl
adc
cmpsb
cli
fldenv
fwait
ret
div
inc
pushf
cmp
inc
xor
pop
lcall
push
pusha
dec
jl
das
adc
xchg
jne
hlt
mov
push
push
and
and
mov
or
jns
jp
pop
adc
add
xchg
sub
outsl
push
sub
scas
enter
int3
cmp
imul
jae
cmpsb
jle
mov
jbe
xchg
inc
aam
fcomip
mov
pop
jnp
cmp
mov
mul
mov
xchg
mov
outsb
aad
dec
mov
dec
mov
sub
mov
hlt
lahf
cmpsb
int3
and
mov
add
out
ficomps
inc
outsb
stos
dec
lcall
dec
mov
pop
mov
cmpsl
xchg
mov
aam
dec
out
inc
sub
ja
ja
addl
mov
roll
mov
pusha
gs
mov
ret
xor
push
pop
dec
add
lods
sbb
cs
xchg
movsl
lea
cmc
jbe
lds
pop
stc
lret
pop
inc
adc
inc
xchg
mov
test
xchg
lods
rolb
outsl
jnp
repz
push
rolb
xchg
outsb
cmp
jg
mov
ds
clc
pusha
and
sub
call
in
push
add
cmp
stc
dec
lcall
adc
into
dec
aam
cmpsl
mov
jmp
xorb
xor
adc
mov
cmpsb
xor
inc
jmp
dec
mov
fwait
in
iret
cltd
fsubl
pop
pusha
adcb
mov
cmp
fsubs
subb
repnz
mov
sub
xor
stos
xchg
push
sarl
es
jb
dec
sbb
mov
mov
push
cmpb
fsubl
and
push
les
int
ret
add
adc
cld
inc
lsl
cmp
aaa
push
xchg
lcall
jae
insb
aam
xor
add
push
pop
insb
adc
lods
mov
gs
stc
aaa
iret
push
xchg
pop
loope
out
outsl
cmpsb
fadds
sub
jns
xor
lea
jp
push
mov
fidivl
imul
or
pop
repz
in
lret
sub
add
sahf
insb
jo
imul
aas
pop
push
scas
ja
lret
xchg
loop
adc
cmpsb
shr
pop
enter
add
unpcklps
dec
dec
xor
cltd
out
lret
adc
jp
cld
push
inc
xor
adc
ds
ret
fnstsw
setl
dec
jmp
mov
in
dec
das
fnstsw
mov
sbb
cmp
mov
pop
ret
rcrb
fcomi
decb
sbbb
clc
and
jae
push
pop
popf
cmpsb
loop
addr16
mov
scas
stos
jecxz
inc
clc
mov
mov
sarl
divb
sahf
cmpb
jb
aam
inc
mov
shlb
pop
jge
xchg
sub
das
lret
pop
xchg
mulps
das
stos
push
out
mov
sub
rolb
inc
dec
inc
fidivrs
jo
aaa
fstps
test
pop
xor
or
pushf
fimull
lea
je
and
dec
in
mov
and
or
decb
adc
or
call
mov
fmuls
enter
mov
jg
ljmp
clc
scas
aam
jne
inc
orl
xlat
lea
pushf
cwtl
daa
dec
out
sub
mov
dec
mov
pusha
fst
add
fs
dec
shlb
mov
mov
xor
jle
lahf
xchg
andb
xchg
addr16
mov
adc
rclb
dec
into
push
push
mov
nop
or
stos
jecxz
fnstsw
test
mov
and
scas
mov
inc
repz
jbe
fisttps
stos
movsl
fistpll
sub
push
cmp
enter
jecxz
icebp
jecxz
test
cli
pop
mov
cmp
daa
sbb
push
adc
repnz
stos
xor
or
mov
adc
and
push
daa
push
lds
nop
out
and
xchg
clc
in
push
int3
roll
mov
mov
test
ret
cs
add
sub
call
scas
in
add
outsl
outsb
sbb
and
mov
outsb
mov
sti
inc
icebp
and
loopne
mov
in
push
test
push
std
popa
cli
outsl
shrb
pop
xchg
fldenv
xor
jno
sti
iret
push
jmp
adc
push
and
mov
add
clc
pop
pop
sbb
movzwl
leave
idiv
sti
xchg
mov
xor
js
and
mov
pushf
je
mov
addr16
lahf
sub
mov
inc
cs
cli
jmp
jb
enter
mov
je
es
mov
mov
lock
fld
cmpsb
xor
sub
shlb
dec
cs
cmc
xor
fs
divb
jmp
popf
inc
bound
jne
push
xor
adc
adc
mov
pop
or
lods
push
ja,pt
dec
or
test
mov
lret
loopne
jnp
pushf
lock
mov
sub
je
popa
lret
add
cmpl
mov
pop
sbbl
inc
fdivs
lcall
test
ds
inc
mov
mov
lcall
push
test
mov
sti
jnp
popa
dec
loopne
negl
fmul
mov
xlat
dec
or
ret
notb
scas
sbb
lret
jecxz
popa
bound
xchg
mov
shll
mov
ret
sbb
push
mov
test
mov
fcoml
sahf
loope
sub
movsl
or
adc
fwait
xchg
daa
dec
nop
jb
repnz
ljmp
or
call
pushf
push
sub
push
shlb
jle
xchg
xchg
inc
stos
popa
fildll
jecxz
push
inc
cmp
dec
cmpsb
mov
xor
mov
jecxz
pop
insb
mov
push
ds
and
mov
in
pop
notl
pop
mov
xor
cmp
push
lcall
mov
es
pop
jle
dec
xchg
xor
cli
imul
fwait
testl
xor
dec
push
popa
int3
mov
jnp
fdivrl
fstpl
sub
insl
in
mov
addr16
arpl
or
iret
pop
and
push
scas
mov
push
xlat
repz
popa
sahf
adcb
popf
cmp
je
repz
sbbl
add
mov
or
out
push
pop
js
andl
xor
scas
leave
jle
cmp
cli
insb
mov
mov
sbb
imul
push
push
or
xor
jno
clc
popa
mov
xor
add
loope
cltd
fldcw
es
in
insb
and
inc
add
mov
scas
js
inc
jbe
sar
clc
sbb
push
out
sub
fsubrs
adc
lret
xchg
insb
aam
shr
push
xlat
movsl
sbb
fisubl
fisubrs
leave
pop
adc
dec
pop
lods
adcl
add
mov
lcall
jle
insb
add
sub
stos
sar
xor
out
addb
aas
xorb
and
push
fstp
pop
push
dec
cmovp
test
cli
jp
das
xor
inc
pop
shlb
or
iret
lret
je
fisttps
pop
and
push
dec
mov
mov
inc
cmp
pop
test
dec
ss
cmp
xor
cld
jb
addl
nop
sub
icebp
sub
sbb
jb
int3
cmp
scas
xchg
ljmp
jg
insl
pop
das
sub
repz
sti
inc
pop
pop
sbb
dec
cmp
dec
in
xchg
pop
jne
das
xchg
adc
and
cltd
movsl
push
and
rcl
mov
push
dec
push
adc
cmp
pop
push
adc
jnp
inc
aas
andb
adc
loope
outsb
jmp
push
xchg
and
xchg
test
stc
nop
cmpsl
int
jge
das
mov
push
fwait
lods
rol
push
adc
aad
jmp
repnz
xchg
loope
inc
and
mov
sub
push
push
inc
roll
mov
popa
mov
aam
inc
dec
fsin
sbb
jne
add
pop
and
je
int
lods
roll
and
lods
mov
addr16
sub
dec
fsub
outsl
bound
nop
fidivs
out
push
js
push
inc
xor
lret
sbb
sub
xor
jle
loope
clc
cmp
adc
int3
dec
lcall
jle
lods
cmp
push
jno
out
sub
xlat
sub
sar
adc
fcomps
pop
cmp
push
push
xor
cmp
fiadds
push
sub
push
pushf
sti
or
pop
dec
rcrl
dec
lret
mov
cld
ret
mov
movsb
cmpsb
imul
jno
xchg
pop
xorb
pop
bnd
dec
rclb
xor
xor
in
jp
mov
sbb
ja
sbb
pop
testb
scas
sbb
sbb
data16
lcall
fcompl
sti
and
dec
insb
or
jnp
fwait
addr16
xchg
mov
cmpsl
lods
and
sub
sub
enter
xor
pusha
test
les
xor
adc
rcll
xchg
lods
gs
sahf
mov
test
mov
and
pop
or
adc
or
movsb
mov
lahf
cltd
push
cwtl
enter
xchg
mov
orl
dec
mov
cltd
pop
push
xor
fcoms
add
jmp
fiaddl
lret
mov
pop
dec
jno
fwait
sub
popf
rorl
fnstcw
dec
scas
push
pusha
add
adc
loopne
adc
ja
push
lods
sub
dec
and
dec
add
sub
fwait
jbe
and
jns
iret
or
retw
and
lock
jno
aad
rol
jl
div
or
or
pop
push
xchg
in
pushf
icebp
cmpsl
cmp
sahf
sbb
lret
out
dec
gs
xor
inc
lahf
js
bnd
jle
lcall
and
int
xchg
inc
jnp
insl
cmpsb
push
xor
mov
clc
mov
xchg
call
add
and
aam
lds
pop
cmp
cld
inc
sbb
sub
push
cmp
xchg
push
push
in
test
mov
nop
stc
inc
mov
adc
add
cmp
jnp
mov
inc
cmp
adc
out
mov
add
xchg
sbb
addr16
in
insl
push
test
ss
ror
out
jmp
xchg
sub
add
and
jno
jecxz
or
xchg
sub
or
stos
in
fs
xor
das
rclb
pop
push
aas
in
stc
lahf
ficoms
mov
repnz
jnp
das
cmp
mov
sbb
xor
mov
xor
or
stos
ljmp
subl
ret
mov
dec
std
inc
jp
aam
roll
mov
sbb
mov
cmpsl
or
int3
neg
addr16
dec
cld
xchg
fbstp
mov
dec
add
gs
rolb
scas
cmp
mov
sbb
jle
sub
movsb
xor
pop
cmpsb
xlat
jge
mov
pop
jb
fiaddl
inc
pop
mov
or
push
jg
xchg
sahf
mov
cmpsl
and
or
push
mov
mov
rorl
pop
adc
jno
inc
sbb
or
cld
mov
sbb
icebp
lods
rcrl
add
popa
cmp
sub
sbb
or
cld
mov
sbb
lock
rcrl
add
popa
cmp
sub
sbb
or
cld
mov
sbb
icebp
lods
inc
pushf
push
mov
jl
stos
pop
adc
push
mov
sarl
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
stos
je
mov
es
roll
dec
cmp
or
sbb
imul
test
push
fwait
inc
jmp
sti
and
adc
popa
sub
cmp
or
sbb
stos
sarl
dec
xchg
pop
test
push
fwait
inc
jmp
sti
and
adc
add
hlt
sbb
addr16
stos
imul
clc
ds
xor
adc
pop
mull
and
and
dec
ja
sbb
cmp
pop
inc
jecxz
xor
fs
adc
sti
test
in
sbb
sub
rcll
aad
fs
mov
mov
inc
iret
test
sub
outsl
in
rcr
cmp
dec
push
cwtl
sbb
stos
stc
mov
adc
xor
fnsetpm(287
cmpsb
or
inc
xchg
movsb
cmp
outsb
test
fwait
imul
lret
dec
inc
sahf
add
or
mov
les
out
mov
cld
pop
fs
sub
adc
or
jl
lret
loopne
mov
div
push
xchg
fstpt
je
mov
jmp
sti
and
adc
add
hlt
cmp
or
sbb
imul
ljmp
add
scas
jno
jo
test
or
jnp
sub
sbb
or
sbb
daa
jmp
mov
sub
push
or
adc
ror
xor
idivl
push
sti
and
adc
add
hlt
cmp
or
sbb
imul
stos
je
mov
jmp
sti
and
adc
add
hlt
cmp
or
sbb
imul
stos
je
dec
push
cmp
jp
sarb
and
sub
popa
cld
sbb
imul
mov
inc
xchg
pushf
and
xlat
jmp
fbstp
mov
sti
sbb
push
test
cmp
fcompl
push
sbb
leave
je
xor
dec
xor
fsubrs
in
pop
inc
pop
rorl
jecxz
adc
jecxz
rorl
sub
fs
cmp
cmp
out
or
adcb
daa
and
scas
insb
push
rorl
out
push
push
xor
loopne
ss
mov
mov
xchg
lret
dec
sbb
movsb
mov
jb
shlb
mov
test
ror
mov
clc
push
mov
adc
cli
push
inc
jg
fisubrl
lcall
cmp
xchg
int3
mov
das
stc
pushf
pop
popf
loopne
dec
into
pop
jge
sub
or
sbb
xor
loope
mov
mov
ja
mov
shrl
pop
iret
fnstsw
push
loope
push
jne
test
and
sbb
movsl
js
pop
sbb
add
inc
cmp
lods
cld
sbb
popa
mov
enter
in
repz
or
outsb
pop
adc
cmp
jnp
adcl
sub
pop
inc
int3
jnp
mov
stc
push
test
inc
icebp
cmp
mov
mov
inc
clc
pandn
mov
imul
sbb
inc
out
outsl
cmpb
mov
inc
xor
pop
cmpsb
jp
ds
mov
push
mov
mov
sub
gs
mov
sbb
ret
mov
inc
insb
mov
mov
test
arpl
lods
inc
orb
and
insb
pop
mov
testb
call
jne
sbb
add
mov
ficomps
xor
adc
test
jle
rorl
cmp
cmp
xchg
lar
mov
pushf
jo
repz
add
inc
sbb
jg
cwtl
mov
loopne
xchg
bound
test
movsl
push
ret
xchg
loope
repz
pop
sub
movsb
mov
sub
push
in
sbb
test
sbb
shl
push
jnp
inc
or
mov
lock
sub
jo
mov
or
outsl
sub
imul
jne
jns
shrb
es
pop
aas
inc
pop
mov
lea
stc
mov
or
xchg
jno
rcrl
mov
xor
fldpi
jg
xchg
call
or
jecxz
shl
aaa
int3
call
leave
aam
sbbl
jb
movsl
xchg
mov
sti
mov
insb
rorb
jle
push
add
ret
lds
and
xor
fistpl
imul
out
cmpsl
dec
mov
mov
dec
enter
loopne
lret
lea
mov
add
ljmp
movsb
in
outsb
test
fwait
cmp
scas
push
push
imul
lods
adc
push
mov
mov
xor
sbb
out
in
std
adc
int3
push
sti
iret
outsb
mov
pop
aad
push
jp
pop
in
out
repz
mov
insl
notb
mov
ficoml
jle
sub
test
push
or
outsl
xchg
sbb
sub
fistpll
out
imulb
rolb
mov
push
in
dec
and
outsb
pop
ret
xor
mov
inc
pusha
and
fisubl
inc
jg
jnp
push
insl
mov
aam
pop
bound
sub
inc
push
addr16
test
and
add
rcll
add
in
xor
sub
cmp
scas
push
int
ss
mov
jb
mov
ret
fiadds
lret
repz
fadds
outsl
mov
push
mov
jge
jo
add
repnz
sahf
das
jmpw
pop
push
push
cmp
rclb
jnp
jns
popf
inc
call
sbb
mov
into
sub
cmpsb
mov
push
mov
jno
outsl
sbb
and
and
pop
out
ljmp
pop
aaa
notl
insb
pop
adc
sub
cld
cli
ss
pop
rclb
xlat
xchg
clc
xor
mov
xchg
and
push
iret
adc
sub
cmpsb
hlt
and
adc
in
daa
in
push
filds
cmp
das
xor
js
testb
xchg
es
inc
negb
jne
sti
bound
lods
adc
fwait
clc
sbbl
lahf
hlt
outsb
xchg
add
pop
int
mulb
jne
and
mov
fs
pop
enter
cli
adc
fisubrl
notl
loope
push
mov
xchg
clc
fwait
push
mov
xor
lods
test
xlat
pop
and
aas
adc
lret
lret
repz
rcrb
pop
into
dec
loope
iret
addr16
inc
aas
xchg
jae
rolb
into
push
dec
js
xor
insl
xor
stos
insl
icebp
pop
ss
std
push
and
sbb
pop
rcrl
xor
inc
adc
loop
aas
lods
fsts
and
cwtl
clc
mov
movsl
mov
inc
shrl
pop
sarb
pop
cld
pop
movsl
jb
decl
fcmovnb
mov
test
adc
mov
ljmp
in
jmp
jns
or
out
pop
lret
les
in
inc
out
mov
fildl
or
sbb
and
in
insl
cmp
arpl
pop
sub
sub
xchg
andl
insb
mov
mov
push
jb
dec
adc
pop
jb
xor
adc
push
outsb
push
and
mov
sbb
xchg
xchg
push
hlt
push
repnz
or
adc
inc
jl
inc
and
test
or
add
pop
mov
fwait
in
je
pop
xor
lods
mov
or
lods
or
jge
pop
sbb
adc
daa
adc
repz
adc
jp
adc
mov
test
xchg
icebp
roll
cwtl
aaa
mov
ss
push
lret
jno
mov
scas
jmp
mov
cmpsl
test
xchg
sub
cmpsl
sub
rep
push
mov
fld
adc
pop
push
dec
popf
jne
jmp
adc
mov
in
mov
push
dec
inc
lahf
sar
hlt
das
fdivrs
mov
daa
xchg
inc
fisubrl
or
out
add
sub
pushf
cmpb
mov
cld
sbb
subl
xchg
lods
sub
movl
orb
sbb
shll
sub
ror
adc
push
scas
mov
and
sub
adc
mov
inc
rorb
js
arpl
pushf
les
sbb
pop
mov
insb
jae
dec
add
cli
imul
pop
aaa
jae
outsb
pop
addr16
inc
shlb
bound
mov
push
jle
push
and
jb
sbb
mov
fldt
insl
push
out
insb
loopne
cmp
xchg
icebp
shll
dec
sbb
les
mov
push
jp
mov
push
push
pop
and
mov
cmpsb
cmp
inc
fdivrl
cmp
mov
inc
sub
sbb
sbbl
adc
sbb
mov
xchg
sahf
sub
adcl
dec
dec
sub
mov
and
pop
sub
arpl
inc
and
ficomps
dec
xchg
rol
insl
int
in
jecxz
xor
test
mov
pop
inc
test
sub
push
fsub
mov
jge
in
fildll
lret
sarb
jp
or
repz
dec
sbb
mov
outsb
imul
pushf
or
std
cmpsb
mov
ja,pn
movsl
leave
ror
in
test
sub
push
mov
mov
imul
lea
cmp
push
xorl
loope
rolb
push
or
mov
xlat
jp
mov
outsb
inc
dec
movsb
dec
or
xchg
xchg
and
in
jo
xlat
rcl
sbb
jnp
xor
lds
mov
stc
stc
xchg
into
ds
pop
mov
or
shrl
jno
inc
xor
mov
dec
shll
pop
out
xchg
sub
add
fcompl
js
and
and
jecxz
enter
push
cltd
mov
shrb
outsl
push
movsb
lahf
push
cwtl
and
dec
xchg
xor
dec
loop
or
aam
stc
ss
lock
lahf
and
xor
clc
adc
iret
gs
pushf
jl
push
mov
outsl
push
lock
icebp
ljmp
orl
inc
rcrl
lods
inc
pusha
in
test
mov
dec
mov
jo
mov
out
ljmp
and
cmp
push
loopne
xchg
jbe
es
std
ja
adc
ljmp
movsl
jecxz
icebp
push
jo
or
das
mov
and
inc
jb
aaa
push
jmp
test
cmp
test
fs
dec
cmc
hlt
xchg
jge
mov
xchg
pushf
mov
inc
fnstsw
and
std
jnp
ret
mov
daa
dec
int
adc
ds
sbb
sub
xor
inc
dec
orb
pop
sub
int3
jle
cltd
jg
loopne
daa
in
insl
push
pop
jmp
push
xchg
mov
xlat
push
imul
lahf
adc
fiaddl
xchg
xchg
stos
test
test
fxch
inc
adc
pop
lahf
out
mov
fimull
aaa
xchg
scas
sub
test
out
cmp
out
movsl
dec
pop
gs
ffree
lock
cmp
fsubp
lret
xchg
cmpsb
xor
je
imul
and
pushf
xlat
test
loopne
jmp
cmp
stos
or
xchg
dec
cmpsb
movsl
xlat
jae
in
lock
mov
cmpsb
into
ja
nop
xchg
fcmovu
insb
ds
sbb
fs
loope
pop
xchg
pop
pop
pop
mov
dec
and
dec
pop
and
mov
imul
xorl
js
shrb
dec
jg
shll
sbb
and
daa
push
inc
add
outsl
and
rcll
mov
push
das
std
fildl
stos
loopne
mov
mov
or
subl
decl
mull
movsl
fisttpl
push
cmpsb
leave
sub
imul
pop
mov
pop
sub
lret
test
xor
push
cmp
stos
and
pop
sub
mov
aas
push
daa
jae
mov
jns
mov
ret
and
loope
and
jnp
add
adc
outsl
outsl
pop
sbb
sub
stos
sahf
pop
cmp
movsl
faddp
addl
repz
mov
into
out
inc
jge
das
rcll
call
mov
fisttpl
orl
or
mov
jmp
loop
cmp
mov
jnp
mov
push
insl
or
mov
mov
jo
adc
push
dec
cmp
pushf
sub
xor
or
and
adc
fnstsw
inc
lcall
std
dec
and
in
mov
loop
push
pop
dec
mov
sbb
push
xchg
fs
loop,pt
mov
push
sahf
cli
push
push
cs
adc
add
add
imul
or
test
paddd
fsubrl
jge
cmovnp
loop
fisubl
adc
xchg
insb
cvttps2pi
lea
and
test
or
xor
sbb
jo
sbb
mov
xlat
scas
sub
cmp
mov
adc
sbb
mov
shrb
dec
fidivrl
es
sub
dec
mov
cli
fisubl
and
stos
mov
xor
add
in
ss
jo
gs
xchg
ss
aad
jmp
or
in
push
hlt
arpl
adc
sar
lock
push
fwait
dec
and
hlt
sbb
pushf
jns
adc
add
add
mov
or
hlt
cmp
lahf
out
lods
jmp
loopne
mov
mov
ss
mov
mov
out
cmpsb
xchg
std
daa
test
inc
mov
xchg
inc
mov
inc
stc
ss
popa
out
sub
jg
jp
outsl
lods
std
mov
fucomp
insl
jmp
sbb
add
daa
cltd
repz
mov
xor
cli
or
icebp
or
push
and
jp
repz
sbb
clc
rcll
movsb
pop
mov
adc
and
xchg
pop
movsb
insb
and
mov
rol
std
ret
pop
nop
in
ljmp
movsb
or
shrl
jae
jbe
sbb
mov
xor
jns
sub
aad
ret
sbb
pop
iret
xchg
jle
movsb
lret
and
cmp
push
imul
sbb
mov
cmc
imul
pop
dec
iret
les
leave
mov
mov
inc
mov
jecxz
fld
mov
pop
test
mov
in
adc
scas
lods
push
gs
jae
sub
add
jmp
loopne
aam
and
xchg
xchg
fdivrl
cmp
xor
inc
sti
aas
inc
jmp
mov
pop
mov
inc
xchg
pop
aam
dec
enter
jp
and
sarl
push
in
lods
lock
scas
pop
inc
or
adc
jbe
rclb
out
adc
mov
xor
nop
pop
adc
xchg
jp
fists
outsb
std
dec
lahf
mov
mul
xchg
or
cmp
adc
and
daa
cmp
mov
sub
lds
inc
lret
mov
mov
inc
mov
jp
xor
inc
je
mov
and
cmp
jae
push
xchg
popa
pop
dec
sub
aaa
jp
mov
pop
aad
loopne
leave
cltd
add
scas
jbe
movsl
out
pop
imul
shll
mov
das
mov
xor
add
sbb
cmp
lds
adc
jp
outsl
ret
out
mov
fnsave
cmc
loop
or
movsl
sbb
mov
mov
test
push
pop
jb
fnsave
adc
inc
les
fcomps
stc
into
hlt
rcl
fsub
push
hlt
pop
mov
jno
jg
or
jae
bound
ljmp
and
ds
dec
jbe
pop
cltd
out
sub
clc
mov
mov
cs
xchg
add
in
in
fwait
out
test
out
cmp
adc
test
insb
dec
shll
das
lods
clc
aas
or
dec
gs
jmp
and
jb
xchg
addb
int
mov
pop
mov
test
inc
sbb
insb
push
mov
pop
daa
fst
call
loop
je
jbe
stos
cmp
fs
movsl
jmp
nop
xchg
ret
and
pop
xchg
sbb
push
lret
das
iret
pushl
rcrb
out
adc
mov
loopne
sub
test
mov
mov
stc
jmp
es
mov
repz
lock
int
sbb
jo
sub
out
cmp
xchg
jg
call
out
mov
adc
xor
jmp
push
mov
in
jle
sahf
lea
mov
inc
idivl
mov
lock
movsb
cmpsb
mov
cld
outsb
add
out
pop
int
push
imul
mull
inc
movsb
into
sub
xorl
shll
pusha
sub
lods
inc
stos
push
cmp
ljmp
in
cmp
mov
mov
testl
jbe
fwait
add
scas
cld
sti
mov
das
xchg
repz
inc
in
sbb
inc
sbb
adc
push
cmpsl
pop
push
mov
rcll
cmp
push
pop
or
fsubl
mov
pop
or
jno
dec
aad
pushf
mov
lahf
jne
push
mov
outsb
scas
mov
mov
stos
sbb
jno
sbb
mov
pop
xor
std
scas
adc
fwait
mov
mov
sbb
inc
pop
fisubl
adc
add
lock
dec
cmpsl
addr16
jno
push
ret
sub
insl
push
sarl
cmp
xchg
adc
jbe
pop
ficoml
aaa
idivb
pop
xor
push
pop
jmp
push
arpl
mov
cmpb
stos
and
stos
jecxz
pop
sbb
fwait
pop
and
les
dec
sar
daa
pop
scas
js
out
cwtl
loope
pop
jle
push
scas
int
ror
mov
jb
addr16
jne
jns
loope
jmp
push
push
inc
les
enter
add
cmpsl
jo
xchg
pop
jae
ret
push
fistps
lds
and
icebp
shll
sbb
jae
pop
jnp
lock
rcll
popf
sbb
push
dec
mov
ret
ljmp
jmp
imul
adc
and
lods
or
pop
xlat
aaa
bound
mov
lea
and
inc
popf
or
popa
ja
out
inc
into
sub
outsb
adc
movsb
in
add
mov
loope
subl
inc
adc
rclb
inc
mov
add
pop
lret
mov
lock
insl
mov
popf
mov
clc
mov
cmpsl
pop
cmp
out
sbb
cmpsl
mov
push
js
and
popl
mov
loop
cli
jb
jmp
cmp
pop
xchg
test
les
pop
sub
dec
scas
jne
cmp
fnstenv
call
inc
hlt
cmpl
loope
inc
mov
pop
sbb
sbb
lret
je
mov
out
inc
js
push
div
push
lea
jbe
cmp
push
or
xor
lods
js
sarb
insb
mov
test
aam
andl
xchg
sahf
int
dec
int3
adc
jb
or
addr16
iret
pop
mov
cld
and
aad
mov
add
xchg
xlat
xchg
in
dec
insb
adc
subb
push
pop
out
rorb
rclb
movsb
popf
pop
fisubrs
xlat
inc
mov
and
out
cmp
arpl
xor
and
aas
mov
clc
add
std
mov
jmp
ds
mov
rclb
jns
jns
sbb
dec
dec
pop
movsb
jne
jbe
xor
add
jmp
mov
adc
decl
cmp
jl
push
daa
cmp
dec
imul
movsl
sub
cmp
pop
xchg
sub
daa
movsb
adc
or
verw
loop
push
ss
lods
dec
pushf
test
add
std
sub
or
inc
int
mov
and
scas
or
imul
test
movsl
ljmp
xrelease
stos
cwtl
xorl
pushf
sti
std
loope
dec
pop
mov
mov
popa
insb
xor
add
xor
pop
imul
repnz
mov
les
sbb
lret
dec
adcb
mov
mov
mov
test
cltd
lret
inc
insb
xor
je
cs
mov
mov
subl
jecxz
test
fnstcw
aad
cmp
and
aaa
xor
jle
xor
fwait
add
fcomp
mov
mov
adc
sti
mov
jbe
mov
lods
dec
stos
testl
push
sbb
loope
mov
xchg
fidivl
inc
out
nop
push
cmp
addr16
enter
in
adc
pop
sahf
push
in
out
andl
stos
and
and
and
jge
mov
mov
mov
decb
cld
in
lret
popa
into
jp
dec
mov
xchg
cmp
xchg
add
ljmp
movsl
pop
xchg
mov
sbb
test
mov
jp
mov
jbe
jnp
ljmp
pop
rcll
and
fwait
hlt
push
cli
mov
inc
popf
xchg
movsl
lods
imul
lods
jmp
pop
dec
push
or
dec
mov
popa
sbb
add
sub
in
xchg
xchg
jmp
rorb
push
inc
fists
ds
cltd
xchg
pop
cltd
loope
and
cs
xor
mov
aas
sti
inc
popl
fs
or
or
pop
nop
movsl
mov
sbb
out
out
lods
fisubrs
pop
into
arpl
loop
int
jmp
cmc
cmp
icebp
out
and
mov
push
mov
or
stc
or
sbb
xchg
mov
rcrb
push
aam
loop
push
fcomp
sbb
aad
jo
fcomps
lods
ss
pop
in
lahf
pop
lcall
push
xchg
gs
mov
inc
inc
mov
adc
mov
xor
sub
lods
sti
aam
inc
dec
jg
push
mov
call
push
push
dec
cwtl
sahf
mov
into
ja
fs
add
and
fimuls
inc
repnz
lea
jno
jmp
imul
sub
and
pop
xor
xor
adc
sub
mov
cld
mov
mov
cmp
sbb
sub
lods
lock
mov
mov
out
mov
es
test
mov
dec
xor
push
aam
jae
mov
xor
inc
enter
mov
mov
xchg
shll
pop
xchg
je
aaa
push
add
adc
aas
shll
pop
jno
mov
jmp
sti
and
adc
add
hlt
cmp
or
sbb
imul
stos
je
mov
jmp
sti
and
adc
add
hlt
cmp
or
sbb
imul
stos
je
or
imul
lret
adc
add
hlt
cmp
or
sbb
imul
stos
je
mov
jmp
sti
and
adc
les
hlt
cmp
aam
mov
cmp
pop
cmp
jnp
ret
ljmp
pop
flds
mov
mov
push
cmp
push
sbb
or
in
cmp
sub
sbb
or
jl
insb
lcall
lods
ds
sub
fmull
int3
jecxz
repz
add
adc
addb
pop
popa
xchg
ss
subb
int3
mov
inc
xchg
push
push
mov
ret
xorl
cmpsb
fimull
rclb
and
insl
ficoml
xchg
push
inc
les
mov
xchg
mov
ja
ljmp
sub
mov
or
mov
in
mov
int
sub
cmp
cmp
pop
mov
mov
in
add
jl
jae
scas
jns
pop
push
jecxz
sbb
in
ljmp
dec
jb
xchg
lods
dec
nop
xchg
sub
fdiv
xor
xor
int3
xchg
sbb
movl
mov
mov
cli
scas
cmp
cmp
cmp
or
push
stos
jl
insb
lcall
mov
test
and
xor
sbb
adc
mov
sub
add
aad
aam
leave
and
push
xchg
dec
mov
cli
inc
ljmp
pinsrw
iret
and
push
pop
call
pop
subl
test
mov
adc
dec
jp
push
pop
pushf
dec
mov
cld
sub
sbb
or
cli
cmp
sub
sbb
or
jl
insb
lcall
lods
pop
pushf
dec
mov
cld
sub
sbb
or
cli
cmp
stos
cmpl
pop
sbb
sub
fmuls
xor
cmp
mov
cltd
movsl
adc
xchg
mov
clc
pop
dec
adc
mov
test
xor
mov
sbb
lret
xlat
push
fisubs
bound
sub
in
adc
sbb
add
xchg
jae
mov
push
xor
shll
in
scas
mov
mov
cmpsb
jns
dec
popf
push
fmull
adc
pop
scas
mov
gs
xlat
mov
xchg
repz
adc
out
gs
mov
add
mov
aam
adc
mov
mov
les
push
or
dec
dec
cmpsb
ret
test
pop
cmpl
pop
fsubrs
pop
and
push
int
lret
pop
mov
or
fimull
incb
imul
sbb
popa
xchg
in
test
mov
cltd
ja
sbb
and
push
sahf
xor
jg
mov
cs
jecxz
popa
push
xchg
push
jnp
dec
mov
pop
mov
sbb
jl
jp
int
addr16
sub
push
in
mov
out
ss
and
arpl
fildll
mov
jg
repnz
inc
jl
aas
scas
mov
ret
mov
fisubl
xor
lods
je
or
inc
repnz
push
adc
xchg
outsb
scas
ds
leave
aas
dec
aad
inc
insb
cmpsl
out
cltd
push
enter
imul
mov
aaa
mov
add
pop
shrl
push
aas
cs
les
and
lock
xor
shlb
jmp
push
sbb
jp
ja
dec
sti
mov
push
aaa
mov
cmp
add
sub
sbb
in
push
leave
rol
mov
pop
icebp
fs
mov
sarb
mov
push
jp
xchg
or
dec
loop
rdtsc
add
je
addb
mov
push
fsub
mov
mov
pop
popa
inc
mov
movl
fs
fwait
push
jle
mov
jns
movsb
hlt
pusha
sti
sidtl
xchg
xchg
adc
lea
outsb
fs
outsb
imul
test
int
mov
insl
mov
ficompl
ds
or
fwait
lret
sub
xchg
xor
mov
daa
lods
xor
dec
dec
cmp
mov
bound
sbb
xchg
aad
rcrl
es
inc
mov
dec
mov
cwtl
xchg
mov
test
imul
push
fmull
sub
cmp
into
rcll
lret
mov
subb
mov
xchg
mov
test
sub
lock
xor
mov
mov
pop
add
inc
xor
mov
mov
or
inc
xor
int
and
hlt
lods
mov
sub
rcrb
pop
test
push
inc
fisubrl
daa
lods
mov
ljmp
push
jecxz
dec
or
popf
sub
or
add
pop
mov
sbb
popf
mov
lret
xor
sahf
adc
scas
fsts
lods
fbld
das
out
sti
in
ss
ret
out
push
xchg
cli
popf
cmpsl
xor
xor
pop
push
jecxz
xor
out
addr16
inc
les
dec
pop
cwtl
outsl
mov
scas
pop
jmp
setne
pop
sahf
mov
adc
fisubs
insb
cmpsl
mov
jle
repz
sub
scas
sar
xor
and
mov
add
sarl
pop
mov
xchg
fbld
cmc
add
xor
adc
sbbl
mov
popa
mov
call
mov
push
jnp
dec
mov
movsl
scas
in
lahf
pop
or
lods
sub
arpl
mov
bound
mov
mov
imul
mov
add
push
imul
repnz
mov
or
jae
outsb
xor
sub
es
inc
jl
imul
sti
jb
es
shll
lods
or
outsb
ljmp
cmp
cmp
fbld
sub
imul
mov
fsubs
movsl
mov
in
icebp
mov
pop
in
mov
adc
xchg
xchg
add
mov
mov
ds
jnp
push
jg
sub
pop
inc
daa
jle
lret
push
and
jge
pop
and
sbb
inc
xchg
cmpxchg
fisubl
and
int3
add
stos
dec
outsb
cmp
sub
cli
sbb
pop
or
movl
jno
xchg
daa
pop
sti
rclb
adc
fcmovb
icebp
add
or
in
loope
sbb
sub
xchg
cmp
and
xchg
in
fldl
xor
aad
cmp
inc
enter
mov
adc
cltd
xor
addr16
repnz
mov
nop
jp
or
and
jl
sub
imul
sbb
daa
ds
repz
xor
xchg
addr16
test
mov
mov
mov
lret
roll
faddp
repnz
push
pop
add
fbstp
cmp
xor
jnp
repz
inc
das
xchg
ja
jge
cmp
lock
inc
ret
lock
cmpsb
scas
scas
mov
lahf
std
sbb
loop
mov
pop
pusha
aad
lds
lods
jmp
outsl
test
stc
and
dec
dec
test
mov
int3
add
movsl
sub
sub
sbb
orl
cwtl
stos
mov
push
jmp
es
loopne
mulb
fs
jo
adc
es
notl
and
cmpsl
dec
test
aad
iret
mov
sbb
loope
adc
das
in
jmp
scas
bound
lods
sbb
or
xor
cwtl
daa
icebp
sbb
jge
cmpsl
fisubrl
push
push
and
sbb
or
jbe
or
mov
fisubrs
insl
dec
or
cs
or
cmp
pushf
addb
xor
mov
dec
lahf
inc
fs
xchg
lods
shlb
or
push
xlat
dec
std
push
fmulp
xchg
mov
xchg
sbb
sahf
leave
and
stc
sub
fs
push
mov
enter
sahf
adcb
fbld
xchg
pop
or
in
sub
mov
idivb
test
cmp
push
adc
mov
out
xchg
pop
jge
cs
test
or
cmpsl
cmp
mov
loop
xor
push
push
inc
in
sbb
sub
stc
pop
mov
cltd
adc
pop
sub
fnstcw
cmp
inc
popf
scas
jmp
pop
inc
push
imul
daa
push
dec
sub
daa
std
shrl
jne
mov
lds
aaa
insl
adc
ja
sbb
fiaddl
mov
push
jl
mov
std
cmp
das
fstl
add
or
xor
mov
divl
push
outsl
sub
sub
fsubrl
push
push
fwait
rcl
mov
xor
repnz
inc
push
ja
scas
mov
xchg
in
es
inc
fiadds
jle
cmpsl
fs
cltd
stos
sahf
fildll
fdivrp
xchg
sti
cmp
mov
loopne
pop
int
cltd
ret
xor
lcall
push
cmc
sbb
jne
push
sarl
dec
push
inc
shlb
inc
mov
les
stc
outsb
into
push
scas
ret
add
cmp
scas
enter
js
setge
mov
inc
xchg
or
ds
mov
inc
movsb
nop
xor
das
addr16
enter
dec
sti
sbb
sti
or
mov
cwtl
jmp
stos
jp
xchg
pop
rolb
and
xchg
jno
sbb
sbb
cmpsb
cld
in
out
sub
cmpsl
gs
test
mov
mov
cmp
push
or
std
jae
pop
dec
lods
or
dec
xor
stos
out
insb
pop
jmp
jnp
ds
dec
inc
sub
jbe
stos
loopne
shrl
adc
mov
pop
jl
mov
mov
push
ljmp
es
call
int3
or
lods
pop
jnp
sub
mov
das
in
xor
sbb
and
pushf
jle
push
mov
rcl
pop
outsl
pop
out
mov
loop
cmpb
stos
and
sar
int3
mov
push
mov
sar
mov
adc
pushf
loopne
pop
inc
xchg
fbstp
dec
mov
mov
mov
or
fldl
fs
movsl
hlt
xchg
mov
mov
leave
sbb
jo
mov
mov
icebp
mov
jo
cmp
lret
xor
push
in
je
fdiv
fiadds
jecxz
dec
cmpsb
es
fadds
outsl
sbb
lock
and
jp
push
mov
mov
and
inc
daa
out
push
repnz
mov
out
test
and
loope
and
aad
sbb
popf
jns
test
pop
loope
mov
sbbl
scas
and
clc
incb
stos
fiaddl
inc
cli
and
rorl
xor
clc
sbb
sub
push
push
movsl
imull
adc
jge
pop
in
mov
mov
dec
ret
nop
pop
or
call
cltd
xlat
mov
ljmp
aad
inc
mov
sbb
arpl
scas
or
fs
cmc
repnz
into
popf
and
lods
or
lret
inc
into
sbb
sbbb
mov
push
jle
push
push
test
pop
cmpsl
sbb
jecxz
fcompl
nop
jmp
call
mov
jl
push
dec
add
mov
not
rol
divl
ljmp
sub
inc
les
ljmp
cmp
mov
test
inc
fildll
ds
mulb
push
les
clc
mov
cmp
ret
setae
add
js
daa
xchg
dec
gs
jb
sub
aad
pushf
adcb
int3
mov
push
jno
sbb
ror
jp
mov
repz
mov
cltd
subb
fwait
mov
std
rcrl
xchg
xchg
aam
cmp
push
fwait
pop
inc
xor
cld
cmp
inc
and
cld
cs
adc
mov
xor
pop
pop
decb
rorl
les
sbb
xor
bound
imul
test
stos
ss
js
jg
mov
fs
jne
cli
push
add
out
or
or
js
decl
js
cmc
test
pusha
arpl
jnp
sbb
jl
in
push
mov
lret
mov
out
mov
jp
repz
sbb
aas
out
enter
inc
mov
sub
lock
popf
add
out
pop
out
sub
jnp
loop
jne
mov
push
sbb
aas
sub
xor
and
lds
xor
xor
jae
mov
cltd
movsb
pop
jbe
jmp
and
fldt
std
pushf
int
pop
push
dec
insl
lret
add
or
cmp
ds
or
arpl
das
nop
push
aaa
dec
shlb
xchg
push
mov
lods
sub
lret
rcrb
out
iret
insb
popl
and
adc
xor
mov
jns
out
rcll
adc
lods
lds
push
rcrb
aam
cmp
out
cld
mov
mov
shl
in
adc
hlt
and
pop
add
nop
jg
data16
or
aam
sarl
sti
enter
xor
lret
sub
and
loopne
mov
aaa
fisttpl
aas
add
mov
and
jg
popf
or
and
pop
cmp
xchg
ja
sarl
loopne
pop
sub
loopne
pop
pop
mov
fsubrs
pop
roll
lret
adc
repnz
pop
xor
leave
cmp
xchg
add
mov
in
or
push
cwtl
mov
lcall
push
aaa
out
pop
in
jl
lret
jo
into
push
xor
mov
jae
lods
std
rorb
mov
ljmp
add
adc
and
fstpt
ror
cmpsl
mov
mov
fisubrs
cmpsb
mov
call
pop
fstps
das
out
js
pop
jg
jl
dec
dec
addr16
lock
mov
and
xor
orb
adc
mov
push
aas
xor
shll
xchg
mov
test
add
inc
sub
xchg
push
mov
or
rcll
mov
or
and
stc
stc
ss
add
mov
xchg
insb
repnz
adc
dec
cmc
add
mov
push
out
mov
mov
roll
stc
js
testl
imul
enter
and
xlat
push
repz
xchg
jp
push
cmp
inc
scas
xchg
arpl
xchg
dec
jnp
sub
push
xchg
mull
push
cltd
dec
mov
mov
mov
fcmovu
in
mov
icebp
outsb
fisubl
aas
leave
add
push
xor
cli
in
mov
std
ja
xor
mov
in
mov
ret
inc
shr
mov
loopne
push
push
xchg
ror
sahf
dec
dec
push
std
and
or
pop
out
adc
sbb
xorl
fwait
and
loopne
fucom
mov
sbb
iret
xor
les
out
mov
xor
inc
andl
sbb
adc
mov
je
repnz
rorb
ljmp
enter
movsl
aaa
in
faddl
out
adc
and
out
aas
inc
or
mov
xchg
mov
scas
es
out
mov
outsb
add
repz
xchg
mov
pop
fnstcw
mov
add
pop
outsb
xor
mov
ret
adc
movsl
testb
js
sub
and
dec
icebp
mov
sbb
xchg
xor
sbb
jb
push
dec
aas
pushl
and
inc
or
mov
out
jo
mov
xor
bound
ja
mov
adc
lcall
pop
push
add
pop
dec
int
xchg
fisubrs
inc
sarb
mov
inc
in
dec
fstl
mov
ja
out
sahf
sbb
outsb
lods
fiadds
jne
cmp
pop
adc
dec
xchg
pop
filds
fimuls
xor
sub
or
std
stos
jmp
mov
stc
scas
insb
adc
and
xor
mov
insl
jle
jle
aad
rcr
cmp
mov
pusha
cmp
mov
aam
outsb
or
leave
pop
aas
ds
pusha
fsubr
aam
pop
inc
cmpsl
add
and
pop
dec
int
mov
std
scas
and
inc
sub
mov
mov
jae
mov
lret
xor
out
aaa
loopne
and
cmpsl
leave
dec
push
mov
inc
cmc
dec
popf
pop
das
lock
mov
and
fcoms
push
movsl
push
loope
cmpsl
pop
add
cmc
and
pop
stos
cmp
cmp
test
xchg
adc
lcall
mov
adc
mov
in
mov
fsubs
orb
test
lods
push
mov
inc
fcmovbe
mov
xlat
out
xchg
mov
outsb
or
fcoml
xchg
jmp
add
cld
cmpsl
push
cmpb
dec
das
out
dec
pop
nop
int3
insl
or
jo
cld
lret
scas
fstp
inc
push
or
push
jge
sbb
movsl
popa
ds
xchg
sub
insb
out
add
fnstsw
mov
inc
iret
jno
aaa
les
push
fcomip
push
das
rol
sti
mov
push
sahf
jnp
sub
xchg
movsb
push
xchg
loope
test
cmp
dec
cmp
inc
scas
ret
mov
mov
cwtl
enter
test
and
leave
sbb
xchg
xor
xchg
mov
das
fisubrl
in
sbb
add
inc
repnz
mov
pop
push
das
aaa
rorb
jge
lock
outsb
inc
jae
jg
pushf
repz
mov
loop
mov
mov
dec
add
sbbb
enter
jl
popa
shlb
xor
or
adc
xor
in
pop
sub
ljmp
mov
and
nop
dec
pop
xchg
inc
jo
mov
cvtps2pd
sbb
mov
adc
or
xchg
pop
shrl
inc
ljmp
ss
mov
xor
scas
leave
repnz
inc
lcall
imul
test
lds
shll
jns
lret
mov
inc
loop
push
add
gs
mov
scas
mov
or
mov
add
xor
xor
fwait
inc
lea
std
dec
bound
dec
subl
cli
pop
mov
stc
xchg
sti
sub
sbb
cli
cltd
lds
mov
flds
rorb
aaa
in
je
stc
sbb
pushl
in
mov
mov
push
jae
push
cmp
sti
mov
aam
mov
add
xor
mov
pop
add
mov
fxch
and
lahf
inc
mov
xchg
outsl
xchg
cltd
loopne
or
js
fildl
fcoms
dec
aam
enter
loop
clc
stc
in
out
mov
sub
das
jne
into
pop
stc
shl
mov
out
push
lock
jp
mov
cmp
in
cld
sub
mov
add
add
insl
sbb
xchg
pop
es
sub
jne
popa
or
test
add
fs
mov
mov
xorl
sub
mov
pop
lods
add
jmp
cmp
out
pop
loopne
sub
ds
xchg
movsb
or
cwtl
xor
cli
ret
push
adc
push
pop
les
imul
adcl
data16
push
jae
cmpsb
mov
pop
int3
jg
nop
sbb
mov
sti
pop
dec
out
dec
inc
pop
mov
jge,pn
popf
or
jle
hlt
outsl
pop
pop
mov
fwait
cli
adc
inc
adc
loopne
movsb
loopne
rcl
mov
out
jg
mov
pop
ljmp
je
daa
fidivrs
sub
dec
ret
dec
push
lea
and
stos
pop
bound
jmp
inc
xchg
cwtl
loopne
fildll
or
ljmp
cmpsl
les
testl
mov
inc
mov
cs
push
jmp
shrl
cmp
mov
jecxz
sbb
jle
push
leave
adc
add
and
in
pop
sub
dec
andl
and
and
and
push
mov
adc
test
mov
xchg
fcmove
inc
addr16
stc
cmp
mov
subb
sub
outsb
shll
dec
pop
shrb
in
loope
sub
xor
repz
xor
mov
inc
mov
outsb
mov
cmp
cmp
xchg
xor
data16
test
mov
jne
rolb
data16
jg
outsb
pop
xor
rorb
jae
adc
sub
aam
sar
and
pushf
push
push
test
mov
rcr
scas
adc
popa
pop
jns
ljmp
mov
push
xchg
cmpsb
shrl
and
arpl
fmulp
ucomiss
push
dec
adc
fildl
roll
imulb
inc
pushf
lahf
mov
xchg
movsb
or
enter
cmp
cmp
add
pusha
aas
dec
mov
sbb
lods
bound
and
jle
negb
rcr
shll
cmpsl
mov
mov
pop
cli
mov
call
and
add
lret
xchg
pop
jb
sub
adc
es
xor
jp
loopne
push
jno
cmp
add
or
mov
push
xchg
cmp
pusha
data16
inc
dec
leave
mov
mov
dec
xchg
stos
aaa
repnz
lahf
mov
loop
mov
or
sarl
sub
ljmp
test
repnz
enter
gs
fisttps
in
adc
testb
cmpsb
icebp
scas
popa
mov
fs
scas
dec
or
enter
and
sub
pop
adc
or
and
repz
push
fwait
mov
imulb
loopne
pushf
mov
test
outsl
pop
add
hlt
mov
xchg
insl
orb
mov
je
cmc
and
xor
mov
pop
mov
cmpsb
movsb
ss
sti
inc
divb
test
jbe
pop
xlat
or
ficoml
pop
lahf
loope
rorb
sbb
and
adc
stos
shlb
cltd
pop
cltd
repnz
sbb
sbb
mov
lds
push
pusha
inc
jl
lods
stos
rorb
movsb
and
ret
jg
sub
repz
jl
insb
lcall
lods
pop
pushf
dec
mov
cld
sub
sbb
or
cli
cmp
sub
sbb
or
jl
insb
lcall
lods
pop
pushf
dec
mov
cld
sub
sbb
or
cli
cmp
sub
sbb
or
jl
insb
lcall
lods
pop
pushf
dec
lea
cld
cs
sbb
cmp
into
cmp
sub
sbb
or
jl
insb
sbb
test
sti
dec
je
adc
and
xor
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
sub
pop
push
int3
outsb
icebp
or
outsb
pop
jo
loop
pop
in
mov
sahf
int3
out
mov
into
mov
ds
bound
outsb
cmp
mov
scas
cld
mov
int3
scas
sar
lods
into
mov
hlt
dec
jo
push
adc
pop
adc
and
mov
lcall
add
sub
push
jle
xchg
add
jmp
push
adc
rol
test
lock
cmp
rorl
fxch
mov
adc
and
sarb
imul
aas
adc
mov
mov
inc
pushf
mov
pushf
repnz
repnz
xchg
cmp
inc
mov
pop
repz
add
xor
mov
shrl
test
jae
imul
scas
cmp
int3
stos
out
lods
ss
shlb
mov
loopne
xchg
jnp
scas
mov
imul
cld
mov
aam
mov
fisttpll
jne
push
inc
mov
sub
xabort
push
int3
scas
test
pushf
fsubp
inc
cs
insb
jp
bound
dec
adc
jne
imul
rcll
in
arpl
pop
sub
pop
push
sbb
mov
cltd
in
mov
xchg
in
xchg
loopne
std
lahf
out
sub
outsl
or
das
cmp
sbb
or
cld
mov
int3
out
mov
fimuls
pop
push
dec
outsb
cmp
sub
sbb
or
cld
mov
int3
out
mov
fimuls
fisubs
movsl
add
mov
mov
repz
subl
adc
cs
fs
pop
test
inc
les
leave
mov
lret
addb
mov
inc
adc
or
cwtl
arpl
cwtl
pusha
dec
cmc
jl
xchg
or
sbb
in
mov
and
cmp
and
stos
mov
jmp
lock
shll
hlt
xor
lock
adc
cltd
xchg
cwtl
lods
shl
inc
dec
fndisi(8087
cmc
cmc
stc
xor
mov
in
lret
fldl
iret
mov
mov
loop
add
fidivrs
mov
stc
lods
outsl
jle
push
adc
insb
push
int3
inc
addr16
cmc
mov
aam
ss
jecxz
cmp
or
nop
cli
add
sbb
test
sub
aad
loop
cltd
adc
cmp
imul
shlb
shlb
push
pop
sub
in
fmuls
lods
adc
pop
insb
sub
or
iret
cmp
icebp
loop
sbb
and
into
and
cmc
xchg
ljmp
and
mov
test
popa
fimuls
xor
pop
pop
in
rol
test
jnp
std
dec
add
mov
insw
push
cld
mov
push
outsl
cmc
or
jl
sub
mov
sub
push
jmp
daa
pop
js
shll
sti
lods
jmp
pop
inc
push
mov
xchg
xor
inc
loop
jbe
insb
out
mov
push
lret
je
iret
fidivrs
cmp
subl
pop
fcomps
jmp
cld
jg
ficoml
and
push
pop
outsb
leave
jg
dec
dec
jle
mov
push
lods
aam
test
iret
adc
mov
jmp
das
push
xchg
pop
rcrl
xor
push
xor
loope
mov
jno
test
es
jne
icebp
imul
lret
out
xchg
dec
pop
lds
fdivl
and
je
mov
lahf
cwtl
mov
lea
jns
mov
mov
mov
sti
jmp
jg
xor
cmp
xlat
cmpb
repnz
jns
xor
fisubs
push
mov
sub
cmp
inc
adc
cmpsb
jmp
cld
lods
pop
jle
mov
xchg
andb
insb
sarb
jg
sahf
push
mov
dec
in
mov
jnp
mov
mov
cmp
pop
iret
pop
dec
int3
or
inc
lahf
jl
mov
xorb
shll
pop
pop
rcrb
bound
out
cmpsb
xchg
jnp
sub
std
movsl
add
ret
pop
out
xchg
shlb
daa
adc
lcall
or
into
fsubrs
mov
lock
dec
inc
or
stc
leave
or
inc
mov
mov
push
or
fwait
jge
sub
mov
jnp
adc
enter
and
jns
push
jbe
fcmovnu
push
stos
addr16
xlat
ss
push
scas
ficoms
cmp
and
mov
or
push
aam
xor
sbb
inc
addr16
jle
into
mov
mov
mov
dec
ror
int3
xor
mov
push
in
stc
sub
adc
mov
jb
mov
out
loop
imull
xor
das
adc
xorl
inc
xchg
and
fdivrl
push
sahf
sub
xor
lds
sbb
xchg
add
pop
dec
fwait
mov
xchg
mov
pop
pop
mov
and
test
in
loope
test
push
pop
ds
xchg
cmpsb
or
ds
mov
insl
jnp
mov
mov
lods
arpl
xchg
mov
int3
ret
lods
ds
sub
and
xorb
test
insb
stos
into
xor
inc
ja
mov
ret
lea
push
push
js
ret
test
jmp
and
movsb
add
sub
bound
pop
or
mov
aad
andl
inc
jb
cmp
jge
pop
jmp
xorl
scas
jl
ja
cld
sbb
jmp
cmc
scas
fisubrs
frstor
ret
fs
dec
add
mov
and
push
pop
jno
fldt
xlat
cltd
mov
aaa
in
cmc
mov
xchg
in
cmpsl
outsb
stos
dec
jg
aaa
insl
mov
das
add
pushf
jmp
test
sub
cwtl
imul
add
fldt
jg
dec
in
mov
xor
pop
xchg
aam
nop
test
aam
sbbl
stos
mov
mov
in
adc
mov
stos
add
xchg
fs
repz
xor
jne
notb
or
mov
fldt
aad
arpl
cmp
aam
cmp
das
adcl
fdivrs
int3
dec
push
xlat
mov
enter
xor
fdivrs
push
cmp
sub
addr16
frstor
and
mov
xor
cwtl
cmpsb
sub
inc
fwait
addr16
dec
mov
jns
shll
rol
dec
inc
jge
inc
lahf
and
inc
fstps
jnp
add
xor
jmp
fistpll
jb
lcall
jo
jecxz
xor
out
insl
ja
rclb
add
xchg
sub
out
insl
jl
scas
dec
or
xchg
jne
outsl
xchg
mov
and
mov
int
jnp
dec
pop
mov
data16
or
sbb
xchg
sti
rcrb
sbb
or
mov
xchg
lods
cli
arpl
xchg
les
arpl
gs
xor
and
mov
andb
lods
pop
test
ljmp
leave
mov
dec
insb
lea
das
mov
mov
popa
push
inc
imul
out
pop
xchg
outsb
cmp
lods
sub
sub
cwtl
sbb
jp
mov
mov
outsl
pop
movsb
dec
push
enter
clc
notl
rcll
cmpsb
int3
sub
inc
lods
jmp
pop
cmp
inc
int3
scas
push
cwtl
test
daa
scas
lcall
inc
xor
int3
mov
push
pause
frstor
pop
pop
xchg
imul
inc
sahf
int3
xor
jno
adc
jle
pop
fwait
lahf
mov
xlat
fsubrs
inc
inc
push
xchg
xor
jge
push
mov
das
shl
repz
pop
pop
sarl
clc
in
pop
sub
mov
daa
add
mov
add
mov
test
lret
jnp
loopne
push
jecxz
jb
dec
stos
xchg
in
gs
mov
or
ljmp
fmull
jmp
lock
dec
aaa
dec
pop
mov
cs
adc
outsl
mov
jb
jo
dec
xor
mov
mov
jne
sbb
negb
test
lods
iret
push
adc
fwait
push
or
inc
or
std
add
pop
sbb
xchg
imul
mov
mov
loop
loopne
cli
inc
cmp
lret
push
int3
add
aad
pop
repnz
pop
rcrl
mov
xor
enter
push
ret
or
jp
mov
lds
add
mov
mov
pop
jp
push
shl
xchg
insb
jne
fldz
scas
fidivl
leave
dec
jg
inc
mov
hlt
js
xor
dec
push
mov
inc
mov
ret
bound
jp
scas
xchg
adc
add
adc
stos
mov
scas
aas
repz
or
dec
nop
mov
das
xlat
sub
jns
sti
lods
pop
ljmp
lret
xlat
ret
cmpsl
adc
adc
mov
aaa
leave
pop
es
lcall
pop
and
int3
rcr
pop
ret
insb
and
mov
iret
or
xchg
xor
jmp
jns
or
cld
jnp
pop
mov
mov
cmp
popa
xor
inc
lock
lahf
pop
dec
test
fsubr
fwait
daa
xchg
aam
sub
mov
mov
in
add
mov
mov
sti
mov
movsl
mov
inc
fwait
popa
xor
mov
es
shlb
lret
cmp
sub
adc
and
ret
cli
jge
xor
frstor
push
pop
and
sbb
clc
addr16
mov
bound
out
sbb
adc
mov
xor
sub
xor
mov
int
movsb
sbb
inc
ja
cmpsb
and
sub
adc
sbb
inc
movsl
shrl
xor
mov
mov
cld
sub
cld
mov
xchg
sbb
sub
and
cmpsl
lea
mov
mov
test
push
inc
imul
test
stos
addr16
dec
push
shlb
inc
daa
push
or
xor
scas
fnstsw
sub
pop
insl
sti
pop
mov
fstpl
or
and
add
mov
negb
dec
and
test
es
xchg
out
test
pop
mov
xor
lds
mov
push
push
xchg
jno
popa
xor
mov
fcoms
jmp
pop
stos
pop
mov
ret
mov
pop
in
ret
testb
lcall
nop
mov
dec
insb
inc
jl
sub
ljmp
xchg
cmp
and
jae
pop
mull
inc
lock
xchg
push
dec
cmc
mov
das
xor
cmp
dec
scas
scas
shlb
adc
gs
dec
dec
scas
inc
sahf
mov
jb
mov
or
lea
sub
pop
push
mov
push
pop
push
enter
leave
fcomip
jl
cmp
fcompl
cltd
inc
movsb
pop
sbb
cmpsl
mov
sub
pusha
ds
dec
mov
pop
push
pop
fistpl
insb
dec
fs
sbb
sbb
sbbb
mov
cmovle
and
mov
loop
in
push
dec
andb
sahf
in
inc
aad
call
fwait
in
icebp
nop
cmpsb
sbb
cmpsb
dec
push
dec
jae
jne
pop
mov
out
aam
data16
or
into
addl
inc
fs
loope
push
and
mov
bound
add
in
loopne
pop
xor
jb
call
ja
lahf
jg
pop
scas
fprem1
mov
ficompl
inc
testl
movsl
xchg
in
lahf
dec
aaa
aas
call
jmp
mov
adc
fistpll
cs
mov
mov
rcrb
lods
out
mov
xor
fidivl
mov
pop
push
je
add
jmp
xbegin
into
sub
mov
mov
mov
test
cmpsb
inc
xlat
fcoms
jg
push
inc
mov
movsl
pop
sbb
mov
imul
and
aas
sahf
cmp
mov
shll
stos
dec
sbb
test
or
inc
cmp
push
into
int3
xchg
mov
mov
ja
adc
jg
pop
mov
insl
push
movsl
or
cmpsb
or
mov
or
push
add
cmp
sub
enter
fistl
sbb
lcall
xchg
jmp
pop
sti
loope
dec
scas
adc
testl
dec
dec
sarl
cs
sbbl
sub
cmp
or
push
cmpb
and
and
sub
fisttpll
and
cmc
idivb
mov
xor
pop
sub
sub
adc
lods
push
insl
es
pusha
push
pop
insl
outsb
fdivs
movsb
push
imul
inc
jbe
mov
mov
in
inc
xor
fs
es
xchg
stos
popa
int
push
repz
pop
xchg
test
out
push
xor
ror
xchg
cmpsl
mov
dec
mov
shll
lcall
decl
jne
xor
mov
mov
inc
jmp
jmp
in
push
push
mov
inc
fmuls
inc
movsb
jge
out
movsl
xor
je
push
mov
mov
push
les
jae
dec
addr16
lret
movsb
out
push
fdivl
repnz
pop
pop
out
insl
cmp
jecxz
add
push
cmpsl
int3
outsl
mov
inc
popa
imul
test
shll
fidivs
loope
rorb
out
loop
jnp
fwait
adc
in
mov
cmpsl
repz
stos
js
aaa
mov
jmp
lahf
ror
icebp
cmc
mov
sub
add
mov
cmpb
fwait
push
xor
push
xor
jo
punpcklbw
xor
and
jmp
jecxz
jmp
jle
sbb
push
rorl
jnp
mov
lcall
and
jns
ljmp
outsb
insl
xor
in
and
fiadds
push
icebp
loop
add
and
pop
daa
and
xchg
in
dec
cmc
gs
negl
fcomi
aam
sub
jae
ret
insb
stos
sti
fiadds
sbbl
jnp
lea
ret
js
sbb
push
push
mov
insb
dec
nop
and
jbe
mov
jp
call
push
adc
lea
xchg
hlt
add
mov
jae
pop
adc
mov
dec
mov
stos
jnp
xor
test
cltd
sub
fsubl
jno
push
out
into
cmpb
mov
repz
xchg
push
sub
aam
sub
fldt
and
mov
jne
in
push
inc
push
mov
addb
jo
push
add
xchg
sbb
mov
loop
jg
lock
lea
pop
or
cmp
cmp
jb
lahf
push
data16
cmp
fcmovne
loopne
sar
decb
or
or
and
pop
push
add
repnz
orb
fbstp
cli
mov
inc
and
mov
arpl
dec
xor
cmp
out
cmpsb
push
mov
jne
add
sub
lods
add
imul
pop
and
cld
xchg
adc
pop
xor
xor
xchg
or
movsl
xchg
inc
negl
pop
jl
or
je
call
xchg
call
fimuls
scas
outsb
lods
and
popa
mov
cmp
jecxz
clc
dec
std
pop
enter
cld
out
sar
cltd
add
in
inc
and
test
jb
sub
push
inc
dec
sub
jae
xor
clc
xor
iret
lcall
adc
js
je
movsb
sub
cmpsl
or
js
cmc
jo
xchg
faddl
add
dec
loop
inc
sbb
int3
mov
es
xor
fldcw
adc
mov
outsl
aam
adc
pop
fisubrl
lods
cmpsb
sub
das
ja
lock
icebp
jecxz
insl
mov
jns
push
mov
jp
aad
aas
sbb
imul
mov
leave
jle
cwtl
into
ja
dec
mov
and
push
sbb
jecxz
adc
scas
clc
jp
dec
imul
lods
mov
std
and
int3
daa
mov
push
lahf
clc
sub
dec
into
loope
jnp
stos
notb
ret
es
jmp
test
icebp
dec
in
add
inc
pop
jg
lods
adc
scas
jbe
iret
test
mov
test
push
adc
lock
stos
lds
stc
subl
mov
push
xchg
push
cmp
or
ljmp
loop
mov
mov
mov
dec
int3
js
sbb
adc
mov
lret
jmp
ret
es
xor
addr16
insb
pop
lods
push
insl
sub
xchg
lods
shrl
roll
mov
sbb
xor
sbb
mov
cs
jp
adc
imul
jne
cwtl
pop
addr16
leave
mov
gs
nop
jmp
aad
sbbb
fdiv
xor
xchg
and
inc
setns
lahf
out
add
push
je
xor
neg
js
adc
add
mov
call
or
lods
adc
pop
aam
mov
cmp
addr16
and
jl
xchg
aam
enter
fmull
pop
idiv
and
or
daa
lods
or
and
sub
adc
dec
and
lods
ds
mov
adc
mov
stc
xchg
mov
repz
mov
cld
push
out
insb
jae
xorb
jmp
lea
mov
mov
or
imul
mov
ss
cmp
arpl
aaa
pop
inc
ljmp
add
jecxz
sbb
lret
jmp
fldt
jl
pop
shrb
lcall
fnstcw
dec
rcl
jle
iret
hlt
jmp
sbb
push
jl
cmpl
adcb
mov
jns
popa
rorb
pop
fisubrs
sbb
out
or
inc
cmp
pop
xor
sub
dec
or
subb
inc
cli
jno
insl
inc
scas
dec
icebp
lret
stos
mov
in
test
push
mov
orb
lea
repnz
mov
push
add
into
in
fdivrs
adc
dec
and
push
test
js
add
ljmp
pop
or
xchg
mov
sub
mov
aaa
push
pop
lcall
mov
or
pop
add
stos
movsb
and
cs
xchg
sub
icebp
push
xor
iret
xchg
movsl
xor
scas
add
mov
mov
lret
mov
sbb
in
ja
cmp
hlt
add
negb
fistps
pop
add
shrb
dec
adc
mov
or
mov
shr
insb
inc
lea
das
sub
decb
lea
popa
arpl
loope
pusha
jp
xchg
adc
outsb
pushf
mov
rcrl
mov
stos
insb
jae
hlt
cmc
inc
arpl
cmp
jno
mov
xchg
lods
int3
call
mov
pop
lods
jbe
arpl
call
mov
or
sbb
push
imul
pop
aad
push
inc
iret
xchg
fldt
pop
xor
nop
lods
mov
jno
or
shlb
push
in
mov
sbb
ret
fcomp
scas
out
sbb
mov
jne
inc
div
xlat
in
insb
xor
sbbb
jecxz
dec
flds
push
mov
xchg
sub
cmpsl
or
mov
lds
push
jbe
push
pop
or
xchg
ficompl
cs
aam
push
dec
sarl
sbb
or
jno,pt
and
mov
push
jnp
adc
or
dec
push
movl
jecxz
arpl
xor
iret
fmulp
add
sub
enter
cmp
es
xchg
ret
lea
mov
sub
mov
aad
sti
xorl
pop
cs
out
or
mov
mov
jge
push
jecxz
je
dec
push
jp
pop
add
xchg
or
rcrb
inc
pop
into
fimull
imul
div
repz
jne
jp
cmp
pop
mov
shl
mov
mov
or
push
neg
cmp
push
fistps
rclb
sbbb
jne
xchg
mov
xor
clc
add
push
push
movsl
test
inc
push
sbb
pop
cs
mov
mov
andl
aas
mov
xor
ret
negb
pop
or
cs
fiadds
push
fbld
ficoms
push
dec
scas
push
sbb
push
scas
pop
cmp
into
ret
clc
inc
enter
std
sbb
push
xchg
pop
shl
add
pop
mov
adc
sahf
imul
insb
and
fld
mov
or
add
dec
pop
daa
dec
lods
xchg
xor
cs
mov
scas
sbb
or
in
or
mov
fisttps
fstpt
or
pop
mov
cmp
in
jge
jne
xchg
adc
stos
pop
xchg
xor
call
lcall
dec
push
mov
mov
or
and
xchg
out
jb
lock
popa
repnz
subl
push
lea
hlt
cs
adc
dec
push
adc
loopne
scas
pop
push
ficoml
mov
mov
lds
fldcw
lods
and
mov
or
dec
fisubrs
add
xor
or
sub
jp
mov
pop
pop
shlb
clc
cwtl
or
and
lods
loopne
push
stos
fsubl
pop
and
out
dec
outsl
mov
cs
lea
sbb
push
cmp
push
cmpsb
call
xchg
int
adc
push
push
sub
sub
inc
inc
pushf
mov
mov
jo
sbb
enter
sti
cltd
push
icebp
scas
mov
cltd
inc
sbb
cli
adc
pop
cs
insl
mov
leave
mov
add
fildll
cmp
fcmovne
in
cmp
xor
inc
es
pop
mov
pop
add
mov
cmp
mov
nop
or
lret
or
mov
add
stc
es
aas
lock
and
clc
xor
dec
xor
dec
outsb
cmp
sub
sbb
or
cld
mov
int3
out
mov
fimuls
pop
push
dec
outsb
cmp
sub
sbb
or
cld
mov
int3
out
mov
fimuls
and
dec
cmp
test
sahf
or
and
in
jle
sahf
int3
out
mov
mov
jl
insb
push
pop
ds
outsb
cmp
sub
pushf
fimuls
add
and
sahf
mov
xor
jae
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
sti
popf
jnp
dec
mov
sbb
jmp
sti
or
stos
pop
mov
insl
imul
lods
sub
cmp
or
sbb
jmp
sti
insl
stos
cmp
mov
insl
imul
lods
sub
cmp
or
sbb
jmp
sti
or
enter
stos
pmuludq
popf
jnp
pop
rorb
cld
mov
daa
sub
push
clc
add
cmpsl
lcall
ds
testb
pop
xor
cmp
add
xchg
cmp
mov
subl
lahf
inc
dec
cmp
das
push
mov
cmpb
repnz
std
and
adc
sbb
lods
mov
imul
sub
pop
int
jb
adc
cmp
jge
aaa
call
loopne
jge
jb
cmp
ret
fdivl
fmuls
call
mov
ret
clc
dec
shll
xchg
or
rcr
push
lret
test
inc
repz
or
mov
dec
mov
insb
xor
jnp
dec
mov
cmp
or
sbb
jmp
sti
or
stos
pop
mov
add
repnz
lea
aam
les
pop
int
mov
mov
movsb
push
mov
ds
out
sub
popf
cmp
dec
xchg
pop
test
mov
pop
mov
fistpl
test
sub
jnp
push
cmp
or
sbb
jmp
sti
or
stos
pop
mov
insl
imul
lods
sub
cmp
or
sbb
jmp
sti
or
stos
pop
mov
insl
imul
ljmp
int3
inc
or
lods
add
cld
stc
xchg
dec
mov
cmpsb
cmp
inc
test
cmp
rorb
inc
in
out
mov
add
lock
and
in
call
mov
add
pop
mov
rcll
mov
push
dec
lods
lahf
imull
imul
xor
and
sbb
push
mov
inc
push
sbb
inc
xchg
fwait
stos
inc
mov
jno
int3
cld
jbe
popa
xor
mov
sar
dec
or
xchg
jo
dec
bound
in
das
in
inc
pop
mov
loop
push
sbb
div
xor
add
dec
in
add
mov
clc
jb
arpl
stos
and
xchg
and
aaa
nop
icebp
mov
daa
xchg
jge
arpl
jbe
lods
push
sbb
int3
jl
loop
imul
mov
push
ret
mov
subb
dec
sbb
mov
shll
push
jp
adcl
rcr
jp
push
sbb
push
addl
lcall
fsubl
test
sbb
inc
mov
loope
popf
mov
adc
inc
das
pop
ficomps
jge
cmp
mov
xor
movsb
pop
lock
sub
dec
xchg
sub
inc
sbb
mov
dec
adc
in
cmp
mov
sbb
mov
bound
cmp
lock
das
sub
flds
shrl
andb
push
mov
mov
shll
in
xlat
and
stc
mov
jae
xlat
xor
sub
nop
or
adc
cmc
add
sbb
mov
orl
inc
and
xchg
jl
mov
jb
leave
cmp
fnstenv
sarb
ret
ds
lahf
dec
lcall
out
xor
push
lods
sub
repnz
insl
daa
shlb
lods
sub
push
dec
jbe
xchg
lea
mov
aam
and
test
mov
ret
lods
fiaddl
inc
inc
pushf
sbb
dec
ret
pop
mov
pushf
add
add
testb
out
lods
jg
mov
push
fwait
test
push
faddl
gs
stos
jbe
movsl
xor
ret
mov
mov
inc
xor
repz
pop
pop
fdiv
rorl
and
out
addl
test
fs
pop
rorl
mov
leave
mov
fmulp
adc
popf
insb
pop
xchg
xchg
jge
shll
and
jbe
sti
jg
loopne
ss
and
movsl
and
inc
mov
and
push
cmc
pop
ss
mov
or
mov
mov
cmp
mov
jmp
insb
out
dec
int
ds
sub
and
lock
loope
cmp
js
fcomi
xlat
pop
pop
fld
dec
stos
fsts
mov
adc
sub
outsb
xor
loop
lods
jle
pop
xor
dec
add
or
fldenv
mov
sub
fwait
lahf
push
test
mov
fs
mov
hlt
in
inc
adc
or
test
pusha
jnp
in
adc
mov
jnp
xor
xchg
mov
in
shlb
lock
push
mov
pop
jmp
mov
int
sbb
repnz
stos
or
add
mov
add
push
outsb
add
test
popf
rorl
dec
popf
add
jo
xor
jae
call
jle
gs
jno
adc
shl
imul
lret
iret
add
mov
push
loope
addr16
xchg
call
outsb
mov
pop
out
cmp
cmpl
iret
call
mov
iret
sub
fisttpl
lcall
pop
pop
jmp
inc
lret
cltd
dec
and
or
aaa
cli
vunpckhps
jne
fwait
addr16
or
jle
call
cli
sbb
pop
mulb
ss
and
bound
les
dec
stos
push
dec
push
ficomps
popf
inc
outsb
les
lods
mov
push
push
fldcw
mov
mov
test
das
jecxz
cmp
mov
inc
inc
jnp
or
pop
xor
push
dec
inc
aas
push
sub
seta
fidivrs
idivb
mov
xor
out
cmovs
es
and
sbb
cld
pop
jmp
decl
ds
test
andl
lock
clc
movsl
jbe
cwtl
dec
xchg
jb
xor
scas
in
sbb
inc
add
jl
and
clc
bound
lret
cli
mov
or
inc
xor
loope
sbb
lcall
icebp
cld
mov
cld
mov
jnp
pop
mulb
push
jge
pop
daa
stos
sbb
lods
dec
xlat
cmpsb
jne
cmp
xor
add
xor
test
adc
icebp
scas
add
dec
cmp
sbb
push
cmp
mov
xor
mov
push
pop
test
cld
ljmp
aaa
leave
js
push
lock
ja
cwtl
imul
sub
dec
or
xchg
pushf
js
mov
or
pop
mov
push
sub
push
push
mov
pop
dec
push
xchg
mov
mov
clc
lods
cmp
insl
or
jns
scas
loopne
adc
arpl
not
mov
jno
or
js
pop
repnz
in
fildl
lock
dec
neg
inc
push
sbb
mov
adc
insl
addr16
add
fmull
jle
pop
fistps
daa
dec
pop
ud1
imul
mov
adc
mov
xchg
clc
xchg
lds
je
scas
add
jge
mov
dec
inc
or
enter
xor
and
outsl
lods
cmc
push
dec
std
rorb
adc
ja
cmp
xlat
pop
test
adc
cmp
iret
dec
sub
pop
adc
ret
outsb
arpl
cmp
pushf
sub
mov
mov
mov
mov
adcl
push
test
scas
mov
dec
rcrl
movsb
mov
sub
lods
lods
ljmp
mov
pop
repnz
sbb
mov
xlat
push
adc
in
mov
movsl
push
mov
adc
cmp
jo
push
jbe
dec
out
inc
loope
sbb
sub
cli
adc
sub
pusha
sbb
bound
dec
adc
shl
movsl
push
dec
xchg
mov
sbb
test
aaa
inc
inc
jge
sar
jae
loop
dec
add
test
je
insb
xchg
in
sub
adc
mov
mov
add
mov
repnz
rcrl
neg
popl
sbb
pop
loopne
sti
hlt
pop
subps
enter
cmpsb
aad
sub
insl
fs
or
mov
les
push
cmp
mov
xor
xor
dec
jne
push
into
pop
popf
lock
repnz
ret
push
lea
add
fs
jle
into
aas
hlt
enter
out
push
popf
mov
adc
cmpsl
add
adc
clc
pusha
mov
stos
push
cld
mov
outsb
xchg
sbb
cwtl
icebp
mov
add
aas
dec
cmpsl
xchg
jmp
push
hlt
cmp
mov
add
jmp
js
push
mov
jle
das
pusha
push
inc
mov
mov
xor
xchg
stos
cmp
sbb
xchg
push
aad
jmp
xchg
jne
pusha
push
les
pop
adc
int
stos
mov
fwait
pop
cld
mov
test
and
ret
jmp
fwait
cmc
xor
inc
pop
rcr
dec
mov
jg
or
aaa
fldenv
sub
mov
adc
repnz
mov
lahf
nop
inc
popf
add
add
inc
inc
xchg
rol
xchg
sub
jmp
mov
xchg
imul
xchg
jne
fisubl
cmp
clc
dec
mov
sti
out
or
dec
sbb
xchg
stos
loop
sbb
adc
push
es
mov
sub
xor
ret
pusha
int
dec
sub
sarb
incb
fsubrp
inc
jo
and
sbb
dec
scas
popa
push
pop
outsl
dec
mov
aas
mov
adc
dec
jl
test
xchg
mov
jns
call
repnz
aaa
ret
sbb
iret
xor
mov
jo
mov
and
std
cmp
in
shl
rorl
cmpl
paddd
enter
xchg
movsb
fwait
sub
data16
test
jns
cli
divb
push
push
xchg
call
clc
dec
ja
fs
mov
fstpl
test
shl
shll
push
popa
mov
popl
stos
lcall
cmp
cwtl
popf
adc
bound
daa
xchg
clc
fldcw
in
jge
xchg
adcb
lds
push
pop
cmp
andl
mov
lcall
mov
js
push
sbb
lcall
jle
pop
xchg
insl
add
xor
dec
sbb
inc
add
xorl
sub
mov
sub
mov
ss
jae
fs
jbe
out
mov
pop
cmp
fidivl
or
jb
jo
outsl
jl
cli
in
add
mov
sbb
and
ret
mov
sbb
mov
push
psrad
repz
mov
aas
scas
push
sub
push
mov
dec
mov
movsl
pushf
push
out
shlb
sub
cltd
dec
inc
inc
jg
sbb
arpl
mov
xor
jge
stos
inc
adc
jl
pop
lret
xor
mov
shl
sbb
and
push
pop
call
xchg
pop
pushf
jbe
outsb
lret
daa
inc
lods
into
mov
ret
mov
mov
gs
pop
pop
cld
mov
shlb
scas
jne
mov
mov
xchg
mov
idivl
pop
in
mov
adc
jl
adc
ja
jnp
in
cltd
daa
std
dec
scas
inc
dec
mov
cmp
stos
push
mov
fxch
push
mov
rorb
in
jle
push
mov
in
lret
mov
jne
jnp
shrl
jbe
add
sahf
aam
cmp
push
xor
push
leave
shll
addr16
cmp
and
sar
xchg
mov
push
sub
scas
std
sub
mov
je
shll
inc
mov
or
pop
or
mov
jp
insb
and
mov
aaa
mov
ljmp
daa
js
add
jnp
in
clc
inc
mov
mov
ror
mov
sub
or
sub
scas
pusha
in
or
js
std
ret
aas
mov
adc
mov
sbb
push
mov
not
pusha
dec
mov
dec
filds
daa
popa
pop
mov
xlat
sub
push
add
lret
in
cmpsb
jo
xchg
xor
jmp
fidivs
jnp
mov
and
mov
push
pop
xchg
sub
and
dec
adc
adc
pop
lcall
adc
pusha
jp
popa
call
ret
test
ret
pop
push
stos
pop
lret
stos
xchg
pop
lret
repz
stos
lock
and
int3
shll
in
rol
or
dec
push
mov
sub
imul
jecxz
popa
out
jl
xor
xchg
or
fisttps
aas
ss
dec
jle
cmp
mov
and
jmp
jp
daa
repz
shrb
icebp
fidivrl
out
aaa
ret
icebp
or
fstpl
fbld
iret
cmp
jnp
inc
sbb
jns
popf
xlat
into
arpl
xchg
adc
add
mov
incl
jle
pop
pop
or
aas
cmp
sti
push
pop
add
bound
sub
jmp
dec
lods
sub
jne
ljmp
adc
das
out
test
xchg
inc
adc
enter
pop
arpl
popa
xor
ret
sub
and
jae
js
fildl
pop
mov
movsb
or
mov
mov
adc
daa
adc
repnz
cmc
insl
enter
and
pop
xchg
sbb
ss
adc
bound
cmp
lods
and
push
icebp
sbb
ss
inc
mov
xchg
mov
test
repz
enter
repz
or
insl
jne
push
fwait
and
lock
and
mov
sbb
lahf
int3
les
jg
dec
or
sub
pop
iret
mov
adc
int
mov
push
inc
sbb
lret
adc
inc
sub
fnsave
fst
stc
lods
xchg
push
mov
ja
test
cmp
es
mov
insb
pop
mov
test
stos
dec
daa
repnz
into
stos
fidivrl
movsb
sti
inc
dec
sub
js
nop
sub
lahf
int3
sarb
out
jnp
jecxz
into
fwait
xor
fwait
out
mov
leave
lret
mov
add
mov
cltd
subb
jl
int3
es
movsb
xchg
mov
fisubs
pop
cwtl
orb
add
and
imul
ja
and
cmp
sub
inc
jle
mov
xchg
jb
mov
lea
push
addb
gs
inc
mov
dec
xchg
inc
mov
push
ja
adc
xchg
or
stos
add
sub
dec
jo
mov
gs
and
sahf
fimull
data16
sbb
pop
xchg
rorb
or
call
mov
xchg
jle
or
cmovp
mov
add
mov
sahf
jge
adc
inc
push
pop
pop
push
adc
mov
inc
sbb
mov
shl
pop
cmp
mov
mov
mov
outsb
mov
pop
and
lds
cmp
add
or
test
outsl
out
cmp
push
fdivr
or
add
sub
mov
sahf
sub
pushl
mov
into
or
add
fstpt
jecxz
pop
and
sub
pusha
js
push
out
into
sbb
adc
push
sbb
adc
bound
adcl
in
lods
imul
pop
or
mov
dec
xor
icebp
jmp
xor
add
movsl
leave
push
xchg
pop
loope
pushl
lcall
incb
loop
sbb
mov
push
out
push
jl
movsb
mov
push
addr16
outsl
mov
and
sub
xlat
sarb
lret
insb
sbb
in
add
adc
push
add
cmp
xchg
iret
mov
xchg
cmpsl
mov
fsubrs
aad
adc
loopne
sahf
into
inc
add
dec
add
xchg
cmpsl
mov
loope
cltd
sbb
test
push
inc
xlat
jge
enter
shlb
arpl
data16
test
dec
outsb
xor
out
jl,pt
or
push
jg
fwait
mov
pushf
pop
ss
ror
les
loope
jle
jbe
add
jnp
dec
out
xor
jns
mov
push
fwait
sub
adc
sub
sbb
sbb
insb
mov
cmp
sbb
inc
test
pop
iret
clc
fcoml
jecxz
mov
fldenv
ljmp
mov
push
pop
jecxz
icebp
push
mov
ret
mov
flds
jge
pop
stc
sbb
pop
sub
lcall
test
ret
and
or
scas
rcl
insl
lods
fldl
ret
ffree
mov
js
cmp
mov
fadds
and
js
push
rcll
fsub
push
push
xor
cwtl
fmuls
call
or
cmp
aad
imul
repnz
ss
pop
jns
or
mov
xor
mov
inc
js
clc
and
fdivrp
dec
or
mov
cwtl
rol
mov
jg
imul
repnz
fs
or
adc
sti
pushf
xchg
imul
into
push
cmp
dec
pusha
xor
inc
rolb
mov
in
pop
mov
sti
and
xchg
mov
xor
push
icebp
rcrb
and
sub
out
repnz
stc
pop
cmpsb
mov
ljmp
dec
aas
jnp
int
xor
cmp
xchg
inc
xchg
mov
dec
mov
push
mov
enter
dec
pop
and
mov
mov
arpl
test
imul
lea
mov
loop
sbb
into
pushf
shrb
xchg
fnstsw
cmpsl
pushl
or
inc
out
push
testl
cwtl
mov
push
shr
pop
push
out
lcall
test
inc
sbb
movsl
pop
mov
popa
mov
sarl
dec
pop
shl
pusha
ja
inc
cmp
sbb
aad
jmp
inc
das
or
mov
fiaddl
push
adc
lahf
test
fdivr
inc
lods
cli
pop
nopl
dec
sbb
lret
xor
je
aaa
stos
inc
xor
lret
or
fcmovnbe
push
mov
or
popf
shll
add
scas
and
or
enter
pusha
fwait
ret
dec
adc
out
dec
push
sub
adc
js
push
xchg
cs
loop
pop
mov
es
stos
and
mov
sbb
dec
sarb
shr
repnz
pop
fxch
enter
movsl
incl
xchg
popf
sub
sbbb
adc
push
mov
push
cmc
mov
push
mov
test
dec
test
idiv
adc
add
pop
cmp
cmp
pop
rorb
mov
jmp
inc
das
outsl
push
add
push
mov
stc
mov
or
lret
wbinvd
testl
cs
in
in
inc
xchg
mov
add
ja
or
insb
pop
cmp
add
xchg
rcl
aaa
repnz
push
sbb
pop
aaa
mov
lds
push
jo
adc
stos
iret
cli
xchg
test
pop
pop
sti
mov
outsl
testb
jg
sub
xchg
dec
call
ret
dec
movb
sbb
movsl
and
cmp
popf
insl
xchg
cmpsl
push
adc
dec
fldt
test
rol
call
xor
or
stos
jp
cltd
and
cmp
inc
shlb
cmpb
psadbw
jmp
mov
dec
outsl
test
mov
mov
and
repnz
loope
mov
mov
adc
push
lock
in
add
jbe
sbb
cmp
out
adc
jl
dec
leave
inc
mov
mov
int
addr16
xchg
aam
jmp
fbstp
js
adc
fwait
call
mov
ret
add
push
xlat
popf
aad
push
repnz
ds
mov
jge
rcrb
mov
xor
incl
add
jns
cmpl
scas
cltd
and
aas
add
pushf
or
std
add
in
clc
test
ret
mov
adc
inc
lods
add
dec
xor
into
in
push
cmp
mov
cmpsb
sbb
dec
mov
test
sbb
or
sbb
jmp
mov
inc
jo
inc
mul
pop
incb
lea
outsl
adc
shl
mov
sbb
imul
xchg
in
aas
test
iret
push
js
dec
xchg
cmp
mov
arpl
push
nop
pop
hlt
pop
jne
or
dec
mov
shrb
push
fnstenv
movsb
pushf
jbe
xchg
mov
sbb
xchg
lock
aam
cs
out
out
ja
push
adc
and
xchg
mov
sub
cmp
lahf
test
cli
push
lds
out
cmc
ficoml
mov
adc
cmp
adc
dec
bound
es
xor
mov
and
ficompl
sbb
dec
outsb
insl
xchg
jecxz
or
sahf
cmp
lds
out
stos
cmc
jnp
insb
mov
sbb
loop
or
sub
dec
movsl
push
xchg
enter
pop
jnp
aas
je
imul
test
inc
rcll
inc
mov
sbb
test
mov
test
or
out
cmp
add
push
pop
cmp
jnp
test
popf
fsqrt
jnp
sbb
pop
mov
enter
pop
icebp
rcl
js
rcll
push
loop
popa
in
pusha
mov
mov
and
call
xchg
mov
test
add
mov
xor
jbe
jmp
inc
sbb
mov
call
aaa
fdivl
mov
adc
jmp
fs
inc
inc
push
lahf
pop
testb
movsb
jp
xor
inc
xchg
pop
xor
or
xchg
data16
aaa
popf
mov
mov
stc
adcl
lahf
xor
sub
inc
sahf
hlt
mov
add
fcomi
movsl
pop
or
push
adc
dec
sarb
pop
iret
cld
sub
movsb
cmp
jl
vpunpckldq
inc
mov
or
mov
leave
or
jbe
in
mov
ss
mov
xor
mov
leave
repnz
in
cmc
pop
lds
lea
fnstsw
int
std
sbb
jmp
sti
or
stos
pop
mov
insl
imul
lods
sub
cmp
or
sbb
jmp
sti
or
stos
pop
mov
insl
imul
lods
sub
cmp
std
sbb
jmp
sti
or
stos
pop
mov
insl
push
jp
dec
mov
cmp
or
sbb
jmp
sti
cmpsl
popa
cmp
xor
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
add
push
lods
adc
push
mov
seto
insl
mov
rorb
and
adc
pusha
out
jo
inc
iret
push
das
mov
add
pop
rorb
and
adc
pusha
divl
inc
iret
push
es
or
inc
lock
jg
add
and
inc
lahf
fs
cld
lods
cmpsb
out
mov
inc
or
xchg
adcb
out
sub
sub
out
xor
aad
out
pop
dec
pop
pop
mov
xor
das
and
pop
shlb
insb
test
sti
push
inc
psrlw
rorb
test
ret
pop
aas
dec
sarl
add
pusha
and
movsl
sub
outsl
xorb
icebp
out
mov
outsl
in
add
xchg
mov
jmp
mov
mov
movsl
dec
enter
add
aad
pop
mov
nop
cmp
cmp
pop
aad
shlb
mov
lahf
add
jo
inc
push
mov
push
nop
loopnew
lock
rorb
dec
lret
inc
sti
push
mov
mov
xchg
and
inc
fldcw
jg
or
shlb
jp
add
inc
xchg
add
pushf
push
jl
dec
fcompl
dec
cld
jg
add
sub
ret
inc
repz
fs
out
jo
inc
iret
push
aas
mov
seto
outsl
lock
rorb
and
adc
pusha
out
jo
inc
iret
push
aas
mov
seto
outsl
lock
rorb
and
rcll
not
idiv
cwtl
jnp
sbb
push
sarl
dec
dec
xchg
mov
subb
mov
das
in
sti
inc
jmp
test
lods
or
jne
jbe
mov
int3
lock
hlt
sbb
dec
adc
aas
stos
and
jo
add
mov
out
cs
add
sub
dec
les
add
dec
inc
sbb
dec
call
inc
addb
or
push
dec
or
inc
pop
addl
jle
inc
xchg
xor
mulb
dec
mov
inc
or
into
in
adc
mov
xchg
mul
mov
sarb
stos
mov
jmp
adc
dec
push
jl
inc
je
cli
mov
inc
mov
clc
sbb
aas
pop
mov
and
and
sti
pop
sub
or
dec
cltd
jl
out
out
insl
andl
das
movsl
sub
mov
mov
push
mov
pop
cli
push
xor
mov
sub
daa
pushf
xor
pop
in
adc
pop
cltd
outsl
mov
call
ljmp
bound
push
push
or
sbb
scas
stos
daa
cmc
sti
cmc
inc
int3
add
jbe
sahf
jmp
dec
ret
dec
je
pop
out
shlb
aaa
ljmp
jnp
xchg
jne
out
pcmpgtd
adc
jbe
xchg
test
cli
jb
faddl
mov
sti
nop
jle
xor
stos
hlt
es
jecxz
mov
xor
push
inc
in
fnsave
popa
lret
fidivl
mov
fisttps
mov
xchg
mov
test
adc
movaps
js
dec
jecxz
xchg
add
outsl
xor
lock
fildl
sub
or
mov
pop
insb
fcmove
xchg
cld
cltd
dec
lret
int3
out
dec
cmp
inc
push
or
jg
mov
pop
mov
pop
mov
mov
hlt
popa
sbb
dec
cmp
cwtl
mov
scas
xor
sbb
icebp
xchg
outsb
ds
rolb
cmp
dec
dec
shl
stc
lcall
pop
or
mov
dec
jne
sbb
mov
in
sub
jne
jmp
jne,pt
and
data16
jne
jne
inc
sub
movl
in
sub
cmp
xor
loope
mov
dec
adc
adc
cmp
cmp
inc
insb
hlt
mov
jg
out
stos
rcl
cmc
mov
mov
cmp
push
cltd
cmpsb
insl
ret
pushf
or
xchg
ss
outsl
mov
ljmp
add
add
aam
test
dec
and
mov
inc
sbb
rclb
xor
ljmp
sub
add
push
int
mov
dec
and
cli
mov
jne
cmpsb
jb
or
mov
test
fs
add
mov
mov
inc
and
aam
mov
mov
add
push
mov
stos
mov
jae
into
sbb
not
mov
add
out
ret
mov
sub
les
xor
lret
out
out
inc
mov
inc
sub
mov
orl
jmp
mov
fldl
scas
mov
cmpl
cmp
push
rcrb
cs
shrl
stc
and
in
loop
xchg
leave
sub
jl
add
xor
sub
xchg
lock
int3
outsb
fisttpl
jle
jne
dec
mov
add
ret
std
std
fisubrs
jp
jle
fidivrs
sbb
daa
ja
or
mov
xor
in
cs
mov
mov
lret
repnz
and
daa
pop
or
push
add
mov
std
cmp
cmpsl
pushl
jg
into
lods
sbb
cmp
fmuls
pop
insl
ss
cld
scas
ja
mov
add
int3
dec
cmp
adc
jne
shl
cmc
clc
insb
movsl
in
mov
ficompl
lock
out
cmp
lods
add
loopne
mov
mov
mov
movsb
xor
pop
mov
xor
push
mov
call
fwait
inc
cs
fincstp
or
fldl2e
lods
jle
call
scas
add
flds
repnz
xchg
movsl
inc
dec
sbb
xor
sub
and
je
pop
inc
dec
arpl
mov
fs
sbb
inc
mov
mov
ficoms
add
loope
xor
adcl
out
add
js
ret
ss
call
or
hlt
rorl
fidivs
daa
lock
mov
cmp
mov
xor
iret
daa
js
cmp
cmp
adc
hlt
pushf
dec
or
pop
mov
xchg
stc
aaa
movsb
test
daa
cmpsb
nop
rcrb
ljmp
mov
push
dec
ficoml
jo
mov
mov
sbb
xchg
sub
xchg
aam
pop
dec
je
inc
movsl
push
jbe
push
dec
adc
mov
dec
cs
sub
inc
push
nop
lds
enter
pop
loopne
mov
or
dec
cwtl
inc
in
pop
out
xor
push
lahf
popf
mov
repz
lret
call
jl
jmp
and
out
ja
sti
xchg
jnp
jecxz
adc
out
mov
jb
and
popf
pop
addr16
in
fisttpll
ljmp
xor
mov
daa
dec
in
or
pop
movsl
rcr
push
adc
dec
into
lods
lret
mov
push
sti
push
pop
mov
repnz
add
xchg
push
pop
inc
mov
jo
pop
into
je
xchg
int3
insl
sbb
and
mov
mov
dec
xor
jg
sub
out
es
leave
sub
sbbl
cs
enter
popf
or
fidivrs
test
int3
fcoms
mov
ss
sbb
and
add
pop
push
in
rcrb
xchg
jp
in
sub
jle
mov
inc
add
sti
pop
nop
nop
iret
xor
sub
push
jl
je
subb
jmp
es
gs
int3
rolb
std
xchg
jg
add
jecxz
pushf
xor
jle
lods
jge
sbb
xor
out
outsb
movsb
out
repz
mov
cld
cli
cmp
scas
lret
xor
notb
cmp
or
adc
mov
arpl
push
test
xchg
jl
cld
stos
stos
pusha
mov
clc
xor
cmpsb
inc
mov
cwtl
hlt
loopne
sbb
dec
push
pop
fstpt
ret
in
jae
fdivs
jbe
or
imul
lret
movsb
aam
lret
pop
icebp
stos
adc
or
sbb
loope
mov
sub
loope
push
cmp
jp
jmp
icebp
ss
push
cwtl
pop
xor
jle
movsb
inc
leave
push
mov
pop
and
inc
mov
xchg
sub
xchg
in
bound
xor
test
sbb
pop
inc
push
das
test
jnp
repnz
sub
int
jbe
rcrl
loopne
call
mov
mov
inc
inc
sbb
mov
out
nop
aaa
xchg
mov
xchg
dec
movsb
std
jl
iret
lods
fwait
adc
je
dec
xor
out
inc
dec
insl
fwait
addr16
mov
inc
ds
xchg
rcrb
stos
adc
or
outsl
xchg
outsl
xor
mov
pop
xor
mov
cmp
inc
xchg
sti
pop
fistpl
inc
sub
mov
mov
aaa
dec
cli
flds
and
sub
dec
pop
icebp
icebp
cli
add
push
mov
sub
outsb
mov
mov
sbb
sarl
aaa
add
cs
mov
jl
add
xchg
jge
mov
jnp
add
push
and
mov
or
xchg
mov
cmp
sbb
push
popa
iret
cli
push
sub
out
scas
adc
xor
cmp
dec
fldt
cmp
xchg
cwtl
push
fcom
aaa
jae
cli
out
lds
fwait
subb
scas
adc
out
or
push
or
out
mov
fnsave
add
xchg
popf
dec
mov
mov
gs
xchg
es
push
jo
es
fldenv
int
jae
jns
xchg
int3
dec
jecxz
sbb
popf
jbe
sarb
xchg
mov
xor
add
sub
inc
push
and
xchg
repnz
stos
push
fwait
cmp
push
rcrb
mov
popa
xor
xchg
sbb
fisubs
mov
js
mov
shl
pop
pop
xchg
subl
and
pushf
lock
std
and
les
pusha
pop
xchg
inc
dec
aaa
pop
pusha
fdivl
test
pop
inc
mov
test
adc
hlt
js
movsl
push
lea
push
popf
inc
loope
in
lea
dec
cmp
in
mov
inc
or
push
inc
out
inc
mov
divl
jo
mov
mov
in
pop
cmp
add
mov
jb
xlat
push
mov
repz
pop
mov
iret
sbb
cmc
inc
rcl
add
sub
adc
pop
sub
adc
insl
mov
jecxz,pt
movsb
xchg
mov
int3
test
pop
iret
cli
int3
loope
daa
ret
mov
mov
movsb
dec
fiadds
dec
inc
jno
jle
addl
insb
nop
inc
nop
mov
and
push
lahf
mov
fstpl
stc
cld
fdivrs
inc
lcall
popa
add
mov
js
xor
es
or
enter
mov
adcb
movsl
xor
inc
addr16
jno
push
push
test
push
mov
nop
add
add
dec
jnp
pop
fwait
sub
sbb
mov
je
inc
repz
cmp
jge
mov
out
lcall
adc
xchg
ret
push
dec
mov
or
iret
inc
addl
pop
std
jmp
std
adc
add
stos
push
std
cwtl
and
mov
cli
cmp
rol
frstor
push
out
xchg
sub
icebp
or
sub
loop
pop
rclb
and
push
sbb
xor
aad
mov
sbbl
ss
sbb
mov
int
loope
stos
orb
add
test
jns
push
fsubs
cmpsb
jecxz
jnp
xchg
pop
out
inc
in
fisttpl
scas
push
sbb
repz
es
iret
in
stc
sbbb
pop
pop
jle
and
mov
movsl
aas
fisttpll
jns
cmp
xor
jmp
fldenv
int
lods
fimull
adc
push
push
sub
cmc
xor
mov
mov
insb
les
enter
sbb
jb,pn
fnstcw
les
xchg
pop
imulb
xchg
rcrb
adc
push
les
or
sti
dec
inc
and
cld
lods
mov
out
sbb
lret
sub
xchg
loope
clc
bound
lds
xchg
aaa
jno
push
fbstp
ja
push
mov
and
cmp
xchg
cmp
dec
cli
inc
aam
fcomp
call
push
add
fldenv
and
loopne
loope
mov
inc
xor
lods
jo
mov
movsl
push
imul
pshufw
sub
cmp
xchg
test
xor
fsubrl
imul
mov
test
cmp
adc
xor
lret
push
test
in
rorl
dec
out
cld
jae
rorl
in
cmp
ds
mov
sbb
add
xor
out
pop
daa
jb
or
insb
or
aaa
loope
sub
orl
xchg
push
stc
mov
jb
rorb
push
xchg
push
jmp
sti
mov
push
adc
jnp
sbb
ret
sbb
in
pop
pop
jnp
popa
clc
push
and
push
inc
pop
aaa
cmp
test
daa
jo
dec
mov
fadd
mov
sub
sub
mov
ss
dec
imul
stc
inc
mov
mov
nop
xor
popl
adc
push
mov
push
enter
mov
inc
mov
jns
je
scas
cmp
insl
mov
repnz
push
pop
ljmp
test
and
mov
add
repz
sub
je
inc
pushf
hlt
fs
imul
setbe
sahf
or
jmp
flds
icebp
adc
in
fnstcw
into
jmp
cmp
xchg
scas
mov
sbb
test
shrl
ljmp
fsubs
mov
lock
pop
or
mov
insl
js
mov
sbb
push
xchg
xorb
adc
cmp
xchg
xor
adc
lahf
sbb
xor
js
xor
outsl
pop
dec
adc
or
cmp
jmp
sub
mov
push
sub
nop
mov
jle
jle
mov
ret
in
loope
add
call
and
pushl
fildll
jns
push
loop
ds
faddl
mov
mov
popa
fdivl
push
xchg
cmp
dec
inc
lods
out
mov
push
mov
fldl
sti
or
xor
xchg
mov
or
nop
loop
sub
mov
xchg
fwait
in
mov
into
es
scas
pop
jb
xlat
dec
mov
inc
iret
cli
es
cmp
repz
ss
pop
mov
pop
push
arpl
xlat
push
out
mov
jmp
and
dec
push
mov
mov
jl
out
xor
jae
add
jns
jecxz
fadds
outsl
cmp
imul
inc
and
ficomps
mov
lds
aaa
mov
ja
adc
push
js
in
cmp
lret
cmp
mov
cmp
mov
push
dec
mov
test
insl
and
xchg
mov
push
fldcw
shlb
jbe
popf
lret
in
inc
fstpl
adc
sbb
and
out
pop
sbb
dec
loopne
lea
inc
mov
shl
enter
push
mov
or
fidivrs
adc
jp
insb
std
in
jmp
add
ret
sub
and
jg
inc
sbb
jmp
jns
push
cmp
sub
push
pop
xchg
js
das
push
dec
ja
inc
cmpsb
sti
nop
lods
mov
lock
std
icebp
mov
xchg
loopne
sub
xchg
daa
ror
mov
in
js
push
js
fbld
notl
rclb
inc
dec
sarb
inc
in
jb
push
cwtl
jle
in
pop
outsb
and
push
xchg
or
cli
sub
fs
mov
jne
lea
lret
mov
cltd
mov
cmp
mov
mov
lods
mov
xchg
mov
mov
mov
push
inc
stc
das
or
shll
shlb
daa
arpl
lcall
push
pop
inc
or
pop
pop
xchg
or
test
div
pusha
test
mov
cmp
test
rol
in
subl
cmp
sub
mov
jge
mov
dec
push
lcall
mov
inc
out
pop
push
aas
add
xchg
xchg
aas
sbb
mov
inc
loopne
pop
outsb
jg
addb
fwait
and
inc
mov
add
adc
push
xor
push
jbe
fsubp
cmpsb
mov
pop
pushf
sbb
aam
mov
mov
maxps
aam
imul
jle
scas
inc
mov
xchg
push
xor
add
dec
or
call
sbb
adc
in
rol
lcall
outsl
test
lret
repnz
jns
cli
sbb
sbb
push
jle
inc
xor
js
lock
mov
iret
sbb
pushf
push
insb
outsb
pushf
jge
xor
or
cmp
mov
cli
jp
insl
fwait
mov
push
jae
sar
movsl
lods
mov
repnz
dec
test
push
outsl
mov
inc
xlat
stc
push
add
ret
cli
rcr
fwait
dec
add
dec
pop
pop
xchg
lcall
and
xor
fdiv
iret
arpl
pop
lods
les
into
in
jb
xchg
push
dec
sub
mov
fadds
out
cmp
xchg
neg
lahf
and
test
and
pop
and
lcall
adc
fwait
xchg
popf
push
push
lds
sub
mov
push
sbb
and
cmpsl
stc
aam
mov
pop
cs
mov
push
add
ret
push
dec
xchg
cmp
test
testb
mov
arpl
cmp
push
sub
out
xchg
push
pop
add
xor
addb
adc
test
mov
imul
and
nop
addr16
jle
push
les
pusha
mov
in
jp
xchg
inc
lds
rclb
nop
inc
lea
mov
fcomip
movsl
xor
push
mov
pop
push
jmp
int
js
sbb
mov
imul
ds
sub
xchg
out
lahf
sbb
or
test
or
adc
lret
push
sub
sarl
rclb
or
addr16
repz
push
xchg
mov
cmc
cmp
jp
jl
push
jecxz
mov
cltd
sbb
or
iret
hlt
jg
fucomip
iret
inc
mov
dec
sbb
stc
mov
mov
mov
enter
sub
xchg
xor
sub
in
loopne
shrb
daa
outsb
bound
loope
sbb
pop
test
xchg
lret
ss
imul
lcall
adc
add
or
push
push
sub
sub
push
dec
fidivrl
cltd
mov
mov
xor
out
or
dec
shll
add
scas
mov
mov
subl
mov
sub
and
push
push
push
cs
lock
clc
popa
shll
clc
addr16
pop
leave
in
cmp
mov
adc
divb
sub
xchg
inc
lods
mov
or
out
dec
jnp
sbb
adc
sub
imul
jge
shrl
jno
mov
rol
xlat
ss
or
hlt
lret
mov
jl
or
mov
cltd
cmc
inc
push
and
add
dec
cltd
dec
scas
cs
dec
lret
divb
mov
jmp
dec
je,pt
jo
out
fildl
sbb
dec
movsb
orb
fiadds
lcall
xchg
pop
adc
push
out
pop
repz
pop
not
fstpt
pop
push
lock
scas
jge
cmp
sub
pushf
xchg
cld
je
cmpl
mov
out
cmp
cmp
mov
inc
jnp
mov
es
and
sbb
xchg
cld
stos
xchg
aaa
add
leave
mov
jne
push
inc
or
and
test
push
stc
int3
inc
push
inc
xor
pop
clc
cltd
push
jnp
repz
fcompl
scas
push
adc
sbb
addb
mov
dec
push
add
test
pop
pusha
lods
add
mov
mov
bound
repnz
or
mov
gs
stos
adc
or
movsl
test
fsubl
mov
cmp
pop
movsl
or
jb
xor
sub
jne
mov
int
aad
mov
push
or
scas
cmpb
cs
push
mov
push
out
adc
jns
pop
and
dec
adc
cltd
int3
fisubl
jl
into
adc
xor
or
push
xor
push
xor
cmp
in
xchg
in
aas
stos
and
xlat
loope
fisubs
push
sbb
shlb
jne
sbb
push
inc
cmp
push
sub
mov
cwtl
clc
test
ljmp
mov
arpl
dec
mov
mov
mov
inc
sbb
xlat
xchg
mov
and
pop
sbb
add
sti
sti
mov
mov
imul
imul
sub
inc
fstpl
or
push
inc
jmp
imul
repz
mov
hlt
sbb
sbb
cmp
jo
cmp
jle
dec
out
xor
add
xor
inc
mov
fmul
add
mov
xchg
pop
xor
adc
insl
mov
in
mov
mov
xchg
mov
mov
mov
jg
pop
add
pop
mov
xchg
stc
pushf
fstl
mov
mov
pop
aam
mov
jge
pop
push
inc
push
xor
jno
out
inc
xchg
cmpsl
call
insb
cmp
in
das
shll
jl
imul
insl
jp
mov
mov
sbb
jge
cmc
dec
xchg
jns
mov
mov
cltd
in
addr16
sub
arpl
test
xor
add
cld
mov
and
scas
decl
xor
pusha
out
jo
inc
iret
push
aas
mov
seto
outsl
lock
rorb
and
adc
pusha
out
jo
inc
iret
push
aas
mov
seto
outsl
lock
rorb
and
xor
pusha
out
jo
inc
iret
push
aas
mov
seto
outsb
lock
rorb
and
adc
pusha
out
lock
rorb
pop
rcrb
mov
movntq
push
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
aad
xor
sub
jl
or
or
cmp
sub
pop
mov
js
push
pop
mov
or
call
fstl
in
std
pop
mov
push
fwait
imull
enter
aam
adc
sbb
fs
pop
mov
js
adc
pandn
or
sbb
in
scas
jmp
sub
and
scas
mov
xchg
cmp
dec
fistps
mov
aaa
xchg
rcl
insb
ret
cmc
and
adc
lods
fstpl
in
enter
mov
loope
in
fst
pop
int3
test
cmpsl
jle
popa
mov
jp
dec
lock
lds
jge
sbb
sub
or
adc
cld
aad
dec
adc
xchg
rcrl
push
sbb
in
mov
mov
or
dec
mov
sbb
mov
push
inc
xor
jge
adc
sahf
lock
cmp
xchg
fucom
dec
fdivrs
rorl
fmuls
push
scas
ljmp
sarl
push
jae
mov
xor
add
adc
pop
mov
mov
push
lret
or
das
aam
or
sbb
push
arpl
mov
test
push
and
int
ret
or
ds
adc
sub
or
cmp
sub
pop
lea
js
push
pop
mov
or
call
fnstsw
in
sub
pop
lea
js
push
or
adc
xchg
xchg
push
fsubr
jne
mov
sbb
jle
popf
rorb
xor
mov
scas
lret
hlt
ficomps
iret
add
and
and
push
xchg
aam
leave
mov
cli
jmp
rcrl
add
mov
ret
dec
call
sti
and
pop
jle
mov
xchg
xchg
xchg
pop
movsl
xchg
pop
loopne
and
or
xchg
fildll
icebp
pop
xor
pushf
rolb
in
gs
jne
movsb
pusha
jb
mov
lea
int3
lock
pop
add
jl
pop
and
xor
std
mov
nop
add
icebp
dec
divl
dec
out
mov
jl
cltd
cli
imul
inc
dec
mov
mov
push
fnsave
add
xchg
cvtps2pi
or
shr
xchg
jne
fcomp
xor
dec
js
test
das
leave
mov
jno
xchg
cld
arpl
mov
mov
cmp
loopne
sarb
sar
or
outsb
repz
and
cmc
inc
fs
icebp
push
xchg
mov
insb
push
cmp
pop
testl
and
push
rcrl
lret
int
mov
sbb
xor
add
jne
dec
cld
divb
push
adc
not
fldl
insl
das
pop
sub
pop
jge
and
enter
cmp
jns
imul
sub
and
out
cmp
cmp
out
cmp
scas
mov
insb
mov
jno
mov
mov
repz
out
shlb
lds
xlat
pop
mov
mov
nop
dec
aad
push
sarb
lret
dec
mov
pop
xor
adc
rclb
out
sbb
jl
sub
out
fcomi
decl
out
imul
pop
sbb
ds
and
aad
loope
or
add
outsb
jecxz
lock
stos
and
cwtl
test
sbb
out
adc
lret
nop
psubq
push
das
dec
or
dec
push
stc
push
xor
push
inc
iret
lret
clc
mov
stos
movsb
mov
jo,pn
movsl
lds
aaa
outsb
add
repz
dec
add
jp
jg
insb
jo
and
lahf
add
imul
shrb
dec
stos
ja
pop
xchg
dec
mov
push
push
push
fmul
cmp
rorb
test
dec
jnp
push
gs
cltd
sub
mov
popf
lods
dec
jecxz
pop
inc
sbb
faddl
inc
jnp
incl
cmpsl
xlat
pop
and
mov
jle
and
out
mov
push
cmp
pusha
xchg
sub
xor
cld
mov
arpl
mov
xchg
push
lahf
inc
outsb
mov
or
mov
jle
lods
out
push
mov
add
pop
xlat
mov
jae
or
call
sbb
je
xchg
adc
ja
jl
xchg
inc
insl
fists
add
cmp
cmpl
rcrb
call
mov
inc
mov
push
cmp
sub
pusha
pop
popf
mov
dec
add
jmp
jle
daa
mov
adc
aas
jp
mov
push
shlb
jl
jae
repz
lahf
push
scas
loope
mov
jmp
cli
iret
pop
mov
mulb
stos
in
idiv
arpl
mov
push
sbb
push
mov
cmp
push
shrl
es
fistl
lret
sub
mov
out
faddp
mov
or
bound
testl
inc
pop
andb
pop
sub
cmc
ret
pop
and
enter
fidivs
je
mov
cltd
xor
mov
pop
bound
rcl
cmp
in
cmpsl
pop
xor
out
and
adc
movsl
xor
sbbb
push
push
and
pop
push
iret
test
incb
jecxz
xchg
add
mov
jno
in
rolb
ficompl
out
stc
pop
push
mov
jmp
aaa
add
add
stc
and
enter
push
inc
mov
rcll
fwait
sub
shld
mov
in
gs
add
out
cmp
jl
ja
sbb
jl
mov
into
jecxz
mov
mov
inc
std
add
vlddqu
dec
lods
mov
pusha
sbb
add
ds
xor
jp
xchg
add
pushf
mov
scas
push
cltd
sub
lds
dec
or
jp
cmp
adc
sub
sub
cs
sarb
fucomip
pushf
sub
jmp
rcr
lods
cmp
sbb
sub
clc
sar
jb
and
adc
xlat
test
lcall
cmc
mov
pop
mov
sub
popf
sub
xor
push
je
mov
es
add
pop
push
cmp
pop
cmp
mov
push
jb
int3
fs
xor
lret
ret
iret
pop
mov
hlt
enter
icebp
cmp
xchg
mov
mov
cmc
out
xor
rolb
add
cli
rcr
pop
test
jne
inc
idiv
das
jb
or
xlat
out
das
dec
cmp
push
sbb
testb
pop
cmp
pushf
jmp
xchg
and
cmp
popa
outsl
divb
push
and
cmp
mov
push
add
shlb
and
jge
repz
outsl
mov
jl
cltd
aam
mov
dec
repz
sub
xchg
lods
mov
add
pop
insl
sbb
inc
pop
mov
push
in
sbb
adc
add
adc
sub
push
ret
pop
cs
cmp
gs
or
and
xor
xchg
or
add
outsl
adcl
aas
daa
push
xchg
inc
sub
hlt
jo
rcrl
mov
call
sub
popf
pop
pop
add
push
push
mov
jmp
test
flds
mov
adc
fidivs
lcall
lods
ret
mov
inc
pop
mov
xchg
fcmovne
scas
div
adc
and
sbb
fwait
into
mov
dec
adc
inc
sti
pusha
inc
imul
add
hlt
push
je
jne
push
lret
sbb
std
test
push
adc
xchg
mov
mov
icebp
cmpb
xchg
and
out
pushf
pop
scas
in
std
xchg
scas
fcmovnbe
dec
negl
xchg
cmp
inc
and
loop
mov
push
push
data16
test
mov
dec
jae
dec
in
jecxz
mov
push
insl
test
inc
divl
push
jl
lret
push
sarl
outsb
lea
out
out
in
pop
xor
lret
inc
outsl
roll
sbb
jb
faddp
inc
in
popa
jns
cltd
pop
pop
jmp
aas
adc
mov
xchg
aaa
sti
adc
into
push
int
aaa
pop
push
outsb
test
jns
or
jae
mov
stos
jl
mov
mov
rcll
movsl
out
fidivs
mov
sub
imul
pop
xchg
pop
fdivp
jbe
cmp
lods
dec
pop
repnz
adc
loopne
dec
sbb
call
imul
and
mov
jmp
xor
lahf
testl
lods
xor
add
fwait
pop
xchg
repz
sub
loope
scas
xchg
pop
aad
adc
mov
imul
dec
sub
and
insb
ljmp
in
enter
shl
lds
and
in
test
add
xchg
insb
push
xchg
xor
insb
push
jge
cmp
cmpsb
inc
movl
push
fadd
xchg
movsl
shrl
sbb
jge
jge
mov
sbb
out
popf
lea
arpl
pop
lret
mov
inc
nop
mov
call
pushl
push
lea
add
push
lret
pop
repnz
imul
aam
jmp
jmp
sbb
shlb
pop
jmp
xchg
cmp
mov
xchg
stos
push
jnp
jecxz
imul
add
and
into
and
sub
imul
mov
fldt
sub
mov
out
punpckldq
xchg
popa
mov
jbe
adc
jbe
mov
faddl
data16
mov
rorb
mov
sar
xorl
xchg
add
xor
fwait
dec
push
pushf
inc
cmp
insl
mov
subl
inc
adc
adc
inc
cwtl
mov
popa
mov
add
sbb
subb
jmp
mov
dec
jp
add
and
and
test
and
jae
sub
and
int3
mov
outsb
scas
test
frstor
push
and
jge
jno
in
jg
push
cmp
lods
repz
jne
and
roll
jae
push
fbstp
jp
or
jne
iret
mov
mov
pop
sahf
movsl
inc
aas
push
add
sub
popa
xchg
aas
sub
xor
nop
or
xchg
std
out
test
les
test
and
ror
jle,pt
movsb
dec
cwtl
xchg
push
icebp
loop
pop
loope
push
out
mov
aaa
xlat
jo
adc
push
jns
sti
add
mov
aas
popa
and
adc
pusha
xor
fs
inc
shl
sub
notl
data16
mov
mov
int
push
scas
pop
nop
stc
mov
icebp
xchg
sub
push
mov
mov
sub
mov
in
jb
jbe
lock
fiaddl
shl
or
stos
add
movsb
std
mov
loop
push
jae
sbb
mov
jmp
lods
inc
jbe
inc
mov
sub
notl
test
or
lret
mov
mov
sub
popf
fistps
jo
adc
nop
cmpsb
popf
sub
addr16
shlb
xorb
aad
pop
mov
div
cmp
mov
shl
icebp
push
cwtl
in
adc
test
std
stos
jne
mov
xchg
ret
push
dec
call
out
sahf
sub
push
clc
adc
push
cmpb
xchg
fwait
dec
jg
mov
orb
push
insb
out
pop
mov
adc
dec
insl
sub
jnp
mov
negb
xor
and
and
jno
fdivl
xor
je
xchg
fisubs
imul
xchg
fadds
or
sub
imulb
outsl
insb
testb
imul
orb
xor
push
mov
pushf
std
mov
int
or
subl
xor
fdivs
mov
mov
popl
inc
fdivrp
popa
or
inc
mov
outsb
adc
sahf
push
jno
push
cmpsl
cmp
ja
sbb
push
cmp
add
inc
scas
test
dec
push
outsb
out
inc
and
add
push
push
in
ljmp
fistps
jecxz
sbbb
or
testl
and
out
pop
mov
pop
into
je
icebp
adc
lahf
jnp
xor
lods
fiadds
fisubs
jne
pop
xor
sub
inc
mov
push
pop
cmp
mov
shl
jl
aaa
jb
dec
sbb
sbb
pop
rcrb
xchg
cmp
addr16
enter
out
cmp
sbb
and
cmp
mov
out
sub
pop
sub
xchg
adc
xbegin
jne
lods
sbb
pop
pop
enter
stos
cmp
lcall
jge
loop
leave
fcomip
pop
jb
arpl
into
sbb
inc
pushf
or
lret
xor
repz
je,pt
mov
clc
jns
insl
jne
dec
sbb
loopne
ds
js
out
dec
nop
cld
sub
cmp
cld
pop
mov
xchg
and
push
lock
dec
test
jmp
jo
lret
adc
cli
push
mov
push
in
mov
std
iret
jae
adc
sahf
jne
push
insb
and
jg
push
xchg
add
push
inc
roll
mov
xchg
and
sbb
add
xchg
cmp
inc
or
loopne
sbbb
rclb
pop
sti
mov
inc
push
sub
scas
inc
mov
xlat
sub
xor
mov
jecxz
je
add
out
fisttps
and
xor
and
inc
lods
dec
jo
push
or
int
cmpxchg
sbb
lods
outsw
lds
call
adc
or
inc
mov
jge
sbb
adc
and
in
lods
push
cmpsb
imul
xchg
fstl
psubb
fstpt
ret
sbb
imul
jnp
in
fadds
ds
std
pushf
lods
push
pop
iret
sub
sub
cmp
xchg
xlat
inc
dec
aas
sub
scas
cmp
cmp
sub
pop
fcmovnb
adc
jae
mov
xchg
jb
popf
mov
jbe
add
mov
fimull
das
rolb
inc
push
ss
pusha
cmp
cmp
pop
jmp
mov
jbe
jp
mov
cltd
lods
jl
stos
test
scas
icebp
pop
rep
mov
xchg
mov
jmp
inc
push
add
ret
das
repnz
jno
hlt
xor
mov
scas
xchg
jo
push
push
test
lods
cmpsb
popa
or
xchg
outsl
dec
xor
cmp
lock
sub
jae
cmp
pop
rorl
push
test
adc
mov
adc
xor
xor
dec
ljmp
mov
lret
lcall
je
jl
addr16
ret
xchg
adc
pusha
leave
mov
sub
xchg
push
pop
jg
xor
cli
aad
xchg
jge
hlt
rorl
loopne
fimuls
sub
cmp
push
int
jg
dec
sub
out
and
ret
in
mov
xor
rol
popf
mov
or
in
scas
sub
xchg
or
sub
jno
push
xor
pop
sub
sub
pop
jecxz
movsb
stc
pop
lods
pop
pop
pop
add
sarb
push
push
pop
mov
lcall
inc
xor
sub
add
jmp
and
jle
push
jb
adc
dec
ret
jmp
dec
push
xchg
hlt
in
adc
jae
fiadds
sub
mov
mov
ljmp
pop
and
inc
in
mov
mov
push
push
mov
mov
pop
scas
bound
lahf
cmp
sahf
test
rol
sub
scas
stos
shrl
sbb
pusha
out
sbb
add
dec
aad
pop
aas
fwait
gs
in
jae
dec
into
sbb
scas
lcall
mov
test
mov
or
lret
xor
shlb
fistpll
sbbb
xor
dec
js
sbbb
imul
pop
in
push
adc
insl
insb
pop
lcall
sub
and
pop
popa
dec
mov
ja
xchg
push
add
mov
sub
loope
addr16
out
fcoml
add
lea
cmpsl
sbb
adc
pop
mov
fs
scas
in
pop
mov
shlb
cmp
scas
les
xor
mov
andl
pop
cmp
mov
push
or
clc
ja
xorl
or
pop
pusha
in
rclb
stc
pop
test
cmp
mov
jecxz
xor
sub
hlt
jb
dec
xchg
pop
dec
aad
jb
mov
out
pop
xchg
dec
cld
or
jp
push
cmp
out
jge
mov
jg
enter
cli
jno
sub
ss
xchg
mov
leave
and
mulb
xorb
rolb
and
inc
popf
mov
mov
mov
stos
pop
out
popw
sbbl
shlb
je
js
inc
push
or
mov
sbb
xor
inc
push
and
mov
lahf
icebp
sahf
int3
mov
shll
add
pop
in
icebp
fildll
es
push
adc
rcrb
xchg
sbb
pop
add
movsl
or
movsl
mov
inc
test
gs
adc
imul
mov
jmp
dec
dec
stos
or
outsl
fwait
adcl
cltd
push
andb
mov
out
mov
push
hlt
mov
hlt
mov
dec
push
lahf
test
push
add
adc
or
fs
hlt
dec
in
in
sbb
stc
jbe
cmp
int3
xor
in
inc
test
inc
mov
ret
call
add
cmp
mov
fisubl
inc
sbb
dec
leave
shll
loop
ret
ds
jg
mov
pop
bound
scas
adcb
sub
cld
fst
jb
movsb
jo
cmp
sbb
fdivl
flds
negl
and
mov
pop
pop
daa
jge
dec
cmp
jae
loope
stos
nop
pop
inc
xchg
outsl
popf
int3
push
push
add
shlb
imul
loope
loope
jne
cmp
xchg
mov
outsl
pop
dec
lods
cmpsl
lea
push
sbb
mov
or
inc
push
ret
dec
js
push
lret
push
fisubs
mov
mov
inc
cld
lret
pop
nop
and
aas
loopne
mov
add
cmpl
cmp
cmpsb
scas
cmp
mov
aam
jle
out
in
sbb
lcall
sahf
iret
rcrl
xor
out
bound
sahf
mov
pop
cmp
fldt
popf
push
or
mov
adc
push
repz
jae
hlt
outsb
jns
out
sbb
xchg
test
rcrl
inc
dec
repz
imul
sar
mov
jmp
push
mov
mov
cwtl
push
in
dec
enter
adc
sbb
mov
xor
mov
xchg
gs
mov
sub
mov
pop
xchg
popa
out
pop
leave
pop
es
aas
fldt
pop
in
or
jne
into
mov
cmp
rclb
gs
dec
and
lea
or
pusha
stos
leave
xor
std
sbb
pop
add
push
test
mov
push
fcomps
jle
jne
popf
adc
cmpsb
stos
rolb
pop
cmp
loopne
mov
jecxz
movsl
in
pop
jmp
adc
mov
push
loope
jbe
xor
or
lods
arpl
repnz
adc
aas
cmc
lock
mov
nop
jno
cmp
jbe
pop
add
sbb
sahf
push
jo
fnstcw
inc
push
dec
call
jge
arpl
mov
cltd
ljmp
test
mov
aad
push
js
loop
adc
jnp
lock
fiaddl
cs
add
addr16
ja
stc
loopne
xor
mov
lret
mov
sbb
xchg
cld
fstpl
pop
jmp
arpl
jg
iret
aaa
jnp
push
push
shrl
sbb
test
in
icebp
outsl
dec
mov
inc
lock
cmp
dec
pop
mov
mov
movsb
call
mov
jnp
test
push
mov
sub
add
mov
and
pmaxub
fstpt
push
jmp
mov
int
xchg
xchg
enter
icebp
mov
push
inc
dec
shrb
sub
adc
jmp
push
push
rclb
repnz
mov
or
mov
pop
mov
xchg
xor
les
scas
mov
push
into
sarb
gs
je
scas
mov
pushf
or
add
inc
add
int
outsl
aam
loope
les
fwait
outsl
and
mov
pop
stos
fnsetpm(287
lods
cmpsb
adc
inc
aad
mov
ss
in
frstor
fidivl
pusha
scas
stos
mov
jmp
je
jbe
out
xchg
aad
addb
mov
incb
pop
repz
mov
xchg
insl
int3
dec
mov
sbb
loope
in
fptan
loopne
icebp
xchg
fisubs
cmp
out
or
mov
jge
pop
dec
pushf
or
or
jae
xor
jns
or
xchg
aaa
xor
notb
fstps
add
filds
out
mov
xorb
jl
js
xchg
int3
dec
cmp
cld
lods
rcrb
out
loope
xchg
sarb
mov
jge
cmp
test
incb
mov
lock
mov
rcrb
add
sub
sbbl
daa
mov
icebp
push
fcmovbe
cmp
jecxz
dec
insl
out
xchg
xor
mov
cmp
push
mov
jb
adc
xor
xchg
fcoms
push
xchg
sbb
roll
pavgw
xor
orl
scas
imul
cld
adc
int3
repnz
mov
js
xchg
cwtl
stos
lahf
scas
mov
cmpsl
insl
loop
mov
adc
xor
shr
pushf
jae
jmp
pop
add
in
movsl
xchg
sub
lods
and
xor
and
loope
mov
sarl
jl
das
jns
push
mov
insb
push
pushf
subl
mov
out
dec
pop
xor
test
inc
pop
rcll
mov
pop
repnz
lds
mov
jge
or
call
fnstsw
in
sub
pop
lea
js
push
pop
mov
or
call
fnstsw
in
sub
pop
lea
js
push
push
test
test
jmp
fnstenv
in
sub
pop
mov
jl
pop
pop
subb
cmp
clc
lods
push
ja
in
sub
xchg
xchg
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
