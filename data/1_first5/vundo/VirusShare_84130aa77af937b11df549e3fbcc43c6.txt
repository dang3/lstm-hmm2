add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
dec
push
adc
jmp
xchg
and
or
add
add
push
add
lcall
add
add
add
add
add
add
pop
add
xchg
add
push
add
les
sbb
add
add
add
push
add
push
add
add
add
add
insb
add
outsb
add
add
add
add
add
add
add
add
add
loopne
mov
add
dec
add
jns
lcall
add
xchg
add
cltd
add
ljmp
add
add
scas
add
loop
push
add
lcall
add
xor
and
test
push
add
add
add
add
dec
add
push
add
add
outsb
add
add
ljmp
add
add
add
and
jno
push
add
lcall
add
stos
add
or
push
add
lcall
add
add
add
arpl
push
add
add
add
add
xor
add
add
add
add
add
add
rolb
push
add
add
add
and
xchg
add
add
add
lret
add
add
add
add
add
add
add
add
add
add
push
add
add
dec
add
add
add
add
push
add
add
add
add
cmpsb
add
add
add
add
add
add
jg
add
add
add
add
and
add
add
add
fwait
add
add
add
and
pop
add
jns
and
xchg
add
add
add
add
add
add
add
add
and
add
add
add
add
loopne
test
jmp
xchg
sub
and
add
add
add
add
add
sbb
popf
add
add
add
add
add
mov
bound
loopne
and
verw
add
add
into
add
add
add
and
and
arpl
test
inc
add
add
add
mov
ljmp
add
add
add
add
add
add
or
sub
and
add
add
add
add
jns
sub
add
or
add
pop
add
sbb
pop
add
test
adc
adc
ljmp
add
les
jecxz
jbe
adc
add
add
add
scas
add
add
add
add
xchg
add
add
add
add
add
mov
add
add
add
add
add
add
dec
add
add
add
sub
add
add
and
add
add
and
sahf
add
jno
stos
add
jno
and
add
add
add
xchg
dec
add
and
scas
add
add
add
or
jns
cmp
outsb
add
add
loopne
test
push
add
add
add
add
add
add
js
add
and
sub
add
add
add
or
add
add
loopne
xor
aaa
add
dec
add
add
add
add
add
add
jno
js
inc
add
add
add
add
add
sbb
cmpsb
add
roll
add
add
add
add
add
add
add
add
add
add
arpl
jno
pop
pop
sub
cli
aaa
push
and
and
sbb
lods
jecxz
push
aad
out
xor
adc
xchg
jo
cmp
push
scas
mov
mov
push
mov
adc
int3
mov
out
sub
and
in
jns
dec
mov
in
dec
bound
push
sub
adc
cmp
push
xchg
in
adc
sbbl
mov
dec
mov
mov
jo
or
add
repz
repz
mov
push
movsl
mov
cmp
loope
cld
cmc
xchg
fistps
adc
mov
test
fbstp
inc
xchg
loope
shld
or
jbe,pt
test
pop
jp
xchg
sbb
inc
xchg
test
and
xchg
sub
out
push
pop
fisubl
out
enter
in
xor
xorl
and
push
mov
fwait
mov
push
add
and
adc
pushf
pop
add
adc
mov
add
push
sub
aas
cld
inc
jae
and
sub
xor
dec
mov
fwait
movsl
lods
jbe
movsb
movsl
dec
mov
xor
mov
fistpl
xchg
ja
sbb
xchg
jg
lret
pop
pop
xor
syscall
mov
fwait
negl
push
dec
pop
jl
into
jb
movsb
pop
test
sbb
pop
fsubrl
aam
pop
cld
in
addr16
add
mov
pop
sub
repz
xchg
mov
dec
bnd
aas
xchg
and
cmp
int
cli
das
or
imul
cmpsb
xor
xchg
es
out
gs
adc
and
dec
movsb
arpl
shr
pavgb
add
push
test
ja
xchg
mov
popf
enter
iret
cli
push
jg
cmp
xorb
push
push
lods
jbe
push
fmuls
dec
xchg
cmc
fisttpl
and
mov
ljmp
or
pop
jle
mov
ljmp
addr16
cmp
loope
mov
xor
xchg
aam
pusha
push
adc
sbb
xchg
das
mov
lcall
out
and
arpl
mov
dec
lcall
mul
pop
lahf
adc
jge
loopne
roll
mov
mov
mov
ds
stos
loopne
pop
idiv
jle
imul
pop
out
or
loop
adc
push
scas
sbb
insl
dec
mov
out
pop
ficoms
arpl
xchg
mov
andb
mov
cmp
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
push
xor
add
adc
sub
push
das
xchg
outsl
mov
xchg
dec
cmpb
das
jge
ret
mull
out
xor
add
adc
inc
es
scas
outsl
mov
orb
nop
dec
lock
ret
and
sbb
or
pop
ja
jg
add
pop
lods
jae
push
outsb
iret
inc
fwait
addr16
mov
mov
insb
call
les
pop
cmp
mov
inc
out
adc
mov
or
mov
cmpb
scas
mov
dec
dec
aaa
jmp
mov
aas
mov
mov
rolb
in
ret
mov
std
lcall
ss
xlat
push
cmp
dec
jge
pop
mov
sub
ret
adc
and
pcmpgtd
sub
fisttpl
cmp
jp
sub
loopne
loop
xchg
jp
jp
out
inc
and
push
xor
push
xlat
sbb
add
jge
insl
mov
rcrb
int3
xor
mov
jb
inc
aaa
dec
lea
push
mov
xor
pop
fsubrs
lea
cltd
inc
fwait
addr16
pusha
ficoml
mov
out
aaa
push
int
mov
xchg
notl
inc
lock
pop
cwtl
jno
jge
into
cmp
ss
pusha
inc
xlat
cmp
and
push
dec
cmpsb
lea
fdivl
scas
data16
push
scas
jb
inc
push
jg
outsl
mov
orb
loop
repnz
ret
jmp
out
xor
add
adc
inc
push
jg
outsl
mov
orb
loop
repnz
ret
jmp
sub
ja
nop
adc
jmp
adc
aam
jl
insb
std
push
xor
or
pop
push
push
xchg
rcll
jecxz
int3
je
jge
add
sub
je
xor
push
sti
cmp
dec
and
and
repz
push
mov
mov
sub
dec
negb
or
cmpsl
cltd
out
push
das
push
ss
dec
call
shrl
movsl
sub
inc
jg
xor
ficoml
sub
movsl
mov
pop
pop
dec
es
push
or
mov
fldenv
dec
jbe
lcall
mov
xchg
hlt
sar
pop
test
je
push
outsb
aaa
xchg
scas
fidivs
sub
cli
xchg
cmpsb
adc
xchg
pop
test
sbb
push
jno
movsl
push
add
pop
mov
clc
scas
addr16
data16
je
xor
and
dec
int
nop
pop
add
mov
jl
jmp
mov
jecxz
add
sbb
pop
fisubrs
sbb
pop
insl
lods
push
sub
out
mov
and
popf
or
mov
call
dec
sub
jp
test
push
mov
jne
xor
in
lods
mov
mov
mov
ret
fimuls
ja
insb
jecxz
repz
inc
mov
add
push
or
xchg
bound
push
add
sbb
xor
xor
cltd
into
aas
inc
add
shll
lahf
cs
cmp
xchg
dec
into
jl
lods
adc
decl
push
jl
add
mov
fwait
rorl
aas
mov
push
rcrb
in
push
inc
sbb
cltd
push
xor
fdivrs
xor
outsl
cltd
pop
push
imul
and
div
mov
xor
loope
les
adc
clc
push
lea
clc
jne
sub
adc
gs
clc
mov
js
inc
xchg
adc
out
and
rcr
sub
shll
xor
mov
enter
or
pop
push
cmp
adc
add
insl
cmpsl
and
in
int
push
aam
push
adc
mov
push
jmpw
push
jno
jno
jns
or
xor
rcr
xchg
cmp
loopne
xchg
jnp,pn
xor
cmp
rorb
es
pop
int
dec
dec
jnp
imul
int3
xchg
iret
gs
xor
jnp
mov
fst
push
scas
or
fmul
aad
stos
fnstenv
jecxz
push
stos
lahf
cltd
int
add
xchg
cmp
xchg
test
gs
pop
adc
clc
sbb
dec
adc
push
hlt
add
cld
in
fistpl
outsl
push
sbb
add
data16
gs
add
dec
lea
inc
cmc
add
sti
fsubs
out
xchg
sarb
push
outsb
cs
pop
std
add
pop
mov
movsl
xchg
mov
mov
push
push
xchg
jmp
or
insl
and
mov
pushl
iret
or
pushf
adc
lea
pop
inc
inc
cmp
xchg
insb
cmpsl
cmp
add
or
push
scas
fmull
loope
cmp
inc
dec
iret
add
in
loope
mov
int
orb
rcrl
sahf
cmpsl
cmp
dec
inc
sub
or
fmull
imul
cmc
hlt
mov
lods
imul
jge
jge
icebp
jge
push
daa
xor
pop
dec
mov
cmp
es
int3
xchg
movsb
pop
add
in
push
xchg
cmpsl
jecxz
ja
leave
adc
sub
psubw
fldenv
shll
loop
inc
xor
adc
loop
push
push
cmp
jb
xor
inc
xor
rcll
pop
dec
or
scas
inc
movsb
xor
cmp
test
fsubs
cmp
movsb
fbstp
xchg
xchg
cmp
xchg
cs
and
pop
sub
mov
dec
and
cwtl
xchg
sub
scas
jecxz
jp
xor
or
mov
jnp
ret
imul
or
cwtl
jp
or
cmp
xchg
scas
sub
movsl
in
shll
sub
and
shll
and
jbe
xor
jecxz
inc
push
jo
daa
aaa
push
push
out
dec
sbb
je
lods
sbb
in
jg
pop
dec
loope
int
jno
jmp
les
flds
adc
xchg
mov
pop
mov
cmpsb
mov
adc
sti
stos
scas
idivl
cli
shl
push
cs
xchg
out
mov
jl
cs
adc
dec
gs
lock
jge
add
test
fldl
adc
mov
pop
icebp
imul
imul
jle
enter
or
cli
vmovlps
jns
xchg
xchg
adcb
or
in
jg
xchg
imul
jg
bound
add
add
jecxz
xlat
dec
push
cmp
addr16
adc
rorl
sub
mov
pushf
xchg
js
pop
notb
sbb
js
cmp
dec
cltd
push
ficompl
sbb
movsb
pusha
adc
push
inc
lret
sbb
jae
es
ja
cmpsb
ss
imul
jae
or
stos
and
sarl
neg
push
call
inc
sbb
pusha
push
add
mov
push
or
gs
pop
lcall
adcl
fcomip
jns
sub
lret
jmp
out
jno
pop
hlt
pop
jecxz
xor
sbb
mov
mov
cld
subb
inc
jnp
pop
imul
xchg
xchg
cwtl
add
insl
and
jle
push
push
adc
arpl
xchg
mov
sbb
add
mov
dec
dec
and
cmp
xor
repz
mov
iret
jle
mov
jl
mov
fs
sbb
je
int
push
and
xor
daa
pop
sbb
scas
inc
adc
shlb
add
cmpb
push
pop
mov
dec
sub
repnz
es
cs
xchg
push
xor
xchg
lods
mov
mov
shll
inc
addl
cmp
adc
lods
pop
test
cmp
movsb
scas
mulb
rorb
dec
test
inc
ljmp
lock
stc
in
or
nop
adc
and
xchg
pop
sbb
jno
xor
out
mov
sbb
sub
mov
jns
idivb
insb
mov
ficomps
lods
and
inc
lods
ljmp
in
in
xor
rclb
test
xorl
push
pop
and
jns
push
and
mov
fldcw
test
in
inc
enter
inc
scas
mov
pop
jno
jae
lods
add
in
mov
outsb
pop
popa
xchg
push
pop
ja
scas
mov
in
bnd
jno
xchg
cwtl
idiv
xchg
aas
mov
ret
movsb
or
pop
jecxz
lret
rorb
aad
call
inc
adc
lret
mov
mov
or
icebp
mov
adc
addr16
fisubrl
sti
inc
test
fcomip
push
ss
ja
test
and
cltd
sbb
dec
rorb
or
sub
out
jno
lea
rolb
xchg
insl
dec
rorl
jbe
bound
jb
add
mov
stos
cmpsb
jbe
mov
movl
imul
mov
fadd
jne
sub
mov
xor
mov
loop
and
fstps
fstps
cmp
xor
mov
adc
dec
cmpsl
dec
stc
sub
cmpsl
insl
sub
jne
es
popf
pusha
dec
fistl
rcrl
dec
jo
pop
rcrb
mov
xor
aaa
aam
push
xchg
dec
stos
sbb
jl
cli
pusha
add
cltd
inc
fldcw
loopne
fsubrl
out
lds
rorl
add
popa
pop
or
ja
loop
jbe
sbb
dec
jecxz
inc
jb
xor
push
xlat
push
push
sbb
cmc
xor
sub
enter
testl
stc
js
mov
mov
loop
push
lcall
sbb
or
cli
xlat
addr16
fisttpl
dec
mov
mov
add
inc
xor
mov
mov
xor
inc
add
pushl
sub
and
aaa
cmp
adc
sub
adc
jae
jbe
mov
pop
mov
adcb
push
in
push
inc
pop
int
and
out
jl
popf
cmp
xchg
xor
mov
test
jge
scas
sub
inc
lock
mov
adc
jmp
les
push
out
or
lea
clc
int3
jns
leave
imul
stos
and
imul
sar
xchg
outsl
daa
cmp
fsubl
sub
shl
aas
cmp
ds
mov
test
loop
gs
lods
adc
push
add
pop
leave
sbb
and
pop
ljmp
or
xchg
adc
repnz
mov
movsb
adc
mov
or
movsb
loopne
cltd
shrl
sbb
test
outsl
mov
imul
movsl
dec
mov
xchg
sbb
fistpl
mov
cld
sbb
out
movsl
stos
into
mov
and
and
ret
adc
ficompl
jle
out
inc
mov
add
jmp
sub
or
or
jns
add
add
es
rolb
mov
cld
faddl
mov
imul
inc
sub
in
mov
pop
in
push
fimuls
inc
or
das
jnp
out
lcall
xor
and
mov
cmpsl
jl
mov
pop
sub
or
mov
adc
sub
mov
insl
jg
shlb
xchg
cmp
sub
outsl
sahf
jno
addl
out
mov
mov
fidivs
cwtl
xchg
jae
ss
jg
cmp
sti
mov
gs
jp
das
pop
dec
in
add
xchg
push
bound
subl
test
lods
enter
jle,pt
cli
jo
pop
mov
ljmp
lea
jb
mov
jns
push
push
adc
adc
cmp
jnp
jns
inc
sub
test
dec
mov
xlat
and
mov
and
rorb
or
lds
dec
dec
xor
bound
fsub
repz
xchg
inc
inc
sub
inc
push
sbb
pop
cmp
pop
or
std
mov
pop
cmp
mov
pop
and
add
std
mov
and
les
fstpt
loope
xor
cmp
ret
leave
arpl
lock
push
fdivr
stos
out
lcall
test
nopl
push
stos
fistps
lock
cmp
cmp
xlat
xchg
push
cmpsl
aad
xlat
push
rclb
mov
sub
loopne
pop
or
aad
push
cwtl
jae
aad
int3
mov
lods
aad
mov
pop
or
sbb
or
adc
dec
into
jmp
fmuls
int3
sbb
or
mov
xchg
cld
mov
or
sbb
pushf
addr16
push
cmpsb
dec
into
mulb
inc
sbb
mov
cld
xchg
fs
fimull
jae
das
sbb
pop
jmp
mov
cmp
inc
jecxz
mov
pop
mov
in
outsb
movsb
pusha
xchg
iret
fldcw
ret
in
mov
and
push
mov
jecxz
mov
aaa
add
sub
inc
push
cmpsl
add
jle
push
mov
pop
inc
mov
mov
data16
dec
pop
push
imul
imul
mov
test
mov
call
aad
sbb
call
jb
out
cmp
mov
outsb
push
xchg
dec
pop
in
mov
stos
mov
pushf
jns
pop
fwait
mov
popa
in
nop
sub
iret
imul
or
push
andl
or
insb
mov
dec
aas
mov
pop
loopne
mov
add
and
mov
cld
incb
cwtl
orb
clc
movb
pop
test
adc
lods
xchg
push
sub
lret
jg
xchg
cmc
clc
mov
jmp
and
push
push
leave
sbb
mov
sub
dec
ret
mov
insl
xor
loop
sahf
cs
push
leave
je
popa
inc
frstor
pop
xlat
repnz
inc
pop
mov
push
mov
pop
mov
jl
mov
fldcw
add
dec
push
pop
ja
mov
sarb
pop
xchg
aaa
orl
pop
rorl
sub
pop
mov
aam
mov
mov
sub
jne
stos
push
lods
int
mov
ja
std
dec
fiadds
sbb
sbbb
push
sub
dec
dec
pop
int
outsl
inc
lods
push
push
sbb
xor
popa
jae
ret
and
icebp
xlat
call
pop
sbb
enter
mov
and
aam
fs
inc
data16
movsl
push
in
lahf
fsubl
imul
push
out
and
mov
mulb
in
sub
dec
xchg
shll
ret
sbb
inc
sbb
sub
sbb
test
pop
push
cld
xor
dec
cltd
pop
pusha
sub
lods
in
call
mov
pushf
jb
adc
rcll
sbb
movsl
and
sub
push
clc
jnp
lods
es
jg
xor
jle
rorb
mov
out
insl
mov
xchg
out
jb
jl
hlt
sub
push
orl
cmp
sub
lea
sub
pop
mov
xchg
adc
push
jmp
jle
movsl
pop
jmp
jle
in
in
xchg
leave
inc
pop
ret
xchg
int
lsl
shll
dec
test
inc
nop
xor
and
mov
push
mov
xor
add
adc
shll
testl
mov
dec
push
into
xchg
gs
test
pop
dec
xor
aaa
outsl
stc
bound
inc
or
stos
xor
data16
das
fistl
out
iret
push
sbb
push
pop
inc
add
xor
xor
pushf
mov
xchg
in
pop
shrb
mov
ret
mov
push
mov
sub
adc
das
jb
enter
inc
jg
sbb
mov
adc
mov
xlat
xor
shrl
loopne
test
mov
fistl
push
mov
mov
leave
inc
push
cmpsb
insb
sbb
push
out
mov
idiv
jae
push
adc
push
push
push
rol
mov
cmpsl
test
pop
push
inc
in
insl
sub
and
mov
jo
and
rcrl
sahf
aam
and
and
fmul
pop
fsubrs
clc
push
fsubs
push
push
jle
push
js
adc
jo
xchg
decl
mov
xlat
fstpl
inc
or
inc
adc
mov
lcall
pop
clc
out
loope
sar
cmp
or
and
lret
xchg
icebp
jp
test
xor
jmp
mov
xchg
push
mov
rcl
add
arpl
xor
call
dec
cwtl
pop
stos
ror
inc
push
add
cs
adc
dec
mov
pop
icebp
xchg
dec
pushf
popa
jns
and
insl
lods
jno
cmpsb
or
dec
pop
adc
sbbl
stc
mov
movsb
jne
imulb
fsubr
loopne
test
in
nop
pop
loope
push
xor
cli
pop
and
xchg
andl
dec
out
cmp
jns
lea
das
popf
xor
push
paddq
mov
and
mov
push
hlt
mov
hlt
ret
sbb
adcb
pushf
mov
dec
fs
mov
mov
xchg
out
push
popa
loopne
scas
popf
inc
iret
popf
lods
ficoml
imul
xchg
add
mov
daa
lock
leave
push
idiv
lahf
sub
lds
push
ficoms
or
jnp
sub
inc
popf
enter
insl
inc
xchg
pop
pop
mov
lcall
les
or
pop
imul
inc
icebp
cs
push
push
movsb
jno
adc
xor
adc
sti
inc
movsb
in
pushf
xchg
mov
scas
push
jmp
xor
mov
cmp
sahf
lret
cld
rcrb
in
lock
stos
and
dec
or
jp
xlat
jb
pop
test
js
sub
stos
lock
lcall
fs
adc
in
cmp
rcrb
and
pop
ds
hlt
inc
jns
arpl
xchg
call
in
test
mov
mov
xlat
into
or
inc
xchg
mov
mov
mov
mov
dec
shrb
or
dec
mov
lods
mov
mov
notl
and
mov
sbb
fs
pop
sbb
cli
dec
test
hlt
add
les
inc
sub
cmp
outsl
inc
xorl
faddl
inc
out
xchg
and
adc
lods
adc
mov
mov
pop
jl
in
adc
into
mov
pusha
xor
loop
sub
es
enter
dec
aam
pop
aam
push
popa
leave
in
xchg
fwait
adc
mov
pop
lret
les
shl
es
sbb
sbb
insl
and
imul
das
jo
into
je
cmp
sub
add
xor
sub
das
jbe
dec
or
movsb
sbb
jecxz
jns
mov
push
into
fsubl
js
cmpsb
mov
aad
pop
mov
lret
mov
mov
cmp
cmp
movsb
mov
stos
inc
daa
nop
je
pop
add
std
fcmovnbe
push
into
inc
jbe
cltd
addr16
xor
pop
push
or
cmp
push
mov
mov
mov
dec
dec
pop
inc
loop
cltd
sbbl
add
push
pop
lea
push
add
adc
cmp
fdivrs
lahf
adc
push
jno
pop
add
add
lods
mov
add
inc
popa
xchg
lret
pop
add
mov
jae
test
adc
mov
ja
jns
cmp
outsb
xor
inc
and
stos
push
ficoms
jnp
mov
cwtl
leave
es
imul
xchg
xchg
push
cmp
add
push
cmp
or
imulb
mov
or
push
in
xchg
and
dec
jecxz
pop
dec
sbb
xchg
adc
movsb
xchg
sub
jge
bound
es
sbb
andl
xchg
js
xor
add
xlat
loope
shrl
pop
shlb
xchg
add
in
mov
dec
sub
sahf
push
clc
data16
jo
adc
mov
out
push
leave
stos
fs
push
sub
add
lret
sbb
xchg
cmp
hlt
mov
das
mov
pop
sti
jo
hlt
lret
inc
lret
cmp
xor
xor
mov
jecxz
int3
das
adcl
subb
pop
std
in
xchg
outsl
and
push
adc
pop
or
into
repz
xor
jo
aaa
fists
or
fiaddl
or
mov
lret
sti
mov
shll
das
adc
insl
imul
das
mov
incl
scas
pop
jle
loope
xor
pop
lock
ljmp
mov
and
mov
in
popf
out
fcoms
or
dec
mov
and
xor
xchg
outsl
cmc
add
testb
cmp
das
ss
fsin
xor
lret
int
mov
jmp
out
xchg
loope
push
scas
jle
mov
scas
sub
lret
inc
cli
pop
dec
push
push
ss
dec
cmp
add
xor
repnz
xor
mov
ret
add
inc
xchg
sub
test
cmp
loopne
mov
or
arpl
testb
push
mov
aas
pop
push
jo
pop
loope
adcl
jb
imul
dec
jl
popl
xor
fldcw
imul
pop
push
xchg
push
scas
daa
lods
lods
mov
lahf
rcll
pop
mov
sahf
std
in
mov
insb
jns
add
popf
mov
es
pop
out
int3
add
fidivrl
rorl
push
inc
clc
xchg
out
jns
daa
shrb
int
add
push
inc
xor
dec
dec
dec
and
dec
and
int3
sub
cmp
cs
pop
test
inc
mov
pushf
andl
mov
das
scas
in
bound
hlt
mov
jg
mov
sub
or
clc
xchg
mov
cltd
sti
xchg
mov
notl
daa
sub
pop
aas
pop
push
scas
loopne
scas
and
cmp
cli
or
xor
mov
cs
in
mov
jmp
inc
or
lods
lods
aam
mov
test
sub
lret
outsb
add
fnsave
add
test
insl
lcall
int
pop
scas
dec
adc
dec
frstor
inc
dec
xchg
pop
xor
rcll
mov
inc
push
jg
outsl
mov
orb
loop
repnz
ret
jmp
out
xor
add
adc
inc
push
jg
outsl
mov
orb
loop
repnz
ret
jmp
in
xor
add
adc
inc
mov
mov
dec
xchg
aas
loop
repnz
aas
out
ret
ss
push
out
mov
inc
setb
nop
sbb
orb
push
loopne
lock
lds
lods
scas
nop
and
in
aad
lds
cmp
sub
pop
test
movsl
insb
push
pushf
inc
mov
lods
adc
cld
and
or
cmp
sub
xor
insb
push
pushf
inc
mov
lods
adc
cld
and
das
xchg
dec
orb
in
sbb
out
inc
lds
aam
lods
sahf
cld
and
addr16
inc
jns
cmc
mov
cltd
sbb
pop
loop
xor
iret
enter
and
adc
or
hlt
push
out
push
push
test
pushf
inc
cmpl
dec
mov
dec
xchg
andl
stc
loopne
xchg
flds
push
xchg
mov
adc
xchg
and
repz
mov
mov
jbe
insl
test
mov
and
push
or
int3
mov
ret
in
paddsw
pop
xchg
lods
sbb
ljmp
add
hlt
jecxz
sub
push
pop
mov
movsb
jns
pushf
inc
mov
lods
adc
cld
and
or
cmp
sub
pop
test
movsl
add
sbb
movsl
jb
inc
mov
lcall
sub
add
push
jmp
jo
popa
xorb
test
lea
dec
fidivs
testb
mov
les
into
inc
leave
push
repnz
in
aad
lds
pop
test
movsl
insb
push
pushf
inc
mov
lods
adc
cld
and
or
cmp
sub
pop
test
movsl
insb
push
pushf
inc
in
push
aaa
outsb
data16
push
mov
xchg
pop
int
cli
stc
test
mov
ja
test
cwtl
fidivrl
popa
mov
push
dec
adc
mov
sub
fucomp
mov
decb
into
sti
or
out
sub
jmp
sub
movsl
jbe
push
xchg
cmpb
xchg
loopne
pop
repz
mov
mov
or
adc
dec
insb
push
and
cwtl
jo
inc
mov
mov
inc
icebp
lea
pop
pop
push
cmp
adc
cmpb
ja
dec
mov
mov
imul
xchg
sbb
cmp
or
mov
mov
pop
mov
in
lret
imul
repz
inc
ja
loopne
fildll
mov
add
fcmove
mov
fs
scas
mov
iret
mov
or
lea
xor
mov
sti
rcrl
outsb
repz
cmp
stos
jl
in
loope
inc
cmpsl
dec
dec
mov
int3
popa
xorb
or
sbb
pop
jo
out
sbb
lahf
add
ret
jo
fwait
sub
push
add
cmc
cmpsl
dec
push
mov
adc
cmpsl
push
inc
stc
jmp
jb
bnd
mov
mov
jo
fcompl
sbb
in
inc
lods
pop
test
int
shr
gs
addl
fnsave
jb
cmpsl
cmp
stos
test
or
jb
xor
jl
daa
and
sbb
cmp
jge
inc
mov
push
and
call
pop
iret
mov
aas
in
sub
mov
mov
and
xchg
jmp
inc
push
push
adc
idivb
into
out
mov
cmpsb
daa
fs
mov
lock
cwtl
stos
mov
fchs
ret
fadds
xchg
ret
jno
xchg
push
outsl
and
aam
xchg
cwtl
lock
outsl
mov
testl
add
nop
inc
nop
fcoml
test
enter
sub
push
test
imul
mov
xor
lock
in
sub
test
popa
mulb
mov
or
or
mov
xchg
bound
or
pushf
rorb
push
ds
jge
mov
xchg
gs
ret
into
mov
cmpsl
hlt
ljmp
out
lods
je
jno
fstpt
add
jge
jbe
sbb
and
pusha
cmp
mov
push
push
mov
add
mov
addr16
sub
jns
es
mov
cli
mov
mov
aad
dec
cmp
xor
les
out
push
mov
mov
cli
pushf
xor
stos
inc
sbb
mov
pop
clc
hlt
add
lret
iret
sarb
leave
dec
je
xor
test
mov
insl
inc
mov
insb
xchg
jecxz
pop
out
pop
and
mov
add
lahf
pop
movsb
fisubs
or
xor
int
pop
repz
scas
adc
adc
sub
push
fbstp
xchg
or
jbe
leave
inc
ret
mov
inc
jl
fwait
movzbl
sbb
cmc
ss
mov
sbb
loope
mov
push
out
cld
and
rcrl
mov
add
push
adc
arpl
sbb
into
popa
dec
adc
decb
cld
and
into
dec
push
nop
push
out
inc
sbb
sbb
movsl
jg
dec
inc
das
test
fldenv
mov
xchg
test
ss
push
stos
or
scas
es
sub
inc
shl
repnz
push
mov
inc
dec
cmp
mov
fsubs
push
or
jne
pushf
daa
inc
sbb
cwtl
and
outsl
movsb
aad
cmp
std
flds
dec
push
mov
mov
les
pop
pusha
lcall
je
sub
pop
push
sbb
jb
push
mov
sbb
incl
int3
jg
insb
cltd
pop
mul
icebp
pop
sbb
bound
fs
sbbb
pop
mov
pop
xchg
hlt
pop
pop
and
add
bound
aas
inc
out
iret
ret
mov
jo
ds
data16
mov
not
pop
fisubrl
pop
add
cmp
add
cmp
in
out
outsb
adc
aaa
mov
push
aas
push
sbb
sub
dec
hlt
jge
out
ret
loopne
lods
pop
sbb
cmp
fs
inc
mov
icebp
pop
push
fs
int3
cmpsl
adc
icebp
add
cmpl
mov
lea
int
add
mov
pop
inc
mov
dec
fcompl
das
cltd
xchg
ret
lahf
popf
jno
push
sbb
leave
bound
sahf
sbb
mov
push
dec
cmp
sub
xor
sbb
xchg
cmp
pand
mov
pop
test
sub
pop
stos
cmp
cmp
sub
xchg
xor
loopne
push
jne,pt
je
stos
insb
push
leave
sbb
pop
out
jo
scas
cwtl
mov
sbb
push
movsb
scas
xlat
sbbb
sbb
mov
inc
movsb
stc
bnd
adc
jne
aaa
sbb
push
inc
ljmp
mov
xchg
xchg
aad
lret
jnp
stc
mov
icebp
pop
imul
ud1
sbb
xchg
popf
and
cmpsb
xchg
cltd
ljmp
or
pop
mov
movsb
xchg
dec
mov
mov
cmc
xor
or
clc
or
cmp
stos
xchg
jns
inc
add
fdivs
aad
sub
cmp
cmp
into
repnz
lahf
mov
in
out
push
bound
cld
xchg
out
or
imul
jb
pop
pop
ljmp
sub
sub
or
sub
and
out
mov
mov
xchg
sub
jns
pop
mov
xchg
clc
mov
mov
xchg
pop
fwait
push
xchg
popf
in
in
pop
pop
pop
mov
sahf
pop
movsb
das
add
cmp
inc
inc
or
bound
movsl
jge
das
aas
jecxz
jno
addr16
in
jnp
lcall
xor
loopne
sbb
bnd
fimull
pop
jno
add
sahf
sarl
xchg
or
stos
and
mov
cs
js
lret
sbb
popf
mov
mov
out
xchg
cmp
lcall
add
in
or
dec
mov
xchg
sub
lods
mov
adc
sahf
jbe
popl
mov
inc
push
inc
mov
push
cld
adc
fisttpll
xchg
sbb
and
movb
jmp
add
cld
test
add
push
dec
mov
loope
xor
cmpsl
js
test
pop
jo
pop
sti
aas
jo
xchg
lea
pop
inc
xchg
call
sub
out
sbb
jp
sbb
jne
lahf
sub
xchg
or
mov
fsubr
mov
dec
imul
xchg
push
sbb
and
push
mov
enter
push
sub
nop
jb
push
dec
into
movsb
sti
inc
fsubp
inc
sub
sbb
cmpsl
dec
mov
xor
fcom
fcomi
push
popf
sub
mov
add
dec
out
mov
xchg
push
les
jmp
je
or
cmp
pop
clc
repz
xchg
cltd
cmp
movsb
cmp
jno
push
cmp
push
orb
aad
imul
iret
dec
add
and
and
sbb
xor
mov
pop
sub
jne
pop
push
or
pop
test
iret
hlt
mov
mov
add
in
mov
dec
cli
xchg
jle
out
jnp
inc
xor
test
clc
lret
and
jl
and
mov
and
push
lret
call
push
int
cltd
or
and
cmp
add
xlat
xchg
add
add
stos
ret
out
mov
fcoms
cmc
out
or
sbb
xchg
loope
les
arpl
adc
call
repnz
push
mov
imul
sbb
or
mov
pop
mov
adc
loope
inc
pop
clc
xor
inc
lock
loope
xchg
xor
and
fxch
movsl
sub
call
hlt
pop
mov
repz
xchg
cmp
rcr
jp
fdivl
mov
or
push
add
test
cmpsb
mov
jle,pn
cmpsb
cwtl
movsl
popl
mov
sub
sub
iret
push
add
sti
xor
es
inc
loopne
adc
cmpsb
rorl
mov
js
testb
pusha
sbb
add
stos
mov
enter
dec
cmp
in
sbb
xchg
jae
outsb
sbb
sub
dec
gs
rolb
aad
pop
int3
jno
push
fcoml
ficompl
adc
sarb
xor
mov
mov
mov
inc
je
movsl
mov
sbb
xor
data16
movsb
je
out
dec
popf
icebp
sub
push
cmpsl
enter
xchg
mulb
js
fiaddl
lahf
inc
xchg
sub
xchg
mov
jp
jg
jne
sbb
fs
imul
sahf
gs
xor
dec
add
into
adc
ss
jns
cmp
sub
mov
in
push
sbb
sbb
push
imul
data16
push
jecxz
jge
push
mov
stos
movsb
push
aaa
pop
push
mov
stos
divb
jg
adc
icebp
popf
dec
jecxz
push
dec
or
cmp
test
lds
ss
imul
xchg
add
push
dec
jbe
adc
cmp
sbb
inc
mov
iret
outsb
sbbl
test
mov
shrl
and
rol
lcall
int3
out
addr16
add
mov
push
repz
lock
scas
mov
and
dec
cmc
ljmp
mov
mov
shrl
inc
adc
cmp
lds
in
mov
in
fstpl
in
in
push
mov
repz
hlt
daa
ret
jo
inc
xchg
cmp
mov
fwait
rcrb
out
cmp
mov
add
cmc
icebp
inc
stos
pop
xor
pop
inc
sti
lods
xchg
out
out
adc
push
into
mov
nop
push
ret
bnd
jbe
fisubs
aas
lods
out
jnp
lock
icebp
ljmp
jbe
push
int3
sahf
push
adc
mov
xor
out
ret
nop
cmp
sub
and
out
jecxz
cmc
sbb
adc
fcmovnbe
pop
pop
inc
je
sub
or
jmp
mov
loop
jp
leave
sbb
dec
push
mov
or
mov
hlt
dec
sarl
add
pop
push
pusha
cmp
call
je
and
pop
mov
jnp
cmp
mov
jp
fsubrp
mov
mov
dec
cmp
sahf
cmp
jg
adc
repnz
sti
rorl
lahf
rol
int
shll
fists
rcrl
jl,pt
and
mov
cmp
pop
call
push
cmp
push
popf
int3
inc
sbb
daa
push
bound
in
adc
mov
jns
push
adc
push
sub
xchg
jne
cmp
jge
stc
andl
inc
mov
imul
cmp
or
in
push
add
lret
add
testb
mov
push
mov
dec
add
pop
push
adc
clc
dec
nop
inc
adc
in
cmp
bound
fcmovnu
cmpsb
idiv
icebp
mov
shr
rolb
jnp
add
int
rcr
dec
mov
call
mov
lods
fadd
mov
mov
mov
push
inc
call
leave
push
inc
andl
and
inc
in
mov
jno
enter
inc
or
sub
addr16
inc
dec
add
ja
and
in
daa
sbb
ja
jmp
mov
fldcw
mov
or
adc
ds
fdivrl
inc
push
mov
xchg
or
lds
pop
repz
roll
pop
pop
add
outsb
lods
pop
xor
jno
or
ja
call
mov
stc
xor
aam
shl
fsubrl
lcall
test
add
jns
out
aaa
sarb
ja
mov
push
leave
inc
aad
cltd
pop
mov
push
xor
fcoms
cwtl
mov
sbb
sbb
mov
mov
je
pop
ss
clc
mov
out
insb
fwait
dec
test
int
call
daa
push
scas
movsl
popa
cmpsl
push
cmp
push
push
xorb
or
dec
xor
imul
jbe
shrl
xchg
push
out
mov
fiadds
loope
je
push
pop
cmpsb
sub
enter
cmc
mov
sti
aad
adc
mov
jle
adc
ljmp
loope
sti
push
ret
xchg
test
notl
xor
outsl
mov
add
sub
pop
aam
ret
aaa
add
and
and
and
repz
jge
and
fisubl
jp
test
mov
pop
iret
jb
jae
out
icebp
mov
out
mov
test
add
jb
clc
imul
decb
sub
pop
jge
jp
mov
jo
lds
scas
scas
repz
adc
out
xchg
inc
ret
mov
add
pop
aad
sti
or
and
shll
sub
lret
add
scas
in
cmpsl
mov
cmp
in
jle
insl
out
or
xor
outsb
ss
xchg
push
outsb
adc
adcl
ret
iret
dec
rorl
mov
mov
js
dec
push
or
shrl
sub
es
dec
testb
mov
mov
add
out
cmp
push
mov
push
cmc
ja
lret
imul
dec
jecxz
or
test
cmp
mov
nop
and
push
sub
cmp
dec
fldenv
push
and
repnz
leave
push
outsl
imul
inc
cld
or
push
mov
xchg
in
or
imul
insb
cltd
mov
dec
test
out
cld
sub
lods
cmp
repnz
pop
iret
inc
xor
addl
xchg
adc
nop
aas
sarb
xchg
scas
dec
add
mov
fcoms
pop
fdivrp
pop
jl
js,pt
daa
or
stc
insb
cmc
rorb
inc
fistl
repz
insb
ljmp
int3
imul
lcall
out
adc
pop
add
mov
pop
push
mov
ss
push
add
dec
lock
lahf
sbb
ds
adc
ror
push
jno
pop
in
lcall
dec
jmp
idivb
jl
xchg
add
lock
fldcw
jb
sti
dec
xchg
jecxz
int
shlb
test
jne
mov
mov
repnz
fwait
in
stc
roll
or
and
mov
pop
mov
roll
lods
mov
sub
fsubp
arpl
out
add
pusha
push
jl
sti
jno
sub
cmp
out
aam
sbb
sbb
and
pop
fst
pop
mov
inc
addl
pop
scas
pop
arpl
xchg
out
push
mov
pop
lods
jno
jmp
jo
inc
mov
pop
cmp
sub
lods
jbe
rcrl
push
pushf
pop
push
jns
jg
mov
dec
and
cmp
cmp
and
push
aas
lret
dec
js
loope
pop
mov
push
jle
xchg
push
bound
sub
loope
fs
pushf
les
jle
das
sbb
push
orl
lahf
lock
scas
jg
add
ds
mov
or
and
cmp
cmp
xchg
cmc
lods
ss
addr16
test
pop
cmp
and
adc
mov
mov
neg
addb
xchg
mov
xchg
mov
dec
jb
inc
sub
arpl
sub
or
test
mov
xchg
addb
lret
dec
shlb
aas
pop
sbb
push
decb
lock
sbb
inc
pop
inc
xchg
dec
mov
or
loop
and
fnstsw
incl
and
mov
adc
cmp
add
leave
jmp
daa
lcall
cmpsb
ja
ret
jnp,pn
jmp
xchg
scas
cmp
das
jle
out
test
adc
and
inc
mov
notl
jbe
adc
aad
xor
and
rolb
mov
ss
sbb
or
jns
pop
xchg
push
pop
movsb
out
xlat
ds
rcrb
hlt
and
aaa
ds
call
or
dec
sarb
lods
jnp
dec
push
add
lods
jecxz
lods
sbb
and
mov
call
ficompl
xchg
lret
cli
add
or
pushf
rcr
lret
ss
lret
jbe
out
xor
push
cmp
xor
cwtl
sub
cs
lock
cmpsb
aaa
jae
mov
cmpsl
dec
int
repnz
testb
jne
cmp
ret
cmp
mov
stos
sbb
lret
popa
test
leave
jno
sub
and
leave
add
icebp
push
lea
ret
aam
aaa
arpl
hlt
mov
or
and
xchg
jp
sbb
lds
pop
lods
push
sarb
push
test
pop
xor
adc
lahf
pop
pop
pop
jecxz
push
mov
not
mov
pop
into
jecxz
lret
loope
and
mov
jl
stos
adc
call
pop
jmp
fisubs
or
mov
sub
mov
enter
push
in
rcrb
push
xor
fwait
pop
lcall
pop
pop
adc
aas
sub
cmc
xor
cmp
xchg
or
orl
scas
popf
repz
pop
push
mov
lcall
cmp
jg
pop
cmp
and
cwtl
pusha
xor
sarl
hlt
ljmp
mov
fisttpl
js
mov
or
dec
fcmovbe
jno
lahf
pop
push
in
add
cmpsl
leave
lret
push
shll
in
andl
mov
lcall
je
aas
push
scas
popa
shrb
push
mov
ds
das
subl
inc
iret
in
fmull
fstl
jbe
inc
stos
ljmp
pushf
in
int
fists
mov
push
jg
jb
inc
out
push
lods
seta
or
int3
cmc
xchg
hlt
jge
pop
sbb
xlat
outsb
icebp
stc
ror
iret
outsb
mov
xchg
outsb
dec
or
lcall
popf
jb
fwait
clc
inc
rcrl
mov
xchg
xor
sbb
in
dec
mov
adc
popf
mov
idivb
loop
loope
aad
dec
sbb
pop
out
hlt
push
aas
icebp
and
xor
movsb
hlt
adc
scas
imul
movsl
shlb
test
jge
add
jo
lcall
iret
repnz
insl
insb
pop
stc
rorb
and
in
fmuls
fyl2x
dec
sub
mov
pop
pop
xor
jbe
aam
pop
and
scas
leave
gs
xor
xchg
mov
and
sarl
mov
sbb
fmuls
jge
fidivl
imul
xorl
add
fildll
jae
movsl
imul
std
fs
xchg
sbb
jge
cmpsl
pop
icebp
test
mov
sub
pop
xchg
imul
hlt
fiaddl
and
jp
pop
std
xchg
dec
ret
xor
xor
es
jg
loopne
std
pusha
xor
movsb
and
xor
push
add
in
cmp
mov
cli
jecxz
shrb
ret
xchg
inc
movsb
mov
in
jl
addr16
daa
add
lahf
insb
xor
js
pop
fldt
and
inc
pop
inc
insl
clc
pop
push
bnd
or
and
push
inc
cmc
shrb
push
popa
repnz
leave
imul
and
out
cmpsb
shrl
popw
lcall
push
mov
fisubrl
jle
addr16
insl
push
xor
inc
mov
sbb
gs
and
movsl
or
pop
jnp
lock
popl
push
or
mov
pop
pop
jp
inc
mov
hlt
ficoml
rcrb
push
das
dec
inc
iret
call
sti
adc
push
sub
mov
sub
out
test
inc
jecxz
lea
scas
xor
mov
nop
or
repnz
sub
popa
cmpsl
loop
test
pop
xchg
jae
push
cmp
hlt
mov
cmovnp
std
and
push
pop
lcall
roll
lock
inc
insb
sub
and
cmc
push
in
popa
mov
adc
jae
pop
mov
test
push
movsl
lods
mov
sub
daa
xor
fmulp
inc
fisubl
test
mov
stc
lods
ret
add
in
stc
lcall
sbb
test
loopne
ja
lret
pop
adc
insb
popf
sbb
je
enter
sub
jp
dec
fistpll
push
loope
fndisi(8087
mov
sub
mov
faddl
in
aad
lds
pop
test
movsl
insb
push
pushf
inc
mov
lods
adc
cld
and
or
cmp
sub
pop
test
movsl
insb
push
pushf
inc
mov
lods
adc
cld
and
or
cmp
sub
pop
test
movsb
insb
push
pushf
inc
mov
lods
adc
cld
and
cmpsb
pop
cmp
pop
loop
or
xchg
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
xchg
fstp
xor
add
xchg
nop
scas
in
adc
mov
pop
xchg
psrad
das
ret
fsubs
fbstp
filds
call
bound
es
mov
mov
repnz
cmpb
mov
xor
stos
out
xchg
pop
xchg
lods
test
dec
jge
roll
fisttpll
loope
mov
fwait
pop
mov
sarb
ja
inc
xchg
stc
pushf
pop
inc
mov
xchg
sarb
jecxz
daa
xchg
mov
test
out
scas
dec
arpl
pop
add
xchg
jb
mov
dec
xor
ret
mov
inc
and
aaa
cmpsb
sbb
dec
mov
das
mov
pop
lock
test
clc
ret
iret
and
adc
bound
lods
jnp
aaa
loop
mov
outsb
mov
dec
or
das
aaa
and
mov
mov
mov
icebp
mov
xchg
movsl
mov
repz
loop
mov
and
xchg
scas
mov
mov
mov
jecxz
or
mov
ret
call
jb
cwtl
cmpsb
rclb
inc
je
xchg
data16
into
pop
or
ret
mov
inc
fwait
cmp
push
repnz
cmp
pop
negl
lea
dec
sbbl
fbstp
arpl
aaa
sti
or
cli
ds
pop
in
out
cmc
push
insb
mov
cmpsb
je
jne
push
pushl
push
lahf
jb
inc
mov
mov
cmpb
loop
repnz
ret
iret
and
xor
add
adc
inc
mov
mov
cmpb
loop
repnz
ret
iret
and
mov
aaa
xchg
mov
sbb
in
fldl
mov
jo
mov
insl
xorl
jne
divb
fldl
in
shr
adc
jae
and
fsub
pushf
xor
sahf
and
sbb
js
jg
push
or
test
push
xchg
xchg
inc
int
push
mov
jno
pop
push
pop
xchg
outsb
mov
cmpsl
dec
imul
adc
int
lret
lods
and
js
xchg
cmp
test
das
mov
cltd
repnz
jmp
xor
les
insl
ds
jae
ljmp
mov
jecxz
inc
sahf
jg
movsl
and
dec
fidivs
push
pusha
mov
pop
xor
enter
lret
bound
cmp
push
int
call
pusha
pop
out
aas
xchg
int3
mov
das
fwait
mov
bound
js
bswap
xlat
bound
stos
cmp
inc
jl
inc
cmpsl
out
popf
imul
cmp
mov
pop
add
fistps
sub
ja
cltd
loopne
lahf
pusha
inc
shlb
push
pushf
mull
dec
mov
lcall
lcall
pop
lea
adc
adc
ficomps
pusha
sub
push
je
dec
pop
dec
push
fwait
dec
fcomi
or
int
xchg
loop
adc
mov
in
sbb
outsb
mov
jno
cmpsl
mov
push
push
dec
and
shlb
testl
and
sbb
movsb
ja
jne
jne
jg
pop
out
sti
shrb
and
mov
dec
fucomi
mov
aad
mov
pop
inc
nop
mov
test
and
lds
fwait
xchg
std
fdivs
add
shrl
inc
and
sub
xchg
pop
fsubs
inc
filds
sub
scas
js
in
jb
dec
lea
fists
or
push
bound
dec
sbb
pop
filds
les
xchg
hlt
insb
fidivrl
int
push
sub
jbe
sbb
lods
jmp
inc
daa
or
cmp
mull
jb
and
mov
aam
mov
inc
mov
pop
imul
es
dec
xlat
add
stos
loope
adc
and
in
loop
loop
jl
loopne
loopne
movsl
rorl
mov
add
add
in
push
aam
icebp
xor
cmp
pop
mov
jae
mov
hlt
pop
dec
xlat
and
call
and
sub
mov
icebp
adc
pop
subl
push
clc
les
jnp
xor
loop
lods
scas
into
fcoml
and
xor
lea
dec
adc
push
pop
dec
int
add
xor
shrl
adc
push
mov
pop
sub
jbe
mull
xchg
lds
js
mov
mov
dec
popa
inc
insb
ret
call
ret
push
mov
std
adc
std
andb
lods
lret
pop
cmp
adc
xchg
adc
mov
aaa
xchg
jmp
insb
xor
out
fistl
test
push
sahf
aaa
xor
scas
and
orb
int3
shr
dec
sub
adc
shll
sbb
out
inc
mov
fiadds
fidivl
and
push
sub
adc
mov
cmc
jno
xchg
test
daa
and
sbb
mov
out
aad
frstor
stos
inc
shll
or
dec
movsl
jmp
repnz
jge
pop
and
sub
repz
ret
push
lods
jecxz
fldenv
pop
mov
jp
xchg
stos
aam
nop
xor
dec
insb
mov
dec
mov
pop
test
jl
sbb
push
xor
xchg
iret
mov
push
inc
iret
mov
mov
outsb
adc
add
adc
jne
pop
popf
test
scas
push
aaa
orl
cmpsb
lcall
ret
xchg
out
add
in
stos
sti
and
shll
outsb
mov
insl
mov
icebp
bound
nop
mov
mov
mov
jg
insl
rcll
ficomps
test
ja
add
jno
jecxz
jo
inc
int3
sbb
mov
shrb
je
xor
sub
jmp
mov
sbb
cmpsb
divb
cmpsb
lea
sbb
cmp
shlb
mov
popa
inc
or
push
lahf
mov
xchg
inc
xchg
xchg
roll
popf
in
and
sbb
jmp
sub
es
sti
pushf
mov
js
mov
cmp
mov
js
in
pop
aad
and
loopne
adc
or
xlat
push
and
and
loope
jno
out
xchg
cwtl
cmc
mov
gs
mov
loope
jnp
into
xor
ds
scas
dec
push
inc
aas
test
adc
inc
inc
dec
sub
mov
push
cmp
pop
cmp
xchg
in
in
shr
add
out
jg
loope
fbld
mov
int
fdivr
loop
add
dec
inc
pop
pusha
mov
ds
cmc
push
mov
arpl
lea
dec
cmp
lods
mov
and
repnz
mov
imul
shlb
daa
inc
mov
je
int
fldcw
fildl
xchg
bound
cmc
push
cmp
stos
ss
aad
fwait
popf
in
out
in
cmpsl
pusha
cld
mov
jp
lret
pushf
sub
pushf
out
sbb
mov
sbbl
jp
imul
es
pop
mov
vpmulhuw
sahf
into
lds
inc
push
push
loope
dec
adc
xchg
add
es
add
cmp
jns
outsl
cmp
jb
or
lock
dec
fnstsw
inc
lock
push
sbb
xor
out
pusha
add
add
cmpsl
ds
jbe
lds
xor
xor
popa
pusha
test
rclb
mov
les
sub
in
fists
push
test
mov
lahf
inc
push
xor
add
jo
jo
dec
adc
mov
mov
pop
add
cmp
movsl
fdivrl
pop
in
and
sub
cli
call
test
inc
sub
push
jae
scas
cmpsb
xchg
mov
mov
jns
inc
orb
push
or
sahf
jge
mov
in
incb
int
xlat
cmp
sahf
jo
mov
adc
std
jecxz
lock
decl
inc
cmp
movsl
out
mov
not
rcrb
js
lcall
jle
jbe
add
cmpsb
mov
add
or
mov
pop
clc
xchg
mov
cli
dec
jns
fstps
mov
pop
xchg
cwtl
sbbb
cmp
jne
je
cmpsl
xchg
fwait
imul
add
pusha
fcmovne
mov
mov
mov
pop
lock
push
and
dec
int
add
cmp
imul
in
jbe
dec
push
xchg
jne
lock
xor
mov
stos
mov
sub
or
push
inc
bound
fwait
dec
jle
add
xor
jns
dec
jle
je
cmp
cmpsb
xor
jnp
dec
dec
insl
je
sbb
push
fcoml
cmp
icebp
call
cmc
pop
cltd
sahf
push
inc
sbb
xor
shrb
gs
outsb
inc
lods
nop
mov
add
ljmp
and
in
popf
mov
dec
sub
dec
sub
push
in
lods
scas
loope
xchg
enter
mov
adc
fwait
cmp
sub
scas
fldz
fcomps
ja
mov
nop
stos
mov
mov
jge
insb
push
push
test
xchg
mov
sarl
push
ja
adc
data16
jbe
pop
sub
fists
loopne
sti
out
data16
xchg
test
xlat
add
adc
mul
lea
xchg
test
pop
scas
cmp
inc
lods
jl
xchg
jns
sahf
inc
mov
nop
cwtl
mov
adc
nop
daa
push
adc
lods
lret
movsb
fcmovb
mov
xchg
dec
push
cli
sbb
leave
xorl
jg
or
ja
mov
jae
mov
lret
iret
lret
movsl
mov
cmp
sbb
in
adc
inc
imul
push
pushl
fldcw
adc
inc
arpl
push
dec
rorl
lahf
sarl
sbb
cwtl
sub
mov
mov
aam
int3
dec
xor
ja
inc
into
xor
mov
loopne
jecxz
or
pop
push
bound
cmp
mov
push
xchg
dec
mov
xchg
fmull
lret
out
fs
sub
xor
scas
rorb
lret
inc
orb
dec
iret
adc
ret
inc
iret
pushf
sbbb
fmul
mov
and
xor
outsb
repz
dec
ret
call
dec
stos
jae
cmp
add
mov
pop
sub
lret
sarl
bnd
insl
jne
insb
shll
and
dec
push
jno
dec
mov
mov
outsb
xchg
cmp
popf
int
gs
ret
push
cli
test
xor
cmpsb
cs
push
aas
sub
jae
insb
jl
sarb
cmp
xor
cmp
movsl
shrl
or
les
mov
lret
jae
shll
xor
add
rcll
int
lret
xchg
sub
xor
outsl
in
dec
scas
addl
mov
sar
fs
sbb
into
rclb
popa
test
jne
in
mov
pusha
outsb
pop
and
and
cmp
sub
in
stc
cli
cld
push
dec
shll
iret
pop
adc
lret
xchg
in
xor
lods
sub
mov
mov
and
or
in
loop
pop
adc
pop
jmp
inc
das
push
inc
int
scas
js
inc
push
xor
dec
add
lcall
jbe
jmp
orb
sub
out
mov
xor
mov
shrl
mov
mov
in
in
bound
test
test
dec
or
les
jle
pop
pop
pop
stc
fistl
into
insb
imul
loope
lret
cmc
xor
loop
popa
push
sbb
inc
test
ds
xor
decl
mov
cmp
push
mov
dec
lret
cwtl
dec
cmp
inc
mov
jnp
mov
mov
push
movsb
adc
lret
fldl
cwtl
push
pop
sbb
jecxz
mov
sarl
outsl
loop
movsl
push
pop
cmp
sub
or
lea
pushf
jns
in
sub
jno
add
clc
mov
sti
pop
pusha
mov
in
pop
aad
rorb
pop
xor
in
mov
or
mov
inc
adcb
scas
inc
jns
mov
add
lods
pop
mov
or
jg
sbb
fldcw
insb
cwtl
dec
dec
addb
aad
mov
in
stc
lods
jmp
push
rol
dec
bnd
mov
pop
aad
sbb
out
xchg
lret
xchg
out
sub
sub
in
jmp
pusha
dec
jecxz
dec
leave
movsl
xchg
jo
mov
data16
leave
fsubl
icebp
sbb
neg
fildll
jge
lock
mov
lret
jp
pop
pop
inc
sbb
lahf
push
pop
mov
pop
and
adc
imul
bound
adc
scas
imul
movsb
mov
xchg
jg
je
icebp
ss
les
es
and
xchg
mov
jb
ret
add
pusha
pop
shll
mov
adc
add
loop
add
mov
push
mov
adc
in
push
lcall
sbb
mov
orb
fsubl
xchg
jmp
je
dec
dec
pop
and
stc
lahf
xor
xor
and
decl
retw
aam
icebp
sub
push
pop
cli
push
adc
dec
jp
sbb
add
push
fwait
mov
mov
xor
leave
mov
jl
sarl
jg
jo
mov
add
xchg
ja,pn
pop
les
jns
add
cmp
lret
mov
xor
sahf
sub
cltd
orl
push
rcrb
into
std
xor
mov
cmp
loope
setno
sub
fwait
inc
mov
mov
push
cltd
jo
ret
aad
or
test
aad
ljmp
jne
int3
adc
push
dec
mov
dec
dec
push
push
push
aam
mov
cltd
aad
dec
xor
sahf
push
xchg
aam
xchg
xor
je
fs
xor
ljmp
and
mov
mov
shr
lret
adc
adc
fld
fwait
cld
pop
cmp
push
mov
pop
popa
cmpsl
xchg
inc
xchg
scas
cli
test
xor
pop
add
fcmovne
pop
mov
and
in
lea
test
fstl
sbb
pop
dec
dec
adc
fistps
mov
or
add
jno
xor
mov
push
sub
xchg
clc
or
outsb
cmp
cld
mov
mov
xchg
sbb
push
ja
stc
dec
dec
test
sbb
add
mov
mov
jge
sub
addr16
cmpsl
pop
pop
jno
lods
and
cmp
inc
test
mov
dec
inc
call
xor
popf
sub
adc
and
sub
dec
adc
cmc
add
mov
pusha
xchg
ss
adc
pop
popa
jo
ret
mov
mov
inc
sbbb
cmp
jae
mov
cmp
and
cwtl
sbbb
mov
xchg
aam
lahf
adc
insl
xchg
dec
lods
mov
dec
std
jl
sti
rorl
xchg
int3
jns
fnstenv
and
xchg
into
lea
or
sub
rorl
movsl
inc
add
fsts
rcrl
push
lcall
xchg
push
call
repnz
cmp
jle
cli
xchg
pop
mov
mov
jg
inc
jne
adc
mov
xorl
lods
sbb
fmull
push
pop
out
push
inc
rolb
cmp
dec
sub
mov
sarl
xlat
sub
rcl
mov
mov
xor
les
cmp
scas
les
pop
xchg
add
dec
or
in
xchg
inc
imul
scas
scas
int
test
into
pop
popf
push
mov
lds
call
imul
in
and
mov
and
pop
sbb
cwtl
push
xchg
shll
xchg
loope
dec
pop
arpl
mov
insl
add
mov
push
gs
sub
test
out
sbb
dec
cmp
pop
cltd
push
sub
arpl
loop
sub
es
jbe
cmp
mov
in
inc
dec
test
fstps
sahf
mov
clc
inc
mov
je
insb
cli
sbb
imul
lods
xorl
dec
in
jnp
push
test
mov
inc
cmpsl
inc
scas
rcrb
shll
test
mov
xlat
dec
fiadds
jne
cld
adc
das
jl
adc
lret
push
xorl
dec
das
icebp
test
fstl
fistpl
test
mov
mov
roll
enter
loopne
mov
les
mov
sbbb
push
sbb
cmp
mulb
inc
rcll
mov
mov
lods
aad
mov
inc
lea
data16
in
faddl
push
mov
fidivrl
rclb
jne
mov
cmp
cmp
cmp
repnz
rorl
or
xor
es
push
fucomi
sbb
shll
jg
filds
mov
cltd
add
pop
js
add
dec
mov
fidivrl
push
and
mov
sub
pop
int
xchg
mov
insb
cli
adc
mov
out
xchg
xchg
jge
cmp
ret
xchg
insl
jp
pop
in
sub
mov
mov
and
mov
hlt
mov
jle
inc
or
hlt
js
pop
xor
push
fldt
outsl
add
out
ret
push
jecxz
cmpsl
jb
aam
addr16
inc
pop
sarl
and
dec
sbb
adc
aam
push
pop
ss
addb
sbb
lods
test
dec
and
xchg
add
push
aas
outsl
adc
mov
mov
sbb
mov
dec
int
cwtl
add
icebp
xchg
lock
xor
stc
and
jnp
dec
arpl
outsl
mov
rcr
adc
popa
cmp
xchg
imul
cld
in
cli
out
or
mov
or
outsb
stos
addr16
pop
insl
and
stos
or
mov
xchg
mov
jb
push
and
jl
imul
mov
mov
rcll
xchg
pop
insl
test
int
test
push
test
dec
add
or
ret
cld
mov
out
inc
inc
data16
xchg
das
scas
test
cwtl
pusha
jne
pop
cs
mov
aad
cmp
data16
mov
push
inc
lock
nop
jno
call
jmp
fistl
insl
push
sbb
push
outsb
emms
sbb
fsubs
pop
ret
jno
sti
mov
pop
cmp
add
xlat
mov
lret
and
inc
negb
fs
add
cmpsl
mov
inc
ret
in
jo
repnz
cmc
push
pop
cmpl
add
outsl
dec
flds
push
add
sbb
mov
testl
mov
and
jne
hlt
frstor
ss
jmp
push
out
cmp
and
xchg
je
movsl
push
xchg
cmp
adc
xor
repnz
popa
cmpsb
inc
xchg
pop
push
jo
fucomp
repnz
mov
dec
shlb
add
and
les
adc
inc
in
jno
shrl
xchg
je
shl
mov
xchg
incb
subl
jge
mov
ficoms
sahf
xor
inc
lret
xchg
mov
cld
xchg
lahf
lock
lea
fsub
repnz
sub
ret
mov
les
xor
cmp
pop
push
lods
xor
dec
rclb
scas
adc
movsb
mov
adc
adc
daa
imul
mov
inc
test
cmp
ror
outsb
popa
mov
stc
inc
push
adc
jns
loop
add
subl
in
jne
outsl
pusha
repz
add
push
decl
and
push
js
pop
adc
das
dec
icebp
rcl
rclb
test
pop
rcrl
aaa
and
lret
rcr
mov
pop
sbb
stc
or
jno
cmpsb
icebp
push
sub
rcl
divl
adcb
sbb
js
push
adc
sub
in
pop
add
test
push
cmp
jne
mov
jo
xchg
cmp
cmpsb
stos
push
fisttps
imul
rcrl
fsts
jae
pop
adc
rorl
stos
in
push
mov
cmp
repz
insl
jmp
outsb
push
popa
push
mov
cmc
push
je
popa
cmp
xor
addr16
repnz
popa
and
icebp
pop
cmc
mov
fiadds
hlt
lock
in
sub
ror
mov
cmp
or
mov
cld
and
out
es
pop
push
jge
negb
jp
and
and
call
or
into
lods
in
or
sub
adc
cmc
inc
mov
push
cmc
loop
mov
add
jecxz
dec
adc
add
cmp
insl
ror
aaa
fildll
and
int
jg
ret
fs
or
out
pusha
cld
lahf
jecxz
pop
shl
imul
pop
xor
insl
mov
rcll
cltd
ret
mov
testl
std
cmp
fwait
cld
std
addr16
cs
jnp
and
dec
cmp
xor
mov
test
mov
and
push
scas
adc
pop
cltd
push
mov
mov
jbe
or
popf
mov
lods
push
adc
hlt
dec
sbb
fbstp
mov
inc
sub
jns
das
and
mov
loop
aad
inc
sub
into
or
sub
sub
mov
lcall
push
mov
adc
cmpsb
out
xor
stos
mov
and
add
stos
int
js
cli
or
inc
jmp
outsb
sub
in
dec
dec
fdivl
out
shrb
test
xchg
inc
add
mov
addl
lods
rorb
hlt
movsb
data16
mov
cmp
xor
pop
test
mov
jo
cmpsb
sbb
sbb
mov
adc
repz
and
insb
mull
cmpsb
cli
xchg
cmc
sbb
aad
push
jg
aaa
and
dec
iret
popa
lock
sahf
fldcw
xlat
xchg
mulb
imul
fwait
je
inc
inc
jp
adc
or
xchg
xchg
adc
inc
in
pop
mov
loope
ficoml
push
push
mov
clc
cmp
imul
cld
lods
shlb
jne
sub
inc
xchg
add
dec
mov
xchg
jge,pn
addl
out
stos
cmp
sarl
pushf
das
fnstcw
or
sbb
and
push
jp
stc
das
push
and
sbb
jo
call
adc
inc
mov
mov
cmpb
loop
repnz
ret
iret
and
xor
add
adc
inc
mov
mov
cmpb
loop
repnz
ret
iret
and
jp
jp
adc
inc
mov
mov
cmpb
loop
repnz
loop
sar
and
xor
add
adc
ret
mov
mov
in
push
or
adc
xchg
pop
in
aam
stos
pop
aam
lcall
shlb
jne
push
loop
adc
xchg
push
in
hlt
jb
bound
movb
je
inc
loop
adc
xchg
push
in
hlt
jb
aam
and
pop
shll
mov
and
inc
xlat
push
icebp
adc
sbb
cltd
rcll
pop
enter
pop
pop
in
rolb
jg
mov
movsb
out
scas
sbb
jns
dec
xchg
pop
fs
lret
aas
sti
daa
add
cld
sbb
ljmp
push
or
push
cmp
pop
mov
xchg
and
xor
jb
dec
dec
xchg
leave
and
inc
xchg
mov
hlt
mov
or
fcoms
xchg
sub
stos
xchg
repnz
push
in
fs
pop
jnp
cltd
jmp
xchg
arpl
sbb
and
aaa
shlb
mov
std
cmp
stos
stos
cmpl
jmp
xor
out
out
jne
and
inc
mov
xor
hlt
jb
aam
and
xor
add
adc
fs
inc
loop
push
movsb
imul
lds
mov
and
rcll
fs
stos
xor
enter
int3
inc
notl
cs
xchg
cli
testl
inc
mov
xchg
loop
and
add
out
loope
in
push
inc
hlt
jb
aam
and
xor
add
adc
fs
inc
loop
adc
xchg
push
in
hlt
jb
aam
and
xor
add
adc
fs
inc
loop
adc
push
mov
fidivrl
pop
mov
xchg
inc
ret
lret
clc
std
div
mov
cmpsl
sub
aam
pop
and
repnz
sub
xchg
pusha
gs
dec
add
imull
dec
dec
adc
mov
inc
jbe
add
sbb
mov
push
and
jp
or
fiaddl
cmp
cmpsb
pop
bound
inc
sbb
sbb
shufps
loop
xor
mov
or
inc
mov
out
movsb
in
dec
leave
data16
testl
cltd
xchg
fwait
clc
add
pop
ja
lock
pop
stc
pop
jne
call
aas
sub
pop
dec
xchg
nop
fidivl
adc
cmpb
jecxz
icebp
xor
dec
and
or
jne
dec
mov
mov
fisubrl
mov
movsb
and
push
mov
mov
out
dec
jle
jbe
rorb
mov
push
hlt
das
xor
mov
jne
cmpl
mov
and
xchg
pushf
outsl
fmull
mov
out
pop
mov
push
inc
cmp
cmc
jl
mov
push
sub
insl
pop
mov
xchg
fdivrs
in
popa
in
enter
and
data16
xchg
iret
push
ret
aas
push
add
xchg
lret
test
ljmp
out
sbb
lock
bound
push
outsb
repnz
pop
add
push
idivb
push
dec
mov
cli
outsl
or
mov
jae
cmp
xadd
or
xor
push
fmull
aad
mov
xchg
xchg
fucomip
mov
xchg
mov
adc
pop
xchg
push
stc
xchg
lods
cmp
push
push
add
push
les
or
lock
sbb
cmp
inc
push
loopne
mov
das
xchg
les
xchg
add
dec
in
add
push
push
pop
shlb
mov
je
mov
pop
pop
and
and
dec
int3
jne
pusha
xchg
adc
pop
mov
out
mov
je
out
loope,pt
and
int3
inc
push
dec
pop
or
repz
jg
sub
hlt
or
iret
data16
stos
sbbb
push
jecxz
lods
daa
mov
xchg
mov
sub
call
leave
idivb
outsb
or
push
jecxz
cltd
xor
dec
test
mov
lods
dec
les
and
int3
xor
rcr
cmpsb
mov
rolb
icebp
jo
aaa
jp
dec
mov
and
outsl
insl
mov
push
pop
lcall
cmp
mov
imul
mov
xor
jo
mov
mov
and
sbb
repz
hlt
fidivl
lods
mov
pop
rorb
inc
les
pop
jo
xchg
ja
lods
and
lock
popa
cmp
or
jg
sbb
fmuls
or
sbb
loope
outsw
pusha
shrl
sub
add
pop
fwait
aad
bound
push
mov
push
ficomps
pop
dec
sahf
gs
mov
pushf
jg
cmpsb
addr16
pop
push
mov
test
fists
in
flds
aaa
sub
jp
push
mov
inc
cmp
out
dec
fcom
cli
sub
mov
add
in
arpl
sub
jns
jb
xchg
cmp
js
pusha
pop
jo
int
fdivs
fsubrs
in
pop
jns
push
pop
push
sbb
jnp
getsec
xorb
pop
dec
sub
scas
push
mov
int3
or
sarl
imul
lods
inc
scas
sub
mov
mov
xchg
jle
fsubl
test
sarl
outsl
mov
mov
xchg
out
push
jp
lret
fucompp
xchg
das
cmc
mov
lods
stos
mov
aas
cmpsb
jne
out
add
std
xchg
xor
or
pop
outsb
jne
mov
aas
out
push
or
incl
pop
inc
push
data16
fists
or
cmpsl
push
xchg
cmp
test
xor
mov
xlat
fwait
loop
scas
inc
leave
and
arpl
mov
push
in
pop
leave
insl
mov
aam
into
outsl
daa
mov
adc
arpl
orl
test
test
xchg
pop
sbb
sub
insb
push
test
lcall
test
and
push
dec
imul
dec
orb
ret
sub
repnz
ret
inc
test
xchg
repz
or
loopne
rcr
rcr
adc
xchg
scas
repz
mov
stos
pop
mov
sbb
mov
pop
rcl
cmp
insb
or
mov
jg
lds
push
sub
xchg
sub
ficoms
xor
in
dec
xor
adc
dec
test
or
ja
push
lret
pop
pop
lcall
mov
enter
cmp
imull
orb
jno
in
push
xchg
add
pusha
or
xchg
scas
fimull
out
rcrb
adc
stos
mov
in
lcall
ror
scas
mov
punpckhdq
cmp
adc
jbe
push
mov
fs
cmp
popa
sub
loopne
sub
push
out
les
cltd
add
and
ss
and
add
bts
imull
dec
cmpsl
pop
outsb
popa
int
push
push
daa
flds
push
jmp
ret
addl
adc
filds
and
mov
flds
insb
lea
jmp
and
scas
imul
data16
cmp
push
xor
popf
hlt
sbb
es
test
or
fnstsw
dec
add
add
dec
push
sub
inc
fmul
stos
icebp
mov
out
aad
icebp
stos
mov
jb
add
mov
insb
jne
sbb
cmpsl
mov
nop
andb
pop
mov
mov
xchg
jl
add
aad
cmp
cmp
xlat
jnp
add
pop
add
cmp
dec
inc
sub
pushw
gs
sbb
push
data16
outsb
popf
xchg
add
in
xlat
std
pusha
and
xor
lods
pushl
icebp
push
loop
fisttpll
arpl
outsl
cmp
and
mov
cmp
fisubrl
mov
pop
lahf
push
jmp
xor
incl
and
mul
adc
dec
mov
mov
push
mov
leave
adc
iret
lods
mov
sbb
fmull
mov
adc
cs
std
neg
rclb
or
push
inc
push
cmp
push
fnsave
sti
sbb
and
and
xlat
rol
aam
and
clc
test
mov
out
jp
jnp
jle
ret
mov
pop
cmpsl
int
pop
xlat
mov
jne
or
dec
shrb
div
repz
in
mov
sub
mov
out
jecxz
ret
lret
and
cmp
add
orb
jne
add
and
scas
dec
decl
mov
fisubrl
add
push
leave
cmpsl
jnp
add
mov
jb
icebp
dec
ds
xor
fmul
push
add
mov
loope
orl
ja
dec
mov
add
test
cmp
xchg
lret
test
jns
ljmp
inc
out
fimull
dec
xchg
pop
hlt
dec
pushf
pusha
mov
pop
xlat
cmc
aas
aas
sbb
into
xor
lret
enter
lcall
repz
mov
adcl
and
insb
jnp
mov
sbb
add
sti
cmp
js
jmp
adc
data16
dec
int3
addr16
lods
imul
dec
js
cmp
jge
ror
rorl
lods
lods
cmp
mov
push
or
add
jecxz
pop
lods
mov
icebp
rcrb
hlt
cmpl
push
adc
std
gs
xchg
ror
or
sub
pop
aaa
sbb
hlt
mov
sbbl
bound
sub
and
fsubl
sub
cmpsb
inc
js
push
lea
mov
test
outsl
lods
mov
sub
in
dec
call
insb
ret
lods
or
pop
imul
aas
push
xchg
push
aam
mov
testl
pushf
stos
add
pop
xor
ljmp
js
jns
int
fwait
jb
mov
call
pop
add
sar
fisubs
sub
loop
clc
push
imul
xchg
mov
xchg
sbbl
xrelease
adc
sub
incl
ret
xchg
push
test
pop
or
dec
movsl
and
jo
pusha
pop
or
jbe
pop
lret
or
push
jge
xor
sub
push
pop
add
fucomp
lods
xchg
fcoml
mov
jmp
jbe
and
js
out
mov
or
clc
pop
push
shl
jne
jl
in
cmpsl
add
repnz
xchg
cmc
inc
lret
jne
in
dec
dec
pop
es
inc
jmp
ljmp
cmp
icebp
loope
push
xchg
ffree
adc
adc
adc
out
jle
xchg
mov
jle
pop
popa
xchg
shlb
sbb
pushf
sbb
cmp
addr16
push
aaa
add
mov
dec
jae
sti
jno
fwait
fs
repz
pop
js
adc
fcomp
pop
mov
imul
push
stc
sbb
xor
sbb
inc
and
inc
ja
push
sub
sar
push
insl
inc
xchg
inc
push
sahf
pop
imul
fstps
xor
jle
mov
fwait
push
pushf
roll
bnd
mov
dec
daa
jnp
pop
loope
inc
mov
xlat
cmpsl
cs
sarl
adc
jecxz
jns
cld
bound
out
inc
dec
jb
mov
xchg
dec
xchg
dec
popf
stos
jo
iret
test
fdivrs
sub
in
sbb
add
ljmp
mov
inc
pop
call
push
inc
jae,pn
jp
popa
mov
jg
jbe
sbb
adc
push
pop
test
ds
lods
movsl
lret
jge
cmpsb
mov
adc
insb
stos
sub
mov
lahf
dec
and
xchg
stos
mov
xor
and
orl
jp
fs
movsb
movsb
pushf
cmp
or
lret
es
loopne
out
sti
addb
mov
jne
xchg
iret
inc
sbb
mov
inc
mov
add
pop
ds
xchg
push
or
pop
cmp
sbb
dec
dec
mov
jge
inc
stos
aam
inc
in
adc
in
aas
das
and
cmp
fisubrs
lods
mov
sbb
pushf
mov
mov
or
ret
hlt
xor
sbb
fistl
pop
jcxz
add
repnz
ss
pop
xchg
jl
jecxz
push
testl
dec
sbb
rolb
mov
and
ret
jle
adc
add
inc
inc
jge
jnp
mov
jo
xchg
push
loopne
adc
mov
jnp
movsl
or
fs
pop
push
je
adc
out
push
jg,pt
or
mov
jne
xor
ljmp
xchg
adc
dec
iret
bound
fisubs
xor
inc
cmpsl
and
fisttps
test
in
gs
stos
push
sbbl
daa
mov
dec
jge
pusha
xor
call
scas
mov
xor
ret
add
stc
imul
lods
les
gs
adc
out
pop
inc
push
repnz
addr16
daa
sbb
repnz
mov
jne
sub
cmp
adc
ss
test
xorb
fwait
sub
mov
pop
fxch
into
js
into
aam
mov
and
stc
and
dec
jae
xlat
bound
dec
lahf
dec
add
loopne
pop
popf
push
popa
cwtl
or
mov
inc
bound
xor
pop
call
into
pop
and
jb
xchg
fdivl
roll
cmp
lret
popf
fstl
xchg
mov
jg
std
mov
lret
fsqrt
mov
xor
mov
mov
stc
mov
inc
fidivl
xchg
and
popa
lahf
cltd
dec
xchg
mov
mov
movaps
rorl
dec
test
jle
pop
or
sub
mov
sbb
arpl
mov
adc
sub
inc
add
loop
or
rorb
dec
aam
leave
and
adc
push
and
dec
pop
cmp
fstpt
mov
sbb
ret
aad
jle
lods
and
into
inc
pusha
out
sub
xor
insl
xchg
aaa
adc
sbb
mov
fistpl
shrl
repz
movb
ja
sub
inc
pop
cld
jmp
dec
inc
xchg
pop
loop
mov
add
loope
imul
sub
mov
pop
int
fld
add
scas
cmp
int3
movsl
cld
pop
in
pop
sub
lcall
loopne
xlat
test
mov
push
clc
xor
lds
mov
mov
mov
cmpl
push
inc
icebp
pop
cltd
jmp
xlat
pop
pop
rsqrtps
fsubl
mov
jecxz
popa
mov
mov
xor
dec
ss
popa
jmp
xchg
jns
icebp
push
add
mov
out
cmp
fwait
push
xlat
mov
lds
pop
add
sub
mov
and
mov
std
xchg
mov
enter
cli
rol
fisubl
adcb
jo
test
jl
xchg
mov
mov
lret
sbb
stos
es
imul
std
outsb
cmp
mov
mov
xor
pop
push
pop
in
inc
les
push
jno
frstor
aas
and
push
push
or
and
and
sub
or
cld
dec
mov
popf
dec
xchg
push
lock
movsl
dec
aaa
test
sub
ss
add
mov
and
cmp
push
aad
sahf
repz
push
push
arpl
mov
inc
mov
enter
notl
mov
sti
mov
sub
jbe
cli
push
add
ret
scas
bound
sub
jp
lahf
jmp
mov
lea
adc
mov
call
adc
cmpl
ja
mov
cmc
js
pop
adc
std
loopne
or
loop
std
adcb
in
subb
mov
adc
pop
push
add
nop
add
ja
pop
fistpll
in
push
lahf
cmpsl
loope
in
cld
mov
inc
or
fildll
bound
xor
insb
stos
sub
rolb
je
add
xlat
out
and
idiv
lret
mov
xchg
xchg
add
call
imul
pop
xor
jp
jo
xchg
loop
pop
pop
jmp
xor
mov
cs
dec
push
cmp
mov
xchg
ret
or
adcb
sbb
push
movsb
pusha
dec
and
pop
xchg
jb
insb
aaa
sub
lcall
arpl
jmp
jb
fucom
stos
fs
lea
pop
sbb
lea
divl
dec
cs
loope
xor
psubw
mov
dec
cmp
jecxz
mov
mov
cmp
and
push
verw
adc
stos
fstpl
cs
push
insl
pop
jnp
in
gs
push
ss
bnd
rcl
xchg
test
add
push
push
mov
rolb
out
ja
mov
add
cmp
and
faddp
fwait
push
jb
mov
imul
in
sub
sysenter
cmp
icebp
mov
repnz
hlt
out
adc
enter
imul
mov
cmp
pop
dec
ret
lock
add
lds
adc
mov
or
ljmp
push
insb
sub
mov
xchg
in
push
and
dec
in
nop
cltd
ds
mov
loop
incb
xor
cmc
xor
xchg
ret
mov
dec
stos
dec
cmp
fcomip
rcrl
mov
addl
or
push
call
dec
rorb
arpl
mov
mov
stc
inc
cmpsl
and
xor
outsl
popa
loope
dec
xchg
rorb
jmp
pop
lods
push
push
adc
gs
enter
pop
js
into
ss
mov
lock
mov
test
es
sbb
push
call
imul
jle
sbb
mov
mov
adc
mov
loopnew
mov
mov
xchg
daa
jb
jl
mov
dec
mov
sub
push
cmpb
es
push
shlb
arpl
mov
arpl
stos
stos
aaa
mov
xor
popf
pushf
cmp
sti
push
push
fwait
dec
push
add
dec
or
movsb
push
cwtl
nop
inc
fistpll
mov
adc
pop
loope
mov
pop
in
or
sbb
mov
mov
lock
inc
andb
xchg
sbb
jo
cmp
mov
pop
lret
mov
xor
mov
dec
lds
inc
in
cmp
in
imul
incl
cmp
stos
mov
mov
xchg
jno
mov
shlb
pop
push
iret
jp
xchg
xor
dec
andl
in
cmp
sbb
mov
push
sti
jge
sub
xlat
loope
loopne
rol
inc
insl
aam
in
jl
test
into
nop
push
push
out
les
test
adc
or
xor
xchg
ss
sub
or
loope
adc
sbb
stos
out
pop
inc
mov
iret
inc
mov
aam
cli
leave
fsub
incb
imul
outsb
dec
loope
sub
stos
pop
hlt
cmc
jge
cld
int
sahf
xchg
int
data16
pop
add
pop
lods
push
in
dec
lretw
movsb
sub
jge
xchg
or
outsl
fisttpl
mov
xchg
sbb
mov
sub
push
lds
popa
push
or
mov
ss
push
ret
cmp
pop
push
xchg
gs
test
sub
aad
lock
lret
push
out
mov
add
cmp
aam
fimuls
xlat
mov
mov
mov
insl
cmp
push
mov
mov
or
sub
push
jbe
clc
aas
mov
jbe
shlb
lds
xor
add
jae
xlat
stc
aas
test
roll
adcl
std
dec
jl
lock
and
inc
cmc
lds
pop
push
mov
pop
mov
inc
mov
cmp
inc
int
sti
stc
jnp
bound
xor
push
dec
sbb
shrl
jb
fistps
loope
push
xor
pop
fxch
and
addr16
out
jae
push
mov
fwait
add
xor
subb
mov
dec
inc
ret
mov
jbe
movsb
sub
mov
shrb
xor
ja
mov
lret
js
sbb
push
lcall
ret
ljmp
rorb
mov
push
mov
mov
fsubr
loop
cmp
decl
scas
sti
and
shl
mov
sbbl
data16
outsb
or
ds
mov
add
scas
mov
lds
and
jg
or
lahf
aas
xchg
gs
push
jnp
enter
pushf
shl
ficomps
jne
addr16
sbb
out
and
inc
ja
out
jl
and
xchg
xchg
ss
cmc
notb
or
fs
movsl
xchg
iret
inc
fildl
sub
and
fistl
sbb
cmp
js,pn
mov
lods
and
test
mov
fnsave
push
ret
add
dec
adc
push
adc
test
mov
rcrl
push
fdivrl
cmc
js
test
test
lods
int
jmp
movsl
fidivrs
mov
mov
mov
sbb
xor
mov
aam
inc
push
aas
gs
out
push
jne
pushf
jno
popf
push
xchg
cmp
or
leave
cmc
xchg
pop
inc
mov
inc
in
fabs
call
cmp
cmpsb
xchg
pop
cmpsb
sbbl
push
pop
or
dec
jmp
fsubs
cmp
iret
cmc
xchg
pop
jae
in
dec
pop
add
pop
mov
cmp
jns
inc
insl
xor
ljmp
bound
pop
shll
push
iret
ret
mov
mov
ds
fnstenv
paddw
aam
in
flds
ljmp
into
push
fucom
and
sbb
iret
insl
sbb
lock
sub
xor
fstpt
leave
push
cmp
sub
shlb
sub
fstl
jnp
xor
imul
dec
adc
jo
imul
ss
js
aas
mov
jns
rcll
fwait
insb
mov
pop
jo
pushf
insb
cmp
jns
adcl
pop
dec
fcompl
mov
sub
and
cmp
push
xor
fcmovnu
sbb
pop
cli
call
sub
fwait
das
das
fistpl
inc
cmp
cltd
dec
xlat
rolb
jmp
pushf
or
int3
cltd
xchg
jbe
xchg
sub
sbb
inc
xorb
lds
repz
mov
cli
fwait
sbb
pop
lods
mov
data16
xor
mov
test
xchg
push
in
hlt
jb
aam
and
xor
add
adc
fs
inc
loop
adc
xchg
push
in
hlt
jb
aam
and
xor
add
adc
fs
inc
loop
adc
xchg
push
in
hlt
jb
aam
and
xor
add
adc
fs
inc
loop
adc
xchg
push
in
hlt
jb
bound
and
sahf
sbb
arpl
mov
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
out
mull
aaa
xlat
repz
cmp
adc
addr16
ja
inc
mov
daa
aad
testl
pop
mull
aaa
xlat
inc
cmpsl
push
mov
xchg
xchg
addr16
pop
cmpsl
inc
mov
aaa
out
notl
push
out
idivl
das
xlat
pop
cmpsl
dec
mov
xchg
sahf
iret
mov
clc
and
push
bound
pop
outsb
out
test
test
xchg
push
push
cmpsb
pop
mov
add
insb
jg
adc
ror
loopne
mov
xchg
mov
insl
and
dec
loop
loop
add
dec
ficoml
push
or
mov
jno
test
shll
mov
rcrb
cmp
out
negl
out
or
xlat
mov
or
or
xchg
sbb
dec
xlat
enter
lcall
xlat
sub
xchg
xchg
fwait
push
and
aaa
xlat
lret
sbb
out
out
jno
or
enter
push
cmp
sbb
push
out
xorb
lock
notl
into
out
mull
aaa
xlat
push
cmpsl
inc
mov
xchg
sahf
addr16
ja
inc
scas
push
fbld
iret
aaa
std
pop
idivl
mov
inc
scas
inc
mov
sub
ja
xchg
sti
add
das
rcll
movl
push
push
movl
addr16
les
repnz
inc
mov
inc
bound
pop
mov
cmpsl
push
mov
xchg
xchg
ja
inc
mov
daa
xlat
aaa
out
notl
pop
out
mull
aaa
xlat
inc
cmpsl
push
mov
xchg
xchg
ja
inc
mov
daa
xlat
aaa
out
notl
pop
out
mov
sub
inc
add
mov
movsb
sub
add
pop
jge
stos
aad
in
inc
inc
imul
hlt
sti
test
jae
cli
jl
andb
jp
lods
mov
xchg
lods
sbb
cmp
mov
sub
sbb
inc
push
sbb
fs
dec
test
scas
jb
mov
out
jns
aas
mov
adc
push
fdivs
mov
mov
test
push
movsb
outsb
lock
mov
es
js
ss
out
lcall
arpl
sbb
bound
sub
push
mov
jl
inc
enter
mov
mov
push
inc
add
ljmp
and
sbb
aam
ffreep
imul
push
push
cmpsb
xor
fsubl
cli
add
pop
adcb
mov
sbb
fsubp
scas
adc
and
adc
dec
xchg
mov
jno
push
cmpb
jge
imul
xor
dec
nop
ret
stos
sub
pop
imul
into
sahf
cwtl
stc
mov
cmp
testb
xchg
pop
ret
sahf
adc
push
mov
mov
cs
nop
mov
loopne
push
int
into
daa
xchg
dec
mov
mov
mov
ja
mov
stos
daa
or
loope
mov
pop
xor
jnp
mov
ja
pop
add
lcall
imul
fldcw
hlt
call
lret
sahf
pushl
out
push
fwait
clc
adc
pop
add
push
fwait
jb
inc
or
jle
add
inc
cmp
add
mov
mov
jge
loope
and
stos
sub
mov
and
inc
push
int3
test
or
xchg
inc
inc
mov
xchg
rorl
cmp
sti
add
fwait
addr16
xor
lret
xchg
je
iret
fs
ror
jp
mov
icebp
pop
pop
fsubl
test
popf
xchg
or
jb
jb
test
out
pop
addr16
dec
je,pn
rol
inc
cmp
jbe
in
adc
inc
das
lret
pop
lret
cmpsl
data16
lret
fbld
or
push
scas
jnp
push
iret
bound
mov
clc
fstps
mov
xchg
cmpsl
outsl
loopne
mov
mov
add
dec
mov
fsubrl
xor
push
mov
push
push
cmp
idivl
mov
or
xchg
or
pusha
cltd
and
cmp
pop
ror
inc
sub
mov
inc
cmc
fildl
push
cmpsb
leave
xchg
jb
loope
addr16
mov
cmp
mov
xor
mov
movsb
and
divl
dec
inc
xchg
xor
lret
mov
add
mov
dec
subb
imul
lea
mov
les
imul
jge
mov
mov
add
adc
rcrl
cmp
xor
jae
or
jb
gs
xchg
mov
push
pop
daa
insl
iret
adc
int
imul
sarl
inc
and
xchg
fcoms
mov
jns
aam
or
mov
fnstcw
jmp
je
pop
inc
mov
lods
jle
stc
insb
pop
cmp
int3
mov
and
mov
and
sbb
aaa
lret
xchg
and
shlb
mov
mov
mov
cmpsl
lods
or
into
jmp
jb
mov
pop
adc
pop
jae
push
mov
lods
aaa
mov
cmp
mov
cmc
lods
inc
push
sbb
xor
mov
xor
shll
or
outsb
lods
dec
frstor
inc
mov
cmp
xor
aas
pop
out
inc
aaa
dec
xchg
cltd
jns
hlt
lds
or
jg
and
lahf
mov
loopne
sbb
sbb
cmpsb
movl
test
xor
dec
rcrb
mov
insb
inc
jl
js
sub
add
ljmp
jp
cli
jns
dec
mov
ret
push
jmp
cld
sbb
int
dec
add
xchg
arpl
movsl
pop
push
sub
out
pop
sub
outsb
call
xlat
mov
adc
pop
dec
jcxz
and
in
mov
push
push
mov
cmp
and
sbb
sbb
cmp
icebp
add
jno
cli
xchg
je
pushf
mov
shr
mull
inc
xor
inc
out
movsb
dec
mov
lahf
jge
lcall
sub
roll
mov
jne
js
mov
cld
icebp
inc
icebp
push
cmp
xchg
cmp
push
clc
ljmp
les
mov
xchg
fcomip
add
mov
pop
xchg
jmp
hlt
fcmovu
fyl2xp1
push
cmc
xor
push
or
mov
pop
stos
daa
mov
pop
mov
dec
dec
xor
mov
inc
inc
fwait
jle
lcall
xchg
ss
mov
jae
insl
iret
sbb
idivl
outsb
rclb
pop
cs
cltd
arpl
inc
repz
xlat
jb
data16
test
dec
mov
mov
into
xor
xor
int3
xchg
sbb
and
jae
sbb
mov
movd
daa
insl
lret
out
dec
mov
lahf
inc
mov
bound
in
xchg
add
loopne
mov
and
adc
addr16
adcb
cli
mov
dec
ret
sbb
mov
scas
idivl
xchg
mov
outsb
pop
and
jmp
mov
repnz
shlb
js
sub
add
jb
mov
loopne
jecxz
ss
mov
adc
lret
addr16
mov
mov
adc
into
or
sbb
jmp
mov
xchg
out
out
ljmp
fbstp
inc
push
jns
mov
stos
xlat
and
push
and
ficompl
dec
inc
mov
mov
js
adc
cmp
sbb
mov
aam
and
fldt
in
mov
mov
jns
lret
pusha
in
pop
pop
xor
or
dec
lods
and
add
mov
jbe
adc
loopne
xor
scas
loope
mov
in
mov
ljmp
cmp
lret
pop
leave
mov
xor
mov
ror
pop
movsb
jp
pop
pushf
ds
push
popf
outsl
adc
cmp
imul
cmp
pop
dec
inc
xor
mov
xchg
std
lods
hlt
jl
mov
mov
aad
xchg
insb
shlb
push
scas
xor
lret
adc
xchg
imul
jp
mov
mov
loope
xor
cmp
addr16
fistl
or
adc
adc
ja
pushf
mov
sbb
jle
int
or
stc
cmc
dec
sbb
test
movsb
mov
dec
ficompl
push
testl
jmp
mov
add
into
or
hlt
xor
scas
popf
lods
mov
mov
push
stc
js
xchg
adc
push
daa
or
insl
imul
ja
sbb
adc
inc
ret
or
sarl
sub
and
pop
mov
shll
mov
mov
shl
mov
movsb
out
dec
dec
jl
mov
dec
cwtl
add
xchg
sub
lahf
aam
mov
hlt
mov
arpl
cmpsl
or
push
aaa
les
xchg
adc
mov
jmp
add
pop
cmpsl
inc
mov
nop
xlat
jbe
inc
lret
leave
ja
jge
icebp
pushf
cwtl
or
jmp
mov
std
sbb
aad
cli
imul
and
mov
ja
icebp
out
and
adcb
mov
insl
dec
and
dec
mov
leave
add
or
sbb
sbb
addr16
cmpsl
inc
cmc
lahf
mov
int3
stos
push
mov
lret
js
and
xor
stos
push
loope
in
and
pop
push
popa
cwtl
add
js
push
push
dec
es
out
dec
or
and
mov
push
add
rorb
adc
lods
fisttpl
lret
out
mov
sub
add
movsb
sbb
cmp
test
gs
adc
mov
mov
imul
pop
xor
frstor
orb
mov
adc
shlb
pop
aas
cmp
inc
aad
sti
xchg
sbb
leave
testb
shr
push
cmp
add
outsl
mov
les
cmp
stc
sbb
add
adc
xlat
push
or
in
ja
andl
rclb
fwait
stc
push
mov
inc
inc
mov
call
addr16
cmpl
adc
mov
push
add
mov
aas
dec
shl
inc
fst
sbb
dec
inc
pusha
jecxz
dec
xor
loopne
lret
test
mov
ret
xlat
or
fs
pop
xor
lea
or
sbb
jae
jo
cltd
jl
cmpl
mov
adc
cmc
mov
adc
fnstcw
adc
fwait
sub
rclb
xchg
jne
adc
or
test
mov
mov
mov
les
and
scas
divl
insl
pusha
aaa
mov
sub
fisttps
add
iret
or
push
push
mov
adc
outsb
mov
test
mov
mov
cltd
loope
cmpsb
fcoml
nop
lods
stos
mov
aam
clc
jp
popf
mov
std
mov
mov
sbb
dec
les
mov
add
inc
pushf
push
fstp
dec
int3
sbb
popf
fdiv
dec
jge
dec
mov
pop
jle
pop
movsl
mov
orl
shlb
xchg
mov
movb
and
sti
insb
xchg
xlat
xchg
nop
ret
push
mov
pop
cltd
or
or
sahf
adc
stos
xchg
lods
lock
rclb
sub
notl
dec
mov
out
cwtl
push
push
insl
outsl
lret
xchg
inc
scas
lcall
and
pop
scas
stos
es
pop
inc
aas
dec
or
fcoml
filds
std
inc
aam
sbb
stc
mov
pop
cmp
data16
push
cmpsb
mov
pop
inc
sbb
fstl
mov
pop
sbb
stos
jns
gs
loopne
imul
lock
fsub
les
push
icebp
pop
mov
push
jb
push
cmp
movsl
lds
push
fldt
mov
in
ljmp
lea
jmp
dec
shrb
repz
les
popf
jmp
ret
and
sbbb
cmp
sbb
cmp
lcall
js
insl
sub
and
loop
adc
push
mov
out
stos
sub
cs
in
andl
sbb
xor
aas
add
xchg
fs
mov
mov
dec
adc
mov
sbb
psrlq
dec
sub
scas
pop
pusha
push
xchg
scas
mov
or
sub
fimuls
mov
out
mov
adc
or
jg
ljmp
adc
repnz
daa
and
arpl
nop
add
enter
nop
push
pusha
jns
scas
mov
xor
stos
adc
push
int3
test
mov
mov
or
pop
movsb
push
add
enter
cmp
and
mov
or
in
and
jge
mov
stc
xchg
pusha
adcl
xchg
add
setnp
aam
pop
xor
clc
mov
test
lahf
rcrb
imul
test
push
jnp
movsb
inc
adc
mov
dec
js
jae
clc
mov
jb
rorb
xchg
xchg
insb
xchg
in
stos
mov
or
lret
out
push
mov
adc
std
hlt
loope
ss
pushf
cld
insb
jecxz
jmp
scas
jl
mov
pop
imul
add
cmpsl
mov
dec
xchg
or
jge
insb
call
pcmpgtb
xchg
mov
fiadds
xor
leave
subb
jno
inc
adc
mov
xor
out
pop
pop
mov
mov
enter
jno
dec
ds
push
xchg
mov
dec
mov
lret
mov
cmpsb
cmpsb
mov
loop
mov
iret
mov
and
adc
xchg
popa
mov
mov
and
cltd
cld
pop
and
fists
scas
movsb
out
ret
int3
js
aad
add
out
sbb
xchg
loopne
cmp
xchg
es
int3
or
xrelease
insl
stc
pusha
fnstenv
loopne
cwtl
sbb
push
xchg
ja
data16
stos
cmp
dec
dec
imul
cmp
dec
lods
jns
lahf
xchg
ds
and
fisubrl
pop
mov
dec
js
jg
jecxz
pop
clc
mov
xor
in
mov
pop
out
xchg
mov
fldcw
aad
push
movb
sbb
in
jg
mov
jnp
outsb
dec
xor
ret
push
xor
inc
enter
cmpsb
fsubl
enter
pop
sub
inc
xchg
cmp
popf
lea
in
sbb
imul
lahf
jge
xor
int3
in
addr16
pusha
hlt
insb
fwait
bound
mov
imul
xchg
arpl
and
pusha
dec
gs
jmp
fwait
jle
clc
das
loop
rep
sti
push
es
popl
push
or
in
pop
roll
dec
push
out
out
lcall
fisttpll
pop
fnstsw
dec
shll
repnz
push
jp
addb
xchg
push
lahf
inc
test
sbb
cmp
mov
fldenv
dec
or
push
shrb
xchg
call
test
ja
and
fstpt
lret
push
aas
add
push
adc
add
push
inc
pusha
mov
jb
adc
dec
sbb
push
mov
adc
mov
xor
int
sub
ds
int
adc
lods
cwtl
xchg
negb
cmp
mov
bound
loope
cmp
addr16
popf
adc
int3
push
lock
ljmp
andl
adc
ret
cmp
adc
les
shlb
jno
push
or
fwait
std
pop
pop
cld
pushf
dec
loop
aam
popa
int
enter
jnp
in
xchg
xlat
push
jmp
loop
dec
das
inc
aad
mov
loopne
out
mov
cmc
sti
xor
repz
popf
mov
popa
ljmp
sti
cld
popf
push
sbb
pop
xchg
or
mov
movsb
mov
fs
xor
xchg
inc
jl
jb
shl
jge
cmp
loopne
iret
je
icebp
pop
and
cmp
lahf
dec
adc
inc
fistl
pop
jle
jmp
and
xchg
ljmp
jecxz
cmp
cmp
lea
xor
sahf
cwtl
jns
out
out
sub
icebp
jmp
add
shr
adcb
push
pop
adc
mov
out
dec
sub
stos
xor
loope
cmpsl
cmp
push
jmp
arpl
mov
aam
jns
mov
movsb
js
loopne
pop
sub
orb
and
mov
jb
sub
push
cmp
fdivl
mov
lea
push
lret
mov
das
inc
push
adc
repz
mov
insb
sub
xor
bound
lahf
movsb
jmp
xchg
add
adc
ret
or
ja
imul
loopne
xor
xchg
insb
cmp
inc
ljmp
inc
add
andb
movsl
fdiv
mul
cltd
adc
imul
sub
insl
mov
push
mov
sbb
pusha
cmp
mov
dec
adc
sub
sub
mov
sbb
sub
movsl
mov
push
rcrl
lods
xchg
ja
and
mov
in
jl
daa
mov
jmp
mov
pop
scas
dec
enter
imul
dec
mov
jp
stos
cli
aas
sub
pop
nop
or
add
dec
insb
or
xlat
add
gs
movsl
sub
loope
mov
mov
lret
in
mov
ja
sbb
and
test
cmp
data16
lahf
ss
and
xchg
sti
dec
arpl
movsl
and
xchg
nop
daa
fstpt
adc
testb
shlb
ds
cmp
aas
gs
nop
mov
jl
and
movsl
jno
cmp
xor
cmc
bound
das
cmp
addl
sub
int3
fildll
jne
push
pop
dec
inc
mov
das
pop
pushf
cld
cld
addl
mov
in
adc
pop
dec
int3
loop
adc
iret
pop
xor
push
fstps
popa
jecxz
mov
and
aaa
test
or
or
out
or
jl
es
scas
ljmp
int3
imul
cs
ret
mov
xlat
test
ficompl
xor
ja
and
mov
nop
cmpsb
popl
push
aas
mov
outsl
cli
ret
hlt
push
mov
insb
push
int3
jb
or
out
inc
sbb
mov
ds
ret
push
jmp
cmpsl
mov
nop
clc
stc
pop
pop
in
ljmp
push
into
inc
jb
movsl
or
out
adc
icebp
push
pop
popf
out
stos
dec
inc
xchg
icebp
es
out
outsb
sub
mov
sbb
pusha
lods
loop
aam
jecxz
sub
add
sbb
ret
push
xor
pop
sub
mov
xor
adc
lock
jnp
pop
push
sub
pop
out
divl
orl
aas
sahf
pop
std
push
inc
rcrb
mov
popf
add
lcall
inc
mov
ss
push
or
adc
fsts
cmp
call
xorb
clc
cs
jb
fnstenv
bound
popf
cmp
enter
jnp
add
add
push
sub
loop
into
arpl
mov
push
nop
shl
xchg
out
call
sti
mov
jge
cmp
xor
mov
add
repz
or
jnp
stos
nop
sub
push
fistpl
std
add
mov
add
jno
imull
pop
sub
sub
pop
mov
cmp
or
adc
fldenv
arpl
xchg
cs
stos
loopne
add
out
mov
inc
js
xchg
daa
rcll
sbb
push
cmpsl
jbe
clc
pop
loopne
or
mov
call
mov
fmuls
add
xchg
fdivrp
ljmp
and
xchg
clc
or
adc
cli
add
mov
sti
int3
das
pop
mov
xor
cld
lods
jne
in
adc
mov
outsb
es
push
sub
nop
mov
mov
sbb
hlt
fldl
inc
xor
mov
leave
sub
xchg
lods
mov
in
loopne
xor
inc
inc
pop
pop
test
shrb
test
xchg
cld
mov
sbb
cmp
inc
add
lea
aam
stos
xchg
mov
inc
push
sbb
mov
sub
cld
or
cmp
addr16
lcall
add
pop
xorb
gs
loope
pop
and
xor
jnp
mov
fidivl
inc
rol
push
test
xlat
inc
mov
jns
xchg
fildl
mov
push
in
lret
int3
xchg
cmp
outsb
setl
mov
in
roll
sbb
test
dec
xchg
dec
in
lock
pushf
fstpl
sub
dec
cmp
cmpsb
arpl
imul
inc
lahf
and
xor
sbb
jmp
jne
sub
sub
adc
or
jge
mov
mov
pusha
fisubrs
or
loope
lods
jecxz
movsl
fdivl
cwtl
pop
sub
cltd
sub
adc
sbb
inc
dec
push
out
mov
jecxz
ljmp
inc
or
std
rclb
insl
lahf
stos
cmp
movb
dec
movsb
mov
imul
ret
pushf
xchg
neg
and
mov
int
inc
and
jbe
sub
leave
push
mov
jp
sarl
stc
popa
xor
addb
and
sub
rcl
mov
pop
daa
scas
pusha
push
push
xor
xor
dec
scas
jns
mov
or
imul
dec
int
loopne
js
mov
mov
dec
xor
insb
sbb
push
jo
adc
push
pop
loop
inc
push
in
imul
fcom
subb
mov
xchg
je
inc
mov
push
push
into
push
fldcw
pop
inc
cmp
call
inc
jnp
or
out
or
and
std
jecxz
push
fdivrp
lahf
jle
in
arpl
push
rcrb
push
movsb
out
sbb
ret
ljmp
out
leave
pop
stos
or
aad
in
and
pusha
ljmp
dec
dec
scas
pop
hlt
ficoms
aas
sbb
loopne
adc
loop
iret
xchg
out
cli
adc
fdivrs
in
xorb
sub
ss
cmp
popf
hlt
cmp
mov
hlt
pop
sbb
lahf
xor
test
ficoml
or
arpl
lcall
mov
cmp
aam
loop
js
cmp
or
rcl
mov
cmpsb
imull
cmpsl
push
mov
xchg
xchg
ja
inc
mov
daa
xlat
aaa
out
notl
pop
out
mull
aaa
xlat
inc
cmpsl
push
mov
xchg
xchg
ja
inc
mov
daa
xlat
aaa
out
notl
pop
out
ja
inc
aaa
xlat
inc
cmpsl
push
aaa
xchg
xchg
xchg
ja
inc
mov
daa
aaa
out
cmc
pop
pop
out
mull
aaa
xlat
inc
cmpsl
push
mov
xchg
xchg
js
push
and
clc
or
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
out
mov
fisttps
cli
mov
sub
pop
or
jp
sub
pop
pop
dec
out
mov
fisttps
ficompl
sub
pop
or
jp
push
pop
pop
dec
out
mov
fisttps
ficompl
jbe
push
or
sub
aas
jbe
fwait
mov
mov
mov
fsts
cmpsl
es
jg
sbb
mov
rcrl
add
and
add
ret
repnz
mov
mov
loope
pop
dec
mov
scas
xchg
jl
insl
xchg
out
lods
insl
popa
inc
ffree
dec
sar
push
pop
pop
fcmove
jp,pn
pop
mov
fsubrs
sti
inc
cli
xor
aas
scas
in
cmc
jg
aas
cmp
movsb
xchg
imul
ja
cli
lahf
adc
outsb
jg
sub
out
cmp
mov
sbb
aas
pop
push
cmc
fwait
and
test
xor
sub
dec
sub
cmp
mov
test
dec
sbb
stos
iret
lcall
ficompl
sub
pop
or
jp
push
pop
pop
or
xlat
pushf
jns
fcompl
stos
loopne
sbb
cmp
sbb
jle
push
outsl
das
cltd
sti
mov
lods
lcall
lret
lret
sbb
dec
pop
data16
jne
mov
fimuls
xchg
mov
lret
jg
dec
sbb
das
jp
push
pop
pop
dec
out
mov
fisttps
ficompl
sub
pop
or
jp
push
pop
pop
dec
out
mov
mov
adc
mov
dec
jae
mov
inc
lahf
or
pop
rclb
scas
cs
pop
rcrl
icebp
cmp
mov
mov
imul
outsb
mov
lods
lret
lock
lea
in
cltd
jo
mov
push
out
pop
sbb
inc
sbb
daa
shll
hlt
jg
stc
shlb
insb
xchg
sahf
mov
lret
loope
add
sub
add
fsubrs
maxps
in
jns
loop
add
cld
icebp
repnz
in
mov
pop
cmp
xchg
jle
sub
inc
jmp
loop
cmp
jl
or
xlat
cmp
out
mov
sbb
xlat
out
sub
sub
push
lods
idiv
test
daa
cld
hlt
jnp
faddl
xlat
jg
pop
adc
mov
jl
lahf
shlb
hlt
arpl
notb
les
loopne
push
les
jge
fcoms
inc
xchg
pop
sub
cld
jecxz
stos
inc
cld
pop
out
outsl
cmp
push
push
fdiv
add
dec
dec
pop
notl
xchg
rcr
pop
adc
mov
outsl
xor
fwait
cmp
insb
jbe
mov
test
clc
imul
dec
aaa
movsb
dec
dec
sub
scas
cld
push
and
dec
out
ret
fildl
aam
dec
pop
jo
imul
out
iret
xchg
jno
sahf
lret
out
dec
xor
arpl
mov
mov
push
outsb
popf
lret
aam
or
mov
inc
test
inc
sbb
mov
jge
cmpl
dec
mov
in
xor
cmc
loop
mov
rorb
enter
and
test
lock
outsb
jne
ds
sbb
push
les
and
cmp
pop
pop
loope
pop
adc
and
in
cmp
add
jle
fsubrp
push
and
movsl
lock
mov
stos
inc
sarb
and
fs
test
in
push
int
sub
lcall
mov
inc
rcll
adc
inc
orb
cmc
sti
in
sub
inc
xor
sub
pop
rolb
push
or
mov
nop
repnz
mov
bound
repnz
stos
shrl
repnz
push
sbbb
push
rcll
inc
adc
pop
sti
push
or
push
cld
orb
jecxz
fistps
popa
adc
into
xor
jge
or
mov
repnz
dec
push
inc
in
lahf
mov
push
jmp
xlat
sbb
sti
aad
adc
jg
jnp
add
push
mov
in
fucom
arpl
cmc
das
and
xor
dec
mov
xchg
push
lds
jbe
into
xlat
and
std
loope
cmp
and
aas
notl
pushf
pop
mov
mov
dec
sub
mov
enter
cmp
cmpsl
std
fs
cmp
mov
fbstp
popf
jmp
xchg
and
sahf
lcall
in
cmp
or
dec
push
xor
mov
rorb
sbb
jp
fimull
cmc
lea
dec
repnz
jmp
cmp
jo
icebp
xor
nop
int3
filds
ja
movsl
add
adc
inc
mov
or
sbb
sub
jg
and
add
xchg
xor
dec
dec
xchg
lret
dec
addb
sub
dec
pop
cmp
or
lods
jno
jbe
sbb
jmp
stos
and
mov
addr16
bt
dec
inc
test
cwtl
inc
fisttpl
mov
jmp
or
jecxz
iret
xchg
mov
fcomps
mov
push
sub
mov
loopne
jge
sub
sbbb
mov
add
dec
pushf
cmp
jl
jecxz
mov
inc
in
shll
arpl
out
adc
add
jne
mov
inc
add
pop
xchg
fadds
mov
mov
aam
sbb
loop
in
inc
cmp
in
dec
mov
mov
adc
addr16
lret
ret
jno
das
and
rcrb
int3
nop
cmp
out
into
test
and
out
adc
int3
stos
pop
vpmaxsw
cmp
mov
idivl
pop
or
cmc
inc
xchg
push
iret
xchg
loopne
sub
inc
inc
sub
dec
mov
jo
dec
fnstenv
push
fsubrs
stos
lods
mov
jge
xchg
arpl
ja
sbb
mov
jecxz
pop
pop
test
inc
in
mov
add
and
pushf
add
lret
shr
add
lea
pop
rol
push
push
sbb
insl
jg
sub
repz
hlt
dec
hlt
test
xor
sarb
les
in
push
dec
lock
aaa
gs
out
dec
inc
ret
xor
outsb
fbld
mov
repz
mov
inc
scas
adc
cmpsl
pop
insl
adc
inc
in
out
imulb
jmp
in
stc
fbld
or
std
push
test
push
shll
jae
jmp
add
clc
out
enter
fwait
pop
xchg
cmp
dec
push
call
cmp
out
movlps
mov
add
lcall
testb
jae
es
cmp
insb
xlat
pop
add
sbb
ljmp
jnp
lds
nop
out
ficoms
push
xchg
jne
jg
jae
push
mov
sbb
xlat
nop
mov
enter
fnsave
lret
cltd
or
ds
jge
push
fadds
js
add
shll
cli
cli
adc
mov
mov
inc
and
jnp
les
cld
xor
push
dec
xlat
push
lcall
sub
insb
sarb
or
xchg
sub
jp
sbb
decb
xchg
xor
nop
lea
inc
xor
sub
and
lods
stos
push
rep
mov
lods
push
dec
mov
shr
repnz
cmpb
loope
outsl
arpl
push
push
iret
imul
inc
pop
xor
cmp
ret
hlt
in
in
jb
add
or
in
mov
jns
mov
pop
xchg
das
inc
jl
dec
adc
dec
push
xchg
movsl
mov
mov
add
mov
fsubl
dec
imul
sub
pop
cltd
sahf
cwtl
fdivrp
pop
into
mov
xor
mov
xchg
mov
js
and
sub
inc
mov
cmpl
sbb
jns
inc
mov
addl
repz
cltd
inc
sub
loop
test
xor
push
mov
pop
cmc
in
sbb
mov
push
int
mov
shlb
mov
fnsave
xor
cmc
jne
add
clc
loope
or
and
imul
arpl
xlat
pop
xchg
push
ret
mov
test
test
fsubr
sbb
dec
int3
popf
decl
div
jg
mov
ljmp
mov
fadd
push
mov
mov
dec
movsl
std
jle
rol
movsl
push
jbe
sbb
cli
cmp
sbb
movb
mov
mov
or
shlb
pop
cltd
imul
pusha
clc
ja
mov
repz
mov
jb
pushf
ljmp
jno
pusha
addl
mov
in
cwtl
inc
pop
jl
fyl2x
rorb
scas
inc
out
add
xchg
and
gs
sub
movsl
push
gs
repnz
add
leave
in
clc
push
or
cmp
push
aam
orl
cmp
push
or
sub
jbe
push
push
bound
add
loope
jae
pop
add
stos
jnp
pusha
xchg
xchg
idivl
push
pop
xchg
repz
dec
add
outsl
iret
pop
mov
mov
ss
popa
lods
or
mov
loopne
xchg
fisttps
dec
cltd
je
jl
xor
test
xor
jbe
pop
jecxz
insb
dec
mov
jb
das
mov
xlat
clc
sti
je
cmp
movsb
dec
jge
cwtl
xchg
or
and
decl
outsb
sbb
inc
rcl
dec
jno
andl
jp
lahf
cld
push
lods
jge
sub
inc
and
pop
shrb
ds
pushf
pop
cli
jb
or
outsb
call
mov
ficoms
xor
push
push
ss
fisubl
imul
test
lea
gs
aas
ret
fiadds
fdiv
lds
or
pop
xchg
ljmp
mov
jae
negl
mov
lcall
out
ret
stos
jae
repz
movsb
mov
xchg
shr
negb
pop
aaa
arpl
fisubl
shll
adc
sub
mov
and
add
les
rolb
aam
imul
push
jnp
dec
divl
fs
add
jae
lds
jle
xor
push
cwtl
mov
jle
sbb
xchg
jb
jmp
je
mov
pop
and
cwtl
shr
sub
xchg
add
mov
iret
in
in
js
in
aam
mov
cli
inc
push
sbb
iret
test
mov
fs
jl
jle
pop
andb
inc
sub
mov
lods
subb
pop
xchg
dec
pop
in
mov
cmc
outsb
arpl
lahf
jns
sbb
xchg
insl
popf
test
lods
mov
sub
jno
fstpl
or
ss
or
or
in
mov
cld
jecxz
arpl
cmp
out
mov
loop
leave
push
mul
das
cltd
ret
int3
cmp
cs
mov
pop
add
pop
jo
es
fdivr
adc
stos
add
cli
nop
daa
and
ja
mov
xchg
xchg
mov
mov
or
add
sbb
fisttpll
rorb
inc
out
mov
lahf
idiv
outsl
inc
pushf
adc
push
in
jno
fwait
hlt
das
jne
jmp
mov
pop
or
iret
and
sub
xlat
cmp
and
fs
scas
enter
dec
imul
xchg
adc
not
aad
and
cmp
hlt
fcoms
adc
call
pop
ljmp
in
js
mov
mov
pop
aam
or
dec
or
stos
or
mov
outsl
jb
jne
cmpsb
pop
and
xor
sub
aad
subb
pop
push
ja
cli
icebp
out
or
mov
out
mov
cwtl
mov
dec
loope
jecxz
pop
fimull
dec
push
nop
imul
fwait
ds
aam
jo
push
ljmp
mov
push
int
ffree
cmc
push
not
xlat
adc
push
pop
mov
mov
sbb
inc
repz
jmp
push
ss
add
mov
cmp
inc
es
mov
call
and
add
push
out
xchg
push
mov
loop
sub
mov
inc
cmp
stos
addr16
xlat
rorb
mov
xchg
pop
sti
lods
inc
mov
loopne
push
cmp
dec
mov
lcall
aas
mov
xchg
sub
les
xchg
pop
gs
or
fdivs
and
jne
cs
xchg
fdiv
lods
stc
jmp
push
scas
mov
xchg
xchg
inc
cmp
ljmp
scas
lcall
xor
dec
mov
movsl
out
ss
mov
or
adc
lahf
out
add
or
jmp
in
js
jle
insb
mov
in
les
lods
push
jno
les
pop
mov
cmc
sub
mov
mov
jl
lret
inc
push
sahf
and
and
les
sbb
into
iret
in
xor
mov
wbinvd
mov
shl
addb
sub
xorb
ret
push
stos
jns
cmp
nop
pop
add
xchg
scas
jle
push
adc
jbe
ror
out
fwait
jne
push
mov
mov
aaa
push
imul
sbb
push
shlb
outsl
cmpb
mov
movsl
xchg
divl
loop
flds
in
outsl
insl
subl
pop
punpcklbw
dec
ucomiss
add
scas
insl
sbb
cmp
pop
pop
stos
insl
push
outsb
adc
int
inc
test
xchg
insl
sub
jecxz
mov
lods
stos
inc
or
jns
lcall
xchg
loop
and
lods
pop
fisttpl
lcall
lret
inc
out
and
mov
cli
cld
push
fiaddl
cmp
aad
or
aas
lahf
push
push
jl
into
push
mov
je
push
pushf
test
cmp
and
insb
shlb
jnp
iret
sub
mov
insl
mov
std
pushf
ret
fnsave
pushf
fdivs
nop
sub
loope
test
mov
out
mov
fcmovnbe
mov
mov
and
imul
sti
push
push
jl
cmp
fadd
fdiv
mov
mov
imul
pop
orb
jl
in
lock
mov
dec
dec
push
aad
inc
adc
in
mov
ds
add
or
arpl
jne
inc
outsb
and
jnp
inc
in
clc
insl
jb
sub
rcll
mov
xchg
shll
lahf
and
mov
add
xchg
or
push
stc
cmp
addb
fadds
shr
les
xchg
push
and
add
xor
outsb
mov
test
or
rep
push
nop
or
cmovb
dec
push
cmc
mov
imul
add
dec
rcrl
test
fmul
xchg
dec
mov
in
push
and
push
jbe
mov
fs
out
push
lods
movsb
jo
mov
jne
mov
arpl
psllw
adc
and
push
push
cmp
xor
in
and
lret
out
pop
mov
jmp
repnz
imul
psraw
js
adc
sub
jo
inc
popa
mov
repnz
xchg
push
loop
pop
mov
int
adc
pop
scas
cwtl
jno
loopne
xor
xchg
mov
decb
xchg
inc
cmp
xlat
imul
decb
sub
nop
dec
adc
inc
leave
add
sbb
aad
ficoms
jbe
lret
js
and
cmp
pop
mov
mov
and
sub
cmc
mov
fnstenv
insb
sahf
mov
push
mov
adc
scas
cwtl
leave
jne
inc
sub
decl
add
aaa
movsb
sub
mov
push
sub
cmp
daa
repz
cmp
cmp
fiaddl
xchg
outsl
jp
sub
mov
jo
sti
lret
mov
pop
push
push
cmp
dec
dec
mov
adc
pop
popa
and
imul
leave
xchg
aad
cli
enter
adc
das
sbb
pushf
stos
incb
or
repnz
adc
mov
fistps
dec
aam
enter
shrb
mov
es
je
stos
rclb
mov
mov
inc
out
and
sub
push
jp
scas
pop
outsl
std
mov
mov
aaa
add
mov
mov
or
lea
pushf
in
aad
mov
adc
stos
dec
cmp
mov
or
jle
das
sub
cld
int
divb
nop
mov
push
lcall
ret
faddl
pop
in
push
cmp
ss
cmp
mov
add
nop
sub
xchg
ret
leave
adcb
aas
sarb
popf
mov
dec
xor
pop
shrl
and
out
movl
ss
leave
cmp
scas
cmp
xchg
mov
xchg
pop
loope
jne
adc
in
fists
mov
mov
mov
je
lods
mov
push
cmpsb
sub
loope
icebp
lock
subb
hlt
sub
mov
push
ja
bts
xchg
sahf
or
xchg
ret
inc
adc
clc
add
outsb
adc
jno
fsub
adc
cld
out
shlb
rorl
in
pop
inc
les
lock
pop
test
cmp
nop
addr16
sub
rolb
push
inc
add
jns
and
add
gs
push
lahf
ffree
out
lods
sub
dec
in
mov
gs
jmp
pop
data16
leave
jne
test
push
mov
cmp
jnp
je
test
scas
push
ret
and
mov
lret
mov
xchg
push
cmp
iret
jecxz
xor
jae
sub
jne
out
sub
pusha
shrb
pop
stos
je
and
cmpsb
popf
bound
out
mov
mov
cmp
enter
cmp
into
les
and
repz
cmpsb
inc
add
mov
outsl
xchg
pop
push
mov
mov
punpckhwd
xlat
out
sbb
add
insb
enter
decl
mov
ja
lcall
mov
or
jno
mov
pop
push
out
and
inc
lds
dec
or
mov
sub
addb
or
xor
repz
xchg
icebp
mov
lret
or
mov
mov
push
jbe
dec
loop
test
das
fwait
cli
xchg
pop
lret
jge
jecxz
outsb
dec
scas
push
cmp
scas
and
lret
push
aad
mov
shlb
mov
sbb
lock
roll
stc
loopne
dec
stos
mov
cmp
in
mov
das
sub
mov
stc
or
clc
push
bnd
pop
jnp
mov
xor
imul
int3
add
mov
xor
adc
push
sub
sbb
xor
cmpsl
add
inc
data16
or
ja
mov
icebp
into
mov
jge
cmc
mov
test
divb
fdivrp
movsb
fstps
or
mov
cli
cmpsb
lods
rcrb
sbb
cmpsl
adc
and
sub
jne
mov
fwait
movsb
out
ror
cmpsb
dec
lret
fistpll
lcall
jl
inc
push
in
and
sub
sub
imul
pop
or
cmpsb
pop
jge
neg
adc
ja
inc
mov
xor
into
enter
mov
fldt
pop
xchg
dec
adc
xor
cmp
dec
mov
mov
push
enter
pop
sbb
loopne
fisubl
or
dec
cmp
push
push
push
jne
cs
pop
aas
jno
lahf
insl
jo
or
dec
arpl
rorb
and
clc
add
sbb
movsl
bound
mov
push
inc
mov
in
and
adc
sbb
lret
insb
addr16
pop
in
icebp
cmp
ds
sbb
jns
pop
xchg
mov
fidivl
pop
in
push
ss
std
addr16
icebp
jle
sbb
xor
add
jne
call
je
scas
xor
sub
jo
mov
dec
leave
pop
loope
push
lret
lret
aaa
cmc
pop
iret
sbb
sahf
or
fiadds
aas
push
or
data16
idiv
jae
iret
pop
sar
notb
cwtl
scas
sub
je
dec
mov
sub
dec
jecxz
push
rcll
pop
fnstenv
scas
mov
pop
sbb
leave
push
scas
shlb
fdivrl
rolb
push
out
or
je
inc
aam
test
insl
ljmp
xlat
mov
xchg
lret
scas
mov
dec
push
lcall
sub
shrl
cmp
sub
cmp
popa
lret
stos
pusha
push
rolb
test
mov
int3
subb
fsub
pusha
push
dec
cli
mov
inc
xchg
add
xchg
mov
lret
cmpb
aam
jmp
mov
les
das
pop
jl
mov
cmp
dec
adc
mov
pop
pop
mov
sub
jne
add
push
adc
xlat
in
inc
lahf
or
cmpsl
stos
inc
mov
lds
and
int
push
ret
daa
inc
arpl
mov
mov
jl
repnz
push
sbb
cmp
or
and
nop
mov
xlat
sbbb
setne
data16
push
push
aad
dec
ss
and
into
pushl
mov
loopne
or
addr16
push
fsubrp
cmp
mov
repnz
pop
fstpl
inc
imul
mov
add
fldenv
fidivrl
in
out
inc
sub
dec
cli
and
fcmovnu
lahf
dec
cmpsb
add
aas
rcll
int
xchg
in
sbb
out
xor
cld
dec
mov
xlat
movsb
jne
push
adc
cld
add
test
fchs
inc
inc
adcb
mov
xchg
nop
or
rcl
das
adc
pop
push
adc
mov
into
add
xor
addr16
sbb
add
ljmp
or
scas
shll
loope
aaa
sti
xor
test
loopne
mov
cli
fcmovu
xlat
mov
sub
or
push
test
mov
inc
punpcklwd
sbb
pop
cli
sbb
push
fldcw
stc
pop
ds
mov
fnstsw
mov
xor
mov
data16
cmp
rorl
xchg
mov
xchg
sub
push
adc
cmp
rcll
inc
pop
pusha
push
movsb
pop
adc
push
lea
orb
ja
fscale
dec
test
xor
cmc
stos
lock
ficompl
sub
pop
or
jp
push
pop
pop
dec
out
mov
fisttps
ficompl
sub
pop
or
jp
push
pop
pop
dec
out
mov
fisttps
fistpl
sub
pop
or
jnp
push
pop
pop
dec
out
mov
fisttps
cvtps2pd
xor
in
pop
jge
repnz
mull
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
fcmovbe
lret
or
clc
adc
add
mov
popf
imul
fstp
sub
ljmp
dec
stos
pop
pop
scas
dec
mov
fimull
sub
fidivl
cmp
lcall
inc
pop
dec
imul
dec
fwait
inc
fldl
jns
xchg
push
addb
mov
push
pushf
cmp
test
xrelease
shrl
xchg
test
addl
cmpsl
sub
xchg
popf
in
or
mov
ret
push
lahf
jns
cmp
jge
cmp
mov
sub
jge
xor
std
pop
xor
fstp
jge
cmp
mov
adc
iret
inc
test
in
dec
add
adc
adc
cmpl
and
dec
test
jo
int
and
and
pop
push
js
aaa
ja
rorb
cwtl
inc
lea
xchg
push
sub
ljmp
push
stos
inc
pop
mov
movsl
jp
push
sbb
or
cmp
sub
xchg
or
sbb
cmp
adc
and
lds
adc
sbb
insb
mov
push
scas
cmp
lcall
xor
aam
fdivrl
push
sbb
pop
mov
xchg
insb
xchg
add
pop
pop
lods
dec
mov
sbb
or
cmp
sub
fisubrl
ljmp
dec
stos
pop
pop
lods
dec
mov
sbb
or
cmp
sub
fisubrl
lds
fs
clc
dec
or
pop
ss
sbb
pushf
ljmp
imul
shl
movsb
dec
rclb
inc
pushl
aam
dec
aaa
xor
adc
fistpll
inc
xor
mov
lock
leave
cs
mov
mov
fwait
mov
fisttpl
xchg
lret
push
das
mov
xor
dec
lods
gs
pop
and
mov
sub
sub
idivl
ds
xor
push
aam
mov
mov
out
mov
ror
stos
add
dec
das
mov
int3
nop
stc
xchg
movl
mov
mov
or
push
leave
sbb
ja
bound
pop
test
fnsave
jle
test
scas
ljmp
mov
add
shrb
lods
cmp
cmpsl
or
or
testb
cmc
sub
jg
out
xchg
inc
repnz
fldcw
push
lahf
shr
repz
cmpsb
mov
scas
ljmp
fs
js
mov
int
nop
or
mov
pop
push
dec
ss
push
xor
adc
in
loope
lahf
lret
xchg
xor
bound
jne
inc
cmp
dec
testl
outsb
daa
push
fisttpl
push
test
cli
int3
mov
and
jnp
and
push
iret
int
cmp
clc
jg
push
pushf
or
int3
imul
lods
push
jle
movsb
adc
inc
cmpsb
and
cwtl
sbb
sbb
and
out
int
lods
sbb
push
sub
notb
clc
mov
push
xchg
mov
and
or
movl
out
inc
in
cmp
jbe
loop
push
stos
mov
sub
cmpsl
jp
mov
or
and
insb
adc
je
cmp
dec
add
iret
popf
js
int
shlb
out
loop
mov
push
addr16
jns
pop
movsl
mov
mov
sbb
jmp
jg
cld
pop
inc
push
push
popa
in
loope
test
push
inc
xlat
iret
jl
or
mov
cmc
and
xchg
lods
das
xor
cmp
add
ss
push
fwait
test
add
outsl
or
jns
lds
inc
out
push
mov
shlb
rcll
push
ror
adc
les
xor
nop
push
sarl
or
lfs
lcall
loop
mov
pop
mov
loop
xchg
mov
dec
aaa
pop
stc
pop
sbb
push
insb
scas
jmp
nop
aaa
das
adc
test
mov
imul
cmp
jge
aaa
gs
pop
dec
sti
xchg
fldcw
mov
lahf
outsl
pop
aaa
rcrl
daa
aaa
jg
outsb
mov
insb
out
fmul
das
dec
outsl
and
cltd
ja
out
jmp
inc
xor
shll
inc
and
dec
sub
fcmovnbe
loope
test
sub
jle
fisubrl
cmp
data16
pop
add
mov
aam
jno
lahf
imul
sub
data16
sbb
or
int3
push
push
rcrb
gs
in
xchg
insb
xchg
mov
dec
clc
adc
inc
sbb
add
adc
popf
movsl
lahf
add
test
and
outsb
and
pop
mov
les
test
mov
cmp
mov
enter
or
test
mov
aam
add
lahf
mov
and
fmul
lock
jb
aaa
mov
mov
loope
pop
sub
jne
aam
lock
in
in
push
mov
mov
lods
or
xchg
repz
jbe
clc
mov
or
inc
adc
xchg
test
mov
jecxz
aaa
in
sub
pop
inc
stos
inc
dec
fadd
cwtl
mov
mov
jp
lret
testb
cmp
push
in
adc
or
das
jg
adc
pop
add
fwait
or
xchg
mov
inc
mov
push
xor
jbe
mov
lods
cmpsl
out
push
in
and
fildl
jne
xor
push
push
or
es
orb
add
js
mov
mov
ror
pop
inc
incl
enter
mov
pop
std
loope
arpl
push
adc
aam
mov
xlat
in
repz
mov
rclb
stos
jmp
rcrb
lret
into
adc
mov
fdivs
outsb
mov
mov
mov
sbb
cmpsl
pop
add
lods
push
or
pop
xor
push
xchg
inc
mov
dec
gs
es
pop
xchg
into
enter
movsb
outsl
call
loopne
fistpl
and
or
lods
in
aam
xchg
rol
adc
js
push
xchg
xchg
xchg
push
cmp
rcll
jns
mov
ja
jge
xorl
ror
xchg
adc
sub
pop
or
pop
outsl
sbb
mov
push
mov
inc
addr16
mov
fsts
insl
jecxz
jbe
add
and
jle
and
xchg
adc
and
sub
and
sub
stos
call
in
mov
dec
iret
sub
push
add
sub
cld
xchg
cltd
jbe
out
in
jmp
fnstsw
sub
bnd
inc
fsubl
lock
int3
mov
push
cmp
inc
adc
and
cld
sbb
jp
xchg
pop
orl
into
out
pop
aam
sbb
sahf
dec
push
inc
aas
mov
sarl
sbb
pop
mov
stc
iret
fistps
out
scas
dec
cltd
mov
jb
fsts
in
hlt
xchg
loopne
stos
arpl
push
nop
faddp
fadd
adc
and
pusha
xchg
js,pn
and
call
inc
adc
and
subl
or
or
xlat
test
sub
add
int3
rcl
mov
dec
and
push
call
cmp
movsb
xor
xchg
clc
cli
xor
rolb
lret
gs
mov
das
js
push
xchg
js
sbb
xchg
mov
dec
outsl
fcompl
pop
ret
outsb
clc
xor
sti
sub
push
test
jecxz
inc
aam
cmpsb
mov
mov
sahf
xchg
data16
in
sub
adc
xor
negb
push
cmp
lret
xor
cmpb
xchg
fistl
fsubs
movsb
les
sar
dec
sub
mov
adc
inc
neg
stos
push
mov
sub
scas
jae
pop
jmp
daa
stos
jne
int
je
shrl
outsb
cmp
inc
clc
mov
aaa
lcall
sbb
push
fstp
fstpl
lods
adc
andb
dec
leave
mov
add
js
xor
mov
lds
into
pop
into
mov
dec
adc
test
mov
test
cmpsl
cmpsb
in
dec
mov
insb
or
lock
les
cmpsl
pop
jns
repnz
jecxz
lret
push
into
add
daa
mov
outsb
jae
jo
pop
hlt
pop
movsl
cmp
xor
mov
lahf
aaa
xchg
sbb
dec
jo
jae
imul
hlt
cwtl
jo
sbb
insb
insl
ljmp
cs
dec
mov
inc
loopne
int
ljmp
pusha
fidivs
loope
xchg
xor
outsb
push
sub
dec
repz
mov
fldcw
rcl
or
adc
es
addr16
pop
push
mov
xlat
xchg
adc
mov
int3
sub
out
or
bound
ftst
insl
sub
push
push
subl
dec
lea
mov
stc
jmp
sub
inc
hlt
or
mov
push
int
lods
dec
inc
mov
mov
dec
pop
arpl
inc
aad
jbe
cs
int
out
add
sbb
dec
stos
jo
xchg
gs
fucom
arpl
jb
adc
push
pop
fcompl
push
mov
movsl
adc
xor
lds
cmp
and
lods
out
enter
jne
push
jecxz
pop
popa
icebp
bound
cwtl
test
mov
jb
packsswb
ss
cmp
mov
mov
xor
jp
push
jmp
xor
sub
cmp
jns
mov
add
xor
fisttpl
enter
lods
sub
js
es
orl
imul
inc
out
pop
fcmovbe
addl
xchg
insb
mov
mov
cmp
inc
mov
add
add
fstpt
or
sbb
xor
enter
lret
adc
fistps
mov
cmp
cltd
add
cmpsb
dec
flds
mov
flds
cwtl
loopne
dec
mov
dec
push
leave
cmpsl
lret
push
js
leave
stos
mov
push
cmpl
leave
pop
imul
add
add
es
mov
lea
xchg
test
jae
test
xchg
lds
loop
fisubs
xor
rclb
imul
push
sub
xchg
jo
pusha
sbb
fisubrs
and
jmp
lret
aaa
pushf
cwtl
xor
and
inc
lahf
mov
lods
sub
xor
bound
loop
add
push
fdivrs
jae
xchg
test
xlat
int3
push
cmpsl
scas
cmp
movsl
pop
mov
int3
mov
or
cmp
pop
inc
lret
incl
mov
in
lea
fidivs
sbbl
lret
adc
add
enter
out
xchg
out
add
mov
push
lret
xchg
inc
fucomip
es
out
mov
jl
push
mov
mov
push
jmp
pushf
mov
cmc
add
dec
pop
pop
cmp
es
ljmp
mov
test
add
dec
and
cmp
sub
arpl
fbld
jg
inc
out
inc
sub
test
cmp
leave
or
test
jl
iret
aas
aad
jge
int
fidivl
xor
fsub
lret
lea
scas
pop
cli
jg
std
push
jbe
xchg
pop
sarl
pusha
push
xor
aad
mov
xlat
sbb
dec
rclb
ret
inc
jle
imul
mov
pushf
adc
aas
mov
push
xor
test
loop
fadds
loope
mov
mov
lods
popa
jbe
stos
out
mov
push
sbb
push
sub
fcomip
loop
pusha
and
mov
mov
dec
push
pop
add
inc
mov
cwtl
push
sub
fistpl
xor
xchg
aam
not
lret
das
inc
dec
add
hlt
push
pop
sbb
ffreep
enter
inc
stc
mov
mov
fwait
cmc
inc
test
push
add
xchg
xchg
cmp
fidivrs
jecxz
popa
push
aaa
jge
negb
insl
ljmp
dec
jp
or
xor
push
shlb
popl
cmp
cmpsl
cmpsl
pushf
inc
sbb
sub
sti
addb
xor
mov
or
jmp
fisttpl
push
dec
sahf
pop
push
adc
push
stos
mov
sbb
mov
insb
sub
xor
gs
test
flds
int
or
mull
add
repnz
jb
pushf
hlt
pop
xchg
ljmp
cmp
sub
js
push
jae
or
mov
in
cmc
icebp
push
das
add
adc
fucomip
inc
cmp
pop
xchg
xchg
andb
rclb
adc
es
loope
aas
pop
rcrb
xchg
mov
rorl
add
imul
ffreep
and
push
test
dec
loopne
loope
loope
push
add
aad
fistps
ljmp
jmp
aas
es
stos
ss
es
jge
out
mov
inc
nop
sub
in
pop
adc
or
test
out
outsl
fmull
lock
scas
cmp
jb
ds
jl
js
push
jbe
rcl
mov
inc
jge
out
test
lret
stos
repnz
and
lock
cmp
pop
inc
inc
repz
xchg
push
test
lock
cmp
les
push
mov
in
mov
dec
cmpsb
fisubrl
call
mov
pop
sub
xchg
dec
push
das
test
fbld
outsb
mov
stc
test
jnp
bound
mov
int3
xchg
js
mov
ss
rorb
adc
inc
test
je
cli
cld
test
adc
lods
jle
dec
xlat
push
xor
sub
fdivrs
mov
pop
sub
ret
jb
in
enter
ja
out
loopne
out
aam
sbb
insb
and
idivl
and
sahf
jecxz
bound
mov
enter
rcr
jmp
inc
add
sqrtps
pop
test
mov
and
and
cmp
lods
dec
sbb
scas
in
adc
cmp
loop
cmc
popa
dec
add
mov
sbb
bound
in
xor
shl
mov
inc
mov
add
mov
cs
mov
sbbl
scas
or
jecxz
jecxz
mov
xlat
inc
or
pop
loope
aam
mov
out
arpl
je
inc
not
sbb
mov
cld
out
ret
sar
and
mov
cmp
mov
lcall
or
xchg
mov
inc
xchg
in
insl
xchg
out
repz
dec
outsb
dec
adc
mov
adc
nop
enter
imul
jecxz
subb
sub
or
stos
lret
in
inc
rcr
pop
mov
out
out
mov
loopne
loope
roll
and
roll
dec
popw
out
insb
rcl
jne
stos
outsb
jg
aas
mov
jns
cs
scas
jns,pt
pushf
stos
insl
int3
sbb
mov
sti
sbb
out
add
xchg
cmp
mov
stos
mov
mov
push
iret
ret
mov
shll
or
daa
push
iret
mov
push
mov
lahf
push
fstps
ja
push
hlt
xchg
dec
adc
insl
out
xchg
lahf
jb
fwait
pusha
xlat
leave
xchg
xchg
xchg
outsl
add
loope
rclb
aad
lods
nop
rorb
pusha
inc
mov
jmp
mov
notb
push
loope
aad
mov
repnz
test
imul
inc
ret
cmpsb
clc
iret
enter
out
addr16
push
jle
adcb
repz
rol
pop
push
sub
sbb
js
adc
push
sbb
ret
scas
inc
adc
icebp
inc
xchg
sub
subb
jb
jg
lods
dec
add
pop
aam
mov
shrl
add
clc
and
pop
sub
and
std
into
addr16
mov
mov
pop
add
xor
movsb
cwtl
fcom
lret
cmp
shrl
adc
pop
pop
mov
inc
imull
pusha
cmpsb
imul
and
or
cmc
test
sub
xchg
jb
addb
cmp
cltd
sub
fwait
cmp
fwait
neg
mov
mov
mov
outsb
jne
mov
iret
xor
subb
mov
loopne
lahf
ljmp
sub
mov
mov
pop
scas
jno
imul
add
outsb
js
rcll
out
stos
idivl
xchg
in
mov
xchg
jae
scas
push
cmpsb
mov
scas
fmuls
cmp
das
jne
adc
dec
xchg
bound
push
rorl
or
adc
lea
cmp
sarl
roll
popf
push
ds
nop
inc
jecxz
adc
push
or
mov
push
add
mov
xor
test
icebp
jg
loop
dec
roll
ficompl
fwait
shrb
fldl
sub
lods
pop
aam
mov
std
repz
mov
xor
push
dec
xchg
or
ret
rcll
cmp
add
fidivl
outsb
mov
add
into
jbe
fiadds
test
xchg
sub
and
lahf
mov
mov
pop
jmp
dec
sub
and
fcmovnu
pop
repnz
mov
pop
push
add
cli
loope
xor
imulb
loopne
cmp
sahf
push
ljmp
or
pushf
stc
jbe
mov
js
adc
and
dec
adc
in
sbb
je
inc
mov
iret
daa
xlat
shlb
xor
sub
scas
xchg
push
lods
cmc
in
xor
xchg
xor
lcall
mov
jbe
push
xchg
push
cmp
or
mov
sbb
push
sbb
dec
repz
and
mov
aam
roll
sub
std
aam
mov
iret
imul
pop
dec
and
add
cld
or
jmp
out
push
and
aas
js
sub
cli
pop
add
jne
lret
mov
jb
xor
jbe
mov
cmc
dec
loopne
pop
and
jno
lods
push
inc
bound
mov
ret
cmp
jae
aam
mov
sahf
popl
in
shll
jno
out
inc
sub
int
xchg
clc
sbb
addr16
lret
cmp
js
je
and
sti
daa
ss
test
les
mov
loopne
inc
pop
add
stos
int3
das
int
dec
pop
rorb
dec
or
pop
inc
loopne
mov
mov
std
fsubl
jo
push
loop
jle
inc
loope
cmp
cld
cwtl
test
jb
inc
sub
sub
imul
jns,pt
into
cli
dec
mov
dec
shlb
mov
or
out
stos
adc
int
push
jnp
daa
sub
mov
mov
imul
mov
loopne
sahf
or
imul
adc
popf
jmp
jg
mov
jne
cwtl
and
sbb
cld
leave
xor
and
pushf
dec
mull
cmp
mov
rcrl
cmove
call
xchg
je
aas
add
pop
mov
xchg
dec
mov
pop
ljmpw
push
cmp
mov
ss
dec
sub
test
cmp
or
pop
mov
xchg
xchg
sbb
rcl
repz
jmp
cmp
scas
push
mov
sbb
je
adc
jae
jnp,pn
jno
dec
js
dec
movsl
or
cmpsb
and
adc
push
add
into
lock
into
insb
sbb
ret
push
int3
js
bsf
loopne
fistpl
inc
or
mov
mov
inc
mov
push
mov
std
gs
sbb
es
mov
mov
icebp
mov
inc
sub
or
jle
and
push
mov
hlt
adc
je
fnstenv
fidivl
xchg
iret
call
lahf
ds
je
lret
push
out
enter
aad
jge
rcl
dec
and
mov
xor
xor
sub
cli
xchg
inc
insb
scas
jne
popa
lahf
sbb
cmp
sbb
dec
stc
cltd
add
mov
xchg
or
fisttpl
shlb
sub
lock
mov
inc
xor
or
leave
add
push
mov
fisubrl
iret
fisttpl
mov
mov
gs
mov
push
scas
xchg
call
mov
enter
loope
mov
outsl
xor
out
in
inc
in
les
jno
loopne
push
cmp
movsb
mov
or
xor
push
mov
fsubl
or
xchg
adcl
enter
jne
xor
cmpb
shlb
icebp
popf
xchg
adc
cmp
push
and
arpl
das
testl
sarl
xor
adc
cld
and
lret
push
test
and
push
or
mov
mov
nop
ret
icebp
arpl
loope
loopne
fwait
mov
test
mov
idivb
lods
sub
cwtl
mov
scas
sub
and
cmpsb
xchg
lods
sub
jecxz
scas
addr16
repnz
popf
bound
lock
xor
inc
fcomps
jg
lret
lock
jbe
es
lahf
mov
imul
push
enter
leave
ja
jp
add
aad
jbe
dec
inc
je
add
inc
adc
mov
outsb
inc
icebp
cmc
cwtl
test
gs
push
push
mov
in
pop
iret
dec
xlat
push
rclb
ss
adc
jl
stc
loop
mov
adc
mov
jb
dec
aaa
xchg
lahf
scas
loope
adc
aas
cs
adc
mov
pop
ds
xchg
xchg
movsl
roll
fsubs
clc
adc
push
hlt
enter
mov
cwtl
nop
mov
scas
enter
mov
dec
popa
xchg
mov
jg
fisttps
mov
xchg
push
fildl
push
js
das
ljmp
xchg
das
and
lods
loope
pop
push
repz
mov
int
sahf
cmpsl
xor
inc
and
mov
out
push
sahf
xchg
loop
ret
adc
rorl
out
inc
xchg
jl
mov
xor
test
adc
outsb
clc
je
inc
push
idivb
lcall
iret
shrl
imul
fsubrl
das
mov
lret
mov
xchg
cltd
mov
aas
xorb
and
push
jecxz
push
jecxz
push
lods
mov
popa
mov
xchg
cmc
into
pop
adc
adc
test
pop
sbb
push
add
loop
pop
xchg
test
jnp
cmp
lcall
add
push
jg
lcall
js
sbb
cmpsl
pop
lea
sub
xor
mov
mov
or
rcrl
out
and
clc
push
lcall
cmp
lcall
pop
pop
lods
dec
mov
sbb
or
cmp
sub
fisubrl
ljmp
dec
stos
pop
pop
lods
dec
mov
sbb
or
cmp
sub
fisubrl
ljmp
dec
sub
lods
dec
mov
sbb
or
cmp
sub
fisubrl
ljmp
dec
stos
pop
pop
lods
dec
pop
rorb
jp
dec
xor
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
dec
dec
pop
sbb
jge
or
or
push
orl
std
cli
lea
lods
mov
add
jp
or
adc
lret
mov
std
cli
int
popf
lcall
scas
pushf
push
movsl
or
cmp
xor
cmp
stc
test
out
cld
stc
fsub
fisubs
push
adc
insl
cmp
or
push
sti
mov
and
enter
test
dec
mov
test
pop
popf
xchg
mov
xor
add
lods
and
mov
sbb
sbb
imul
fimull
popa
fwait
lret
clc
jmp
add
jns
data16
jge
dec
xor
jp
push
sbb
mov
dec
fnstsw
imul
mov
cmpsl
dec
xchg
loopne
icebp
cmp
in
jmp
mov
push
stc
mov
mov
shlb
inc
hlt
jmp
cltd
add
into
fildll
or
push
jge
jmp
sub
jb
call
xchg
je
mov
mov
das
xor
bound
cmp
stos
mov
cltd
dec
repz
roll
or
sbb
sbb
fs
js
fadds
or
mov
repnz
xor
pop
inc
sbb
cmp
lret
in
ljmp
lods
stos
mov
pop
insl
push
jp
or
cmp
lret
in
ljmp
lods
stos
mov
or
pop
mov
stc
aad
ljmp
bound
inc
setl
aad
movsl
jl
icebp
sbb
sub
test
and
push
xlat
lods
pusha
adc
add
fwait
push
fwait
add
repnz
mov
lret
pop
lea
mov
cmp
call
test
add
and
sub
xor
mov
xchg
fmuls
pop
mov
lahf
xchg
pushf
out
pop
adc
push
lret
movsl
paddw
je
cmp
xchg
xlat
mov
cld
or
lods
mov
and
mov
lret
test
mov
out
std
xor
fstp
lret
enter
and
xchg
or
xor
push
xchg
mov
scas
int
cs
fadds
mov
cmpsb
sub
jmp
daa
in
push
int3
jmp
mov
mov
xor
lods
dec
xchg
hlt
clc
push
out
arpl
push
iret
mov
into
cwtl
ret
xlat
xchg
popa
inc
aas
aad
std
repnz
in
sbb
xor
mov
inc
pop
divl
aas
pop
iret
push
or
stos
ja
in
dec
out
sarl
cmpsl
push
mov
cld
cli
test
jmp
test
cmc
xorb
int3
xor
cmp
sti
cli
ljmp
adc
movsb
cmp
mov
xchg
int3
sbb
pop
adc
fwait
and
cs
es
in
aam
dec
out
sbb
mov
pop
leave
cmp
les
scas
xadd
jb
add
shlb
push
jno
push
lahf
leavew
arpl
cmp
cli
or
shll
fistpl
aas
jmp
out
push
gs
ret
cmp
lret
push
mov
push
pop
daa
inc
mov
daa
iret
add
cmp
mov
adc
sub
sub
ja
sub
jns
bound
cmp
add
cwtl
lods
or
leave
push
out
stc
shll
das
repz
dec
subl
xchg
fldl
xchg
hlt
mov
ja
sti
sub
inc
insb
pop
icebp
xor
test
mov
mov
xor
movsl
mov
loop
cmp
sub
je
or
dec
lcall
notb
or
xor
xchg
mov
cmp
movsl
cmpsl
xchg
stos
mov
mov
or
jb
dec
push
pop
xchg
aad
les
mov
xchg
lds
sahf
es
or
push
cmp
or
pop
mov
pop
jnp
pushf
lock
lret
sahf
add
fs
push
ss
pop
fildll
ja
push
inc
fsts
jno
fisubrl
add
sahf
cld
pop
mov
push
cmc
jg
pxor
js
dec
jecxz
jge
and
push
dec
xchg
sub
scas
add
movb
call
mov
xchg
jne
jns
xchg
dec
lock
in
out
and
cmp
xor
and
stos
outsl
jne
fs
push
xor
adc
sbb
add
cwtl
mov
push
cs
ja
imul
dec
adc
shl
pushf
mov
sub
inc
shll
jae
push
je
icebp
test
fcmovne
mov
mov
xchg
sub
aas
shrl
add
pop
and
daa
fs
jecxz
fs
popf
pop
rorb
pop
pop
call
xchg
inc
lret
push
xlat
frstor
orb
ds
cs
add
jmp
inc
sub
movsl
aas
fisttpll
fcomps
negb
aam
loope
add
jg
adc
mov
add
add
mov
pop
fs
repz
test
mov
test
xchg
insb
in
mov
mov
stos
jne
jae
or
gs
push
sub
rcr
shrb
push
or
into
sbb
dec
imul
xor
mov
or
lea
out
xchg
in
fstpt
mov
mov
cmp
jmp
cmpsl
inc
xor
adcl
sbb
jmp
push
or
cs
jo
shr
mov
cwtl
xchg
jmp
lock
xchg
mov
lds
push
mov
arpl
lea
pop
pop
push
test
sbb
inc
int
into
jecxz
rorb
add
adc
clts
js
sub
adc
stos
dec
push
sbb
shr
popa
push
pop
add
into
out
push
fiaddl
sub
cmp
out
add
mov
aad
es
ds
jno
jns
jnp
adc
lock
push
cmp
and
ret
adc
jle
mov
cmpsb
sub
sbb
dec
xchg
mul
inc
sub
fcomps
leave
stos
ljmp
pop
mov
out
add
jp
push
aam
imul
lret
pop
rorb
pushf
dec
sbb
xchg
mov
mov
rorb
jge
add
loopne
or
testl
lods
icebp
lods
dec
sub
repnz
daa
mov
cmc
std
negl
mov
into
sub
add
push
jo
xchg
enter
mov
inc
imul
mov
aad
and
adc
inc
inc
dec
or
pusha
out
xchg
mov
ja
mov
mov
pop
pop
sbb
imul
jg
push
cmp
adcb
sub
mov
or
ret
inc
lds
dec
clc
jecxz
cmp
ret
mov
das
hlt
lcall
add
arpl
or
les
push
push
jns
pop
and
sbb
cs
pop
int
mov
fidivrl
mov
enter
enter
call
mov
pop
jmp
xchg
ljmp
cld
hlt
xor
aad
xchg
test
out
int3
sti
fsub
js
aad
pop
loop
xor
adc
lcall
jecxz
ret
cmpsb
lods
and
mov
mov
and
movsb
mov
lret
adc
stos
sub
lods
aad
jbe
jnp
xor
ret
test
das
push
mov
xchg
jnp
xchg
xchg
lods
xchg
imul
mov
pushf
sahf
cmp
push
mov
add
sbb
lock
add
sub
mov
call
nop
inc
inc
inc
andnps
sbb
leave
icebp
cwtl
jg
xchg
add
dec
inc
inc
popa
add
inc
in
jne
bound
inc
fwait
add
fnstenv
and
cmc
push
cmp
xchg
jmp
cmp
sbb
add
fcmovbe
shrl
hlt
lret
test
scas
pop
jnp
push
rolb
mov
mov
fistpl
rorl
xchg
dec
jae
rcr
pop
add
xor
test
mov
ss
jb
mov
push
dec
sbb
mov
inc
xor
pop
mov
and
push
inc
sbb
fs
push
push
sub
mov
xchg
push
mov
pop
test
out
sub
test
pop
repz
negb
mov
push
xor
rol
pusha
cmc
adc
scas
add
mov
inc
in
mov
cmp
sub
push
sbb
hlt
sbb
rolb
fs
add
pushf
jg
in
mov
push
outsl
cltd
and
ret
pusha
mov
subl
mov
cmc
mov
xor
jle
inc
mov
inc
pop
cmp
push
and
push
and
and
iret
and
arpl
in
push
dec
fcmovu
push
arpl
push
scas
jae
ret
mov
hlt
fidivs
mov
dec
add
sbb
stc
dec
jp
mov
test
hlt
pop
movsl
adc
ret
mov
cltd
sti
sbb
adcl
lock
lahf
stos
jecxz
xchg
mov
push
cld
loop
call
lds
cmc
aad
stos
call
adc
roll
int3
bt
jge
cmpsl
repz
mov
mov
mov
sub
or
xchg
insl
jno
imul
cwtl
push
mov
mov
popf
scas
jg
mov
jne
mov
adc
ljmp
int
mov
stos
ja
sub
js
bound
cmp
aas
cmp
cli
dec
mov
sub
mov
add
adcb
cmp
inc
ljmp
mov
insl
scas
mov
out
add
shlb
mov
or
loopne
ja
add
adc
stos
fimuls
sbb
jecxz
sub
fs
cmpsl
xor
push
push
iret
call
pop
mov
cmp
imul
mov
bound
ja
arpl
pop
sub
inc
xchg
imul
add
pop
repz
jnp
call
and
inc
in
cli
repnz
and
inc
xor
int
lock
stos
movsb
std
xor
div
dec
inc
movb
xor
sbb
pop
push
cltd
outsb
scas
daa
scas
mov
popf
lods
bound
mov
out
addr16
mov
out
pusha
cmp
gs
icebp
into
or
ficoms
cli
push
sbbl
lret
pop
aad
clc
pop
mov
jg
ds
lret
inc
xchg
adc
cld
int
xor
sarl
jno
inc
jg
ss
pop
and
fmulp
rol
jmp
pusha
ds
pop
les
or
sbb
shll
sbb
test
mov
inc
insl
xchg
scas
jnp
mov
das
xchg
sbb
xchg
call
inc
push
loop
dec
subl
inc
xchg
int
pushf
pop
jg
in
sub
push
sbb
xlat
inc
inc
push
out
addr16
scas
lock
cmp
xchg
mov
sbb
sbb
and
and
adc
lods
repz
notl
push
mov
add
mov
mov
inc
add
inc
push
iret
jp
addr16
aaa
enter
or
cmp
pushf
mov
and
sbb
pop
fidivrs
test
es
test
adc
pusha
aaa
inc
cmp
push
ja
add
sub
xor
sbb
lret
add
inc
mov
dec
sar
xchg
inc
push
inc
test
xor
out
cmp
lret
pop
inc
xchg
add
lea
xchg
mov
jo
repz
testl
lock
xchg
cmpsl
inc
push
aad
out
jle
stos
das
in
shlb
xchg
int
dec
pop
in
sti
and
xor
cli
loope
sbb
jp
cli
pop
cmp
mov
clc
add
cli
out
xchg
inc
xchg
inc
push
sbb
push
dec
mov
fsubl
ficomps
mov
subl
lods
push
inc
add
lods
test
pop
mov
sbb
mov
insl
insl
sub
out
lahf
mov
inc
add
lret
js
sbb
dec
fwait
inc
adc
fldcw
movsl
xlat
loope
cmp
mov
jle
popf
xchg
xor
pop
cmpsl
aad
rcl
jle
into
in
xchg
add
lcall
ja
insl
lea
int
sbb
cmpsb
in
mov
xor
mov
inc
mov
in
in
insb
xchg
ret
dec
push
pushf
push
je
push
nop
js
cwtl
cmp
orl
fwait
mov
xchg
imul
jae
xor
mov
pushw
loopne
jbe
fists
dec
push
lods
cmp
pop
imul
scas
fdivrl
or
xchg
int
int3
dec
cmpsb
mov
mov
shr
sub
mov
xchg
icebp
lock
std
dec
xor
jbe
dec
mov
repz
jnp
mov
cmp
pop
loopne
imul
mov
les
and
xor
pop
mov
out
into
std
mov
mov
loope
mov
aas
std
aaa
ss
lock
int
pushf
in
adc
data16
outsb
pop
pop
push
mov
rcl
and
push
pop
jno
sbb
in
sbb
orl
ss
jb
add
xchg
xchg
dec
aam
mov
fxch
jmp
jl
jae
push
hlt
test
neg
aas
xor
pop
mov
mov
roll
mov
daa
or
imul
cld
outsb
insb
xchg
jbe
cmpsl
adc
fcmovu
inc
push
sbb
xor
addb
cmp
pop
mov
sbb
and
mov
sbb
mov
mov
or
push
push
int3
test
jns
scas
outsb
jmp
jne
lea
cmp
ret
sbb
add
pushf
add
gs
xchg
mov
lods
add
dec
xor
mov
dec
mov
insb
cld
sub
ss
scas
push
cld
int
and
dec
movsl
sbb
inc
push
push
cmpb
dec
mov
hlt
mov
ja
or
sti
pop
or
cmp
adc
out
lcall
push
mov
je
aaa
inc
xlat
sti
stc
shr
pop
push
inc
jp
mov
cmp
aad
loopne
inc
xchg
adc
add
add
mov
xor
jle
fidivrs
test
push
fcomps
rcrl
mov
sbb
and
and
bound
mov
xor
clc
stc
dec
sbb
ja
push
rcl
out
mov
ret
mov
push
pop
insl
aam
aam
pop
leave
sbb
ret
test
mov
sub
movsb
popf
jb
xchg
pop
xchg
mov
mov
jl
int3
inc
mov
fs
test
fistps
mov
stos
out
lcall
cmpl
inc
sub
and
out
pop
pop
movsl
xchg
adcb
add
add
pop
stos
enter
pop
xor
fistpl
xchg
jle
rorb
push
loopne
aam
mov
fwait
je
jmp
mov
test
xchg
pop
jmp
jmp
aam
fcmovu
call
or
inc
xchg
mov
xchg
mov
subb
xor
repz
jno
pop
jge
jbe
pop
adc
mov
es
nop
sti
and
and
jle
dec
movsl
or
cmp
insl
jp
mov
jne
out
inc
rcll
push
mov
and
loopne
mov
mov
stos
fwait
and
xor
cmpsl
out
inc
push
add
pop
dec
xchg
pop
fidivrl
xchg
push
lea
mov
pop
out
test
xchg
xchg
scas
push
rcrb
or
xor
xor
sbb
fnop
es
xor
mov
es
push
clc
inc
out
fcomps
adc
push
add
sbb
and
dec
xchg
fnsave
movsl
push
cmc
imul
sbb
jne
cwtd
bound
sarb
ror
cs
insl
lods
inc
hlt
fs
xchg
out
ds
xchg
das
mov
push
dec
mov
pop
jno
mov
sbb
dec
cmpsl
pop
insl
ret
push
pop
mov
mov
pop
das
mov
fcmovb
cld
rcrb
cmp
xlat
in
or
mov
xchg
sub
icebp
in
shrb
mov
fldpi
imul
push
out
xchg
or
mov
repnz
sub
mov
push
mov
aam
xor
mov
add
jle
jg
inc
xor
cmp
int3
scas
xchg
lds
lea
sbb
adc
or
shrb
iret
out
lret
mov
int
fwait
and
sub
cmp
ret
cld
cmc
adc
mov
cld
gs
ret
cmp
adc
mov
and
arpl
ret
rcll
adc
sub
and
or
popf
cld
mov
dec
in
jmp
cmp
xor
jg
lods
notb
push
sbbl
mov
dec
adc
jle
leave
jae
pop
ficoml
mov
xchg
arpl
jnp
rclb
and
dec
sub
mov
test
add
mov
jae
push
cmp
dec
jle
xlat
lret
cltd
shrl
int3
outsb
in
movsb
dec
mov
jb
and
adc
mov
cmpsb
mov
or
sub
push
jne
and
adc
xlat
dec
jl
inc
inc
rol
jbe
cmpsb
lods
inc
jp
repnz
pop
or
jns
sub
enter
stos
aad
lcall
arpl
ret
push
adcl
mov
adc
fdivrs
repz
shlb
sbb
add
aaa
sbb
push
pusha
ficompl
sbb
es
js
mov
jb
cld
jmp
mov
daa
dec
out
sarb
cld
pop
lods
int3
lock
jns
mov
adcb
sahf
dec
mov
cmp
imulb
hlt
test
pop
mov
pop
mov
mov
lods
xchg
lods
xor
cmp
add
ja
pop
int3
inc
lods
imul
lahf
mov
rcll
es
adc
lods
cmp
jl
sub
mov
insl
in
popf
or
xor
and
adc
pop
dec
jg
into
aas
mov
test
nop
xor
mov
and
mov
xchg
mov
pop
loope
xor
nop
lahf
incl
or
jb
lcall
push
cmc
add
les
cmp
ljmp
push
sti
mov
test
push
stos
into
rorb
pop
sbb
pop
fldt
mov
sub
insb
mov
arpl
insl
fcoms
push
fcomi
or
aad
push
and
loope
sub
hlt
cmp
loope
fldt
dec
nop
ret
sub
or
mov
rcrb
push
inc
xor
adc
push
dec
push
call
or
dec
int3
hlt
xor
or
or
pop
insb
xchg
rorl
mov
jge
cmpsb
sbb
mov
arpl
enter
mov
mov
push
repz
pusha
aas
popa
jo
cmp
mov
enter
loope,pn
ds
jg
movsb
and
sbb
mov
cmp
repnz
rcrl
sub
ljmp
push
jns
inc
dec
test
pushf
icebp
fstpl
fcmovnbe
mov
icebp
call
pop
ss
xchg
sbb
imul
push
jne
out
mov
imul
xchg
aam
cmpsl
jbe
xchg
dec
pop
lds
pop
mov
les
dec
in
inc
or
mov
dec
roll
mov
mov
push
push
xlat
movsl
push
sbb
jmp
add
cmp
dec
mov
ret
sub
xor
mov
test
fsubrs
dec
lcall
adc
xchg
imul
and
jne
pop
jns
in
aaa
clc
test
xor
dec
sbb
xor
imul
dec
out
cmpsb
sbb
adc
and
ret
in
out
mov
lret
mov
stos
shrl
jge
imul
jecxz
sub
sti
pop
push
xor
arpl
push
sbb
std
cmp
cmp
ret
into
jmp
add
cld
out
and
pop
loope
cmp
iret
push
sahf
sar
and
xchg
mov
push
into
scas
cltd
fnstsw
test
push
jmp
jp
outsl
outsb
add
int
mov
lock
test
dec
inc
cmpsb
loopne
sahf
in
lcall
xchg
add
jp
push
jle
sub
mov
cmpsl
or
push
xchg
iret
inc
xor
sub
push
insb
mov
stc
dec
jb
aam
adc
cmp
jg
xor
fidivrl
clc
and
pushf
jmp
xchg
add
cs
daa
shrl
lret
inc
sub
imul
out
ja
inc
scas
cmp
inc
cmp
cmp
lods
mov
adc
inc
sbb
add
nop
into
xchg
outsb
out
push
or
pusha
jae
ds
in
jb
stos
es
or
push
fs
enter
pop
in
stos
mov
push
in
movb
adc
movsl
jns
cmp
ficoml
dec
cs
push
lea
cs
test
dec
imul
mov
imul
cld
sbb
sub
jno
push
mov
and
push
push
jle
in
lahf
and
pop
xchg
pop
jo
cs
pop
ds
cmpsl
pop
jmp
and
neg
inc
inc
push
je
mov
pop
cmp
xchg
mov
dec
sbb
fdivrs
sti
push
sbb
test
orl
push
pop
or
iret
fstps
sub
out
loope
outsb
hlt
pop
cltd
cmpsb
mov
call
dec
mov
or
das
nop
inc
xchg
push
pop
ljmp
mov
pop
fmuls
push
lock
adc
enter
jecxz
mov
dec
mov
sbb
cmp
mov
scas
arpl
xchg
aas
xor
es
sub
addr16
sbb
ret
inc
adc
push
inc
pop
rcrl
jge
or
sub
ljmp
lods
stos
mov
pop
insl
push
jp
or
cmp
lret
in
ljmp
lods
stos
mov
push
or
or
cmp
lret
fstp
sbb
mov
pop
pop
scas
add
or
stos
mov
jo
ljmp
push
rolb
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
