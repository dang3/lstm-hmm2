push
push
lds
push
and
mov
push
inc
les
push
les
or
scas
add
add
add
add
add
add
add
add
add
add
add
mov
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
str
add
add
add
xchg
or
add
std
add
add
add
add
add
jbe
or
cmc
add
add
add
and
add
test
push
add
add
movl
push
add
verw
add
add
push
add
add
int
add
roll
add
add
add
add
add
add
test
pop
add
push
add
add
xchg
add
add
add
add
add
add
add
add
or
add
add
mov
add
add
or
mov
add
add
add
outsl
add
add
or
add
add
add
add
add
add
add
pop
add
or
or
mov
push
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
inc
add
add
add
imul
add
mov
add
outsl
add
add
or
or
or
inc
add
add
or
in
add
add
or
jle
add
mov
or
sti
add
add
add
mov
add
add
push
add
lldt
add
add
push
add
add
aam
pop
add
mov
or
testb
add
or
add
or
mov
or
jne
add
add
or
push
add
add
add
add
add
add
add
add
add
add
or
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
or
cmp
ja
push
add
add
adc
add
ljmp
add
push
push
push
push
push
sbbw
subl
xor
sbbl
sbbw
call
addl
test
jne
pushl
popl
ret
sbbl
push
addl
orw
push
subb
push
popl
mov
push
sub
and
popl
mov
pusha
subb
subl
call
push
popl
mov
push
popl
push
pushl
popl
sbbl
nop
addw
movl
andl
movl
nop
movb
addl
push
popl
push
push
popl
call
subb
cmpl
je
push
popl
cmpl
je
subl
cmpl
jne
push
popl
call
pushl
popl
subl
jmp
pushl
popl
xor
pushl
popl
mov
subl
shl
push
xor
add
popl
mov
push
popl
mov
orl
orb
cmp
jne
orb
call
orl
popa
orl
xorl
pusha
pushl
popl
call
sbbb
subl
mov
orb
push
popl
push
pushl
popl
push
popl
nop
sbbl
push
popl
movl
addw
nop
push
sub
add
popl
mov
push
popl
addl
pushl
popl
push
andl
xorw
call
andl
addl
cmpl
jne
push
popl
call
xorb
popa
movw
call
sbbl
push
pushl
popl
push
xor
add
popl
mov
nop
movw
movl
orb
nop
push
popl
addl
addl
push
popl
push
push
popl
addl
call
push
mov
add
popl
mov
push
push
sub
shr
not
mov
add
xchg
push
popl
mov
pushl
popl
shl
xorl
push
popl
push
pushl
popl
pushl
popl
xor
movw
push
popl
push
push
popl
call
push
popl
subw
push
andl
mov
push
or
mov
popl
mov
xorl
push
push
popl
pushl
popl
jmp
push
popl
orb
pop
orw
mov
sbbl
push
subl
push
push
mov
mov
popl
mov
pushl
popl
push
subl
andb
mov
orl
xorl
mov
push
popl
rep
push
popl
pop
movl
sbbl
pop
push
push
add
rol
not
mov
xor
pop
push
add
shl
mov
xor
xchg
movl
xorl
xor
pushl
popl
push
popl
jmp
push
mov
add
popl
mov
push
popl
sub
subb
mov
subl
sub
push
popl
push
popl
sub
movl
mov
pushl
popl
sub
sbbw
push
popl
or
jne
addl
andl
add
push
popl
andl
jmp
subl
mov
movw
and
orl
mov
sbbw
and
sbbb
and
pushl
popl
andw
mov
sbbl
and
orw
jmp
xorb
sbbl
nop
subl
nop
andl
sub
xorw
orb
and
orl
movl
mov
push
popl
andl
and
andl
xorl
and
push
popl
and
push
popl
pushl
popl
and
addw
pushl
popl
cmp
jne
push
popl
push
or
mov
popl
mov
lea
andl
push
or
or
popl
mov
mov
xorw
push
popl
mov
addb
push
popl
and
addl
cmp
je
push
popl
xor
movl
addw
ret
xorw
andl
push
addb
push
popl
xor
andb
sbbb
and
addl
sbbw
mov
push
mov
sub
popl
mov
and
addw
mov
push
popl
pushl
popl
and
addb
mov
push
add
xor
popl
mov
and
orl
lods
movw
and
movw
mov
subw
pop
movl
ret
push
popl
push
push
popl
push
xor
sub
popl
mov
mov
pushl
popl
push
add
and
popl
mov
add
push
popl
subw
push
addl
push
sub
mov
popl
mov
push
subb
push
push
popl
push
push
popl
addl
push
push
popl
push
or
sub
popl
mov
mov
push
popl
xorl
mov
push
popl
sbbb
add
addl
movl
pushl
xorl
push
popl
mov
push
popl
push
mov
and
popl
mov
add
subw
add
pushl
popl
xorb
mov
orl
add
andb
xor
push
popl
lea
xorl
push
mov
xor
popl
mov
mov
push
and
sub
popl
mov
add
push
popl
push
popl
mov
push
popl
xor
orb
rol
push
popl
xor
addl
pushl
popl
inc
pushl
popl
orw
cmpb
jne
push
popl
cmp
je
push
popl
inc
push
or
mov
popl
mov
sbbw
cmp
jb
movw
addw
mov
movl
push
popl
add
xorl
pushl
popl
movzwl
push
popl
subb
mov
movl
add
movw
movb
mov
addl
push
popl
add
push
popl
push
mov
or
popl
mov
pop
push
popl
sbbl
cmp
jbe
sbbl
pushl
popl
cmp
jae
push
popl
pushl
pushl
popl
push
popl
pushl
push
popl
orl
push
xorw
nop
push
popl
movl
subb
nop
orb
addl
push
popl
pushl
orl
call
movb
call
sbbb
sbbl
pop
push
popl
push
popl
pop
movl
xorl
pop
pushl
popl
pop
addl
pop
subb
pushl
popl
leave
push
popl
ret
push
popl
call
sbb
movsb
pop
test
sbb
xchg
jnp
ljmp
inc
aaa
mov
leave
stos
adc
lods
out
jno
jbe
push
add
push
ds
fs
in
ret
cmp
cmpsl
pop
mov
or
mov
rcl
add
out
jg
sbb
xchg
cmp
mov
aad
mov
sub
hlt
xchg
and
mov
pop
movsl
inc
dec
xchg
call
es
lret
stos
adc
lods
orb
and
push
je
mov
and
insb
or
scas
movsb
addr16
inc
dec
sarb
inc
sub
inc
inc
fsubrp
mov
mov
prefetch
je
sub
adc
sub
mov
jmp
push
mov
ds
dec
dec
sub
lea
out
fdivr
add
out
bound
add
iret
lods
ror
movsl
jbe
jns
and
mov
sti
push
jmp
movsl
sub
mov
dec
cmp
or
mov
into
xchg
xor
pop
loope
or
stos
negl
add
cltd
loop
and
pop
in
mov
jbe
sub
xor
rcl
fwait
mov
sar
inc
pop
dec
mov
or
or
adc
iret
jnp
or
das
inc
in
ret
mov
inc
mov
fildll
push
jbe
mov
mov
jp
shlb
mov
push
pop
cmp
xor
inc
hlt
jne
xlat
ja
xchg
push
xchg
mov
and
and
sub
icebp
mov
mov
pop
cmc
sbb
lds
xor
clc
scas
cmp
fsubs
aaa
adc
inc
leave
push
clc
stc
and
mov
jmp
ret
cmp
mov
and
push
push
pusha
int
movl
test
ret
push
aas
roll
int
sub
jge
imul
test
int
sub
mov
movsb
and
xchg
mov
jmp
loope,pn
aam
lock
stc
std
xchg
dec
movsb
push
inc
scas
mov
rclb
test
stos
inc
leave
push
out
add
shl
aam
xchg
ret
andb
cli
and
addr16
mov
movsb
hlt
ss
sbb
push
mov
testl
lods
bound
pop
sub
stos
cmpsl
ret
cmp
stos
inc
inc
adc
mov
inc
pop
loop
sub
mov
mov
repz
mov
xorb
stc
lcall
mov
push
jmp
adc
ret
dec
pop
icebp
pusha
aas
mov
testl
sbb
jb
cmp
stos
repz
adcl
mov
adc
das
movsb
or
divl
stos
das
dec
fwait
inc
in
jne
xlat
pusha
das
fidivl
mov
and
cs
cmp
and
ret
xchg
sbb
call
sub
push
jmp
pop
and
xchg
daa
out
mov
cmp
ret
or
sti
mov
fidivs
pop
lods
scas
pop
lea
fsubr
xor
cmp
mov
xor
mov
and
xlat
mov
divl
clc
cmp
xlat
stc
sbb
ret
mov
inc
test
pop
aam
xchg
push
cli
mov
mov
adc
mov
in
mov
xor
jp
xlat
mov
into
and
decb
cmp
inc
mov
cmp
lahf
and
mov
cmp
jne
xlat
adc
xchg
nop
test
sub
aas
sbb
cmp
je
mov
pop
pop
jle
repz
hlt
out
sbb
or
ret
mov
mov
adc
and
xorb
dec
in
mov
popl
mov
adc
jmp
xchg
dec
push
pushf
cld
inc
lds
sbb
daa
push
mov
inc
popa
ds
sub
sarb
clc
in
mov
and
iret
cmp
shll
pusha
mov
jnp
jmp
sbb
ret
jge
pop
stc
cli
fimuls
pop
xchg
ljmp
xlat
mov
jbe
sub
sbb
inc
leave
xchg
pop
inc
xchg
inc
popa
cmp
icebp
imul
xchg
xlat
xchg
call
xchg
sbb
cwtl
or
lret
mov
imull
in
add
xchg
xor
xchg
pop
scas
cmpsl
loope
test
mov
sbb
dec
xchg
ljmp
out
pop
cmp
int3
push
jmp
fwait
mov
pop
sbb
jg
rorb
ss
mov
pop
fisttpl
mov
or
sbb
out
mov
jnp
mov
lcall
mov
xchg
sarl
xlat
mov
popa
cmp
mov
ss
test
pop
sbb
cmp
xchg
pop
jb
mov
mov
and
ret
inc
leave
push
jmp
xchg
test
test
dec
popf
add
popa
enter
jae
rcll
hlt
sbb
sbb
popf
add
mov
or
or
cmp
xor
ja
or
jne
xlat
pop
rol
popa
dec
xor
xchg
lahf
xor
dec
sbb
pusha
cmp
call
rol
cmpsl
or
loope
mov
push
jmp
jl
mov
mov
outsl
insb
cmp
ret
add
rcrl
subl
lods
mov
call
sbb
pop
cmp
insb
popa
push
jge
mov
repnz
cmpsb
mov
adc
cmp
inc
std
sbb
aas
insl
jecxz
and
dec
mov
mov
fcmovnb
dec
outsb
pop
jl
xchg
pop
jb
lahf
adc
mov
fsubs
mov
pop
jb
scas
jge
cwtl
xor
fsubl
mov
jp
jmp
int3
lret
test
mov
jbe
js
insb
mov
inc
pop
jne
int
lock
jno
sbb
jecxz
pop
and
mov
int3
leave
xchg
out
and
mov
push
cmp
bound
mov
cwtl
inc
xchg
xchg
stc
les
test
push
out
leave
push
jmp
xchg
fs
adc
add
push
outsb
inc
jb
divb
mov
mov
and
lcall
ljmp
jecxz
iret
mov
rcrl
xlat
dec
ret
mov
inc
mov
dec
pop
push
and
into
rcll
fimuls
ds
mov
jns
mov
inc
add
sbb
fs
leave
out
and
mov
out
sub
push
mov
lods
lahf
jge
decb
int
lods
xchg
adc
std
sti
mov
push
inc
add
mov
fldcw
mov
jge
push
popf
ja
movsl
mov
cli
fisttpl
jne
xor
aas
sub
inc
orb
leave
dec
sub
add
pop
xchg
fcompl
push
pop
mov
rcrl
enter
sbb
sub
pop
addb
mov
in
js
mov
data16
adc
out
pop
cmp
lock
lret
pop
data16
cmp
ljmp
mov
push
inc
sub
inc
aas
std
and
das
jecxz
add
lret
lods
aam
sub
sbb
lods
or
bound
test
mov
and
shlb
pop
sub
jp
cmp
cwtl
sbb
inc
lret
xor
xor
out
xlat
enter
sbb
pop
leave
push
jmp
xchg
test
and
add
jae
inc
test
xchg
das
pop
imul
jmp
pop
js
iret
jmp
dec
inc
std
repnz
mov
jns
sub
xchg
dec
cmp
ljmp
cwtl
leave
cmpsl
rorb
ja
int
lock
mov
test
faddp
mov
fisubrl
or
dec
xchg
iret
sar
jmp
mov
mov
xchg
xchg
dec
push
dec
fistpl
push
jmp
popf
mov
test
rcrb
inc
mov
mov
xchg
aas
jge
stos
mov
sbb
pushf
and
sbb
add
add
pop
inc
xlat
mov
aad
ret
mov
xchg
hlt
jno
push
inc
and
sarb
mov
add
adc
mov
mov
sbb
jle
cwtl
frstor
inc
jmp
pop
das
stc
stos
cmpsl
inc
ljmp
test
lret
hlt
push
ja
sahf
lret
in
sub
and
fstps
loop
add
mov
hlt
arpl
adc
lret
in
sbb
and
or
inc
cmp
lds
aaa
xlat
clc
into
mov
and
lock
xlat
sbb
cli
cli
aam
xchg
ret
inc
sbb
jmp
and
xchg
pop
jb
rol
test
fsubs
das
fsubs
enter
aas
insl
cmp
pop
pop
loopne
inc
leave
inc
push
mov
inc
test
jp
sbb
dec
push
lock
cmp
add
pusha
push
rcl
mov
divl
inc
hlt
jne
xlat
dec
push
pushf
into
add
decl
pop
adc
adc
mov
js
ficomps
push
jo
mov
jne
jmp
jmp
fdivl
scas
test
ffree
out
xor
jne
xor
es
sub
push
stos
inc
jae
popa
repnz
insb
lret
sti
clc
fwait
push
loope
jbe
xlat
lock
dec
push
mov
mov
push
jmp
das
fbstp
pop
mov
and
jge
test
xor
xor
inc
repz
xlat
nop
stos
mov
nop
cmp
mov
mov
sbb
stos
adc
rolb
jb
mov
jmp
addl
pop
in
sub
jmp
dec
dec
inc
neg
test
ja
mov
jns
daa
icebp
xchg
and
lret
repnz
int
out
je
int
lock
cmpl
cs
sahf
inc
int3
loope,pn
sti
andb
pop
cmp
bound
pushf
and
xor
enter
lock
mov
pop
mov
jecxz
lret
push
test
in
xchg
cli
inc
pop
sub
xchg
or
aad
ja
or
push
je
test
dec
sbb
sub
pop
test
popf
clc
std
ret
push
sbb
mov
cli
xor
sbb
jmp
push
mov
jns
pusha
adc
xchg
jae
jl
lret
sbb
xchg
jbe
aaa
pop
out
inc
dec
mov
ret
xchg
mov
test
pop
jmp
xchg
add
inc
stc
dec
popf
add
in
iret
lods
test
imul
adc
xchg
lods
mov
mov
test
pop
cmp
mov
aad
loopne
or
clc
and
lret
adc
mov
push
rcl
pop
movsl
addr16
jno
mov
jp
pop
aaa
pop
cmp
mov
popa
inc
mov
roll
mov
outsb
cmp
aaa
icebp
sub
bound
dec
push
jl
dec
xchg
mov
push
jmp
cs
lcallw
cs
ja
mov
into
xor
mov
leave
mov
pop
jb
shlb
mov
loopne
in
fdivrs
xchg
inc
mov
fcompl
xlat
mov
into
and
push
call
mov
mov
mov
bound
into
xchg
mov
jne
mov
test
leave
push
scas
cwtl
in
jae
fidivs
rol
fidivl
pop
lods
inc
call
leave
xlat
jmp
xchg
sbb
movsb
add
sbb
mov
pop
xor
xchg
mov
lahf
mov
xlat
mov
mov
mov
shlb
sbb
pusha
aas
pop
or
and
dec
sbb
enter
movsb
lcall
lds
fdivs
push
repz
adcl
add
xor
outsl
push
lret
rclb
popf
in
mov
push
pop
andl
in
test
fsubr
mov
outsl
inc
inc
das
fistpll
stos
xchg
mov
mov
adc
test
fistps
iret
mov
hlt
into
add
loope
scas
xchg
pusha
out
push
popf
fcos
jl
test
in
repz
out
stos
inc
leave
push
in
ljmp
xchg
ret
js
insb
cmp
ret
mov
xchg
cs
jae
scas
mov
jmp
out
aas
push
movsl
rcrl
fsubl
rorb
test
stos
ret
mov
ljmpw
inc
jmp
jb,pn
popf
movsl
inc
ljmp
mov
and
inc
jae
test
inc
or
sub
cmpb
arpl
add
jne
call
mov
xor
jns
mov
test
test
cmpsb
in
out
fnsave
xor
mov
fldt
mov
and
cmp
stos
cmp
pop
outsl
int
mov
mov
insl
data16
dec
push
out
lds
inc
sarb
xlat
mov
loop
mov
lock
lret
sub
test
lea
ret
mov
add
int
ds
sti
jno
cmp
stos
push
ja
mov
sbb
std
mov
push
push
push
mov
add
jns
mov
cli
xor
mov
xorl
and
lods
adc
ds
adc
insb
pop
popa
mov
outsl
add
or
test
lods
push
cld
inc
inc
pusha
push
jbe
xlat
mov
pop
cmp
mov
inc
or
adc
mov
dec
imull
shrl
xchg
xor
lcall
out
sub
push
jmp
in
inc
cld
shlb
fmull
outsb
adc
cmp
movsl
in
ficoms
sbb
mov
push
jmp
jp
adc
xorb
mov
and
mov
fnstenv
pop
ds
stos
jle
fstps
stos
mov
repz
scas
mov
sub
dec
inc
decl
add
jne
insl
mov
pop
or
insl
leave
push
cmp
sbb
adc
lock
rolb
outsl
push
fists
test
fdiv
and
pop
hlt
mov
or
inc
jp
dec
dec
mov
addl
movsb
rcl
out
cltd
es
cmpsl
or
jl
ficoml
jbe
pop
or
add
xor
shrb
movsb
mov
jg
jo
popa
jae,pt
mov
and
mov
lret
lock
jg
enter
pop
fmull
dec
xor
jbe
daa
icebp
aas
jae
stos
inc
leave
push
push
repz
cmp
mov
mov
arpl
stos
gs
roll
scas
and
ret
jo
mov
jbe
int
data16
rorl
test
loopne
mov
add
outsl
xor
mov
cmp
mov
pop
pusha
mov
jecxz
lock
loop
iret
and
loope
mov
inc
leave
push
jmp
inc
jge
xchg
xor
mov
pop
cmp
mov
sbb
cwtl
pop
xchg
stos
repnz
addb
popf
lds
add
sbb
push
cmpsl
js
jge
shrl
push
inc
cmp
iret
into
out
push
adc
stc
pop
xchg
sub
pop
popa
pop
aas
pop
arpl
jmp
push
mov
xchg
pop
jmp
mov
mov
call
push
or
mov
adc
mov
xchg
mov
push
inc
fs
hlt
in
ja
cmp
inc
mov
leave
push
call
push
leave
push
cmp
lock
adc
and
and
cmp
les
sub
mov
mov
cld
dec
dec
mov
mov
mov
int3
pushf
icebp
mov
inc
ds
aad
shll
fwait
mov
rolb
out
pop
loope
mov
inc
push
xor
rcrb
add
leave
call
test
in
adc
popa
lret
pop
lahf
push
iret
enter
idivb
add
xchg
mov
das
aaa
pop
jb
cmp
stos
outsl
sub
ficomps
subb
stc
pushf
mov
cli
jne
aas
mov
jbe
pop
popf
stos
nop
out
pop
aas
xlat
mov
outsl
sub
inc
lock
mov
jp
fldt
jns
push
lret
iret
mov
dec
mov
push
pop
lret
sbb
sub
cmpsl
testl
ss
add
call
sub
shll
gs
jns
jmp
xchg
cmp
pop
sbb
xchg
push
sub
jmp
cld
push
xor
stc
mov
stos
push
test
pop
jmp
fbstp
loope
sbb
cltd
mov
pusha
mov
sbbl
shrl
jg
xlat
mov
scas
xor
mov
inc
in
pusha
push
dec
and
rolb
leave
lods
sub
sub
cmp
mov
outsb
dec
xlat
mov
icebp
cmpsl
mov
push
jmp
adc
ret
paddd
push
mov
mov
sti
cli
jbe
addr16
lret
iret
cmp
push
inc
cmp
or
cs
push
xchg
call
arpl
cmp
xchg
sbb
jg
pop
adc
dec
adc
xor
dec
mov
mov
jne
sbb
test
add
adc
add
into
push
inc
cmc
ds
pop
dec
ds
lea
xchg
mov
repnz
cmp
shll
cltd
cmp
adc
gs
cmpsl
inc
mov
clc
lods
call
jge
scas
repnz
mov
aad
sar
jmp
gs
add
push
test
xchg
mov
aas
xor
xor
cmp
stos
cmp
pop
xchg
mov
push
or
sti
mov
ret
xchg
sbb
jg
or
adc
mov
pop
std
cltd
xchg
xor
aad
in
ss
jmp
das
in
xor
call
cmpsb
mov
pop
mov
dec
mov
lods
adc
xchg
push
xchg
push
out
dec
dec
mov
adc
into
lods
rcl
sbbl
mov
or
pushf
les
fld1
add
xchg
sub
push
jmp
xchg
add
and
mov
stc
stc
fmull
jb
leave
and
enter
add
in
loope
mov
jne
cmc
fwait
in
addr16
popa
cmp
inc
mov
pusha
cmp
add
pop
cmp
movsb
cs
test
mov
sbb
movsl
lds
cld
cltd
and
aam
ds
aam
sbb
mov
test
out
push
pop
cmp
popf
mov
inc
or
xchg
push
scas
xchg
mov
movsl
in
test
mov
sarl
push
mov
mov
mov
ds
or
cmp
sub
aad
test
inc
leave
test
sub
pusha
jmp
pop
mov
mov
sbb
cmp
insb
push
lods
pusha
sbbl
or
inc
adc
jns
or
sub
sbb
lods
push
sbb
or
jae
out
xor
insb
pop
lret
sbb
adc
pop
jg
dec
dec
xchg
add
sub
inc
aas
jl
pop
pop
push
cmpsl
mov
mov
ljmp
insb
es
and
arpl
clc
cli
pusha
dec
bound
adc
mov
ror
mov
cmp
pusha
jae
mov
cmpsl
pop
addr16
jp
sub
std
lcall
push
jb
mov
inc
fnstsw
rol
pop
movsl
addr16
jno
ss
mov
and
xchg
mov
or
pop
jnp
dec
pop
stos
mov
mov
aad
popa
out
ret
in
inc
cmpsb
call
lret
dec
pop
xorb
rorl
ror
jb
mov
add
pushf
and
jecxz
xor
mov
mov
sbb
inc
mov
sub
stc
enter
or
xlat
mov
mov
inc
sarb
xlat
mov
dec
or
mov
mov
pop
sbb
inc
lock
add
lret
iret
fcmovnb
push
ret
jnp
push
mov
lods
into
push
pop
aas
xlat
mov
adc
and
mov
sahf
push
testb
cmp
xchg
push
inc
and
pop
xchg
pop
movsl
addr16
jno
mov
push
pop
aas
xlat
mov
fwait
jl
mov
out
jb
lods
inc
lods
dec
sbb
pusha
cmp
mov
xchg
cmp
mov
outsb
mov
popa
push
adc
cld
inc
pop
movsl
mov
ret
pop
cmpsl
sbb
and
dec
or
xchg
out
push
mov
ret
sbb
stos
ret
and
xor
xchg
rcl
gs
jae
dec
sahf
inc
cmp
leave
push
je
inc
cs
ds
aam
imulb
mov
inc
js
pop
sbb
and
and
aad
les
or
test
inc
xchg
xchg
lock
ret
stos
mov
lahf
scas
mov
ror
cmp
inc
sti
and
mov
sub
dec
sbb
cli
push
xlat
mov
push
sbb
in
mov
cmp
mov
sti
into
punpckhbw
aaa
cmp
iret
loope
inc
xor
cmp
stos
insl
lcall
mov
jae
jmp
xor
sbb
push
ficoms
iret
push
jmp
outsb
mov
inc
popa
cmp
dec
stc
clc
fisttpl
push
nop
pop
jl
dec
shr
aaa
into
fs
leave
push
imul
mov
pop
jb
mov
repz
mov
int3
mov
scas
sarl
mov
popa
inc
xor
scas
jp
fildl
mov
jp
and
enter
mov
and
leave
push
jmp
insb
fisttpl
push
or
pop
ja
int
out
push
push
outsl
or
xor
pop
insb
cld
pop
test
movsl
clc
mov
sbb
inc
push
ficoml
xor
outsb
fcmovb
test
and
xor
push
lods
xchg
mov
and
push
push
sbb
pusha
add
arpl
add
push
adc
mov
jnp
shll
adc
aaa
notl
pop
add
gs
ror
mov
cmp
aaa
addr16
scas
push
addr16
xchg
test
inc
add
add
mov
faddl
jae
rcll
fnsave
ss
mov
dec
push
sahf
adc
mov
lret
mov
shll
fbstp
mov
pop
addr16
mov
test
daa
inc
cli
mov
and
test
inc
leave
lods
aas
xor
out
adc
stos
fs
cmp
ja
sti
mov
aaa
push
mov
lret
push
jmp
daa
enter
ret
inc
leave
push
cmp
icebp
aam
adc
lret
in
or
push
movsl
xchg
lea
cmp
les
inc
pop
mov
inc
add
sub
jmp
imul
cwtl
cmc
push
jae
sbb
jo
sub
cmp
dec
pushf
loopne
push
xorb
mov
and
int
mov
shl
mov
push
sub
cltd
xchg
xor
fstpt
lea
mov
pop
insl
cmp
xlat
mov
mov
sub
sbb
adc
nop
pop
aam
sbb
addb
xchg
aas
push
shll
scas
imul
xlat
mov
shlb
ljmp
clc
fmull
test
jp
and
scas
in
cmp
nop
mov
stos
dec
xchg
pop
jae
jle
and
sti
cli
popf
push
pop
add
shl
xchg
andb
inc
adc
add
jne
flds
lret
iret
nop
mov
divl
test
xchg
inc
leave
push
add
cmp
cld
inc
add
and
jecxz
loop
lahf
mov
inc
lock
or
iret
rcll
fidivrl
adc
fnop
lret
nop
inc
add
mov
xor
hlt
mov
mov
pop
adc
ss
aam
nop
ret
lahf
xor
jns
pop
bound
sbb
xor
leave
cmpsl
cmp
xor
in
jne
xlat
mov
fnstenv
mov
mov
fldenv
inc
stos
mov
mov
inc
pop
mov
or
fnstenv
inc
cmc
jnp
roll
int3
jp
pusha
and
cwtl
mov
rcrb
ds
mov
add
mov
ss
test
enter
out
sub
cmp
and
inc
inc
ror
cmp
or
pop
inc
pop
test
mov
push
stos
test
mov
sbb
mov
sub
test
push
pop
insb
bound
movsl
addr16
fxam
rclb
cmp
push
jmp
mov
mov
or
cli
ss
mov
sahf
sarl
xlat
mov
aam
fcmovnu
es
mov
and
lods
or
push
inc
ss
inc
xor
cmp
stos
inc
add
lcall
jmp
aaa
xlat
and
int
cmp
lods
outsl
jb
cmp
stos
push
mov
jbe
cs
ja
sti
clc
fwait
dec
popf
loope
mov
push
testl
js
mov
mov
addb
loope
leave
out
dec
dec
mov
mov
adc
mov
jno
cwtl
xor
jecxz
loope
lock
lds
and
jo
xlat
and
mov
xchg
sub
and
push
and
cwtl
cmpsl
mov
push
push
mov
mov
lcall
pop
aam
cltd
add
push
lea
testb
loope
ss
cltd
xchg
inc
sbb
movsl
push
jns
bound
xchg
decl
fs
ret
jge
sarl
mov
popa
dec
xor
dec
adc
movsl
cs
orl
shll
bound
or
inc
leave
shr
mov
pop
jb
mov
bound
and
out
push
cmp
out
xchg
cltd
lret
in
mov
xor
add
and
push
pop
jmp
int3
lret
cmpsl
roll
dec
push
add
stos
xchg
cmpsl
icebp
ret
mov
mov
mov
jp
loop
nop
enter
lods
jmp
mov
call
push
stos
inc
in
pop
sbb
test
ja
sti
stc
pushf
enter
lods
fcomip
enter
insb
mov
iret
pop
and
clc
shll
xor
pop
fldt
and
push
lret
test
cwtl
xchg
popf
add
pop
ficomps
rcll
je
lea
enter
ja
dec
cs
dec
adc
ja
mov
pop
jp
mov
int3
int
aad
xchg
sbb
sbb
in
out
ret
addb
lret
sbb
test
daa
call
dec
mov
and
sub
inc
aas
mov
in
mov
dec
xor
int
fcmovnb
sub
mov
loopne
pusha
mov
popf
mov
xchg
fistl
inc
push
mov
mov
sbb
adc
je
cs
cmc
sbb
sbb
jle
push
pop
jge
call
ljmp
out
sub
inc
aas
mov
cmp
cmp
std
mov
je
out
les
dec
pop
das
out
mov
pop
push
cwtl
aam
ds
arpl
ret
enter
rcr
loopne
add
pop
push
adc
push
mov
mov
push
mov
mov
clc
mov
incl
fs
daa
leave
int3
and
pop
aas
push
mov
repz
adc
ljmp
and
pop
fs
arpl
lods
inc
jne
mov
aas
in
mov
pop
xchg
cs
pop
mov
inc
popa
cmp
mov
clc
clc
fisttpll
insb
cwtl
sbbb
pop
cltd
add
inc
xlat
mov
xchg
ficomps
aam
sub
test
jge
inc
lods
mov
bound
mov
inc
leave
shr
push
push
ret
movsb
push
jge
dec
shll
push
mov
jns
inc
fldcw
out
imul
mov
pop
inc
out
dec
dec
xchg
cld
add
sub
fcoms
pop
rcll
test
rorl
or
xchg
dec
cmp
ljmp
aas
jb
stos
pop
ja
int
lock
in
out
dec
push
in
jb
ret
cmp
dec
cs
mov
sub
mov
call
sbb
stc
pop
hlt
dec
mull
sahf
sbb
fwait
aaa
xlat
lahf
mov
lods
lret
xor
ljmp
aaa
xchg
mov
inc
add
call
rcl
dec
shr
and
jns
pop
xchg
adc
jecxz
pusha
test
xchg
and
jmp
sub
xor
inc
leave
sub
adc
aaa
adc
adc
aam
fildll
add
outsb
mov
pop
aam
mov
aaa
lock
aam
dec
test
das
rol
jb
cmp
stos
push
or
jb
inc
movsl
pop
ja
sti
stc
pushf
xchg
sbb
jne
bound
sbb
aam
dec
leave
push
jmp
lods
mov
inc
popa
aas
cmp
cld
imul
dec
mov
cmp
lea
mov
push
pop
jecxz
add
sbb
or
testl
cmpsl
iret
mov
leave
jbe
sub
mov
sbb
inc
xor
and
jns
loop
subb
inc
aas
fiadds
loop
jle
daa
pop
push
dec
sub
jmp
rcrb
int3
xchg
mov
jns
adc
lahf
push
shlb
pop
push
mov
out
lret
xor
dec
dec
push
out
pusha
cmp
sub
test
test
push
shlb
xchg
ret
mov
pop
jb
push
and
aam
inc
movsl
xchg
sbb
shl
or
dec
imull
and
popf
push
pop
std
cltd
xchg
xor
inc
int
jmp
je
int
popa
imul
shlb
push
push
repz
jnp
setle
mov
xcrypt-cfb
cmpsl
out
bound
stos
out
loop
stc
cmp
push
jp
jle
cli
add
lds
mov
dec
cltd
sbb
sbb
pop
mov
dec
sbb
rcrb
das
fsubs
mov
rcll
jne
rcll
add
lret
sub
stc
fisttps
adc
sbbl
mull
jne
xlat
add
sbb
mov
inc
in
fucom
jmp
add
iret
dec
xlat
data16
xor
mov
movsb
movsl
enter
lds
lods
cwtl
mov
or
xchg
pop
xor
mov
xchg
mov
push
jmp
sahf
mov
in
ja
mov
dec
sbb
pusha
cmp
inc
aas
mov
pop
arpl
sub
rcrb
jbe
cmc
mov
cmp
xlat
lock
sbbl
xchg
push
loope
push
rclb
into
sub
xor
stos
mov
mov
sbb
mov
dec
jmp
pop
xor
cltd
and
jb
cmp
stos
cmp
into
arpl
cmc
call
cli
popf
sbb
adc
jnp
insb
mov
push
pop
inc
je
fwait
call
enter
popl
cltd
dec
jmp
jo
adc
cmp
jns
cmp
bound
mov
push
xor
fs
ds
push
es
fcomp
mov
aaa
xlat
cmc
cwtl
xchg
popf
add
loope
ja
lret
rcll
loope
and
cmc
sub
push
jmp
popf
mov
dec
and
jns
jge
fldt
and
insb
inc
jne
xor
xor
cmp
pop
loope
inc
leave
int3
jl
xchg
or
pop
mov
dec
popa
lds
adc
sbb
imul
or
aas
dec
ja
loop
push
sbb
lret
movsb
mov
popa
or
jbe
jbe
int
lock
push
sub
push
jne
dec
aaa
insl
mov
mov
scas
and
jo
fmul
iret
rcl
dec
sub
inc
inc
mov
cltd
repnz
xchg
pop
popa
inc
add
stc
divl
test
jb
cmp
stos
pop
sbbb
cwtl
scas
pop
ja
sti
stc
pushf
sub
idiv
mov
jmp
sbb
cmpsl
mov
fwait
xor
mov
cmp
mov
cmp
cmc
xchg
repnz
and
push
or
add
mov
lock
mov
sub
lock
dec
push
pop
fimull
or
inc
lock
pop
cmp
cmp
fisubrl
mov
mov
int3
sub
mov
inc
add
cs
out
aam
call
mov
jmp
push
ret
jno
or
adc
mov
sub
dec
sub
xorl
daa
in
adc
jb
std
jmp
push
mov
xchg
bound
mov
cwtl
cs
jle
add
jae
sbb
sub
inc
dec
lret
jmp
push
lds
es
dec
cmp
aad
fnstenv
movl
aaa
mov
lods
popf
loop
pop
sub
dec
dec
cmpb
sar
and
mov
xor
xchg
inc
divl
pop
cli
bound
xlat
lret
fwait
push
shlb
mov
out
xor
xor
repnz
cmp
mov
stos
xchg
sub
aas
push
push
dec
test
fsubl
popa
dec
xor
cmp
test
repz
or
mov
cmp
xlat
test
mov
push
xor
jae
insl
jne
imul
mov
repnz
das
and
jne
aaa
notb
pusha
mov
fldl
pushf
das
xlat
mov
ja
pop
arpl
pop
jb
jge
sbbl
into
lcall
lds
fldenv
fadds
mov
addb
and
dec
mov
or
sahf
rorb
and
jge
fnsave
aam
ljmp
ss
mov
jl
jg
in
xchg
xchg
inc
push
push
sti
pop
jb
mov
je
mov
xor
jnp
fwait
rorb
cmpsb
lods
lret
test
mov
sbb
sbb
stc
add
mov
push
pusha
cmp
adc
cs
sub
push
cwtl
push
aad
cld
xor
mov
lret
sbb
repz
push
mov
fsts
hlt
or
out
push
mov
mov
mov
inc
jecxz
lock
jb
inc
btr
aaa
xlat
mov
sub
rclb
inc
shrb
cld
sub
cltd
das
sub
add
add
enter
mov
mov
push
in
sub
push
push
in
jne
into
out
pop
xchg
pop
enter
adc
jnp
xor
xor
inc
push
in
jne
fcmove
iret
bound
mov
pop
xor
jo
jle
lcall
and
stc
dec
lret
fisubrs
push
test
dec
dec
and
aam
xchg
mov
arpl
ljmp
gs
cmp
stos
shll
loopne
add
mov
ds
aam
pop
lahf
repnz
sub
xlat
mov
or
orb
loop
outsb
mov
ret
enter
stc
fbld
arpl
movsb
mov
push
jmp
sti
scas
cli
mov
xor
cmpsb
popf
lret
das
dec
push
repnz
fbld
arpl
cmp
mov
insl
cmp
das
clc
add
mov
inc
adc
rcrb
add
notl
rcll
mov
testl
pop
cmc
cltd
nop
xor
int3
push
or
rolb
in
arpl
sub
sbb
push
pop
fadds
outsl
lock
ss
jae
fwait
sbb
pop
pop
push
mov
daa
sbb
sub
cmp
pop
add
scas
leave
out
lret
hlt
lret
cmpsb
lret
in
add
and
jb
scas
push
cmp
lds
jge
imul
pop
fldln2
cltd
dec
pop
sub
lods
push
mov
mov
mov
jmp
les
add
push
mov
dec
mov
cmp
and
pop
xchg
mov
jb
xor
popa
iret
push
push
cli
adc
lret
in
ss
lods
mov
adc
mov
aaa
xlat
rclb
jmp
xor
or
mov
cli
inc
pop
jmp
testb
fists
pop
jmp
mov
cli
adc
dec
arpl
data16
sbb
add
stos
push
gs
pusha
test
and
addr16
and
sarl
pop
jmp
pop
leave
push
jmp
imul
jb
mov
fsubs
cmp
arpl
imul
mov
movsl
jmp
add
not
sahf
out
das
popa
cmp
push
jl
jo
je
aaa
and
lea
and
ja
std
leave
test
push
mov
push
stos
ret
mov
pop
xchg
inc
cmpsl
lds
fs
in
outsl
pushf
subl
aaa
shrb
push
insb
outsb
dec
out
gs
push
jmp
inc
sbb
movsb
cmc
fisubrl
fwait
subb
xor
sub
pop
jmp
push
dec
test
loope
leave
push
rolb
aaa
xlat
mov
out
and
cmpsl
ss
or
popf
pop
hlt
mov
inc
out
ret
mov
sub
flds
adc
add
adc
sar
jmp
adc
pusha
jl
mov
jbe
repnz
lret
data16
xorb
mov
jne
push
mov
jl
pop
into
inc
leave
push
cmp
xor
xchg
inc
lock
xlat
xchg
stos
xor
test
push
js
inc
xor
and
int
out
xor
mov
jp
xlat
mov
divl
dec
aaa
push
loopne
out
jne
xlat
adc
cmp
out
pop
aam
cmpsb
mov
rcl
fcmovnb
xchg
sbb
jb
cmp
stos
dec
cmpsb
pop
mov
mov
sti
jmp
lods
fcomip
jbe
int
popa
pop
lahf
shr
cld
push
pop
cld
mov
icebp
mov
rcrb
out
adc
cmp
ds
daa
mov
xor
cmp
add
lock
mov
jge
outsb
rolb
mov
jp
sub
aam
iret
mov
sbb
sbb
push
mov
sarb
dec
aad
push
mov
jb
test
cs
push
dec
mov
adc
jae
mov
pop
out
xchg
or
subb
xor
push
jb
cmp
stos
pop
mov
jo
ja
sti
sti
sahf
xchg
lods
push
pop
mov
jmp
cmpsl
jp
repz
std
cs
cmp
ret
enter
inc
xlat
cmc
into
mov
ds
sbb
adc
jae
ljmp
push
pop
testb
push
xor
fsubrs
mov
ror
sbbl
rorb
push
arpl
movsb
push
lods
rorl
xorl
lahf
mov
aad
lret
aam
or
push
fs
aas
sub
aas
push
xchg
fcoms
loope
inc
leave
ret
inc
movsb
mov
mov
inc
popa
aas
je
ja
pop
test
sub
pop
or
xor
out
mov
jne
dec
mov
popa
cmp
cltd
mov
out
jne
push
mov
ss
cmp
xor
inc
lock
xlat
sti
stc
insb
pop
aad
nop
ret
dec
sbb
pusha
ds
pop
cmpsl
push
dec
fistl
mov
mov
pop
jb
ror
stos
enter
fldcw
and
and
inc
inc
lock
leave
popf
mov
and
cli
cs
sub
movsb
cs
std
pop
jne
xor
lds
mov
pusha
push
cmp
add
mov
movsb
int
lock
stos
int3
ds
repnz
mov
push
jo
lret
lahf
ror
add
outsb
insl
mov
adc
adc
push
into
enter
pop
in
rcr
inc
mov
inc
pop
nop
xor
xor
push
je
mov
incl
es
mov
adc
test
xchg
and
scas
sbb
cmp
adc
leave
or
add
push
xchg
jle
mov
sbb
repnz
mov
add
sub
or
fcmovnbe
lahf
iret
cld
inc
jmp
push
mov
cmp
jno
mov
mov
ljmp
out
shr
inc
dec
mov
add
push
movsb
lret
nop
inc
mov
andb
mov
sbb
and
ljmp
jnp
pop
mov
std
sti
mov
push
and
dec
sti
mov
push
jmp
cs
dec
jo
outsl
cmp
or
inc
out
lret
or
cld
inc
scas
mov
mov
sbb
cmp
inc
mov
pop
notl
push
call
cltd
das
sub
push
int
js
adc
xchg
cmpb
adc
add
push
mov
or
xchg
iret
fsubrs
int3
push
push
sbb
out
sub
jmp
dec
sub
inc
in
scas
inc
test
es
or
leave
jae
stos
mov
push
daa
inc
out
cmp
push
out
pusha
cmp
rcl
and
cmp
sub
push
cmp
stos
jo
pop
arpl
lcall
popf
int3
movsl
icebp
mov
push
pop
mov
pop
repnz
lods
push
pop
push
rorb
dec
adc
scas
xor
jecxz
mov
arpl
ljmp
add
inc
inc
pop
arpl
and
jmp
sub
lahf
test
pop
pop
jg
cmp
pushf
push
add
push
push
sbb
xor
jo
cld
aad
pusha
mov
or
imul
mov
push
mov
fldpi
jae
mov
dec
push
adc
dec
mov
jne
sub
daa
leave
push
jmp
insb
xchg
repz
aaa
inc
or
inc
cld
xor
mov
gs
dec
inc
test
loopne
lods
les
fsin
inc
push
inc
mov
test
fs
dec
sub
aaa
xlat
sub
xchg
pop
js
sub
mov
insl
adc
inc
in
scas
inc
add
sti
repz
push
xor
mov
jge
mov
lods
sahf
mov
loopne
cli
fimull
roll
test
jne
jle
mov
pop
jmp
fisubs
aad
pop
mov
jnp
fcmove
pop
enter
push
pop
gs
and
adc
push
mov
xchg
mov
or
sub
or
mov
rcl
xchg
imul
mov
push
jg
mov
lret
dec
mov
loope
ljmp
mov
xor
xchg
mov
aaa
xlat
mull
xchg
ret
push
xchg
mov
cli
fisttpl
roll
sub
add
fs
lahf
lea
or
add
pop
lods
add
sub
sbb
push
mov
shlb
mov
jno
dec
dec
test
add
or
or
ror
cmp
sbb
jp
sub
xor
scas
adc
lods
mov
pop
pushf
dec
dec
pop
jmp
out
pop
cmp
stc
push
xchg
iret
xor
jb
inc
sub
pop
ret
stc
mov
jmp
mov
lock
fwait
ror
xor
sbb
xorl
push
shr
jns
das
stc
xchg
push
fld1
mov
into
push
jmp
cs
aam
rcrb
inc
mov
divl
repnz
push
pusha
ds
sbb
adc
mov
adc
insb
test
ffreep
jge
push
dec
mov
fimuls
iret
mov
rcl
and
lret
sarl
pop
sub
inc
inc
gs
and
adc
bound
push
cmpb
std
xchg
roll
cmp
lock
mov
push
push
in
inc
je
push
jl
mov
in
outsb
mov
div
gs
pop
pop
mov
div
pop
sbb
mov
cmp
bound
mov
dec
fmul
pop
cmc
frstor
stos
divl
inc
hlt
jne
xlat
push
mov
stos
mov
jmp
mov
pop
test
sub
jecxz
aaa
mov
mov
sahf
sarl
mov
popa
inc
das
mov
data16
ss
movsl
test
clc
stc
je
xor
mov
out
add
adc
dec
popf
add
xor
mov
pop
or
cltd
dec
cmp
adc
dec
dec
lret
sbb
mov
sub
cmp
aad
xor
lret
sbb
inc
adc
jl
out
inc
dec
mov
lds
mov
and
fs
inc
jg
or
lea
xchg
mov
push
dec
inc
movsb
iret
jae
cmpsl
sub
jbe
jmp
pop
inc
or
les
and
jecxz
daa
or
loope
rclb
mov
outsb
ja
sbb
int
push
push
jne
lret
mov
mov
sub
mov
sub
pusha
out
inc
std
jnp
aam
shrb
mov
out
add
dec
inc
and
add
fwait
lahf
imull
xchg
fidivrl
in
test
clc
loopne
sub
stos
inc
leave
push
rcrb
xor
test
pop
repnz
cmp
enter
pop
bound
mov
sarl
mov
popa
inc
xor
and
fdivl
and
jmp
mov
scas
lock
fcomp
sub
nop
xor
xchg
dec
push
inc
sub
mov
push
jmp
or
xchg
ret
and
add
sub
aam
sbb
and
cmc
xchg
dec
push
xor
mov
push
jmp
das
fildll
lea
sbb
pusha
aas
into
mov
rcll
sbbl
push
jmp
or
sbb
mov
in
jb
out
ret
push
cmpsb
jg
mov
rolb
lret
sbb
or
inc
pop
fcomps
pop
cmp
cmp
add
push
orl
sub
aad
aas
xor
dec
jb
cmp
stos
insb
lret
push
call
sti
mov
hlt
leave
rcll
in
sbb
and
mov
add
mov
mov
test
stos
pop
pop
cmp
mov
popa
dec
mov
xchg
xorb
inc
icebp
mov
adc
test
pop
jb
mov
jae
jmp
inc
ds
cltd
adc
lock
loopne
push
cmp
mov
adc
and
cmp
pop
dec
ds
popa
push
scas
mov
pop
pop
lret
ret
sub
xor
xchg
pop
popa
dec
and
out
sbb
jmp
fnstenv
sub
jge
mov
and
bound
mov
mov
inc
leave
push
jmp
mov
cmp
xor
adc
push
mov
pop
arpl
jne
sahf
lret
inc
and
dec
jo
and
push
fs
push
mov
inc
or
sub
shl
out
lods
repz
movsb
int
popa
data16
cmp
and
lds
push
les
cmc
mov
add
xchg
das
out
into
rcrb
int3
inc
mov
bound
lahf
into
cmp
out
or
jne
xor
mov
dec
mov
cmp
mov
pushl
jl
adc
pop
push
or
adc
jb
lods
cmpsl
testb
scas
sbb
push
lods
bound
push
pop
add
roll
ljmp
test
inc
inc
ds
sbb
xor
pop
dec
mov
adc
jo
xlat
icebp
xchg
cmp
popf
add
jno
lret
dec
lret
into
pusha
in
lds
jb
cmp
stos
arpl
outsb
xchg
pop
ja
sti
std
mov
mov
outsb
call
adc
sti
movsb
mov
das
mov
loopne
jne
pop
and
dec
fmuls
lret
and
mov
and
les
adc
shlb
mov
xchg
xor
cwtl
xchg
add
popf
add
mul
fmul
lret
rcll
call
sub
push
jmp
mov
and
clc
cs
clc
pop
jle
movsl
lcall
xchg
mov
jbe
bound
or
inc
imul
mov
inc
icebp
or
sub
ss
cmpsl
mulb
xlat
sbbl
jmp
in
mov
mov
movl
add
roll
test
lea
mov
imul
fdivrl
add
add
mov
xchg
inc
leave
push
jmp
cmp
lret
mov
fs
cltd
bound
push
sbb
das
call
shlb
test
clc
out
push
cmpb
jb
js
pop
pop
adc
out
lea
pop
inc
movsb
or
ficoms
push
aaa
xlat
mov
cltd
jo
xor
out
stos
mov
and
inc
idiv
add
sbb
pop
cmp
mov
lahf
das
ret
xor
sar
add
inc
sub
std
nopl
push
loope
ret
push
or
dec
inc
fnstsw
rol
daa
mov
jne
xlat
adc
test
adc
jmp
push
mov
shlb
enter
ljmp
add
adc
bound
inc
inc
mov
notl
inc
cmp
mov
xchg
fadds
inc
pop
popa
push
dec
leave
jmp
push
jg
ds
sbb
adc
sub
push
js
les
das
inc
jb
mov
mov
aam
outsl
pop
bound
mov
mov
push
ljmp
shlb
inc
insb
movsb
inc
xchg
sub
mov
repnz
subl
stc
dec
popf
add
pop
mov
or
or
fs
xlat
sub
jb
jb
cmp
stos
push
out
jns
ret
ja
sti
clc
fwait
push
sbb
push
fcoms
es
sub
push
sbb
sbb
lods
clc
sbb
mov
push
xchg
sub
loope
xor
dec
sub
mov
adc
xchg
rep
jle
pusha
xchg
mov
inc
push
sub
sbb
mov
leave
ja
sub
pushf
or
adc
mov
insl
cld
and
sub
xor
lcall
adc
mov
and
popa
cld
popa
in
sbb
xchg
sbb
mov
mov
jb
sbb
andl
std
cltd
xchg
xor
cmp
inc
inc
je
xlat
repz
sub
inc
sbb
add
add
jnp
imul
mov
out
ss
popa
push
dec
sub
jne
arpl
dec
cmp
ljmp
int3
shl
das
push
ja
int
lock
fwait
andl
icebp
adc
insl
mov
sub
xor
hlt
out
sbb
mov
pusha
xchg
int
rcl
sub
mov
outsb
mov
jg
lcall
cmp
mov
lret
ret
xor
cmpsl
push
nop
and
jmp
push
les
xchg
cmp
stc
neg
mov
jae
jne
xor
shl
icebp
clc
pushf
iret
mov
jne
xlat
adc
mov
cmp
fldenv
loope
enter
mov
push
push
jmp
inc
xchg
push
arpl
xchg
jmp
push
dec
bound
aas
test
out
xor
ds
sbb
adc
je
or
sub
aad
mov
enter
stc
push
jno
lret
pop
aad
fistps
ficoml
jmp
mov
add
sbb
pop
es
sbb
pop
dec
popf
cltd
dec
push
jg
mov
leave
push
jmp
in
pusha
aam
xchg
ret
outsl
fldt
addr16
iret
sarl
jae
jne
mov
xchg
mov
inc
icebp
aam
xchg
ret
lock
cli
clc
cld
fisttps
and
cltd
mov
mov
sarl
clc
cwtl
repnz
pop
fbld
pop
rol
hlt
push
subl
int
lock
testb
notb
mov
inc
sbb
loop
bound
sub
incb
dec
int3
and
mov
inc
dec
xchg
test
mov
fstpl
mov
ljmp
cs
les
jne
pop
pushf
dec
jmp
xlat
mov
jnp
xchg
jae
fdivl
jno
mov
fdivrl
mov
mov
popa
push
dec
lock
mov
aas
lret
hlt
shrl
mov
in
cld
aam
sub
stos
fnstcw
add
mov
mov
aas
divb
xlat
es
fcmovnb
ja
xlat
repnz
adc
inc
xor
add
ds
outsl
lret
lret
rclb
stos
push
aaa
xlat
mov
lahf
sub
popf
sbb
test
adc
xor
andl
push
xchg
leave
repnz
dec
dec
mov
fidivs
mov
add
orl
sti
mov
push
test
insl
jecxz
mov
push
sbb
popa
jne
cltd
mov
cmp
shrl
jp
adc
stos
push
mov
into
scas
aad
pop
mov
insb
mov
pop
data16
fmull
mov
jmp
inc
ds
aam
in
xor
cmpsb
testl
in
mov
mov
pop
popa
push
xchg
imul
fucomp
lock
clc
lret
fstpl
pop
cmp
int3
daa
iret
mov
rcrb
jp
xchg
mov
fs
sbb
iret
xlat
mov
insb
inc
pop
adc
aas
int3
cmc
inc
push
adc
and
mov
lds
bound
mov
in
ret
or
fldcw
in
jne
int
lock
lahf
jle
jnp
cmpsl
orb
enter
leave
push
out
sbb
test
lods
push
jg
loopne
rclb
sub
xchg
iret
mov
push
jmp
les
dec
inc
das
divb
ret
dec
and
mov
pop
ret
sub
cmp
aam
cmp
scas
test
pushf
out
sbb
es
mov
adc
lods
add
sub
gs
cmp
data16
cmpsb
inc
leave
loop
bound
rcrl
or
fwait
insl
lods
adc
push
pop
and
mov
jbe
dec
mov
jmp
int
gs
popa
cmp
aam
push
and
add
sub
inc
cwtl
lods
xchg
imul
sub
mov
jae
jge
pop
bound
pop
lcall
sbb
mov
mov
xlat
pop
jmp
jl
sub
push
dec
inc
xlat
scas
cmovg
sti
mul
and
int
jmp
cltd
lcall
lds
fsubs
daa
sub
es
push
jmp
jo
movsb
inc
test
ljmp
test
add
and
sbb
insl
in
rorb
sti
inc
xlat
lock
pushf
bound
or
jl
mov
dec
jbe
xorl
enter
pusha
test
popa
adc
or
jmp
mov
mov
push
sbb
pop
in
mov
adc
fdivrl
jmp
jmp
lcall
jg
movsl
mov
dec
int
sahf
or
add
enter
cmp
mov
dec
leave
cmp
pop
and
sti
cs
adc
mov
jns
or
ret
xor
and
pop
fsubl
popa
inc
das
mov
subl
mov
into
and
inc
leave
aas
ljmp
fcompl
aaa
xlat
and
data16
mov
sbb
mov
or
pop
negl
bound
nop
xor
xchg
mov
mov
je
int
popa
fs
push
push
jne
and
sbb
outsb
lcall
fstpt
jmp
cmp
sbb
push
inc
imul
or
shrl
loop
pop
out
xor
std
js
xlat
sub
lods
dec
mov
and
jb
aam
jb,pt
nop
jbe
fs
inc
or
dec
jecxz
xchg
sbb
xchg
push
mov
clc
or
mov
cmp
testb
out
inc
ret
daa
shl
aas
clc
ljmp
pusha
je
daa
bound
test
hlt
mov
xchg
pop
adcl
lods
rcrb
rorb
aad
pop
mov
loopne
jb
andb
mov
inc
stos
aad
bound
dec
dec
into
repz
adc
clc
add
lock
xor
mov
adc
jl
aad
out
ror
push
jmp
inc
sbb
jno
lds
lret
cmpsl
lds
or
stc
mov
shlb
and
repz
adc
mov
mov
pop
and
ss
je
stos
adc
mov
mov
imul
xor
into
push
inc
inc
int
sub
adc
lret
in
jg,pn
cmp
rcll
lds
clc
mov
lcall
adc
mov
jae
push
jb
add
lcall
aad
test
hlt
jnp
int
test
jl
clc
cmp
cmp
or
cli
fisttpll
mov
mov
ljmp
sarb
mov
and
hlt
dec
fidivs
roll
dec
sbb
pusha
cmp
sbb
mov
je
push
mov
jne
xlat
loopne
pop
out
jne
out
jne
push
jmp
hlt
mov
xlat
mov
pop
out
mov
inc
popa
ds
inc
mov
mov
scas
and
add
push
lret
iret
mov
push
clc
clc
xchg
xlat
mov
jmp
ret
sbb
in
xor
lock
ds
out
enter
and
and
push
mov
mov
in
fcoms
mov
mov
repz
adc
and
orl
cmp
cmp
jno
cmp
stos
push
jle
lcall
sti
stc
pushf
dec
sbb
stc
out
mov
jmp
ret
fnsave
cmpsl
testl
cmpsl
imul
dec
lods
mov
sbb
dec
roll
ljmp
daa
or
jl
int
ror
fidivrl
add
add
fld
mov
pop
jb
mov
psubusw
fsubrs
mov
pop
mov
sub
jmp
dec
and
pop
in
mov
jne
loop
dec
push
cmpsl
cmc
inc
and
aaa
pop
jb
pop
es
lock
aam
pop
mov
and
rorb
xor
outsb
xlat
mov
insb
mov
pop
scas
jo
mov
xor
mov
inc
mov
mov
leave
loop
bound
inc
sbb
andl
sahf
sbb
lods
add
addr16
orb
out
pop
data16
into
lods
and
dec
dec
mov
mov
push
aam
inc
dec
test
dec
out
sbb
mov
sub
out
xor
cmp
xor
hlt
jne
xlat
sub
push
and
aam
cwtl
test
jne
xor
bound
jge
inc
push
dec
popf
add
test
xchg
or
lcall
mov
push
jmp
cs
in
mov
out
pop
aam
nop
mov
data16
out
ffree
push
jmp
sahf
pop
mov
jp
dec
xor
dec
hlt
jp
movsb
and
mov
jnp
mov
iret
rcll
roll
popf
add
rol
and
lret
iret
nop
add
sbb
jne
cs
mov
sub
jmp
rcrb
in
jo
mov
int3
mov
inc
ds
aad
out
xor
lahf
test
in
jmp
jge
jne
lds
scas
shll
xchg
scas
mov
daa
iret
test
xchg
push
push
mov
scas
aas
fisubrl
add
xchg
rcl
jg
add
ja
mov
and
leave
int3
frstor
vpackuswb
xchg
lock
or
int
jle
push
mov
add
aad
fsubrl
add
cwtl
imul
pop
pop
sbb
loopne
lock
aad
xor
call
testl
stos
shll
fcmovnu
out
gs
roll
inc
aam
bound
pusha
and
int3
subb
subl
outsb
adc
cmpsl
xor
push
jno
xchg
dec
xchg
pop
xchg
mov
push
mov
inc
jnp
inc
insb
pop
push
stc
movsb
dec
clc
pop
out
sub
imul
call
jecxz
jle
pop
pushf
js
xor
mov
jbe
in
cli
cs
jge
sar
xchg
and
int
out
cli
shll
xchg
lcall
or
adc
mov
mull
mov
mov
das
sub
dec
sbb
enter
inc
leave
push
jmp
dec
mov
mov
push
orl
stos
add
mov
iret
jge
negb
sub
lret
mov
popf
rolb
inc
pop
push
push
mov
int3
mov
add
bound
insl
fxch
push
xchg
push
inc
cmc
jnp
rol
xor
into
xchg
stos
insb
pop
aaa
dec
pop
das
lock
xchg
inc
adc
adc
sbb
aas
sbb
sub
or
jge
or
adc
inc
inc
cmp
cmp
sbb
inc
inc
inc
lcall
mov
shlb
rcrb
ds
adc
jg
call
les
xlat
cmp
push
sbb
lods
ret
inc
dec
pop
cmp
mov
cli
jmp
pop
xor
insl
push
aam
pop
dec
xchg
adc
and
js
lds
shll
push
out
in
ljmp
sarb
negl
fsubs
popa
pop
add
jmp
push
mov
out
ret
ljmp
daa
shr
setp
jmp
fmul
shll
push
cmp
pop
jle
dec
ret
inc
mov
jnp
lock
gs
xor
sbb
cmp
les
rcl
cmp
jmp
ret
int3
jg
jno
test
call
mov
adc
out
mov
dec
bound
leave
and
adc
sbb
pop
pop
xchg
mov
dec
mov
add
jl
push
mov
push
lahf
push
insb
mov
int
push
cmp
sbb
mov
popa
pop
dec
std
or
mov
mov
mov
movb
loop
cmpsb
fcompl
and
sbb
addr16
mov
and
lods
aaa
jne
mov
ja
call
xchg
bound
mov
push
adcb
xor
sahf
pop
dec
cmpsl
or
mov
aad
shlb
shl
xchg
xlat
mov
mov
push
push
mov
arpl
loop
lock
das
shrl
inc
mov
dec
or
jne
das
and
leave
push
jmp
pushfw
mov
push
and
mov
aaa
mov
inc
add
mov
adc
outsb
pop
popa
add
mov
stos
sub
inc
cmp
je
and
addb
inc
leave
push
das
mov
out
scas
vorpd
jne
sub
xchg
sbb
inc
xlat
or
adc
mov
insl
imull
in
cltd
das
movsb
adc
pop
push
jg
sub
push
jmp
das
fnstenv
and
int3
inc
out
cmp
shrb
mov
sub
dec
test
in
mov
inc
leave
push
push
std
ret
mov
aad
stc
outsb
faddp
mov
jle
sbb
jge
ss
in
mov
sub
jbe
pop
inc
xlat
mov
or
fdivs
and
rolb
fistpl
lahf
sub
jecxz
add
dec
push
or
leave
push
jmp
cs
enter
mull
add
inc
in
cmpb
and
xchg
lods
test
scas
inc
xor
cmp
stos
pop
or
push
sbb
ja
sti
jmp
and
int
mov
inc
adc
xchg
int
lock
roll
pop
and
aas
out
ret
pop
adc
rolb
rolb
pop
in
mov
shrl
negl
popa
mov
sbb
add
and
jle
xlat
xor
lods
add
xchg
mov
cmpsl
inc
sti
shlb
fmull
test
ret
xchg
nop
call
addr16
xchg
xchg
pop
jecxz
sub
jmp
dec
dec
addr16
or
inc
push
mov
loopne
je
fcomip
insb
xchg
int
popa
gs
sbbl
in
lods
in
push
adc
mov
mov
rorb
into
inc
arpl
loope
and
sbb
movb
inc
sar
jmp
loope
mov
test
enter
push
jmp
cltd
repnz
pop
arpl
cli
out
mov
jmp
push
mov
out
ret
int
pop
nop
push
adc
aas
mov
addr16
sbb
inc
sti
push
mov
movsl
mov
sub
or
mov
rcll
sbb
add
movsb
inc
leave
push
dec
popa
inc
xor
cmp
mov
sar
.byte
.byte
inc
