mov
ror
adc
and
pop
ret
call
pop
pop
ret
je
adc
call
fcomi
in
call
inc
and
push
pop
pop
and
je
or
sub
sbb
call
mov
inc
or
je
and
adc
adc
imul
pop
sub
or
and
xor
fstp
decb
decl
ja
rolb
or
fsts
gs
add
fucomip
negb
or
mov
cld
cs
sbb
test
jl
std
sahf
adc
or
out
mov
jge
jl
mov
dec
jae
mov
sbb
adc
testl
iret
jle
js
loop
mov
add
push
mov
and
lret
and
fldl
shll
fs
cmpsl
jp
fwait
int
negl
push
add
out
dec
and
rcrl
sahf
in
jle
dec
mov
cltd
push
in
arpl
ret
cmp
fiaddl
mov
mov
or
loop
add
fstps
stc
add
push
or
or
add
dec
je
adc
mov
movlps
and
sbb
in
pop
fistpl
inc
dec
push
call
or
push
fildl
and
adc
and
cmp
insb
add
or
add
and
sti
out
pop
imul
pop
xor
or
mov
xor
jo
jg
mov
or
jl
add
jp
dec
adc
adc
decl
push
mov
je
pop
mov
das
call
push
sbb
loopne
popa
push
je
mov
lea
div
jg
cmpsb
dec
call
repnz
sub
sbb
cwtl
inc
call
adc
cmp
scas
fcomi
div
call
inc
jo
inc
aam
mov
inc
and
in
pushl
call
je
sub
adc
jbe
jl
mov
push
xchg
inc
cmp
push
pop
or
mov
je
adc
imul
aad
shlb
in
ror
enter
adc
cmp
add
push
mov
ds
sbb
fs
adc
jae
fcmovnu
add
sbb
or
pop
push
sbb
in
mov
or
xchg
inc
jne
hlt
popa
or
mov
sub
pusha
mov
outsb
pusha
mov
pop
xor
inc
sbb
or
cld
mov
aas
ficoms
pop
sub
cmp
inc
mov
push
das
sub
and
mov
or
mov
test
cli
pushf
fmuls
inc
push
stos
xor
ds
in
test
xor
outsl
mov
mov
or
pop
xchg
outsb
adc
adc
jp
jg
mov
scas
mov
imul
in
in
fistl
adc
cmp
add
xor
inc
mov
mov
call
mov
adc
in
jbe
jge
je
clc
jl
jg
movsb
or
aam
sub
outsl
and
imul
inc
pop
adc
mov
push
loope
rcrb
lock
pop
fsubrs
nop
icebp
sbb
in
jle
into
mov
pop
fisubrs
stos
cmp
aas
cmp
push
data16
in
ret
xchg
outsl
mov
add
xor
inc
sar
jae
movsl
adc
aam
jb
jmp
idivb
pop
lock
adc
or
dec
sbb
pop
stos
enter
inc
adc
movsl
jle
dec
sub
fldt
movsl
mov
scas
xor
and
or
dec
or
test
aaa
xlat
data16
jne
loope
enter
and
jle
fstpl
push
mov
and
jb
dec
mov
cmp
xor
xor
pop
js
dec
jo
adc
add
cmp
mov
or
inc
xor
cmp
int
ficomps
dec
mov
jbe
and
mov
inc
or
outsl
fcmovnu
sbb
cmp
adc
lock
dec
xor
pop
out
xlat
call
mov
je
hlt
out
inc
leave
mov
or
or
int3
insl
pop
outsb
mov
add
and
aam
jbe
lea
call
lock
jg
les
js
lret
lret
daa
cs
inc
xor
mov
mov
imull
daa
mov
mov
arpl
call
push
and
mov
addl
movsb
mov
mov
inc
sub
testb
into
jmp
add
cmp
mov
cmp
in
jbe
icebp
sbb
ficoms
mov
mov
call
adc
into
mov
das
inc
ljmp
jg
jg
sbbl
aad
fcomps
bound
mov
push
adc
outsb
es
in
dec
lcall
mov
scas
and
xchg
inc
mov
pop
pop
push
imul
call
lea
jmp
inc
mov
cmp
je
in
fsubrl
and
inc
cld
xor
pop
add
fistpll
testb
or
cmp
std
push
ret
pop
sbb
outsb
or
xchg
and
sub
inc
mov
mov
les
aam
mov
je
lret
rclb
addl
in
neg
add
pusha
adc
nop
mov
push
pop
and
decb
and
into
xchg
adc
push
cli
in
or
in
pop
arpl
movsb
stos
fldt
sub
ss
mov
lcall
mov
lsl
js
xor
add
fldt
adc
dec
sub
movsb
lret
add
in
insl
andl
lock
aaa
dec
std
push
aam
adc
sbb
call
jp
aam
in
mov
inc
dec
dec
outsl
jb
movsb
je
or
nop
jbe
insl
lods
addb
adc
mov
push
mov
mov
mov
stc
sub
pop
in
sub
xchg
sarb
out
mov
sbb
or
or
cld
in
mov
je
pop
and
jg
jecxz
das
pop
fiaddl
xchg
inc
dec
xor
sahf
outsb
outsl
fucomi
aad
mov
push
sub
xor
jne
pop
scas
mov
mov
es
pop
jno
sub
sub
lods
andl
and
jae
mov
fnstcw
cmc
ljmp
fildl
cltd
mov
cmp
xchg
pop
mov
insl
aaa
jmp
push
and
orl
in
in
pop
mov
inc
mov
mov
pop
adc
daa
mov
pop
fldl
sbb
fcomp
mov
mov
pop
jg
adc
push
mov
and
mov
movsl
sub
xchg
inc
add
or
fmull
adcl
lods
mov
xchg
js
fcmovnb
fistpl
mov
inc
test
xchg
sub
test
mov
pop
rorl
vmptrst
xchg
push
mov
divb
std
dec
or
xlat
dec
pusha
call
das
sbb
ret
dec
cmp
mov
arpl
mov
insl
roll
adc
gs
out
adc
or
mov
ss
pop
cmp
push
xor
adc
std
pop
sub
dec
icebp
cmc
or
std
jb
lods
mov
frstor
add
pop
inc
mov
inc
fldt
fcomi
dec
push
xchg
icebp
adc
mov
stos
rorb
imul
adc
inc
mov
lods
pop
xsaveopt
mov
or
div
jb
jecxz
in
outsl
or
or
call
arpl
xor
or
jge
popf
stc
fcmovnu
call
sbb
dec
sbb
les
fwait
inc
jbe
mov
inc
mov
jbe
pop
pushf
ja
pop
inc
cmp
mov
sbb
sarb
adc
dec
dec
adc
add
xchg
in
ret
mov
jge
daa
inc
lock
xor
fcmovnu
outsb
or
cmp
or
mov
outsb
lds
xorb
fldenv
jne
ficompl
ljmp
call
cs
add
mov
xor
lods
mov
mov
fnstenv
fmulp
dec
outsb
dec
adc
mov
outsb
mov
lock
dec
in
jne
sti
or
cs
clc
sub
fisubl
ret
clc
mov
cld
push
test
jbe
lock
mov
xor
dec
fstpl
push
adc
mov
mov
lods
adc
mov
fistpl
add
mov
mov
loop
clc
pop
call
xor
inc
pop
or
in
mov
nop
aas
jg
leave
insb
rclb
addr16
inc
mov
mov
inc
in
lods
pop
mov
dec
adc
push
enter
or
ret
imul
sub
vmread
jge
pushf
cmp
mov
ja
inc
push
test
fistps
test
add
inc
jl
mov
mov
cwtl
lcall
mov
inc
imul
sub
lret
hlt
jl
xchg
fildl
or
dec
or
add
jg
imul
sete
in
sbb
es
in
and
pop
sbb
pop
fcmovnu
xchg
mov
and
aas
mov
outsb
in
mov
push
inc
cld
adc
cld
xchg
std
inc
lret
call
sarb
add
jmp
jmp
dec
xor
pushl
insb
sub
incl
inc
ret
loopne
test
clc
mov
test
add
clc
test
jb
pop
mov
insl
xchg
outsb
pop
dec
or
adc
jne
cwtl
xchg
fiaddl
xchg
inc
fsubl
sub
or
add
lods
cmp
ds
mov
jo
test
jno
cmp
std
mov
fbld
jl
rclb
mov
imul
insb
push
sbb
fistl
and
scas
dec
mov
add
jb
adcl
lds
test
adc
sti
aaa
lock
lea
into
or
add
adcb
jmp
clc
jne
add
sbb
aam
cmpsl
cli
add
gs
xchg
cltd
int
dec
pop
and
pop
ud0
sub
and
adc
cwtl
out
mov
outsb
ret
incl
ss
fs
or
cmpl
xchg
loopne
cmp
ja
inc
adc
mov
int3
xor
hlt
and
enter
adc
hlt
push
iret
rorb
and
or
jg
call
or
cs
xchg
ljmp
push
enter
push
outsl
call
outsl
cmpsl
or
scas
mov
notb
cld
movsb
sub
nop
cmp
adc
xor
lock
sbb
sbb
loopne
dec
add
cmpsb
gs
ret
pop
push
sbb
test
clc
add
lahf
faddl
cwtl
and
lret
cltd
fcoms
sbb
andl
sbb
enter
pop
xchg
xchg
shlb
push
inc
cmp
adc
je
and
lock
or
add
pushl
sub
js
ds
dec
inc
dec
out
mov
mov
incb
popl
cmc
push
adc
mov
push
lahf
pop
std
adc
insb
adc
and
sbb
hlt
push
xor
lock
sbb
imul
push
outsl
xor
mov
inc
xchg
icebp
push
sub
push
inc
bound
add
mov
addb
or
out
mov
pop
stos
jo
pushf
pop
add
adc
adc
mov
jo
jb
aaa
mov
push
jo
outsb
sbb
adc
pop
lods
mov
outsl
pop
cmpsb
loope
movb
data16
stos
adc
inc
adc
fimuls
sub
adc
mov
call
mov
das
mov
jo
inc
icebp
call
cltd
push
js
es
cs
lods
inc
adc
in
sbb
idiv
ljmp
mov
mov
fwait
je
jbe
mov
jl
movsl
fcoms
mov
pop
mov
xchg
jae
mov
fstpt
mov
jae
sub
xor
mov
fildl
cmpsb
je
adc
push
push
in
mov
sbb
sub
xor
push
cmp
sbb
and
adc
jbe
cmp
adc
xor
xorl
push
inc
sarl
cmp
pop
into
sub
ficoml
aam
outsl
jno
lahf
dec
decl
repz
sbb
or
in
ljmp
aaa
roll
movb
or
or
jnp
and
push
sbb
push
jl
cmp
push
inc
jg
mov
push
pop
jb
xchg
inc
mov
jmp
xchg
adc
push
es
inc
je
sbb
pop
call
js
fwait
int3
insl
push
push
arpl
and
test
das
icebp
movsb
add
loopne
push
xchg
jb
lock
mulb
cvtps2pi
xor
jae
sbb
sub
xor
pop
loop
dec
pop
addl
sbb
jp
inc
sub
xchg
decb
push
dec
rep
push
std
rcrl
xorl
adc
rcll
mov
in
inc
test
sahf
dec
inc
push
ror
dec
xor
cld
das
cmc
into
inc
inc
clc
xor
insb
inc
insl
adc
clc
mov
call
fildll
mov
jno
movsb
es
jae
pop
mov
cmp
hlt
mov
xor
pop
lods
arpl
decb
or
negb
cmpsb
aad
mov
push
pop
xchg
test
mov
test
push
rcrl
mov
jbe
in
scas
mov
pop
pushf
addr16
fstl
jmp
mul
shlb
rcll
cmpsb
call
orl
push
sti
dec
xchg
pop
pop
js
ss
jp
push
inc
sub
ret
fwait
cmc
outsl
add
inc
and
and
cmp
sub
outsl
in
mov
out
rorb
aad
or
inc
jo
mov
fsubl
rorl
and
lea
ljmp
cmc
setbe
fwait
cmp
push
adc
lret
outsb
mov
jmp
ret
jp
inc
dec
mov
push
ss
pop
push
push
and
cwtl
jno
out
mov
add
stos
lock
push
pop
int
insl
sbb
in
insl
or
nop
and
mov
popa
pop
jmp
hlt
outsb
sbb
jno
call
xor
dec
movsl
pop
inc
stos
cli
mov
insl
out
cld
decl
adc
cmp
or
movsl
xchg
outsb
call
fwait
dec
inc
leave
mov
insb
dec
and
loop
rclb
xchg
add
ret
mov
cmp
dec
sub
mov
js
pop
ucomiss
jle
aam
fs
and
cld
out
bound
outsl
inc
jecxz
mov
mov
pop
fiaddl
and
xchg
mov
dec
cs
addr16
div
cmp
pop
mov
aad
test
push
jb
mov
dec
pop
loop
cmp
or
jmp
sub
push
xchg
mov
jo
push
je
shr
add
pop
popa
addb
movsl
sbb
lods
lcall
fists
insl
divb
cmpsl
jg
fisubrs
into
and
dec
loope
je,pn
pop
and
fildl
rorb
insb
dec
insl
lret
in
stc
lock
push
mov
cmp
adc
ficoml
clc
mov
push
sbb
pop
fs
push
adc
lods
or
sbb
adc
inc
je
lret
js
ljmp
out
clc
inc
adc
jb
inc
add
mov
adc
cmp
lcall
add
or
stc
or
sub
lods
mov
js
imul
or
in
decl
je
cli
jb
cwtl
adc
jbe
mov
sbb
fs
push
loope
movsb
mov
outsl
pop
pop
test
inc
mov
sahf
mov
pushf
leave
dec
sahf
xor
pop
out
das
mov
push
into
adc
jmp
outsl
and
aad
cli
pop
xchg
or
shlb
ret
pop
nop
mov
fbstp
sbb
shr
mov
push
jecxz
lock
sub
sbb
sub
cltd
fisubrl
lcall
dec
ja
adc
ja
pop
push
incl
adc
push
pop
push
clc
and
fistl
jecxz
mov
decl
mov
push
push
or
or
outsl
mov
lods
mov
aas
cs
ret
xchg
lcall
hlt
test
lock
jle
rolb
jns
in
pop
insb
sbb
or
xchg
sub
cmc
lea
adcb
cld
or
sbb
push
ljmp
leave
sub
dec
mov
or
ret
daa
test
insb
test
and
rcrb
jg
clc
adc
dec
dec
adc
lret
movsl
jo,pt
inc
xchg
mov
cmp
inc
or
mov
aaa
js
call
push
ljmp
lock
xchg
sahf
sub
jo
pop
les
lea
stc
imul
std
jg
cmpsb
pop
pusha
scas
jle
inc
loope
adc
enter
int3
mov
pop
sbb
lods
sti
mov
pop
sub
jge
or
andb
jae
xchg
and
outsl
mov
testb
push
add
scas
into
sbb
test
call
jo
adc
adc
or
and
cs
decb
cmp
jl
inc
pop
or
inc
xchg
cmc
insb
dec
lcall
pop
frstor
and
cmp
inc
shll
xor
jb
dec
imul
dec
adc
mov
fdivr
fs
push
xlat
test
repnz
mov
scas
test
jae
xor
jbe
insl
cltd
fstpt
out
jae
adc
test
adc
jne
adc
clc
loope
cld
inc
loopne
es
fimuls
sbb
pop
loope
outsl
ljmp
xchg
test
cmp
xchg
gs
cmpl
loop
add
xchg
xchg
sub
comiss
sub
pusha
into
outsl
or
fistl
mov
inc
jnp
mov
popa
mov
sbb
mov
in
inc
sbb
or
inc
loopne
lods
cwtl
mov
inc
cmp
popa
in
out
std
pop
jg
adc
orb
icebp
cs
sbbb
int3
push
xchg
push
mov
clc
mov
insl
pop
adc
adc
jg
sub
dec
or
fiaddl
jns
pop
jp
test
pop
add
scas
pop
mov
outsl
jns
jns
and
mov
jb
pushf
pop
clc
fbld
cmp
gs
inc
xor
or
push
xchg
adc
jo
sbb
jg
jmp
jo
pop
test
cli
insb
dec
xchg
or
jo
push
xchg
adc
lods
addr16
sbb
fisttpl
mov
mov
cmp
push
test
fidivs
daa
xor
inc
pushf
jmp
lea
mov
jl
mov
clc
jno
lret
arpl
andl
xor
jb
cs
pushl
inc
xchg
nop
and
xor
xor
cltd
pop
and
add
fnstcw
xor
pusha
cltd
pop
inc
clc
jg
shlb
mov
lock
inc
jge
mov
jge
sub
fsub
dec
jmp
inc
push
push
xacquire
inc
xor
cmp
add
sahf
clc
movsl
das
cmc
cmp
push
icebp
cli
call
inc
push
xor
or
insb
pop
mov
or
bound
push
test
adc
imul
adc
jo
or
sub
sarl
xchg
sub
mov
scas
aaa
push
mov
cmp
push
xor
pop
clc
and
aas
jns
or
push
enter
loope
shlb
cmpsb
and
test
test
inc
and
xchg
lahf
mov
pop
in
inc
fbstp
add
mov
mov
inc
or
pop
push
mov
jg
std
in
push
mov
fiaddl
cmp
je
cmc
add
in
gs
popf
shrb
push
sbb
je
cs
adc
nop
cmp
ret
mov
xchg
push
cld
jle
dec
dec
push
cld
jg
mov
xor
cmp
in
addr16
lret
aas
idivb
addr16
jbe
dec
jne
and
cmp
out
inc
adc
in
pushl
xchg
js
sbb
hlt
hlt
fmuls
jne
xchg
adc
xor
xor
das
ret
loope
mov
jl
jb
movsb
push
pushf
jo
add
outsb
clc
or
sub
sbb
inc
cmp
add
jb
xchg
mov
cld
fbld
or
add
sub
loope
jns
push
decl
pop
mov
pusha
push
adc
mov
adc
jno
adc
mov
jmp
imul
je
stos
and
adc
push
sbb
mov
push
addl
mov
inc
lret
outsl
enterw
push
arpl
push
push
push
mov
lcall
mov
xor
xchg
mov
cmp
push
into
movsb
mov
sbb
jg
es
pop
jecxz
lcall
pop
ret
push
jg
push
shll
ja
mov
mov
dec
jp
shlb
mov
push
sbb
push
dec
call
mov
testb
and
faddl
call
cmpsb
xchg
cmpsb
dec
or
adc
sbb
ret
imul
push
inc
lcall
mov
call
fcmove
jne
inc
and
cld
xor
dec
insl
addr16
mov
adc
mov
sub
or
jmp
fsts
les
push
in
mov
inc
cmpb
test
cmpsl
cmpsb
xorb
add
daa
ret
outsb
fnstsw
lods
inc
and
add
xchg
xchg
push
sbb
fnstsw
pop
ljmp
nop
out
jmp
insb
out
add
adc
mov
mov
adc
jne
adc
xchg
and
jmp
pop
adc
leave
lret
sbb
pop
adc
loope
loope
orl
movl
push
jmp
mov
sub
mov
or
call
lahf
arpl
imul
rcrb
xchg
loop
sub
mov
pop
mov
push
add
or
cld
aaa
hlt
add
inc
mov
mov
inc
mov
xorl
insl
jp
sbb
jg
test
popf
xor
add
lcall
inc
out
inc
decl
xor
stos
and
shlb
or
mov
pop
outsb
lcall
push
stos
shll
cmp
sarb
jge
mov
repnz
call
pop
add
adc
cwtl
inc
iret
lret
push
sub
pop
ljmp
clc
jge
push
nop
mov
outsl
adc
cld
ret
mov
lock
mov
jmp
out
mov
dec
mov
adc
lock
loop
dec
and
inc
imul
lock
fistpll
sbb
mov
cli
aas
test
cmc
testb
lds
repnz
sti
add
int
cwtl
rorl
test
std
inc
decb
mov
js
cmp
dec
mov
js
push
mov
inc
imul
mov
push
subl
nop
xlat
jecxz
cmp
pop
cwtl
push
sub
bnd
outsb
dec
adc
lea
adc
mov
sarb
lock
nop
leave
xor
add
mov
aaa
jp
sbb
out
jo
adc
cld
testb
mov
inc
subb
cld
add
or
inc
fdivl
loope
das
imul
shl
sbb
fildll
hlt
sahf
in
lea
pusha
or
ret
xor
decl
cld
insl
pop
mov
outsl
iret
inc
cmp
xabort
int
je
add
std
out
js
nop
adc
jae
cltd
xorl
or
sub
mov
lods
or
orb
mov
mov
cmp
mov
std
mov
int3
push
or
sub
loop
push
and
adc
call
or
add
adc
ja
in
ljmp
hlt
fmuls
bound
test
mov
ret
and
cmp
sbb
cld
mov
or
mov
ret
inc
enter
in
push
or
popa
mov
gs
in
movsl
mov
arpl
test
fldt
je
cltd
test
ret
xchg
adc
cmp
fdivl
cwtl
pop
fwait
jmp
sahf
pop
movsb
std
inc
mov
mov
push
cmp
je
xor
mov
inc
lahf
stos
arpl
mov
sbb
mov
stc
leave
sbb
sub
leave
movl
outsl
mov
dec
clc
or
pop
cld
ljmp
jae
adc
pop
adc
and
adc
inc
push
data16
fucomip
repnz
loopne
and
pusha
mov
cltd
fwait
je
aad
push
orl
adc
mov
adc
call
ret
lea
xchg
rol
fdivs
mov
test
incl
lea
push
call
sub
and
sbb
push
jnp
clc
in
cmp
push
dec
cmovno
ljmp
fildll
push
out
sub
jne
lea
clc
roll
ljmp
leave
lea
pusha
jmp
fildll
push
xchg
xor
cmp
test
mov
mov
subb
cs
push
dec
dec
or
mov
aaa
push
incb
in
add
repnz
cmp
cmp
aaa
lea
sbb
sbb
and
jne
mov
push
sub
addr16
or
cmpsl
adc
ds
fadd
test
lcall
lock
xchg
je
or
mov
ljmp
clc
dec
cmpsl
in
cmpsl
inc
outsb
xchg
int3
inc
add
push
or
mov
inc
xchg
das
fdivrl
xchg
cwtl
mov
and
leave
adc
scas
inc
call
sbb
cltd
inc
arpl
testb
imul
adc
jmp
sti
in
adc
mov
jns
or
out
adc
sub
movsb
jb
fwait
sub
or
scas
or
mov
aad
push
xor
repnz
outsl
or
mov
sbb
loop
push
ja
out
cmp
jnp
xchg
test
add
sub
stos
mov
stos
mov
cmpsl
jle
mov
clc
mov
loope
push
push
mov
jge
jno
inc
push
sbb
nop
movsl
lock
call
std
lcall
cwtl
lock
in
pop
xchg
cmpsb
adc
sub
lcall
enter
dec
mov
das
mov
es
test
add
and
outsb
mov
outsl
dec
bound
das
xchg
pop
in
out
dec
std
or
call
out
mov
or
or
call
mov
xorb
lds
mov
jmp
inc
xor
or
pop
pop
add
pop
adc
push
dec
mov
rclb
outsb
cs
roll
mov
mov
orl
push
push
push
test
or
or
repz
clc
add
push
mov
adc
mov
pop
cmp
inc
test
in
pop
sbb
mov
lods
aas
ljmp
xor
push
pop
pusha
jnp
mov
cmpl
mov
jg
jmp
mov
push
cmp
jne
dec
jmp
mov
dec
inc
mov
sub
lds
cmp
fldt
mov
push
insb
mov
outsb
cmp
loop
fcomip
mov
pop
add
xor
test
mov
fs
arpl
inc
push
jl
jnp
dec
xchg
mov
incl
adc
orb
add
fildll
pusha
jno
xor
xchg
inc
or
mov
mov
mov
gs
movsb
cmp
inc
pushf
pushl
insl
push
inc
ds
push
gs
xchg
faddl
pop
or
sbb
js
setne
nop
movsb
jno
setb
es
sbb
or
mov
or
mov
mov
dec
sub
cli
lods
mov
adc
popf
inc
fwait
cmpsb
sahf
mov
shlb
rcrb
outsb
aaa
shlb
test
dec
mov
inc
add
cld
imul
test
sub
xchg
adc
xor
pop
clc
pop
mov
les
inc
or
cmp
ljmp
les
popa
testb
ret
pop
sbb
icebp
jbe
scas
test
add
lods
mov
movl
lea
jle
cld
sbb
mov
dec
pop
roll
outsl
sub
cmp
xor
or
add
push
out
fidivrl
ret
sub
cmp
negb
outsb
push
decl
outsb
xor
mov
shlb
mov
inc
es
or
adc
mov
jg
pop
sub
loop
mov
pushf
cmp
and
xchg
aam
cli
jnp
call
ds
xor
insb
in
fildll
fiadds
fadds
mov
data16
std
adc
sub
jae
inc
ja
cmp
pop
jle
dec
inc
cmp
xor
daa
dec
ss
fsubp
mov
popf
arpl
outsl
fisttpl
inc
das
rclb
hlt
scas
incl
rclb
or
xchg
pop
std
push
pusha
push
lea
jl
and
push
cltd
loopne
or
mov
sbb
pop
orb
jl
repnz
stos
pusha
and
sub
idivb
pop
pop
int
or
xchg
hlt
inc
inc
mov
jecxz
mov
or
hlt
jb
push
or
aas
inc
into
sub
sti
add
movsb
jbe
jl
dec
lret
call
add
nop
cli
dec
call
sbb
sub
aad
mov
push
cmp
fildll
push
lcall
add
cmp
mov
psubb
jge
dec
shlb
jg
out
les
push
incl
das
inc
xlat
leave
adc
push
mov
dec
inc
sbb
test
loop
inc
jl
lock
jg
adc
popf
sbb
sub
dec
push
mov
pop
push
lret
or
loop
loop
enter
clc
jmp
and
inc
pop
jne
jne
mov
or
sbb
cmp
mov
add
push
loop
sbb
xchg
or
mov
popf
or
push
inc
add
dec
test
ss
pusha
xorb
jg
lock
push
fdivrp
mov
push
pop
inc
enter
popa
or
enter
pop
call
pushf
inc
fs
lcall
mov
or
cs
xor
data16
cmp
cmp
push
cmp
adc
sbb
aad
cmp
faddp
xchg
sub
cmpsb
or
adc
dec
inc
fcomi
fistps
xor
aam
push
push
or
lds
mov
lret
jmp
adc
cmp
cmp
mov
icebp
mov
fidivl
lret
aaa
fwait
mov
rcrb
repnz
sub
push
into
sub
mov
cmpsl
or
sbb
or
dec
sahf
push
sub
mov
dec
sbb
sub
movl
repz
stc
mov
add
popf
dec
popf
aas
jns
adc
mov
push
sti
adc
mov
sti
pop
loop
add
out
push
lock
mov
or
les
dec
sub
je
mov
mov
adc
push
addr16
push
decl
cld
pusha
cltd
push
or
mov
test
je
sub
push
adc
xchg
std
das
sub
lock
adc
adc
insb
dec
lahf
cmp
mov
pop
arpl
add
or
cmp
push
sbb
outsl
and
adc
das
mov
cmpsb
push
dec
addl
xor
mov
adc
and
dec
mov
call
lea
adc
inc
clc
mov
sbb
hlt
inc
in
adc
pushl
imul
in
mov
mov
jg
fildll
adc
dec
ljmp
sbb
mov
mov
add
in
sbb
ja
aaa
and
adc
pop
or
add
inc
inc
ffreep
decl
subb
inc
adc
mov
xchg
sti
mov
fcomps
adc
and
jmp
mov
xor
fists
ret
cmpsl
and
sbb
call
or
ret
jmp
mov
cs
mov
push
dec
mov
inc
mov
sub
stos
outsb
push
lock
sub
mov
mov
inc
mov
adc
or
lods
dec
jns
out
mov
xchg
xchg
repnz
call
fwait
adc
sti
das
shll
test
leave
je
or
das
fdivrl
xor
ficoms
ficoms
dec
movsl
xchg
decl
or
je
mov
pop
dec
lods
inc
mull
or
inc
sahf
push
or
xchg
outsl
arpl
jmp
xchg
shl
lcall
inc
fnstcw
inc
pushf
sub
add
popa
sub
pop
sbb
add
xchg
or
or
addr16
or
lock
out
push
mov
aad
jno
aaa
rclb
fsubp
and
imul
and
stc
loopne
loop
in
jmp
pop
or
jmp
hlt
and
lods
call
xchg
or
sti
mov
adc
inc
jne,pn
cli
xorb
ret
in
in
ret
stos
je
lods
xor
test
pop
js
xor
xor
fistpl
jecxz
or
lods
adc
repz
les
jmp
mov
cmp
das
ljmp
or
je
jnp
lods
pop
clc
adc
test
mov
rolb
dec
or
or
fucomip
jge
test
pop
fidivrs
test
cmp
add
imul
jg
movsl
mov
jne
adc
cmp
scas
and
loopne
js
xchg
mov
push
pop
stc
fcmovne
sbb
pop
sbb
fildll
cmp
mov
jno
push
push
fnstsw
pop
in
outsl
jo
dec
pop
orl
ja
push
sbbb
adc
rorb
xor
jo
rol
jg
test
mov
pushl
mov
hlt
fcompl
shlb
cwtl
push
mov
fisttps
cvtps2pi
clc
movhlps
pusha
repnz
in
mov
adc
and
adc
pop
or
adc
fdivr
jae
fildl
scas
inc
insl
pop
and
icebp
and
icebp
add
add
xchg
inc
insb
jp
sbb
lret
jno
fmuls
jge
add
push
iret
and
call
clc
mov
cmpsl
push
add
call
pop
mov
pushl
aad
xor
addr16
movsb
adc
call
mov
test
in
mov
ss
decl
sub
xor
mov
xor
or
sub
push
imul
lcall
pop
and
je
icebp
push
mov
cli
pop
pop
pushf
jle
or
call
sub
adc
jle
mov
adc
add
pop
pop
adc
fwait
xor
mov
enter
std
pop
push
cld
pop
push
adc
pop
fsubp
xchg
and
jge
inc
fildl
in
in
pop
sub
shlb
je
add
jge
jle
inc
adc
adc
lods
outsl
ljmp
movsb
cmp
dec
sbb
jg
push
xchg
or
or
xor
mov
mov
fimuls
mov
dec
mov
loope
lea
dec
xchg
cld
loope
cmp
push
add
xor
lret
xor
and
or
fiadds
adc
aam
mov
or
pop
jmp
lods
std
shr
es
mov
mov
mov
inc
sbb
xor
mov
repnz
jnp
jecxz
insb
xchg
call
addr16
push
pop
daa
add
js
adc
mov
and
jns
lock
jl
test
push
add
in
jbe
lods
cltd
lcall
jns
xor
and
test
sti
inc
adc
mov
call
cld
inc
arpl
adc
fs
ljmp
out
fnstsw
sub
pop
inc
jp
adc
sbb
outsb
incl
adc
cwtl
push
add
daa
jns
jecxz
jg
pop
adc
xor
movsl
and
push
lcall
in
insl
lods
jp
push
jg
test
sbb
addr16
in
pop
fisttpll
hlt
mov
jo
and
jae
movsb
inc
adc
cmp
decl
cmp
or
dec
mov
or
push
call
in
adc
mov
rcll
cmp
jo
shrl
pop
ds
mov
mov
je
add
dec
add
adc
inc
jnp
pop
inc
or
dec
mov
sub
cmpsb
cld
lods
loopne
adc
mov
jp
out
push
flds
loop
mov
sbb
rcr
ficoml
and
jns
in
cs
jge
add
fwait
insb
imul
lods
imul
and
push
push
fidivl
insb
inc
cld
outsl
les
push
decl
fsts
jg
pusha
mov
and
inc
pop
push
call
cli
jns,pn
inc
mov
in
jns
mov
lock
clc
idivb
cmpsb
push
dec
sbb
mov
sub
test
or
pop
mov
pop
adc
adcb
call
dec
sub
push
push
push
das
shlb
cwtl
or
into
lcall
xchg
jp
shlb
push
std
jge
cmp
mov
mov
mov
mov
inc
fcoms
add
es
adc
mov
sub
jmp
xor
adc
adc
outsl
dec
hlt
aaa
mov
dec
pop
ljmp
arpl
and
icebp
push
lock
inc
insb
scas
nop
sbb
test
add
stc
inc
aad
lock
js
or
jecxz
sbb
mov
outsb
cli
jno
test
je
mov
fwait
or
das
cmc
filds
mov
ljmp
rorb
je
inc
add
push
lahf
fists
xor
pusha
add
jmp
das
cld
pushf
hlt
test
and
mov
icebp
mov
mov
mov
cmp
imul
call
outsb
and
xor
pop
cmpl
es
inc
imul
mov
enter
repz
fldt
lock
cmc
add
repz
in
xor
adc
das
lods
std
xchg
sti
mov
pop
jne
and
dec
sub
adc
sbb
push
iret
mov
pop
mov
mov
cmpsl
jo
ret
je
call
dec
jl
clc
cmp
incl
adc
mov
pcmpeqb
lea
lds
dec
cmp
cli
fdivrs
push
xor
shrb
mov
or
cmpsl
movsl
aaa
xchg
push
out
sar
mov
xor
adc
adc
pop
pop
jne
lss
jg
arpl
cmp
stc
add
sbb
ljmp
das
cmp
testl
js
sbb
lret
outsl
jne
sub
jae
dec
xchg
jns
mov
jmp
cmp
repz
adc
mov
clc
pop
xchg
js
adc
insl
xlat
mov
jne
jb
pop
popa
or
adc
inc
scas
call
cwtl
fadds
outsb
push
sub
push
inc
int3
push
ljmp
mov
ljmp
jecxz
addb
test
mov
ljmp
adc
sti
jmp
xchg
sub
sar
pop
pushf
cmp
mov
mov
outsl
rcrb
mov
in
or
inc
cmpl
and
mov
mov
sub
sti
fdivr
inc
xchg
aas
shr
je
and
mov
cmc
cmp
in
dec
mov
dec
repz
ja
dec
in
inc
ret
mov
pop
dec
add
or
mov
testb
rorl
lcall
and
or
int3
cmp
xchg
adc
aas
or
push
mov
jle
mov
hlt
pop
add
xchg
push
inc
iret
xchg
sub
inc
in
lds
pop
insb
cld
xchg
cmovo
pop
sub
insl
add
mov
cld
je
mov
mov
fisubs
lods
dec
jecxz
xchg
inc
xchg
sbb
mov
stos
pusha
lret
jg
mov
ljmp
es
jmp
lret
nop
xchg
xchg
inc
in
xor
ret
mov
jg
mov
mov
jbe
dec
ret
or
jmp
jg
inc
hlt
mov
mov
mov
test
pcmpeqb
dec
inc
js
mulb
inc
mov
dec
add
inc
dec
adc
add
mov
mov
enter
add
mov
sub
movsb
cltd
push
fsubr
mov
sbb
push
adc
cmc
decl
outsl
mov
pop
jmp
jge
push
jbe
insb
xchg
pop
punpcklbw
lock
dec
jo
inc
push
pop
mov
clc
mov
cmp
or
shrb
push
outsl
in
pop
pusha
movsl
adc
call
jmp
pop
add
jg
sub
cmp
add
mov
mov
movsb
daa
xchg
arpl
les
and
jecxz
mov
nop
pusha
shrl
mov
sbb
inc
sbb
aad
cmpl
adc
sbb
lea
jb
out
fidivrl
pop
bound
mov
add
xchg
test
xchg
mov
movsl
idivl
mov
jecxz
je
jp
or
add
mov
stc
push
jne,pn
xor
nop
inc
inc
xorl
jecxz
gs
mov
fisttps
dec
mov
test
out
cmp
test
fcmovnu
sbb
cld
pusha
popf
or
fmull
pop
loop
mov
ret
mov
and
inc
inc
ret
pushl
adc
jecxz
shll
dec
mov
je
mov
push
aaa
sbb
idivb
push
in
adc
xor
lahf
sbb
inc
je
dec
dec
or
movsb
test
orb
lods
call
mov
add
stc
pop
das
lea
lock
in
inc
subb
fstl
add
jnp
and
lcall
push
stos
daa
int
ficoml
inc
push
scas
mov
pop
jbe
test
or
mov
add
popf
testb
sbb
call
inc
mov
mov
add
out
sbb
push
inc
scas
decb
add
cmp
xor
pop
pop
jge
rolb
and
sbb
les
aaa
filds
dec
inc
mov
cmp
call
push
xchg
or
test
add
mov
mov
fldt
xchg
test
les
jge
adc
add
lea
push
inc
mov
push
sub
pop
adc
scas
les
and
pop
adc
lcall
jb
icebp
mov
aaa
movsl
outsb
sub
or
mov
pop
dec
ret
and
sbb
clc
push
xchg
sub
cltd
test
cmc
adc
aam
mov
in
mov
lock
lock
xchg
dec
pop
adc
mov
xchg
inc
aaa
xor
mov
jle
push
or
loop
movsb
icebp
or
pop
pop
pop
pop
sub
sub
test
cli
aaa
and
xor
inc
clc
shl
push
call
sbb
dec
and
or
call
incl
ret
sbb
lahf
mov
push
push
inc
fimuls
ret
movsl
push
mov
cmpl
mov
aaa
dec
ja
testb
jge
andl
adc
ret
mov
add
aaa
push
jecxz
rclb
sub
xchg
dec
fs
clc
sbb
movsl
xchg
add
mov
outsb
decl
call
std
cli
jne
aam
lods
mov
out
imul
rcrb
insl
fldl
cmp
push
jg
mov
std
nop
push
je
bound
mov
mov
movsb
movsb
jo
sub
or
sub
clc
lret
cmp
or
daa
test
push
dec
call
sbb
push
scas
cwtl
ss
in
adc
out
cli
mov
push
push
out
data16
or
or
xor
ja
scas
lcall
jg
add
pop
push
cmp
fadd
fs
sub
push
dec
jmp
dec
jbe
clc
dec
adcl
imul
clc
push
sub
stos
xor
mov
inc
sub
add
in
inc
icebp
fs
movsl
ds
test
sbb
pop
rol
fcom
and
idiv
sbb
notl
pop
insl
fdiv
mov
mov
roll
jge
mov
adc
adc
sbb
inc
mov
sub
xchg
faddp
rorb
sarb
outsl
roll
hlt
sub
jae
lret
dec
jno
outsl
insl
mov
mov
icebp
stos
incl
add
or
push
call
xor
sub
inc
and
xor
int3
add
and
push
and
ret
push
pop
xchg
movsb
and
mov
aaa
adc
push
lds
pop
pop
inc
jnp
jo
pushl
and
pop
push
adc
jne
add
aas
inc
jne
jl
sbb
pop
and
push
js
add
testb
nop
aaa
clc
inc
nop
dec
fildll
adc
inc
call
jge
push
pop
andb
fstpt
add
loopne
adc
jbe
movsb
xor
pop
pop
mov
sbb
jbe
cmp
subl
jge
xchg
mov
pop
push
je
aas
push
jg
ljmp
push
and
push
cmpl
or
outsb
add
test
out
sub
inc
aaa
ficoml
jg
and
movl
push
outsl
decl
enter
mov
mov
loope
xchg
or
adc
cmovo
sbb
fstp
inc
pop
arpl
pop
pusha
sti
outsl
shll
adcb
xchg
lret
dec
addb
lock
adc
cmp
jbe
jne
push
adc
sub
jle
ljmp
mov
adc
aaa
mov
outsb
xchg
and
cmp
iret
ret
sti
or
out
sub
fcmovne
and
mov
js
sub
xchg
lods
or
xchg
outsb
pop
clc
fistpl
int3
xlat
or
pusha
dec
sub
xchg
sbb
ret
mov
sub
test
cmpsl
push
adc
pop
imul
ss
xchg
sub
mov
pop
mov
jg
adc
out
add
test
lock
cmp
mov
add
into
xchg
insl
xchg
jg
jbe
dec
test
call
lock
fisubrs
decb
jno
nop
cmp
jnp
stc
mov
call
call
push
jbe
je
dec
insl
lods
in
mov
push
enter
outsl
mov
in
es
rcrb
ss
aaa
pop
mov
out
dec
and
lock
add
lods
jle
jbe
mov
adc
nop
cmc
jecxz
cmpsb
and
lahf
test
mov
and
mov
or
push
mov
pop
dec
or
push
int
cmovns
mov
call
jne
jecxz
pusha
jg
inc
or
incb
jge
je
dec
std
sbb
enter
jle
test
pop
lcall
fs
cmp
xor
insb
push
sbb
cmp
adc
sub
jg
orb
enter
mov
insl
fcomi
mov
inc
test
xor
add
ret
aad
pop
loope
notb
mov
jle
and
push
call
inc
imul
xor
insl
and
or
outsl
cld
fists
pop
jl
dec
daa
xor
inc
mov
pusha
mov
push
cmp
adc
mov
jmp
stc
jo
in
ret
add
xchg
mov
and
daa
mov
sub
test
popa
sub
mov
add
add
test
sbb
or
push
int3
pop
xchg
or
call
stos
sbb
push
add
or
mov
aad
inc
mov
cs
inc
int3
sbb
das
jecxz
lahf
shrl
inc
out
int3
inc
jo
ficompl
and
dec
sbb
fdivl
mov
notb
das
sbb
xor
ljmp
mov
das
and
jl
mov
lret
in
fistpll
mov
andl
jg
das
or
push
xor
mov
decb
push
insb
mov
sarl
inc
jecxz
xchg
or
or
jge
aaa
cli
inc
stos
in
stc
push
inc
daa
jns
shlb
lods
cld
mov
imul
and
aad
ljmp
ja
mov
mov
adc
fdiv
into
add
or
aad
je
mov
jg
mov
or
xor
sbb
sub
mov
jmp
sub
mov
push
inc
incw
arpl
push
adc
loope
or
mov
test
mov
xchg
cmpsb
pop
xor
ja
mov
jp
dec
sub
pusha
cmp
test
decl
sub
mov
bound
mov
loop
adc
dec
cltd
push
rol
rorb
dec
decl
xor
inc
ror
push
jecxz
pop
inc
xor
cwtl
dec
rcl
sub
mov
in
adc
xchg
ja
dec
sti
sub
je
bnd
pop
pop
push
les
push
xchg
fldt
sbbl
pop
sahf
jmp
mov
fmull
popa
call
data16
outsl
lcall
loopne
mov
int
lds
call
inc
xchg
jge
mov
imul
adc
je
adc
pusha
inc
push
sbb
ljmp
inc
adc
aaa
test
push
sbb
inc
xchg
daa
adc
adc
xor
or
fbld
ljmp
les
jno
je
adc
jmp
aaa
cmpsb
or
stos
and
test
jmp
adc
jae
inc
pushl
adc
jb
mov
adc
repnz
jbe
xor
adc
dec
xchg
and
test
and
inc
call
or
xor
xor
mov
cld
outsl
fcompl
push
jae
pop
test
test
sbb
pop
mov
shlb
shrb
push
xor
out
hlt
mov
adc
es
test
and
or
xchg
push
xchg
dec
jo
mov
je
adc
push
call
sbb
aas
arpl
lock
dec
loopne
fdivrl
divb
inc
pop
jmp
das
je
mov
mov
or
mov
sti
dec
fcmovnbe
mov
not
cmp
adc
xor
outsl
or
mov
cmp
push
inc
lcall
xchg
scas
adc
adc
std
xor
or
or
adc
dec
jnp
jg
push
std
sbb
mov
mov
incb
jb
adc
push
pop
dec
leave
ja
sbb
pop
mov
adc
jno
mov
mov
pop
xor
jle
xor
or
incl
cmp
fdivrl
add
sahf
aam
int
dec
ret
hlt
ret
mov
add
sbb
jl
das
cld
outsl
dec
loopne
fisttpll
test
lret
sub
and
sub
xchg
cmp
inc
and
push
xor
test
repnz
or
enter
xchg
jle
pop
jb
test
std
adc
call
mov
jge
and
mov
das
mov
es
or
pop
jno
fwait
jns
adc
bound
or
movsb
xchg
in
negb
in
inc
adc
xchg
add
lods
bound
test
cmp
loop
or
xor
lock
rol
aaa
fsubp
outsl
addl
push
or
repz
jecxz
daa
pop
outsl
imulb
rcll
incl
je
xchg
xchg
mov
add
or
aaa
test
ret
outsb
jg
mov
data16
mov
dec
and
outsl
or
push
sahf
mov
mov
and
fcmovne
bound
test
jae
adc
daa
mov
lret
sbb
dec
jge
jns
push
popa
fs
inc
out
cld
outsl
xchg
or
or
in
xchg
xor
dec
aam
outsl
clc
pop
call
pop
loopne
mov
mov
jg
pop
sbb
pusha
out
sbb
xchg
jno
sbb
test
sbb
je
stc
add
test
popf
ja
push
enter
sbb
cmpsl
cmp
dec
fmull
xor
add
push
xor
push
or
sbb
add
mov
fdivrl
clc
adc
nop
xorl
adc
pop
add
insb
dec
sahf
shrb
inc
insl
mov
hlt
push
push
clc
mov
call
outsb
imull
mov
mov
inc
in
cmp
pop
pop
call
rolb
lahf
lahf
mov
mov
mov
test
hlt
jo
jo
clc
fisttps
dec
mov
mov
mov
dec
add
call
les
das
mov
fisubrs
adc
inc
jb
test
push
mov
inc
pop
or
mov
insb
hlt
call
push
push
add
xor
or
cmpsb
mov
outsb
sbb
mov
xor
mov
or
add
mov
outsb
aas
add
jl
or
inc
push
mov
sub
mov
cmp
inc
cmp
jl
arpl
pop
mov
add
inc
ja
sub
inc
dec
ret
xchg
jge
dec
xor
cs
mov
xor
and
dec
data16
jmp
mov
stc
push
pop
loop
push
push
mov
cmp
push
or
xor
cwtl
cs
xchg
fmul
sub
push
aaa
cltd
sub
daa
jno
and
leave
jp,pn
jl
call
das
pop
js
or
repnz
mov
jbe
mov
das
hlt
in
pop
pop
fcoml
pop
add
addb
lock
insb
mov
adc
mov
pusha
test
jecxz
adc
mov
cmp
ret
xor
adc
push
sub
fcomps
jge
mov
fs
xor
out
loope
pop
or
cmp
stos
lret
adc
mov
mov
in
or
sub
jl
and
lret
xchg
adc
cmp
outsl
jg
add
insl
outsl
xchg
adc
mov
jp
std
push
jp
cld
push
cltd
clc
and
call
out
mov
lds
in
xor
jle
outsl
popf
inc
imul
mov
jmp
cmp
add
xchg
pop
inc
cli
imul
lret
outsl
mov
or
cmp
push
cmpsl
in
xchg
mov
mov
jmp
cs
sbb
enter
loopne
jg
pop
sbb
xor
adc
or
mov
daa
inc
cmp
inc
adc
or
mov
xchg
adc
mov
mov
andb
mov
mov
jb
mov
mov
sub
in
push
inc
aam
jne
dec
add
in
adc
icebp
mov
icebp
test
int3
addr16
pop
lock
cli
dec
int
stos
sar
test
lahf
imul
sbb
test
jo
mov
add
imul
pushl
leave
shrl
dec
cld
push
repz
xor
movsb
nop
dec
xor
aaa
push
mov
push
mov
shl
das
std
ret
adc
jge
sarb
iret
adc
test
das
mov
xchg
and
or
xor
xchg
clc
or
add
stos
or
sbb
dec
insb
int3
shrb
adc
call
fnsave
and
bound
push
enter
pop
in
lcall
in
xchg
jle
sub
and
je
mov
jg
ljmp
adc
dec
movl
loop
cmpsb
sahf
jnp
push
jb
daa
push
cli
mov
clc
mov
lds
in
mov
push
mov
mov
lods
sub
in
push
mov
sub
inc
sbb
mov
pushf
xor
adc
fs
pusha
or
movsl
mov
adc
jbe
inc
outsl
jmp
enter
and
or
adc
mulb
xorl
outsl
icebp
inc
hlt
xor
inc
dec
ja
mov
mov
mov
movsb
mov
pusha
outsl
lock
inc
std
in
jl
adc
sub
jp
mov
sbbl
mov
sbb
out
and
dec
cld
dec
dec
outsl
ljmp
aam
fwait
dec
je
mov
and
sub
xor
cmp
test
sbb
stc
fisttpl
std
fistps
mov
push
adc
out
adc
in
mov
and
hlt
jae
inc
fsubs
data16
negb
movsb
jno
int3
adc
inc
mov
jg
jge
push
adc
sub
jno
fsubs
inc
jns
fdivl
push
xchg
ljmp
cwtl
xchg
call
xchg
jp
dec
mov
inc
popa
dec
pop
xchg
adc
lret
test
jnp
or
mov
repnz
inc
idiv
jg
clc
pushf
loop
pop
jo
or
pop
push
fcmovnbe
movsl
dec
movsl
dec
fistpl
sbb
adc
jge
out
add
pop
mov
rcll
push
push
cltd
dec
test
add
mov
add
sbb
loopne
mov
sbb
test
clc
lea
dec
icebp
sahf
cmp
jecxz
cli
mov
jl
roll
inc
sub
test
mov
xchg
testl
pop
repz
dec
add
push
adc
push
adc
pop
loop
std
add
ds
subb
inc
inc
stos
add
adc
mov
adc
incl
outsl
mov
xchg
pop
mov
xor
push
mov
xchg
mov
jl
call
std
jg
sarl
je
jle
and
hlt
and
aas
test
jns
pop
pushf
push
inc
arpl
inc
les
outsb
mov
jo
cmp
or
jb
clc
je
jecxz
lods
inc
mov
in
sar
aaa
mov
add
cwtl
jnp
xlat
les
pushf
xchg
adc
enter
mov
shlb
je
arpl
mov
cli
push
ret
sbb
dec
outsl
loopne
pop
daa
ja
pop
incb
dec
jnp
sub
and
std
lcall
rolb
and
xchg
in
ja
pop
lret
inc
subl
jmp
test
lcall
outsl
jo
out
test
popa
mov
jle
and
sub
push
adcb
mov
push
negl
jp
xchg
fs
test
das
sbb
xchg
mov
cli
add
push
mov
shrb
and
sub
out
jl
pop
fiadds
mov
mov
mov
sub
jae
add
or
outsl
mov
push
or
pop
push
das
jmp
add
push
mov
jnp
jae
stc
xor
jg
fdivr
inc
aaa
lock
add
dec
cmp
mov
adc
jno
inc
outsb
push
mov
and
and
loopne
dec
lcall
xlat
sub
hlt
leave
adc
enter
adc
push
mov
js
cli
stc
mov
pushf
lock
or
fsubp
pop
pop
lret
jmp
mov
clc
je
jecxz
add
mov
ja
imul
cmp
pop
or
mov
mov
dec
in
push
mov
jmp
jne
nop
in
imul
dec
outsl
cmc
mov
inc
add
mov
pop
movsb
loopne
jae
cs
call
mov
pop
lods
in
sub
lods
incl
std
call
push
mov
or
dec
imul
pop
inc
sbb
push
cmp
and
dec
pop
cli
test
imul
cmp
jg
rol
jns
ret
mov
in
or
aad
sub
inc
push
mov
addr16
les
mov
add
inc
ljmp
aas
loope
mov
adc
outsb
lock
push
mov
jge
movsb
sub
fisubrl
dec
adc
clc
dec
pop
into
cwtl
hlt
adc
test
cltd
in
pop
or
rcrb
call
jne
bound
xor
ret
icebp
clc
rolb
call
and
or
shlb
mov
push
xchg
mov
mov
add
push
call
adc
jns
mov
out
push
inc
repnz
aaa
hlt
inc
negl
hlt
orb
mov
inc
dec
call
cmp
fnstsw
add
leave
push
rcll
clc
dec
ret
mov
adc
mov
dec
mov
stc
sub
ljmp
cmc
add
test
stos
stos
mov
or
mov
je
jl
mov
add
outsb
insb
add
or
jg
call
adc
arpl
mov
adc
sbb
insb
cmp
ljmp
out
ret
cmp
inc
in
pop
and
lds
pop
pop
pop
dec
rolb
mov
jnp
sub
push
je
push
sbb
dec
push
outsl
mov
pop
ret
sub
sub
or
cmp
shll
test
in
in
adc
sbb
and
dec
sub
pop
xlat
call
push
lods
rclb
sub
lea
jg
insl
mov
mov
lods
std
or
jl
dec
inc
in
jl
lahf
mov
popa
jle
or
push
int3
or
adc
imul
mov
test
sbb
sub
pop
xchg
sahf
mov
pushf
mov
outsl
icebp
pushl
xor
pop
aad
or
push
shll
in
es
jecxz
add
ds
mov
jbe
or
xchg
cmp
outsb
xor
sbb
xor
sbb
enter
push
hlt
pop
sub
add
hlt
rorb
icebp
orb
mov
mov
das
hlt
xchg
dec
movsl
rclb
jle
add
jmp
xor
mov
sti
test
ds
mov
sub
scas
pop
pop
or
push
inc
loopne
out
enter
adc
inc
jne,pn
rolb
lods
sbb
std
adc
xchg
insl
pop
dec
in
out
mov
lret
aaa
dec
in
cmp
rcrl
push
aaa
ficoml
out
xchg
cmpsl
xchg
insb
sbb
inc
jg
xor
and
clc
sub
and
fisubrs
stc
in
rolb
or
or
or
inc
shrb
das
test
xor
inc
mov
xor
out
call
sub
inc
test
and
jl
or
pop
mov
cli
inc
ss
push
mov
incb
lods
xor
inc
jmp
xor
arpl
jge
push
push
orl
lret
fildll
jl
adc
inc
sbb
mov
dec
shl
pop
or
sub
xchg
or
mov
cs
inc
mov
mov
adc
sar
add
and
push
add
sbb
popa
and
cli
adc
mov
and
mov
or
lock
adc
mov
mov
xchg
les
mov
call
push
add
pop
outsb
in
push
push
adc
push
addr16
xchg
clc
decl
xlat
je
mov
inc
jle
cmp
add
orb
inc
push
adc
popa
test
pop
sub
iret
bound
push
dec
sti
cmp
mov
ret
jle
jb
dec
mov
mov
adc
ss
sub
add
arpl
addr16
loopne
jecxz
insl
scas
xchg
sbb
and
mov
lds
sti
push
imul
into
hlt
in
shlb
pop
xor
aam
pop
mov
adc
daa
add
sar
pop
inc
dec
and
lods
stc
cmpsb
inc
scas
mov
cli
das
mov
inc
fs
push
les
test
test
mov
fbstp
pop
lcall
mov
clc
add
test
je
test
xor
mov
sbb
outsb
push
jnp
mov
sbbl
or
or
inc
push
push
mov
jbe
subb
cltd
jecxz
dec
mov
inc
loope
or
xchg
inc
jb
mov
pop
mov
call
sahf
cmpb
jge
mov
push
je
mov
add
cmp
cmp
notl
nop
push
mov
cs
push
fisttpl
push
jg
adcl
fsubr
pop
add
insl
stos
push
jp
inc
fsubrp
arpl
jg
inc
sub
mov
sbbb
jae
inc
mov
sbb
push
xor
and
fcompl
int
pusha
adc
inc
loop
stos
movsb
fisttps
jl
lcall
cs
or
or
mov
inc
xor
inc
fbld
mov
hlt
nop
jg
jg
adc
mov
stc
push
sbb
mov
clc
dec
les
call
mov
outsl
aaa
mov
adc
or
les
std
xchg
fisttpl
bndldx
mov
cwtl
rclb
ja
mov
jle
jg
push
push
lgs
mov
sbbb
das
sbb
jecxz
push
or
adc
cld
mov
int3
pop
cmp
inc
sti
outsb
and
les
jne
inc
lock
cmp
fistpl
sbb
ljmp
and
jmp
mov
sbb
pop
push
pop
push
xchg
xor
das
adc
mov
adc
mov
cli
mov
mov
cld
je
pop
push
xor
push
jnp
dec
xchg
sbb
add
mov
popa
inc
or
adc
fistl
mov
fs
out
icebp
sub
sub
sti
into
and
call
xchg
adc
xorl
addb
pusha
xchg
fsts
and
lcall
adc
dec
stos
lea
add
jle
outsl
lock
je
sub
into
mov
in
jg
nop
or
mov
stc
mov
repz
mov
rcll
sbb
add
adc
jge
add
test
int3
and
and
mul
out
mov
mov
push
xor
shl
jg
das
shll
or
cmp
add
insl
ja
sub
into
inc
call
das
in
push
pop
adc
out
ss
adc
in
mov
les
into
and
fisttpl
add
das
push
cli
outsl
push
jl
lds
hlt
sbb
incb
pop
loope
or
push
out
inc
push
mov
fildll
clc
pusha
mov
adc
jg
lea
testl
and
jg
xor
sub
adc
sub
xlat
ja
loope
xchg
movsl
sbbl
js
ret
dec
test
mov
or
ret
adc
jle
sub
and
pop
pop
sub
inc
call
jge
mov
xchg
test
mov
test
adc
push
mov
xor
adc
and
addb
push
sub
movsb
mov
fistpl
mov
cmp
inc
mov
aam
jge
and
inc
imul
add
sbb
mov
mov
sub
inc
arpl
push
cmp
in
adc
push
pop
mov
sub
and
outsl
lcall
das
pop
cmp
test
dec
pop
cmp
pop
pop
pushf
xchg
mov
dec
xor
push
fisttpll
ret
jl
idivl
data16
add
loop
popa
imul
lds
rclb
pop
lea
les
lock
jno
cmc
push
insb
jmp
pop
test
mov
repz
fldcw
jg
push
mov
hlt
dec
mov
fiaddl
xor
stos
dec
pushf
aaa
cld
mov
pop
std
in
sub
in
inc
inc
jo
cmp
in
sub
inc
hlt
or
fstps
sub
jmp
pusha
nop
inc
repnz
hlt
mov
sub
sbb
push
in
push
add
lea
bound
outsb
xor
rcrb
mov
fs
add
dec
push
je
inc
les
test
push
inc
mov
push
add
mov
aaa
aaa
sbb
aaa
cmp
inc
and
sbb
shll
aam
in
and
push
cmp
xor
and
and
lret
push
cmp
fidivrs
icebp
inc
stos
inc
loopne
lock
insl
imul
repnz
je
fs
repz
sbb
jne
in
add
or
jnp
cs
ret
cmp
inc
dec
repnz
movsb
xlat
hlt
push
pop
mov
incl
fnstenv
pop
push
aam
pop
je
clc
pop
xor
or
inc
mov
dec
jo
inc
js
inc
mov
pop
jle
notb
decl
and
addr16
lock
scas
sbb
lods
or
mov
inc
scas
or
jle
clc
inc
test
das
sub
ds
mov
push
ljmp
dec
xchg
inc
jo
shl
adc
sbb
je
jg
das
jl
push
icebp
dec
adc
icebp
pop
xor
pop
mov
or
repnz
and
roll
adc
xor
outsb
mov
xor
mov
jmp
dec
adc
sbb
inc
push
cwtl
jg
add
add
dec
inc
cmp
lock
push
hlt
incl
mov
or
fldenv
pop
ljmp
mov
mov
sub
outsb
mov
push
rclb
xor
bound
out
fildl
pop
outsl
and
repz
push
cmp
std
out
or
cli
test
add
popa
pop
sub
loopne
testb
or
pop
or
mov
adc
and
stos
testb
outsb
call
sub
je
inc
cmp
and
shrb
adc
ljmp
xlat
xchg
xchg
push
fucomip
aaa
push
or
in
pushl
daa
push
cmp
lret
inc
push
loopne
je
dec
push
push
add
call
adc
adc
gs
mov
mov
in
pop
popa
mov
sbb
fldcw
popf
push
mov
xlat
nop
mov
clc
fwait
or
repz
adc
push
ljmp
jo
aaa
test
or
dec
sub
xchg
decl
loopne
mov
ret
jb
add
inc
or
jbe
pop
xor
incl
adc
xchg
add
adc
push
out
push
lcall
aam
jns,pt
jb
push
xchg
ret
jg
inc
dec
shlb
imul
xor
push
lock
pop
push
sbb
or
test
or
stos
mov
mov
fs
je
lahf
add
mov
cmc
xchg
js
decl
mov
lock
ds
inc
push
mov
pusha
push
ds
cld
out
jne
mov
push
fldl
addr16
in
sbb
adc
mov
push
cltd
popf
cld
mov
push
mov
mov
pop
decb
or
sbb
aaa
std
mov
adc
jecxz
movsb
popa
dec
adc
pop
clc
notb
stos
adc
inc
or
aaa
jle
movsb
call
dec
dec
mov
lret
outsl
dec
imul
or
xor
push
sbb
mov
inc
or
bnd
mov
mov
adc
lea
pop
lret
in
pop
inc
sbb
mov
push
jle
je
pushf
mov
outsl
jmp
add
movsl
jle
je
jo
aaa
dec
push
mov
push
je
jnp
call
mov
and
adc
and
ret
insl
call
repnz
cmpsw
push
mov
inc
hlt
icebp
xchg
mov
lret
ja
mov
pop
scas
push
adc
xchg
cmp
ja
xchg
clc
jmp
cmp
shlb
ficoml
fisubrs
push
mov
aas
and
dec
sbb
test
fildll
jno
jne
pop
and
out
ret
mov
test
call
adc
push
xchg
bound
outsl
das
ret
sbb
mov
dec
push
adc
jle
enter
pop
add
cmp
test
cmp
sub
push
rcrl
sbb
mov
stos
cmp
push
fsubr
jecxz
jge
and
in
outsl
add
dec
cmpb
ljmp
aas
sbb
jecxz
mov
je
mov
pop
ficoms
call
adc
xor
cld
daa
mov
xchg
hlt
adc
outsl
pushf
lret
mov
enter
movswl
aaa
cli
ja
xchg
adc
ljmp
push
xchg
jb
dec
add
clc
jp
dec
arpl
sub
push
loope
inc
pop
call
push
adc
popa
cmp
inc
jb
jle
lea
adc
out
jg
mov
cli
push
lcall
ljmp
mov
andb
sub
jmp
add
adc
shrb
dec
out
movsl
cmp
jl
mov
mov
jmp
test
xor
adc
call
pop
loop
data16
jb
sub
adc
scas
pop
cmp
das
pop
stos
scas
and
aam
jg
jns
sti
aaa
decl
aam
pop
mov
loop
xor
inc
cmp
in
loope
sar
jg
cmp
jle
or
or
notb
xor
out
add
repz
sbb
test
sbb
xor
pushw
cld
sub
cmpsb
std
or
push
or
movzwl
inc
mov
adcl
inc
xor
mov
repz
dec
int
lea
std
pop
int3
jne
jno
sbb
divl
mov
hlt
inc
cmp
int
ss
fimull
fcomps
mov
call
mov
daa
stc
call
cmpsl
lds
push
mov
cmpl
std
push
outsl
xchg
test
cld
push
fstpt
movsl
ja
adc
enter
loope
inc
or
insl
test
out
aad
popa
dec
jbe
or
push
popa
sub
jg
or
mov
xor
je
scas
xchg
aaa
or
mov
xor
and
imul
jmp
loopne
sbb
orl
in
adc
jmp
push
subl
call
aaa
es
movsl
mov
bound
or
sbb
mov
test
movsl
decl
jo
hlt
fmuls
fisubrs
in
jmp
inc
lret
push
lods
adc
lds
jg
xchg
and
sub
pop
push
push
pusha
mov
mov
data16
mov
jp
sbb
mov
add
inc
mov
push
push
enter
push
mov
inc
adc
stos
mov
add
imul
inc
cs
mov
sub
roll
pop
or
inc
mov
jp
sbb
pusha
push
std
pop
subl
mov
cmp
inc
hlt
shr
pop
cli
or
addl
inc
jnp
mov
mov
or
popf
mov
adc
stos
inc
hlt
popa
push
xchg
insl
pop
fidivrs
mov
sbb
ja
xchg
pop
mov
or
or
lods
nop
aam
call
xor
sbb
jbe
stos
fildll
pop
insl
sbb
or
dec
pop
movsl
ss
je
orl
roll
lret
or
xor
fnstsw
mov
hlt
pushf
aas
dec
insl
testb
cs
call
jp
fs
ficomps
xchg
adc
dec
xchg
or
mov
inc
pop
cmp
inc
out
or
clc
sbb
stos
add
mov
pop
pop
xor
dec
sub
jl
mov
cld
sub
sbb
movsl
pop
jg
push
mov
js
mov
scas
sbb
daa
movsl
cli
das
mov
lahf
lcall
pushl
jg
mov
push
enter
and
pop
test
lcall
mov
faddl
push
or
or
aad
test
stos
mov
ljmp
out
add
outsl
or
jl
lods
push
adc
lods
lahf
sub
inc
ret
add
jecxz
dec
sub
cs
jg
not
jne
push
or
lahf
loop
xor
test
inc
fldenv
or
stos
and
loop
enter
fwait
mov
adc
or
aaa
jle
daa
or
adc
or
push
push
fnstsw
aam
inc
push
sahf
adc
cmp
ljmp
rcrl
mov
fnstsw
mov
adc
add
in
mulb
inc
jns
fmull
push
xor
iret
jg
fldt
mov
rorl
and
xor
xor
sbb
loop
inc
mulb
out
sub
nop
sbb
xor
lock
call
movsb
cs
cmc
imul
js
shr
mov
ja
pop
xor
push
loope
push
add
jmp
push
adc
cltd
inc
mov
push
mov
sarb
ret
rclb
inc
sub
mov
mov
or
shrl
jle
fadds
pusha
cmp
jl
xchg
and
add
pop
cltd
nop
aam
adc
call
jl
and
dec
mov
push
shll
push
ljmp
mov
inc
jnp
clc
jb
dec
add
sub
jmp
shll
sarb
push
pop
push
cmp
fisubs
adc
dec
mov
and
jb
sub
jmp
mov
push
and
inc
out
push
push
std
mov
je
out
enter
outsl
sub
xor
inc
add
out
rclb
mov
jae
adc
lods
gs
popf
aad
aaa
clc
push
jge
shl
pop
inc
leave
int
ret
mov
mov
cld
mov
fistpll
hlt
mov
insl
out
das
jne
in
orl
add
or
xchg
ljmp
dec
addl
int3
mov
add
jnp
mov
sbb
rcrl
cmp
mov
or
dec
jge
test
add
out
cltd
sub
fistl
mov
je
das
fldcw
sub
popa
cltd
les
dec
jne
jg
pop
add
aad
inc
inc
insl
lfs
mov
adc
jne
mov
jle
mov
xor
into
pop
sbb
jg
adc
stc
add
and
subl
xchg
add
cli
inc
and
das
add
xchg
jp
dec
and
pop
add
call
add
pop
jp
cmpsb
or
pushl
add
xchg
xchg
jg
cmp
outsl
icebp
mov
scas
xor
or
test
xor
pop
sar
push
dec
or
add
inc
cmp
fstpt
mov
inc
dec
sbb
sbb
push
jle
dec
std
xor
mov
mov
inc
xchg
pop
faddl
mov
lods
xchg
ja
sub
popa
pop
and
outsl
lock
lock
push
test
mov
xor
ljmp
or
mov
cmpsb
test
cwtl
pop
dec
sub
fdivl
cmp
mov
cmpsl
mov
mov
int
test
out
or
cmp
inc
mov
fdivr
ss
push
pop
adc
add
mov
stos
push
aad
loope
sti
push
out
dec
inc
ljmp
pop
and
fdivl
lret
mov
lock
popa
push
add
data16
jbe
mov
adc
repz
push
and
push
pop
sub
out
pop
adc
int
dec
add
cmp
test
incl
jo
dec
adc
adc
pop
outsl
leave
cmpsl
decl
mov
out
pop
adc
push
cld
push
mov
aam
push
lcall
pop
inc
stos
sub
loop
push
pop
gs
std
arpl
dec
jle
add
je
mov
jl
push
inc
xchg
setl
ret
pop
push
fdivs
mov
int
pop
push
add
jg
clc
mov
dec
sub
pop
inc
dec
pop
push
or
fcomi
sbb
mov
sub
pop
inc
adc
push
mov
push
loop
fldenv
test
cmpsl
and
mov
or
mov
sbb
inc
pop
inc
pop
jne
mov
cmpsl
inc
shlb
das
mov
or
jmp
and
icebp
sbb
movsl
push
pop
sbb
add
cs
pop
xchg
xchg
xor
xor
cld
das
adc
into
test
imulb
cmp
adc
popa
hlt
scas
push
enter
leave
or
test
daa
xchg
in
or
jb
ljmp
cmc
or
inc
xchg
cmpsl
out
and
imul
pop
cmp
into
data16
dec
jg
push
loope
jle
ret
push
adc
clc
inc
daa
imul
inc
push
ret
push
inc
in
sub
push
jbe
cld
sub
adc
inc
movsl
fs
mov
ja
jmp
jl
in
imul
inc
sarl
lods
or
lock
dec
pop
add
cmp
je
insb
cmp
fs
adc
in
mov
sar
ss
and
test
test
movsb
arpl
inc
divb
sbb
add
jl
popa
test
mov
or
sbbb
inc
inc
lcall
cmp
je
add
cmp
daa
jl
cwtl
mov
add
push
xchg
mov
aaa
mov
inc
inc
inc
or
int
ficoms
outsb
das
cld
test
push
or
mov
and
insl
stos
test
xor
adc
stos
ljmp
js
adc
movsl
aas
icebp
push
xchg
insb
stos
jg
sbb
fwait
arpl
sbb
xchg
into
push
cltd
jmp
mov
push
aaa
cmp
fistps
in
push
enter
cmp
inc
adc
push
lcall
mov
jb
mov
rorb
shrl
push
and
decl
jmp
or
aad
inc
xorl
sub
xchg
adc
sbb
push
mov
je
aam
sub
shl
mov
and
jbe
and
xor
pusha
sbbb
add
ret
aam
pop
repnz
inc
hlt
jmp
shll
mov
pop
or
aaa
fsubs
or
fnstsw
incl
xchg
push
cwtl
nop
push
mov
xrelease
mov
pop
fs
fnstenv
pop
clc
es
fdivrs
mov
add
dec
mov
adc
push
inc
inc
jae
je
call
sbb
pop
dec
call
notl
or
push
add
shlb
jo
fdivrp
push
add
mov
pop
in
cmc
add
sub
shrl
js
dec
mov
sub
pop
mov
sub
pop
sub
pop
push
pop
add
and
mov
add
inc
xchg
jne
cwtl
sub
movsb
pushl
pop
mov
adc
mov
jge
pop
rcll
add
and
sbb
and
sub
dec
lods
sbb
jl
bnd
pop
or
jmp
adc
inc
sbb
cmp
orb
aam
push
sub
hlt
inc
add
mov
pop
ret
pop
inc
sbb
jg
cmp
mov
add
adc
push
cs
jg
inc
add
je
mov
xor
mov
les
xor
add
pushf
jmp
xchg
mov
jecxz
pop
dec
mov
mov
js
aas
jae
int3
cmpsl
js
repz
cli
bound
and
nop
je
sbb
loopne
push
xor
lret
cmp
xor
jmp
movsb
pop
sti
or
mov
mov
and
in
aaa
push
cmpb
mov
push
push
sbb
mov
xchg
pop
and
lods
push
mov
aam
popf
out
push
lds
mov
sub
sbb
shll
sbb
add
jb
loope
mov
es
roll
or
lods
or
and
add
ret
je
and
and
and
gs
popa
incl
cld
inc
dec
lds
jmp
rcll
popa
call
push
push
cltd
and
mov
add
xlat
pushf
adc
hlt
push
mov
clc
mov
mov
xchg
inc
lret
cmp
std
outsl
pop
mov
cs
jg
xor
dec
push
xchg
adc
das
push
subl
pop
inc
adc
mov
push
mov
pushl
or
dec
pusha
cmp
adc
inc
addr16
mov
or
or
fwait
sbb
sub
xor
push
mov
and
add
test
loopne
call
push
pop
xor
jg
cwtl
inc
repnz
ss
cmp
aam
je
or
add
bnd
mov
mov
loope
mov
arpl
push
and
add
jbe
outsb
pop
sbb
jbe,pt
adc
xor
dec
rorl
xor
das
cld
inc
cli
cmove
inc
jne
aam
or
jg
das
mull
jns
pop
call
sbb
add
jg
subb
mov
xchg
sbb
pop
add
shlb
stos
pop
out
jmp
push
out
cmc
xor
enter
dec
pop
shrd
lret
add
push
aaa
fsubrs
cvtpi2ps
or
cmpsb
sarl
aad
call
enter
jne
adc
loope
or
jne
add
or
test
aaa
mov
add
subl
rorb
adc
out
sti
pop
in
dec
cltd
xchg
outsl
pushl
into
add
sbb
pop
mov
or
in
call
pop
cmpsl
and
inc
enter
mov
imul
call
adc
add
or
inc
add
adc
mov
add
mov
inc
or
cli
sbb
jnp
or
jmp
jmp
inc
jb
dec
adc
dec
pop
lock
add
scas
ljmp
rorb
pop
cld
jae
in
pop
jne
mov
mov
cli
ja
mov
rorb
add
movsb
push
pop
mov
pop
sub
sti
inc
xor
jge
xchg
push
ds
mov
add
mov
or
fs
test
mov
lea
push
cmp
jg
call
fistps
out
inc
and
xor
or
jmp
lds
and
pop
sub
jp
or
lret
or
repnz
rorl
jno
jnp
mov
jne
and
or
pop
push
dec
jge
cmp
inc
fldt
enter
aam
add
in
sbb
cli
push
cld
push
fldcw
pop
add
pop
push
add
fidivrl
pop
push
fisttps
dec
inc
cmp
imul
mov
or
sbb
jo
push
inc
adc
dec
inc
in
pop
leave
aas
je
mov
ret
inc
pop
inc
dec
push
sar
or
outsl
jno
or
sbb
pop
stos
mov
and
repnz
mov
fistpll
or
mov
jle
loop
mov
mov
xchg
cmpsl
adc
gs
pushl
call
jecxz
arpl
cmp
imul
decl
mov
loope
inc
mov
mov
push
subb
nop
lcall
push
pop
inc
out
push
addr16
xor
jg
bound
aad
adc
clc
or
in
movsl
adc
ljmp
xor
jle
pusha
xchg
mov
loopne
fdiv
icebp
or
lods
adc
ss
pop
xor
xchg
add
std
jmp
inc
inc
icebp
subl
xchg
mov
inc
jecxz
sub
aam
testb
mov
aam
stc
and
ret
cmp
push
push
dec
mov
or
popf
daa
sbb
call
mov
and
xchg
or
sbb
pop
out
cmpb
clc
fisttps
adc
cmp
cmpsb
test
int3
ljmp
call
adc
sbb
jg
imul
call
std
push
sti
daa
pushf
sub
les
in
cmc
jne
jg
idivl
in
inc
leave
mov
std
inc
mov
push
addb
xor
jl
sub
adc
adc
addr16
adc
mov
mov
rcrl
cld
xchg
and
dec
insb
push
and
int
pushl
dec
mov
or
mov
nop
sub
je
adc
cmc
aas
sbb
and
or
xchg
cmc
xchg
outsl
sbb
inc
sub
adc
add
aam
pop
out
call
cmp
lds
mov
das
icebp
fildl
imul
lds
mov
aam
or
adc
mov
sub
popa
mov
stos
test
and
jne
push
inc
mov
lods
cld
popw
cmp
aad
jmp
sbb
pop
sub
int3
and
fstpt
xchg
pop
cld
lret
popa
test
mov
and
repz
push
add
xor
mov
jno
stos
cwtl
fs
fadds
cmp
aam
les
out
mov
clc
push
adc
mov
lods
cmpsb
int3
rclb
adc
mov
rcrl
insb
mov
lock
clc
pop
loope
std
fwait
mov
or
pop
in
cmpsl
or
mov
mov
decl
pop
add
popa
nop
enter
mov
test
adc
mov
and
jmp
or
jge
push
aad
jmp
pop
outsb
push
cmp
sub
dec
mov
out
or
loop
cld
dec
push
mov
lret
xchg
jae
sbb
sbb
inc
and
pop
cmpl
push
je
push
sub
cmp
xchg
dec
push
pop
mov
imul
in
rclb
cltd
jne
in
mov
ret
insb
je
mov
scas
pop
dec
int
sti
inc
fsubl
ret
sbb
adc
pop
adc
test
loopne
in
outsl
call
call
insb
add
mov
xlat
dec
add
pop
aaa
or
mov
push
mov
decl
and
mov
lea
es
ja
push
lods
inc
sub
cmpsb
push
adc
aam
lahf
jl
out
pop
and
jecxz
inc
jmp
xchg
adc
push
fistpll
push
push
outsl
aad
ret
imul
dec
mov
clc
pop
sub
cmpsl
leave
pop
sbb
scas
inc
pop
in
data16
pop
bnd
push
and
movsl
mov
jle
xor
fstpl
mov
jl
test
lea
push
int3
hlt
clc
clc
add
inc
xchg
gs
inc
cmp
pop
adc
ds
push
inc
dec
cmp
adc
or
bound
dec
mov
incl
pop
xor
mov
out
sti
pop
rcr
test
idivb
lcall
inc
insb
inc
cmp
and
lcall
or
test
into
movsb
pop
call
sub
adc
mov
adc
jbe
cs
js
mov
movsl
mov
cwtl
push
sbb
and
popl
inc
sti
dec
mov
das
sbb
lcall
sahf
sub
lock
mov
and
arpl
sub
cmc
imul
ljmp
adc
mov
movl
lods
int3
arpl
and
jl
adc
aas
pusha
aam
fistpl
xchg
dec
inc
jmp
call
mov
inc
xor
cs
clc
push
push
push
xchg
andps
jl
clc
pushl
sbb
mov
lret
lret
push
inc
imul
fdivrp
or
xor
xchg
imulb
fldt
sti
cmp
pop
lods
push
lret
pop
in
arpl
sbb
push
or
mov
pop
lret
sbb
clc
xor
or
mov
pop
clc
cli
out
jg
insl
outsb
or
cmpsb
cmpsb
pop
mov
cmp
pop
clc
pop
fdivrs
jnp
movsb
je
add
pop
dec
jl
jmp
add
pop
mov
mov
mov
lea
and
orl
mov
jo
pop
jp
lahf
scas
inc
mov
cmc
pop
jmp
cli
mov
pinsrw
call
insl
test
mov
incl
call
sbb
pop
pop
push
inc
shrl
cmp
icebp
add
push
sbb
icebp
push
cld
push
dec
int3
ss
xor
pushf
xor
mov
adc
decl
cld
aad
dec
or
sub
push
mov
in
cmp
test
mov
jns
push
sti
in
ljmp
add
ret
call
ficoml
jl
lret
fcmovnu
push
test
movsb
lock
pop
int3
inc
cmp
testb
adc
push
fcoms
xchg
out
mov
ret
push
inc
in
add
push
mov
test
lret
call
add
insl
and
repnz
das
cld
jmp
cmp
or
mov
testb
pop
das
lds
pop
fyl2x
test
jae
sub
sar
lods
jl
cmp
sub
or
xchg
cld
jo
out
jecxz
cltd
sub
loop
das
push
mov
xchg
loope
and
xchg
aas
mov
push
aaa
fisubrs
outsb
xor
dec
adc
fistpl
xchg
loopne
fisubl
xor
mov
test
sub
dec
icebp
fstl
ss
cli
fistl
int3
mov
xchg
clc
add
xor
sbb
push
mov
inc
int3
sbb
jmp
aaa
xchg
cli
push
mov
outsb
add
jg
push
je
ret
xchg
sbb
enter
sub
push
pushf
pop
dec
test
decb
cmp
js
mov
adc
mov
hlt
pop
push
js
or
or
js
fildll
mov
repz
and
stos
push
cmpsb
repnz
jle
movsb
lea
insb
call
call
mov
shll
jne
out
loope
sbb
sub
add
or
aam
out
repz
jg
mov
movsb
test
push
incl
mov
cli
xorb
cmp
jae
sbb
adcl
xchg
jne
mov
or
pop
stos
sub
mov
outsl
push
pushl
fidivrs
jbe
push
add
dec
and
popa
loope
and
ds
data16
mov
jg
cmpl
add
shlb
popf
mov
shr
mov
or
cmpsl
outsl
shrl
jns
movb
mov
mov
add
rorl
cmp
aaa
mov
idiv
jb
ffree
add
shl
inc
mov
jae
push
sub
fs
stos
jg
movl
loope
adc
pushf
mov
push
push
fwait
push
add
mov
out
push
inc
test
inc
fnsave
mov
mov
inc
and
jb
inc
inc
dec
mov
clc
jg
push
call
pop
pop
leave
movsl
jnp
pusha
stos
pop
cmp
dec
mov
aaa
je
pop
js
push
subb
adc
xor
mov
call
cmp
mov
aas
pop
adc
test
inc
data16
pop
clc
icebp
fidivs
add
movsb
fsubrl
pop
test
cmp
lret
push
inc
ja
adc
jne
lods
fistpll
dec
dec
or
dec
or
push
pop
ds
push
icebp
mov
mov
sub
push
or
fldt
and
xor
faddl
clc
lock
pushl
xor
gs
imul
movsb
mov
mov
es
add
dec
jno
mov
sbb
ret
xor
fsin
mov
mov
mov
pop
cmpl
call
inc
jecxz
aam
orb
outsl
inc
movsl
shll
test
ljmp
ds
outsb
mov
push
loopne
dec
pop
mov
xor
mov
adc
aaa
xchg
push
dec
cld
loope
sarb
cltd
cmp
insb
imul
test
arpl
in
pop
jne
jmp
xchg
mov
das
pop
cli
push
imull
mov
mov
lods
xchg
xor
rcrl
ret
jae
nop
xor
gs
lock
test
push
mov
push
lcall
sar
xor
xor
test
vmovsd
call
ja
adc
jbe
pop
cwtl
push
lret
pop
xor
push
out
pop
dec
inc
fsubs
mov
mov
movsl
sbb
mov
out
ljmp
icebp
add
lea
and
lods
decb
and
sub
and
jl
ljmp
inc
add
adc
sub
fdivl
dec
dec
jg
shll
cmp
jb
adc
aad
or
cld
and
xchg
mov
inc
mov
sbb
sar
jecxz
adcb
fists
jecxz,pt
mov
lock
mov
dec
out
pusha
and
aaa
sub
jmp
sub
or
je
lock
xor
add
rcrl
inc
subb
inc
mov
mov
lock
lea
and
repnz
push
cmc
ret
int3
add
jmp
ret
bound
jmp
andl
and
call
gs
add
jge
pushf
icebp
xchg
sti
mov
adcl
cmp
idivb
inc
mov
cmpb
sbb
aaa
mov
and
cld
pop
add
jmp
jno
pop
negb
les
ret
or
mov
aam
ljmp
daa
ret
push
inc
enter
and
in
cmc
or
clc
cmpsb
divb
mov
add
add
adc
sbb
adc
adc
in
adc
sti
xlat
mov
push
dec
inc
ds
dec
push
sti
outsl
pushf
push
sbb
and
test
sbb
cli
mov
imul
imull
das
pop
je
push
das
cmc
xor
je
or
inc
fiaddl
sbb
aam
or
push
pop
mov
test
mov
mov
pop
sbb
insl
cmp
jge
ja
pop
out
js
call
sbb
or
call
ja
clc
inc
ljmp
mov
call
lods
mov
adc
add
lock
mov
push
xor
sbb
cmp
lods
sub
mov
jns
jmp
sub
push
insb
pop
jmp
push
pop
lret
cltd
lock
sub
mov
test
or
push
inc
sub
sbb
or
in
xchg
popa
les
les
mov
jne
loopne
mov
nop
pop
add
fs
adc
add
mov
jle
mov
pop
cld
dec
xchg
adc
lods
jge
jmp
fistps
aam
clc
movsl
test
into
call
ret
sbb
mov
inc
pop
pop
mov
sub
mov
mov
ss
cld
add
stos
in
incl
push
jg
push
push
pop
add
cmp
pop
mov
movsl
mov
rol
jg
add
push
inc
das
adc
lret
inc
arpl
mov
and
pop
mov
mov
add
call
sub
je
xchg
add
lahf
aad
jl
inc
aaa
inc
cmp
ficoml
lock
fiaddl
fisttps
lods
sub
lea
xchg
mov
mov
inc
and
into
xchg
sbb
das
add
into
adc
outsl
cli
pop
or
loopne
repz
decb
dec
jecxz
lds
sub
or
daa
mov
dec
push
std
xchg
jne
in
popf
cmp
xchg
inc
decl
mov
jb
cmpsl
je
cltd
mov
outsl
adc
je
adc
push
or
or
add
lods
call
imul
ljmp
sbb
push
fmuls
push
insl
or
sbb
repnz
shlb
pop
jp
mov
and
pop
lods
std
push
pushaw
addl
pop
mov
enter
jge
push
sub
loopne
decb
test
mov
mov
add
popf
mov
mov
xchg
mov
dec
insl
frstor
incl
cmc
dec
add
cmp
mov
xor
inc
push
out
aas
mov
sbb
xchg
stos
sbb
mov
dec
adc
cmc
push
int
incb
shrl
ret
into
mov
push
sbb
jns
mov
sbb
mov
fistps
mov
orl
jo
cmp
mov
call
mov
test
out
ret
jne
mov
outsb
insl
sbb
dec
shl
pop
sub
ret
shll
mov
dec
popa
pop
sub
jg
add
and
mov
loopne
shll
and
sub
lock
mov
xchg
hlt
les
add
call
mov
lods
add
add
cmp
and
add
or
xchg
loopne
mov
aad
setge
push
inc
shlb
xlat
icebp
pop
es
cs
cmp
ret
mov
gs
into
dec
sbb
adc
mov
mov
shl
push
push
decl
pop
cltd
out
sbb
nop
imul
mov
std
push
adc
jmp
scas
popa
xor
jg
mov
bswap
mov
jns
hlt
mov
aaa
jmp
add
sahf
add
push
mov
adc
xor
cmp
das
jne
les
push
fnstcw
aaa
pop
clc
mov
mov
add
sub
dec
daa
test
sbbb
clc
pushl
pusha
js
mov
pop
push
or
mov
les
fwait
bound
mov
xchg
add
cld
loop
jno
cmpsl
orl
sti
lock
inc
sub
inc
or
pop
ljmp
dec
adc
cmp
push
mov
clc
es
ljmp
mov
add
or
xor
or
rcrb
push
sub
stos
in
mov
xor
out
mov
fwait
xchg
in
adc
mov
leave
stos
or
fimull
add
jge
and
rorb
or
pop
sbb
push
lret
sub
ds
imul
fucom
mov
adc
incb
cmpsb
decb
mov
icebp
jle
or
cld
fsubr
xchg
mov
add
add
add
inc
std
cli
adcl
lcall
test
insl
mov
jb
ret
call
push
push
cmp
in
aaa
cld
sbb
jnp
dec
sub
and
mov
mov
fwait
pop
pop
enter
je
ret
notl
mov
or
pop
cld
ljmp
cld
add
cs
mov
xchg
pusha
xchg
add
or
adc
mov
and
fs
scas
xlat
enter
pop
call
mov
push
sbbl
pop
pop
pop
fisubl
call
pop
jne
int3
jle
outsl
xorb
xor
or
mov
jnp
jg
add
ljmp
or
jg
sbb
mov
or
pop
push
pusha
ljmp
lret
loop
and
dec
or
cmc
dec
cmc
xchg
inc
sti
add
je
adc
and
je
rcrl
push
adc
idivl
insl
add
and
sbb
push
jo
push
data16
mov
dec
mov
xlat
mov
xor
xor
call
xchg
jmp
push
jno
inc
jecxz
dec
mov
ss
mov
add
neg
push
lods
mov
test
and
cmpsl
xchg
pop
sbb
dec
movd
sbb
xchg
sub
or
push
dec
or
inc
mov
xor
leave
jns
loop
ret
stos
jp
jle
xor
push
mov
push
inc
std
pop
cli
pop
scas
test
mov
insb
lret
sub
lods
ret
imul
xor
or
or
cmp
adc
add
in
inc
je
testb
push
arpl
fidivl
lahf
jne
push
mov
shl
dec
inc
dec
lahf
cmp
mov
scas
pusha
adc
pushf
fwait
incb
jg
xchg
inc
pcmpgtb
xchg
call
fidivrl
pop
xchg
popa
test
jmp
test
incl
mov
inc
inc
not
insl
incl
ds
inc
pop
adc
test
nop
xor
into
incl
mov
mov
jge
adc
xchg
cli
outsl
jp
sub
ret
lea
cmp
das
pop
pop
jo
add
das
cld
das
clc
aas
leave
adc
sub
dec
sub
lods
sub
push
xlat
test
mov
aaa
pushl
xchg
js
pusha
xor
add
jne
fs
mov
mov
rclb
add
push
rorl
cpuid
or
mov
cld
adc
and
into
fs
and
push
xor
xchg
push
adc
sub
loopne
xor
stc
sub
sub
call
mov
xchg
dec
and
fcoms
push
jbe
ljmp
adc
ss
call
scas
inc
imul
les
test
inc
jno
push
hlt
inc
je
scas
pop
and
outsl
std
das
xor
inc
ss
mov
or
jns
jp
fisttpl
and
rclb
pushf
mov
sti
fildll
jmp
lods
lahf
inc
cmpsb
mov
outsb
lock
jbe
lea
lock
adc
dec
mov
inc
adc
fcmovbe
sbb
popa
and
and
xchg
movsl
mov
add
fmull
test
inc
xchg
pusha
adc
incb
inc
cwtl
sub
mov
push
adc
mov
int3
and
and
sbb
cli
test
fadds
dec
fistpll
sub
mov
sbb
xor
adc
repz
or
int3
ficomps
nop
flds
mov
xchg
mov
push
mov
inc
adc
cmp
add
es
mov
mov
inc
inc
lods
aam
enter
mov
hlt
or
or
mov
pop
adc
notb
sub
jno
aam
icebp
inc
pop
in
adc
dec
sbb
shrl
test
jmp
push
xchg
push
add
cmp
jae
jl
push
sbb
sarb
jmp
arpl
je
or
pop
clc
mov
add
pop
repz
adc
cmp
lret
jge
or
call
std
fbstp
mov
add
es
rcll
mov
in
jb
cmp
or
out
pop
adc
lock
or
pop
adc
mov
mov
mov
fcmovnu
mov
mov
xor
ljmp
add
divl
jle
inc
xor
adcb
dec
js
test
cli
sbb
inc
lods
jg
mov
or
jle
daa
mov
inc
jmp
pop
mov
xchg
jns
cmpl
es
jb,pt
pop
fcmovnbe
fistps
jg
mov
jg
pop
adc
fdivrs
fdivrl
push
xchg
call
or
movsl
mov
jo
js
ficomps
sub
cld
std
rorl
ss
je
clc
loop
push
sub
ljmp
push
or
add
mov
jl
ss
or
mov
jb
arpl
mov
inc
enter
addr16
clc
add
test
mov
adc
mov
int3
jnp
int
subl
stos
fiadds
pusha
lods
lds
call
push
imul
inc
dec
cmp
orb
sbb
push
or
int
or
mov
push
lea
and
rclb
add
jg
push
int3
push
loop
mov
pop
int3
jl
daa
clc
sbb
add
ljmp
add
pop
mov
xchg
add
std
sub
lock
push
push
sub
mov
dec
test
stc
ljmp
fmul
out
push
or
mov
repz
insl
dec
rcll
aam
cmovs
mov
and
stos
hlt
repnz
mov
cmp
pusha
sbbl
mov
nop
addb
cmpsb
je
hlt
gs
mov
cld
fsubs
cli
lcall
sub
xchg
leave
shll
pop
push
pop
xchg
cmc
sbb
rcrb
rol
call
or
sti
popf
sub
stos
and
dec
out
pop
or
test
je
out
psllw
xchg
loopne
pusha
cmp
daa
xchg
cmp
sbbl
das
ret
pop
loopne
xchg
mov
mov
mov
fistl
popf
mov
insb
add
das
call
lea
dec
push
and
mov
lds
push
push
xchg
in
push
inc
mov
scas
lahf
in
and
lock
adc
jp
sub
fistpll
cs
dec
xchg
cli
push
outsl
das
sbb
jmp
or
adc
jnp
xor
ret
mov
mov
ja
mov
cmpsb
pop
jl
mov
inc
mov
iret
mov
je
sbb
jns
jg
in
rcrb
int3
inc
jne
pop
je
inc
jle
pusha
call
inc
and
sbb
sahf
into
sub
adc
cmp
pop
ret
pop
mov
adc
push
adc
stos
shlb
cmp
pusha
mov
push
lods
pusha
lock
das
cld
dec
jl
bound
cmpsl
or
sub
scas
sbb
add
fisttpl
pop
pop
das
std
sub
lcall
ret
loope
std
or
jb
xor
dec
aaa
sbb
out
mov
dec
sub
sub
movsb
cmp
add
cmp
dec
pop
jg
mov
test
sbb
iret
or
lret
or
push
pushl
dec
and
clc
add
jecxz
out
sarb
test
adc
and
das
jo
js
fstl
xchg
icebp
sub
test
mov
adc
add
jge
mov
or
mov
and
je
dec
movsl
cmp
outsb
call
fildll
push
jo
jb
add
sbb
fbstp
insl
pop
sub
cmp
xor
rol
ljmp
cmp
sub
xchg
mov
iret
xchg
sbb
out
fnstsw
movsb
dec
and
cmpsb
std
xor
jnp
data16
cs
add
adc
cs
fs
dec
aam
mov
inc
ds
fstpt
test
dec
test
jmp
push
dec
xchg
std
mov
lods
loopne
mov
adc
call
pop
jmp
add
xorb
cli
or
or
andl
and
pop
cmc
mov
imul
xor
push
test
dec
dec
mov
negl
push
add
je
add
xor
shlb
mov
ret
push
clc
lods
call
sub
inc
negb
mov
dec
pop
rorl
shrb
shll
ljmp
add
incl
sub
push
jmp
or
and
jge
fnstsw
icebp
inc
jmp
dec
cmp
mov
pushl
add
shlb
cmp
fsubp
push
movzwl
clc
inc
shrb
jne
inc
inc
and
mov
mov
cmc
push
adc
sbb
xchg
xchg
inc
sub
pop
adcb
imulb
jb
sbb
xor
and
inc
or
das
inc
pop
call
xor
leave
jne
in
jge
jg
mov
xlat
jmp
pop
in
imul
or
mov
jo
jae
pop
test
pop
jne
add
test
push
push
push
popf
xor
push
or
inc
pop
loopne
dec
push
inc
mov
push
inc
das
mov
icebp
call
ja
test
jo
add
mov
mov
mov
xor
dec
mov
lcall
cs
adc
add
mov
cmp
pushf
pop
das
aam
movsl
test
jecxz
sbb
or
call
mov
jb
mov
sub
or
dec
add
iret
jae
cmpb
jne
jns
dec
mov
ss
arpl
lock
dec
add
pop
jg
hlt
pop
sub
cli
retw
gs
pop
lock
stos
fnstsw
test
jno
and
sti
rclb
jle
xchg
add
fwait
push
out
cmpsb
call
cmp
std
das
rcll
out
and
je
pop
call
jg
inc
jnp
dec
and
cmp
ret
cmc
inc
sbb
mov
sbb
cld
mov
push
inc
mov
outsb
or
adc
xchg
fiaddl
mov
lea
imul
xor
dec
ljmp
dec
jmp
or
add
jne
xchg
and
or
xor
jo
lcall
adc
adc
pop
jl
jg
in
adc
inc
sub
pop
cli
mov
push
push
or
inc
lods
xor
lcall
jmp
in
xchg
pop
mov
test
ja
pop
pop
adc
jnp
cld
mov
push
or
lds
outsb
lcall
es
xchg
pop
jmp
mov
in
inc
pop
sub
push
sub
adc
sti
adc
mov
stc
cmpsl
dec
sub
mov
jae
mov
pop
loope
xchg
mov
into
mov
mov
jb
fildll
xchg
and
in
adc
adc
jg
lods
ljmp
adc
or
fisubrs
cld
mov
jmp
loopne
ljmp
sbb
ret
shr
imulb
jo
and
cmp
incl
cmc
pop
sbb
das
inc
mov
or
add
sbb
add
in
sub
sbb
push
sbb
or
mov
adc
or
or
lock
adc
iret
dec
in
call
push
in
push
or
fisttpll
jg
mov
sbb
adc
test
aad
and
or
mov
adc
push
push
adc
ja
xchg
stos
cmp
pop
sub
call
add
cmp
cli
dec
movsl
or
movsl
lods
and
roll
add
push
call
jb
cmpl
mov
mul
jle
jae
lds
pop
sbb
icebp
add
inc
jmp
mov
add
movsl
outsl
pop
cmpsl
scas
xchg
bound
repz
int
fs
or
mov
mov
pop
push
and
loopne
enter
mov
push
mov
nop
adc
enter
or
sbb
cli
outsl
call
repnz
sahf
incl
mov
nop
mov
sub
pop
pop
push
faddp
cmpsl
sub
push
jae
shlb
sbb
mov
daa
cli
inc
jno
cltd
js
and
dec
addr16
and
pop
mov
sub
add
lahf
lods
push
in
mov
xorb
test
jb
lods
adc
sti
clc
fbld
ss
add
pop
adc
idivb
nop
mov
adc
adc
xor
outsl
jg
call
jl
dec
test
pop
or
jge
in
mov
neg
test
jecxz
lock
cld
cmp
cs
lods
and
stos
in
push
sbb
cmc
outsl
push
cmp
add
aas
mov
movsb
push
or
out
sub
ljmp
mov
enter
xchg
jae
mov
out
sub
inc
in
push
inc
pop
mov
lods
or
in
idiv
mov
cmp
xchg
call
dec
adc
stos
push
call
fwait
adc
popw
gs
jg
arpl
call
jnp
nop
mov
mov
push
mov
xchg
lods
mov
lods
add
jle
jp
xor
ljmp
push
mov
lret
cwtl
int
push
pop
jg
dec
pop
gs
or
lcall
push
fistpl
push
and
add
fisubs
cmp
mov
cmc
jle
pop
outsl
mov
inc
push
call
cmpb
ja
jns
fdivr
mov
mov
dec
mov
jecxz
mov
mov
clc
mov
push
ret
cltd
adc
sub
and
inc
lahf
and
lahf
mov
cmp
call
test
xchg
mov
cmp
je
je
call
call
mov
sbbl
push
test
rorl
test
cmc
sub
inc
or
fnstsw
das
xor
test
repnz
in
mov
in
or
in
aaa
cli
cmp
testl
cmp
lock
in
inc
testb
pusha
nop
mov
pop
push
or
add
aas
cltd
jecxz
andl
sbb
in
pop
xor
das
icebp
fildll
fdiv
and
das
sbb
adc
sub
xor
push
fucomi
outsl
adc
or
rolb
jns
adc
lods
jg
pop
sub
int3
inc
sbb
ss
jmp
sbb
call
in
aam
inc
mov
xor
das
std
add
adc
pop
je
push
icebp
mov
incl
sub
adc
cmp
decl
insl
cli
fcmovnu
pop
push
loopne
dec
lcall
adc
mov
das
jo
push
imul
adc
xchg
insb
sub
shlb
std
popa
jo
dec
nop
cmpsl
inc
std
pop
call
sub
mov
push
mov
and
push
or
or
jecxz
inc
lret
icebp
fnstenv
stc
xor
decl
inc
ficoml
xchg
jb
hlt
pop
pop
or
dec
xor
movsb
inc
iret
xor
mov
daa
sbb
dec
jmp
testl
inc
cmpsb
jg
mov
adc
push
xchg
mov
outsl
rcrb
and
push
cld
je
jmp
test
jne
xor
pop
mov
jmp
call
inc
sbb
cld
ja
add
xchg
mov
inc
inc
pop
mov
xchg
xlat
idiv
mov
lret
push
aad
cld
pop
jb
ret
mov
test
sub
movsl
das
aad
jae
aad
andl
sbb
push
jg
and
jl
in
pop
add
mov
push
xchg
inc
fists
push
fcoml
clc
push
dec
pop
dec
aad
sbb
ror
movsl
call
mov
insb
jge
dec
cmpsb
xlat
jmp
std
or
shll
and
mov
mov
cmp
je
push
insl
loope
jmp
add
pop
sbb
push
push
adc
push
sbb
clc
aaa
je
jle
and
or
dec
and
pop
xchg
adc
jo
xchg
and
nop
jp
outsl
pop
outsb
cs
and
adc
cmpsb
pop
fsubs
addl
adc
incb
and
push
cmp
andb
add
inc
ss
and
pushf
xorl
push
aas
ret
mov
ss
jg
lcall
mov
mov
dec
enter
fisttpl
addr16
aam
repnz
or
fisttpl
mov
mov
dec
pop
mov
fstpl
xchg
test
push
leave
adc
sub
push
insl
loope
pop
inc
repnz
insb
add
xchg
mov
add
dec
insl
rcrl
push
enter
or
sbb
hlt
outsb
sub
icebp
inc
cmp
sar
fiaddl
push
xor
add
sete
loop
xor
testb
push
adc
inc
dec
call
jbe
mov
add
sub
sub
add
mov
inc
pop
dec
andb
mov
inc
jbe
mov
push
push
inc
mov
ja
mov
xor
adc
int3
jbe
hlt
jmp
jg
xlat
mov
popa
pop
outsb
inc
pop
test
mov
clc
shrl
in
push
mov
sub
push
push
fnstsw
call
lods
adc
mov
pop
sbb
shrb
xor
aaa
jle
sbb
test
push
movsl
mov
and
jle
outsb
jmp
xchg
add
vorps
repz
sbb
movsl
and
or
mov
inc
in
and
ret
insb
adc
mov
adc
jmp
adc
push
fs
cmp
xor
push
aaa
inc
shrl
pushl
sub
out
dec
and
dec
and
jno
and
fldcw
xor
fcoms
outsl
add
stos
xor
and
jmp
push
aas
cltd
jbe
in
jnp
mov
aaa
pop
mov
cmp
cmc
repnz
push
sub
jmp
xor
mov
stos
push
and
or
push
mov
pop
in
hlt
test
incl
or
hlt
nop
sub
cmp
imul
push
pop
push
xlat
ljmp
or
xchg
mov
es
lock
movl
cmc
dec
or
jge
mov
push
jg
pop
outsl
adcb
cmp
and
mov
jle
repnz
cmc
out
jae
outsl
mov
push
push
pop
pop
pop
lahf
enter
pushf
stos
pop
sbbb
insb
out
push
ret
or
add
sub
fisubs
cmp
add
rcrb
mov
cs
add
imul
data16
mov
sbb
push
or
cltd
mov
fcomi
push
jbe
mov
and
mov
mov
xchg
or
aas
inc
pusha
popl
addr16
mov
pop
fadd
xor
xchg
cli
dec
sub
inc
push
out
inc
leave
mov
adc
decl
push
pop
daa
dec
mov
lahf
push
outsl
shll
das
add
or
or
mull
jp
daa
arpl
stos
jg
mov
xor
push
add
mulb
mov
adc
ret
pop
gs
adc
insb
mov
lods
cmpb
sti
leave
xchg
cli
sbb
mov
cmp
fcomps
sbb
mov
adc
into
push
fwait
int
adc
adc
icebp
and
adc
adc
pop
jle
frstor
sbb
lcall
or
jne
into
inc
or
stos
mov
out
rcrl
jb
adc
fildl
jb
jnp
fldt
fcmovnu
cmp
out
pop
pop
pop
ret
sbb
shll
adc
js
adc
inc
call
jmp
and
xor
sbb
jb
dec
add
lods
in
pushl
add
mov
jne
ret
mov
sti
inc
inc
mov
mov
ret
outsl
dec
insb
lcall
add
lock
mov
je
cli
dec
pop
xchg
or
jnp
mov
adc
xlat
je
push
add
arpl
or
mov
ret
cltd
ret
and
xchg
punpckhbw
fisttpl
sub
sub
or
push
les
outsb
or
sarl
xchg
fisubrl
sub
imul
push
sub
or
leave
jle
jge
aaa
inc
adc
insl
sbb
mov
ss
lods
xchg
cmpsb
in
pop
push
scas
mov
cmovl
and
adc
xchg
dec
sub
ljmp
sub
popa
inc
pop
aaa
push
outsb
or
call
add
pop
ds
and
sahf
insb
insl
pop
or
xchg
addb
jno
pusha
je
outsl
incl
sbb
sbb
int
jg
add
push
orl
push
cmc
test
and
inc
icebp
push
and
mov
sub
negl
push
or
mov
int
adc
sub
lret
ds
inc
stos
enter
out
ljmp
xchg
mov
mov
loop
icebp
inc
mov
lea
std
add
inc
pop
rcrb
ret
adc
nop
outsb
mov
or
xchg
xlat
ret
jle
cld
mov
mov
std
adc
xchg
ljmp
mov
lea
ja
lcall
fwait
roll
cld
jbe
loopne
jb
hlt
mov
aaa
pop
sbb
mov
adc
mov
loope
lea
inc
pop
sub
xchg
in
fisttps
add
das
out
and
dec
mulb
orb
or
fisubl
stos
or
fisttpll
sbb
loop
push
bound
inc
cmc
out
pushf
int3
iret
out
mul
fucomip
mov
jae
pop
push
adc
lret
push
add
fistps
movsb
pop
icebp
or
jno
and
pop
out
mov
lock
xchg
push
jns
cmpsb
push
sbb
or
test
das
loop
incb
push
mov
cltd
xchg
fbstp
les
aad
or
push
pusha
dec
add
or
cmpsl
notb
push
js
ficomps
push
call
cli
dec
dec
cmp
pop
mov
test
fildll
fildl
xor
pop
sarl
std
stos
test
cld
ret
in
or
cwtl
push
lret
je
add
dec
andl
mov
nop
loopne
add
xchg
cmp
fidivrs
ljmp
jmp
push
je
inc
sti
mov
sahf
jns
pop
enter
repz
xchg
loop
mov
aam
push
mov
or
push
mov
call
jno
and
out
arpl
xchg
and
sub
cld
gs
adc
mov
std
test
or
fstpt
mov
test
cld
inc
adc
nop
jp
idivb
push
push
call
std
cmp
and
or
or
pusha
or
jmp
push
les
fwait
je
ja
xchg
xor
stc
nop
repnz
test
adc
jle
ljmp
outsl
call
jmp
or
out
movsb
push
adc
inc
or
in
jg
cld
xchg
xchg
outsb
cmp
jl
pxor
jmp
adc
nop
dec
leave
inc
inc
jne
mov
in
call
jo
je
aam
cwtl
shlb
xchg
lock
mov
cmp
sub
loop
pop
and
push
outsb
movsl
or
stc
adc
out
arpl
insb
adc
sti
xchg
pop
test
push
pop
pusha
mov
mov
jg
pop
sbb
cs
lods
mov
xchg
push
adcb
enter
dec
sti
pop
addb
adc
mov
or
adc
lea
and
test
jmp
lods
stos
inc
mov
test
dec
aam
les
pop
test
outsl
or
cli
loope
mov
mov
mov
mov
adc
call
jg
movsb
dec
sbb
or
andl
pop
push
push
or
sub
push
dec
mov
and
mov
in
negl
loop
sbb
inc
outsl
fucomi
es
ja
hlt
insb
lcall
fs
xor
test
and
lods
std
adc
push
push
adcb
nop
or
pop
mov
outsb
jns
popa
inc
sbb
inc
fldt
pusha
and
outsl
jae
mov
shll
adc
lcall
push
fs
das
lea
push
inc
fidivrs
cmc
decl
daa
sub
pop
sub
das
lods
mov
insb
imul
mov
mov
cmp
imul
dec
call
decl
lods
cmp
inc
fistpl
pop
pusha
idivb
cmp
aaa
inc
push
out
fidivrl
jge
aad
and
sbb
jb
cltd
mov
cmp
ljmp
push
xchg
arpl
mov
insl
dec
cli
fistpll
xchg
push
mov
cmc
xchg
sub
jbe
icebp
jb
mov
insb
pop
cs
dec
test
push
dec
test
xchg
and
or
outsl
sbb
xchg
mov
fdivr
pushl
movsb
push
stc
arpl
mov
je
xchg
and
outsl
cld
fildll
dec
add
or
sbb
cmp
jno
sbb
mov
test
fwait
push
mov
xchg
push
add
inc
dec
xchg
outsb
jno
clc
outsl
pusha
mov
pusha
and
mov
shll
pop
add
mov
insl
nop
mov
fnstsw
sub
fdivs
or
out
ljmp
adc
call
push
lea
push
ss
push
call
test
sub
popf
sbb
je
imul
scas
or
into
mov
hlt
and
sbb
sbb
dec
cmpb
addr16
push
jns
cld
push
mov
fisttpll
mov
ljmp
jl
xchg
or
jp
push
add
lods
xor
fs
repnz
shlb
mov
xor
cmp
movsb
xor
dec
dec
and
lods
push
arpl
dec
lahf
push
adc
inc
sti
push
in
movsl
mov
sbb
iret
dec
inc
js
hlt
das
mov
pop
mov
xchg
inc
inc
fnstenv
sbb
xchg
out
fcmove
popa
sbb
pop
pop
aad
repz
pop
loopne
jmp
dec
bound
es
inc
pop
mov
dec
gs
mov
pop
add
fldl
mov
cmpsb
fidivs
int3
loope
ret
jmp
cmpsl
dec
add
cmc
mov
decl
jo
call
test
add
jbe
icebp
jo
sub
push
and
push
jns
repnz
shrl
and
je
xor
mov
adc
fidivl
jp
push
xchg
mov
fsubr
adc
lods
or
inc
outsl
dec
add
je
dec
mov
pop
mov
mov
aad
shl
sbb
or
cmc
outsl
dec
popa
pushf
aas
push
or
xor
stos
jne
xor
mov
push
test
or
inc
sub
push
leave
adc
push
sub
and
sub
pop
jo
rorb
outsb
stc
je
dec
xor
cmc
jmp
add
add
jns
push
pop
mov
mov
clc
test
enter
js
dec
das
hlt
jg
adc
jns
mov
ljmp
gs
adc
mov
pusha
add
inc
pop
inc
clc
xchg
mov
mov
dec
lods
and
cld
movsl
adcl
insb
sbb
movsb
ja
arpl
insb
ljmp
mov
and
or
dec
dec
or
call
pop
xchg
mov
in
movsb
and
mov
aaa
xchg
inc
inc
cmp
add
ja
stos
std
cmp
push
dec
jae
shr
adc
jmp
test
es
push
fildl
out
mov
lods
sbb
adc
nop
shll
ss
mov
adc
and
sub
push
and
mov
je
inc
mov
lods
insl
test
dec
dec
mov
sbb
in
outsl
mov
add
clc
daa
fs
xor
sub
notb
push
and
loope
in
push
and
std
jmp
dec
or
and
call
movsl
decl
mov
dec
jo
xchg
cld
pop
xor
push
std
adc
xchg
pushf
and
andl
aaa
insb
and
test
dec
mov
pushf
clc
push
pop
pusha
mov
cmp
bnd
mov
icebp
cwtl
add
cs
pop
or
imul
add
cld
rolb
insl
sub
add
and
xchg
ret
push
cmp
int
mov
cmp
mov
repz
sbbl
mov
push
sbb
movsl
dec
push
inc
and
imul
outsb
stos
mov
xor
push
sbb
mov
adc
inc
adc
xchg
shll
popa
cs
push
test
addr16
push
or
sbb
cmp
cmp
sub
frstpm(287
xchg
push
or
ljmp
mov
push
mov
mov
or
outsl
or
mov
lret
data16
aad
dec
je
and
or
mov
js
and
mov
or
pop
lock
incl
sti
adc
iret
popf
push
test
mov
shl
sbb
adc
adc
add
enter
mov
cmp
mov
sbb
popf
or
enter
or
lods
pop
sub
mov
je
inc
js
inc
test
push
mov
pop
inc
mov
testl
add
fistl
add
sub
xchg
mov
pop
xor
mov
subl
cmp
rcr
adc
mov
pop
pushf
or
scas
mov
sarb
jo
test
or
je
dec
sbb
mov
dec
into
je
lock
xlat
ret
jecxz
js
add
and
inc
xlat
push
add
or
adc
mov
jmp
fs
loope
xchg
pop
push
inc
mov
xchg
push
inc
pop
mov
mov
or
xorb
into
loopne
movsb
and
insb
into
sbb
pop
jnp
push
mov
pusha
fnsave
pop
repz
or
inc
mov
xchg
fistl
mov
fsubr
pop
add
mov
sbb
mov
cmp
enter
out
add
inc
add
jo
mov
cmpsb
bound
xchg
xchg
jnp
inc
mov
dec
enter
stc
aas
and
pop
and
imulb
mov
stos
bnd
mov
jo
or
sbb
in
jne
fsubrl
scas
jbe
imul
xor
in
insl
jl
lret
or
inc
and
inc
out
into
aad
aas
or
cwtl
fwait
lea
out
sub
sbbb
sub
popf
pop
push
xlat
dec
stc
into
mov
stos
push
adc
inc
xchg
xchg
and
jmp
test
xchg
adcl
xor
or
sub
cmpsl
subb
or
daa
adc
xchg
jno
adc
aad
xchg
fildl
mov
push
leave
cmp
je
pop
cli
sbb
mov
push
dec
sub
call
daa
mov
ds
mov
call
adc
mov
inc
mov
call
adc
pop
mov
leave
insb
push
or
sbbb
insb
sbb
mov
jl
fcomp
adc
cmp
leave
outsl
test
movsl
jb
jae
lret
cmp
inc
sbb
xchg
out
ror
or
insb
pop
ret
sbb
cmp
dec
ljmp
push
inc
push
push
or
jb
icebp
sub
andl
inc
scas
das
xchg
sti
adc
dec
push
jle
sbb
xchg
call
popf
jnp
jle
lahf
shll
mov
or
ja
push
sbb
or
or
mov
adc
ret
call
fisubl
dec
and
add
scas
sbb
or
sub
and
insl
js
fs
xlat
or
pop
pop
popa
dec
add
ret
shr
mov
cs
pop
adc
mov
mov
dec
call
jnp
sub
and
out
dec
cmpsl
inc
mov
push
fs
push
inc
pop
xlat
mov
sbb
mov
push
cmp
xor
loopne
pop
call
popa
inc
ret
jae
fstl
sub
cmp
iret
mov
inc
xor
xchg
inc
je
dec
das
dec
xchg
xchg
int
hlt
cmp
mov
mov
adc
add
das
xchg
inc
shlb
sub
sub
rcrl
add
mov
aad
or
ss
push
add
push
or
mov
xorl
mulb
leave
add
cltd
in
push
push
pop
testl
negl
pop
cmp
loopne
dec
sub
popf
mov
popf
push
push
insl
add
in
adc
pop
adc
cltd
and
or
mov
inc
adc
ficoml
sub
pop
push
pop
call
jae
inc
je
push
inc
inc
sbb
je
pop
sahf
int
out
inc
jle
xchg
mov
loop
je
call
adc
pop
sub
scas
add
push
addl
mov
sbb
movb
insb
push
scas
insb
das
push
mov
push
rcr
dec
test
pop
call
loope
std
mov
pop
mov
into
or
adc
inc
jmp
bound
pop
sub
sbb
mov
or
push
jnp
insb
mov
call
pop
and
jle
nop
cmpsl
push
push
roll
push
repnz
push
mov
or
or
lods
rcll
js
shr
ds
js
add
jecxz
std
fs
cltd
call
push
xor
or
or
sbb
xchg
dec
fcmovnbe
ja
push
inc
unpcklps
loop
xor
jbe
xchg
imul
mov
jmp
imulb
loope
cmp
pop
cmp
mov
jmp
cmp
sub
lea
inc
testl
sbb
outsb
add
sub
js
mov
or
push
out
int3
cmpsb
mov
sub
adc
clc
mov
data16
sub
pop
mov
pop
mov
pop
xchg
fmulp
jae
shll
test
jnp
pop
fst
mov
cmp
xchg
adc
xchg
inc
sbb
aas
adc
inc
jle
pop
mov
sub
loope
cmp
cmp
rol
mov
lock
mov
test
outsb
lret
sbb
or
daa
ret
mov
call
jmp
ret
pop
mov
enter
clc
sarb
fldt
mov
pushf
push
sub
leave
add
adc
out
mov
and
pop
push
cmp
cmp
jae
jo
adc
cld
out
loopne
pop
daa
icebp
loop
call
xor
push
nop
addl
pop
xchg
je
jnp
out
lret
jbe
or
das
inc
sbb
jle
cmpsl
dec
mov
clc
in
ret
repnz
add
bound
loopne
adc
push
jle
mov
std
lahf
dec
xor
xlat
test
rsqrtps
aam
lock
int
fistpll
jne
xchg
pop
jecxz
mov
mov
pop
das
insb
aam
pop
je
aad
mov
or
inc
push
or
aaa
xchg
outsb
je
loopne
dec
lods
or
and
into
loopne
pop
or
pop
ljmp
dec
adc
lods
imul
jae
hlt
cmp
fldl
in
imul
push
mov
je
adc
inc
mov
je
scas
inc
add
mov
mov
aad
je
ret
inc
and
daa
es
mov
cmp
cmp
xor
xchg
clc
mov
test
xor
sub
xor
imul
push
sysexit
loop
jecxz
inc
mov
cmp
hlt
adc
call
lock
xor
inc
in
fsubrs
xchg
decl
push
jae
mov
out
sbb
je
adc
xchg
lock
psllq
daa
dec
fcmovnu
or
mov
cmp
sub
movsl
dec
push
dec
aam
or
hlt
mov
jl
shrb
shll
pop
std
sub
sbb
fucomip
fadd
inc
jg
jbe
lea
and
sbb
les
ja
sub
ss
nop
add
sbb
mov
mov
ja
clc
jne
int
adc
arpl
jge
mov
sbb
cmpsb
std
js
faddl
paddusw
out
or
stos
mov
in
adc
mov
mov
mov
orl
add
or
arpl
call
push
stos
dec
idivl
push
or
addl
push
mov
push
jge
scas
push
push
lahf
lods
xor
popf
mov
negb
sbb
inc
mov
adc
mov
into
adc
cmp
ret
lods
and
lret
jnp
fwait
xor
je
sub
sub
xchg
pop
and
adc
mov
push
imul
cmc
or
lea
scas
mov
pop
aaa
bswap
mov
mov
sarl
enter
pop
mov
call
dec
pushl
pop
fwait
jmp
add
jnp
sub
push
jne
adc
in
cmp
pop
clts
mov
xor
outsb
sbb
pop
leave
je
sub
outsb
add
mov
ljmp
sbb
xor
imul
stos
sbb
lods
daa
je
xor
sub
mov
push
and
jo
xchg
ss
xchg
stos
adc
push
movsl
outsb
addb
cmp
jne
xchg
andb
cmc
dec
adcl
jmp
fucomi
lock
cmp
test
xor
jns
xor
jmp
cmpsb
stos
add
and
jo
nop
out
jl
dec
rcrb
dec
cmp
jle
loope
mov
mov
mov
mov
test
xor
jo
adc
xor
popf
pop
fstps
ds
mov
addl
jl
cmp
cmc
push
mov
iret
dec
daa
fucomi
cmp
fnstcw
adc
xchg
lret
pusha
mov
or
mov
sbb
push
outsl
js
push
fwait
ss
and
js
lds
cltd
or
jmp
leave
dec
push
cmp
stos
hlt
fldl
fstl
cmp
addr16
pop
jecxz
fisubrs
loope
stos
or
mov
lahf
lods
fsubrl
test
test
cs
push
xor
adc
mov
fistps
popf
xorb
loop
sub
sbb
inc
fisubrs
adc
lods
loope
ret
lds
icebp
pushf
sti
shll
mov
ret
jo
out
sub
sub
imul
mov
leave
jbe
pop
adc
adc
pop
sub
sub
test
sbb
addr16
sbb
fcoms
mov
inc
test
popa
xorl
es
jae
adc
fbstp
dec
adc
rcrl
jl
and
jle
jg
clc
pop
or
test
sbb
push
or
fstpt
mov
repnz
pop
and
mov
lock
or
movsl
and
insb
pop
add
movsb
inc
sbb
icebp
lds
xchg
cld
shll
mov
inc
sbb
ret
jb
fsub
fisttpll
cmp
xor
repnz
fmul
rolb
jmp
out
pushf
sbb
adc
sbb
cmp
cmpsl
mov
add
movb
pop
mov
out
lock
xor
and
sub
insb
fsubs
adc
xor
mov
ds
and
adc
add
fcoml
ds
dec
mov
mov
sahf
arpl
sbb
jp
ret
rorb
int
pushf
cmp
fdivr
fdivrp
test
call
mov
push
ss
mov
je
pop
sub
jmp
cmp
pop
out
xchg
stos
inc
push
and
rcrb
jecxz
notl
shrl
pminub
cs
je
jae
push
jb
out
xor
mov
outsb
fildl
les
sbb
push
les
shl
mov
mov
dec
adc
sbb
test
mov
ret
xchg
aaa
jmp
adc
xor
je
outsl
push
aas
xor
mov
cmpsb
add
lock
sbb
jle
mov
hlt
rcrb
adc
push
xor
lods
repz
mov
dec
adc
cmc
shr
aam
lret
pop
mov
and
xor
test
scas
push
hlt
icebp
push
xor
push
cwtl
repnz
icebp
in
pop
popf
mov
inc
push
adc
inc
cmp
scas
push
das
inc
lods
aad
in
daa
js
gs
or
sub
in
or
je
xchg
mov
mov
lret
xor
lock
aaa
dec
pusha
sub
ljmp
mulb
add
ja
push
test
pop
popa
push
gs
cmpsl
xchg
jp
hlt
push
mov
or
mov
insb
lea
jmp
je
call
adc
je
adc
cmp
in
nop
je
adc
int3
jnp
cmc
pusha
xlat
mov
xchg
adc
xor
repnz
bound
pop
jae
xchg
mov
rolb
insl
xlat
xchg
cltd
adc
stos
pushf
add
add
push
ljmp
or
mov
sbb
xchg
push
cli
js
fistl
es
inc
add
sub
dec
sbb
xor
mov
jnp
lahf
fnstsw
sbbb
push
mov
jo
mov
fwait
pop
leave
push
call
je
dec
xchg
mov
or
shl
sbb
les
addb
xlat
je
aad
dec
repz
and
push
dec
adc
ljmp
or
jo
out
and
les
sub
pop
xchg
and
cmc
bound
mov
adcb
mov
or
movsb
inc
scas
cmp
jb
xchg
push
je
xchg
sbb
adc
add
mov
outsb
mov
movsl
into
jo
rorl
roll
outsl
es
iret
movsl
cli
or
add
push
in
pop
shrl
mov
fs
or
adc
gs
movntps
cld
mov
push
scas
sahf
sub
std
leave
push
inc
inc
das
jo
mov
scas
cmp
pop
ljmp
ja
xchg
jne
nop
mov
test
jmp
lock
adc
mov
push
inc
pushf
loopne
cmp
rclb
lret
xchg
mov
addl
mov
fwait
ja
push
daa
popf
sub
orb
pushf
ds
incl
pop
adc
loope
hlt
sbb
jge
pop
xchg
or
inc
mov
mov
out
jbe
sbb
mov
push
cld
xor
jle
call
clc
mov
pop
out
jne
mov
adc
mov
lret
repnz
mov
lds
fwait
cmp
sub
fmull
push
movsl
jmp
push
movsb
add
jne
js
fldlg2
les
dec
adc
test
push
pushf
das
xor
dec
push
mov
das
pushf
cmp
fisttpll
call
or
sub
mov
imul
mov
add
loop
sbb
inc
orb
add
js
sub
or
fwait
xchg
dec
and
cltd
jns
les
jge
mov
push
scas
js
add
inc
loop
loopne
ja
notl
outsb
les
test
outsb
call
cmp
inc
sub
loop
sti
add
dec
push
dec
scas
out
dec
add
je
jmp
sub
or
mov
dec
lods
dec
mov
jmp
movsl
sbb
shrb
sbb
bound
and
dec
push
add
push
je
jne
xor
lea
leave
aam
aas
mov
in
xor
je
pushf
mov
add
xchg
aas
pop
test
sbb
movsl
push
pop
dec
jbe
and
mov
test
dec
xor
sub
inc
cmp
fs
xor
push
addr16
fstpl
or
call
inc
iret
sbb
ret
cmpsl
in
sbb
jo
fdivrl
mov
and
adc
movl
hlt
sub
stos
test
pop
sub
out
sub
jnp
cmpsl
mov
add
mov
jge
and
jge
jmp
mov
mov
dec
jl
sub
in
incb
dec
pop
inc
outsl
xor
insb
jg
mov
sub
mov
clc
xlat
cwtl
mov
test
rorb
push
adc
or
pop
cld
sub
jno
add
out
pop
push
mov
std
out
adc
mov
adc
jnp
int
fisttpl
sbb
pusha
mov
jo
and
dec
jge
jnp,pt
jmp
repnz
add
inc
in
pshufw
jge
stc
call
leave
push
add
sbb
pop
ret
adc
xor
cwtl
icebp
loopne
leave
lods
bound
fdiv
pop
lret
add
sub
cmp
jo
sahf
mov
pop
fwait
ror
pop
ljmp
inc
cli
lods
mov
std
sbb
push
fiaddl
pop
adc
lods
push
inc
cmp
cmp
adc
and
cmp
dec
cmp
dec
pop
sub
fmuls
xor
aad
inc
adc
dec
xor
add
movsl
sub
mov
or
call
nop
fwait
aaa
ss
lret
aad
and
and
jne
icebp
adc
add
pop
jmp
sbb
jecxz
inc
or
sbb
je,pn
fnsave
cmp
adc
iret
shr
shrb
outsb
subl
cltd
call
xor
jmp
call
push
jnp
rolb
inc
inc
lret
sarb
and
pushf
inc
mov
cmp
ljmp
loop
ss
xor
call
mov
imul
jnp
in
add
push
out
cmc
aas
jae
call
mov
and
mov
mov
or
mov
pop
xchg
push
sbb
jb
repz
mov
jp
cmp
mov
fdivrl
xchg
jns
scas
shrb
jb
xchg
push
aaa
or
dec
cmp
and
or
jmp
je
outsl
nop
mov
adc
xlat
jo
jmp
inc
fisttpl
cmp
in
adc
and
dec
mov
jl
loope
sbbl
movsl
jge
in
mov
lods
sti
lds
pop
inc
je
jmp
inc
aam
mov
and
sub
test
xor
mov
pop
sbbl
xor
dec
inc
hlt
out
dec
cli
lcall
or
jp
cltd
adcb
mov
jge
shrb
lods
je
push
push
fucom
sbb
add
imul
adc
call
lock
lds
inc
std
inc
dec
dec
je
stos
inc
fisttpl
mov
stos
stos
pop
insl
add
inc
sbb
xchg
clc
loope
jl
mov
or
mov
in
nop
call
in
call
insb
aaa
pop
jl
push
insb
xor
sbb
push
cld
loop
cmp
inc
cmp
or
dec
out
fs
add
pop
lods
cld
jo
xor
cmp
rol
mov
xchg
xor
lret
pusha
inc
push
mov
lods
add
push
add
out
enterw
cmpsl
insb
mov
xlat
lea
inc
aad
stos
je
test
je
iret
mov
mov
push
icebp
push
aad
inc
jmp
lock
or
out
inc
jns
stc
add
cmp
lock
inc
push
subb
cmp
or
test
jl
mov
inc
lcall
jb
mov
adc
fldcw
bound
push
jmp
loope
dec
pop
adc
cmp
cmp
aaa
cmpsl
xor
or
cmpsl
mov
sbb
decl
inc
rcrb
adc
mov
xchg
or
jl
sahf
add
mov
mov
pop
pushf
dec
push
or
inc
add
roll
sub
mov
icebp
or
or
dec
cmp
loope
sbb
xor
dec
loopne
cmp
fcomps
pop
filds
idivl
fadds
sbb
icebp
imul
push
lahf
out
xchg
popf
mov
push
jmp
imul
hlt
and
mov
popa
call
rolb
imul
sbb
sub
shll
dec
xchg
sbb
mov
xor
adc
cmp
adc
rcl
sbb
inc
loopne
daa
arpl
sbb
and
sbb
loopne
add
mov
pusha
sub
or
fisttpl
cmp
daa
lcall
fistpl
cmpsl
lcall
jle
fadds
je
inc
jbe
mov
dec
outsb
xchg
xor
cmpsl
scas
xlat
jge
ficoml
out
add
cltd
out
outsb
mov
mov
clc
push
dec
xor
jno
xor
push
jnp
ljmp
mov
adc
xchg
adc
add
mov
jno
fisubs
xor
mov
and
mov
adc
push
xchg
test
adc
loope
xchg
pusha
sub
pop
inc
sbb
or
pop
or
pop
mov
inc
mov
lds
shr
shrb
jo,pn
mull
fimuls
cld
push
mov
cmpsl
lahf
movsl
gs
cmp
adc
int3
adc
es
pop
mov
out
lea
fdivrp
outsl
cmp
fld1
movsl
dec
call
add
pop
cs
fldenv
fldl
call
xchg
or
push
pop
and
cmp
or
xor
or
mov
mov
iret
jge
cmc
pop
and
aaa
lret
dec
scas
outsb
lcall
mov
je
cltd
ficoms
or
mov
and
adc
das
xor
mov
and
push
push
mov
ds
xor
inc
lock
and
adc
pop
outsl
pop
sub
fildl
cltd
lea
pop
cwtl
sbb
dec
push
pop
rclb
mov
daa
mov
cwtd
iret
jae
mov
xor
push
inc
add
push
clc
fwait
sti
call
or
inc
and
add
test
addr16
xor
mov
jb
addr16
mov
rcll
stos
lret
test
or
and
xor
sbb
lods
mov
dec
int3
daa
mov
pop
notl
testb
aad
add
dec
xor
xchg
dec
hlt
fimuls
cmpsb
pushf
mov
adc
xor
inc
sbb
inc
jno
add
cmp
add
jle
inc
call
cmp
push
outsl
mov
sbb
popf
cmpl
mov
push
movsl
aas
lock
lcall
ret
mov
or
cs
cmp
adc
jae
inc
call
sbbl
shll
js
mov
loop
insb
cmpsl
fidivrs
or
andb
sbb
fs
push
fdivr
adc
adc
sub
mov
in
ret
mov
mov
lods
push
push
sub
aad
mov
popf
cs
rcrb
addr16
popf
and
push
imul
and
inc
or
je
sub
call
jo
jmp
jp
mov
or
jp
push
bound
enter
aad
jp
rolb
and
mov
ficoms
test
pop
enter
ljmp
dec
lds
mov
rorb
call
aad
adc
inc
adc
sbb
es
pop
mov
jne
mov
lret
in
popa
add
jae
mov
mov
push
hlt
adc
or
clc
std
es
ficomps
orb
mov
sbb
sbb
fstps
call
dec
jle
adc
inc
out
dec
rcl
inc
mov
mov
ret
push
jge
mov
inc
loopne
inc
je
xor
call
pop
out
inc
in
xor
mov
dec
out
or
mov
inc
or
mov
jae
cmp
fstpt
cmp
imul
ret
cmp
lock
adc
and
iret
in
adc
rol
jne
push
movsb
sbb
pop
test
pop
push
dec
push
mov
adc
inc
and
fsts
adc
sbb
inc
das
add
aas
pop
mov
dec
inc
mov
dec
fisubrl
les
and
mov
ror
lock
mov
cmp
mov
add
dec
int
call
gs
xor
ss
push
sti
or
dec
mov
pusha
mov
sub
fisubl
sub
push
and
dec
cmp
or
add
jmp
mov
mov
movsb
inc
mov
popf
xor
inc
mov
clc
pop
jg
mov
lods
cwtl
dec
aam
or
int3
jne
pop
push
call
push
jne
dec
out
inc
addr16
xor
or
dec
call
test
or
gs
mov
jl
and
jo
pop
adc
in
sub
xchg
and
pop
adc
cmp
or
jo
jnp
add
push
dec
sbb
clc
dec
in
and
mull
sub
loopne
or
jmp
push
sbb
xor
out
jo
daa
pushf
jg
jb
pop
fnstsw
hlt
icebp
add
sub
adc
cmpsb
push
xchg
lahf
jnp
movsl
cmp
fsubrl
sub
dec
add
mulb
imul
je
lds
push
nop
push
test
push
push
pop
lods
fldcw
lds
mov
addr16
pop
cmc
lods
pop
inc
jne
xor
push
mov
pushf
stos
inc
es
lret
adc
push
mov
arpl
jmp
mov
or
ja
xchg
adc
or
ja
mov
out
aam
je
xchg
movsl
mov
pop
fcmovb
test
test
jl
in
dec
add
lds
lock
fucomi
mov
xchg
outsb
das
aad
clc
mov
daa
inc
je
add
js
xor
lret
in
mov
int3
lock
mov
dec
jbe
in
add
jnp
adc
aam
or
lret
test
jo
ds
test
jmp
nop
cmp
outsl
lock
out
flds
xchg
insb
sub
xchg
popf
test
cmp
lret
dec
jmp
push
bound
insb
xchg
pop
adc
roll
lock
inc
outsl
push
or
test
insl
mov
int3
push
inc
mov
popf
js
or
xchg
shll
pushl
das
xor
dec
out
aad
jmp
fwait
es
es
add
daa
test
pop
ja
inc
call
rcrl
mov
adc
add
ficompl
adc
dec
mov
arpl
mov
sub
dec
test
nop
push
call
call
lret
dec
test
or
je
mov
and
rcrl
inc
pop
push
adc
inc
jno
push
or
sbb
and
xchg
enter
add
inc
rorb
test
js
pop
roll
or
add
loope
adc
fcoms
and
sub
adc
mov
jno
outsl
push
push
das
sbb
dec
mov
adc
pop
popa
ret
mov
xlat
add
mov
xchg
push
andl
mov
dec
xor
mov
adc
sbb
dec
icebp
inc
fs
mov
aaa
inc
dec
insb
cmp
lea
sahf
or
js
or
fucomp
mov
mov
jbe
rorb
clc
cltd
call
loopne
jg
jge
out
xchg
call
xor
jne
cmp
mov
lea
jne
cmp
fisubrs
push
mov
xchg
fmuls
xor
sub
add
and
ljmp
push
in
popf
lock
or
push
sbb
pushf
out
addr16
lret
adc
push
subl
or
jg
xchg
cmp
sub
dec
fsubs
mov
and
dec
cmp
jmp
popa
negl
sbb
mov
cmp
cld
call
fadds
sub
push
cmpsb
lcall
out
fldt
mov
inc
mov
xor
insb
in
test
mov
cmp
mov
bound
jmp
mov
pop
adc
mov
lcall
dec
cmp
shrb
adc
inc
lea
sbb
or
cmp
sub
push
jns
int3
xchg
xchg
out
call
mov
push
mov
pop
push
ja
pop
fs
adc
or
pop
mov
cmp
add
fsubl
pop
xchg
jmp
pop
movb
fs
sub
mov
shll
imul
fisttpl
mov
jo
stc
test
ja
add
out
xorb
pop
add
into
inc
adc
cld
dec
cld
pop
divl
test
call
inc
xchg
lock
mov
dec
outsb
je
cmp
jb
fwait
sub
pop
mov
hlt
xchg
out
mov
insb
dec
shlb
lretw
loope
add
mov
clc
js
sub
mov
and
je
mov
or
inc
pop
dec
xorl
jle
sbb
ss
xchg
xor
push
pop
xchg
ljmp
sbb
test
mov
insb
mov
pop
mov
ret
pushf
add
mov
insl
sub
std
adc
push
sbb
mov
jo
icebp
mov
add
test
mov
stos
add
adc
lds
mov
gs
icebp
sub
jns
inc
push
jmp
call
adc
cli
jp
out
ja
hlt
sti
or
sbb
dec
jb
mov
cli
ljmp
or
sbb
mov
je
sti
adc
jle
xchg
cmpsb
sub
add
shrb
pushw
cmp
in
or
int3
in
push
jne
mov
inc
shlb
cmp
cmp
mov
sbb
int3
insl
cmp
mov
add
stos
movsl
ljmp
mov
sbb
add
je
mov
sub
nop
mov
push
cmp
adc
inc
mov
cmp
cmp
lock
insb
xor
out
cmpsl
push
push
incb
cmc
scas
lock
aaa
testl
dec
inc
cs
inc
xor
in
cmp
scas
fnsave
or
pop
mov
mov
cmc
fidivrl
mov
clc
mov
cltd
test
test
sbb
mov
pop
movsl
jg
call
jl
loop
leave
push
cli
cmp
mov
dec
and
inc
add
shll
nop
shr
mov
xchg
inc
mov
hlt
inc
xlat
adc
mov
pop
hlt
inc
ret
push
pusha
das
subl
imul
inc
or
arpl
pusha
or
jl
push
mov
jnp
dec
addl
adc
mov
xchg
mov
and
negl
test
pop
jae
add
cmp
cwtl
push
int
outsl
aam
dec
mov
lea
outsb
sub
mov
mov
mov
mov
mov
cli
mov
dec
pop
pop
and
xchg
push
orl
bswap
mov
js
sbb
adc
sbb
jge,pn
jge
adc
mov
movl
call
andb
inc
movl
in
not
pop
jno
or
ja
test
stc
sub
dec
enter
andb
adc
shlb
sub
lock
js
lahf
adc
pop
adc
add
jg
push
test
and
mov
mov
mov
insb
sbb
add
cmp
sub
lods
xchg
push
mov
fidivs
push
cmp
sbb
xor
jnp
sbb
ja
loope
mov
jle
xorb
xor
cltd
xorb
insb
add
and
inc
into
outsl
test
in
icebp
fisttpl
sub
pop
vmread
mov
xor
into
mov
jl
adc
add
loop
pushf
and
and
popf
xchg
push
ja
out
xchg
or
sarb
and
ret
jmp
repz
popf
xchg
push
insl
sub
add
es
inc
sub
std
into
jl
add
pushf
call
dec
push
in
dec
adc
das
adc
out
lock
mov
pop
or
je
cld
out
mov
jl
adc
pop
imulb
dec
shlb
loope
adc
mov
and
mov
sub
pushf
jmp
sbbb
mov
in
jo
stos
mov
test
push
xchg
pop
mov
xor
insl
push
call
adc
add
sbb
cwtl
lds
int
addr16
gs
add
mov
push
push
or
mov
jno
adc
mov
insb
std
fwait
pop
pop
adc
mov
xchg
add
mov
out
mov
cmp
mov
scas
arpl
aad
push
and
in
dec
push
mov
push
es
adc
sub
mov
andb
inc
mov
xor
jo
lock
push
or
cltd
push
call
push
aam
add
in
mov
incl
mov
and
cmpsl
fcomps
push
push
pop
mov
aas
js
stos
inc
push
int3
inc
adc
cmp
and
js
xchg
lret
arpl
mov
jmp
or
mov
pushf
std
or
mov
js
fcomps
sub
repz
add
inc
adc
adc
icebp
add
mov
mov
push
pop
or
cmp
dec
loop
lods
jmp
test
inc
adc
loop
mov
xor
mov
push
es
or
jnp
les
ss
push
mov
sbb
push
add
jo
sub
mov
orb
or
cmpsb
xorb
inc
add
in
lds
xchg
cmp
pop
push
mov
jno
jae
movsl
push
nop
xchg
xchg
sub
mov
test
sub
in
js
sub
xor
fstl
xlat
inc
fldcw
sub
pop
pop
pop
cld
ja
gs
add
mov
es
mov
cs
fiaddl
das
aad
das
jne
sti
imul
sbb
dec
push
imull
test
mov
sbb
insb
xchg
stos
sbb
jo
sub
scas
add
jbe
lret
pop
or
xor
les
xor
in
in
jle
in
mov
sbb
jne
mov
mov
add
add
mov
call
nop
or
mov
lcall
test
or
jnp
push
icebp
adc
movsl
jnp
movb
fmull
mov
test
das
add
lahf
jnp
or
mov
mov
data16
nop
shlb
arpl
shrb
sub
cmp
mov
or
lds
dec
hlt
sub
push
and
scas
and
roll
mov
pop
in
push
test
fcomps
pop
pop
cli
dec
lock
xchg
jmp
xor
rolb
mov
adc
mov
add
adc
sti
mov
cld
push
outsb
and
push
xchg
xor
mov
pop
pop
leave
mov
call
and
adc
aam
xor
mov
jmp
push
xor
push
jle
jl
push
cmp
xchg
and
push
stc
xchg
scas
inc
add
notb
adc
mov
add
jge,pt
or
xchg
cmp
fndisi(8087
sbb
sbb
sti
cld
test
shrl
shll
cmove
mov
and
lock
rol
mov
arpl
or
out
es
mov
loop
inc
nop
jg
out
std
js
push
call
fadds
cmp
lock
and
mov
scas
lock
into
dec
fdivrl
imul
xor
cmp
inc
push
or
xor
cmp
stos
push
jno
xor
mov
sahf
sbb
pop
lea
repnz
fwait
aas
ja
enter
jns
inc
cmpsl
xchg
push
sbb
out
pusha
imul
cld
into
adc
dec
sub
je
stc
mov
adc
jne
mov
mov
les
inc
mov
ljmp
cmp
pop
mov
or
movsl
cs
xchg
lock
mov
idiv
inc
inc
jns
out
lahf
loopne
mov
je
and
adc
adc
or
add
add
imulb
sti
xchg
mov
cmovns
mov
add
adc
fisubl
dec
adc
xor
out
divb
lods
je
cmc
pop
or
pop
fnstcw
xchg
std
cmpsl
je
jo
mov
sahf
xchg
in
pop
mov
mov
mov
rcl
sub
inc
popa
and
insl
sahf
adc
in
pop
mov
pop
push
int3
jo
cltd
shrl
ret
sbb
dec
int
xor
out
inc
dec
add
jb
outsl
ljmp
xchg
jle
or
mov
fldl
pushf
xor
inc
ds
sbb
push
bound
and
mov
cmp
sub
mov
out
ljmp
adc
jp
imul
pop
push
or
mov
pop
mov
push
inc
imul
stos
call
pop
mov
push
mov
cli
pop
mov
push
cli
pop
cmp
pop
lret
mov
test
scas
aas
jne
arpl
or
xchg
stos
xor
sbb
fwait
cli
imul
loopne
add
add
jo
xchg
adc
mov
cwtl
icebp
std
loopne
xorb
mov
push
fidivrs
lret
test
pop
lea
rolb
call
outsb
push
jmp
add
inc
dec
sub
jo
pop
lahf
mov
insb
fildll
xor
sti
inc
popa
aaa
jne
or
lds
shrb
lock
fisubrl
icebp
mov
mov
jg
push
iret
pop
add
mov
adc
enter
loopne
add
cmp
sbb
gs
mov
sbb
dec
pop
and
inc
cmp
daa
mov
outsl
out
mov
mov
pop
out
dec
jo
and
mov
jno
in
adc
mov
cmp
dec
aaa
push
dec
mov
cmp
cltd
adcl
aam
add
sbb
cmp
adcl
mov
pcmpeqb
lahf
inc
test
jne
pop
dec
adc
add
mov
pop
lret
cmpl
push
xchg
div
xor
or
mov
and
ds
xor
fxch
cmpsb
popf
lahf
data16
dec
cmp
imul
jp
xchg
add
cmpsl
jne
lds
cmp
xor
and
cmc
subps
lahf
lods
adc
inc
or
mov
call
xchg
and
push
ror
and
mov
ret
pop
push
sahf
in
loope
adc
push
or
xor
cmp
sbb
pop
icebp
mov
adc
call
ss
sbb
jae
inc
xor
pop
loopne
test
fimuls
jmp
iret
mov
push
push
inc
push
loope
movsb
mov
stc
dec
int3
lea
push
add
insb
pop
roll
cmp
push
add
mov
sbb
lea
jbe
cli
pop
rclb
jbe
push
or
mov
adc
fcmovnu
add
outsb
cmp
xlat
adc
push
cld
setb
out
rol
jg
xchg
cmp
sub
loopne
add
out
inc
add
pop
xor
inc
inc
gs
insl
enter
clc
les
and
sbbb
push
mov
adc
mov
imul
or
dec
xchg
push
stos
add
jg
or
push
inc
cmp
shrl
loop
addb
cmc
call
xor
adc
es
cwtl
inc
rcrb
insb
push
add
add
and
adc
dec
shl
scas
ret
fstl
pop
cli
std
inc
icebp
add
add
sub
sbb
hlt
or
imulb
mov
mov
test
jno
mov
or
mov
outsl
imul
pop
call
jb
inc
pushf
mov
push
pop
pusha
nop
sbb
push
in
pop
pop
xor
pop
adc
sbb
push
rorl
paddq
cli
push
ljmp
inc
dec
and
test
xlat
cmp
push
pop
repnz
fsubs
push
sbb
hlt
repnz
inc
xor
std
inc
mov
xchg
dec
mov
outsb
in
inc
lea
xchg
mov
jg
add
adc
aaa
hlt
je
pop
adc
jb
and
mov
les
lret
cwtl
or
adc
repz
mov
inc
lods
or
mov
je
xchg
sti
push
notb
iret
or
mov
leave
int
aaa
call
adcb
movsl
imul
call
adc
mov
shrl
lds
cmp
and
xorl
mov
call
push
vcomiss
push
add
out
popa
xor
fdivr
add
cmp
call
shr
adc
and
adcl
sub
out
mov
push
xor
cmp
call
fstl
notb
cmpl
mov
ja
out
adc
movl
or
rol
xlat
fsubrs
jl
push
ret
inc
dec
jmp
cmp
mov
popa
cmc
scas
movsb
clc
cmp
inc
leave
insb
jno
push
mov
pop
js
nop
inc
insb
fidivrl
add
adc
lds
gs
jo
pop
adc
ret
lret
test
fsubl
adc
cmp
mov
addb
push
xchg
adc
bound
or
jno
jne
mov
cld
dec
xor
loop
notb
movsl
imul
loopne
cmc
mov
sub
add
inc
popa
mov
mov
sbb
sbb
xchg
adc
sbb
sub
movl
into
rorb
pop
mov
out
sub
cmp
arpl
neg
ss
push
sub
test
mov
xor
ficoml
cmpsl
and
add
sbb
pusha
adc
and
inc
and
add
aad
aas
push
lods
orb
loop
inc
sahf
xchg
or
or
mov
out
xchg
and
dec
or
das
mov
mov
jg
pop
jecxz
ljmp
push
mov
je
test
rcll
adc
and
mov
mov
jge
inc
and
sub
jp
inc
imulb
xchg
jnp
or
test
cmp
and
or
fildl
imul
add
xor
je
fstpt
push
adc
sub
or
aam
sub
push
sub
inc
pop
xchg
es
pop
out
sbb
mov
adc
cmp
inc
mov
pop
cmp
inc
movl
or
testb
jne
inc
aas
push
into
adc
aam
xchg
jne
mov
push
or
int3
jge
mov
pop
call
push
testl
adc
aaa
sub
es
mov
rorl
xor
repz
loopne
fadds
add
inc
fnsave
les
adc
jle
cmp
movsb
out
movsb
mov
ret
push
sbb
lock
ja
cld
and
mov
xlat
adc
add
or
pop
cmp
mov
xchg
cmp
adc
bt
adc
sub
push
xchg
jbe
push
leave
mov
mov
mov
xor
cwtl
mov
push
mov
and
pop
add
cmp
push
mov
sub
in
call
bnd
jge
ret
call
call
ret
repnz
and
sbb
add
movsb
bound
jle
popf
pop
insl
mov
or
add
fimull
mov
mov
test
fadd
and
inc
pop
es
in
je
pop
push
ja
push
cmp
inc
cmc
test
dec
jnp
aam
in
sbb
stos
test
adc
push
je
out
pop
sbb
ss
ljmp
movsb
push
lret
dec
or
out
cmpb
push
adc
cmp
push
push
xchg
jecxz
cmp
fldt
cmp
inc
rorb
pusha
push
xor
int
dec
mov
jnp
cmpsb
xchg
in
rolb
sbb
add
sub
cmpsl
add
add
fcmovnu
push
rorb
mull
fwait
cs
inc
mov
pop
lds
out
xor
mov
adc
mov
lock
xor
dec
sub
mov
aam
pop
clc
add
dec
push
fistpll
push
sarl
push
fmull
mov
jp
aaa
test
pop
jg
push
pop
push
scas
push
hlt
push
shr
fdivrl
loope
add
loopne
push
je
movsb
push
push
pop
and
jmp
pop
lods
outsb
lds
rcrb
dec
filds
lds
xor
cmp
scas
push
mov
test
push
add
sbb
sbb
fsubl
mov
inc
push
jo
push
js
sbb
stos
jp
or
testb
and
hlt
jne
jb
jae
cwtl
jecxz
add
mov
pop
mov
std
pop
jo
stc
orb
clc
das
xor
push
jl
sub
daa
loopne
arpl
push
fimuls
pop
cmp
inc
push
inc
pop
sbb
ficoms
notb
lock
mov
les
and
mov
out
mov
inc
les
leave
in
es
mov
dec
shlb
dec
cmp
jnp
mov
push
lea
or
ss
jns,pn
or
bound
aas
sbb
and
out
push
fnstenv
addb
jno
push
sub
xlat
xor
pusha
mov
jne
or
call
pushf
and
cltd
or
cwtl
dec
jg
icebp
add
adc
in
adc
lret
xor
push
mov
insb
mov
cli
mov
stos
movsl
or
popf
inc
pop
fidivs
xchg
lahf
push
dec
sbb
shl
sub
cmp
xor
cmc
jno
sti
inc
jmp
pusha
sti
push
pop
cmpsb
and
data16
call
mov
xorb
push
inc
loopne
inc
test
xchg
popa
sub
add
insl
inc
mov
adc
sbb
pop
jno
inc
sub
fsts
xlat
add
lret
fucomi
aad
inc
mov
out
and
push
into
cmp
cmp
icebp
add
cwtl
aam
int
call
jnp
loop
cmpsl
mov
and
lods
test
jnp
add
inc
aaa
cmp
push
add
push
addr16
inc
cmc
push
jns
aad
pop
hlt
adc
sub
cmp
mov
shlb
adc
or
inc
xor
out
dec
loop
loop
adc
adc
je
dec
mov
lods
cmp
ss
xchg
xor
jbe
push
lock
test
out
loope
or
sbb
sbb
adc
jp
dec
jns
fdivrp
adc
insb
lea
sbb
push
daa
sub
je
pop
inc
adcb
or
cwtl
mov
loopne
sub
push
dec
int
out
sbb
cld
nop
adc
xor
jne
sbb
mov
cmc
ret
sti
cmp
sub
xchg
cmp
dec
mov
sub
shlb
and
pushf
add
or
sub
sbb
lods
adcb
icebp
sbb
inc
mov
ret
scas
pop
jmp
adc
adc
in
mov
popa
lock
jne
dec
cli
cmp
inc
popf
aam
fs
mov
lods
int3
dec
es
icebp
fs
xchg
loop
pop
jb
jg
sbb
into
or
rcrl
dec
xchg
icebp
mov
mov
inc
and
rcl
imul
lods
ljmp
arpl
dec
jg
insl
xchg
or
lcall
push
inc
inc
and
sbb
pop
movsl
inc
mov
inc
sbb
mov
insl
or
pop
or
into
ret
add
fcoml
mov
and
pop
sbb
push
cmp
ret
outsb
pop
les
sub
rcrl
sbb
test
jae
lret
lcall
add
das
shrl
mov
fwait
in
pop
adc
lret
mov
bound
sub
andl
aad
xor
sub
jecxz
out
push
sub
or
loopne
cmpsb
sarb
mov
scas
enter
xor
add
aad
lods
mov
sub
mov
data16
jno
cmp
mov
aas
jl
pushf
mov
jge
or
cmpsb
into
or
cmovnp
loope
out
add
stos
mov
fmul
inc
outsb
das
jnp
je
rolb
adc
jne
jo
sbb
push
or
mov
call
mov
cmpb
sbb
stc
inc
adc
sbb
jecxz
hlt
fistl
filds
js
pop
add
mov
shlb
dec
or
adc
sbb
add
popl
add
xor
and
inc
cmp
hlt
jge
and
call
mov
inc
rcll
pop
dec
insb
in
push
jne
inc
jg
lods
jg
mov
and
cmpsl
dec
andb
test
outsl
mov
fcomps
xor
mov
sbbl
sbb
mov
popf
outsb
fildll
std
inc
je
inc
adc
mov
scas
loopne
mov
outsb
jbe
fstps
inc
lahf
call
sbb
popa
push
mov
jge
add
inc
lret
push
notb
jno
inc
sar
out
xchg
cmp
dec
mov
call
clc
adc
cltd
loope
xchg
push
push
inc
fs
popa
insl
call
jl
in
mov
cmp
mov
mov
pusha
or
fidivrl
add
jl
or
jge
jge
mov
adc
inc
das
pop
fdivrl
push
push
sbb
mov
shrb
dec
loop
add
cmp
cmp
cmpsl
push
mov
popa
sub
loope
ljmp
inc
push
mov
call
scas
mov
fwait
adc
imul
hlt
or
out
stos
lcall
daa
and
cmp
add
js
sub
adc
dec
shll
xchg
mov
jmp
lea
ds
push
std
jp
mov
cmp
jbe
pusha
and
mov
mov
outsb
jecxz
push
rolb
fadds
xor
dec
lock
stos
mov
sti
int3
aad
insb
dec
pop
push
aam
inc
and
inc
jge
addb
mov
mov
push
gs
adc
inc
fldl
fcmovbe
xor
push
mov
int3
mov
add
mov
jb
sbb
out
fdivrs
ljmp
psubsb
mov
imul
sti
shll
pop
fs
cmp
adc
sbb
mov
adc
out
insb
sbb
rolb
push
ss
call
mov
push
out
mull
push
mull
imul
push
cmpl
test
stos
xchg
mov
push
xor
xchg
jle
mov
lcall
inc
insb
fldt
test
jg
and
fidivrs
call
mov
je
jae
mov
fcmovu
push
lods
lcall
lods
cmpb
dec
inc
jae
fs
mov
sbb
jb
sbb
pusha
addl
fisttpl
inc
push
mov
inc
jle
scas
pslld
hlt
lock
sub
incb
sbb
xchg
mov
lret
mov
roll
jne
fisubrl
in
mov
dec
fs
xor
data16
shll
fsubrs
add
cmp
mov
popf
fs
int
les
ja
sbbb
int
dec
mov
xor
inc
sbb
adc
movsb
aaa
pop
scas
call
daa
pop
fisubs
aam
mov
sbbl
lcall
cmp
xchg
adc
pop
cmc
inc
loopne
inc
or
lods
ds
pushf
adc
mov
fidivrs
aam
and
jne
mov
adc
adc
push
ret
fcmovnu
pop
cmc
or
dec
iret
aas
inc
mov
repz
adc
dec
subb
lret
aas
and
ljmp
icebp
add
jbe
enter
push
call
cmp
push
mov
dec
adcl
test
jbe
test
cmp
pop
or
ja
or
pop
add
cmpsl
jp
mov
and
mov
pop
xor
or
jp
jb
mov
insl
sbb
sub
das
mov
loopne
adc
fsubr
sbb
icebp
add
je
int3
mov
mov
or
push
and
sub
sub
insl
icebp
mov
xor
push
mov
fisttpl
scas
mov
sbb
rcll
int
int3
push
pop
or
jmp
cltd
call
dec
mov
inc
push
in
mov
inc
outsl
add
inc
in
xor
outsl
mov
lock
pusha
pop
jge
pop
push
jae
cs
mov
jl
sbb
lods
adc
jl
pushf
or
mov
mov
pusha
push
clc
test
insb
mov
pushf
or
push
push
sbb
fucomp
scas
pop
ret
rorl
dec
xor
lods
and
pusha
xor
jo
outsl
lods
adc
loopne
jae
mov
ret
mov
jg
pop
hlt
fstpt
jmp
add
cmp
rorb
mov
mov
clc
and
lock
ljmp
jp
mov
add
pop
mov
mov
test
push
imul
pop
mov
sub
dec
push
mov
sbb
dec
insl
stc
adc
dec
add
fucomp
xchg
gs
sbb
icebp
add
xchg
js
aas
cwtl
jecxz
or
cmp
adc
xchg
lahf
cmp
push
enter
jmp
fs
jg
mov
in
cld
jnp
clc
inc
shll
pusha
fadds
inc
mov
outsb
loop,pn
js
das
and
in
ja
and
imul
push
std
fldt
dec
rorl
dec
js
pop
in
lods
cmp
or
push
pop
mov
and
ret
sbb
sub
inc
push
cmp
lcall
clc
loopne
mov
mov
mov
in
lods
push
push
add
mov
inc
or
lods
jl
push
iret
mov
fcoms
and
sbb
je
aad
add
pushf
adc
in
lods
jae
cltd
cmp
or
mov
mov
es
add
gs
jecxz
fstl
fdivrs
ficoml
je
ds
int3
clc
dec
bound
mov
adc
and
xchg
lods
cmpsb
mov
sub
loopne
sbb
loop
or
aas
shll
inc
push
dec
or
jecxz
gs
dec
xlat
add
scas
js
in
mov
inc
sbb
into
inc
pop
ja
mov
fbstp
cmp
ljmp
mov
xor
ljmp
pop
sbb
mov
adc
inc
push
xor
call
dec
clc
mov
or
pop
sbb
jge
inc
add
in
lds
js
mov
ljmp
test
out
pop
xor
call
cwtl
call
lock
push
mov
das
pop
mov
fwait
dec
jo
jno
ret
sbb
out
je
aas
setae
pop
push
jl
repz
push
xchg
cmpsl
mov
inc
mulb
xchg
loopne
adc
xchg
jo
and
imul
addl
mov
js
mov
test
test
xchg
and
je
movsb
outsb
test
roll
add
fsubrl
mov
rcr
push
cli
rcl
push
sub
adc
inc
inc
or
jecxz
inc
std
fsubl
cmp
mov
fcomip
pop
test
push
insl
adc
dec
shr
pop
adc
sbb
out
pop
pusha
push
icebp
or
inc
cltd
sbb
push
out
sbb
cmp
popl
sub
push
fisttpl
test
cmp
mov
incl
std
lods
fsubrl
aam
jne
je
pop
sahf
cmpb
or
xor
mov
or
mov
mov
dec
cs
xor
pop
mov
aaa
xor
jle
inc
dec
inc
mov
sub
test
pushf
add
adc
mov
push
test
jge
dec
scas
push
cs
mov
cmp
and
add
jb
xor
movsl
adc
shlb
adc
imul
mov
je
sub
lea
push
in
mov
inc
mov
and
pop
adc
and
push
in
jne
shll
sbb
inc
sahf
aam
adc
xor
je
fsubrp
adc
out
fs
testb
add
test
in
xchg
jmp
xor
push
call
loop
push
popf
rolb
mov
push
and
cmpsl
xchg
mov
or
lock
pop
hlt
xchg
xor
pop
loopne
data16
fistpll
roll
inc
sbb
movsb
adc
mov
cmc
sbb
stc
mov
inc
sub
xor
or
mov
fidivs
clc
test
xor
orb
out
stos
das
add
loopne
orb
jge
inc
adcb
jne
fidivl
mov
adc
adc
pop
cmp
inc
orb
hlt
in
adc
and
subl
pop
pop
sub
loope
mov
dec
or
jmp
jb
jnp
aaa
inc
jl
or
arpl
fists
aam
xchg
jmp
imul
mov
ja
adc
dec
add
push
mov
pop
mov
dec
repnz
bound
arpl
add
inc
sub
bound
loope
cld
sub
cwtl
mov
mov
xor
jb
jp
xchg
sub
mov
pop
push
into
cmp
cmpsl
nopl
pop
iret
icebp
imul
jp
addl
push
jo
push
mov
incl
adc
repz
sarb
loop
xchg
or
jns
push
mov
adc
outsb
inc
adc
ror
xchg
jp
fstpl
sbb
stos
push
iret
std
sbb
loopne
iret
out
bound
sbb
fildl
aas
mov
pop
cmp
fidivrl
sti
popl
loop
js
inc
popa
push
add
popa
push
ja
sti
pop
jne
ret
mov
lret
loopne
loope
or
divb
je
add
mov
jp
sarl
lret
cmp
add
shlb
or
adc
insl
les
mov
jmp
cld
cld
pop
test
loope
push
in
divl
aam
mov
adc
mov
adc
mov
adc
cli
jbe
sub
adc
repnz
add
lods
push
out
iret
gs
fwait
decl
fmuls
outsb
adc
mov
adc
insl
cmp
test
das
cmp
mov
inc
inc
mov
cmp
ljmp
das
popf
mov
mov
pop
fisubrs
lahf
mov
outsl
out
mov
out
outsl
dec
lcall
in
add
sti
mov
pop
movsb
mov
xor
inc
or
leave
ss
or
xchg
xchg
in
fwait
push
pop
sub
sarl
lcall
cmp
ja
cmp
cmp
push
in
aaa
aaa
in
jae
jb
xor
jbe
daa
dec
jno
xor
cmpsl
mov
inc
pop
outsb
in
mov
mov
cmp
xchg
out
xor
dec
push
and
rcrb
xchg
in
fwait
sub
push
daa
aaa
fistpll
cmp
fistps
fstp
xor
push
gs
push
daa
dec
jae
xlat
xlat
sbb
mov
pop
rcl
jno
daa
daa
daa
daa
ror
iret
int
mov
addr16
data16
es
pop
leave
push
ffreep
fs
test
aam
outsb
xor
inc
mov
jg
es
jge
popa
dec
es
mov
jle
outsl
aas
mov
mov
out
jbe
push
sbb
jb
loope
test
mov
adc
jecxz
xor
out
xlat
fsubl
pop
imul
inc
xchg
in
sti
test
inc
mov
cmp
add
adc
aad
dec
ret
icebp
fsin
push
fildll
adc
mov
js
jg
test
sub
lods
aaa
out
and
dec
lods
fcoms
sti
cmp
sbb
xchg
test
cltd
in
mulb
int
fnstcw
test
movsb
aas
mov
pop
outsb
test
cs
inc
mov
enter
fcoml
popf
inc
push
mov
jb
stos
arpl
enter
mov
int3
std
pop
cld
inc
popf
lret
in
pop
jo
in
cmp
mov
jl
orl
push
mov
add
lahf
das
fistpll
cmp
mov
shrb
dec
test
sbb
mov
jae,pn
xchg
jae
dec
inc
mov
jns
std
ljmp
fwait
mov
das
inc
push
dec
add
push
push
test
jmp
fstpt
cld
cmp
mov
push
pop
xor
int3
mov
mov
inc
dec
in
xor
aas
sub
mov
inc
or
ss
dec
sbb
mov
cs
outsb
dec
cmc
popf
scas
sbb
in
int
or
inc
push
add
sbb
cltd
gs
add
push
mov
es
imulb
mov
mov
aas
out
mov
jmp
loop
or
fwait
sbb
dec
sbb
movsb
mov
imul
or
or
out
out
add
fisubrs
mov
mov
mov
add
outsb
dec
sahf
push
push
pop
cmp
sub
lahf
popf
das
imul
jnp
in
sbb
lahf
pop
cmp
push
push
outsb
xchg
add
or
popa
iret
xor
pop
xchg
or
repnz
mov
mov
test
cwtl
loop
mov
scas
mov
lock
repz
mov
jno
test
stos
mov
add
mov
xchg
or
jge
test
sbb
xor
push
mov
mov
fcomps
mov
sbb
cmp
ss
iret
loope
mov
and
mov
fistpll
sub
push
or
sbb
mov
insb
lods
sub
subb
imul
xchg
sub
imul
outsb
popa
test
rolb
lret
cmp
dec
mov
fsubrl
dec
scas
inc
fnstcw
sbb
mov
cmp
push
xchg
pop
aas
push
mov
aas
cmp
add
push
mov
test
ljmp
cmpsl
lahf
lret
xor
mov
fnstenv
fyl2xp1
dec
scas
xchg
sbb
xor
mov
mov
mov
dec
jb
or
sbb
call
das
outsl
adc
je
outsb
cld
mov
mov
mov
dec
mov
mov
jmp
mov
jmp
jno
insb
inc
adc
adc
pop
int3
sbb
das
ret
and
mov
jne
out
test
arpl
test
popa
in
dec
enter
pop
sbb
pop
dec
mov
imul
mov
fcmovu
in
cmpb
mov
inc
repz
int
xchg
or
insb
mov
ja
test
sbb
mov
repnz
loope
adc
sbb
enter
mov
clc
es
imul
mov
jg
sub
cmp
inc
push
daa
jmp
sti
jb
jb
or
cmp
jne
dec
repz
imul
or
test
in
xor
cmp
aas
sbb
adc
clc
mov
add
pop
push
mov
call
test
mov
icebp
push
in
pop
ret
pop
push
fldt
dec
cmpsl
or
lock
mov
mov
in
lods
outsl
pop
bound
xchg
jb
js
das
aad
pop
cli
fisttpll
inc
outsb
in
nop
lods
mov
xor
lock
aad
jb
jb
fldcw
das
sub
lahf
mov
jmp
xchg
xchg
xor
mov
jbe
fbld
xchg
ds
shrb
insl
mov
test
test
inc
loopne
xlat
xchg
push
mov
sbb
enter
sub
test
jle
sbb
bound
sub
xor
lods
mov
fldl
cmp
shr
mov
es
mov
mov
ret
or
add
mov
fcomps
jae
cmpsl
push
and
jne
fucomi
mov
leave
lahf
mov
mov
mov
mov
push
cmp
mov
push
inc
insb
or
mov
test
xchg
xor
inc
fistps
lahf
add
xchg
pop
push
add
mov
sbb
jle
mov
mov
or
sbb
add
fwait
push
in
pop
psubusw
sbb
iret
movsb
pop
out
mov
insb
push
mov
mov
in
jge
scas
add
push
mov
xor
mov
rcrb
cmp
nop
outsb
mov
add
es
rolb
pop
mov
mov
sbb
push
mov
mov
sub
or
idivl
mov
cmpsl
and
pop
sub
test
aaa
jp
xchg
ds
sbb
cmp
push
mov
pushf
and
loopne
pop
leave
mov
xchg
and
int
inc
dec
arpl
and
dec
or
shlb
mov
in
dec
out
xchg
sub
sub
movsb
mov
sub
outsl
jne
cmpsb
and
cmpsl
in
out
xor
sti
imul
inc
inc
imul
and
jo
imulb
adc
popf
mov
ljmp
jb
test
push
xchg
and
mov
sub
daa
aas
movsb
xlat
mov
and
mov
or
mov
std
push
pop
or
mov
lret
sahf
scas
mov
ss
test
cld
inc
jg
inc
fidivrl
out
clc
neg
mov
push
fldcw
ja
xchg
jle
or
sbb
or
shr
push
pushl
jmp
adc
out
outsb
push
ja
sbb
and
pushf
aaa
jle
out
out
lds
das
jge
mov
dec
inc
push
inc
cmp
mov
js
jmp
mov
xchg
xor
fwait
mov
inc
outsb
jo
pop
pop
loope
imul
jmp
xchg
lea
loopne
jge
insb
int
pop
sahf
pop
fs
push
call
aaa
int
add
cmp
jne
ret
xor
push
push
imul
inc
add
lods
cmpl
fisttps
test
cmp
sbb
sbb
xor
jne
push
add
mov
decl
add
add
jmp
add
add
add
dec
adc
std
sti
pushl
add
add
sub
or
mov
mov
inc
push
sub
iret
push
or
dec
jnp
lret
add
sbb
aas
or
decb
fnstsw
std
xor
inc
dec
pop
inc
bound
add
or
outsb
mov
addb
xchg
inc
jge
push
popa
push
inc
mov
js
sub
js
fs
arpl
inc
jmp
add
fs
mov
sbb
inc
xor
sub
into
mov
inc
inc
insl
jns
inc
mov
iret
jnp
std
imul
inc
popf
adc
mov
inc
pop
sti
mov
in
repz
out
dec
inc
inc
fisubl
adc
imul
insl
pop
push
faddl
sub
add
dec
aam
in
add
jno
jb
push
pushw
addr16
out
fidivs
push
xchg
push
xor
jmp
imull
jg
or
inc
push
push
xchg
or
imulb
inc
push
pop
je
jae
add
jo
mov
idivl
dec
jno
or
fisttps
dec
add
mov
pop
js
mull
pop
loope
push
fdivr
fldt
jb
jbe
dec
ret
add
fs
addr16
arpl
pusha
fwait
ja
add
sub
mov
lock
inc
push
jnp
inc
mov
ja
insb
xor
rolb
popa
imul
inc
add
xor
lock
mov
aaa
or
push
fstpt
insb
rolb
ja
dec
sub
mov
shr
aaa
inc
jbe
je
rorl
repnz
dec
imul
or
mov
sbb
fnstsw
push
push
dec
jns
out
push
inc
popa
gs
push
cmp
mov
push
ljmp
add
in
ja,pn
ljmp
rorl
xor
fisubrs
lea
mov
fs
jno
mov
in
out
inc
sbb
mov
inc
shll
idiv
fcmovu
fistl
jns
arpl
cld
fistpll
dec
push
ja
dec
gs
or
cs
mov
cmpsb
push
xor
call
bound
icebp
mov
outsl
mov
dec
add
cmp
adc
xor
xor
mov
dec
andl
inc
sti
aaa
jge
cld
call
mov
add
leave
jne
idivb
add
pop
dec
inc
fcmovu
adc
test
pop
ret
push
inc
jne
test
mov
dec
sub
insw
inc
xor
icebp
mov
leave
in
aam
jmp
repz
ja
das
aaa
dec
outsl
out
jbe
lock
push
jno
js
repz
dec
xor
rcrl
xchg
inc
add
or
mov
les
rol
stos
lock
cwtl
div
pop
adc
inc
mov
add
aas
imul
aas
xchg
in
add
push
iret
cld
outsb
fwait
pusha
call
sahf
dec
push
inc
aaa
push
ja
mov
and
xor
out
add
or
das
hlt
ja
mov
xor
clc
data16
shll
pop
mov
ja
ret
fwait
dec
filds
movsl
and
jno
negl
pop
cmp
add
pop
fwait
xchg
popa
dec
bound
cmp
add
jb
hlt
or
sbb
jae
inc
mov
inc
jbe
inc
push
call
sbb
cmp
outsl
xor
push
dec
push
imul
push
cmp
dec
dec
push
ret
je
insb
pop
push
dec
xchg
xchg
lret
or
mov
cwtl
inc
xor
popa
inc
loop
fldcw
jae
jmp
push
push
imul
push
mov
sbb
adc
pop
push
jnp
mov
enter
ret
insl
js
sbb
inc
and
jo
fbstp
xchg
pop
adc
inc
inc
outsl
jno
ja
sub
dec
pop
out
int
lods
fcmovb
insb
das
bound
scas
jbe
adc
pop
mov
popl
inc
aaa
add
repz
fisttpl
divl
lea
fs
shll
pop
shll
inc
cli
aaa
fimuls
sub
fisubl
jl
push
dec
fsubs
arpl
or
jbe
pop
mov
xor
adc
xchg
sbb
insb
in
call
inc
push
insl
mov
sbb
jle
xchg
xor
adc
data16
push
dec
rorl
insb
jl
loop
shlb
sub
adc
jg
sti
lock
cli
js
inc
insb
pop
popa
movsl
xchg
movl
lret
cmp
incb
inc
and
in
pop
bound
enter
inc
jg
fwait
mov
adc
rclb
insl
arpl
or
pop
or
out
js
inc
enter
pop
cmp
out
inc
push
push
dec
lods
mov
cmpsl
arpl
sbb
int
dec
dec
push
loope
out
insl
add
mov
push
dec
push
dec
dec
mov
icebp
std
dec
push
insl
jne
mov
mov
je
adc
clc
pusha
mov
cmpsl
dec
lret
jb
jnp
sbb
mov
imul
inc
jge
pop
xlat
sbb
dec
mov
inc
push
push
inc
mov
lods
push
dec
dec
movsb
cmpl
and
push
push
push
mov
xor
pop
cs
aam
les
gs
dec
sbb
inc
aad
mov
push
jbe
add
dec
sub
clc
inc
aam
fwait
mov
push
ret
das
roll
sbb
out
clc
sub
popa
insl
mov
int
cmpsl
jbe
xor
jae
lods
dec
std
ljmp
jl
out
inc
push
outsl
gs
arpl
fwait
jecxz
ss
add
inc
dec
push
inc
xchg
das
mov
cmp
or
popa
push
xor
inc
inc
outsb
mov
imul
ret
mov
sbb
xlat
dec
inc
mul
pop
mov
insb
sbb
sbb
push
scas
inc
lock
cmp
cmp
call
mov
cld
test
sti
mov
mov
pusha
shll
jns
cmp
dec
test
add
jmp
mov
aad
pushf
sub
jno
jne
jo
inc
jne
jecxz
leave
pop
je
pop
or
cli
clc
out
push
sub
fsub
push
xor
inc
jne
mov
mov
ljmp
imul
sbb
jmp
sub
jns
stc
jnp
push
adc
sub
pop
adc
ss
jno
addr16
jo
pop
cli
popw
mov
pop
movsb
pop
ds
cmp
dec
inc
in
push
sbb
insl
jno
sub
ficoms
or
inc
xchg
lock
scas
pushl
insb
mov
or
dec
leave
clc
jl
or
push
push
inc
dec
leave
insl
outsb
jno
les
sbb
push
dec
adc
xlat
and
ja
nop
push
adcb
das
add
add
outsl
add
insl
add
das
scas
sti
inc
jo
add
jo
push
add
add
outsl
repz
addb
add
arpl
push
fsub
out
mov
add
imul
lds
negl
inc
or
ja
mov
and
jo
dec
add
mov
add
popa
insl
cmp
push
mov
int3
jne
bound
inc
pop
xlat
jne
add
push
cmp
imul
lea
mov
cmp
dec
or
xlat
mov
jae
out
cmp
imul
enter
sbb
sub
inc
ja
add
fucomp
ficoms
mov
cmpsl
mov
sub
maxps
adc
add
idivb
sub
fbstp
sbb
sti
test
outsl
fstpl
add
dec
lret
xor
jae
and
dec
dec
xor
outsl
or
lcall
dec
fstps
mov
inc
pop
out
jnp
or
or
std
mov
add
sub
inc
je
neg
cmpsl
addl
mov
adc
pop
out
jns
sti
jnp
inc
and
add
mov
mov
ja
int3
mov
cmp
pop
aad
fadds
sbb
or
inc
lea
mov
mov
pop
and
and
jo
int
repz
dec
jne
jne
wbinvd
mov
or
mov
aas
add
dec
jg
pop
idivl
je
jg
pop
aaa
jns
jae
dec
inc
sbb
sub
push
dec
xor
pop
push
rol
dec
xchg
dec
movsl
xor
imul
or
sti
in
push
mov
cmp
imul
cmpsl
popa
ja
xor
addr16
adc
jne
rolb
and
jo
insl
iret
and
push
ds
vpaddsw
out
inc
dec
mov
and
inc
repz
or
jae
loope
js
inc
pop
imull
neg
xchg
fisttpl
subl
inc
std
jae
jo
negl
insl
inc
jnp
sub
ja
jge
pop
xor
mov
or
test
repnz
inc
pop
insl
outsl
dec
adc
jnp
loope
arpl
aas
outsl
pop
fcoms
fnstcw
es
cltd
jnp
insb
roll
xchg
addr16
cmp
push
push
adc
bound
popa
iret
push
jge
jp
jp
dec
push
outsl
jns
fimuls
xchg
daa
dec
cltd
jbe
or
addl
cltd
sbb
cmpsl
js
ret
mov
pop
aaa
jmp
xor
popf
mov
cmp
mov
xor
sub
add
icebp
loope
push
daa
rcrl
mov
sbb
dec
ret
arpl
cltd
outsb
pushf
adc
inc
dec
push
movsl
cltd
jno
xor
xor
jge
sbb
stos
xorl
or
xchg
adc
jge
notl
xor
inc
pop
dec
dec
cmp
rorl
gs
cmp
xor
es
xor
nop
lock
cmc
push
push
arpl
loope
rcll
adc
frstor
sbb
ret
add
add
loope
fnsave
push
jl
sahf
push
ss
cmp
xlat
xor
pop
sti
test
insb
mov
arpl
nop
lods
fwait
icebp
js
add
popa
nop
push
popa
insb
xchg
repnz
xchg
popa
dec
je
push
sbb
insb
fs
add
pusha
xchg
inc
mov
xchg
inc
fisubs
mov
sbb
shll
out
adc
inc
or
sbb
or
repz
daa
outsw
insb
pop
sbb
lret
sbb
outsl
int
inc
test
cmp
lods
insb
cmp
and
pop
out
nop
aas
mov
sbb
xchg
imul
pop
out
movsb
mov
add
mov
mov
mov
insl
pop
das
dec
xor
mov
pop
fwait
cmc
push
loope
mov
jo
gs
cmpsl
inc
inc
sahf
lock
les
adc
jbe
add
in
xor
fwait
jne
cmp
repz
lds
fists
popf
cld
addb
push
fs
imul
es
das
outsl
adc
add
and
test
push
push
outsl
leave
bound
pop
jae
mov
cmp
daa
popf
jmp
push
jne
sbb
mov
shll
adc
out
mov
bound
jns
add
fildll
add
jmp
cmp
mov
jecxz
pop
and
pop
sub
test
cmpsl
sbbl
fldt
jnp
fstps
inc
mov
mov
xchg
sarl
negl
in
push
sbb
scas
sar
ret
pop
xchg
shlb
mov
cmp
sub
xchg
inc
cmp
pop
popa
lret
sbb
xor
mov
pop
xor
movsb
xchg
aam
inc
jg
loope
mov
xchg
je
pop
insb
adc
pop
movsb
inc
mov
cwtl
test
jae
fwait
dec
xor
jmp
pop
pop
addr16
inc
mov
pop
adc
dec
inc
addr16
pop
adc
addr16
aas
inc
es
or
jmp
jbe
xchg
addr16
gs
mov
fwait
cmp
pop
leave
cmp
ljmp
push
mov
dec
fst
arpl
fwait
pop
mov
xor
outsb
loope
mov
push
add
adc
xor
popa
xchg
add
and
mov
fnsave
or
inc
push
cmp
int3
adc
jnp
or
or
test
es
add
sbb
sarl
add
or
push
or
arpl
ficompl
inc
lea
add
cmp
add
icebp
or
add
adc
stos
xor
cmp
pushl
sub
or
cmp
or
insb
repnz
sbb
addr16
repnz
dec
ja
add
scas
add
fimuls
xor
adc
idivl
or
sub
hlt
fwait
dec
aas
aaa
or
pushf
in
leave
stc
addr16
fstl
mov
lods
sub
test
testl
les
dec
dec
int
jle
dec
flds
push
popl
adc
ret
insl
add
loope
cmp
fs
or
push
jno
or
mov
and
sahf
js
shrb
push
iret
jecxz
out
push
mov
loop
mov
pushl
add
jl
loope
jle
or
fwait
or
xchg
push
lcall
mov
push
dec
push
add
and
or
jno
outsl
ret
negl
and
addr16
jmp
cmpsl
push
sbb
adc
mov
jnp
pop
scas
xor
inc
sub
lock
xchg
cltd
pushl
out
or
pop
fnsave
negb
mov
jnp
jns
push
popa
addl
xchg
xor
add
pop
incl
orl
push
cli
leave
out
arpl
lods
mov
jmp
xchg
cmp
adcl
pop
dec
pop
dec
pop
loopne
adc
mov
gs
mov
cmp
or
popa
jne
cmp
xchg
jne
mov
ds
neg
push
mov
int3
les
sbb
lcall
notl
push
inc
pop
adc
fisttpl
fwait
dec
inc
ss
sub
adc
incl
sub
and
int
pop
cmc
xor
ret
jl
push
mov
outsb
sbb
adc
insb
ret
repz
imul
jns
hlt
dec
inc
std
or
xor
inc
scas
xor
cld
mov
aad
or
and
jne
decl
mov
addl
mov
sarl
imul
push
ret
jmp
sahf
call
fldl
add
inc
adc
xchg
stos
pause
je
lods
or
dec
aaa
ljmp
mov
inc
adc
inc
pop
movsb
movsb
cmpl
arpl
outsb
add
decl
shlb
aas
cltd
jmp
outsl
pop
test
movhps
cli
cmp
iret
sbb
pop
rcl
call
jmp
xor
and
sbb
je
addr16
ud2
rcrl
jmp
mov
jb
pop
stc
scas
ffree
jne
out
or
mov
push
lds
pop
fsubl
sbb
fdivr
pop
mov
das
jge
movl
sbb
or
in
outsb
outsb
mov
or
and
push
mov
adc
inc
push
xor
cs
les
cltd
das
subl
negl
arpl
cmp
into
adc
push
pop
enter
stos
scas
mov
ljmp
jl
xor
test
pop
mov
lock
inc
int
test
jmp
mov
push
mov
push
mov
dec
dec
push
cli
shll
lahf
mov
sub
pushl
fimuls
insb
std
outsl
and
mov
test
jl
push
enter
and
pushl
cmp
in
sub
xor
xchg
adc
sub
pmaxub
outsb
mov
and
mov
es
mov
les
mov
add
imul
loopne
cmc
aas
xchg
pushl
stc
cmp
test
add
sub
dec
jg
mov
dec
cmp
call
mov
mov
jno
dec
pop
mov
jmp
xor
cs
iret
iret
incl
movsb
cmp
js
outsb
fs
imul
jns
iret
xchg
dec
mov
inc
shlb
push
inc
dec
add
aaa
pop
imul
mov
scas
call
lods
mov
cld
inc
jnp
int
add
sub
sbb
decl
add
loope
jbe
pusha
pop
je
sub
dec
es
cli
cmp
mov
and
dec
sub
icebp
incb
adc
sub
mov
int3
subl
mov
adc
nop
push
add
add
rolb
ljmp
or
push
and
add
inc
gs
outsl
fs
pushl
popa
outsb
fs
adc
imul
jae
jg
out
ds
outsl
insl
insl
sbb
gs
adc
fs
aas
adc
mov
cmp
dec
addr16
pop
inc
jb
in
rcr
ja
adc
adc
inc
jne
imull
jb
sbb
adc
ret
nop
sub
jne
sbb
lea
outsl
popa
fs
dec
imul
imul
popa
je
dec
popa
insl
gs
imul
sti
mov
incl
jne
push
jne
insb
dec
gs
jbe
adc
sti
insb
and
inc
cmp
idivb
gs
inc
sbb
outsb
inc
jbe
loope
xor
je
hlt
aam
and
sbb
gs
dec
outsb
jne
adc
cltd
insl
ret
fisubrl
adc
lods
cmp
aaa
adc
mov
jns
inc
mov
jae
loope
jbe
popa
push
ds
push
inc
add
adc
pop
lods
and
dec
jb
arpl
and
sbb
jnp
cmovg
scas
call
cmp
xchg
push
jnp
pop
popf
jb
and
jae
inc
pop
sbb
fdivs
push
jne
jns
mov
push
mov
xorb
mov
data16
xor
fwait
sub
test
ja
jnp
mov
fs
jle
dec
inc
jo,pn
popa
push
xchg
cmp
adc
into
outsb
dec
popa
imul
lahf
mov
arpl
outsl
jae
gs
out
inc
inc
nop
jae
or
insb
fdivl
add
inc
pop
add
jno
mov
fldenv
pusha
inc
mov
or
push
cwtl
sbb
push
fdivs
mov
dec
div
xor
or
jo
and
sbb
neg
push
and
push
je
ficomps
adc
and
mov
movsl
push
or
jb
adc
leave
cmc
dec
and
push
gs
mov
pop
inc
lea
or
jne
jne
pop
imul
dec
mov
or
inc
jp
out
scas
dec
or
add
inc
outsb
imul
xchg
push
inc
jae
push
dec
outsl
mov
sub
in
data16
mov
out
aas
inc
inc
outsl
js
dec
mov
cmp
and
cmp
push
inc
add
dec
add
inc
mov
and
add
orl
add
into
mov
pop
adc
orb
or
jne
lcall
or
adc
mov
in
fldt
into
add
add
adc
aaa
jg
inc
dec
adc
add
mov
add
jbe
enter
dec
and
nop
fldl
je
out
adc
popa
pop
jmp
and
int
imul
push
insl
or
sbb
mov
cs
xor
mov
mov
js
xorl
pop
pop
pusha
cmp
fmuls
aas
or
add
push
add
daa
sarb
add
xor
sub
add
add
add
add
and
incl
add
pusha
mov
lea
push
jmp
testb
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
