add
add
shr
mov
jmp
mov
sub
sub
pop
pushl
or
pop
jmp
dec
dec
push
addr16
xor
mov
inc
xchg
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
xchg
add
xor
mov
and
nop
sub
mov
mov
mov
jmp
mov
mov
or
add
shr
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
xor
push
pop
jmp
push
xchg
call
addr16
jmp
push
xchg
call
xchg
mov
mov
mov
xchg
jmp
push
addr16
push
xchg
push
push
pop
push
xchg
add
nop
push
mov
call
xchg
jmp
nop
nop
nop
nop
nop
mov
nop
nop
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
add
sub
mov
and
mov
pushl
shr
pop
jmp
mov
xchg
mov
mov
movl
xchg
sub
or
shr
rol
dec
mov
rol
and
xor
xor
mov
jmp
xor
nop
push
push
pop
push
nop
jmp
dec
push
xchg
or
and
or
ror
ror
mov
push
mov
push
addr16
push
xchg
xor
shl
or
or
mov
dec
add
dec
sub
mov
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
push
xchg
jmp
jmp
jmp
dec
dec
dec
push
xchg
or
add
mov
jmp
add
pop
ror
pop
sub
pop
call
xchg
jmp
push
xchg
call
addr16
jmp
dec
dec
push
xchg
rol
sub
rol
mov
sub
addr16
jmp
push
mov
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
mov
push
nop
pushl
push
pop
pushl
mov
call
addr16
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
addr16
push
mov
xor
mov
push
xchg
push
mov
push
xchg
push
xchg
push
mov
jmp
mov
mov
jmp
mov
xchg
jmp
add
xchg
jmp
dec
dec
call
xchg
mov
xchg
mov
xchg
jmp
push
nop
pushl
nop
call
xchg
mov
jmp
dec
dec
dec
dec
dec
call
mov
mov
xchg
mov
mov
mov
xchg
jmp
jmp
xchg
dec
dec
dec
dec
dec
add
add
mov
jmp
dec
dec
push
xchg
cmpl
xchg
jne
push
xchg
push
mov
jmp
add
nop
mov
mov
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cltd
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
nop
add
xchg
jmp
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
dec
push
mov
xor
xor
or
add
mov
jmp
dec
dec
dec
push
push
pop
shl
rol
and
or
mov
push
mov
push
push
pop
push
addr16
jmp
push
mov
push
addr16
push
addr16
push
xchg
xor
xchg
call
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
jmp
xor
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
xor
nop
jmp
push
nop
call
mov
jmp
dec
dec
dec
dec
dec
dec
push
mov
rol
mov
sub
nop
mov
and
mov
jmp
andl
mov
push
nop
jmp
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
add
or
xor
mov
mov
movzbl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
xchg
jmp
call
xchg
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
ror
mov
dec
or
inc
pop
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
movl
addr16
push
mov
pushl
mov
call
mov
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
or
xor
shl
and
add
mov
and
dec
mov
mov
and
or
sub
mov
add
mov
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
mov
or
or
sub
or
pop
jmp
xor
mov
and
mov
mov
xchg
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
xchg
push
xchg
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
xor
shr
mov
mov
push
pop
andl
xchg
jmp
mov
nop
inc
mov
push
addr16
jmp
push
xchg
sar
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xchg
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
mov
mov
push
xchg
jmp
push
push
pop
jmp
call
push
pop
jmp
dec
add
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
xchg
and
ror
xor
xor
add
mov
push
push
pop
add
inc
xor
add
mov
push
xchg
jmp
push
nop
push
addr16
pushl
ror
sub
add
add
mov
push
or
dec
sub
sub
and
add
add
dec
test
jne
pop
pop
call
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
jmp
push
push
pop
add
mov
or
xor
mov
mov
xor
or
dec
shl
mov
push
addr16
jmp
call
nop
sub
add
mov
add
xor
add
and
mov
mov
push
pop
mov
push
pop
jmp
mov
and
pop
pushl
nop
push
xchg
pushl
mov
push
mov
call
xchg
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ror
shr
ror
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
rol
ror
mov
jmp
push
push
pop
push
nop
push
add
add
dec
add
shl
mov
sub
rol
xor
and
dec
test
jne
pop
inc
sub
and
add
call
jmp
push
mov
xor
xchg
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
xchg
dec
nop
jmp
call
xchg
movl
xchg
call
nop
sub
add
and
xor
mov
push
xchg
call
nop
add
and
mov
and
mov
jmp
and
add
or
mov
rep
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
shl
sub
and
mov
and
mov
inc
sub
rol
and
inc
mov
sub
xchg
jmp
cmp
xchg
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
add
add
or
xor
mov
push
push
pop
sub
or
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
or
sub
pop
jmp
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
nop
and
xchg
mov
mov
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
xchg
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
call
nop
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
sub
push
pop
sub
xchg
dec
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
mov
push
pop
sub
nop
decl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
sub
pop
jmp
mov
mov
sub
shr
dec
pop
jmp
inc
xchg
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
add
pop
or
pop
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
add
mov
mov
xchg
add
push
pop
add
xchg
add
xchg
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
rol
ror
add
mov
shl
pop
cmp
mov
pop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
xor
addr16
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
pop
call
mov
shr
mov
mov
add
pop
jmp
movl
xchg
call
nop
or
and
pop
or
mov
call
nop
push
nop
call
xchg
shr
mov
jmp
add
xchg
cmpl
push
pop
je
push
addr16
shr
and
mov
sub
addr16
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jbe
add
push
pop
jmp
jmp
je
call
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
push
mov
xor
xchg
mov
and
xor
add
sub
pop
jmp
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
xor
shr
or
mov
add
nop
add
xchg
dec
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
jle
xor
and
mov
mov
nop
andl
xchg
add
xchg
mov
addr16
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
xchg
push
xchg
push
nop
push
mov
pop
push
mov
call
push
pop
push
push
pop
jmp
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
mov
nop
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
dec
shr
mov
and
xchg
jmp
ror
and
add
shl
inc
and
mov
mov
xchg
xor
or
dec
mov
add
nop
mov
mov
sub
mov
sub
mov
ror
mov
dec
add
add
mov
jmp
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmpb
nop
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmpb
nop
je
jmp
mul
aaa
rep
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
nop
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pushl
mov
pop
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
add
mov
mov
pusha
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
mov
jmp
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
ror
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
nop
add
nop
dec
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
shr
or
add
sub
pop
jmp
test
add
mov
mov
ror
mov
shr
xor
mov
movsbl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rol
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xchg
incl
mov
sub
add
mov
jmp
mov
sti
add
mov
jne
jmp
push
movsb
dec
mov
and
shr
pop
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
xchg
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
and
nop
add
xchg
add
mov
add
mov
mov
mov
sub
sub
and
add
add
inc
push
pop
inc
addr16
decl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
jmp
incl
xchg
add
mov
cmp
addr16
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jl
ror
and
mov
pushl
mov
pushl
or
sub
add
shl
pop
dec
mov
jmp
push
shl
inc
mov
add
push
add
or
or
pop
or
sub
dec
test
jne
pop
pushl
shr
inc
add
pop
call
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
rorl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
mov
jmp
add
xchg
cmpl
addr16
jne
add
add
ror
pop
and
mov
mov
xchg
jmp
add
xchg
call
nop
add
mov
mov
pop
push
mov
pushl
push
pop
call
addr16
xor
or
or
mov
shr
or
sub
mov
jmp
add
mov
mov
movb
xchg
movl
mov
call
mov
popa
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
dec
nop
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
jmp
jne
rol
sub
mov
sub
dec
mov
cmp
xchg
je
incl
xchg
jmp
dec
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
inc
mov
pop
shr
pop
or
and
add
pop
dec
add
pop
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
nop
shl
pop
mov
or
or
or
shr
pop
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
push
pop
call
push
pop
mov
mov
add
mov
sub
add
sub
mov
pushl
dec
ror
inc
and
pop
rep
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pushl
nop
jmp
jmp
push
pop
pusha
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
xchg
popa
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
xchg
call
xchg
push
add
inc
add
or
pop
jmp
cmpsl
lock
or
mov
sub
nop
mov
nop
mov
xchg
jmp
movb
nop
incl
xchg
jmp
loopne
loop
jmp
inc
add
push
pop
call
mov
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
shl
mov
movzbl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
incl
xchg
jmp
cmp
mov
jl
xor
xchg
jmp
call
nop
push
mov
nop
nop
nop
nop
nop
call
mov
rol
ror
mov
sub
shr
mov
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
shl
sub
sub
dec
rol
mov
or
mov
jmp
and
test
shlb
inc
push
pop
or
xor
rol
mov
and
xchg
inc
xchg
inc
nop
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
add
nop
sub
mov
jmp
add
xor
mov
sub
addr16
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
je
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
sub
mov
xor
dec
ror
mov
sub
xchg
mov
mov
incl
nop
jmp
and
rol
mov
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
xchg
add
nop
inc
shr
pop
xor
inc
pop
and
rol
rol
pop
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
mov
nop
jmp
mov
mov
xchg
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
jmp
mov
mov
mov
xchg
jmp
cs
inc
sub
inc
add
inc
mov
jmp
cmp
add
call
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
cmp
mov
jne
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
hlt
sbb
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
and
shr
and
or
mov
and
mov
cmp
xchg
jne
and
xchg
add
nop
add
nop
jmp
call
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
add
mov
sub
xchg
or
mov
mov
xchg
incl
xchg
nop
nop
nop
nop
nop
dec
xchg
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
jmp
sub
xchg
jmp
nop
nop
nop
nop
nop
dec
nop
dec
nop
xor
shl
mov
movzbl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
shl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
xchg
jmp
in
xorb
sub
mov
mov
mov
mov
add
addl
nop
decl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
add
xchg
cmpl
mov
jne
nop
nop
nop
nop
nop
call
xchg
mov
xchg
jmp
mov
repz
xchg
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
inc
bnd
inc
sbb
pop
mov
xchg
sub
mov
sub
mov
push
nop
call
nop
push
nop
mov
nop
call
mov
jmp
ret
shr
mov
call
nop
cmp
xchg
nop
nop
nop
nop
nop
jb
inc
addr16
cmp
mov
jb
inc
nop
cmp
addr16
jmp
cli
cmp
mov
mov
jmp
jge
pop
jae
inc
xchg
inc
xchg
jmp
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
shr
and
add
jmp
push
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
shr
ror
mov
dec
sub
xor
shl
mov
mov
sub
mov
jmp
mov
add
nop
jmp
or
inc
mov
add
mov
push
xchg
call
mov
cmp
nop
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
jmp
mov
rorl
incl
mov
dec
push
pop
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
mov
xchg
jmp
aaa
mov
shr
shl
add
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
jmp
xor
leave
inc
nop
jmp
mov
shl
mov
and
dec
mov
mov
mov
mov
jmp
dec
orl
pushl
and
pop
mov
mov
mov
add
addr16
add
nop
jmp
jns
jmp
clc
xchg
pop
incl
xchg
incl
xchg
mov
xchg
xor
push
pop
cmpl
mov
jmp
cld
sub
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
jmp
mov
push
in
incl
inc
and
add
mov
xor
sub
shr
pop
sub
nop
rol
sub
pop
or
mov
rol
inc
dec
sub
pop
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
shl
mov
sub
and
add
add
push
pop
nop
nop
nop
nop
nop
add
mov
push
addr16
nop
nop
nop
nop
nop
pushl
nop
call
xchg
nop
nop
nop
nop
nop
mov
xchg
add
mov
add
mov
add
mov
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
add
addr16
nop
nop
nop
nop
nop
cmpl
mov
nop
nop
nop
nop
nop
jne
call
xchg
mov
xchg
nop
nop
nop
nop
nop
mov
xor
xor
or
xor
mov
nop
nop
nop
nop
nop
pushl
and
rol
pop
nop
nop
nop
nop
nop
add
add
mov
or
shl
pop
ror
shr
pop
mov
pop
mov
nop
cmp
xchg
jne
pushl
inc
pop
add
xchg
mov
xchg
nop
nop
nop
nop
nop
push
and
pop
add
add
push
pop
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
cwtl
adc
insb
adc
dec
iret
xor
pushl
or
xchg
pop
out
cld
or
pop
cwtl
dec
xchg
add
in
insb
jp
lds
test
push
xor
ret
mov
sub
mov
loop
mov
int
jg
lret
pop
adc
les
lods
cmp
sbb
les
or
mov
push
pop
adc
mov
mov
and
repz
jmp
adc
pop
jb
stc
sub
lcall
jl
fnstsw
sub
out
jb
jecxz
std
sbb
mov
aad
hlt
mov
pop
sbb
xlat
xchg
out
add
mov
mov
fidivl
mov
or
nop
je
popf
sbb
mov
inc
jp
add
adc
fimuls
icebp
lods
mov
jle
pop
push
xchg
inc
or
fs
xchg
insb
push
hlt
cltd
cmpsl
inc
in
fldl
ret
scas
mov
xor
and
test
daa
push
dec
jns
leave
cli
mov
in
ljmp
add
pusha
add
cmp
cld
cmp
jle
mov
test
push
mov
fists
mov
ja
and
ret
leave
add
dec
push
popa
lret
or
mov
test
repnz
cmp
push
daa
fwait
int3
lods
adc
push
push
mov
dec
aaa
mov
mov
sbb
fmul
pop
xchg
push
imul
in
cmp
xor
sahf
xchg
add
aas
jge
mov
jp
repz
ljmp
lahf
repnz
rolb
ret
mov
test
jp
dec
mov
jmp
stos
outsl
dec
lahf
jmp
sub
lds
stos
jl
jno
popa
icebp
rcrl
cmc
movsb
vorps
loope
dec
ja
stc
in
inc
pop
and
sti
xchg
push
push
inc
pop
mov
inc
add
or
hlt
cmpsb
test
daa
repz
dec
push
int3
inc
nop
mov
shr
mov
in
xchg
mov
fcoml
test
jmp
mov
nop
mov
jno
testb
jo
push
jae
jb
xchg
push
icebp
sub
or
std
mov
cvtdq2ps
xor
pop
cld
sarl
and
dec
lret
xor
xchg
cs
cmp
subl
mov
push
imul
adc
ja
in
pop
mov
das
cli
fs
mov
stc
lock
das
test
dec
jne
jge
or
fwait
mov
inc
mov
pop
in
and
sub
inc
xor
rsqrtps
cmp
int3
lcall
stos
int
lcall
pop
sub
int
cli
and
sub
jmp
lds
in
xchg
outsl
repnz
cmpsb
bound
popf
lock
shlb
mov
pop
add
aas
fidivl
cmp
cmp
icebp
jmp
push
in
sbb
xchg
push
into
jecxz
out
cmp
jo
adcl
inc
aaa
xor
inc
xchg
xchg
es
es
xchg
lcall
fisttps
sub
pop
in
aas
lret
push
mov
add
mov
popl
fsubrs
test
imul
mov
in
xor
cmpsb
add
fcmovb
hlt
add
xor
dec
mov
sahf
or
cwtl
dec
xor
mov
por
pop
jecxz
cmp
push
jo
mov
mov
insl
sub
loop
into
jmp
sbb
data16
adc
andb
xchg
icebp
add
sub
xchg
xor
mov
jns
dec
daa
jae
inc
pusha
loop
les
je
push
mov
insl
pop
xchg
add
stos
sub
mov
rep
rcll
push
xor
insl
cwtl
xchg
dec
adc
sbb
sub
push
xchg
arpl
xchg
dec
sbb
sbb
and
pop
leave
test
xchg
test
test
sub
lret
fcmovne
mov
jo
lock
jbe
test
push
cld
xor
sub
pusha
in
or
test
jbe
xlat
or
scas
mov
xor
lea
mov
xchg
mov
and
mov
adc
lods
mov
xchg
in
fs
js
sub
push
fsubp
ja
dec
mov
mov
iret
orl
outsl
adc
dec
fiadds
and
loop
es
adc
ja
cli
pop
mov
mov
outsl
inc
fisttpl
xchg
das
inc
jg
lret
jg
aas
pop
mov
mov
cmpsl
push
aas
jo
sbb
jge
or
and
int3
fstps
ja
ds
dec
adc
loopne
sbb
and
fimull
test
lock
inc
leave
test
cmpsb
pusha
icebp
inc
push
mov
test
and
adc
sbb
shl
ja
int
or
lock
pop
enter
sbb
test
add
dec
cltd
xchg
out
stos
outsl
movsb
lcall
mov
imul
mov
inc
xchg
fnstsw
cmp
inc
call
mov
push
jae
add
jl
or
inc
pop
mov
xchg
or
dec
fs
xchg
in
jecxz
ljmp
rcll
jecxz
add
scas
cmp
mov
mov
sbbl
ss
xchg
mov
mov
lds
jg
int
push
mov
cmpb
jne
js
stos
aad
cmp
divb
jle
std
push
mov
push
xlat
out
dec
adc
aas
pop
sbb
or
popf
mov
test
jne
xorb
test
loopne
xchg
mov
jg
pop
ja
int
pop
dec
int3
sub
pop
pushf
mov
sbb
push
in
jecxz,pt
in
sub
sbb
fwait
push
sbb
arpl
add
push
jmp
sub
sub
or
sub
mov
push
imul
scas
push
mov
pop
movl
aam
cs
les
test
or
insl
std
sbb
insl
mov
inc
gs
mov
scas
rorl
sbb
sbb
push
in
into
out
je
mov
jb
cmp
ja
cmp
sahf
insb
cmc
loope
pop
mov
xor
test
mov
mov
lods
mov
add
movb
cmp
scas
jp
adc
sub
stc
xchg
out
cli
xlat
or
roll
movsb
sbb
push
das
or
mov
or
pop
scas
adc
pop
rolb
outsl
cld
lret
lret
jne
leave
inc
or
jne
mov
out
add
pop
cmpsb
lret
mov
js
sub
dec
stos
and
notb
xchg
adc
jnp
jle
mov
mov
int
loope
push
jns
cwtl
push
decl
daa
aaa
in
in
push
clc
ja
sbb
cmp
mov
sub
sbb
popa
mov
xorb
push
or
pop
inc
xor
pushf
mov
in
sarl
popa
lahf
sbb
std
mov
icebp
out
or
stos
dec
js
xbegin
pop
adcb
pop
cmp
sub
negl
sub
inc
pop
int3
pop
jg
add
cmp
addb
adc
imul
es
fistpl
scas
sarb
fildl
test
cltd
testl
loop
mov
jmp
sub
decl
daa
enter
stc
shrb
scas
push
inc
lea
cli
enter
pop
mov
std
inc
jae
add
cwtl
dec
movsb
cmc
in
fisubl
mov
cs
xlat
jnp
jecxz
int3
inc
loope
ret
lds
and
cmp
mov
cs
mov
push
cmc
and
mov
outsl
mov
pop
and
mov
push
aas
movsb
xchg
fmull
lds
push
jo
mov
mov
xchg
imulb
jle
mov
aad
lcall
cmc
inc
mov
mov
sbb
dec
ds
fiadds
imul
scas
fnstsw
ss
dec
jae
aad
jbe
add
jbe
outsl
lret
cmc
sub
lods
sub
sub
fsts
push
movsl
out
and
out
insb
or
mov
arpl
div
jns
pop
cmp
jecxz
sti
rorl
outsb
int3
mov
cmp
dec
and
jmp
cmp
add
pop
xchg
icebp
cmpsb
and
cmp
pminub
pop
fstpt
dec
call
or
adc
hlt
jp
cmp
lret
add
jae
loope
push
addl
sbb
lcall
stos
test
mov
stc
in
.byte
movsl
pop
insb
imul
cs
andl
repz
push
scas
lahf
into
pop
jno
out
xor
in
inc
ror
ds
scas
insb
test
dec
outsl
call
out
mov
mov
lahf
out
push
mov
jnp
cs
mov
lcall
int3
cmp
mov
aaa
sahf
test
mov
movsb
stos
cmp
xchg
mov
in
cltd
xorb
shl
dec
jp
daa
and
xchg
lret
sbb
shl
dec
ss
into
int
loope
test
jb
ljmp
pop
mov
or
int
xor
mov
sahf
jg,pt
and
scas
ret
mov
fildll
mov
xchg
pusha
jmp
and
pop
ret
mov
daa
mov
pop
or
mov
js
lahf
cltd
mov
xchg
clc
mov
jl
outsl
addb
add
pop
bound
ret
test
mull
dec
mov
cmpsb
cmpsb
dec
add
ja
and
mov
aam
int3
cmc
filds
sti
sti
pop
add
aaa
xchg
mov
outsl
mov
ds
mov
add
stos
loopne
push
xchg
leave
pop
mov
mov
imul
push
flds
outsb
outsb
mov
inc
pop
and
pop
loop
pop
pop
cmp
push
cld
jmp
ds
xchg
sbb
or
fists
mov
lds
std
mov
mov
mov
mov
out
push
mulb
xchg
mov
sarb
inc
mov
fs
pop
xchg
std
fists
xor
outsb
pop
add
imul
insl
fldenv
adc
mov
sub
int
rol
sub
shr
push
mov
les
push
mov
pop
out
xchg
jmp
mov
in
adc
int
sub
stc
push
pop
pop
rcr
dec
add
mov
in
jecxz
or
sbb
sub
addb
jl
mov
dec
cmp
stos
and
mov
push
imul
in
stc
mov
and
rcrb
mov
cmc
and
fidivs
mov
mov
adc
inc
xlat
addr16
movsb
jae
xlat
push
adc
add
fadd
jmp
jmp
dec
add
insl
mov
mov
enter
xor
jae
jmp
dec
leave
or
imul
gs
and
sbb
adcb
rcll
aas
dec
or
test
loopne
leave
mov
xor
lret
mov
push
hlt
imul
sbb
jmp
dec
push
xor
pop
lods
lret
inc
insl
xor
pop
std
sub
mov
inc
jle
int
cmp
pop
out
sbb
aas
fidivrs
js
and
loopne
addr16
jbe
leave
cld
lods
inc
sbb
lock
mov
sbb
std
in
or
cmc
jl
jo
nop
shr
addl
hlt
push
loop
push
sti
dec
mov
out
repnz
mov
xchg
jl
sub
das
repz
dec
js
aam
ret
dec
rcrl
mov
push
icebp
mov
aad
mov
sbb
jo
in
aad
adc
leave
insl
adc
mov
cmp
lods
jmp
xchg
faddl
shlb
push
jbe
or
jnp
xchg
mov
xlat
xor
or
sub
or
sbb
xlat
arpl
sti
or
pop
movsb
pop
mov
lret
rcll
rcl
jge
cmp
sub
sti
inc
pop
imul
fiadds
xchg
cwtl
mov
movsb
push
push
push
outsl
mov
lock
fdivs
xor
mov
mov
lock
sarb
into
ss
subb
or
pop
mov
jp
push
add
in
fnstcw
sub
pop
stos
dec
fcmovnbe
in
pop
jmp
cmp
sti
cmp
int3
bound
jmp
je
rclb
sbb
rorl
sub
dec
pushf
aaa
inc
mov
push
push
lret
pop
dec
mov
hlt
dec
lret
repz
ret
rorl
test
inc
sbb
jbe
mov
sahf
int3
cmp
out
add
aaa
mov
and
sub
mov
cmp
aad
jge
xchg
mov
or
or
and
aam
xor
clc
adc
sub
cld
syscall
jg
jecxz
outsb
aad
ret
push
imul
push
into
add
shl
fistps
push
pop
dec
mov
push
ficoml
test
movhps
push
lret
data16
rolb
cld
loopne,pn
in
sbb
mov
fucomi
sti
and
les
ds
cmp
js
pop
pop
lea
xchg
stc
sub
inc
mov
mov
mov
add
add
int3
repnz
add
hlt
pop
and
cmpl
push
push
repnz
jnp
in
mov
adc
lods
add
adc
push
mov
bound
nop
jo
sbb
sbb
xor
xor
inc
push
adc
sbbl
shll
shll
cltd
add
arpl
loop
inc
add
xchg
sbb
ret
pop
push
or
sub
inc
xchg
dec
xchg
xchg
popa
lods
push
pop
hlt
lret
scas
xlat
addr16
xchg
push
pop
shll
or
xchg
fimull
daa
jg
jbe
in
aam
cmp
test
mov
jp
cmp
xchg
ds
js
add
mov
out
pop
add
sarl
shl
stos
cmp
loop
xchg
sbb
cwtl
in
movsl
push
loop
or
lret
into
and
arpl
lret
mov
pop
add
adc
jmp
mov
int3
inc
jle
outsb
adc
aad
or
fwait
add
pushf
inc
pop
leave
push
jl
push
cld
or
nop
dec
in
jbe
jmp
mov
leave
aaa
inc
xchg
imul
pusha
arpl
dec
mov
jno
xor
xchg
inc
pop
xchg
shll
js
mov
rolb
pusha
repz
add
addr16
xchg
out
pop
or
lret
in
rorl
cmc
or
xor
jo
out
mov
sub
push
jo
scas
nop
lret
stc
js
jl
shll
jp
cmp
fstpt
loopne
aad
lock
stos
enter
cltd
pushf
or
cmp
cld
xchg
fisttpl
pop
jge
imul
xchg
mov
mov
lea
lret
mov
add
lea
scas
jecxz
loopne
and
pusha
gs
sar
pop
ljmp
cld
mov
cmpsb
mov
adc
push
bnd
add
cmc
jno
mov
gs
jl
push
sub
sub
mov
mov
es
stos
out
insb
adc
and
dec
jmp
xor
mov
push
outsl
mov
lcall
clc
int3
cs
xchg
adc
xlat
mov
test
movsl
fstpt
cmovne
aam
add
push
cmp
dec
push
jp
jl
xor
pop
test
outsl
and
sbb
pop
adc
pop
adc
scas
fsubp
ret
mov
int3
or
sahf
je
ds
mov
xlat
in
icebp
dec
mov
xlat
out
fdivs
out
sbb
mov
xor
add
ret
cmp
loope
movsb
add
fsubs
roll
push
inc
in
pop
push
lret
xor
dec
jnp
rcrl
cmp
or
dec
mov
aam
mov
jg
or
xchg
xchg
cli
pop
inc
jbe
sti
sbb
insl
stos
push
pushf
and
mov
pusha
mov
test
xchg
pushf
mov
xor
js
xchg
fidivs
and
mov
mov
enter
mov
mov
sbb
test
mov
xchg
sub
xbegin
out
xor
pop
es
cmpsl
or
std
mov
cwtl
sbb
lahf
rclb
xchg
imul
add
test
mov
sub
cs
sbb
leave
jge
adc
aaa
shll
mov
lcall
adc
in
sub
and
sub
test
cmp
jnp
xor
inc
mov
clc
test
addr16
data16
out
int
lret
cltd
dec
xchg
push
dec
and
inc
ss
dec
xlat
mov
adc
pop
and
bound
ss
xchg
ret
pop
mov
cmp
addr16
rorb
mov
sti
popa
adc
lcall
and
outsb
add
fnsave
lcall
fucomp
dec
inc
imul
rorb
adc
push
jnp
ljmp
mov
sub
jg
enter
lds
pop
cmpb
xlat
shlb
cwtl
popf
sbb
lods
test
inc
ret
lahf
xchg
xchg
pop
movl
pop
or
mov
lret
scas
mov
mov
jg
push
rcll
aam
fdivrl
iret
and
frstor
xchg
mov
dec
mov
xor
lds
sbb
cmc
insb
shlb
adc
jecxz
aam
or
xor
sbb
inc
int3
xchg
out
push
mov
pop
lea
fs
sbb
addb
and
push
cs
jno
test
movsb
mov
scas
and
cwtl
mov
adc
jge
add
in
add
out
popa
loopne
int
data16
or
ljmp
iret
jge
push
jecxz
push
xor
cld
cs
mov
lea
cmp
movsb
in
jmp
pusha
jp
lock
lret
xchg
aas
mov
int3
xor
out
dec
stos
inc
adc
scas
lea
in
inc
jl
lea
push
call
std
cmpsb
xor
sub
divb
dec
stos
test
das
loopne
pop
cmp
pop
mov
lea
iret
ja
mov
xor
insl
mov
fdivrl
jns
inc
std
shlb
inc
leave
mov
sbb
xchg
inc
test
mov
les
orl
loopne
test
dec
jg
cld
imul
pop
out
rclb
lock
call
jp
pop
sti
iret
lods
lret
ja
push
and
adc
fcoms
push
int3
pop
idiv
aaa
and
fldt
and
imul
pusha
mov
or
cli
push
xchg
dec
in
jecxz
xchg
fldenv
dec
rorl
pop
inc
out
mov
xchg
cli
test
sarb
mov
aaa
divl
cmc
jle
mov
es
pop
outsl
cmp
inc
lds
add
inc
jp
outsl
fcoml
xlat
xor
push
rcll
push
loop
push
pop
decl
inc
in
add
mov
adc
xor
int
inc
jns
enter
leave
int3
xchg
fisttpll
adc
dec
lret
fdivrs
and
push
cmpl
inc
mov
xor
les
inc
dec
jge
xlat
adc
sub
jmp
xchg
sbb
mov
sbb
mov
adc
call
cmpsb
or
mov
or
out
adc
rorb
dec
push
js
lret
shll
add
shlb
adc
sbb
mov
push
cmpsl
mov
or
test
xchg
fdivp
sbb
jne
xchg
daa
inc
jb
cltd
jb
mov
stc
test
dec
and
mov
ret
xchg
icebp
sub
jae
sub
test
shufps
fs
enter
lock
cltd
scas
inc
pop
pop
fs
xor
pop
jle
lods
sbb
aaa
fstps
dec
fwait
sbb
push
dec
repz
jmp
cwtl
sub
push
cltd
push
xchg
cmc
xchg
insl
or
cmpsb
arpl
out
cmp
lds
mov
int3
cmp
inc
mov
mov
movsb
pushl
test
pusha
lea
mov
pop
ret
out
arpl
clc
shll
hlt
cld
pop
in
push
cs
xchg
jno
cltd
clc
mov
inc
pop
xor
rcrb
icebp
sahf
in
imull
shl
sti
mov
jle
mov
neg
les
mov
mov
jge
scas
cld
cmp
fwait
gs
into
fbld
pop
loopne
lret
jno
inc
in
mov
sub
push
test
aas
lahf
pop
out
add
arpl
aam
and
int3
ljmp
cmp
sbb
js
std
mov
fnstenv
xchg
scas
js
add
adc
push
mov
push
dec
iret
mov
xchg
mov
and
enter
and
ljmp
scas
rolb
sbb
fsubl
and
popa
mov
mov
pop
adc
out
or
sbb
pop
insb
inc
ljmp
cs
mov
dec
pop
test
push
jbe
cltd
fists
sub
and
loope
push
dec
les
mov
sub
inc
sti
lret
mov
in
sbb
mov
jmp
or
mov
mov
push
popf
sbb
xchg
or
xor
push
jmp
cli
ljmp
nop
pop
int3
les
test
push
rcrl
add
lods
stc
or
jl
xchg
xor
aaa
adc
cmp
mov
lahf
pop
mov
add
push
and
imul
add
jno
push
and
call
imul
xchg
xchg
adc
js
mov
idivl
jle
cld
and
sub
and
mov
movsl
sub
xchg
enter
mov
dec
aas
insl
mov
enter
aam
mov
inc
test
cltd
pop
in
je
lods
orb
int3
mov
es
mov
cli
lods
pop
rcr
xchg
and
xchg
sahf
xchg
cmpsb
andl
cmp
movsb
sbb
and
out
xor
inc
pop
add
rcrb
push
xor
cmp
inc
jl
das
xor
dec
mov
pop
and
mov
xchg
inc
pop
mov
popf
mov
mov
aaa
and
ljmp
in
pop
outsl
pinsrw
aaa
daa
jmp
mov
sub
mov
xor
sub
dec
cmpsb
sbb
xchg
icebp
std
mov
mov
sub
xorl
xor
xor
sub
scas
jmp
and
sub
cltd
inc
fwait
push
pop
dec
jns
xor
sbb
daa
mov
pop
add
add
stc
xor
stos
jmp
mov
xchg
push
stos
inc
clc
test
aad
jl
jno
jp
fstpt
xchg
mov
push
inc
fnstsw
mov
pop
test
jno
je
inc
out
mov
sahf
repnz
add
js
mov
movsl
test
lret
mov
mov
xor
mov
addl
pop
out
fwait
imul
lea
in
xchg
mov
scas
aam
call
inc
sbb
xchg
jmp
inc
push
imul
xchg
iret
in
sbb
movl
pop
inc
fwait
loope
sub
sub
lds
fs
outsl
mov
mov
fstpl
cmpsb
sbb
dec
push
inc
lock
pop
sub
mov
or
test
add
test
and
adc
aaa
test
cmpsl
lahf
aad
lret
push
inc
in
ja
rcll
clc
sbb
loop
movss
sbb
std
and
rcrb
mov
incb
jae
les
adcb
jns
dec
fsubrs
xor
das
jle
ret
pop
mov
push
fistpl
fdivl
hlt
pop
sub
fcomp
push
stos
hlt
inc
push
mov
lret
lods
stos
sub
rorb
pop
or
cwtl
xor
xchg
push
in
insl
test
pop
mov
sub
sbb
jns
jnp
dec
mov
scas
je
push
mov
mov
mov
add
ret
addl
mov
jl
sbb
and
push
fildll
mov
out
and
add
xlat
xor
cmpsl
cmp
add
inc
insb
mov
push
adc
dec
stos
xchg
mov
repnz
inc
dec
pop
cld
cmpsl
imull
add
fcompl
xchg
push
jbe
ret
sub
jg
test
loop
xchg
adc
rclb
jns
jge
xor
add
sub
lcall
popf
xchg
add
ret
lret
aas
push
out
out
lahf
xor
test
xchg
jge
in
mov
or
and
ljmp
mov
push
lock
rolb
aam
dec
popa
shl
mov
jg
divb
pop
mov
dec
clc
loopne
daa
into
jne
dec
dec
stos
sbb
mov
xchg
inc
orl
cmp
mov
mov
cld
adc
lret
jmp
sbb
or
xchg
mov
mov
mov
inc
cmpsb
stc
out
and
push
sub
cmp
and
mov
fyl2xp1
cmp
iret
pop
cmp
push
out
lcall
add
mov
int3
inc
test
xor
sub
and
jbe
aaa
mov
dec
das
jb
les
xchg
xchg
ja
mov
xchg
jmp
cmpsb
bound
sub
mov
push
mov
inc
imulb
aaa
movsl
pop
fs
inc
or
out
call
lahf
and
mov
loop
push
out
sub
test
out
lret
xor
pop
andb
pop
or
data16
pop
mov
fwait
ss
clc
shrd
sarl
les
mov
or
mov
scas
sar
xchg
xchg
dec
ret
sarb
es
sti
jmp
stos
popf
fadd
in
lods
pusha
xchg
lcall
xchg
andl
inc
sub
imul
pop
addl
push
xor
pop
out
cli
cld
aam
cmpsl
mov
inc
imul
clc
adc
shll
add
mov
mull
mov
mov
mov
sub
dec
add
fldcw
mov
jmp
imul
add
fnstsw
loopne
leave
loopne
dec
mov
cld
sahf
imul
es
add
cmp
out
or
pop
sbb
pop
rclb
push
pop
lods
fisubl
out
mov
pop
xlat
bound
in
ja
loopne
lods
in
mov
cmp
mov
gs
xor
xchg
pop
inc
loopne
adc
push
cwtl
sub
cs
sar
jp
movsl
jp
xor
xlat
push
iret
enter
push
xchg
in
mov
mov
fldcw
insl
dec
loop
fidivrs
scas
xchg
dec
imul
pop
ljmp
xchg
sahf
cmp
push
mov
xchg
mov
jae
ret
xchg
stos
sub
jae
es
mov
jns
push
adc
iret
out
mov
push
ljmp
movsb
les
ret
and
xchg
icebp
mov
cmpsb
add
mov
mov
mov
stos
lock
add
push
nop
in
mov
iret
jl
inc
or
into
aad
into
xor
in
cltd
or
push
dec
stos
xchg
or
inc
fadd
mov
pop
xchg
movsl
mov
icebp
shlb
xor
rcrb
out
push
cmp
xorb
adc
mov
push
dec
sbb
imul
or
into
jo
movsb
jo
sub
ss
or
and
es
jge
cmp
pop
push
daa
jae
aas
lret
je
cltd
cmp
insb
andb
sub
or
into
je
mov
lret
pop
imul
sahf
sub
dec
sub
lods
jne
jmp
int
cmpsb
fiadds
jno
iret
mov
push
lcall
push
sbb
push
jae
jnp
stos
lea
pop
xchg
leave
mov
cli
xor
sbb
cmc
scas
mov
popf
sbb
popa
les
fdivs
dec
jg
sbb
movsl
jbe
and
test
mov
push
xchg
fiadds
adc
sbb
sbb
imul
jecxz
icebp
loopne
jae
cmp
xor
xor
add
mov
pop
push
arpl
cmp
cmp
in
aam
iret
lcall
mov
xor
movsb
sub
mov
sbb
push
pop
jne
ja
scas
sti
loopne
cmc
out
jmp
addr16
scas
into
sub
xchg
je
mov
cmp
mov
or
pop
jae
lahf
xor
stos
mov
and
add
es
jne
imul
xchg
arpl
iret
push
or
push
int3
xchg
xchg
aam
cmp
in
sbb
add
jecxz
dec
gs
dec
xchg
add
dec
into
sub
out
out
aad
jae
ret
mov
stc
repnz
xor
mov
loopne
jl
cld
pop
lret
sti
adc
mov
cmp
cwtl
pop
sbb
add
ds
cmpsb
xor
jmp
inc
dec
mov
cmpsl
aam
imul
cltd
mov
sbb
in
loope
push
paddsb
fsubs
insl
sbb
xchg
lods
jle
dec
jb
push
mov
dec
lahf
and
mov
lahf
xor
sbb
ficomps
test
call
enter
aaa
adc
es
pop
sbb
loopne
xlat
and
adcl
jecxz
insl
jmp
mov
mov
fsubr
in
pop
test
icebp
loopne
movsb
jae
sub
clc
inc
push
call
test
repnz
cmc
fstl
scas
xchg
lahf
mov
into
test
inc
jne
ds
in
repnz
stc
mov
and
ss
int3
pop
add
dec
lar
sbb
cmpsl
jmp
lret
xchg
xchg
lahf
jae
mov
fdivrl
jmp
pop
jae
sahf
movd
push
push
loopne
cmpsb
les
aam
adc
in
mov
cmpsb
push
adc
sbb
sub
xor
movsb
movsb
cmpsl
xor
jbe
js
dec
sbb
inc
test
cmp
icebp
and
shlb
lock
sbb
sub
leave
mov
mov
cmp
pop
mov
dec
es
pop
sbb
lods
or
lods
dec
stc
lds
ss
ds
into
xor
in
cli
adc
sbb
inc
mov
push
cmp
aas
lcall
push
gs
jg
jne
inc
fdivr
fcmovne
insl
add
inc
flds
mov
pop
mov
mov
lock
sbb
fst
addb
lock
movl
insb
je
ficomps
pop
lods
pop
in
mov
loopne
sbb
testb
mov
jecxz
xchg
and
adc
inc
mov
ret
mov
imulb
push
enter
or
or
cli
mov
dec
jno
cli
in
push
and
js
jne
and
mov
adc
jp
add
jmp
jecxz
shlb
xchg
inc
stc
xchg
xchg
and
dec
sub
pop
inc
daa
inc
add
push
nop
mov
cmp
imulb
pop
push
xor
shlb
pop
push
inc
and
sbb
and
dec
int
arpl
sub
mov
add
cs
popa
incl
mov
add
xor
clc
fnsave
dec
lds
or
aaa
push
inc
and
fabs
cmpsb
outsl
mov
popa
mov
add
ja
das
adc
stos
test
hlt
ds
jb
int3
xor
mov
insl
mov
insb
mov
cmp
cmp
or
out
jb
jp
xchg
loop
testl
lods
ljmp
ljmp
push
push
cmp
mulb
js
pop
lret
test
fidivs
test
into
test
push
and
movsb
addl
es
ret
shrd
pushf
fwait
ret
mov
fs
and
sub
xchg
inc
test
mov
inc
push
sbb
push
insl
insl
inc
gs
test
aas
cmc
push
loopne
daa
mov
dec
jge
cmp
js
aas
xor
xorb
dec
fcos
cmp
pop
bound
pop
stos
and
insl
dec
push
ret
and
cmpsb
pop
mov
push
pop
jecxz
mov
pop
jle
cli
push
jne
pop
divb
sub
popa
pop
inc
mov
idivl
xor
dec
in
pusha
mov
jl
inc
xchg
jbe
aad
fnsave
inc
in
mov
lahf
sub
mov
mov
push
cld
fldt
xlat
xchg
mov
loope
pop
movb
in
mov
popa
inc
sbb
fcmovb
mov
cmc
dec
fnsave
cmp
inc
cmpsl
xchg
sub
ja
ret
call
ret
insb
pusha
push
pop
pop
lcall
cld
xchg
fs
pop
jne
fisttps
push
data16
dec
int3
sar
mov
xchg
ja
ret
lcall
js
scas
sub
js
adc
icebp
cs
or
pop
mov
fldcw
cwtl
out
dec
mov
xor
dec
xchg
pop
mov
push
adc
hlt
mov
inc
sbb
inc
mov
outsl
add
sbb
sarb
jns
pop
int
dec
test
shll
xor
pop
sbb
or
sub
pop
dec
pop
sub
mov
inc
out
cmpsl
int
push
mov
mov
xor
mov
cmp
mov
std
jecxz
enter
fwait
cli
fcoml
stos
dec
push
jbe
es
xlat
lock
cld
mov
cmp
sbbb
mov
push
xor
mov
push
adc
push
nop
sti
jge
xor
inc
inc
xor
cmp
jb
dec
jbe
lret
or
add
xor
sahf
sahf
jbe
or
daa
sbb
pop
jp
outsb
ss
out
and
out
xor
popa
int3
xor
int3
xchg
push
pop
out
push
pop
outsl
lea
mov
lret
fists
cmp
mov
stos
iret
pop
test
xor
cmp
mov
and
pop
and
mov
pop
jp
enter
adc
push
sbb
bound
bound
stos
push
mov
sbb
mov
cmpsb
sub
data16
dec
sub
mov
popf
jecxz
clc
or
in
add
cmpsb
dec
or
les
int
sbb
hlt
sbb
jbe
leave
cli
sub
gs
es
insb
mov
sti
jb
xor
dec
arpl
fiaddl
xlat
fldcw
or
add
rolb
insl
scas
repnz
pop
cmp
adc
mov
gs
movsb
in
in
or
push
leave
mov
clc
and
into
inc
movsl
xor
or
push
lock
addl
push
insb
imul
cli
push
lods
shrb
in
xchg
mov
pusha
movsb
ret
push
fisttpl
iret
out
dec
lahf
push
inc
aad
ja
fwait
js
leave
push
jno
ja
call
insb
jne
stc
add
xchg
leave
shlb
adc
cltd
nop
dec
shll
xchg
push
mov
cmp
or
dec
adc
xor
sahf
and
jle
sbb
rcl
test
andb
mov
adc
lea
pushw
aaa
xor
mov
int3
cmp
jnp
es
aas
jmp
stos
mov
jmp
add
pop
fucomp
icebp
jae
ret
cwtl
cmc
push
cs
out
leave
and
rcll
inc
xchg
pusha
repz
lcall
push
pop
sahf
jmp
inc
xor
je
mov
or
bound
not
ret
loope
adc
jns
pop
and
adc
mov
aad
mov
scas
add
and
lcall
push
scas
sbb
in
stos
mov
mov
mov
testl
popa
lahf
scas
ss
dec
cmp
loop
sbb
cmp
and
sub
push
jne
and
cmp
js
push
movd
add
mov
xchg
sub
cmp
sbb
loope
lock
stc
call
xor
pop
jae
mov
iret
test
push
lods
fcmovnbe
sub
jge
or
imul
push
shll
jmp
popa
das
adc
cwtl
pop
push
pop
push
add
push
in
lods
xor
lret
outsl
inc
or
lret
jno
sahf
jle
fcmovnb
cltd
int
dec
pop
in
cltd
int
cltd
cmp
push
in
lds
inc
fsubrl
cmp
daa
outsb
imul
cmp
not
mov
out
call
inc
aad
out
pop
jne
es
add
movsb
lret
loopne
lret
xor
iret
rcl
jo
add
xor
adc
mov
mov
fwait
aad
leave
mov
mov
mov
fsub
push
cmp
mov
test
fcmovnu
cs
and
fistl
push
xor
repz
mov
ds
cmc
or
sbb
xor
sub
fwait
lods
cs
jns
je
inc
fsubs
ret
fsubs
movsl
fidivrl
repz
push
mov
adc
insb
fadd
sub
int3
lret
sbb
mov
mov
dec
mov
cmp
das
push
push
sbb
and
test
jb,pt
pop
jnp
imul
into
ret
inc
mov
jecxz
jl
or
nop
pop
sti
cmpsl
adc
push
xor
lea
xor
and
push
arpl
lods
jbe
aam
jp
ret
add
in
sbb
sbb
mov
mov
mov
test
cmc
testb
dec
mov
xchg
ja
arpl
dec
popa
std
and
or
dec
fadds
lds
fsub
fwait
xchg
lods
stos
mov
push
push
pop
push
pop
sbb
out
in
loop
xchg
pop
stos
xor
jbe
jno
jecxz
xor
xor
addb
cltd
mov
aas
and
fidivrs
pop
dec
test
push
pop
adc
jmp
sti
pushw
stc
ret
sbb
xchg
mov
cmp
movsl
jns
cltd
in
es
xchg
call
popf
adc
lcall
dec
int
divb
lret
ljmp
xor
xor
shrb
insl
and
push
out
mov
into
incb
frstor
mov
scas
fisubl
int
dec
pop
push
adc
push
or
mov
rol
pop
adc
lds
cmp
dec
inc
mov
xlat
and
cmpsb
cmp
xor
and
dec
aam
adc
popf
sahf
or
jmp
movsl
push
sahf
in
repnz
test
push
out
xchg
mov
jp
sbb
gs
stos
fdivs
dec
movsl
xor
aad
arpl
xchg
push
push
inc
dec
rcll
test
xchg
pop
xchg
add
movsl
ds
repz
mov
fsubr
mov
ja
pop
daa
sbbb
add
jge
dec
roll
mov
lret
mov
shr
lock
in
fdivrl
inc
adc
fmul
insl
dec
jp
mov
dec
rcll
adc
aam
mov
sbb
mov
inc
or
cwtl
out
add
jle
shrb
aas
sbb
jne
sub
dec
lds
aaa
idivl
inc
ss
inc
pop
mov
mov
insl
lock
xor
cmpl
xchg
mov
cmc
mov
je
sub
dec
mov
nop
inc
and
int3
add
mov
xor
jp
cld
gs
mov
aam
int3
and
mov
mov
mov
mov
imul
insl
and
cltd
pusha
iret
and
cwtl
jg
inc
test
jp
jge
imul
arpl
jmp
stos
add
movsb
addr16
imul
dec
sbb
push
xchg
out
cmp
test
in
and
mov
mov
test
xlat
insl
xor
fwait
dec
mul
scas
dec
mov
ljmp
mov
or
mov
out
mov
pop
test
dec
sbb
ret
xor
mov
test
fldenv
aas
std
push
dec
divl
test
pop
mov
sbb
insb
xchg
pop
ja
mov
jmp
adc
pop
dec
push
mov
fwait
lds
pop
add
mov
xchg
sar
nop
push
lods
sub
push
inc
cli
ret
xchg
inc
and
add
dec
and
sahf
mov
and
cmp
push
and
push
lea
ja
fbld
movsl
xlat
mov
das
sbb
xor
push
add
in
fs
cmp
ljmp
dec
inc
leave
lock
addb
sub
stc
mov
fwait
add
stos
imul
mov
push
call
pushf
scas
jg
mov
pop
popa
stc
gs
add
rolb
loop
adc
push
dec
mov
cld
pop
jmp
xor
std
push
jmp
inc
bound
mov
adc
and
std
ljmp
out
lcall
pop
mov
dec
mul
ret
hlt
orl
or
popf
add
inc
mov
mov
mov
add
aas
or
sbb
stc
push
mov
mov
aam
leave
add
pop
push
mov
inc
outsb
push
xchg
inc
mov
pop
xor
repnz
mov
sub
xorl
and
rolb
cmpsl
fcoml
test
inc
xor
push
mov
idivl
mov
fs
ljmp
loopne
popa
adc
inc
mov
int
adc
pushf
aam
xor
cs
xor
les
popf
clc
fisubs
loop
ja
adc
or
xchg
dec
sbb
xchg
call
aas
add
add
push
in
je
xor
xor
pop
dec
push
mov
call
dec
fwait
enter
xchg
mov
jo
sbb
scas
shrb
or
loope
and
jmp
aaa
sti
pop
mov
sub
ret
aad
out
negl
sti
sti
cwtl
inc
test
and
mov
adc
stc
xlat
imul
mov
lret
push
push
fstl
adc
jne
pop
sub
dec
insb
jge
popf
push
jns
repnz
lcall
clc
inc
jg
jne
xor
data16
out
mov
sti
xorl
inc
mov
pop
push
fdivs
xchg
insl
dec
fdivrs
fs
or
iret
ret
dec
jbe
into
mov
or
fbstp
gs
ret
cmp
cli
les
jno
repnz
test
mov
or
mov
mov
loope
je
add
sub
fisttpll
xchg
cltd
and
arpl
xchg
mov
add
cmpsb
mov
cmp
xchg
mov
arpl
movsl
mov
out
inc
cmpsl
test
fwait
fs
push
enter
in
inc
jecxz
inc
sbb
std
xchg
mov
sbb
dec
movsb
int
sub
xor
mov
inc
inc
je
xchg
add
and
adc
rclb
xchg
js
inc
out
push
pushf
hlt
das
pop
jbe
mov
in
fists
fstpt
add
mov
bound
pop
aam
cmp
jne
sub
mov
mov
mov
pusha
or
xor
fwait
adc
mov
mov
sbb
push
inc
test
jnp
dec
mov
aam
mov
inc
push
dec
mov
loop
push
jp
sti
push
sbbl
nop
or
aad
nop
add
mov
push
pop
nop
addr16
in
aaa
add
sbb
add
fnstcw
mov
js
aad
sub
rorl
push
popa
lock
rolb
sub
out
cs
stos
idiv
ret
repz
minps
js
lret
aas
in
inc
push
mov
sbb
cltd
push
out
jmp
jmp
inc
pop
ds
call
push
inc
xchg
outsb
cmp
insb
jne
pop
and
jb
pusha
ret
dec
lret
inc
cmp
test
fsubr
add
dec
pop
mov
or
cmpsb
fdivs
test
dec
jbe
mov
mov
pcmpgtd
leave
jno
cmp
mov
fildl
jl
or
push
ret
fisubl
sbbb
aam
xchg
lahf
and
cmpsl
lds
and
add
jb
mov
out
lock
and
out
push
cli
adc
dec
sub
pop
push
push
cli
mov
iret
jo
sti
dec
das
rolb
mov
adc
mov
test
mov
inc
daa
xchg
outsb
sahf
aam
pop
add
fwait
test
dec
jae
enter
xchg
sbb
int3
stos
imul
loope
mov
cmp
leave
sarl
push
mov
pop
jb
ss
mov
sbb
inc
lds
add
es
ficoml
cmp
mov
lcall
in
ja
inc
xor
and
adc
push
push
cmpsb
pshufw
icebp
sub
jnp
xchg
sub
in
xchg
or
mov
testb
or
mov
sub
jo
jge
sub
add
cmp
xchg
das
dec
into
into
or
ss
int3
mov
andl
or
or
cmp
jmp
sbb
dec
scas
ljmp
xchg
out
cmp
js
mov
push
lret
fmull
dec
sahf
in
xlat
fcompl
aaa
jnp
call
addps
mov
cmp
xchg
shl
lods
ds
lods
and
inc
out
and
sbb
lcall
enter
loop
in
jb
sub
or
mov
and
in
sbb
cmp
in
dec
or
jecxz
or
cmpsl
cmp
xchg
sbb
dec
loop
sub
mov
jno
adc
clc
outsb
jge
fistpl
xchg
mov
mov
xchg
push
sub
xor
in
xor
mov
mov
inc
inc
bnd
fildl
stc
outsb
xor
pop
pop
pushf
jo
inc
cmpsb
inc
mov
dec
test
aaa
gs
push
shrl
pop
outsl
daa
dec
cmp
jnp
pop
pop
mov
jle
int3
xlat
cmp
lcall
mov
push
ficompl
add
jo
incb
jo
test
jge
repnz
pop
fsubrs
jno
cmp
test
scas
xor
jae
xchg
scas
enter
jp
rcll
das
cmp
lcall
je
fsincos
and
outsl
or
ret
jnp
aad
push
idivl
adc
leave
or
out
in
adc
xchg
test
call
incb
mov
pavgb
xchg
bound
cmp
add
adc
sub
sarl
cmp
mov
sub
xlat
add
sub
pushf
aas
push
push
loop
and
dec
out
cmpsl
inc
dec
stc
inc
aaa
xchg
std
mov
push
xor
insb
xchg
push
mov
adc
add
lods
fs
cmp
jb
push
fcmovb
pop
lahf
jo
mov
das
movsl
inc
fmuls
mov
inc
push
mov
fisubs
add
or
cld
inc
mov
out
add
add
mov
into
xor
lods
push
fnstcw
xor
jecxz
cmp
fsubrs
leave
xlat
inc
in
lahf
testb
inc
movsb
repnz
cmp
mov
or
or
jl
mov
and
sti
jne
xchg
imul
lcall
andps
push
negl
mov
sbb
into
cmp
das
inc
outsb
cmp
es
les
call
and
sub
and
insb
inc
orb
or
pop
test
mov
push
xor
fdivrs
andl
ljmp
pop
jne
xor
xchg
call
pop
aaa
shl
iret
les
lods
mov
dec
push
adc
add
mov
ficompl
jo
fs
jnp
jl
pop
in
adc
push
arpl
imul
push
mov
clc
in
xlat
stos
jns
andl
add
adc
inc
xor
in
mov
data16
int3
ret
in
insb
push
pop
pause
out
outsb
cmp
andps
xchg
daa
out
push
pop
sub
pop
pop
int
push
or
lea
jmp
and
imul
jge
push
cwtl
inc
hlt
or
negb
int3
test
pop
cltd
das
out
fbld
mov
jle
cmp
push
pusha
and
adc
push
pop
sub
xchg
jge
jns
fptan
mov
mov
mov
xchg
loopne
int3
and
push
ljmp
xchg
loopne
stos
mov
xor
jmp
imul
push
add
hlt
enter
sub
test
lret
push
jo
jle
and
sbbl
xchg
pop
jnp
inc
pop
add
mov
cs
rcrl
repz
scas
lea
jno
xchg
mov
push
je
cmpsl
xchg
fsubs
inc
rcl
mov
sub
insb
stc
mov
xchg
sysenter
ret
into
lds
cmp
push
int3
mov
shll
lahf
or
inc
xlat
adc
push
sahf
test
jle
cmpsl
cmp
dec
outsl
pop
mov
dec
enter
xor
jb
cwtl
lods
in
sub
mov
jnp
mov
int3
or
stc
dec
pop
fwait
subb
incb
inc
lds
ds
add
hlt
rcrb
test
and
outsl
pushf
push
aad
mov
stos
arpl
aad
lret
xchg
push
cmp
xorl
mov
xchg
push
pop
aaa
in
sbb
jb
enter
xchg
cmp
push
push
add
lock
jp
scas
std
dec
or
insb
rcrl
aam
mov
adc
jns
shlb
shll
jp
mov
sbb
or
inc
shlb
cmp
xchg
lods
push
xchg
repnz
int
dec
add
hlt
das
adc
xchg
mov
es
mov
jl
test
and
rorl
outsb
stc
cmp
inc
push
leave
dec
lahf
xor
shll
int3
icebp
jnp
mov
imul
loopne
stos
xchg
test
sbb
mov
popa
jae
mov
push
jl
repz
adc
aam
fs
jb
xor
jae
ljmp
cmp
dec
popa
inc
inc
sbb
add
les
xor
fsubrl
add
insl
aas
pushf
prefetch
or
xor
stos
sub
sub
pop
shlb
into
sub
mov
push
and
push
scas
in
insb
into
je
mov
push
push
cmpsb
push
ffree
jae
loopne
cs
fistl
push
sub
xor
dec
aam
je
inc
fmuls
jmp
push
cmp
lds
dec
jo
jg
lahf
add
mov
xchg
mulb
xor
xchg
imul
sub
xor
fprem
xor
pop
or
inc
mov
push
iret
push
jns
pop
inc
adc
inc
xchg
aad
pop
add
cmc
shlb
mov
inc
lock
dec
mull
add
cwtl
cli
daa
shlb
mov
add
pop
pop
or
add
insb
dec
imul
add
fcmove
inc
test
andb
and
jb
push
xchg
xchg
cld
xchg
dec
or
jo
int3
sbb
cli
adc
subb
dec
jmp
sahf
cli
into
pop
repnz
jbe
or
push
jo
jecxz
mov
fisubrl
lods
fadd
sbb
add
inc
daa
push
mov
int3
xchg
cwtl
xchg
push
add
cmp
jp
ss
and
data16
adc
dec
xlat
stos
outsl
pop
addr16
adc
pop
out
ljmp
outsb
or
push
jg
push
mov
jg
fisttpll
out
mov
cmc
sub
adc
push
push
pushf
cwtl
xchg
mov
out
jg
adc
mov
fwait
nop
fwait
push
jmp
sahf
mov
or
push
stos
sub
nop
push
aad
push
jl
test
paddusb
xor
cmp
repz
daa
data16
pop
xchg
out
test
test
jbe
ja
add
jecxz
shrb
in
push
lods
fstpt
lods
mov
or
mov
aas
mov
hlt
inc
sbb
jae
inc
adc
fsts
add
jmp
mov
jno
ja
arpl
mov
repz
xchg
je
push
jae
cmp
add
xor
fadd
jno
cltd
or
cld
ficoml
rorl
cmp
hlt
xor
or
jbe
sub
and
lret
scas
popa
repz
adc
jmp
lds
std
imul
xor
movsb
xor
imul
ja
insb
lea
imul
mov
ret
mov
fdivs
xchg
and
fwait
xchg
inc
pushf
jge
lods
in
insl
xchg
or
outsb
jg
mov
or
mov
sbb
inc
dec
inc
ja
lods
add
popf
and
loope
in
cmpsb
jo
imulb
add
or
fstpt
enter
add
xor
repnz
mov
leave
sbb
aas
mov
fstpt
inc
mov
mov
loope
mov
pop
loop
cmp
dec
and
push
xchg
jnp
or
incb
data16
mov
leave
repz
pop
adc
push
add
fidivs
xchg
fadds
jno
icebp
and
add
addb
hlt
jp
dec
es
add
fmull
adc
mov
scas
sbb
cmc
inc
dec
sbb
cwtl
or
adc
cld
lret
push
dec
inc
jle
dec
and
jo
dec
adc
push
sbb
lahf
pop
scas
int3
mov
scas
jno
sub
stc
adc
in
add
out
sub
sub
mov
mov
push
inc
cmp
jnp
cli
jg
xchg
mov
repz
add
int
ljmp
xor
scas
ljmp
loope
pop
fdivr
cmp
push
scas
xor
mov
and
inc
lock
out
sub
pop
inc
shrl
add
sub
sbb
int3
rol
xchg
mov
sub
movsb
aad
adc
repnz
rorl
lods
add
lret
and
jmp
jno
fsubrl
shll
pop
add
jne
aam
jmp
mov
cltd
mov
lret
add
mov
cs
aaa
ljmp
lea
gs
inc
loopne
push
jae
test
ja
inc
clc
cmp
adc
sub
cmc
dec
cmp
push
push
xor
in
hlt
fcompl
adc
and
ret
ds
out
fadds
dec
mov
mov
mov
mov
mov
inc
stos
movsl
insb
jl
xchg
pop
inc
xchg
push
cmpsl
add
adc
cmp
or
mov
inc
push
add
push
mov
mov
test
in
enter
push
sbb
rcr
shll
add
fnstenv
shl
shrl
movl
xor
into
add
jl
xchg
test
scas
sub
push
mov
int
pop
fs
mov
push
pop
outsl
ds
rorb
fwait
push
and
and
push
sub
jle
gs
popa
sub
xchg
xor
add
jb
or
orb
std
dec
loopne
lahf
or
setne
leave
pushl
mov
mov
fs
sbb
mov
scas
cmpsl
cs
dec
dec
in
sti
test
std
div
inc
sti
enter
xchg
lea
pop
cmp
mov
cmp
pop
cmp
jp
adc
xchg
sbb
lods
and
add
push
lcall
cmp
popa
into
lods
xor
cmc
xchg
add
mov
mov
jl
mov
outsl
and
mov
adc
adc
mov
insb
and
subl
cmc
aam
movsb
shrl
push
jno
mov
aaa
push
cmpb
popf
sbb
subl
mov
lret
inc
mov
cmp
lods
imul
jp
out
push
add
fldcw
pop
test
cmp
addb
test
popa
sti
pushf
jp
das
stos
adc
cli
movsl
hlt
sub
std
in
push
adc
test
push
add
push
loope
mov
out
xchg
out
cmp
das
lret
xchg
mov
or
testl
repz
mov
leave
outsb
ja
lods
or
idivb
enter
decb
add
roll
inc
cmpsl
inc
jmp
jmp
dec
fdivl
add
pop
fs
ja
aam
pop
mov
sub
sbb
les
popa
push
jmp
cwtl
jo
or
js
iret
faddl
pop
movb
mov
push
int3
fdiv
dec
aas
mov
addr16
push
enter
lods
stos
dec
iret
mov
jne
ds
sahf
jmp
sbb
loopne
jne
jo
mov
jo
mov
pop
movsl
mov
jle
push
add
mov
arpl
bound
or
inc
sarb
insb
dec
orb
xchg
adc
and
xchg
xor
adc
pop
xor
pop
ret
inc
dec
dec
lods
pop
ret
and
push
lahf
cmp
jl
sbb
cmp
ja
jmp
sbb
push
lods
sbb
cmp
jecxz
pusha
aaa
sub
push
js
fs
mov
or
sahf
cli
sub
push
dec
mull
mov
stc
shll
int
mov
and
xchg
sbb
dec
cmp
enter
pop
lea
cmp
dec
and
fistl
mov
fld
pop
xor
and
in
outsb
inc
push
pop
repz
pop
adc
repnz
mov
inc
push
sub
test
mov
lds
lret
maxps
movsb
xor
mov
ffreep
dec
xchg
xor
scas
mov
push
mov
or
test
stc
test
pop
aas
outsb
push
or
push
and
lret
sbb
cld
out
cmpsb
in
pop
jno
pop
inc
mov
or
mov
xchg
jg
inc
or
xchg
or
pop
sub
sub
push
aad
bound
push
push
dec
push
push
inc
inc
add
jg
js
cmc
mov
sub
sbbb
lcall
jno
jmp
cmc
inc
cmp
mov
stos
dec
xchg
pop
lods
push
addb
push
int3
add
push
les
cltd
rcll
cwtl
cmp
mov
in
mov
sbb
inc
pop
ret
xor
cwtl
xchg
in
fsubs
push
lods
popf
sub
fwait
xor
push
mov
xchg
adc
scas
add
xchg
add
lcall
pop
lret
icebp
aad
fwait
testl
out
out
outsl
sbb
popa
xor
fstl
adc
push
dec
jmp
pop
dec
mov
clc
xor
or
mov
mov
add
into
or
adc
inc
cmp
pusha
mov
roll
push
sub
push
mov
test
stc
push
jns
push
aaa
shrl
shll
out
mov
sbb
jbe
loop
jbe
out
push
fs
sub
sub
adcl
inc
sub
sub
mov
gs
cmpsl
mov
ffreep
mov
sbb
jge
xchg
hlt
pop
push
data16
push
add
pop
jae
mov
cltd
das
pop
rcrl
pop
or
sbb
mov
and
pop
out
pop
jle
mov
or
xchg
shrb
adc
pop
xchg
xchg
xor
lret
xor
comiss
and
mov
lcall
clc
clc
jo
out
fimuls
dec
popl
into
mov
push
fistpll
add
in
lods
lret
xchg
negl
and
movsl
in
sbb
ret
jecxz
in
mov
mov
sub
mov
jnp
or
cmp
lahf
es
test
adc
fsubrp
xorl
jbe
clc
jge
orb
mov
mov
inc
mov
xchg
xlat
mov
std
cmp
pop
les
ljmp
filds
cmp
into
push
outsl
adc
es
aas
js
test
cmpsb
xchg
jnp
cmpsb
or
and
mov
arpl
jecxz
adc
xorl
fwait
and
adc
mov
movsl
fwait
mov
cmpsl
pop
cmp
clc
in
iret
pop
jne
xchg
mov
hlt
add
icebp
mov
hlt
mov
sbb
fdivrs
scas
pushf
push
sbb
je
scas
add
popa
sbb
xor
and
mov
int3
and
addr16
daa
cltd
fstl
lods
outsl
push
pop
adc
into
ja
popf
dec
aas
inc
dec
out
mov
cs
rol
mov
sub
mov
sub
lea
stos
push
inc
imul
gs
mov
fs
fldt
andl
ja
pop
fistl
jmp
shrl
or
repnz
repz
jmp
inc
stos
dec
dec
sarb
mov
lds
pushf
and
call
test
imul
sub
or
mov
xor
cmp
inc
test
ror
jmp
jno
or
or
test
xor
arpl
dec
mov
adcl
shll
daa
sahf
ja
mov
ljmp
in
pop
mov
jnp
xor
arpl
adc
pop
test
push
mov
xor
packssdw
xchg
xchg
push
inc
std
fadds
stc
dec
sub
lods
lods
mov
mov
inc
data16
push
fs
bnd
pop
add
addr16
aam
test
adc
mov
adc
es
in
cmp
lahf
add
jnp
dec
push
inc
popf
push
mov
mov
dec
and
fwait
in
xchg
test
push
push
and
shrb
outsb
inc
jne
add
add
jno
imul
jne
mov
xchg
pop
xchg
aam
fs
int3
pop
mov
fdivrp
pop
push
insb
push
notl
mov
xor
shl
push
push
xchg
ficompl
iret
fisubs
xchg
into
inc
jnp
xchg
subb
je
ja
jge
out
andb
push
push
xchg
mov
into
jecxz
or
sbb
and
add
hlt
lds
lea
in
cmp
xchg
sub
out
icebp
mov
negb
cmp
push
ficompl
push
or
xchg
inc
in
ljmp
scas
pop
ds
jmp
movsl
or
hlt
aas
movsl
das
mov
cld
mov
pop
mov
mov
cmpl
sbb
and
dec
es
jae
ss
out
push
out
jae
outsb
orb
inc
dec
das
add
mov
pop
stos
push
sbb
out
nop
push
pop
stos
push
stos
add
mov
addr16
sahf
out
outsl
sbb
sub
mov
add
pop
jge
shr
cmpsb
mov
sub
andb
push
jge
dec
cmp
and
lods
mov
dec
sub
lret
adc
dec
cmpsl
stos
adcb
push
bound
cmp
or
fistpll
testb
test
imul
xor
cmc
movnti
addr16
jg
insl
test
fnstsw
mov
push
daa
pop
mov
mov
add
and
push
jbe
sbb
add
mov
jo
mov
jns
lahf
ds
xlat
inc
mov
jo
outsb
mov
inc
mov
lea
pop
adcb
mov
jmp
xor
fdivr
cmp
fs
mov
enter
sub
pop
mov
sti
dec
mov
call
insl
sbb
test
cwtl
ret
xor
cmp
aad
ror
mov
and
test
stos
shll
mov
jo
push
cwtl
mov
xchg
arpl
push
int
adc
fldt
xchg
mov
cmp
jbe
orl
mov
shr
mov
out
mov
es
jp
cmp
jmpw
or
xchg
cli
jo
or
idivl
xlat
call
jo
mov
xchg
dec
sub
adc
mov
dec
xchg
sbb
call
repnz
lret
add
and
xor
mov
or
fisttps
push
jns
pop
jmp
and
dec
jecxz
shrl
jb
xlat
outsl
out
push
stc
xchg
popf
adc
dec
repnz
dec
dec
or
movl
bound
imulb
es
jnp
cltd
push
and
ret
push
daa
andb
bound
or
outsl
aaa
inc
call
inc
jo
mov
fstps
xchg
mov
xor
lcall
out
add
push
pop
dec
mov
xor
push
jmp
jle
loope
fbld
sbb
xchg
sbb
xchg
das
cmp
int
and
outsb
addl
inc
and
push
icebp
inc
rcll
aad
fiadds
shrb
lea
xor
test
cli
or
pop
jnp
cmp
sbb
cltd
xchg
pop
jle
roll
flds
jne
push
push
mov
pop
mov
call
aad
mov
popf
ficoml
xchg
popa
clc
ss
sub
insl
push
xor
pop
shl
shll
mov
cmc
scas
adc
inc
movsl
into
insl
jbe
insb
sbb
out
shrb
add
lds
outsb
dec
outsl
pop
outsb
mov
scas
mov
in
add
sahf
nop
sub
shl
sbb
xchg
in
cmpsb
adc
xchg
stc
dec
xlat
add
inc
in
loop
and
cmc
jmp
cmp
lock
mov
lds
in
aaa
shlb
rorl
mov
fwait
mov
cli
cld
inc
fiadds
cmp
out
jo
jp
orl
cmp
jne
in
cmpsb
inc
xchg
mov
and
fldz
push
mov
sbb
or
sbb
insl
sub
ret
mov
adc
xchg
or
pop
xor
adc
sbb
and
inc
sar
push
arpl
cmpsb
jb
or
push
inc
or
mov
std
xchg
sub
cmpsb
add
xchg
mov
xor
jmp
pop
icebp
inc
push
jge
insl
jp
popf
bound
mov
adc
call
xor
xchg
xor
jge
fisubl
fdivrp
leave
mov
mov
adc
movsb
jns
adc
int
xchg
inc
mov
movsl
sub
jl
xchg
cmpsb
inc
sahf
inc
jns
sbb
mov
cmp
jl
jae
daa
dec
dec
dec
ret
xor
lds
mov
orb
mov
sarl
and
jbe
clc
sbb
sub
or
push
dec
or
jnp
jl
add
sbb
sbb
aam
jo
shll
or
scas
xchg
popa
cmp
hlt
xor
into
in
rcrl
popa
push
pop
inc
fstps
out
cmc
xchg
jge
iret
mov
jg
shlb
icebp
add
mov
fsubl
lcall
out
mov
xchg
imul
xor
lods
push
jo
push
fldt
mov
incb
aad
cmp
mov
jp
inc
sbb
test
and
mov
lea
mov
js
pusha
jg
sbb
movsl
les
pop
popa
or
test
inc
adc
popa
decl
lahf
imul
clc
mov
insb
imul
negb
insb
xchg
jnp
out
add
sub
loope
idiv
fistl
or
rcrb
mov
jmp
dec
jmp
add
push
push
test
or
push
sbb
test
shll
outsl
mov
sub
fstps
shlb
mov
pop
loop
nop
sbb
jbe
dec
jle
dec
inc
shr
xchg
bound
pop
mov
in
scas
pop
push
jl
aaa
loopne
adc
in
and
gs
rorb
cmp
xchg
and
hlt
sbb
lahf
cmp
jp
or
inc
mov
sub
push
shl
push
ljmp
mov
daa
dec
addl
cmpl
stc
mov
push
movsb
inc
mov
rorb
shll
in
push
out
movsb
jg
imul
mov
jge
scas
push
jb
dec
jmp
mov
sbb
mov
enter
push
jbe
or
mov
movsb
pop
stos
mov
xchg
popf
xchg
cmc
rcrb
clc
mov
jne
test
or
inc
mov
pop
out
movsl
mov
jp
mov
int
xlat
cmpsb
sub
adcb
test
scas
imul
test
sub
inc
pop
and
xchg
arpl
jo
xchg
jnp
jl
mov
fmulp
cmp
or
xchg
and
inc
push
sbbb
and
pop
lret
fucomp
aas
mov
push
adc
cmp
adc
mov
je
jge
push
lock
sub
shrl
xor
mov
push
cmp
cmc
sub
addl
adc
dec
in
mov
iret
xchg
outsl
cmp
and
sbb
loope
mov
cltd
inc
mov
mov
push
fildll
leave
out
xor
sub
insl
cld
push
mov
stos
cmp
mov
loop
dec
xlat
mov
dec
cli
jge
add
adc
add
mov
movsb
pop
mov
stc
or
adc
sbbl
stos
mov
pop
mov
les
cltd
xchg
cmpsb
cmc
dec
lret
jmp
rcl
jns
push
pop
push
rcll
bound
in
and
jo
jno
cmp
subl
pop
lret
pop
sti
pop
je
test
adc
gs
pop
inc
leave
insl
cld
push
mov
cvtps2pd
mov
out
or
mov
mov
push
xor
cmp
sbbl
adc
movsb
lds
sub
xor
dec
xchg
inc
cltd
mov
inc
or
sub
movsb
cltd
mov
push
xor
cltd
and
sbbl
pop
shll
daa
jg
mov
loopne
lea
xchg
sbbl
push
xchg
push
cmpsl
mov
dec
sti
into
inc
ljmp
cmpb
sbb
movsl
jmp
jo
sahf
movsb
test
mov
ljmp
xor
add
insb
mov
sub
loopne
jle
std
push
test
push
imul
mov
xor
jns
jmp
inc
sbb
and
push
sub
inc
sbb
in
mov
dec
movsl
lahf
mov
shrl
xor
cmp
jo
fistps
into
cs
lea
popa
jmp
in
pop
repnz
jne
inc
jmp
and
ja
xor
jg
adcb
shl
cmp
sar
ret
push
inc
adcl
push
add
cmp
mull
mov
push
aas
push
mov
xchg
sub
jo
and
clc
add
xor
addr16
and
adc
xor
mov
and
rcrl
pop
cmc
stc
lock
call
or
push
xchg
mov
aaa
inc
cmp
sub
insl
lahf
and
out
or
pop
xchg
inc
inc
cli
mov
mov
std
ss
insl
aaa
inc
imul
aad
sbb
push
push
push
daa
or
rcrb
mov
test
in
cmp
mov
psubusw
pop
outsl
sub
stc
aad
inc
pop
mov
pop
hlt
stos
ljmp
in
dec
iret
mov
mov
imul
mov
out
mov
inc
sarl
xlat
addl
fiaddl
pop
add
mov
sub
xor
cld
inc
inc
xor
and
mov
aad
sub
mov
sahf
subb
mov
push
mov
decb
jge
movl
orb
repz
lahf
mov
push
sbb
mov
mov
push
dec
lea
arpl
addb
es
jno
mov
xchg
push
xchg
loop
pop
pop
sahf
and
push
leave
pop
add
pop
xchg
pop
loope
and
stos
scas
leave
into
and
mov
lret
inc
inc
push
fcmovbe
mov
sub
push
cmp
xchg
mov
rcrb
xor
call
sub
mov
pop
bound
lcall
aad
call
cmp
ds
pop
add
cmp
dec
add
lret
jbe
and
cld
clc
push
push
aaa
movsl
add
neg
and
lret
insb
xchg
xchg
fwait
ret
push
int
popf
sub
das
inc
sahf
and
out
rorl
and
or
lret
jno
testl
or
xchg
jae
fistpl
pop
fsts
mov
sub
mov
outsl
jbe
rcrb
push
xor
jg
adc
push
xchg
xchg
push
cmp
addr16
and
aad
sbb
jle
ret
ja
iret
repz
lahf
push
mov
inc
or
stos
adc
cld
inc
mov
jne
fimuls
rolb
scas
dec
lahf
cmpb
sub
mov
or
arpl
int
pop
xor
jne
mov
jbe
sbb
stos
out
fs
jae
push
es
xchg
mov
lods
mov
cmp
roll
pop
mov
rorl
xchg
outsb
int
out
jo
inc
adc
mov
push
mov
fistpl
into
cmp
roll
pop
stos
mov
mov
xchg
int3
std
cmpsl
aad
icebp
rcr
xchg
jno
ljmp
daa
lds
jecxz
mov
rcrb
and
pop
jb
fisttps
xorb
dec
push
push
pop
das
sub
sub
sti
xchg
sub
pushf
aad
ss
aam
pop
or
leave
into
push
xchg
test
push
leave
sbb
sarb
xchg
or
mov
mov
insb
push
cli
aas
out
ljmp
cmpl
mov
xor
or
xchg
adc
mov
movsb
and
imul
clc
xor
pop
sbb
jmp
clc
dec
pop
cli
mov
add
pop
sahf
scas
das
mov
jle
aam
mov
mov
popf
mov
pop
nop
cmpsl
xchg
cmp
jmp
gs
sbb
lods
jb
jp
mov
pop
or
scas
test
fsubs
lods
add
jno
adc
mov
inc
push
ficoms
sbb
cmp
test
pop
inc
stos
mov
scas
mov
xorb
adc
adc
icebp
xor
pusha
or
xor
jmp
test
mov
cmpsl
jmp
ljmp
xor
or
and
jbe
add
ss
popl
addr16
in
stos
adc
clc
or
shll
int
movsl
out
xor
pushl
insb
jp
sti
lods
je
xchg
mov
shll
daa
std
mov
adc
mov
ds
sub
cld
sub
shrl
xchg
adc
iret
sbb
sarb
das
pop
pop
out
mov
es
leave
adc
xor
sbb
pop
sbb
or
movsb
clc
push
mov
mov
pop
push
xchg
push
push
repz
push
pop
adc
dec
pop
and
xlat
push
loop
insl
jb
ds
test
mov
sbb
mov
jo
daa
jg
mov
repnz
addb
enter
or
jne
aas
pushw
sbb
std
test
adc
cmpsb
push
ljmp
or
push
mulb
lods
call
ss
enter
jmp
std
mov
scas
mov
inc
push
and
jne
inc
xchg
inc
shrb
cltd
scas
popf
cmp
scas
shrb
lret
cmc
daa
loop
inc
sub
cmp
mov
jb
insb
ret
adc
outsl
out
lods
call
ja
aas
out
pop
rolb
adcl
in
push
insb
cmp
pop
dec
xchg
jns
hlt
movb
fnstsw
mov
adc
iret
sub
adc
addr16
lea
stos
push
push
xchg
aad
shrb
aas
movb
dec
mov
sub
das
imulb
ret
lcall
sbbb
insb
jbe
pushf
aas
xor
outsl
mov
xor
repnz
sbb
faddl
pop
orb
mov
adc
or
in
or
inc
orb
sbb
cmp
pushf
xor
xor
pop
sub
fimuls
int
sahf
cmovne
sub
fldl
into
push
or
and
lds
icebp
cs
xchg
loopne
sbb
dec
leave
adc
int3
sub
popa
in
cmpsl
fldl
and
pop
fmull
pop
xchg
pop
insb
sbb
xchg
jns
and
xchg
ret
push
aaa
imul
push
lret
or
push
xchg
pop
aam
pop
js
out
lds
mov
or
cmpsb
mov
jl
add
mov
xchg
sub
jne,pt
add
scas
sbb
mov
fadd
fdivl
leave
mov
or
ss
adc
mov
dec
jo
push
jp
push
inc
inc
pop
fs
inc
setg
jo
push
jg
xchg
test
mov
jmp
xlat
xchg
idivl
cmp
and
mov
in
mov
jle
js
mov
imul
aas
dec
repz
negb
movsl
mov
jle
add
sbb
or
test
in
call
sbb
mov
pusha
pop
or
ds
lret
xor
ficompl
pop
cmp
mov
adcl
mov
leave
dec
fmul
in
push
jmp
sbb
sbb
push
ror
mov
lods
aaa
loop
pop
mov
inc
dec
pop
ret
ret
in
push
or
mov
sub
dec
iret
rclb
push
xor
mov
push
in
xchg
aad
mov
inc
fnstsw
shll
ja
pop
arpl
mov
xor
test
jnp
pop
adc
fnstenv
stos
push
rep
inc
ret
and
out
std
cmp
add
and
jae
mov
adc
rolb
jmp
ret
inc
xchg
gs
mov
movsb
sbb
mov
fiadds
sahf
dec
mov
xchg
or
push
mov
xlat
divb
psubd
sub
mov
push
mov
addr16
fwait
stc
mov
icebp
adc
push
jno
mov
mov
orb
lods
pop
test
insl
pop
pop
lret
je
loope
in
nop
test
fisubrs
jl
mov
inc
pop
addr16
sub
xor
rcr
adc
fidivrl
aam
jge
daa
inc
adc
pop
into
xor
mov
adc
mov
push
jg
dec
sbb
pop
rolb
fsub
adc
jne
dec
pop
mov
or
sbb
stos
pusha
in
fsubrs
addr16
loopne
stos
sub
or
mov
mov
mov
cmpsl
daa
pushf
xchg
cmp
push
jge
inc
imul
push
outsb
push
mov
xor
push
pop
lret
inc
aad
push
lcall
lods
loop
lret
inc
shrb
push
pop
dec
pop
shr
cmp
push
movsb
mov
addr16
mov
sub
subb
rorb
stos
into
cmpsb
shl
data16
lea
fs
repz
push
cmpsl
ret
and
xor
into
movsl
js
jl
daa
les
leave
sarb
sbb
pop
stc
push
adc
mov
pushf
pop
jbe
ja
inc
sbb
out
adc
inc
pop
sub
mov
repz
js
push
push
pop
test
jno
ss
mov
test
push
sarl
cmpsb
ljmp
jae
or
mov
push
sub
cmp
fs
cmp
loop
jecxz
cmp
repnz
xorb
dec
stos
daa
and
movsl
aaa
lcall
xchg
mov
rcll
sbb
mov
lods
int
mov
mov
mov
mov
push
loop
mov
mov
mov
lock
sbb
jbe
add
mov
push
adc
test
sahf
dec
es
cmp
test
mov
js
aam
hlt
sbb
pop
adc
outsl
cmp
cmp
mov
das
xchg
lock
fwait
adc
mov
movsl
sbb
lods
jmp
mov
addr16
test
repnz
rcrb
adcl
movsl
xor
repz
push
mov
enter
aaa
fisubl
insb
mov
or
stc
dec
jecxz
mov
lahf
pop
in
mov
shlb
arpl
sti
insl
push
insl
lahf
clc
mov
push
popf
xchg
daa
mov
pop
jo
add
xchg
into
mov
rcl
or
cmc
mov
xor
jmp
mov
roll
repz
or
stos
mov
lds
popf
inc
or
cmp
fwait
lock
ret
lahf
test
dec
scas
add
push
ljmp
jge
push
mov
icebp
rcl
sti
leave
pop
push
mov
lock
mov
dec
mov
jl
scas
cmp
dec
call
sbb
mov
mov
out
mov
mov
test
filds
pop
jne
out
cwtl
cmpsl
into
sbb
cli
dec
rorl
out
bound
and
cmp
xchg
xchg
sti
outsl
jbe
mov
pop
dec
xor
scas
dec
movsb
stc
cltd
mov
daa
sbb
clc
sbb
xor
pop
and
in
fs
push
sub
and
inc
addl
jbe
into
int
nop
gs
dec
je
mov
adc
cmpsb
and
ret
idiv
dec
jbe
mov
add
mov
outsb
sbb
pusha
add
es
sahf
pop
mov
int3
jl
mov
inc
cmpb
push
mov
dec
push
pop
xor
and
xchg
jecxz
stc
mov
cmp
mov
enter
imul
mov
mov
lods
push
bnd
pop
std
in
mov
loopne
fwait
out
insb
test
adc
idivl
cmp
adc
ret
nop
jb
jmp
decl
add
mov
insb
insl
sbb
inc
adc
fldenv
stc
and
imul
cmpsb
pop
push
dec
or
cld
icebp
in
gs
fsubl
lock
mov
xchg
sahf
lcall
lret
sbb
and
xchg
test
sbb
loop
out
push
daa
fnsave
leave
out
fwait
sbb
daa
lds
mov
mul
push
sub
and
sahf
or
outsl
and
into
adc
cmp
xlat
jmp
dec
in
inc
inc
sub
mov
hlt
pop
jb
sub
pop
pop
mov
outsb
lds
stos
cmpsb
xor
stos
inc
dec
dec
push
out
inc
dec
sbbl
sbb
push
fdivl
and
push
test
add
xchg
clc
xchg
or
pop
xchg
adc
sub
xchg
stos
lock
sbb
scas
xor
daa
push
push
inc
push
xchg
in
clc
push
orb
inc
pusha
sbb
int3
dec
das
sbb
mov
mov
cmpsb
imul
ss
ret
repz
sbb
stos
and
jle
fists
into
dec
adc
repnz
add
push
xchg
lock
jne
add
adc
push
outsb
insb
adc
mull
rcrb
orb
mov
and
dec
mov
xchg
addr16
mov
and
in
and
shlb
sbb
xorb
mov
jle
adc
outsl
data16
xchg
pop
jle
pushf
outsb
dec
sub
and
out
rolb
pop
cmp
and
cs
jnp
adc
cmc
jnp
push
in
xor
arpl
sbb
sub
stc
dec
inc
lock
lret
loopne
adc
fsubs
movsb
mov
mov
jae
cmp
inc
insl
test
mov
mov
inc
lret
das
adc
inc
in
aas
sbb
jl
xchg
loopne
imulb
mov
addr16
idivb
cmpsl
arpl
ljmp
lods
mov
or
xor
jno
sti
rcr
xchg
int3
daa
ret
pop
lahf
sub
pop
cltd
aam
lods
ficompl
test
xorl
incb
or
leave
out
aaa
dec
add
int
pop
imul
lods
adc
cmp
sbbl
lea
cmpsl
jo
ret
cli
add
dec
sbb
pop
pop
push
into
cmp
or
push
std
ljmp
mov
mov
int3
loope
push
pop
xchg
andl
ficoml
packssdw
lods
fildll
imul
add
add
push
out
jnp
sub
ja
push
add
dec
pcmpeqd
mul
movsl
insl
cmc
jp
and
xchg
jp
mov
fnstenv
pop
in
hlt
into
stc
fdivr
cltd
aaa
cs
and
subb
xchg
mov
sarb
inc
into
rcll
das
enter
mov
out
test
ljmp
sbb
fnstcw
xchg
daa
and
sub
bound
add
testl
aas
xchg
jmp
mov
aad
xchg
shr
divb
xor
jmp
sbb
jbe
or
jp
lret
pop
or
add
pop
dec
mov
test
push
iret
add
test
adc
imul
cld
push
mov
or
test
cs
and
mull
xlat
in
and
out
lret
add
out
fisubrl
or
into
lods
stc
xor
xor
push
scas
sub
xchg
mov
shl
xchg
xchg
sarl
lods
jbe
mov
jno
out
push
sub
or
push
sub
mov
or
xchg
sub
lock
lods
jns
psubsb
lods
das
rorb
lcall
cs
ret
test
sub
inc
test
mov
fisubl
push
cs
lds
inc
leave
push
or
jg
test
dec
loop
mov
shl
ror
bound
mov
daa
add
adc
pop
pop
jmp
pop
add
arpl
pop
cld
clc
cli
add
outsb
lods
ret
ret
mov
sub
xchg
sbb
jb
pop
pop
aaa
das
into
or
pop
int
jmp
mov
xor
jge
pop
clc
add
mov
add
idiv
pop
inc
fisubs
adc
xor
into
xchg
pop
mov
cmp
mov
fildl
data16
in
gs
aam
inc
adc
cmp
fld1
loop
out
repz
outsl
stc
push
outsl
int3
shl
jae
xchg
mov
jmp
cmc
adc
lea
dec
cld
sbb
push
xchg
pop
lret
jg
in
stc
mov
and
std
addr16
xchg
mov
cltd
sbbl
enter
push
imul
pop
xchg
mov
mov
dec
pop
adc
ficoms
push
insl
sbb
push
shll
xchg
std
inc
xchg
ret
xchg
jmp
lds
mov
xchg
les
mov
rolb
dec
je
nop
inc
lods
cmc
pop
or
cmpsb
gs
shlb
pop
in
fimuls
xor
in
imul
sub
adc
inc
inc
sub
aas
push
addb
cmpsb
mov
jno
fists
gs
jnp
outsl
lcall
bound
add
sbb
loop
inc
adc
push
outsl
pop
mov
outsl
daa
jb
push
fwait
into
jmp
jmp
pop
mov
inc
inc
push
dec
popa
mov
int3
add
outsl
clc
loop
repnz
mov
xchg
test
cmp
je
and
loope
mov
mov
adc
out
jne
cmp
inc
imul
sub
dec
mov
int
inc
mov
and
out
addb
push
shr
mov
cltd
lcall
pop
fnsave
mov
sub
call
mov
and
mov
fidivs
dec
fcomps
add
test
and
enter
scas
iret
add
mov
in
pushf
lcall
push
lea
dec
or
mov
iret
fadd
incb
pop
cwtl
cmpsb
mov
ljmp
pop
pop
sub
add
and
or
push
rorl
test
outsl
mov
pushf
in
andl
stos
xor
leave
jae
imul
out
les
pop
das
xor
lret
mov
lret
int3
mov
jne
aas
dec
mov
mov
dec
cld
dec
hlt
push
mov
test
and
and
sub
inc
stc
enter
pusha
mov
xchg
shll
sahf
or
sarl
cmp
mov
and
jb
enter
or
inc
push
mov
fmuls
jb
or
mov
adc
stc
js
pop
mov
dec
psraw
sbbb
lcall
insb
xchg
jbe
movsb
dec
rol
ss
popa
fs
es
push
lret
out
fs
pop
add
cltd
adc
dec
push
mov
add
jbe
mov
push
fnstenv
push
jns
mov
add
movsl
sub
mov
inc
stc
int3
ds
push
test
push
fs
pop
mov
hlt
pop
inc
in
vmaxps
push
lods
xor
xlat
mov
orb
addr16
jns
aad
jg
movsb
cmp
cmp
or
xchg
push
outsb
mov
mov
mov
les
out
arpl
fs
mov
je
pop
cwtl
pop
daa
push
adc
inc
or
movsl
mov
imul
je
and
jecxz
adc
lret
or
or
rorb
cmpsl
adc
mov
pop
enter
dec
xchg
cmp
inc
mov
fs
movsb
inc
inc
in
inc
fistps
stos
dec
or
xchg
adc
pop
push
mov
out
push
inc
push
imul
insb
add
add
add
add
insl
fs
xor
cs
insb
add
add
add
add
jb
gs
xor
cs
insb
add
jle
js
jb
insb
aaa
xor
pop
and
push
dec
jle
inc
dec
dec
inc
jnp
jne
outsl
cmp
bound
push
jle
dec
daa
and
inc
jb
insb
aaa
xor
pop
and
push
dec
scas
test
cwtl
fwait
mov
adc
fbstp
int
jl,pn
dec
