mov
mov
mov
mov
add
xor
push
push
mov
mov
push
push
add
push
mov
mov
mov
mov
push
push
push
push
push
push
push
movb
call
pushl
mov
push
call
pushl
call
xor
inc
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
lahf
push
ja
js
ja
out
fdivl
mov
fidivs
ljmp
pop
ja
ja
xlat
fdivl
jns
ja
outsl
fdivl
insb
fdivl
mov
add
inc
iret
cmp
or
add
lods
jle
ja
mov
ja
xchg
ja
icebp
ja
ljmp
jns
icebp
ja
jo
ja
nop
icebp
ja
pop
icebp
ja
imul
sub
ja
xchg
ja
pop
icebp
ja
pop
icebp
ja
mov
ja
popa
icebp
ja
pop
icebp
ja
jge
ja
outsb
icebp
ja
mov
ja
jmp
icebp
ja
mov
ja
popa
icebp
ja
iret
repz
popa
icebp
ja
stos
icebp
ja
dec
hlt
ja
mov
ja
pop
icebp
ja
xchg
icebp
ja
add
add
cmpb
jl
scas
cmpb
jl
mov
cmpb
jl
fwait
cmpb
jl
cwtl
cmpb
jl
stos
cmpb
jl
movsb
cmpb
jl
xchg
cmpb
jl
pop
cmpb
jl
fiadds
jl
dec
test
cmpb
jl
nop
jl
jo
jl
lcall
pop
or
jl
scas
cmpb
jl
add
add
pop
stos
jl
sbb
add
divl
add
add
mov
jle
mov
jle
adc
jle
bound
jle
cmp
mov
jle
cwtl
aaa
jle
cwtl
aaa
jle
repz
outsb
cmp
call
aaa
jle
xchg
cmp
int
jle
leave
aaa
jle
nop
aaa
jle
xchg
aaa
jle
cltd
aaa
jle
scas
aaa
jle
sub
inc
add
add
add
add
mov
push
mov
push
mov
push
lea
push
mov
call
pop
pop
pop
ret
mov
movzbl
sub
push
push
mov
push
push
mov
sub
push
pop
je
push
call
mov
lea
push
call
call
push
push
push
push
push
call
push
push
pushl
call
push
push
push
push
call
push
pushl
call
pushl
mov
call
mov
push
push
call
push
push
push
push
push
push
push
push
mov
call
push
push
push
push
push
push
call
mov
call
push
call
push
push
push
push
push
mov
call
push
pushl
pushl
call
push
push
mov
call
push
push
push
push
call
push
push
push
push
push
call
call
call
mov
xor
xor
jmp
mov
cmp
je
cmpl
je
call
mov
mov
mov
mov
xor
movl
cmp
je
mov
add
mov
xor
xor
call
mov
cmp
jne
lea
push
call
movzbl
push
pop
cmp
sbb
and
add
mov
mov
movzwl
movzwl
xor
movzwl
xor
xor
xor
test
jne
mov
not
mov
or
mov
lea
push
call
pop
pop
mov
pop
pop
add
ret
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
movb
mov
movzbl
mov
sub
movzbl
sub
je
push
push
push
pushl
call
push
pushl
call
mov
push
push
push
pushl
call
andl
mov
sub
mov
mov
sub
mov
jns
mov
and
or
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
je
call
call
call
push
pushl
call
mov
pushl
pushl
pushl
push
push
call
add
push
push
push
pushl
call
push
pushl
call
mov
pushl
call
mov
push
push
push
push
call
push
pushl
call
push
call
mov
call
mov
pushl
call
mov
pushl
pushl
call
push
push
push
push
pushl
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
mov
movzbl
mov
sub
movzbl
sub
je
call
push
pushl
call
mov
call
movl
pushl
call
mov
jmp
movl
movl
andl
jmp
mov
inc
mov
mov
sub
add
mov
movzwl
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
call
mov
and
mov
jmp
jmp
pushl
call
cmpl
jb
mov
leave
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
lea
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
mov
sub
movl
movzbl
push
mov
call
cmpl
mov
je
movl
movl
call
mov
mov
sub
movzbl
mov
movzbl
sub
je
mov
push
push
call
mov
call
xor
mov
int3
pushl
call
push
push
push
push
call
mov
mov
mov
incl
push
lea
push
push
call
pop
push
lea
push
pushl
call
jmp
push
movl
movl
call
call
call
pushl
pushl
pushl
jmp
movzwl
sub
je
dec
je
push
call
xor
push
push
push
push
push
push
push
pushl
call
pushl
pushl
push
push
call
jmp
push
pushl
call
xor
push
push
push
push
mov
call
call
jmp
mov
push
push
call
push
mov
call
jmp
lea
push
push
call
push
push
call
lea
push
push
call
jmp
pushl
pushl
call
xor
mov
pop
xor
pop
call
add
leave
ret
andl
andl
push
push
mov
push
mov
push
push
pushl
movl
movl
movl
movl
mov
movl
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
call
mov
push
call
push
pushl
mov
movb
movb
movb
movb
call
mov
call
mov
push
mov
call
test
jne
push
call
mov
push
pushl
call
mov
movb
movzbl
sub
je
call
call
jmp
push
call
test
jne
lea
push
push
call
pop
pop
pushl
movl
push
movb
movl
movb
movl
movb
movl
movl
movb
movl
movb
movb
movb
movb
movb
movb
call
pop
pop
test
jne
inc
jmp
push
push
call
mov
mov
xor
jmp
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
push
lea
push
call
test
je
mov
mov
pop
pop
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
enter
hlt
sbb
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
fwait
push
inc
add
push
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
inc
add
push
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
pop
inc
add
inc
add
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
and
pop
and
push
and
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
je
push
mov
sub
and
fstpl
cvttsd2si
leave
ret
cmpl
je
sub
fnstcw
pop
and
cmp
je
push
mov
sub
and
fld
fsts
fistpll
fildll
mov
mov
test
je
fsubrp
test
jns
fstps
mov
xor
add
adc
mov
adc
jmp
fstps
mov
add
sbb
mov
sbb
jmp
mov
test
jne
fstps
fstps
leave
ret
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
cmp
jne
repz
jmp
int3
int3
int3
int3
int3
int3
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
xor
mov
lea
push
call
push
pop
mov
mov
cmp
jne
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
jmp
mov
xor
inc
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
test
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
mov
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
jmp
xor
inc
ret
mov
movl
mov
call
ret
call
jmp
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
or
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cltd
mov
mov
xor
sub
and
xor
sub
cltd
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
push
call
andl
movapd
movl
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
andl
movl
mov
call
ret
mov
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
testl
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
mov
push
call
pushl
call
add
cmp
ja
test
je
pop
pop
ret
mov
push
mov
call
pushl
call
pushl
call
push
call
add
pop
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
call
mov
movl
call
cmpl
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
call
pop
mov
mov
test
je
pushl
call
pop
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
add
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
push
mov
call
pop
push
mov
call
pop
movl
call
cmpl
jne
mov
push
call
pop
pushl
call
xor
inc
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
mov
push
mov
push
push
push
mov
push
push
xor
xor
mov
cmp
je
inc
mov
cmp
jb
cmp
jae
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
movb
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
pop
cmp
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
pushl
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
pop
pop
pop
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
ret
mov
push
mov
push
push
push
call
mov
test
je
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
mov
sub
push
push
mov
push
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
mov
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
push
mov
call
mov
pop
cmp
jne
push
call
jmp
pushl
push
push
call
add
push
call
mov
pop
pop
pop
leave
ret
push
push
call
xor
mov
lea
push
call
movl
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
movb
orl
movb
mov
movb
movb
movb
mov
movb
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
movl
jmp
push
push
call
pop
pop
test
je
mov
lea
mov
addl
lea
jmp
movb
orl
movb
andl
andb
movb
movb
andl
movb
add
mov
add
cmp
jb
incl
cmp
jl
jmp
mov
andl
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
incl
incl
inc
addl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
pop
pop
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
jmp
xor
inc
ret
mov
movl
or
call
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
pop
ret
push
call
pop
ret
mov
push
mov
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
mov
push
call
test
jne
push
call
pop
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
pop
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
pop
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
pop
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
mov
push
call
test
jne
push
call
pop
mov
mov
movl
xor
inc
mov
test
je
push
push
mov
call
mov
push
pushl
call
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
mov
push
call
test
jne
push
call
pop
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
add
mov
call
test
je
push
pushl
call
pop
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
mov
push
mov
xor
cmp
push
sete
push
push
call
mov
test
jne
pop
ret
xor
inc
mov
pop
ret
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
jl
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
andl
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
pop
mov
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
pop
pop
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
andl
push
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
movl
mov
mov
mov
mov
movl
movl
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
leave
ret
mov
push
mov
pushl
call
pop
test
je
pop
jmp
push
call
pop
pop
jmp
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
push
push
push
pushl
call
pushl
mov
mov
call
mov
pop
pop
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
pop
mov
pushl
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
mov
push
call
add
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
lea
pushl
call
add
pop
mov
cmp
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
pop
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
push
push
call
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmpl
jne
push
call
andl
movl
mov
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
pop
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
sub
push
push
push
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
push
call
movl
push
mov
call
push
call
movl
push
mov
call
push
call
movl
push
mov
call
push
call
pop
mov
test
je
push
push
call
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
pop
pop
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
pop
test
je
call
mov
test
je
mov
cmp
je
push
call
pop
test
je
pushl
call
mov
pushl
call
pop
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
xor
push
cmp
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmpl
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
decl
jne
cmp
jne
mov
cmp
jne
cmpl
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
xor
push
push
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
pop
ret
mov
push
mov
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
jmp
mov
mov
jmp
call
push
push
push
push
push
movl
call
add
or
pop
pop
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
movb
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
mov
add
jmp
cmp
ja
orb
mov
sub
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
inc
inc
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
movl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
push
inc
add
push
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
js
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
movsb
push
inc
add
inc
add
push
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
inc
push
inc
add
inc
add
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
inc
add
inc
add
push
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
push
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
lea
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
lea
mov
call
mov
movl
call
jmp
push
call
pop
mov
ret
mov
push
mov
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
pop
ret
mov
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
mov
test
jne
push
lea
mov
mov
mov
mov
mov
mov
test
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
mov
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
pushl
push
pushl
call
cmp
jne
xor
jmp
addl
mov
mov
imul
add
push
push
pushl
call
mov
cmp
je
push
push
push
push
call
mov
cmp
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
mov
cmp
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
mov
cmp
jbe
push
pop
mov
mov
cmp
jne
mov
cmp
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
mov
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
mov
cmp
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
mov
cmp
jb
cmp
jne
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
mov
cmpl
je
mov
mov
mov
mov
cmp
je
mov
mov
and
and
or
jne
andl
mov
lea
mov
and
and
or
jne
incl
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
lea
mov
test
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
sub
mov
xor
mov
testb
push
je
push
call
pop
call
test
je
push
call
pop
testb
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
movl
mov
mov
call
lea
push
call
push
call
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
movl
push
push
push
push
push
call
add
or
jmp
cmpl
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
mov
movl
call
cmp
jne
push
push
pushl
call
mov
mov
call
ret
xor
mov
mov
push
call
pop
ret
push
call
pop
ret
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
xor
push
mov
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testl
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
jmp
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
mov
push
push
pushl
push
pushl
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
call
add
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
lea
pushl
push
push
pushl
pushl
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
mov
push
push
xor
push
mov
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
mov
add
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
push
push
call
andl
mov
cmp
ja
push
call
pop
andl
push
call
pop
mov
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
mov
cmp
ja
push
push
mov
cmpl
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
test
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
pop
test
jne
test
jne
inc
add
and
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
pushl
call
pop
test
je
mov
jmp
call
mov
call
mov
pop
mov
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
push
push
call
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
movl
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
pushl
call
pop
mov
movl
call
mov
cmp
je
pushl
push
push
call
add
cmp
jne
push
push
pushl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
mov
cmp
je
movl
jmp
xor
mov
push
call
pop
ret
cmp
jne
mov
cmp
je
movl
mov
call
ret
push
push
call
mov
test
jne
pushl
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
movl
call
cmpl
jne
test
jne
inc
add
and
mov
push
push
push
pushl
call
mov
jmp
mov
mov
push
call
pop
ret
mov
test
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
push
call
pop
mov
jmp
test
jne
call
cmp
je
movl
jmp
test
jne
inc
push
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
call
ret
call
jmp
test
jne
call
mov
call
push
call
mov
pop
mov
jmp
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cltd
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
mov
push
mov
sub
push
pushl
lea
call
mov
lea
cmp
ja
mov
mov
movzwl
jmp
mov
sarl
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
movb
pop
jmp
xor
mov
movb
inc
mov
push
pushl
pushl
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
andl
xor
jmp
movzwl
and
cmpb
je
mov
andl
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
mov
push
mov
sub
mov
xor
mov
push
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
mov
mov
mov
cmp
je
mov
lea
push
push
call
mov
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
mov
movl
cmp
jne
pushl
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
push
pushl
pushl
push
pushl
call
mov
cmp
jne
xor
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
lea
push
push
pushl
call
add
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
cmp
je
push
push
pushl
push
push
pushl
push
pushl
call
test
je
mov
jmp
mov
cmp
jne
push
push
push
push
push
pushl
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
pushl
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
pushl
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
mov
push
mov
sub
push
push
pushl
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmpb
je
mov
andl
xor
jmp
cmp
je
cmpl
jl
cmpl
jg
mov
push
mov
mov
lea
cmpl
jle
lea
push
movzbl
push
push
call
mov
add
jmp
mov
movzbl
movzwl
and
test
je
mov
inc
jmp
cmp
jne
orl
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
movl
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
mov
xor
divl
movzbl
movzwl
test
je
movsbl
sub
jmp
test
je
mov
sub
cmp
movsbl
ja
sub
add
cmp
jae
orl
cmp
jb
jne
cmp
jbe
orl
cmpl
jne
mov
dec
test
jne
cmpl
je
mov
andl
jmp
mov
imul
add
mov
mov
inc
jmp
mov
test
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
testb
push
pop
setne
add
mov
mov
test
je
mov
testb
je
negl
cmpb
je
mov
andl
mov
jmp
mov
test
je
mov
cmpb
je
mov
andl
xor
pop
pop
pop
leave
ret
mov
push
mov
xor
push
pushl
pushl
pushl
cmp
jne
push
jmp
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
xchg
push
or
add
add
add
add
add
test
add
add
add
xchg
jp
add
add
add
and
add
add
add
inc
ljmp
add
mov
add
add
add
add
add
add
outsl
outsl
jne
outsb
add
outsb
pop
add
push
leave
mov
or
clc
add
sahf
iret
or
push
roll
insb
add
dec
push
mov
incl
std
mov
call
decl
push
push
lea
fmull
adc
divl
mov
pop
in
add
push
jmp
rol
push
add
lahf
incl
mov
adc
add
add
decl
ljmp
ljmp
incl
loopne
jmp
test
lcall
inc
adc
call
jge
push
adc
test
incl
std
xchg
stc
mov
ret
lea
jne
inc
call
addb
adc
xorb
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
imul
dec
add
gs
dec
js
add
jae
add
add
dec
inc
fs
push
add
js
jne
popa
add
daa
outsb
imul
gs
or
push
add
mov
add
add
add
add
add
add
sub
add
add
add
add
fiaddl
add
add
add
add
inc
dec
pop
je
cmc
mov
aas
pop
hlt
push
test
inc
rol
out
mov
std
js
cmp
mov
mov
shrl
cmp
shlb
out
scas
add
jmp
enter
je
test
add
pushl
dec
inc
pop
negl
arpl
bnd
subb
adc
and
cmp
mov
fldt
xchg
fld
jl
cmpsb
mov
mov
ret
sbb
mov
sub
cmc
pop
dec
jp
sbb
jecxz
ss
popa
enter
jb
fnstsw
sahf
jne
clc
push
out
and
fmull
dec
mov
enter
xchg
in
cmp
mov
adc
ljmp
add
jb
pop
movsl
xor
push
fiadds
push
movsl
add
sti
aad
push
out
pop
or
fisttps
pop
fdiv
jle
push
ret
mov
inc
sub
mov
fcoml
xor
fs
lea
div
cmp
jge
insl
inc
jp
lret
frstor
notb
jecxz
jl
push
sbb
adc
dec
sub
loope
dec
inc
inc
stc
mov
int3
cli
cmp
add
and
mov
cmp
add
mov
and
adc
push
add
dec
add
dec
push
in
sarb
and
imul
sub
in
cli
fldcw
jp
scas
je
jg
pop
arpl
ljmp
inc
sub
arpl
sub
scas
pop
add
or
dec
sbb
jae
sub
shrl
fsub
cwtl
mov
push
mov
sub
pop
jl
xor
jmp
insl
mov
stos
jge
in
je
add
sti
jge
cmp
xor
jecxz
ss
xor
add
test
pop
jecxz
xchg
pushf
mov
lea
sbb
xchg
test
sarl
fldl2t
mov
xchg
mov
sbb
cmp
xlat
loop
iret
pop
loop
xor
test
roll
sti
or
cmp
cs
shl
les
outsl
repnz
sub
cli
add
cld
movnti
inc
xor
cli
push
mov
cmp
ret
sbb
push
pop
pop
dec
sub
mov
call
jne
mov
push
jne
xorb
push
mov
andb
or
sbb
mov
out
roll
cli
mov
movsb
xchg
cmpsl
sub
inc
in
push
push
xchg
dec
aas
push
outsl
repnz
or
xchg
in
shrl
mov
pushf
test
mov
pop
movsb
dec
mov
negb
shlb
mov
ds
test
mov
in
movsl
mov
dec
jmp
cli
jb
mov
push
out
pop
mov
enter
lds
mov
mov
mov
xor
dec
mov
jge
mov
push
lahf
inc
scas
sti
inc
push
adc
test
pop
fsubrs
cmc
out
pop
aas
js
ljmp
shlb
mov
jp
and
icebp
push
clc
xchg
test
jg
sbb
jno
xorb
cmp
cmp
xor
adc
std
out
pop
ljmp
xor
imul
scas
pop
jl
repz
sbb
mov
xchg
xor
lret
addb
mov
fdivl
jnp
inc
scas
aas
cmp
nop
mov
outsb
xchg
and
dec
iret
sub
adc
push
scas
ss
cltd
lods
outsl
push
dec
leave
int
jo
cs
add
adc
mov
jo
ficoms
sub
enter
xor
cmpl
lock
add
std
bound
iret
lds
outsb
leave
aad
jecxz
shll
inc
rcll
mov
push
fidivrs
test
mov
std
lods
int3
rcrl
pop
arpl
dec
int3
jmp
cltd
js
xchg
mov
gs
aam
pop
dec
sub
mov
inc
test
xchg
sbb
adc
pushf
mov
clc
dec
sub
push
call
jecxz
cmc
out
pop
inc
fstpl
imul
popa
adc
mov
fdivs
adc
pop
push
pop
outsl
sub
sub
hlt
sbb
jg
sbb
dec
fnstsw
mov
mov
mov
or
repnz
mov
fists
imul
out
adc
jae
popa
fmuls
or
xor
push
cmp
in
jl
js
xchg
sub
cltd
ds
movsb
loop
sub
mov
jnp
cmp
movsb
add
movsl
xlat
pop
or
push
jg
cmpsl
fmul
sbb
mov
in
push
data16
jnp
and
jmp
push
adc
les
mov
notl
sbb
mov
sti
mov
sets
aam
mov
je
dec
sub
add
int
cmp
daa
push
loop
push
cmp
cwtl
push
cmp
into
jge
lcall
cmp
sbbl
inc
lods
inc
adc
fs
cmp
shll
lahf
mov
loopne
push
xchg
mov
sub
ret
xchg
mov
jl
sbb
imul
jo
lcall
popf
in
mov
sub
jmp
mov
lods
sbb
adcl
cld
mov
sarb
fwait
jno
jmp
or
xor
cmp
lds
sahf
repz
mov
lds
mov
push
loopne
into
imul
sahf
xchg
div
or
pop
lahf
or
or
ss
mov
out
xchg
or
repz
adc
lock
lods
mov
and
cmp
loope
xchg
fs
push
movsl
stos
fcom
add
lret
add
dec
ret
push
aam
test
push
shll
inc
out
ss
inc
and
sub
push
test
shll
shl
xchg
fcomi
decl
shrl
std
jl
aaa
data16
pop
mov
or
jecxz
aaa
popa
lret
inc
leave
push
inc
jmp
push
mov
xchg
ss
lods
icebp
repnz
lods
or
sub
fsubrs
movsb
pop
inc
ror
xlat
inc
push
jns
dec
mov
iret
scas
xchg
dec
adc
fldt
cmp
cli
lcall
ret
mov
jae
les
clc
push
jecxz
mov
mov
jp
movsb
out
outsl
aaa
mov
dec
sbb
pop
lret
sbb
adc
seto
imul
dec
pop
jbe
incb
pop
iret
xchg
jmp
mov
mov
js
out
mov
xor
out
aam
xchg
test
inc
andl
inc
add
ja
pop
jo
push
inc
vmwrite
fwait
mov
adc
aam
sbb
add
sbb
pop
xor
dec
repnz
jge
xor
xchg
imulb
adc
call
stos
pusha
lock
aas
jge
or
es
cmp
ja
std
inc
jns
scas
faddp
nop
xor
add
push
rolb
cmc
ja
inc
adc
push
add
mov
sbb
lcall
repnz
pop
sarb
scas
dec
daa
call
rorb
vorpd
shll
sub
ret
push
out
xor
lahf
test
or
dec
push
push
inc
cmpsb
push
push
mov
add
cli
cmp
fidivs
push
insl
sub
sbb
arpl
xor
sbb
xchg
xor
ret
mov
cmp
push
int
stos
mov
inc
mov
adc
testl
in
adcl
jbe
or
in
daa
sub
in
rolb
in
push
mov
enter
mov
add
inc
fcompl
sub
mov
adc
punpckhdq
data16
xchg
push
or
fsubrp
inc
test
push
dec
push
ret
mov
jb
cmp
sbb
push
popa
enter
xchg
xor
xor
lret
mov
push
mov
cmc
mov
mov
movsb
stos
repnz
sub
push
inc
jmp
std
lcall
xorb
lods
mov
xor
ret
std
ret
and
fnsave
movl
sub
sbb
pop
push
imul
repz
xchg
lcall
jbe
popf
jl
or
or
loope
xchg
stos
jno
lods
orl
fldt
pusha
pusha
adc
int
dec
imul
cmp
loope
push
jp
das
mov
ret
xor
gs
rcl
aaa
push
into
xlat
fwait
mov
adc
clc
jmp
es
xchg
repz
sbb
or
xchg
popa
in
dec
bnd
in
or
mov
jecxz
mov
mov
sub
js
icebp
push
inc
pop
aam
xor
push
bound
lock
lods
or
mov
inc
insb
xlat
into
fucomi
dec
cmp
inc
xor
fdivrs
fwait
pop
test
imul
enter
inc
xchg
gs
mov
push
mov
subb
push
lds
mov
mov
add
pop
out
insl
fisubl
or
cmp
cld
mov
xchg
fisttpl
outsb
inc
cs
jb
push
jecxz
js
dec
cli
mov
shr
das
cmp
mov
and
out
jno
mov
mov
insb
push
inc
mov
xchg
cmp
and
mov
pop
lcall
pop
addr16
scas
fldcw
push
repnz
je
test
aam
clc
shrl
sbb
sub
lock
cmp
popf
xlat
mov
lods
fsubrl
mov
inc
mov
lods
aam
xor
hlt
pop
xchg
pop
pop
add
cmc
ds
push
ret
pop
dec
mov
xor
and
jbe
sub
push
cmp
mov
xchg
and
pusha
mov
adc
cmovl
push
in
jg
fldenv
daa
xchg
loope
fwait
or
nop
aad
andb
inc
ljmp
cltd
inc
movsb
push
push
popf
fsts
mov
fildl
add
rep
repnz
adc
pusha
bound
mov
jo
ds
das
mov
sub
hlt
inc
cmp
mov
sti
mov
and
outsb
gs
sub
jns
in
dec
mov
cli
adcb
daa
pop
lret
sub
nop
and
addr16
mov
push
mov
stc
ret
mov
adc
loopne
xor
cmc
clc
fwait
mov
sub
fwait
pop
popa
enter
pop
outsb
clc
jg
cmc
pop
push
cmp
jmp
or
jge
scas
push
in
dec
xor
insb
stos
mov
ljmp
push
cmpsl
jmp
push
cmp
cli
jb
dec
sub
pop
jge
cmp
ds
inc
pop
leave
popa
mov
sbb
sbb
pop
push
int
shrl
mov
mov
dec
lret
insb
inc
test
cwtl
sub
add
xchg
shr
jns
fcomip
lcall
pushf
sbb
xor
add
push
in
jb
push
ror
fnstenv
movsb
or
testl
in
jle
outsb
sub
outsl
adc
mov
jne
bound
push
mov
or
scas
cmp
adc
sbb
movsb
insl
int3
cmpsl
or
jg
sarl
sbb
lret
xorl
subl
cld
mov
dec
push
rcl
and
and
into
cmp
data16
in
js
cmpsb
and
push
sub
push
sub
or
sbb
dec
xchg
in
aad
sbb
ret
jp
add
adc
and
dec
and
xchg
std
out
dec
cmp
sbb
add
in
aad
cmp
iret
test
sbb
imul
scas
fmuls
aaa
loop
push
arpl
pushf
adc
in
push
cmp
and
jmp
jo
call
mov
mov
xchg
pop
idivl
shrl
jmp
xchg
xchg
add
shrb
cmp
pop
ja
daa
xchg
subl
mov
dec
imul
cltd
sub
xor
mov
cmc
sub
sub
iret
pop
mov
jl
sub
xlat
fcoml
xor
xor
cmpsl
cld
mov
mov
mov
mov
or
repnz
imul
outsl
addr16
sub
loop
shrl
flds
push
stos
jb
add
call
pop
push
jg
arpl
cltd
ja
das
mov
cmp
mov
xchg
hlt
lret
imul
push
mov
add
dec
stc
shrb
xor
cwtl
cmp
loope
pop
pop
push
dec
mov
std
test
popf
add
pop
mov
mov
jp
mov
repnz
jle
pop
jnp
lods
inc
push
cwtl
or
mov
mov
mov
jle
jp
inc
add
lret
out
out
push
outsl
fdivp
pop
sub
fmull
and
pop
out
sbb
rcll
test
cmp
fcom
mov
xchg
dec
dec
mov
data16
xchg
aas
rcl
lcall
lcall
loopne
ljmp
icebp
aam
push
jb
adc
in
jmp
jae
mov
mov
aaa
dec
mov
and
mov
cmpsb
adc
xchg
jne
pop
inc
jb
pushf
inc
scas
push
popa
scas
inc
inc
push
cmp
jo
pop
out
add
mov
add
es
and
mov
test
sub
in
dec
jbe
call
mov
pusha
jne
sbb
ret
imul
out
shl
in
fs
loope
repnz
xor
inc
inc
hlt
mov
mov
in
or
inc
sbb
push
std
imul
pusha
cmp
mov
dec
sbb
xchg
popa
push
xchg
pushf
roll
cmp
sbb
xchg
js
xchg
add
addb
pop
or
mov
sub
mov
push
or
fs
sbb
cmc
add
lahf
and
pusha
ret
lcall
jmp
pushl
packsswb
mov
xor
lret
sar
stos
inc
lret
aam
pop
inc
mov
xor
xor
sahf
ret
outsb
mov
cmp
stc
pop
or
xor
jmp
push
push
and
adc
enter
call
inc
adc
xor
dec
adc
mov
aam
sbb
shr
insl
sbb
lods
loop
xchg
sbb
insb
pop
jb
or
hlt
nop
mov
and
stc
pop
sbb
jo
pusha
xchg
addr16
mov
pop
mov
fstl
jl
mov
repz
dec
shrl
sub
pop
call
cmp
sbb
aaa
push
push
xor
and
mov
int3
mov
jae
xchg
xor
aaa
fsubs
adc
inc
adc
add
sub
jp
icebp
sub
nop
ljmp
fs
push
int
adc
mov
dec
adc
mov
xchg
push
hlt
jne
pop
test
mov
and
inc
sarl
in
mov
add
dec
xor
in
or
jg
dec
imul
xor
pop
das
xchg
lods
outsb
frstor
ret
dec
or
sbbb
dec
adc
xor
call
ficomps
cmpsb
inc
int3
in
divl
adc
dec
jo
inc
mov
loope
pop
cli
pop
sbb
je
mov
jb
test
adc
or
xchg
mov
mov
hlt
int3
xor
xchg
jbe
mov
mov
dec
and
stos
jle
sbb
arpl
cld
iret
xor
js
sbb
pop
int3
sub
xlat
data16
les
mov
cli
je
int3
shlb
or
in
iret
pop
mov
pushf
outsb
and
sti
xor
xor
jecxz
adc
les
mov
adc
scas
mov
xchg
fsubl
sub
add
imul
mov
cmp
mov
dec
aas
mov
cwtl
push
rolb
lock
adc
pop
cmp
ja
jns
leave
cmpsb
scas
jbe
add
arpl
xchg
pop
cmpsl
pop
pop
or
ljmp
sub
out
adc
jecxz
xchg
hlt
mov
dec
mov
pop
sbb
mov
notl
in
testb
bound
mov
cmp
loopne
mov
fcmovnu
cmp
jmp
sbbl
sahf
sbb
scas
negl
ret
mov
inc
push
arpl
test
rolb
cmp
cltd
movb
sub
add
das
lcall
xlat
xchg
scas
and
loop
fwait
es
test
xchg
jo
cli
outsl
ficoms
test
mulb
fwait
in
pop
adc
scas
les
add
or
stos
divl
cmpsl
loop
stos
dec
mov
sub
sub
stc
mov
and
mov
xor
cs
cmp
push
loop
fsubrl
jo
xor
jl
jbe
js
data16
outsl
das
mov
cmp
mov
mov
or
out
mov
push
mov
out
inc
push
push
mov
sbb
inc
or
or
xchg
jnp
cltd
shll
in
shlb
mov
lret
out
cmp
addr16
loop
dec
outsl
sbb
rcrl
push
adc
in
xor
lea
jns
push
sbb
ret
push
hlt
xchg
fwait
cmp
jbe
and
lds
rorb
fs
mov
mov
lods
push
mov
ja
mov
mov
mov
je
int3
in
outsb
sub
fs
mov
jge
jp
add
mov
lcall
xchg
in
inc
inc
shrb
mov
jnp
cmp
stos
es
imul
nopl
sbb
sbb
out
inc
push
adcl
mov
add
add
add
les
add
add
add
add
add
add
push
cmp
add
add
add
add
stos
je
add
add
add
addb
addb
test
add
add
add
add
xchg
jp
add
add
add
jo
jo
jo
lcall
dec
add
add
add
je
insl
add
add
add
add
movsb
adc
add
add
add
add
sbb
add
add
add
add
add
mov
add
add
add
add
add
sub
clc
add
add
outsb
and
pop
ja
jae
inc
dec
and
push
ja
mov
add
add
cvtdq2ps
fisttpl
xor
or
push
adc
push
lea
lea
mov
jmp
test
add
push
push
adc
rolb
add
dec
jno
push
fstpt
ret
inc
add
add
push
data16
decl
int3
inc
lea
jge
push
push
add
inc
add
add
sar
push
call
incl
adc
shrb
decl
dec
add
call
sbb
add
repz
inc
adc
jne
test
push
mov
clc
mov
test
inc
incl
adc
push
inc
add
pushl
add
cmp
add
add
add
mov
add
mov
add
push
add
jbe
inc
inc
outsb
pop
outsb
inc
jne
adc
je
jo
sbb
popa
jo
popf
outsb
inc
je
inc
gs
insb
mov
lret
arpl
popa
cmp
push
jae
cmp
jb
insb
push
jae
gs
jne
inc
push
jb
xor
gs
js
xor
add
add
pop
add
add
add
hlt
add
sub
add
add
add
add
add
xchg
add
add
add
add
sub
cmc
fbld
test
and
cmpsl
insb
fsub
cmpsl
aas
int3
aad
das
xor
and
addl
fcoms
or
les
pop
pop
popl
pop
mov
xchg
cld
cmp
addl
sbb
iret
cmpsl
pusha
sbbb
xchg
fdivrs
repz
negb
add
cld
das
adc
xchg
loop
sbb
lret
jns
in
sbb
mov
cmp
sub
pushf
les
hlt
jmp
icebp
stos
xor
ror
xchg
scas
jbe
xlat
test
jo
mov
inc
adc
cmc
imul
sbbb
jne
aaa
pop
mov
outsl
sbb
jns
xor
mov
xchg
xor
inc
rorb
or
mov
enter
mov
aas
out
add
push
das
sub
pop
jmp
cmp
xchg
inc
mov
in
dec
mov
cmp
dec
loop
adc
mov
pop
and
js
dec
jle
inc
mov
lock
leave
es
inc
stos
xchg
xor
scas
int3
sahf
mov
mov
adc
fisubrs
fmuls
mov
iret
scas
aaa
jg
pop
cli
jne
mov
dec
jb
js
shll
pop
mov
fnstenv
inc
sahf
pop
stos
xbegin
jmp
cmpsl
xchg
sub
inc
sbb
aaa
sbb
mov
sbb
cli
pop
arpl
xchg
sbbb
shll
cmp
mov
stos
sbb
pop
bound
jae
dec
lcall
jae
dec
fmul
fcompl
fcmovnb
sub
pop
loope
jp
in
std
out
or
cmp
fnstcw
inc
call
mov
xor
cmp
in
inc
pop
lea
cmpsl
jae
pop
not
sbb
cltd
fcomi
or
adc
pushf
xor
push
mov
les
addr16
aaa
mov
cmc
pop
sbb
mov
mov
adc
test
roll
xchg
imul
mov
addl
pop
dec
lahf
sub
sub
out
std
and
stos
push
imul
mov
iret
adc
cmp
pop
test
push
pop
incl
sub
and
push
repnz
jae
mov
mov
sbb
lahf
scas
pop
enter
outsl
xor
ret
pop
sub
stc
add
aad
sbb
enter
fneni(8087
movsb
pop
mov
mov
repnz
jne
shrl
pop
mov
jl
or
mov
sub
int3
lahf
mov
or
faddl
es
in
lods
cli
mov
xchg
and
jns
fstp
je
xor
fmuls
mov
jb
insl
add
clc
sbb
xor
popf
adc
xor
push
leave
das
inc
add
rcl
inc
paddd
lods
jle
js
pop
arpl
repz
mov
vaddsubpd
cld
movsl
xchg
sub
push
sub
sti
test
pop
mov
mov
int
xor
sbb
pusha
jl
rcr
cmp
xchg
into
roll
mov
in
xor
push
or
jg
js
test
adc
pop
fs
in
jbe
cltd
xor
mov
fdivrl
push
in
aam
mov
ja
inc
out
out
imul
push
xlat
imull
stc
mov
cmc
int3
pushf
pushf
sti
andb
in
les
dec
jg
outsl
and
add
lods
lock
add
mov
and
pop
test
aam
into
and
iret
xchg
cmc
scas
sti
inc
mov
jb
or
jb
cltd
mov
jmp
leave
arpl
ficomps
and
xchg
pop
nop
jmp
mov
fsts
cwtl
nop
ret
push
or
roll
sub
mov
scas
add
cmp
stc
and
dec
aaa
pop
out
pop
xchg
mov
cltd
add
inc
cwtl
enter
rcl
data16
shrb
loope
dec
aam
inc
and
inc
pop
add
mov
sub
jg
mov
hlt
movsb
sbb
xchg
jbe
xor
aam
sub
mov
mov
cmp
jne
cmp
push
jmp
xchg
sti
xor
nop
mov
push
rol
pop
lcall
or
cmpsl
push
and
mov
imul
int
jl
push
stos
fwait
push
sahf
mov
dec
add
mov
or
pop
jmp
ret
into
cmpl
loopne
push
sbb
xchg
inc
jb
jecxz
xchg
js
and
clc
pop
pop
jno
sbb
or
aas
mov
cmp
movsb
insl
outsb
pop
adcl
aam
in
inc
sbb
sbbb
and
out
cmp
inc
addr16
pop
sub
and
jnp
adc
lcall
push
push
mov
sbb
dec
test
scas
imul
cmp
out
adc
mov
push
adc
in
jbe
push
pop
dec
iret
or
xchg
test
xchg
rol
mov
dec
pop
ljmp
out
jo
stos
cmp
bound
xor
ss
stos
push
lret
in
add
cmp
sub
lods
push
mov
jecxz
cmpsb
sub
shr
scas
xor
sub
jl
mov
fiadds
mov
or
add
ja
imul
sub
mov
jns
fs
push
mov
mov
mov
clc
push
fwait
lret
cmpsb
lds
arpl
push
icebp
and
push
mov
mov
add
pusha
or
push
std
mov
insb
fisubrs
fimuls
mov
adcb
sbb
xorl
pop
movsb
cltd
inc
jle
cmp
inc
dec
fmuls
dec
xlat
jmp
cs
or
pop
insl
fcmovb
and
inc
sarl
sbb
inc
adc
or
xchg
sub
add
xchg
ret
and
mov
or
imul
aaa
arpl
ja
jae
mov
mov
xor
inc
cmp
movsb
lds
mov
shr
sub
daa
inc
idivb
outsb
inc
or
mov
rcl
push
andl
adc
lret
int3
out
out
incl
jle
mov
enter
ljmp
or
push
insb
sbb
test
or
and
pop
push
push
out
shlb
test
inc
pop
mov
and
mov
dec
inc
shlb
in
xchg
add
fcmovne
xchg
cs
div
outsb
pop
xchg
pop
mov
dec
push
sbb
add
jo
and
lahf
inc
pop
add
add
bnd
icebp
mov
imul
repz
outsb
sti
mov
add
ljmp
dec
dec
js
fisttpll
out
jo
dec
mov
push
or
js
xor
jge
pop
cltd
sbb
mov
cmp
stos
es
rol
je
fwait
nop
add
lcall
test
xor
and
cli
outsb
inc
mov
mov
cmpsb
xchg
cmc
cmp
dec
sbb
or
mov
jmp
movsb
les
push
mov
dec
push
push
xor
xlat
fnstsw
ljmp
xchg
push
fs
movsl
xor
add
sbb
daa
mov
mov
test
inc
mov
ffree
sub
rep
jle
xor
lahf
jge
out
cmpsl
popf
inc
fidivs
mov
jae
clc
adc
xor
mov
movsl
pop
pop
or
ds
std
adcb
out
aas
test
mov
je
data16
cmc
push
dec
repz
jne
jle
sub
xor
mov
mov
sti
inc
push
push
movsb
mov
mov
add
or
lret
ss
add
aad
cli
mov
xchg
call
loop
adc
jl
push
inc
sub
xchg
jb
or
sbbl
in
pop
shll
mov
jp
inc
packsswb
xchg
lock
ljmp
xchg
jge
mov
shrl
xchg
jmp
pop
cwtl
fnstcw
mov
or
jnp
cmp
inc
clc
test
rcrl
xchg
shl
fsubs
sub
fcomps
inc
pop
mov
push
push
inc
and
xchg
mov
ret
add
or
mov
lds
push
js
jae
pop
mov
fcmovnu
hlt
out
decb
push
jns
jecxz
jno
loop
int3
or
call
mov
sbb
mov
pop
test
ret
pop
ja
sti
mov
rcll
inc
dec
or
pop
or
xor
xchg
add
xchg
mov
std
mov
push
out
mov
sub
xor
cmpl
subl
inc
push
inc
adc
sub
call
mov
mov
and
lods
mov
int
push
dec
fs
mov
movsb
pop
xchg
pop
xchg
cmp
jno
stc
hlt
push
int3
out
push
sub
cwtl
lods
jg
jnp
push
xor
imul
lahf
nop
sbb
push
in
in
sub
jns
push
push
xor
mov
insl
test
mov
sbb
pop
xchg
icebp
pop
arpl
daa
jae
lds
pop
std
sbb
push
sti
ret
jge
push
xchg
mov
mov
xchg
sbb
cmp
sarb
fwait
idivl
test
ret
xchg
js
cmp
repnz
xor
mov
sub
bound
lock
fs
and
inc
nop
aas
pop
mov
ja
add
inc
in
movsb
rolb
add
pop
and
adc
cld
cmc
fisttps
sti
insl
loop
sbb
bound
out
insl
pop
fistps
test
leave
cli
leave
cmp
ret
scas
js
pop
mov
das
cmp
repnz
adc
outsl
in
dec
xchg
xchg
cmp
jecxz
adc
mov
inc
or
lods
push
movsl
or
add
imul
xchg
adc
jno
mulb
sbb
xor
shr
iret
repnz
out
repz
jg
test
mov
or
lods
or
mov
hlt
mov
push
inc
add
loope
cltd
mov
std
int3
repz
pusha
cmp
fcoms
cmpsl
out
pusha
pop
scas
in
shlb
cwtl
inc
jl
mov
jae
mov
ret
xor
cmpsl
inc
lds
sbb
lret
jne
sub
cmc
mov
adc
je
cli
imul
fisttpll
inc
repnz
xchg
lock
xor
xlat
cltd
les
sub
cmp
inc
sti
inc
mov
dec
enter
cltd
push
stc
mov
scas
push
and
out
push
adc
and
pop
adc
pop
daa
jns
sub
add
cs
cmp
sbb
xchg
nop
bound
clc
imul
subb
jne
inc
mov
ss
out
js
or
call
mov
xor
mov
pop
jnp
lds
rorl
std
test
xchg
push
stos
mov
pop
lret
push
pop
inc
mov
sahf
fstps
test
xlat
push
popa
add
es
adc
jb
lods
xor
pop
adc
xchg
and
ja
mov
in
aad
mov
les
or
enter
loopne
inc
push
arpl
xor
and
in
popa
stos
mov
mov
and
rclb
pop
sbb
jmp
pop
mov
bound
mov
jecxz
cmpsb
push
ss
xor
mov
stos
lret
mov
ret
addr16
jmp
adc
insl
mov
or
lahf
les
pop
sti
bnd
mov
les
mov
test
xor
mov
cmp
pop
pop
pop
andl
cmpsb
xchg
in
or
jae
test
cmpsl
pop
repz
cmp
push
push
sub
push
out
and
push
daa
push
xlat
insl
sbb
xlat
in
mov
sub
aam
xor
mov
sbb
mov
loopne
mov
jmp
xor
addr16
jnp
jmp
ja
ret
mov
mov
add
xor
add
es
pop
xchg
leave
xor
dec
enter
push
jne
sub
lcall
or
dec
pop
pushf
xchg
jg
cwtl
sbb
mov
lock
aas
lea
sbb
jb
xor
rcrb
andl
loope
call
cltd
push
jl
add
cmp
push
popf
add
jp
int3
jnp
in
fstps
mov
fstps
mov
ja
jg
lock
mov
mov
js
insb
pop
mov
idivl
test
daa
sub
movsl
aam
or
mov
rorb
call
push
movsl
mov
inc
and
mov
sbb
pop
in
popf
shrb
adc
inc
ds
lcall
jmp
push
mov
out
sbb
mov
sbb
dec
dec
shrl
xor
aaa
xlat
pusha
cmpl
jecxz
outsl
xor
dec
out
stc
in
add
repz
inc
stos
xchg
pop
ret
and
cwtl
mov
xor
sbb
push
in
iret
sarl
int3
adc
mov
xchg
sbb
xor
paddsb
lock
cmp
cmp
lods
in
insl
adc
cli
ss
lss
xchg
fnstsw
pop
shl
lds
mov
xlat
cltd
mov
sahf
ds
das
xor
jbe
int
xor
addl
or
aas
xor
and
cwtl
loop
sbb
pop
xor
arpl
xor
emms
mov
xor
stos
mov
mov
in
aad
insl
scas
repnz
fistpl
mov
xchg
movsl
pop
inc
pop
jae
or
cli
cmp
movaps
and
rorb
xchg
ljmp
jecxz
popa
pop
shlb
int3
sub
cld
mov
xor
ret
ss
and
addb
pop
cmp
xor
inc
aad
adc
repnz
pop
cmpps
enter
scas
bound
cmc
sbb
fcompl
das
lds
mov
ret
mov
mov
lods
xchg
add
xor
stos
jmp
orb
in
call
cmp
sub
sti
or
dec
stc
out
push
cmpl
or
mov
or
adc
aaa
pop
dec
inc
adc
jno
or
xlat
xor
sbb
adc
pop
std
out
xchg
mov
out
test
sub
jne
sub
mov
sub
shll
or
popf
inc
into
fdiv
mov
lcall
movsl
sub
mov
push
pop
addr16
xor
mov
out
ret
es
inc
sti
mov
xchg
loopne
push
or
mov
loopne
insl
sarl
shll
adc
repnz
or
mov
js
lret
imull
insb
shlb
cs
fsubr
movsb
ret
jl
lods
sub
mov
inc
fwait
in
pop
negb
inc
jno
pushf
jae
xchg
jno
cmp
lret
sub
sub
cmp
adc
loope
shrl
mov
sub
outsb
aaa
push
mov
dec
hlt
dec
cmovg
out
fistpll
cmpsb
or
lods
out
jno
pop
dec
into
push
fcomi
jmp
loope
in
mov
jmp
mov
cld
pop
mov
xor
pop
bound
xchg
xor
enter
inc
in
mov
cmp
mov
cmp
or
add
insb
push
pop
jo,pn
lret
sbb
mov
out
je
pushw
sbb
xchg
dec
xor
lcall
jns
loop
xor
dec
mov
fsubl
cmc
mov
test
repz
add
add
xchg
in
shlb
into
loopne
ds
cvtps2pd
mov
arpl
cmp
mov
mov
or
pusha
in
mov
addl
insl
or
fdivr
and
cmp
sbb
push
add
push
roll
jo
dec
adc
fbstp
enter
mov
push
add
xchg
dec
test
shlb
or
aam
fs
bound
movsb
sub
lea
inc
pop
icebp
push
mov
adc
jno
je
pop
jge
mov
aaa
mov
scas
daa
addb
fbstp
cmp
adc
repnz
mov
aaa
imulb
sub
aam
xchg
cmpsl
rorb
jg
xor
mov
mov
sbb
jb
js
sbb
sbb
je
mov
fwait
stos
movsl
lods
mov
loop
test
outsl
dec
mov
cmp
add
fisubl
or
xor
xchg
call
xlat
lahf
add
inc
out
sbb
sbb
out
pop
xchg
outsl
int
aam
and
cmpsl
and
cmp
add
adc
add
push
add
rorb
fs
stos
dec
rcrb
mov
mov
lods
data16
call
shrl
dec
adc
aam
jb
imul
mov
and
add
jo
lock
sbb
mov
mov
scas
lret
hlt
push
push
and
mov
or
push
pop
jno
in
adc
mov
out
inc
jge
xchg
loop
sub
push
aaa
mov
add
mov
fidivl
ljmp
test
fwait
stos
insl
sub
xor
push
and
jno,pn
cmp
addr16
fstp
stos
push
rclb
sbb
lods
push
loop
add
adc
and
mov
pop
je
loop
addb
adc
cwtl
fwait
dec
sub
xchg
cmp
call
add
fadds
in
push
lods
out
push
sbb
mov
test
loopne
push
add
pop
dec
or
aaa
sti
mov
adc
insb
ljmp
xor
adc
addl
inc
cwtl
test
scas
push
outsl
fadds
jecxz
fcmove
hlt
icebp
inc
in
ret
jae
xchg
lret
out
lods
js
add
sbb
add
add
add
add
add
add
add
flds
add
add
add
test
add
test
add
adc
add
add
adc
add
add
add
add
or
sbb
mov
add
mov
sub
add
adc
add
mov
add
ljmp
ja
mov
dec
int3
int3
int3
int3
add
add
push
add
add
dec
jo
shlb
dec
add
add
sahf
jo
add
add
add
add
add
add
add
add
add
add
insb
incb
add
add
add
add
add
add
dec
add
add
add
and
cs
push
outsb
mov
dec
jae
dec
jae
jb
inc
and
add
insb
jecxz
jne
leave
push
js
add
inc
pop
mov
mov
pop
lea
or
testb
je
incl
adc
adc
push
clc
inc
mov
pop
or
cmpb
movsl
add
lcall
push
dec
adc
sarb
sub
add
push
incb
adc
lea
decb
je
push
push
cmp
add
and
cld
dec
adc
mov
add
lea
loopne
clc
rol
decl
mov
adc
push
clc
clc
inc
adc
add
push
add
loopne
add
add
add
add
add
add
sbb
imul
gs
imul
add
arpl
je
inc
xchg
gs
jns
dec
add
cmc
push
gs
insb
dec
dec
imul
jns
jae
gs
push
add
fisubrs
inc
fs
imul
add
add
add
add
add
inc
add
add
add
add
rolb
add
add
add
add
add
add
pusha
add
add
movsl
push
fidivl
popf
aam
mov
loop
cmp
xchg
sub
adc
sahf
lock
out
mov
xchg
inc
mov
xor
push
lds
adc
in
push
xor
sub
out
decb
jo
sub
dec
mov
fists
inc
int
push
rorb
push
mov
add
dec
fmul
sbb
out
inc
insl
lock
test
dec
xchg
push
and
scas
aaa
push
xor
xor
divb
cmpsb
sub
pop
jbe
xchg
ljmp
sbb
out
mov
mov
xor
cld
popa
jbe
ss
ljmp
cmp
push
cmp
add
popf
repz
testl
mov
dec
mov
mov
shlb
mov
push
insl
loope
loope
xchg
fwait
pop
imul
in
loopne
mov
into
outsb
mov
loopne
inc
ret
out
push
mov
jne
clc
mov
mull
stos
add
fdivrs
out
mov
mov
add
scas
xor
das
lods
and
cmp
out
sbb
testl
push
sarb
movsb
xchg
fists
cwtl
lods
xchg
or
out
lcall
insb
daa
xchg
or
mov
or
lods
pop
xchg
sub
cmp
cmp
jp
aas
mov
xor
jne
pxor
in
clc
fstpl
call
jl
insb
mov
movsl
mov
pop
mov
out
in
js
xor
fimull
gs
mov
cmpsl
in
adc
xor
xchg
push
scas
push
jmp
lahf
xor
or
imul
push
dec
xchg
mov
scas
es
push
je
inc
adc
shlb
in
pop
xchg
outsl
out
in
mov
mov
push
pop
cld
mov
xchg
sub
jp
push
popa
sbb
ror
pop
movsb
dec
sub
pop
icebp
jg
in
mov
sub
jnp
jnp
aas
jecxz
add
inc
pushf
ljmp
cmp
ficomps
jmp
movsb
clc
clc
call
mov
aam
mov
fists
inc
loopne
outsl
pop
add
mul
and
ret
icebp
in
jno
mov
mov
in
jbe
cld
lds
inc
shlb
dec
leave
mov
loop
jae
add
mov
shlb
icebp
loopne
out
sub
hlt
imul
pop
push
add
xor
stos
or
adc
pop
xchg
push
dec
mov
push
sbb
orb
into
test
inc
dec
add
mov
inc
xchg
mov
icebp
aam
sahf
fdivrs
pop
xor
stos
adc
pop
outsb
sbb
push
sub
and
in
popa
mov
sub
push
arpl
mov
add
xchg
stos
or
call
push
sahf
inc
loop
pop
push
push
xor
scas
stc
cmpsl
test
xchg
hlt
aaa
scas
mov
mov
push
fwait
jnp
faddp
cvtdq2ps
sub
ret
push
int3
mov
mov
js
and
add
mov
push
jl
sbb
out
lahf
lahf
push
dec
pop
push
repz
scas
add
aaa
insb
dec
les
mov
leave
xor
fildll
pop
jl
push
adc
push
test
jle
pop
mov
mov
pusha
mov
loopne
sbb
fistps
mov
cmc
jo
scas
and
cld
mov
pushf
outsl
mov
jmp
or
test
mov
sub
cmp
fcomps
mov
imul
push
jnp
loopne
cmc
dec
ss
jp
jno
cwtl
mov
mov
mov
lods
sub
lahf
ja
cmp
push
pop
xchg
sub
adc
bound
add
cmp
testl
mov
jle
loope
xor
sahf
les
pop
dec
sar
mov
inc
dec
inc
dec
cmpl
fstl
adc
jge
pop
gs
sbb
push
in
mov
push
jecxz
loop
and
imul
cmp
sub
subl
fcoms
jle
sub
jg
dec
rcrb
hlt
les
jo
dec
xor
dec
pushf
dec
sub
push
push
mov
adc
adcl
jnp
xchg
lods
push
mov
or
add
and
xchg
jl
je
jnp
mov
dec
clc
popa
iret
ja
clc
out
cltd
pop
push
sbb
pop
jle
pop
jmp
and
clc
and
dec
enter
popf
jne
xchg
mov
jl
js
addr16
push
cmp
mov
jmp
daa
and
rorl
pop
mov
xor
push
pop
dec
lods
cmp
fucomp
sub
test
xchg
enter
ficomps
xor
hlt
mov
xchg
ds
xor
push
jb
cmc
push
imul
pop
in
push
outsb
sbb
xchg
sbb
and
push
dec
sbb
pop
in
or
loopne
or
pop
mov
insl
add
das
dec
jecxz
shl
push
pop
je
into
movsl
movsl
inc
sbb
mov
xlat
nop
aam
inc
iret
jns
inc
mov
jp
pop
and
dec
xchg
gs
clc
inc
jbe
sahf
out
fucom
jecxz
cmpsl
shl
mov
mov
jmp
xchg
add
rol
xchg
hlt
push
cmp
loop
xor
outsl
xchg
push
inc
pop
imul
push
sub
xchg
cmpsl
mov
xchg
push
pop
xchg
stos
or
fnstsw
xlat
add
jae
shl
frstor
testb
test
cmp
mul
push
add
test
iret
popa
mov
das
shll
mov
cmp
xchg
pop
xor
pop
xor
leave
pop
jno
sti
jne
sarb
pop
shl
aad
cmp
movsl
mov
and
mov
mov
jbe
mov
xchg
xchg
add
data16
xorb
inc
push
lds
jo
pop
call
ljmp
push
inc
xlat
jnp
xchg
cmpsb
adc
gs
sub
cmp
int
notl
push
hlt
cld
roll
out
dec
jmp
fldl
mov
ret
cmp
lcall
mov
idiv
adc
inc
aaa
and
in
mov
lods
xchg
jne
jmp
fimull
pop
cmp
jmp
bnd
inc
pop
popf
sbb
mov
sub
and
jno
imul
mov
jb
cwtl
test
rolb
out
add
mov
add
lahf
and
and
cwtl
or
test
addr16
in
mov
inc
ljmp
mov
and
movsb
mov
xorw
fldenv
pop
mov
shlb
clc
mov
dec
pop
mov
pop
hlt
inc
inc
rcl
addb
ror
repnz
pop
jle
adc
and
call
jno
pusha
into
sti
out
xor
push
jb
mov
ret
js
loopne
imul
mov
loope
jb
repnz
mov
enter
out
add
cmp
test
arpl
jb
sar
adcl
call
sbb
and
pop
test
mov
inc
cmp
cmp
adc
insb
push
fisubl
add
xor
loope
es
shlb
cli
sub
sbb
pop
adc
dec
pop
and
roll
add
nop
mov
and
in
outsb
sahf
jge
out
iret
into
daa
xchg
xchg
sbb
notb
imul
sub
mov
mov
mov
pop
imul
pop
ret
pop
xchg
pop
mov
imul
add
out
aas
leave
pop
pop
dec
inc
sub
int
mov
fcmovu
shl
test
cmpsl
mov
insl
testb
lds
popf
fs
leave
ret
cmpsb
xchg
sbb
mov
jb
out
or
jns
shrl
sarb
jo
push
xchg
ja
jecxz
rcll
adc
sbb
xchg
insl
dec
push
loope
mov
jle
mov
pop
mov
mov
loope
xchg
jo
popf
lods
cmp
loope
pop
adc
pop
cmpb
cwtl
xchg
cmp
mov
pop
inc
adc
jnp
xor
cltd
dec
sahf
and
testb
jbe
or
xchg
fstps
cltd
jmp
lret
adc
xchg
jg
mov
scas
roll
mov
int
rcrl
xchg
add
sahf
jno
and
cmpsl
mov
roll
pop
pop
lock
mov
iret
nop
loope
xchg
lret
addl
hlt
jno
or
pop
or
lods
rcr
aad
or
dec
loop
cmp
pop
mov
scas
sub
mov
xchg
outsb
add
dec
insl
shrl
xor
xchg
das
rcl
and
mov
test
mov
cltd
xchg
sbb
insb
pop
push
cmp
lret
imul
int
in
outsb
sbb
insb
inc
out
sub
pop
loope
push
pop
inc
outsl
adc
pop
cli
xor
and
mov
xor
xlat
mov
xchg
das
div
aam
and
and
lock
jbe
or
lret
int3
mov
jns
aad
xchg
fbstp
cmp
adc
sbb
nop
test
or
mov
pop
mov
mov
mov
adc
fs
shlb
inc
adc
xchg
inc
mov
ret
fmulp
mov
jge
lahf
sub
aam
mov
ss
inc
mov
sub
rolb
dec
sub
nop
inc
dec
sbb
fmull
mov
dec
leave
adc
js
test
inc
ja
test
push
dec
lret
cmp
mov
test
rclb
adc
mov
cmp
push
cmp
cmpsl
dec
cmp
mov
cli
jae
jge
in
xor
mov
push
fsts
jbe
test
push
in
adcl
pusha
loop
sar
int3
cmpsb
xlat
std
ss
sbb
imul
lcall
cld
insb
out
in
inc
xchg
loope
jne
push
lea
cltd
mov
lahf
out
mov
into
xor
mov
sub
push
in
lods
sbb
mov
in
cltd
xlat
mov
icebp
push
call
adc
test
lret
xchg
stc
xchg
xchg
in
shrl
test
add
dec
push
dec
dec
xor
push
rorb
insb
outsl
xchg
lods
xor
and
jb
inc
cmc
les
adc
push
adc
icebp
daa
cwtl
add
jp
loop
hlt
stos
push
incb
scas
lods
pusha
cmp
add
mov
jle
inc
xchg
jge
das
adc
lea
das
sub
lds
jb
xor
ja
inc
movsl
mov
pop
fistps
test
mov
cmp
iret
mov
arpl
inc
mov
les
pop
addr16
add
or
popa
mov
mov
mov
mov
cmpsb
addr16
popa
out
inc
pusha
fisubl
and
imul
or
adc
xlat
push
xchg
loope
pop
movsl
rcll
dec
mov
push
sahf
adc
jmp
lds
xchg
adcb
sbb
jns
mov
outsl
xchg
movsl
sarb
and
jl,pt
aam
fiadds
dec
mov
mov
mov
inc
or
mov
and
xor
xchg
pop
lret
imulb
mov
iret
sbb
data16
arpl
xor
or
inc
sbb
dec
call
pop
in
bnd
push
jae
add
ficompl
dec
cwtl
movsb
stos
bound
cwtl
pop
pop
mov
jno
lods
or
cmc
dec
bnd
pop
mov
fbld
pop
adc
sbb
aaa
dec
negb
fists
jp
sti
outsb
mov
andl
shlb
insb
xlat
lock
adc
or
or
xchg
int3
pop
mov
push
cli
stc
jae
cltd
fsubr
fisttps
xor
xor
std
dec
inc
inc
add
loop
fists
mov
pop
ja
jg
mov
test
js
and
mov
out
adc
pop
adc
sub
iret
pop
ja
and
xchg
push
mov
outsl
cmp
sahf
push
fnsave
mov
frstor
mov
call
js
es
mov
aas
push
mov
jbe
dec
dec
test
clc
movsl
sbb
ja
xor
out
or
dec
cmp
inc
pushf
mov
mov
inc
iret
sub
mov
cmp
stos
and
movsb
fistps
mov
mov
adc
push
daa
rol
imul
ja
popa
push
pop
and
mov
cltd
push
lds
sub
jle
scas
arpl
sub
push
xor
add
adc
test
add
in
outsb
mov
xor
test
loopne
mul
mov
lods
repnz
bound
jns
subl
int
incb
or
xchg
aad
xchg
or
jg
lods
lods
jge
les
movsb
ror
push
inc
int3
int3
xchg
orl
mov
adc
sti
icebp
and
sub
iret
fcoms
in
xchg
mov
imul
lods
ja
jmp
jno
push
stc
xchg
fadd
sub
out
data16
repnz
jl
in
jmp
insl
pop
sbb
mov
cs
bound
out
pop
imul
pop
dec
setnp
inc
xchg
adc
dec
inc
add
sub
enter
sbb
mov
stos
jo
sub
fstpl
imul
and
test
jmp
ss
mov
hlt
hlt
xor
adc
ljmp
pusha
mov
push
call
subb
mov
scas
ja
aam
cld
aad
mov
mov
int
xor
push
test
cli
loopne
jle
loope
iret
into
mov
or
dec
mov
out
divb
icebp
imul
test
and
dec
cwtl
cmpsb
loopne
sti
mov
cmpsl
sbb
pop
dec
inc
popa
lock
in
out
xor
mov
pop
pop
jmp
pop
js
and
mov
jb
push
fstpl
mov
xchg
sbb
mov
xor
pop
pop
cld
mov
and
dec
cs
sbb
test
sahf
and
or
cwtl
arpl
stc
mov
inc
pop
pop
pop
push
not
inc
pop
stc
push
inc
and
mov
cmp
cs
sub
fsubp
pop
dec
add
jnp
mov
repnz
and
and
sub
push
sbb
add
mov
sbb
or
push
sbb
xchg
pop
addr16
and
leave
arpl
jo
daa
and
dec
in
xor
xor
mov
dec
jl
add
mov
insb
adc
push
sub
sti
dec
scas
adc
push
pop
cmpsb
pop
add
movsb
test
xor
jp
cmpsl
std
aam
mov
mov
push
mov
idivl
movsl
xchg
jmp
jnp
arpl
dec
out
repnz
lock
pop
pop
jle
dec
pop
jbe
clc
inc
pop
sub
lds
lds
dec
stos
loopne
test
enter
ja
jle
sti
int3
ret
cmp
mov
insb
dec
dec
shlb
insb
cmc
cmpsl
cs
mov
out
outsb
cmp
mov
or
stos
fsubrs
and
insl
mov
mov
fdivs
jb
lds
adc
xchg
cmp
mull
imul
push
insl
shlb
and
sbb
pop
dec
jg
push
ficoms
jecxz
cmp
test
adc
int
rorl
add
lahf
jo
jge
andb
and
movsb
shl
jmp
leave
jns
mov
inc
aad
fadds
nop
lret
add
xor
aam
daa
jmp
shll
pop
mov
out
rorb
ret
jae
cmp
js
pop
enter
mov
xlat
cli
aam
push
movsb
ret
xchg
mov
xor
inc
xchg
int
mov
push
movsb
cmp
fldcw
ss
pop
sub
jb
sbb
gs
and
mov
add
add
dec
movsb
xchg
pop
inc
js
les
mov
rcr
ss
pop
mov
loope
insb
push
rclb
popf
js
and
mov
dec
push
mov
jmp
nop
lods
shll
mov
shlb
xchg
loopne
xchg
or
mov
or
push
hlt
movsb
cltd
out
fistpll
lods
mov
pop
in
les
sub
xchg
cmp
pop
movsl
inc
sub
cmp
fsubp
iret
and
ljmp
push
xchg
les
or
jbe
mov
jg
mov
fldenv
inc
xlat
mov
movsb
sub
ss
xlat
cmp
addl
aaa
adc
xor
cmp
xchg
je
mov
cmp
add
loop
xchg
mov
mov
lahf
stos
repz
cmp
vcvtsd2si
lds
imul
xchg
cmp
and
ljmp
sahf
out
cmp
jo
testl
sbb
mov
movsl
addr16
and
test
clc
ja
shrl
mov
push
xor
imulb
mov
enter
lret
jecxz
pop
fs
xor
repz
mov
fimuls
jg
push
jmp
xor
mov
lret
clc
dec
pop
movsl
mov
jae
cmpsb
cmp
dec
repz
inc
call
sub
cwtl
lods
inc
insl
pop
push
cld
xchg
sbb
fcmove
fiaddl
adc
and
fistl
fnstcw
sub
mov
outsl
adc
mov
cmp
fisubrs
es
xchg
mov
adc
in
or
inc
lret
aaa
inc
mov
fistl
adc
sub
stc
loopne
incl
and
faddl
aas
mov
add
add
pop
xor
add
add
add
add
rolb
add
add
add
mov
add
add
push
push
loopne
add
add
add
add
add
add
jo
add
add
add
add
add
ja
jbe
dec
int3
int3
int3
int3
nop
pop
add
add
add
and
and
roll
add
add
add
add
add
jp
cs
add
add
add
add
add
add
add
add
add
sub
dec
add
add
add
add
punpcklwd
arpl
in
and
fs
add
push
scas
mov
and
sti
mov
add
cmovb
add
xchg
or
decl
ret
jne
inc
incl
adc
jne
jne
cld
pop
decl
pop
es
dec
test
adc
pop
popa
lock
mov
mov
lret
pop
add
push
adc
mov
aam
or
inc
add
add
push
adc
xor
rolb
adc
call
lea
decl
jl
std
mov
xor
or
inc
cld
push
loopne
lock
push
adc
clc
incl
decl
dec
enter
sub
push
push
jne
lea
push
add
add
add
add
add
scas
add
xchg
add
add
add
cmp
cmp
out
add
xor
outsl
insb
push
dec
insb
inc
movsl
gs
inc
jne
inc
es
mov
outsl
movsl
mov
outsl
insl
je
imul
dec
insb
gs
fs
add
xor
insl
jne
push
xor
jae
push
gs
jae
jae
loopne
insb
fisubrs
add
add
add
push
add
add
add
stos
add
sahf
add
add
add
fiaddl
add
add
add
add
out
jae
or
fmuls
pop
leave
repz
mov
inc
aad
repnz
mov
dec
push
lods
cli
jbe
fimull
sti
nop
and
test
rolb
fs
adc
test
pop
push
mov
ret
sti
sbb
sbb
mov
add
sub
jp
pop
cmpsb
cmp
scas
add
push
jns
outsl
in
jnp
jmp
in
pop
gs
push
jno
lds
cmp
pusha
and
inc
pop
pushl
jl
hlt
rcr
push
mov
add
adc
adcb
adc
mov
cltd
dec
pop
loope
dec
fsubrl
mov
icebp
dec
push
sub
pop
lock
test
aad
jno
dec
mov
jbe
orl
imul
mov
hlt
lods
pop
addr16
loop
xor
lcall
bound
lcall
and
sub
aad
push
mov
fwait
sar
aaa
inc
sbb
inc
and
pop
pop
jp
fldl
lock
enter
je
or
xor
out
sbb
cld
cmpl
fs
sysret
lret
and
inc
or
pop
push
mov
pop
ret
shrb
gs
inc
lret
and
cwtl
out
cltd
icebp
mov
inc
jno
iret
rcrl
cs
lods
cmp
gs
cmc
popf
push
bound
sbb
push
repnz
scas
out
jno
testl
mov
popf
mov
mov
stos
shlb
scas
pop
movsl
pop
call
mov
test
inc
cmpsb
cmc
jmp
popa
pop
ja
sbb
adc
aam
das
cmpsb
scas
xlat
and
ljmp
gs
adc
jae
hlt
and
clc
pop
mov
call
lret
in
sbb
fnstsw
dec
jo
je
xor
ds
cmp
cmp
inc
js
inc
inc
adc
lods
jb
mov
jl
andl
call
rcr
sub
or
sbb
arpl
adc
sti
mov
icebp
mov
mov
sahf
adc
xor
jecxz
mov
clc
sub
sbb
lret
ret
push
in
bound
sub
outsl
cld
xlat
push
lahf
push
stc
dec
das
xchg
repnz
mov
inc
idiv
aam
push
in
jno
cmp
faddl
cmp
jmp
wrmsr
filds
mov
xchg
stc
sub
scas
xor
outsb
std
inc
or
jle
repz
repnz
shrb
push
adc
adc
xchg
jmp
adc
pusha
dec
mov
pop
pop
add
lcall
repz
stos
mov
jb
mov
add
pusha
or
pop
sbb
inc
insb
pop
push
dec
sub
ljmp
hlt
cltd
popa
repz
lock
fsubrl
aam
pop
lea
pop
cmp
sbb
lea
sbb
fnstcw
sub
loopne
sbb
push
push
call
out
dec
xchg
push
cmp
arpl
cmp
cld
cli
je
fs
loopne
xchg
xor
jns
sub
inc
pop
jmp
pop
movsl
fdivp
call
pop
cmc
inc
mov
push
shrl
xor
xor
mov
int
push
mov
xchg
adc
mov
ror
int3
sub
cmp
jl
mov
outsl
pop
push
loopne
sbb
test
insb
outsb
cmp
jb
aas
mov
mov
rcrb
and
es
pop
leave
xchg
outsl
call
jge
ss
daa
icebp
data16
cmp
or
push
cmp
push
add
add
cmpsb
addr16
out
mov
fisubrs
pop
inc
sbb
and
test
cmpsb
xor
lret
pop
sar
jg
xchg
adc
pop
mov
loopne
and
shll
sti
leave
test
or
or
inc
arpl
sar
popf
push
xor
jne
imul
jbe
cld
jno
imul
and
or
lea
and
js
and
cmc
jo
sahf
sbb
rcr
cwtl
xor
stos
mov
imul
push
push
cmp
xor
ficoml
mov
xchg
dec
xor
dec
jg
mov
fisubrl
lods
pop
jne
pop
lods
lahf
mov
out
enter
pop
lock
push
lahf
movntps
or
inc
fisttpll
movb
push
jno
xor
or
sbb
xchg
js
call
adc
mov
jne
sub
sahf
pop
gs
cmc
pop
leave
add
aad
mov
fimull
nop
pop
mov
ds
aad
imul
shll
xchg
push
xor
je
js
addr16
sub
movsb
and
inc
into
shl
lds
mov
inc
cmpl
das
xlat
adc
movsb
push
and
cmp
cmp
add
data16
jp
hlt
sbb
xchg
mov
or
imul
or
mov
pop
outsb
or
mov
dec
dec
arpl
call
add
xchg
jmp
ret
cmp
push
and
mov
lret
mov
iret
cmc
add
cmpsb
xchg
test
aaa
lods
sub
push
sbb
adc
loope
mov
dec
scas
inc
out
fwait
shll
jmp
jnp
mov
pop
shll
add
nop
jge
mov
sbb
out
les
pop
cmpsb
cmp
dec
mov
push
mov
ljmp
adc
cld
insb
clc
idivl
dec
sbb
ret
in
adc
push
decb
scas
test
jp
mov
imul
jne,pt
ret
out
rcrb
int
mov
xor
negb
jmp
neg
add
lods
push
jge
fcompl
hlt
pushf
pop
dec
pop
push
add
push
aam
adc
lods
popf
mov
test
pop
ss
inc
inc
mulb
aas
sbb
cmp
dec
adc
in
pop
fisubl
mov
and
addr16
and
stos
dec
dec
in
leave
imulb
enter
or
sbb
in
fs
or
cmpsl
fmuls
pop
in
mov
mov
faddl
aas
fsubp
dec
mov
in
call
movsl
out
stos
sarb
mov
icebp
mov
cwtl
add
repnz
mov
cmp
and
ljmp
jmp
and
mov
mov
mov
scas
mov
loopne
push
push
popa
jmp
mov
pusha
push
lods
lods
jns
jl
icebp
or
sbb
cmp
insb
out
stos
flds
aam
lret
adc
sahf
leave
lea
mov
add
xchg
xchg
scas
inc
mov
int3
sbb
lods
loope
lds
pop
add
mov
mov
push
sub
xchg
icebp
cmpsl
dec
in
sub
pop
popa
mov
in
icebp
fs
mov
jl
inc
mov
das
aaa
sti
cmp
popa
scas
aam
cmp
add
lcall
arpl
mov
cmp
stos
fwait
arpl
test
jo
arpl
jl
les
adc
js
pop
jb
cmp
iret
fnstsw
adc
and
inc
push
fdivr
in
xchg
stos
call
push
adc
inc
mov
aas
push
les
push
out
cmpsl
push
jl
insl
mov
dec
out
adc
xchg
cli
aad
jmp
push
mov
enter
popf
outsb
frstor
cmp
adc
push
fisubs
cmpsb
dec
cmc
sti
in
add
sti
cmc
cmc
mov
int3
dec
and
out
leave
outsb
aas
cli
fcoms
jmp
adc
cmp
bound
dec
arpl
es
loope
sbb
xchg
rcrl
lea
sub
inc
push
rolb
jmp
roll
movb
xorl
pop
in
nop
outsl
and
nop
jl
adc
push
aam
fwait
add
shrb
mov
and
iret
sbb
jge
pop
addr16
add
stc
ret
imul
add
ror
shll
mov
push
gs
in
pop
rcrb
push
mov
in
push
jo
or
std
ret
ret
dec
cld
das
outsl
adc
int3
es
test
sarl
rcrb
pop
into
xchg
cmp
mov
out
lcall
movsb
inc
out
lahf
mov
ficoml
fdivp
add
xor
cwtl
mov
icebp
je
mov
jns
sub
jecxz
loope
cmp
inc
je
cmc
jb
subb
bound
jne
adc
outsb
mulb
popa
cmp
jmp
and
mov
xor
sub
enter
sahf
mov
sahf
cmc
into
mov
loopne
aas
and
pop
xchg
lods
in
lret
cmp
adc
fmull
loop
jl
mov
insb
lret
idivb
or
xor
adc
lcall
xchg
lret
popf
mov
test
add
push
rclb
jg
sub
add
aas
inc
lea
and
das
sbb
into
lods
xor
scas
lahf
mov
push
push
and
test
add
dec
cmp
int
hlt
cli
xchg
movsb
arpl
xchg
lahf
es
stos
in
mov
jnp
lock
fs
jg
push
cmpsl
inc
and
mov
dec
or
xor
push
xchg
xchg
jbe
mov
in
add
cli
insl
mov
cmp
dec
aas
cmp
and
inc
cmp
or
xchg
sub
aaa
dec
cmp
and
cmp
insb
mov
lods
xchg
pop
push
sbbb
stc
pop
sub
shl
imul
mov
lahf
rcrl
incl
inc
subb
lret
and
call
pushf
clc
pop
push
xchg
mov
aam
enter
into
lcall
fsubs
test
mov
xor
rorb
fdivrs
push
jo
rclb
outsl
mov
cmpsl
aaa
push
xchg
mov
cmpsl
mov
cltd
cltd
outsl
pop
push
push
push
add
das
lcall
adc
push
es
and
push
scas
call
cli
icebp
testb
clc
clc
add
loope
add
cmp
pop
pop
mov
popa
adcb
testl
sub
jnp
pop
ds
push
leave
mov
sbb
xor
je
mov
addr16
sub
adc
mov
push
lahf
stos
jae
sub
das
sbb
fidivrs
insb
scas
sub
sub
cmp
enter
pop
adc
pop
add
pusha
lods
dec
xor
shl
movsb
dec
adc
dec
sub
in
movsb
and
mov
lea
lahf
sahf
jnp
lcall
imul
adc
mov
push
inc
xchg
mov
xchg
cmp
push
lods
mov
xchg
cmp
testb
xchg
cltd
aad
mov
xchg
nop
ds
jmp
dec
sub
lcall
int
sbb
xor
add
js
cmp
movsb
stos
scas
adc
cmp
in
and
cmp
xor
out
ret
and
fadds
rorl
ret
inc
cmp
xor
add
addr16
gs
dec
shll
push
dec
rclb
pop
mov
gs
out
pop
or
push
cmp
lds
xchg
shlb
icebp
cmp
fstl
daa
pop
sub
loopne
cli
xchg
mov
cmp
arpl
lods
imul
shrb
mov
xlat
xor
subl
popa
mov
ljmp
cwtl
inc
pop
mov
lock
dec
pusha
xor
andl
mov
dec
sub
add
fadd
stos
int3
mov
mov
cld
inc
and
cmp
xchg
stmxcsr
xor
insl
add
xor
addl
add
in
mov
dec
jbe
pop
call
shlb
pop
negb
mov
push
inc
push
out
or
decl
scas
arpl
pop
xorb
arpl
gs
xor
mov
xlat
in
xor
cwtl
mov
loope
jno
aad
insb
add
loop
mov
cli
push
and
mov
insl
pop
repnz
add
call
adc
cmpsl
pop
cmp
push
and
mov
dec
dec
add
fcomi
jbe
inc
cli
ds
adc
das
and
cmpsl
dec
arpl
jne
out
pop
lods
ss
mov
repz
jg
rorl
lods
cmp
out
adc
ljmp
mov
mov
adc
ss
jbe
jg
in
push
rclb
inc
jge
cmpsl
mov
push
hlt
stos
in
mov
cmp
jno
lods
out
or
std
in
cmpsl
lcall
sub
mov
fldt
sbb
push
aad
jb
cld
xor
and
dec
mov
inc
jae
fcomps
push
jl
aad
cwtl
pop
push
iret
dec
adc
lcall
movsl
lret
fidivs
in
mov
dec
xor
ret
jbe
and
repnz
shrl
shlb
and
push
subl
ret
jno
lock
gs
or
push
in
mov
lods
cmpsl
adc
add
loop
push
lret
adc
out
push
mov
pop
gs
push
stc
dec
pop
imul
sbb
imul
pop
and
jl
lea
mov
mov
lock
cltd
mov
or
out
gs
mov
mov
sub
je
ljmp
inc
inc
fcmovne
icebp
inc
daa
sbb
test
imul
cmp
iret
adc
mov
add
push
mov
jg
add
pusha
xor
pop
cmp
xor
pop
cmp
in
jb
loopne
scas
decl
bound
ja
sbb
mov
dec
clc
lahf
das
loope
jbe
movsb
in
add
xor
sub
jo
pop
pop
mov
imul
sbb
adc
push
jle
mov
pop
test
out
and
pop
xchg
lods
movb
fnstenv
lcall
addr16
into
les
shl
pop
dec
shr
mov
testb
call
inc
incl
xchg
and
pop
cmpsb
pushf
jmp
repnz
out
pop
gs
hlt
jp
cmp
xchg
std
aas
movsl
xchg
adc
lahf
repz
jo
test
repz
or
inc
jb
push
and
xor
mov
shl
xchg
adc
repnz
enter
fwait
jl
repnz
frstor
enter
lea
mov
jp
movsb
jne
inc
inc
sahf
in
insl
push
jno
stos
jg
fadds
push
movsb
gs
adc
ror
mov
dec
mov
andb
ret
inc
cmp
jecxz
lahf
pop
lcall
gs
ss
das
jge,pn
mov
sbb
mov
repz
jl
les
mov
cmp
fidivrs
out
movsb
sbb
sbbl
movb
lea
leave
push
mov
stos
test
lcall
add
mov
dec
dec
jnp
push
push
test
pop
push
in
adc
push
sbb
stos
mov
add
pop
bound
adc
or
lahf
add
dec
aam
out
fdivp
xchg
ss
ja
sarb
stos
mov
inc
inc
dec
shl
mov
cmp
mov
push
pop
sub
mov
cmpsb
jb
loopne
cmpsb
pop
imul
xchg
and
inc
das
das
iret
pop
mov
add
and
dec
in
adc
xchg
cs
sbb
scas
lahf
xor
ret
sbb
add
xchg
pushf
stos
pop
enter
hlt
outsl
pop
les
mov
lahf
xchg
mov
adc
fisttpll
adc
xchg
and
mov
adc
stos
rcr
xchg
and
stos
adc
jg
imul
ret
js
repnz
xchg
xor
leave
push
out
push
enter
sbb
mov
aad
adc
and
out
fcoml
mov
loope
sbb
adc
out
mov
jge
cmp
jb
mov
cvtps2pi
imul
xor
cmp
pusha
push
mov
fcoms
dec
add
loopne
adc
cmpsl
bound
add
idivb
pusha
cmpl
mov
iret
mov
mul
xor
push
pop
imul
or
jmp
dec
arpl
andl
mov
dec
lret
repz
outsl
push
ja
lahf
test
aaa
mul
js
or
enter
jnp
mov
push
pop
lods
std
mov
sbb
nop
test
repnz
cli
mov
sbbl
pusha
adc
xor
push
dec
jne
adc
loope
loopne
pop
mov
pop
lcall
sbb
mov
or
inc
and
cli
cld
push
push
lcall
test
nop
out
adc
aas
xchg
jae
add
dec
fisttpl
mov
xor
add
sbb
dec
fstpl
cmc
push
cmpsl
jmp
lahf
pop
push
mov
jl
repz
loopne
popf
cli
mov
xor
push
pushf
mov
pop
pusha
rcll
adc
xor
je
pop
ret
and
mov
into
inc
icebp
and
sub
jg
test
pop
imul
mov
mov
inc
xchg
add
out
pushf
roll
or
and
movsl
leave
into
cmp
lss
sbb
sahf
scas
inc
push
jp
fdivrs
jecxz
daa
lret
xor
inc
xchg
jg
in
outsb
cmc
out
xor
ja
cltd
leave
jb
repnz
inc
mov
mov
movsl
lahf
xchg
in
jmp
cs
push
xchg
out
pop
sbb
xor
mov
sbb
dec
imulb
loope
jecxz
add
lods
push
xorl
pop
jp
out
mov
add
or
add
add
add
add
add
add
add
mov
add
add
add
add
push
add
add
add
pop
add
add
add
add
imul
add
add
add
add
add
or
in
in
in
sahf
add
add
add
addb
dec
incl
stos
stos
add
popf
ja
mov
js
js
int3
int3
int3
int3
add
add
add
xorb
add
add
add
add
ret
lods
add
add
xor
add
add
add
add
push
add
outsl
xor
sbb
sbb
sbb
cmp
std
sbb
sbb
and
pop
js
add
imul
outsb
add
push
push
aaa
add
xchg
pop
mov
or
add
orl
add
test
inc
test
and
push
add
ret
add
decl
repz
out
push
test
mov
incl
inc
xchg
inc
add
rolb
add
adc
leave
adc
incl
add
sti
add
mov
add
xor
add
mov
push
push
adc
loopne
jmp
inc
dec
or
inc
lods
push
adc
lock
push
add
call
adc
call
adc
cmp
inc
add
incl
mov
add
add
add
xlat
pop
or
add
add
ficompl
sbbb
sbb
sbb
sbb
sbb
add
push
add
je
jae
pop
outsl
dec
imul
inc
jae
imul
inc
insl
popa
outsl
inc
popa
inc
outsl
popa
jo
insb
outsl
add
add
insb
inc
gs
add
add
dec
jbe
fs
insb
push
push
add
add
add
repz
arpl
add
rcr
add
add
xlat
mov
cltd
jl
stc
jbe
sub
pop
mov
pop
mov
jecxz
jmp
or
daa
fwait
or
arpl
loop
popf
and
lock
pop
popa
cli
sub
sub
xor
inc
pop
jmp
or
sbb
insb
fwait
mov
ret
push
sub
scas
repz
adc
call
loope
mov
cmp
sub
fmul
adc
ss
push
cltd
mov
pop
in
or
movsb
mov
call
shrl
lcall
cmpsb
test
xchg
andb
fstl
mov
or
lret
sub
addr16
push
jp
pop
xor
and
mov
out
movsl
pop
xor
popa
in
scas
aam
and
mov
repnz
xor
xchg
jp
ficoms
mov
add
and
out
add
mov
test
loope
insb
xor
fiaddl
mov
nop
movsb
call
inc
adc
xchg
mov
adc
mov
js
cwtl
xchg
add
aas
in
add
sbbb
std
bnd
daa
scas
cmp
and
loop
xlat
inc
fstps
or
and
arpl
xchg
push
stc
mov
movsb
cmovs
jo
add
and
add
mov
orl
fs
inc
xor
xchg
pop
ja
fstps
push
fwait
out
cmp
xor
xor
xchg
pop
mov
sbb
adc
adc
xchg
cld
sub
outsl
flds
ds
adc
iret
jecxz
push
adc
pop
push
gs
pop
push
out
inc
dec
jb
mov
cmp
pop
mov
dec
dec
sub
ja
fdivrs
mov
add
xchg
cmp
pop
mov
xchg
or
jecxz
push
je
sbb
xchg
mov
cmpsl
and
mov
pusha
clc
mov
jbe
js
xor
out
jmp
cmpsb
ds
stos
add
mov
cli
movsb
out
cwtl
aaa
cmp
mov
fdivrp
outsb
mov
mov
pop
and
out
add
xorl
jbe
lret
out
lods
pop
xor
out
push
in
clc
xor
out
js
jg
loopne
outsb
sub
dec
xchg
xchg
adc
or
daa
jns
mov
xchg
push
mov
push
daa
loopne
push
dec
sbb
pop
inc
inc
dec
jns
gs
jmp
dec
pop
imul
or
mov
jmp
xchg
aas
mov
push
adc
stos
push
jp
sub
les
lods
add
sbb
xchg
int
and
out
ljmp
out
lret
add
gs
or
or
outsb
and
and
adc
jg,pn
add
shl
ljmp
xor
cli
cmp
jbe
cmp
jne
xchg
add
adc
push
out
jp
jecxz
mov
shlb
push
and
imul
rcr
mov
je
push
xchg
repnz
out
push
in
mov
stc
das
fsts
js
scas
in
pop
js
inc
mov
xchg
mov
pop
outsl
icebp
popl
mov
push
dec
xchg
xadd
jbe
cwtl
adc
jbe
dec
rclb
int
lods
lret
mov
enter
jns
imul
aad
cmc
xor
pop
push
loope
lea
rcll
jp
test
sub
mov
stos
jnp
frstor
mov
stc
jmp
cmp
mov
addr16
cld
pop
push
clc
clc
loope
jg
sti
adc
arpl
sub
pop
loope
lret
push
in
xchg
sbb
xchg
jns
mov
xor
mov
adc
imul
loopne
call
pop
jae
push
into
xchg
addr16
push
es
outsb
out
inc
adc
mov
sbb
hlt
loop
scas
cli
ss
pop
cmp
in
sub
and
jns
aas
stos
addl
mov
jge
mov
inc
mov
adc
mov
out
sti
sti
xchg
daa
sub
cmp
or
shll
jns
cmp
adc
inc
repz
lock
dec
or
addr16
jmp
push
or
repnz
mov
jmp
mov
jp
jge
test
pop
mov
lret
fildl
mov
rolb
mov
bts
lret
jb
lods
sub
repnz
ret
std
stc
cli
sahf
pop
movsb
add
xor
fnstcw
dec
pop
dec
dec
insl
sbb
in
xchg
lcall
in
mov
sub
push
dec
out
xor
cwtl
gs
cmpb
inc
lea
cltd
ja
lret
pop
aas
pop
cwtl
pslld
out
fwait
test
add
mov
xor
mov
add
lcall
mov
jg
pop
xchg
mov
lahf
xchg
push
dec
out
les
sbb
movsb
out
mov
xor
std
mov
fs
roll
and
jmp
push
imul
fldcw
mov
inc
dec
sbb
adc
call
inc
dec
xlat
daa
push
cmp
or
popl
pop
mov
add
ret
jae
std
pop
push
sub
lods
cld
sub
cmpsl
fisttps
outsl
idivb
ficompl
xchg
dec
cmpl
or
push
sub
add
adc
cli
pop
sahf
mov
xchg
xchg
jnp
sub
test
rcll
sub
shrb
pop
fdivl
pop
outsb
or
add
cli
lods
nop
in
loope
jge
pop
xor
push
or
ficomps
sbb
mov
or
negb
push
or
fyl2x
xchg
jns
push
mov
rolb
aaa
mov
cmp
xor
mov
push
xor
rcl
push
mov
enter
pop
pop
out
mov
imul
adc
mov
pop
outsl
arpl
out
repnz
js
pushf
mov
adc
daa
mov
out
lahf
shlb
inc
iret
mov
into
ljmp
push
inc
out
cwtl
movsl
lds
fidivl
lret
aaa
dec
into
sbb
out
inc
vpsubw
sub
xchg
sbb
and
push
cli
sahf
xorb
sub
inc
loopne
sbb
rolb
mov
enter
mov
movsl
lcall
xchg
push
xor
jmp
lcall
int3
ficoml
mov
sbb
fistpl
pop
movsl
inc
movsl
mov
into
test
adc
pop
rclb
add
push
mov
sub
cmpsl
ficoms
pop
jns
cld
adc
sbb
and
push
cli
movsb
push
imul
mov
dec
jp
mov
insb
xchg
mov
or
or
mov
sub
icebp
fstps
jle
and
dec
or
cmpsl
cli
or
xlat
es
push
or
dec
mov
cmp
mov
mov
jge
and
ficompl
mov
sub
jl
xchg
cmp
jne
mulb
xchg
test
scas
aam
movsl
cmp
les
xchg
gs
scas
nop
lods
dec
or
int3
xchg
arpl
mov
ds
in
out
mov
ljmp
and
sahf
and
arpl
hlt
in
pop
dec
xchg
into
dec
and
lods
jp
fs
adc
push
shll
sti
adc
ljmp
cmp
or
les
pop
mov
cmp
lret
outsl
push
jg
loope
adc
dec
int
and
test
xchg
pop
inc
aaa
sar
iret
lahf
mov
adc
mov
out
inc
jp
push
dec
pushf
dec
mov
adc
imul
cld
shll
adc
dec
shr
aam
push
push
jbe
pop
sub
out
cmp
pop
cmp
jp
ds
test
imul
inc
xchg
push
sub
sub
mov
cmpsb
lahf
push
call
ja
push
or
rcll
add
mov
cmp
xchg
cmp
mov
pop
jb
cmp
les
sub
stc
mov
cmp
daa
repz
sub
mov
outsb
sbb
xchg
mov
es
rolb
and
cltd
mov
rorb
test
int
pop
add
sub
pop
jmp
or
lods
fwait
rorb
jge
cli
mov
sbb
aad
test
mov
cmpsb
pop
jecxz
sub
xchg
jno
rorb
jo
mov
xchg
or
ja
sbb
jecxz
fisubrl
dec
mov
jb
lahf
mov
jle
mov
jne
neg
icebp
xlat
inc
push
aad
xchg
addl
inc
mov
dec
cmp
popa
cwtl
loop
dec
fs
pop
pusha
rolb
pushf
pop
arpl
add
test
ss
xor
xchg
and
jecxz
jle
lahf
cmpsb
xchg
aam
adc
addr16
cltd
jnp
mov
dec
sbb
cmpsl
push
dec
out
mov
js
into
mov
mov
pop
sahf
js
lds
test
mov
adc
in
jae
add
sbb
sbb
pushf
sub
std
loopne
inc
adc
test
cmpsl
jnp
add
arpl
mov
xchg
dec
or
loop
sbbl
xlat
popf
mov
jb
cli
stos
inc
fistps
jo
push
inc
or
test
pop
sarl
imul
pushf
fdivrp
mov
insl
call
rcl
adc
and
mov
gs
lds
stc
cmp
push
shrl
stos
xlat
mov
pushf
inc
sub
and
xchg
mov
int
or
and
and
xchg
out
mov
repz
push
hlt
subl
loope
rclb
addr16
neg
lahf
outsb
das
mov
icebp
cmc
filds
inc
test
enter
shl
loop
shlb
or
xor
cmp
scas
fcoms
dec
test
mov
pushf
andl
stc
icebp
sbbb
adc
mov
pop
dec
xor
dec
push
inc
stos
mov
add
icebp
mov
jl
pusha
jmp
adc
mull
sub
add
or
bswap
cwtl
cmp
std
inc
aaa
pushf
in
and
xor
lahf
ljmp
lret
pop
cmp
mov
ret
cmc
out
mov
popa
aas
popf
push
dec
xor
or
pop
les
and
or
sti
mov
outsb
ficompl
pop
mulb
dec
jmp
ret
arpl
mov
fdivrl
loope
adc
xchg
jae
or
adc
mov
mov
fs
cmp
add
sbb
add
jb
sbb
movsl
add
mov
cmp
or
xor
dec
lds
fsubrs
aaa
mov
pop
xchg
mov
fisttpll
jp
inc
and
fdiv
pop
not
bound
cmp
sbbb
aaa
mov
xchg
fbstp
push
jl
sub
lods
in
sub
das
je
xchg
outsl
js
cmp
les
ss
aad
in
les
sub
std
ss
push
outsl
stos
and
arpl
add
decl
addl
lock
sub
jge
push
sub
ja
xchg
lods
aam
add
fnstsw
sub
sbb
rcrl
inc
int3
sub
aam
mov
aad
mov
or
cmpsl
sub
sbb
incb
fisubs
mov
mov
push
ja
sarl
adc
dec
faddl
cmp
push
xchg
ficomps
sti
fdivrl
lds
cmp
negb
ret
xchg
outsb
je
andb
jbe
sbb
repz
push
sub
xchg
stos
or
aad
lahf
xor
lahf
loopne
shrb
fstpt
lret
pop
xchg
xchg
outsb
nop
dec
push
mov
dec
inc
in
std
cmpsl
cmc
adc
cmp
aaa
ja
cmp
jg
sti
pop
xchg
in
sbb
xlat
sbb
rclb
lock
lret
pop
imulb
loop
stc
mov
dec
dec
es
pop
pop
xor
in
or
shr
cmc
inc
adc
and
and
add
leave
pop
orb
and
xchg
pop
mov
pop
dec
sbb
sub
movl
out
fidivs
jecxz
push
jmp
jp
ret
syscall
in
andl
test
xor
xchg
jp
lea
mov
xor
icebp
and
psrlw
adc
pop
adc
in
pushf
rclb
cmp
add
jl
inc
dec
aad
cmp
divl
jae
jp
cmpsl
push
push
std
jne
mov
jg
loope
mov
push
inc
in
andl
xchg
xchg
ret
mov
std
into
xchg
sbb
jge
fadds
sub
xor
call
jmp
repnz
adc
push
shrl
xchg
sub
test
or
xchg
cmp
xor
in
iret
jl
lds
dec
movsl
shll
fadds
data16
roll
mov
mov
or
sbb
les
sti
lcall
xchg
fisttps
sti
dec
lcall
push
shrb
sbbb
add
in
pop
sbb
cwtl
insl
add
adc
push
test
rcl
aam
xor
pop
cmp
jbe
dec
enter
out
insb
fildll
loop
adc
add
mov
xchg
lea
inc
orl
mov
test
sub
cmp
and
int3
loop
inc
stos
in
shl
sbb
push
cmp
in
subb
and
xchg
mov
add
popa
jecxz
inc
push
dec
adc
dec
std
adc
outsl
jno
cmp
clc
sbb
inc
jne
cs
movsb
xor
out
out
ja
cli
shll
xchg
xchg
mov
mov
bound
js
sti
notl
jge
cmp
pop
push
call
and
pop
cwtl
lret
ljmp
mov
or
and
cwtl
jg
arpl
push
cmpsb
outsl
idiv
xchg
movsb
mov
sbb
ret
test
mov
andl
movsl
arpl
mov
bound
or
and
mov
dec
pop
lret
dec
into
rolb
mov
sub
push
xchg
int3
test
cmp
xor
outsb
scas
and
in
movsb
in
pop
ja,pt
xchg
push
xchg
or
pop
std
pop
pop
sub
ret
sbb
add
pop
aam
push
and
and
mov
ds
out
mov
dec
divl
lcall
out
dec
ret
or
notl
mov
data16
jl
or
data16
fnstcw
cmp
scas
dec
pop
xchg
push
std
jnp
mov
or
and
sbbb
adc
call
xchg
push
mov
imul
lret
aaa
adc
fidivrl
pop
mov
aaa
mov
xchg
cwtl
jle
dec
and
pushf
inc
rcrl
sub
pusha
into
push
xchg
shlb
sub
adc
dec
arpl
inc
outsb
test
jns
pop
rcrl
stos
mov
inc
stos
daa
subb
pop
push
xabort
push
das
hlt
or
in
jl
icebp
xchg
out
fcmovu
adc
jl
les
int
aaa
out
fistl
xor
ret
data16
fcomps
push
dec
jbe
add
mov
jmp
je
dec
stc
repnz
arpl
out
push
movsb
sahf
xchg
aas
testl
test
mov
add
mov
jle
mov
iret
xorl
dec
rolb
pop
xor
cltd
fcoms
sbb
rorb
dec
adc
add
add
std
xlat
and
sbbl
pushaw
dec
lahf
movsb
lret
or
cltd
inc
mov
push
cmp
fsubrp
clc
insl
int
stos
cmp
pop
add
push
pop
lea
int
mov
scas
sub
stos
setbe
mov
outsl
xchg
inc
mov
bound
int
jle
pop
lods
pop
pop
cmp
es
shrb
xchg
cmpsb
jl
mov
mov
loope
xor
dec
mov
sbb
xchg
or
dec
andl
push
lea
xor
jmp
mov
adc
xor
xor
clc
dec
sub
mov
js
scas
rolb
mov
lods
enter
mov
xchg
push
sub
test
sub
jnp
jle
pop
mov
mov
jns
test
loope
mov
and
sub
imul
push
sub
dec
ret
or
cld
sub
int
aam
aas
jmp
jo
int
add
cmpsb
daa
testl
adc
adc
xchg
adcb
into
pop
loope
pop
cmp
jmp
daa
pop
mov
clc
nop
jno
stos
xor
cmpsb
lret
lcall
leave
mov
mov
lods
bound
rcll
aas
mov
pusha
sahf
inc
mov
xchg
pop
int
and
pop
popa
sbbb
mov
inc
jbe
pop
jb
mov
mov
js
ret
call
in
cli
xchg
sub
pop
mov
arpl
mov
xor
xor
xorb
dec
mov
loop
in
mov
stc
adcb
mov
mov
and
stos
mov
dec
and
xor
mov
mov
mov
mov
imul
mov
or
xchg
ljmp
push
xor
cmpsl
mov
or
lea
movsb
lods
mov
fisubl
notl
imul
inc
dec
xchg
scas
loope
sti
lret
push
scas
leave
lahf
or
sbb
or
xchg
clc
push
iret
popa
cwtl
xchg
addr16
sbb
fwait
jecxz
jne
pop
ds
dec
xchg
outsl
add
insb
add
in
jae
jecxz
add
dec
add
pop
add
add
test
add
add
fadds
add
add
ret
lods
add
add
and
add
add
add
add
add
xor
addb
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
add
add
add
add
add
fiaddl
dec
add
add
adc
adc
add
dec
add
add
insb
add
add
add
adc
add
je
or
add
add
inc
jb
add
add
add
sbb
sbb
sbb
push
sbb
sbb
ret
push
dec
jb
push
jb
outsl
outsb
dec
dec
jo
xor
add
sub
inc
fidivl
dec
pop
add
ret
inc
clc
adc
add
add
in
add
mov
inc
xor
decl
incb
pusha
pop
incb
lock
pushf
inc
imul
pop
leave
mov
or
xor
add
inc
adc
movsl
inc
mov
fcompl
jmp
in
push
incl
adc
je
test
adc
mov
cmp
test
incl
adc
test
je
rorb
and
cmp
sub
add
add
clc
push
or
lcall
lret
cmp
push
xor
push
push
decl
add
push
pop
pop
push
adc
sbb
add
add
add
push
sbb
add
sbb
or
xor
jb
je
js
outsl
add
je
add
outsl
inc
add
gs
outsb
add
gs
dec
sbb
jae
outsl
imul
push
xor
push
test
gs
add
outsl
add
inc
je
add
xor
inc
xchg
xor
rolb
push
add
xor
add
add
mov
add
cmpsb
adc
xchg
add
mov
add
test
and
fdivr
adc
sub
add
mov
pop
rcrb
jne
jo
outsb
rclb
xor
repnz
cmpsl
in
jge
cmc
call
fcoml
arpl
out
pop
insl
lods
jne
jns
jb
add
jns
fcomp
jo
fisubl
lret
xchg
and
xchg
pop
insb
cmpsl
loop
ja
xchg
and
push
fcompl
pop
push
bound
add
and
jbe
xor
ds
xchg
sbbb
pushf
sub
push
imul
xchg
fldcw
cs
inc
insb
mov
pushf
mov
mov
arpl
sub
lahf
jg
repnz
dec
xchg
xchg
mov
stc
push
sub
or
push
and
cmp
and
sbb
mov
push
shll
test
sub
adc
xor
mov
std
adc
cmpsl
sti
test
jmp
push
pusha
push
jmp
cmp
repz
orl
aam
inc
xchg
inc
shrb
addl
fwait
inc
dec
push
pop
and
jp
cmp
pop
pop
std
shlb
push
inc
sbb
pusha
jecxz
loop
pop
jle
in
ja
ljmp
adc
in
push
addr16
out
or
xor
insl
mov
dec
jne
repnz
scas
shll
add
hlt
inc
ss
adc
mov
and
out
popf
push
outsb
add
fidivrl
or
addr16
in
mov
cld
test
inc
mov
popa
xor
shrb
clc
pop
nop
iret
mov
add
pop
js
popf
loopne
das
out
ja
and
cs
xor
mov
and
into
mov
inc
aam
sahf
lods
sbb
jo
fwait
sbb
mov
sbb
push
adc
ja
inc
mov
add
in
sbb
pop
adc
sahf
outsb
pop
pop
jmp
sbb
bnd
ret
dec
sbb
inc
xor
jge
xor
sbb
dec
pop
aam
sub
call
dec
movsb
sahf
stos
lds
and
and
fildl
add
cmpsb
lock
inc
leave
sti
add
push
mov
gs
test
mov
inc
mov
subl
decl
loopne
fisubrs
jmp
inc
dec
jg
jecxz
sub
test
testl
push
iret
es
pop
push
popf
and
jo
or
push
insb
jg
and
movsb
stos
or
sbb
mov
hlt
push
insb
mov
psllw
ljmp
lods
mov
aas
add
or
and
or
push
xor
test
fimuls
js
pop
rorb
add
stos
imul
loop
leave
in
lahf
xchg
aaa
and
adc
mov
xchg
xor
ja
fs
dec
test
lret
lods
mov
in
clc
dec
cmpsb
adc
add
rcr
pop
sub
mov
mov
cmp
and
add
dec
sbb
jp
and
jle
or
jmp
nop
add
mov
xor
mov
dec
mov
pop
and
xchg
mov
movq
cmp
push
dec
ffree
das
xor
popf
outsl
lret
xor
loope
jge
dec
and
xchg
inc
mov
mov
adcb
lods
pop
sub
and
cmp
dec
nop
dec
add
movsb
mov
nop
scas
mull
mov
mov
das
xchg
push
inc
mov
in
arpl
jb
xlat
fldl
and
clc
popf
int
imul
andl
loop
sub
pushf
xchg
and
cmp
loop
test
mov
fcoml
adc
fidivrl
lret
sub
sub
imul
adcl
int3
and
mov
lds
fucomip
jnp
xchg
xchg
sahf
lret
jnp
jmp
push
jns
lods
inc
jnp
push
jbe
aad
cld
xchg
sbb
ret
jg,pt
loopne
cmp
ret
jp
or
or
fscale
and
fsubr
or
push
popl
adc
sbbl
test
lret
je
aad
mov
les
xlat
enter
out
enter
filds
xchg
fdivs
jmp
push
stos
pop
mov
ljmp
sbb
add
call
outsb
xor
push
out
cmp
imul
fists
push
adc
addr16
pop
dec
dec
sar
lock
jg
pop
mov
lea
popf
cmpsl
lock
cmp
mov
lcall
in
sub
xchg
push
sti
movsl
orl
sub
mov
xchg
lock
mov
loope,pt
ficomps
outsb
mov
mov
repz
dec
pop
mov
test
shrb
daa
nop
push
out
test
push
mov
repz
lods
xchg
int3
sbb
jg
lret
lcall
pusha
ror
lahf
into
sbb
or
push
xchg
les
fistps
add
lahf
xchg
add
sub
jle
add
fs
or
push
push
gs
jecxz
aam
jns
aam
push
aas
cmp
xchg
aaa
loop
mov
mov
mov
mov
in
lods
pop
cmp
xchg
ja
or
jb
test
mov
shrb
sbb
and
sub
push
ljmp
lcall
stos
adc
hlt
imull
nop
scas
dec
sahf
mov
xor
add
push
loop
and
sbb
call
xor
mov
xor
stos
push
add
imul
lea
mov
cmp
jno
stc
jo
pop
daa
pop
jecxz
dec
dec
leave
test
mov
in
mov
mov
insb
mov
aam
push
mov
popa
aas
sbb
jge
int
bound
iret
sbb
push
lret
out
loop
pusha
mov
fisttpll
enter
sbb
push
sbb
push
enter
pop
sub
mov
and
inc
sbb
dec
cmpb
pop
dec
sarl
pop
pushf
popa
outsb
inc
dec
js
test
gs
and
sub
mov
repz
test
adc
dec
ljmp
mov
cli
sub
or
jle
push
pop
dec
movsl
dec
jne
xchg
inc
out
dec
and
and
inc
adc
mov
pop
cmc
loop
jecxz
insl
fucom
stos
pop
inc
fsubl
iret
decl
cli
sub
test
in
scas
xchg
pmaxsw
call
cmp
loopne
lods
loopne
scas
arpl
int3
test
stos
sub
lods
arpl
sub
shl
push
fmull
movsb
or
inc
in
cmp
pop
add
mov
nop
adc
add
dec
mov
jmp
dec
jecxz
and
pop
sbb
insl
and
adc
mov
xor
xchg
pop
rcrb
sahf
and
pop
lret
popa
sub
inc
pop
movsb
dec
out
xchg
sub
out
dec
mov
lds
inc
aad
cmp
jle
das
xchg
loop
sahf
sbb
inc
push
jnp
lea
xchg
xor
sbb
adc
fistps
dec
cmpsb
repz
sbb
inc
pop
rolb
in
jbe
stc
push
mov
add
or
mov
dec
sub
int3
subb
iret
pop
shll
jnp
xor
inc
les
jo
jnp
dec
or
hlt
and
inc
push
jg
pusha
pop
popf
mov
pop
cmpsb
mov
sub
sub
mov
jmp
xlat
cwtl
sahf
adc
aad
clc
shlb
cmp
arpl
test
jae
imul
rorl
add
orb
xorl
jle
push
dec
arpl
in
push
or
fdivs
pop
pop
sahf
aaa
mov
pop
pop
movsb
rcrl
hlt
lea
mov
sub
sti
dec
cli
cli
sub
cltd
daa
mov
lret
nop
loopne
mov
pop
mov
pop
jae
fldl
sbb
outsb
xor
jnp
outsl
mov
jmp
leave
daa
into
loope
or
shrl
add
inc
xor
xchg
mov
push
in
cltd
sbb
xor
lea
fsubrl
xor
mov
jns
cmpsl
in
fdivrl
adc
dec
mov
loopne
mov
mov
xchg
or
xor
test
add
xchg
in
ret
adc
cmp
lds
test
rclb
je
pop
mov
sbb
jo
mov
subb
je
bound
cmpsl
xor
test
insb
xchg
lock
xchg
fdiv
iret
lahf
popf
popa
lret
loop
sbb
mov
scas
xlat
cmp
sbb
outsb
rclb
jecxz
xrelease
push
das
mov
mov
fs
or
sbb
inc
dec
enter
test
push
push
mov
jmp
lods
inc
daa
pop
push
popf
xor
stos
xchg
iret
mov
xor
ret
xchg
imul
push
lret
xchg
es
movsb
sbb
dec
nop
cmp
jle
jle
xchg
sti
test
pop
pop
sub
imul
fwait
push
xor
shll
inc
fstenv
xor
imul
or
subl
mov
scas
cmp
inc
stos
add
or
mov
adc
cltd
push
sarl
out
cmc
int
jae
int3
or
xor
mov
mov
cwtl
xchg
call
pusha
mov
in
fwait
inc
loopne
xchg
div
stos
sbb
cmpb
sti
adc
adc
loopne
sarb
and
lret
lret
cld
lock
out
jb
int
gs
sub
sub
and
cmpsb
cmpsb
sub
xchg
in
lea
cpuid
mov
gs
sub
jns
inc
mov
shll
pop
pusha
fnstenv
mov
outsl
mov
insl
xchg
adc
lret
pop
test
push
out
xchg
gs
cli
das
xchg
add
lcall
adc
loopne
icebp
enter
pop
push
shll
out
shll
adc
rcll
ret
cwtl
jnp
mov
subb
cmp
subl
add
mov
ja
stos
out
inc
in
mov
daa
daa
xor
loop
add
push
or
sub
in
int
out
and
sbb
adc
ffreep
jecxz
sub
cmp
imul
dec
xchg
jp
lock
xor
sub
loope
cmpsb
leave
decl
pop
or
add
jns
mov
xchg
outsb
or
imulb
out
imul
loopne
push
test
out
mov
fdivs
and
movsb
cltd
loopne
cmp
and
popf
add
mov
cmp
xlat
test
outsl
pushf
jns
xor
push
push
push
and
shrb
sbb
sbb
push
pop
push
movsl
pop
stos
fstpl
adc
arpl
mov
pusha
xchg
in
in
sub
push
arpl
sub
test
dec
sahf
mov
test
pop
adc
jns
and
test
adc
xchg
in
jp
fdivrs
xor
pop
jl
xor
iret
cmp
or
add
mov
push
xor
incb
xlat
adcb
mov
mov
pop
mov
cs
cmpxchg
mov
dec
pop
jp
mov
loopne
repnz
jle
dec
mov
scas
jmp
cmp
rorl
add
xchg
std
pusha
shll
xchg
pop
or
jl
out
inc
jp
es
push
adc
sbb
cmpsb
subl
cmp
pop
cmp
mov
inc
js
adc
cwtl
pop
inc
and
call
into
xchg
xchg
loop
cmp
into
add
sub
sub
mov
xchg
xchg
xlat
dec
aad
cmp
sub
sbb
inc
add
xor
mov
fcmovnbe
adc
test
je
subb
call
in
int3
push
mov
dec
push
aad
and
std
das
xchg
les
pop
mov
in
add
insb
pop
pusha
or
or
loope
scas
push
adc
jns
lds
sbb
fsts
movsb
xchg
cltd
sbb
cmc
lods
js
mov
jg
movsl
ja
jae
or
xor
iret
lret
mov
or
cmpsl
call
jno
jmp
out
push
sub
push
inc
sbb
xchg
mov
dec
xor
fiadds
out
fisubl
sbb
inc
pop
cwtl
cmp
cmp
stos
adc
cmc
cmc
cs
stos
movsl
jae
inc
jle
or
inc
pop
dec
inc
and
sti
mov
mov
jg
subb
mov
and
mov
fildl
ret
jbe
incl
mov
or
cmc
test
fdivs
xchg
outsl
nop
orl
ljmp
mov
or
adc
icebp
inc
cmp
mull
cmpsb
xor
popl
lock
cmp
xchg
pmullw
add
aas
rcll
sbb
lcall
mov
inc
cmp
mov
lcall
xlat
jne
push
fisttpl
rolb
mov
in
lret
je
frstor
pop
jmp
sbb
and
stos
pop
lock
out
loopne
out
mov
and
call
repz
cmpsl
jecxz
or
jge
scas
cmpsl
mov
aad
mov
test
sti
xchg
hlt
rcr
push
scas
mov
aam
notb
pop
mov
sub
mov
mov
mov
jbe
call
stc
pop
adc
jecxz
push
sub
loopne
xor
pop
das
add
jg
add
in
stos
inc
pop
mov
mov
mov
mov
ja
outsb
repnz
clc
add
push
pop
enter
dec
push
xor
adc
mov
sti
cmp
insl
adc
mov
push
test
inc
adc
mov
push
loop
fisubrs
sbb
mov
out
pusha
mov
fcom
cli
out
out
xchg
mov
cld
jle
je
and
inc
js
sahf
mov
inc
or
in
jnp
mov
ficoml
sbb
and
cmpsl
xchg
jnp
cld
xor
add
and
mov
cli
dec
imul
sub
mov
fistpl
push
xchg
cld
mov
outsb
pusha
test
add
nop
fdivrs
rolb
cld
movsl
mov
ss
mov
mov
data16
loope
rcrl
imul
in
stos
gs
push
dec
and
sbb
xor
fdivr
pop
addl
push
sbb
jo
xchg
or
or
inc
sub
jle
jmp
outsb
gs
cmp
mov
test
inc
shr
mov
add
gs
push
cmpsl
push
into
je
add
pop
add
jnp
cmpsl
push
aad
mov
movsl
inc
mov
add
jecxz
push
lods
lea
popa
dec
or
or
jecxz
fsubp
xor
out
sbb
push
jg
cmp
mov
test
mov
pop
mov
mov
add
push
mov
out
push
add
cld
and
adc
and
cmp
ds
aam
je
push
mov
out
hlt
xchg
lahf
loope
add
and
in
pushf
mov
mov
imul
xor
mov
nop
cld
pop
test
dec
jecxz
std
adc
in
into
xchg
leave
push
xor
dec
sbb
dec
dec
pop
mov
orl
add
mov
jne
adc
adc
mov
or
jge
gs
add
sub
cwtl
negl
xlat
mov
adc
adc
shrl
adc
in
jnp
and
xchg
nop
cltd
mov
mov
jnp
jmp
jb
pop
pop
inc
sub
mov
rcrb
sub
push
mov
sbb
sbb
or
rcrb
leave
push
pop
mov
test
jmp
scas
cltd
jp
movb
cmpsb
inc
gs
jb
sbb
add
cmpsl
test
call
mov
stc
imul
mov
cmpsl
jno
add
out
jns
outsb
pop
cmc
in
mov
rclb
lods
xor
ret
add
xchg
inc
jne
sub
outsb
iret
xchg
idiv
js
enter
xchg
xchg
shlb
mov
sub
lods
sub
xor
loope
movsb
in
xlat
fsubl
jge
adc
clc
push
lds
cld
out
push
push
pusha
jb
or
in
cmp
andl
insl
bound
ja
stos
sbb
jmp
jp
push
imull
or
fnstenv
jns
ja
and
cwtl
jecxz
lods
adcb
sub
lea
xchg
lahf
mov
jmp
sarb
or
repnz
shr
clc
pop
or
out
adc
push
cmp
cmp
test
cmp
imul
and
mov
mov
push
fmull
je
push
mov
inc
adc
pop
sahf
cmp
rcrl
repz
or
mov
hlt
jns
ljmp
push
push
pop
test
in
fists
out
mov
or
or
jb
pop
mov
sbb
jle
push
mov
jge
leave
lahf
icebp
fildl
stos
and
jmp
fdivrs
in
cmp
pop
mov
popf
ja
cmp
adc
sahf
xchg
divl
ljmp
aas
dec
jle
je
mov
pop
mov
xor
jns
cs
or
cmpsl
push
adc
and
add
mov
add
rolb
add
inc
add
aam
add
add
add
xor
pusha
add
add
add
add
add
lock
add
add
add
xchg
call
add
add
add
add
add
add
stos
stos
add
ja
mov
jg
int3
int3
int3
int3
pop
call
add
add
add
and
and
jbe
add
or
adc
add
add
add
add
pop
push
add
xor
repz
add
add
add
add
add
xchg
and
mov
add
add
sbb
add
sbb
sbb
mov
sbb
pop
sbb
mov
je
das
inc
dec
outsb
push
push
imul
dec
je
mov
test
dec
sar
clc
mov
add
push
je
cld
ljmp
lea
mov
cld
mov
lock
leave
mov
subb
test
in
add
xchg
push
add
adc
add
inc
push
mov
inc
add
push
adc
inc
mov
cmpsb
and
pushl
push
incl
mov
push
cmp
loope
pushl
and
cld
mov
adc
or
add
stos
scas
add
loopne
add
dec
inc
lret
mov
cmp
lea
add
rclb
loopne
inc
adc
add
pop
add
pop
sbb
add
add
sbb
outsl
sbb
sbb
jnp
sbb
sbb
sbb
add
sbb
add
xchg
add
outsb
add
je
add
jb
outsb
outsl
outsl
insl
fs
add
add
add
add
insb
fs
insb
add
popa
inc
je
cmc
gs
outsl
push
insb
add
inc
xor
popa
add
sub
add
add
add
add
ret
data16
add
push
testb
ret
xchg
cmp
pushaw
cmp
lods
mov
xchg
sahf
andl
mov
dec
or
mov
leave
sub
data16
aam
ds
ja
imul
dec
out
ja
push
mov
mov
cld
lea
je
ss
jmp
loope
mov
loope
je
add
call
lds
pop
lcall
sub
jg
mov
push
mov
icebp
fistpl
out
inc
repz
ficompl
xlat
pushf
enter
popf
rolb
fcmovbe
dec
cmp
dec
cmp
mov
icebp
jle
mov
add
or
fistpl
or
dec
stos
psrad
adc
adc
inc
test
lcall
lods
cltd
jno
fidivrs
mov
xchg
jbe
icebp
in
or
push
dec
fstps
xchg
mov
out
idivl
out
stos
cmpb
stos
cmp
lcall
fidivl
orb
inc
es
scas
mov
dec
mov
pop
mov
fs
fists
cmp
push
mov
dec
inc
mov
popf
loopne
xchg
movl
int3
mov
mov
lcall
rorl
sbb
xor
inc
popf
stos
and
call
mov
fwait
nop
outsb
xchg
cmc
mov
ljmp
and
adc
fldl
pop
or
jl
loope
push
aaa
mov
repnz
jae
pop
inc
stc
pop
dec
js
xor
cmp
dec
push
outsl
pop
xchg
cmp
or
sahf
gs
add
pushf
sbb
imulb
leave
imul
loope
icebp
fistpll
movsb
lea
ljmp
jge
jne
enter
test
outsb
dec
sahf
ljmp
add
mov
cli
in
ljmp
dec
jae
sbb
ljmp
xor
inc
lea
mov
test
mov
add
adc
adc
pop
cmp
mov
mov
loope
pop
mov
push
or
sub
xchg
test
pop
jo
mov
sub
mov
sbb
inc
mov
xor
clc
lods
inc
add
mov
sbb
dec
pop
push
jns
lcall
xchg
mov
pop
les
mov
adcl
xor
xchg
rcrb
sti
insb
lea
hlt
jl
clc
or
xchg
ds
push
push
mov
and
stos
mov
rorl
dec
aaa
rorl
in
lret
and
push
inc
cmpsl
push
cmpsb
mov
cmp
test
jae
mov
scas
bound
stc
cmp
hlt
and
shl
xlat
imul
aad
xchg
lock
jp
xchg
shlb
dec
xchg
dec
mov
fidivrs
mov
not
jb
mulb
xchg
xor
sub
or
cmp
inc
or
leave
xchg
out
pop
or
daa
push
or
sub
push
pop
sbb
scas
push
jne
xor
xchg
and
aas
daa
push
faddp
cmp
or
push
inc
bound
das
lods
xor
fdivrp
sahf
es
sarb
cmpsb
mov
fcomi
xchg
nop
push
les
mov
jge
in
mov
lock
jb
jns
aam
mov
inc
cmp
cmp
push
mov
inc
int
inc
cltd
shll
inc
jmp
cli
xchg
les
loopne
inc
orb
dec
pop
in
jne
jae
repnz
xor
movsb
imul
add
aam
cmp
xor
scas
inc
and
push
cmp
pop
aad
sbb
inc
push
aaa
call
shlb
and
pop
pusha
sbb
jl
sbb
and
push
insl
test
out
pop
movsl
mov
lods
or
push
dec
push
add
cmp
pushl
pop
jecxz
cmp
scas
imul
mov
add
fistpll
dec
and
xor
ficoml
scas
pop
popf
push
mov
push
out
xor
or
lods
repz
repnz
scas
lcall
sub
pop
sub
lock
sub
lods
dec
fimuls
mov
aad
push
mov
cli
shrl
testl
jno
jl
pop
addr16
ficoml
aad
mov
hlt
push
int
in
nop
sub
push
dec
fmuls
cmpsb
popf
fdiv
int
es
loopne
sub
xchg
inc
hlt
push
call
push
call
cmpsb
jge
jmp
out
dec
mov
jns
dec
dec
pop
or
mov
and
cli
jp
jge
je
sub
movsl
test
outsb
enter
adc
xchg
and
adc
int3
and
xchg
cmp
dec
xchg
stos
jge
es
mov
inc
mov
bound
faddl
fnstcw
sbbl
or
sub
or
iret
loope
xchg
xchg
adc
jbe
in
push
sub
subb
jns
enter
dec
or
jl
shlb
or
popf
push
fdivl
roll
lcall
jno
mov
imul
mov
nop
mov
sahf
pop
mov
scas
push
leave
adc
xor
outsl
test
xchg
and
lds
orb
loopne
fistpl
ret
stc
cmp
jns
ficoms
daa
jb
into
movsb
pusha
in
adc
cltd
cli
mov
fsubs
lret
pop
popa
and
sbb
fadds
lcall
or
push
xchg
mov
jl
adc
les
mov
push
sub
pop
add
cwtl
cmpsl
push
jb
sub
cmp
shll
mov
mov
aas
out
inc
loopne
subb
dec
lea
sbb
scas
ss
jle
sbb
scas
jl
inc
jb
jbe
fcoml
mov
pusha
sub
xorb
daa
dec
std
jge
cmp
dec
sub
mov
out
push
adc
push
cmp
cmpsl
ret
in
shrl
aas
sbb
lea
mov
lret
insb
push
mov
sub
push
bnd
es
mov
jg
jp
inc
mov
adc
js
inc
dec
xchg
mov
sbb
stc
imul
addr16
jbe
mov
adc
leave
adc
mov
cltd
scas
adc
push
xlat
inc
push
inc
push
mov
ljmp
je
inc
out
jo
hlt
clc
jl
ror
mov
scas
ret
xlat
add
sub
jo
lods
pop
sarl
cmp
stos
sub
fistl
jae
pop
sub
or
mov
sub
ss
mov
lock
mov
dec
hlt
add
fldl
aam
mov
or
xor
and
int
lods
inc
mov
das
sahf
sbb
adc
rcrb
adc
cmpsl
mov
lahf
mov
push
sbb
add
dec
gs
mov
mov
push
sbbb
lret
dec
outsl
shrb
dec
inc
dec
in
out
or
inc
stos
pop
push
das
dec
dec
mov
pop
sub
xor
inc
dec
test
add
sub
mov
insb
pop
add
cmc
ret
or
add
inc
cmpsb
rolb
jb
mov
scas
fadds
sub
xor
in
pushf
or
int3
ds
popa
insl
out
jb
xchg
popa
test
les
out
clc
sub
mov
mov
icebp
mov
les
adc
faddl
mov
aaa
ljmp
jl
cs
push
mov
sbb
and
and
xchg
mov
jnp
aas
andl
shll
lahf
xor
cmp
scas
xor
int3
xchg
out
mov
inc
cltd
push
push
inc
inc
pusha
lds
pop
dec
in
cmp
fwait
out
lods
mov
push
or
mov
inc
cmpsb
pop
push
push
or
add
push
and
int
pop
in
aam
sub
testl
xchg
test
jnp
or
mov
imul
mov
xchg
loopne
jg
jmp
dec
addr16
mov
fistps
movsl
fbld
int3
fwait
repnz
test
sub
aad
andl
pop
jmp
fyl2x
in
rcr
ja
add
pop
jg
fadds
mov
frstor
faddl
pop
lods
add
adc
adc
xchg
xor
leave
mov
xchg
xor
dec
adc
pop
push
mov
rol
jp
xor
mov
mov
scas
into
jb
mov
push
xor
ljmp
scas
adc
test
outsb
xor
out
cmpsb
mov
xchg
push
cwtl
dec
and
call
int
test
xchg
mov
mov
lock
jl
je
mov
mov
push
mov
xchg
loopne
sub
stos
xchg
or
and
xchg
dec
call
ret
pusha
lods
cld
push
std
xlat
or
mov
mov
cmp
adc
xchg
hlt
repnz
bound
cmp
push
test
inc
mov
adcb
into
cmp
ljmp
mov
ret
dec
sbb
cld
shlb
sub
aad
push
ficoms
addr16
andb
sub
adc
jmp
cs
rcll
aad
cmp
addl
jmp
sbb
xor
mov
jmp
push
add
pop
xor
push
sbb
add
clc
pop
mov
dec
lret
adc
das
jb
lea
bound
xor
subl
xor
push
add
and
fst
lret
adc
push
sbbb
aam
scas
in
cbtw
es
outsl
mov
and
dec
movsl
cmpsb
bound
sub
inc
popf
pop
cmp
outsl
int3
mov
add
dec
movsb
fwait
mov
mov
out
push
push
jae
mov
or
sbb
or
out
sbb
sbb
push
aam
ja
sbb
cld
inc
scas
mov
lcall
xlat
jne
icebp
jle
or
dec
aaa
push
ret
or
jno
dec
jne
jp
or
add
add
dec
mov
adc
jae
rclb
popl
test
sub
es
dec
fdivl
add
xchg
jl
adc
ret
fcoms
inc
outsl
add
test
gs
icebp
jp
fnsave
adc
mov
and
adc
sub
ja
cs
pop
mov
lcall
lds
insb
and
movsl
jnp
dec
pop
inc
dec
sub
or
mov
and
and
rol
cwtl
popf
cltd
or
iret
scas
inc
inc
lea
add
fidivrs
jecxz
inc
sub
jl
push
cmp
imul
out
enter
cmp
mov
add
sbb
out
adc
fsubs
popa
cmp
ljmp
iret
dec
testl
mov
or
int3
pop
das
lcall
andl
jns
adc
shrl
mov
mov
cmp
and
aam
fdivr
ljmp
mov
icebp
leave
cli
roll
jo
fisubl
xchg
shlb
popf
push
xlat
das
ret
pop
lea
dec
adc
pop
jmp
rorb
iret
mov
enter
shrb
aam
jne
push
aas
pop
or
clc
mov
mov
in
pop
ret
xchg
shll
idivl
inc
fstl
jns
bound
shl
push
xchg
mov
bound
dec
enter
mov
mov
cmc
aaa
mov
fiadds
fwait
nop
ret
dec
dec
pop
mov
jge
lods
lret
sub
add
in
das
imul
xor
add
imul
arpl
push
dec
repz
fadds
rcrb
rol
outsb
dec
add
pop
mov
ud2
add
ret
mov
jle
in
lret
pop
push
mov
out
mov
cwtl
jp
lret
fadd
xchg
sub
js
jne
psraw
cmp
aaa
cwtl
fistpll
imul
cmp
cltd
mov
imul
sub
in
fmull
ljmp
gs
test
inc
push
dec
cmp
dec
fadds
mov
and
cmp
inc
call
or
adc
andl
aas
xchg
sbb
push
mov
into
popf
lds
jecxz
sub
pop
jmp
or
das
mov
cmp
mov
fnstcw
andb
lcall
push
add
stos
in
lds
xchg
adc
pop
mov
push
in
fimull
loop
in
mov
es
dec
es
lds
or
push
push
mov
jmp
sub
mov
xlat
xchg
mov
cmp
mov
lds
inc
shll
scas
xchg
into
ret
jl
add
xchg
int3
jge
fisubrl
mov
xchg
mov
or
mov
jmp
xchg
jp
cmp
pop
push
ficoml
hlt
sbb
pop
jne
jecxz
mov
and
and
cltd
cmp
test
iret
movsl
neg
jecxz
dec
pop
in
jp
sbb
mov
push
push
push
std
popf
cmpsl
jle
repz
popf
test
imul
out
lods
lret
je
sub
lods
dec
add
lock
sbb
push
fsubl
lea
add
into
dec
test
cmc
adc
iret
fiaddl
push
inc
pop
push
cs
mov
adcb
in
fs
movsl
and
mov
test
push
int3
pushf
xor
mov
jbe
mov
call
xchg
cwtl
dec
push
fsubl
jae
add
iret
outsl
mov
es
push
scas
adc
cmpsl
enter
cmp
gs
mov
push
jg
outsl
enter
xchg
sbb
ss
pop
pop
es
jg
jmp
repnz
leave
jae
fcmovbe
add
sbb
mov
inc
cmp
test
lret
dec
out
loope
inc
pop
lds
test
sub
into
cmp
fcos
sub
aad
aas
call
loope
mov
lea
call
icebp
sbbl
imul
push
dec
xor
int3
movsb
mov
jg
xor
fsubl
cmp
and
sub
out
fisubs
cmp
lods
dec
test
mov
mov
enter
jge
repz
cmp
lds
xor
imul
inc
sti
pop
fwait
test
es
sub
cld
pop
and
pushl
ljmp
aaa
ret
nop
fadd
test
pusha
movsl
adc
cwtl
cmp
movsb
or
push
mov
fnstsw
mov
gs
lock
adc
jg
stos
loop
pop
dec
xor
test
out
icebp
mov
rorb
fs
jnp
xchg
lock
loope
sub
xchg
pop
fldt
mov
in
subb
xor
jg
lea
dec
xchg
xchg
cmp
push
dec
imul
add
xchg
subb
lcall
leave
in
add
stos
xchg
sub
js
mov
jnp
loop
test
mov
jbe
pusha
add
test
mov
repnz
inc
or
dec
cmp
jg
mov
hlt
out
outsb
cld
pop
sub
es
add
fs
add
fiaddl
int
mov
adc
push
pop
push
addr16
dec
popf
test
lds
aam
ficomps
int3
stc
mov
rcll
fidivs
in
sub
push
and
mov
mov
jne
daa
jmp
jl
push
xor
fdivrl
adc
sarl
es
jg
dec
lret
in
mov
xchg
sub
cmp
pop
movsl
add
sub
push
test
dec
ja
jl
out
loope
subb
mov
or
sti
and
loopne
leave
sar
add
push
sbb
into
lods
dec
rol
sub
xchg
pushf
or
adc
mov
stc
das
add
stc
xor
mov
repnz
out
cs
ja
and
fwait
out
and
sbb
jl
pop
xchg
mov
int3
leave
daa
rolb
mov
jge
xchg
cmp
imul
pop
clc
pop
testl
push
push
cli
ds
xchg
lds
dec
add
scas
popa
sub
sarl
add
fdivrl
cli
lcall
notl
iret
inc
and
mull
ret
pop
icebp
sub
fistl
pop
mov
shlb
push
fimuls
mov
fnstcw
pop
movsl
pop
sub
addr16
sub
inc
cmpsl
pop
movsl
mov
rcrb
lcall
mov
and
jle
jmp
frstpm(287
cmpsb
sti
jge
insb
fwait
nop
xchg
sarl
push
mov
cs
iret
ds
and
nop
inc
and
xchg
ficoml
in
addl
ja
out
jnp
fnstenv
shlb
adc
enter
and
pop
mov
pusha
sbb
fwait
jns
push
rclb
test
mov
adcl
xchg
out
hlt
xor
cmp
sub
dec
jmp
xor
shrb
inc
test
dec
jb
cmp
sub
ds
pop
shl
xor
adc
lahf
pop
test
cmpsb
gs
repnz
pop
push
sbb
loope
ret
pop
mov
push
outsb
inc
mov
rclb
mov
inc
lds
and
cmp
and
mov
daa
lods
sbb
fwait
sub
pop
push
adc
and
enter
fwait
sub
leave
les
hlt
sbb
dec
jno
lods
push
push
push
mov
jmp
outsb
loope
fldl
les
sbb
repnz
mov
add
add
add
mov
movb
add
xor
add
add
add
add
add
add
add
add
roll
add
add
add
add
add
add
add
add
xor
xor
xor
ss
add
add
add
add
cmp
add
ja
mov
dec
int3
int3
int3
int3
add
add
add
add
or
jne
or
add
add
add
add
add
add
add
add
add
mov
add
add
xchg
add
add
add
add
adc
add
add
add
add
add
add
addl
jo
add
push
jae
inc
imul
add
shufps
jmp
mov
enter
or
pop
push
lea
mov
cmp
or
inc
inc
std
incl
clc
add
cld
or
or
incl
rolb
add
lret
push
dec
insb
push
out
mov
pop
pop
cmpl
inc
mov
cmp
add
jmp
add
add
adc
inc
call
pop
js
push
lock
call
add
decb
cld
test
std
std
mov
cld
decl
add
enter
add
cmp
clc
sbb
add
jne
lret
mov
icebp
lret
adc
lock
push
in
push
hlt
adc
add
add
add
mov
add
add
add
add
add
add
add
insl
inc
roll
inc
inc
outsl
outsl
loopne
test
insb
gs
insl
inc
jns
xchg
jo
jbe
je
arpl
inc
push
gs
cs
outsl
inc
xorl
add
outsl
imul
je
je
je
insb
add
add
add
add
popa
aad
add
add
add
add
inc
inc
xor
bnd
shlb
inc
repnz
xor
push
mov
int
mov
xor
repnz
sbb
ret
mov
dec
pop
fisttpl
push
mov
jne
jno
pop
scas
pop
aaa
stc
mov
jmp
xlat
dec
shlb
xchg
sub
stc
popa
mov
sbb
jnp
addl
bound
test
adc
adc
xor
jp
test
roll
jp
pop
xor
xchg
jb
push
out
mov
out
repz
es
fistps
repz
mov
jns
insl
sbb
das
xchg
xor
bound
xchg
xor
scas
lret
ja
and
mov
jmp
sbb
sar
adc
jle
jb
xchg
mov
push
push
adc
sbbb
mov
stos
fldl2e
lds
scas
sbb
insl
bnd
inc
push
push
ja
jno
cmpsl
xor
in
adc
movsb
mov
mov
sub
pop
fisttpll
stc
roll
mov
mov
scas
sbb
lret
push
pop
mov
idivb
rorl
or
jl
or
clc
push
js
enter
inc
jle
pop
push
push
jg
fcomp
scas
xor
lods
pop
nop
lret
test
mov
xchg
lds
mov
rorb
lods
hlt
int3
pop
jo
popf
cwtl
sti
pop
add
adc
push
mov
xchg
push
inc
xchg
in
mov
dec
mov
xchg
xor
out
sub
sbb
sarb
push
xor
mov
mov
xchg
fistpll
fwait
jnp
or
cmc
and
and
shr
lcall
repnz
hlt
mov
fnstcw
insb
aas
fcmovu
inc
pop
pop
hlt
fldl
ret
ss
inc
push
sub
cmp
lret
ret
mov
in
dec
adc
jle
pop
adc
push
sub
and
aam
ja
push
faddp
and
sahf
les
out
shrb
imul
mov
adcb
imul
jae
pop
test
mov
push
xchg
dec
push
xchg
imul
mov
adc
fs
leave
pop
pop
and
add
cmpsb
add
pop
test
jg
xchg
mov
sbb
push
ss
mov
ficoms
fsubrs
daa
fs
bound
xor
or
inc
inc
add
pop
cmp
cmpsb
xchg
mov
js
sahf
xchg
sub
in
pop
pop
mov
cmp
dec
sbb
stos
stos
fimull
nop
mov
aaa
dec
or
pushf
pusha
clc
in
pushl
push
or
mov
sub
jno
int
add
cs
and
xchg
push
ret
in
subl
lods
cmpsb
imulb
push
das
ja
push
fadds
mov
lock
inc
testb
in
xchg
repz
ficompl
jb
lret
loop
fcompl
dec
cmp
fbstp
sub
jo
push
dec
insb
js
or
ror
ret
push
fmul
scas
sbb
jmp
jmp
aas
sbb
mov
dec
into
jns
sub
inc
push
out
sub
xchg
inc
adc
mov
pushf
in
and
pop
xchg
adc
repz
and
xchg
js
jbe
jmp
out
sti
inc
cmp
sub
lret
mov
mov
mov
iret
cmp
xchg
mov
gs
lret
mov
xchg
jg
divl
jl
and
jl
in
ret
and
add
dec
ds
mov
cmp
mov
cmp
dec
xchg
aam
cli
push
sub
pusha
push
std
icebp
inc
adc
ret
movsl
cmovb
lret
in
inc
ljmp
mov
or
lret
inc
mov
clc
push
scas
hlt
fistpl
pop
test
mov
xor
inc
pusha
lock
adc
mov
push
mov
repz
jo
jp
lahf
add
ss
dec
sub
xor
lret
xor
pop
pop
or
add
cmc
pop
cmpsb
jp
pusha
add
inc
or
cmp
and
xor
mov
mov
pop
addr16
out
mov
ds
in
sbb
out
cs
shlb
push
test
cmc
mov
dec
gs
fs
cmp
dec
inc
aaa
dec
incl
aam
add
or
lea
aaa
aaa
lods
add
inc
orl
aam
lea
cmc
mov
mov
into
shrb
or
outsl
loopne
jae
inc
sub
gs
mov
out
cmp
aaa
sahf
jo
mov
ja
lahf
mov
inc
imul
repz
sti
mov
shll
call
fcompl
ljmp
bound
and
jp
addr16
out
cmpsl
sbb
jge
imul
or
out
aad
and
and
mov
test
and
ret
icebp
fs
loope
test
rclb
mov
jle
jle
dec
jp
nop
nop
mov
lea
pushf
pushf
clc
lret
push
inc
loopne
iret
ffreep
mov
or
addr16
ljmp
fidivrl
arpl
pop
out
bound
mov
and
sub
mov
test
mov
shlb
dec
xorb
add
cmp
iret
and
inc
mov
addb
xchg
cmp
cmpsl
jae
scas
inc
scas
hlt
or
iret
and
cmpsl
lret
sub
sbb
inc
repnz
scas
call
mov
pop
daa
loopne
imul
pop
ljmp
dec
aaa
add
mov
paddb
jb
xchg
or
adc
fcmovnu
sub
in
std
and
mov
xor
pop
jl
sub
scas
mov
cmp
aaa
stos
ss
add
cmovo
cmp
and
cli
imulb
or
inc
push
fimuls
fsincos
lahf
mov
pop
stc
dec
out
jns
movsb
jo
lds
repz
xchg
dec
decl
nop
inc
adc
icebp
and
jle
mov
cwtl
popa
lock
in
inc
add
and
fwait
xchg
dec
lahf
ss
inc
imul
jne
inc
xor
movsb
push
insb
outsl
leave
nop
cmp
jp
pushf
jg
out
je
add
jnp
das
mov
or
jmp
inc
repz
jnp
fisttpll
sub
or
sbb
cmpsb
js
add
lock
stos
dec
je
pop
and
xor
fcmovnu
popa
and
and
imul
outsl
mov
add
sub
flds
cmp
pop
fxch
clc
jmp
sub
mov
jp
pop
sbb
lods
ljmp
dec
arpl
cmp
std
mov
hlt
fisubrl
shrb
xchg
add
ret
dec
cmpl
dec
pop
inc
shll
fmul
cmp
dec
lods
inc
orb
mov
repnz
add
repz
repz
jae
cs
rcrb
xchg
sub
xor
mov
mov
adc
sbb
insl
pusha
xor
mov
data16
out
ret
gs
in
mov
push
int3
repnz
loop
and
inc
cmp
inc
jg
push
mov
mov
sub
leave
push
push
mov
and
lods
fisttps
pushf
movsb
mulb
pop
in
dec
popa
movsb
cwtl
mov
imul
fldt
inc
in
shll
aaa
and
es
xchg
fcomps
mov
xchg
cmpsl
outsb
sbb
scas
xchg
nop
cmp
sbbb
and
pop
push
xchg
int
mov
call
hlt
call
jnp
push
mov
mov
in
cwtl
sahf
add
leave
loope
pop
hlt
stos
mov
lcall
jecxz
out
cwtl
ljmp
loopne
mov
test
jmp
cs
and
inc
xchg
comiss
and
inc
lock
sbb
sar
mov
stos
xchg
clc
adc
xchg
xchg
gs
out
sbb
inc
push
push
ja
adc
cld
jp
cli
cwtl
dec
push
add
or
adc
sub
push
call
pop
cwtl
scas
hlt
sub
ret
stos
push
orb
je
cmc
repnz
pop
sarl
sbb
inc
mov
adcb
pop
or
or
das
sub
cld
lcall
lea
lahf
in
repnz
push
xor
out
inc
dec
imul
pop
fwait
xchg
jns
jae
movsb
mov
add
dec
fsubrl
mov
add
push
mov
inc
sub
ret
ret
mov
lret
loop
and
push
fwait
xor
fxch
sbb
loopne
dec
push
fsubr
adc
inc
loop
fstpt
fsubl
fcos
xchg
jle
push
xor
mov
flds
inc
mov
or
out
outsb
cmp
fcompl
out
mov
xchg
mov
dec
inc
outsb
sbb
fldt
lea
ret
or
inc
sbb
test
push
bnd
hlt
or
adcl
add
cmp
sub
and
pop
add
out
and
mov
stos
xor
imul
cmp
push
add
inc
rcrb
lahf
nop
mov
jns
cs
lahf
pop
leave
xchg
push
fwait
sbb
adc
mov
rorl
mov
repnz
jecxz
push
popa
lock
fiadds
test
hlt
cmpsb
lahf
bound
cli
inc
jmp
push
mov
test
ror
xor
fcomip
mov
subl
aam
sub
pop
insb
jl
mov
filds
adc
add
sbb
fbstp
faddl
fidivrs
dec
sarl
stos
mov
mov
dec
mov
inc
or
dec
cmc
pop
aad
push
orb
xchg
xchg
outsl
fcoml
pop
mov
and
incb
call
mov
push
enter
pusha
scas
stos
sbb
ret
out
mov
dec
or
pop
iret
scas
sub
insl
lcall
jne
jno
mov
dec
mov
sbb
mov
xor
adc
mov
ret
mov
sub
push
jp
jae
lret
push
xchg
sub
push
mov
cli
mov
push
mov
data16
xchg
add
inc
mov
adc
insb
pop
sub
imul
arpl
gs
sbb
jns
or
mov
mov
or
fwait
ss
ret
pop
das
sbb
mov
push
inc
xchg
sbb
pushf
ret
cmc
add
mov
stc
jbe
pusha
or
or
cmp
lret
xchg
cmp
sbb
scas
je
lock
mov
movb
shrb
inc
push
insl
ret
repnz
or
push
pop
mov
mov
bound
setnp
sub
pop
inc
jp
sub
into
xchg
xor
dec
stos
lcall
or
mov
in
mov
ret
jle
in
addb
rcrl
mov
das
mov
fxch
std
repz
enter
mov
push
fstps
dec
shrl
cli
hlt
dec
add
or
cmp
pop
stc
sub
repz
push
movntq
sub
jb
adc
movsl
rorb
ja
xlat
jae
jo
jnp
pop
adc
ret
cmpsl
mov
pop
dec
sbb
js
or
mov
imul
push
sub
lahf
cmp
loop
cli
outsl
dec
mov
jge
lret
test
sbb
outsl
lock
insb
cmp
negl
repnz
mov
sbb
adc
pop
les
nop
adc
cmp
in
das
lret
cmp
sbb
sbbb
cmp
add
xor
mov
xchg
push
inc
push
jg
cld
mov
inc
test
pop
xchg
pop
and
push
jno
fnstsw
insb
cltd
cmp
leave
or
cmp
mov
lods
sbb
in
sti
nop
add
mov
pop
add
push
popfw
jns
dec
pop
out
pop
add
decb
outsl
inc
push
mov
pop
and
and
push
test
xor
push
push
push
dec
xchg
addr16
mov
jmp
push
push
add
lods
mov
sahf
icebp
in
shlb
nop
fmuls
mov
ficoml
mov
filds
jo
xor
mov
stc
and
sbb
enter
lods
enter
jo
pop
sub
push
lea
insl
push
aaa
xchg
mov
xor
xchg
mov
jno
shll
and
mov
movl
int
mov
test
popf
pushf
enter
lahf
lds
pop
or
cli
sbb
leave
not
and
lret
push
mov
cmc
ret
pop
clc
inc
stos
pop
inc
pop
and
xchg
sbb
jno
cmp
fsub
and
inc
pop
mov
mov
xchg
dec
gs
push
stos
sbb
movsl
out
imul
mov
xchg
add
insb
push
fsubrs
cmpl
stc
cli
push
xchg
pusha
into
push
jecxz
cs
mov
pop
shrb
xchg
inc
dec
mov
mov
aam
mov
shrl
pop
sub
jmp
mov
push
xchg
sbb
cmp
or
inc
ret
pop
clc
jnp
out
in
sub
xor
sbbb
addr16
and
cmpb
mov
sbb
ljmp
mov
mov
push
or
xchg
pop
dec
mov
inc
sbb
arpl
sbb
jge
jns
iret
setb
cmp
pushf
xchg
mov
or
icebp
xor
aad
sub
pushf
add
mov
cmpsb
adc
inc
roll
push
es
pop
imul
xchg
xlat
sub
lret
and
adcl
movsl
movsb
sbbl
arpl
pop
icebp
jno
popf
repnz
xor
xor
cmp
outsb
cmp
push
sbb
ss
push
lock
ficompl
pop
cmp
inc
add
sub
push
fnstenv
fistl
stos
shrb
mov
pop
mov
aaa
std
mov
popf
push
and
test
mov
sbb
daa
addr16
rclb
popa
xchg
ss
nop
inc
mov
out
cmp
adc
shll
jns
xchg
out
mov
mov
daa
mov
lahf
mov
sub
lahf
sahf
and
test
cmp
dec
sbb
fsubr
dec
or
mov
faddl
jbe
push
in
in
mov
dec
lock
inc
jp
lods
xchg
out
lods
sub
adc
pop
jp
cwtl
sbb
pop
and
iret
aas
xor
subl
jecxz
cmp
mov
adc
hlt
xchg
or
mov
push
call
stos
add
adc
movl
dec
inc
push
and
andl
jge
jmp
out
mov
in
xchg
sub
or
sub
sysenter
add
ror
cmp
rorl
pop
xchg
leave
xchg
cmpsb
btr
dec
push
fldt
mov
repz
ljmp
sub
push
cli
push
movsb
adc
xor
push
and
and
lea
cmp
pop
mov
adc
pusha
dec
mov
cld
mov
aad
push
dec
sub
cmc
cld
sub
inc
add
cmp
sub
inc
sbb
sub
mov
sub
sub
sub
sub
andb
lods
into
pop
lods
int
clc
mov
fsub
arpl
fistpll
loopne
xor
cmp
je
push
pop
ror
cs
jle
push
sarb
mov
mov
ret
mov
pop
push
scas
repz
push
jnp
and
scas
shld
adc
aad
push
shll
popa
push
cld
pusha
pop
mov
xor
jl
nop
xchg
mov
sub
jo
mov
ret
ret
repz
jecxz
lret
adc
jbe
clc
xchg
enter
sbb
std
push
insb
stos
scas
mov
hlt
outsb
cmpsb
xchg
sub
and
jmp
sbb
out
repz
xchg
cmp
and
pop
dec
orb
into
leave
sarb
insb
dec
ret
xor
outsl
mov
std
cmpb
push
jo
pop
pop
daa
cltd
mov
sbb
sbb
push
jmp
mov
add
xor
adc
es
mov
imul
sbb
lock
mov
enter
rclb
fldl
outsl
cmpsb
call
in
push
sbbl
aad
test
cs
std
test
sub
mov
loope
pushf
and
inc
push
mul
cmp
int
sahf
in
sbb
mov
scas
jg
dec
inc
pop
xchg
lea
or
and
mov
push
jo
call
aad
inc
into
jo
mov
sub
push
and
jb
push
aaa
inc
mov
pop
mov
cli
pop
imul
in
ret
shrl
cmpsb
sarl
cld
outsb
mov
and
or
test
xor
pop
fwait
mov
insl
add
or
lods
testl
jecxz
pop
mov
pop
lods
rcl
gs
gs
xchg
add
cwtl
insb
test
push
jne
jnp
xchg
inc
ret
xor
push
stc
add
xorl
js
mov
xor
or
mov
mov
xchg
mov
add
jbe
xchg
lea
imul
xchg
jbe
in
xor
inc
pop
push
cmp
push
into
js
pop
xor
cmpsl
inc
xor
imul
dec
xchg
mov
cmpsb
ret
mov
idivb
outsb
adc
aaa
and
dec
popf
fcoms
loope
lea
jecxz
mov
lods
cmp
in
aam
fsubrs
add
add
add
add
add
add
add
add
add
add
add
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
mov
add
add
add
add
add
add
add
add
and
add
add
and
ljmp
ja
mov
clc
out
clc
dec
int3
int3
int3
int3
