mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
call
mov
push
mov
push
mov
push
mov
mov
push
lea
push
pushl
pushl
call
push
lea
push
pushl
pushl
call
pushl
lea
push
lea
push
push
call
mov
pop
pop
pop
call
leave
ret
int3
int3
int3
int3
int3
mov
push
push
mov
push
push
lea
push
lea
call
add
mov
rep
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
lea
push
lea
xor
push
mov
inc
push
mov
call
cmpl
je
push
pop
push
pop
push
mov
mov
pop
push
mov
mov
mov
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
dec
adc
add
rclb
add
rcrb
ret
add
add
gs
add
add
add
add
lds
add
add
adc
add
add
add
add
add
add
sldt
and
add
add
add
add
popa
cmpsl
push
arpl
dec
inc
add
push
pop
add
dec
jecxz
ror
leave
in
js
mov
adc
inc
lcall
lea
or
mov
test
jmp
adc
lret
aad
push
testl
mov
pop
jge
adcb
out
adc
push
cmc
dec
push
outsl
adc
aas
mov
pop
sub
add
aas
push
pop
lea
out
or
pushl
push
cmp
add
and
dec
cld
dec
mov
push
fldl
loopne
adc
test
adc
inc
clc
je
enter
add
cmc
push
clc
insl
inc
adc
add
xchg
adc
das
add
add
add
add
add
add
add
lods
inc
add
inc
gs
dec
or
inc
ds
inc
int3
add
int3
gs
icebp
gs
mov
inc
lods
push
dec
or
jb
push
gs
add
insb
dec
outsl
imul
jns
movb
outsb
push
in
push
ljmp
jno
dec
inc
jb
pusha
add
pop
add
push
add
popl
add
add
add
out
add
lds
add
add
adc
add
add
add
add
add
add
verr
ret
adc
pusha
mov
xchg
ja
gs
fucom
fistps
push
add
in
addr16
xor
push
xchg
push
lahf
ret
push
adc
pop
sahf
mov
les
inc
pop
mov
or
push
mov
jo
inc
xchg
in
mov
jae
lods
lret
mov
sbb
xchg
adc
xor
sub
xchg
aam
popf
adc
cli
out
lret
push
mov
xor
xchg
pop
push
jle
test
movsl
adc
push
mov
xchg
lcall
sub
jmp
xor
imulb
xor
std
stc
sbb
mov
scas
ret
cmp
aas
sub
pop
aad
fucomp
dec
lods
and
dec
stc
push
inc
nop
push
mov
popf
jno
pushf
loope
fidivrl
sbb
sub
and
shlb
sbb
outsb
pushf
cld
les
loope
adc
out
pop
cmpl
outsb
mov
mov
adc
iret
xchg
sub
mov
les
sti
and
jo
addr16
jge
ror
jecxz
pop
dec
hlt
cwtl
stos
cmp
push
xchg
insl
aaa
mov
or
popa
movb
cmpsb
inc
sub
cs
inc
add
pop
dec
cmc
push
inc
xchg
shll
xchg
mov
lcall
enter
cmp
imul
stos
add
addr16
dec
ja
xchg
lods
and
mov
sbb
das
or
push
enter
jg
mov
cli
pop
punpckhdq
cmp
jno
repnz
aam
cmp
xchg
mov
adc
push
jo
daa
lret
inc
jle
cmp
int3
mov
fs
shll
in
addl
repnz
inc
lcall
mov
adc
mov
lcall
mov
repz
cmp
aas
pop
adc
movsb
jmp
mov
and
cmpsl
add
inc
inc
repnz
cmpsb
test
cmp
adc
lcall
rcr
mov
jns
mov
bound
inc
fsubrp
add
test
or
andb
push
pop
cmp
push
into
scas
mov
pushf
fnstcw
dec
sahf
je
call
pop
ds
lret
lea
insb
stos
fwait
dec
stc
nop
jmp
leave
clc
dec
pusha
call
cmp
sarl
scas
xchg
or
jb
jns
jno
aas
push
mov
mov
inc
lcall
sbb
imul
hlt
jp
hlt
xor
lods
or
daa
clc
mov
cmp
jecxz
enter
lock
rorb
test
popf
push
in
je
in
sub
js
inc
add
in
arpl
add
scas
push
ja
cmc
xor
mov
mov
and
xor
mov
jge
mov
xchg
xor
ljmp
dec
outsb
dec
aam
jg
faddl
popf
and
push
in
std
in
leave
cwtl
pop
add
mov
rcr
iret
pop
jmp
push
or
sub
add
mov
jl
push
push
cld
add
inc
fnstenv
popf
xlat
lock
es
sbb
rcrl
inc
xor
xchg
add
dec
inc
testb
cld
add
add
data16
sbb
ja
xlat
dec
push
clc
movsl
aaa
jnp
push
jo
push
jle
out
mov
addr16
ljmp
pop
mov
insb
inc
push
cmp
inc
mov
shll
or
push
loop
push
fdiv
inc
out
ret
fisubs
in
and
test
pusha
vmaxpd
mov
push
pop
cli
dec
add
pop
xor
xor
mov
inc
adc
or
test
inc
jle
mov
test
mov
fistpll
insl
imul
adc
adc
adc
mov
add
js
lret
lods
in
imul
test
or
rorl
or
mov
push
or
jmp
xorb
push
cmpsb
push
sub
jp
bound
push
adc
jecxz
cmp
xor
leave
add
add
add
out
addr16
mov
and
enter
aad
jbe
and
leave
mov
frstor
stc
jno
rcrl
xchg
pmuludq
dec
andl
pop
sub
sub
movb
pop
test
sub
dec
jl
sarb
inc
mov
movsl
lcall
stos
mov
dec
ja
sahf
push
lods
scas
jne
insb
mov
ljmp
xor
arpl
out
in
push
mov
out
cmp
rcrl
outsb
loope
add
imul
cmp
pop
aaa
pop
dec
cmp
xlat
icebp
and
aaa
inc
cmpb
jnp
cwtl
in
clc
lods
jl
lcall
inc
mov
pop
imul
lcall
movswl
dec
push
push
fs
or
dec
cli
jg
push
inc
adc
ret
cmp
adc
punpckhwd
xchg
pushf
pusha
pop
mov
jecxz
sub
rcl
jbe
hlt
dec
sub
mov
or
sbb
jns
into
jge
cli
cs
sarb
mov
xchg
or
pop
sub
sub
sub
mov
sub
scas
sub
ds
jne
adc
and
data16
cmp
hlt
cmp
cmp
lret
movsl
inc
mov
inc
test
xor
push
mov
mov
dec
cmpsl
fwait
mov
xor
jno
pop
je
mov
sub
pusha
cli
sbb
mov
pop
aam
in
pop
xchg
add
add
dec
push
push
xlat
xor
push
iret
jns
lock
mov
xchg
dec
xchg
ds
mov
xor
sub
fsub
aaa
fldl
adc
add
push
jp
decl
pushf
dec
int3
lods
ja
xor
xchg
xchg
xor
insb
and
mov
out
xor
lcall
inc
nop
jecxz
jne
add
imul
pop
jl
xchg
lahf
ds
aad
dec
and
lret
push
push
add
into
pop
dec
icebp
jno
inc
ds
setno
jnp
dec
jp
les
adc
fists
lock
pop
xchg
lcall
js
enter
sub
adc
mov
pusha
fiadds
insl
pop
jge
in
aam
mov
lea
in
mov
inc
popf
je
andb
cmpsl
outsb
dec
sub
into
outsb
adc
xchg
in
pushf
arpl
fninit
rorb
dec
hlt
push
insb
pop
push
mov
imul
lock
sti
enter
iret
xor
jne
fdivl
push
sahf
rol
xchg
out
push
mov
out
add
jbe
and
jmp
fildll
mov
inc
shl
pop
inc
jne
and
nop
pop
xor
adc
jg
sub
cmp
adc
and
or
mov
jnp
repnz
and
jae
and
pop
hlt
in
push
ljmp
sti
adc
sub
and
pop
movsb
aas
add
and
daa
shrb
dec
or
mov
fucomi
cld
mov
dec
out
imul
push
jl
test
lea
repz
lock
push
jmp
inc
xchg
xor
inc
jb
fs
push
mov
mov
mov
lcall
xor
sub
cmc
mov
mov
outsl
cmpsb
add
mov
push
imul
inc
mov
popf
cmc
xchg
push
lret
jecxz
cli
ds
loopne
or
lret
or
cmpsb
jg
mov
xchg
cmp
fldenv
adcb
stc
fcompl
mov
in
add
xlat
pop
shrl
imul
sub
fdivrs
jmp
cmpsl
lcall
mov
int
sbb
cs
inc
movsl
arpl
jnp
mov
outsl
adc
int3
sbb
dec
mov
in
fimull
push
dec
rcll
and
outsb
jbe
test
jne
dec
das
frstor
loope
jns
adc
aam
push
je
imul
in
lret
fisubl
mov
and
into
popf
hlt
push
xor
das
push
lods
mov
ret
or
xchg
cmpsl
adcb
daa
add
pop
bound
cs
mov
icebp
pushf
stos
scas
rcrb
std
mov
call
std
imul
or
inc
lock
movsl
cmp
sahf
cmp
roll
mov
sbb
lcall
sbb
fnstenv
or
shr
mov
stc
xchg
jb
mov
outsb
add
push
rcl
loope
cwtl
daa
pop
sub
cmp
push
call
enter
cld
cltd
mov
in
add
pop
stos
mov
sub
outsl
mov
fsubrl
pop
xor
add
xor
mov
add
xor
fwait
jmp
pop
pop
fwait
cmp
xor
outsb
pop
adcl
cmpsb
aam
or
testb
lds
inc
icebp
jle
jle
cmp
fwait
adc
std
mov
mov
mov
mov
adc
xchg
test
mov
mov
inc
pop
out
jno
out
int
sbb
add
jno
popf
leave
cld
nop
into
or
test
icebp
das
mov
loop
lcall
and
lcall
mull
xchg
ret
repz
sub
push
mov
into
insb
pushf
sub
push
add
push
mov
pop
mov
jne
and
inc
aad
cltd
mov
cmp
adc
jmp
enter
adc
loope
jno
xorb
and
rclb
mov
dec
sbb
xchg
jno
push
add
aas
xchg
pop
cwtl
lret
or
popa
cli
sarl
pop
adc
js
flds
mov
fistpll
inc
fwait
lock
fdivp
inc
inc
subl
cmp
sahf
or
vmovsd
cmp
or
inc
xor
lods
mov
pop
sub
movsl
insl
jle
inc
ficomps
inc
dec
mov
daa
mov
outsb
pop
cltd
push
cmp
aad
stc
lods
sub
adc
adc
and
sub
sub
repnz
in
lcall
pop
dec
sarl
push
sbb
loope
sub
scas
cmp
pop
push
or
int
test
rcrl
movsb
push
and
arpl
add
dec
push
imul
icebp
push
mov
adc
xchg
loopne
daa
xchg
jns
mov
fistl
xorl
ljmp
jg
or
decb
ja
sbb
outsb
test
jne
cld
fwait
jl
sahf
sub
add
jo
imul
pusha
fimuls
push
lea
sbb
lcall
xchg
or
dec
push
dec
inc
stc
shl
sub
sti
or
pop
sub
outsb
scas
adc
cmp
mov
xchg
pop
ret
add
rorl
push
add
pop
xchg
int3
out
lds
cmp
jns
ss
xlat
mov
ja
into
mov
push
sbb
jl
pop
push
xor
cmp
hlt
jmp
out
sbb
into
jp
ja
lret
into
stos
fwait
mov
arpl
pop
mov
mov
out
mov
repnz
mov
daa
adc
dec
dec
nop
imul
fnstcw
push
adc
sub
mov
dec
cmp
int
mov
stos
mov
js
or
es
sub
or
int3
aas
lea
jae
add
jmp
jbe
or
iret
enter
adc
shr
dec
cmp
push
mov
sbb
and
andl
mov
ljmp
sbb
jae
aas
arpl
mov
insl
insb
pop
add
push
int3
mov
cld
fdivr
cmp
cwtl
jge
arpl
aaa
aad
dec
mov
or
ret
fcomps
cmc
sbb
jecxz
dec
sahf
repz
jg
repnz
mov
fidivs
stos
cmc
fwait
mov
mov
sbb
loope
or
dec
add
sub
addb
inc
push
std
mov
adc
sub
bound
mov
lcall
aaa
imul
lods
jns
adcl
mov
mov
mov
stos
stos
cmp
jecxz
lods
lock
lret
sbb
loopne
fists
mov
daa
adc
ljmp
push
out
adc
inc
adc
cmp
xor
imul
sub
jge
into
popa
xlat
roll
ja
mov
pop
pop
mov
add
xchg
lds
xor
xchg
and
mov
jecxz
mov
cmp
bound
dec
mov
out
push
pxor
adc
jmp
or
and
adc
mov
pop
or
gs
pop
push
mov
lcall
outsb
shll
jmp
mov
and
push
movsb
hlt
jnp
imul
cmp
ss
dec
cwtl
mov
pop
sbb
fiaddl
daa
add
data16
pop
xor
adc
iret
or
inc
rcrl
jmp
iret
icebp
fmuls
mov
addr16
divl
mov
fnstenv
jge
adc
sub
jbe
jno
cs
ljmp
add
jne
mov
gs
in
test
pop
push
cmpsb
cmp
jecxz
pop
cltd
push
and
arpl
sbb
or
pop
cmc
pop
aaa
andb
fidivl
inc
lret
sub
push
fldcw
sbb
cmpsb
test
push
pop
xchg
push
lods
pop
inc
jp
inc
sub
imul
clc
idivl
cmpsl
push
mov
shlb
jb,pt
pushf
stc
mov
mov
sahf
and
add
ja
adc
sbb
hlt
jbe
mov
into
dec
sbb
inc
lahf
clc
and
jb
jge
push
rolb
inc
pusha
pusha
aas
xlat
sub
adc
rcl
sbb
cmp
stos
push
fisubrs
push
jo
mov
adc
icebp
popa
das
das
lods
sub
lahf
sti
insb
test
adc
popf
push
push
add
xchg
nop
insb
and
stc
jne
hlt
cmp
cmpsl
pop
xchg
ret
sub
scas
inc
inc
add
ficoml
adc
pop
inc
add
icebp
jo
adc
pop
pop
and
push
pop
mov
mov
fdivrl
lcall
xor
dec
test
pop
out
or
or
inc
push
jo
and
push
mov
es
lds
pop
cli
arpl
out
dec
fisttpll
lahf
add
cmpb
inc
mov
jl
mov
or
add
xchg
in
cltd
ret
aad
out
cmp
lea
jns
dec
std
scas
push
out
repz
xor
jno
scas
mov
push
adc
pop
inc
sub
fimull
and
sub
mov
pop
mov
shr
shr
mov
add
sbbl
xchg
mov
std
dec
lock
stc
pop
testl
lea
adc
or
sbb
out
frstor
mov
out
cmpsl
hlt
hlt
jecxz
adc
std
adc
dec
cld
xor
leave
lods
or
jno
gs
inc
pop
push
cmp
js
add
shll
rcr
daa
cmp
add
je
push
cmp
mov
jno
imul
divb
dec
dec
inc
cwtl
out
popf
addr16
shl
sub
jg
and
mov
push
call
jae
xor
leave
mov
mov
jno
xor
repz
fstpl
cmp
jae
stos
clc
inc
call
and
fdivs
lret
sti
enter
cmp
repz
mov
lods
lret
andb
mov
test
imul
cs
xchg
dec
insb
fidivrl
ss
std
mov
ficoms
jo
or
cmpsl
fsts
add
push
mov
mov
jl
sahf
xor
xchg
hlt
scas
jns
cmpsb
leave
aam
andl
pop
cmp
lret
cltd
inc
ljmp
and
loopne
dec
leave
mov
sub
lea
xchg
pop
rorl
mov
xchg
pushf
subb
std
shl
mov
enter
cmpsl
cli
adc
push
xchg
stos
mov
loope
outsb
sbb
mov
sub
xchg
scas
frstor
jbe
jnp
sti
xchg
out
or
imull
shr
jbe
sbb
dec
xor
outsb
cmp
adc
push
dec
addr16
in
aad
add
sbb
pop
sbb
sti
dec
lret
nop
sbb
mov
add
subb
mov
pop
leave
xchg
test
cmpsl
sub
fmull
sbb
es
jp
push
mov
xchg
sub
dec
test
out
inc
ss
ja
popa
xor
mov
cmpsl
cmp
sbb
xor
xor
or
and
and
scas
cmp
repnz
xchg
rcrb
pop
bound
add
fidivrs
xchg
mov
lret
pushf
cmp
sahf
dec
sub
xchg
dec
ljmp
xor
lahf
jl
xor
out
xor
pushf
mov
int
jo
jmp
std
scas
iret
dec
std
insb
ds
inc
lret
mov
add
adc
jnp
mov
out
jg
rclb
sar
ljmp
inc
jge
ljmp
push
loope
add
andl
push
inc
or
xor
push
or
push
bound
ja
aad
pop
cltd
and
out
xchg
dec
pop
outsl
jecxz
pop
jne
mov
fdivrp
push
les
sub
in
jg
je
mov
je
push
subb
loope
jge
cmp
inc
ret
rolb
js
adc
insl
jecxz
adc
push
sahf
aad
mov
stos
lret
test
insb
out
sahf
outsl
fidivs
jb
mov
pop
dec
jae
adc
aas
mov
and
inc
mov
push
aaa
mov
xchg
mov
xlat
mov
clc
or
pushf
dec
or
mov
mov
cmp
loope
sbb
enter
xor
cmp
pop
mov
adc
ljmp
lock
enter
cmpsl
push
jns
xlat
out
mov
jb
xchg
adc
xchg
mov
cli
mov
mov
jne
test
xchg
jbe
pop
call
mov
push
pop
cmc
sub
and
sarb
mov
aam
push
lahf
push
push
cwtl
add
cmp
andl
pushf
popf
pop
jp
adcb
sti
dec
cld
stos
in
iret
push
sub
sbb
icebp
ret
adc
aam
dec
pushf
shll
fbld
lahf
or
xchg
mov
aam
mov
ret
enter
adc
sub
lock
scas
movb
xorb
fbld
movsl
mov
sbb
cs
sbb
aad
jns
mov
inc
xchg
movsb
hlt
adc
adc
nop
add
add
dec
add
add
jg
add
add
add
add
sldt
and
add
add
add
add
add
add
in
add
add
xor
add
add
add
add
add
add
lds
add
add
adc
add
add
add
add
ja
push
ljmp
dec
int3
int3
int3
int3
int3
push
mov
sub
lea
push
push
push
pushl
call
cmpl
je
mov
cmp
je
call
movl
call
cmpl
jne
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
mov
push
push
push
push
push
pushl
call
pushl
call
call
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
xor
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
pushl
pushl
pushl
push
push
call
add
mov
cmp
jbe
andl
cmpl
jne
call
mov
inc
inc
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
jmp
call
call
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
call
mov
pop
pop
pop
leave
ret
pop
add
sti
push
mov
add
add
jmp
add
mov
add
add
les
add
or
xor
fs
mov
add
mov
inc
push
add
pop
sbb
pushf
add
imul
in
add
cmp
add
or
insb
fs
add
fimuls
aaa
jb
stos
jo
mov
dec
adc
push
in
cld
call
sti
inc
clc
or
push
in
outsb
je
mov
movsb
push
lret
add
inc
cwtl
pushl
leave
imul
lret
cli
or
addr16
push
fsts
add
adc
test
rcll
jnp
in
es
pushl
shr
lcall
and
adc
mov
roll
or
aam
xor
push
mov
inc
inc
jmp
mov
test
call
rclb
cld
lret
push
adc
adc
ja
ljmp
lret
lea
loopne
sub
lret
call
adc
movsb
adc
stos
rolb
add
jnp
add
add
or
add
add
fistpl
add
sbb
sbb
insb
add
mov
gs
gs
add
dec
insl
jnp
gs
jb
outsb
inc
or
clc
add
inc
add
add
add
sbb
fs
dec
inc
add
js
mov
gs
jae
xor
add
imul
gs
add
or
add
add
fildl
add
add
add
je
add
add
add
les
add
add
xor
add
add
add
mov
add
pop
ret
dec
fnsave
rcrb
imul
mov
mov
mov
dec
cmp
jne
dec
dec
xlat
in
pushf
add
cmpsb
icebp
xor
stc
pop
mov
dec
fidivl
and
mov
push
ss
loope
fs
fiadds
pop
sbb
add
adc
arpl
cmpb
and
dec
mov
mov
fsin
lods
mov
push
xchg
lea
lods
pop
notb
sbb
call
dec
js
je
push
call
xchg
sbb
jbe
mov
adc
mov
fcomps
int3
jo
and
and
das
inc
pop
test
push
mov
das
ficompl
jecxz
rcrb
mov
push
data16
mov
std
sbb
mov
push
fninit
lea
repnz
stos
fisttpl
mov
jo
mov
mov
mov
sbb
push
sub
dec
dec
pop
mov
clc
test
leave
dec
sti
stos
push
cmp
xor
mov
cmp
mov
lods
and
jp
and
fcom
cli
inc
fisubrs
jecxz
mov
fldl
ss
scas
or
cmp
mov
push
aaa
cwtl
mov
mov
push
movsb
and
adc
push
add
shl
mov
movsl
inc
mov
jl
mov
in
and
test
je
xor
push
pushf
loope
or
push
and
lods
ja
pop
hlt
bound
int3
mov
out
add
jns
shr
pop
cwtl
xchg
ljmp
int
pop
scas
loopne
addr16
aam
insl
and
push
push
ret
call
add
lret
movsl
add
push
rcrb
clc
jg
inc
les
or
mov
popf
ret
clc
push
and
dec
test
cmc
sub
push
addb
or
les
mov
into
subb
lea
les
jl
jbe
mov
mov
repnz
stos
sub
ret
dec
hlt
xchg
aas
je
je
jb
bound
call
xchg
mov
popa
jnp
popf
inc
dec
jne
negb
sbb
outsb
or
inc
in
addl
in
mov
or
lock
fisttpl
mov
aam
jno
cltd
or
and
std
inc
inc
insl
and
jns
loopne
xor
cmc
jns
ret
pop
push
leave
cld
imul
mov
jnp
fbld
popa
js
push
sahf
outsl
data16
lcall
hlt
pop
xor
mov
imul
and
xchg
mov
push
loope
aas
sti
lea
mov
dec
stos
xchg
inc
mov
mov
jmp
pop
mov
mov
negl
mov
ss
shll
mov
scas
int3
loopne
int
mov
pop
push
sbb
bound
sbb
sub
cmpsl
gs
out
nop
sub
jb
dec
jle
lods
fistps
pop
fnsetpm(287
push
lea
mov
stos
icebp
and
inc
add
pop
mov
out
push
call
inc
push
sbb
gs
bound
test
xor
xchg
mov
push
dec
repnz
mov
sub
mov
jge
dec
rcll
outsb
dec
scas
cli
push
push
xchg
mov
lock
cmp
cmp
xchg
sub
mov
leave
or
add
call
dec
and
sbb
jno
jne
adc
mov
mov
xchg
sbb
mov
xor
or
filds
pop
push
sbb
xor
inc
jb
ss
stc
insb
pop
mov
xchg
lods
jecxz
aam
stc
imul
inc
sub
mov
push
add
jne
int3
or
cmpb
mov
je
ficompl
sbb
insb
adc
loope
or
out
sbb
cmpsb
or
inc
movsb
in
jle
call
xor
adc
int3
out
mov
push
jle
xchg
jbe
mov
push
stc
mov
inc
cmp
loop
enter
out
pop
xor
sbb
mov
push
movsb
dec
xor
cs
aam
test
dec
inc
clc
adcl
add
inc
lock
mov
xor
sahf
push
test
cmp
cmp
xchg
jno
mov
cmp
or
sub
sbb
std
jg
cmp
loope
cld
pop
test
inc
ret
sbb
inc
into
fs
pop
out
mov
jnp
pop
mov
popa
mov
cmp
lock
or
adc
arpl
cmp
ljmp
mov
popf
cs
sarl
and
nop
xor
aaa
pop
in
xchg
insb
cmp
adc
push
scas
les
lcall
sbb
movsb
jmp
in
popa
int3
pop
pusha
pop
inc
or
fildll
cmp
or
jl
cld
and
push
lcall
daa
ljmp
lea
dec
fadd
bound
mov
lds
sbb
andb
scas
fwait
aam
ret
jo
outsb
cmp
fisubrl
les
jb
movsl
and
testl
sbb
cmpl
stos
pop
in
adc
mov
std
cli
mov
mov
jae
sub
cmpsb
xor
sub
out
std
mov
cmpsb
inc
icebp
lret
adc
jno
fldenv
pusha
fwait
jl
mov
xchg
imul
or
fnsave
sbb
cmp
or
jne
jmp
pop
pushf
pushf
cmp
int
mov
cmp
out
or
jno
pop
or
adc
ja
inc
test
fxsave
push
arpl
test
cli
andps
test
out
outsb
pop
mov
inc
push
sub
mov
int
cmp
ss
and
jl
inc
es
jnp
mov
fistps
enter
cltd
pop
jecxz
jle
and
out
xor
cltd
cmp
push
addl
cmpsb
cmp
fcmovu
adc
jb
aaa
or
fnstenv
push
je
jge
fucom
popf
test
pop
jl
cmc
xchg
les
or
repnz
xlat
jbe
flds
inc
push
jb
mov
divb
cmp
xchg
mov
xor
push
jne
ret
mov
mov
add
xchg
mov
pop
fcomps
in
xchg
out
dec
out
ret
inc
xchg
arpl
insb
jae
pop
sub
pop
imul
loope
ljmp
inc
push
ljmp
leave
lds
and
nop
jne
lret
mov
fdivl
je
fwait
jae
cmp
iret
mov
mov
cmc
push
fsubrs
sbb
mov
adc
mov
pop
push
mov
and
cmpps
mov
ret
or
jmp
test
andb
dec
sti
incl
sahf
into
repnz
adc
out
cld
popa
inc
push
inc
push
imul
xchg
fistpll
adc
xor
jle
fs
test
cmp
movsb
les
iret
icebp
mov
test
cmc
stos
pop
int3
pop
loop
jne
popf
repz
outsl
xchg
cmp
in
mov
sub
push
xchg
jns
rcrb
cmc
ret
loope
aas
mov
sub
addr16
jp
fsubrs
push
sar
in
addl
out
pop
mov
pop
adc
fdivrs
fucomip
das
loope
push
lea
in
add
and
mov
loope
pop
scas
enter
cmp
jle
cltd
xchg
fwait
push
pop
mov
xchg
jnp
push
inc
cld
push
dec
sbb
addr16
jo
jae
xchg
mov
aas
ljmp
sub
lret
or
lea
dec
subb
les
add
xchg
xor
mov
inc
xor
xor
repnz
stos
subl
xor
xchg
lods
jbe
fildll
sub
je
test
mov
and
scas
scas
dec
dec
sti
into
pushl
add
les
sub
test
int3
push
xor
mov
test
ficoml
adc
or
aas
test
mov
stc
sbb
mov
inc
cmp
cwtl
mov
pop
adcl
jbe
daa
inc
mov
mov
dec
std
imul
dec
leave
mov
jno
lret
aad
or
loope
imul
ljmp
sub
call
fs
sub
shrl
fmuls
insb
in
inc
stos
fiadds
cmp
int3
mov
add
je
fwait
push
addr16
sbb
or
jl
cmpsl
mov
push
fidivrl
dec
lods
xlat
addr16
push
stos
xlat
sti
mov
or
icebp
mov
mov
repz
jns
ljmp
mov
pop
sub
jmp
ljmp
pusha
mov
adc
rorb
stos
icebp
mov
lcall
dec
popl
jnp
xor
and
mov
dec
inc
repnz
aaa
or
fiadds
push
addr16
addr16
push
mov
jl
lret
test
mov
lods
enter
or
mov
xor
push
push
push
xchg
fucomp
pop
xchg
lret
add
push
pop
in
cmpsl
adc
aaa
fisubs
xor
in
inc
mov
mov
cmp
adc
scas
sarb
jae
dec
lds
pusha
dec
test
or
aas
add
jmp
les
push
js
iret
lahf
jmp
mov
aam
pop
pop
jle
shlb
outsb
jb
in
sub
sub
cmp
fstpt
add
cld
pop
jmp
cmpsl
xchg
ror
mov
lret
mov
test
or
sub
bound
scas
leave
mov
fimull
imul
xor
sti
testb
jo
sub
rorl
or
xchg
sbb
imul
and
jecxz
xchg
inc
outsb
popa
inc
push
sbbb
push
mov
xchg
sbb
outsb
pop
jp
mov
bound
rorl
xchg
xor
mov
or
and
stc
addr16
outsb
or
shlb
aam
repnz
rorb
test
jno
jns
dec
out
scas
test
out
in
inc
jp
and
push
push
adc
bound
xor
pop
push
jo
js
pop
inc
aad
js
fwait
and
je
inc
add
ucomiss
stos
rorb
fdivl
sbb
aas
mov
pop
cmp
cmp
xchg
fildl
ds
sbb
xchg
and
sub
mov
out
out
inc
shrb
xchg
inc
fwait
push
dec
outsb
cs
xchg
vpsraw
and
aam
jge
sub
or
jle
xchg
fimuls
add
rcr
les
clc
ret
dec
ja
jnp
jnp
scas
xchg
xlat
jno
fwait
push
mov
and
push
test
mov
das
inc
xchg
jle
notb
sub
pusha
in
cmp
insl
leave
mov
sub
cmp
ret
fiaddl
test
inc
and
imul
mov
sub
push
mov
add
test
test
mov
pop
icebp
pop
bound
orb
jno
das
xlat
add
cs
sbb
shrb
scas
ljmp
adc
into
and
repnz
cli
imul
in
xchg
sub
mov
cltd
mov
sub
sub
jp
lds
enter
xorb
xor
in
jge
test
pop
mov
xor
shlb
into
and
nop
mov
inc
sbb
inc
mov
fst
cmp
pop
sub
loope
lcall
movsb
out
mov
mov
addr16
repz
insl
scas
test
in
xchg
nop
repz
arpl
mov
test
dec
sub
xor
xchg
pop
or
pop
sti
nop
fimull
test
cmp
mov
mov
incl
sub
sbb
mov
daa
xor
mov
jae
cli
cli
or
loopne
addr16
stos
pop
sub
jle
pop
popa
xchg
test
bound
jne
pop
sarb
or
mov
xor
clc
and
cmp
jbe
ficompl
int3
cmp
das
cmpsl
push
mov
pop
sub
jno
push
jge
jmp
mulb
outsb
mulb
mov
mov
shr
cmc
icebp
jl
adc
lds
cmpsb
test
rclb
test
push
xor
imul
dec
outsb
stos
or
and
shrl
out
stos
dec
xlat
pop
cmpb
nop
push
push
clc
lcall
incl
test
jae
push
test
inc
imul
push
dec
js
cmpsb
inc
dec
test
fiadds
mov
cld
jnp
fs
pop
lret
inc
imul
mov
sub
aad
mov
test
and
mov
lret
pop
test
sbbb
int
ljmp
pop
pcmpgtb
mov
pop
sahf
dec
imul
pusha
ss
jl
cmpsl
cli
mov
pop
sbb
lods
jo
jae
stc
xchg
xor
jb
loope,pt
jae
aam
xor
adc
mov
pop
clc
addl
into
js
insl
mov
xchg
push
arpl
sbb
jge
dec
loope
push
out
jle
adc
mov
sub
jno
mov
jbe
leave
mov
fs
xor
outsb
inc
jnp
insl
inc
ljmp
xchg
push
sti
xchg
mov
lret
cld
xor
xchg
dec
cmpb
dec
pop
cmp
inc
leave
cmp
push
jae
adc
cmp
fsubrp
fwait
and
mov
cmp
shl
les
adc
fstl
test
scas
call
fbstp
mov
stos
shr
xchg
xor
mov
in
jmp
jp
out
pop
std
push
adc
inc
mov
inc
xchg
push
push
jmp
or
int
leave
cmp
loope
cmp
push
pop
fwait
sbb
push
ret
inc
push
stos
push
int
xchg
mov
movsb
cmc
pop
adc
sbb
in
fidivl
stos
mov
lahf
sbbb
dec
cmp
mov
mov
inc
mov
adc
aaa
adcl
decl
pop
in
and
aaa
dec
xchg
pop
inc
push
cmp
iret
mov
mov
lods
xchg
loop
jg
and
mov
aad
lea
movsb
and
es
sbb
xchg
adc
test
adc
out
lds
xor
cmc
cli
sti
mov
cmpsb
orl
shrb
filds
test
push
insb
cmp
leave
repnz
addb
xchg
pop
dec
push
sbb
jns
sub
xor
in
mull
pop
mov
lahf
fbld
add
sbb
jne
push
dec
call
pop
ljmp
dec
fidivs
mov
jbe
sbb
push
and
jne
mov
jp
popf
fwait
sub
lods
lcall
inc
xchg
xchg
jnp
aas
iret
mov
jmp
pop
add
sub
adc
cmp
in
pop
nop/reserved
std
int3
aam
and
sbb
jecxz
jle
push
or
movsb
test
enter
mov
pop
xor
sti
lahf
jbe
insl
jo
adc
mov
pop
cmp
jae
lods
enter
add
sbb
sbb
lods
adc
js
sbb
add
xchg
sbb
sub
or
xchg
pusha
sahf
xchg
cmp
dec
xor
jo
fcmovne
dec
pushf
sub
cs
jl
sub
mov
inc
outsl
pusha
dec
adc
fwait
inc
mov
movsl
push
jmp
mov
mov
mov
sub
loopne
sub
imull
ret
mov
cli
divb
sti
addr16
imul
mov
mov
imul
popf
movsl
pop
js
add
arpl
test
xor
mov
pop
mov
aam
adc
inc
jmp
leave
shll
sahf
fwait
mov
push
cmp
dec
jo
fs
fistpll
push
mov
popf
rcll
xchg
mov
shll
movsl
push
les
push
mov
push
adc
mov
jle
add
ds
mov
jmp
sub
push
jp
or
decl
sbb
sti
gs
lret
mov
xor
xor
stos
into
stos
nop
pop
push
xor
mov
loopne
iret
jb
jl
xchg
dec
mov
mov
mov
popa
icebp
xorb
iret
pop
and
push
lods
loopne
inc
out
imul
insb
bound
es
ljmp
mov
fisubl
adc
xor
cmp
jge
test
sub
call
aaa
popa
lods
jmp
adc
push
xchg
xchg
mov
stos
xlat
sbb
xlat
mov
scas
push
nop
jne
je
adc
lods
xor
sahf
jne
lahf
movsb
inc
insl
pop
sub
leave
xchg
jbe
jns
sbb
inc
aas
scas
int
test
mov
jg
xor
inc
sbb
sub
or
mov
in
fiaddl
in
rcr
push
sub
add
lock
ljmp
ja
into
add
or
inc
rclb
mov
jmp
adcl
stos
cmp
pusha
mov
push
dec
mov
sbb
jb
in
jmp
xchg
xor
insb
xchg
fdivrs
sbb
aam
out
dec
outsl
addr16
ja
mov
jecxz
inc
push
mov
fscale
test
dec
add
mov
sbb
jns
cmpsb
jecxz
push
jecxz
lret
bound
and
and
jge
ja
outsw
out
or
pop
sti
inc
lahf
or
mov
jnp
mov
lea
inc
aaa
shll
sbb
xor
push
insl
jp
pop
push
shr
cwtl
ja
popw
dec
test
sub
ret
pop
xor
pop
adc
add
test
mov
in
testl
das
adcb
in
imul
cmpsl
add
pop
ss
or
add
mov
xchg
sub
pushf
jg
push
push
jle
scas
ret
push
clc
test
push
iret
ljmp
int3
fdivrs
movswl
jno
xor
leave
insl
mov
inc
movsb
adc
lret
test
jne
xchg
xchg
mov
sub
out
xchg
enter
fidivs
or
sarb
push
add
sub
imul
sub
stos
xor
adc
jae
ja
leave
cmp
sbb
lock
incb
test
movsl
cwtl
mov
pop
ret
dec
sub
cmpsl
movsl
xlat
orb
je
jo
addr16
in
mov
div
adc
and
ret
into
jg
mov
jl
inc
pop
adc
outsl
lret
and
clc
testb
push
jge
or
fs
pop
push
arpl
or
cmp
loopne
sub
adc
push
cmp
push
rcll
adc
ret
xchg
lods
and
ja
sbb
cld
data16
adc
push
dec
cmp
xchg
add
sbb
add
add
sub
add
add
add
add
mov
add
pop
add
test
add
add
add
cmp
add
add
add
adc
add
add
add
add
in
add
add
add
add
jmp
add
add
xor
add
inc
add
stos
stos
sti
add
mov
dec
int3
int3
int3
int3
int3
dec
jl
add
add
jno
je
insl
add
add
add
add
mov
add
add
or
add
add
add
add
movb
int3
add
cld
add
pushf
add
xchg
add
add
cmp
add
clc
or
ds
data16
popa
add
gs
add
and
ja
mov
pop
roll
jecxz
sbb
mov
fstpt
xor
or
inc
cmp
lcall
call
sub
or
jmp
test
or
sbb
clc
insb
mov
mov
lea
daa
fsin
shlb
lahf
repz
add
js
adc
add
adc
cmc
add
xor
adc
pop
decl
ljmp
decl
adc
pushl
sarb
push
enter
popf
jne
int
add
idiv
add
jmp
adc
fadds
add
adc
add
push
add
sbb
add
add
add
push
add
insl
roll
inc
outsw
jne
adc
jo
nop
inc
imul
push
inc
gs
inc
mov
inc
add
cs
outsl
jae
cmp
insb
mov
outsl
gs
jne
stc
outsb
jb
xor
inc
cmp
sbb
add
add
add
in
add
clc
add
mov
add
pop
add
or
add
add
add
cld
add
call
add
add
les
repnz
rorl
gs
xchg
fscale
xor
fisubs
or
es
aaa
rclb
sub
out
mov
jne
lret
fimuls
push
loop
lret
push
repnz
mov
pop
mov
test
xchg
out
gs
jb
sbb
pop
jbe
fsubs
mov
popf
mov
pop
or
fs
nop
mov
xor
xchg
mov
pop
fnstcw
scas
push
add
xlat
adc
push
xchg
mov
pop
mov
mov
loope
shrl
arpl
cs
or
mov
xrelease
in
jbe
or
cmpb
aas
or
dec
adc
adc
aaa
add
mov
icebp
andl
and
fiaddl
jecxz
outsb
jo
clc
jl
fcoml
and
mov
jo
emms
sub
and
aad
stc
push
xchg
and
pop
push
fwait
push
int
les
ljmp
dec
imul
dec
push
mov
in
add
movb
outsb
fwait
cmpl
dec
push
bound
and
jne
aas
lcall
mov
dec
lret
mov
sbb
xchg
lods
in
pusha
imul
pop
pop
jo
inc
pop
dec
fisubrl
sbb
arpl
sbb
xor
test
sbb
shrl
je
cmp
int3
out
dec
pop
adc
les
in
xor
xorl
fcmovbe
imul
mov
cwtl
rclb
pop
scas
fidivs
clc
xchg
loop
mov
jmp
adcl
iret
jno
add
cmc
mov
cmpsb
push
adc
sbb
cmpsb
mov
jns
inc
add
test
mov
cmp
mov
pushf
rcll
xlat
scas
pop
push
adc
cmpsl
sarb
sti
push
push
addr16
int3
xchg
cmpsb
imul
adc
pop
push
dec
xor
mov
shlb
roll
pop
imul
sbb
pushf
sti
cmp
mov
addr16
inc
mov
mov
test
cmp
dec
pop
gs
mov
mov
adc
pop
lea
cmpsl
stos
cs
int
je
cmp
jp
mov
nop
fdivs
mov
mov
lock
add
gs
sbb
leave
jge
jnp
test
lock
enter
inc
and
jne
int3
mov
push
or
dec
testl
scas
cli
call
pusha
mov
roll
mov
xor
cmpsb
and
jb
add
pop
mov
dec
ret
test
mov
mov
sub
outsl
xchg
xchg
int
xor
lods
ret
fisttps
mov
sbb
add
sar
es
inc
adc
pop
sbb
pop
stos
rcrl
outsl
stos
pop
and
test
add
loop
lea
outsl
cmpb
roll
xchg
add
mov
mov
pop
pop
jl
cmp
sbb
xchg
daa
adc
in
je
jecxz
dec
in
or
repnz
add
xor
xor
pop
lahf
xchg
mov
and
add
fcmovnu
push
mov
in
test
pusha
loope
dec
dec
sbb
cmc
stos
jb
cmp
mov
jo
mov
inc
adcl
loopne
sti
js
ss
inc
movsl
call
push
scas
repz
dec
push
sti
aam
mov
push
mov
lds
imul
aas
jl
mov
std
in
or
push
cld
add
ja
fcompl
lds
jmp
pop
fldcw
and
lret
fidivs
ds
jo
dec
and
sbb
out
imul
pusha
je
push
mov
int
inc
dec
sub
push
mov
movsb
push
mov
push
add
mov
pop
cmp
inc
push
jge
sti
push
dec
cmp
mov
and
mov
push
mov
mov
mov
rcl
inc
mov
sbb
mov
push
addr16
pop
jl
pop
stc
sub
pop
sbb
lcall
cmc
repnz
pop
daa
mov
cmpsb
xor
dec
fisttpll
mov
cmp
popf
lret
scas
ret
jecxz
lahf
cmp
stos
mov
add
cmp
sbb
or
push
mov
mov
or
pop
test
adc
push
add
notl
jae
popf
pop
lret
cltd
test
lock
ss
push
daa
sub
mov
sbb
js
fadd
push
sbb
adc
dec
xchg
xor
cmp
mov
fdivp
das
gs
pop
in
int3
xor
adc
stc
fmull
movsb
int3
imull
xor
andl
repz
scas
nop
xor
push
pop
xchg
and
shll
mov
push
pop
sbb
insb
push
orl
add
adc
cwtl
sub
dec
das
pop
pop
adc
pop
cmp
lds
sub
aas
ljmp
leave
loopne
lahf
jo
mov
sub
sahf
and
popf
or
xor
jo
jmp
test
pop
cli
sbb
mov
jb
add
cmp
inc
das
xor
xchg
cmc
mov
mov
imul
mov
std
pop
xchg
or
add
in
jne
test
adc
data16
mov
inc
mov
stc
jmp
or
pop
aam
jae
shll
in
test
xchg
cmp
out
xor
jg,pt
idivb
outsl
imul
std
popa
cmpsb
xchg
cmp
push
inc
fidivs
sbb
icebp
mov
or
push
je
pop
and
mov
popa
or
out
push
pop
sub
pop
adc
test
dec
jne
sbb
mov
adc
nop
repnz
mov
jmp
ret
push
lods
mov
andb
cmp
xchg
inc
cltd
rcll
sub
mov
cmp
popa
sbb
adcb
jmp
repnz
mov
movsb
dec
mov
shlb
pop
sbb
pop
push
xor
hlt
jle
sti
in
push
xchg
call
lret
xlat
imul
push
shrl
or
xchg
mov
enter
push
fwait
sbb
mov
cltd
push
ljmp
ss
fidivs
pop
lock
mov
or
jecxz
rcrb
aas
mov
push
jmp
in
pop
jo
mov
dec
push
push
mov
lahf
mov
jge
notl
movsl
push
push
jbe
fisubrs
repz
inc
lea
bound
dec
xor
and
call
pop
adc
jns
mov
or
pop
inc
movsb
push
cwtl
mov
lahf
fcomps
mov
and
cmc
pop
int3
jecxz
sbb
mov
xchg
fwait
pushf
test
and
cwtl
mov
mov
movsl
add
iret
aaa
mov
aad
jae
repz
jmp
rsm
cmp
jb
lods
dec
mov
xor
jae
shlw
push
mov
inc
fldcw
jmp
mov
mov
push
or
test
nop
mov
arpl
mov
pop
lods
ljmp
or
lahf
ja
data16
adc
lods
mov
pop
or
or
xchg
clc
sarb
inc
mov
mov
divl
lods
inc
rorl
sbb
cmp
loop
xor
hlt
nop
int
and
push
lret
test
ja
test
inc
movsb
pusha
inc
enter
pop
and
fstp
jecxz
push
adc
push
dec
inc
lock
mov
adc
sub
sbbb
cmp
mulb
pusha
push
jg
xchg
or
sub
xor
ja
dec
push
or
push
cs
orl
mov
outsb
xchg
lahf
outsb
sbb
clc
mov
cmp
sbb
mov
dec
stc
mov
lret
xor
cmpsl
jne
push
lret
sbb
popa
xchg
cmp
push
cmc
pop
push
aas
mov
cltd
fsub
push
imul
repz
loope
add
jl
push
or
mov
repnz
jne
push
test
mov
lods
or
add
or
pop
xor
ss
or
stc
dec
jg
aad
jecxz
mov
dec
adc
fldl2e
push
pop
or
lret
cmp
movsl
aam
push
sti
push
loop
cli
in
jbe
mov
cmp
mov
inc
sbb
mov
es
mov
icebp
sbb
pop
test
add
adc
pop
jecxz
bnd
dec
mov
adc
push
fidivrs
aas
pop
dec
jne
icebp
and
adc
lods
jno
mov
movsb
call
arpl
sti
call
jge
mov
jecxz
xor
stc
and
clc
fistpl
fwait
xchg
pushf
jecxz
ret
dec
mov
mov
inc
cmpsb
xor
into
test
lret
addr16
dec
dec
mov
int3
aam
and
mov
ja
mov
in
add
pop
pop
out
pusha
shll
push
es
push
out
sbb
daa
add
repz
lret
push
in
adc
lods
loopne
jle
testb
ficomps
std
jo
pop
stos
imul
out
xchg
es
cmc
lcall
test
xchg
jbe
mov
pop
sub
inc
sub
jecxz
sub
jnp
add
jae
pop
mov
les
jae
dec
pop
movsb
inc
dec
lea
shll
sub
jno
xorl
dec
stc
jnp
sbb
mov
mov
inc
andl
cmpsl
mov
scas
mov
jbe
mov
ret
ja
sub
push
clc
dec
adc
cwtl
dec
rorl
jg
mov
out
add
jno
inc
in
je
pop
mov
imul
addr16
adc
andl
adc
iret
mov
mov
jo
dec
lds
push
daa
cmp
or
insb
and
xchg
sbb
lcall
add
and
xchg
movsl
sub
sub
mov
push
or
mov
outsl
push
aad
mov
stc
pop
xor
popf
out
mov
loope
popf
movsl
cs
sti
adc
mov
pop
and
mov
sbb
add
jecxz
imul
and
jo
push
lret
add
xor
push
push
jge
or
xor
sub
test
pop
jae
mov
int3
cmp
sarl
sub
pop
xchg
mov
pop
sbb
mov
cmp
mov
cmp
aad
mov
add
mov
dec
je
popa
orb
xchg
mov
lds
nop
jno
pushf
mov
jns
jp
js
mov
cmp
divl
xchg
out
sahf
clc
out
xor
ret
adc
sbb
int
xchg
dec
xchg
in
lea
push
jle
add
add
pop
jb
fldt
insb
pop
in
xchg
xchg
loop
sahf
jnp
movsl
test
movsb
aad
daa
inc
test
cmp
jecxz
add
mov
stos
btr
imul
cmpsb
mov
ficomps
and
ljmp
dec
push
shll
dec
imul
dec
fstps
pop
lcall
and
jns
insl
adc
xor
mov
pop
mov
and
adc
jg,pn
ror
dec
mov
in
scas
sbb
dec
or
in
bswap
sub
sahf
cmpl
add
enter
into
cmp
sub
cmp
or
daa
in
mov
int
stos
les
cld
mov
gs
pushf
push
sbb
push
movsl
pop
mov
dec
inc
jmp
adc
sbb
dec
mov
and
and
cli
mov
jge
mov
xchg
out
lcall
shl
stc
xlat
inc
lret
daa
mov
sub
cmpsb
adc
ficoms
sbb
js
cmpsl
mov
inc
push
mov
into
push
cmpsl
inc
cmovle
mov
lods
es
movl
pop
int3
inc
sub
cltd
adc
ud1
xchg
icebp
cmp
repnz
das
mov
push
or
jecxz
sbb
adc
out
jg
inc
cmp
jl
adc
inc
mov
gs
data16
xchg
and
mov
out
imul
mov
pop
dec
fmul
aaa
jns
ret
or
iret
xor
or
cmp
mov
stos
jle
imul
push
js
push
call
sub
and
ficomps
adc
test
jbe
loope
sti
in
inc
test
shr
outsl
int3
mov
xchg
jl
sub
out
addr16
mov
das
mov
arpl
mov
shlb
es
dec
js
jg
adc
inc
dec
xchg
mov
insb
movsb
xchg
adc
inc
adc
pop
sarl
test
jl
movsb
push
lret
adc
insb
mov
imul
lret
aam
and
addl
push
inc
daa
mov
lea
jae
pop
mov
push
dec
jl
xorl
inc
pop
mov
test
sar
cmp
test
mov
cs
dec
iret
outsb
jge
mov
sbb
enter
adc
mov
fwait
testb
std
push
lock
push
in
add
insl
daa
pop
or
leave
mov
pop
mov
movlps
icebp
push
out
or
mov
pop
je
sub
in
lahf
mov
cltd
lahf
lcall
inc
stos
xchg
cli
lock
jno
leave
aaa
mov
js
gs
and
movsb
mov
int
lret
sar
icebp
push
cltd
pop
call
leave
stos
stos
xor
lret
imul
or
sub
cmp
add
jecxz
int3
daa
pop
lahf
jge
lock
stos
popa
pop
sahf
pusha
mov
arpl
iret
leave
test
lock
xor
sarl
xor
sti
pop
incb
push
push
adc
sahf
inc
mov
scas
lret
jl
sbb
sub
pop
or
push
dec
ficomps
and
cmp
xchg
push
sbb
and
sub
ret
pop
aad
adc
cs
sahf
shll
mov
mov
mov
xorl
pop
add
mov
sub
sbb
mov
mov
sbb
leave
jl
pop
std
fstps
xchg
stos
dec
ja
add
xchg
pop
mov
add
insb
idivl
pop
scas
jno
stos
fisttps
ljmp
jecxz
and
aas
mov
push
push
cmp
divb
mov
inc
imul
jbe
jg
inc
mov
mov
sub
fldenv
push
inc
sub
mull
xchg
leave
negl
xchg
pop
push
sarb
mov
pop
fs
inc
movsl
push
fwait
and
lds
adc
adc
leave
jmp
sbb
popa
ret
adc
enter
or
loope
push
xor
mov
push
xchg
dec
push
cld
push
aaa
or
and
in
fiadds
cli
or
adc
js
push
es
scas
int3
inc
hlt
sub
imul
jns
jb
jo
or
jmp
add
xchg
pop
push
mov
negb
test
insl
or
mov
xchg
andb
enter
push
and
inc
xchg
mov
js
jmp
mov
ja
sti
cmp
or
stos
xor
mov
or
fmuls
xchg
dec
fs
add
mov
mov
outsl
cld
dec
sahf
rcrb
es
mov
sbb
loop
adc
ret
aas
jge
dec
jmp
inc
pop
dec
pop
pushf
xor
movsl
clc
enter
in
jle
cmpsb
push
xchg
dec
jbe
push
dec
or
popf
shrw
dec
or
xor
mov
data16
mov
pusha
xor
push
addr16
push
jg
repz
adc
jbe
or
cli
add
inc
cmp
push
mov
inc
xchg
shl
xchg
mov
push
sbb
popa
lret
push
lret
xchg
ljmp
aam
add
cmc
push
xlat
in
push
in
and
cmp
fwait
xor
clc
jnp
pop
jl
sbb
cmp
lret
sbb
ret
mov
push
arpl
aad
sub
adc
sbb
jns
jns
out
mov
push
les
xchg
in
and
out
mov
fisubl
push
adc
and
sub
lret
inc
testl
imul
xorl
mov
mov
test
sub
mov
adc
insl
sub
sub
jle
or
push
push
or
inc
ljmp
cmp
dec
lcall
lcall
xchg
inc
into
jge
lds
je
test
divl
ss
shll
daa
xchg
jp
fisttpll
push
xchg
and
rol
cmp
shl
or
insl
mov
and
stc
pusha
jecxz
or
daa
or
push
dec
sub
push
jmp
mov
xor
xchg
xlat
pop
lock
push
add
jecxz
push
mov
and
in
testb
in
dec
xor
push
rcll
pop
repnz
test
pop
pop
lea
adc
dec
cld
ss
sbb
movsl
sub
outsb
fwait
mov
mov
pop
sbb
es
add
jae
fstpl
jo
jae
or
fiaddl
cwtl
inc
in
xor
pop
fldl
icebp
inc
addb
cmc
jp
loop
lock
out
les
or
stos
repz
outsb
pop
mov
xchg
mov
pop
mov
shlb
mov
mov
outsl
scas
mov
jae
lret
ds
push
inc
add
in
pushf
popf
loopne
jle
negl
jnp
add
call
mov
dec
js
stos
out
mov
xlat
dec
lret
cmp
scas
shrb
push
push
icebp
sbb
out
add
xchg
push
dec
cld
dec
xchg
sbb
lods
add
cmp
int3
xchg
mov
fadds
scas
cmp
mov
jne
repnz
fnstcw
pop
push
sbb
adc
fdivr
mov
lds
aas
dec
jl
aas
ljmp
test
gs
out
xchg
xchg
inc
jmp
iret
pop
inc
jne
sbb
cmp
js
pop
not
sahf
add
fisttpl
and
mov
ret
mov
int
rcl
enter
mov
ret
in
dec
dec
push
ljmp
pop
pop
mov
mov
ds
jo
lret
jmp
jecxz
inc
push
jbe
mov
xchg
jae
stc
add
shlb
sub
add
xor
dec
push
sbb
cmp
mov
cmp
movsl
icebp
jns
dec
lret
mov
xor
mov
lods
jle
inc
leave
sub
negl
fistl
fisttps
xchg
mov
jmp
lds
dec
sub
out
inc
movsl
xor
pusha
in
icebp
out
mov
inc
push
lock
jmp
xor
test
fwait
xchg
test
xor
fs
pusha
ror
cmp
sbb
int
xor
sbb
or
add
add
add
cld
add
call
add
add
add
js
add
add
add
or
add
add
faddl
add
add
add
add
add
add
add
or
cld
add
mov
xor
pop
sub
add
lods
add
ljmp
ja
adc
jmp
dec
int3
int3
int3
int3
int3
add
add
mov
mov
or
add
adc
test
add
jp
add
add
mov
fisubl
adc
add
and
or
add
test
add
jb
testl
cmp
sbb
sbb
sbb
pop
add
add
sub
pop
stos
jae
inc
jb
mov
mov
enter
jecxz
out
sarb
dec
or
mov
add
decl
std
push
ficoml
add
aad
call
dec
stos
push
lock
clc
gs
jecxz
push
mov
sub
jbe
pop
mov
push
lcall
mov
add
jns
pop
push
push
je
test
inc
loope
aad
push
cmp
test
test
lret
std
je
movsl
and
or
add
or
mov
mov
call
test
clc
push
lahf
sub
adc
push
push
mov
add
ret
pop
add
mov
add
jne
add
sbb
movsl
add
add
sub
filds
add
jmp
gs
insb
outsb
xor
add
inc
xchg
mull
jo
in
dec
je
arpl
jp
add
mov
je
sarb
add
lods
xchg
add
add
cld
popa
gs
inc
xor
jne
add
add
movsl
add
add
sub
jp
add
add
mov
fisubl
add
add
push
add
add
cmp
dec
cmc
add
add
lcall
pop
rorb
aad
adc
add
scas
xor
jo
xchg
pop
sbb
mov
add
cmp
pop
daa
bnd
dec
or
gs
cmp
mov
popa
inc
lcall
push
insb
mov
sti
testl
cld
lea
pop
pop
dec
xchg
in
jg
nop
jecxz
fidivrl
repnz
je
insb
scas
add
add
dec
xchg
lret
cmp
add
shlb
dec
sbb
mov
xchg
imul
push
hlt
ret
lods
icebp
push
scas
ret
adc
cmp
out
mov
sbb
mov
in
mov
pop
popa
xor
hlt
push
popa
lahf
push
jg
mov
pushf
sub
sbb
push
push
and
or
shll
sbb
cmp
jb
clc
xchg
adc
or
add
cmc
js
ret
xchg
cmp
out
in
inc
ret
xor
cmpsl
xchg
jns
pop
pop
and
dec
jno
outsl
push
adc
mov
mov
repnz
ret
sub
inc
xor
or
pop
aam
popf
fdivrl
mov
es
pop
xor
bound
stos
dec
stc
sar
xchg
pushl
jecxz
dec
hlt
xlat
adc
add
lret
gs
pop
adc
mov
mov
jge
pop
xor
xor
jns
or
std
cltd
inc
into
pop
jecxz
rcrl
pusha
int
test
popa
push
adc
lock
jns
sbb
stos
mov
and
xchg
data16
imul
arpl
pop
insb
repnz
push
jnp
mov
xrelease
jnp
rcrl
xor
sub
mov
into
xor
jg
xchg
test
xchg
push
adc
fs
fldenv
cmpb
enter
sbbl
movsb
sahf
mov
add
test
div
fs
sub
nop
xchg
out
fcomip
add
cld
pop
nop
dec
dec
dec
inc
jno
lret
subb
out
jmp
arpl
xor
push
push
scas
inc
lock
movsl
sub
into
mov
fimull
jne
fmull
mov
movsb
lods
scas
cli
mov
dec
or
lahf
xchg
cmpsl
and
cli
sti
cltd
mov
int
lret
or
or
mov
xor
and
cmc
add
jno
imul
and
dec
pushf
inc
push
push
jge
push
in
pop
pop
mov
fwait
rcr
jl
cmp
dec
mov
cs
fsubs
mov
fwait
add
into
into
fisubl
sub
jmp
stc
inc
jo
cwtl
aam
out
je
inc
xlat
nop
jbe,pt
mov
rcr
push
mov
jl
pop
xor
pop
pop
lods
mov
adc
inc
inc
mov
mov
push
or
inc
fldenv
incl
aas
lret
mov
mov
repz
fwait
ja
sub
push
pushl
xchg
das
pop
aam
iret
lea
mov
fstpt
xchg
add
inc
push
dec
mov
repnz
leave
push
dec
inc
test
cmp
cmp
pop
mov
outsb
stos
ja
gs
repz
pop
iret
or
jb
divl
int
xchg
and
std
mov
and
xchg
or
push
outsb
jne
aaa
pop
imul
repnz
xor
dec
jecxz
push
adc
je
shl
mov
add
sub
jecxz
insl
pop
aaa
fdivs
inc
ret
loopne
or
popf
jb
icebp
mov
and
xor
lret
push
clc
inc
inc
mov
add
cli
stos
mov
bndldx
sarl
push
and
test
out
jecxz
jmp
hlt
ret
jbe
sub
psubsw
push
cmp
out
aad
mov
inc
mov
jno
cmc
cwtl
sbb
sahf
and
xor
xor
mov
inc
jae
addr16
mov
ret
cmp
pop
cmp
out
xchg
xor
sub
and
push
test
adc
test
push
rolb
lcall
je
xchg
sarl
xchg
icebp
scas
enter
or
add
lret
mov
xlat
sbb
dec
mov
sarb
shll
das
pop
mov
mov
sbb
sbb
pop
pusha
ret
mov
lret
mov
int3
idivb
push
mov
jno
lcall
fimull
inc
jle
mov
xorl
out
pusha
sarb
pushf
push
push
push
mov
inc
popf
out
jb
or
lret
push
arpl
and
jne
xor
cmc
or
sbb
call
idivl
or
pop
decb
dec
pop
inc
call
andb
and
jns
ret
cltd
xor
outsl
out
outsb
je
and
fadd
mov
mov
ret
loopne
loopne
popa
xchg
andl
sti
insb
out
dec
shlb
sbb
push
int
filds
cs
mov
sub
fwait
sti
push
cmp
xchg
inc
js
fdivs
and
lock
outsb
add
fimull
movsb
xor
mov
lds
push
adc
ss
aam
fldcw
lea
add
cmp
add
mov
sub
shl
aad
mov
add
lret
inc
insl
dec
push
nop
iret
mov
stc
fistl
mov
push
ja
mov
pushf
jbe
lret
rcll
outsl
stc
pushf
sub
lods
popf
loopne
xchg
mov
out
dec
fnsetpm(287
add
nop
fnsave
fistps
fwait
nop
dec
das
enter
sub
inc
sbb
push
fdivrl
fimull
into
and
daa
pusha
jnp
cmp
dec
lds
aam
lret
adc
jle
aaa
insb
and
jle
fcmovnb
fsub
cmp
push
fildl
jg
jno
lret
sbb
cltd
add
shll
dec
inc
push
std
test
inc
mov
in
loopne
xor
dec
adc
aam
mov
cli
mov
cmc
or
pop
lea
mov
pop
loope
cmpsb
inc
mov
ss
sahf
jge
outsb
adc
adcb
jp
add
adc
push
unpckhps
sbb
int
jno
inc
sbb
addr16
pusha
and
jg
add
mov
mov
and
ss
dec
mov
faddp
lods
popa
idivl
inc
in
lcall
ds
stc
mov
or
and
mov
lods
xor
lds
pop
inc
insb
divl
adcb
js
les
lds
xor
orb
test
mov
cwtl
fucomip
mov
xor
jmp
fwait
jne
push
xor
das
ja
adc
cs
popa
or
push
add
push
out
cltd
das
ss
mov
adc
scas
shll
xor
xchg
xchg
lcall
sbb
test
cmc
lahf
mov
sub
sub
xchg
cmp
sbb
mov
scas
aam
or
sbb
pop
popf
decb
sub
in
push
js
mov
fs
sbb
adc
gs
ret
jnp
mov
gs
push
iret
mov
inc
adc
dec
xor
aas
shrb
in
cmp
xchg
mov
call
mov
push
rcrb
xor
out
imull
cmp
jae
shr
fmul
loope
cmpl
mov
rcrb
js
or
rolb
les
imul
mov
sarb
push
and
xchg
adc
ds
fs
sub
pop
out
data16
mov
lock
in
data16
es
pop
fisubs
add
xchg
cltd
mov
inc
push
mov
mov
pop
xor
xchg
push
inc
fisubrs
dec
jp
mov
fildl
push
cmp
std
popa
jmp
dec
loope
and
clc
cmp
jg
out
lea
daa
pop
push
je
adcl
and
mov
popa
xchg
aad
sahf
aas
rclb
and
sbb
sbb
mov
jae
outsl
lret
fidivs
cmp
mov
and
rorl
rorl
fisttpll
in
out
imul
push
sbb
inc
mov
mov
rcrb
push
imul
dec
push
adc
aas
leave
lcall
int3
andl
mov
or
sbb
dec
scas
fimull
out
loopne
mov
daa
lcall
push
and
lret
lcall
inc
mov
bound
or
xchg
jae
mov
cmp
lea
mov
push
sub
cmp
daa
add
icebp
sub
pop
sub
test
cmp
movsb
push
out
cli
lret
scas
push
mov
sbb
or
mov
call
mov
rorl
cmp
lods
cmp
jp
rcl
push
push
nop
ds
jnp
dec
mov
rcl
adc
jle
inc
sub
jmp
gs
push
cmp
fiaddl
dec
adc
clc
jle
mov
mov
cmpsl
jb
in
push
fcoms
sbb
jmp
mov
jge
mov
jne
sub
out
mov
int
mull
mov
aaa
ljmp
aam
into
jbe
addl
jae
mov
sbb
aas
in
fistps
or
iret
int
out
and
stc
sub
push
xor
sahf
hlt
lcall
les
fcoms
fstl
mov
add
dec
xchg
jecxz
scas
sub
loopne
arpl
in
mov
dec
cmpsl
sbb
add
pop
jno
repz
mov
rorl
dec
outsb
adc
clc
xor
in
les
xlat
jbe
pushf
imul
mov
ret
push
adc
xchg
sub
push
cltd
je
inc
push
popf
out
aas
adc
shld
pop
ja
sbb
push
cmpsb
aas
shrb
mov
cmp
inc
jbe
xchg
adc
xchg
lock
xchg
mov
shll
lret
pop
jns
pop
and
out
mov
fldt
test
out
dec
push
mov
das
ss
sbb
cmpsl
push
dec
xlat
mov
jp
push
jae
pop
fistpl
mov
stc
lods
int
ss
dec
jge
out
pop
jo
push
push
xor
scas
dec
push
test
out
mov
sbb
xchg
es
imulb
fnstenv
add
mov
inc
add
imul
mov
popf
mov
mov
mov
jg
shlb
repz
pushaw
mov
adc
cwtl
dec
cwtl
mov
dec
mov
mov
out
or
fisttps
sbb
sti
fsts
incb
xor
dec
dec
mov
leave
insl
mov
cmp
jge
xor
xchg
inc
or
pop
push
fldl
and
add
sub
push
dec
xlat
push
clc
fimull
imul
sbb
imul
add
mov
sbb
cwtl
adc
shll
jo
cld
dec
push
dec
and
inc
fdivrl
pop
jbe
sub
mov
ret
xor
xchg
lods
and
sti
mov
mov
adc
rcll
test
mov
xchg
stos
pop
adc
cmc
js
inc
xor
dec
lcall
mov
sbb
popf
and
or
xor
mov
jle
adc
push
lret
loopne
clc
fistpll
mov
push
dec
xchg
insl
pop
inc
cmpsb
es
vmread
mov
lods
or
push
gs
arpl
jo
lds
nop
push
lahf
xor
fcmovnb
xchg
add
adc
ja
add
repnz
fmull
dec
int
pushf
sub
or
mov
mov
cmc
imul
push
sub
fistpll
mov
push
fwait
call
sub
cmp
xor
ljmp
in
push
lret
cmp
movsl
scas
iret
dec
test
in
pop
bound
xchg
mov
movsb
cltd
addb
mov
sbb
ja
lods
or
or
inc
add
loopne
int
cwtl
push
adc
fsubp
popa
mov
mov
daa
jno
jmp
inc
imul
cmp
loopne
stos
fistpll
pop
or
mov
pop
mov
mov
pop
and
sub
out
test
imul
sbb
and
sub
filds
push
insb
lret
jo
fldl
sbb
jno
push
xchg
sete
lods
popa
loope
aad
into
hlt
and
sub
sbb
cltd
loop
inc
sbb
cmpl
lret
or
xchg
aad
stos
sbb
jo
cltd
lret
ficompl
lahf
call
push
push
fwait
pop
push
pushl
cvtpi2ps
iret
or
test
out
fwait
scas
sub
popl
or
call
pusha
xor
out
stc
mov
bound
in
mov
mov
or
and
dec
pop
pop
sbb
xor
pusha
sbb
sub
xchg
mov
cli
dec
xor
stos
test
out
pop
stc
add
fwait
sub
ret
xor
push
jns
pusha
push
adc
pusha
call
cmpsb
js
sbb
inc
xchg
sbb
fcomps
mov
adc
and
aam
shlb
mov
mov
lods
fiadds
fdivs
push
std
add
push
fsubrl
out
int3
sub
jecxz
sub
or
xor
dec
pop
shrl
test
inc
xchg
cmc
pop
push
fwait
rcl
test
outsb
cltd
push
js
inc
loop
andl
scas
cmp
and
pop
shll
push
lahf
jnp
loop
add
push
shrl
adc
or
or
sub
hlt
jne
xchg
dec
or
adc
aam
dec
outsl
dec
mov
mov
nop
push
inc
adc
or
adc
in
js
aam
adc
add
or
stos
inc
test
dec
xor
push
push
xor
repz
mov
nop
clc
shl
stc
xor
push
mov
test
inc
pop
lock
jno
rol
in
pop
cmp
loopne
inc
mov
scas
xchg
sub
mov
andb
icebp
jo
scas
addr16
sbb
repz
jmp
jbe
cmc
aad
inc
nop
js
xchg
ds
imulb
xlat
cli
ljmp
or
fimull
inc
je
dec
jno
ficompl
ds
xchg
addl
dec
dec
mov
fstpl
rorb
cltd
orl
in
in
adc
daa
rorl
dec
gs
rorb
in
add
and
loop
sysret
fwait
imul
push
lcall
mov
int3
inc
mov
std
pop
mov
mov
repz
dec
jl
popf
mov
xor
into
stc
int3
cmp
fadds
or
leave
repz
pop
aad
pop
inc
pop
push
cltd
in
das
aaa
into
cmpsb
mov
fcoml
cltd
inc
adc
xor
cwtl
shll
out
mov
cli
mov
subb
push
mov
pop
es
aas
fsub
scas
mov
ret
jle
rclb
or
pushf
inc
jmp
stc
adc
add
push
dec
mov
fwait
dec
jns
add
leave
cmp
pop
jo
xchg
pop
or
shlb
cmpsl
hlt
xor
iret
mov
out
jmp
enter
sbb
sub
jmp
mov
cmp
popa
mov
bound
imul
xchg
mov
addr16
icebp
jne
xchg
jge
dec
dec
lods
add
xchg
cmp
push
fisubrl
addr16
imul
leave
fwait
cs
fisttps
or
add
call
push
negl
pusha
xor
loop
icebp
xchg
mov
or
inc
data16
mov
ljmp
daa
lods
les
jo
repz
shll
ds
adc
or
jnp
shr
outsl
jns
rol
dec
xchg
in
sbb
pop
das
out
mov
imul
and
aaa
push
lds
mov
mov
loope
fiaddl
adc
xchg
xor
jne
scas
scas
popa
dec
pop
in
pop
or
rolb
mov
mov
sbb
inc
insb
jg
and
fbld
jl
in
fiaddl
push
mov
loop
adc
push
add
aad
push
imul
stos
jg
stos
lea
lods
jge
inc
sbb
push
loopne
cmp
dec
les
push
sahf
sub
addr16
hlt
or
enter
push
sti
insb
jg
lret
sti
outsl
xor
mov
repz
and
lahf
sub
daa
xchg
cli
rorl
cli
jo
adc
lods
movsb
push
jae
jns
movsb
cmp
test
loopne
addr16
cmp
inc
mov
sub
mov
iret
inc
add
cwtl
ret
sub
jmp
adc
push
add
loope
das
loop
jno
mov
scas
mov
add
fsubr
add
rcrl
inc
and
test
jbe
sub
into
dec
aam
lock
jl
imul
pop
push
lods
loope
imul
fistpll
inc
push
mov
sbb
push
mov
jns
subb
insl
sbb
adc
mov
stc
fsubr
cmpsb
jne
inc
and
jmp
mov
cmp
xchg
push
sbb
rorl
pop
hlt
xchg
ret
scas
outsl
xor
in
data16
xor
movsb
fsubs
cld
mov
ja
cld
inc
fwait
inc
sub
sbb
push
cmc
mov
gs
movsl
cli
push
xchg
pop
pop
rcrl
xor
call
push
mov
pop
mov
lea
dec
out
or
adc
dec
jle
pop
js
movsbl
cmp
cmpsl
jns
ljmp
mov
or
call
subl
loopne
xchg
fistl
test
xor
in
les
pop
call
mov
fmuls
incb
ljmp
lds
xor
pop
jmp
out
push
lods
cltd
ljmp
shl
inc
jp
addr16
out
jmp
inc
inc
lock
mov
push
inc
loopne
mov
jge
mov
addr16
hlt
mov
es
cmc
mov
pop
jge
pop
push
stc
ja
add
rorb
cltd
bound
pop
mov
outsl
push
sahf
shll
cmp
jno
sti
clc
testl
test
es
jae
sbb
dec
repnz
push
pop
pushw
adc
fisubrl
xchg
and
xchg
xchg
jne
mov
and
mov
pop
mov
enter
mov
or
pop
mov
dec
mov
adc
int3
lret
fwait
mov
push
int3
sahf
jmp
pop
push
and
sub
movzbl
mov
fiaddl
aad
mov
push
and
imul
and
or
xor
push
mov
add
push
push
or
xor
fisubl
add
add
push
add
add
cmp
dec
cmc
add
add
lcall
adc
cli
inc
add
add
or
pop
in
add
add
add
add
mov
add
jne
add
add
movsl
add
add
sub
jnp
add
add
xor
add
add
add
addb
xchg
incl
ljmp
ja
ret
jg
jg
int3
int3
int3
int3
int3
push
mov
sub
cmpl
mov
push
je
cmp
je
push
call
mov
xor
call
mov
mov
mov
push
mov
call
push
mov
call
mov
lea
push
call
mov
pop
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
not
mov
or
mov
call
mov
movzbl
movzbl
sub
je
call
push
push
pushl
pushl
pushl
call
lea
push
call
jmp
mov
pop
leave
ret
push
mov
mov
mov
mov
push
add
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
add
push
pushl
call
mov
mov
movzbl
movzbl
push
sub
pop
je
addl
push
push
call
pop
pop
push
push
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
ret
add
inc
mov
pop
out
jb
and
fisttps
or
sldt
add
xchg
adc
add
scas
add
insb
add
add
add
aaa
iret
add
add
aas
popa
add
add
or
add
add
add
fadds
push
add
push
add
add
xorb
jb
jecxz
pop
ja
dec
or
add
adc
out
fiaddl
or
inc
xorl
test
lea
mov
les
push
adc
adc
mov
adc
adc
add
inc
rolb
push
leave
dec
inc
xor
ret
subl
out
adc
inc
cmp
ret
fmull
in
push
call
or
aas
add
add
jae
incb
add
add
cli
xchg
cld
mov
add
incl
incl
sarb
adc
push
popf
push
jbe
decb
decl
je
mov
add
jne
loopne
adc
mov
add
pop
add
mov
repz
js
add
sbb
orl
lea
add
inc
ds
jb
je
pop
fisubrs
outsb
je
stos
add
xchg
es
gs
sbb
imul
insb
add
inc
bound
mov
push
jb
addr16
dec
jns
outsl
xchg
fisubrs
inc
push
insb
inc
sub
popa
gs
js
fldl
add
add
filds
add
add
sldt
add
xchg
add
add
add
add
addr16
add
add
aaa
iret
add
add
aas
add
add
xchg
outsl
add
add
cmpsl
pop
add
cmpsb
sub
cmc
adc
mov
adc
or
mov
pushl
bound
roll
xor
arpl
stos
js
mov
pusha
sub
lds
jmp
faddl
outsb
jne
imul
push
lea
cmp
mov
pop
sarl
mov
andl
sbb
mov
shll
cld
fcmovbe
pop
sub
xchg
shrl
test
xor
stc
and
cwtl
out
dec
mov
xor
aaa
movsb
mov
and
loope
xchg
dec
xor
test
xlat
test
push
in
addr16
into
pop
xchg
jae
xor
xor
mov
sahf
lcall
add
cwtl
imul
xchg
hlt
adc
mov
mov
or
out
ds
sbb
in
clc
jg
push
aam
and
cmc
cmpsl
dec
and
push
cmp
dec
xchg
push
add
rorl
pusha
loope
dec
cs
dec
jmp
pop
lds
sub
xorl
inc
xor
mov
sbb
dec
in
in
sbb
dec
loope
inc
das
cwtl
cmp
cmp
test
call
ljmp
scas
jle
add
jae
les
jl
and
hlt
stc
inc
or
subl
in
jecxz
loopne
divl
stc
or
cmp
xchg
push
repnz
fcomps
sub
mov
pusha
loope
sbb
fisttps
or
daa
comiss
jne
pop
aam
mov
cli
dec
loopne
pop
daa
cmp
dec
ret
popf
fcom
call
mov
call
dec
pop
mov
fstp
dec
cmc
mov
pop
xor
sti
fcoms
mov
cmpsb
sub
lret
aas
repnz
jp
cmp
inc
gs
push
add
imul
jmp
ljmp
prefetchw
dec
pop
call
loopne
push
das
loope
pop
adc
or
jge
ret
adc
and
repz
jl
popf
shrl
pusha
pusha
xchg
mov
pop
cmp
ficoms
pop
lea
enter
push
mov
push
repnz
js
repnz
sbb
adc
push
mov
pop
jp
lock
add
cmp
movsb
outsl
orl
jge
call
test
mov
pop
hlt
and
mov
dec
pop
adc
inc
sbb
push
pop
add
test
or
loopne
xor
fisttpl
mov
mov
push
jo
sbb
or
cwtl
mov
pop
xchg
scas
pushf
cmpsb
push
iret
rorl
ds
xchg
pop
jo
test
lcall
aas
mov
ja
cmpsb
push
ret
adc
mov
xor
imul
mov
inc
sub
out
cmp
mov
in
jne
clc
push
dec
sub
aaa
lahf
repz
xchg
mov
stc
shlb
cmpsb
ja
push
xchg
xchg
fstl
lahf
xchg
sar
sbb
jbe
aas
notb
add
cmpsb
outsl
pop
inc
mov
inc
int
inc
movsb
cld
ss
fmull
scas
int
roll
jae
popf
mov
or
enter
pop
jbe
lods
push
cmp
out
es
adc
cmp
pop
pop
fsubr
in
mov
mov
rorb
adc
inc
cmpl
mov
shrb
add
adc
lods
ja
pusha
fdivrs
lcall
mov
dec
aas
xor
in
jl
pop
pop
in
sbb
sub
fprem1
or
cmp
inc
jbe
aad
mov
sbb
xchg
sub
mov
dec
jl
subl
stc
add
inc
test
lret
call
loop
jne
mov
test
mov
xchg
sahf
out
and
add
addr16
cltd
mov
jo
stos
push
xchg
cld
mov
push
in
mov
xchg
mov
fwait
imul
or
jne
xor
jbe
and
mov
stc
pop
cwtl
sbb
rorl
repz
mov
shlb
pop
mov
into
cltd
aas
xor
clc
int
xchg
das
aad
push
ljmp
sub
outsb
jae
popa
mov
sub
sbb
dec
rorb
mov
inc
movsl
pop
jp
sarl
ljmp
lcall
mov
divl
je
fisubs
ja
sub
sub
dec
mov
mov
lret
add
in
adc
cmpsl
xchg
iret
rclb
insl
stc
iret
push
adcb
sbb
int3
cmp
pop
in
mov
jnp
negl
mov
mov
and
jmp
sti
rcl
pushf
mov
outsl
cli
add
adc
pop
adc
mov
mov
imul
mov
adc
ret
inc
and
ret
lcall
mov
and
aam
and
or
cmp
int3
inc
ds
pushl
cmp
cli
arpl
inc
scas
xor
popa
xor
pop
jno
xlat
adc
insb
push
imul
loope
fwait
mov
mov
mov
mov
ret
sub
pop
dec
test
dec
adc
sar
repz
fldenv
push
mov
popf
test
ret
hlt
xchg
mov
inc
jb
mov
fwait
push
cltd
inc
ficomps
andb
xlat
sbb
sahf
fwait
inc
nop
rcll
je
sbb
call
sbb
jns
ja
mov
lds
lret
push
cmc
xchg
std
fbld
ss
dec
insb
or
fnstenv
xchg
adc
repz
movsl
pop
mov
fcmovnbe
cmp
inc
js
mov
bound
loope
add
call
into
jb
lods
mov
mov
sbbl
push
add
les
test
xchg
xor
jne
pusha
int3
sbb
cs
mov
add
xchg
adc
enter
fdivl
shll
fadd
negb
and
fs
loop
in
fisttpll
mov
icebp
in
cmc
sub
mov
ficoml
lret
fmull
sub
shrl
inc
out
cmpsl
fidivs
mov
std
inc
lds
xor
jae
push
orl
stc
dec
mov
jns
out
mov
add
popa
push
jmp
mov
or
cmpsb
add
jns
pop
dec
push
lahf
or
outsb
xchg
mov
adc
lahf
push
out
jmp
or
mov
xchg
inc
sbb
iret
adc
das
fiaddl
pusha
and
jb
data16
test
movsb
addb
cmp
loopne
xor
sub
mov
sbb
cmp
and
adc
addb
lcall
pop
mov
pop
push
mov
sub
es
pop
pop
or
int
adc
loopne
mov
and
es
lea
adc
aaa
shll
test
xor
lea
lcall
lods
sub
xacquire
sub
add
inc
cmc
cmp
jmp
das
loopne
push
inc
das
add
or
sbb
lock
sbb
mov
shrl
xor
push
adc
inc
inc
dec
xor
cmp
fcmovnu
xchg
filds
push
sub
pusha
dec
lcall
dec
js
andb
adc
add
push
gs
cli
inc
imul
aaa
mov
sbb
or
lods
cmpl
lret
cmp
jns
pop
cmp
test
cmp
jns
outsb
or
repz
int3
popf
cmpsl
arpl
jl
aaa
hlt
lahf
inc
je
sub
and
pusha
cwtl
dec
mov
into
sbb
fstpt
loop
xor
jle
mov
std
mov
sbb
sub
js
mov
jg
xchg
aam
mov
mov
xor
or
push
cmp
inc
xor
xor
ja
fstl
mov
pop
aaa
and
mov
out
imul
ja
jle
inc
or
in
mov
sub
jmp
push
sub
out
lret
mov
test
jne
mov
sub
es
sbb
jbe
xor
leave
out
pop
mov
mov
xor
fstp
popl
lock
int
test
dec
mov
sub
inc
sbb
pop
movsl
mov
ss
mov
cmp
mov
xadd
dec
pop
hlt
pop
push
jnp
mov
push
fsubr
pop
orl
add
push
cld
test
inc
mov
inc
cltd
add
jge
mov
negb
sbb
inc
inc
lods
das
mov
dec
std
int3
cld
lret
sub
mov
cmp
adc
in
mov
les
test
mov
ljmp
roll
hlt
popa
popf
jg
pusha
sub
test
cmpsb
mov
mov
dec
jecxz
jp
sub
mov
movsl
test
repnz
repz
lahf
xchg
mov
sarl
mov
dec
xchg
mov
xor
mov
mov
lds
xor
ret
dec
pop
rcrb
push
lcall
or
sarl
bound
jbe
stc
enter
test
adcb
fldl
mov
mov
sbb
movsb
pusha
insl
loope
mov
mov
jp
jne
sub
jmp
pusha
inc
pusha
sbb
sti
popf
repz
adc
ljmp
faddl
xor
pop
ljmp
cmp
jle
sbb
popf
subb
out
loopne
sbb
shlb
jecxz
incl
mov
ret
or
push
and
pop
or
repz
ljmp
repnz
shll
btc
sbb
add
lods
jb
lret
aam
ss
out
cmp
xchg
or
out
inc
and
sbb
jle
sti
popa
xor
sbb
sub
sub
fcoml
sub
pop
pop
lods
outsb
sub
jne
in
aad
aaa
bound
leavew
ss
pushf
or
outsb
push
dec
and
push
push
icebp
sbb
clc
pop
mov
loopne
loop
sbb
std
mov
mov
jp
push
mov
mov
in
movsb
inc
js
xchg
cmp
lret
jo
adc
mov
mov
sti
or
jge
inc
pop
loope
or
test
sub
dec
pop
mov
mov
arpl
mov
mov
mov
ret
and
mov
and
imul
test
lea
dec
shll
xchg
dec
cmp
jmp
insl
cltd
inc
and
test
pop
repz
xor
aam
fsubl
lods
jl
cmpsl
jae
jae
mov
mov
sub
clc
cwtl
add
or
mov
and
testl
stos
or
sahf
mov
bound
lahf
push
cs
adc
sbb
xchg
xor
mul
xor
or
outsl
lret
and
iret
test
les
pop
scas
fldenv
mov
xchg
popf
loope
mov
mov
sbb
bound
mov
faddl
sub
pop
push
lds
cmp
call
pop
cli
imul
adc
or
adc
pop
es
dec
mov
loope
dec
mov
or
sbb
sub
xor
and
sahf
xor
shl
sbb
ja
aas
fnsave
and
pop
xor
vmovlhps
rcll
cmp
or
cmp
adc
ss
inc
scas
xchg
xor
test
addr16
sub
dec
sbb
out
pop
out
out
jle
xor
push
loopne
add
sub
xlat
cmp
xchg
stc
insl
sub
cwtl
dec
sarb
xchg
sub
dec
stos
xchg
int
mov
or
pop
inc
mov
fs
xor
mov
or
xor
xor
mov
outsb
mov
push
push
popa
add
ret
or
adc
je
movsl
cli
cld
jae
enter
pop
mov
or
jbe
or
scas
pop
jle
pop
sbb
jb
jnp
pop
adc
sar
mov
int3
insl
stos
push
mov
xchg
mov
imul
in
faddl
push
xchg
cmpsb
stos
cmc
icebp
adc
dec
xchg
pop
lret
or
testl
ljmp
mov
push
loopne
xchg
sub
and
xlat
push
cld
fs
insb
and
outsb
mov
jp
data16
dec
cld
addb
test
iret
inc
push
ret
xor
lret
dec
jbe
cmp
rcrb
dec
rolb
fstl
rcll
shrl
inc
xchg
mov
adc
cmp
andb
push
xchg
ret
dec
cmp
xor
test
das
mov
fiadds
mov
pop
pop
mov
and
lcall
cwtl
sbb
jae
xchg
push
mov
cmpl
pop
push
js,pt
popf
xchg
dec
mov
out
hlt
inc
lahf
xchg
test
sub
inc
ficoms
ss
mov
test
xor
pop
jmp
repz
mov
jge
ret
and
gs
cli
mov
aad
ljmp
pushf
mov
pop
je
andb
lret
movsl
sub
ret
rolb
and
outsb
sti
repz
test
jle
dec
jmp
aam
out
les
in
movsb
xorl
cmpsb
adc
stos
sti
mov
mov
fisubrl
stos
sbb
mov
cld
and
leave
cmp
stos
imul
loopne
jno
call
daa
jge
test
addr16
xlat
dec
out
jecxz
mov
xor
aaa
aad
inc
cwtl
call
pop
and
jns
mov
lcall
dec
cmp
aam
ret
imul
insb
idivb
outsb
mov
pusha
jge
int
mov
in
fisubs
or
sbb
popf
cwtl
icebp
adc
cmp
ret
cmp
push
cwtl
add
mov
shlb
das
sbb
jb
repz
push
into
mov
aaa
stos
mov
mov
push
lahf
xor
test
mov
push
lret
add
test
rcrl
repz
enter
ror
push
inc
jmp
jecxz
inc
add
ret
std
movsb
stos
sti
clc
fsubrs
ljmp
stos
negl
movsb
add
icebp
push
xchg
adc
lea
sub
cltd
mov
pop
xor
notb
xor
test
test
xchg
sub
push
push
sub
mov
inc
push
rcrb
cli
outsb
aam
mov
movsl
cld
outsb
push
xor
mov
fdivrl
dec
dec
aam
lret
pushf
ret
scas
pusha
ss
out
outsb
in
push
and
rorb
or
mov
js
iret
push
sbb
sbb
cmpsl
jecxz
fisttpl
xor
mov
pusha
aad
aaa
xchg
sub
aas
jno
loope
les
xorb
cmc
mov
xchg
mov
push
xor
xchg
mov
cmp
outsl
ljmp
movsb
in
cmp
mov
addr16
ficompl
lock
jecxz
stos
mov
lret
and
adc
repz
les
andl
mov
jae
pushf
xchg
push
es
push
xchg
cmpsb
push
push
arpl
cmc
shrl
dec
xchg
xchg
shr
mov
mov
jno
jne
sub
sbb
stc
and
adc
rcll
mov
cmp
addb
push
les
popf
push
push
or
xorl
and
mov
daa
mov
xor
scas
dec
or
int3
rcrb
pop
mov
in
cmc
pop
icebp
mov
mov
sbb
adc
nop
pop
add
dec
rcrl
sub
adc
jp
jne
daa
dec
cmc
xor
push
popf
inc
and
aam
mov
lods
aad
mov
in
sub
and
pop
out
andb
inc
adc
sahf
dec
cmp
jns
test
sahf
insl
into
fwait
fwait
xchg
or
mov
filds
sbb
sbb
cmp
jge
mov
stc
jo
daa
mov
adc
das
loop
inc
dec
test
ja
mov
arpl
std
ss
cld
mov
mov
mov
sub
or
fiadds
lea
adc
ss
jecxz
les
pop
or
sub
cwtl
out
adc
test
xor
gs
jl
add
repnz
or
lret
imul
pusha
dec
cwtl
cli
fcmovbe
add
xor
and
out
ds
xor
mov
lcall
int
dec
mov
mov
daa
cld
push
jnp
lods
or
in
pop
test
push
dec
int
cwtl
add
cli
filds
lds
cs
dec
mov
sbb
pusha
jg
movsb
pusha
pusha
idiv
push
cltd
lock
inc
cmpsb
cmp
xchg
repz
cmp
clc
jae
fisttpll
add
or
jle
mov
out
lds
test
xchg
cmp
adc
jo
imul
cmp
imul
addr16
cld
sbb
cmp
rcrl
jns
mov
or
in
sub
mov
mov
xor
mov
fnsave
insl
mov
imul
test
sti
add
insb
mov
push
sub
sub
sub
fcomp
jmp
cmp
mov
orb
push
or
sub
dec
cmp
das
ss
xor
insl
enter
sub
or
sbb
xchg
add
ja
ret
repnz
jne
test
inc
mov
mov
cmpsl
mov
cmpb
mov
fistl
adc
inc
add
test
outsl
inc
movsb
xor
and
cmp
xchg
push
pop
or
cmpsb
xchg
add
mov
sti
lds
mov
add
imul
outsl
xor
in
pop
adc
dec
pop
cmp
ds
inc
shlb
and
adc
testb
push
add
dec
imul
xchg
cmc
das
pop
into
cmp
push
popf
jle
mov
test
pop
add
and
inc
mov
and
xorl
addr16
add
imul
pop
mov
xchg
add
stc
hlt
cmc
fidivl
es
push
mov
inc
sbb
mov
lock
shlb
fwait
stos
cwtl
mov
xchg
fisubl
scas
xchg
lret
pop
dec
pushf
sbb
je
add
aas
pop
cmp
mov
sti
das
cwtl
std
and
scas
add
adc
push
cmp
adc
popa
mov
shld
cmp
mov
shll
pop
dec
xor
pop
outsl
jb
dec
fimull
js
push
push
in
cltd
movsl
mov
or
jmp
rclb
lods
push
fwait
daa
pop
mov
in
mov
dec
mov
stc
pusha
mov
int
pushf
les
sub
pushf
test
mov
add
jecxz
call
inc
inc
push
into
je
dec
popf
add
addr16
add
add
aaa
iret
add
add
aas
add
add
xchg
outsl
add
add
cmpsl
pop
add
add
ja
add
add
pop
incl
add
add
das
add
add
out
add
add
mov
add
add
ja
pusha
add
add
add
filds
add
add
sldt
add
xchg
jg
add
add
pop
add
inc
lahf
add
adc
aaa
iret
add
add
xchg
stos
add
ja
out
lcall
int3
int3
int3
int3
int3
int3
loopne
add
aad
outsb
repnz
or
or
add
add
add
adc
adc
add
test
add
add
add
and
add
xor
add
add
jmp
sbb
sbb
cmp
jne
add
inc
pop
outsb
pop
add
mov
outsl
int
je
mov
add
inc
sahf
movl
sub
add
cld
and
jmp
mov
incb
subb
cld
adc
push
add
decl
decl
repz
inc
arpl
in
je
in
push
mov
sarb
addl
stos
add
loope
adc
aam
sarb
cmp
hlt
fists
fwait
mov
loope
jmp
jmp
test
dec
test
add
and
inc
mov
incl
adc
inc
xchg
dec
pop
cmp
add
pushl
push
adc
push
arpl
stos
add
sub
sbb
pop
hlt
adc
sbbb
fstpl
sbb
sbb
sbb
add
fs
shll
movsl
add
push
outsb
dec
mov
insb
pop
jae
xor
add
gs
jb
insl
sub
xchg
add
jo
int3
jae
add
inc
dec
gs
inc
je
inc
add
outsl
jbe
fs
shrl
dec
cwtl
add
addb
les
add
add
add
add
add
adc
add
test
add
add
add
add
add
add
add
filds
int3
cmp
mov
stc
subl
ror
add
lret
adc
push
sub
dec
mov
lret
jnp
idiv
sub
fwait
popa
data16
out
mov
push
jno
xchg
iret
sbb
sub
rcrb
mov
or
jle
adc
or
sub
pop
sbb
jecxz
mov
mov
and
pusha
fidivs
mov
inc
in
outsb
jge
mov
dec
xchg
lahf
test
mov
divl
enter
stos
pop
packsswb
cwtl
std
loope
mov
push
lods
add
iret
ss
repnz
kxorw
push
mov
xor
loope
add
aaa
push
int3
mov
cmc
pusha
jg
bound
fwait
leave
aaa
mov
inc
mov
movsb
or
je
mov
mov
sbb
xchg
fwait
std
ret
dec
imul
pop
addr16
cltd
sbb
cltd
mov
cwtl
xlat
sub
les
adc
dec
enter
mov
mov
repz
xchg
hlt
das
ret
cmp
imul
push
pushf
in
jg
pushf
mov
shrl
mov
sbb
cmp
lds
loope
int3
dec
xlat
insl
and
int
adc
cmp
jmp
mov
ret
pop
fwait
or
ret
push
out
rcrb
jo
xchg
lds
cmpsl
repz
outsl
dec
pop
jl
adc
inc
insb
dec
repnz
sub
int3
sub
repnz
rorb
rclb
popf
imul
aad
loopew
push
push
shr
lea
pop
xorl
add
stos
push
jne
ret
mov
mov
stc
imul
pop
inc
daa
enter
adc
ds
mov
dec
popf
jo
adc
sbb
cs
fnsave
movsb
mov
sub
cmp
push
pushf
cmp
mov
inc
cwtl
js
rorb
lods
pop
cmp
sub
push
xchg
push
fcmovu
jl
mov
mov
fs
jge
push
lock
in
dec
repnz
and
jecxz
or
pop
nop
mov
lods
gs
cmp
stos
sub
jmp
or
or
jmp
xor
and
sub
incl
das
xor
and
add
into
xchg
cmpb
or
stc
lret
or
cmp
xchg
inc
jge
and
jo
adc
inc
sbb
xchg
mov
mov
mov
ds
mov
rcrb
in
lret
std
jg
or
fst
pop
ret
in
add
mov
cwtl
test
jmp
add
jbe
mov
ljmp
ret
dec
bound
dec
rolb
sbb
push
xchg
xlat
xchg
xchg
jb
push
mov
cmpsl
lea
xchg
lods
cmovle
and
or
adc
cmpsb
bound
xchg
sahf
lret
rcrl
dec
loopne
xor
rcrl
inc
les
lea
and
mov
and
or
xor
popf
adc
cmp
int3
mov
stos
or
inc
outsb
adc
mov
jbe
into
iret
cmp
or
movb
sti
pusha
mov
and
flds
fidivrs
sub
mov
jmp
mov
xchg
and
push
sbb
arpl
cmp
mov
or
lret
xor
mov
ror
cld
push
mov
add
mov
int3
daa
sub
or
adc
je
dec
jo
iret
lds
imul
jmp
insb
ja
push
cltd
fsub
inc
mov
dec
std
popa
xchg
imul
jecxz
push
ja
mov
xor
lcall
sub
inc
cwtl
dec
mov
sub
lret
in
xchg
pop
and
adcb
ds
or
stc
iret
mov
lock
subl
ja
jbe
inc
test
sbb
out
loopne
pushf
dec
sub
push
fbld
and
jmp
rolb
mov
push
and
xor
lds
or
cmpsl
dec
aad
mov
xchg
pop
dec
add
cmpsb
out
cmpsb
mov
sbb
push
insl
jmp
aam
fstpl
jno
add
sub
int
in
lods
cli
mov
pop
xchg
arpl
pop
mov
and
push
pop
fstps
insb
lock
mov
pushf
fs
sbb
or
add
out
dec
pop
mov
mov
in
jge
ret
lret
ret
pusha
jbe
out
ret
stos
pop
pop
rclb
dec
mov
jmp
lods
xor
lods
push
scas
test
sbb
or
sbb
mov
mov
fwait
pusha
or
jle
imul
push
shlb
stc
mov
inc
mov
pop
pop
inc
scas
ret
mov
sub
cli
shrb
xor
sbb
cmp
xchg
sub
push
fisttpll
clc
jne
cmp
mov
dec
movsb
push
or
jmp
iret
add
movsl
sub
push
push
insl
jno
adc
sahf
mov
mov
mov
pop
shlb
jg
and
dec
sbb
fiadds
lock
ret
pop
subb
xor
xor
and
sub
call
adc
jmp
cmpsb
stos
ljmp
pop
jecxz
jle
testb
add
mov
add
clc
scas
jg
xchg
shrl
mov
sub
pop
pop
xchg
lock
loopne
or
inc
mov
fucomi
sbb
fisubl
jo
imul
xor
lock
mov
call
outsb
push
out
sarb
rcrb
test
or
lods
iret
xchg
jbe
jb
sub
dec
jo
push
add
jae
fcmovnu
sbb
jle
lret
call
sbb
outsb
push
sbb
out
adc
mov
outsl
rcrb
and
out
xor
pop
xchg
xchg
out
lods
out
bound
sub
and
and
cltd
jecxz
mov
stos
pop
mov
ficoml
xor
dec
icebp
jecxz
mov
aaa
lahf
cltd
xchg
test
push
xor
push
inc
ja
arpl
push
xor
outsb
lret
xchg
sbb
adc
mov
dec
mov
inc
mov
add
out
cmp
fadds
inc
bound
in
sub
inc
lea
jecxz
popf
jae
jb
icebp
clc
or
dec
mov
xchg
mov
mov
loope
div
lods
push
loop
or
out
inc
or
dec
cwtl
ret
mov
in
gs
jnp
adc
sbbl
loope
xchg
faddp
stc
imul
xchg
inc
fldenv
xchg
stc
cmp
sub
movsb
xchg
pop
or
test
movl
mov
ja
repz
adc
push
push
repz
push
std
push
jae
insl
mov
inc
sub
fs
mov
cmpsl
out
add
sahf
sbb
and
jae
or
rorl
out
pushf
leave
clc
loop
jns
loop
cmp
jae
shrl
mov
sub
mov
fdivrl
insl
mov
adc
pop
repnz
ret
bound
enter
lods
xor
or
dec
push
pop
cmp
mov
inc
into
sbb
andl
lret
mov
xor
mov
rcrl
sub
cmc
pop
adc
shlb
and
rcl
mov
leave
fnstcw
fdivs
sti
fistps
or
sbb
mov
sub
inc
aam
sbb
xor
call
sbb
ret
inc
int3
mov
cmp
out
lcall
pop
fdivrs
test
lds
xlat
lret
pushf
lds
push
cmp
mov
inc
int3
hlt
adc
push
dec
push
es
add
popa
add
push
fs
sub
jbe
sub
or
fnstsw
lret
push
push
cs
jne
cmp
push
and
shr
or
hlt
and
inc
xor
fbld
pushf
stos
push
pop
sbb
icebp
andl
js
cmp
cs
jnp
out
xchg
mov
into
lahf
lock
cmc
mov
sbb
popa
push
adc
daa
sub
mulb
and
cmp
repz
aas
xchg
mov
rclb
add
js
and
shl
fnstsw
xor
out
xlat
call
push
add
add
and
jnp
pop
mov
mov
mov
stc
test
push
and
aam
and
mov
das
inc
icebp
and
inc
sub
lea
shl
push
mov
mov
fwait
int
ja
shrb
sbb
inc
scas
sti
push
mov
mov
push
loope
pop
xor
sbb
mov
popa
jbe
lods
ljmp
addr16
and
mov
sbb
fwait
addl
push
mov
xor
dec
psrad
sub
aad
ss
rolb
add
lret
mulb
orl
into
sbb
jle
mov
dec
jae
adc
test
notl
bound
pop
dec
jge
and
push
xchg
add
lcall
sub
mov
push
add
and
pop
loope
add
pop
add
fadd
in
mov
pushf
aaa
dec
jbe
xor
xor
mov
pop
xchg
push
test
and
push
xchg
div
pop
es
call
int3
bound
in
pop
jbe
cmpsb
mov
gs
in
imul
jecxz
push
and
lahf
shl
bound
sarl
rcrb
out
jge
inc
jmp
lret
dec
mov
adc
xorb
popf
out
inc
mov
or
push
pop
shlb
pop
mov
or
and
push
call
daa
sbb
enter
mov
stc
or
mov
xor
xchg
or
mov
xchg
sub
add
daa
lcall
pop
or
gs
inc
sbb
leave
pop
pop
mov
repz
push
in
repnz
call
leave
pop
sub
xor
das
pop
in
jmp
iret
pusha
jle
mov
cmpsw
jae
fadd
stc
loop
fisttpl
xlat
pop
mov
popf
imul
xchg
xor
mov
arpl
or
imul
fwait
dec
push
pop
sbb
xchg
mov
pop
stos
push
outsb
sarl
push
mov
sub
aaa
xchg
add
xchg
mov
arpl
adcb
pop
fdivrs
add
jg
ror
inc
push
mov
jmp
add
inc
lods
jae
lods
mov
jb
out
cmp
out
lds
cmp
in
push
pop
jns
cmp
test
call
lock
sbb
pop
jecxz
mul
stos
imull
lret
xchg
cli
repnz
dec
cmp
es
cld
push
das
roll
movsl
pop
sbb
or
push
fs
sbbb
sbb
push
mov
sarl
fdivrs
and
movsb
sbbl
pushf
cmp
sbb
and
push
imul
aas
xchg
out
adc
mov
icebp
xor
dec
dec
sub
mov
mov
jbe
xlat
dec
test
mov
insl
push
fcmovnb
add
repnz
gs
adc
ret
mov
push
push
sub
mov
cwtl
aad
sarb
inc
xor
loop
dec
push
adc
dec
push
in
test
in
and
sub
cmpsl
push
dec
scas
sub
push
das
imul
sbb
leave
rcrl
cmp
js
sub
jge
sbb
out
jbe
push
or
cmp
shlb
insl
gs
into
pop
mov
data16
inc
and
je
mov
jbe
sarl
mov
and
aad
negl
mov
fidivrl
inc
sahf
mov
mov
push
xchg
pop
cwtl
push
sbbb
cmp
insl
cs
or
call
or
test
out
xchg
mov
push
fwait
cli
sub
cld
movsl
out
push
or
insl
xchg
mov
cmpsl
or
rcrl
pavgb
push
and
add
add
dec
push
xor
mov
leave
aad
mov
dec
sub
adc
mov
lahf
js
pop
cltd
ds
ds
xor
dec
insb
aad
stos
jle
and
cld
inc
lahf
mov
in
stc
es
push
xchg
lret
push
jg
xchg
mov
sti
mov
nop
js
mov
stos
nop
mov
jp
dec
mov
jmp
inc
cmp
outsl
mov
pop
inc
pusha
mov
mov
out
fidivl
lods
mov
lea
xlat
das
mov
sbb
outsl
inc
mov
mov
push
xor
fwait
jmp
mov
fucomi
out
cmp
enter
outsl
jns
or
fisubs
fneni(8087
testb
pop
dec
xchg
adc
lock
push
imul
in
repnz
pushf
pop
scas
popf
jb
idivb
pop
mov
sbb
popa
lret
mov
loop
mov
int3
mov
sbb
lods
sub
gs
mov
int
and
jmp
push
jae
adc
mov
ds
xchg
cld
insb
push
in
jno
call
and
inc
jae
jbe
les
aad
les
inc
pop
push
adc
sub
scas
lods
push
aas
int
mov
and
sub
sbb
je
addl
aam
jne
fimuls
add
inc
sbbb
fisubl
leave
xchg
outsl
sub
enter
mov
cwtl
pop
and
es
mov
cs
sbb
std
ret
call
sbb
mov
dec
add
fcmovnbe
ss
inc
mov
xor
lret
cmc
or
aaa
call
fwait
iret
cwtl
repnz
push
inc
mov
fnclex
test
mov
xor
xchg
adc
push
mov
adcb
shl
in
sbb
xchg
inc
push
xchg
xor
push
pop
js
pushf
xchg
jo
mov
jle
or
enter
pop
aas
xchg
pushl
cwtl
or
movsl
push
sub
pop
faddl
lret
xor
xor
lods
insl
cmpsl
loope
ret
ljmp
enter
adc
and
test
mov
inc
fwait
inc
rcrl
rorl
inc
nop
es
aam
out
mov
stc
and
or
xlat
je
xor
sbb
testl
pop
xchg
xor
pop
ds
push
rclb
bound
add
add
stos
imul
les
fdivrl
xchg
cld
add
mov
hlt
dec
lret
or
xchg
clc
add
rcrl
jge
fdiv
lock
jae
fld
mov
inc
rol
cmpsl
inc
imul
std
fcomip
jno
movsl
insl
lahf
in
mov
xchg
jb
imul
inc
add
jnp
pop
xlat
xchg
mov
or
pop
xor
jbe,pt
pop
pop
cmp
into
or
jns
mov
loopne
push
inc
sysret
or
mov
out
jbe
and
push
movsb
insl
inc
mov
or
mov
das
je
fstps
jmp
xchg
lcall
filds
xchg
lcall
ljmp
roll
pop
insl
pop
or
cmpsb
push
pop
idivb
shlb
push
sar
pusha
mov
and
nop
mov
cltd
addl
push
enter
es
clc
je
ret
jmp
movsl
hlt
mov
arpl
enter
scas
or
lods
dec
rorb
ja
xor
mov
jae
adc
nop
xchg
add
mov
int
shrl
loop
stos
and
pop
mov
inc
rcrl
pop
adc
dec
pop
rcll
fucomi
fidivl
sub
inc
movl
lcall
xor
xor
xlat
sub
xor
in
movsb
jge
insb
das
inc
jae
stos
adc
ja
bound
xchg
cmpsb
inc
jp
pop
adc
jle
fistl
cmpsb
shl
adc
cmp
jle
mov
mov
test
adc
fsub
fisttpll
jg
outsl
or
ss
adc
test
shr
adc
repz
aam
cmp
xor
mov
lds
bnd
jns
push
xor
insb
pop
cld
mov
adcb
cld
mov
insl
push
cmpsl
fildl
push
push
xchg
loop
int
loop
dec
mov
inc
jmp
js
stc
and
mov
adc
jg
jge
aaa
jg
sti
test
pop
cli
dec
push
std
cmp
aas
pop
dec
push
mov
gs
push
or
pop
dec
pop
pop
xor
cmp
push
enter
lock
cmp
jbe
cmpsl
nop
xchg
into
lret
fbld
repz
into
jnp
data16
and
sub
notb
pop
mov
mov
clc
int3
cmp
jns
and
lcall
cmp
mov
mov
loope
adcl
xchg
test
shll
mov
lock
pushf
cmp
test
std
or
mov
inc
dec
jge
jg
push
mov
outsl
or
bound
fisubl
test
and
int
dec
test
aaa
jecxz
mov
lods
enter
repnz
scas
push
xor
fdivrl
jnp
popa
insb
cmp
jns
xor
scas
pop
pop
xchg
mov
dec
popf
or
bound
sbbl
mov
stos
sar
fwait
adc
or
pop
inc
aaa
test
xor
pop
jo
pop
jns
andl
xchg
imul
adc
dec
repz
loope
inc
jg
sbb
outsl
fstpt
or
lahf
cmp
dec
cmp
adc
faddl
rcll
imul
sbb
xor
adc
je
mov
sbb
add
lahf
push
iret
lea
xor
pushf
fcompl
aad
test
push
mov
popa
fimuls
mov
fsts
ror
in
xchg
loope
xor
xchg
push
mov
shlb
test
pop
adc
aaa
mov
outsb
mov
aas
push
fcomp
mov
mov
cltd
mov
out
movsb
lcall
and
xor
cmp
mov
sbb
jns
or
leave
clc
cwtl
es
mov
ljmp
jg
xor
mov
mov
pop
aad
cmp
pushf
push
push
push
enter
jg
negl
push
fsubp
dec
add
sbb
test
sbb
mov
into
push
push
mov
xor
aaa
jb
lods
mov
and
in
or
add
sahf
ss
add
mov
das
idivb
shl
push
inc
es
jne
test
call
cmc
inc
repz
jae
mov
sub
shrl
jle
jbe
rcrl
hlt
mov
pop
scas
ja
adc
add
out
add
aam
add
add
add
add
add
add
lock
xchg
add
mov
add
add
add
add
add
push
add
loopne
add
hlt
add
addb
les
add
add
add
add
add
adc
add
test
add
add
add
ja
mov
mov
int3
int3
add
pop
add
fiadds
add
jb
outsb
inc
aaa
add
jle
add
add
dec
add
popf
add
push
add
dec
add
out
add
jge
add
add
add
frstor
add
add
add
add
add
insb
add
insl
test
int3
add
sbb
fbld
or
add
imul
add
outsb
add
mov
popa
jge
mov
inc
cld
fmuls
add
pop
cmpb
std
int3
std
and
call
jb
add
push
add
lea
or
mov
cmp
lea
lea
add
rolb
add
pop
adc
add
test
cmp
push
adc
xor
push
mov
loopne
loopne
addb
or
call
cltd
jge
ficoms
das
push
adc
scas
adc
orl
lock
call
sbb
call
add
add
or
fidivrl
in
adc
push
add
outsb
or
je
imul
outsl
dec
imul
inc
add
js
mov
pop
arpl
popa
gs
insb
jmp
outsl
pop
xor
push
insb
test
push
cmp
gs
add
dec
shll
gs
pop
inc
outsl
mov
add
add
add
add
dec
add
popf
add
push
add
dec
add
out
add
jge
add
add
add
add
add
xlat
lock
xchg
imulb
pop
pop
jnp
push
sub
ret
push
pop
fistpl
adc
scas
xor
insb
jbe
in
push
adc
pusha
add
dec
jg
clc
fsubl
ud0
in
pop
insb
rclb
jmp
mov
cmp
pop
lret
daa
push
jge
movsl
sbb
movsl
gs
xchg
jnp
mov
data16
jmp
into
stos
subl
insb
inc
mov
sahf
push
mov
sub
xchg
sbb
ds
mov
xor
lret
stc
dec
cmp
rcrb
or
inc
cmpsl
movsl
cmp
mov
insb
add
idivb
loop
shlb
cs
fisttpl
pop
cmc
hlt
ffree
jle
ljmp
jo
mov
testb
sbb
cwtl
pop
divb
inc
popa
imul
and
pop
cmp
cmp
push
sub
pop
icebp
mov
sub
fwait
inc
dec
xchg
stos
negl
push
int3
faddl
mov
cmp
sbb
xor
sti
pop
inc
dec
fcoml
add
mull
mov
out
aad
pop
int3
pusha
mov
leave
loopne
mov
popf
or
pop
jmp
or
bound
jp
cmpsl
jle
mov
and
stos
in
xor
pop
dec
cmp
and
adc
outsb
stc
test
into
xor
and
je
andb
std
fsubrs
pop
mov
ljmp
xor
or
ja
pop
adc
inc
int
bound
addr16
loope
out
mov
jae
sbb
xchg
sbb
aaa
sbb
rcl
andb
and
into
mov
sbb
popaw
aas
cmc
mov
rcrl
in
mov
mov
fadd
jae
sbbb
xchg
pop
pop
jmp
jae
or
jge
pop
rorb
and
nop
xor
aaa
cmpl
emms
jnp
call
gs
scas
sub
mov
loope
xor
fcmovnu
leave
out
dec
in
sbb
hlt
pop
insl
mov
and
fsubrl
inc
and
cli
cmpsl
xor
inc
sbb
lret
xchg
adc
mov
pop
inc
jmp
and
cmpsl
or
fimull
add
cmp
dec
ret
dec
inc
fs
add
mov
cltd
add
popf
in
or
mov
aad
mov
clc
cmp
sub
stos
pop
stc
jle
sbb
scas
andb
mov
je
pop
mov
pop
mov
in
pop
pop
xlat
xchg
stos
push
or
leave
dec
loope
fwait
outsb
fs
pop
xchg
xchg
mov
adc
jmp
and
xchg
test
lcall
sbb
insl
imul
dec
imul
dec
dec
add
xchg
lahf
xchg
xor
xor
adc
cmp
xor
ljmp
mov
xlat
push
ret
mov
cli
incl
mov
sub
lods
dec
add
enter
mov
push
mov
aad
or
test
sub
xchg
sahf
jne
das
sbb
xchg
in
mov
lahf
addr16
aad
jle
stc
mov
jne
aam
mov
jns
mov
jo
sbb
inc
mov
sub
mov
push
jo
test
push
or
stc
mov
xor
lods
and
fbstp
jae
xor
jae
dec
mov
mov
add
aas
add
in
dec
popa
dec
hlt
xchg
and
mov
rcrb
inc
roll
push
mov
pop
dec
add
sub
insl
roll
daa
xor
hlt
mov
daa
gs
or
jns
pop
push
mov
call
sahf
xor
cmp
shll
fwait
jb
stc
sahf
out
jae
mov
adc
jne,pn
inc
aad
push
inc
push
int3
xchg
sbb
js
xchg
jecxz
dec
popf
inc
cmp
cmp
lods
fadds
adc
mov
in
idivl
inc
jnp
scas
sbb
xor
imul
or
in
mov
ss
jp
ret
mov
or
inc
lret
leave
push
pop
test
cmp
and
sbb
cmpl
or
push
lods
mov
xlat
push
mov
xlat
lea
out
movsb
pop
insb
lea
movsb
sahf
fdiv
frstor
mov
fdivs
mov
jp
scas
lahf
push
xchg
fwait
gs
mov
push
push
cmp
mov
lds
add
or
adc
push
fisttpll
repz
jg
or
mov
shl
push
rolb
stc
mov
mov
xchg
out
push
adcl
jmp
cmpsl
push
xor
adc
add
fbld
in
popf
and
cs
jg
loope
insb
iret
jecxz
mov
jecxz
mov
cmpsb
subl
push
xor
ret
inc
push
clc
pushf
mov
lahf
stc
mov
insl
rol
fneni(8087
outsl
in
inc
jbe
outsb
sbb
cmpsl
nop
iret
iret
add
adc
push
mov
ja
mov
jbe
aas
xlat
js
or
test
lret
sti
loope
inc
fcoms
mov
pop
or
sti
cmpsb
sti
lret
pop
mov
out
sub
fldenv
icebp
push
dec
lds
nop
mov
aaa
dec
dec
lret
das
and
xor
xchg
mov
mov
sarb
inc
lods
jle
insl
fnsave
lods
push
fldt
nop
and
test
cmpsl
pop
pop
sahf
mov
dec
xchg
and
pop
ja
test
inc
xchg
int3
sarb
xor
in
popa
fistpl
mov
stos
pop
rcll
jecxz
loopne
jmp
cli
push
jmp
and
push
jge
dec
movsb
aad
jo
cmp
cmp
mov
insb
lock
stos
dec
lahf
jnp
sub
ret
add
push
inc
sub
nop
pop
shll
cmc
lcall
aam
andb
nop
test
inc
mov
and
sub
fs
mov
push
loopne
mov
xor
sbb
mov
ficoms
in
in
jp
lret
mov
xlat
or
sub
mov
pop
scas
shlb
adc
js
jae
push
das
daa
mov
test
ds
inc
push
adc
popf
mov
sbbb
inc
dec
scas
scas
test
add
les
call
arpl
or
cwtl
pop
xor
dec
add
push
add
or
iret
sbb
imul
mov
out
xchg
fisubrl
cld
repnz
dec
xor
xchg
movsl
aam
inc
pushf
and
stos
es
jecxz
fisubl
loopne
xor
or
push
loope
or
stos
jne
mov
cmpsl
fidivrl
mov
cmp
in
cmpsb
enter
xchg
stos
fisttpl
cwtl
adc
adc
in
mov
fsubl
fs
stos
shrd
push
or
pushf
ret
jne
fnstsw
mov
ljmp
push
dec
xchg
pop
cltd
pop
inc
sub
outsl
sbb
jp
add
pminsw
pop
or
fsub
mov
int3
pop
repnz
adc
dec
leave
js
cli
lds
in
push
xchg
adc
movsb
xchg
sbb
movsb
xchg
push
sub
sti
iret
xorb
sbb
push
outsl
aaa
mov
lcall
push
sbb
dec
in
into
mov
sbb
inc
jbe
test
movsl
jl
test
ficompl
lods
inc
xor
pop
or
rcrb
ret
addr16
or
jnp
push
adc
lcall
mov
cmpl
mov
in
mov
lret
sarl
push
and
xor
mov
pushf
insb
pusha
inc
sbb
jno
lret
mov
movsb
mov
inc
push
or
mov
mov
adc
fmul
pop
mov
fsubrp
xchg
xchg
fnstsw
out
or
pop
cmpsb
pusha
mov
fsubr
les
aam
adc
outsb
sarb
lea
cmc
and
adc
imul
hlt
and
insl
cmc
mov
repz
movsb
outsb
popa
dec
xor
fstpl
mov
inc
push
and
cmpb
insl
sbb
icebp
inc
rorb
push
push
lret
mov
xor
in
mov
xchg
into
and
jp
int
jb
xor
dec
rcrl
cs
gs
jge
in
and
in
popl
aad
lods
pop
xor
inc
push
push
loopne
leave
loop
mov
sbb
nop
adc
mov
lea
cmpsl
add
or
lret
mov
cmp
cmp
xor
sbb
sar
adc
pop
sub
mov
in
mov
incb
mov
mov
mov
sbb
orl
clc
scas
outsl
inc
sbb
cmc
mov
and
xor
movsl
in
sbb
cmc
leave
imul
mov
lds
pop
repz
add
jle
nop
push
xor
cltd
xor
sbb
aas
mov
dec
cli
mov
lock
shlb
adc
sarb
mov
testb
insl
data16
jge
cmpsl
data16
sbb
xchg
in
and
into
jns
mov
sub
jmp
cmp
cmp
imul
hlt
stos
sbb
mov
movsl
nop
movl
mov
xchg
fstp
sbb
push
dec
pop
mov
inc
adc
ja
int3
pop
mov
addr16
dec
add
cli
cltd
leave
int3
test
scas
lods
pushf
inc
or
xor
inc
push
mov
aas
inc
cld
sbb
lods
popa
lret
pop
sbb
cmp
inc
ss
test
cmp
mov
das
out
and
mov
popf
push
push
or
mov
and
dec
mov
popl
imul
dec
ret
dec
xor
mov
aam
fdivs
fs
ss
lret
xor
std
pop
mov
addr16
add
pop
fnstsw
sub
or
jge
xorb
bound
lahf
cmpb
shrb
sarl
sbb
into
test
adc
cli
and
outsb
pop
and
jnp
insb
xchg
jl
lahf
push
out
mov
test
add
pop
mov
lret
xor
xchg
fdivp
fiadds
adc
push
out
sub
ljmp
jmp
pusha
or
test
inc
sarl
outsb
adc
lcall
cmp
mov
mov
pop
xchg
sbb
out
and
in
lds
pushf
mov
mov
jge
sbb
xchg
out
push
sub
pop
push
scas
mov
inc
bound
pop
mov
xchg
sbb
jae
ret
popf
test
popa
mov
and
dec
sub
add
sbb
repnz
mov
mov
rcl
mov
in
andl
scas
push
mov
pop
int
push
xor
xchg
loope
dec
push
fsubrp
bound
add
dec
pop
aam
add
pop
shll
xor
mov
mov
xchg
nop
adc
fisttpl
add
loopne
stos
push
sbb
inc
and
xor
inc
mov
ret
xchg
ds
mov
push
mov
in
mov
lcall
cmc
loop
enter
je
jno
lahf
cmp
clc
out
aad
lock
and
outsl
int
imul
loop
dec
inc
adc
xchg
pop
iret
mov
jb
mov
ss
sbb
push
inc
ss
stos
xchg
insl
mov
sub
xor
scas
mov
xor
daa
ja
xorl
mov
inc
jno
pop
push
mov
aam
out
and
adc
ja
xchg
cmp
dec
stos
xor
daa
cld
xlat
add
in
cli
cs
sti
and
xchg
je
ds
pop
repnz
adc
pop
daa
iret
xor
sub
repnz
mov
in
mov
sub
mov
sbb
pop
movsb
dec
jb
pop
in
sub
call
jge
adc
sub
jl
dec
dec
jne
mov
outsb
js
cmp
negb
in
mov
mov
lds
or
fwait
es
fcmovnu
mov
xchg
jp
pop
stos
ljmp
clc
or
jno
ja
push
sub
jns
or
jmp
bound
icebp
pop
dec
inc
outsl
adc
mov
inc
mov
mov
imul
sub
pop
cltd
mov
mov
es
mov
test
and
pushf
movb
pop
dec
mov
cmc
cmp
jo
sar
xchg
mov
std
in
jmp
sbb
jno
test
repz
pop
in
gs
xchg
loope
push
push
sub
mov
mov
and
fldcw
test
mov
xchg
ficomps
testb
nop
imul
in
test
mov
in
int
sbb
xchg
mov
lret
ret
pop
fcompl
or
inc
pushf
mov
test
jge
ja
fs
inc
sbb
imul
insb
adc
ljmp
js
shll
cmpsl
dec
pop
int3
das
mov
cld
insb
inc
testl
and
xchg
arpl
stc
sbb
mov
repz
pop
call
add
push
jle
add
movsb
mov
jmp
pop
push
aad
push
andl
fwait
ljmp
xor
push
sub
lds
xor
sbb
or
imul
icebp
and
adc
jg
cwtl
cmpsl
cmp
scas
sub
out
cmc
movsl
dec
lahf
mov
rcrb
leave
sub
scas
mov
jecxz
outsl
mov
dec
aaa
inc
mov
mov
les
sub
xchg
repz
cmc
dec
pop
mov
jne
xor
push
bound
dec
pop
std
popl
movsb
adcb
outsl
xchg
mov
addr16
fistpll
mov
mov
mov
mov
lret
cmp
cmp
adc
cmpsb
adc
mov
adc
mov
xchg
les
data16
jp
in
add
xor
sbb
xchg
jg
inc
int
and
inc
add
lea
lock
fsts
jb
push
mov
in
dec
iret
movsl
and
inc
arpl
into
les
jno
cmc
xorb
jb
popf
xor
dec
data16
cwtl
xchg
jecxz
inc
outsl
mov
lock
aaa
fidivs
add
stos
and
and
or
or
in
lds
cmpsl
outsl
stc
jb
enter
jnp
lds
xor
lods
mov
out
lock
enter
push
mov
movsb
adc
pop
cmpsl
cmc
xchg
movsb
xchg
sbb
and
dec
xchg
outsb
sbb
push
add
or
icebp
loopne
jbe
orl
push
outsl
pusha
xchg
push
jmp
popa
mov
mov
sub
mov
inc
dec
jmp
xor
mov
scas
xor
jl
rcrl
and
sub
pop
aam
in
cs
fs
push
fnstcw
and
arpl
inc
scas
dec
ljmp
jno
jge
push
in
add
mov
xchg
cmp
repnz
jae
dec
adcl
cmp
sbb
pop
insl
out
jns
sbb
pusha
dec
in
sub
std
mov
ficompl
sub
jae
idivb
call
or
pop
je
xchg
scas
inc
ds
or
adc
orl
add
pop
mov
inc
jno
mov
xchg
mov
stc
sti
sahf
test
and
xchg
aaa
push
push
push
cmp
mov
mov
pusha
div
jo
hlt
pushf
lods
insb
nop
sbb
enter
adc
jle
dec
push
inc
pop
pop
dec
add
cli
inc
push
aas
std
andb
push
lret
lds
pop
sbb
push
push
and
imul
xchg
push
test
sahf
xchg
call
lods
jg
xchg
xor
sbb
push
push
clc
cmc
ss
lds
add
mov
xchg
jnp
xchg
pop
mov
cmp
sub
push
jle
bsr
jge
push
cmp
adc
outsl
inc
xchg
lcall
daa
lret
dec
jns
jae
mov
and
js
gs
out
mov
jne
cli
xchg
leave
lret
lea
pop
mov
sahf
add
loop
lea
nop
icebp
movsb
ljmp
fucomi
cmp
xchg
cmc
jecxz
push
pop
gs
xchg
mov
bound
mov
mov
jb
inc
pop
xchg
pop
and
lods
jb
mov
sub
and
into
jae
jmp
lods
mov
outsl
lret
or
mov
aam
enter
add
scas
mov
inc
outsb
bound
data16
movsl
inc
sub
push
insb
jp
mov
push
fs
loope
ljmp
rorl
sub
stc
addl
lea
fimull
push
cmp
mov
clc
rcrl
xchg
sbb
mov
push
add
js
push
mov
inc
dec
popa
xor
xor
sbb
sub
sar
imul
popw
negl
popf
cmp
mov
inc
push
scas
mov
shlb
aam
rep
in
pop
xor
jle
out
sub
sbb
std
inc
lret
jne
jl
ret
push
push
mov
addr16
into
lods
xchg
insl
int3
mov
jb
enter
out
out
inc
add
mov
stos
push
in
mov
into
cmp
in
cmpsb
pop
pop
sahf
pushf
sbb
lds
xlat
push
cmp
outsl
loope
xchg
in
sbb
outsl
or
call
orl
fucompp
fwait
adc
or
dec
test
out
jo
nop
xchg
orl
mov
jbe
push
lea
ljmp
or
pop
mov
shll
push
in
mov
cltd
sbb
inc
std
out
lret
jb
int3
dec
xor
movsl
shlb
mov
add
xor
pop
cltd
lcall
enter
cld
add
or
aam
fcomip
mov
add
aad
adc
mov
hlt
rcrl
push
push
cmp
in
lcall
dec
out
jnp
shr
int3
dec
popa
fstp
cli
push
jge
popf
push
imul
es
call
out
sbb
sarl
bound
aaa
ret
push
mov
rcll
sbb
sub
xchg
xor
shll
lods
sub
mov
test
xor
mov
in
push
adc
movsl
shl
nop
xchg
mov
scas
lcall
xchg
fisubl
stos
data16
addr16
out
movsl
dec
mov
push
xlat
addr16
cltd
addr16
cli
xchg
fs
adc
dec
inc
jmp
leave
and
inc
outsb
jmp
pop
inc
sub
hlt
aam
cli
out
fs
inc
aam
mov
xchg
mov
inc
repnz
pop
xchg
in
xchg
mov
dec
out
popa
dec
pop
push
dec
movb
mov
or
adc
imul
add
ds
call
bound
int
add
bound
xchg
movsl
ja
inc
test
add
add
add
add
add
add
add
add
add
sbb
add
add
outsb
add
std
add
add
lods
add
push
add
fisttpll
cmpsb
add
lea
add
add
mov
add
add
dec
add
popf
add
add
dec
add
out
add
jge
add
add
stos
pop
add
mov
jo
int
int3
int3
int3
int3
int3
int3
mov
add
add
loopne
and
popa
sbb
mov
xor
add
adc
call
add
lock
add
dec
addb
add
cwtl
push
add
popa
or
add
xor
add
cmpsb
or
add
add
or
add
add
fsts
gs
push
mov
fs
push
js
mov
and
xorl
roll
push
jmp
enter
jmp
push
add
incl
adc
jne
in
scas
cld
pop
jmp
pop
lock
or
pop
jl
stc
mov
sbb
adc
jno
mov
aam
add
and
loopne
adc
xor
test
add
call
lea
jmp
pop
std
std
imul
addl
jae
push
push
loopne
nop
push
push
adc
clc
decl
aas
mov
sarb
jo
mov
int
lea
push
add
pop
add
add
add
add
js
add
add
add
sub
out
add
call
outsl
push
pushf
dec
insb
inc
movsl
sub
inc
lock
add
outsl
xchg
inc
je
pop
inc
dec
xchg
insb
cmp
imul
jne
and
dec
dec
mov
jae
mov
or
mov
add
add
add
adc
add
add
and
add
add
lock
add
dec
addb
add
cwtl
push
add
add
test
add
add
clc
xor
add
add
out
sub
lahf
sbb
cmp
push
sub
mov
xchg
fcomip
das
fiadds
mov
outsb
je
mov
or
push
cltd
push
call
shrb
mov
add
leave
dec
stc
xor
ficompl
sti
arpl
imul
push
push
pop
adc
mov
mov
add
push
pop
call
push
xchg
ljmp
mov
aad
lods
fldl
inc
xor
mov
imul
ja
cmpsl
lock
in
jmp
pusha
dec
movsb
sub
push
movsl
ret
sbb
sbb
negb
add
xor
call
mov
push
mov
mov
jle
xchg
push
cs
pop
hlt
jge
mov
dec
add
cs
pop
xchg
and
and
imull
mov
pop
sub
into
mov
subl
cmp
xchg
jg
push
mul
mov
cmp
repnz
jb
cwtl
fwait
das
add
fdivrp
inc
inc
push
outsl
aam
inc
jecxz
frstor
mov
xchg
sbb
adc
out
sub
cmpsb
jle
cmc
sbb
ficomps
aam
ret
sub
cmp
popa
lods
xlat
sub
push
data16
pop
loopne
jg
mov
enter
push
inc
dec
xchg
insl
mov
mov
jge
pop
scas
inc
mov
shl
cli
test
mov
hlt
mov
pop
and
out
stos
repz
dec
repnz
cld
clc
mov
out
insl
ljmp
mov
push
int
cmp
sar
pop
bound
inc
mov
stos
mov
pop
mov
cwtl
and
out
int3
hlt
hlt
mov
dec
idivb
cmp
enter
aam
pop
shrb
call
mov
pop
aad
fs
cmpsl
push
out
cmp
aad
andl
mov
lods
mull
add
cwtl
push
mov
data16
push
or
and
xchg
test
dec
std
out
jl
and
subb
movsb
mov
and
std
mov
hlt
pop
into
dec
fdivs
notl
popa
sahf
les
add
scas
ret
push
jo
or
mov
sub
jle
jg
aad
lods
xchg
mov
adc
sub
push
mov
test
fisttpll
mov
test
fwait
dec
mov
pushf
dec
cmpl
and
fiaddl
mov
scas
aam
mov
lret
xor
xor
mov
fdivrl
push
fdivrs
xor
cmpsl
addl
icebp
divb
out
aas
xlat
nop
ss
std
testl
sbb
stos
cld
scas
daa
lahf
nop
and
outsb
push
pusha
loopne
nop
movsl
sub
and
insl
xchg
ja
xchg
orb
mov
push
jl
cmpsb
cmp
pop
xchg
jl
data16
scas
mov
cltd
mov
sbb
int
adc
jo
dec
jno
ds
push
push
das
lahf
sbb
xorl
adc
outsb
divb
jge
mov
test
push
dec
or
je
or
and
loope
add
push
in
and
sbb
mov
add
jge
out
mov
js
fdivl
xchg
les
jmp
fisttps
lcall
dec
and
mov
sub
adc
dec
jno
frstor
cmp
icebp
movsb
push
je
xlat
clc
push
pop
test
inc
and
and
popa
pop
push
lods
insb
jae
xchg
popa
push
mov
inc
iret
dec
adc
cmp
inc
stos
jmp
rorb
pop
xor
sub
aad
dec
out
or
int
nop
mov
mov
mov
add
mov
hlt
cmpsb
push
pop
ret
arpl
push
out
and
pop
xor
nop
orb
ds
push
insl
sahf
or
test
loop
xchg
scas
stc
jmp
imul
jg
sbb
xor
pop
aaa
pusha
movsl
sbb
xor
jbe
mov
lods
pop
mov
pop
shrb
dec
xchg
aad
aad
jge
scas
aad
lcall
repnz
hlt
add
mov
arpl
je
jbe
or
or
pop
mov
jmp
jge
inc
lahf
gs
in
pop
insl
insb
xor
movsb
loop
js
pop
repz
or
shll
mov
es
pop
cmp
insb
xchg
push
in
int3
xchg
dec
xchg
sbb
aas
fisubl
sub
pusha
testb
push
cmp
add
je
pushf
in
mov
push
inc
mov
cmp
cmpsb
push
test
jae
pop
and
rcrl
and
mov
int3
int3
xchg
xor
loop
dec
jb
fldenv
cmpsl
js
jp
daa
fstpl
mov
insb
enter
popf
arpl
sub
pop
and
push
inc
repz
adc
push
mov
xor
dec
lds
xchg
dec
ret
push
repnz
arpl
dec
xchg
inc
add
rcrl
cmp
pop
std
iret
les
pop
xchg
inc
jo
lea
add
push
loope
mov
das
and
xor
push
std
lret
add
cmp
jo
inc
pop
popa
cpuid
rcrb
rorl
addr16
adc
xor
or
xor
xchg
inc
mov
add
xor
dec
xchg
fcmovne
push
adc
and
sub
jp
xchg
jg
xor
mov
rolb
lods
push
push
adc
es
xchg
rcll
loop
pushf
lods
das
cmp
mov
ret
ss
imul
pop
inc
xorb
ja
rclb
lcall
xchg
in
ljmp
imul
adc
cwtl
es
mov
inc
sub
dec
ret
push
sbbb
jno
out
dec
clc
push
in
jnp
aam
jne
subb
test
gs
loope
jecxz
roll
push
jmp
imull
popa
inc
push
leave
into
aam
add
jno
sub
popf
jns
add
adc
inc
repnz
add
sub
inc
inc
push
dec
sbb
ret
outsb
lcall
sub
out
cmp
arpl
xor
xor
int3
inc
cmp
fwait
xor
cmpsb
mov
jge
aaa
jae
in
lea
dec
jne
dec
push
test
mov
or
outsb
mov
mov
std
jb
rcrb
dec
leave
xchg
inc
or
sub
js
pop
divl
jmp
jnp
sub
in
in
inc
pop
xorl
nop
ret
cmp
or
sbb
fisubrs
and
test
or
scas
rcrl
stos
daa
pop
mov
bnd
jmp
pop
inc
jge
xor
pop
adc
push
and
lock
push
inc
adc
push
rolb
sub
sbb
push
enter
pushf
push
lock
insl
das
sarl
push
inc
sbb
push
in
ja
cmp
sbb
out
or
shrb
pop
in
cmp
xchg
and
mov
pop
cmc
inc
mov
mov
fwait
pusha
mov
pop
sbb
dec
cmp
mov
adc
inc
inc
pop
loope
adc
cmp
add
jno
add
int3
xchg
addl
test
or
je
cli
jge
or
mov
test
rclb
pop
dec
dec
cmpsb
stos
sbb
out
mov
pushl
push
mov
adc
inc
fildl
fs
sub
sti
sbb
push
sbb
cli
adc
clc
nop
sarb
dec
push
adc
or
into
jp
mov
cmpb
jnp
cltd
sub
stc
adc
adcl
rcll
mov
or
xor
scas
jo
imul
inc
add
or
jne
pop
ret
mov
push
push
pop
test
push
je
mov
sbb
mov
mov
arpl
add
ss
lret
mov
loop
pop
stos
adcb
into
xor
mov
sbb
adc
xor
sub
cmp
sbb
daa
or
out
shrb
push
aas
xor
out
adc
pop
fsubl
pop
fwait
imul
sahf
mov
pop
mov
es
or
hlt
pop
add
loopne
ret
fxch
mov
adc
sbb
pop
inc
addr16
popf
adc
loope
pop
or
out
sub
jle
push
fdivrs
faddl
data16
sbb
js
mulb
pop
mov
jno
mov
dec
addr16
sti
mov
xchg
ss
into
aad
repnz
insb
outsb
cli
cmpsb
and
insb
dec
ljmp
out
insl
mov
hlt
call
jno
jecxz
arpl
ja
lcall
dec
jl
negb
test
push
push
push
push
sub
in
mov
xchg
inc
jecxz
hlt
movb
jmp
cwtl
xor
mov
aaa
jp
mov
xchg
pop
cmp
jo
adc
jp
sub
pop
mov
mov
bound
adcl
inc
std
cmpsl
xchg
ja
inc
mov
mov
jecxz
js
repnz
add
pushw
mov
adc
loop
mov
call
in
outsb
xchg
lret
pop
js
fidivs
cwtl
filds
xchg
adc
xor
mov
ret
fcoml
jbe
inc
jb
mov
enter
lock
ljmp
out
push
sbb
lret
sbb
test
fmul
or
in
mov
into
test
fdivp
lods
push
mull
cwtl
das
mov
sub
leave
pop
pop
inc
sub
sub
mov
pop
push
lahf
lock
fsin
shr
repz
shll
lret
popa
cmp
movsb
push
mov
pop
pop
cwtl
inc
jne
cmpsb
ret
sbb
adc
fisubl
fwait
movsb
inc
xchg
dec
lock
stos
xor
in
fcmovb
xchg
or
jo
sbb
std
inc
push
ds
xchg
push
dec
subl
push
out
sbb
mov
dec
test
mov
notl
inc
mov
dec
xchg
test
es
aam
ja
sbbl
xchg
xor
jl
andb
mov
leave
dec
data16
push
or
dec
mov
mov
arpl
jmp
repnz
daa
cs
aad
subb
pop
outsb
or
sti
xchg
inc
pushf
repnz
loope
cmp
iret
insl
sub
inc
hlt
shr
xchg
pop
cmc
push
mov
cmc
xor
cmpsb
stc
push
test
sbb
xchg
xor
push
movb
mov
aam
xor
sti
sub
mov
sub
push
imul
pop
adc
out
jbe
sahf
dec
mov
push
out
stos
das
sub
pop
sbb
ffreep
cli
das
int3
jae
add
add
inc
loope
outsb
push
adcb
dec
fdivs
mov
dec
fildll
sbb
jecxz
xor
loopne
lret
lret
fisttps
or
fldt
sub
mov
arpl
jl
dec
lret
gs
dec
insb
fidivrs
jae
mov
or
adc
pop
lds
adc
push
into
inc
lea
pop
arpl
dec
mov
jmp
shll
sub
inc
fnstsw
and
xchg
addr16
push
pop
dec
stos
out
les
outsb
and
inc
push
push
pminsw
sub
inc
and
in
bnd
xor
push
mov
jge
aam
or
fisubrs
push
test
adc
mov
dec
jl
fcomps
cmp
repz
mov
xchg
mov
gs
ljmp
ja
mov
dec
dec
lret
aad
popa
adc
pop
sbb
sub
daa
inc
mov
sbb
stos
iret
mov
jo
icebp
jg
dec
mov
out
jbe
js
cmc
fdivrs
fsubr
pop
adc
or
push
mov
or
adc
jae
jnp
push
std
xchg
xchg
or
sarb
push
pop
mov
adc
jno
pop
lahf
adc
cmpsl
lods
xchg
icebp
les
lds
fiaddl
lret
adc
loop
dec
in
enter
xlat
sbb
cmpsl
inc
add
mov
and
or
dec
cmpsb
xor
pop
xchg
rolb
repnz
pusha
push
jmp
push
dec
push
mov
xchg
sbb
das
jb
outsb
dec
sub
rol
add
jns
add
cmp
xrelease
loop
and
add
mov
adc
add
cmp
cmp
dec
leave
push
cmpsb
mov
push
loopne
test
push
imul
pusha
xor
and
lahf
push
outsb
cmpb
push
mov
lock
cmpsl
data16
xor
push
add
mov
and
mov
jnp
insl
cli
ds
lret
xchg
loop
ja
popf
daa
pop
aaa
cmp
lret
outsb
pop
or
xlat
dec
loopne
and
jecxz
dec
fildll
loop
lds
icebp
das
dec
in
and
pop
fsubr
push
movsl
mov
inc
xorb
out
and
push
les
pop
and
aam
fld
scas
in
inc
or
pop
mov
daa
movsl
fisubrs
rol
push
xchg
jbe
xchg
dec
xchg
int3
test
adc
inc
and
movsb
scas
stos
and
mov
xchg
cmpsl
ret
daa
repnz
cmp
mov
or
repnz
stc
hlt
pop
sub
pop
push
lods
inc
popf
and
cmc
adc
in
mov
xlat
icebp
fs
jmp
xor
movsb
push
aam
das
in
daa
lock
in
xchg
xorl
xchg
inc
jmp
orb
mov
jae
test
lahf
inc
adc
or
mov
xchg
adc
enter
jge
dec
fistps
and
lahf
jge
inc
push
cmpb
jmp
inc
loop
lcall
aaa
arpl
mov
sti
fists
cmc
mov
jge
rcll
add
xchg
dec
jb
pop
fistps
pusha
jl
jb
dec
mov
xchg
dec
je
pop
sub
inc
dec
sub
jnp
or
dec
in
test
imul
call
sbb
mov
aad
in
nop
and
mov
addr16
lcall
cmp
lret
lea
loop
fdivr
repz
cli
insb
mov
incl
xor
shlb
and
mov
negb
xchg
test
mov
imul
ret
lret
insl
push
dec
push
sbbb
cltd
adc
jns
dec
add
jmp
divb
sub
xor
rolb
ror
mov
repnz
loope
shlb
enter
iret
xorb
push
or
movsl
hlt
push
sub
fisubl
lods
in
imul
cmpsl
stos
and
call
and
enter
xor
mov
ret
ja
cmp
loop
lock
jne
cmp
mov
rclb
movsb
push
out
pop
shll
sub
stc
lods
mov
push
mov
adc
test
adc
fnstcw
ss
in
ljmp
jmp
xchg
mov
and
adc
or
inc
ljmp
pop
pop
lods
pop
and
mov
in
inc
pop
imul
inc
aam
or
out
and
xchg
mov
adc
jmp
sub
sahf
popa
xchg
icebp
push
adc
xchg
inc
push
sahf
push
cs
imul
push
enter
add
fisubrl
cltd
stos
outsb
loope
mov
jno
push
xchg
inc
insl
lods
dec
jbe
std
int3
mov
push
sub
ficoml
shlb
jno
ror
nop
push
movsl
push
mov
mov
sarl
insl
jns
outsb
loope
mov
inc
out
mov
cmp
pop
jne
cmp
pop
add
vpsrldq
or
lods
push
stos
xor
sarl
inc
cld
es
jo
mov
jmp
clc
push
push
xchg
mov
jle
mov
in
push
imul
insb
sub
push
add
cmp
popf
sbb
test
or
scas
hlt
out
xchg
scas
call
adc
mov
test
int3
rcl
lods
push
jp
xchg
in
sbb
leave
enter
jae
lcall
push
xchg
arpl
test
mov
pop
inc
pushw
and
std
cltd
loope
rolb
sbb
or
mov
js
add
push
dec
sbbl
in
mov
ljmp
enter
cmp
xchg
jle
push
lcall
mov
xchg
adc
mov
jae
hlt
sar
adc
and
adcb
push
mov
adc
sysenter
shl
fwait
sub
jns
cmp
xchg
or
stos
push
loop
jnp
adc
mov
sub
jmp
xor
or
imul
dec
xor
and
imul
push
jno
and
push
jmp
cmp
lret
or
xorl
leave
pop
fcomip
sbbl
adc
sub
fsubs
int
jle
imul
adc
cs
lock
daa
fmull
mov
cmpb
pusha
imul
cmp
ret
push
sahf
mulb
xchg
dec
sbbl
rolb
les
int
add
cltd
loope
jmp
fwait
add
pop
jg
cs
cmp
push
jno
mov
cmp
pop
cmp
xor
sti
stc
or
mov
push
sub
lea
popl
rcrl
push
pop
xchg
fmuls
enter
je
push
push
push
pop
cs
xor
icebp
mov
aam
call
fnstenv
xor
cmp
pop
insl
push
popa
and
cmpsl
mov
test
or
shrl
inc
mov
icebp
and
dec
popf
sub
dec
fwait
jmp
lods
daa
das
js
xor
dec
jmp
mov
jmp
decb
out
pop
lret
pop
pop
ljmp
test
mov
push
sub
in
inc
cmp
out
das
repz
bound
lret
imul
sarb
mov
and
in
pop
loopne
aas
cmpsl
test
lods
scas
hlt
imul
jb
leave
pop
jge
retw
sub
dec
jg
jmp
add
mov
cmpsb
ds
ljmp
jno
mov
cltd
cli
adc
push
dec
scas
xchg
leave
add
pop
out
jo
shll
xor
ja
cs
sbb
mov
scas
shlb
out
mov
stos
dec
lock
jno
mov
test
add
inc
jns
push
out
push
jg
add
cmpsb
xchg
xchg
mov
cltd
inc
jae
add
out
sbb
popf
mov
subb
push
jmp
fiadds
cmp
dec
jnp
in
incb
lods
adc
pop
ss
inc
push
xorl
jo
ja
ljmp
mov
sbb
in
cs
scas
sub
or
mov
imul
outsl
vpmaxub
bndstx
das
xor
push
je
or
sti
testb
mov
xor
sbb
cmp
sub
mov
call
repnz
jnp
mov
mov
mov
pop
call
inc
mov
fldenv
push
pusha
pushf
roll
sub
fs
mov
adc
xchg
push
add
add
dec
addb
add
cwtl
push
add
add
test
add
add
clc
xor
add
add
rolb
add
pop
nop
add
add
push
add
add
add
add
add
aam
push
add
sub
add
add
mov
add
add
or
adc
add
or
les
in
in
adc
inc
add
dec
addb
add
cwtl
scas
add
ja
mov
dec
js
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
mov
pushl
xor
movl
pushl
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
push
call
mov
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
call
push
pop
pop
ret
jae
jb
jo
add
adc
add
xor
call
push
push
push
call
push
imul
jb
je
arpl
adc
mov
call
mov
xor
push
push
mov
call
call
push
push
push
push
push
push
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rcl
add
rolb
add
roll
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
roll
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
roll
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
rolb
add
add
nop
rolb
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
rolb
add
rolb
add
rolb
add
add
or
add
adc
add
daa
roll
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
roll
add
add
pop
roll
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
aam
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
aam
add
aam
add
aam
add
aam
add
aam
add
add
lods
aam
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
add
dec
add
push
add
pop
add
fs
add
insb
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
