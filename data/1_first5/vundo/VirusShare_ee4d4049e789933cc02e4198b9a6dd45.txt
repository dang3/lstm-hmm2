jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
gs
inc
jbe
xchg
pop
shlb
aaa
inc
mov
add
push
add
add
pop
add
popf
add
cmpsl
add
cmp
popl
jnp
inc
add
add
add
add
add
add
jo
mov
add
addl
sahf
add
xchg
add
add
add
out
mov
pop
add
add
add
bound
push
add
add
add
add
add
addl
mov
push
add
push
add
pop
add
add
add
add
test
push
add
testb
add
add
push
add
add
xor
push
add
add
add
add
add
add
sub
je
or
push
add
add
add
push
add
sahf
add
push
add
add
jge
int3
add
add
test
push
add
xchg
add
add
pop
add
add
push
add
add
add
add
loop
push
add
add
add
add
adc
pop
add
add
lahf
add
jg
int3
add
add
pop
add
aaa
add
add
add
add
mov
cmp
xor
add
xor
push
add
add
nop
add
add
add
ljmp
add
push
add
mov
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
push
add
add
xor
int3
add
add
iret
add
and
popf
add
add
add
add
loop
and
insb
add
add
add
add
add
mov
jg
and
movsl
add
add
add
add
add
add
add
movsl
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
jo
insb
add
insl
add
add
ljmp
add
or
push
add
add
add
add
sahf
add
add
loopne
pop
add
mov
sahf
add
add
add
add
push
add
add
add
add
add
mov
add
ljmp
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
and
lock
add
add
add
add
add
filds
jo
xchg
add
add
add
add
add
add
add
add
inc
add
add
add
jne
movsl
add
add
add
add
jg
int3
add
add
push
add
add
add
add
add
add
inc
add
aas
add
pop
add
add
add
add
and
pop
add
mov
addl
push
add
and
addl
cmp
push
add
add
add
and
and
popa
add
add
fadds
push
add
add
add
add
add
sub
jo
xor
cmp
sahf
add
add
inc
add
flds
ret
add
add
add
iret
add
add
inc
add
add
add
add
add
rcrl
imul
jle
rcrl
and
addr16
mov
daa
jnp
sub
rol
xchg
in
inc
mov
sub
icebp
xchg
pop
ss
sub
pop
push
pop
mov
sbb
fstpt
push
xlat
bswap
repnz
adc
frstor
xor
inc
stos
andb
pop
out
out
imul
xchg
jg
or
outsb
aaa
loope
pop
add
mov
xor
out
rorb
das
test
stos
repz
je
imul
hlt
or
popa
js
fistpll
scas
cs
lods
dec
pop
push
fldl
jmp
adc
xor
adc
ja
jb
cmc
mov
mov
outsb
lea
dec
pop
mov
dec
dec
jl
xchg
dec
int
add
xchg
or
pop
lods
sbb
js
outsl
daa
out
popa
or
outsb
dec
mov
out
mov
add
out
xchg
sub
rcll
xchg
aam
ret
subl
sarl
ss
jmp
aas
sbb
adc
or
or
fpatan
sub
cmpsl
sbb
lock
pop
and
dec
cmp
lcall
mov
dec
xor
js
cmp
xchg
sbb
dec
sub
cmc
divl
sbb
push
or
clc
push
push
jge
cs
sub
sbb
inc
mov
cmp
inc
push
shlb
pop
movsl
dec
sti
push
mov
arpl
mov
movsb
gs
ja
lods
pop
push
add
lcall
sub
scas
test
xchg
mov
call
bound
in
idivl
xchg
mov
iret
mov
add
add
pusha
or
enter
inc
jg
adc
mov
or
sub
add
out
call
pop
ficoml
mov
andl
dec
dec
in
add
xchg
xor
out
mov
mov
jb
shrl
mov
cmpxchg8b
mov
jno
mov
pop
sbb
mov
movsl
nop
mov
aas
xchg
addr16
rep
movsl
push
mov
cmc
idivl
xor
xchg
pop
data16
cwtl
jmp
sbb
push
rolb
push
dec
lea
or
cmp
lods
mov
mov
sbb
es
pop
in
cmpsb
lret
xchg
andl
push
je
mov
inc
cmpl
loop
jp
xor
int
test
cmp
jbe
xchg
call
mov
aaa
and
or
dec
popa
mov
aas
fcmovnbe
jne
fimull
scas
les
jno
fwait
icebp
roll
mov
push
sbb
add
add
add
add
add
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
cmp
sbb
fisttpll
xor
cmpsl
or
sbb
in
pop
int
int
cmp
popf
or
int
sub
pushf
sbb
in
dec
fstpl
lods
cmp
popf
or
int
fisttpll
mov
js
push
mov
xor
rorl
data16
fldl
lods
ds
add
dec
popa
je
cwtl
sbb
or
cmp
faddl
inc
aad
pop
lods
ret
bound
mov
movsl
pushf
sub
cld
lret
ja
inc
xchg
lods
pop
fwait
loop
roll
mov
add
mov
pop
in
jl
insl
sub
inc
sti
push
or
cmc
or
test
int
std
inc
rcr
loop
add
or
dec
inc
inc
dec
mov
ds
adc
sub
pop
mov
xor
sarb
nop
jb
in
jge
dec
fstpl
cmp
popf
or
int
fisttpll
mov
sbb
in
dec
fstpl
fnstcw
rorl
cwtl
sbb
int
mov
into
jns
sbb
sub
stc
push
aad
mov
cltd
sub
or
fbstp
js
es
push
jnp
mov
xchg
jle
js
jne
dec
std
insl
int
fisttpll
mov
sbb
in
dec
fstpl
lods
cmp
popf
or
int
fisttpll
mov
sbb
in
dec
fstpl
lods
cmp
iret
lret
mov
adc
xor
fs
push
pusha
rorb
aas
jb
xor
mov
adc
mov
pop
mov
or
xor
stos
fimuls
push
jp
dec
out
mov
in
jnp
vmovntps
lock
push
inc
jecxz
fldenv
in
outsl
dec
push
mov
add
mov
pushf
cmp
popa
and
insl
pop
xchg
fldt
dec
test
into
xor
jae
lock
sub
in
sub
repz
ss
xchg
std
test
or
cmpsl
adc
dec
les
in
mov
repz
lret
sub
icebp
testb
jno
inc
lea
fwait
push
xchg
xor
xchg
subl
stos
mov
sahf
add
jb
das
imul
iret
and
mov
jg
push
mov
mov
xchg
jg
jp
stos
outsb
mov
pusha
in
inc
push
pop
fdivrs
pop
jbe
aaa
inc
sbb
inc
iret
cwtl
cmp
out
jmp
aam
sbb
add
rcrb
add
push
inc
in
cmc
mov
or
out
add
sti
pop
cs
jp
pop
jl
cmpsl
lret
mov
pushl
dec
repz
push
cmp
dec
jb
push
mov
pushf
sub
mov
addb
or
sbb
mov
pop
unpcklps
sbb
inc
push
push
cmovne
xchg
loopne
mov
lahf
jg
sbb
ljmp
leave
mov
xor
cli
mov
mov
jae
push
push
imul
jno,pn
in
or
leave
pop
pop
pop
repnz
movsb
or
sub
mov
stc
sbb
adc
clc
aad
mov
cli
repnz
test
test
hlt
fmull
lds
push
dec
lahf
shlb
and
adc
sahf
jo
shrl
xchg
xchg
xlat
adc
icebp
sbbl
inc
in
push
das
mov
pop
jp
pushf
arpl
dec
pop
adc
push
in
xor
fiaddl
cmpsb
stos
pop
xchg
aam
and
mov
xchg
inc
or
sub
jmp
cmp
popa
fs
mov
or
push
repnz
cs
xor
dec
sti
stos
imul
cwtl
sub
sub
inc
mov
repz
jnp
shll
shrl
xchg
push
pusha
arpl
and
inc
iret
test
add
hlt
adcb
xchg
cmpsl
push
aas
into
jge
and
test
sti
icebp
frstor
push
or
sbb
push
out
or
push
js
add
or
mov
jb
andl
sbb
push
xor
lock
mov
push
push
fimull
call
push
adc
loop
insb
sub
sbb
cmp
arpl
iret
sub
pushf
sub
mov
rorl
hlt
sub
add
movsb
sbbb
inc
stos
cli
je
sub
enter
stmxcsr
daa
inc
stos
inc
clc
lret
out
enter
aas
dec
dec
xchg
dec
std
sahf
inc
pop
mov
movsl
mov
and
pop
dec
pop
popa
js
pop
ja
pop
and
int3
add
dec
mov
jns
jae
mov
fmul
imul
shrl
xchg
xor
xlat
dec
pop
orb
cmpb
mov
test
loop
dec
arpl
insl
popf
add
add
cmp
and
je
push
push
xchg
lock
in
lds
inc
xchg
pop
cmc
addr16
popa
push
mov
sub
sub
stos
int3
push
and
push
mov
jmp
imul
popa
iret
lock
test
ud1
cmpsl
add
sub
mov
int3
aad
cmp
popw
sub
fs
lea
imul
test
adc
jecxz
mov
pop
jno
xchg
cmpsl
ret
adc
aas
push
sti
lods
jp
and
into
std
in
or
outsl
push
pop
std
outsl
push
adc
inc
or
sub
dec
popa
shrb
in
iret
lahf
pop
xor
scas
xchg
std
mov
inc
push
mov
outsb
movsl
loop
imul
mov
push
std
jge
mov
iret
imul
rorb
out
js
jg
outsb
gs
push
jo
and
xchg
ret
xchg
and
mov
pop
test
pop
in
xchg
sbb
inc
les
imul
in
leave
inc
out
sub
fstl
shlb
and
sbb
mov
aas
and
adc
pop
xchg
movl
sahf
mulb
or
fnstsw
addl
lds
xchg
jg
in
push
pop
fisubl
and
adc
lods
and
lret
sub
cld
pop
aad
out
je
inc
test
push
out
mov
lods
cltd
xor
push
sbb
repz
push
push
add
pop
aas
ds
sub
xchg
jle
jg
fiadds
mov
lock
add
gs
subl
pop
push
fistl
add
lret
ret
shr
cmp
xchg
ja
mov
and
or
pop
xchg
imul
loope
and
dec
roll
mov
shll
lret
mov
lock
inc
addr16
xor
outsb
adc
adc
loope
clc
inc
jae
out
mov
lcall
cmc
enter
vmulss
lock
cmpsb
jb,pn
fisubrl
mov
push
xchg
push
dec
sub
stos
out
cmpsl
push
adc
xor
mov
push
popa
pop
fcmove
js
pop
adc
lret
inc
js
add
jnp
lcall
lret
inc
jae
fcompl
daa
cli
jp
enter
ret
fxch
dec
add
add
jp
mov
inc
aas
fstp
test
cmp
dec
push
sub
sbb
add
rclb
lock
pop
test
data16
pop
imul
insb
jo
imul
dec
paddsw
pop
lret
sub
inc
inc
push
mov
sub
je
out
je
push
jecxz
test
andl
popa
xchg
sbb
pop
pusha
incb
xor
das
sti
mov
lods
adc
mov
rcr
les
test
call
mov
outsl
dec
aam
pop
lea
mov
ljmp
xchg
clc
pop
or
outsb
dec
mov
dec
mov
lock
sbb
adc
mov
or
clc
hlt
cli
add
out
add
js
jp
jo
push
adc
stos
inc
jle
or
add
in
subl
push
cmp
mov
imul
ja
lcall
pop
out
aaa
fcomps
sub
test
and
mov
xchg
fsubs
leave
popf
ret
adc
jo
stos
mov
outsb
or
loope
or
push
js
adc
inc
incb
shll
mov
or
imul
xchg
cmp
mov
or
dec
push
rcrb
mov
push
cwtl
pushf
popf
inc
push
lahf
call
cmpsb
xchg
lods
dec
add
xor
lock
fisttps
imul
imul
mov
insb
xchg
cmpsb
mul
pop
rclb
jo
sbb
dec
bound
xchg
xor
imul
sub
jb
hlt
mov
xor
push
out
fs
pop
out
les
jno
in
not
sbb
imul
je
or
or
dec
or
imul
lret
fldcw
add
add
je
daa
test
xlat
rcr
add
jb
stc
and
jne
or
ficoms
pop
sub
inc
lock
jno
dec
xor
mov
push
repnz
out
jge
test
and
adc
lahf
lds
jns
es
xor
pop
xlat
std
adc
and
xchg
leave
mov
in
jns
in
push
mov
and
leave
clc
pop
mov
pop
push
add
mov
sub
lods
and
dec
push
sbb
movsb
enter
sahf
xor
cmp
pop
ret
pop
jae
mov
sbb
icebp
mov
call
pshufw
aad
pop
into
mov
pop
loope
mov
test
decb
in
or
xor
sbb
mov
dec
sarb
stc
sub
push
outsb
adc
call
and
xor
cmpsb
incl
pop
xor
test
pushf
pop
push
icebp
ljmp
lcall
cmp
cmpsl
jae
inc
xchg
pop
subb
movb
ds
lea
enter
outsl
mov
loopne
sbbb
sbb
pusha
lahf
imul
stos
dec
mov
xor
shlb
push
mov
cmp
test
add
xchg
mov
pop
mov
cwtl
cwtl
dec
aas
jge
mull
push
ds
sbb
stos
and
lcall
enter
sahf
pop
dec
inc
push
push
dec
mov
inc
lahf
int3
stos
add
cmp
cmp
scas
inc
das
pop
inc
push
jp
mov
bound
push
mov
leave
sbb
cmp
sbb
std
gs
lea
pushf
cmp
push
and
inc
loopne
jo
mov
cmp
inc
adc
filds
loope
bound
repz
sti
ffree
mov
sbb
sbb
cmpsb
call
mov
fnstcw
xor
sub
in
dec
xor
jmp
cmpsb
fucom
sub
sbb
mov
and
in
fwait
mov
ss
push
mov
gs
add
add
push
ljmp
xorl
dec
leave
mov
pusha
cltd
push
dec
jo
xor
rolb
shll
or
imul
jle
lock
bound
mov
leave
sbb
jne
pop
mov
fistpl
pop
push
arpl
jns
or
scas
ret
mov
adc
out
adc
fucomip
movsl
stos
jp
inc
mov
mov
insl
pop
fs
push
xchg
or
ljmp
cltd
mov
std
jge
inc
mov
cmp
loopne
repnz
sub
push
or
imul
xor
test
test
ret
mov
fiaddl
cli
mov
loope
xor
outsb
push
ds
shll
lcall
push
repz
dec
hlt
fadds
scas
scas
jmp
push
lods
cmp
fwait
aam
js
xlat
sbb
cld
lods
jns
ret
lea
int
cmp
pop
rcrl
scas
arpl
mov
mov
pop
das
sbb
outsb
daa
xsha256
cmpsb
shl
xlat
and
mov
dec
push
mov
add
mov
jp
outsl
aaa
or
dec
jge
xorb
cltd
std
outsb
adc
fnstenv
or
adc
addb
add
fs
shlb
pop
pcmpeqd
cmp
adc
js
jl
mov
cmp
ret
or
test
jmp
mov
mov
push
cmp
sbb
stc
rclb
mov
mov
mov
movq
fisttpl
lret
sarl
jns
ds
sub
cmp
and
out
je
xor
cmpsl
jl
mov
es
sahf
dec
pushf
fmull
pop
and
mov
stos
jo
sub
adc
sub
xchg
cmp
cmp
loopne
mov
add
test
fidivrs
sub
xorl
cmpsb
jo
shl
jp
fcoms
outsb
dec
repnz
popa
push
xchg
ss
cmc
imul
inc
mov
or
or
ret
adc
mov
in
pop
mov
test
sbb
repnz
cld
imul
cld
js
mov
inc
sub
inc
or
fbld
pushf
out
test
cmpsb
popf
pushf
js
xchg
dec
shrl
and
mov
ss
inc
sahf
mov
mov
jno
sbb
call
jno
mov
mov
loope
scas
cmpsl
sbb
sub
cmp
js
inc
sti
and
and
scas
je
adc
daa
adc
aaa
sbb
pop
xor
jmp
leave
and
popa
mov
pusha
ja
xchg
in
mov
fcmovnbe
push
roll
sbb
cmp
sbb
rcr
cmpsw
adc
lea
jge
jno
xchg
pop
and
rol
lea
jb
out
adc
sbb
sarb
fnstenv
outsl
dec
jae
xlat
lock
in
and
sarl
or
fbstp
or
faddl
fisubs
mov
rcrb
sub
es
sub
in
xor
mov
leave
jecxz
aas
xor
js
imul
cmpsb
cwtl
inc
sub
jle
adc
mov
add
popa
mov
xor
sti
inc
sbbl
cli
cmp
lods
out
mov
pop
inc
mov
cld
lods
shr
sub
sbb
pop
negb
cmp
pop
jbe
negl
adc
cwtl
lods
inc
sbb
in
xor
mul
dec
mov
jl
ss
xchg
rclb
cmp
inc
xor
ja
pushf
pop
and
push
dec
aam
out
shlb
cs
sub
test
pop
stos
xchg
std
cmp
jnp
repnz
pushw
mov
and
fildll
jns
andb
mulb
leave
addr16
lcall
sbb
lock
sbb
sub
jg
or
adc
mov
imul
pop
cwtl
jl
or
ja
mov
xchg
cmp
cwtl
sarb
shrb
jp
das
mov
loop
roll
in
pop
popf
in
mov
adc
mov
mov
dec
pop
jb
stos
cld
sbb
jecxz
sbb
or
dec
lods
lock
mov
pop
std
jp
sub
gs
outsb
add
jnp
dec
imulb
push
sbb
sub
orl
stc
mov
aad
cltd
adc
add
xchg
add
sbb
inc
xchg
movsb
sbb
push
adc
cmc
inc
cmc
jg
test
fdivrl
imul
test
int3
sbb
es
lcall
sbb
push
leave
outsl
jae
jnp
stos
pop
stos
lods
mov
jb
arpl
lock
push
mov
std
jp
xor
aad
popa
loop
out
bound
aad
xor
mov
test
inc
cs
add
cmc
jns
nop
pop
lcall
fs
insb
dec
es
adc
inc
cmpsl
push
or
mov
pmaxub
xchg
push
testl
aad
mov
jb
ja
pop
sbb
cltd
or
add
mov
inc
cltd
roll
rcrb
push
sbb
cltd
filds
mov
data16
jg
pop
cli
aad
xor
jmp
xor
shl
fnstcw
dec
es
sbb
aam
stos
push
in
fsubr
mov
and
mov
fisubl
pushf
mov
inc
xchg
aad
dec
mov
fsubrs
pop
add
mov
stos
iret
jns
lods
popa
mov
lods
inc
add
cwtl
aam
insb
std
les
idivb
mov
iret
iret
lahf
sbb
sub
xlat
lods
jo
sbb
adc
in
clc
add
imul
mov
lock
and
jl
icebp
mov
fs
mov
bound
fadds
or
xor
push
push
cmp
cli
mov
cmp
dec
sbb
outsb
cmp
movsb
mov
in
cmp
xor
bound
dec
pop
sbb
imul
insl
xor
mov
mov
jb
shll
jne
shll
mov
js
pushl
outsb
ds
adc
cmpsb
leave
subb
lock
mov
rep
cmp
data16
pop
js
mov
in
sub
lods
roll
out
cmp
inc
or
ret
pop
add
outsb
xor
sbb
adc
mov
push
test
sub
sbb
fmul
jno
dec
inc
mov
add
lock
or
xor
adc
push
nop
dec
scas
inc
mov
dec
adc
cli
sahf
jp
es
sti
sbb
add
in
add
jns
push
pushf
cmp
cli
imul
rcrl
pusha
push
movsl
nop
mov
mov
nop
insl
push
mov
int
jo
cmpsb
cs
cs
mov
dec
push
mov
push
test
sub
cmpsb
xor
inc
shll
jl
cmp
mov
aad
mov
jp
mov
lret
mov
lds
ret
push
imul
cmp
mov
mov
mov
sub
or
inc
xchg
enter
movsb
jae
and
loopne
shll
xor
or
inc
data16
and
and
std
pause
jge
outsl
int
cli
sbb
mov
pop
in
pavgb
not
adcl
pop
xchg
scas
sarb
dec
lods
inc
mov
adc
negl
mov
or
or
out
mov
call
sub
stc
sub
test
in
rcr
fsubrp
ficomps
xor
aam
sar
in
std
ret
popf
aas
seta
das
out
dec
jnp
sub
outsl
loop
dec
stos
fistpll
dec
xor
sti
stos
pop
outsl
cwtl
ret
xlat
pop
pop
rorb
xorl
pop
sti
mov
adc
sbb
mov
in
imul
push
int
stos
cmp
jnp
add
xor
cltd
in
insl
mov
xchg
fisubl
push
mov
shll
xor
shll
push
jp
sbb
or
or
mov
test
xor
call
mov
add
in
mov
add
cwtl
negb
pop
and
in
fs
jle
jecxz
mov
mov
mov
icebp
and
enter
leave
xor
xchg
addr16
les
shrb
rclb
movl
inc
lret
adc
test
test
in
lods
sbb
pop
nop
mov
les
mov
mov
data16
xor
div
pusha
sub
mov
sub
mov
rorb
std
stc
imul
mov
lret
cli
adc
push
rcll
rclb
insb
xor
adc
inc
lds
inc
adc
add
fisttpll
mov
mov
adc
pop
pop
les
cmp
loop
or
hlt
mov
pushf
add
mov
inc
in
lock
das
loopne
ss
fstpl
pop
test
adc
test
xchg
aas
push
test
xor
pushl
xchg
cmc
pop
jbe
ss
xor
dec
mov
ret
js
repnz
pop
cli
xchg
pop
push
or
iret
frstor
adc
mov
mov
and
sbb
ja
inc
add
repnz
in
xor
test
jno
xchg
insl
popa
sub
jae
sub
movsb
push
fbstp
jle
or
sbb
ljmp
or
mov
and
test
fiaddl
arpl
inc
cmp
jge
mov
call
mov
xchg
add
bound
sbb
in
lret
sahf
jnp
icebp
cmpsb
mov
ja
lret
fsubr
std
ljmp
gs
fcmovnb
stc
and
icebp
sbbb
daa
jmp
push
adc
movsb
push
jp
push
push
mov
mov
pop
pop
jns
insl
inc
sbbb
pop
out
outsl
iret
cs
js
bound
ja
fsubrs
in
sbb
mov
je
dec
and
insb
std
pop
bound
hlt
pop
mov
fldt
repz
or
inc
finit
arpl
sub
pop
xchg
filds
inc
and
int
sub
enter
mov
mov
jp
xchg
lods
jns
xchg
arpl
arpl
xor
aad
inc
fists
outsl
scas
xchg
xor
mov
pop
mov
pop
inc
aad
cmpsl
test
lods
aas
pop
sbb
lock
out
mov
dec
xchg
idivb
mov
sti
sbb
rorl
rcl
les
add
mov
lret
cli
mov
inc
push
fimull
nop
and
sub
movsl
pop
inc
or
std
push
cli
push
and
imul
mov
mov
sbb
lcall
cmp
mov
ret
sbb
jg
icebp
cmpb
mov
sbb
jl
jmp
push
mov
and
lret
sub
and
inc
push
and
imul
jmp
dec
cmp
xor
cmp
les
rorb
shl
cmp
fbld
js
cmp
mov
cmpsb
mov
pusha
inc
mov
mov
pop
dec
popa
push
pop
movsb
inc
xchg
mov
adc
stc
or
xchg
cld
mov
cmc
js
test
xchg
in
xchg
and
movsl
jecxz
push
lea
and
mov
sbb
add
cmp
sbb
std
insl
int
fisttpll
mov
sbb
in
dec
fstpl
lods
cmp
popf
or
int
fisttpll
mov
sbb
in
dec
fstpl
lods
cmp
popf
or
int
fisttpll
mov
sbb
in
dec
fstpl
cmp
popf
or
int
fisttpll
cmpsl
popf
sbb
adc
addl
inc
adcb
adc
add
int3
push
mov
mov
outsb
mov
cmpsl
dec
xlat
ds
negl
out
pop
cld
pop
out
aaa
daa
into
push
fldl
ja
mov
outsb
mov
cmpsl
push
xlat
daa
testl
and
inc
stos
inc
into
push
pushl
xor
push
mov
jle
pop
mov
into
nop
negl
insb
iret
fbstp
gs
push
int3
xchg
lahf
bound
aad
and
dec
pop
mov
mov
rorb
xchg
jbe
leave
into
fmul
add
inc
sti
and
in
jmp
subb
cmp
jnp
cs
bound
scas
hlt
pusha
mov
outsb
je
mov
out
scas
inc
out
out
mov
fdivs
pop
in
inc
push
adc
in
inc
add
sub
out
or
movhps
out
mov
and
jno
mov
add
iret
push
and
adcl
cli
lret
dec
fidivs
popa
gs
push
jle
jns
dec
cmpsl
push
xlat
ds
testl
pop
divb
daa
xlat
push
cmpsb
inc
mov
repnz
outsb
icebp
pop
loope
mov
test
cwtl
jb
arpl
bound
rcl
push
std
adc
rep
aam
out
mov
mov
jp
bound
pusha
lea
repnz
or
aas
ret
push
negl
out
pop
incb
out
aaa
fisubs
into
push
mov
mov
outsb
mov
cmpsl
dec
xlat
ds
negl
out
pop
incb
out
aaa
fisubs
into
push
mov
mov
jmp
pop
add
sbb
add
cmp
xchg
adc
mov
and
insb
cmc
jecxz
mov
subb
lcall
dec
mov
push
sbb
dec
pop
into
or
int
arpl
cwtl
daa
and
test
jno
imul
nop
test
sti
xor
mov
mov
loopne
repz
ja
int3
jg
subb
or
mov
int
inc
popl
arpl
shll
push
jbe
in
out
sarb
xor
mov
pushf
pushf
repnz
stc
popf
aaa
inc
push
jns
pop
inc
in
push
pop
sub
insl
jnp
imul
enter
xchg
jns
inc
mov
rorb
insl
mov
xor
imul
sub
or
fwait
daa
outsl
and
mov
jmp
jmp
jg
inc
pop
idiv
inc
push
in
sub
dec
or
cmp
pop
pushl
ljmp
and
aad
dec
jne
add
fcoms
cmp
push
sub
pop
dec
mov
ljmp
adc
and
aaa
cli
call
dec
js
sub
mov
dec
pop
mov
rorl
sbb
fcomp
xor
push
push
cli
addb
push
ror
insb
jnp
sbb
in
mov
sbb
and
rcr
sub
cmpsl
out
jmp
pop
cmp
inc
stc
adc
sub
mov
dec
mov
movsb
mov
sbb
xchg
jns
jb
insl
mov
mov
add
mov
xor
jns
lock
clc
lds
inc
dec
cmp
push
cmp
into
xchg
mov
sti
push
jg
outsl
push
adc
cld
inc
dec
adc
iret
add
fsubrs
scas
int3
es
das
rolb
push
rcl
call
test
mov
cmc
mov
gs
and
cwtl
cmc
adc
stos
adc
jle
xchg
pop
mov
jae
mov
sbb
dec
daa
ljmp
xchg
incl
in
push
lret
xor
xor
fnstcw
adc
popf
adc
mov
and
rcrl
sub
adc
aaa
mov
dec
mov
scas
mov
movsl
jmp
int
dec
push
or
dec
fisubl
popf
sbb
sbb
push
jnp
insl
sub
pop
sbb
outsl
mov
call
test
and
bound
imulb
pop
xchg
pop
into
cli
cmp
imul
movsl
pop
fmuls
cmpsb
je
repnz
push
clc
outsl
xchg
push
loop
dec
mov
aaa
and
cwtl
ret
aam
cpuid
mov
das
lahf
or
pop
xor
jb
mov
gs
cmpsl
or
lret
je
out
test
fimuls
lods
jne
in
lahf
sub
or
xor
jnp
xchg
testb
lds
adc
shlb
out
addr16
or
jmp
into
xor
fcomps
mov
dec
dec
lods
sbb
scas
ret
pop
push
mov
es
cli
fdivrl
inc
inc
sub
mov
arpl
push
push
sbb
fs
push
sahf
fsubr
sbb
imul
fdecstp
mov
adc
mov
xlat
pop
enter
sbb
inc
pop
pop
pop
jecxz
push
pushf
inc
test
inc
cld
in
mov
dec
fcomi
jg
pop
sahf
sbb
enter
sub
lea
inc
iret
cld
mov
orb
dec
add
popa
pushf
test
jbe
jp
dec
mov
fldenv
sbb
stos
loopne
dec
sub
mov
inc
int
sbb
fwait
repnz
icebp
jnp
push
inc
aas
pop
sbb
push
cmp
dec
mov
out
inc
lock
push
push
sub
inc
xor
mov
fistl
cs
mov
fwait
dec
pop
or
not
adc
jle
iret
es
xchg
mov
js
cmpsl
popa
into
ret
rcll
cmc
and
dec
push
and
arpl
stc
in
push
and
test
pop
mov
xchg
lret
xchg
in
xchg
dec
mov
das
dec
push
aam
jo
lret
mov
adc
ss
test
push
pop
insb
jle
push
pop
inc
xchg
outsl
loopne
es
das
dec
push
dec
jo
mov
push
mov
adc
xchg
xor
subl
fisttps
xchg
repz
addb
jns
cmp
pop
push
lock
out
loopne
and
cwtl
and
daa
lret
orl
mov
sub
dec
popf
cmp
jl
or
sti
mov
jmp
mov
xor
mov
xchg
mov
cwtl
dec
push
ret
pop
test
lock
dec
fnstenv
aam
jno
jne
ja
xor
inc
lods
je
cwtl
pushf
std
sbb
out
xor
ret
es
dec
jno
enter
outsb
mov
mov
mov
sub
ljmp
mov
insl
mov
inc
test
gs
mov
cmpsb
pop
mov
arpl
cld
cmp
dec
and
inc
mov
mov
xchg
push
dec
lods
int3
cmp
jecxz
push
pop
aaa
jle
and
pushf
mull
nop
out
inc
out
jle
adc
hlt
xchg
bnd
inc
push
loop
lahf
add
lcall
es
test
mov
cmc
and
loop
loop
daa
ficoml
sarb
scas
scas
cmp
cltd
int3
adc
fcompp
xchg
pop
lret
cmp
ja
fistpll
arpl
loope
int3
jns
outsb
sbb
add
shrl
jecxz
or
std
pushf
mov
pushf
sbb
adc
or
adc
adc
push
mov
sahf
jge
push
fwait
loopne
mov
mov
cmpsl
xchg
xlat
cmpsl
dec
fmull
loopne
sbb
test
push
adc
push
and
adc
imulb
movb
dec
jl
cmpsl
icebp
jge
cmp
jae
movsb
jb
push
push
lret
add
ljmp
popa
or
ja
cwtl
aaa
jae
xor
xchg
push
pop
cmpsb
sub
inc
in
inc
rcll
jns
and
movsl
fs
sahf
int3
dec
out
mov
push
mov
out
pop
ljmp
xchg
ret
out
mov
pop
mov
cmp
xor
scas
sbb
mov
shl
movsl
data16
test
xor
stos
xor
and
xchg
aas
mov
sub
mov
sti
push
in
sub
push
scas
movsb
dec
ljmp
mov
inc
cli
subl
pusha
push
jg
jo
pushf
cwtl
xchg
shlb
add
mov
jmp
int
dec
out
push
int3
jb
jno
lret
mov
test
popa
jg
std
sub
mov
jno
mov
pushl
adc
shrb
sti
xor
mov
mov
in
popf
sub
aaa
lahf
add
pop
fisttpl
xchg
inc
sbbl
pmullw
inc
cli
gs
and
cmp
int3
xchg
or
testb
js
ds
xchg
fs
test
dec
xor
mov
movsb
push
insl
or
imul
lcall
mov
into
mov
fnstsw
xor
add
loop
pop
jnp
mov
push
dec
push
fldenv
dec
lea
fstl
xchg
mov
lcall
push
daa
sub
mov
inc
aam
ljmp
cwtl
add
lods
xor
gs
dec
or
fstpt
mov
lods
lock
push
cmp
add
aad
les
xchg
popa
cld
loopne
pop
or
inc
sub
mov
movsb
ficompl
or
das
sub
mov
fs
insl
out
ljmp
test
inc
pop
or
lods
scas
push
loopne
push
sub
pop
sbb
mov
cltd
mov
inc
lahf
cwtl
nop
sub
inc
xchg
loope
cmpsl
push
cltd
pop
cmp
mov
jecxz
jo
into
add
out
xor
mul
mov
in
mov
cmc
and
cli
inc
lcall
cmp
mov
es
aas
or
test
lea
inc
inc
enter
jae
and
les
in
push
jnp
in
mov
and
sbb
cmp
std
divl
scas
pop
pop
outsb
mov
shlb
push
stc
ret
arpl
push
sub
mov
arpl
das
add
sti
test
inc
adc
mov
xor
mov
fmuls
lods
test
dec
sub
imul
or
cmp
cmpsb
sbb
xor
jecxz
out
mov
daa
mov
push
dec
inc
sahf
adc
jbe
shrb
popf
xor
gs
sahf
adc
cmp
push
inc
sbb
push
loop
mov
lret
sbb
loope
lea
scas
mov
mov
xchg
jl
xchg
xor
jecxz
adc
adc
sub
jno
mov
inc
inc
sub
inc
hlt
and
mov
int
movsb
cmp
adc
xchg
lcall
shr
ljmp
jno
stos
es
pusha
inc
bound
scas
add
les
adc
xor
mov
and
adcb
icebp
or
out
sub
adc
jg
sahf
test
push
add
clc
lods
pop
xchg
aaa
mov
insl
mov
nop
mov
lods
out
adc
cmpsl
push
pop
clc
pop
icebp
cmpsl
andps
js
mov
pusha
add
rorl
dec
bound
jnp
or
divl
pop
nop
push
out
addr16
test
pop
xchg
cmp
lahf
push
xor
mov
pusha
in
call
or
mov
or
adc
cmp
pop
rorb
pop
ljmp
push
pop
popa
test
das
or
ret
xchg
add
mov
push
repz
xchg
jl
pop
call
jo
dec
jle
push
dec
orb
loopne
mov
mov
mov
les
pop
xchg
cmpsl
or
scas
dec
aam
mov
outsb
nop
ljmp
and
fs
or
insl
cmc
cmpsb
mov
xchg
jmp
lea
adc
dec
cmpsl
pop
filds
add
mov
add
scas
cmp
sbb
addr16
jns
cwtl
hlt
scas
data16
adc
loope
fnstcw
lret
adcb
clc
into
repnz
ror
mov
xor
xor
jp
add
daa
lahf
fiadds
add
push
loope
imulb
pop
ds
mov
jmp
sbb
in
inc
mov
pop
idiv
jg
fadds
ljmp
sbb
fldenv
cmp
test
pop
fdivl
sbb
mov
into
ror
push
movsl
cmpl
mov
inc
jae
inc
gs
in
inc
push
loopne
cmc
xchg
mull
lret
je
sbb
push
push
jo
mov
sbb
xor
adc
je
mov
test
or
inc
add
and
daa
mov
lea
mov
pop
outsl
int
mov
lds
jnp
jbe
test
mov
cmp
xchg
push
ss
shr
jb
jecxz
push
push
nop
inc
xchg
mov
inc
and
sti
repz
std
test
inc
sub
jo
xchg
dec
and
addr16
add
aam
push
test
inc
imul
clc
in
pusha
push
pop
les
jge
lret
aam
push
insb
push
push
mov
xor
cwtl
sub
sbb
inc
push
add
int
stos
lret
dec
fisubs
cltd
clc
test
push
inc
shl
mov
push
xchg
push
pop
dec
or
pop
je
pop
fs
out
shl
mov
ret
xchg
ljmp
inc
out
aas
stc
dec
sub
out
adc
ret
cmp
inc
xor
sbb
addr16
sbb
cltd
pushf
cmp
xor
dec
mov
jge
sbb
out
lret
jecxz
mov
lods
mov
popa
test
mov
jne
mov
add
lods
aas
mov
loope
jl
and
inc
js
outsl
insb
jae
dec
fpatan
mov
jle
loop
cwtl
jbe
imul
xchg
jnp
mov
jns
push
adc
data16
pop
push
mov
cmp
js
repz
loop
enter
xor
mov
nop
js
cli
jl
and
mov
jbe
rclb
cmp
push
idivb
popf
add
sub
inc
push
mov
dec
fildl
outsb
popa
mov
jmp
xorl
add
loopne
mov
insb
push
mov
aam
or
xor
push
lods
fprem
out
outsl
lods
imulb
fisubs
cli
lods
stos
or
pop
jmp
push
int
lea
cmpsb
mov
cmp
ja
inc
inc
inc
iret
into
fldenv
mov
lds
mov
test
negl
or
push
repnz
xchg
sbb
dec
pop
ja
arpl
pop
rdpmc
je
imul
out
xor
xor
sub
xchg
cmpl
js
add
mov
jns
jns
fsubrl
popf
leave
cwtl
push
sub
fwait
in
aas
push
and
addl
and
popa
mov
push
sbb
pusha
mov
cmp
inc
mov
mov
cs
testl
dec
outsl
int3
out
andl
lods
xchg
outsl
xor
inc
out
xchg
and
inc
mov
scas
mov
or
or
push
adc
in
ret
aad
jecxz
jns
fstpl
xor
cmc
call
mov
test
pop
add
fdivp
adc
mov
xchg
or
jbe
test
popa
sbb
dec
jo
ret
adc
fstl
adc
sbb
outsl
call
add
enter
mov
ds
clc
pushf
es
or
push
mov
pop
cmp
mov
aam
mov
stc
and
icebp
movsl
std
repz
dec
sub
xchg
sbb
je,pn
les
leave
dec
sbb
int3
gs
push
pop
mov
add
or
arpl
push
sub
xchg
jp
mov
dec
insl
add
adc
stos
jo
pop
mov
pop
ffree
pop
mov
movsl
mov
mov
aaa
arpl
mov
movsb
push
sbb
jecxz
loopne
push
mov
data16
bound
sbb
js
std
push
nop
rol
adc
jl
dec
xor
in
jnp
stos
push
or
out
mov
lods
inc
fdivrs
aam
roll
testl
push
push
cli
dec
gs
andb
xchg
cmp
lock
mov
imul
push
stc
cld
and
rol
shlb
incb
dec
sbb
pop
dec
lret
sbb
out
xchg
testb
scas
mov
add
rcrl
adc
pushf
imul
ficoms
xchg
xlat
push
xchg
adc
fcomip
xor
cs
loop
xchg
outsl
or
or
jmp
loope
mov
fidivl
xlat
divl
jle
add
push
loopne
testl
stc
rcll
out
push
jbe
xchg
sub
mov
fcomp
mov
inc
inc
dec
loopew
sub
mov
mov
insl
rorb
shl
pop
clc
lods
cmp
scas
and
inc
or
sbbb
fwait
xchg
xchg
negl
insb
pop
decl
sbb
push
mov
outsl
test
ret
dec
xor
mov
rcll
arpl
sub
test
lret
loop
lret
or
enter
outsb
cli
and
pusha
xor
cmp
mov
lods
inc
nop
and
pop
int3
push
sub
bnd
xchg
jae
mov
mov
inc
push
daa
ss
lock
mov
insb
sbb
pop
arpl
aas
mov
lock
aad
je
into
out
dec
xor
out
push
xchg
rorb
stos
sub
jmp
aaa
mov
sub
xor
push
mov
mulb
aad
add
add
fsubp
adc
add
sbb
xlat
jg
inc
push
mov
out
sub
adc
fadd
jg
xor
adc
ret
es
push
scas
scas
ficomps
mov
pop
cld
fdivl
testb
daa
lret
lahf
pop
ljmp
xor
out
push
loop
stos
xor
sub
pop
cs
adc
lods
popa
adcb
mov
test
cmp
jns
aaa
dec
and
jle
adc
push
cmp
fistl
es
out
adc
sub
push
les
sbb
dec
jle
lcall
inc
or
sti
inc
int
addb
mov
hlt
adc
pop
push
sub
out
mov
mov
xchg
inc
push
mov
inc
inc
fnsave
hlt
lds
loop
enter
lds
popa
mov
mov
pop
sub
bound
inc
imul
mov
adc
inc
pusha
push
dec
stc
jp
movl
cli
adc
jmp
lds
pop
mov
stos
xor
dec
adc
mov
dec
xchg
hlt
lahf
inc
mov
jmp
add
jnp
jb
rolb
add
repz
add
mov
psrad
xlat
adc
ds
pusha
stc
push
push
insl
cld
cltd
sub
or
xchg
enter
pop
pop
fidivs
and
movsl
jns
cwtl
pushf
sbbb
sti
cmp
xchg
cmc
es
or
dec
mov
adc
push
adc
adc
xor
sbb
mov
and
stos
or
pop
insb
dec
pop
push
cmpsl
push
rorb
mov
xchg
xchg
clc
ds
cmp
adc
add
lea
pop
mov
in
cwtl
das
pushf
inc
aad
mov
push
ss
arpl
jmp
and
ret
pop
push
fcoms
cli
or
cld
pop
push
push
mov
dec
xor
int
enter
push
fidivl
adc
mov
movsb
cmp
inc
sarl
mov
outsl
call
mov
sub
pop
out
xchg
test
cmpsb
je
push
xor
cld
push
add
add
mov
fldcw
xor
xor
js
into
adc
jns
or
or
in
and
ficoms
gs
js
andl
hlt
mov
outsl
pop
test
repnz
jmp
stc
fwait
add
sbb
insl
call
add
movsb
mov
ds
dec
ret
andb
scas
je
push
dec
push
out
out
out
call
xor
mov
sbb
ljmp
or
xchg
inc
leave
repnz
adc
mov
lcall
mov
shrl
cwtl
sbb
push
popf
sub
add
cmp
push
push
mov
ja
std
fistl
fcomip
xchg
roll
cmpl
sbb
loope
dec
cmp
lods
cmp
push
in
mov
jl
fdivrl
push
push
out
sbb
stos
jae
cmp
out
repz
in
in
inc
push
mov
dec
movsl
jp
popf
xor
inc
mov
adcl
mov
sub
jnp
mov
mov
ja
lret
hlt
loopne
andl
je
icebp
int
jp
test
and
aad
lahf
dec
mov
sub
movsb
imul
push
adc
loopne
outsb
mov
push
and
jge
adc
jmp
mov
in
or
nop
loop
pusha
jge
push
test
xor
pop
pop
mov
dec
scas
jno
lds
push
sbb
cmp
je
test
xchg
sbb
jle
and
mov
lea
cmp
test
sbb
push
mov
fsubr
adc
sbbl
popa
call
mov
mov
xchg
mov
divl
jb
mov
cmp
out
aas
sahf
pusha
loop
ja
cmpsl
jl
xor
js
and
out
sub
adc
jmp
loope
xchg
shrb
adc
mov
jg
mov
inc
mov
xchg
in
ret
shll
dec
inc
mov
in
xchg
jmp
jno
test
dec
mov
inc
call
gs
test
pop
outsb
loopne
jns
in
sub
pop
inc
aas
mov
sub
bound
sub
jne
repnz
cli
add
loop
sbb
push
shl
push
mov
mov
inc
pop
mov
cmp
mov
jle
push
jmp
hlt
mov
jmp
or
shlb
lds
add
insl
stos
push
mov
pushf
and
add
in
addr16
fcomp
adc
cwtl
mov
inc
cmp
or
outsb
mov
negl
out
pop
incb
out
aaa
fisubs
into
push
mov
mov
outsb
mov
cmpsl
dec
xlat
ds
negl
out
pop
incb
out
aaa
fisubs
into
push
mov
mov
outsb
mov
cmpsl
dec
xlat
ds
negl
out
push
incb
out
aaa
fisubs
iret
push
mov
mov
outsb
mov
cmpsl
dec
xlat
ds
ja,pn
addr16
call
fisubs
mov
popa
lahf
jno
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
jno
push
repz
jecxz
sti
push
in
xor
add
jae
arpl
xor
ret
ds
jecxz
xchg
and
repnz
loop
mov
ret
adc
and
rcll
jecxz
xchg
inc
orl
mov
mov
push
shrb
fisubs
sbb
cs
push
pushf
sub
enter
mov
rorl
es
out
aam
mov
test
sbb
adc
jecxz
mov
ds
dec
data16
out
xchg
arpl
mov
push
sti
push
arpl
repz
scas
loop
mov
sahf
mov
int3
mov
inc
mov
scas
jecxz
xchg
and
repz
das
push
mov
dec
jns
cld
xchg
int3
subb
jbe
sbb
xchg
stos
xchg
cltd
cmpsb
mov
shrb
xchg
push
mov
push
xchg
mov
push
in
aaa
inc
shll
inc
pop
arpl
bound
push
icebp
les
shll
push
repz
jecxz
xchg
pop
adcl
movsb
mov
movsb
jae
arpl
adc
dec
sbb
mov
dec
andl
repz
mov
cmpsl
and
sti
xor
bound
roll
shll
and
out
push
mov
rclb
mov
push
push
lcall
popa
xchg
and
repnz
loop
shlb
arpl
xor
ret
push
repz
jecxz
xchg
and
repnz
loop
shlb
arpl
xor
mov
pop
pop
jb
mov
or
mov
mov
add
cmp
sbb
cmp
jbe
sbb
add
fs
pop
pop
sbb
and
sahf
adc
rorl
inc
lahf
imul
and
test
in
stos
cld
and
fstpl
sub
es
or
push
iret
cmp
sbb
mov
jmp
mov
test
or
adcb
insl
inc
xchg
movb
lods
pop
push
push
inc
sbb
int
push
cmpsl
mov
mov
adc
ja
push
pop
lods
pop
lds
shll
xchg
mov
ljmp
cwtl
push
dec
lahf
shrl
jp
shr
mov
pusha
insl
mov
rclb
ja
jl
xor
and
push
out
sarb
adcb
add
push
into
ja
pop
and
mov
lahf
in
popa
mov
fsts
mov
push
cmpsl
cli
cmpsb
es
push
add
cmp
adc
pop
inc
xchg
or
popa
or
mov
xchg
cs
mov
aam
outsl
sbb
pushf
pop
mov
xchg
sbbb
xor
xor
add
push
outsb
repnz
imull
lret
xor
mov
aam
xor
hlt
adc
ljmp
dec
inc
dec
pop
in
and
inc
xor
jno
pop
cmpb
xchg
test
xchg
add
xor
sub
sub
xor
out
sub
dec
xchg
jle
inc
imul
ja
adc
mov
jle
div
lret
push
in
jnp
inc
dec
lret
cmp
in
cmp
jp
dec
repz
mov
mov
jae
xor
push
sub
mov
sarb
dec
loop
push
jo
mov
iret
cmp
sbb
cmp
cld
int3
xor
orb
jle
mov
in
lret
mov
pop
ret
out
inc
inc
jns
loope
or
lods
push
jbe
repnz
int3
rep
xchg
sub
mov
test
push
lret
icebp
enter
mov
insb
movl
mov
fcoms
insb
jne
addb
sub
sbb
cmc
push
cmp
fldl
add
and
cmp
subl
arpl
push
sub
mov
fwait
cmp
or
ds
inc
les
push
sub
mov
fcmovb
push
inc
ret
test
mov
fnstsw
aad
mov
sarb
fcmovu
call
mov
jp
dec
negb
sub
les
push
in
popa
push
shll
pop
out
push
pop
add
mov
mov
pushf
jp
subb
rcrl
dec
xchg
and
test
rorb
outsb
xchg
jne
in
mov
mov
nop
jnp
fildll
icebp
mov
leave
idiv
xlat
mov
divb
jnp
pusha
sub
int
insl
arpl
dec
mov
pop
sahf
jno
loop
std
mov
popf
or
sub
out
push
inc
outsl
add
pop
push
xor
xor
push
data16
repz
sbb
data16
out
cmp
mov
fsubs
inc
add
scas
and
daa
lcall
jo
inc
aas
out
adc
mov
loope
sub
jne
add
mov
ss
mov
add
imul
sbb
std
ss
out
xor
testl
cmp
inc
cmovbe
add
or
cmp
outsb
xchg
movsb
fsub
iret
mov
out
sub
cmpb
add
add
nop
fldenv
pop
fidivrl
mov
daa
scas
test
jecxz
jbe
xchg
sbb
xchg
ret
lds
pop
cwtl
les
sbbl
mov
outsb
mov
stc
mov
ret
arpl
decl
push
es
aas
rorb
testl
ss
and
inc
jne
xchg
test
mov
test
inc
mov
int
fistps
js
in
inc
in
cmp
cld
mov
or
jb
stc
ret
mov
push
out
jmp
push
xor
sahf
cltd
outsl
subb
fs
addb
fidivs
aad
or
fisubl
testl
pop
gs
add
dec
out
repnz
mov
outsb
sahf
popl
cltd
xchg
test
int
adc
test
insb
ds
dec
inc
sbb
mov
js
jne
and
xor
sbb
gs
cmp
scas
or
enter
test
and
lcall
mov
mov
lea
arpl
lret
lea
fcmove
sbbl
inc
into
iret
push
cmc
cmpsb
mov
pushf
push
adcl
or
pop
leave
inc
mov
pop
mov
scas
push
icebp
in
and
outsb
shr
fiadds
add
dec
addr16
nop
and
sub
pop
mov
xchg
adc
jb
inc
inc
sub
outsb
mov
leave
mov
pop
rorl
loopnew
cmp
adcb
lock
adc
mov
inc
push
jge
xor
mov
adc
jnp
iret
sti
scas
jnp
add
ret
cltd
lcall
inc
xchg
mov
pop
fxch
xor
into
jbe
cmp
mov
movsb
out
in
rorb
cmp
fstl
mov
addl
dec
shlb
pop
jle
or
in
pop
cmpb
popl
fstpt
sahf
sarb
mov
or
pop
leave
cli
sub
add
pop
inc
mov
popa
push
loop
xor
jnp
mov
stos
stos
cmp
test
nop
movsl
es
inc
movsb
adc
sbbl
mov
and
sub
pop
aas
cwtl
xor
shrb
mov
shlb
cwtl
mov
jmp
icebp
shrl
mov
cwtl
xchg
dec
lods
push
stc
punpcklbw
xchg
jp
gs
int
inc
xchg
je
imul
outsb
inc
cmc
add
stos
ja
pop
movsl
push
fcomps
lret
push
inc
jnp
aad
jmp
std
gs
rcll
cs
cmpsl
sbb
adc
add
stc
add
jne
mov
sarl
sbb
loopne
ficoms
ret
or
aaa
fstpl
mov
and
xor
aad
mov
cmp
lods
mov
sub
pop
dec
sub
pop
xlat
xchg
aas
lret
add
fisttps
pop
out
push
aaa
loop
popa
lds
sbb
cmp
mov
jns
add
push
fiadds
jo
or
inc
xor
out
mov
enter
push
fstpt
adc
out
ljmp
fcmovbe
adc
ficoms
cli
xchg
cmpb
jp
cwtl
jo
mov
pop
lret
jl
xchg
ficoms
into
addr16
push
lods
add
jo
sub
aam
hlt
cmp
xor
loop
mov
arpl
lret
adc
xor
or
inc
pusha
sahf
lea
push
xchg
popa
inc
jnp
insb
mov
fnstenv
mov
push
ds
push
aas
idivl
stc
sarl
xchg
in
cltd
jecxz
imul
mov
fmull
sub
and
cmpb
stos
jmp
inc
adc
xchg
xchg
aam
outsb
adc
lcall
inc
cmp
jo
and
mov
inc
mov
or
mov
iret
dec
dec
mov
mov
xor
ret
and
test
cmp
inc
fs
xchg
cmp
mov
xchg
imul
inc
mov
mov
or
inc
add
xor
iret
sbb
rcrb
test
or
push
and
and
xor
mov
leave
lret
sbb
jle
sub
ljmp
adc
and
dec
jmp
shll
test
jg
iret
cmpsl
or
mov
mov
xchg
inc
xor
js
push
adc
add
clc
dec
das
sbb
mov
cmp
jecxz
pusha
and
mov
fstps
es
iret
push
lea
aaa
fninit
lahf
add
call
xchg
jnp
pusha
push
test
divl
je
mov
push
xlat
insb
jbe
bnd
mov
cld
fdivs
mov
xor
mov
inc
rcll
jge
rorl
push
mov
loopne
std
sub
lods
call
js
add
outsl
sub
add
add
inc
aad
fnop
cltd
jne
jae
sub
push
scas
aam
inc
fs
sbb
rcrb
arpl
cmp
push
or
lods
jns
inc
imul
mov
add
jnp
push
lods
movsl
pop
jb
sbb
push
sub
icebp
cmp
pop
ds
inc
rcr
js
sub
dec
repnz
in
xor
mov
mov
adc
and
mov
inc
inc
fnsave
xor
inc
clc
mov
stos
and
hlt
jnp
fwait
roll
inc
pop
mov
fldcw
test
xor
jg
dec
aam
pop
int3
push
dec
dec
repnz
repz
mov
shr
mov
xchg
call
xor
rorb
gs
int
fldt
fsubp
stos
cmc
inc
decb
push
cli
ss
mov
push
movsb
idivb
ljmp
lock
add
push
cmpsl
push
repz
out
hlt
inc
loop
jle
js
rolb
ljmp
mov
pop
jbe
out
xchg
mov
push
insl
mov
cltd
sahf
fs
std
jmp
mov
jecxz
jp
or
mov
and
shrl
decb
imul
dec
xchg
sub
imul
xchg
insb
repz
inc
imul
or
stos
fdivl
lock
sti
outsb
push
fscale
mov
jecxz
jbe
data16
pop
mov
ret
dec
add
pop
call
fmuls
enter
out
mov
movsb
fucomip
push
sahf
push
cli
addr16
jbe
xchg
xor
dec
mov
mov
mov
jmp
push
push
mov
mov
adc
sar
repz
mov
push
in
xlat
push
stos
fxch
and
mov
sbb
add
push
into
stos
push
gs
push
pop
imul
push
jecxz
cltd
fcoml
lods
aad
xor
sti
inc
mulb
je
mov
push
dec
add
popf
cwtl
adc
scas
das
int
mov
sbb
inc
lea
fimull
ret
push
or
add
lcall
push
cmp
push
test
mov
xchg
push
fildll
and
inc
popf
or
adc
sub
test
fwait
insl
sub
add
mov
add
xor
dec
pop
in
not
add
jnp
shll
sbb
xchg
pop
jnp
in
in
pop
pop
enter
sub
sar
lods
push
dec
aas
sub
fadd
dec
sbb
mov
add
out
arpl
inc
aas
sbb
add
sub
xchg
add
bndstx
adc
push
inc
push
das
pop
dec
outsb
mov
imul
out
jmp
lcall
jo
lds
je
xor
mov
mov
add
jecxz
mov
insb
adc
data16
bound
cli
pmaddwd
mov
sbb
imul
sbb
sarl
add
sbb
xchg
and
aad
iret
push
mov
adc
idivl
test
ljmp
insb
mov
jns
add
mov
add
movsl
out
mov
lcall
mov
outsb
push
rcrb
fwait
rcrb
push
pop
lcall
stos
call
ljmp
push
and
ss
mov
fidivs
push
pop
cmp
dec
insb
push
mov
push
fstps
fdivrl
mov
jnp
fnsave
or
je
sahf
das
les
dec
js
leave
sbb
fidivs
aam
andl
leave
jae
jo
icebp
shrb
je
xor
es
add
jo
lods
dec
xor
scas
mov
call
xor
cmp
sub
xchg
in
leave
popf
push
push
cmpsl
xor
xor
test
mov
push
nop
jbe
lret
add
cmpl
jecxz
sbb
aaa
in
inc
daa
test
jle
movsl
push
and
imul
sbb
inc
pusha
cltd
gs
fistpl
mov
sar
push
rorb
mov
movsb
shrl
push
cmc
cmp
fistps
and
mov
shr
inc
mov
fistpl
fwait
push
fnsave
push
dec
in
pop
cmp
inc
pop
mov
xchg
lock
ret
sahf
sbb
add
je
mov
xor
loope
pop
push
and
mov
into
jg
inc
xchg
popf
dec
push
les
sbb
stos
sub
stc
xor
pop
xor
adc
cmpsb
mov
stos
xor
cltd
lea
addl
rcll
cmp
jo
in
jnp
js
xchg
shll
and
pushf
jns
adc
ffreep
orl
lret
mov
lods
jg
mov
inc
gs
mov
mov
mov
into
mov
sti
jb
enter
ljmp
mov
aam
dec
add
fs
mov
push
pop
jae
aaa
jmp
push
dec
jl
fistps
movsb
fldl2e
or
scas
lock
rcll
mov
lds
cmpsb
sub
repnz
push
es
int3
repz
outsl
sub
mov
out
aam
inc
jo
sub
dec
pop
scas
addr16
sub
outsb
pop
mov
xor
xor
mov
jne
stc
mov
in
xorb
stos
adcl
fidivs
lret
mov
sbb
add
jbe
xchg
rcl
xor
dec
std
sub
mov
fbstp
shrb
and
xchg
scas
adc
jnp
add
ret
out
cmp
jo
pop
daa
sub
scas
xor
dec
rcll
jno
xor
mov
jp
int
adc
es
test
js
jecxz
pop
and
aam
mov
xchg
loopnew
and
push
leave
add
push
ljmp
bound
scas
rclb
add
lds
lret
mov
loopne
fs
mov
dec
inc
adc
lods
std
imul
or
xlat
xchg
addr16
int
or
mov
inc
pop
inc
inc
pushf
mov
and
adc
cli
nop
push
aas
das
into
xchg
jbe
inc
jge
xchg
std
movsb
lret
and
int3
sbb
iret
mov
push
xchg
movsl
imul
sbb
and
ffreep
inc
divl
outsb
test
lods
pop
jno
xlat
mov
sub
movsb
xor
inc
and
cmpsb
pop
and
sub
cmp
aaa
cli
jecxz
es
stos
into
sub
push
mov
push
xor
mov
mov
dec
pop
xchg
jp
shl
imul
ret
adc
inc
push
push
jo
mov
sub
cwtl
aaa
push
cmp
add
xchg
adc
and
pushf
adc
inc
or
es
pop
popf
divb
or
xchg
or
out
xchg
testl
inc
dec
test
movl
fcmovb
js
sbb
jecxz
testl
test
push
push
fnstsw
adc
iret
andl
popf
dec
xor
test
pop
out
cld
mov
cmpsb
dec
icebp
jne
cwtl
cli
adc
repz
pop
inc
adc
stc
push
into
or
subl
nop
push
aaa
and
and
push
outsl
inc
sub
in
dec
les
addr16
fnstcw
push
and
jnp
and
push
aad
xchg
and
pop
iret
pusha
pushf
pusha
xor
test
push
cmp
mov
jecxz
and
bsr
xchg
dec
incl
pop
aam
mov
inc
lea
fwait
mov
xchg
mov
popa
adc
xchg
or
adc
aas
xor
jl
sbb
mov
mov
or
add
bnd
in
loop
dec
cmc
xchg
push
popf
cmp
add
lret
pushf
mov
add
nop
inc
lock
scas
jns
sub
lea
sub
mov
pop
mov
scas
mov
add
mov
pop
and
lods
clc
imul
hlt
mov
data16
rclb
jle
das
sub
mov
fmuls
adc
cmpsb
cmp
cld
push
add
inc
loope
sbb
xlat
js
push
test
jecxz
jp
inc
les
xlat
cs
push
xor
lahf
or
mov
subl
std
xchg
dec
mov
out
sub
push
cltd
adc
xchg
rolb
pop
jns
imul
mov
test
mov
jecxz
lret
scas
fmul
sbb
aaa
lds
dec
jmp
arpl
jl
popf
ds
adc
int
xorl
cmp
mov
adc
adc
testb
add
mov
lds
or
dec
stos
inc
inc
aam
rolb
rorl
cmp
adc
mov
movb
lret
push
ror
test
inc
cmp
clc
inc
push
mov
lahf
sub
data16
inc
sub
xor
cmp
icebp
lods
dec
sbb
ror
jo
aam
pop
xchg
sub
rcrb
cmp
out
xor
cli
cltd
xchg
rol
cli
and
lea
add
ret
add
pop
or
dec
mov
out
lret
ja
js
into
mov
shlb
je,pt
mov
push
push
push
ljmp
lea
cmp
in
insb
jmp
mov
jmp
stc
xchg
scas
jl
adc
sbb
xor
lea
cli
push
or
pop
jae
push
repz
jno
push
outsl
repnz
push
and
popf
pop
inc
mov
pop
jnp
jecxz
xchg
sbb
pop
aam
dec
aas
sub
cld
and
dec
mov
xchg
scas
xchg
pop
pop
pop
adc
fldt
pusha
iret
xorl
jo
in
sub
es
push
push
xorl
inc
insl
jle
rcrb
add
mov
jg
mov
sub
cltd
ljmp
cmp
mov
enter
mov
xchg
js
pop
test
dec
stos
sub
dec
call
or
sbb
push
mov
pop
or
sub
xchg
adc
mov
inc
inc
les
push
sub
push
inc
cltd
or
jecxz
sbb
and
inc
cmpl
mov
jmp
mov
dec
adc
and
and
shrb
push
xchg
mov
ljmp
sub
hlt
aaa
es
xor
lea
sbb
adc
test
fdivs
rolb
pop
adc
mov
jo
and
ja
xchg
fdivrp
ja
lcall
dec
nop
rcrl
xchg
and
inc
mov
xchg
jp
aaa
stos
mov
xor
cmp
rcrw
ss
out
jae
or
mov
push
movsl
movsl
fsubrs
leave
in
aam
cld
xchg
or
pop
lret
add
xor
cmp
pop
and
and
mov
dec
test
push
cmpsb
mov
out
xor
cmp
cmp
xor
test
push
cmpsl
stos
pop
lods
fcoms
cli
jne
fucomip
js
cmp
std
stos
xchg
shl
lahf
out
sub
int3
maskmovq
mull
data16
aam
mov
js
aaa
scas
sbb
adc
out
push
xor
lods
sarl
and
fmuls
dec
pop
jae
cmp
movsl
fcomip
mov
cmp
je
enter
cmpsl
mov
pushf
sbb
mov
sub
cltd
out
out
jne
inc
insb
dec
test
lret
cmp
enter
mov
sub
jmp
data16
xchg
mov
loop
fmul
pop
sub
push
push
ljmp
jnp
xor
sahf
mov
and
dec
xorb
sti
inc
pop
xchg
lsl
scas
mov
out
or
lds
lret
add
mov
push
shl
hlt
cmpsl
sbb
popf
pop
sub
in
lcall
jle
xor
push
push
jo
cs
lcall
gs
test
add
pop
cmp
and
mov
dec
enter
and
test
adc
xchg
and
repnz
loop
shlb
arpl
xor
ret
push
repz
jecxz
xchg
and
repnz
loop
shlb
arpl
xor
inc
xor
jecxz
xchg
and
adc
loop
and
arpl
xor
sarw
ret
or
xor
andb
jae
adc
fwait
sub
insl
int3
jge
ds
je
inc
aad
lds
loope
lret
and
jnp
mov
push
hlt
inc
movsb
xor
xchg
add
je
push
lds
adc
out
jne
mov
xor
xchg
add
pop
aad
lds
xchg
add
test
mov
inc
divl
add
or
enter
in
popw
imul
shlb
dec
std
mov
stc
movsl
inc
les
dec
lret
pop
hlt
cltd
fisttpll
cmp
inc
sbb
jecxz
push
loopne
xor
loop
cs
xchg
or
out
or
pop
xor
push
add
or
aam
roll
mov
mov
jl
aad
inc
pushf
jo
stos
mov
jmp
and
push
and
je
hlt
pop
adc
add
in
xor
shrl
mov
or
push
test
sbb
cltd
jle
cmpsb
in
aas
add
mov
je
push
aad
fs
add
inc
aad
lds
or
fcoml
inc
mov
adc
adc
and
pop
in
lock
nop
sbb
or
cmp
pop
loope
icebp
pusha
fs
scas
and
push
xchg
push
rcrb
push
xor
or
pop
dec
hlt
pusha
xchg
imul
push
mov
fnstenv
in
hlt
les
inc
movsb
xor
xchg
add
inc
aad
lds
adc
in
hlt
les
inc
movsb
xor
xchg
add
sbb
jo
pop
test
cmp
out
mov
inc
shr
adc
adc
sbb
xchg
and
push
mov
fisttps
in
lea
xchg
test
jmp
loop
in
test
movsl
ds
stos
mov
adc
insb
lock
adc
push
jmp
lret
mov
lods
xorb
pop
add
sbb
fadds
push
hlt
lahf
pop
mov
sbb
jns
stos
or
ja
pop
mov
fucomp
mov
add
mov
mov
sbb
dec
add
mov
lock
sahf
aas
stc
inc
ja
jge
inc
mov
repnz
inc
jmp
in
dec
and
sub
mov
cmp
jno
or
pop
adc
sbb
xor
les
pop
dec
mov
sbb
insb
sti
inc
fistl
lcall
or
jp,pn
cli
stos
pop
faddl
lret
jb
mov
dec
pop
rcl
fcmovne
dec
push
cs
nop
mov
mov
dec
and
adc
pusha
fildl
out
lea
frstor
mov
jno
stc
adc
icebp
mov
ljmp
mov
mov
push
rcrl
adc
cmp
repnz
rclb
and
pop
test
test
mov
stos
xor
fwait
add
push
sbb
cmpsb
jmp
adc
stos
int
out
test
iret
xchg
push
popa
stos
lret
mov
lret
cmc
mov
mov
cmp
mov
aad
shr
sbb
xlat
pop
lock
in
mov
lahf
stc
jg
insl
fdivrs
xchg
or
bound
push
cmp
lahf
inc
cmpsb
incb
push
push
or
or
jno
xor
mov
nop
jne
mov
mov
inc
stc
mov
lea
mov
ret
inc
dec
pop
out
sti
jecxz
ja
aam
loope
or
inc
add
adc
fcmovbe
arpl
mov
inc
lret
push
pop
mov
xlat
je
xor
rcll
jne
push
xchg
test
fildll
dec
ret
call
add
insb
jge
mov
sub
movsb
insb
inc
mov
pop
add
lods
mov
loopne
push
sub
fdivp
fs
adc
in
stc
icebp
inc
jle
in
scas
cmp
stos
fcmovnbe
outsl
ds
mov
add
imul
push
mov
pushf
push
mov
sub
push
fsubl
xor
cli
js
or
cmp
push
sti
sbb
adc
inc
sub
icebp
shll
pusha
sbb
fwait
push
pop
pop
adc
aam
sti
inc
push
add
pop
add
sub
out
push
lock
cmp
jbe
outsl
addr16
in
cmpsl
sub
dec
daa
mov
in
testl
xchg
mov
inc
mov
xchg
fdivr
push
dec
nop
cmp
fdivrs
sbb
xchg
mov
sbb
dec
cmp
add
dec
jp
divl
or
xor
add
test
stos
jmp
sahf
xor
add
pop
repz
adc
add
lods
inc
dec
cltd
in
out
cmc
push
aad
pop
jp
stos
loopne
das
ret
xor
movsl
cmp
imul
shrl
pop
imul
lret
mov
pop
jg
push
pop
mov
push
mov
inc
cltd
pusha
mov
test
mov
dec
inc
rdmsr
rcl
lds
xor
mov
insl
xor
push
mov
loopne
sub
cmpsb
dec
jecxz
dec
aas
push
pushf
or
mov
or
push
rorl
pop
sub
mov
mov
cwtl
xchg
xchg
jmp
lods
xchg
or
sbb
test
jp
iret
test
or
jno
pop
pop
jo
inc
hlt
out
xor
cmpsl
jge
pop
cmp
sub
enter
mov
out
popf
int3
inc
mov
cltd
ja
lret
mov
es
push
mov
push
or
in
arpl
pushf
cmp
repz
sbb
mov
cmpsl
test
daa
lds
sub
aaa
xchg
mov
bound
inc
sub
pop
cltd
cld
push
js
and
and
call
jmp
jp
mov
lahf
mov
subl
cli
adc
inc
xor
sbb
and
idiv
in
lods
xchg
and
cmpsl
adc
stc
fcomps
int3
icebp
lods
clc
push
dec
xchg
data16
fists
lods
mov
hlt
and
or
clc
or
ja
test
push
jb
out
test
mov
and
adc
dec
cmp
ds
outsb
stc
js
bswap
push
pop
sub
leave
adc
push
adcl
frstor
incb
inc
cmc
xchg
mov
jl
lcall
out
fwait
gs
cmp
fsubrp
jo
ljmp
call
sahf
mov
fstps
les
xchg
cmp
jae
inc
add
push
rorb
push
mov
mov
sub
mov
dec
stos
nop
add
jmp
adc
fstpl
ja
rcrb
push
sub
cltd
out
popa
mov
sbb
in
orb
mov
pop
mov
jo,pt
cmp
stc
xor
xchg
aaa
sahf
dec
leave
push
inc
xchg
cmp
lret
je
pop
popa
enter
sbb
jns
push
push
out
adc
std
call
ja
pop
mov
sub
iret
mov
scas
call
outsb
icebp
xor
addr16
lds
lods
adc
dec
aad
aam
or
mov
inc
cld
xor
mov
fidivl
je
in
and
icebp
aad
mov
ds
inc
push
or
aas
sub
xor
xchg
pop
push
push
loopne
cld
ljmp
cmp
push
fiaddl
loope
rolb
out
mov
cwtl
cmp
repnz
mov
lods
pop
insb
rorb
out
mov
sub
jecxz
call
dec
sbb
mov
repnz
sbb
or
mov
pop
add
rolb
pop
or
std
and
popf
bound
dec
and
rep
xchg
rcl
push
dec
stos
jmp
negl
call
jmp
jne
sbb
dec
and
rcrl
xor
pop
jmp
adc
xchg
lock
ja
pop
inc
sbb
test
ss
call
iret
or
lock
fildll
imul
and
sbb
pop
repnz
xchg
xchg
rolb
adc
xchg
stos
cmp
jno
sub
clc
xchg
movsl
pusha
pushf
jno
inc
cmp
mov
mov
xor
lds
sbb
shlb
enter
scas
imul
push
adc
pop
cld
push
pop
aad
lods
jno
jae
test
addr16
test
inc
pusha
push
adc
xor
cwtl
or
jns
jo
sub
adc
pop
pop
shr
lock
call
mov
das
in
fbld
push
xchg
xor
out
test
mov
sti
in
test
imul
js
and
xor
push
mov
jo
rolb
pusha
pop
cmp
mov
outsb
cmpsl
add
sub
push
mov
movsl
mov
repz
inc
and
and
add
sub
push
pop
mov
fxch
je
cmp
fistpll
ret
push
xchg
aad
das
out
out
rcl
push
xor
add
call
jp
sbb
cmp
fdivr
xchg
or
pop
xchg
fnstcw
jo
pop
add
mov
mov
add
fidivrs
pop
xchg
sub
stos
pop
and
rcrb
adc
fs
cmp
jmp
iret
mov
icebp
and
xchg
repnz
and
xchg
xchg
push
dec
jg
lds
scas
jmp
clc
int
insl
push
sbb
je
xchg
cmp
or
cwtl
das
or
mov
mov
leave
adc
cmp
hlt
idiv
add
jg
lea
jne
mov
out
adc
loopne
cmp
popf
arpl
or
jmp
lock
sti
mov
enter
jb
mov
mov
aas
lcall
fsubs
cmp
inc
loop
in
out
cmp
leave
ror
mov
sbb
jnp
pop
jge
ds
xor
inc
dec
iret
fwait
sub
call
jbe
mov
inc
xchg
into
data16
hlt
xchg
movsb
ja
xchg
mov
xchg
pop
loop
fadds
outsl
cwtl
jecxz
add
rdmsr
icebp
mov
int
cli
movsb
xchg
clc
in
push
ret
push
outsb
cwtl
pushf
gs
and
or
mov
xchg
sbb
pop
push
ret
fcoml
pop
cld
in
sbb
sub
cwtl
test
cmpb
pop
movsl
inc
jl
mov
test
mov
adcb
cmp
cmpsb
out
popf
lret
xchg
shr
adc
xor
mov
sbb
mov
push
sub
loopne
push
lds
mov
lret
jnp
cmp
dec
and
test
stos
bound
test
pop
mov
jnp
pusha
imul
sbb
aam
push
shll
int
mov
lret
test
loopne
ja
dec
rorb
jne
je
call
xorb
add
push
shlb
fidivs
jne
fs
xor
pop
ds
pop
inc
and
push
orl
mov
inc
xor
stos
sbb
pop
daa
jp
fldl
in
movsl
je
mov
cmpsb
cmp
fsub
jp
lahf
mov
mov
dec
and
lods
int3
cld
cmp
pop
xchg
cld
testl
test
std
inc
clc
sahf
lods
mov
inc
xchg
jb
mov
cmp
mov
xor
cmpsb
pop
sbb
loopne
std
outsl
pushf
data16
xor
sbb
xor
cmpsl
aad
mov
pushf
xchg
movsb
aas
mov
iret
clc
popf
aam
mov
pushf
push
movsl
adc
outsb
adc
jmp
leave
pop
loopne
ds
and
inc
leave
adc
insb
mov
pop
jge
jae
sbb
mov
js
fdivl
mov
xchg
ljmp
inc
pusha
xchg
out
jle
and
scas
dec
lods
in
gs
lods
rorb
cmp
xor
and
mov
push
jae
adc
aaa
test
int3
add
dec
or
hlt
sub
jg
add
das
xchg
xchg
sarb
cmp
sbb
xor
repz
push
mov
hlt
adc
mov
pop
rol
cmpsl
daa
test
and
aad
mov
ret
iret
ret
adc
outsl
cmp
jns
sarl
popf
mulb
xlat
addr16
stos
addr16
fdivrl
pushf
mov
mov
push
mov
xor
inc
rcrb
add
pop
mov
inc
lods
aas
or
cmp
push
incl
pop
addr16
adc
loop
pushf
mov
cltd
in
ljmp
cli
call
rolb
js
ljmp
or
mov
cmp
cmp
jge
imul
test
and
lock
mov
sbb
arpl
iret
sbb
fwait
mov
jne
mov
xor
dec
test
adcl
cmp
cmp
leave
fcompl
sbb
int3
cmc
mov
add
xchg
inc
pop
lcall
dec
and
push
dec
inc
xchg
aad
fs
sub
hlt
dec
fldt
mov
add
adc
jge
xchg
imul
xchg
xchg
xchg
sub
pop
movsl
cmp
into
lea
and
mov
sub
in
outsl
mov
pop
sub
jecxz
sub
jle
mov
dec
jns
sbb
int
cli
mov
jb
pop
inc
jle
xchg
sub
or
jne
or
test
shl
mov
sbb
push
push
fimull
pop
outsl
test
mov
ret
mov
push
jne
sbb
std
mov
dec
mov
cmp
ret
gs
cmp
fidivl
dec
pushf
aas
xor
push
xchg
out
mov
or
loope
cmp
fdivr
addr16
push
push
f2xm1
cs
cmp
imul
cwtl
jnp
xchg
adc
lcall
sbb
mov
cmpsb
xchg
bound
mov
icebp
jle
sub
mov
test
fs
xor
xchg
mov
sahf
inc
jge
and
test
fdivr
leave
addr16
inc
dec
repnz
and
test
mov
sarl
and
sub
dec
mov
pop
jp
dec
jl
push
inc
and
jge
xchg
fwait
cmc
pop
rolb
aaa
js
or
pop
jl
pop
mov
sbb
idivl
arpl
ret
jg
inc
outsl
jecxz
insb
jle
out
add
cmp
sbb
into
dec
call
xor
mov
filds
xlat
push
aaa
aad
out
xchg
and
pop
cmp
mov
sub
enter
jbe
popf
out
mov
dec
rcr
add
fcmovb
inc
mov
sbb
or
loope
ljmp
aam
pop
xchg
cmp
es
push
push
in
aam
js
repnz
fwait
inc
adc
xchg
push
or
bound
fxam
idivl
pop
into
push
nop
pop
popa
test
add
call
lcall
stos
divl
push
and
sub
cs
out
jg
int
ss
loopne
mov
dec
int
pop
mov
enter
or
fdiv
mov
dec
stc
es
adc
sub
cmpsb
mov
mov
dec
movsb
cs
jle
cltd
enter
in
stos
out
les
js
mov
xlat
sbb
mov
mov
and
test
mov
xorb
ret
aam
call
imull
pop
add
sbb
pop
push
xchg
aaa
sub
pusha
mov
xchg
xchg
inc
out
mov
popf
xor
mov
xor
jl
dec
jg
pusha
push
dec
loope
push
je
out
daa
fs
mov
fisttps
insb
add
xchg
inc
xor
movsl
add
inc
ret
scas
adc
in
xchg
mov
enter
sub
adc
push
push
adc
cmpsl
xor
imul
iret
xchg
sub
testl
ret
fisubl
in
pop
stos
out
cmp
and
arpl
and
push
fdivrp
ja
push
pop
repz
int3
rcll
add
rclb
xor
sarl
test
icebp
add
repz
outsl
repnz
xor
inc
in
sarb
in
mov
xchg
mov
sahf
movsl
adc
test
mov
in
fninit
dec
mov
jb
sbb
adc
nop
pop
into
call
icebp
jg
add
addr16
push
in
aas
loopne
cmp
add
daa
inc
push
mov
xorl
out
ds
enter
xchg
xchg
pop
or
out
shl
lods
insl
pop
scas
add
hlt
jns
sbb
push
ss
adc
cmp
or
and
shlb
iret
iret
dec
loop
mov
in
jns
inc
and
movsb
jbe
lods
inc
or
test
jo
mov
cmc
and
dec
xchg
sbb
mov
jae
insb
cwtl
push
testl
aam
jae
aad
sub
or
rclb
or
mov
inc
push
inc
pop
sbb
repz
fildll
push
mov
shrl
xchg
loopne
out
leave
dec
push
shlb
ss
inc
cwtl
inc
pop
ror
js
aad
pop
add
roll
xor
stc
mov
pop
outsl
out
mov
mov
push
ds
in
sarb
pop
inc
out
ret
aas
xor
notrack
cwtl
inc
les
pop
ljmp
cmpsb
stos
pusha
sub
cmc
add
loop
std
out
call
in
test
mov
cmp
pop
mov
scas
imul
pop
xor
push
int3
mov
jmp
into
mov
out
ret
mov
adc
xchg
daa
or
shl
dec
cmp
xchg
imul
jle,pn
mov
inc
rcll
mov
or
bound
push
push
ss
inc
out
xchg
jge
sub
push
inc
scas
sbb
into
testl
mov
pop
push
lret
jbe
sbbl
insb
pop
mov
cld
ja
addr16
jns
nop
inc
push
ds
push
jp
hlt
mov
mov
int3
test
mov
mov
push
mov
xchg
mov
and
xchg
jl
xchg
pushf
cmp
sbb
ftst
clc
mov
mov
pop
mov
mov
sahf
add
outsl
adc
jge
cmp
xchg
dec
cli
test
add
mov
ds
mov
mov
pop
or
add
dec
sbb
push
iret
stos
aaa
inc
sub
popa
fdivl
mov
neg
mov
movsb
jae
jmp
xchg
sarl
cwtl
xor
out
lods
das
fs
cmp
sahf
dec
xor
repz
ljmp
push
xchg
inc
mov
push
pop
imul
js
cmp
mov
xchg
add
jle
pop
push
push
xchg
sub
pop
pop
repz
cmp
lods
daa
or
pop
enter
rcrb
idiv
lods
outsl
xor
ss
mov
mov
sub
aam
das
loop
ds
movsl
ret
fistpll
push
lcall
lods
lret
mov
adcb
mov
mov
insl
fiadds
stc
sahf
test
push
out
pop
or
push
inc
fcompl
test
addr16
orl
lds
dec
or
sub
inc
insb
inc
adc
jmp
lock
imul
mov
inc
push
mov
out
mov
mov
mov
scas
ficomps
adc
jb
stos
ljmp
mov
insb
andb
mov
pop
lock
dec
xor
jp
iret
jl
ret
shl
arpl
loope
ret
outsb
fdiv
mov
je
pop
lods
fcoms
cmp
pop
pushf
lods
out
pop
xorb
repnz
push
filds
bnd
sarb
pop
xchg
dec
outsb
pop
jecxz
mov
rclb
dec
roll
loopne
push
sub
sbb
jp
sbbb
mov
xchg
and
xchg
adc
outsl
je
rorl
into
xchg
enter
add
rcrb
ret
mov
cmp
lea
xchg
test
addl
xlat
outsb
stos
sti
xor
in
test
dec
bound
mov
test
les
add
xchg
xlat
loop
cli
mov
adc
outsb
loope
sbb
stc
cltd
fiadds
addr16
jp
cmp
scas
sub
dec
shrb
xor
prefetch
add
add
ret
xor
lret
jp
cmp
push
shl
lret
add
rcrl
adc
fsub
pop
out
jo
mov
stc
in
cmp
dec
push
jae
xchg
pop
dec
fidivl
inc
mov
cmp
sub
lea
adc
cli
xor
mov
pop
xor
push
es
cmp
les
mov
fstl
or
adc
pop
pusha
pop
pop
imul
push
neg
and
lcall
lods
cmp
pusha
inc
into
iret
mov
xchg
mov
stos
dec
mov
dec
call
mulb
push
insb
xchg
int
lret
jae
jecxz
jne
adc
mov
insb
ja
cmpsb
xor
sub
dec
push
iret
aas
jnp
push
adcl
int
jl
std
lahf
testl
rorb
hlt
xor
lods
sbb
into
fwait
mov
mov
xor
lock
enter
mov
mov
mov
or
ret
sbb
data16
in
and
cmp
les
insb
sub
and
push
adc
inc
icebp
lahf
cltd
shlb
adc
call
mov
inc
pop
insb
mov
stos
adc
inc
gs
mov
icebp
and
pop
insb
jo
call
pop
mov
test
push
shl
in
outsb
nop
fs
data16
sbb
mov
inc
sbb
mov
repz
add
aam
pop
enter
pop
sbb
adc
inc
sub
push
or
xchg
daa
data16
leave
dec
and
xor
in
notl
jmp
mov
pushl
cmpsl
repz
xor
ss
arpl
ret
loop
mov
ret
cmpsl
cmp
pop
push
add
clc
je
pop
adc
pop
out
ds
and
adc
aas
mov
push
push
jb
dec
and
sub
cmovbe
cmpsb
mov
out
mov
lds
xchg
cmp
add
jecxz
mov
in
in
aam
lds
adc
in
hlt
les
inc
movsb
xor
xchg
add
inc
aad
lds
adc
in
hlt
les
inc
movsb
xor
xchg
add
inc
aad
les
adc
in
hlt
rclb
movsb
xor
and
push
cmc
inc
in
aad
shll
jp
mov
iret
outsb
push
aam
sarl
imul
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xchg
cmp
or
stos
push
xchg
call
stos
xor
sti
inc
fs
xchg
cmp
or
jnp
jnp
pop
in
add
fwait
sub
jne
gs
mov
pushf
xor
fnsave
inc
in
or
mov
pop
push
mov
lahf
sub
ljmp
mov
stos
xor
and
lahf
jge
pop
add
and
mov
cmp
int
sbb
or
cwtl
jo
jo
nop
inc
sub
leave
lret
push
mov
sub
inc
inc
sub
push
push
lock
inc
jle
and
stos
or
pop
mov
mov
sbbl
das
in
sahf
pop
add
add
stos
movl
lds
inc
jg
mov
adc
push
xor
aad
lods
stc
inc
sti
mov
gs
repnz
subl
pop
in
sbb
rorl
je
rcll
or
gs
sub
cmp
jnp
imul
cld
push
or
sbb
xchg
dec
jecxz
rep
shll
cmp
pop
sarb
outsb
cmpsb
jns
or
aam
stos
inc
lahf
inc
out
push
sahf
and
pop
mov
cmpsl
cli
push
in
fisubrl
fs
das
mov
push
iret
pusha
into
xor
mov
jmp
mov
jmp
dec
popf
dec
lds
pop
in
adc
fwait
and
jmp
xchg
cmp
or
jnp
imul
in
adc
fwait
and
jmp
xchg
cmp
or
mov
movsl
adcb
cmpsl
jl
xchg
sub
daa
push
out
loopne
repnz
pop
or
notb
jno
jbe
insb
imul
dec
and
pop
outsb
gs
jo
mov
lea
xlat
lds
adc
mov
pop
fidivl
push
je
mov
loopne
inc
lds
hlt
mov
sub
mov
lea
mov
inc
adc
mov
dec
andb
push
add
cmp
xchg
insb
and
xchg
xchg
push
aam
sub
ret
xchg
dec
gs
out
pop
ret
inc
mov
jb
pusha
fistpl
xorb
and
sbb
rclb
in
xor
cltd
mov
add
jg
in
adc
loopne
sub
push
int3
fdivs
push
mov
xor
pop
into
mov
in
xchg
or
fldl
lcall
stc
push
loopne
cmpsl
out
mov
addr16
mov
bound
or
mov
pop
jecxz
push
dec
movsl
push
cmp
shlb
mov
xchg
test
inc
adc
sub
sbb
cld
sub
scas
stc
jbe
or
mov
shlb
pop
lcall
fimuls
xchg
movsb
imul
clc
in
out
mov
pushf
cmpsl
xor
adc
cli
arpl
xchg
mov
mov
mov
loope
jne
std
push
movsb
or
roll
ret
lods
mov
pop
test
mov
iret
adc
subb
in
adcb
adc
call
mov
jb,pn
push
xchg
pushf
sub
fsubl
ds
hlt
fcoms
add
hlt
outsb
loop
pop
xchg
xchg
data16
cltd
dec
jl
je
jno
shrb
aas
jnp
inc
push
fmull
add
out
sbb
cmp
dec
lcall
xor
jl
push
lds
leave
aam
pop
dec
test
pop
pop
out
sub
out
call
insl
fidivl
pop
push
xchg
dec
aad
es
das
outsb
je
add
xor
arpl
movsl
bound
mov
xchg
ja
sbb
aas
aaa
inc
test
fmul
sbb
cmp
mov
mov
push
scas
pop
repz
lcall
out
xchg
cmp
insl
aam
cmpsb
aaa
jge
sub
test
or
sub
add
insl
pop
daa
bound
scas
push
mov
aam
std
popf
sub
inc
sbb
xor
mov
fwait
mov
loope
mov
ds
repnz
sub
movsl
cmp
sbb
mov
iret
addr16
or
lods
sub
in
movsl
shll
sbb
push
daa
push
jb
jns
aas
int3
or
or
dec
out
adc
sub
push
pop
add
loop
add
cli
test
cmp
or
pop
mov
dec
outsb
rcl
divl
lods
shlb
sbb
xchg
lcall
aas
xor
lods
mov
imul
adc
sub
jo
mov
cmp
or
xor
arpl
mov
gs
lods
movsl
mov
inc
xchg
inc
add
and
inc
out
imul
lods
xor
test
aad
in
mov
js
out
mov
cwtl
sub
sub
push
add
cmp
insl
test
insl
sahf
shl
sbb
movsl
in
jb
or
sub
mov
xor
sahf
aam
sub
xorb
mov
mov
mov
jp
dec
test
fildl
xchg
and
mov
lahf
int
push
mov
gs
jbe
push
shrl
movsb
int
xor
divb
and
sarb
ljmp
mov
into
cmp
and
and
and
jle
or
or
jo
jle
cltd
mov
pop
out
cmp
jmp
sbb
push
loope
or
xchg
xchg
stos
xchg
or
leave
stc
test
sub
pop
shl
cwtl
mov
mov
cmpb
inc
jb
jecxz
das
push
lret
sbb
xchg
xor
pop
push
push
andb
cmp
jge
cmp
fstpt
fsin
sub
pop
fisubl
jne
ret
pop
lods
jl
sub
jge
ja
adc
cwtl
pop
mov
fwait
scas
std
pop
cmpsb
push
jae
fstl
sub
xchg
outsb
cmp
push
fdivrs
loopne
push
cmpsb
cmpl
xchg
mov
loope
xor
call
gs
dec
adc
cmpsl
xchg
or
cmp
and
cmp
mov
and
push
popa
dec
in
loopne
int3
and
movups
push
pushf
pop
fs
jmp
pop
movsb
lahf
cs
leave
mov
roll
sub
or
les
dec
and
push
out
les
mov
test
and
xchg
push
loope
je
outsb
adc
push
loopne
push
and
aaa
insl
pop
jbe
xor
cmpsb
jle
xchg
js
dec
push
stc
add
adcl
andl
cmp
lret
mov
mov
je
dec
push
inc
xor
int
lods
dec
loope
orb
pop
in
sub
adc
out
add
repnz
mov
mov
arpl
cmp
cmpsb
repz
lea
xchg
push
jne
mov
inc
mov
mov
jge
or
lret
lds
sub
jbe
jns
mov
aas
stc
dec
rcll
jp
add
adc
mov
jl
ss
test
mov
ljmp
lock
das
testl
in
mov
int
push
dec
ret
hlt
pusha
push
push
gs
mov
arpl
mov
fcompl
addr16
push
fildll
or
mov
movsb
jno
sub
pop
dec
test
stc
movsl
stos
cltd
pusha
dec
sbbb
je
cmpsb
lds
jnp
or
pushf
or
add
sbb
sub
int
std
scas
jns
pop
insb
add
add
mov
cmp
sbb
fadds
ds
mov
xor
adc
mov
out
push
aaa
mulb
psllq
push
cli
in
mov
push
test
or
or
push
or
or
push
add
add
push
aad
adc
mov
mov
fmulp
inc
mov
or
dec
jle
rol
sub
cmp
aaa
push
cmp
or
jge
push
repz
aad
push
imul
xor
xor
in
insb
cld
inc
imul
or
xchg
xchg
push
pusha
bound
adc
dec
xor
outsb
xchg
fs
cmp
dec
mov
test
pushf
out
outsb
lock
insb
cli
add
lret
mov
xchg
mov
xorb
loope
mov
scas
and
mov
je
leave
rcrl
aas
adc
sahf
fstl
lock
or
jno
inc
sbb
imul
inc
scas
mov
mov
xchg
xchg
outsl
pop
stos
out
fstp
push
jbe
xchg
and
sbb
mov
sbb
mov
popa
aam
and
dec
pop
es
push
daa
xchg
push
iret
sub
ja
fimull
lret
mov
ss
jmp
fxch
in
jnp
dec
fmull
dec
sub
aam
shl
movsb
mov
call
jle
mov
jb
stc
cmp
mov
add
sbbl
inc
icebp
push
jb
cmp
nop
add
addr16
sub
in
push
loopne
imul
or
mov
mov
fildll
pop
rcrb
int3
cmpsb
mov
in
or
aam
push
and
or
das
aaa
push
push
fmull
out
xor
pop
pusha
adc
test
roll
cmp
loop
or
or
xchg
sti
jmp
push
adc
lods
test
hlt
rcll
adc
notl
sbb
push
jbe
fs
icebp
fstl
inc
xchg
add
imul
dec
les
xchg
adc
mov
ror
les
ljmp
sub
enter
test
mov
add
out
daa
adc
fst
sahf
add
pop
sub
sub
adc
insb
mov
pop
ret
stc
hlt
or
cmp
sbb
dec
sub
add
push
adc
inc
adc
in
pop
add
pop
data16
imul
jge
inc
push
sub
mov
leave
xchg
jge
and
adc
lea
mov
dec
xchg
mov
mov
scas
or
orb
push
js
sub
stos
push
leave
div
inc
inc
pop
jno
shll
repnz
lds
mov
mov
and
movsb
mov
mov
test
inc
inc
ret
jl
lahf
lret
jo
shlb
into
pop
lret
lods
or
je
xchg
insb
dec
sub
push
daa
fwait
andb
iret
push
aam
mov
pop
jle
rorl
jae
push
mov
aad
cmpb
into
lcall
pop
cltd
or
or
fldcw
int
stos
sub
and
and
sub
dec
add
xchg
subb
inc
xor
out
loop
rclb
aas
push
add
movb
cwtl
dec
push
jbe
and
popa
pop
into
add
mov
lcall
test
xchg
jbe
push
es
insl
loopne
in
xchg
sbb
sbb
adc
xlat
lock
add
push
push
and
mov
sbb
jle
or
mov
add
pop
or
mov
fldenv
loope
jbe
imul
add
imul
mov
shl
lcall
and
xor
jl
mov
push
shrl
dec
dec
inc
and
inc
mov
jne
jle
push
adc
stos
xor
loope
faddl
cmp
jmp
push
mov
mov
pop
mov
pop
arpl
adc
imul
loopne
fwait
sahf
adc
dec
ljmp
data16
fildll
adc
cmpb
sub
pop
cltd
push
cwtl
or
mov
pusha
mov
fldt
int3
xor
pusha
xchg
mov
in
cld
push
adc
xchg
sub
icebp
gs
aad
or
mov
call
dec
push
mov
sbb
jg
push
inc
frstor
leave
out
pop
push
push
mov
adc
add
cs
and
cmp
mov
stos
cld
arpl
pop
fwait
das
push
sti
lret
cmpsb
jno
std
fcompl
cmp
in
repnz
pop
adc
mulb
xchg
stc
or
push
cmp
dec
mov
enter
sub
or
mov
mov
jle
dec
add
scas
aam
push
cmp
cmpsl
testb
loop
inc
push
std
mov
jno
sbb
adc
and
test
mov
push
shlb
xchg
jmp
xor
push
dec
inc
push
cmc
in
pmaddwd
adc
out
pop
or
add
pop
mov
clc
scas
pop
xor
nop
lcall
dec
dec
adc
rcrb
dec
sub
cli
adc
js
lret
sbb
and
popa
xchg
fimull
iret
mov
add
daa
cmp
in
sub
xchg
int
pop
outsl
or
push
cli
pop
lcall
mov
pop
dec
mov
leave
rcrb
out
xor
push
pop
add
sub
lock
fists
pop
mov
pusha
cmpsb
pop
adc
dec
hlt
loop
adc
movsb
pop
enter
jle
mov
xchg
into
or
and
lds
lock
add
mov
imul
push
add
jne
dec
js
testb
xchg
ret
mov
adc
andb
cmp
and
std
jmp
adc
pop
jns
inc
pusha
lds
mov
cmp
mov
sbb
int
inc
imul
push
andl
ja
inc
adc
cltd
mov
popf
xor
leave
stc
je
aam
pop
cmc
ret
daa
fdivl
ss
dec
dec
leave
aad
dec
jne
sbb
xchg
push
popa
scas
sti
clc
sub
xchg
mov
in
xchg
sbb
popf
fs
mov
outsl
mov
sub
enter
imul
and
test
rolb
jae
sbb
xchg
loopne
faddp
outsb
jae
pop
mov
lds
mov
mov
pushf
out
fildl
or
jne
sbb
rorb
dec
sbb
ds
enter
jg
mov
mov
jo
add
shl
scas
push
mov
lahf
fildl
sahf
lret
xchg
inc
stc
xchg
pushf
test
sbb
pop
xor
shl
fwait
jb
js
insb
jmp
fdivp
sbb
jmp
cmp
jne
xor
or
hlt
inc
jle
and
xchg
add
fs
jecxz
xchg
pop
add
sub
add
jae
sahf
ljmp
das
insl
mov
mov
and
mov
xchg
push
rcrb
jb
sahf
arpl
leave
sbb
lds
dec
cmpb
das
and
sub
arpl
sub
iret
dec
popf
test
fsubrl
stos
push
cmp
popf
ret
stos
mov
xchg
nop
pop
push
insl
dec
push
bswap
inc
sbb
inc
xor
adc
je
mov
ds
inc
xor
hlt
fsubr
pusha
lods
int
cld
jge
cmp
sti
xchg
out
pop
stos
mov
test
inc
push
popa
xchg
and
inc
jns
in
aad
ds
insl
enter
sbb
jl
push
mov
sarb
test
mov
rcrl
sub
shl
or
lcall
mov
mov
mov
jge
shll
xchg
push
xchg
cld
fs
in
pushf
inc
sti
loope
xor
jnp
xlat
addr16
fwait
sub
cwtl
movsb
inc
jle
lods
push
mov
mov
sub
mov
scas
gs
cmpsb
cmp
sahf
mov
inc
xchg
out
int3
lods
and
dec
pop
mov
imul
cld
iret
scas
xchg
mov
repz
shr
test
dec
rorl
push
testb
sbb
jbe
add
out
bswap
in
mov
sbb
mov
jmp
outsb
data16
js
jg
mov
mov
jl
call
jecxz
and
and
outsl
test
add
mov
push
jnp
repz
mov
add
cmp
cmp
sub
add
add
shl
ja
ret
andb
jge
test
bound
sub
inc
cmp
jmp
cmp
test
jb
and
dec
pop
idivl
lret
les
push
popl
push
dec
pushf
cmc
inc
xor
pop
and
sbb
push
clc
push
and
pusha
inc
push
sub
jp
xor
ficomps
jge
mov
rolb
mov
cmp
push
adc
lock
daa
pop
mov
jnp
loop
inc
pushf
daa
aas
stc
nop
mov
loope
decb
adc
dec
mov
in
sub
leave
call
imul
rolb
in
jnp
xchg
call
or
and
sarb
sti
xchg
sti
repnz
jnp
pop
dec
gs
out
xchg
cmp
push
cld
ret
jmp
testl
data16
in
fs
ret
and
xlat
jecxz
sahf
fstps
testl
inc
jae
xchg
out
je
fstps
jae
cltd
inc
cmpsb
aad
stc
into
adc
sbb
mov
xchg
sbb
daa
jae
clc
cli
leave
jecxz
pop
inc
xchg
loopne
add
xor
into
inc
adc
fst
repz
inc
stos
mov
add
jl
add
test
or
daa
je
imul
rcl
out
xchg
xchg
aaa
shl
cmp
js
addl
dec
loop
dec
cmp
shr
in
sub
hlt
decb
push
inc
sbb
test
mov
push
les
sub
or
adc
mov
adc
call
inc
and
mov
ja
pop
iret
cmp
mov
movsl
mov
mov
push
divb
in
arpl
arpl
test
insl
ja
mov
push
jmp
mov
lahf
push
dec
shrb
ds
lock
insl
and
mov
ja
fnstcw
jecxz
cmp
pop
xor
sub
aas
push
test
ss
xlat
sub
sub
jno
fsubrs
cltd
add
adc
aam
shrb
std
pop
cltd
rcrb
sub
aas
mov
cmp
fidivrl
fcoml
mov
imul
pusha
xor
jns
cmpsl
loope
fcmovne
mov
add
je
mov
rcrl
movsl
cmp
jae
rcrl
jnp
sbb
fiaddl
fwait
enter
dec
shlb
sub
push
xchg
inc
das
arpl
jns
pop
push
cwtl
mov
fs
adc
add
data16
add
fs
movsl
sbb
in
adc
gs
sub
sar
jo
mov
in
xchg
dec
pop
push
inc
dec
sbb
cmp
push
lods
or
jl
cltd
adc
aad
add
xorl
cli
mov
adc
imul
xchg
inc
sbb
xchg
adc
sbb
xor
and
sbb
adc
rolb
cld
bound
mov
pop
je
inc
dec
add
sbb
sbb
lods
aad
mov
adcl
inc
in
or
aad
xchg
lock
vmwrite
adc
mov
mov
shlb
or
std
xchg
lods
out
pop
mov
data16
mov
sbb
es
or
mov
xchg
pop
pop
mov
mov
cwtl
cli
jne
ja
mov
cs
dec
stc
and
xchg
ficompl
in
call
xor
pop
seta
jecxz
dec
in
aas
imul
stos
outsl
out
xor
rcrb
out
sub
jbe
insb
push
in
mov
pop
jle
mov
nop
addr16
jnp
ret
push
pop
shll
jb
pop
data16
xlat
outsb
enter
lret
je
icebp
les
call
sbb
inc
jne
sub
inc
cld
xchg
leave
les
fwait
dec
aaa
mov
arpl
movsl
ja
cmpl
xchg
in
jge
sbb
push
out
sub
cmpb
movsl
add
mov
dec
stc
in
rcr
mov
cmp
push
addr16
test
mov
and
sbb
shrb
mov
mov
dec
sub
jl
fmul
xor
dec
jge
lea
push
dec
sub
outsb
jno
add
xchg
es
pop
bound
and
mov
mov
mov
add
push
push
and
mov
fwait
jmp
push
sub
adc
enter
add
iret
sub
loope
add
adc
lret
xchg
out
inc
leave
ficoml
rorl
push
or
pop
icebp
inc
sub
addb
inc
popl
mov
inc
dec
int
pushf
mov
xor
xrelease
cmp
jl
ret
adc
dec
sub
and
sarl
cmpsl
and
push
pop
aaa
cwtl
or
mov
ljmp
dec
mov
mov
adc
mov
push
in
xchg
js
ds
xchg
in
int
lcall
rol
dec
outsl
and
cmp
push
xor
aad
and
push
or
aam
dec
inc
fdivs
jae
fisubs
or
daa
jp
insb
mov
mov
outsb
pop
cli
sti
in
lock
in
add
jecxz
lahf
jno
xchg
jae
dec
shrl
dec
orl
loopne
in
push
sahf
or
push
pop
out
push
cli
mov
adc
addr16
push
push
cmp
mov
lret
adc
lret
jp
xor
push
dec
xchg
jbe
jg
js
cwtl
outsb
jge
enter
enter
pop
push
fisttps
popf
push
jns
mov
xchg
lcall
iret
adc
mov
mov
xor
jbe
mov
inc
push
out
xchg
mov
fnstenv
cmpsb
jbe
les
jno
out
mov
stos
cmp
inc
std
cmpsb
push
xchg
and
add
mov
pushf
xor
lahf
cld
repz
push
aaa
dec
orl
pop
rcl
jle
lcall
repnz
test
aam
call
add
mov
xor
adc
adc
sub
lahf
adc
sar
push
stc
xor
sub
jnp
imul
in
adc
fwait
and
jmp
xchg
cmp
or
jnp
imul
in
adc
fwait
and
jmp
xchg
cmp
or
jnp
imul
in
adc
fwait
and
jmp
fbld
xchg
aas
xchg
mov
movsl
or
jnp
imul
mov
mov
and
xchg
mov
pop
bound
jnp
inc
bound
or
ret
fnclex
jmp
sti
orb
mov
bound
jnp
or
sbb
sub
inc
ret
fistl
out
fwait
mov
dec
push
pop
bound
jnp
or
sbb
sub
cmp
lret
sar
xchg
cltd
fcompl
in
or
push
adc
add
jnp
sub
push
test
sub
scas
sub
mov
mov
and
in
sbb
rcll
or
xor
cld
and
ja
jge
xchg
stos
dec
ljmp
cli
jge
add
fwait
pop
fcomp
outsb
ret
push
sbb
sahf
sbb
pop
push
push
jg
inc
repz
test
sbb
inc
pop
ret
outsl
aam
jl
cli
mov
aas
or
cmp
mov
inc
xor
shlb
xchg
repnz
decl
fcoms
inc
mov
jnp
cmp
or
rcr
and
mov
adc
enter
scas
sbb
push
pop
bound
jnp
or
sbb
sub
cmp
lret
rcr
loop
repnz
orb
rolb
cmp
pop
imul
outsb
outsb
pop
jb
insl
jae
xorl
out
sti
out
out
inc
and
xor
pop
jnp
addr16
and
pop
cmpsl
adc
mov
in
lcall
adc
sbb
add
xor
ret
fnclex
jmp
sti
orb
mov
bound
jnp
or
sbb
sub
cmp
lret
rcr
loop
repnz
orb
mov
flds
mov
dec
sub
rol
xchg
cs
cmpsb
shl
test
sahf
add
roll
movsb
cli
push
sarb
mov
cmpsb
xchg
mov
jecxz
insl
lock
sbb
dec
jb
roll
mov
ss
and
mov
sbb
mov
mov
stos
test
jmp
or
inc
stos
shll
cmp
notl
ret
inc
mov
push
sub
mov
push
shr
push
sub
adcl
or
mov
les
std
cmp
push
lret
aaa
lods
leave
out
mov
into
mov
jg
pop
xor
js
pop
xchg
xchg
inc
call
mov
cmpb
sbb
lds
sbb
cld
push
add
cmp
xlat
gs
rcrb
into
leave
jb
addb
inc
mov
pop
inc
inc
clc
mov
jmp
or
fbstp
inc
sbb
cmpsb
dec
outsl
lods
fnstcw
add
inc
dec
jns
std
scas
in
imul
mov
call
or
adc
in
outsb
out
mov
or
lret
aad
push
movsb
orl
ds
decb
mov
mov
push
lock
nop
das
jne
adc
cli
in
andb
pop
or
in
test
adc
out
clc
addr16
pusha
jle
push
or
mov
or
cltd
sub
sti
sbb
fnstenv
or
inc
cmp
iret
into
mov
inc
or
test
mov
in
pop
cmp
lahf
dec
stos
std
jae
scas
jmp
add
cmpsb
cmpsl
pop
xor
push
es
mov
cmp
insl
negl
fldcw
jbe
je
lds
repnz
push
fucomip
pop
push
imul
cmp
mov
and
loop
mov
inc
jge
cmp
test
popf
addr16
jmp
jmp
push
dec
cld
call
repz
push
popf
inc
in
xor
cmp
fnstenv
insb
jbe
cld
in
stos
hlt
stos
rcl
xchg
inc
jmp
adc
dec
sbbl
cltd
mov
dec
mov
mov
and
mov
dec
dec
and
cmpsl
push
ss
lods
mov
inc
jo
sbb
mov
mov
pop
decb
ret
xchg
jb
daa
sarl
dec
or
jmp
mov
punpckhwd
mov
push
mov
xchg
mov
popa
pop
test
sarl
or
lock
dec
pusha
mov
scas
xor
or
sbb
sbb
ljmp
sub
xchg
dec
mov
sbb
mov
lcall
insl
mov
xor
mov
popl
mov
in
add
mov
dec
dec
pusha
sbb
dec
js
mov
cmp
mov
inc
test
sub
xchg
xchg
cmp
sbb
add
test
repnz
cs
cmc
out
outsl
jae
ret
mov
enter
mov
mov
push
mov
push
push
dec
movsb
xor
lods
sbb
sub
xchg
movsb
cmp
shlb
dec
enter
mov
add
mov
pop
cmc
dec
call
xlat
std
arpl
aaa
repnz
jbe
inc
lea
lahf
imul
add
inc
out
mov
fs
lods
cmp
jecxz
pop
cld
add
je
jp
shll
aad
cmp
sahf
mov
cmp
int3
sarb
cmpl
repz
data16
ret
cli
call
insl
subb
dec
jns
push
imul
mov
movsl
out
mov
fwait
xor
mov
insb
add
dec
psubusw
fcomi
sahf
add
mov
dec
ds
aaa
push
push
aas
add
push
arpl
sbbl
jmp
icebp
into
or
loopne
mov
sbb
out
movsl
ss
push
ljmp
pop
shr
ret
xchg
iret
mov
xchg
xor
cmc
dec
xchg
lods
sbb
call
dec
stc
loopne
mov
fnstcw
sub
shll
popf
and
adc
negb
jno
cld
mov
adc
sub
sbb
pop
mov
push
stc
nop
push
xor
cmpsl
jge
lods
dec
add
sbb
sub
fisubrs
sub
out
mov
testl
and
enter
cwtl
shlb
dec
loope
sub
arpl
ljmp
adcl
insb
stc
adc
test
fidivrs
test
mov
mov
sarl
xchg
or
dec
les
jne
xchg
addr16
jbe
lock
adc
es
das
das
pushf
movsl
sarl
and
in
push
bound
and
xor
loopne
icebp
xchg
out
scas
ja
pop
sbb
sub
adc
dec
cmpl
addl
ss
sub
cmc
mov
test
jo
mov
fldcw
pop
fs
loopne
xchg
mov
outsl
mov
push
mov
lahf
fistps
pop
ds
aaa
out
ret
idiv
call
mov
loopne
cli
push
sub
movsl
shl
push
fcoms
and
pop
dec
sbb
scas
add
lea
in
or
dec
mov
cmp
xchg
pop
test
mov
cmp
in
xchg
inc
mov
push
cmpsb
fldl
cmp
mov
cmpsl
aad
mov
pop
adc
sub
xchg
stc
mov
jno
lret
sbb
jnp
or
cmp
cmp
mov
clc
rorl
mov
mov
sub
lahf
pop
sub
negl
push
bound
enter
xor
icebp
pop
dec
ds
jne
mov
pop
pop
roll
aaa
std
imulb
clc
rorb
stos
jecxz
xchg
sbb
fstpl
sbb
testb
push
mov
or
aas
lret
sahf
aad
dec
mov
sub
lret
mov
stos
stos
mov
cmpsb
leave
cmp
xchg
cmp
cmpb
xor
pop
pusha
jnp
push
mov
xorl
mov
xor
repz
jmp
mov
jmp
inc
sub
lcall
mov
sbb
jo
test
fcmovne
cli
cmc
mov
cwtl
adc
gs
daa
out
jmp
ret
inc
cmp
stos
add
xchg
cld
lods
stos
push
lea
mov
push
mov
lret
fisttpll
or
pop
addl
loope
lds
jecxz
adc
xchg
ret
mov
sar
rolb
test
inc
mov
jns
mov
shrb
mov
or
rcl
dec
jbe
loopne
rclb
ret
insl
hlt
fdivs
cmpsl
sti
nop
add
cmpsl
movsb
cmp
ljmp
cmp
mov
add
xchg
test
push
push
adc
sbb
or
lds
fstpt
xchg
cmpsb
jecxz
mov
pop
and
test
pop
mov
scas
jl
or
mov
push
adc
mov
push
imul
dec
imul
rorb
inc
out
push
fmuls
mov
insb
mov
shll
int
ficoms
fidivrs
and
dec
testl
xlat
or
inc
or
mov
jo
adc
loopne
push
push
lock
xchg
jg
xchg
repz
lcall
sub
xor
and
sti
fdivrl
out
lahf
push
jp
cld
or
int3
std
push
int3
mov
inc
jne
cwtl
cmc
push
pushf
movsb
lods
out
popf
test
cmp
loope
jnp
pop
pop
lods
mov
aaa
inc
jno
jl
push
aas
xchg
cwtl
fistpll
pop
fisttpl
in
cmp
notl
rorb
mov
movsl
out
mov
test
pushf
jnp
xor
movsl
insl
outsl
mov
jle
mov
rolb
push
das
insl
ret
cmp
or
jecxz
ss
es
out
dec
das
inc
jbe
jno
dec
add
sub
movsl
or
in
scas
mov
sbb
rol
lds
sti
adcb
roll
or
push
flds
andb
push
out
push
mov
mov
jge
repz
sub
lahf
cld
push
repnz
gs
icebp
jns
mov
mov
dec
and
ror
mov
mov
push
or
adc
mov
add
out
push
pop
fnsave
iret
mov
xor
mov
insb
aad
scas
cltd
mov
add
mov
in
adc
adc
icebp
mov
xchg
andl
pop
xor
pop
add
test
or
add
fldl
xlat
inc
push
jae
cmc
call
nop
jbe
fldl
or
jg
add
jbe
addr16
cmp
xchg
add
ror
mov
imul
insl
lahf
xchg
mov
sbb
enter
out
rcl
inc
scas
repnz
stc
movsb
add
cmp
aam
cmp
mov
xchg
aas
and
or
xchg
xor
sahf
jecxz
push
subb
xchg
pop
mov
lock
jmp
popf
xchg
push
cli
out
das
xchg
into
punpckhbw
jecxz
sub
sbb
mov
subl
jns
and
bnd
nop
js
pop
into
or
mov
pop
xor
shl
out
loopne
pop
aam
push
xlat
popf
into
movsl
repnz
or
push
mov
inc
mov
rol
add
cmp
imul
insl
jle
adc
popa
add
mov
ret
mov
frstor
fcoml
ficompl
sahf
rorl
lahf
or
xchg
aad
cmp
or
stc
gs
dec
xchg
dec
mov
pop
or
lret
sahf
test
jmp
fs
mov
test
sub
mov
xchg
lea
xchg
test
pop
imul
add
fs
push
mov
das
les
inc
inc
imulb
inc
sub
popf
cmp
hlt
xchg
int
std
cmp
sbb
jecxz
mov
and
cmp
sub
mov
or
dec
sub
lods
xorl
out
pop
add
cwtl
adc
aaa
aaa
dec
push
mov
cmp
sub
addb
stos
mov
sub
sbb
pop
xchg
cltd
cmp
imull
xchg
sarl
ja
notl
mov
sub
mov
dec
outsb
mov
cmpsl
loope
adc
lea
pop
cltd
decb
jle
push
aas
popf
mov
cmp
lods
lods
nop
sub
xchg
push
lods
aaa
andl
in
xor
lds
pushf
aas
add
sub
into
outsb
fsubrp
mov
sahf
nop
adc
fcompl
in
insb
jne
push
ror
inc
fdivp
in
fdiv
mov
jecxz
cmpsl
mov
sub
pop
lods
aam
lea
cmovnp
xor
divl
xadd
sti
cmp
mov
dec
mov
jg
in
enter
mov
inc
sub
fwait
aaa
bnd
dec
test
inc
test
in
cli
jo
icebp
cmpsl
mov
sbb
jg
dec
lcall
sysret
adc
aam
xlat
mov
or
shlb
lcall
int3
rorl
and
ret
pushf
push
cmp
xchg
hlt
je
fwait
ds
xor
cltd
pop
xor
mov
aas
loope
or
pop
dec
loope
das
push
cwtl
mov
add
imulb
adc
pop
push
xchg
dec
test
xchg
adc
sub
fidivl
rcrb
mov
pop
sub
popf
mov
dec
adc
inc
adc
xor
fcomps
xchg
sbb
or
dec
mov
rcrb
mov
call
fisttpl
shrb
cmp
aaa
xlat
sub
mov
leave
mov
xor
insb
inc
lret
iret
mov
add
mov
sbb
fcoml
das
xor
call
leave
in
loop
addr16
inc
and
cmpsl
arpl
dec
and
sub
inc
sbb
sub
call
xlat
sti
or
das
mov
mov
sub
lods
lcall
and
or
jg
aas
cmc
fists
and
sbb
addl
xor
jne
dec
testb
fld
andl
int3
dec
pop
lret
mov
jo
lcall
push
adc
mov
loopne
hlt
pop
mov
sbb
rcrl
mov
push
daa
cmpsl
dec
outsb
cmp
popf
sub
out
mov
outsb
mov
mov
rolb
and
in
push
test
sbb
inc
pop
cwtl
movsl
push
and
mov
mov
sub
cld
and
mov
fwait
int3
xchg
repz
icebp
mov
pop
dec
pop
jmp
aad
scas
pusha
hlt
hlt
sbb
sub
pop
test
jecxz
xchg
pop
addb
fld
and
mov
pushf
xor
orb
adc
test
ljmp
fstps
or
xor
stc
aad
out
dec
stc
pop
and
and
add
mov
push
sub
sahf
xor
jl
sbbl
in
xor
aam
call
jns
out
stos
xchg
pusha
aam
inc
add
cli
cmp
bound
pop
add
lcall
and
sub
adc
sahf
inc
aas
xlat
push
int
or
scas
iret
pop
sbb
add
clc
movsb
pop
icebp
test
mov
jns
xchg
int3
adc
negb
add
fisubrl
cmpsl
and
das
stc
adc
mov
xor
bound
mov
stos
out
repz
stos
mov
xlat
pop
imul
sub
xor
jp
enter
adc
xor
or
ret
outsb
and
inc
pop
stos
dec
or
jl
mov
pop
jle
out
popa
stc
cmp
adc
pop
or
notb
gs
rcrb
fs
mov
mov
push
fs
jns
out
rclb
dec
sbb
call
sub
stos
je
aam
in
loope
inc
push
xchg
cmp
push
stc
sti
je
and
cmp
mov
or
loopne
push
movsl
cmpsb
std
dec
imul
hlt
dec
imul
fcmovu
sarb
mov
push
cli
adc
mov
rclb
loop
dec
int3
fidivl
xchg
data16
arpl
mov
mov
ds
push
xchg
mov
out
push
and
cmp
lds
adc
inc
lcall
das
xor
and
sub
mov
fcomps
stc
mov
cltd
push
jecxz
mov
mov
adcb
push
insl
or
cmpsl
shrl
add
push
xchg
movsb
inc
int
repz
push
in
mov
push
aam
sub
lds
movsl
mov
fs
jmp
loop
sahf
lcall
lret
mov
ja
jns
inc
pop
xchg
sarb
push
xor
ss
jle
push
mov
aas
popa
pusha
outsl
xchg
sbb
mov
ds
mov
inc
inc
and
jecxz
dec
or
adc
cmp
ljmp
addb
mov
cmp
les
pop
jg
mov
mov
pop
jg
push
data16
sbb
sub
sub
adc
test
fdivrp
xchg
and
pushf
push
pop
arpl
stc
and
adc
jge
adc
in
idivl
js
pop
pop
add
mov
pop
sahf
adc
jl
test
aas
out
cmp
xchg
and
mov
cmp
fadd
lods
jmp
fsubrp
icebp
adc
mov
dec
fcmovbe
xchg
out
push
fs
fnstenv
fdiv
push
xchg
xlat
fsubrs
push
psubusw
xchg
dec
jmp
addb
sub
xchg
ficompl
cmp
lahf
cwtl
dec
clc
sub
fldt
stos
shll
cmp
jnp
fimuls
cltd
or
dec
jnp
int3
inc
sbbb
mov
lret
mov
or
xchg
mov
imulb
movsl
minps
sbb
jg
stos
into
mov
pop
xchg
mov
movsl
adc
testl
or
jns
mov
inc
adc
sbb
out
imul
js
cmc
push
jbe
or
pushf
loope
lret
scas
call
hlt
aam
jne
mov
dec
push
jns
mov
push
bound
cmp
cmp
mov
inc
jno
dec
movsl
iret
or
adc
and
or
jbe
jbe
sub
mov
sar
or
mov
pop
mov
repz
icebp
insb
sub
bound
dec
jne
jae
js
pop
xchg
add
jle
addr16
and
sbb
bound
and
jno
cli
lahf
out
mov
aad
enter
xchg
dec
xor
in
jno
push
ret
lret
pop
subl
xor
fwait
push
mov
pop
xchg
push
fucom
push
prefetch
or
push
clc
xchg
arpl
enter
lods
push
hlt
addr16
fcomp
pop
pop
jmp
fldl
loop
xchg
dec
pop
push
jbe
inc
mov
xchg
bound
cli
in
cmpsl
daa
cwtl
cs
insl
ret
xchg
mov
mov
jp
out
in
decl
push
xor
pop
dec
jmp
aam
sub
push
out
outsl
sub
push
inc
jne
bound
clc
dec
or
pop
incl
and
push
jns
fcmovnb
jbe
test
lahf
mov
xor
ss
ss
enter
push
jl
loopne
cmc
insb
rcrl
jno
mov
push
push
jae
andb
mov
fistl
sub
jno
push
hlt
dec
in
push
ljmp
xor
iret
sbb
xor
scas
fdivs
lret
lahf
mov
xor
fsts
and
push
dec
into
inc
shll
jbe
in
xchg
cmp
cmp
pop
xchg
cs
xor
fldl
and
sbb
out
and
inc
push
cmp
or
mov
scas
inc
nop
lahf
mov
pop
push
lods
jge
sti
fldenv
mov
push
pop
adc
sbb
add
sbb
or
es
cs
or
js
jae
inc
daa
das
push
test
shr
jno
sbb
inc
mov
es
push
jge
std
inc
pop
mov
mov
adc
lock
cltd
sub
and
xchg
gs
std
xor
xchg
mov
jl
ljmp
test
sub
jp
aaa
dec
sahf
cmp
adc
out
cmp
cmp
mov
cli
loope
es
mov
adc
mov
out
pop
xor
xchg
push
imul
shlb
testb
pop
inc
mov
and
sbb
dec
mov
icebp
xchg
add
rorl
xor
stos
mov
dec
cmp
or
aaa
popa
das
pop
fbstp
push
mov
inc
pusha
lret
popf
cmp
pusha
cmc
xorb
push
mov
int
ud1
push
in
lret
xchg
jl
ss
push
mov
insb
pop
popf
pop
pushf
ja
sub
clc
insl
fs
add
add
andl
test
pop
mov
ljmp
aaa
adc
imul
push
push
ja
pop
add
lcall
xor
test
fists
push
and
scas
inc
enter
inc
mov
and
idivb
rol
pop
fadds
or
pop
fdivl
xchg
or
andb
push
push
xchg
jne
mov
es
mov
push
and
jae
sbb
xor
ljmp
mov
je
push
add
cmc
and
in
sbb
cmpsl
xlat
fisubs
stc
and
dec
mov
cmp
jnp
sahf
frstor
lock
push
hlt
inc
fucom
and
fwait
push
pop
add
jo
insl
xor
push
fldenv
stos
out
pop
pop
sub
push
push
std
xor
aaa
mov
mov
outsb
popf
cmpl
inc
mov
mov
adc
xchg
cmp
jae
push
and
mov
and
fisubrl
rcll
loope
inc
ja
jnp
dec
out
push
cmp
fyl2x
daa
shlb
inc
enter
mov
pushf
sahf
test
decl
arpl
mov
fists
sbb
sub
stc
cmc
add
test
pop
jnp
jb
add
adc
and
xor
ret
fnclex
jmp
sti
orb
mov
bound
jnp
or
sbb
sub
cmp
lret
rcr
loop
repnz
orb
mov
bound
jnp
or
sbb
sub
cmp
lret
rcr
loop
repnz
orb
mov
bound
jnp
or
sbb
sub
cmp
lret
shlb
jmp
mov
add
fs
push
dec
inc
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
pop
push
dec
mov
shlb
jge
push
mov
aas
decl
out
pop
lahf
outsl
jge
dec
scas
pop
pop
scas
dec
mov
pop
out
aas
iret
das
stos
fildll
iret
pop
decl
out
pop
pop
add
pop
pop
cmp
outsl
popf
pop
rorl
ret
aas
and
fcomip
in
pop
xchg
push
out
insb
lahf
cmp
push
lret
pop
add
add
fadds
mov
int
pop
fistl
stos
add
and
scas
and
nop
and
out
lsl
rcrb
add
punpcklbw
mov
fxsave
js
sbb
mov
jno
fbld
das
xchg
iret
dec
bnd
scas
dec
pop
outsl
dec
scas
adc
out
sbb
push
rorb
add
test
pusha
outsb
iret
cmpb
or
mov
nop
sbb
btcl
das
jp
xchg
pop
int3
cmp
jle
pop
scas
mov
mov
test
jl
das
and
lock
cli
dec
das
fistl
or
pop
out
ud0
adc
iret
stc
lcall
out
push
lahf
inc
popl
push
std
cmp
pop
fwait
jge
pop
cmpsb
sub
jp
jnp
jbe
add
ds
sub
sbb
add
inc
mov
sahf
imul
aas
loope
shrl
fidivl
stc
dec
clc
adc
add
push
mov
aas
iret
das
das
iret
aas
decl
out
pop
lahf
outsl
jg
dec
scas
pop
pop
scas
dec
mov
pop
out
ud0
iret
das
das
iret
aas
decl
out
pop
lahf
outsl
jg
dec
scas
pop
pop
scas
push
loop
inc
mov
jbe
sub
xchg
fstpt
insb
jp
pop
std
cmp
xchg
adc
mov
jge
lds
jl
mov
fwait
jmp
repz
mov
lods
aaa
dec
rcr
jmp
inc
mov
jg
push
adc
stos
aad
mov
xchg
loopne
jne
sbb
cmpsb
mov
loopne
inc
jge
inc
cmp
leave
dec
lock
or
enter
imul
aas
loop
outsl
jbe
out
add
ja
sub
pop
xchg
mov
add
vmovntdq
jp
cmpsl
stos
sti
test
dec
jns
cs
js
testl
aad
int
lret
outsb
rorb
add
jle,pt
mov
clc
movsl
icebp
jmp
push
xchg
and
mov
out
das
nop
sbb
in
mov
nop
arpl
outsl
push
aaa
icebp
or
xchg
cmp
xchg
fwait
and
scas
dec
xchg
and
xchg
sub
push
dec
jo
mov
addr16
test
pop
stc
or
jp
insl
test
adc
cmp
dec
cli
mov
push
adc
jp
inc
insl
fdivl
outsb
lcall
negl
aam
stos
pop
jl
jns
dec
repz
sub
jmp
data16
pushf
adc
pop
subl
fsubl
or
and
jne
jp
push
xbegin
xchg
or
xchg
aas
inc
inc
mov
add
imul
mov
jp
popl
inc
movsb
pop
inc
xor
ss
js
xor
inc
aas
mov
insl
xchg
jb
mov
and
fbstp
inc
popf
stos
fdivrs
mov
ret
mov
pop
mov
push
inc
mov
outsb
mov
dec
stc
int
das
out
mov
hlt
push
mov
jbe
xchg
in
jg
js
mov
aas
jo
adc
jo
ja
mov
pop
and
roll
and
int3
test
adc
mov
movsb
push
mov
sbb
mov
repz
adc
out
jae
add
xor
pusha
inc
notb
cltd
cmp
movsl
lods
stos
dec
or
mov
add
adc
lods
movsb
mov
adc
test
fiadds
mov
xchg
xor
cmp
dec
sub
xlat
inc
lods
pop
mov
popa
mov
xor
fidivrl
and
mov
add
mov
pop
fidivrs
mov
inc
add
insb
or
sbb
mov
aaa
cli
imul
in
in
iret
jl
sbb
jmp
mov
push
movsb
imul
cltd
xor
dec
dec
jle
orb
jnp
pop
ret
out
and
pop
into
add
ret
lods
mov
das
scas
xor
xor
sbb
sbb
xorl
adc
std
stos
ljmp
jecxz
lea
push
xchg
add
mov
xchg
or
repz
data16
lods
clc
outsl
xchg
repnz
xchg
sub
mov
out
fimull
jbe
inc
mov
clc
or
cmc
xchg
push
jg
xchg
dec
pop
sbb
out
mov
test
dec
jo
pop
jle
shrl
push
ljmp
jo
negb
cwtl
fs
add
xor
lahf
push
daa
sbb
mov
rorl
push
out
xchg
xor
pop
shlb
dec
and
aad
aaa
push
push
popa
test
mov
jo
ja
loop
xchg
add
andb
or
aaa
mov
loope
jl
cmp
sub
cld
pushf
mov
aam
push
push
cmp
pop
sbb
and
out
shr
loopne
push
mov
shl
icebp
cmp
fiaddl
ficoms
sbb
mov
jnp
push
movsl
cmp
sbb
inc
in
push
push
push
xchg
fcmovb
dec
add
loopne
inc
cli
jbe
push
es
sub
fstl
push
pop
add
cmpsb
xchg
dec
pop
and
les
pusha
jbe
int
das
dec
push
lcall
sbb
rolb
decb
sub
loope
adc
and
pop
mov
std
add
pop
mov
nop
sbb
popa
test
add
imul
mov
or
sub
xor
les
ds
jns
cmp
push
stos
dec
cwtl
push
in
sti
loopne
xchg
and
pop
push
icebp
add
or
push
data16
or
dec
xor
inc
data16
dec
xor
repz
xor
clc
imul
mov
cltd
sub
pop
lds
loopne
inc
cmpsl
lret
test
in
jno
mov
mov
or
shrl
test
mov
cwtl
lods
fisubs
cltd
arpl
popa
or
mov
mov
insb
cmp
rcr
cmp
popa
push
mov
sub
icebp
add
and
aaa
orl
mov
call
sub
push
cmp
mov
jnp
or
xor
dec
add
movsl
pop
in
int3
and
xor
out
clc
sub
cli
inc
inc
add
adc
jb
test
or
inc
notb
mov
push
push
into
nop
test
cmp
mov
sbb
scas
outsb
add
dec
lock
push
mov
sub
test
fnstsw
dec
mov
insl
jbe
imul
scas
std
sbb
aas
in
jnp
out
rolb
je
std
js
ja
hlt
rcl
pop
adc
or
or
gs
cmp
cwtl
xchg
cmp
pushl
xchg
repnz
xchg
mov
cmp
inc
mov
shl
dec
fadds
mov
test
push
push
push
fistl
and
adc
insl
cwtl
mov
xor
xchg
jle
mov
mov
pop
aaa
out
cmpb
inc
loopne
xor
mov
aam
push
stc
pop
or
sub
push
jns
xchg
cmp
add
rorl
sbb
ja
in
cmp
imul
shrl
adc
sbb
call
cmp
push
dec
mov
ret
sub
pop
ret
add
push
lods
or
stc
mov
lods
sub
xchg
out
xchg
call
xor
pop
inc
fcmovb
aad
push
adc
push
pop
xor
push
or
mov
push
rorl
push
cmp
popf
mov
dec
iret
pusha
sub
in
sub
mov
lea
cmp
aad
mov
adc
push
cmp
push
lret
in
cmpsl
dec
sub
ds
cmp
enter
mov
loopne
inc
aaa
sub
lods
data16
and
or
push
pusha
aad
adc
clc
out
cmpsb
and
loopne
inc
xchg
pop
cmp
test
mov
jl
das
add
xor
xor
adc
ljmp
xor
sub
lea
loope
int3
test
add
push
mov
clc
cmp
popa
fcoms
in
fists
lcall
outsb
loope
cmp
loope
sarl
int
movsb
mov
cmp
xchg
adc
dec
push
fcmovbe
fcomip
orb
std
pushf
dec
adc
xchg
mov
xor
cld
adc
cli
mov
and
cmp
xchg
jo
pop
jae
dec
cmpb
lods
jge
out
xchg
cmp
push
bound
std
daa
scas
loope
cmp
mov
jne
pop
jge
xchg
mov
adc
mov
push
ret
xchg
mov
daa
push
mov
jae
or
outsl
cltd
inc
inc
mov
jg
lods
cmc
mov
mov
dec
int
xchg
pop
pop
jne
dec
pop
xchg
movsb
popa
push
sbb
and
push
xchg
in
or
ret
xlat
pop
lods
in
push
mov
push
mov
sbb
add
mov
ljmp
fs
fcmove
out
test
xchg
pop
mov
lock
pop
push
push
or
sahf
fwait
xlat
cmpsb
decl
push
pop
clc
jmp
dec
pushf
leave
pushf
add
mov
cmpsl
aas
adc
mov
das
mov
adc
cmc
jbe
testl
sub
cmp
xor
aam
and
outsb
stos
mov
shr
ror
dec
cmc
insb
lret
insb
cmp
rorl
push
adc
ret
pop
clc
orl
mov
fimull
movsb
push
pop
dec
leave
jb
jo
xchg
subb
mov
into
cmc
cmpsb
insb
mov
and
loopne
leave
imul
cmpsl
xlat
stos
imul
mov
pop
xchg
push
mov
fisubs
xchg
and
std
xor
pop
xor
ja
sub
jne
lret
leave
add
sub
cld
lgs
lret
xchg
xor
lahf
mov
movsb
sbbl
outsb
cmp
out
fisttpll
push
popa
leave
mov
mov
mov
mull
adc
jmp
and
xchg
ror
push
xor
lea
in
add
lret
loop
xchg
jmp
adc
inc
sub
rclb
and
push
jp
repz
sbb
pcmpeqw
addr16
stc
add
xchg
shll
ss
mull
mov
sub
push
inc
jbe
lret
clc
mov
dec
cmp
xchg
arpl
mov
jbe
and
out
jae
sbb
pushf
mov
orb
mov
pushfw
cmp
movsb
add
dec
inc
mov
mov
insw
add
dec
cmpl
ljmp
stos
adc
mov
jae
jnp
add
arpl
out
test
cmp
in
or
add
pushf
fdivrs
and
jge
cmp
divb
pop
cwtl
cmp
pushf
xor
jbe
cmpsb
mov
jae
mov
mov
xor
and
sub
or
mov
sub
mov
mov
sbb
int
pop
test
inc
lcall
movsl
popf
and
pop
push
rcrb
cmp
in
test
inc
sbb
ret
push
mov
testl
add
aad
sbb
enter
int3
xchg
out
loop
pop
xor
insl
inc
fimull
icebp
test
inc
mov
popa
xchg
add
and
mov
cmovae
add
xchg
cltd
fsubr
sub
scas
and
insl
push
cwtl
xchg
loope
jmp
pop
daa
lock
repnz
ficoml
mov
addl
sub
fisttpll
push
out
mov
inc
bound
popf
xchg
nop
movsb
mov
addr16
fucomp
int3
je
cmpsl
out
push
xchg
sub
hlt
adc
and
and
xchg
lock
xchg
and
and
sub
rorl
mov
inc
inc
cmpsb
cli
mov
insb
insb
sbbl
das
rorb
int3
insb
mov
sbb
gs
das
std
int3
xchg
push
hlt
xlat
sub
push
push
mov
xorb
ds
leave
lods
inc
add
dec
and
dec
mov
push
mov
pop
or
movl
pop
shlb
cli
inc
inc
xchg
push
mov
fwait
sbb
test
xchg
enter
mov
cmp
lods
cmp
sub
shll
rclb
jge
push
cld
loope
int
cmp
inc
mov
mov
pop
xchg
push
add
adc
out
loopne
addr16
adc
ret
jae
ss
in
sbb
push
filds
pop
adc
ret
adc
adc
jno
imul
loopne
sub
jp
xchg
stc
test
or
xor
inc
inc
mov
aaa
push
insb
jl
int
cli
xor
aad
mov
inc
movsb
mov
xchg
mov
xor
add
xor
jecxz
inc
inc
movsb
sahf
in
fisubs
xlat
xchg
sub
jno
testb
fsub
insl
mov
adc
xor
mov
lods
popa
inc
sbb
lea
fistpll
rolb
jb
inc
xor
ds
mov
rorb
inc
jno
push
push
inc
pop
repnz
mov
push
psubsw
pop
cmovno
out
aam
adc
mov
lret
inc
mov
andl
pop
aaa
push
jne
sub
lods
lret
ja
pop
movsl
pop
jle
push
or
orb
or
subps
mov
xchg
mov
cmp
and
push
enter
push
sbb
jnp
and
test
jnp
call
jbe
imul
lcall
cmp
dec
lods
fiaddl
pop
hlt
mov
std
jle
inc
fcos
ljmp
add
test
hlt
sbb
fildll
and
inc
pop
add
pop
xchg
lock
or
mov
push
test
test
js
sub
shrl
aad
testb
xor
in
lea
loopne
rorl
mov
jle
clc
ljmp
push
and
cmc
inc
and
sub
lea
loop
scas
mov
xchg
daa
pop
push
cltd
mov
dec
rclb
push
dec
ret
jb
mov
lret
lea
pop
xor
pop
lcall
out
sub
sub
pop
fisttpll
jg
insl
into
sbb
imul
movsl
pop
adc
idivb
sbbb
repnz
gs
pushf
sti
daa
imul
inc
or
into
mov
ja
sbb
and
mov
shll
xor
sbb
lcall
dec
lock
mov
je
and
scas
lods
insb
mov
incl
dec
mov
aam
mov
lods
xchg
adc
bound
loope
mov
pop
enter
or
dec
jne
lods
mov
mov
xor
lcall
jecxz
inc
sahf
pop
pop
jecxz
ss
pop
outsb
cld
aaa
xchg
ja
xchg
and
sub
mov
adc
mov
imul
xchg
ret
out
cld
lret
sbb
pushf
push
ret
add
cmp
xchg
jg
fiaddl
sahf
sbb
lods
insl
or
dec
xchg
inc
or
xchg
insb
inc
sub
inc
inc
adc
dec
ret
out
pop
dec
cli
xor
add
dec
scas
xchg
sub
insl
pop
pop
jp
stos
mov
mov
fistps
push
jg
xor
mov
popf
dec
pop
mov
add
cld
aas
ljmp
fldt
cmp
jmp
adc
in
popf
fs
leave
imul
sub
dec
push
pop
addr16
push
rcl
outsb
add
push
iret
icebp
pusha
out
inc
rcrl
sbb
adc
movsb
test
imul
xchg
dec
mulb
jg
and
cmc
hlt
frstor
jp
or
sub
loope
lahf
xor
inc
sub
sbb
rol
jae
and
pop
scas
push
inc
inc
fimull
leave
adc
sub
mov
jl
jl
fimull
std
in
sub
adc
test
xchg
push
adc
add
test
lods
jnp
add
and
sub
pusha
mov
jne
orl
mov
in
iret
push
inc
jno
jbe
xchg
jl
pushf
js
stos
adc
jne
cmp
fwait
xchg
mov
xchg
jne
dec
mov
or
cmpb
std
orl
lea
out
inc
fs
or
mov
inc
sbb
and
dec
mov
mov
mov
inc
fisubs
iret
cmpsl
xor
xlat
shl
orl
in
push
das
ljmp
scas
sarl
and
out
addr16
loopne
dec
mov
push
adc
ja
rcll
cmpsl
das
cmc
lahf
push
inc
sub
mov
mov
mov
jl
add
dec
jg
push
push
add
inc
sub
push
pop
dec
js
sub
ljmp
push
scas
pusha
jb
sbbl
inc
rcr
adc
mov
mov
push
inc
enter
adc
xor
jecxz
add
idivb
ljmp
adc
icebp
xchg
push
cmpsl
loop
adc
fistps
jg
imul
push
mov
push
es
mov
into
dec
jbe
mov
aaa
jns
rcll
pop
sub
mov
cmp
inc
aas
and
ds
and
pushf
adc
jne
xor
cltd
or
insl
in
lods
fadds
jmp
fs
cmp
movsb
mov
je
mov
cmp
cwtl
out
scas
adc
or
cs
rolb
movsb
test
nop
xor
jmp
flds
call
push
xchg
inc
les
dec
movsb
test
cmpl
push
xchg
and
nop
inc
cmc
mov
jo
jb
pop
inc
adc
push
test
xor
out
enter
bound
mov
mov
icebp
mov
xchg
fisttpll
insb
lret
push
out
arpl
sti
jb
push
cmc
mov
sbb
cmp
repz
xchg
dec
mov
mov
sbb
rcll
flds
fisubrl
xor
jp
mov
pop
data16
insb
subps
mov
outsl
xor
sti
das
cltd
cmp
aad
test
pop
lret
mov
push
mov
push
sahf
sbb
jl
add
ret
sti
add
xor
outsb
jp
sbb
ljmp
sub
pusha
in
cmpsb
or
cmp
popf
sarl
and
mov
cmpsb
mov
into
inc
loope
pushf
jns
out
je
hlt
and
call
push
and
mov
int
cltd
ficoml
jmp
dec
xchg
and
sbb
fstpt
cmp
cmp
stos
push
jmp
mov
or
inc
mov
shlb
icebp
fnstsw
sarb
dec
sbb
or
adc
addr16
mov
push
jnp
cmp
jp
jno
std
mov
jle,pn
enter
data16
mov
dec
sbb
sub
arpl
jle
sbb
cld
lret
pop
add
dec
std
inc
out
pop
in
mov
faddl
xor
ret
fcmovnb
xor
push
mov
fcos
adc
jecxz
sahf
aam
lea
adc
pop
sub
add
outsb
sarb
cmp
sub
stos
mov
cmp
popa
pop
orl
push
ljmp
sahf
sahf
mov
test
pop
mov
out
pop
rolb
pop
notl
test
mov
out
xchg
sbb
into
iret
sbb
pop
mov
rcll
xor
test
loopne
dec
jae
cmp
mov
cli
or
int
sbb
push
and
scas
roll
adc
xor
mov
add
mov
lea
mov
sub
add
inc
sbbl
out
mov
daa
arpl
add
dec
enter
test
xchg
pop
out
xchg
lods
outsb
das
lahf
cmc
repz
pop
dec
sub
aad
fs
mov
pushf
mov
aaa
scas
dec
sbb
dec
xor
xchg
fstp
push
xlat
scas
fcoms
test
lcall
sbb
or
and
movsl
roll
insl
add
mov
sub
push
cmc
outsb
addr16
mov
test
cmp
cld
mov
aas
test
xchg
mov
outsl
notl
test
cmp
jno
shlw
add
int
scas
popf
popa
in
push
je
testl
xor
clc
xor
jecxz
sub
mov
lock
stos
xchg
sub
cmpsb
inc
clc
xchg
imul
sti
loopne
sbb
lods
push
cmpsl
mov
adc
cwtl
in
xchg
lcall
mov
aaa
mov
or
shrb
repnz
out
xchg
push
jae
adc
dec
std
jbe
fwait
sbb
or
mov
adc
pop
push
fistps
mov
repnz
or
cmp
lahf
imul
js
outsl
test
jecxz
adc
or
lods
scas
test
insl
xor
or
inc
enter
push
sbb
icebp
ss
push
xor
sub
fnstcw
jl
cmp
dec
or
add
stos
push
sahf
repnz
jb
mov
jns
gs
sbb
jecxz
add
cltd
loope
gs
add
ja
xor
dec
jb
mov
jbe
and
hlt
push
fs
pop
aas
cmpsl
inc
outsl
loop
adc
ror
jae
lcall
imull
mov
adc
mov
loop
jb
test
mov
ds
lods
mov
xchg
sti
jo
dec
xor
repnz
repz
inc
cmpsl
add
or
push
into
fs
outsl
leave
xchg
inc
insl
push
xchg
adc
mov
das
popa
test
in
inc
lret
aam
inc
xchg
mov
pop
out
ud0
iret
das
das
iret
aas
decl
out
pop
lahf
outsl
jg
dec
scas
pop
pop
scas
dec
mov
pop
out
ud0
iret
das
das
iret
aas
decl
out
pop
lahf
outsl
jg
dec
scas
pop
pop
scas
iret
idiv
imull
lahf
out
xorps
iret
scas
test
pop
lahf
outsl
jg
outsl
scas
pop
pop
scas
dec
mov
pop
out
ud0
dec
das
ror
xchg
push
pxor
out
or
fbld
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
pushl
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
push
fidivs
ljmp
add
leave
sahf
mov
dec
test
out
cmp
sub
fimull
lret
sub
pop
lcall
leave
pop
mov
jb
push
xor
or
cmp
sub
jl
or
pusha
out
pushf
dec
stos
add
push
mov
cwtl
cltd
pop
in
fistps
enter
xchg
insb
mov
dec
pop
sahf
sub
rclb
push
stos
rorl
addl
adc
mov
add
in
push
sbb
test
pop
addps
mov
addr16
mov
xchg
cmp
cmp
dec
push
icebp
fstps
pop
inc
jnp
xchg
es
mov
pop
fidivl
inc
jl
pop
mov
daa
mov
fisubrl
push
bswap
xchg
lds
push
pushf
or
aaa
movb
adc
cmp
jns
sbb
sub
pop
test
and
mov
aam
mov
cld
lret
popa
or
mov
jb
dec
mov
push
or
cmp
or
cmp
sbb
popa
js
push
mov
and
movsl
jge
inc
xchg
aas
cmp
push
or
clc
sbb
cmp
or
dec
scas
inc
sbb
xchg
enter
rcrl
cltd
mov
sub
pop
stos
push
lods
or
cmp
dec
xchg
push
mov
imul
fstps
leave
or
cmp
sub
fimull
lret
sub
pop
lcall
cltd
pop
mov
jp
push
sbb
or
cmp
sub
fcmove
pushf
xchg
xchg
adc
jp
out
lcall
lahf
psrld
inc
jb
sbb
pop
jmp
iret
loop
stos
aad
ss
cmp
mov
sbb
scas
jg
sbb
test
xor
mov
sbb
mull
adc
xor
jmp
or
cmp
cli
xchg
call
xbegin
cmp
dec
xor
dec
stc
out
pushf
stos
xchg
xchg
jno
push
movsb
dec
lret
frstor
enter
das
pop
sub
popf
out
sub
es
lcall
dec
push
in
out
push
cwtl
imul
or
mov
pop
and
pop
insb
loopne
mov
xor
fsubs
push
mov
jecxz
fs
cmpsl
imul
gs
sub
aad
cmp
incb
movsb
mov
dec
mov
cmc
lret
pop
adcl
mov
gs
mov
add
pop
dec
pop
adc
mov
dec
mov
cltd
jge
insl
inc
mov
loope
xchg
cld
test
ljmp
repnz
adc
sahf
jmp
lea
xchg
xchg
cmp
xor
gs
in
push
daa
push
mov
mov
rorl
pop
inc
ljmp
xchg
sbb
scas
dec
adcl
lods
xor
daa
mov
and
movsb
popa
scas
dec
dec
cwtl
movsb
and
push
mov
mov
addr16
sbb
call
pusha
dec
jmp
push
adc
pop
xchg
insl
and
pop
jmp
lea
xlat
shrb
mov
xchg
adc
ror
out
mov
popw
mov
lds
hlt
inc
sbb
js
aam
adc
test
xchg
lock
aas
mov
mov
xchg
sbb
andl
sbb
jne
mov
mov
mov
xchg
insl
inc
jo
aam
sbb
mov
mov
ret
jge
rcrb
mov
and
rorb
add
fxch
bound
shll
fsub
push
cmp
cmpsb
je
xor
test
es
adc
or
or
mov
mov
clc
add
fsubl
or
lea
push
gs
jno
std
mov
scas
lea
jbe
arpl
enter
and
ss
bound
enter
add
outsl
cmp
sbb
sub
xor
aas
lods
insl
mov
jge
inc
daa
mov
icebp
or
xor
xchg
js
ljmp
les
jbe
xchg
mov
stos
jl
gs
push
jae
decb
pop
sbb
xor
mov
pop
lods
inc
push
aam
test
inc
pop
mov
adc
imul
ficompl
xor
cmp
add
add
test
stos
repz
not
mov
add
adc
pop
inc
push
das
call
cld
push
loop
mov
rcr
jbe
test
pusha
xchg
pop
lods
xor
xlat
adc
sbb
icebp
popf
inc
push
aam
loop
xchg
sub
push
jl
ret
xchg
xchg
scas
stos
lds
cmp
mov
jnp
cmpsl
push
rclb
jmp
xor
cmp
adc
add
rolb
push
sti
jmp
in
mov
stos
jbe
lds
call
aad
xor
lcall
mov
mov
mov
enter
sti
jp
xchg
push
and
sti
data16
and
clc
push
sub
inc
push
or
jno
dec
push
cmovns
clc
xor
mov
pop
cwtl
sbb
mov
jb
out
dec
push
pop
jle
arpl
pop
aaa
movsb
js
rcr
jl
iret
popa
inc
mov
xor
scas
idivb
add
pop
and
sbb
sub
cmpsb
pop
mov
pop
cmpsb
lret
pop
push
insb
inc
inc
leave
cmp
fstl
and
mov
sub
test
in
imul
xchg
aad
jns
sahf
mov
push
inc
inc
dec
loop
and
nop
lock
xchg
mov
mov
arpl
push
or
std
dec
xchg
repz
xor
idivb
jnp
out
mov
loopne
rclb
or
mov
inc
fildll
mov
and
fdivrl
lds
mov
cmp
push
xchg
fstpl
add
loope
outsl
jg
fisubs
adc
sub
jo
or
jno
xchg
lahf
gs
nop
fwait
add
xchg
addr16
pushf
test
nop
sub
js
test
scas
stc
push
adc
test
mov
xchg
push
outsl
test
je
push
enter
out
jge
je
or
pop
mov
frstor
or
sbb
inc
mov
aaa
aad
mov
adc
out
nop
cmp
cmp
sahf
pop
xor
mov
int
mov
jae
fsubrl
add
repz
out
sub
cltd
push
dec
dec
aas
push
xchg
sub
and
ds
loopne
sub
push
jno
fwait
hlt
fcoml
inc
pop
jl
xchg
pop
dec
stos
xchg
xchg
loop
adc
dec
xchg
mov
mov
dec
ret
cmc
pop
cli
or
sbb
or
lcall
push
jg
les
mov
and
jns
lret
jne
inc
das
and
sti
jbe
cli
fcomps
add
add
xchg
loope
nop
mov
jge
push
add
mov
cltd
xor
cmp
jg
mov
sub
adc
divb
xor
push
mov
int
sbb
add
jmp
shll
sbb
xlat
test
lret
fwait
hlt
sbb
fidivrs
scas
fimuls
inc
mov
out
adcb
scas
pop
dec
and
es
sbb
inc
sbb
fadds
imul
push
lcall
cwtl
push
xor
mov
or
adc
aaa
lods
pusha
jmp
into
sub
aas
or
je
and
dec
cmp
and
pop
int3
pop
lea
sbb
push
aam
je
xor
subb
sub
sahf
das
lret
ds
icebp
dec
mov
sub
ds
arpl
in
ret
out
enter
lret
mov
dec
in
mov
or
push
add
inc
imul
mov
stc
push
std
adc
dec
je
fnstsw
dec
pop
xor
fistps
mov
dec
inc
mov
push
rol
xchg
es
pop
sahf
mov
test
or
ss
inc
adc
xchg
mov
ret
adc
mov
xchg
pop
cs
aam
and
dec
mov
arpl
cmp
or
mov
mov
xchg
outsl
mov
mov
add
xor
cltd
mov
cmp
movsl
mov
pop
sub
fldl
test
mov
rorb
outsl
mov
js
add
popf
daa
rcrb
nop
add
orl
loope
addr16
jge
cmp
cmpsl
or
fsubl
xor
xchg
imul
cmp
dec
sub
mov
leave
xor
aas
xor
push
mov
cmpsl
xchg
ljmp
mov
mov
test
movsl
sti
mov
push
pop
mov
cmp
sub
aas
es
testl
movsl
pop
ds
push
or
cmp
and
dec
pusha
xor
leave
into
enter
ret
rolb
out
dec
adc
xor
pop
out
mov
aam
sub
sub
jbe
dec
xchg
mov
int3
dec
divb
mov
into
jle
lcall
adc
loope
adc
sar
fmul
push
test
mov
inc
imul
adc
scas
sub
fidivrs
mov
adc
mov
std
dec
test
jo
push
sub
xor
add
or
mov
adc
rcr
test
mov
xlat
xchg
std
arpl
repz
jge
std
enter
jae
arpl
fnstsw
inc
fsubs
pop
arpl
lahf
or
dec
dec
cltd
inc
adc
sub
or
mov
dec
jl
mov
adc
push
push
add
xchg
mov
lock
xchg
stos
insb
negb
sbb
test
scas
add
push
aad
sbb
and
cli
and
aam
push
sbb
xor
adc
bound
jmp
mov
es
jno
loopne
jmp
out
repz
test
xchg
pop
repz
pop
pop
inc
popf
inc
or
jno
sarb
ror
out
push
icebp
stos
ljmp
mov
sarl
cmc
jns
hlt
pop
xchg
push
adc
push
out
cmp
je
jno
or
mov
push
js
out
lret
scas
xchg
jge
xchg
mov
xchg
push
mov
lahf
fwait
jp
mov
mov
pop
out
test
xchg
mov
xchg
mov
test
sub
sarl
cmc
cmpsl
outsb
insl
pop
push
cmpsb
adc
xchg
cmp
mov
lods
mov
data16
das
je
ja
testb
mov
popa
pop
mov
pop
out
jge
mov
leave
xchg
fisttps
pusha
adc
pop
sbb
xor
aas
pop
adc
xor
adc
xor
lcall
dec
mov
inc
ret
popf
outsb
cmp
jmp
pop
repnz
add
mov
cmpsl
adc
sbbl
jl
jo
sub
dec
xor
mov
mov
or
cmp
in
subb
sbb
je
dec
cmp
mov
mov
aas
popf
cmp
bnd
and
enter
mov
adc
int
cli
sbb
xlat
push
cmpsb
add
pop
lock
stos
cltd
aaa
enter
add
sti
inc
sub
sub
in
jmp
std
add
push
insl
sub
dec
das
jbe
and
aam
jle
lret
xchg
loopne
push
mov
cli
inc
cmc
or
popa
loopne
nop
sbb
pop
popf
push
divl
repnz
inc
or
rorb
mov
pop
je
inc
mov
jns
in
es
lock
inc
pop
out
data16
lret
testl
jns
leave
fldcw
add
clc
dec
sub
cmpsb
inc
and
xchg
xchg
or
cmp
mov
jle
ds
adc
jl
insl
jmp
outsl
and
dec
cmp
in
es
push
inc
js
fadds
das
jg
inc
ljmp
mov
xchg
test
addl
pop
push
fsubrs
bsr
and
sbb
and
cmpsl
dec
ljmp
xor
leave
add
shll
pushf
add
or
sbb
pop
mov
push
jl
cmc
or
jg
xor
cs
loopne
and
add
mov
push
ja
in
jno
mov
adc
scas
ret
pop
in
outsl
imul
jecxz
stc
xor
push
lret
pop
mov
dec
je
int3
mov
inc
mov
cmp
jns
in
sbb
pushf
ret
and
inc
into
xchg
and
pop
shlb
imul
mov
mov
xchg
pop
pop
and
or
daa
je
mov
mov
sub
fs
xlat
out
gs
addr16
cmp
and
xlat
jbe
sub
xor
sbb
xor
in
shl
or
fdiv
jae
mov
lret
pop
push
loop
ja
stos
cmp
mov
inc
sbb
mov
call
out
mov
js
lods
adc
fwait
pop
mov
push
cmp
int
stos
inc
scas
mov
pop
fcompl
aaa
inc
shrl
sbb
jns
and
sub
xchg
xchg
pop
std
pop
pop
imul
rcrb
mov
pop
pop
jmp
jo
cmp
lret
pop
lret
dec
test
mov
sub
sbb
out
daa
sar
fwait
jbe
fcoms
sarb
or
in
loope
xor
pop
and
fldcw
test
and
xchg
mov
pop
adc
mov
mov
jle
iret
loop
xor
aad
push
lods
bound
mov
pop
pushf
popa
push
cmp
jmp
pop
sub
enter
fnstsw
loop
stc
or
add
in
xchg
xchg
add
mov
mov
sbb
push
in
add
mov
lcall
sub
sub
mov
sub
lock
mov
cs
mov
not
cltd
sbb
loop
inc
out
sub
cmp
cmpsb
xor
sbb
xor
pop
movsb
sahf
je
cltd
dec
add
bound
pop
mov
dec
aas
decb
pop
je
repnz
negl
or
jne
mov
fldln2
outsb
cmpsb
test
sbbb
sub
jb
mov
mov
stc
xlat
sub
icebp
nop
insl
cmpsb
pop
sar
push
int
or
xor
pop
and
mov
cmp
popf
lds
push
pop
add
test
inc
mov
mov
in
jb
push
mov
out
mov
dec
jge
ja
addr16
out
and
insb
push
minps
xchg
arpl
adc
inc
sbb
ret
jle
call
push
inc
cwtl
cld
xchg
lds
cmovo
mov
dec
sub
mov
insl
enter
xor
leave
arpl
dec
inc
pop
dec
aaa
cmc
ret
rcrb
mov
into
out
xor
movsl
ja
mov
cmpsl
and
adc
jb
lret
mov
mov
stc
cld
sub
jae
mov
sti
inc
and
cwtl
xchg
pop
jb
xchg
pop
jne
mov
stc
xor
mov
xchg
jle
in
out
frstor
enter
aaa
test
dec
sub
adc
test
int
scas
push
lea
push
stc
popf
int3
scas
cmpsb
int3
mov
fwait
sub
xor
clc
hlt
aaa
xorl
inc
popa
dec
test
xor
scas
fbstp
movsb
aam
pusha
lods
nop
pop
push
fcomp
cmpsl
xchg
loop
repnz
mov
xor
fs
mov
xor
pop
cwtl
mov
cmp
fwait
push
cmp
jns
xchg
pop
testb
cmp
ret
adc
inc
fistl
and
or
and
adc
mov
pop
adc
adc
leave
test
xchg
add
dec
jmp
aam
out
test
movsb
loop
sub
inc
imul
das
fidivl
sub
testl
mov
mov
test
inc
mov
mov
sbb
sti
imul
aam
int3
jno
int
pop
psrlq
addr16
fcom
dec
xlat
insb
push
cmpsb
push
add
cmp
fiadds
xor
rcrl
add
outsl
cmc
shr
icebp
out
cmpsl
cmpsl
xor
insb
xor
lahf
push
xchg
cmpsb
repz
cmpsb
sbb
in
mov
mov
mov
leave
push
xchg
ret
jno
data16
dec
push
xchg
cld
mov
test
push
cli
mov
jge
cmpps
push
lods
xor
bound
pop
mov
cmp
lds
add
add
cli
hlt
cmp
add
mov
nopl
shll
dec
or
jmp
in
mov
xadd
nop
std
or
sbb
shlb
aas
adc
pop
movsl
inc
popa
xorl
frstor
fdivrl
and
push
lcall
insb
lret
inc
aas
ret
push
movsb
mov
mov
loope
xchg
das
xlat
sbb
sti
ljmp
ret
addb
sbb
add
xor
jp
sar
insl
mov
hlt
pop
jns
das
fists
dec
adc
and
fnsave
jne
sub
jmp
push
lea
cld
and
js
bound
adc
sbb
push
lcall
mov
add
rcrb
leave
clc
arpl
mov
and
outsb
mov
xchg
adc
pop
pop
out
icebp
xchg
scas
adc
add
out
cmp
adc
out
mov
inc
xchg
out
mull
fs
pop
pop
fwait
mov
dec
xor
pop
outsb
xchg
mov
inc
in
mov
jg
pop
nopl
ret
lahf
mov
or
and
dec
fimuls
insb
les
mov
jno
mov
and
mov
dec
sub
pop
inc
es
pushf
cmpsl
in
jecxz
rcl
enter
mov
ret
cmp
repz
jnp
test
mov
lcall
dec
and
scas
mov
mov
lods
or
lods
push
mov
sarb
jne
push
xchg
mov
inc
mov
aaa
jg
adc
insb
fisttps
cmp
and
scas
add
out
jecxz
cld
push
inc
cmp
pop
or
adc
xchg
push
push
mov
pop
outsb
sub
jl
int3
aam
sbb
and
outsl
lahf
sub
add
xchg
addr16
ret
idiv
mov
movsb
push
sub
call
sub
inc
stos
jecxz
insl
fbld
add
insb
dec
cld
and
pop
or
dec
pop
and
push
cmpsb
xchg
lds
xor
and
or
ljmp
shl
dec
lea
mov
je
cmpsl
inc
mov
mov
in
xchg
inc
outsl
shrl
in
cltd
inc
js
mov
push
test
cli
lea
arpl
aas
xchg
add
mov
test
jno
inc
arpl
jge
mov
ja
sub
push
iret
add
push
push
xchg
push
xor
pop
pop
ljmp
mov
dec
loop
mov
push
bound
int3
xchg
jbe
pusha
test
repz
loop
sub
cmp
jbe
cld
cwtl
shll
loopne
and
pop
fdivl
bound
movsb
mov
push
push
or
xchg
mov
lcall
outsb
dec
inc
xor
inc
rorl
cmp
push
pop
lods
pop
movsl
sbb
inc
in
out
push
push
or
clc
fildl
loop
dec
inc
fadd
out
lock
push
sbb
imul
daa
call
and
xor
in
pop
add
pushf
scas
mov
fstp
cmp
xor
pushf
mov
loop
inc
mov
das
notl
xchg
es
pop
mov
adc
mov
shl
xor
pop
out
adc
xor
mov
aam
out
pop
cmpsb
pop
sub
test
push
dec
bound
pop
pop
mov
mov
cs
add
sti
pop
adc
jo
add
mov
mov
and
out
dec
inc
and
mul
dec
cmpsl
add
mov
nop
cmpsl
fwait
roll
mov
filds
test
fldenv
mov
data16
add
mov
jno
cwtl
push
mov
cmp
lods
mov
dec
dec
cmc
daa
sub
std
sub
xchg
cmpsl
andl
adc
inc
adc
bound
mov
lock
pop
and
fwait
lea
and
jb
xor
sub
jo
mov
jg
stc
imul
adc
mov
xchg
and
add
in
xchg
inc
int
fisttpl
sub
xchg
popa
outsb
and
xchg
popa
add
mov
xchg
movq
sarb
mov
mov
pop
mov
jmp
daa
ficomps
leave
mov
pop
pop
lcall
pop
mov
fists
jle
mov
ffree
mov
and
add
insl
mov
rol
mov
jge
xor
inc
xor
popl
mov
mov
jno
inc
push
push
subb
pop
dec
xor
xchg
mov
adc
aam
imul
cld
stc
test
rcl
jb
int3
mov
dec
pop
add
enter
inc
mov
out
outsl
lea
imul
rclb
ljmp
rorb
insb
sub
sub
jbe
ljmp
sbb
add
adc
mov
movd
jl
in
ficoml
hlt
ljmp
adc
dec
out
gs
cmp
shl
ljmp
dec
mov
out
inc
lret
mov
je
lock
adc
out
nop
into
test
pop
repz
cmp
jbe
mov
push
int3
mov
aam
or
sar
lods
call
mov
fld
cmp
lret
xor
mov
imul
fstps
leave
or
cmp
sub
fimull
lret
sub
pop
lcall
cltd
pop
mov
jp
push
sbb
or
cmp
sub
fimuls
les
loop
out
pop
lcall
popf
pop
mov
jp
arpl
push
rorb
std
xor
into
add
and
stos
pop
lcall
cltd
movsl
jbe
adc
sbb
push
inc
push
push
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
cld
repz
and
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
hlt
add
mov
add
test
add
jl
add
je
add
insb
hlt
add
fs
add
pop
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
int3
hlt
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cmc
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cmc
add
cld
cmc
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
testb
pop
testb
push
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
testl
push
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
fcomip
add
int3
testl
add
add
lods
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
testl
add
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
clc
add
mov
clc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
stc
add
cwtl
stc
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
