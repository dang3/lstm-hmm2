rol
or
add
sub
mov
jmp
movl
xchg
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
jmp
jne
jmp
jmp
jmp
jmp
push
nop
mov
xor
shl
mov
and
nop
sub
mov
mov
mov
andl
xchg
push
mov
jmp
ror
shl
xor
mov
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
and
shl
mov
or
and
mov
nop
nop
nop
nop
nop
push
xchg
push
xchg
xor
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
push
pop
dec
addr16
sub
shl
and
sub
or
mov
jmp
push
mov
call
mov
add
or
sub
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
shlb
cmp
add
push
push
pop
xor
xor
or
mov
jmp
movb
xchg
movb
xchg
jmp
jmp
jmp
jmp
jmp
jmp
push
nop
jmp
call
push
pop
add
nop
mov
jmp
jmp
push
xchg
xor
and
ror
mov
sub
mov
mov
and
sub
mov
jmp
mov
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
sub
sub
sub
or
mov
sub
mov
push
xchg
push
push
pop
push
nop
call
nop
jmp
add
nop
push
push
pop
call
nop
jmp
or
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xor
addr16
jmp
jmp
movb
nop
movb
xchg
call
xchg
and
mov
push
xchg
call
nop
rol
mov
ror
mov
jmp
jmp
push
push
pop
or
inc
mov
sub
xchg
push
xchg
push
nop
call
push
pop
mov
nop
jmp
push
mov
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
bnd
leave
movb
xchg
movb
mov
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jle
jmp
jne
jmp
jmp
jmp
jmp
mov
push
xchg
xor
nop
push
xchg
push
mov
push
addr16
push
nop
push
mov
push
nop
jmp
push
xchg
push
push
pop
ror
shl
mov
mov
mov
add
nop
add
addr16
add
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
add
jmp
push
xchg
call
nop
jmp
push
nop
xor
xchg
jmp
push
nop
sub
or
mov
jmp
jne
jmp
pushl
mov
jmp
jmp
jmp
jmp
jmp
xchg
call
mov
mov
mov
mov
addr16
mov
xchg
jmp
mov
nop
andl
nop
push
nop
add
xchg
jmp
jne
jmp
jmp
jmp
jmp
push
addr16
cmpl
xchg
jne
push
mov
jmp
mov
nop
mov
addr16
mov
mov
ror
mov
jmp
inc
xchg
jmp
jmp
push
pop
or
sub
sub
inc
add
mov
jmp
jmp
jmp
push
xchg
dec
mov
mov
jmp
mov
nop
mov
mov
mov
push
pop
and
ror
mov
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
addr16
push
mov
push
mov
add
or
mov
jmp
push
mov
jmp
jmp
mov
shl
mov
and
rol
mov
sub
mov
mov
or
and
and
mov
and
add
push
push
pop
push
xchg
push
mov
push
nop
jmp
push
push
pop
push
xchg
jmp
push
addr16
jmp
mov
nop
nop
nop
nop
push
mov
push
or
ror
xor
mov
push
nop
ror
add
mov
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
or
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
inc
and
dec
xor
ror
and
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
mov
mov
nop
jmp
xor
xchg
inc
xchg
call
addr16
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
add
mov
mov
shl
mov
pop
jmp
xor
xchg
and
mov
mov
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
push
nop
mov
xchg
jmp
mov
xchg
mov
xchg
add
mov
add
or
mov
push
nop
call
nop
mov
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
pop
jmp
xor
or
or
mov
and
mov
ror
ror
mov
sub
xor
mov
add
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
leave
or
mov
pop
cmp
push
pop
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
icebp
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
xchg
jmp
jmp
mov
xchg
movl
mov
mov
mov
sub
sub
mov
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
pop
and
xchg
mov
xchg
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
sub
or
or
rol
mov
and
shl
inc
mov
mov
mov
jmp
je
jmp
jmp
add
xchg
call
xchg
push
push
pop
shr
rol
or
shl
pop
or
or
shl
shl
and
mov
rol
sub
mov
pop
inc
or
mov
and
mov
jmp
push
xchg
push
nop
pushl
nop
pushl
addr16
call
xchg
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
push
xchg
push
mov
pushl
xchg
call
addr16
push
popl
pushl
shl
xor
and
shl
pop
dec
shl
mov
jmp
add
pop
jmp
inc
xchg
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
shr
ror
shr
add
pop
mov
add
xor
sub
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
nop
movb
nop
movb
mov
movb
xchg
movb
xchg
movb
mov
movb
addr16
movb
xchg
jmp
movb
xchg
movb
mov
movb
nop
movb
xchg
movb
xchg
movb
mov
movb
xchg
movb
xchg
jmp
push
shl
inc
or
push
shl
dec
inc
add
and
shl
and
add
add
xor
and
sub
dec
shl
dec
test
jne
pop
pop
mov
call
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
call
push
pop
movl
mov
push
xchg
pushl
mov
call
mov
and
rol
or
add
add
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
adc
rorl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
rolb
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
xor
and
inc
xor
add
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
and
xor
or
sub
pop
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
rol
shr
xor
mov
and
and
add
and
mov
sub
xchg
add
mov
cmpl
nop
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
ret
mov
jmp
rol
sub
or
mov
or
mov
mov
jmp
shr
xor
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
je
call
push
pop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
stos
add
add
rolb
ss
mov
add
xchg
mov
mov
sub
and
shr
add
mov
and
or
shr
sub
mov
sub
mov
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
xchg
jmp
xor
ror
pop
shl
sub
xor
rol
pop
shr
and
pop
mov
ror
inc
xor
and
pop
call
xchg
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xchg
add
je
push
nop
xor
xchg
and
shl
shr
mov
pop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
repnz
incl
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
idiv
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
xor
or
and
dec
mov
mov
nop
andl
xchg
add
mov
mov
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
jmp
call
xchg
mov
dec
dec
xor
mov
push
push
pop
call
nop
shl
mov
movl
nop
call
push
pop
sub
and
shr
add
shl
pop
jmp
call
mov
xor
pop
pushl
mov
push
addr16
pushl
xchg
push
push
pop
call
mov
xor
ror
sub
dec
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
or
add
shlb
ret
ljmp
shr
sub
mov
sub
nop
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
xor
mov
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
lea
jmp
jmp
jmp
jmp
jmp
jmp
xor
xchg
inc
addr16
jmp
call
push
pop
mov
mov
or
shl
shl
mov
mov
xchg
mov
mov
and
mov
call
xchg
jmp
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
xchg
add
nop
cmp
push
pop
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
cld
incl
clc
jmp
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
pop
add
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
add
je
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
xchg
inc
shl
sub
sub
mov
movsbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movb
or
jmp
jmp
jmp
jmp
jmp
jmp
lock
incl
mov
jmp
pushl
rol
inc
shr
pop
mov
and
shl
dec
inc
and
add
rol
mov
add
xchg
jmp
and
mov
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
add
add
and
imul
or
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
rorl
mov
mov
addr16
mov
push
pop
jmp
movb
xchg
jmp
mov
xor
xor
mov
and
mov
mov
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
fsubrs
inc
and
and
and
or
mov
cmp
mov
je
jmp
push
mov
push
mov
mov
mov
mov
nop
mov
nop
call
nop
cmpl
mov
je
cmpl
addr16
jmp
or
push
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jg
call
xchg
or
and
mov
movl
nop
jmp
je
cmpl
push
pop
jne
shl
add
and
mov
jmp
jmp
mov
xchg
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
sub
xor
xor
mov
mov
add
xchg
cltd
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
mov
add
xchg
xor
xchg
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sar
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
or
xor
rol
shl
mov
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
lret
dec
sub
mov
push
push
pop
jmp
incl
xchg
jmp
sub
sub
mov
add
and
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
incl
xchg
jmp
incl
nop
mov
xor
and
or
sub
mov
cmp
xchg
jl
xor
mov
jmp
jmp
or
xchg
cmp
nop
jne
or
inc
add
mov
pop
xor
mov
mov
or
rol
xor
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
and
or
and
mov
and
mov
cmp
xchg
jne
and
xchg
add
xchg
add
nop
add
xchg
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
add
ret
rorb
add
xor
xchg
inc
xchg
or
mov
mov
and
nop
inc
nop
jmp
sub
inc
xor
and
mov
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
nop
add
mov
and
mov
ror
add
pop
and
ror
or
xor
pop
and
mov
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fucomp
call
movl
nop
push
addr16
xor
dec
shl
sub
mov
jmp
xor
mov
add
shl
or
dec
dec
pop
dec
inc
and
sub
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
addr16
sub
xchg
sub
mov
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
jmp
movb
nop
movl
xchg
call
mov
jmp
inc
nop
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
movl
addr16
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
call
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
add
jmp
push
mov
and
and
rol
xor
xor
mov
call
nop
add
and
sub
pop
sub
and
pop
or
xor
and
dec
shl
pop
jmp
mov
jmp
jmp
jmp
xor
or
or
shl
shr
pop
inc
xchg
inc
push
pop
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
jne
add
nop
cmpl
xchg
jne
rol
shr
inc
pop
ror
rol
rol
rol
mov
mov
mov
add
addr16
jmp
shl
dec
dec
mov
add
mov
mov
addr16
sub
xchg
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
pop
pusha
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
jmp
popa
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
and
mov
call
push
pop
call
xchg
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
ror
sub
or
add
mov
mov
mov
mov
sub
xchg
mov
xchg
incl
xchg
dec
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
and
add
call
mov
jmp
xor
mov
dec
dec
xor
xor
pop
or
rol
shr
mov
inc
pop
add
or
and
and
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jl
and
jnp
clc
pop
push
popl
sub
inc
rol
xor
pop
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
add
xchg
jmp
mov
add
mov
mov
mov
mov
jmp
call
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
cmp
xchg
jmp
or
addl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
jmp
sbb
mov
add
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
in
incl
enter
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
add
ror
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmp
mov
jmp
in
out
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
push
xchg
pushl
mov
nop
nop
nop
nop
nop
call
mov
or
mov
mov
xchg
call
xchg
jmp
or
inc
sub
sub
add
mov
nop
nop
nop
nop
nop
sub
nop
shr
mov
mov
nop
incl
xchg
dec
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
inc
add
add
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
add
mov
mov
xchg
shr
mov
add
sub
shl
mov
call
mov
nop
nop
nop
nop
nop
mov
addr16
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
orl
xchg
and
dec
mov
mov
or
add
mov
and
mov
pushl
and
and
or
and
mov
pop
rep
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
nop
dec
nop
shl
mov
mov
add
mov
mov
movzbl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
roll
xchg
nop
nop
nop
nop
nop
lea
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
xor
mov
call
addr16
jmp
popf
push
push
call
mov
push
xchg
call
mov
xor
xor
mov
mov
xchg
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
push
xchg
enter
jge
add
add
add
cmp
stos
add
add
xor
shr
or
pop
sub
ror
xor
sub
mov
add
push
pop
sub
nop
jmp
inc
nop
cmp
xchg
jb
inc
mov
cmp
nop
jae
inc
mov
inc
xchg
nop
nop
nop
nop
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
je
xor
mov
and
add
shr
mov
sub
xchg
mov
mov
incl
xchg
dec
nop
jmp
pop
sub
roll
pop
and
mov
sub
push
pop
shr
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
adc
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shl
incl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
js
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jle
mov
nop
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
shr
sub
mov
xor
dec
mov
jmp
stc
inc
xor
mov
xor
xchg
inc
addr16
jmp
or
sub
xor
mov
rol
xor
mov
or
add
mov
jmp
mov
add
addr16
cmp
mov
nop
nop
nop
nop
nop
jne
and
nop
add
nop
add
addr16
add
xchg
pushl
or
dec
shl
shl
xor
pop
jmp
mov
addr16
incl
xchg
incl
nop
mov
nop
xor
mov
nop
nop
nop
nop
nop
cmpl
xchg
je
sub
and
mov
and
ror
mov
pop
sub
xchg
rol
and
sub
add
and
pop
add
ror
mov
and
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
decl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
add
mov
nop
nop
nop
nop
nop
cmpl
mov
jne
call
xchg
mov
nop
mov
xchg
mov
xchg
xor
rol
rol
or
add
mov
nop
nop
nop
nop
nop
call
nop
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jne
or
push
pop
push
xchg
or
xor
mov
nop
nop
nop
nop
nop
call
mov
push
mov
mov
nop
call
mov
mov
nop
or
mov
nop
nop
nop
nop
nop
shr
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
add
inc
shr
or
and
add
nop
nop
nop
nop
nop
add
xchg
jmp
xor
xor
shr
xor
sub
mov
add
nop
push
nop
call
xchg
cmp
nop
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
je
xor
inc
xor
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
xlat
ror
add
or
mov
pushl
and
pop
nop
nop
nop
nop
nop
shr
sub
ror
xor
mov
add
mov
nop
nop
nop
nop
nop
add
xchg
jmp
jns
movzwl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
add
sub
sub
inc
mov
add
xchg
add
push
pop
nop
nop
nop
nop
nop
push
mov
pushl
xchg
call
push
pop
mov
xchg
add
xchg
add
nop
xor
and
shl
mov
xor
mov
test
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
test
pop
in
incl
pop
jne
call
xchg
mov
mov
nop
nop
nop
nop
nop
and
mov
pushl
dec
inc
rol
sub
xor
pop
or
xor
pop
inc
dec
sub
and
and
pop
sub
mov
or
sub
pop
mov
xchg
nop
nop
nop
nop
nop
cmp
xchg
jne
and
and
add
add
mov
mov
xchg
or
sub
and
add
add
xchg
leave
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
jns
jp
pushf
push
sti
addr16
fsubrl
into
pop
je
enter
dec
push
jg
add
mov
cmp
rcll
sub
in
imul
or
xor
rorb
mov
push
in
and
jl
xor
ficoml
push
arpl
in
fdivrl
jle
ja
mov
cs
iret
and
repz
adc
adcb
dec
scas
pop
ss
xchg
pop
in
aam
insl
xor
int
jmp
int3
pop
pop
outsb
and
aad
dec
sar
dec
pop
sub
push
in
jmp
decl
test
push
mov
cwtl
je
nop
jg
add
outsb
loop
outsb
add
mov
xchg
pop
fmull
mov
negb
sbb
mov
inc
fildl
jmp
mov
pop
add
leave
mov
ret
mov
and
sbb
stos
add
rcr
inc
out
pop
rorb
push
xchg
mov
nop
addr16
sbb
xor
int3
xlat
sub
and
xchg
mov
mov
outsb
inc
movsl
fsubr
jle
xchg
idivb
xchg
adc
dec
or
int
repnz
rcrl
mov
pop
fwait
sbb
cmp
cmp
in
push
or
push
movq
int
mov
rcrb
cmpsb
sub
push
xor
outsb
mov
inc
and
ret
xacquire
or
stos
mov
inc
push
push
push
mov
and
in
mov
fimull
addr16
adc
push
movsb
fnstcw
jle
xchg
inc
jnp
mov
stos
fcoms
cs
jnp
pop
push
sbb
and
mov
jl
push
outsl
cmpsl
mov
movsl
popl
add
dec
int
adcl
and
shl
push
lods
cmp
add
or
mov
aad
daa
lds
dec
popl
lock
jmp
testb
popf
outsl
mov
mull
jg
cmp
dec
out
xchg
jnp
shll
dec
ss
or
mov
rorl
faddp
mov
add
sbb
adc
fcom
mov
jb
cmp
nop
lret
loop
or
mov
xchg
hlt
lds
aad
xchg
mov
mov
or
push
cmc
shrb
inc
xchg
xchg
cmp
fldenv
fdiv
cwtl
push
flds
lret
adcl
daa
pusha
xor
mov
push
pop
jno
stos
fs
hlt
popf
push
gs
mov
aam
push
xchg
push
jnp
in
loopne
pop
adc
daa
ss
mov
pop
js
jmp
pop
sti
cmp
adc
fiaddl
popl
mov
jp
cmp
mov
jno
loopne
xor
dec
cmc
jne
mov
mov
add
mov
lea
sahf
sub
sbb
dec
insl
lret
push
subb
aaa
push
cmp
call
lds
test
pop
mov
imul
pusha
pop
push
xchg
test
xchg
add
mov
test
test
fldenv
inc
popf
pop
mov
cmp
jge
sbb
repnz
lcall
lods
mov
loop
out
mov
inc
xchg
rclb
ret
push
mov
cmpsb
xor
pop
rorl
inc
clc
xor
popf
in
dec
test
pmaxub
xlat
pop
js
lds
ja
ret
sub
jge
jmp
mov
insb
xor
xlat
mov
mov
and
in
fcompl
push
mov
pop
jp
das
or
xor
push
jg
fcmove
sti
jl
call
addr16
jecxz
cld
sub
pop
inc
rcrb
inc
jb
popa
push
xor
inc
cmp
push
arpl
mov
das
lahf
xchg
dec
mov
push
lcall
loopne
jge
sbb
adc
pushf
push
xor
cs
jp
out
leave
push
push
or
addb
adc
inc
push
xchg
push
xchg
repz
inc
jle
pop
inc
push
mov
test
add
and
xchg
popa
mov
mov
sbb
xchg
nop
dec
std
jp
loope
and
cmc
int3
mov
cmp
cmp
arpl
shl
cmp
adc
and
sahf
fsubrs
leave
xchg
mov
mov
js
test
push
ret
add
aaa
movsl
xor
loope
jne
add
pop
jg
clc
cmp
lock
mov
fcmovu
leave
mov
xor
shll
sbb
clc
pushl
cmp
push
jmp
les
and
sbb
cmp
jg
or
xchg
mov
sbb
inc
loop
lods
or
test
jmp
mov
fwait
push
or
stc
addr16
push
dec
jb
sti
cld
or
movsl
dec
lds
xchg
sahf
addr16
cwtl
in
dec
dec
in
scas
loopne
jle
rcrb
loop
xchg
scas
jb
sub
cli
sub
mov
inc
cmp
lods
pop
xchg
adc
fdivs
jecxz
push
sub
cmp
push
fidivl
xlat
outsb
cmp
sub
outsl
and
repnz
loope
mov
call
add
addr16
sbb
mov
mull
and
shrl
bound
sub
arpl
shll
into
dec
or
dec
sti
mov
leave
push
rorl
int
es
rcl
xchg
jg
bound
call
sbb
cltd
popa
fsubp
pextrw
sub
fwait
das
pop
pop
test
pop
push
mov
and
in
pusha
mov
jp
fsubrs
aad
imul
inc
aaa
mov
adc
push
movsb
aas
addb
add
sbb
cmpsl
fistpl
fwait
sahf
sbb
jae
mov
jmp
add
or
pop
pop
andl
cwtl
mov
rorb
jbe
mov
xchg
shll
cmp
pop
fsubl
leave
push
stos
ret
sub
xchg
lods
mov
sbbb
sbb
push
shlb
aaa
sbb
js
mov
and
jle
pop
or
int3
xchg
pushf
test
fbld
mov
xchg
add
inc
pop
stc
mov
mov
mov
cmc
ja
stc
lret
insl
lea
adc
dec
pusha
mov
je
insb
jge
in
sbb
mov
inc
outsb
push
fnstsw
test
push
add
jbe
dec
sbb
repnz
mov
sub
fisubrl
mov
xor
cmp
lods
stos
pop
mov
push
jl
test
scas
mov
aam
stos
mov
std
push
mov
inc
pop
int
pop
cmp
fidivrs
adcl
sub
sbb
cmp
jge
pop
mov
xchg
fidivrl
push
filds
xor
dec
ljmp
cmp
shl
jnp
pop
es
mov
mov
mov
dec
les
jle
out
insb
out
and
stc
adc
mov
call
aad
sbb
xor
dec
test
mov
sarb
in
mov
or
popw
dec
testl
cmp
icebp
adc
rcrl
xchg
xchg
dec
inc
jecxz
jg
push
leave
jno
jb
lret
inc
sbb
cltd
or
pop
out
imul
adc
into
mov
mov
pop
pushf
mov
mov
lods
mov
push
xchg
sub
pop
sarl
jo
test
lock
popa
loope
xlat
leave
pusha
scas
sar
in
mov
push
cmc
jl
addr16
push
and
sub
sub
pop
jb
icebp
xchg
mov
pop
lret
inc
leave
mov
rdmsr
arpl
pop
divb
mov
sti
dec
push
sub
std
xor
xchg
rol
adc
add
nop
faddl
jns
xchg
roll
dec
popa
cmpb
mov
mov
adc
add
xchg
push
mov
lret
add
repnz
loopne
ret
xchg
dec
xlat
cmpsl
sub
fistpll
fistl
jbe
push
mov
test
adc
fimull
sub
dec
dec
jnp
mov
sbb
dec
cmp
sbb
mov
and
or
add
les
dec
es
dec
int3
ds
inc
outsl
js
movsl
mov
pop
xchg
jmp
shrl
das
xchg
lcall
and
lock
inc
pop
ljmp
jns
aaa
fucom
in
cmp
rcll
adc
adc
jbe
pop
aam
jno
fmull
mov
push
mov
aas
mov
pop
or
jbe
xchg
enter
filds
dec
sahf
sbb
sub
jae
cltd
or
adc
xor
scas
call
jl
popa
inc
adc
xor
mov
call
pop
popf
add
push
mov
outsb
dec
jl
sub
jne
push
xchg
sbb
das
or
pop
sbb
cmp
push
jle
rorb
lea
add
lods
cmp
sub
in
testl
scas
sbb
push
or
in
push
jo
or
pop
jge
and
dec
sub
push
test
lods
int
pop
add
test
mov
push
adc
fs
pop
jne
arpl
outsb
sbb
sub
aam
jge
adc
pop
enter
rol
jbe
in
xchg
add
mov
rorb
sbb
sub
mov
psrlq
scas
mov
popa
dec
jb
jge
cmc
sbb
not
sti
jg
push
jbe
and
shll
inc
shl
mov
dec
dec
daa
adc
lahf
mov
pop
push
push
arpl
cmovne
cmp
xorl
sub
jnp
xchg
sub
xorb
xor
ljmp
lret
push
push
daa
hlt
sti
lret
cmp
jno
aad
adc
movsl
pop
mov
or
inc
mov
jecxz
sub
adc
push
cvtpi2ps
sbb
dec
addr16
stc
adc
cld
js
adc
pop
sbb
cltd
fmull
mov
rorb
iret
and
jge
push
sub
rcll
inc
lret
push
jecxz
cmpsl
xlat
pop
push
sub
cmp
repnz
adc
movsb
or
fsubl
cmp
pop
mov
cltd
adc
jl
xchg
shll
push
dec
or
in
or
fdivrl
repnz
pop
imul
cli
outsl
pushf
mov
fstpl
inc
arpl
pushl
xchg
pop
inc
fcomps
in
xor
and
push
bound
jge
jb
xchg
mov
inc
icebp
andb
outsl
sbb
jge
xchg
imul
mov
jmp
scas
fs
fldenv
or
cmp
ret
pusha
pop
fmull
fcoml
mov
stos
add
mov
mov
jno
jno
inc
xchg
pop
mov
test
xchg
and
lods
leave
dec
cs
sarl
mov
mov
push
ljmp
sub
sbb
fwait
aas
mov
fstpl
mov
in
mov
mov
push
fcmovnbe
pushl
les
mov
out
push
sub
mov
inc
aam
and
packsswb
or
rol
jns
bnd
das
and
scas
xor
movsl
jb
or
or
ja
mov
negl
call
dec
pop
repnz
sbb
dec
pop
mov
into
jmp
and
mov
mov
jo
push
push
cmpsb
fdivrs
fldl
into
mov
lea
stos
sub
test
xor
pop
sub
and
loop
inc
xor
cmp
lahf
cmpsb
add
jnp
push
mov
enter
shrb
pop
inc
mov
fldcw
sbb
push
sbb
sbbb
ss
out
mov
cltd
and
dec
cmpb
mov
mov
test
cld
sub
cmpsb
dec
xor
gs
mov
jnp
add
fdivp
fs
popf
push
and
inc
in
lret
add
cmp
sbb
cmp
int
or
add
xchg
and
sbb
inc
jnp
and
ds
adc
mov
inc
pop
ret
sub
xchg
lods
mov
or
lods
adc
mov
jbe
xor
lods
xchg
call
repnz
add
sub
out
shlb
pushf
add
and
test
outsl
mov
jp
test
clc
jb
pop
js
mov
push
aaa
mov
imul
aam
insb
out
cli
mov
mov
pop
ret
test
outsb
inc
xchg
les
pop
inc
mov
stc
sbb
mov
adc
int
daa
xlat
lret
push
lahf
icebp
adc
in
popa
pop
jnp
lret
push
mov
xchg
inc
mov
jbe
jns
pop
loop
mov
shlb
aad
pop
push
hlt
mov
movsl
leave
jnp
pop
push
pop
js
push
scas
shlb
ja
sbb
je
mov
inc
jb
push
out
mov
xor
mov
xchg
inc
in
fisttpll
or
lea
loop
lock
mov
mov
popa
jbe
add
push
mov
in
js
or
les
mov
jb
sbb
nop
stos
inc
mov
add
gs
repz
jbe
mov
adc
sbb
add
aaa
or
mov
out
dec
ret
popf
ss
inc
mov
fnstsw
jae
mov
out
xchg
xchg
cmp
pushf
in
mov
mov
adc
cmp
mov
pop
mov
and
pop
cmp
leave
mov
aad
adc
popf
sub
and
sbbl
pop
popa
js
mov
nop
ret
sub
out
aad
movsb
dec
xchg
push
lea
shl
test
shll
inc
mov
or
xchg
push
imul
add
repnz
xchg
and
mov
inc
sti
inc
jne
inc
test
add
push
xor
jmp
push
ljmp
outsb
loope
ja
cld
lahf
shll
sub
mov
and
mov
mov
push
pushf
stos
push
xor
js
rorb
xchg
fldt
loop
sbb
mov
lret
mov
dec
mov
ret
ljmp
popf
pop
jbe
ja
out
out
inc
repz
mov
add
sub
xorb
dec
jnp
fnstenv
ret
cmp
in
lret
in
jae
and
push
scas
movsl
repnz
mov
nop
sbb
mov
or
mov
cltd
lock
xchg
mov
pop
test
lock
add
dec
dec
mov
inc
jae
ss
or
cs
mov
cmpsl
popf
loopne
sbbl
push
cmp
push
push
ret
mov
and
dec
mov
shlb
push
xor
jl
mov
inc
dec
inc
repnz
pop
cmp
xchg
lcall
xchg
xor
fmuls
inc
pop
daa
jp
mov
outsl
and
inc
lcall
lret
add
mov
push
inc
test
sbb
pop
mov
in
sbb
adc
les
jge
mov
ds
mov
push
mov
adc
out
pop
aas
popa
fs
stos
xor
dec
mov
inc
int
sub
lock
jae
insb
sahf
mov
inc
adc
jb
push
enter
pop
add
mov
push
das
repnz
jecxz
test
int3
mov
xchg
aas
iret
mov
shll
mov
mov
dec
lret
sbb
mov
inc
xchg
imul
mov
cs
pop
imul
push
insl
das
shrb
popf
iret
lahf
lret
dec
sub
gs
int
fnsave
les
add
mov
adc
xorb
scas
push
jno
movsb
repz
and
outsl
dec
or
test
jle
add
mov
js
jb
xchg
push
popf
cmp
or
lret
pop
xchg
add
imul
call
cmp
addl
or
xchg
in
cmpsl
movl
sub
shr
in
mov
push
daa
dec
cli
and
cli
clc
xchg
cmp
in
fs
mov
fcomps
inc
pop
dec
pop
leave
sbb
dec
movsb
movb
lock
lods
mov
cmp
mov
mov
lds
in
fldt
addl
jnp
and
incl
sbb
test
jne
test
jmp
push
fxch
sbb
add
data16
dec
jns
xchg
or
mov
addr16
negl
mov
fisubrl
das
dec
adc
pop
jae
dec
in
fcomps
pop
incb
dec
dec
jo
push
iret
dec
in
sbb
les
pop
rolb
mov
adc
adc
push
mov
daa
cmc
add
sub
inc
xchg
in
in
push
aad
add
add
popa
test
mov
jns,pt
fdivp
add
clc
lds
add
fisttpll
and
scas
sbb
cmp
inc
sbb
fnstsw
or
mov
push
mov
fldenv
sbb
cmp
jl
xchg
xor
clc
pop
pop
nop
in
and
inc
cs
sub
or
sbb
es
adc
jo
lock
mov
outsl
sub
jbe
dec
int
add
insb
xchg
pushf
push
mov
in
mov
outsb
subb
sbb
faddl
punpcklwd
fxch
inc
add
push
pop
jno
mov
jbe
push
jp
pop
xor
dec
lock
cmp
int
xchg
mov
stc
pop
icebp
lock
ret
pop
sahf
lea
lock
fwait
repz
js
xchg
xor
or
mov
cltd
out
xchg
mov
mov
cmc
lret
push
sahf
or
add
repz
ror
lock
rol
mov
mov
inc
arpl
pop
mov
nop
call
sub
aad
inc
mov
or
and
mov
cmp
or
stc
inc
jns
push
jl
cmp
xchg
hlt
sbb
into
aas
jl
and
in
sahf
out
cli
in
cwtl
clc
pop
mov
sbb
xchg
pop
jne
mov
cmc
mov
lods
add
je
setge
out
mov
loop
push
subl
sub
mov
repnz
mov
cmp
fldcw
push
push
or
pop
and
mov
rol
add
adc
cs
sbb
scas
ds
xor
jnp
pop
xchg
insb
insl
jp
or
jne
test
adc
aaa
xchg
cwtl
mov
xchg
ds
push
scas
jnp
lahf
dec
stos
aas
pop
lea
or
cmpsb
jne
jge
nop
das
ret
push
cmpsl
push
fs
push
jo
int
mov
fs
jmp
bound
lock
dec
jns
pushf
fmul
aas
mov
pop
xor
dec
push
xchg
fdiv
movsl
add
adc
ror
leave
fcoms
out
scas
jo
sub
xchg
repz
or
dec
out
or
pop
mov
and
push
xor
add
mov
shlb
scas
xor
cmc
xor
push
mov
test
movsb
add
test
fdivs
push
mov
sub
jge
or
iret
gs
adc
adc
stos
cs
mov
fs
cld
mov
loop
push
jnp
popf
repz
popa
pop
pop
fisubs
and
outsb
xchg
xchg
pop
adc
xor
dec
mov
negl
jo
fsubr
sub
cs
testb
sbb
xor
incl
adc
or
mov
sahf
and
push
jl
ror
insl
cmpsl
mov
push
add
xchg
rcll
lret
dec
fs
push
xor
sbb
push
int3
ss
lods
mov
lcall
fnstcw
rcr
in
les
add
mov
leave
inc
xchg
xchg
cmpb
mov
sub
bound
pop
jp
cltd
cmp
ja,pt
pop
data16
jp
test
pop
cli
mov
cld
or
adc
dec
cmp
test
or
push
xchg
jbe
or
outsl
insb
call
adc
adc
test
cmp
push
or
iret
stc
aad
repz
mov
icebp
pushf
outsb
insl
repz
cmp
mov
xor
aaa
jle
lcall
inc
xlat
cld
jo
add
add
std
shll
push
aad
xchg
insb
pop
or
iret
adc
out
popa
xchg
inc
bound
pop
fcmovb
mov
cmp
jmp
pop
adc
jae
push
sbb
adc
mov
repz
mov
pop
in
or
pop
jo
mov
jge
mov
rol
out
xchg
jb
roll
enter
loopne
aaa
cmpsl
pushf
mov
lcall
stos
inc
inc
dec
movsb
pop
xchg
fisttps
cmp
and
cmpsl
arpl
dec
adc
sub
les
dec
insl
dec
push
shlb
push
mov
ljmp
push
mov
cld
and
pop
andl
sahf
xor
xchg
leave
test
jmp
es
popf
add
push
pop
mov
in
fnsave
jbe
push
sti
aam
sub
test
pushf
into
test
pop
stc
stos
xor
stos
mov
dec
arpl
out
lret
daa
mov
popf
test
dec
lret
inc
mov
add
mov
leave
and
insb
cmp
xchg
pop
subb
jl
mov
push
mov
movsb
not
jne
repz
or
shl
loope
xlat
lds
jns
xchg
inc
lods
sbb
xor
mov
push
or
xchg
or
stos
roll
and
mov
ss
sub
push
pop
mov
insb
pop
xchg
rcrb
sbb
xor
inc
dec
mov
mov
add
mov
call
mov
sahf
mov
jns
outsl
and
mov
push
aas
movsb
lock
sbb
pop
push
shl
or
and
xor
lret
ret
dec
sti
outsl
or
ss
aaa
dec
ret
sub
jmp
cmp
push
adc
xchg
xor
scas
fists
xchg
mov
add
mov
inc
lods
mov
les
sub
ss
movsl
in
push
xor
leave
cwtl
fisttpl
ret
jg
or
clc
cltd
jmp
cs
jne
dec
cmp
hlt
cmp
adc
fisttps
jmp
push
sub
stc
scas
stos
xchg
add
mov
cmp
lret
push
cmp
xor
enter
dec
test
mov
pop
negl
cwtl
icebp
daa
out
sbb
push
rorb
add
mov
test
es
sub
bound
cmp
mov
push
mov
mov
xchg
sti
sub
lret
mov
inc
pop
fsubl
or
popf
daa
test
daa
mov
mov
mov
xor
arpl
push
inc
or
sub
sti
stos
jnp
mov
mov
cltd
push
in
dec
paddusw
cmp
lea
push
push
ret
ficoms
adc
dec
sti
stos
inc
icebp
xchg
mov
jg
mov
repnz
pop
repz
das
lret
pop
mov
sbb
adc
push
xor
inc
nop
out
ja
jl
mov
aaa
outsb
loop
jge
push
repnz
popa
cwtl
bound
push
mov
dec
into
add
sbb
cmpsl
mov
pop
or
dec
sub
icebp
and
and
insb
jl
or
lds
and
push
jmp
inc
xchg
xor
faddp
jno
mov
jp
out
ss
aas
or
inc
leave
imul
xchg
push
jb
fmulp
fxch
mov
in
icebp
shll
popf
xor
sbb
gs
aam
push
xor
push
mov
xchg
lea
repz
cmp
shrb
xor
pop
mov
mov
imul
into
inc
xor
scas
jbe
add
stos
jo
mov
mov
test
std
xchg
lret
repnz
mov
and
leave
scas
insb
adc
ljmp
leave
rol
in
xchg
aas
xchg
ljmp
push
cmp
jg
stc
fs
ret
iret
jmp
pop
push
pop
add
and
lahf
je
fs
pushf
icebp
mov
xlat
cld
and
mov
repnz
cmpsl
movsl
je
or
push
cmpsb
mov
pop
ljmp
incb
sbb
xor
bound
adc
jb
add
repz
inc
and
cmp
sub
insb
mov
adc
sbb
gs
jp
dec
pop
pushf
pop
es
lods
dec
sub
bound
pop
pop
push
inc
pop
sbb
push
xor
lret
fwait
iret
in
adc
xor
aaa
pop
pushw
cwtl
movsb
add
fs
push
cmp
mov
ret
leave
daa
adc
cld
or
icebp
inc
cmc
pop
stos
push
adc
in
xchg
push
loope
bound
repnz
fisttpl
imul
inc
loope
pop
stc
rolb
outsb
mov
or
lds
das
shll
shrl
mov
lods
mov
mov
mov
push
iret
mov
cmp
inc
fsts
cmp
mov
and
pop
out
cmp
inc
or
dec
in
out
xchg
push
inc
mov
outsb
lret
xor
jnp
dec
push
pop
data16
push
aas
in
mov
mov
loop
into
push
dec
and
scas
es
pop
aad
mov
cmp
fdiv
cmp
jno
insb
daa
mov
popa
xchg
inc
adc
in
or
ret
adc
shl
rcr
mov
jge
jmp
outsb
and
out
outsl
mov
in
daa
hlt
or
gs
lahf
js
in
mulb
out
fsubr
sub
and
xor
addr16
cmp
jnp
in
cmc
pop
mov
popa
pop
mov
jns
xor
cmpsb
add
dec
inc
mov
xchg
lret
fildll
fidivrs
hlt
add
mov
iret
jne
bound
fs
scas
push
dec
aam
lahf
sub
shl
inc
es
outsb
sbb
inc
arpl
or
mov
jbe
dec
push
jmp
in
adc
fdivs
ljmp
sti
push
outsb
ret
push
xchg
dec
push
jae
outsl
mov
lahf
pop
fidivrs
adc
daa
ss
cmp
push
sbbl
dec
pop
xchg
mov
roll
fs
pop
push
pop
push
insl
addl
aam
es
or
sti
rorl
leave
imul
inc
mov
lea
pop
mov
sub
int3
scas
xchg
stos
mov
movsl
sub
inc
movsb
pop
xor
gs
mov
adc
fistl
push
arpl
jecxz
les
mov
xchg
lock
sbb
and
xor
imul
jb
fdivrs
xor
mov
iret
dec
cmpsb
fs
jae
cmp
jne
mov
mov
jle
add
sub
add
in
inc
nop
adc
call
enter
jne
mov
xor
cld
std
ss
jns
push
enter
cld
leave
adc
cs
push
mov
into
dec
arpl
out
push
shlb
fwait
or
lock
aam
adc
data16
jmp
jns
enter
jbe
xchg
push
xchg
repnz
cmp
out
dec
or
out
test
xlat
mov
cmp
cmpl
mov
xchg
or
dec
cmp
call
push
lea
loop
movsb
out
movsb
pop
mov
pop
or
mov
aam
aad
pop
fwait
aad
inc
sbb
out
mov
loopne
push
add
mov
sub
cmpsb
nop
cld
cmpl
loop
js
cmpsb
aad
shll
push
jge
daa
stos
fistpl
xchg
add
sub
mov
js
insl
rol
jl
ss
cli
int3
cmp
and
push
xchg
pop
fs
call
roll
sbb
cmp
push
mov
xchg
mov
sbb
imul
fisttps
loope
and
or
push
xchg
sbb
xchg
push
mov
jp
xor
pop
orb
cmp
inc
bswap
ljmp
movsl
in
ja
mull
inc
jge
pusha
lahf
cmp
lcall
pop
sub
stc
xchg
cmp
jg
push
mov
fldcw
xchg
in
dec
and
sub
jp
popa
pop
es
mov
mov
xor
mov
jno
and
mov
xor
pop
out
in
idivl
inc
sub
arpl
pushl
mov
leave
push
cmp
sbb
fwait
mov
inc
pushf
mov
dec
lret
arpl
adc
fadds
test
shlb
push
outsl
xchg
xchg
test
pop
ret
cltd
test
out
shll
mov
call
or
divb
xchg
adc
aas
fldenv
mov
test
imul
insb
or
movsb
outsl
ljmp
insl
xor
jb
and
inc
and
loope
sbb
scas
fnstsw
jmp
cmp
in
gs
add
inc
inc
dec
lret
push
pop
mov
and
jb
push
lahf
sbb
mov
sbb
mov
sub
mov
push
test
inc
xor
fadds
fstl
imul
add
sbbb
bound
sbb
and
jecxz
ljmp
aaa
mov
fmuls
in
jge
movsb
into
mov
pop
mov
repnz
push
out
adc
je
sti
sub
clc
nop
xchg
inc
mov
setbe
xchg
cmp
fisubrl
cld
add
jb
mov
out
fisttpll
cmpsb
jne
jge
aad
mov
mov
pop
cmp
fwait
wrmsr
and
int
and
sbb
jg
ret
or
lods
cmc
inc
mov
jle
stc
decl
and
pop
mov
add
or
aaa
add
cmp
adc
adc
sub
in
sti
pop
cltd
addr16
testb
loopne
mov
fildll
mov
int3
shrb
lock
and
sub
or
add
add
mov
cs
jl
and
notb
push
inc
fidivrs
js
pusha
fmull
sti
and
lret
shll
cmpsl
or
sub
mov
hlt
pop
test
mov
cmp
test
fnstenv
ja
jb
pop
out
inc
cmp
inc
in
je
push
mov
jne
cli
jg
stos
add
mov
scas
jno
pushf
jno
popa
mov
fcomi
add
std
nop
insb
rorl
push
jmp
jbe
loop
pop
dec
jne
or
stos
lods
ret
fldz
pop
jb
mov
ficoms
mov
fadd
les
sti
stos
stc
adc
dec
in
ror
push
ds
push
test
mov
sub
ja
aaa
aam
mov
fsubr
cmp
lahf
subb
push
test
push
xor
add
inc
xor
js
cmp
outsb
sbb
imul
xchg
or
push
das
jecxz
fadd
sbb
jne
sub
leave
cmpsb
ja
insl
shr
aam
imul
lods
sbb
enter
pop
in
dec
xor
call
mov
inc
insl
scas
or
xor
scas
ja
scas
scas
inc
adc
add
xchg
mov
fucomi
sbb
push
push
das
aad
fsts
mov
int3
mov
bound
mov
pop
inc
push
jbe
cmc
lods
xchg
stos
int
adc
mov
aad
jp
and
jbe
mov
fisubrl
xor
xchg
into
cmc
pop
movsb
sub
insl
ja
in
mov
jb
cmp
arpl
jne
ljmp
hlt
shrl
lret
inc
push
decl
cltd
out
cwtl
add
cmpb
add
inc
mov
cs
cwtl
popl
je
mov
mov
dec
add
cmp
fcoms
mov
aaa
xor
pop
inc
and
push
mov
inc
cmp
inc
pop
sub
jp
jmp
and
sbb
in
movsl
mov
cmp
adc
mov
and
mov
or
mov
call
lea
aaa
cmp
imul
imul
ljmp
push
icebp
outsl
loop
aaa
or
dec
push
adc
cmp
dec
and
sbb
addb
xchg
scas
mov
lea
in
xor
xchg
cmpsb
leave
lds
or
lods
sub
adc
cmpsl
xor
sub
lds
jl
xchg
pop
pop
icebp
jne
je
popa
sub
sahf
stos
cmp
orb
sub
or
sbb
in
jle
scas
inc
cmpsb
fnsave
js
adc
push
xlat
fwait
in
push
movl
pop
bound
jb
insb
hlt
outsb
inc
in
jne
push
scas
xchg
subb
loopne
test
das
notb
test
lea
lcall
les
jns
adc
mov
mov
movsb
push
repz
xor
pop
fiadds
sub
int
jae
cmp
add
mov
sub
xchg
pushf
mov
xchg
xor
cmpsl
fwait
mov
fmulp
mov
push
cmp
pop
pusha
inc
leave
push
sub
push
notl
jae
or
rolb
lcall
pop
jo
push
mov
lock
xchg
sub
pop
xchg
out
js
fwait
jle
fistpl
lock
leave
cmpsb
sbb
or
jno
cmp
xor
sub
xchg
shrb
or
lds
xchg
jmp
movsl
xchg
mov
xchg
xchg
out
mov
out
sub
nop
mov
lods
push
sub
and
fidivrl
dec
mov
jae
xorb
dec
ss
inc
cmp
jp
adc
xchg
mov
xlat
fstp
mov
mov
lods
xor
pop
popa
push
out
pop
cli
sub
pop
inc
jmp
pop
xchg
push
push
in
nop
jmp
outsl
jle
add
mov
dec
dec
xorb
jns
lods
pop
addr16
test
jmp
into
pop
cmp
inc
lret
imul
jae
int3
jg
mov
dec
pop
pushf
lock
insb
pop
icebp
aaa
je
or
xchg
std
ljmp
jmp
mov
cmp
mov
dec
mov
enter
daa
push
mov
mov
and
ret
ljmp
pop
test
int
mov
dec
or
push
sbb
pop
in
cmp
js
shlb
movsl
sub
or
inc
cmp
dec
sbbl
push
fs
xchg
test
fisubrs
mov
pushf
inc
call
jecxz
cmpsl
cs
fcomp
decl
lea
popf
addl
or
mov
and
ret
pusha
mov
pop
call
clc
jns
xchg
cs
movsl
xchg
pusha
cmp
imul
cmpsb
es
in
clc
fwait
mov
mov
push
pop
jb
push
adc
push
jmp
lods
nop
iret
adc
jmp
pop
pop
lcall
sub
adc
dec
pop
mov
sbb
pop
xchg
aam
jl
sub
ja
sbb
cmpsb
iret
inc
std
mov
leave
pop
jp
lret
in
lods
mov
sub
dec
lret
js
in
or
jmp
insb
orb
out
and
insb
or
stos
ja
rol
or
ret
adc
push
xor
pusha
pushf
push
push
mov
sub
add
sarl
ret
sbb
int
aaa
jno,pn
pop
push
jae
pop
addb
lea
jnp
popf
dec
inc
in
pop
dec
jmp
pop
data16
and
sbbl
dec
cmp
das
das
xchg
popa
push
lret
pop
ret
scas
sbb
enter
xchg
loopne
lock
mov
jle
hlt
ljmp
fucom
je
out
in
daa
or
jno
fisubrl
cltd
cmpl
sub
xchg
jb
std
mov
add
mov
xchg
pusha
sub
xchg
or
std
outsb
scas
mov
add
add
popa
cmp
inc
jmp
mov
xlat
test
xchg
loop
dec
notb
shll
orl
xorb
or
movsb
inc
outsl
jae
call
lret
and
sub
out
icebp
xchg
in
outsb
data16
imul
adc
arpl
js
dec
sbb
xchg
aas
cmpsb
loopne
push
loop
imul
xchg
or
adc
stc
out
mov
stos
jecxz
imul
clc
inc
lods
and
popf
xchg
idiv
dec
sbb
adc
pop
jge
jbe
cmpsb
mov
popa
cwtl
pop
push
mov
pushf
clc
push
jne
cmpsb
fidivrl
mov
mov
dec
jb
xchg
mov
adc
cld
aad
ljmp
mov
cmc
cmp
pop
into
dec
fisubrl
stos
dec
add
jmp
insl
add
xor
mov
adc
or
roll
adc
and
fldl
out
sub
scas
add
sti
pop
pop
decb
loopne
mov
add
shll
pop
dec
push
movsb
ficoms
adc
stos
jne
fildl
sti
pushf
fmuls
sbb
shlb
popf
js
or
dec
push
mov
imul
jae
xchg
sub
cli
lret
mov
jmp
imul
out
push
ret
pop
lcall
fcomps
cmpb
je
xor
adc
mov
xor
lods
movsb
lcall
inc
inc
jp
fidivrl
adc
inc
out
cmp
filds
jno
jnp
stos
addl
addr16
push
sub
sbb
clc
jp
test
lret
dec
daa
pop
hlt
sub
push
xchg
sbb
or
xchg
daa
cld
out
mov
outsb
sub
xchg
and
mov
xor
and
lds
push
add
int3
icebp
shl
dec
pop
sbb
pop
testb
push
xchg
test
mov
xchg
jmp
cli
add
aad
mov
clc
das
jbe
loop
nop
jnp
aas
mov
lods
push
xor
ss
push
cmp
and
mov
aas
cmc
push
out
in
cmpsl
push
xchg
mov
cmp
pop
fistl
test
in
aas
mov
bound
inc
push
stos
mov
adcl
inc
cwtl
fs
adc
push
cltd
and
sub
xchg
fucomi
inc
xchg
mov
mov
mov
ss
dec
fisubrl
test
push
cli
pop
stc
filds
test
pop
mov
movsb
or
jle
das
outsb
mov
and
test
and
aaa
hlt
loopne
das
push
mov
insl
fs
lahf
rcr
push
xor
cwtl
pop
ret
xor
add
add
inc
clc
repnz
loop
jecxz
fsubl
xorl
lods
pusha
int
mov
into
out
cmp
cltd
rorb
rcrb
sub
inc
sti
scas
rcr
xchg
pushf
cmp
inc
jno
mov
mov
stos
fidivrl
inc
push
add
rep
movsl
and
adc
jg
inc
jns
jne
cmpsl
js
xchg
je
pop
and
aad
int
cmp
jbe
push
out
jnp
sti
or
push
jns
and
sub
sti
rolb
lret
lret
mov
neg
sar
or
jg
dec
or
frstor
push
movsl
lds
xor
add
lock
mov
sarb
imul
jg
pop
jmp
bound
jge
mov
loope
lock
sub
sbb
loop,pn
xor
aas
pop
out
dec
stos
jo
and
mov
shrb
int3
lahf
loope
iret
loopne
ficoms
popa
sub
sub
mov
jno
cmpb
push
jmp
iret
adc
inc
cmc
movsb
mov
bound
push
loopne
mov
movb
pop
sbb
cld
les
outsb
imul
fnsave
jmp
movsl
arpl
insb
fidivl
inc
lds
divl
or
je
scas
in
xor
adc
mov
movsl
pop
xchg
ds
cmpsl
jge
push
outsb
clc
mov
addl
cmp
pop
imull
xor
imul
in
pop
loope
lcall
icebp
jno
cmpsb
fwait
mov
jo
popf
pop
outsl
icebp
and
adc
or
and
stc
mov
adc
hlt
pop
jle
mov
adc
adc
inc
gs
loop
insl
lods
jg
enter
adc
ljmp
pop
or
out
push
test
shrl
mov
sub
js
mov
fildll
idivb
scas
fcmovnb
fnstenv
xor
push
in
and
pop
lea
mov
inc
aam
and
aas
stc
sub
loop
xchg
aad
sub
cmp
addb
scas
rclb
cmp
nop
mov
add
aad
out
les
stos
decl
cmpsb
sub
mov
mov
lock
es
jb
rcrl
fwait
iret
mov
pop
xchg
mov
xchg
dec
or
iret
xor
or
push
hlt
in
and
dec
dec
jbe
pop
and
pop
pop
xor
sti
test
ljmp
jl
pop
out
rolb
add
test
cmp
mov
lea
mov
mov
imul
sahf
inc
pushf
cmpsl
mov
out
ficoms
repnz
push
test
inc
push
flds
repz
fmuls
jno
decl
loop
and
sbb
and
xlat
inc
mov
and
or
xchg
fdivs
hlt
imul
pop
pop
loopne
sub
and
idivb
notb
fwait
outsb
gs
aaa
sbb
xchg
sbb
push
sbb
and
push
pop
dec
in
dec
fdivrp
daa
push
jo
scas
mov
pop
sbb
pop
inc
push
imul
and
push
or
bound
dec
clc
lret
push
sahf
dec
ret
xor
mov
push
pop
rorb
stos
popf
lea
pop
and
ror
lock
mov
pop
psrad
mov
sbb
ret
js
cmp
fimull
pop
nop
out
rcrl
mov
sbb
jno
mov
dec
pop
test
xchg
loopne
test
aaa
clc
adc
xchg
into
repz
jae
ss
ss
adc
dec
setae
mov
push
sub
int3
jno
inc
pusha
pop
push
sub
das
push
sub
int3
out
sbbl
insl
fisttpl
leave
dec
push
xchg
jo
and
lcall
hlt
pushf
int
adc
lret
movsb
jecxz
pop
xchg
andb
loop
fsts
lds
jne
in
sbb
sbb
je
lea
call
push
add
loop
xorb
test
shrl
pop
and
cld
cmpsw
cltd
js
movsb
mov
push
fidivrs
or
data16
inc
mov
or
jge
jp
ret
lods
aas
dec
aas
leave
sbb
push
xchg
sahf
sbb
pushl
cltd
mov
mov
and
lcall
sahf
cltd
testl
addl
daa
or
scas
aad
test
push
mov
mov
sub
dec
or
mov
push
stos
pop
add
cltd
out
sbb
add
sahf
inc
aam
fnclex
in
or
movb
in
inc
imul
sbb
mov
lcall
sbb
mov
loop
popf
sub
xor
pusha
jne
xchg
es
mov
mov
lods
and
cld
jge
sub
adc
xor
fiaddl
sbb
or
cli
sub
push
out
adc
lds
in
insb
andb
loope
push
movsl
sbb
sub
outsb
arpl
jb
repnz
sub
sbb
sbb
rcr
rdmsr
mov
arpl
lods
popfw
in
ljmp
testl
and
dec
adc
push
and
add
aas
xor
lods
arpl
test
stos
xor
rcrb
js
dec
xchg
dec
imul
pop
call
mov
or
sub
dec
rcll
ss
in
sbb
xchg
fsts
in
xchg
out
aaa
loopne
dec
mov
jb
xchg
mov
clc
mov
subb
inc
fmuls
sub
and
push
lahf
daa
mov
in
jbe
mov
mov
sub
shrb
mov
rcr
es
into
fmull
push
add
ja
loope
sbb
out
mov
in
mov
sti
jns
stc
mov
rclb
or
mov
in
mov
mov
cmp
xchg
into
mov
stc
xor
and
xlat
add
cld
xchg
push
movsb
jp
and
jbe
lret
aam
fcmovnbe
and
scas
lcall
dec
flds
xor
arpl
das
outsb
mul
fwait
dec
fwait
add
test
ret
push
and
or
rorb
outsb
add
inc
xchg
loope
jl
mov
outsl
sarl
sbb
mov
or
sbb
data16
out
sbb
push
int3
imul
xchg
mov
mov
and
cmp
sti
xor
ljmp
cmp
mov
sub
mov
inc
mov
or
leave
lds
outsb
mov
aam
xchg
xchg
lods
mov
arpl
xor
lds
cmp
jle
std
ljmp
jl
add
outsb
mov
imul
adc
mov
stos
xchg
jae
lahf
imul
push
lret
popf
cli
jno
sbb
rclb
repz
mov
cmp
cli
bnd
fisttpl
sar
pop
xor
cltd
mov
cld
xchg
push
and
out
rorl
dec
jp
orl
scas
sub
cmp
out
and
add
shlb
fwait
stos
loopne
pop
repz
xchg
imul
push
les
inc
lcall
push
or
sbbl
icebp
stos
arpl
and
cld
push
jp
fbld
mov
loope
jne
arpl
out
add
clc
jmp
popa
mov
pop
mov
cmp
mov
sbb
inc
cmp
popf
add
sbb
lea
int3
xor
clc
into
push
aas
cmp
iret
das
xor
xchg
sub
movsb
popf
mov
adc
xchg
aaa
push
les
pop
mov
mov
testl
inc
inc
sub
je
in
notl
push
xor
inc
in
test
dec
sysret
test
jmp
mov
adc
popf
movsb
and
or
mov
cmpsl
cmp
jge
xor
lret
mov
loopne
movsb
fwait
pushf
jae
clc
xor
and
repnz
das
mov
push
lret
add
sbb
xchg
jnp
rol
adc
stos
inc
xor
rorb
lret
jbe,pn
sahf
popl
inc
mov
leave
inc
fiadds
mov
xchg
cmpsb
mov
inc
out
outsb
mov
aas
add
jge
mov
adc
les
mov
mov
sbb
mov
mov
test
inc
addl
fstpl
cmp
cld
stc
not
test
xchg
mov
jne
sbb
negb
sub
xor
adc
dec
lret
mov
pop
nop
lret
sbb
jg
mov
flds
push
pop
xor
repz
push
dec
loope
dec
dec
push
outsb
lock
addb
adc
jg
jbe
test
pop
or
repnz
and
xor
inc
sub
subl
icebp
dec
xchg
mov
es
in
mov
clc
mov
add
lods
jns
push
cmp
xchg
fstpt
push
fcompl
lcall
xchg
ret
lds
push
mov
call
or
mov
mov
stc
or
and
mov
dec
fdivs
mov
mov
cmp
orl
push
mov
xchg
das
in
cmp
out
mov
or
push
pop
sti
mov
add
aas
mov
roll
mov
add
pushaw
and
lods
clc
ja
imul
mov
add
add
arpl
cmp
xlat
je
push
mov
sarl
dec
movsl
or
add
imul
out
fld
adc
cwtl
stc
jb
xor
pusha
pop
dec
stos
shlb
cmp
not
cmp
inc
xchg
sbb
cmp
pusha
mov
push
add
xchg
mov
inc
cmp
mov
push
mov
outsl
clc
push
cmp
add
mov
mov
mov
roll
movsb
cmp
push
and
inc
xchg
lock
sbb
movsl
inc
inc
jb
fcomps
push
jp
loop
inc
xchg
nop
mov
pop
inc
repnz
mov
mov
sbb
sub
sbb
mov
push
xlat
out
mov
pushf
inc
dec
call
imul
jg
lcall
cmp
in
mov
and
push
leave
sbb
data16
adc
add
cmp
or
and
je
lahf
imul
dec
pusha
mov
shlb
sub
mov
xchg
cltd
dec
push
or
xchg
lds
sahf
andl
pusha
xor
mov
stos
cmp
or
mov
dec
cld
cld
iret
push
nop
rolb
xchg
pop
jecxz
cmp
inc
dec
cmp
xlat
or
xchg
mov
pusha
push
push
or
push
jp
fs
pop
scas
into
imul
jbe
imul
and
roll
in
jle
in
xchg
test
mov
xlat
and
jecxz
int
pop
or
fisubl
cmp
out
loop
mov
mov
pop
jnp
sbb
lcall
xchg
inc
cmpsb
xchg
and
jo
daa
stc
sti
inc
push
push
ja
jo
add
aad
and
movl
out
movsl
ffree
pushfw
mov
rcrb
movsb
cmp
and
dec
or
and
adc
mov
xor
mov
fisttps
loop
test
xor
aam
sub
popf
xchg
aad
aad
cmp
lret
mov
lea
fnstsw
or
mov
scas
jno
adc
sbb
loop
jecxz
je
loopne
aaa
jle
or
cmp
cmp
xchg
scas
lea
cmp
fwait
xchg
add
iret
in
sub
sub
dec
or
or
sbb
jns
cltd
bound
stos
or
pop
sub
jp
mov
loop
sti
jg
in
inc
jne
sbb
adc
mov
or
gs
fcomps
xchg
rdtsc
push
aam
mov
jnp
pop
sub
ljmp
test
fsub
ret
mov
ficomps
insb
jecxz
and
xor
cs
xor
sbb
sub
mov
rcr
add
xchg
cmp
adcb
es
adc
repz
add
mov
subl
mov
xchg
daa
pusha
sbb
inc
inc
mov
insl
inc
imul
mov
xchg
jmp
lahf
stc
sub
leave
push
dec
lods
cltd
cmpsb
pushf
or
outsb
inc
cld
arpl
xor
adc
test
movsb
dec
mov
cwtl
sarb
mov
cli
aad
cmc
aad
push
adc
sbb
xor
scas
adc
ss
adc
lea
or
lret
mov
cmpb
and
lock
nop
in
mov
jp
xchg
inc
fidivs
dec
dec
jne
xor
xchg
or
loope
in
fimull
pop
lahf
adc
cmpb
jb
push
xchg
loop
dec
dec
push
cmp
lds
xor
cmp
test
mov
fildl
push
push
in
jecxz
dec
hlt
cmpsl
xchg
or
jmp
aam
push
call
lret
scas
pop
push
cmp
or
cli
inc
gs
imul
into
outsl
dec
jge
sbb
clc
aaa
lea
popf
stc
jle
push
ret
xor
ret
stc
jo
roll
std
clc
jecxz
nop
lock
cld
mov
push
xchg
out
in
ret
xor
adc
or
je
pusha
add
jp
push
sub
mov
iret
sbb
mov
jbe
cltd
aas
je
fcmovu
repnz
outsl
jnp
hlt
jmp
jo
ja
shrb
push
cmp
cmpsl
insl
sahf
insb
xchg
cwtl
mov
add
gs
dec
inc
dec
aas
mov
jnp
sbb
adc
mov
or
xchg
sub
add
ffree
fcoml
in
cmpl
fstl
fdiv
ret
les
dec
mov
push
in
ja
push
inc
sbb
mov
pop
add
pop
sbb
adc
push
and
xchg
popf
jl
repz
daa
pop
stos
dec
aas
fwait
sahf
call
rorl
add
jl
jo
fwait
mov
push
pop
mov
sahf
sub
push
jecxz
jmp
mov
sub
in
in
negl
shll
ljmp
data16
sbb
ds
jmp
jecxz
xor
jns
xor
in
mov
pushf
std
xlat
jge
inc
loop
movsl
cmovge
jmp
jb
adc
pop
divb
loop
cld
xchg
addb
stc
push
pop
pop
push
rclb
stos
xlat
rcrb
dec
pushf
add
jns
lea
and
mov
outsb
or
jae
enter
fcmove
out
out
lret
xchg
lods
data16
scas
inc
dec
or
cmp
adc
stc
movsl
insb
mov
xor
pop
insb
mov
inc
fwait
int3
push
dec
sbb
lea
out
popa
dec
mov
in
dec
pushl
jae
cmpsl
jl
outsl
mov
push
or
mov
cmp
push
ds
cwtl
add
adcl
mov
mov
scas
out
inc
adc
sahf
movsl
mov
stc
aad
lahf
rorl
outsb
imul
in
int3
ffreep
xorl
in
cmpsl
push
adc
pop
and
and
xchg
add
hlt
shll
sub
mov
mov
push
out
rclb
dec
and
test
pop
std
stos
and
jl
int3
push
rcr
mov
adc
push
cltd
push
popf
jle
lret
pusha
mov
sub
xchg
insb
fwait
xchg
xor
pop
add
ja
push
daa
jmp
jns
test
and
fldenv
mov
lret
rol
mov
push
sti
dec
repnz
jmp
mov
arpl
mov
inc
sahf
int3
dec
xchg
iret
mov
out
lcall
cmp
subl
pop
adc
and
mov
or
sbbb
push
fisttps
adc
add
aaa
out
gs
iret
push
out
dec
add
scas
in
dec
dec
and
cmp
movsb
add
push
test
adc
and
and
sbb
pop
dec
add
into
or
fucomp
mov
xlat
idiv
mov
add
stos
push
cmp
divb
add
inc
aam
test
pop
adc
and
loop
xchg
shll
out
jbe
data16
jp
push
pop
mov
sub
pusha
aaa
movl
loopne
insb
mov
mov
push
arpl
push
sbb
in
repz
jg
insb
cwtl
lock
cwtl
push
lcall
into
sbb
mov
cli
mov
adc
push
lock
pop
jp
pop
xor
sbb
lods
xor
lds
scas
stos
pop
push
xchg
aam
inc
insb
cmp
repnz
iret
mov
adc
mov
outsl
dec
in
jb
mov
imul
or
add
leave
inc
mov
fstl
ffree
inc
jne
ficoml
arpl
add
add
adc
lcall
in
or
into
pop
and
cli
add
sub
std
cmp
and
or
jmp
test
sbb
call
and
scas
or
mov
cmc
insb
lock
jecxz
mov
cmp
jne
sub
mov
pop
les
jl
into
das
adc
notl
int
inc
das
and
dec
cmp
aad
jno
insb
ljmp
shll
idivb
jae
pop
es
push
sub
or
mov
jbe
mov
sahf
in
into
js
pop
call
out
cmp
push
in
cmp
cmp
sub
roll
dec
loopne
das
sub
subl
adc
fldenv
cmc
mov
push
dec
roll
lret
sub
outsb
jae
cwtl
adc
xchg
pop
mov
cli
mov
mov
or
loope
test
adc
jne
adc
sti
iret
adc
orb
cmpsl
cld
sub
iret
pop
mov
xchg
mov
subb
inc
dec
les
mov
clc
mov
push
and
test
add
out
or
sbb
lds
sub
test
and
jg
push
shll
sub
mov
mov
iret
les
sahf
sbb
adc
sub
lcall
push
mov
dec
in
call
push
dec
into
mov
xchg
xor
lcall
cmp
or
inc
jno
mov
sti
mov
test
inc
cmp
movsl
fs
repnz
notb
lds
les
shrl
lods
xchg
and
mov
add
aam
rcll
mov
push
xor
call
sti
testl
add
pusha
fistl
add
jg
sbb
ja
inc
jecxz
mov
mov
jp
frstor
adc
or
mov
cmpsb
adc
nop
push
mov
nop
test
sbb
and
pushf
les
rorl
orb
xorl
or
not
shrl
mov
sub
adc
enter
out
mov
subl
mov
dec
cli
jge
lods
mov
mov
dec
icebp
imul
movsl
dec
mov
cmpsb
pop
leave
rcl
xor
ja
dec
lret
mov
dec
jnp
fldenv
cmp
xor
ja
leave
add
cmp
mov
xchg
jo
jge
ja
dec
dec
xchg
jmp
jg
xchg
xchg
add
mov
fcomps
in
das
movsb
hlt
xchg
nop
jns
orb
into
or
call
in
mov
loope
jns
jg
loop
popf
xor
fs
mov
pop
pop
jmp
mov
movsb
sub
and
jne
std
xor
mov
xor
int
ds
or
sbb
push
mov
leave
iret
xor
pusha
push
cmc
int3
mov
mov
inc
fidivs
cltd
dec
sbb
mov
repz
mov
repz
lret
sub
mov
cltd
into
das
pop
dec
dec
cmp
test
xor
jns
les
incl
sbbl
or
jl
sti
dec
pop
hlt
and
clc
push
ret
into
mov
inc
adc
je
sub
outsb
mov
mov
aad
ljmp
cli
les
push
flds
push
lret
cmp
sbb
jmp
loopne
mov
sub
dec
cltd
push
addr16
add
popa
mov
mov
sub
in
ret
out
cmp
test
jg
out
outsb
jmp
out
mov
fstps
jno
or
cld
jl
sbb
imul
stc
cwtl
dec
push
cwtl
inc
push
sub
sub
push
push
jb
gs
jne
fs
sub
mov
xlat
mov
dec
aad
pusha
sar
int3
sub
dec
jne
es
xchg
out
sub
cmp
mov
pop
mov
lds
pop
sub
cmpsb
lret
movsb
fcomps
inc
cmp
mov
sub
leave
adc
addr16
sbbb
dec
jmp
or
push
aaa
data16
mov
jg
mov
push
adc
add
ret
adc
jbe
mov
dec
ljmp
jg
cmpsl
mov
stc
repnz
lock
jno
xchg
mov
cltd
add
sbb
and
dec
xchg
arpl
ja
mov
out
scas
js
mov
adc
dec
inc
mov
outsl
add
ss
and
cmp
push
jge
sbb
rcrl
jo
xor
inc
call
push
sbb
imulb
jmp
mov
fucompp
jbe
int
xorb
sub
mov
es
jns
mov
jmp
call
das
sub
jb
push
xchg
jae
ja
xchg
scas
es
ret
push
push
outsb
insb
adc
dec
out
lcall
sbb
outsl
push
popa
outsb
jnp
jne
and
psrld
cmp
into
xchg
mov
or
pop
push
xchg
xchg
ljmp
sbb
jae
mov
pop
jne
xchg
stos
adc
in
sub
lds
out
shlb
int
imul
sbb
mov
call
inc
xchg
inc
loop
mov
es
pop
sahf
cwtl
cmpsb
leave
push
lock
xor
addr16
jb
leave
pop
jp
fstpl
push
inc
nop
or
roll
stos
cwtl
mov
push
out
lods
or
sbb
sbb
cld
imul
popa
sub
aaa
outsb
xor
jb
jno
js
jb
daa
adc
cmpsb
dec
fnsave
mov
push
xchg
adc
xchg
mov
roll
push
lds
jns
in
outsl
loopne
mov
dec
push
sub
in
adc
jmp
mov
mov
ljmp
xchg
jns
adc
pop
ret
call
enter
and
dec
pusha
lock
xchg
repz
leave
inc
arpl
mov
push
es
movups
out
lret
fstpt
mov
add
adc
xchg
cld
and
aam
pop
xor
mov
popf
inc
xorl
and
jno
fstpt
int
add
mov
dec
push
bound
in
mov
mov
dec
iret
adc
fildll
stc
je
iret
mov
xchg
xor
lret
call
jnp
xchg
aad
xchg
fdivr
mov
fistl
cwtl
mov
pop
insb
dec
jmp
dec
sahf
decl
jo
mov
and
push
jae
js
xor
fdivrl
fs
or
movsl
sub
xchg
loope
cmp
leave
jae
pop
test
mov
fadds
int3
scas
cmp
mov
add
pushf
or
xchg
scas
iret
aaa
and
sbb
dec
push
ret
jnp
xchg
in
mov
mov
push
push
xor
lahf
jns
xor
out
jecxz
fwait
lret
add
add
or
and
xor
or
clc
adc
stos
xchg
lods
pop
rcll
cmp
int3
jl
ret
xchg
fnstsw
sub
test
fistps
addr16
adc
scas
push
adc
mov
out
dec
adc
push
dec
mov
mov
jne
aaa
pop
neg
fildl
push
dec
jg
sbb
mov
shlb
xchg
arpl
and
pop
push
imul
aaa
pushf
rorl
pop
sub
pop
imul
cmp
or
insb
addr16
mov
test
mov
int3
movswl
mov
mov
push
xlat
dec
pusha
push
inc
jge
fs
into
ja
dec
out
push
lahf
or
adc
fldl
jb
and
outsl
imul
add
lret
movsl
add
shrb
pop
call
jne
mov
jp
aam
inc
xchg
pop
js
mov
inc
or
add
cld
mov
mov
fnsave
xor
mov
pop
insb
clc
clc
sbb
stc
lret
mov
cmp
xor
decb
mov
repz
lods
sbb
shll
inc
movsl
lcall
in
fistpl
add
js
shrl
orl
push
cli
fistpll
mov
dec
inc
scas
and
pop
jmp
sub
sbb
mov
mov
out
cmp
mov
ds
dec
sbb
bound
fnsave
stc
jnp
dec
clts
or
inc
insb
xchg
cmp
hlt
cmp
mul
lret
idiv
bound
jnp
adc
push
int
shrb
mov
sub
ljmp
xchg
adc
bound
inc
inc
adc
sahf
popf
and
cli
roll
cwtl
dec
sub
push
mov
outsl
and
cmp
fdivl
push
ds
mov
push
shll
out
pop
cld
lret
insl
adc
enter
inc
js
sarb
inc
subl
mov
sub
mov
pop
iret
sbb
cmp
fstl
in
mov
nop
js
movsl
cs
sub
inc
xchg
jne
in
repnz
loope
data16
add
divl
xor
sbb
and
fadds
movsb
sub
sbbb
xor
ds
lea
push
imul
sub
shrb
leave
insb
loop
jge
pop
arpl
mov
sub
add
es
fs
jbe
lret
idivb
push
push
idivl
adc
xchg
ret
xchg
fisubs
daa
jmp
xor
cmp
push
xchg
outsl
cmpsl
fcmovnu
xchg
mov
mov
cmp
dec
mul
jmp
or
aad
mov
scas
lock
pop
fs
sbb
jno
push
dec
dec
dec
xor
dec
xchg
adc
jae
sbb
sbb
cmp
pop
or
nop
and
pop
add
cmpb
adc
mov
mov
std
push
ja
pushf
aad
cltd
pushf
testl
pop
les
pop
dec
stos
daa
dec
js
pop
inc
mov
sub
aam
addr16
adc
mov
push
scas
add
imul
sub
int
or
add
cmp
mov
cmp
jno
lods
jg
imul
lret
or
add
das
sub
mov
int3
adc
or
mov
add
lret
mov
movsb
jg
cmp
in
loop
mov
and
adc
lret
test
aas
mov
adc
into
xchg
push
data16
repz
enter
stos
xchg
int3
xchg
aam
js
add
push
dec
inc
out
outsb
jo
xchg
pop
test
ljmp
enter
jle
in
cmp
leave
mov
in
out
ret
sub
clc
out
dec
mov
cwtl
push
scas
js
cwtl
xchg
in
jo
rolb
xchg
push
bnd
jle
xchg
add
popf
xchg
test
stc
and
adc
xorb
sub
jecxz
or
pop
shll
push
xor
shl
icebp
or
rcl
xchg
hlt
ss
and
lahf
enter
xchg
inc
mov
lods
lret
inc
inc
das
aaa
ljmp
add
xchg
xor
sbb
iret
mov
mov
or
mov
cmp
sub
iret
notb
pop
pop
cmpsl
cli
adcl
insb
and
and
lcall
add
mov
add
pop
sbb
push
enter
sbb
mov
jns
mov
sub
cmp
das
fdivp
das
xchg
scas
ss
outsl
inc
pop
cwtl
push
pop
lods
lods
stc
scas
inc
aam
cld
out
cld
jnp
lahf
push
cmp
xchg
mov
clc
and
out
sbb
and
adc
test
nop
dec
inc
idivl
addl
cmp
out
sub
call
or
fisubs
xchg
movsl
pop
sub
xor
dec
sub
fnstcw
imul
push
jne
push
stos
sbb
jle
sti
imul
jp
int3
pop
adcb
fdivl
test
mov
inc
xchg
nop
fwait
ret
mov
jbe
lods
add
ds
xor
into
inc
jecxz
xor
cmpsb
lea
cmp
loopne
mov
cltd
lds
jno
in
cli
leave
out
pop
xchg
pop
cmc
lea
dec
adcb
jle
sbb
mov
adc
xor
xor
out
mov
xor
cmpsl
lea
enter
inc
mov
sub
mov
pusha
out
and
pop
inc
cmp
jge
jnp
aaa
ret
or
add
mov
das
or
fimuls
push
inc
vpand
rcrb
popf
pusha
scas
mov
out
and
stos
sub
popa
mov
pushf
sub
lods
add
add
cmp
xlat
xchg
mov
mov
push
enter
test
mov
sub
push
test
inc
div
pop
push
test
or
out
inc
or
or
dec
cmp
mov
xchg
inc
cmp
push
xlat
xor
lods
test
hlt
and
sahf
int
ret
loop
pusha
sbb
lahf
xchg
xor
and
jne
inc
in
fstl
adc
push
adc
imul
jnp
out
je
dec
popf
repnz
dec
and
outsl
push
adc
sbb
cmp
fdivr
and
mov
out
lret
and
out
jg
test
and
es
bnd
insb
pop
push
xor
sarb
mov
insb
mov
dec
insl
cs
and
cmp
xchg
lds
cmc
popa
xchg
add
adc
out
mov
mov
xchg
mov
das
mov
and
test
inc
mov
cmp
mov
pop
test
pop
jns
lods
mov
push
test
xchg
ficompl
lret
dec
imul
stc
rorb
mov
or
adc
sub
mov
pop
insb
addr16
repnz
das
push
xor
imul
fs
pop
mov
aam
aas
sub
out
jbe
pop
out
out
dec
inc
popf
nop
xchg
mov
or
cmp
sub
jl
and
push
fnstcw
mov
int3
mov
rcrb
jns
pop
popl
pop
test
and
cltd
ja
idivl
cmpsl
xchg
sub
arpl
frstor
jne
adc
outsl
shlb
fwait
cmp
add
inc
push
mov
sub
cltd
inc
cmpsl
pop
push
movb
jg
ret
inc
rorb
mov
gs
cld
add
xchg
int
mov
sti
stc
push
push
cld
inc
adc
xchg
fidivrl
mov
adc
movsb
mov
jl
or
pop
scas
fsub
inc
lret
jecxz
mov
inc
lcall
xchg
mov
xchg
fidivl
push
xchg
lret
lods
xlat
xchg
aas
sahf
jne
push
loopne
out
and
mov
add
push
out
pop
roll
jge
into
test
out
js
adc
push
mov
sbb
dec
leave
es
aam
lock
lahf
test
pop
pop
popa
push
mov
adc
pop
sub
in
subl
inc
ret
ss
jmp
pop
test
rcll
pop
jb
andl
outsl
cs
mov
addr16
clc
xor
mov
fs
and
mov
aas
mov
cmp
xchg
ds
lret
dec
jns
les
shrb
ss
xor
leave
lock
lret
inc
ror
xchg
xchg
mov
adc
hlt
scas
lods
jge
push
out
test
sbbl
adc
orl
stos
add
jge
mov
call
jle
testb
leave
mov
fmul
or
push
sti
mov
jne
popl
ret
sub
or
add
pusha
and
pop
inc
mov
mov
out
pop
lea
das
jmp
jmp
pause
mov
ljmp
sub
and
fsubrl
cmpsb
xchg
add
mov
lods
imul
pop
cmpsb
xchg
fcomp
mov
jae
sti
fsubl
scas
cmp
ret
mov
sbbl
daa
adc
jmp
ss
out
call
daa
pop
ljmp
fs
pop
jle
dec
pop
xchg
cmp
lret
push
lods
repz
inc
dec
gs
or
jne
mov
sub
loopne
mov
les
sub
ds
adc
out
cmp
cmp
lahf
scas
or
arpl
in
stos
mov
lods
insl
and
mov
inc
cmpsl
stos
out
insb
push
jne
loop
jo
repz
jmp
bts
jae
pop
stc
sarl
mov
sarl
push
pop
popa
cmp
pop
addr16
xor
jb
dec
fsubs
inc
jno
std
add
gs
repz
scas
xchg
xchg
iret
push
jne
push
add
jp
hlt
cmp
xor
lahf
loope
inc
pop
bnd
insl
jle
and
and
fisubrs
mov
adc
add
add
dec
push
push
adcb
dec
sbb
aaa
jb
push
xor
out
push
lcall
jmp
leave
iret
pop
scas
data16
mov
cmpsb
adc
push
lock
movsl
stc
adc
sub
dec
mov
adc
shll
pusha
sub
stos
das
cld
lods
in
jb
mov
mov
scas
dec
ror
popf
and
inc
mov
dec
and
das
jl
mov
mov
xlat
pop
dec
loope
sub
mov
jg
mov
sbb
xchg
jmp
pop
ljmp
sub
and
fmul
sub
outsb
aas
icebp
add
ss
ds
push
jmp
aas
pop
imul
cld
pusha
in
lahf
jnp
fs
outsb
dec
test
into
gs
stos
adc
mov
xor
xchg
jp
ja
jns
je
jmp
lock
and
fisubrs
push
cmp
sub
pop
push
into
pop
xchg
cld
mov
jp
sbb
push
jle
ret
stos
mull
sub
jno
sbb
aas
mov
arpl
mov
jp
imul
in
mov
xchg
pusha
int
cmp
pop
mov
mov
out
inc
xor
aas
add
call
jno
outsl
ficomps
and
test
je
push
clc
popa
test
pop
or
xlat
cltd
inc
pop
rclb
lahf
outsb
addl
cs
sub
push
fwait
mov
mov
mov
sub
xor
arpl
ja
inc
cmpsl
jl
sub
outsb
pushf
push
cmp
fbld
add
cltd
mov
andb
sbb
shlb
push
xchg
xor
inc
fiadds
cwtl
jb
test
or
out
pop
imul
cmp
jno
jb
push
jb
pop
and
sbb
test
cli
cmp
outsb
inc
mov
sbb
scas
adcb
jecxz
enter
and
lret
mov
adc
adc
addr16
or
mov
xor
cmp
xlat
mov
pop
jp
iret
repnz
pop
and
sub
ja
enter
fidivl
leave
sbb
es
dec
roll
or
cmc
xchg
inc
sub
mov
call
fs
sbb
arpl
push
test
mov
inc
divb
push
into
lods
add
fs
icebp
mov
scas
arpl
jns
shlb
xchg
and
out
add
or
mov
test
test
cwtl
sub
inc
lods
cld
mov
cmp
les
dec
mov
push
test
pushf
mov
xchg
mov
inc
scas
imul
sub
daa
or
les
cmp
pop
cmp
subl
add
jl
inc
movsl
fcomp
rcrb
ficoms
jmp
pop
sub
fmull
inc
inc
cs
adc
adc
nop
ljmp
dec
mov
push
push
xor
mov
lahf
mov
dec
ret
sub
test
loop
in
or
daa
ficoml
mulb
xor
nop
cmp
xor
xchg
and
jae
pop
pop
js
inc
dec
cmpsb
push
push
out
outsl
daa
clc
lahf
call
sbb
xlat
jge
inc
push
xchg
and
mov
movsl
test
rcrl
and
pop
hlt
dec
mov
push
xchg
push
jmp
or
pop
xor
aad
loope
lods
cmpsl
inc
lret
jno
add
add
mov
in
int3
iret
fdiv
pop
loopne
rcr
push
and
mov
imul
push
lea
js
xor
sbb
cmp
ficomps
rol
jno
out
subb
mov
fisubl
xor
pop
xorl
ja
xor
cld
jb
pop
or
sbb
and
and
fwait
notb
fbstp
es
mov
loope
jo
jae
dec
repnz
fs
mov
dec
test
cmp
push
push
push
add
cmp
push
popa
lahf
dec
mov
sub
mov
popf
dec
cwtl
cld
jmp
loopne
or
pop
push
fwait
aad
inc
pop
mov
push
xchg
dec
call
fisttps
xchg
xchg
cmp
mov
lcall
push
fs
aad
sub
iret
mov
cmpsb
add
pop
ret
out
lock
jns
sahf
inc
mov
cli
add
out
fistl
stos
sub
mov
sub
sub
xlat
js
xchg
insl
xchg
test
and
dec
and
outsl
jb
insb
xchg
adc
inc
mov
mov
pusha
push
in
dec
dec
mov
inc
addr16
test
mov
xchg
out
jg
adc
jae
pushf
ja
mov
bound
push
dec
mov
pushf
sahf
lods
jle
xlat
pop
pop
push
bound
gs
inc
rcrl
cwtl
cwtl
sbb
loop
mov
sub
mov
roll
lahf
mov
inc
xlat
push
mov
pop
push
mov
insb
imul
in
jp
scas
movsl
jae
xchg
fwait
popf
mov
and
xchg
and
lds
cmp
add
or
into
mov
sbb
adc
push
testl
ficoms
es
shlb
stos
movb
mov
jo
add
cli
movsl
das
pop
push
mov
stos
cmp
pushf
out
lock
lahf
nop
mov
ret
xlat
dec
cli
out
cltd
inc
and
adc
sub
add
in
or
hlt
int
in
adc
cs
push
lahf
add
jae
ds
movsb
jle
aam
mov
pop
rcr
cmpsb
add
imul
cmp
shll
icebp
sahf
pop
js
lahf
pop
je
adc
or
outsl
mov
pop
lock
sti
int
shl
loop
pop
lea
insb
jl
xor
jecxz
nop
fcmovb
enter
test
test
int3
movsb
jp
mov
add
out
push
xor
in
inc
cmpsb
iret
pop
imul
dec
stos
ret
mov
push
in
test
push
add
xchg
gs
mov
outsl
inc
std
and
les
std
xchg
pop
in
cmp
jb
enter
push
inc
jge
in
mov
out
stos
dec
push
push
sub
data16
adc
repz
or
sbb
mov
cmp
rorb
jns
out
mov
or
and
cltd
clc
lea
popa
imul
pop
std
add
inc
data16
dec
inc
xor
xorb
push
imul
lret
sub
pushl
xor
lock
dec
jbe
loope
jmp
jmp
aam
mov
or
sbb
jb
or
mov
mov
test
fnstcw
sub
pop
aaa
les
mov
xchg
dec
push
mov
xchg
popa
adc
ljmp
addl
je
imul
test
xchg
fwait
loop
arpl
cmp
adc
stc
cmpsb
std
add
ds
xor
fidivrl
imull
push
outsb
push
xlat
mov
popa
ret
dec
stos
add
popa
rol
loop
sub
inc
aaa
notl
jp
pop
push
into
fs
lcall
sub
arpl
xchg
std
iret
xor
iret
int3
jno
xor
lret
add
pushf
repnz
in
fs
mov
movsl
aas
mov
loop
mov
aas
jmp
and
push
jmp
hlt
xchg
lret
pop
fstl
int3
mov
xor
repz
pop
mov
lret
lds
sbb
or
fldt
push
hlt
outsl
adc
mov
mov
in
jb
daa
mov
cmp
call
or
pop
out
sbb
scas
or
movsl
test
pop
fidivs
repz
iret
jb
and
pop
scas
push
push
pushl
lea
push
mov
pop
bound
stos
mov
mov
jnp
and
cltd
test
sbbb
lea
imul
fscale
mov
repz
cld
in
nop
dec
lahf
add
push
pop
inc
ret
cmpl
mov
inc
mov
push
imul
pusha
adc
push
int
mov
imul
ret
sub
scas
xchg
cmp
data16
out
xchg
lret
mov
pop
sbb
ret
stos
out
push
int
iret
lock
jl
lahf
call
sarl
sub
mov
inc
sub
aad
cmp
sub
mov
add
mov
mov
xor
dec
inc
xor
jb
testl
ret
gs
adc
fmuls
leave
loop
cmp
rcr
pop
repz
xor
push
push
dec
jg
mov
pop
push
jns
sub
jge
inc
pop
test
aaa
idivl
imul
push
cmp
mov
mov
test
push
or
stos
fdivl
mov
int3
mov
xchg
inc
cmp
xor
adc
lods
stos
imul
stc
add
lahf
pop
div
push
cs
push
nopl
xor
add
push
sub
cli
test
clc
push
pop
int3
xor
lcall
xor
andl
outsl
icebp
mov
outsl
mov
cltd
fcoms
sbb
in
popf
push
pop
xchg
scas
cmp
mov
or
dec
sbb
es
adcb
fsubl
and
pushf
xor
aad
push
sub
cmpb
dec
xchg
ret
nop
xchg
das
pop
lods
call
adc
sub
mov
stc
iret
mov
lahf
je
leave
dec
imul
insb
add
add
add
add
insl
fs
xor
cs
insb
add
add
add
add
jb
gs
xor
cs
insb
add
inc
js
inc
dec
dec
dec
jne
outsl
cmp
bound
push
jle
js
inc
sub
jb
insb
aaa
xor
pop
and
push
dec
jnp
pop
pop
outsl
imul
and
and
.byte
lods
.byte
leavew
leave
