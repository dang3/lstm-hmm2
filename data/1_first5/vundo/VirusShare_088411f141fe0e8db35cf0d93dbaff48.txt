sbb
add
roll
xchg
fidivrs
adc
lcall
xchg
inc
fisttpl
ret
sub
arpl
cmp
ret
sub
imul
in
push
xchg
adc
ss
insl
mov
movsl
sbbb
stos
jp
adc
fists
out
push
push
jmp
jmp
or
movb
mov
xor
mov
jo
outsl
mov
imul
loope
jle
hlt
xlat
pop
mov
mov
cmc
int
dec
enter
into
ret
dec
mov
xchg
mov
pop
daa
popl
outsb
adc
push
mov
ljmp
movsb
ljmp
cltd
push
int
iret
stos
outsl
repnz
jns
cmp
mov
scas
repz
mov
orl
and
xor
out
mov
cli
jge
or
stos
inc
push
mov
adc
pop
sbb
iret
sbb
mov
adc
fdivrl
aaa
inc
imul
mov
dec
add
lods
imul
push
add
rorl
mov
jmp
dec
xor
mov
sbb
jnp
jns
xchg
xor
fwait
dec
pop
out
xchg
and
xchg
out
cmpsl
les
or
jb
inc
test
jns
rcrl
dec
mov
lods
lret
mov
xchg
dec
int
fwait
mov
xchg
in
int
xor
mov
and
scas
fcoms
sahf
test
loop
call
pop
aam
jnp
mov
aaa
inc
cmp
mov
xor
mov
rclb
loopne
mov
arpl
insl
or
loopne
adc
lea
mov
push
jg
mov
and
call
jle
mov
pop
sub
push
cmp
mov
dec
or
jl
mov
cwtl
in
aaa
ljmp
cmp
sbb
push
sbb
out
lret
iret
and
loop
jbe
xchg
pop
std
iret
jge
xchg
sbb
sub
jns
push
cmp
add
xchg
data16
rcrb
ret
or
push
test
lods
scas
push
stos
xchg
sub
sub
push
jne
or
mov
testb
das
scas
movsl
outsl
mov
insl
push
add
imul
pop
push
divl
ja
arpl
pop
insb
mov
sbb
cvttps2pi
mov
adc
xchg
cmp
test
and
mov
pusha
fwait
jnp
ljmp
cmc
bound
pop
cmpl
popf
pusha
lock
add
lahf
gs
pop
push
add
das
sbb
in
int3
mov
and
into
lahf
or
mov
xchg
fisttpll
insl
pop
fisubrl
xchg
cli
hlt
mov
mov
dec
clc
or
mov
sahf
je
jb
cld
pop
imul
das
fisttpl
into
mov
iret
adc
xchg
cmpl
inc
mov
test
addr16
add
das
mov
and
and
scas
movsl
mov
ja
jne
dec
push
out
test
jae
fdivrs
mov
jmp
xchg
xchg
lds
into
sbb
adc
sahf
pop
mov
or
aaa
push
dec
outsl
and
movsb
sub
jno
dec
out
movsl
xchg
add
push
ja
and
je
fwait
mov
mov
jle
imul
jmp
mov
jg
add
outsl
test
push
pop
jb
push
fstpl
int3
sti
mov
out
cmp
xchg
mov
inc
mov
aam
dec
adc
and
dec
decb
jbe
lods
xchg
outsb
mov
outsb
gs
mov
fmulp
je
jmp
or
inc
cmpsl
or
pop
out
fisubrl
hlt
repz
iret
loop
popa
ret
mov
mov
loop
xchg
push
scas
loopne
pushf
mov
push
pop
or
cmp
in
sub
aas
inc
rcrb
push
jle
ja
enter
mov
adc
pop
sbb
or
xor
orps
dec
cmp
dec
mov
mulb
movsb
insl
das
cmp
lock
or
outsb
enter
pop
lahf
adc
out
xor
dec
mov
jno
mov
inc
sub
jecxz
divb
push
and
mov
mov
mov
into
jnp
ljmp
and
pushf
dec
push
jbe
xlat
cmp
test
jle
lea
sub
clc
fldl
idiv
pop
cwtl
jmp
push
adc
and
inc
push
cmpsb
lret
repnz
inc
ja
dec
jo
adc
mov
outsl
jl
inc
jp
push
fbstp
or
sub
lcall
lahf
sbb
clc
and
or
lcall
idivb
jbe
ja
pop
jnp
sub
repz
sub
aas
add
push
add
addl
movsb
movsl
inc
jns
push
jle
or
lcall
add
dec
lcall
xor
fldenv
mov
and
lds
xchg
in
xor
into
in
aad
cmp
cmp
mov
mov
mov
popa
inc
xchg
repnz
stc
adc
bound
dec
lds
mov
xchg
jl
or
daa
hlt
fsubl
fbstp
jo
movsb
imul
sbb
sbb
add
ja
repz
cltd
and
lods
inc
jno
fisubrs
fidivrl
in
mov
push
jbe
inc
sub
cmp
jmp
lock
xor
inc
adc
cwtl
imul
jp
loop
xchg
rol
push
sarl
adc
js
mov
sbb
pop
lahf
cmp
mov
ja
scas
scas
imul
sub
std
pop
std
subb
adc
mov
adc
test
jg
pop
adc
in
movsb
iret
push
aad
adc
xchg
mov
xchg
push
out
or
mov
out
inc
jl
push
test
insl
shrb
jmp
or
adc
jns
daa
into
push
push
ds
mov
inc
sub
adc
mov
fidivrs
sti
test
dec
negb
or
push
push
push
in
cmp
inc
jb
dec
int3
sub
mov
in
jnp
sub
jl
fisttpll
leave
mov
scas
test
sbb
jmp
ss
dec
sti
cmpsl
and
jmp
loopne
je,pt
popa
jmp
add
subb
jns
push
imull
or
daa
pop
add
mov
mov
lret
sub
out
push
add
sub
sub
cmp
jns
dec
addr16
sbbb
jno
pop
xor
fwait
aam
pop
ja
rclb
xchg
fld
mov
or
or
sbb
cmpsl
pop
xchg
test
mov
jne
cvttps2pi
icebp
mov
dec
push
sbb
repz
mov
cld
mov
mov
xor
mov
push
bound
or
mov
add
fs
mov
test
mov
push
stos
add
jg
int
push
mov
gs
test
aaa
mov
sub
mov
sbb
pop
add
mov
int3
js
aam
mov
int3
pushf
sbb
addr16
push
pushf
jmp
sbb
mov
mov
dec
or
add
push
cld
mov
test
sub
std
and
icebp
xor
pop
orb
aaa
sbbl
mov
and
push
test
sub
and
push
inc
and
out
mov
push
xlat
ljmp
icebp
dec
insl
push
stc
pop
or
mov
test
jecxz
int
mov
lds
and
in
int3
mov
mov
aad
cmp
nop
cld
test
lock
mov
stos
xor
jnp
shll
js
cmp
cmp
xchg
dec
and
push
sbb
pop
dec
outsb
cld
rclb
mov
pop
jl
ret
sub
popf
scas
and
dec
clc
add
sub
out
dec
out
lret
or
cmp
cmpsb
push
and
mov
xor
cmp
icebp
xchg
mov
jp
out
arpl
test
push
loope
ret
andb
ret
idivb
dec
dec
fwait
std
mov
jecxz
mov
es
test
mov
cmp
test
mov
lcall
orb
or
cli
rcrb
movsb
jle
lret
mov
mov
lea
inc
xchg
push
sbb
and
mov
ds
xchg
movsl
scas
push
xor
sbb
jns
pushf
lock
sub
test
mov
xchg
fisubrs
xchg
fildl
mov
mov
imul
test
add
mov
lods
fdivl
movb
aaa
enter
inc
adcb
jbe
enter
mov
testl
test
mov
add
pop
das
push
insb
sbb
nop
inc
in
test
test
jle
fistl
sbb
xchg
sbb
push
movsb
inc
xacquire
jb
fnstenv
ljmp
jl
mov
lret
cmp
jmp
stos
stc
hlt
cmpl
loopne
fisttpll
xchg
in
scas
cld
fs
cmp
dec
scas
je
outsl
ljmp
in
dec
movsb
sbb
arpl
pop
pop
lock
in
mov
push
xlat
addl
jg
xchg
imulb
lods
sub
adc
data16
aam
cli
nop
test
xor
pushf
add
lret
adc
cmpsb
pop
push
shrb
or
neg
neg
mov
lods
loop
ret
inc
xor
ja
gs
push
pop
test
loop
popf
add
inc
sbb
push
push
push
sub
popf
imul
flds
pop
in
addr16
pop
icebp
dec
inc
ss
mov
js
iret
xor
mov
ds
sti
rol
pop
rcll
jle
loopne
adc
hlt
fucomi
jmp
idiv
or
fcmovnb
test
mov
mov
sbb
or
shlb
cld
inc
or
xor
mov
rorb
cmpsl
xchg
jmp
jbe
or
inc
sahf
jns
cmp
inc
ljmp
pop
loope
mov
daa
cmc
out
adc
icebp
xor
lret
xchg
sub
out
addl
arpl
and
dec
fldl
enter
xchg
fdivs
orl
sbbb
hlt
and
add
cmp
and
pop
ja
xor
inc
lods
cld
loop
repz
push
mov
iret
pop
jnp
jno
mov
adc
jbe
or
xchg
cmp
cmp
cmp
jl
dec
xor
xor
in
or
pushf
es
das
mov
ret
in
in
testb
cli
add
lds
movsl
addr16
lds
movsb
lds
stos
xor
outsb
pop
fdivp
scas
inc
or
fldt
push
mov
jb
inc
sbb
clc
pusha
cmp
xchg
jb
xor
sbb
outsl
pop
push
jmp
mov
stc
test
xor
stos
cmc
jmp
push
jg
add
js
jp
or
ret
jp
dec
xor
iret
xor
hlt
in
out
and
cmp
lcall
push
mov
cmpb
ffree
or
pop
cmp
outsb
sbb
jb
sub
pop
shl
jecxz
in
push
pop
mov
fisubl
jae
mov
xchg
into
popa
pop
into
arpl
push
cmc
mov
mov
mov
in
setge
shll
insb
xchg
rcrb
repz
sti
lds
pop
push
mov
pop
push
sahf
mov
pop
stc
sbb
add
pop
sub
call
cli
cmp
mov
add
fcmovu
xchg
in
in
push
pop
addr16
lahf
outsb
fwait
adc
icebp
jbe
fldcw
aad
subl
mov
dec
inc
sahf
scas
or
or
xor
pop
sub
fistpll
dec
mov
rcrl
cmp
jne
or
ds
adc
mov
cmp
out
es
mov
lcall
stos
push
xchg
cmp
mov
xchg
add
sbb
mov
sbb
mov
push
cmp
pop
sub
outsb
xchg
scas
xor
insb
sub
aad
mov
cli
shlb
cmp
add
inc
mov
jl
stc
mov
dec
inc
in
aam
xchg
mov
jb
ret
push
test
mov
es
stos
xchg
xlat
pop
lods
adc
dec
mov
test
orl
in
mov
stc
pusha
gs
call
lods
jae
xchg
cltd
cmpsl
out
xchg
push
sub
pop
outsb
shl
adcb
into
rcrl
ret
jbe
loop
stc
sbb
jae
cmpb
and
jbe
mov
xchg
jne
add
mov
xor
roll
lcall
inc
setle
adc
mov
jecxz
pop
sub
les
fwait
in
daa
inc
ret
push
mov
fisubl
fdivrp
fdivl
insl
or
pop
push
or
push
movsl
cmpsl
push
in
pop
sbb
sbb
xchg
cld
mov
dec
ret
orl
sti
jecxz
call
fldcw
inc
mov
mov
xchg
mov
jg
mov
xchg
pop
mov
mov
mov
arpl
leave
push
push
clc
sbb
jle
movsb
push
and
lods
dec
arpl
pop
orl
cmpsl
cltd
ja
mov
ds
push
insb
cld
mov
xchg
dec
xchg
pop
sub
nop
push
vhaddps
pusha
inc
mov
inc
pop
xor
and
xchg
add
rolb
push
in
in
jmp
mov
sub
fdivp
push
or
shrl
xchg
ret
dec
arpl
fs
jl
test
cmp
mov
xchg
sub
sub
xchg
lods
fildl
sbb
mov
jle
inc
clc
or
mov
shlb
mov
push
jno
enter
insb
decb
and
bound
test
cltd
jecxz
push
test
rcrb
mov
das
ret
jne
pop
enter
clc
pop
test
mov
xchg
insb
aas
loop
lods
jmp
scas
sub
aas
sahf
aaa
popa
jo
out
cmp
lcall
lods
lods
dec
out
sbb
push
mov
andl
or
pop
mov
test
sbb
xorl
sub
dec
push
lret
notb
xorl
test
ja
popa
andb
ss
loope
sti
push
stc
pop
xlat
pop
pop
dec
push
insl
push
insl
das
inc
mov
mov
mov
xor
push
jmp
mov
xchg
rcr
sahf
stos
xchg
and
mov
cmp
lock
cmpsb
rclb
or
dec
rcrl
mov
std
data16
insb
mov
sub
fimull
pop
or
mov
push
dec
mov
std
mov
dec
decb
jo
faddp
fdivs
xor
push
mov
loope,pt
rorl
call
aad
data16
mov
dec
add
sub
addr16
dec
mov
sbb
jle
sarl
adc
pop
adc
jae
mov
xor
sub
xlat
xchg
jbe
push
js
add
pop
xchg
xchg
and
sub
movsl
iret
repnz
pop
cmp
movsl
scas
inc
adc
es
cmp
mov
ficoms
xor
cmp
pushf
push
cs
fsubrl
mov
fcompl
data16
jmp
fwait
mov
and
adc
mov
jnp
lahf
loopne
int
jl
outsl
xchg
add
add
int3
pop
adc
imul
movsl
dec
add
sbb
xor
sub
movsb
mov
xor
or
jmp
movsl
cmpsb
popf
cmpsb
jle
loop
or
pop
sbb
or
out
negb
movsl
rcll
sub
loop
or
sub
mov
mov
shrb
es
push
in
mov
mov
pop
cltd
stos
add
inc
dec
mov
mov
sbb
xor
cmp
in
ss
cmp
je
in
add
mov
stos
dec
stc
adc
push
fsubrl
mov
leave
push
pop
or
xchg
gs
mov
sbb
out
inc
mov
mov
sti
daa
dec
outsb
or
add
cli
fistl
fwait
out
in
shll
sub
push
pop
lahf
inc
dec
xchg
lret
lret
cmp
push
scas
out
or
movsb
int
pop
jle
jp
icebp
or
cvtpi2ps
jle
mov
mov
adc
shll
movsl
les
push
call
movsb
xor
scas
push
test
outsl
jbe
in
lods
add
mov
lahf
pop
out
daa
jne
lock
subb
scas
daa
adc
jl
aaa
sbb
jb
adc
dec
jnp
fisubrl
add
mov
test
adc
aas
ja
std
pop
in
mov
int3
dec
aam
inc
mov
mov
dec
mov
jnp
mov
dec
add
jp
popa
repz
je
shll
pop
or
das
mulb
adc
nop
adc
dec
jle
or
cwtl
xlat
push
cmp
jbe
shr
push
and
fnstcw
fdivrl
das
loop
mov
xor
cld
push
mov
clc
mov
fucom
sub
push
testb
jmp
mov
cli
cmpb
jp
outsl
mov
jmp
in
movl
jno
repz
sbb
test
sbb
mov
sti
into
hlt
jge
pop
insl
jnp
cltd
rorb
sahf
push
sbb
dec
mov
or
cmpsb
adc
pop
or
jae
sbb
jo
insb
int3
cltd
rcr
inc
mul
jmp
cmp
mov
or
adc
inc
xchg
jg
je
mov
inc
insl
dec
aaa
pop
dec
sub
cmp
or
std
imulb
nop
fbstp
jo
fisubrl
xlat
negl
dec
jnp
xor
test
pushf
mov
add
mov
movb
adc
push
xchg
popf
ja
sarb
mov
fiadds
adc
push
out
addr16
mov
test
mov
mov
sbb
mov
add
icebp
imulb
rcrb
dec
sub
mov
push
bound
inc
ja
cmp
push
iret
js
fcomps
lods
xchg
shll
rclb
push
in
cmp
stos
fcomps
mov
mov
cmp
decb
mov
pushf
pop
dec
push
shlb
mov
pop
add
xor
je
in
hlt
mov
dec
xchg
subb
icebp
cmpsb
les
ds
addr16
stos
sbb
test
jmp
cmpsb
push
stos
leave
jno
push
inc
dec
sub
call
ret
cld
and
jge
mov
xchg
mov
push
inc
or
pushf
in
shlb
scas
jo
in
outsl
popf
xchg
test
xchg
mov
xchg
insb
mov
shl
jbe
stc
push
sahf
dec
stos
in
sub
stos
mov
lret
push
jnp
jb
xchg
mov
arpl
xor
shrb
or
in
imul
jge
push
adc
xchg
aam
push
repz
push
fcomps
and
cmp
addb
scas
es
jnp
fs
inc
shl
xor
fs
xor
lds
loopne
jo
ss
xchg
jl
out
arpl
hlt
int
addr16
adc
cwtl
pop
das
clc
shr
jne
and
adc
imul
fs
jp
jl
sub
incl
dec
mov
not
lahf
or
rcpps
into
fucom
lcall
loop
jno
fsubrl
shll
lea
jg
test
leave
lds
jnp
lret
scas
ds
outsb
dec
loopne
dec
loop
xchg
dec
mov
and
pop
sub
pop
out
popf
cmp
xlat
mov
add
js
stc
inc
out
ret
pop
lea
negb
adc
inc
dec
mov
lcall
cltd
cmp
lret
inc
sub
dec
scas
fsubs
das
add
insl
jmp
xor
sub
sub
loopne
iret
gs
ljmp
and
ret
add
jbe
repz
pop
mov
jecxz
stos
push
xchg
mov
mov
addr16
mov
arpl
pop
sbb
fmul
movsl
repz
lret
xchg
mov
movsb
lcall
ss
stos
xchg
or
sub
mov
sub
ret
shl
xchg
fsubrs
out
fldl
fsubs
fisubs
stc
adc
mov
stos
xchg
and
pop
scas
popa
ljmp
cld
sbb
div
imul
cld
pop
loopne
sbb
scas
mov
jmp
jne
je
stos
mov
inc
cmpsb
movsb
dec
sbb
jg
dec
sbb
cs
inc
outsb
aas
or
aad
jbe
outsb
add
stos
xor
popf
xchg
adc
mov
shrl
movsb
xchg
rolb
sbb
push
test
pusha
out
mov
push
sub
inc
xchg
dec
fiaddl
jecxz
xor
add
mov
jbe,pn
sbb
cltd
push
pusha
jns
mov
mov
jne
mov
aaa
cmp
out
fdivl
arpl
mov
fdivrl
test
int3
test
cmc
sbb
jmp
pop
ficoml
lods
jmp
mov
stc
stc
jo
inc
xchg
cmpsb
sti
insb
out
sub
push
cltd
mov
enter
and
cld
mov
rolb
cwtl
iret
aad
test
sub
test
xchg
leave
lock
mov
scas
xchg
cmpb
mov
mov
sti
stos
push
int3
mov
aaa
add
sub
jmp
push
mov
sub
gs
mov
or
mov
and
xchg
adc
dec
dec
and
cmp
push
jp
push
cltd
lahf
sarb
in
jo
gs
jg
add
lret
push
imul
jo
lret
std
lahf
fsts
scas
cmp
shll
sub
sub
aad
test
pop
lds
jno
xchg
jnp
prefetchw
or
xor
jbe
add
fisubrs
in
enter
dec
fdivs
jo
pop
repnz
adc
imulb
cmp
subb
dec
pushf
out
fdivl
stos
xchg
test
mov
lock
adc
or
subl
sarl
dec
mov
or
scas
stc
pop
and
aaa
xor
loop
rol
int3
adc
sbb
mov
iret
xchg
cli
inc
enter
lret
push
add
loop
jb
cs
adc
cmp
ja
stos
cs
and
sub
mov
inc
stos
std
jp
push
fstl
imul
push
test
jns
faddl
push
adc
sahf
pop
pop
shlb
movzbl
and
cli
push
and
punpcklwd
jle
pushf
fsub
scas
pop
jmp
mov
dec
and
test
pop
xchg
out
mov
adc
inc
jle
ret
into
inc
mov
rcll
mov
bound
jno
pop
pop
fxam
push
sub
sarl
in
int
add
mov
into
sti
movsl
cld
lods
push
jle
xor
pushf
sub
rcr
inc
or
mov
jnp
xchg
pop
cmc
ljmp
repnz
incb
mov
push
or
daa
pop
shrl
jno
icebp
daa
ja
sub
and
jmp
xchg
xchg
fmull
fiaddl
jbe
sarl
xor
mov
mov
pop
stc
xchg
inc
mov
push
add
xor
mov
mov
ret
push
rcrb
cld
dec
push
cmpb
xor
mov
jl
in
adc
inc
inc
push
inc
push
and
pop
xchg
add
mov
inc
iret
push
add
stc
daa
andps
ret
sub
data16
lods
xlat
icebp
xchg
mov
mov
scas
aam
fiadds
dec
cmp
int3
and
out
and
ja
xlat
push
mov
mov
rolb
xor
sub
inc
rolb
mov
push
jne
shrl
addr16
mov
test
int
cmp
fwait
in
fisubl
fld
enter
in
jge
jecxz
ret
jp
out
lahf
or
clc
xor
pop
cmp
mov
and
jb
add
xchg
adc
bound
nop
xor
jae
sbb
fsubr
andb
sbb
inc
pop
push
mov
in
fistps
pop
sbb
popf
bound
sarl
or
xor
cmp
pop
xlat
jp
add
add
in
sub
inc
mov
popa
testl
or
pop
push
hlt
mov
jmp
fcoms
xchg
add
mov
mov
push
mov
fs
push
sbb
mov
rcl
scas
lods
je
test
xchg
inc
mov
sbb
lret
add
inc
gs
push
cmpsl
mov
leave
ja
rorl
stc
sub
das
adc
push
push
ds
nop
fcmovnb
pop
cmpsl
mov
gs
mov
xchg
movsb
add
pop
mov
dec
lcall
ds
inc
stos
cmp
add
adc
popf
ja
mov
in
sub
and
sbb
xchg
fwait
mov
int3
cmpsl
aas
push
pop
out
pop
xor
movsl
frstor
int
mov
add
xor
sbb
rorl
outsb
ja
rcll
cld
jp
test
das
je
mov
lcall
loopne
xchg
movsl
lock
mov
or
test
jmp
pop
ja
cwtl
les
push
lret
in
je
xor
jle
inc
ljmp
mov
jmp
inc
inc
iret
repnz
cmp
inc
ds
and
cmpsb
loope
dec
testb
pop
call
pop
xchg
push
das
adc
ja
push
mov
hlt
insb
lea
mov
mov
push
push
sbb
jnp
aad
mov
test
jge
jno
arpl
cld
mov
pop
add
shll
imul
sub
test
aad
push
and
rolb
pop
in
adc
das
cmpsb
mov
in
popf
sbb
ja
mov
xchg
out
movsl
dec
xchg
rcrl
mov
pop
pop
out
xchg
push
pop
call
stos
cwtl
push
loop
fwait
mov
ds
push
pusha
and
inc
xor
mov
inc
sbb
jo
aam
mov
divb
sti
hlt
dec
sub
cs
mov
and
dec
jne
scas
cmp
lock
stos
add
jp
lock
movsl
test
fmul
mov
and
aad
add
out
dec
bnd
pop
lock
rcr
mov
je
inc
es
fcmovne
inc
std
addr16
repz
xchg
int
iret
lea
sbb
and
aaa
mov
jle
lds
out
mov
cmp
or
sub
iret
ss
negl
fst
push
cmp
in
int
cmp
fidivrs
pop
mov
jg
in
sbb
mov
pusha
bound
or
or
ret
mov
cmp
and
adc
jns
fimuls
sbb
pop
dec
fisubl
dec
aad
add
and
fwait
aad
mov
push
leave
pop
fimull
sub
sbb
pop
ret
mov
add
loop
in
test
mov
adc
ret
push
js
mov
jmp
decb
insb
in
repnz
cmc
add
jne
pusha
aad
loope
int3
jbe
inc
mov
or
jbe
dec
ret
xor
mov
ret
sbb
add
clc
repz
scas
fisubrs
cwtl
jmp
lahf
add
and
fs
inc
ja
addr16
ret
pop
neg
mull
jne
addr16
mov
dec
cmc
jecxz
icebp
sub
test
push
es
dec
sti
sub
pop
sub
cmp
inc
cmpsl
test
imul
inc
popa
dec
gs
push
inc
jns
pop
insl
fidivl
les
xchg
and
ss
nop
push
inc
inc
add
sub
in
mov
filds
push
dec
arpl
xor
icebp
jae
inc
ss
in
movsl
stos
mov
or
gs
les
in
fdivrs
cmc
ja
sub
mov
ja
push
jecxz
fmuls
xchg
push
xchg
xor
mov
test
testl
fcoml
sarl
sub
xchg
add
cmp
xor
mov
pop
cmpsl
xchg
cwtl
bound
cmpl
lods
push
fimull
lret
shrl
mov
add
les
xchg
out
and
pop
jnp
xlat
xchg
loopne
in
pop
in
in
xchg
outsl
mov
lret
xor
call
mov
lods
test
push
or
mov
pushf
mov
sbb
dec
add
cmp
lret
xchg
adc
adc
jecxz
push
push
shll
pop
icebp
pop
adcb
add
cld
sahf
sbb
int
daa
mov
pop
repz
mov
loopne
clc
rclb
mov
dec
inc
loopew
adc
add
push
cld
or
ficoml
and
leave
push
cmp
adc
lret
pop
cmp
pop
inc
stos
push
or
or
sub
inc
mov
xchg
dec
or
dec
cwtl
imul
add
dec
sub
jge
shrl
in
lcall
and
fwait
sbb
push
cmpsl
jecxz
ljmp
add
cwtl
inc
mov
jge
inc
lahf
es
mov
andl
add
aas
jl
loopne
stos
lret
sbbl
test
btc
push
and
adc
cltd
popa
or
cmp
enter
jl
sbb
jno
fdivrs
cmpl
mov
pop
in
jl
dec
scas
ret
pop
sub
push
or
aas
ret
pop
dec
insb
mov
sub
movsl
sbb
imul
pop
fstpl
repnz
push
jl
in
insb
shr
hlt
mov
push
mov
ds
js
jge
sbbl
add
jno
scas
stos
cmp
mov
cmp
enter
pop
push
pop
scas
loopne
add
xchg
cmp
pop
dec
repz
jg
pop
inc
aas
ret
pushf
ljmp
arpl
sarl
jge
xchg
xor
adc
in
cmc
test
popa
test
out
mov
and
jae
pop
or
mov
dec
pop
lret
push
loop
add
add
push
or
sahf
rcrb
pop
push
push
push
popf
loop
lock
jne
xchg
cmp
jb
movsl
sub
ljmp
mov
shl
lcall
outsl
call
insl
sbb
push
insl
cmp
int
jb
lret
std
mov
in
push
cmp
cmp
sbb
pop
mov
loopne
pop
sub
movsb
aas
jno
loop
addr16
inc
pop
push
sahf
pop
jbe
jo
cli
xchg
mov
nop
pop
dec
jbe
adc
dec
lret
adc
ret
mov
push
aaa
pop
xchg
and
push
cmp
xlat
das
sub
in
ret
fimuls
jmp
aad
inc
jb
or
mov
cwtl
mov
es
and
shll
adc
add
push
in
js
jmp
imul
mov
sahf
gs
pop
jo
mov
xchg
mov
int
xor
hlt
xor
mov
aad
mov
pop
adc
push
inc
inc
fsubrl
mov
in
movb
je
dec
mov
adc
leave
mov
jg
dec
decl
push
add
jbe
jp
adc
xor
loopne
fs
sub
mov
movsb
adcl
or
lea
fs
xchg
or
mov
jo
std
call
in
sahf
inc
jge
test
ret
inc
xorb
lret
sbb
cmp
mov
dec
and
outsb
in
pop
and
xor
sahf
pop
repz
dec
inc
js
inc
xor
dec
pop
stos
cmc
cltd
jb
push
rcl
into
rcr
pop
cmp
dec
clc
sbb
jbe
cmpsl
mov
xchg
jns
dec
jp
fimuls
out
jo
push
fnstenv
das
loopne
inc
ds
ja
and
xchg
aaa
incl
dec
add
xor
mov
test
push
add
mov
scas
mov
test
and
add
ret
add
test
dec
test
mov
pop
adc
aad
movsb
mov
adc
xor
mov
aam
movsb
inc
pop
push
lahf
xchg
xor
out
jle
fnstcw
cmp
adc
or
enter
pop
or
or
hlt
ds
in
or
cli
repz
push
mov
popf
xchg
cmc
loopne
or
sub
call
inc
inc
inc
movsl
or
jae
lret
scas
sbb
and
fcmovbe
shrb
push
loope
adc
cmp
cli
dec
arpl
add
testl
sub
add
movsl
mov
sbb
push
mov
inc
js
loope
insl
jbe,pn
xchg
jge
push
gs
cld
pop
inc
jne
cli
jge
pop
xchg
clc
popa
or
lret
cmpsl
and
aam
ds
rcrb
push
mov
push
inc
mov
jnp
out
loope
into
test
pop
leave
mov
add
orb
add
jl
pop
add
jno
lods
or
shlb
fadd
les
adc
mov
push
loopne
outsb
outsb
adc
sub
pop
pop
insl
sbb
ds
sarl
jne
pop
sub
dec
push
xchg
stc
insl
push
adc
cmp
dec
lret
int3
adc
into
jecxz
icebp
or
mov
inc
shrb
cmc
aas
xchg
aaa
lret
adc
bound
test
in
xchg
dec
insl
jo
test
sti
dec
jns
push
sbb
lods
test
dec
xor
jge
data16
sbb
das
jns
jb
or
mov
fsubl
repnz
mov
push
jg
out
imul
mov
stos
mov
add
movsb
xchg
xchg
cmp
mov
cltd
mov
adc
push
mov
pop
cld
nop
mov
in
jl
mov
sub
aad
fbld
lds
mov
mov
dec
and
xor
and
push
stos
sbb
sub
and
cs
jp
sub
out
inc
xchg
test
dec
repnz
data16
gs
aad
push
xor
fsub
nop
addr16
pop
mov
stos
rcll
aam
lods
minps
add
in
jmp
push
xchg
pslld
sbb
adcl
inc
adc
dec
xchg
js
mov
in
dec
out
inc
cmpl
lea
sub
xor
orb
iret
in
jp
jge
mov
dec
insl
mov
sti
scas
lea
mov
sub
outsl
jg
cmp
imul
loop
test
pop
sbb
ret
daa
lcall
xor
xchg
mov
fs
xchg
adc
pop
lods
cs
lods
cli
lods
jns
jmp
dec
sbb
adcb
jbe
inc
mov
pop
cmp
mov
repnz
fldcw
addr16
push
es
push
mov
and
dec
pop
fwait
repz
jne
imul
fdivrs
lods
into
cltd
mov
cmp
mov
inc
cmp
push
push
sub
jbe
jecxz
fwait
mov
bound
jns
cmp
or
js
add
ja
bnd
das
push
cmp
imul
imul
push
incl
and
imulb
or
loopne
jbe
popf
fnstcw
xor
pop
mov
loop
push
sub
sub
and
fmuls
pop
leave
pusha
xor
mov
dec
dec
int3
add
and
dec
rcll
mov
dec
jnp
outsl
jbe
into
jae
inc
aas
and
cmc
cwtl
int3
add
jg
mov
xchg
jns
mov
inc
inc
mov
lods
mov
push
cwtl
cmpsb
and
cmpsb
andl
rcr
mov
and
loopne
dec
or
and
xstore-rng
cmpsl
subl
es
adc
pop
dec
pop
adc
pushl
xor
xchg
into
cmc
js
into
adc
mov
xchg
aas
iret
mov
loopne
xor
je
push
and
lret
jmp
push
xchg
xor
in
mov
lods
icebp
add
mov
mov
enter
and
or
xchg
push
es
and
das
push
jae
dec
cmp
mov
test
and
scas
lea
xor
insl
gs
out
icebp
hlt
fxch
aas
stos
xchg
adc
jno
adc
jne
gs
mov
movsl
add
jge
push
popf
mov
das
mov
xor
mov
push
es
scas
lret
rcrl
negl
in
push
bound
repnz
adc
xchg
loop
jle
sbb
inc
je
enter
retw
adc
xchg
in
jo
cli
or
push
es
sub
test
mov
inc
xcrypt-ecb
cmpsl
dec
rclb
repnz
addr16
push
fcoms
daa
push
int3
jecxz
add
cmp
outsb
pop
mov
pop
cmpsb
hlt
int3
adc
pop
decl
test
jmp
pusha
cmp
cmc
inc
inc
lcall
test
push
mov
pop
add
push
mov
mov
mov
mov
in
add
mov
lcall
aam
push
add
sub
and
jns
repz
xchg
inc
ljmp
inc
mov
jne
xchg
and
mov
jp
fucom
cmpsb
push
lret
xchg
push
andl
arpl
or
mov
inc
int3
pop
cli
jo
pop
outsb
outsb
sub
daa
adc
add
push
xchg
mov
jl
xor
adc
mov
add
shlb
mov
pop
jo
xor
mov
clc
and
lcall
cmpl
rol
mov
adc
jbe
xor
mov
int
test
mov
dec
inc
pop
cmp
pop
imul
sbb
leave
sbb
aas
insb
scas
fidivrl
pop
or
enter
pushf
inc
cmpsl
out
add
inc
push
in
nop
cwtl
or
sarl
fisubrs
or
out
sarl
clc
outsl
into
out
add
test
scas
push
jno
jne
loop
add
leave
call
xor
sub
lods
cs
test
insb
arpl
mov
push
or
ja
jg
xchg
enter
cmp
pushf
test
mov
imul
dec
mov
dec
push
arpl
in
in
pushl
add
sbb
pop
jg
inc
mov
inc
rclb
and
inc
clc
adc
sahf
lret
andl
inc
push
popa
sub
scas
push
testb
push
lahf
addb
cmpsb
pop
xchg
cld
mov
mov
push
push
loop
mov
xchg
inc
add
sahf
mov
lahf
mov
leave
cmpsb
cltd
hlt
stos
loopne
lahf
cmpb
mov
stc
cmp
mov
popa
cmp
sbbl
mov
mov
popl
pop
push
daa
imul
xor
adc
aad
mov
pop
mov
cmp
push
outsl
dec
sbb
cltd
mov
clc
and
lods
les
lret
sar
fwait
pop
or
inc
insb
and
fsubl
mov
icebp
orb
loop
cmp
xchg
push
rcrl
scas
cs
jle
dec
fsubs
inc
into
push
repz
nop
fisubrl
arpl
pop
into
inc
sbb
ljmp
xchg
and
add
cli
jno
mov
stc
add
add
push
cmp
out
adc
repz
mov
fsubrl
jne
mov
jl
push
sub
lea
jb
lahf
jae
inc
fnstcw
in
xchg
lret
dec
subl
fdivr
scas
cmc
arpl
scas
ret
push
clc
cmp
lods
and
inc
xchg
sbb
inc
popf
cmp
into
test
or
push
mov
sahf
and
jl
loopew
or
movl
mov
cmpsb
dec
mov
cmp
mov
xlat
lods
pop
add
jbe
and
rclb
mov
pop
push
jp
dec
mov
pop
xor
sti
test
arpl
imul
enter
xchg
jp
sub
mov
fdivl
loop
cmp
out
ror
sub
sahf
int3
xor
sub
adc
call
pop
rcrb
add
dec
jns
or
or
rcll
cld
jbe
or
fidivl
testl
jg
fwait
mov
sbb
cmc
jl
inc
pop
pop
sub
js
sub
std
aas
ds
ds
clc
out
int3
mov
mov
lret
call
mov
lahf
xchg
push
push
ficoms
fwait
jmp
fld
add
sub
pop
xchg
sbb
push
into
int3
data16
cmp
inc
inc
jle
push
shlb
jno
gs
dec
xlat
call
sbb
cmp
push
icebp
inc
jge
xchg
pusha
insl
and
je
pop
or
lcall
cmp
outsb
fwait
pop
mov
xchg
dec
cmp
shrl
shlb
repz
jge
jle
idivb
mov
insl
ret
sub
xchg
inc
lods
push
imul
lahf
sti
mov
int3
jo
dec
jns
mov
add
out
fstl
xchg
xchg
mov
enter
sahf
rcrl
popl
js
addr16
mov
xor
nop
adc
xchg
xlat
sahf
xor
push
push
adc
jnp
cltd
das
in
fmulp
stos
addr16
inc
sbbb
data16
pop
outsl
in
fwait
cmc
fucom
mov
push
call
aad
push
pop
jg
xchg
les
repnz
or
cli
gs
push
imul
cmp
dec
inc
pop
fistpll
mov
mov
fxch
dec
jmp
inc
fsubl
aaa
enter
js
cmpsb
xchg
dec
dec
test
jl
repz
jmp
push
sub
test
enter
movsb
hlt
push
add
stos
xor
nop
orl
adc
cmp
nop
mov
arpl
jp
jns
mov
dec
dec
in
stos
sbb
jg
popa
fdivrs
repnz
or
add
mov
dec
rcll
xchg
jmp
inc
dec
loope
jl
popf
pop
and
cmc
dec
push
push
add
sub
in
iret
xchg
mov
push
fmull
sti
and
out
icebp
add
jmp
sar
cwtl
jno
adc
pop
push
dec
addb
dec
movsl
in
jl
sub
sbb
mov
mov
out
xchg
rclb
dec
lahf
stos
movsl
push
rcr
fwait
mov
rcl
scas
cmp
fdivrs
dec
jb
pop
add
pop
xor
xchg
loope
mov
lock
insb
dec
cmp
lock
cmp
push
inc
fistl
sbbl
mov
out
jae
hlt
cmpb
add
xor
inc
adc
jo
jne
mov
or
jns,pn
push
sbb
fidivrl
push
je
lds
xlat
jb
inc
or
sub
xchg
clc
push
pop
call
hlt
addr16
push
or
repz
mov
pop
mov
div
jl
dec
mov
and
or
mov
shl
aad
repz
push
and
jns
pop
push
lret
xchg
jmp
mov
or
or
xchg
mov
into
pop
xchg
and
lret
and
inc
push
mov
push
mov
mov
enter
orl
lcall
pop
cld
xchg
cltd
lret
ljmp
push
push
xchg
and
push
mov
push
dec
hlt
scas
iret
repz
cmpsb
orb
lods
test
adcb
lods
adc
pop
mov
in
fs
push
lahf
addr16
or
ficompl
mov
dec
pop
stc
shlb
and
or
push
lret
sbb
mov
sahf
pop
insl
xchg
pop
lods
push
int
lahf
call
adc
mov
pop
mov
loope
inc
or
lret
inc
shl
cmp
xor
fstpt
mov
adc
add
mov
js
ret
stc
inc
jnp
adc
pusha
lods
mov
adc
xor
mov
add
mov
popf
popf
shlb
mov
jl
addr16
insb
push
pop
andb
jo
das
xchg
pusha
ljmp
adc
jg
mov
add
icebp
adc
xor
push
dec
xchg
mov
adc
inc
insl
iret
adc
scas
jmp
in
mov
mov
sbb
iret
sbb
lods
sub
jle
mov
pop
lds
mov
adc
pushf
inc
adc
es
fwait
inc
repz
mov
testb
imul
pop
mov
dec
or
insl
push
in
mov
or
pop
addr16
xor
or
sbb
mov
lods
sete
xchg
xchg
mov
in
mov
js
or
inc
push
and
mov
das
sbb
pop
data16
dec
pop
and
push
das
dec
mov
lea
add
repz
out
jmp
dec
push
cmp
ret
fcmovnbe
or
cmp
fidivl
dec
fldcw
jnp
xor
iret
int3
lods
scas
cwtl
dec
mov
test
icebp
xlat
int3
stos
icebp
and
inc
mov
fnstcw
enter
dec
add
inc
aad
out
xor
sbb
push
scas
repnz
cmpsl
pop
cld
fistpl
inc
jecxz
cmp
sbb
and
icebp
mov
xor
jo
cmp
mov
je
push
cmpsb
jle
mov
mov
mov
pop
cwtl
mov
pushf
or
jecxz
sub
ffreep
sub
push
rcll
rorb
push
jecxz
or
and
pop
loopne
sarl
add
add
inc
icebp
ljmp
push
in
imul
cli
loop
sub
test
rolb
and
ret
int3
jecxz
icebp
or
adc
cs
or
mov
fimuls
jmp
jmp
inc
imul
loope
mov
xlat
pop
nop
cmpsl
mov
xorl
mov
addr16
loop
popf
sbb
insb
sarb
adc
xor
dec
lock
sbb
pop
enter
out
pop
push
icebp
mov
insl
inc
dec
and
inc
lea
cmp
pop
xchg
aas
fdivrs
pop
or
in
push
out
faddl
sub
addr16
lret
jle
mov
mov
lea
push
clc
adc
add
dec
cwtl
popa
jge
cmpsb
gs
jge
and
sub
nop
lods
test
add
jne
test
cmp
sbb
mov
dec
ljmp
dec
rcrl
adc
popa
mov
jmp
cwtl
imul
iret
scas
sub
dec
sti
fidivrl
jmp
inc
xchg
out
cld
das
test
neg
push
xchg
mov
ret
lods
outsb
lret
pop
imul
push
xchg
ret
dec
iret
popa
and
mov
movsl
lods
rcrl
and
nop
test
dec
cli
ja
mov
push
mov
mov
pop
cld
mov
ss
xor
out
cli
cltd
xlat
push
out
mov
sub
pop
shr
push
jp
shl
cltd
in
xchg
adc
jb
sub
test
test
fdivrl
cmp
or
pop
push
popf
repz
add
icebp
push
imul
loopne
test
push
fisttpl
push
pop
push
test
cs
shrb
pusha
aas
sub
jb
inc
repnz
sub
cmpsb
add
or
mov
call
cs
or
pop
outsb
imul
cmp
add
sbb
or
jne
std
xchg
in
sarl
dec
mov
mov
xor
fildl
push
inc
aaa
or
loope
xchg
fstpt
stc
inc
das
adc
and
or
ret
xchg
lods
lds
popa
in
stos
sub
les
and
cmp
mov
pop
sub
leave
ror
inc
jbe
cmp
inc
xor
mov
lret
mov
lock
xchg
jnp
sahf
sbb
pop
and
xor
outsl
lcall
fcmovne
or
pop
insb
cltd
pop
std
fst
mov
movsb
das
jmp
jmp
mov
pop
adc
xchg
xor
push
dec
fnstenv
push
sub
dec
mov
sbb
nop
leave
aaa
inc
cmp
pusha
push
inc
lds
sbb
xor
test
xor
into
outsb
aas
out
imul
stos
adc
sub
orb
popa
cltd
jae
mov
adc
out
stc
sti
cli
jns
mov
cmc
push
cmp
sub
mov
movsl
mov
shrl
daa
mov
hlt
andb
clc
in
pop
fwait
cld
shlb
add
push
sub
dec
adc
enter
pop
push
xor
sbb
ja
xor
aad
push
cs
addr16
xchg
cltd
sbb
or
jp
push
fs
or
jno
or
pop
shll
and
mov
inc
fcomps
jnp
fcmovnbe
stc
add
sbb
mov
jge
in
lret
scas
add
mov
cmp
lcall
xchg
pop
and
data16
sub
dec
int
mov
mov
mov
js
fildl
mov
and
fwait
rorb
scas
xor
push
xor
test
mov
popf
lock
xor
and
xor
push
pop
repnz
shr
sbb
incl
pop
pop
repz
sub
xchg
xchg
and
dec
xchg
sub
mov
mov
rolb
sub
jae
sahf
std
or
dec
adc
mov
xchg
cli
mov
inc
xchg
xchg
lret
xchg
mov
fcom
xchg
fmul
test
add
test
sub
cmp
jg
xchg
adc
sbb
mov
or
gs
pop
xorb
xchg
adc
and
inc
pushf
lahf
mov
push
call
dec
jp
pop
jns
mov
jl
sbb
push
and
shl
jecxz
outsb
xchg
inc
sbb
dec
xchg
test
loopne
dec
imul
jp
mov
cwtl
jne
sub
dec
push
sub
sub
test
movsl
out
jg
pop
lock
add
out
lcall
pop
adc
hlt
dec
cltd
repz
xor
dec
mov
pop
stc
mov
add
sub
push
sub
mov
xor
dec
mov
lock
mov
and
repnz
xor
fsts
movsl
int3
mov
and
adc
xor
cmc
mov
jnp
movsb
loope
xchg
in
inc
mov
jg
mov
mov
loope
iret
cltd
dec
mov
add
jns
cmc
add
push
push
mov
xor
xchg
adc
push
sarb
mov
xlat
sti
pop
mov
dec
jmp
hlt
test
push
popf
lcall
sbb
push
aam
push
fnstenv
outsb
mov
pop
sahf
fsub
cmpsb
sbb
xchg
shll
loop
cmp
xor
fists
mov
pop
mov
std
icebp
dec
mov
xchg
aaa
pop
div
pop
popf
xchg
cmp
mov
jmp
or
or
in
jp
add
push
pop
inc
pusha
jle
adc
sbb
xchg
push
add
add
movsl
pop
sti
xor
jp
mov
aas
or
cmc
add
ret
outsb
lods
mov
lret
push
dec
sbb
lods
jg
rol
fidivs
sub
sub
adc
out
jb
gs
call
pusha
filds
add
lds
test
push
adc
imul
bound
sbb
clc
inc
rcrl
addl
cmc
shl
fldcw
ret
loope
add
jl
lcall
lret
int3
push
pushf
in
sbb
push
sbb
jns
pop
sub
test
ret
test
xor
es
ret
jg
push
lcall
xchg
inc
sub
lcall
shlb
dec
xchg
test
adc
xchg
push
mov
xchg
sub
dec
sub
xor
imul
lods
daa
scas
cmp
clc
ljmp
repnz
adcb
push
adc
add
xor
mov
stos
inc
in
mov
icebp
jecxz
mov
lea
call
inc
jle
mov
sub
sarb
cmc
and
negb
or
ja
int3
inc
mov
mov
movl
movsl
iret
das
mov
mov
cmpsl
repz
cmc
adc
jb
fs
add
fs
xor
mov
test
adc
aas
shrl
mov
pop
or
mov
repz
outsl
xchg
xor
lock
movsl
xbegin
mov
mov
xor
ret
mov
fs
push
ss
ret
pop
fistps
push
mov
mov
repz
or
lret
push
inc
mov
xor
push
repnz
xchg
or
test
shll
add
out
and
or
pop
inc
push
or
pop
es
sub
sahf
or
xor
xchg
cmp
fs
addr16
add
into
jbe
in
dec
aam
stos
movsb
jne
faddl
bound
test
fnstsw
xchg
mov
dec
cmpsb
adc
outsb
test
fadds
xchg
inc
sub
jne
inc
test
mov
sub
out
jecxz
jns
inc
sbb
and
push
dec
cmp
inc
or
popf
lret
scas
inc
sub
int3
fsubp
fcoms
pop
mov
xor
jne
push
mov
in
iret
lods
fiaddl
call
out
or
lret
jl
cwtl
pop
addr16
mov
jge
pop
mov
enter
dec
push
mov
mov
xorb
sbb
jle
fists
xor
push
in
inc
adc
mov
push
enter
in
hlt
in
adc
adc
add
mov
jl
add
mov
pop
or
xor
jmp
pop
pop
jle
out
imul
push
mov
dec
cld
pop
into
in
out
ds
sbb
push
cli
insl
mov
setae
push
xor
repnz
inc
mov
xchg
std
xor
cmc
es
mov
cmp
add
out
mov
push
cmp
mov
xlat
cmp
pmaddwd
jg
pop
test
pop
and
mov
andl
inc
mov
notb
cmp
repz
inc
add
mov
xchg
lret
mov
mov
aad
fildl
inc
pusha
xor
shlb
adc
je
pop
add
repnz
test
out
mov
dec
inc
xchg
adcb
repz
hlt
pop
xchg
sub
cli
lcall
fildll
add
test
xchg
fprem1
and
lds
in
mov
xor
stos
dec
stc
and
test
loope
xor
dec
push
rcl
push
cmp
adcl
jae
mov
out
lret
jl
sahf
mov
movsb
pop
cltd
dec
add
test
repz
adc
push
xor
sbb
pop
mov
in
cmp
pushf
xchg
jne
sbb
inc
inc
pusha
add
and
das
inc
bound
and
gs
add
xchg
mov
xchg
icebp
jne
notl
out
push
push
iret
sarl
mov
mov
mov
addr16
insl
lret
icebp
lcall
and
dec
lods
ret
insl
or
cs
cltd
repnz
cmp
pop
or
mov
pop
insb
mov
push
pop
movsl
loope
lds
push
or
pop
xorl
bound
cmp
jmp
jg
imul
or
imul
cmp
repz
stos
xchg
test
xchg
sbb
in
lods
pop
mov
les
xchg
hlt
aaa
ret
lds
add
in
mov
pop
sti
mov
pop
mov
sub
std
stc
push
enter
in
icebp
test
xchg
fbld
cli
xor
cmpsl
sbb
push
aam
cmp
sbb
jle
adc
jle
mov
test
lods
inc
enter
cmpsl
push
jmp
arpl
andb
lahf
or
push
aam
mov
add
jo
push
lea
iret
pop
add
test
push
clc
fstl
jnp
sub
nop
es
test
scas
dec
adc
mov
fucom
int
out
out
and
and
lods
push
fwait
les
mov
into
jp
lea
mov
or
cmpsb
mov
sub
movsb
fwait
orl
cmp
cmp
sbb
jg
mov
lahf
aam
das
push
add
adc
xchg
mov
jmp
nop
movsl
inc
movsb
hlt
cmc
mov
cld
adc
mov
mov
pop
mov
subl
and
nop
push
jbe
sub
lods
hlt
mov
push
pop
shl
ret
xlat
pop
dec
das
sub
and
cli
mov
add
shlb
ret
mov
jmp
stc
add
mov
lods
pop
dec
movzwl
outsl
out
or
cltd
mov
add
sarl
test
mov
in
jl
js
inc
in
das
mov
popf
shll
pop
mov
out
sub
nop
leave
popf
cmp
mov
mov
mov
push
xchg
fadd
jecxz
cs
pop
sarb
dec
add
inc
xchg
fcmovu
adc
mov
shl
in
sbb
xor
xchg
xchg
xchg
cltd
pop
lods
cmp
stos
push
cmp
mov
test
and
mov
or
ret
fisttpl
js
add
pop
shll
popa
dec
js
push
sub
iret
rcll
outsl
loop
inc
ljmp
out
lods
xchg
inc
lretw
lods
out
jle
jg
das
cltd
jg
mov
mov
das
test
or
mov
js
and
xchg
enter
mov
jb
jmp
das
loop
xchg
mov
pop
js
inc
cmp
daa
iret
fimull
rcrb
cli
lods
mov
test
and
mov
and
ret
and
das
push
imul
mov
cmp
in
popa
hlt
ret
push
jns
or
lea
sbb
dec
fiadds
imul
adcl
bound
in
mov
push
scas
insl
add
cmp
or
andl
sbbb
cld
sub
push
xchg
aas
xchg
push
push
loop
sbbb
add
out
mov
aad
lock
cmp
iret
inc
sahf
add
jae
out
lahf
mov
inc
orl
ds
jp
cld
outsb
cmovl
or
addb
fsts
in
mov
adc
xorl
or
lret
and
test
outsl
jg
loopne
xor
inc
notb
das
js
cltd
cli
fnstcw
inc
and
aam
insb
iret
lock
adc
ret
and
iret
cmpsb
ret
outsb
cmp
imul
or
cmpsb
xor
int3
int3
and
adc
rorl
mov
iret
lock
cmc
cmpsb
cltd
pop
fwait
cltd
lcall
xor
xchg
cmc
push
mov
ds
dec
push
xchg
add
leave
inc
test
outsb
push
push
mov
test
aaa
stc
dec
inc
mov
dec
fs
scas
test
data16
sbb
mov
dec
les
pop
sti
out
mov
xchg
pop
pop
fwait
sbbl
inc
neg
insl
xor
int3
movsb
std
adc
lret
in
or
sub
xor
jo
mov
sbb
loopne
jb
pop
mov
jo
mov
aas
pop
lds
pushf
and
dec
js
std
sub
jbe
jo
sbb
or
shll
push
or
push
xchg
aas
stos
rorl
xchg
inc
lret
scas
or
push
push
add
je
es
das
data16
xchg
pop
xchg
xchg
aas
mov
jo
xor
mov
ret
cmpsb
add
pop
adc
jge
and
pop
jmp
mov
loop
jecxz
test
cmp
gs
adc
xor
adc
movsb
test
and
inc
jecxz
push
mov
outsl
jo
test
scas
jge
lret
hlt
dec
out
jbe
stos
jg
mov
fadds
test
test
mulb
dec
add
iret
sarb
xchg
push
add
xchg
in
mov
jne
dec
repz
or
xor
lcall
xor
mov
adc
mov
fistpll
add
cmp
add
sub
dec
arpl
push
add
dec
add
testl
xchg
jne
mov
fistpl
mov
ret
and
ja
jmp
mov
and
push
rcl
sbb
push
hlt
push
ret
addl
jmp
stos
jb
sbb
jecxz
es
lret
push
sbb
dec
lcall
addr16
xor
xor
or
mov
aaa
inc
cmpsb
mov
add
dec
inc
dec
jmp
fcmovnb
movl
and
scas
inc
pop
call
sub
daa
testb
repnz
xchg
xchg
ja
inc
cmpsb
add
xor
loopne
mov
mov
mov
cmpsb
and
popf
shrb
xlat
sub
arpl
dec
pop
roll
mov
cmc
push
insb
sbb
daa
mov
test
rcl
jmp
jp
adc
adc
dec
lahf
jnp
shrb
adc
mov
add
push
pop
iret
ss
loope
out
cmc
iret
subb
cld
push
sbb
pop
in
mov
test
push
dec
mov
jne
addl
dec
dec
mov
int3
adc
push
mov
arpl
jnp
or
adc
call
cmp
xchg
cmpsb
fs
mov
adc
jne
jno
xor
xor
mov
or
fnsave
xchg
cmp
dec
jle
and
jno
lods
addr16
sub
sti
mov
das
lret
imul
and
adc
add
jb
sti
mov
int3
and
xchg
test
jmp
or
popf
stos
sub
jecxz
xor
inc
lcall
fdiv
movsb
or
dec
xchg
dec
outsb
add
and
mov
mov
and
out
cmp
out
jbe
je
push
int3
sub
adc
mov
mov
mov
pop
test
jbe
das
out
cmpb
adc
das
icebp
xorb
xchg
es
repnz
dec
movsb
scas
pusha
sbb
out
adc
cmp
mov
repnz
push
pop
or
add
mov
sarl
xchg
sarl
lods
loop
or
cs
int
sub
jp
mov
ret
push
jo
xchg
cmp
sbb
cmc
push
in
mov
flds
emms
jae
lds
adc
mov
dec
cltd
stc
sbb
jne
mov
in
sub
loope
jb
sub
lea
std
add
popa
lock
mov
mov
mov
lds
aam
mov
inc
mov
jp
icebp
stos
jae
cmp
fidivrl
aas
jle
push
inc
pusha
test
jg
fmul
in
loope
movsl
stos
gs
out
push
mov
scas
jmp
jbe
adc
mov
dec
or
dec
dec
cmp
add
dec
je
xchg
out
jne
pop
cltd
scas
push
pop
xchg
mov
arpl
popf
ja,pn
stos
or
call
test
cld
in
xor
mov
and
cbtw
cmp
in
dec
aaa
mov
mov
pusha
dec
sbb
bound
fdivrl
sbb
cmp
aam
aad
call
gs
fwait
ss
inc
daa
addr16
sub
mov
popa
sbb
mov
iret
cwtl
adc
mov
movsl
lea
popl
sti
out
repnz
into
out
and
in
call
rcrb
cwtl
lret
fsubrl
mov
test
inc
je
cmp
repnz
jae
and
rorl
fnsave
sbb
pusha
mov
pop
cmc
pop
inc
shlb
adc
mov
push
loop
ljmp
bound
hlt
jb
dec
cmp
sbb
test
pop
sbb
jns
subl
pop
jne
adc
mov
jg
dec
mov
dec
inc
push
mov
movsl
cltd
hlt
lock
in
in
das
xchg
add
cmpsb
xchg
xchg
test
popf
inc
subb
sbb
int
mov
jmp
stos
test
sti
inc
sarb
addr16
mov
dec
cmc
add
jl
ss
xor
call
icebp
data16
fcompl
mov
sub
jle
out
test
adc
sbb
outsl
adc
adc
xchg
scas
add
jle
cmp
pop
ja
subl
pop
mov
gs
sbb
sbb
pusha
jns
imul
mov
dec
xchg
dec
xchg
lea
into
test
aam
push
dec
stos
adc
cmp
lret
cmp
popf
rcrb
pop
sbbl
sti
mov
ja
sub
add
jae
mov
rclb
xor
in
sbb
test
loope
mov
test
nop
add
sbb
int
insl
lahf
mov
addr16
jo
mov
xchg
int3
jnp
pop
repz
mov
sub
push
popa
std
out
data16
int3
sub
and
or
scas
aad
cmpsl
mov
sub
jecxz
orb
push
and
lahf
sbb
je
and
adc
mov
push
enter
and
cmc
movsb
cs
mov
clc
mov
push
lock
xchg
mov
mov
dec
out
ficompl
jnp
lods
mov
es
pop
cmpsl
lcall
out
and
pop
adcl
add
sub
aad
ja
cmpsl
xor
or
ja
addr16
sub
lds
xor
jb
dec
lock
cmp
mov
stc
fucomp
xchg
lds
push
inc
scas
scas
pop
out
in
std
dec
stos
pop
push
out
pop
inc
rclb
jle
lods
dec
fs
fiaddl
in
and
iret
dec
movsl
inc
mov
jb
movsb
fstpt
aaa
shrb
inc
mov
cltd
mov
lret
out
sub
lret
mov
jle
mov
mov
xor
das
mov
gs
aaa
jle
and
and
paddusb
rcr
adc
movsb
mov
nop
fdiv
sbb
cmpsl
out
inc
aad
pop
jne
loop
sub
das
lret
jecxz
aas
lcall
mov
dec
cmpsb
add
ss
imul
xchg
sbb
aam
insl
xor
cmp
mov
insb
mov
es
sbb
lds
push
sbb
jmp
push
test
add
dec
cmp
dec
xor
mov
dec
or
inc
aaa
push
stc
xchg
add
or
mov
and
dec
jbe
jge
xchg
sub
jg
cmp
sbb
and
add
xchg
fldt
cmp
and
cmpsl
push
cmp
popf
cmp
pop
icebp
mov
hlt
cmpsl
outsb
mov
mov
mov
cmp
inc
int3
outsl
loope
sbb
psubsw
std
cmpsl
lret
idivl
mov
push
mov
inc
jnp
cwtl
inc
aad
repz
xchg
fwait
cwtl
push
cmc
cmp
xchg
cmp
outsb
mov
pop
into
aas
les
dec
pop
cltd
repz
stc
mov
mov
dec
cmp
pop
fcmovne
xchg
pop
and
imul
ja
push
sbbl
scas
sbb
jecxz
mov
xor
pop
jmp
divl
mov
jmp
movsb
inc
iret
inc
dec
out
sarl
imul
xlat
dec
cmp
push
mov
mov
mov
scas
dec
jmp
cmc
lret
cmp
gs
cld
les
adc
mov
and
daa
jbe
pusha
adc
and
jo
gs
sarl
aaa
jmp
jb
inc
add
mov
push
and
mov
outsb
cwtl
cli
xor
push
sub
hlt
enter
mov
adcb
push
vmwrite
cmp
mov
xor
xchg
sbb
aam
outsl
ret
add
mov
cmpsl
push
cld
mov
jbe
dec
sub
jl
int3
data16
aas
test
mov
sub
fwait
dec
inc
mov
sbb
fcmove
add
cmp
les
xor
sbb
and
jmp
and
pusha
insb
aaa
and
aas
dec
and
mov
sbb
lret
adc
movsl
sbb
or
mov
sub
sbb
loop
dec
int
push
mov
push
sbb
in
lods
jecxz
inc
fnstcw
mov
push
dec
cmpsl
outsb
lea
aas
mov
jb
adc
xchg
shrb
bound
sub
sbb
cwtl
loop
lock
daa
ja
scas
movsl
int3
mov
lahf
mov
leave
pop
pop
fsts
addr16
ds
xlat
push
mov
fadd
insb
shr
popa
jp
sti
dec
cmpl
mov
or
lds
cltd
lock
scas
sahf
mov
jl
mov
je
scas
filds
in
fmuls
jl
jp
dec
mov
popa
cwtl
cld
dec
push
clc
out
cmp
jnp
push
aas
pop
sbb
push
jns
push
out
jnp
push
mov
movsb
jae
lods
dec
mov
sbb
leave
inc
in
xchg
sub
pop
push
sarl
mov
sahf
or
fsubr
jg
mov
xchg
dec
lret
es
ja
or
add
pusha
fildll
in
push
and
dec
inc
xor
add
inc
lahf
sub
fidivl
shrb
sbb
add
mov
or
sub
jns
cmp
out
test
es
lahf
popf
fisubl
rolb
enter
mov
pushf
add
orl
movsb
icebp
xlat
add
push
icebp
adc
pop
jp
in
and
lds
dec
sarl
push
call
add
cltd
sub
lock
in
aam
clc
mov
arpl
stc
dec
sbb
popf
jb
out
test
adc
nop
cmpsb
mov
jnp
dec
fmuls
mov
leave
xor
enter
rol
loop
mov
daa
lret
data16
adcb
stos
add
addr16
mov
lock
movsb
inc
enter
jb
cmp
cmpsb
test
shlb
add
mov
adcb
adc
repz
jl
adc
sub
stos
mov
test
sub
cmpsl
nop
nop
jo
or
pop
xor
pop
scas
push
xor
xchg
std
mov
mov
cmp
pop
cmp
bound
and
mov
push
mov
sahf
ds
lds
xor
pop
pusha
arpl
pop
dec
xor
popa
mov
mov
adc
add
add
and
jle
mov
mov
xor
mov
dec
outsb
adc
insb
adc
sbbl
sub
iret
andl
jns
dec
push
fwait
pop
pop
mov
dec
repnz
test
aaa
adc
mull
sbb
mov
insl
data16
test
xchg
add
movsl
or
xor
adc
enter
mov
pop
enter
ffree
fadds
outsl
push
in
je
xchg
jns
mov
ds
outsl
inc
aad
and
leave
xchg
pop
and
jnp
and
lds
mov
mov
es
shlb
sbb
or
push
sbb
insl
pusha
das
in
xchg
adc
or
adc
pop
testl
addr16
cmc
ret
shlb
cmp
push
out
scas
xorl
sub
push
adc
or
cmpsb
or
pop
lahf
add
pop
gs
pushf
pop
xchg
push
add
jne
jecxz
pushf
scas
loop
dec
outsb
jl
sahf
in
shlb
jecxz
mov
movsb
mov
in
push
push
rcrl
cmc
and
lret
lahf
movsl
js
outsb
jbe
out
jp
sub
or
cmp
jno
outsb
scas
pop
inc
jecxz
xor
add
add
mov
int
mov
add
add
out
lock
mov
sub
pop
arpl
fdivrl
int
pushf
pop
add
mov
jle
inc
adc
sbb
int3
push
mov
fsts
push
sub
add
and
mov
lret
stos
aam
pop
inc
aam
mov
push
mov
movsb
xchg
mov
jle
or
mov
pop
push
das
cmp
dec
push
mov
mov
int
dec
cmp
negb
mov
lea
xor
pusha
xlat
insb
adc
test
pop
outsl
cld
mov
lahf
pop
rcl
in
xchg
adc
xchg
pop
sbb
xor
add
mov
hlt
inc
dec
clc
aam
frstor
jbe
push
xchg
adc
ja
xlat
jle
sub
or
push
cmp
fildll
sbb
pop
inc
add
mov
idivb
jmp
test
sub
cmp
test
test
ljmp
insl
ja
push
inc
xorb
test
outsl
addr16
jl
sbb
sbb
pop
les
jae
push
push
imul
sub
inc
cld
test
mov
popf
ret
add
pop
cmp
loope
rolb
push
bound
push
enter
in
mov
push
jae
pop
pop
in
cld
enter
rcl
into
jbe
in
es
xchg
xor
adc
scas
sbb
push
push
push
aam
xchg
and
stos
add
xchg
cmp
mov
ret
mov
pushf
out
inc
test
pop
cmpsl
jg
enter
mov
xlat
mov
cmp
test
adc
xor
xchg
lock
bound
dec
subb
aas
mov
sub
lock
xchg
ficoml
mov
lahf
pop
in
xor
iret
pop
popa
pop
daa
mov
dec
xchg
clc
cmp
xor
dec
mov
sbb
cmp
lods
jne
xchg
sub
mov
in
fcoml
push
add
test
sbb
inc
xchg
lret
xchg
stos
mov
jg
xchg
jbe
push
cmp
dec
fst
xor
jnp
leave
ret
nop
fsincos
cmpsl
push
dec
xlat
cmp
or
add
pusha
cwtl
xor
push
js
pop
mov
dec
push
in
cli
pop
jle
xchg
adc
push
xor
or
clc
xchg
lahf
xchg
xchg
adc
mov
xchg
pusha
mov
aaa
or
add
lods
cmp
mov
jmp
pop
addb
lea
add
test
add
push
cmp
test
mov
dec
scas
subb
in
mov
std
and
adc
cmp
cmpsl
iret
mov
mov
xor
out
insb
sub
call
dec
jne
and
stos
sub
cwtl
lock
jle
push
lods
das
push
cmp
xchg
lcall
mov
cmp
pop
xchg
in
sbb
aas
stos
divb
jmp
iret
mov
push
add
icebp
sahf
inc
and
xlat
rol
jmp
inc
aam
xchg
aam
jle
scas
push
push
pop
call
adc
clc
mov
arpl
pop
jne
in
pop
adc
scas
add
add
in
jbe
pop
mov
add
and
adc
in
pop
das
inc
ljmp
pop
test
mov
movsb
mov
sub
jbe
dec
mov
sub
lds
sbb
jnp
fisubrs
aad
mov
and
sub
out
pop
mov
xchg
cli
cmp
cmp
adc
mov
jmp
jo
and
and
fistps
movsl
or
aaa
xchg
ror
test
sub
adcb
ss
jl
pop
dec
adc
rcrb
dec
mov
mov
xchg
pop
mov
cmpsl
xchg
lcall
xchg
adc
das
cmc
cmc
lods
push
mov
or
in
mov
mov
shlb
and
push
pop
test
lcall
xchg
fadd
inc
leave
and
aaa
int3
mov
fistpll
pop
inc
dec
and
push
sbb
add
mov
lret
pxor
outsb
inc
push
mov
repnz
cmc
mov
xchg
dec
sbb
insb
stc
fcmovnu
push
nop
les
add
xchg
mov
call
icebp
out
iret
xor
jl
ja
or
mov
psubb
lret
sub
push
inc
jne
push
popa
inc
outsb
in
add
movsb
jns
scas
pop
das
aaa
fmuls
pop
into
or
addr16
rclb
jecxz
mov
sbb
jp
xorb
test
pop
into
or
or
and
pop
jle
in
jge,pn
lock
mov
mov
jmp
gs
loope
mov
push
mov
adc
call
dec
sbb
push
inc
cmpsb
xlat
lea
jmp
mov
inc
or
sbb
adc
mov
movsl
cmp
jecxz
in
pop
fidivrl
movsl
mov
pop
ds
push
lea
ret
pop
stos
and
mov
mov
fs
sbb
sub
jle
or
int
xchg
stos
or
jl
or
pop
mov
mov
inc
and
xor
mov
mov
ljmp
sbb
popf
mov
int
clc
sbb
bound
mov
sbb
cld
cmp
cltd
push
adc
mov
imul
mov
insl
mov
mov
sub
adc
cmpsl
cmp
jb
dec
push
lcall
push
sub
rcrb
push
loope
jne
or
imul
mov
iret
fstps
or
xchg
pop
addr16
aad
lock
xchg
ja
adc
mov
add
sub
addr16
sarl
pop
ret
lret
mov
cmp
test
incb
mov
push
imul
pop
shl
in
push
pop
cmp
cld
int3
addl
movsl
push
adc
mov
sbb
sub
std
jl
scas
sbb
popa
xchg
push
cmp
jb
movsl
push
or
pop
pop
fidivs
out
sbb
iret
scas
adc
pusha
lahf
int
lea
pop
leave
es
das
push
xor
ss
xchg
mov
mov
mov
mov
add
xor
inc
cmpsl
sub
mov
js
add
scas
mov
push
pop
xor
or
xor
rolb
push
or
inc
dec
xchg
xchg
adc
ret
addr16
xor
push
addl
mov
imul
add
push
and
mov
dec
cmp
test
cmp
sub
sub
dec
jb
inc
ss
adc
xchg
sub
das
sbb
jecxz
lock
xor
jp
data16
fidivl
fs
jne
mov
into
negb
cmpsl
mov
ret
or
push
adc
xchg
jp
xor
xor
loope
jecxz
out
fsubs
pop
mov
and
jbe
stos
shlb
bound
xorb
sahf
std
mov
rclb
mov
push
dec
push
data16
in
mov
xlat
mov
pop
jbe
or
and
insb
adc
frstor
es
lds
mov
cwtl
xchg
std
inc
sbb
mull
adc
push
stc
mov
ss
xchg
inc
dec
lcall
rolb
adc
push
add
andb
inc
xor
lds
cmp
sub
xor
xorb
outsb
sub
ss
dec
popa
xor
mov
call
cmpsb
fsubl
push
cmp
mov
je
in
cmp
pop
jmp
jnp
lock
aam
divl
jo
in
rcrb
out
dec
jg,pt
popf
or
inc
inc
subb
inc
xorb
dec
cld
adc
push
fwait
aaa
cmpsl
jl
push
jle
cmp
out
jae
cli
sub
dec
test
and
pop
and
loope
or
icebp
cli
inc
inc
imul
out
adc
ret
sub
clc
xchg
push
mov
ficoml
inc
sti
pushf
mov
rcr
cmc
ret
aam
lea
adc
sbb
int3
pop
xchg
shll
cld
fld
sti
push
jmp
pop
negb
ror
clc
out
in
add
cmp
jg
jbe
ret
mov
jp
sub
jbe
adc
loopne
nop
add
cld
fildll
xor
push
loopne
or
sbb
mov
arpl
or
leave
in
xchg
mov
mov
sbb
mov
mov
jp
roll
mov
int3
mov
jle
pushf
aam
jg
aaa
out
xlat
xchg
shrb
out
popa
dec
pop
ss
mov
outsb
or
adc
dec
int
shll
inc
in
in
xchg
inc
loope
addr16
mov
aaa
xor
lods
push
sbb
lods
or
lahf
adc
xor
and
push
jae
cmp
es
cmp
es
or
rol
test
out
or
rcr
dec
mov
andl
add
adc
das
push
test
rcl
or
xor
repz
js
jmp
mov
pusha
pop
les
outsl
leave
cvttps2pi
popf
mov
dec
aas
push
or
and
push
lcall
xchg
lds
jae
lahf
xor
xchg
ret
mov
ss
and
add
sub
jmp
xlat
push
cmp
enter
leave
mov
jae
mov
ja
dec
out
or
jecxz
xchg
cmpsl
pop
push
cs
loope
mov
iret
cltd
pop
insl
popa
loope
sbb
cmpsl
push
loop
mov
xchg
in
iret
aas
std
sub
test
lahf
and
pushf
and
aas
push
inc
inc
lahf
insb
insb
scas
scas
daa
sbb
mov
add
in
in
inc
lahf
mov
in
inc
mov
lret
pusha
sbb
lods
inc
ficomps
out
rep
xchg
pop
stos
push
sbb
jne
push
testl
inc
pop
es
push
iret
enter
or
lret
lock
or
mov
imull
mov
pop
sbb
in
push
jmp
lods
mov
jno
mov
xchg
loop
and
mov
mov
pushf
cltd
movsb
mov
mov
ret
test
mov
scas
jbe
insl
mov
mov
aas
jbe
cmp
pop
lods
mov
inc
pushf
fadd
testl
and
sub
jmp
xor
sbb
fisubrl
mov
out
test
rolb
pop
mov
lcall
xlat
inc
ret
cmpsl
push
xor
sbb
iret
and
push
aaa
insl
dec
lock
cmc
push
popf
in
or
jae
xor
jno
xor
mov
insb
cmpsl
dec
outsl
ret
cltd
mov
pop
push
inc
popf
inc
adc
outsb
dec
movsb
sub
or
sarl
dec
pop
jmp
pushf
cld
jns
cmc
lods
push
push
xchg
stos
mov
icebp
xor
addr16
and
push
int
les
aam
es
xorb
sbb
push
push
rcrb
jmp
out
mov
mull
jl
mov
jb
test
dec
pop
movsl
jmp
pop
lcall
cli
stos
js
mov
out
xchg
xchg
jmp
arpl
mov
cmp
mov
fisubs
js
xor
jnp
mov
jne
std
pop
adc
loopne
js
addr16
out
je
xchg
cmp
push
xor
mov
insl
jns
inc
inc
js
fbld
arpl
sbb
push
fs
sahf
aad
mov
xor
push
mov
adc
cmp
cmp
inc
stos
roll
xor
data16
push
pop
xchg
cmpsb
in
repnz
sub
in
push
call
push
dec
test
adc
dec
mov
sub
cwtl
pavgb
lret
dec
pop
xor
clc
pop
xor
lods
popa
cld
sbb
jl
pop
les
hlt
cli
add
jl
fcomps
and
daa
aam
enter
sbb
add
or
xlat
ss
push
dec
push
loope
mov
mov
push
and
loopne
testl
cmp
pushf
in
add
rcrb
xor
xchg
mov
movsb
negl
dec
lcall
mov
jae
xor
push
xor
inc
mov
jl
sbb
dec
push
xchg
inc
mov
pop
into
xchg
push
repz
inc
pop
pusha
int
outsl
fcoms
add
js
xchg
pop
cmpsb
lahf
ret
pmaddwd
mov
arpl
loope
push
jns
pop
orb
xchg
jo
push
nop
xor
or
mov
fnstenv
jmp
scas
ss
add
std
mov
fdivrl
or
movsb
lwpins
es
xor
movb
in
pop
inc
pop
jp
add
jne
aad
ficompl
clc
jno
mov
jmp
hlt
into
adc
sbbb
loop
les
adc
mov
mov
jmp
pop
fsubp
and
push
push
add
cmp
xchg
mov
ret
js
jae
arpl
cmp
loopne
mov
repnz
or
xlat
nop
inc
mov
std
xchg
add
shll
pop
fcoml
dec
aad
xchg
fimull
scas
ret
pop
sub
sub
fstpl
and
and
pop
stos
bound
out
mov
adc
fstpt
add
xchg
xchg
lcall
addr16
cmpsl
cltd
aam
dec
or
push
insb
add
adc
pushf
in
cmp
popa
in
sbb
push
xor
aad
scas
mov
inc
scas
decb
pop
pop
inc
in
inc
loopne
pop
pop
dec
orl
shlb
sbb
inc
xchg
out
sbb
into
add
cmp
ret
sbb
fwait
sbb
xor
pop
fimull
test
or
les
negl
pop
cmc
iret
cltd
pop
clc
xlat
fists
fldt
cmp
sbb
popl
adc
lret
dec
cmp
cltd
inc
call
mov
ds
clc
insb
dec
xchg
loope
xchg
push
push
cmc
test
pop
lods
stos
gs
mov
icebp
cmp
xchg
jge
pop
sbb
xchg
fwait
jbe
into
mov
pop
pop
cmp
lcall
test
jmp
mov
test
test
lock
or
fwait
loop
mov
or
cmp
push
inc
mov
daa
pop
nop
xor
jnp
lret
pop
ficoml
push
mov
int
adc
out
sbb
call
push
out
movsl
add
push
mov
xor
fadd
loopne
jecxz
je
into
mov
mov
mov
mov
push
ljmp
add
lock
jmp
mov
xchg
sub
pop
cltd
stos
icebp
repnz
repnz
xor
in
add
test
test
enter
lret
sbb
dec
cmp
fsubrl
sbb
iret
lock
jns
add
lods
stc
icebp
popa
lods
mul
call
popa
repnz
dec
into
sbb
dec
es
push
insb
ret
pop
je
aad
push
mov
jl
repz
in
mov
or
fs
lods
fs
mov
es
jns
mov
or
mov
xchg
xchg
jo
shll
nop
cmpsl
cmp
or
add
pop
dec
aam
xchg
out
dec
cwtl
jne
xchg
cmp
arpl
or
jge
lahf
out
xchg
loop
cwtl
ficoms
fadds
dec
jno
daa
jecxz
dec
sbb
stc
out
pusha
xchg
add
or
ficompl
xor
jno
xor
iret
mov
push
insb
sbb
adc
fisttpl
and
mov
cmp
movsl
movsb
jne
data16
or
pop
push
ljmp
mov
add
repz
fldenv
inc
mov
xor
xchg
pop
xor
inc
sbb
rorl
pop
enter
push
dec
pop
insl
lock
push
xchg
mov
clc
ljmp
xor
xor
cmp
inc
lcall
jle
outsb
xor
xchg
xor
fs
outsl
fistpll
pop
sbb
sub
scas
mov
jge
inc
cmp
fs
sbb
loop
idivb
xchg
les
dec
sub
pop
int
test
lcall
cmp
loope
aas
in
pusha
jg
or
addl
mov
lahf
or
pop
sti
sub
mov
in
cmpsl
ds
inc
ret
mov
bound
inc
out
mov
loope
in
outsb
popf
cli
jb
fistpl
dec
mov
cmp
inc
inc
das
lods
push
cmp
sti
or
popa
inc
mov
ljmp
outsb
nop
lods
sbb
loopne
inc
mov
cmp
rorl
jo
push
mov
adc
fistl
mov
shll
adc
jmp
icebp
fnstenv
stc
push
sarb
push
fimull
push
mov
ret
cltd
je
jl
xchg
cmp
jne
scas
mov
sahf
aam
jne
mov
mov
ss
mov
pushf
imul
sub
sub
stos
xchg
xchg
fstps
test
cmp
xor
cmp
push
aaa
adc
push
push
adc
pushl
or
ss
scas
xorb
dec
andb
int
pop
pop
jg
int
ficoms
sbb
or
sbb
fbstp
addr16
fisttpl
sbb
mov
mov
in
adc
outsl
lock
out
cld
sub
add
pop
dec
cmp
inc
add
fs
ds
aas
cmc
repnz
mov
push
pop
add
and
shl
and
push
inc
adc
ljmp
or
pop
std
cs
mov
addr16
dec
push
icebp
jg
xchg
mov
rcl
dec
jge
push
push
fwait
mov
mov
mov
outsb
dec
cmp
loop
fldenv
adc
inc
mov
push
add
lods
test
add
daa
cmp
inc
xchg
mov
sti
dec
xor
xchg
inc
insb
inc
inc
jb
addr16
popa
push
aas
cld
shll
shl
popl
mov
in
dec
pop
xlat
mov
adc
or
mov
stc
dec
xchg
xchg
mov
fsubs
mov
cmp
mov
je
and
lcall
jge
jb
stos
test
loope
dec
mov
sbbb
insl
push
shrb
notb
xchg
add
inc
pop
push
lds
adc
jle
cld
popl
int
mov
cmp
cs
sbb
jmp
sub
sub
mov
mov
into
xlat
loope
pop
imul
sarl
sub
jmp
fwait
fwait
dec
dec
jge
insb
pop
subb
sti
test
rorb
add
or
fiadds
ja
loop
mov
mov
or
leave
xchg
lea
sbb
add
mov
pop
jg
stos
mov
sub
fucomi
shl
sbb
das
jmp
test
push
add
lds
pop
imul
movsb
fldenv
jmp
adcl
scas
ja
sbb
pushf
jecxz
and
aam
divb
push
stc
sbb
push
xchg
xchg
out
fwait
sbbb
pop
jb
stos
lods
push
inc
int3
mov
outsb
xchg
nop
and
sbb
or
inc
push
rorb
test
cwtl
mov
cwtl
and
leave
dec
push
in
movsl
fdivrs
pop
mov
rol
cmp
mov
cmpb
ds
out
aaa
in
loop
xor
mov
arpl
mov
fs
fcoml
popa
inc
jle
push
testl
negb
inc
and
lods
imul
add
xor
subl
ret
adc
jecxz
bound
push
or
push
inc
in
ds
sbb
dec
add
mov
adc
or
test
or
out
or
int
test
mov
hlt
jecxz
dec
adc
xor
xchg
cmc
push
jl
jmp
test
pop
add
xor
mov
pop
mov
adc
scas
iret
popa
sub
cwtl
lock
fiaddl
std
push
into
mov
or
cmp
fs
pop
jns
outsb
mov
dec
ja
add
inc
adc
push
push
repz
sbb
test
pop
cs
add
test
mov
stos
cmp
adc
das
std
loopne
cmp
cmc
xor
sub
mull
jae
call
ret
mov
sti
add
xlat
shll
mov
retw
jbe
xchg
push
dec
sub
and
push
sbb
test
les
loopne
insl
jge
or
cs
in
push
ja
cli
push
mov
cmpsl
cmp
pop
pop
sbb
xchg
or
mov
push
lea
and
sarl
clc
rol
jge
xchg
sbb
adc
pop
test
lods
sub
or
fldl
aas
and
cmp
cmp
std
and
imul
call
int
bound
es
stc
repz
mov
mov
gs
dec
std
popa
outsl
aaa
xor
pop
mov
arpl
das
adc
test
push
lret
add
adc
call
clc
stos
cmp
pop
in
sahf
pop
loopne
jle
adc
sbb
dec
lds
sub
mov
jne
cmpsl
shrl
mov
adc
sub
subl
sbb
sub
mov
pop
push
outsb
inc
mov
orb
sbb
out
insl
aas
xchg
lcall
je
push
add
loope
clc
out
cmp
gs
push
ror
fwait
sub
loope
inc
sub
out
sub
fcomip
xchg
nopl
repz
or
jp
inc
sti
aas
cmp
lcall
ret
je
mov
push
clc
invd
rorb
int3
leave
icebp
adc
popf
popf
fwait
loopne
rcr
scas
addb
inc
out
loopne
aas
bound
adc
lods
jns
add
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
