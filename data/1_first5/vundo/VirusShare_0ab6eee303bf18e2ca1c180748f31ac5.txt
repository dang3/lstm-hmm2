mov
push
add
add
add
inc
mov
notl
fdivrl
shll
out
aam
je
mov
jg
xor
push
cs
fistpll
cmp
clc
ret
push
cwtl
dec
mov
and
pop
lret
cltd
das
mov
ja
iret
in
daa
mov
inc
leave
jb
pop
arpl
cli
dec
push
mov
mov
push
ror
imul
lock
and
das
addr16
sub
jae
in
hlt
xor
fistpl
cwtl
mov
adc
jo
push
mov
cmp
cltd
cltd
fstl
sbb
cmp
out
add
inc
paddw
jno
cltd
sub
insl
or
pop
xor
movsb
cwtl
jo
lock
call
popf
xchg
fimuls
sub
pop
mov
int
into
fisttpl
mov
mov
xor
mov
sbb
mov
incl
in
sbb
pusha
adc
scas
xor
hlt
loope
dec
incb
test
mov
fnstcw
fnstenv
lea
jp
xlat
jne
pop
dec
mov
cmpsb
cmp
cltd
fistpll
sub
into
ret
fbld
jp
repnz
bswap
int
inc
fisubs
fildl
pop
add
sub
jns
sub
call
jo
pop
in
push
sub
pop
push
in
push
je
add
outsl
lcall
dec
fs
lea
fs
faddp
inc
mov
pop
or
inc
loopne
clc
ds
or
inc
mov
std
mov
out
lods
push
mov
inc
repz
sub
mov
inc
cmp
adc
add
add
xchg
nop
addr16
mov
into
push
jns
std
mov
mov
pusha
inc
scas
insb
mov
sub
popa
mov
jp
and
sub
xchg
pushf
and
and
mov
hlt
mov
outsl
xor
mov
pop
ss
movsb
mov
lahf
mov
mov
test
push
pop
or
and
shr
and
pop
repz
jnp
mov
popa
or
mov
test
mov
push
inc
cmc
mov
cltd
or
and
pushf
addr16
or
mov
comiss
mov
xor
mov
jno
mov
cmpb
sub
outsl
push
aas
or
mov
xchg
xchg
lds
xchg
adc
scas
inc
xchg
test
das
mov
adc
or
lret
adc
add
icebp
imul
mov
mov
shlb
fwait
lods
cmp
and
add
imul
jo
xor
push
and
add
fidivl
js
in
movsl
mov
mov
mov
ret
add
push
mov
cmc
fbld
les
in
arpl
mov
pop
dec
xchg
and
adc
mov
jb
fwait
mov
push
mov
adc
xchg
mov
add
lods
xchg
mov
in
jmp
outsl
xchg
mov
jb
jg
cmpsl
adc
dec
xchg
jno
cld
push
push
test
out
aam
jo
and
mov
or
lock
ss
pusha
scas
arpl
loop
mov
mov
sub
nop
fists
fdivl
in
aas
gs
mull
jo
outsb
ds
ljmp
lods
pop
js
jmp
int
fwait
adc
or
int3
pop
fwait
call
rep
imul
stc
sbb
inc
or
outsl
cmp
loope
movsb
xchg
pop
sarl
xor
cmpsb
mov
sbb
das
adc
mov
jl
aad
pop
cmp
ret
inc
into
adc
xor
push
mov
dec
rcll
xor
pop
ds
sub
inc
mov
out
inc
mov
cmp
mov
mov
dec
frstor
xchg
mov
bound
adc
push
nop
mov
nop
lea
mov
xchg
fwait
das
sbb
shlb
and
cmp
stos
jo
pop
dec
pop
enterw
sahf
lock
and
and
lods
cmp
dec
in
push
jnp
sarl
sbb
and
jno
rclb
dec
and
movsb
sarl
add
stc
fs
xor
jp
mov
mov
cmp
or
and
sub
notl
testl
scas
lret
cmpsb
mov
pop
fcoms
pop
rolb
and
add
pop
icebp
out
int3
hlt
and
mov
scas
push
mov
cwtl
sti
mov
addr16
cmp
leave
add
cmp
mov
cli
push
mov
sahf
repnz
jne
mov
daa
cmp
out
dec
push
cmp
push
xchg
fdivl
pop
dec
mov
jl
xchg
add
popf
xchg
test
jg
lcall
out
icebp
jb
dec
aaa
cmp
es
scas
push
xor
dec
ljmp
sbbb
pop
mov
popf
enter
and
xchg
fwait
mov
ficompl
add
movsb
pop
or
insl
mov
aam
repz
xor
test
jle
xchg
sub
cmpsb
adc
stos
pop
das
ja
stos
push
cmp
mov
mov
fwait
in
pop
push
ljmp
mov
lods
in
inc
jnp
xchg
in
scas
xchg
aam
mov
sarl
arpl
scas
sub
stos
xchg
jp
pop
sbb
rcrl
lret
outsb
stos
mov
sub
filds
repnz
rcr
int3
mov
shll
push
or
ds
inc
outsl
pop
test
sbb
cmp
cs
xor
ss
hlt
in
push
leave
adc
lock
cmc
es
push
cltd
ljmp
loope
pusha
xor
stos
negb
cltd
dec
push
lock
xchg
ficomps
lret
mov
xor
pop
lcall
in
loop
iret
or
clc
pop
sbb
inc
int
sub
fldl
fistpll
add
add
or
ret
inc
rclb
test
stos
sub
xor
mov
lods
lahf
mov
jl
push
mov
je
loopne
sahf
scas
mov
shrb
shl
xor
into
jmp
xlat
xor
jns
jmp
arpl
and
mov
cltd
je
mov
add
movsb
inc
mov
int
xor
and
adc
stos
mov
lcall
mov
pop
mov
push
jp
iretw
fwait
cs
shrb
or
xor
pop
jp
jmp
popa
jmp
fidivrl
roll
jbe
add
sbb
xchg
fucomi
mov
push
cmp
or
orb
ret
loop
clc
xchg
xlat
sbb
int
subb
mov
pusha
pop
jo
adc
mov
into
pop
sub
sbb
addr16
mov
jnp
addb
xchg
dec
sbbl
mov
out
cmpsl
cmp
inc
test
jae
imul
stc
cmpsl
dec
add
xchg
jns
stos
push
cld
fisubs
mov
xor
xor
call
push
les
test
inc
pop
xor
loopne
cld
cmp
popa
dec
cmc
adcl
xchg
cmp
adc
mov
pop
ret
retw
add
dec
lret
xor
lds
mov
kmovb
mov
hlt
mov
out
bound
lock
inc
stos
data16
shrb
push
pop
out
insl
loopne
push
pop
dec
out
xchg
addr16
hlt
adc
jmp
add
sub
mov
aam
push
aad
cmp
aad
push
inc
adc
or
repz
xchg
jo
inc
lret
pop
sbb
mov
jp
cli
cwtl
cmp
mov
mov
repnz
idivl
xchg
xchg
inc
cmp
mov
push
pushf
xlat
jbe
mov
ss
lock
mov
add
dec
push
xchg
ret
fnstsw
lret
cli
cmpsb
nop
push
test
roll
cmpsb
cmpsl
or
xorb
xor
lea
out
les
and
fcmovb
add
add
in
call
cld
push
loop
cltd
arpl
dec
and
ficoml
push
stos
jge
loope
add
xchg
dec
and
rcrb
and
xchg
inc
and
mov
scas
in
pop
push
sub
mov
scas
fcompl
mov
aas
jp
xchg
sti
lods
adc
pusha
out
mov
cmp
in
pop
jp
adc
jbe
or
dec
lods
outsb
xor
mov
push
mov
daa
pop
jmp
dec
inc
fidivrs
lret
insl
fwait
lds
ds
mov
dec
in
sbb
enter
mov
mov
cmc
mov
cmp
mov
mov
lea
lods
jmp
pushl
cwtl
test
push
arpl
adc
push
mov
lods
jns
cmp
xlat
add
adc
dec
test
lret
push
shl
es
push
mov
aam
dec
and
add
ja
mov
lcall
add
sub
sub
jl
mov
loope
ds
mov
insb
jge
pop
pop
pop
imul
daa
xchg
and
out
ss
test
push
mov
push
pop
adc
mov
cmp
imul
nop
jl
cmpsb
insb
or
pop
xor
cmp
in
mov
das
repnz
cmc
ss
pop
pop
jg
ja
adcl
push
adc
pop
fidivl
pushf
dec
les
fcmovnb
xlat
fmull
adcb
imul
aaa
pop
loope
insb
in
loop
mov
sahf
cmpsl
pop
jne
lock
inc
loop
aam
loopne
sub
cmc
ja
rcrb
push
sbb
imul
cltd
push
mov
fisubl
sub
pop
sti
jecxz
popa
pop
jae
rcl
imulb
mov
or
dec
xor
and
jl
into
sbb
inc
imul
jecxz
lods
loope
rorl
push
jbe
jl
mov
jp
and
xchg
arpl
stos
cmc
mov
sbb
lock
add
mov
cli
pop
cs
and
or
push
mov
clc
push
jmp
sbb
rclb
mov
jge
out
test
stos
enter
mov
jl
rorl
xchg
jmp
into
adc
fiadds
mov
ljmp
arpl
mov
pop
add
sub
inc
out
or
loope
mov
sub
cmc
and
jmp
pop
xor
sti
js
pop
add
shrb
mov
add
cmpsl
pop
sahf
addr16
cmp
push
aas
loope
aas
mov
lea
test
scas
cmp
aad
pop
ss
ficompl
jg
dec
pusha
adc
push
xchg
fcmove
and
std
xor
xchg
aas
inc
cmpsb
push
cld
jg
mov
mov
call
cld
call
gs
jl
inc
jg
inc
imul
inc
jno
mov
mov
or
pop
fdivl
fsubl
dec
or
xchg
mov
sbb
and
cmp
out
dec
add
xchg
mov
leave
fldl
pop
rcrb
mov
scas
push
mov
xor
sbb
mov
test
sbb
stos
xor
sarb
nop
or
pop
cmp
cwtl
aas
pop
mov
shll
int3
push
cmp
loop
rcll
xor
stos
stos
addl
out
nop
jno
movsb
sub
dec
adc
stos
out
xchg
je
or
ret
inc
push
dec
mov
adc
hlt
fsubl
aaa
pop
pop
mov
sahf
push
cmp
mov
mov
outsb
cmpsl
lcall
inc
cmp
sbb
imul
dec
test
imull
pop
loop
insb
push
xor
sub
mov
imul
mov
and
jo
inc
pop
sahf
push
dec
loopne
clc
test
cmp
mov
ficompl
or
scas
fcmovne
scas
mov
push
xchg
jo
pop
rolb
aas
out
cmpsl
stos
cmp
mov
pop
test
lods
mov
ret
dec
shl
daa
dec
das
inc
lea
cmp
scas
out
cld
pushf
push
iret
dec
inc
xlat
sbb
jg
jecxz
cwtl
lock
int
dec
push
es
arpl
divb
ror
inc
movups
adc
out
push
inc
ljmp
cli
jmp
xchg
ret
pop
fs
or
jmp
mov
pop
and
es
lea
cmp
pop
cmp
mov
or
mov
addr16
mov
adc
cmp
lcall
into
adc
push
test
xchg
pop
pop
jns
xrelease
xchg
jmp
cltd
add
leave
mov
or
pushf
mov
cmpsl
adc
rorb
push
fs
and
inc
je
xchg
in
add
out
scas
imulb
push
pushf
arpl
and
jae
push
inc
frstor
js
idivl
mov
cmp
stos
xchg
push
adcb
pop
sbb
lret
push
cltd
mov
add
insl
outsb
jne
into
jno
divb
shll
inc
fidivrs
or
cmp
sbb
lods
fnstenv
shl
push
xorb
lods
jecxz
std
lahf
adcb
pop
push
jp
xchg
jne
pop
xor
push
sbbl
loopne
es
add
pop
inc
add
xchg
jns
je
and
cmp
cmpsl
sub
test
cmp
mov
push
push
std
mov
shlb
ret
xchg
pop
in
xchg
mov
xor
jge
lock
aaa
xor
inc
xchg
mov
in
cmpsl
add
loope
adc
push
jmp
add
push
cmpsb
test
lods
sub
dec
aas
loope
pop
push
leave
imul
jg
xlat
pop
test
popa
addr16
lret
jae
add
roll
fdiv
pop
pop
dec
cmpsb
sbb
push
out
sub
xchg
inc
push
add
mov
mov
mov
fucomip
jmp
and
rolb
pop
xchg
cmp
data16
cwtl
xchg
lock
inc
dec
push
push
xlat
fnstenv
test
shrb
push
jle
rol
cmpsb
ret
push
push
mov
movsl
sbb
stos
adc
mov
iret
add
mov
filds
xlat
js
in
cmpb
ss
inc
lcall
push
xor
ret
bound
push
fstl
cmp
pop
dec
and
bswap
or
outsl
pop
mov
cli
pop
or
and
ret
mov
mov
pusha
aas
stos
jg
out
inc
movsl
inc
dec
cmpsl
mov
push
std
lahf
js
mov
pop
dec
mov
dec
jno
jp
mov
mov
jne
mov
jle
leave
mov
push
mov
xchg
dec
fldenv
mov
orb
imul
adc
mov
inc
jmp
xchg
int
jecxz
std
sti
lahf
adc
jnp
sbb
scas
add
mov
mov
jo
mov
sbb
ficoms
mov
lods
push
mov
mov
fdivl
xchg
movsl
fisubrl
test
push
fisubrs
stos
je
out
pop
jp
les
mov
and
iret
and
cmpsl
push
lret
inc
imul
sub
mov
or
in
xchg
ja
mov
mov
or
sub
xchg
jbe
mov
sbb
mov
ss
mov
icebp
shlb
mov
stos
shl
push
cwtl
loope
mov
mov
inc
xor
push
lcall
cmp
mov
cmpb
mov
ljmp
in
pop
xchg
arpl
add
js
jae
in
out
cmovp
xchg
and
add
out
mov
mov
adc
fucomp
sub
or
mov
mov
jno
test
stc
outsb
jno
sub
jne
pop
fwait
mov
lock
sub
or
jp
and
mov
dec
cwtl
inc
stos
mov
cmp
add
add
leave
xor
int3
int3
jmp
decl
sub
imul
sbb
jg
adc
add
mov
cmp
mov
jp
push
jg
dec
dec
outsb
ret
in
or
data16
out
inc
nop
sub
add
adc
sti
mov
cmpsb
or
sub
inc
xor
jmp
lret
sbb
or
into
fisubl
stos
loope
inc
mov
push
jbe
movsl
add
inc
orb
scas
sbb
mov
mov
mov
lret
sbb
or
enter
and
pop
das
cmp
mov
movsb
enter
or
sub
inc
sahf
and
mov
lahf
mull
std
icebp
shl
cmp
arpl
les
mov
mov
push
jns
test
adc
pop
jns
es
sahf
mov
push
lret
add
inc
jnp
dec
add
cltd
jb
std
dec
cwtl
pop
adc
int3
add
push
insl
jecxz
outsl
or
push
pop
clc
js
enter
lcall
jp
fs
cmp
lods
pop
mov
stc
mov
adc
std
ret
idivl
push
es
aaa
dec
sbb
sahf
testb
xchg
jge
push
jno
mov
ja
jg
jnp
adc
mov
fnstenv
adc
int
test
enter
pop
aas
jae
and
jp
xor
loopne
cmpsb
popl
mov
and
mov
xchg
pop
out
push
addb
popa
mov
sbb
mov
fsubrp
imul
ret
stos
out
mov
outsb
or
mov
fimuls
add
std
lds
cmp
sarl
cmp
test
cld
jg
ljmp
push
mov
faddl
rcrl
dec
xor
fisubs
inc
sbb
sub
test
mov
out
iret
jmp
add
nop
popa
fwait
jae
mov
out
gs
jo
inc
hlt
adc
in
cmovne
or
mov
xchg
or
aad
xor
ret
add
pop
ret
or
cmp
and
sbb
or
test
cs
pushf
jbe
rorb
jnp
dec
sbb
cmp
dec
cmp
ja
push
pop
sbb
sub
cmp
in
fildll
jl
cmp
jnp
adc
dec
subl
pop
add
sahf
dec
cwtl
pushf
lock
int3
dec
imul
out
aad
imul
pushf
insl
pop
shrb
int
or
rcll
adc
ds
lea
bound
push
xlat
rolb
mov
add
cmp
push
lods
popa
dec
and
in
mov
test
and
dec
mov
fs
mov
xor
adc
lret
jge
adc
or
or
rclb
xchg
lret
leave
lods
push
psllq
popw
inc
inc
aad
adc
gs
pop
arpl
push
in
ret
or
mov
jno
test
and
dec
jbe
mov
push
push
call
les
in
ds
jae
imul
mov
sub
out
mov
dec
sub
xchg
in
mov
xlat
push
dec
repz
mov
push
add
jae
mov
imulb
aaa
repz
pop
ja
adc
sbb
adc
loopne
pushf
enter
mov
inc
cltd
push
sahf
mov
cmp
xchg
sub
adc
stos
push
imul
cmp
jo
ja
dec
push
arpl
jp
pop
fs
pushf
xor
xchg
jae
and
cmp
cwtl
repz
cmp
cmpsb
in
sub
or
das
ret
cld
xchg
iret
sbbb
cmpl
inc
mov
push
mov
lods
xchg
sarb
loopne
dec
jp
mov
push
je
pusha
jg
loop
xchg
jo
sub
adc
cli
ss
adc
jg
mov
pop
adc
scas
insl
dec
pop
repz
popa
enter
das
adc
and
add
pop
adc
pop
xor
mov
das
loope
ds
int
add
fldcw
aaa
jno
add
popf
aad
lahf
cmp
mov
pop
test
mov
adc
mov
xlat
in
stc
stos
js
push
mov
inc
add
dec
jae
dec
and
fisubs
insl
cmpsb
push
xchg
jno
xchg
mov
lock
cmp
mov
fisubrs
pop
std
out
out
imulb
jmp
int
call
sahf
in
lret
or
mov
dec
into
push
cmpsl
add
xor
adc
xchg
dec
ds
ja
xchg
out
arpl
mov
imul
mov
push
jae
jle
xchg
stc
mov
or
stc
in
cli
andb
cwtl
add
mov
mov
pop
adc
jp
clc
sbb
mov
lret
cmp
ds
fs
lea
movsl
xlat
jle
mov
addr16
sahf
sub
mov
call
jge
sub
xor
or
inc
cmp
iret
sub
mov
rolb
add
inc
ret
jbe
push
lret
cmp
insb
add
xor
add
gs
into
inc
andl
push
scas
mov
prefetcht2
cltd
push
fildl
xor
stos
xchg
lcall
outsb
test
ror
mov
push
sub
inc
pop
sbb
cmc
and
bnd
push
lds
cmpsb
pop
mov
push
aaa
cmp
sbb
adc
mov
clc
sub
adc
lods
push
cli
in
je
mov
or
call
or
or
insl
fiaddl
fsubrl
mov
dec
dec
sbb
aaa
sbb
and
mov
xchg
outsl
mov
loope
mov
fnop
inc
push
cltd
cld
std
push
fistpl
cwtl
addl
sub
jae
jge
cld
mov
ljmp
int
add
mov
pop
je
mov
loop
in
hlt
rcll
and
in
sub
adc
and
jae
arpl
and
scas
pop
in
and
xor
push
pop
and
lods
sub
mov
adc
adc
pushf
cmp
repz
pop
es
sbb
out
adc
addr16
ja
xchg
mov
js
jle
test
fs
pop
push
add
mov
fadds
testl
rcrl
cld
jl
adc
mov
or
mov
ret
std
lock
mov
mov
inc
sbb
and
xor
sbb
add
lcall
xlat
fsubrs
xchg
rcrb
and
loopne
inc
mov
sbb
xor
pop
pusha
sub
push
pop
ret
ljmp
jno
cs
push
lcall
cwtl
inc
push
out
fs
dec
ret
pop
cs
mov
int
jmp
in
mov
aad
sbb
jo
pop
jns
cmpsl
jmp
fbstp
mov
loope
ljmp
cltd
jb
sti
scas
jle
notl
loop
pusha
xchg
arpl
adc
cmp
outsb
into
cwtl
inc
fsubr
outsl
inc
leave
cmpsl
dec
aaa
loope
mov
std
mov
test
xor
add
mov
jmp
popf
and
xor
jl
enter
jg
cwtl
or
pop
fisttpl
fstp
inc
jno
lcall
iret
inc
stos
push
jae
mov
jnp
push
mov
rclb
movsl
popa
and
or
stos
mov
jg
xor
popa
pop
pop
stc
loope
ljmp
test
test
mov
jnp
lea
sub
imul
dec
jb
pop
mov
cmovbe
cmc
ljmp
mov
mov
xor
jg
rol
or
jae
xchg
bound
out
cmp
loope
and
data16
testb
jge
popf
shl
sub
push
add
add
pop
fstpl
jecxz
aas
cmp
xchg
cltd
imul
fcoms
ss
jo
dec
repz
add
xor
imul
or
sub
and
ja
push
add
mov
enter
rcll
out
ds
clc
pop
push
add
fwait
jl
mov
push
mov
dec
push
clc
mov
mov
cmp
add
mov
adc
jae
xchg
mov
cwtl
cmp
push
test
jmp
daa
and
add
popf
push
and
and
sbb
shlb
repz
adc
xchg
in
sbb
xchg
mov
add
inc
ja
mov
shll
mov
mov
in
xor
jle
stc
cmpl
dec
cmp
dec
popf
lock
fwait
push
stos
repnz
or
sbb
pop
loope
loope
lea
mov
xchg
imul
xchg
ret
cmp
sbb
mov
xor
mov
cwtl
add
test
mov
dec
jnp
enter
sahf
mov
cmp
push
in
cmc
and
sbb
daa
sub
xchg
cwtl
and
xor
pop
adc
int
jmp
sarb
je
pop
add
push
pop
inc
rcrb
scas
pop
arpl
iret
mov
in
clc
mov
sub
push
mov
outsb
fstpl
enter
movsb
xchg
popa
push
inc
daa
jge
and
xor
scas
mov
mov
jge
push
int
dec
and
xor
inc
pop
jnp
outsb
inc
jle
cmp
in
pop
xor
jno
adc
daa
iret
fldt
cmp
jle
fwait
sti
shrl
push
sarl
mov
xor
dec
cmp
loope
cwtl
or
imul
in
jp
cs
adc
in
pushf
hlt
xchg
xchg
or
and
ljmp
mov
sti
sub
sub
ss
outsl
dec
adc
jne
push
sbb
cmpsl
inc
mov
sbb
lods
stos
dec
xor
incb
jg
sbb
fisubrs
ss
sahf
add
lds
sahf
repz
mov
rolb
push
xor
adc
pop
xchg
sub
mov
sahf
rorb
pop
mov
fwait
cmp
xlat
imul
xchg
in
scas
and
pop
jp
pop
push
es
push
loopne
arpl
daa
mov
popf
out
insl
negl
cltd
jns
fdivl
cwtl
ss
sub
xor
add
sbb
in
addb
inc
dec
xor
jg
inc
push
mov
cmpsl
xor
jmp
cmp
das
add
jb
loope
adc
adc
in
mov
mov
rcrb
hlt
aam
lds
imul
mov
inc
mov
mov
inc
clc
rcrl
xchg
cwtl
test
stos
ss
cmpsl
enter
add
insl
test
ret
xchg
in
pop
dec
sar
nop
mov
cli
cmp
jne
ret
imul
add
dec
dec
sub
fadds
test
push
imul
dec
ficoms
fadd
outsb
stos
or
mov
repz
aas
xchg
shr
lods
int3
push
sti
push
add
and
add
add
clc
popa
mov
pop
sahf
jmp
fs
repz
rolb
xchg
push
cmp
test
add
xchg
adc
push
xor
ja
push
mov
or
loopne
mov
imul
fwait
das
pop
jae
jge
in
mov
dec
or
fstpl
clc
mov
mov
pop
cmp
mov
loope
data16
scas
mov
jp
ss
jecxz
mov
mov
inc
mov
pop
inc
pop
test
lahf
mov
aaa
xor
xchg
aad
push
jge
scas
cmp
gs
iret
or
in
enter
jmp
fildll
pop
jo
dec
sub
out
test
lcall
xchg
repnz
push
xchg
shrb
mov
push
and
adc
adc
jl
stos
mov
jns
scas
cs
inc
jbe
mov
push
mov
cli
inc
shrl
imul
push
xor
inc
mov
test
pop
inc
aas
dec
loope
pop
xlat
lcall
inc
test
lret
pop
mov
sbb
out
push
adc
jge
mov
and
and
popa
dec
mov
xor
pop
and
mov
andb
inc
fs
cmc
push
jno
or
add
add
or
push
insl
nop
cli
jb
jb
lret
xchg
in
stos
test
pusha
test
fldcw
rcll
jmp
loop
jecxz
dec
sub
scas
cmp
mov
mov
inc
pushl
cmpsl
lcall
ja
subb
or
mov
ljmp
js,pt
jg
mov
inc
jecxz
mov
shlb
testb
sub
mov
lret
outsl
addb
insb
sbb
jo
cli
push
fwait
pop
mov
add
jg
orl
xchg
and
fwait
out
jo
pop
jbe
lcall
mov
jecxz
mov
test
pop
pop
sub
movsl
inc
fsubs
sub
inc
sahf
filds
jecxz
vandps
or
cld
adc
dec
cmc
loopne
jnp
pop
add
lods
push
insl
lret
push
xchg
push
sbb
and
jb
xchg
and
add
mov
ret
test
xchg
push
scas
les
arpl
xchg
lds
loopne
sti
movsl
test
pcmpgtw
ljmp
into
adc
cli
loope
cltd
lds
scas
loope
fwait
cmpl
popa
aam
sbb
pop
pusha
adcb
pop
fcmove
andl
stc
je
push
mov
pop
rorl
pushf
lea
dec
test
push
iret
and
jnp
add
out
adc
adc
xor
jns
pop
add
add
push
or
push
mov
jbe
cmp
inc
int3
push
xor
and
inc
push
sbb
dec
mov
push
pop
bound
mov
xchg
inc
sub
mov
aas
fadds
cs
dec
dec
rcpps
aad
or
dec
fists
xchg
xchg
pop
je
lcall
pop
enter
dec
fidivrl
mov
cwtl
insl
cli
jecxz
or
mov
xor
mov
adc
xor
scas
lcall
insb
mov
and
test
andl
jbe
adc
mov
movsb
mov
xchg
jecxz
jbe
add
enter
test
sbb
hlt
inc
mov
cld
mov
jo
mov
or
test
mov
adc
in
in
fdivrs
adc
into
jge
pushf
not
cltd
jns
lcall
cmp
lds
cmc
push
pop
ret
jl
pop
jne
jl
das
insb
ss
addr16
fisttpll
jle
hlt
in
ja
xor
fucomi
xchg
test
das
xor
enter
in
mov
cmp
int3
scas
add
xchg
hlt
mov
out
add
fs
dec
adc
shlb
in
mov
sti
clc
lock
dec
mov
insl
xor
mov
bound
lcall
adc
test
mov
and
pop
add
clc
testl
sub
add
cmc
fdivr
shll
dec
xor
mov
push
fisttpll
nop
sti
jnp
loope
inc
mov
dec
add
ljmp
test
aas
push
mov
stos
mov
outsb
push
or
add
pop
pop
out
push
sub
mov
aaa
mov
mov
mov
fildll
shlb
lock
jb
pop
sbb
sub
xchg
push
dec
leave
jne
and
pop
cmp
shll
fimuls
scas
ret
mov
jne
push
jno
cmp
jp
fcmovnu
lret
push
je
pop
xchg
loopne
cmp
push
out
push
mov
cmp
rorl
je
ret
int
mov
and
pop
fimuls
lret
and
out
pushf
in
in
xor
push
dec
ljmp
adc
pop
lret
and
add
int3
or
ficomps
shrb
and
jnp
xchg
movsl
fidivrl
testl
or
xlat
push
push
pusha
sarl
out
lret
shrl
pop
fisubrs
shll
iret
cwtl
les
dec
sarl
mov
mov
std
fstps
lea
xor
cltd
pop
cmp
mov
repnz
xor
xchg
out
xchg
pop
jns
ds
xchg
and
loop
rcrl
cmpsl
pop
adc
jb
jecxz
add
adc
fucomp
dec
adc
cmc
cmp
lcall
stos
adc
mov
mov
mov
pop
pop
mov
cmp
lea
adc
cwtl
mov
adc
insb
daa
fdiv
adc
jecxz
mulb
sti
repnz
mov
or
adc
shll
je
loope
xlat
mov
clc
jmp
lahf
aas
lods
push
sbb
adc
sub
jge
fmuls
fisubrs
mov
mov
xor
shr
xlat
in
addr16
or
jnp
sub
stos
ror
pop
jmp
or
int
aaa
in
cli
test
dec
mov
ja
hlt
xchg
sub
mov
aas
scas
stos
dec
popf
cli
shr
xadd
out
jle
or
sbb
lods
pop
lcall
jp
lcall
lods
aam
cmpsl
jmp
es
add
std
lea
stc
xor
push
and
aam
mov
and
ret
cltd
ljmp
scas
jo
sbb
shlb
push
inc
and
cmp
mov
ljmp
cmp
imul
or
cmp
ss
xor
ret
mov
add
insl
mov
fwait
scas
and
arpl
adc
pop
dec
sbb
dec
andl
jbe
jns
lock
sti
sub
adc
dec
mov
or
xchg
xchg
outsl
cmp
adc
in
pop
cmp
fldz
or
jnp
in
gs
outsb
push
xor
sub
enter
pop
negl
inc
pushf
jae
pop
push
lret
sbb
dec
mov
dec
mov
push
push
popa
fbld
cld
dec
iret
orb
sub
ficoml
sub
sub
rol
lods
test
mov
ja
sarb
adc
adc
mov
enter
mov
in
xchg
pop
inc
pusha
xchg
ljmp
jnp
or
lock
insb
dec
out
mov
int
lea
cmp
xor
or
jp
cmp
pushf
ljmp
adc
lret
movsb
movsb
dec
push
dec
enter
fidivl
scas
jo
sbb
sbb
cmp
imulb
add
add
ds
and
pop
sub
mov
mov
dec
out
int3
repz
lcall
lods
rolb
std
fprem1
bound
jno
mov
das
aam
push
pop
push
lahf
in
jecxz
call
push
jl
mov
pop
fs
jle
daa
sub
sbb
push
mov
aad
jle
adc
sbb
leave
xlat
notl
sbb
stc
stc
push
test
mov
lods
adc
scas
cwtl
mov
cld
push
inc
xor
cmp
dec
mov
lret
add
jbe
test
mov
xor
pop
jo
sub
mov
andl
ret
xor
andl
dec
sub
push
cmpsl
fs
sbb
jle
cmp
fadds
clc
and
popa
mov
mov
sbb
inc
lods
sbb
cmc
fcmovb
pop
das
mov
hlt
add
sub
sub
inc
imull
lret
loop
xor
shll
fildll
rcrb
rorb
cmp
int3
incl
inc
fadd
insl
sbb
sahf
xchg
mov
inc
fldcw
adc
cmp
cmp
in
pop
xor
stos
cmp
sar
out
movsb
lock
out
mov
pop
loope
fwait
out
ss
scas
adc
enter
mov
int3
adc
add
adc
sbb
cmp
and
out
bound
mov
lahf
adc
xlat
dec
jo
jle
sub
pop
xor
iret
fldcw
adc
mov
test
test
into
mov
rol
ja
incl
or
add
in
in
cmp
rorl
mov
cs
aad
mov
stos
mov
imul
sti
cwtl
out
jle
adc
clc
cmovg
xor
mov
insb
dec
pop
das
jg
cmp
inc
bound
js
cs
sbb
enter
add
sti
jns
sub
xor
push
into
lea
fcmovnu
icebp
or
mov
cli
in
push
das
imul
scas
sbb
and
pusha
cmpsl
push
xor
ror
jbe
cwtl
xor
shlb
push
shll
dec
mov
scas
lcall
cmpsl
stos
pop
push
rorb
repnz
sbb
shl
pop
fisttps
pop
and
push
inc
ret
inc
ljmp
sti
cli
inc
xchg
fcmovnu
rorl
mov
cmp
xchg
pop
outsl
push
fmul
in
push
divl
mov
dec
call
push
push
fs
pop
outsb
sub
inc
enter
js
mov
aaa
dec
push
sbb
inc
dec
fdivs
jne
dec
inc
adc
inc
xchg
int
sahf
sbb
push
cmpl
push
mov
and
inc
inc
pop
enter
fmull
int3
cli
dec
inc
xor
mov
call
lock
mov
outsl
mov
jo
mov
mov
rcl
mov
dec
mov
sbb
pop
sbb
sub
shlb
cmp
mov
mov
pop
jno
iret
or
or
and
jge
jecxz
ss
outsb
aad
xor
roll
sarl
pop
xchg
push
cmp
jno
cmp
daa
scas
cltd
sti
orl
push
fnstsw
add
jl
mov
rclb
inc
cmp
loop
mov
nop
scas
ficomps
sbb
mov
btr
mov
out
mov
ja
pop
jp
out
rolb
cmp
dec
rcrl
xor
aam
mov
mov
es
and
add
xchg
insl
cmp
adc
addr16
lods
in
test
add
imulb
jb
sbb
push
xchg
add
pop
cmp
stos
push
rolb
push
add
mov
sub
fwait
rcrb
ljmp
push
mov
daa
repnz
mov
mov
jecxz
aaa
jle
mov
leave
dec
xchg
push
push
es
fists
int3
xor
mov
in
mov
out
insb
mov
fldcw
insb
jge
jge
sub
pop
mov
stos
scas
inc
pop
lods
popf
xchg
adc
push
prefetcht1
jo
xchg
call
adcl
xchg
lahf
pop
mov
sti
mov
pop
jmp
push
ret
or
test
cli
andb
insl
pop
inc
or
xor
mov
rcr
dec
dec
out
pusha
add
push
inc
cmp
ret
icebp
push
xchg
or
push
dec
dec
fcmovu
rcrb
lods
mov
or
mov
aam
fldl
popa
nop
fldenv
sub
imul
mov
shll
push
jno
push
xor
sbb
cmpsb
lcall
fldt
mov
cltd
cmp
js
mov
mov
ljmp
inc
int
sub
xchg
test
ficompl
std
cmc
orl
mov
mov
mov
mov
inc
stc
imul
leave
push
pop
wbinvd
add
fs
push
push
sti
cmp
or
repnz
in
popa
je
add
mov
adc
sbb
fwait
shll
inc
xor
sub
mov
das
cmp
lock
mov
jecxz
fisttps
pusha
push
test
fwait
xor
test
jbe
add
mov
addl
lods
xchg
inc
arpl
cli
xor
sub
jmp
mov
inc
enter
pop
jnp
push
mov
mov
inc
fsubs
or
lods
fwait
cmc
xchg
fidivrl
adc
flds
bound
jnp
push
loope
ret
subl
sub
daa
sub
ret
int
shl
lret
leave
push
cmp
add
aam
pop
push
xchg
push
mov
rclb
mov
sbb
push
or
mov
jecxz
mov
test
filds
inc
mov
cmpb
push
loopne
xor
dec
sub
inc
aaa
addb
jl
je
jge
mov
jae
push
pop
in
and
xor
push
mov
in
imull
pop
push
scas
iret
mov
jns
sbb
lods
fdivs
push
int
ret
xchg
dec
or
mov
in
cmp
lahf
add
cld
movsl
pop
pop
aam
adc
add
vprotw
or
push
dec
out
sahf
rorl
shl
push
mov
dec
sub
lret
jg
fadds
repnz
out
cld
push
adc
adc
cmc
arpl
stos
inc
sub
push
add
cmp
pop
xor
and
pop
stos
sub
sub
sbb
adc
icebp
push
cmp
sbb
out
shlb
insb
fiadds
jo
push
lret
cld
xlat
fistps
mov
mov
mov
into
arpl
iret
stos
ficoms
jo
sub
cs
mov
ja
add
sbb
cwtl
pop
push
xor
arpl
sbb
fdivrs
in
cld
movsl
lcall
inc
aad
adc
aad
pop
incb
sbb
orl
mov
test
and
mov
aaa
dec
adc
sub
jge
sbb
insl
das
pop
cltd
lret
push
cltd
dec
add
dec
jbe
or
pusha
cmpsl
jl
adc
sbb
cmp
xchg
mov
mov
test
insl
ja
les
push
stc
out
lea
mov
xor
push
push
push
bound
lock
movsl
lods
popa
add
cmpsl
pop
push
mov
push
insb
add
mov
xchg
icebp
cwtl
push
mov
jnp
fs
and
scas
cmp
xchg
push
xor
int3
cmp
jns
addr16
rclb
iret
and
mov
xchg
ret
xchg
pop
js
es
out
adc
sub
je
aad
stos
in
test
mov
out
mov
push
clc
push
or
cltd
push
or
push
dec
loop
adcl
cmc
dec
std
inc
push
inc
hlt
and
inc
idiv
cmpb
sub
rcrb
out
sub
aaa
lea
test
stos
cmp
daa
jb
pop
icebp
iret
es
adc
inc
mov
xchg
ja
dec
mov
pop
mov
pop
hlt
xchg
mov
mov
fbld
push
sbb
jecxz
fs
pushf
bound
mov
lock
scas
sarb
cwtl
les
jno
daa
popa
imul
mov
into
das
insl
mov
pusha
and
clc
movsb
cmp
push
sub
adc
sub
ds
jb
mov
fwait
inc
stos
or
call
jg
mov
push
in
leave
inc
pusha
and
cli
and
sti
pop
xorb
into
add
mov
sub
inc
outsb
jl
add
enter
test
cmpb
incl
mov
inc
rorl
xchg
nop
sub
outsb
inc
sub
fisubrs
sbb
scas
test
and
repz
test
dec
mov
test
je
and
data16
jmp
lods
and
dec
shrl
imul
or
push
int
adc
popf
pop
mov
push
adc
push
sti
inc
negb
pop
sub
icebp
jg
outsb
andl
lret
icebp
fisubrl
mov
xor
nop
inc
cmp
shrl
in
sbb
sub
cmp
mov
mov
std
pop
mov
cld
stos
mov
xchg
stos
mov
cltd
in
cmp
and
fucomi
stos
in
inc
pop
cmp
mov
cmp
dec
imul
in
mov
push
pop
into
push
lahf
add
inc
xchg
mov
and
xor
mov
lahf
jl
cli
adc
mov
push
aam
in
outsl
mov
xlat
mov
mov
into
jae
jmp
mov
mov
or
ret
divb
or
pushf
add
add
js
and
loopne
or
add
pop
dec
mov
hlt
imul
cmp
imul
jns
rorl
and
or
outsb
push
insb
dec
xor
loopne
test
lock
lcall
inc
imul
xor
jmp
pusha
loope
xor
cmc
mov
orl
loopne
lods
adc
paddq
xchg
or
or
lcall
addr16
or
mov
add
xor
cli
add
aam
jmp
popa
ret
movsb
xor
mov
jb
shrl
mov
data16
add
bound
sub
sub
lods
aad
xchg
jmp
push
ffree
xor
push
aam
out
mov
stos
fisubs
push
test
cmp
cld
dec
inc
jg
sub
mov
xlat
dec
ss
xchg
or
dec
mov
push
jne
ficomps
test
addb
pop
sub
leave
sub
push
jo
mov
pushf
je
fs
lahf
into
push
ret
cmpsl
jle
in
jo
pushf
rcrl
call
push
xor
pop
adc
insl
shrb
push
adc
aaa
lods
mov
pushw
xor
xor
lock
shufps
into
sub
cmc
loop
cmc
inc
out
push
pop
in
cmc
mov
addr16
ja
adc
push
pushw
adc
jno
inc
sub
fwait
pop
xor
or
mov
jne
int3
aad
movsb
adc
divl
hlt
xchg
xor
adc
mov
fs
xchg
in
lea
xor
xchg
jae
mov
inc
jmp
std
outsl
repnz
sub
push
addr16
inc
sar
fnstcw
sub
scas
lret
mov
aas
and
hlt
jo
mov
inc
movsb
cmpsl
pop
cmpb
pushf
test
xor
in
int3
rorb
in
dec
icebp
mov
out
andb
inc
stos
mov
push
dec
pop
fsts
push
dec
test
mov
out
inc
cmpsb
call
mov
movsl
fwait
in
lods
pop
sbb
adc
sbb
cmpsl
or
xchg
mov
fimuls
les
mov
jmp
push
in
add
adcb
sub
cli
push
dec
mov
imul
or
cmp
push
sbb
ret
and
repnz
push
out
sarb
rclb
mov
xchg
rolb
mov
ficoms
scas
jmp
mov
cld
loop
push
or
inc
nop
mov
nop
mov
iret
add
fimull
xchg
mov
push
idivl
and
ja
inc
icebp
ljmp
das
xchg
cmp
sbb
roll
mov
sahf
jl
xor
pop
shlb
dec
psubusb
sahf
xor
add
inc
cmc
nop
cmp
js
addb
adc
mov
std
xor
mov
sbb
das
mov
out
stc
movsl
jb
dec
outsb
jne
popf
xchg
inc
loop
inc
push
addr16
push
and
call
jecxz
testl
pop
push
cmp
xor
lea
pusha
ficoml
xchg
adc
sbb
outsl
cli
add
in
in
jbe
lods
pop
mov
or
das
sbb
mov
fwait
std
ret
cs
or
adc
in
sub
fcmovb
loope
adc
loop
imul
dec
adc
cli
call
pop
test
inc
cmc
out
cld
jo
xchg
jo
ja
sub
sbb
xor
lods
out
push
adc
arpl
insb
cmp
sbb
adc
stc
xchg
enter
cmp
sbb
jl
icebp
in
sub
adc
cmpsl
push
pop
push
mov
cmpsb
into
or
jb
lcall
daa
sbb
inc
mov
jp
sbb
cmp
and
xchg
fldt
cwtl
xor
enter
push
mov
mov
daa
jge
stos
test
fucom
mov
ret
test
aad
mov
mov
int
loopne
mov
shrd
inc
xchg
icebp
adc
clc
jecxz
iret
or
repnz
rcll
rcr
and
sbb
inc
test
jle
bound
push
hlt
pop
mov
xor
andb
out
mov
test
addr16
sbb
inc
dec
in
mov
xor
orl
std
nop
lods
inc
in
call
std
mov
xor
insb
dec
mulb
movsb
aam
clc
imul
adc
addb
jp
bound
jnp
sub
stc
movsb
into
lock
xchg
mov
push
insl
jl
mov
pop
dec
pop
push
jo
push
lret
or
dec
out
call
pop
ja
and
pop
popf
xor
adc
outsl
pop
mov
and
push
popf
ds
into
je
sar
adc
jmp
sub
test
rorl
sub
movsl
xor
mov
gs
dec
mov
test
add
aam
lea
in
add
jae
dec
int3
mov
int
mov
test
std
das
push
push
ds
sahf
inc
ljmp
outsb
mov
mov
lret
sbb
or
xchg
std
or
push
fcmove
or
fsts
std
or
sbb
inc
cmp
aaa
xchg
or
adc
sti
outsl
add
fiaddl
popa
stos
adc
mov
mov
mov
int3
test
cmpl
jmp
mov
lods
inc
in
rclb
sub
cmpsb
push
insl
fisttps
out
loope
or
jno
mov
or
push
xchg
je
push
out
jno
jmp
repnz
es
rcl
xorl
movsl
mov
pop
and
jle
sbb
leave
push
lahf
shrl
aad
mov
ja
mov
jmp
stc
out
lods
sub
in
pushf
insb
sbb
popf
outsl
push
out
sbb
sub
cld
dec
hlt
and
mov
pop
add
push
lcall
test
enter
push
jne
ret
inc
push
notl
adc
out
fs
mov
out
icebp
rcrl
xor
cmp
adc
adc
stc
fsubrp
fistl
cmp
ret
cld
dec
mov
cmp
push
and
rolb
and
mov
sti
bound
fimull
inc
dec
pop
adc
gs
jg
es
andl
inc
mov
flds
add
sti
leave
xchg
push
nop
xchg
fcoms
mov
ficomps
cmpsl
loopne
or
cwtl
test
and
jnp
cmp
or
xchg
push
lahf
mov
push
in
sbb
lea
lahf
stos
pop
lea
sub
mov
cmp
adc
cs
adc
loope
cmpsb
jb
aas
cmpsb
dec
lods
shrb
sbb
fs
loope
inc
fdivl
iret
aad
sub
aad
int3
lret
gs
dec
leave
and
and
in
inc
icebp
mov
dec
xor
xchg
mov
push
jl
in
cmp
sbb
rcll
or
ficoms
xor
into
inc
jg
cmp
or
cmp
shlb
push
std
clc
cmpsb
add
and
std
fcoml
mov
xor
xchg
xchg
out
gs
xchg
rcrl
mov
push
xchg
sbb
cmp
int
xchg
pop
push
and
loope
fmuls
addl
sub
cld
nop
or
bound
outsb
or
in
mov
mov
mov
mov
jg
mov
scas
xlat
insl
push
insb
ljmp
push
jnp
mov
pop
imul
es
stos
xchg
cmp
fistpll
in
aad
jns
sbb
sub
orb
orl
iret
push
sub
or
xor
cwtl
fcmovbe
push
loope
call
into
aaa
jne
mov
pop
sets
push
sub
cwtl
divb
sub
pushf
shll
adc
inc
std
jle
sub
ret
dec
and
ss
jne
push
fcmovnu
fldcw
adcb
out
fldt
mov
aad
lret
sub
inc
shlb
xchg
cmp
jg
shlb
sub
pop
mov
dec
fisubrl
out
mov
xchg
jb
push
mov
inc
push
sbb
sbb
mov
jle
xchg
adc
lahf
daa
dec
push
mov
and
fisttps
or
fidivl
inc
xchg
mov
mov
push
sub
dec
and
and
shlb
idivb
sub
jmp
mov
push
xor
push
xchg
cmp
mov
in
jbe
or
mov
xchg
add
mov
xchg
cmpb
sbb
aam
fcmovu
mov
jl
sbb
push
ficoml
lret
push
xor
fdivrs
push
add
std
or
jmp
xor
or
xchg
lahf
lds
sub
cmpb
xorb
mov
mov
gs
imul
jle
cmpsl
lret
push
xchg
cmp
sti
adc
enter
pop
adc
iret
scas
mov
adc
pop
not
adc
xchg
xor
mov
mov
fmul
mov
cltd
cmpsl
fistl
cmp
and
cld
sti
clc
insb
add
jbe
fcmove
rcl
aaa
into
push
push
dec
inc
mov
jl
mov
mov
iret
jmp
mov
adc
bound
int3
call
xchg
jecxz
adc
loope
aam
lahf
or
xlat
ficoms
in
test
test
test
mov
pop
cmp
cmp
mov
shl
sub
clc
push
notl
subb
add
inc
mov
mov
adc
pop
add
push
and
sbb
in
push
xor
sahf
cmp
subl
sbb
push
loope
iret
lea
lret
loop
inc
aaa
data16
aaa
and
adc
jmp
mull
mov
xchg
adc
lods
xchg
outsb
push
push
aam
test
rclb
pop
test
icebp
sub
je
repnz
jns
or
jae
mov
mov
gs
adc
mov
pop
push
mov
int3
and
lds
jbe
in
cs
push
call
aas
xchg
ja
adcb
xchg
lods
or
xor
xchg
push
mov
sbb
stos
nop
mov
dec
push
push
movsb
stc
and
gs
in
sub
bound
jg
popa
into
fisttps
test
or
dec
pop
mov
xchg
aam
das
call
sub
ljmp
sub
ds
movsb
pusha
popa
out
scas
hlt
lcall
jne
inc
dec
xor
mov
pop
popf
stos
loope
or
dec
cmp
ljmp
hlt
leave
sbb
jg
mov
xor
repnz
mov
in
adc
push
notb
or
in
jmp
in
pop
scas
and
adc
xor
mov
sar
mov
jl
dec
sub
stos
mov
popa
into
leave
pushf
icebp
popf
inc
lahf
leave
addb
loope
movsl
jnp
sub
aas
std
mov
xchg
push
or
rorl
mov
loop
test
xchg
adc
hlt
loopne
cmp
and
ja
stos
jp
insb
sub
js
dec
in
jl
xchg
cmp
xchg
in
in
jg
jle
mov
cld
push
into
inc
push
out
cmp
xchg
sub
je
mov
cmp
pop
push
sbb
in
data16
dec
icebp
xchg
or
fcmovnb
je
xor
mulb
faddl
mov
xchg
xor
dec
or
aad
daa
xor
xor
mov
fcomps
lcall
mov
aad
push
les
xchg
adc
adc
push
scas
adc
test
testb
pop
lods
call
test
sub
push
sub
outsb
mov
lret
fidivl
sarl
push
pop
mov
scas
push
pushf
ret
add
inc
and
mov
outsl
add
add
sbb
dec
test
cltd
dec
loop
adc
int3
cwtl
pop
jecxz
add
stc
out
jo
test
mov
sbbb
fldl2e
inc
fimull
adc
sbb
and
push
sbb
data16
mov
xor
mov
xchg
insb
fisttps
imul
jbe
aas
inc
sbbb
out
xchg
daa
mov
mov
push
dec
or
imul
cmp
mov
roll
imul
outsb
inc
push
lea
push
mov
pushf
roll
jg
push
inc
and
or
fwait
sub
call
loope
ljmp
adc
outsb
dec
dec
lods
cmp
imul
lds
sahf
sub
xor
fdivrs
jmp
insb
cmp
cmp
cld
jle
rolb
adc
dec
and
rcrl
repz
push
prefetch
push
pop
jp
xchg
lds
loope
pop
xchg
ss
out
out
push
xchg
jno
xor
out
pop
xchg
jge
mov
lods
sbb
mov
xor
add
jl
adc
sub
in
mov
and
xor
cld
add
or
mov
fwait
cli
bnd
cltd
lods
jge
xor
fistl
add
cltd
in
loopne
out
push
mulb
pop
data16
push
and
test
mov
lea
and
dec
cmp
sbb
mov
sub
sahf
xchg
jmp
js
ret
xchg
dec
inc
loop
scas
cld
add
mov
flds
test
and
inc
push
xor
lods
or
orl
hlt
mov
push
fcoms
xor
out
jmp
mov
stos
pop
scas
jns
movsb
mov
sbb
inc
mov
add
inc
aad
nop
outsl
dec
gs
sarl
aaa
mov
sub
adc
sbbb
jg
flds
push
daa
jle
jmp
jl
rcll
insl
insl
inc
adc
js
subl
xor
add
sti
push
sub
lret
inc
ljmp
mov
nop
adc
or
mov
xchg
addl
jg
insl
fidivrs
shrl
push
add
sub
sbb
loopne
dec
pop
cmc
aam
imul
arpl
cwtl
inc
hlt
out
add
and
mov
movsb
sti
ss
mov
sbb
loope
push
ljmp
das
xor
subb
nop
adc
jbe
push
pop
call
adc
sti
pushaw
fcoml
outsl
xor
pop
orl
fsincos
stc
sbb
arpl
fldcw
ljmp
add
out
nop
mov
negb
repz
sti
adc
mov
xchg
and
enter
sub
jae
push
subl
inc
outsl
into
xchg
and
adc
test
mov
adcb
scas
fmuls
push
jp
sub
clc
stos
jmp
adc
inc
div
jnp
adc
daa
adc
arpl
and
jge
test
cli
js
and
sbb
inc
cs
jb
ljmp
mov
inc
pop
dec
int3
sub
orl
stos
ss
pop
mov
arpl
xlat
test
ljmp
js
fcomip
push
cli
pop
and
in
repz
mov
test
fbld
cs
cmp
iret
sbb
inc
loop
adcb
mov
stc
lret
cwtl
filds
ss
pop
scas
imul
mov
dec
xor
push
rcrb
cmp
aam
test
daa
stc
sub
xchg
cli
mov
lahf
sbb
mov
sbb
mov
pop
jge
mov
sbb
jne
dec
jnp
adc
aaa
cmpsb
adc
adc
loopne
xchg
mov
lea
out
jne
aam
jbe
push
pusha
mov
mov
in
mov
loope
outsl
pop
mov
mov
lret
ja
or
xor
fidivrs
adcl
repnz
imul
push
fcompl
inc
mov
jmp
out
jp
add
and
adc
insl
cltd
jg
daa
pop
mov
andl
aad
insl
movsb
rcrb
loope
pop
mov
xchg
fildl
pop
inc
cmpsl
xchg
xor
movsb
sbb
cmp
push
or
cmpsb
jle
popf
sbb
addr16
lods
mov
cmc
xor
pop
aas
adcb
mov
icebp
insl
loopne
fidivrs
dec
push
adcb
jecxz
enter
insb
repz
clc
fwait
push
sub
mov
ret
pop
subl
iret
adc
pop
dec
cmc
sbb
dec
test
mov
xchg
mov
nop
sub
xor
mov
fwait
scas
rolb
pop
out
mov
mov
dec
or
inc
xchg
repnz
mov
sub
repnz
sahf
and
int3
mov
add
addb
and
and
arpl
das
pushl
inc
cwtl
xchg
mov
imul
mov
jnp
jle
cmp
cmp
xchg
lret
pop
add
mov
mov
push
sbb
adc
iret
mov
and
dec
nop
std
pop
pop
add
xchg
sbb
stos
fs
mov
xorb
cmpsb
mov
dec
pusha
stos
mov
pop
imul
leave
mov
pop
aam
out
and
idivl
dec
xor
jle
jl
ret
icebp
cmp
mov
push
mov
popa
bound
in
loop
js
repz
imul
fsubrl
jmp
es
addr16
mov
inc
popf
sbb
jb
jecxz
lcall
sub
es
andb
cmp
pushf
mov
ret
jecxz
push
aaa
jecxz
push
outsb
js
pusha
pushf
push
cmp
push
sbb
dec
dec
mov
inc
push
adc
lret
and
dec
add
inc
mov
dec
add
out
pop
scas
and
mov
or
or
dec
adc
pop
aaa
out
inc
scas
leave
cmp
xchg
outsl
mov
or
in
aam
jp
ret
add
push
rorl
shlb
inc
rorb
dec
inc
nop
stc
mov
push
jmp
xchg
clc
dec
inc
cli
mov
mov
add
aad
mov
jne
xchg
pop
cmp
xchg
sahf
pop
ds
sahf
or
les
inc
mov
mov
rolb
cmp
dec
sbb
pop
push
aam
mov
push
dec
mov
sbb
jno
mov
fidivrl
aam
inc
cli
sti
dec
inc
mov
mov
dec
push
mov
ret
or
jmp
fs
mov
getsec
pop
fisubrl
jmp
cli
in
or
stos
sub
and
mov
sub
adc
testb
push
roll
pop
mov
xchg
subl
push
sbb
add
cld
pop
decl
xchg
outsl
cmp
jg
sahf
in
test
roll
mov
iret
scas
test
imul
enter
inc
or
push
adc
add
outsl
js
imul
add
push
sbb
dec
mov
ljmp
xchg
shlb
lea
push
popa
sahf
xchg
dec
jb
xor
cwtl
aam
xor
xchg
jmp
into
mov
fisubrl
mov
test
and
push
aas
iret
mov
mov
cmp
pop
push
cmpsl
ljmp
jl
pushf
cmp
out
mov
mov
mov
outsl
xchg
rcrb
loop
xlat
sahf
cmpsb
push
sbbl
push
jecxz
std
out
inc
adc
loopne
insb
sub
xor
out
mov
mov
xchg
sbbl
cmc
jns
cld
das
ljmp
dec
xchg
xor
leave
mov
mov
mov
push
pop
inc
pop
xor
push
ss
push
pop
jp
dec
mov
out
daa
pop
movsb
iret
inc
test
xchg
daa
jecxz
jae
jmp
in
les
mov
bound
in
shlb
mov
pop
sbb
incb
mov
in
ret
sbbb
dec
cmp
inc
adc
fidivrl
sub
adc
pop
jb
xchg
mov
push
or
lahf
rorb
push
in
cmp
ret
mov
fwait
or
xchg
jge
pop
sbb
mov
cmp
inc
mov
data16
call
std
jae
xchg
mov
mov
inc
adc
mov
movsl
fwait
jl
xchg
fdivp
jo
cmp
or
cmp
pushf
nop
sbb
gs
jecxz
adc
or
les
push
add
cli
fwait
or
icebp
mov
aam
jmp
xor
ret
add
rolb
movsl
in
fdivrl
aad
pop
pop
add
in
repz
mov
and
dec
inc
mov
cli
jg
lea
mov
bound
xchg
mov
repnz
popf
roll
cmp
xlat
rorl
jae
xorl
ret
insb
or
dec
jecxz
xchg
mov
call
movsb
pop
jl
or
movsl
inc
pop
out
scas
mov
fbstp
jbe
shll
jo
pxor
adc
clc
sub
mov
stos
add
loope
addb
fiadds
mov
in
xchg
insb
aas
inc
cmpsb
loope
adc
fsts
ja
iret
loopne
test
mov
inc
add
push
mov
call
inc
dec
out
fwait
inc
jo
xor
sti
jnp
pmaddwd
sbb
sub
dec
push
pop
or
mov
xor
scas
add
mov
dec
push
inc
shl
or
std
scas
dec
insb
push
cmp
push
cmpsl
js
mov
jnp
ret
in
xchg
or
mov
and
sub
test
adc
dec
and
inc
and
dec
cmp
cmp
xor
mov
neg
sub
mov
aaa
pop
and
xlat
sub
add
pushf
in
aam
gs
push
sub
add
outsb
xchg
out
jnp
fwait
mov
mov
mov
lds
subl
rorl
pop
and
clc
leave
mov
imul
rcrb
xchg
inc
leave
ljmp
movsl
fnstenv
dec
lcall
inc
push
pusha
mov
nop
pop
inc
jg
mov
repnz
mov
push
jae
loop
xchg
cmp
iret
cmp
sbb
add
inc
mov
mov
outsb
loop
jle
repnz
and
aam
xor
or
icebp
lret
lahf
out
xor
push
in
insb
lock
or
or
pushf
gs
add
fcmovnb
mov
inc
mov
push
pop
clc
push
bound
mov
mov
adc
push
mov
add
fwait
pushf
mov
lock
cmp
pop
mov
cmpsb
pop
scas
sbb
push
and
inc
and
hlt
aas
fmull
xchg
out
xor
rorb
mov
icebp
leave
inc
add
ja
out
xchg
adc
xchg
rolb
cmp
jle
add
jp
sti
repnz
rclb
mov
xor
movsb
cmp
mov
or
fwait
rorb
daa
mov
idiv
adc
lret
ds
pop
decl
dec
cmc
ror
adc
je
xor
mov
sbb
inc
or
adc
dec
jmp
rcrl
in
inc
cwtl
adc
fnstenv
cmp
push
jecxz
ja
loopne
testb
xchg
into
sub
mov
inc
mov
and
xor
out
inc
repz
movsb
mov
sahf
add
jle
jns
lret
mov
push
mov
xchg
sbb
inc
pop
call
out
movsb
inc
loopne
fdivl
stos
adc
ret
sahf
popf
mov
sarb
mov
ljmp
and
push
popf
rsm
hlt
cmp
or
mov
testb
je
sub
sar
xchg
xor
mov
sbb
mov
adc
sub
lcall
push
sbb
mov
jmp
sub
and
mov
and
adc
xchg
lods
cld
mov
hlt
icebp
testl
push
add
hlt
inc
inc
imul
jecxz
mov
or
mov
and
into
call
call
loope
mov
shr
sub
xchg
stc
mov
mull
xchg
imul
sub
inc
ja
lea
adc
repz
or
pop
stos
cmpsl
lcall
xchg
pop
insl
mov
hlt
call
pop
xchg
or
out
sub
loope
push
jmp
in
in
xlat
ljmp
xchg
mov
inc
loope
gs
jno
xchg
pop
iret
inc
orl
idiv
xor
hlt
mov
fbld
lock
cmc
test
sbb
lds
or
js
cmpsl
adc
sub
jb
in
push
ss
cmc
pop
rdpmc
fisubl
movsb
iret
cltd
div
or
test
dec
fnstenv
rcrb
out
lret
mov
mov
xlat
dec
test
xchg
inc
fcmove
push
push
push
pusha
lods
jne
loopne
sbb
push
ds
sbb
shl
pop
movsl
xor
mov
dec
add
mov
test
push
adc
and
sbb
imul
test
ss
inc
popf
sahf
lcall
lock
stos
jge
inc
nop
xor
in
and
orl
lock
popf
bnd
loopne
cmpsb
lods
addb
daa
xor
mov
aaa
fwait
mov
call
pop
or
in
dec
sbb
jle
jg
test
add
stos
push
shll
in
push
lods
aad
out
sbb
call
jns
xor
pop
mov
clc
mov
call
gs
and
or
xchg
bound
lcall
xor
sub
imul
adc
lahf
mov
cmpb
dec
lods
nop
test
or
xchg
xor
verr
mov
insl
jo
pop
xor
je
mov
pop
pop
jae
mov
data16
jmp
mov
xor
cmp
jo
add
cmp
xchg
rcrb
pop
mov
mov
mov
cmp
xor
mov
dec
enter
and
out
je
scas
jl
jns
cmp
or
and
rolb
test
push
aam
call
cld
les
sar
xor
sub
dec
test
jb
adc
cltd
shrb
sub
pop
xchg
movsb
lods
jno
mov
faddl
aaa
filds
or
or
and
jg
scas
mov
dec
cmp
inc
loopne
mov
inc
mov
lret
or
sahf
popa
hlt
imul
sbb
insl
fists
dec
inc
pushf
cli
dec
scas
insl
in
push
outsl
dec
rolb
call
mov
cmp
sub
cli
push
stos
shrl
adcl
out
pushf
jnp
jbe
ja
roll
xchg
cmpb
jp
data16
inc
dec
addr16
push
rol
sbb
mov
mov
mov
xchg
std
out
pop
dec
les
jl
cmp
ljmp
cmc
cmp
push
inc
inc
xchg
mov
jp
fbstp
js
popf
decb
fnsave
cmp
push
out
sub
and
insl
repz
xchg
pop
scas
nop
xchg
pop
inc
loopnew
and
dec
xchg
loope
aad
sbb
sbb
fs
shlb
and
dec
data16
popf
pop
sbb
and
push
adc
andb
and
sarb
popf
jmp
jge
outsl
xor
fld
push
sbb
mov
sbb
ss
icebp
outsl
mov
mov
dec
mov
pop
lret
mov
dec
sbb
add
mov
fwait
imul
mov
mov
insb
jle
xor
dec
xor
das
add
scas
push
je
push
lds
insl
in
push
mov
push
fisubrl
cmp
jecxz
stos
dec
icebp
inc
adc
push
sti
movsl
cmp
and
xor
pop
rcl
sti
jecxz
inc
inc
aam
rcrl
test
dec
sahf
mov
mov
sbb
cmp
xorb
pop
repz
cmp
out
out
push
jae
pop
shlb
bound
das
pushf
xlat
cmp
sti
aad
sub
pop
lods
xchg
add
mov
xchg
rcrb
les
or
xor
inc
lret
jecxz
fildl
movsb
dec
dec
mov
gs
add
add
dec
lock
out
mov
int3
mov
mov
pop
loopne
int3
mov
sahf
nop
jmp
xchg
sbb
mov
leave
int3
push
cmp
push
in
inc
or
pop
pop
decb
mov
jl
xchg
jae
inc
push
xchg
sub
sub
test
cltd
das
push
xor
push
ja
xor
ds
cmpsl
xor
gs
mov
js
mov
sub
push
mov
cmc
jecxz
cmpsl
and
insl
or
cli
fs
fldl
rcrb
sbb
cmp
mov
lods
inc
outsl
into
push
push
xchg
push
scas
dec
inc
sbb
mov
adc
mov
xor
add
rorl
push
xor
inc
dec
pop
xchg
push
pop
push
in
stc
mov
mov
cmc
out
jne
cltd
mov
xor
call
mov
xchg
cwtl
xchg
les
stos
adc
test
mov
out
ret
lds
or
sbb
inc
loop
std
sub
cmp
sbb
lret
pop
mov
repnz
stos
sub
sub
cmp
and
dec
scas
mov
dec
frstor
sub
stc
cld
jle
mov
pop
int
mov
xchg
xchg
stos
push
lahf
pushf
sub
push
mov
push
sbb
andb
lea
cmpsb
sbb
mov
add
clc
push
or
mov
mov
sub
mov
mov
and
mov
insb
cmp
jge
xchg
cmp
repz
ss
add
cmc
out
ljmp
lahf
imul
push
jae
cmpl
leave
inc
lods
outsl
xchg
dec
ds
push
push
mov
shlb
iret
pop
aad
add
clc
jno
negl
data16
lret
sbb
and
iret
mov
and
gs
orb
cld
stos
push
adc
jle
sub
in
pop
inc
pop
bound
xor
sub
mov
gs
or
mov
mov
out
lods
add
andb
outsb
mov
and
push
cmpsl
div
xchg
sub
adc
mov
push
cmc
jnp
rcl
imul
add
jo
ret
adc
iret
loope
dec
imull
test
cmp
daa
and
adc
aas
sbb
adc
xor
ret
dec
shlb
sti
mov
cltd
call
sbb
dec
mov
add
jno
sbb
sbb
enter
lret
cmp
arpl
lods
or
sub
loop
cld
jle
mov
dec
fldl
mov
insl
jno
push
cs
and
add
mov
sbbb
adc
outsb
mov
cwtl
movsb
adc
jae
pop
movsl
inc
jle
sub
out
inc
jns
push
pop
mov
sub
mov
pop
cwtl
addl
mov
xlat
scas
add
cmpsb
test
neg
gs
in
loope
imul
inc
aaa
xchg
sub
fistps
into
jbe
jbe
xchg
loope
cmpsl
decb
das
pop
mov
sar
std
scas
je
imul
mov
mov
in
sub
test
hlt
xor
xchg
test
imulb
scas
cs
loopne
sarl
fimuls
jo
stos
or
sub
repz
test
aad
out
movb
bound
pop
mov
sub
push
jl
addl
xor
adc
xor
sub
pushf
jge
arpl
cmp
jmp
xor
andnps
shlb
nop
ret
outsl
loope
inc
mov
sahf
mov
fildll
call
scas
push
mov
popa
pop
arpl
jl
dec
idivb
dec
push
mov
inc
lcall
lds
pop
mov
ss
js
xorl
jae
mov
lret
jo
jmp
sub
es
jl
cmp
in
cmp
ljmp
dec
push
punpckhdq
pop
cltd
sbb
push
aaa
pop
adc
or
push
les
stos
out
xchg
cmp
rol
mov
fdivs
fimuls
adc
xor
dec
dec
dec
mov
mov
add
mov
aaa
jno
xchg
fmuls
arpl
in
lea
xlat
int
and
push
mov
stc
dec
dec
sbb
pop
loopne
dec
pop
xchg
add
lret
mov
aam
xchg
push
xchg
pushf
je
hlt
aas
mov
or
neg
sbb
xchg
mov
popa
pop
xchg
sbb
out
fildll
in
imul
fwait
dec
loopne
inc
adc
xchg
ror
aaa
out
ljmp
and
in
fldt
stc
jecxz
std
and
outsb
mov
jnp
stos
add
xor
testb
push
mov
in
stc
or
sub
mov
aam
mov
adc
sbb
xchg
ja
cs
in
jp
xor
sub
addb
mov
xor
xchg
cld
and
fs
sarb
adc
push
outsb
or
ja
pcmpeqw
inc
insb
mov
mov
cmc
xchg
jno
aaa
jno,pt
test
push
add
xchg
inc
cld
cmp
ss
xchg
or
fldcw
xor
mov
mov
adc
cltd
pop
ljmp
xchg
mov
es
mov
lret
xlat
ret
mov
ss
dec
iret
das
insb
nop
sub
cmp
ljmp
shl
mov
xchg
mov
adc
into
xchg
rolb
push
arpl
mov
lds
repnz
sub
jnp
popa
pop
mov
mov
pusha
out
mov
pop
sbb
jle
mov
out
scas
mov
inc
mov
repz
cli
pop
loop
into
leave
mov
mov
cwtl
cli
mov
out
insb
push
sub
cmp
mov
cwtl
jb
imul
sub
inc
mov
scas
dec
sbb
jnp
lds
rcrl
pop
mov
mov
add
mov
mov
jns
dec
stos
daa
popf
orl
stos
dec
nop
push
test
mov
cmp
popf
mov
cmp
mov
and
xor
dec
pusha
outsb
xchg
adc
aaa
jb
in
mov
pop
dec
add
int
add
out
inc
adcb
pusha
into
das
mov
xor
addr16
xchg
cwtl
int
mov
test
add
dec
iret
out
pop
jle
inc
cltd
int
cwtl
jnp
dec
loop
lds
mov
dec
sub
fldt
pop
sarl
call
mov
insb
push
lock
xchg
aam
cltd
bound
add
mov
sub
fisttpll
and
pop
mov
in
int
cmpb
rcll
pop
imul
pop
psllw
mov
in
call
ret
jecxz
push
test
test
pop
in
mov
ret
rolb
int
ljmp
test
sub
add
fnsave
cmp
movsl
xchg
fstl
pop
push
mov
cs
out
sbb
in
jp
je
jle
pushl
sbb
sub
xchg
insl
sbb
pop
mov
pop
in
rolb
mov
insb
lret
inc
lock
or
sti
jb
push
fwait
data16
mov
and
mov
xchg
nop
das
insl
pop
rolb
out
gs
js
jmp
push
pop
push
pop
cltd
insb
cmp
dec
and
push
rclb
into
mov
lock
loop
pop
sbb
call
jp
dec
jmp
jmp
xlat
lock
cltd
push
sbb
test
push
or
dec
sbb
xchg
adc
pop
jo
or
cld
or
mov
mov
xor
cmpsl
insl
imul
shlb
in
bound
xchg
add
xchg
or
push
stos
push
mov
addr16
adc
push
movmskps
add
mov
sub
adc
and
mov
fldl
outsb
out
mov
incl
ljmp
ret
arpl
push
jmp
jl
xorb
cmpsl
push
inc
jecxz
hlt
dec
pusha
jge
ljmp
stos
nop
lcall
jl
sti
xor
cmp
push
shl
mov
leave
dec
arpl
push
xor
enter
pop
ret
xor
jb
adc
push
sub
add
pushf
jne
and
scas
mov
out
popf
fdiv
movl
jp
push
cmpsb
xor
xor
mov
dec
sub
out
pop
insl
mov
loope
cmp
mov
sub
mov
xor
movsl
mov
ja
and
loope,pn
xchg
lcall
add
fbld
push
popf
decb
adc
movsb
pop
pop
in
or
stos
add
shr
daa
dec
lods
xchg
lea
dec
and
nop
push
mov
out
mov
popf
and
dec
xor
testb
dec
dec
pop
out
subb
pusha
in
ror
jle
xchg
mov
jl
int3
movsb
jb
or
inc
jo
lahf
mov
cwtl
mov
push
out
icebp
or
mov
shll
in
into
fstps
in
enter
mov
movsl
stos
dec
mov
inc
sub
jo
test
inc
jnp
scas
aam
sbb
in
cmp
inc
dec
xchg
mov
cmpsl
leave
xor
push
mov
aad
lcall
mov
jbe
test
dec
add
lea
adc
inc
cmc
cmp
ss
fisttpl
xchg
xchg
push
imul
mov
test
lods
dec
pop
outsl
pop
or
test
aad
jnp
sahf
aad
call
cmp
stos
lcall
iret
enter
mov
xchg
and
fldt
pop
or
mov
add
inc
adc
dec
or
subb
data16
jo
or
inc
cmp
in
lock
clc
shrb
stos
ja
push
fwait
cmp
cltd
clc
mov
adc
cmp
call
jp
lock
in
sub
mov
imul
push
xor
sbb
movsl
ret
or
mov
xchg
insb
std
xchg
sti
sbb
mov
mov
push
lcall
pop
ja
sti
pop
sbb
movsb
outsl
loopne
out
divb
pop
jb
mov
rclb
xlat
je
inc
test
sub
decl
xchg
jmp
adc
out
stos
lcall
inc
imul
inc
add
xchg
cmc
xchg
test
fcompl
or
jae
bnd
pushf
inc
setge
xor
pop
lcall
mov
sbb
cmpsl
filds
cmp
test
sbbb
push
jns
mov
ss
add
ss
scas
sub
push
xchg
and
rclb
cmp
mov
sub
cld
xchg
add
mov
pop
pop
push
jo
inc
jecxz
push
add
or
repz
aas
push
cmp
jo
pop
mov
jle
add
shll
data16
shlb
cli
fcom
adc
or
icebp
addr16
mov
adc
inc
mov
test
cmp
int3
jns
cmp
out
mov
cmpsb
aaa
or
loope
div
push
inc
push
sbb
in
mov
pop
es
mov
jno
inc
jge
outsb
xor
mov
fsubs
cmp
imul
lret
sub
lea
mov
jp
scas
mov
shr
cli
pop
xor
add
testl
loope
xchg
cmpsl
adc
push
push
insl
jbe
nop
test
dec
mov
pushf
fists
mov
jnp
sbb
sub
int3
fiadds
push
cmc
lods
xchg
xor
enter
loope
arpl
sub
pop
xchg
test
or
sub
mov
sbb
hlt
xor
dec
inc
ds
dec
sbb
aam
mov
jmp
adc
pop
js
out
popf
int3
xlat
sub
jns
push
rorl
mov
push
inc
xor
ljmp
insl
addr16
imul
addl
cmp
xor
stos
insl
out
add
jl
scas
mov
iret
add
scas
xchg
pushl
cmp
popf
stos
and
aam
inc
cmpsl
push
jnp
sub
in
mov
jg
sub
xorl
mov
popa
insl
cmp
dec
inc
dec
mov
aam
push
aad
sub
imul
jle
cmpsb
mov
mov
fimuls
mov
stc
icebp
lods
lds
pusha
cmp
jns
sub
roll
mov
or
movsb
nop
mov
mov
cmp
jns
sbb
add
jle
push
leave
jbe
mov
rcrl
test
and
push
cmp
loope
imul
out
xchg
adc
imul
xchg
mov
adc
jmp
clc
scas
dec
xor
mov
mov
sub
sub
insb
pop
in
push
pop
or
pop
mov
pop
in
lods
pushf
test
inc
pop
mov
push
sahf
xor
jg
sti
loopne
xor
icebp
jns
push
imul
and
loopne
movsb
inc
shlb
in
dec
testb
fldenv
xor
int
pop
pop
or
test
lret
jl
std
xor
outsb
pop
in
fistl
xchg
mov
addl
xor
inc
xor
and
lret
push
jns
xor
sub
ss
push
imul
cmp
mov
or
sbbb
es
cwtl
dec
sub
arpl
fstpt
lods
jecxz
and
jnp
pop
addr16
sbb
fsubs
sbb
pop
xchg
push
mov
cwtl
jmp
insb
sti
frstor
and
cmp
je
decl
dec
mov
mov
mov
mov
loop
xchg
std
int
or
dec
insb
lds
cltd
mov
xchg
or
rcr
xor
cmc
cmp
lock
cltd
pop
iret
dec
in
mov
push
test
lods
into
push
pop
test
or
sub
dec
dec
pop
test
outsl
les
or
jb
fisubrs
sub
or
xchg
outsl
rcrb
in
mov
dec
into
jge
sbb
mov
fsubp
pop
mov
out
sbb
sub
mov
add
test
ret
xor
je
aaa
xor
xchg
lahf
or
cmpsb
pop
add
imul
mov
xlat
jnp
sbb
mov
or
fidivrs
cmp
sub
loopne
mov
add
inc
in
arpl
pop
outsl
mov
mov
push
xor
mov
push
mov
clc
mov
jno
mov
add
loopne
cmp
lds
fdivrl
out
and
cmp
rcrl
push
cmc
leave
mov
jg
pop
xor
sahf
rcrb
je
xchg
jno
mov
in
cmp
test
xor
hlt
icebp
pop
mov
xchg
incl
cli
cmp
out
xor
jae
pop
xchg
fimuls
js
mov
jg
out
mov
inc
dec
inc
jnp
xor
es
daa
ret
pop
mov
ja
fnstsw
jne
jp
out
clc
or
jmp
arpl
loop
in
cld
addr16
cmp
popa
adc
mov
dec
pop
cwtl
callw
inc
push
out
inc
ret
pop
pusha
sbb
nop
adc
push
shrl
imul
mov
mov
push
and
lea
mov
sbb
jno
cmp
mov
pop
clc
in
mov
fimull
ret
inc
data16
push
ja
jns
mov
imull
push
ja
xchg
jle
mov
outsb
mov
mov
dec
add
decl
jne
cmp
outsl
stos
lods
and
jne
pop
and
fs
sbb
stc
add
outsb
rclb
xor
fists
test
testb
aaa
pusha
xorps
xor
cltd
movsb
sti
decb
pop
mov
lret
les
lcall
and
adc
or
in
pop
xor
inc
inc
cli
lret
icebp
or
jb
pop
push
inc
out
jb
outsb
in
imul
sub
push
js
mov
test
aam
in
sbb
mov
and
xchg
in
mov
xchg
mov
inc
stos
arpl
xchg
xchg
push
fsubrs
sti
in
push
out
mov
sbb
push
jmp
iret
inc
in
push
mov
adc
ret
movl
sbb
xor
cwtl
adc
mov
mov
adc
lahf
inc
pushf
test
push
dec
cmpw
jl
out
int3
dec
sbb
pop
xchg
sbbl
arpl
jmp
cmc
repnz
adc
push
imul
hlt
dec
inc
lcall
in
pusha
jle
lret
xor
pop
dec
xor
or
sahf
ret
or
rcll
cmpsb
rcll
cmpl
mov
xchg
jns
scas
cmc
xchg
jb
cld
push
fxtract
jp
mov
xchg
fstp
jns
shrl
mov
inc
lcall
mov
mov
scas
shl
out
jecxz
mov
mov
pop
or
or
data16
inc
sub
inc
pushf
shlb
rcr
jecxz
adc
fsubrl
cmp
xor
jg
stos
std
xor
inc
jae
sti
adc
repz
daa
adc
jp
sub
push
jmp
mov
movsb
fptan
mov
jge
rcl
aam
lock
xchg
int3
cmpsl
pop
sub
push
out
insl
aas
insl
cmp
sti
ss
mov
or
or
pop
rcr
jno
ja
stos
jg
pop
and
cltd
inc
movsb
mov
int
fcmovb
int
xor
jns
aaa
mov
dec
sbb
jb
sbb
mov
aaa
xchg
mov
fsubrl
push
es
add
repz
sbb
out
push
adc
sbb
adc
bound
sub
in
stos
push
jb
cmp
push
lods
push
cmp
pop
flds
push
sbb
lds
outsb
xchg
lret
icebp
jbe
inc
es
pushf
cli
inc
nop
js
lock
cli
lods
stos
outsl
push
insl
jg
mov
xchg
ja
xor
test
xor
outsl
lcall
inc
mov
xchg
jl
or
pop
data16
cld
stos
loop
into
loope
jns
ljmp
popf
xchg
pop
and
pop
mov
dec
lret
push
cmp
jno
cld
inc
jecxz
leave
xor
jbe
inc
sbb
adcl
sub
inc
mov
incl
xchg
xchg
xor
add
cmpsb
adc
and
test
add
mov
jl
lcall
add
sti
cmpsl
rcll
push
addl
cmp
pusha
push
mov
pop
cmp
cmp
mov
xorb
sub
mov
mov
les
xchg
mov
stc
sbb
mov
fs
cmp
push
loope
xor
cmpsl
push
test
xchg
xchg
adc
lea
dec
lret
les
leave
popa
sbb
idivb
insb
rolb
cmpsb
jg
dec
cmp
shl
mov
outsb
das
out
cmp
jno
gs
sbb
inc
xlat
imul
cmp
jmp
inc
stos
subl
add
lods
pusha
repnz
fsubrl
jmp
pop
adc
cltd
iret
fs
or
loopne
add
movsl
or
rorb
dec
sbb
add
addr16
stc
loopne
sub
xor
jecxz
pop
mov
or
js
rol
je
push
stos
jae
repnz
daa
xchg
jl
push
movsl
pop
add
cmp
fadd
loope
lret
sub
or
fiaddl
repz
mov
jl
mov
loop
jle
sbb
dec
sbb
psrlq
inc
lods
xchg
sbb
sbb
aaa
mov
aad
inc
xor
fcoms
sub
jns
dec
cld
dec
imul
and
jg
icebp
mov
mov
aaa
test
xchg
call
dec
out
mov
int3
push
rcrb
repnz
cmp
fldenv
stc
jecxz
imul
mov
mov
into
xchg
cmpsl
mov
or
dec
adc
testl
cmp
test
aaa
out
adc
repz
mov
mov
mov
or
addr16
pushf
inc
stos
add
pop
dec
xchg
out
mov
test
mov
pop
cmp
out
dec
lds
mov
push
in
jg
jmp
out
loope
lahf
enter
in
xchg
mov
jg
inc
add
out
ja
repz
jae
mov
leave
jno
jo
mov
pop
mov
xor
mov
cmpsl
daa
cmc
pushf
cmp
dec
mov
adc
cmc
imull
imul
cmp
xor
cli
fsubl
xchg
adc
outsl
jmp
ds
mov
xchg
out
mov
jecxz
and
pop
in
imul
push
bound
scas
cmpsb
in
movups
xchg
jbe
movl
in
mov
in
cmp
dec
and
inc
insb
sub
push
xchg
and
jno
gs
loop
jns
repz
mov
out
lods
pop
fistpll
insb
sbb
daa
mov
ljmp
dec
mov
lret
mov
ret
xchg
add
stos
loop
popa
xor
sbb
ljmp
test
gs
mov
ljmp
movsb
xor
mov
jns
sub
fiaddl
cmpsb
faddp
mov
pop
mov
xlat
mov
je
out
add
cmc
xor
shrb
mov
ret
jl
outsl
inc
rcll
xchg
push
adc
pop
outsb
adc
mov
dec
das
add
adc
xor
cmp
pop
dec
les
mov
mov
add
fidivs
movsb
or
ljmp
fisttpl
leave
xchg
jne
mov
fiadds
lret
popf
jae
push
sarb
fwait
iret
mov
xchg
push
mov
cmpsb
adc
sbb
aam
outsb
push
es
fmul
mov
data16
cwtl
pop
jnp
in
cli
add
pop
sub
inc
and
pop
clc
repz
fwait
out
or
je
loope
aam
iret
dec
cmp
mov
cmpsl
mov
std
inc
sbb
or
int
sub
lea
insl
lods
les
arpl
mov
dec
jb
in
adc
xchg
push
insl
cmpsl
rcll
jmp
lock
and
push
xorl
fcmovu
sub
stc
mov
push
pop
jle
adc
mov
mov
std
inc
jmp
aaa
insl
add
loope
mov
popa
test
loop
dec
in
pop
iret
mov
dec
xor
adc
aad
jge
negb
mov
fistpl
jnp,pt
xchg
sub
or
call
out
mov
loopne
xchg
and
xchg
insl
arpl
pop
and
scas
daa
cs
jmp
scas
and
mov
sub
inc
xor
sti
test
fpatan
clc
jge
sbb
adc
mov
dec
dec
sub
add
daa
xchg
inc
insl
pop
xchg
sub
das
pop
test
mov
clc
inc
lods
dec
inc
sbb
movsl
iret
pop
shll
test
lock
cmpsl
lret
mov
shll
pop
add
cmp
pop
add
shl
inc
outsl
mov
jno
sub
or
and
adc
out
or
cmpsb
mov
in
addr16
cmp
pop
sbb
sub
xchg
in
aas
cmp
hlt
jle
mov
lahf
dec
inc
dec
mov
jle
pop
adc
fsubrl
dec
xlat
and
xchg
leave
push
lret
jmp
xchg
mov
lret
pop
mov
lgdtl
pop
mov
push
pop
popf
roll
outsb
lcall
out
cmc
cmp
jno
cmpsl
loopne
ficompl
inc
mov
js
imulb
and
lahf
sti
pop
or
dec
dec
adc
inc
popf
adc
mov
call
xchg
mov
imul
dec
testb
lret
sub
popf
rcr
push
or
inc
xchg
sti
push
jg
pop
push
adc
mov
cwtl
movsl
imul
or
das
xor
add
add
or
inc
cli
mov
or
lret
movsb
data16
dec
cs
mov
push
mov
push
sbb
sahf
pop
shlb
push
mov
fs
sbb
aaa
ret
es
or
or
cli
adc
jno
push
pop
inc
loopne
movsb
imul
adc
popf
xchg
mov
insl
inc
lahf
jecxz
inc
inc
into
nop
dec
pop
stos
ja
xchg
mov
lds
inc
mov
dec
cmpb
sbb
mov
cli
rcrb
lods
sbb
sahf
mov
sub
out
movsl
cmp
mov
xor
mov
rorb
sub
pusha
push
fildll
jl
jae
push
mov
ljmp
adc
lods
ss
dec
sub
xchg
pop
pop
test
leave
leave
pop
insl
xor
fldt
dec
sbb
popf
das
sub
rorb
pop
fadd
pop
mov
pop
mov
lret
enter
sarb
in
sbb
cwtl
dec
ret
test
xchg
mov
jecxz
pop
adc
push
xchg
xchg
pop
or
test
mov
mov
inc
mov
xor
or
mov
cwtl
bound
movsb
int
lret
and
xor
adcl
cmp
mov
shll
xlat
mov
insb
add
loop
outsb
loope
mov
xchg
xchg
fcomip
sub
sub
xor
pushf
cmc
dec
inc
std
fs
xor
clc
mov
cmp
xchg
dec
mov
jp
lcall
adc
jns
add
cli
les
sti
repz
cs
push
inc
jp
xor
cmp
pop
arpl
xchg
pop
aas
lds
push
ror
xchg
xchg
fadd
ljmp
dec
stos
xchg
dec
lds
insb
jne
pop
jle
repnz
test
aaa
imul
add
push
mov
inc
fidivl
pop
pop
je
push
dec
jo
push
push
pop
in
add
das
sbbl
ds
add
arpl
sbb
fdivs
jo
ror
push
push
and
js
inc
mov
fstps
push
cmpsb
sub
ljmp
daa
cli
pop
cld
and
into
cmp
jo
xor
mov
fcmovnu
and
hlt
insl
or
or
inc
rorl
aad
notl
mov
out
repnz
std
add
xchg
jmp
and
inc
push
mov
jmp
into
add
test
daa
rorl
sti
aaa
int3
xor
es
decl
sub
pop
mov
jmp
add
adcb
movsb
sti
hlt
cltd
adc
fwait
xchg
mov
sbb
hlt
inc
inc
mov
mov
push
cmp
ds
cmc
fimuls
enter
xor
lods
js
cmp
dec
and
lds
and
mov
rcll
adc
pop
sub
sbb
hlt
popf
fwait
in
in
hlt
negl
xor
mov
jae
xor
sub
andb
out
subb
add
adc
in
sbb
pop
les
mov
sahf
inc
aaa
mov
stos
push
arpl
out
cmp
shl
pop
jmp
iret
dec
mov
mov
fs
xor
fldenv
shrb
lods
sub
out
add
lret
mov
hlt
xor
arpl
inc
aas
and
in
insb
xchg
int3
sbb
dec
es
lea
or
arpl
inc
adc
sbb
test
xor
or
mov
xor
fcoml
mov
and
cmp
addl
hlt
mov
fldl
cs
add
jae
jae
cmpsb
aas
stc
call
aad
aad
push
movsb
cmpsl
hlt
testl
mov
cmp
and
stos
inc
lret
enter
mov
sub
sub
cmp
test
jnp
aam
xchg
xor
push
sbb
jg
mov
fistpl
cli
ja
stc
add
dec
jg
test
out
pop
xchg
pusha
das
imul
daa
cmp
mov
pop
ret
loope
jb
inc
ret
jne
ds
incb
inc
xchg
fsubs
lea
pop
mov
std
cld
shrb
inc
dec
add
mov
rolb
mov
or
rcll
inc
xor
inc
bound
les
cmp
or
inc
jmp
data16
aam
outsb
jp
add
push
arpl
jne
mov
dec
int3
push
sbb
aam
fwait
mov
sti
lret
pushf
mov
nop
adc
imul
pop
daa
adc
xchg
dec
xor
enter
aam
aam
dec
setae
lods
repz
test
imull
pminsw
jns
dec
shll
mov
cli
adc
js
test
and
pop
dec
insl
pushf
jbe
rclb
in
bound
arpl
xchg
enter
js
outsl
cmovb
lods
jnp
mov
loope
xchg
pop
je
sub
imul
popf
jge
lret
lret
mov
fucom
cmpsb
ss
ret
or
test
xchg
scas
cmp
daa
push
into
xor
inc
sub
mov
jle
mov
test
push
mov
pop
fidivrl
dec
sti
aam
adc
cmp
cs
scas
mov
and
pop
lcall
lcall
xchg
push
cwtl
and
stos
push
and
ds
sbb
cmp
jl
addr16
dec
push
and
cmp
jp
pop
repnz
movsl
add
xor
add
xchg
psrlw
adc
sub
push
add
push
cmpb
mov
stc
adc
or
cmpsl
clc
push
sbb
pop
mov
iret
mov
aaa
fsts
add
mov
mov
dec
mov
mov
or
pushf
and
aaa
ja
xchg
out
xchg
sub
mov
cwtl
orb
mov
roll
jl
pusha
jmp
mov
mov
jge
jnp
data16
nop
cmp
mov
jbe
add
jo
aas
int
xor
fildll
movntps
jl
add
xlat
mov
pop
push
and
pop
and
aaa
mulb
inc
or
lret
adc
imull
push
lods
inc
inc
sbb
inc
dec
loope
jns
aam
pop
jl
jg
xchg
mov
mov
ror
or
ss
lret
je
inc
dec
add
mov
fbld
lods
jbe
xchg
inc
lret
daa
scas
outsl
adc
push
jae
cmp
ss
in
jg
rclb
ss
repz
mov
cli
cs
jl
pop
ret
decl
sub
dec
out
rclb
add
mov
inc
dec
insb
mov
lahf
test
or
add
add
sub
cmp
ja
jae
out
xorl
jb
jmp
dec
je
dec
mov
pop
lds
loope
into
xlat
arpl
outsb
out
aaa
sub
into
adc
push
in
sub
idivb
dec
out
or
clc
ss
les
gs
adc
cmp
push
push
arpl
push
adc
call
sahf
lcall
pop
icebp
and
jge
xchg
ret
sti
daa
stc
mov
jne
jg
mov
adc
mov
mov
negb
adc
push
iret
xor
scas
cld
je
cs
pushf
jge
mov
push
jmp
mov
mov
sub
sub
inc
jno
mov
int3
push
jp
lods
aaa
mov
xor
int3
cs
pop
int3
or
pushf
movhps
stos
mov
jns
inc
stos
popa
ljmp
aad
repz
aaa
cmp
mov
ffreep
or
sar
sub
test
xor
sar
mov
test
mov
and
inc
enter
int3
adc
js
ret
idivl
aas
push
mov
call
sub
adc
adc
lret
push
gs
fs
in
les
inc
or
push
sbb
mov
xor
adc
pop
mov
sub
gs
or
stc
in
pmuludq
test
pusha
push
popf
test
repnz
insb
mov
jg
loopne
jae
or
fwait
cmp
push
pop
sub
xorl
rolb
addb
push
jecxz
inc
stos
je
pop
mov
jle
addr16
repnz
pop
stc
mov
mov
test
fs
mov
pop
lea
cmp
je
pushf
ljmp
movsb
dec
fsts
movsl
pop
cmp
jle
scas
cwtl
test
xor
mov
out
testl
iret
inc
pop
out
int
jb
and
cmpl
insb
fadds
sbb
js
ret
xchg
add
cmp
push
xchg
xor
pusha
mov
sbb
dec
sub
idivb
ret
or
test
lret
mov
ss
icebp
push
xchg
out
xchg
lret
add
adc
sarb
mov
les
add
jecxz
xlat
mov
adc
out
dec
sub
mov
ss
hlt
scas
mov
xor
cmc
loop
ss
mov
jnp
and
mov
das
mov
adc
pushf
je
je
dec
mov
push
out
push
fldcw
jae
repnz
in
rcrl
arpl
lds
aam
sbb
je
cmc
sub
call
jmp
fucomi
outsb
jbe
scas
imul
xchg
sub
in
cmp
gs
push
int
orb
mov
jle
mov
inc
push
call
inc
test
rorb
mov
sbb
add
sahf
cltd
into
aad
xchg
add
test
push
clc
into
mov
dec
cmp
mov
pop
adc
scas
mov
lds
mov
push
xchg
mov
jne
sbb
add
push
and
xor
lods
cmpsl
add
aaa
xlat
sbb
sbb
or
incl
mov
dec
sbb
pop
jnp
sub
inc
das
lods
cmc
icebp
xchg
in
es
scas
push
add
lcall
jbe
jg
xchg
ret
sbb
mov
nop
fldl
cmp
imul
popa
js
imul
std
mov
fldenv
xor
addr16
inc
inc
negl
addl
ljmp
orb
xlat
xor
test
add
movsl
xchg
ret
push
jae
dec
xchg
push
sbb
dec
xor
sbb
lods
mov
add
jg
sub
fisubs
adc
wbinvd
jmp
and
fsubl
pop
mov
aad
fabs
aam
sub
or
in
lcall
ss
mov
push
fwait
popa
add
lahf
popa
sbb
idivl
lock
xchg
adc
rcll
lock
jmp
dec
pop
or
jne
fsubr
sahf
div
psubsb
xor
in
cmp
push
mov
push
test
pop
mov
ret
push
aam
icebp
pop
cwtl
xor
inc
clc
jo
xor
fmul
hlt
lcall
outsb
and
jmp
mov
pop
sub
push
jns
xchg
and
popf
stos
inc
cmp
xchg
push
xchg
lods
mov
dec
add
adc
scas
test
adc
clc
dec
rcr
gs
cmp
cli
stc
lds
dec
sub
mov
jge
ss
aam
mov
xchg
fldcw
ja
sub
jg
add
cmpsl
inc
popf
shlb
cmp
pop
enter
mov
stc
cmpb
push
lods
mov
xlat
cmpsl
loop
cmp
push
call
dec
sti
dec
sub
inc
push
nop
iret
mov
rcrb
dec
mov
push
stos
in
mull
xchg
jb
xchg
jmp
dec
int3
sub
xchg
adc
clc
adcb
xchg
test
in
dec
mov
enter
sarb
jmp
dec
cltd
jnp
mulb
std
outsb
outsl
pop
scas
stc
loop
and
xchg
lods
lret
out
mov
sub
sub
ja
push
pop
fcomip
out
pop
stc
sarl
out
and
adc
inc
stos
repz
pop
enter
sarb
dec
xchg
stos
sub
cmp
hlt
fdivr
push
imul
aam
sbb
inc
lahf
fabs
and
cmpsl
fsts
mov
out
fmuls
jbe
cld
cmp
arpl
xchg
push
dec
dec
xor
cmp
push
mov
xchg
jmp
xchg
push
pop
mov
add
pop
out
ja
lods
dec
cmp
mov
mov
jnp
rorb
fimuls
jmp
into
cs
dec
mov
movsl
out
insl
lea
push
fucomi
ret
mov
leave
mov
ljmp
fs
lods
test
push
push
aas
jns
gs
sbb
hlt
push
lock
push
cmpsl
inc
shrl
movsl
mov
data16
in
loopne
mov
mov
sub
inc
mov
push
hlt
loop
or
shrl
pop
mov
mov
jns
xor
xchg
xor
mov
pop
mov
sub
outsl
mov
push
pop
jg
inc
into
add
je
cmc
or
jmp
mov
mov
arpl
xchg
push
dec
pop
stc
out
daa
push
sbb
add
cmpsl
dec
add
dec
dec
fnsave
lcall
or
out
nop
into
sub
addr16
lds
inc
loopne
inc
roll
or
dec
jl
jb
sarl
xlat
loope
cmp
stc
jno
sbb
sahf
aas
push
jle
sarb
sbb
push
jg
xchg
jns
jl
iret
or
jmp
or
ss
cbtw
ret
sbb
adc
cmp
das
dec
js
mov
rorb
mov
orl
movups
cmp
in
sbb
mov
jbe
push
lahf
out
rorl
or
xchg
clc
arpl
xchg
xchg
inc
jnp
add
fcomps
rolb
or
call
int3
pop
xor
imull
sub
fcom
fisubrl
in
xlat
aas
imul
js
roll
ret
mov
inc
inc
sbb
push
test
push
fistpl
jmp
movhps
push
mov
mov
cmp
xor
sahf
mov
test
mov
movl
sbb
repz
insb
iret
leave
pop
pop
nop
sbb
jecxz
pusha
ds
aas
call
adc
fmull
dec
std
in
adc
jne
xchg
loope
orb
pop
push
jno
inc
jno
out
adc
push
inc
mov
into
icebp
scas
xchg
pop
jl
out
xor
xor
jmp
cmp
jg
int
jbe
outsb
andl
mov
lock
inc
lods
sbb
cmp
xor
lock
sub
jmp
cld
xorb
sbb
sbb
repz
push
cmp
test
bound
test
push
dec
aad
in
int3
out
xchg
mov
sbb
jp
clc
dec
in
push
push
pop
cld
imul
ret
mov
repz
mov
rcr
mov
xor
ja
fsubs
xchg
mov
sub
pop
daa
push
jno
andb
pop
push
mov
mov
lea
xor
adc
inc
adc
mov
imul
insb
hlt
scas
inc
loopne
leave
xor
or
mov
lock
mov
or
jle
loop
xor
sbb
fistps
test
add
fbld
jbe
inc
or
mov
cmp
sti
sub
add
adc
out
int
enter
mov
out
fisttpll
loop
es
xor
adc
push
test
es
shlb
xchg
cmp
push
int3
dec
mov
jle
stc
xor
cmpsb
cld
setnp
ret
mov
jp
or
push
enter
xor
xchg
cmpsb
ss
cmp
or
sbb
jp
int
test
in
cmpsb
jge
or
sub
mov
nop
jmp
sbb
stos
roll
fnstenv
std
xor
and
inc
xor
cmp
mov
shrb
pop
sbb
mov
pop
xor
insl
add
lcall
xchg
or
fsts
jle
adcl
pop
out
jl
fcmovb
cmp
or
sbb
fdivrs
arpl
xchg
enter
push
fwait
add
jno
or
shl
scas
xlat
cmp
repz
cwtl
push
xchg
jl
mov
jnp
popa
inc
stos
hlt
inc
inc
adc
jmp
mov
aam
mov
dec
dec
inc
in
pop
out
jnp
mov
shll
pop
push
push
mov
sub
xlat
leave
mov
test
cmp
hlt
gs
mov
mov
rcrl
jns
and
out
sbb
xor
and
dec
dec
dec
in
or
bound
sub
andl
clc
push
jmp
call
aaa
out
aas
out
sbb
sarb
pop
sbb
push
mov
call
push
push
dec
cwtl
fdivl
or
stos
sti
mov
or
push
pop
leave
dec
lret
orl
push
or
das
xlat
sahf
bound
pop
lea
mov
inc
mov
out
repnz
in
or
or
test
sarb
sbb
popf
mov
aad
bound
xchg
movsl
xor
data16
inc
sbb
scas
repnz
push
pusha
aas
roll
mov
jp
adc
push
subl
shr
lods
sub
pop
pop
xchg
cli
sub
mov
shl
pop
xchg
mov
pop
mov
sub
lret
mov
xchg
or
push
popf
dec
sub
cmp
faddl
mov
mov
pop
xchg
sarb
inc
adc
in
in
jl
sbb
bound
lds
dec
arpl
repz
and
lods
mov
loopne
dec
loopne
mov
xchg
xchg
lods
dec
ja
push
imul
xchg
popa
std
xchg
sub
out
and
movsb
cmp
subl
lahf
xor
repnz
shlb
lea
adc
loop
pop
mov
xchg
movsb
les
jae
cmp
das
popf
jle
mov
adc
mov
and
xchg
iret
pop
lock
out
push
aad
xor
dec
pop
mov
popa
ja
sbb
fmuls
ret
fdivrl
dec
fsubrp
pop
push
mov
push
aad
adc
out
pusha
loope
shlb
lcall
add
xor
icebp
jae
inc
add
ret
cmp
and
fbstp
test
fisubs
das
adc
push
aad
into
mov
fcompl
adc
andb
pop
loopne
jg
popf
hlt
or
jne
xchg
nop
xchg
mov
scas
mov
jmp
push
arpl
pushf
dec
mov
mov
mov
mov
ja
mov
bswap
pop
jl
and
lods
inc
dec
lods
lock
test
cmpl
stc
push
repnz
xchg
sub
pavgb
arpl
adc
imul
rep
jge
adcb
cld
dec
test
imul
xchg
cmp
fld
mov
scas
sbb
movsl
insl
pop
mov
fadds
cmp
out
adc
inc
cwtl
adc
inc
stos
adc
push
call
add
cwtl
or
cmp
push
sti
pop
xor
mov
rcl
mov
sbb
sbb
adcl
stc
fwait
shll
mov
push
sbb
sbb
push
push
imul
ljmp
xchg
cmp
cmpsb
sub
or
in
jb
outsl
inc
movsb
addr16
test
dec
daa
ja
push
repnz
loop
insb
std
push
roll
xor
mov
test
jnp
imull
push
sbb
cmp
and
fcoml
pushf
sub
push
cld
and
jo
jae
es
repz
leave
out
fwait
xor
pop
cmp
repz
mulb
stos
out
arpl
fstpl
fprem1
jbe
pop
xchg
jne
inc
push
mov
pusha
cwtl
lret
cmpsb
mov
mov
jecxz
push
fnstsw
popa
lods
mov
je
popf
or
or
mov
out
pushf
lcall
inc
pusha
inc
shll
or
cmp
mov
ja
sbb
cmp
sbb
mov
lcall
hlt
add
inc
adc
mov
testb
ret
cmpsl
aaa
gs
adc
test
and
fdivl
mov
pop
dec
lret
icebp
fcmovnb
mov
cli
shr
popa
std
rorb
popa
adc
mov
xor
pushf
pop
add
packuswb
ljmp
scas
xor
inc
bound
jg
sti
add
cli
lcall
or
pop
int
in
dec
adc
clc
fnstenv
mov
mov
mov
scas
lods
inc
out
cmp
xchg
lret
fisttpll
in
jge
movsb
lds
xchg
cmp
popl
aaa
sub
repnz
fldl
shlb
dec
les
sbb
icebp
and
cmp
mov
popa
fcmovnu
loopne
arpl
dec
and
out
inc
cmp
fdivrs
push
aad
dec
mov
sbb
imul
inc
fcomp
mov
fistps
icebp
sub
je
mov
icebp
in
adc
bnd
jbe
ja
aas
mov
es
jp
lds
xchg
xor
sbb
inc
xchg
mov
fidivs
dec
movsb
push
add
add
scas
mov
or
repz
outsb
pop
cmpl
lock
shl
adc
adc
stos
mov
adc
imul
repz
cs
add
aam
pusha
jno
enter
incb
stc
imul
out
adc
sub
jns
jg
testl
popa
shll
out
mov
test
push
cmpsl
mov
lds
mov
into
inc
inc
xchg
repnz
test
lock
and
mov
cld
sbb
scas
ja
cmpsl
mov
push
int3
inc
aaa
inc
sub
popf
aam
mov
daa
popa
sub
cmp
sti
aaa
icebp
dec
adc
imul
sbb
bound
into
xchg
jle
or
test
mov
and
xor
rcrl
xor
enter
pushf
in
xchg
fsubrp
nop
insb
lcall
push
repz
cmp
and
add
jnp
mov
repz
dec
xchg
in
jmp
mov
xchg
rcll
fisubrs
mov
les
js
sub
test
jbe
loope
out
jb
xchg
lea
aad
push
lret
out
rcl
lret
ret
add
lds
int
adc
mov
push
into
cld
mov
mov
inc
lods
pop
fwait
sbb
sbb
adc
dec
shl
xchg
scas
jns
sub
fnstenv
sbb
repz
nop
lcall
xor
test
xchg
movsl
adc
movsb
nop
js
pop
jne
jno
or
push
inc
adcb
pop
cld
sub
add
in
sub
push
sbb
cld
adc
dec
xor
dec
arpl
jns
mov
leave
mov
cmc
shl
ret
loop
jo
mov
data16
mov
outsb
fmuls
jae
pushf
cmc
popa
addl
dec
pushf
imul
outsb
cmp
pop
mov
outsb
jmp
sub
cmp
push
pop
scas
ljmp
dec
sub
imul
push
cmpsl
not
jb
nop
iret
adc
push
mov
test
sub
mov
ret
or
jns
dec
popf
movsb
pop
and
rdpmc
jmp
xchg
sti
insb
or
pop
lret
pop
vpmaxsw
and
pushf
cmp
sbb
adc
stos
or
inc
mov
add
cmc
push
pop
lret
add
hlt
jge
insb
dec
push
lret
pop
stos
adc
out
dec
sub
cwtl
fadds
imul
cmc
aas
outsb
mov
std
notb
in
cltd
movsb
sbb
dec
pmaxsw
mov
call
adc
sub
jae
mov
add
jmp
shrl
adc
rclb
push
lcall
jb
add
jge
lods
lret
es
pop
les
jmp
loop
mov
cmpsl
ret
mov
inc
jg
sbb
sbb
xchg
mov
xor
leave
cmp
addr16
jl
scas
lea
shll
adc
lahf
scas
dec
dec
jp
nop
stos
sub
out
aam
pop
dec
out
jae
cmp
mov
jnp
mov
stc
enter
pop
call
nop
std
pop
std
sbb
mov
or
push
inc
sub
fisttpll
ficomps
or
shufps
les
arpl
jl
mov
mov
inc
or
scas
jg
mov
ret
dec
mov
push
fdivrl
xchg
mov
aas
repnz
dec
or
inc
jb
nop
mov
lods
sbb
fsts
loopne
inc
xorb
outsl
sbb
adc
push
lret
dec
lret
and
pop
stos
pop
or
shll
mov
out
jp
int3
daa
in
clc
das
xchg
sbb
sub
fstpl
add
mov
cli
ret
repnz
sahf
rcl
les
out
std
cwtl
pusha
mov
in
call
jp
cmc
cmp
mov
push
push
xchg
sbb
out
push
mov
mov
xchg
mov
lret
es
xchg
sbb
push
ret
fs
fidivs
cmp
mov
cmc
and
sarl
pop
mov
pop
xlat
or
sbb
loopne
dec
sbb
push
dec
adc
test
out
add
sub
add
and
dec
adc
movsl
push
jg
xchg
dec
fbstp
sub
dec
rcrl
sub
movsb
push
cmp
mov
mov
mov
scas
insl
mov
sbb
ret
add
ss
push
ljmp
shll
jb
cmp
sub
and
xor
mov
push
mov
jo
xchg
dec
xor
ss
adc
jne
sub
out
jmp
dec
pop
cmpsl
sub
dec
imul
jg
into
xchg
pusha
movsl
sbb
icebp
jae
sbb
mov
dec
stos
cmp
fisttpll
mov
sub
lea
pop
sti
jle
sub
xor
mov
mov
inc
push
aam
stc
jp
push
xchg
mov
pop
ficomps
cli
fdivs
enter
mov
xchg
stos
mov
mov
xchg
and
into
loopne
mov
subb
mov
push
mov
mov
shl
loope
pop
sub
xchg
sarl
fwait
test
adcl
dec
test
dec
nop
cli
mov
outsb
sahf
jae
movb
ja
adc
into
or
cwtl
stos
add
data16
leave
lock
out
call
sub
or
pop
dec
dec
popa
fwait
nop
jbe
test
and
dec
shrb
sub
data16
jns
in
dec
js
repnz
inc
push
mov
call
movsl
bound
jl
lods
mov
stos
pop
push
dec
xchg
sub
loop
push
and
jg
int3
mov
and
push
xlat
fisttpl
push
xor
scas
mov
push
cmp
or
xchg
lock
in
adc
push
outsl
loop
sahf
enter
inc
ja
shll
ljmp
or
sahf
call
pop
ret
fadd
fidivl
cs
xor
sbb
inc
in
mov
sub
and
inc
sbb
push
fistpl
add
sub
jo
cwtl
cmp
pop
pusha
cmp
dec
cmp
lcall
add
sti
lahf
mov
out
xor
xor
mov
fnstcw
ljmp
ljmp
pop
jl
addr16
mov
filds
cmp
test
mov
lock
ja
mov
insb
lcall
adc
pusha
pushf
lds
bound
xor
sbb
das
push
es
jae
pop
or
aaa
mov
pop
shrb
jb
cmp
fsubr
in
loope
cli
mov
test
jl
jecxz
mov
test
pop
or
movsl
jmp
test
dec
or
adc
or
cmpb
adc
aas
clc
pop
sbb
das
pop
pop
lret
insl
xchg
and
pop
mov
mov
stc
jmp
jg
std
or
cmpsl
add
and
std
pop
sahf
aad
loope,pn
scas
xchg
scas
gs
rcr
aas
and
fbld
lahf
mov
cmpsb
wbinvd
roll
ds
sub
fisttps
pusha
push
vorpd
in
nop
xchg
fwait
out
cmp
stos
pusha
mov
fstps
xor
outsl
cmp
sub
xor
scas
mov
sub
nop
mov
lret
sahf
mov
movsl
sub
mov
mov
in
xor
leave
or
sahf
cmp
daa
or
push
mov
push
lods
cmp
mov
rclb
sub
mov
mov
mov
mov
repz
add
fstps
lret
dec
xchg
sub
in
cs
std
shlb
negl
jecxz
std
cmc
mov
jne
adc
loope
add
cmp
inc
xchg
mov
cwtl
rorb
ja
lods
push
scas
adc
call
lcall
adc
dec
enter
stos
iret
adc
adc
pop
xchg
imull
rcrb
mov
into
add
push
xor
jmp
push
cmp
loope
je
jne
adc
mov
enter
pop
push
xor
subb
adc
out
les
mov
sarl
pop
ljmp
aaa
mov
mov
inc
roll
addr16
dec
mov
xchg
xlat
movsb
jno
test
inc
dec
xchg
mov
push
out
jno
loopne
stc
ja
dec
sbb
jle
sbb
cwtl
lods
pop
pop
insb
andb
pop
insb
mov
popa
aas
push
or
sahf
mov
jno
sub
cli
or
sbb
hlt
add
jnp
mov
ret
xor
pop
in
stc
test
into
cmp
pop
je
into
iret
in
xchg
sub
subb
inc
and
inc
adc
outsb
push
sub
mov
mov
mov
jle
jl
rcrb
cmp
mov
xchg
sbb
cli
rcpps
int3
mov
and
mov
push
andb
xchg
jecxz
mov
sbb
xchg
jnp
push
fstp
testl
iret
adcb
mov
cmp
adc
push
sbb
fstpt
mov
dec
adc
sub
mov
pop
hlt
test
cmp
mov
mov
adc
in
mov
pusha
jne
mov
aas
scas
es
iret
mov
and
shl
adc
adc
xlat
int3
je
pop
add
or
pushf
xchg
push
in
cli
pop
cmp
cmc
movsd
xchg
iret
fidivs
cmp
dec
fmul
push
cmp
mov
cmp
leave
xchg
insl
iret
gs
inc
push
xlat
ljmp
xchg
cmp
pop
push
or
jg
andl
rcll
add
mov
push
inc
adc
imul
test
aad
add
movsb
das
adc
cli
jnp
mov
icebp
cmp
lret
adc
cmp
inc
mov
push
pop
bound
cld
or
jbe
lcall
sar
sub
jno
pusha
mov
negl
in
shlb
out
xor
pop
mov
movaps
out
std
pop
mov
and
mov
pop
cmp
and
pop
jecxz
stc
imul
inc
lods
xor
xchg
dec
iret
rcll
jg
jp
jmp
lds
add
add
test
sub
pop
scas
inc
lock
clc
adc
ja
es
jno
adc
imul
jo
data16
lcall
inc
jnp
push
daa
in
fbld
xor
filds
cmpsl
and
out
add
or
out
adc
hlt
rcr
les
mov
or
inc
fwait
add
insb
pop
into
dec
add
notb
and
test
jno
mov
outsb
in
and
clc
jmp
sub
mov
loope
aam
test
sbb
leave
ljmp
inc
scas
lret
jmp
inc
cmp
movsl
cmp
adc
pop
divl
popf
lods
pop
arpl
arpl
mov
push
xchg
jne
inc
mov
push
addr16
add
xor
in
popa
lret
sub
push
inc
lahf
mov
test
arpl
add
mov
rol
mov
xchg
icebp
pusha
push
adc
add
adc
out
repnz
fistps
aas
fxam
dec
sar
cmpsl
popa
xor
movsl
push
jecxz
jno
and
jle
xor
in
adc
pop
les
adc
pushf
jne
sub
or
xor
xchg
add
adc
sbb
rcrb
aam
scas
shl
or
out
stc
lds
cmp
push
sub
iret
push
xor
fiadds
and
jbe
scas
xor
add
mov
mov
inc
and
in
sbb
test
cwtl
jge
outsb
and
push
mov
mov
hlt
test
pop
push
push
into
cs
std
popf
jo
dec
fwait
jg
add
insb
imul
sub
lods
ljmp
jmp
inc
xchg
mov
jecxz
mov
push
mul
pop
rolb
rorl
repnz
aas
mov
imul
xchg
cmp
ja
push
mov
adc
cs
int3
mov
aaa
test
xor
fs
jno
jnp
outsb
sti
sahf
or
dec
cvtps2pi
ja
sub
jnp
cs
lcall
cli
mov
movsl
sub
cli
sub
sarl
sub
fsubs
gs
mov
jmp
sbb
push
push
add
push
push
imul
fiadds
cmp
sub
loope
inc
lock
inc
adc
pop
and
or
mov
pushf
pop
mov
and
jnp
popf
test
popf
hlt
cwtl
adc
add
xor
xchg
test
dec
pushf
lds
sub
cmc
inc
jno
cmpsl
ficoml
sub
mov
sahf
xchg
out
rcll
cmpsl
mov
mov
in
cmp
scas
sub
sahf
gs
mov
pop
xchg
test
lea
pop
mov
jmp
xor
adc
daa
addr16
cmpsl
mov
xchg
repz
call
mov
into
mov
pop
push
out
outsb
outsl
popf
push
push
xor
insl
sti
js
ficompl
pusha
jno
popf
dec
xchg
mov
lock
in
outsl
lret
cmpsb
mov
mov
insl
jmp
or
clc
mov
pushf
inc
jae
cmpb
cmp
add
push
adc
out
mov
cwtl
add
xchg
mov
or
cmc
loope
jg
push
sub
inc
adc
aad
push
cmp
scas
ret
inc
or
or
pop
jle
mov
add
mov
popf
movsl
scas
inc
lods
stos
lods
push
shrl
fidivrs
push
dec
xor
mov
fstpt
jmp
addr16
fwait
xor
leave
fs
ficompl
lcall
cmpb
mov
pop
iret
mov
insb
out
inc
loope
sub
push
test
test
dec
xlat
in
pop
mov
sbb
add
out
add
fcoms
adc
stos
mov
enter
jecxz
scas
andl
es
pushf
xlat
out
dec
scas
cmp
cmpsl
cmp
daa
jl
mov
jnp
cmpsl
in
mov
cmpsl
ja
jecxz
push
add
xlat
inc
xlat
test
test
test
mov
and
movsl
xor
ss
icebp
mov
mov
subl
fsin
adc
imul
lahf
xchg
pop
ss
insb
andl
cmpsl
mov
xor
cmp
jmp
loop
jo
mov
sbb
cmc
pop
cld
int
aaa
push
aaa
lock
pop
jb
mov
enter
repnz
dec
jbe
dec
lahf
cmpsb
cmp
sbb
mov
jmp
sbb
mov
test
add
jne
ret
into
xchg
push
jmp
out
adc
push
repnz
sub
loopne
lret
and
adc
mov
ja
sub
mov
cmp
shlb
mov
dec
lods
xor
sbb
lock
or
and
push
mov
add
rorb
and
daa
fnstenv
movsl
jno
addr16
stos
mov
les
cmp
adc
inc
xchg
jp
mov
mov
and
cld
test
dec
sbb
mul
sub
and
in
pop
adc
mov
fsubr
mov
lret
xchg
pop
ret
pop
adc
xchg
rcr
test
adc
mov
fists
dec
fsubrs
jae
sbb
ljmp
sbb
or
hlt
nop
fwait
or
test
xchg
loop
pop
cwtl
cltd
gs
mov
xchg
xor
add
sbb
ja
stos
sbb
pop
aaa
cmp
sbb
ret
lods
sbb
ficomps
int3
or
cld
mov
sbbb
jg
adcl
adc
lea
inc
insl
sbb
in
mov
out
dec
inc
data16
sub
inc
out
cmp
ja
add
popa
addr16
call
popf
xor
pop
push
jmp
fwait
jmp
in
test
imul
jmp
or
call
outsb
test
pop
sbb
inc
outsb
daa
jo
xchg
push
jmp
sahf
push
sti
mov
rcll
fmul
pop
fimull
fwait
aas
adc
dec
cmp
push
jl
mov
iret
leave
shll
jb
inc
cmp
or
add
repz
flds
out
jmp
fidivl
dec
sti
push
fsub
xor
mov
lahf
pushf
mov
xor
pop
sbb
mov
jmp
add
in
lea
ljmp
push
cmp
js
lods
or
push
scas
pop
jle
dec
jns
out
xchg
fxtract
dec
or
and
repnz
in
jmp
lock
or
outsb
push
subl
pop
enter
add
in
cld
jge
add
jmp
jecxz
addr16
leave
mov
sub
add
pop
pop
int3
mov
daa
adc
mov
imul
xchg
xchg
ret
xchg
xchg
jnp
je
xchg
inc
orl
push
adc
pop
cmp
and
push
sub
push
cmpsb
adc
dec
outsb
imul
jle
adc
into
inc
call
out
add
movsb
je
add
clc
pop
stc
inc
inc
ret
aad
sbb
ss
xor
stc
xor
jae
mov
incl
jo
jmp
pop
and
cmpsl
data16
maskmovq
testl
inc
ljmp
sub
mov
out
pop
pushl
or
mov
cmpl
and
cld
xor
push
mov
push
sub
leave
pusha
and
popa
stos
inc
daa
rcrl
sbb
and
mov
pop
jmp
mov
inc
add
test
pop
or
aas
cmp
or
pop
insl
jnp
or
cmp
xchg
xchg
jmp
filds
fnstenv
lret
or
inc
xor
inc
and
mov
iret
push
lret
xchg
nop
into
xor
cmp
scas
ja
xor
sub
and
mov
loope
sbb
dec
push
and
fisubl
adc
cld
sahf
lret
pop
jns
mov
pop
loop
pop
xchg
sub
cli
lret
idivl
dec
in
xor
xchg
in
push
mov
out
aaa
mov
cltd
cmc
xchg
das
outsl
stc
jl
fcmovne
cmp
push
pop
pop
das
arpl
mov
cli
or
in
loop
cmp
movsl
or
mov
loope
iret
lds
inc
push
int3
pop
nop
pop
test
ror
pop
adc
mov
mov
popf
mov
cwtl
shll
xor
mov
mov
pop
pminsw
sbb
mov
dec
sbb
lea
or
in
stos
scas
fisubs
adc
pop
adc
sbb
fidivs
sbb
sti
push
call
sub
sub
sbb
dec
lret
lcall
cld
mov
xchg
jne
les
ss
notb
cs
mov
fsubs
xor
in
push
sarl
clc
cld
rclb
popa
push
sbbb
imul
bt
add
orb
jno
cmp
mov
dec
add
movsl
inc
push
cmp
jp
mov
adc
daa
or
dec
int3
add
mov
mov
adc
dec
jl
shlb
push
sub
pop
sahf
aad
jmp
pusha
xchg
cltd
jmp
mov
lock
cmp
daa
adc
les
std
xor
sbb
test
imul
and
xor
pop
nop
inc
imul
xchg
push
xor
or
sahf
or
aad
popf
rcll
mov
sub
iret
jne
das
xchg
insb
and
jb
mov
xchg
out
stos
and
sbb
xor
fistpl
mov
adc
pusha
fsts
and
insl
hlt
xchg
dec
mov
lahf
and
lods
pop
fldenv
hlt
sub
dec
pushf
mov
mov
sarb
stos
pop
and
adc
jg
jne
aaa
fsubr
xchg
lcall
add
testb
jg
push
pop
mov
movsl
sub
inc
add
dec
lret
movsb
in
jmp
dec
gs
insb
add
cmp
mov
repnz
cld
test
rclb
out
adc
adc
xor
loope
outsb
or
jmp
fcoms
fiadds
std
sbb
xor
push
adc
jl
xchg
jmp
add
sub
jle,pt
jg
sub
mov
loope
mov
pop
scas
aas
and
lcall
gs
out
pop
xchg
mov
loop
sti
inc
ja
mov
inc
gs
pop
sbb
loope
arpl
test
inc
loopne
add
mov
sbb
std
loope
repz
push
xchg
xor
xchg
in
movsb
aas
leave
cli
or
pop
mov
ja
sub
inc
xor
cmpsl
mov
fcoms
inc
out
jno
lock
iret
inc
and
xor
mov
cmpsb
sub
lcall
mov
stos
xor
jg
xor
sub
enter
push
sbb
dec
pop
mov
and
sub
pop
xor
test
cwtl
ss
xchg
adc
popl
shll
pop
mov
mov
mov
shll
sbb
enter
pop
fistps
cmp
cmc
call
and
jo
imul
loop
out
pusha
adc
shr
cs
sbbb
mov
or
test
push
adc
pop
icebp
and
jb
repnz
mov
inc
test
xchg
arpl
xor
or
insb
mov
push
test
xchg
loopne
call
cld
xor
negl
filds
bound
cmpsl
mov
adc
mov
sbb
pop
jg
stc
pushf
ja
mov
xor
mov
inc
in
push
test
mulb
in
xchg
sub
fnstcw
adc
xor
lret
mov
inc
out
inc
imul
dec
xchg
mov
pop
or
lret
clts
test
jno
xchg
lret
pusha
jbe
pop
insl
jb
dec
stos
jne
inc
add
and
dec
out
sub
mov
or
or
pop
add
hlt
or
out
cmp
adc
pop
fcompl
mov
mov
sbb
dec
in
ficomps
mov
mov
mov
push
out
jnp
lret
movsl
xor
movsb
lcall
cli
ds
test
insb
in
mov
push
mov
adcb
test
lret
mov
inc
shrb
and
push
mov
nop
jecxz
xor
stos
out
pop
fdivrs
mov
and
adc
fcompl
into
dec
dec
movsb
and
dec
loope
test
js
loopne
mov
aam
decl
inc
stos
je
xchg
sti
cmpsl
adcb
test
cmpsb
enter
mov
jg
push
negb
add
pop
das
mov
sub
in
rorb
rclb
sub
andb
pop
std
sbb
mov
cmpsb
xor
push
loopne
xchg
rolb
inc
bound
sbb
addr16
stc
rcrb
add
andl
shlb
in
mov
clc
pusha
jbe
xchg
in
dec
sbb
push
stos
xor
xchg
xchg
push
rcll
push
loope
iret
lahf
fmull
sub
rcll
ficompl
adc
push
out
sbb
mov
jecxz
lock
fisubrs
xor
mov
insb
xor
and
pop
mov
bound
dec
mov
mov
inc
push
xor
and
add
shl
mov
in
ds
mov
scas
aad
and
or
cmp
adc
xchg
cltd
inc
and
sub
xchg
fldl
lahf
pop
and
mov
and
imul
divb
or
mov
ljmp
inc
mov
scas
mov
cmp
cmp
sub
rclw
inc
fldt
lods
mov
bound
dec
jle
popa
and
pop
xor
or
iret
test
stc
adc
andl
sbb
xlat
testb
xchg
pop
jo
xor
cmp
sti
dec
hlt
push
leave
sbb
stos
or
pushf
scas
jb
mov
imul
jmp
mov
jb
mov
adc
jae
lock
popf
in
sbb
imul
scas
xchg
sti
xchg
and
jb
jge
mov
push
sbb
out
rep
fwait
hlt
xchg
cmc
aaa
enter
insb
daa
pusha
mov
mov
mov
pop
and
or
adc
mov
shlb
and
cwtl
popf
arpl
notb
cli
aam
in
int3
mov
xchg
inc
pop
or
sub
orb
in
dec
clc
lahf
js
test
cmpsb
faddp
pushl
pop
mov
or
inc
dec
notl
mov
inc
stos
add
insb
in
inc
adc
add
lahf
jns
push
je
inc
data16
adc
aas
push
jmp
xor
sti
xor
add
sbb
test
sbb
dec
mov
clc
push
and
cltd
fidivl
out
xlat
mov
cmp
das
repz
ret
xchg
shll
push
pop
into
cmp
xlat
clc
daa
sti
data16
mov
cmpsl
push
xchg
xchg
loopne
jb
cmp
hlt
cltd
xorb
dec
int3
pop
dec
sbb
mov
mov
push
sbb
push
jg
xchg
push
jmp
icebp
call
sbb
cmpsb
aas
movb
add
gs
sbb
push
pushl
mov
loope
adc
testb
mov
in
mov
sbb
fisubrl
adc
ds
xchg
sbb
cmp
xor
cmp
fnsave
lret
iret
cltd
out
pop
out
loopne
add
or
aas
lods
call
outsb
dec
sub
mov
add
jne
jno
divps
fwait
addr16
int3
add
fsubl
ljmp
movsb
loop
aam
outsb
aad
xchg
jnp
mov
fsubs
sub
mov
das
mov
add
popa
das
lret
outsb
sti
mov
mov
pop
sbb
pop
pop
mov
mov
mov
adc
sub
cmp
rcl
arpl
sbb
sub
mov
mov
outsl
stos
dec
stos
mov
and
jno
sbb
sub
pop
sbb
repnz
fmul
std
lods
sub
icebp
sbb
mov
jle
push
loopne
dec
movsb
dec
fmull
push
ficoml
arpl
push
and
popf
mov
repz
mov
cld
lea
mov
fiaddl
stos
jo
aam
das
out
movsl
out
push
addr16
bound
fsubr
sub
jae
test
push
test
cmp
adc
push
dec
out
ss
adc
cmc
sahf
out
sarl
notb
movsl
inc
jp
mov
arpl
mov
pop
push
mov
test
cmpsb
movsl
out
pop
test
dec
leave
frndint
jle
fld
jp
adc
int3
test
jnp
pop
aad
xor
pop
lret
cmp
sub
ja
pop
sub
push
mov
xchg
add
sub
movsl
xorb
mov
sbb
mov
sub
or
sub
mov
mov
push
adc
mov
decb
out
inc
lcall
adcl
mov
mov
sbb
outsb
push
jo
cld
mov
test
dec
js
mov
push
lock
cmp
mull
cmp
insl
call
dec
lds
fnsave
inc
jne
es
aas
sbb
inc
dec
fidivs
not
out
hlt
sbb
pop
ss
fs
adc
xor
enter
in
jbe
orb
cmp
pop
sub
lock
fsubl
ss
cmp
cli
lods
xchg
pusha
cmpl
jne
fcmovnbe
inc
xchg
iret
les
ss
inc
push
xchg
mov
inc
loop
xchg
js
fnstcw
lea
fisubrl
push
dec
into
inc
mov
test
or
add
lea
sub
testl
and
loopne
fmuls
call
imulb
inc
push
cltd
mov
gs
loope
mov
das
outsb
test
add
add
adc
push
in
push
rol
mov
cmpsb
jbe
mov
clc
lea
dec
loope
push
push
dec
hlt
repnz
jle
outsl
insb
push
and
leave
adc
push
je
frstor
fs
pop
sub
dec
xchg
mov
les
sahf
add
lds
xchg
mov
repnz
vmovapd
sub
fbstp
ret
and
fsubr
inc
das
jmp
mov
jle
stos
and
jl
test
clc
ret
aaa
push
inc
xor
xchg
xor
fstps
mov
mov
scas
push
dec
sub
shll
imul
jo
adc
gs
mov
push
call
imul
insl
test
cmp
xchg
pop
arpl
push
jno
idiv
test
dec
cmp
jnp
int
jae
or
adc
jae
lahf
popa
xor
outsb
dec
stos
cmpsb
push
add
xchg
je
jecxz
fmuls
mov
add
fistps
or
adc
pop
push
and
sbb
jmp
dec
ljmp
push
jno
scas
sub
lock
jae
fidivl
test
or
jle
or
cmp
mov
fisubrs
or
pop
pop
mov
test
aaa
insb
push
das
sub
popa
mov
cmpsl
outsb
and
xor
ss
or
add
cmp
sbb
mov
jle
popf
pop
fidivrl
sbb
dec
dec
les
pop
dec
rcll
pop
lds
mov
cmp
hlt
push
sbb
sub
adc
push
test
pop
xchg
mov
out
sub
leave
push
xchg
subl
push
fstl
je
cli
add
shlb
pop
andb
nop
sbb
cld
in
cmp
xor
jl
jae
add
nop
adc
les
mov
push
aam
add
pop
cmp
mov
pop
test
addr16
mov
xchg
mov
jge
test
jb
loopne
fiaddl
pop
ss
cwtl
xor
jns
lods
ljmp
int
sbb
outsb
mov
imul
pop
xchg
push
sbb
xchg
pop
push
leave
pop
in
shlb
xchg
das
loope
lahf
into
sarb
in
jl
cwtl
call
dec
xchg
mov
loope
push
sub
sub
xor
insl
and
push
dec
sahf
inc
cwtl
shl
dec
adc
push
cmp
arpl
sbb
fstp
jb
pop
add
icebp
xchg
inc
pop
mov
push
hlt
adc
leave
add
push
push
jmp
pop
add
sbb
shrl
negb
ficoms
adc
sub
cli
xor
adc
xchg
rclb
enter
adc
sahf
dec
out
dec
pop
push
cwtl
jnp
imul
mov
sub
and
rcl
flds
loop
iret
xchg
and
les
movsl
inc
sbb
mov
in
cmpb
and
or
push
dec
xor
add
mov
jg
xor
xchg
or
cmpsb
mov
nop
cs
sbb
aam
loopne
xor
fst
add
sti
add
lods
sub
inc
cmp
pop
cmp
in
xor
fwait
pop
adc
sti
sbb
out
fs
jmp
inc
push
cmp
jb
cli
and
arpl
pusha
sbb
push
xchg
add
insb
jg
pop
pop
and
pop
sub
lock
outsb
adc
es
ljmp
into
sti
fsubs
fimuls
pop
xchg
mov
movsl
adc
mov
xchg
out
sbb
movsb
jo
xchg
sbb
mov
add
pop
shlb
lods
push
add
cmp
outsb
push
dec
xchg
sbb
movl
xchg
adc
xchg
or
xor
jmp
fadds
or
mov
rcl
rorl
push
imul
jno,pn
mov
pop
push
ljmp
cmp
rorb
icebp
orb
lock
call
cltd
mov
cmpsl
rclb
dec
scas
sbb
dec
test
or
jno
into
add
mov
les
and
pop
push
and
imul
fldt
in
dec
dec
jl
test
mov
mov
ror
xchg
lds
xchg
addr16
cmp
movsb
test
cli
sarl
sbb
das
mov
andb
cwtl
pushf
imul
subl
idivl
add
dec
scas
jg
dec
xchg
pop
decl
mov
test
fwait
int
pop
fidivrs
or
cmpsl
inc
in
pop
mov
sub
je
int3
fisubrs
mov
jnp
and
sti
dec
pushf
stc
cmp
pop
push
test
repz
cltd
cltd
and
repnz
dec
xchg
jae
xchg
lods
mov
mov
mov
push
fidivrl
xor
lods
pop
imul
adcl
popf
sub
cmp
sbb
out
mov
addr16
push
mov
lock
adcl
push
push
loope
ret
push
add
mov
push
and
push
jp
add
pop
push
jg
xchg
dec
adc
aaa
jb
inc
cmp
movsl
xor
jl
popl
shlb
minps
movsl
jle
xlat
inc
out
das
mov
fmuls
push
xlat
adc
data16
or
insl
scas
inc
cmp
inc
rcl
and
out
cld
xor
rcll
push
or
sbb
sub
addl
les
lahf
push
xor
adc
sub
jno
ret
in
and
icebp
scas
das
aad
dec
pop
dec
or
add
mov
inc
or
dec
lods
sarb
mov
adc
dec
cmpl
loopne
fcoms
pop
adc
xchg
je
and
add
xor
push
aas
or
popa
and
mov
inc
xor
add
lret
sub
and
jge
mov
aam
jge
xchg
jge
mov
scas
pop
mov
lods
dec
mov
push
or
inc
lock
sbb
inc
jmp
add
cli
addr16
dec
cmp
inc
stos
push
cs
in
cmpsb
test
mov
and
inc
mov
popf
push
pop
stc
dec
pop
push
jno
add
in
clc
ret
aad
clc
sbb
dec
sahf
rcrl
in
aam
addr16
daa
fsts
addr16
xor
jne
inc
xor
jno
fdivs
cpuid
pop
push
iret
fcompl
inc
ja
sbbl
sub
sub
sahf
sar
xchg
out
xchg
nop
inc
push
scas
fwait
std
inc
movsb
out
push
outsl
in
push
imul
and
scas
lods
jp
ljmp
nop
mov
ljmp
xor
push
outsl
jecxz,pn
cmp
scas
iret
jge
mov
mov
jo
add
push
das
mov
or
fwait
rorl
in
jnp
ficomps
add
mov
in
insl
ret
jns
cmp
scas
sub
ljmp
dec
sbb
mov
mov
pop
mov
or
and
cmc
dec
clc
add
stos
push
aad
and
mov
icebp
test
test
or
vmovdqu
pop
cmp
xor
call
sbb
ljmp
inc
and
mov
dec
pop
ss
and
mov
cwtl
test
sbb
xor
xor
cltd
sbb
xchg
int
push
loopne
xchg
jb
xor
inc
jp
fildl
lock
pusha
cmp
xchg
push
cmp
mov
push
cwtl
sbb
aam
imul
dec
mov
cltd
and
lods
inc
sbb
loope
mov
shlb
aas
fdiv
lods
or
subl
lcall
mov
jo
addr16
push
in
fsubl
fstps
in
jg
xor
divb
call
fdiv
cmp
cmp
aaa
xor
jnp
or
jns
in
fmul
popa
adc
xchg
sbbl
imul
out
gs
arpl
xlat
add
lcall
fcoml
lret
dec
mov
ret
lcall
cwtl
push
icebp
pusha
jecxz
in
pop
fcmovne
movl
or
mov
ret
cmc
inc
popa
int3
and
mov
jmp
rcrl
and
jo
dec
insl
pop
dec
fcmovnbe
rcr
mov
adc
push
cli
aas
test
pop
stc
pop
lods
cmpsl
xor
sub
inc
jg
testb
push
jo
inc
jl
mov
inc
out
adc
inc
adc
adc
arpl
out
dec
push
das
lods
xchg
sub
pop
leave
je
xor
iret
add
in
push
and
xlat
and
js
mov
jmp
inc
mov
loop
pop
dec
lret
sbb
insb
dec
adc
add
mov
mulb
push
inc
sahf
jge
jns
xor
stos
test
sbb
sbb
repnz
cmpsl
repz
xor
jns,pn
fs
fmuls
cli
test
dec
pop
les
sti
inc
clc
lret
gs
stos
xchg
enter
cmc
and
mov
aad
xor
xchg
jecxz
jns
jnp
and
lcall
iretw
stos
aaa
bound
add
sbb
mov
out
scas
loop
jns
call
pop
cltd
xchg
ds
scas
aam
test
cmp
aaa
dec
cmpsb
cmp
lcall
movsb
in
out
jns
data16
out
mov
stc
dec
call
repnz
mov
aad
lock
das
mov
sahf
dec
push
mov
sbb
std
pop
jecxz
ret
add
push
xor
jb
jns
push
add
data16
jne
mul
add
mov
mov
shll
mov
ret
addb
mov
ja
pushf
int3
push
inc
or
shrb
jbe
mov
rolb
add
mov
adc
adc
xchg
enter
pop
pop
mov
loope
cmp
cmp
idivb
mov
xchg
int
js
xchg
mov
mov
xor
push
push
pop
hlt
es
jecxz
out
xchg
mov
jge
push
pop
xchg
mov
aad
xor
insl
psubb
ficompl
hlt
aam
pop
lods
fldenv
daa
mov
sbb
add
push
leave
and
mov
ret
sbb
add
dec
repz
loop
fbld
jg
cmp
mov
xchg
insl
or
xchg
sbb
sub
sti
cwtl
pop
les
sbb
call
push
bound
adc
dec
adc
cltd
fucomp
cmp
pop
in
jecxz
das
in
jl
mov
rclb
push
pop
aaa
cli
or
pop
xor
jmp
cmp
inc
adc
dec
push
cmp
jp
dec
out
aam
mov
daa
shll
js
or
cmp
cmp
push
imul
rcrb
cmpsl
jle
lcall
mov
mov
push
aaa
sahf
out
ss
xlat
aad
shl
or
mov
push
test
and
fs
jbe,pn
add
xchg
sbb
gs
xchg
lods
pop
lods
mov
sbb
add
sub
int3
xlat
aas
in
mov
repz
out
test
aas
xor
adc
pop
or
pop
int3
pop
adc
push
stos
ljmp
cmp
in
insl
jno
jl
mov
and
hlt
mov
pop
jp
inc
cmp
pop
mov
aaa
fsubl
pop
push
xchg
fldln2
cld
xor
les
xor
out
into
xor
movsl
xchg
testl
add
jle
fs
and
inc
xor
and
ja
push
sbb
and
mov
into
mov
arpl
xor
mov
in
push
pop
lock
gs
and
ljmp
lods
iret
mov
pop
insl
loop
fisttpll
pop
lcall
loopne
add
dec
pop
sbb
cs
cmp
xor
inc
sti
jo
pop
mov
mov
jae
mov
push
jns
xor
call
xor
mov
popf
mov
in
xchg
in
inc
fistl
cwtl
ret
iret
lret
stos
das
in
iret
push
inc
push
or
lock
jmp
fstpt
nop
int
jmp
out
push
jg
sub
incl
push
out
loopne
aad
mov
jle
xchg
stos
pop
and
lods
cmpsl
fnstsw
outsl
xor
jae
fldenv
lods
out
xchg
daa
pop
insl
pop
xchg
hlt
popa
fs
mov
cmp
imul
enter
gs
jnp
stc
sub
call
add
and
and
in
and
dec
mov
and
lcall
insl
adc
push
and
repz
stc
jecxz
lcall
dec
int
adc
sbb
sbb
mov
aas
lods
icebp
push
xor
incb
cmpsl
xchg
pop
jne
inc
dec
inc
mov
cli
sbb
adc
mov
jg
test
dec
pop
inc
out
bound
adc
dec
testl
loope
sub
push
sbb
and
xor
pop
in
cmp
mov
rorb
inc
fldcw
ljmp
lcall
mov
mov
ja
adc
fstpt
sub
jae
sbbb
pop
mov
aas
jne
pop
push
sbb
lds
rorl
xor
sbb
xor
and
sbb
add
mov
scas
popf
mov
outsl
xor
mov
pop
fnstsw
in
clc
ret
pop
movsb
call
stos
xor
mov
in
pop
in
std
ja
lock
sbb
mov
popa
jmp
insb
cmp
push
mov
sub
pushw
pushf
rol
out
cmp
imul
sub
mov
bswap
cmp
addr16
jae
jnp
lret
push
ret
movsl
fwait
dec
adc
pop
sbb
push
out
and
imul
popa
shl
ja
mov
sub
mov
or
add
rcrb
cli
dec
inc
rcrb
lods
mov
out
cmp
xlat
add
and
xlat
daa
sub
jnp
mov
push
jmp
aaa
mov
add
adc
or
data16
jb
ja
iret
jae
sar
sub
push
or
mov
in
lret
fidivrl
add
push
add
shl
lods
pop
push
stos
out
lds
pusha
adc
loop
xlat
sub
mov
dec
adc
out
pop
and
ljmp
ds
or
add
aam
mov
insl
dec
xchg
enter
xchg
out
ret
pop
call
jne
cld
sub
hlt
and
lret
jmp
arpl
test
add
adc
adc
sti
es
or
sti
ss
out
pop
in
or
ret
xor
push
rclb
mov
enter
cmp
and
push
xlat
push
adc
nop
sti
push
xor
mov
jbe
cs
call
add
loop
lahf
fwait
cmc
int3
sub
sbb
add
bound
aad
repz
jb
push
fsubs
pusha
dec
jne
lods
cltd
add
or
gs
jo
popf
loope
in
and
pusha
sub
dec
testb
jle
adc
push
decl
int3
movsl
shr
jb
jno
push
stc
gs
push
loopne
cmpl
inc
fs
sbb
jbe
aaa
je
add
mov
fcmovb
cld
fistpl
fists
dec
xor
add
imul
ss
push
or
mov
push
in
ret
movsl
js
fnsave
adc
pushl
mov
arpl
xor
fs
outsl
cs
cmpsl
sbb
add
popa
pop
mov
dec
sbb
or
test
sahf
jge
cmp
les
lahf
adc
add
int3
mov
pop
sahf
pusha
dec
inc
jge
fdivrl
in
jle
aaa
lock
push
xchg
aad
pop
push
dec
cmp
aam
mov
dec
or
pop
cmc
mov
in
cltd
cmp
call
jp
ret
or
add
xchg
cmp
cmp
ss
jne
aas
mov
sarl
push
loopne
and
and
or
jo
test
xor
call
icebp
adc
adc
adc
inc
pop
scas
inc
test
ret
sbb
mov
mov
pop
pop
jns
add
mov
sar
pop
xchg
imulb
daa
jge
pop
cmpsl
lods
in
dec
inc
aam
lods
jecxz
add
add
push
hlt
xchg
lods
adc
jecxz
movb
cltd
loop
adc
mov
outsb
mov
jl
loope
dec
leave
mov
sub
sbb
lret
movsb
shll
bnd
cmp
push
mov
pop
movsb
movsl
add
mov
rcrl
cmp
es
nop
fnstsw
enter
xor
xchg
sub
adc
mov
or
test
mov
push
in
fdivrs
or
or
movsl
sarl
sbb
sbb
je
imul
mov
lea
stc
cmpsl
mov
cmp
add
cmp
mov
adc
insl
clc
into
imul
and
and
mov
std
push
lods
ret
fistpl
lods
mov
jne
in
cmp
add
pop
jecxz
in
popf
jge
ss
repnz
xchg
nop
jge
push
or
in
std
clc
dec
in
stos
cmpsb
pop
adc
scas
loop
push
mov
ljmp
push
or
pop
mov
pop
sub
sarb
fsubs
loop
mov
cwtl
subb
lahf
and
sub
cwtl
arpl
cmp
dec
jecxz
fucomip
mov
xor
lret
push
incl
push
ret
inc
pushf
in
inc
push
cmp
clc
inc
lcall
je
xor
out
jl
das
mov
pop
push
lret
in
pop
pop
or
lret
into
out
out
outsl
pop
mov
sub
arpl
insb
jns
aaa
mov
ljmp
jns
adc
push
loopne
les
rclb
jg
int
imulb
andb
add
xor
mov
lods
jbe
aaa
dec
cmp
jge
xchg
rcrl
fisubs
andb
movsl
adc
cs
inc
adc
fldcw
cmp
aam
push
push
xor
dec
jns
rcrb
inc
jecxz
iret
mov
clc
fdivl
jno
insl
xor
out
cmp
ficomps
jo
adc
mov
fsubs
andl
jne
test
roll
mov
fistps
sub
es
push
mov
cli
mov
ljmp
and
and
mov
fcomps
daa
mov
out
lcall
movsl
or
in
movsl
xor
rorb
pop
jle
jo
pushw
cmp
xor
out
pop
push
int3
cmp
clc
xchg
ficoms
pop
or
jo
dec
xchg
fdivl
cld
sbb
and
fs
mov
imul
jno
les
jecxz
jge
into
xchg
nop
dec
sbb
inc
dec
cmpsb
aad
hlt
js
pusha
inc
push
ja
shrb
cmp
icebp
cmp
xchg
cmp
cmp
dec
and
sar
pop
pop
shll
testb
jo
inc
add
and
popa
int
fucomip
sti
adc
pushf
testb
cmp
inc
loop
das
or
push
out
stos
popa
lods
sub
cmp
dec
or
dec
sbb
mov
adc
mov
mov
outsl
pop
inc
mov
stos
testl
and
aad
mov
dec
pop
xchg
jns
nop
jmp
sahf
xor
xchg
mov
push
cli
dec
add
ja
sub
push
push
vcvtps2dq
xor
mov
mov
bound
mov
add
add
loop
push
fs
dec
lods
gs
mov
dec
in
push
mov
push
mov
mov
into
push
sbb
stc
xchg
aad
mov
dec
outsl
lcall
or
inc
bound
jne
inc
stos
loopne
pop
popa
lret
jno
inc
cmp
fisubrl
mov
idivl
jno
fdivrl
out
mov
rcrl
pop
xchg
shlb
lods
dec
lahf
clc
icebp
les
push
jne
pop
subb
arpl
scas
mov
jo
add
mov
in
popf
scas
xchg
aaa
push
sub
daa
ds
xor
jmp
xchg
popa
pusha
mov
push
xorb
mov
inc
rorb
jbe
int3
mov
fiaddl
sub
mov
jb
lret
shrl
xor
jbe
sbb
lods
lds
sub
andl
add
cmpl
cmpsl
lahf
push
in
and
icebp
nop
and
stos
pop
adc
ds
in
lahf
movsb
sub
push
mov
mov
repnz
inc
inc
jl
push
xor
sbb
imul
xor
pop
dec
jb
lods
adc
leave
int
sbb
inc
jl
or
sbb
push
adc
xlat
adc
pop
push
lods
cmpsb
add
ss
lret
mov
mov
in
mov
or
sbb
int
mov
sub
jecxz
fistl
out
jmp
sub
mov
xor
leave
dec
sub
inc
in
push
pop
out
push
fs
mov
cmpsb
push
pop
push
xor
ror
mov
dec
hlt
outsb
ja
stos
xchg
cmp
enter
lahf
jle
cmc
sub
addr16
sbb
out
mov
dec
subb
nop
xchg
and
fcoml
fdivrp
cltd
xchg
push
and
jns
dec
xlat
cwtl
pop
pop
add
rcll
inc
gs
ret
ja
stc
xchg
in
pop
aaa
ret
test
int3
clc
ret
aas
lahf
aas
out
or
arpl
push
push
xor
mov
es
adc
insl
add
cmc
out
call
ret
pop
inc
push
jno
shll
and
and
xor
push
pusha
or
out
xor
aaa
lods
or
lahf
fldl
outsl
mov
ficoml
cmc
inc
mov
rorb
lret
pushf
xchg
push
pushf
cmp
outsl
pusha
push
xchg
hlt
add
add
mov
mov
push
ljmp
ret
test
mov
arpl
xorl
es
movsb
inc
fcom
add
cltd
pop
repnz
insb
ret
addr16
lods
addr16
cmp
ja
xchg
lret
es
push
iret
cmp
sbb
fbstp
jns
pop
cvtpi2ps
sub
dec
mov
push
repz
fldl
push
insl
mov
push
push
dec
out
jae
cmp
dec
shr
aaa
js
add
cmp
xlat
add
arpl
iret
inc
mov
pop
aaa
jo
jp
adc
popf
dec
dec
js
lcall
or
in
repz
repz
int3
xchg
push
inc
or
pushf
outsl
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
adc
pop
add
add
add
add
add
orb
add
clc
add
orb
add
dec
add
cmpb
add
add
cwtl
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
fadds
add
add
add
add
add
add
add
add
add
or
add
add
add
lock
add
add
add
add
add
add
add
or
add
add
add
add
loopne
add
in
add
add
add
add
add
or
add
add
add
add
call
add
add
add
add
add
or
add
add
add
cli
add
insb
add
add
add
add
add
add
add
or
add
add
mov
add
add
add
add
add
add
add
or
add
cli
add
push
add
add
add
add
add
or
add
cld
add
ljmp
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
mov
add
add
add
add
add
add
add
or
add
add
call
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
push
add
pop
push
add
add
add
add
jbe
add
xchg
add
test
add
shlb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
pop
imul
rcll
add
add
add
add
push
add
or
add
and
xor
add
add
mov
add
add
add
in
push
add
mov
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
mov
call
pusha
jp
std
xor
pop
aas
dec
dec
push
inc
inc
outsl
insl
jo
arpl
add
cwtl
jno
xchg
jns
dec
xchg
lcall
movsb
lods
aad
test
rol
popa
enter
bound
jbe
xchg
cs
pop
push
ja
aad
xchg
test
sub
dec
enter
fbstp
js
xchg
adc
mov
xchg
cmpsb
pop
jns
jl
in
jl
repz
mov
sbb
fwait
lea
xchg
xchg
loope
arpl
jl
pushf
cmpsl
cli
xchg
mov
lret
push
push
ja
fwait
imul
xor
jle
cmp
lahf
push
scas
popf
add
pop
int
pop
imulb
lds
push
xchg
jno
xchg
pop
lods
sarb
xchg
sbb
xchg
andb
outsl
aad
call
punpcklbw
jle
push
aas
popa
test
out
xchg
popa
test
les
repz
mov
cmpsl
add
in
lcall
cwtl
leave
mov
inc
jle
push
js
push
lcall
data16
pushf
int3
sbb
sahf
dec
les
cmpsb
packsswb
scas
fs
test
mov
cmc
jmp
xchg
xchg
in
adc
inc
mov
testl
int
in
mov
cwtl
arpl
cltd
call
mov
adc
lahf
enter
mov
mov
xlat
out
mov
sahf
sbb
in
adc
call
xchg
jnp
icebp
adc
ljmp
repnz
sbbl
mov
pusha
jnp
aaa
lcall
in
adc
xchg
dec
sub
in
cltd
in
cmc
or
or
insl
in
push
adcb
inc
push
jp
or
mov
cmp
inc
sbbl
cmp
lcall
cli
je
fimuls
xchg
or
in
xchg
fadds
jnp
xchg
push
aad
ret
and
inc
jns
rcll
repnz
sub
mov
inc
sbb
adc
test
jmp
add
inc
xor
ss
push
sbb
cmpsb
jb
mov
sbb
adc
aam
mov
mov
pop
jne
sbb
loope
or
push
cli
add
sbbl
xchg
stc
std
mov
stos
notl
int
jo
stc
xorl
mov
dec
faddl
mov
jecxz
sub
dec
aam
xchg
dec
dec
in
jbe
sti
outsl
out
rcll
jno
jg
fwait
lea
jle
test
sbb
adc
lds
addl
aam
mov
jae
andb
outsl
mov
adc
stos
sbb
inc
repnz
adc
push
sti
xchg
mov
jnp
or
clc
sbb
lea
mov
cli
int
or
pusha
xchg
sbb
test
inc
rcl
das
sbb
and
mov
cmpsb
jae
int3
outsl
sbb
stos
add
add
popa
or
mov
cmc
notl
xchg
dec
jnp
loop
call
pusha
xchg
sbb
scas
sbb
and
aaa
mov
dec
addb
add
xchg
and
mov
nop
or
jp
rcr
push
xchg
dec
lahf
sbb
inc
pusha
pop
scas
inc
imul
pop
xchg
mov
in
lahf
inc
outsb
sbb
xchg
shl
pop
sub
adc
adcb
xchg
out
stos
xchg
inc
js
dec
test
mov
xchg
in
sbb
lcall
add
mov
jb
sub
adc
sub
outsl
jnp
adcb
rolb
xchg
jno
push
jae
cltd
sbb
push
ret
or
sbb
in
push
addr16
fadds
pop
xchg
pop
sub
sbbb
push
push
add
xor
cmpsl
in
adc
outsl
push
aad
popl
sub
lret
pop
push
mov
push
cwtl
cmp
cli
cltd
leave
addr16
lods
xchg
iret
in
loopne
fildl
xchg
sbb
loopnew
in
push
dec
test
hlt
lcall
nop
dec
xchg
sar
outsl
rol
nop
jno
xchg
sbb
jge
push
mov
adc
mov
push
insb
js
dec
adc
xor
popf
rcl
fistps
rcll
std
cwtl
mov
lcall
clc
and
xorb
xchg
cld
add
mov
loopne
mov
xchg
mov
mov
loopne
cmpsl
lcall
mov
jno
mov
cmc
push
lds
mov
and
xchg
iret
ljmp
cs
add
push
mov
sub
xor
xchg
jg
js
cwtl
jbe
iret
xchg
mov
int
jge
sbbl
xchg
insb
adc
mov
dec
push
insb
out
or
mov
xchg
add
jmp
xchg
in
jecxz
aam
push
sahf
sub
jmp
push
push
xor
enter
mov
xchg
add
sarl
dec
add
mov
sbb
or
add
adc
fldenv
repnz
lea
add
push
mov
rclb
movsb
adc
sbb
stos
xlat
xchg
pushf
in
jmp
add
sbb
in
add
push
scas
adc
cltd
ret
jo
out
rorl
sbb
rcr
lea
xchg
fcompl
ret
jl
clc
push
popf
mov
adcb
fdivs
mov
pushf
cltd
cmpsl
dec
xorl
scas
xchg
xchg
addr16
xchg
jns
push
icebp
lcall
mov
shlb
js
inc
loope
pop
mov
lahf
fdivl
stos
jge
pushf
xchg
xchg
push
int
iret
lret
push
push
fbstp
mov
lret
adc
test
xchg
pop
add
add
or
out
push
inc
je
and
jl
in
ret
mov
add
adc
jnp
and
push
cmpsl
aas
pop
mov
sbb
or
adc
iret
lahf
stos
push
in
xor
test
ja
xchg
arpl
mov
push
dec
pop
repnz
scas
ds
inc
sbbb
adc
outsb
pop
fcomi
cmp
insl
xchg
insl
xchg
mov
jl
push
lahf
or
imul
js
stos
outsl
je
xchg
and
add
xchg
fldcw
inc
jnp
out
and
mov
rcrb
xchg
xchg
push
adc
loopne
movb
cmp
insb
mov
call
scas
add
enter
lcall
jnp
int
call
cmpb
xchg
xchg
in
sub
mov
cld
mov
test
pop
in
movsb
jno
loopne
inc
xchg
xchg
lds
adc
in
outsb
pop
sbb
stos
push
jl
add
adcb
xor
test
rcrl
mov
test
movsl
stos
mov
mov
xchg
adc
adc
mov
jl
mulb
add
mov
aaa
add
leave
push
mov
and
jno
jne
roll
mov
jne
lcall
in
mov
jecxz
mov
mov
loope
fwait
imul
outsl
jmp
roll
cmp
in
cmp
pop
cmpb
inc
cmp
clc
mov
ss
xchg
in
cli
xor
xchg
or
xchg
xchg
sahf
pusha
rol
sbb
aad
rcrb
sub
das
in
jl
mov
fmuls
and
into
or
xchg
and
sub
fcomps
cwtl
gs
cmp
das
mov
xchg
jl
inc
adc
out
roll
pop
jge
xchg
cltd
jnp
lret
add
stos
in
mov
xorl
xchg
mov
inc
mov
dec
or
fstps
into
lods
je
je
lret
cwtl
fnstcw
add
xchg
jp
repnz
adc
add
test
xor
cwtl
fs
rorl
out
adcb
rol
ret
js
movsb
out
or
push
jnp
pop
jecxz
std
jecxz
repnz
je
mov
mov
sti
and
inc
cmpb
data16
push
sbb
fstpt
ficoms
jp
inc
sbb
push
leave
mov
fimuls
fiadds
sub
dec
lahf
lds
inc
pop
popfw
lds
cltd
sbb
sub
cmp
cltd
mov
mov
xchg
jnp
dec
mov
xchg
roll
imul
mov
shl
or
popl
movsl
fstl
sub
jnp
cmp
mov
cmp
dec
arpl
mov
inc
js
adcb
stos
fstpl
stos
or
fldcw
pop
mov
mov
adc
lods
fsubrs
fcoms
mov
push
mov
pop
mov
jno
rcrl
lock
imul
xchg
in
call
test
mov
adc
ljmp
xor
mov
out
shl
mov
stc
repz
in
lcall
lods
sub
subb
dec
mov
dec
mov
test
cld
pop
mov
repnz
in
dec
icebp
cmpsb
imul
hlt
push
ret
aam
xlat
cltd
movsl
or
hlt
mov
jns
into
loopne
fld
pop
stos
repz
cld
fsub
shl
mov
popa
je
mull
mov
call
pop
push
call
sti
test
dec
cld
scas
aad
test
in
xor
fcoml
shl
push
clc
fdiv
hlt
popa
imul
loopne
push
repz
imul
cld
cmpsb
mov
lahf
stc
loop
fs
rcrl
mov
xor
dec
out
or
adc
push
mov
loope
or
shlb
inc
loope
mov
xchg
dec
and
mov
in
mov
insb
and
mov
js
nop
nop
nop
jecxz
mov
nop
nop
jecxz
mov
nop
nop
jecxz
and
fists
jecxz
in
cmp
js
nop
nop
nop
mov
rclb
cmp
js
fldl
fcoms
cwtl
cmp
mov
nop
in
nop
nop
jecxz
adc
xchg
adc
out
rcl
add
sbb
pusha
arpl
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
or
add
add
mov
add
adc
push
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
add
inc
xor
add
pusha
add
or
add
pop
xor
add
pushfw
push
call
sbb
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
js
sub
lea
nop
mov
lret
test
cmpsw
push
std
bnd
inc
jmp
sar
lahf
in
mov
mov
test
xor
imul
and
jmp
xchg
sahf
jg
xchg
stos
jmp
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
add
add
sub
jmp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
adc
jmp
push
das
cmp
sbb
inc
out
aam
jb
out
ret
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
xchg
div
fs
das
adcb
test
or
add
addl
jle
sub
mov
sbb
jmp
xlat
les
xor
cmp
dec
jmp
loope
hlt
sbb
fidivrs
sub
js
mov
and
inc
push
nop
mov
lret
test
jmp
cmpsw
jmp
push
std
repnz
sar
lahf
in
mov
mov
test
jmp
mov
sbb
cli
stos
or
push
and
fstps
fwait
cmp
jne
pushfw
push
call
in
add
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
dec
outsl
jl
pop
mov
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
addr16
mov
cmpb
or
add
aad
mov
add
add
add
add
decl
call
mov
add
add
add
aad
popfw
jmp
jmp
cwtl
icebp
push
inc
jmp
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
jmp
movsb
or
push
das
cmp
sbb
inc
mov
jmp
inc
jns
pop
insb
xor
aaa
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xlat
jmp
adcb
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
push
call
test
mov
add
add
icebp
mov
add
add
add
add
decl
lcall
mov
add
add
add
rcrl
popf
jmp
jmp
loope
cmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
bnd
jmp
inc
sar
lahf
in
mov
mov
test
xor
jmp
imul
stos
or
push
and
fstps
fwait
cmp
jmp
outsl
jmp
jl
pop
mov
es
mov
cmpb
jne
jnp
jmp
icebp
push
inc
sub
scas
dec
fsub
mov
jmp
jmp
inc
je
adc
loopne
pop
aas
or
push
clc
shr
in
ss
movsb
or
adc
push
das
cmp
sbb
inc
out
icebp
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
mov
pushfw
push
call
xor
shlb
mov
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
imul
xor
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
loope
sbb
jmp
xlat
les
cs
pop
gs
jmp
jmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
jmp
jmp
mov
lret
test
cmpsw
push
std
jmp
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
mov
pushfw
push
call
fstps
add
add
shl
cmpl
pop
add
add
add
add
decl
lcall
mov
add
add
add
cmc
pop
popfw
jmp
jmp
ja
dec
jmp
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
fldpi
sub
imul
xchg
popf
jmp
adc
loopne
pop
aas
or
push
clc
shll
aaa
jmp
movsb
or
push
das
cmp
sbb
inc
out
in
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
add
jmp
pop
xor
jmp
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
shr
xor
sbb
xlat
les
cs
pop
gs
dec
loope
jmp
xchg
arpl
fidivrs
js
mov
and
inc
push
nop
mov
pushf
push
call
lret
test
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
inc
jmp
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
rcll
jbe
in
es
add
push
dec
dec
outsl
jl
jmp
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
repz
push
call
dec
fsub
mov
add
dec
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
xchg
mov
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
popf
adc
loopne
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
clc
jmp
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
fsubr
and
outsb
setl
jmp
inc
pop
xor
shlb
int3
jmp
adc
div
fs
xchg
ror
into
out
cld
test
jmp
or
add
addl
jle
sub
mov
sbb
xlat
les
pushf
push
call
cs
pop
gs
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
dec
loope
hlt
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
arpl
fidivrs
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
mov
and
inc
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
mov
add
add
addr16
add
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
shll
std
repnz
jmp
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
fstps
jmp
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
je
pushfw
push
call
adc
mov
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
pop
lods
jne
or
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
jmp
shll
aaa
movsb
or
push
das
cmp
sbb
inc
add
pushfw
push
call
aam
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
cmp
xchg
pop
jmp
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
jmp
ror
into
jmp
out
cld
test
or
add
sub
add
jle
sub
mov
jmp
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
jmp
sbb
fidivrs
js
mov
jmp
jmp
scas
mov
shll
cs
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
jmp
xchg
sahf
jg
xchg
jmp
stos
fwait
jmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
icebp
push
inc
sub
scas
dec
cmp
jmp
imul
xchg
cmp
jecxz
cltd
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jmp
jns
pop
insb
xor
xchg
pop
add
and
pop
jmp
sub
pop
jmp
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
xlat
fildll
push
xlat
les
cs
pop
gs
pushfw
push
call
dec
loope
hlt
sbb
add
add
mov
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
pusha
sbb
mov
js
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
fsubs
jmp
push
and
fstps
fwait
cmp
icebp
adc
in
sub
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
jmp
push
jmp
inc
sub
scas
dec
fsub
jmp
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
jmp
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
pushf
movsl
jmp
jp
mov
inc
pop
xor
shlb
jmp
jmp
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
fistpll
jle
sub
mov
sbb
sbb
xlat
les
jmp
xor
cmp
dec
loope
hlt
sbb
pusha
sbb
mov
js
mov
and
inc
push
nop
mov
frstor
push
call
test
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
push
std
repnz
sar
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
in
mov
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
xor
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
and
movb
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jne
jnp
icebp
jmp
push
inc
sub
mov
scas
dec
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
jmp
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
add
pushfw
push
call
lret
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
pop
add
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
jo
outsb
setl
add
add
mov
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
pop
shlb
push
dec
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
shr
xor
xlat
les
cs
pop
gs
jmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
jmp
nop
mov
inc
lcall
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
and
push
and
fstps
fwait
jmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
in
cmpb
jnp
icebp
push
inc
sub
scas
dec
mov
jmp
loopne
cmp
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
pop
mov
pop
jmp
add
and
pushf
jmp
movsl
jp
sub
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
jmp
into
out
jmp
cld
test
or
add
jmp
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
pushf
push
call
fidivrs
js
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
lret
test
jmp
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
xor
and
sahf
jg
xchg
stos
fwait
jmp
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
call
jmp
sub
inc
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
jmp
aam
jb
inc
jns
pop
insb
xor
pop
mov
pop
add
and
jmp
outsb
setl
inc
pop
xor
shlb
int3
adc
div
fs
xchg
jmp
ror
into
out
cld
test
or
add
cmpl
pushf
push
call
jle
sub
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
sbb
jmp
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
jmp
push
nop
mov
lret
test
cmpsw
push
std
cmp
jmp
dec
mov
push
xchg
test
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
es
jmp
pop
lods
jne
jnp
jmp
icebp
push
inc
sub
scas
dec
jmp
fsub
mov
popa
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
jmp
or
push
das
cmp
sbb
inc
out
aam
jb
cmp
jmp
xor
pop
mov
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
jmp
xchg
ror
into
jmp
out
cld
test
or
add
cmp
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
add
add
push
call
fidivrs
add
add
mov
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
mov
jmp
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
shll
mov
push
and
fstps
fwait
cmp
jbe
in
jmp
add
jmp
push
dec
dec
outsl
jl
pop
mov
es
addr16
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
popa
pushfw
push
call
adc
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
aas
or
push
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
ss
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
lds
dec
sub
daa
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
outsb
setl
inc
pop
xor
icebp
pop
shr
xor
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
fnsave
sub
add
jle
sub
mov
sbb
jmp
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
jmp
scas
jmp
mov
shll
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
jmp
jmp
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jmp
jl
pop
mov
cs
mov
jmp
pop
lods
jne
jmp
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
jmp
pop
aas
or
push
clc
shll
aaa
movsb
or
xor
sub
daa
aam
jmp
jb
inc
jns
clc
mov
cmp
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
push
call
dec
adc
mov
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
out
cld
test
or
xor
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
jmp
jmp
loope
hlt
sbb
fidivrs
ljmp
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
mov
jne
pushfw
push
call
xor
xchg
test
xor
mov
add
add
add
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
jmp
or
push
and
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
jmp
mov
cmpb
jnp
icebp
push
subl
pushfw
push
call
repz
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
scas
dec
fsub
mov
push
add
add
mov
add
add
add
add
decl
call
mov
add
add
add
jmp
jmp
cltd
jmp
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
jmp
pop
add
and
and
pushf
movsl
jp
jmp
mov
jmp
inc
pop
xor
shlb
int3
adc
div
fs
int
adcb
test
or
add
addl
jle
sub
in
mov
sbb
xlat
les
cs
pop
gs
dec
loope
inc
push
pushl
push
nop
mov
inc
lcall
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
movb
and
jmp
fstps
xchg
stos
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
fstps
push
inc
sub
scas
dec
fsub
jmp
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
inc
or
add
fs
out
aam
jb
inc
jns
pop
insb
xor
xchg
jmp
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
in
int3
adc
mov
int
xchg
ror
into
out
cld
test
out
fimull
call
cmp
jle
sub
mov
sbb
xlat
movl
jmp
dec
loope
hlt
sbb
fsubrp
xor
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
sar
lahf
in
jmp
mov
mov
test
and
jmp
out
sbb
cli
jmp
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
in
jmp
push
dec
dec
outsl
jl
pop
mov
es
jmp
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fadd
inc
adc
add
shr
loopne
pop
jmp
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
jmp
pop
jmp
add
and
pushf
movsl
jp
mov
inc
pop
xor
shr
jmp
jmp
dec
adc
div
fs
xchg
ror
into
out
jmp
cld
test
or
add
sub
addl
jle
sub
mov
sbb
jmp
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
push
mov
jmp
push
nop
mov
inc
lcall
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
mov
and
push
and
fstps
fwait
cmp
jmp
jbe
in
add
push
dec
jmp
dec
outsl
jl
pop
mov
es
icebp
mov
sub
or
icebp
push
inc
sub
jmp
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
ret
jmp
or
adc
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
jmp
and
pushf
movsl
jp
mov
inc
pop
xor
mov
jmp
dec
adc
mov
int
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
jmp
jmp
lods
loop
xor
cmp
dec
loope
out
push
hlt
sbb
fidivrs
js
inc
or
sub
mov
test
cmpsw
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
mov
jmp
push
and
fstps
fwait
cmp
jmp
jbe
in
add
sub
outsl
jl
pop
mov
es
mov
sub
mov
or
icebp
push
inc
sub
scas
dec
fsub
mov
inc
jmp
pushf
push
call
je
adc
loopne
pop
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
push
push
clc
rcrl
mov
add
add
iret
pop
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
movsb
or
push
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
lds
dec
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
out
aam
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
inc
jns
pop
insb
xor
mov
add
add
xorb
add
add
add
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
xchg
pop
add
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
sub
pop
shlb
push
dec
adc
div
fs
xchg
ror
into
out
cld
test
jmp
or
jmp
add
addl
jle
sub
mov
sbb
xlat
jmp
les
cs
pop
gs
jmp
dec
loope
hlt
sbb
fidivrs
ljmp
mov
lea
nop
mov
lret
test
cmpsw
push
std
repnz
sar
in
lahf
in
mov
mov
test
xor
imul
ficoms
sub
mov
push
and
fstps
cs
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
jmp
cmpb
jnp
icebp
push
inc
sub
xorl
jmp
imul
jmp
xchg
popf
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
jmp
xor
sub
xchg
pop
add
and
jmp
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
add
jmp
sti
jmp
sbb
xlat
les
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
jmp
js
mov
and
jmp
inc
push
nop
mov
inc
lcall
cmpsl
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
and
or
push
jmp
and
fstps
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
es
mov
sub
jmp
cwtl
jmp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
jmp
adc
push
das
cmp
sbb
inc
out
jmp
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
das
setl
inc
jmp
pop
xor
shlb
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
xorl
pushfw
push
call
jle
sub
mov
sbb
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
pushfw
push
call
lods
pop
xorl
xorl
xorb
xorl
xorl
pop
popfw
jmp
jmp
jmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
lret
test
cmpsw
push
std
repnz
shr
stc
ds
in
mov
jmp
mov
test
jmp
xor
xor
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
jmp
dec
jmp
outsl
jl
pop
mov
es
mov
jmp
cmpb
jnp
icebp
push
inc
sub
scas
dec
jne
jmp
inc
je
adc
jmp
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
jmp
xor
pop
mov
pop
add
and
jmp
outsb
setl
inc
pop
xor
shlb
int3
adc
div
fs
int
xchg
ror
into
out
cld
test
or
add
andl
incl
