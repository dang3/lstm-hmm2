ret
ret
push
mov
mov
and
sub
xor
sub
and
add
mov
add
mov
rol
add
pop
jmp
mov
dec
dec
dec
dec
dec
dec
push
nop
xor
nop
inc
xchg
call
mov
jmp
dec
dec
dec
dec
dec
push
xchg
or
mov
and
xchg
jmp
push
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
call
nop
mov
nop
mov
xchg
jmp
xor
ror
mov
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
add
mov
inc
mov
movzbl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
push
pop
mov
nop
jmp
push
mov
call
xchg
shl
xor
add
and
pop
pushl
xchg
push
xchg
pushl
mov
push
nop
call
xchg
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
mov
push
xchg
add
sub
rol
mov
call
xchg
jmp
dec
dec
dec
dec
dec
push
xchg
sub
mov
push
xchg
push
nop
jmp
sub
push
pop
mov
xchg
jmp
mov
push
pop
shl
rol
rol
mov
mov
andl
mov
push
xchg
mov
or
pop
add
push
pop
push
xchg
popl
xchg
jmp
sub
xchg
mov
nop
mov
push
pop
jmp
dec
push
nop
xor
mov
push
xchg
push
nop
push
xchg
jmp
push
mov
push
addr16
push
xchg
push
nop
jmp
mov
addr16
push
xchg
jmp
dec
dec
push
xchg
sub
mov
mov
sub
nop
andl
xchg
push
xchg
push
mov
push
mov
push
xchg
mov
xor
xor
mov
jmp
inc
inc
inc
inc
inc
inc
mov
nop
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
andl
nop
push
push
pop
xor
nop
jmp
dec
push
push
pop
push
xchg
xor
xchg
push
mov
jmp
mov
mov
mov
mov
mov
nop
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
jmp
push
xchg
jmp
dec
call
nop
mov
xchg
jmp
push
xchg
jmp
push
addr16
push
push
pop
add
mov
push
addr16
jmp
dec
dec
dec
call
mov
mov
xchg
mov
nop
mov
mov
mov
xchg
jmp
je
push
mov
jmp
dec
push
addr16
xor
mov
push
nop
push
nop
cmpl
nop
push
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
xor
nop
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
nop
dec
nop
jmp
pushl
push
pop
xor
add
sub
mov
call
mov
movl
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
push
nop
xor
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
mov
add
shr
xor
and
mov
push
xchg
push
mov
push
xchg
nop
nop
nop
nop
nop
push
xchg
pushl
xchg
call
mov
mov
ror
shr
xor
and
and
add
pushl
add
rol
xor
pop
pushl
or
sub
rol
shr
xor
pop
jmp
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
add
push
pop
mov
push
pop
jmp
dec
push
nop
xor
or
mov
jmp
push
push
pop
rol
dec
xor
or
mov
mov
and
sub
ror
mov
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
push
pop
mov
push
pop
jmp
pushl
mov
add
xor
xor
push
ror
and
push
add
or
ror
add
pop
add
or
and
mov
inc
dec
test
jne
pop
pop
call
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
push
nop
push
xchg
push
or
and
inc
sub
push
shr
or
and
and
sub
mov
and
dec
mov
dec
shl
and
dec
test
jne
pop
pop
mov
call
jmp
push
nop
jmp
shr
dec
shl
pop
xor
push
pop
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rep
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
nop
push
inc
xor
add
shl
push
sub
or
pop
add
xor
and
rol
dec
test
jne
pop
or
inc
or
and
add
add
call
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
jmp
and
mov
jmp
dec
dec
dec
dec
dec
dec
push
xchg
and
mov
sub
xchg
pushl
or
inc
pop
push
push
pop
push
nop
push
nop
push
mov
add
nop
jmp
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
push
mov
call
mov
movl
xchg
push
addr16
pushl
xchg
call
addr16
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
xchg
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
xchg
push
xchg
pushl
nop
pushl
nop
call
mov
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sub
xchg
sub
add
add
and
add
push
xchg
push
mov
jmp
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
xchg
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
sub
or
add
sub
mov
xor
shr
pop
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sub
sub
sub
sub
mov
mov
shr
mov
add
mov
mov
xchg
jmp
push
xchg
push
xchg
jmp
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cltd
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
mov
add
mov
push
nop
sar
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
rep
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
or
sub
and
and
add
and
add
rol
ror
and
add
add
sub
and
mov
sub
push
pop
add
mov
cmpl
xchg
jmp
call
xchg
pushl
xor
add
add
xor
ror
pop
sub
mov
rol
or
rol
mov
add
mov
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
mov
movl
mov
sub
ror
rol
rol
shr
mov
or
mov
or
shr
mov
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
mov
and
mov
mov
mov
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
push
xchg
ror
mov
sub
xchg
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
mov
mov
jmp
call
mov
xor
and
inc
shr
ror
and
add
mov
mov
xor
or
mov
add
xchg
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
mov
and
pop
cmp
xchg
jmp
push
push
pop
add
or
xor
sub
inc
pop
cmp
mov
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
nop
xor
mov
dec
ror
add
mov
push
push
pop
dec
add
xor
or
mov
push
xchg
shl
add
mov
mov
push
xchg
jmp
and
addr16
mov
nop
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
mov
push
nop
mov
xchg
mov
nop
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
mov
jmp
or
mov
and
sub
ror
dec
pop
jmp
inc
xchg
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
inc
pop
rol
inc
rol
and
dec
pop
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
andl
nop
add
push
pop
and
ror
inc
dec
mov
shl
add
mov
sub
shl
add
ror
mov
mov
nop
add
xchg
add
nop
nop
nop
nop
nop
nop
add
xchg
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
jmp
push
xchg
xor
push
pop
push
xor
add
xor
sub
push
mov
push
add
add
rol
pop
add
add
dec
test
jne
pop
pop
mov
call
jmp
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jbe
add
xchg
jmp
shl
dec
shl
mov
mov
sub
and
shl
xor
mov
jmp
shl
add
mov
dec
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
dec
pop
jmp
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
call
push
pop
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
call
nop
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
shl
sub
sub
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
rol
mov
sub
push
pop
sub
push
pop
dec
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
mov
mov
jmp
sub
or
and
dec
mov
and
xchg
cmp
xchg
jne
and
xchg
add
xchg
add
xchg
jmp
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jbe
add
xchg
jmp
mov
nop
sub
mov
inc
ror
mov
jmp
mov
or
shr
pop
dec
mov
pop
and
sub
pop
call
xchg
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
sub
xchg
decl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
xor
add
ror
dec
shr
pop
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
add
mov
jmp
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
call
mov
jmp
and
shl
or
mov
sub
mov
xor
dec
sub
shr
mov
movl
mov
call
xchg
jmp
xor
xchg
or
pop
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
mov
dec
mov
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
add
mov
add
xchg
dec
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
xchg
andl
xchg
add
mov
mov
xchg
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
mov
mov
shl
mov
movsbl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
add
sub
xor
mov
rol
and
mov
and
mov
mov
xchg
mov
addr16
mov
xchg
xor
xor
pop
cmp
push
pop
jmp
rol
xor
pop
sub
mov
jmp
add
xchg
pushl
mov
add
xor
pop
inc
push
pop
inc
mov
jmp
jmp
push
ror
inc
pop
add
add
mov
and
mov
mov
xchg
jmp
cmpb
xchg
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
pop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
xor
xchg
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
xchg
call
addr16
and
or
ror
mov
sub
pop
jmp
xchg
dec
dec
dec
dec
dec
call
mov
push
addr16
call
nop
and
inc
add
mov
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
addr16
push
addr16
jmp
decl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
add
nop
cmpl
nop
jne
mov
add
dec
and
pop
add
mov
mov
xchg
add
mov
jmp
xor
mov
add
addr16
mov
xchg
dec
and
dec
sub
rol
mov
and
add
shr
sub
mov
dec
mov
rep
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
mov
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
add
mov
xor
sub
mov
jmp
je
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmpb
xchg
je
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
jne
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
xor
add
and
shr
mov
jmp
jne
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
ror
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
rol
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
push
nop
push
xor
and
sub
dec
pop
push
nop
call
mov
push
mov
xor
shr
pop
xor
or
or
rol
mov
xor
addr16
jmp
or
pop
mov
or
sub
shl
add
add
pop
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
incl
xchg
add
mov
cmp
nop
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
rol
and
and
xor
mov
mov
rep
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
mov
jmp
mov
shr
sub
dec
mov
nop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
sub
sub
or
and
mov
pusha
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rol
shl
add
xor
and
mov
push
xchg
jmp
xor
nop
add
xchg
dec
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
ror
pop
sub
sub
pop
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
mov
incl
nop
nop
nop
nop
nop
nop
xor
mov
inc
mov
mov
push
pop
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
and
add
sub
mov
cmp
mov
je
jmp
push
nop
push
mov
call
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
rorl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
xchg
jmp
jl
jmp
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
incl
xchg
add
nop
cmp
push
pop
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jl
jmp
sbb
call
nop
add
xchg
push
popl
movb
mov
movl
nop
jmp
or
stc
jmp
movb
mov
incl
xchg
jmp
lret
shl
mov
pushl
xchg
pushl
rol
shl
pop
sub
sub
mov
jmp
call
mov
popa
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
addr16
jmp
jmp
xor
shr
add
xor
or
mov
movzbl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
incl
xchg
jmp
incl
push
pop
shl
mov
cmp
nop
jl
xor
push
pop
jmp
sub
or
dec
mov
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
dec
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
sub
mov
shl
sub
pop
xor
or
and
sub
add
pop
and
mov
inc
pop
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pushl
dec
or
add
or
pop
pushl
addr16
pushl
shl
add
pop
or
mov
add
xchg
nop
nop
nop
nop
nop
call
nop
mov
add
and
xor
pop
push
xchg
pushl
nop
call
mov
shl
mov
ror
and
mov
xor
mov
mov
addr16
jmp
add
mov
call
xchg
add
shr
pop
push
nop
pushl
xchg
call
xchg
ror
rol
mov
jmp
pusha
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
nop
popa
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
nop
call
nop
push
shr
sub
pop
or
mov
call
xchg
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xchg
inc
xchg
shl
inc
sub
add
and
mov
and
xchg
inc
mov
inc
nop
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
mov
mov
add
mov
xor
mov
pop
xor
xor
pop
mov
add
dec
and
pop
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
push
pop
jmp
mov
add
mov
mov
push
pop
call
xchg
jmp
je
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
add
add
mov
mov
sub
mov
sub
mov
mov
addr16
nop
nop
nop
nop
nop
incl
nop
dec
mov
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
jmp
mov
xchg
mov
xchg
jmp
call
mov
jmp
mov
xchg
sub
mov
inc
xor
or
mov
mov
shr
and
add
rep
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pushl
xchg
call
xchg
push
addr16
jmp
js
push
mov
mov
shr
mov
ror
mov
mov
and
or
add
sub
mov
pushl
ror
shl
dec
pop
jmp
dec
test
call
xchg
ror
ror
mov
add
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
rep
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pushl
nop
call
xchg
push
push
pop
call
mov
jmp
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
cmp
mov
jne
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
mov
jmp
je
shr
rol
sub
ror
dec
mov
add
add
and
or
mov
add
mov
jmp
mov
or
ror
sub
rol
mov
sub
ror
xor
and
xor
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
jmp
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
add
mov
mov
sub
mov
sub
add
add
mov
mov
mov
nop
incl
nop
dec
xchg
jmp
push
sahf
add
xor
xchg
jmp
inc
mov
sub
addr16
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
aad
icebp
sub
xor
and
add
jmp
or
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
jmp
sub
push
pop
jmp
dec
nop
jmp
and
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
sub
mov
add
xchg
sub
xchg
jmp
dec
mov
rol
sub
xor
rol
xor
mov
movzbl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
shl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
mov
incl
mov
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
sub
xor
shr
sub
mov
nop
nop
nop
nop
nop
call
mov
cmp
mov
jb
inc
mov
cmp
xchg
jb
inc
addr16
cmp
mov
jmp
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
mov
xchg
xor
sub
rol
mov
jmp
jmp
add
xor
inc
mov
sub
xchg
shr
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lea
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jle
jmp
jbe
das
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rol
sub
sub
rol
mov
mov
and
nop
cmp
nop
jne
and
mov
add
xchg
jmp
mov
mov
and
add
rol
mov
movzwl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sub
xor
or
and
mov
jmp
pop
xor
jae
inc
addr16
inc
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
jmp
add
or
lret
add
xchg
mov
inc
mov
jmp
and
xchg
cmp
push
pop
jne
and
nop
add
xchg
add
addr16
add
xchg
push
add
dec
add
add
and
pop
add
addl
nop
jmp
sbb
incb
sub
shl
mov
xor
ror
sub
or
mov
sub
mov
mov
mov
incl
mov
jmp
jge
cmpsl
addl
push
pop
decl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
add
mov
cmpl
mov
jne
jmp
decl
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
add
nop
cmpl
push
pop
jne
call
addr16
mov
push
pop
jmp
dec
xchg
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
mov
mov
xor
push
pop
inc
xchg
jmp
sub
xor
add
and
mov
add
shr
mov
nop
nop
nop
nop
nop
mov
mov
incl
xchg
incl
nop
mov
xchg
xor
xchg
cmpl
mov
je
and
or
mov
xor
and
mov
jmp
call
xchg
mov
mov
mov
xchg
mov
xchg
shr
ror
and
mov
push
addr16
add
mov
call
mov
mov
push
pop
jmp
and
sbb
decl
je
adc
out
hlt
mov
mov
push
mov
add
add
ror
rol
mov
call
mov
jmp
adc
adc
add
nop
inc
sub
add
dec
or
pop
mov
xchg
push
mov
mov
rol
pop
add
xchg
push
xchg
jmp
xor
shr
pop
sub
mov
inc
ror
and
sub
pop
or
xor
or
xor
xor
mov
and
add
inc
mov
or
pop
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rol
shr
and
mov
call
addr16
or
or
mov
inc
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
sbbb
pop
pushl
xchg
rol
or
rol
ror
xor
mov
call
xchg
add
or
mov
mov
jmp
aad
lret
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
pushl
inc
pop
add
xchg
jmp
add
xor
mov
add
mov
push
nop
jmp
in
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
or
ror
add
mov
add
add
nop
jmp
add
ror
mov
add
nop
jmp
ror
sar
push
call
mov
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
jmp
lock
pop
push
nop
call
xchg
cmp
xchg
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
rol
sub
mov
jmp
inc
xor
and
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
shr
mov
jmp
push
push
incl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
sub
xor
and
add
or
mov
or
sub
mov
inc
and
mov
add
push
pop
add
xchg
jmp
jns
jmp
push
pop
cmc
pushl
and
shr
and
pop
sub
or
add
mov
add
mov
add
mov
jmp
jns
jmp
iret
mov
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
inc
rol
mov
xor
add
and
add
add
push
pop
add
addr16
push
nop
pushl
xchg
nop
nop
nop
nop
nop
call
mov
mov
nop
jmp
mov
pop
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
add
xor
or
mov
add
add
mov
add
mov
push
nop
jmp
adc
movl
xor
or
add
shr
sub
mov
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
add
xchg
cmpl
xchg
jmp
ljmp
pop
call
push
pop
mov
mov
add
xchg
add
mov
and
shr
and
mov
nop
nop
nop
nop
nop
test
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
add
push
pop
cmpl
nop
jne
call
mov
jmp
pop
mov
test
call
xchg
jmp
popf
cmpb
inc
or
xchg
or
shr
mov
shl
mov
pushl
rol
shr
pop
xor
pop
or
pop
dec
xor
or
inc
xor
pop
mov
push
pop
cmp
mov
jmp
loope
jns
inc
or
pop
mov
mov
jmp
jne
xor
add
inc
mov
and
mov
add
add
xchg
mov
push
pop
add
and
xor
mov
add
mov
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pushl
xor
pop
mov
xchg
cmp
nop
jne
push
xor
rol
pop
add
add
push
pop
nop
nop
nop
nop
nop
mov
pop
mov
push
pop
pushl
shl
xor
rol
pop
add
nop
or
add
or
pop
rol
pop
leave
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
adcb
jae
sbb
mov
xchg
inc
jle
mov
xlat
xchg
outsl
mov
aaa
and
inc
mov
mov
pop
stos
or
jae
insb
mov
xrelease
mov
rcl
test
enter
or
push
and
jmp
lret
adc
pop
mov
arpl
inc
mov
js
pusha
add
shll
movsl
iret
mov
add
fwait
mov
iret
xor
sbb
mov
fwait
cmpsb
mov
mov
xchg
ss
cmp
sbb
add
mov
test
or
rcrl
or
mov
pop
mov
dec
xchg
mov
cltd
arpl
pop
bound
jl
add
outsl
lods
or
pushf
inc
push
popf
mov
outsl
and
mov
scas
adc
adc
jns
jp
push
out
das
aaa
mov
in
jmp
mov
in
pop
js
loopne
repz
jbe
push
inc
push
jo
popf
iret
and
sbb
mov
pop
lock
inc
lcall
shlb
sar
test
jmp
adc
pop
sub
mov
sbb
cmpsb
fwait
dec
xor
mov
insb
scas
adc
lahf
cmp
lds
and
or
outsb
sbb
jge
imul
or
xchg
push
pop
push
xchg
xchg
xchg
movsl
xor
repz
add
inc
in
das
cmp
lahf
repz
shrb
loope
mov
inc
adc
mov
rcll
cmp
mov
sub
cmp
lock
ret
jp
out
mov
cs
push
mov
fcompl
cli
mov
and
cwtl
pop
std
sbb
lcall
sbb
sti
sub
loope
mov
out
sbb
repnz
inc
ja
out
mov
in
add
sbb
or
lret
movsl
test
sub
jecxz
outsl
fs
aaa
aad
mov
jmp
adc
iret
jae
lret
es
mov
movsb
test
mov
ret
adc
rcll
icebp
inc
lock
xor
jp
adc
mov
mov
or
fs
in
pop
out
mov
aam
cld
test
out
push
gs
mov
cld
out
js
mov
jecxz
pusha
or
sbb
sti
or
jnp
xorl
popf
stos
ds
adc
popa
xor
sahf
add
mov
lds
push
jns
cmp
push
add
push
mov
ret
jnp
cmp
lock
or
int
js
lods
xor
lods
out
in
mov
inc
dec
shlb
cmp
or
and
sti
xor
mov
popl
jno
mov
xchg
out
shlb
and
int3
add
pop
sub
inc
push
mov
loope
inc
push
je
or
dec
sbb
jp
pop
jmp
mov
sbb
sub
inc
out
add
lfs
inc
sbb
popa
lock
lea
insb
into
pop
pop
push
daa
stos
pop
sbb
in
int
mov
push
xlat
cmp
pop
pusha
clc
jmp
push
mov
xor
cs
or
jp
add
maskmovq
testl
push
mov
jno
push
std
sub
mov
ja
jb
ljmp
imul
sub
notb
adc
in
nop
insb
movb
lret
push
imul
fcomp
xorb
adc
cmp
scas
ljmp
pop
xor
fimuls
jp
jl
or
dec
push
fwait
inc
ret
dec
and
gs
repz
test
shl
sbb
testl
leave
xchg
xchg
and
xchg
das
int
mov
inc
iret
inc
fs
pop
in
pop
push
lods
inc
mov
in
and
jp
mov
ret
dec
push
cmp
or
sbb
inc
enter
inc
and
inc
push
gs
mov
add
sbb
ret
mov
lods
in
jnp
cmp
insl
cli
paddw
icebp
mov
sbb
jecxz
jb
nop
int3
cmp
fdivrs
sti
ficompl
xor
xlat
lods
stc
xchg
jle
enter
xchg
mov
dec
xchg
mov
mov
ljmp
xor
mov
cld
jbe
cmp
add
ret
add
pop
popf
inc
ret
pop
out
popf
orl
ds
mov
inc
hlt
scas
repz
into
pop
stos
jno
push
repz
int
xor
and
movsl
sub
mov
sbb
sbbb
push
pushf
cltd
inc
dec
jle
sbb
nop
ds
js
adc
sarb
xor
bound
inc
sub
dec
pop
sbb
inc
push
and
inc
sub
out
fwait
mov
outsl
cmp
jbe
pusha
cs
jmp
jb
dec
mov
xchg
hlt
push
xor
dec
bound
scas
aas
arpl
sti
jmp
mov
test
xchg
out
test
push
sahf
cmp
or
mulb
leave
push
or
push
fidivs
scas
shrb
xchg
adc
or
xchg
pop
cmp
xor
mov
pop
xor
mov
bound
pop
cs
popa
pop
push
pop
mov
dec
push
fwait
test
fisttpl
cld
or
imul
dec
adc
outsb
lods
or
insl
jl
jle
lods
and
aam
out
fildll
pop
lcall
inc
add
xchg
mov
jne
gs
sahf
and
stos
inc
orl
fisttps
sub
pop
subb
cmp
in
mov
or
lret
mov
add
dec
out
lds
inc
xchg
sbb
push
int
mov
xlat
add
sub
add
inc
loope
inc
in
loopne
rolb
inc
loop
dec
enter
jno
ret
popf
imul
out
insl
xor
in
movsb
and
mov
aaa
ffreep
in
lods
pop
es
jae
fadds
jmp
andl
or
dec
xor
adc
loope
adc
lret
sbb
jl
and
daa
sbb
inc
sub
sbb
jno
xchg
aad
popa
les
mov
sbb
call
dec
xor
repz
mov
inc
mov
jge
adc
mov
mov
subb
in
xor
loope
sbb
xchg
mov
inc
ror
cmp
dec
mov
cmp
cmp
pop
push
sarl
test
stos
push
cmp
and
imul
fldt
movsl
mov
jo
ds
adc
lret
rorl
or
popf
pop
and
stc
cltd
jle
dec
cmp
pop
sbb
prefetch
or
push
or
je
push
mov
xchg
add
push
or
orl
iretw
xchg
dec
repnz
sbb
add
or
inc
int3
leave
add
sbb
rcll
shlb
fisttpll
mov
pop
pop
sti
xchg
addl
cmp
xchg
out
mov
es
jge
mov
loopne
into
xchg
icebp
test
inc
lret
in
adc
mov
jns
mov
mov
sarl
or
jp
ret
push
mov
hlt
and
cltd
adc
incl
fdivp
push
fstps
mov
pusha
test
inc
jo
mov
scas
loopne
xchg
cmp
mov
mov
xor
popa
add
and
in
fs
shl
add
mov
mov
pop
lods
out
repz
sub
pop
test
inc
mov
sub
sub
pop
mov
outsl
outsb
xchg
mov
pop
inc
inc
add
mov
xor
divl
stos
xchg
sbb
aam
lcall
sbb
cld
les
and
lods
adc
push
adc
and
into
lock
and
dec
jb
in
jmp
xor
test
bound
out
dec
in
bound
jp
dec
shrl
push
adcl
push
hlt
out
std
push
mov
jbe
shrb
call
add
stc
inc
lods
bound
and
and
cli
xchg
das
ret
cli
pop
test
add
pop
arpl
mov
adc
lock
add
mov
stos
jnp
push
push
mov
mov
inc
or
lea
pop
cmc
in
pop
adc
xchg
dec
adc
pop
pusha
js
inc
decb
or
clc
mov
inc
inc
fidivrs
mov
fldenv
xlat
mov
int
fimull
fsubrs
aad
mov
into
imul
lods
mov
xchg
dec
mov
mov
je
sub
lcall
jge
rorl
and
sbb
stos
insl
mov
lods
add
popa
cmp
test
mov
cmpsb
pop
arpl
sub
xor
lock
adc
cmp
or
push
xchg
repz
and
or
sub
push
xchg
aam
cmpsb
popa
adc
mov
cli
mov
fs
arpl
stos
mov
xor
pop
test
sbb
ljmp
insl
mov
mov
dec
nop
daa
mov
xchg
push
bswap
imul
iret
jo
mov
ret
ret
stc
lret
jle
jp
xor
leave
lret
adc
jge
insl
xchg
pop
push
cmp
test
mov
mov
movsl
pop
pop
sbb
add
not
dec
shll
add
fistl
repz
jb
add
mov
pop
pushf
mov
xchg
mov
push
mov
in
lahf
into
push
cwtl
mov
ret
in
mov
popa
aam
daa
int
stc
aas
pop
rorl
jmp
sub
lock
mov
or
addr16
pusha
and
je
push
xlat
fsubr
int3
inc
cmp
or
insl
and
or
sbb
or
shll
and
push
loop
int
sub
mov
lcall
sti
cld
mov
inc
add
push
mov
fnsave
iret
lcall
mov
fdivrp
iret
push
imul
hlt
mov
cmovl
push
imul
mov
pop
ficoml
iret
mov
dec
outsl
and
fs
std
add
mov
ret
mov
xor
cmp
pop
sub
fdivl
sti
dec
push
int
in
push
add
mov
pop
movsb
subb
xchg
out
daa
jmp
je
pusha
pop
or
cwtl
loopne
mov
mov
enter
stos
mov
adc
sbb
stos
sub
ja
mov
aad
push
adcb
sbb
push
lock
push
sub
clc
lods
cmpsb
dec
pop
pop
cltd
test
inc
mov
jmp
pop
out
mov
xor
mov
fld
mov
inc
incb
pop
int3
jecxz
icebp
mov
dec
cwtl
leave
push
add
les
sub
mov
enter
pop
cmc
add
sbb
xchg
rol
sub
inc
sub
jmp
push
cmp
or
or
stc
ficomps
jmp
lea
shrl
sub
popa
std
test
mov
popa
pop
xor
gs
add
sub
push
fs
jl
imul
or
add
out
push
mov
push
ficoml
pop
in
and
cmc
pop
sub
or
fcomip
jno
mov
and
fcomi
cld
and
es
lea
out
out
and
jp
cmp
jp
js
into
inc
hlt
nop
imul
lcall
js
out
jbe
sbb
xor
std
int3
js
test
mov
push
add
out
cwtl
mov
sub
push
das
jg
addr16
outsb
inc
sbbl
jbe
fcoml
and
mov
mov
add
pop
shrl
jecxz
insb
mov
call
test
lods
xor
push
movsb
shrl
cltd
aaa
xchg
dec
jp
jp
xlat
ljmp
jbe
jp
inc
pop
mov
mov
adc
mov
jne
mov
jo
aam
mov
jnp
push
test
or
aas
das
scas
fiadds
fisttps
daa
fidivrs
mov
idivl
or
inc
sbb
jecxz
pop
loope
xor
inc
jl
mov
out
sbb
mov
xlat
stos
in
push
lcall
sub
rorl
mov
cmpsb
add
adc
inc
stc
cmpsb
push
add
mov
loope
push
repnz
in
xchg
add
xor
sub
je
dec
fadd
daa
loope
movsl
xlat
mov
shlb
and
mov
sbb
shl
and
popf
add
jp
jmp
test
int
cli
xchg
push
out
push
and
ss
fisubrs
repnz
sbb
call
scas
mov
aam
or
xor
inc
mov
mov
fwait
cmp
inc
loop
daa
fldt
shl
jnp
mov
scas
ss
lods
inc
mov
dec
sub
xchg
push
ret
jnp
arpl
and
out
jnp
mov
fs
pop
pop
dec
adc
dec
insb
push
scas
push
mov
mov
push
mov
cmp
push
mov
sbb
or
and
ret
loope
ja
js
jo
mov
push
shr
sti
bound
jl
loopne
and
sbb
adc
mov
dec
cmc
and
pop
sbb
jle
jmp
fldl
rorb
mov
pop
inc
outsb
jno
cli
ficoms
test
jno
popa
mov
subl
jl
mov
add
mov
loope
mov
add
add
sbb
jbe
adc
xchg
cmp
stos
xchg
push
push
push
push
pop
in
push
mov
idivb
jne
push
pop
xor
push
lds
jle
jae
rcll
mov
mov
dec
subl
repnz
scas
aad
fists
or
or
loopne
in
add
fs
mov
mov
sahf
jp
das
shr
adc
push
cmp
ret
aam
sub
cmp
adc
and
inc
or
pop
jmp
out
jp
cmpl
fstps
mov
outsb
or
ss
clc
movsb
inc
out
mov
jp
pop
or
sbb
xchg
xchg
stc
loope
push
jge
div
xor
xchg
sbb
push
or
push
xchg
push
es
out
push
out
adc
out
xor
lods
stc
aad
pushf
ds
shll
scas
insl
inc
push
inc
dec
outsb
sub
lret
les
mov
push
sub
xor
and
xor
and
mov
pop
out
push
and
movb
in
adc
jnp
sbb
scas
mov
nop
cmp
push
sub
pop
cmp
jl
es
inc
std
inc
sbb
mov
out
bound
adc
fs
aaa
sbb
fmull
lds
aas
aas
mov
stc
cmp
dec
outsb
shl
and
notl
or
mov
sbb
dec
shrl
insl
arpl
xlat
sti
mov
or
nop
adc
xchg
add
jbe
out
adc
rcrl
jge
lcall
jns
xchg
rorb
cmpsl
imul
rcrl
popf
std
lods
mov
xor
xchg
jp
and
xor
out
cli
jno
push
adc
dec
int
std
xor
cld
xchg
mov
lret
out
mov
jno
push
push
mov
imul
jns
mov
mov
out
xor
pop
cmp
movsb
loopne
add
shrb
fcmovu
jg
sbb
jecxz
cmpsl
ja
xchg
insb
mov
les
adc
call
stc
imul
test
mov
enter
cmpsl
sub
sbb
pop
sub
in
loop
aas
repz
insb
lock
scas
repnz
add
shll
jecxz
sar
push
push
push
iret
sbb
jae
mov
lcall
sti
in
sub
fadds
jmp
movsb
pop
loop
xchg
push
sbb
mov
outsb
push
leave
into
out
dec
in
in
pusha
jle
out
push
mov
or
lret
mov
scas
pop
adc
xor
mov
pop
mov
daa
test
push
scas
push
xor
mov
xor
push
sbb
jbe
cmp
push
testl
inc
add
test
jmp
jb
xchg
insb
mov
stos
int
movsl
sub
cltd
dec
std
xchg
rolb
sub
insb
scas
push
outsl
test
inc
pop
pop
dec
pop
adc
cmpsl
mov
push
addl
push
push
or
clc
je
xchg
pop
push
rcrl
mov
jle
arpl
fnstenv
scas
decb
mov
cli
cmp
mov
aaa
aad
jmp
mov
loopne
sub
jnp
mov
in
imul
cmp
or
sbb
pop
cld
repnz
mov
push
loopne
add
scas
sbb
cwtl
mov
mov
or
iret
std
mov
xchg
mov
xchg
or
jge
test
icebp
add
pop
dec
push
call
cwtl
sub
repnz
add
jmp
jmp
movsl
dec
insl
call
sub
lret
push
ds
dec
push
scas
testb
shrb
push
mov
leave
add
mov
xor
xchg
cld
mov
adc
and
clc
popf
test
enter
jecxz
std
xor
test
sub
in
hlt
aad
fwait
push
sub
inc
and
jnp
mov
popw
bound
xchg
jl
aam
icebp
ret
sub
clc
push
add
insl
xor
jo
sub
fcomip
xchg
bound
xchg
lods
test
cmp
fnstenv
adc
mov
outsb
inc
sub
ja
xor
inc
and
int
pop
fs
or
mov
icebp
inc
js
es
fwait
pop
pop
cmp
and
xor
jno
xlat
rcl
jns
in
je
aad
or
std
out
out
test
mov
dec
shll
xor
testl
push
std
jl
mov
mov
inc
jno
or
adc
sub
lret
stc
sub
scas
sbbb
mov
outsb
in
bound
addr16
xchg
stc
pop
mov
dec
inc
jns
xor
sub
mov
sbbl
loope
dec
push
loope
cmp
aas
mov
jnp
and
lcall
insl
hlt
loop
xorb
and
test
das
or
lds
mov
or
add
add
and
pusha
es
lods
pop
xor
js
fwait
mov
in
xor
mov
mov
out
mov
jae
in
ret
xchg
push
dec
mov
aad
adc
rcr
addr16
insb
jp
jmp
dec
gs
xchg
cli
ljmp
outsb
aaa
xor
into
mov
cmp
test
out
cmp
push
jg
adc
and
repz
mov
xchg
outsb
jp
scas
fldl
sub
mov
or
push
mulb
mov
and
imul
je
ljmp
and
push
leave
lcall
and
into
cmp
ja
inc
imul
mov
ds
lahf
dec
sub
into
sub
icebp
xchg
add
stc
cmpl
push
inc
push
and
xlat
xor
vmovaps
hlt
fcmovnu
cmc
or
fldl
enter
sub
xchg
adc
cmp
ja
xchg
je
mov
shrb
fidivl
inc
fistps
sub
movq
nop
nop
xor
aas
xor
xchg
jbe
inc
pop
mulb
dec
shll
cmpsl
mov
imul
cmp
dec
sub
jo
cmpsl
repz
test
lods
popf
leave
mov
arpl
pop
xor
scas
jp
and
sub
fwait
bound
mov
cwtl
add
mov
inc
add
icebp
lea
mov
and
jb
pop
push
je
mov
or
mov
sub
pop
jo
push
outsb
cmp
ficoms
es
xchg
repnz
sbb
imul
movsl
mov
lret
xor
adc
adc
imul
xor
xor
jmp
sbb
jmp
stos
sbb
data16
add
xor
jbe
sub
mov
in
pop
cvtps2pi
pop
dec
negl
clc
and
cmp
add
daa
xor
mov
pop
mov
mull
sub
pop
ljmp
int3
mov
dec
jo
pusha
adc
clc
movsb
cmpsb
sbb
dec
jmp
imul
xchg
mov
scas
clc
fisubs
cwtl
jne
out
sbb
pusha
ret
xchg
fwait
popf
aam
movsl
pusha
pop
adc
dec
mov
add
rorb
imull
sbbl
dec
mov
mov
addr16
aad
mov
sti
or
push
jne
bound
xor
mov
pop
hlt
inc
or
insb
mov
mov
sti
mov
test
sub
hlt
insb
jbe
inc
nop
aaa
or
mov
sti
in
lods
jmp
cld
sahf
mov
sbb
mov
jnp
xlat
lods
sbb
cs
lds
and
push
psllq
ret
sub
in
pop
loope
pop
or
or
fisubs
sbbl
adc
in
mov
inc
jmp
aad
sahf
sub
mov
sti
mov
mov
cld
fildll
xor
lcall
movsl
pop
jg
into
scas
jnp
aam
cld
cmp
inc
into
fxch
cmp
inc
leave
cmpl
dec
lret
leave
pop
sbb
pop
enter
popf
into
xchg
std
and
mov
or
ffreep
xlat
cmpsl
neg
cmp
in
test
fnstcw
push
mov
into
push
mov
or
sub
push
mov
xchg
subl
xchg
jg
lock
cmc
orl
push
fsqrt
push
pop
out
leave
sub
push
jne
nop
mov
pop
mov
adc
sbb
in
pop
xor
cmp
mov
iret
cltd
out
stos
dec
addr16
and
and
ja
mov
jle
inc
dec
jg
pop
filds
je
push
outsb
pushf
mov
ds
popa
insb
cmp
aad
xorl
sarl
fs
movsl
xor
rcrl
xlat
cli
mov
pop
flds
push
cld
pop
add
and
inc
stos
lods
decb
out
mov
and
fnsave
jnp
sarb
or
push
scas
jge
pop
and
mov
adc
dec
xor
pop
cs
add
outsl
call
clc
in
lret
outsl
push
mov
and
mov
xchg
pop
push
sbb
mov
xor
out
or
adc
inc
jge
cmpsb
xchg
loopne
test
xchg
loopne
fs
mov
outsl
das
jns
das
mov
insl
sbb
cbtw
mov
fildll
pusha
inc
repz
mov
addl
inc
fdivrl
insb
xchg
mov
mov
mov
popa
pop
daa
xor
sbb
arpl
ja
mov
ficompl
mov
fstl
lods
in
std
in
sbb
dec
xlat
xchg
ds
sbb
pop
push
xchg
sub
inc
jne
dec
mov
mov
fists
pushf
xchg
sub
or
call
xchg
arpl
and
imul
fucomi
fidivrl
movsl
jbe
xlat
inc
mov
mov
sbb
push
push
orb
lret
pop
test
and
je
xchg
sub
push
std
in
stos
push
lods
jb,pn
sub
inc
xor
leave
into
xor
push
jp
mov
bound
ljmp
jnp
fs
in
pusha
aas
xor
jecxz
xchg
and
adc
insb
lret
xor
adc
sbb
pop
push
clc
jecxz
jge
jno
jns
cmp
cmp
mov
in
cmp
sub
in
cmc
or
sbb
push
rdmsr
frstor
dec
push
sarb
pop
icebp
mov
je
mov
insb
push
shll
jg
push
add
dec
cmp
into
add
xor
jmp
push
in
pop
push
lret
cmp
aam
sbb
mov
dec
subb
mov
lret
pop
into
out
xchg
xor
and
daa
fiadds
push
dec
mov
fildl
and
sub
je
or
push
aas
orb
lret
lret
and
mov
loopne
push
enter
js
popl
loope
fistl
push
adc
mov
mov
mov
test
xor
mov
dec
dec
sub
mov
out
pop
inc
jno
fcmovnu
popf
imul
adc
pop
cmpsb
pop
cltd
jnp
subb
or
mov
aad
dec
stos
adc
pop
cmc
lret
push
add
add
cmp
inc
sub
hlt
stos
fstps
dec
cmp
mov
push
mov
xor
pop
mov
cmp
pushf
mov
cs
jbe
adc
push
js
xchg
jbe
jmp
enter
mov
and
xor
cld
push
xor
sarl
scas
dec
movsl
jp
popa
rol
push
dec
icebp
jl
xchg
test
adc
out
repnz
sub
xor
add
fcompl
adc
orps
xchg
out
xchg
or
or
push
js
test
or
xchg
movsl
int
pminsw
stos
call
mov
ret
cwtl
out
fwait
movsb
dec
push
mov
pop
js
mov
cld
push
call
xor
arpl
popa
jl
push
aad
fistpl
mov
cmpsl
pop
mov
nop
dec
test
sbb
leave
lret
mov
sub
imul
cld
pop
out
adc
mov
cmp
xchg
add
stos
das
jl
sub
or
call
hlt
fbld
mov
mov
xchg
dec
xchg
out
data16
insb
push
sub
add
sub
addl
xchg
mov
mov
mov
roll
dec
ret
sbbb
mov
jbe
nop
addl
pop
movsl
xor
inc
fnstcw
out
xor
dec
or
inc
or
xchg
pop
clc
push
mov
iret
adc
mov
or
es
inc
mov
test
adc
or
pop
popa
mov
js
push
lods
mov
je
ret
xchg
xor
add
repz
testb
cli
jle
fidivl
or
data16
add
scas
dec
mov
fcmovnbe
cmc
ja
pop
imul
mov
xchg
loope
fdivrl
add
fisubrs
mov
jo
dec
inc
or
mov
ficoml
xlat
inc
cmp
add
bswap
mov
sbb
dec
insl
scas
mov
pop
mov
pop
lret
mov
out
mov
and
jo
fmulp
sub
adc
mov
mov
jg
sbb
lods
daa
fsub
insl
jb
outsl
add
jp
out
mov
push
mov
fld
sarb
pop
cmc
adc
xor
sub
test
repz
mov
and
inc
mov
test
adc
idiv
jg
adc
lahf
pop
iret
fistl
mov
hlt
adc
mov
leave
test
xor
mov
dec
ds
jns
adc
loopne
mov
mov
pop
jno
pop
into
sbb
pop
jmp
lea
dec
dec
repz
stos
lret
pop
and
jl
adc
mov
jns
test
inc
outsl
subb
inc
adc
add
sub
push
sbb
sar
sti
xchg
push
mov
out
xchg
push
test
cmp
fstpt
inc
iret
mov
nop
cmpsl
fldt
in
mov
notb
cmp
cmpsb
insl
dec
movsl
shlb
push
xchg
leave
cmp
push
pop
cmp
jle
inc
jno
push
dec
xchg
sub
jle
ja
sbb
lahf
sti
mov
mov
cltd
popf
xchg
faddl
fisubs
push
insb
pop
or
push
imul
jb
mov
adc
inc
insb
mov
jbe
xor
std
leave
stos
mov
push
push
push
mov
loopne
pop
stos
sub
jl
mov
push
dec
or
and
ret
cld
or
sub
lret
dec
xor
push
or
out
and
add
inc
mov
mov
sub
in
orl
popf
cli
mov
stos
inc
inc
insl
inc
in
in
jo
sub
ds
lret
movsl
mov
mov
je
jcxz
mov
jmp
pop
int3
leave
adc
cmp
jne
aad
push
cwtl
cs
aas
cmp
jle
cmp
sahf
sub
or
cwtl
dec
gs
xor
lock
lahf
inc
jns
aam
scas
pushf
clc
lds
mov
inc
cltd
push
lea
loope
es
push
jne
cmpsl
push
jns
outsl
int3
dec
push
xchg
dec
out
mov
jbe
movsl
outsl
xor
mov
jae
jno
xor
add
adc
pop
icebp
fnsave
mov
mov
pop
jo
test
add
inc
xchg
dec
in
xor
sbb
in
lds
xchg
and
clc
pop
out
cmp
ret
inc
xchg
in
je
add
sbb
and
cmpsl
jmp
cmpsl
shlb
fadds
jge
adc
bound
aaa
push
cmc
jae
mov
mov
icebp
pop
test
fstpl
xchg
push
add
imull
push
xor
mov
test
sbb
ja
add
roll
add
pop
mov
xchg
cmpsb
jmp
dec
pop
sbb
sti
xchg
ret
push
push
mov
push
loope
outsb
mov
adc
cmc
pop
jns
push
jb
je
sub
les
jne
pop
jns
fistpll
sti
iret
or
test
jp
mov
int
ds
xchg
mov
push
or
scas
movsl
cmp
pushf
lret
test
out
out
dec
inc
or
cmpsb
repz
and
cmpl
and
insl
mov
fistl
dec
push
and
insl
mov
les
outsb
mov
loope
xchg
lret
aad
loope
int3
lods
sbb
stc
mov
jg
sbb
cwtl
cmp
push
cmp
mov
xchg
mov
lcall
adc
adc
bound
sub
inc
jbe
adc
outsb
dec
xchg
fwait
or
xchg
arpl
dec
mov
jne
sarl
jne
insl
mov
ds
mov
cmp
not
repz
add
lret
psrlw
sbb
sahf
scas
xchg
and
jle
test
inc
nop
jnp
cltd
cmp
enter
jle
cwtl
and
sub
loopne
mov
dec
int3
sub
sti
pop
push
das
int3
push
negb
xlat
into
or
icebp
sti
stos
add
or
add
add
pop
xor
cmp
xchg
or
div
sbb
push
fbstp
outsb
pop
mov
adc
in
nop
lods
cltd
in
ljmp
adc
pop
out
in
sbb
jg
mov
mov
mov
testl
jae
mov
shr
shlb
inc
roll
lcall
inc
mov
movsl
notl
pushf
icebp
loopne
pushf
out
mov
jecxz
mov
add
mov
add
loopne
mov
lods
stos
shrb
out
sub
arpl
scas
arpl
mov
mov
aas
inc
and
into
lods
lods
mov
int
mov
xor
lds
mov
bound
fsubl
dec
fcomps
es
jle
filds
xchg
dec
push
shl
pop
ficoml
and
ss
out
jo
fists
cmp
addb
out
fwait
and
imul
dec
mov
inc
neg
loop
mov
adc
rorl
and
push
xchg
stc
and
clc
cmp
sub
lods
roll
test
sub
xor
xchg
pop
sub
xor
and
mov
stos
lock
cs
test
mov
test
lcall
popa
and
mov
cmp
cwtl
mov
push
lods
jecxz
sub
out
inc
sbbb
pop
inc
test
stos
xchg
xchg
jge
cmc
mov
add
mov
pushf
mov
lods
push
rorb
sarb
lods
clc
sub
xor
test
adc
dec
mov
fucomi
jno
adc
mov
xchg
pusha
fwait
xlat
out
insb
test
out
loopne
xchg
cmpsl
add
repnz
cld
xchg
xchg
add
inc
ret
mov
lock
gs
xor
push
mov
cmc
cld
or
pop
cmpsl
lret
std
stc
mov
outsl
mov
cmp
insl
ret
movsl
idivb
jmp
jnp
loope
sub
mov
ret
pop
push
leave
sub
hlt
or
pop
mov
dec
or
das
xchg
pop
mov
aam
fimuls
push
pop
mov
nop
fiaddl
int3
jl
leave
lret
pushf
nop
dec
cmp
cwtl
jg
aam
cwtl
xor
lds
movsl
jne
test
inc
rcll
mov
cli
and
jo
stos
cs
popa
pop
out
lret
int
mov
lcall
mov
pop
jo
imul
pushf
cmp
das
xchg
lcall
and
pushf
xchg
jge
out
push
sub
loopne
xor
cmpsb
test
and
aad
jmp
dec
sti
push
setp
push
push
add
mov
mov
js
cmpsb
pop
mov
cli
mov
push
cmp
in
lcall
incl
sub
xchg
fildll
adc
add
icebp
jp
inc
shlb
fdivl
mov
scas
mov
test
push
cmpsb
in
add
insb
and
lret
xor
mov
dec
jne
xor
cli
push
outsb
bound
aaa
les
pop
adc
stos
scas
ret
pop
xchg
sbb
popa
rcr
aaa
mov
push
and
les
pop
fsubrl
mov
negl
sbbl
and
mov
out
pop
mov
lods
pop
dec
imul
cli
sub
gs
adc
aas
fwait
mov
sub
inc
aaa
cmp
jnp
mov
mov
testb
lret
fisttpll
xchg
jg
shl
clc
repnz
sarl
inc
mov
pop
dec
aam
test
sub
in
fnstsw
push
dec
popf
js,pt
xor
shrb
mov
clc
and
imul
dec
daa
jnp
xor
jmp
stos
or
hlt
mov
enter
cmpsl
fwait
mov
dec
subb
and
jmp
aaa
mov
shrl
mov
dec
arpl
push
mov
sahf
iret
enter
mov
popf
mov
fistpl
and
push
or
or
ja
jb
sbb
lods
loop
pop
push
push
test
sahf
cmp
mov
fcomip
adc
and
and
xchg
jp
adc
jecxz
iret
pushf
insl
mov
lahf
or
cmp
jge
sbb
sbb
js
test
jo
scas
int3
mov
insb
daa
fwait
add
pop
fsubl
sbb
sti
push
xchg
jecxz
or
lods
sbb
in
mov
and
in
xor
rcl
imul
sbb
bound
or
xchg
xchg
pop
adc
fs
lret
mov
xor
mov
dec
xchg
push
add
mov
xorl
lock
out
xor
leave
ret
pop
pop
jle
jmp
mov
or
dec
in
testb
int3
loope
out
shll
cmp
mov
jb
xchg
xchg
mov
cmpsl
inc
cmp
sbb
mov
sbb
cli
sbb
add
sbb
sbb
xlat
sbb
fildl
push
cwtl
add
pop
test
ficoms
lret
cli
cmp
push
dec
rorl
mov
das
negb
outsl
cmpsb
mov
mov
loope
mov
lods
idivb
cmp
out
pusha
jecxz
xchg
mov
fsubrs
sbbb
fucomp
sbb
les
sbb
mov
add
mov
divl
pop
repnz
mov
popl
cmp
inc
dec
adc
jo
out
test
add
add
add
pop
fs
mov
je
sub
add
test
mov
adc
xlat
xor
xorl
or
push
leave
ljmp
daa
test
lock
clc
or
xchg
lods
push
jo
xor
adcl
lret
push
orl
in
and
mov
cmp
sbbb
rol
lock
add
mov
mov
scas
cld
or
ret
pop
pushf
push
dec
adc
sub
int3
pop
inc
test
stc
daa
mov
pop
add
jbe
shrl
xor
lret
outsl
bound
sub
inc
xchg
xchg
adc
fsubrl
and
xchg
jp
pop
insl
mov
and
loopne
cmp
scas
mov
adc
lret
adc
decb
sbb
pop
jns
jl
dec
shr
pop
shlb
jecxz
sub
xor
psadbw
add
scas
pop
push
xchg
movsl
mov
mov
loope
sbbb
mov
popa
pop
cs
pop
std
adc
sbb
push
popa
enter
test
jae
lea
pushf
incl
fwait
xor
shlb
aam
pop
lret
sbb
mov
adc
mov
sbb
push
clc
jns
and
je
lods
pop
sub
hlt
xchg
daa
cmp
push
les
jno
jno
scas
mov
fidivs
enter
xchg
call
mov
nop
ja
push
or
das
arpl
mov
iret
sub
fisttpll
xor
push
std
add
add
inc
in
les
xchg
push
lods
mov
pop
and
pop
xchg
lods
mov
test
dec
mov
mov
call
cmp
pop
mov
cmp
cltd
jle
cmp
stc
cs
cmp
jmp
lods
push
mov
or
cmpsb
fsubrs
lds
loopne
loop
push
mov
stos
mov
jge
xchg
incb
movsb
jge
cmp
ss
fidivl
xchg
cmc
test
les
xchg
imulb
jecxz
and
and
cmp
ret
insb
imul
and
addr16
rolb
pop
xor
mov
imul
ror
dec
pop
shlb
add
test
subl
jae
add
cmpsb
jl
nop
outsb
sbb
popl
cmc
nop
out
lcall
adc
mov
inc
clc
xchg
inc
cmpsl
cld
test
xlat
adc
cld
cmovg
add
js
ja
dec
xlat
cmc
dec
out
pop
mov
insl
fisubrl
or
repnz
mov
aas
add
js
rcll
add
add
xor
jle
insb
aas
xorb
fdivs
testl
cmpsl
mov
repnz
fmul
mov
mov
inc
lods
xor
jge
shrb
cwtl
inc
xchg
inc
lea
fnstcw
sbb
rcr
adc
scas
mov
mov
sbb
fimuls
ja
hlt
sub
lds
xorb
popa
adc
lret
pop
jns,pn
bound
int
jbe
in
movsl
mov
call
fldln2
decb
xor
mov
add
fadd
jl
cmp
in
arpl
out
hlt
stc
dec
rclb
fstp
xor
addr16
sbb
xchg
sub
mov
pop
xor
inc
decl
dec
push
fsubrs
or
pop
outsb
test
loopne
pushf
lock
adc
inc
fcompl
js
stc
movsl
test
inc
imul
bound
sbb
ljmp
pop
stc
mov
and
daa
or
repz
and
dec
test
movsl
enter
pop
sub
jg
adc
mull
imul
in
mov
mov
sub
es
xchg
scas
pop
sbbb
push
sbb
aad
pusha
xchg
mov
xchg
push
std
jbe
inc
imul
aam
ljmp
movsb
cmp
mov
push
loop
adc
cld
xchg
ret
add
data16
aam
cmpl
jbe
or
mov
mov
inc
cwtl
jbe
inc
aas
or
sbb
xchg
push
mov
sub
imul
fs
adc
fimuls
js
adc
cmc
cs
movsb
xor
push
cmp
aam
sbb
xor
loopne
cmpsb
inc
sahf
mov
cmpsb
iret
or
pop
lods
test
dec
rcrl
std
iret
push
daa
shrb
adc
lds
push
in
jb
pusha
outsb
hlt
into
cmp
ret
jns
adc
sub
adc
sbb
stos
shll
popf
cld
addb
or
imul
mov
fists
jmp
int
xchg
pop
bound
pop
xrelease
or
jp
fldenv
std
push
fistps
jb
stos
cmp
addl
ret
aam
jp
push
lods
lahf
stos
fs
cmpsl
repz
nop
jo
add
push
pop
fwait
cmpsl
pop
loope
and
lock
jbe
rolb
lds
mov
sti
scas
xor
in
int
inc
fsubrs
mov
sarb
pop
cmp
or
push
sub
fs
ljmp
mov
adc
jle
lcall
stc
cwtl
orl
fnsave
iret
or
pop
sbb
je
cmp
test
repz
add
jno
fnstcw
testb
or
sbb
out
mov
inc
push
pushf
xlat
subl
sub
add
pop
addr16
jmp
cmp
pop
sub
pop
stos
jne
loopne
xchg
sub
sub
jnp
push
mov
xlat
insl
add
cmp
jnp
jbe
sbb
pop
popa
call
push
fbstp
pop
adc
stos
dec
lds
gs
pusha
push
sbb
popf
out
adc
sub
cmp
std
push
rcl
in
stc
inc
lds
xchg
test
mov
daa
mov
push
mov
xor
dec
ljmp
mov
out
pop
decl
xchg
fmull
jne
aam
filds
sbb
imul
jecxz
lret
std
sbb
aas
rcr
jecxz
add
fwait
pop
fcomps
jp
pop
mov
mov
fisubrs
dec
pop
lods
inc
ret
roll
int
hlt
inc
jnp
in
pop
daa
rcrl
mov
xchg
cltd
shrb
fnsave
shl
cmpsl
adc
or
int
mov
ljmp
orl
movsb
ja
jb
sarb
mov
mov
adc
push
push
mov
or
out
cmp
in
sub
jp
mov
dec
cmp
cltd
cmp
add
shl
in
or
cld
mov
xor
mov
lea
inc
ret
mov
insb
xchg
mov
jbe
xor
mov
out
jecxz
jl
dec
mov
insl
inc
lret
adc
add
popf
cmp
xchg
push
fidivs
int
rcrb
repnz
pop
jp
push
dec
popl
addr16
cs
xor
sti
mov
jns
arpl
mov
mul
ljmp
sbb
jo
mov
jp
push
inc
mov
inc
cmp
cmc
cmpsb
adc
sub
dec
push
push
fsts
repz
mov
mov
mov
xlat
sbb
decb
jno
xor
lcall
or
inc
cwtl
inc
and
int
repnz
shll
or
and
and
es
pop
fisubl
sti
clc
jb
xor
mov
cmp
push
pop
adc
adc
and
add
sbb
push
aas
pop
pop
pop
xchg
cmp
adc
lret
cmc
sub
cmp
inc
movsl
mov
cmp
mov
pop
jns
jne
sub
iret
mov
es
ret
xchg
inc
cmp
push
fiadds
fistps
test
mov
addr16
repz
jns
stos
andb
add
xor
adc
push
dec
lahf
sti
push
cmp
popf
les
imul
sbb
daa
cmp
enter
lar
add
adc
test
imul
adc
pusha
sahf
arpl
icebp
xchg
arpl
jb
mov
inc
daa
cmp
mov
shlb
sbb
pandn
push
mov
cmp
inc
rcll
mov
lds
mov
loope
dec
dec
push
jle
mov
jecxz
dec
gs
sub
jle
fnsave
push
push
push
int3
sbb
imul
mov
rclb
insl
fldcw
out
or
ljmp
in
dec
cli
movsl
fmulp
mov
loope
je
decb
push
xor
jae
xor
stos
out
dec
push
xlat
sbb
and
xor
mov
push
loopne
add
adc
lahf
fiadds
add
pop
loop
mov
cmp
lahf
stos
jnp
out
and
xchg
loope
mov
adcb
lock
shll
pop
pop
negb
fidivrl
rorb
sbb
jle
jbe
push
mov
leave
pop
ljmp
jp
pop
imul
mov
movsb
das
add
mov
mov
mov
and
aaa
mov
lcall
out
cli
movsb
mov
cli
jb
test
pushf
in
loop
lcall
outsb
add
addb
jae
daa
jge,pt
into
les
mov
enter
das
sub
jo
pop
jle
cld
mov
push
dec
dec
xchg
mov
call
xchg
decb
and
lock
or
dec
adc
cmp
loopne
adc
in
xchg
lods
sti
repz
xchg
sarb
daa
je
and
lods
in
clc
sahf
ss
lds
add
mov
mov
cmc
stc
adc
ljmp
or
mov
sub
sbb
ret
xor
and
push
scas
jnp
jecxz
mov
sub
adc
pop
test
icebp
mov
lret
test
stos
test
lcall
out
jecxz
push
pop
cmp
jnp
dec
out
sbb
mov
add
xchg
push
adc
popa
ficompl
dec
lods
xchg
cmp
and
and
and
adc
mov
xor
lea
sbb
mov
clc
adc
paddq
sub
pushf
adc
push
shll
or
cmp
mov
push
xchg
loop
cltd
add
sub
xchg
lret
jns
or
mov
call
add
sub
je
mov
xor
movlps
mov
push
adc
sahf
loop
scas
sub
fmul
inc
outsb
pop
mov
rcrl
mov
lock
mov
mov
aaa
daa
add
adcb
cli
cmp
pop
ret
out
xorb
sbb
stos
pop
cmp
add
lcall
fistps
in
push
nop
mov
aas
aaa
out
movsl
outsl
jbe
sub
sahf
out
sar
je
lods
xor
repnz
dec
lahf
out
mov
imul
push
out
mov
jbe
jg
add
les
pop
int3
and
adc
dec
mov
mov
fldenv
frstpm(287
inc
mov
mov
cli
or
xor
mov
faddp
pop
jmp
jecxz
call
mov
xor
adc
mulb
scas
pop
xlat
addb
cmp
jmp
push
push
mov
jmp
and
std
imul
add
mov
sub
mov
inc
jge
add
mov
scas
fs
int
insl
or
insb
and
divl
cmp
push
shlb
jl
mov
aad
dec
mov
mov
xchg
jns
arpl
sub
add
mov
sub
sti
cmp
xchg
out
adc
insb
sub
xchg
mov
adc
mov
xchg
mov
leave
jge
cwtl
push
fistps
mull
pop
xchg
data16
addb
outsl
js
lret
sub
sbb
ss
add
sahf
fs
call
out
sub
stos
inc
ja
lcall
add
dec
in
cwtl
adc
adc
dec
adc
test
mov
xchg
cmp
ret
add
nop
mov
mov
dec
xor
cmpsl
xorb
mov
cmpsb
out
jecxz
lods
stos
in
sbb
es
sti
arpl
lock
jnp
add
xor
cmpsb
out
faddl
mov
addr16
fdivl
xor
jne
push
pop
sbb
ss
call
pop
insl
mov
lcall
lock
out
jmp
movsl
leave
add
subl
inc
loop
ja
jnp
mov
bound
or
or
sub
or
and
icebp
cmc
cmc
push
push
inc
ret
push
dec
insl
les
sbb
repz
fwait
sbb
xor
inc
roll
ret
and
sub
mov
inc
add
jp
sbb
mov
and
or
orl
jg
addr16
xor
mov
rcrl
push
test
subl
imul
test
sbb
pop
pop
popl
clc
or
fdivr
mov
rcrb
xchg
jnp
aad
pop
fimull
inc
fdivp
mov
mov
add
scas
icebp
sbb
sarb
push
and
push
or
sbb
push
cltd
sub
enter
lcall
adc
dec
lods
cld
sbb
sub
ja
nop
stos
ret
lcall
mov
in
adc
shlb
jecxz
cmp
cmc
daa
imul
pop
ret
enter
mov
cmc
lds
or
dec
jg
ret
out
jecxz
stc
mov
out
ret
sbb
pop
out
xchg
adc
xchg
mov
mov
dec
loope,pn
push
fs
inc
jnp
in
fisttpl
sbb
sub
sub
in
test
cmp
adc
in
enter
xor
fimuls
rcll
fimull
mov
scas
sub
inc
add
push
mov
xchg
sbbb
cwtl
int
int3
xchg
rcll
out
jmp
in
adc
cs
and
pusha
sub
push
or
ret
call
sbb
jl
or
hlt
lock
cmp
cmp
out
popf
cmpsl
jbe
mov
pop
xchg
sbb
cmp
sbb
fisttpl
xchg
test
mov
pop
cmpsb
mov
dec
mov
rclb
adc
mov
mov
test
sahf
stc
mov
lret
jmp
jmp
lds
stc
aam
aam
push
push
dec
addb
bound
hlt
into
je
or
sub
sbb
or
xchg
adc
cmpl
cmpsb
add
outsb
out
or
pop
xchg
jl
idiv
push
xchg
divb
mov
jmp
loope
xor
xor
mov
and
repnz
fcmovu
fs
hlt
pop
push
jns
daa
mov
addb
xor
cmp
fsubp
mov
jae
cmp
sub
mov
pop
iret
pop
lcall
dec
ret
imul
or
xchg
push
test
arpl
fiaddl
mov
add
mov
sbb
cwtl
and
sbb
hlt
pop
lods
inc
or
addl
in
pop
mov
adc
ja
pop
int3
in
test
insl
adc
fdivs
jno
mull
out
fwait
es
stos
inc
nop
sub
sub
xor
jle
incb
stc
dec
aam
hlt
inc
pop
dec
test
mov
jno
mov
inc
jo
popa
dec
push
out
cmp
hlt
sbbb
inc
xor
cmp
pop
mov
mov
mov
pop
mov
xchg
lret
cmpsb
arpl
sub
jmp
fld
or
jne
xchg
inc
popf
enter
mov
inc
mov
mov
in
jae
cmp
cmp
xchg
inc
xchg
mov
outsl
fisttpll
jecxz
inc
add
aad
mov
sub
popf
out
inc
aam
mov
stos
outsb
and
fsubrl
outsb
adc
pop
or
js
cmp
iret
gs
and
push
clc
lds
in
les
lret
jae
cmc
movb
inc
xchg
add
outsb
bound
cmp
cmp
test
hlt
and
int3
dec
mov
repnz
push
test
adc
sbb
clc
mov
pop
mov
das
mov
xlat
mov
sub
push
test
push
popf
cld
mov
jb
ds
pop
popa
and
jo
push
nop
addr16
and
jae
push
aam
test
dec
cld
ds
and
flds
cld
lret
and
mov
xchg
sbbb
out
aam
dec
xor
push
shlb
imul
mov
into
icebp
sbb
push
adc
fwait
popf
rorl
xor
psllq
push
sar
or
inc
loop
pop
pop
mov
mov
outsl
and
stos
call
cmp
push
push
and
inc
out
dec
stos
out
in
test
xchg
aaa
cmp
movsb
cs
jl
mov
pop
dec
imul
lahf
and
inc
das
adc
adc
mov
das
out
jg
lret
push
or
in
pop
jno
test
push
add
popa
xchg
add
mov
lds
add
xor
adc
cmp
aad
mov
sub
sar
mov
out
sbb
cmp
repnz
sbb
stos
or
cld
cmpl
std
into
inc
jae
pop
sub
popf
inc
jnp
xlat
loope
mov
mov
xchg
loope
push
push
xchg
push
pusha
xor
xchg
mov
lds
js
xor
inc
int3
or
dec
inc
and
out
in
psrld
push
and
pop
rorb
and
int
mov
pushf
mulb
cmpsb
call
aas
add
inc
push
jge
and
dec
fnstsw
pop
xchg
mov
popl
shll
xor
movsl
add
mov
mov
hlt
cmp
inc
jnp
inc
mov
mov
roll
sub
and
adc
mov
fs
daa
mov
in
jle
pop
jmp
sub
lcall
lret
jge
rolb
rcrl
mov
iret
jge
shlb
add
bound
fisttpll
mov
mov
outsl
rcll
stos
sbb
sahf
add
push
add
xchg
fmull
mov
cmpsl
xchg
ret
bound
cmp
sub
fcomi
cwtl
jle
and
mov
arpl
push
rcrl
adc
jb
push
cmpsl
push
pop
loop
dec
nop
in
adc
jns
or
ja
fwait
xor
sbb
fs
push
imul
fldenv
inc
jns
loop
ret
and
push
xchg
pop
or
cld
xchg
jnp
cmp
pop
or
add
inc
and
out
out
cltd
cmp
js
jg
hlt
dec
mov
cmp
shlb
loop
push
movsb
sbb
clc
dec
push
sbb
arpl
mov
or
adc
nop
divb
stc
pop
lret
jecxz
cmp
push
lret
sahf
cmpl
cmp
je
push
cs
popa
mov
repnz
ret
push
mov
aam
cmp
roll
lea
cld
cmp
cmp
out
test
clc
push
repnz
out
jno
shlb
cli
add
lods
adc
mov
rcl
mov
dec
enter
mov
fstl
sbb
cld
popa
sbb
add
out
orl
fs
inc
lret
jnp
inc
mov
dec
jns
cmp
test
mov
and
push
dec
push
mov
rol
sbb
cmp
pushf
push
mov
shll
sbb
push
pop
xor
xchg
sbb
sbb
cli
addr16
or
jl
cld
insl
movsb
shl
insl
sbb
loopne
test
mov
push
dec
jecxz
cmp
cmp
xchg
xorb
or
aad
pop
inc
dec
adcb
pop
fs
mov
sarl
inc
in
or
push
cmpsl
clc
fildl
dec
in
popf
jne
push
inc
xchg
andl
adc
jne
fnstcw
imul
pop
mov
xchg
mov
jne
sbb
adc
cwtl
cli
out
fmull
xchg
test
cmp
xchg
inc
pop
lret
icebp
push
mov
pop
pusha
pop
mov
icebp
lods
fstpl
push
xor
xor
lahf
aas
cmp
cmp
mov
fs
adc
push
inc
hlt
std
cld
xchg
nop
insl
in
daa
xchg
pop
adc
repz
cmp
mov
divb
and
sub
add
sub
adc
sub
sbb
cli
jmp
mov
sub
mov
xchg
data16
pusha
icebp
lods
out
mov
popa
nop
test
jle
fisubs
scas
clc
or
mov
jle
lret
mov
pop
scas
test
hlt
popa
leave
xor
pop
xchg
xchg
or
in
cli
inc
repnz
jbe
jno
xor
add
int3
aas
cmp
dec
gs
lods
call
xor
fsubs
out
repz
mov
dec
sub
aas
orl
mov
les
jbe
rorl
push
int3
fstpl
xor
outsl
rol
mov
rcrl
sub
int
jl
jl
xor
cmpsb
out
adc
lret
outsl
fildll
dec
into
cmp
stos
push
push
push
push
mov
addl
sarl
add
fbld
fsts
ss
mov
out
mov
in
cmp
inc
aad
sub
mov
orb
orb
sbb
mov
dec
cld
int3
sub
imul
sar
inc
pop
mov
insb
decb
xchg
aad
xor
test
jmp
int
jecxz
clc
lcall
mov
inc
scas
pushf
sub
fildll
out
call
mov
inc
jnp
cmp
adc
jnp
into
test
int3
adc
lods
movsl
in
mov
ss
popf
cs
jo
aaa
sbb
ss
pop
sub
lret
sbb
jb
repz
mov
push
jo
inc
test
xchg
rclb
mov
dec
dec
cmc
and
jmp
rolb
in
xchg
mov
outsb
scas
sub
scas
jl
and
stos
clc
xchg
icebp
mov
dec
and
sbb
mov
ficoms
adc
mov
and
xchg
sub
aam
cmp
mov
dec
and
adc
sub
mov
lds
adc
add
sub
in
ficoms
lods
pop
inc
xor
mov
cmp
es
dec
repnz
arpl
jbe
repz
fisubs
xchg
cmp
lret
pop
jmp
int
inc
les
jle
dec
lds
imulb
sahf
cmp
inc
xchg
cmpsl
push
movsl
sbb
mov
mov
outsl
repnz
inc
sub
sbb
pop
push
xchg
cli
jo
cmp
sub
cmp
les
add
lods
or
cmpl
cs
mov
test
mov
xchg
lods
inc
push
pop
cwtl
push
mov
mov
pop
jmp
test
cmp
fsubr
clc
loopne
cmpsl
xchg
push
js
das
andl
add
mov
xchg
dec
or
push
mov
lret
inc
aas
divb
fists
or
push
xchg
push
shll
insb
jns
jo,pn
shl
inc
and
push
ds
std
xchg
lods
daa
out
sub
out
stc
sbb
adc
and
dec
xor
std
in
pop
push
sub
and
sbb
push
adc
rcrl
cld
mov
jne
xor
xor
push
out
mov
or
scas
daa
cld
cmp
xor
mov
push
sub
push
mov
popf
add
sub
fwait
or
inc
or
jl
mov
mov
jae
sbb
fdivrp
push
push
aaa
xbegin
ret
push
xchg
repnz
fstpl
jg
in
sbb
fcoms
push
out
push
adc
leave
or
pop
sti
test
adc
push
mov
dec
insb
jo
pop
pop
xor
rcr
and
std
and
aam
leave
shr
cmpsl
cmp
into
sahf
daa
jbe
js
roll
cmp
and
mov
repnz
or
xchg
add
stos
gs
jne
or
xor
rclb
sbb
subb
cld
mov
jecxz
cmp
aam
arpl
dec
test
xor
sbb
call
sub
out
cmp
scas
xor
lods
call
enter
pushf
test
cmc
sub
sub
insl
scas
xchg
jle
jle
cmp
out
mov
fwait
stc
mov
inc
sbb
cwtl
xchg
xchg
jno
mov
dec
adc
jg
je
movsl
push
pop
in
lods
jo
mov
or
mov
adc
in
es
pushf
sbb
stos
lret
dec
cmp
dec
xchg
sub
mov
fnsave
jnp
daa
push
lahf
mov
mov
sbb
loop
sub
add
enter
movsb
pop
popa
rcrb
lods
add
add
and
lods
or
cmp
mov
sub
sub
pop
jae
jne
jno
cmp
add
pop
test
jbe
dec
mov
popf
mov
decl
in
push
or
sbb
popf
popw
outsb
inc
mov
out
push
xchg
xchg
sbb
dec
into
mov
push
ja
roll
shrb
cli
lods
add
rorl
pop
xor
sbb
jecxz
adc
rcrb
nop
dec
cmp
mov
cmp
rcll
cmp
fisubrs
jnp
clc
or
lcall
add
jle
sbb
inc
mov
shlb
repz
imul
fs
jbe
sbb
neg
bound
xor
test
jne
add
mov
pushf
or
xor
push
adc
ja
jmp
cmp
and
or
sub
psllq
mov
out
push
mov
ret
stos
add
jecxz
xor
mov
jb
and
mov
int
outsb
jno
push
hlt
subb
sub
push
mov
cmc
ljmp
mov
sbb
push
jns
or
insl
jbe
xor
lret
test
into
pop
push
call
dec
es
and
scas
push
mov
sbb
jp
jne,pt
jnp
push
cmp
cmpsb
mov
or
repnz
adc
inc
sarb
add
outsl
cltd
inc
or
push
lods
je
mov
push
cmp
jne
mov
mov
cltd
ljmp
nop
inc
push
pop
xor
mov
add
ja
jne,pt
test
dec
lds
inc
cld
fs
ss
cmp
inc
adc
xchg
dec
jae
icebp
mov
les
popf
pop
stc
int
or
mov
mov
inc
insb
popf
cmp
fdivp
xchg
movsb
lea
or
addr16
mov
mov
and
mov
jg
arpl
xor
pop
add
out
inc
and
mov
sbb
inc
cmpsb
in
addr16
movsb
ljmp
add
jbe
pop
je
and
xchg
sbb
add
outsl
repz
sbb
xchg
shrl
stc
and
pushf
cli
stos
sub
pop
xor
arpl
inc
push
lret
dec
out
sub
sar
fiaddl
push
pop
adc
mov
xchg
dec
cmp
popa
lret
xor
lret
sbb
sbb
jle
xchg
jp
out
xchg
jo
fs
adc
hlt
cmp
imul
pop
lahf
mov
fisubl
test
imul
adc
xor
inc
shl
insb
stos
and
push
adc
test
dec
pushf
pop
xlat
rcrb
popa
aaa
movl
mov
out
jl
xchg
lret
cltd
inc
repz
ret
cli
enter
pop
pop
ss
iret
imul
mov
xchg
mov
test
lds
pop
lret
ss
xor
out
movsl
pop
sbb
cmp
cmp
imul
lea
cmp
stos
jp
les
in
xchg
arpl
lods
push
pop
cmc
sub
and
xor
mov
cmp
adcl
jno
out
shrl
sahf
test
add
or
dec
lcall
fmull
lods
mov
sbb
imul
mov
repz
inc
loop
mov
test
mov
or
ror
rclb
push
scas
repnz
repnz
jns
loopne
inc
fisubs
mov
int3
sbb
fiaddl
sbb
rorb
sub
pop
clc
sbb
inc
xchg
fistl
hlt
xor
leave
jmp
mov
call
outsl
lods
cmp
ss
pusha
adc
pop
push
push
pop
inc
inc
lds
les
fisubs
adc
enter
xchg
sbb
mov
sbb
int3
ja
or
adc
mov
mov
je
bound
cltd
loopne
js
adc
mov
stc
sub
cmp
insl
negb
es
lea
mov
stos
mov
insb
dec
or
ja
jo
ret
lock
pop
lret
push
push
hlt
mov
fwait
adc
or
stc
push
insb
push
pop
lods
mov
xchg
mov
icebp
popf
sbb
or
xchg
imul
jmp
stc
jb
bound
mov
xor
pop
mov
jmp
leave
pop
push
dec
inc
ret
sub
cs
in
in
inc
addl
enter
cmpsl
add
inc
jge
mov
repz
pop
lds
xor
in
cmc
sub
adc
sahf
push
icebp
sub
or
frstor
movsb
sub
sbb
out
cmovo
in
push
cmp
clc
loop
out
sbb
jl
adc
nop
sti
push
mov
and
stos
fwait
lea
mov
mov
aaa
sbb
dec
mov
mov
pushf
mov
mov
pusha
insl
mov
sub
lcall
jno
mov
scas
stos
popf
mov
push
lods
mov
daa
decl
stc
cmp
test
pop
popa
pop
adc
or
cmp
add
fldt
je
add
loope
push
and
shrb
pop
ret
ja
xor
cltd
imul
sar
pop
mov
aam
ja
pop
xor
lods
mov
pop
out
inc
js
xor
mov
addb
xor
jge
push
ja
mov
mov
mov
leave
lcall
dec
pop
mov
jns
mov
and
in
inc
in
mov
decb
lea
jp
cmp
lods
std
fisttps
pop
nop
outsl
sub
push
add
test
clc
in
pop
js
cmpsl
ljmp
aam
rclb
or
insl
adcl
mov
stc
lcall
sti
push
out
jmp
adc
jo
fs
add
fidivs
sbb
jns
xchg
int3
xor
shr
shrl
push
lret
cmp
mov
xchg
add
push
mov
jge
inc
fisubl
test
dec
lea
or
cwtl
in
call
gs
cmp
dec
pop
xchg
mov
loopne
dec
adcb
add
pop
cmpsl
or
les
mov
out
adc
jae
popf
jb
decl
jmp
inc
jle
ljmp
shl
sbb
clc
arpl
xchg
daa
outsl
int3
jno
shll
lock
cs
imul
xchg
or
inc
outsl
gs
xchg
clc
mov
std
push
push
cmp
fimull
push
scas
test
in
and
or
jbe
mov
int3
mov
xor
test
or
mov
ficoms
jbe
sub
leave
call
push
adc
fsubrs
mov
sub
jb
push
out
sub
mov
cmp
and
out
sbb
xchg
shrb
shrl
jg
mov
or
das
mov
movb
fcomip
outsl
push
pop
jne
imul
sub
loopne
ljmp
rcr
pop
repnz
icebp
leave
shl
stos
nop
leave
lods
mov
fcompl
pop
jecxz
cmp
or
cmp
clc
inc
loopne
sti
mov
xor
or
mov
inc
pushf
or
or
xor
inc
xchg
pop
jmp
mov
cltd
pop
outsl
sub
std
adc
hlt
fidivl
mov
sbb
xchg
data16
ja
rolb
stc
popa
mov
mov
inc
movsl
inc
stos
mov
inc
cmc
mov
mov
sbb
inc
push
movl
loope
dec
adc
int
xchg
cmpsb
xchg
xor
mov
cmp
add
mov
inc
mov
push
aaa
xlat
pop
cld
lods
jnp
adc
fisubrs
shl
cld
call
sub
mov
out
push
cmp
je
dec
imul
add
xlat
outsl
xchg
xchg
dec
fildll
adc
dec
ja
movb
sub
mov
pusha
pushl
sar
push
inc
dec
addl
cli
jo
sbb
xor
aaa
mov
cmp
jne
sub
mov
sub
and
xchg
js
xorb
rcrb
int
in
les
push
pop
data16
pop
int3
mov
pop
lcall
dec
outsb
mov
test
xchg
test
mov
lds
test
or
movsl
xchg
fldt
and
adc
inc
lds
scas
loopne
adc
aad
aas
mov
sbb
push
int
pop
cmp
push
mov
jae
popa
sarb
mov
aas
pop
fistps
roll
push
outsl
add
lret
adc
push
les
imul
mov
cmc
pop
popf
or
in
data16
and
mov
jmp
xor
mov
mov
adc
pop
jbe
push
inc
aas
in
add
loope
int3
and
mov
adc
mov
mov
xor
clc
or
sbb
idivb
test
insb
adc
add
mov
sub
pop
idivl
sbb
int
addl
mov
sbb
xchg
cmpsl
rclb
dec
push
aaa
js
gs
loopne
cmpsl
and
cld
cmp
loope
dec
push
lcall
leave
scas
pop
adc
fnstcw
xor
mov
mov
sti
pop
add
cwtl
cmp
push
popa
jnp
dec
movsl
mov
xchg
pop
fwait
cmp
pop
and
decb
aas
jbe
cs
sbb
xchg
cwtl
int
or
stos
call
mov
jecxz,pt
or
ljmp
fmuls
insl
adc
sbb
sub
loop
jbe
clc
sbb
add
sbb
iret
sbb
leave
jmp
dec
mov
cmp
ja
orl
mov
mov
jle
pop
sbb
mov
loopne
aad
mov
inc
ds
stos
mov
jae
adc
pusha
aad
mov
xchg
insb
lods
cmp
rolb
ret
jns
lea
mov
jmp
adc
in
sahf
mov
and
jno
shlb
pop
fcomps
out
xlat
lcall
pop
inc
cli
inc
pop
icebp
and
into
push
jbe
lret
jnp
rcl
cmp
push
subb
icebp
mov
and
sahf
enter
subb
std
mov
sbb
mov
sbb
sbb
test
shlb
xor
push
dec
push
mov
push
je
mov
dec
sbb
adcl
pop
lods
test
fs
mov
and
cld
mov
jb
pop
xor
add
lcall
fiaddl
mov
fdiv
repnz
hlt
push
mov
cmp
out
int3
mov
nop
fisttpl
mov
cmpsb
jno
daa
js
cld
sbb
mov
or
xchg
mov
mov
add
lahf
pop
jmp
jb
int
out
jmp
mov
jne
ret
sarb
shrl
pop
test
jbe
fldenv
jo
loop
jp
sub
cli
sub
pop
and
mov
mov
fnstsw
mov
stc
jo
jmp
jnp
cmpsl
push
push
jno
and
mov
cmpsb
cmpsb
jl
lea
mov
push
vpsllq
cmp
dec
das
icebp
push
testl
jo
pusha
.byte
lret
jl
jno
add
pop
xor
in
outsl
jbe
adcl
test
out
outsb
mov
xchg
xor
adc
pop
xchg
fisubrl
addr16
mov
sbb
xchg
push
std
bound
insl
jecxz
jb
and
hlt
iret
push
fsubl
sbb
pushf
push
mov
sbb
cs
jb
adc
ret
xor
xor
enterw
adc
mov
lock
stc
lcall
mov
sarl
iret
push
inc
sbb
mov
testb
lret
testl
loop
js
inc
out
inc
sbb
sbb
adc
mov
mov
xor
push
xor
mov
lds
or
mov
push
jbe
lahf
out
adc
jnp
sbb
je
fadds
js
sti
fildl
push
movsb
push
jmp
jbe
jp
mov
or
mov
pop
xchg
fs
or
pop
jne
stos
lahf
push
adc
mov
add
sbb
movaps
push
mov
add
int3
inc
scas
or
out
mov
mov
cmpsb
stc
sub
subb
cs
inc
popa
sub
int
push
xor
dec
push
frstor
push
inc
outsb
inc
xchg
enter
fcoms
fimuls
sub
inc
mov
mov
fs
xor
or
out
mov
frstor
mov
mov
pusha
push
ficoms
jmp
sub
push
daa
mov
dec
les
sbb
cltd
pop
push
or
leave
and
or
sub
cmp
les
rcll
cmp
fiadds
movl
das
inc
das
xchg
xor
ja
cmp
jmp
in
xchg
mov
iret
dec
mov
out
mov
inc
inc
inc
and
test
aas
test
push
xchg
push
std
gs
aad
test
scas
enter
testb
sbb
add
push
js
lds
lods
jne
jbe
pop
and
addr16
fidivs
cmp
push
or
pop
stos
lret
iret
mov
mov
sahf
clc
mov
mov
cwtl
push
mov
outsl
mov
sbb
sub
cmc
pop
ljmp
xchg
xchg
inc
vmovhps
repz
aad
sti
rcrl
pop
lods
lods
popw
scas
dec
add
push
mov
push
ret
xor
add
push
and
xchg
sar
loopne
in
cmp
stos
ja
fstl
lea
or
repnz
out
xor
sbb
or
cld
cmpsb
aam
into
and
xchg
push
cmp
ja
adc
fiaddl
fwait
inc
fildll
iret
popf
fistpll
xor
ss
dec
out
xor
mov
push
fildll
xor
add
mov
cmp
sbb
shrl
lds
loop
fiadds
sub
and
leave
xchg
inc
fisubrl
rorl
into
jmp
mov
dec
dec
insb
dec
push
sub
inc
popa
out
imul
mov
mov
or
jge
lcall
in
test
lods
add
jo
jb
xor
xchg
add
in
das
or
sub
pusha
lret
mov
fs
or
cmp
cwtl
push
insb
ss
repnz
sub
jg
or
sti
popf
lret
pop
fidivs
les
pop
dec
cmpsb
pop
xchg
and
mov
inc
movsl
in
push
push
shl
push
add
loopne
push
add
in
jbe
add
int
sub
paddsw
sti
xor
shrl
fdivs
ja
mov
jp
mov
ja
add
fstpl
or
mov
push
mov
xchg
hlt
out
arpl
into
ret
lahf
inc
nop
dec
cld
outsb
lds
iret
inc
mov
mov
and
add
and
xor
xlat
or
jg
shl
mov
out
or
mov
inc
xchg
sbb
fmull
imulb
movl
cwtl
fisubs
addr16
fnstcw
cs
aam
imul
fidivrl
shrl
shll
jae
jnp
bound
das
sub
aam
pushf
bound
sub
mov
bound
ds
es
lock
dec
cltd
fxch
pop
insb
into
dec
iret
dec
into
lcall
loopne
imul
mov
pop
outsb
inc
mov
lret
jbe
jge
jl
out
lds
movsl
adcl
dec
ljmp
add
sbb
adc
dec
sbb
ret
lret
lods
push
mov
mov
cwtl
mov
sbb
mov
popa
push
xorl
pop
out
sarb
mov
xchg
mov
arpl
add
cwtl
aad
xchg
xchg
push
cmc
icebp
les
cmp
les
and
adc
lods
xchg
movsb
adc
outsb
leave
sbb
xlat
shlb
in
fwait
or
cmpl
xor
imul
or
out
push
push
popf
mov
mov
stos
pusha
pop
sub
mov
insb
push
cmpsl
and
or
pop
das
orl
test
stos
jo
pop
or
jg
jns
fs
lods
fistl
xor
ja
xlat
cs
sbb
fdivrs
cwtl
push
mulb
xchg
rcrl
cmp
xchg
leave
or
rcrb
cltd
adc
or
dec
dec
cltd
ds
loop
add
popa
lods
outsb
dec
mov
mov
dec
in
sahf
push
imul
mov
pop
push
insb
or
ret
jno
mov
xor
sub
es
and
sub
js
push
xor
arpl
aad
inc
les
inc
sbb
sbb
xchg
inc
or
cmp
jns
fwait
or
xchg
ja
in
cmp
xor
cwtl
insl
cmp
push
sbb
xor
out
adc
mov
outsl
push
push
add
mov
fwait
and
icebp
movsb
xlat
adc
jno
mov
dec
mov
stos
mov
nop
out
pop
push
roll
add
and
mov
incb
mov
adcb
fisubrs
cmc
lret
test
aaa
push
sbb
shrl
jno
add
jge
jne
jg
cmp
or
cmp
sbb
push
aam
data16
sub
mov
xchg
cwtl
pop
push
adc
jge
mov
and
dec
leave
add
mov
mov
xor
leave
inc
pusha
fs
leave
pop
mov
cmp
jae
or
or
push
jno
sti
lahf
xchg
out
jle
jl
push
push
jp
sbb
call
nop
orb
es
repnz
sub
rcrb
adc
clc
hlt
jl
dec
xchg
mov
arpl
push
adc
dec
cmp
cmp
pop
addb
jg
mov
cmp
aam
cmp
cli
stos
cmp
jbe
inc
call
jb
lods
jecxz
push
cld
inc
test
adc
mov
mov
hlt
test
xlat
dec
popf
into
les
call
inc
xchg
sti
cwtl
dec
cwtl
outsl
aaa
dec
lods
rclb
pushf
aas
std
popa
es
jge
rorl
dec
sub
dec
int3
cmpsb
cmpsl
jno
scas
jno
xchg
jb
pop
cmp
out
divb
xor
outsb
push
mov
sub
loop
cmp
iret
stc
gs
pop
mov
push
loope
aad
jge
dec
stos
xchg
mov
aaa
or
imul
sarl
in
or
xlat
lock
push
cmc
rolb
xor
mov
cmpsl
or
jp
je
shll
add
cmp
int
idivb
gs
fs
lods
bound
xlat
pushf
mov
push
sub
cwtl
outsb
dec
test
jl
movsb
aaa
sub
mov
movsl
in
ss
mov
cmpsl
and
lea
jg
or
orb
loop
xor
repnz
cmp
push
lods
pop
add
ds
add
cmpsb
inc
sub
aas
rolb
clc
loope
cli
je
sbb
icebp
cmp
je
xchg
sar
les
mov
into
js
mov
add
inc
sbb
push
push
andb
sahf
cmp
movsb
fiadds
dec
inc
push
mov
pop
pusha
inc
jns
stos
lahf
clc
stos
xchg
js
push
xchg
cltd
test
std
sbb
inc
mov
imul
fcom
sub
cmp
mov
dec
fisubs
jge
lods
mov
push
adc
adc
push
aam
add
pop
sub
fsub
lods
inc
lods
sbb
jb
push
cmp
xchg
push
jae
and
enter
push
mov
xchg
xor
and
mov
gs
icebp
push
ja
sub
mov
cwtl
addb
add
jo
sbbb
sub
aaa
aas
ret
popf
sub
loop
jo
xlat
jno
mov
out
jno
and
inc
mov
cs
mov
cmc
repnz
shll
xor
mov
rcrl
cltd
add
mov
ret
ror
xchg
movsb
cmc
xchg
rolb
in
xchg
pop
sti
pop
fidivrs
or
add
inc
push
mov
xorl
cli
push
mov
lcall
dec
xchg
mov
jbe
push
lods
sub
push
mov
scas
push
fmul
cmp
xchg
nop
cwtl
adc
inc
test
add
idiv
adc
push
add
sbbb
cld
int3
pop
jl
mov
pop
inc
lret
dec
adc
ret
gs
xor
pop
popf
or
hlt
mov
divl
xlat
clc
jmp
dec
les
xchg
pop
or
jne
xchg
lret
stos
xor
xchg
xchg
mov
mov
int3
push
push
jo
repnz
loopne
into
mov
movsb
clc
dec
adc
pop
cli
imul
popa
std
pop
sbb
adc
fucomip
xchg
mov
mov
aaa
push
ja
frstor
or
jle
xchg
rclb
ror
nop
cmpsl
les
into
pop
pop
aad
out
mov
inc
sahf
fistps
and
shll
cmpb
pcmpgtb
ror
or
popf
add
xchg
orb
rclb
inc
mov
lahf
mov
shll
aam
adc
pop
jns
mov
cmp
repz
xchg
jno
lock
pusha
jg
jecxz
in
std
cmp
rcrb
lahf
enter
movsl
push
jmp
movsl
je
sbb
push
mull
pop
push
movsb
fdivr
in
mov
loope
or
arpl
cmp
or
jae
stos
mov
jnp
push
pop
xchg
mov
lods
in
inc
repz
xchg
fildll
stos
mov
clc
lahf
sbb
mov
cmp
mov
pop
jle
lods
and
aad
fildll
xor
out
add
add
jmp
std
std
fisubl
sbb
mov
mov
jle
lret
inc
xor
inc
stos
and
or
pop
fisubl
mov
adc
shlb
mov
push
insb
cwtl
cmp
xor
pop
arpl
cli
xchg
fstps
fcmove
sbb
mov
dec
sbb
xchg
shll
inc
loopne
cmp
adcl
fstl
out
outsl
pushf
jle
xchg
fwait
sbb
inc
fsub
xor
jge
fstpt
mov
pop
lods
std
sbb
out
inc
jnp
lods
mov
pop
sbb
or
mov
stc
sbb
call
and
cmpsl
test
mov
sbb
mov
lret
mov
push
sub
orl
mov
movsb
fcoml
andl
stos
cs
push
ljmp
pop
mov
xchg
push
and
xchg
in
dec
fisubrs
xor
cmp
out
fsubs
mov
dec
imulb
cmp
hlt
mull
jmp
mov
mov
popa
mov
add
in
mov
mov
andb
add
add
mov
out
mov
ss
mov
push
jge
pop
insl
push
mov
and
outsl
push
icebp
jecxz
dec
or
xor
test
lock
mov
mov
jge
pop
mov
sub
call
sarl
cs
adc
sub
cltd
sbb
jns
mov
bound
sbb
loop
sbbl
imul
arpl
addb
jbe
dec
enter
mov
mov
xchg
or
imul
push
movsl
pop
out
out
adc
push
push
scas
sub
mov
mov
pop
es
ja
fwait
jns
popa
rorb
and
push
ret
test
jle
push
cli
cs
push
jno
mov
int
lcall
cs
icebp
xchg
arpl
pushf
xchg
imul
cwtl
mov
pop
adc
sti
es
mov
push
push
sbb
sub
cwtl
movlhps
in
jbe
outsb
stc
adc
cmp
xchg
scas
lahf
pushf
arpl
jg
push
mov
inc
cwtl
repnz
mov
jle
les
mov
inc
fwait
push
jns
ss
cwtl
das
arpl
or
in
xchg
sahf
cmp
stos
call
pmaxsw
xchg
popf
xlat
or
jg
push
dec
xor
xor
cld
mov
add
jb
or
das
and
imul
mov
arpl
pop
jp
jo
fdivrl
sbb
pop
mov
sar
ficoms
jbe
inc
std
lcall
enter
cmpsl
dec
insl
jmp
dec
pusha
mov
sbb
mov
sub
sbb
push
cltd
mov
cmp
inc
or
movsl
lods
jae
in
faddl
test
aaa
push
mov
sbb
xchg
repz
pusha
inc
rol
and
pop
cmpsb
je
rcll
lahf
cmp
mov
cs
call
ret
outsb
dec
dec
hlt
ljmp
xchg
popa
push
jp
sub
call
int
call
jp
jp
mov
cmp
cltd
add
sbb
mov
adc
adc
push
mov
xor
mov
and
adc
add
xchg
xor
jnp
movsb
cmc
dec
test
inc
mov
pop
ss
mov
or
imul
jl
cmp
cmc
je
inc
dec
pop
out
aaa
clts
or
xchg
ret
xlat
mov
popf
imul
out
jbe
outsl
mov
xor
mov
nop
jg
mov
cmp
mov
mov
les
push
push
fbstp
add
cs
les
push
lods
jb
hlt
popa
movsl
jmp
mov
out
aad
loop
xchg
xchg
stos
mov
and
pop
loope
xor
cwtl
sbb
test
push
adc
cli
test
mov
stos
mov
ljmp
pop
mov
inc
xchg
decb
jns
xchg
loope
xchg
xchg
sub
dec
aas
pop
and
mov
int3
shll
jg
imul
pop
test
pop
int3
lock
xor
imul
xor
sub
gs
jmp
pop
jns
mov
insl
and
ljmp
loopne
mov
jo
mov
jns
imul
imul
dec
aam
sar
dec
jns
push
pop
jne
test
or
call
std
adc
mov
add
dec
pop
jo
incl
push
push
and
push
inc
sbb
inc
sbb
dec
dec
xchg
mov
cs
les
mov
std
jo
ret
std
xchg
lods
push
and
pop
out
in
xor
aaa
dec
inc
cmpsl
arpl
adc
inc
loop
bound
jg
add
out
mov
mov
imul
movsb
outsb
cmp
lahf
outsl
xor
or
scas
repnz
cld
pop
shll
and
ss
loopne
sti
es
cwtl
nop
jno
jbe
mov
inc
mov
andl
movsb
dec
cmpb
test
jecxz
jmp
dec
jno
test
inc
jle
test
sub
and
jo
shlb
jl
je
mov
push
cmc
aas
out
dec
stos
loope
scas
sbb
push
je
idivb
roll
xchg
pushf
inc
in
mov
pop
xor
cmp
call
cmp
les
xchg
loopne
fnstcw
dec
pop
jns
cltd
popa
icebp
pop
call
add
das
add
js
pop
sbb
outsl
add
cmp
iret
popa
fimuls
and
insb
inc
loop
insb
jne
fcmovnbe
mov
push
sub
aad
por
xorb
imul
aaa
adc
popf
rcl
test
jmp
push
lods
fwait
xor
jmp
jge
mov
inc
stos
inc
outsb
mov
jle
add
sbb
fldenv
push
pop
xor
cmp
add
fcomps
jmp
movsl
xor
dec
mov
mov
fcmovnb
fstpl
stos
mov
fcmovb
pop
in
xlat
sbb
xorl
ja
sbb
and
sub
and
imull
mov
mov
push
cmp
cltd
aam
mov
stc
sbb
pop
xor
push
iret
das
mov
mov
mov
adc
sbb
test
xor
push
ja
inc
dec
add
mov
jmp
inc
jmp
push
sbb
mov
ljmp
sub
stos
je
hlt
jle
dec
test
sbb
rol
imul
dec
das
and
cmp
push
icebp
in
je
enter
mov
adc
pop
incl
mov
je
jo
mov
sbb
xchg
mov
sahf
xchg
jge
lods
ret
inc
push
or
call
jmp
shr
pop
inc
fildl
shll
and
mov
xor
mov
xor
int3
ficoms
xlat
int
push
loope
fdiv
sub
mov
push
addr16
inc
fsub
xlat
mov
jnp
sbb
mov
stc
push
shrb
arpl
dec
arpl
adc
mov
dec
bound
jge
ficoml
mov
xor
pop
push
adc
outsb
pop
mov
addr16
add
lock
cli
cmp
stos
rcl
aaa
fisubrl
cmpsb
lods
jg
xchg
ret
cmp
dec
imul
ljmp
xchg
hlt
pop
mov
popa
dec
ss
jbe
in
mov
clc
pop
push
sarl
nop
insl
das
andl
add
lods
cli
les
aad
lret
jp
mov
out
push
mov
sti
mov
hlt
arpl
sub
adc
jb
aas
das
int3
lods
and
rol
inc
ficoms
cmpb
mov
mov
push
inc
mov
mov
icebp
lods
neg
test
sub
test
mov
js
mov
lea
movsb
cld
push
add
sahf
push
cmp
mov
repz
aaa
int
push
sbb
in
cmp
pop
add
sbb
popf
outsb
mov
sub
lods
pop
movsb
scas
sarb
and
testb
pusha
and
inc
sub
out
push
fwait
test
jbe
lret
pushf
pop
dec
push
or
test
addb
and
sbb
rorl
sbbb
mov
jg
dec
int
xorb
mov
sbb
ret
shl
aad
arpl
xchg
insb
xchg
mov
inc
clc
int3
sbbb
stos
aaa
push
adcb
sub
arpl
mov
inc
xrelease
mov
daa
xor
movswl
add
sub
ljmp
xor
and
adc
addr16
push
outsl
mov
ss
push
enter
and
bnd
push
or
data16
mov
mov
jno
jg
add
popa
xchg
je
call
das
adc
mov
cs
jmp
jbe
jne
stos
pushf
adc
test
add
dec
bound
pop
stc
push
adc
cmp
cmpl
lahf
imul
fimull
loopne
sub
in
push
cld
addr16
mov
es
pop
and
mov
pop
mov
lds
adc
push
aas
outsb
out
and
xchg
xor
push
dec
add
push
mov
inc
sub
or
mov
icebp
outsb
test
xchg
adc
into
cwtl
jns
and
jae
lahf
shll
inc
add
jg
hlt
push
dec
jp
or
ljmp
mov
pop
sahf
mov
sbb
sub
int3
cwtl
aas
cmpsl
pop
scas
rolb
mov
xlat
cmp
add
shlb
sbb
in
lods
into
lods
test
pop
sahf
xor
ror
jns
pop
int
jbe
sbb
xchg
mov
rorb
mov
dec
dec
mov
or
add
fistl
cmpsl
sti
repnz
clc
aas
dec
mov
push
adc
dec
jae
les
in
jbe
and
mov
xchg
andl
pop
fidivs
add
int3
fldt
sbb
aas
scas
fs
mov
xorl
xor
in
dec
jns
jl
hlt
push
in
push
ds
and
xchg
sbb
int3
lods
or
in
repnz
aad
mov
int
xor
ja
mov
inc
scas
out
push
stos
in
dec
lcall
dec
sub
div
jne
pop
cmp
scas
insb
sbb
xchg
sub
xchg
fdivrp
push
cmp
mov
test
mov
jb
pushf
ret
pop
push
sahf
inc
fsubs
adc
add
rolb
jno
pop
cmp
aaa
xchg
dec
xchg
int3
loopne
rol
push
jno
scas
daa
ret
clc
outsb
fucomip
loopne
xchg
sbb
pop
ds
cmpsl
add
lock
mov
dec
lods
mov
push
jno
and
xchg
pusha
adcl
fwait
mov
xor
jecxz
pslld
xchg
jb
roll
cltd
mov
js
fistl
pusha
out
or
clc
xchg
pushf
es
call
jns
or
or
stc
mov
mov
mov
rol
stc
mov
adc
hlt
cwtl
jecxz
in
pop
bound
pop
das
outsl
xor
inc
int
into
insl
in
xor
data16
stc
or
leave
cmp
mov
push
lock
add
mov
pop
loop
jmp
shll
xor
xchg
into
mov
ja
push
adcb
outsb
cmp
shld
xchg
dec
fcmovu
push
xor
push
iret
and
xchg
xlat
inc
jnp
and
shlb
lock
xchg
in
arpl
jnp,pn
cli
adc
aas
mov
ffree
std
pop
nop
aam
push
cmpsb
or
and
mov
jnp
movsb
imul
pop
addb
insb
pushf
cmpsb
in
movsb
js
inc
addr16
xchg
in
test
dec
mov
addr16
adc
push
nop
lret
mov
imul
sbb
jmp
div
ss
ror
cmp
lods
es
xchg
dec
js
shrl
jno
ret
push
iret
mov
push
scas
dec
sbb
push
sbb
test
pop
mov
xchg
ljmp
cs
rolb
xchg
dec
xor
fwait
imul
stos
outsl
mov
mov
mov
pop
gs
cli
xorl
lcall
fildll
push
add
hlt
out
xchg
jae
sub
pop
sub
repnz
mov
inc
sbb
inc
pop
mov
sub
fsubrs
ret
out
inc
divb
das
add
mov
movsbl
pusha
fisttpll
mov
push
aas
push
aas
jmp
fiadds
movsl
mov
repnz
mov
addl
mov
mov
dec
pusha
inc
cmp
stos
lret
push
dec
or
xchg
xor
insb
pop
mov
xchg
mov
scas
shlb
sbb
pop
scas
sbb
fsubrl
test
iret
add
jne
push
aas
leave
push
xchg
or
jo
in
fildl
mov
dec
sbb
push
insb
jl
les
and
stos
sbb
and
enter
and
xchg
arpl
or
inc
mov
mov
jge
mov
fcoms
cmpsl
stos
add
fnsave
adc
repz
mov
cmpsb
out
mov
fisttpl
add
or
mov
mov
stc
sbb
mov
push
shll
push
imul
pop
sbb
or
fstps
sub
repnz
setg
push
cltd
push
jmp
pusha
ja
into
add
icebp
in
xchg
aam
sub
or
pop
enter
fs
mov
sti
or
je
pop
dec
ficompl
ret
xor
push
sti
xchg
mov
sbb
stos
clc
dec
inc
mov
or
repnz
das
or
sbb
xor
add
fcoml
adc
jecxz,pt
setnp
dec
sub
pop
stos
cmp
xchg
iret
aaa
mov
pop
push
popa
stos
mov
push
dec
call
out
icebp
pop
inc
ficompl
pop
fwait
cltd
iret
push
cwtl
inc
push
imul
mov
mov
xchg
jne
mov
sbb
adc
jl
std
mov
lret
add
iret
stc
push
gs
jb
mov
mov
pop
rcrl
xor
int3
cmp
sub
sbb
iret
sub
icebp
nop
jb
es
mov
repnz
push
jne
into
negl
sbb
data16
lret
fucom
add
inc
jnp
dec
dec
sbb
outsb
int
sbb
mov
test
imull
fcmovnu
stc
insl
lret
movl
loop
fwait
pop
mov
mov
loopne
lcall
jg
xchg
repnz
stc
ja
push
mov
lea
mov
or
push
into
or
dec
out
negb
pop
add
inc
gs
scas
movsb
mov
idivb
pop
insl
mov
sub
ss
div
mov
insb
pop
loope
fs
nop
push
and
mov
sub
repnz
add
jmp
mov
adc
leave
js
and
pop
mov
out
xor
adc
xchg
cltd
leave
fcoms
dec
inc
in
xchg
loope
aaa
loop
xor
pop
popf
cmp
xor
shll
mov
cmc
aas
js
jecxz
push
jmp
jne
inc
cmp
mov
inc
xchg
mov
out
loope
iret
cmp
test
push
shl
in
insl
jo
pop
rcr
sbb
mov
sti
repz
push
add
cmp
test
mov
sarb
mov
inc
repz
addr16
add
shl
mov
shl
xchg
outsl
loopne
dec
pop
xor
repnz
out
insl
adc
dec
enter
xor
dec
les
repz
aas
add
and
jbe
dec
clc
pop
mov
mov
sbbl
lret
shlb
aas
fisubrs
sahf
aaa
icebp
shlb
cmp
nop
movsl
mov
mov
fstpl
rcl
ds
loopne
fisubrl
hlt
insl
test
jg
arpl
dec
cmovge
ret
and
rcrb
push
ja
fnsave
adc
push
incl
sbb
push
nop
test
dec
and
add
add
pop
xchg
out
xchg
or
movsb
dec
out
xchg
mov
shll
cmp
out
push
lcall
in
adc
inc
push
and
jle
out
sub
sub
lock
mov
fmul
jae
add
ret
fwait
mov
adc
push
mov
arpl
js
xchg
inc
xor
cmpsl
cmp
popa
aaa
mov
ret
xor
sbb
push
cld
lahf
cwtl
aad
ja
inc
jno
imul
sahf
pop
jnp
ficoms
sbb
aas
ljmp
jo
mov
icebp
xchg
int3
jle
jl
and
add
dec
pop
pop
push
and
arpl
ja
xorb
lcall
mov
xchg
and
shll
inc
inc
jle
mov
sahf
hlt
gs
test
mov
mov
push
jo
dec
sub
adc
push
les
xchg
clc
sti
add
sbb
aam
inc
bound
pushf
push
aas
xchg
mov
dec
mov
outsb
or
sbbl
mov
andl
jmp
iret
push
les
jae
fidivrl
repz
imulb
add
ds
jle
fidivrl
in
sub
addr16
dec
pop
shrl
mov
jl
out
stc
push
mov
pusha
imul
sbb
pop
cld
push
adc
add
cltd
rolb
outsl
sub
push
add
jecxz
rcl
pushf
pusha
fmul
and
pop
adc
sbb
lods
add
daa
and
aaa
out
scas
jmp
mov
fs
je
in
push
subl
in
and
loopne
mov
cmp
jae
jl
and
iret
mov
lea
sbb
and
js
out
ret
mov
and
push
mov
mov
push
cmpsl
call
rclb
nop
sub
jnp
mov
aam
sub
gs
mov
insb
in
cwtl
test
sbb
pop
hlt
sahf
xchg
jbe
cli
mov
mov
ficoms
shlb
mov
cmp
xchg
sbb
ret
loop
movsl
jmp
inc
and
mov
aam
xchg
leave
xchg
pop
pop
cmp
push
push
cwtl
push
mov
hlt
or
jecxz
dec
pop
add
pop
js
mov
insb
mov
sub
sbb
es
in
or
pop
in
adc
sub
push
popa
mov
adc
imul
mov
and
xchg
inc
fmul
mov
insl
jp
lret
xchg
mov
push
fs
aad
pop
mov
pop
stos
and
loop
sub
xor
adcb
sbb
cltd
mov
mov
in
push
stc
add
fidivrl
xor
arpl
jmp
fisttpll
xchg
pop
pop
push
cli
ret
adc
out
mov
loope
fidivl
jne
xchg
add
sub
inc
push
ror
push
clc
pop
ret
lcall
sbb
les
sbb
in
cmp
repz
insb
imul
cmp
push
xchg
mov
shrl
jbe
test
mov
popf
out
fcmovbe
mov
int3
pcmpeqw
xor
or
mov
mov
testl
leave
pop
incl
imul
repnz
pmaddwd
and
mov
sub
jge
movsl
fwait
sub
mov
test
outsb
mov
mov
in
inc
jle
hlt
enter
sub
aam
dec
shl
mov
cld
sbb
aas
fiaddl
pop
add
test
mov
iret
ret
in
aad
ret
data16
in
std
sub
mov
pushf
sbbb
or
cwtl
call
push
adc
pop
js
popf
mov
add
sbb
mov
dec
fisubrs
ret
lret
data16
mov
mov
mov
cld
je
mov
mov
shrl
int
es
and
or
mov
add
add
das
lret
push
inc
and
cmpsl
inc
inc
sbb
mov
inc
mov
cmp
das
call
jp
pop
into
ja
bnd
xor
add
jp
iret
cld
jmp
loope
dec
jb
jl
adc
mov
push
je
push
mov
mov
icebp
inc
sub
out
xor
imull
shll
push
jp
test
lock
xchg
test
mov
in
mov
jnp
jmp
adc
cmp
add
popa
lock
jle
arpl
xor
inc
pop
loopne
scas
int
and
ret
push
add
clc
xlat
daa
call
mov
mov
jmp
xchg
and
jno
xor
loop
xchg
imulb
mov
and
dec
sub
dec
inc
sub
sbb
jp
mov
sub
mov
jl
stos
mov
mov
pop
dec
jle
mov
in
ja
push
fs
jne
shlb
xchg
mov
jns
stos
sahf
daa
aam
jae
addb
arpl
into
in
cmp
bound
sbb
fldenv
aad
and
and
dec
jbe
adc
test
mov
jecxz
pop
aaa
insb
mov
cld
ds
xor
mov
mov
aaa
sbb
jg
mov
mov
imul
cltd
dec
dec
xchg
repz
inc
mov
inc
mov
cld
mov
push
nop
fdivrl
mov
cmp
in
ss
sbb
popa
sub
cmc
push
ret
mov
dec
xor
mov
cltd
lcall
nop
jbe
out
or
addl
test
filds
nop
roll
xor
mov
jne
rclb
cmp
repnz
jge
inc
and
test
sub
sahf
nop
mov
xchg
cld
lcall
and
jge
insb
fwait
add
cmc
iret
pop
in
call
mov
dec
bound
xchg
add
mov
sbb
or
adc
call
mov
rcr
sub
lahf
xor
push
in
sub
pushf
and
and
mov
mov
sbb
test
sub
js
fistpl
dec
xor
stos
push
ljmp
xchg
movsb
inc
lds
jno
sahf
jbe
inc
jp
sub
adcb
pushaw
mov
dec
and
mov
cmc
xor
leave
lret
sbb
filds
mov
test
cli
jae
cli
sbb
adc
int3
popa
inc
cld
adc
add
stos
inc
sub
aam
stos
pop
xor
and
leave
daa
jg
push
loopne
es
mov
in
and
and
dec
mov
ret
cmp
pop
movsb
cltd
mov
or
and
xorb
sbb
or
js
lea
ficoml
sub
sbb
inc
test
push
adc
rclb
mov
mov
fcmovne
rorl
push
sub
addb
popa
sub
test
mov
adc
mov
add
mov
iret
in
stos
out
shrb
or
test
sub
lods
xor
call
pop
xchg
add
jmp
mov
call
popf
and
mov
jge
nop
cmc
dec
pop
adc
cli
leave
cmp
aam
out
inc
mov
je
and
sahf
xor
je
dec
push
mov
les
push
pop
dec
add
push
push
pushf
es
mov
leave
sub
mov
jo
adc
in
mov
lds
imul
cmp
cld
mov
pop
sarl
push
cli
pop
jo
arpl
adc
add
pop
mov
pop
jo
test
lds
lock
mov
scas
lods
leave
int
loop
call
or
dec
aad
test
jbe
call
jno
out
adc
jb
sbb
pop
dec
loope
adc
sbb
mov
cmp
pop
inc
mov
mov
xchg
cmp
mov
push
call
daa
dec
mov
call
out
and
pop
into
sub
jecxz
mov
adc
pop
mov
or
and
inc
fwait
push
int
mov
aam
in
shrl
idivl
jecxz
pop
adc
mov
push
adc
jno
and
jno
shll
adc
mov
cmpsl
inc
shlb
sahf
push
notb
fstps
imul
out
sar
dec
pop
adc
pop
std
sbb
ror
cmc
daa
mov
adc
repnz
adc
shrb
pusha
inc
mov
or
aam
jle
or
hlt
xor
sub
cmp
or
popl
adc
aam
popa
roll
addb
inc
mov
push
xlat
inc
mov
and
aas
cld
xchg
in
stos
scas
outsl
push
jb
lret
sbb
hlt
sbb
fadd
insl
bound
mov
test
stc
mov
cmp
fistps
test
pop
pop
sbbl
lods
push
xor
nop
lahf
add
lret
addr16
mov
or
add
jno
pop
push
inc
bound
pusha
adc
clc
insl
stos
frstor
popf
lret
cmp
sti
aad
sbb
shlb
xchg
pop
nop
dec
out
push
mov
xchg
jl
mov
mov
movb
dec
out
sbb
xor
push
mov
iret
add
push
das
cmc
mov
xlat
addr16
imul
jl
mov
jg
lds
cmpsb
lcall
xchg
xchg
lods
fs
xor
movsl
add
js
xor
cmp
dec
push
in
fst
aam
aad
fmull
pop
arpl
jmp
and
ror
mov
jne
outsl
and
into
decl
loope
mov
push
jb
cmpsb
test
push
aaa
sbb
je
pop
arpl
add
mov
xor
jg
sub
cmp
cwtl
imul
test
xchg
jae
push
push
jno
mov
movsb
dec
or
inc
xor
cltd
jb,pt
test
in
enter
loope
lret
loopne
loope
scas
sbb
call
pop
bound
imul
sub
add
pop
inc
mov
add
cmpsl
add
das
and
sub
lcall
or
bound
sub
jmp
scas
xchg
lahf
clc
into
loopne
ljmp
scas
out
into
js
mov
mov
jno
xor
imul
or
adc
cwtl
lret
daa
push
adc
jo
rcrl
mov
xchg
std
mov
sbb
cmp
and
outsb
je
test
repnz
mov
test
in
mov
cmpsb
mov
jg
mov
cmp
out
shll
jno
outsb
adc
in
mov
jg
leave
jbe
jle
pop
aad
bound
js
fwait
call
les
call
add
cmp
popa
add
pop
adc
ret
orl
xor
jno
mov
pop
add
sarb
dec
jns
pushl
aad
mov
pusha
mov
repz
subb
cmp
add
mov
out
sub
sbb
and
pop
cmp
xor
mov
repz
fistpl
nop
cmp
test
shrl
cmp
push
push
dec
pop
lahf
sbb
mov
mov
loop
mov
cmp
sub
out
mov
sarb
call
movsl
adc
stos
fcom
ljmp
gs
hlt
in
adc
into
mov
dec
movl
mov
sub
cmp
int3
popl
sub
ret
lods
out
inc
cmp
ja
fsubrs
imul
stc
neg
push
int
mov
inc
dec
sbb
inc
hlt
fistps
push
mov
test
insl
test
outsl
cmc
stc
add
cs
mov
pop
inc
jecxz
sahf
ss
add
jns
adc
fildl
adc
lret
repnz
int
cmp
inc
pop
loop
jns
dec
push
sbb
clc
mov
and
aaa
cmc
loope
fildll
or
adc
aaa
push
dec
lea
mov
xchg
loope
xor
shl
jge
or
or
mov
cmp
ljmp
cli
adc
mov
sysexit
xchg
xchg
out
orl
jmp
jnp
jo
and
sub
inc
cli
repz
test
out
fs
mov
cwtl
mov
into
sub
ret
aaa
xlat
int
inc
sbb
stos
sbbl
or
aam
leave
sbb
enter
jnp
or
push
fsubrs
sub
lock
mov
outsb
fmul
lock
fnsave
or
xlat
mov
loop
cmp
es
pop
enter
and
mov
xor
and
stc
mov
repnz
mov
dec
into
or
subb
aas
stos
jmp
jg
dec
into
sbb
pop
sbb
inc
fists
xchg
push
lods
mov
xchg
je
dec
pop
adc
jg
cli
scas
or
bound
adc
popa
add
mov
mov
and
jge,pn
ja
test
xor
mov
xor
xchg
ds
data16
sub
test
mov
mov
dec
cmp
sar
ret
mov
dec
and
mov
int
push
stos
mov
sub
mov
xchg
test
js
add
je
cmpl
mov
popf
loope
neg
jae
sub
xchg
jnp
fidivs
push
sahf
mov
xchg
fisttpl
fists
lret
stos
sbb
lds
in
pop
ds
mov
mov
enter
loope
sbb
pop
xlat
xchg
adc
jnp
pop
inc
out
loop
jp
push
arpl
jne
jmp
inc
das
pop
dec
push
iret
push
jo
sbb
stc
lods
mov
jb
pop
add
adc
sahf
add
imul
add
pushl
stos
shll
scas
xor
out
shlb
cli
test
and
or
inc
xchg
xchg
push
outsl
adc
rcrl
insl
insl
pop
call
add
cli
lret
pop
mov
jnp
mov
mov
int
mov
cmp
add
out
mov
mov
pop
and
pop
sub
or
int3
jmp
xchg
ficompl
cmp
sbb
in
push
dec
cs
dec
insl
push
addl
xchg
xchg
stos
leave
jo
and
mov
arpl
mov
or
lock
dec
pop
fnstcw
int3
mov
test
les
sbb
out
add
call
mov
adc
jmp
lea
cmc
out
push
mov
jno
push
cli
mov
stc
nop
rolb
popa
add
mov
inc
fsubrp
dec
cmpsb
push
mov
mov
adc
ja
shrl
sub
xchg
xchg
mov
std
xchg
test
lea
out
xor
movzwl
scas
inc
push
orl
add
adc
mov
sub
pusha
pop
call
xorb
mov
lods
push
mov
push
jae
scas
popl
out
xchg
js
mov
push
rolb
pop
pop
mov
js
dec
xchg
mov
int
fidivs
ja
int
mov
and
sbb
ja
pop
pop
mov
inc
icebp
mov
and
or
jbe
mulb
dec
sbb
xchg
push
cmp
ret
add
sub
xchg
push
add
idivb
and
mov
push
popf
clc
cld
sub
sti
mov
loopne
and
push
ret
jae
cmp
sub
repnz
mov
sub
int
loope
push
and
push
mov
add
movsl
xor
fs
arpl
dec
push
in
sbb
mov
push
mov
cmp
cmpb
dec
into
scas
in
mov
lods
in
xlat
sbb
mov
jo
adc
xor
testl
into
lods
dec
es
sbb
sub
mov
or
lcall
xor
popf
ds
lock
pop
inc
mov
enter
xlat
cld
ljmp
repnz
jge
cmp
adcb
repnz
callw
xchg
and
or
test
pusha
movsl
out
cld
icebp
aas
mov
fcoml
pop
andb
lahf
lods
out
mov
das
mov
cmp
push
pusha
out
pop
hlt
test
ljmp
jmp
mov
idivb
cmp
mov
call
xchg
xchg
inc
mov
xor
sub
add
fsubp
imul
pop
or
mov
mov
movsl
out
ss
cmp
pusha
xor
jle
and
repnz
lods
rcrb
push
inc
sbb
and
out
movsl
fdivl
ljmp
mov
push
into
mov
and
xchg
xor
inc
rol
or
test
and
xchg
dec
push
das
fdivs
int3
mov
mov
lret
inc
aad
data16
mov
pop
xchg
add
mov
shl
jbe
adc
bound
les
xchg
xor
fucomi
mov
fwait
dec
sbb
push
dec
xchg
test
xchg
jge
push
orl
pop
xorl
shlb
push
dec
adc
fadd
jl
std
mov
xchg
jp
leave
sub
pop
xchg
lcall
jmp
imul
out
outsl
sub
push
loopne
aaa
add
pop
enter
dec
orb
ds
ja
lcall
shrl
xlat
mov
pop
imul
das
scas
dec
cwtl
jne
aaa
jmp
std
pushl
or
shll
cmc
lret
scas
and
popa
jns
cmpsb
ds
roll
ret
xor
cmp
pop
mov
fcompl
pop
movsb
jmp
out
xchg
mov
dec
add
es
mov
in
mov
xchg
or
cmpsb
dec
lods
out
sti
roll
mov
sub
push
mov
push
pop
fldl
data16
pop
xor
mov
fadd
jb
mov
sub
push
add
lahf
push
scas
mov
mov
pop
and
scas
and
mov
std
sbb
add
inc
jnp
mov
dec
mov
cmp
ds
cmp
pop
faddp
faddl
and
cmp
add
fistpll
add
imul
mov
fs
add
inc
jmp
hlt
sbb
dec
dec
dec
xor
xchg
push
movsl
dec
mov
mov
inc
mov
inc
xor
xchg
outsb
ud0
xchg
rcll
push
push
orb
jo
pop
fists
xor
lahf
or
and
xchg
or
in
xchg
add
mov
test
out
das
sahf
loop
aaa
inc
outsl
fists
xchg
fsub
lds
mov
pop
dec
frstor
fwait
push
es
inc
jbe
sbb
sarb
sahf
cmp
loope
pop
push
stos
mov
movsl
mov
push
jne
or
dec
andps
inc
or
outsb
jg
cwtl
std
jnp
sub
xchg
jmp
pop
sub
mov
or
fstpt
inc
jae
mov
dec
test
or
clc
xor
stos
push
add
inc
inc
pop
imul
lods
mov
loop
lock
sbb
mov
fiadds
popf
xchg
rorb
jg
data16
call
movb
arpl
xor
add
movsb
sub
xor
rcll
cld
int3
cld
mov
gs
popa
cmp
cmpsl
jp
add
adc
aaa
movsb
int
les
add
mov
add
insl
push
or
add
xor
dec
mov
jmp
enter
sub
cmp
cmp
and
das
inc
movsb
iret
pop
enter
adc
add
mov
jmp
cmp
das
add
cmp
jmp
outsb
mov
ds
gs
mov
pop
out
inc
mov
insb
loop
sbb
dec
sbb
jnp
or
cltd
cmpsb
fimuls
aad
stc
mov
clc
or
cmp
lret
fdivrs
gs
ljmp
mov
loopne
scas
fs
aaa
xchg
data16
inc
add
mov
cmp
xor
inc
xor
dec
fnstcw
pop
push
dec
mov
inc
pop
stc
mov
adc
add
push
cwtl
aam
andl
int
xor
lods
les
pushfw
cs
mov
cmp
jg
mov
es
inc
jo
xchg
in
xchg
mov
aad
xchg
aad
or
mov
in
outsb
mov
mov
inc
push
add
ljmp
loopne
gs
cmpsl
inc
sbb
dec
push
cmc
mov
mov
mov
jmp
pop
sub
lahf
lock
adc
ds
ret
mov
popf
das
sbb
mov
or
dec
jb
lea
into
test
cli
or
dec
out
jle
out
testl
lahf
pop
xor
mov
sub
rorl
cmp
aaa
mov
fdivs
pop
into
call
lea
xor
or
rcrb
psubusw
sbb
xrelease
test
pop
xchg
add
movsb
addl
scas
add
lahf
and
stc
out
mov
movsb
add
mov
out
ljmp
or
imul
lods
fldcw
out
cmp
xchg
add
hlt
jg
pop
xor
popa
or
jb
push
repz
mov
les
or
lcall
dec
into
dec
ja
lea
xchg
iret
mov
pop
push
sbb
sahf
scas
dec
mov
xor
push
inc
cmpsl
in
jb
in
jae
imul
lcall
es
jb
pop
in
mov
test
or
sub
or
test
aam
and
mov
sub
test
aaa
push
int
test
ret
xchg
jns
dec
fwait
xor
jo
leave
adc
in
xchg
scas
js
push
xchg
jne
imul
push
aaa
enter
std
mov
sbbb
scas
cmp
xorb
pop
test
add
push
sbb
add
icebp
cmpsb
es
mov
in
call
xchg
cmp
push
push
and
mov
scas
xchg
sbb
lods
shll
sbb
lods
mov
sbb
push
sbb
or
inc
mov
jmp
ljmp
mov
xor
dec
ret
sub
pop
push
sbb
dec
iret
test
mov
jbe
sub
or
cmp
push
shr
sbb
xor
scas
and
add
jl
mov
mov
mov
mov
pop
stos
fimuls
jae
pop
dec
push
xor
jg
or
mov
addr16
sbbb
mov
cmp
pop
clc
jo
pusha
xchg
cltd
flds
sbb
int
pop
mov
shrl
add
shrb
cld
dec
dec
push
repnz
fisttpl
out
or
and
das
arpl
cmpsb
fdivrp
icebp
and
add
or
cmp
xor
rcll
cli
sbb
out
cld
leave
pop
mov
sti
andl
std
imul
sub
in
inc
ja
fsts
sahf
getsec
pop
and
repz
mov
les
xor
xchg
std
and
xchg
xchg
mov
cld
arpl
inc
mov
int
push
and
popa
scas
inc
pusha
cmova
test
cmc
enter
inc
popf
mov
xchg
aad
rorl
lahf
repz
push
mov
add
xchg
xchg
xchg
mov
js
fsubrs
adc
out
inc
out
xchg
call
sarb
pushf
push
mov
inc
xor
pop
sahf
loopne
mov
push
and
add
or
cs
ret
add
sub
nop
add
aam
xchg
sub
repnz
pop
popa
sbb
cli
pusha
adc
cmc
xor
dec
out
mov
mov
adc
cmpsl
test
sar
add
icebp
sub
pop
mov
push
lea
inc
loop
jae
inc
cmp
pop
adcl
aaa
popl
mov
mov
push
mov
jo
xchg
xorb
inc
add
xchg
popa
xchg
lret
ljmp
cs
xchg
adc
test
es
cmpsl
stos
lea
push
les
push
and
aaa
insb
push
scas
cmp
shrl
sbb
pop
cmp
sti
mov
loopne
mov
mov
sub
add
or
or
add
lods
andl
or
lock
notl
pop
mov
push
jge
push
pushf
mov
push
adcl
or
jno
sub
inc
shlb
add
dec
sub
std
insl
daa
mov
xchg
jnp
jno
jecxz
and
int
inc
mov
out
xchg
mov
and
xchg
lea
fimuls
cmp
mov
dec
sti
adc
or
popf
in
popf
aas
cmp
repnz
mov
xlat
sti
cmp
sbb
sbbb
mov
xor
inc
mov
scas
call
int
sbb
ficomps
push
in
repz
out
cmpsb
orl
les
dec
jecxz
shl
cs
movsl
push
xorb
xor
gs
cmp
cmp
pushw
push
cmp
xor
lock
pop
pop
mov
or
jbe
jae
mov
nopl
jnp
inc
cmc
dec
jo
repnz
sarl
repz
xlat
push
leave
or
adc
xchg
pop
sbb
rcl
push
int
outsb
aas
gs
push
cmp
cmp
jmp
jp
pop
movsl
pusha
arpl
mov
fimull
mov
scas
pop
dec
pusha
jnp
shl
xchg
not
pushf
test
mov
xorb
cli
mov
xlat
mov
imul
sbb
inc
vmovdqu
push
mov
out
or
divl
faddl
int
ret
ja
int
jb
lds
mov
in
or
xchg
test
pop
gs
push
mov
xor
pop
enter
adc
cmc
pop
xor
lods
subl
nop
std
dec
mov
adc
push
cmpsb
out
movsl
fnstsw
je
sbb
rcl
pop
fildll
loopne
lods
aad
push
daa
mov
leave
fcoml
out
pop
xchg
enter
mov
push
fs
push
mov
shll
or
jae
sti
sub
mov
leave
ret
std
call
imul
xor
aaa
adc
jecxz
inc
push
lock
inc
in
xchg
ja
out
push
pop
mov
mov
dec
cmp
arpl
or
mov
mov
cmc
addl
shlb
lods
xor
and
cmp
stos
or
dec
and
das
push
xor
fisubrs
jne
cmpsb
jo
ret
inc
mov
outsb
push
bound
jnp
bound
jbe
cmpsb
add
mov
cli
orl
ret
lds
adc
movsl
aaa
fidivl
or
jbe
gs
inc
rcll
test
pop
mul
in
fldl
nop
imull
fcomps
test
mov
inc
sbb
add
cmpsl
out
pop
sbb
xor
jns
adc
cltd
cmp
mov
mov
loope
aas
xchg
es
pushf
pusha
mov
mov
adc
repnz
jb
icebp
js
hlt
mov
cwtl
pusha
dec
cs
pop
test
jmp
jl
dec
dec
pusha
xor
or
es
jge
daa
in
stos
mov
or
adc
inc
int3
xchg
jmp
push
sub
push
imul
mov
xchg
lods
jecxz
cmp
test
cs
sub
mul
mov
or
pop
inc
mov
lea
test
loop
ret
mov
cwtl
nop
and
test
shrb
js
pushf
mov
jmp
adc
out
cmp
lahf
mov
xchg
pop
outsb
jge
and
stc
xchg
rcll
and
insl
loop
push
add
add
pop
in
les
loope
addl
push
mov
pop
mov
pop
mov
xlat
lock
test
adc
or
mov
cmp
adc
mov
andb
mov
push
leave
aaa
mov
mov
pop
inc
cmp
int
loopne
adc
lods
cs
aas
cmpsb
repz
out
pop
cld
icebp
push
outsb
out
lcall
imul
ret
and
dec
rep
jns
pop
or
push
mov
stc
imull
icebp
jge
je
stos
pop
cmpsl
pop
lods
jp
cwtl
lock
adc
xor
inc
xor
and
mov
fisubl
mov
jge
and
adcl
enter
jg
bound
lock
dec
inc
fs
aam
cmp
fbstp
addl
imul
lods
mov
mov
test
push
cmc
out
pop
pop
out
incl
mov
shlb
roll
fsubs
lea
sarb
xchg
lahf
xchg
jecxz
mov
mov
adc
mov
shlb
stos
and
fdivs
mov
mov
data16
les
inc
imul
getsec
pop
mov
lahf
jb
sarl
test
lahf
sub
in
bts
hlt
lods
adc
pop
push
xchg
loopne
hlt
xchg
push
das
sahf
xlat
fistl
jbe
das
jl
lret
add
movsl
fwait
mov
sbb
or
lret
movsb
orl
das
sub
cld
cld
mov
push
iret
dec
sbb
lods
loope
adc
dec
pop
lahf
mov
and
pop
or
repnz
push
jl
lahf
jo
hlt
cmovp
cwtl
push
push
fwait
jmp
scas
push
ss
add
mov
das
jnp
push
pop
mov
jle
out
xchg
out
jge
adc
xchg
xchg
lock
int
test
das
pusha
insb
int
xchg
std
mov
ror
xchg
repnz
sbb
js
cmpsb
popf
loope
fistl
cld
mov
pop
fildl
es
xchg
push
jecxz
mov
rcr
xor
mov
dec
popf
jl
xor
cmp
jae
inc
std
xchg
not
ja
addb
roll
sbb
xor
add
rcrl
ljmp
push
sbb
popa
push
cld
xlat
arpl
or
and
xlat
imul
or
inc
sti
cs
jnp
call
xor
lock
xlat
mov
xchg
adc
inc
pop
and
xchg
loope
add
add
or
fisubrs
sub
into
xor
cmp
sbb
jle
stc
nop
dec
arpl
nop
xchg
sub
pop
repnz
lret
hlt
push
ljmp
shrb
and
mov
xor
pop
jb
sbb
and
lods
in
jle
lock
pushf
dec
shll
jne
mov
loope
cmp
dec
fsub
pop
or
mov
xor
cmp
or
pop
outsb
xlat
inc
mov
ss
xor
negl
sarb
jle
or
imul
popa
push
jle
jle
xor
jecxz
xlat
mov
fstpt
push
jo
inc
sbb
mov
inc
in
cmpsb
mov
fistpll
sub
imul
pop
lods
imul
inc
sahf
lods
dec
mov
jbe
xor
fisubl
xchg
add
mov
loope
jecxz
mov
in
mov
jecxz
inc
shlb
repnz
push
xchg
adc
lret
lret
pop
pushl
aam
sub
in
sub
mov
movsl
sub
in
add
into
xchg
cmp
loopne
es
shl
inc
jns
pop
add
add
loop
popf
testb
jle
jbe
push
fldl
loop
or
leave
shrl
adc
mov
push
jmp
pop
cmpsl
xchg
push
ss
cmp
icebp
and
mov
bound
aas
jnp
ret
and
sub
mov
fcom
test
fwait
sbb
js
adc
cmp
pop
pop
adcb
or
push
and
jmp
pop
xchg
push
cmc
dec
xchg
jge
pop
push
sarl
dec
mov
push
data16
ljmp
cltd
jae
fwait
ljmp
inc
fs
dec
xchg
enter
mov
or
scas
inc
inc
or
ljmp
mov
xchg
adc
cmp
xor
and
xchg
mov
aam
stos
icebp
int3
add
cmp
clc
insl
ret
inc
and
lret
mov
stos
das
mov
mov
shll
and
ljmp
enter
add
add
dec
push
fadds
je
bound
mov
dec
and
or
ljmp
adc
out
inc
ds
inc
and
in
insl
push
addl
or
std
add
mov
int3
mulb
xchg
test
pop
push
and
mov
ja
sbb
scas
fcmovbe
push
sbb
stos
pop
mov
in
stc
test
and
dec
into
jp
aam
ja
scas
mov
mov
xchg
push
fbstp
xchg
arpl
pop
sbb
lods
jmp
imul
inc
jne
lret
popf
je
shrl
out
pop
cltd
xor
faddp
ret
in
mov
jb
shl
clc
es
loope
popa
xor
fsubl
loope
js
add
arpl
loopne
nop
xchg
push
das
std
test
dec
sub
loope
dec
and
adc
nop
test
call
stos
push
cmpl
push
int3
gs
add
pop
aam
outsl
inc
sbb
sub
sub
shl
xor
imul
add
lret
data16
cmpl
fsts
push
add
sbb
js
out
push
sub
imul
imul
xchg
loopne
pop
popa
xor
loopne
cmpsl
repz
movsl
mov
aam
incl
arpl
sub
mov
aad
dec
popa
je
adc
lret
xchg
data16
mov
sbb
add
push
xlat
sbb
adc
jl
jl
jmp
and
out
jmp
mov
lret
dec
in
mov
in
or
push
cwtl
mov
stos
fs
sbb
lods
mov
out
dec
dec
dec
leave
inc
mov
mov
rorb
mov
imul
pushf
je
mov
push
push
sahf
bound
fcoms
mov
inc
jecxz
pop
cmp
inc
jo
or
daa
je
je
les
cmc
mov
enter
cmpsb
daa
xchg
lods
iret
testb
lret
mov
push
mov
scas
mov
dec
lret
ret
mov
call
mov
cpuid
push
xor
movsb
sbb
cmp
add
ja
mov
arpl
mov
shlb
scas
pop
call
add
mov
enter
jp
out
scas
cmp
ret
adc
movsb
nop
outsl
inc
js
adc
dec
jg
cmp
loopne
dec
sbb
push
add
jo
rorl
clc
cmpsl
push
fistpll
inc
outsl
dec
fsubrp
pop
jp
dec
mulb
inc
jg
and
lds
mov
push
push
sbb
sub
xorb
scas
out
inc
cmp
mov
sub
mov
nop
push
add
pusha
adc
fldl
mov
mov
subl
add
push
add
or
cmp
jge
push
sbbb
or
sub
push
shrb
in
lahf
cmp
mov
xor
in
adc
push
in
and
mov
adcb
movsl
loope
outsl
adc
inc
fwait
inc
mov
lea
insb
add
call
xor
or
stos
lock
push
dec
aas
inc
inc
push
iret
test
les
inc
inc
test
jbe
pop
call
into
push
cmpsb
lahf
mov
cmc
ja
test
out
mov
insb
out
sbb
outsl
cwtl
inc
and
adc
push
xlat
das
roll
xor
dec
jne
int
or
test
jno
ja
inc
pusha
pop
pop
jnp
notl
dec
test
push
loopne
int
jge
lea
mov
mov
lcall
sahf
clc
add
push
add
adc
test
cltd
pop
xor
mov
xor
fisubs
shl
inc
lcall
into
or
cmpsb
add
aad
xor
xor
jbe
xchg
jp
arpl
aaa
aaa
adc
fdiv
icebp
mov
popf
ret
or
sub
cld
shlb
out
mov
movsb
pop
add
int
mov
stos
test
insb
cmpl
and
loopne
mov
lods
xchg
movl
add
cmp
jg
or
rcll
add
pop
clc
mov
sbb
ja
shrl
push
dec
mov
push
xchg
mov
mov
lds
in
xchg
lret
in
xchg
shlb
or
jecxz
cmp
addr16
mov
hlt
xchg
stos
leave
pop
or
pop
xor
ljmp
jecxz
popl
inc
inc
adc
scas
cmpsb
in
jno
dec
mov
push
push
mov
loope
cld
mov
test
popa
int3
ret
mov
and
in
push
add
cmp
jge
dec
sbb
jo
jb
loop
and
imul
dec
jo
mov
stos
fisttpl
push
inc
sbb
push
push
mov
add
and
mov
mov
push
mov
and
ret
ret
push
xchg
scas
adc
mov
inc
adc
jge
sub
mov
cli
repnz
aam
push
cmp
fs
lret
pop
orb
stos
sub
mov
push
scas
xchg
inc
lds
cld
out
lods
adc
call
pop
mov
sbb
sbb
movsb
daa
push
pop
sbb
aam
jp
ja
dec
inc
mov
mov
andb
popa
out
je
popf
sbb
shlb
es
loope
int
push
pop
je
in
pop
iret
ljmp
or
xorl
inc
call
sahf
push
cmp
xor
mov
mov
movsb
inc
cmp
sbb
dec
ret
jne
mov
testl
or
pop
sub
mov
xor
sub
sbb
lahf
sub
sub
adc
add
loopne
mov
cs
movsl
adc
push
mov
fld
pop
cmp
nop
ja
rorl
dec
scas
jne
dec
cwtl
outsb
pop
fiaddl
or
cwtl
loop
jge
mov
mov
rcl
frstpm(287
rcr
aam
sbb
lcall
insb
jbe
ja
lcall
js
and
jne
jo
pop
cli
mov
pop
inc
pushl
add
fisttpl
scas
adc
enter
repnz
shlb
dec
dec
fwait
cmp
inc
adc
imul
testb
enter
jb
cli
or
pop
sbb
push
aaa
pusha
subb
cmp
je
cmpsb
push
xorl
mov
ljmp
ficomps
add
test
jmp
iret
aas
xor
call
popl
jecxz
jns
mov
loop
jmp
divl
test
xor
inc
mov
lods
pushf
out
mov
dec
cmp
pop
cli
sub
jmp
ljmp
or
movsb
mov
loop
adc
dec
addr16
out
mov
std
sar
lods
test
jle
cmpsl
push
mov
js
fbld
pop
mov
rorb
xor
je
fadds
inc
mov
insl
mov
pop
lret
notb
xor
add
pop
ret
dec
call
xchg
loop
sbb
jmp
outsl
sub
cmp
pop
add
jne
scas
pushf
mov
repnz
sahf
flds
std
add
ljmp
xor
cmp
mov
dec
test
out
adc
in
xor
pop
iret
or
and
xchg
sbb
push
add
scas
or
lock
mov
xchg
test
mov
inc
add
call
ror
mov
xor
mov
aam
inc
add
and
dec
mov
or
sub
push
or
push
sbb
pop
cmc
cmpsb
adc
cmp
pop
xor
add
lcall
js
rclb
push
arpl
in
pop
hlt
arpl
into
and
fwait
mov
pushf
test
push
dec
mov
stc
scas
dec
mov
adc
mov
outsl
aas
sarl
fsts
jnp
mov
xchg
jg
bound
flds
mov
loopne
cmp
sbb
pop
cli
jp
rclb
mov
sahf
test
push
xlat
popa
push
hlt
lock
in
fmuls
loop
xchg
les
inc
push
jcxz
and
sub
push
pop
mov
roll
frstor
lds
cmpsb
out
jg
inc
push
pop
push
jns
out
jg
fimuls
mov
popa
test
add
lahf
cmpsl
stc
push
into
push
xchg
insl
adc
cmpsl
mov
dec
sub
lods
ljmp
adc
aas
xchg
rcr
xchg
sub
incl
enter
cmp
out
cltd
cmpsl
cmp
pop
mov
xchg
jecxz
mov
stc
jmp
jno
cld
ficomps
inc
add
repz
inc
sbb
mov
in
jbe
and
jbe
pop
pop
push
cld
rcrl
lret
mov
and
xor
sbb
adc
filds
xor
insl
inc
cltd
aaa
insl
pop
ret
lret
aaa
gs
xchg
repz
mov
jl
das
in
cmp
mov
loop
sub
jle
std
mov
mov
fistl
dec
stos
adc
add
clc
test
stos
push
cltd
sub
push
mov
jbe
repnz
dec
and
sub
rcrb
jg
jb
ss
mov
pop
xchg
stos
inc
lock
gs
clc
mov
es
movsl
ljmp
mov
sbb
push
push
mov
popa
out
test
push
loop
andb
mov
in
and
int
cmp
addb
ja
clc
adc
bound
movsb
repz
fdivrs
sbb
lcall
test
dec
xor
mov
int3
sti
xor
xchg
loope
mov
subl
cmp
push
cmp
into
xchg
mov
add
lcall
or
mov
xor
dec
das
sub
das
aad
outsl
dec
jo
sbb
pop
or
in
mov
sub
leave
call
xchg
mov
xor
fimuls
fwait
mov
adc
cmc
jbe
out
mov
and
sbb
stos
mov
cli
addr16
cmp
movsb
imul
lods
sub
and
cld
xor
dec
fsub
cli
xchg
mov
sub
mov
lods
movsb
bound
lods
or
pop
xor
mov
xchg
repz
cmp
adc
aam
ret
xlat
sbb
in
add
mov
dec
test
test
mov
loopne
and
sbbb
add
inc
mov
xor
pop
enter
adc
sahf
fidivs
sbb
xchg
mov
shrl
nop
mov
call
mov
fisttps
mov
push
cmp
loope
push
arpl
pop
adc
push
push
pop
ss
xchg
pop
sub
pop
int3
jecxz
mov
imulb
inc
and
jns
rolb
fwait
les
push
xchg
dec
xchg
mov
mov
add
movsb
and
lret
gs
push
in
push
mov
ret
cmp
dec
cld
ljmp
sub
adc
push
dec
sub
mov
inc
mov
cmp
sbb
mov
test
dec
xor
stos
xor
pop
and
les
jl
pusha
push
or
jne
dec
mov
in
shlb
xor
subb
call
push
gs
sub
adc
xchg
das
je
xlat
jbe
movsb
enter
sbb
or
lds
xchg
mov
call
cltd
add
es
push
and
inc
dec
xchg
fisubs
enter
adc
decb
mov
orl
jmp
into
js
and
cwtl
push
adc
pop
pop
dec
pop
out
mov
fcmovnbe
sub
test
jg
adc
mov
or
xchg
cld
ficoml
popw
pushf
pop
loope
popf
xchg
ljmp
in
std
out
mov
loope
push
add
jo
iret
cltd
and
int
fidivl
adc
mov
mov
and
decb
jb
inc
mov
insb
xchg
adcl
cmp
push
pop
mov
xchg
out
or
dec
jb
dec
aam
mov
scas
pop
xchg
or
ja
loop
sub
xchg
push
add
notl
mov
mov
pushf
insl
fs
mov
push
repz
pop
push
jno
sbb
push
jmp
inc
fistps
xlat
add
cmpsl
cltd
push
lods
push
add
add
push
scas
dec
js
pop
push
jecxz
mov
xchg
push
in
xchg
sub
mov
add
hlt
repnz
loop
sub
lds
mov
cmp
push
out
add
sub
out
rol
sub
xchg
icebp
pop
sub
jle
mov
ss
imul
incl
fstl
sub
fildll
cmc
inc
nopl
insl
mov
mov
dec
cld
pop
sbb
adc
movsb
adc
and
fisubl
popf
mov
sarl
loop
ficompl
rorb
or
enter
xchg
jb
sub
outsb
xor
xchg
rolb
push
or
orl
adc
mov
das
dec
jbe
fwait
pop
fsubr
js
adc
subb
mov
repz
es
sub
mov
js
xor
jo
inc
rcrl
jmp
add
jb
or
jne
ret
dec
push
add
mov
iret
mov
or
stos
sub
pop
repnz
push
outsb
mov
je
sub
dec
int3
in
cmpsb
sbb
add
push
data16
fwait
mulb
dec
sub
inc
and
inc
adc
loopne
jb
mov
into
imul
push
nop
sahf
sub
mov
mov
enter
xchg
sahf
pop
aas
mov
cld
cwtl
add
mov
mov
xlat
mov
mov
stos
fldenv
or
fsubrs
xchg
pop
orl
stos
dec
mov
inc
repnz
xchg
push
into
adc
out
repnz
add
insl
dec
mov
stc
xchg
xchg
inc
stos
repz
push
movsl
xchg
push
or
jne
push
js
repnz
fsts
shr
out
dec
jns
into
cmp
inc
insb
das
bound
xchg
loopne
mov
mov
js
mov
enter
sbb
xor
int
pusha
lds
lahf
mov
xchg
cmp
add
lret
repz
imul
es
cmp
pusha
fadd
xchg
xlat
cmpsb
xchg
pop
fwait
hlt
adc
sahf
lret
lds
jb
inc
rcrl
nop
xchg
push
jp
sarb
mov
adc
cmp
lock
sbb
repnz
dec
scas
dec
dec
lods
stos
outsl
jno
lcall
lret
push
insl
cmp
inc
mov
bound
push
out
dec
out
xchg
sub
xor
pop
aaa
push
pushf
mov
cmp
mov
sub
sub
cmp
imulb
imul
mov
mov
loopne
fistpll
divl
sub
je
pop
andb
ds
jo
xchg
jne
lret
push
movsb
add
out
movsl
xor
jnp
push
pushf
pushf
adc
xchg
sbb
stos
mov
jb
lret
clc
inc
pop
stc
arpl
xor
test
xlat
cmp
xchg
lahf
outsb
out
adc
or
repz
cmp
arpl
shll
rcrl
pop
les
pop
mov
pushl
mov
nop
sub
fidivs
adc
or
std
add
and
pop
mov
test
repz
loope
add
out
lahf
ja
or
aaa
adc
mov
mov
fsubr
sbb
out
inc
sbb
mov
jbe
mov
pop
cmp
jo
push
xchg
int3
ja
or
pop
ret
pusha
inc
mov
inc
lock
dec
mov
into
fidivrs
or
lea
ret
das
xor
in
pop
jg
jno
pushf
adc
icebp
jbe
rcr
es
flds
inc
sbb
dec
or
sub
es
pop
ss
movsl
lahf
daa
mov
lods
cmp
ret
in
xchg
int3
sub
hlt
dec
in
inc
xor
sub
xchg
outsb
dec
rcrl
hlt
rorl
je
push
fldcw
push
loopne
cmp
pop
fmul
pusha
loop
lods
cwtl
sahf
and
add
test
jbe
jns
and
or
xor
mov
jmp
cltd
or
cmp
lret
push
daa
fwait
push
aad
aad
sbb
dec
mov
icebp
adc
add
push
arpl
jbe
pop
sbb
add
call
pop
mov
lea
cmp
push
test
insb
rcrl
es
xchg
pusha
mov
mov
mov
adc
cltd
imul
sbb
adcb
imul
stc
imul
loop
xor
cmp
mov
sub
repnz
adc
dec
lret
in
xchg
movsb
inc
enter
insl
xchg
jno
loop
push
xor
cmp
mov
mov
arpl
push
insl
negl
sbb
xor
and
push
inc
jle
stc
push
hlt
out
ret
subl
cmp
ficomps
test
ret
mov
push
xor
pop
pop
sub
sti
fcomi
outsb
jno
adc
jae
test
jp
xchg
das
xchg
sbb
dec
add
das
ret
cmpsl
xchg
lods
ja
pop
xchg
pop
xchg
dec
dec
push
add
cli
xor
lret
inc
push
nop
push
cld
mov
ljmp
pop
popf
in
and
push
icebp
push
mov
pop
sbb
stos
cmc
fcmove
dec
ret
lahf
cmp
mov
filds
cmpsl
xchg
stos
xor
rcr
pop
js
aas
insb
add
push
lret
pop
mov
jbe
dec
fcoms
lods
into
push
pop
mov
push
jno
inc
adc
stos
addr16
sub
pop
xchg
out
outsl
shlb
mov
ffreep
inc
add
ja
stos
push
shll
mov
loop
pop
push
leave
add
and
or
inc
and
bound
pop
mov
mov
adc
sub
es
adc
decb
mov
and
push
lods
in
and
push
iret
mov
scas
and
arpl
stos
stos
in
xchg
in
xchg
mov
hlt
push
sub
jne
movl
add
outsb
mov
int3
in
mov
mov
adc
adc
das
data16
aad
xor
pop
gs
xchg
cmpsb
and
inc
adc
cmpsl
popa
call
dec
es
loop
imul
lret
icebp
into
inc
cmpsb
sub
inc
js
mov
adc
lahf
movsb
pop
dec
mov
ljmp
adc
das
enter
pop
sub
ret
mov
iret
xchg
sbb
sub
iret
idiv
loop
pop
dec
ljmp
ljmp
je,pn
pop
jl
nop
xchg
xchg
or
mov
out
mov
inc
push
out
mov
mov
jbe
add
push
push
out
popf
push
push
add
push
cmp
mov
and
and
insb
mov
scas
sbb
xchg
xchg
out
sbb
fstp
mov
pop
dec
mov
cmp
push
lret
dec
adc
inc
push
cli
jno
lret
jbe
inc
cs
sbb
jge
cmpb
sbb
js
mov
lret
push
test
sub
jmp
pop
inc
repnz
rclb
xor
xor
mov
sbb
insl
rolb
lods
adc
adc
push
push
mov
pop
xorl
xor
mov
jne
test
push
add
add
xchg
pop
out
cmc
dec
stos
mov
nop
les
div
mov
lods
shl
sets
pop
fstpt
divw
sbb
adc
dec
xor
in
cmc
mov
pop
sub
adc
mov
xor
lea
jo
cli
mov
inc
inc
mov
int3
shll
and
inc
cmp
enter
imul
inc
add
mov
in
push
xchg
pusha
stos
sbb
dec
mov
inc
cmp
xchg
cmp
iret
add
ret
jns
xor
xor
ljmp
jg
icebp
call
sahf
lds
mov
cli
pop
add
sbb
enter
pusha
fst
add
loopne
cmp
xchg
fsubs
not
or
and
sahf
lea
mov
xor
fcomi
push
adcb
xor
iret
shrl
cld
in
mov
inc
or
pop
lds
stos
mov
scas
cwtl
aaa
sbb
test
jne
arpl
mov
push
jp
ret
sbb
pop
ds
xor
nop
ljmp
int
ljmp
rclb
cmp
add
aad
shll
jmp
and
rcl
outsl
jmp
dec
and
adc
jbe
pop
nop
add
xlat
rorb
push
adc
dec
cmc
inc
std
jo
mov
inc
pushf
xor
mov
cmc
into
jo
adc
lcall
stc
out
jbe
adc
lret
add
push
cmp
pop
ss
sbb
test
jbe
pushf
lret
push
addr16
imul
mov
into
sarl
out
test
adc
cwtl
and
or
mov
movsl
jge
pop
xor
out
xor
jmp
shrl
jecxz
lea
clc
rcrb
pop
or
inc
cmp
and
dec
jmp
je
clc
push
xor
jbe
mov
mov
adc
xchg
inc
insl
inc
push
dec
arpl
add
int
imul
sub
inc
mov
add
int
adc
sti
push
sub
adc
in
xchg
adc
loopne
jecxz
gs
jo
or
insl
inc
stc
fisttpll
daa
ret
lods
cli
and
sub
sub
stos
xchg
lods
std
push
gs
mov
outsb
xlat
pushf
pushf
aaa
push
int3
aam
jae
mov
sbb
repnz
mov
adc
sbb
loop
ja
cmc
dec
jnp
add
rcl
push
js
addl
xchg
xchg
push
xor
push
loopne
setge
and
outsb
outsl
sahf
xor
fsubs
lods
mov
paddsb
push
lods
mov
mov
cmp
sbb
jno
or
ret
inc
out
or
xchg
dec
push
cwtl
or
aas
pop
xor
push
stos
push
adcb
stos
into
loop
mov
and
jbe
rorb
punpckhbw
andl
cmpsl
test
dec
sbb
cmp
mov
rcrl
stos
adc
pop
or
or
jb
mov
push
sti
inc
add
sbb
jecxz
sub
es
push
inc
pop
cwtl
popf
push
icebp
or
cmpsb
jl
mov
in
jge
xchg
cmp
sbb
shrb
js
adc
hlt
xchg
inc
dec
adc
xchg
incl
jns
inc
shrl
nop
lahf
xor
ret
dec
add
cmp
repz
xchg
hlt
out
mov
add
jg
mov
xlat
pop
pmuludq
xchg
in
lret
mov
outsb
icebp
mov
jecxz
fucomip
leave
adc
outsl
in
mov
shll
call
cltd
mov
sbb
lods
test
sarb
sub
push
push
cmp
in
rolb
rcrb
add
test
test
bound
pop
and
mov
dec
jl
test
daa
xchg
pop
adc
xchg
xchg
cmp
mov
add
jg
push
cs
push
inc
das
jecxz
jle
jbe
push
lret
mov
inc
xchg
sahf
fldcw
add
jns
dec
mov
sub
push
push
out
shrl
aaa
cmc
cmp
leave
das
movsb
loope
push
and
inc
out
xor
orl
stos
add
stos
scas
std
mov
xchg
insb
fidivs
scas
dec
loopne
mov
ljmp
mul
mov
jmp
test
ficomps
out
lret
imul
ss
inc
sub
cs
pop
ljmp
imul
int3
ljmp
call
push
sahf
jo
out
ret
movsl
cmp
arpl
dec
mov
add
jbe
std
outsl
inc
mov
jbe
fs
es
inc
je
jno
sbb
ret
imul
mov
cwtl
mov
push
das
dec
jbe
aaa
add
dec
mov
and
je
icebp
pop
in
hlt
movsb
sbb
mov
sahf
mov
sub
sbb
into
out
mov
jns
bound
inc
and
dec
into
cmp
inc
dec
dec
daa
jns
inc
add
clc
ljmp
int
dec
imul
dec
xor
lds
pop
jp
insb
xchg
dec
jo
jg
push
or
cmpsl
add
aad
and
sbb
dec
push
sti
jg
fnstsw
mov
insl
js
push
in
xrelease
xchg
inc
cmpsb
and
dec
cmp
ljmp
rcl
in
push
add
cmp
pop
and
sbb
pusha
inc
dec
and
or
nop
dec
test
call
rcll
iret
mov
arpl
ss
insl
je
test
fdivrs
pop
inc
pop
adc
inc
popa
jle
js
xchg
lahf
pop
lods
into
mulb
or
sub
aam
inc
push
cmc
xlat
aam
cmp
dec
sub
out
lcall
or
jmp
xor
inc
or
lock
cmp
mov
ffreep
out
pop
aad
adc
inc
cmp
in
rorb
and
mov
js
xor
pop
jne
mov
add
iret
imul
std
inc
dec
fsubp
ftst
push
into
icebp
push
or
mov
add
cmpsl
out
sbb
jnp
in
inc
jo
dec
cmpsl
jb
pop
xor
rclb
ljmp
lds
inc
out
xor
rol
xlat
sbb
rclb
fsubrl
test
mov
lret
leave
cmpsb
inc
int
insb
cmp
das
inc
jmp
pop
repnz
push
dec
cmp
stos
out
and
sub
jbe
popa
ja
push
push
mov
push
repz
lea
jg
or
aas
and
sub
mov
xchg
insl
or
adc
push
outsb
fnstcw
into
jno
push
pop
leave
test
dec
mov
mov
jmp
xor
and
in
inc
ljmp
jb
jmp
jne
ja
into
pop
outsl
loopne
lahf
or
xchg
enter
add
lock
add
xor
scas
mov
pop
fldenv
outsb
sbb
bound
xchg
add
popa
nop
adc
int3
lahf
loope
outsb
lret
in
cmc
xchg
mov
mov
mov
sub
aaa
mov
lods
mov
cmpsl
mov
xor
pop
xor
or
aas
roll
sub
sbb
xlat
addr16
inc
out
push
cmp
loopne
movsb
fsubrl
dec
int
test
insl
push
inc
pusha
jno
gs
push
push
fmul
jl
adc
pushf
push
xchg
add
xchg
xchg
xlat
cwtl
mov
out
mov
sub
push
rorl
test
mov
jae
push
mov
or
push
push
cmp
fwait
mov
inc
pop
into
bound
cli
test
push
mov
sub
sub
loopne
cmc
gs
dec
jmp
cmpsb
and
push
xor
stc
sub
cmp
jge
mov
movsb
lock
shll
push
sbb
das
jmp
hlt
add
push
sbb
push
inc
orps
mov
je
test
dec
mov
cli
in
pop
xchg
rclb
test
jmp
imul
sbb
or
pop
addr16
les
sub
and
aam
pop
in
push
sbb
es
dec
stos
jge
sub
xor
fcoms
push
push
adc
or
lahf
xor
lret
and
cmp
test
aad
mov
add
clc
cwtl
adc
cmpsb
imul
or
mov
sbb
lahf
out
out
lods
sahf
mov
adc
or
push
mov
adc
lods
sbb
sbb
or
lods
xlat
ja
pop
mov
sub
inc
jecxz
mov
outsb
in
insl
pop
dec
jnp
lea
lret
adc
mov
push
mov
xchg
mov
sbb
fcomps
push
aaa
sbb
cmp
sbb
add
out
xchg
sub
pop
sbb
cmp
je
ds
repz
out
xchg
pop
mov
mov
dec
push
jo
mov
test
jecxz
jae
xchg
jp
or
pushf
push
stos
icebp
dec
adc
pop
mov
pop
repnz
negb
mov
and
jns
xchg
pop
xchg
jle
sub
push
cmpsl
xchg
jnp
add
pop
xchg
ds
mov
loope
add
sbb
rcr
jp
shrl
jle
out
mov
adc
hlt
ret
popa
ds
testb
loope
sub
lret
int
jmp
fwait
leave
pop
jecxz
xor
jecxz
sbb
and
jmp
cmpsl
lfs
sbb
fisttps
or
into
mov
sub
fnsave
mov
jns
test
leave
cs
jnp
or
and
inc
fidivrs
cmp
ja
stos
mov
fwait
outsb
inc
sbbb
pop
std
jmp
movsl
xchg
xor
inc
mov
cmpsb
sbb
mov
mov
stos
cmpsb
sbb
outsl
outsb
mov
in
pop
imul
lcall
scas
pop
fcmovu
xlat
mov
stos
mov
test
leave
sti
cli
inc
lds
les
je
notb
hlt
xor
mov
push
jg
sub
aad
imul
mov
gs
pusha
sbb
fcmovnbe
int
je
lret
cli
scas
ljmp
inc
xchg
mov
xor
imul
adc
sbb
xchg
inc
lahf
ret
adcb
sub
add
inc
cltd
jg
loope
shl
jnp
cmpps
in
out
mov
xlat
js
mov
fs
hlt
mov
popw
pop
pop
sbb
roll
ljmp
repz
lret
pop
pop
mov
cmp
pushf
fcmovnbe
lock
pop
es
leave
pushf
push
repnz
ds
jno
dec
jnp
or
dec
out
imul
push
cmpsl
jp
enter
repz
rolb
add
inc
inc
test
idiv
movsb
dec
cmp
rorb
push
or
test
sbb
iret
pop
test
loopne
push
fistpl
pop
and
adc
in
mov
iret
xchg
stc
xchg
rol
mov
sbb
mov
lds
push
test
push
or
aad
inc
stc
or
cmp
enter
adcb
and
sub
mov
mov
data16
cltd
addl
push
arpl
inc
cld
jo
insl
add
pop
mov
jns
rcl
jbe
push
aaa
shll
sub
inc
int
cmpsb
mov
push
pop
je
movsl
scas
lret
lcall
into
pop
int
add
mov
stos
hlt
add
das
testl
xor
push
in
cli
cmp
cmpsb
dec
and
or
adcb
movl
mov
iret
repnz
scas
pop
cwtl
sbb
mov
adc
cmp
mov
adc
add
or
stc
mov
roll
cmp
adc
dec
jne
pop
jbe
xchg
lcall
or
cmp
sahf
scas
mov
lahf
int3
inc
push
std
outsl
or
call
pushf
mov
xchg
in
jecxz
cld
mov
adc
xor
dec
sub
xor
push
sbb
and
fwait
ljmp
mov
add
or
iret
jmp
pop
shlb
xchg
adc
jne
mov
push
pusha
test
jmp
adc
js
iret
aam
sarb
fstl
clc
adc
sbb
adc
inc
xor
addl
pop
movsl
and
in
jno
ja
fcmovbe
add
leave
add
cltd
aaa
or
pop
dec
sbb
jmp
movsb
lahf
and
out
xor
add
cmp
sub
add
add
inc
daa
nop
repnz
enter
mov
cs
dec
pop
insb
or
push
hlt
ds
push
outsl
adc
inc
cmpb
cmp
xchg
push
movsl
dec
into
jl
push
testb
jo
pop
lea
inc
insb
xor
stc
dec
mov
in
mov
dec
dec
xor
cmpsl
ficompl
cltd
mov
jne
into
mov
lds
jge
push
mov
cld
cmp
rcr
xchg
and
scas
mov
xchg
push
dec
jb
rolb
jecxz
out
jae
stos
push
push
xor
lret
test
or
push
xchg
sub
in
lds
fsub
pop
push
mov
idivb
fistpll
and
mov
fsubs
or
pop
mov
push
xchg
out
mov
xchg
popa
loopne
stos
clc
dec
repz
xchg
outsl
sbb
mov
mov
call
cmpsl
int3
mov
jns
insb
push
bound
pushw
dec
daa
mov
icebp
lods
push
adc
jne
repz
add
jne
scas
mov
mov
call
sbb
cmp
bound
xor
or
imull
ljmp
imul
pop
inc
or
push
orl
sub
jo
jge
ret
xor
mov
out
icebp
fmull
pop
xlat
ja
push
xchg
cld
xor
add
jge
xchg
inc
lods
mov
jo
out
add
xchg
test
rclb
test
jnp
inc
mov
or
pusha
sete
or
imul
sahf
int
ret
insl
mov
push
stos
enter
stc
xchg
xchg
rorl
cmp
scas
lock
mov
jl
sub
test
mulb
aam
xchg
xor
test
jb
es
push
filds
sbb
jo
test
sub
cs
push
jmp
orl
inc
mov
popl
dec
xor
fcomp
fwait
or
push
addr16
inc
push
add
mov
stos
xor
fnstcw
add
pop
in
test
mov
in
mov
sbb
add
push
pop
dec
aas
xor
lods
hlt
stc
movsb
es
push
not
inc
pop
xchg
mov
mov
popf
pop
mov
sbb
lahf
fsubl
xchg
adc
mov
cmp
adc
dec
loop
aam
add
out
int3
cmc
sbb
push
rorl
push
jmp
ret
cld
in
mov
rorl
fdivrs
sub
mov
aad
xchg
lea
mov
or
fidivl
idivb
bound
mov
xor
sub
call
pushf
cmp
sbb
mov
scas
push
outsb
gs
pop
movsb
and
sub
inc
cmpsb
cmpsb
insl
adc
sti
repz
scas
cmc
outsl
inc
testb
xchg
and
rolb
mov
icebp
ss
sub
aaa
add
test
cmp
jns
add
ds
push
or
or
mov
bound
out
pop
gs
les
lock
imul
adc
cs
ljmp
or
fildll
jecxz
sub
cs
int
pop
mov
cmp
psraw
lcall
inc
jnp
lret
xchg
mov
subl
in
movsb
add
das
push
sbb
out
pop
jae
push
popf
insl
sti
jmp
inc
xor
imul
adc
xchg
xorb
mov
icebp
fcomps
lahf
lds
je
ds
sub
nop
jo
imul
lret
rorl
popa
hlt
outsl
mov
sub
cli
cmp
cmp
push
add
cmp
lret
ljmp
mov
or
push
ret
adc
jb
jp
push
xchg
push
outsl
cmc
mov
aas
insl
dec
push
and
pop
fs
mov
mov
xchg
enter
mov
lret
lds
lea
test
sarl
mov
mov
and
lods
or
mov
sti
in
pushf
stos
add
or
iret
hlt
mov
gs
pop
mov
mov
pop
sahf
pusha
jecxz
cmc
divb
xor
mov
pop
push
xchg
mov
pop
loop
inc
jp
adc
mov
fnstenv
jae
mov
test
int3
test
jl
nop
mov
mov
xor
arpl
test
std
jp
repnz
cmp
les
aad
outsb
icebp
sub
push
xlat
mov
cli
and
testl
sbb
and
cmp
sbb
jae
pop
mov
cmp
push
fs
xchg
int
mov
mov
add
jns
outsb
pop
cmp
cmp
mov
sbb
repz
mov
lret
or
outsb
and
lods
ds
andb
insl
pop
adc
jecxz
sbb
mov
bound
hlt
insl
shl
push
cmp
inc
or
aaa
xchg
repz
pop
dec
jmp
or
insb
sub
xchg
xchg
jg
aam
cmpsb
ret
fsubrp
lcall
mov
sbb
mov
inc
in
pusha
cmc
add
adc
gs
adcl
jecxz
repnz
in
mov
cmpl
mov
loope
and
xorb
leave
fmull
clc
cmpsl
pop
adc
jno
ficoms
or
pop
in
or
cmp
or
ficomps
aas
scas
adc
push
test
cld
cmp
movsb
shl
neg
hlt
pop
pushf
cmp
cs
cwtl
pop
loop
adc
test
xchg
pop
jae
adc
push
inc
movsb
jnp
or
inc
inc
out
and
dec
jmp
testb
ret
dec
mov
cmp
mov
bound
loopne
rolb
dec
push
sub
jmp
arpl
mov
imul
pop
pop
push
sbb
pushf
cwtl
dec
sbb
movsb
mov
stos
dec
call
jo
sub
fnstcw
push
jmp
xlat
hlt
sbb
rorb
mov
ss
jns
cli
divps
or
pusha
imul
and
and
jne
testb
push
jae
and
pop
cld
jbe
jae
cli
dec
cwtl
push
xchg
in
xchg
pusha
dec
shrb
bound
pop
les
test
inc
mov
subb
jmp
ficomps
pop
cmpsb
arpl
dec
sbb
inc
mov
mov
mov
push
xchg
push
fadds
fistpl
jno
das
inc
rcll
push
leave
cmc
xchg
push
cmp
adcb
arpl
adc
dec
inc
es
push
es
imul
mov
fisubrl
les
lea
xchg
cmc
fcoms
jp
add
jmp
cmp
xor
jne
add
xchg
lret
ds
icebp
add
jb
xor
ret
pop
push
inc
jl
pop
lret
iret
pushf
int
fs
inc
sub
ljmp
adc
push
xchg
es
push
pop
cmp
gs
jmp
pop
in
inc
cmp
or
out
sub
iret
lea
popf
or
sub
lahf
lods
clc
add
inc
mov
inc
aaa
mov
ret
jle
daa
es
pop
mov
and
inc
fbstp
jle
incl
jge
mov
adc
in
dec
cmpb
sub
shll
outsb
jno
rcrl
push
sbb
sbb
addr16
xor
pop
push
mulb
cltd
enter
pop
fs
xchg
jge
pusha
inc
repz
adc
fstp
inc
or
mov
adc
or
jmp
sub
daa
fiadds
mov
inc
inc
out
jmp
stc
test
int3
in
jns
repnz
gs
lods
mov
mov
lea
cs
lods
cmp
xor
into
inc
mov
sbb
repz
popa
movsb
add
hlt
sub
jns
aaa
sub
jmp
inc
dec
sti
mov
bound
dec
dec
aaa
sahf
add
movsl
mov
aaa
fbld
ret
pop
roll
xor
xor
adc
cmpsl
sti
mov
repnz
outsb
psraw
push
push
shlb
insb
push
ljmp
jno
popf
test
inc
mov
sti
inc
mov
into
insb
addl
fs
dec
orb
shll
popa
inc
je
sgdtl
dec
jo
ficoms
in
popa
push
cs
pop
add
stos
jns
je
or
jb
jo
inc
mul
ret
xchg
xchg
add
arpl
pop
loopne
xlat
jne
pop
aas
push
andl
fsub
fcmovne
js
push
or
ror
scas
lds
jle
and
lret
jo
mov
adc
pop
xchg
dec
sub
jbe
shr
imul
inc
nop
ljmp
jg
mov
inc
sbb
cmp
and
js
adc
sbb
fstpt
mov
lods
mov
or
xchg
pushf
mov
inc
gs
jl
in
test
xor
aad
sbb
es
idiv
shlb
mov
shr
aas
sub
xor
movsl
es
out
int3
push
inc
mov
pop
push
int
mov
inc
sbb
push
lods
mov
mov
loop
cs
orl
stos
mov
mov
fs
xor
int
sbb
pushf
inc
mov
gs
test
pop
cmp
aam
les
jecxz
xor
fstpl
dec
dec
popf
lds
dec
jge
insb
nop
das
shlb
in
mov
mov
pop
mov
mov
cwtl
mov
jne
or
out
sbb
pusha
bound
adc
mov
dec
mov
movsl
outsb
mov
les
ja
jecxz
hlt
mov
push
sub
lds
and
fs
out
pushf
insl
xchg
add
xchg
mov
shlb
adc
xchg
push
mov
xchg
pushf
mov
mov
inc
ficompl
in
xor
pop
fmul
lods
xor
mov
pop
inc
mov
test
xor
lret
mov
ljmp
hlt
mov
xor
push
call
test
imul
cmp
xchg
mov
cmp
sub
shrl
out
jge
scas
mov
push
xor
fldcw
imul
out
and
jnp
dec
jge
scas
popa
ret
fs
test
lods
sbb
lret
or
add
sub
sbb
fdivrs
pop
cs
mov
xchg
sub
sub
ja
mov
and
sub
mov
dec
mov
cli
cs
cld
and
jle
cmp
in
movsb
cmpl
sub
and
xchg
lret
xor
jbe
mov
out
push
les
xchg
std
cli
push
and
cmp
and
sbb
es
insl
add
jle
or
xchg
in
mov
shlb
lret
push
insl
shll
fadd
cld
popa
lret
adc
jo
addr16
test
stos
adc
push
jp
orl
lret
aas
inc
int3
in
inc
loope
mov
insl
ret
scas
test
mov
push
js
test
in
mov
mov
push
inc
ja
add
push
inc
adc
pop
enter
es
add
addl
es
adc
or
dec
push
popfw
add
shll
pop
add
movsb
imul
sub
call
adc
xchg
aaa
pop
lea
aam
push
js
nop
lcall
lock
xor
fiadds
mov
xchg
lahf
scas
fmulp
jo
sbb
cmc
push
mov
add
stc
inc
xor
shl
repz
xor
adc
fiadds
in
jns
rcll
xchg
mov
sbb
ret
rcrb
fmull
mov
pop
jnp
and
outsl
dec
add
rcl
mov
fistpl
imul
pop
mov
pusha
pop
and
jle
pop
lock
push
or
dec
and
add
push
push
inc
nop
mov
sbb
xor
jle
xor
mov
std
ret
add
xor
nop
mov
movsl
xchg
fs
js
repz
jno
int
xor
imul
pop
adc
imul
sti
decl
and
or
or
lret
iret
pop
out
lods
test
xor
dec
rcrb
push
dec
cmpl
jno
out
lahf
cltd
mov
sahf
ljmp
push
sub
or
ljmp
nop
jo
add
ret
mov
cwtl
mov
ljmp
sub
mov
sbb
mov
inc
lods
fldt
mov
pop
inc
mov
aad
or
xchg
and
adc
xor
lock
fwait
popl
daa
iret
bound
and
lret
out
xor
scas
mov
jno
mov
xor
adc
push
mov
xchg
pop
sbb
mov
lods
lcall
dec
and
out
mov
out
add
jp
lock
ss
in
aas
aam
mov
dec
sahf
mov
xor
insl
cwtl
xorb
and
fbld
test
leave
xor
sub
sbb
push
xor
mov
xchg
jp
adc
inc
movsb
mov
lcall
adcb
aam
xchg
sarb
scas
adc
and
sbb
nop
mov
rcrb
shl
sub
out
sub
inc
fimuls
fs
xor
pop
and
stos
pop
test
push
mov
rol
ret
ret
push
cmp
cmp
addb
and
pop
cmp
dec
cld
repnz
into
mov
inc
adc
lcall
mov
test
lret
mov
jae
into
cli
jle
push
stos
mov
orb
xchg
pop
in
mov
divl
mov
sti
pop
mov
or
inc
jnp
dec
aam
mov
lods
adc
xor
test
mov
data16
mov
sub
imul
frstor
test
mov
outsl
sbb
aam
mov
pop
push
arpl
adc
sbb
mov
movsl
cmp
sub
pcmpeqw
ja
and
rcrl
inc
and
add
pushf
mov
ficompl
imul
or
mov
scas
cmp
xchg
dec
jge
mov
stc
push
pop
mov
xor
sub
xor
mov
cli
xor
xchg
mov
push
xchg
shll
xchg
xchg
pop
lret
pop
stos
scas
or
mov
out
sub
fldl
push
movsb
imul
xor
add
push
cmpsb
push
pop
push
lret
cmc
and
mov
add
sbb
fucom
sbb
lret
sbb
jl
inc
imul
mov
pop
adc
movsb
lds
nop
movsl
xor
or
sbb
fwait
hlt
iret
test
popa
mov
push
ljmp
movsl
mov
inc
mov
cmc
mov
hlt
sbb
hlt
push
rol
daa
repnz
repz
mov
int
mov
int3
rcl
inc
movsb
add
movsb
outsb
sbb
loope
or
pushf
aaa
ljmp
pop
jo
mov
mov
inc
mov
addb
xchg
push
jne
sbb
xor
bound
mov
add
data16
cmpsb
call
sarl
int
stos
mov
fistl
out
popf
push
cwtl
out
mov
addr16
divl
mov
pop
pop
and
xchg
push
movsb
fmuls
insl
cmp
sbb
fldt
mov
jbe
sti
xor
loop
dec
mov
scas
dec
loope
pop
push
movsl
xor
pop
bound
rcrl
es
xor
inc
and
cmpsl
push
adc
les
test
mov
adc
cmp
inc
repnz
adc
outsl
xor
pushf
mov
mov
adc
mov
out
add
int3
test
jne
outsl
nop
xor
mov
pop
xor
or
gs
ret
aad
sbb
cmpsb
ret
aaa
fstp
push
pop
cmp
push
mov
and
jo
mov
shlb
cmp
inc
xchg
dec
cli
add
xchg
push
addr16
test
enter
mov
mov
pop
jne
inc
pop
loop
shll
outsl
repnz
and
dec
adc
push
jl
decl
movsb
fistl
in
fwait
add
xchg
pop
mov
xor
ret
insl
pop
mov
push
xchg
mov
cmpl
inc
and
stc
shr
test
xor
ds
push
inc
cmpsb
popf
pushf
mov
xchg
and
push
add
cli
add
outsb
aas
pop
rolb
ja
int3
jae
call
xchg
mov
cli
dec
jo
push
push
pop
inc
rolb
test
mov
insl
pop
rorl
test
jecxz
and
mov
inc
adc
sbb
rcll
mov
aaa
sub
inc
cmpb
fdiv
loope
testl
cltd
adc
add
call
addl
call
sub
jns
push
outsl
jns
loop
mov
pushf
inc
xchg
xchg
int3
mov
mov
js
shll
loopne
jp
dec
enter
cmpsb
mov
jmp
adc
fmuls
sbb
into
adc
sbb
xchg
mov
popa
insl
decb
pop
inc
icebp
or
rorl
test
out
xchg
jno
dec
int3
pusha
xor
lcall
lcall
dec
push
dec
imul
inc
out
cmpl
xor
mov
mov
sbb
es
jl
mov
sbb
outsl
arpl
jecxz
mov
outsl
pop
es
sbb
xchg
pop
adc
mov
iret
repnz
and
mov
sbb
push
sub
xor
pop
jbe
sub
sbb
jp
xor
sbb
gs
popf
mov
iret
mov
pop
dec
repz
mov
and
add
inc
jne
mov
and
aam
xor
mov
lahf
sub
dec
lock
fildl
mov
mov
in
ret
mov
fs
mov
push
pop
jbe
mov
scas
icebp
cli
int
in
mov
gs
dec
stc
mov
push
hlt
stos
push
pushf
nop
out
mov
lret
push
sub
mov
shrl
loopne
adcl
dec
jl
imul
popf
dec
lock
dec
dec
test
sub
inc
test
cmp
in
adc
inc
out
sbb
popf
add
and
aad
dec
sbb
repnz
mov
lret
jae
sub
mov
xchg
sub
lahf
lods
inc
cwtl
call
mov
xchg
push
add
lahf
lods
lds
xor
sub
leave
xchg
adc
aas
sarb
inc
fwait
and
jecxz
adc
dec
push
xor
xor
repnz
pop
mov
sub
xchg
imul
in
mov
subl
push
adc
jbe
sub
sub
sbb
lods
scas
xor
mov
inc
sti
lahf
xlat
sub
dec
repz
xlat
cwtl
pop
pop
inc
cmp
aas
pushf
jnp
push
rcrl
and
repz
subl
adc
xchg
cmp
cmp
enter
add
mov
add
iret
or
movl
sub
dec
std
jae
sbb
pop
ds
fwait
in
or
mov
adc
inc
stc
inc
mov
add
adc
adc
xchg
mov
orb
dec
sub
test
ljmp
jns
xchg
test
mov
scas
loopne
test
fisttpl
jge
inc
inc
loopne
adc
inc
add
sahf
mov
or
out
push
jns
lock
sar
outsb
dec
rcll
lret
mov
mov
pop
push
add
lret
fcompl
in
ds
shll
negl
insb
fsts
jno
sbb
mov
leave
popf
sub
add
jge
repnz
sbb
cwtl
lock
jbe
jno
jmp
and
adcb
push
ret
pop
std
inc
bound
lahf
and
iret
test
xor
std
push
lahf
sbb
outsl
inc
andb
js
xchg
scas
mov
fnstcw
dec
je
mov
popa
sar
adc
pop
add
xor
stc
outsl
or
sub
daa
dec
sbb
test
cmp
movsb
jp
jle
lcall
mov
mov
shl
iret
addr16
arpl
cmp
arpl
cmp
jb
imul
std
sbb
ljmp
lcall
push
push
mov
in
nop
dec
loop
mov
lret
stc
ss
fisubs
iret
int3
add
mov
sub
adc
pusha
or
in
mov
or
addr16
lahf
or
fcomi
dec
fs
and
div
icebp
xor
cmpb
xchg
jg
push
mov
popa
jo
xor
xchg
inc
inc
arpl
lds
fstp
adc
mov
sbb
in
std
and
and
jno
adc
xchg
inc
shrb
sbb
jns
mov
adc
jo
int3
dec
inc
icebp
xor
in
out
mov
jb
cs
fcmovb
push
lea
loope
xchg
add
clc
push
imul
sub
or
mov
shlb
add
cltd
add
ficompl
imul
mov
jecxz
int3
std
push
int3
mov
sub
scas
sbb
mov
scas
test
mov
mov
push
clc
insl
cmpl
hlt
andl
cwtl
fcoms
std
pushf
mov
sahf
filds
jg
test
or
xchg
adc
adc
push
test
jecxz
xor
rorb
das
es
sahf
jl
leave
and
out
negb
sub
outsl
das
cmpsl
mov
dec
add
in
arpl
lret
jmp
dec
gs
jne
in
push
push
subb
mov
scas
cmp
pop
mov
gs
xor
add
sti
adc
xchg
call
fstpl
call
out
cmp
insb
xlat
cmp
roll
call
adc
leave
jo
mov
pop
add
imul
mov
and
in
dec
lcall
cmp
mov
popf
mov
sahf
in
push
push
in
test
lea
lret
ret
popa
cmp
loopne
pop
cmp
jnp
in
xor
test
add
clc
push
mov
ret
mov
push
jnp
pop
pop
aam
insl
jmp
addps
mov
sbb
push
int3
jbe
mov
push
adc
mov
pop
movsb
sbb
loopne
stos
mov
movsl
js
xlat
mov
and
pop
xor
shl
jno
xchg
pop
in
aad
test
imul
aam
push
outsl
aad
fisubs
fs
out
push
frstor
das
jp
pop
mov
and
xor
scas
lret
add
sahf
test
popf
sbb
shrl
lea
pop
inc
leave
dec
dec
or
icebp
pop
addr16
and
inc
std
enter
mov
jg
int3
push
mov
dec
cmp
inc
int
aam
mov
xor
or
xchg
pop
pop
insb
xor
cld
inc
leave
js
push
adc
fbld
jecxz
std
nop
mov
stos
cmp
es
or
cltd
subb
sub
sub
pop
dec
and
sarl
lret
fsubl
mov
sar
sub
loop
sbb
inc
inc
ljmp
xorb
or
mov
pop
cmpb
mov
push
jne
xchg
lahf
insb
jae
xor
in
out
mov
mov
and
lea
fisttpll
sub
leave
cmp
popa
adc
dec
jmp
or
ja
in
mov
pop
es
addb
movsl
lret
ficompl
stc
rcll
arpl
xor
out
xchg
rcll
sbb
loope
push
jns
lods
mov
aaa
jmp
jl
mov
das
sbb
aad
or
cmp
flds
pop
pop
mov
xor
leave
push
inc
int
jb
out
mov
cmp
jns
test
mov
adcb
mov
dec
iret
movl
sbbb
cmpsb
inc
add
dec
mov
lcall
sub
inc
je
push
sbb
fcmovne
nop
lar
xchg
lcall
leave
pop
xor
loop
jg
cmc
mov
cld
in
pusha
mov
mov
cmp
je
mov
ret
sbb
cmp
sub
inc
scas
lds
push
sub
mov
add
jae
das
out
mov
dec
cwtl
das
mov
push
inc
mov
cmpsb
dec
xchg
push
outsb
xor
jae
xchg
movsl
pop
inc
ja
mov
cmp
lods
add
push
dec
pop
imul
pop
sbb
andl
jl
call
ret
jb
cmp
cltd
jne
cmp
js
or
add
in
mov
mov
mov
pop
adc
push
jnp
xor
out
jmp
mov
jp
lret
dec
rorb
fmull
popf
push
inc
add
js
inc
mov
ret
imul
adc
fcomps
rcrl
mov
pop
mov
stc
daa
push
repnz
movsl
shrb
fisubl
scas
in
mov
mov
and
dec
out
adc
push
por
clc
por
fbstp
push
xlat
xchg
fucomp
jg
jle
aas
dec
pop
push
pop
pop
xor
mov
fiadds
orb
notb
and
insb
pop
push
mov
into
sbb
nop
shll
push
rol
out
and
ds
inc
jo
stc
out
dec
fstpt
testl
inc
rolb
and
push
into
daa
mov
insb
cmp
fimuls
sahf
out
lds
and
mov
stos
sbb
jmp
xlat
mov
loopne
insb
mov
sbb
ror
cmp
push
cmp
pop
pop
dec
or
sahf
outsb
xchg
in
xchg
adcl
add
aas
adc
mov
add
sbb
adc
lcall
or
pop
mov
lahf
shl
inc
je
jg
rcrb
data16
and
scas
cmp
ljmp
adc
clc
jmp
not
repnz
das
in
pop
nop
fisubl
jmp
repnz
mov
xchg
xor
mov
cmpsl
and
in
sbb
lcall
inc
adc
into
movsb
es
add
cmpsl
adc
xchg
mov
cld
in
cltd
insl
pop
adc
fs
in
cli
sbb
imul
out
shl
pop
bound
mov
in
jg
jmp
or
mov
testb
xchg
xchg
inc
sub
add
and
es
inc
sbb
push
enter
mov
imulb
jmp
divl
icebp
or
pop
pop
les
xor
lock
inc
neg
push
cmp
xchg
mov
mov
add
add
test
scas
insb
mov
not
jne
cltd
pop
mov
push
movsb
jecxz
adc
ljmp
ds
inc
add
add
insl
mov
aas
push
insb
add
or
cli
imul
mov
xor
scas
sbb
or
dec
stos
xor
ljmp
pop
cmp
xor
xchg
push
sub
jecxz
les
int3
fwait
gs
mov
fstpt
xor
lret
daa
das
andl
and
inc
mov
flds
jne
mov
xor
addr16
test
scas
sbb
repnz
mov
pushf
xor
add
gs
mov
jne
in
mulb
shll
jecxz
std
mov
test
popa
mov
insb
fst
xor
xor
loope
leave
js
mov
adc
pushf
enter
adc
jmp
push
xchg
push
mov
fidivl
loop
shl
das
rcr
fwait
fwait
or
adc
loopne
mov
mov
mov
insl
lods
jnp
add
lahf
fldt
lds
loope
xor
inc
out
in
pop
movsb
dec
test
mov
xor
es
push
or
imul
add
fistpll
push
test
imul
add
or
adc
out
mov
rorb
sbb
lcall
push
xor
inc
repz
pop
mov
ret
add
xor
pop
sbb
pop
fucom
dec
and
mov
call
sbbb
pop
mov
ljmp
inc
mov
scas
mov
jns
xchg
mov
xchg
rorb
fstps
pop
adc
das
imul
jne
sti
pop
sub
in
adc
sub
push
mov
adcb
stc
inc
mov
or
test
rolb
mov
mov
stos
mov
insb
call
aam
push
sbb
sub
sar
sub
mov
ret
clc
dec
or
cwtl
cli
mov
pop
mov
cmpsl
cltd
cli
sub
or
adc
push
adc
mov
inc
xchg
sbb
xchg
or
ljmp
mov
insl
sbbl
sub
addr16
movsl
mov
mov
nop
xchg
pusha
in
xor
xchg
jmp
imul
mov
jp
inc
add
pusha
xor
sub
sbb
in
aam
push
test
cmp
pop
stc
jns
inc
jo
push
pop
aas
xchg
push
mov
dec
ds
push
lcall
pop
divl
int
in
lret
iret
xchg
ror
sbb
imul
push
push
mov
jo
int
fsubrp
test
and
cmpsb
pop
mov
and
hlt
and
xchg
clc
rcrb
mov
aad
push
cmpsl
jmp
mov
outsb
mov
pop
dec
mov
and
push
mov
mov
xor
sub
leave
push
les
lahf
xlat
sbb
sarl
std
push
mov
outsl
pop
into
kaddw
sbb
adc
dec
int
into
cmpsb
movsb
lret
loopne
pop
insl
test
fsts
jno
lret
and
mov
lcall
mov
fwait
or
test
int
mov
pop
jle
pop
call
push
jbe
sti
in
pop
or
cmp
xchg
lcall
adcb
adc
aad
fadds
shlb
scas
sub
xchg
test
bound
and
xchg
pop
stc
les
push
mov
xor
ror
pop
test
enter
push
ficompl
out
sti
andb
push
xchg
cwtl
inc
fwait
mov
es
cmpb
lods
int3
pop
mov
and
cmc
inc
mov
lods
inc
cmp
lods
or
dec
inc
daa
push
cmpsl
cmp
cmc
in
push
adc
xor
aam
adc
or
enter
and
in
xorl
out
adc
ss
sbb
xor
lds
inc
daa
ss
mov
mov
adc
sub
push
xor
popa
into
pop
dec
sub
hlt
divb
push
xor
cmp
adc
push
cmp
pop
stc
sbb
in
or
and
dec
dec
lahf
shrl
xor
and
xor
imul
xorl
xchg
sbb
inc
sub
std
cmp
dec
sub
jl
xchg
icebp
push
es
cmp
rorl
popa
jo
gs
adc
push
out
sahf
inc
cld
mov
ret
hlt
push
xor
or
pop
jl
mov
ret
dec
into
and
adc
jmp
lods
adc
movsl
push
jo
and
jmp
add
adc
loopne
fs
icebp
sub
das
add
mov
inc
xlat
jae
mov
arpl
iret
dec
xor
jbe
dec
sbb
xor
cmpsb
insl
xlat
int
pushf
xchg
sub
shl
adc
lock
js
das
pop
fsubl
cmp
mov
cltd
push
enter
and
jle
sahf
xchg
add
es
std
jno
mov
jb
icebp
mov
int3
movsl
rcrb
ret
in
je
fistpl
in
xchg
das
jecxz
cmpsb
pop
mov
adcb
int3
push
add
xor
jbe
cld
ja
mov
insb
imul
js
icebp
cmp
aam
jae
mov
mov
pop
jecxz
fcmovbe
fldt
das
cltd
stc
mov
dec
mov
push
pop
mov
popf
pop
ret
mov
mov
xchg
fiadds
adc
xor
dec
lea
notb
and
aaa
adc
push
mov
lds
mov
test
mov
or
ret
pop
jl
adc
cmp
lods
xor
mov
or
mov
shrb
mov
je
add
cmc
xor
js
xchg
daa
add
xchg
and
leave
push
cltd
xchg
cmpsl
jl
mov
das
shll
push
in
jmp
addb
mov
call
push
inc
inc
movl
mov
shrb
ror
jb
ret
mov
les
xor
pop
dec
inc
jae
sub
fldenv
nop
xchg
in
scas
int
les
lret
mov
sub
mov
cmpsl
pop
push
or
push
push
test
inc
pushf
pop
and
mov
sti
jo
jb
pop
pslld
sub
sbbb
push
dec
push
clc
aam
or
cmp
nop
push
cmp
bnd
mov
push
sahf
in
or
xor
fidivl
call
jnp
xor
sbb
outsb
fstl
jnp
movsb
aad
setg
cmc
int
xor
dec
popa
lret
lods
jo
aaa
adc
cmp
insb
mov
sub
insl
cmp
test
cmp
sbb
cwtl
std
add
mov
and
pop
cli
dec
cmpl
pop
mov
cmp
mov
sahf
jmp
das
adc
fdivp
fstl
leave
stos
icebp
movsl
or
push
push
icebp
cmp
in
sar
hlt
xor
int
cmc
adc
sbb
ss
pushf
sub
out
insl
mov
fcmovb
xor
push
mov
test
jle
test
lods
inc
lods
lret
inc
mov
xor
jno
add
sbb
test
push
adc
push
mov
or
icebp
push
add
and
inc
popf
testb
cmp
pop
or
sub
jae
nop
push
fsts
sahf
add
jnp
cwtl
ret
pop
stos
xchg
sbbb
jmp
sbb
data16
lods
cmp
adc
fs
sbb
mov
shl
das
adc
lret
scas
jmp
dec
popf
call
xor
xor
and
pop
shll
stc
sub
data16
push
lock
les
sti
fdivrs
int
ret
cmpsb
or
pop
and
jmp
jl
pushf
jl
testl
xor
cli
and
mov
arpl
sub
ret
inc
insl
mov
stos
xor
jne
mov
popf
dec
push
pop
das
fwait
push
in
mov
dec
mov
adc
popa
enter
ror
xchg
test
sbb
mov
sbb
subl
test
xlat
jb
imul
xchg
cmp
lods
pop
sub
rcrb
stc
lretw
testb
leave
stos
cmp
lock
xchg
sub
movsl
ret
lret
aaa
cmc
sbb
pushf
icebp
jnp
sub
sbb
add
mov
lock
cmp
or
incb
sub
call
cmpsb
fstpl
or
js
fbld
pop
jnp
imul
push
push
insb
cmc
sbb
movsb
push
cmp
and
iret
push
lock
roll
dec
sub
imul
sub
fdivrl
cmp
dec
pop
push
jmp
flds
add
test
shl
rcll
andl
data16
cmp
pop
jo
mov
jo
mov
pop
pop
sbb
jbe
xor
mov
outsb
int3
adc
cmpsl
imul
arpl
xchg
add
fmuls
sbb
orb
cmp
dec
mov
adc
jp
cmpsl
mov
test
stos
mov
mov
push
pushf
das
inc
push
inc
jmp
inc
xor
xchg
cmp
mov
imull
pcmpeqd
lea
scas
xlat
and
jl
out
dec
sub
mov
cmp
jp
inc
rolb
scas
cmp
mov
in
jg
cmp
push
aaa
mov
push
mov
fld
test
nop
dec
sub
and
jbe
jmp
cs
mov
rclb
or
cmp
fisttpl
je
pop
and
and
lahf
add
cwtl
lock
push
dec
lret
into
sbb
cmpsl
push
mov
out
jl
pop
jns
inc
add
lods
mov
adc
mov
push
mov
les
or
aad
aad
hlt
rol
jl
adc
inc
sub
mov
mov
inc
cmp
xor
cmc
ret
lods
jae,pn
fildl
inc
andb
push
add
divl
inc
in
push
stos
push
pushf
daa
dec
or
dec
fcomip
ret
sti
pushf
scas
add
fnsave
pushf
loop
cli
jge
and
sbb
mov
or
imul
call
into
fimull
sbb
add
scas
add
imul
xchg
push
mov
cld
ror
sbb
stc
out
aad
and
or
jp
inc
and
cmp
lock
or
scas
cmp
mov
mov
cli
sub
sbb
xor
notl
movsb
aam
xchg
xchg
enter
cmp
stc
lods
sbb
or
jbe
jp
pop
sar
cmpsl
sub
shl
adc
cs
loopne
fbstp
lcall
int3
pushf
mov
fwait
fbstp
pop
scas
repnz
ja
addl
ja
push
gs
adcl
cli
test
xchg
add
adc
dec
cmp
sbb
fimuls
repnz
mul
push
xchg
hlt
in
cmpsl
psubsw
push
lahf
lea
dec
ret
gs
jns
mov
add
incl
call
mov
sti
cmp
mov
mov
cmc
outsb
outsl
inc
or
jnp
xchg
sub
jno
ds
cmp
test
daa
cld
addr16
sbbb
loop
mov
cltd
fistl
pop
jbe
not
add
pop
lcall
mov
mulps
pushf
xchg
jle
xor
iret
xchg
mov
dec
mov
adc
jle
pop
xor
cmpsl
pop
js
lcall
mov
out
sub
fwait
lret
adc
sub
lahf
in
pushf
jmp
push
mov
lret
pop
mov
lods
jmp
xlat
testb
and
fldenv
cmp
lock
inc
mov
or
popa
jg
pop
ret
adc
dec
mov
and
je
xchg
jo
xor
sub
daa
leave
mov
jle
scas
mov
fwait
push
jns
popa
fstpt
aas
jns
out
arpl
sbb
dec
cmpb
push
push
inc
xor
and
add
mov
shrl
fistpll
xchg
push
mov
add
mov
mov
xchg
mov
dec
push
sub
add
arpl
cltd
out
lea
lcall
adc
not
inc
fisubrl
lods
gs
xchg
or
pop
dec
subb
in
call
adc
sbb
call
dec
cmp
jp
test
pop
enter
pop
cmp
pop
lcall
nop
pop
lds
xor
inc
push
ss
clc
lea
leavew
jne
int3
loop
inc
and
push
imulb
movsl
loopne
or
jae
jae
xchg
xchg
les
mov
dec
jp,pt
jmp
clc
in
xchg
lods
jno
sbb
sti
fcoml
rorl
aas
int3
sbb
inc
fucomi
mov
stos
mov
adc
or
and
ljmp
pusha
stc
adc
pushf
cltd
add
dec
mov
test
cmp
repz
lods
es
fs
push
adc
into
pop
mov
stc
out
sbb
fidivl
addr16
pop
jo
sbb
jne
push
into
xlat
inc
inc
inc
lods
jae
xor
xchg
adc
jno
xor
jno,pn
imul
hlt
mov
xor
jne
jecxz
ljmp
dec
inc
mov
push
push
nop
mov
jbe
jp
sbb
sarb
jb
das
mov
pop
popa
cmp
movsl
xchg
mov
sub
stc
and
xchg
cmp
mov
loop
addl
mov
fs
ret
jne
aaa
ret
sti
mov
pop
sbb
std
cwtl
and
xor
fadd
xchg
cmc
test
adc
dec
mov
mov
pushf
ds
xor
out
mov
jmp
mov
mov
sub
js
and
mov
cltd
and
sbb
fcmovbe
cwtl
dec
into
aam
xor
cld
js
xor
fst
and
mov
inc
push
ja
push
cmp
scas
sub
xchg
inc
pop
mov
aam
add
cmpsb
jle
dec
pop
aad
pop
mov
sub
dec
dec
mov
pop
stc
inc
daa
insl
mov
mov
inc
or
cmp
sti
mov
loop
mov
and
fdivs
adc
mov
sarb
push
ret
and
out
cmp
dec
mov
mov
push
push
cmc
jle
pop
push
mov
sub
addsubps
test
add
test
adc
mov
adc
in
or
mov
jae
jmp
xor
or
ljmp
das
loop
xchg
imul
cli
pushl
mov
imul
lcall
pop
lea
xchg
dec
jae
xchg
test
shll
xchg
insl
pop
pmuludq
xchg
pop
inc
cwtl
push
or
jle
adc
or
mov
cmp
ret
xor
jns
ss
repz
popf
aam
add
inc
sbb
xlat
adc
fistpll
dec
aam
push
and
popa
popa
jbe
xchg
aaa
test
fs
cli
or
cmp
addl
add
fmuls
lcall
mov
cmpb
sti
mov
stos
enter
fwait
lea
cmp
add
repnz
jmp
les
ljmp
adc
fs
call
mov
and
icebp
fwait
or
sub
mov
push
add
lock
mov
rcrl
sbb
cmp
cmc
mov
stc
mov
bound
push
and
fisttps
into
jae
pop
loop
push
addb
aaa
ss
push
jnp
cmp
xchg
mov
mov
faddl
jno
pop
and
mov
je
imul
call
mov
push
mov
loop
icebp
outsb
incb
andl
out
je
pop
sub
sub
sbb
xchg
inc
lahf
sub
sub
iret
mov
ret
addr16
xchg
rcrl
mov
pop
cld
call
mov
mov
test
mov
adc
loopne
mov
sbb
add
dec
jge
sub
sub
inc
pop
mov
ret
jnp
sub
or
das
dec
jbe
push
mov
dec
sbb
ds
ret
shll
xor
sbbl
dec
push
adc
dec
push
cmc
stc
pop
lods
loop
shrb
pop
sub
roll
pop
dec
inc
nopl
jb
ja
mov
inc
xchg
js
gs
jmp
xchg
jge
sbb
repz
xchg
imul
popa
cmp
mov
dec
lock
xchg
cld
sbb
out
and
pusha
fs
mov
into
and
or
lea
testl
cmp
push
pop
das
jns
sbb
mov
jecxz
fldpi
cltd
xchg
mov
cmp
pushf
sub
adc
in
cwtl
or
push
xorl
into
mov
xor
lods
jmp
push
in
push
les
lcall
insb
dec
repnz
sub
sti
mov
popf
into
test
xor
push
fs
out
cli
push
xor
jl
pusha
outsb
mov
cld
pop
inc
mov
add
ret
aad
inc
adc
ljmp
push
mov
lcall
jge
mov
sysret
and
cmp
insl
mov
jg
sub
je
repnz
rclb
lock
add
dec
mov
and
adc
jmp
rcrl
add
jmp
mov
jmp
jne
xchg
or
mov
jae
pop
out
ja
lods
std
sbb
push
shll
into
xor
out
sub
cwtl
cltd
fwait
popl
call
inc
mov
mov
cmc
aaa
cmp
pop
jb
cmp
add
mov
stc
add
push
push
shll
leave
or
cmp
cmp
xchg
mov
ljmp
push
mov
pop
lds
mov
dec
sub
dec
jo
insb
popa
jp
xchg
iret
sub
lret
xor
lret
and
push
stc
sbb
repz
xchg
push
or
mov
push
fcmovbe
sarb
fs
scas
mov
add
pop
xor
push
stos
gs
dec
movsl
mov
jg
push
test
push
mov
mov
pop
int3
je
retw
movsb
scas
cltd
fwait
loopne
cmp
pop
mov
insb
movsl
cmp
mov
xchg
jno
jl
mov
cmp
test
fisubl
rclb
push
fwait
adc
shlb
push
cmpsl
pushw
xchg
jo
jo
or
pop
and
push
jg
or
and
jo
mov
je
pusha
aam
rcr
popa
pop
frstor
mov
fcmovnbe
lods
sbb
fldcw
inc
test
or
ja
lods
inc
sbb
es
inc
nop
rcrb
es
lods
out
lret
jge
cmp
jp
adc
mov
loop
mov
pop
push
rcr
jle
dec
sbb
jb
jno
test
clc
add
inc
push
sub
push
in
jb
cmp
pop
mov
pop
sbb
fs
gs
mov
pop
out
test
push
pop
imul
and
je
leave
mov
pop
fdivl
mov
sub
dec
inc
sti
mov
mov
push
xchg
mov
mov
or
dec
xor
es
scas
mov
pop
xor
sbb
in
sbb
jmp
dec
mov
sbb
mov
int
pop
sub
in
stos
lds
mov
movsl
xchg
sub
pop
lcall
xor
xchg
jb
scas
inc
mov
mov
stc
addr16
mov
pop
xor
push
jnp
hlt
inc
in
push
incl
push
mov
hlt
pop
dec
loopne
add
push
jg
fwait
push
push
mov
andb
out
xchg
pop
imul
adc
mov
xchg
outsl
mov
sbb
adc
dec
xchg
xchg
or
outsl
xor
pushf
xor
sub
adc
clc
fidivs
aad
stc
xor
repz
mov
jg
mov
out
adc
out
loopne
fnsave
mov
loop
sbb
in
or
cmpb
mov
cltd
sbb
add
push
cld
loope
push
insl
mov
test
xchg
mov
outsb
xchg
dec
je
popf
mov
loopne
inc
sbb
rcrb
jge
dec
push
mov
adc
and
dec
sub
adc
or
rcrb
xor
shrl
fsubrs
pop
mov
enter
jns
lods
push
jp
jno
js
adcb
mov
mov
mov
fwait
cltd
sarb
in
xor
out
shll
imul
fcmovu
es
ret
push
into
mov
mov
jo
inc
cmp
shlb
cmp
xchg
add
in
sub
sbb
lods
lods
popf
pop
test
mov
bound
xchg
popl
adc
movl
jg
sbb
mov
test
xchg
xor
loop
pavgb
dec
sahf
sbb
mov
dec
out
xchg
imul
mov
xor
in
cs
jb
cmc
or
mov
adc
and
inc
imul
add
dec
jmp
in
sub
inc
push
sbb
adc
cmp
sti
mov
and
mov
add
and
dec
cmpsb
lret
inc
jns
xchg
mov
enter
ss
stc
movsl
call
mov
xor
pop
gs
test
push
sub
cmp
sbb
lret
push
orl
jge
jno
loope
fwait
jge
inc
sub
pushl
jl
mov
out
cld
or
div
or
push
lods
dec
and
xchg
jmp
incb
mov
dec
jle
es
and
cmp
add
xor
mov
loope
dec
loopne
cmp
aaa
lret
inc
mov
pusha
scas
xor
lahf
and
push
xor
jbe
pop
arpl
mov
lods
stos
mov
mov
inc
js
adc
cs
ficoml
jnp
mov
jae
imul
add
pop
jmp
popa
jmp
sub
mov
int
inc
out
inc
xor
mov
adc
or
push
xor
mov
repnz
cmc
adc
dec
adc
jo
jp
std
out
popf
call
fadd
test
cmpsl
rcrl
lcall
fidivl
jp
cmp
xchg
ficompl
cltd
pop
mov
dec
adc
call
shl
sub
mov
pop
scas
stc
xchg
movsb
mov
ljmp
lret
in
mov
push
int3
add
loop
xchg
pop
sbb
push
xchg
or
add
and
and
and
loop
iret
jo
adc
loop
inc
mov
movsb
int
mov
pop
insb
fsts
call
sub
ret
push
inc
jmp
imul
jae
jo
pop
jl
repz
jno
lods
add
faddl
sub
rcll
xor
cld
inc
adc
mov
pop
xlat
out
jbe
cmp
push
mov
sub
push
lea
movsb
in
or
xchg
shlb
in
cltd
addr16
lock
mov
movsb
mov
dec
ret
sti
add
sbb
xchg
call
ds
or
sub
mov
je
rorb
mov
cmp
push
ret
pushf
xchg
bound
xchg
hlt
out
rorl
bound
jge
jge
xor
sti
pusha
stos
inc
js
push
sbb
cmpsb
cwtl
mov
imul
bound
cmp
push
or
stc
pop
out
dec
add
dec
xor
addr16
mov
xchg
notl
push
fsubs
in
push
leave
xchg
int3
dec
xchg
mov
sarb
roll
jae
lret
jp
xchg
rcll
mov
ds
stc
jno
pop
jnp
movsb
mov
mulb
sbb
mov
aad
sub
out
mov
sbb
dec
pop
sahf
and
mov
dec
dec
pop
push
es
push
loop
or
test
call
retw
lcall
shlb
xor
insl
pop
push
push
shll
sub
ja
int
lds
fidivrs
fildl
pop
mov
sbb
adc
aad
inc
jmp
mov
lods
cmovp
xcrypt-ecb
cmpsl
lret
rclb
mov
inc
jne
push
pop
jmp
insl
fdivrl
shrb
js
jle
cmp
fs
aas
into
push
sub
add
and
sub
mov
ljmp
inc
in
cmpsl
fcoml
jg
xchg
cs
fwait
div
jg
push
adc
sbb
mov
and
sub
in
sbb
push
push
pop
ja
aam
imull
in
pop
inc
mov
or
jp
mov
or
push
adc
jno
dec
imul
add
fucomp
pop
lods
lods
mov
leave
fmull
leave
dec
test
sti
jno
mov
dec
add
mov
scas
mov
mov
or
cwtl
jnp
and
nop
daa
lahf
stc
jae
bound
sbb
xchg
in
dec
inc
xor
xchg
cwtl
sbb
ja
test
xchg
or
xchg
pop
mov
int3
mov
stc
lret
cmp
insb
mov
or
push
mulb
xorb
dec
shlb
leave
cmpsb
jne
adc
sbb
test
mov
clc
jbe
sarl
mov
inc
push
hlt
jle
jge
jnp
add
insb
pop
add
out
or
mov
push
pop
fucomi
ss
pop
pushf
dec
js
sub
inc
inc
int
aad
inc
cwtl
es
mov
fs
adc
jmp
pop
mov
clc
xchg
in
mov
movb
and
cmp
test
jmp
jmp
mov
arpl
jmp
in
and
mov
cmp
mov
pop
adc
jp
ds
pop
repnz
jle
push
jge
int
xchg
fisubrl
es
popa
push
in
add
inc
mov
lahf
push
push
adc
pop
add
sahf
jns
xchg
cmpsb
push
adc
add
jecxz
repnz
ffree
mov
call
or
adc
mov
decb
cmpsl
sbb
pop
stos
sub
jae
xchg
dec
enter
fidivl
cmp
or
sbb
enter
mov
not
pop
dec
mov
adc
mov
lahf
mov
inc
daa
std
pusha
loop
pop
negb
repnz
pop
xorl
sbb
enter
lret
adc
dec
jno
inc
cmpsl
call
mov
or
imul
mov
outsl
jbe
lods
jae
push
out
nop
sub
jns
dec
pop
scas
mov
in
xchg
movsb
pop
cld
ficoml
enter
orb
out
fidivrs
jnp
das
xchg
sbb
xor
inc
and
fwait
clc
push
fisubl
xchg
mov
pop
jne
jp
or
and
push
add
mov
inc
mov
pop
shl
mov
test
sbb
jg
ljmp
xchg
jo
js
adc
mov
lret
xchg
shrb
mov
int3
lcall
rcrl
sbb
sub
inc
xchg
dec
inc
loopne
push
and
aaa
test
mov
fdiv
sub
into
cmp
lods
scas
mov
mov
lret
mov
pop
test
fistps
xchg
mov
in
daa
add
notb
pop
sub
dec
pop
mov
mov
push
das
jmp
sarl
cmp
hlt
cmp
roll
sub
mov
arpl
test
push
xchg
add
imul
xchg
movsl
fdivr
mov
sti
sbb
mov
popa
sbb
xor
cltd
xchg
cwtl
pusha
push
mov
cmc
stos
pop
js
sbb
pop
fildl
inc
xchg
enter
std
pop
outsb
movsb
mov
sub
and
dec
clc
mov
adc
test
adc
iret
flds
xor
outsl
xchg
jo
call
inc
icebp
dec
sub
mov
jg
xchg
js
and
sub
add
sub
sti
pop
lds
arpl
ret
xchg
cmpsb
adc
pop
scas
cmp
push
xor
rcrb
mov
sub
in
add
mov
cmp
push
ficoms
mov
cmpsl
les
popa
mov
outsl
fwait
scas
cld
out
test
inc
popf
jp
jno
pop
stos
ss
lds
push
out
popf
xchg
dec
push
pushl
xlat
gs
cld
fcompl
stos
insb
dec
sbb
data16
cmp
xchg
jmp
lret
mov
jle
cmp
nop
xor
aas
push
dec
mov
jg
jns
fiadds
push
and
outsl
adc
mov
into
sbb
pop
or
sbb
mov
jge
mov
imul
xor
popa
mov
mov
xor
mov
cs
adc
test
inc
call
and
push
in
add
ja
dec
dec
rcr
push
sarb
clc
hlt
subl
subl
xlat
das
out
inc
push
in
xor
fbstp
lea
cmp
lock
mov
lret
mov
xor
pop
imul
leave
ss
addr16
mov
stos
sbb
mov
or
loope
pop
pop
xchg
ret
push
enter
enter
inc
int3
xor
sbb
insb
or
mov
pushf
inc
push
cltd
jns
daa
mov
shrl
pop
push
pop
lea
xchg
jae
mov
lds
sub
nop
jle
arpl
je
xchg
fisubrl
xchg
sbb
pop
sub
adc
clc
jb
jae
push
and
rorb
fimull
lret
loopne
cmc
jne
mov
gs
nop
sub
dec
jns
adc
jmp
aad
or
mov
and
adcl
xchg
mov
aam
jns
stc
repnz
jge
arpl
sub
mov
dec
repnz
std
ret
push
out
sti
ret
add
or
lods
fidivl
rcr
dec
add
push
sbb
icebp
call
push
or
dec
fwait
dec
mov
inc
mov
in
mov
jnp
in
mov
shll
jmp
jae
xchg
ss
and
fildl
adc
dec
pop
mov
pop
xlat
outsb
stos
mov
outsl
jnp
xorb
jae
outsb
out
sbb
repnz
daa
xchg
inc
xchg
inc
sbb
or
jle
pusha
lock
xchg
out
ds
test
jnp
or
std
mov
cmc
leave
or
fmul
ds
int
sbb
pop
jns
lret
fucom
pushf
loop
push
or
mov
pop
clc
jno
inc
mov
xchg
push
and
lock
mov
adc
push
add
js
addr16
imul
in
sbb
rcll
or
cwtl
or
outsb
sub
pop
bound
stos
sbb
cltd
fadds
in
pop
cmpsl
scas
jns
rcrl
push
cs
not
push
nop
mov
bound
mov
xor
xor
mov
rcrb
sbb
jp
add
stos
mov
mov
insb
loop
pop
jns
push
imul
push
or
test
fdivrp
imul
xchg
shll
outsl
xchg
mov
jge
subl
insb
jbe
das
push
les
incb
add
add
push
repnz
push
inc
mov
push
xchg
mov
sub
out
jb
int3
outsb
outsb
out
push
sbb
pop
es
xchg
dec
pop
mov
cmp
popa
ds
test
mov
ret
mov
inc
fsubl
and
daa
filds
daa
addl
fdivrs
or
mov
push
icebp
dec
sub
mov
icebp
sbb
xchg
xchg
cmp
push
push
orb
jns
outsl
pop
and
add
lret
icebp
and
add
pop
daa
mov
pop
dec
cmp
dec
pushf
subb
aaa
ret
loopne
cltd
aad
test
push
and
sub
out
js
sub
xchg
mov
leave
jg
lds
in
vcomiss
js
outsb
sahf
pop
xchg
aas
jmp
inc
aas
fwait
int3
int3
das
push
xchg
cmpsb
xor
inc
out
cwtl
mov
pop
mov
outsl
cmc
mov
fsubs
lret
imul
fadds
and
xlat
xchg
sub
mov
cmp
movsb
add
das
pop
test
aas
cmpsl
cs
push
cld
aaa
sarb
adc
in
add
pop
and
sub
repz
xchg
and
pop
movsl
xchg
pop
or
out
xlat
mov
insb
mov
fs
aad
negl
out
out
dec
or
nop
lock
aam
cwtl
jmp
outsb
mov
rorb
out
sarl
mov
jmp
lret
jb
mov
adc
xchg
loop
inc
jp
rcl
pop
jb
es
mov
es
mov
sbb
adc
sbb
test
mov
iret
test
xchg
xchg
sbb
xor
or
in
jl
xlat
in
dec
int
dec
push
pushf
cli
gs
and
dec
push
repnz
xchg
xchg
mov
rorb
stos
jg
jo
mov
push
inc
ljmp
ror
pop
adc
fstpl
jmp
mov
test
sub
mov
mov
lcall
push
xor
dec
outsl
mov
xor
sub
dec
xchg
stos
push
jnp
cmpsb
sbbb
mov
inc
mov
repz
cmp
xchg
in
leave
push
mov
sti
cmp
jp
out
test
cmp
scas
les
dec
adc
movsl
xlat
mov
je
add
xor
lods
popa
inc
add
dec
sub
sbb
mov
pop
or
add
or
inc
ja
sub
pop
jno
jge
jle
pop
or
mov
or
xor
es
ds
add
mov
mov
enter
sub
pop
stc
inc
lret
dec
jne
es
int3
mov
test
in
icebp
out
sub
divl
out
shr
or
fwait
sbb
dec
mov
fsubs
mov
xor
out
and
lock
jmp
cwtl
test
inc
ret
mov
gs
outsb
xor
gs
loop
cmp
and
jle
mov
ret
shll
push
imul
xor
or
jo
js
insb
fucom
jnp
and
out
iret
xor
pop
mov
dec
loop
dec
clc
fwait
mov
cmpsb
iret
and
sub
jno
iret
sbb
sub
push
push
or
sbb
cmp
fstl
shr
pop
push
push
arpl
or
mov
cmp
xchg
test
shll
shrl
cmp
fcompl
mov
mov
shlb
ds
rorl
lea
out
push
mov
negb
jg
and
mov
mov
pop
jb
mov
rolb
xor
loope
mov
sbbl
scas
or
cmp
fisttpll
mov
or
add
cmp
repnz
push
xlat
fwait
loopne
cmp
lods
iret
cmc
clc
lahf
ss
jmp
cld
cmpsl
dec
sti
mov
or
inc
addl
and
push
or
mov
pop
jge
adc
loope
pusha
push
mov
xchg
outsb
imul
in
nop
cld
fcoml
aas
fistl
lcall
data16
pusha
sub
sti
mov
adc
mov
add
cli
scas
aam
add
cmp
xor
daa
das
fsubrs
rcl
nop
inc
jmp
popf
subb
push
sar
mov
int3
cmp
jo
out
push
xlat
mov
pop
xor
xchg
or
mov
outsb
or
push
adc
sub
dec
sub
negb
das
jmp
clc
and
and
jo
mov
add
mov
dec
cmpsl
orl
sbb
cmp
out
sbb
jge
mov
and
loope
subl
leave
insl
filds
mov
adcl
icebp
sub
or
jge
sahf
roll
ficomps
popa
adc
pop
cmpsb
test
xlat
adc
in
loop
test
into
jle
xchg
push
stos
or
jl
flds
es
pusha
mov
or
mov
inc
mov
mov
into
cmpsl
sahf
adc
pusha
xchg
jo
push
icebp
sbb
and
adc
dec
xchg
add
jle
hlt
loop
add
push
push
stos
clc
jo
nop
ljmp
jns
leave
mov
fmul
and
mov
push
add
mov
loop
and
in
imul
out
xor
mov
je
repnz
inc
iret
std
adc
lods
mov
arpl
stos
js
lds
loopne,pt
jbe
mov
or
test
or
sbb
xchg
cmp
or
divl
fsubrl
sbb
roll
inc
imul
testb
stos
inc
inc
aas
fistpll
es
mov
push
insb
movsl
aam
xchg
xchg
cmp
jb,pn
mov
mov
out
sti
sub
lods
cmp
divl
shl
clc
dec
ds
and
jne
jmp
inc
sbb
test
mov
into
ficompl
inc
inc
xlat
cmpl
push
cltd
xchg
xchg
pop
xor
cltd
sbb
scas
mov
mov
stos
and
lahf
add
pop
enter
mov
das
push
adc
xchg
enter
dec
cmp
xchg
mov
push
nop
loop
rorl
inc
popa
or
pop
xorl
jo
fstpt
int3
loope
and
adc
mov
xorb
mov
jge
mov
ljmp
add
cmpsb
xchg
mov
inc
out
sub
cmp
mov
movsb
mov
divl
mov
fwait
into
lods
inc
es
push
sbb
mov
jne
or
add
stos
adc
cmp
cwtl
xchg
movsb
subl
lcall
rcll
pop
jmp
gs
rcll
imul
jo
loopne
es
jne
sub
sbb
pushw
cmp
dec
cmp
movsb
or
lods
and
fsubrs
sbb
push
mov
ss
and
xchg
ja
enter
sub
mov
sub
fsubs
pop
jo
lcall
xchg
mov
jg
movsl
aaa
jno
stos
cltd
mov
xor
dec
push
cmp
jb
mov
and
fwait
das
mov
pop
mov
arpl
cmp
pusha
add
xchg
stc
loope
out
loope
sbb
pop
and
fcomi
imul
xchg
or
cmp
dec
inc
fistl
mov
dec
adc
movsb
xchg
mov
js
cmp
inc
aam
dec
pop
movsb
dec
sub
jl
cltd
cmc
stos
inc
dec
test
jns
mov
jno
in
insb
inc
adc
sbb
jg
scas
or
dec
movsb
neg
aam
lcall
movsl
fimull
fldcw
pop
subl
jmp
xchg
hlt
outsl
ja
sbb
pop
insb
push
cs
popa
dec
sti
jbe
les
cmp
orl
or
sub
rcrb
pushf
mov
push
inc
fsubs
push
cwtl
aad
clc
sub
test
aad
stos
imul
es
fwait
mov
sbb
add
cmp
mov
fnstenv
add
add
push
jg
xor
sub
insl
cwtl
mov
rcl
fidivl
cld
pushf
int
cmpsb
push
adc
test
sbb
rclb
addl
fstl
mov
test
xor
mov
and
in
mov
sub
xchg
push
mov
xor
xor
mov
xor
hlt
out
jb
lds
mov
sti
and
aam
jae
int
sub
jbe
lods
sbb
pop
mov
xchg
test
jae
imul
dec
loope
inc
enter
lahf
mov
xchg
xchg
mov
dec
repnz
les
nop
lock
xor
int
mov
rcrl
orl
pop
pop
dec
movsl
xchg
sbb
outsl
xor
push
cmp
lea
sub
mov
dec
inc
cli
mov
pop
xor
mov
jb
pop
pop
stos
mov
push
xor
xor
adc
xor
int3
xchg
inc
mov
xor
out
cmpsb
addr16
lahf
mov
cli
outsb
outsl
mov
inc
or
fwait
sbb
scas
loop
sbb
lock
pop
mov
repnz
enter
cmova
jle
jl
gs
int
ds
xchg
les
dec
in
or
xchg
pushf
adc
movsl
push
inc
aam
imul
mov
std
imul
dec
movntq
jbe
add
movsb
mov
mov
jle
mov
into
rcrb
les
adc
dec
fcoms
inc
pop
orl
sbb
sub
jae
sbb
aad
dec
push
and
dec
iret
push
arpl
adc
test
push
inc
dec
cld
jns
xor
out
xor
push
pop
imul
pop
fwait
push
mov
aaa
mov
xor
ljmp
dec
mov
or
into
and
push
fadds
movb
cli
fistpl
xor
rcrl
clc
cld
cmp
shrl
lcall
xchg
and
jo
loop
imul
dec
fldcw
pusha
pop
jne
and
jmp
sub
les
add
add
fldt
push
movl
add
mov
xchg
das
pop
sahf
push
dec
cmpsb
fstpl
cmpsl
int3
mov
arpl
mov
dec
imul
add
les
jmp
rcrl
std
lods
xchg
arpl
loopne
ret
adc
sub
stc
jp
stos
test
pop
mov
shrb
imul
cwtl
jo
cwtl
decl
mov
stos
daa
out
cmp
dec
lock
cmp
lahf
pop
ficoml
loop
and
aad
prefetch
jl
ja
rorl
push
int
pop
bnd
mov
cltd
imul
push
mov
notl
inc
dec
jg
pop
faddp
ljmp
inc
add
mov
inc
in
ja
dec
jbe
icebp
inc
mov
jle
lock
mov
jg
dec
adc
mov
insb
into
enter
adc
lcall
pop
test
daa
popf
jb
pop
sti
jae
pushl
push
mov
inc
or
test
sti
push
or
mov
dec
pop
mov
sub
insb
int3
lret
or
mov
push
fs
lahf
out
in
cwtl
sub
push
sub
mov
clc
int
pop
shrl
jns
cmpsl
gs
decl
mov
pop
ret
pop
inc
stos
jle
xchg
popf
pop
pop
mov
fdivl
sbb
mov
inc
xorl
fistps
mov
fcompl
inc
fnsave
mull
jp
loope
pop
or
cmp
out
mov
fs
nop
lret
adc
sbb
pop
sti
out
push
rcrb
adc
xor
popa
mov
pushf
ljmp
in
fbstp
inc
push
push
movsb
scas
mov
pop
inc
xchg
rcrb
pop
and
and
ss
mov
scas
fisubs
jne
mov
jo
call
pop
pushf
dec
or
xor
bound
xchg
cld
fcompl
jae
cmp
mov
cld
fwait
xor
jl
lods
dec
add
cmpsl
jl
sbb
and
cld
in
inc
ret
sbb
aas
testl
test
loopne
sub
inc
mov
shll
or
decl
sub
or
int
loop
rorb
mov
ret
xchg
jnp
push
popa
jg
jl
aaa
or
push
fs
ja
js
iret
sahf
stc
adcb
ljmp
clc
inc
jmp
in
idivb
jge
add
cli
shrl
push
mov
fidivl
lds
nop
repz
shr
pop
aas
shlb
mov
lock
outsl
pop
cmp
fcos
addr16
xor
inc
inc
stos
mov
negl
adc
dec
in
and
sub
xchg
dec
sahf
addl
push
out
sbb
cmc
or
outsl
lahf
pop
shrl
cmp
or
sbbl
outsl
rorl
or
ds
pop
movb
cmp
es
movsl
sbb
outsb
inc
fsub
imul
mov
xor
aam
or
xchg
fsubs
inc
es
jge
fstp
mov
hlt
fs
and
aam
stos
cmp
sbb
cmc
fcoml
divl
clc
jbe
pop
mov
outsl
es
cs
mov
or
push
pop
rorl
mov
clc
and
push
and
gs
jno
pop
and
jl
xor
mov
inc
out
shll
xchg
dec
insl
les
cmp
popa
out
push
ret
dec
scas
inc
xchg
popa
jb
ror
cltd
add
jg
aas
adc
or
pop
or
loopne
mov
insb
mov
stos
inc
mov
outsl
call
sbb
es
unpcklps
fstpl
filds
stos
push
sbb
nop
dec
inc
or
push
add
jae
fldt
cmc
notb
ja
scas
sti
clc
in
pop
jl
push
and
out
out
sbb
jb
sbb
jns
popa
xchg
int
in
dec
es
xchg
out
fwait
mov
push
gs
xlat
xorb
jmp
ror
hlt
xor
push
xor
insb
in
and
ret
xlat
sub
mov
push
loopne
sbb
mov
popa
jae
orl
pop
mov
inc
cltd
shlb
mov
push
data16
mov
out
sub
cltd
xor
add
lock
popf
outsb
adc
in
push
loopne
lret
add
cltd
mov
stos
nop
inc
xchg
or
sahf
aad
lds
fsubrl
ljmp
xor
call
mov
cld
jno
in
mov
inc
xchg
xlat
lahf
int3
push
cld
fchs
fwait
mov
sti
mov
mov
dec
mov
cltd
jo
pop
push
xor
mov
repz
xchg
jp
push
jg
push
mov
addr16
sahf
adc
push
jo
mov
add
les
lahf
cmpsl
adc
cmp
xchg
out
push
cmc
lods
xchg
pop
in
lea
outsb
mov
out
jecxz
mov
mov
stc
mov
hlt
leave
inc
jp
ret
jge
pushf
sahf
jg
subb
sub
mov
fnstcw
fstpt
int
xor
scas
test
cwtl
push
push
in
addr16
mov
sti
scas
cmp
xchg
sbb
mov
sti
and
int3
xchg
sbb
pop
icebp
lea
jp
pop
mov
cmp
incb
jnp
js
jno
stc
outsb
andb
sub
adc
xor
andb
clc
mov
ss
mov
sbb
jecxz
adc
test
pop
aad
test
xlat
cmp
pop
lds
inc
stc
lea
mov
frstor
test
inc
mov
xchg
mov
in
bound
xchg
jl
out
loopne
fchs
cli
leave
mov
sahf
dec
adc
inc
or
and
aas
mov
push
cmp
jno
xlat
enter
cld
push
in
jnp
mov
cmp
pop
test
pop
jp
jno
data16
sahf
mov
jmp
jnp
out
adc
lock
inc
push
rolb
pop
movsl
push
jo
pop
sub
rcr
adc
aam
pusha
in
repz
xchg
push
sbb
hlt
imul
add
sbb
daa
add
mov
fisubl
mov
cmpxchg
inc
mov
push
int3
fs
fcompl
mov
or
and
neg
test
xor
dec
sub
or
scas
into
cltd
inc
dec
push
popf
jnp
jg
loope
pop
nop
inc
daa
jo
sub
or
adc
sub
dec
in
xchg
sbb
sbb
pop
mov
je
sbb
js
scas
pusha
xorl
sbb
xor
add
outsb
and
es
movsl
insb
jl
or
inc
mov
clc
xchg
xor
mov
lea
push
push
cli
jae
pop
adc
mov
adc
jle
out
iret
filds
imul
mov
cmp
mov
sbb
sbb
pop
je,pt
aaa
ds
stos
andb
jle
mov
push
push
shll
call
pop
std
pushf
imul
sub
jl
insl
jecxz
mov
iret
cmp
inc
std
xor
jae
add
fisttpll
subb
push
dec
and
xlat
and
pop
xorb
or
or
mov
or
mov
es
mov
lcall
jns
popa
dec
inc
push
adcl
int3
into
jno
jl
mov
push
sbb
cltd
cli
pop
cmp
jp
mov
sub
mov
aaa
pusha
jp
mov
add
shl
mov
mov
fnstcw
icebp
sub
sub
loopne
ja
cmp
daa
inc
jmp
daa
mov
and
xor
jo
call
es
gs
outsb
bound
pause
add
call
xchg
xchg
cmc
fildl
mov
add
daa
and
mov
jp
sub
fwait
lods
ret
mov
sahf
fisubl
xlat
loopne
repnz
push
and
xchg
bound
sarb
in
aad
test
jl
mov
xchg
xorl
test
shrb
mov
or
psrlw
mov
dec
xlat
pop
stos
repnz
pusha
fildll
out
mov
inc
and
bound
mov
push
xchg
push
jbe
cltd
lods
popa
sub
addb
lds
fcmovb
fldl
push
test
xlat
insb
push
jmp
sbb
fcomps
push
xor
ficomps
inc
arpl
mov
xor
push
addr16
in
add
ja
jmp
or
ja
dec
scas
sbb
adc
leave
andl
cmp
adc
fistpll
in
divl
movsl
or
je
jno
test
inc
ds
xchg
xchg
pcmpeqb
mov
jo
mov
movsb
inc
icebp
mov
mov
xchg
push
xchg
pop
testl
xchg
push
sahf
add
mov
cltd
mov
aam
std
test
sub
mov
sbb
xlat
fisubrl
sbb
or
xchg
dec
mov
xor
mov
lods
and
das
test
dec
mov
mov
xchg
inc
push
xor
add
inc
data16
enter
jecxz
cmc
mov
into
fucomip
aad
je
sbb
add
jl
mov
mov
pusha
negl
jb
push
sbb
cmp
cli
inc
dec
jge
xor
add
rorl
fnstcw
fdivrp
pop
sbb
mov
in
or
jge
shrl
xor
mov
mov
insl
shrb
clc
test
clc
call
ss
iret
add
sub
xchg
pop
mov
scas
aaa
mov
ds
sti
jge
or
lahf
adc
fucomp
nop
adc
mov
test
lret
xchg
daa
aaa
arpl
int3
inc
mov
cmpsl
stc
iret
leave
dec
mov
lds
add
mov
fwait
jnp
shl
push
fcomi
inc
mov
cmpsl
outsb
mov
notb
cmp
sbb
lds
mov
and
pop
sub
mov
addr16
dec
jo
ds
mov
ljmp
cmpsb
pop
sbb
push
push
pop
bound
outsl
sahf
loopne
pop
fdiv
adc
jge
mov
inc
addl
mov
movsl
cwtl
test
ds
iret
cmp
cwtl
and
sub
movb
test
cmp
mov
push
push
sub
sub
mov
mov
scas
inc
cmp
push
pushf
roll
xor
xor
push
jae
xchg
add
imul
mov
pushf
shll
repnz
xor
pop
pop
out
or
mov
xor
test
and
xchg
int3
add
xor
cld
loope
push
iret
mov
mov
jp
or
ljmp
mov
not
or
cld
inc
sbb
xor
clc
repnz
js
lea
pop
mov
sub
mov
push
cmp
imul
hlt
andb
popa
xchg
and
aas
in
jecxz
pop
push
fcmovb
pop
das
stos
out
fdiv
clc
rcll
sub
mov
cmpb
adc
bound
data16
in
enter
push
jle
pop
add
and
int3
push
xchg
sbb
loopne
xchg
push
mov
xchg
ret
push
cmpsl
push
dec
popa
ds
in
enter
loopne
jp
movb
xorl
stc
xchg
inc
mov
leave
mov
cli
lret
pop
dec
decb
cmpsb
cmc
test
mov
pop
movl
pop
xchg
mov
fldl
sahf
pusha
pop
and
and
inc
mov
xchg
loopne
push
xchg
or
cld
inc
shrb
mov
lea
inc
and
repz
dec
pusha
mov
pop
push
sbbl
in
jb
lahf
xchg
push
or
jnp
pop
sbb
cmp
xchg
mov
inc
cmp
mov
cmpsl
pop
push
rorl
in
add
inc
cmp
notb
test
mov
fwait
xor
fs
xchg
pop
fisttpll
add
jb
leave
sbb
jle
aam
jp
add
aad
shr
sbb
push
cmp
cltd
xchg
inc
or
enter
adc
test
inc
mov
mov
test
loope
mov
out
and
andl
mov
xchg
sbb
sahf
or
dec
inc
cld
mov
insl
gs
lret
mov
in
out
pop
and
cmp
xchg
imul
in
cld
mov
andl
jp
xchg
adc
add
in
inc
xor
rorl
aam
lret
lods
inc
stc
subl
mov
iret
xlat
imul
sahf
jb
arpl
xchg
int
shrb
ljmp
and
sahf
cltd
sub
clc
mov
mov
lods
mov
rcll
fs
out
lds
fstpl
xchg
aam
testb
outsb
fst
and
jle
push
and
pop
mov
jo
sub
iret
ljmp
jg
outsb
xor
pop
insl
cmp
or
jo
or
jp
and
insb
or
cmp
mov
ds
repz
lds
sbb
mov
neg
movups
or
call
rcrl
mov
aad
jns
rclb
inc
push
mov
das
cmpsb
loopne
imulb
mov
mov
mov
fildll
cs
pop
adc
in
inc
or
daa
pusha
pop
in
adc
xchg
jge
loop
add
pop
pop
roll
and
or
mov
mov
dec
xchg
and
jge
and
pop
fnstenv
pusha
icebp
sti
and
push
sub
sub
hlt
icebp
cmc
out
dec
inc
int
xor
mov
add
xor
jecxz
jo
fcoms
ficomps
cltd
and
inc
call
pusha
xchg
loop
jo
cld
cmpsl
pop
call
sahf
dec
lahf
push
pusha
into
es
stos
sub
or
out
lcall
cld
adc
xlat
dec
es
aas
cmp
pop
jecxz
sahf
pop
mov
pop
push
enter
xor
sbb
mov
loope
jg
lret
mov
xor
or
hlt
ss
test
sbb
add
loopne
inc
repz
jbe
cli
cmp
sbb
xchg
adc
mov
sti
mov
inc
sub
xchg
lret
sbb
mov
stc
enter
jecxz
out
mov
or
arpl
insb
mov
inc
ljmp
push
mov
dec
add
jmp
das
pandn
dec
insl
testl
push
rcr
dec
repnz
push
mov
gs
xor
rcrb
sbb
pop
mov
jge
iret
mov
lods
icebp
fnsave
pop
or
insl
mov
or
add
push
aaa
incb
pop
test
sub
scas
dec
cmp
clc
mov
xchg
or
jl
jmp
rclb
mov
dec
dec
adc
mov
in
dec
push
out
testb
xchg
xchg
inc
je
inc
loope
push
test
inc
fcmovnu
or
lahf
adcl
test
pop
or
sub
into
mov
ja
mov
outsb
jl
jmp
dec
dec
cmc
xchg
pop
dec
rorl
inc
outsb
cltd
sbb
sub
cmp
xor
pusha
mov
push
ficompl
pop
push
cmp
loop
mov
sub
lods
bound
pop
das
mov
popa
sbb
xor
push
arpl
test
mov
xor
mov
push
sbb
pop
mov
add
dec
adc
mov
add
push
je
xchg
into
punpcklwd
in
cmpsb
leave
inc
xchg
xchg
inc
mov
xchg
mov
enter
je
decl
mov
fdivrp
jne
mov
cmc
pop
xchg
lods
sub
add
cmc
test
xchg
aas
inc
dec
adcb
sub
in
in
pushf
mov
aad
cmp
xorl
mov
inc
shr
stc
daa
negb
mov
mov
xor
stos
hlt
daa
enter
imul
jnp
andl
sub
mov
jae
aaa
add
inc
xlat
enter
dec
lahf
leave
out
or
xor
movsb
cmp
jne
sub
mov
mov
sub
vcvtsd2ss
cwtl
aad
push
nop
mov
inc
push
jns
jmp
sbb
dec
addr16
scas
adc
aas
sbb
ss
pop
mov
jmp
cltd
push
dec
subb
ja
es
out
and
popf
push
popa
push
decb
push
popa
data16
xor
push
cltd
popa
insb
jge
push
jl
mov
nop
xchg
xor
cmp
jne
cmp
cmp
popa
mov
insb
dec
lea
xor
mov
mov
jl
add
adc
jg
bt
stc
push
and
bound
int3
sbb
stos
movsb
ljmp
negb
xchg
push
imul
movsb
lods
xchg
inc
sbb
sbb
test
inc
cmp
cmpb
fcomp
cltd
nop
mov
call
sub
cmp
cmp
cmp
add
lret
sbb
xor
fwait
out
insl
add
mov
adc
pop
cmp
pop
pop
subb
jle
nop
insl
inc
cmp
jae
xor
and
xchg
gs
das
pop
xor
add
js
iret
fwait
pop
pop
xchg
and
jmp
arpl
adc
mov
dec
lods
sahf
push
and
hlt
mov
aad
arpl
mov
push
imul
in
hlt
xor
cmp
lret
jnp
jmp
mov
jbe
add
or
mov
xchg
adcb
push
cmp
insb
cmp
out
clc
mov
insl
fisttps
xchg
ss
movsb
test
shld
stc
inc
sbb
pop
push
add
dec
pop
adc
jl
loope
mov
mov
push
lds
mov
cld
xchg
sbb
or
adc
rcrb
ja
sub
pop
add
mov
std
inc
jnp
leave
sbbl
mov
xor
jnp
out
jnp
fucompp
pusha
mov
cmpsb
pop
or
pusha
inc
xchg
sahf
push
dec
iret
lret
inc
inc
add
sti
xchg
leave
aaa
sub
subl
mov
xor
test
sbb
ret
jbe
inc
mov
gs
movsb
ja
jne
je
xchg
lock
bound
andl
lock
mov
imull
or
pop
mov
icebp
and
cmp
dec
ds
add
in
pushf
adc
pop
imul
nop
gs
bound
repnz
pop
addb
jo
jno
addr16
push
push
stos
pop
mov
jno
jae
add
sbb
lock
sub
stos
add
jne
inc
dec
mov
movsb
pop
or
lea
pop
lock
addb
jbe
mov
fwait
cmp
scas
pop
push
hlt
push
pop
mov
xchg
fs
inc
push
notb
xchg
jecxz
xor
xor
mov
jne
mov
ljmp
sbb
cmpsb
in
insb
inc
sbb
and
js
mov
xchg
aad
pop
mov
fdivp
scas
and
in
repz
push
push
mov
add
sbb
clc
xchg
mov
or
sub
dec
inc
or
sbb
pushf
dec
leave
jb
fcmovb
and
stos
ja
ljmp
lcall
xor
add
shrl
and
push
jns
dec
mov
inc
xchg
push
icebp
xor
daa
rolb
loope
sbb
add
push
jg
xor
mov
jmp
inc
in
xor
jo
lock
aad
mov
xor
cs
dec
xchg
sbb
push
cltd
stos
lea
xor
roll
push
mov
cmp
cmpsb
jecxz
imul
hlt
and
mov
jl
xchg
push
test
xor
fwait
mov
insb
jg
outsl
sbb
push
iret
insl
lea
sub
cmp
aas
sub
push
mov
and
sbb
stc
loopne
sub
dec
jp
fisttps
add
mov
aad
sarl
and
jb
or
mov
nop
flds
bound
fidivrs
mov
cs
jae
pop
call
dec
das
dec
mov
cli
push
fldcw
stos
aaa
test
int
and
xchg
jle
test
push
xchg
aad
adc
sub
sub
adc
or
lret
lahf
mov
int
pop
stos
sar
jg
and
dec
cmc
dec
dec
fldl
movsl
or
pop
daa
adc
test
pop
idivb
bound
imul
push
xor
stc
roll
sub
arpl
stos
mov
fsubr
call
adc
sbb
sbb
in
dec
cmp
ss
sbb
das
or
mov
push
add
sbb
loopne
sbb
mov
or
add
mov
jo
bound
mov
movsl
sub
and
lock
loopne
in
data16
jmp
orb
decb
jl
sub
sbb
and
push
es
cwtl
ret
mov
jae
test
jl
repnz
nop
fstp
sbb
mov
xchg
jne
or
lea
cmpsl
sbb
outsb
mov
cmpsb
jl
push
popa
inc
dec
clc
fdivrl
fwait
je
inc
push
pop
add
cld
packssdw
nop
daa
adc
test
shll
push
add
cmp
sarl
xchg
out
iret
orl
sbb
jge
popf
inc
mov
sbb
scas
movl
and
mov
sbb
lahf
xor
pushf
jb
sbb
mov
js
out
mov
xchg
or
in
and
repnz
sbb
fmuls
or
outsb
or
add
and
or
dec
cmpsb
mov
sub
jnp
outsl
inc
cmp
popf
bound
push
lcall
clc
pop
int3
ret
dec
or
pushf
inc
repz
rcrl
int
mov
je
call
aam
stos
stos
mov
inc
xchg
mov
and
rorl
call
jle
pop
push
pop
das
pop
push
inc
cli
mov
and
out
loope
jne
xchg
test
std
ficomps
mov
push
cmp
stos
sbb
out
ja
mov
xchg
loope
movsl
jbe
push
aas
iret
pushf
inc
jne
push
imul
cmc
xlat
hlt
and
inc
mov
sub
in
sbb
popf
roll
dec
paddsw
icebp
mov
call
shr
dec
mov
pop
mov
xchg
shlb
pushf
out
add
or
or
cmp
data16
mov
jg
push
pop
inc
std
push
mov
sbb
xchg
mov
and
add
sbb
sub
inc
and
in
jp
pop
adc
adc
push
fwait
or
pop
or
ljmp
xlat
inc
cmp
mov
jmp
aad
roll
push
add
jb
add
and
lds
test
lret
xor
in
je
shll
xchg
insl
fdiv
jmp
scas
fsub
mov
jle
orb
leave
stos
jge
cwtl
inc
ret
aad
cwtl
jbe
in
pop
cltd
inc
sbb
sub
or
dec
lock
or
mov
aas
popa
scas
sub
sub
and
sbb
clc
cmp
in
or
leave
sti
ja
mov
lret
bound
aam
lret
jecxz
xchg
push
mov
dec
idivl
popf
jmp
in
stos
pusha
xorb
or
push
add
aam
jl
and
jne
push
clc
fcompl
mov
xorb
stc
jne
pop
xchg
nop
ljmp
movsl
mov
xchg
loopnew
loope
mov
mov
cmpl
pop
out
stos
add
pop
add
and
or
mov
je
sub
pop
and
mov
ds
daa
das
insb
fwait
loop
add
stos
mov
adc
mov
add
mov
and
pop
ljmp
push
mov
push
inc
xchg
fwait
inc
dec
sub
mov
cld
movsb
out
lret
bound
jmp
sahf
mov
push
das
lea
icebp
cmpl
and
rorb
or
pushf
gs
hlt
mov
adc
mov
pop
mov
nop
mov
cmpsb
fwait
push
negl
imul
pop
loope
push
push
lret
add
sbb
pop
xlat
add
mov
mov
idivb
mov
cwtl
xchg
arpl
xchg
mov
xchg
jle
sbb
xchg
movsb
sti
push
mov
push
stc
sbbl
cli
push
jns
fwait
pop
gs
xchg
mov
out
out
rclb
cld
jmp
pusha
jne
gs
xor
mov
stc
loope
dec
outsl
xor
out
mov
in
mov
popa
push
shr
fnstenv
xchg
cmp
icebp
sbb
inc
jge
sub
iret
int
xchg
outsl
pop
lods
mov
clc
sbbl
addr16
push
and
dec
dec
push
sub
push
mov
mov
sub
mov
cmp
mov
or
incl
mov
clc
push
test
push
dec
call
inc
add
mov
gs
mov
pop
ret
aas
ret
imul
addr16
pop
std
fisubs
inc
jp
dec
cmp
mov
ja
jg
xor
cltd
and
pop
cmp
jge
lret
or
mov
add
rolb
adc
and
and
and
pop
sahf
loopne
insl
pop
jp
mov
mov
pop
ds
out
mov
mov
and
sbb
ja
subl
xor
dec
xchg
mov
pushf
xchg
sarb
dec
outsl
les
popf
mov
dec
push
aad
aam
push
adc
nop
pop
mov
jns
xchg
add
pop
ret
mov
pop
scas
jle
pop
out
jno
dec
outsl
jmp
out
leave
xchg
fsubrl
mov
sub
mov
dec
sbb
mov
or
dec
inc
adc
mov
jl
jae
mov
mov
dec
test
in
out
or
push
cmc
pusha
pop
ret
outsb
mov
mov
addl
sub
or
adc
aas
lahf
push
xorl
lea
and
inc
das
shlb
mov
popf
pusha
fdivrs
and
inc
and
dec
add
shr
jecxz
sti
cmc
sub
cs
jg
xor
ss
insl
sub
xor
xchg
push
add
mov
cwtl
gs
push
mov
add
mov
jns
xchg
out
mov
mov
pusha
repz
jae
jb
sub
sub
pop
pop
addr16
cmp
mov
xlat
mov
in
call
test
mov
sub
mov
add
fidivl
push
xchg
leave
lods
stc
adc
mov
ja
enter
outsb
in
stc
clc
mov
sahf
mov
jo
and
outsb
add
insb
push
inc
sti
jo
xor
or
data16
cwtl
test
adcl
aaa
int3
sahf
push
lret
ja
lods
out
cmp
jbe
data16
pushl
dec
test
ja
push
inc
add
mov
add
fistpl
insb
rolb
int
filds
jge
repz
cmp
mov
jb
dec
sbb
dec
or
pop
and
imul
mov
aaa
push
push
aaa
test
sbb
xchg
mov
fsts
inc
out
js
sbbl
sbb
ds
ljmp
test
sub
out
pushf
ja
add
bound
in
or
sbb
sub
pop
pmullw
inc
jb
lds
mov
sbb
inc
lret
xor
inc
and
xchg
repz
arpl
repz
les
sbb
push
fbstp
adc
pop
or
lret
cmpsl
out
cmp
mov
int3
push
fsubs
mov
sahf
clc
pop
addl
stc
dec
fcoms
ljmp
jle
push
into
std
cmp
mov
rclb
rorb
cmpsb
cmp
push
inc
sahf
jb
fwait
fmul
sub
pop
or
aam
add
imul
dec
dec
pop
jp
shll
pop
mov
add
sub
add
std
mov
jns
jnp
mov
mov
stc
lahf
fs
fmull
cmpsb
mov
lcall
and
psubw
inc
jl
pop
in
or
fldt
int
movsb
out
add
les
imul
xor
jae
int
lock
out
xchg
nop
repz
pop
lret
or
mov
lahf
sbb
dec
jg
call
add
push
dec
cmpsb
data16
movsb
cmpl
xlat
lcall
mov
pop
add
xchg
push
push
mov
or
xchg
scas
insl
adc
sub
cld
mov
das
dec
rcrl
mov
iret
cmpsl
fstl
or
sbb
fdivs
mov
shlb
fistpl
mov
jle
aaa
lods
enter
mov
in
xchg
pop
mov
and
push
in
inc
shlb
repz
mov
jmp
mov
adc
in
out
ljmp
add
add
pop
jnp
jl
or
adc
xchg
out
push
xor
imul
pop
ret
test
jecxz
add
pop
loope
mov
mov
jp
das
negb
mov
push
ljmp
adc
mov
push
and
sub
push
jno
inc
movsl
xchg
lods
mov
pop
lods
das
xchg
sbb
and
ror
xor
pop
adc
shrb
repz
pop
mov
fwait
jae
sub
jmp
js
cmp
insb
jbe
xor
xchg
and
test
fdivr
iret
stos
popf
loopne
pop
idivl
data16
leave
inc
es
outsl
adcl
stos
loop
dec
cwtl
pop
push
movl
inc
cmp
sub
inc
jle
cltd
add
mov
adc
push
call
jno
int
mov
movsb
mov
fmuls
call
inc
in
jbe
xchg
cld
test
enter
mov
jmp
mov
add
in
xchg
cld
popf
repz
leave
movsl
aas
xlat
divl
divb
lock
cli
imul
mov
sub
sbb
int
fildll
stos
xor
push
sub
in
notb
sbb
or
dec
mov
pop
fisttps
insl
fisubrl
movsl
iret
xor
sbb
cmp
mov
leave
arpl
stos
cld
fstpl
pop
pop
out
mov
push
adc
xchg
dec
call
xorb
mov
mov
enter
jecxz
pop
jns
pop
push
repnz
inc
jg
jne
lock
push
lds
jl
pop
mov
xchg
and
mov
dec
andl
adc
and
fcoml
mov
rep
or
mov
xor
or
aaa
sub
push
rclb
jecxz
cmpl
outsb
js
aaa
stos
popf
shrb
rorl
and
repnz
dec
mov
push
push
sbb
test
fwait
push
mov
daa
das
pop
xor
fs
push
sub
fbstp
dec
pusha
jmp
iret
ljmp
pop
cmp
pop
aaa
call
xor
push
mov
rolb
push
fwait
std
in
lret
arpl
cmpsb
out
in
cmp
xor
xchg
test
pop
and
and
mov
inc
stc
in
lock
lods
roll
jbe
pusha
sub
dec
aam
jbe
add
test
xorl
sbb
jmp
ss
xor
out
add
dec
sub
mov
push
add
in
and
vmovaps
imul
sbb
adc
mov
jnp
sbb
adc
pop
xor
test
std
cmp
xorb
adc
sbb
cmp
mov
not
mov
mov
sub
js
cmpsl
fcomip
pushl
sub
adc
adc
inc
fistpll
cltd
pop
in
mov
sub
push
cmpl
shll
in
enter
xchg
pushf
add
repz
jo
push
and
jbe
xor
ret
xor
outsb
aaa
jns
jo
cmp
lret
sub
in
out
pop
aad
mov
divb
test
fwait
cmp
push
dec
xchg
mov
ja
or
lcall
outsl
lcall
add
out
jmp
sahf
jae
cmp
mov
push
out
or
sar
push
push
xchg
jecxz
push
cmp
mov
in
leave
pop
lahf
daa
nop
xor
mov
popl
popf
xor
add
popl
and
jnp
or
lea
mov
push
orl
sbb
mov
jbe
mov
and
repnz
or
adc
bswap
shll
jns
inc
pop
pop
lea
loopne
sbb
sub
dec
repz
cmp
mov
movsb
xor
or
xchg
and
cmp
cltd
rclb
scas
loope
push
mov
jb
in
jno
loop
inc
sub
addr16
xchg
push
outsl
push
std
lcall
out
mov
enter
pop
test
push
jmp
dec
cli
lcall
mov
mov
cmp
pop
pop
das
ja
inc
pop
insb
repz
lret
imul
mov
in
and
xchg
jae
imul
sub
ss
push
mov
mov
test
cwtl
aam
jb
inc
aas
pop
mov
xchg
lods
ficoml
push
sti
dec
aad
push
push
stos
movsl
arpl
je
xchg
in
or
test
pop
and
pop
das
pop
dec
fwait
sar
arpl
sbb
jbe
xor
pop
testl
xor
lcall
xchg
xor
lods
pop
aaa
mov
mov
xchg
add
mov
dec
mov
xchg
imul
test
push
sub
test
sbb
sahf
das
cmpsb
push
mov
aaa
adc
lret
pop
or
sub
sbb
inc
cmp
jecxz
inc
dec
xor
dec
add
aam
imul
sub
ljmp
adc
lds
je
iret
cmpl
pop
cmpl
add
in
cmc
mov
pop
cmp
jne
movsl
add
in
and
ss
clc
enter
mov
push
fidivrl
cld
mov
mov
dec
inc
xchg
aad
jl
push
pop
testb
cmc
add
xchg
xchg
adc
in
xchg
adc
mov
cmc
int
pop
xorl
insb
push
lcall
mov
and
mov
fdivrp
pop
insl
jns
mov
pop
decb
je
push
dec
sub
push
ret
mov
lods
sarl
test
cmp
mov
aad
and
mov
mov
dec
sbb
and
xchg
and
lahf
xchg
cmp
in
add
sub
xor
mov
scas
dec
sti
das
mov
sbb
or
test
andb
scas
imul
xchg
ja
jno
arpl
mov
mov
mulb
inc
cltd
test
cmpsb
les
sarb
add
push
inc
or
jle
fsubs
idivl
or
test
cli
inc
jo
daa
fwait
stos
mov
fimull
xor
sub
add
mov
outsb
icebp
xor
mov
lods
jne
xor
mov
dec
mov
xor
push
cmp
xor
jo
cld
loop
mov
cmp
ljmp
add
daa
xchg
push
fmuls
int
imul
pop
loopne
dec
add
lock
push
ljmp
pop
sbb
adc
sbb
xlat
mov
xchg
fldcw
dec
jecxz
xchg
test
std
sbb
push
leave
xchg
mov
push
mov
out
fsubrs
mov
pop
loop
pop
pop
mov
fisttpll
sti
xchg
xchg
and
sbb
inc
loope
imul
test
leave
arpl
inc
loopne
pop
mov
in
punpckldq
stos
mov
mov
cmpsb
push
mov
push
or
imul
in
or
xlat
sub
xor
push
fnsave
lods
out
xor
cmp
leave
push
pop
pop
lret
push
mov
xchg
arpl
xor
cmp
arpl
pop
mov
dec
jmp
imul
cltd
sub
lret
jl
imul
pop
roll
flds
arpl
insb
out
push
nop
shll
ret
sub
cltd
jge
inc
lret
in
cli
and
lret
pop
xor
jmp
sub
sub
stos
loop
lahf
mov
les
cmp
adc
xchg
ja
cmc
pop
mov
adc
in
push
pop
outsb
adcb
call
mov
cmpsb
add
idivl
cmp
pop
aam
rol
div
adc
push
or
dec
mov
pushf
sahf
xchg
call
cmc
aas
pop
mov
mov
push
mov
stc
dec
shlb
adc
idivb
fldenv
cld
sub
cmp
jbe
ret
cmp
arpl
mov
xlat
popl
addr16
xorb
sarl
ret
push
pop
xlat
enter
mov
or
mull
pushf
int
mov
test
mov
dec
ret
pop
loope
sub
jp
pop
lods
arpl
hlt
xor
mov
imul
push
fs
inc
add
mov
or
or
cmp
popa
lea
cmpsb
xor
daa
fstl
std
ds
out
xorb
test
scas
add
mov
cmp
aad
xchg
xchg
add
aad
test
pushl
mov
loop
xchg
xchg
jo
clc
lret
jo
mov
pop
movsl
js
fucomp
stos
xchg
movsl
or
mov
sbb
out
mov
jle
dec
imull
fwait
sub
dec
xor
cmpsl
lea
rorb
jge
in
lahf
xchg
push
add
xchg
xchg
shrb
icebp
ljmp
or
nop
negb
outsb
fdivs
aad
sbb
mov
and
pushf
cmp
mov
imul
push
js
lods
aas
mov
int
clc
cmp
push
loope
mov
addr16
adcl
sbbb
sbb
scas
push
add
dec
add
fldt
add
bswap
sbb
jle
pop
lds
mov
xor
das
mov
leave
xchg
repz
popf
into
push
pop
xchg
sub
cld
xor
repnz
add
add
aaa
mov
fdiv
xchg
mov
fstl
inc
dec
cmp
lahf
cmp
sahf
xorl
cmp
imul
xor
pop
stos
jno
imul
lcall
pop
cmc
mov
not
pop
sub
inc
adc
lret
pop
push
inc
lods
cmpsb
sub
mov
dec
fisubrs
stos
add
mov
aad
imul
lea
in
inc
sbb
mov
insb
stos
xor
push
dec
outsb
rcll
push
js
mov
adc
sub
cld
jle
lahf
mov
xchg
ljmp
cmp
sarl
pushf
pop
dec
test
cs
pop
pushf
in
add
pop
ds
aam
lahf
nop
in
push
sbb
shrb
inc
xchg
mov
adc
xchg
mov
loopne
and
push
xchg
movsb
jle
icebp
repz
push
adc
push
outsb
mov
cmove
xchg
cmp
sub
rclb
cltd
stos
dec
push
sbb
push
mov
rep
int3
ds
mov
push
jno
mov
cmc
cmp
in
adc
inc
inc
fsubrs
bound
mov
jg
lods
or
imul
and
ret
inc
push
rcrl
jmp
xchg
shll
aaa
aaa
pop
notb
jg
push
sbb
adc
scas
xorl
inc
cli
mov
adc
leave
jnp
mov
mov
mov
popa
test
adc
enter
lcall
lahf
sbb
inc
push
push
xchg
pop
icebp
cmp
sub
mov
mov
std
fwait
iret
mov
pop
aas
lds
pop
push
test
out
int3
js
js
pop
xchg
testb
cs
fcmovu
sub
or
add
in
mov
mov
in
data16
and
cmc
xor
in
cltd
in
or
adc
xor
leave
rcrl
stos
or
sarl
inc
ret
inc
ja
or
cmp
or
testl
sbb
addr16
fucom
scas
mov
mov
adc
imul
dec
lods
ret
cmp
int
cmpsl
cltd
insb
dec
mov
sahf
cli
jmp
jp
xchg
or
jnp
push
fisubrl
je
movsb
pushf
mov
mov
clc
fnstcw
or
sbb
mov
jns
pop
lods
push
push
mov
sbb
sbb
inc
adc
ficoml
fwait
and
dec
sbb
ja
xchg
out
jno
fists
loopne
fucomip
mov
shll
xorb
jmp
data16
pop
pop
aam
jns
fwait
add
fnsave
jb
test
and
sbb
adc
pop
popa
dec
outsb
jbe
scas
jne
jne
dec
sti
dec
mov
outsb
mov
jp
jp
inc
test
cmp
arpl
inc
xor
pop
cld
loope
push
notl
adc
insb
mov
aad
add
or
push
or
mov
inc
pop
addr16
aam
xchg
mov
arpl
mov
fstpt
testl
mov
cli
fwait
or
clc
push
mov
mov
popf
test
and
adc
jnp
shll
jl
adc
daa
sbb
test
jno
scas
jbe
cmc
push
xchg
or
mov
jns
dec
push
pop
fnsave
and
xor
loope
xor
jns
dec
int
push
cltd
mov
or
or
jge
fnstcw
movsl
stos
lret
cmp
cmp
icebp
mov
mov
sarl
xor
ret
sbb
xlat
cmpsb
inc
cmp
mov
pusha
data16
pop
in
out
insl
mov
dec
js
imul
mov
push
pushf
data16
mov
cmpsb
xor
sti
test
mov
jp
jo
mov
inc
ljmp
sub
out
cld
dec
pusha
sbbl
add
pop
insl
or
and
fsubl
push
xor
mov
mov
dec
jno
sarl
mov
and
repnz
jb
mov
push
js
andl
icebp
scas
in
mov
les
lods
or
fnstcw
xchg
and
jne
or
daa
int3
scas
dec
popf
lods
negl
imul
xchg
outsb
adc
sbb
pop
mov
test
xchg
cltd
imul
mov
xlat
mov
lea
aas
mov
jge
ret
arpl
icebp
mov
test
mov
imul
stos
outsl
or
adcl
add
fisubrs
fmull
in
scas
jno
add
and
push
leave
fs
xchg
mov
cmp
sub
sub
pushf
adc
sbb
inc
push
leave
call
out
jbe
sbb
jne
in
pop
sub
mov
and
cmp
dec
mov
xor
xlat
into
push
jno
xchg
pop
push
and
sahf
out
push
clc
lea
jle
or
jne
test
add
les
inc
and
pop
and
mov
xchg
imul
xchg
js
sbb
lods
outsb
out
push
les
mov
adc
mov
cmpsl
fs
sbb
sti
adcb
fsts
and
xlat
scas
arpl
lcall
inc
out
aaa
cmp
ret
adc
mov
xlat
out
das
inc
cmp
push
jle
jp
push
cmp
mov
push
test
mov
jle
je
jne
addr16
inc
jmp
jmp
mov
popa
mov
sub
xchg
fnstsw
add
xor
cmp
decl
mov
mov
adc
mov
add
sbb
xor
insb
fst
mov
jo
imul
scas
fisttps
scas
xchg
xchg
in
testl
jb
scas
jo
shrb
out
mov
arpl
int3
push
mov
push
mov
lret
inc
pop
xchg
mov
popa
arpl
clc
inc
sti
mov
mov
dec
pop
mov
sbb
movsb
mov
scas
sub
push
and
and
mov
sub
movsb
repnz
push
mov
push
adc
lahf
hlt
mov
xor
and
out
add
les
inc
and
pop
js
mov
sub
popa
add
out
sub
add
pushf
mov
mov
jne
jno
push
and
mov
fcoml
cli
xchg
clc
iret
test
add
xchg
out
pushl
ljmp
xchg
in
pop
cld
xor
jl
fcoms
int
inc
sbb
pop
iret
shlb
inc
data16
mov
or
sbb
lock
bound
jns
jl
pop
data16
rep
fldt
or
jmp
in
pop
jecxz
xchg
outsb
lgs
xchg
outsl
or
int
add
js
push
xor
negb
ljmp
jae
orl
test
sub
jmp
cmpsb
push
push
mov
scas
mov
ficoml
xchg
mov
fwait
test
scas
outsb
mov
sbb
vandnps
xor
mov
or
out
sub
fisubrs
push
or
les
in
pop
jecxz
cmpsl
and
and
xorb
jle
and
mov
pushf
cld
pop
inc
aad
jae
popa
les
adc
dec
ret
jecxz
cltd
push
push
cmp
in
addr16
push
int
in
in
mov
cld
gs
push
sub
mov
mov
rorl
in
data16
shlb
add
push
mov
xchg
mov
pop
jne
shll
outsl
int
jl
or
fldt
inc
arpl
and
or
mov
xor
insl
ss
push
inc
mov
inc
pop
dec
add
repnz
sub
cmp
mov
pop
cmc
pop
xchg
fs
xlat
in
daa
push
pusha
rcrb
scas
das
clc
mov
fsub
fsubl
scas
push
mov
outsb
inc
lock
je
stc
xchg
mov
and
out
insb
or
pop
gs
cmp
or
pop
add
xchg
pop
xchg
dec
inc
or
std
orb
cmpsl
adc
pop
cmp
push
mov
test
ss
push
mov
xchg
mov
sbb
mov
push
and
lods
ret
add
push
xor
mov
jnp
int
lcall
stos
inc
and
lods
mov
pop
scas
mov
les
sahf
pop
das
dec
repz
mov
out
int
mov
xchg
ret
arpl
push
sub
jne
push
int3
mov
mov
jbe
adc
mov
rcrl
shll
xchg
sbb
add
jecxz
cmpsb
movsl
ficompl
jg
xchg
push
cmp
or
jg
adc
lods
out
repnz
fwait
mov
mov
jmp
mov
lods
xlat
imul
jbe
push
jb
es
xchg
cmp
enter
ds
jbe
fimull
xchg
jne
sbb
in
dec
mov
jns
xor
fistl
imul
mov
cs
mov
mov
jb
dec
scas
xchg
std
shll
cmp
adc
in
sti
call
repnz
out
mov
arpl
mov
mov
xchg
mov
xchg
arpl
xchg
imul
call
or
fisubl
out
lods
aad
adc
clc
popf
push
adc
cwtl
arpl
xor
int3
xor
sti
hlt
xchg
sbb
das
xchg
loop
notb
mov
and
jmp
ds
testb
dec
cmp
fcoms
testl
push
lods
jns
pop
fisttps
mov
cmp
pop
inc
jo
xchg
push
xchg
cmc
in
inc
add
pushl
mov
sbb
push
xorl
imul
pop
add
and
nop
pusha
cmp
xchg
dec
mov
shll
or
inc
es
mov
sahf
jmp
stos
fs
and
ret
jnp
xchg
xor
int3
dec
les
leave
mov
scas
fimull
cmp
pop
das
adc
cltd
add
mov
jae
sbb
test
pusha
sbb
jnp
push
mov
jge
push
into
and
inc
jnp
and
xor
adc
bound
leave
sahf
cmpsb
xchg
pop
fwait
lea
push
cmp
push
arpl
ficoml
decb
lea
inc
pop
mov
or
push
movsl
imul
in
leave
adcb
cmp
std
push
add
pop
inc
pop
test
out
pop
xchg
outsl
adc
jb
sbb
mov
lahf
shll
cmp
gs
push
add
push
loopne
movsl
push
jns
pop
sub
or
mov
mov
mov
sahf
stos
mov
push
push
imul
mov
sub
mov
pop
ror
jp
in
leave
mov
stos
mov
pop
shll
int3
mov
dec
jl
push
jl
sbb
out
or
cmpsb
ds
sub
mov
push
cmp
dec
pop
sahf
fcompl
xchg
test
xor
and
fcoms
xchg
icebp
pop
jp
fs
rolb
decl
inc
dec
jmp
incb
add
outsl
adc
pusha
mov
fnsave
pusha
mov
adc
push
enter
xor
jae
insb
cmpsl
daa
int
stos
jge
and
pop
pushf
xchg
dec
lahf
outsb
or
lods
xchg
pop
dec
nop
xchg
leave
xor
jl
sahf
push
or
ja
aam
repz
nop
inc
lret
jns
rorb
push
fisttpl
shll
lock
xor
add
cld
add
or
test
push
jge
orl
imul
and
test
imul
ret
lods
push
cmp
cmp
mov
mov
push
enter
cmp
inc
adc
xchg
jnp
dec
sub
data16
sub
push
jnp
call
xor
dec
loope
lahf
jno
add
fcom
les
cmp
faddp
div
jnp
xchg
in
xchg
pop
imul
sti
shll
mov
lahf
mov
std
and
pop
out
xchg
test
popa
mov
push
outsl
rolb
mov
fstpl
fisubrl
arpl
adc
mov
arpl
push
xor
sub
jne
push
ljmp
jne
adc
inc
in
mov
in
adc
push
addr16
dec
mov
imul
outsb
testl
push
test
inc
lcall
stc
jecxz
inc
sti
cld
sahf
hlt
xchg
mov
jp
cmp
pop
mov
xor
mov
inc
or
pop
fcomps
push
xor
mov
lret
orl
mov
ds
call
mov
adc
dec
iret
sbbb
iret
in
out
mov
mov
outsl
dec
mov
popl
add
cmp
pop
dec
pop
lods
sbb
clc
sub
fistl
inc
int
mov
inc
mov
nop
mov
dec
jb
loope
bound
xchg
mov
add
mov
lcall
nop
jo
leave
mov
shrb
mov
push
lret
mov
out
in
leave
stos
test
dec
shrb
pop
test
enter
push
jp
scas
xchg
and
mov
outsl
inc
and
inc
pusha
pop
addr16
adc
out
scas
ds
jo
iret
fistpl
or
aam
cwtl
arpl
and
dec
clc
mov
mov
dec
dec
mov
xchg
add
inc
movsb
in
gs
push
daa
mov
pop
clc
push
or
loop
aas
fsubl
sbb
pop
shlb
insb
pop
outsl
xchg
mov
fldenv
ljmp
or
push
mov
sub
sti
dec
lret
pop
bound
adc
sbb
mov
leave
pop
outsb
xchg
lcall
repz
movsb
xor
clc
lcall
ja
les
push
cmp
sbb
out
loopne
mov
mov
push
fwait
ds
fisubrl
pop
imul
mov
inc
pusha
pop
sbb
test
jae
push
mov
jge
jecxz
stc
pop
xchg
sub
idivl
imul
gs
stos
mov
loope
inc
stos
lock
cmp
imul
sub
in
roll
daa
nop
xor
push
std
insb
push
test
outsb
pop
push
fsubs
orl
cmp
mov
adcb
cmp
sbb
int3
cwtl
sbb
jecxz
jle
push
cmpsb
and
into
jnp
dec
out
jb
adc
je
inc
sub
cmp
or
jbe
push
lods
ror
push
pop
scas
sub
or
ret
fisubs
push
sete
je
cmp
cs
sbb
lcall
push
jecxz
call
push
xchg
pushf
jge
add
shl
cwtl
mov
sub
dec
outsl
imul
sub
ja
push
shrl
xorl
in
aad
imul
shll
fsubrs
lret
stc
mov
xor
sub
xor
cltd
testb
cmpsl
repnz
and
lret
cmpsb
push
adc
xchg
std
scas
cmc
ljmp
jecxz
insb
xchg
fisttpll
testb
xchg
mov
and
cmpsl
xchg
fsub
lds
pop
sub
lods
xor
cmp
dec
cmp
cmc
jge
pop
int
repnz
sub
rcrb
outsb
sub
dec
sbb
scas
cmpsl
pop
rorl
movsb
xor
mul
in
popa
xchg
daa
dec
or
and
jmp
mov
fs
xchg
cld
mov
ffreep
mov
sub
inc
popa
std
cmp
call
rorb
fcoml
loopne
sub
pop
jbe
jmp
mov
mov
sbb
jle
popf
rorb
xlat
addr16
stos
sbb
or
lds
loop
out
inc
rcrb
test
inc
add
repz
add
xor
cld
test
lret
mov
or
adc
daa
out
pusha
add
ret
inc
adc
add
push
pop
test
daa
push
cmp
into
sub
fiadds
ret
cmp
mov
jnp
ret
xchg
fwait
cli
ret
mov
mov
pop
and
pop
or
jae
loopne
jo
add
imul
mov
sub
cmp
fldenv
mov
pushf
ficoml
dec
inc
insl
push
xor
sahf
cmp
jb
lret
call
cmc
push
addr16
out
xchg
pop
mov
cmp
or
adc
cmp
inc
es
sbb
mov
push
push
popf
imulb
fwait
les
repz
sub
popf
test
fbstp
lods
adc
jp
mov
or
mov
push
jno
cwtl
fbstp
mov
stos
sarb
inc
enter
xchg
repnz
jge
out
xlat
mov
mov
jmp
jbe
mov
inc
mov
jmp
xchg
xchg
into
xor
xchg
or
movb
inc
push
inc
xlat
push
movsl
mov
mov
jg
and
mov
inc
sub
dec
adcb
adc
cltd
into
pop
adc
outsb
pop
gs
cmpsb
insl
mov
enter
fsubl
loopne
adc
fmul
mov
call
cmp
movsl
mov
icebp
and
mov
cmp
popf
cmpsb
and
adc
andl
ss
jge
arpl
out
out
and
mov
stos
sahf
popl
fidivrs
lret
dec
xor
cmp
push
test
jmp
xchg
xchg
dec
mov
scas
jmp
mov
or
push
out
and
push
fsubl
lock
dec
sub
jl
dec
fnstsw
push
mov
pop
mov
sbb
mov
mov
daa
or
loopne
or
push
das
aaa
in
add
mov
sbb
jae
lds
sbb
orl
sbb
sbb
add
stos
stos
inc
pop
xchg
fldz
out
rorb
pop
das
hlt
push
cli
filds
adc
pop
sbb
das
add
popa
and
xchg
icebp
insb
sar
data16
mov
pop
adc
mov
leave
in
in
cli
stc
push
and
ret
aaa
ret
imul
lar
xchg
data16
jge
and
in
bound
push
or
cmp
add
add
mov
adc
icebp
std
sti
scas
xchg
daa
jl
outsb
or
push
mov
jmp
mov
sbb
in
sbb
cli
inc
mov
mov
xor
rclb
jmp
sbb
outsb
push
std
mov
dec
cwtl
sbb
call
mov
test
mov
lahf
repz
js
movntps
scas
movsl
jmp
mov
repnz
ret
xchg
insl
mov
fwait
bnd
sub
mov
je
andb
lcall
daa
pop
cld
out
jg
lret
jecxz
xor
js
mov
imul
insl
xchg
les
push
ret
fs
push
call
dec
push
xor
imul
lret
adc
js
inc
sbb
pushf
rcrl
xchg
aam
popa
lret
jb
mov
pop
mov
pop
sub
xchg
push
jno
ret
dec
cltd
mov
mov
add
frstor
imul
and
std
or
adc
adc
mov
jo
int
pop
mov
shl
mov
cmp
push
scas
mov
addr16
xchg
cltd
pop
dec
sbb
pop
mov
mov
es
mov
lock
dec
sahf
push
andl
cmp
les
and
idivb
hlt
sarb
push
fstl
out
dec
cwtl
adc
mov
jns
int3
xchg
in
aam
jnp
fld
movsl
sti
adc
pop
ror
jecxz
fdivp
jmp
imul
xchg
jo
mov
test
xlat
push
cmp
shrb
jmp
inc
out
push
dec
or
sub
jb
popf
pop
pop
inc
push
xor
sub
loopne
push
pop
xchg
decl
cmp
pop
pop
and
movsl
mov
sub
cltd
mov
xchg
pop
sub
sbb
push
mov
push
xchg
pop
imul
addl
mov
shlb
loope
add
sar
mov
and
mov
xchg
mov
out
adc
xor
fmuls
nopl
inc
daa
cmpsl
insb
daa
add
pusha
and
lods
xor
xchg
lds
or
js
data16
push
jae
test
int
mov
fadd
xchg
and
mov
mov
sahf
out
and
inc
xchg
pop
push
xchg
mov
jge
xacquire
dec
pop
fmuls
adc
test
pop
mov
and
int
xor
sbb
popf
inc
push
divl
addr16
cmpsb
or
loopne
xchg
and
and
mov
inc
je
xlat
dec
add
jae
push
mov
call
imul
fists
fsts
in
mov
xchg
cmpb
and
pop
lahf
add
stos
roll
push
jmp
push
gs
sbb
and
imulb
rolb
mov
xorb
fsts
mov
fucomi
xor
jmp
iret
movsl
clc
outsl
jmp
out
pusha
inc
pusha
pop
pop
sbb
sbb
fnstsw
xchg
sbb
add
pusha
fadds
lret
aas
cmp
and
int3
std
cmpsb
cmpsl
or
faddl
data16
cwtl
mov
xchg
cmpb
cmpsl
push
pusha
or
popf
mov
xchg
lock
xchg
sahf
pop
test
shl
mov
movl
aaa
mov
loopne
inc
add
adc
arpl
inc
in
jle
xchg
sub
add
and
push
lods
fcomp
cmp
test
rolb
push
pop
xor
mov
xchg
es
test
inc
pop
mov
cmp
cmp
jge
xchg
jl,pn
mov
jle
cmpsb
xchg
into
das
and
daa
sub
hlt
sbb
mov
insl
subb
out
enter
addb
into
dec
andb
adc
das
cmp
clc
fistpl
hlt
jge
mov
xor
cs
and
rclb
sbb
or
mov
scas
outsb
dec
in
inc
jae
jl
shll
inc
mov
push
mov
into
std
in
aaa
pand
inc
rcll
outsl
nop
mov
cmp
sub
or
call
and
mov
fidivl
add
lods
mov
enter
cld
jle
mov
jo
fmul
or
dec
das
nop
sub
daa
mov
mov
cmp
pop
sbb
xchg
mov
cmp
pop
push
pop
lea
insl
sub
shlb
mov
sbb
inc
or
scas
cmp
cmp
push
pop
divb
lret
dec
lret
test
xchg
dec
sbb
xor
out
jmp
fwait
das
sbb
popa
cmp
lret
or
xor
loope
mov
mov
out
rcrl
int
cld
jnp
pop
xchg
push
lds
inc
sarl
push
ljmp
inc
add
add
subl
imul
in
push
ja
sub
stos
imull
aad
jmp
xor
adc
cmp
clc
loop
jne
mov
push
fs
cmpb
xor
imul
fwait
dec
push
jle
flds
adc
sub
mov
push
add
cmp
inc
add
cmp
out
iret
xor
test
pop
inc
lock
outsb
sub
and
push
iret
adc
jb
leave
xor
sbb
sbb
or
aad
jp
fsts
ror
inc
loopne
push
pop
jno
cltd
pop
or
xor
pop
pop
icebp
fstps
push
pop
sahf
outsl
pop
enter
movb
stos
arpl
dec
ljmp
mov
xchg
and
and
les
pusha
mov
lods
jmp
orb
je
dec
cmp
test
dec
std
std
xchg
xchg
mov
jle
cmp
testl
mov
loop
push
lret
xor
test
insb
lahf
sub
lret
loope
pmuludq
add
inc
mov
push
mov
les
lahf
scas
sub
icebp
cltd
fsubrl
xchg
outsl
lcall
les
jl
inc
in
jle
mov
imul
add
push
inc
jae
dec
dec
scas
xor
stc
mov
add
addr16
jnp
or
int
cld
push
jnp
fisubrl
lcall
push
xchg
inc
outsb
inc
nop
jge
mov
sbb
sbb
lcall
cmc
xorl
pop
cmpsb
pop
ljmp
shlb
mov
mov
adc
ja
outsl
inc
sar
testb
jns
mov
stos
in
and
ficomps
repz
xor
ret
pop
js
and
inc
add
pop
push
hlt
sub
fmulp
pop
lcall
test
cltd
dec
mov
mov
mov
xchg
pop
lock
mov
icebp
xchg
dec
jbe
je
push
xchg
les
xchg
je
out
jb
inc
fists
lods
pop
idivb
aam
pop
ret
pop
iret
into
pop
pop
in
dec
mov
mov
cmpsl
xchg
std
cmp
leave
xor
dec
scas
adc
mov
aas
xchg
push
rcrl
enter
push
gs
jne
jl
das
dec
fbstp
cwtl
sub
stos
daa
xorl
ja
fidivs
push
sbb
push
mov
cmp
popf
add
ss
xor
rclb
xchg
loopne
push
out
stos
and
mov
ret
pop
clc
pop
mov
jge
aas
in
cmp
fidivs
push
aam
pop
adc
push
repz
sbb
mov
adc
adc
js
pop
in
loop
sub
jmp
test
int
sub
int
xchg
push
push
adc
sbb
push
aad
out
and
lret
jne
dec
mov
xor
pop
adc
adc
das
xchg
shl
int3
inc
and
push
lods
sbb
fs
dec
mov
cli
and
stos
push
lock
fsubr
iret
mov
jno
dec
aad
subl
push
incb
decl
loopne
cmc
push
push
push
js
in
es
pop
jge
or
arpl
out
and
push
adc
mov
and
jle
jle
xor
add
dec
insb
nop
fwait
insl
imul
aad
icebp
mov
jae
mov
movmskps
in
pusha
jo
cli
xchg
push
cmp
idivb
adc
jb
in
xor
lods
test
jno
pop
push
stc
icebp
shll
aad
popa
fidivs
leave
mov
stc
addl
jnp
pop
pushf
mull
pop
xor
lret
jge
fwait
ret
mov
mov
add
xchg
mov
sbb
cmp
dec
lods
mov
gs
or
shl
jecxz
adc
dec
aam
pusha
popa
and
cmp
xchg
out
xchg
jge
je
fs
xor
ljmp
mov
cld
inc
jg
jmp
shll
mov
sbb
enter
mov
adc
mov
sarl
cld
fdivrl
jle
push
in
loop
icebp
leave
aam
mov
mov
jno
in
inc
dec
sub
flds
add
out
inc
icebp
push
in
mov
xchg
stos
hlt
sbb
xchg
pop
mov
lcall
push
out
testb
mov
cmp
shrl
andl
out
stos
sbbl
test
or
ss
push
int
ret
dec
loop
rcll
cltd
and
push
cwtl
mov
push
sbb
jl
cld
int3
jge,pt
shll
stc
in
fcmovnbe
insb
push
push
dec
add
mov
fptan
add
int
pop
rorb
movsb
dec
aam
xchg
mov
xchg
pop
sbb
xor
incb
sbb
lea
std
xchg
xchg
push
cmp
mov
sbb
fsts
mov
push
push
aad
mov
pop
sub
fmulp
xchg
sbbb
xor
sub
addr16
sub
mov
pause
jmp
lods
sti
xchg
sub
xor
iret
mov
inc
insl
jle
rcrl
or
leave
outsb
pop
jnp
js
cmpsw
adc
test
jp
fnstcw
push
rclb
ret
cmp
scas
lret
nop
movl
mull
xchg
cld
shll
jecxz
pop
add
addl
mov
inc
push
lret
roll
lock
mov
push
jge
int3
mov
insb
arpl
cld
fidivl
pop
aad
and
stos
pop
pop
xchg
add
repz
sub
into
dec
cmp
fisubrs
shlb
xor
mov
jne
push
out
pop
pop
lcall
add
ss
cld
add
stos
lahf
or
push
adc
push
push
imul
sbb
push
sbb
lds
inc
test
mov
mov
mov
push
scas
xor
mov
int
sub
jmp
inc
mov
xchg
mov
inc
inc
or
mov
dec
inc
in
jl
add
lret
in
mov
movsl
repz
xor
lret
insl
xor
shrb
mov
cli
inc
mov
sub
cltd
adc
outsl
cld
rcr
pop
aaa
xchg
stc
js
je
push
xorb
xor
inc
dec
cmpsl
mov
fwait
dec
loope
inc
lods
xchg
or
mov
jae
int
sub
sub
neg
and
sbb
xor
add
shll
dec
std
popf
sub
test
mov
jecxz
mov
mov
jecxz
ret
mov
pop
xor
mov
cld
fstpt
sbb
shrl
push
jnp
xchg
jne
and
pop
ret
cmp
sub
aaa
mov
das
rcrb
dec
lds
xchg
ss
dec
scas
call
ss
aad
cwtl
add
pop
ficomps
popf
iret
xchg
xorb
xchg
add
pop
fs
out
dec
sub
mov
loope
dec
push
test
jne
push
outsb
test
mov
in
leave
scas
mov
inc
push
mov
or
pop
push
gs
xor
ss
push
push
xor
push
aam
lods
les
orb
or
push
xor
popa
pop
inc
sbb
add
mov
sbb
movsl
mov
pop
lods
jns
adc
push
dec
es
adc
xchg
rcrl
adc
and
mov
and
stos
push
mov
out
pop
arpl
dec
mov
dec
dec
jns
mov
lock
jl
pushl
hlt
enter
dec
arpl
jg
sarl
xor
stos
enter
out
sub
cwtl
hlt
xor
fwait
and
xor
mov
hlt
pop
jle
mov
mov
pop
mov
jae
sub
mov
cs
mov
inc
sub
push
loop
mov
insl
jmp
insl
mov
and
mov
cmpsl
subb
mov
jb
push
xchg
or
pop
mov
cld
mov
popa
repnz
cs
and
bound
ret
fucomi
daa
adc
stos
jmp
bound
cld
in
shrl
aad
ds
sub
in
and
pop
pop
in
sbb
mov
pop
push
pushf
inc
and
adc
mov
shlb
nop
sub
cld
or
add
test
inc
lods
xchg
int3
mov
pushf
jae
mov
xor
push
mov
jle
pop
stos
push
adc
mov
xchg
jmp
push
sbb
in
jno
inc
and
add
sbb
cld
cmpsb
je
add
cmpsb
cmp
push
dec
mov
mov
xor
jmp
cld
xchg
int
popf
dec
inc
mov
scas
out
cmove
mov
pop
pop
enter
xor
xor
addr16
hlt
mov
xchg
adcb
mov
dec
cmp
cmp
xor
xor
pop
add
out
scas
jne
stos
scas
rorl
mov
pop
lods
lcall
jp
popl
cltd
sub
push
cmp
or
mov
dec
xchg
mov
lods
shrb
data16
push
lods
cmp
movsb
shrl
dec
ret
lods
xchg
nop
push
test
dec
es
mov
mov
lods
cmp
push
mov
loopne
stc
test
outsb
add
push
loope
dec
cmpsl
fucom
and
pop
or
jge
xor
addb
and
sbb
mov
pop
mov
jae
xchg
mulb
jle
xor
rcl
enter
mov
pop
xor
mov
xlat
mov
pop
fld1
add
iret
or
sbb
or
rcrb
inc
lea
cmp
addr16
test
jno
pop
mov
icebp
orb
mov
cli
xor
ret
aam
xchg
out
mov
pop
loop
pushf
add
sub
pop
sbb
scas
mov
lahf
out
filds
cmpb
out
adc
addr16
pminub
or
xchg
fwait
cmp
inc
shrl
sbb
jae
jne
les
push
lods
scas
push
outsb
arpl
pop
inc
sbb
sbb
sti
fnstcw
lahf
add
daa
test
or
enter
shrb
sbbb
mov
es
dec
out
adcl
xchg
and
cmc
ret
test
sub
loope
cltd
cmp
jmp
mov
repnz
pop
inc
cs
adc
cltd
jmp
int3
adc
dec
cmp
outsl
xchg
aas
sbb
cmpsb
push
and
or
pop
rclb
sbb
insl
pop
sub
lret
inc
pop
popf
pop
xchg
out
inc
inc
aam
ljmp
inc
xchg
add
inc
mov
pop
mov
xchg
data16
mov
mov
pop
lret
add
scas
andl
or
decb
push
scas
mov
mov
inc
jge
js
incl
js
dec
das
pop
out
fldcw
jl
jmp
out
fwait
insb
add
push
xor
push
int3
jecxz
xor
jle
xlat
popa
sbb
ret
dec
mov
inc
cmp
inc
push
adc
xchg
insl
loopne
xchg
insb
and
adc
pusha
inc
push
dec
adc
add
faddl
mov
cmp
jge
sbb
xlat
or
das
std
shll
fistps
mov
stc
ja
sub
push
push
xchg
mov
pop
clc
cmp
cmpsb
jnp
inc
jns
cmp
jnp
and
push
mov
fsubl
inc
enter
and
pop
mov
mov
sub
aaa
xchg
rcl
je
mov
je
arpl
fists
cltd
ss
in
xchg
push
xchg
aas
iret
dec
pop
test
dec
jle
loope
jl
or
lods
icebp
pop
dec
out
and
popa
in
lds
dec
xchg
cld
insl
push
adc
mov
sbb
inc
lods
in
imul
lock
xchg
das
jb
mov
add
dec
adc
sub
pusha
adc
dec
das
sar
lahf
leave
mov
mov
add
cmp
popf
xor
lods
xchg
push
jbe
xor
inc
cmp
arpl
inc
insb
jl
in
or
or
mov
sub
push
mov
mov
fmull
in
ret
in
inc
mov
sti
into
int3
mov
pop
mov
je
ljmp
adc
mov
clc
sub
std
ljmp
aam
inc
dec
and
mov
mov
sahf
jp
mov
out
mov
xchg
xor
sbb
cmp
xor
inc
pop
xor
aam
in
sub
dec
mov
aaa
adc
add
repnz
clc
jnp
xchg
sub
xchg
mov
lea
rclb
mov
popa
adc
fidivrs
fsts
pusha
imul
int
or
imul
dec
mov
pop
sbb
mov
cmp
mov
mov
fcom
add
xchg
push
cltd
testb
mov
out
in
mov
pop
jbe
int3
lods
and
mov
adc
mov
xchg
cmpsb
aaa
add
sti
insb
mov
jno
and
add
enter
sbb
out
arpl
lock
adc
xchg
xchg
in
outsl
push
sahf
notl
rcr
out
testb
inc
adc
mov
inc
int
and
pop
sbb
rorl
int3
fildl
mov
sbb
add
pop
xlat
xchg
aam
sub
gs
dec
fldl
jb
mov
mov
xorb
out
loop
mov
mov
cli
pop
fnsave
inc
arpl
add
sub
ja
cmpl
daa
cld
push
test
mov
pop
jbe
sub
dec
cli
push
push
add
add
in
inc
xchg
adc
leave
inc
cmpb
aam
jg
lret
jl
push
adc
pop
fsubp
xor
inc
xor
mov
sbb
jl
jo
movsl
rcrb
cmpsl
inc
data16
fisttpll
out
getsec
xchg
xchg
nop
jmp
and
or
addb
out
stos
adc
xor
int3
sbb
sbb
mov
leave
loopne
adc
mov
shl
mov
inc
imul
adc
add
arpl
nop
sub
pop
jo
cmp
test
pop
or
xor
fs
sub
mov
mov
call
lret
out
add
jp
push
or
divl
xor
jae
sbb
push
rclb
sbb
adc
or
mov
xor
push
loop
mov
lcall
lods
mov
push
mov
mov
cli
mov
mov
add
scas
jle
jno
cwtl
fs
testb
in
mov
mov
cmc
fldl
clc
cld
xchg
pop
sarl
push
add
mov
xchg
ret
sbb
inc
push
js
mov
outsl
int3
push
xchg
lret
mov
sbb
lock
cltd
push
into
cmp
sub
xchg
sarb
call
je
aam
in
sub
xchg
rolb
pop
mov
mov
cmp
inc
in
xchg
mov
lcall
mov
mov
shlb
and
xor
out
mov
sub
adc
and
or
lret
pop
pop
test
pop
scas
mov
fists
pushf
scas
sbb
ror
icebp
jp
xlat
mov
into
shr
icebp
pusha
jnp
xor
loope
stos
int
imul
cmp
mov
xor
sub
add
scas
dec
xorb
sbbl
rorl
enter
sahf
or
add
pop
inc
sbb
jmp
lods
movsb
push
int3
push
pop
cmp
daa
in
adc
rcrl
popa
negb
jne
mov
or
mov
cli
jno
into
inc
sbb
or
jno
xor
shlb
popa
xor
lcall
lods
je
into
ds
in
push
xchg
aad
cmc
mov
dec
dec
pushf
cld
or
daa
sub
adc
sbb
mov
and
xchg
jg
push
cmp
jle
xchg
push
dec
xor
mov
xor
in
fimull
adc
icebp
int
fldl
aam
xchg
mov
popf
sbb
fidivs
lcall
cmpsl
hlt
mov
les
adcl
cltd
xchg
out
and
repz
dec
in
shlb
paddsw
scas
pop
sbb
sbb
aad
xchg
add
mov
out
adc
add
aam
fadds
rolb
fwait
andl
loope
pop
ds
inc
in
pop
or
cmpb
inc
not
pop
xor
in
adc
sbb
aaa
lock
loopne
inc
int3
lret
push
mov
jns
rorb
adc
jns
insl
dec
and
cmp
adc
pop
jo
adc
hlt
sub
ficomps
or
and
pop
jecxz
xor
xchg
imul
xchg
xchg
pop
sub
scas
cmovns
rclb
fimull
mov
jge
sub
adc
fsubrl
adc
lds
push
cltd
sub
mov
insl
incb
mov
mov
outsl
inc
in
jmp
and
dec
jnp
cmp
aad
add
lea
xchg
std
dec
jecxz
imul
xchg
mov
xchg
notb
push
aam
jns
jbe
mov
icebp
scas
clc
jmp
xchg
je
pop
leave
movsl
or
lcall
aas
xlat
sbb
mov
mov
leave
mov
mulb
mov
test
jnp
push
adc
xor
or
mov
mov
cmp
sub
cltd
cmpsl
rorl
jno
lcall
jbe
push
jl
xor
add
ret
and
pop
pop
fsubl
jge
das
cld
sub
xchg
xor
jae
lret
mov
pop
daa
xchg
xchg
nop
pop
ret
mov
repz
push
out
jge
xlat
xchg
repnz
xor
rorb
popf
gs
leave
xor
shrd
xor
xlat
inc
lret
jge
cmp
roll
les
xchg
hlt
jbe
cltd
push
pop
or
jb
stos
lods
ljmp
sti
inc
cltd
xor
data16
mov
int
cmpsb
shlb
cmpsb
xor
mov
push
xor
mov
push
lahf
inc
sub
push
dec
cmpsl
xchg
testb
mov
inc
call
mov
shr
add
fsts
iret
stos
jbe
das
mov
daa
cltd
push
mov
cmp
push
inc
adc
rcr
xchg
sub
cmc
addr16
mov
sarl
sbb
cltd
in
xchg
and
sarb
popf
push
cmp
fists
mov
mov
jno
add
loop
js
push
sbb
sub
fs
faddl
jp
enter
clc
fisttps
mov
ror
push
shlb
inc
jle
test
rorb
rorl
add
insl
inc
lea
xchg
subb
mov
and
push
ret
out
sbb
loopne
movsl
jno
add
cmp
fstps
jp
push
mov
adc
jecxz
ret
scas
daa
xor
mov
mov
popf
scas
jne
lret
add
mulb
dec
sti
xor
and
cmpsb
jo
cmp
jl
mov
sti
mov
rcll
add
aam
popa
sbb
push
push
jb
hlt
sbb
les
adc
xchg
xchg
fcompl
ror
add
mov
fists
out
js
mov
test
imul
cld
and
loopne
pop
stc
mov
stos
sbb
inc
pop
adc
cmp
pop
and
mov
mov
leave
push
mov
das
jp
or
mov
push
mov
and
adc
inc
push
xchg
lock
bnd
movsb
sahf
scas
movl
push
fimuls
push
pop
loope
jae
dec
mov
pop
js
push
adc
xchg
xor
xor
add
inc
test
add
jg
and
rcll
insb
and
cli
test
push
test
test
fcmovnu
gs
orb
rcll
ds
outsl
mov
push
jbe
std
mov
fstps
xor
movsl
cmp
iret
mov
dec
iret
adc
sbb
dec
mov
dec
mov
add
addr16
xor
and
outsb
inc
stos
push
xchg
sub
push
push
add
cmpb
pop
cmc
pop
insl
cmp
test
into
fndisi(8087
in
dec
adc
out
rorb
push
sbb
test
fldt
aad
dec
cmp
xor
pop
iret
and
leave
lahf
jge
inc
loope
ret
xor
rclb
mov
cmp
cmp
cwtl
push
fistpl
inc
mov
and
mov
mov
jg
pop
xchg
pop
pop
lock
add
mov
aam
or
cmp
fiadds
mov
push
aad
mov
sahf
divl
xor
mov
mov
mov
jne
inc
mov
nop
mov
xchg
jmp
xchg
push
in
stc
sbbb
icebp
add
iret
or
xor
push
mov
fdivr
shrl
fistpll
jne
imul
lds
pushf
idivl
ja
mov
orb
mov
add
outsb
loop
rep
inc
and
xchg
jno
nop
into
and
push
lcall
repz
call
xchg
mov
pop
push
dec
int3
sti
push
dec
adc
ret
hlt
icebp
lods
dec
push
call
cmp
xchg
inc
jg
je
out
lcall
shlb
out
add
or
xchg
outsl
ficompl
out
jmp
mov
jge
jle
adc
ret
push
xor
cwtl
or
icebp
mov
out
push
cmc
imul
push
mov
sbb
lcall
stos
inc
or
add
sub
or
sti
fucomp
pop
push
or
or
cmp
iret
les
xlat
dec
sbb
mov
pop
aam
cld
sbb
ficoml
outsl
js
cltd
outsb
inc
jo
movsb
push
lcall
lods
aad
mov
or
adc
lea
sub
popa
fdivp
adc
andb
xchg
and
push
xor
or
jns
sub
xchg
add
shr
pusha
repnz
dec
mov
adc
cmp
or
in
sbb
div
mov
movsl
mov
into
cs
xchg
pushf
sub
and
lock
out
pop
cld
stos
and
jp
jle
idiv
add
push
cmp
shlb
push
xchg
xlat
das
xchg
or
gs
scas
rcrb
stos
mov
sbb
xor
mov
js
movsl
cmp
popf
add
pop
sub
in
mov
push
inc
mov
std
lods
addl
das
jl
add
and
movsb
cmp
jnp
std
lock
fiadds
fmuls
arpl
mov
std
outsl
pop
pop
lcall
pop
movsb
loop
bound
lret
or
push
inc
jne
and
or
sub
sub
inc
xchg
popa
fnsave
mov
jg
push
cli
cmp
leave
push
daa
cwtl
jae
jno
sarl
std
xchg
adc
out
out
mov
mov
aad
adc
xchg
pushf
popf
ss
jb
dec
icebp
lea
fdivr
flds
lds
paddusb
ret
aad
cmpsb
pushf
or
inc
mov
repnz
arpl
cltd
in
dec
dec
dec
scas
idiv
out
icebp
or
mov
addr16
xchg
xchg
mov
xchg
cmp
cmc
pop
xchg
push
xor
mov
jecxz
mov
dec
jno
jecxz,pn
jmp
add
outsb
cwtl
rolb
pop
sti
mov
push
stc
or
or
je
out
notb
movsl
sub
daa
jle
cmpsb
popf
movsb
aam
bnd
jo
adc
push
push
xchg
jg
icebp
dec
jp
add
xchg
push
sbb
sbb
jg
bound
in
popf
add
insl
add
jae
icebp
out
test
pop
push
std
outsb
test
pop
enter
mov
dec
loopne
movb
cld
sahf
push
xchg
xchg
mov
lock
scas
inc
adc
stos
test
cli
mov
mov
add
mov
and
outsb
in
sbb
xor
sub
or
lahf
jp
mov
data16
pop
jno
in
add
jns
add
jns
cwtl
mov
xchg
mov
mov
push
rolb
adc
xchg
jg
cmp
xchg
jp
xor
fldcw
scas
jge
push
add
lods
cmp
lock
gs
test
mov
jge
xchg
jge
sbb
int3
inc
call
loopne
movsb
jbe
push
repz
cmp
or
ret
mov
xor
adc
and
mov
ss
xchg
fwait
inc
cli
imulb
arpl
pusha
imul
icebp
int
loop
dec
call
and
clc
push
in
push
jae
sbb
dec
test
add
xchg
jne
jmp
stos
xor
call
inc
lods
mov
mov
bound
dec
dec
and
shl
shrl
xchg
xchg
insb
or
push
cmpsb
addr16
loope
subb
push
lods
mov
lret
lods
jo
mov
lcall
push
enter
or
and
mov
in
lods
sub
insl
daa
xchg
sbb
pop
or
fidivl
hlt
jae
je
jge
add
xor
lea
mov
cmp
mov
fidivs
cld
and
test
dec
xor
jno
mov
or
fistpll
cmp
fcoml
mov
gs
xor
cmp
test
rep
gs
je
int
mov
sbb
cmp
cmp
cli
or
jp
mov
aas
insl
inc
jo
push
rol
shrb
scas
icebp
lea
rcl
sbb
sub
xor
ret
shlb
and
xor
mov
jp
stos
push
cmc
fdivl
inc
std
sti
and
or
lods
cwtl
je
pop
mov
and
cmpsb
and
mov
adc
ret
lret
xor
inc
inc
or
mov
addr16
lods
xchg
add
xor
pop
and
inc
scas
mov
mov
sti
cmpsl
ror
xchg
push
push
mov
jb
sub
stos
add
xchg
and
jp
flds
rol
movl
mov
mov
xlat
jge
loopne
mov
jb
lock
sbb
push
psubsb
mov
jo
stos
pop
enter
mov
leave
sub
fimull
and
sub
jns
mov
inc
out
xor
xchg
inc
dec
inc
jp
cmp
cmpsb
lods
data16
xchg
push
inc
mov
pop
clc
inc
shlb
xchg
outsl
push
stc
shll
sub
es
adc
std
cmc
imulb
adc
xlat
pop
pop
and
jo
std
jb
cmp
mov
jne
mov
add
inc
mov
divl
sahf
frstor
dec
lock
fldl
fs
mov
sub
jle
pop
inc
cs
leave
xor
mov
jb
aad
lret
cltd
fwait
lahf
sbb
inc
imul
cmp
ja
cld
xchg
push
mov
add
mov
xchg
gs
add
sub
mov
enter
push
repz
iret
and
mov
sub
jp
xlat
aas
test
sbb
xchg
jne
cli
dec
xchg
andb
outsl
insb
imulb
pop
jmp
out
pop
mov
or
mov
addr16
clc
xlat
stc
gs
xor
andb
lret
jmp
cmp
mov
stos
push
aas
pop
mov
mov
loope
clc
test
mov
gs
pushf
bound
repnz
loopne
fs
mov
fsubr
xchg
mov
add
stc
lret
adc
sbb
fs
push
xor
add
cmp
inc
adc
jmp
dec
outsl
ss
in
ds
inc
mov
cli
dec
jnp
xor
fincstp
mov
sub
sub
outsb
ss
sbb
bound
insb
sbb
mov
outsl
jg
ljmp
pop
add
jl
insl
xlat
push
cmp
jge
mov
xor
mov
mov
arpl
sbbl
rorb
pop
fimull
xchg
cmpsl
addr16
mov
add
mov
cmp
push
xor
leave
sub
out
jle
and
inc
lret
xorl
nop
cmc
xchg
push
repnz
mov
cli
test
xchg
cmc
sarl
pop
leave
imul
lods
inc
mov
and
xor
push
pop
jge
adc
popf
out
idivl
push
and
shl
add
xchg
xchg
clc
mov
xor
adc
sub
movsb
out
xor
les
and
pop
outsl
xchg
or
push
fcmovne
sbb
ret
mov
scas
dec
inc
test
int
mov
pop
outsl
jnp
out
xchg
push
loope,pt
inc
filds
imul
scas
daa
push
out
mov
mov
adc
cwtl
adc
stos
dec
dec
ja
inc
mov
daa
and
xchg
js
mov
rorb
jmp
push
pushf
jp
daa
cmp
fcmovnb
adc
xchg
in
pop
xchg
mov
fdivrs
out
or
and
cmp
test
push
jmp
subl
sub
popa
pop
or
std
lock
push
dec
cli
fnstcw
or
xchg
push
adc
pop
dec
lret
mov
rcrl
mov
mov
push
imul
rcrl
fdivs
lock
pop
pop
rorl
mov
jbe
roll
or
ss
das
aam
mov
arpl
push
push
cmc
cltd
loop
adc
cmp
mov
bound
lcall
aas
and
aas
sbbb
das
jno
pop
cltd
jl
adc
sbb
fcomps
xor
scas
cs
scas
pop
sub
push
imul
xor
mov
cmp
insb
xchg
push
dec
dec
or
adc
rcr
cmp
sti
outsl
aad
dec
inc
pop
inc
dec
mov
mov
loope
pop
adc
test
cmp
int3
cs
cmpsl
stc
xchg
and
jg
push
imul
scas
gs
fldenv
stos
loop
aaa
jae
loop
sub
and
sbb
add
loopne
sbb
pop
cmpsl
inc
lods
nop
xor
pop
xchg
repz
ss
adc
out
dec
inc
in
fnstenv
stos
xchg
sbb
inc
test
dec
and
sbb
pushf
pop
pop
roll
sub
pop
pop
imul
and
mov
mov
mov
mov
pushf
aas
mov
fst
stc
dec
dec
push
orl
cmp
fstpl
sbb
xor
rcr
and
and
xchg
inc
in
rorl
inc
loopne
and
pop
jno
add
call
mov
add
push
std
inc
cmpsb
in
gs
enter
or
scas
sub
and
lret
nop
daa
jle
pop
mov
mov
mov
dec
mov
sbb
icebp
data16
and
mov
inc
xorb
out
inc
negl
and
mov
pop
jae
cmpb
jne
out
jno
push
aam
ds
stos
adc
mov
cmp
into
sub
xchg
sbb
bound
test
mov
jle
xor
orl
mov
dec
xchg
push
fnstenv
inc
and
xlat
xor
dec
call
push
push
cld
ret
pop
cmc
cmc
or
xchg
mov
pop
sbb
in
adc
cli
gs
sbb
adc
add
add
mov
mov
add
setp
add
xchg
arpl
in
or
out
imul
idiv
sbb
daa
aaa
or
pop
test
and
xor
sbb
and
iret
cmp
out
cmp
fbld
cmp
jns
shrb
xor
push
push
orl
repnz
adc
fmul
and
mov
or
aad
fs
sbb
jle
push
jo
int3
mov
dec
or
mov
xchg
repnz
xchg
neg
mov
adc
or
and
xchg
dec
cld
bound
fisubs
mov
mov
das
xchg
pop
mov
dec
adc
lret
fildll
adcl
jo
mov
lea
push
inc
pop
repnz
push
mov
or
adc
jmp
sub
pop
testb
lods
and
jmp
xorb
xor
sbb
mov
pop
scas
jo
push
sbb
rorl
jmp
lods
int
hlt
adc
cmpsb
lock
mov
or
dec
je
call
mov
jge
mov
mov
out
lret
lock
jno
xchg
dec
iret
mov
xchg
xor
and
dec
es
add
mov
add
mov
fcmovbe
push
iret
ja
dec
scas
out
pop
stc
jae
fstps
inc
jl
lea
and
mov
pop
sub
lods
mov
xor
mov
pop
mov
jge
movsl
mov
cmpsl
inc
imul
dec
mov
adc
push
in
sbb
jmp
jecxz
jnp
jb
popa
scas
in
push
rorb
loopne
stos
sub
inc
add
push
jle
mov
insl
dec
xlat
sub
jne
idivb
push
jne
ror
push
pop
pop
sub
out
pusha
pop
mov
and
sbb
iret
inc
ret
daa
addr16
arpl
and
sbb
mov
mov
insl
gs
or
es
cmp
dec
jbe
test
xchg
cltd
and
loope
sbb
inc
cmp
xchg
pop
movsb
fidivrs
pushf
icebp
or
push
shrb
push
loopne
ret
aaa
push
xchg
fst
adc
xchg
movsb
into
dec
popl
add
xchg
or
or
aas
js
leave
hlt
into
lods
add
mov
popa
push
xor
cld
mov
adc
dec
sub
ljmp
jmp
mov
sbb
pop
out
repnz
push
mov
out
mov
sub
pop
and
outsb
sbb
jae
lea
pushf
les
jb
adc
inc
xchg
clc
or
clc
mov
ficoms
push
mov
mov
jmp
sti
xchg
adc
hlt
gs
int3
pop
std
lcall
sar
roll
and
insl
mov
add
and
loope
movsb
fcmovnb
outsb
jo
sub
sub
les
inc
inc
in
scas
jp
aad
mov
loope
lea
out
sbb
pop
lret
test
cmp
adc
jo
mov
lahf
push
out
jae
mov
sets
xor
in
pop
ror
push
dec
imul
xchg
insb
pop
faddp
fstl
mov
sub
add
in
add
enter
mov
jle
inc
and
fdivl
jmp
aas
xchg
test
into
dec
or
jge
jle
adc
aad
dec
jge
push
inc
pop
mov
out
cld
neg
inc
xchg
xchg
xchg
iret
mov
cmpsl
dec
adc
fistpll
xchg
aas
sub
stos
stc
icebp
or
add
pop
inc
sub
sub
inc
lret
cmp
shll
repnz
in
out
cmc
aas
sbb
jo
fs
inc
jmp
cwtl
sub
cld
lds
shlb
xchg
sub
subb
sub
fcomps
pop
xchg
sub
cltd
imul
dec
loope
jb
mov
inc
jl
ret
xlat
add
xor
int
shlb
add
mov
sub
xlat
mov
repnz
push
sub
sbb
movsl
xchg
push
pop
push
xchg
mov
push
push
mov
sbb
dec
pop
mov
mov
and
and
add
lods
lcall
rorl
pop
xchg
repnz
and
out
adc
or
pop
ss
test
add
dec
mov
pop
in
mov
fucomip
cmpsb
ljmp
test
and
dec
inc
idiv
mov
cmp
out
xor
pop
call
xchg
test
dec
insl
mov
subl
xor
xor
sub
ja
loope
sub
xchg
std
pop
inc
cmc
es
push
mov
scas
cwtl
mov
mov
int
and
push
mov
pop
mov
or
into
pop
incb
or
cmp
cld
fiaddl
std
daa
call
in
pop
lcall
movsl
lods
jb
sub
in
loopne
lock
mov
popa
shll
loop
push
lret
ret
testb
mov
bound
das
xchg
ret
rolb
xor
icebp
addr16
adc
sub
xchg
xchg
loop
and
and
sbb
xchg
jge
sbb
test
stos
inc
mov
sbb
cwtl
inc
movsl
cmp
gs
outsb
scas
push
sti
adc
lods
mov
incl
enter
gs
scas
ds
jl
js
sub
pop
insl
jnp
push
outsl
jge,pn
aam
mov
inc
jo
loop
xor
dec
adc
lock
sub
jns
pop
mov
std
lock
xchg
xor
lcall
push
adc
adc
pushf
mov
jl
icebp
push
adc
fidivl
test
and
sbb
in
stc
popf
adc
jbe
fs
int3
xchg
hlt
js
sub
fcoms
incl
gs
scas
insb
fcmovu
push
insb
loopne
lea
add
lcall
sahf
inc
push
add
call
js
cld
push
sbb
pop
scas
xlat
cmp
adc
stos
xor
gs
movsl
push
sbb
aad
js
testb
and
dec
mov
mov
shll
pop
shrb
loope
ret
jne
jns
or
pop
and
sti
jae
out
out
pushl
fstpt
and
lods
pop
adc
cmc
mov
xor
outsb
aam
fldl
mov
sbb
xchg
mov
pop
add
outsb
add
icebp
xchg
hlt
or
xor
shrb
jle
scas
out
pop
pushf
mov
add
xchg
push
mov
cwtl
incb
daa
and
mov
jg
fdivr
pop
cmpb
in
adc
and
mov
sub
aad
lods
cmp
xor
or
addl
ficompl
xor
fs
incl
mov
mov
xchg
cltd
jge
jecxz
pop
xor
data16
loop
cmp
mull
push
xor
adc
test
insl
std
cmp
or
inc
js
mov
les
jae
xchg
adc
arpl
mov
cmp
sbb
pop
push
mov
jnp
add
inc
adc
fildll
xchg
aad
pop
jb
cmpsb
inc
dec
into
pop
jecxz
and
or
sti
ss
loope
sbb
clc
and
stos
loopne
xlat
sub
cmp
mov
add
adc
or
ss
aad
notb
loope
jb
push
jmp
sbb
rorl
mov
inc
and
sbbl
pop
call
xchg
sbb
pop
push
subps
mov
pop
xorb
insl
rorb
ret
ss
js
mov
lahf
dec
mov
push
cmp
mov
inc
pop
adc
push
dec
bound
cld
sarb
xlat
xor
cmp
fiadds
sti
es
mov
mov
inc
js
mov
iret
fisttps
movsb
clc
inc
pop
dec
insl
xor
scas
pop
dec
jno
xchg
loop
nop
jo
and
push
loop
dec
fs
ja
mov
xchg
fists
mov
sahf
mov
push
es
out
out
sub
jb
mov
or
aas
fcomip
in
sarl
iret
dec
call
or
mov
fwait
dec
mov
or
outsb
xor
jns
mov
jo
push
mov
lcall
fs
fmuls
or
clc
inc
sub
and
mov
or
jecxz
inc
and
sub
aaa
mov
cmp
movsb
mov
jnp
dec
inc
and
out
fs
stos
pusha
push
sub
arpl
xchg
out
loopne
pop
cwtl
jo
sti
stos
mov
pop
push
es
aaa
sub
pop
pop
ret
xchg
je
clc
fisubrs
push
stos
push
divl
gs
stos
xchg
mov
dec
mov
imul
insl
push
sti
xor
xchg
mov
js
sbbl
into
ja
icebp
jl
ljmp
ljmp
sbb
mov
or
in
enter
enter
xor
icebp
push
push
sub
mov
insb
ljmp
sti
and
push
pushf
add
test
int
sub
popa
push
sub
pop
adcb
sahf
cmp
repnz
jns
add
repz
ror
adc
int
jb
or
or
call
rcr
push
fdivrs
adc
cmp
sarb
jb
xchg
cmp
rolb
mov
jecxz
cmp
fdiv
lock
dec
pushf
or
add
cwtl
push
fnstcw
mov
inc
stos
pop
sub
adc
or
hlt
loope
data16
sub
outsb
iret
aas
into
xor
retw
adc
and
jae
jae
push
shrl
cmpsl
xchg
sbb
mov
and
insb
fsubrs
es
sub
cmpsb
cli
mov
or
outsb
lret
lods
adc
dec
clc
mov
lcall
mov
xchg
inc
cmp
outsl
stos
jne
inc
pop
aas
dec
bound
adc
xor
xchg
and
daa
aad
jnp
pop
shll
sbb
mov
ret
sub
mov
insb
jg
xchg
xchg
lea
lods
xor
outsl
mov
dec
xchg
mov
adc
mov
imul
push
movsl
sub
jno
sub
cmp
aas
sub
mov
rcll
sbb
xor
shl
fstps
decb
cmpsl
push
add
pop
jmp
out
int
mov
xchg
loop
xchg
cmpsl
push
mov
add
or
jns
lea
scas
popa
xchg
cmpsb
inc
pop
fsubl
mov
das
push
aas
cli
cltd
inc
test
cmpsl
aas
ret
cmp
aam
sub
xor
push
fnstcw
or
cmp
out
cwtl
cmp
movl
dec
mov
popf
repnz
mov
pop
imul
jb
ljmp
mov
mov
rcll
xlat
mov
int
adc
inc
add
and
push
arpl
pop
icebp
imul
lret
aas
test
xchg
sbb
xchg
lods
xchg
leave
mov
mov
pushf
xor
and
push
adc
cltd
jg
jp
pushf
mov
scas
push
cwtl
insb
in
sub
pop
inc
mov
loope
inc
stos
lret
cmp
xchg
lock
ds
or
faddl
jno
add
sbb
lret
cmp
loop
add
repz
jp
cmpl
inc
mov
inc
mov
ret
xor
arpl
lret
mov
sahf
cld
mov
dec
or
fs
adc
dec
cwtl
dec
xor
aaa
adc
out
xor
xchg
mov
enter
sub
mov
xor
arpl
add
test
inc
push
cs
and
xor
inc
orb
mov
sub
lahf
test
mov
sbb
pop
jnp
mov
fisttpll
cld
out
push
cmp
dec
push
sub
cmc
bound
adc
and
pop
in
xor
cltd
jg
cmp
and
in
jle
lret
in
mov
push
dec
cld
dec
imul
sbb
xchg
xor
inc
sub
xor
adc
jmp
imul
push
mov
bound
push
mull
mov
jne
sbb
test
aas
cmpsb
ret
adc
mov
cmp
and
test
icebp
ds
cltd
shl
js
rolb
js
xchg
and
call
mov
ss
dec
enter
jp
out
pop
icebp
xchg
shl
cs
out
sarl
cmp
xchg
stos
mov
mov
shrb
inc
push
pop
ljmp
sti
inc
lea
xchg
add
or
les
add
push
sti
int3
out
aam
sub
pop
jl
sbb
and
push
enter
xor
mov
call
mov
add
xor
add
lock
rcll
add
push
mov
pop
pop
shl
jo
subl
xchg
mov
aas
push
pop
mov
cmp
add
cmp
mov
mov
push
or
stc
pushf
lods
adc
mov
loopne
iret
cmpsl
mov
adc
add
cwtl
add
adc
lret
shlb
pusha
sub
call
pop
xor
pop
push
add
loopne
es
mull
rcrl
movups
sub
sub
shll
jnp
jae
and
pushf
sbbl
pop
loopne
sbb
inc
repnz
mov
into
sub
jl
add
mov
scas
in
sub
sub
sub
sbb
lea
aas
into
push
push
std
adcb
into
dec
mov
lods
sub
xor
push
mov
fisubrs
in
pop
sub
lret
jmp
mov
pop
jecxz
sbb
lret
in
jl
jmp
insl
and
dec
lret
xor
jne
ret
les
or
and
ret
pop
or
add
cli
xchg
xlat
or
mov
shrl
inc
mov
call
js
xor
enter
mov
jmp
xor
daa
sbb
inc
lret
das
les
pusha
push
out
sahf
mov
addr16
adc
xchg
loope
stos
inc
pop
sub
and
mov
dec
nop
mov
mov
lods
xchg
mov
jae
sbb
inc
sarb
in
data16
clc
subb
mov
and
dec
push
push
push
scas
pop
scas
push
cmp
aam
ret
fs
adc
cmc
popa
sub
icebp
pushf
sbb
in
lods
jnp
xchg
aam
in
cmpsb
mov
ljmp
into
xor
cmp
and
xor
jno
leave
std
andb
inc
imul
mov
xlat
mov
js
jecxz
or
test
nop
fcoms
sbb
js
sbb
lahf
lahf
inc
xchg
fsubrs
and
mov
dec
clc
sarl
ja
mov
ret
mov
addr16
loope
repz
mov
jno
or
mov
sbb
rclb
or
xchg
lcall
aaa
pop
inc
mov
cmp
inc
fwait
cld
xchg
push
bswap
pop
test
xchg
fs
aas
xor
sbb
inc
mov
cld
xchg
pusha
int
and
es
xchg
pop
jns
movsb
stos
movb
and
or
nop
mov
add
push
bound
inc
or
out
xor
mov
mov
inc
scas
inc
ret
push
and
mov
loope
fisttps
outsb
ja
popf
daa
andb
lret
setle
pop
xchg
cmp
aam
mov
stc
addl
pop
shl
sub
daa
mov
addr16
add
jns
sarb
sarl
fsubs
dec
sbb
jle
adc
out
adc
add
jecxz
test
add
loopne
dec
push
push
and
push
dec
mov
jnp
stc
in
aad
mov
in
sub
int3
daa
cmpb
mov
mov
int3
mov
in
mov
cmp
stos
jne
mov
mov
push
xor
mov
jns
mov
scas
adc
pop
enter
movsl
mov
sbb
arpl
and
in
aaa
inc
call
xchg
mov
mov
mov
xchg
data16
adc
into
bound
and
dec
sub
jmp
stc
add
sbb
daa
pop
mov
pop
aas
fidivs
xor
psrad
dec
hlt
call
sub
adc
sti
addr16
sub
xor
pop
dec
pop
rorb
xor
gs
or
and
mov
and
cli
adc
push
and
movsl
pop
inc
adc
add
jns
jp
push
jl
lods
nop
push
std
xchg
xchg
sub
jae
sbb
addl
xlat
add
push
ret
dec
ja
ret
sahf
loope
mov
pop
jg
jg
loope
in
jg
mov
jecxz
ja
add
mov
and
leave
adc
out
iret
mov
stc
int3
push
aas
js
pop
dec
sahf
cld
cmc
fdivl
sub
rdtsc
pop
adc
mov
sub
lds
add
cs
dec
pusha
mov
xchg
jecxz
out
inc
push
lea
arpl
lods
subb
clc
push
sarb
fildll
fldcw
mov
enter
mov
iret
cmpsb
xchg
addr16
xor
push
outsb
pop
stc
mov
push
fnstenv
stos
push
push
repnz
fldenv
fisubrs
in
sub
lret
mov
or
xorl
je
jle
xchg
xor
leave
ss
mov
push
mov
xor
or
addl
dec
dec
lahf
xchg
aas
dec
mov
test
add
sarl
pusha
cmp
sub
cld
mov
jmp
pop
test
iret
or
mov
dec
xchg
lods
mov
repnz
stos
xchg
or
sub
hlt
out
sbb
shrb
lock
mov
addl
cmpsl
push
mov
das
arpl
outsl
icebp
adc
jle
xchg
push
lock
movsb
arpl
leave
inc
sbb
sbbb
mov
lahf
sbb
orl
cmp
push
adc
jecxz
frstor
xor
add
xchg
movsb
imul
test
mov
push
mov
out
je
xchg
pushf
dec
sbb
ds
pop
ljmp
mov
push
leave
jne
lea
mov
dec
lcall
cli
add
jge
dec
xor
pop
xchg
or
es
leave
jmp
loop
and
sar
or
mov
add
pop
out
sbb
repz
and
dec
mov
lcall
andl
das
xchg
mov
mov
arpl
or
cld
int3
das
movsb
mov
add
fisttps
mov
clc
movsb
mov
mov
adcl
clc
jnp
inc
lea
out
cli
sarl
adc
fisttpl
cmc
sbb
and
sub
mov
push
push
lock
in
push
out
int
lea
fwait
stos
xor
out
xor
filds
jb
test
jmp
stos
pop
or
jb
add
xor
nop
jno
xor
sbb
mov
sbbb
sub
cmp
sub
or
scas
push
addr16
or
aad
in
xchg
sbb
shll
cli
lcall
das
test
sbb
loopne
jp
es
imul
xchg
inc
xchg
ds
flds
fsubrs
mov
mov
icebp
push
outsl
test
roll
mov
clc
aad
sbb
cmpsl
dec
outsb
in
add
or
mov
fldt
push
dec
jo
jg
xor
cmp
stos
fdivs
repnz
movsb
jns
scas
pop
lods
cmp
xor
and
xor
jns
add
aas
popf
dec
loope
rolb
inc
iret
fdivrl
or
jmp
sbb
leave
xchg
data16
sbb
test
push
js
and
iret
enter
outsl
pop
cmp
repz
pop
repnz
mov
lahf
lock
push
mov
nop
out
jae
or
sbb
cli
enter
stos
out
stos
leave
pop
inc
fldt
adc
mov
movsb
mov
xchg
sbb
insb
inc
push
scas
scas
inc
fwait
mov
add
imul
cmpsl
or
mov
push
adc
not
lds
and
stc
add
mov
lds
cmp
aaa
rcl
push
mov
xor
mov
xchg
mov
xchg
sbb
cmp
inc
fwait
mov
popf
pop
sub
repnz
push
cmc
dec
xchg
pop
clc
in
sbb
inc
decb
aam
pop
call
shr
jae
xor
jecxz
das
mov
sub
mov
lea
add
cltd
mov
hlt
inc
in
pop
clc
jno
insb
push
daa
leave
or
mov
adc
je
loope
pop
mov
rclb
es
push
dec
mul
lds
pop
sbb
push
push
or
inc
fldenv
lcall
insl
jo
jg
jle
dec
call
notl
scas
push
inc
fisttps
pop
add
push
xchg
fidivrl
sbb
inc
or
jmp
lahf
in
fisubl
nop
call
add
ret
stos
push
cmpsl
dec
fimull
jge
cli
cwtl
xchg
sahf
daa
add
outsl
hlt
clc
orl
xor
mov
jb
stc
fnstenv
jo
adc
mov
cmp
pop
jg
int
out
fsts
das
or
dec
inc
mov
shl
je
and
sub
nop
imul
imul
add
and
mov
mov
cmc
pop
repz
fsts
adc
and
push
sub
jge,pn
icebp
add
ficomps
xchg
testl
sub
sub
xor
adc
rcrb
js
xchg
adc
mov
pop
sbb
cmp
push
loopne
fsubrs
aaa
test
les
outsb
pop
push
xchg
adc
ja
out
pop
insl
pop
cltd
inc
push
add
sub
xor
ficompl
push
in
fisttpl
jp,pn
dec
data16
and
pushf
test
stc
pop
cld
sbb
aaa
add
cmpb
xor
roll
mov
and
mov
dec
mov
pop
mov
add
push
sub
and
or
int
and
add
mov
fiadds
and
in
push
bound
mov
stos
push
hlt
push
and
lahf
andb
xor
adc
add
addr16
mov
xchg
dec
dec
cmp
cmc
movsb
and
bt
xor
add
fs
lea
mov
imul
jno
sbb
mov
xchg
push
insb
push
xchg
cmp
add
in
jo
repnz
inc
cmp
icebp
imul
in
xchg
xor
pop
dec
add
cwtl
es
sbb
ret
outsb
inc
mov
aad
xchg
es
int3
push
jg
mov
mov
pop
cs
mov
lods
les
add
jmp
mov
mov
inc
add
lcall
pop
mov
lods
sti
sub
ret
jno
adc
pop
test
scas
das
fistps
outsb
int
inc
cmp
push
xlat
movsl
mov
pop
jecxz
dec
xchg
dec
ret
mov
or
pop
lods
fnstenv
and
mov
popf
and
test
mov
ret
sarb
mov
cld
cmp
jo
fildl
data16
sub
movsl
out
lds
incl
mov
adc
inc
and
xchg
push
lcall
mov
sbb
insl
popa
adc
pop
dec
mov
lea
fisttps
mov
inc
and
xchg
scas
mov
add
mov
jno
aaa
sub
lea
jg
pop
repz
test
jg
lcall
negl
fucomp
sub
in
lea
mov
and
mov
dec
data16
xor
sbb
cmp
adc
pushf
push
jno
addr16
pop
jno
jnp
jns
push
jmp
xchg
sarl
fwait
cmp
jae
push
or
lea
out
pop
jg
adc
fstp
inc
cmp
jb
adc
sbb
mov
frstor
sub
stc
xor
xchg
jne
sbb
cwtl
cmpsb
into
inc
out
add
mov
pop
jmp
xchg
pop
data16
inc
pop
mov
push
xchg
cmpsb
sub
pop
pop
icebp
hlt
testb
movl
js
add
loope
pop
popf
mov
jp
or
adc
std
ja
xchg
movsb
ret
mov
push
imul
dec
daa
and
mov
xchg
pop
or
jmp
mov
push
xorl
aaa
jle
mov
loope
lahf
or
or
es
loope
fnstenv
jecxz
outsb
cmpsb
add
fdivr
scas
pop
out
cli
test
mov
push
add
dec
in
addr16
scas
ficomps
jecxz
push
cld
mov
xor
mov
std
arpl
lret
add
jecxz
inc
iret
cmp
fiadds
lret
and
aaa
ret
stc
clc
fmuls
dec
push
mov
jg
orb
dec
mov
push
pop
add
or
repz
xchg
pop
xchg
ja
pop
pusha
inc
aas
sbb
clc
mov
arpl
clc
cmp
fidivl
push
aas
cwtl
stc
pushl
test
dec
dec
adc
push
add
pusha
adcb
lods
xchg
jl
mov
das
mov
adc
sbb
xor
pop
inc
loope
test
jne
mov
mov
jnp
imull
scas
mov
adcb
pop
cmp
clc
or
mov
add
and
cli
push
shll
xchg
mov
clc
scas
lcall
insl
pop
pop
lds
dec
push
jne
pop
loope
call
adc
sbb
das
or
mov
lret
jo
and
adc
fcos
push
lods
das
mov
dec
mov
sahf
pop
lods
inc
inc
decb
clc
lods
jg
cli
and
popf
mov
fldl
stos
adc
mov
jmp
sub
daa
or
mov
sub
jmp
pop
out
inc
testb
data16
daa
pop
cmp
sti
jno
mov
push
pop
lcall
add
pop
cmp
insl
cmpsl
mov
movsb
or
stos
popf
and
and
pop
sar
fisttps
lahf
out
sbb
pop
enter
fcomip
scas
pop
fdivrl
fldl
push
inc
sub
xchg
cltd
cli
js
add
mov
jo
jge
clc
and
std
push
in
hlt
cmc
pop
mov
test
je
fisttps
inc
ret
push
adc
push
inc
test
filds
testb
icebp
inc
shl
adc
pop
incl
xor
arpl
daa
xchg
mov
push
ret
pop
std
clc
ret
adc
push
xchg
fnsave
sbb
mov
test
push
push
stc
dec
adc
aaa
inc
dec
ret
pop
and
or
xchg
mov
sub
sbb
test
xchg
and
sbb
lods
ret
popa
xor
inc
cltd
orb
mull
push
mov
repz
jg
adc
fwait
mov
gs
jg,pn
pop
rclb
jnp
cmp
xchg
xchg
jnp
sub
inc
xchg
in
add
adc
sub
std
popf
fs
add
xor
cwtl
ror
aam
and
cs
sar
pushf
icebp
jmp
imul
mov
ljmp
add
test
sub
pop
filds
push
pop
in
dec
sub
loopne
xorb
adcl
xchg
cmp
gs
lods
ljmp
outsl
fstpt
fidivs
pop
out
add
popa
mov
icebp
pop
dec
scas
push
fistpl
ja
jb
inc
out
andl
dec
xchg
aad
pop
mov
outsl
sbb
sbb
scas
ret
sub
push
in
mov
pop
xlat
out
nop
push
or
ss
mov
imul
pop
mov
jb
out
lcall
dec
add
fstpl
mov
jb
icebp
mov
pop
repz
sub
orb
xor
shrl
sti
push
enter
mov
inc
push
in
xchg
adc
xor
repz
loopne
cmp
leave
mov
cld
imul
sbb
adc
xor
xor
fwait
cmp
mov
mov
mov
fsubr
daa
outsb
mov
mov
sti
sub
or
or
lret
test
mov
sbb
mov
xor
js
mov
sub
stc
dec
rclb
ret
mov
lret
sub
cmp
and
stc
sub
push
pop
dec
xchg
bswap
outsl
int
ja
mov
push
in
mov
and
mov
sbb
push
jae
stc
mov
cmc
xchg
add
dec
mov
out
fimuls
xchg
scas
pop
mov
cmp
outsb
pop
jns
fbstp
scas
lock
xchg
jns
cli
mov
cmp
pop
daa
adc
push
lea
gs
mov
sbbl
push
loop
outsb
lods
mov
jns
push
cltd
es
fwait
inc
sub
inc
pop
in
cmp
xor
sbb
jmp
cli
push
push
mov
push
dec
lahf
xor
xchg
mov
int
inc
cmpsb
jb
push
in
lcall
fnstsw
cli
nop
hlt
stos
adc
lcall
and
push
sbb
arpl
xchg
call
mov
lock
sarb
ret
dec
adcb
shrl
dec
inc
out
iret
jae
pushl
fisttpll
push
test
das
sar
cs
inc
stos
mov
lret
aam
lock
mov
push
call
inc
sbb
sbb
inc
cmp
push
xlat
mov
cmpsl
stc
inc
mov
into
clc
sub
rorb
dec
mov
aaa
mov
dec
repz
adc
dec
xchg
jnp
push
sub
inc
pop
mov
inc
xchg
cmp
imul
jne
xor
push
inc
mov
dec
and
pop
cmpsl
dec
js
add
sub
addb
sbb
pop
cmp
out
pop
mov
push
xor
mov
fcompp
xor
pop
mov
jnp
and
es
inc
shlb
enter
cltd
jge
rclb
ficoml
lods
int
pop
mov
inc
lcall
data16
dec
and
or
inc
ljmp
pushl
jbe
pop
or
idivb
or
adc
lret
jae
cmp
push
jp
lods
les
jmp
mov
es
stc
cmp
out
cld
pop
cmp
scas
ja
mov
mov
xchg
rorb
jb
insl
shr
imul
mov
iret
dec
movsb
pop
mov
sbb
inc
icebp
add
orl
nop
push
fstl
or
pop
mov
sub
fsubp
roll
js
cmpb
in
les
xor
mov
sub
push
cltd
test
xor
mov
lcall
pop
out
add
and
and
and
sti
or
adc
mov
outsl
cmp
inc
xor
mov
mov
xchg
xor
lcall
fbstp
addl
fwait
pop
cmc
cmpl
sarb
cltd
lret
int3
inc
sahf
lahf
mov
fwait
call
xchg
dec
mov
sbb
cmp
pop
pop
mov
adc
sub
and
pop
sbb
jae
sbb
xor
dec
cmp
inc
mov
sbb
fs
cmp
neg
scas
mov
out
or
mov
nop
int
inc
call
or
out
test
mov
add
ljmp
sbb
jmp
sbb
hlt
push
mov
inc
xor
mov
dec
in
sbbb
adc
cmp
mov
ficompl
lods
pop
jle
sbb
adc
bound
fistps
pop
sbb
inc
aam
pop
add
sbb
sahf
push
add
add
fldcw
shrb
push
or
jo
mov
ds
sti
leave
jge
add
or
pop
loop
pop
mov
ret
jnp
and
push
and
sub
test
or
mov
hlt
lahf
stos
mov
js
test
xor
jp
xchg
roll
mov
dec
lahf
pop
jmp
loop
jmp
fidivs
dec
movsl
xchg
inc
inc
movsl
add
adc
loopne
dec
fdivs
xlat
int3
popf
pop
jno
loopne
and
sbb
cli
imul
jecxz
cltd
push
popa
xor
cmp
imul
xchg
lock
mov
cmp
ficoms
arpl
xor
xchg
mov
cs
add
and
and
push
adc
add
popf
mov
and
inc
cwtl
fsubs
je
fbstp
push
icebp
lahf
in
or
loop
push
insb
xor
outsb
jne
les
and
mov
movsb
fcmovu
xchg
adc
movsb
or
test
and
mov
shrl
aam
cmpl
and
xchg
clc
xchg
jno
jno
out
mov
loopne
xchg
pop
enter
pop
pop
jge
orl
out
push
out
pop
popa
mov
sub
sbb
mov
jmp
inc
mov
cmp
dec
sub
cmc
mov
inc
xchg
fsubr
pop
mov
mov
test
ficoml
cwtl
jmp
fsubs
lret
xchg
repnz
sti
jl
test
sub
mov
sub
or
push
outsb
mov
mov
sub
adc
sub
sbb
loope
loopne
cmp
sub
iret
idivl
cmpsl
sub
inc
jmp
and
push
sub
sbb
adc
fldl
mov
jbe
js
andb
mov
lret
mov
push
pop
movsb
insb
out
pop
addr16
cmp
pop
loope
fisubl
filds
lods
je
add
or
pop
inc
outsl
dec
mov
add
push
push
outsl
sbb
scas
les
xor
mov
add
mov
mov
leave
popa
sbb
xchg
pop
jmp
ljmp
sub
ja
xlat
push
push
call
cmpsl
cmpsl
les
jno
je
dec
repz
push
fsubp
sbb
out
fwait
mov
out
mulb
and
out
xchg
jge
inc
mov
in
pop
jne
adc
cwtl
je
imul
mov
out
cmp
mov
adc
or
xlat
fsubs
sub
inc
mov
adc
cmpsb
test
pop
idivb
lahf
leave
dec
rcrl
dec
jmp
ret
and
aam
mov
iret
xchg
ror
pop
xchg
call
mov
sub
test
cmp
cli
stos
xchg
mov
adc
rorb
sbb
lock
adc
sub
xlat
addr16
testb
mov
enter
orl
xor
jbe
add
mov
call
jne
test
es
int
xchg
imul
ja
addr16
sarb
loop
pop
mov
insl
cltd
lods
dec
stc
cmpsl
xlat
rcll
and
and
or
fs
or
jbe
fcomi
dec
xor
or
mov
pop
lods
cltd
negb
push
adc
lods
imul
mov
mov
adc
ss
pop
sbb
mov
mov
pop
daa
insl
push
jo
lock
inc
shl
mov
aas
or
push
inc
lcall
jp
dec
cmp
mov
cmp
mov
mov
cmpxchg
imul
push
cmc
push
add
or
rcrl
fcomi
inc
jbe
pop
xchg
cwtl
popf
popf
sbb
imul
push
mov
jge
dec
insb
jecxz
lret
inc
adc
popa
push
dec
test
pop
jg
jge
xor
push
pop
clc
jno
sub
outsl
sub
or
insl
dec
cwtl
lods
and
int3
inc
fmul
std
xor
aas
pop
mov
jmp
add
jge
sbb
loope
and
fcomi
inc
push
shrb
or
pusha
dec
and
xor
sub
outsl
lods
jmp
push
fbstp
lret
repz
fstpt
sbb
in
ds
fwait
adc
sub
mov
inc
adc
sub
popl
dec
lds
sub
not
xor
repnz
leave
jmp
sbb
dec
inc
sub
filds
push
sub
pop
mov
dec
shrl
pop
leave
mov
dec
ljmp
jl
sbb
pop
fucomi
jl
pop
sbb
mov
icebp
pop
in
jae
into
mov
repnz
mov
add
sub
inc
jge
xor
jmp
inc
andb
test
scas
popa
hlt
jle
enter
dec
and
pop
mov
aam
mov
xor
or
add
add
in
pop
loop
insb
xorb
cmc
inc
mov
icebp
jb
push
clc
in
ss
xchg
dec
test
mov
mov
mov
inc
and
pop
mov
shlb
outsb
ja
shll
popa
clc
pushf
ror
pusha
sbb
cltd
sbbb
ljmp
dec
dec
sub
cmp
jno
test
popf
xor
sub
jp
arpl
jno
xlat
mov
fwait
orl
sbb
mov
fstpl
insl
mov
pop
inc
mov
in
stos
xor
jl
insb
push
sbb
sub
pop
lods
sbb
mov
repnz
out
lds
fsubp
pop
lds
aad
insl
adc
sub
cmp
aad
stc
mov
pop
jecxz
in
sbb
push
mov
andb
xchg
cs
push
mov
pop
sbb
add
pop
xor
repz
cs
xor
cltd
insb
cwtl
imul
jne
sub
fst
mov
test
pop
jne
loopne
aam
cwtl
arpl
shll
pop
push
or
ret
adc
cs
mov
xchg
or
pop
gs
jge
jge
ja
xor
scas
cld
dec
mov
cs
hlt
stc
rclb
cmpsl
sbb
int3
ss
mov
insb
jbe
ret
js
sbb
aam
add
mov
adc
add
cmp
sub
fisubrl
int3
mov
rcrb
sub
push
out
fimuls
divb
insl
outsl
iret
push
add
popfw
test
jae
ficoms
push
jnp
adc
xor
cmpsb
hlt
pop
mov
int3
out
mov
sbb
imul
cmc
jg
adc
mov
gs
iret
pop
jnp
sbb
insl
bound
mov
in
push
ret
cwtl
jle
sub
faddp
pop
je
add
icebp
outsb
inc
call
cmp
sub
jne
stc
pop
push
mov
int3
sbb
add
int
xchg
mov
add
sub
cld
out
fs
and
push
das
int
scas
les
mov
pop
adc
and
pop
mov
sbb
out
xorb
jae
mov
out
ret
push
mov
pop
stos
adc
pop
jno
xchg
nop
adc
stc
and
les
push
or
imulb
testb
cwtl
or
push
leave
adcb
stc
inc
fs
ljmp
xchg
inc
cmpl
inc
fists
testb
push
adc
xchg
test
sti
in
shrl
sti
or
cli
stc
jne
mov
cmc
and
rclb
jne
testb
inc
nop
push
es
stos
and
xchg
shll
adc
stc
mov
jmp
mov
xlat
gs
mov
pop
mov
aas
sbbl
xor
mov
cmp
xchg
fbld
cmpsl
and
fidivs
imulb
ss
or
and
push
data16
ja
fwait
sbb
mulb
arpl
loopne
loop
xchg
jecxz
cmp
xchg
pop
lret
fwait
sarb
icebp
lock
lds
das
jno
xor
popa
xor
loopne
mov
enter
and
out
mov
jne
mov
pop
sbb
inc
aaa
xor
rorl
test
mov
ds
and
and
add
mov
lds
mov
ret
test
cmc
jbe
cmc
pop
mov
shrb
mov
fnstcw
cli
imul
or
fsubs
mov
jae
mov
imul
cwtl
sbb
cmp
jb
pop
imul
bound
add
gs
loop
daa
cmp
imul
imull
xchg
mov
jb
hlt
mov
outsl
push
xchg
sub
pop
das
repnz
movsb
or
jp
push
dec
imul
inc
xchg
fwait
push
es
into
movsl
repz
arpl
cltd
lahf
push
dec
xor
bswap
gs
mov
arpl
repnz
adc
shll
push
and
fbld
cmp
enter
leave
cli
lcall
jmp
rcrl
repnz
xchg
xlat
and
push
dec
in
dec
les
adc
cli
push
in
aaa
or
call
sub
mov
and
or
popf
add
add
xor
jno
xchg
rol
hlt
mov
faddl
incb
push
out
dec
sbb
fistps
aas
dec
in
outsb
pop
inc
add
push
mov
ja
bound
dec
loop
shr
jnp
jmp
xor
fnstenv
lods
push
pop
movsb
movb
in
mov
movsl
dec
cmpsb
test
or
adc
das
mov
sub
insb
mov
aam
mov
xchg
enter
int
iret
and
insl
jg
adc
fwait
pop
mov
popf
in
das
mov
mov
or
addr16
mov
daa
out
adcl
shr
adc
push
sub
mov
sbb
je
loop
push
imul
inc
push
mov
stc
les
mov
xor
push
addr16
adc
dec
das
movsb
sub
add
cli
pop
xor
cli
cs
adc
push
cmpsl
pop
add
pop
cmp
rcll
sti
jo
out
mov
cmp
adc
movsl
inc
es
mov
pop
or
mov
jle
add
or
int3
cwtl
dec
jno
popaw
add
cmp
adc
push
sbb
das
imul
push
push
ret
cmp
mov
lahf
dec
insb
lcall
cmp
sbb
jns
inc
inc
mov
aad
cmpb
inc
cmc
jae
loope
sbb
aas
loop
nop
mov
push
xchg
fwait
mov
push
and
sbb
jmp
test
test
lret
fcom
inc
dec
and
stc
sbbl
pushf
loope
jmp
out
xchg
adc
inc
jno
inc
lret
xor
clc
pop
inc
xorb
fistps
ljmp
cmp
inc
arpl
fdivrs
in
mov
scas
movsb
fidivs
ficoml
pushf
push
addr16
push
leave
xor
add
and
inc
fcoml
add
jle
movb
cmpsl
or
mov
push
jmp
or
lods
cmp
mov
mov
cmpsl
mov
sub
stos
push
jecxz
sub
inc
mov
mov
addb
test
out
fisttpll
dec
dec
mov
lahf
in
inc
pop
adc
or
inc
add
push
jae
jge
pop
cwtl
add
es
sbb
or
aaa
lods
cmpsl
pop
or
xchg
popa
movl
test
lret
add
cmpsl
adc
mov
incb
push
push
test
int
inc
popa
mov
mov
xor
or
jecxz
outsl
mov
push
inc
push
outsl
mov
mov
gs
lods
sbb
xlat
dec
imul
sbb
and
and
jno
jl
jecxz
dec
push
xor
shlb
mov
mov
data16
cmpsb
arpl
fldl
xchg
aam
je
es
pushf
in
psubusb
or
cld
jnp
jbe
stos
je
cmp
sbb
cmpl
repz
ljmp
xchg
pop
xchg
inc
dec
cmp
addb
cmpsb
mov
popf
lods
pusha
and
pop
out
outsb
mov
shl
and
test
loop
scas
cmp
jp
xor
dec
lahf
mov
dec
test
sbb
scas
mov
testb
sahf
aad
mov
cltd
aad
mov
arpl
enter
jne
int
mov
ja
out
xor
hlt
cmp
test
enter
xchg
or
or
stos
mov
mov
movsb
dec
lock
lea
loop
pop
out
sbb
imul
pop
mov
xlat
xor
dec
jge
xchg
and
sbb
imul
sbb
sub
mov
inc
cmp
pop
ret
mov
mov
gs
cli
lret
daa
and
inc
jbe
cltd
sbb
test
arpl
add
lcall
mov
out
aad
rcrl
xor
cld
jl
repnz
and
pop
push
xchg
mov
mov
or
push
add
xchg
jb
in
jmp
add
push
imul
inc
sahf
jmp
andb
cmp
lret
xor
cmp
dec
shrb
addr16
xchg
cli
test
shll
in
lahf
mov
fs
inc
xchg
pop
xchg
jge
pop
pop
fwait
or
pop
fldl
jge
cmpl
fucomp
push
fisttpl
enter
dec
test
lahf
sahf
pop
es
ljmp
push
rolb
xchg
outsb
mov
mov
sahf
lret
pop
ret
fdivrl
pusha
es
mov
mov
add
pusha
xchg
repnz
js
add
lods
aam
jmp
push
inc
popa
test
outsl
pcmpgtd
jno
add
adc
pusha
dec
xchg
and
ds
add
insb
adc
loope
ret
in
ret
movsl
pop
cld
fisubs
sbb
cmpsl
push
cwtl
inc
stos
mov
jmp
adc
and
mov
inc
push
sbb
sbb
mov
arpl
sub
sub
shll
cld
in
stc
push
pop
cmp
insb
into
inc
int
lcall
lods
scas
push
jb
mov
xchg
ret
pop
lods
pop
mov
popa
pop
push
imul
std
out
jae
stos
rorl
ds
popa
mov
sti
lods
ret
dec
pop
stc
push
outsl
es
sub
into
je
sbb
sarb
int
pop
leave
out
addb
or
out
repz
xor
ja
xchg
decl
add
fldcw
cld
mov
fdivrs
cmpl
imul
fstl
fdivp
inc
out
pop
sar
dec
loope
adc
push
mov
fiadds
or
lret
dec
adc
cmpsb
xor
daa
das
rorl
sti
loop
out
dec
test
arpl
fxch
iret
dec
sub
ret
cmp
jnp
mov
out
jnp
ss
sub
mov
inc
outsl
insb
pop
dec
jb
dec
or
mov
jle
push
jae
lret
mov
int3
scas
lds
and
scas
push
xor
push
sbb
pop
mov
sub
mov
push
add
cld
mov
ljmp
jecxz
orl
push
pop
xchg
mov
sbb
jno
arpl
pop
xor
in
sbb
lods
xchg
insb
ficoms
mov
xchg
xor
dec
xor
bound
xor
loope
xchg
jnp
jb
mov
and
mov
and
fisubrl
divb
push
pop
inc
in
in
inc
add
mov
mov
mov
or
cmp
cmp
cmp
cmp
sarb
xchg
scas
push
mov
add
jnp
adc
sub
adc
and
adc
lahf
lds
test
adc
in
mov
les
fwait
push
pop
cmp
ret
aad
sub
add
out
xchg
test
dec
cmp
xchg
sbb
push
repnz
pop
and
mov
mov
scas
stos
out
nop
cmp
adcl
inc
jne
mov
sub
add
fsubrs
mov
cmpb
adc
mov
je
sub
aaa
pusha
sti
xor
dec
scas
ret
ss
or
mov
mov
cld
mov
sub
adc
js
into
nop
shlb
jmp
arpl
xchg
test
lock
fisubs
and
adc
cli
xchg
cmpsb
aas
pop
jecxz
jg
hlt
loope
sti
js
add
or
mov
out
es
pusha
inc
jnp
or
lods
push
jb
movsl
notl
cmp
adc
shrl
loope
adc
lds
shrb
xor
fwait
push
mov
and
jle
xchg
insb
sti
js
shrl
pop
adcl
in
inc
sub
cs
imul
cld
push
push
dec
notb
loop
push
sbb
pop
vpaddq
push
ffree
jg
rcrl
pop
push
ss
daa
scas
push
rolb
mov
lds
mov
lcall
aaa
xor
push
gs
push
cwtl
test
or
int
jmp
testb
inc
mov
nopl
imul
mov
popf
std
int
out
cltd
jp
xlat
jae
in
fisttps
and
mov
mov
test
xor
ja
ret
cwtl
cmp
mov
adc
loopne
xchg
push
rclb
mov
jle
inc
iret
mov
fwait
repnz
mov
mov
std
adc
push
jnp
pop
push
jo
and
jg
jae
out
cmp
inc
in
mov
pop
popa
adc
fisttpl
sahf
dec
pop
dec
fisubs
shlb
ljmp
stos
sub
cmp
hlt
xchg
leave
scas
mov
popf
adc
int3
xchg
mov
cmp
sahf
gs
inc
mov
push
xchg
jmp
cmp
cmpsl
pop
and
add
scas
mov
fbld
push
pop
js
push
sub
sbb
cmp
imul
sbb
dec
jns
and
fstpt
imul
cmpl
lock
insl
sub
cmc
dec
adc
mov
std
mov
and
pop
pop
mov
fdivrl
imul
xor
add
sbb
xchg
rcrb
mov
mov
in
xor
rcl
popf
inc
or
and
aaa
add
fsts
in
outsb
sahf
les
sub
mov
fs
iret
inc
pop
int3
iret
rcll
pop
sub
jo
repnz
dec
and
jg
test
in
loope
inc
and
or
inc
popa
cmp
into
mov
or
sarl
mov
mov
fistl
sbb
clc
dec
sbb
hlt
repnz
adc
fsub
push
leave
fildl
adc
movsl
cmpsl
ss
pop
adc
adc
push
dec
test
and
repz
test
and
dec
shll
adc
mov
xor
mov
js,pt
popf
adc
push
push
xchg
add
adc
test
xchg
add
jmp
push
pop
pop
iret
fst
sbb
into
pusha
inc
in
sbb
sbb
sub
or
ja
aad
int3
sub
dec
xor
add
mov
inc
xchg
pop
shl
js
fcmovnb
mov
ljmp
cmp
shl
xchg
popf
call
popf
mov
ds
testl
dec
cwtl
nop
ffree
inc
enter
inc
les
es
clc
push
pop
outsb
cmpb
adc
out
sub
out
jecxz
xchg
sahf
out
add
xchg
sub
cmpsb
ret
outsl
mov
pop
popa
sbb
sarb
mov
jne
arpl
xchg
cmp
jge
or
add
adc
push
stos
inc
pop
push
and
or
and
sbb
pop
cmp
test
loop
popf
call
sbb
add
or
clc
xor
dec
push
mov
and
shlb
jno
rolb
int3
adc
hlt
or
pop
out
popf
not
pop
dec
xor
stos
stos
test
cmp
mov
in
call
cli
jle
cmp
scas
adc
cwtl
jo
mov
lds
aad
jmp
dec
sbb
add
push
loope
mov
sahf
popa
ss
mov
aas
subl
jnp
cmc
loop
mov
push
and
fisubl
xor
xor
loope
inc
mov
addr16
mov
adc
lods
adc
aad
xor
pop
imul
hlt
adc
outsl
mov
icebp
sub
daa
shll
test
testl
leave
mov
mov
leave
xchg
adc
cmp
in
sti
sbb
bound
loope
icebp
cltd
ret
into
adc
sub
out
gs
in
jmp
or
push
loope
inc
in
stos
mov
dec
cmp
mov
push
xchg
roll
mov
cmpsb
js
cmp
mov
pop
cmpsl
addr16
bound
loopnew
push
xchg
jmp
xchg
jle
fs
test
cmp
xor
adc
ja
mov
cmpsl
adc
pcmpgtb
push
or
pop
push
sub
dec
adc
cli
sbb
or
lret
test
loopne
pusha
xchg
cmp
add
adc
ja
push
push
xor
pop
xor
and
xchg
fisubl
dec
jns
aas
out
std
push
add
xor
adc
and
psubb
jg
pop
push
pushf
pop
divl
inc
leave
cwtl
pop
cmp
pusha
es
cs
pop
jmp
sahf
int3
mov
jno
fstpl
fwait
bound
pop
adc
and
test
dec
dec
sbb
je
adc
xor
pop
lahf
mov
xlat
and
cli
out
xor
daa
mov
test
sti
dec
jge
jae
add
stos
inc
push
in
das
in
cs
out
mov
or
in
xchg
cmpsw
nop
mov
jmp
popf
lret
mov
pop
cmpsl
stos
popa
insl
andl
pusha
aaa
cmpsb
mov
mov
lcall
repnz
or
cmpb
bound
shlb
xor
xchg
jp
push
push
xchg
and
orb
push
inc
test
push
push
pop
pop
inc
or
jl
aad
mov
rolb
outsl
jnp
mov
sub
mov
jne
adcb
sub
adc
add
lock
mov
xor
and
inc
adc
mov
aam
adc
test
mov
cmc
mov
adc
insl
aaa
or
inc
dec
add
xchg
in
push
test
xor
cltd
sbb
aas
jnp
sbb
mov
dec
xchg
push
orb
mov
jp
mov
lds
jge
lret
int3
out
call
dec
ljmp
fstl
pop
daa
sar
xchg
ret
add
incb
jbe
adc
mov
push
cld
negb
mov
xor
pop
or
outsb
and
mov
cmp
cmp
pop
fidivs
jge
cmp
jle
xor
jle
inc
fcmovnb
push
cltd
inc
das
adc
jge
inc
mov
or
xchg
push
leave
lret
xor
fwait
sbb
xchg
xchg
sbb
sub
andl
ljmp
mov
cmp
sbb
push
cmp
jge
mov
add
lret
lret
xlat
sub
mov
lea
sub
rorl
xor
xchg
orl
push
inc
jo
popl
mov
and
inc
xchg
fnstsw
lds
xor
dec
test
shr
adc
adc
ljmp
mov
fimull
inc
pusha
aas
ja
adc
aad
ss
js
sbb
xchg
loopne
and
adc
push
aaa
mov
sub
hlt
push
cmp
mov
pushf
jle
imul
mov
pop
out
leave
aam
push
ds
cld
fisubl
mov
lea
gs
inc
pushf
xor
movsb
pop
lret
jae
aaa
shlb
dec
dec
rep
in
daa
jno
xor
jecxz
and
aas
loopne
xchg
inc
xchg
and
fs
ss
jecxz
add
jns
in
mov
fildll
fnstenv
push
jae
jmp
mov
jns
add
and
inc
hlt
call
sub
out
and
adc
ret
sahf
xlat
loope
push
imul
inc
mov
xchg
ja
out
stos
repz
lret
mov
push
orl
outsl
cmp
cmp
int
push
pop
in
and
out
jge
frstor
inc
bound
pop
xor
mov
cmp
pop
arpl
xchg
pop
push
mov
inc
dec
movsb
lods
std
xlat
fisttpl
dec
mov
push
dec
clc
rcll
rorb
cli
test
jmp
adc
sbb
dec
dec
js
out
stos
out
push
aaa
hlt
cwtl
adc
inc
mov
mov
nop
xchg
out
popa
icebp
jnp
lcall
inc
mov
push
xchg
in
fisubrs
shrb
adc
lret
push
xchg
pop
adc
jae
and
mov
or
sbbl
mov
out
dec
fst
arpl
aas
rclb
dec
out
push
and
addr16
cmp
dec
mov
daa
popf
cmp
cmp
jmp
leave
mov
or
sbb
sbb
pop
in
mov
shl
jno
enter
cld
xor
int
or
mov
or
adc
call
shll
sbb
nop
ret
pop
lods
push
int
and
scas
add
mov
hlt
ret
push
push
mov
cld
rcrl
pop
push
fmul
jle
fwait
icebp
in
test
js
ret
add
jno
repz
dec
mov
jecxz
in
addr16
popf
rolb
and
sarb
xlat
roll
fcmovbe
hlt
and
hlt
sub
xchg
loopne
ja
movsl
test
fstl
dec
mov
jno
inc
xor
xor
cmc
rorl
push
cwtl
insb
add
je
push
inc
mov
xchg
xchg
daa
and
jno
pop
rcrb
xchg
daa
dec
dec
pop
outsl
mov
aad
scas
inc
je
and
mov
in
mov
push
xor
rcrl
int
or
aad
push
push
outsb
jp
pushf
or
movsb
outsl
leave
xor
insl
hlt
outsb
je
push
mov
int
stos
stos
fs
cmpsb
pop
aam
dec
mov
mov
jmp
pop
xor
add
mov
sbb
test
in
cmp
dec
jbe
mov
js
je
mov
push
and
fisubrl
bnd
inc
pop
jmp
mov
xor
cmc
shll
add
push
pop
adc
mov
push
mov
lahf
jnp
dec
mov
dec
das
jae
ret
ret
and
mov
cmpb
out
imull
mov
sub
ret
xchg
and
xor
ret
xor
in
int
xchg
pop
inc
mov
mov
mov
push
push
cmc
add
mov
and
pusha
enter
mov
flds
sbb
pop
in
xchg
cmp
xchg
mov
rcrl
ds
mov
lahf
push
cmp
fwait
inc
inc
and
js
push
lcall
enter
or
jno
subb
in
mov
sbb
testb
not
inc
sub
mov
insl
and
int3
bound
ljmp
pop
rolb
mov
mov
mov
aas
inc
fdivrl
push
or
mov
jle
mov
dec
cmc
call
pushw
cld
xchg
test
aas
call
nop
xor
add
fs
daa
xor
ficompl
push
rolb
mov
jecxz
out
sub
aaa
xor
xorl
adc
push
mov
pop
lea
insl
jmp
das
xchg
jmp
push
jle
cwtl
lock
cmc
les
dec
scas
mov
sub
mov
movsb
stc
pop
int
mov
andl
add
rcrl
test
das
adc
inc
jp
je
sub
fnstenv
loope
dec
pushf
add
daa
pop
mov
cs
popf
push
jnp
loope
test
push
popa
inc
push
sub
das
cmpsb
test
xor
imul
orb
xor
mov
jecxz
pop
pop
fnstsw
pop
jmp
add
add
jmp
push
inc
jb
push
jecxz
pop
je
sub
jnp
dec
in
adc
ss
mov
mov
in
shrb
scas
pop
inc
push
pop
xor
jb
je
cmp
mov
ret
push
mov
stc
cmp
sbb
sub
in
incl
lock
xor
push
daa
sbb
inc
scas
inc
xchg
stc
rcrb
cmp
scas
movsb
gs
movsb
push
loope
mov
jecxz
mov
cmpsb
cmp
outsl
mov
dec
fsubs
js
and
movsl
nop
push
adc
mov
lods
and
mov
int
jae
test
and
rcl
mov
mov
aad
cmpb
pop
or
in
mov
int
push
sbb
je
mov
jp
lret
mov
mov
jno
mov
fidivl
rclb
movsl
jge
ja
aas
and
into
scas
add
jle
xchg
mov
sub
adc
add
xor
pop
into
iret
sbb
jg
lcall
dec
jg,pt
sbb
mov
jbe
dec
pop
adc
push
dec
enter
adc
mov
je
jo
or
iret
std
data16
cs
push
sub
sub
adc
lea
pop
out
xchg
enter
stc
in
adcb
std
les
or
mov
cwtl
sbb
inc
fisttpll
adc
mov
lds
imul
outsb
arpl
dec
mov
xchg
and
aad
add
lahf
and
pop
andl
repz
orl
dec
mov
xor
shlb
loop
inc
push
dec
jg
add
in
push
lahf
insl
shrb
adc
das
pushl
push
sub
aas
dec
pop
scas
cltd
mov
sbb
jle
sbb
ja
int3
pop
icebp
xor
inc
loop
popf
push
dec
adc
xor
pusha
sbb
int
mov
xchg
and
push
xor
jnp
lock
mov
shlb
mov
or
mov
in
mov
push
and
xchg
notb
and
add
movsl
mov
jbe
lea
mov
je
jmp
mov
pop
add
cmp
mov
bound
nop
inc
orl
fsubl
xor
push
aam
cwtl
inc
scas
iret
adc
hlt
mov
add
movsb
mov
or
je
subl
mov
fs
pop
dec
stos
and
xor
and
xor
mov
sbb
cmp
pop
cmpsb
mov
add
add
pop
adc
mov
push
fdivr
int3
scas
jnp
push
jnp
xor
mov
dec
leave
fidivrs
inc
aas
shll
adc
jne
sti
sub
dec
xchg
or
mov
sub
in
cmp
imul
adcl
loope
int3
jb
jbe
mov
push
xlat
loope
or
repz
scas
int
cmp
enter
leave
mov
xlat
mov
cmpsb
sub
into
sbb
jg
ret
mov
aam
dec
imul
cltd
adc
cmp
lods
xchg
mov
repnz
rorb
scas
loopne
hlt
scas
cmp
psrad
xchg
vpsubw
jne
push
dec
mov
sub
shll
jecxz
cwtl
out
outsb
punpckhwd
outsl
ja
xor
pop
mov
ds
insb
fnstcw
aad
fsubl
mov
cltd
mov
sub
test
call
push
insl
jbe
adc
lret
push
xchg
dec
sub
das
repz
pop
icebp
jb
ljmp
notl
daa
repnz
xor
adc
cmp
and
jle
dec
pop
sbb
and
xor
insb
outsl
cld
adc
push
sbb
push
sarb
mov
orb
push
fldenv
iret
sub
das
iret
xchg
es
or
divl
subl
push
shrb
flds
addl
xchg
pop
sub
sbb
sub
mov
inc
int
mov
mov
pop
or
hlt
cwtl
sub
fisttpl
sub
xchg
jae
dec
or
cwtl
cli
mov
adc
jmp
mov
lods
rolb
mov
push
fldl
sti
adc
cmp
xchg
out
xor
dec
repz
or
or
js
fstl
mov
dec
lret
jns
inc
mov
push
push
punpckhwd
add
sarl
int
add
pop
subl
aaa
adc
adc
mov
mov
imul
mov
xor
lods
pop
xor
xlat
cmp
js
cmp
lods
call
int3
add
jnp
sub
sbbl
movsb
xchg
imul
sahf
std
inc
nop
push
int
fs
sub
mov
pop
daa
mov
and
gs
xchg
push
mov
sbb
clc
lea
jge
rcll
sub
add
fs
fcoms
xchg
into
ljmp
dec
in
dec
scas
stos
sub
jbe
cltd
imul
mov
xor
cmc
jecxz
lcall
pop
xchg
adc
xor
cs
js
lret
pop
addl
sub
mov
loopne
sub
fistpll
popf
aaa
mov
out
mov
loope
push
lret
adc
addr16
subb
add
ficompl
cltd
loope
mov
mov
or
sti
arpl
hlt
sub
xchg
popa
add
leave
leave
repnz
cltd
sahf
inc
and
ss
mov
or
sub
adc
sub
scas
fdiv
nop/reserved
decl
into
aad
mov
dec
insl
and
cmpsb
ret
movl
sub
pop
add
testl
fldt
lahf
cmp
dec
cmc
popa
jmp
cli
paddq
popf
sbb
cmp
inc
inc
jge
push
inc
push
push
iret
or
add
mov
xlat
negl
mov
shrb
mov
lods
enter
fidivrl
inc
scas
out
int
mov
cmpsb
inc
mov
outsl
xchg
cmp
push
and
loope
sub
shl
xor
into
je
dec
mov
add
push
dec
daa
js
sbb
les
aam
mov
jb
push
xchg
xchg
fwait
jle
push
stos
popf
fs
sub
jle
pop
dec
cwtl
pop
mov
rcr
or
rolb
test
or
ds
popf
xor
jmp
cltd
or
inc
test
clc
andl
aaa
or
jne
mov
cmpsb
xor
fistl
adc
mov
test
aaa
data16
addb
cmp
lods
nop
jns,pn
imul
in
test
xor
pop
pop
int3
or
test
cmp
add
jecxz
cmp
mov
testl
pop
push
xlat
fcoml
pop
ja
dec
int3
inc
and
sub
add
xor
enter
mov
cmp
shlb
ret
test
pop
cltd
pop
adc
cld
lods
mov
test
jle
cmp
ds
push
xchg
sahf
insb
pop
dec
mov
mov
imul
push
test
xor
cmp
mov
icebp
stos
xchg
sub
adc
out
push
mov
insl
arpl
aaa
aaa
sbb
pushf
ret
cli
cmp
icebp
testb
cmpl
fstpl
jne
jnp
inc
lcall
pushw
push
out
mov
rcrl
clc
cmp
sahf
ret
fistps
shll
sbb
pop
jae
adcb
push
jge
jle
pop
pop
fbstp
pop
faddl
iret
insl
inc
loopne
aaa
push
inc
call
subw
mov
cld
sbb
fs
je
and
cmc
sbbb
fadd
inc
lret
pop
jecxz
mov
add
mov
dec
xchg
mov
xchg
lret
aad
aas
icebp
pop
cmp
mov
ja
imul
jnp
jle
xchg
jge
cmp
and
adcb
daa
push
decb
dec
ja
clc
decl
call
jns
add
dec
sub
jp
adc
xor
cmp
jmp
adc
sbb
arpl
jl
jl
and
jl
mov
mov
scas
push
adc
pushf
stos
pop
adc
lahf
pushf
lret
inc
arpl
add
adc
cmp
ret
sbb
call
imul
pop
mov
xor
loopne
bound
imul
sub
sbb
gs
mov
stos
cmp
notl
into
popf
mov
mov
les
popf
in
das
inc
pop
mov
ljmp
and
mov
mov
mov
cs
pop
sti
test
ret
in
imul
lods
jbe
in
cmp
push
mov
sbb
xchg
dec
repz
aad
lahf
xchg
fcmovnb
sar
mov
fisubrl
sbbl
mov
xchg
pop
fsubrl
daa
pop
and
in
xor
lahf
jo
in
sub
push
sarl
loopne
cli
shl
les
call
dec
mov
mov
hlt
jmp
iret
and
test
insl
les
stc
sub
jge
pushf
push
xchg
in
jne
outsl
insl
adc
es
xorps
mov
clc
mov
sti
inc
sub
jge
jmp
mov
lds
cmp
gs
jecxz
into
jle
ja
into
inc
mov
cmp
nop
movsb
xor
movsl
jecxz
and
or
xlat
in
sbb
fsubs
aaa
mov
push
loopne
inc
jbe
out
insb
js
lret
stos
sub
xor
mov
js
rorl
cmp
stos
and
leave
call
out
incb
cmp
or
dec
pop
add
sub
push
gs
mov
mov
lcall
mov
jns
and
dec
adc
stc
dec
push
cmp
cmc
insl
sarl
aas
push
sbb
adc
jecxz
mov
push
arpl
pop
sbb
imul
shl
int
insb
out
lock
mov
shlb
loop
mov
pop
enter
shrb
xchg
and
or
adc
adc
pop
cmp
dec
jo
mov
xchg
dec
out
ds
stc
push
cld
mov
jns
call
mov
jmp
fcompl
test
stos
mov
sub
push
mov
jae
push
pop
sti
mov
jge
adc
test
aad
shll
adc
aas
sarb
pop
imul
mov
xor
mov
sahf
aam
fcomps
mov
pop
movsb
mov
sub
push
xlat
mov
sub
push
add
cmp
xor
adc
in
mov
fdivrs
mov
repz
mov
pop
pop
xchg
cmc
ss
or
cmc
inc
ljmp
cmp
fildl
rcr
adc
cld
fdivl
mov
addr16
pop
rorb
in
mov
mov
sbb
stc
inc
xor
mov
adc
incl
push
stc
scas
aam
mov
ja
xor
cltd
xchg
es
imul
mov
aaa
ret
jge
adc
or
out
sub
pop
push
test
mov
mov
cmp
lret
dec
push
pop
enter
cmp
cli
jle
push
ficompl
add
imul
rorb
mov
inc
inc
xchg
mov
test
inc
dec
fidivl
inc
pop
les
insb
fcomps
loop
addr16
dec
jmp
xlat
pusha
mov
test
int3
jne
and
adc
inc
enter
mov
popf
sbb
addr16
pop
inc
out
cwtl
test
sub
add
jnp
cmp
xchg
mov
scas
fsubr
es
dec
icebp
cmp
cwtl
mov
mov
lahf
fiaddl
and
jne
js
loop
xlat
cld
lods
pop
out
pop
js
jecxz
cli
push
cmovo
mov
out
rcl
push
dec
sbb
sahf
add
shlb
jp
dec
in
pop
or
add
mov
js
test
std
call
mov
xlat
jge
or
pop
xchg
or
adc
lods
xchg
cmpsl
fsubl
dec
sahf
pusha
mov
lods
pushf
fisubrs
push
xchg
test
push
adc
out
jmp
mov
pop
jae
and
lahf
pop
loop
out
xchg
xchg
mov
test
pop
pmaxsw
test
rolb
xor
idivl
dec
lret
std
fsubrs
fnstsw
push
loop
cmp
sarb
pop
adc
sarb
aam
sbb
bound
inc
pusha
test
mov
sahf
stos
xchg
xchg
and
xchg
push
repnz
rcll
mov
jno
loop
lret
repnz
cli
out
stos
mov
popf
adc
mov
sub
jae
dec
xchg
bound
fwait
lahf
pop
cmp
dec
cmpsb
mov
or
pop
pop
xchg
dec
inc
add
pop
mov
inc
shll
cltd
ss
imul
lods
cltd
lahf
add
inc
cmpsl
dec
iret
mov
popf
mov
lret
sub
jo
jp
push
fdivrl
xor
mov
cmp
add
adc
repnz
pop
cwtl
aam
loop
lret
add
je
xlat
les
push
arpl
ss
xchg
adc
cwtl
imul
dec
roll
shrb
or
lods
xchg
sbb
lods
negb
xor
jo
pop
bnd
mov
jns
mov
xor
dec
popf
xchg
repz
and
add
mov
jecxz
xchg
out
jbe
push
fs
cmp
cltd
popf
arpl
jge
rorl
or
sar
outsl
jns
shrl
inc
sub
imull
lret
lds
imul
sti
or
jbe
push
cmp
dec
es
jp
push
cmpsb
sub
fsubrs
cmpsl
popf
ret
leave
add
mov
cmp
pop
xchg
repnz
or
je
push
inc
xor
push
mov
out
pop
add
scas
cld
lea
sub
xchg
inc
inc
mov
pop
mov
imul
aad
cmp
fimuls
das
xchg
jb
arpl
sub
cli
push
ljmp
push
ret
int3
std
add
pop
inc
imul
jl
outsb
add
rolb
test
sbb
pop
mov
dec
xor
inc
inc
mov
addr16
loope
add
aam
push
imul
sbb
leave
clc
push
out
cmc
mov
mov
and
pop
mov
inc
mov
loopw
mov
orb
gs
cmp
rclb
mov
dec
mov
and
mov
cmpb
aad
jns
movsb
push
push
lods
es
jg
mov
rcrl
or
jle
data16
sti
jbe
shr
stos
aaa
lahf
cmp
xchg
mov
in
cltd
ljmp
imul
xlat
rcrl
call
int
jge
xchg
xor
cli
cmpsb
insb
push
push
fisubrl
scas
sub
call
inc
or
or
cmp
js
idivl
lods
mov
mov
lds
pusha
push
hlt
cmp
xorl
push
out
xorb
repnz
dec
cwtl
push
cmp
shl
lds
dec
int
in
test
and
in
sbb
mov
adc
out
insl
test
jns
les
pop
cmp
stc
lods
or
loopne
loopne
pop
out
jmp
movsl
int3
sarl
xor
pop
mov
fimull
test
inc
cmc
addr16
scas
adc
mov
mov
lea
mov
add
or
outsb
pop
cld
int3
xor
mov
gs
ret
push
adc
ficoms
mov
int
jne
fsubs
mov
dec
adc
movsl
or
mov
lods
add
xor
pop
adc
adc
xchg
into
and
sub
mov
xor
les
mov
in
rclb
mov
cmp
sar
aaa
xchg
push
add
orl
in
call
hlt
addl
cmp
pushf
mov
cmp
inc
sahf
push
push
push
adc
add
ljmp
mov
iret
cmp
sub
cmp
ret
jmp
and
rcll
pop
push
add
adc
jbe
xor
aas
jmp
mov
hlt
jg
das
push
xor
rolb
jmp
pushf
lods
jo
out
clc
lods
imul
cmp
addb
push
push
mov
jl
bound
add
lock
sbb
push
in
add
in
mov
and
mov
sti
adc
js
push
adc
imul
mov
out
jmp
lahf
jg
dec
sbb
pop
cmp
mov
mov
and
mov
lahf
xchg
fsts
mov
dec
std
nop
out
and
and
xor
sti
cwtl
ja
push
subb
fsts
adc
dec
das
outsl
mov
jg
lock
cmp
rorb
sub
out
rorb
sbb
mov
test
or
xlat
shrb
les
sbb
dec
or
adcl
cs
data16
jge
and
mov
add
rcrb
lods
adc
pushf
xchg
dec
jmp
sbb
lds
lahf
cs
dec
cld
pop
out
daa
ret
push
mov
mov
fs
mov
inc
incb
daa
enter
pop
push
xchg
repz
jbe
loop
test
imul
lods
ds
mov
mov
inc
push
rol
mov
call
dec
mov
pop
fidivs
inc
imul
ret
nop
xor
jmp
mov
dec
das
in
sbb
ror
or
test
nop
nop
xchg
mov
inc
mov
cld
mov
addr16
xchg
repnz
jg
fcomps
mov
push
jbe
call
movsl
mov
inc
aaa
fistl
xlat
mov
clc
lods
mov
lea
mov
in
push
add
add
sub
roll
lret
fdivrp
in
and
outsl
cmp
icebp
aad
and
ljmp
jnp
lret
or
adcb
clc
push
mov
jae
lods
pop
dec
adc
push
pop
xlat
test
add
mov
js
pusha
outsl
jecxz
lock
mov
sub
sub
rolb
call
shlb
das
adc
and
in
jmp
mov
push
xchg
adc
mov
popa
cmpsb
mov
data16
dec
fstl
out
mov
dec
stc
sti
xor
xlat
fsubrs
inc
dec
sbb
inc
rclb
inc
cmp
mov
mov
hlt
xor
test
ds
pusha
in
adcl
or
xor
imul
jge
icebp
loope
pop
out
cmp
and
nop
out
sbbb
mov
cld
push
xchg
xchg
fimull
cmp
add
movsb
cvtps2pd
cmpsl
jbe
xchg
ja
sbb
test
test
ss
xor
push
fidivs
add
push
pushf
shl
pop
push
outsb
and
xchg
lcall
fcomps
pop
sarl
cwtl
inc
loope
adc
fs
and
loop
mov
add
hlt
add
or
mov
mov
push
popf
out
adc
aas
popa
pop
ret
mov
and
in
pop
and
movl
in
and
pop
js
daa
into
or
ljmp
mov
fdivrl
push
punpckhdq
stos
std
inc
mov
add
or
imul
aam
ret
movsb
ret
lds
inc
mov
fs
bound
dec
jge
push
sub
movsl
gs
nop
mov
jbe
xor
int3
in
add
lahf
push
movsb
xor
cmpl
cmp
cmp
sub
inc
out
orl
dec
lock
inc
popa
pop
lcall
pop
test
inc
ret
push
imul
fisubrs
rorb
gs
xchg
movsl
push
push
mov
mov
sub
mov
insb
cs
lock
cli
insb
cmp
fcoml
and
ss
or
xor
popa
ds
popf
adc
insl
insl
cmc
pop
into
sub
mov
mov
xlat
into
and
pop
mov
arpl
and
and
outsl
pop
xchg
mov
inc
rorb
adc
mov
repnz
out
mov
loope
inc
fstps
cmp
pushf
sbb
loope,pt
pop
sar
mov
out
pop
xchg
fldcw
dec
mov
push
fs
cltd
and
adc
jge
call
inc
das
add
pop
leave
xchg
mov
xor
imul
mov
repnz
into
call
mov
xchg
dec
dec
cmpsb
mov
sub
inc
mov
ret
aas
mov
or
and
int3
xchg
sbb
loop
outsl
ss
add
mov
mov
pop
icebp
jo
push
cmpsl
in
fsts
mov
pop
outsb
clc
movsl
mov
iret
lahf
and
adc
xor
xor
mov
cld
call
add
lcall
test
push
mov
movsl
imul
inc
dec
clc
jp
movsl
cmp
repz
xchg
push
sbb
decb
add
cmp
fiaddl
push
cmp
mov
cmp
pop
sbb
pop
call
popa
xor
mov
mov
popa
adc
pop
dec
ret
bound
mov
and
jne
jecxz
cmp
sub
pop
ljmp
movsb
cwtl
mov
fidivrs
add
fmul
sti
mov
and
xor
out
jno
cmp
adc
mov
orb
and
out
sbb
ficompl
mov
xchg
xchg
push
and
repnz
xor
int3
xor
jae
jno
mov
xor
mov
fstps
xor
lods
ljmp
out
je
loop
movsl
dec
dec
fsubrl
jbe
shlb
add
add
xchg
sarl
mov
push
ds
pusha
std
cltd
iret
scas
push
test
cmp
push
and
and
inc
pop
jae
mov
push
sub
iret
imul
clc
adc
xlat
cmpsl
insb
jmp
pop
out
outsb
xor
xchg
and
popa
icebp
jle
int3
mov
ja
xor
mov
xchg
loope
shlb
adc
xchg
loopne
adc
fwait
jb
push
scas
scas
pop
jl
mov
mov
icebp
roll
out
mov
pop
sub
xchg
notl
stos
