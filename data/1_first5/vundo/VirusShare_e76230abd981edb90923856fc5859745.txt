rol
jmp
in
sbb
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
mov
test
je
mov
mov
test
jle
mov
test
jne
movl
mov
mov
test
jle
mov
test
jne
movl
insb
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
movzbl
sub
je
inc
cmp
mov
jbe
call
mov
call
mov
mov
movzbl
jmp
movzbl
sub
je
call
mov
movzbl
sub
jne
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
fwait
push
jle
divb
addr16
scas
out
push
pop
lret
daa
push
loop
jbe
notw
xchg
push
or
mov
cmpsl
ficoms
inc
divb
addr16
pop
xchg
mov
cmpsb
push
push
fildl
pop
mull
push
in
test
mov
cmpsl
or
inc
pop
jo
and
push
into
pop
lcall
in
mov
xchg
fcomps
inc
lds
xchg
sbb
aaa
mov
xchg
add
aam
enter
mov
in
in
outsl
inc
or
dec
pop
push
xchg
int
jle
aaa
addr16
popf
enter
sub
sbb
inc
stos
pop
xchg
sub
inc
data16
pushf
imull
add
jp
xlat
mov
sbb
xor
loop
or
xor
pop
jns
mov
movsb
mov
data16
add
dec
fnstenv
or
add
dec
xchg
sub
cmp
xchg
push
xchg
data16
and
xor
popl
sbb
pop
ja
mov
data16
mov
mov
imulb
addr16
pop
ret
aaa
push
movsb
xlat
aam
scas
out
js
jbe
sbb
movsb
push
mov
mov
mov
clc
adc
movl
repz
cmpb
test
popa
lret
ds
cs
sub
dec
fiaddl
adc
adc
arpl
movsb
push
cmc
inc
xchg
cmpsl
and
and
pop
mov
cmpsb
daa
push
xlat
inc
jbe
out
xchg
push
xchg
mov
cmpsl
push
movb
out
xchg
pop
xchg
mov
cmpsb
daa
push
xlat
inc
jbe
out
xchg
push
xchg
mov
cmpsl
push
add
mov
les
pop
push
lea
leave
sbb
cld
jle
lds
fistpl
jg
pextrw
dec
insb
outsl
cltd
jo
nop
pop
cmp
loope
cmc
adcb
lock
fadds
fucomi
mov
out
push
sub
and
jle
movsl
push
add
aas
sub
cmp
lret
cmc
jmp
inc
ja
dec
cmpsl
icebp
in
insb
loope
inc
outsb
aam
iret
xchg
repz
jmp
cmp
fnstcw
push
sbbl
pusha
mov
sbb
mov
icebp
loopne
adcb
sahf
into
sarb
testl
pop
data16
xchg
sbb
insl
push
into
cmp
fcompl
jnp
leave
xor
pop
outsb
xchg
in
inc
jmp
pushf
fwait
dec
push
add
pop
test
sbb
add
mov
jmp
ffreep
jge
lahf
es
mov
test
lds
jns
pop
fcmovb
in
subl
xor
loop
adc
pop
mov
inc
pop
pop
inc
ret
dec
jbe
stos
leave
lock
mov
test
iret
hlt
add
mov
mov
ja
mov
add
xchg
loop
add
stos
and
imul
out
sbb
in
arpl
mov
daa
pushf
sub
mov
push
mov
jmp
mov
enter
mov
movsl
ss
scas
mov
add
stc
mov
jp
jnp
xchg
and
icebp
movsl
push
clc
push
pop
daa
mov
imul
mov
cmp
mov
adc
pop
das
pop
jb
cmpsl
in
das
mov
aas
ds
imul
ror
dec
es
mov
cmp
hlt
bound
mov
fcoml
rcll
jne
sti
xchg
lds
cmp
inc
xchg
addr16
jns
mov
xor
stc
pop
testb
lea
mul
mov
loopne
sbb
adc
int
lock
mov
insb
dec
mov
cs
mov
popf
xor
sbb
adc
inc
fdivrl
adcl
fistpll
xor
sub
pop
fsubl
cmc
cmp
out
sbb
stos
xorb
fstpl
loope
mov
cltd
xchg
sub
sbb
push
addr16
push
cmp
xor
jb
and
pop
add
movsb
ret
cltd
xchg
lods
filds
lds
popa
insb
movsb
sub
in
imul
pop
and
or
loopne
mov
enter
test
and
lret
popa
icebp
cmc
les
adc
pop
sbb
es
iret
jbe
inc
shr
add
es
push
cmc
sti
pop
jo
jbe
fsubrl
repnz
or
pop
jle
mov
int3
std
sbb
mov
push
and
outsb
push
sub
push
push
mov
mov
test
clc
dec
test
jmp
inc
mov
push
lods
push
imul
cmp
daa
testb
mov
mov
fsubrs
sub
or
lods
xchg
clc
lods
dec
mov
popf
enter
repz
push
mov
sbb
mov
ret
or
push
sbbl
pop
jb
stos
mov
xlat
jns
xor
push
fcmovnu
xor
insl
out
sbb
inc
cwtl
push
sbb
mov
addl
pusha
and
push
push
xchg
notl
inc
lret
dec
cmpl
daa
pop
test
int
xor
inc
mov
jmp
xchg
jp
lcall
dec
jmp
js
mov
fcomp
loopne
or
xchg
inc
iret
bound
in
sbb
ret
jl
orb
fwait
das
call
inc
jl
insl
sahf
psrlq
idivb
sahf
jp
inc
sti
fimull
xchg
mov
add
sub
sub
hlt
es
rcr
pop
aad
movsl
xchg
sub
int
ds
xchg
in
les
xor
out
jg
lcall
cltd
cs
push
out
mov
mov
icebp
and
mov
xor
sub
xchg
popf
or
push
out
pop
jmp
add
push
jne
dec
fcmovne
mov
fsubs
sub
inc
adc
imul
mov
loop
mov
dec
xchg
and
imul
std
das
or
es
inc
fadd
xchg
jno
sub
pop
es
dec
jl
push
xchg
sbb
arpl
pop
lock
inc
daa
add
out
mov
cmp
js
xor
in
aas
dec
xchg
dec
popf
in
scas
pop
sub
push
cmp
pusha
sbb
cmpsb
push
inc
lahf
int3
lahf
pop
jp
repz
rcll
lock
test
jmp
push
aas
jg
mov
imul
decl
adc
jae
ror
stc
mov
jmp
call
call
enter
dec
add
and
cwtl
inc
jecxz
push
das
iret
xchg
test
pop
sbb
xchg
jns
lea
repz
adc
or
lods
cmpsl
xchg
std
movl
cmpb
mov
mov
ds
ss
cltd
cmp
jmp
mov
push
icebp
ret
dec
test
shrb
mov
add
xor
sahf
sub
clc
mov
js
daa
hlt
mov
lock
and
mov
cmp
into
out
dec
pushf
xchg
mov
aaa
mov
xchg
mov
call
shlb
lds
inc
lods
cmp
inc
test
inc
sub
sbbl
mov
addb
negb
nop
push
in
adc
enter
sbb
in
mov
mov
xchg
inc
pop
mov
xor
faddl
lret
sub
mov
shll
fdivrl
jbe
pop
das
fsts
cmp
mov
mov
das
lcall
sahf
add
mov
pop
in
aaa
and
pop
dec
out
push
rorb
data16
add
mov
fistps
mov
push
sub
cwtl
xor
shrl
add
jle
xchg
rorl
mov
outsb
inc
sub
movsl
bt
pop
ret
cmp
jmp
outsl
xchg
adc
jae
movsl
repz
mov
and
sub
jnp
mov
fldenv
push
mov
jo
jge
mov
int
imul
jecxz
dec
and
stos
call
inc
mov
cmp
cmpl
fnstenv
clc
or
lcall
or
pop
aaa
addb
out
mov
push
jbe
sbb
fsubs
pop
cmp
and
out
cmc
icebp
in
movsb
jecxz
or
cmp
movsl
cld
push
test
neg
jns
fstpl
and
mov
xchg
inc
call
rcrl
and
nop
out
enter
rcll
popa
aaa
and
sub
fsubr
ret
xchg
repz
cli
push
mov
inc
xchg
adc
dec
jo
lcall
push
xchg
mulb
sub
cmpsb
push
or
pop
mov
gs
jbe
mov
mov
inc
ss
lods
add
lret
push
add
push
mov
aaa
pop
mov
data16
rcrb
pop
movsb
and
sub
push
aad
icebp
or
dec
decb
mov
mov
cmpsl
insl
push
or
gs
inc
test
dec
pop
es
or
mov
jbe
dec
data16
inc
xchg
push
andl
and
inc
loopne
ret
mov
xchg
enter
push
rorl
jnp
inc
test
jae
icebp
push
push
xor
mov
or
add
pop
imull
rclb
inc
mov
and
add
ja
dec
gs
lret
mov
add
pushf
mov
dec
mov
dec
and
mov
std
push
xor
xor
mov
sub
mov
mov
neg
inc
push
stc
mov
mov
push
push
mov
jo
xchg
push
and
or
push
rorb
jns
orb
pop
ret
jmp
lods
xor
and
or
and
and
xor
daa
mov
loope
jb
xchg
scas
jecxz
cmp
sub
out
gs
into
sbbb
dec
add
xchg
xchg
mov
popa
cmp
cs
add
lods
cltd
mov
mov
and
sbb
jns
les
leave
loope
out
leave
add
fnstcw
mov
imul
mov
mov
pop
aaa
divb
je
outsl
add
das
mov
mov
pop
pop
push
scas
jg
push
mov
jecxz
leave
leave
cld
jb
xor
push
sbb
out
mov
add
shl
aad
lock
xlat
mov
mov
fwait
rolb
mov
adc
mov
popf
pop
cmp
int
xchg
popa
cmp
jecxz
cmp
xchg
aas
int
aas
jnp
lcall
jp
mov
inc
xchg
out
sub
adc
dec
data16
jne
inc
lea
arpl
adc
push
fistl
xchg
mov
cmpsb
adcl
or
test
in
fld
scas
test
adc
nop
loop
arpl
adc
daa
push
rclb
loop
pop
dec
daa
xor
jg
iret
jmp
insb
mov
lods
cmp
jge
shl
leave
stos
mov
fmull
cmp
push
or
xchg
jecxz
mov
xor
mov
mov
xor
cmp
stos
aam
xor
fwait
nop
add
ds
xchg
pxor
cmc
or
in
popf
out
xor
mov
push
mov
xchg
fwait
cmp
cmp
ja
in
pop
fstpt
push
in
jb
out
outsb
outsl
inc
clc
lods
sbb
push
ja
xlat
mov
scas
pop
jb
inc
sahf
cs
repnz
dec
outsb
outsb
dec
dec
fs
dec
inc
test
dec
xor
xchg
push
lret
jecxz
clc
in
dec
test
stos
int3
jne
packsswb
scas
scas
cmp
fdivrs
cmp
jbe
inc
cmp
fisttpl
out
push
imul
inc
cmp
out
ret
into
add
push
inc
jbe
stc
out
and
mov
mov
and
test
inc
sub
adc
hlt
in
sub
lret
outsb
sbb
xor
mov
or
insb
decl
or
pop
mov
xchg
dec
lods
sub
lret
les
cld
stc
test
fsubrl
rolb
cmpl
jae
pop
cmpsb
sbbl
fwait
mull
pop
xor
lcall
hlt
les
ds
jno
push
sub
rclb
sbb
push
pop
push
frstor
pusha
cmp
push
cmpsl
lret
dec
cwtl
mov
test
or
adc
mov
movsl
ljmp
neg
fdivrs
mov
xlat
imul
incb
mov
cltd
aam
into
pop
mov
mov
les
and
cmpsb
mov
jbe
sar
jg
add
rolb
out
fdivrs
push
xchg
data16
or
jmp
inc
rorb
stc
push
lcall
mov
out
xor
int3
xchg
cwtl
or
dec
mov
repz
push
adc
pop
ja
push
xor
out
sbb
filds
stos
adc
push
sbb
fidivrl
jnp
add
pop
cmpsl
out
imul
lret
loop
fnstcw
out
sarb
xchg
push
adc
mov
jne
xchg
push
adc
push
clc
push
push
push
vpsubusw
sub
shlb
jg
push
cs
fadds
movsl
arpl
addr16
cmp
lods
xorb
repz
rcrb
lea
lcall
jp
pop
ss
xchg
out
xchg
shr
pop
in
xor
iret
mov
ss
pusha
lret
lret
pop
lods
mov
fnstenv
in
dec
sub
inc
test
out
push
or
movsl
mov
mov
rcll
enter
mov
insb
cltd
mov
push
cmpl
mov
lds
adc
lods
movsb
jmp
test
pop
add
mov
push
inc
xchg
lea
mov
test
in
aad
iret
clc
fidivrs
test
pusha
cs
mov
inc
out
jle
das
add
stos
mov
das
jbe
cmc
jmp
repnz
jge
pop
ljmp
stc
push
popa
shl
xlat
inc
fstl
push
adc
test
mov
mov
push
cmp
pusha
adc
mov
bound
test
add
sub
std
lods
test
cmp
aad
mov
mov
in
dec
loop
cs
fdivl
popf
pop
sbb
pop
push
adc
mov
scas
push
mov
xchg
call
repz
scas
testl
mov
ret
pop
xchg
mov
in
movsl
add
ja
mov
push
andb
cmp
repnz
test
kunpckwd
xchg
mov
inc
stc
sbbb
out
es
movsl
bound
push
shr
sub
add
or
outsb
sbb
sbbl
push
out
mov
outsl
fmuls
divl
mov
dec
daa
mov
mov
adc
es
fldenv
push
mov
mov
shl
aaa
push
movsl
dec
mov
popf
and
insl
rorl
outsb
aam
jbe
fsubs
jne
adc
mov
adcb
icebp
or
add
dec
jge
mov
sbb
inc
sub
xchg
lods
push
cmpsb
mov
mov
rcll
js
mov
mov
stc
cmp
fistps
sti
inc
int
pop
in
hlt
dec
dec
push
lock
mov
xchg
js
insl
sti
loopne
aas
sub
push
cmp
jmp
sub
test
ja
cmp
loop
lods
popa
cwtl
scas
adc
shl
push
mov
or
pop
and
fldl
shll
push
mov
mov
jp
or
push
and
fstpt
shlb
mov
xchg
in
loop
push
mov
push
das
dec
push
cmpsb
out
add
push
fcomps
es
push
je
jge
out
and
cmc
pop
out
and
int3
cmp
cmp
stc
mov
inc
repz
jg
mov
insb
xchg
rol
xchg
xchg
push
jne
ret
inc
pushl
fisubs
mov
icebp
xor
pop
aad
push
in
nop
adc
lcall
jecxz
lds
xchg
nop
push
mov
add
das
in
gs
xor
insb
lahf
imul
sbb
out
cmp
sub
jns
lret
lods
and
jg
mov
mov
nop
jg
out
push
sbb
mov
aam
insl
mov
push
jecxz
pusha
in
and
jo
jl
je
pop
ss
jge
cmp
xor
sbb
pop
jle
je
test
adc
gs
sbb
aaa
push
and
and
add
js
das
or
xor
mov
inc
xabort
jg
filds
rcl
cmpsb
lods
xor
dec
jo
jle
sbb
xlat
movsb
loop
jmp
and
xor
xor
call
mov
movsl
cmpsl
stos
cmpsl
adc
adc
add
sahf
popf
jecxz
sub
shrb
push
loope
aam
sbb
or
scas
sbb
int
scas
inc
xchg
sub
mov
sub
inc
aam
icebp
call
into
add
and
nop
xor
in
push
jecxz
ljmp
jns
dec
add
add
jge
clc
push
mov
add
inc
xchg
movsb
and
dec
sbb
out
jg
jle
adc
mov
push
loope
push
sbb
sub
cli
fisubrl
clc
dec
add
jne
add
mov
hlt
pop
sub
add
pop
mov
in
gs
repz
dec
inc
iret
test
cmp
inc
rcr
out
fistl
mov
mov
mov
pop
out
shll
cmp
or
push
xchg
mov
mov
insb
loopne
bound
enter
or
mov
out
repz
and
cmp
dec
maxps
rcll
xchg
dec
add
xlat
outsl
aaa
fmuls
daa
movsb
aam
add
add
jecxz
out
mov
adc
ret
cmpsl
imul
rolb
cmp
inc
push
adc
pop
test
in
sbb
cmpsb
jmp
aaa
addl
add
arpl
hlt
imul
call
and
push
xor
dec
adc
inc
imul
cli
lock
inc
in
inc
shlb
leave
cmp
cwtl
call
or
shr
scas
popa
add
mov
pop
adc
xor
and
push
scas
cs
movsl
mov
inc
in
xchg
mov
fsubrs
outsl
out
lcall
adc
dec
cmpsb
movsl
fisttpl
pop
pop
pop
sahf
push
mov
cmp
repz
jbe
and
jmp
leave
mov
aam
push
loope
push
fiadds
inc
adc
dec
sti
ret
jbe
lret
rcll
push
mov
lcall
or
fisubl
xchg
push
aaa
in
jle
inc
in
inc
popf
in
push
std
in
cmp
pop
aas
push
in
pusha
add
dec
scas
addr16
sbb
js
fwait
sbb
jg
jecxz
lock
pop
and
mov
test
fisubs
rcrb
and
ljmp
push
pop
bound
fs
sbb
xchg
and
adc
icebp
data16
adc
fdivs
inc
push
add
pop
int
adc
mov
loop
or
out
inc
inc
push
loopne
or
or
cmp
test
dec
fdivs
je
lods
jg
cmp
push
out
daa
ja
cmpsb
sbbb
jmp
cmpsb
pop
cmp
and
out
cs
pop
push
test
dec
inc
aaa
loopne
add
in
sbb
xlat
out
xlat
fcoml
cwtl
inc
stc
dec
dec
int
stos
cs
mov
loopne
mov
leave
shl
xchg
and
pushw
sti
movsb
jb
fidivrl
pop
and
mov
std
shl
out
xchg
gs
call
cbtw
jecxz
mov
mov
cmp
xor
notl
jno
mov
push
pop
mov
divl
iret
inc
cltd
popa
addr16
xchg
push
jno
notb
stos
ja
xor
sub
out
int3
pusha
pop
lods
fcoms
jl
xor
pop
mov
popf
jns
lret
jmp
sbb
int3
or
shl
push
xor
rcll
mov
enter
popa
popf
clc
sahf
repnz
pop
filds
jno
mov
clc
or
jbe
bound
popf
mov
ret
mov
sbb
mov
and
imul
mov
push
jo
js
out
jecxz
mov
xchg
push
fisubrs
xchg
aaa
mov
outsb
outsb
aaa
hlt
enter
pop
xchg
xchg
and
loopne
xorb
jmp
aad
sub
adc
push
add
fcoms
cli
or
inc
les
cs
sub
jnp
aas
andl
call
les
lds
jecxz
adc
cmp
jge
and
mov
xor
jno
imul
addr16
jbe
fidivl
jns
or
sbb
inc
pop
insb
and
inc
shl
cs
jge
pop
jmp
out
lock
xchg
jno
sbb
jne
jmp
rol
jle
mov
or
xchg
pop
hlt
imul
cltd
pop
or
pop
push
mov
insb
sub
pop
and
add
mov
dec
sahf
add
shl
sub
test
lods
jle
cmp
inc
cld
add
sarb
or
testl
xor
or
adc
das
jnp
xor
push
aad
in
push
xor
cltd
or
add
aad
leave
mov
rcrl
out
xchg
bound
outsl
leave
rolb
push
inc
aad
lock
pop
jns
lret
in
imul
stc
mov
push
cltd
fbld
pop
sub
mov
sbb
add
push
cmpsl
dec
mov
inc
mov
mov
repz
ret
es
negl
lret
cmpsl
xchg
cld
imul
pop
int3
mov
lcall
fucom
jns
pusha
xchg
test
cld
mov
mov
dec
adc
xchg
xchg
mov
insl
in
cli
repz
fildll
push
pop
test
call
aaa
loope
add
ja
fistps
test
inc
xorl
xchg
pop
xchg
mov
cmpsb
daa
push
xlat
inc
jbe
out
xchg
push
xchg
mov
cmpsl
push
movb
out
xchg
pop
xchg
mov
cmpsb
daa
push
xlat
inc
jbe
out
xchg
push
xchg
mov
cmpsl
push
lds
ja
addr16
pop
addb
aaa
cmpsl
daa
push
xlat
inc
jg
xchg
mov
mov
jle
into
addr16
pop
xchg
pop
mov
es
xlat
mov
nop
popa
pop
mov
leave
enter
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
xchg
mov
enter
subl
cmp
inc
push
jbe
push
jbe
xchg
mov
out
mul
divb
push
push
ss
inc
add
inc
jbe
xchg
mov
out
mul
not
push
daa
push
adc
bound
jns
and
and
jmp
aad
xacquire
sbb
or
lret
out
pop
gs
int
inc
add
mov
sub
in
notl
in
dec
add
aaa
cmp
stos
clc
mov
mov
decl
ja
push
ds
cwtl
stos
cmp
daa
jl
flds
pop
call
add
mov
ret
sub
rol
negl
iret
sahf
aaa
push
fildl
enter
xchg
mov
xor
loopw
int3
js
lcall
not
push
fsubr
and
clc
mov
xchg
arpl
loope
push
lahf
ds
jl
dec
jge
push
daa
jl
fidivs
call
inc
push
test
cmpsl
xchg
mov
xchg
mul
not
push
daa
push
aaa
es
ss
inc
addr16
ja
inc
jbe
shlb
stos
mov
mov
inc
push
adc
inc
push
pop
and
aas
xor
xor
in
test
hlt
andb
arpl
inc
addr16
jae
and
add
adc
jbe
out
out
in
loop
out
aad
mul
not
push
daa
push
aaa
es
ss
inc
addr16
ja
inc
jbe
xchg
mov
out
mul
not
push
daa
push
aaa
es
ss
inc
addr16
ja
inc
jbe
xchg
xchg
push
sbb
dec
fnstenv
insb
mov
cli
push
fsubrl
les
xor
push
scas
adc
xor
and
js
cmc
out
movsl
mov
mov
orb
jne
dec
inc
outsb
ss
xor
and
cmpsb
mov
lods
roll
cmpsl
pop
dec
sahf
cmp
push
pop
inc
mov
lret
jno
shlb
xlat
in
push
or
xlat
or
std
and
pop
adc
into
push
jg
cmpsb
jecxz
xchg
cmp
rcr
lea
xor
sub
insl
mov
xor
loope
inc
sub
int3
popa
data16
sbb
and
fwait
pusha
inc
clc
xchg
pop
push
and
arpl
push
fcompl
mov
inc
call
daa
xchg
inc
pop
push
shr
sub
cmpb
mov
cmp
ret
stc
icebp
mov
mov
pusha
mov
inc
rolb
lahf
fbstp
mov
add
cmp
cmpb
pusha
iret
lods
decb
xorl
sarb
sub
push
popa
cmp
add
ljmp
sub
pop
fs
es
xchg
movsb
in
push
mov
into
mov
mov
test
test
lock
push
adc
std
pop
pop
and
movsb
dec
mov
add
fs
dec
pushf
adc
mov
and
test
scas
in
and
lock
iret
pop
popf
arpl
test
aad
inc
ficoms
jg
aaa
nop
je
fisubrl
adc
mov
stc
and
jp
push
push
inc
stos
add
adc
mov
fsts
dec
out
enter
js
sub
ret
xor
lock
add
shll
scas
daa
es
sub
pusha
mov
ljmp
int3
fsubr
dec
rcr
jo
ret
xchg
dec
dec
mov
mov
xchg
jecxz
into
cltd
dec
jmp
mov
idivl
xchg
adc
movsb
pop
cmpsl
cmp
inc
xor
pandn
outsb
fldl2e
arpl
lcall
pop
test
in
lods
push
stc
fwait
sarl
sbb
hlt
scas
mov
pop
lock
and
xchg
shlb
mov
ljmp
mov
es
add
loope
das
jbe
pop
add
lahf
loope
ficompl
mov
jp
push
adc
pop
add
jne
xchg
movsb
test
mov
roll
mov
and
iret
pop
fidivrl
jmp
imul
mov
cli
dec
mov
mov
xchg
sarl
pop
loope
pop
loopne
loope
mull
push
ret
js
lods
sti
pop
loopne
aam
aaa
and
stc
add
sbb
lcall
ljmp
mov
iret
jg
fidivl
les
ds
lods
sbb
sbb
jmp
sub
push
add
insl
pop
fldl
push
shlb
adc
mov
cli
das
aad
fstpl
add
or
dec
jp
lea
flds
xchg
mov
inc
call
xor
mov
jb
nop
aad
and
cmc
rolb
pop
lahf
xchg
xchg
out
and
sbb
pushf
pop
fistpl
mov
loope
scas
jmp
pop
push
sub
loop
mov
or
out
shlb
loop
fs
mov
mov
mov
xor
fwait
scas
loopne
pop
fldl
clc
push
leave
mov
pop
inc
in
mov
mov
sub
es
dec
push
or
xchg
push
cmp
and
mov
mov
stos
popa
mov
ret
jb
repz
dec
push
stc
int3
loopne
call
inc
jne
sti
cmpsb
mov
cmp
into
out
test
cltd
or
and
xchg
pop
and
sub
jge
cmp
out
aaa
pop
out
int
insl
loop
inc
sub
cmpb
and
push
xchg
cmp
cmpsl
fidivs
rorb
inc
xchg
ret
xchg
inc
jp
jp
pop
adcb
pushf
daa
push
push
sub
dec
jae
xor
test
fwait
cmpsl
xor
add
mov
cmp
out
sbbb
cmp
add
add
mov
enter
sbb
xchg
outsb
int3
inc
mov
vmload
std
inc
inc
in
mov
jp
lods
aaa
lods
mov
sub
xor
lahf
insb
ret
and
dec
or
sbb
ja
jmp
cwtl
inc
push
lods
ja
mul
dec
xchg
pop
bound
dec
jo
push
jecxz
iret
push
lea
xchg
xlat
xor
inc
in
jg
dec
or
stc
leave
dec
aam
add
imul
icebp
xor
mov
push
scas
sub
jnp
bound
rcll
mov
xor
fdivrp
xor
adc
test
mov
mov
adc
mov
imul
cmp
ret
mov
or
ret
cmc
movsb
mov
and
sub
js
stos
sub
push
cwtl
cmpsl
inc
pop
leave
cmp
lods
jno
movsl
dec
nop
inc
xchg
arpl
rcrb
pop
mov
aas
push
adc
xor
mov
sbb
dec
xchg
push
fbstp
mov
xchg
mov
mov
lock
xchg
das
jge
dec
xchg
mov
rolb
ret
pop
stos
cmpsb
movsb
incl
repnz
leave
add
pusha
sbb
lods
cmc
mov
lret
xchg
popf
cld
cmp
cmp
loopne
scas
sbb
ficompl
inc
add
mov
or
jp
lret
rcll
xchg
mov
cmp
cld
pop
pop
daa
movsl
insb
adc
sub
xchg
popa
rcrb
mov
xor
rolb
pop
addr16
mov
aaa
xor
aad
push
dec
ja
or
and
mov
jbe
jp
lret
jecxz
mov
iret
push
mov
jne
dec
mov
xchg
lret
pop
sbb
push
jle
sbb
arpl
cmc
imull
adcl
xchg
in
aaa
push
lret
rclb
xchg
sub
jae
and
daa
mov
xor
xchg
xchg
push
mov
outsb
in
in
les
je
outsl
and
shrb
push
movsl
call
cmp
dec
ja
cli
adc
adc
jnp
mov
rcrl
adc
jno
aad
push
insl
or
je
and
pusha
cmp
clc
jle
and
cmpsb
pusha
push
cmp
clc
sahf
scas
mov
movsb
jg
into
pushf
dec
jle
mov
mov
sub
imul
cmp
push
add
adc
push
stc
pop
lret
sub
je
sub
jge
pusha
mov
bound
stc
xor
jne
js
xchg
inc
pop
xchg
push
adc
adc
jnp
inc
mov
in
sti
lods
xchg
xor
mov
push
add
cltd
pop
adc
push
jge
clc
xor
jg
xlat
sti
jmp
out
mov
and
shlb
addr16
jne
in
insl
xchg
test
mov
lods
jae
outsl
sub
testl
push
sti
cmp
lods
sub
pop
add
xor
test
dec
inc
mov
cmp
ds
xor
adc
add
pop
scas
dec
or
pushf
lods
mov
inc
xchg
inc
into
adc
shrb
in
inc
mov
pop
in
cwtl
fmull
adc
nop
imull
sub
in
lock
inc
sbb
int
xchg
rorb
pop
cmpsl
lock
xchg
pusha
scas
lock
mov
cli
filds
mov
and
sbb
lea
iret
rcrb
js
hlt
sbb
xor
lock
hlt
jge
jae
xchg
dec
mov
pop
aad
arpl
jb
ss
fs
gs
stos
out
mov
and
hlt
pop
cmp
xor
test
mov
bound
movb
xor
data16
jle
lods
int
add
sbb
in
aad
mov
jg
jb
pop
cmpsl
cmc
and
jge
and
or
inc
mov
popf
fisubl
and
xchg
pop
movb
pushf
sti
addr16
inc
gs
mov
xchg
in
cmc
mov
je
jge
sbb
adc
test
push
outsb
xchg
sbb
call
shll
in
test
pop
push
xchg
dec
push
ret
cwtl
push
inc
inc
sbb
sbb
sbbl
cmp
out
and
daa
fimull
out
clc
jno
leave
or
xor
add
lock
inc
or
adc
push
int3
xchg
or
pushf
mov
dec
scas
repnz
stc
xor
stc
cli
mov
jae
mov
jae
push
sub
mov
pop
data16
push
dec
jne
mov
int3
sbb
add
inc
sbb
outsl
ficoml
sbb
sbb
push
int
in
jbe
fstl
mov
in
lods
cmc
push
jns
mov
cltd
rcll
out
shrb
adc
sub
pop
or
loope
mov
repz
rcr
imul
int
aam
mov
dec
addb
push
xchg
cmc
cmp
adc
int3
ret
dec
adc
push
repz
outsl
add
roll
hlt
aam
lock
shll
jne
jb,pn
out
xchg
xchg
ds
test
and
xchg
or
jp
and
mov
in
pop
out
in
xor
add
add
gs
mulb
jns
or
xchg
ja
ror
nop
fbld
mov
jbe
lahf
inc
jecxz
push
popf
test
adc
push
in
ja
mov
je
mov
and
pop
stc
adc
dec
lahf
inc
int
jmp
fsubl
adc
push
cmp
cmp
test
imul
xor
sbb
add
sti
ret
sbb
shll
add
adc
push
dec
enter
loopne
jae
hlt
cmp
inc
insb
push
xor
lock
lret
out
in
cmp
lret
insl
jae
scas
xchg
xorl
jp
xor
test
out
in
jge
dec
xchg
scas
inc
inc
mov
jo
int3
mov
sbb
int3
fxch
mov
xchg
adc
outsb
cmp
mov
pop
ret
movsl
fdivrs
adc
cwtl
xor
leave
adc
iret
push
into
popa
rcrb
xor
outsl
inc
std
loopne
push
clc
xor
fwait
shlb
inc
movsb
mov
jg
push
xor
jnp
fbld
sub
xor
and
ds
lahf
filds
imul
lahf
and
or
data16
add
aad
imul
cmpsl
icebp
or
sub
mov
jae
or
adc
inc
loop
sar
inc
push
inc
mov
xchg
adcb
pop
lret
cwtl
lock
cmp
xor
loopne
dec
mov
pop
les
sub
mov
mov
sbb
insl
std
sahf
outsl
stc
into
int
pop
data16
js
insl
lret
scas
cmp
and
sub
push
std
lret
adc
sub
adc
inc
movsl
push
movsl
jecxz
sub
pop
lret
shlb
mov
xorl
cwtl
push
mov
mov
xchg
mov
xor
movsl
movsl
push
inc
ficomps
jp
pusha
adc
push
mov
and
out
subl
or
idiv
rcrb
jb
xchg
push
icebp
jp
jae
std
push
fs
adcl
mov
jns
and
inc
call
mov
sub
sti
xor
pop
xorb
add
addl
ret
xor
insl
add
adc
stos
sub
push
cli
hlt
fiaddl
mov
inc
cltd
stos
imul
sahf
inc
push
mov
cmpsb
push
and
out
fwait
arpl
and
add
mov
xor
pushf
xor
adc
ss
fwait
mov
push
subb
add
inc
lods
pop
daa
sti
push
movsl
out
std
notb
or
add
adc
imul
and
pop
adc
scas
push
scas
jo
pop
int
in
aam
insl
nop
pop
inc
push
adc
enter
adc
mov
out
movsl
mov
adcb
rcll
inc
dec
into
cmp
mov
jp
and
push
stc
lahf
jbe
js
leave
adc
sahf
mov
outsl
aam
xchg
jbe
cli
rcr
mov
pop
test
out
call
add
inc
pusha
sti
sbb
mov
sbb
rolb
xor
push
pop
sbbl
iret
mov
popa
imul
enter
xchg
mov
pop
js
lea
daa
popf
inc
test
repz
ret
roll
or
jmp
mov
push
repnz
push
cmp
lret
jge
xor
sbb
jne
push
aam
jb
cmp
std
cmp
shl
jge
ja
les
dec
xorb
cltd
cmpb
sbb
cmpsb
push
pop
xchg
xor
push
sbb
sbb
out
mov
jbe
ljmp
aas
fcoml
outsb
mov
adc
out
pop
rorb
pop
or
and
popf
aad
xor
dec
adc
loope
ds
or
ja
bound
push
xor
outsb
aam
xor
dec
imul
cld
inc
inc
test
push
aad
sub
pusha
cli
addl
xor
test
adcl
mov
cmpsb
aas
cmp
sbb
sahf
subw
add
jbe
mov
mov
scas
mov
and
inc
test
icebp
inc
mov
pop
sbb
add
aam
or
iret
sahf
mov
in
push
add
jne
lds
xor
mov
and
movsb
int3
aam
mov
dec
incb
nop
stos
add
or
lea
fldt
shll
movsb
lock
pop
subb
dec
cmp
mov
mov
into
xchg
rolb
mov
inc
daa
add
add
pusha
icebp
lcall
xchg
push
or
xchg
mov
sub
test
popa
hlt
cmpsb
js
inc
test
add
push
in
dec
out
mov
out
mov
add
lods
je
pop
stos
mov
pop
pop
arpl
insb
sub
cltd
sub
mov
adc
pop
filds
push
sbbb
addr16
lods
mov
imul
cmp
jo
cwtl
movsb
mov
xchg
pop
xlat
push
lret
and
movsl
xchg
add
lods
pop
fldenv
outsb
mov
imul
test
mov
pusha
cltd
insb
pop
stc
mov
sahf
js
ja
stos
fs
mov
pop
test
lods
mov
inc
movsl
cld
inc
inc
mov
mov
lods
pop
and
in
ss
xchg
cmp
adc
mov
cmp
push
sti
cltd
in
in
cmp
adc
sub
push
xchg
rclb
cwtl
mov
mov
aas
icebp
fmull
sbb
test
push
leave
repz
shrb
lea
mov
insb
push
test
push
fwait
push
mov
lcall
mov
in
pop
lret
sbb
insl
push
xchg
lds
rcll
movnti
ds
iret
mov
pop
sub
dec
pop
lcall
pop
test
jne
add
shrb
pop
adc
sahf
fsts
xchg
mov
inc
ret
mov
or
xlat
jns
shrb
movsb
sub
std
fistpll
lret
pop
add
pop
outsl
pop
jp
adc
pop
pop
jge
xchg
jle
jp
adc
imul
sub
adc
or
mov
jns
pop
scas
or
lds
stos
fistl
outsb
cltd
lret
fcomps
insb
testb
lock
outsl
xlat
in
adc
jb
insb
addr16
mov
xchg
xor
and
fcomip
int3
xor
and
aam
add
insb
push
test
dec
in
sub
dec
push
jmp
stc
std
sub
push
ss
xor
adc
jno
imul
sbb
lret
inc
mov
xchg
jne
pop
adc
ljmp
inc
insl
rcrb
pushf
rclb
xor
ret
std
cmp
or
inc
mov
sub
rclb
sbb
hlt
ja
mov
xchg
pop
test
and
jmp
jmp
xor
int
sbbb
jmp
mov
ret
mov
imul
push
pop
int
ds
xchg
jne
js
loopne
idivb
xorl
mov
dec
inc
inc
hlt
fs
mov
in
rep
das
movsl
aad
push
mov
lret
leave
inc
add
inc
jno
push
std
std
fldcw
stos
sbb
inc
sub
mov
test
test
pop
aad
into
scas
stos
push
jg
push
push
mov
test
repz
add
les
lcall
mov
cmp
dec
in
cs
int3
call
scas
xor
add
loop
fidivs
pop
add
mov
cwtl
jne
xchg
in
push
repz
xor
lods
adc
cmp
or
dec
lahf
mov
repnz
in
outsl
andl
or
bound
xchg
cli
test
aam
mov
dec
and
cltd
xchg
pop
cs
cmc
aad
adc
push
les
out
jmp
dec
stos
aad
pop
dec
mov
nop
inc
adc
adc
mov
dec
cmpsb
negb
fwait
rcr
adc
outsl
jge
cmp
add
mov
xorl
adcl
stos
pop
cmpsl
pusha
ret
and
outsb
cmp
push
cmp
cmc
aas
cmp
pop
jle
jg
adc
jmp
sahf
shrl
mov
and
test
dec
cmpsb
cmp
or
movsl
mov
jecxz
out
push
jo
jmp
icebp
mov
in
pop
cmpsl
aam
je
addb
or
hlt
fidivs
cli
sub
adc
pop
lods
xor
imul
or
jle
and
inc
jne
mov
mov
mov
leave
jno
xchg
pop
dec
add
pop
xlat
lret
movsb
dec
clc
adc
xor
std
adc
incb
sub
xchg
pop
or
xor
or
pop
xchg
lock
into
pop
mov
in
sti
push
mov
mov
notl
cmp
pushf
mull
cmp
bound
jecxz
jp
imul
xchg
push
dec
ds
sub
loop
xchg
sub
jne
outsl
lea
xchg
bound
lret
or
push
mov
hlt
gs
stos
lds
testl
lods
movsb
add
pop
rolb
popa
sub
jle
dec
movsb
arpl
in
repnz
ss
aad
ret
dec
mov
in
mov
mov
cli
jp
arpl
dec
xor
dec
in
inc
dec
xchg
add
cmpsb
mov
std
outsl
test
sbb
jle
pop
into
and
sti
lret
jg
pop
xchg
test
adc
mov
das
outsb
sub
aam
cmpsb
xchg
pop
in
testl
sbb
in
mov
mov
and
std
mov
stos
xchg
sub
sahf
xchg
popa
mov
pop
lcall
scas
cmp
repnz
in
or
inc
push
lret
fstl
sub
xchg
push
pushf
imul
pop
mov
stos
cmpb
inc
idiv
fs
fmuls
pop
scas
lds
addr16
or
push
inc
jecxz
arpl
gs
mov
dec
mov
test
bound
or
jbe
sbb
jle
push
xor
xor
add
and
xchg
es
ja
mov
imul
sub
adc
scas
scas
adc
adc
sti
or
shl
aas
js
jg
or
add
or
test
sub
data16
cmc
cltd
and
and
mov
jae
xchg
or
ret
test
leave
js
adc
jb
sbb
push
fnstsw
adc
or
xor
movsl
xor
shlb
xchg
pop
mov
imul
jns
movups
call
aas
popf
and
scas
jmp
negb
jmp
jno
inc
mov
cli
int
loopne
inc
dec
pushl
dec
ja
dec
inc
inc
adc
fsubr
scas
jbe
arpl
std
add
add
jge
adc
xlat
pushf
movsl
outsb
cmp
dec
inc
xchg
xor
ficoml
enter
adcl
mov
out
push
frstor
or
xchg
pop
pop
into
loopw
std
in
repz
cmpsb
mov
add
test
dec
or
insb
dec
es
and
fs
or
sahf
xorb
js
leave
inc
pop
sti
xlat
jb
or
xchg
aam
sbb
inc
fnstcw
pop
insb
cmpsb
xchg
inc
xor
adc
jge
outsb
dec
mov
xchg
mul
not
push
daa
push
aaa
es
ss
inc
addr16
ja
inc
jbe
xchg
mov
out
mul
not
push
daa
push
aaa
es
ss
inc
addr16
ja
inc
jbe
xchg
mov
out
mul
not
push
daa
push
aaa
es
ss
inc
addr16
ja
inc
jbe
xchg
mov
out
mul
notb
push
daa
push
popf
mov
ss
xor
fimuls
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
adc
add
xor
and
push
xchg
xor
push
fisttps
jo
insb
mov
mov
and
add
add
add
pop
shlb
rclb
mov
xchg
jb
pusha
shll
inc
xchg
push
ret
adc
add
enter
test
bound
fisubl
mov
cmpsb
inc
mov
mov
movsb
dec
dec
push
pop
inc
jns
push
dec
inc
aad
mov
in
push
das
push
xchg
fcmovnb
sbb
in
out
lods
mov
jl
ret
sbb
or
mov
inc
pop
inc
sub
adc
addr16
xor
fwait
out
mov
cmc
andb
and
add
mov
into
lock
nop
inc
pusha
enter
and
mov
repz
adc
mov
pop
stc
shr
mov
add
adc
ret
adc
in
lcall
or
stos
push
or
cmp
push
pop
arpl
adc
push
divl
shlb
mov
cmp
push
push
xchg
pop
lcall
fs
jo
inc
rcrl
cmp
cld
in
xchg
sbb
sbb
add
lods
jae
adc
loopne
mov
daa
xchg
xchg
aaa
in
cmc
or
add
inc
lods
dec
fwait
jl
gs
outsb
test
jno
add
inc
mov
xchg
jo
pusha
mov
mov
and
adc
add
lock
xor
and
push
mov
mov
xchg
jo
pusha
mov
mov
and
adc
add
lock
addr16
loop
popf
lea
lret
mov
std
sahf
or
jno
repz
sub
fisubrs
adcb
or
mov
and
ja
cmp
push
adc
adc
enter
pop
xor
pusha
into
push
int3
mov
pushf
dec
mov
lods
mov
add
dec
pop
jns
scas
test
jnp
adc
sbb
mov
or
mov
stos
dec
mov
into
add
stc
rcr
fiaddl
mov
in
maskmovq
idivl
fistpll
stos
push
roll
fwait
pop
or
push
repnz
mov
jae
sub
into
lea
iret
add
out
jne
add
sbb
jmp
call
adc
xchg
jmp
pop
mov
lods
xor
push
mov
mov
cs
lea
add
stc
sbb
clc
push
mov
mov
imul
cmp
jns
icebp
xor
es
mov
jbe
add
and
sbb
mov
mov
lods
xchg
aad
lret
pop
push
adcl
fnstsw
and
and
jle
pop
loope
arpl
adc
lea
mov
aaa
mov
cmp
test
mov
lahf
shll
and
jne
jmp
cs
shrl
out
gs
sub
and
loope
or
mov
jecxz
gs
add
dec
sub
jno
dec
adc
test
push
cwtl
add
dec
je
push
in
testb
addb
insb
mov
adc
jne
push
xor
fdivl
in
jbe
xchg
xchg
pushl
aam
int
dec
xchg
push
pop
pop
cmpsb
lret
dec
or
add
push
das
or
dec
sti
outsb
adc
fbld
xchg
inc
jg
cmpsl
push
mov
and
roll
push
dec
dec
das
mov
lea
xchg
mov
adc
or
mov
pop
addr16
insb
testb
in
pop
lods
minps
pop
icebp
cmp
pusha
add
cmp
and
push
xor
lret
shlb
enter
js
ss
lods
sbb
jae
jmp
jmp
mov
inc
iret
or
xor
add
pop
jge
adcb
loope
decb
pushf
arpl
adc
cmp
dec
cmc
lods
inc
fistpl
inc
sbb
lahf
setne
rcl
shll
jb
jl
or
test
jo
fucom
xor
mov
lock
cmp
adc
flds
pushl
ds
push
add
cmpsb
mov
insl
xchg
stc
mov
or
scas
mov
scas
mulb
sti
push
mov
out
in
sub
out
fsubrl
das
test
push
pop
pop
inc
sbb
push
pop
ss
pop
idivb
mov
les
out
shrb
jnp
jecxz
repz
or
js
and
and
adc
bound
xchg
inc
mov
jge
push
bound
popa
jbe
mov
jecxz
inc
dec
and
out
aad
test
dec
jnp
loop
lock
mov
loop
iret
in
out
bound
dec
loopne
mov
dec
push
test
jmp
jae
push
cli
in
jnp
mov
jo
cmp
outsl
clc
shll
mov
mov
xchg
fidivl
mov
stc
jb
xor
sub
les
jmp
push
or
rcl
fsub
and
sbb
add
in
rorl
sbb
imul
dec
mov
das
add
movsl
cmp
sbb
int
leave
aaa
push
mov
movsl
mov
aad
lret
xchg
or
mov
icebp
push
sub
mov
dec
mov
and
je
test
xchg
aas
aaa
sub
popa
mov
daa
jne
mov
test
add
das
xchg
mov
dec
jo
xchg
cmpsl
mov
and
mov
pop
mov
fidivs
test
xor
add
xchg
cmp
sub
les
mov
pop
dec
inc
mov
xchg
jns
scas
xchg
loopne
and
push
fsubrs
insl
cmpsb
andl
add
xchg
addl
repnz
sub
and
into
dec
xor
fdivrl
fdivrs
test
mov
call
inc
add
add
mov
stc
mov
sahf
inc
insl
and
mov
jp
in
ret
push
cli
repz
push
ja
sub
adc
in
add
aad
cmpsb
push
rcr
inc
in
xchg
out
imul
pop
mov
inc
sysenter
incl
add
sub
ror
mov
push
lea
repnz
insl
sbb
inc
arpl
rcll
mov
andl
push
jbe
jnp
repnz
cltd
imul
pop
mov
mov
xlat
xchg
mov
cltd
cmpsl
pusha
dec
jne
add
push
jae
mov
lahf
dec
adc
imul
pop
ret
loope
enter
xchg
aas
mov
adc
inc
ss
je,pn
adc
adc
add
or
pop
hlt
scas
in
std
hlt
in
push
push
jmp
pop
loope
test
push
mov
xor
fimull
mov
call
or
or
dec
popa
cmc
das
sbb
and
lods
sub
add
xor
jle
lods
lods
cmc
push
rcrl
xchg
cmp
callw
test
xor
cli
test
cmp
mov
pop
xchg
lret
das
push
mov
aad
bound
inc
jle
push
int3
test
ret
leave
pushf
in
dec
xorl
mov
cmovno
mov
stc
xor
or
adc
xorb
jno
gs
out
jbe
adc
push
js
xor
mov
push
mov
pop
mov
inc
repnz
xchg
mov
or
shlb
sub
repnz
fwait
push
mov
fcmove
sbb
inc
icebp
push
ss
mov
ret
fdivp
push
int
addr16
imul
mov
outsb
pop
ret
test
pop
mov
add
sarb
imul
cld
sbb
je
dec
jp
push
loopne
out
mov
xor
and
movb
aad
xchg
mov
push
push
mov
fnstenv
stos
ss
iret
inc
xor
mov
mov
xchg
xor
je
je
inc
arpl
cmp
ror
adc
cmpsb
jnp
dec
sarb
mov
cmp
jmp
push
jnp
pop
leave
cmp
xchg
dec
stos
loopne
enter
iret
mov
cmp
insb
pusha
add
lret
adc
je
adc
adc
dec
pop
pop
push
jle
mov
lds
pop
es
mov
xor
and
mov
mov
scas
cmp
into
ret
pop
lret
jle
mov
lods
into
adc
and
adc
loopne
adc
hlt
adc
cli
inc
inc
call
cld
fiaddl
add
sti
cs
cmp
mov
cld
dec
out
std
fs
jns
ror
lock
jo
ret
xor
data16
icebp
mov
xor
mov
xor
out
mov
aas
repz
adc
mov
push
xor
jns
cmp
dec
sub
sti
arpl
dec
gs
jo
cmc
sub
subl
aaa
inc
add
mov
jns
cmp
out
scas
jge
ret
jbe
xchg
out
mov
mov
mov
fcmovnb
jp
or
std
dec
adc
push
add
cwtl
mov
pop
addl
js
or
xchg
or
inc
push
daa
sahf
mov
ds
in
pop
std
xchg
sbb
aad
gs
pushf
push
jecxz
jg
js
push
jmp
xchg
push
pop
or
in
push
xor
aaa
add
rol
ljmp
push
jnp
adc
or
dec
loopne
jbe
or
lcall
shl
push
mov
stos
fsin
inc
dec
ja
mov
outsl
data16
mov
pop
push
pusha
push
pop
sbb
movsl
sti
outsb
or
fmuls
inc
adcl
ss
lea
mov
stos
enter
test
dec
decl
pop
xchg
jae
int
int
pop
out
jp
testb
cmp
or
lcall
outsl
in
lds
int
jle
cmp
sbb
jmp
inc
imul
sbbl
clc
out
int
repz
cmc
loop
sub
pop
sbb
pop
dec
fwait
leave
jmp
lcall
adc
xchg
outsl
cmp
aam
scas
sub
adc
lcall
mov
les
sbb
orl
jns
ss
shll
mov
lretw
imul
dec
mov
gs
jnp
push
or
or
shrl
or
inc
jmp
scas
mov
test
mov
lds
xor
jae
loopne
sti
pop
in
push
fs
cltd
jns
ljmp
sarl
mov
in
icebp
test
cwtl
jns
in
aad
sub
xchg
in
loopne
push
fwait
mov
imul
fistl
mov
pop
ljmp
lret
or
stos
fstpl
xor
scas
jae
popa
and
shl
loopne
fldt
or
pop
push
fwait
mov
cltd
dec
jmp
mov
imul
stc
add
test
or
cmp
xchg
jg
xchg
les
add
mov
adc
mov
mov
add
ss
fldt
push
sarb
mov
jge
mov
adc
fisubl
dec
or
div
lahf
jbe
popa
aas
pop
or
cld
stc
ret
mov
xchg
cltd
inc
fcompl
rclb
lcall
ljmp
incb
imul
iret
gs
and
adc
adc
add
inc
push
ret
adc
mov
cmp
mov
or
cvttps2pi
mov
bound
cmp
pop
jbe
add
mov
mov
mov
mov
fiadds
push
ret
fwait
xchg
mov
xor
popa
or
mov
push
fsubl
je
out
pop
inc
les
sti
add
fwait
rclb
sub
mov
pop
rcll
or
jns
in
and
sub
aad
push
lcall
mov
rcrb
mov
negl
filds
mov
pop
pusha
popf
jbe
sti
negl
sbb
loopne
fidivrl
in
sbb
inc
xor
xor
test
jmp
xor
jg
mov
sahf
cmpsb
pop
movsl
stos
mov
mov
sbb
ds
lock
push
cmp
xchg
push
inc
mov
fs
mov
sbb
pop
js
int3
and
lret
pop
cmp
out
jp
xor
sub
pop
or
stos
lcall
mov
aad
arpl
mov
mov
dec
fstpt
cli
movsb
pusha
repz
repnz
aad
fmull
aad
xchg
mov
mov
cmpl
and
and
enter
sub
adc
push
jle
dec
xor
and
mov
hlt
push
dec
cmp
insb
push
inc
cs
mov
fstpt
add
imulb
dec
dec
cwtl
xchg
stos
cmp
lods
or
rorb
mov
pop
ds
pop
test
nop
nop
xchg
dec
mov
outsl
adc
lret
frstor
std
mov
pop
ljmp
push
das
insb
jg
jae
std
sub
lods
or
lods
xchg
push
or
imul
jp
lods
es
mov
mov
cli
mov
add
mov
inc
mov
sub
mov
shr
sbb
ret
add
fsubrl
mov
enter
icebp
and
bound
sub
mov
pop
outsl
ret
mov
jbe
in
mov
sub
jle
js
scas
or
pop
out
push
in
mov
clc
bound
js
pop
aaa
lods
add
out
mov
in
pop
push
jb
sub
mov
and
jmp
rcr
jae
fiadds
test
cmp
mov
mov
ss
test
sbb
jg
mov
idivl
cmp
js
int3
pop
scas
jo
sahf
xor
xor
mov
adc
mov
lods
mov
mov
cli
mov
fldcw
cmp
call
cmc
push
jb
xchg
pop
jne
mov
mov
ds
push
xchg
adc
mov
sbb
or
cmpsl
push
jno
xchg
cmp
fdiv
xlat
in
rorl
mov
and
inc
adc
jne
aad
lahf
ja
pop
add
dec
jb
push
push
loope
mov
outsl
andb
js
or
stos
pop
int
pop
lahf
hlt
mov
xchg
in
push
testl
sti
cs
adc
xchg
lock
stc
adc
pop
push
inc
decl
cmp
repnz
lods
jb
gs
in
xchg
pop
xor
bndldx
rorb
ja
push
dec
jg
adc
leave
xor
xor
push
mov
aaa
sub
add
dec
mov
cmp
stos
mov
cwtl
aad
lcall
or
sahf
adc
mov
sti
inc
out
or
addr16
push
mov
stos
xor
loopne
rolb
or
inc
dec
sbb
lea
repnz
stos
mov
pop
movsb
add
cli
cmpsb
sub
jmp
arpl
scas
sbb
adc
adcl
fistpl
inc
jae
or
dec
aam
inc
fimuls
or
adc
cmp
enter
int3
mov
loopne
sbbl
lret
imul
mov
mov
mov
pop
mov
xor
sub
fmul
push
xor
data16
std
fidivs
and
sti
outsl
lret
pop
inc
movsl
sahf
jecxz
xor
push
dec
rclb
dec
cmc
stc
std
andb
xchg
in
adc
aad
push
outsl
icebp
xor
xlat
popf
xor
cs
mov
xlat
push
jl
pop
bound
sub
cmp
xchg
lret
dec
aad
mov
xchg
das
xchg
vsubpd
add
and
inc
inc
fistpll
stos
data16
insb
pop
scas
push
ljmp
enter
push
xor
in
sub
mov
loop
cmc
sub
ljmp
pop
adc
ja
or
push
and
and
packuswb
push
inc
out
jb
push
cltd
dec
mov
shlb
ds
cmpsb
shl
or
stos
cmp
insb
in
in
add
or
add
mov
iret
loope
into
xor
pop
cmp
lahf
leave
push
shrl
pop
lods
lret
fdiv
or
pusha
addr16
daa
mov
lds
ljmp
in
mov
lcall
xchg
jle
inc
xchg
dec
or
push
dec
mov
in
add
push
add
jne
cs
or
stos
sahf
mov
lods
xor
into
test
push
rolb
mov
xor
dec
lahf
fsubs
shr
push
ja
dec
xlat
sbb
xchg
std
enter
cmpsb
jo
adc
pop
jae
dec
mov
imul
out
adc
jge
test
gs
pop
clc
mov
jge
inc
aas
and
or
out
into
loopne
movsl
xchg
xchg
gs
lcall
jb
push
mov
jmp
js
stos
loope
jnp
inc
es
mov
mov
push
lea
xchg
imul
out
and
push
rolb
sub
jg
cltd
outsl
ss
xchg
inc
cmp
sbb
dec
in
mov
push
add
mov
popa
jp
mov
fisubs
push
stc
jle
jecxz
jmp
inc
dec
pusha
xchg
mov
cmp
mov
cmpsb
pop
shl
pop
xchg
sub
push
or
cmc
or
mov
sahf
adc
scas
pusha
jl
rorb
subb
jp
lret
pop
inc
jbe
je
cwtl
adc
scas
and
popa
and
or
pop
pop
shrb
sub
xor
dec
inc
into
or
pop
jno
sub
int
push
movzbl
cmpsb
aas
add
filds
add
jg
xor
popa
mull
lods
mov
popa
js
add
adc
jg
sub
and
sub
mov
lods
rolb
into
mov
cli
xchg
aaa
dec
pop
decb
mov
orl
stc
add
push
and
mov
fiadds
dec
inc
dec
lods
stos
rcl
jae
ds
lods
out
ret
cltd
test
loopne
cld
faddp
dec
repz
cmp
push
mov
cmp
cmpsb
jb
cmc
loopne
mov
sbb
in
mov
xchg
dec
sub
loope
int3
lock
mov
xchg
pop
cmpb
popa
inc
mov
idiv
nop
pop
aad
cld
cmp
mov
mov
xchg
nop
test
fidivl
enter
push
or
push
insl
xor
sub
int3
inc
rclb
cmp
movsb
xchg
in
lds
mov
fsubrl
imul
nop
test
es
lods
and
cmp
push
xor
add
mov
gs
icebp
lea
or
data16
int
sti
imul
leave
adc
icebp
jae
and
cmc
mov
fidivrl
lret
movsl
and
call
adc
call
mov
jno
cmpsl
imul
cmp
sub
xchg
cltd
xchg
leave
add
es
aas
xchg
adc
pop
out
mov
imul
in
push
xlat
cmpsl
add
lods
fadds
mov
pop
inc
or
jo
dec
stos
cmpsl
mov
ret
xchg
paddb
adc
add
and
fcom
pusha
mov
inc
out
and
jle
jge
ljmp
fstps
pop
dec
adc
push
adc
rorl
push
push
mov
sub
mov
stos
xchg
aaa
insb
std
adc
pop
je
or
je
dec
and
push
std
or
add
and
pop
xor
jge
xor
jp
ret
movsb
filds
call
jnp
and
sar
je
js
lods
int3
jl
pop
pop
jo
xchg
xchg
fdivr
dec
lock
push
in
aad
jp
adc
repnz
fsts
repnz
sbb
add
jbe
mov
lcall
jo
sahf
lds
mov
pop
nop
std
inc
inc
adc
ret
dec
xor
in
fsubs
pop
inc
stos
pop
scas
mov
repz
jg
popf
das
rolb
movl
loop
insl
xor
or
movsb
insb
adc
xchg
xor
mov
movsb
js
mov
cltd
push
mov
push
mov
jle
jmp
and
mov
inc
lahf
nop
test
push
lea
scas
xchg
push
and
mov
mov
gs
sub
inc
fidivs
les
mov
and
test
fdivrs
mov
inc
dec
jae
lock
fnstcw
ss
xor
js
dec
mov
sub
sbb
outsb
xchg
mov
gs
je
and
or
daa
xlat
inc
adc
pop
xor
and
rcr
stc
xchg
jae
arpl
bound
cmpsb
cmp
cmp
or
cmp
test
repz
pmaddwd
popa
sbb
sbb
imul
inc
dec
sbb
or
xor
fwait
lods
mov
jmp
ror
movsl
sbb
fmulp
insl
mov
sbb
fwait
sbb
xchg
dec
xor
das
cmpsl
lcall
fbstp
or
jecxz
ficomps
iret
in
adc
notl
sub
in
je
lahf
inc
nop
add
jbe
lcall
ret
push
test
test
ffree
loope
adc
fisubs
testb
pop
jle
push
adc
cmp
sbb
xorl
aas
iret
test
sub
jae
mov
ds
mov
pop
cmp
pushf
call
add
das
sbb
out
je
insl
test
enter
lret
jo
cwtl
xlat
in
inc
dec
inc
imul
scas
jl
cs
and
sbb
pop
scas
pop
testl
inc
push
pop
icebp
jno
sbb
loopne
aas
jp
out
les
pop
imul
pop
rcl
int3
sbb
jg
push
add
mov
pop
and
leave
jg
fisubl
add
cmp
daa
mov
hlt
push
repz
pop
cmc
or
xchg
insb
ds
in
sbb
fucomp
fadd
xor
pop
stos
gs
imul
push
mov
push
adc
mov
sti
adc
inc
ds
mov
inc
and
insb
jns
pop
cmp
cmp
cmp
shrl
xor
dec
mov
inc
sahf
xchg
loop
push
jge
in
and
fldenv
mov
dec
jp
sbb
and
movsb
pop
jns
adc
test
shll
notl
loopne
aas
and
push
mov
mov
xchg
jo
pusha
mov
mov
and
adc
add
lock
xor
and
push
mov
mov
xchg
jo
pusha
mov
mov
and
adc
add
lock
push
shlb
rol
inc
mov
xchg
jo
pusha
inc
push
mov
and
adc
add
lock
loopne
rolb
rclb
mov
xchg
jo
lret
mov
fisttps
mov
push
cmp
mov
cmpsl
aas
repnz
rcrb
cpuid
jg
das
sbbb
jne
jb
jb
push
and
xor
add
adc
call
pop
adc
mov
pop
xchg
dec
jnp
imul
ljmp
out
sbb
add
jae
outsl
cmpsb
jge
cmp
dec
adc
cmp
sub
into
cs
jmp
sbb
or
pop
ds
js
mov
aam
xchg
out
inc
mov
in
int
repnz
sub
fisttps
push
mov
pop
mov
stos
jb
or
jecxz
test
fs
or
decl
iret
pop
jg
pop
sub
bound
pop
daa
ljmp
cmp
loope
lock
sub
aas
ret
outsb
andb
push
sbb
jb
push
adc
and
cltd
ljmp
cmp
mov
sub
pop
push
cmpb
push
or
xor
in
loop
cmp
rorb
bound
xchg
dec
mov
lahf
inc
xor
sub
add
or
sti
aas
ljmp
jg
outsl
sbbb
adc
pop
jl
fnstenv
leave
inc
nop
pop
scas
add
repnz
mov
mov
push
out
imull
jb
daa
lahf
push
fcoms
pop
shrl
iret
loopne
repnz
xchg
arpl
adc
add
sub
jmp
sti
pop
xchg
xor
add
adc
loop
repnz
ret
cpuid
jg
outsl
sbbb
bound
push
and
xor
add
adc
loop
repnz
ret
cpuid
jg
outsl
sbbb
bound
cmp
cmp
adc
data16
xorb
push
lock
push
and
push
jp
pop
pop
lahf
xchg
jmp
push
clc
cmpb
pop
mov
push
nop
sub
shrl
push
test
sub
push
pop
call
dec
imul
aas
lods
aaa
cmp
jae
push
test
mov
and
js
subl
xchg
addr16
out
mov
xor
mov
push
rolb
in
mov
movsb
pop
cmp
movsb
pop
outsl
sar
mov
scas
shlb
mov
dec
sbb
push
adc
push
mov
add
fidivs
and
popa
fld
lret
mov
jle
add
pop
sbb
rol
aad
jnp
movsb
sbb
mov
xor
ljmp
rclb
push
testb
cmpsb
shl
sub
movb
pusha
int
fnstsw
pop
aaa
mov
les
mov
adc
push
es
mov
add
push
adcl
xor
jmp
cld
mov
cld
jnp
xor
pusha
cmp
lret
in
decb
out
inc
shll
in
loop
jp
mov
and
js
mov
jle
dec
sbb
scas
push
xor
into
cs
xor
sub
jle
add
push
mov
xchg
or
inc
leave
test
dec
adc
adcl
and
xchg
sbb
loop
adc
leave
fwait
mov
ficoms
gs
jle
pop
into
popa
jne
imul
subl
pop
mov
jb
mov
out
andl
inc
or
lock
jle
add
ret
inc
and
sbb
pop
fsubs
idivb
iret
and
xchg
cli
inc
ja
ret
mov
shll
scas
lcall
dec
mov
test
lds
sub
mov
test
insl
xor
jl
popa
pop
adc
sbbb
hlt
or
popa
jge
xrelease
ficoml
fcomps
ret
iret
mov
pusha
mov
lea
mov
add
insl
test
push
mov
mov
aas
lods
cmp
cltd
les
sti
fdivl
loope
jb
stos
bound
xor
sub
pop
addr16
ss
test
popa
push
inc
push
stos
cmpsl
repnz
pop
rolb
es
mov
subl
jb
hlt
je
mov
aaa
adcb
cmpsb
add
popa
adc
fwait
push
ret
push
lods
xchg
jge
xchg
dec
add
pop
stos
inc
mov
ds
shrb
filds
mov
jg
ja
in
and
enter
mov
and
sbb
xchg
fsts
cs
jecxz
mov
dec
jbe
dec
rolb
aam
pop
out
lcall
shll
pusha
push
push
push
sub
mov
push
loope
fwait
scas
mov
leave
pop
insb
pop
repnz
lds
sub
pop
mov
sbb
push
sbb
iret
imul
pop
testb
push
xor
adc
jle
fdivl
push
shll
mov
sub
mov
and
push
pop
xchg
dec
daa
icebp
add
xor
ja
sbb
movsb
pop
cmp
mov
data16
xchg
imul
push
xchg
cmp
jmp
sub
jne
pop
test
int
cmp
punpckhbw
and
imul
mov
in
into
dec
sti
mov
inc
pop
mov
js
xor
jecxz
fstpt
adc
ja
push
repnz
popa
inc
inc
stos
and
pop
scas
aam
inc
test
dec
cmpsl
xchg
sub
cmpsb
pushf
sbb
sarb
rorl
xor
cmp
fwait
mov
cmp
jmp
movsl
stos
xchg
mov
pop
mov
cmp
fisttpll
pop
pop
iret
jbe
cltd
ss
int
jb
dec
mov
and
int
lret
xor
lahf
xchg
and
pop
pop
ss
sub
call
xor
into
cltd
hlt
jne
insl
or
push
push
pop
cli
int3
push
lcall
movsb
scas
sub
cmc
adc
fimull
std
and
in
repz
pop
push
lret
inc
aas
fistpll
mov
frstor
jle
or
pop
adc
push
mov
xor
stos
jg
sbb
mov
nop
jp
int
orb
test
pop
data16
xchg
xchg
pop
cmp
push
sub
xchg
into
mov
mov
fsubp
push
in
xchg
mov
adc
divb
dec
xor
or
shlb
jae
dec
pop
jg
fnstenv
out
out
and
or
repnz
mov
dec
xchg
repz
lds
mov
loopne
in
popf
or
pop
imul
xlat
divl
and
and
fstps
xchg
roll
lahf
xor
fnstenv
dec
loope
xchg
sti
jl
loop
jnp
fucomip
xor
icebp
mov
push
arpl
inc
sti
addb
shll
stc
adc
popf
into
sub
mov
jae
in
arpl
fisttps
xchg
adcb
cmp
test
mov
xor
jns
push
shlb
inc
daa
xor
fcmovnbe
scas
test
cmpsl
iret
fstl
pop
es
mov
or
or
dec
jb
movsl
xlat
movsb
xor
aad
scas
clc
sub
mov
rclb
pop
pop
push
clc
pop
mov
hlt
mov
into
push
sbb
lods
loope
lcall
inc
fsub
rcrb
ret
sbb
gs
mov
mov
mov
jo
xor
and
xor
push
out
repnz
pop
outsb
mov
int3
and
dec
stos
mov
aad
iret
stos
arpl
xor
jbe
push
cmpsb
ret
mov
int3
add
mov
sahf
ljmp
test
loopne
ret
fisubrl
in
fisttps
insl
es
cmp
pop
cmc
cmp
inc
aas
bound
icebp
insb
test
iret
pushf
mov
bound
add
out
aam
mov
ja
jl
scas
cmp
out
icebp
out
enter
stos
sub
jnp
xchg
subl
bound
xor
fbld
jne
xchg
adc
inc
pop
xchg
movsl
lcall
push
and
pop
pop
push
stos
mov
inc
push
jge
test
mov
outsb
mov
mov
movsl
dec
in
fisttpl
in
mov
aas
test
bound
out
call
mov
sahf
lret
outsl
imulb
fdiv
in
std
xchg
xor
nop
inc
pop
sub
mov
shrb
or
rorb
xor
or
dec
mov
sahf
mov
idiv
xor
push
pop
das
inc
and
jl
or
test
add
cwtl
and
fld1
mov
repz
lret
nop
leave
inc
cltd
sub
into
cmpsb
jne
fdivl
jle
xchg
out
fcomp
xchg
out
sbb
nop
fimull
jge
test
loopne
pop
pushf
cmp
aaa
xor
mov
loop
js
inc
jbe
xchg
jb
add
sbb
sub
das
pop
add
fmul
inc
jae
stc
stos
data16
clc
movsl
xchg
dec
or
mov
adc
in
xchg
repnz
push
sub
push
pushf
xchg
test
push
jg
jecxz
pop
lahf
je
mov
and
mov
push
mov
pop
push
icebp
cmpl
jg
sub
pop
add
nop
sbb
nop
dec
or
dec
in
sarl
daa
fnstsw
lock
pusha
fiadds
fsubl
fwait
mov
sub
xor
mov
xor
aam
sti
cmp
imul
out
ljmp
sub
xor
popf
adc
cmpsb
add
sub
lret
xor
sub
mov
xor
data16
push
push
mov
pop
je
icebp
frstor
inc
dec
mov
jnp
jb
nop
dec
or
add
fwait
outsb
adc
push
ljmp
jns
inc
push
push
fildl
in
dec
xchg
pop
addr16
inc
cwtl
imul
or
sbb
push
fcoms
xchg
out
xchg
mov
xchg
cmp
call
add
pop
lock
sub
ret
sub
js
outsb
in
pop
repz
pop
pop
ja
mov
or
mov
mov
pop
ds
es
xchg
add
sbb
mov
and
daa
pop
sub
ss
cmp
es
aad
out
cmp
mov
push
scas
das
in
dec
clc
push
popf
sbb
insl
mov
push
mov
call
jmp
push
xchg
sbb
xchg
movsb
adc
cli
and
clc
call
mov
sbb
fstp
cmc
jb
les
jl
das
fsts
mov
mov
nop
sub
scas
out
add
out
jle
adc
dec
mov
push
lret
ja
xor
inc
lret
mov
and
inc
std
add
jp
mov
outsl
out
insl
or
pop
pop
fistps
es
dec
dec
jle
lahf
scas
ficoms
aas
inc
dec
xchg
add
ret
cmp
idivb
jle
inc
cmpl
sbb
js
fs
xchg
mov
add
dec
outsb
repnz
jge
xchg
xchg
jecxz
push
add
ret
imul
ficoml
hlt
cmpsl
xchg
lods
test
xor
iret
fs
xchg
fisttpll
in
xchg
lret
mov
adc
dec
xor
bnd
sub
stos
xchg
jb
push
and
jne
jl
jno
or
xor
sti
mov
test
fildl
cld
pop
adc
push
outsb
stos
push
and
popf
in
add
adc
aad
movsb
sbb
and
adc
jmp
loopne
leave
sub
adc
xlat
mov
push
push
adc
push
sub
dec
xchg
ficoml
cmp
jp
cli
adc
jo
xor
fsubrl
cmp
push
sbb
xlat
pop
insb
movsl
push
or
push
xor
ljmp
add
sub
xor
dec
or
movsb
rorb
dec
or
adc
xlat
cld
jno
adc
or
sarb
push
jb
push
leave
aad
xchg
mov
jp
pop
cmpsl
lock
sbb
push
mov
jecxz
fxch
pushf
xor
test
in
pop
mov
jno
cmp
push
fstpt
jae
outsl
rcll
cmpsl
add
pop
xchg
decl
cmp
lcall
out
push
mov
mov
pop
std
pop
and
xor
and
xchg
mov
sbb
bound
jl
mov
xchg
stos
lcall
add
adc
lock
mov
pop
pop
iret
stc
aad
scas
cwtl
testl
mov
pop
dec
in
or
jge
mov
and
cmp
push
mov
daa
sti
bound
adc
std
pop
xlat
pop
arpl
mov
idivl
ljmp
jne
adc
call
sub
xor
shlb
fcompl
xchg
push
inc
xchg
sbb
pop
cmp
push
fldl
outsl
xchg
insl
mov
cmp
pop
mov
push
jne
xor
shrl
out
test
cmpsl
dec
ja
dec
sub
push
mov
cmp
jge
pop
cmpsb
hlt
add
cvtps2pi
push
mov
lock
mulb
and
cmp
jp
sbb
xor
int
js
inc
das
cld
frstor
xchg
xchg
shrl
lret
jecxz
pop
or
sbb
popf
lret
sbb
shlb
ret
into
pop
mov
repnz
jns
sub
sbb
ja
mov
pushf
dec
inc
outsb
scas
mov
mov
jns
push
and
push
addl
xchg
dec
icebp
call
shrb
ds
scas
ss
sub
pop
dec
add
inc
ds
adc
xor
inc
mul
aad
mov
mov
scas
push
popf
sbb
push
cmp
in
xor
test
jle
mov
sub
jnp
dec
pop
mov
stc
aas
ficoms
mov
enter
iret
aam
test
mov
adc
add
mov
sbb
sahf
cmp
mov
push
cmc
jg
mov
js
mov
mov
jecxz
mov
fildl
adc
in
push
lahf
cmpsb
call
out
outsl
jl
jns
clc
imul
mov
movsb
in
push
mov
int3
repnz
out
fistpl
mov
ljmp
jecxz
scas
lds
adc
sub
sbb
mov
inc
ret
cltd
cmp
xchg
into
xlat
jns
xchg
shr
adc
scas
loope
push
adc
xorl
fisttps
arpl
adc
stos
sbb
rclb
ficomps
lods
js
mov
add
cmp
push
fimull
and
and
or
sbb
frstor
adc
sub
add
sub
adc
das
jecxz
sbb
pop
add
lea
inc
flds
cmp
jno
or
ret
sbb
xchg
les
into
sar
or
fisubs
enter
jo
push
push
lods
aad
jnp
xchg
outsb
inc
lret
ret
frndint
mov
add
pushf
lahf
lds
lea
and
test
dec
push
arpl
add
enter
pop
in
mov
or
and
mov
cmp
cmpb
or
pop
jno
and
mov
out
es
in
aad
or
lds
mov
dec
ss
push
xchg
test
rol
int3
fidivrl
addl
xor
pop
pushf
out
xchg
aaa
add
mov
add
pop
jl
adc
push
int3
push
in
loopne
dec
int
pop
fdivrs
in
and
ds
fwait
xchg
cld
pop
mov
jae
sahf
jle
bound
adc
shrl
add
push
pop
popl
adc
adc
cmp
mov
mov
adc
mov
jmp
adc
mov
out
lds
push
loop
orl
mov
in
cld
inc
pushf
xor
in
pop
hlt
mov
cmp
ss
mov
subl
xorl
nop
or
dec
mov
mov
jo
push
jmp
xor
sub
test
inc
mov
insl
pop
push
pop
jg
pusha
hlt
push
les
and
jp
in
xchg
mov
jge
movsb
jp
das
mov
rcl
mov
or
sub
mov
pushf
dec
and
je
push
fnsave
or
into
aas
out
dec
mov
mov
movsb
fisubs
sti
sub
adc
rclb
pop
jmp
fs
jmp
stos
test
sbb
jge
inc
sarb
aam
xor
mov
add
fldenv
push
in
push
movsl
mov
and
fiadds
add
sub
cmp
fwait
mov
push
jg
add
aam
add
xchg
mov
fisttpll
pop
es
lds
jns
jo
push
cmp
mov
rclb
lds
push
fisubs
inc
imul
pop
in
cmpsl
xchg
jle
xchg
inc
addl
add
xchg
aad
cs
cmp
lods
cmp
add
int3
ljmp
sbb
xor
popa
fisubrl
adc
mov
xchg
mov
stos
mov
in
mov
lods
sbb
es
push
aam
and
or
xchg
sub
mov
cmp
fnstcw
dec
xor
loopne
cwtl
repz
xor
or
insb
aas
mov
xchg
addr16
push
jecxz
inc
lds
scas
in
dec
add
in
push
jb
gs
pusha
xchg
push
mov
inc
shr
call
call
dec
mov
pop
dec
jg
mov
sti
ret
movb
add
mov
mov
push
test
sbb
sub
movsb
aaa
into
sub
ret
hlt
decb
gs
lea
in
cs
pop
lahf
ss
leave
inc
add
subb
and
sub
mov
add
sbbb
stos
mov
repz
out
les
push
cli
clc
xlat
adc
push
ret
sbb
in
mov
popf
adc
sbb
ja
inc
arpl
pop
mov
in
xchg
cli
dec
inc
fildl
xchg
pop
aad
in
push
gs
enter
push
jle
jge
and
xchg
adc
orb
jle
arpl
int3
mov
subb
mov
addr16
sbb
sub
xchg
dec
es
rol
adc
out
scas
and
jge
jge
xorl
hlt
xchg
sbb
push
rcll
jo,pt
and
mov
outsl
rclb
sub
outsl
loopne
int
aaa
stc
cltd
cmp
lahf
and
cmp
push
mov
push
aam
shl
outsl
sti
mov
loop,pn
movsb
lcall
and
stc
adc
and
pop
test
lret
xor
cltd
loopne
dec
inc
ret
mov
add
jae
push
test
popf
cmp
add
and
leave
sti
sub
mov
dec
and
mov
jbe
push
movsl
into
push
jbe
xchg
and
cld
or
fbstp
mov
or
dec
push
and
xchg
inc
rcrb
cmp
aam
ret
outsl
popa
test
push
push
fistpll
dec
inc
mov
ret
jmp
aad
pop
sub
scas
mov
lret
loope
fldenv
sarl
adc
push
iret
dec
jecxz
hlt
xor
sbb
aad
aam
xchg
ljmp
xchg
lods
lret
mov
push
pop
sbb
shrl
dec
shrl
adcb
pop
jae
call
dec
fcmovnbe
push
mov
icebp
cltd
adc
and
addl
xchg
jo
fs
xchg
ss
mov
stos
pushf
mov
aad
mov
out
push
lret
inc
or
in
lods
or
out
and
mov
subl
push
dec
or
int3
pusha
popl
fmull
xchg
xorb
cmpsb
arpl
pop
stos
das
xchg
into
rcr
pushf
cmp
lods
mov
ds
aas
pusha
sub
jo
adc
cltd
daa
and
ds
pusha
mov
sub
loopne
push
add
inc
push
cwtl
aad
sti
push
adc
loop
cmpsb
shrb
scas
pop
or
outsb
sbb
xchg
mov
into
sub
and
loopne
lret
jl
push
lahf
cltd
mov
push
jno
int
repz
adc
pop
or
loope
jmp
mov
rclb
test
xchg
sub
stc
out
aad
in
push
jmp
lahf
xor
shrb
sti
push
cmp
xchg
int
xor
repnz
pop
dec
pop
testb
mov
loope
pop
cli
sbb
inc
adc
repz
mov
aas
push
sub
leave
inc
add
mov
mov
loopne
out
or
lds
mov
out
bound
loop
call
std
out
into
sub
jmp
mov
daa
mov
lods
or
fs
or
cltd
in
mov
add
jp
adc
inc
in
pop
push
jecxz
cmp
iret
sbb
dec
cmp
xchg
in
scas
jg
lods
mov
mov
in
sub
dec
insb
cli
int3
jp
sub
fcomps
mov
pop
pop
pop
in
fidivs
mov
xchg
pushf
dec
push
stos
les
ja
and
dec
pop
jp
jns
lds
adc
shll
inc
cs
icebp
xor
sub
test
movsb
cmpsb
mov
xor
jno
dec
mov
fmul
fdivrs
inc
gs
jg
clc
fisubrl
sbb
ret
sbb
xchg
xchg
jae
xor
cltd
cmpsb
inc
jg
sahf
lahf
test
negb
dec
orl
dec
mov
mov
das
xchg
lcall
sub
outsl
out
sbb
rorb
dec
out
iret
repnz
scas
add
mov
cmp
add
aam
cmp
shll
pop
mov
scas
repnz
dec
jmp
cli
sbb
fdivrs
insl
insl
in
jmp
sub
rcl
jp
sarl
in
push
das
shll
popf
mov
dec
popa
add
push
sbb
nop
lea
test
mov
gs
rclb
sub
out
stc
call
repz
jge
mov
push
jb
and
push
int3
pusha
fs
in
sub
add
subl
jp
dec
out
xchg
pusha
popa
cmp
xchg
jo
inc
sbb
add
cmp
cli
pushf
popf
lret
xor
ret
jmp
in
cld
sbb
mov
pushl
out
add
adc
loop
repnz
ret
cpuid
jg
outsl
sbbb
bound
push
and
xor
add
adc
loop
repnz
ret
cpuid
jg
outsl
sbbb
bound
push
mov
pushl
out
add
adc
loop
repnz
pop
rorb
mov
pop
mov
scas
je
push
mov
pushl
outsl
sbbb
sbb
pop
sarb
idivl
nop
jge
insl
mov
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
mov
movsl
mov
cmp
iret
or
jne
gs
push
dec
inc
pop
mov
movsl
mov
cmc
jmp
sti
aad
sub
sbb
or
mov
movsl
mov
cmc
jmp
sti
aad
addl
jns
add
adc
cmp
pop
ljmp
lret
outsb
sbb
adc
xor
and
add
inc
cltd
std
std
cs
in
jp
or
add
int
fwait
enter
ljmp
xchg
add
enter
lods
test
jle
nop
sub
fwait
aaa
xor
lret
push
mov
mov
movsl
cmp
inc
test
push
inc
lds
lock
dec
mov
and
dec
dec
inc
inc
jne
jp
lods
ljmp
fst
jae
nop
hlt
js
es
xchg
cmp
push
bound
sahf
pop
jbe
mov
aad
ljmp
mov
jns
movsl
mov
cmc
jmp
sti
aad
sub
sbb
gs
dec
inc
xor
sarl
cmc
xchg
mov
arpl
je
or
dec
add
shrb
jmp
lahf
lods
mov
je
pop
push
je
or
adc
xor
shl
movsl
call
mov
lret
sub
sbb
gs
dec
inc
pop
mov
movsl
mov
cmc
jmp
sti
aad
sub
sbb
gs
dec
inc
pop
mov
xor
cmp
or
jb
lock
hlt
and
movl
push
stc
stos
call
jle
shll
nopl
stc
xchg
ljmp
flds
cmpsb
jge
xlat
cltd
jmp
mov
push
pusha
jmp
out
adcl
aas
push
imul
add
cmp
xor
in
bound
pop
sub
xlat
sub
mov
lock
xor
loopne
lahf
xor
pushf
outsb
mov
jg
adc
and
xchg
sbb
xchg
pop
rclb
shrb
jnp
or
mov
les
jmp
push
dec
movsl
shrl
adc
mov
mov
mov
sbb
dec
loope
add
pop
dec
cmp
cmpsb
push
stos
mov
stc
mov
mov
mov
xor
jae
fistpll
and
bound
lock
sbb
dec
jno
xchg
add
xchg
call
xchg
ficoml
mov
mov
test
in
mov
fwait
int
cltd
popl
inc
ja
pop
test
cmp
and
jns
adc
scas
scas
hlt
cli
gs
mov
imul
and
hlt
add
push
int3
out
fists
popf
ret
imul
inc
fsubl
push
lds
push
push
add
sbb
popa
fisubs
lret
mov
addr16
imul
push
cmp
mov
mov
int3
ja
fdivr
in
and
mov
out
jnp
fstp
jge
aaa
aas
int3
xor
scas
cmp
dec
xorl
sub
bound
cmp
pop
movsl
mov
lds
xchg
push
lock
inc
mov
call
std
ss
test
idiv
pop
aad
lods
leave
outsl
sbb
in
and
rcl
test
int3
fists
dec
and
imul
fs
cmp
outsb
bound
mov
pop
in
mov
jp
fimuls
dec
inc
sahf
mov
shlb
mov
sarb
call
push
and
iret
mov
inc
imul
xor
xor
shl
xchg
pop
mov
pop
in
xor
xchg
cmpsl
fldl
adc
dec
and
cwtl
cmc
xchg
frstor
sbb
in
jmp
mov
dec
fucomip
xor
cs
jnp
stos
dec
and
jne
mov
push
pop
dec
cmp
aad
sbb
xchg
jnp
adc
pop
out
and
lret
sub
push
add
push
inc
lahf
fimuls
jb
mov
clc
jae
pop
lock
xchg
add
cmp
fstl
fnsave
iret
jns,pn
fucomi
pop
and
mov
subb
mov
je
frstor
push
sbb
inc
pop
out
inc
adc
sti
add
lret
shr
sbb
imul
insb
push
mov
jbe
jmp
cli
push
add
and
xor
insb
push
leave
loopne
mov
in
test
dec
add
inc
lods
mov
cmp
inc
jecxz
sbb
shlb
mov
into
mov
ret
or
cmp
pusha
not
jecxz
test
int3
xchg
adc
sub
int
add
fidivl
pop
ret
push
notl
jl
ljmp
cld
int
mov
arpl
dec
sbb
inc
leave
sbb
mov
mov
dec
addr16
subb
jns
insb
cmc
mov
pop
loop
ss
sbb
sub
in
out
enter
mov
dec
push
pop
mov
lods
xchg
fwait
push
xchg
sub
adc
and
out
pop
or
cli
cld
into
into
fists
mov
add
xchg
rol
cmpsb
or
sub
outsl
scas
loope
popa
mov
ds
arpl
mov
popf
mov
sbb
and
xor
pop
imul
push
idiv
stos
into
dec
roll
xchg
fcmovb
add
sbb
or
fcmovnu
cmp
xor
ret
sahf
daa
add
pushw
mov
in
leave
icebp
inc
push
dec
mov
cmp
jo
sub
adc
lds
int
pop
sbb
mov
lcall
loop
aam
pop
jg
and
dec
cmp
imul
sub
fs
xchg
ja
jbe
jo
and
xlat
mov
mov
sbb
imul
les
xchg
mov
out
cmp
xchg
jmp
cltd
jg
push
cltd
es
xor
push
rcll
mov
fistl
sbbb
dec
testb
ret
jnp
cmp
jecxz
adc
gs
imul
cld
dec
fs
jecxz
lock
mov
shrb
lock
inc
stc
xor
iret
call
cmp
bound
ret
mov
xchg
fcomps
sbb
xchg
rcrb
les
pop
push
xchg
xor
push
mov
fidivl
pop
pop
sub
dec
xchg
xchg
repz
aaa
xor
popa
xchg
imul
adcl
cld
push
lock
pop
aam
push
lods
dec
adc
int3
lods
fldt
stc
sub
xor
add
fidivrs
sbb
or
mov
mov
add
xchg
sbb
inc
das
in
cmp
lahf
and
mov
or
fimull
xor
ljmp
outsl
sub
fcomps
jo
sub
pop
cmpsl
shr
inc
out
mov
adc
mull
pushf
rorl
repz
ja
test
jmp
dec
add
mov
sub
rcrb
fbld
push
jbe
push
pop
les
js
mov
push
pop
pop
mov
xchg
je
dec
sub
or
lods
add
lahf
mov
pushf
outsl
push
out
cmpsl
push
pop
xor
dec
daa
or
jmp
scas
stos
aas
cld
pop
mov
mov
xor
mov
mov
add
pop
nop
push
add
bound
and
inc
cmp
mov
cmpsb
out
iret
jns
mov
cld
xchg
mov
ficoms
dec
nop
cld
mov
inc
jne
push
lret
push
mov
dec
jae
daa
aam
xor
clc
in
insl
cmpsb
pop
test
push
int
jecxz
push
xchg
mov
lcall
call
adcb
repnz
lahf
lret
dec
jmp
jno
push
mov
add
stos
jle
mov
pop
mov
inc
rolb
in
movsl
les
xchg
and
xor
sub
std
mov
inc
stos
mov
pop
cmp
cmc
mov
scas
lcall
mov
cmp
bnd
cmp
ds
pop
mov
fidivl
mov
cmp
jmp
movsl
xor
lret
leave
inc
pop
cmp
dec
sub
sub
xchg
dec
fwait
jne
pushl
leave
js
stos
enter
decl
sub
mov
fs
push
test
dec
sbb
insl
and
sahf
scas
dec
jno
cmpsl
daa
rcr
fisubs
fwait
loop
rcrb
mov
or
pusha
dec
in
adc
out
sti
ret
jns
push
shlb
mov
dec
inc
andb
cmp
mov
inc
leave
sbb
fisttpll
or
mov
inc
lods
lods
rolb
cmp
jae
je
jg
xchg
addl
push
mov
repnz
cmp
rcll
or
push
cmp
and
mov
dec
mov
and
xchg
fld
leave
sbb
test
sbb
icebp
pop
sbb
jno
xchg
jmp
xor
imul
cli
arpl
scas
jb
cmp
inc
test
adc
jbe
mov
jno
mov
sbb
jp
dec
dec
aaa
lret
sub
mul
cwtl
iret
add
xor
xor
sahf
xchg
iret
cmpsl
ficomps
loop
std
js
mov
lods
push
mov
dec
jecxz
add
sarb
std
push
dec
cmp
loop
and
xor
fbstp
pop
scas
pop
xchg
adc
adc
out
enter
xor
jl
push
sbb
ja
in
push
push
pop
inc
pop
insb
sarl
popf
fiadds
iret
sub
inc
scas
out
cmpsl
addr16
scas
pushf
leave
dec
and
push
xor
adc
mov
cli
mov
xor
mov
leave
sbbl
ds
inc
mov
push
mov
push
jle
xchg
sub
adcb
fildll
cmpsb
xor
dec
pop
rclb
sti
jo
mov
pop
pusha
lds
in
fucomip
stc
jg
cmc
mov
xchg
sub
xchg
fstp
ja
adc
fistpl
inc
cs
movsb
mov
push
adc
jecxz
xor
dec
fisttpll
mov
cs
mov
ror
cwtd
mov
pop
stc
ficomps
cld
popf
adc
test
insl
repz
inc
testl
and
in
xchg
mov
fwait
dec
mov
cmp
inc
or
jb
inc
xor
mov
pusha
jp
ret
daa
add
xor
jg
sub
mov
das
sub
sub
shrb
clc
dec
inc
or
ret
inc
das
mov
in
jnp
sbb
jnp
cmp
das
icebp
stc
inc
and
daa
clc
rclb
sbb
jl
shll
mov
mov
mov
ljmp
ss
int
fs
aad
out
xor
stc
and
rclb
mov
pop
push
push
jne
adc
cmpsl
cmpsl
add
push
mov
es
stos
add
aas
xor
inc
sbb
inc
test
inc
and
mov
lret
das
fwait
or
data16
sbb
dec
fstpt
and
icebp
or
shll
repnz
xchg
jg
cmp
cmpsl
shlb
push
lods
mov
xor
idivl
lock
xchg
scas
sub
aas
xchg
dec
pop
xchg
cmp
xchg
push
fiadds
sbb
dec
inc
push
dec
dec
repz
xchg
pop
test
adc
mov
cli
outsb
loop
mov
cltd
pop
lds
movsl
mov
jae
xchg
adc
pop
addl
or
push
pop
ds
pop
cmp
popf
ds
repz
sub
inc
imul
sbb
popl
or
mov
scas
outsl
push
ror
lahf
pop
lds
pop
pushf
and
xchg
pop
sub
push
dec
sbb
fwait
ljmp
push
jg
sub
popa
pand
jmp
andb
insl
out
push
mov
or
sbb
pop
popa
cmp
push
cltd
adc
and
sbb
jb
xchg
in
out
lods
xor
xor
cmp
jmp
sbb
cmc
nop
jp
push
inc
data16
stos
adc
dec
adc
inc
imul
lahf
cs
jl
lock
sarl
lea
loop
in
out
sbb
mov
sbb
adc
pop
sub
mov
add
scas
cwtl
push
adc
cltd
add
rcrb
popa
xchg
iret
inc
inc
mov
xchg
in
movsb
loop
inc
movsb
movsl
mov
mov
inc
ret
and
insb
pop
jae
cmp
dec
fistl
lret
cmpb
std
xor
push
dec
out
and
mov
mov
and
xchg
mov
jno
and
iret
daa
sbb
cmpsl
mov
xor
mov
int3
sbb
xor
pop
aam
xchg
in
xchg
mov
pop
ret
in
clc
js
dec
loope
mov
lods
sub
out
enter
loop
pop
ljmp
fcompl
call
shr
bound
mov
testb
out
mov
mov
data16
repz
push
or
int3
xchg
push
fistpl
xchg
jmp
cli
push
lcall
loopne
rol
enter
gs
push
jb
sbb
fiadds
cmp
hlt
pop
jge
mov
pop
xor
pop
xchg
and
call
dec
mov
andb
flds
or
out
mov
lock
inc
aas
pop
cmc
fwait
add
sbb
mov
daa
inc
js
scas
subb
cmp
and
jl
jge
jg
cmp
fs
fisubrl
xchg
fisubl
pop
incb
cs
xor
jp
mov
jecxz
push
cmp
jo
push
mov
mov
jge
pop
pop
push
or
mov
lods
popa
or
lahf
xchg
dec
xchg
add
and
mov
bound
sarb
adc
dec
lahf
nop
pusha
mov
xor
adc
gs
scas
dec
add
leave
cmp
fs
insl
or
dec
outsl
pusha
or
cmp
mov
adc
pop
cmp
or
hlt
or
test
icebp
xlat
add
mov
rclb
mov
rolb
pop
mov
cmp
roll
inc
fwait
mov
push
jae
shlb
clc
lods
and
lahf
push
mov
push
cmpsb
jne
jecxz
add
lods
leave
insl
popf
lahf
gs
je
jmp
pop
imul
cmp
mov
cli
xchg
dec
lret
xchg
lds
or
or
dec
call
push
aam
sbb
add
pop
sub
push
sbb
std
sbb
je
lods
sub
push
clc
push
lods
decb
mov
cltd
inc
sub
push
dec
call
addr16
std
loopne
xchg
inc
iret
jo
push
jae
inc
les
jg
mov
inc
movsb
ret
in
outsl
icebp
jecxz
je
and
sarb
in
push
pop
mov
sub
mov
jge
pop
mov
test
ja
and
cmc
addr16
les
cld
int
jl
into
cwtl
or
fwait
inc
or
dec
lock
and
fists
ja
in
cmp
cmpsb
out
inc
push
and
and
aad
xchg
rcr
test
sub
xchg
jmp
dec
mov
xor
call
js
sbb
mov
out
xchg
hlt
mov
push
loope
test
movd
jno
and
das
pop
loop
ja
stos
icebp
mov
xchg
leave
loope
inc
stos
bound
jecxz
stc
loope
ret
imul
dec
lods
adc
mov
insl
inc
mov
sub
scas
mov
fsubs
dec
paddq
adc
dec
sti
cmp
cli
addr16
mov
jno
pop
jns
popl
stos
xchg
and
loop
sbb
insl
es
push
fldt
cmpsl
pop
pop
ds
xchg
popa
pop
addr16
das
aam
dec
loope
int
jl
shrl
mov
aas
sbb
in
cmp
jbe
cmp
xor
dec
enter
test
push
in
or
jne
adc
js
js
pop
pushf
and
or
inc
cwtl
cmpsb
or
jp
out
and
in
sub
mov
loope
scas
out
mov
and
mov
andb
and
sbb
mov
lahf
mov
push
push
dec
fs
or
cmp
adc
push
loope
cmp
aam
gs
lcall
push
adc
int3
pop
into
xchg
test
or
mov
pop
stos
jo
aad
xchg
jl
outsb
jb
insb
pop
clc
test
sub
or
mov
xchg
pop
mov
leave
movb
push
repz
and
and
lds
jo
movsb
aaa
dec
adc
cmp
sub
insb
repnz
mov
out
sub
loope
push
sub
mov
inc
lds
sbb
or
pop
lret
xor
test
push
jg
rcr
mov
lret
out
mov
or
bound
js
repz
negl
fwait
in
repnz
lcall
dec
xchg
adc
out
aad
xlat
mov
mov
call
sbb
xor
loopne
das
adc
test
rcll
mov
fnstsw
cltd
cltd
mov
decl
and
jg
mov
or
hlt
jo
jecxz
sub
mov
ja
push
fwait
and
dec
loopne
adc
daa
shlb
les
pop
mov
inc
jl
cmp
fcmovbe
mov
xor
pop
inc
mov
xor
sbb
or
scas
lock
lods
push
aaa
addl
inc
inc
in
jb
std
jns
nop
dec
cmpb
inc
or
rorl
rcll
or
or
pop
or
inc
mov
and
sub
xchg
iret
sub
mov
nop
add
adc
pop
jae,pt
mov
inc
mov
add
or
jo
sahf
pop
out
mov
idivb
sahf
int3
or
jno
out
xor
xor
jbe
icebp
sahf
cmc
adc
repz
dec
popa
dec
faddl
jmp
iret
jle
je
mov
xchg
pop
adc
mov
inc
inc
pop
test
sub
dec
imul
xor
adc
insl
rdtsc
sti
or
dec
xchg
ss
lds
inc
arpl
and
mov
push
and
in
sbb
outsl
ja
cli
ss
sub
xchg
imull
push
int
mov
dec
pusha
test
ret
pop
mov
sub
pushf
xchg
pmulhuw
scas
adc
test
shrl
rcrb
sbb
pusha
push
int3
stos
jns
push
mov
or
dec
cld
std
ja
ret
sahf
imul
inc
fcoms
push
and
mov
imul
pop
fidivrs
xchg
mov
ret
in
xchg
dec
movsb
lea
shlb
stos
jnp
cmp
jge
lcall
pushf
cmc
dec
sub
add
mov
stos
and
jno
scas
hlt
js
les
lock
xchg
add
xor
das
xchg
daa
lods
fnstenv
je
idivb
cmpsl
adc
ljmp
push
js
jb
pushf
xor
movsb
imul
mov
dec
aam
rorb
stos
add
fistpll
lock
sub
jns
cmpsb
ja
jle
in
mov
xorb
das
sbb
enter
icebp
test
js
adc
cmp
dec
scas
test
fidivs
stos
dec
out
or
fisttpll
cwtl
ss
scas
sbb
sub
fs
push
jbe
xor
inc
fdivs
or
adc
and
inc
mov
inc
and
xchg
movsl
jge
outsl
sbb
push
add
popf
inc
push
push
sbb
push
hlt
add
lret
cld
push
and
pop
sbb
or
jbe
fists
inc
imul
mov
sbb
fbstp
jno
mov
push
stos
fs
or
fwait
pop
iret
cld
cld
in
xchg
mov
stc
jmp
shlb
xchg
and
bound
lret
popa
pop
dec
shlb
imul
std
mov
pushl
xor
pop
cltd
loopne
cmp
mov
enter
fsubs
adc
test
and
sbb
jge
ss
push
into
sbb
std
call
lcall
push
adc
sbb
pop
lds
xchg
jg
fcmovu
ret
dec
ret
ds
and
in
push
or
pop
mov
rclb
movsb
ds
rorb
dec
lea
mov
cmpsb
aaa
test
mov
ret
fidivs
fisttpl
roll
in
scas
in
push
cwtl
lock
cmp
imul
mov
pop
or
leave
pop
cs
adc
inc
repnz
mov
aaa
imul
icebp
push
jnp
push
into
es
repnz
fcomi
push
or
sarb
repnz
xlat
repnz
addr16
lret
addr16
outsl
xor
call
lods
std
cwtl
xchg
imul
inc
xor
xchg
dec
imul
jg
xor
icebp
out
push
mov
lods
sub
or
addr16
mov
pop
scas
mov
movl
mull
xchg
stos
jo
sahf
inc
add
xchg
dec
xor
sarl
or
stos
in
xor
adc
xor
imul
ret
dec
or
shrb
add
fwait
xlat
outsl
pop
nop
xchg
mov
imul
add
mov
jle
push
pop
pop
pop
aaa
pop
xchg
dec
das
mov
cmpsb
mov
xor
fs
or
inc
or
xchg
add
aad
addr16
xchg
lret
jne
mov
out
sub
cli
inc
mov
out
mov
sub
es
inc
jp
add
inc
push
in
pop
xlat
jo
stc
mov
mov
ror
inc
mull
je
hlt
fdiv
outsb
xorb
into
test
sbbl
mov
sbb
cmp
lahf
aas
lea
sub
cltd
ljmp
cltd
test
adc
add
inc
mov
in
call
or
cmc
into
cmpsb
daa
divl
mov
cmc
jmp
sti
aad
sub
sbb
gs
dec
inc
pop
mov
movsl
mov
cmc
jmp
sti
aad
sub
sbb
gs
dec
inc
pop
mov
and
fwait
jne
in
aad
inc
or
jnp
dec
inc
pop
mov
movsl
mov
cmc
jmp
sti
aad
sub
insb
add
mov
movsb
mov
jp
push
push
mov
sbb
sub
xchg
sub
sbb
or
jnp
imul
pop
stos
dec
fwait
jp
push
sbb
or
cmp
push
cmp
sub
sbb
or
jnp
push
pop
mov
stos
dec
fwait
jp
push
sbb
or
cmp
sub
fimull
jmp
jnp
sbb
sbb
and
iret
sub
add
cmp
repz
mov
neg
loopne
mov
or
push
or
es
sti
sbb
daa
xor
and
out
hlt
mov
imul
sbb
inc
pop
roll
ret
adc
mov
leave
xchg
jg
mov
inc
or
loopne
fdivrs
dec
adc
push
mov
adcb
lret
and
hlt
or
lcall
call
sub
add
lret
andl
inc
or
and
sub
leave
jmp
movsb
mov
push
mov
sbb
jg
fldt
lret
outsb
cltd
jmp
popa
lcall
mov
stos
dec
fwait
jp
push
sbb
or
cmp
sub
fisubrl
lret
or
jnp
imul
pop
enter
int
sahf
jg
arpl
dec
lret
push
fldcw
out
ds
cmp
int
fildll
clc
pop
lret
jbe
inc
sahf
push
mov
xchg
dec
mov
test
push
mov
in
and
fcompl
stos
add
or
movsbl
or
cmp
sub
fisubrl
lret
or
jnp
imul
pop
stos
dec
fwait
jp
push
sbb
or
cmp
sub
fisubrl
lret
or
jnp
imul
pop
lret
xchg
hlt
test
outsb
xchg
cmp
jne
daa
cmp
mov
ss
sbb
or
xchg
icebp
or
test
and
ljmp
outsb
adc
and
out
outsl
test
inc
mov
cli
ret
mov
cmpsb
push
adc
loopne
stc
jne
ds
mov
push
pop
int3
cmp
mov
data16
or
out
rcrb
pop
scas
push
inc
mov
pop
xchg
push
xor
mov
xchg
mov
xor
outsb
idivb
adc
popa
cmp
xchg
call
js
cld
add
add
mov
or
jbe
cld
mov
inc
popf
add
scas
cmp
les
cmp
jae
and
push
dec
pusha
pop
pop
dec
jnp
lods
out
stos
push
sahf
push
int
push
push
xor
push
cmpsl
stos
and
sti
rorl
outsb
add
jb
pop
rcrb
sub
popf
sbb
addb
rsm
mov
js
cmc
int
push
cs
idiv
push
pusha
pushf
clc
in
add
add
add
mov
cli
stos
lahf
lds
pop
cmp
decl
scas
xor
or
jnp
pop
repz
push
mov
jnp
mov
xor
xlat
push
in
and
push
ret
popf
mov
lret
test
pushf
lock
rclb
stos
out
out
pusha
add
scas
roll
sarl
add
mov
pop
mov
pushf
push
jbe
adc
les
xor
imul
pop
mov
out
xlat
fdivs
js
insl
adc
adc
int3
push
lea
sub
push
in
jbe
mov
push
and
dec
cmp
es
sbb
cmp
shl
jnp
jns
mov
pop
sub
adc
push
outsb
outsl
push
idiv
mov
cmpsl
mov
xchg
cli
and
cmc
les
mov
test
lret
mulps
mov
dec
inc
lds
imul
push
push
fsts
jmp
sbb
dec
out
out
repz
daa
cmp
leave
jo
cmp
fdivrl
cmpsl
pusha
mov
jb
xlat
cs
sbb
enter
sbb
mov
xorl
in
push
inc
inc
xor
std
fmulp
std
sub
and
dec
cmp
shll
decb
xchg
xchg
cmpsl
sbb
jbe
cmp
lret
das
xor
xor
fnstcw
call
push
lret
push
lret
push
mov
pop
push
xchg
mov
fcoml
xorl
mov
push
sbb
in
xchg
push
pop
test
xchg
dec
xchg
push
mov
lds
mov
xchg
mov
insb
ret
jns
loope
ss
ja
cmp
or
mov
jle
notl
adc
pop
lcall
in
cmp
lea
in
sbb
mov
leave
rcrl
xorl
movl
push
mov
cmp
ds
add
mov
add
js
mov
pop
pop
mov
xor
fsubrl
or
xchg
push
xor
fstps
rcrb
mov
add
mov
xchg
jecxz
orb
jo
repz
inc
daa
and
mov
sub
shlb
mov
loopne
pop
aam
js
hlt
sbb
push
pop
ss
gs
push
inc
out
or
test
xor
std
push
jl
fsts
add
mov
mov
xor
mov
clc
pop
adc
adc
mov
sub
xor
mov
mov
mov
or
inc
or
jge
xorb
scas
jg
ret
adc
fidivrs
enter
or
paddsw
sub
mov
sbbl
pop
int
inc
outsl
lret
imul
sahf
stos
and
outsl
cmc
sub
xor
pop
clc
pop
mov
mov
mov
andl
pop
pop
or
push
push
jmp
jge
inc
mov
ljmp
stos
mov
out
push
pop
inc
nop
and
jecxz
inc
addr16
pop
push
rcll
add
dec
sbb
inc
dec
mov
xchg
aam
cwtl
movsl
dec
mov
mov
inc
subb
mov
pop
mov
jbe
and
sbb
dec
mov
enter
xchg
cs
push
pushf
lahf
fmuls
xchg
ja
test
jl
fld
mov
lds
sbb
add
loopne
mov
cwtl
xchg
sub
jae
sub
imul
sbb
pusha
and
adc
mov
lcall
hlt
mov
xchg
outsl
push
movsb
cmp
cmc
repnz
dec
push
das
mov
int
mov
push
push
add
and
and
mov
push
negb
sbb
inc
or
outsb
cmp
movsl
repnz
nop
mov
fdivr
fwait
mov
jmp
mov
inc
insb
push
inc
push
xchg
adc
repnz
inc
test
pop
jns
aas
and
xchg
and
push
sub
js
stc
and
push
mov
pop
sbb
int
arpl
jno
mov
jmp
cmp
loopne
daa
movsl
aad
pushf
push
push
inc
mov
mov
sbbl
pop
shrb
scas
sub
rcl
pop
push
cmp
mov
sub
repz
adcb
mov
cwtl
sbb
dec
ret
insb
jbe
sub
mov
pop
cmp
stc
sarl
dec
cmp
ds
inc
cld
movsb
mov
sub
mov
cmp
mov
pop
dec
sbb
mov
jae
into
mov
das
cmp
mov
cmpsb
filds
sub
adc
mov
rcr
shll
ret
popa
arpl
sahf
and
in
mull
cmc
dec
loope
sahf
adcb
pushf
adc
adc
mov
inc
gs
xor
jbe
aam
aam
cwtl
add
xbegin
les
push
or
xchg
ja
push
pop
fdivrl
test
jb
jne
bound
mov
les
mov
add
push
stc
scas
inc
dec
rcrb
mov
mov
push
and
pusha
repnz
push
loope
sti
call
pop
ficompl
inc
iret
cmc
add
xchg
dec
mov
sbb
or
dec
imul
pop
mov
test
arpl
mov
xchg
fwait
insl
sbb
lods
es
xchg
mov
dec
icebp
dec
adc
insb
inc
xchg
cli
sbb
aaa
ja
lret
sahf
sub
add
sbb
and
repz
fistpl
sbb
jl
aas
ljmp
mov
js
or
and
or
mov
inc
mov
loopne
xchg
xchg
push
lcall
jge
jb
mov
adc
pop
imul
fildl
push
lods
sub
mov
data16
push
insl
adc
mov
jne
xor
dec
mov
insb
in
or
pop
xchg
lahf
shrl
pop
push
dec
out
xor
popl
sbb
pop
addr16
sbb
cltd
mov
test
push
into
push
dec
shr
lods
call
and
add
inc
mov
or
cmpsb
or
sub
idiv
pop
in
mov
cmp
push
out
push
pushf
fstl
inc
push
out
mov
xor
pop
jnp
inc
fsubr
jbe
cs
aad
xlat
adc
push
dec
mov
rolb
ret
ret
ficoml
sbbb
mov
mov
dec
daa
xchg
inc
dec
dec
out
ret
push
jecxz
inc
xchg
mov
fwait
in
add
dec
sbbb
or
imul
adc
xchg
push
das
int
sti
mov
cs
inc
add
dec
mov
repnz
scas
lcall
jle
xchg
test
push
mov
rclb
rolb
mov
ljmp
lock
fwait
push
mov
dec
lcallw
adc
and
jne
les
scas
mov
or
enter
mov
fnstsw
in
aam
fistl
stos
mov
mov
pop
cmp
dec
into
into
mov
and
inc
dec
mov
stos
std
cmpsl
push
push
sbb
aam
int3
mov
movsb
push
stos
xchg
cwtl
mov
popa
std
insb
daa
movsb
sarb
sub
cmc
jge
push
shl
mov
pop
or
repnz
push
out
pushf
jmp
iret
adc
sub
jge
push
pop
clc
stos
lret
mov
out
sub
cmp
or
or
push
pusha
addr16
les
sub
cmp
iret
loope
mov
out
sbb
in
and
xor
fwait
sbb
xor
sahf
xchg
mov
lock
clc
or
and
push
lods
rcrb
jle
insl
enter
sbb
xorl
pusha
lods
lahf
mov
mov
mov
sub
test
add
popf
ljmp
test
lods
push
in
loopne
push
sub
fisubrs
cmpsl
jo
cmp
hlt
movsl
jnp
push
out
lret
leave
enter
mov
mov
pop
shr
sbb
fsubrs
mov
and
sbb
add
sub
fs
sub
in
mov
icebp
scas
test
mov
stc
decl
call
mov
out
xor
test
inc
jnp
jg
aad
rorl
xor
dec
push
mov
jb
or
stos
arpl
out
test
mov
es
lods
mov
inc
ficomps
jne
scas
insb
fildl
mov
aaa
cmp
sbb
rolb
sub
xchg
fdivrl
incb
mov
xorl
lret
imul
fisubrs
mov
aad
mov
loop
imul
dec
pop
push
mov
pop
inc
dec
adc
cwtl
mov
test
push
mov
ffree
lds
test
push
enter
stos
mov
addl
add
fwait
imulb
jl
pop
test
xchg
add
xor
scas
dec
sub
xchg
add
pop
xchg
xchg
mov
jbe
push
xchg
pop
repz
mov
adc
imul
jge
lock
mov
sarl
js
pushf
fistpl
adcb
and
mov
stc
sub
insl
repnz
and
iret
add
je
js
xor
pop
inc
lea
add
xchg
in
orb
scas
jecxz
xor
out
test
idivl
mov
ss
leave
xor
loop
xchg
xchg
xor
add
imulb
pop
lods
xchg
dec
xchg
dec
scas
scas
mov
inc
adc
jl
xchg
bound
shrb
pusha
pop
decb
sti
imul
push
ja
mov
or
imul
faddl
adc
imul
cli
cli
sub
push
stos
dec
jb
popf
dec
jp
rorl
dec
mov
rorl
fmuls
dec
in
call
dec
cmp
fs
pop
xchg
jge,pn
dec
imul
popa
push
sbb
mov
xor
jne
icebp
xor
cs
aam
pop
es
push
adc
add
cld
mov
cmp
mov
push
fdivrl
ja
sub
mov
pushf
rol
repnz
mov
jae
mov
in
addr16
aas
dec
leave
iret
dec
adc
cld
test
and
mov
xor
and
lret
out
push
rorb
cmpsl
rorl
and
push
xchg
jnp
or
jae
addr16
adc
sub
dec
push
jecxz
imulb
dec
aad
sub
push
mov
cmpsl
push
aaa
inc
and
push
sbb
aam
or
rolb
push
mov
push
sbb
or
sbb
bound
xchg
repnz
scas
cs
arpl
adc
aaa
add
mov
sbb
idivl
cmp
jmp
and
pop
jp
xchg
addr16
int3
mov
or
and
fs
fsubr
aad
xor
lea
mov
sbb
sub
xchg
mov
mov
inc
push
lods
xchg
jns
xor
sbb
and
call
mov
fwait
scas
rorl
das
cmp
push
in
inc
pop
xchg
filds
cmp
mov
inc
shl
aaa
js
mov
sub
cmp
cli
inc
add
fwait
jae
mov
xor
test
imul
push
test
in
add
mov
adc
xchg
adc
push
pop
inc
fsubl
insb
mov
push
jecxz
outsb
xor
push
pop
hlt
popf
in
test
and
movsl
push
in
pop
popw
jne
xor
movsb
adc
cld
mov
out
and
shl
xor
inc
jl
test
jge
jnp
mov
jno
loop
adc
call
mov
je
mov
pop
sbb
mov
and
xchg
xchg
add
dec
xchg
xchg
jle
clc
mov
xor
adc
call
and
sbbb
rcl
push
fs
add
jno
call
xor
out
out
stc
je
lock
cli
dec
lcall
xchg
cmpsb
ficoms
push
movsb
aam
xorb
movsl
aam
jmp
adc
and
subb
pop
cmpsl
js
push
lock
xchg
lds
jp
mov
cmp
fsubrl
mov
negl
jns
jle
loopne
and
mov
clc
imulb
xchg
insl
dec
ljmp
cmpsb
dec
loopne
pop
push
pushf
fisttpl
clc
out
dec
jge
pop
dec
ljmp
adc
movsb
or
stc
test
pop
leave
repnz
and
pop
inc
mov
cwtl
cwtl
add
stos
sub
fwait
xchg
dec
sahf
xchg
mov
lret
inc
fnstcw
lahf
jnp
push
ficoms
mov
add
ficoml
cmp
mov
stc
test
inc
mov
xchg
mov
cld
adc
cmc
push
inc
xchg
or
notb
jp
mov
pop
and
out
jno
mov
arpl
mov
loope
cltd
rolb
mov
loopne
sbb
pop
rorl
mov
sbbl
cs
mulb
xor
dec
leave
js
mov
dec
popa
imul
lods
loop
and
cs
outsl
or
adc
sahf
pop
leave
fisttps
out
sub
sahf
sbb
ds
or
sub
xor
add
inc
lock
enter
loope
push
outsl
mov
orb
mov
movsb
adc
and
and
mov
and
adc
js
loop
and
jg
test
inc
adc
or
jp
into
fs
std
pop
mov
nop
mov
mov
fisttpll
jecxz
lods
sbb
in
pop
cmpsl
jl
pop
outsl
sahf
adc
stos
icebp
imul
and
xchg
or
ljmp
icebp
aad
scas
fwait
cmp
out
es
adcl
cli
xor
push
pop
fdivr
lret
jmp
loop
jl
jno
sub
sub
repnz
dec
shlb
xchg
fistl
loopne
loope
or
aas
lahf
std
pop
ret
mov
cmp
xchg
dec
push
subl
cli
ficomps
dec
or
bound
push
ds
add
cmpsb
mov
cmp
xchg
add
out
daa
daa
cmp
add
adc
mov
push
push
add
fcompl
je
jne
mov
pop
and
xor
pop
fdivrs
fsubp
ljmp
push
popa
popf
lds
xor
mov
jp
dec
loop
ret
leave
mov
xchg
int
xor
rclb
cmc
outsl
jb
cmp
mov
dec
mov
pushf
push
xchg
dec
daa
add
mov
adc
mov
mov
fwait
jg
push
lock
dec
adc
cmpsb
adc
xchg
or
add
outsl
daa
jecxz
jno
movsb
jl
hlt
push
mov
mov
rol
lods
ljmp
out
mov
insb
sub
leave
inc
sub
out
rclb
clc
data16
push
and
int3
pop
lds
dec
dec
mov
lret
jge
ret
fsubs
jnp
and
mov
loopne
fcompl
sub
dec
jno
and
aaa
mov
jle
dec
pop
jecxz
add
ret
es
adc
js
js
lds
scas
pop
or
mov
xor
mov
jp
sbbb
pop
mov
es
lods
and
pop
enter
adc
jmp
inc
add
mov
add
std
dec
aaa
pop
add
cmpb
loopne
mov
mov
dec
jbe
andb
mov
mov
inc
ds
add
adc
xchg
lods
pop
pop
lret
sub
lods
mov
loopne
dec
add
gs
ret
sub
rclb
ja
mov
push
ds
pop
lods
add
rcl
xchg
push
jns
hlt
xor
jne
pop
dec
mov
jmp
inc
inc
cmpsb
lcall
stc
aaa
xchg
sbbb
mov
mov
mov
push
fstl
aas
repnz
pop
jle
mov
cmc
scas
rol
jg
xchg
or
data16
shr
and
out
mov
sub
and
lods
inc
xchg
into
sbb
lcall
or
fcompp
fidivs
shlb
mov
mov
aam
in
and
cmp
cmpsb
jbe
sbb
sahf
mov
idiv
pusha
fcomps
inc
jae
xchg
cmp
sbb
mov
jge
cmp
xchg
xchg
outsl
sbb
lahf
xchg
mov
xor
pop
jle
int3
jbe
xchg
jmp
add
pop
push
jle
pop
cmp
bound
pop
pop
lret
inc
cmp
sub
cltd
inc
outsl
insl
rorl
outsl
mov
rcr
add
imul
in
iret
push
sbb
add
lds
sbb
mov
imul
sahf
push
xchg
cwtl
adc
xor
dec
lods
jg
xchg
jo
sbb
and
aas
lea
mov
pusha
mov
jp
inc
rolb
and
jns
mov
xor
and
mov
stc
xchg
dec
loope
or
mov
call
cmpsl
sahf
jp
or
mov
hlt
jb
clc
push
movsl
out
mov
fcmovne
push
push
cmp
jnp
in
test
int3
aam
in
fwait
pop
shrb
cmpsl
mov
mov
inc
pop
push
adc
mov
lea
mov
sub
inc
inc
in
andl
xchg
fdivrs
cmp
aaa
sbb
cmp
rolb
adc
inc
iret
leave
imul
sbb
cmp
xchg
pop
dec
mov
repnz
mov
shlb
leave
subl
mov
jl
dec
nop
mov
push
cltd
inc
lret
jmp
decl
and
scas
test
mov
aad
fnstcw
sub
xor
xor
jo
pop
mov
push
loop
adc
inc
mov
and
lret
fs
jae
xor
lret
lods
xchg
cmp
or
mov
fidivrs
adc
std
pop
mov
mov
pop
cli
jb
es
mov
and
pop
xorl
repz
sbb
movsl
add
into
aad
loop
arpl
sub
test
inc
cli
adc
rcrb
mov
aaa
and
cmpb
stc
subl
test
ret
loope
sub
cmpsb
mov
xchg
cltd
shrl
aam
push
cli
jae
call
loope
aad
stos
cld
das
std
inc
xchg
ja
cld
sarl
jo
shrb
sbb
call
pop
xchg
and
pushf
lea
mov
sub
movsb
xor
mov
dec
sub
or
cmp
jo
inc
out
jle
outsb
icebp
cmpsl
add
cltd
xor
xchg
aam
and
ret
inc
mov
xlat
or
jmp
inc
dec
inc
sub
lock
sbb
xor
pop
mov
divl
mov
add
nop
and
jecxz
sbb
mov
mov
outsb
add
aad
rcl
add
out
stos
xchg
adc
adc
mov
sub
in
incb
test
imul
call
mov
and
das
cmc
ficoms
andl
xor
adc
pop
mov
shr
out
add
aam
cmpsb
aas
pop
popf
addr16
mov
pop
push
pop
cmp
fnstcw
mov
push
pusha
iret
shlb
jno
stos
push
inc
or
or
sbb
sbb
inc
shlb
popf
jns
aad
cmc
dec
jge
jle
movsb
jp
push
sbb
or
cmp
sub
fisubrl
lret
or
jnp
imul
pop
stos
dec
fwait
jp
push
sbb
or
cmp
sub
fisubrl
lret
or
jnp
imul
pop
stos
dec
fwait
jp
push
sbb
or
cmp
sub
fisubrl
lret
or
jnp
imul
pop
stos
dec
fwait
jp
push
sbb
or
dec
sub
fcmovbe
pusha
mov
or
mov
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
and
lea
adc
lods
mov
cmpsb
in
xor
add
inc
jge
insl
mov
mov
lods
repnz
inc
sar
ret
sbb
add
push
cmp
mov
scas
repnz
icebp
rclb
ret
ret
jae
addr16
adc
or
or
jecxz
enter
ljmp
mov
and
jle
test
cmp
xor
push
das
pushf
out
ret
adc
fsubr
xor
mov
inc
cmp
pop
dec
push
cmp
pop
jl
loopne
pushf
mov
xor
push
data16
std
mov
sarl
mov
adc
xor
ret
loop
pop
adc
ljmp
xchg
dec
ds
mov
shr
sub
stc
ljmp
dec
push
sbb
and
or
mov
xor
lods
pop
xchg
adc
add
int
hlt
gs
push
pop
bound
in
popf
mov
cmpsl
repnz
int
daa
ret
fwait
and
adc
bound
iret
out
dec
xorl
cmpsl
mov
nop
dec
jge
inc
push
xor
cmp
cmp
or
fsub
int3
out
lret
mov
rclb
dec
pop
push
addr16
cmp
pop
push
lret
mov
icebp
in
mov
int
std
ret
sbb
add
push
jge
insl
mov
mov
lods
repnz
int
std
ret
sbb
add
push
jge
insl
mov
cmpsl
pop
pop
push
rolb
imul
popa
xor
jmp
adc
mov
scas
out
sahf
divb
or
cmp
out
mov
into
jl
movsl
mov
inc
arpl
out
push
sbb
lret
dec
jo
loop
cltd
adc
sets
add
rcrb
mov
outsb
and
loope
std
out
sar
pop
subb
sti
push
loop
mov
pop
xlat
inc
out
or
mov
pop
dec
sti
jne
sub
jo
int3
sub
lods
in
cld
pop
dec
out
pop
rcll
inc
ja
mov
imul
cld
and
ret
nop
pop
icebp
orb
mov
addb
mov
ret
adc
fnsave
popl
dec
jne
cmovnp
cltd
mov
pop
jge
push
fisttps
jg
xor
or
ljmp
xchg
or
nop
xor
cwtl
bound
mov
pop
push
cmp
mov
popa
das
fnstenv
inc
jns
push
mov
jae
sbb
psllq
test
mov
pop
jg
lods
ds
adc
mov
mov
fstpl
mov
sahf
jmp
int3
push
js
cli
adc
mov
stc
stos
lcall
mov
cltd
fst
jmp
pop
sbb
mov
jae
pop
test
adc
jbe,pt
adc
xchg
mov
and
mov
fstl
pop
mov
shlb
stos
insb
inc
data16
mov
loopne
fistps
nop
inc
mov
das
sub
int3
xchg
sub
enter
repz
and
js
inc
push
push
inc
lret
mov
add
arpl
add
fcoms
add
ss
xchg
mov
dec
xchg
mov
sbb
pushf
inc
add
lods
xchg
mov
aam
aas
jno
call
std
ret
gs
push
mov
insl
add
adcl
push
push
push
push
inc
inc
sub
adc
shl
mov
test
mov
fists
mov
jne
and
sahf
fucomip
mov
xor
pop
xchg
ret
dec
and
mov
sahf
lds
cmp
xchg
std
push
in
cmp
pop
sbb
int3
fdivrl
inc
sub
lret
and
push
aad
xor
jae
jns
adcl
sbb
pusha
or
mov
stc
adc
ficoml
jbe
inc
icebp
test
cltd
mov
lods
jmp
xchg
iret
std
imul
xorl
sub
or
mov
aam
cld
in
mov
ljmp
xor
ficoms
jg
nop
sub
cmp
dec
ds
cmp
sub
mov
lds
and
xchg
jecxz
jp
mov
mov
push
mov
dec
mov
sbb
or
sub
shll
dec
roll
xchg
scas
mov
adc
cld
es
outsb
mov
mov
jmp
enter
jmp
bound
rorb
ss
sbb
cmpsl
es
xor
pop
leave
add
sub
pop
pop
clc
das
adcl
jecxz
jb
stc
int3
xchg
les
das
out
lret
rcr
mov
mov
imul
cld
divl
leave
aas
inc
in
lahf
lahf
out
fdiv
dec
fcomps
pusha
cmp
inc
add
popf
jmp
iret
mov
outsb
adc
adc
jae
test
mov
xchg
ss
sub
pop
loop
jmp
in
lcall
lods
jns
and
and
xchg
sbb
insl
sbb
cwtl
sti
movsl
adc
dec
push
mov
xor
insl
mov
push
ja
bound
inc
icebp
push
mov
testb
jnp
mov
faddl
sahf
loope
out
pop
sub
pop
mov
dec
mov
xchg
xchg
out
xchg
cld
and
mov
stos
mov
cmpb
xorl
inc
addr16
repnz
dec
aam
call
mov
cs
int
pop
xor
ja
sar
cmpsb
and
adc
inc
mov
hlt
xchg
push
lahf
add
add
mov
leave
nop
loopne
fisttpl
gs
scas
dec
adc
xlat
scas
and
mov
sbb
inc
xor
popa
int
or
push
lret
add
pop
inc
int
into
mov
ficoml
xchg
and
add
jns
in
out
ds
mov
pop
mov
lods
insl
xor
ja
mov
test
leave
lret
test
sub
add
repz
and
or
push
or
dec
mov
into
adc
bound
xchg
xchg
mov
cli
inc
cmp
push
ljmp
gs
cmp
or
faddl
inc
stos
rep
adc
mov
pushf
add
sarb
lret
ficomps
bound
mov
xchg
add
lock
pop
jmp
fdivrs
xlat
push
mov
aaa
cwtl
jno
inc
pop
xor
es
enter
mov
adc
push
mov
lcall
int3
lock
mov
js
cld
jae
sub
inc
cmp
inc
dec
mov
mov
lret
call
fsubs
mov
fstl
adc
xor
aas
mov
pop
or
scas
adc
inc
jmp
or
iret
ss
imull
pop
cmp
jmp
outsb
sub
sarl
ret
push
pusha
sub
cmc
loopne
leave
inc
stos
lods
call
push
shrl
enter
test
push
nop
fisttps
sti
adc
cmp
mov
pusha
aad
fldt
lods
jecxz
lcall
or
je
sub
dec
js
pushf
fldt
and
js
sahf
jnp
pop
jbe
fstl
shl
mov
in
dec
cli
movsb
out
adc
aam
xor
or
or
mov
cltd
popa
push
shlb
push
cwtl
jmp
sub
xchg
mov
ljmp
cmp
pop
mov
xchg
andl
pop
in
and
fcmovu
jge
cmp
mov
adc
xchg
ja
pushf
in
pop
xor
mov
or
das
xchg
xor
push
rorl
fwait
enter
mov
jns
fbstp
rolb
mov
sti
hlt
mov
cltd
sbb
rcrl
and
imull
pop
and
arpl
movsb
outsb
subl
inc
icebp
mov
mov
pop
and
mov
arpl
popf
adc
sub
out
popf
scas
popa
sbb
cmpsl
shrb
mov
cmpl
mov
call
inc
inc
fistpll
add
jb
adc
sub
fwait
xor
scas
xchg
roll
adc
push
dec
cmpsb
pushf
andl
arpl
cmp
test
mov
push
aaa
xchg
loopne
sbb
mov
movsb
test
and
sbb
dec
mov
mov
cld
stos
mov
add
aas
aas
shr
push
mov
add
inc
mov
andb
enter
sbb
xchg
sbb
in
and
cmp
mov
sub
cli
fstps
fisubl
jns
out
sbb
xchg
jmp
pop
push
loop
xlat
cmp
call
ror
jge
adc
rorb
add
in
cli
cltd
mov
add
or
test
imul
inc
inc
hlt
cs
lea
lea
mov
push
or
xor
sbb
inc
pop
leave
sub
inc
dec
jnp
sub
and
dec
pop
push
mov
adcb
std
call
sub
icebp
lahf
xchg
adc
lcall
lret
jbe
testl
mov
imul
loopne
jmp
mov
int3
lret
cli
xor
in
add
movsl
jns
les
push
fwait
idivl
add
adc
dec
enter
mov
nop
add
xchg
inc
shll
dec
rcrl
sbb
push
fucomp
lret
movsb
mov
inc
outsb
and
cmp
cmpsb
mov
jl
mov
outsl
rcrl
dec
push
test
sub
pop
xor
mov
lock
cmp
xor
mov
out
pop
mov
js
pop
jns
fucom
fwait
add
xor
xor
or
adc
popf
hlt
dec
adc
aad
insb
jmp
xchg
cmc
or
ljmp
scas
jo
mov
xor
aad
addr16
xchg
inc
mov
out
imul
mov
rcr
test
mov
add
dec
leave
ret
out
mov
cli
cld
mov
inc
xlat
mov
scas
fstps
jmp
cmpsb
in
pop
cli
imul
sub
pop
xchg
pop
adc
outsb
int
lret
out
jle
in
aam
pop
icebp
mov
adc
gs
out
in
lea
adc
pop
push
and
xchg
cmp
data16
bound
jmp
or
mov
sub
sub
cmp
pop
fcmovnb
out
repz
fldcw
inc
cmpsl
xchg
jecxz
subb
xor
mov
cmpsl
jb
mov
mov
aam
adc
ror
test
mov
fs
fsts
out
bound
cmp
lcall
xor
div
insl
lds
loope
cmp
fs
cmp
xchg
clc
cld
in
dec
xchg
cmc
dec
mov
sbbl
fsubs
div
in
fisubs
push
dec
in
insb
fwait
adc
mov
xchg
xchg
hlt
in
adc
dec
pop
lea
mov
mov
pop
fisttps
pop
dec
cltd
outsl
mov
cmp
push
cmp
sbb
push
xchg
and
movl
addl
inc
push
stc
js
sub
xor
aam
add
scas
movsl
xorl
in
or
adc
je
mov
cli
mov
mov
mov
sahf
pop
hlt
repz
jnp
push
outsl
inc
mov
mov
xchg
sbb
and
negl
xchg
and
inc
cmpsl
jnp
sbbl
pop
fnsave
mov
fcmove
std
push
imul
adc
xorl
inc
push
lret
jl
bound
lods
icebp
mov
mov
jle
nop
jnp
adc
mov
popf
cli
stos
hlt
out
xchg
jns
mov
lock
dec
mov
add
push
jmp
or
dec
xor
jno
or
dec
cmp
sub
icebp
fbstp
push
scas
mov
ret
cmp
movsb
loop
pop
or
andb
add
lret
push
mov
shlb
dec
fninit
lods
in
loop
push
mov
cmp
push
inc
jp
jbe
sbb
push
and
insb
ja
jecxz
popf
sub
sbb
mov
jmp
mov
xor
pop
dec
aaa
sub
mov
test
jno
xchg
mov
cltd
pop
hlt
sbb
fdivl
lret
lret
inc
aaa
push
movsb
jne
add
int3
movsb
dec
ds
pop
mov
ror
mov
jl
ror
adc
adc
pop
aas
std
scas
or
xor
pandn
push
cltd
cltd
xchg
pmaxsw
sbb
push
arpl
pop
cmpsb
shlb
std
mov
addb
lock
mov
sub
in
movsb
nop
mov
mov
stc
addr16
jle
addr16
std
add
out
pop
sbbb
sub
fdivrl
inc
popa
sahf
push
sub
and
add
sbb
inc
les
adc
cld
xchg
adc
sbb
xchg
or
push
or
jne
movsl
pop
enter
rcr
aad
mov
cwtl
mov
movsb
lods
sub
in
aam
rolb
out
mov
mov
sbb
imul
movsb
pop
cmp
sti
cmp
rorl
push
movsb
xchg
pop
cwtl
xchg
out
mov
add
bound
adc
lahf
idivb
aad
xchg
leave
sub
dec
xor
fcmovnu
pop
pushf
jns
cmc
cs
or
pop
push
in
cld
movsl
idivl
insl
and
and
adc
mov
in
out
lods
mov
jg
jo
pushf
testl
pop
jne
ja
xor
outsb
inc
insb
enter
fchs
mov
test
call
cmpsb
sbb
fistps
lcall
rol
lret
xor
pop
mov
ja
and
lahf
or
add
icebp
sub
push
ljmp
sub
adc
sub
mov
adc
push
mov
es
adc
es
sub
adc
pop
mov
mov
add
mov
test
popf
iret
lods
push
or
xor
push
xchg
sub
mov
push
push
push
and
sbb
adc
test
clc
and
aas
dec
cmp
lock
cmp
idivl
xchg
test
pop
out
fnstsw
test
or
scas
sbb
ljmp
mov
cmc
push
jmp
pushf
test
push
bound
xor
in
push
push
push
cltd
push
push
mov
add
fldenv
adc
push
sub
pop
mov
push
lret
inc
sti
pop
sub
popa
mov
addr16
clc
sarl
mov
into
cmp
test
cli
repz
jne
dec
testb
sub
sub
mov
mov
sbb
jl
or
mov
mov
outsb
mov
adc
mov
popf
cmp
add
mov
aaa
push
or
ljmp
jnp
andb
cmpsl
testl
in
out
imull
push
mov
aad
cmp
loopne
shlb
add
sub
outsb
or
je
mov
dec
in
and
xchg
outsl
xor
jbe
es
sbb
and
push
sub
test
jmp
scas
sub
inc
jg
xlat
cs
mov
push
mov
test
dec
enter
fcomps
jnp
add
sbb
jno
inc
inc
lods
punpcklwd
dec
mov
sbb
and
pusha
mov
add
mov
lcall
mov
ljmp
sahf
mov
stc
inc
gs
cmp
lods
sti
sbb
push
mov
loope
lahf
add
outsl
sub
fcompl
movsb
pop
lds
xchg
sbb
jne
jl
cmpsl
adc
iret
cmp
stos
stc
sub
notl
pop
imul
call
lods
subb
aaa
dec
push
orb
sbb
push
lds
fs
sbb
movsl
or
mov
sarl
stos
fimuls
sbb
test
sbb
test
int3
int
imul
push
popf
shll
test
mov
fistps
sbb
aam
adc
or
adc
lret
cld
outsl
fndisi(8087
pop
ss
sub
unpcklps
sub
xor
cmp
fwait
sbb
adc
push
clc
cmpsl
push
xor
push
ds
shrb
jecxz
sbbb
andb
mov
cmp
out
sbb
pop
xchg
cld
cmpsb
fs
cwtl
xchg
cld
inc
fimull
mov
inc
cmp
loop
cmc
push
out
outsl
mov
fsubl
or
fstpt
mov
ret
jb
test
adc
stos
push
jae
and
pop
sbbl
sub
adc
ffree
lock
das
loopne
leave
cmp
cmp
iret
mov
cmp
scas
sub
js
inc
pop
outsl
aad
fidivl
and
sub
xchg
mov
sbb
ret
and
lods
xchg
ret
push
out
fidivrs
jge
pop
adc
inc
push
lods
ret
mov
clc
xor
int
repnz
fldt
pop
cmp
aaa
xchg
jle
adcb
and
sbbl
daa
rcrb
inc
shl
fstpl
and
mov
movsl
push
pop
out
nop
adc
icebp
push
call
sbb
pop
shrl
int3
jmp
arpl
repz
adc
sbbl
jae
jmp
movsb
dec
mov
xlat
inc
fs
dec
jecxz
cld
gs
popf
pop
dec
sub
insl
push
jbe
mov
dec
into
repnz
shlb
repz
lret
mov
roll
sub
dec
ror
dec
jno
mov
inc
sbb
push
cli
sub
insb
xchg
loope
sti
pop
pop
mov
out
mov
or
clc
into
inc
sbb
sbb
fstl
lock
mov
inc
mov
mov
sub
or
les
sub
icebp
push
enterw
cwtl
stos
adc
jl
and
rcl
mov
mov
aad
hlt
lcall
cmpsb
or
sahf
into
repz
jo
pop
lret
mov
or
lcall
popf
fisttps
std
sbb
test
test
fwait
jp
shlb
jp
test
outsb
add
in
setnp
jns
fst
pop
cwtl
fisttps
shlb
bound
sub
dec
mov
mov
cmc
lods
push
push
inc
mov
sub
hlt
stos
cli
push
jb
sub
out
sbb
repz
test
aaa
sub
leave
add
addb
cmp
mov
test
sub
sbb
xchg
xchg
sub
fsubs
adc
mov
mov
fimuls
push
fimuls
addr16
hlt
iret
lret
push
fwait
jnp
mov
and
push
push
into
adc
dec
jno
sbb
sub
lret
clc
bound
pop
dec
aad
jns
jbe
dec
cmpsl
in
lds
movsl
pop
rorl
in
adcl
out
or
test
loop
mov
sbb
add
fadd
mov
or
and
rcl
mov
ret
mov
push
pop
xchg
mov
sbb
das
mov
ret
test
and
mov
hlt
testl
pop
pop
ja
test
jno
xor
cmp
pop
jo
sbb
jb
icebp
scas
sub
jecxz
inc
inc
popa
jge
cli
and
cmpsb
bound
fwait
mov
mov
lock
test
pop
dec
out
es
push
scas
push
mov
dec
call
je
xlat
hlt
int3
mov
cwtl
pop
ja
in
sub
iret
sarb
pop
ror
push
orb
xchg
shll
mov
and
test
jle
lock
mov
rorb
test
stos
loopne
stos
push
and
and
lret
xchg
pop
cmc
cmc
push
inc
inc
mov
xor
rol
test
push
stos
sbb
in
leave
cmc
sbb
sub
loopne
fstpl
into
cmp
scas
lods
pop
fcmove
ds
add
mov
mov
idivl
out
into
arpl
ss
or
push
pop
out
push
mov
loop
xchg
adc
jecxz
mov
pop
rcrb
xchg
cmp
cld
mov
stos
ret
sbb
int
mov
dec
sarl
cmp
leave
adc
bound
mov
mov
xchg
jne
sub
or
or
aaa
adc
xor
cmp
icebp
mov
inc
cld
mov
and
sub
lods
adc
leave
in
shrl
mov
jns
mov
and
mov
pop
mov
xchg
sti
sbb
jmp
iret
push
ret
mov
lea
push
push
add
cmp
sub
test
dec
mov
mov
push
adc
add
cmc
sbbl
push
mov
dec
dec
aam
push
jmp
lds
lahf
dec
loopne
gs
imul
fdivl
mov
cld
ds
fnstsw
inc
jg
cltd
push
fcom
sub
and
adc
mov
mov
inc
mov
xchg
out
pop
ljmp
cld
push
scas
pop
sbb
and
testl
sbbl
jg
les
aam
push
sbb
pop
adc
and
jno
lds
hlt
jbe
ret
dec
test
jp
xor
js
adc
inc
hlt
jg
add
int
loop
jne
test
cltd
cmp
movsb
fwait
out
inc
jnp
pop
shl
jns
fnstsw
fisubs
cltd
movsl
iret
mov
push
clc
cmp
std
mov
inc
clc
ret
jns
insl
mov
cli
fcomi
adc
inc
fisttpl
shl
push
out
aam
cmp
addr16
jecxz
xor
aas
jo
aas
push
rcll
cmc
xor
in
pop
scas
sbb
mov
popa
shr
add
add
xchg
or
xor
cmp
mov
loope
rorl
add
int
push
lds
mov
cwtl
sub
jl
mov
cld
push
ds
cmp
or
and
imul
push
inc
pop
lahf
mov
and
sbb
mov
or
ret
mov
jg
lea
roll
int
std
ret
sbb
add
push
jge
insl
mov
mov
lods
repnz
int
std
ret
sbb
add
push
jge
insl
mov
mov
lods
repnz
gs
ret
lds
or
jb
bound
pop
inc
insl
mov
mov
lods
repnz
int
jge
in
xor
and
add
cmpb
into
rorb
rol
mov
movsb
jg
outsb
imul
inc
ds
push
add
lock
loopne
ror
sarb
mov
pop
pop
inc
inc
ds
push
and
adc
add
push
mull
dec
mov
xorb
addr16
inc
add
xor
arpl
inc
bound
xchg
mov
mov
in
mov
dec
inc
clc
sti
xchg
lahf
xlat
adc
stos
ss
aas
dec
jg
adc
cmpsb
movsb
jb
xchg
movsl
scas
sub
outsl
sbb
popl
mov
and
icebp
dec
add
mov
jge
sub
pusha
dec
fldt
jno
jo
push
ret
mov
push
les
push
loopne
aam
rolb
nop
popa
push
or
imul
lods
xchg
out
push
jl
arpl
inc
xorl
jle
test
pop
mov
mov
pop
cs
push
femms
pop
cltd
movsl
xor
inc
ljmp
andl
push
sub
jge
push
cld
push
push
jl
rcr
into
shrb
xchg
adc
jbe
inc
push
push
jl
or
into
add
push
xor
mov
enter
mov
jle
add
sub
ja
dec
insb
arpl
mov
cmpsb
mov
mov
repnz
stc
fnsave
pop
add
jo
jg
and
push
fwait
addl
idiv
scas
mov
jle
outsb
pusha
pop
push
dec
inc
xor
and
adc
add
lock
loopne
ror
sarb
mov
pop
push
dec
inc
xor
and
adc
add
lock
xlat
fiaddl
push
mov
mov
into
xor
mov
jo
sub
jno
push
and
rep
dec
imul
sub
cld
int3
mov
sub
jne
sub
pushf
int3
pop
ret
rorb
xlat
mov
scas
mov
lcall
jg
popl
pop
mov
sbb
add
imul
inc
lock
inc
and
mov
hlt
int
push
mov
imul
shl
inc
mov
adc
cmpsl
and
adc
js
pop
mov
pop
push
ljmp
or
lcall
lods
xlat
sbb
notl
or
lret
arpl
xchg
or
pop
mov
add
cwtl
mov
or
iret
pop
push
in
dec
inc
mov
ret
testl
sbb
enter
ljmp
pop
mov
stos
jmp
imul
mov
and
sbb
insl
inc
ss
jnp
lock
pusha
xor
daa
push
cwtl
mov
jns
addr16
loopne
in
cld
fildl
inc
inc
jle
and
cmpsl
decl
out
mov
imul
js
dec
aam
subl
cmp
lcall
shll
jle
cmp
es
pop
push
cmp
imul
or
loope
jmp
pusha
lock
mov
lret
cmp
jbe
in
inc
les
sbb
xchg
sbb
sub
inc
push
add
mov
pop
es
xchg
ficoml
inc
cmp
je
je
cwtl
sarb
pop
repnz
jbe
push
pop
push
xor
out
mov
loope
scas
shrl
fnstsw
sbb
push
xchg
or
mov
sbb
je
aad
xchg
pop
push
jnp
add
and
xchg
push
pop
stos
sub
and
push
dec
mov
mov
inc
fcompl
mov
aam
stos
jmp
cmp
pusha
popf
lcall
cltd
jns
mov
roll
shrb
insl
fsubs
bound
faddl
mov
jno
mov
jbe
push
sti
cmp
mov
pop
insb
shr
jecxz
adc
mov
out
ss
inc
lret
cwtl
fisttps
or
pop
xor
fists
xchg
pop
hlt
dec
fs
jp
jb
dec
jle
js
mov
add
dec
lret
adc
pop
mov
xchg
push
jmp
dec
mov
rol
push
hlt
mov
lahf
push
mov
movl
push
sub
sahf
sbb
loopne
push
pop
fcomp
pop
mov
out
cld
popf
xchg
jp
fdivl
lret
arpl
jns
push
or
loope
push
jbe
pop
pop
comiss
aam
pop
sub
cmp
sub
leave
repz
ss
iret
cmpsl
pop
and
pop
lcall
test
pop
leave
add
scas
in
mov
push
lcall
jbe
rcll
or
xchg
or
pop
xchg
incl
adc
or
rorb
int
mov
icebp
sti
pop
cld
les
dec
sbb
inc
adc
or
jecxz
jb
ljmp
scas
cli
adc
repnz
frstor
gs
cmp
mov
push
sbb
dec
jecxz
push
sahf
sbb
mov
out
mov
out
push
and
mov
dec
int3
scas
lret
fmuls
insb
or
inc
sub
sub
cld
add
iret
and
lods
lret
and
subb
stc
mov
lret
push
out
mov
lods
pusha
aas
jp
iret
or
jae
ret
stos
cmpsb
data16
scas
imul
or
xchg
inc
mov
pop
push
sbb
out
and
xchg
or
add
jnp
inc
jecxz
jns
movsb
sub
cmp
cli
sti
stc
sub
mov
add
out
mov
or
xor
cltd
push
std
push
add
cmp
shll
dec
adc
stos
sbb
insb
cmp
add
inc
sar
iret
pop
and
aas
popa
rorl
out
stc
sbb
pop
cltd
dec
scas
cli
dec
inc
fcoms
and
leave
mov
mov
pushf
mov
outsl
cmp
cs
clc
add
push
cmc
jo
int
mov
loopne
push
or
cmpsl
jne
add
cmp
jp
mov
sbb
cmp
jo
in
call
mov
mov
or
jp
mov
out
icebp
mov
jmp
cmp
cwtl
mov
push
int3
les
or
test
and
test
hlt
stos
out
cmp
xor
sub
int
cmp
dec
movsb
sbb
test
test
inc
test
call
bound
stc
or
xchg
std
dec
jbe
jmp
aad
xchg
dec
incl
cmpsb
imul
sti
out
adc
mov
jle
xchg
jl
mov
outsl
ds
repnz
inc
loopne
ja
push
lock
cmp
jecxz
fwait
jbe
push
mov
adc
popf
arpl
push
xor
cmp
jecxz
xchg
add
sub
add
cmp
rcl
and
lret
pop
js
in
jl
xchg
jo
pop
pop
pushf
cmp
mov
cld
rorb
jns
fwait
adc
cli
mov
gs
push
adc
loop
adc
mov
pop
sahf
sub
push
xor
adc
mov
fdivl
sarl
push
sub
aas
sbb
in
sub
jno
fists
cmpsb
cmp
loope
shr
push
jp
out
pop
outsl
fs
in
mov
loope
mov
sbb
ret
add
data16
inc
repz
pop
into
into
push
imul
rclb
xlat
jge
aas
xlat
cs
xorl
mov
idiv
or
or
push
sahf
out
pop
je
push
jg
in
mov
adc
adc
ja
roll
inc
je
stc
adc
push
mov
into
and
test
inc
sub
add
mov
pop
or
push
test
push
xchg
mov
push
xchg
mov
arpl
xchg
icebp
sbb
scas
jae
dec
fdivrl
push
ret
scas
xchg
push
push
bnd
fisubl
hlt
mov
fdivrp
push
repz
or
dec
cmp
jg
clc
pop
dec
pop
or
lods
pop
cmpsb
popf
call
outsb
cmp
pop
dec
jecxz
sub
jo
outsl
pop
and
add
loope
sbb
hlt
lock
dec
lahf
dec
pcmpeqb
xor
outsl
add
pop
iret
sub
out
setns
push
dec
or
sbb
xchg
aaa
xchg
das
jp
cld
pop
jle
mov
jge
stos
rorb
cmp
mov
mov
jmp
adc
std
cmpsb
pop
push
jmp
call
or
pop
and
pop
lock
bswap
xorb
mov
mov
xor
adc
ss
xor
js
mov
out
mov
jnp
fldcw
popf
pop
jecxz
and
push
jbe
jmp
rorb
aam
sbb
es
pop
adc
xchg
fisttps
jb
or
inc
sub
xor
or
sbb
mov
out
jmp
dec
push
xchg
xchg
inc
js
dec
shlb
mov
imull
test
test
pusha
mov
adc
jg
add
scas
cmp
fisttpl
sub
add
sub
sahf
pop
test
adc
mov
lods
lcall
or
mov
hlt
ret
ret
arpl
jbe
jbe
lock
stos
or
push
mov
int
outsl
jp
pop
repnz
notb
push
lods
sbb
jne
mov
xchg
mov
fisubrl
icebp
inc
insl
scas
pop
or
push
or
or
cmp
push
inc
lods
lret
mov
inc
ja
dec
jno
dec
dec
mov
pop
inc
sarb
adc
jg
imul
xchg
lret
and
les
jg
or
mov
inc
sysret
loopne
and
daa
fidivrs
pop
ja
mov
fwait
in
iret
and
cltd
in
pop
push
orl
sbb
popf
jns
cwtl
xor
hlt
testl
addr16
add
sub
imul
daa
sbb
fnstsw
pop
mov
push
jo
jl
cli
cld
stos
lods
fcmovnbe
imul
lahf
lcall
xchg
clc
cs
mov
movsl
lock
loop
pop
or
mov
ret
fisubrl
divb
in
push
and
test
xchg
jne
imul
push
jno
jno
sbb
pop
sahf
mov
into
rclb
icebp
sub
mov
inc
jl
mov
in
pop
xchg
and
or
daa
aaa
xchg
jnp
mov
mov
pop
jb
ljmp
mov
cld
inc
mov
xor
mov
int
pop
je
imul
lcall
xchg
adc
dec
sub
push
dec
inc
or
shl
dec
rcrb
adc
jg
sbbl
mov
adc
sbb
add
clc
dec
fldenv
pop
xor
add
push
sbb
inc
movsl
repnz
sahf
pop
movsb
jmp
out
fstpl
nop
mov
dec
sbb
int
mov
xchg
test
std
and
dec
mov
test
and
movsl
jp
cmp
or
cld
push
push
jecxz
fsubs
inc
shl
mov
lret
lret
xchg
stos
mov
jbe
inc
out
pusha
data16
mov
dec
mov
jo
iret
out
fwait
inc
and
aad
cld
add
loope
mov
sbb
arpl
imul
pushf
pop
into
or
sbb
and
cmp
push
sub
lret
sub
mov
sbb
fs
adc
notb
arpl
and
imul
push
cmp
push
dec
divb
dec
jb
inc
iret
pop
jl
xchg
sbb
add
jne
rcr
test
enter
mov
iret
inc
sub
icebp
add
push
xor
push
stos
cmp
lcall
leave
mov
aam
int
pushf
xor
or
iret
gs
lret
inc
push
js
in
adc
dec
loopne
cmp
or
jl
pushf
dec
xchg
cmpsl
popa
not
pop
lcall
cwtl
out
stc
fidivrs
push
fiadds
mov
imul
cmpsl
jmp
add
jno
sub
stos
xchg
mov
inc
les
scas
cs
outsl
out
test
bound
mov
mov
int3
xor
gs
lsl
mov
mov
mov
data16
imul
xchg
popf
jne
and
test
add
sub
xor
fidivs
insb
pop
cli
dec
movsb
jbe
ret
xchg
cmp
das
xchg
in
add
std
mov
push
outsl
test
pushf
mov
cs
cld
jns
loope
gs
mov
movsl
int3
lds
das
jmp
loope
and
scas
pop
repz
sub
movsb
mov
ljmp
fmuls
mov
shlb
or
push
pop
and
sub
ret
insl
push
outsb
fs
adc
pop
fdivp
ja
adc
push
sub
cmpsb
lcall
pop
push
jne
frstor
mov
imul
loopne
rolb
test
mov
push
add
adc
cmp
movsl
push
jle
shll
jbe
pop
xor
mov
pushf
insl
ret
scas
out
insl
push
repnz
mov
dec
pop
lock
pop
mov
dec
fs
sbb
mov
jb
cli
or
js
and
xor
jns
enter
movsb
push
mov
test
push
daa
dec
push
icebp
rolb
jo
sbb
inc
stos
out
movlhps
jnp
sbb
out
fcmovu
sbb
dec
call
dec
out
mov
or
dec
adc
xor
and
inc
addb
out
mov
ret
add
pop
xor
int3
out
test
mov
addr16
stos
outsb
movsb
sahf
and
call
sbb
mov
in
loopne
cmpl
dec
push
fsubp
add
jge
lret
scas
or
pusha
bound
dec
jmp
adc
jbe
mov
dec
mov
fdivrs
fisubrl
sbb
adc
push
inc
mov
out
xchg
std
pop
popf
xchg
ja
js
mov
fidivs
sbb
inc
js
insl
xchg
xchg
dec
push
cltd
lcall
pusha
aas
nop
and
xor
or
dec
rcrb
pop
lea
lcall
or
int3
mov
lock
lods
outsb
das
pusha
xlat
cmp
dec
xchg
add
pop
adc
xor
mov
xchg
mov
stc
mov
pop
add
icebp
mov
fcoms
rolb
push
or
and
sbb
call
jp
clc
dec
or
pusha
push
sbb
lcall
mov
push
cmp
ret
lcall
mov
icebp
es
mov
movsl
pop
sub
push
outsb
push
mov
mov
dec
rorb
xorb
sub
cmp
sub
out
mov
mov
lock
push
push
jb
mov
mov
and
jle
sub
jmp
lea
aad
rolb
sbb
shl
mov
sahf
mov
and
dec
jo
int
cmp
scas
movsl
jae
sbb
mov
dec
iret
mov
cmpsb
push
jo
pop
mov
mov
adc
cwtl
cltd
inc
add
sub
adc
repz
pop
push
test
mov
mov
mov
xor
lret
cmpsl
imul
shl
xor
repnz
clc
clc
movsb
loop
out
and
sbb
fs
adc
adc
sbb
dec
sub
stos
movsb
jle
rcll
fwait
push
mov
xchg
jp
push
xor
pop
xchg
push
test
std
aad
xor
inc
cmp
pop
lds
xchg
xchg
xchg
rolb
in
lock
lcall
ljmp
sbb
cwtl
jmp
call
add
inc
xchg
hlt
ljmp
cmp
cwtl
mov
insb
aam
clc
aad
mov
push
mov
xor
xchg
jno
ljmp
repnz
dec
pop
out
cmc
cmp
jg
adc
push
das
or
cmp
xchg
aad
dec
or
neg
loopne
out
in
push
jbe
icebp
push
add
xchg
sbb
and
aaa
mov
or
orb
aam
xchg
or
jecxz
nop
inc
push
add
in
fisubrs
or
lret
test
fisttpl
dec
stos
mov
ret
int
lods
pop
mov
pusha
cmovo
dec
jnp
imul
dec
cmp
iret
cmp
ds
pop
jb
jb
loope
sub
jmp
rorb
insb
es
daa
inc
jbe
dec
dec
cli
jl
repnz
adcb
inc
push
les
mov
stos
mov
jno
loopne
int
pop
scas
mov
sbb
push
xor
pop
ret
loopne
mov
push
fisttps
push
xchg
adc
jb
sub
push
enter
stos
or
jmp
xor
or
movsl
push
and
stc
mov
pop
inc
loopne
addr16
and
ret
and
aaa
dec
sbb
out
mov
add
sub
push
nop
mov
leave
xchg
mov
dec
xor
xor
enter
jle
mov
leave
lret
xchg
inc
sbb
push
fisubrs
jle
jg
push
movsw
das
imul
mov
test
push
test
xor
mov
fistl
cltd
mov
mov
push
sti
decl
ret
pop
xchg
mov
mov
and
and
xchg
imulb
cmp
pop
std
mov
sub
aaa
outsl
rclb
outsl
cmp
pop
xlat
xor
dec
fnstsw
ret
jae
rcrl
ljmp
push
jno
add
push
dec
lahf
aam
cmp
cmpsb
sub
mov
sbb
neg
out
lea
test
pushf
out
lock
pusha
xchg
outsb
xchg
add
pop
xchg
dec
mov
and
in
adc
aas
add
mov
xor
movsl
fisttpl
fsts
insl
fadd
pop
pop
cmovo
ret
dec
pop
push
mov
push
pop
and
iret
sbb
mov
test
xchg
les
xor
aam
add
cli
lret
xchg
xor
add
xor
aam
mov
sbb
rcrl
andb
lock
stos
mov
andl
dec
dec
jecxz
jp
push
mov
ror
adc
loop
les
pop
mull
xor
jb,pn
and
and
mov
push
xor
cli
mov
lock
ret
in
push
jno
or
cwtl
mov
mov
adc
inc
lock
mov
stos
cli
dec
les
sub
or
pop
xchg
push
mov
push
sub
repz
mov
ret
aad
or
popf
dec
sbb
jl
mov
push
xlat
test
cmp
inc
int3
movsb
in
mov
cmp
ja
call
jae
adc
xorl
mov
fldenv
arpl
pop
rcll
add
std
into
fisubrl
dec
fcoms
outsb
test
aas
jmp
stos
adc
rcll
repnz
in
sar
lcall
cmp
xchg
sbb
xchg
rcl
pop
mov
inc
sbb
xor
add
jmp
jecxz
jecxz
inc
jno
sub
jmp
gs
enter
adc
sldt
mov
ret
loop
fildll
scas
jns
nop
test
cmc
push
lret
mov
nop
test
out
pusha
jge
enter
mov
pop
mov
iret
mov
push
dec
stc
jge
in
add
xor
jecxz
push
and
outsb
fsts
mov
fstps
push
filds
adc
jae
mov
jb
sub
int
xlat
jne
mov
loope
jecxz
jmp
arpl
mov
repz
xor
sub
and
sub
clc
and
cmc
lcall
xchg
jle
mov
mov
fcmovnbe
in
cmc
adc
out
pop
inc
pop
cmc
bound
ja
cmp
mov
int3
xor
pop
push
icebp
enter
adc
push
sub
ds
and
out
inc
clc
sahf
push
xor
and
xor
out
aad
lea
sub
jb
jg
push
mov
fidivs
insb
push
arpl
jne
sub
mov
xor
xor
xchg
cltd
mov
aaa
fs
mov
cwtl
inc
or
je
scas
mov
cld
pop
xchg
xchg
fnsave
aad
mov
rorb
or
xchg
rorl
push
frstor
inc
scas
dec
fcmovne
and
cmp
lds
jno
add
ret
xchg
mov
pop
pop
or
pushf
adc
mov
mov
lock
add
ret
jbe
cmp
and
imul
cmpsb
xchg
out
insl
sti
push
jg
hlt
adc
adc
inc
outsb
or
xor
out
xlat
inc
mov
inc
lahf
adc
jp
stos
and
dec
pop
outsb
or
js,pt
xor
mov
scas
sti
addr16
je
lret
sub
rorl
sarl
dec
or
stos
jp
push
sub
fidivl
mov
xchg
test
jnp
cmp
jns
xchg
fwait
dec
lcall
gs
mov
pusha
shrl
mov
ja
hlt
loope
mov
hlt
xor
clc
and
mov
jo
gs
push
and
push
lock
and
insl
jo
clc
adc
jbe
or
aas
icebp
jbe
pop
into
mov
decb
cmc
inc
shlb
push
dec
lret
es
clc
xchg
or
and
loope
pop
fidivrl
sbb
xlat
es
ret
push
mov
stc
push
mov
in
inc
push
cltd
stc
fstps
stc
adc
jnp
push
pop
shlb
loop
cmp
icebp
jo
push
lods
sbb
test
ret
xchg
inc
into
fadd
std
pop
call
inc
mov
inc
mov
iret
xchg
popf
sti
push
jp
jns
sub
fisubs
xor
inc
mov
les
mov
adc
push
loope
jne
adcb
gs
sbb
scas
jno
mov
xchg
xchg
mov
andl
addr16
lds
daa
mov
rol
in
and
inc
pop
fmuls
pop
pop
sti
sub
imul
pop
inc
jmp
cli
movsl
hlt
stc
cmp
vmread
ror
je
sub
adc
xchg
std
pushf
out
sbb
push
out
jbe
add
into
sbb
push
imul
pop
xor
cld
mov
aam
into
sarb
mov
pop
push
dec
inc
xor
and
adc
add
lock
loopne
ror
sarb
mov
pop
push
dec
inc
xor
and
adc
add
hlt
out
out
fmulp
into
les
xchg
mov
pop
push
dec
dec
ds
and
sbb
adc
add
xor
cmpb
inc
orl
cmpsb
pop
loope
icebp
js
mov
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
arpl
mov
pop
lods
push
xchg
std
mov
add
add
or
add
pop
add
pop
add
add
push
add
add
push
add
add
add
add
add
je
call
add
addl
fldl
sbb
sub
movsb
add
add
add
add
add
add
push
add
add
adc
sbb
cltd
add
add
inc
add
add
add
add
insl
add
add
add
add
xchg
fildl
jns
mov
roll
sahf
add
add
add
add
add
add
mov
sbb
jg
insl
add
add
add
add
add
add
in
add
add
mov
mov
out
mov
add
add
push
add
add
add
add
add
xchg
add
add
add
add
in
add
add
clc
add
cltd
add
add
push
or
mov
out
insb
add
add
add
outsl
add
or
add
add
add
add
add
adc
mov
xchg
test
add
add
add
cmp
sbb
add
add
push
add
add
add
add
add
jbe
push
add
bound
push
add
add
insl
add
dec
add
add
dec
add
add
dec
add
add
add
add
add
add
add
add
mov
xchg
jnp
sbb
add
cmp
int
push
add
dec
add
roll
adc
insl
add
xchg
mov
mov
mov
xor
cmp
dec
add
add
add
push
mov
dec
add
adc
fildl
jbe
mov
test
and
aaa
add
mov
add
push
add
add
sub
add
dec
add
fiadds
daa
add
pop
add
dec
add
add
add
xchg
repnz
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
inc
add
add
add
cmp
das
add
add
je
insl
add
add
add
add
out
add
add
add
add
movsb
add
add
add
out
add
cmp
adc
push
filds
scas
add
flds
sbb
add
fadds
adc
in
add
add
mov
jnp
flds
nop
add
add
add
push
add
add
add
dec
add
add
add
push
add
add
inc
add
filds
xor
push
add
add
add
mov
mov
adc
mov
int
cwtl
add
add
inc
add
add
cmc
add
add
add
add
push
add
add
and
inc
add
add
add
add
add
mov
das
add
flds
dec
add
add
add
add
add
add
cld
add
add
mov
add
jno
sahf
add
add
les
dec
add
add
push
inc
add
add
add
add
add
add
lcall
test
ljmp
aaa
fistpl
pop
fisubrl
stos
or
ret
imul
inc
aad
addr16
test
test
xchg
push
fidivrs
and
mov
sti
in
sahf
mov
push
xchg
xor
or
mov
stos
cmp
mov
ret
addr16
jg
outsl
mov
int3
push
stos
notb
lret
xchg
ljmp
sarl
imul
sub
mov
add
xlat
xor
icebp
pusha
movsb
jbe
dec
inc
fidivrl
jl
ja
fstl
ficompl
jo
pop
xor
add
jnp
imul
add
adc
test
fcomi
es
sub
cmp
or
js
push
addr16
dec
jne
cmp
jno
rcr
ret
dec
jmp
stos
xchg
xor
cmp
add
lods
scas
movsb
xchg
push
mov
stos
mov
sub
sbb
xorb
pop
sahf
loopne
iret
out
cld
hlt
inc
ds
mov
mov
mov
cltd
ljmp
xchg
and
pop
xor
shll
fdivr
fildl
push
mov
or
es
push
in
jae
fistpl
xor
xchg
push
inc
mov
dec
loop
iret
lock
pop
jmp
loope
xor
xlat
jbe
mov
fcomps
xor
dec
push
add
dec
pusha
xchg
enter
push
es
fld
push
dec
ljmp
dec
pop
push
sbb
out
pop
or
rol
ljmp
xor
add
add
add
imul
sahf
jbe
dec
test
xlat
scas
test
xchg
xchg
jle
scas
negb
shlb
cmpsb
imul
fbld
cmp
cmp
lods
pminsw
subl
xchg
cli
xor
sub
shlb
adc
lea
xchg
mov
stos
add
int3
loop
push
cmc
ret
dec
lret
imul
repnz
imul
call
inc
repz
jl
shrl
jle
jbe
dec
jb
fistl
cmp
lds
nop
fbld
test
mov
jg
lcall
sbb
fistpll
xor
test
xor
arpl
mov
into
cltd
arpl
or
bound
inc
ret
imul
imul
and
inc
lret
add
cmpsl
pop
pop
xor
sti
or
pop
pushw
sbb
add
test
and
sbb
sub
inc
jecxz
pop
mov
sbb
fs
aad
push
cmp
push
divl
add
je
and
sub
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
