jo
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
in
sub
lea
push
mov
push
call
cmpl
je
cmpl
je
push
call
mov
xor
xor
call
mov
xor
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
push
mov
sub
orl
mov
inc
mov
pushl
pushl
pushl
push
push
call
add
mov
cmp
jbe
andl
cmpl
jne
call
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
mov
leave
ret
push
imul
jb
je
arpl
call
pushl
call
push
mov
pushl
call
push
mov
sub
push
push
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
mov
movzbl
movzbl
sub
je
addl
movl
call
call
push
pushl
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
xor
mov
push
push
push
call
lea
push
push
push
call
add
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pushl
pushl
pushl
call
mov
add
push
push
pushl
call
push
mov
pushl
call
mov
jmp
xor
push
push
push
push
pushl
call
pushl
mov
mov
pushl
pushl
push
push
call
push
pushl
pushl
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
jmp
call
push
mov
call
xor
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
push
mov
pop
cmpb
je
movzbl
sub
push
call
add
cmp
jg
mov
mov
mov
movzbl
sub
inc
test
jne
jmp
mov
mov
call
push
pushl
call
mov
mov
inc
push
pushl
call
mov
dec
movzbl
sub
je
inc
call
jmp
call
mov
xor
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
pushl
mov
xor
movl
pushl
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
push
push
push
pushl
call
pushl
call
mov
push
pop
pop
ret
add
add
add
add
sbb
jb
outsb
outsb
or
add
add
add
inc
add
adc
adc
add
add
add
add
add
add
add
rolb
jae
add
add
add
and
outsb
add
pop
jne
outsb
ja
dec
jecxz
add
gs
mov
clc
push
popa
or
mov
mov
push
incl
dec
and
call
add
std
adc
adc
push
mov
or
pop
shll
mov
into
mov
pop
ret
add
push
add
push
shrb
cmp
lea
int3
add
add
bound
loopne
cld
test
inc
push
call
inc
adc
shl
loopne
decl
adcl
add
call
test
jge
push
push
call
push
push
call
je
mov
ret
mov
mov
ud0
lea
add
xor
add
add
addl
add
inc
add
add
inc
inc
add
inc
imul
add
sbb
push
js
add
and
insb
gs
gs
insb
arpl
inc
inc
ss
push
jb,pn
push
jb
add
outsb
xchg
insb
cmpsb
jne
gs
xchg
gs
js
xor
add
add
push
add
add
aaa
and
add
add
mov
add
add
and
cmc
dec
insb
scas
add
fcmovb
mov
cwtl
mov
mov
mov
test
jp
pop
sbb
in
and
xor
or
stc
add
sub
mov
iret
jmp
aaa
dec
xor
imul
sub
push
repnz
sbb
movswl
adcl
out
sbb
test
jge
loopne
shll
pusha
cmpsb
cmp
ds
iret
and
and
lret
dec
push
sub
xchg
push
or
jecxz
jg
mov
rcll
ficoms
hlt
mov
repnz
cmp
sub
cmp
outsl
xor
xchg
or
ret
mov
cmp
sbb
cltd
jns
dec
xor
daa
xlat
shll
pushl
pop
nop
xor
add
sbb
repnz
or
ret
xchg
pshufw
sub
cmp
lds
push
or
mov
sbb
push
xchg
dec
cltd
hlt
push
dec
dec
pusha
mov
pop
dec
hlt
clc
arpl
xor
push
cli
scas
cmpsl
mov
cmp
aam
lea
adc
out
xchg
xchg
arpl
lods
les
pop
int3
repz
adc
outsl
cld
or
adc
lds
and
clc
mov
xor
imul
stc
inc
push
cmp
ret
inc
outsb
sub
fdiv
pop
out
mov
pop
ds
dec
cmc
and
movsb
jb
jnp
cli
popf
decb
xchg
or
data16
sub
jl
dec
xor
out
adc
loopne
lret
sub
xor
pop
popf
int3
mov
scas
jl
and
mov
iret
inc
test
sub
sub
test
in
inc
es
cmp
push
je
mov
xor
fs
sbb
outsl
cmp
jmp
cmc
mov
jne
test
scas
insl
aas
jae
inc
hlt
or
inc
lahf
call
xchg
in
fildll
cmp
in
xor
cs
mov
fisttpl
dec
ja
pop
in
mov
jne
rorl
add
insb
push
mov
aad
sub
and
inc
cld
gs
adc
dec
pop
cmc
jg
dec
ja
jmp
sub
push
cmp
hlt
inc
adc
mov
jns
stos
mov
nop
jge
ljmp
int3
jo
jmp
sub
rol
sbb
sub
ljmp
adc
add
popa
repz
enter
mov
out
jecxz
in
int
ja
loope
push
ja
cmpsl
add
mov
imul
jbe
lret
jmp
push
iret
mov
mov
pushl
cmp
ficompl
jne
adc
clc
js
lahf
test
rcll
mov
jae
ror
addl
divl
and
lcall
xor
js
xchg
enter
pop
jge
in
pop
mov
fsubs
cmp
insl
imul
add
lcall
mov
push
sub
mov
inc
cmp
jo
and
or
push
push
cmp
sub
and
pop
loopne
aas
pop
mov
fwait
dec
mov
mov
or
movsb
addr16
jnp
in
bound
negb
fwait
mov
push
mov
ja
xchg
xchg
jb
push
test
mov
adc
bound
pop
into
lds
mov
fsub
cs
jmp
sub
pmullw
fmuls
inc
cli
jge
mov
mov
cmp
lods
inc
mov
push
push
stos
lret
inc
xorb
dec
lods
jbe
orl
inc
adc
cld
lcall
std
and
pop
popa
inc
pop
dec
xor
xchg
mov
pop
mov
add
int3
jle
dec
je
inc
adc
xlat
add
mov
pop
dec
pop
and
hlt
pusha
pop
fdivr
rorl
mov
jle
add
js
insb
stos
dec
das
adc
inc
xor
push
insl
jmp
mov
cwtl
mov
enter
dec
dec
notb
jbe
mov
dec
ljmp
call
push
xchg
mov
test
cmp
xchg
imul
imul
adcb
inc
fidivs
cmp
lock
jl
push
rorb
int
fld
push
test
xorb
mov
sahf
adc
inc
xchg
rcl
add
dec
mov
add
cmp
push
test
cli
loop
push
mov
xchg
aaa
inc
rolb
jnp
subb
sbb
jmp
icebp
and
dec
int3
pop
or
pop
xlat
test
mov
pop
inc
mov
jae
xor
xchg
adc
and
aaa
mov
cmpsl
sub
adc
add
pushf
fs
jp
idivl
jmp
xor
sub
cmc
and
jnp
sub
cli
and
rcrb
jg
dec
jns
push
hlt
js
jo
pop
lret
mov
adc
aam
cwtl
xchg
sub
dec
dec
sub
mov
adc
cmc
pop
cld
lods
cmp
mov
fst
pop
incb
sbb
pop
sbb
cmpsb
ja
xor
cmp
xchg
or
pop
push
mov
and
popf
flds
push
mov
daa
adc
lahf
push
sti
pop
inc
leave
sub
mov
scas
inc
loop
jg
cmp
or
xchg
xchg
pusha
xlat
inc
add
pop
cli
cmp
in
sbb
lea
lret
xor
pop
imul
sarl
lods
xor
cmc
dec
mov
dec
nop
mov
out
cmc
jge
xorl
xchg
xchg
push
addr16
sbb
and
int
mov
test
jmp
sbb
or
insb
fnsave
aad
arpl
or
sbb
insl
mov
ljmp
imul
or
and
adc
pushf
sti
lahf
je
inc
inc
ret
pop
loope
imul
add
push
cwtl
fisubs
cmpsl
add
xchg
subl
jmp
mov
popa
push
cmc
test
ret
mov
dec
add
push
aam
push
fidivs
test
mov
fdivr
sub
mov
cwtl
inc
xchg
aad
les
aaa
outsl
lea
stos
mov
pop
ret
icebp
sub
pop
mov
test
add
mov
jle
clc
mov
aam
pop
push
pusha
or
push
outsl
mov
popa
test
sub
cmpsb
pop
shll
movsb
cltd
movsl
sbb
pop
imul
xor
cmc
mov
nop
push
mov
pushf
inc
mov
push
lret
dec
shll
push
inc
scas
lahf
es
outsl
int3
ljmp
or
add
lock
dec
insl
inc
xor
lock
bound
clts
test
jecxz
lcall
call
clc
outsl
jne
or
push
pop
push
cmpb
mov
push
inc
sbb
push
daa
testl
pop
and
shlb
mov
xchg
ret
in
in
and
xor
lret
sbb
enter
mov
dec
fnstsw
sbb
js
jmp
jns
jne
in
sbb
in
inc
mov
dec
outsb
mov
jnp
pop
push
mov
outsb
dec
mov
lock
das
cwtl
jge
icebp
or
pop
hlt
pusha
data16
mov
xor
mov
xchg
jne
pop
mov
or
in
jg
sbb
popa
int
ss
cmpsl
test
sarl
and
fucompp
mov
das
nop
pop
aas
shrb
mov
rcll
popa
cmpsb
movsb
ss
mov
xchg
mov
sbb
add
sbb
je
imul
inc
imul
in
lret
jne
or
pop
xchg
mov
jle
in
push
out
xor
shl
gs
mov
xchg
popf
sub
fldcw
push
mov
and
push
cmp
stos
outsl
pop
ficomps
push
test
sti
inc
subl
shrb
add
shll
push
jge
test
pop
inc
cmp
xchg
daa
adc
popf
xchg
imul
adc
in
add
cld
or
in
mov
out
jnp
mov
rorb
lcall
mov
in
inc
push
ds
cltd
test
cwtl
mov
aas
jle
jp
jae
outsl
adc
int
push
pop
ret
xor
and
xbegin
popf
pop
pusha
add
mov
ds
out
sub
and
xchg
pop
cmp
xor
mov
push
mov
xchg
pop
jp
sub
filds
xor
dec
add
pop
incb
mov
adc
xor
aaa
std
mov
pop
mov
or
cmpsl
std
or
xchg
inc
pop
test
xor
mov
mov
xchg
add
jle
mov
push
xabort
pop
fistpll
aaa
push
push
pop
xor
cmpsl
pushf
clc
lods
in
jp
daa
xor
aam
insl
dec
mov
xchg
into
shl
in
dec
insb
lcall
jmp
jp
jp
repnz
mov
sbb
cmp
ficompl
sub
pop
xchg
cmp
mov
mov
ret
clc
jmp
das
nop
add
test
sti
dec
push
in
dec
shr
pop
sbb
aaa
loop
sub
jmp
push
popa
xor
sbb
jae
jle
pop
sti
xlat
aam
loop
or
push
pushf
movsl
lock
cltd
rol
pop
lods
movsl
jle
repz
xchg
pop
out
and
and
pop
shl
scas
adc
fisubl
popa
sub
fs
daa
jmp
xchg
mov
pop
dec
mov
mov
lds
es
jnp
call
in
pop
push
in
sbb
mov
cmp
inc
push
loop
cli
jns
icebp
aad
loopne
mov
fcmovbe
pusha
xchg
add
pushf
adc
mov
sub
ja
pop
cmovp
mov
mov
xor
mov
adc
shlb
jnp
cmpsb
add
out
mov
xor
cmp
shrb
cltd
addb
into
cmp
fistpl
dec
stos
aam
dec
push
pop
orl
inc
mov
std
inc
insl
or
addr16
mov
dec
adc
insl
je
push
je
adcl
or
pushf
jae
std
andb
pop
loopne
cmp
pop
test
mov
push
arpl
push
das
cmpsl
mov
scas
out
push
fdiv
inc
inc
jg
sbb
out
xchg
dec
cmp
mov
int
inc
sbb
inc
xor
jo
or
sub
out
movsl
mov
push
sub
call
jnp
loope
xor
mov
dec
mov
cltd
sahf
inc
push
sbb
cmp
xchg
xor
loopne
daa
daa
mov
shrb
pop
jns
push
lcall
hlt
pushf
adc
sti
lret
or
pop
mov
neg
je
jb
bound
push
push
shll
fbld
add
jae
push
rclb
sahf
daa
push
adc
fucomip
mov
addr16
cli
cmpsb
mov
ljmp
loop
sub
cmc
xor
fnstenv
cld
sbb
adc
lds
shrb
pusha
mov
or
dec
test
sbb
fidivs
xlat
pop
push
pop
push
mov
insb
stos
jbe
jb
lcall
mov
sbb
adc
not
adc
jmp
mov
adcl
xchg
mov
xorb
in
push
std
lock
test
adc
xchg
test
or
divb
fcoml
js
fwait
addb
and
scas
push
inc
add
sbb
lods
pop
xchg
mov
pushf
dec
dec
sub
sub
sub
pop
lds
lret
jne
fxch
ret
cmp
ja
jae
pop
cli
jno
aas
insb
icebp
das
mov
adc
xor
repz
mov
mov
adc
out
or
ljmp
mov
mov
test
movsl
std
sbb
das
cli
and
fsts
scas
popa
push
cltd
repz
inc
mov
sub
fcmovb
and
in
mov
insb
lock
fwait
shll
or
in
into
xchg
xor
out
cmc
pop
adc
adc
push
test
push
inc
jp
mov
stos
pop
adc
sub
sbb
sub
pop
add
aam
cmp
mov
pop
jne
or
cld
imul
clc
inc
and
loopne
xor
xor
xorb
inc
push
adc
pop
mov
aam
mov
push
ja
pop
movsl
and
fwait
outsb
sahf
and
cs
out
mov
aaa
pop
movsl
lods
cli
mov
jb
dec
dec
jge
push
shll
cmpsl
xchg
or
cltd
andl
mov
add
jecxz
ret
sahf
inc
stos
dec
push
arpl
inc
fsubrs
sub
add
fs
repnz
pop
sub
out
sub
jl
popl
mov
sbb
xor
bound
dec
ret
dec
pop
shlb
xor
sub
xchg
dec
mov
dec
mov
subb
push
scas
daa
mov
jno
in
mull
rcr
cmp
mov
sbb
arpl
ljmp
or
jne
lds
nop
shll
push
hlt
mov
popl
jl
fistpll
jmp
sti
cltd
jl
out
stc
adc
imulb
scas
and
xlat
and
dec
pushf
dec
add
mov
lds
and
hlt
dec
xchg
ret
dec
pop
add
int
push
es
and
inc
mov
xchg
sti
movsl
rcll
cmp
xchg
aad
outsl
out
jle
inc
lret
or
daa
call
lret
push
lret
inc
cmp
sub
outsl
mov
fimull
cmp
cltd
cmp
scas
mov
rcl
jno
clc
mov
xchg
add
sahf
or
pop
push
mov
insb
daa
jno
lret
xadd
pop
pusha
dec
cmp
aam
and
pop
pop
in
hlt
cmp
add
adc
shll
divb
push
add
int
popf
and
lea
das
lods
ja
jb
ss
xchg
pop
rcll
ss
test
mov
pop
xchg
ret
pop
aas
push
and
in
movsl
mov
xchg
pop
es
xchg
lock
jo
cmp
pop
push
in
dec
cli
das
pop
mov
jns
mov
mull
adc
fs
divl
xchg
add
sub
nop
push
push
pop
xchg
jp
lock
mov
test
icebp
js
jns
mov
fisttps
les
stos
loope
mov
mov
rol
mov
xchg
out
jmp
test
lcall
cmp
cli
lods
std
cmp
push
xchg
fadd
adc
jle
repnz
mov
out
pop
mov
cmp
gs
add
les
and
in
addr16
sub
int
adc
or
ljmp
adc
pop
mov
fsubrs
xchg
fiadds
lret
or
adc
mov
rorb
outsb
sahf
push
dec
int
int
and
ret
stos
shll
into
xchg
cmp
pop
and
fcoms
movsb
xor
inc
or
popa
insl
aad
cmpsl
xor
repnz
jmp
daa
out
xorb
movsb
pop
rcrb
xchg
out
sbb
sbb
daa
fldl
pop
push
add
and
or
mov
or
push
cmp
nopl
lret
lret
add
ljmp
xor
pop
movsb
cltd
pop
adc
fs
in
push
imul
loope
fcoms
or
sbb
ss
test
pop
sarl
sub
lods
test
and
shll
pop
dec
nop
gs
aas
mov
sub
lret
punpckhwd
fsubl
adc
mov
dec
xchg
cmp
pop
rcll
into
and
lcall
fiaddl
movsl
xor
scas
push
cltd
ljmp
jmp
inc
push
out
into
sub
inc
mov
mov
or
push
dec
popa
and
dec
push
fcoms
jbe
adc
jmp
jbe
cmpsb
cwtl
mov
mov
jmp
test
jmp
outsl
in
mov
sub
push
pop
add
and
dec
cmp
clc
out
xchg
test
ret
push
pop
in
add
imul
imul
inc
stc
mov
stc
pop
scas
pop
dec
test
sarl
add
pop
comiss
fnsave
cmc
into
cld
cltd
fxch
mov
aad
add
push
pop
popa
sub
icebp
push
xchg
push
push
and
mov
leave
test
cmp
hlt
add
cmp
enter
out
push
repnz
jne
jb
push
aam
sbb
xchg
jge
mov
shlb
push
push
xor
daa
mov
jb
mov
aaa
cmp
lods
stos
jns
pop
jae
sub
jg
jp
cmpsb
pusha
push
sub
mov
mov
jge
cli
repz
int3
jne
insb
sbb
xor
sbbl
ss
mov
adc
fidivrl
fbstp
lret
ss
in
into
jp
sub
cltd
mov
dec
pop
rorb
out
xlat
mov
inc
nop
cmpsb
mov
mov
imul
add
cld
popa
hlt
jmp
and
sub
fldl
xchg
dec
sbb
sub
add
pop
daa
imul
nop
push
lods
lahf
push
add
mov
dec
stc
dec
fnstsw
dec
push
scas
les
and
into
inc
hlt
sub
push
cwtl
jge
add
dec
pusha
lds
mov
jl,pn
inc
sbbb
xchg
lods
jl
das
dec
xchg
and
and
inc
push
shrb
iret
stc
and
call
out
scas
inc
mov
jmp
xor
imul
pop
dec
mov
test
sysenter
movsl
cmpsb
pop
xchg
test
roll
mov
mov
mov
mov
test
pop
cli
fisubrs
and
incl
test
push
imul
add
cmp
xchg
jmp
push
pop
ret
clc
lahf
dec
mov
and
bound
jmp
icebp
mov
jle
mov
mov
sbb
push
in
shlb
ret
inc
jno
mov
and
int3
scas
insb
addr16
inc
mov
sub
out
xor
sbb
cmp
mov
mov
mov
push
sub
mov
mov
jno
inc
jns
push
bound
popl
mov
incb
push
adc
jl
jae
adc
or
in
mov
repz
and
mov
cmp
dec
mov
movsl
int
push
or
jo
add
add
add
add
add
add
ret
add
add
xchg
add
add
add
add
and
add
add
mov
add
add
add
add
add
add
movl
add
add
jo
jo
pop
pushl
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
add
add
add
lret
pop
push
jae
and
add
add
xchg
add
add
cmp
add
add
pop
add
add
add
add
add
stos
add
add
or
add
add
add
sbb
add
add
add
add
add
add
sbb
pop
mov
or
je
das
push
dec
movsb
imul
dec
outsb
in
or
cld
shll
mov
ds
add
push
je
cld
fmuls
mov
leave
aaa
or
inc
clc
push
or
or
mov
or
mov
add
pop
test
mov
pop
sbb
push
add
inc
sbb
call
add
add
adc
jb
push
xor
push
incl
jmp
cld
pop
je
push
add
incl
adc
incl
adc
enter
add
push
loopne
add
dec
add
add
lret
sub
lcall
add
call
hlt
loopne
add
rolb
add
add
lret
adc
sbb
add
sbb
sbb
sbb
popl
sbb
sbb
sbb
add
sbb
insl
shll
arpl
outsl
insl
ljmp
add
outsb
outsb
outsb
fwait
insl
fs
cltd
gs
dec
add
push
je
or
insb
outsl
inc
mov
inc
add
jne
outsl
jae
cmpsl
jne
outsb
imul
add
add
inc
add
add
imul
add
aaa
add
add
fildl
add
add
dec
add
ret
adc
das
jle
mull
aad
xor
mov
push
mulb
int3
ret
mov
pop
insb
mov
or
adc
lock
and
push
aaa
jb
insl
lods
cmp
fiaddl
and
stos
outsl
pop
test
xor
aaa
push
fmull
mov
rcrl
or
aas
adc
loopne
aam
inc
pop
adc
fnstsw
fnstenv
push
inc
xchg
push
les
jnp
add
mov
fldcw
push
xchg
mov
cmp
aaa
add
pusha
nop
xchg
repnz
ret
cltd
xor
movsb
push
repnz
arpl
adc
and
hlt
lock
mov
ret
and
cmpsb
push
add
fdivrl
xlat
bound
push
xor
fists
fsubl
push
adc
pop
mov
xor
addr16
rorb
jg
enter
addl
hlt
sbb
mov
movsl
and
stc
adc
lret
addr16
outsl
cmp
pushf
mov
add
dec
das
aas
iret
jle
xchg
jge,pt
dec
dec
retw
push
insb
cmp
inc
into
mov
xor
mov
sub
sbb
es
mov
iret
enter
mov
sbb
rep
stos
and
inc
jns
and
sbb
or
inc
movsb
adc
imul
cmp
repz
lock
mov
stos
jbe
stos
and
mov
imul
mov
adc
xor
arpl
ljmp
insb
fwait
dec
push
sub
adc
cld
ss
pushf
dec
stos
mov
sbb
insl
jbe
xchg
xchg
aaa
mov
mov
das
jmp
and
sarb
jmp
pushf
shll
test
sub
mov
movsl
mov
adc
addr16
and
adc
nop
jae
mov
icebp
imul
push
mov
repz
xlat
loop
mov
loope
lret
cs
and
dec
int3
int
inc
mov
adc
cmc
aam
addr16
mov
sbb
xchg
out
jo
cwtl
pop
mov
xchg
xchg
sti
imul
mov
cmp
lret
push
mov
pusha
push
inc
inc
xor
push
pushl
std
shrl
test
cmpsb
push
adcb
or
in
pop
test
push
and
mov
cmpsb
dec
add
stos
faddl
into
mov
xor
pusha
mov
dec
cmp
aam
or
add
in
xchg
inc
insl
jge
mov
xchg
inc
ret
mov
xor
jp
fbstp
call
mull
fstpt
clc
rorb
xchg
add
inc
jl
js
outsb
sub
cmp
aaa
mov
mov
cld
adc
adc
sbb
adc
push
add
ss
loop
adc
cli
inc
shll
pop
mov
mov
dec
xchg
fs
addl
dec
out
insl
out
sti
cmp
aaa
xchg
cwtl
out
sub
imul
dec
push
push
dec
ljmp
mov
inc
lcallw
daa
fistpl
fidivrl
pinsrw
enter
sbb
out
inc
pop
int3
adc
fistpl
dec
fcom
xchg
jmp
adc
adc
mov
shrl
psubsb
mov
stos
dec
cmc
jp
invd
out
push
jg
mov
das
dec
xor
sub
dec
ja
and
mov
icebp
mov
in
mov
test
frstor
jnp
fsub
mov
sbb
jecxz
das
popf
sub
ret
addb
jae
xor
jne
mov
insl
xor
add
push
mov
cmp
pop
xchg
repnz
cmpsb
mov
mov
ja
push
std
jmp
pop
xchg
outsb
leave
mov
push
mov
into
push
cmp
loope
cmp
mov
cltd
and
lahf
push
cmp
pop
sahf
clc
movsb
inc
js
sbb
rorl
or
and
jo
inc
sub
add
dec
orl
out
mov
stc
push
mov
jns
cwtl
and
mov
sbb
ljmp
add
mov
xor
notb
jp
jno
push
or
inc
inc
scas
in
shl
popf
pusha
cwtl
arpl
pusha
sbb
push
test
imul
ds
pushf
rsqrtps
sub
inc
sbb
dec
lea
je
fimull
repnz
loope
fcmovnbe
into
jns
or
test
push
inc
lret
pop
pop
loopne
in
push
lea
mov
test
mov
lret
sub
pop
ficompl
mov
or
dec
cwtl
daa
jno
gs
shll
in
mov
push
stos
xor
add
cmp
xchg
dec
movsb
cmc
jb
in
xor
into
mov
mov
pop
fwait
push
mov
jle
xchg
jne
ret
cld
inc
push
mov
lret
mov
repnz
sub
cli
fimull
pop
or
sbb
mov
ljmp
xchg
xor
test
adc
inc
xchg
outsb
fdivl
mov
adc
cmpl
mov
jnp
repz
sub
cmpsb
push
sub
xchg
sahf
out
or
pop
mov
push
shl
fidivl
data16
bound
jns
inc
insl
mov
fisttps
ljmp
lods
push
add
jmp
xchg
out
mov
mov
ror
push
subl
sbbl
xchg
fildl
sub
adc
ret
add
xor
push
test
push
pop
mov
jb
lods
cld
sti
xor
sub
ljmp
push
lahf
mov
dec
ljmp
int3
xchg
push
ret
lret
inc
xlat
push
out
push
pop
arpl
cmc
mov
sbb
dec
cmp
pop
and
mov
int3
jmp
mov
int3
fsubl
and
dec
push
pushf
shlb
pop
pop
xor
add
push
push
sub
pop
sbb
push
sbb
pop
mov
cs
fstps
add
movsb
cmc
fcmovu
pop
pop
and
or
ljmp
inc
jmp
xchg
ja
mov
aas
xchg
dec
xor
push
loop
sbb
and
push
in
arpl
xchg
rcll
lcall
lock
pop
shrl
pushf
fidivrl
scas
jne
or
sbb
in
mov
mov
mov
cmp
mov
call
jb
insl
add
cmp
mov
popa
pop
stos
mov
scas
jmp
pop
lock
imul
xchg
inc
fcmovnb
mov
pop
push
inc
mov
or
jbe
ljmp
mov
mov
sbb
dec
push
mov
xor
xchg
push
mov
cmpsb
fdivrs
inc
fs
lret
icebp
cmp
pop
mov
lea
rcrl
mov
jl,pn
clc
mov
push
or
rol
jne
push
cltd
mov
inc
sub
and
das
inc
cmpsl
mov
std
xchg
imul
fsubrs
bound
insl
stos
push
adc
inc
jmp
mov
inc
or
push
imul
or
xor
icebp
mov
bound
repz
xor
cmp
mov
fwait
pushaw
addb
or
clc
jg
mov
xorb
sub
inc
and
shll
or
jb
aaa
mov
xchg
pop
jecxz
mov
mov
xlat
xchg
mov
or
sbb
sbb
test
insl
cld
ret
mov
in
sub
popa
push
loopne
fidivrl
inc
sub
jbe
imul
xor
out
fsubl
test
and
ds
scas
adc
jbe
dec
fisttpll
push
xlat
mov
jbe
jno
fstpl
push
xchg
adc
les
test
ret
or
xchg
leave
lea
push
shl
pop
movsb
add
or
outsl
test
pop
clc
int3
loope
adc
nop
mov
test
loop
sbb
or
fisttpl
loopne
cmp
rorb
sub
aas
daa
add
and
mov
incl
xchg
jae
or
add
insl
ljmp
sub
xor
xchg
sub
xor
mov
sbb
pop
add
jl
das
test
sub
mov
adc
lret
sub
adc
ja
jecxz
xchg
shl
mov
cmpb
sbb
mov
pop
mov
jg
loope
lock
sbb
clc
sar
inc
je
aas
add
add
notb
fldcw
sub
pop
mov
sub
xlat
enter
mov
mov
mov
xchg
fdivr
scas
int
aam
aaa
andb
jno
mov
add
repz
cli
je
data16
jae
out
lock
lea
std
cmp
stc
mov
or
cmc
lea
or
pushf
mov
daa
or
lcall
es
inc
lods
or
cmp
fld
mov
xchg
xchg
test
xchg
js
arpl
in
and
test
add
ret
imul
jo
loope
mov
fcmovnbe
push
icebp
shl
push
inc
push
jns
mov
outsl
arpl
jp
jmp
dec
mov
hlt
aam
js
inc
jo
sti
or
xchg
bound
fdiv
cmp
incl
sbb
sub
xchg
cmpsl
and
dec
nop
arpl
daa
int
inc
push
jl
pop
and
sbb
lret
xlat
ja
aam
test
pop
jmp
ret
xchg
push
movsl
ficompl
outsl
or
xor
add
cmpl
mov
dec
mov
push
mov
repz
and
mov
jne
xchg
int
push
or
movsb
xchg
mov
insb
cld
jp
push
inc
add
adc
inc
shl
cwtl
mov
jno
push
cmpsb
dec
mov
es
in
out
ljmp
jne
adc
mov
ret
ret
inc
or
dec
aas
aam
cmp
and
imul
add
jecxz
or
cmpl
mov
adc
or
mov
or
gs
cli
imul
loop
lret
inc
imul
xchg
rcll
popa
sub
and
push
daa
es
and
addr16
ror
xor
orb
test
xchg
jnp
push
mov
add
repnz
push
mov
and
addb
cltd
sub
xchg
dec
inc
aad
push
cwtl
sarl
sub
cmp
rclb
or
fisubs
jmp
xchg
mov
aam
cmp
mov
lds
xchg
imul
jp
mov
mov
adc
lahf
inc
mov
inc
mov
push
mov
pop
inc
adc
jae
stos
xchg
add
aas
sub
lahf
push
dec
adc
mov
enter
mov
fwait
rcrb
stc
test
sub
sahf
test
jns
cmpsb
mov
push
daa
adc
pop
hlt
imul
pop
xchg
shlb
call
inc
cmpsl
push
cmp
cmpl
clc
or
sbb
sbb
dec
cmp
jns
ljmp
aam
jns
xchg
pushf
std
out
test
lods
or
mov
mov
sbb
xor
insb
or
and
xchg
xor
into
scas
push
sbb
or
or
sahf
inc
aaa
inc
imul
in
mov
push
xor
sub
das
outsl
inc
inc
adc
je
pop
mov
push
cmpsl
pushl
sti
jg
pushf
adc
cld
and
iret
rcrl
xchg
fimuls
pop
pusha
fcmovu
mov
mull
lahf
cs
or
push
xor
sbb
fldt
mov
test
pop
aad
sti
inc
mov
mov
pushf
sbb
mov
pop
jecxz
push
ror
jns
lds
sub
and
pop
cwtl
adc
aaa
shll
shll
imul
mov
or
xor
test
sbb
clc
hlt
add
sbb
stos
mov
inc
pop
ljmp
xchg
mov
xlat
cmp
sub
inc
mov
jecxz
cmp
clc
test
daa
sbb
cltd
push
mov
js
mov
imul
add
fistps
addr16
push
mov
int3
jbe
push
fistl
xchg
les
call
cmc
aas
into
and
fwait
leave
cmp
fcomps
mov
lods
insl
leave
or
in
cmp
ficompl
xor
add
imul
imul
dec
mov
jae
jo
xor
subl
mov
mov
mov
mov
mov
adc
dec
cmpb
dec
fbld
clc
lods
push
mov
pop
lds
xor
dec
xchg
loopne
jbe
and
ds
enter
xlat
enter
jmp
aad
lock
jnp
add
lahf
loopne
xor
inc
sbb
sbb
mov
gs
rcr
negb
xchg
jae
add
adc
adc
sub
inc
sub
jb
add
cmpsl
jecxz
add
lock
shrl
rcrl
pop
push
pop
dec
rcrb
ja
sub
lods
loope
and
add
clc
fs
test
sbb
lret
lcall
daa
or
add
aad
mov
cmp
xchg
ficompl
test
xchg
push
scas
mov
sub
push
xchg
rolb
push
imul
add
jmp
sahf
imul
fdiv
inc
mov
ret
push
and
arpl
shrb
cltd
jg
add
out
push
das
lods
sub
lret
fsubrl
inc
add
jmp
imul
lahf
mov
mov
push
repz
int3
cwtl
add
xor
leave
mov
cmc
leave
or
cmpl
icebp
push
and
inc
mov
lods
push
sbb
sti
mov
inc
jecxz
add
lods
mov
mov
divl
mov
sarb
daa
and
xor
xorl
or
add
add
push
and
cld
xor
int
jno
pop
pop
mov
lods
cmp
cmpsb
test
lret
and
rcll
jne
cmpsl
pop
inc
adc
ficomps
hlt
mov
add
bound
xchg
mov
and
int
xchg
pop
mov
mov
sub
or
addr16
dec
das
mov
sbb
test
shlb
daa
outsl
scas
scas
call
ja
jmp
xchg
cmp
pushf
or
lahf
jb
cli
sti
xlat
daa
das
mov
xchg
scas
lcall
sbb
xchg
mov
mov
or
call
mov
loope
and
pop
add
rcll
push
cld
sbb
test
jno
jge
dec
rcrb
addr16
out
mov
int
pop
aad
add
lock
jne
mov
or
pop
pushf
mov
stos
outsb
mov
and
jp
pusha
nop
pop
xor
inc
adc
ja
pop
lds
inc
or
stos
pop
cs
jns
fst
in
sbb
cmp
and
stc
subl
and
sbb
xor
shl
mov
sub
scas
xchg
xchg
pusha
sbb
orl
pop
sarl
subb
lcall
repz
ret
jo
sbb
mov
sbb
mov
jmp
decb
pop
jnp
out
inc
clc
icebp
std
mov
mov
xor
aas
enter
pop
js
sbb
out
dec
mov
xchg
in
rcll
sub
sbb
movsl
push
inc
mov
push
pop
movb
ret
loopne
in
adc
hlt
outsl
std
test
pop
out
addr16
mov
inc
mov
xor
lret
add
sub
sbb
and
dec
fistpl
lods
ret
iret
sti
cltd
pop
lea
adc
cmpsb
sub
mov
sarl
out
lds
dec
xchg
xchg
fdivrl
lods
cmc
fsubrp
add
xchg
push
mov
jecxz
fisubrs
fdiv
lea
int3
pop
lds
in
bound
or
xor
lods
stos
cli
lea
int3
nop
fldt
cmc
add
pcmpgtb
std
shlb
jmp
imul
adc
and
hlt
cmpsb
mov
sahf
mov
jbe
inc
jle
cmp
nop
pop
mov
mul
push
cld
push
sar
adc
mov
inc
int
stc
jo
movsl
ds
cmpsb
dec
loope
sub
jns
push
addb
jl
arpl
jmp
or
jb
push
fwait
test
lds
into
outsb
push
in
add
xor
punpckhdq
sub
pop
mov
repnz
pop
jle
and
xchg
pusha
or
jbe
xor
faddl
nop
and
pop
scas
mov
sbb
sahf
inc
xchg
cmp
insl
in
push
fsubl
xchg
sbb
xor
ret
pop
inc
cmp
popa
in
inc
jns
xchg
daa
fsub
aad
imul
cmc
mov
add
xchg
test
xorb
adc
mov
mov
push
fnsave
outsb
inc
cwtl
push
mov
jge
insb
mov
pusha
and
jg
popf
add
int3
pop
sbb
xchg
sub
jne
leave
inc
filds
mov
in
push
in
imul
sub
mov
in
mov
fdecstp
imul
aas
inc
inc
dec
xor
pushf
mov
jnp
add
sub
les
dec
js
dec
stos
jno
pop
and
inc
pusha
out
nop
fyl2x
mov
push
cwtl
sbb
push
sbb
mov
popa
lret
and
sub
or
jae
into
mov
inc
jnp
mov
cmp
ja
mov
sbb
mov
data16
push
sub
or
movsl
sbb
add
adc
inc
pop
stos
mov
and
shl
adc
sub
xchg
sahf
repz
push
insl
jns
inc
cli
aaa
jo
icebp
or
call
cli
jge
fdivl
or
mov
mov
sti
push
ret
and
addb
add
add
add
add
xlat
add
add
sti
inc
add
add
imul
add
aaa
add
add
fildl
add
add
add
add
add
add
dec
add
add
add
xor
xor
xor
and
add
mov
cmp
ljmp
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
or
outsl
jne
or
test
add
add
add
mov
add
pusha
xchg
add
add
add
add
add
add
add
add
xchg
add
gs
daa
jae
inc
jb
add
pop
add
push
xsavec
adc
fimull
or
push
pop
test
dec
inc
ret
incl
add
mov
incb
decl
push
push
push
push
fdivr
push
push
dec
insb
push
rcl
lret
in
mov
rolb
cmp
mov
adc
pop
add
incl
pop
popl
push
fisttpl
inc
push
push
clc
decl
incl
jecxz
adc
add
or
decl
mov
incl
lea
clc
cmp
stc
sub
jecxz
adc
inc
jne
add
adc
in
push
mov
add
add
add
imul
inc
imul
test
gs
push
inc
xchg
jae
add
jbe
je
arpl
push
loopne
dec
dec
fs
ja
add
addr16
popa
add
add
imul
push
inc
push
ja
movl
add
add
daa
mov
jg
ror
xor
push
rol
push
cmp
data16
push
cmp
or
mov
xchg
cltd
xor
jmp
xchg
bound
movsl
push
xchg
scas
js
dec
xorl
add
clc
fsubr
cli
mov
orl
inc
sahf
or
cmp
aad
xchg
in
sub
mov
fwait
test
mov
push
pusha
clc
aaa
fwait
mov
push
and
test
jnp
outsb
cwtl
mov
into
sub
adc
call
ret
ja
adc
lods
shrb
jecxz
lods
dec
sahf
jbe
ja
xchg
test
movsl
adc
sub
insl
test
push
shrl
cmp
and
add
add
cld
jns
jo
mov
sub
jbe
mov
ret
push
mov
fwait
std
lock
test
in
fnstcw
xchg
adc
inc
stc
cmpsl
mov
scas
add
mov
lahf
sub
sub
and
daa
lods
xchg
fwait
mov
shlb
imul
pop
loopne
adc
jo
loope
push
sti
aam
jg
mov
data16
cltd
sub
dec
mov
sub
aad
sbb
sbb
jbe
jge
mov
enter
mov
fwait
leave
popf
insl
imul
repz
cmp
push
rorb
mov
outsb
lcall
shlb
adc
aad
clc
or
xlat
repz
ret
sbb
push
mov
cmc
xlat
dec
and
fidivrl
sub
xchg
fdiv
mov
lret
push
das
and
mov
test
stos
ret
xor
add
fnstcw
push
icebp
cmpsb
cltd
lahf
out
inc
stos
stc
in
outsb
andl
mov
sub
ret
outsl
stos
inc
mov
or
das
fs
xor
push
pop
addb
mov
lret
lret
ret
cmp
fwait
and
xlat
pusha
fcmovnu
pop
inc
in
fiaddl
dec
pop
and
fdivl
pop
mov
ja
mov
std
movsl
ret
cld
mov
xchg
test
cmp
in
mov
out
mov
jl
add
adcl
hlt
pop
adc
jmp
call
dec
xchg
lret
rcrb
lock
fisubrs
jmp
aas
lret
jno
stos
adc
aaa
xchg
inc
lahf
pop
ja
mov
xor
addb
lret
cmp
add
mov
adc
sarb
fidivs
fcmovu
xchg
xchg
out
xor
mov
popl
in
cmp
xor
or
push
push
daa
into
fwait
adc
pop
sbb
ss
and
or
stos
mov
jg
mov
jnp
mov
pop
xor
sub
push
cwtl
cli
sub
pop
push
dec
or
dec
sbb
cs
add
and
jne
aaa
push
out
push
popa
pop
xor
fs
push
sub
daa
adc
sbb
sub
inc
call
mov
out
insb
xchg
jae
mov
cltd
pop
and
mov
dec
rclb
in
and
and
icebp
push
dec
rcrb
adc
cmp
xchg
xor
mov
scas
push
inc
test
push
loopne
jmp
fimuls
sbb
sbb
shll
jno
cmpsl
test
pop
jge
mov
and
fwait
scas
jl
clc
addr16
in
jecxz
testb
dec
in
jle
inc
into
inc
fadds
icebp
mov
insb
mov
mov
int3
cltd
cwtl
mov
xchg
cwtl
test
and
xorb
call
repnz
inc
loope
std
lock
repz
insb
scas
pop
jns
loop
cmpsb
mov
bound
enter
imul
iret
mov
mov
fstpt
jmp
ds
adc
xchg
cld
push
lcall
out
or
mov
repnz
cmp
sar
add
inc
add
mov
or
adc
adc
pop
mov
lahf
aaa
nop
stos
fdivr
inc
cs
xchg
pop
or
mov
mov
in
out
pop
sbb
pop
jbe
movsl
mov
clc
sub
stos
cmp
xor
stos
or
andb
popf
mov
sbb
mov
inc
lret
jecxz
dec
movsb
pop
or
inc
lret
mov
push
add
mov
mov
or
into
loope
int3
add
aad
push
mov
pop
mov
add
jge
push
pop
std
add
and
jl
sub
jno
pop
add
jmp
sbb
adc
stos
imull
xor
jg
fsubl
sub
push
pop
mov
lods
clc
jno
stos
dec
ss
fisttpll
jle
xchg
or
and
jl
sub
cmp
test
and
mov
out
aaa
add
inc
mov
pop
mov
jne
sub
inc
js
mov
scas
or
add
scas
pop
dec
jbe
loope
adc
xchg
lea
pop
testb
push
jmp
lcall
fsubp
pop
out
inc
test
xchg
jno
call
cmp
ljmp
cmp
out
mov
enter
es
leave
rcrl
jmp
xchg
cmpsb
call
cs
push
movl
add
push
daa
cmpsb
adc
js
jno
mov
test
enter
cmpsb
lret
mov
xchg
sahf
fistpl
jnp
rcrb
andb
dec
cmp
jmp
pop
pop
ljmp
or
outsb
jo
mov
sbb
push
shlb
cmpsb
js
loope
mov
mov
jb
inc
jp
dec
push
in
jbe
js
xchg
xor
enter
jecxz
or
in
cld
scas
dec
loop
test
mov
mov
dec
inc
mov
loopne
ficoml
dec
xor
or
outsb
gs
nop
lret
or
outsb
scas
loop
push
aaa
loopne
xor
imul
out
xchg
xor
movsb
pop
dec
jle
dec
jmp
mov
ljmp
loop
test
sbb
shl
out
out
push
xor
jl
mov
bswap
mov
mov
das
add
jbe
sub
mov
pop
cmp
jb
stos
push
outsl
pushf
push
lods
call
mov
push
ret
dec
sbb
jne,pn
mov
icebp
mov
or
movsb
mov
ja
jb
cmp
data16
test
or
in
in
sbb
inc
aam
mov
lods
pop
mov
and
cmpsl
ret
and
fs
adc
cld
sub
imul
notb
fistl
sti
jne
sbb
fisubs
inc
mov
subb
inc
mov
mov
add
rol
nop
inc
pop
and
iret
mov
imul
sub
xor
stc
jl
je
cmp
leave
in
ret
pop
std
sar
inc
cmp
mov
std
orl
jl
inc
add
cli
push
mov
mov
adc
sub
jmp
bound
jae
push
cmp
pop
or
push
in
stos
test
pop
imul
pop
leave
xchg
push
stc
xchg
pop
mov
pushf
sub
lods
stos
push
push
dec
mov
and
fs
jge
xor
mov
stos
cmovg
push
xor
test
inc
xchg
cmp
jae
jecxz
and
push
hlt
adc
fabs
mov
int
imul
outsb
adc
pop
test
imul
pop
inc
icebp
fisubl
test
mov
in
adc
adc
ficomps
imul
pop
pushf
mov
fyl2xp1
inc
xor
adc
andb
add
mov
mov
mov
cmp
in
push
out
fwait
mov
rorl
push
movsl
pop
mov
mov
mov
mov
shll
mov
jb
sub
fdiv
je
outsb
test
push
dec
sbb
and
int
flds
jmp
loop
xor
fadd
xchg
sbb
push
test
inc
movzbl
ljmp
mov
cmp
xor
js
inc
jns
movups
xor
pop
push
jge
leave
pop
mov
and
mov
imul
sub
in
scas
bound
sbb
clc
sub
mov
xlat
sub
loop
cld
dec
ss
test
jg
mov
mov
aad
mov
mov
xchg
sbb
outsb
xlat
add
push
rclb
icebp
rcl
es
inc
scas
lret
cmc
lea
cmp
repnz
pop
xor
mov
or
and
fs
in
pop
inc
ja
sub
push
gs
jae
jne
frstor
sub
jno
inc
cli
mov
js,pn
stos
out
aam
lret
mov
mov
adc
cli
pop
jno
imul
cmp
jo
fsubrl
data16
cmc
mov
jnp
pop
sbb
repz
jae
sar
arpl
xchg
addl
cmpsb
lret
nop
mov
add
jnp
pop
in
jmp
push
pop
sbb
imul
mov
sbb
addr16
cmpsb
aaa
push
repz
dec
in
pop
scas
dec
xor
insl
divl
lods
out
cmpsl
or
cmp
imul
sti
lods
sbb
pop
lret
aad
mov
popa
cmpsl
les
flds
in
mull
mov
sbb
testl
and
xor
mov
cmpsl
sub
push
stos
jo
ja
test
clc
inc
sub
jae
sbb
mov
xor
sub
xchg
jecxz
out
out
mov
loopne
dec
adc
pop
sti
scas
dec
push
ss
std
cmpsl
push
mov
jmp
sbb
xchg
mov
pop
inc
xorb
mov
fildl
faddl
hlt
pop
pop
xchg
pushf
pop
and
cmp
sbb
jl
das
jp
add
mov
push
pop
mov
mov
in
cli
mov
cmp
xor
out
xor
adc
movsl
lahf
fnstenv
ret
repz
sti
and
push
test
jns
sarb
out
enter
enter
bound
loop
gs
mov
out
shrb
fbstp
rclb
outsl
adc
jmp
jo
repz
cwtl
push
mov
adc
addr16
fidivs
dec
popa
insl
pop
ja
out
sbb
into
mov
daa
pop
sbb
xchg
lds
fld
xchg
mov
aam
mov
fnstcw
pop
sahf
out
and
aaa
add
out
inc
loope
jle
xor
sbb
icebp
fisubrl
insl
es
sub
jb
inc
insl
xchg
sbb
push
ror
cmp
mov
and
xchg
dec
pop
jnp
out
in
lea
ds
xchg
shll
xchg
xchg
jle
mov
cmpsl
push
mov
out
and
sbb
lahf
gs
dec
iret
and
and
loop
cli
repnz
stc
dec
lahf
ja
sbb
aad
mov
pop
and
sbb
add
ret
int3
push
pop
push
xor
jmp
mov
sar
xchg
imul
adc
addl
mov
addr16
mov
arpl
xlat
mov
cmpsb
sub
fldt
movsl
jne
add
pop
xchg
mov
lret
pop
movsl
cmpsl
test
jbe
add
adc
add
add
loopne
pop
decl
mov
outsb
lods
pop
cmp
inc
mov
push
leave
scas
jecxz
and
push
push
dec
call
adc
in
enter
adc
mov
add
jno
sbb
cli
sbb
cmp
rcrl
stos
xor
ss
addr16
adc
gs
pushf
lods
dec
bound
out
shrb
inc
mov
ljmp
daa
enter
mov
mov
add
in
out
sti
fnstenv
mov
int
xchg
out
lahf
and
add
dec
jb
pop
data16
xlat
icebp
xchg
mov
pop
dec
adc
cli
mov
mov
push
xor
sub
xor
mov
sub
sub
mov
or
loopne
in
mov
jnp,pt
xor
xor
leave
sub
cmp
mov
pop
fiaddl
ljmp
fidivs
xchg
hlt
mov
mov
repz
mov
adc
and
add
mov
inc
nop
gs
adc
mov
xor
int
jns
rolb
jbe
into
push
stc
add
add
mov
ss
xor
add
adc
in
sbb
push
jecxz
repnz
test
and
and
loop
mov
xchg
scas
lea
sahf
mov
jb
and
mov
orb
das
add
jns
out
inc
repnz
xor
pop
xchg
mov
sahf
ljmp
stc
lret
inc
loope
lret
jecxz
cmpsb
cmc
xor
ficomps
inc
blcs
pop
dec
gs
pop
dec
arpl
push
mov
and
mov
mov
in
ret
daa
jno
stos
mov
pop
bound
pop
pop
dec
jge
xor
ret
sub
lcall
add
pop
adc
hlt
mov
pop
fucom
jne
push
in
jae
dec
adc
or
cmp
insl
sbb
stos
sbb
sub
pop
mov
sub
push
mov
mov
int3
ret
xchg
mov
xchg
jne
cmp
dec
js
push
iret
mov
in
push
push
ret
pop
stos
inc
xor
xchg
and
jno
push
and
cmpsb
ficomps
sub
outsl
mov
jne
adc
cmpsb
test
aaa
pushf
imul
dec
mov
jle
ds
adc
inc
or
loopne
test
pop
jb
loope
fs
cs
xchg
rorb
mov
mov
es
hlt
mov
addr16
call
imul
cmp
clc
mov
jae
pop
pop
inc
push
loop
adc
out
dec
ds
test
aam
dec
popa
xchg
jmp
les
fcmovb
or
fdivrl
mov
xchg
and
lahf
mul
cld
jle
loope
adc
roll
leave
jecxz
fs
jl
sarb
loope
pop
jo
xchg
divb
shll
jl
sbb
ljmp
lcall
fadds
mov
js
aad
icebp
or
jp
xorl
xchg
js
es
lcall
push
inc
adc
in
iret
addps
aas
scas
jl
shlb
insl
sbb
sbb
and
push
js
push
ret
pop
pop
cmc
lea
ljmp
fildll
and
dec
imul
nop
iret
cmc
fldenv
lds
push
aas
sbb
loop
iret
cs
cmp
insb
cmpsb
ret
stos
pop
and
pop
push
ljmp
cmpsb
adc
addl
imul
sub
lcall
jp
pop
push
rcrb
mov
adc
mov
cmp
xor
mov
es
or
in
sbb
iret
xor
mov
cmp
mov
rcrb
rcll
cmp
and
sbb
mov
lret
ret
scas
push
mov
jmp
inc
and
add
push
les
ss
sbb
jl
or
arpl
cli
jl
lret
and
xor
jbe
repnz
insl
enter
jmp
sti
cmc
and
mov
cmpsl
adc
sahf
cmp
pop
mov
fdivrl
bound
dec
dec
aad
or
mov
xor
cmp
pop
xchg
loop
xor
shrl
shrl
jo
cmp
mov
mov
cmp
jl
push
scas
or
lods
imul
int3
xorl
push
inc
imul
xchg
lods
mov
mov
xor
in
cmp
jo
xchg
das
dec
push
imul
cltd
and
jae
out
lret
data16
mov
imul
mov
std
in
sti
xor
xchg
inc
dec
mov
lret
sbb
dec
dec
jns
mov
ficoms
dec
xchg
imul
lds
movsl
pop
insb
or
loop
pop
mov
dec
push
add
push
leave
fwait
out
shr
jmp
filds
add
lcall
clc
clc
sbb
xor
jl
clc
je
jp
sarl
pop
xchg
das
push
cmp
aam
cld
movsl
xor
and
nop
fiadds
jg
in
adc
rol
ss
insb
push
and
pop
inc
push
pop
mov
jns
jl
insl
pop
xchg
mov
js
cmpsl
outsl
add
repz
mov
add
rcrl
cmpsb
xor
dec
dec
and
or
jp
in
cmc
mov
mov
imul
or
pushf
outsb
xchg
repz
pop
push
lods
cli
je
jb
mov
mov
push
pusha
fwait
mov
aad
or
cs
rorl
cmp
arpl
push
pop
fldt
popa
push
gs
dec
and
mov
movsb
stos
movl
jge
and
cmp
pop
rcll
add
add
cld
xor
add
dec
jp
or
lret
iret
or
sbb
pop
mov
popf
lods
lret
enter
lcall
in
fwait
test
jo
sbb
jae
add
rcll
stos
cs
cmc
data16
std
rcrl
popf
mov
popf
fsubrl
push
push
pop
fucomip
rclb
aaa
scas
mov
mov
inc
rcll
loope
mov
in
xchg
sahf
and
ss
dec
daa
sbb
mov
xchg
ret
pop
xor
das
imul
cmp
rcrb
mov
mov
jecxz
cmpsl
nop
cld
mov
stos
test
adc
pop
add
int3
xchg
mov
mov
movsl
lea
in
in
dec
adc
bound
popa
adc
pop
fisubrs
xor
add
xor
mov
inc
xorb
mov
or
lock
adc
cmp
push
push
adc
mov
subb
mov
adc
in
xor
xor
adc
cld
add
addl
sahf
popa
scas
jno
push
pop
adc
push
xchg
shl
xchg
xchg
ret
gs
sti
mov
push
shl
ljmp
mov
fldl
add
add
xchg
out
ja
movl
addb
add
add
add
add
add
add
add
add
add
daa
mov
add
add
add
addb
add
add
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
jae
jb
jo
add
incl
add
add
add
or
or
adc
add
add
add
adc
add
xchg
push
add
add
add
add
add
and
add
arpl
mov
sbb
sbb
sbb
sbb
sbb
ja
sbb
and
pop
jne
and
inc
outsl
outsb
pop
push
push
add
outsl
imul
cmp
mov
mov
push
or
add
cld
xor
pop
incl
mov
test
mov
adc
push
test
push
add
ljmp
cld
xchg
pop
inc
test
add
xchg
inc
cmp
add
incb
add
push
adc
jmp
add
cwtl
pop
add
mov
pushl
push
add
mov
loope
jmp
inc
jmp
sbb
dec
push
lock
inc
lock
cmp
incl
adc
call
add
lret
cmp
and
cmp
incl
lea
adc
push
jne
lea
adc
add
pop
add
aaa
sbb
add
add
sbb
sti
sbb
sbb
sbb
sbb
fistps
sbb
sbb
add
add
je
jae
xor
insb
add
imul
insl
gs
xchg
add
outsl
js
add
jo
insb
jae
xor
fs
inc
jns
popa
add
add
outsl
jbe
fs
gs
popa
push
add
add
add
add
add
add
inc
daa
repnz
add
add
add
mov
add
add
add
add
add
xchg
cmp
xor
ret
pop
jge
pushf
cmc
cmp
xchg
test
std
push
inc
mov
push
inc
dec
cmp
pushf
pop
out
loop
pop
sti
inc
xchg
int
pop
cmp
pop
jg
outsb
add
outsb
in
bound
dec
mov
loope
loop
mov
test
shll
xor
adc
push
repz
mov
dec
adc
adc
jp
aam
and
jno
popa
inc
push
jmp
push
push
int
test
lods
push
xchg
mov
push
mov
cltd
push
mov
sahf
ss
or
jno
test
sbb
andb
cmpl
or
inc
push
cwtl
xlat
cmc
ljmp
cmpsl
ja
dec
popf
sub
pop
mov
mov
cmp
int
mov
gs
push
pop
loop
rcrb
xor
xor
pop
stc
push
mov
rcrl
jge
aad
dec
repnz
test
call
loope
add
test
jno
lods
arpl
jecxz
outsb
push
mov
mov
fistl
xor
repz
mov
sbb
mov
jns
mov
jecxz
sub
addl
loopne
adc
push
fsubr
cmc
inc
movsl
xor
sbb
sub
inc
rcll
pop
ljmp
mov
or
mov
push
cld
out
dec
adc
or
ja
adc
cltd
or
and
mov
or
jo
xchg
xchg
mov
out
sti
sub
outsb
or
and
pop
je
mov
dec
push
je
mov
orb
mov
sbb
fiadds
adc
dec
dec
repnz
std
xchg
notb
add
mov
cmc
movsb
lret
mov
sarb
in
cmp
mov
push
jno
mov
dec
icebp
lahf
or
mov
sbbl
xchg
insb
adc
xchg
gs
popf
mov
stc
xor
fbld
imul
neg
loop
add
dec
pusha
dec
jp
imul
adc
and
fsubr
xor
adc
xor
cltd
add
mov
and
inc
mov
xchg
fldl
pop
test
inc
mov
and
adc
and
pop
inc
lahf
scas
push
mov
push
jmp
les
adc
mov
push
pushf
or
mov
mul
loope
and
cld
dec
and
imull
incb
mov
dec
rdmsr
jae
or
cs
jnp
sbb
ret
mov
mov
test
push
cmp
icebp
into
inc
lods
stos
mov
push
dec
aaa
stos
sbb
cs
cmpsb
push
mov
adc
push
fdivs
cmp
cmp
sub
and
inc
std
push
mov
cwtl
rcrl
sbb
and
add
clc
stos
jmp
ret
push
push
add
fiadds
mov
inc
mov
inc
jp
push
and
mov
insl
in
ret
sub
in
mov
pop
cmc
add
mov
iret
and
pop
push
dec
or
test
sub
push
jnp
setb
xchg
dec
add
jl
jne
es
fwait
cmp
bound
psrad
add
mov
adc
xchg
inc
arpl
add
int
sub
jbe
ret
fwait
sub
fcmovnu
lret
pop
ret
or
addr16
xor
outsb
je
push
ljmp
add
add
in
pop
inc
and
jg
jae
jle
adcl
out
pusha
rcrl
pop
int3
mov
faddp
out
jns
and
dec
imul
push
sbb
data16
pcmpgtb
std
mov
iret
xorb
test
pop
adc
push
inc
sbb
shll
ja
xor
mov
idivb
xchg
hlt
pop
xchg
mov
mov
ljmp
jl
test
in
fimuls
shrb
mov
adc
mov
cmp
xchg
jmp
fcompl
mov
push
or
mov
mov
xchg
out
cltd
cli
jno
fildll
arpl
xorl
loope
push
adc
or
cmp
sub
fcos
movsb
ret
fadds
aas
stos
and
es
and
pop
in
adc
adc
out
dec
out
cwtl
loopne
push
pop
movsb
xchg
bound
fidivs
subl
and
or
imul
dec
stos
popf
push
mov
push
stc
mov
xchg
add
mov
adc
jbe
notb
pop
rolb
or
adc
xor
mov
or
inc
sub
mov
inc
int
lods
xchg
in
and
and
xor
aaa
inc
pop
lret
sub
call
adc
lret
mov
cmp
xchg
fs
loopne
push
subb
lahf
mov
inc
mov
cld
add
mov
jp
jge
or
mov
or
mov
fwait
les
mov
or
frstor
sub
int
loopne
hlt
push
push
adc
pop
mov
test
inc
enter
subb
adc
jbe
flds
and
lcall
and
xor
incl
add
or
mov
push
enter
xor
or
outsl
mov
clc
adc
mov
or
repnz
jbe
sbb
shll
add
outsb
dec
leave
cmp
fidivs
pop
dec
decl
loope
cmp
fstpl
push
mov
inc
pusha
push
xchg
loop
frstor
cli
lret
sub
imul
out
jns
lcall
push
mov
mov
add
dec
jecxz
movsb
push
xchg
push
fildll
push
ss
mov
jg
mov
push
xor
out
push
roll
movsl
xchg
sbb
mov
stos
cmp
cmp
test
push
daa
mov
cmp
cmpsl
xchg
loope
dec
popf
aam
and
xchg
mov
push
mov
or
mov
add
jle
mov
and
sbb
fcomps
pop
andl
into
push
mov
inc
add
lock
jp
icebp
cltd
push
xor
jp
int
test
daa
mov
mov
sub
test
neg
mov
and
pusha
add
xchg
push
stos
push
sbb
ds
xchg
stos
pop
mov
and
cmp
xor
pop
arpl
cmc
adc
movb
xlat
mov
cwtl
ror
sbb
push
addr16
test
xchg
xchg
push
pop
inc
aam
enter
rol
fnstsw
add
xchg
test
jb
icebp
ret
push
int3
mov
cmp
rorl
test
sarb
pop
je
fidivs
or
pusha
inc
jl
mov
bound
pop
dec
aad
testb
or
push
aam
cmp
ja
xchg
dec
push
or
xor
mov
pop
mov
lcall
pop
imul
data16
xchg
fdivrl
lea
mov
arpl
rorl
dec
and
pop
adc
jecxz
jmp
aad
sub
lahf
lahf
lret
std
icebp
xchg
xor
idivl
shll
popa
push
aaa
xor
push
mov
test
jnp
mov
mov
cmpsb
xchg
es
jb
sub
cs
jne
gs
and
lock
or
adc
sbb
or
stc
dec
out
pop
push
leave
jno
cwtl
fistpll
push
xor
inc
and
push
cmp
pop
je
mov
xchg
pop
pop
cmp
cmp
lret
cld
rol
fcomps
sbb
jge
into
fcoml
inc
clc
adc
or
ds
roll
lock
inc
rcr
outsb
adc
movsb
cmp
or
cmp
arpl
mov
test
shll
xchg
mov
nop
enter
shlb
push
lods
das
cmp
test
div
or
addr16
mov
popa
xor
mov
push
mov
outsb
xchg
cmp
fdivrs
fdivrp
ret
and
dec
in
out
mov
xor
cmc
jo
shlb
mov
sub
test
mov
cs
je
pop
pop
mov
popf
je
mov
jp
sbbb
xchg
cmpsl
stos
mov
pop
adc
insb
mov
mov
xor
sbbb
lock
push
cmp
testb
cmp
and
jns
jno
push
add
and
inc
pop
dec
push
jae
and
cmp
bound
fwait
sbb
lock
jmp
add
shl
jno
fimull
lods
outsl
mov
addr16
fldcw
je
push
cmp
aam
adc
dec
scas
inc
cs
adc
popa
popa
daa
push
test
scas
ljmp
mov
imul
mov
mov
daa
out
push
lret
ret
xchg
push
xor
mov
lahf
pusha
ss
sbb
in
xchg
sbb
and
mov
lea
fidivs
fcom
int3
lock
push
out
scas
push
ret
sbb
addr16
pop
dec
loopne
sahf
lret
movsl
inc
mov
dec
inc
aad
or
pop
add
inc
xor
outsb
into
fidivs
cld
sub
sbb
cltd
movb
inc
adc
imul
into
int3
mov
push
xchg
mov
pop
adc
or
in
scas
cld
fs
scas
leave
adc
out
push
std
mov
mov
adc
std
xchg
outsb
cmp
sub
sahf
orb
sahf
jnp
sub
ror
mov
pop
pushf
and
arpl
jne
dec
adc
arpl
test
jecxz
cmpsb
loop
jne
push
repz
aas
adc
cmp
cmp
test
call
rcll
inc
jb
test
xorl
out
ja
out
xlat
ret
adc
jae
inc
jne
mov
xchg
lds
pusha
mov
out
cmp
add
clc
pop
jg
push
cmp
in
push
xchg
out
push
cmp
loop
movsl
in
shl
dec
mov
jnp
cmpsl
xchg
pop
es
sbb
popf
add
fists
mov
or
sarb
call
iret
push
jle
in
cmp
testb
cmp
lods
cwtl
sbb
ljmp
pop
pusha
sub
and
aad
and
jmp
std
cmp
cmpsl
mov
adc
mov
sbbl
push
hlt
mov
ds
or
xchg
stos
jo
ficompl
jp
pop
test
mov
fs
idivl
cmp
mov
cmpsl
cmp
xor
add
imul
dec
jne
and
in
movl
cmp
push
je
cmp
test
test
add
sahf
jp
mov
test
clc
pusha
fadds
popa
sbb
jnp
cmpb
leave
push
and
out
push
es
lahf
sub
imul
sub
pop
sub
pop
inc
xor
cmp
imul
test
jge
mov
xchg
fmuls
loopne
xlat
lret
subb
clc
mov
jecxz
pop
lds
or
jae
jae
maskmovq
notl
add
sbb
out
aaa
or
lahf
pusha
es
aam
pushf
jle
cwtl
pusha
int3
mov
leave
out
add
add
popa
add
divl
and
mov
sbb
cld
test
mov
inc
fisttps
sbb
lcall
daa
mov
out
xchg
jnp
popf
insb
push
data16
sbb
mov
fidivrs
scas
loop
dec
jle
test
popa
push
inc
and
daa
loop
cwtl
xchg
jle
xor
rcl
xchg
push
mov
cmpsl
push
pusha
mov
ja
cmp
mov
and
ja
sahf
sbbb
stos
div
or
loop
cmpsb
mov
mov
lret
aam
fwait
loopne
cmpsb
xchg
push
jl
sbb
lods
mov
rolb
cmpsl
push
pop
in
aam
mov
decl
aam
stos
cmpsl
mov
xorl
sub
sti
mov
xor
mov
xchg
ret
cmp
ja
dec
mov
pop
cmp
ljmp
xchg
lcall
dec
jge
mov
icebp
mov
sbb
clc
fwait
pushf
lds
or
inc
jae
adc
mov
push
test
adc
mov
jb
loopne
clc
mov
xchg
arpl
cmp
lods
pop
into
inc
repz
decl
fnstenv
shr
push
jo
mov
jle
hlt
xchg
or
cmp
jne
cmp
cmpsl
jecxz
enter
and
addl
sbbb
xchg
inc
popa
cmp
mov
dec
leave
clc
hlt
aas
fwait
adc
ja
ret
xor
jl
mov
inc
inc
std
filds
fnsave
jg
outsb
loope
pop
negl
call
xor
xor
mov
movsl
loope
ss
xlat
in
sub
push
cli
jne
mov
mov
repz
cmp
xchg
xor
rclb
pushf
sub
pusha
or
push
inc
add
sbb
push
jnp
push
pushf
cltd
lahf
ret
mov
scas
xchg
dec
mov
nop
sub
sbb
pop
decb
xlat
fnstsw
fstpl
and
mov
shrb
je
addr16
sub
fnstsw
mulb
push
test
push
pop
adc
lcall
leave
push
mov
dec
rorb
ljmp
ds
sti
aam
and
stos
lods
sbb
int
jmp
fs
xor
sub
repz
ror
roll
push
cmp
fmul
pusha
out
push
xchg
add
add
mov
and
popf
jl
out
mov
mov
mov
mov
ss
and
inc
fsub
dec
dec
test
mov
cld
sahf
subb
mov
jae
enter
or
sub
jle
adcb
mov
call
or
rcl
cltd
xchg
mov
sub
sbb
dec
mov
imull
pop
push
cltd
adc
movsl
push
and
test
and
xchg
xor
andl
add
mov
aas
xlat
push
and
sbb
jb
push
inc
push
jl
jb
or
pop
jnp
pop
add
clc
xchg
pop
sub
inc
mov
pushf
mov
jecxz
xor
andb
mov
mov
sbb
insl
rorb
pop
jl
jns
cli
pushf
data16
imul
cwtl
dec
push
xchg
fwait
push
inc
cltd
clc
into
daa
inc
xor
or
gs
out
dec
outsb
stc
or
gs
jl
add
add
dec
icebp
push
in
enter
in
and
adc
jg
jne
cs
sbb
push
sbb
xor
cmp
lods
push
cltd
sbb
shl
pop
adc
sub
mov
jns
mov
and
inc
mov
gs
jle
inc
roll
mov
mov
int3
cltd
shll
jecxz
push
sub
addr16
sar
insl
orb
scas
test
test
inc
cld
test
ret
iret
fdivl
mov
sub
sub
ds
sti
insb
in
test
xchg
cltd
pop
in
sbb
pop
rcl
xchg
xchg
leave
push
push
push
mov
imul
xchg
inc
mov
aad
cmc
cwtl
mov
pushf
fnstsw
xchg
add
xor
jb
cmp
imul
test
or
adc
fsts
cli
std
inc
push
jle
pop
jecxz
xor
mov
inc
push
sbb
push
adc
loop
jge
xchg
out
mov
mov
outsb
mov
shrb
movsb
cmp
mov
and
fsubrs
jno
lods
or
ficomps
jecxz
push
ja
jns
inc
cmp
dec
push
inc
je
rcll
xor
sbb
xchg
mov
dec
imul
mov
sbb
and
jg
cmp
iret
jle
movsb
in
out
or
repnz
mov
push
or
je
popf
mov
push
popf
in
in
lcall
int
sbb
push
push
pop
mov
and
int3
push
jg
sub
sti
leave
and
ret
and
cmp
sub
mov
jle
push
inc
mov
cmp
lods
aas
repnz
xor
inc
cmp
gs
sbb
push
lahf
mov
jne
scas
sbb
loope
sbb
xor
mov
push
nop
lret
jmp
and
xchg
mov
mov
cs
xor
pop
cmp
dec
cmp
xchg
repz
dec
sbb
add
insl
jg
push
mov
xchg
sbb
nop
int3
sub
sub
mov
mov
push
cmp
test
cmp
lret
pop
mov
sbb
ds
cmp
stc
push
mov
mov
push
mov
aad
aam
dec
jb
cld
sti
mov
cmp
pusha
sbbl
dec
xor
and
inc
outsb
mov
fwait
mov
loope
jns
addr16
out
push
nop
sahf
fnstsw
pop
cmc
or
test
clc
or
xchg
insb
aaa
enter
int3
or
or
pushf
sar
scas
call
xchg
in
inc
push
xchg
ret
leave
jnp
ret
out
pop
mov
insl
adc
les
xor
inc
lahf
sbb
outsl
inc
lds
xchg
and
push
lods
jno
in
addr16
mov
jg
fidivl
cmp
adc
sbb
cmpsl
sub
repz
lods
mov
cmp
ficoml
and
cmp
jo
jmp
mov
lahf
popf
mov
push
or
dec
fldl
scas
imul
ja
and
mov
lret
sub
outsb
sbb
cmp
pop
push
mov
push
inc
lcall
stos
push
jp
lahf
adc
xor
lret
pop
in
add
pushf
cmpsl
xchg
out
xchg
outsb
ret
and
icebp
mov
call
ret
jbe
aas
out
push
es
dec
jns
frstor
inc
dec
popf
cli
push
push
xchg
ror
lret
xor
daa
add
jecxz
xchg
adc
mov
jbe
xlat
lret
sub
sbb
in
xchg
inc
xchg
jnp
jnp
outsl
add
pop
ja
add
add
add
add
pop
rolb
add
add
add
add
add
add
inc
daa
repnz
add
add
add
mov
add
add
add
add
add
add
add
add
add
addb
add
adc
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
pop
add
add
mov
add
xor
xchg
add
add
ja
add
add
add
or
add
add
jb
add
add
add
dec
add
add
add
add
add
push
sbb
sbb
add
loopne
jns
jne
dec
arpl
test
jo
push
jb
inc
enter
jecxz
out
jne
fimull
add
loopne
clc
adc
mov
fwait
mov
or
repz
idiv
idiv
cs
sbb
jmp
fldl
lock
clc
clc
pushf
mov
xor
sub
out
pop
add
push
ljmp
call
mov
inc
pop
add
jbe
adcl
je
test
xor
decb
cmp
test
incl
adc
test
cmp
or
or
adc
cld
call
or
adc
push
adc
je
clc
loopne
clc
mov
movsl
incl
mov
push
inc
cmp
add
add
push
adc
sbb
add
add
add
add
sbb
add
sbb
sbb
sbb
test
imul
add
gs
inc
inc
inc
outsl
add
arpl
gs
inc
outsl
push
insb
add
jb
push
jae
outsl
inc
add
je
xor
add
gs
add
je
add
pop
add
xor
add
add
add
add
jecxz
add
add
add
add
adc
add
add
addl
add
add
movsl
adc
mov
movsb
push
mov
jge
push
inc
push
fisubrs
pop
call
repnz
pop
xchg
insb
scas
icebp
fstpt
add
cltd
push
xor
ja
push
stos
les
sub
push
js
jmp
inc
sbb
cwtl
mov
into
inc
dec
inc
jle
adc
jle
and
fcmovne
repz
jae
into
jge
pushf
push
xchg
je
mov
out
mov
xchg
in
scas
aaa
dec
aad
jb
rclb
lahf
sub
inc
daa
lret
lea
insb
shlb
add
data16
fistps
ret
sahf
mov
fs
push
fsub
scas
cwtl
fadds
sbb
xchg
ljmp
mov
sbb
sbb
push
ja
out
in
pop
fsubr
push
mov
mov
pop
cmp
test
pop
pusha
sub
mov
rcll
mov
cltd
ficoml
pop
sbb
dec
sbb
cmp
loopne
insl
mov
out
shlb
cmpsb
fstl
cwtl
and
fcoml
sub
adc
pop
dec
cs
push
gs
int3
push
adc
pop
sub
outsb
mov
test
xorl
pop
adc
sub
cld
inc
or
jnp
xchg
fyl2xp1
and
adc
or
ret
inc
and
ss
cltd
xchg
in
addr16
pusha
inc
sbbl
lret
add
jne
inc
insb
ds
jecxz
int
stos
popf
dec
jns
sarl
popa
add
fbstp
repnz
mov
fildll
mov
xor
hlt
cmpl
push
add
lods
bswap
imul
inc
test
out
sti
and
add
int
push
push
xor
jle,pt
xor
clc
dec
mov
inc
sbb
push
cmp
jne
lret
jg
xlat
mov
rcll
fnsave
jmp
incl
popf
mov
push
push
sbb
movsl
lods
dec
dec
push
jb
sub
rcrl
push
je
push
icebp
pop
and
xchg
jbe
adc
clc
fmul
negl
lret
cs
push
jae
js
adc
enter
loopne
sub
scas
loope
mov
xor
lods
push
lret
dec
inc
mov
mov
sbb
lods
outsb
in
movsb
mov
dec
cmp
dec
dec
mov
mov
sbb
xchg
leave
nop
cmp
adc
jae
gs
xchg
jmp
sbb
imulb
and
mov
xor
and
or
jecxz
cmpsb
inc
sbb
inc
xchg
stos
mov
icebp
push
xor
cmp
sbb
add
jl
lcall
into
inc
es
scas
push
fwait
outsl
pushf
mov
out
fisttps
cmpsb
cltd
xchg
fdivr
mov
hlt
fstl
je
mov
shl
push
mov
int3
cmp
xor
icebp
push
dec
xor
add
jle
clc
sbb
aam
cmpsl
sahf
cli
jae
insb
aas
dec
lret
adc
mov
lret
pop
nop
pushf
cmp
pop
les
push
dec
cmc
inc
add
sbb
pop
pop
dec
xor
andl
xor
add
lahf
cs
mov
sub
fcoml
xchg
mov
jg
jb
aas
cmpsb
sub
fwait
in
adc
fsubs
jmp
pcmpgtb
cmp
mov
nop
dec
loop
cmc
outsl
or
cltd
push
sbb
xor
push
jmp
mov
mov
movb
mov
mov
shr
or
adc
arpl
or
inc
in
ret
or
mov
arpl
inc
cs
pop
div
pop
rcrl
xor
inc
add
stos
sub
cmpsl
jle
adc
mov
mov
sbb
int3
scas
movsl
xchg
jno
mov
pop
leave
xchg
mov
adc
dec
add
mov
xchg
push
xchg
or
adc
notl
repz
inc
jg
mov
or
and
sub
pop
loop
movsl
lea
aaa
cmc
int
stc
mov
pop
lahf
incb
cmp
addl
push
cs
dec
jns
out
pop
pop
adc
dec
lods
dec
loop
punpckhbw
leave
icebp
push
inc
dec
gs
imul
cmp
orb
add
xor
bound
pop
jne
cmpsl
lahf
jne
mov
adc
pusha
cmp
dec
push
push
insl
inc
mov
inc
mov
imul
ret
cmpl
jl
mov
pop
jp
movsl
jmp
xor
cli
addr16
cmc
xor
mov
xchg
sbbl
ret
mov
pop
aad
and
aad
lods
xor
sub
cmp
xchg
int
into
xchg
lret
xor
sub
push
jle
jecxz
sbb
das
in
stos
dec
mov
call
mov
mov
dec
add
and
mov
ret
mov
inc
out
sahf
push
orb
xor
xchg
inc
adc
or
mov
xchg
hlt
negb
test
jle
sub
jl
movsl
pop
jne
leave
mov
arpl
cmp
leave
jge
mov
pusha
xorb
aam
mov
pop
xor
negl
cld
push
ds
dec
lcall
mov
pop
iret
in
jmp
icebp
insb
mov
dec
and
xchg
sub
repz
insl
ss
imul
dec
xchg
push
mov
cmp
pop
sarb
into
addr16
mov
mov
lds
fisubl
ds
and
clc
movsl
or
iret
dec
dec
cmc
push
fisttpll
out
sub
scas
nop
xchg
in
call
stc
mov
pushf
arpl
hlt
jecxz
cwtl
or
bsr
into
add
add
call
mov
xchg
cmp
xchg
aaa
jno
nop
loopne
xchg
sbb
ret
enter
push
test
push
jp
insb
mov
inc
xchg
ljmp
pop
shll
jmp
out
sub
or
lods
leave
subl
sub
dec
xor
inc
cmp
rcrb
les
pop
push
fwait
pop
xchg
iret
loop
inc
jmp
fcomi
outsb
add
repnz
aas
jp
lahf
mov
ret
clc
mov
xor
mov
xor
std
test
cmc
shrb
dec
xchg
jb
jmp
enter
mov
cmc
cmp
in
out
mov
out
das
subl
xchg
rcrb
mov
fadd
cmc
mov
ss
fucomip
and
sbbb
mov
mov
dec
or
mov
jmp
jbe
int3
jle
cmp
adc
or
cmpl
divb
xchg
xor
adc
dec
sti
in
mov
adc
jecxz
cmpsl
jo
sbb
jle
dec
icebp
sub
xor
hlt
or
cmpsb
adc
xchg
dec
inc
lcall
sbb
dec
sub
repnz
cmc
test
and
fs
loop
push
lock
or
sub
pop
xor
jae
and
fwait
imul
inc
inc
pop
outsl
cmp
pop
rorb
sub
pop
xorb
cwtl
stos
inc
sti
cli
dec
call
push
inc
jnp
loop
sahf
shlb
aas
mov
inc
shrl
fcomps
push
dec
dec
gs
push
dec
add
push
cwtl
jmp
jl
movsb
out
add
dec
sub
test
shrb
fchs
mov
leave
lahf
lock
cmc
fimull
aas
jmp
test
data16
and
lock
out
push
roll
in
pop
repz
push
rclb
jl
adc
jmp
in
pop
adc
xchg
add
mov
xlat
xchg
inc
mov
cmpsl
add
cmp
idivb
cmp
push
lods
pusha
sbb
jp
out
pop
or
xor
adc
mov
dec
fidivrs
repnz
lret
sbb
pop
push
add
add
sub
mov
in
or
pop
dec
cli
jae
mov
xchg
xchg
adc
pop
lret
dec
add
pop
cmp
sbb
fidivl
movsl
mov
mov
jmp
sbb
das
test
popf
mov
shrl
sub
das
adcl
lds
add
sub
scas
imul
mov
dec
push
aam
lahf
adc
inc
jl
mov
xchg
sbb
push
ret
mov
pop
mov
mov
inc
xchg
pop
mov
bound
pop
negl
test
mov
xor
push
xchg
and
cmc
lods
sarb
push
sti
or
mov
xchg
and
pop
push
jo
out
push
xor
fcompl
jmp
xchg
xor
loopne
mov
outsb
ljmp
lcall
addr16
mov
insb
pusha
rol
adc
dec
ss
aad
add
adc
inc
fsubl
mov
cwtl
and
dec
push
mov
stos
lahf
es
addl
jno
cmpps
add
xchg
jno
js
mov
lahf
sbb
jns
stc
sbb
repz
test
imul
mov
or
and
mov
cmp
aas
and
push
add
wrmsr
ja
test
mov
outsl
add
push
jg
leave
jnp
sbb
js
ret
push
cmpsl
push
xor
adc
shlb
mov
arpl
mov
fdivrl
out
leave
in
movsb
cmp
cmp
pop
addr16
test
mov
shl
out
sub
nop
pop
and
cmp
fidivrs
mov
jge
xchg
cmc
shr
test
rolb
imul
mov
das
inc
movsb
jnp
scas
mov
push
cmp
int3
inc
fimuls
notb
in
in
fsubs
xor
add
mov
sub
xchg
jno
rcll
fwait
push
lcall
test
add
shlb
lea
add
xchg
xor
mov
clc
repz
inc
pop
push
dec
xchg
dec
cmovns
sub
sbb
dec
pop
roll
mov
in
sbb
insl
sbb
mov
aam
repnz
flds
xchg
aaa
aad
pushf
int3
subl
cltd
mov
in
daa
movsb
bound
cmp
js
shr
xchg
sbb
fdiv
arpl
xor
mov
flds
inc
push
sub
push
xor
jle
mov
aas
push
cmp
stc
mov
or
outsl
pushf
or
inc
enter
or
xchg
pusha
mov
scas
or
cld
gs
xor
sub
ss
xchg
test
mov
sbb
pop
icebp
cmp
ss
cmpsl
aas
mov
hlt
sbb
hlt
test
rorl
pop
mov
rol
jg
fisubrl
mov
dec
sbb
mov
xchg
popf
repnz
push
jmp
dec
scas
inc
and
stos
push
into
sbb
lds
imul
mov
imul
xchg
xor
sub
jle
cmpsl
es
mov
jno
adc
cld
pop
add
mov
cmp
je
xor
pop
sbb
cli
sbb
pop
addps
or
push
bound
pop
jmp
orl
push
adc
out
pop
repnz
in
pop
pop
pop
fs
mov
adc
jnp
xorl
roll
sahf
incl
mov
ret
or
sub
fs
mov
push
xlat
or
shl
and
mov
adc
mov
mov
push
push
clc
out
dec
addr16
shrl
add
mov
mov
enter
mov
dec
je
ljmp
push
mov
and
lret
pop
stc
and
out
xlat
or
iret
mov
add
lds
lods
mov
inc
shr
scas
out
stc
adcl
mov
add
orb
out
sbb
scas
mov
stos
scas
pop
sub
shl
jge
stc
cmp
cmpsl
cmp
cli
sub
outsl
jle
cli
fbstp
jmp
stos
data16
mov
nop
pop
mov
pop
mov
aaa
cld
cs
lods
mov
sahf
lods
xor
pop
and
pushf
ret
jnp
mov
sbb
xor
lcall
xchg
mov
xchg
mov
push
loopne
orl
mov
ffreep
sub
xchg
sbb
iret
scas
outsl
ja
lds
xlat
daa
mov
adc
adc
lret
mov
push
scas
mov
int
cmp
clc
dec
or
cli
push
or
cmpsl
and
mov
adc
push
pop
jge
imul
jns
sarb
test
rolb
das
mov
aam
repz
jne
ficomps
arpl
fsubrs
xchg
mov
jle
outsb
jecxz
jnp
adc
sub
xchg
adc
dec
sbb
mov
int3
hlt
lcall
lahf
mov
jge
cmp
lret
pop
mov
hlt
subl
ja
cmp
jecxz
gs
jp
add
mov
inc
adc
xchg
aaa
int3
test
fwait
sahf
mov
icebp
dec
adc
aas
pop
mov
and
cmp
and
rcrb
xor
in
pop
stos
push
adc
push
or
repnz
sbb
mov
dec
cmc
pop
and
sub
or
xor
lret
std
je
mov
pop
mov
mov
outsb
adc
mov
rcl
fimull
and
cld
mov
mov
pop
ror
xorl
loope
or
imul
push
arpl
aas
popf
jle
mov
xlat
aad
mov
lea
scas
and
mov
sar
sbb
mov
cmp
dec
or
sbb
sti
and
insb
and
std
dec
jb
xor
fsubl
imul
imul
sbb
push
inc
lock
mov
fcoms
inc
pop
sti
je
test
ja
stos
in
jo
je
enter
call
xorl
jae,pn
lods
stos
mov
push
shr
xchg
aas
addr16
mov
test
shll
sbb
aad
in
pop
cli
jno
pop
sahf
cmp
rol
mov
lret
dec
mov
fadds
test
in
mov
mov
stos
or
pop
push
rolb
jge
and
inc
cmpb
sbb
rcl
sub
scas
enter
lret
xor
fdivl
hlt
test
iret
xor
cwtl
stc
dec
aas
jnp
push
jo
outsl
jns
xchg
xor
fwait
scas
iret
insb
in
lock
cmp
leave
xchg
jmp
mov
rcr
sub
test
iret
mov
loope
aad
cmp
mov
adc
jo
lock
je
xchg
xchg
mov
dec
sub
sub
xor
xorb
sub
ret
sub
push
sbb
cs
imul
jecxz
mov
pop
jg
sbb
pop
mov
icebp
adc
inc
stc
dec
cmp
mov
adc
outsb
dec
xlat
cmp
clc
lock
push
mov
add
addl
insb
test
fwait
add
fwait
stc
rorb
lret
insl
repz
cwtl
je
xchg
pop
dec
jecxz
sub
les
cmp
or
pusha
add
call
shll
xor
adc
daa
imul
hlt
lret
mov
popf
scas
orb
xor
jecxz
sarl
sbb
pop
mov
test
push
lods
sub
fnstsw
adc
pop
in
pusha
mov
and
cmpb
in
jnp
adc
dec
icebp
sahf
jno
ds
scas
out
fidivs
cmp
sbb
xchg
lret
orl
in
icebp
mov
jnp
jne
or
in
mov
and
ret
inc
lods
sbb
ljmp
adc
push
push
inc
pop
jne
push
pshufw
mov
dec
aam
mov
and
sbb
cmpsb
or
inc
test
pushf
xchg
int3
inc
fstpl
ss
scas
cld
adc
sub
xor
ror
dec
cmp
sahf
mov
jg
ljmp
dec
add
sub
adc
pusha
inc
push
mov
aam
imul
jecxz
jmp
xchg
lds
jp
inc
int3
mov
mov
pop
push
cmp
popf
mov
mov
jnp
out
fildl
cwtl
popf
leave
mov
mov
sbb
ffreep
pop
xchg
jb
sbb
stc
enter
addb
sahf
sub
xchg
push
push
jbe
movsl
mov
and
cli
dec
outsl
or
ss
gs
xchg
in
shll
dec
pop
pusha
lahf
or
leave
mov
push
xchg
sbb
or
ss
leave
out
cmp
in
and
add
lahf
arpl
lahf
push
into
mov
pmulhuw
mov
pop
mov
push
outsb
stos
sbb
dec
jne
loop
inc
sub
cmpsb
push
xchg
and
or
lock
popa
bound
loop
and
incl
cmp
pop
push
push
dec
mov
and
sahf
xor
xor
pop
sbb
mov
inc
fnstenv
test
sub
mov
movsl
lret
xor
push
pop
es
pushl
sbb
jb
in
push
jne
fnstcw
xor
jmp
lds
adc
pop
push
xchg
sub
push
enter
xchg
dec
mov
pop
shrl
hlt
ds
je
imul
mov
loope
pop
stos
mov
aas
fnstenv
add
lods
xrelease
mov
inc
movl
jae
adc
bound
sahf
stos
add
out
fs
jne
mov
jg
push
cmp
adcb
js
aam
mov
ja
mov
xchg
lret
lret
jge
hlt
ljmp
out
mov
pushf
sbb
lods
jle
mov
jnp
add
insb
jge
lock
stc
xor
and
sub
adc
dec
pushl
ret
pop
push
daa
sbb
sahf
dec
cli
loop
add
jno
and
xchg
jo
std
or
in
jo
pop
fnstcw
mov
sbb
and
test
ljmp
xchg
in
cmpsb
dec
aam
add
xor
popf
or
jns
outsl
mov
in
outsl
fcmovu
xchg
and
into
and
add
add
add
add
add
add
add
add
movl
add
add
add
jecxz
add
add
add
add
adc
add
add
addl
add
add
add
add
add
add
add
xor
rolb
add
orb
fmul
int3
int3
int3
int3
int3
int3
int3
int3
dec
add
add
dec
pusha
arpl
add
add
add
add
add
add
rorb
add
js
mov
add
add
add
add
addl
xor
add
sub
clc
add
add
popa
and
ja
jae
inc
jae
dec
cmp
and
add
add
bswap
bound
movsl
inc
adc
xor
push
push
mov
pop
mov
sub
test
test
call
sbb
add
adc
mov
jno
dec
repz
lcall
push
call
idivb
jge
push
push
add
add
int3
call
adc
adc
je
push
call
decl
dec
and
call
push
incl
xchg
repz
add
push
add
test
int3
inc
lea
enter
inc
clc
adc
push
add
add
inc
add
adc
add
insb
add
add
add
add
add
add
push
add
add
inc
inc
add
outsb
gs
adc
push
popa
flds
push
gs
je
inc
outsb
gs
inc
dec
pop
mov
gs
add
popa
dec
insb
imul
shrl
outsb
add
inc
outsl
jb
xor
jb
jne
add
add
jmp
add
add
jo
add
add
add
push
dec
je
adc
nop
dec
std
pusha
mov
lock
gs
push
cmp
addl
mov
inc
shll
das
or
add
push
cmpsb
mov
add
jo
fs
mov
pop
loop
sub
incl
xchg
xchg
mov
dec
sbb
inc
xor
sbb
inc
movsb
add
cmp
lret
jg
scas
add
pop
cs
jl
imul
nop
in
popf
fsubr
and
icebp
push
xor
dec
sub
das
dec
xor
xchg
xchg
dec
xor
aas
and
jo
loop
jno
jge
aam
xchg
xor
test
scas
inc
mov
enter
jmp
mov
push
data16
fisubrl
das
pop
push
les
mov
cmp
outsl
movl
fcomps
insb
xchg
cmp
mov
and
push
out
push
dec
scas
stos
cld
pop
cld
xor
add
cmp
lcall
ljmp
push
ja
mov
xchg
fdiv
xor
mov
pop
leave
loopne
mov
lcall
dec
inc
jne
jns
inc
mov
adc
adc
jg
inc
aam
testl
imul
xor
or
int3
dec
sbb
cwtl
aas
lea
test
out
in
mov
and
and
mov
insl
shrl
rcll
mov
ja
das
add
insl
aad
and
add
dec
enter
in
push
xor
sbb
or
inc
xor
aad
dec
push
jmp
push
test
out
loopne
insb
add
out
sub
fs
loop
into
sbb
or
sbb
sub
into
fs
sub
cmpsl
data16
ds
mov
in
sub
adc
mov
add
test
mov
bound
aad
into
int3
jbe
mov
fwait
insb
jo
out
lock
push
xchg
lea
les
pop
inc
cwtl
xchg
pop
out
jp
mov
loop
jg
mov
cmpsb
sub
pop
inc
jb
stos
and
jno
int3
arpl
clc
in
fistpl
push
push
mov
bound
add
push
jle
adc
mov
dec
ljmp
in
jecxz
dec
pop
dec
inc
or
dec
mov
adc
push
cwtl
jb
ljmp
lret
or
popf
jnp
inc
mov
jnp
cmp
nop
add
ret
dec
fwait
xchg
int3
pop
imul
jae
andl
jns
pop
pusha
and
in
shlb
jae,pn
adc
sub
repz
in
inc
fisubs
push
and
dec
push
mov
push
ss
iret
lods
mov
ss
mov
xor
mov
sarb
das
mov
cmp
and
mov
adc
sbb
push
loop
out
test
aad
into
out
lds
or
mov
lret
test
mov
add
mov
inc
frstor
mov
push
shlb
movsl
or
pop
enter
pop
adc
mov
jle
sbb
jae
xor
pop
fdivrl
mov
jg
xor
in
xor
jnp
in
xchg
mov
add
cmp
mov
cs
daa
fsubl
mulb
rcl
ss
cmp
mov
stos
lds
fldcw
mov
clc
dec
add
push
pusha
add
xlat
sub
mov
dec
movsl
xor
push
aaa
fisubl
cmpsl
or
mov
movb
mov
jge
test
add
xchg
test
les
push
sbb
aad
fidivl
popf
inc
imul
insl
xor
dec
lods
in
lea
cmpsl
jne
cmp
xchg
gs
cwtl
cwtl
xor
adc
pushf
and
aad
push
lahf
leave
mov
pushf
in
xor
insb
repz
and
sbb
fnstenv
mov
sub
inc
scas
mov
push
xor
lods
repnz
xchg
xchg
cmp
gs
mov
adc
mov
or
icebp
int3
mov
clc
repz
inc
sbb
ret
aam
pop
and
jmp
push
out
sbb
xor
inc
mov
add
insb
leave
mov
mov
insb
jbe
scas
xor
stc
inc
pop
loope
mov
cmp
jns
pop
inc
subl
enter
jnp
hlt
jae
int3
fbstp
insl
jl
mov
or
pop
sahf
cld
xlat
sbb
jno
xor
push
inc
jecxz
sub
dec
clc
push
or
xor
aas
xchg
cli
xor
daa
adc
xor
mov
mov
dec
shrl
stos
mov
inc
addr16
les
pop
mov
les
jo
mov
lds
inc
mov
cmp
std
in
xchg
push
sbb
cmp
vpshlq
sub
daa
sbb
or
inc
jg
push
pop
sbb
mov
ror
and
xchg
test
xchg
repz
insl
pop
aas
add
mov
lods
and
adc
shr
inc
outsb
push
mov
fildll
lret
movsl
fs
xchg
xchg
lret
pop
xchg
out
lahf
cmc
adc
arpl
xor
dec
inc
xor
xchg
dec
addr16
cmpsl
js
mulb
icebp
test
dec
pushf
std
sub
loope
ja
inc
outsl
sbb
pop
lds
cmp
dec
gs
cmpsb
push
inc
add
and
dec
mov
in
xor
out
cmc
and
jmp
dec
call
fwait
pop
mov
sub
sbb
mov
mov
imul
add
fwait
cmpsb
sbb
and
repz
jno
scas
jecxz
or
cmc
insb
lea
add
idivb
les
dec
mov
xor
dec
cli
ds
stc
loope
testl
xchg
and
push
inc
cmpsl
and
adcb
rcrl
lcall
sbb
push
push
dec
push
xlat
test
jns
in
jg
iret
loopne
mov
xor
mov
loopne
or
out
push
sbb
xchg
mov
sbb
pop
pop
lahf
xchg
cmp
jns
mov
push
sub
stos
inc
push
or
pop
add
pushf
lcall
incl
sub
jo
fimull
lods
add
call
popa
imul
fadd
gs
xor
adc
das
push
adc
arpl
lcall
push
sub
dec
fdivrs
xchg
cmpsb
sbb
jns
sub
insb
pop
lahf
fisttps
push
dec
sub
jo
lock
add
fcmovnb
test
push
or
int3
ret
scas
push
push
pop
cwtl
dec
ljmp
mov
loope
and
mov
dec
into
fwait
jmp
adc
mov
cmpsb
xor
hlt
fisttpl
cld
clc
mov
out
lods
push
loopne
dec
xorl
sub
mov
cli
arpl
or
enter
icebp
jmp
out
sti
pop
jmp
btc
lcall
sub
out
lods
mov
xlat
and
in
fs
xor
dec
xor
xor
shl
outsb
fbld
push
and
push
push
loope
je
bound
movsb
fsubrs
xchg
cmp
iret
mov
inc
lahf
pop
stc
pushf
push
push
and
mov
fisubl
jns
push
shr
xchg
sbb
push
scas
push
mov
lods
scas
dec
mov
pop
mov
insl
insl
inc
stos
or
rclb
pop
mulb
jmp
mov
mov
in
adc
push
xlat
or
xchg
pusha
stos
inc
cli
sub
imul
pop
mov
mov
lret
dec
imulb
adc
sbb
out
fidivrl
jbe
cmp
mov
mov
add
mov
test
inc
xor
mov
pop
mov
mov
ret
stos
jns
stos
inc
and
insb
fistpll
stc
outsl
sub
adc
in
dec
jbe
push
push
stos
xlat
js
xlat
dec
fwait
jmp
jl
sbb
push
push
jnp
ja
shll
sub
inc
mov
and
roll
lock
pushf
xor
stos
cmpsl
out
mov
dec
push
mov
push
mov
jecxz
cld
or
xlat
xlat
adc
daa
pusha
fs
add
or
jle
jne
jns
lret
fsubrl
jne
cmp
mov
in
pop
mov
jecxz
fcmovu
mov
sub
pop
inc
sbb
clc
inc
adc
int3
stos
cmp
push
lds
in
mov
lret
imul
sarb
data16
outsl
loope
sahf
add
add
sub
popf
imul
xchg
psubd
out
lahf
inc
iret
add
pop
in
xor
inc
enter
xchg
addr16
ds
imul
fistpl
or
loope
fsubrs
sub
push
repz
xchg
inc
adc
dec
mov
push
clc
call
jecxz
jp
ficoml
mov
xor
push
add
mov
cmp
sub
loope
xor
lcall
ljmp
outsl
push
push
pop
cmpsl
sub
and
adc
mov
dec
xor
pusha
sahf
pop
sub
adc
sbb
xchg
js
scas
insl
pop
push
dec
fdiv
or
out
xchg
jae
dec
jl
jp
dec
test
dec
shr
loopne
push
aad
add
iret
popa
repnz
ja
out
lock
jnp
jg
add
dec
mov
rcrl
jge
inc
sbb
stos
das
push
aaa
push
mov
mov
cli
cmc
iret
sbb
or
sahf
stos
mov
test
scas
jo
push
jmp
cmc
mov
into
push
fisttps
or
mov
repz
push
and
int
xchg
pop
sti
and
dec
cld
call
xchg
adc
cli
ret
ret
dec
cltd
cmp
outsl
insb
mov
adc
mov
sub
mov
call
jns
ljmp
push
mov
std
cli
mov
clc
pminub
cs
mov
inc
daa
repnz
xor
sub
movsb
push
shl
adc
xor
cmp
xor
add
in
mov
subb
mov
jns
lds
push
test
jae
dec
stos
inc
andb
adc
mov
sub
and
fbld
xchg
pop
dec
dec
dec
sub
cmp
pushf
sub
jb
dec
push
dec
pop
and
pop
xchg
out
or
fwait
xchg
jno
inc
in
repnz
push
loope
decl
sete
and
fnsave
in
adc
imul
sbb
pop
adc
jno
jge
add
jns
mov
jle
xlat
cmp
repnz
and
call
sub
out
test
rolb
sbbb
or
sub
mov
cmp
fwait
pop
push
sbb
mov
mov
pop
stos
inc
xchg
out
ret
lea
mov
imul
rolb
mov
jnp
xchg
ss
xor
andb
jnp
add
mov
xor
ret
fcoml
rolb
jo
add
mov
pushf
push
outsb
and
mov
or
call
xchg
or
fwait
push
testb
xchg
jg
push
ljmp
jecxz
sub
inc
inc
lcall
fnstenv
dec
fstpt
js
js
pop
divl
dec
jl
mov
pop
pop
out
pop
mov
xchg
bound
mov
hlt
in
aas
cmp
pop
leave
clc
mov
in
push
out
dec
popf
in
xor
out
xchg
push
addl
jb
xchg
out
sbb
inc
push
xor
adc
mulb
xchg
jb
mov
fidivs
imul
or
test
mov
add
cmp
je
jae
fistpl
mov
hlt
fcompl
test
add
or
inc
loop
dec
cmp
rcll
sub
aas
and
rclb
lahf
inc
adc
jb
dec
stc
push
arpl
scas
das
add
arpl
xchg
addr16
jns
outsb
mov
fmuls
inc
adc
ljmp
push
add
clc
cmc
mov
mov
icebp
movsb
mov
mov
fisttpll
inc
test
scas
dec
sbb
lret
cli
daa
add
ds
orb
lret
dec
rcll
pusha
pop
xchg
cmp
out
xchg
and
xor
and
xchg
test
js
mov
insb
stc
cmp
arpl
cltd
inc
stos
adc
xor
or
xchg
sbb
ds
xlat
jnp
roll
mov
or
push
pushf
push
stos
loope
jecxz
movsl
ja
loop
xor
dec
inc
mov
out
jno
dec
sahf
insl
inc
js
arpl
mov
or
popa
bound
inc
mov
mov
out
dec
popa
iret
sbb
das
les
sbb
test
pushf
mov
int
ret
out
pop
xchg
dec
popf
mov
pop
fsub
push
ds
xchg
lcall
sub
sbb
je
xor
adc
repz
jo
pop
or
aad
jmp
mov
dec
jl
sub
push
repz
mov
xlat
and
insb
outsb
mov
add
push
adcl
sbb
xchg
sub
mov
pop
xchg
sti
dec
fbstp
dec
mov
pop
jg
arpl
adcl
mov
sbb
cmp
pop
stos
cmp
sub
ja
or
adc
enter
out
aam
dec
repnz
sub
out
ficompl
loopne
gs
mov
add
lock
es
aas
xchg
add
fidivrl
mov
lret
repnz
addl
mov
pop
out
mov
xor
out
cmp
lret
fwait
dec
sub
mov
inc
cmp
ret
les
roll
push
adc
pusha
pop
or
pushf
fmul
in
mov
in
les
mov
xor
or
mov
xor
add
mov
lcall
cmpsl
sbb
ror
ljmp
or
in
lea
jb
mov
std
cmpsb
stos
in
sar
dec
aas
fldt
imul
pop
cltd
in
pop
mov
lcallw
stos
pop
lods
xlat
jne
popf
shr
mov
scas
lret
inc
cmp
test
int3
pop
cmpsb
enter
sub
jmp
scas
mov
call
or
call
cmp
cwtl
cmp
jnp
or
rclb
mov
push
add
xor
jmp
xor
dec
mov
jl
pop
or
sub
repnz
cmp
nop
inc
mov
mov
repnz
or
mov
xchg
sub
pop
jecxz
iret
call
inc
xchg
dec
sub
jmp
fiadds
jg
push
rclb
or
and
lret
cmp
pop
and
ljmp
aaa
cmpsl
push
in
jnp
jle
sub
sub
repnz
mov
aad
negb
jecxz
sahf
js
scas
adc
pop
cmp
xor
pop
in
cmp
popl
cs
imulb
mov
stos
add
pop
out
insb
lds
lcall
fs
pop
ja
scas
dec
adc
js
sarl
fidivrs
xor
es
jmp
mov
cmpsb
push
fiadds
ret
test
push
shrb
lahf
int3
pop
ja
inc
jmp
adc
xor
adc
and
std
mov
mov
cmp
sbb
xchg
sti
pop
scas
sbb
or
adc
push
sub
hlt
dec
pop
gs
dec
sub
out
ret
insl
xor
pop
jns
add
leave
int
popf
mov
or
jmp
or
mov
pop
xchg
in
xlat
movsb
test
pop
sub
pop
and
pusha
mov
or
push
mov
jmp
loopne
xchg
mov
pushf
pop
or
and
sbb
sub
arpl
xor
or
inc
fdivl
or
mov
jns
dec
jnp
imul
sub
or
std
push
mov
sub
pop
adc
outsb
inc
cwtl
push
or
imul
xor
clc
in
mov
xchg
cmpsb
xchg
lahf
stos
lods
in
jns
daa
mov
mov
jmp
jl
ja
jnp
inc
add
adc
jmp
mov
std
sahf
dec
stos
inc
jmp
jle
adc
xchg
xchg
xchg
sub
xchg
xchg
cmp
enter
sbb
mov
outsb
cld
dec
mov
lock
jns
mov
push
mov
or
mov
adc
xchg
fwait
dec
out
dec
mov
cmp
subl
stc
int
xchg
adc
pop
outsb
ja
push
jnp
xchg
adc
or
mov
out
loop
das
cmovge
dec
xlat
cmp
lret
not
mov
aad
mulb
cmp
fnstcw
inc
and
div
cli
and
ljmp
inc
mov
mov
mov
icebp
jecxz
bound
push
lds
sbbl
dec
mov
icebp
or
adc
data16
and
cmp
and
mov
shrb
sbbb
mov
mov
pop
testb
imul
ss
adc
jbe
ds
in
lods
je
dec
das
stc
loopne
into
jno
xchg
inc
stos
sti
dec
cli
in
inc
pop
push
test
xchg
leave
icebp
loopne
imul
out
adc
fdivrl
push
mov
stc
movsb
xor
inc
mov
xor
jns
ja
cmp
in
lahf
je
mov
negb
lods
mov
fwait
jle
or
stos
test
xorl
fidivrs
xchg
dec
into
shll
lea
mov
jmp
pop
dec
aam
data16
fimull
add
inc
pop
dec
push
test
mov
popa
xchg
scas
addr16
fwait
mov
andl
dec
daa
mov
dec
test
push
fdivs
xchg
mov
mov
xor
popa
rcr
nop
mov
or
data16
and
sub
cmp
cmc
lock
jecxz
lods
sub
add
data16
rorb
rclb
push
push
add
adc
and
adc
test
xor
dec
adc
or
cmp
cmc
or
in
inc
mov
cmpl
add
hlt
inc
test
jo
daa
test
into
adc
pop
lods
stos
cmp
cs
mov
rcrl
xor
inc
lods
rolb
add
add
add
addb
jns
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
nop
add
xor
sbb
sub
mov
sub
add
adc
cmp
adcb
ljmp
ja
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
jb
and
dec
add
add
add
adc
add
adc
pop
add
add
add
in
mov
add
je
add
add
add
inc
add
mov
test
add
cmp
cmp
sub
sbb
arpl
in
jae
push
jb
push
je
push
outsb
add
jne
push
jl
add
inc
xor
inc
cld
call
pop
in
mov
movsb
sbbb
add
inc
mulb
cld
adc
add
add
incb
inc
add
leave
push
inc
cmp
cmpsb
xor
adc
inc
inc
add
sarb
rolb
adc
mov
sti
add
add
add
xor
add
add
or
test
and
inc
mov
mov
and
adc
movl
clc
adc
jmp
mov
incl
cmp
xor
pop
mov
hlt
sbb
add
test
push
lock
add
in
js
add
out
add
lcall
sub
clc
xor
add
push
jb
je
js
outsl
xchg
outsb
outsl
je
add
inc
sti
inc
gs
imul
gs
dec
inc
gs
push
popa
and
cmc
stos
push
insb
addr16
push
add
addr16
outsl
dec
imul
inc
popa
push
push
arpl
add
add
add
add
add
add
call
add
add
mov
add
add
add
add
add
add
add
add
add
add
enter
cmpsb
xlat
ret
mov
imul
mov
mov
mov
jmp
add
fstl
adc
insl
lahf
xchg
arpl
cmpsb
sub
aaa
loopne
out
stc
mov
fimull
sar
mov
mov
mov
mov
sbb
mov
bound
mov
mov
xor
mov
sub
outsb
out
sahf
popf
or
mov
filds
in
scas
sti
sub
sbb
cmpsl
cmp
dec
pop
ficoms
testl
xor
lret
dec
jo
xchg
in
ret
stos
in
jo
repnz
sar
add
and
popf
out
insb
jne
dec
dec
xor
lret
or
repnz
vxorps
stc
sub
dec
xchg
xchg
sbb
or
mov
or
mov
mov
sbb
dec
push
xchg
loope
sahf
push
outsb
jg
sub
rcrl
cli
shrb
int
icebp
mov
dec
jnp
adc
cld
ret
inc
jmp
outsl
gs
inc
mov
pop
lret
and
inc
add
das
add
rcrl
xchg
mov
xlat
inc
cmpl
insb
scas
pop
mov
ret
inc
xchg
add
cmc
pusha
cli
push
sub
repz
xchg
mov
xchg
mov
adc
sti
push
dec
xchg
sti
test
cmp
shll
pop
lret
sub
in
std
push
bound
mov
mov
sub
frstor
dec
cltd
push
stos
mov
cmp
arpl
lods
lcall
pop
fistpl
addl
fbld
xor
into
les
les
lods
pop
push
cmpsl
mov
mov
cmp
out
inc
push
sarl
cmc
add
fsubrl
dec
roll
movsb
mov
ret
adc
addr16
ds
mov
mov
mov
fstl
movsb
jo
sub
pop
inc
daa
dec
inc
scas
in
ds
imul
hlt
lods
cli
fisubrs
es
inc
nop
imul
pusha
aad
cltd
mov
cld
repnz
dec
loop
ljmp
mov
and
or
loop
jb
ja
nop
sbb
and
sbb
sarb
dec
mov
shlb
adc
lahf
packssdw
lds
fdivs
pusha
leave
mov
mov
bound
cmpsb
cmc
int
mov
imul
std
adc
push
cmp
fs
cmp
cltd
mov
out
mov
mov
jo
mov
sti
xchg
inc
fistpll
sub
pop
and
in
jp
jno
cmp
or
push
and
xchg
sub
xchg
imul
jb
insb
inc
fstl
cmpsl
mov
mov
hlt
adc
jo
xchg
loop
aad
pusha
stos
inc
mov
fstps
rorb
ret
push
mov
push
and
mov
aad
xor
or
add
shld
shlw
enter
mov
in
jmp
mov
push
int
push
adc
clc
rolb
dec
sbb
int3
dec
mov
mov
jge
cwtl
cs
sahf
repz
mov
sub
cmpb
mov
jl
or
sbb
xchg
dec
xchg
xor
test
or
xor
inc
fwait
add
insl
imul
cmp
ss
push
int3
cmpsl
inc
sbb
mov
mov
xchg
stc
push
pop
jae
xchg
pop
fstpl
sbb
sbbb
ret
jmp
mov
popa
adc
pop
xchg
mul
in
orl
dec
or
jb
loop
dec
push
lods
jbe
cmp
xor
cltd
ja
jge
mov
or
dec
push
mov
xchg
xchg
adc
out
push
cmp
cmp
jmp
and
push
push
fs
cmp
mov
sub
out
jo
or
jns
mov
daa
pushf
add
scas
hlt
pop
or
movsl
add
fs
in
cltd
ror
cmpsl
aaa
cs
mov
mov
pop
add
out
leave
cmp
cmp
cs
cs
or
inc
stos
xchg
mov
aad
lret
add
popa
jmp
mov
imul
pushf
push
dec
adc
sbb
xchg
ds
sti
pop
outsl
jnp
push
sti
and
xchg
or
or
push
and
mov
loope
mov
sbb
pusha
sbbl
test
insb
out
enter
fwait
sbb
scas
dec
push
aam
test
xchg
rcl
adcl
adc
cmp
dec
gs
shlb
jns
imul
cltd
mov
stos
jno
leave
cmp
jg
stos
out
hlt
push
mov
push
sub
mov
adc
test
add
lds
mov
gs
jle
scas
lcall
mov
pusha
cmpsl
cltd
xchg
mov
or
and
mov
mov
addr16
gs
loope
mov
mov
test
jmp
in
mov
cmp
sbbl
dec
xchg
cmpsb
and
pop
add
mov
push
add
rcl
gs
xchg
outsl
in
mov
and
hlt
sbb
pop
cmc
data16
or
cmp
fs
mov
xor
movsl
or
xor
sub
xor
xor
push
add
push
gs
mov
cmp
jbe
mov
jle
dec
pusha
push
scas
ret
std
and
dec
sarl
mov
call
clc
jg
xchg
cli
imul
or
jne
pop
cmp
test
dec
adc
sbb
or
popa
sar
mov
mov
test
dec
aaa
arpl
cmp
das
aam
or
outsb
dec
mov
push
aaa
and
cmc
push
mov
push
jg
add
fdivrl
mov
push
idivb
inc
cltd
cmp
test
cltd
clc
dec
in
sahf
xorb
sub
cld
push
mov
jl
xchg
insl
fs
mulb
movsb
or
sbb
pop
add
push
mov
or
out
dec
sti
addl
jae
ret
mov
stc
jmp
mov
fmul
out
push
cmp
lea
dec
sub
xchg
les
sbb
xor
or
imul
out
xchg
cmpl
mov
push
dec
cmp
lret
xchg
test
push
cmp
adc
mov
add
insb
inc
pop
inc
xchg
add
xor
lea
das
cmp
mov
jnp
mov
mov
test
sahf
jnp
sub
std
sub
dec
cld
aad
cmp
dec
pop
jae
mov
mov
and
out
or
xor
movsb
sbb
adc
push
mov
js
inc
arpl
and
jns
pop
dec
loopne
sbb
add
and
out
mov
mov
int3
push
jmp
in
out
sub
enter
adc
sbb
sub
xor
sbb
mov
and
jmp
ljmp
adc
push
and
outsb
stos
or
mov
int3
data16
call
shr
pop
clc
stos
mov
sbb
jl
aas
xchg
lea
sbb
mov
xchg
outsb
push
xor
pop
cli
dec
or
lock
pop
lods
lret
into
dec
push
xchg
popa
roll
jno
push
test
cltd
ljmp
stos
in
insb
pop
sbb
xor
jb
test
dec
adc
aaa
aaa
xor
ficomps
dec
pop
jmp
invd
mov
or
aas
mov
les
fisubrs
idivb
or
cwtl
dec
push
enter
outsb
sbb
andb
push
xchg
ljmp
lods
sti
sub
jo
lahf
daa
add
lcall
test
jnp
jg
cmp
sbb
repz
rcrl
add
push
xchg
and
rcrb
cwtl
ss
xchg
fwait
or
xchg
ficomps
push
mov
cmp
ds
popf
dec
add
stos
outsb
out
mov
xchg
xchg
js
and
je
lds
xchg
aas
push
pushf
xor
dec
loope
sub
aad
xchg
fcoms
ljmp
cli
mov
mov
es
add
add
dec
outsl
cwtl
scas
insb
test
inc
push
mov
das
cmp
push
pop
sub
in
xor
push
dec
xor
nop
and
insb
and
dec
shrb
out
dec
iret
test
aad
bound
xlat
call
ficompl
fdivs
pusha
adc
push
shrb
pop
movsl
and
jbe
jb
movsl
mov
fcoml
or
cmpsb
sub
cltd
jae
inc
popa
out
stc
jae
ja
xor
push
push
outsl
mov
jg
sarl
lea
les
xchg
jge
adc
sbb
sbb
mov
lret
mov
sbb
inc
lahf
push
cmpsl
push
jge
std
ja
shlb
outsb
jecxz
hlt
or
jns
imul
rcrl
iret
push
cwtl
or
jb
xor
leave
adc
xchg
sub
cmp
insl
shlb
jae
pop
repz
aaa
mov
out
mov
je
cmp
lods
imul
aas
ss
push
or
mov
repz
dec
cmp
cli
adc
push
jne
popa
loop
imul
jmp
pop
adc
jbe
cpuid
adc
xlat
shl
jne
ds
cli
in
aad
jmp
xchg
cmc
or
popf
int
adc
adc
std
or
push
sub
or
dec
xor
js
rcrb
dec
mov
cmpsb
jg
inc
pop
or
mov
ror
movsb
xchg
cmpsb
jno
adc
jb
inc
jmp
push
pusha
in
or
cmp
add
jp
insl
mov
dec
jmp
mov
in
xchg
adc
cmp
mov
jecxz
dec
inc
lods
inc
sub
mov
mov
movsb
loopne
adc
push
notb
dec
outsb
call
xorb
pop
popa
push
xorb
sarl
movb
mov
dec
in
inc
add
and
sbb
pop
pop
fcomip
mov
nop
roll
sub
xchg
push
mov
ds
cmp
push
jp
hlt
sbb
insl
clc
push
jnp
adc
mov
std
addb
pop
jo
xchg
adc
jns
add
sbb
mov
mov
das
clc
stos
sbb
incl
rcll
pop
into
xor
push
add
xchg
loope
mov
std
out
adc
into
mov
dec
xchg
mov
pop
fcomps
push
addr16
daa
mov
inc
outsb
shl
rcrl
and
or
mov
cmp
mov
sarl
and
xor
pop
imul
pop
pop
mov
sar
pop
xchg
and
and
lock
push
sbb
push
shl
dec
icebp
loopne
sahf
xlat
jno
mov
cmp
neg
rcll
int3
data16
in
xchg
inc
pop
mov
lods
stos
hlt
out
ficoml
stos
and
jne
cs
loope
jo
add
aad
rclb
mov
imul
or
adc
dec
ficoms
nop
mov
imul
sbb
mov
cwtl
inc
add
and
jmp
cmp
es
pop
sub
jae
or
call
data16
stos
rorb
repnz
xor
scas
xchg
rclb
rclb
xor
mov
and
sub
cmpsb
adc
icebp
fdivr
lods
dec
test
push
add
addl
jo
jmp
daa
xchg
fwait
sbb
cwtl
xchg
xchg
mov
xor
xchg
mov
fwait
inc
aad
out
sahf
and
mov
jmp
imul
push
jns
aas
or
ret
loop
ss
nop
lds
inc
dec
sti
mov
shrl
jmp
add
lret
stos
fsub
xchg
popf
fcompl
stos
mov
dec
dec
jl
mov
jg
mov
inc
leave
popa
or
push
cmp
imul
call
jb
in
adcl
push
subb
jns
push
pop
call
pop
pusha
adc
arpl
popa
xchg
jno
push
leave
cmp
enter
nop
jecxz
pop
push
aaa
jno
mov
pop
inc
daa
mov
add
out
sub
push
xlat
outsb
push
cltd
and
std
adc
daa
jbe
xchg
nop
lods
add
push
pop
mov
adc
mov
adc
and
cs
jp
sbb
fildl
int
inc
dec
jl
xchg
add
scas
push
push
jmp
lea
cld
sub
push
aad
xor
mov
inc
shll
stc
ja
repnz
cmpsl
fnstsw
push
xor
push
ret
mov
mov
test
sbb
stos
test
cs
pop
adc
bound
mov
cmp
loope
dec
or
or
jns
sub
out
aad
and
js
imul
pop
out
or
fidivrs
mov
adc
insb
jle
push
mov
or
cmp
jno
mov
pop
xchg
fwait
and
and
les
jns
dec
andl
cmp
mov
ljmp
pop
fsubrs
adc
inc
inc
mov
roll
aam
push
pop
or
xor
pop
add
pop
aas
ja
lcall
dec
dec
jl
or
push
jl
cmp
lea
fstps
xchg
nop
xchg
imulb
pusha
or
scas
dec
cmp
repnz
push
xor
adc
outsl
mov
xor
mov
pop
or
push
cli
cmp
dec
ljmp
lds
scas
jae
jb
rorl
in
xchg
sub
out
pusha
xchg
fisubl
cmc
jp
adc
xor
fistps
arpl
adc
jecxz
int3
push
dec
es
inc
dec
arpl
xor
insb
jne
lods
stos
call
cmc
mov
imul
jno
xor
aas
xchg
test
pop
and
js
mov
push
mov
daa
inc
mov
add
mov
shrl
arpl
into
inc
xor
mov
pop
dec
jnp
mov
xchg
mov
jae
jb
jns
repnz
dec
adc
daa
and
cltd
xchg
fmull
loopne
jne
je
test
mov
inc
push
or
not
inc
out
pop
jae
jne
xchg
shlb
mov
insb
stos
out
ljmp
bound
aad
sbb
int
inc
ret
jbe
je
xchg
popa
sarl
pop
jno
mov
insl
scas
and
je
mov
xor
sbb
sbb
or
loope
jns
loope
cmp
pop
repnz
adc
es
pop
or
jb
lret
cmp
repnz
xchg
and
lcall
fcmovb
pusha
sbb
in
mov
inc
xor
mov
mov
mov
nop
mov
sbb
and
mov
mov
xor
dec
push
int
shlb
cli
sbb
js
into
push
mov
mov
xor
cltd
mov
fsubs
or
mov
fldl
mov
push
sub
sub
cmp
sbb
ret
push
enter
push
cs
cmp
and
sub
inc
fstpt
xchg
mov
adc
jne
mov
add
or
jbe
pop
sub
jno
repz
mov
hlt
or
popf
sahf
addr16
loope
aas
loope
imul
ja
mov
int
stos
shll
mov
pop
mov
adc
es
xchg
sbb
cmp
push
out
ret
mov
jbe
cmc
inc
mov
dec
cmp
pop
jp
add
push
mov
xor
ss
arpl
js
pop
inc
scas
jne
lds
jo
rcll
mov
stos
mov
xchg
jmp
jl
xlat
mov
in
adc
cmp
mov
insb
addr16
xor
cmp
adc
xor
dec
cwtl
push
bound
nop
popa
mov
sbb
outsb
in
bnd
hlt
mov
jg
pusha
imul
test
enter
dec
jmp
push
outsb
push
stos
mov
add
test
popa
pop
aam
sub
pop
aas
das
cmp
jns
lret
mov
adc
repnz
jp
or
mov
clc
adcl
repnz
out
mov
jae
aam
inc
and
cld
cmp
jg
push
mov
xchg
stos
and
push
mov
imul
xor
mov
xorb
sahf
data16
cmp
mov
cmp
jnp
mov
mov
mov
sub
sarl
lds
mov
shl
lahf
js
adc
xorl
lock
dec
fnstenv
jg
in
mov
mov
cld
fidivl
and
cmp
ds
inc
test
enter
fnstenv
cld
inc
mov
mov
loope
lret
push
enter
lods
js
inc
aad
scas
ss
xchg
insb
adc
inc
cmp
repnz
out
or
inc
add
pop
sub
jle
in
shl
lcall
dec
ret
xchg
xor
cmp
clc
adc
cmp
jge
ljmp
jno
push
in
in
adc
call
jo
test
enter
cmpb
adc
inc
xor
pop
in
nop
pushl
xchg
je
xor
lahf
pop
lcall
inc
test
sub
push
mov
mov
push
rorb
mov
jo
pop
pop
and
jp
xchg
jns
test
lahf
pop
fimull
rcrb
ds
push
clc
loop
cmp
mov
mov
push
xchg
in
clc
sbb
jecxz
push
scas
push
cltd
and
xchg
cmp
cmp
cmpsb
cmp
outsl
push
lods
insl
push
fs
xor
xchg
mov
cmp
sbb
or
das
cmp
movsb
cli
dec
nop
adc
inc
movsb
icebp
lds
js
push
add
insl
into
test
aad
fisttpl
subb
xlat
out
mov
jbe
mov
testb
insb
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
std
pusha
js
add
add
add
fadds
add
add
adc
add
and
adc
pop
add
and
addb
stos
add
ja
in
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
nop
push
add
add
add
and
les
xchg
add
add
add
pop
add
add
add
sub
cs
or
mov
add
add
add
add
jp
dec
add
add
add
add
insb
popa
gs
push
imul
push
int
mov
and
sti
jmp
add
cmovb
popa
fcoms
push
add
incl
adc
jne
jne
cld
pop
decl
pop
inc
mov
dec
test
inc
mulps
add
mov
mov
test
add
push
adc
mov
aam
push
add
and
cmp
adc
xor
rolb
adc
call
lea
decl
jl
std
fdivrp
adc
pop
add
add
push
loopne
lock
push
adc
clc
incl
decl
dec
enter
jnp
push
push
jne
lea
push
add
xchg
and
je
add
add
add
add
xchg
add
add
add
add
cmp
out
add
pop
xor
outsl
insb
inc
dec
insb
inc
movsl
gs
inc
jne
inc
inc
inc
mov
outsl
movsl
fnstenv
outsl
insl
je
imul
dec
insb
sbb
imul
jne
xor
jae
push
gs
jae
jae
loopne
insb
mov
add
push
add
add
add
add
add
std
add
add
add
mov
add
add
add
add
out
jae
lahf
sbb
cmp
int3
xchg
mov
jg
jecxz
arpl
lret
cmp
jle
mov
scas
movb
jae
or
in
gs
stc
loop
mov
push
dec
dec
lea
and
fistps
fs
inc
xchg
xor
lods
push
pop
dec
pushf
shlb
notb
and
jp
in
sbb
cmpl
pop
mov
imul
push
fs
in
xlat
cmp
lods
dec
cmpsl
sub
mov
call
push
add
in
add
jecxz
rcrb
imul
adc
cwtl
movsb
mov
out
movsb
mov
pop
push
fbld
pop
les
inc
jns
mov
mov
jle
call
insb
mov
xchg
shll
pop
mov
cli
testl
addr16
fcoms
sbb
pop
gs
sub
inc
jo
lret
push
xchg
cmp
sahf
push
loop
int3
jno
hlt
pop
cmpsl
sbb
push
cmpsb
scas
test
ljmp
lds
out
or
pop
sbb
loop
stos
test
insl
lea
lea
inc
add
mov
imul
loop
dec
test
jo
cwtl
pop
add
cmp
mov
test
or
jecxz
popa
arpl
pop
imull
adc
jns
xchg
aaa
movsb
cmp
mov
sti
lock
lcall
repnz
out
xchg
mov
push
subb
xchg
rcl
jmp
mov
mov
sub
fsts
inc
lods
cmpsb
mov
sbb
sbb
add
adc
fisubrl
rorb
mov
aam
mov
aaa
cltd
pop
push
mov
loop
out
xor
iret
fcompl
scas
pop
out
cwtl
cmpl
cmc
ljmp
insb
call
pop
stc
ret
lock
sarl
addr16
pop
cmpsl
add
push
pop
cmp
mov
loop
and
sbb
je
stos
fadds
mull
andl
or
idivl
inc
shlb
out
xor
or
cmp
pop
dec
iret
xchg
adc
jecxz
or
push
lcall
cmp
movsb
aad
ja
mov
insb
inc
cmc
mov
adc
push
and
inc
fcoms
out
lret
mov
cmp
mov
pop
pop
xor
dec
sbb
dec
out
sub
pushf
xor
adc
and
pop
fldl
xor
sub
xchg
movsl
sbb
clc
push
xchg
test
inc
jmp
push
int
test
mov
pushf
pop
jle
incb
dec
adc
sbb
xor
cmpl
xor
dec
xchg
sbb
inc
aas
ud2
sub
mov
mov
ljmp
push
test
out
or
inc
xchg
and
je
movsb
mov
xchg
into
ljmp
pop
out
adc
xchg
out
mov
cmp
jl
push
lods
push
sti
test
roll
hlt
jns
jg
rep
insb
sahf
inc
push
dec
lret
insb
push
dec
ds
sub
jae
add
jnp
cwtl
nop
test
mov
jo
lods
lahf
xor
mov
ret
sahf
sub
mov
jbe
repnz
ret
mov
xlat
xlat
sbb
jl
push
dec
adc
adc
xchg
jbe
xchg
or
jo
pop
mov
loope
push
out
leave
stos
out
js
adcl
or
stos
lahf
cmp
ss
mov
fs
lea
xchg
mov
iret
sti
sbb
push
fisttpll
lea
cmp
cwtl
lds
push
add
repnz
out
jno
jnp
xor
xchg
dec
call
rcll
leave
cmp
shll
lret
dec
jb
inc
mov
fcmove
adc
and
jge
push
testb
xchg
pop
pop
je
jb
sbb
cltd
push
or
lcall
or
jae
jae
xor
xor
adc
int3
mov
into
bound
addr16
mov
inc
xchg
push
mov
bt
adc
push
add
mov
inc
mov
ss
xchg
sub
xchg
sti
lret
in
cmp
xorl
jb
dec
ds
les
lret
ficomps
push
inc
jle
mov
cmc
inc
cmp
int
lods
and
in
std
into
cmp
xchg
add
addr16
cld
dec
loope
xchg
fsubs
adc
mov
aaa
shrb
adc
je
push
andb
add
loopne
popf
std
jo
outsl
jg
jmp
clc
add
stos
xchg
cmpsl
and
insl
fs
je
xor
arpl
sbb
test
sub
in
mov
cmp
rcpps
loope
dec
lea
cli
xchg
icebp
addr16
stos
repnz
sbb
sahf
xchg
in
mov
pop
lods
lock
addl
inc
cwtl
int
sahf
outsl
xor
dec
call
fsubl
push
test
in
mov
and
leave
lcall
imul
jo
popf
cmp
cmp
jge
sub
mov
push
ja
or
push
push
and
jg
and
sbb
lds
mov
or
mov
ret
lods
pusha
jge
frstor
mov
imul
repz
pop
xchg
imul
test
mov
push
loopne
aas
push
shlb
inc
inc
mov
sbb
xchg
popa
movsl
bound
stos
fidivrl
outsl
jb
mov
push
cld
or
cmpsb
shll
lods
cmp
lret
sub
inc
jge
fcomp
pop
mov
sar
push
movb
cmpsb
xchg
stos
shrl
sbb
stos
jo
mov
push
lret
dec
sbb
mov
lods
enter
roll
or
add
and
xor
movsb
insl
mov
push
mov
mov
pushf
movsb
sbb
sub
aaa
mov
ss
enter
nop
mov
out
jmp
mov
outsl
cltd
cmp
imulb
mov
mov
repnz
sbb
repz
dec
ja
jg
in
mov
in
pop
call
sub
mov
int3
adc
inc
shrb
stc
sbbb
test
aad
lahf
loope
push
addr16
xor
add
sbb
repnz
pop
mov
sub
cmpsb
je
push
xchg
push
xor
imulb
das
daa
or
cmpl
das
xchg
in
insb
in
add
sbb
es
aad
popf
rorl
in
mov
or
mov
gs
dec
push
cld
inc
cltd
mov
mov
xor
mov
icebp
sbb
mov
cmp
pusha
repz
mov
mov
xor
mov
pop
ljmp
cmp
sbb
push
adc
xchg
subl
call
imul
test
pop
in
leave
push
add
enter
pop
repnz
pop
mov
das
sti
into
sahf
sti
cltd
xor
mov
and
ret
cmp
test
xor
jecxz
scas
das
cmc
test
shrl
int3
mov
movsl
and
adc
rcrl
and
ret
call
dec
loopne
push
dec
insb
outsl
xor
fiaddl
inc
mov
sbb
pop
mov
in
les
hlt
mov
inc
inc
aas
js
movsb
arpl
mov
xlat
outsl
nop
aam
xchg
ret
push
test
xor
inc
call
xchg
pop
mov
jge
scas
add
fimull
xchg
add
and
iret
das
repnz
xor
es
mov
mov
cmp
mov
jne
movl
and
mov
out
adc
push
test
jg
mov
mull
out
add
jns
aam
xchg
and
lea
dec
dec
push
or
cltd
into
cmp
jmp
movsb
out
sub
leave
ret
lock
mov
repz
cmp
cmpb
fnsave
push
adc
dec
scas
inc
xor
pushf
dec
inc
sti
scas
cltd
les
and
xsavec
ds
fs
bnd
repnz
loopne
arpl
popa
jmp
vpmaxsw
insl
xchg
sti
add
loop
xchg
repz
jmp
add
test
cltd
and
outsb
jns
mov
jge
xor
cltd
xchg
aam
xor
test
cmp
mov
adc
stos
push
leave
mov
xlat
subl
pop
push
push
pop
jbe
and
shll
mov
nop
sub
mov
loop
xor
or
mov
inc
fldl
sub
cmp
test
sbb
movsl
xchg
daa
ds
cld
xchg
mov
sbb
imul
lds
mov
notb
mov
outsb
or
push
lahf
pop
add
jns
iret
xchg
jne
and
or
adcl
xchg
or
inc
xchg
out
scas
into
xlat
enter
push
ds
xorb
xchg
mov
test
xor
outsl
js
out
xor
es
sti
inc
movsl
addr16
dec
jb
lcall
xor
jns
aad
mov
popf
and
adc
gs
and
lcall
sbb
and
cwtl
in
cmp
rcll
xchg
xor
enter
rcrl
pushf
jb
jnp
es
and
adc
movsl
cltd
jnp
adc
je
cmp
lahf
repz
lret
add
jmp
mov
push
test
hlt
mov
xor
int3
inc
ja
adc
test
out
push
xor
add
and
xor
lods
sbb
pusha
cld
jge
ret
lods
jbe
popa
cltd
inc
and
sahf
stc
xchg
ret
or
jmp
inc
in
push
add
cs
repz
mov
cmpb
dec
jg
xchg
int3
jle
movsb
jg
cmpsb
bound
mov
movsb
xchg
inc
pop
pop
add
jbe
iret
lcall
popf
pusha
ja
paddsb
into
or
add
addr16
fs
mov
aam
sub
hlt
push
in
arpl
subb
xor
aam
repnz
add
adc
inc
pop
les
stos
push
and
fs
mov
xor
xchg
pop
adc
push
stos
shl
xor
add
mov
cmc
pop
stos
loope
inc
jmp
mov
jp
mov
add
sbb
ja
ljmp
mov
sahf
lahf
jnp
sub
xcrypt-cfb
cmpsl
and
cli
flds
loopne
add
inc
lcall
sbb
lahf
lahf
cmp
xchg
es
arpl
repz
pop
xchg
jecxz
xlat
push
mov
jl
popf
xlat
jnp
and
jns
aas
jle
stos
pop
fsubs
sbb
in
mov
or
push
ret
icebp
aas
icebp
test
fs
hlt
lret
clc
jge
xchg
lods
adc
and
adc
sahf
cmp
lret
mov
xor
movb
test
mov
mov
and
cmp
sbb
mov
jb
mov
sub
push
cmc
aas
fwait
call
cmp
cmpsb
lods
fxch
leave
dec
scas
lret
daa
imul
inc
in
out
mov
dec
aaa
cltd
out
pop
add
push
mov
hlt
adc
scas
jbe
xor
cli
or
adc
mov
stos
sub
xor
pop
es
lret
js
gs
inc
loopne
cmpl
adcb
jo
adc
mov
test
adc
cmp
out
xchg
ja
jo
test
pop
jns
adcb
ficoml
inc
adc
int
popa
loope
jno
hlt
pop
jae
mov
subl
jnp
mov
cmp
rorb
ljmp
or
and
out
scas
mull
xchg
dec
mov
loope
or
les
lcall
pop
loopne
add
adc
mov
or
data16
cltd
sub
pop
cmp
out
push
cs
iret
mov
fists
imul
out
out
pop
aam
fmuls
xlat
test
loopne
imul
sub
sahf
lahf
jg
cli
mov
add
adc
icebp
mov
outsl
jge
fsubr
mov
dec
mov
movsl
mov
dec
jg
dec
sub
aas
in
lock
mov
ror
pop
cmp
pop
out
lret
clc
jnp
popf
jg
cltd
push
pusha
xlat
and
mov
in
leave
mov
push
xor
sub
inc
sub
jge
jae
inc
aad
jp
jne
dec
fistpll
sbb
cmp
or
add
cwtl
lcall
mov
inc
mov
outsb
das
sbb
jle
or
stc
jno
pop
push
mov
adc
rep
outsb
pop
cmp
imul
push
jnp
aad
ret
and
xor
xchg
push
push
push
lcall
and
insl
loopne
sahf
sar
sub
jno
aaa
inc
loope
inc
sti
jae
jae
inc
and
push
imul
aad
sti
rcll
add
repz
jne
out
imul
mov
daa
outsl
outsl
fs
fsts
mov
pop
aas
test
mov
pop
mov
movsl
and
popf
loope
adcl
popa
insb
lods
mov
loop
push
inc
cmp
sahf
ret
mov
bound
adc
imul
jg
loope
or
cmp
xor
lahf
jge
stos
in
mov
add
adc
test
aam
fildll
push
cmp
cmpsl
mov
push
push
sbb
sbb
fildl
cmp
addb
orb
aad
lret
roll
ds
pop
in
adc
in
imul
cmp
lcall
xor
inc
mov
cmp
lea
imul
sbbl
fisttpl
clc
jo
xor
testl
repz
jae
or
sbb
pusha
shr
jne
roll
lret
lea
addb
and
jne,pn
sbb
ja,pt
xchg
mov
and
cmp
sbb
lret
hlt
and
mov
popa
push
adc
pop
sub
sub
xorl
sub
cli
mov
xor
je
int
je
jo
cmc
ss
add
pop
cmp
test
testl
movsb
inc
xlat
shrl
ret
addl
jmp
mov
push
testb
or
inc
xor
push
jg
cmp
mov
cmp
jne
push
outsb
push
call
xor
adc
stc
push
adc
rcrl
loope
and
or
call
or
sub
and
sbbl
rorb
lock
ficoml
and
adc
mov
sar
adc
inc
fldcw
and
mov
in
aaa
or
in
into
xchg
mov
inc
repz
mov
in
push
add
mov
mov
pop
add
or
les
aam
mov
test
into
sti
loop
mov
pop
les
adc
into
call
out
adc
leave
ja
adc
ds
sbb
pushf
int
les
test
dec
xor
fnstcw
movsb
jns
or
rcrb
and
mov
shr
fsubrs
in
adc
in
leave
scas
movsb
pop
push
cmp
xchg
sbb
lret
pop
fists
in
icebp
loop
cmpsl
sbb
jns
xchg
fistpl
cmpsl
test
adc
mov
xchg
jg
jne
mov
sbb
daa
mov
out
mov
loopne
cwtl
mov
mov
cmpsl
xchg
mov
rcll
adc
fildll
sbb
dec
mov
out
ja
push
adc
iret
push
in
ret
sbb
rcll
cwtl
das
ret
lods
mov
jno
or
out
je
mov
adcl
sbb
mull
xlat
inc
sbb
push
in
stos
xorl
lahf
lea
rcr
mov
cmp
imul
subl
aas
shll
movsb
hlt
fwait
xchg
cltd
aas
and
outsl
pop
xor
jg
icebp
xor
fidivrs
push
clc
pop
jnp
sub
xchg
mov
push
sbb
cmp
adc
clc
xchg
sbb
inc
and
aad
out
outsl
cmpsb
nop
or
jecxz
mov
push
push
icebp
ret
add
jns
lahf
adc
sbb
cmc
or
fwait
jno
pop
jge
push
lahf
dec
xor
loop
xlat
outsl
roll
imul
stos
cld
scas
leave
and
mov
and
and
pop
inc
popf
sub
movsl
add
jne
pushl
movsb
mov
pusha
into
imul
adc
popf
cmpsl
rcrl
sbb
push
pop
jl
and
push
gs
add
imul
testl
mov
cmp
or
pop
sahf
adc
xorb
and
push
enter
imul
xchg
outsl
push
fs
int3
call
pop
mov
and
xchg
roll
pop
xor
and
mov
es
and
fnstenv
lret
outsl
jp
inc
cmp
dec
push
xchg
fisttpll
dec
loop
out
rcrl
mov
adc
cmp
sub
pusha
lods
rorb
or
insb
mov
cmp
or
xor
ret
pop
jno
cld
scas
int
pop
test
pop
mov
sbb
jb
cmpl
stc
scas
lea
inc
xchg
mov
push
ss
pop
std
jp
nop
imul
xchg
jbe
and
cmp
mov
xor
adcl
out
and
mov
test
mov
sub
or
inc
insl
cltd
fldcw
mov
dec
mov
sub
lods
xchg
test
xor
jmp
iret
sub
call
mov
pop
aas
enter
xchg
push
lock
std
imul
xchg
push
mov
xchg
std
fdivl
enter
mov
addr16
mov
sbb
pminub
inc
jge
sbb
shll
mov
cwtl
jne
dec
imul
add
add
or
add
fiaddl
add
add
push
add
add
add
add
add
push
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
ja
mov
js
js
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
leave
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
lret
sbb
add
adc
add
or
add
add
add
cld
leave
add
hlt
leave
add
in
leave
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
lret
push
lret
pop
lret
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
lret
add
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
lret
add
pushf
lret
add
movsb
lret
add
lods
lret
add
mov
add
lret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
lret
add
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
int
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
bswap
add
cld
int
add
int
add
int
add
int
add
int
add
int
add
int
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
add
xor
add
cmp
add
push
into
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
enter
call
iret
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
fs
add
insb
iret
add
je
add
jl
add
test
add
mov
add
xchg
iret
add
cmpsl
iret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
ror
add
iret
add
fmul
add
in
iret
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
