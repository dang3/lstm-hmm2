pusha
in
add
and
ret
int3
int3
int3
int3
int3
mov
push
mov
xor
cmp
je
mov
and
or
mov
movl
mov
mov
jmp
andl
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
and
ret
int3
int3
int3
int3
int3
mov
push
mov
xor
cmp
je
orl
mov
mov
mov
jmp
andl
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
push
push
mov
call
movl
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
dec
cmp
jge
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
push
and
push
push
mov
push
pushl
call
mov
push
call
mov
shr
push
not
and
push
push
rcll
adcl
ds
pop
add
push
pop
or
add
add
sub
add
add
add
add
loope
sub
gs
add
sub
add
cmp
pop
add
push
add
add
add
loope
lret
add
and
mov
and
cmc
add
add
dec
add
loope
pop
add
roll
add
push
add
add
dec
add
fldl
aas
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
addl
loope
mov
sahf
add
sbb
incl
sub
add
xor
push
add
add
out
addl
in
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
aas
add
add
mov
out
add
add
add
add
gs
add
mov
mov
add
add
add
insb
add
add
add
add
add
add
aas
add
add
add
js
loope
mov
mov
add
add
add
add
pop
add
add
add
add
or
inc
add
add
add
sub
sub
enter
repz
pop
add
push
add
ret
add
jae
jns
jl
aas
add
add
add
add
add
loope
push
add
int
adc
lcall
add
addl
adc
mov
add
add
add
add
add
roll
add
popa
add
roll
add
add
add
add
add
add
out
add
add
sub
ja
xchg
add
sub
fwait
add
testb
add
add
add
mov
mov
jg
mov
add
add
add
add
int
push
add
add
add
add
add
add
add
add
add
add
add
adc
dec
add
add
add
add
add
add
add
pop
add
aas
add
add
add
add
pushf
add
add
add
add
and
add
add
add
push
add
add
and
nop
add
add
add
add
add
mov
add
add
add
add
add
add
jmp
push
add
sub
mov
add
add
and
dec
add
add
mov
or
mov
sub
inc
add
add
cmp
fwait
add
add
jae
insb
add
mov
add
sub
push
add
sahf
add
add
add
add
addl
insb
add
add
add
add
mov
add
add
add
add
xor
add
add
add
add
xchg
dec
add
addl
add
add
add
add
add
add
add
add
add
add
jae
dec
add
add
add
add
add
or
addl
xor
cmp
inc
add
mov
jbe
and
push
add
add
add
mov
lret
add
add
add
sbb
add
add
insl
add
push
add
add
add
add
add
add
add
xor
adc
sahf
dec
jle
and
or
push
test
lret
xchg
pop
sub
pop
shll
adc
ficompl
and
add
jbe
sti
loopne
sarl
out
mov
jg
push
outsl
mov
jbe
nop
jno
and
test
into
hlt
mov
test
inc
xchg
pop
xor
and
push
mov
sbb
mov
mov
sti
cli
sbb
dec
dec
jne
out
add
es
jmp
lods
je
fidivl
sub
insb
int
sub
adc
and
int
mov
mov
sbb
cli
xor
icebp
jg
imul
repz
orb
gs
mov
ljmp
push
add
add
dec
shrb
scas
hlt
cmp
cmpsb
cmc
cmp
test
dec
xor
or
cmp
xchg
js
xor
scas
sti
lods
xlat
inc
lods
aam
ja
push
sti
iret
xor
cmp
adc
xor
sahf
add
pusha
mov
push
shrb
daa
ret
ds
mov
clc
add
lret
xchg
jo
loopne
or
or
add
adc
jecxz
outsl
add
fldcw
xchg
inc
cltd
je
xchg
sub
int3
loope
pop
movsb
scas
je
test
and
mov
loope
fldt
ljmp
scas
adc
push
adc
or
les
adc
push
mov
fcompl
cltd
sbb
in
dec
pop
cmp
jb
pop
sub
cmp
insl
rorl
sbb
int
outsl
cmpsb
je
or
adc
movsb
sbb
adc
fmuls
xchg
dec
or
out
movsl
cmovge
push
jmp
pop
adc
sub
das
jae
insb
int3
popa
pop
mov
cmp
js
or
ja
insb
mov
dec
xlat
jo
fcmovnb
mov
je
lods
jge
les
mov
sbb
mov
out
psrlq
pusha
push
test
mov
mov
lea
test
je
xor
dec
flds
push
test
jb
sbb
lcall
lret
in
aam
mov
mov
xor
loop
mov
push
lods
iret
test
pusha
mov
inc
sbb
and
or
pop
sahf
inc
pop
mov
cwtl
mov
repnz
outsl
or
insb
mov
in
rolb
andl
or
fwait
stos
sbb
pop
sbbl
in
cmpsl
and
adc
subl
les
cmc
xchg
pop
sub
and
push
jmp
pop
mov
push
adc
cmp
mov
push
pop
sbb
add
add
add
add
add
add
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
call
mov
mov
mov
movzbl
sub
je
pushl
incl
push
call
pop
pop
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
inc
jge
xchg
pusha
mov
ja
push
lods
cmp
push
loopne
lock
jb
jb
adcb
mov
adc
and
xor
rolb
adc
add
xor
bound
xchg
pusha
mov
adc
and
xor
shl
sub
add
cmp
xor
jb
xorb
pusha
sbb
cvtps2pi
lret
jl
xor
mov
cltd
ljmp
outsb
dec
sahf
imull
lods
fildll
dec
add
sub
push
pop
cli
push
xor
xor
nop
pop
mulb
aas
mov
std
cmp
push
xchg
ret
xchg
outsl
push
jle
sahf
jne
adcl
jb
shlb
mov
loop
adc
xor
add
bswap
rclb
nop
lods
pop
call
aad
in
lea
loop
fdivl
fcoms
insl
addr16
shrb
adc
pop
bound
jb
mov
fwait
xor
xchg
push
adc
lcall
popf
mov
addl
test
ret
and
xor
rcrb
or
cmp
sub
bound
xchg
mov
jg
dec
mov
xchg
ja
pop
push
das
roll
lds
pop
ss
and
add
xor
xchg
mov
mov
popf
push
lock
xor
cmp
daa
ret
push
mull
ret
adc
shlb
loop
repnz
adc
and
xor
bound
xchg
pusha
mov
adc
and
xor
rolb
adc
and
xor
bound
adc
sar
and
hlt
divb
and
xchg
jbe
or
mov
xor
addr16
popa
loopne
pop
sbb
sbb
xorl
pushw
push
mov
out
pop
test
cs
push
lahf
push
scas
inc
jp
leave
cwtl
mov
scas
mov
xor
int
cmp
movsb
xchg
pop
stos
outsl
iret
rdtsc
or
xchg
xor
mov
jns
push
dec
imul
adc
popf
and
inc
adcb
mov
seto
into
test
gs
hlt
addb
jge
sarl
hlt
push
add
xchg
jb
xor
jo
jno
pop
xor
pop
ja
cs
dec
call
in
push
lahf
jbe
jmp
lea
int3
xchg
gs
mov
push
push
fs
repnz
in
or
imul
sbb
mov
push
dec
sahf
movsl
mov
push
in
dec
in
push
xchg
jae
in
fwait
lret
insl
mov
inc
es
sti
pop
mov
fidivrs
or
cmp
add
fsubr
dec
xor
arpl
stc
cmp
sahf
ljmp
roll
loopne
inc
ss
cmp
bound
xchg
add
jmp
inc
sub
sub
jmp
and
inc
push
out
sti
shlb
sbb
repnz
push
push
xor
jecxz
sahf
fnstcw
aad
jmp
dec
sub
xor
jp
sbb
add
rcll
in
lret
pop
clc
ret
cmpsl
push
jnp
lahf
dec
fwait
jbe
xchg
gs
mov
mov
sub
push
lods
sbb
jmp
lock
dec
push
lods
adc
sub
icebp
ret
fadd
in
movsl
rclb
or
movsb
ljmp
mov
pop
add
dec
mov
lods
add
lds
jg
cmp
jp
outsb
mov
fstpt
dec
push
cmpsl
adc
mov
fwait
divb
jo
add
xorl
cmp
inc
stos
and
mov
pop
es
adc
cs
cmp
pop
cmp
push
adc
pop
mov
add
sbb
pop
idivl
mov
push
pop
arpl
push
in
ficompl
xlat
jmp
push
jmp
jmp
dec
in
sbb
inc
add
rorl
mov
push
loopne
xchg
lahf
push
xchg
out
jne
add
fwait
stos
adc
inc
xchg
pop
adc
mov
cli
test
add
xchg
loope
sbb
adc
or
add
ret
xchg
into
sbb
jge
mov
or
mov
or
inc
add
mov
or
outsl
hlt
cmp
aaa
xor
hlt
sahf
lret
adc
dec
cmovp
sbb
jno
sbb
mov
pop
nop
jmp
inc
dec
mov
sub
mov
pop
cld
mov
lret
mov
jne
mov
jae
cltd
pushf
aad
push
aas
jle
daa
mov
inc
movsl
ljmp
pop
xchg
test
lret
mov
ss
and
adc
adc
jns
xchg
in
mov
mov
add
cmc
mov
popa
sub
xor
inc
xchg
dec
imul
inc
imul
adc
ret
daa
mov
push
jle
repz
push
insb
mov
mov
in
push
inc
dec
loop
mov
xchg
mov
sbb
mov
lret
popf
je
sub
or
push
mov
push
or
xchg
lcall
js
xor
pop
mov
dec
je
shlb
shrb
add
out
cmp
xchg
inc
inc
daa
xchg
inc
cmp
push
dec
mov
cwtl
std
jge
mov
loope
xor
sbb
loope
shrb
xchg
rorl
fdivp
repz
test
arpl
xchg
sar
div
jns
lahf
inc
xor
imul
loopne
incl
mov
pop
mov
cmc
lods
in
int
push
sbb
mov
pop
xor
iret
scas
mov
shrl
es
dec
sbbl
stc
shll
xchg
rcr
mov
mov
mov
pop
movsl
pop
dec
sub
out
aad
out
mov
mov
xor
xchg
pop
cmpps
sbb
les
jg
cmp
les
lods
jg
mov
mov
sarl
cli
mov
inc
or
sub
sub
repz
insb
cmp
xchg
and
xchg
fbld
adc
icebp
mov
arpl
scas
in
or
sub
lret
ss
mov
je
sub
icebp
mov
je
mov
inc
mov
lock
ss
clc
push
dec
sbb
push
sbbl
dec
roll
add
or
pop
dec
loopne
mov
or
repnz
mov
add
imul
mov
sahf
jge
push
hlt
sub
jmp
inc
pop
xor
cld
adc
popf
push
mov
imul
xor
add
pop
xor
add
mov
nop
int3
sbb
sub
scas
out
inc
and
comiss
loop
mov
xor
sub
push
adc
xchg
inc
push
test
adcb
pusha
xor
pop
cmp
imul
out
imul
shlb
cmp
sbb
imul
mov
jmp
dec
or
fs
adcl
mov
push
clc
jg
mov
mov
icebp
xchg
and
inc
sahf
movsb
push
xchg
in
jb
pop
push
fistpll
xor
ljmp
or
fwait
and
pop
dec
mov
adc
xchg
call
fstp
adc
std
mov
incl
jge
stos
push
dec
aas
icebp
xor
add
pop
clc
fisubs
add
aaa
leave
sbb
cld
or
mov
xchg
lds
mov
orb
dec
insb
rcr
je
mov
lods
enter
sbb
ud0
imul
loop
insb
in
out
call
inc
adc
ljmp
leave
and
outsb
mov
out
mov
inc
dec
push
jns
insb
jle
adc
mov
sbb
test
mov
mov
in
jge
push
incb
js
mov
fldenv
add
lock
jge
icebp
ss
cmp
pop
imul
cli
jnp
push
ljmp
push
mov
in
mov
cmp
sti
rclb
loope
sub
loop
stos
jg
cs
xor
f2xm1
out
dec
test
aam
outsb
lea
mov
insb
pushf
cmp
xor
dec
xchg
outsl
mov
jmp
push
sub
jae
test
imul
leave
sbb
rcpps
mov
ds
xor
enter
dec
addw
int
stos
mov
in
repz
jbe
rcl
sub
fsubp
aaa
xchg
insl
adc
out
jecxz
push
or
mov
adc
in
and
or
in
push
mov
mov
test
ret
xlat
sub
adc
fwait
icebp
jb
in
cmc
pop
out
push
in
mov
fld
arpl
push
daa
adc
push
pushl
add
test
adc
int3
ss
xor
mov
sub
sbb
xchg
out
xchg
sbb
andb
adc
sbb
outsb
push
mov
or
adc
cmp
sbb
xor
and
outsb
iret
pop
adc
mov
adc
add
lods
fwait
mov
iret
xor
test
sbb
shll
cmp
xorl
push
or
jb
xor
jge
fdivrp
add
cld
mov
xor
js
aas
add
lods
xchg
sbb
push
aad
fwait
adc
push
jl
or
pop
jle
mov
rcll
arpl
xchg
add
add
clc
ljmp
mov
pop
xor
testl
xchg
pop
mov
jo
sub
xchg
or
mov
std
in
jnp
enter
movsb
or
das
insb
push
xor
pop
out
mov
lock
pop
lahf
and
add
push
cli
jno
cmp
or
push
jb
xchg
fisubrs
in
jecxz
jne
inc
xlat
pop
jle
loope
inc
fstps
out
xor
cmp
fidivrl
cmp
hlt
mov
out
leave
repnz
cmp
fstpl
jl
push
lds
or
mov
jns
sub
xor
mov
adc
dec
push
inc
adc
mov
scas
in
jmp
xorb
or
cmpsb
pop
in
int3
cltd
inc
cmp
adc
push
sbb
cmpsb
setae
xchg
add
xchg
lret
in
test
daa
inc
cld
mov
loope
fists
dec
push
push
dec
into
jmp
adc
lret
xchg
into
xlat
inc
fadd
mov
pop
xor
jns
dec
dec
test
dec
and
push
and
lahf
adc
or
int
add
rcrl
mov
movsb
cmp
dec
jl
pop
fwait
hlt
pop
mov
frstor
iret
xor
jl
adc
addr16
inc
arpl
cld
mov
mov
sbb
out
inc
mov
mov
aad
ret
mov
leave
outsl
aaa
and
jb
lea
jp
rcll
imul
push
add
mov
add
jmp
jmp
idivl
inc
add
test
xorl
pop
adc
adc
jb
xor
scas
shlb
cmp
insb
sti
sub
xor
or
mov
fxch
jno
jmp
sub
lcall
insb
ret
adc
jmp
out
ret
in
negl
lock
mov
subb
or
scas
out
jo
imul
shll
stc
clc
rclb
iret
fidivl
xlat
sbb
movsb
int
scas
inc
fdivrl
fs
loope
loop,pt
es
lock
ficompl
or
mov
daa
or
sub
add
push
arpl
lea
test
jnp
stos
lea
sarb
pop
dec
and
fsubl
lea
mov
lods
lods
fsubrl
jns
xor
and
xchg
push
jbe
inc
sbb
pop
out
and
out
es
iret
sbb
sub
jb
out
cmp
cli
sbb
aam
adc
push
daa
rolb
push
dec
clc
pop
call
roll
dec
jmp
pushf
mov
outsl
jns
mov
mov
xorl
xchg
out
cltd
std
dec
arpl
es
jns
repnz
bswap
popa
shrl
mov
scas
add
or
sbb
adc
lods
mov
sbb
shlb
cli
mov
or
inc
leave
shll
sub
xor
cmpsb
pop
std
push
sub
sti
dec
xchg
jne
add
mov
inc
sub
or
add
cmp
data16
shl
mov
ret
mov
lret
daa
dec
repnz
ret
cmpsl
gs
jbe
lret
scas
lcall
sub
push
in
inc
xchg
xor
xchg
in
add
je
xor
push
addl
or
jbe
push
mov
aas
or
lods
in
xchg
xlat
movsb
xor
icebp
in
dec
jp
loopne
fcmovu
mov
nop
movl
push
popa
jne
je
or
push
repz
add
pop
iret
dec
cmpsb
cmpsb
lea
gs
enter
es
sub
push
pop
loop
sbb
pushf
and
movsl
lods
test
adc
rcll
mov
adc
ret
data16
cmp
adc
jne
jno
sti
mov
mov
pushf
xor
outsb
sarl
xlat
sbb
mov
cltd
inc
sbb
pusha
dec
cli
jl
fwait
lock
outsl
jle
push
iret
add
sub
fildll
pop
lcall
outsl
sbb
pop
rcrb
repz
adcl
adc
ds
adc
or
add
aas
popf
xchg
cli
fcmovnu
inc
popf
int3
push
mov
push
cmp
mov
dec
adc
es
mov
pop
mov
xor
roll
cmp
xlat
sbb
mov
insb
idivb
loope
addr16
lock
loopne
les
jg
mov
mov
sub
in
jno
adc
daa
fistl
mov
cmp
ljmp
scas
pop
test
xor
mov
movsl
out
lret
lea
lds
rorb
mull
out
pop
cs
mov
pop
ret
mov
loop
inc
sub
dec
gs
push
cld
out
insb
or
lahf
cmp
pop
ret
mov
jne
loopne
gs
mov
mov
stc
mov
push
inc
pop
mov
ret
fists
sti
sub
mov
nop
inc
outsl
mov
test
mov
xor
sub
into
std
bound
xchg
adc
rcr
mov
adc
push
out
insb
sti
mov
jg
ret
js
jmp
enter
inc
shrl
lds
push
push
movsl
push
ret
mov
hlt
pop
or
insl
leave
inc
pop
sub
call
jmp
popa
fwait
les
test
add
sti
xor
or
jle
or
cmp
rcr
mov
test
jo
shrl
out
popa
in
mov
add
fnsave
and
dec
xlat
cli
ss
sbb
cld
movsb
mov
lods
test
dec
adc
jno
mov
and
add
jb
mov
leave
je
cltd
mov
cmp
mov
scas
pop
lea
and
ss
out
push
movsb
ljmp
pushf
jb
lock
dec
xchg
pop
test
or
xor
sbbb
cmp
add
pushf
adc
push
lahf
push
dec
adc
pop
mov
leave
pushf
jns
xchg
out
mov
or
out
mov
xchg
add
fs
jmp
loope
ja
dec
dec
xchg
aas
addb
mov
lcall
icebp
add
mov
mov
mov
movsb
icebp
push
mov
rorb
mov
roll
xchg
sbb
lahf
addr16
in
sub
xchg
mov
pop
add
sbb
push
inc
sub
mov
cmpsl
push
cmp
insb
xchg
push
adc
aam
sbb
inc
negb
mov
sub
sbb
push
adc
push
push
cmp
cmpsb
mov
in
push
repnz
shrb
cs
aad
or
rcll
scas
mov
cwtl
or
stos
pop
add
test
adc
movsl
test
jmp
in
fimull
mov
mov
adc
pop
mov
mov
dec
or
xchg
pop
mov
lcall
sahf
jnp
pop
ljmp
mov
lods
in
cwtl
cmp
cmp
decl
icebp
mov
insl
out
and
cmpsb
icebp
rcl
sub
int3
inc
jnp
mov
pop
push
push
div
roll
rcl
push
stos
pop
sbb
xchg
xchg
push
cmp
inc
repnz
mov
inc
sbb
or
xor
movsb
mov
loopew
cmp
aad
sub
mov
lods
or
js
call
pop
inc
push
mov
adc
cmp
repz
inc
neg
fstpt
in
sti
loope
sahf
or
leave
std
inc
std
je
in
and
fwait
or
dec
dec
xchg
je
jl
sub
xchg
repnz
add
and
out
adc
outsl
iret
fldcw
xor
or
adc
jb
fs
rcll
xor
inc
add
call
out
mov
loopne,pt
hlt
shlb
lret
in
mov
daa
add
pop
add
xor
js
les
hlt
cmovge
mov
es
or
fbstp
test
cmovne
cmp
jb
movsb
mov
cmp
outsl
stos
int3
mov
int
out
cmp
xor
sub
cmovg
jl
xor
mov
fcomi
jge,pn
in
sub
mov
cmpsb
cmpsl
mov
arpl
jne
and
adc
loopne
int
aaa
mov
mov
dec
inc
cmp
mov
cld
lods
lock
push
sahf
cli
aas
pushf
xchg
stos
jno
mov
jge
call
or
xor
mov
add
mov
mov
imul
mov
pop
xor
enter
and
test
push
loope
xchg
cmpl
daa
fwait
cmp
jmp
into
fbstp
pop
mov
je
push
lahf
lds
mov
push
adc
out
pop
daa
test
scas
add
test
jle
xor
stc
mov
iret
es
cld
xchg
hlt
lods
inc
push
add
mov
jns
push
dec
lcall
cmp
cmp
addb
jb
mov
push
dec
fstpl
fstpl
jge
fwait
add
adc
mov
inc
imul
loop
mov
adcb
adc
xor
lcall
sbb
mov
mov
jb
hlt
jae
insl
xor
dec
or
inc
jne
jb
mov
push
mov
icebp
ds
and
adc
mov
lret
push
mov
cs
imul
int
xchg
outsl
in
repz
push
jb
adc
mov
mov
mov
mov
testb
inc
xlat
pop
lds
fwait
jge
and
faddl
sub
and
xor
int
inc
cmp
repz
sub
xchg
push
sahf
add
loope
and
push
outsl
inc
jge
push
stos
mov
adc
pop
and
push
push
popf
adc
pop
add
cmp
adc
jnp
dec
cld
into
int
adc
push
adc
pop
pop
pop
in
push
push
adc
cmp
icebp
mov
push
lds
rcrb
int
mov
call
movsl
lods
dec
push
push
add
pop
pusha
cmpsl
lock
jl
lds
pop
test
pusha
clc
pop
dec
sahf
test
loop
xchg
mov
cmp
cmp
mov
lcall
pusha
imull
lret
xor
xorb
jns
fs
test
shlb
inc
test
and
and
notl
push
sar
movsb
ds
or
sbb
stos
xchg
stc
jle
adc
outsb
fdivrl
pop
adc
aad
leave
mov
jns
stos
cmp
mov
jp
push
ljmp
popf
pop
sub
mov
std
add
xor
mov
arpl
mov
mov
xchg
sbb
add
loope
jecxz
jp,pn
aam
jne
xchg
pop
test
arpl
adc
cmp
dec
into
or
adc
popf
in
mov
mov
pop
scas
push
ja
in
mov
inc
pop
xor
dec
lcall
or
stos
aam
hlt
fildll
je
jo
jl
sarb
jecxz
jp
adc
ret
jnp
push
xor
mov
cmp
repz
cmp
adc
push
gs
cmp
sti
test
cmp
push
scas
movsb
cmc
add
dec
nop
test
imul
imul
jnp
sbb
lds
cld
adc
fucomi
inc
dec
xchg
ljmp
dec
aam
jp
test
fdivs
lods
xchg
neg
and
sbb
test
sub
out
jge
xchg
lahf
pop
stos
and
outsl
xchg
divb
sbb
cli
movsb
cmp
inc
pop
lock
aas
incl
dec
pop
xchg
in
gs
push
out
mov
pop
mov
push
jae
js
cwtl
es
cmp
test
and
aaa
std
stc
andb
cmp
aam
ss
sbb
rcrl
or
or
lods
xchg
pushw
mov
add
repnz
mov
loop
push
cmpsl
mov
imul
sbb
mov
xchg
fstpt
push
fs
je
jge
cmp
jmp
mov
fs
out
xor
addr16
push
lcall
cmp
sbb
or
mov
and
cmp
cs
sbb
stc
aad
dec
lret
or
mov
pop
out
mov
sti
push
mov
jns
xorb
adc
cmp
mov
imul
mov
faddl
pop
dec
jo
add
adc
and
xor
rolb
adc
and
xor
bound
xchg
pusha
mov
adc
and
xor
rolb
adc
and
xor
bound
xchg
pusha
mov
adc
and
xor
roll
adc
and
xor
arpl
xchg
pusha
mov
adc
mov
add
mov
test
dec
lea
in
sub
cmpl
mov
push
mov
je
cmp
je
lea
push
call
call
mov
mov
movzwl
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
not
mov
or
mov
lea
push
call
mov
pop
leave
ret
fcmovnu
lret
iret
sti
jmp
das
shl
in
leave
lahf
cmpsb
scas
pop
adc
jnp
imul
or
sub
sub
fcmovnu
lret
iret
sti
jmp
fwait
lahf
mov
dec
pop
dec
dec
jnp
outsl
sbb
aas
sub
ret
iret
jecxz
repz
sbbb
scas
inc
pop
push
push
sbb
pop
addr16
jl
mov
movsb
xchg
xchg
popf
out
enter
jp
insb
and
mov
xor
adc
pop
jecxz
sbb
mov
andl
or
mov
movsl
fisubrs
bound
dec
pop
sbb
cmp
aam
and
aaa
ret
lods
jmp
xor
or
mov
inc
es
sbb
testl
ficompl
iret
mov
inc
aad
push
shlb
xchg
in
or
mov
sub
mov
or
pop
xchg
push
not
pop
pop
mov
fwait
imul
or
les
cmp
xor
inc
mov
sahf
mov
mov
ljmp
cmp
pop
pop
pop
cmp
sub
adc
ror
sti
jmp
mov
mov
inc
pop
push
dec
arpl
outsl
add
adc
and
sub
fldt
out
call
stc
stos
sti
pop
es
dec
or
bndstx
pop
outsb
push
inc
inc
popa
mov
stos
stos
xchg
lcall
mov
adc
ss
sub
sbb
push
dec
imul
xchg
lea
mov
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovnu
lret
iret
sti
jmp
fwait
lahf
mov
pop
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovnu
in
inc
adc
lahf
hlt
jle
mov
aas
scas
jne
fdivl
mov
cld
cli
lea
mov
daa
and
jecxz
test
push
dec
or
mov
and
mov
push
fstpl
sbb
rcrb
scas
sbb
mov
cmc
cmp
pop
in
mov
hlt
out
xchg
sbb
imul
das
inc
inc
inc
inc
pop
add
pop
ret
aam
fcmovne
jbe
mov
and
bound
out
outsl
mov
adc
or
jb
cld
jae
ja
pop
decb
imul
in
xchg
in
out
test
push
adc
and
in
and
mov
movsb
insb
sbb
data16
popf
outsl
pop
out
fidivs
and
push
loope
mov
or
cwtl
pop
push
push
mov
fidivrl
jp
push
mov
pop
cmp
push
sbb
push
mov
mov
lret
push
and
sub
ss
mov
xchg
ja
inc
pop
out
inc
pop
sbb
sbb
mov
insb
dec
or
dec
push
sahf
gs
and
mov
fwait
cltd
jl
sbb
cmc
xor
das
loopne
repnz
out
dec
pop
pushf
repz
sbb
data16
cmp
xor
add
sub
cltd
mov
dec
sbb
mov
insl
or
movsl
lods
subb
out
or
ret
outsl
adc
jne
mov
movsl
pop
push
jg
divb
xchg
jno
sbb
cltd
outsb
mov
repz
seta
or
into
stos
fwait
lahf
xchg
ret
stos
and
ret
sub
test
sbb
mov
push
repz
sub
sub
dec
pop
mov
cmp
lods
lds
mov
cmp
lret
push
inc
popf
fdivp
scas
iret
or
jmp
cmp
add
shlb
mov
xor
lock
adc
cmc
sahf
xchg
mov
gs
nop
aaa
movsb
sub
mov
lods
jg
loopne
cld
jo
test
inc
pop
dec
or
push
dec
mov
cld
xor
cmp
fdivr
icebp
movsl
inc
add
imulb
inc
int3
int
int3
jmp
repnz
jl
outsl
loope
sub
jbe
push
push
dec
outsl
sar
sub
push
aas
and
out
leave
adcl
les
repnz
icebp
and
mov
dec
mov
jno
pop
mov
je
inc
mov
jae
movsl
inc
xor
pop
in
jg
push
sub
rcrb
push
sub
mov
imul
shll
aad
cmp
mov
pop
pop
nop
cmpl
inc
mov
imul
sub
loope,pn
or
xor
in
inc
pop
sub
dec
pop
push
loop
and
ja
jns
fdivl
mov
sti
xchg
mov
sahf
icebp
inc
mov
aam
mov
jb
aas
jmp
mov
pop
cli
dec
jmp
fisttpl
scas
out
fldcw
jns
sahf
clc
es
lret
mov
dec
mov
push
xor
jae
lcall
test
push
imul
sbb
mov
fisubl
push
mov
out
sbb
ljmp
sub
bound
bound
cmpsb
push
pop
cmp
dec
movsb
add
push
push
test
push
jo
mov
aad
iret
ret
xchg
bound
jo
sbb
and
cld
add
mov
iret
cmp
insl
pop
and
cli
int3
stos
in
cld
inc
add
sub
cmpsb
push
nop
dec
fld
outsl
and
sbb
cmp
insb
sbb
ja
aam
and
jg
mov
les
stos
mov
insl
icebp
xchg
jns
push
inc
test
fmuls
out
pushf
cmp
xchg
add
js
dec
loop
mov
push
test
add
mov
xorl
jge
fnsave
leave
rcrl
int3
push
jmp
gs
and
aas
jnp
sbb
js
xchg
pusha
inc
in
xchg
in
scas
mov
mov
xchg
test
out
in
in
jae
pusha
cltd
mov
mov
xor
stos
push
ja
mov
mov
call
pop
jmp
sbb
das
cmp
insl
push
push
mov
dec
les
sbb
aaa
mov
ficoml
aad
and
int
jne
mov
cmp
pop
insb
fs
xor
rol
sbb
enter
mov
test
movsb
iret
mov
xchg
icebp
sbb
data16
dec
loope
inc
sub
popa
jecxz
test
pop
ljmp
jge
add
or
leave
mov
lea
xor
je
test
aad
lahf
inc
cmp
inc
lock
stos
test
jnp
test
pop
xor
mov
iret
mov
sti
jl
sub
mov
lcall
popf
in
mov
scas
adc
movsl
adc
add
jo
int
stos
push
jp
xor
push
mov
cmp
mov
push
nop
test
sti
addr16
dec
loope
fidivl
pop
in
xor
inc
popa
je
rcrb
ror
in
outsl
rclb
jg
mov
jnp
xor
xor
jns
mov
pop
sub
out
repnz
jbe
out
cld
cmp
fsts
jne
addl
js
mov
neg
cmpb
mov
jo
sbb
cmp
xor
ss
mov
rcrb
stos
lcall
or
sub
pop
or
xor
inc
aam
xchg
fldl
js
cmp
scas
xorb
imul
jle
aaa
or
xor
add
setno
fidivrl
lret
mov
nop
into
fbld
inc
scas
jbe
js
imul
roll
mov
loopne
xlat
insb
sub
cmp
ljmp
ret
movsl
pop
outsl
lea
cmp
nop
adc
pushf
dec
xchg
xor
ljmp
ja
test
cmp
in
jbe
dec
mov
and
sbb
mov
and
jecxz
dec
fs
dec
mov
rolb
les
ss
fcoms
out
mov
sbb
data16
jb
mov
pushf
xor
or
push
xchg
cmp
in
imul
inc
cltd
loop
mov
adc
push
sbb
scas
mov
jle
push
mov
xchg
add
imul
mov
cmc
adc
daa
push
mov
std
jp
divl
inc
ficomps
mov
int
ss
arpl
mov
repnz
lcall
aaa
lods
hlt
jmp
or
xor
outsl
or
mov
stos
jp
iret
push
sub
jae
pushf
into
pop
jbe
inc
xorb
into
clc
outsl
push
pop
mov
xor
in
jb
sub
xchg
call
daa
ret
test
cwtl
or
movsl
sub
add
jle
jp
inc
mov
inc
loop
in
mov
testb
mov
sbb
out
inc
psubusw
aas
pop
add
leave
pop
or
data16
mov
sbb
jg
lret
push
adc
xor
lds
sub
or
les
pop
pop
sub
loop
aam
add
adc
xor
test
inc
les
int3
lret
imul
mov
je
iret
call
addb
pop
add
xchg
pop
lret
and
aam
jg
xor
fwait
and
push
pushf
ja
into
jnp
or
mov
mov
mov
in
mov
cmp
xor
leave
mov
push
cwtl
mov
add
imul
xor
loop
iret
jp
xchg
xor
xchg
add
jp
in
ficoml
fimuls
xchg
faddl
xor
jl
push
sbb
mov
mov
lahf
fstpt
xchg
mov
repnz
or
mov
sbb
pop
cmp
repnz
cli
xchg
pop
mov
stos
and
push
inc
loope
pop
jle
xchg
xor
pop
or
jp
push
adc
ss
push
push
push
lcall
pop
mov
aas
or
pop
inc
inc
push
dec
addr16
fcomi
dec
jns
mov
js
mov
xor
inc
cmp
xchg
roll
roll
mov
cmp
or
sarl
fs
movsb
jp
or
loopne
stc
dec
pop
pop
xor
mov
push
les
fimull
sub
shl
push
sub
mov
out
insl
jp
hlt
pop
lcall
mov
or
loop
bts
sbb
add
cmp
push
inc
pop
pop
mov
jge
ret
mov
sbb
sarb
fldt
or
popf
into
pop
xchg
testb
xchg
loope
sti
fimuls
mov
jbe
mov
in
rcrl
xchg
addl
inc
lahf
imul
inc
mov
mov
cmp
inc
pop
int3
add
jg
insl
or
fnstsw
ja
insl
int
sub
push
jle
cli
add
out
mov
fwait
pop
sub
and
and
ret
shlb
fs
pop
mov
xchg
call
jbe
or
mov
sbb
out
mov
sbb
xchg
arpl
idivl
fcmovnb
add
outsl
cmp
leave
scas
sbb
ja
jnp
out
ror
inc
sub
addr16
cmpsl
gs
ret
xor
xchg
push
fsubrl
xor
cmpsb
push
and
dec
loope
fisttpll
pop
lahf
mov
or
jl
cmp
lret
icebp
ret
test
xchg
and
aaa
adc
push
fs
cmpsl
and
lret
cltd
push
popf
je
cmc
loopne
pop
stos
icebp
mov
push
orl
mov
icebp
add
mov
push
ret
push
adc
xchg
xor
xchg
mov
test
add
lock
sbb
leavew
push
sub
jo
jns
lods
add
xchg
push
cmc
cmpsl
jecxz
int3
dec
std
aas
cmp
mov
mov
push
and
test
sub
inc
mov
sub
fnsave
dec
sub
decb
pop
cmpsb
notb
loopne
stos
movsl
lcall
mov
or
xchg
push
cli
and
mov
test
adc
cmovg
js
push
pop
enter
out
arpl
pop
pop
fldenv
cmpsl
das
add
xor
mov
ja
push
cmp
pop
shrb
sub
push
cmp
test
jecxz
and
scas
and
pop
stc
dec
pop
inc
neg
stos
xor
cmp
jp
mov
bound
fadds
js
call
pop
inc
push
push
stos
pop
pop
das
and
rcr
fisubs
cmp
push
adc
cwtl
sbb
fstl
popf
leave
dec
nop
mov
push
inc
addb
and
or
fstps
daa
dec
sbb
push
ret
pop
and
or
lahf
ds
fldenv
mov
shl
pop
sub
fst
aad
cmp
in
push
sbb
stos
or
aad
int
mov
jns
mov
outsl
push
jge
jnp
inc
pop
mov
push
mov
or
or
fs
xor
scas
mov
jle
outsl
mov
jmp
pop
lea
mov
mov
stos
xchg
pop
ret
es
xor
cmp
in
sti
push
bound
xchg
mov
inc
std
fs
pop
das
popa
lods
add
aas
fcomip
int3
mov
pop
andl
out
mov
cmp
inc
xchg
call
xor
xor
adc
sbb
in
xor
shl
mov
repnz
mov
mov
data16
decl
xor
xchg
jb
je
mov
add
xchg
dec
lret
add
movsl
cmp
jmp
adc
testb
lahf
loope
pop
cli
int
jbe
dec
xchg
xor
xlat
std
cli
cli
sbbl
loop
sub
loopne
mov
mov
cmc
in
mov
insl
daa
mov
sbb
ficoms
lods
push
pop
add
sub
jecxz
aas
xchg
cmc
mov
jo
ss
in
pop
jno
cwtl
les
jg
scas
inc
ret
cmpsl
div
push
add
in
pop
lret
dec
sarb
sbb
sbb
cmc
mov
push
popf
movsl
enter
push
jno
ret
mov
pop
cmpb
cmp
inc
xchg
mov
mov
rdtsc
repnz
pop
nop
in
fs
sub
adc
pushf
stos
inc
adc
sbb
pop
xchg
mov
xchg
xchg
frstor
jmp
pusha
add
xor
cmp
sub
sub
pop
ljmp
je
pop
mov
out
ficoms
bound
ds
es
ret
and
mov
mov
call
fiadds
add
xor
xchg
clc
push
loope
sbb
out
mov
push
xorl
cmp
test
push
mov
insb
in
lods
add
adc
pop
adc
inc
data16
imul
test
adc
sub
pop
jp
mov
mov
fwait
mov
icebp
insl
and
mov
ds
shrb
sbb
outsl
pop
mov
or
pusha
pop
xchg
push
sub
jns
cmp
jle
rol
jnp,pt
mov
or
test
es
mov
cmp
jecxz
cmp
imull
adc
xor
in
jg
dec
sarb
or
lds
push
in
lods
int
cmpsb
fchs
mov
and
xchg
jne
sub
lods
int
sub
cmp
add
shll
sub
pop
xchg
leave
popw
in
loop
add
lcall
jne
pop
cld
push
popf
mov
push
xor
mov
stos
jbe
push
je
in
xchg
xor
push
push
mov
fistps
dec
adc
sti
out
mov
inc
inc
mov
sbb
mov
or
nop
adc
and
mov
ret
es
and
and
out
mov
fcmovbe
mov
jae
out
mov
rcl
lods
mov
cmp
cmp
cmp
mov
subb
aas
cld
mov
lret
jmp
aaa
iret
sub
daa
in
fistl
mov
mov
out
addr16
pop
inc
xchg
icebp
mov
pop
xor
jp
nop
repnz
ljmp
sbb
iret
fldcw
loopne
test
sbb
sub
fsubrp
test
xor
aad
or
lds
push
insb
mov
jbe
ret
inc
mulb
sub
in
into
fldl
ret
aaa
loopne
test
stos
jae
dec
and
mov
mov
dec
xor
rorb
sub
fisttps
mov
push
lret
jb
adc
cmp
sti
push
dec
dec
mov
jb
sub
fadds
dec
inc
mov
jb
inc
jle
push
lock
fwait
xchg
push
icebp
clc
mov
in
sti
add
mov
sub
and
rclb
das
out
iret
lods
shrb
pushf
pop
dec
sarb
loope
or
dec
sbb
sbbb
pusha
pop
insl
inc
push
fistps
dec
sub
es
jns
dec
addr16
xchg
pop
jae
mov
lahf
pop
jmp
dec
inc
insb
jecxz
inc
scas
mov
clc
and
push
testb
das
lea
ss
or
repnz
cwtl
cmp
int
aas
sbb
cmp
jmp
lahf
andl
sbb
hlt
add
or
fcomps
lea
in
mov
fists
sub
pop
mov
and
imul
push
or
dec
outsb
es
inc
in
out
movsl
mov
enter
add
ficomps
jge
arpl
lods
aaa
jno
inc
or
hlt
stc
in
jo
and
push
or
push
inc
inc
push
mov
jbe
add
mov
mov
mov
add
inc
pop
dec
sti
adc
rolb
nop
inc
pop
fstpt
ret
and
push
mov
sbb
cwtl
ss
adc
add
popa
jecxz
xchg
mov
xchg
aas
mov
btc
shll
mov
loope
bound
into
addr16
cmp
enter
inc
lret
add
jg
jmp
les
xchg
or
shl
rcl
stc
sbb
or
inc
add
aas
inc
and
test
mov
jp
pop
mov
add
and
mov
ret
inc
mov
inc
es
adc
mov
lret
pop
adc
and
adc
bnd
adc
shrb
cwtl
sti
cmp
stos
lcall
pop
mov
mov
pushf
call
ret
pop
inc
lock
inc
mov
cs
push
mov
shrb
dec
loop
dec
orl
push
xchg
push
scas
pushf
scas
out
movsb
or
ret
xchg
xchg
lcall
iret
mov
fbstp
add
xor
pusha
sbb
mov
aaa
cltd
or
mov
fisubl
les
push
clc
mov
ljmp
mov
aad
sbb
inc
cli
add
push
xchg
mov
fstpl
and
pop
cmp
and
or
fists
cmpsb
outsb
cmp
sarb
inc
inc
in
bound
jb
divb
and
adc
test
scas
xchg
test
lds
xorl
test
sbb
roll
inc
mov
addr16
pusha
jb
push
sbb
cmc
outsb
cltd
std
inc
pop
sub
les
stos
xchg
mov
data16
daa
shrl
cwtl
in
jmp
inc
mov
jno
mov
test
andb
mov
out
mov
rcll
iret
loope
fs
mov
lods
lea
clc
adc
and
and
push
jg
push
push
add
subb
ss
lock
iret
sub
sahf
pop
mov
mov
add
and
pop
daa
repnz
pop
std
pop
inc
jbe
movsb
mov
adc
aad
test
cmc
sbb
mov
push
push
mov
mov
repz
push
dec
fabs
and
sub
xlat
or
lock
sti
stos
xchg
inc
data16
xor
jmp
jae
or
fsubs
repnz
xchg
pop
sbb
add
lret
movsb
pop
es
push
sbb
push
xchg
mov
add
aam
enter
neg
push
lret
mov
jne
bound
dec
sysret
sub
push
xchg
pop
cwtl
push
and
or
xor
mov
imul
fisubl
stc
push
dec
hlt
mov
push
mov
arpl
xchg
cmp
out
shrl
ss
das
ljmp
xlat
scas
and
test
or
mov
or
bnd
mov
mov
push
pop
pushf
inc
adc
pop
or
in
inc
mov
idivb
or
call
push
pop
xchg
outsb
xor
mov
enter
cmp
aas
fs
dec
repz
movsl
shrl
xchg
and
movsl
mov
gs
adc
test
mov
mov
xchg
cmp
jo
cmp
sbb
hlt
adc
mov
inc
push
or
scas
daa
nop
jmp
enter
loop
call
sbb
xorl
or
cmp
jno
int3
pop
xchg
sti
int3
rcrl
adc
cwtl
sub
fiaddl
sbbb
inc
push
dec
pop
aad
mov
pop
aam
out
pop
fs
jb
and
push
mov
aaa
add
std
in
pop
mov
push
sub
mov
cwtl
sbbb
ds
inc
push
sbb
xor
jge
xchg
fcompl
sbb
and
imul
jne
fwait
xor
push
push
cld
push
pop
jne
idivl
test
and
stos
les
daa
mov
nop
rcrl
cld
testb
outsl
cld
mov
dec
loope
inc
mov
push
jns
push
add
mov
cmp
pop
xchg
pushf
aaa
fldcw
and
jbe
aad
adc
into
jo
pop
insl
mov
cwtl
jo
dec
stos
jno
loope
mov
fs
data16
loope
hlt
dec
lret
jle
mov
loop
add
inc
mov
bound
icebp
jmp
fwait
lahf
mov
pop
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovnu
lret
iret
sti
jmp
fwait
lahf
mov
pop
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovnu
lret
iret
sti
jmp
fwait
lahf
mov
pop
pop
dec
dec
jnp
imul
or
cmp
sub
fcmovnu
leave
iret
cli
jmp
cltd
lahf
mov
movsb
pop
mov
sarl
sbb
lock
rcl
lret
mov
mov
jmp
mov
mov
sub
pop
sbb
sub
imul
stc
stos
mov
cltd
lret
test
sbb
or
jns
dec
pop
sbb
jnp
imul
mov
and
mov
mov
push
add
sub
imul
push
imul
nop
inc
lea
xchg
or
pop
push
ss
jl
pop
sbb
and
stos
jl
cmpsl
and
xor
divl
mov
cmp
shrb
xchg
aaa
mov
inc
mov
inc
mov
fistpl
jl
jns
sbb
js
test
mov
adc
fistl
mov
push
in
lds
sbb
test
dec
ss
aam
leave
insl
fs
jne
adc
add
mov
imul
sbb
sarl
cmp
push
inc
jae
mov
jo
push
xor
loopne
lea
test
imul
stc
stos
insl
fndisi(8087
lret
test
sbb
or
cmp
inc
pop
adc
jnp
sub
popf
std
sub
fstpl
or
push
sbb
jnp
ja
inc
stc
pop
push
test
mov
cld
loopne
cld
in
xchg
in
jmp
pop
or
insl
add
xor
and
push
js
movsl
lret
mov
mov
stos
mov
lret
test
sbb
imul
sbb
jnp
imul
mov
cltd
lret
test
sbb
imul
sbb
jnp
imul
jg
sub
jp
push
mov
push
sub
imul
mov
adc
or
repnz
mov
sbb
ret
sub
cli
dec
add
imul
decl
imul
repz
and
daa
or
int3
gs
inc
pop
loope
xor
int
dec
xchg
outsl
mov
loopne
inc
and
jge
dec
mov
insb
jg
xor
push
loopne
jno,pt
xchg
cs
fwait
sbb
add
inc
orl
stos
and
fisubrl
daa
sbb
fdiv
push
mov
sub
mov
enter
fisttpll
into
hlt
mov
mov
dec
dec
cmp
fimull
stos
popf
movsl
mov
aam
jno
mov
push
pop
into
jb
imul
aam
ss
cmp
push
push
jl
dec
jecxz
inc
loop
sub
lock
leave
cmp
jecxz
xchg
jno
aad
pop
int3
pop
add
sahf
daa
sbb
test
xor
popf
aam
addr16
cld
mov
push
mov
test
xor
and
fcmovb
cmp
jnp
inc
pushf
repnz
pop
into
or
mov
movsb
out
in
inc
shlb
js
shrl
ret
into
mov
sub
stos
inc
scas
lods
in
cmpsl
push
jbe
dec
xor
adc
xchg
clc
lret
pushf
mov
sbb
fwait
pushf
in
test
lahf
scas
ret
xchg
rorb
or
jecxz
pop
mov
js
and
mov
sbb
arpl
push
fs
add
dec
xchg
rcrb
adc
jbe
push
inc
mov
sbb
imul
test
mov
shl
pop
add
ds
pop
jle
dec
mov
outsl
xchg
je
into
out
sbb
cmc
jmp
sub
fwait
mov
push
es
push
fmul
mov
xor
jno
mov
push
rcl
push
enter
mov
xchg
jmp
test
cwtl
xchg
in
pop
sti
lock
inc
cli
xor
xchg
fwait
sahf
je
scas
lods
in
mov
push
cmpsl
arpl
inc
ficoml
ret
imul
dec
push
and
lea
lret
cmp
orl
xor
jle
cmpsb
scas
movsb
mov
pop
pop
inc
lahf
jmp
aas
cwtl
or
pop
dec
mull
sub
hlt
pushf
push
mov
pushf
pop
iret
fcoml
inc
mov
push
jno
fsubp
cmp
gs
testb
les
outsb
jnp
ret
and
sbb
push
mov
xor
push
push
nop
sub
xor
push
sahf
push
dec
outsb
xchg
xor
orb
add
sbb
add
xlat
imul
fldt
adc
mov
test
cmp
xchg
roll
mov
xor
cmp
lods
nop
sahf
lods
pop
push
and
call
cli
pop
mov
push
cmp
and
movsl
fsubrl
lods
orb
ja
add
ss
movsb
clc
jnp
sub
daa
ljmp
mov
inc
lret
xor
and
loope
int3
sub
and
loopne
xor
loope
fildl
popa
mov
aam
cmp
mov
sbb
xchg
mov
mov
jmp
jl
cmp
std
mov
ret
mov
xorb
iret
xchg
lret
mov
xlat
fbstp
cmpsl
outsl
sbb
lods
mov
pop
dec
jb
enter
add
jmp
fstps
mov
and
aad
mov
pop
jmp
or
push
or
shll
fistpll
push
add
out
test
xchg
push
jecxz
testl
enter
repnz
inc
jbe
into
sbb
jno
lret
mov
in
pop
in
cld
add
icebp
outsl
adc
loopne
inc
lret
das
or
cli
cmp
xor
xchg
mov
stos
mov
jmp
xor
mov
std
add
dec
inc
and
rorb
push
test
push
and
jmp
icebp
add
jmp
fwait
lock
xchg
scas
lods
imul
fildll
mov
cmp
sahf
cwtl
dec
add
in
sarl
sti
mov
mov
rolb
push
cwtl
xchg
lock
stos
aad
pop
sub
divps
sbb
ret
popa
mov
lods
mov
fists
add
dec
lret
aad
in
ljmp
cmpsb
testb
cmpsb
scas
cmp
pusha
fldenv
sub
mov
adc
outsl
add
scas
sbb
addr16
or
dec
mov
xchg
int
xchg
or
inc
fisubs
clc
adc
push
lret
push
fisttps
mov
fidivl
adcl
ffree
cmp
gs
sbb
pop
push
xlat
cltd
cli
inc
mov
mov
mov
pop
outsl
shrb
ljmp
and
inc
test
pop
xor
cltd
xchg
mov
jne
das
fildll
cmp
mov
std
push
scas
cmpl
loop
push
jne
mov
add
mov
je
or
adc
pop
add
or
xchg
mov
adc
push
in
xchg
push
inc
test
daa
int
imul
and
xor
mov
hlt
mov
call
dec
sarb
stc
je
push
repnz
cmp
sarl
push
dec
sbb
push
xor
std
aas
lea
adc
or
jbe
mov
sub
mov
loope
pop
jmp
push
dec
xor
mov
adc
inc
add
cmc
loope
loope
call
mov
adc
fsts
mov
out
movsb
rcrl
popa
pop
movsl
xchg
pusha
pusha
xor
jbe
call
jne
lret
int3
inc
incl
xchg
adc
decl
das
jecxz
ds
mov
xorb
shlb
into
ret
repnz
aaa
xchg
sbb
movsl
mov
cs
movsb
fidivl
cmp
gs
pop
cmp
adc
fnstenv
hlt
shll
push
mov
or
or
sub
inc
and
outsl
in
xor
or
or
xchg
out
mov
jnp
mov
mov
mov
mov
or
lea
or
rolb
outsb
inc
sub
sbb
repz
in
cmp
mov
cmp
adc
shll
inc
xchg
or
mov
mov
scas
inc
mov
lret
nop
inc
add
push
cmpl
jb
int3
mov
shrb
adc
popa
rol
or
dec
and
test
stos
adc
and
adc
jecxz
ret
pop
sub
enter
shrl
mov
xchg
mov
fwait
mov
xchg
movsl
outsb
and
pusha
or
mov
or
mov
sub
cli
daa
xchg
decb
sahf
xor
xchg
sbb
xchg
cli
mov
dec
cmp
mov
rcrl
mov
test
pop
aad
mov
mov
popf
fwait
leave
outsb
shrb
mov
pop
into
push
xchg
fbld
aas
fcomi
fisubrl
outsl
mov
in
test
aad
sbb
cmpsb
mov
sbb
iret
popf
inc
cs
aas
lret
flds
scas
push
lea
loopne
mov
test
or
and
fnstcw
test
rorb
push
lods
dec
repnz
jno
xor
idivl
or
data16
and
push
icebp
jae
dec
adc
out
dec
push
jg
sub
cwtl
subl
lods
xor
data16
sbb
loope
or
adc
mov
xorb
jmp
and
sub
adc
inc
in
jno
push
sbb
xor
movsb
dec
out
loop
lret
mov
arpl
mov
mov
inc
ret
stc
jecxz
in
subb
inc
pop
pop
xchg
pop
aad
pop
pusha
lcall
lret
jb
orw
pop
xchg
mov
incl
repz
ret
mov
pop
fimull
inc
adc
sbb
cmc
sbb
sub
lahf
add
sbb
xchg
mov
and
movsb
dec
rcrb
adc
sub
and
or
sbb
cmp
nop
xchg
adc
mov
ds
les
xchg
loopne
mov
pushf
cmp
js
mov
pop
or
lret
cmp
fidivrs
sbbb
in
add
or
mov
addps
rolb
fildll
cmp
add
jno
push
xchg
push
sbb
sub
mov
and
xchg
pop
cmp
stc
lea
sbb
mov
lods
add
orl
mov
ss
inc
xor
push
mov
ret
dec
ljmp
jbe
add
adc
aad
ds
xor
cmp
push
pop
pusha
ja
inc
adc
cmpsb
pushf
rcl
pop
pop
mulb
jp
xlat
sarl
inc
push
sbb
les
mov
nop
inc
mov
pop
inc
imulb
sub
or
ret
test
les
jmp
lret
pop
arpl
pop
pushf
fs
shll
add
pop
out
repnz
xchg
adc
js
pop
aam
leave
stos
pusha
xchg
mov
cld
push
cltd
fildl
std
mov
daa
push
jae
jnp
jmp
bound
xor
ss
push
jge
cmp
mov
sbb
ror
xor
and
and
mov
jb
adc
test
fcmovb
imul
pop
je
es
push
dec
out
popa
lret
jmp
jl
inc
arpl
cmp
mov
insb
ja
aas
gs
aam
rcrl
cmpb
dec
je
xchg
arpl
inc
pusha
add
mov
rclb
mov
pop
mov
stos
dec
dec
inc
cmpsl
clc
enter
xchg
mov
std
cld
aas
mov
xchg
xor
in
cltd
orl
stos
pop
daa
mov
aaa
push
pop
jno
inc
inc
or
mov
add
into
jge
mov
pop
mov
mov
fwait
inc
adc
xlat
loope
pop
adc
xchg
xchg
inc
popf
cmpsb
jae
mov
iret
mov
test
xor
sbb
lods
js
hlt
pop
adc
adc
ljmp
jecxz
inc
inc
sbb
sbb
mov
mov
xchg
das
fcomps
shl
jecxz
addb
test
insl
sarb
hlt
shrl
or
jns
jno
and
cmpsl
adc
pop
lods
mov
rcll
in
loopne
dec
mov
popf
cwtl
sbb
ret
test
push
outsl
movsl
stos
fstl
mov
insb
fs
push
push
sbb
rorl
jne
inc
cltd
cmp
insl
inc
dec
add
cs
sbb
jae
sub
dec
rcll
mov
mov
lods
and
xor
mov
inc
add
push
sub
or
push
shlb
sub
int3
xchg
dec
incl
daa
cld
mov
repz
dec
mov
pop
dec
in
scas
xlat
mov
mov
cmp
xchg
jne
push
add
jmp
data16
push
sub
lret
not
and
icebp
mov
mov
cli
fisubrl
inc
andb
rcll
lods
iret
int
lcall
dec
in
xor
ret
vpmacsdd
aas
test
imul
lcall
rcr
jmp
cmovo
sarb
add
sbb
test
adc
push
add
jmp
push
stos
imul
fsubl
sub
orl
push
notl
movsl
adc
sbb
inc
mov
outsb
fwait
mov
lcall
adc
mov
stos
xchg
inc
call
xor
jnp
std
mov
pop
add
dec
test
les
sbb
ret
andb
adc
popa
dec
push
lock
insl
cmovle
and
or
gs
daa
sbb
je
cwtl
cmpsb
cmp
jb
lds
add
fists
lret
jae
inc
adc
push
bound
ror
cmp
mov
and
icebp
mov
loop
xor
not
push
imul
addl
gs
add
lahf
jno
add
popa
movsb
inc
ds
pushf
push
jo
lods
and
add
orb
int
popf
pushf
or
cld
mov
pusha
inc
loop
jb
popf
lcall
jp
bsr
mov
jae
and
enter
jmp
cmp
inc
pop
mov
sub
out
pop
out
scas
pop
jmp
loop
or
xchg
push
mov
push
sub
xorl
ret
or
dec
lahf
outsb
push
add
in
rclb
shll
mov
push
or
or
mov
mov
in
and
and
out
out
and
jmp
clc
jl
xchg
sbb
hlt
out
xchg
jge
jmp
jg
filds
pop
jl
mov
sbb
fildl
push
enter
sub
in
and
add
mov
add
jne
inc
push
rcpps
lods
arpl
cmp
insl
sti
cs
scas
adc
xlat
mov
daa
lret
cmp
fwait
cmpl
loope
jge
out
repnz
xchg
add
clc
outsl
jge
cmc
sti
int
stos
adc
fists
mov
sub
sub
xor
and
addr16
dec
notb
cmpsb
notl
stos
insl
push
shrl
sub
push
incl
and
inc
mov
and
inc
mov
cmpsb
mov
iret
dec
pop
xchg
je
repz
fwait
xchg
add
adc
pop
inc
adc
imul
mov
or
fidivl
xchg
clc
push
cmp
add
ja
outsb
ja
cld
cld
dec
loopne
shl
mov
dec
daa
dec
push
cmp
in
fmull
mov
insb
insl
sub
je
dec
jge
mov
in
xor
cmpsb
ret
test
and
sub
mov
gs
loop
js
lahf
pop
test
sub
pop
or
mov
call
pop
in
int
sbb
divw
xchg
push
rolb
sub
pop
mov
out
aad
mov
xchg
cltd
js
xor
arpl
stos
loop
fwait
push
mov
aam
scas
xor
ror
sub
ljmp
push
repnz
popa
xor
lea
mov
or
sub
dec
mov
cmp
daa
inc
cmpsb
push
outsl
push
adc
jmp
dec
xchg
and
lret
sbb
inc
xor
adc
push
aad
cmp
rcll
movl
jno
in
dec
push
jb
pusha
pop
pop
insl
rolb
xchg
out
xlat
gs
cmc
push
pop
inc
lock
xlat
dec
shr
test
or
jle
rcr
jae
fcompl
into
pop
outsb
stc
mov
jge
and
dec
ficoms
inc
sub
test
lret
cmp
fistps
inc
mov
dec
lahf
dec
sbb
xchg
sub
mov
fnstsw
addr16
gs
scas
sbb
stc
push
scas
mov
lcall
insb
test
repz
std
cwtl
jo
jge
pop
fisubl
out
jmp
sub
push
mov
pop
aas
shrb
mov
fimuls
jns
sub
ljmp
int
mov
mov
clc
lret
mov
addr16
movsb
loop
push
cmp
dec
mov
or
or
mov
lcall
push
mov
xor
pop
adc
push
cltd
add
mov
gs
inc
in
mov
xor
shlb
mov
negl
lret
pushf
repz
aad
lock
in
dec
push
adc
cwtl
cmc
jl
stc
cltd
mov
inc
les
cmpb
std
xor
jmp
test
pop
jg
mov
push
js
sub
inc
movsl
leave
test
aad
push
hlt
cld
cmp
js
xchg
xor
fistps
bound
decb
pop
loopne
push
xor
pop
sub
pop
xchg
push
test
rorb
incb
lds
pusha
xchg
sbb
cmp
addr16
jno
sbb
fcoml
push
and
mov
sub
mov
popa
out
nop
sub
dec
cmp
sarl
fldt
xchg
movl
add
or
stos
mov
xchg
push
sbb
add
xchg
or
inc
mov
addr16
pop
loop
add
sub
fiadds
mov
jg
or
addr16
push
xchg
insl
add
lods
xchg
inc
cmp
jnp
adc
ret
adc
aam
cmp
sub
jne
in
xor
aam
lds
mov
sbb
dec
and
jb
insl
addr16
jb
mov
adc
repz
inc
sbbb
dec
sub
adcl
fistpl
push
push
sub
dec
pop
jbe
aad
repnz
jns
outsl
xor
jne
loop
shlb
int
push
jecxz
sub
sub
shrl
cmc
movsl
fwait
dec
outsl
dec
out
pop
lock
dec
dec
pop
sub
cmpsb
popa
scas
mov
jae
sbb
jns
xor
mov
and
sahf
sbb
jmp
testl
pusha
test
lcall
mov
push
mov
nop
xor
mov
jo
xchg
pop
nop
cld
xor
xchg
test
push
imulb
fisttpll
push
in
adc
xchg
je
imul
jl
cld
cmp
movsl
xchg
lcall
and
mov
js
cmp
movsb
negb
fbld
jmp
xor
lret
mov
cld
inc
cmpl
inc
jle
call
and
mov
sbb
aas
mov
daa
in
ss
adc
arpl
paddw
popa
mull
xchg
es
outsl
pop
xchg
sarl
ljmp
and
scas
adc
insb
mov
xchg
gs
shrb
unpcklps
xchg
add
mov
imul
dec
xchg
mov
lahf
cmp
mov
sbb
psllq
bound
mov
mov
mov
cmp
sbb
ljmp
sbb
scas
fwait
adc
test
daa
in
lock
mov
mov
sub
jo
fs
push
movsb
sbb
sub
push
xchg
bound
sbbl
aam
jmp
add
or
leave
sub
sub
cmpsb
pop
icebp
cmp
mov
cwtl
cmc
or
jnp
xor
aad
or
fwait
mov
jo
fildll
movsl
mov
fimuls
jmp
and
lods
dec
outsl
frndint
pop
lock
loopne
mov
rcl
cld
inc
repnz
sbb
daa
inc
xchg
mov
dec
cmp
lods
cmp
mov
cmp
push
push
in
mov
jae
xchg
sub
mov
aaa
out
inc
xor
add
push
xchg
sbb
jg
fsubs
xor
nop
jb
mov
mov
lods
mov
lcall
std
add
aad
mov
sahf
push
stc
pop
or
rcll
xlat
fwait
inc
push
xchg
mov
mov
mov
pop
stc
push
xorb
xchg
aaa
pop
and
scas
icebp
test
ja
add
add
and
int3
call
jae
pushl
inc
cmc
pop
xor
pop
fcom
push
xchg
and
loop
lret
cmp
cmp
cmpsl
xor
mov
jmp
push
ficomps
cmp
add
repz
das
fnstsw
sbb
dec
inc
pop
inc
mov
pop
repnz
cmpsl
pop
jecxz
add
pop
or
adcl
dec
gs
pop
cmp
jb
addb
mov
arpl
push
mov
shl
jne
loope
arpl
out
pop
sub
or
mov
cmc
stc
shlb
stos
xor
insl
mov
lods
fsub
adc
or
out
and
push
mov
mov
or
sub
mov
fistpll
rcl
dec
aam
rclb
jmp
inc
imul
ljmp
lods
jbe
mov
mov
loopne
push
mov
loop
and
pop
notl
jle
nop
jne
mov
into
into
into
iret
jnp
lret
mov
mov
leave
adc
bound
fsubp
aad
lret
aam
aam
and
xchg
in
in
mov
mov
call
add
adc
pop
mull
push
sbb
pop
sar
mov
and
cld
fisttps
repnz
mov
adc
or
cmp
aas
in
inc
jno
fdivr
lahf
fs
in
fxch
stc
dec
sbb
cmp
xchg
movsl
popf
aas
lcall
jle
mov
inc
mov
repnz
jbe
iret
int3
or
jecxz
jl
ds
pop
mov
mov
cltd
lret
test
sbb
imul
sbb
jnp
imul
mov
cltd
lret
test
sbb
imul
sbb
jnp
imul
jmp
stos
sbb
cltd
lret
test
sbb
cltd
cmp
or
dec
sub
imul
test
mov
mov
jnp
adc
in
mov
jle
xchg
mov
test
xchg
xchg
jmp
sti
sub
fistpll
pop
or
push
pop
sbb
jge
insl
ret
popf
fisttpl
mov
fwait
inc
stos
std
mov
sub
or
jg
sub
pop
lea
cmp
icebp
xchg
inc
cmc
dec
ret
or
or
pop
or
mov
mov
add
fiadds
loope
xor
fs
insl
shlb
or
push
mov
fsubl
mov
cmpsb
pop
xchg
push
nop
cmp
stos
jl
loopne
pushf
lret
mov
cmpsl
jnp
add
andl
movsb
mov
xchg
dec
fdivrs
mov
adc
stos
push
mov
pop
jnp
test
xchg
ds
les
dec
mov
gs
cmp
je
sbb
mov
sbb
clc
push
sbb
dec
xchg
dec
pop
adc
pop
xchg
push
lcall
mov
mov
xor
outsb
jge
jmp
jmp
xchg
cmpsl
mov
stos
daa
add
fwait
leave
lret
mov
gs
sub
add
xchg
and
out
mov
sub
dec
cmp
inc
bound
jne
pop
cmp
or
fcoms
lods
fdivl
mov
mov
inc
xchg
enter
sbb
pop
pop
dec
js
jle
pop
sbb
push
mov
in
mov
int
std
mov
or
or
dec
sub
insl
lret
popf
fisttpl
mov
fwait
int
std
mov
or
or
dec
sub
insl
lret
popf
pop
pop
inc
push
movsb
add
xchg
sub
mov
in
aam
jo
mov
insb
jle
jmp
push
sbb
mov
jge
adc
dec
jl
sub
xchg
add
xchg
xor
mov
jl
out
into
mov
shl
xor
pushf
sub
jbe
jecxz
mov
mov
jmp
insl
lods
adc
repz
mov
iret
mov
ljmp
lahf
jae
inc
mov
inc
inc
aam
adc
push
dec
aam
fimull
xchg
in
mov
mov
test
sub
jnp
sub
lea
int
shlb
jge
fwait
loopne
pop
push
sbb
mov
mov
and
cmc
pop
xchg
xor
in
push
negb
cmc
lea
fcom
mov
cmpsb
cli
gs
add
inc
ljmp
rcll
or
mov
iret
adc
xor
vpunpckhqdq
jno
lods
idivl
pop
outsb
inc
xchg
and
adc
insl
enter
sub
test
pushf
int
push
adcw
in
add
mov
lods
jge
cmp
inc
push
adc
insb
push
fwait
call
and
out
jnp
inc
movsl
aam
pop
jno
and
clc
test
iret
pop
adc
cld
lret
icebp
mov
cmpsb
push
xlat
inc
loopne
push
cmp
and
cs
ss
lock
cltd
loop
rcr
mov
stos
sti
movsb
inc
fnstcw
mov
insb
lret
div
in
or
ss
mov
mov
outsl
scas
or
pop
call
pop
inc
stos
stos
push
jb
mov
fistpll
inc
into
nop
scas
xor
xorl
dec
lea
outsl
mov
mov
sbb
adc
dec
sub
jns
cld
push
sub
rcrl
mov
popa
iret
mov
into
sbb
xor
dec
scas
lods
mov
push
fdivs
jbe
pushf
out
mov
sbb
test
cmp
mov
outsl
aad
icebp
add
lds
out
call
in
xor
xchg
mov
enter
ret
mov
lret
cmp
test
sbb
ljmp
mov
ret
loop
in
or
sbb
pop
movsl
insl
js
fwait
push
outsl
push
dec
or
daa
xor
xchg
add
mov
jp
xchg
xchg
mov
mov
sarl
icebp
mov
jns
push
leave
add
jle
jnp
leave
les
popa
push
test
jne
mov
mov
out
xor
inc
add
sbb
pop
data16
xchg
or
mov
dec
push
outsb
stos
test
mov
push
inc
and
push
imul
push
mov
loope
xor
sub
sti
orl
das
jmp
jge
or
jp
sub
pop
pop
arpl
pop
inc
pop
pop
inc
add
pushf
xorl
hlt
pop
inc
lods
cmp
inc
adc
test
jae
or
pop
dec
lcall
or
jb
or
xor
jmp
aaa
and
jge
adc
sub
sbb
test
neg
bound
adc
add
shll
stos
jle
shlb
dec
fcmove
xchg
sbb
rorb
out
mov
ficomps
mov
push
lret
pop
loopne
lret
adc
insb
adc
cmc
push
xor
and
orb
rcl
dec
stos
loope
rcr
sarb
in
xor
daa
mov
fidivs
mov
jns
push
call
fs
sbb
mov
test
inc
sub
cmpsl
dec
and
cmp
ljmp
jmp
clc
cs
and
loopne
adc
leave
sbb
and
xlat
dec
pushf
xchg
dec
mov
or
out
and
xor
sbb
insl
popa
enter
iret
je
push
and
mov
and
xchg
clc
ljmp
arpl
cmp
cmpsl
insb
mov
mov
sub
and
cmc
add
inc
ja
dec
jl
jbe
aas
test
js
hlt
out
or
jo
push
ljmp
add
or
fstpl
and
cmp
or
jae
jmp
test
imull
pop
jbe
mov
clc
decb
insb
add
mov
push
in
fmull
outsb
fwait
and
call
jecxz
sub
jmp
fidivs
mov
dec
jp
push
push
pushf
fcmovnu
test
and
shll
mov
cmpsb
lret
fdivrl
sbb
mov
mov
or
push
lcall
jl
pop
loope
or
and
xor
rorb
cmp
adc
dec
sbb
les
iret
cli
int3
xchg
add
lods
ret
xor
mov
xor
push
and
popf
jne
test
fsubs
cmp
leave
loopne
and
outsb
je
jecxz
lods
dec
lock
clc
js
cld
rol
push
or
fldenv
xchg
xchg
and
or
push
cmc
mov
push
cltd
adc
or
test
add
mov
pop
arpl
mov
decl
jmp
jbe
mov
pop
cmp
test
pop
xor
cmpsl
sbb
xchg
or
shlb
out
mov
data16
or
xchg
in
insl
test
stos
mov
cmpb
lods
int
sbb
push
insb
int3
cmpsb
cmp
sub
mov
popf
jns
insl
mov
dec
fmuls
mov
inc
adc
xchg
enter
fcompl
push
push
ret
sbb
arpl
add
adc
mov
or
inc
outsb
sahf
dec
das
xlat
pop
sbb
cmp
scas
insb
or
xchg
pop
je
mov
mov
lret
jmp
pop
mov
lcall
pop
insl
cmp
cwtl
cli
leave
mov
imul
in
mov
dec
jmp
lds
or
mov
mov
xor
or
test
mov
xor
cmp
inc
rol
push
xchg
out
aad
mov
mov
hlt
loop
rorl
repz
lea
sbb
lea
sarb
add
xor
imul
in
sbb
push
jns
cs
sarb
xor
mov
cli
incl
repnz
orl
ret
xor
mov
fs
mov
push
jno
ret
lea
push
adc
stos
or
insl
lahf
rorb
jbe
xor
mov
inc
aas
cmp
shll
mov
test
xor
inc
leave
packsswb
inc
call
ljmp
or
adc
sub
arpl
mov
mov
dec
dec
dec
xor
sbb
inc
jecxz
xchg
negb
out
xor
out
inc
aad
scas
jg
popa
rorb
rcll
mov
pushf
adc
sbb
hlt
ss
ret
push
mov
mov
ja
lods
pop
inc
mov
shll
pushl
lret
mov
and
ret
dec
jecxz
sti
shrl
xchg
adc
pop
stos
sbb
les
jnp
stos
lret
in
cld
ret
std
xor
mov
lcall
incb
cmp
hlt
cwtl
inc
out
hlt
mov
fwait
push
pusha
mov
mov
andb
inc
push
fnstenv
inc
inc
and
adc
lcall
pop
xchg
jne
mov
loope
cmp
xchg
dec
xor
fnstsw
dec
push
mov
adc
inc
xchg
in
inc
ljmp
xor
dec
push
pusha
jno
int
mov
xor
sub
cmpsb
rorb
sbb
ljmp
movntq
out
and
lcall
push
cld
or
test
ficompl
inc
clc
ret
inc
dec
cmpsl
stc
mov
popaw
inc
hlt
jne
jns
aam
mov
or
bound
out
movsl
or
and
sub
sub
cli
cmc
cmp
lahf
dec
sub
sub
les
shlb
insl
xor
inc
into
loopne
push
mov
rcl
xor
stc
sbb
test
sub
mov
test
std
cmpsl
arpl
out
rcr
add
inc
les
jns
push
int3
adc
sbb
cwtl
sbb
mov
mov
popf
lahf
jbe
les
cltd
sub
xor
xor
aas
sbb
icebp
pop
or
mov
mov
mov
cmc
cmp
mov
jle
sti
mov
xor
pushf
lea
sbb
and
clts
pop
or
rorl
xchg
push
push
push
xchg
and
sti
or
adc
jne
xchg
ja
mov
jg
je
and
insb
mov
and
xor
mov
nop
push
or
lret
cmpsl
sar
pop
lods
cmp
and
outsl
dec
cmp
imul
mov
add
fwait
clc
movsb
jl
int3
das
bswap
popa
pop
jmp
loopne
push
push
push
or
icebp
inc
add
inc
mov
mov
outsl
pop
jnp
sub
pop
jmp
or
xchg
ja
std
loopne
mov
rol
aaa
jl
mov
cmp
test
sahf
hlt
icebp
adc
sub
cs
mov
xchg
add
pusha
xor
push
cli
mov
xchg
ret
testb
xor
pop
jecxz
hlt
xor
outsb
lret
adc
pop
xchg
into
cmp
out
push
fnstenv
jge
dec
inc
repnz
push
daa
leave
jp
mov
rolb
sub
push
fiaddl
add
jl
dec
in
ret
push
jno
ljmp
push
shll
sbb
je
lds
out
std
dec
jnp
dec
cmc
out
stos
jge
insl
mov
mov
mov
imul
scas
dec
jge
add
mov
xchg
test
or
or
aas
in
nop
lahf
sbb
pusha
fsts
xchg
iret
sbb
pop
out
mov
pop
jl
push
pop
out
pop
cmp
pop
lcall
jp
pop
cmp
in
inc
lds
add
push
scas
stos
sahf
stc
adc
lock
add
dec
adc
sub
imul
xchg
mov
pop
imul
lock
cmpsb
xchg
push
dec
mov
test
push
mov
pop
xor
mov
decb
dec
jecxz
jns
ss
cmc
mov
sbb
out
rcrb
lret
rcll
mov
adc
call
dec
popf
cltd
ja
ja
adc
lea
sbb
dec
xchg
xor
test
fstpt
pop
inc
stc
cltd
fldt
xlat
pop
xchg
jmp
add
icebp
daa
jg
and
fimuls
fsubl
mov
mov
std
lret
aad
hlt
push
loop,pn
popa
loopne
xchg
pop
out
adc
lods
mov
out
in
leave
outsb
fld
dec
pusha
mov
pusha
icebp
cli
cs
dec
cwtl
push
jmp
in
ret
insl
outsb
mov
sbb
and
gs
pop
scas
mov
cmp
jae
imul
les
daa
into
push
xchg
xor
in
outsb
pop
aam
pusha
mov
es
scas
jmp
sub
sub
cld
dec
imulb
pop
jl
sub
mov
sbb
int3
test
xor
mov
push
lahf
adc
das
hlt
lds
test
xchg
push
imul
test
dec
jl,pn
fnsave
jne
test
popf
in
jle
jecxz
xor
loope
repz
dec
fdivrl
mov
repz
pop
adc
int
jae
adc
sbb
fwait
adcl
imul
bound
push
movsl
outsl
ds
mov
fisttpll
pop
ja
sahf
aad
or
cmp
jae
loope
clc
sub
jmp
ret
sbb
mov
sti
movsb
in
or
push
or
dec
ret
push
in
xor
mov
mov
pop
jnp
mov
ret
addr16
or
aad
adc
cmp
xchg
xor
mov
imul
sub
mov
jmp
jecxz
push
mov
scas
mov
cld
icebp
cli
and
mov
adc
js
inc
or
cltd
cmp
sub
clc
clc
jno
inc
dec
repnz
roll
call
sub
out
sub
dec
mov
aam
fisubrl
cltd
or
jecxz
cs
cs
pusha
fmuls
dec
push
fwait
icebp
aaa
out
ds
aam
scas
insb
pop
lock
fdivrs
insl
in
mov
cmp
adc
mov
add
xor
sbb
add
lcall
xor
dec
negl
popf
and
xor
push
or
aam
lods
cmp
into
nop
add
movsb
cmp
pop
xlat
rcl
adc
gs
dec
mov
xchg
cmpl
mov
popf
mov
sub
sbb
ss
stos
cli
sbb
cli
mov
dec
daa
pop
hlt
sarb
fs
icebp
push
negb
es
icebp
cmp
add
and
sbb
fdiv
pop
lods
das
scas
std
loop
negl
into
mov
es
or
enter
in
loop
adc
js
addl
sbb
ljmp
cmp
out
insb
mov
mov
scas
mov
mov
aad
imul
fxch
jns
add
jnp
inc
fdivl
bound
mov
sub
jae
rorl
and
pop
out
jnp
push
mov
popf
out
mov
dec
lods
outsl
adc
dec
push
mov
jecxz
dec
imul
mov
jmp
jns
inc
mov
inc
inc
mov
jecxz
mov
fisubrs
movb
pop
icebp
mov
fs
pop
pop
xor
dec
movsb
scas
push
mov
or
scas
pop
push
fildll
in
fistpll
test
call
mov
addr16
and
shlb
insl
mov
push
dec
inc
xor
pop
mov
ds
addr16
or
stos
loop
and
addl
out
in
test
xlat
sbbl
scas
outsb
mov
push
adc
mov
je
cli
jb
adc
popf
jne
push
pop
push
mov
aaa
adc
jp
imul
lock
andl
xchg
add
rclb
lahf
outsb
jo
xchg
fisttpl
mov
pop
inc
lret
mov
stc
out
shlb
fucomp
dec
mov
mov
mov
imul
pusha
stos
jmp
jo
ret
ja
out
ret
scas
sub
and
mov
stc
loope
push
in
out
loopne
pop
or
pop
add
xchg
adc
pop
add
pop
push
adc
aas
jmp
es
cld
push
push
leave
pop
cli
in
jmp
push
add
mov
add
sbb
leave
aaa
sub
in
adc
and
aad
xor
mov
sub
sbb
test
jno
shrb
sbb
sub
pop
fisubrs
fisubl
mov
xchg
mul
out
je
test
sub
loopne
lds
and
aas
mov
pop
lock
fmull
test
cmpsb
cmc
jmp
mov
fisubs
fldt
xor
test
add
inc
lret
mov
mov
pusha
outsl
mov
ja
mov
xor
sbb
xchg
idivb
sahf
push
push
inc
or
jecxz
ret
lds
mov
ret
inc
fidivl
sub
inc
and
jb
dec
es
nop
xchg
in
sbb
adc
cmp
lds
xchg
mov
shrl
loop
xor
push
jnp
repnz
jmp
mov
pop
lock
sub
mov
fs
rolb
and
sbb
and
dec
jmp
cs
pop
test
jnp
clc
adc
shlb
hlt
mov
cmpsl
adc
xchg
lock
pop
jns
cld
sub
cltd
xchg
inc
push
push
mov
lcall
mov
push
xorb
cmc
push
hlt
lds
xor
divb
xchg
xchg
pop
mov
jle
sub
movl
push
mov
subl
cmpsb
push
lea
inc
add
xchg
sti
call
jbe
scas
mov
jmp
and
pop
call
inc
stos
mov
bound
mov
sub
mov
ss
lcall
out
ficompl
imul
push
inc
jns
jecxz
ret
dec
push
mov
gs
inc
cs
aad
int3
mov
cltd
pop
leave
xchg
shrl
mov
add
adc
lahf
push
inc
lods
decb
pop
dec
andl
push
mov
pop
mov
xchg
inc
test
sbb
pusha
sbb
lahf
cli
testl
jb
add
adc
xchg
mov
xchg
repnz
jno
push
and
push
mov
push
sti
aaa
mov
dec
cmp
cmc
cwtl
clc
ljmp
into
jnp
scas
cs
jns
test
cmp
mov
cmp
pop
push
inc
sahf
mov
nop
or
pop
or
loopne
mov
loopne
pop
mov
cmpsb
mov
pop
cmpsl
xchg
adcb
mov
enter
sub
add
and
mov
and
cmpsl
xchg
stos
lahf
jns
cld
lahf
in
loop
adc
pop
mov
imul
push
mov
aaa
les
adc
xor
pushf
dec
aam
push
mov
frstor
out
mov
xor
lret
daa
mov
push
dec
test
sub
and
shr
inc
sbb
jmp
mov
outsl
iret
std
adc
xor
xor
in
xchg
xchg
sbbl
stos
mov
mov
daa
pop
cmpsl
aam
xchg
test
loopne
mov
jg
pop
in
fimuls
popa
clc
mov
fsub
ja
cli
jmp
cmp
stos
lret
sahf
mov
cmp
popa
dec
in
mov
pop
inc
push
out
jo
insl
jbe
cmpsl
pop
fstps
call
lret
imul
jb
mov
jne
cmp
or
loope
stc
add
mov
and
adc
scas
stc
mov
cmp
xor
ret
in
xchg
out
sar
mov
out
rep
mov
jl
cmp
rolb
inc
inc
and
or
rcll
push
add
adc
cmp
xchg
ljmp
push
xlat
lds
dec
xor
xchg
je
call
jg
rolb
mov
sbb
push
sbbb
lahf
lods
adc
stos
mov
sbbb
jne
daa
clc
xor
jge
nop
jg
cmp
jnp
sub
cmpsl
fldenv
add
es
repz
dec
mov
dec
mov
push
cmp
push
lock
fdivrs
mov
cmp
mov
out
fwait
mov
mov
les
mov
jle
jnp
repnz
idivl
mov
cmp
mov
rclb
std
into
mov
out
cmp
inc
cmp
stos
cmp
mov
sub
push
dec
xchg
clc
xchg
jle
xchg
pop
mov
jo
test
jmp
push
inc
xchg
jne
pop
add
lcall
je
dec
aaa
shll
mov
jne
fld
jno
and
out
aaa
inc
fcomip
cld
das
in
jmp
enter
or
fistpll
stos
test
dec
lahf
jnp
jl
outsb
jmp
sub
sti
jae
cs
pop
out
sbb
lea
sti
addr16
mov
test
jp
mov
cmp
movsb
clc
in
outsl
vmwrite
enter
scas
cmp
lahf
repnz
dec
inc
mov
jae
cmpb
mov
mov
ficomps
sub
dec
stos
cmp
push
sbb
mov
pop
lret
mov
imul
push
fisttps
mov
push
loope
sbb
nop
stos
fimuls
mov
cmc
jo
dec
adc
dec
mov
jp
lcall
std
xchg
test
jg
pop
xor
mov
adc
inc
dec
aad
dec
subl
aam
inc
adc
ret
into
js
loopne
call
and
mov
inc
and
mov
scas
pop
mov
dec
push
xlat
hlt
js
fwait
aad
push
into
lret
and
jae
pop
pop
cwtl
mov
je
xor
test
mov
and
and
insl
sar
xor
push
test
pusha
test
mov
subb
gs
mov
movhps
inc
mov
arpl
mov
ljmp
adc
mov
lcall
xchg
jne
mov
lea
out
mov
fwait
int
std
mov
or
or
dec
sub
insl
lret
popf
fisttpl
mov
fwait
int
std
mov
or
or
dec
sub
insl
lret
popf
fadd
sti
mov
lahf
gs
std
mov
or
or
dec
das
pop
or
popf
testl
stos
jge
in
dec
loop
cmpsl
sarl
mov
add
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
js
push
add
sbb
jge
insl
inc
clc
mov
mov
mov
rorl
and
dec
add
jno
popa
sbb
inc
clc
mov
shrl
loope
xchg
mov
js
push
add
jno
popa
sbb
inc
clc
sbb
mov
shlb
shll
push
push
js
sub
cmp
xor
xor
mov
add
addr16
lods
ja
adc
lods
sahf
adc
add
pop
pop
push
nop
dec
or
test
nop
subb
nop
out
insl
data16
cmp
clc
dec
sbbb
mov
and
cs
dec
cmp
add
jo
popa
out
pusha
mov
push
outsb
out
roll
rcrb
mov
sbb
xor
je
inc
or
call
outsb
inc
inc
xor
cs
dec
xchg
test
rolb
out
andl
orl
shlb
push
add
jno
popa
sbb
inc
clc
mov
mov
mov
rorl
and
sbb
dec
adc
stc
movsb
fstl
faddl
or
sub
add
popf
leave
ljmp
xchg
cld
mov
mov
xchg
adc
jb
jns
cmp
popa
sbb
inc
clc
mov
mov
mov
rorl
and
dec
add
jno
popa
sbb
inc
clc
mov
mov
mov
rorl
push
loop
push
jp
subl
and
dec
ljmp
outsb
xchg
pop
outsl
dec
mov
cwtl
cmp
jnp
daa
inc
push
into
popa
rcll
mov
fwait
or
ficoml
movsb
ja
push
shl
sbb
aam
fcmove
ret
les
ds
aas
sbb
popl
mov
mov
push
lea
add
shlb
clc
pop
add
pop
pop
xchg
mov
out
mov
mov
shrb
call
mov
lcall
add
data16
push
and
ja
out
roll
add
and
mov
mov
mov
fadd
rol
enter
mov
cmp
icebp
popf
sahf
inc
movsb
adc
mov
mov
sbb
sbb
loop
xchg
add
inc
mov
and
fstpl
add
cli
and
sahf
cltd
pop
dec
iret
push
fdivp
pop
pop
cmp
jno
mov
sub
data16
xchg
insl
int3
push
jne
push
mov
and
cli
pop
sbb
adc
sub
jmp
es
or
cmp
add
orb
pop
xchg
add
mov
mov
fstpl
popf
sub
inc
xor
js
data16
pusha
add
test
jae
xor
jb
cmp
mov
lods
lcall
movsb
jecxz
mov
xor
cmp
ja
jg
push
mov
ds
jo
loope
orl
rolb
gs
mov
js
and
mov
pop
jb
data16
stos
stos
cli
iret
mov
inc
dec
adc
cld
js
movsb
mov
aad
mov
push
rcll
mov
addr16
push
test
inc
pop
stc
mov
sub
scas
jne
adcl
xchg
sbbb
mov
jmp
adc
xor
cwtl
xchg
ja
pop
sbb
or
mov
fsubr
jne
push
fcomps
in
add
or
jae
pop
mov
cmp
arpl
or
es
jbe
cltd
xchg
or
ret
and
int
mov
pop
or
mov
push
in
fwait
push
sarl
subb
and
jmp
loope
mov
repnz
movlps
pavgb
or
ja
fcomi
ret
fnsave
cli
dec
ljmp
push
jnp
pop
arpl
loope
xor
jmp
addr16
add
mov
inc
push
subb
mov
lret
push
in
jp
adc
pop
shll
ljmp
arpl
cmpsb
add
popa
jp
and
and
cmp
lea
sub
mov
mov
jns
mov
cmpsb
or
test
mov
mov
out
jae
adc
xor
dec
dec
and
icebp
arpl
jle
sbb
or
adc
mov
mov
adcl
adc
fmul
xchg
scas
pop
adc
loope
xchg
inc
sahf
or
and
jns
cli
sbb
scas
mov
pop
arpl
imul
cld
add
es
mov
es
push
scas
addr16
ror
push
loop
subl
and
int
xchg
test
popf
push
fstps
je
pop
dec
xor
mov
popa
hlt
cld
inc
scas
pop
push
sti
dec
in
and
cltd
jnp
and
cmp
jae
jb
or
mov
stos
pop
popa
stos
sub
movsb
out
mov
sar
insb
sti
xchg
sahf
mov
mov
or
rolb
push
cli
test
push
adc
ret
andl
jle
sub
imul
nop
and
cmp
ss
std
fidivrl
ret
sub
stc
push
push
js
jmp
adc
jae
lods
jle
mov
out
push
pop
test
cld
aas
ret
loope
or
bound
pop
in
push
cwtl
sbb
cmpsl
pop
in
ret
mov
jnp
jp
xor
cs
test
dec
sub
push
pop
jne
sbb
xchg
and
js
mov
into
sub
adcl
xchg
sbbl
mov
sti
mov
push
mov
xchg
outsb
cltd
or
insl
das
cmp
push
shlb
ljmp
insl
jb
push
add
out
out
jnp
popf
je
sub
mov
sarl
sbb
sarl
lea
loop
call
add
jecxz
mov
mov
mov
inc
jp
push
into
mov
cli
sub
sub
imul
popf
shld
test
sbb
lcall
aaa
in
call
jb
rep
cmpsb
push
or
jo
stc
out
cmc
sbb
adc
push
lret
push
lret
add
xor
dec
ftst
mov
js
cs
fnstenv
cmp
daa
xor
lret
mov
aaa
push
mov
or
sub
mov
cmp
out
jne
movsb
and
cltd
lock
nop
imul
inc
pop
xchg
jae
shlb
push
lcall
mov
jbe
or
mov
mov
pop
jg
mov
or
and
sbb
sbb
push
or
dec
ret
fs
cmp
jno
call
lahf
pop
jo
cmpb
xchg
aas
inc
sbb
push
outsb
inc
xchg
sahf
cmp
mov
cltd
mov
mov
or
fstpl
stc
pusha
movsb
sarl
mov
xchg
ret
jg
imul
gs
jbe
mov
jns
outsb
dec
inc
sbb
sub
cmp
mov
loop
std
cmp
dec
pop
lahf
enter
cmpb
adc
push
fxch
pop
mov
loope
cli
repnz
cmpsb
aaa
dec
lahf
in
bnd
push
push
add
adc
xchg
push
int3
mov
sbb
sub
xor
fdivr
cmp
push
aam
mov
in
outsl
xor
je
cltd
ret
test
jle
in
xchg
int
push
inc
xchg
mov
inc
pop
insb
ret
dec
pusha
repz
adc
sub
data16
rcll
add
data16
fldt
jecxz
cmc
testl
imul
data16
mull
enter
test
es
inc
loope
add
dec
jmp
sarb
sahf
xchg
add
or
xchg
outsb
es
inc
out
es
lods
sarb
push
push
xchg
loope
jae
rcrb
scas
iret
pop
xchg
ret
addl
push
out
aam
mov
ja
lahf
xchg
pop
clc
sti
test
insb
mov
out
popa
fidivrl
je
dec
xor
mov
repz
enter
imull
sbb
mov
xchg
mov
cmp
xchg
imul
or
pop
xor
stc
push
insb
addb
cli
mov
pop
sbb
sbb
mov
lret
jo
xchg
cmc
addl
je
fbld
sub
jns
insl
scas
aam
xchg
sbb
mov
cltd
leave
mov
imul
mov
mov
into
lcall
roll
mov
aas
adc
push
ss
sbb
sub
scas
jl
sub
in
add
lret
imul
fucomp
jg
lods
and
rcll
mov
adc
out
lret
mov
cmpsl
out
xchg
mov
sbb
sbb
adc
aam
aaa
jle
push
pop
pop
mov
pop
adc
sbb
es
scas
shrb
xchg
jecxz
aam
mov
aaa
imul
fidivl
shrl
or
test
and
movsl
cmpsl
pop
jno
cmpsl
mov
or
icebp
fs
shlb
jecxz
or
lock
mov
xchg
js
cmp
xchg
pop
icebp
rorb
hlt
jns
pop
addl
out
jl
xlat
jae
rcll
cmp
xchg
dec
sahf
mov
js
push
pop
push
outsb
iret
stos
pop
add
xchg
mov
adc
lahf
mov
lea
sub
mov
xlat
mov
imul
mov
aaa
and
iret
sbbb
les
mov
sbb
xchg
cmc
cmp
fldt
jmp
sbb
in
xchg
inc
lock
mov
and
loopne
cmp
bound
jbe
test
sti
adc
sbb
aas
nop
adc
pop
ret
sub
fldt
inc
js
lcall
xlat
mov
cmp
je
jne
jns
pusha
sarl
arpl
adc
rcrb
sbb
jne
ret
stos
mov
cli
sub
xchg
push
mov
fistps
add
ss
push
fisubrs
mov
mov
hlt
mov
out
inc
mov
push
mov
sbb
inc
int3
ret
mov
push
mov
pop
push
inc
pop
push
pop
fs
fs
adc
out
popa
js
das
mov
mov
or
add
mov
ss
cmp
sbb
out
pop
ret
dec
and
adc
adcb
icebp
cmp
mov
mov
jp
dec
test
imul
mov
fwait
pop
aam
or
sbb
sub
repz
rcrb
dec
mov
jle
ret
mov
push
jns
push
xor
fucomip
outsl
imul
outsb
push
jbe
jnp
mov
mov
sbb
ret
xlat
jge
add
jge
leave
adcb
mov
sub
mov
push
dec
shrb
sbb
aad
sub
imul
in
pop
mov
negb
push
jg
push
jmp
adcb
or
rorl
pop
xchg
pop
xor
xchg
or
repnz
sbb
fstps
push
fwait
test
jmp
mov
adc
adc
popf
stos
xor
jecxz
xchg
mov
push
call
fstps
pop
aaa
xlat
rolb
sti
push
push
add
loopne
arpl
ja
dec
sbb
mov
dec
push
sbb
rcrl
sub
fmulp
rclb
pop
inc
xchg
dec
jp
test
test
ja
push
fs
lods
add
leave
push
aas
insl
sbb
sbb
jmp
ljmp
loopne
loop
repnz
mov
xchg
and
push
repz
lock
mov
scas
cmp
mov
fwait
push
lods
xor
ret
mov
jae
loop
mov
pop
push
sbb
jl
mov
jno
mov
sbb
hlt
fisubrs
mov
stos
mov
jle
aas
popf
inc
sahf
mov
adc
jp
cmpsb
push
xchg
xchg
push
mov
xchg
out
lret
mov
dec
cmp
or
mov
jmp
aaa
lahf
adc
inc
bound
and
push
das
inc
push
and
xchg
xchg
and
mov
outsl
popa
sub
mov
adc
cmovle
jmp
adc
mov
mov
adc
jge
dec
push
mov
jp
and
mov
test
ss
std
int
pop
cmp
xchg
dec
movsb
adc
dec
push
pop
data16
je
jmp
out
shlb
mov
pop
stos
adc
sbb
inc
scas
cmp
stc
mov
cs
lods
and
hlt
scas
cs
and
mov
insb
mov
cs
andb
das
inc
pop
sub
add
add
stc
xor
cmp
mov
mov
push
jge
dec
stos
aam
sub
or
xlat
aam
mov
subl
roll
loop
enter
lcall
pop
add
jno
bound
dec
add
mov
loope
and
rclb
and
cmp
inc
and
or
add
xlat
sbb
jge
andb
and
add
movsb
xor
pushfw
mov
xor
sahf
stc
push
add
std
in
ficomps
shrl
outsb
add
push
xchg
addb
push
inc
fs
inc
outsl
ret
iret
stos
xchg
push
das
mov
ss
lahf
sub
inc
jns
rorl
test
inc
dec
mov
sbb
xor
sbb
fwait
mov
dec
sub
pop
mov
cli
xor
mov
insb
loop
out
cmp
lcall
hlt
je
push
insb
movsl
add
neg
sbb
pop
xor
add
sub
sub
enter
dec
or
aaa
push
fprem1
xor
adc
add
in
mov
push
sub
cmp
negb
jb
sarb
or
stos
int
shlb
adc
xchg
adc
mov
stos
lea
popa
cld
adc
push
sbb
and
and
push
xchg
cltd
inc
xchg
or
rcr
cmpsb
sti
mov
add
movsb
ja
dec
dec
xor
popf
sub
sub
xchg
jae
stos
addr16
adc
cmp
mov
mov
in
in
pop
sub
push
out
push
xchg
out
mov
inc
adc
cli
or
push
inc
stos
inc
mov
mov
dec
mov
push
dec
lods
lds
fsubrs
testb
out
mov
mov
pop
mov
sbb
sbb
je
scas
jnp
popf
test
cmp
inc
popf
sub
icebp
out
test
mov
sub
je
sahf
inc
sti
sbb
sbb
lods
sti
push
xchg
shrl
jb
ret
dec
xchg
lds
test
mov
sub
insl
cmp
lcall
mov
dec
int3
jp
lea
pop
dec
push
pop
inc
jno
rcrb
hlt
xchg
lcall
sbb
mov
arpl
repz
mov
xor
xchg
mov
stos
and
mov
jno
inc
stc
push
into
fdivs
enter
idivb
fcomps
das
lret
sbb
jecxz
mov
fs
pushf
xor
and
aas
loop
xchg
jo
and
inc
inc
pushf
fdiv
loop
xchg
addl
lods
mov
xor
negb
sbb
cmp
sti
jo
mov
inc
movsl
shrl
outsl
mov
mov
ffreep
cs
fmul
sti
jb
mov
pop
outsl
add
pop
mov
arpl
cltd
jo
aad
add
aad
push
jnp
pop
sti
inc
fcomps
add
insb
out
and
lods
roll
mov
push
rcrb
pop
test
das
popa
mov
in
jl
and
popf
aaa
das
js
jmp
pop
pushf
loopne
pop
ffree
decl
mov
xchg
sub
pop
pop
sub
lahf
push
in
push
addr16
jo
push
pop
jl
jmp
cmp
sub
dec
push
and
shrb
jo
es
sti
popa
or
fwait
or
cmpl
cmp
shll
mov
repnz
jg
bound
es
fisttpll
lahf
jmp
ret
push
xor
imul
jp
and
mov
push
nop
aas
and
push
mov
in
and
xchg
jl
out
push
std
int
dec
sbbl
jno
inc
mov
dec
push
cli
andl
mov
xchg
psrld
ja
mov
outsl
jp
jno
arpl
sub
push
mov
lods
test
add
jo
adc
loope
xor
jnp
pop
jno
xchg
lds
fsubrs
pop
mov
out
push
add
std
sub
mov
and
cmpsl
xor
repz
out
stos
imul
xlat
inc
pop
sahf
xchg
pushf
gs
stc
push
bound
dec
pop
push
inc
or
enter
xor
sarl
idiv
mov
mov
enter
and
adc
or
jmp
js
sbb
out
es
adc
mov
lcall
xchg
xchg
pop
or
cmp
add
and
jg
call
imul
inc
or
les
rcrb
lods
or
mov
xor
cmp
pop
push
in
stc
lds
push
pop
test
nop
sbb
jo
leave
xor
push
cmpl
sbb
enter
dec
xchg
adc
fbld
aad
adc
jmp
mov
insb
mov
lahf
dec
mov
pop
adc
sub
sbbl
cmp
mov
mov
adc
aad
ss
pop
rorb
push
xchg
mov
nop
fcomip
prefetch
mov
sub
or
bound
inc
jb
lahf
sti
push
mov
jmp
sti
sub
push
jb
push
inc
loop
add
inc
outsl
xchg
mov
jmp
stos
add
aad
mov
mov
mov
pop
and
xlat
lcall
xor
aam
adc
xchg
dec
enter
pop
lcall
lods
cmpsb
sbb
fimull
movsl
ret
push
andl
mov
push
movsb
push
les
inc
in
add
or
cwtl
jle
sub
enter
mov
int
xchg
lea
pop
cmp
mov
sbb
fistps
mov
add
rcll
dec
dec
dec
xor
jecxz
jns
and
fistpl
push
jne
mov
call
cli
fildl
pop
shrl
xchg
shll
in
test
push
pop
imul
sub
push
mov
in
dec
jns
jecxz
flds
cmp
inc
sbb
mov
dec
fildl
dec
mov
inc
mov
sbb
popa
xor
jle
and
add
ds
push
xchg
sub
xchg
cltd
sahf
xchg
repnz
xchg
lods
dec
call
hlt
leave
hlt
enter
xor
loop
mov
arpl
xchg
xchg
dec
push
xor
stos
js
xor
inc
adc
xor
lret
jg
lea
fcmovbe
sub
jge
cltd
out
add
lods
call
xor
fs
sbb
xor
outsl
std
add
xlat
sub
pushf
arpl
xchg
sbb
ja
les
das
arpl
cli
lcall
cmp
mov
sub
fists
insl
jbe
pop
rcrb
cmpl
stc
ss
mulb
cmp
out
bound
icebp
pop
jp
push
push
sbb
mov
mov
mov
bound
jmp
fcomi
out
fdivr
sbb
mov
xchg
lock
or
es
xchg
shl
clc
sub
arpl
mov
out
xchg
push
xchg
jb
out
sbb
stos
aas
movsb
mov
push
push
mov
insl
mov
inc
outsb
jl
sahf
xor
cld
push
mov
or
push
pop
scas
sub
push
mov
into
movsl
jns
xor
out
jecxz
pop
shrl
inc
cli
lock
aam
loopne
cli
popf
lret
out
scas
repnz
rorb
jge
or
pop
jl
adc
xchg
push
subb
sub
adc
xor
xchg
jge
or
push
dec
or
adc
es
jbe
push
sub
jge
stc
das
repz
rorb
xchg
roll
jle
daa
arpl
pop
int3
sbb
adc
pop
gs
sub
test
out
xchg
sarl
pop
add
fs
ljmp
test
loope
mov
daa
mov
les
lods
mov
imul
xchg
fbstp
inc
sahf
mov
mov
xor
mov
lret
sbb
adc
push
iret
arpl
pop
enter
lea
cmp
mov
or
add
imul
push
pop
stos
shlb
call
push
je
mov
or
out
lret
sbb
mov
add
xchg
push
xchg
jmp
repz
sbb
shrl
sub
cwtl
or
loop
idivl
adc
in
movsl
popf
dec
call
pop
xlat
outsl
sbbl
test
sbb
test
mov
test
pop
and
ljmp
xchg
fsubr
insb
sub
cmpsb
in
and
in
push
inc
subl
negl
mov
roll
daa
dec
pop
call
xchg
pop
cmc
fwait
mov
and
pop
mov
fwait
cmp
div
xchg
jns
nop
add
mov
gs
stc
sbb
adc
addb
cmp
insl
adc
daa
ficomps
inc
mov
imul
cltd
scas
je
inc
mov
inc
xor
outsb
cmp
or
sbb
loope
add
mov
fs
adc
pop
movsb
enter
outsb
sub
out
mov
push
cmp
insl
xchg
out
sti
addr16
push
lret
and
pop
add
insb
ljmp
mov
and
into
test
ror
mov
test
push
gs
adcb
cs
inc
jmp
cmp
sbb
dec
add
jno
popa
sbb
inc
clc
mov
mov
mov
rorl
and
dec
add
jno
popa
sbb
inc
clc
mov
mov
mov
rorl
mov
cmp
loope
push
or
xor
mov
mov
rorl
and
dec
add
jno
popa
sbb
inc
clc
mov
or
enter
and
addr16
lea
flds
test
add
sub
pop
frstor
sbb
mov
imul
cltd
push
test
jbe
inc
jmp
mov
xchg
xchg
cmp
negb
imul
pop
push
xor
iret
data16
jbe
inc
jecxz
lret
cmpsb
or
dec
out
cltd
aas
mov
mov
fadds
cli
jp
scas
std
and
scas
cmp
cmpb
imul
xchg
mov
xchg
xchg
shlb
outsb
mov
inc
cltd
fdivl
mov
divb
in
imul
loop
xor
loope
rolb
arpl
and
or
xchg
push
mov
mov
mov
cltd
insb
lods
push
mov
ret
sub
sub
cmp
pop
mov
inc
xchg
jecxz
fstps
fs
jmp
fadd
sub
add
add
jmp
mov
or
xlat
hlt
data16
imul
inc
dec
jns
mov
sbb
test
ljmp
mov
inc
jmp
mov
xchg
xchg
add
jno
dec
mov
outsl
lds
data16
add
and
imul
sbb
push
fbld
jp
data16
xor
ret
push
xchg
or
push
cwtl
pop
stos
or
or
ss
lds
sub
push
stc
cmpsb
or
cmp
dec
negb
imul
cltd
push
test
jbe
inc
jmp
mov
xchg
xchg
cmp
dec
negb
imul
iret
fwait
aam
push
cwtl
scas
inc
call
mov
cs
iret
dec
subl
test
and
leave
jmp
lods
mov
das
pop
xchg
daa
loop
fadds
xchg
pop
mov
or
outsl
negb
call
movsb
lods
in
sub
stos
cmc
sahf
add
outsl
or
cwtl
icebp
sub
pop
clc
faddp
mov
fdiv
fcmovnu
pusha
sub
jae
push
xchg
in
aad
in
shll
insb
jbe
inc
xchg
shrb
or
jecxz
nop
aam
and
les
mov
xchg
and
push
dec
push
and
scas
push
out
pop
out
cwtl
sub
int
cmp
jl
dec
inc
fisttps
or
push
mov
push
xor
push
xchg
pop
pop
adc
clc
mov
pop
sbb
test
flds
dec
lret
stos
jecxz
lret
in
subl
rcr
orb
pop
neg
sub
cmp
and
inc
in
jge
inc
call
xchg
lret
ja
adc
mov
ds
or
jo
ljmp
arpl
jnp
push
mov
dec
in
loop
mov
test
mov
jno
cmpsb
scas
xor
mov
rcr
imul
fcmovnb
sbb
test
push
xor
cmpl
subb
mov
and
lods
pusha
hlt
mov
sbb
xlat
or
ss
std
cmp
das
or
inc
adc
ficoms
sub
ja
dec
sbb
ret
ficoml
jmp
mov
dec
shll
in
outsb
loopne
xchg
hlt
in
mov
jle
mov
add
push
repnz
fwait
out
hlt
fs
fdivl
or
dec
xchg
xchg
outsl
jae
cs
cmp
mov
scas
push
bnd
loopne
mov
cmp
dec
mov
gs
fdivrs
leave
ds
or
xlat
fs
sbb
jle
dec
or
cli
inc
xor
pop
pop
xor
xor
nop
xor
cs
ss
push
ret
adcl
jbe
repz
cmc
jp
hlt
pop
into
mov
hlt
mov
dec
aam
sarb
push
aad
push
cmp
mulb
loopne
adcl
adc
inc
mov
leave
ss
out
dec
mov
int3
mov
loopne
pop
dec
movsb
push
in
test
lret
into
fs
pop
cwtl
repz
pop
daa
in
sbb
mov
push
adc
ja
scas
insb
hlt
outsl
adc
faddl
aas
movsb
add
inc
inc
dec
mov
push
adc
div
sbb
fldl
pop
pop
inc
jno
jmp
cmp
push
jne
or
fcoml
jp
add
jno
flds
inc
push
loopne
xor
pusha
fistpl
jb
das
mov
mov
fldcw
pop
jbe
fnstcw
jo
fnstenv
mov
gs
shlb
dec
in
inc
cwtl
xor
gs
rcr
xchg
inc
pusha
push
xchg
arpl
clc
clc
sbb
adc
add
imul
pusha
cmp
lds
mov
cmp
xlat
inc
and
std
cmp
sub
jo
jae
push
cmpsl
jge
inc
je
outsl
push
push
adc
pushf
ja
cmpsb
addr16
stos
add
fcmovbe
movl
test
xor
les
inc
push
gs
mov
xchg
pop
pop
adc
or
mov
inc
push
imul
push
add
xchg
or
ss
adc
mov
xchg
pusha
cmp
jecxz
push
dec
mov
jmp
fs
aaa
in
pop
sbb
movb
fmul
mov
sbb
sbbb
pop
pusha
clc
imul
and
fsubrs
mov
cmp
add
in
sbb
cmp
mov
dec
negb
push
mov
mov
mov
in
push
call
jmp
test
or
shl
jbe
popa
dec
das
xchg
rorl
pop
pop
inc
dec
add
push
test
inc
adc
or
je
stos
popa
stos
ds
adc
das
sbb
add
in
pop
loope
loopne
dec
pop
data16
mov
inc
fidivs
in
add
cmpsb
inc
add
in
out
ret
mov
push
push
mov
push
adc
dec
inc
mov
xchg
testl
sbb
and
inc
pop
and
add
push
fwait
das
aas
and
push
cmp
dec
loop
add
jp
fs
cmc
sbb
jecxz
push
fcomp
icebp
fwait
je
mov
fstpt
aaa
xchg
loop
cmp
loop
lods
mov
fimull
and
bound
mov
push
adc
jg
mov
or
push
repz
jne
fcmovu
mov
int
inc
and
clc
loopne
into
hlt
test
xor
push
cli
jmp
scas
fs
and
inc
xchg
sbb
ror
cmp
sub
sub
iret
cld
adc
jecxz
das
loop,pn
cwtl
push
dec
es
sti
shl
test
and
add
mov
mov
hlt
mov
ret
or
std
inc
fstl
pop
test
mov
orb
jecxz
cmpsb
aad
daa
pop
scas
lcall
xor
dec
test
push
movsb
inc
push
insl
mov
bound
mov
movsb
lock
hlt
test
into
outsl
mov
je
sub
cld
sbb
fldenv
cmpsb
shlb
sub
mov
out
icebp
lret
dec
cmp
dec
je
xchg
mov
add
push
pop
push
lods
out
jge
push
rorb
out
fs
mov
pushf
mov
or
mov
cwtl
out
jnp
dec
and
dec
les
mov
sub
adc
or
adc
cmp
enter
inc
nop
xor
stos
or
and
clc
add
in
cwtl
jmp
xlat
and
dec
inc
test
or
or
push
cmp
sbb
cmpsl
mov
dec
loop
add
dec
add
aad
xchg
lret
fcmovnbe
loop
jns
sbb
lods
out
mov
enter
xchg
test
insb
push
mov
popa
mov
pop
shrl
mov
in
add
mov
mov
and
push
push
sbb
jno
imul
movsb
mov
dec
fs
insb
out
add
sub
cmpl
xchg
repz
flds
or
bnd
xchg
loope
cmp
loopne
test
mov
dec
in
out
popa
scas
arpl
sub
push
movsb
mov
fs
ret
rcrl
insl
pop
mov
in
push
and
pop
cmc
adc
addr16
fdivrl
jns
into
pop
iret
std
call
jnp
push
mov
mov
sub
scas
repnz
mov
jb
push
fistl
mov
cmp
stos
mov
xor
stc
adc
push
rorb
sbb
fdivrs
mov
js
pop
pop
fsubs
repz
lea
cmpsl
add
adc
pop
ss
icebp
adc
pop
out
adc
cmp
clc
out
xor
into
push
sub
cmp
push
pushf
pop
test
inc
sub
notb
out
std
popf
data16
sbb
mov
pop
mov
sub
sub
aaa
fnstenv
ljmp
mov
nop
xor
xor
shrl
sub
or
sbb
in
mov
stos
jp
idivl
rol
dec
cld
mov
lcall
sahf
lret
js
cmp
xchg
aam
mov
repnz
sbb
mov
sarl
inc
popa
loop
icebp
mov
mov
decb
jnp
popf
movsl
js
out
nop
mov
cmc
cmp
push
pop
ljmp
pushf
fcmovbe
pop
decb
jo
arpl
cmp
sahf
loope
sahf
or
test
push
pop
mov
movsl
outsb
out
cmp
ljmp
inc
pop
push
pop
loope
mov
rolb
test
cld
and
mov
xchg
push
movsb
icebp
jmp
push
cli
cmpsb
inc
push
lcall
fidivrs
in
push
push
and
mov
jae
in
xchg
dec
not
jmp
add
std
stos
ss
ds
mov
push
push
in
push
dec
in
mov
cmc
mov
inc
sub
dec
or
sti
stos
add
cmpsl
call
mov
dec
pop
mov
aam
test
aas
rcr
mov
add
or
scas
dec
dec
mov
cmp
ds
mov
xchg
inc
push
jo
loope
out
inc
inc
mov
mov
test
xchg
jp
dec
bound
adc
inc
stc
sbb
dec
out
fsubl
jb
jp
in
xor
push
jns
shrl
jmp
push
call
lds
mov
dec
icebp
out
sub
push
cmp
stos
dec
jle
imulb
inc
sub
es
call
ret
ss
enter
and
cmp
pop
cmp
movsb
sahf
xlat
inc
pop
lahf
insb
data16
jle
sub
cmpsb
inc
cwtl
fadd
pop
fistpl
push
out
loopne
lahf
div
ss
xor
and
jg
dec
popf
cmpsl
adc
pop
cltd
push
test
mov
dec
enter
mov
jns
xor
andl
sub
mov
mov
hlt
test
subb
xlat
and
ret
movsb
push
js
test
insb
andb
lahf
sub
out
inc
mov
insl
xorb
lahf
add
or
pop
leave
enter
sti
jge
adcl
dec
js
and
nop
cli
push
push
je
adc
push
jbe
xor
insl
push
dec
out
mov
sbb
xchg
test
xor
call
int
notl
clc
fwait
or
sbb
call
inc
mov
dec
repnz
and
mov
imul
lods
push
daa
cmp
xchg
cs
adc
pop
inc
mov
cmp
push
in
pop
fmuls
in
lock
push
dec
fildl
daa
dec
pop
rolb
daa
mov
lret
es
movsl
dec
mov
push
shl
cld
ljmp
sbb
aam
jo
shll
add
ficoml
jns
push
inc
dec
in
dec
adc
mov
jp
jne
in
push
inc
push
dec
lods
and
sub
pop
mov
push
lcall
jmp
clc
lahf
outsb
sbb
jnp
movsb
outsb
int3
inc
aas
test
mov
imul
mov
lods
inc
rorl
xchg
mov
pop
fcom
pusha
jmp
jle
xchg
ficomps
enter
sub
shll
inc
or
add
pop
lret
hlt
sbb
stc
and
mov
jp
xchg
sub
push
dec
loopne
shlb
push
mov
mov
sbb
je
mov
aad
inc
ja
and
repnz
pop
push
inc
loope
sbb
cmpsl
addr16
fwait
push
aas
lds
bound
in
aad
sbb
sahf
js
or
scas
sbbb
shr
imul
loop
enter
add
xor
pop
scas
push
or
mov
pop
out
cltd
mov
insl
sbb
pusha
fmulp
call
popf
cmpsb
push
shrl
mov
jmp
fidivl
loop
jns
mov
cltd
cmp
icebp
and
lods
nop
xchg
inc
push
xor
xchg
mov
lcall
mov
ds
rcll
outsb
imul
adc
and
repz
cs
imul
sar
pop
xor
jnp
inc
jp
and
inc
sub
mov
lds
xchg
mov
popa
cld
loopne
push
incl
fnstenv
out
jb
je
fwait
out
xchg
mov
adc
pop
cmp
and
add
dec
mov
gs
lret
mov
leave
int
cwtl
in
fnstenv
lahf
inc
dec
pushf
pop
push
pop
fdivrs
jecxz
xchg
xchg
and
cmp
or
jb
dec
verw
stos
stc
sbb
outsl
mov
mov
inc
fsubrl
mov
clc
inc
enter
or
mov
pop
push
add
sar
add
fnstsw
inc
loop
repz
push
cmp
mov
subb
into
pop
pusha
aad
clc
stos
outsl
xor
mov
fnstsw
mov
mov
mov
dec
aad
test
add
rcrb
hlt
divb
sbb
jb
clc
sbb
cmp
lea
gs
out
inc
out
cltd
or
insb
push
sahf
and
notb
mov
andw
stos
adc
int3
loopne
repz
and
int3
pop
shl
xchg
cmpsb
xor
jecxz
dec
sub
pop
adc
test
xor
das
cli
cmp
divb
pop
fs
mov
imul
rcrl
add
inc
mov
add
out
sti
mov
xor
cmpsl
pop
mov
ret
push
gs
stos
in
cld
cmp
mov
outsl
mov
xor
mov
lcall
mov
rcll
imul
cmp
jne
in
out
and
dec
out
ja
mov
scas
fistps
mov
lcall
pop
add
das
mov
sub
negb
mov
lret
add
clc
push
xor
xor
dec
sete
sbb
jp
xchg
push
push
leave
rcrb
mov
sub
xchg
cmp
rcll
mov
mov
jp
pop
jae
not
loopne
xor
or
sbb
es
mov
add
scas
pushf
xlat
hlt
js
fidivrl
jns
mov
sbb
and
add
mov
loopne
or
push
out
ret
iret
adcl
inc
push
repnz
lahf
xchg
sub
pop
xor
test
jge
xchg
das
hlt
jecxz
push
in
jg
sbb
jge
loop
mov
cwtl
loope
mov
dec
aaa
loope
xchg
mov
cmp
push
outsb
fcoms
push
stos
xor
push
adc
dec
leave
in
cwtl
push
ret
in
cmc
push
mov
aad
pop
xchg
pop
call
stos
mov
sub
or
out
and
daa
jmp
test
xor
lock
push
test
mov
sbb
aas
push
pop
jmp
add
dec
sub
mov
xchg
or
cmc
andl
leave
pop
push
fwait
cwtl
fs
jbe
add
fmulp
sbb
push
inc
or
jg
imul
xor
jnp
mov
dec
push
cmp
outsl
std
push
cwtl
add
movsb
add
dec
or
shll
fdivr
add
nop
mov
cmp
ret
stos
xchg
imul
cmp
mov
mov
inc
inc
lea
push
xor
rcll
inc
add
insl
mov
pop
or
push
push
pusha
jns
fadds
inc
inc
xchg
cmp
push
push
clc
roll
push
out
sbb
pop
sbb
repnz
icebp
popf
jns
xchg
mov
mov
jp
ds
test
aas
sub
call
xor
lods
sub
insl
loope
daa
mov
lahf
sti
inc
test
loop
sub
jecxz
or
std
mov
ret
mov
mov
xchg
clc
sub
cli
les
xor
mov
push
add
imul
mov
push
sbb
in
stc
neg
test
fcomps
and
dec
cmp
or
out
jo
or
and
loop
gs
sub
push
movsb
or
pushf
nop
adc
lret
sbb
rorb
hlt
ret
add
mov
arpl
xchg
imul
movl
jno
jns
push
sahf
fdiv
add
mov
call
jle
push
or
fidivrs
or
fsubrl
sahf
jnp
popf
adc
ficomps
adc
rol
adc
testb
cmp
push
xchg
mov
in
movsl
xor
add
jns
into
jge
mov
jae
shrl
xor
xchg
mov
ja
clc
mov
jns
es
stos
mov
stos
cmp
push
mov
mov
mov
outsb
hlt
imul
pop
xchg
dec
add
ja
nop
pop
inc
push
mov
aam
pusha
icebp
cmc
movsl
out
inc
sub
loop
or
addl
inc
dec
xchg
and
mov
and
fldenv
lock
dec
testb
jbe
push
sbb
jg
arpl
leave
xchg
jp
aas
push
adc
xchg
aad
pop
xadd
push
repz
popa
icebp
into
add
jbe
adc
addl
rcrb
lret
cmc
sbb
jp
gs
mov
mov
test
and
lcall
adc
mov
mov
push
mov
xor
dec
dec
loop
mov
push
and
sub
sub
add
fidivl
scas
adc
inc
jecxz
mov
sbb
mov
iret
add
xchg
jge
adc
sbb
lcall
shll
sub
jg
nop
and
cmp
cwtl
cmp
loopne
ds
sub
cwtl
xchg
or
jl
lcall
xchg
cmp
push
jbe
push
jl
loop
int3
scas
cwtl
ret
cmpsl
jno
cld
xor
in
mov
xor
or
mov
cld
push
int3
sti
mov
cmpsb
rcrl
out
or
or
in
xchg
fldenv
adc
add
scas
cmp
das
in
pop
and
cmp
mov
jecxz
cld
dec
aam
iret
push
gs
ds
jo
data16
mov
mov
test
sti
ljmp
pop
sbb
mov
mov
cmp
mov
or
into
push
xor
lock
stos
sub
xor
test
iret
mov
movsb
inc
pop
je
adc
in
fidivl
leave
stos
je
add
ss
push
sub
inc
mov
hlt
and
mov
xchg
push
pop
cmp
cmp
mov
rcrl
in
xchg
and
aaa
or
insl
xor
scas
cltd
add
bound
pop
and
mov
stos
ret
sti
and
mov
pusha
loope
or
and
insb
in
aad
and
push
mov
or
dec
cmp
sub
jp
inc
pushf
sti
cs
lods
cmp
pop
repz
mov
outsl
je
cmp
mov
sub
xor
sbb
mov
push
fwait
jmp
cli
add
or
jo
lds
out
push
ret
sbb
cwtl
adcl
xchg
popa
cmp
fcmove
mov
push
push
and
pushf
pop
aas
jb
mov
fistpl
out
pop
daa
fs
pop
xchg
dec
test
sbb
pop
mov
ret
pop
lods
inc
mov
push
les
gs
lcall
outsl
pop
sti
stos
or
cmp
fstl
roll
or
aam
pop
dec
jb
lcall
sub
jnp
jnp
aas
xchg
dec
test
popa
jle
push
or
mov
hlt
and
movsb
pop
nop
imul
fucomi
lods
call
inc
cli
dec
adc
lods
pop
add
gs
dec
fldl
push
mov
adcl
cmp
mov
ss
rorb
test
test
add
ret
and
mov
jle
mov
jo
enter
push
mov
test
xlat
xor
cmc
cmp
lret
jg
lock
imull
xchg
out
call
push
popf
push
dec
cmp
daa
mov
icebp
test
or
rcl
daa
mov
pushf
lcall
push
pop
daa
xchg
ja
jo
movsb
rclb
aas
stos
jp
dec
jg
ja
or
movsb
xchg
call
test
add
std
pop
jl
jns
mov
add
mov
fstpl
sub
adc
add
cs
push
stos
mov
xor
js
inc
jl
mov
xor
repz
inc
out
mov
test
xlat
and
mov
jnp
subb
jecxz
in
push
insl
sbb
cmp
cmp
mov
cwtl
push
fildll
shll
out
dec
add
mov
dec
enter
rcrb
aam
jle
jl
dec
xorb
ja
dec
stos
xchg
das
mov
pop
sbb
jno
sbb
scas
test
sub
xchg
testl
movsl
jo
addr16
jae
popa
aad
inc
jne
or
cs
xor
pushf
jl
ffree
push
pop
jnp
aas
cmp
xor
and
loopne
in
pop
icebp
add
and
mov
ficoms
rcrb
pushf
arpl
mov
mov
pop
in
push
and
cwtl
jecxz
jmp
popa
push
adc
adc
push
xchg
dec
mov
ja
xor
sbb
inc
cwtl
xlat
add
lods
push
mov
inc
jmp
mov
xchg
xchg
cmp
dec
negb
imul
cltd
push
test
jbe
inc
jmp
mov
xchg
xchg
cmp
dec
negb
imul
xchg
xchg
jbe
inc
in
stc
cmpsb
or
xor
dec
negb
pusha
popf
es
ss
dec
push
stc
leavew
jbe
inc
imul
sub
xchg
dec
xchg
xor
add
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
pushl
call
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
add
dec
mov
mov
fs
push
xchg
adc
add
xor
and
push
cltd
inc
push
bound
orb
mov
sbb
cmp
pop
adc
add
push
stc
and
push
jmp
mov
bound
mov
mov
adc
and
xor
flds
ljmp
sub
push
lret
or
cmp
sbb
push
pop
shl
enter
xchg
add
test
popa
add
pop
jo
cmp
imul
addr16
aaa
imul
xlat
jp
lcall
dec
ret
ss
xchg
dec
and
xchg
je
fsts
fs
fstl
in
cmp
xor
mov
xorb
sbb
sbb
dec
loop
add
les
xor
lret
movsl
adc
inc
push
mov
xchg
jl
xor
inc
jp
ja
bound
and
fwait
sub
push
cmpb
xchg
or
mov
mov
es
imul
sbbb
mov
or
cmp
xor
flds
shll
loopne
lock
addl
out
cmp
sbb
or
sbb
dec
jp
mov
pop
std
inc
mov
cld
push
mov
push
shll
or
push
mov
cmpsb
inc
repnz
lcall
pushf
inc
jmp
jmp
jge
in
lods
dec
rcrl
ret
cmp
sub
flds
leave
xor
and
push
cltd
inc
mov
bound
mov
mov
or
cmp
sub
flds
leave
xor
and
push
cltd
inc
mov
bound
aas
lock
and
or
xchg
mov
jae
or
lret
fistpl
jge
sub
ljmp
and
mov
xor
and
lods
xchg
add
rorb
dec
lods
xchg
dec
adc
orl
inc
xor
test
push
xchg
inc
insl
sub
xchg
push
jp
lcall
repz
mov
pop
xor
stos
jo
mov
lahf
adc
and
cli
in
fldpi
dec
push
mov
cmp
mov
stos
mov
divb
push
movsl
shll
mov
sbb
push
fs
int3
mov
aas
dec
popf
mov
sbb
das
push
shlb
movsl
dec
gs
mov
stos
cltd
je
in
dec
add
imul
cmp
fadds
and
ljmp
ss
pop
sahf
sub
inc
add
arpl
push
js
and
and
mov
scas
sahf
out
xchg
fwait
dec
ja
imul
inc
cmp
outsb
sbb
cmpl
mov
or
inc
cmp
push
ret
sahf
xchg
jge
sub
xor
sub
nop
sub
test
cltd
add
fsubs
sub
lret
movsb
ljmp
or
cmp
cltd
or
push
loop
adc
sbb
bswap
dec
jne
jnp
push
mov
fisttpl
xlat
sti
lods
sbb
mov
testl
or
or
pop
push
movb
or
repz
imul
dec
jno
pop
nop
orl
cmp
popa
mov
and
jmp
jae
push
cmpb
mov
scas
xchg
call
sub
pop
and
clc
das
enter
cmp
push
push
repnz
jge
stos
inc
mulb
test
mov
push
outsb
xchg
in
sbb
test
adc
clc
roll
stos
fcoms
cld
icebp
pop
and
call
movsl
dec
jne
mov
mov
loop
pop
fsubrs
push
mov
push
fimull
mov
sub
out
arpl
and
xchg
fcmovnbe
scas
fimull
mov
sar
xlat
mov
shrl
sbb
lods
jge
nop
ror
pop
pop
dec
out
ficompl
pusha
add
xchg
sub
lret
enter
push
dec
fidivrl
popf
popa
jns
es
or
mov
outsb
loop
std
xchg
aad
in
test
and
push
pop
sub
pop
call
test
cmpsb
jmp
adc
pusha
cmp
xchg
jb
inc
int3
and
mov
cmp
xor
adc
mov
clc
stc
rcl
mov
cli
ds
inc
fistpll
call
xor
dec
lcall
sub
pop
cmp
pop
ljmp
xor
popl
and
push
sbb
icebp
loopne
insb
rolb
cmpsl
cld
lods
xchg
jno
xchg
push
cmc
add
push
add
mov
lret
inc
cld
test
push
push
push
test
cmp
push
repnz
inc
in
add
adc
inc
movd
pop
loop
cmpsl
cs
repnz
ljmp
sbb
or
imul
inc
jnp
out
add
push
xchg
dec
jns
cwtl
mov
inc
mov
xor
mov
mov
ret
mov
iret
es
mov
jbe
fidivrs
jmp
aaa
test
and
movsb
mov
jo
inc
sbb
mov
lods
cld
flds
cltd
enter
mov
call
mov
std
xchg
cmp
jp
sub
inc
xlat
icebp
mov
aaa
push
jae
pop
or
add
rcrb
int
stos
cmp
je
inc
lods
adc
clc
jge
dec
aaa
loopne
pop
syscall
mov
enter
mov
add
or
jb
push
push
into
cmp
mov
mov
addb
std
pusha
push
jmp
mov
adc
cwtl
int3
shrl
mov
subb
inc
mov
adc
sbb
sub
xchg
fwait
pop
sbbb
sub
jl
stos
cmpsl
and
sub
clc
mov
and
mov
xchg
fwait
subl
das
fimuls
mov
ret
mov
mov
sub
fildll
stos
fcompl
pop
aas
rcrl
in
inc
dec
xor
or
aad
shll
jnp
imul
mov
push
sub
sbb
mov
dec
push
in
xchg
lods
mov
pop
add
gs
test
in
das
cmp
add
pop
push
sbb
in
add
fmull
xor
add
scas
pop
and
scas
lahf
mov
inc
or
adc
fidivrl
push
jmp
jge
es
push
je
pop
xchg
loop
in
mov
mov
rcr
mov
insb
addb
pop
mov
cmp
push
push
sub
push
daa
je
xor
shll
negb
stos
mov
add
cmpsb
inc
cmp
jae
int3
es
inc
sbb
mov
test
pop
mov
shrl
std
dec
enter
cmp
jge
addr16
std
push
sbb
jge
movsl
jbe
ljmp
pop
add
insl
lods
xlat
nop
mov
das
lds
es
cld
jmp
icebp
dec
inc
test
jmp
fstpt
pop
ja
imul
jge
cmpsl
divl
xchg
jle
nop
mov
clc
jp
mov
lock
push
sub
or
pop
std
dec
cmp
jbe
movsl
mov
dec
in
xorb
fldt
jl
into
mov
adc
rclb
mov
rorb
mov
sub
aad
or
mov
cmc
pop
mov
xorb
scas
stos
jmp
jno
js
mov
lock
adc
pop
dec
jns
cmpsl
adc
mov
and
loop
ret
push
or
outsb
mov
pop
int3
cmp
mov
add
shll
aad
push
push
push
sbb
inc
lcall
dec
fsubr
lock
add
mov
pop
mov
sbb
xchg
cmp
push
insl
ds
ret
or
int
mov
push
mov
lods
aad
dec
sub
mov
xor
xlat
sub
cmovs
xchg
xor
push
jns
dec
sub
sub
aam
dec
ds
xchg
jmp
jmp
pop
fcmovne
inc
lahf
pop
jle
xlat
popf
push
xlat
jns
inc
pop
stos
mov
dec
ret
jge
mov
rolb
dec
sub
add
repnz
jo
repz
aad
sbb
aam
lcall
pop
aam
sbb
decl
cmp
mov
add
sub
and
xchg
iret
loop,pt
pop
or
fs
mov
iret
nop
mov
sbb
into
popa
enter
or
daa
out
les
xlat
push
lea
mov
movsl
dec
push
xchg
jo
jno
stos
fs
clc
or
jl
sahf
cmp
dec
push
pushf
fbstp
pusha
push
xchg
jge
xorl
mov
add
cmpsb
rclb
shrb
cld
xor
outsb
stc
icebp
adc
sar
push
lcall
sub
std
and
inc
nop
jge
inc
out
lsl
or
fistps
dec
daa
test
sbbb
inc
sub
inc
sub
xor
xlat
inc
add
nop
lcall
sahf
or
cli
pop
test
jnp
dec
out
mov
xchg
push
mov
mov
ja
or
imul
imul
push
inc
outsl
add
xor
shr
jnp
mov
mov
jns
or
repz
pop
mov
push
test
insb
mov
xor
mov
add
xchg
aam
aam
pushf
loope
pop
lds
or
cmpsb
push
push
movsb
or
repnz
pushf
pop
out
incl
and
lret
test
mov
adc
and
cltd
cmp
imul
push
clts
cmpsb
adc
inc
inc
add
std
jp
dec
mov
pop
nop
inc
push
aas
jge
xlat
call
and
std
sbb
ja
loope
push
out
out
xor
clc
sub
inc
xor
mov
lret
inc
ja
push
push
mov
jbe
jae
push
push
loope
pop
shll
and
jbe
fwait
fs
fmul
push
dec
pop
daa
into
cmpb
cmp
and
add
inc
sub
pop
pop
and
stc
stos
push
ret
sti
mov
adc
das
mov
sbb
mov
sbbl
cld
scas
testl
scas
clc
jnp
mov
cmpsb
loope
sbb
icebp
cmc
mov
mov
dec
mov
jmp
or
test
mov
sub
fnstcw
push
insb
mov
popf
jb
xchg
sar
add
fdivs
ds
test
xlat
je
into
sub
jmp
iret
addl
fidivl
iret
pop
rsqrtps
test
xchg
add
movsl
add
dec
fmull
pushl
jg
xchg
fnstcw
push
cmc
sbb
cmp
xchg
das
lea
shrl
jp
stc
rclb
sub
lods
inc
ss
inc
dec
lds
mov
add
jmp
cmp
mov
cltd
mov
fadd
lea
add
cmpsb
fcmovu
inc
sub
lock
scas
dec
adc
inc
popf
dec
push
inc
scas
inc
int
pusha
adc
xor
decb
mov
int
sbb
test
out
fildll
jae
mov
xlat
xchg
add
mov
or
add
mov
sub
pop
mov
mov
adc
test
and
loop
jne
shl
ds
ret
mov
out
xor
cmpsl
out
jne
popa
ret
cmp
jg
daa
sub
xor
xor
mov
xor
mov
xchg
cli
push
cmp
xor
stc
mov
jbe
daa
mov
push
xchg
shlb
rol
int
jl
pop
lds
mov
mov
cli
mov
mov
scas
aas
cmpsl
repnz
loopne
jne
ret
xchg
dec
jno
mov
xchg
outsl
into
cmpsb
cld
popf
sub
xchg
cltd
cmp
imul
rolb
jge
push
xor
push
fcmovu
mov
sub
or
push
iret
clc
insl
pop
push
rol
clc
sbb
xchg
dec
or
movsl
jge
clc
into
inc
jae
or
add
xor
pop
jnp
cmovbe
in
movsl
repnz
add
aas
ret
sbb
in
pop
sbb
lods
mov
gs
push
and
push
mov
or
test
mov
lods
dec
mov
lods
push
or
sbb
push
sbb
push
mov
mov
pop
and
add
xchg
add
jb
add
mov
jmp
hlt
lea
clc
push
sub
in
into
fisttpl
clc
cmp
pop
xchg
mov
jae
mov
xchg
in
arpl
inc
sub
out
jae
inc
sbb
leave
xchg
jecxz
sbb
mov
jo
sub
xchg
loopne
push
dec
jno
out
push
push
imul
fsub
loopne
add
enter
mov
in
cmp
lret
push
inc
nop
rorl
testb
xchg
clc
popa
jp
cmp
jo
and
xchg
fnstsw
adc
jge
xchg
cwtl
pop
loop
data16
scas
xor
jne
ficomps
popf
cmovne
jo
sahf
inc
into
mov
push
push
sahf
outsb
xor
dec
loop
mov
jnp
cld
ds
sbb
cmp
or
int
out
out
out
cld
rep
inc
add
ret
add
lea
outsb
sbb
clc
or
idivl
cmp
jge
dec
int3
add
loop
leave
jo
sub
xchg
adc
repnz
mov
sbb
pop
lods
push
push
xchg
push
xchg
iret
arpl
pop
or
xchg
inc
or
inc
movsl
cltd
jp
mov
shll
sub
repz
xchg
shll
mov
sub
pop
mov
aad
inc
lock
mov
mov
scas
shrd
sahf
fidivrl
push
sahf
roll
mov
xor
out
xchg
clc
push
test
addb
loop
aas
ret
movsb
mov
jl
inc
mov
insb
sbb
fcmovnbe
push
inc
add
int3
sahf
jae
leave
cmpsb
xor
cs
push
lea
sti
negb
loop
xor
xrelease
cmpsb
loope
sti
frstor
adc
mov
imul
mov
popf
add
xor
mov
cmc
test
or
push
lock
test
enter
cmp
dec
repz
jo
sahf
es
les
stos
pop
lretw
xor
add
cmp
bound
adc
sbb
arpl
fxch
dec
xor
xor
imul
mov
dec
jo
jnp
add
add
xchg
pop
xor
lods
xor
lcall
leave
dec
inc
es
inc
mov
push
dec
stos
pop
incb
mov
add
shrb
divl
cmpsl
sahf
dec
jmp
mov
test
dec
outsb
cmp
push
jp
lahf
fwait
ss
and
cld
gs
icebp
ret
xchg
repnz
mov
inc
inc
rolb
fildll
jno
popa
scas
xchg
push
push
jno
jbe
lea
pop
xchg
mov
xchg
and
lock
jne
xor
jl
adc
pop
sbb
mov
cmp
int
call
movsl
or
xlat
jmp
sbb
dec
mov
dec
mov
loope
pop
aad
or
mov
push
insb
ret
icebp
rcrl
or
dec
xor
incb
mov
inc
push
jp
and
lret
xor
jmp
int
mov
mov
push
mov
adc
popa
leave
adc
cmc
ret
daa
lahf
clc
hlt
and
je
fwait
fs
aas
jbe
fisubrl
push
cmpb
cmp
mov
in
push
mov
testl
cmpsl
out
mov
fidivrl
loopne
sub
sahf
push
lcall
mov
dec
cmp
mov
xorl
sbbb
insl
gs
popa
mov
scas
pop
xchg
inc
repnz
stc
imul
clc
mov
jge
mov
enter
xor
jae
push
arpl
pop
test
cld
sub
mov
pop
ja
fstpt
cmc
xor
jl
mov
lret
inc
sarb
adc
dec
mov
pushf
push
loopne
or
xor
mov
jecxz
cli
inc
ficomps
int
mov
mov
outsl
xchg
movsl
rcrl
inc
mov
scas
push
jmp
je
ja
icebp
xor
mov
sbb
pop
ss
cmp
test
mov
add
insl
sbb
shll
cmp
lret
jge
push
inc
lds
loopne
xorb
test
add
iret
xchg
jb
cmp
mov
jg
xchg
jne
push
fwait
test
iret
push
mov
push
mov
in
adc
cmp
mov
fiadds
push
shlb
and
imul
dec
push
and
mov
xchg
ljmp
leave
cwtl
scas
outsb
mov
stos
mov
in
sbb
fistpl
clc
push
push
cmpsb
fisubrs
or
popf
test
push
sub
or
xorb
test
lea
lock
inc
sti
sbb
xchg
outsl
or
loopne
push
jl
mov
imul
and
xor
cmpsl
xor
pop
fldenv
inc
or
push
rcr
xor
iret
fs
lock
cwtl
lahf
xchg
or
jl
ret
lcall
js
or
lds
gs
sub
or
push
pop
ret
dec
lods
xchg
cld
lahf
inc
sbb
mov
fs
inc
mov
test
movsb
jb
scas
adc
push
xchg
mov
sbb
sbb
pop
jge
nop
cwtl
ja
cld
lahf
inc
sbb
dec
mov
sbb
xchg
lcall
je
or
adc
push
icebp
outsb
fwait
in
mov
and
mov
pop
data16
lahf
adc
outsb
lea
jp
push
sub
inc
callw
cli
je
mov
in
cmp
adcl
add
sbb
icebp
adc
loop
xchg
pop
jnp
push
out
cli
cmp
cli
lea
loopne
addr16
popw
sbb
sub
rclb
adc
das
sbb
outsl
or
rcr
sub
sub
fcoms
pop
loopne
push
fadd
xor
jmp
popa
testl
ret
enter
mov
jae
aad
pop
sbb
add
inc
rorl
repz
xchg
out
add
jbe
or
scas
or
ja
and
jo
xchg
or
mov
jmp
fwait
jg
mov
inc
adc
out
xor
jbe
sub
nop
and
xchg
int3
sub
das
scas
popa
mov
jnp
mov
daa
and
pushf
int3
xlat
pop
adc
lods
mov
lock
lods
aad
mov
repnz
cmp
add
out
stos
ljmp
int
addr16
and
xchg
pop
sbb
cmp
bound
xchg
xchg
dec
ss
mov
cltd
xor
out
jg
orb
dec
dec
aas
xchg
maskmovq
mull
xor
mov
xchg
jl
jecxz
jne
or
cmp
mov
adc
jl
jmp
mov
into
xor
xchg
lea
aaa
std
out
xchg
sub
int3
pop
mov
jo
xor
push
inc
push
mov
mov
lock
jne
mull
cld
xchg
dec
test
ljmp
mov
ss
sbb
push
mov
insl
jo
and
xor
cmp
push
test
incb
inc
arpl
mov
dec
and
sub
idivb
adc
mov
sub
dec
in
inc
les
adc
xor
mov
enter
sub
adc
dec
aaa
movsl
cmc
clc
pop
dec
mov
cmp
jmp
push
adc
mov
cmpsl
xchg
cmpsl
cltd
int
lret
test
jp
test
test
outsl
jae
aam
pushf
sub
mov
into
in
bound
inc
xchg
xor
adc
stos
lods
jge
mov
or
rorb
sbb
add
adc
sub
and
push
and
inc
jae
and
xor
popf
and
mov
dec
lods
stc
mov
jb
aad
imul
call
adc
cmp
dec
aam
mov
xor
out
es
jbe
idivl
add
add
sub
sbb
jo
push
or
and
or
les
xchg
in
jno
mov
shlb
xor
outsb
jmp
das
dec
fldenv
clc
arpl
test
mov
mov
lret
ljmp
xchg
shl
lds
mov
stos
lcall
sbb
cwtl
aas
pusha
add
pop
loope
sbbl
jns
aad
into
xchg
cld
xlat
cltd
fdiv
push
fcompl
adc
icebp
loop
inc
sarb
das
jecxz
add
sub
push
xchg
push
jnp
mov
pop
pop
push
and
test
shr
popa
add
cmpsb
loop
inc
jne
sbb
jmp
adc
lods
lcall
push
scas
repz
dec
and
int3
or
imul
repz
les
xchg
ja
sbb
insl
ljmp
and
dec
pop
ja
sub
mov
dec
xor
notl
cld
inc
subb
shl
sub
mov
xor
loopne
pop
cmpsb
push
push
pop
ljmp
cmp
iret
add
testl
jo
xchg
lods
lcall
push
mov
xlat
pushf
ss
outsl
sub
jle
jg
xchg
aad
lods
and
cmc
inc
xorb
rclb
fcmovbe
adc
and
cmp
pop
inc
push
popf
mov
insb
lods
and
xchg
enter
dec
clc
subb
orl
mov
push
std
pop
sbb
cmpsl
std
jno
repz
jg
outsl
lods
mov
aam
loop
xor
bound
imul
test
repnz
mov
fcoms
movsl
xchg
xor
xchg
jg
mov
test
pop
xchg
fcompl
mov
mov
xchg
push
imul
or
mov
in
sti
jnp
adc
fidivrs
push
in
xor
sbb
scas
sub
test
sub
or
dec
bts
les
pushl
dec
loope
mov
or
cmp
sub
flds
leave
xor
and
push
cltd
inc
mov
bound
mov
mov
or
cmp
sub
flds
leave
xor
and
push
cltd
inc
mov
bound
mov
mov
or
cmp
sub
flds
leave
xor
and
push
cltd
inc
mov
arpl
mov
mov
or
cmp
jmp
cwtl
stc
and
popf
push
mov
sub
movl
movl
movl
movl
leave
ret
lcall
inc
lahf
xor
filds
aam
les
mov
movsl
and
rclb
xorb
mov
hlt
push
in
aad
les
rcll
movsb
and
fs
push
call
and
adc
add
hlt
pop
or
add
das
repnz
clc
push
icebp
pop
repz
rclb
pop
sahf
and
pop
dec
add
pushf
je
in
shrl
imul
shlb
loopne,pt
inc
and
test
mov
scas
sbb
movsb
inc
dec
sub
aad
shlb
jns
ljmp
scas
in
rorb
cwtl
mov
testl
inc
jnp
movsl
xor
mov
je
cmp
pusha
adc
test
test
mov
fwait
mov
mov
mov
icebp
jne
jo
stos
out
mov
cld
enter
shlb
ljmp
inc
sahf
fwait
lea
mov
add
rclb
loopne
out
nop
xor
and
adc
add
hlt
dec
in
aam
les
mov
movsb
and
sbb
in
std
push
mov
test
adc
je
inc
out
loope
sbb
or
ja
popa
int3
inc
cmc
sub
push
xchg
and
shll
push
icebp
xor
test
xor
cmp
push
nop
and
adc
add
hlt
push
in
aam
les
mov
movsb
and
fs
lock
xorb
mov
hlt
push
in
aam
les
mov
movsb
and
dec
mov
shll
leave
in
or
fldcw
cltd
stc
ret
mov
aaa
sahf
add
andl
pusha
sub
outsb
fisubrl
scas
pop
out
pop
jle
decl
popf
out
das
lcall
or
arpl
cmpsb
xchg
pop
xlat
xor
insl
mov
sbb
pop
dec
loope
divps
pop
call
pop
push
pop
sub
pop
inc
mov
mov
pop
addb
sbb
je
scas
imul
out
mov
mov
arpl
loope
inc
jl
jns
jbe
jge
andl
add
pop
xchg
scas
cmpsb
out
adc
fidivl
scas
pop
rorb
sti
insl
into
or
aaa
sub
or
call
mov
jmp
sbb
sti
mov
fwait
stos
popa
and
ds
loope
sbb
push
cmpsb
out
scas
ss
outsb
stos
adc
call
dec
push
and
dec
mov
dec
js
ret
xlat
push
shll
icebp
jno
sub
sub
jp
cmp
leave
fisttpll
outsl
lea
xchg
pop
jle
or
sahf
xchg
dec
pop
test
ljmp
pushl
ret
ja
fimuls
mov
mov
dec
cmc
movsb
fistps
pop
fldt
cmpsl
inc
xchg
into
sbb
mov
nop
shrb
ficomps
mov
idivl
push
es
std
xchg
inc
mov
call
negl
dec
mov
push
lods
stc
call
les
mov
sbb
and
fisttpll
movsl
stos
xor
arpl
sbb
jl
jle
mov
loopne
rcl
pop
rcr
push
pop
jle
push
inc
loope
aam
shrl
and
pusha
xchg
mov
dec
shlb
jle
jo
clc
xor
cmpsl
push
insb
aas
and
test
stos
orl
pop
sub
lock
mov
pop
inc
sub
sti
outsb
pshufw
xor
ja
or
and
or
mov
inc
test
divb
push
push
dec
cmp
aaa
adc
and
push
out
rsqrtps
adc
lret
das
cs
jle
nop
std
or
pop
test
out
lahf
add
cmp
in
aaa
cmp
add
sub
xor
sub
and
mov
mov
scas
inc
nop
mov
jp
inc
aaa
pop
lock
movq
mov
push
mov
jnp
fisttpll
lods
int
push
fs
pop
inc
xchg
out
movsl
leave
xor
stos
aad
mov
xchg
jns
push
aas
movsb
popf
lods
fbstp
dec
cmp
enter
mov
xchg
repnz
daa
call
scas
cmp
sbb
movsb
ljmp
mov
sbb
jg
nop
fimuls
add
dec
mov
imul
pop
imul
in
lret
psubusw
flds
int
sub
fiadds
mov
fcomi
inc
xor
ss
pusha
mov
or
mov
mov
or
addl
into
adc
pushw
xor
in
ss
xor
cwtl
jmp
push
outsl
mov
xchg
xchg
pusha
add
push
jg
movsb
mov
pop
iret
xor
cmp
lret
push
push
cli
loop
add
inc
lret
sub
adc
or
and
push
push
sbb
xor
icebp
inc
pop
scas
loope
test
sbb
ja
sbb
fcomi
jb
pop
jo
fisttps
mov
fs
bnd
mov
jno
cmp
jecxz
in
mov
sub
xor
xchg
cwtl
inc
xchg
cs
add
inc
sarb
sub
std
pop
sbb
pop
push
add
mov
lods
or
das
mov
jae
fwait
or
and
add
js
and
rcl
inc
and
xor
ds
fnstcw
inc
xor
cmp
fildll
jae
jp
insl
xchg
andb
rolb
lods
adc
or
ss
xlat
loopne
addr16
arpl
in
cmpl
out
dec
mov
mov
repnz
inc
movsl
jno
rcl
rcrl
and
addr16
mov
adc
mov
xchg
into
in
ret
aas
ret
pop
sub
ret
pop
jno
out
ja
sti
daa
out
data16
lods
insb
mov
add
fistl
stos
loopne
sub
jnp
xor
gs
sub
out
inc
dec
cmp
sub
lock
adc
mov
shlb
jecxz
mov
cli
fdivs
xlat
dec
push
aaa
cmpsl
xorb
or
cmp
or
gs
mov
loop
pop
cmp
mov
cmp
ret
xor
cli
bound
add
adc
loopne
cmc
push
jnp
cmp
popa
cmp
jecxz
push
int3
pop
mov
mulb
inc
andb
sub
pop
aad
inc
loop
pop
and
dec
xchg
test
xchg
test
mov
enter
ret
sbb
es
imul
add
out
aas
xchg
xchg
aad
lahf
call
mov
insb
cmovs
int3
loopne
arpl
scas
xchg
adc
aas
jbe
faddl
sahf
mov
inc
mov
xchg
cmpsl
pop
cmp
mov
sub
add
jo
out
sub
jb
sahf
push
das
adc
insb
and
pop
adcb
daa
jne
sbb
add
fnstenv
les
sbb
gs
repnz
cwtl
mov
lea
lahf
movsl
jnp
dec
and
mov
push
sahf
ljmp
jle
rcll
repz
fisubs
pop
add
loop
aaa
leave
jge
insl
mov
movsl
jne
outsb
dec
out
iret
cmovbe
or
clc
outsl
jbe
xchg
cli
cmp
mov
fcomip
aaa
pushf
xor
pop
push
pushf
test
jns
mov
aam
inc
in
jne
into
fcomps
push
scas
ljmp
imul
xor
movsb
push
cmp
jle
rcrl
xor
ljmp
test
xor
fsubl
shrl
adc
cmp
mov
jne
mov
cmp
mov
movsb
adc
cli
std
enter
pop
lock
roll
sbb
fs
rol
lcall
in
fcmovb
das
push
inc
jle
lcall
stos
dec
add
test
jno
mov
fwait
adc
filds
push
cmp
jb
js
lcall
adc
mov
jnp
je
push
sub
inc
sbb
mov
lret
add
addr16
int
lcall
imul
dec
in
add
shlb
xor
aam
cmpsb
data16
cmp
dec
xorb
icebp
cmp
orl
dec
push
xchg
inc
mov
push
sub
das
popa
test
mov
pop
cmp
sub
mov
push
push
push
cmp
aam
xchg
adc
pop
iret
ljmp
roll
add
cmp
adc
xchg
cmp
sbb
jecxz
rcrb
icebp
gs
cmp
stos
es
or
scas
pushf
inc
rcrb
rolb
rol
cmp
mov
mov
dec
sub
lods
lea
mov
mov
shlb
lds
arpl
push
cmp
insb
sub
cmpsl
xchg
fisubl
jno
out
imul
push
sub
fdivrs
mov
jbe
mov
dec
mov
cmp
xor
xchg
cs
mov
addr16
lea
lret
inc
cmp
cmp
add
imul
inc
into
repnz
fistpll
push
mov
inc
cmp
imul
iret
and
sbb
lods
lods
loop
lds
push
pop
cmp
in
insb
leave
hlt
inc
in
and
dec
fidivl
push
fisubl
out
mov
push
add
loop
imul
xchg
xchg
push
popf
fmul
negb
js
push
mov
xor
mov
pop
into
pop
adc
xor
mov
bound
fadd
push
scas
jnp
cli
push
rorl
lods
pop
sbb
xchg
shll
adc
xchg
mov
push
add
int
nop
push
ficoml
fists
bound
xchg
lods
cs
cltd
test
lahf
lea
dec
xor
loop
loop
daa
cld
aas
push
call
add
pop
shlb
jae
and
jno
add
jb
lret
or
stos
int
dec
jge
dec
in
scas
inc
out
jae
sbbl
lret
mov
iret
ret
mov
fimull
mov
sub
fdivrs
adc
test
mov
ret
or
lock
lahf
pop
shrl
and
lods
add
outsb
enter
cmp
dec
sbb
cmpb
mov
shr
clc
push
cli
mov
inc
sbb
mov
stos
pop
mov
cwtl
jmp
sbb
ret
xor
hlt
sub
sbb
rol
lods
fdivr
push
xorb
in
call
out
pop
hlt
inc
arpl
mov
cmpsb
pop
lods
push
gs
jb
dec
inc
call
cmp
push
test
inc
daa
fiadds
inc
adcl
andl
inc
es
xchg
les
inc
pop
and
mov
ljmp
inc
loop
cld
pop
daa
add
cmp
pop
jmp
sbb
push
mov
out
lock
nopl
ljmp
mulb
ljmp
adc
mov
add
push
mov
mov
mov
aam
in
mov
mov
ss
and
loope
sbb
outsl
in
pop
cmp
or
inc
mov
sub
dec
or
sbb
out
xchg
pusha
cmp
movsl
pop
lea
xchg
push
rcrb
pop
mov
cmc
ret
adc
enter
ret
inc
fidivrs
mov
mov
adc
int3
sahf
and
inc
xchg
pop
into
and
mov
pop
sti
aad
sbb
add
pop
add
add
sbb
xchg
xorl
xchg
leave
jnp
mov
pop
int
mov
mov
or
xor
mov
jns
push
inc
jno
cli
push
or
out
cltd
stos
xor
add
and
pop
push
clc
or
scas
fsubrl
dec
inc
jecxz
dec
sub
adc
movsl
hlt
xor
mov
lea
pusha
xlat
sub
fildl
clc
enter
leave
popf
add
lcall
in
push
sbb
jne
cwtl
or
inc
loop
add
mov
ret
pop
jmp
in
pop
loop
loope
ljmp
enter
cmp
sbb
movsb
std
cmp
mov
hlt
adc
xchg
mov
adc
cmp
mov
sarl
lock
mov
inc
sbb
sbb
inc
push
xchg
hlt
mov
arpl
cld
ret
xor
outsl
aaa
cmp
inc
fucomp
fbstp
fimuls
in
push
and
stc
cmpsl
out
xchg
or
inc
sub
testl
lods
es
and
xchg
mov
xor
les
sahf
lahf
insl
adc
adc
jp
scas
mov
mov
insb
mov
jle
mov
mov
jnp,pn
bound
movsl
and
jno
xor
and
mov
rorb
adc
test
add
sub
inc
call
mov
std
cmp
sbb
icebp
mov
insb
mov
shr
xchg
dec
sub
inc
out
iret
mov
and
mov
enter
out
out
std
fmulp
int
sub
iret
fwait
sbb
jge
xor
orb
adc
rcr
adc
pop
xchg
jp
lock
inc
cmpsl
lock
fsubrl
popf
cs
ja
mov
xchg
adc
xchg
enter
ret
fs
lahf
sahf
sbb
outsb
push
adc
bound
imul
sbb
mov
inc
and
xlat
sub
push
xchg
or
imul
dec
mov
outsb
xor
les
or
pop
mov
xor
mov
sub
xlat
sti
xor
movsb
push
mov
stos
shrl
pop
cmc
jl
lds
inc
add
pmaxsw
insb
mov
jecxz
mov
push
scas
nop
xorl
inc
or
scas
movsl
jle
imul
mov
enter
jecxz
testb
push
xchg
and
stc
and
pop
leave
out
imul
mov
jle
inc
addb
lret
pop
nop
jne
movsl
mov
sub
adc
push
mov
lahf
ficomps
or
out
jnp
inc
ds
addr16
in
pop
sti
inc
shrl
ja
sub
pop
popa
mov
or
push
bound
mov
int
pop
fisttps
pop
mov
icebp
pop
ficoml
push
subb
lret
aaa
inc
movsl
pushf
dec
insb
sub
xor
pushw
push
push
and
pop
lock
cmp
int
mov
push
call
or
mov
cmp
in
outsb
sbb
int3
jge
jg
loop
inc
cmp
mov
aam
xchg
mov
out
movsb
clc
mov
sub
mov
push
pushf
mov
fs
insb
add
mov
fisubrs
push
inc
xchg
or
pushf
jl
pop
test
lods
and
repnz
int
and
mov
jl
pop
negl
loopne
inc
jne
ds
sbb
push
fidivs
into
out
jnp
xlat
icebp
inc
movsl
test
loop
push
sub
je
jno
xor
pusha
cmp
insl
jle
xchg
test
fisubrs
push
inc
stos
cwtl
mov
adc
adc
add
sbb
push
xchg
insl
adc
push
push
ss
ret
jno
mov
mov
fildll
stos
or
lcall
fstl
mov
ss
and
sub
cmp
sub
dec
jae
cmp
sbb
rcl
xor
inc
adc
int3
push
les
mov
movsl
adc
ret
cwtl
push
add
jo
lret
lcall
fidivs
dec
leave
shlb
mov
inc
push
jns
jo
test
jne
inc
xchg
ret
repnz
pop
ss
xor
cltd
mov
das
inc
test
pop
and
hlt
push
inc
push
cmpsb
bound
push
pop
add
push
subb
xchg
ficomps
in
add
mov
inc
mov
pushf
test
test
push
xchg
stos
clc
cmpsl
nop/reserved
mov
sub
mov
push
bound
sahf
lods
sbb
sbb
xchg
pop
sbb
enter
jl
insl
adc
cld
out
adc
shlb
cs
jecxz
es
cltd
ja
inc
adc
mov
aam
add
or
xchg
push
mov
mov
fwait
mov
repnz
in
orl
cs
test
cmp
push
fnsave
repz
cltd
mov
pop
pop
mov
add
pop
push
or
scas
rclb
jo
in
mov
daa
lods
lret
addr16
xchg
dec
jne
inc
jl
lods
mov
roll
adc
loopne
imul
push
inc
cmp
sbb
xchg
adc
mov
aas
loopne
xor
xchg
lret
flds
jb
xor
popa
sbb
push
lods
jbe
lcall
outsb
int3
mov
pop
icebp
jl
stc
or
push
xchg
roll
jp
mov
add
mov
adc
fsubl
outsb
clc
or
int
mov
daa
out
xor
cwtl
push
fwait
lret
mov
lock
stos
dec
mov
int3
push
sbb
lret
add
test
pop
xchg
scas
bound
lcall
mov
and
adc
inc
adc
insb
push
cmp
scas
add
fiadds
ret
shrb
inc
pop
and
dec
push
mov
out
divl
shll
nop
mov
pop
xor
add
adc
out
sub
xchg
push
jp
scas
shlb
jl
dec
adc
arpl
mov
test
mov
add
inc
fbld
loopne
sub
es
mov
pop
in
add
ja
push
scas
sbb
and
xchg
enter
test
or
cmp
repnz
jecxz
lcall
mov
mov
cmp
loopne
xor
scas
fwait
mov
adc
add
aaa
xchg
stc
in
cmp
std
mov
inc
cmc
xchg
lret
adc
in
add
je
andl
test
mov
mov
mov
ficompl
popa
inc
inc
fld
cmc
push
dec
loopne
mov
jge
dec
daa
mov
inc
jle
mov
orb
movl
fwait
sbb
push
lock
jo
cwtl
aad
mov
jle
push
shll
adc
incl
mov
call
add
push
adc
enter
mov
mov
push
int3
daa
addr16
mov
cmc
xchg
cltd
sbb
aas
mov
xor
shll
xchg
mov
mov
xchg
cmpsb
mov
jb
into
test
aad
lret
enter
in
sub
je
nop
mov
mov
xchg
dec
stos
imul
inc
pop
inc
sub
mov
test
test
inc
andl
push
mov
test
pop
fiadds
outsb
adc
iret
loopew
xor
mov
imul
xlat
xorb
sbb
xlat
or
mov
push
shrl
mov
int3
aam
icebp
lret
negl
test
mov
setle
jle
scas
or
sahf
sub
ret
out
push
fmulp
add
pop
mov
sbb
cltd
fimull
fs
and
pop
sub
fcmovb
push
inc
xor
and
mov
push
mov
out
ss
mov
sub
out
stc
xchg
xchg
push
bound
clc
mov
xchg
nop
pushf
xlat
pop
mov
cmpsb
xor
sub
cmp
jmp
adc
xor
fcomp
pop
mov
xchg
ljmp
mov
lret
mov
lahf
data16
jo
fnstsw
lahf
js
pop
cmp
clc
les
loop
jne
xor
aam
inc
add
decb
leave
mov
add
in
cmpsb
fidivs
lahf
stc
outsl
je
lods
add
leave
icebp
in
loopne
mov
inc
and
mov
and
jp
roll
outsl
sub
jnp
std
mov
adc
int
xchg
jb
cmp
ljmp
fidivl
scas
push
rcll
sbb
jg
inc
cmp
stos
int3
divps
sbb
fs
jl
int
popf
cmp
mov
mov
mov
xor
add
in
xchg
cmp
xchg
repz
sbb
jecxz
mov
aad
call
imul
lods
or
shrl
cmp
sub
cmpsb
pop
cli
sub
lret
loop
jp
test
inc
mov
or
xor
dec
ret
ss
mov
push
push
pop
leave
pop
cmpsl
out
xor
loopne
out
loopne
lret
ljmp
mov
lds
ret
cmc
addr16
sbb
adc
mov
bound
mov
and
xchg
inc
sbb
stc
arpl
stos
sbb
es
xchg
cmpb
into
pop
and
imul
ja
movsb
out
xor
sti
cmp
pop
fisubl
mov
dec
or
push
add
jnp
add
lods
sbb
mov
bound
jae
and
jae
out
and
jbe
push
mov
cmp
mov
xbegin
push
mov
shr
ss
es
out
sbb
fisubrs
mov
int
pop
cld
mov
data16
jnp
ljmp
jae
mov
mov
addl
int3
xchg
mov
push
xor
or
dec
adc
mov
mov
rcll
jno
add
popa
js
add
jge
adc
and
xchg
fs
test
jecxz
repnz
cmpsl
outsb
jnp
xchg
loop
dec
sub
addr16
cmp
insb
out
scas
sbb
sub
mov
cmp
push
push
cmp
xor
sbb
xor
xor
stc
cld
jmp
sbb
js
xchg
jbe
mov
xchg
push
stc
pop
inc
adc
gs
jge
cmp
pop
repnz
pop
movsl
pop
fs
xor
mov
fidivrs
push
nop
fs
inc
and
dec
pop
ficompl
lret
jl
lret
or
scas
jb
fstpt
sbb
fisubrs
mov
add
cmp
imul
addr16
jae
adc
insl
in
int
push
sbb
dec
push
loopne
mov
jp
cmc
aas
sbb
sarl
or
mov
fwait
test
or
xorb
mov
hlt
push
in
aam
les
mov
movsb
and
fs
lock
xorb
mov
hlt
push
in
aam
les
mov
movsb
and
fs
lock
xorb
mov
hlt
push
in
aam
les
mov
movsb
and
fs
push
lock
xorb
and
les
aam
mov
cmp
pop
fildll
jnp
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
sbb
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
lods
sbb
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sbb
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sbb
add
sbb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
