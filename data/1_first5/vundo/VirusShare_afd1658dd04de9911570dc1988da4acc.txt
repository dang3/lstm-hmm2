jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
or
mov
mov
cmp
bound
add
add
pop
or
add
add
add
add
add
pop
add
add
add
add
lods
add
add
inc
add
add
stos
add
add
inc
add
jmp
mov
xor
popf
add
add
dec
add
inc
add
xchg
xor
pop
add
add
add
mov
add
add
add
add
add
adc
fiadds
jne
inc
add
cmp
jge
xchg
dec
add
push
add
add
inc
add
add
das
add
add
push
add
add
lcall
add
add
lcall
add
add
add
add
adc
dec
add
inc
add
push
add
add
push
add
add
inc
add
add
add
outsl
add
add
add
inc
add
add
add
outsl
add
add
add
mov
add
xor
sbb
add
push
add
add
inc
add
add
add
add
xchg
add
add
mov
add
add
jl
pop
add
push
cmpsb
add
add
inc
add
inc
add
add
add
add
pop
add
xchg
dec
add
add
add
adc
add
add
add
cmp
inc
add
add
add
xchg
flds
int
lcall
add
cmpsb
add
add
add
add
pop
add
inc
add
pop
add
stc
add
add
add
inc
add
inc
add
add
add
or
dec
add
add
dec
add
add
pop
add
add
fiadds
jmp
add
dec
add
add
inc
add
xchg
sub
pusha
add
add
lcall
add
movsl
add
or
add
add
add
inc
add
add
add
adc
mov
inc
add
lea
fiadds
pop
add
inc
add
add
add
add
add
add
jmp
cmp
add
add
add
add
add
les
loopne
inc
add
add
add
add
iret
push
mov
movsl
add
add
add
add
or
inc
add
add
roll
jae
inc
add
add
add
add
add
add
add
dec
add
add
add
add
lea
je
sbb
push
add
add
add
add
jae
aaa
add
or
xchg
jmp
lea
mov
add
lock
add
add
add
add
add
inc
add
add
add
add
add
pop
add
inc
add
add
add
add
lcall
add
add
add
add
add
add
add
inc
add
adc
cmp
mov
add
adc
add
add
add
add
cmp
jae
push
add
add
inc
add
test
imul
add
add
add
add
sbb
mov
push
add
add
add
add
add
add
add
add
xchg
pop
add
in
add
jmp
jge
push
add
mov
add
add
sbb
addr16
push
repz
inc
into
pop
ss
adcl
js
push
push
rorb
orl
ljmp
out
aad
mov
js
out
std
or
dec
stos
cld
lahf
mov
jmp
loopne
in
stos
push
sbb
lret
add
mov
xchg
pop
icebp
adc
cmp
inc
lock
dec
dec
add
je
xchg
pop
and
sbb
fwait
ja
mov
cmp
sbb
pop
fdivrs
add
mov
stc
or
andb
sbb
scas
imul
ljmp
mov
lcall
insl
lds
insb
xchg
dec
arpl
aaa
loopne
nop
dec
ja
xchg
mov
mov
jg
mov
addl
inc
xorb
cmp
inc
jb
jge
std
daa
jo
leave
jae
bound
sub
pop
hlt
jnp
nop
jp
cmp
aaa
lahf
pop
mov
inc
pop
cmp
ljmp
mov
jnp
push
dec
dec
mov
pop
jae
add
andb
or
xor
push
dec
xchg
push
pop
repnz
pop
iret
push
out
push
push
inc
cld
sbb
add
cli
test
in
ds
fwait
movsb
mov
jae
dec
mov
icebp
jmp
inc
or
fmuls
arpl
push
mov
mov
mov
jae
and
clc
movsl
mov
mov
std
std
mov
push
jae
roll
aad
test
ret
fildll
sbb
cmp
add
xchg
in
fldl
push
stc
movsl
bound
fwait
xchg
popf
sbb
test
scas
testb
shll
dec
or
jmp
jno
nop
or
enter
or
div
cmp
bnd
mov
xchg
pop
inc
sub
mov
fcoms
xlat
fldcw
cmp
mov
test
jle
rol
cld
shrl
out
sbb
bound
or
and
outsl
in
push
cmp
test
dec
sub
pop
dec
or
or
jbe
mov
pop
cmp
xor
flds
sub
jnp
dec
adc
into
loopne
jb
cmpsl
push
or
pop
xor
cwtl
aas
fs
push
xchg
jge
jne
jl
imul
cmp
xchg
adc
sbb
pop
movsl
out
cltd
push
not
push
adc
test
lahf
push
push
sub
mov
aaa
push
cwtl
mov
iret
lods
pop
or
add
test
and
xchg
aad
fwait
jnp
add
lret
insb
test
stc
mov
sbb
xchg
mov
push
sahf
out
decb
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
sub
lods
test
int3
cmpsb
mov
pop
sub
sbb
push
insl
inc
dec
jne
gs
mov
movsl
cld
aad
int3
popf
cmp
sub
jge
or
jl
insb
inc
pop
jne
gs
mov
movsl
cld
aad
int3
in
adc
imul
and
int3
out
int3
rcr
fsubl
daa
jle
outsb
mov
cld
pop
pop
jo
clc
push
or
cmp
and
std
aad
inc
push
std
mov
cli
inc
and
mov
xor
xchg
lods
mov
frstor
push
push
mov
mov
repz
inc
lods
inc
fcomip
or
jnp
lods
mov
cld
jbe
les
int3
sbb
ljmp
push
aas
mov
inc
loope
aad
in
sub
int3
lds
dec
dec
lret
das
push
add
fnstenv
fwait
inc
adc
sbb
and
and
or
imul
insb
push
pop
jne
jo
xchg
lods
test
in
int3
in
adc
or
jl
insb
inc
pop
jne
or
xchg
call
movsl
mov
mov
mov
insb
sahf
add
push
push
and
or
sub
lock
loopne
rol
movsl
cltd
mov
mov
outsb
pop
inc
jl
imul
inc
or
push
or
roll
sarb
int3
in
adc
or
jl
insb
inc
pop
jne
gs
mov
movsl
cld
aad
int3
in
adc
or
jl
insb
inc
pop
jne
gs
pop
fisubs
mov
and
xchg
shl
mov
insl
and
cmp
outsb
jmp
mov
inc
cmpl
push
pop
inc
mov
sbbb
sarl
js
mov
xor
cwtl
push
pop
aaa
and
pop
out
cmpsb
sbb
rcrb
cwtl
lahf
shlb
and
andb
mov
xor
lret
fwait
inc
dec
imul
ret
les
and
movsl
loope
xchg
pop
sbb
fcoml
nop
scas
lahf
in
movsl
adc
and
mov
mov
call
mov
into
bound
cmp
sub
cmpsl
adc
fdivr
dec
sub
xor
icebp
lret
adc
inc
into
jns
lea
sub
outsb
daa
mov
ficoml
out
rcrl
add
and
and
ficoms
xor
add
sar
mov
loopne
or
cmc
nop
push
lock
jmp
xchg
sbb
mov
cld
jp
jp
dec
lahf
sbb
ljmp
rclb
inc
jecxz
push
cltd
sub
imul
das
adc
adc
lods
scas
bound
cmpsb
cmp
je
jns
test
insb
xor
mov
ja
loopne
sarl
inc
pop
push
jnp
or
and
mov
mov
out
ds
popf
mov
cwtl
inc
bswap
add
out
out
mov
mov
push
rclb
dec
inc
pusha
inc
stos
movsl
push
fdivs
jnp
in
cmp
push
jo
or
mov
ret
clc
mov
sbb
jnp
cmp
mov
add
jmp
jno
mov
ljmp
mov
push
or
in
out
jle
repnz
idiv
notl
jo
jne
pop
xor
leave
test
movsb
dec
test
aas
push
mov
xlat
stos
sbb
mov
push
jecxz
sub
aas
sbb
mov
int3
fwait
in
lea
cld
xor
jl
fsts
push
setnp
mov
or
enter
nop
or
sbb
mov
addr16
jg
movsb
xchg
cmpsb
push
adc
pop
xchg
xchg
mov
sub
lea
mov
cmp
popa
push
dec
push
incl
cmp
xchg
cmp
xor
cld
xor
scas
rorl
stos
cld
or
cld
mov
mov
add
inc
call
fildll
cmp
stos
jb
mov
fidivrs
cmp
pop
fiaddl
xor
shrl
or
mov
pop
xor
xor
scas
lahf
cltd
mov
movsb
adc
pop
mov
mov
outsb
xchg
xor
popf
xor
les
daa
push
repz
sbb
test
jmp
sarb
mov
xchg
inc
fadd
dec
shrb
xchg
mov
mov
xchg
cmp
xchg
fbld
jo
gs
jmp
negl
repnz
cmp
pop
jno
xor
das
leave
xchg
rcrb
xchg
jae
into
out
sbb
incb
jno
movsb
sbb
aad
je
call
cmpsl
mov
lods
movsl
loop
les
jae
xlat
mov
lret
adc
cs
cmp
outsl
lods
fs
add
test
popa
andl
mov
add
loopne
push
dec
pop
in
js
mov
in
mov
divl
leave
mov
sbb
das
loope
adc
sub
divl
lea
sbb
ret
cmc
xchg
sbbb
and
out
rorl
jle
push
shrb
mov
mov
mov
push
aaa
xchg
les
repz
mov
nop
xchg
rorl
cmpsl
dec
inc
lcall
jp
aad
sub
mov
into
mov
push
and
js
scas
pushf
insl
push
and
pop
cmpsl
inc
in
adc
add
hlt
add
xor
pop
xchg
sbb
ret
mov
push
xor
lea
sbb
ja
shl
loopne
negl
lret
test
stc
daa
repz
fisttpl
cmp
or
cwtl
mov
mov
jle
mov
mov
or
mov
imul
mov
mov
jno
or
call
sub
pop
jle
testl
xlat
mov
insl
adc
shll
testb
in
int3
in
loop
mov
push
sub
fs
xor
mov
pop
or
das
pushf
sub
and
inc
jmp
icebp
pop
cmp
xchg
fnstsw
sbb
lahf
jae
enter
fadd
hlt
push
fisubl
cmp
lret
jmp
test
pop
push
mov
xchg
lea
or
mov
repnz
xchg
mov
fs
cmp
mov
dec
adc
xchg
dec
push
movsb
cmpsb
lahf
push
out
lret
lds
dec
xor
aam
xor
cmp
hlt
adc
cmpb
repz
mov
xor
dec
jns
imul
mov
mov
push
shrb
sub
mov
imull
mov
pushf
xor
push
sub
xchg
jb
out
ja
mov
pop
xchg
shl
mov
adc
orb
add
dec
scas
fiaddl
dec
jno
inc
pop
push
inc
dec
mov
les
adc
int3
call
mov
inc
sub
cwtl
aaa
xchg
jo
or
test
test
ret
pop
xor
shrl
je
and
clc
jae
pop
fwait
repz
mov
ficoms
out
aaa
xor
mov
lds
lret
repnz
arpl
fwait
xchg
insl
adc
sbb
lea
mov
push
leave
and
repz
lock
fxam
or
sub
jl
aam
dec
cmpsb
loope
mov
stos
es
ds
popa
mov
lret
xchg
dec
mov
xchg
add
xlat
insl
dec
xor
mov
adc
pushl
or
inc
push
push
jg
dec
hlt
sbb
dec
lea
iret
icebp
mov
cwtl
mov
mov
out
jno
lds
gs
cs
sub
les
mov
sti
push
mov
adc
fwait
popl
pop
call
inc
in
xchg
inc
sbb
jns
aad
data16
mov
jecxz
sahf
inc
cld
jmp
xchg
push
xor
push
in
dec
lods
addr16
sbb
fcmovb
fadd
outsb
or
and
jle
cwtl
je
push
loop,pt
xor
or
pop
xor
scas
push
push
xor
lock
aam
mov
pop
das
icebp
mov
and
fcomp
jbe
xchg
inc
or
push
repnz
scas
mov
popf
sbb
lret
jo
movsl
scas
push
jp
xchg
dec
add
mov
cmpsb
lock
test
sbb
inc
and
lds
sub
outsb
mov
mov
fbld
cmc
pop
add
ljmp
cmp
dec
subl
fisubrs
sbb
int
mov
orl
outsl
scas
pop
ljmp
fsubl
pop
inc
xor
jle
sbb
jmp
xor
mov
dec
mov
aam
repnz
out
out
or
daa
and
mov
aas
shlb
iret
inc
fs
dec
sbb
arpl
sbb
mov
push
in
test
stc
cltd
jnp
mov
out
pop
jb
cwtl
jb
gs
lcall
push
mov
add
js
lcall
pusha
pusha
cltd
rorb
loope
test
mov
jns
mov
dec
push
fdivr
mov
pop
pushf
xchg
pop
xchg
or
cltd
pop
test
pop
pop
and
mov
jno
mov
fucomp
nop
fists
dec
xlat
xor
mov
mov
adc
fucompp
lods
xchg
add
mov
adc
ja
add
das
in
sub
mov
cli
adc
data16
popf
subb
aam
xor
jl
mov
xchg
mov
in
mov
into
xor
and
out
xchg
xchg
repnz
repz
cltd
dec
sub
push
add
insl
push
add
push
or
adc
mov
jb
mov
inc
movb
sbb
popf
aaa
adc
sub
xor
cmp
test
lret
mov
rcrl
sahf
cli
cmp
or
lds
lahf
addb
dec
and
rcll
add
xor
incl
out
xor
mov
loopne
subb
sbb
mov
jo
cmpb
cmp
stc
movsb
mov
repz
outsl
test
imul
fbld
or
pushf
and
sub
fcmovnu
popf
mov
push
das
pop
sbb
repnz
cwtl
cld
xchg
mov
std
aaa
push
imul
in
jg
dec
bound
dec
fwait
pop
xor
cmp
scas
ja
in
jne
clc
and
aas
mov
xchg
jno
fadd
mov
ljmp
loopne
jbe
loope
mov
filds
lock
shlb
mov
cwtl
pxor
rcrb
clc
popa
cmp
inc
and
rcr
adc
xor
stos
dec
xor
mov
jno
aad
subb
js
add
jg
add
pusha
and
ja
mov
mov
or
pop
ja
js
fwait
out
in
fistl
std
dec
clc
mov
into
stc
in
pop
cmp
rorb
sbb
shrl
or
hlt
mov
xchg
push
daa
xchg
sbb
ljmp
sub
jbe
outsl
or
aad
sbb
xchg
and
addr16
fisttpll
xor
fwait
mov
mov
or
ja
push
add
ret
xor
jbe
lret
or
pop
inc
mov
pop
mov
and
shlb
test
sar
pop
fnstsw
js
xchg
xor
jge
leave
test
rep
mov
rcr
int
clc
pop
cmp
mov
mov
xchg
ja
mov
outsl
scas
adc
aaa
fs
pop
add
nop
sbb
in
int3
mov
cmpsb
mov
pop
jb
icebp
push
popl
add
rolb
int3
xchg
or
xchg
sbb
std
mov
mov
out
xchg
js
cld
jbe
xor
pop
pop
sub
jle
mov
mov
adc
mov
fcoms
and
out
and
lods
xor
jmp
popa
mov
iret
jb
imul
aad
adc
pop
lea
sti
push
bound
adc
and
xlat
jbe
push
push
movsb
rolb
aad
sti
dec
sbb
xchg
push
and
and
leave
mov
cs
cmp
pop
cmp
dec
xchg
push
add
push
xor
insb
sub
stos
enter
repnz
sub
mov
push
nop
sti
outsb
push
xor
les
dec
mov
pushf
dec
cmp
pop
and
push
andb
mov
xlat
mov
enter
and
cmc
out
pop
testl
pop
cmp
repz
fcmovnbe
testl
loop
mov
fidivrs
mov
sub
ret
cmp
xchg
mov
div
fldl
lods
mov
dec
addr16
lret
in
hlt
scas
call
and
out
xchg
out
pop
repnz
sbb
jb
repz
ljmp
adc
outsl
lods
fimuls
xor
push
out
mov
add
out
iret
cmp
sub
fadds
lods
loopne
adc
mov
aam
nop
fs
cs
lret
dec
movsb
xchg
mov
jbe
mov
call
mov
fwait
add
push
rcl
mov
test
adc
jbe
mov
mov
sub
sub
cmp
iret
pushf
sbb
lahf
addr16
lcall
ret
in
add
gs
inc
sbb
mov
and
jle
js
dec
mov
imul
cmp
add
lahf
ds
jmp
fldenv
jl
xor
out
in
test
sub
and
scas
jbe
cmc
and
cli
adc
aad
loopne
negb
pusha
sti
inc
or
or
test
mov
adc
mov
cmp
out
pop
mov
je
pushf
mov
addr16
pop
cmc
xchg
subb
adc
test
out
outsl
iret
dec
xchg
cmc
sahf
sahf
imul
fldcw
enter
jecxz
mov
stc
hlt
add
sub
inc
bound
pop
lcall
add
jb
lock
fsubrl
jbe
and
sti
xchg
fisttpl
repz
int3
inc
or
clc
movsb
adc
mov
dec
jge
imulb
lods
ds
imull
add
xlat
jb
or
je
icebp
movsl
xor
aas
mov
stos
int
mov
ljmp
scas
jg
ljmp
lock
sbb
jmp
and
cmpsl
cs
idivl
fistps
mov
mov
add
mov
cmp
mov
mov
cmp
push
iret
adc
push
dec
ret
out
loop
cmp
scas
inc
mov
mov
pop
outsb
addr16
fwait
clc
jge
sbb
lcall
sbb
push
mov
xchg
lret
jns
cwtl
xor
inc
dec
inc
aam
cmp
sti
or
sbb
xor
cmp
push
push
sbb
inc
lret
mov
outsl
push
in
sbb
sbb
add
outsb
xchg
mov
addr16
add
sub
mov
sbb
xchg
je
mov
mov
int
test
mov
pusha
mov
jns
in
ja
test
push
cmc
jg
xchg
rcrb
lods
hlt
sbb
add
cmp
leave
mov
pop
mov
mov
pop
addr16
jge
pop
divl
jp
cmpsb
out
scas
daa
arpl
into
xchg
and
pop
adc
mov
adc
shl
std
push
pop
cld
push
imul
cmp
repnz
jno
test
aam
add
push
lea
or
ret
xor
fsubrl
or
dec
and
imul
fwait
es
lahf
outsl
rclb
sub
inc
lea
pop
sub
jecxz
jg
or
fwait
rorl
ffreep
mov
dec
subb
test
sub
adc
cmp
sbb
jo
fs
fs
mov
clc
cmp
mov
mov
out
mov
fisttps
or
scas
mov
mov
lahf
imul
sbb
sub
call
mov
cmc
xchg
mov
ja
add
add
or
jmp
xor
in
push
lds
fwait
ret
inc
dec
mov
inc
andb
arpl
pop
push
sbb
xchg
dec
adc
out
leave
out
dec
repnz
daa
rolb
jo
xor
pop
sti
fdivl
dec
mov
lret
fnstsw
testb
pop
out
add
aad
xchg
pop
pop
jecxz
mov
cmp
mov
xchg
xor
lret
adc
enter
gs
aas
and
leave
cltd
xchg
jmp
scas
dec
dec
stc
jge
es
movhps
mov
jmp
jle
mov
and
orb
mov
rcll
add
popf
adc
xor
testb
push
data16
add
addr16
pop
mov
pop
cli
jnp
pop
inc
jns
inc
dec
icebp
push
daa
pop
sahf
out
ja
popf
movb
pop
or
in
jno
stos
and
andb
popf
icebp
dec
xor
stos
xor
mov
push
stos
or
aad
adc
std
sub
push
sbb
adc
jl
mov
or
pop
xchg
mov
mov
stos
add
inc
sbb
sbb
fcomps
sarb
ja
mov
jo
js
ficoml
cmp
scas
mov
push
jns
adc
out
push
loopne
push
fdivl
jle
clc
mov
clc
bswap
mov
imul
cwtl
adc
mov
ret
pushf
insl
cmpsl
lds
push
aad
xor
adc
daa
icebp
loope
push
js
out
sbb
rol
test
jp
rcrb
sarl
or
add
fdivr
test
push
mov
jo
es
add
adc
ret
mov
jmp
mov
lods
add
push
cmp
or
orb
sahf
sub
inc
or
pop
jb
sub
sub
sbb
ret
in
int3
mov
push
adc
cmc
rsm
mov
dec
pop
shlb
jne
cmc
jl
push
xorb
andb
shll
sti
sub
dec
xchg
fildl
xchg
popf
cmp
or
fs
xor
fwait
dec
in
nop
push
shrl
push
ret
jno
and
mov
or
pop
pop
xchg
daa
sub
sbb
mov
mov
mov
stos
gs
xchg
mov
in
cmp
aas
xchg
xchg
imul
test
sbb
rolb
mov
ljmp
pop
pop
pusha
ret
dec
pop
ss
ficomps
add
mov
push
call
int3
xlat
inc
imul
in
inc
cmpsl
lock
out
pop
popf
xor
push
mov
in
xchg
mov
mov
cwtl
bound
lahf
mov
icebp
gs
test
xchg
repnz
fistps
and
adc
jcxz
dec
scas
fsubr
enter
and
or
xchg
pop
jnp
push
push
mov
xor
or
mov
das
dec
sub
testl
jns
test
in
jbe
out
outsb
clc
dec
pop
bound
xchg
xchg
and
aas
mov
mov
jl
es
jno
pop
cmp
aam
divl
cs
mov
test
dec
pusha
je
or
pushf
xor
inc
and
add
push
icebp
mov
pop
outsl
mov
int3
les
lcall
fs
mov
out
sub
js
ret
mov
mov
fsubs
cmpsl
xlat
or
xchg
mov
ficoms
loopne
xorl
and
repz
vmovapd
addr16
jp
inc
mov
mov
sbbl
lds
in
sbb
mov
mov
xor
imul
movl
insl
aaa
ret
inc
je
push
ja
xchg
xchg
stc
xor
adc
loope
xchg
mov
int
xchg
loope
jne
xor
pop
mov
gs
fcomp
rolb
shll
adc
pop
jns
and
xchg
int
std
dec
xchg
scas
fadd
insb
dec
imul
add
out
mov
dec
aad
or
mov
or
fs
test
adc
dec
or
out
xor
call
jg
jmp
mov
push
call
dec
dec
inc
int3
js
aad
outsl
ljmp
or
and
ja
fwait
icebp
xor
inc
mov
jmp
mov
jp
inc
inc
test
fwait
rcll
add
insb
inc
add
and
arpl
imul
adc
adc
pop
jns
push
sub
adc
and
sbb
icebp
add
push
jmp
fildll
fisttpll
adcl
fwait
cmpsb
test
sahf
mov
mov
pop
mov
jmp
dec
cmp
cltd
ret
ljmp
cmc
and
cmp
loopne
push
sahf
shrl
xchg
ds
loop
inc
and
clc
or
scas
shlb
lea
jnp
nop
lahf
adc
and
aas
lahf
lcall
gs
mov
inc
mov
pop
pop
fs
inc
in
test
pop
or
jg
cmp
aam
push
fiaddl
fwait
or
aam
xor
mov
adc
push
enter
and
fnsave
andl
xchg
inc
movups
clc
adc
fsubrs
insl
stos
sbb
lret
out
fsubl
std
adc
inc
dec
or
mov
insl
repnz
or
lods
jnp
mov
notl
jne
sbb
sbb
pop
cmp
xchg
adc
orb
movsb
ret
test
imul
cmpsl
push
jle
cmp
adc
add
test
adc
add
push
mul
xor
mov
loop
mov
sub
iret
mov
add
mov
xchg
mov
jo
stos
jbe
popa
icebp
dec
xchg
test
mov
daa
cli
sbb
mov
fldl
cli
jle
addr16
mov
sbb
daa
pop
inc
inc
cmpl
test
arpl
cmp
testb
mov
jb
lahf
in
call
push
cmp
fwait
test
shlb
xchg
das
pop
dec
or
xor
les
mov
movsl
cld
aad
int3
in
adc
or
jl
insb
inc
pop
jne
gs
mov
movsl
cld
aad
int3
in
adc
or
jl
insb
inc
pop
jne
gs
mov
movsl
cld
aad
int3
in
adc
or
jl
insb
inc
pop
jne
gs
mov
movsl
cld
aad
int3
in
adc
or
or
in
mov
hlt
jno
inc
sub
and
xor
lods
mov
xchg
sarl
fildl
or
sub
dec
xor
imul
loope
icebp
fwait
mov
test
or
adc
and
push
push
inc
pop
jae
popa
test
mov
lret
mov
mov
cmp
mov
movsb
xor
cmpsb
add
adc
and
mov
shll
movsl
mov
pushf
repz
or
mov
sub
xor
xor
inc
pop
call
pop
and
aam
sarl
mov
hlt
fisttpl
lods
sti
mov
sub
fwait
xor
test
fcomi
fs
dec
das
inc
pop
cwtl
mov
andb
sahf
xor
aam
fcmovnu
imul
roll
fwait
shr
mov
jns
popf
add
add
sti
inc
sub
mov
rorb
and
scas
adcl
or
cmp
lds
pop
add
bound
xchg
imul
sarl
lahf
or
sbb
sbb
adc
loope
mov
aam
cmpsb
fisttps
sub
adc
xor
ds
cmp
cmove
xchg
mov
clc
fdivrs
rcrb
and
dec
jb
xor
imul
loope
icebp
fwait
shrl
fildl
or
inc
sub
and
pop
add
jnp
mov
fwait
shrl
fildl
or
pushf
orl
sub
jbe
rorl
and
rorl
aaa
push
orb
gs
pop
xchg
stc
pop
imul
loop
imul
pop
mov
es
jl
sbb
test
and
stc
and
ja
dec
in
and
and
out
mov
cli
repnz
cmp
clc
sbb
arpl
pop
sub
out
adc
pop
push
lods
xor
stos
jp
sbb
cli
ja
outsb
and
push
fimuls
and
and
data16
in
jae
pusha
adc
push
pop
cld
lret
add
or
push
mov
jle
pushf
outsb
loope
out
xchg
stos
jmp
ja
aam
add
push
fadd
add
cld
enter
push
dec
fdivr
dec
js
sub
push
mov
cwtl
in
add
inc
cmp
rcrb
lods
ja
int
jp
repnz
lcall
sti
push
and
lahf
dec
pop
jb
cmc
fsubl
pop
xor
pusha
je
cmpsl
ds
das
cs
jge
imul
sti
pop
push
dec
incb
jle
ss
push
mov
xorl
mov
es
stos
test
insl
insb
stos
imul
dec
lods
out
popf
xor
push
sbb
leave
stos
inc
mov
inc
pop
pop
or
jge
jle
rorb
dec
cmc
and
fs
pop
call
outsb
pop
inc
rol
xor
jg
mov
xchg
hlt
les
jno
xor
adc
xchg
pop
pusha
or
sub
data16
aas
andl
or
int
movsb
rcrl
add
or
pop
mov
out
mov
popf
jo
jae
mov
push
or
lret
scas
inc
stc
jmp
and
stc
xor
aaa
imul
mov
sub
xor
sarb
mov
mov
jb
mov
aad
mov
sbb
hlt
inc
loop
and
pop
pop
jbe
cmpsl
icebp
and
nop
push
fstl
adc
loopne
shlb
dec
mov
cmc
test
jbe
pushf
lret
movsl
and
cmp
mov
add
std
sub
mov
repz
jne
ja
mov
jbe
lods
scas
xor
cmpsl
ds
mov
xchg
push
mov
into
xchg
adc
outsb
sub
mov
mov
out
das
mov
addr16
pop
pop
test
dec
arpl
cltd
jecxz
daa
jae
add
jmp
cwtl
rorl
sub
jecxz
jmp
pop
lods
icebp
mov
sarl
cmp
jge
pop
mov
inc
mov
fimull
insl
mov
xchg
and
out
mov
aad
scas
lds
push
inc
jmp
mov
or
mov
shll
fiaddl
inc
in
push
psubusb
lcall
push
inc
sub
inc
dec
jnp
and
push
aas
nop
icebp
push
and
xchg
push
dec
movsb
lret
dec
mov
mov
ja
pop
mov
mov
and
push
pop
and
jle
idiv
dec
pop
jns
rclb
in
cmp
adc
xor
sbb
fists
rcll
mov
ja
out
test
jp
loopne
pop
outsl
aas
rcll
sarl
scas
or
and
jno
jb
mov
jge
imul
imul
add
xchg
cmp
aas
jg
es
xchg
and
push
cltd
jbe
dec
and
scas
mov
stc
inc
pop
arpl
cmp
lock
int
jbe
imul
add
mov
addl
fdivl
push
popf
xchg
mov
add
jae
inc
lret
out
popf
inc
dec
sbb
mov
cmp
ja
push
push
xchg
mov
mov
jp
jnp
outsb
je
pop
test
sbb
xlat
lahf
pop
jb
cmpsl
out
dec
test
in
popa
popf
scas
mov
and
outsl
out
cld
push
mov
insb
add
mov
sbb
sbb
jne
mov
sbb
xchg
in
adc
push
inc
stos
lret
mov
aad
xchg
mov
cmp
aad
push
cmc
push
mov
movsw
adc
pop
sub
xor
cmc
fisttps
xor
xorb
mov
xchg
push
adc
fwait
scas
lea
jmp
xchg
jne
xor
jp
xchg
add
xchg
out
inc
leave
int
jbe
shlb
sub
pop
testl
xlat
dec
add
sahf
add
scas
dec
sarl
call
and
mov
pop
sti
hlt
popf
mov
mov
jne
lret
mov
mov
push
cmpsb
lret
mov
jp
fnstcw
xor
bound
push
fs
inc
sub
cmpsl
aaa
mov
xchg
push
ficoms
mov
sbb
adc
out
mov
test
jecxz
cmpsl
fidivrl
pusha
jns
cwtl
cmpl
gs
push
cwtl
stos
mov
dec
test
push
dec
jle
adc
add
cmpsl
adc
xor
aaa
and
mov
sub
inc
test
movsl
lods
mov
inc
outsb
lret
mov
cmpsb
cwtl
adc
and
jno
in
cs
jb
cmp
sarl
je
mov
mov
rcl
push
inc
push
push
int
mov
jp
arpl
or
sarl
lock
das
jg
and
test
enter
xlat
jle
pop
jl
jmp
mov
lret
jp
jecxz
add
ja
imul
pushf
stos
je
lds
stos
inc
lahf
cmp
test
mov
data16
mov
fwait
fwait
and
jno
xchg
aas
jecxz
xor
sbb
cmp
pusha
adc
push
test
aad
bnd
mov
sbb
push
pop
sbbl
add
cmp
popa
shll
mov
insl
xchg
jb
jecxz
insl
push
shl
dec
dec
aas
mov
into
scas
or
sbb
xchg
inc
gs
push
int
lods
fiaddl
iret
mov
jb
in
subl
or
or
incb
sbb
testl
in
sbb
add
dec
adc
jecxz
mov
in
mov
jle
lcall
mov
repz
or
pusha
sub
inc
shrl
ret
loope
mov
xchg
fisubs
lods
loop
sub
aad
scas
inc
push
add
sbb
aas
adc
dec
out
ss
push
scas
shr
xor
push
mov
pushf
inc
sbbl
inc
cmp
imul
imul
notl
loopne
jmp
mov
or
mov
jb
pop
mov
cli
adc
loope
cmp
inc
sbb
jge
xor
in
mov
push
jno
or
leave
xchg
mov
shlb
jnp
aas
or
xlat
push
pop
add
in
movsl
dec
xchg
mov
test
pop
or
std
sbb
xor
dec
jnp
fmul
je
fcmovnb
rorl
test
mov
pop
xchg
xor
or
fidivrs
cmp
pop
jnp
xchg
pop
or
hlt
popa
addr16
in
lea
and
mov
mov
cmp
lea
fucomi
sub
inc
xchg
cmp
scas
or
in
sti
rcrl
adc
jnp
jl
pop
xlat
and
lcall
cmp
scas
jmp
mov
xchg
cld
cmpsb
jecxz
ds
mov
jne
xchg
lret
add
xchg
out
fadds
mov
hlt
jp
jmp
sahf
jge
adc
movsl
jno
lcall
and
add
rsm
mov
cmp
mov
mov
jmp
mov
jle
fwait
mov
xor
ljmp
mov
mov
fdiv
sbb
sbb
jecxz
imul
cmp
in
nop
xchg
pop
pop
jg
bound
adc
cmc
and
pop
out
adc
add
push
inc
pop
or
mov
cmp
insl
pop
push
inc
insb
lahf
out
fsubs
test
jno
ds
pop
mov
icebp
adc
mov
pop
and
jmp
cmp
enter
addr16
sbb
push
and
and
inc
cmp
int3
push
je
es
leave
jns
mov
push
push
stos
ds
test
sahf
and
or
sbb
jl
jle
es
les
test
cmp
mov
cmc
scas
stc
and
pusha
int3
or
mov
xor
pop
hlt
scas
mov
push
aad
pop
pop
jle
cmp
fdivrp
loope
gs
loope
xchg
jp
pop
push
add
aad
repnz
lahf
sub
mov
mov
sbb
mov
roll
ffree
repnz
les
add
rolb
jo
int3
in
xchg
jl
jp
xchg
xchg
stc
inc
shrl
cwtl
test
mov
mov
jo
or
xor
repnz
jl
outsb
jbe
jae
das
push
jp
jp
and
sub
mov
add
pushf
loope
mov
test
xchg
pmulhuw
add
cmp
loopne
int
scas
lods
fstpl
ljmp
lods
ficomps
into
add
sbb
adc
add
and
loop
es
fwait
cwtl
sbb
mov
or
xchg
aaa
mov
mov
rcrb
addl
mov
push
int
jns
cmpsl
xchg
dec
cmpsl
fwait
sub
fsubs
pop
sahf
lods
adc
or
sub
in
pop
add
add
dec
pop
jne
sub
sbb
sub
push
sbb
sub
in
in
rclb
pusha
cli
out
lods
mov
sti
inc
sbb
lds
shrb
mov
xchg
dec
ljmp
imul
mov
leave
test
outsb
lcall
inc
nop
pushf
dec
lret
aam
jecxz
out
dec
mov
add
push
rorl
cmp
dec
insb
push
add
adc
sbb
shll
outsl
repnz
xorb
push
xorb
sti
ljmp
ss
add
les
jmp
inc
mov
jbe
mov
xor
xor
mov
and
loope
into
scas
jo
sbb
mov
orb
sbb
cmc
or
in
test
faddp
adc
or
sub
cmp
jae
movsb
inc
dec
lds
je
test
sbb
lods
repz
push
test
sarb
pop
pusha
sbb
xchg
iret
jmp
fidivs
dec
sahf
mov
push
lret
pop
pop
enter
pop
jle
test
xor
in
xchg
cld
int
xchg
cmp
push
mov
push
sbb
xor
test
jb
scas
push
sbb
jmp
mov
adc
jge
and
pop
decb
out
adc
pushf
or
pop
push
pop
cmpb
pop
sbb
jmp
jbe
test
inc
cwtl
movsl
xchg
push
lret
add
pusha
xchg
jno
popa
lods
gs
or
xor
inc
dec
xor
mov
xchg
inc
orl
icebp
mov
cltd
sbb
cs
sub
lods
test
or
inc
adc
mov
inc
sahf
in
out
fsubs
shlb
xchg
adc
xlat
and
cli
rorb
mov
jge
xor
mov
adcl
or
es
fstl
inc
std
in
leave
mov
dec
or
mov
sbb
and
pop
call
dec
add
shll
cmp
jg
je
addb
mov
int
xor
sbb
inc
aas
hlt
xchg
xorb
js
xchg
xchg
xchg
inc
push
xlat
aam
pop
mov
inc
dec
hlt
fwait
or
sahf
out
movsl
xchg
add
inc
xlat
inc
fs
fwait
push
sbb
sti
dec
mov
pop
xchg
xchg
push
jb
insb
push
scas
testl
idiv
nop
inc
push
nop
pop
fisubl
aam
cmc
shr
mov
mov
rcr
popf
mov
shll
and
cmp
shrl
mov
imul
adc
sbb
xchg
fwait
pop
enter
popa
or
jnp
popf
dec
data16
dec
cmpsl
inc
test
pop
hlt
das
sub
mov
dec
jecxz
push
jle
popf
test
mov
pop
cwtl
mov
cmpsb
iret
mov
or
or
inc
int
fistps
rcrb
cmp
sbb
scas
fwait
xchg
inc
push
push
or
push
jbe
and
imul
in
fwait
cs
mov
lret
test
xchg
fdivs
push
popf
decl
mov
fnstcw
jbe
jmp
fdivrs
or
lods
mov
jecxz
test
or
xchg
pop
xchg
scas
and
jo
or
xchg
addr16
sbb
je
mov
mov
xor
cwtl
out
jno
stos
push
mov
arpl
mov
andl
in
in
loope
scas
mov
dec
add
xchg
lock
mov
mov
sub
push
cltd
lret
jmp
dec
and
xchg
push
sub
dec
stc
push
or
imul
pushf
cmp
and
imul
fiadds
sub
shll
dec
jl
scas
cmc
push
sub
adc
mov
add
int3
and
ss
inc
lcall
inc
push
repnz
imul
rcrb
testl
inc
testb
ljmp
adc
ret
leave
out
scas
cmpsb
clc
popl
out
ja
enter
jbe
out
fnstenv
add
stc
mov
push
sub
push
cmp
out
fadd
je
scas
cmp
sub
cmpsb
push
jge
sbb
subb
inc
scas
test
test
push
sarl
mov
and
mov
inc
or
xchg
inc
mov
jbe
pop
mov
sbb
or
jns
sub
scas
and
mov
inc
cmpsb
pop
fadds
es
xchg
shlb
ja
dec
sub
fsts
imul
add
dec
les
or
fisubs
out
dec
scas
and
sub
fwait
sarl
pop
jns
ret
movsl
jns
sti
popa
inc
pop
push
ret
lock
hlt
fistps
repz
or
xchg
dec
test
xchg
jae
sub
test
sbb
lods
jbe
hlt
outsl
jno
dec
cmp
inc
inc
repnz
rol
jae
push
movsl
push
popf
hlt
jnp
cmp
lahf
icebp
mov
popa
lds
int
jecxz
ret
fmuls
jnp
add
and
pop
sbb
mov
nop
ja
test
sub
xor
test
jae
push
ficoms
xchg
mov
arpl
repnz
mov
sub
jle
enter
addr16
movl
shll
cmp
mov
dec
out
or
adc
sbb
test
in
out
ja
sub
xchg
mov
lcall
movsb
and
cmp
jae
or
jbe
sub
mov
dec
addr16
hlt
nop
xchg
popf
dec
stos
pop
pop
arpl
inc
cwtl
loope
and
lea
jmp
or
dec
mov
inc
or
loop
int3
outsl
sub
cwtl
push
xchg
mov
clc
out
inc
movsb
insl
dec
add
and
sbb
addb
and
xor
lea
nop
inc
mov
dec
add
pop
repnz
cmc
inc
push
out
test
popf
inc
jbe
push
insb
enter
test
sbb
loopne
mov
int
xor
fdivr
inc
loope
ljmp
aam
out
cli
inc
shll
jns
imul
insl
cmp
fidivrs
cs
ss
leave
add
or
dec
and
add
aam
aaa
pushf
ja
out
xchg
pop
and
xlat
loopne
rorl
mov
xchg
and
cld
jmp
test
mov
cmp
push
pop
jg
shll
lods
xchg
fildl
js
test
aad
pop
adc
dec
gs
inc
data16
aaa
imul
inc
inc
cmp
imul
inc
mov
inc
jl
in
push
push
sbb
cltd
shrb
stc
imul
sahf
mov
mov
jg
xchg
aam
xor
idiv
mov
movsb
adc
popa
jns
jbe
insl
outsl
push
push
aam
les
dec
pop
jmp
faddl
cmpsb
mov
or
xchg
nop
aas
idivb
daa
aad
lahf
outsb
stos
push
and
pop
cmpl
push
mov
push
lret
or
into
movsb
gs
ret
arpl
and
lret
in
es
mov
or
aas
aas
frstor
negl
mov
jmp
mov
jb
test
adc
xchg
aam
test
dec
and
xor
cli
jnp
fisttps
add
pop
popf
lfs
xchg
adc
sub
sar
xor
enter
cmp
sub
xor
lds
jo
dec
cmp
push
dec
pop
inc
lcall
mov
jo
or
ja
shr
ja
sbb
data16
aam
mov
ss
aaa
add
imul
push
mov
mov
jmp
orl
aad
push
adc
adc
cmp
adc
insb
cs
push
test
push
leave
in
mov
ret
subb
ja
cs
mov
push
cmpsb
int3
clc
scas
sub
adc
in
cld
les
inc
loope
inc
fs
out
fwait
jns
stos
int3
notb
cmp
ss
jl
scas
movsl
push
push
in
sub
jns
lret
imul
push
out
test
jbe
leave
mov
lods
ss
out
in
dec
or
stos
jl
mov
mov
movsl
sub
int3
push
or
sub
movsb
lret
mov
outsb
js
in
adc
and
jo
push
sbb
push
or
cs
movsl
arpl
movsl
jns
cmp
xchg
mov
aas
es
xchg
push
mov
dec
mov
nop
rcrl
xchg
push
xor
xlat
xor
lods
cld
xchg
lods
cmp
mov
sub
cltd
mov
sahf
fs
xorl
dec
dec
call
stos
movsb
into
xchg
cld
sbb
sbb
lcall
and
fildl
dec
jns
xor
or
dec
adc
jmp
fwait
jmp
sub
out
rcr
pop
test
mov
in
adc
jle
mov
lds
lcall
std
push
loopne
cltd
stos
mov
add
sahf
pop
push
imul
addr16
lds
test
adc
out
gs
ret
add
add
mov
adc
add
in
pop
enter
push
popf
jo
fstps
jo
lods
cmp
and
xchg
lds
pop
rorl
in
inc
daa
inc
push
out
aad
fistpll
fld
fisttps
repnz
inc
sarb
push
scas
in
lret
jl
jl
addl
pop
nop
test
loope
call
ret
mov
enter
sub
int3
movsb
jge
push
test
data16
jne
pop
test
out
and
adc
in
cwtl
dec
shrl
loope
push
xchg
mov
stos
movsl
inc
xlat
mov
jge
loopne
out
ficoml
jl
jg
mov
add
sbb
sub
sahf
jp
inc
jbe
andb
out
rolb
hlt
stos
dec
mov
push
push
xchg
dec
jb
daa
dec
mov
jae
ja
in
int
dec
cmpl
test
push
push
mov
loope
repnz
ss
push
in
cmp
mov
movsb
leave
dec
ljmp
in
sbb
jecxz
adc
cld
jno
dec
lock
xchg
lock
push
push
fmull
les
sub
test
test
cmp
ljmp
lcall
mov
push
pop
mov
out
loopne
es
std
ficomps
hlt
movb
jbe
push
jmp
hlt
xor
int
sbb
fwait
test
cmp
sbb
test
pop
ja
incb
je
stc
and
inc
xchg
or
enter
adc
mov
mov
mov
xchg
dec
cmp
push
popa
mov
movsb
test
dec
movsl
sub
add
idivl
xor
jmp
mov
sahf
mov
repnz
or
lea
insb
aas
lods
dec
cmp
idivb
sub
sub
ret
inc
jg
iret
pop
mov
cs
loopne
add
mov
jl
cmp
imul
lret
pop
shll
aaa
adc
cmpsl
icebp
ja
add
or
lea
mov
sar
sbbl
ds
cltd
ljmp
or
add
jmp
cmp
or
cld
and
movb
xchg
cmp
idivb
pusha
xor
gs
xor
outsb
xor
lds
dec
push
dec
out
int
addr16
test
movsl
sarl
mov
movb
or
xchg
mov
add
mov
sbb
cmp
lds
js
test
mov
aaa
cmc
mov
cli
mov
dec
aad
push
mov
add
rolb
stos
inc
jmp
jno
adc
push
hlt
negl
into
aam
pop
mov
les
and
pop
add
jnp
mov
fwait
shrl
fildl
or
inc
sub
and
pop
add
jnp
mov
fwait
shrl
fildl
or
and
push
cmp
imul
loope
icebp
fwait
xor
mov
sti
jne
sub
cmp
dec
and
imul
imul
and
adc
add
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
sub
sbb
sub
cmp
dec
adc
jl
xor
mov
sub
sbb
sub
cmp
dec
jp
dec
insb
pop
sbb
lods
xchg
mov
lret
cld
xor
sbb
sub
cmp
dec
bound
pop
jl
mov
shr
mov
mov
push
insb
or
pop
cmp
jp
mov
jns
cmovno
test
test
stos
or
or
inc
cmpsb
mov
pop
jp
iret
in
imulb
pushf
xchg
arpl
fs
lret
lods
aad
fdivr
pop
sti
test
mov
mov
mov
pop
inc
ljmp
xor
subl
push
dec
jnp
mov
pop
pushf
and
arpl
fdivr
cmp
cltd
jp
mov
xchg
cli
xor
cmp
jl
mov
mov
xor
push
fimull
dec
xchg
in
xchg
add
mov
mov
cwtl
neg
lret
add
or
sbb
sub
cmp
dec
push
dec
insb
inc
jl
mov
mov
shr
fidivrl
outsl
insl
outsb
jge
or
pop
or
stos
cld
test
dec
ljmp
cltd
inc
pusha
pop
jo
fs
push
sbb
or
jmp
fucomi
ljmp
test
dec
push
dec
dec
jb
and
pop
dec
insb
pop
jl
mov
mov
lret
cld
sub
sbb
sub
cmp
dec
jp
dec
insb
pop
jl
mov
mov
lret
cld
sub
sti
push
mov
test
sub
sti
inc
test
lods
test
mov
cmp
cli
or
xor
mov
xor
incb
das
push
lret
pop
cltd
fsub
or
out
sarb
aad
insl
xchg
mov
aam
jp
or
test
xchg
in
add
mov
lods
sub
push
into
and
dec
adc
add
pop
inc
cmp
jecxz
int
or
dec
cmp
paddw
sbb
gs
movsl
addr16
and
repnz
insl
test
pushf
adc
loopne
enter
lcall
ljmp
mov
push
stc
les
js
add
lods
lock
scas
xchg
dec
push
or
dec
fistpll
jmp
stos
imull
dec
outsl
add
jecxz
inc
xchg
and
dec
mov
aaa
std
pop
cmpb
or
jl
inc
test
sti
jmp
lea
divl
mov
cmp
xor
and
dec
loop
scas
hlt
pop
mov
je
int3
cmp
mov
dec
push
add
andl
jmp
fisubl
push
ficoms
test
das
inc
and
or
les
cmp
clc
jnp
or
lds
ljmp
addr16
daa
idivl
mov
shrb
pop
inc
push
xor
gs
lcall
push
inc
and
dec
xor
lea
test
xchg
pushf
inc
mov
js
test
jecxz
push
cs
xlat
push
cmc
outsl
jno
into
jp
push
push
dec
outsb
cld
fcmovnb
popa
pushf
pop
sub
out
testl
fmul
repnz
pop
js
xor
push
out
cld
mov
in
aas
sub
stc
scas
lods
xchg
mov
adcl
pop
insb
inc
push
movsl
lea
xlat
sbbl
std
push
fists
imull
push
push
pop
xchg
nop
mov
imul
dec
sbb
dec
pop
ja
jle
idiv
push
testl
sub
pop
mov
lea
dec
pop
mov
enter
imul
loop
and
cli
scas
rolb
cli
lock
jne
push
insl
mov
or
pusha
fidivs
ja
push
fnstsw
cmp
fildll
int
add
lods
add
leave
notb
xor
lock
push
shlb
push
sub
push
adc
pop
stos
xor
addr16
fs
shrb
sahf
pop
imul
jmp
and
xchg
jge
repnz
cltd
or
lahf
cwtl
push
pushf
inc
into
push
push
int
or
addr16
out
addr16
ljmp
scas
mov
cmp
subl
pop
mov
xor
int
add
aam
adc
or
push
rcl
in
mov
inc
cmp
sarb
cld
leave
inc
xchg
in
mov
insb
xor
leave
lock
in
insb
popf
sbb
adc
fsubl
insb
mov
sbb
xlat
ljmp
pop
pop
inc
xlat
pop
stos
push
pop
sbb
stc
ret
in
push
pop
jbe
xchg
jo
enter
dec
insb
cmpsb
and
push
cmp
call
dec
jno
push
jp
or
ja
stos
sub
popf
scas
add
jp
lret
dec
lea
fcoms
outsb
fs
ret
xchg
push
clc
bound
lret
lcall
ds
and
out
in
and
add
jp
fwait
xchg
roll
stos
clc
out
test
popa
fisttps
add
dec
cmpsl
xchg
jbe
push
dec
push
fs
jp
rcr
sub
sahf
jmp
pop
jns
xor
jle
pop
mov
push
jb
mov
sub
mov
push
int
inc
xor
add
sarb
cwtl
js
dec
or
and
jnp
and
nop
inc
or
stos
stos
sbb
mov
pop
in
ss
hlt
push
ljmp
sbb
xor
pop
loopne
and
pop
mov
add
xchg
sbb
scas
jmp
out
ret
or
mov
dec
or
shll
jne
fnstenv
jecxz
lea
xor
mov
cs
adc
cmp
stos
jl
sbb
ret
out
ficomps
cli
into
dec
outsl
dec
push
jmp
cmpsl
jb
iret
out
mov
call
lret
mov
jecxz
inc
fwait
mov
fwait
mov
xchg
testl
pop
dec
mov
xchg
jecxz
add
mov
mov
insl
xchg
loop
xor
outsl
jl
mov
add
push
cmp
jns
cmp
pop
dec
dec
popa
xor
mov
inc
add
mov
mov
adc
or
imul
sub
lahf
roll
outsl
add
push
push
mov
or
ja
xor
aam
mov
pop
push
or
mov
and
push
mov
int3
addr16
inc
inc
in
mov
outsl
or
icebp
cld
push
inc
aaa
mov
mov
scas
adc
xor
mov
subb
sbb
mov
das
repnz
popf
mov
push
das
adc
sbb
cs
xor
fisttps
xorb
jne
adc
lcall
jb
or
sarl
lahf
and
jo
pop
xchg
push
test
cmp
pop
jp
sti
arpl
jb
lea
movsl
xor
and
les
fdivl
repz
and
addr16
ljmp
test
pop
nop
adc
push
pop
pushl
test
loope
iret
jbe
xchg
xchg
xorb
add
ss
mov
mov
sarl
push
test
cmpb
fsubrs
sbb
adc
mov
mov
lret
and
pusha
pop
int
adc
icebp
push
scas
cmp
xor
insb
cmp
inc
faddl
loope
adc
sti
inc
sub
lret
es
mov
outsb
mov
inc
dec
divb
xor
imul
sub
cmp
cmp
jecxz
dec
addl
lcall
lods
in
insb
mov
push
lea
outsl
in
outsl
call
shrl
adc
mov
jo
push
mov
or
or
rcr
jmp
inc
outsb
mov
or
or
sub
ret
lcall
pushf
fxch
or
mov
push
lea
iret
push
call
adc
daa
pop
fdivp
inc
pop
sub
dec
lret
mov
push
sbb
adc
inc
add
jecxz
jmp
inc
adc
ja
lods
mov
call
jo
int
push
xchg
aam
bound
out
cmp
insl
xor
inc
or
adc
leave
subb
dec
cmp
data16
les
mov
fistps
pop
aas
ja
dec
loope
bound
mov
pop
loopne
dec
mov
lret
jle
add
xlat
inc
adc
aas
push
rclb
sub
mov
mov
xor
sub
jle
add
div
movsl
aas
or
je
mov
jne
add
push
fmull
fwait
fwait
xchg
pop
js
fistpl
jmp
jb
sbb
je
xchg
xchg
xchg
repnz
xchg
cmp
ffreep
lods
or
sbb
mov
inc
test
pop
push
mov
sbb
mov
test
movsl
or
jae
xchg
or
dec
pop
push
pop
jmp
dec
pop
in
pop
ss
cmp
enter
test
movsl
push
mov
xlat
push
cwtl
sub
mov
jnp
and
popf
int
rcrl
push
insl
shrb
or
stos
pop
mov
sahf
loopne
or
inc
int
cli
loopne
repz
pop
cmp
adcl
stos
add
in
ror
outsb
dec
adc
pop
mov
arpl
jbe
add
in
and
ret
fs
aam
loopne
push
es
pop
mov
gs
cli
xchg
jbe
sbb
add
and
push
les
bsr
mov
xor
cwtl
mov
loope
push
out
sub
or
push
stc
imul
mov
js
addb
mov
mov
loopne
mov
dec
mov
sbb
sti
lods
add
mov
fcom
add
mov
addr16
mov
pop
lock
sti
mov
dec
pop
jbe
xor
xchg
sbb
mov
sub
push
loop
nop
jle
mov
fdivl
mov
jecxz
stos
and
movsb
mov
push
pop
insl
out
add
xor
mov
and
xchg
icebp
mov
es
pop
xor
nop
push
fisubl
mov
push
mov
inc
xor
mov
loopne
adc
inc
arpl
mov
dec
int
std
dec
push
pop
fstps
jp
stos
mov
int3
in
arpl
aas
iret
jle
fs
jns
fwait
sbb
jp
push
inc
adc
and
dec
shrd
rol
mov
fnsave
push
xor
or
ds
pop
push
or
ds
or
jnp
movl
xor
jns
jo
stc
xor
shrb
push
mov
push
or
xor
sub
add
and
mov
cs
push
or
daa
xor
lret
xchg
stos
dec
movsl
mov
dec
cmp
jbe
loopne
xor
movsl
cli
push
dec
push
xchg
fimuls
aam
dec
int
pop
sbb
push
xor
imull
inc
mov
into
cmp
inc
pop
adc
dec
or
ljmp
pushf
xchg
pop
xchg
movsb
cmpsb
push
ficoml
cmpsb
pop
addb
jl
sbb
movsl
call
push
sbb
xlat
adc
cmc
xor
ss
xor
aas
sub
xor
repz
mov
enter
in
lcall
arpl
xor
xor
push
insb
insb
flds
cmp
pop
fidivrl
add
sbb
cmp
jo
mov
lahf
in
out
leave
push
mov
xor
and
hlt
adc
dec
cs
addr16
test
sbb
test
lcall
decb
jb
jnp
jmp
fidivrs
addb
flds
icebp
sbb
out
and
aam
lods
add
cmpb
lock
sub
ss
adc
mov
popa
push
jno
iret
or
cmp
cmp
adc
decb
and
out
sbb
dec
popf
mov
mov
jno
adcl
rcl
mov
divl
loope
ficompl
cli
ss
push
mov
mov
xor
jmp
int3
cld
fstpt
popa
gs
outsb
pop
xlat
push
fdivl
cmpsl
mov
into
or
fdivs
fidivs
insb
sub
in
scas
dec
sub
pop
aaa
mov
adc
sub
add
and
movb
les
mov
leave
scas
dec
cmpsb
mov
out
lds
inc
cwtl
xchg
push
adc
push
add
dec
sbb
fnstcw
inc
nop
cmp
dec
mov
and
jge
std
mov
fcomps
roll
pushf
pop
iret
pop
push
fnstenv
and
insl
fisttpl
xor
mov
push
jmp
jecxz
or
push
std
mov
mov
or
jecxz
mov
fidivrs
out
mov
ficomps
or
addl
rcll
into
and
hlt
jnp
cmpsl
aas
sbb
mov
movsb
cmp
mov
cmp
mov
test
add
mov
add
push
test
push
jns
cmp
fs
jne
ljmp
int
add
mov
addr16
pop
pop
int3
repnz
mov
add
sub
shlb
out
or
ds
xor
push
push
leave
jno
pop
pop
dec
fwait
jae
aam
sub
inc
dec
adc
movsl
and
and
icebp
xchg
adc
mov
xor
push
fcoms
mov
adc
add
pop
mov
adc
push
insl
loope
push
fwait
jg
mov
popf
adc
sbb
ja
sub
pop
in
adc
mov
bnd
sbb
out
cltd
cmp
imul
data16
lret
das
mov
cmpsb
push
mov
push
sbb
or
lahf
fdivrs
jmp
xlat
pop
cmpsl
subl
mov
arpl
insb
out
insb
es
stos
ss
push
xor
and
dec
mov
jae
adc
jne
lods
jecxz
dec
lea
in
adc
sbb
jp
lret
shr
xor
mov
xor
jl
xchg
mov
test
pop
inc
sahf
sti
push
jmp
mov
in
xlat
add
cmp
cld
lahf
inc
sbb
out
sub
push
test
cwtl
and
sahf
rcrb
add
mov
loope
add
cli
cltd
mov
ret
xor
andl
inc
test
sbb
fistps
test
hlt
sub
cltd
fs
sub
in
icebp
aaa
es
cwtd
sbb
sar
loop
jl
mov
inc
jbe
mov
test
mov
add
je
push
aaa
inc
jge
xchg
mov
leave
mov
and
negb
push
cmp
enter
mov
push
adc
cmc
fistpll
cmp
lcall
ret
push
adc
xor
sub
mov
push
xor
jb
cmp
push
sbb
mov
inc
add
sub
push
ret
out
je
bound
xor
push
xlat
fsubr
jne
imul
ret
cmc
outsb
inc
sub
xchg
inc
inc
cmp
or
daa
adc
push
insl
pop
sbb
sub
mov
mov
lods
cltd
enter
inc
frstor
pushf
cmp
bound
jbe
lods
stc
mov
das
mov
mov
insl
out
test
ss
push
test
mov
notl
mov
out
add
adc
dec
or
or
aas
outsb
and
stos
mov
mov
mov
push
jmp
fdivl
xor
sub
sahf
fisttpl
out
and
xor
int3
repnz
ror
push
pop
lods
mov
jo
lcall
and
add
lahf
sbb
data16
jns
jne
shrl
or
cmp
pop
insb
lcall
inc
lcall
pop
cmp
mov
mov
lcall
and
insb
int3
mov
int3
pop
hlt
or
mov
loopne
dec
negb
xor
cwtl
adc
movsl
pop
negl
push
nop
or
hlt
mov
in
outsw
dec
xchg
test
push
js
les
sub
andb
xchg
cmpl
inc
dec
ja
test
scas
push
xchg
jo
int
movl
adc
pushl
dec
cmpsl
push
scas
fnstenv
popf
add
adc
push
jecxz
rolb
inc
sub
repnz
jb
push
out
cwtl
imul
sti
xor
jle
sbb
push
clc
and
loope
in
cmpsb
jecxz
out
inc
jo
mov
fsubrl
shll
ss
aaa
rol
leave
push
das
in
in
jp
cmpsb
pop
gs
stos
mov
sbb
add
ret
jmp
out
loope,pn
ljmp
icebp
stc
mov
xor
inc
push
scas
sbb
cmpsl
scas
sti
pusha
or
push
add
fcomp
pop
mov
pop
std
les
ds
imul
addr16
fs
mov
roll
xchg
repz
daa
and
push
jecxz
add
in
mov
mov
addr16
test
sbb
or
in
ljmp
jb
xor
push
sub
mov
cwtl
aam
mov
adc
lret
mov
or
jge
fs
imulb
sbb
pusha
mov
cmp
loopne
aam
rclb
mov
xchg
jo
fdivs
test
in
mov
dec
add
sub
mov
psubw
mov
js
mov
fsub
push
iret
cmpsb
sbb
mov
sub
dec
cmp
mov
lcall
and
jmp
inc
mov
xchg
out
lahf
es
mov
mov
sbb
xor
inc
std
mov
sbb
out
popa
sbb
scas
mov
push
push
mov
xchg
nop
or
stos
lcall
mov
mov
arpl
out
popf
or
or
mov
insb
clc
adc
pop
test
ja
cmp
std
insl
leave
push
pop
ror
push
imul
int3
mov
mov
into
rcll
xchg
dec
or
sbb
push
jae
cld
nop
mov
jno
aam
sub
inc
xor
stc
fildl
cwtl
ljmp
jns
fwait
outsb
mov
ja
push
mov
icebp
pop
or
repz
jecxz
cld
pop
dec
arpl
and
mov
dec
xchg
hlt
ljmp
cmp
mov
xchg
orl
sub
xchg
fnstenv
outsl
dec
imul
mov
rcrl
mov
pop
insb
push
cmp
dec
in
test
shrl
call
xor
push
fs
mov
out
jmp
insl
jns
mov
sbb
xchg
cmp
scas
sub
adc
and
mov
test
mov
cli
xchg
mov
add
test
dec
jno
pusha
les
push
dec
add
mov
inc
insb
shrl
mov
je
xchg
or
xchg
popa
fs
aad
or
adc
leave
push
cmc
cmp
add
es
shrb
je
sbb
test
lcall
stos
push
sbb
movsb
cmp
jecxz
icebp
mov
mov
dec
add
cli
fscale
push
mov
shll
and
js
pop
jle
sti
xchg
mov
pushf
push
jge
fldenv
ds
sub
loop
mov
ljmp
sbb
clc
test
and
jmp
cltd
lretw
js
js
add
mov
in
inc
notb
add
fstl
cmpb
sar
push
sbb
cmc
addr16
rcrb
lahf
mov
jbe
repz
hlt
cld
inc
cli
movsl
pop
xor
jge
push
push
xchg
cmp
push
jg
mov
lods
cmp
loop
cltd
mov
test
xchg
nop
jmp
out
aas
popa
scas
adc
outsb
cmovb
dec
cmp
sbb
add
lret
jp
or
into
loope
scas
mov
dec
mov
dec
sbb
loop
mov
das
and
inc
out
xchg
xor
add
ljmp
pop
push
mov
jno
in
or
mov
addb
cmp
xchg
hlt
cs
out
adc
aam
fiadds
push
mov
cwtl
ret
push
cs
aad
dec
jecxz
inc
pop
scas
adc
ljmp
cmc
pop
jg
cs
sahf
mov
inc
pop
pusha
sbb
lahf
and
dec
aaa
xchg
cmp
shrb
jmp
data16
pop
test
mov
hlt
and
shlb
imul
mov
pop
inc
addr16
adc
adc
sbb
pop
lcall
adc
mov
call
movsb
xor
mov
js
rolb
or
neg
or
mov
inc
xchg
int3
xor
push
dec
pop
pop
cmpb
push
inc
ficomps
popa
pop
and
mov
enter
ret
inc
in
jne
mov
xor
shlb
pop
mov
mov
xchg
insl
mov
mov
mov
xchg
int3
es
pop
mov
adc
push
sarl
adc
shl
sbb
mov
dec
and
push
inc
cli
xchg
xchg
add
mov
jmp
cwtl
cmp
repnz
push
mov
mul
push
dec
imul
out
inc
cwtl
jge
or
pop
adc
call
inc
push
or
jns
xorl
aad
rol
enter
lds
push
iret
stos
call
test
es
mov
inc
cli
lods
push
sbb
pop
adc
leave
pop
jb
mov
dec
inc
pop
mov
pop
test
mov
iret
dec
addl
adc
sti
out
loopne
mov
adc
cmp
sbb
mov
and
clc
cmpsb
fsubrl
mov
dec
int
pop
inc
mov
sub
push
inc
mov
andl
imul
pop
pop
call
push
icebp
loop
lahf
rorl
dec
sbb
call
inc
lcall
inc
enter
dec
xchg
jae
mov
cmp
inc
cli
rolb
lods
xor
cltd
sbb
mov
push
add
cmp
dec
jp
dec
insb
pop
jl
mov
mov
lret
cld
sub
sbb
sub
cmp
dec
jp
dec
insb
pop
jl
mov
mov
lret
cld
sub
sbb
sub
cmp
dec
jp
dec
insb
pop
jl
mov
mov
lret
cld
sub
sbb
sub
cmp
dec
jp
lret
mov
and
and
jge
insl
ficompl
dec
movsl
push
flds
cmp
push
pop
cmp
or
ljmp
sub
jo
push
fisttpll
lods
sbb
or
ret
dec
mov
sbb
popa
in
ss
addr16
arpl
xchg
xor
test
arpl
dec
dec
jp
adc
addr16
fidivrl
fidivl
push
inc
dec
mov
xchg
adc
enter
int
fdivl
ljmp
mov
cld
mov
loope
add
xor
mov
int
sub
out
cmp
mov
repnz
add
mov
add
popf
adc
mov
cmp
cmp
add
or
xchg
add
jmp
xchg
xchg
cmp
pop
dec
and
test
dec
int3
cli
test
push
mov
mov
jge
insl
ficompl
dec
stos
cmp
xchg
or
inc
fstl
and
adc
mov
insl
mov
push
sub
push
cwtl
push
sub
dec
fidivrs
outsl
int3
cli
jge
outsl
mov
jne
dec
imulb
or
pop
mov
pop
push
or
xchg
xor
ds
cmp
mov
pop
fisttpll
cmp
or
ficompl
dec
mov
sbb
push
pop
fisttpll
cmp
or
sub
or
xchg
xchg
xchg
stos
inc
cmp
popf
jo
fwait
sarb
cmpsb
shlb
movsb
out
push
mov
ret
sbbl
aas
jb
xchg
pop
jnp
jge
xchg
jne
mov
push
jle
add
add
add
pop
xor
add
push
mov
add
shrl
xor
mov
pop
xor
subl
shl
lret
fcoml
enter
xchg
and
fidivs
jp
inc
pop
mov
mov
popf
inc
dec
jmp
pinsrw
pop
stos
sbb
pop
pop
add
outsb
leave
addr16
and
push
push
psubb
rcrb
fmulp
jle
pop
scas
shrl
cwtl
and
and
push
adc
mov
inc
pop
sub
sub
mov
pop
in
movsl
mov
and
imul
inc
lcall
lock
cmp
push
lret
sbb
mov
ror
fsubr
cmp
inc
ljmp
mull
insl
push
or
les
repz
push
mov
outsl
dec
out
ljmp
loop
insw
mov
leave
jg
xchg
fdivs
jg
ret
and
jns
cmc
dec
mov
pop
mov
sahf
sarb
adc
fcmovb
ret
jp
rcll
cs
pop
int
fs
and
xor
mov
xchg
mov
xchg
adc
dec
hlt
ret
xor
jmp
dec
xchg
push
jmp
ss
dec
xor
push
stc
xor
fst
cmpsl
and
popa
mov
mov
pop
jecxz
jne
stos
sub
fiadds
lret
test
jno
fisubrs
dec
cs
jne
sbb
out
sub
pop
and
fs
mov
jp
dec
inc
sub
mov
test
jp
mov
pop
jbe
sub
das
hlt
and
jne
lea
clc
subb
test
int
fnstenv
adc
cmp
cmp
js
in
dec
jae
dec
outsl
cmp
cwtl
test
loope
adc
inc
repnz
sub
mov
sub
int3
rclb
push
sbbl
mov
or
add
push
daa
push
enter
or
xchg
ret
cmpsb
mov
fnstsw
int3
adc
mov
cli
test
aad
xchg
push
mov
in
gs
mov
cmp
and
pop
lcall
cmpsb
dec
stc
roll
jns
sub
aam
and
push
enter
mov
lret
loope
fld
jo
pop
mov
and
pop
sbb
cld
movsl
outsb
mov
push
pop
jge
dec
pop
lods
cmp
ret
inc
outsl
shlb
rol
sub
dec
push
jns
imul
loop
pop
dec
or
pop
sub
lock
lds
aam
imul
xchg
lret
ds
imul
xchg
aaa
repnz
test
lahf
mov
push
sbb
mov
pop
cmp
sbb
cmc
in
push
pop
imul
add
add
rclb
push
clc
and
xor
push
mov
push
int
sub
add
jae
lea
fcmovne
jl
je
inc
test
pop
daa
pop
jb
xor
fs
jns
in
jg
enter
lcall
sti
ret
and
ret
and
push
aad
push
lods
mov
xchg
or
in
cmp
loope
mov
jle
add
pop
push
out
and
popf
mov
cwtl
jle
rcll
pop
push
adc
and
sub
sbb
ret
sarl
pop
mov
shl
mov
add
mov
sub
mov
jmp
and
sbb
fisubs
mov
sahf
mov
jo
sub
sbb
pop
and
mov
mov
jne
jge
mov
xor
aaa
or
movsb
out
das
out
or
out
mov
outsl
adc
popa
scas
movsl
mov
fidivrl
ret
jge
or
mov
pop
dec
push
ret
inc
lcall
and
das
add
scas
out
mov
jle
std
clc
pop
inc
out
fiadds
pop
fists
push
out
loopne
in
and
cmp
jmp
scas
je
jg
push
push
add
push
popf
mov
mov
add
loope
test
cmpsb
inc
out
push
mov
sub
ljmp
add
sub
adc
push
stos
dec
jns
push
mov
movsb
fcoml
leave
dec
sarb
sub
push
mov
push
or
push
jnp
push
xlat
mov
or
arpl
xorl
xlat
iret
scas
loop
out
jecxz
jbe
gs
xchg
push
push
rdmsr
out
and
or
cli
sub
add
xor
pop
cmp
add
pop
push
ficomps
movsl
adc
jg
int
leave
jns
and
pop
ljmp
mov
add
xchg
dec
mov
or
push
aam
dec
sbb
add
dec
cmp
test
sbb
push
mov
shll
lret
jle
inc
in
pushf
gs
sbb
mov
xlat
mov
sub
data16
sarl
and
pop
pushf
or
insb
mul
scas
dec
inc
mov
orl
sahf
xor
mov
add
add
cwtl
shll
test
fcoml
imul
int3
or
dec
popa
testb
sbb
out
mov
scas
push
pop
pop
in
mov
scas
xor
roll
pop
lock
in
int3
xchg
or
add
push
rorl
fildl
xchg
dec
mov
jno
enter
dec
adc
xchg
mov
pop
icebp
inc
cmc
arpl
leave
dec
popa
push
cmp
inc
bound
das
dec
mov
out
insl
or
sub
call
and
rclb
xor
and
mov
and
mov
scas
dec
or
sub
dec
mov
fistpll
dec
lods
lods
in
cmc
sti
lret
or
iret
sub
mov
hlt
mov
scas
stos
mov
mov
scas
xor
mov
add
cwtl
jp
cmp
repnz
jb
sahf
xlat
or
hlt
sub
sbb
icebp
jecxz
cmpb
aaa
ret
rorl
aam
sahf
js
push
adc
add
xchg
dec
popa
iret
hlt
mov
sbb
cmpsb
pusha
xor
mov
movsl
xor
lahf
aaa
pop
adc
sub
push
sbb
push
or
setne
jecxz
cmp
pusha
jb
jno
inc
mov
fidivrs
int
cmp
sub
xchg
js
push
add
sub
inc
out
and
cmp
push
dec
jmp
jo
add
push
mov
push
push
cmp
or
jl
lds
repnz
lea
mov
pop
pop
sahf
incl
daa
xchg
stos
adc
fcom
fcomps
adc
ret
popf
jno
and
inc
xor
xchg
adc
add
leave
pop
stos
mov
jle
cli
xor
ret
adc
ficoms
dec
jmp
outsl
add
rcrl
dec
inc
aam
mov
setb
call
mov
mov
mov
mov
sbb
div
ret
jbe
aad
orb
push
xchg
jmp
pop
insb
js
lsl
jno
xor
xchg
xor
inc
xor
cmpsb
outsl
loope
add
mov
fidivl
dec
dec
pop
xchg
push
movsb
jae
dec
jg
jns
dec
mov
push
mov
into
pop
push
or
jecxz
adc
push
sub
dec
dec
mov
jo
fistpl
rcrl
push
push
lock
xchg
adc
sub
pop
gs
pusha
daa
js
sbb
pop
cmpsl
sbb
mov
nop
imul
sar
jecxz
pop
cmp
incl
xor
add
dec
in
and
inc
jb
push
test
lea
cmp
xchg
fwait
shlb
bound
fxsave
clc
mov
and
mov
inc
les
sub
cwtl
pushf
pop
in
inc
sbbl
pop
dec
in
rcrl
mov
loopne
fdivl
pop
xor
rol
lods
xchg
jmp
and
mov
add
xor
inc
stos
test
cmpsb
cmpsb
xlat
pop
call
out
xchg
das
mov
mov
fimull
out
out
mov
add
sub
jl
dec
outsl
scas
call
jge
xor
fdivl
out
fsubl
das
fwait
xchg
arpl
jno
dec
vpmulhw
and
xchg
sub
sub
jbe
pop
movsb
mov
xor
shll
out
push
push
xchg
shrl
out
clc
addb
call
inc
and
push
data16
sbb
testl
cmp
call
xchg
loop
pop
mov
cwtl
cmp
jns
fstpt
sub
int3
ret
in
xchg
decl
scas
push
xor
add
insl
ror
push
dec
out
orb
std
sbb
mov
jnp
sarb
js
fwait
xchg
cmpsb
push
repz
mov
repz
dec
sti
jg
jb
jns
mov
push
std
and
adc
jecxz
loopne
int3
xor
data16
das
jecxz
lret
movsl
pushf
mov
jg
mov
push
insb
int3
fxch
lret
mov
dec
mov
pop
stos
leave
movsb
cltd
data16
and
scas
inc
movsb
mov
sbbb
fsts
pop
inc
adc
ss
push
mov
pop
sbb
ja
ret
push
sub
sub
jb
shrb
pushf
mov
sub
int
pushf
mov
fcoms
push
js
dec
out
outsl
mov
gs
sub
mov
jne
push
xchg
xor
push
daa
sbb
push
fstps
mov
and
mov
aaa
call
inc
imul
mov
iret
out
stos
cs
loopne
data16
sbb
insl
rorb
cltd
popf
stos
das
mov
out
pop
inc
inc
call
mov
or
mov
fwait
xlat
mov
and
mov
imul
mov
mov
xchg
jl
in
pop
inc
sub
xchg
mov
sub
test
add
popf
mov
aam
lods
mov
and
shll
xor
cmp
push
xchg
xchg
push
mov
loope
gs
cmpl
popa
sahf
add
lret
push
xor
minps
lret
in
jecxz
push
xchg
mov
xor
cmpb
out
addr16
aam
sbb
jae
aam
xor
mov
adc
int
fidivl
lds
xchg
shrl
pop
in
in
nop
adc
lods
notl
lock
enter
das
push
dec
pop
jmp
out
cmp
fildll
ss
fcomps
pop
in
push
bound
es
jo
dec
sub
mov
jg
fwait
xor
or
faddl
mov
sbb
jg
mov
add
push
imul
xchg
rol
cs
notb
into
and
mov
xor
dec
loop
inc
push
int
lahf
pop
or
movb
sub
andl
pop
mov
add
pop
sub
mov
lret
std
movsl
rorb
aaa
arpl
mov
scas
test
inc
das
rcl
aas
sbb
fdivrp
jle
cltd
jbe
jmp
cmc
ljmp
mov
ja
pushl
add
pop
ret
inc
mov
and
push
mov
testb
push
jg
je
mov
in
mov
mov
mov
data16
mov
push
sub
enter
jo
or
fprem1
in
add
push
jb
or
add
push
pop
shll
jg
out
xorb
sbb
mov
addb
cmp
movsl
inc
mov
cmp
pop
out
mov
xor
cmpsb
icebp
jg
mov
imul
fadd
jae
addr16
xchg
shrb
mov
fists
xchg
xchg
push
aam
mov
lods
pop
mov
cmp
fcomip
movsl
jbe
popf
cmp
addr16
jnp
cli
mov
mov
mov
push
mov
divb
in
rclb
pop
inc
lods
in
or
in
xchg
pop
mov
dec
stos
add
pop
add
cs
aad
cmpsb
out
cmpsb
mov
lods
xchg
inc
push
mov
daa
mov
imul
sbb
dec
repnz
mov
sub
add
aaa
or
stos
xchg
adc
lods
inc
test
das
lcall
jmp
popf
xor
fucomip
sub
outsb
sub
out
sub
notl
jns
jl
test
popa
adc
in
lret
fnstcw
neg
into
jne
mov
inc
lahf
jb
sbb
push
aas
mov
in
les
mov
nop
jb
loopne
out
test
add
xor
insb
repnz
shl
enter
mov
fidivs
lea
sbb
imul
jl
mov
xor
pushl
out
mov
int
adc
xor
loop
int
sbb
fbld
aam
aad
xchg
adc
pop
add
outsb
arpl
test
leave
jle
mov
aad
mov
mov
cmc
mov
ja
ret
mov
mov
or
sub
stos
pop
ficoml
cmpsl
inc
sbb
pop
es
ret
daa
xlat
cltd
jbe
stc
arpl
mov
pop
mov
jecxz
gs
outsl
aas
scas
jno
xlat
inc
or
and
adc
push
fisubs
mov
rclb
rclb
mov
outsb
sbb
pop
mov
xlat
icebp
pop
lcall
cmp
push
jecxz
sub
es
cld
cld
jb
push
pop
cwtl
jg
sbb
pop
daa
jmp
data16
shrl
xor
sub
insl
cmp
stos
jno
sarl
dec
pop
fidivrl
aaa
in
pop
inc
js
inc
lahf
loop
das
jmp
aaa
addr16
sbb
mov
or
mov
or
insb
jl
pop
xchg
in
push
xchg
mov
call
lods
push
and
ljmp
sub
ret
mov
mov
pop
jne
movsb
jbe
jo
fninit
pop
fsubr
std
push
and
out
adcl
push
das
cs
lock
movsb
pop
dec
mov
mov
test
loop
loope
jo
sti
das
ss
cs
jno
add
lahf
je
push
std
lds
dec
and
pop
dec
mov
fwait
daa
lret
pop
mov
js
sub
addps
push
push
in
in
inc
leave
or
aam
cmp
mov
nop
cmp
jbe
xchg
hlt
pop
adc
jg
gs
repz
daa
ss
mov
cmp
inc
xchg
add
fimull
sarb
pusha
int3
and
cmpl
cmpsl
inc
inc
pop
xor
leave
inc
cmpsb
adc
sub
adc
push
mov
cltd
outsl
icebp
aad
arpl
pushf
mov
inc
mov
lahf
cmp
inc
push
adc
aad
std
push
pop
dec
das
popa
and
loop
cmp
pushf
arpl
aaa
lcall
xchg
outsb
xchg
cmp
stos
jg
clc
pop
or
sti
mov
pop
ret
jb
mov
and
popf
popa
jl
call
mov
and
loope
xchg
cld
lods
mov
pusha
xchg
jmp
aad
outsb
dec
jb
pop
xchg
cmp
dec
add
scas
push
js
xor
xchg
popa
les
adc
data16
rcrl
stos
inc
push
insb
fcmovu
ds
jb
pop
inc
fprem
lods
lret
cli
test
add
js
add
sub
pop
in
scas
cmp
xor
insl
hlt
insb
cmpsl
mov
mov
std
stos
mov
inc
sub
inc
sbb
mov
add
lea
lock
popa
push
lahf
cmp
cmpsb
mov
lods
inc
and
je
sbb
in
or
in
sbb
test
adc
in
dec
xchg
sub
pop
out
cmpsl
add
clc
ror
rdtsc
cmp
xchg
orb
jp
out
mov
sub
xlat
mov
bound
or
dec
cmpsl
icebp
into
lods
jno
push
add
fistpl
imul
push
adc
add
and
pusha
imul
imul
mov
fmull
dec
int
sub
hlt
push
mov
cmpl
adc
imul
inc
cmpsl
jp
xor
lahf
jae
jo
scas
scas
testl
and
stos
ficoml
aaa
mov
sbb
jb
insb
mov
enter
repnz
mov
scas
pop
cli
test
lds
mov
push
call
sbb
fldcw
mov
adc
mov
ret
call
xlat
int
jno
jle
jg
dec
push
jo
inc
shrb
mov
pop
and
lret
stc
inc
push
outsb
insl
rcrb
ljmp
sar
adc
stos
sar
mov
outsl
imul
adcl
pop
daa
inc
cld
xchg
mov
popa
add
stc
adc
dec
cmp
out
cmp
std
shll
jns
sub
mov
push
push
int3
push
cmp
mov
cmc
scas
popw
fwait
or
fistpll
js
push
push
test
adc
mov
in
push
or
nop
xchg
mov
jecxz
xor
ss
rcrb
sbb
cli
push
shlb
ret
mov
push
pop
xor
stos
cmp
addr16
jns
dec
enter
fldenv
cmp
sub
icebp
andl
xchg
stos
xor
lds
sub
fsubrs
movsl
clc
mov
and
adc
cmpsl
mov
or
sub
test
loopne
fldcw
jb
dec
jle
cmpsb
popf
dec
divl
vphaddudq
jle
je
scas
les
xchg
out
and
xchg
lea
jns
mov
sbb
adc
fstpt
in
cmp
rorb
scas
sbb
sub
aaa
outsl
adc
bound
outsl
iret
add
insb
leave
loopne
mov
dec
inc
sbbl
addr16
cmc
inc
out
out
sbb
bnd
fwait
popf
mov
jns
dec
incl
outsb
dec
inc
dec
fldl
test
das
push
and
aas
jbe
or
xchg
test
xor
cmc
and
clc
pushf
mov
sbb
fwait
pushf
mov
imul
mov
xor
mov
sbb
hlt
push
sub
push
push
shrl
mov
xlat
sbb
xchg
leave
push
ljmp
inc
subl
xor
mov
loopne
or
mov
jno
out
adc
pop
jg
adc
push
xchg
adcb
fcompl
cs
stc
hlt
sbb
cmp
sub
cmp
sub
mov
mov
sub
int
push
xlat
out
pushf
or
push
xchg
pop
mov
rcr
gs
fisubrs
jecxz
pop
xor
loope
in
adc
adc
xchg
iret
xchg
insb
repz
ret
xchg
rcll
xor
clc
insl
jl
int
icebp
push
pushf
pop
xchg
pusha
mov
xor
sbb
std
cmp
ss
pop
mov
jbe
leave
jge
lret
int3
cmp
jl
inc
into
movsl
cmp
adc
ret
stos
mov
mov
jecxz
fnstcw
addr16
dec
stos
mov
test
imul
adc
xchg
mov
xorb
lea
xchg
dec
mov
mov
dec
ret
mov
mov
int
roll
movsb
sbb
lahf
loopne
mov
jecxz
aas
mov
stos
movsl
test
imul
xchg
jnp
outsb
xchg
lcall
push
mov
mov
add
sahf
jbe
pop
scas
sarl
add
mov
mov
dec
repnz
pushf
mov
inc
push
add
gs
xchg
cli
mov
shlb
sbb
lock
and
xchg
outsb
jp
inc
sub
pop
jae
imul
or
mov
fldl
aam
mov
jmp
or
in
push
add
pop
push
push
jae
sbb
test
dec
inc
xchg
mov
inc
push
out
mov
out
jns
xchg
xchg
into
jnp
mov
bts
nop
lret
add
or
xchg
sbb
lock
lods
add
inc
jo
push
add
jge
xchg
out
bound
mov
ljmp
push
ret
xchg
or
mov
aam
mov
mov
xor
inc
add
fs
in
mov
stc
out
mov
dec
loopne
fcmovnu
fcompl
pop
pop
ljmp
hlt
aad
sbb
xor
das
ficomps
pop
cmc
push
xchg
adc
aad
in
int3
test
and
shll
and
pop
jns
jb
mov
sbb
xchg
inc
sti
dec
std
mov
inc
pop
fcoms
bound
mov
fwait
push
dec
mov
sbb
push
pop
fisttpll
cmp
or
ficompl
dec
mov
sbb
push
pop
fisttpll
cmp
or
fcmovu
lret
cmp
mov
pop
fisttpll
cmp
cmp
in
pop
lret
cmp
or
lock
dec
xor
cmc
jb
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
cwtl
cmp
jbe
dec
mov
mov
inc
or
data16
push
dec
adc
es
mov
xchg
sbb
cmpsb
call
jbe
data16
imul
cwtl
push
mov
mov
mov
call
xor
xor
jg
push
push
ss
mov
cwtl
mov
sbb
fiaddl
in
lock
jnp
sar
pop
fwait
cmc
arpl
push
dec
mov
dec
push
out
hlt
out
arpl
push
mov
lods
cmpsw
pop
pop
aad
daa
xchg
mov
jo
and
xchg
fldcw
sbb
sti
clc
rcll
out
fldl
mov
into
imulb
dec
fadds
orb
sbb
mov
push
mov
into
push
addr16
shlb
ret
sar
scas
jmp
inc
sub
dec
pop
cwtl
aaa
jge
addr16
mov
push
dec
int3
and
or
dec
inc
bound
rcrb
jmp
mov
es
xchg
xchg
clc
jl
ss
or
pop
sub
js
push
frstor
cmp
pop
add
pop
adc
imul
push
fwait
cmp
call
jmp
call
add
insl
adc
inc
push
xchg
shll
enter
call
push
cmp
jbe
push
dec
push
js
push
mov
xchg
xchg
clc
cmpsb
call
push
cmp
jbe
push
dec
push
js
push
add
inc
mov
add
test
pusha
xchg
cmc
jecxz
loope
dec
sub
clc
sub
mov
cmc
mov
jbe
popa
aam
sbb
xchg
mov
pop
popf
cld
cmp
or
data16
std
dec
jge
mov
add
das
into
mov
sbb
aaa
pop
or
xchg
jbe
adc
daa
jge
je
cmpsl
adc
xchg
jns
adc
lods
shrb
notb
inc
inc
push
cmp
rcrl
and
cmc
jo
jmp
cmc
push
or
mov
add
push
into
addr16
lcall
xor
pop
or
xchg
jns
sbb
outsb
pop
push
push
pop
fcompl
cmp
pop
stc
sub
mov
int
out
fdivrs
inc
or
jmp
push
and
xor
jo
imul
rcll
in
xchg
mov
and
jnp
out
and
lock
nop
hlt
popa
sbb
xor
js
stc
loop
aam
out
xchg
xor
or
dec
pop
scas
fwait
mov
movsl
adc
enter
pop
dec
imul
inc
cwtl
adc
movb
sub
lahf
or
pusha
icebp
mov
pop
sbb
movsb
sub
mov
push
or
or
lods
xchg
bound
lock
adc
jnp
or
dec
std
jmp
add
push
outsb
sub
dec
or
sbb
sti
add
bound
sahf
sti
mov
jbe
add
sti
movl
pop
jo
lods
lahf
idivb
push
or
cmp
mov
cmp
mov
dec
push
xchg
xchg
xor
arpl
xor
cs
fs
mov
jne
and
jns
adc
inc
or
out
insb
adc
inc
es
in
push
pop
cmp
push
call
inc
shr
xor
scas
pop
scas
repnz
or
loope
je
xchg
sbb
pop
cmp
pop
fcmovu
cli
and
inc
mov
nop
jmp
mov
lcall
nop
mov
add
data16
xor
test
xchg
pushf
pop
cs
xor
fisttpll
pushl
aam
imul
mov
dec
add
out
insb
push
mov
sti
and
stc
jge
sbb
ret
out
loopne
add
push
inc
jne
movsl
clc
fcmove
adc
cmpsb
fnstenv
data16
ficompl
xlat
sub
and
pop
repnz
fisubl
lcall
xorl
ja
mov
mov
lds
push
mov
repnz
cmp
mov
out
sub
jle
push
inc
in
mov
jge
jecxz
sub
les
fsts
das
or
subb
shrb
mov
cmp
call
test
pop
pop
pop
das
jge
xchg
out
test
xor
call
xchg
xor
inc
je
popa
cld
xchg
fbld
and
std
stc
cmp
pusha
pop
and
push
loope
out
pop
leave
stc
test
sub
je
adc
in
je
mov
cs
mov
sub
adc
jo
inc
jo
sub
sti
pushf
pop
fs
cltd
ret
jge
add
fisttpl
inc
pushf
sbb
sahf
sbb
push
xor
inc
or
fsubp
insb
pop
pop
cs
mov
mov
and
repnz
and
sahf
inc
push
repz
cmpsb
sub
xchg
scas
dec
rorl
or
add
fwait
iret
add
scas
adc
test
jmp
ret
xchg
fisubrs
xchg
cs
xchg
int
cmp
cbtw
or
mov
push
add
ret
push
mov
mov
or
pop
ljmp
movsb
insl
mov
div
in
adc
fnstsw
mov
inc
test
imul
call
pop
sahf
in
test
shll
pop
cmp
adc
bound
pop
dec
and
and
xor
out
int
mov
pop
inc
ret
inc
mov
pop
mov
and
test
pop
test
out
or
push
pusha
inc
mov
cmpl
int
ss
das
cmpsl
scas
fdivrl
xor
lea
mov
push
lret
loopne
or
xor
and
mov
sub
inc
jb
in
in
gs
push
cmp
xorl
mov
imull
mov
sbb
pop
mov
mov
cmp
sub
in
jae
das
and
jae
sub
mov
dec
je
xor
jmp
sbb
xchg
or
xchg
sbb
or
cltd
out
mov
sbb
mov
mov
mov
daa
cmc
std
mov
dec
dec
push
jnp
jmp
in
add
notb
repnz
inc
sahf
outsl
or
popf
mov
aaa
mov
fldenv
jmp
stc
sub
ss
orl
pop
jecxz
fsubl
stos
lret
pop
addb
dec
mov
xchg
fmul
mov
lret
xor
stos
test
add
sbb
xor
push
fcmove
inc
pop
xchg
mov
pusha
mov
mov
sbb
out
or
sub
cmp
jo
mov
lods
fs
cltd
ss
xchg
in
cltd
pop
push
push
sbb
addr16
sub
push
jecxz
lcall
sbb
mov
cli
shrl
bswap
iret
in
adc
rolb
push
fnstenv
adc
mov
fwait
mov
std
push
or
bnd
pop
jmp
and
and
mov
sbb
das
mov
adc
or
jl
repz
pushf
push
cli
popa
adc
jle
and
fld
leave
stc
daa
inc
cs
insl
in
inc
push
gs
je
fisttpll
xchg
mov
pop
in
add
fs
mov
ror
clc
mov
mov
jge
xchg
out
add
jmp
dec
sbb
mov
insl
push
xchg
repz
ljmp
rcl
lock
das
inc
mov
inc
adc
lret
cmp
pop
adc
cltd
jbe
repz
mov
stos
dec
and
mov
or
gs
xor
les
fcomip
cmpsb
dec
add
iret
pop
jno
rolb
movsl
fwait
test
aaa
xchg
lock
les
lret
aaa
lcall
jmp
push
jae
fwait
or
in
push
mov
inc
outsb
cltd
dec
cld
xchg
mov
sub
pop
int3
push
pop
jmp
mov
stos
icebp
sahf
or
mov
inc
dec
add
les
add
int3
adc
pop
lahf
xchg
mov
push
adcb
icebp
lea
inc
jno
mov
lds
hlt
adc
cmp
dec
add
popf
jge
sbb
addl
insb
mov
xchg
paddusb
mov
push
sar
xchg
cmp
and
loope
xchg
test
mov
test
xor
add
mov
mov
pop
lahf
mov
ret
fsubrs
jne
mov
mov
notb
xor
cld
jbe
xchg
dec
cmp
push
inc
xor
pop
cmpsl
xlat
mov
fnsave
lcall
int3
fldenv
cmc
cmp
push
ficomps
fwait
stos
shl
cmp
jecxz
jp
sub
mov
fcoml
in
aaa
scas
jmp
mov
adc
int
pop
xor
icebp
mov
cmp
push
sub
cwtl
jo
jge
jge
clc
fiaddl
mov
movsb
loope
clc
push
mov
mov
mov
sub
mov
pop
or
mov
jno
adc
lret
int3
sbb
sub
mov
movsl
cltd
push
lock
inc
mov
cmp
xchg
std
mov
jb
lcall
mov
push
sbb
push
inc
stc
aaa
es
sub
mov
fdivl
movsl
sbb
in
cmpl
subb
int3
jecxz
addr16
popa
and
jecxz
pusha
cwtl
shrl
adc
and
jae
push
ja
ja
pop
pop
divl
mov
call
imul
xchg
frstpm(287
pop
pop
and
sub
loop
mov
and
pushf
lds
and
mov
imul
fisubl
daa
and
hlt
adc
xor
and
fucomi
pop
out
jne
pop
pop
lahf
loopne
pop
leave
rcrl
or
ret
jle
ds
lods
jecxz
xchg
jle
pop
push
cltd
pop
mov
mov
outsb
sub
and
mov
popa
add
js
pushf
movsl
or
ret
ror
sub
mov
pop
dec
mov
lods
push
jg
mov
pop
lods
lret
sbb
pop
gs
inc
jge
mov
pop
jno
xchg
inc
lock
popf
daa
cmpsl
jo
and
ret
stos
mov
aad
scas
inc
pop
addr16
lahf
sbb
ja
or
cmp
int
and
jl
pop
add
xchg
movsb
push
popa
jmp
xchg
push
xchg
jmp
jo
cmp
iret
lret
adc
adc
and
sbb
lods
rol
out
fnstenv
ret
inc
movsb
imul
xchg
outsb
mov
jbe
cmpsl
adc
stos
testl
mov
scas
push
dec
shlb
sub
jne
aas
lds
pushf
rolw
cmp
xor
sbb
inc
mov
cltd
add
ret
ficomps
inc
xchg
gs
dec
movsl
jns
mov
mov
std
cld
in
dec
and
xor
repz
push
jne
icebp
sub
subl
adc
sbb
pop
sahf
add
push
or
pop
pop
out
sbb
and
popa
and
jo
orb
out
push
outsb
stc
shlb
lret
test
in
or
leave
adc
mov
cmp
sbb
fs
inc
das
lret
mov
data16
in
dec
cmpsl
pop
fcoml
inc
jnp
mov
mov
xchg
stos
mov
aaa
sub
dec
xor
dec
incb
jl
push
cmp
inc
ret
cmp
and
xchg
fidivs
add
adc
enter
cltd
test
xor
je
add
or
cmp
fs
pop
enter
inc
out
mov
and
ret
lods
ss
mov
inc
ficoml
push
test
pusha
cmpsl
ja
or
or
mov
in
notb
pop
cltd
sub
xor
cmp
inc
out
testl
sbb
les
xchg
mov
push
iret
pop
inc
fstpl
icebp
and
scas
lods
cwtl
scas
xlat
pop
dec
push
jne
dec
xor
jecxz
add
xor
jge
aad
mov
inc
sub
push
inc
add
push
lea
ret
lret
mov
lds
mov
inc
mov
in
rolb
test
movsl
icebp
in
mov
ljmp
dec
stc
and
cld
sbb
mov
inc
inc
int3
cld
ficoms
xor
or
lcall
popa
divl
es
cmpsl
jo
clc
call
aad
sbb
imul
and
cld
push
or
sahf
in
pop
cs
inc
add
jl
push
imul
les
inc
inc
mov
lods
in
fdivs
add
jmp
sub
push
pop
push
adc
push
out
lahf
cmpb
and
inc
sahf
add
movsb
jns
cwtl
and
xor
nopl
xchg
pusha
xchg
in
outsb
mov
lea
dec
mov
and
imul
push
jl
add
or
pushf
movsb
jnp
mov
bound
ret
addr16
fistpl
bound
xchg
sub
das
push
or
aas
mov
or
push
testb
sub
sub
ret
aas
sub
jp
imul
xchg
inc
inc
mov
sub
or
fstl
cli
in
pop
std
pop
repnz
sbbl
adc
imul
push
idivl
loope
fadds
adc
adc
imul
lcall
in
cmpsl
test
jle
dec
dec
mov
or
mov
nop
mov
sbb
jae
mov
dec
bound
fstpt
cltd
cltd
jo
daa
jl
inc
push
push
faddp
xchg
ljmp
gs
outsb
jp
push
iret
je
sub
dec
rorl
ret
mov
pop
sub
popa
jne
nopl
pop
aad
ret
ja
xchg
inc
mov
xchg
loop
ja
add
add
daa
addr16
in
movl
pop
movsb
jge
or
mov
mov
pop
jmp
es
mov
sbb
mov
pop
icebp
clc
add
inc
or
adc
add
stc
xchg
adc
push
xchg
ret
mov
cs
jle
cwtl
mov
adc
rorb
int
dec
sub
pushf
dec
test
out
out
fiaddl
mov
scas
addr16
xchg
rclb
into
daa
int
push
xchg
lods
push
and
sub
mov
mov
divb
pop
mov
test
jbe
popf
sub
inc
in
dec
lahf
sarl
jmp
sahf
out
sub
push
lods
inc
jmp
inc
push
jno
rcr
gs
inc
sbb
std
test
mov
sbb
adc
sahf
in
clc
js
mov
push
cmp
mov
and
in
add
push
xchg
mov
pop
push
xchg
cltd
test
push
push
aaa
or
cld
and
inc
aaa
push
jecxz
loope
sub
aaa
pop
adc
sub
inc
mov
or
rolb
dec
pop
pop
insb
mov
test
ja
arpl
pop
push
cltd
loopne
cmpsl
gs
jl
jge
int
mov
add
nop
inc
mov
xchg
dec
mov
push
mov
push
sbb
pop
mov
cld
dec
fsubrp
or
add
cltd
jne
stc
push
xchg
cli
scas
mov
jno
sub
or
mov
lcall
cld
sbb
mov
xchg
nop
jle
or
lods
fstl
mov
nop
loope
repz
les
xchg
stc
cmp
fildll
mov
mov
jne
sbbl
or
pop
cltd
out
sbb
lds
sub
imul
pusha
pop
push
aam
mov
push
mov
jb
stos
jno
shll
neg
push
data16
push
repz
popa
testb
test
and
push
xor
xchg
mov
push
add
lds
lea
nop
in
stos
xlat
xchg
aad
pop
lea
popa
cld
out
mov
mov
inc
lcall
mov
out
pop
jg
mov
fistl
adc
int3
push
xor
scas
imul
push
in
or
movsb
sbb
out
fdivrs
das
loope
je
sub
aas
repnz
sbb
dec
sub
xor
and
or
push
dec
jge
xchg
jo
jns
sbb
cmc
cld
pop
xor
mov
mov
cmp
icebp
std
sbb
cmpsb
push
cmpsl
fistps
mov
cmc
sbb
adc
adc
mov
cmp
sub
sbb
jnp
push
push
xchg
sub
lods
outsb
lret
es
mov
insb
std
in
mov
fadd
jge
repz
inc
sub
daa
into
cmpsb
push
and
or
sahf
cmp
notb
mov
mov
cli
push
add
inc
push
xor
inc
mov
dec
je
mov
ss
aaa
fidivrs
cmpsl
aad
sbb
fwait
push
push
lods
sbb
adc
jl
inc
push
rorb
cmp
sahf
sub
mov
and
enter
dec
into
outsl
in
sbb
and
loop
nop
dec
adc
ljmp
subl
jg
cmp
int3
int3
pop
int3
faddl
cmp
pop
sbb
out
jnp
in
dec
popa
scas
cld
push
mov
cmp
call
sar
rcll
pop
inc
mov
arpl
cmp
jnp
int3
jne
sub
arpl
cli
pop
out
in
shlb
leave
icebp
dec
es
sbb
add
test
divl
cli
mov
das
mov
lods
dec
pop
inc
mov
cmp
sbb
mov
mov
mov
xlat
iret
mov
frndint
and
fadd
adc
mov
adcb
ret
leave
cli
subb
inc
lods
arpl
gs
shll
add
dec
orb
hlt
mov
in
testl
xchg
pusha
jmp
mov
mov
test
xchg
or
or
push
sub
jb
outsl
ljmp
add
negl
stos
std
cmpsl
aad
out
sub
rep
hlt
cmp
jb
xchg
pushf
sbb
sbb
xchg
enter
mov
sbb
aam
jno
jmp
xchg
into
jg
and
lds
sub
test
popl
pop
inc
loopne
mov
add
pushf
aaa
fstl
shlb
adc
aad
cli
aad
jecxz
imul
lcall
push
gs
mov
loopne
adc
les
lea
shrl
sbb
or
out
cmp
jno
outsl
xchg
mov
pop
jnp
xor
popa
repnz
pop
or
iret
icebp
sti
jno
mov
xchg
je
push
push
pushf
fldcw
and
daa
loopne
ret
lcall
jl
dec
add
mov
pop
jg
scas
lret
pop
mov
lds
push
outsl
sti
cmpl
xchg
pushl
xlat
push
dec
scas
cltd
inc
jg
jo
push
and
lds
xchg
jp
scas
push
add
leave
sbb
mov
decl
mov
decb
inc
mov
ja
cmp
mov
jg
in
lods
add
xchg
pop
lcall
les
adc
sbb
cmp
gs
or
push
dec
mov
lcall
adc
mov
sbb
int3
dec
jle
add
aaa
mov
mov
xchg
pop
enter
out
mov
ljmp
aam
popf
leave
int
and
loop
and
adc
outsl
sub
icebp
inc
in
dec
pop
fistpll
push
test
out
cmp
pop
dec
repnz
xchg
pop
xchg
cmpl
mov
and
cmp
jle
jl
fldl
add
cld
adc
add
movsl
xor
out
mov
push
das
sahf
int
and
pop
bound
cmp
and
dec
pop
xchg
data16
outsl
clc
xchg
cmpsl
cmpsb
out
in
mov
pop
outsl
or
xchg
mov
scas
jp
insb
pop
aam
add
xlat
mov
sti
into
push
shlb
adcl
sub
out
into
sub
add
ljmp
adcl
sbb
out
mov
add
int3
je
push
sbb
dec
mov
roll
xor
cltd
push
fcomps
inc
pop
out
vandnpd
inc
push
or
xor
in
scas
ja
inc
popa
cmpl
gs
adc
neg
cmp
and
fistl
xchg
add
popa
cmp
dec
iret
inc
fimull
and
add
mov
movsb
mov
mov
dec
neg
cwtl
and
mov
pop
ret
xchg
icebp
mov
push
test
xchg
jnp
sub
xchg
out
pop
sub
xchg
sub
cmp
xor
xor
test
jecxz
jbe
cmc
xor
shll
xchg
mov
das
iret
adc
movsl
dec
mov
dec
stos
mov
adc
xchg
push
and
push
mov
sbb
mov
repnz
inc
frstpm(287
xor
sub
fmull
aaa
in
imul
in
jns
and
xlat
sti
xchg
sti
in
aaa
frstor
popf
sarb
iret
and
push
pop
xorb
push
mov
push
rcrb
adc
xlat
fsubrs
add
movsl
int
and
mov
and
mov
scas
out
insl
xchg
sarb
out
push
jnp
xor
xor
dec
push
pop
mov
in
push
mov
inc
leave
shrl
adc
sbb
nop
shlb
jl
push
in
inc
out
inc
jne
xchg
dec
cmpsb
out
mov
xor
jae
testb
fstps
cli
push
xor
movsl
sbb
inc
cltd
xlat
pushf
cmp
pop
lret
jge
mov
push
std
push
frstor
push
adc
dec
loope
outsb
pop
xchg
insl
pop
faddl
cld
aaa
pushw
shlb
scas
pop
push
sbb
xor
jecxz
lock
je
pusha
mov
stc
out
adc
fidivrs
ret
xchg
xchg
call
adc
loopne
or
and
mov
mov
xchg
clc
cmpsb
call
push
cmp
jbe
push
dec
push
js
push
mov
xchg
xchg
clc
cmpsb
call
push
cmp
jbe
push
dec
push
js
push
sahf
mov
xchg
ds
cmpsb
call
push
cmp
jbe
push
dec
push
js
push
mov
xchg
xchg
clc
es
cld
xchg
data16
das
mov
jmp
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
cmpsb
jl
dec
xchg
xchg
push
mov
in
daa
cld
push
int3
pop
fdivl
data16
push
mov
mov
cmpsb
jl
dec
xchg
out
or
sbb
in
es
push
int3
push
fdivl
mov
mov
cmpsb
jl
dec
xchg
out
or
sbb
rolb
fdivl
or
and
sub
sub
mov
ljmp
push
lock
mov
stos
and
inc
push
fs
mov
sub
cmp
push
mov
fisttpll
mov
pusha
out
scas
stos
xchg
mov
xchg
mov
or
add
leave
sbb
lods
sbb
mov
cmpsb
jge
dec
xchg
sub
dec
mov
xor
jmp
in
aad
jae
dec
icebp
inc
xorb
mov
push
repz
jo
xchg
xor
and
lea
dec
jmp
or
aas
pop
mov
in
jmp
push
jmp
adc
cmpsb
jl
dec
xchg
out
or
sbb
in
es
push
int3
push
fdivl
mov
inc
add
scas
decl
out
sbb
inc
xchg
jge
imul
xchg
push
mov
lds
sub
ljmp
arpl
adc
push
mov
ret
or
cmp
xor
sarl
or
cmp
sub
or
sbb
in
es
push
int3
push
fdivl
mov
inc
pushf
mov
cmpsb
jl
dec
xchg
out
or
sbb
in
es
push
int3
push
fdivl
mov
inc
pushf
mov
subl
test
testl
add
mov
pop
adc
fcmovu
inc
mov
jmp
pop
mov
lds
push
jl
dec
ret
mov
inc
outsb
nop
adc
xchg
ja
xchg
dec
lds
cmpsb
mov
dec
call
cmpsb
imul
pushf
mov
adc
lods
cmp
stos
pop
loop
mov
add
stc
xor
push
dec
and
push
stos
outsb
das
rclb
das
mov
jge
adc
popa
sbb
ja
test
jb
and
das
adc
add
xor
movsl
xor
test
sbb
pop
push
icebp
lods
push
out
fcomip
bound
or
test
xchg
popa
popf
aam
pop
addr16
push
cmp
xlat
push
pop
iret
je
jp
cmp
pop
or
mov
sbb
mov
lret
aaa
nop
sti
push
jp
scas
or
xchg
xchg
rclb
adc
fucom
nop
insl
ror
inc
xchg
xchg
mov
ljmp
hlt
xor
divl
sahf
mov
fcmovne
bound
inc
or
test
aam
adc
jb
jo
movsl
jg
stos
jo
ret
xchg
into
mov
and
sbb
dec
fwait
jb
dec
or
inc
push
ret
add
mov
mov
and
xor
jecxz
lahf
mov
pusha
es
lock
adc
shlb
push
lods
pop
data16
inc
mov
sbb
pop
test
int
in
pop
movsb
xchg
xor
test
add
push
test
and
repnz
mov
insl
dec
mov
sub
test
cmp
leave
rcrb
stos
stc
sub
cs
push
adc
xor
push
push
ror
xchg
jae
popf
or
icebp
inc
add
in
iret
lahf
js
sahf
rorb
sbb
push
cmp
cmpb
int3
loope
push
jb
fyl2xp1
xor
dec
loopne
fs
dec
mov
ret
sarb
jmp
insb
xchg
icebp
push
test
ds
and
stos
lock
xchg
mov
xlat
mov
mov
mov
mov
iret
fucomip
mov
sub
ret
negl
pop
jmp
lret
xchg
scas
aas
mov
push
cmpl
adcb
in
sub
leave
sub
push
jb
fiadds
sti
push
insb
cld
movsl
in
xor
add
cmpsl
pushl
and
xor
push
dec
ljmp
ret
cli
mov
and
mov
inc
xchg
cmpsl
fmuls
mov
lea
mov
mov
movsl
cmc
sbb
jae
xchg
jno
dec
jns
xchg
popf
pop
mov
scas
lods
fsubl
inc
dec
xchg
cwtl
xor
sub
mov
aad
jbe
or
mov
xor
js
pop
gs
sbb
insb
sub
dec
fdivrl
loopne
lahf
push
jae
out
mov
ret
adc
jp
cwtl
inc
loopne
ret
stc
fs
mov
lret
outsb
pop
mov
mov
xchg
cld
out
out
movsb
enter
sub
fcmovu
cmpsl
lods
stc
sub
pop
jns
iret
ret
cmp
lock
mov
mov
daa
mov
inc
push
lret
fists
fwait
and
pop
stc
cmp
adc
in
out
add
inc
push
mov
cli
repnz
fimuls
sbb
nop
sub
test
shrl
call
rorb
outsl
xchg
push
fs
ret
lods
fistpl
xor
mov
pusha
xchg
movsl
inc
jns
lret
test
sbb
pop
popa
xor
stos
cmc
fsubs
pop
adc
adcb
cmpl
movsb
call
hlt
in
sbb
lods
in
cmp
jmp
mov
add
jo
xchg
movsb
sub
pop
mov
inc
out
mov
loop
jmp
popf
jg
and
je
iret
stos
into
dec
or
sbb
or
enter
add
and
cmp
mov
adc
movsb
test
adc
test
push
jp
jne
adc
push
out
cmpsl
mov
data16
push
repz
inc
and
push
fnsave
jns
je
xlat
aaa
cmc
xchg
addr16
lock
ljmp
icebp
jno
add
and
inc
dec
sti
ja
inc
sub
aaa
xor
call
shlb
mov
sbb
das
adc
fidivrs
sbb
mov
dec
dec
fwait
add
mov
leave
loop
or
and
cmp
lcall
in
shll
stos
push
add
frstor
aaa
dec
jle
aam
jle
cmpsl
movsl
insl
inc
pop
mov
or
dec
shufps
fwait
psubusw
scas
inc
sar
ret
cld
into
push
enter
add
push
or
add
adc
add
sub
mov
push
add
dec
les
and
in
ss
push
dec
inc
into
mov
sub
lods
push
sub
mov
add
ss
in
mov
arpl
push
sub
mov
stc
dec
orb
stos
push
shl
or
add
push
scas
clc
std
jle
or
add
pop
add
jle
sub
lea
sub
xchg
int
mov
js
mov
xchg
loop
cmpsl
test
jns
fs
rclb
dec
clc
or
jp
jnp
cmp
orl
neg
mov
ret
jle
xchg
mov
dec
sahf
and
mov
popa
fcoml
pop
adcb
andb
mov
or
enter
out
mov
ja
outsl
loopne
dec
cli
push
repnz
mov
test
mov
pop
arpl
leave
fucomi
adc
jge
data16
outsl
in
test
xchg
out
nop
mov
jb
jge
cmp
or
jno
test
mov
clc
or
fdivs
mov
cld
ss
and
pop
push
aaa
and
mov
dec
push
cmpsb
dec
jno
aam
movsb
mov
popa
movsb
sbb
add
push
aaa
loop
pop
fcompl
loop
pop
push
or
pop
mov
mov
sbb
mov
add
ret
fstpt
ja
ret
pop
sbb
push
mov
movsl
and
movsb
or
sub
mov
add
shl
mov
mov
fcompl
andl
mov
dec
sbb
stos
addr16
repnz
sbb
hlt
sbb
ret
fcoms
jle
repz
les
aam
mov
jecxz
jl
clc
lret
ror
mov
inc
jecxz
cmp
xor
mov
in
jmp
mov
cmp
imul
mov
cmp
lds
lret
mov
or
je
cld
push
xchg
jne
scas
mov
repnz
xchg
es
bound
mov
sbbb
dec
sbbl
sbb
jns
mov
in
mov
out
adc
pop
lds
adc
out
in
dec
xchg
jl
ficompl
js
test
xchg
nop
lods
shlb
xchg
jne
add
scas
das
lahf
fidivrs
mov
ret
test
sti
or
mov
lock
std
mov
adc
aaa
jno
push
mov
add
or
movsb
add
shl
xor
rol
icebp
stos
inc
outsl
dec
mov
insl
ds
imul
std
jle
sbb
addr16
sub
outsb
sar
jle,pn
xchg
push
shr
popa
out
cltd
rcrl
test
xchg
and
aam
ret
cmpsb
jmp
scas
movsl
out
imul
push
adc
sbb
sbb
int3
mov
loope
pop
out
fistps
arpl
loope
inc
icebp
sub
ja
and
in
sub
arpl
fildll
es
jle
flds
xchg
mov
lods
mov
daa
int3
cli
fwait
jne
loopne
int
jo
mov
mov
popa
dec
pop
pop
cmpb
xor
aas
out
or
xchg
stos
dec
jo
or
or
dec
cmpsl
jg
cli
xor
test
lods
sbb
jnp
push
and
xor
jle
push
daa
in
cmpsb
sub
es
xlat
mov
lcall
push
push
test
je
mov
inc
xor
jge
cmp
jecxz
stos
push
adc
and
mov
cmp
cmc
out
lock
inc
mul
mov
out
jo
sbb
fiadds
cmpl
pop
xor
jb
mov
sti
lret
inc
jp
pop
ret
aaa
mov
inc
imul
push
daa
or
in
mulb
dec
jo
stos
daa
inc
in
lds
add
or
jmp
push
xchg
ret
ret
in
pop
insb
cmp
mov
aam
jno
push
lock
pop
mov
pop
test
adc
cmpsb
sub
xchg
push
mov
xor
cmp
loope
je
popa
add
jno
xchg
dec
push
fisttpll
fdivs
dec
int3
jno
adc
hlt
dec
push
pushf
jae
adcb
inc
lds
jno
jmp
aaa
dec
push
outsb
repnz
lods
fs
sti
test
pop
dec
shlb
mov
inc
ret
test
lea
xor
xchg
xor
outsb
repz
xchg
fisubrl
leave
fnsave
adc
mov
loopne
lods
scas
pop
movsl
xor
inc
dec
orl
lods
sti
xchg
sbb
ja
jb
lods
arpl
jne
out
cmp
mov
stos
add
jge
and
jge
pushf
fisubrs
dec
leave
aas
dec
stos
outsl
pop
add
and
repnz
mov
fbld
mov
incb
or
sbb
push
add
cmp
cmp
clc
int3
andl
mov
fisubs
inc
push
mul
mov
mov
mov
xor
aaa
outsl
add
add
inc
stos
mov
mov
pusha
cltd
fdivs
inc
hlt
mov
repz
aam
pusha
mov
jle
pcmpgtd
js
dec
loope
sub
push
ss
out
sbb
dec
mov
shrb
pop
adc
push
inc
or
lcall
jne
ss
mov
push
mov
aaa
mov
and
cmpb
ror
lret
push
jae
dec
sbb
insb
xchg
sti
push
mov
movsl
xchg
cmpsb
mov
outsl
loop
pushf
orl
repnz
fcomps
push
xchg
jns
xor
mov
shr
jae
fimuls
xchg
jle
daa
pushfw
fildl
filds
gs
mov
popa
pushw
call
adc
add
popf
insl
sbb
xchg
xor
popa
lock
aad
jl
adc
and
xchg
xorl
mov
das
das
push
push
test
add
cmp
cwtl
rcl
xlat
xchg
xor
xor
out
insb
cmp
jl
in
push
dec
out
stos
ret
cmp
pop
stos
popa
fnstenv
add
sub
dec
dec
enter
mov
lret
cld
mov
push
in
sub
cmp
rcrb
sub
in
movsl
leave
fisubs
fcmovnb
push
push
mov
decl
mov
arpl
xchg
out
movsb
es
jmp
pop
xchg
push
xchg
push
add
lcall
icebp
cltd
insb
adc
mov
out
sbb
bound
push
pop
push
movsb
jns
loop
sub
int3
mov
int
pushf
push
or
aas
out
pop
push
xchg
fptan
iret
inc
mov
xchg
sbb
mov
sub
sbb
popf
jo
stc
das
aam
ret
fisttps
and
pop
cmp
pop
or
mov
lcall
push
das
aaa
cli
loopne
sbb
cmpsl
test
gs
cmp
out
jp
out
stos
pop
inc
imul
fld
or
add
stos
nop
cmp
repz
mov
int3
lods
mov
lret
push
and
xlat
jle
mov
dec
add
fmuls
or
push
dec
mov
sbb
mov
and
lods
add
cltd
out
cmp
das
test
mov
dec
mov
in
ss
xchg
mov
bound
push
cmpsl
mov
sub
jbe
jnp
in
js
nop
and
insb
or
pop
pop
lds
mov
sahf
fwait
out
jne
pop
push
xchg
nop
icebp
cmpsb
mov
fsts
inc
je
imul
sarb
push
push
mov
dec
push
fisubs
xchg
jg
mov
cmp
cmp
jle
cli
loopne
rorl
adc
and
jnp
add
sbb
je
stos
es
aam
dec
jp
inc
push
push
inc
pop
rolb
out
xchg
dec
sbb
out
xchg
jb
test
hlt
push
je
shll
stos
and
jge
in
hlt
mov
addr16
mov
adc
jb
ljmp
xor
rorb
jae
test
sbb
adc
cs
cli
movsl
pushf
sub
cmc
fdivrs
fistpl
dec
jl
cli
inc
lods
lods
bnd
cmpl
xchg
pop
adc
sbb
adc
rorb
in
sub
xchg
mov
fsubr
mov
sub
clc
mov
cltd
jbe
lcall
leave
out
into
xor
push
add
xor
inc
clc
cmp
cltd
orb
mov
mov
mov
icebp
insl
push
or
cmp
sti
xor
arpl
sahf
jg
mov
iret
ss
xchg
int3
and
dec
rclb
bound
int3
int
inc
cmp
dec
loop
mov
mov
sub
clc
push
sbb
lods
push
stos
cmp
js
or
mov
nop
push
mov
xor
imul
mov
test
add
push
jb
mov
or
or
sbb
rorl
push
call
inc
or
fimuls
ret
sbb
fidivrs
scas
jne
sub
adc
add
or
and
mov
mov
xchg
and
xchg
jmp
mov
mov
lods
mov
sub
mov
push
adc
je
dec
mov
repz
cwtl
and
pop
fildl
pop
xor
mov
shlb
pop
loopne
fs
rorb
enter
sbb
adc
add
cmc
ds
lahf
jp
stc
inc
sub
adc
add
sbb
inc
cmpsb
lds
mov
cmp
cwtl
sbb
in
loopne
addr16
mov
and
pop
inc
sub
rcll
push
or
push
mov
push
movsb
stos
mov
popf
mov
in
add
pop
testb
sbb
mov
cmp
push
sbb
ljmp
xchg
xchg
push
subb
cwtl
add
cmp
leave
int3
adc
cld
addr16
call
fwait
xor
les
sahf
test
or
test
test
dec
outsb
sbb
mov
gs
test
loopne
orl
inc
cltd
lock
push
hlt
push
pop
movq
jns
add
ds
dec
je
sti
call
das
movb
mov
xchg
cltd
fldenv
add
jo
adc
mov
pop
imul
lahf
pop
mov
pusha
scas
mov
inc
add
js
sub
xlat
popf
sub
cmp
ret
push
cltd
pop
scas
mov
push
call
push
aam
rorl
inc
ss
fcoml
mov
jno
push
sbb
sbb
xchg
cli
inc
mov
out
popf
mov
add
lret
xchg
or
jecxz
or
in
add
xchg
pop
enter
loop
inc
int3
dec
dec
lods
cmpsl
pop
xor
stos
stos
cs
enter
inc
lret
dec
faddp
fsubrl
push
lahf
scas
out
push
scas
xor
sub
xchg
stos
int3
jne
dec
stc
adc
pop
pop
xchg
push
pop
mov
mul
mov
mov
mov
mov
pop
jp
gs
mov
sbb
shlb
mov
push
cmc
sub
mov
imul
adc
jecxz
push
or
inc
loop
sbbl
xchg
decb
stos
test
cmp
mov
add
jp
out
hlt
orb
sti
push
addl
jae
ljmp
and
and
fdivr
adc
arpl
and
in
dec
xchg
ret
pmaxub
mov
jl
setle
cld
pop
insl
nop
repnz
pop
je
sub
xchg
fs
mov
push
mov
scas
cmpsb
jae
xchg
cmc
mov
sub
sub
cmp
mov
push
inc
sub
sub
fwait
cmp
cmp
adc
mov
shlb
xor
xor
subl
sbbb
les
out
push
adc
xchg
adc
loop
loop
jbe
dec
mov
xchg
jp
mov
sbb
mov
ficompl
pop
xchg
int3
jne
stos
cmc
cwtl
jb
mov
enter
mov
push
push
into
cmc
out
hlt
cld
mov
bound
fsubr
xchg
adc
sbb
add
push
mov
mov
mov
jnp
int
sahf
jl
pop
and
fldenv
push
rorl
mov
imul
test
mov
je
pop
or
sbb
xchg
cltd
xor
mov
test
xchg
xor
lods
aad
mov
jo
mov
pop
jecxz
fsubrs
pusha
lea
int
mov
les
rol
adc
sahf
std
out
and
mov
test
cmp
outsb
sti
push
aaa
xor
les
lods
dec
sbb
subl
sahf
cmp
or
mov
fcoms
mov
push
pushf
fisubl
test
add
mov
mov
iret
jmp
inc
repnz
jp
les
pop
push
mov
sub
lcall
or
and
push
mov
repz
mov
jne
push
ja
lea
lock
mov
psubw
and
fst
or
xor
das
lret
jl
out
or
push
jg
sbb
bound
pop
pushf
sub
or
mov
mov
xchg
jne
icebp
js
pop
sahf
popf
fstl
movsl
jge
dec
push
lret
rolb
fs
xor
or
inc
insb
scas
push
fstpt
gs
pop
pop
cld
or
pop
loop
les
fcoms
and
adc
cmp
add
xlat
adc
add
lret
xor
insb
shrl
mov
test
push
loope
movsb
sbb
or
dec
aam
mov
jl
loop
jp
mov
and
dec
xor
cvttps2pi
cmp
mov
sbb
cmc
mov
dec
mov
adc
push
cmp
push
fs
loop
mov
jne
pop
mov
hlt
imul
mov
imul
adc
shll
inc
xor
ljmp
sub
in
jo
dec
pop
outsb
ds
mov
and
mov
cmp
inc
lods
adc
lods
std
in
jl
daa
es
repz
ret
xor
push
out
add
adc
pop
xchg
dec
lret
les
jge
mov
fldl
cmpsl
cmp
cld
sbbl
inc
or
mov
push
mov
xlat
fwait
bound
xchg
sub
das
pop
adc
in
add
fcoms
hlt
or
into
nopl
or
fcoml
fidivrl
mov
dec
mov
mov
sbb
gs
adc
mov
adc
add
fistps
push
or
jne
movsl
subb
mov
adc
sub
mov
pop
mov
stos
xchg
fisubrl
rcl
pop
repnz
push
sbb
popa
dec
sbb
jp
addr16
mov
aad
add
jg
mov
xchg
sub
mov
les
dec
lcall
pop
imul
push
jbe
lret
pop
jns
mov
clc
test
adc
and
adc
mov
cmp
pop
icebp
enter
ljmp
hlt
leave
dec
testb
int
xchg
push
and
pop
pop
in
dec
fcmovnbe
fsts
jne
das
clc
stc
and
or
or
or
jb
popa
dec
movl
lahf
mov
push
in
jmp
cwtl
mov
sub
dec
addr16
daa
aaa
mov
sbb
push
out
mov
cli
and
jmp
jb
mov
add
xor
cmp
fdivl
js
pop
jnp
dec
jbe
stc
dec
les
daa
jle
push
and
call
js
xchg
packuswb
xchg
cmc
jno
push
in
cs
jmp
loop
aad
push
in
push
cli
mov
leave
adc
push
inc
outsl
xchg
loop
cmp
inc
dec
inc
adc
in
fmull
xlat
or
dec
cs
mov
movsb
out
mov
enter
mov
fisttps
push
jne
inc
ds
mov
xchg
dec
xchg
out
or
sbb
in
es
push
int3
push
fdivl
mov
inc
pushf
mov
cmpsb
jl
dec
xchg
out
or
sbb
in
es
push
int3
push
fdivl
mov
inc
pushf
mov
es
dec
xchg
sub
cmp
or
es
push
int3
push
fdivl
mov
inc
pushf
mov
cmpsb
jl
dec
xchg
sub
mov
adc
push
mov
and
inc
es
arpl
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
dec
cld
pop
test
fdivrs
add
xor
arpl
push
cwtl
lds
clc
pop
call
or
cmp
call
push
cltd
sub
pop
pop
cs
mov
loopne
xchg
cmp
cwtl
cmp
dec
jmp
shrl
cmp
pop
mov
push
ret
sbb
xchg
loop
jmp
inc
out
inc
movsb
sti
cmpsl
sub
lods
sbb
aam
shlb
xchg
push
cmpsl
pop
sbb
sub
jmp
mov
xorl
push
loop
shll
int
clc
pop
jge
mov
adc
sub
mov
call
pusha
lods
out
jno
cmp
or
cwtl
movsl
push
out
je
fstl
testl
sarb
gs
sbb
je
mov
sbb
notl
mov
mov
insl
outsl
hlt
mov
enter
enter
test
cwtl
cmp
enter
call
add
test
mov
xchg
mov
movsb
insl
sbb
mov
sbb
jg
inc
int
enter
sub
or
push
cli
insl
icebp
jge
mov
or
js
ja
sub
jge
jnp
mov
cs
movsb
dec
hlt
sbb
enter
call
cmp
or
pop
call
or
cmp
call
cmp
or
cmp
fcomp
sbb
ss
in
inc
jmp
add
xor
rol
add
scas
rcl
lahf
sbb
or
mov
cmp
mov
mov
jl
iret
pop
insl
dec
lock
cmp
out
inc
adc
imul
xor
cmp
movsl
sbb
or
outsb
loopne
rcl
popf
icebp
mov
adc
insb
jb
out
or
imul
mov
les
cmpsl
in
cli
mov
lret
and
inc
xor
outsl
mov
nop
insl
or
and
std
jp
jae
orl
inc
lods
hlt
popa
mov
sbb
sbb
fxch
and
xor
lret
fdivs
dec
out
jnp
dec
sub
jb
lcall
push
cmp
fisttpll
addr16
sbb
lret
test
push
xorb
xchg
add
out
fistps
gs
aaa
shll
lods
and
fucomip
out
jb
mov
aaa
out
pop
aas
fucom
jl
mov
mov
cmp
add
xor
shlb
ja
sub
movsl
pop
test
sbb
mov
ffree
pop
inc
test
xchg
adc
or
mov
pop
jmp
orl
push
loopne
jp
jecxz
sahf
jb
cmp
das
sbb
out
dec
sarl
adc
test
dec
lds
cltd
sub
ret
int3
aas
and
xor
and
sub
adc
in
jnp
push
popa
jnp
ficoms
jp
sbb
in
adc
stos
rcl
es
andb
ja
inc
lahf
test
lea
inc
jmp
jl
inc
imul
inc
mov
push
insl
mov
add
and
jo
sbb
pop
clc
xor
in
enter
add
and
push
imul
cmpsl
in
cmp
test
pop
ss
and
cli
dec
test
insb
shrl
add
mov
ja
call
cmc
jbe
mov
cltd
les
fldt
jmp
inc
test
or
es
fiadds
pop
jg
imul
mov
aaa
stos
in
cmp
sbb
dec
and
js
jno
xchg
xor
das
test
lock
out
xor
idivb
pop
btc
mov
cmpsl
mov
add
mov
sbb
lock
push
or
xchg
add
jmp
cmp
inc
push
les
cmp
ja
bound
scas
jg
xchg
outsb
pop
rcll
add
movsb
outsl
sub
inc
out
xchg
xchg
and
xchg
or
mov
mov
test
dec
sbb
stc
cld
insb
lcall
in
insl
jb
add
insb
sbb
fadds
add
movsl
sbb
xchg
xchg
cmpsl
leave
inc
out
cvtdq2ps
add
mov
jns
or
xor
mov
out
pop
push
inc
iret
loopne
fwait
imul
sahf
das
push
js
cmp
adc
push
in
sti
test
insb
sub
shl
andb
dec
mov
dec
dec
cmpsb
sahf
jae
mov
arpl
or
fwait
mov
and
xchg
shl
mov
mov
out
sbb
mov
mov
aas
loope
enter
ret
test
cwtl
adc
mov
or
add
cmpsl
cmc
sahf
test
jge
xorl
cmp
pop
mov
dec
jge
ss
pop
loopne
lods
push
ja
out
xchg
push
push
inc
push
faddp
sub
add
pop
xchg
inc
sub
add
push
xchg
mov
iret
mov
sarl
repnz
lods
bnd
iret
ljmp
push
imul
mov
lds
dec
sub
pop
movsl
idivl
aaa
mov
popf
lock
jne
inc
push
xor
add
mov
sbb
xchg
sub
cmpsb
push
xor
scas
aam
jmp
fdivrl
mov
push
xorl
rolb
xchg
gs
mov
lods
sub
cmp
shl
inc
imul
arpl
adc
addl
stc
mov
jg
pop
idivb
out
sub
or
in
lea
outsb
testl
sbb
mov
dec
js
jl
dec
loope
xchg
adc
cli
adcl
cmp
orb
ret
fcmovnbe
mov
mov
nop
push
in
imul
es
cltd
jns
cmp
aaa
inc
notl
dec
pop
lcall
sub
push
jl
sahf
sub
das
frstor
jae
ret
fwait
xchg
jp
or
scas
inc
add
cmc
sti
test
shrb
ss
xchg
cld
aam
cmp
test
inc
mov
push
loop
add
movsl
adc
je
fwait
mov
call
ror
ss
pop
lahf
xchg
dec
fwait
dec
push
cwtl
xchg
vfnmadd231ps
gs
push
sub
mov
mov
sub
mov
jp
out
inc
xlat
lret
loope
ret
fbld
je
xor
sub
sub
mov
loop
addr16
filds
mov
call
iret
jno
jecxz
mov
and
sbb
std
out
push
neg
mov
mov
mov
lret
cmpsb
nop
addb
aaa
out
cmc
scas
pop
adc
mov
adc
test
cld
mov
xchg
shr
mov
inc
jb
adc
dec
push
or
or
dec
repnz
xor
mov
jge
mov
xor
inc
mov
orb
idivb
sbb
fadds
mov
adc
mov
and
dec
aam
mov
xor
xchg
lock
int3
dec
push
test
call
cmp
sub
popf
inc
enter
movsb
jno
mov
arpl
or
fisttps
push
lcall
cld
mov
sti
pop
daa
inc
test
test
ljmp
or
mov
movsb
xchg
xorb
fisubl
imul
mov
mov
cltd
mov
mov
outsb
iret
push
es
pop
repz
pop
xor
test
push
sbb
push
add
inc
pop
into
pusha
mov
lret
add
movsb
jns
adc
mov
insb
cmp
testl
fwait
ljmp
jae
mov
lahf
jmp
dec
add
xchg
mulb
jl
popf
xchg
jl
repnz
out
adc
sub
cwtl
sbb
not
add
and
mov
dec
adc
ja
sbb
mov
dec
das
pop
pop
mov
fadd
adc
daa
adc
mov
inc
jg
lea
xchg
fwait
lcall
mov
add
push
jnp
je
mov
sub
inc
cmpsl
cmp
mov
mov
cmp
cmp
insb
push
pushf
cmp
sub
insb
mov
jno
js
lret
mov
pop
lret
pop
testl
xor
adc
mov
and
jae
cmpsl
adc
adc
sbb
xor
lea
push
pop
sbb
jge
loopne
xor
pop
push
arpl
mov
push
popf
adc
inc
jae
insb
add
jmp
movsb
js
inc
scas
fistps
cli
popa
and
int
clc
add
jae
outsl
inc
xchg
mov
popa
cmc
outsl
fsubrs
outsb
hlt
repnz
pop
mov
jae
out
popf
sub
sbb
jmp
jae
jmp
sti
notb
adc
mov
pop
sub
pop
fsubs
mov
inc
mov
push
fnstcw
add
pop
xor
pop
add
mov
ja
int3
into
inc
adc
in
dec
test
inc
je
fucomi
adc
and
loope
mov
ja
jle
mov
xchg
std
loop
out
bound
inc
testb
stos
aam
xor
or
sbb
dec
insb
cmc
data16
pop
lahf
sub
push
popf
xor
icebp
loop
jge
xor
daa
xchg
jge
cmp
mov
std
jg
cltd
push
mov
xor
push
push
es
cmc
pushf
daa
sti
ja
sub
dec
mov
fsubp
es
mov
mov
inc
jne
xor
daa
jno
fildll
out
jmp
test
mov
bnd
repnz
or
or
jnp
mov
adc
jns
pop
adc
sbb
cmp
fsubl
imul
or
and
xchg
push
and
pop
pop
mov
jmp
dec
inc
mov
inc
mov
pushf
ljmp
mov
inc
rcll
rcl
es
addl
or
xor
xchg
add
mov
pushf
xor
popf
jp
inc
sahf
push
fdivrl
xor
cld
mov
lods
repnz
loop
sub
insb
fdivrs
aaa
xor
gs
sub
shlb
inc
cmp
scas
lcall
mov
or
in
fadds
mov
sbb
es
xchg
add
out
add
mul
outsb
test
inc
push
in
xorl
iret
stos
daa
mov
mov
fcoms
into
jnp
cmp
jbe
pop
test
inc
mov
les
adc
push
cmpb
mov
push
arpl
scas
repz
dec
fsubrl
push
gs
ret
jno
sub
outsl
adc
loope
push
rcrb
push
out
xchg
incl
scas
shll
imul
mov
or
rcrl
dec
sbb
mov
sub
xlat
jge
lret
add
xor
mov
push
push
aad
sahf
rcl
inc
add
or
push
xchg
jp
rcr
scas
fdivs
vpsllw
mov
or
and
add
mov
es
jl
xchg
stos
aam
aaa
fs
sbb
mov
dec
dec
ja
mov
movsb
and
jle
ljmp
mov
adc
lds
jmp
and
mov
ljmp
xchg
sbb
aas
adc
stos
push
arpl
jecxz
cmp
mov
pusha
mov
and
adc
xor
xchg
lahf
jp
insl
lods
std
jge
sbb
fs
int3
aam
sbb
aad
fsubl
repz
or
fsub
cld
ret
push
cmp
push
cmp
std
insl
push
shll
jo
xchg
repz
in
dec
push
outsb
shrb
subb
xor
roll
pusha
jmp
cmpsl
stos
dec
enter
xlat
inc
add
push
and
int3
leave
adc
inc
mov
mov
repnz
pop
add
enter
xlat
pop
pop
gs
mov
fnstcw
dec
pop
jl
inc
xchg
jg
scas
jo
dec
mov
scas
fisttpll
adc
je
and
inc
test
sub
xor
ss
fsubs
adc
and
push
subb
movsb
or
mov
jmp
retw
adc
or
popa
ss
sub
or
inc
push
inc
pop
aam
pop
dec
add
push
jb
inc
inc
int
mov
xor
test
inc
mov
push
sbb
or
dec
jecxz
std
aad
xchg
add
addr16
dec
inc
mov
push
ror
cmpsb
pop
xchg
xchg
jl
inc
adc
add
lods
mov
scas
xor
lret
pop
cs
mov
lock
shr
and
inc
add
js
add
test
fisttpll
testb
pusha
es
loop
js
adc
loope
aas
add
push
mov
cmp
cmc
adc
mov
adc
and
cmp
cmp
mov
fsubrp
lahf
cmp
cmp
leave
push
push
cmp
out
pop
adc
in
inc
rclb
dec
shll
stos
cwtl
mov
xchg
adc
das
or
cmp
xchg
push
jnp
cmp
mov
adc
pop
mov
jne
push
mov
xor
scas
jle
xlat
push
inc
cmc
addr16
mov
sub
xor
leave
les
add
sub
ret
ljmp
jle
orb
pushf
dec
mov
das
sbb
movl
test
movsl
and
cmp
shll
int
xchg
adc
and
icebp
lea
mov
mov
das
sub
mov
add
insb
scas
push
arpl
xchg
ss
pop
popf
ss
je
adc
movsb
aaa
sub
adc
add
daa
push
and
cli
iret
lea
clc
jbe
xchg
dec
out
rclb
push
shlb
xlat
pop
inc
add
xorb
add
int3
ja
inc
add
jnp
gs
inc
lock
pop
scas
cmp
pop
lahf
xchg
mov
cmp
pop
xor
iret
and
push
sbb
xchg
mov
aam
mov
in
lods
mov
hlt
lret
mov
cmpsb
pop
mov
mov
jnp
mov
rorl
jecxz
and
or
and
xor
aas
sbb
mov
repz
mov
adc
repz
mov
and
in
inc
fimull
push
sub
xor
xorb
lds
push
jp
adc
rclb
js
leave
mov
jne
hlt
test
std
out
test
mov
push
aam
xchg
add
sbb
sub
inc
adc
popf
setg
lret
cmpsb
mov
xor
dec
jge
pop
mov
sti
pop
scas
sub
mov
ret
mov
lea
push
in
xor
add
sub
mov
mov
mov
out
xchg
or
dec
movsb
gs
mov
push
xchg
aam
xchg
daa
mov
into
movsl
inc
jno
jbe
jae
add
lcall
dec
dec
push
lods
jne,pt
in
clc
pop
cmp
push
lahf
sub
dec
inc
jo
jl
imul
test
ret
ljmp
imul
arpl
pop
xchg
push
push
ret
dec
xor
out
and
add
inc
xor
ror
jg
clc
shl
or
mov
push
enter
arpl
add
loope
and
je
stos
shll
cs
sbb
adc
cmp
test
popa
ss
sbbl
pop
cmpsb
enter
icebp
cmp
stc
in
pop
fstpt
or
xchg
movsl
xor
sbb
in
lret
cwtl
pop
or
add
lcall
jnp
test
xchg
dec
dec
push
cmp
cli
out
cwtl
xchg
shl
shll
fildll
sbb
pop
fmuls
movsl
xlat
popa
fcoms
mov
popf
mov
insl
aas
fistps
xor
sub
xchg
inc
ss
lods
add
lret
out
xchg
cmp
aaa
cmp
fisttps
out
shl
jl
outsl
insl
or
aas
cmp
push
cli
loopne
popa
movsl
data16
jae
aad
mov
stos
push
xchg
push
mov
lock
xorl
cmp
in
pushf
dec
xchg
movsl
mov
mov
and
popa
imul
test
es
mov
mov
lea
fs
jo
add
inc
das
rolb
jmp
test
mov
and
sbb
lcall
mov
xchg
mov
mov
adc
ds
les
pop
jbe
dec
mov
push
inc
aam
in
mov
repz
lret
movsl
rclb
cmp
call
mov
cmp
add
clc
ds
sahf
push
sbb
add
out
jmp
jns
fwait
inc
add
js
ficoms
js
es
fnstcw
add
outsl
sbb
sarl
mov
pop
dec
add
divb
enter
push
aad
fs
lret
faddp
add
fisttpll
rcrl
movsl
movl
push
int
fdivrs
jnp,pt
xchg
fmulp
dec
mov
inc
in
pop
imul
enter
clc
lock
inc
add
pop
xor
repnz
cltd
outsb
iret
mov
xchg
cmp
add
imul
fidivrl
negl
fnstenv
leave
nop
inc
cmp
gs
sbb
je
rorl
lcall
or
mov
mov
sbb
out
xorl
subb
and
sub
lret
cmp
scas
ljmp
lcall
dec
push
loopne
and
stos
push
push
xchg
adc
les
repnz
icebp
mov
fs
arpl
adc
push
inc
insb
mov
ret
xchg
je
imul
mov
int3
jl
stos
out
mov
lret
mov
arpl
test
arpl
movsl
push
add
das
je
cmp
adc
xor
dec
add
pusha
add
dec
xor
iret
test
std
loope
push
xor
popf
sub
push
sbb
mov
ja
fisttpll
jne
out
ret
cltd
mov
dec
pusha
sbb
rcrl
cmpl
lret
pop
fnsave
mov
sti
add
sub
jnp
shl
jl
and
add
pop
imul
jl
rcrb
frstor
orb
addb
in
fildll
push
adcl
call
cld
or
cmp
pop
push
in
test
repz
inc
lds
mov
add
lahf
mov
xchg
xlat
fsubr
push
leave
enter
jmp
xor
dec
ss
pop
dec
inc
mov
mov
sbb
xchg
cltd
addr16
mov
fabs
add
faddp
push
lret
out
mov
cmp
push
jecxz
ficompl
sub
or
jmp
out
sbb
popf
sbb
xor
push
mov
or
push
pop
jp
jecxz
ret
mov
mov
xchg
dec
xor
inc
out
inc
and
xor
inc
pop
jnp
das
cmp
mov
push
mov
sahf
add
cs
movsb
dec
fs
fwait
aad
in
jmp
lret
mull
loope
pop
and
repnz
jp
pop
aad
iret
jae
mov
xlat
stc
mov
pop
sbb
jns
or
dec
jb
call
cwtl
outsl
call
mov
lods
fildl
pop
xchg
mov
gs
fldenv
pop
mov
shll
or
iret
mov
or
popa
repnz
test
jl
adc
and
lcall
imulb
mov
and
xchg
push
mov
js
mov
ljmp
cltd
cmp
mov
cmc
iret
pushf
push
hlt
mov
pop
not
jl
push
add
imul
rcll
sub
push
adc
gs
in
enter
mov
cltd
xor
cld
mov
inc
shl
or
pop
jg
cmpsb
cli
loopne
mov
push
das
lock
push
in
mov
fwait
adc
jo
addr16
mov
xor
lahf
and
add
mov
and
inc
mov
add
mov
rcr
in
loope
insl
lock
imul
test
inc
xor
and
lea
sbb
sub
insb
mov
mov
mov
sbb
pop
leave
insl
call
sbb
dec
mov
jb
cmp
in
fcmovb
push
scas
repz
and
pop
cltd
or
data16
call
hlt
jmp
sbb
lret
sbb
xor
insb
push
sub
repnz
mov
sbb
out
inc
daa
decl
xor
jnp
and
xor
cli
into
xchg
xchg
jae
xchg
filds
repnz
or
lds
int3
push
stos
arpl
inc
cmp
and
xchg
or
pop
ja
xor
and
fidivs
adc
sub
cmpsl
push
fs
or
jg
lret
push
xchg
jl
or
pop
in
insl
xchg
push
dec
aas
imul
pop
pop
adc
fcomip
inc
pop
pop
mov
icebp
pop
rcrb
pop
mov
popa
dec
xorl
lock
sbbb
push
mov
mov
out
pop
push
adc
xor
stc
and
mov
and
orb
push
dec
mov
incl
add
outsl
pop
ss
inc
pop
sbb
cmp
jmp
iret
mov
inc
dec
mov
jnp
addr16
pop
dec
jne
out
mov
aas
insb
mov
sub
cltd
pop
push
inc
mov
lret
xorl
dec
pop
mov
subb
cmpsb
sub
mov
pop
outsb
jmp
adc
aaa
les
add
in
sbbb
fisttpl
xchg
mov
inc
or
push
xchg
cld
stc
mov
out
insl
push
sub
shll
add
mov
bound
gs
sub
lret
push
fnstsw
or
cmp
call
cmp
or
pop
call
or
cmp
call
cmp
or
pop
out
sarb
mov
cmp
call
cmp
sub
sbb
or
cmp
mov
mov
mov
ret
clc
aas
incl
push
push
pusha
inc
jo
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
inc
xor
and
adc
add
int3
xor
sbb
sbbl
imul
stc
les
xor
and
adc
add
je
je
push
jns
fnstcw
mov
out
aam
shrl
lcall
insl
adc
sbbl
in
fdiv
jmp
cmpsb
mov
insl
jno
arpl
mov
jp
mov
nop
xor
lods
sub
mov
adc
cmpsb
xchg
inc
stos
std
mov
push
les
dec
xchg
dec
mov
pop
test
dec
sub
mov
dec
sbb
mov
movsb
push
incb
ss
push
pop
sbb
cmpsb
orl
push
dec
je
je
and
pushf
push
lret
imul
enter
sub
aam
mov
fcmovnbe
jmp
jo
mov
adc
dec
leave
pop
push
insb
mov
hlt
mov
lret
sbb
in
pushf
mov
mov
adc
fsubl
test
mov
add
jmp
xor
or
sbb
pop
jnp
or
in
cld
jmp
xor
push
insl
jno
popa
daa
jbe
add
call
nop
fsub
mov
mov
xchg
dec
outsb
repnz
cmp
add
rcr
int3
icebp
aad
mov
mov
mov
xor
and
jo
inc
or
pop
imul
test
hlt
ftst
jmp
xor
and
adc
add
je
imul
test
hlt
ftst
jmp
xor
aaa
adcl
pusha
addl
add
mov
loop
xchg
mov
pop
inc
cmp
in
into
aaa
xchg
imull
enter
ljmp
hlt
jne
add
pop
sbb
insb
out
or
in
mov
gs
and
xchg
dec
or
inc
cmp
lret
or
xchg
jmp
addr16
mov
repnz
in
jno
call
in
lcall
ljmp
cmp
shrl
pusha
movsl
leave
and
cmpsl
out
test
mov
add
in
or
pusha
rcrb
sub
iret
loope
or
xor
stos
mulb
jg
xor
cmp
adc
andl
fidivrs
in
adc
cmp
or
das
and
cmp
das
sahf
cmp
das
lahf
popf
mov
fstpt
fs
dec
cmp
dec
adc
fwait
cmp
sbb
cmp
jp
mov
fst
push
mov
bound
xor
or
fwait
icebp
es
add
out
xchg
mov
lods
lods
push
lds
sbb
xchg
mov
orb
add
imul
add
jno
adc
mov
or
pop
aas
mov
or
jns
negb
jnp
xchg
in
dec
aad
and
sti
push
imulb
jne
xor
ficoml
aad
or
sub
cmp
cmc
dec
push
js
push
repnz
insb
inc
ret
inc
inc
adc
addl
or
pop
mov
fnstenv
adc
dec
adc
repz
adc
push
sub
lods
inc
cmpsl
cwtl
mov
mov
lret
jae
dec
add
push
out
cmp
fmulp
pushf
pop
xor
sub
jns
cmp
sahf
mov
jg
dec
sahf
hlt
add
xor
nop
xchg
scas
ds
nop
inc
and
scas
or
iret
cmc
stc
fidivrl
fs
xor
lret
mov
mov
jl
jmp
out
call
sbbl
lret
push
mov
dec
mov
daa
push
inc
fidivl
and
adcb
out
shrb
and
sbb
das
xorb
mov
mov
cmp
cmc
xchg
shl
fmuls
push
mov
mov
inc
inc
jno
testb
or
mov
inc
cli
fnsave
mov
shlb
fwait
cltd
mov
xchg
mov
fsts
cmpsl
int3
push
pop
les
bound
pusha
or
push
in
mov
leave
sbb
push
cmp
sub
fcomps
lcall
jns
sarl
fucom
push
enter
lock
pmaddwd
pop
cmp
sub
fs
insl
lahf
scas
insl
js
push
xlat
pmaddwd
test
and
lods
dec
mov
pop
cmpsl
scas
imul
in
lock
jne
dec
mov
andb
popf
aas
pop
sub
mov
out
adc
fisubs
adc
xchg
mov
fpatan
hlt
loopne
cmp
push
lahf
xor
mov
inc
xlat
cmp
jb
sti
xchg
shrl
push
jmp
sbb
imul
mov
fs
pop
sbb
inc
lods
push
adc
gs
cli
imul
cli
rcll
or
test
mov
pop
cmp
stc
add
push
push
jae
enter
stc
sbb
or
pop
out
movsl
fnstcw
cmp
mov
sbb
mov
aaa
xor
sub
push
push
sbb
push
dec
enter
push
jp
aas
mov
sub
fmull
ljmp
inc
xchg
nop
in
test
fwait
out
mov
repz
dec
dec
jne
inc
inc
xchg
fnsave
in
and
in
cld
dec
and
adc
aas
sarb
pop
in
arpl
and
pop
lea
or
jle
xchg
popa
rorb
pop
test
sub
scas
mov
cwtl
xlat
dec
mov
xor
pop
loopne
push
leave
jb
les
shll
push
fwait
pop
sub
push
inc
and
mov
sbb
shrl
bound
je
jmp
repz
ja
scas
dec
or
leave
add
and
enter
inc
in
cmp
shr
and
xor
push
sub
sarb
inc
lock
push
pop
lret
pushf
adc
gs
pop
popa
pop
test
pop
mov
jge
addr16
test
addr16
dec
imul
decb
imul
adc
cld
xor
xchg
clc
icebp
pushf
or
push
jecxz
inc
inc
xchg
je
loope
into
dec
push
mov
and
fwait
pop
popf
jmp
jae
pop
mov
subl
mov
cmp
imul
insl
stos
mov
arpl
lret
dec
xchg
mov
scas
cs
lret
mov
mov
sbb
sbb
aam
xlat
pop
xchg
push
test
add
dec
jns
out
incl
sub
sbb
pop
das
push
push
pop
loope
in
popf
mov
adc
inc
mov
test
push
jge
int
mov
lcall
cli
scas
decl
cmpsl
xchg
aaa
push
rcrl
mov
inc
sbb
fs
and
or
push
out
pusha
xchg
cmc
cmp
rcr
sbb
outsb
mov
sbb
outsl
lcall
movsl
cs
inc
push
dec
and
les
mov
inc
sbb
sbb
and
lods
sbb
std
stos
inc
inc
jge
call
xor
jg
adc
pop
arpl
pusha
mov
jge
jb
ljmp
les
add
jmp
shrb
jae
loopne
cs
or
xor
pushf
mov
jge
daa
and
mov
out
cli
stos
sub
mov
mov
loopne
into
sbb
sub
sub
jnp
xchg
sbb
or
dec
and
int
add
je
hlt
jge
clc
dec
test
adc
cmp
cmc
in
xchg
pop
push
push
push
push
xor
arpl
fbld
cmp
aad
xchg
cltd
cmc
jg
push
mov
lea
mov
imul
hlt
ja
outsl
and
cmp
ds
push
pop
xchg
inc
nop
push
or
xor
sub
fst
in
gs
add
stc
and
cmp
negb
mov
cltd
inc
cmp
stc
dec
and
mov
jge
jae
movsl
push
pop
pop
jb
sub
xor
sub
stos
clc
sub
jmp
ss
jecxz
data16
andl
mov
fmull
into
pop
lcall
and
arpl
dec
push
xorl
xchg
sub
mov
or
aas
xchg
fistpll
push
cmp
pushl
lods
pop
in
lock
push
or
aam
movsl
or
inc
or
dec
jle
mov
popa
add
xor
mov
cwtl
sbb
jp
and
dec
repz
inc
hlt
push
jl
ss
imul
xchg
ljmp
mov
inc
xchg
leave
dec
jg
lret
sti
jne
push
clc
call
fistl
xor
stos
mov
inc
aam
daa
in
jge
insl
insl
out
adc
sar
xchg
das
test
stos
push
mov
scas
fdiv
das
popa
testb
ret
add
push
gs
je
aam
and
scas
xchg
fptan
jecxz
jecxz
int3
xchg
inc
addl
or
xchg
jb
pop
lcall
mov
negb
or
cmp
inc
repnz
push
dec
xchg
mov
push
xorb
daa
neg
xor
inc
enter
rcll
push
into
dec
cmpsl
adc
or
pop
std
or
xchg
repz
lock
pop
push
pop
shrb
mov
mov
popf
sbb
mov
mov
push
aaa
jg
jle
push
sbb
lods
in
cmpsb
insl
test
mov
sbb
and
jle
push
push
jg
xor
in
dec
push
andb
and
ret
pop
or
stos
lret
jl
inc
data16
or
mov
or
add
mov
lahf
xor
inc
and
outsb
mov
test
sbb
mov
or
sub
xchg
into
clc
imul
ret
cld
push
fcoms
cmc
xor
fidivl
lods
and
out
scas
std
push
stos
jbe
xchg
sub
out
pop
jmp
cli
add
mov
stc
repnz
xchg
or
enter
xor
sbb
dec
iret
out
test
negb
jo
mov
push
fwait
mov
xchg
inc
ret
mov
fiadds
jg
addr16
push
mov
scas
push
idivb
cmpsl
ffree
pop
hlt
out
and
mov
pop
inc
shrl
sbb
cli
pop
sbb
dec
decl
into
cwtl
mov
mov
repz
add
and
loopne
mov
shll
sti
lds
outsl
cld
adc
mov
adc
rcrl
push
aas
sti
scas
leave
jmp
sarl
push
push
outsb
ret
push
addr16
fistps
rorb
push
lods
icebp
sbb
mov
out
dec
mov
fidivrl
lock
adc
in
mulb
ljmp
adc
mov
xor
xor
shlb
mov
iret
adc
xchg
sarl
sub
stos
pop
insb
out
pop
mov
dec
faddl
fisubrl
cmp
iret
cmpsb
mov
push
mov
pushf
popf
dec
push
ss
imul
lods
lock
cmp
sbb
mov
inc
movsl
aad
cmp
sub
test
xor
cwtl
cmp
imul
in
xchg
mov
mov
lds
dec
pop
sbb
mov
fistl
std
inc
stc
in
testl
enter
loop
int3
cltd
mov
push
cmc
or
inc
xor
jle
shlb
pop
cmp
add
stos
jnp
hlt
push
adc
xchg
xlat
popf
jmp
sub
repnz
mov
fsubrs
adc
pop
popf
mov
add
mov
rorl
mov
mov
popf
mov
popa
mov
stc
in
mov
cmp
cli
sbb
lods
pop
stc
inc
push
flds
and
cmp
xchg
mov
xor
jns
mov
sbb
mov
and
out
or
push
mov
dec
int3
mov
pushf
lock
or
aam
pop
pop
test
sbb
push
stos
or
lahf
xchg
add
add
cltd
dec
cmp
cli
loopne
pop
in
je
out
sbb
mov
jae
pop
das
sbb
cmpsl
cltd
les
sbb
in
call
pop
loopne
lret
mov
push
mov
cmpsb
int
sahf
mov
add
sahf
shrb
pop
mov
push
xchg
leave
in
test
or
les
daa
pop
adcl
push
xchg
aad
fsubrp
cmp
cmp
loopne
into
test
out
mov
dec
pop
movsl
xchg
cwtl
jp
jecxz
mov
or
cmp
mov
mov
fs
dec
aad
cmpsl
jne
jmp
mov
push
push
das
mov
cli
test
outsb
cmp
cmpsb
pop
cmp
mov
xchg
sub
mov
cltd
insl
loope
sbb
shll
repnz
arpl
insl
mov
dec
adc
in
add
int3
testb
daa
sbb
fwait
insb
ja
in
inc
and
sahf
push
movsb
adc
cmpsl
mov
out
icebp
pop
dec
leave
aad
push
cmpsb
cmp
and
aas
sbb
jb
push
inc
hlt
jmp
enter
jbe
cmp
fs
addr16
imul
dec
jecxz
sbb
test
in
xchg
jp
call
push
pop
neg
cmp
pusha
shrb
and
cmp
sub
jae
roll
jnp
xor
cmp
push
ss
cmp
je
jg
pop
lods
scas
mov
aas
mov
gs
mov
rcll
outsb
pushf
cli
mov
inc
xor
jle
sahf
outsb
jo
shr
adc
aam
jb
lret
xchg
push
adc
pop
cmpb
xor
pop
fldl
mov
insb
outsl
jg
repnz
sbb
dec
mov
inc
into
movsl
aas
push
aas
scas
popf
xchg
add
lea
divb
pushf
xchg
adc
add
adc
jecxz
dec
loop
decb
es
fcomps
in
fcoml
inc
fisubrs
addl
sub
imul
ja
in
roll
xchg
sbb
xlat
sbbb
jae
cs
stos
xor
scas
dec
and
fdiv
mov
mov
jne
insb
ljmp
push
cld
aad
sarl
or
cmp
lret
flds
sub
push
cli
sbbl
imul
clc
idiv
add
scas
jne
and
dec
push
cltd
mov
sub
mov
lods
cmp
out
jl
movsb
xchg
daa
inc
push
mov
ljmp
inc
shr
sbb
jle
test
stos
nop
xor
arpl
push
mov
mov
add
insb
sub
mov
and
sbb
imul
and
push
out
sbb
mov
mov
popa
ja
dec
push
insl
shr
es
or
sub
xchg
xchg
filds
and
and
and
inc
dec
mov
aas
dec
aam
xor
xor
cmc
dec
flds
jg
fcoms
ja
out
adc
pusha
std
andl
push
pop
fwait
stc
jp
xlat
xchg
add
xchg
push
ja
push
rcrb
xchg
push
xor
mov
adc
cmp
fwait
int3
xor
jg
in
stc
pop
and
cmp
addl
jno
ljmp
addr16
sahf
aaa
pop
and
xlat
pop
mov
mov
mov
aad
sarb
pop
sub
leave
or
lcall
sti
sahf
ret
or
scas
loop
leave
pop
jns
fs
push
cld
xchg
gs
dec
cmpsb
adc
inc
or
add
jno
repnz
pushf
stc
adc
mov
dec
punpckhdq
sbb
jmp
mov
test
xor
adcl
inc
jl
mov
in
lcall
and
pop
mov
dec
in
or
jg
or
jne
cwtl
outsl
cmp
pop
mov
dec
sbb
icebp
add
pop
sti
pop
push
test
pusha
aam
push
sub
inc
cmp
cmc
jbe
insl
pop
or
ss
add
fimull
icebp
rcl
mov
mov
pusha
imul
add
lret
lret
mov
inc
xchg
fwait
and
push
fistpll
mov
dec
jle
xchg
mov
in
movsb
addr16
js
sbb
inc
dec
sub
daa
nop
xor
iret
lock
dec
nop
in
pop
lock
xor
out
test
inc
and
imul
jmp
push
je
adc
inc
outsl
inc
sub
cmpsb
push
jbe
cs
xchg
xor
shlb
loope
push
lods
shrb
dec
mov
pop
mov
push
pop
mov
mov
addr16
xchg
notb
and
mov
std
jae
add
pushf
push
inc
test
outsb
push
push
aam
mov
push
inc
movups
outsb
aam
in
jnp
movl
lahf
icebp
js
pop
adc
das
cltd
nop
lods
sub
sub
jge
cmp
pop
xor
in
jecxz
xchg
cltd
jge
cmp
push
data16
fidivs
popa
ss
xchg
aam
mov
sub
mov
xchg
and
out
jg
pop
xchg
dec
jg
les
ss
fldenv
fwait
test
das
or
dec
adc
and
mov
les
ret
push
rcrb
adc
pop
and
push
jnp
cmp
fcmovnu
xchg
test
imul
iret
inc
and
arpl
ja
out
cmpsb
popf
insb
loopne
sti
rcrl
sbb
and
outsb
inc
in
push
sub
fsubrs
pusha
enter
jge
mov
push
into
fstpt
dec
adc
dec
std
out
test
and
mov
xor
jb
int
rcll
loopne
shrl
push
jl
cmp
ss
jp
mov
lret
fdivl
mov
jae
outsl
push
dec
push
mov
adc
addr16
in
dec
es
nop
jl
mov
ds
add
sub
jg
cmpsb
sbb
dec
stos
pop
ljmp
inc
xchg
int
scas
add
lods
test
dec
shlb
bound
sub
adc
inc
fwait
mov
imul
rol
add
push
fcoml
xchg
mov
in
dec
jmp
pop
push
mov
sahf
dec
lock
lock
mull
sahf
icebp
xchg
dec
lods
notl
dec
lret
shlb
dec
cmp
and
mov
add
xor
test
or
mov
dec
and
arpl
xor
movsb
aad
and
test
xchg
lods
dec
in
mov
adc
pusha
lock
ljmp
outsb
push
cs
stc
js
pop
xlat
out
fld
jnp
adc
or
or
lods
push
lods
and
aaa
pop
int
inc
loope
stc
add
cmp
jmp
mov
pop
ds
add
add
jae
iret
sbb
pop
fstp
inc
cmc
jmp
scas
decl
lock
mov
xlat
push
arpl
movswl
cmp
sub
mov
stos
call
mov
push
lods
mov
push
pushf
sbb
test
ret
rorl
add
lods
pusha
mov
lods
jge
call
adc
xorb
sub
ret
dec
mov
and
sahf
sbb
pop
pop
mov
or
fcomp
cltd
bnd
lahf
jnp
je
pop
outsb
xchg
mov
mov
pop
add
filds
in
std
clc
loop
loopne
arpl
in
decl
and
data16
jecxz
jns
jp
in
mov
mov
and
add
push
fiadds
pop
rcrb
call
mov
mov
out
insl
iret
rcrb
imul
ret
adc
ret
ret
sub
cmc
cmp
loopne
mov
adc
inc
and
fldt
sarl
test
xchg
cmpsl
mov
jp
pop
out
call
push
push
pop
in
fisttpll
pop
arpl
pop
lret
sub
cmpsb
inc
push
mov
fld
mov
call
pop
push
push
fdivrl
pushf
stc
lea
inc
aaa
imulb
or
push
scas
adc
mov
fisubs
xor
pop
addb
push
pop
js
ret
fsubrl
and
inc
inc
or
ds
fs
lcall
xor
sbb
dec
insb
pop
xchg
cmpsl
sbb
dec
es
jecxz
iret
repnz
xchg
mov
dec
pop
and
xorb
xchg
jg
iret
cwtl
pop
jo
cmp
xchg
sti
jle
rcrb
jg
scas
popf
int3
push
aad
lds
push
mov
and
adc
mov
loope
mov
sub
cmpsb
mov
pop
ficoml
jo
ljmp
fisttpll
sbb
mov
loope
mov
lahf
paddq
cmp
mov
mov
mov
loopne
ss
jmp
adc
mov
sub
add
mov
push
sar
daa
in
xor
jno
jbe
outsl
xchg
push
pop
cs
push
push
nopl
adcl
mov
mov
daa
push
fs
lea
cmpsl
icebp
mov
gs
std
test
sbb
push
jp,pt
mov
pop
mov
dec
cltd
xchg
out
inc
lret
xchg
arpl
ret
and
fistpl
add
mov
pop
test
add
pop
loop
add
repz
mov
and
pop
fimull
adc
mov
push
mov
sti
inc
sub
jnp
jb
push
ret
shll
sarl
jns
es
add
cmp
pusha
xchg
xor
jne
pop
test
lret
mov
sub
pop
xchg
dec
push
inc
mov
push
sub
lock
add
cmpsb
cld
adc
xchg
cmp
mov
inc
leave
test
dec
cmpb
sub
shll
lret
cs
jge
sub
mov
int3
xchg
cmp
jmp
mov
pop
scas
mov
add
or
xchg
repnz
cmp
cmp
mov
js
push
paddw
xchg
xor
push
jns
cmc
pusha
mov
negl
xlat
rcrb
cmp
lea
cmp
push
dec
pop
in
and
adc
add
je
imul
test
hlt
ftst
jmp
xor
and
adc
add
je
imul
test
hlt
ftst
jmp
xor
and
adc
add
je
imul
mov
hlt
shl
ror
rclb
xor
add
je
imul
add
fwait
push
stos
push
mov
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
