mov
sub
mov
andl
andl
test
push
push
push
lea
jle
lea
mov
xor
cmp
jle
mov
mov
mov
cmp
jne
cmp
jge
mov
mov
cmp
jle
mov
mov
inc
cmp
jl
incl
mov
addl
cmp
jl
cmp
jge
xor
jmp
mov
sub
sub
inc
xor
dec
test
jle
lea
lea
lea
mov
mov
mov
sub
inc
add
add
dec
cmp
jl
sub
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
pushl
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
lldt
in
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
push
call
mov
mov
movzbl
sub
je
incl
call
call
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
bound
inc
inc
jae
arpl
stos
push
outsb
ja
pop
and
out
ret
shl
mov
mov
mov
inc
jae
arpl
adc
adc
xor
push
loop
bnd
ret
jecxz
loope
addl
imul
or
sbb
sub
cmp
rcl
loopne
mov
test
pop
adc
inc
push
cmp
rcrb
mov
not
loopne
imul
push
aad
mov
leave
mov
arpl
lock
cli
fcompl
jg
cmp
sub
fst
inc
ret
pop
popf
iret
sbb
sub
cmp
cwtl
loopne
enter
pop
shl
ret
rcrb
cmp
add
push
mov
dec
adc
adc
adc
and
push
jp
sbb
mov
jbe
cmp
cmp
or
repnz
xor
pop
lods
mov
js
lods
jmp
cmpsb
xor
jae
mov
mov
arpl
nop
movsl
mov
push
arpl
adc
add
xor
cmp
shl
fcmovnb
ljmp
subb
xor
adc
inc
adc
insl
pop
xchg
inc
xchg
mov
xchg
xchg
repz
cmp
sub
add
or
adc
inc
inc
push
adc
xchg
shl
push
jecxz
sub
clc
xlat
add
pop
aaa
and
add
xor
and
shl
ret
ret
jecxz
xchg
mov
xorb
inc
inc
jae
arpl
adc
add
xor
and
shl
ret
ret
jecxz
xchg
mov
xorb
push
fcomip
sub
out
sbb
cmpsl
out
mov
mov
sbb
or
dec
ljmp
pop
xchg
cmp
test
imul
inc
mov
inc
pop
inc
mov
xchg
xchg
inc
test
fldenv
scas
push
jp
jmp
push
adc
lods
int3
pop
and
bswap
negl
xor
jo
and
into
adcl
dec
aam
mov
test
bnd
inc
ljmp
roll
arpl
jnp
xchg
std
insl
stc
enter
jmp
jae
outsl
pop
and
mov
out
scas
stc
cs
fnstcw
cmp
or
stos
lret
mov
in
out
lret
jmp
cmc
clc
pushf
jmp
jge
test
mov
ja
xchg
cwtl
sub
mov
shr
fdivrs
es
mov
into
xlat
inc
loope
ret
pop
xchg
or
dec
and
and
bound
mov
insl
gs
jge
in
pushf
mov
out
adcl
ss
jbe
ljmp
stc
inc
mov
push
stc
rcrb
lds
ret
je
arpl
dec
in
push
sbb
push
ficomps
bt
scas
push
neg
push
test
cmp
iret
push
mov
xchg
repz
push
jno
cmp
and
aam
icebp
std
es
xchg
in
sub
cld
enter
xchg
xor
out
adc
inc
xchg
popa
jg
in
sbb
pop
sbb
mov
and
test
aaa
xchg
mov
xorl
cvtpi2ps
cmpsl
maskmovq
idivl
arpl
in
repz
imul
movsl
mov
push
push
aam
fsts
xor
and
mov
mov
jp
mov
jae
jmp
lods
outsb
add
sub
sbb
das
fmull
in
int
cmp
in
iret
adc
std
arpl
mov
outsl
adc
sbb
mov
dec
inc
call
call
fcompl
add
xchg
fidivrl
pop
out
sub
cmp
addl
loopne
sahf
adc
test
sarb
mov
xchg
mov
jb
sub
jns
test
cmp
test
dec
mov
mov
cmp
pop
ret
and
mov
xorb
popf
sub
aas
jg
add
jae
pop
shll
ja
mov
sub
ja
inc
sub
mov
in
xchg
ja
insb
jle
jbe
bound
sbb
mov
test
lret
daa
inc
adc
pop
ss
dec
cltd
movsl
and
push
jle
add
jmp
ljmp
mov
pop
mov
sbb
dec
dec
leave
jnp
jecxz
ss
pop
xchg
sbb
and
test
mov
stos
sub
xor
xchg
jnp
cltd
mov
fwait
cwtl
jo
sub
in
insl
popa
push
js
mov
inc
inc
mov
aad
repnz
mov
jmp
vmovhpd
mov
into
fimuls
add
loope
cs
xor
outsl
sbb
pop
addl
sbb
nop
clc
iret
jle
movsl
dec
lret
push
mov
jo
jbe
adc
fisubs
mov
call
daa
loop
push
sbb
out
fwait
dec
xlat
push
sbb
jp
adc
shlb
movsl
int
dec
or
jbe
dec
daa
shll
push
cmp
pop
rcll
pop
pop
jl
push
addr16
cmpsl
and
leave
and
jl
jbe
ljmp
js
fwait
test
and
cmp
pop
fstpl
popa
ja
cmp
int3
or
push
fcom
dec
stos
cmc
je
mov
pop
fsts
mov
lods
push
out
sbb
lahf
stc
lret
jp
loop
popf
push
mov
stos
fs
std
sbb
push
pop
pop
push
aam
iret
xchg
cmpsb
adc
mov
xchg
data16
pop
dec
pop
xchg
sub
popf
cmp
repz
xchg
push
xchg
pop
test
mov
imul
mov
dec
cmp
jbe
jl
pop
sbb
mov
and
or
push
lret
push
and
dec
aam
hlt
mov
aas
xor
in
pop
mov
or
loop
xor
cwtl
lcall
scas
cmpsl
clc
loope
jns
mov
lahf
push
jns
xor
sbb
mov
dec
pushf
stc
pop
jg
push
int3
xchg
hlt
ds
mov
mov
ljmp
cmp
adcb
pop
scas
iret
lods
jecxz
dec
inc
fisubrl
xchg
pop
fcmove
out
test
popa
lods
mov
cmp
lods
mov
mov
xlat
je
inc
mov
in
aam
popa
and
aad
push
cmp
mov
shll
pop
imulb
aam
out
and
sahf
mov
loop
xor
orb
cmp
shrb
pop
mov
mov
mov
mov
mov
iret
pop
adc
cmp
mov
jmp
pop
test
rolb
int3
hlt
lahf
lock
hlt
add
dec
pop
outsl
push
jge
sub
pop
pop
cltd
mov
aam
shll
test
fistpll
sbbb
mov
and
das
sbb
jmp
push
and
mov
lret
fcompl
or
icebp
pop
cwtl
inc
stos
fimuls
jle
jno
jp
add
cld
outsl
add
jnp
dec
jle
outsl
adc
inc
mov
in
inc
cld
dec
orl
mov
push
ss
jl
pop
pop
outsl
xchg
xchg
mov
inc
xor
push
lret
xor
repz
rcll
aaa
int
sbb
testl
scas
pop
in
pusha
cwtl
jnp
stos
outsb
das
repnz
mov
sbb
mov
inc
jnp
inc
hlt
jbe
push
mov
xchg
mov
mov
push
push
sbb
scas
xchg
adc
gs
or
dec
xchg
popf
push
fbld
push
adc
and
push
ljmp
gs
shrb
cmpsl
mov
cmc
jl
xor
stos
fstpt
sarb
mov
stc
into
emms
add
adc
mov
sub
sub
into
das
add
inc
addb
mov
incl
or
jl
xchg
inc
mov
inc
and
insl
test
cmpsb
adcl
test
dec
in
dec
shrl
std
add
jp
clc
inc
clc
sub
inc
data16
push
inc
dec
pop
jle
outsb
leave
xchg
mov
jno
xchg
lcall
inc
mov
mov
into
sti
mov
mov
pop
sbb
ret
push
cmp
outsl
xchg
and
outsl
add
adc
jo
inc
test
mov
loop
push
lahf
xor
push
jmp
mov
cmpsb
xor
das
decl
xchg
repz
xor
and
outsl
jmp
lahf
ja
roll
imul
lods
or
pop
jo
add
push
jge
lock
push
push
je
sahf
jb
movsb
xchg
in
or
xor
fwait
outsb
cwtl
jl
leave
mov
pop
fwait
jmp
int3
sub
hlt
sbb
shrl
push
cmp
ds
sbb
incl
fs
jge
leave
mov
push
ja
sub
add
adc
mov
je
cltd
jnp
xor
testb
addb
cmpsl
pushf
cmp
insl
outsb
sub
insl
nop
ss
aaa
idivl
pop
push
faddp
cmp
out
mov
cmp
gs
arpl
loop
aad
sub
jge
rcrb
lcall
mov
enter
and
repnz
lcall
adc
outsb
cmp
nop
ja
jae
les
inc
scas
ja
fsubs
mov
cmp
push
pusha
jae
iret
ret
pop
outsb
mov
movsl
jne
mov
push
or
xchg
mov
mov
jl,pt
aaa
jnp
mov
adc
jae
test
xor
pop
adc
aaa
daa
inc
vdivps
inc
sahf
adc
loope
fidivrl
jnp
mov
inc
xor
orb
inc
rol
lcall
sbb
mov
lahf
mov
cmpsb
jle
add
mov
stos
je
xor
pushf
cmp
sub
mov
insb
fildl
mov
sbb
out
mov
ret
mov
mov
jns
xchg
inc
inc
and
sahf
xor
push
daa
xchg
pop
jne
mov
cmp
jecxz
inc
mov
aaa
mov
adc
push
aad
ret
adc
sahf
mov
out
lcall
cmp
pop
jge
adcb
sti
xchg
jg
movb
outsl
xor
mov
cmp
dec
push
test
cmp
sub
jg
mov
dec
cmpsb
add
dec
rorl
enter
mov
mov
scas
rorb
mov
cmc
pop
or
or
fisttpll
mov
ss
aad
js
adc
push
fwait
inc
adc
stos
xor
pop
mov
ret
sub
jbe
mov
adc
adcl
inc
cmp
rorb
sbb
and
mov
jns
fldt
arpl
fnsave
adc
aad
add
or
mov
jmp
mov
insb
xor
nop
notb
mov
cmp
sub
nop
daa
xor
xlat
dec
and
or
adc
fdivrp
test
adc
mov
fs
sbb
fs
in
fwait
xor
cmc
jns
sub
sbb
inc
dec
push
leave
jmp
cmp
lahf
pop
sarl
xchg
and
clc
ja
and
enter
sarl
enter
and
and
cmpb
movsb
insl
out
js
fisubrl
xor
xchg
movsl
cmp
sbb
jmp
imul
xchg
stos
sti
mov
jp
pop
pop
and
mov
leave
lea
jmp
jo
pop
mov
lods
out
test
stc
arpl
inc
adc
das
push
adc
add
mov
xor
testb
pushf
ror
out
xor
loop
dec
fs
push
es
push
cli
inc
icebp
mov
pushf
cmc
xchg
xor
mov
rol
std
inc
lods
addr16
add
jbe
insb
push
pop
xchg
sub
push
gs
jo
fisubrs
inc
add
cmpsb
dec
scas
sub
sbb
out
jle
xor
adc
xchg
out
push
jo
adcl
jns
test
arpl
pop
out
jno
push
out
jp
xor
mov
inc
mov
in
movsb
je
popf
test
inc
mov
outsb
ss
mov
movsl
push
mov
push
mov
sub
dec
mov
or
xor
cmp
inc
shll
inc
mov
scas
sbb
fildl
js
iret
into
inc
xchg
cwtl
add
enter
jo
data16
add
xchg
jl
cltd
lret
add
int
jg
shll
iret
call
push
jb
add
filds
lcall
repz
jns
fiadds
jbe
lret
push
scas
push
jl
lret
aas
ret
and
fdivrl
addl
cmp
push
mov
sbb
insb
adcl
ss
mov
inc
cmp
mov
addr16
fs
pop
jns
xchg
aas
dec
stc
fisttpll
ja
faddp
lds
je
icebp
jnp
mov
in
and
push
fnsave
pop
xchg
lcall
iret
mov
mov
dec
cmp
stc
enter
cmp
and
sub
pop
xchg
and
sub
mov
sub
jns
jmp
dec
loopne
shlb
loopne
je
ds
rcrl
pop
jo
data16
mov
sahf
jae
das
jbe
sub
cs
nop
repz
xor
lret
fistpll
std
sarb
mov
aas
ja
jle
or
stos
pop
scas
jbe
leave
jb
push
sub
pop
dec
add
mov
mov
ljmpw
xchg
and
outsb
cmpsl
jecxz
adc
sbb
call
pop
add
mov
data16
mov
pop
xor
dec
mov
lahf
sub
aad
or
mov
jl
les
pop
dec
adc
loop
xor
and
lahf
shlb
xchg
cltd
mov
lcall
push
jns
fcmovbe
addr16
mov
push
pop
dec
mov
out
pop
mov
mov
mov
xchg
pop
dec
cmp
icebp
sbb
xor
push
and
jmp
adc
sbb
pop
or
in
out
ret
loope
pusha
jno
hlt
or
fsub
enter
loope
mov
mov
in
pop
ds
fisubs
dec
jecxz
js
mov
pop
ss
mov
xchg
jns
imul
pop
jno
inc
mov
or
mov
aam
mov
fst
dec
push
addr16
cld
int
movsl
gs
jmp
loope
les
push
push
rorl
cmp
cmp
xor
movsb
in
jnp
arpl
dec
pushf
out
sbb
addl
inc
xchg
popf
mov
adc
repnz
sbb
mov
sti
xor
jg
lods
push
xchg
inc
sahf
lods
pop
testb
pop
ljmp
das
clc
push
jmp
lret
xchg
xchg
push
and
stos
or
mov
cmp
scas
pop
xchg
or
repnz
ss
fsubs
and
rclb
subl
test
ret
cli
mov
lods
nop
repz
shll
inc
inc
shrb
xor
lds
and
mov
or
testb
mov
fcoms
fdivrl
mov
add
sbb
rcl
push
xchg
ljmp
leave
inc
add
push
sarl
icebp
jl
ss
cmp
dec
gs
xchg
sbb
lock
testl
int
add
out
idivb
lcall
add
aas
nop
lods
in
mov
sub
jbe
dec
flds
movsl
inc
mov
cmp
jg
aaa
je
add
xchg
pop
mov
sub
out
inc
nop
rcr
ffreep
and
mov
jl,pt
gs
out
mov
jno
fwait
icebp
js
xchg
shll
inc
fcompl
mov
jb
push
fidivs
jbe
es
insb
inc
xchg
rorb
shl
inc
push
pop
xchg
mov
dec
cltd
inc
xchg
aam
outsb
lods
fldl
xchg
inc
add
repnz
add
int
movsl
xchg
pop
adc
aam
lods
add
jbe
sbb
cmpsb
adc
mov
add
into
adc
jg
mov
pop
loop
adc
dec
sub
xor
outsl
jl
adc
out
jae
jnp
imul
xchg
and
mov
hlt
imul
int
enter
cld
data16
inc
pusha
idivb
mov
sbb
push
sub
notl
xchg
scas
add
gs
xor
ficompl
lret
jae
pop
mov
sbb
inc
pop
ret
ret
or
in
in
add
shll
ret
roll
aad
jl
adc
add
testb
pop
or
sbb
mov
dec
cmpsb
add
call
and
ds
push
push
inc
mov
pop
push
jmp
jg
mov
fisttps
popf
aaa
or
cli
xchg
lock
sbb
sbb
es
je
push
stos
jmp
arpl
jbe
cli
pop
sub
lahf
leave
cmp
cmp
in
negl
lds
shlb
pop
imul
movsl
pop
mov
lock
sub
pop
pop
dec
and
andl
loopne
lock
sub
icebp
movsb
pop
jns
add
cmpsb
xchg
pop
ret
pop
out
arpl
stos
dec
push
mov
mov
pop
ret
cmp
ja
loop
je
or
mov
sahf
test
stc
ret
sbb
mov
inc
cmpsl
jno
pop
push
push
inc
pop
or
pop
mov
cmpsl
xchg
adc
out
add
scas
xchg
xchg
push
insb
push
pop
mov
leave
insl
inc
xor
test
call
inc
mov
imul
in
mov
lods
lea
inc
cmp
sti
popf
inc
xor
sub
repz
pop
inc
xchg
out
aas
pop
aam
inc
xor
xchg
fcomip
push
pop
and
sahf
mov
cmp
push
sub
push
das
mov
into
xorl
add
mov
sub
sub
xchg
popw
pop
mov
hlt
clc
insb
stos
cs
mov
push
mov
xchg
into
in
add
jmp
and
inc
pop
js
mov
mov
outsb
addr16
mov
leave
add
inc
add
sub
dec
movsb
sub
loop
adc
aam
inc
jno
jge
sbb
pop
cmp
or
mov
mov
stc
jecxz
test
inc
stos
jno
mov
repz
mov
or
or
dec
mov
push
mov
jb
in
push
lcall
test
arpl
jae
fildll
add
inc
xorl
mov
cli
jle
cmc
mov
rol
add
adc
lea
jo
fstl
and
mov
ljmp
xor
pop
div
aad
ficompl
in
xor
inc
sub
sahf
clc
call
cmp
add
xchg
sti
and
cmp
insl
ss
dec
and
cwtl
jae
xorl
sbb
lret
lahf
fucomi
push
or
enter
insb
pop
jg
sbb
add
xor
and
iret
xor
ja
rclb
sbb
leave
pop
clc
push
pop
into
js
pop
sbbl
jnp
dec
xlat
mov
cmpsl
adc
adc
adc
mov
dec
jl
imul
fstl
dec
push
repnz
andl
and
enter
shr
loope
sahf
pop
imul
enter
rclb
ret
add
or
pop
mov
pop
mov
sarl
adc
mov
lcall
cmc
jmp
push
and
negl
or
mov
or
sbb
cmc
leave
dec
push
jl
out
cwtl
fisttpl
mov
pop
pop
add
lea
jo
pop
out
add
ds
xor
cmp
in
fcomps
icebp
cmp
data16
xchg
push
mov
ss
lret
jl
pop
mov
push
rep
jnp
ljmp
pop
push
sbbl
cwtl
lea
in
cwtl
push
xchg
into
push
mov
sub
lahf
xchg
or
fdivs
xchg
cmp
mov
dec
jl
jns
inc
and
sub
and
repnz
sti
popf
pop
lods
fisttpl
adc
sub
xchg
push
jp
pop
test
xrelease
xchg
sbb
cmp
in
pop
xor
dec
cmp
test
insl
sahf
xchg
sbbl
les
loope
push
pop
cltd
pop
sub
inc
mov
mov
shll
cs
imul
sbb
jmp
iret
jecxz
inc
pop
lret
sbb
pop
sub
mov
aad
call
ljmp
jp
js
xchg
out
and
sub
sbb
xlat
push
imulb
fldt
std
setbe
cmp
lock
sbb
mov
sbb
pop
inc
xchg
add
aaa
test
int
adc
int3
dec
cmp
push
jl
xor
jmp
pop
fdivrs
xchg
out
lcall
add
test
lret
push
sub
aaa
andb
sub
or
insl
cmp
mov
push
js
sbb
xchg
push
pop
fildl
push
into
add
push
lods
rclb
lea
iret
xchg
xchg
cltd
and
sti
packssdw
mov
cmc
and
fucomi
xlat
dec
mov
or
mov
sub
pop
test
mov
arpl
mov
ljmp
sub
mov
xchg
cld
mov
mov
inc
push
call
mov
test
popa
mov
scas
jno
jo
outsl
out
inc
mov
scas
sbb
js
lods
movsb
xchg
fdivrs
push
dec
jmp
out
mov
scas
jnp
mov
xor
push
adc
sub
mov
test
test
sahf
lea
imul
std
jbe
xchg
pop
push
insl
sbb
stos
sub
stos
lea
ror
adc
xchg
xchg
sub
out
or
pop
dec
push
xchg
and
lods
or
sahf
jecxz
mov
add
mov
ret
inc
adc
insb
dec
mov
sbb
cs
cmp
dec
cwtl
sbbl
into
addl
repz
repz
aad
mov
sub
flds
loope,pn
lahf
dec
hlt
insb
adc
adcl
enter
movsl
stos
stos
in
sub
adc
adc
push
hlt
sbb
enter
hlt
jbe
jo
pusha
push
in
arpl
jge
cmpsl
scas
push
popf
xor
sbb
loopne
clc
dec
daa
scas
jge
or
push
cmp
pop
aad
hlt
test
sbb
insb
push
mull
out
push
dec
xchg
aam
lret
xlat
mov
das
je
jo
pop
mov
ret
add
push
addr16
leave
aam
mov
xchg
es
incl
xor
dec
jns
js
or
imul
xchg
out
push
jbe
or
loope
lods
pop
dec
mov
sbb
pusha
ljmp
xor
sti
adc
mov
inc
sub
pop
shll
cmp
mov
mov
lret
mov
les
mov
lods
mov
fdivs
jnp
in
mov
xor
dec
xchg
or
xor
dec
call
std
mov
push
push
insb
add
sub
sub
shll
adc
adc
jg
mov
mov
out
imul
test
mov
punpckldq
jl
ljmp
inc
insl
mov
mov
xor
lahf
jecxz
out
pop
mov
or
and
mov
mov
or
adc
push
repz
pusha
inc
ss
add
adcl
jle
fs
lock
jl
jmp
cltd
mov
lea
add
loop
dec
mov
lods
mov
cmpsl
xor
ss
adc
xor
test
insl
lret
shlb
jnp
lds
lahf
rclb
mov
cltd
fdiv
or
in
inc
jns
mov
loop
sbb
inc
sbb
jle
jmp
aam
ret
and
es
fiaddl
push
inc
sub
pop
rolb
push
add
sub
jge
push
arpl
adc
add
xor
and
shl
ret
ret
jecxz
xchg
mov
xorb
inc
inc
jae
arpl
adc
add
xor
and
shl
ret
ret
jecxz
xchg
mov
xorb
inc
inc
jae
arpl
adc
add
xor
and
shl
ret
ret
out
xchg
mov
xorl
inc
inc
ja
arpl
adc
add
rorl
xchg
aad
cmp
jp
push
int3
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
xchg
xlat
jp
dec
neg
mov
out
ret
sbb
push
cli
addr16
pop
stos
pop
mov
push
jp
dec
negl
sub
outsb
inc
ljmp
pop
lds
mov
xbegin
negl
push
xchg
push
cmpsl
in
add
push
cltd
adc
pop
test
imul
xlat
adc
aas
test
sbb
dec
ret
lea
or
mov
aaa
stos
iret
ja
dec
loope
imul
jp
lods
sub
lods
dec
inc
pop
mov
jns
ljmp
jns
mov
pop
aas
imul
jg
fnstcw
add
lods
pop
xchg
inc
addr16
push
cmpsl
mov
mov
pop
jbe
xchg
xchg
icebp
inc
adc
push
es
stos
jg
daa
bound
xchg
lea
iret
fistpll
pushf
jg
add
ljmp
adc
cmp
pop
pusha
jg
push
mov
pop
ljmp
cmp
pop
push
cltd
push
mov
into
notl
sub
lcall
ja
pop
xchg
inc
daa
mov
hlt
cmpl
xchg
je
pop
ficoms
arpl
jg
lods
push
mov
lds
arpl
arpl
les
movsl
cmp
inc
sti
or
push
lods
es
xor
push
jmp
icebp
scas
cmp
cmp
xchg
cmp
ljmp
pop
stos
pop
mov
push
jp
dec
negl
sub
sbb
push
cli
addr16
pop
stos
pop
mov
push
lods
pop
jmp
imul
mov
jp
inc
arpl
scas
dec
sbb
sahf
push
push
shll
or
js
mov
jp
push
daa
sbb
xchg
movb
add
cmp
mov
push
insb
xchg
ljmp
adc
ja
dec
dec
add
pushl
sti
sahf
xchg
jle
outsb
mov
stos
jbe
adc
mov
cltd
jns
mov
fldt
push
movsl
or
cmpsb
push
mov
rcrl
ret
icebp
movb
push
pop
xchg
in
lahf
lahf
sbb
cltd
mov
push
xchg
popf
pop
aam
inc
out
push
les
rol
ja
xor
cmp
into
add
add
repnz
inc
cmp
stc
mov
cmpsb
xor
pop
daa
jns
roll
inc
pop
or
cmc
lods
inc
cmp
push
stc
or
push
cld
cmp
scas
stos
xlat
push
jmp
lret
lcall
aaa
arpl
add
add
lahf
dec
ret
xor
in
std
inc
sub
mov
sbb
add
popf
jno
imul
lea
jge
pop
xchg
cmpl
push
mov
dec
out
fisubrs
dec
sbb
cmp
arpl
lcall
mov
data16
cmp
xlat
mov
sub
rcrl
arpl
cmpsb
ja
and
lret
adc
data16
pop
jnp
icebp
jno
push
lret
mov
imul
cmp
jg
or
mov
cmp
adc
icebp
inc
ss
and
bound
push
xor
dec
outsb
inc
xlat
cld
pop
and
fldcw
inc
add
popf
test
xchg
je
mov
xchg
stc
cmpsb
cmp
in
into
arpl
sub
fstps
pop
jg
jecxz
cmp
sbb
cmpsb
add
add
insl
aaa
sub
in
repnz
pop
dec
test
jl
push
mov
ja
xchg
add
add
sbb
cwtl
int
fadd
test
je
dec
xchg
mov
and
setb
loope
call
rorb
xor
adc
into
fsubrs
repnz
jmp
pop
sbb
push
arpl
pop
pop
xor
sbb
mov
xchg
cli
xor
mov
adcb
cmp
inc
insb
push
sub
xor
cmp
sbb
mov
fisttpll
adc
push
lock
int3
push
jge
mov
jg
ja
mov
pop
xchg
jbe
loope
xchg
arpl
jb
stos
arpl
aam
cmp
sub
frstor
xchg
insb
aam
sub
stos
sub
loop
loopne
or
inc
xchg
cmpsb
loop
hlt
pop
mov
xchg
inc
dec
push
std
repnz
xchg
xchg
jns
subl
out
aaa
xchg
lock
out
jecxz
and
insl
add
or
dec
pop
hlt
pop
fstl
sbb
pop
pop
sbb
inc
pop
scas
ret
cmc
cmpsl
sub
and
test
pop
mov
test
jnp
dec
mov
xlat
pushf
xlat
fldenv
sub
imul
popa
and
fmulp
mov
mov
lods
ret
cmp
adc
adcb
or
es
aas
std
test
inc
sbb
dec
mov
cmp
je
rcrb
bswap
imul
add
cmp
or
mov
jo
icebp
hlt
cmp
add
movsl
stc
idiv
cmp
pop
jno
sub
sub
call
addl
ret
rcrb
mov
or
cmpsb
addr16
pop
xchg
xor
sar
jbe
xchg
test
or
xor
mov
scas
stos
outsb
xchg
jmp
repz
test
inc
xchg
mov
int
mov
xchg
mov
cmp
and
and
out
xor
lock
stc
cmc
mov
movl
in
and
or
std
cltd
dec
je
stos
fst
cmp
and
pop
pop
test
lret
mov
inc
xchg
add
mov
cmp
push
and
inc
into
inc
cmp
push
push
jge
and
add
sub
lods
and
insb
sahf
popf
repz
mov
pop
js
xor
xor
or
sub
mov
das
ret
out
mov
adc
inc
mov
jge
dec
movsl
sbb
jle
inc
outsl
mov
and
mov
call
add
adcl
xchg
jle
or
sbb
xchg
xor
jle
sbb
mov
cltd
sarl
mov
lods
dec
in
int3
jo
fs
lret
xor
push
imul
cmp
iret
jg
xchg
push
or
ss
adc
cmp
ljmp
out
mov
repnz
mov
jae
xchg
push
rolb
or
loopne
rorb
data16
lock
mov
and
js
mov
rclb
adc
shlb
inc
adc
iret
test
fbld
adc
test
repz
sbb
xor
mov
loope
cli
push
test
lods
popa
pop
or
or
adc
add
adc
lods
movsl
addr16
int3
push
push
es
inc
dec
pop
out
arpl
divb
or
pusha
sbb
push
mov
test
sub
dec
daa
mov
xor
jnp
mov
sub
out
int
add
dec
pop
popa
jno
mov
and
push
jbe
sti
mov
mov
rcll
pop
and
div
test
cli
xchg
inc
jg
popf
addb
repnz
push
dec
inc
popa
outsb
into
jge
jl
cltd
sbb
cmp
xor
stos
mov
push
xor
jb
push
cmpsl
imul
sub
mov
ss
mov
mov
inc
dec
dec
xor
pop
sahf
mov
leave
out
jmp
xchg
mov
inc
imul
inc
leave
inc
inc
or
movsb
jb
mov
mov
cmp
jecxz
ja
dec
pop
pop
int3
scas
cmp
sbb
xchg
adc
cmpsb
inc
fnstsw
imul
pop
or
and
js
or
je
sub
mov
xor
adc
loopne
mov
lahf
scas
loop
nop
cmp
cmp
ss
popa
dec
sbb
dec
and
stc
cmp
std
cmp
scas
sbbb
sbb
aas
add
jl
or
pop
clc
mov
outsl
fistps
bound
repz
mov
inc
push
test
adcl
adc
popa
call
leave
sbb
or
mov
call
shr
mov
lcall
mov
and
scas
movsl
add
imul
fsts
test
gs
psubsw
add
inc
sbb
or
cmp
fidivl
fsubrp
sub
jb
int3
popf
out
mov
gs
cmp
scas
pop
pop
fldl2t
ljmp
fs
fcoml
sbb
sahf
cmp
xchg
mov
push
pop
rorl
push
loop
out
inc
sub
or
cmp
mov
dec
mov
push
push
jg
or
jl
add
pushl
ficomps
jmp
cmc
js
fadd
sub
insl
sbb
repnz
mov
adcl
pop
mov
mov
cmp
push
out
push
popf
adc
sub
lahf
test
iret
ljmp
and
popf
clc
insl
and
fcmovb
sub
enter
cli
in
mov
in
insl
dec
clc
mov
shlb
fcoms
dec
jne
fcoms
sub
cli
in
jnp
pop
ror
xor
movsb
scas
mov
push
mov
fsubrs
and
test
mov
out
imul
mov
mov
push
dec
jle
sbb
dec
sub
lods
test
fcmovbe
sub
jge
cmp
push
cli
lods
mov
pop
mov
sub
nop
mov
push
mov
mov
cmc
in
sbb
arpl
shl
xchg
mov
jnp
lods
mov
ss
dec
insl
shrl
cmpsb
dec
add
out
mov
dec
mov
sahf
pop
in
movsb
inc
popf
pop
inc
in
fnstcw
test
mov
cltd
in
mov
sbb
jg
sub
cmpsb
into
hlt
mov
xchg
push
enter
aam
pop
rclb
test
popa
testb
cmp
and
scas
mov
mov
adc
adc
cmp
fwait
je
lret
pop
xchg
mov
adc
jecxz
out
pop
jp
add
xor
fwait
sub
mov
add
push
xchg
xchg
test
inc
dec
pop
or
xlat
dec
dec
pop
in
mov
push
pop
and
int
mov
ja
mov
jp
push
push
push
cmpsb
mov
movsl
fildll
inc
cmp
cmc
dec
add
xor
xchg
mov
adc
repnz
pusha
pushf
ja
mov
in
jnp
arpl
push
pop
sbb
fidivl
pop
dec
clc
cwtl
inc
lds
mov
fnstsw
mov
iret
adc
lods
lds
mov
call
lcall
pop
xlat
aam
divl
mov
filds
sbb
pop
jl
xor
sahf
xor
adc
dec
test
aaa
dec
data16
movsl
dec
ljmp
mov
xor
push
out
jg
insb
mov
sub
push
inc
xchg
push
shrb
add
dec
add
dec
fwait
enter
pop
fistpll
insb
xlat
mov
mov
pop
inc
iret
or
inc
mov
add
jns
or
adc
xlat
pop
out
sub
icebp
push
movsb
inc
dec
cmp
call
adc
pop
shll
hlt
xchg
das
insb
jmp
xor
jae
out
shl
lahf
or
inc
mov
cld
mov
mov
xor
xchg
mov
cmc
sub
jg
xchg
scas
mov
add
int
popf
xor
add
mov
into
les
add
mov
mov
aam
iret
pop
jbe
pop
sub
and
jb
xchg
push
fucomip
out
sbb
stos
pop
mov
add
ret
mov
pusha
push
inc
push
or
mov
hlt
lahf
lcall
fadds
mov
cmpsb
add
aad
daa
jg
mov
push
pop
mov
js
cmp
shlb
jns
fidivs
sub
sbb
imul
cltd
jmp
lret
mov
fcmovnb
dec
fsubp
dec
cltd
iret
cltd
cmp
mov
inc
clc
sub
xchg
cmp
js
mov
fsubl
dec
outsl
hlt
call
cmp
jo
xchg
rorl
cmp
inc
dec
pop
push
imulb
xchg
sub
sbb
loop
inc
outsb
add
sub
outsb
or
add
add
xchg
push
push
and
inc
jb
cli
or
xor
aam
pop
into
or
in
jns
lcall
add
loopne
cli
adcb
rcll
aam
adc
rclb
xor
jle
movl
int3
xor
and
mov
mov
and
js
addr16
aad
xor
inc
imul
cmp
pop
and
mov
fsubs
pop
lahf
or
inc
test
push
add
mov
int3
std
fpatan
lret
mov
repnz
mov
cmp
gs
daa
push
imul
ret
adc
in
pop
mov
ds
and
shrl
pop
mov
inc
imul
mov
pop
cmp
nop
ret
in
ficompl
push
pop
dec
subb
push
and
add
cmp
add
push
add
adc
cmpsb
xchg
or
ja
mov
pop
pop
ja
mov
lcall
cltd
lds
push
or
adc
adc
int3
pop
xchg
add
outsb
addr16
aam
or
sahf
mov
xchg
loope
pop
pop
sarl
jo
push
out
aaa
jp
lods
jecxz
insb
hlt
nop
rorb
sbb
add
mov
orb
lret
into
jno
aad
subb
add
movaps
xor
jae
mov
gs
xor
xlat
popl
ds
fsincos
add
xchg
jle
pop
xor
out
jp
addr16
push
mov
push
or
lret
jbe
cmp
push
jb
enter
inc
dec
lret
push
pop
jae
adc
fcmovb
sahf
sbb
inc
stc
push
pop
inc
out
xchg
int
inc
push
xchg
lock
lret
inc
push
dec
push
cmpsb
mov
jns
and
push
and
mov
xchg
jb
insb
sub
insb
jne
xor
xchg
cltd
push
jb
pop
and
sbb
adc
mov
or
adc
test
shlb
cmc
or
lret
es
and
add
daa
fstps
js
pushf
dec
fldcw
enter
out
xor
rcrb
iret
mov
inc
cli
fsubl
mov
popf
push
in
cmp
jo
mov
scas
iret
cmp
push
jmp
xlat
jae
loop
jp
stos
std
pop
lcall
lods
xchg
mov
lea
arpl
and
aad
shll
sbbb
pop
jle
pop
out
arpl
jbe
aas
sbb
fisttpl
ss
lret
inc
xor
add
stos
pop
mov
punpckhdq
cmp
jmp
cmp
add
addl
sub
mov
adc
mov
sub
aas
mov
mov
mov
cmc
es
leave
pop
insb
inc
inc
cld
push
adc
out
push
mov
es
xchg
jns
cmp
push
adc
in
ret
sbb
and
pop
and
push
les
push
push
imul
shr
repz
mov
xchg
jp
and
orb
outsb
pop
inc
mov
pop
test
loop
mov
es
daa
cld
cmc
scas
popa
lods
cmpsb
adc
mov
xor
push
popf
ret
int
insb
pop
mov
btr
xor
jo
movups
xchg
fisubrs
lcall
mov
xchg
mov
push
rclb
daa
js
pusha
xchg
cmc
test
sarl
ja,pn
push
rcll
int3
cmp
ja
cmp
xchg
fbld
xchg
in
cltd
push
pop
mov
nop
dec
addb
adcb
aad
adc
add
or
push
xor
and
push
mov
lret
ficomps
divb
sbb
jnp
push
xacquire
xchg
test
cltd
jp
sbb
mov
add
aas
xor
adc
sbb
stos
sub
xchg
test
sub
or
scas
sbb
mov
retw
arpl
push
push
int3
sub
jge
shl
imul
dec
mov
stc
push
adc
popl
in
cmpsb
in
cld
mov
mov
scas
cmp
je
push
imul
jge
ja
imul
out
mov
fildll
fcomp
adc
and
outsl
into
mov
inc
push
adc
push
pop
jo
aam
push
in
sub
push
sbb
adc
xchg
mov
adc
mov
or
addr16
push
out
inc
xchg
daa
jge
icebp
sub
subl
jns
rcrl
cld
fidivl
cmpsl
pushf
call
and
and
das
pushf
shll
fldl
lret
pop
and
ljmp
cltd
xor
inc
rclb
insl
push
je
push
lds
cmp
adc
rclb
or
xor
aam
jge
sbb
lds
xor
rol
test
adc
add
xchg
adc
add
adc
or
icebp
dec
sti
sub
loopne
test
mov
xor
xchg
xchg
pop
xchg
pop
aas
call
xchg
pop
das
mov
fs
dec
icebp
andb
test
fildl
xchg
mov
test
dec
mov
pushf
jp
mov
cltd
sarb
fbstp
enter
les
adc
cmc
push
adc
addb
roll
test
push
mov
add
cld
and
sub
lcall
xchg
into
add
fs
or
sbb
xchg
pop
sbb
scas
inc
xorl
insb
imul
xchg
js
ja
out
pop
imul
outsb
or
addl
ds
mov
cld
shll
std
fisubrl
rclb
daa
and
bound
sub
mov
repz
out
add
push
imul
jle
xor
cwtl
aas
push
inc
cmpsl
xor
lahf
push
pop
aas
cmpsb
aad
mov
icebp
ja
sbb
mov
icebp
pop
xchg
daa
and
push
test
adc
inc
dec
gs
popf
inc
loop
cmp
fidivrs
jo
repz
call
das
mov
push
fs
shr
push
stos
jge
push
cmp
jg
jbe
and
adc
xchg
lret
jge
lock
stos
sbb
mov
adc
lods
and
daa
fstpt
xor
add
jge
rolb
fisubs
fnstsw
fnstsw
test
mov
cmp
sbb
imul
popa
pusha
inc
das
lock
nop
jle
cmp
lods
call
sahf
cmc
xchg
or
mul
in
mov
add
repnz
fmull
jge
dec
sub
ret
sub
notb
pushf
mov
loop
rcll
scas
out
xchg
lds
adc
xchg
mov
adc
add
stos
addr16
mov
sbb
push
dec
leave
pop
lret
mov
push
adc
out
cmp
mov
or
push
push
inc
loop
cmc
insb
add
sub
mov
inc
enter
imul
push
inc
add
lret
inc
jb
mov
push
cmp
mov
push
cmp
repnz
jne
dec
cld
fisubrl
add
dec
and
insb
sahf
rol
ret
test
jbe
mov
mov
jns
ljmp
std
sbb
dec
mov
cmp
loopne
pushf
insb
jae
in
test
adc
add
sub
pop
hlt
sahf
jne
testb
test
iret
cs
outsl
push
iret
jl
mov
add
into
push
mov
sub
in
dec
dec
es
idivl
pop
insb
jl
mov
ss
jo
mov
adc
cld
ror
dec
ja
add
inc
clc
push
imul
mov
pop
or
dec
add
imul
lcall
out
xchg
add
sub
ret
xchg
rcll
mov
dec
mov
jg
add
bnd
sub
xor
scas
testl
dec
xorb
add
inc
pop
xchg
insl
pop
push
test
cmpsl
adc
adc
enter
mov
adc
jle
xchg
orb
pop
test
in
outsb
aaa
ss
jo
dec
sub
or
jl
stos
cltd
popa
mov
and
pop
std
insb
orl
outsb
sbb
and
xchg
cltd
jnp
push
aad
mov
insb
mov
imul
in
or
mov
mov
lea
js
mov
rolb
addb
mov
ret
daa
lahf
mov
pop
out
sub
clc
cmpsb
mov
es
hlt
rorl
in
cmpsb
xchg
jp
dec
push
lcall
pop
lea
push
ret
daa
jp
jge,pn
mov
ss
sub
xor
pop
jno
iret
gs
ds
inc
pop
out
outsl
ret
xor
pop
xchg
or
adcb
xor
adc
test
lods
pop
lea
mov
popa
push
xor
xor
pop
ficomps
pusha
mov
ss
inc
jecxz
mulb
push
ds
into
out
out
adc
sbb
fisttps
xchg
std
xor
loope
inc
stos
xchg
test
push
xchg
es
mov
loop
cltd
outsl
xchg
imul
fwait
loopne
mov
push
int
jg
cmpsl
add
mov
mov
or
cs
or
xorb
clc
das
data16
pop
cmp
sub
out
call
mov
xchg
dec
stos
in
sub
addb
in
pop
cmp
jmp
cmpsb
sbb
jp
shll
int3
push
xor
loop
gs
lods
movsb
sub
xor
mov
push
push
and
push
mov
test
pop
pop
lret
sarl
lock
in
and
rolb
jle
mov
xchg
bound
mov
jp
cmp
decl
int
or
ficomps
mov
outsb
jecxz
mov
stc
pusha
adc
sub
loopne
cmpsb
xor
lds
in
gs
mov
cltd
push
and
es
fidivrl
mov
dec
mov
sbb
les
into
out
cmp
fstpl
sub
pop
in
test
fs
xchg
sarl
xor
in
repnz
in
outsl
inc
addb
pop
stc
xor
sbb
dec
cwtl
loopne
ljmp
pop
test
mov
jl
mov
mov
stos
jg
mov
iret
loop
ror
cmpsb
adc
fcom
or
or
sub
mov
dec
mov
inc
cmpsl
and
shl
inc
popf
test
sahf
rcll
xchg
cli
xor
pop
xor
cmp
sbb
push
mov
fidivrl
rorl
jecxz
stc
sarb
sub
mov
mov
mov
mov
fimuls
popa
sbb
push
jmp
mov
adc
inc
jne
jbe
jg
fwait
or
and
add
in
jg
rcl
mov
mov
mov
fs
jno
or
fisubrs
xor
adc
hlt
mov
mov
mov
push
dec
cmc
sub
pop
push
fdivrl
mov
gs
scas
ss
or
sub
ds
nop
das
aad
sysexit
adc
cmpsb
clc
jno
inc
dec
xlat
ret
xchg
stos
inc
dec
dec
xchg
jge
mov
mov
sub
xchg
inc
adc
daa
mov
or
or
or
sbb
mov
out
xor
mov
mov
lcall
inc
imul
and
lock
dec
pop
jb
mov
lret
clc
clc
pop
lods
in
pop
outsb
mov
adc
xchg
pop
dec
mov
in
and
in
mov
mov
sbb
jp
negl
sub
sbb
push
cli
addr16
pop
stos
pop
mov
push
jp
dec
negl
sub
sbb
push
cli
addr16
pop
stos
pop
mov
push
xor
xor
pop
xchg
xchg
xchg
cmpsl
or
cli
addr16
pop
stos
pop
mov
push
jp
dec
negl
sub
sbb
push
push
int
ja
jo
lahf
inc
fdivs
gs
int3
int3
int3
int3
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
imul
dec
popf
jno
dec
jnp
adc
call
fstp
int
mov
cltd
lea
jns
dec
pop
pop
dec
sub
sbb
std
stc
in
leave
fst
int
rorl
lea
pusha
insl
push
pop
inc
dec
xor
sbb
xchg
scas
mov
cli
aad
into
incb
push
push
and
xor
cmp
enter
outsl
push
add
mov
push
test
call
add
enter
test
adc
rclb
xor
mov
data16
aaa
pop
dec
ljmp
pop
mov
test
test
lods
mov
cltd
xor
xorb
sahf
cmp
ja
repz
clc
adc
pop
es
add
hlt
cmp
mov
movsb
inc
ja
sub
enter
push
out
mov
jae
clc
cltd
loopne
dec
cmpsb
or
cli
adc
je
mov
mov
in
mov
cltd
cwtl
mov
pop
pop
dec
ds
add
rcr
ror
mov
cltd
in
jns
sub
pop
sub
inc
inc
pop
sbb
test
mov
sti
in
ret
push
sbb
or
cmp
dec
inc
push
cmp
je
imul
rcl
lods
dec
std
loop
cmp
sub
cmp
jmp
fstp
int
mov
cltd
lea
jns
dec
pop
pop
dec
sub
sbb
leave
fstp
int
mov
cltd
lea
push
add
inc
dec
cmp
xor
fwait
addl
mov
dec
pop
fnstsw
clc
xor
cld
mov
enter
sub
cli
cmp
repz
sbb
ret
lods
mov
push
mov
inc
pop
addr16
std
sub
jmp
or
sbb
mov
int3
fcmovnu
data16
icebp
clc
int3
fadd
scas
mov
nop
gs
add
leave
and
pop
ljmp
insl
jmp
sbb
xchg
stos
nop
xchg
pop
sub
shl
mov
je
sub
daa
pop
aam
cmp
sarl
pushf
xor
pop
int3
out
jno
popf
cs
pusha
stc
add
and
mov
stos
pop
cli
inc
or
icebp
mov
imul
push
push
pusha
shrl
pop
fidivrl
mov
xchg
adc
jb
xor
ljmp
fwait
jle
add
push
and
push
jg
fists
sub
aad
sbb
cmp
cmp
lds
jo
push
mulb
inc
ljmp
es
in
sbb
mov
adc
popf
add
xchg
adc
mov
and
imul
xchg
sub
imul
hlt
test
and
fmull
test
xchg
shlb
pop
aam
cmpsb
lret
aas
xchg
add
jne
mov
ds
hlt
adc
xchg
add
cmp
cld
fdivp
inc
dec
jmp
cmp
jns
lods
sub
sub
cmpsb
pop
push
or
outsl
js
outsb
pop
mov
push
imul
ja
and
dec
add
lods
das
lcall
jo
xchg
sbb
or
arpl
xor
dec
in
pop
or
test
sbb
and
push
hlt
fwait
sub
sbb
xchg
icebp
add
sbb
push
int3
inc
shrl
or
add
pop
jno
xchg
lea
mov
mov
add
lret
cltd
pop
data16
sub
pop
and
das
scas
adc
mov
add
and
mov
lahf
aas
cmpsb
pop
xchg
sbb
adc
xchg
pop
jne
scas
inc
xchg
aam
pop
mov
pop
jle
inc
aas
pop
adc
inc
aam
shll
jns
and
in
jmp
rcrl
sbb
dec
push
dec
mov
or
dec
xchg
dec
lret
jnp
mov
pop
adc
cld
mov
insb
loope
xor
lds
push
xchg
jecxz
jo
sbb
xchg
jno
jae
pop
dec
jge
jge
stc
mov
xchg
pop
cmp
loope
cmp
adc
or
inc
dec
mov
loope
mov
and
add
dec
loope
inc
add
xchg
pop
push
jp
mov
scas
push
iret
cwtl
pop
shrb
mov
inc
faddp
ss
and
xchg
cwtl
in
or
dec
xchg
stos
pop
pop
xchg
xchg
bound
jo
das
sub
and
push
ret
je
xor
jp
loopne
ficomps
and
mov
in
roll
push
mov
lods
lret
stc
repnz
jle
outsl
adc
sub
add
ja
int3
popa
ds
and
test
sub
mov
jg
sbb
fnstsw
xchg
cmp
div
jae
mov
xchg
mov
daa
mov
stos
lahf
pop
fsubr
inc
inc
mov
sti
push
xlat
pusha
adc
mov
jl
xor
rorl
scas
and
mov
push
pop
jecxz
push
lods
mov
push
ss
mov
mov
out
sub
mov
setae
mov
lahf
test
dec
mov
shlb
cmc
sbb
xor
mov
cmpsl
je
add
cmp
sub
mov
inc
pop
jbe
push
or
sbb
inc
jne
std
sbb
clc
sbb
cltd
mov
pop
popa
ds
sbb
jmp
lea
inc
sbb
mov
cmp
jle
and
icebp
add
stos
ja
jmp
xchg
mov
inc
stc
lock
sub
and
test
sbb
push
jp
sti
mov
add
sbb
and
sub
or
jg
mov
mov
rcrb
leave
add
jecxz
adc
or
test
or
mov
inc
inc
sub
mov
pushf
push
in
ljmp
xchg
xchg
repnz
dec
jmp
lret
fst
das
add
shl
sub
add
adc
test
pop
js
rolb
xchg
or
lds
jo
rcrb
stc
cli
repz
or
pop
daa
mov
mov
and
add
jle
lods
cmp
pop
cmp
add
sbb
and
pushf
loop
mov
cmp
mov
mov
push
jno
out
lcall
mov
sahf
mov
mov
xchg
and
test
cmpsl
and
out
jmp
ss
bound
xchg
lret
xchg
movsb
add
test
dec
out
sbb
test
mov
sbb
jnp
add
mov
mov
mov
fmulp
inc
jb
pop
or
pop
test
jl
adc
push
stc
stc
mov
add
pop
fldenv
lret
call
popa
dec
or
inc
orb
movsl
mov
hlt
addl
jp
in
mov
cmp
int3
mov
mov
or
cmp
lods
dec
sub
andl
cld
and
shlb
push
mov
mov
lea
lcall
ja
xor
add
mov
sub
aaa
push
push
fmul
fdivs
rclb
or
pop
mov
fidivrs
cld
adc
test
adc
dec
loop
fwait
xchg
push
loop
das
ja
dec
insb
data16
xor
andl
sahf
fdiv
outsb
inc
ljmp
scas
xchg
in
mov
mov
mov
adc
dec
fs
les
push
shl
outsl
jo
dec
pusha
inc
movsb
movsb
cmpsb
int3
mov
mov
lock
int
ljmp
addb
mov
and
das
fwait
add
test
inc
mov
dec
dec
jbe
xor
daa
sub
mov
xor
in
adc
xor
test
jmp
lds
add
call
ret
push
mov
lret
jle
call
cmpl
jmp
js
jmp
test
and
in
sub
xchg
mov
out
mov
mov
jbe
jge
inc
jb
popf
enter
ja
fildll
ficoms
pusha
pop
mov
add
sub
push
insb
xchg
add
add
mov
adc
enter
lea
cli
jbe
push
adc
sahf
daa
icebp
xchg
pop
and
add
insl
or
xor
lods
pop
cwtl
cmp
lods
mov
cmp
xor
jle
jnp
xchg
arpl
or
push
stos
fs
mov
add
jnp
cmp
mov
lcall
test
mov
aaa
call
ds
pusha
insb
sbb
adc
jmp
and
jle
dec
lock
daa
ljmp
mov
xor
lea
adc
xchg
test
mov
sbb
push
movsb
pop
sbb
push
xor
insb
bound
jns
hlt
jl
movsl
jo
jbe
stos
sbb
push
cwtl
push
sahf
push
push
icebp
fmull
mov
dec
pushf
xchg
jmp
arpl
cmpsb
adc
xchg
push
sahf
test
sub
mov
xor
xor
sub
add
xchg
dec
lds
insl
dec
pop
fcomp
sub
shr
shll
ds
push
push
sub
fcoml
push
mov
ret
cwtl
push
or
inc
lret
rolb
dec
mov
jns
fisttps
ret
loope
xchg
les
jl
fsubrl
addr16
lahf
inc
lahf
mov
and
pop
push
insl
repz
leave
xor
cmp
xor
jno
inc
mov
adc
push
adc
lea
sub
cwtl
push
mov
fcompl
and
push
cmpsl
xchg
out
mov
jmp
pop
adc
pop
adc
jo
push
adc
ret
xchg
pop
sbb
sub
mov
out
sub
outsl
out
push
enter
mov
xchg
xchg
cli
fsts
pop
movsl
xchg
lret
aaa
out
xchg
imul
inc
add
aad
aad
call
xor
jmp
lods
add
ljmp
icebp
sub
cli
insb
pop
pushf
mov
fcmovne
ficomps
or
adc
xchg
inc
clc
dec
scas
pusha
mov
fs
in
mov
negb
push
xchg
sbb
dec
fidivrs
ret
loopne
cmpsb
add
fsubrs
enter
lret
jnp
mov
popa
pop
mov
std
xor
pop
cmpsl
push
cmp
xor
sbb
popf
stos
mov
andnps
jns
fs
push
add
cmpsb
movsl
movsl
push
data16
jns
xlat
xchg
mov
pushf
movsb
push
aas
popf
adc
push
insb
xchg
cmp
incl
mov
xchg
cmpl
push
and
lods
pop
addr16
mov
add
mov
mov
push
je
into
mov
outsl
xchg
pop
pushf
dec
lds
dec
adc
test
ja
into
pop
test
inc
adc
imul
and
push
mov
ret
mov
add
push
or
sbb
cmp
or
scas
dec
fisttpl
mov
push
arpl
cmp
pop
jp
shlb
push
test
js
mov
mov
js
dec
push
inc
adc
cmpl
push
inc
jns
imul
fldl
mov
sti
xor
pop
std
jp
jbe
int3
adc
jge
mov
and
repz
push
mov
mov
cmp
movsb
imul
jae
mov
aam
jb
pop
or
and
xchg
sub
test
jno
leave
dec
in
mov
mov
sub
xlat
mov
sbb
pop
fsubrl
in
cmp
aaa
call
jb
pusha
adc
or
pop
lcall
outsb
lds
nop
push
mov
loopne
mov
push
mov
pop
and
out
sbb
clc
inc
enter
cmpsl
popf
jecxz
push
sbb
cmpsb
sahf
cmp
fldl
in
mov
and
cltd
push
clc
jb
daa
cwtl
pusha
dec
push
add
fnstcw
dec
stos
push
cmpsl
mov
adcb
or
sbb
fistps
out
and
lods
scas
fdivrs
mov
mov
mov
hlt
mov
add
adc
jb
push
orb
flds
cmp
fcompl
xacquire
fld
pop
es
add
mov
fnstenv
mov
rorl
mov
test
pop
mov
sub
rcrb
test
xchg
loopne
adc
push
xchg
inc
adc
push
mov
mov
lock
lock
mov
fsts
pop
jl
pop
stos
mov
test
lds
xchg
push
jno
ret
aad
pushf
adc
loopne
dec
jl
clc
xchg
sbb
mov
insl
jmp
imul
imul
xor
adc
aad
pop
fwait
lret
jb
mov
out
outsl
xchg
shr
and
out
inc
xor
cwtl
mov
mov
mov
mov
cmpsb
sub
das
xor
push
sahf
out
loope
pop
jp
lret
add
or
or
and
scas
js
stc
xor
jecxz
cmpsl
dec
pop
cmpsb
sub
mov
add
adc
fidivrs
cmp
mov
pop
into
std
fcomi
inc
adc
stos
adc
pop
or
dec
mov
ljmp
jl
roll
sbb
fnsave
insl
mov
dec
mov
lods
lgs
push
arpl
pop
cmp
mov
jnp
inc
fisubrs
add
mov
jmp
std
pushf
mov
dec
es
lods
sub
push
nop
std
push
fucom
ret
mov
adc
mov
aad
xchg
imul
push
and
xor
pop
ds
into
push
imul
mov
sar
jb
dec
cwtl
test
gs
in
call
cmp
adc
inc
add
mov
jb
mov
call
or
sbb
jmp
or
mov
pop
into
xor
int3
scas
dec
subl
daa
popa
sbb
int
and
inc
sub
xor
inc
dec
loopne
mov
sbb
xchg
xor
cmp
outsl
int3
addr16
sub
xchg
fisubl
xor
lods
int3
fstpl
or
popa
jno
or
inc
pop
iret
pop
cmp
popf
fwait
pusha
jbe
pop
xor
out
sub
not
xchg
nop
jno
xchg
sbb
loopne
push
adc
jmp
xchg
je
push
les
pop
fucomip
xor
popa
push
push
sbb
jl
jne
pop
jecxz
push
jge
iret
test
andb
sahf
stc
dec
jne
subl
and
adc
xor
pusha
inc
sbb
push
jnp
adc
sbb
jmp
sarb
or
stos
xchg
call
das
les
nop
pop
xor
or
mov
push
jb
mov
or
add
jle
out
inc
enter
fs
cmpsl
std
fcoms
add
int
lahf
add
sub
test
shl
rclb
pop
inc
lock
cmp
add
xchg
bound
mov
mov
inc
lahf
jo
cwtl
jb
add
jo
mov
lret
pop
add
mov
xrelease
inc
sub
sub
xlat
or
mov
in
enter
xor
jae
xlat
ret
add
mov
icebp
adc
aaa
pop
es
lea
icebp
mov
push
xor
sub
icebp
mov
das
and
jbe
mulb
push
lods
lcall
shll
pop
scas
push
cmp
dec
mov
loopne
xchg
sbb
xlat
pop
lret
call
pop
in
ds
mov
aam
fs
ret
sub
mov
out
jp
add
cli
and
cmp
sub
add
rcrb
mov
push
fldt
or
test
sbb
cmp
and
or
sahf
out
pop
xor
add
cld
jecxz
movsb
xchg
mov
imul
ret
fnstcw
dec
in
and
test
mov
insb
fdivr
mov
xor
add
clc
lods
adc
daa
int
rcrb
pop
jbe
pop
fdivl
imul
mov
fdivp
pop
and
cs
mov
popf
mov
xlat
sub
mov
mov
rol
aas
pop
mov
mov
jle
cmp
stos
icebp
xchg
add
repz
leave
push
rcll
adc
pop
push
adc
inc
xor
pop
ret
ja
jae
adc
out
in
xchg
stos
mov
sbb
mov
mov
push
pusha
push
pop
ljmp
mov
mov
adc
cmp
sbb
rorb
cmc
cmpsl
idivl
jns
mov
add
mov
cltd
outsb
or
adc
xor
lahf
xor
mov
mov
adc
add
jns
or
ror
sbb
xchg
lcall
cli
push
jmp
xchg
imul
xchg
shrl
cmc
xor
addl
nop
jbe
cli
push
cmp
mov
xor
cld
ljmp
inc
enter
xchg
mov
call
insl
mov
or
das
xor
pop
fs
and
jo
aad
push
lret
mov
mov
xchg
fstpt
jns
adc
xor
pusha
xchg
push
mov
jne
arpl
xchg
pop
pusha
nop
rclb
call
cmp
push
inc
adc
stc
addr16
mov
inc
pop
push
cmpl
int3
sbb
subb
push
jmp
xor
test
insb
nop
push
inc
repz
cmp
leave
sub
push
jg
fwait
jb
push
dec
out
testl
adc
push
or
push
push
adc
and
aaa
cmp
inc
or
subl
test
jl
adc
jmp
adc
push
sub
enter
rorl
add
fistpl
sub
enter
inc
xchg
notb
lea
lret
mov
pop
movsl
test
test
dec
push
jmp
jno
sbb
pop
fs
sbb
dec
sbb
mov
lret
or
mov
roll
popa
dec
ja
es
jnp,pn
mov
push
mov
adc
into
insl
or
test
or
dec
jp
andb
sub
stos
cmp
add
mov
sbb
adc
mov
xchg
inc
pop
test
addr16
insl
jg
test
inc
fmuls
in
pushf
pop
inc
mov
jne
push
out
jno
fcmovu
mov
das
out
push
cwtl
les
stos
mov
mov
insl
add
mov
cltd
cwtl
test
aas
or
sbb
push
fs
andl
test
dec
xchg
sbb
mov
inc
push
in
neg
in
mov
xchg
mov
mov
repz
test
notb
arpl
jmp
dec
loope
imul
mul
decb
xchg
jae
xor
dec
adc
clc
aam
lock
psubb
arpl
fwait
dec
inc
push
cmp
outsb
sarb
dec
and
pop
in
mov
roll
add
inc
ljmp
or
sbb
jbe
nop
jp
xor
fucomi
fwait
out
insl
jge
and
sahf
pop
subb
add
jp
hlt
rorb
out
pop
pop
jae
sub
js
stos
and
jmp
loopne
test
cmp
loope
xor
ror
nop
jl
jl
lods
daa
movsb
fs
inc
aas
pop
or
icebp
lahf
ret
fidivrl
and
aam
lahf
test
cmp
cmpsb
mov
jne
test
adc
mov
mov
and
fstpl
cmp
addr16
or
clc
pop
add
dec
or
mov
loop
mov
es
lods
mov
addb
push
inc
lcall
addr16
ja
idivl
xor
pop
out
dec
lds
inc
scas
lahf
jns
push
adc
pop
push
iret
xchg
lds
jmp
aaa
rcl
aas
inc
xchg
divl
xor
pushf
xor
mov
ljmp
inc
ja
je
inc
sti
pop
mov
push
lds
adc
mov
push
sbb
mov
lods
push
mov
xchg
cld
rorl
movsb
add
mov
push
push
clc
out
lret
pop
stos
xchg
fisubs
add
inc
fdivr
mov
dec
cwtl
test
cmp
call
mov
lahf
mov
dec
movsb
in
sbb
ss
out
jmp
mov
mov
mov
mov
icebp
xchg
sti
dec
adc
add
int
mov
ret
cmp
push
pop
clc
movsl
pop
inc
xor
es
in
loop
xor
mov
fnsave
popf
xor
push
mov
xchg
ds
or
adc
xchg
lahf
fwait
jge
and
sub
data16
adc
cmp
dec
or
or
push
cmp
fisttpll
or
call
or
inc
lret
cmp
xlat
rcll
adc
mov
mov
pop
ss
cwtl
out
daa
and
shl
ds
or
mov
and
mov
and
adc
jne
fimuls
and
jge
mov
sahf
aam
fnstsw
mov
loop
push
sbb
std
fmull
push
mov
ret
mov
addr16
repz
pop
sbb
inc
in
das
jno
aad
pop
mov
movsb
mov
lods
dec
sub
cmp
dec
pusha
jmp
cld
inc
sahf
xor
std
scas
sbb
divl
mov
out
fmull
jecxz
sbb
mov
adc
xchg
xchg
test
mov
lcall
rcrl
mov
cmp
lods
lock
cli
leave
pop
daa
int
arpl
push
and
cmp
cs
ljmp
xor
sub
push
pop
fildll
dec
adc
push
pop
cli
and
push
add
scas
xchg
loop
ucomiss
ja
stos
xor
mov
mov
xor
adc
lods
inc
movsl
cmp
or
dec
cmpsl
and
ficoml
mov
js
mov
push
imul
jmp
push
fucomi
and
rclb
andl
popa
idivl
imul
test
mov
popa
loop
dec
sahf
imul
aad
cmpb
add
sub
adc
pop
mov
mov
inc
fwait
inc
sub
dec
pop
js
xchg
xor
lcall
ds
mov
add
hlt
sub
pop
jmp
lods
jnp
sbbb
or
or
repnz
fisubl
push
pushf
popa
jae
push
mov
or
sahf
vmwrite
add
fimull
cmp
push
mov
repz
mov
cmpsl
xchg
test
cmp
fs
bound
or
std
xor
popf
dec
cmc
shlb
cmpsl
mov
lods
push
mov
mov
mov
mov
data16
adc
push
aaa
repnz
pop
faddl
sbb
push
popa
insb
mul
imul
cmp
ffreep
movl
lret
arpl
lcall
bound
mov
outsb
cmpsb
and
mov
pop
and
jl
xor
inc
cltd
imul
xchg
pop
push
cmc
cmp
cmp
jo
or
dec
push
inc
pop
dec
imul
push
shrb
jns
pop
jmp
jg
cmp
mov
lea
lcall
push
push
pusha
pop
mov
mov
pop
xor
pop
inc
fsubl
push
mov
pop
mov
and
push
hlt
icebp
scas
stc
popa
lcall
xchg
flds
insl
jecxz
mov
mov
das
sbb
fmuls
jge
dec
inc
pop
or
add
mov
jge
jno
fimull
and
ljmp
out
or
fucompp
mov
ljmp
lock
inc
jle
or
popf
les
je
pop
jge
popf
sti
stc
rorl
push
in
dec
inc
insl
inc
pop
pop
dec
sub
sbb
leave
fstp
int
mov
cltd
lea
jns
dec
pop
pop
dec
sub
sbb
leave
fstp
int
mov
cltd
lea
jns
dec
pop
pop
dec
sub
sbb
leave
fstp
int
mov
fwait
lea
jnp
dec
pop
pop
dec
sub
cltd
or
arpl
fnstcw
jbe
data16
int3
int3
int3
int3
mov
mov
xor
sub
jbe
xchg
lcall
push
idivb
mov
clc
inc
call
jbe
test
xchg
sbb
push
idivb
mov
clc
pop
call
insb
cmp
lods
je
or
sub
push
int3
jg
push
in
xor
xor
xchg
mov
sub
lods
lock
and
scas
ja
pop
int
test
in
xor
jle
mov
mov
inc
imul
lahf
jns
push
jae
popf
push
push
adc
push
sbb
enter
adc
idivb
mov
fbld
xchg
pop
ds
lods
imul
xchg
sub
fldt
inc
ds
idivl
ja
mov
lea
or
popf
jecxz
mov
scas
xchg
pop
or
dec
or
push
negb
add
cmp
push
pop
enter
fadds
sub
enter
test
cwtl
mov
inc
call
outsl
cmp
or
pop
out
xchg
stc
arpl
push
icebp
daa
loope
clc
adc
sbb
out
dec
out
sbb
jo
jns
push
fstsw
push
std
push
in
clc
xor
lcall
rorb
cmc
jns
push
mov
fldl
jae
inc
in
mov
call
jbe
xchg
xchg
sbb
push
idivb
mov
clc
inc
call
jbe
xchg
xchg
sbb
push
idivb
pop
cmpsl
and
xchg
or
loope
fs
jl
hlt
pop
and
xchg
push
jnp
sarb
out
inc
pop
or
leave
addr16
stc
add
xchg
bnd
cld
daa
or
pop
loopne
mov
clc
pop
sbb
pop
jbe
pop
xor
clc
xor
sbb
pusha
lahf
outsb
inc
adc
call
ljmp
or
fldt
pop
cmp
mov
xor
movsl
test
cmpsb
mov
mov
fldcw
pop
daa
leave
xlat
and
loop
lods
mov
repz
imul
jne
bound
fdecstp
hlt
pop
les
lret
lahf
push
xor
cmp
inc
sub
sbb
shlb
mov
and
outsb
in
xchg
xor
icebp
das
xchg
sti
xor
ljmp
pop
jne
aas
outsl
loop
jmp
dec
dec
mov
addr16
inc
and
and
or
inc
jmp
aam
push
inc
cli
stos
pushf
rclb
bound
call
pop
les
shlb
and
js
lahf
mov
shl
addr16
dec
sbb
push
or
jmp
add
fidivl
sub
lret
and
pop
in
sub
jo
mov
adc
xor
lds
jae
fcompp
mov
cld
lahf
xlat
xor
pop
cwtl
js
cmpb
scas
stos
out
xor
das
inc
lds
push
xor
inc
jo
cmp
test
jp
and
push
xorl
mov
add
incb
sub
cmp
jle
fmull
mov
push
xor
jb
mov
and
iret
sti
push
pop
pop
rcl
fs
push
test
xchg
stos
sub
cmp
adc
test
bound
dec
popa
xor
inc
je
jne
xchg
in
ds
ljmp
fs
jbe
test
in
addr16
stos
sbb
sub
xchg
cmp
sub
sub
fimull
fldcw
pop
aam
jno
adc
dec
mov
mull
jg
out
pusha
gs
sbb
test
stc
jae
pushf
mov
fcoms
imul
imul
push
aaa
and
xor
fcmovnb
mov
jmp
sub
xchg
dec
or
jmp
stos
insl
loop
popa
aaa
into
fwait
sub
aas
sbb
les
push
fldcw
popa
dec
out
outsl
bound
and
add
cmc
stos
mov
jo
add
mov
push
mov
adc
mov
push
test
outsb
cld
push
insb
rcrb
dec
clc
mov
test
outsl
jne
jge
jecxz
pushf
inc
pusha
icebp
dec
jb
xchg
popa
jbe
sub
out
sbb
andb
insl
es
lahf
nop
je
loopne
int
jae
adc
mov
popf
xor
adc
out
cld
dec
sub
in
mov
sub
adc
xchg
inc
mov
mov
fs
dec
sub
add
or
mov
mov
insl
push
fcom
les
cs
mov
mov
push
or
std
mov
scas
leave
lahf
adc
push
sub
mov
add
insb
pop
pop
inc
das
xor
or
test
jge
andb
hlt
mov
movsb
loope
add
outsb
and
sub
sahf
push
into
dec
mov
and
mov
fimull
in
lret
lds
stc
sub
lds
dec
popa
xchg
imul
cmpsl
sbb
je
hlt
dec
mov
jmp
rcr
bound
fnstenv
add
stos
aam
dec
mov
push
div
dec
ds
inc
push
clc
or
nop
loop
jae
test
xchg
add
orl
call
sarb
ljmp
loopne
mov
sarb
xor
insb
and
mov
jb
push
push
ds
int
das
imul
outsl
sub
mov
xor
enter
jns
js
aas
jecxz
sbb
mov
aas
push
outsb
out
mov
pop
add
in
and
adc
cwtl
popa
pusha
jno
adc
cmpsl
jmp
int3
dec
pop
fnsave
hlt
pop
lods
dec
xor
js
lds
movsl
jmp
outsl
sbb
decb
mov
xchg
dec
mov
push
or
add
cmp
jp
push
outsb
test
lock
mov
ret
push
inc
lods
adc
mov
dec
mov
and
testl
dec
jnp
sbb
mov
mov
push
data16
adcl
push
push
or
adcl
pop
lds
mov
jl
sbb
xchg
push
cltd
jecxz
and
insl
xchg
test
cwtl
bswap
mov
mov
lea
push
iret
sbb
adc
in
add
push
mov
test
jb
lock
and
sbb
lcall
mov
mov
mov
int
jbe
insb
es
fxch
scas
in
ret
push
iret
adc
sti
inc
lahf
cs
or
xor
shl
xchg
dec
loop
leave
jnp
shlb
rcl
add
push
dec
xorb
fdivs
inc
movsb
aad
push
or
fsubl
sahf
jp
movsl
sub
cli
push
mov
cmc
or
mov
or
push
scas
sub
add
dec
push
aad
int3
xchg
inc
cmpsl
adc
sahf
es
js
push
dec
sbb
aad
aaa
rclb
mov
and
inc
cmp
and
int3
es
add
cmp
movsl
jl
stos
jae
fs
mov
mov
mov
and
gs
out
mov
lret
icebp
adc
jg
call
mov
test
pop
xor
add
int
fbstp
fisubs
or
ljmp
mov
xchg
xor
pushf
push
call
jns
xor
sbb
ficoms
test
imul
out
jno
pusha
xchg
clc
insb
push
lret
mov
out
sarl
lods
rolb
inc
shlb
adc
lret
jge
jl
ja
mov
shl
es
xchg
sub
push
or
lret
xchg
in
adc
add
rorl
mov
adc
lcall
je
pushf
push
lea
sti
jnp
in
dec
or
xor
mov
mov
outsb
popf
rclb
pop
xor
lds
arpl
fistpll
clc
xchg
add
jns
cmp
ss
std
movsl
mov
xor
jae
sbb
mov
xor
std
add
adc
or
push
push
mov
mov
aad
inc
mov
iret
ret
push
imul
and
cmp
insl
mov
pop
stos
aad
gs
inc
push
add
pop
inc
dec
cmp
int3
jmp
out
inc
insb
or
jl
cltd
rcrl
cs
hlt
pop
stos
xchg
mov
arpl
inc
testl
jne
mov
pop
mov
sbbl
and
mov
mov
jle
sub
outsl
mov
xchg
shll
scas
xor
sub
in
mov
ret
scas
test
popa
inc
stc
lea
ds
js
xchg
and
ret
adc
push
sbb
sahf
mov
xor
cwtl
aaa
jp
mov
int
addl
movsl
mov
cmp
cmp
test
dec
es
xchg
ss
mov
push
jecxz
cmp
jle
shrb
add
lcall
shlb
mov
mov
pop
rolb
lret
pop
repz
mov
dec
out
imul
jnp
or
ds
adc
add
sbb
mov
sti
and
jge
jg
sbb
dec
and
loop
xchg
int
lods
fiaddl
nop
and
popf
ret
fs
jg
xchg
lea
insl
sbb
sarb
stos
pop
or
push
cmp
jg
ss
iret
dec
push
jnp
xor
and
clc
push
mov
sub
cmpsl
push
mov
cld
outsb
cld
ja
das
pop
inc
ret
ret
fwait
out
cmp
inc
fdivs
test
jne,pn
sbb
imul
mov
push
or
fisubrl
ja
aaa
pop
inc
cmp
xchg
rclb
inc
movsb
pop
jecxz
adc
push
pop
std
hlt
in
jg
testl
popf
inc
std
cmp
or
aas
cmp
cltd
lods
or
ret
lret
arpl
push
in
inc
sahf
push
jecxz
fstpt
push
push
pop
mov
and
cmova
inc
std
xchg
xchg
add
mov
adc
les
mov
adc
adc
pop
int3
xor
arpl
pop
jp
xor
insb
xchg
sub
in
adcb
cli
das
jmp
cmp
jle
cwtl
lret
lret
and
jge
or
rol
dec
popf
jl
jns
jae
lret
mov
daa
ret
fchs
add
sbb
fs
xor
jnp
xchg
fcompl
adc
xor
sub
xchg
sub
adc
dec
iret
push
out
inc
out
jecxz
stos
cmpsl
or
xor
bound
sub
or
lods
dec
sbb
push
jnp
das
xor
or
scas
pop
dec
and
mov
fldl
add
adc
or
inc
jle
es
cmp
pop
arpl
subb
and
fcoml
jge
lcall
into
mov
xchg
xchg
mov
pushf
stc
pop
mov
xor
and
mov
lret
in
pop
jl
sub
push
jp
sub
sub
push
mov
jo
and
popl
je
leave
sub
test
push
mov
jl
xor
sub
lods
mov
xor
orl
sbb
lock
adc
pop
out
imul
cld
lea
add
insb
dec
xchg
jg
popw
push
fld
imul
dec
jmp
fbstp
nop
and
mov
sbb
cmp
inc
cmp
cmp
cli
or
out
pop
inc
outsl
xlat
jne
in
mov
das
mov
mov
pop
jb
jecxz
sub
in
and
rcl
jmp
insb
fdivrs
inc
out
push
fnstenv
int3
test
add
out
jns
push
pop
cvtps2pd
scas
pop
pop
push
mov
pop
cli
lahf
jo
mov
mov
popf
fisubrl
dec
fistpll
inc
pop
test
xchg
imul
scas
loop
push
pushf
popa
mov
add
inc
ja
aad
faddl
mov
lahf
les
push
inc
adc
mov
lods
stos
sub
cpuid
orl
inc
das
push
mov
mov
sahf
pop
fsubs
into
dec
and
sub
and
je
xchg
ds
mov
mov
sbb
data16
aaa
aaa
rolb
cld
and
sbb
mov
dec
insl
ja
push
cltd
jge
adc
jns
popf
dec
pop
repnz
lcall
imulb
enter
lahf
cmpl
jo
and
mov
add
lods
jae
shlb
cwtl
rolb
les
add
jne
mov
iret
out
subb
mov
xor
push
pop
lret
mov
xor
jmp
fiaddl
mov
cmpsl
cld
push
pop
cmpsl
outsb
icebp
lcall
das
pushf
stc
ret
inc
ret
xor
lea
cmpsb
mov
mov
mov
cmp
xchg
mov
clc
shlb
gs
mov
cli
sbb
sbb
jno
fwait
or
je
loop
and
adcb
fdivs
mov
mov
inc
mov
andl
ret
gs
mov
movl
sub
push
adc
rcrl
lcall
es
nop
sysexit
cmp
cmp
test
inc
movsl
jp
ret
pop
rolb
inc
and
sub
mov
push
mov
shr
pop
aaa
xor
popa
jae
add
mov
dec
cmc
mov
dec
inc
inc
lea
jae
dec
inc
or
es
or
dec
cmc
adc
bound
sbb
orb
pop
js
aam
push
je
xchg
jle
push
xchg
daa
repnz
lret
adc
pop
xor
mov
cs
jp
dec
popa
xchg
in
in
dec
jl
rolb
or
test
sbb
xchg
jns
jb
rcll
jbe
fidivrs
loopne
push
ss
sub
push
movsb
bound
sub
pop
sbb
ret
mov
cltd
sahf
add
adcb
pop
jb
add
xor
jmp
sub
or
push
test
add
ret
push
fmuls
out
push
fbstp
mov
jo
testl
cltd
jge
or
cmp
dec
mov
sbb
jbe
aad
jle
shlb
flds
cli
test
pop
imul
inc
jnp
jge
ret
in
test
push
sbb
cmp
fistps
add
xchg
xor
test
xor
cmpsl
mov
cmpsb
mov
or
cmpsl
les
sbb
xchg
iret
jo
add
sbb
mov
xchg
xor
push
rcll
ret
mov
ficoml
fstpl
daa
call
sub
cld
xchg
enter
xchg
sbb
in
jo
cmc
cmp
or
mov
pop
mov
and
push
cmp
outsb
dec
jmp
mov
mov
fs
pop
xor
cmp
mov
jno
sbb
push
xor
mov
push
jmp
mov
pop
mov
dec
xor
test
icebp
dec
fisttpl
or
cmpsl
mov
sbb
jo
add
or
movl
push
in
das
ss
adcl
adc
cmp
jae
aad
push
pop
int3
scas
mov
ss
lock
push
mov
mov
mov
pop
punpckldq
jo
mov
stc
ret
add
loope
push
or
cwtl
xlat
mov
das
aam
cmp
inc
lea
movsb
xchg
add
cld
dec
nop
mov
sub
ljmp
call
sbb
pop
std
sub
loop
stos
js
rcr
in
ja
adc
adc
into
jge
push
in
stos
or
push
lret
xor
or
push
ljmp
inc
ret
and
mov
mov
jae
stos
andb
or
jns
movsb
xchg
popf
xor
push
test
pop
mov
ss
adc
cltd
in
lret
in
icebp
in
xchg
int3
aam
aas
and
mov
imul
push
xchg
das
pop
mov
js
mov
aad
cmp
fadds
test
rol
adc
cmp
js
cmpsb
jle
adc
ret
sub
imul
scas
stc
sbb
push
sbb
aad
jg
mov
outsl
xchg
sub
mov
push
mov
and
push
xor
pop
sbb
jle
sbb
xor
in
xchg
enter
enter
mov
pop
ret
xlat
je
into
pop
pushl
add
jnp
adc
adc
mov
test
loopne
lret
or
dec
imull
jg
fsubr
add
fiadds
cmpsl
inc
adc
cwtl
mov
jno
xor
ucomiss
pop
jno
shll
push
fdivl
push
out
lods
lods
aas
aad
shrl
push
mov
cmp
mov
addl
sub
dec
inc
mov
jb
jle
add
mov
and
js
jp
rorb
push
mov
jecxz
mov
lcall
mov
xor
mov
lahf
pop
push
pushf
pop
popa
sbb
sbb
mov
mov
cmp
mov
cmp
ret
data16
cs
mov
imul
aam
mov
in
mov
adc
xor
out
std
clc
les
shll
addr16
subl
adc
xor
jne
mov
jge
cmp
in
pop
nop
mov
and
or
sub
mov
shll
mov
into
mov
loope
push
mov
daa
cmp
ja
cmp
nop
jb
rcll
dec
inc
les
push
cwtl
cmp
shr
dec
addb
dec
data16
pop
inc
roll
xchg
arpl
lock
adc
cmp
jnp
inc
fcoms
cs
jmp
sbb
sub
ret
test
icebp
mov
and
ds
and
mov
and
sahf
push
adc
arpl
iret
xchg
push
not
fimuls
aas
in
add
pop
std
push
xlat
lret
or
jle
xchg
xor
xor
and
aas
dec
rcll
pop
and
enter
cmc
leave
adc
aam
inc
ljmp
jmp
sbb
push
push
outsb
jne
dec
inc
incb
rorl
shlb
add
jle
inc
popa
jns
mov
pop
pop
aas
in
out
sub
sub
outsl
inc
push
das
xor
movsl
xor
sub
xchg
stos
push
das
mov
adc
shrl
iret
xchg
lods
fstl
stos
pusha
das
push
imul
inc
pop
out
dec
inc
sbb
aaa
cld
es
dec
xor
lods
test
xor
pusha
or
pop
enter
push
movsl
add
rolb
in
mov
add
lcall
je
inc
rorl
in
cmpsl
adc
in
shl
mov
mov
or
aaa
rorb
sti
out
mov
das
aam
rcrb
sub
arpl
pop
mov
lods
outsl
jo
bound
lods
test
rolb
hlt
aaa
push
add
and
popa
ret
adc
pop
mov
jno
mov
ljmp
jmp
jno,pt
and
cmpsl
out
inc
pop
sahf
fidivs
roll
jp
inc
cmp
mov
xor
mov
outsb
mov
jbe
mov
je
mov
xchg
xchg
je
fucomi
enter
loope
test
dec
xchg
mov
mov
or
mov
jg
pop
inc
dec
je
out
lcall
add
in
adc
sarl
xor
ss
pop
js
arpl
popa
add
pop
aas
cmp
xor
imul
loope
gs
add
add
jp
stc
into
inc
flds
ror
sbb
sbb
mov
inc
daa
add
adc
fisubl
sti
rcrb
clc
sahf
loope
out
sbb
cmp
out
jmp
jp
push
insb
insb
and
pop
cmpsb
sbb
xor
insb
loope
xchg
out
sub
mov
jl
pop
pop
inc
xor
ljmp
mov
lahf
int
push
push
stos
cld
mov
pusha
mov
mov
mov
dec
ret
fbstp
sbb
ds
insl
popf
je
inc
and
push
and
mov
rolb
mov
mov
stos
and
ds
sbb
sbb
add
sub
jnp
xchg
jno
fwait
test
dec
xor
pop
inc
jno
sahf
push
orb
ret
sub
das
adc
jbe
addb
or
mov
xor
imul
fiaddl
push
nop
pop
mov
or
aas
cmp
aas
sub
mov
or
and
dec
xchg
mov
or
out
imul
sub
mov
popa
fwait
mov
dec
inc
mov
mov
rol
mov
in
jbe
cmc
jg
cmp
jno
mov
in
mov
dec
das
bound
and
out
lods
rclb
insb
xchg
fs
mov
and
shl
mov
and
fneni(8087
mov
add
cmp
fs
pop
test
insl
cli
inc
xchg
jo
dec
je
movsl
dec
add
test
or
hlt
pop
inc
repz
cs
sub
cmp
popl
aaa
aaa
nop
or
pusha
push
add
ss
mov
popf
push
pop
xor
call
xor
movsb
xchg
stos
cmp
xchg
sahf
in
cld
pop
and
in
mov
xchg
jp
scas
cmp
sahf
test
push
outsb
aas
sbb
and
mov
bound
fldcw
lds
xor
scas
fldt
aad
xlat
push
cmp
xchg
pop
loope
lahf
js
push
push
pop
sbb
inc
xchg
adc
mov
fildl
cmp
mov
out
sbbb
jbe
lea
test
bound
int3
push
xchg
test
insb
mov
div
cmp
sbb
ds
fwait
adc
fidivl
lods
cmp
jbe
fwait
adc
inc
and
jp
mov
andb
fsubs
push
sub
mov
cld
in
xchg
jnp
bound
iret
mov
sbb
das
lret
push
mov
mov
fnstenv
test
outsb
ds
in
xchg
pop
sbb
or
add
imul
sub
adc
loope
iretw
dec
adc
xor
and
pop
mov
mov
pop
test
into
jnp
subl
sbb
sbb
mov
lods
cld
dec
or
sar
fbstp
sti
pavgw
xchg
inc
test
adc
or
jg
stos
scas
mov
js
push
add
dec
xor
fidivrl
shl
dec
cmovae
popf
pop
dec
xor
fildl
push
cs
add
xor
mov
dec
adc
jnp
add
pop
add
pusha
add
push
push
dec
negb
mov
mov
sbbl
cli
test
mov
psrlw
leave
mov
ret
xor
mov
popf
shr
ds
lds
dec
scas
xor
xlat
mov
jb
pop
outsl
lods
into
pop
jne
sbb
push
inc
jnp
dec
dec
mov
jmp
inc
jmp
ret
mov
mov
or
or
push
sub
cmp
inc
sub
jp
inc
aaa
int
mov
or
imul
int3
ret
clc
lcall
push
push
inc
scas
mov
cmp
out
cmp
jo
xchg
fwait
jl
mov
repz
pop
fldl
aaa
mov
mov
inc
call
sub
dec
enter
in
push
mov
xchg
daa
mov
loope
loope
pop
lea
mov
daa
xor
cld
and
xchg
xor
fisubrs
pop
mov
ss
inc
call
jbe
xchg
xchg
sbb
push
idivb
mov
clc
inc
call
jbe
xchg
xchg
sbb
push
idivb
mov
js
call
jbe
xchg
xchg
sbb
push
idivb
mov
clc
inc
call
jbe
xchg
cmp
cmpsb
or
or
sub
sbb
or
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
psubsb
clc
enter
test
pop
cwtl
xchg
shlb
dec
repnz
xchg
xchg
cmp
call
jb
add
xor
xchg
push
repnz
orb
mov
call
mov
adc
lret
push
xchg
mov
insl
shrl
jb
es
add
push
mov
popf
icebp
jmp
test
adc
pop
mov
sbb
call
sti
push
push
mov
mov
inc
js
xchg
cmp
arpl
mov
dec
adc
inc
cmp
repnz
mov
arpl
push
or
push
or
jge
pop
add
test
aam
gs
pop
frstor
mov
test
xor
xchg
addl
mov
dec
sbb
sub
aad
and
cwtl
add
icebp
pop
jno
xchg
sub
pusha
xbegin
popf
jbe
rorb
add
adc
push
repnz
pop
cmp
out
call
push
fadds
test
mov
xor
js
dec
in
pop
loop
mov
mov
call
sbb
insb
out
addr16
xor
push
in
mov
sbb
jg
jp
jge
test
xchg
and
jmp
std
dec
filds
cli
or
sahf
or
dec
imull
xor
xor
and
sarb
dec
repnz
subb
cmp
call
jb
add
xor
loop
repnz
subb
cmp
call
sub
pop
call
loope
fisubs
mov
pop
sub
js
gs
in
das
in
mov
cmp
mov
ret
or
popf
cmc
jae
movsb
sahf
xchg
lret
mov
and
cmc
cmp
jne
out
nop
xor
push
jg
imul
addr16
pop
cmp
call
das
movsl
fmul
adc
mov
lret
push
fwait
inc
mov
or
test
inc
xchg
imul
xchg
ljmp
xor
sbb
sbb
xor
mov
sbb
scas
jecxz
cmp
outsb
jge
add
push
xchg
mov
inc
mov
pop
xchg
mov
push
mov
sub
sbb
lret
xchg
lcall
push
jp
ret
xlat
or
shlb
int
adc
leave
mov
xor
test
jge
jnp
or
adc
jle
inc
les
xor
out
jne
fisubs
add
xchg
testb
add
aas
movsb
pushf
into
fwait
adc
push
xlat
mov
hlt
sarb
sarl
aas
sub
add
xchg
mov
xor
sahf
imul
jge
bound
adc
in
pop
mov
and
out
lea
mov
pop
mov
and
in
mov
inc
and
mov
imul
out
in
add
jp
push
push
divb
cli
jns
fmuls
jmp
nop
shlb
imul
inc
addl
mov
mov
mov
movsb
jl
test
push
aas
sub
ret
adc
cmp
and
aas
xchg
jb
popa
roll
fiaddl
pmulhw
mov
xacquire
dec
xchg
movsl
mov
nop
dec
loope
sbb
mov
js
les
inc
push
cli
push
outsb
push
test
daa
lds
and
jo
cmc
in
mov
adc
mov
cmpps
pop
add
mov
pop
ret
pop
insl
clc
xchg
sarl
lret
xor
mov
xor
clc
jmp
push
pop
and
int
adc
dec
fldt
sbb
inc
out
fsubl
icebp
mov
sub
outsb
out
and
pop
fistpl
sti
inc
fisttpll
jne
das
or
test
cmp
daa
push
mov
mov
shll
and
mov
jg
mov
xchg
sub
ljmp
cmc
repnz
mov
lret
mov
popa
es
je
push
rolb
inc
nop
inc
jg
sbb
aad
mov
add
lock
jne
mov
das
xchg
xchg
mov
mov
sbb
sub
std
enter
fnsave
mov
call
test
cltd
mov
and
pop
lock
fisttpll
inc
aas
xchg
outsb
or
mov
sahf
ds
fisubs
jg
sub
mov
mov
mov
push
and
pop
jl
popf
in
or
in
push
inc
cld
rorl
jnp
lret
jge
mov
lret
xor
inc
adc
scas
lret
and
push
scas
jne
jle
inc
and
dec
out
stos
das
push
fcomp
rdmsr
fists
repz
lds
jecxz
ror
sbb
cmp
shl
sbb
scas
cmp
cli
ja
xor
out
jae
push
mov
mov
xor
and
dec
out
jecxz
orb
ja
rcr
dec
or
inc
cmpsl
pop
cmp
daa
cmp
mov
ljmp
lahf
cmpl
ret
sbb
enter
das
or
mov
xchg
ja
sub
stos
jle
inc
mov
in
inc
aam
addb
movsb
out
repnz
add
in
xchg
enter
movsl
mov
mul
push
insb
or
popl
xchg
jge
inc
dec
mov
sbb
cmp
rcl
dec
inc
incl
sub
and
ljmp
shll
loope
adcb
jns
pop
sub
and
daa
popf
pusha
ja
sub
insb
imul
add
pop
xchg
dec
jns
in
jge
jb
lret
inc
add
dec
and
add
sub
inc
jae
jb
lods
inc
shrl
dec
test
add
fnstenv
leave
add
mov
test
jnp
subl
rorb
loopne
or
or
adc
xor
hlt
divl
pop
cmp
call
jne
pop
jns
mov
cli
movsl
mov
mov
pop
or
push
pop
mov
dec
pop
ret
lock
push
dec
mov
and
and
ss
fnsave
stos
popf
mov
mov
or
sbb
xchg
adcb
nop
cli
cmp
or
lcall
add
pusha
out
mov
push
insb
xchg
cli
stc
cwtl
mov
jg
repz
das
add
xchg
jl
mov
pop
jo
scas
jb
mov
aas
fs
lock
and
pop
sub
mov
jg
xlat
add
pop
les
fists
xchg
add
in
mov
gs
mov
mov
and
mov
imul
inc
nop
mov
cmp
loopne
mov
or
lahf
adc
or
sar
pushf
and
mov
out
fs
cs
stos
movsb
ret
xlat
lods
mov
mov
sti
push
mov
xchg
enter
mov
push
xchg
rclb
mov
push
dec
iret
scas
cmc
xor
lahf
mov
push
jbe
jl
push
adc
out
mov
stos
cmp
mov
rolb
adc
and
sub
js
int
jb
pusha
shll
xchg
add
push
adc
stc
jecxz
add
sbb
loopne
jg
jg
scas
and
repnz
mov
lea
adc
enter
xchg
jno,pn
std
adc
mov
out
sbb
pop
push
lds
cmc
push
mov
mov
lret
xchg
nop
test
fsubs
or
clc
inc
and
out
pop
pop
cld
lods
ljmp
mov
mov
xchg
sbb
push
mov
outsb
sub
xchg
adc
cmp
dec
xor
and
dec
xchg
dec
xchg
movsl
ja
jno
fsub
mov
in
insb
repnz
addr16
sti
dec
pop
fwait
dec
ja
iret
push
push
mov
cmp
or
ss
test
faddl
cmc
cmp
adc
scas
push
out
test
testb
les
lods
insl
ss
lds
sti
sub
stos
mov
daa
jbe
movsb
cmp
stos
adc
std
fsubl
icebp
dec
sbbb
imul
dec
test
cmp
fbld
lahf
jno
and
ficoms
cltd
es
mov
lods
fdiv
repnz
pushf
add
in
mov
test
mov
pop
popf
jns
cmp
rdpmc
inc
xchg
inc
mov
push
aam
outsb
pop
clc
xchg
add
and
jmp
icebp
pop
jno
adc
pop
test
cmpsb
pushf
or
sub
push
sub
dec
loope
lods
pop
jecxz
fwait
xorb
rcrl
dec
nop
mov
icebp
bound
dec
xchg
push
hlt
bound
pop
clc
idiv
push
and
ss
dec
fdivl
mov
mov
cltd
test
jp
stos
ret
cmp
imul
pusha
push
and
decl
mov
mov
es
shlb
xor
xchg
add
xchg
cmp
cmc
jmp
xor
mov
and
xchg
ds
push
jl
add
push
scas
mov
jp
movl
mov
mov
xchg
imul
daa
aas
leave
outsl
xor
popa
icebp
test
mov
pushf
cmp
in
ret
imul
lds
mov
stos
jae
mov
dec
insb
pop
cmp
rcll
xor
and
ss
xor
mov
rclb
sbb
movsl
push
in
roll
fdiv
cmp
or
jo
flds
fcom
or
mov
out
cmp
cmc
mov
addr16
loop
inc
inc
mov
je
daa
mov
lea
inc
sub
mov
hlt
ror
subl
xchg
sbb
aad
movl
insb
cld
lods
pop
andb
or
aaa
cltd
and
mov
xorl
or
loope
std
push
dec
cmpsb
xor
mov
mov
xor
out
testl
pop
mov
hlt
or
cmp
rcl
and
sub
jne
stos
arpl
imul
dec
hlt
push
sbb
es
lds
sbb
shl
sbb
or
xor
imul
jno
lods
xor
dec
dec
pop
ret
mov
in
aam
mov
fisttps
stos
arpl
dec
mov
shlb
arpl
push
dec
ret
out
pop
or
inc
xchg
jl
dec
inc
shl
fistpll
lods
lret
mov
daa
mov
mov
loope,pt
ds
mov
popf
scas
pop
js
or
dec
daa
sub
lock
jmp
xchg
fldl
push
sbb
and
add
ss
jb
outsl
call
push
inc
mov
lcall
imul
and
or
cwtl
cmp
cmp
cmp
cmpsl
int
jp
mov
aad
xchg
iret
jmp
xor
and
mov
pop
rcl
pop
dec
scas
rorb
es
xchg
lods
and
cmp
hlt
lahf
pop
jne
pop
jecxz
adc
jns
inc
add
xorl
mov
in
lahf
mov
mov
adc
and
mov
jne
pop
fsubr
cmpsb
xor
cmp
shll
cmc
pop
fldt
sub
inc
dec
adc
inc
xor
adc
shrb
push
sub
int3
dec
dec
pop
test
push
sub
cmpsb
and
gs
arpl
xlat
jle
pushf
outsb
stos
xor
arpl
ds
test
dec
or
jge
scas
xchg
hlt
xchg
lea
sub
lods
repnz
push
addr16
xchg
dec
mov
cmpsl
dec
js
hlt
xchg
sbb
mov
cmp
dec
adc
int3
mov
push
jl
mov
aam
jbe
push
jecxz
imul
bound
out
cmp
inc
mov
jne
out
add
push
xchg
aad
mov
sbb
sbb
mov
cmovb
mov
pop
inc
mov
inc
dec
test
in
lods
aas
jbe
adc
sahf
jae
mov
xor
ljmp
and
in
jp
scas
dec
dec
mov
jnp
inc
gs
or
aam
push
push
jecxz
pop
mov
shll
cld
inc
scas
xor
dec
repz
in
or
or
lcall
rolb
pop
inc
mov
sub
cld
gs
and
add
push
sub
call
aad
insb
dec
int3
jb
data16
dec
aaa
out
iret
inc
push
das
add
push
cmp
pop
xchg
mov
dec
out
xor
lock
xchg
imul
jbe
sbb
mov
sbb
and
mov
jne
gs
lock
js
movsb
xor
jle
lret
mov
xor
xor
fbstp
or
rcr
rcrl
inc
fstl
nop
push
dec
pop
notb
sahf
cmp
jne
stos
subl
mov
xor
lods
sbb
sbbb
out
test
push
pop
jl
lret
xlat
mov
ret
and
stos
fs
pop
movsb
push
xor
bound
bound
push
jg
xor
ljmp
dec
repnz
xchg
repz
fistpll
push
pushf
popf
sbb
out
ljmp
cmpsb
sbbl
adcb
shrl
andb
fucomp
add
out
bswap
sub
xor
lret
or
inc
sub
pop
cmp
addr16
cmp
xchg
mov
movsl
test
stos
push
jnp
jne
pcmpgtb
pop
push
fidivl
cmp
xchg
in
push
sbb
mov
arpl
add
cltd
je
mov
test
mov
xor
loope
aam
add
aas
data16
aam
inc
cmpsb
mov
cmpsl
out
ljmp
xchg
or
cmp
mov
shl
outsb
xor
into
cs
xchg
pop
iret
add
and
repnz
in
in
pop
daa
jo
clc
std
inc
sub
push
mov
fldcw
repnz
mov
pop
sar
retw
cld
loope
dec
scas
rcrl
mov
leave
aam
loop
or
cltd
mov
mov
fistps
pop
sub
mov
fs
add
dec
iret
and
mov
jg
aas
scas
test
and
aas
js
and
cmp
scas
xchg
loop
push
lea
rcr
xchg
syscall
pushl
jne
test
fists
pushf
mov
icebp
mov
imul
adc
cli
fs
pop
pushf
mov
cs
add
rorb
inc
mov
pop
test
and
mov
mov
xorb
mov
rorb
sub
lock
mov
lods
cmc
sbb
lret
stos
xchg
ljmp
movsl
shlb
aad
std
mov
test
sarl
sub
out
popf
stos
insb
push
scas
sbb
push
insl
std
mov
ret
xlat
pushf
adc
inc
insb
loopne
add
mov
cwtl
loopne
fcoms
mov
xor
jp
push
test
hlt
adcl
jp
mov
pusha
cmpsl
aad
ds
stc
pop
xchg
mov
fwait
pop
popa
jns
mov
adc
cmc
loop
or
mull
shll
js
inc
push
jg
mov
mov
sbb
sbb
mov
adc
or
lock
add
int3
mov
js
xor
dec
js
dec
xor
pop
mov
fld
lret
nop
xchg
scas
adc
inc
xor
fldt
dec
addr16
cld
stos
sub
test
jno
ljmp
ljmp
push
adc
cmpsl
leave
push
pop
test
dec
stos
out
mov
and
js
sub
xor
inc
and
push
mov
add
jbe
jne
mov
push
inc
cs
jae
ret
or
mov
xor
xlat
stos
scas
sub
mov
sarl
data16
test
mov
jmp
lret
test
ja
pop
mov
bound
std
test
pusha
lcall
loopne
adc
es
fistpl
shrl
ljmp
or
add
adc
leave
xor
loopne
test
mulb
imul
xchg
test
int
mov
sbb
lcall
cmc
push
push
data16
out
xchg
sbb
mov
xchg
sbb
lods
lods
push
je
add
aad
push
stos
out
ret
scas
sbb
sub
sarl
jnp
lds
inc
je
add
jg,pn
rolb
or
xchg
jae
pusha
jmp
outsl
lret
mov
inc
lcall
push
adc
add
ljmp
dec
loope
scas
in
aas
sbb
jge
xchg
fs
test
ja
loope
push
jnp
rorl
jae
jmp
daa
jg
sti
jmp
cmc
xchg
loope
mov
stos
ret
in
or
aas
movsb
outsl
sbb
repz
enter
mov
aad
shrl
and
adc
shr
neg
push
jmp
inc
cltd
cli
test
cmp
clc
add
xchg
out
push
push
in
in
ret
js
sbb
fs
in
xchg
xorl
jns
lods
xlat
dec
xor
push
stos
icebp
jb
push
arpl
mov
xchg
adc
inc
inc
cmp
add
push
dec
fisttpl
xchg
mov
icebp
lahf
push
lret
mov
lahf
call
mov
mov
fists
push
leave
inc
sub
mov
imul
cmp
push
xor
push
xorl
jl
pusha
jmp
arpl
xor
sbb
aam
cltd
pop
xor
test
fldenv
js
in
fwait
mov
inc
test
jle
and
rorl
jge
pop
mov
cld
sub
jge
pop
or
test
test
in
lods
inc
mov
push
aas
mov
scas
fbld
and
clc
dec
adc
stc
movsb
cmc
and
shll
xor
das
cli
xchg
inc
pop
movsb
xor
dec
aad
notb
scas
mov
ja
push
es
test
jb
lds
test
movsb
pop
add
stos
jno
rolb
and
mov
inc
daa
ret
cs
pop
inc
int
push
push
int3
sbb
sub
lods
and
push
cli
xor
icebp
fwait
pop
sub
jne
out
repz
sbb
outsb
jmp
xor
lcall
addr16
xor
cmp
mov
rol
inc
rorb
push
stos
lock
and
je
ret
mov
std
jnp
pop
mov
fucom
or
adc
daa
mov
je
push
je
xchg
or
cmp
mov
xlat
mov
xlat
test
pop
inc
xor
lahf
out
jecxz
xor
or
cmp
mov
pop
jecxz
fbld
rolb
jge
or
int
fst
fwait
cmp
std
iret
sub
pusha
sub
dec
pop
push
lahf
mov
mov
add
outsb
mov
inc
arpl
clc
and
pushf
ret
or
xor
and
in
shlb
scas
mov
xor
pop
into
and
cmp
pop
loop
sysret
add
and
jg
pop
in
push
cmp
bound
jne
outsl
or
push
fists
es
popl
test
and
rcrb
int3
add
or
ss
es
cmpsl
mov
shl
mov
faddl
movzwl
adc
mov
shrl
xor
mov
adc
inc
popf
arpl
cmp
test
decb
xchg
jnp
inc
sub
lcall
sbb
sbbb
adc
push
mov
mov
mov
mov
and
cli
testl
xchg
push
cmpsl
jb
and
pop
sub
push
loopne
xlat
add
ja
push
insb
shll
mov
dec
xchg
test
jb
mov
cmc
mov
xchg
and
jo
cmp
jns
cmc
insl
pop
adc
lods
movsw
addr16
shrb
fwait
cmpsl
testb
std
iret
aam
orl
mov
sahf
ror
pop
mov
lea
jmp
cmp
xor
movsl
in
cli
inc
inc
fwait
adc
cmp
icebp
aad
test
popf
pusha
out
xchg
sahf
xorb
push
cwtl
daa
paddsb
push
xchg
inc
fildl
out
fadds
inc
mov
sbb
enter
push
mov
clc
out
mov
stos
cmc
inc
mov
jo
mov
jle
adc
sbb
adc
xchg
xor
addr16
mov
pop
clc
std
jl
stos
mov
sbb
jne
jb
mov
int3
test
ret
hlt
push
adc
psubsw
das
cld
insb
test
dec
fldl
mov
test
jmp
dec
cltd
dec
push
aad
into
cmp
lea
mov
mov
jno
xor
in
pop
repnz
insl
test
adc
mov
or
sti
cwtl
or
pusha
push
mov
rcll
cs
pop
sbb
stos
xchg
mov
aam
sbb
repnz
rcll
jae
addb
inc
repnz
test
mov
mov
test
std
add
pusha
iret
xchg
int3
cld
or
ss
push
sbb
shll
mov
xchg
xchg
int
orl
xchg
sti
push
or
ds
mov
arpl
sbb
and
jp
sub
mov
jns
cmp
mov
outsb
mov
das
mov
out
adc
pop
iret
xor
notl
and
fsts
test
dec
daa
dec
daa
inc
push
cmpsl
movsl
ja
cwtl
fcoml
cmp
inc
inc
repnz
loopne
rcll
xor
daa
bound
inc
movsl
jnp
das
push
or
shrb
and
jns
jl
mulb
rcrl
aaa
scas
push
out
mov
stos
pop
ljmp
enter
push
insb
call
mov
js
pop
lret
je
loopne
loopne
inc
aaa
and
mov
in
imul
inc
test
inc
jns
or
arpl
cld
leave
xchg
aas
jle
lods
push
cmpsb
cmpsl
shl
inc
arpl
fimull
push
jae
das
lds
iret
scas
pop
mov
jbe
dec
and
ss
mov
inc
cmp
data16
jg
lods
rorb
je
stos
add
stc
and
pushf
cmpsb
or
stos
aam
push
jno
stos
mov
iret
ljmp
out
xor
push
xchg
icebp
out
test
js
push
push
fwait
aas
jg
and
mov
xchg
mov
pop
popl
push
pop
cmp
pop
testl
and
inc
outsl
adc
jl
inc
repnz
cmp
inc
add
loope
adc
mov
jns
jle
scas
inc
mov
lods
aas
pop
ja
jp
mov
hlt
add
int
test
cltd
and
lea
mov
les
out
inc
mov
cwtl
cmp
sarl
insl
movsb
lret
sub
pop
add
dec
icebp
scas
pop
das
es
and
or
sbb
adc
cltd
add
lds
scas
scas
pop
pop
lcall
test
mov
mov
out
and
dec
outsl
in
mov
mov
dec
pop
mov
sbb
cmpsl
sbb
mov
in
std
call
orb
std
xchg
xchg
cmp
fcomip
pop
test
mov
imul
and
inc
scas
pop
out
addb
mov
icebp
sbb
fcomi
adc
jae
pop
ds
mov
pusha
pusha
pop
jecxz
mov
enter
add
inc
sub
sahf
dec
arpl
lds
out
pop
mov
and
push
xchg
das
cs
int
addr16
out
mov
sub
adc
push
jecxz
mov
movsb
fs
pop
add
xchg
clc
ror
fadds
test
mov
ret
js
dec
repnz
subb
cmp
call
jb
add
xor
loop
repnz
subb
cmp
call
jb
add
xor
jmp
negb
sub
sbb
jle
ljmp
mov
ret
rorb
repnz
cmc
mov
dec
out
int3
int3
int3
int3
rcrb
jb
mov
stos
push
jmp
jecxz
repnz
jns
imul
jb
add
adc
and
xor
ret
or
pop
xchg
dec
mov
cltd
push
mov
jb
add
adc
and
xor
ret
push
orl
loope
sti
sub
xor
and
pop
xor
fsqrt
add
inc
add
mov
xchg
cmc
repnz
pop
test
push
add
sbb
loope
movsb
sub
sub
insl
ret
dec
xchg
mov
insl
dec
adc
push
mov
push
mov
or
jp
xchg
push
inc
mov
ds
adc
mov
jecxz
sbb
bound
rcrl
xchg
jne
outsl
addr16
ljmp
mov
mov
repnz
xchg
cli
or
js
cmp
mov
fcmove
fidivl
hlt
insb
cmp
cmp
xchg
mov
sbb
mov
adc
and
xor
ret
or
cmp
sub
jns
das
ss
push
pop
push
cmp
inc
mov
mov
push
cltd
stos
jne
pusha
lea
inc
divb
xor
sti
or
fcoms
ret
push
mov
jbe
and
mov
inc
leave
ss
repnz
pop
xor
jl
add
push
fldl
adc
and
xor
ret
or
cmp
sub
jns
imul
jb
add
adc
and
xor
ret
or
cmp
sub
jns
imul
and
sbb
add
pusha
js
push
jns
cmovs
bound
add
test
lahf
dec
xchg
loopne
aaa
mov
outsb
dec
adc
xchg
gs
mov
or
sbb
test
xchg
dec
or
out
push
ljmp
sbb
rorl
cmp
loope
inc
jmp
push
outsl
dec
xor
jecxz
je
out
outsb
out
mov
outsl
rolb
fcmovu
out
push
fimull
or
mov
ds
jle
lret
fnstcw
mov
mov
mov
sbb
jns
jl
cmpsl
lret
cmp
mov
loope
xchg
mov
loopne
xchg
xchg
xor
jle
nop
jg
ret
imul
nop
lret
and
loopne
push
push
loop
cltd
clc
and
mov
xchg
dec
call
mov
lret
jle
push
add
in
out
pop
out
xchg
xlat
popa
mov
sub
notb
push
mov
lcall
xor
or
nop
cmp
sub
sahf
pusha
jns
iret
mov
mov
sbb
sub
or
jl
sbb
mov
sbb
rcrb
imul
sub
ret
push
adc
repnz
rorb
movsl
dec
inc
aas
jecxz
cmp
fcoml
nop
enter
push
imul
xchg
rorb
ss
cmp
repz
out
cmp
in
inc
aam
fidivl
cld
lods
mov
cmp
mov
jbe
test
lods
sub
repnz
jg
in
sbb
mov
ret
xchg
clc
sti
or
and
add
rorb
cmp
sub
rclb
push
stos
sbb
dec
pop
dec
das
into
jns
leave
sbb
lock
jl
sti
xor
mov
lds
dec
pop
shll
cmp
std
sbb
mov
mov
lods
ja
pop
xor
lock
loop
push
sbb
lods
inc
xchg
inc
jo
jbe
and
push
leave
push
les
shll
inc
or
mov
sti
scas
sub
mov
xchg
pop
mov
test
clc
mov
lcall
or
mov
aas
xorb
mov
jbe
fmuls
cwtl
test
cmp
add
aaa
int
cmp
iret
mov
add
mov
fdivrs
mov
pop
xor
or
push
mov
call
cmp
jl
insb
sbb
mov
gs
lods
repz
ja
adc
pop
es
jo
in
out
and
arpl
mov
lret
test
cmc
jge
aaa
fcmovne
mov
clc
out
xor
roll
mov
push
sub
adc
fnsetpm(287
jmp
insb
int3
mov
mov
bound
jmp
sbb
pop
cmp
xor
adc
add
sbb
cwtl
aas
leave
shr
pcmpeqb
lret
lds
mov
outsb
fisubrl
imul
sbb
or
iret
jl
sbbb
add
shr
dec
push
pop
jne
jno
push
jae
inc
out
xor
fs
mov
das
mov
scas
mov
loop
cld
lods
sub
jp
push
mov
addr16
mov
outsb
fistps
movsl
add
push
adc
dec
mov
pop
arpl
out
mov
lret
adc
pop
mov
push
jo
lods
pop
adcl
popf
pop
enter
add
movsl
and
mov
lahf
stc
jno
push
cmp
rcrb
mov
movsl
mov
jmp
out
mov
int
sbb
mov
adc
test
mov
add
cmp
orb
mov
inc
int
bound
loopne
sub
iret
aad
jecxz
jo,pt
lea
adc
jg
roll
mov
cmp
sbb
push
and
in
fs
sub
iret
int3
mov
cmc
hlt
fadds
pop
dec
dec
mov
cli
ljmp
inc
xor
pop
jbe
xor
cmc
cmp
push
out
repnz
repz
pop
pop
and
cmpsb
sbb
jo
bound
aam
pop
push
sbbb
sub
sar
xchg
scas
adc
pop
jo
xchg
dec
jb
cmc
stc
mov
bound
xchg
and
hlt
shlb
push
mov
mov
mov
dec
icebp
inc
mov
cmpsl
xchg
jnp
or
mov
mov
in
pop
and
cmp
dec
or
cmpb
dec
mov
outsb
pop
mov
insl
fcmovb
or
jecxz
dec
fldt
dec
movntps
icebp
xchg
js
mov
xor
daa
pop
fdivs
cld
adc
adc
cmp
xchg
pushf
fmull
popa
mov
add
mov
cwtl
dec
pop
sbb
and
hlt
rcr
jp
aas
inc
and
xor
das
dec
push
xor
jb
xchg
xchg
dec
popf
mov
sarl
stos
mov
and
and
hlt
jo
in
pop
pop
jbe
pushf
push
addr16
mov
aad
mov
push
xor
push
pop
repz
and
xchg
daa
lahf
sub
loopne
lret
or
mov
sub
inc
ljmp
pop
shrl
test
pop
gs
cwtl
pop
mov
popa
daa
jle
push
lret
xchg
and
sbb
in
or
js
std
or
into
pop
repz
fwait
pop
stos
leave
xlat
ds
sub
xor
fcmove
add
lds
pop
fisttpll
sub
pop
mov
inc
loopne,pn
mov
push
inc
stos
adc
jl
push
push
inc
movsb
mov
inc
mov
mov
sbb
or
or
or
fs
loopne
mov
or
imul
pop
xlat
pop
in
sub
hlt
gs
movsl
mov
and
daa
push
icebp
orb
sbb
sbb
int
mov
cmp
loopne
jb
stos
push
daa
sbb
xor
jmp
stos
mov
inc
cmp
sbb
jl
shlb
faddl
inc
push
in
loopne
jo
repz
shll
in
jle
test
xor
dec
sub
and
pop
mov
out
mov
sub
es
fidivs
repnz
loop
xor
add
ds
push
bound
inc
in
decl
mov
rorb
punpckhbw
jecxz
xchg
jmp
stos
dec
pop
and
popf
je
jg
inc
push
std
xchg
and
arpl
and
xchg
xchg
xchg
or
mov
pop
test
test
fidivl
orb
stos
xchg
xchg
lock
xor
jl
lds
xor
fidivs
mov
addr16
mov
adc
dec
enter
ja
leave
adc
test
stos
icebp
rolb
mov
dec
mov
mov
mov
dec
pop
rcrb
lock
or
popf
sub
cli
data16
jb
jl
mov
fs
mov
mov
sub
pop
rorb
fimuls
inc
test
inc
push
mov
mov
add
cmp
test
imul
xchg
jl
rorl
movsl
jle
daa
lods
fcmovb
fisubl
mov
test
xor
jne
lret
test
das
dec
cmp
jbe
xchg
into
insb
and
faddl
mov
ficomps
insl
out
inc
ljmp
adc
cli
sbb
mov
into
mov
xor
loop
jbe
lods
icebp
repz
and
iret
dec
add
xchg
fstpl
mov
into
std
xlat
rol
xor
sbb
sbb
pop
mov
cmp
mov
callw
ss
pop
ds
sbb
push
inc
js
and
lea
popf
inc
or
rcr
out
mov
adc
add
add
mov
sub
adc
inc
mov
sub
dec
cltd
or
and
cwtl
lcall
js
pop
je
call
in
mov
movsl
mov
in
popa
cmpsb
and
addb
in
mov
dec
add
mov
add
xor
icebp
push
jp
mov
xor
lods
inc
fidivs
push
inc
inc
jnp
ljmp
and
mov
push
cmp
notb
out
stc
mov
in
dec
xor
mov
arpl
insl
nop
scas
mov
sub
test
stos
push
les
cmp
mov
or
mov
out
lahf
cltd
stos
mov
in
in
stos
or
inc
cmp
or
sbb
ret
in
test
inc
hlt
loop
add
push
sbb
dec
jle
mul
cmp
or
insl
sub
xchg
jnp
lea
not
jns
lods
loop
and
pop
or
jl
jp
xchg
shr
leave
inc
mov
and
popf
cmp
adc
fisubs
andl
xor
mov
mov
jp
xchg
mov
repz
popa
add
jecxz
sub
inc
mov
bound
push
mov
test
sbb
mov
popa
push
les
popa
dec
adc
mov
push
push
incl
sub
lsl
test
aaa
pop
xor
pop
sub
das
nop
aas
and
aam
mov
jl
int
sub
mov
rol
xor
mov
xchg
imul
in
cmp
les
sub
jg
and
outsb
push
inc
stos
xchg
lret
lods
out
add
cltd
mov
mov
int
sbb
pop
mov
lods
fs
dec
aam
cmpsb
or
jb
xor
jo
add
movsb
icebp
or
pop
adc
fildll
imul
push
or
and
movsb
jne
sbb
jmp
in
es
cmp
mov
loope
and
cmp
push
lods
sbb
push
int3
dec
lods
dec
subl
stc
dec
lcall
in
clc
add
lds
subb
inc
mov
dec
ret
flds
cmpsl
imul
cmp
and
sbb
xor
fbld
sbb
jns
mov
insl
pop
idivb
test
repnz
sbb
das
inc
or
js
mov
imul
cli
ds
and
or
std
mov
sub
adc
jno
mov
sub
insl
mov
adc
pushf
lea
movsb
out
or
mov
loop
pop
sbb
jl
sub
fists
mov
push
mov
lcall
sub
ss
or
out
arpl
call
mov
adc
lret
sarl
andl
mov
mov
push
push
mov
xchg
xor
test
stc
cltd
adc
inc
push
cmp
nop
jae
inc
ja
mov
in
mov
adcl
mov
xchg
sbb
dec
hlt
jbe
mov
leave
test
sub
mov
rcrl
inc
push
dec
sub
ja
fstpl
xchg
rcr
lea
cmc
jle
xor
stos
push
pop
add
jmp
outsl
and
fstps
sbb
test
cmpsb
inc
jmp
je
sub
xchg
iret
cmpsb
ja
test
add
enter
std
xchg
out
mov
push
jae
addr16
popa
cmp
cwtl
outsl
dec
xor
sub
sahf
mov
testb
or
inc
pop
fs
bound
mov
pushf
imul
jl
mov
cli
xchg
add
dec
daa
add
add
dec
inc
jecxz
xchg
ss
mov
jno
adc
addr16
xor
sti
jne
sub
push
lods
xorl
cmp
jge
ret
sub
mov
sahf
in
pop
cwtl
gs
mov
fstl
popa
mov
sbb
roll
sbb
out
nop
cltd
jecxz
pop
loop
das
icebp
jmp
push
mov
dec
push
pop
push
cmp
cli
out
dec
fsubr
mov
call
push
je
inc
imul
lea
repnz
and
push
fdivs
imul
testb
outsl
or
xchg
cmp
pop
cld
jne
xchg
dec
inc
or
lcall
xchg
in
cmpsl
icebp
adc
aaa
sub
imul
mov
mov
push
shlb
lahf
mov
out
sbb
jmp
xchg
fcoml
jg
push
test
rorl
inc
mov
popf
inc
shll
sub
jns
inc
and
out
test
fsubp
sub
xor
mov
cmp
orl
in
add
mov
ficompl
push
sbb
xchg
cmc
mov
lea
and
lock
out
movsl
adc
jnp
pop
add
jbe,pn
xorl
out
insl
shl
push
pop
pusha
push
out
inc
leave
sub
mov
jl
or
in
ds
sub
push
test
jae
jnp
hlt
sbb
mov
push
sub
daa
cmc
mov
loope
mov
sbb
rcll
subb
test
ds
inc
testl
fs
mov
pop
or
xchg
fnstsw
adc
adcl
mov
cmp
ret
inc
jns
xor
add
xchg
cltd
cmpsb
rorb
xchg
push
jae
mov
int
mov
jne
cmpl
lods
les
fnsave
cmpsl
outsl
js
pop
dec
dec
mov
push
sub
and
sub
cmp
lods
notb
xchg
or
lock
mov
pop
jne
bound
repz
fwait
add
jns
mov
lods
adc
sub
repz
mov
cmc
cmpsb
push
test
sbb
inc
jae
jne
lock
xor
sbb
jo
les
jno
mov
inc
sbb
das
test
loop
dec
cmp
cmp
add
pop
jg
dec
add
inc
mov
clc
fsubrl
insb
lahf
mov
pop
dec
int
pop
arpl
inc
sahf
es
ficomps
in
fimuls
in
imul
test
aad
stc
xor
in
clc
push
test
test
xchg
jb
fldl
lcall
aad
mov
and
and
fst
lret
incl
loopne
test
xchg
jb
fisttps
jns
in
daa
cmpsl
mov
sbb
repz
push
push
inc
or
mov
into
or
rcr
adcb
sahf
fsts
jmp
add
aaa
jo
shl
rorb
pop
cmpsb
mov
push
gs
cli
xchg
mull
scas
add
pop
and
jecxz
adc
lret
roll
sbb
stos
fnstcw
add
nop
cmp
adc
lds
je
enter
and
add
jne
dec
mov
data16
xor
or
dec
or
sub
loop
mov
in
mov
into
jns
sbbl
push
sub
xchg
mov
jbe
addr16
icebp
icebp
dec
cli
mov
pop
mov
enter
push
adc
push
int
ss
xchg
xlat
loope
test
fidivrs
or
cmpsl
in
jl
sbb
xor
stos
mov
aaa
push
sti
pop
and
roll
mov
inc
mov
jp
mov
jno
test
and
sub
sbb
mov
jle
push
int3
and
mov
insb
pushf
mov
sub
adc
lock
push
xchg
stc
push
jo
or
jnp
sbb
ds
cmp
mov
cmp
sti
sub
call
inc
je
sub
inc
sub
sub
mov
push
sbb
call
aaa
outsb
mov
lods
xor
out
xchg
pop
out
ja
cmp
mov
leave
movsl
jecxz
popf
push
insl
adc
shll
dec
lahf
xchg
ficoml
jge
mov
jbe
fnstsw
repnz
mov
mov
fidivl
dec
or
in
cwtl
sbb
enter
or
sub
stc
mov
out
scas
push
popa
fnstcw
pop
sbb
jmp
mov
xchg
jne
push
sahf
jle
and
xchg
pop
and
out
xor
inc
xchg
push
dec
inc
enter
dec
add
sub
adc
neg
test
and
sbb
out
ds
and
bound
cli
movsb
jnp
pop
jns
add
or
xchg
or
add
lret
sahf
nop
pop
shl
icebp
dec
mov
enter
mov
loopne
clc
rcrl
pusha
cs
popf
lret
scas
xchg
loopne
cld
dec
gs
popf
cmp
lret
mov
push
cmp
sbb
test
xor
jnp
fs
xchg
mov
inc
cmpsb
adc
in
lods
pop
das
fdivrp
ds
jb
loopne
mov
mov
push
popa
aam
out
vfrczps
jne
jo
mov
add
push
stos
mov
sub
cmp
iret
adc
and
out
adc
xchg
inc
mov
mov
xor
or
shlb
xchg
push
fnstenv
jecxz
sbb
andb
addr16
push
sar
xchg
aaa
add
mov
fadds
pusha
outsb
cld
das
icebp
neg
jnp
push
notl
je
aad
xchg
mov
mov
in
loopne
or
ds
xchg
in
stos
inc
and
nop
adc
test
push
adc
pop
push
repz
xchg
lahf
push
or
and
out
rol
cmpsb
getsec
sahf
mov
xchg
enter
pop
adc
pop
push
ja
sarb
int3
rcr
ljmp
jns
inc
xchg
jns
mov
push
inc
push
data16
xor
das
sbb
rol
les
sub
xchg
sbbb
fsubrl
jmp
jnp
insl
dec
stos
xchg
cmpb
in
mov
cmpsb
scas
cli
add
aaa
cmp
mov
sub
scas
mov
cmp
xor
rorb
pop
ss
in
cmp
imul
sbb
jns
push
sahf
inc
ret
jle
push
sbb
dec
clc
xor
aam
in
cmpsl
pop
push
xor
sbb
or
mov
mov
sub
xor
mov
inc
shrb
sub
inc
out
es
sub
shl
popa
rclb
dec
mov
ret
and
sbb
mov
mov
insl
jecxz
ja
pusha
imul
and
cmp
sub
push
pop
sbb
in
ljmp
xor
inc
add
stos
push
fimuls
jo
fisubl
push
insb
xor
stos
adc
pop
lock
sbb
mov
es
push
xor
stc
cltd
es
cld
loopne
call
bts
daa
cmp
sbb
popf
adc
mov
cmp
push
rclb
mov
sub
loop
mov
inc
and
insb
or
sub
aad
arpl
or
push
xchg
push
ljmp
enter
push
pop
cmp
fcoms
mov
and
rcrb
lock
or
pushf
les
pop
aaa
cltd
and
js
jg
add
push
pusha
lret
out
enter
mov
ds
adc
dec
adc
jbe
jnp
in
mov
jecxz
out
mov
clc
neg
xlat
inc
adc
add
jb
push
cmc
push
mov
push
out
cltd
lods
mov
std
mov
inc
subl
es
iret
and
pop
xor
xor
mov
leave
push
pop
cmpsl
mov
int
sub
cld
rcrl
xchg
cmp
dec
push
jge
test
ss
mov
xor
mov
cmp
sub
dec
fisubrs
push
jle
mov
stos
fs
mov
xchg
mov
in
xorb
and
lahf
sbb
dec
pop
push
cltd
add
cmpsb
push
mov
jo
loopne
mov
jecxz
mov
test
std
les
mov
insb
sub
outsb
jmp
enter
pop
jbe
sub
cld
lea
jns
cltd
add
lock
cs
dec
lds
sbb
ret
insb
push
sbb
push
mov
cmpsl
pop
cmc
push
dec
dec
add
lea
adc
inc
subl
mov
jbe
in
call
jns
lret
dec
jbe
inc
jl
push
test
or
in
pop
mov
aaa
xorb
sahf
sub
push
mov
sbb
fmull
or
push
sar
mov
add
rcrb
lcall
dec
mov
push
imul
in
xchg
or
test
lcall
push
movsb
insl
stos
arpl
lods
jne
test
aas
scas
dec
cmc
lahf
and
jge
push
dec
or
xor
mov
std
mov
and
subl
js
mov
js
test
lcall
xlat
or
mov
shlb
mov
push
jb
ljmp
leave
cs
test
cmp
cmpsl
out
dec
xchg
mov
jnp
and
cltd
push
out
pop
aad
insl
fnsave
movsb
sub
push
sti
cmpsb
xchg
lea
or
xchg
xorl
dec
jns
ret
lea
std
das
movsl
push
add
and
push
add
jb
cmpb
js,pn
lcall
jnp
orb
sbb
lock
out
xor
insb
xchg
ja
sub
xchg
push
ljmp
out
or
enter
sub
leave
inc
dec
repz
cwtl
mov
xor
add
aad
scas
daa
fs
js
lea
cmp
mov
js
jne
mov
add
mov
inc
xchg
call
jle
pop
mov
ficoms
arpl
call
sahf
jae
mov
xchg
mov
loop
and
jne
popf
inc
sub
dec
scas
mov
xor
push
sbb
js
sbb
aas
ljmp
into
movsb
inc
ljmp
sbb
sti
mov
jne
jle
dec
in
inc
jo
sahf
movsl
mov
or
add
inc
sahf
clc
cld
icebp
outsb
sub
pop
xor
stos
shrl
mov
aas
stc
arpl
inc
and
ficoml
loope,pn
jbe
xchg
fadd
scas
fisubs
fidivl
xchg
mov
push
fcomps
lods
sbb
sub
stos
cmovl
pushf
scas
repnz
cmp
arpl
sub
das
inc
mov
ljmp
or
mov
dec
insl
repnz
mov
leave
mov
adc
ljmp
scas
dec
sub
push
or
stos
xor
pop
xor
and
shr
nop
push
popf
xchg
mov
arpl
xor
xchg
mov
cmpsb
inc
loopne
popa
lcall
cli
ucomiss
bound
ss
stos
xchg
adc
nop
or
mov
mov
in
ret
in
addr16
sub
cmpsb
daa
mov
test
and
xor
ret
or
cmp
sub
jns
imul
jb
add
adc
and
xor
ret
or
cmp
sub
jns
imul
jb
add
adc
and
xor
ret
or
cmp
sub
jns
imul
jb
add
adc
jns
push
ret
mov
cmc
rcrl
mov
xchg
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
pop
adcb
and
and
les
xchg
adc
inc
xchg
xlat
loope
icebp
jb
adcb
adc
push
shlb
jno
mov
xchg
jb
and
roll
loope
icebp
jb
orb
cmp
dec
sarb
repnz
out
pop
pushf
cmp
jno
adc
insl
int
jecxz
add
mov
jp
imul
mov
sub
mov
aam
adc
les
dec
xchg
sub
dec
ljmp
jge
xchg
mov
adc
cmovg
jae
imul
icebp
loop
iret
ds
xchg
xchg
dec
popf
ss
rcll
mov
rorb
fyl2xp1
jle
fucomp
bound
lods
mov
out
insl
js
inc
dec
adc
xchg
jno
popa
jno
outsb
inc
mov
mov
imul
insb
popf
or
loope
adc
les
adcl
mov
add
xchg
add
jae
adcb
and
dec
shlb
push
adc
inc
leave
push
loope
call
xchg
inc
lret
push
lods
sbb
cmc
addr16
rorw
je
and
xor
adcb
inc
mov
aas
mov
xchg
xor
cmpl
in
les
and
and
and
inc
lret
cmp
push
shlb
jno
addl
mov
roll
loope
icebp
jb
adcb
and
push
shlb
jno
addl
mov
roll
loope
icebp
jb
adc
js
pop
cmc
outsb
push
cmp
push
mov
and
mov
popf
xor
pop
gs
loopne
lea
popa
ret
lock
mov
repnz
and
and
xor
call
jle
repz
jmp
cmp
sub
and
in
dec
into
scas
les
xor
popa
in
arpl
mov
add
mov
sbb
mov
cmpsl
inc
cltd
outsl
je
adc
je
dec
sbb
pusha
xchg
pop
jbe
scas
iret
mov
pop
adc
insb
xchg
add
push
mov
dec
ja
jge
ds
stos
inc
xchg
lret
sarl
sbb
repnz
daa
aaa
cmc
push
xchg
out
jmp
outsb
push
sti
pop
pop
das
out
lret
jecxz
scas
sub
sub
leave
add
sahf
lret
add
mov
pop
imul
out
mov
loopne
cmp
sub
ror
jmp
stc
fistpll
cmpsl
fs
test
push
or
je
sbb
mov
int
lds
inc
xchg
jne
pop
push
sbb
outsl
xor
cltd
in
aas
inc
js
sub
mov
pop
mov
cs
mov
lock
loop
pop
sbb
imul
dec
and
jae
in
mov
xchg
fsubrl
lock
adc
or
into
imul
jecxz
sbb
mov
sbb
dec
in
xchg
pop
and
sub
pop
push
scas
mov
push
fpatan
aaa
jp
inc
ror
out
dec
rorb
jp
inc
sti
jmp
mov
cmpsw
cmpsb
mov
lret
xor
push
hlt
lret
dec
jle
leave
jno
jge
sbb
xchg
mov
cs
inc
in
lods
adc
jle
clc
test
or
aaa
sbbl
sub
mov
jle
sbb
fs
jp
mov
ja
cmp
fisttpll
imul
daa
cmpsb
add
cmp
test
ret
xchg
cs
jo
mov
push
mov
loopne
jmp
and
xchg
mov
dec
lea
std
jnp
cwtl
add
insl
cmp
leave
lods
lcall
xor
mov
arpl
sbb
into
mov
mov
mov
lods
or
addr16
or
or
sbb
cmp
rorb
les
scas
mov
pop
lock
insl
xor
js
mov
lahf
and
lods
xor
insl
xorb
inc
sarb
ds
xlat
ret
or
cltd
sbb
out
mov
cmp
xchg
aam
inc
add
jecxz
iret
and
fsubs
fidivrl
jnp
add
push
mov
mov
add
mov
imul
inc
mov
data16
testb
mov
cmc
mov
or
dec
and
sti
pop
sbb
andl
sti
fcomps
lahf
cmp
cmp
adc
mov
jne
xor
arpl
rcll
pop
loope
fsubs
adc
mov
out
jb
mov
test
decl
and
out
jnp
repnz
in
ret
arpl
loopne
jnp
movsl
fwait
iret
dec
cmpsb
and
pop
leave
fnstsw
adc
lock
cltd
aaa
sbb
fbld
cmp
lock
push
in
jp
cmp
cmp
popf
push
test
dec
push
xorl
mov
add
xchg
cwtl
lea
sub
pop
cs
lret
adc
in
cmp
lods
pop
dec
repz
xchg
lock
movzwl
jbe
mov
inc
pop
pop
movsb
outsl
inc
inc
mov
mov
movsb
insb
arpl
adc
sub
inc
sbb
lods
das
loope
cmp
sub
fisubrl
jbe
outsb
or
push
ljmp
jmp
in
lahf
cmp
xchg
repz
aas
cmp
fidivrs
daa
stos
stc
mov
js
ret
adc
jo
in
xchg
cmp
sub
push
in
es
push
add
test
adc
fisttpll
fldt
push
or
dec
mov
or
std
xchg
cmpsb
aaa
je
or
stos
dec
xchg
jl
pop
aad
test
mov
xor
pop
adc
in
xor
jmp
mov
dec
jp
mov
sbb
add
or
decl
in
sahf
je
pop
aas
mov
pop
loope
push
fmuls
mov
mov
loope
mov
loop
test
mov
cmc
jle
cwtl
in
jle
jg
mov
cmp
ljmp
ljmp
dec
sbb
stos
sti
cmp
mov
xchg
sub
inc
sub
xchg
pusha
clc
stc
lret
dec
mov
aam
push
imul
repnz
loope
rorb
pusha
xchg
ret
pop
les
out
xor
push
push
mov
stos
sbb
les
xorl
jmp
xor
jge
push
scas
or
mov
enter
std
and
jp
sub
out
inc
mov
and
xor
dec
push
xchg
aas
pop
cmp
lret
dec
ret
pop
popa
icebp
mov
test
bound
lss
mov
fsubl
jecxz
in
cs
js
fimuls
pop
sub
pushf
ds
xchg
dec
dec
divl
fdivrl
pop
push
ficoml
xchg
rorb
mov
dec
imull
cwtl
in
inc
xchg
in
mov
pop
out
imul
adc
imul
ljmp
nop
or
mov
ja
ret
mov
push
inc
rep
push
movsl
pop
in
jbe
pusha
stos
inc
mov
jns
push
inc
lea
fs
add
je
cmpsb
add
and
sub
shrl
add
sbb
aaa
out
repz
push
pop
mov
insl
and
jmp
sbbl
mov
out
aam
fmuls
ss
adc
xor
inc
jmp
movsl
xor
mov
fwait
repz
ss
adc
enter
lock
fdivp
scas
mov
inc
adc
lods
mov
jge
in
add
clc
mov
ljmp
movsl
jle
rorb
push
cltd
sub
cmp
cmp
mov
jnp
xchg
rcl
mov
movl
jge
xchg
push
ja
aad
add
pop
je
imul
and
loopew
sbb
out
adc
xor
mov
ss
stc
xchg
fs
std
inc
add
jo
mov
icebp
iret
lods
imul
fisttps
idivl
repnz
imul
imul
push
roll
mov
mov
mov
ret
and
and
jne
sub
or
push
pop
dec
jno
pop
xor
xor
mull
test
lcall
int3
orl
adc
jne
adc
nop
js
test
or
xchg
loope
out
add
test
mov
ss
fwait
xor
rcrl
adc
mov
enter
popf
fsub
movsb
insb
jo
out
or
into
jns
insl
and
stc
addb
sbb
pop
inc
xchg
pop
push
sahf
es
mov
push
popf
pop
stos
add
repz
sbb
mov
inc
xor
inc
sub
pop
enter
call
lret
packuswb
mov
add
ss
mov
sbb
add
scas
into
adc
addr16
aas
sub
sti
in
mov
jge
das
fcompl
pop
enterw
ffreep
cmp
inc
hlt
add
icebp
inc
cmp
pusha
dec
push
shlb
les
adc
shll
add
sub
mov
cmp
cmp
daa
jg
add
jb
adc
jae
push
cwtl
and
enter
pop
andl
cmp
mov
iret
cld
test
jle
pop
inc
lods
adc
pop
filds
inc
scas
hlt
out
mov
imull
gs
push
data16
mov
imul
push
pop
mov
lcall
jmp
das
cmp
pop
rcl
mov
lock
into
aaa
mov
mov
in
stos
push
jne
mov
push
hlt
xchg
cltd
movsb
xchg
loope
cmp
loope
add
jne
push
enter
push
cmp
dec
xchg
popf
fs
pusha
and
pusha
jecxz
mov
inc
mov
insb
daa
test
fbstp
pop
pushf
pop
mov
imul
sarl
mov
enter
or
in
mov
xchg
mov
sbb
push
lret
arpl
mov
adc
mov
or
pop
cli
clc
cmpsb
sbb
push
cltd
hlt
jmp
scas
jo
sarl
push
outsb
sti
pop
cmp
ror
mov
mov
cmpsl
scas
or
mov
std
ret
frstor
push
or
pop
xchg
sbb
idivb
loope
push
add
imul
icebp
jp
test
es
ret
shl
xchg
mov
xchg
push
in
inc
ljmp
xchg
icebp
loopne
popf
incb
jge
push
leave
lret
inc
cmpsb
mov
and
push
loope
decb
sti
mov
iret
loope
lret
add
mov
push
rclb
cmc
xor
test
repnz
jb
scas
cmp
xchg
daa
ja
mov
insb
mov
fs
push
add
std
shr
pop
out
jnp
arpl
ret
outsl
loop
pop
add
dec
arpl
dec
lahf
lahf
jge
lahf
mov
jbe
xchg
lods
jle
xor
xchg
insl
aas
inc
test
cmp
push
repnz
into
std
enter
sub
or
mov
mov
scas
clc
or
nop
std
test
stos
push
test
and
pop
cs
inc
dec
adc
push
iret
das
sbb
push
lock
bound
jle
mov
mov
xchg
dec
dec
pop
ljmp
xor
xor
and
orb
cmp
test
daa
and
pop
iret
fwait
mov
std
pop
pop
lcall
xlat
cmp
test
testb
test
xor
add
pop
jno
jnp
push
fs
add
lds
cltd
cwtl
ljmp
mov
push
pop
aad
outsb
ret
adc
sbb
ss
shlb
mov
std
xchg
push
cmp
dec
outsl
and
popa
or
mov
adc
scas
mov
inc
shlb
xchg
xchg
mov
xor
fcmovnbe
icebp
cmpl
sub
mov
sub
cmp
addr16
cs
es
pop
test
mov
ret
push
jg
bound
cwtl
sub
cld
imul
cmp
ret
sbb
jg
mov
clc
in
push
and
mov
jb
nop
inc
cmp
mov
and
stos
push
pushf
sbb
add
sbb
into
orb
pusha
and
icebp
jae
sbb
jbe
add
push
mov
stos
push
pop
sbb
mov
cmp
xchg
mov
shl
dec
imul
icebp
ja
jl
push
mov
aam
lods
dec
test
testl
ficoms
fists
test
xor
mov
imul
mov
lods
adc
pop
mov
ret
adc
loopne
mov
mov
adc
xchg
sub
lahf
scas
mov
sbb
adc
pusha
xchg
push
mov
sbb
mov
xlat
xor
out
cmp
nop
mov
decl
push
sarl
lods
push
add
lock
jne
faddp
mov
call
and
pop
jnp
pusha
addl
rcl
mov
adc
mov
call
stos
imul
out
clc
xor
pop
dec
in
inc
push
outsl
jecxz
sti
hlt
mov
cld
shl
push
xor
in
call
inc
dec
in
loope
ss
push
into
in
mov
and
sbb
adc
outsl
inc
adc
xchg
aas
pop
into
push
sub
push
push
pushf
push
out
dec
mov
aam
sub
jge
push
pop
xchg
xchg
sbb
leave
xor
cld
addr16
and
and
mov
out
out
push
xor
mov
imul
lret
mov
pop
cmpb
add
rcll
push
mov
inc
or
lock
push
push
or
fxch
push
push
jmp
push
lods
mov
sti
pusha
rcrb
xor
cmp
jl
adc
mov
mov
cmp
or
jmp
cld
orb
xchg
mov
adc
adc
jmp
insb
loope
cli
mov
sub
pop
dec
push
sub
mov
in
pop
or
test
push
and
pop
jge
test
ror
test
neg
hlt
xchg
cmpsb
ss
sub
pop
shll
cmpl
inc
jecxz,pt
mov
lret
cmc
cmp
bound
iret
jns
pop
push
mov
push
xchg
mov
inc
mov
fidivs
pop
ja
cltd
arpl
mov
lock
popf
cmp
sti
sbb
sub
mov
pop
mov
cld
xchg
fyl2xp1
or
rolb
and
add
icebp
pop
push
iret
movsb
lret
pop
sbb
das
push
dec
jno
inc
xor
sbb
dec
ds
xor
test
mov
cmp
dec
rorl
xchg
loope
repz
push
jo
nop
sti
mov
out
xchg
mov
mov
pop
outsb
push
xor
mov
mov
imul
out
inc
imul
jbe
dec
mov
dec
repnz
push
xor
out
scas
daa
sub
scas
fnstcw
out
pop
rolb
rcll
sub
out
stos
fadd
lock
mov
leave
pop
ror
push
cltd
push
jns
xchg
movsl
aaa
gs
mov
ret
add
js
jmp
push
daa
out
add
inc
cli
and
sti
icebp
jle
mov
jne
ja
push
push
pop
insl
call
xchg
jno
cmpsl
lock
orb
stos
test
cwtl
je
in
mov
jmp
ja
push
pop
mov
test
test
sbb
or
dec
or
fnstsw
jne
lds
adc
push
ja
pop
cmpsl
ja
sub
dec
loopne
push
in
ret
mov
fmull
pop
push
cmp
scas
xor
mov
xchg
repnz
aad
sbb
inc
jne
jns
stc
ss
mov
nop
popa
mov
push
dec
push
or
dec
and
scas
das
inc
cli
arpl
push
mov
and
sti
jecxz
addl
jmp
sarl
adc
mov
out
dec
and
mov
ret
pop
adc
cmp
sbb
jmp
push
mov
jmp
mov
in
cmp
jg
movsb
insb
movsl
andb
lcall
mov
sbb
cmp
inc
cltd
inc
jg
sbbl
arpl
lahf
sub
adc
out
loop
dec
or
inc
xchg
pop
shll
lods
jno
inc
cmp
sbb
aad
daa
cmpsb
arpl
jp
leave
iret
jl
lret
mov
jp
mov
std
mov
insl
or
enter
insl
adc
shll
mov
rorb
cld
fs
popa
push
in
movsl
insb
repnz
jo
scas
mov
jns
pop
leave
stc
pusha
rcpps
lret
adc
out
pop
sarl
test
ficoml
sbb
es
fisubl
add
mov
add
pop
jmp
sub
mov
rcrb
loope
mov
jge
jg
in
sarl
insb
sbb
adc
mov
dec
xor
loope
mov
dec
js
pop
rcll
stos
adc
pop
int
mov
aam
inc
lcall
insl
sub
outsb
mov
std
test
pop
adc
cmpsb
cld
inc
mov
inc
mov
js
aam
cmp
adc
sbb
mov
cmp
in
adc
xor
adc
cltd
notl
test
sub
xor
inc
or
xor
lret
lret
xor
sbb
fstps
rcrl
cmp
xchg
enter
call
cmp
xchg
jp
out
scas
imul
cmp
movsl
xchg
sbb
data16
add
lret
or
jmp
call
idivl
fisubrl
dec
cmp
push
lock
lods
mov
pop
adc
jns
mov
push
cmp
inc
and
out
or
sub
sub
dec
mov
mov
push
sub
cmp
gs
xchg
aad
fdivs
sub
dec
jp
push
cs
lods
and
mov
mov
movsb
mov
dec
mov
push
and
mov
pop
lds
mov
sub
repz
jg
push
add
in
pop
les
pop
cli
test
in
xchg
jecxz
push
mov
push
out
popf
out
fdivrs
sub
dec
add
pop
xor
fs
mov
push
cmpsb
pusha
pusha
mov
cmpsb
inc
push
jbe
leave
xor
int
cld
int
ficompl
and
jmp
mov
xchg
jecxz
and
mov
cmpsl
test
and
loop
cwtl
pop
hlt
jae
inc
jmp
jne
pop
jo
sbb
inc
mov
icebp
or
dec
sub
jae
cmpsb
and
mov
out
lock
imul
lock
fnstenv
into
rcrb
pop
int3
add
push
icebp
sbb
rcrb
add
push
mov
insl
push
and
stc
cwtl
xor
sbb
ja
in
jmp
mov
jae
xchg
lds
cmp
ret
cmp
pop
mov
loop
cld
outsl
adc
sbb
aaa
and
iret
jnp
jmp
mov
lds
push
repnz
xchg
xchg
cmp
jae
imul
and
cld
inc
jg
sbb
add
dec
mov
sub
cmp
adc
rol
sbb
mov
and
cmpsb
fildll
out
pop
loop,pn
lret
inc
mov
pop
in
dec
mov
push
mov
fidivrs
fisttpll
push
int3
cmpsl
js
dec
sbb
mov
dec
or
pop
push
push
push
xchg
in
xor
insb
add
jmp
test
cltd
inc
adc
fwait
jl
in
mov
hlt
push
mov
or
and
fs
pop
jbe
add
jmp
adc
mov
jae
mov
xchg
or
and
add
repz
pop
adc
inc
push
outsl
das
mov
mov
daa
sub
andb
hlt
ds
hlt
sub
xchg
xor
loop
jecxz
dec
test
out
push
dec
sub
mov
rolb
mov
lock
push
inc
pop
xlat
stos
xchg
in
in
fisttpl
fsubrl
cmc
sub
addl
cmp
rolb
mov
dec
inc
mov
xchg
jge
pop
sbb
pop
gs
in
jne
pop
xchg
rclb
mov
ja,pn
jno
test
push
addb
lods
mov
mov
mov
scas
les
ljmp
cmp
outsb
popa
mov
rorb
cmc
jecxz
and
adc
sbb
xchg
fbstp
jnp
push
inc
mov
mov
xchg
pop
arpl
insb
leave
popl
mov
stos
mov
sahf
cwtl
lds
jmp
xor
xchg
subl
clc
outsl
dec
repnz
or
clc
pop
aad
xor
loop
xchg
in
jno
dec
lock
ret
and
inc
pop
into
cmpsb
loop
jnp
jbe
cmp
leave
mov
cltd
pop
mov
lock
mov
lcall
int
cmp
sbb
dec
das
jg
jo
mov
call
mov
test
jmp
inc
int
ret
and
mov
cmp
insb
fidivrs
mov
sbb
js
fnsave
sahf
xchg
iret
add
pop
inc
cltd
aad
sub
out
mov
imulb
mov
lods
fnstcw
dec
add
or
adc
and
xor
jp
test
xchg
icebp
fs
push
mov
xor
inc
enter
mov
faddl
add
and
cld
mov
mov
call
lahf
and
push
sub
loope
and
test
in
je
mov
dec
repz
fiadds
xor
xlat
mov
fiadds
dec
std
sub
adc
push
cli
sbb
lcall
imul
addr16
and
ss
adc
rcl
lock
push
adc
es
and
jno
dec
icebp
out
push
jmp
pop
movsb
leave
adc
xchg
mov
mov
faddl
adc
out
jge
jp
scas
cltd
aaa
hlt
lea
aas
dec
test
jbe
pop
ds
rcrl
mov
mov
push
mov
cld
leave
lahf
cmpl
js,pn
lods
sub
test
repz
loopne
push
mov
sbb
mov
fstpt
movsb
or
jmp
inc
ds
ret
xchg
rcll
loopne
repz
xchg
rcrl
or
rol
xchg
mov
adc
push
testl
sub
andl
imul
dec
lcall
rcll
cmc
pop
sbb
inc
mov
std
rcrb
push
xor
push
mov
mov
cmp
adc
dec
mov
ds
fcoms
stos
leave
mov
fistps
mov
push
bound
out
mov
das
lea
leave
es
rol
or
or
sarb
xor
call
or
pop
addl
push
push
mov
pop
push
enter
popf
sub
test
popa
je
arpl
push
pop
inc
xor
dec
pop
jmp
sub
imul
push
mov
xchg
xor
test
insb
fdivs
popf
enter
inc
popa
in
lock
rcrb
cmp
mov
enter
sub
pop
jns
sahf
push
mov
std
mov
sbbb
xchg
jmp
ss
jb
lods
popf
stc
popf
mov
jo
add
pop
adc
push
push
bound
into
and
xchg
add
sub
test
and
inc
push
add
sbb
shll
insb
popf
std
inc
cmpsb
cmp
jno
test
nop
out
or
mov
adc
lret
inc
jmp
mov
sahf
push
jp
lret
mov
ljmp
sti
movsb
pop
xchg
rcr
daa
ljmp
divb
adc
pushf
xlat
adc
sbb
mov
mov
push
xchg
push
xlat
hlt
jl
mov
cmc
and
sbb
iret
adc
mov
mov
ss
push
jne
mov
enter
decl
push
xchg
shlb
push
shlb
jno
addl
mov
roll
loope
icebp
jb
adcb
and
push
shlb
jno
addl
mov
roll
loope
icebp
jb
adcb
and
xor
popa
loop
repnz
aad
loope
shlb
and
mov
ret
loope
icebp
bnd
outsb
mov
mov
pop
lods
push
popf
push
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
call
push
push
pushl
push
push
call
call
mov
leave
ret
scas
mov
lret
in
lcall
popa
mov
sbb
dec
sbb
leave
sti
mov
lret
in
mov
frstor
insb
push
sbb
sub
pop
or
inc
inc
mov
rcll
push
dec
cmp
push
push
add
mov
hlt
scas
jmp
sbb
dec
push
push
xchg
push
sbb
daa
dec
in
inc
inc
clc
inc
sub
scas
jge
inc
fs
je
test
mov
je
nop
mov
mov
orb
lds
sarb
cmp
mov
enter
iret
popa
int3
jno
aad
push
scas
std
fwait
xor
push
sub
cmp
dec
xchg
jge,pn
dec
in
ja
sub
add
mov
inc
pop
push
ja
pop
mov
mov
mov
push
xchg
and
scas
arpl
adc
adc
xor
call
cmp
outsb
dec
negl
divb
lret
lea
test
jmp
cmpsl
ret
jnp
sub
lds
pop
cmp
sti
iret
test
mov
cmpsl
sbbb
mov
cmp
push
jl
inc
and
cmp
mov
cld
cmpsl
test
cwtl
stc
cmp
mov
or
je
sub
sbb
rorl
cmpsl
mov
fisttpll
or
cmp
dec
sbb
lods
sti
mov
lret
in
mov
fisttpll
or
cmp
dec
sbb
lods
sti
sbb
and
xchg
sub
out
inc
outsb
push
cmpsb
dec
std
lahf
lock
xchg
inc
pop
jo
andb
mov
mov
mov
cmp
or
sahf
adc
sbb
nop
xchg
fbstp
jp
daa
cmp
xlat
nop
dec
mov
aaa
mov
mov
in
dec
push
cmc
mov
shll
sub
mov
fwait
dec
push
add
sbb
in
scas
sbb
or
xchg
mov
movsl
jmp
sbb
mov
repnz
fisubrs
in
loope
stc
sub
mov
xchg
adc
adc
pop
pop
pop
mov
cltd
lock
or
adc
lcall
and
call
or
xor
andl
push
int
mov
jae
outsb
sub
or
ret
push
cmp
inc
push
sti
xchg
mul
or
mov
jmp
lcall
mov
test
divl
sub
jbe
das
ret
cmp
js
in
push
adc
or
mov
sub
cltd
stos
sub
and
add
mov
push
sahf
mov
inc
jno
out
lret
ljmp
lret
mov
mov
xchg
in
andl
leave
mov
ret
dec
pop
enter
jno
dec
mov
add
jo
imul
adc
stos
lret
add
adc
add
pusha
scas
jge
push
test
adc
xchg
rcl
divl
and
xchg
inc
jno
lahf
dec
ret
mov
sbb
arpl
xor
fmull
mov
xor
push
inc
xlat
adc
lret
mov
and
insb
imul
cld
addb
xor
mov
jmp
jecxz
adc
filds
daa
add
dec
adc
mov
leave
andb
outsb
add
rolb
inc
jmp
adc
inc
and
push
adc
cmp
inc
inc
xchg
sub
lds
je
add
adc
cld
lods
mov
stos
or
mov
call
outsl
sub
xor
xchg
add
xor
js
mov
repnz
cli
stos
mov
xor
pop
cmp
clc
cmp
out
inc
mov
rorb
in
mov
push
sbb
stc
mov
jg
add
inc
push
in
or
fbstp
popf
mov
pop
fdivrs
and
jo
jle
add
dec
mov
jns
jbe
inc
loop
dec
ret
xorl
push
gs
test
mov
out
jo
sub
push
pop
adc
jmp
iret
mov
mov
cli
jge
dec
dec
test
mov
sub
popf
xchg
ret
clc
sub
into
pop
cmp
pop
orl
pop
clc
push
cmp
scas
aaa
inc
ja
fildl
enter
in
loope
cld
cmp
lods
lcall
cmp
sbb
xchg
inc
fwait
incb
sti
enter
stos
sbb
xor
aas
dec
mov
mov
jecxz
pop
jmp
aaa
and
out
mov
pop
adc
insl
dec
pop
cmp
push
adc
mov
into
jge
pusha
sti
pop
mov
push
or
lcall
pop
or
inc
jmp
nop
xor
mov
inc
stc
jae
scas
xchg
push
aaa
je
dec
xor
adc
adc
jnp
pop
push
sub
cmpsb
adc
lret
adc
add
push
lea
out
popaw
movsl
mov
mov
add
mov
mov
outsl
cmpsl
insb
fimull
gs
inc
jo
jmp
test
ret
mov
sub
inc
das
cmp
ss
cld
sbb
fcom
mulb
sbb
and
mov
movsb
inc
fldenv
sbb
leave
xchg
adc
sbb
add
mov
xor
inc
outsl
inc
or
aad
jo
inc
push
add
mov
insl
test
aaa
out
enter
pop
sahf
fstpt
cmp
sbb
sub
pop
lds
bound
aaa
cmp
sbb
call
mov
mov
shlb
test
push
xor
int3
adc
ficompl
popa
or
insb
mov
xor
rcrl
sub
cltd
cli
mov
ret
das
dec
in
xchg
jp
out
mov
mov
push
push
add
push
ja
out
mov
push
je
dec
out
mov
fistps
mov
xchg
and
test
push
jnp
cmpsl
dec
scas
pusha
mov
pop
and
add
pop
mov
movsl
popa
mov
inc
jne
lcall
inc
fwait
pop
adc
mov
sbb
ret
inc
out
aaa
jb
je
dec
cmpsb
mov
leave
stos
in
int
mov
imul
jp
out
out
xchg
xchg
fwait
mov
pop
aaa
xchg
stos
jp
iret
gs
dec
insl
fwait
iret
xchg
xchg
inc
out
cmpsl
sbb
fildll
mov
nop
push
fs
out
sub
sbb
pop
cli
push
dec
jns
sub
push
cmp
mov
movsb
cs
xchg
adc
mov
call
or
pop
push
mov
push
sub
cmc
lods
or
cmp
and
loop
nop
cli
sub
pushf
lods
hlt
xor
mov
mov
lods
jne
orb
gs
inc
pusha
shrb
inc
xor
lcall
jg
imulb
adc
rcr
or
adc
dec
pop
pop
cmp
popa
sti
fcomps
aas
pop
les
scas
daa
push
test
lea
data16
movsl
pop
fisttps
adc
mov
mov
push
cs
pop
imul
xor
fidivrs
push
test
cmc
adc
fistpll
in
adc
add
stos
sub
inc
jnp
pop
mov
dec
jp
inc
jp
sub
or
adc
subl
shlb
scas
pop
xchg
pop
data16
dec
pop
sbb
sbb
xchg
jb
push
pusha
in
in
dec
push
idiv
fwait
lcall
fwait
sahf
lahf
orl
pusha
shll
cmp
adc
sbb
loope
adc
sbb
and
ficoml
das
sbb
stos
pop
jmp
inc
push
mov
push
shll
mov
jge
or
pop
ret
adc
and
jle
repz
shl
cmp
pushf
lcall
data16
mov
pusha
sarl
test
or
sahf
inc
sub
inc
push
popf
mov
ds
mov
mov
repz
mov
cs
adc
push
dec
sub
out
cmp
mov
xchg
cltd
subb
pop
aas
cmp
test
popf
xchg
add
movsl
out
je
arpl
xchg
cmc
and
sbb
imul
jmp
pop
fldt
andl
test
mov
mov
aam
in
mov
cs
mov
cmp
aaa
push
xchg
sbb
mov
push
js
in
fdivs
adc
xchg
cmp
leave
push
add
jg
mov
mov
and
adc
test
fnsave
fsubrs
test
xchg
lahf
cmp
repnz
xchg
cmpsl
out
sbb
shlb
mov
into
cmp
sub
cli
js
divb
rorb
adc
sbb
out
pop
rclb
adc
push
stos
mov
jp
and
and
fcomi
out
dec
xchg
adc
sahf
adc
or
in
push
pop
fwait
dec
mov
add
sub
jp
enter
aas
test
cmc
cmp
cmpsb
ja
push
or
push
mov
aas
mov
dec
repnz
jne
sbb
jne
cmpsb
pop
adc
lea
jle
jge
mov
loope
loopne
dec
in
pop
push
cmpsl
jbe
xor
lods
mov
mov
incl
sub
outsl
mov
cmpsl
outsb
lea
shlb
jbe
lahf
faddp
pop
daa
or
mov
sbb
inc
sub
xchg
mov
mov
rcrb
jmp
mov
bnd
adc
and
sbb
mov
add
pop
add
fdivrs
mov
add
test
xor
mov
pop
mov
push
dec
add
dec
fidivl
xor
cmp
cmp
dec
cmp
jle
xchg
in
jo
mov
fldl
incl
mov
xchg
emms
hlt
mov
pop
ljmp
mov
sbb
pop
jno
push
popa
adc
or
addb
aas
pmulhw
adcl
movsb
cmp
in
xlat
push
rcrl
mov
jmp
leave
lahf
push
in
cmpsl
aam
dec
arpl
jbe
sub
inc
in
xchg
push
push
adc
mov
xor
jb
cmp
pop
in
mov
push
cmpsb
add
mov
inc
idivl
xchg
add
mov
and
ficoml
out
cltd
lods
push
jns
adcl
fbstp
push
fcmovnb
xchg
pop
out
mov
adc
in
ja
adc
sub
push
push
mov
lahf
dec
push
adc
pop
xor
lcall
cmp
addr16
adc
push
mov
sbb
cwtl
jae
and
push
lahf
and
inc
mov
int3
and
je
dec
mov
mov
xor
or
add
shl
pop
dec
mov
pop
sbb
rsm
and
add
jo
pushf
andl
and
dec
nop
push
int
cmp
jecxz
mov
cmpsb
pop
push
out
sbb
dec
sbb
arpl
push
xor
jle
cmp
dec
or
out
das
mov
add
test
xorb
popf
ja
cmp
or
fildll
rol
imul
dec
xor
cmp
jns
mov
outsb
shlb
cli
js
orl
add
sti
sub
mov
xor
xor
and
insb
push
inc
repnz
push
lahf
stos
rorb
iret
test
mov
hlt
je
mov
push
mov
ret
insb
rcrb
and
add
cmp
sbb
mov
lea
dec
adc
shlb
std
add
out
and
mov
adc
adc
pop
mov
pop
push
in
mov
push
sub
dec
mov
ret
cmp
and
into
jl
ret
es
xchg
sbb
out
cwtl
sbb
jns
arpl
sbb
mov
sub
lret
lds
mov
mov
int
mov
mov
clc
scas
pop
xchg
mov
mov
stos
scas
or
aad
lock
loop
cwtl
adc
lds
mov
or
sbb
xchg
pushf
mov
push
mov
sbb
jge
repnz
ja
or
dec
pop
out
sub
faddl
cwtl
jbe
aas
fiaddl
inc
mov
mov
test
fs
adc
in
fidivrs
inc
in
sbb
xchg
and
repz
cli
push
lahf
push
icebp
dec
leave
xchg
cmp
icebp
mov
push
mov
jb
adc
mov
cmpsl
inc
dec
fwait
xor
push
push
test
xchg
pop
mov
mov
sbb
or
xchg
jae
sarl
lea
idiv
jbe
sub
out
xor
shlb
and
imul
lcall
orl
in
mov
cmp
cwtl
jns
pop
cld
dec
aad
jbe
push
icebp
xor
std
imul
fisttpl
iret
sub
jge
pop
sti
xlat
dec
scas
js
inc
clc
jmp
adc
xchg
mov
jne
das
rcrl
jne
repnz
stos
fbld
andl
lret
add
pushl
in
lret
cwtl
xchg
mov
cld
dec
mov
mov
sarb
sarl
jle
jns
cwtl
push
sub
pop
lock
mov
decb
mov
aad
xor
rcrl
cmp
iret
xor
testb
stos
push
xor
popf
jg
pop
daa
jl
xor
adc
fistps
in
fsubr
insb
jmp
test
cmc
mov
add
or
int3
les
mov
pop
or
cmp
test
gs
xchg
cmpsb
push
mov
gs
add
and
and
lea
inc
inc
pop
stc
xor
cmc
popa
pop
add
aam
mov
cmpsb
cmpb
add
lds
xchg
mov
mov
jle
xchg
adc
adc
cmc
mov
out
jae
popf
add
sub
mov
or
jl
pop
push
and
mov
cmp
call
mov
loopne
cmpsb
sub
outsl
jno
xor
vpunpckhqdq
lock
xor
in
stos
mov
mov
push
xchg
iret
xor
aaa
pop
pop
mov
scas
ror
pop
jle
and
push
or
aad
imul
mov
ljmp
not
push
sub
dec
int3
imul
cmp
pop
lret
or
mov
jmp
add
notl
xor
push
inc
je
jne
jno
cmc
fcomp
test
mov
add
inc
push
jb
rclb
mov
push
xor
and
jge
cmpsl
outsb
xchg
dec
xchg
dec
xchg
fistps
adc
rcll
and
adcl
and
add
sti
xor
cmpsb
mov
pop
mov
or
jle
idivb
insl
sub
insl
pusha
or
lock
fistpll
jg
xor
pop
out
iret
cmp
scas
pop
gs
sub
das
fdivrp
cmp
faddl
xchg
pop
adc
xor
clc
loop
xor
push
and
es
scas
pop
sub
sub
add
cltd
or
mov
xor
jp
mov
cmp
and
sbb
dec
push
bound
sub
fcmove
std
cmpsl
and
aad
sarl
pushl
sar
andb
xchg
jo
mov
stos
dec
test
inc
dec
xchg
mov
shll
mov
xchg
pop
in
roll
push
adc
jg
imul
jmp
jns
or
xchg
sbbl
push
jbe
dec
shl
mov
std
jne
ja
mov
enter
sbb
in
jbe
xor
mov
cwtl
lret
fldenv
lahf
or
mov
out
stos
popf
cwtl
sbb
sub
test
push
mov
mov
jbe
and
jo
test
mov
add
cltd
daa
enter
add
xchg
mov
sarb
inc
mov
sti
fcmove
xchg
stos
lahf
lret
mov
mov
ds
mov
mov
shl
jae
xor
pop
cltd
lds
sbb
lods
sbb
inc
sbb
xor
push
dec
mov
push
inc
and
movsb
cmpsl
in
jno
cmp
pop
inc
xlat
mov
mov
rclb
and
or
shl
add
push
lcall
lock
mov
sbb
xchg
roll
dec
popf
dec
subb
jecxz
daa
lahf
pop
les
xchg
lcall
sarb
ret
mov
sti
sbb
xor
jmp
out
movsl
and
jno
sbb
cmp
fisubs
pushf
das
nop
push
inc
push
add
sub
and
sub
fs
out
jmp
cmp
cmp
xchg
mov
xchg
mov
adcl
cmc
adc
xor
or
mov
fdivr
test
xor
xor
das
call
leave
sub
test
mov
test
data16
sbb
fcos
sbb
leave
xchg
call
and
jae
je
jns
gs
mov
ja
mov
aam
hlt
lods
das
inc
loope
mov
iret
jecxz
pop
imul
addb
fstp
dec
sub
sub
in
stos
test
and
sbb
push
pushf
scas
dec
dec
mov
nop
and
in
mov
movb
inc
or
ljmp
stc
xor
sub
pop
mov
and
cmp
mov
push
repz
lock
je
pop
push
xor
shrb
das
xchg
notb
mov
jne
repnz
getsec
out
pop
lret
or
dec
or
scas
pop
stos
stos
push
jbe
lcall
adc
push
mov
divl
cmp
sbb
pop
mov
lods
or
mov
xchg
mov
mov
mov
or
adc
inc
in
movsl
xchg
push
add
int
in
push
out
test
mov
cmp
arpl
push
inc
popa
cmp
or
cld
imul
dec
jnp
scas
jecxz
cmp
xchg
out
pop
or
mov
dec
test
sub
mov
push
loopne
sahf
dec
jne
daa
loope
add
out
das
cwtl
inc
lret
jno
mov
sub
sbbl
leave
out
xchg
xchg
jge
test
adc
and
aad
mov
lret
scas
outsl
adc
lds
xor
adc
cmpsb
jg
sbb
xchg
jle
xor
outsl
out
pushf
in
pop
inc
and
cmpl
int
popf
dec
les
pushf
push
add
xchg
xlat
bound
fcomip
lea
pop
icebp
ret
or
xchg
sti
pop
mov
mov
adc
cmpb
out
xor
cltd
dec
ret
iret
sbb
jg
pop
jae
rcr
inc
icebp
inc
sbb
add
adc
xchg
jl
fnstsw
mov
loopne
pop
jmp
cld
loopne
or
pop
mov
aaa
in
insl
popf
movsl
add
mov
cmpsb
inc
out
lcall
mov
sub
dec
loope
clc
iret
sar
pop
xor
jmp
mov
out
outsl
inc
out
dec
sbbb
enter
xor
ficoml
inc
rcl
pop
sbb
sub
xchg
into
mov
pop
add
sahf
mov
call
cwtl
adc
lahf
cmp
pop
dec
cwtl
push
sub
xorb
sbb
pop
sti
shl
mov
clc
lds
aas
inc
dec
xchg
xchg
jae
repnz
pop
pavgw
mov
push
movsb
fadds
cmp
mov
or
rcrl
add
xlat
shll
dec
data16
imul
addr16
fnstcw
pop
pop
pop
mov
xor
push
and
lahf
and
movsb
popf
in
repz
lahf
scas
add
jp,pn
add
arpl
adc
pop
movsw
jle
loopne
mov
cmp
sub
cwtl
lahf
scas
ljmp
int3
inc
fs
andl
loope
outsl
add
dec
pop
stc
out
jmp
into
pushf
dec
add
jecxz
nop
movsb
jns
stos
jbe
mov
dec
and
jecxz
mov
sti
inc
cmp
cmc
test
in
data16
inc
aas
push
pop
cmpsb
lcall
jo
fs
add
dec
lret
rcl
cwtl
outsl
push
mull
stos
adc
cvtps2pi
and
cmpsb
ret
dec
js
jne
xchg
mov
push
mov
cmpsb
lea
jnp
adc
lods
sbb
sarl
cmp
ljmp
jl
and
dec
icebp
xchg
rclb
pop
cmp
cmp
clc
dec
inc
imul
mov
pop
mov
ja
mov
icebp
cmp
jge
shl
mov
cmp
jae
mov
pop
out
movsl
jae
mov
xchg
loopne
xchg
xchg
fs
mov
xor
and
mov
mov
les
lret
xorb
mov
xchg
jl
fsub
or
adcb
jae
and
jno
xchg
mov
cmp
inc
push
cld
push
insl
fildll
lret
jbe
fidivrl
stc
call
push
test
jne
cmp
imull
sub
int3
out
testb
jge
mul
xlat
mov
mov
ret
div
pop
or
das
lods
dec
jge
pop
pop
shrl
dec
dec
mov
dec
lcall
call
or
jmp
ds
scas
sub
or
je
outsl
js
js
push
sbb
adc
pop
in
mov
aad
js
mov
sbb
sti
adc
jge
scas
mov
aaa
push
inc
mov
inc
loop
iret
xor
stos
scas
fs
sbbb
in
jne
xlat
xchg
fidivrl
mov
add
xchg
iret
inc
mov
pushf
xor
clc
sbb
sbb
mov
adc
add
and
mov
mov
stos
aam
add
std
es
mov
mov
xchg
sub
adc
mov
ret
pop
xchg
adc
push
add
jg
sti
js,pt
std
aam
imul
sub
jl
dec
into
sub
inc
xlat
jnp
adc
jmp
lods
shlb
stos
orb
std
shll
push
jo
push
mov
test
fidivrs
ja
xor
cmp
cli
aam
idivl
xchg
mov
mov
shrb
or
dec
stos
aas
mov
or
rorl
in
mov
call
test
mov
sub
insb
dec
cmpsl
lds
xchg
rcrb
cmp
aas
ds
addr16
adc
movsl
jg
mov
jle
popa
fcoms
scas
mov
mov
push
cmp
scas
xor
sbb
out
loop
dec
xlat
jmp
push
and
enter
movsl
data16
and
fsubrs
outsl
mov
mov
mov
sub
jge
pop
dec
es
mov
insb
xrelease
jecxz
inc
sub
xchg
stc
adc
pop
stos
xchg
popa
jmp
sub
es
push
xchg
test
and
inc
xchg
div
dec
dec
shrb
in
dec
jae
aam
cmp
adc
lret
cmp
push
cli
sbb
fldl
mov
roll
out
aaa
sbb
outsl
mov
addl
das
loop
shlb
addb
xor
pop
and
orl
dec
nop
cmp
add
jnp
push
pushf
std
adc
mov
pop
jp
cli
adc
cwtl
dec
lods
xlat
and
roll
ficoms
mov
xor
inc
adc
incl
pop
ss
add
adc
or
or
push
es
push
daa
fists
pop
es
xchg
inc
pop
push
xorb
xchg
lcall
shlb
xchg
jb
je
push
push
and
das
imul
mov
jg
or
mov
popa
pop
dec
sti
dec
mov
data16
stc
jns
lods
adc
mov
andb
popa
lret
sub
lret
and
ret
push
mov
mov
push
outsl
pushf
pop
fildl
push
pop
pop
mov
sahf
repz
movl
and
jge
lock
jl
stos
mov
xor
sahf
nop
aas
push
iret
outsl
xchg
xor
jle
dec
clc
mov
adc
cltd
xchg
or
xchg
cmp
sbb
jmp
ficomps
stos
int
fisttpll
or
cmp
dec
sbb
lods
sti
mov
lret
in
mov
fisttpll
or
cmp
dec
sbb
lods
decl
iret
jge
std
ror
sbb
outsl
std
pop
sbb
sub
mov
mov
aas
mov
stos
int
pop
dec
sub
pop
sbb
push
mov
mov
int3
int3
inc
add
test
pop
loop
or
add
add
add
add
pop
dec
add
add
add
add
add
add
add
add
lea
roll
add
add
add
pop
dec
add
add
add
add
add
add
add
add
add
add
add
icebp
add
add
add
add
jae
ss
add
roll
or
dec
add
push
add
mov
add
add
add
add
add
add
add
add
add
bound
cwtl
add
add
add
add
add
add
cmpsl
add
add
ret
add
add
add
mov
add
add
add
add
out
add
add
add
in
add
add
add
add
add
inc
add
add
or
sbb
sbb
es
add
add
add
add
add
adc
xchg
add
add
inc
add
sbb
lret
add
add
add
add
add
add
add
add
add
add
fiaddl
add
add
rolb
add
ret
add
hlt
add
sub
icebp
add
add
add
add
add
add
add
add
add
add
add
cmp
mov
add
sbb
roll
add
add
add
add
add
arpl
or
inc
add
mov
cmp
faddl
xchg
add
add
add
add
add
mov
add
mov
add
icebp
add
add
add
push
jns
ret
add
add
imul
enter
push
add
add
add
add
add
push
insl
add
add
clc
add
add
add
add
xor
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
imul
and
add
add
add
add
add
add
addl
test
sahf
add
add
pop
add
push
add
add
je
or
arpl
jnp
mov
add
add
add
add
lea
out
add
sub
inc
add
add
add
or
movl
or
push
add
mov
addl
xor
stos
add
add
add
add
add
add
add
add
cltd
add
in
add
add
add
or
roll
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
sub
xor
add
push
inc
add
jle
xor
jecxz
mov
inc
add
cltd
add
je
sbb
pop
add
mov
add
and
pop
add
add
add
add
add
add
or
movl
insl
add
add
add
add
add
add
xchg
add
add
add
push
add
add
add
movsb
add
mov
std
testl
flds
mov
pop
push
clc
jge
fwait
roll
lahf
dec
push
iret
push
ss
pushf
dec
je
jb
and
pop
mov
popa
and
ljmp
call
aad
mov
add
shlb
jge
cmc
shll
loop
hlt
sahf
pop
push
pop
repnz
lods
push
pop
jne
mov
sbb
fwait
loope
addr16
ljmp
lret
adc
push
mov
movsb
jp
test
cmp
sti
mov
xchg
sbbb
mov
add
adc
js
push
jbe
jne
dec
cmp
xor
pop
pop
inc
jmp
rolb
repnz
xor
xchg
js
outsb
outsl
pop
mov
mov
lcall
jne
iret
into
ret
imul
dec
dec
cmp
xchg
repz
hlt
out
mov
or
mov
enter
cmpsb
stos
jmp
jmp
push
fldcw
mov
popa
push
iret
xchg
aas
sbb
test
je
mov
xor
mov
mov
jecxz
push
xchg
out
xchg
rcl
mov
lret
sub
push
cs
adc
std
std
sbb
dec
mov
cmp
jmp
outsb
movsb
lods
int3
or
push
int3
aaa
add
sub
imul
stc
into
adc
xchg
sub
std
jne
les
out
mov
mov
mov
inc
imul
out
mov
mov
out
pop
ret
fwait
sahf
sub
fldenv
lret
push
int
lock
aam
ret
sub
xchg
push
mov
mov
in
lock
cs
mov
lods
mov
out
daa
out
cmp
jle
add
mov
nop
sbb
nop
addl
imul
sbbb
push
cmpsb
adc
ds
lods
push
sbb
insb
xor
inc
cwtl
fidivs
int3
movsb
icebp
dec
imul
cmp
sbb
add
loop
test
test
mov
fimull
fs
rdpmc
push
loop
or
pop
out
cmp
loop
data16
or
pop
in
aaa
je
aad
xchg
xor
lock
jle
dec
sarb
stc
imul
pop
or
jp
cmp
push
rep
rclb
imul
mov
clc
jmp
out
add
sbb
pop
xor
test
jae
enter
incl
stos
nop
xor
out
repz
lret
xlat
or
ficomps
rcrb
mov
cmp
jmp
xchg
roll
and
push
stc
xchg
sbb
inc
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fadds
add
clc
add
add
add
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
add
pushf
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rolb
add
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
daa
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
daa
add
fsubl
add
aam
add
int3
daa
add
les
add
mov
daa
add
lods
daa
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
sub
add
add
add
add
add
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
