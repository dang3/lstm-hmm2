jmp
xor
or
dec
push
lret
lods
jns
xlat
enter
jmp
movsb
adc
inc
jge
jnp
test
scas
push
xchg
inc
ljmp
fldenv
add
xlat
fstl
jl
adc
cwtl
cmc
mov
adc
adcb
out
add
pop
imul
adc
lahf
lock
cmpsb
jmp
cltd
imull
faddp
inc
xor
dec
loopne
push
fwait
cmp
shlb
xor
mov
ror
xchg
stc
inc
push
dec
in
jmp
jmp
and
cli
scas
sar
sti
sbb
mov
cmp
adc
push
mov
stos
or
and
add
fimull
mov
mov
xor
and
nop
lea
in
jmp
pop
or
in
mov
mov
clc
aad
xchg
aam
sub
jo
es
loop
call
mov
iret
pusha
sbb
push
daa
fdivs
or
jmp
dec
push
lret
lods
jns
xlat
enter
movsb
adc
inc
jge
jmp
xchg
push
xchg
inc
ljmp
fldenv
add
push
fstpt
out
cmc
mov
adc
adcb
sarl
out
add
xor
pop
imul
adc
lahf
lock
jmp
cmpsb
jmp
cltd
imull
faddp
inc
xor
dec
loopne
push
fwait
cmp
shlb
xor
mov
ror
xchg
and
cli
scas
sar
sti
sbb
mov
cmp
adc
push
mov
stos
or
and
add
fimull
mov
mov
xor
and
nop
lea
jmp
in
mov
jle
inc
jecxz
push
mov
mov
fsubr
jb
clc
aad
xchg
aam
sub
jo
es
loop
call
mov
iret
pusha
sbb
push
daa
fdivs
or
dec
push
lret
lods
jns
jmp
xlat
enter
movsb
adc
inc
jge
jnp
test
inc
inc
ljmp
sub
push
add
push
fstpt
out
cmc
mov
adc
adcb
sarl
out
add
repnz
js
outsb
jmp
adc
lahf
lock
insl
cmpsb
jmp
cltd
imull
faddp
inc
xor
dec
loopne
jmp
push
fwait
cmp
shlb
xor
mov
ror
xchg
stc
inc
push
dec
in
and
cli
scas
sar
sti
sbb
mov
cmp
jmp
push
mov
stos
or
and
add
fimull
mov
mov
xor
and
nop
lea
in
jmp
mov
jle
in
mov
mov
ljmp
subl
imul
loop
call
mov
iret
pusha
sbb
push
daa
fdivs
jmp
lret
lods
jns
dec
ret
gs
inc
jge
jnp
test
scas
push
xchg
inc
ljmp
fldenv
add
push
fstpt
out
cmc
mov
lret
aas
adc
adcb
out
sarl
out
jmp
add
repnz
js
outsb
adc
lahf
lock
cmpsb
jmp
cltd
imull
faddp
inc
xor
dec
loopne
push
fwait
cmp
shlb
shll
popa
mov
ror
xchg
stc
inc
push
dec
in
and
and
idiv
jmp
sbb
mov
cmp
push
mov
stos
or
and
add
fimull
mov
pop
cld
jmp
mov
xor
and
nop
lea
in
mov
jmp
jle
in
mov
mov
clc
aad
xchg
aam
sub
jo
es
loop
call
mov
iret
pusha
sbb
jne
jmp
repz
or
dec
jmp
push
lret
lods
jns
xlat
enter
movsb
adc
inc
jge
jnp
ljmp
mov
inc
ljmp
fldenv
add
push
fstpt
jmp
out
ds
cmc
mov
adc
adcb
sarl
out
add
pop
imul
adc
lahf
lock
cmpsb
jmp
cltd
imull
faddp
inc
xor
dec
loopne
push
fwait
cmp
push
mov
push
mov
push
mov
test
push
mov
jne
cmp
jmp
cmpsl
pop
mov
dec
dec
jae
popa
mov
ror
xchg
stc
inc
push
dec
in
and
cli
scas
sar
sti
sbb
mov
cmp
push
mov
stos
or
and
add
fimull
mov
pop
cld
mov
xor
and
nop
lea
ds
fsubr
jb
clc
aad
xchg
aam
sub
jo
es
loop
call
mov
iret
pusha
sbb
push
daa
fdivs
or
dec
push
lret
lods
jmp
jns
xlat
enter
movsb
adc
repz
jp
inc
jge
jnp
test
scas
push
xchg
inc
ljmp
fldenv
add
push
fstpt
out
cmc
mov
lret
or
insb
cmp
and
cmp
add
repnz
js
outsb
adc
lahf
lock
cmpsb
jmp
cltd
imull
faddp
inc
xor
dec
loopne
push
fwait
cmp
shlb
xor
pop
jmp
int
dec
jmp
sub
inc
push
dec
in
and
cli
scas
sar
sti
sbb
mov
cmp
push
mov
stos
or
and
add
fimull
mov
mov
jne
xor
and
nop
lea
in
mov
pop
jmp
push
mov
mov
jb
clc
aad
xchg
aam
sub
jo
es
loop
call
mov
iret
pusha
sbb
push
daa
fdivs
or
dec
push
lret
lods
jns
xlat
enter
mov
inc
jge
jnp
test
pop
jmp
inc
ljmp
sub
push
add
push
fstpt
out
cmc
mov
adc
adcb
sarl
out
add
repnz
js
ret
push
outsb
adc
lahf
lock
cmpsb
jmp
cltd
imull
push
jmp
loopne
push
jmp
fwait
cmp
shlb
xor
mov
ror
xchg
stc
inc
push
dec
in
and
cli
scas
sar
sti
sbb
mov
cmp
push
mov
stos
or
and
jmp
add
fimull
jmp
mov
mov
xor
and
jmp
nop
lea
in
mov
jle
in
mov
mov
clc
aad
xchg
aam
sub
jo
es
loop
call
xor
jmp
sbb
push
daa
jmp
fdivs
or
dec
push
lret
lods
jns
xlat
enter
movsb
adc
inc
jge
jnp
test
scas
push
xchg
inc
ljmp
fldenv
lds
add
push
fstpt
add
add
jmp
cmc
mov
lret
or
adcb
arpl
out
add
repnz
js
outsb
adc
lahf
lock
cmpsb
jmp
cltd
imull
faddp
inc
xor
dec
loopne
push
fwait
cmp
shlb
add
test
add
add
ds
mov
jmp
ror
xchg
stc
inc
push
dec
in
and
cli
scas
sar
sti
sbb
mov
cmp
push
mov
stos
or
and
add
fimull
mov
mov
jne
xor
and
nop
lea
in
mov
mov
jmp
mov
fsubr
jb
clc
aad
xchg
aam
sub
jo
es
loop
call
mov
iret
pusha
sbb
push
daa
fdivs
or
dec
push
lret
lods
jns
xlat
enter
movsb
jmp
jmp
adc
inc
jge
jnp
test
scas
push
jmp
xchg
inc
jmp
ljmp
fldenv
add
push
fstpt
out
cmc
mov
adc
insb
cmp
arpl
out
add
repnz
js
outsb
adc
mov
jmp
lock
aaa
cmp
mov
jmp
jmp
dec
dec
dec
dec
fmuls
jmp
xor
dec
loopne
push
fwait
jmp
cmp
shlb
xor
mov
ror
xchg
stc
inc
push
dec
in
and
cli
scas
sar
sti
sbb
mov
cmp
push
mov
stos
jmp
or
ds
and
add
fimull
jmp
mov
mov
cmp
sbb
xor
and
nop
lea
in
mov
jle
in
mov
mov
clc
aad
xchg
aam
sub
rcrl
jo
es
loop
call
mov
iret
pop
jmp
daa
fdivs
or
dec
push
lret
lods
jns
xlat
enter
movsb
adc
inc
jge
jnp
test
jmp
scas
push
xchg
inc
ljmp
fldenv
add
push
fstpt
or
out
cmc
mov
cmp
je
lret
or
adcb
sarl
out
add
jmp
pop
imul
adc
lahf
lock
cmpsb
jmp
cltd
imull
faddp
inc
xor
dec
loopne
push
jmp
fwait
cmp
shlb
xor
mov
ror
xchg
stc
inc
push
dec
in
and
push
jmp
shrb
std
jg
pop
jmp
divb
pop
xor
jmp
sti
xor
add
aaa
in
int3
mov
pop
jmp
push
mov
stos
or
and
add
fimull
mov
mov
xor
and
nop
lea
in
mov
jle
in
mov
mov
jmp
jb
clc
aad
xchg
aam
sub
jo
es
loop
call
mov
iret
pusha
sbb
mov
xor
or
dec
push
lret
lods
jmp
jns
xlat
enter
cmp
inc
jge
jnp
test
scas
push
jmp
xchg
inc
ljmp
fldenv
add
push
fstpt
out
cmc
mov
adc
adcb
arpl
out
add
repnz
js
outsb
adc
lahf
lock
cmpsb
jmp
cltd
imull
faddp
inc
xor
dec
loopne
push
fwait
cmp
shlb
xor
mov
shr
ret
int
dec
sub
inc
push
dec
in
and
cli
scas
sar
outsb
or
add
ds
adc
push
mov
stos
or
and
add
fimull
mov
mov
xor
and
nop
lea
in
mov
jle
in
mov
mov
cmp
jb
clc
aad
xchg
aam
sub
jo
es
int3
sbb
ja
add
lcall
dec
push
daa
fdivs
or
dec
push
lret
lods
jns
cmp
xlat
enter
mull
inc
jge
jnp
test
scas
push
xchg
inc
ljmp
fldenv
add
push
fstpt
out
cmc
mov
test
add
insb
cmp
and
cmp
add
repnz
js
outsb
adc
lahf
lock
cmpsb
jmp
cltd
imull
faddp
inc
xor
dec
loopne
push
fwait
cmp
shlb
xor
jmp
mov
jmp
ror
xchg
stc
inc
push
dec
in
and
out
xchg
cli
scas
jmp
sar
sti
sbb
mov
cmp
push
mov
stos
or
and
add
fimull
mov
fdivr
mov
xor
and
nop
lea
in
mov
adc
jmp
push
mov
mov
jb
clc
aad
xchg
aam
sub
jo
es
loop
call
mov
iret
pusha
sbb
push
daa
fdivs
or
dec
push
lret
lods
jns
xlat
jmp
enter
movsb
adc
inc
jge
jnp
test
inc
ljmp
sub
push
add
push
fstpt
out
cmc
mov
adc
adcb
jmp
sarl
out
add
ds
repnz
js
outsb
adc
icebp
push
add
cmp
jmp
cltd
imull
faddp
inc
xor
dec
loopne
push
fwait
cmp
shlb
xor
mov
ror
xchg
stc
inc
push
dec
in
jmp
and
cli
scas
sar
sti
sbb
mov
cmp
adc
mov
jmp
stos
or
and
add
fimull
mov
pop
cld
mov
xor
and
nop
lea
in
mov
jle
in
mov
mov
clc
aad
ret
jmp
pop
jo
jmp
es
loop
call
mov
iret
pusha
sbb
push
daa
fdivs
or
dec
push
lret
lods
jns
xlat
enter
movsb
adc
inc
jge
jnp
test
scas
jmp
jmp
push
xchg
inc
ljmp
fldenv
in
push
add
push
fstpt
out
cmc
mov
adc
and
cmp
jmp
add
repnz
js
outsb
adc
lahf
lock
cmpsb
jmp
cltd
imull
faddp
inc
xor
dec
loopne
push
fwait
cmp
shlb
xor
mov
ror
jmp
xchg
stc
inc
push
dec
jmp
in
and
jmp
cli
scas
sar
sti
sbb
mov
cmp
push
mov
stos
or
and
add
fimull
mov
mov
xor
and
nop
lea
in
mov
pop
push
mov
mov
clc
aad
xchg
jmp
aam
sub
jo
jmp
es
loop
call
inc
les
xchg
sbb
into
repz
or
dec
push
lret
lods
jns
xlat
enter
movsb
adc
inc
jge
jnp
jmp
test
scas
push
xchg
inc
ljmp
cmp
sub
add
cmp
push
fstpt
out
cmc
mov
adc
adcb
sarl
out
add
pop
imul
push
outsb
adc
lahf
lock
cmpsb
jmp
cltd
jmp
imull
fsubrp
cmp
dec
loopne
push
fwait
cmp
shlb
xor
mov
ror
xchg
stc
inc
push
dec
jmp
in
and
cli
scas
sar
sti
sbb
mov
cmp
push
mov
stos
or
add
jmp
add
cmp
pop
cld
mov
xor
and
nop
lea
in
mov
jle
jmp
jmp
in
mov
mov
clc
aad
xchg
aam
sub
jo
es
loop
jmp
call
mov
iret
pusha
sbb
push
daa
fdivs
or
dec
push
lret
lods
dec
jne
jmp
adc
inc
jge
jnp
inc
pushf
test
scas
push
xchg
inc
ljmp
fldenv
add
push
fstpt
out
cmc
mov
adc
insb
jmp
cmp
arpl
out
jmp
add
jmp
repnz
js
outsb
adc
lahf
lock
cmpsb
jmp
cltd
imull
faddp
inc
xor
dec
loopne
push
fwait
cmp
shlb
xor
mov
sar
ror
xchg
stc
inc
push
dec
in
and
cli
scas
ret
jmp
mov
cmp
push
adc
push
mov
stos
or
and
add
fimull
mov
mov
xor
and
nop
lea
in
mov
jle
in
mov
mov
jb
clc
aad
sub
xchg
aam
sub
jo
es
loop
call
inc
les
xchg
sbb
into
repz
or
add
jmp
gs
inc
jge
jnp
test
scas
push
xchg
inc
ljmp
fldenv
add
push
fstpt
out
cmc
mov
jmp
adc
insb
jmp
cmp
arpl
out
add
repnz
js
outsb
adc
lahf
lock
cmpsb
jmp
cltd
imull
faddp
inc
xor
dec
loopne
push
fwait
cmp
shr
lret
mov
jae
popa
jmp
mov
ror
xchg
testl
in
and
cli
scas
sar
sti
sbb
mov
cmp
push
mov
stos
or
and
add
fimull
mov
mov
xor
cmp
nop
lea
in
mov
jle
in
mov
mov
clc
aad
cmp
xchg
aam
sub
jo
es
loop
call
mov
iret
pusha
sbb
push
daa
fsubr
fnsave
or
dec
push
lret
lods
jns
xlat
enter
movsb
adc
inc
jge
add
add
jmp
xchg
push
xchg
inc
ljmp
fldenv
add
push
fstpt
out
cmc
mov
adc
adcb
sarl
out
add
xor
pop
imul
adc
lahf
lock
jmp
cmpsb
jmp
cltd
imull
faddp
inc
xor
dec
loopne
push
fwait
cmp
shlb
xor
mov
ror
xchg
jmp
in
and
cli
scas
sar
sti
sbb
mov
jmp
cmp
push
mov
stos
or
and
add
fimull
mov
mov
xor
and
nop
jmp
inc
or
mov
inc
movsl
jle
in
jmp
mov
mov
clc
aad
xchg
aam
sub
jo
es
loop
call
mov
iret
pusha
sbb
push
daa
fdivs
or
dec
push
lret
lods
jns
push
mov
sub
push
push
jmp
aas
dec
ret
push
sub
or
and
testb
mov
and
inc
inc
and
xor
sub
sub
sub
sub
sub
or
shl
add
xor
or
xor
add
or
xor
or
xor
dec
jne
mov
mov
pop
mov
jmp
js
test
push
sub
mov
stos
fwait
rcll
movsb
movsl
and
ss
push
add
push
add
or
jmp
stos
push
adc
lahf
sub
lock
rolb
add
dec
hlt
leave
ret
push
mov
sub
push
jmp
int
mov
xchg
dec
xchg
xor
push
xor
mov
mov
mov
xor
and
add
dec
and
and
add
inc
xor
xor
xor
add
lea
and
sub
xor
dec
jne
mov
mov
mov
jmp
cmp
add
jmp
adc
and
mov
mov
jmp
adc
mov
shl
insb
add
add
leave
ret
push
mov
sub
push
jmp
mov
cmp
push
xor
mov
mov
mov
and
rol
add
xor
rol
xor
xor
xor
dec
and
sub
or
xor
and
inc
xor
xor
sub
dec
jne
mov
mov
mov
jmp
mov
add
pop
xor
leave
ret
push
mov
sub
push
jmp
dec
and
or
push
jmp
bound
xor
mov
mov
mov
sub
sub
sub
add
xor
ror
xor
and
sub
sub
and
shl
add
dec
jne
mov
mov
pop
pop
sub
leave
ret
call
adc
arpl
rolb
movl
andl
jp,pn
push
add
jnp
inc
push
dec
xchg
mov
lea
xchg
sub
sbb
and
pop
jnp
dec
jbe
push
xor
cmpsb
xor
ret
sub
es
mov
cmp
xchg
and
pushf
test
push
jne
cltd
or
add
xor
push
addps
sub
pop
mov
mov
xor
fcmovnu
and
pop
xor
pop
roll
fnstenv
pop
out
xor
lods
adc
int
or
cld
gs
inc
out
fisubl
jg
cmpsb
cmp
in
push
xor
scas
mov
sbb
fsubl
pusha
in
inc
lods
sti
sbb
pop
mov
cli
frstor
push
imul
inc
xchg
jb
inc
scas
in
cmp
mov
jge
cmpsb
add
sub
mov
test
out
test
xchg
pop
fwait
movsb
mov
js
dec
cmp
imul
adcb
outsb
loop
xchg
xor
dec
inc
inc
cmp
sub
cmp
dec
lds
xchg
pop
in
xchg
subl
popl
add
inc
push
aaa
jne
sbb
pop
lahf
out
inc
repnz
rcrl
and
cmpsb
scas
push
je
dec
lock
push
and
sub
pop
dec
dec
xchg
sbb
lods
jge
outsb
jmp
inc
ret
inc
mov
cmpsb
sub
add
or
cmc
xchg
mov
adc
fs
inc
sub
adc
sub
sub
cld
je
rolb
pop
mov
inc
jl
jno
test
jns
and
dec
clc
in
ret
jnp
cmova
sbb
pop
lret
mov
inc
xor
arpl
cmc
push
hlt
or
add
xlat
xchg
push
inc
jns
jle
and
daa
inc
push
lock
ret
loop
add
pop
push
push
mov
jmp
mov
sbb
pop
scas
xchg
or
jle
push
xchg
int
cmpsb
aaa
xchg
cld
pop
in
inc
pop
dec
jbe
xchg
jmp
and
add
gs
push
or
dec
aas
sub
add
xchg
popa
jg
jno
push
jle
inc
dec
inc
ja
aas
ret
test
in
dec
out
xor
mull
lret
out
pop
dec
jae
test
dec
ja
mov
jmp
jbe
sti
dec
fnstenv
mov
xlat
jmp
sub
rolb
xor
xchg
jmp
xor
mov
mov
mov
aas
ror
pop
sub
fmuls
or
or
xchg
mov
lret
push
xor
sar
and
jmp
dec
lea
inc
int
sub
gs
cmpl
fsubrl
sub
sbb
push
xchg
mov
inc
scas
adc
lret
sub
inc
sbb
call
stos
and
adc
xchg
mov
inc
push
popf
lret
js
rcl
vphaddbw
add
push
dec
and
inc
cltd
ljmp
inc
mov
inc
test
mov
popa
les
cmpsb
add
push
add
int3
jecxz
inc
jne
nop
sti
xchg
fldenv
push
in
rolb
inc
fidivs
inc
ror
gs
fs
or
xorl
and
nop
sub
dec
inc
mov
rcr
les
notl
sbb
or
inc
inc
pop
sbb
inc
aad
fwait
sbbl
pushf
pop
push
and
push
jnp
out
xchg
lahf
ret
mov
inc
bound
stos
jl
cmpsb
aaa
inc
push
or
add
sub
imul
cmpsb
cmp
mov
xchg
mov
negb
pop
xchg
xlat
or
jns
xchg
stc
stos
dec
or
popf
in
xor
mov
sub
mov
lea
fwait
iret
xchg
inc
lock
sti
pop
and
and
and
mov
nop
push
or
adc
mov
das
in
nop
das
cmp
dec
jmp
adc
cmp
adc
je
insl
popl
sti
ja
sub
adc
mov
sbb
outsb
push
dec
adc
pop
jmp
xchg
adc
sub
int3
scas
test
jge
mov
popf
adc
subb
cmp
std
ja
stos
sub
adc
jg
out
scas
popf
push
adcb
nop
inc
int
mov
inc
push
sub
ret
test
aad
xchg
std
adc
dec
js
jp
dec
inc
loop
cmp
xchg
fstps
jecxz
cmpsl
movlps
dec
call
fucomi
cmp
pop
push
mov
jnp
cmp
out
cltd
xor
loopne
imul
ret
push
popf
aam
jmp
jne
jo
les
xor
jb
or
lahf
inc
sbb
dec
ds
outsl
jns
mov
dec
div
and
push
test
mov
add
sbb
inc
push
xor
pop
cmpsl
jmp
in
in
mov
cmpsl
jmp
popa
sbb
fs
repz
test
and
cmpsb
push
xchg
shl
cli
cmp
push
sub
sub
xchg
mov
jl
dec
es
mov
lahf
bound
and
pop
cmp
and
xor
sub
pop
xor
movsl
inc
insl
dec
inc
push
jnp
xor
mov
sub
xor
sbb
jns
fistpll
pop
or
inc
mov
or
insb
lods
pop
pushf
cmp
mov
inc
movsl
mov
fldl
nop
jle
nop
add
push
unpcklps
imul
mov
add
or
lods
pop
dec
push
jns
call
icebp
rcrb
lock
fnstenv
and
movsl
lea
push
pop
xor
mov
ret
sbb
xor
xchg
leave
jle
cmp
xor
push
mov
pusha
out
out
in
xchg
mov
add
mov
xor
fiaddl
and
mov
test
les
jl
inc
inc
inc
nop
push
mov
inc
lea
aas
lods
xchg
fisubrl
roll
cmp
rorl
int
and
cwtl
pop
lcall
inc
sbb
rcll
ds
mov
mov
or
adc
sub
insb
mov
xor
mov
inc
dec
mov
pop
and
push
pop
fs
stc
dec
inc
repz
mov
pop
inc
dec
jnp
push
aas
notb
pusha
cmpsl
sbb
lret
inc
jl
jp
insl
pop
aad
call
dec
inc
inc
enter
ud0
or
xor
ficompl
fsubl
inc
jbe
add
dec
shrl
or
inc
mov
jl
dec
icebp
les
push
inc
js
mulb
inc
xchg
inc
cmpsl
sub
or
imul
mov
pop
gs
xchg
pop
xchg
cmpsb
sub
adc
inc
mov
push
fcoml
push
inc
add
mov
xor
gs
mov
cltd
icebp
int3
push
jbe
shrb
inc
addl
cli
loopne
sahf
jmp
xchg
xor
lret
push
xor
and
out
cli
cmpsl
scas
popf
or
inc
sub
repnz
and
cltd
lea
addr16
outsb
in
inc
inc
dec
jg
repz
jnp
and
jmp
das
xor
sub
adc
add
sub
filds
or
adc
push
cs
and
push
mov
cmp
dec
xor
push
xchg
xor
lahf
inc
jb
fwait
mov
test
je
inc
loope
jg
es
jbe
out
jecxz
xchg
push
cmpsl
sub
iret
ret
cmpsb
mov
int
dec
xchg
out
push
and
orb
push
mov
jl
inc
pop
test
lret
arpl
mov
fiadds
inc
mov
cmp
testb
inc
mov
dec
dec
mov
jle
cmp
adcl
mov
ret
movsb
sub
push
and
or
inc
jecxz
subb
mov
xchg
es
sti
jne
push
testb
stos
fiadds
dec
scas
sahf
mov
inc
not
xchg
cmp
iret
fdivrl
leave
out
jle
sub
scas
sub
into
jg
dec
pop
and
loopne
xchg
push
pop
clc
ret
and
xor
iret
call
lea
pop
and
inc
sbb
notb
mov
es
xchg
pop
out
fisubs
sub
cmpsl
inc
out
lret
xchg
mov
jae
cmp
dec
bound
inc
mov
dec
and
sbb
rcrl
adc
bound
push
arpl
notb
push
scas
xchg
out
sub
push
jmp
sub
mov
adc
pop
jp
inc
scas
int
inc
ljmp
mov
fsubrs
push
ret
inc
fisubl
inc
push
addr16
inc
mov
test
push
repz
imul
test
xchg
jp
idivl
out
or
and
bound
adc
inc
jg
push
inc
cltd
push
and
jp
pop
jp
or
and
xchg
ret
jg
pop
push
jp
data16
adc
insb
and
inc
pop
jbe
inc
push
sbb
jl
dec
mov
popa
outsb
mov
mov
sahf
stc
push
add
sbb
inc
outsl
and
cmp
push
push
push
jb
and
jae
imul
inc
repz
mov
dec
das
and
jb
push
pop
cs
cmp
or
inc
xorb
mov
jae
inc
pop
andb
daa
mov
lods
adc
xchg
push
out
decb
add
jp
fidivrl
xchg
dec
inc
call
cmp
jbe
pop
mov
lret
js
imul
jne
cmp
fmuls
xchg
add
adc
out
hlt
adc
fsubr
cmp
in
shrb
sbb
sbb
push
push
dec
jp
lods
arpl
pop
xchg
inc
popa
and
cltd
scas
mov
jg
xchg
or
sub
mov
pop
mov
push
adc
fcmovnbe
ret
es
scas
push
sbb
jge
jp
adc
ja
mov
pop
jbe
xor
enter
inc
and
xchg
sbb
and
sbb
loop
xchg
cmpsb
xor
int3
pop
aam
test
sbb
dec
inc
daa
shll
pushf
jno
sbb
xchg
and
pop
dec
sar
scas
xor
in
bound
xchg
mov
insb
xor
adc
rcrb
rol
or
jl
in
in
push
outsb
ret
or
push
out
mov
shl
mov
xchg
mov
inc
jo
push
xor
add
adc
lea
sbb
cmpsb
xor
imul
sbbl
cwtl
rolb
push
inc
pop
xor
cmp
and
andb
xor
xchg
mov
xchg
cmp
lahf
sahf
mov
inc
repnz
xchg
ljmp
fcmovu
jnp
repz
cmc
cs
popf
and
push
lahf
stos
jp
scas
nop
es
sbb
lods
fwait
push
nop
dec
cmpsb
shrl
call
dec
inc
adc
js
fsubs
jnp
push
or
mov
xor
pop
cmove
sbb
xchg
add
pop
std
clc
jl
hlt
sbb
jno
pop
lret
inc
lds
inc
aad
imul
pop
xor
xlat
jmp
arpl
dec
inc
je
jne
mov
ja
and
lock
jle
inc
inc
xchg
mov
int
mov
sub
xchg
and
mov
inc
clc
pusha
dec
and
es
jl
sbb
mov
mov
adc
loop
or
xchg
pop
dec
ja
cmpsl
aaa
data16
das
sub
inc
adc
sbb
mov
sahf
je
mov
jle
xor
sbb
or
mov
sbb
sbbl
lret
lea
adc
shlb
xchg
mov
inc
jbe
in
pop
mov
sub
pop
push
fldt
jl
aam
bound
or
cmpsl
repnz
icebp
mov
mov
and
push
and
mov
popf
sbb
stc
test
std
scas
aas
push
xor
mov
xor
mov
int3
mov
das
jle
testl
dec
mov
scas
sub
adc
aas
inc
push
mov
cs
inc
movsb
xchg
add
mov
fadds
jle
dec
movsb
jl
mov
ja
movsl
and
add
push
notb
out
leave
insb
into
mov
es
mov
gs
cmpsl
and
pushf
push
clc
out
cmp
out
shlb
xlat
or
fists
outsb
sti
jl
fisubrs
into
lret
mov
inc
push
jge
fcmovu
mov
xor
xor
xlat
stos
nop
pop
fbld
pop
mov
adc
push
mov
mov
mov
dec
mov
shrl
mov
xchg
popa
dec
sub
lods
and
test
aas
mov
mov
and
push
pop
mov
aam
cld
jno
add
and
sub
fwait
xor
shll
les
pop
push
jae
mov
add
gs
or
dec
decb
ret
stos
fwait
je
inc
mov
dec
js
sbb
adc
dec
nop
aaa
ljmp
add
dec
sbb
mov
add
ss
push
fisubrl
int
andl
int3
rol
cmp
or
and
out
sar
lahf
test
sbb
insb
pop
sub
scas
cmp
pop
xchg
pop
leave
cltd
out
dec
xchg
push
jnp
je
adc
sbb
dec
or
jne
lods
shll
mov
cltd
cmpsb
sub
push
mov
jbe
cmp
jnp
xor
dec
push
das
mov
pop
adc
lret
sub
lods
push
fists
rorl
xor
enter
push
arpl
popa
imul
inc
mov
or
into
ds
jmp
dec
sub
lods
test
inc
sarb
adc
rolb
outsb
inc
ljmp
adc
pop
cld
dec
sub
fldt
and
out
stos
cli
sbb
fimuls
pop
sarb
in
xchg
adc
cmp
jno,pn
cmpl
add
push
arpl
scas
xor
lds
sbb
cwtl
push
add
mov
xorb
fwait
or
cmpsl
add
and
gs
and
xchg
popf
popf
jo
hlt
mov
xchg
xchg
rol
mov
xor
cs
push
leave
add
je
scas
popf
out
adcb
and
inc
mov
push
sti
repz
test
notb
and
scas
test
ror
push
inc
push
fstpt
fsubr
mov
pop
enter
lock
sbb
fwait
sarb
in
push
dec
sbb
je
repz
inc
lods
into
xor
dec
pop
andb
out
cwtl
sub
push
lods
jmp
jbe
lcall
add
mov
cmpsl
aaa
pop
sbb
test
sbb
shlb
gs
and
inc
stos
shlb
aaa
loop
mov
sub
pusha
dec
ds
and
push
push
and
sub
adc
popa
or
dec
dec
mov
test
cmc
push
dec
dec
orb
fwait
pop
jnp
add
or
into
jbe
xor
add
xor
lds
xchg
add
fsubs
inc
fdivs
into
std
in
inc
jne
out
lods
xor
or
call
call
push
es
aas
repz
sub
fldenv
sbb
rcrl
xor
inc
fdivl
mov
out
inc
divps
add
mov
ss
idiv
and
xor
cwtl
ss
fidivs
mov
enter
fistpll
aad
cmp
sti
and
lcall
jnp
xor
test
cld
push
icebp
fnstcw
das
add
jne
fsubl
es
pop
xor
adc
sbb
jnp
inc
mov
sbb
jecxz
popf
test
sub
sti
and
dec
jo
and
je
or
inc
push
out
xor
clc
fisubrs
mov
cmc
ds
push
jmp
inc
sarb
das
adc
cs
fnstenv
out
jl
mov
and
out
lock
jbe
aaa
int3
in
ret
scas
jnp
inc
js
inc
xlat
and
aam
fcomip
in
imul
jnp
pop
fadds
push
push
in
push
add
xor
imul
in
bound
push
aam
scas
orb
ja
sahf
orb
in
icebp
insl
out
adc
dec
ds
sub
in
and
jbe
test
jne
push
or
jae
sub
and
pop
mov
ds
jnp
xlat
in
out
notb
inc
iret
les
push
jg
jp
test
ds
jmp
xor
lods
cmp
xchg
or
ja
aas
add
xor
rcll
cwtl
fldcw
and
test
xchg
divb
mov
push
outsl
mov
out
and
pop
divb
out
repz
in
fs
sub
adc
andl
pop
sti
test
mov
and
dec
dec
inc
je
or
and
jne
inc
sbb
aas
and
stc
jne
mov
sbb
xor
adc
test
xor
push
sub
push
mov
inc
mov
push
jg
dec
adc
and
popf
adc
sub
sub
and
loop
push
es
sub
out
sahf
dec
pop
gs
sub
or
inc
cltd
pop
daa
insl
cli
push
cmpsl
sub
fidivl
pextrw
mov
mov
mov
popf
aad
sub
add
inc
add
popa
int3
insl
adc
shll
stos
es
cmp
mov
stos
daa
stos
gs
add
inc
sub
cmpl
dec
pop
push
mov
pop
mov
in
or
lods
jae
fdivrl
test
std
jp
jmp
es
addr16
mov
push
xchg
lcall
sub
test
inc
repz
test
adc
sti
xchg
jg
test
test
aad
out
mov
mov
int
jae
jle
andl
pop
adc
sub
pop
mov
add
inc
or
stos
outsb
mov
fidivl
sub
dec
lcall
mov
into
repnz
dec
xor
jno
mov
inc
dec
lea
addr16
mov
out
outsb
dec
ret
dec
add
jmp
mov
push
addl
cmovs
adc
shlb
or
mov
jb
out
jbe
je
xor
jle
and
jp
dec
imul
in
add
outsb
mov
nop
and
gs
sub
or
test
fistps
push
shlb
or
push
jne
xchg
les
aaa
mov
aas
bound
rcrl
jne
xor
xor
lods
sub
testb
fcmovnb
push
mov
outsb
dec
inc
clc
insl
subl
push
sbb
popf
fildll
aad
dec
ljmp
aas
inc
jle
inc
xchg
bound
je
jnp
and
inc
hlt
andb
inc
mov
xorb
jmp
push
mov
bnd
xor
rorl
dec
pop
add
test
pop
push
out
lcall
jmp
sbb
and
mov
push
or
inc
imul
and
out
xchg
push
repz
shl
cwtl
loope
inc
int3
imul
pop
push
insl
dec
jle
sub
cli
dec
fidivrl
pushf
jbe
cmpsl
cmp
dec
fnsave
sbb
je
ljmp
fidivs
mov
call
sub
int
sbb
inc
xchg
subb
fldl
je
jg
into
pop
fidivs
push
fmul
mov
cmp
sub
inc
inc
lret
enter
call
clc
lcall
arpl
jns
es
adc
mov
ja
or
jnp
cmp
xchg
dec
aaa
dec
lcall
es
testb
inc
insl
out
hlt
out
or
pop
int3
push
mov
add
pop
cmp
dec
jmp
pop
xchg
cltd
in
mov
dec
xchg
jns
jb
push
pop
mov
cmp
inc
shl
popf
div
jge
mov
push
int3
dec
jmp
xor
popf
test
cmp
mov
mov
mov
aad
dec
in
or
push
sbb
xor
rorl
add
xor
push
leave
inc
jne
call
xchg
inc
jnp
int3
push
inc
inc
movsb
pop
mov
and
xchg
jl
cltd
lods
inc
aas
xor
test
pushf
fwait
dec
push
push
xchg
js
mov
xchg
jg
rcrl
add
add
jg
hlt
inc
xor
add
cmp
push
cmc
mov
sbb
xchg
negb
loope
and
inc
push
cmp
aaa
ljmp
lcall
sub
cmp
inc
or
jp
scas
xchg
xor
push
xor
lods
shlb
es
daa
pusha
mov
aam
es
cmpsl
cmp
push
test
ret
pop
jbe
stos
add
ret
stos
inc
ds
arpl
inc
mov
pop
cmp
jge
xchg
xchg
dec
push
sub
push
outsb
aaa
jmp
shrl
dec
xchg
inc
es
and
cmp
out
and
sbb
int
es
push
mov
pop
adc
push
sub
add
flds
inc
addb
xor
mov
push
inc
ja
push
imul
inc
ficompl
dec
and
push
inc
stc
inc
test
jnp
ja
xor
xor
ror
dec
and
inc
es
es
mov
fcmovne
das
push
jbe
mov
jnp
add
dec
jl
mov
dec
test
les
dec
mov
sub
add
and
inc
mov
jle
outsw
iret
inc
in
call
pop
mov
mov
stos
sahf
out
dec
int
push
cmpsl
jnp
pushf
push
inc
ss
mov
addr16
fstpl
aas
dec
es
les
roll
inc
inc
cs
xor
mov
cld
fistpl
outsb
xchg
imul
and
adc
mov
rorl
inc
test
xchg
dec
aad
xor
push
es
and
test
adc
inc
in
insl
loop
and
mov
cmp
inc
push
push
push
ljmp
xchg
and
adc
pushf
aad
cmp
mov
push
pusha
shrb
jbe
jl
mov
dec
in
jmp
mov
mov
test
adc
jno
mov
inc
push
test
repnz
sbbb
jbe
aas
sbb
xlat
pop
es
orb
stos
fnstenv
inc
xor
mov
int
ss
cwtl
fmull
inc
adc
push
push
pop
es
push
movsb
push
lds
add
inc
cmp
insb
stos
movsl
mov
es
jmp
jp
push
xor
jno
orl
pop
ljmp
mov
mov
and
mov
popf
sbb
cmp
inc
int3
mov
inc
xor
add
push
aad
add
inc
mov
jle
jge
cmpb
bound
inc
mov
jb
push
gs
int
sbb
inc
and
scas
add
cld
jg
inc
sbbb
ret
mov
sub
es
mov
mov
inc
fldenv
add
xor
lock
push
leave
test
je
mov
inc
jge
push
add
cmc
addr16
mov
cmp
int3
imull
xor
push
fdivrs
arpl
pop
push
lds
pop
dec
enter
ret
out
xchg
lret
cltd
mov
push
sbb
shrl
sahf
dec
es
mov
mov
add
inc
out
and
sub
jl
lea
iret
push
int3
pop
leave
stc
fwait
dec
pop
scas
jg
push
adc
sti
loop
es
push
jp
adc
inc
mull
inc
outsl
dec
sub
adc
es
sub
js
imul
insl
jp
sbb
jno
fnstsw
es
xchg
int
cmp
jle
lret
popa
sub
movsb
std
sbbl
or
leave
push
dec
push
stc
jb
ret
sub
sub
dec
ss
push
addl
jnp
jmp
dec
jge
sub
dec
inc
lcall
add
cs
cwtl
and
pop
cmp
outsb
negl
stc
jne
fs
xchg
jbe
das
inc
jmp
or
jecxz
js
pushf
adc
popf
adc
jns
int3
movsb
mov
ret
push
fs
pop
sub
jg
cmp
mov
add
add
es
in
pop
cmp
std
push
fs
xchg
push
push
into
inc
or
mov
xchg
leave
rolb
jg
outsb
movl
mov
push
inc
scas
dec
aas
mov
mov
jle
inc
xor
out
fs
or
mov
std
xchg
popf
xor
ljmp
out
pop
lods
fisubl
andl
lock
andl
mov
xchg
loop
pop
into
dec
js
cmc
fsubr
pop
bound
cmp
or
insl
adc
mov
call
sub
add
sub
pop
movsl
cmpsl
xor
add
aas
dec
fdivl
mov
in
adc
inc
mov
mov
lcall
dec
lock
mov
jne
mov
lcall
inc
xchg
orb
cmp
lahf
icebp
dec
lds
mov
inc
test
es
leave
xorb
sbb
lcall
in
fmul
int3
adcl
sbb
fs
test
xor
pop
or
cmp
lahf
and
xor
xor
push
or
mov
push
xchg
dec
arpl
cs
inc
int
addb
and
push
and
mov
aad
cmp
xor
or
lret
push
xchg
loope
add
fwait
xor
inc
lock
inc
mov
xchg
es
jmp
mov
xor
pop
cli
popf
sub
rclb
inc
xor
es
test
and
ret
push
mov
adc
mov
outsb
cmc
pusha
ret
or
pop
mov
jmp
fs
mov
lods
rcl
sbb
inc
mov
es
es
subb
push
and
loop
cmovs
cltd
es
pop
add
es
xchg
lcall
or
je
aad
xor
xchg
es
shll
add
mov
jae
fistpl
inc
in
pushf
jns
inc
cmc
sub
mov
dec
movb
push
lods
mov
sub
sahf
inc
into
lret
inc
sub
and
sbbl
dec
sub
es
xchg
push
jns
cmp
push
pop
insl
shll
fisttpll
jno
es
std
mov
inc
xor
popa
mov
ret
es
lret
mov
inc
clc
mov
decl
ja
sub
mov
xor
add
push
mov
inc
in
call
inc
pop
movsl
dec
into
xchg
movsl
es
xlat
ljmp
aaa
int3
addr16
xlat
xchg
push
into
mov
js
xchg
dec
nop
xor
sbb
jmp
mov
mov
fs
insl
mov
sub
ds
add
xor
arpl
mov
inc
rcl
imul
cmp
mov
jl
add
into
sub
stos
lds
pushf
mov
ss
add
xadd
sub
lods
es
stos
xchg
rclb
push
sbb
inc
scas
lods
es
sbbl
xchg
mov
xor
pop
add
xor
mov
dec
mov
cld
icebp
dec
xor
fbld
jne
inc
dec
mov
jnp
xor
outsb
mov
es
icebp
mov
insl
arpl
es
mov
mov
push
jns
add
leave
cmp
push
cmpsb
imull
jb
ds
pop
mov
xchg
les
test
push
mov
inc
xorl
dec
push
add
push
xchg
es
cmp
mov
add
call
orb
bound
test
xchg
ret
orl
inc
sarl
es
dec
inc
je
sysret
xor
jl
inc
popl
lds
test
inc
out
mov
dec
jp
inc
pop
gs
es
fidivs
test
sarb
cmp
pop
jo
pop
jno
inc
or
es
subb
inc
add
je
dec
pushf
sub
repz
loop
jae
mov
mov
stos
sub
xlat
mov
cmovne
shlb
in
or
sub
mov
dec
mov
mov
add
loop
xor
inc
insl
ret
mov
ret
fistpll
in
into
pop
xchg
aas
ret
dec
mov
xchg
inc
mov
outsl
push
dec
pop
es
add
sub
jp
es
lahf
int3
es
bnd
jl
enter
iret
cmp
push
insb
add
inc
inc
mov
inc
pop
lret
push
sbb
movsb
and
ror
in
dec
enter
enter
sbb
pop
gs
sbb
cwtl
int3
mov
pop
push
or
inc
xor
leave
ret
mov
ret
push
xor
sub
imul
jo
adc
ljmp
stc
mov
jae
cmp
and
sarb
jae
lods
push
lcall
add
les
add
out
cmp
push
inc
out
and
out
scas
mov
cmc
inc
addl
cmpsb
mov
cmpsb
adc
in
xor
in
shl
popf
adc
inc
dec
imul
gs
scas
xchg
ret
ss
subb
mov
mov
dec
push
cmc
jecxz
inc
add
mov
hlt
sub
dec
daa
cmpsl
lret
pushf
cwtl
out
xchg
div
out
repnz
mov
mov
int
add
sub
push
sbb
mov
xchg
inc
cmp
and
shlb
or
or
mov
push
int3
mov
icebp
rorl
and
outsl
pop
pushf
in
cwtl
jmp
or
fiadds
jg
mov
pop
pop
adc
cmp
or
movsb
outsl
pop
push
or
fisttpll
jb
fisttpll
clc
mov
mov
sahf
xchg
mov
testl
repz
stos
adc
test
mov
dec
and
inc
hlt
scas
sti
leave
sbb
repz
stc
mov
jae
cmp
and
sarb
jae
push
imul
stc
mov
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
stc
mov
mov
cmp
and
sarb
jae
in
fdivrp
mov
mov
cli
pop
and
jp
cmp
stc
mov
jae
fxch
fdivr
ss
xchg
out
fwait
in
mov
mov
mov
insb
cmp
and
shlb
mov
aaa
out
in
clc
rcll
mov
fdivrl
stc
mov
jae
hlt
and
dec
mov
stc
mov
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
sarb
jae
cmp
and
rclb
daa
push
pop
daa
pushf
xchg
xchg
movsb
inc
inc
fiadds
inc
mov
daa
enter
push
add
out
inc
xchg
jl
adc
shll
loope
mov
jb
lcall
test
stos
in
push
in
pop
es
inc
out
mov
ffreep
das
sahf
mov
dec
dec
sub
pop
cmp
iret
out
sar
into
ret
test
or
sbb
enter
push
insb
aam
pusha
inc
cmp
imul
xor
jl
pop
and
lods
push
xchg
aam
cmp
dec
imul
dec
xor
test
push
pop
stc
adc
imul
mov
leave
sub
aad
rcll
lods
icebp
inc
add
insl
ret
nop
sahf
insl
inc
shll
inc
mov
inc
push
fnstsw
les
mov
mov
test
in
enter
addr16
jae
add
loopne
sub
inc
pusha
sti
add
lret
out
add
push
xor
cs
mov
mov
loop
mov
mov
loope
xor
or
daa
ljmp
fs
sub
jno
jo
jbe
repnz
aad
not
lock
sub
das
pop
gs
loop
rolb
jg
decl
jecxz
add
sbb
push
dec
jo
inc
jnp
sbb
xor
sub
adcl
stos
sub
pop
test
xor
dec
in
sbb
enter
inc
pop
jo
mov
jbe
out
adc
mov
leave
scas
das
lahf
enter
jl
jge
sbb
ret
stc
fidivs
xchg
or
lods
sbbl
fsubs
lret
stos
dec
divb
enter
mov
lcall
testl
mov
mov
movsl
jmp
push
fidivl
ljmp
das
ror
shll
stc
jns
mov
in
xchg
loope
xchg
pop
fwait
fwait
push
xor
loopne
cmp
jecxz
sbb
pop
in
push
shlb
ret
insb
xor
gs
adc
and
push
sarl
jne
push
pop
mov
addb
cmp
sti
jb
popa
cmpsb
add
mov
in
jg
dec
inc
cs
in
test
test
stos
xchg
add
gs
push
jne
fwait
sbb
in
jp
pop
mov
lock
xchg
in
add
rorb
repz
pop
mov
gs
ja
lods
jmp
cs
add
inc
es
inc
testl
shlb
fisttps
mov
or
jle
mov
mov
xlat
fdivrs
mov
ret
fucom
pushf
test
pusha
outsl
mov
cli
aas
orb
cli
and
mov
cld
mov
xchg
decb
pop
les
ds
xchg
int3
mov
mov
cmc
into
icebp
mov
xor
fbld
lret
mov
inc
stos
push
xlat
rorl
jno
pop
leave
repz
push
daa
das
mov
js
sub
mov
xchg
imul
cmp
mov
into
or
sub
xor
pop
lcall
fdivrp
xchg
faddl
adc
jne
sub
mov
rcll
xor
rcrb
or
decl
and
pop
push
sub
idiv
jae
pop
cmp
pop
push
jae
int3
mov
popa
pop
testl
xor
daa
rolb
adc
sbb
fsubs
pushf
push
jo
fcoms
push
rorb
and
cmp
mov
int3
imul
mov
inc
inc
lret
in
ljmp
and
xchg
dec
in
cmp
bound
jmp
jne
add
mov
add
inc
mov
cmpsb
pop
lods
xchg
repnz
and
sbb
in
stos
and
sub
sbb
loopne
lea
inc
pop
mov
aaa
mov
incb
loop
pushf
sbb
stos
push
or
fs
pusha
out
jp
mov
out
outsb
xor
daa
pop
testl
mov
dec
xchg
mov
cli
add
push
fisttpl
loop
psrad
add
push
ljmp
out
jnp
movl
insb
jmp
popa
or
loope
mov
mov
mov
sub
ret
cmp
rorb
outsl
das
repz
xor
scas
out
insl
sbb
rcrb
roll
and
dec
in
fstpt
fsubrp
cmp
arpl
jg
in
sbb
icebp
pusha
mov
jo
xchg
fcoms
jp
in
iret
aaa
xchg
pop
and
subb
sub
arpl
mov
sub
sub
xchg
adcb
add
mov
cs
idiv
mov
mov
cli
cmp
inc
jns
mov
sub
out
pop
and
cmp
mov
jmp
mov
imul
ss
in
loope
ds
sbb
adc
and
daa
add
lahf
fstl
and
adc
dec
rcrb
jmp
ljmp
imul
and
or
ret
xor
push
jns
ss
cltd
and
dec
movl
into
enter
pop
fildll
xor
lcall
movsb
sbb
cld
push
and
outsl
insb
push
pop
movsl
pushf
shlb
jg
popf
pop
dec
repz
repz
xchg
xor
cwtl
popf
xlat
shlb
icebp
inc
shrl
adc
push
out
test
iret
test
xchg
push
mov
shll
xlat
fsubrl
dec
mov
inc
lret
rol
fucom
repnz
ret
adc
push
push
mov
adc
inc
vpmullw
pop
mov
scas
mov
cmc
jle
test
jl
lahf
loope
lods
mov
ss
fisttpl
xchg
adc
push
inc
sbbl
repz
cmp
dec
jmp
loope
faddl
fcmovnu
push
or
and
push
rolb
roll
cmc
movsb
push
rolb
in
int
xchg
out
sbb
xor
mov
outsb
rcrl
dec
stos
or
sub
adc
fdivrl
xchg
cmp
lea
bound
adc
fucomip
pushf
and
adc
cmp
test
sub
fdivrl
jl
enter
push
cmp
std
xor
or
fadds
mov
mov
pushf
mov
jmp
lahf
xor
mov
pusha
jl
jl
push
jo
xchg
push
loop
mov
push
sub
scas
test
test
rol
xor
sbb
ret
nop
jge
jmp
cltd
cmp
outsb
or
jb
dec
daa
out
shlb
loop
test
pop
int3
cmp
int3
out
sub
mov
mov
cmp
test
fld
pusha
icebp
adc
sbb
test
jl
sahf
add
cmpsb
jge
jb
icebp
loopne
mov
rclb
pop
or
sbb
xchg
mov
ret
fstl
inc
ljmp
dec
mov
push
cmp
xchg
cld
mov
sub
mov
mov
mov
or
pop
jnp
adc
stos
mov
ja
jnp
stos
dec
out
test
pushf
sbb
jecxz
je
loopne
sbb
jns
int
add
sbbl
add
aaa
add
or
mov
sbbb
add
lahf
inc
fisttps
aaa
addr16
ret
outsb
sub
subb
sbb
bound
push
fwait
int
das
outsb
fidivrs
xor
and
or
out
jg
mov
pop
sub
incb
jmp
imul
mov
fcoms
mov
test
add
cs
dec
jmp
xchg
daa
hlt
mov
xor
out
push
push
cld
xchg
lds
and
cmp
cs
xlat
movsb
rcrl
fs
push
mov
scas
inc
jmp
and
lods
inc
clc
imul
sbb
adc
pop
push
mov
xlat
ret
mov
out
pop
cmc
nop
fsubs
es
dec
inc
fucomp
sahf
xchg
pop
jp
mov
cltd
jb
adc
push
out
mov
sub
loop
sub
pop
mov
push
fwait
mov
fdivr
ret
or
pop
push
mov
rorl
pushf
sub
jns
sub
shl
lret
mov
xchg
adc
inc
inc
dec
movsb
pop
dec
dec
rorb
daa
push
jo
aad
es
stos
shll
xor
xor
inc
lea
pop
push
mov
pop
inc
sbb
cmc
stc
push
add
xor
push
iret
and
ret
xchg
sbb
xchg
pop
nop
xchg
sti
in
loopne
inc
fstp
fisubrl
cmp
add
cs
mov
mov
cmpsl
push
jp
stc
sbb
repnz
sub
push
sbb
enter
out
shll
push
mov
popl
cmp
xlat
jnp
int
pop
icebp
inc
inc
adc
leave
sbb
shll
mov
push
inc
lock
jo
sub
ss
cmp
verr
mov
leave
or
jmp
cmp
in
outsb
dec
add
sbb
rcrb
fadd
cld
dec
std
mov
push
mov
and
xor
cmp
icebp
inc
xlat
cmp
xchg
adc
out
push
outsb
push
dec
mov
xchg
addr16
sbb
lds
rolb
push
mov
inc
in
adc
dec
ja
push
out
aaa
lahf
sbb
stos
stos
lret
test
mov
les
inc
jle
or
pushf
and
jmp
cmpb
xchg
data16
les
adc
daa
test
ljmp
sub
xor
inc
das
pop
add
adc
dec
in
mov
pop
push
pop
rcrb
fwait
sub
sahf
shll
jnp
dec
sbb
je
fisttpll
adc
xor
or
cmp
cmpsb
ja
sti
dec
xchg
jp
sbb
stos
inc
xor
sbb
pop
icebp
mov
das
sbb
call
sub
cwtl
popa
cmc
mov
ss
xchg
jl
aas
mov
pop
jno
xchg
scas
ret
mov
negb
push
pop
std
outsl
mov
sbb
outsl
adc
jp
xor
insb
cs
xchg
sbb
jl
add
bswap
imul
scas
xlat
push
mov
js
mov
mov
ja
mov
xchg
pop
dec
out
lds
sbb
xchg
roll
lcall
cmp
stc
scas
sbb
mov
fwait
sbb
pop
adc
cmp
stos
test
mov
out
int3
pop
mov
les
mov
dec
fisttpll
mov
test
imul
mov
pushf
xchg
cmpsl
xchg
popa
cmp
jmp
push
dec
sbb
fists
je
inc
mov
sub
sbb
or
cmp
mov
jp
mov
mov
into
lods
ljmp
sub
mov
sti
pushf
mov
jns
sahf
jp
mov
mull
add
cmp
inc
push
xor
cmpsl
dec
ljmp
pop
xor
jb
insl
mov
inc
mov
loope
sub
xlat
fdivl
mov
push
dec
ret
pop
pusha
pop
dec
ret
mov
lret
mov
mov
out
and
push
mull
cmp
mov
shr
pop
insb
cmc
push
or
jb
sbb
xchg
mov
sub
inc
jg
jmp
xor
sbb
push
test
adc
fdivrl
cmp
loope
xchg
and
mov
inc
movsb
mov
loopne
addr16
les
mov
fidivrs
xchg
roll
adc
sbb
fs
mov
dec
aas
loope
pop
cmp
aaa
mov
jle
adc
idivl
stos
subb
xchg
add
jno
cmpsb
fdivrs
or
stos
out
std
dec
lea
sbb
push
jbe
sub
into
jl
and
mov
jae
mov
xchg
outsl
add
jbe
or
xchg
adc
and
bound
lea
jns
orl
pop
mov
dec
mov
xchg
sbb
test
lret
out
ret
ds
out
fs
int3
push
pusha
js
jge
cmp
sub
in
rep
xadd
adc
push
or
cld
insb
jmp
dec
call
xchg
in
dec
add
shrl
inc
sub
sahf
jae
dec
and
daa
xchg
jae
arpl
dec
cld
rcrb
ss
daa
jp
cmpb
and
pop
mov
adc
dec
mov
and
mov
je
xchg
jnp
mov
adc
icebp
fwait
push
mov
mov
jp
pop
aas
push
out
mov
cmp
hlt
jle
add
inc
inc
pop
mov
add
pop
stos
push
call
inc
enter
push
stos
aad
in
cli
sbb
cmp
fcmovb
adc
push
outsl
pop
rorl
dec
sub
cmpsl
inc
or
pop
adc
mov
mov
lods
das
cmpsb
lahf
mov
mov
jo
clc
lcall
cmp
cli
repnz
or
jmp
xor
sub
mov
sbb
inc
dec
push
or
fwait
or
out
and
pop
fiaddl
imul
add
rcl
test
cwtl
lods
out
test
sub
cmp
pop
and
arpl
pop
lret
mov
mov
mov
push
push
inc
lahf
out
scas
mov
mov
es
jge
or
sbb
lea
es
out
nop
and
and
jp
inc
inc
lods
loop
iret
lahf
std
lods
das
pop
stos
xchg
jns
mov
and
cld
cmp
lret
add
jge
lock
sti
decb
add
cltd
test
adc
pop
xchg
aad
mov
in
cmp
movsb
push
call
jg
fmuls
pop
fdivr
lcall
xor
pop
aas
pop
insb
sbb
repz
movsb
and
adc
mov
and
cli
inc
imul
adc
sbb
jp
mov
mov
mov
cmpsl
into
sahf
sti
jns
pop
dec
aam
in
jae
jno
or
xchg
repz
inc
outsb
mov
mov
hlt
lods
popf
jl
shrb
xor
daa
or
sub
lock
sbb
aas
mov
ds
sub
test
inc
cmp
mov
cmp
xor
push
fwait
sub
ss
aad
dec
mov
xchg
fimuls
mov
jmp
into
fs
jne
push
shr
rclb
sbbb
cli
push
push
mov
fcoms
xor
lahf
push
jb
lds
jle
xchg
jno
mov
or
jae
mov
pop
shlb
pop
cli
sti
push
xchg
jo
sub
das
inc
add
xchg
mov
shll
int3
mov
in
inc
push
in
adc
add
push
js
mov
jp
xchg
test
test
roll
dec
lahf
loope
xchg
or
jb
adc
xchg
jbe
dec
out
lret
leave
xchg
jmp
idivb
fs
sbb
out
mov
jnp
adc
and
jge
enter
mov
xchg
enter
push
mov
in
into
test
ret
movsl
or
aaa
inc
dec
pop
adc
jne
cmp
mov
push
xor
testb
mov
mov
xor
jmp
rolb
rcl
pushl
inc
mov
daa
mov
nop
add
repnz
mov
insl
and
nop
rorl
inc
or
lea
ljmp
jns
dec
sahf
cs
push
cli
add
xchg
xchg
add
out
mov
jns
mov
pop
insl
dec
arpl
ss
cwtl
lods
mov
pusha
es
cmp
inc
and
movb
mov
repz
jl
mov
lea
sub
pop
jne
lret
int
cmc
imul
out
movsl
xchg
mov
mov
adc
adc
adc
push
es
nop
enter
dec
test
mov
add
inc
fs
sub
mov
inc
dec
sub
pop
cmp
jl
push
fwait
dec
mov
xchg
scas
dec
movsb
lods
out
enter
lret
xchg
mov
dec
cmpsl
mov
jbe
rcll
aam
adc
orl
out
lcall
xchg
push
insb
and
and
lcall
sbb
pushf
add
cmp
sub
jb
dec
lret
push
push
xor
inc
mov
in
cld
xor
or
fs
mov
push
or
cmp
jle
xor
mulb
stc
push
out
jl
in
pop
mov
pushf
sbb
and
and
ret
hlt
neg
loop
add
jns
out
in
pusha
in
jl
mov
jno
clc
xchg
cmpsb
dec
xchg
push
cmpsl
negb
sbb
or
add
js
sbb
cltd
jge
bound
jo
fucomp
dec
jo
adc
loop
test
or
mov
or
mov
dec
sbb
fdiv
or
out
dec
jmp
pop
cmp
ds
and
lock
push
hlt
push
inc
outsb
sub
mov
and
xlat
div
cwtl
jge
lods
popf
jmp
pop
call
aad
jnp
adc
jmp
mov
cld
pop
mov
ret
xor
sarl
push
mov
inc
loope
insb
push
pop
out
jmp
leave
cs
push
push
mov
dec
push
inc
push
jnp
loopne
sub
lcall
es
sub
mov
mov
jne,pn
insl
lret
icebp
int
je
movsb
lahf
outsb
mov
mov
adc
cltd
jmp
and
pop
rorb
fbld
sub
inc
mov
js
push
mov
jg
mov
aad
jecxz
setae
cmc
icebp
popf
pop
repz
pop
loopne
sub
mov
add
lahf
test
sub
cmp
lcall
mov
inc
fists
loope
imul
aam
shrl
shrl
mov
call
movsb
adcl
xchg
lea
mov
jecxz
loop
in
stc
add
pop
ds
push
ss
mov
jbe
jecxz
shlb
fnstcw
sti
dec
and
cs
xchg
scas
es
and
in
ja
xchg
cmp
pop
mov
pushw
les
shll
into
outsl
mov
lret
pop
inc
sub
cmp
sub
cmp
and
sahf
mov
xor
fs
mov
das
dec
and
sahf
adc
stos
cmp
scas
outsl
sbbb
sbb
testl
jno
adc
das
jmp
lea
shrl
jb
add
jns
pop
jb
mov
ret
adc
adc
addr16
insb
and
fiadds
jbe
test
mov
jmp
out
jg
sbb
adc
cmp
mov
subb
or
shrl
jmp
js
mov
dec
cmc
jns
add
push
sbb
xlat
jmp
xor
lock
ja
sbb
xor
pop
sbb
cmpsl
mov
lcall
pop
add
jnp
add
aad
sahf
out
movsb
lea
outsl
int3
mov
sbb
nop
clc
jge
aaa
adc
xchg
pop
inc
mov
push
cmpsb
mov
decb
pop
dec
inc
sbb
out
push
jmp
testl
jae
dec
xor
ljmp
jae
sti
leave
mov
pop
imul
add
outsb
fildl
mov
pop
ret
or
adc
jo
inc
fidivrs
stc
test
leave
dec
movsb
jbe
dec
imul
aas
jecxz
add
ffree
xor
inc
sti
dec
mov
xchg
rorb
mov
jnp
xor
clc
cmp
xor
mov
nop
lcall
sub
daa
dec
call
xor
mov
mov
xchg
and
mov
adc
xor
dec
stc
into
mov
and
aam
fbstp
mov
int3
or
pop
fbstp
ljmp
mov
and
movsb
es
fldt
cmp
das
jbe
jecxz
aad
bnd
fcompl
shlb
sbb
or
cltd
jnp
xchg
pop
sub
mov
xchg
add
js
jno
call
ljmp
int3
xchg
jg
int3
outsb
out
push
push
cmpsb
inc
xchg
out
pop
push
int3
xchg
popf
add
lahf
out
les
fadd
xchg
push
mov
or
mov
std
add
push
xor
sbb
addr16
repz
pop
js
ds
loopne
pop
xchg
cmp
and
lods
jmp
push
cmpsl
insb
clc
mov
cmp
cmp
scas
xor
int
adc
icebp
push
movsb
ficompl
in
mov
das
pushf
std
lret
add
into
push
test
es
pop
popa
orb
or
fs
mov
data16
call
stos
out
push
pop
ja
out
call
inc
add
mov
imul
dec
dec
add
call
popf
jb
dec
jl
mov
andb
push
cwtl
enter
mov
insb
mov
sub
outsb
mov
mov
call
clc
pop
mov
shll
xor
scas
sub
adc
mov
mov
in
adc
outsl
ss
pushf
cmp
xor
lret
js
rcrb
xor
cs
lret
dec
data16
mov
lahf
lods
push
xlat
cwtl
lcall
js
fstpl
gs
xor
sbb
cld
mov
ficoms
mov
xchg
cmpsl
movsl
rcrb
xchg
push
cmp
dec
cmp
add
pop
popf
pusha
jle
mov
popf
push
pop
xchg
or
aaa
fdivs
sbb
push
and
mov
loopne
sbb
fmull
inc
sub
sbb
stos
sub
dec
fs
daa
popf
cmp
push
mov
in
repz
pop
scas
repz
ret
hlt
xchg
mov
fldpi
xchg
cmp
add
fldl
inc
cli
mov
repnz
pushf
or
fnsave
jge
test
mov
mov
mov
and
adc
sahf
adc
sub
inc
movsb
sarl
or
xlat
les
mov
or
inc
int
add
enter
and
lret
cmpsb
mov
add
xor
sbb
xor
cmp
aas
inc
add
add
jp
std
push
mov
fwait
cmp
cmpsl
adc
rol
lcall
or
xor
pop
les
inc
dec
sbb
shll
call
pop
add
movsb
push
push
push
iret
incb
adc
fcomps
push
push
mov
fbld
and
jg
jle
push
clc
fbld
fwait
push
scas
test
or
adc
inc
ficompl
vmwrite
jle
inc
movsb
adc
into
sub
mov
adc
adc
sbb
pop
sbb
and
jp
dec
mov
mull
inc
mov
sbb
mov
add
enter
in
add
mov
enter
cld
fs
sub
mov
fiadds
mov
fiaddl
jne
inc
mov
dec
std
cmp
jmp
int3
pop
adc
xor
inc
test
lea
rolb
push
sbb
pop
test
add
div
cwtl
ljmp
lds
stos
add
divl
mov
push
shlb
xchg
push
cmp
push
add
inc
mov
in
lods
faddp
es
jae
or
jg
rcrl
jo
dec
ds
fwait
adc
sub
test
mov
in
iret
mov
popa
sub
xlat
pop
sahf
mov
into
xchg
pop
pop
fcomip
lret
jp
add
lds
adc
and
mov
sub
test
xorl
fstl
add
mov
jnp
push
shrb
cld
mov
xchg
je
outsl
imul
lret
repnz
iret
stc
fcmovu
jecxz
push
or
mov
cmpsb
xchg
adc
pop
xor
fwait
cmpsb
scas
mov
pop
pop
xchg
mov
pop
sbb
adc
xor
sub
mov
call
lods
cwtl
vphaddwq
cmc
loop
inc
xor
push
cmp
daa
inc
in
pop
mov
lea
das
ficoml
and
stos
jb
push
jmp
inc
fsubrl
xchg
sub
push
movsb
push
lds
mov
sbb
add
mov
sub
shl
test
lock
lcall
mov
test
and
and
jg
dec
loopne
xor
add
xchg
enter
scas
es
sar
add
mov
push
and
xchg
adc
push
shrl
sub
sbb
repz
lods
sti
inc
fidivrl
mov
mov
lret
sub
push
inc
cli
push
mov
aam
mov
fwait
std
mov
xor
jecxz
mov
xor
sub
push
ret
push
and
in
push
adc
sub
stos
jl
insl
rcr
jp
jb
jnp
lods
mov
fdivp
xchg
ss
sbb
mov
mov
sbb
clc
mov
filds
cli
es
fmulp
adc
cltd
sahf
xchg
sub
cmp
jecxz
outsl
outsb
xchg
shlb
bound
hlt
inc
out
inc
xchg
sahf
aaa
push
cmp
in
call
mov
inc
negb
mov
mov
dec
adcl
shll
sub
addr16
idivb
aaa
stos
mov
cwtl
stc
adc
incb
mov
lods
mov
and
adc
jbe
shrd
aad
cmp
jg
mov
cltd
mov
push
fadds
testl
cmp
orb
test
iret
add
pop
stos
or
sbb
add
jp
mov
cltd
cmp
adc
movsl
aam
popa
mov
dec
inc
sbb
push
mov
es
loope
ror
mov
imul
push
psubusb
sbb
pop
lock
ds
lods
jge
daa
mov
sub
idiv
xchg
scas
add
enter
mov
add
pop
push
ret
add
adc
mov
sbb
repnz
adc
and
sbb
sti
add
enter
mov
push
mov
xor
ret
push
data16
add
shr
ret
mov
mov
out
dec
mov
cmp
outsb
outsb
and
iret
cmp
xchg
mov
lds
in
insl
mov
lea
xlat
out
pop
adc
push
shlb
fwait
addr16
shrl
mov
call
push
fiaddl
or
lods
add
xchg
dec
mov
sbb
das
popa
jno
mov
adc
jae
dec
ret
aam
push
add
push
ret
cmpsl
mov
ret
movsl
add
mov
subb
in
pop
xchg
mov
mov
sarl
mov
test
in
ds
push
add
loopne
mov
icebp
or
je
mov
xchg
leave
mov
incl
dec
mov
decb
pop
test
sub
inc
cwtl
xchg
out
xlat
mov
mov
mov
mov
sub
xor
mov
xchg
fucom
icebp
orb
loop
add
sub
or
jo
cmp
jge
jne
mov
dec
pop
call
sub
inc
push
mov
sub
push
mov
lret
loope
scas
push
push
mov
cmpsl
and
add
xor
les
jb
leave
jne
add
jmp
int3
cmpb
jbe
movsl
in
fidivs
pop
in
lretw
sbb
fnsave
sbb
lds
mov
clc
mov
dec
mov
and
out
xchg
jecxz
adc
adc
cmp
sbb
lret
dec
iretw
shll
fistpll
push
push
push
scas
fdivl
imul
repz
dec
in
and
bound
xchg
lcall
fdivs
clc
hlt
xchg
cmp
xchg
int3
decb
int3
or
into
out
gs
outsl
push
scas
outsb
daa
inc
scas
jne
jb
loop
push
arpl
lock
jmp
fs
std
lcall
mov
mov
jns
aaa
repz
rcrb
push
jno
aam
mov
dec
cmpsb
lea
aaa
cmpsb
cwtl
pop
in
lahf
sbb
fs
cld
daa
sub
mov
sahf
int
mov
loopne
loope
into
mov
arpl
jg
icebp
adc
add
xchg
adc
lea
movsl
mov
lea
je
loope
jo
das
xchg
mov
xchg
pop
fldl
rcl
push
adc
mov
add
lret
in
dec
jmp
std
sub
ret
ss
dec
and
pop
les
mov
ret
popa
dec
ds
add
outsb
int
mov
jbe
jb
mov
cmp
clc
test
mov
push
pushf
fdivl
aaa
outsb
cmpsl
dec
out
sub
ss
add
sarl
add
and
popf
ss
lods
xchg
pop
cli
adc
mov
mov
pop
and
adc
and
cli
mov
jge
xor
xchg
sti
insb
aaa
filds
pop
lods
pop
fcmovb
sbb
int
int
outsl
fsubl
mov
sar
push
nop
sub
cwtl
fidivs
jb
faddl
daa
push
cmp
xor
jp
daa
add
in
xor
push
mov
daa
in
lret
ja
xchg
mov
stos
outsb
iret
jbe
jecxz
add
int3
lret
test
fcom
inc
aad
mov
lahf
or
adc
mov
jnp
push
ret
loop
add
mov
in
imul
mov
jg
push
testb
addb
dec
lods
mov
cmp
jp
out
lret
lret
pop
cmp
fsubrp
shlb
cwtl
enter
lds
and
pop
and
add
pop
int
out
sub
sti
mov
mov
jbe
clc
out
jg
mov
sub
sbb
cmpb
pop
add
dec
ja
or
movsl
cmc
enter
in
nop
std
ja
mov
loopne
add
jmp
sub
lds
int
int3
roll
sub
adc
fs
inc
popa
xchg
iret
repz
test
ficoml
mov
ret
and
sarl
lods
stos
cmp
add
aam
xchg
aad
sbb
mov
mov
testl
in
loopne
push
test
push
ss
adc
lea
stos
stos
aaa
xorps
xor
lods
movsb
aad
xchg
xorl
mov
pushf
and
sub
adcb
insl
push
cmp
lods
cwtl
test
incl
addps
push
orl
call
pop
sub
js
orb
xchg
int
lahf
out
pushf
test
sbb
mov
adc
sub
jecxz
pop
es
rol
test
lret
data16
and
lods
adc
pop
jns
ret
inc
mov
insl
cmp
idivb
adc
add
mov
and
pop
mov
loopne
aas
jns
cmp
hlt
sub
cs
push
jp
jns
xchg
das
outsl
shll
sbb
mov
jnp
aas
and
pop
js
imull
adc
outsl
mov
in
dec
or
inc
lahf
adc
xor
fs
jg
cmp
addl
mov
imul
dec
mulb
pop
jbe
cmc
lds
push
sbb
jecxz
or
mov
data16
mov
push
ficoml
xchg
fadds
les
ret
adc
insb
xchg
imul
mov
push
movsl
inc
and
fcoms
test
mov
pusha
cmc
fbld
cltd
mov
call
push
imulb
add
enter
xchg
sub
je
sub
bound
xchg
and
sbb
or
inc
fwait
push
mov
mov
pop
popa
test
stc
or
xchg
pop
mov
repz
les
adc
ja
jl
out
mov
mov
movb
xchg
or
or
fstl
dec
pop
lock
pop
mov
sbb
inc
xchg
popa
push
xor
dec
lods
mov
gs
mov
sub
cmpsb
aad
jae
mov
pop
shrb
movsl
jp
popf
sbb
neg
mov
mov
int
inc
movsb
js
push
push
aam
hlt
mov
cli
dec
call
push
cmp
and
sbb
pop
mov
sub
shrl
cmp
inc
sbb
sti
je
mov
iret
jl
xchg
iret
rorb
xor
add
adc
stos
pop
lods
in
daa
dec
jno
nop
adc
aad
and
pop
cwtl
inc
xchg
inc
push
inc
cmp
flds
mov
movsb
jbe
sti
popf
hlt
xchg
and
fs
dec
insb
push
hlt
ret
sub
jle
cli
stc
daa
push
jno
mov
add
add
push
call
push
dec
pop
je
sbb
cmp
dec
arpl
jo
fisubrs
mov
daa
icebp
cwtl
and
jecxz
xchg
adc
cmp
insb
lods
aaa
adc
jo
cmc
dec
jnp
stos
mov
lcall
and
es
das
jl
fmuls
shll
and
sbb
scas
adc
int
mov
jl
sti
or
or
flds
leave
dec
shlb
mov
or
decb
mov
mov
cltd
mov
pop
popa
movsl
scas
mov
movsb
inc
or
xchg
aas
mov
into
sbbb
fwait
push
aam
and
add
jmp
dec
jns
aaa
add
lcall
push
clc
xchg
pop
rcrb
push
decl
insb
push
cmp
out
mov
mov
fldt
jne
ds
adc
pushf
jno
stos
aam
cmp
jne
cmp
pusha
test
or
orl
filds
add
data16
jge
lret
in
js
mov
add
or
test
mov
xchg
cmpsb
push
adc
fdivrs
sub
pop
push
xchg
stos
int3
push
daa
lahf
lret
adc
jmp
xchg
ss
xor
push
movsb
dec
testb
dec
push
adc
push
or
sbb
inc
lret
stc
shll
push
hlt
mov
mov
mov
cmp
push
mov
outsl
inc
xor
sub
push
imul
pop
dec
stos
gs
or
in
sahf
outsl
es
out
bound
sub
shrl
hlt
mov
shrl
ja
push
ds
mov
lahf
jne
add
cmp
push
mov
leave
dec
in
in
push
in
jmp
lahf
cs
sbb
out
xlat
pop
dec
in
mov
fdivp
mov
ss
movsl
enter
or
inc
imul
sub
sub
push
lret
popf
mov
mov
xchg
xor
and
push
and
fmulp
imul
jnp
xor
inc
setne
out
and
pop
dec
jg
push
pusha
jno
lea
mov
jo
inc
pop
add
dec
mov
in
aad
int3
fs
sbb
ss
pop
mov
push
lea
adc
sbb
loope
pushf
es
jae
aaa
mov
jne
iret
stos
div
aam
xchg
ds
mov
faddp
sbb
ja
sub
add
outsb
pop
out
xor
aad
xor
clc
push
loop
fdivrs
loope
mov
fld
mov
sbb
arpl
shlb
outsb
in
or
in
fimull
mov
insl
stos
push
jb
aad
xchg
pop
mov
out
in
subb
adc
outsb
leave
fs
jl
test
mov
ss
cmp
andb
adc
mov
mov
sbb
ret
pop
out
cld
ret
in
dec
in
pop
pop
xlat
mov
test
mov
call
fidivs
outsb
or
lock
mov
sbb
mov
xchg
repnz
je
dec
sub
and
je
xchg
pusha
jp
decb
push
lahf
stos
lock
test
inc
jge
xchg
xlat
dec
adc
cld
fs
data16
insl
inc
inc
add
int3
sub
bnd
dec
or
adc
lret
imul
into
dec
mov
fndisi(8087
sbbb
jecxz
pop
scas
sbb
add
xor
stos
sub
cmp
push
or
push
add
nop
dec
movsb
sti
or
xor
scas
loop
arpl
out
pop
je
push
les
in
hlt
push
andl
jmp
inc
sahf
add
aas
jg
in
push
mov
fwait
mov
ret
xor
icebp
js
nop
scas
add
mov
iret
jp
iret
outsl
mov
push
shll
ret
cmpl
jnp
sbb
in
rcr
loop
pop
les
out
or
xchg
xchg
lahf
mov
add
mov
mov
push
or
ljmp
mov
push
fisubrl
mov
cmpsb
mov
popa
adc
aaa
rorl
jg
push
sub
mov
or
fwait
pop
scas
out
dec
jo
push
mov
add
lahf
or
mov
push
stos
lds
pop
pop
sbb
dec
and
neg
imul
scas
or
icebp
shl
jbe
fmull
jg
mov
icebp
roll
shlb
or
mov
jge
mov
imul
arpl
push
mov
stc
inc
xor
mov
and
pop
mov
aas
or
test
xor
call
and
or
cmp
enter
xchg
xor
test
cmp
subb
add
loopne
sbb
sar
imul
fsubp
jne
push
repnz
in
pop
test
ficoms
inc
inc
addl
pop
mov
mov
push
ljmp
dec
cmp
mov
or
adc
mov
and
mov
int
or
sbb
fsts
jno
add
push
outsl
mov
pushf
aad
xchg
jno
xchg
jmp
sbb
dec
out
pop
inc
mov
ds
popf
outsl
jp,pn
add
stos
pop
xchg
inc
lret
test
mov
pushf
jp
push
mov
jns
test
and
push
push
pop
xor
data16
out
pushf
or
jp
jge
jp
add
arpl
mov
xchg
out
dec
scas
inc
pop
mov
test
sti
scas
jge,pt
ja
mov
and
jg
enter
inc
pushf
rcl
and
sub
mov
cmp
leave
or
insl
addr16
mov
sub
push
mov
mov
or
xorb
rcl
xchg
hlt
cltd
mov
pop
xchg
sbb
aaa
add
push
in
push
addr16
aad
inc
sbb
add
ror
shll
push
inc
mov
cld
shrl
leave
aaa
dec
mov
jb
and
xchg
mov
xchg
and
data16
inc
xchg
sub
inc
jl
aas
mov
xchg
mov
stc
xchg
xor
mov
xor
out
mull
ja
xor
jmp
dec
rcrb
or
icebp
sub
into
fcompl
mull
sbb
outsl
inc
jne
cld
dec
pop
aas
cmpsb
mov
addr16
orl
shl
xchg
and
iret
sbb
xor
shlb
push
repnz
hlt
imul
sar
cmp
xchg
pop
setl
je
fdivs
repnz
fstps
lods
loop
xchg
sbbl
adc
out
fimull
in
ss
push
sub
mov
rolb
clc
sbb
repz
and
fisubrl
xor
orb
and
fsubl
in
in
jo
inc
ret
jb
jne
xchg
xor
fidivrl
push
icebp
ror
jle
int
xchg
sub
adc
test
mov
mov
fidivl
mov
test
sarl
jle
pushf
add
int3
and
mov
push
cmp
add
out
sbb
sbb
or
cmp
pop
bound
cmpsl
fistpll
out
xchg
mov
popl
xor
mov
in
dec
or
mov
dec
popf
mov
adc
mov
jl
and
clc
hlt
imul
jnp
test
imull
in
pushf
push
mov
pop
pop
xor
pop
addr16
sbbb
push
jbe
je
sti
or
cmp
mov
mov
aam
loope
adc
ja
push
push
insb
fnstenv
das
mov
inc
and
lret
mov
dec
popa
push
dec
test
ret
push
bnd
out
in
aam
push
or
pop
cld
add
xchg
dec
push
pop
out
xor
in
and
mov
arpl
mov
adc
and
and
into
dec
int
subb
mov
pop
shrb
daa
je
xlat
mov
loope
into
xchg
lret
push
imul
mov
fsubrs
mov
mov
outsl
xchg
pop
out
add
push
xor
out
mov
mov
and
es
mov
mov
imul
jle
fscale
mov
adc
test
sub
outsl
sbbl
xchg
call
std
push
mov
adc
mov
enter
push
push
pop
es
xor
xchg
or
cmp
daa
repz
ffree
push
gs
pop
pop
mov
stos
subb
lods
pop
into
xchg
or
push
push
psubsw
inc
out
dec
cmp
stos
stc
cmp
imul
or
int
les
jnp
push
mov
out
jno
cmp
or
stos
mov
lret
xlat
and
das
cltd
or
dec
mov
cmp
stc
fisttps
lahf
push
addr16
xchg
xchg
test
push
movsb
jmp
mov
dec
push
inc
decb
adc
aam
imul
dec
inc
sti
lahf
cmp
popf
sbb
scas
jae
ss
jbe
scas
and
inc
sub
adc
int3
orb
jne
ds
inc
fwait
int
aam
dec
mov
push
out
imul
cmpsb
call
fimuls
fldt
mov
mov
jae,pn
push
sub
data16
sti
aam
cmc
adc
lods
push
xchg
aam
sub
sarl
scas
mov
fcoml
fstpt
movsl
lcall
cmp
mov
arpl
aaa
jne
push
mov
stc
push
mov
aas
loope
mov
js
mov
test
or
mov
sub
cmp
ficomps
sub
xchg
andb
adc
pop
outsl
inc
test
aaa
inc
pop
outsl
xchg
fnsave
sbb
lret
in
add
cmc
cmp
ss
ds
ja
inc
imul
mov
stc
jge
mov
xor
decl
dec
mov
aaa
cmp
lret
stc
std
sub
dec
xor
fsubr
into
jae
lret
sub
pop
jp
int
gs
sbb
jne
gs
jbe
popa
sub
and
out
push
jmp
mov
stos
mov
xor
roll
sbbl
push
jmp
push
sub
decl
test
sbb
sub
mov
subl
jg
jnp
mov
fs
std
imul
dec
enter
mov
xchg
pop
das
hlt
sbb
mov
out
and
subl
fs
into
add
fiaddl
dec
gs
xchg
add
sbb
addr16
test
mov
push
or
or
insl
cs
sub
movsl
aas
add
jnp
mov
add
push
mov
pop
loop
adc
or
xor
dec
inc
cmpsl
std
inc
mov
scas
roll
inc
shll
add
fmul
cltd
or
dec
sub
xor
cmp
or
add
rclb
addb
and
mov
and
mov
insl
xchg
shrl
cmp
lcall
jae
test
or
mov
imul
int
aam
xchg
ja
xor
cmpsb
push
icebp
rorl
repz
inc
cli
xor
sub
jecxz
mov
les
mov
and
adc
test
outsl
cmpsl
adc
adc
jge
sub
or
lods
pusha
xchg
ror
xchg
aad
mov
clc
mov
ret
mov
int
pop
adc
push
lods
in
les
scas
fcomi
xlat
aaa
ficoms
jnp
push
fs
repz
sarb
pcmpgtb
inc
pushf
push
loopne
imul
fistl
sub
nop
std
adc
vpsrld
cli
cltd
xlat
notb
int
cltd
push
sub
cltd
jb
pop
flds
ja
sarb
mov
scas
xchg
cmpl
mov
lcall
xchg
fistpl
cmp
in
xor
lods
repz
jmp
mov
std
ret
scas
mov
jmp
jnp
cmp
test
mov
lahf
movsb
dec
mov
and
ss
jnp
daa
mov
movsb
pavgw
imul
jne
je
stos
bound
mov
in
push
jge
adc
cmpsb
fiadds
pop
in
iret
aam
rolb
fidivs
les
call
aaa
fcmovu
adc
inc
jnp
sbb
ret
rcl
ds
ds
jecxz
pop
call
sub
sub
jg
cli
mov
pop
or
sub
out
mov
cmp
adc
movsb
rcll
xchg
mov
fwait
sub
in
pop
mov
inc
call
push
fcmovnbe
iret
push
dec
data16
lds
arpl
stc
rcrb
fisttpll
sbb
mov
in
jge
cmpsb
lret
insb
outsb
rcl
pop
repnz
xor
lea
dec
push
sbb
and
sbb
clc
popa
shl
fistl
mov
push
icebp
pop
cs
sti
and
lods
outsl
mov
cmc
or
rcrl
cmc
mov
movsb
fadd
daa
fcoml
adc
xchg
cmp
outsb
cmp
ljmp
or
shlb
dec
jle
fsubrl
lds
cmpl
pushf
xchg
outsb
ss
popw
in
fst
push
pop
mov
push
sahf
insb
jb
call
test
ljmp
loop
xchg
fidivl
adc
sbb
bound
jmp
mov
ret
test
je
dec
dec
xor
ljmp
insb
iret
xchg
aam
push
sti
in
sbb
das
cmpl
xlat
dec
pop
das
mov
ja
insb
rolb
sub
lds
jae
jno
movsl
popf
cmp
aam
and
mov
mov
leave
shlb
add
fsubl
fdiv
adc
sub
mov
add
mov
gs
fidivs
ljmp
ja
cli
stc
mov
pop
arpl
jbe
mov
add
jo
jecxz
jae
mov
shrb
in
scas
je
and
adc
test
cmp
jle
cmpsb
push
jbe
push
xor
lea
sub
mov
outsb
pop
cwtl
cmpsl
ds
jl
negb
dec
sub
daa
cwtl
mov
outsb
or
outsl
daa
ljmp
bound
data16
push
mov
jb
or
in
fldl2t
js
imul
ds
test
insl
lea
jg
shll
in
adcb
lds
jbe
aas
fistps
xor
dec
jmp
cmpl
addr16
outsl
jl
jne
ja
cmp
repz
cmp
inc
mov
repnz
mov
fsub
push
xchg
cld
loop
xor
adc
add
mov
mov
js
mov
ljmp
and
adc
call
out
lret
sub
xchg
mov
dec
jo
and
clc
hlt
mov
dec
popw
jnp
nop
out
cmpsl
xor
or
sbb
dec
fdivl
add
xchg
or
sub
outsl
sub
shrb
jge
pop
leave
xchg
jge
or
in
pop
ja
fs
mov
call
fsubrl
dec
fs
mov
adc
adc
mov
pop
inc
adc
test
cmp
mov
call
in
dec
mov
jno
xor
out
in
shl
das
and
mov
lret
cld
gs
mov
mov
jae
outsb
daa
lods
ds
xchg
enter
mov
aaa
adc
sub
inc
fwait
out
lods
mov
jmp
loope
mov
and
inc
jmp
xchg
xchg
and
pop
jno
add
inc
push
pusha
pushf
mov
mov
or
pop
pmaxsw
scas
andb
rcr
aam
inc
lods
ret
ret
in
fdivr
inc
dec
insb
cmc
push
lcall
fisubl
mov
enter
mov
fdivrl
xchg
rcrb
xor
inc
test
inc
cmp
movsb
fs
adc
mov
jne
mov
inc
or
adc
sbb
leave
fdivrs
out
stos
sbb
hlt
mov
test
push
lods
jg
fnstsw
shrl
incb
fnstcw
mov
push
add
ret
pop
inc
xchg
cmp
jo
dec
mov
cmp
jmp
pop
mov
push
ss
or
pusha
inc
ds
fimuls
ljmp
movsl
xor
mov
loopne
mov
push
or
inc
hlt
jne
lret
fcmovne
sahf
pop
inc
sbb
push
and
imul
das
xor
mov
xchg
stc
or
sti
das
mov
add
bound
call
inc
loopne
test
add
xchg
repnz
sbb
jge
cld
outsl
sub
and
cs
push
out
shll
pop
mov
xor
rcll
in
jbe
decb
sarl
lods
cld
inc
filds
lahf
ljmp
mov
sbb
xor
cld
sbb
popa
mov
inc
push
mov
pop
into
out
je
and
dec
cmp
mov
test
shl
or
scas
stos
lcall
mov
jmp
icebp
cmc
add
mov
and
xchg
sbb
inc
xor
ret
fidivl
inc
or
stc
sbb
cmp
popa
push
into
add
dec
fisttps
or
xchg
mov
clc
push
les
cmp
test
ja
xchg
mov
lcall
jmp
adc
xor
fnstcw
mov
es
es
mov
in
jno
sbb
xor
sbb
repnz
or
ljmp
push
add
icebp
sbb
loopne
sub
jne
outsl
push
mov
lcall
subb
cmc
pop
test
xor
sahf
or
pushf
pushf
pop
insl
fiadds
sar
jne
jns
push
pop
add
add
fidivl
jp
sti
das
aam
rcrb
xchg
jg
dec
push
mov
xchg
or
pop
js
dec
jecxz
rcll
arpl
mov
dec
xchg
out
lods
and
out
addb
pop
sbb
sub
lock
push
pop
or
push
addr16
jmp
addr16
lea
add
mov
scas
lahf
fdivr
mov
aad
xor
or
jno
dec
fwait
lcall
mov
push
inc
stc
jns
aad
repz
mov
call
stc
insl
out
fdiv
add
mov
sub
push
sub
inc
push
or
bound
cmp
adc
test
xchg
jno
sub
scas
out
adc
std
adc
push
inc
repnz
mov
or
mov
in
pusha
or
jne
push
call
mov
and
out
cs
iret
dec
lcall
stc
sub
mov
aam
and
add
push
and
aam
popf
push
mov
adc
test
popf
add
dec
fisttpl
mov
push
inc
push
lret
jb
std
cmp
xor
cmpsl
hlt
test
add
push
es
movsb
sahf
add
sahf
mov
xchg
fs
mov
insb
xchg
jle
test
stos
add
gs
add
js
xchg
add
scas
test
into
ss
sarl
adc
xchg
adc
jmp
pusha
xchg
in
inc
sbb
pop
sub
out
mov
pushf
pop
shl
scas
adc
in
xor
cmp
and
push
test
xchg
ret
mov
xchg
movsl
nop
pop
cmp
jp
in
mov
mov
mov
inc
sub
add
cmpsl
xchg
jns
mov
loop
loopne
dec
aam
lret
adc
jae
enter
ret
sub
loopne
sub
xchg
enter
sbb
out
sbb
adcb
sub
dec
cwtl
fsubrs
nop
jmp
sub
in
in
sub
sub
scas
mov
mov
xchg
jo
ljmp
push
xchg
push
and
or
sub
js
add
scas
mov
fcmovb
add
or
mov
rolb
js
and
daa
pop
pop
mov
add
es
dec
jl
pop
test
mov
mov
push
xchg
add
out
push
jl
ret
jns
add
fwait
adc
pop
or
mov
xchg
clc
rcrb
xor
imul
fs
test
outsb
xchg
scas
cmp
jl
push
mov
dec
mov
add
sarb
outsl
iret
repz
lds
xchg
lret
into
out
rcll
fwait
inc
cmp
fdivp
daa
sub
push
push
dec
mov
test
inc
js
mov
insl
mov
xor
insb
inc
push
mov
push
aas
jne,pt
arpl
jmp
mulb
sbb
aas
out
shr
push
shll
xchg
ret
subl
int3
adc
and
push
or
sar
test
or
xor
dec
add
push
sahf
test
sbb
outsb
or
lods
mov
les
out
or
dec
data16
jbe
add
hlt
sub
add
sarl
scas
repz
push
test
popa
bound
aam
subb
push
jl
add
ja
sub
dec
out
clc
xchg
mov
pop
fst
sub
lret
xchg
xchg
mov
sbb
push
jl
test
and
push
xlat
and
movsl
test
lahf
lods
outsl
sub
sub
push
xor
fiadds
scas
ret
jmp
jmp
dec
inc
push
into
test
pusha
push
sbb
mov
in
jae
add
xchg
xchg
popf
imul
mov
shrb
jp
std
into
in
lret
sub
movsb
sbb
xchg
jg
jp
ret
jp
ret
xor
push
sbb
rorb
flds
xchg
and
xlat
sub
xlat
dec
or
lock
lcall
inc
lds
cmpsl
js
xorb
or
add
jae
mov
xor
dec
loop
jbe
sarb
pop
lds
test
fldln2
add
xchg
and
xor
xor
cs
jb
xor
jo
in
and
ljmp
and
imul
pop
push
push
gs
int
and
push
mov
lret
xor
hlt
mov
mov
ficoml
stos
sub
sub
mov
sarb
jmp
mov
sub
out
adc
and
sbb
mov
adc
dec
or
xchg
nop
pushf
shl
pop
mov
or
movsb
dec
clc
add
sub
add
loopne
stos
arpl
jge
into
xchg
loope
fs
enter
and
cmp
jp
into
sti
push
push
inc
scas
jl
xor
lods
sbb
sub
lahf
push
in
movsb
enter
pop
addr16
fdivrs
cmp
add
mov
push
push
out
xchg
push
sbb
into
mov
cld
jge
or
inc
xchg
lea
or
mov
enter
mov
jo
push
sahf
std
mov
jo
jbe
test
lahf
std
mov
test
ds
xor
lcall
jge
fwait
cmp
sbb
leave
xchg
mov
and
test
cmp
fwait
outsl
sbb
xor
stc
insl
xchg
cwtl
jl
add
jo
dec
sub
mov
xor
push
jns
ret
adc
xor
jp
loop
iret
stos
stc
sahf
daa
push
and
test
mov
popf
mov
sub
mov
and
sub
push
pushf
xor
lock
cmp
cmpsb
cmovg
xchg
leave
gs
xchg
stos
cs
js
sbb
xor
adc
pop
lret
cmp
xchg
xlat
cmp
pop
je
jle
fwait
xor
scas
ret
shlb
inc
out
xor
fmulp
stc
leave
pop
fldl
mov
xchg
dec
xor
cmp
cmp
mov
and
add
pop
lea
mov
cld
and
js
cli
sub
cmpsb
pushf
push
pushf
stc
test
sti
test
out
std
lods
movsb
or
bound
aas
sub
sbb
in
das
cmp
pop
and
repnz
xor
jae,pt
aas
adc
and
repnz
imul
jecxz
add
xor
jae
cmp
jbe
xorb
rcrl
cmp
nop
fcmovbe
insl
jne
cmpsb
xchg
pop
xchg
nop
adc
push
jp
ds
lret
imulb
jb
cmp
add
cmp
aad
dec
loopne
enter
imul
pop
xor
push
ja
pushl
iret
sbb
mull
jge
push
movsl
jbe
enter
cmp
jbe
push
mov
shrl
ss
jns
repz
jnp
or
xor
roll
cmp
nop
repnz
nop
xor
jge
icebp
out
je
movsl
ret
mov
inc
inc
cltd
pop
cld
inc
jbe
in
rclb
repz
subl
stc
test
rorb
rorb
inc
nop
sbb
push
lea
jp
cmpsb
cwtl
dec
inc
ret
in
in
pushf
ret
sbb
mov
push
nop
out
push
fldt
sub
sbb
mov
je
ret
mov
orb
in
cmpsl
dec
fsubl
and
jg
push
mov
imul
fisubrs
mov
inc
cltd
xchg
lcall
arpl
mov
mov
es
dec
testl
xor
fnstcw
sub
xor
push
loope
insb
mov
adc
popf
mov
cmp
sbb
push
enter
lahf
mov
and
push
pop
lcall
pushf
and
sub
or
fstps
stos
scas
push
xor
mov
ds
outsl
lds
add
shl
xchg
push
shll
dec
leave
sbbl
xchg
xchg
jge
adc
fwait
mov
sahf
jmp
fcomip
je
xchg
jb
cmpsl
and
mov
rorl
je
xor
mov
test
jle
push
xchg
fsubrs
sahf
adc
incl
fcompl
jg
pop
loop
insl
sbb
cmpsb
pop
outsb
cmpsb
fistpl
rol
daa
outsb
mov
mov
int3
leave
push
jbe
push
gs
and
lret
dec
sub
ret
pop
mov
pop
ret
popa
stos
push
rcrb
sbb
shl
in
dec
jo
cs
leave
movsb
add
clc
adc
sarb
shrl
jl
jno
or
mov
dec
cmc
pop
mov
push
in
inc
fldt
and
mov
mov
aas
xor
dec
mov
hlt
fisttps
je
and
xor
daa
push
adc
xor
out
insb
jae
pop
out
loop
test
out
mov
xlat
push
xchg
cmp
and
dec
ss
call
jecxz
mov
fildl
notl
mov
addr16
sti
cmpsb
mov
in
push
std
leave
xor
pop
dec
fwait
std
jno
test
sub
cltd
insb
out
mov
mov
mov
in
adc
sub
mov
inc
test
std
push
fwait
mov
in
test
jmp
packssdw
fsts
sbb
ds
sub
mov
les
stos
mov
or
push
in
inc
fwait
lret
sub
stc
add
int
dec
clc
xor
and
adc
mov
frndint
call
into
test
dec
aas
sub
sbb
or
dec
mov
jmp
cwtl
push
mov
cltd
push
nop
xor
cmp
negb
sub
fistpl
cmp
mull
mov
mov
push
pop
aaa
or
xchg
aas
push
inc
icebp
fmulp
mov
inc
ljmp
sbb
jbe
repz
in
shll
xchg
and
add
dec
xchg
and
call
and
shrb
mov
jmp
sbb
jl
sub
shlb
fadds
arpl
or
add
out
mov
inc
int
add
pop
movb
mov
xchg
andb
scas
shlb
ficoml
int3
sbb
jg
bound
push
mov
insb
pushf
aas
dec
ret
cmc
or
loopne
inc
hlt
std
sahf
movsb
test
mov
inc
mov
sub
sbb
xchg
lods
dec
jecxz
sti
in
xchg
inc
push
pop
push
add
hlt
lds
or
cmp
add
push
pop
add
xor
cltd
roll
jb
inc
es
xlat
in
jg
pop
sbb
ret
sbb
shr
cs
or
cmp
clc
add
out
pop
sub
xchg
mov
mov
dec
add
out
jnp
mov
pop
lock
aas
xor
xor
add
and
adc
xor
mov
cmp
jb
jne
xor
cmp
and
mov
push
fisttpll
pop
pop
mov
int
cld
xchg
fidivrs
inc
sahf
cmpsl
push
movsl
loopne
scas
push
adc
cs
add
xchg
rorl
xchg
or
fcmovbe
cltd
in
icebp
mov
mov
lock
rclb
mov
fwait
pusha
cmp
rorb
in
jbe
push
add
mov
jns
jno
and
xor
xor
or
aad
adc
loope
popa
push
jne
xlat
pop
shrl
pop
add
fbstp
js
pop
add
mov
push
mov
sbb
or
jmp
ljmp
mov
mov
push
addb
test
leave
rcrl
in
call
push
es
push
lahf
je
push
pop
mov
mov
in
dec
mov
inc
aam
mov
les
mov
cmp
loop
xchg
sbb
or
iret
in
adc
shll
test
mov
fs
pusha
int
lods
mov
or
xchg
adc
jg
sbb
lahf
rolb
out
cmc
add
push
mov
pop
sbb
pop
add
add
pop
xor
aam
loope
test
push
xor
pop
sub
jecxz
jns
enter
movsb
inc
jle
pop
out
aaa
call
mov
insl
pop
xchg
xchg
dec
mov
pop
xor
rep
dec
xor
pusha
mov
inc
shlb
cmp
jbe
iret
fwait
jge
adc
cmp
mov
aaa
mov
out
jg
out
mov
push
pop
push
ret
mov
lds
dec
fwait
imul
lea
xchg
xor
dec
in
xlat
sub
insl
repz
sbb
cltd
in
lret
dec
ret
inc
ret
sub
push
out
mov
cwtl
xor
bound
daa
imul
jmp
mov
xchg
pushf
aaa
ja
pop
addr16
fisubl
add
pop
xor
cmp
adcl
xor
hlt
pop
add
into
inc
shrl
out
cmp
and
xchg
jo
sub
jb
xchg
jnp
mov
aam
xchg
mov
cmpsl
adc
xor
push
dec
mov
inc
movsb
pushf
popf
xor
or
sbb
mov
das
shlb
xor
arpl
xor
fcoml
mov
nop
xor
add
xor
scas
jns
leave
pop
fucomi
cmpsl
pop
cmp
inc
or
call
add
sbb
stc
shrb
cwtl
jl
xchg
pop
lahf
sbb
into
sub
mov
pop
roll
cmp
sbb
movsb
inc
mov
cmpsl
cmp
cmp
add
push
sub
mov
inc
test
mov
adc
add
pop
xor
aad
popa
xchg
push
add
incb
mov
loop
fs
cmp
dec
fisubl
shll
xchg
sbb
in
aad
mov
sub
hlt
cld
repz
je
les
sub
aam
push
cld
mov
or
bound
sub
sub
xchg
sti
sbb
dec
lea
cmp
loopne
and
mov
mov
inc
movsl
mov
xor
bound
out
in
ljmp
push
mov
pushf
in
adc
dec
out
hlt
dec
xchg
cli
dec
or
sbb
jge
outsb
ficompl
lret
ljmp
jl
inc
and
cwtl
pusha
push
push
push
xchg
test
jg
icebp
shl
pause
lea
call
fdivrl
lods
sub
rcl
add
cmc
lcall
lret
fs
pop
xor
dec
rcrl
jnp
fwait
call
test
sbb
rorl
pop
sub
lock
xor
cmp
pop
xlat
xor
sbb
out
cmp
jo
and
sub
dec
xchg
out
mov
fs
into
dec
inc
jb
out
daa
popa
out
stos
lods
inc
jmp
mov
jae
sbbb
or
enter
sub
sub
stos
test
jnp
jns
aas
jle
xchg
adc
imul
jae
cmc
insb
ljmp
mov
xchg
lea
cli
rcll
imul
repnz
arpl
fnsave
movsl
push
icebp
mov
lahf
mov
dec
cmp
dec
sbb
pop
mov
cmp
xchg
repz
nop
jecxz
or
lods
mov
mov
inc
data16
cmp
xor
pop
pop
lds
ds
movsl
and
xlat
xchg
cmp
xchg
cli
dec
rclb
dec
popf
cli
int3
test
pop
stc
jecxz
lods
inc
shrl
orl
rorl
jne
mov
out
mov
xchg
and
sub
push
testb
jecxz
pop
shrb
into
daa
cmp
xor
dec
fisttpll
cmp
adc
mov
ljmp
int
xchg
nop
mov
and
and
or
ss
mov
jae
les
push
cs
mov
inc
lcall
repz
cmp
ret
mov
repnz
mov
nop
mov
sub
movsb
cmp
sahf
cld
rorl
pop
cmc
pop
mov
dec
lds
into
test
mov
dec
cmp
jle
add
and
shrl
rcrb
in
mov
rclb
jge
cltd
add
dec
xor
out
lds
dec
jg
mov
das
add
and
jmp
data16
add
pop
or
or
push
sti
adc
jbe
scas
sub
rcrl
mov
arpl
fldln2
cld
push
mov
mov
loop
jg
add
out
in
xor
dec
insb
lock
repz
inc
repz
movb
mov
rcrl
or
mov
pushw
out
mov
adc
sbb
jnp
sbb
std
jge
sub
mov
xor
mov
add
js
or
outsl
dec
call
inc
mov
int3
aam
and
push
scas
push
cmc
cltd
push
fists
out
stos
jmp
es
pusha
lods
rcrb
es
dec
xlat
fsubs
sub
xorl
stc
movswl
addl
push
mov
xor
f2xm1
pop
stc
add
ja
js
imul
cli
xchg
bswap
xor
pop
lods
jp
int3
icebp
mov
scas
sbb
push
jl
pop
imul
xchg
jmp
push
xlat
jg
inc
push
insb
sub
in
sahf
mov
sub
inc
insb
push
les
sub
stc
enter
cmpb
xchg
jge
nop
mov
pop
cmpb
test
mov
pushl
dec
dec
fwait
daa
bound
lahf
hlt
xor
dec
jae
ret
into
ss
cld
jge
nop
and
jle
pushf
cmp
in
hlt
movsb
xchg
lret
cmp
cmp
mov
test
in
or
push
sub
push
xor
xor
popf
movsl
mov
ret
cli
daa
stos
jmp
and
nop
add
adc
inc
call
adcl
cmpb
out
pop
jae
call
movsl
in
xchg
das
and
rol
mov
fiaddl
adc
mov
or
sbb
mov
in
jg
cmpsb
mov
mov
push
in
fwait
inc
jo
ds
stos
nop
ja
ljmp
daa
mov
xor
mov
out
push
fnsave
fdivr
inc
pusha
out
cld
loope
sub
addr16
mov
mov
stos
sbbb
int
cmpb
or
pusha
pop
aaa
pop
les
pop
jg
inc
out
or
xor
mulb
jmp
add
imul
mov
mov
sub
rorb
jl
loope
pop
jo
inc
xor
test
stos
xchg
loop
cmp
idivl
pop
mov
sahf
push
fistpl
popf
add
push
or
push
dec
loopne
les
test
xchg
cld
shlb
lahf
pop
aaa
out
xlat
mov
sub
dec
cmp
stos
add
in
daa
rol
add
sahf
rolb
cmp
rolb
cld
xchg
call
lds
cmc
imul
mov
and
mov
pop
add
mov
mov
push
fidivrs
fstps
movsb
nop
mov
imul
out
pusha
adc
inc
mov
sbb
das
mov
adc
add
mov
movsl
int3
adc
ljmp
or
cwtl
pop
pushf
adc
inc
sub
outsl
cvtps2pd
mov
lock
push
dec
adc
push
pop
test
loope
inc
sub
add
adc
fmull
dec
jg
dec
fldcw
xor
fiaddl
leave
mov
jne
pop
and
adc
addl
call
cmp
fdivrp
cmp
adc
fidivrs
pushl
jmp
mov
mov
mov
ret
sbb
stc
jge
fidivs
shl
mov
xchg
movsl
arpl
mov
mov
and
jb
loopne
push
adc
sub
cwtl
jp
or
pop
cmpsl
fildl
fwait
pusha
into
jl
call
push
in
adc
and
shll
sbb
cmpl
or
les
xchg
jge
dec
movsl
adc
pop
xor
and
sub
xor
into
or
xchg
addl
lock
sub
inc
fwait
mov
mov
ljmp
das
idiv
inc
push
repz
mov
shl
pop
mov
lods
jnp
sub
aam
pop
pop
mov
fisubs
or
mov
es
xchg
lods
dec
or
mov
shlb
sub
cld
mov
sbb
rol
and
dec
mov
ja
lahf
jo
cltd
leave
add
incb
outsl
out
iret
pop
ret
add
mov
shll
lds
dec
jbe
daa
loop
push
pop
adc
xor
adc
xchg
imul
mov
mov
jl
les
or
notl
sub
jbe
push
xchg
sbb
icebp
dec
inc
movsl
pop
pop
mov
cmp
fsubs
xchg
mov
cmp
in
xlat
jmp
cwtl
push
orb
mov
movsb
push
bound
orl
fwait
push
push
scas
cwtl
out
ds
inc
in
cs
pop
outsb
aas
jae
add
lea
mov
divl
pop
movsb
cld
in
push
mov
inc
popf
scas
fiaddl
xlat
xchg
inc
stos
mov
push
jge
leave
out
and
stos
icebp
adc
and
push
fsubs
movsb
aad
and
das
mov
in
movsl
insb
int
daa
cmp
inc
add
or
and
test
call
inc
sbb
shl
xchg
clc
es
stc
je
leave
repnz
imul
dec
sub
fisubl
xor
pop
xchg
data16
sub
jno
ret
jge
addr16
pop
mov
pusha
jb
stos
pop
pop
scas
stos
pop
sahf
inc
cli
pop
xchg
subl
cmc
ds
jmp
pusha
cmpsl
les
pop
outsb
cmovno
out
jp
add
xchg
in
mov
xorb
test
bound
pop
add
dec
fsubs
shl
jecxz
sub
jg
jmp
incl
sub
mov
pop
jg
add
mov
push
mov
push
sub
pusha
movsb
sahf
fimuls
std
jns
dec
imul
call
xor
or
in
arpl
lea
or
mov
insb
daa
pusha
repnz
imul
inc
outsb
std
push
lods
mov
jl
notl
aas
fwait
repz
pop
mov
mov
mov
lods
dec
out
cmp
fxtract
adc
and
in
cld
push
push
ljmp
xchg
rcrb
xor
jl
and
adc
in
vpmaddwd
bound
out
adc
pushf
sub
lea
cld
sbb
mov
or
push
ret
in
call
int
mov
enter
inc
stc
mov
cmp
cltd
mov
inc
pop
fistps
jno
dec
mov
add
mov
or
movsl
gs
push
repnz
scas
inc
orl
or
or
inc
and
mov
in
in
in
or
cmp
ds
lahf
iret
lret
mov
int
mov
add
iret
stos
fsubrl
aad
or
and
or
jle
imul
jbe
cmp
or
sbb
inc
inc
push
imul
rol
repnz
sub
test
mov
push
leave
cmpsl
cmp
lock
or
fs
xor
mov
xchg
jle
movsl
sbb
lea
xchg
xchg
popa
movsl
xor
cli
decb
mov
push
or
xchg
pop
js
pop
xchg
lret
mov
movsl
popf
sub
sub
leave
jns
std
mov
dec
jne
sbb
push
dec
xor
fildl
sbb
das
mov
cld
sub
sub
sbb
cmpsl
je
jns
jo
sub
gs
mov
sbb
shlb
push
dec
insb
mov
jns
xchg
push
mov
outsl
adcl
lahf
mov
pusha
cmp
lea
inc
cmpsl
and
xchg
pop
pusha
mov
mov
test
cltd
dec
dec
lcall
in
inc
lea
xchg
jmp
test
xor
js
dec
pop
inc
pop
xor
aad
pushl
mov
ret
and
xchg
sub
addr16
data16
push
insl
push
add
outsl
add
pop
xor
repnz
das
dec
pop
test
aas
fucomi
les
or
lret
and
push
push
enter
test
adc
pop
lret
push
and
lret
inc
psubusb
mov
mov
adc
inc
sti
mov
insl
roll
les
ret
push
imul
in
out
ret
mov
or
add
std
ljmp
roll
or
out
add
out
or
sbb
xor
imul
test
sub
push
insb
mov
push
mov
movsb
sub
or
add
dec
lock
adc
ds
dec
lret
adc
or
daa
sti
jmp
rol
out
inc
arpl
jnp
call
inc
gs
mov
out
push
adcl
sbb
testl
adc
dec
ljmp
pushf
inc
xchg
or
dec
ret
sbb
mov
add
sub
mov
lods
sbb
inc
test
add
jg
jne
stos
push
jne
mov
test
dec
mov
daa
xchg
cmpsb
out
lret
in
notb
arpl
xchg
fsubp
sbb
insl
or
pop
inc
outsb
aas
xchg
mov
popf
das
repnz
and
push
xor
aad
shr
sub
mov
push
jmp
add
movl
mov
jecxz
mov
mov
imul
hlt
insl
jl
push
lret
cmpsb
filds
dec
push
jecxz
lods
lret
divl
mov
mov
aam
pop
push
mov
dec
out
fidivrs
shlb
call
fnsave
inc
clc
mov
add
aaa
and
stc
scas
es
aam
mov
xchg
adc
mov
loopnew
sti
sub
sub
add
inc
xchg
mov
adcb
insb
lods
xor
push
mov
dec
cmp
scas
push
adc
mov
and
repnz
sbb
mov
rcr
shlb
and
fnstenv
inc
call
mov
mov
insl
dec
adc
nop
push
push
mov
jl
mov
xchg
mov
scas
push
in
adc
es
popa
mov
test
in
fs
out
pop
jmp
popa
push
jnp
insl
adc
jo
cmp
cmc
dec
stos
testb
js
cld
jae
inc
ja
and
nop
outsb
shlb
cmp
xchg
push
and
sahf
inc
gs
xor
add
inc
dec
in
ljmp
push
sub
lock
es
dec
sbb
mov
adc
pop
aam
ja
pop
pushf
mov
mov
es
xor
cld
mov
jns
add
lret
int
dec
dec
inc
lret
cmp
jl
mov
inc
inc
ret
lods
sub
xchg
nop
mov
jno
mov
push
test
jle
xor
fsubs
cmc
push
xchg
ljmp
mov
cwtl
idivb
sub
dec
ljmp
sub
push
cltd
xchg
sbb
mov
push
push
insb
xchg
lret
mov
imul
sbb
add
mov
mov
push
loopne
adc
mov
lea
adc
sbb
and
cmpsl
lock
frstor
sbb
sub
pop
lret
negl
repnz
movsb
ljmp
mov
mov
aaa
sbb
fistps
mov
or
sbb
mov
daa
lret
xchg
xor
pop
xor
lods
xchg
pusha
fcoms
adc
dec
cltd
xchg
jmp
in
cmc
xchg
cmpsl
mov
popf
adc
cmp
rclb
call
xor
fmuls
aas
in
test
subl
inc
add
jb
and
push
das
fists
pop
fsubp
pop
sbb
mov
jae
adc
stos
xchg
ljmp
fstpt
jge
mov
mov
sbb
stos
ret
xchg
jo
call
cmp
orl
xor
xor
mov
push
adc
repz
xchg
gs
shll
stos
dec
xchg
jmp
adc
lret
jne
notl
xchg
aaa
mov
push
push
pop
inc
sub
push
inc
addl
pop
cmp
aas
jns
cli
in
mov
xchg
ja
dec
mov
fmull
adc
pop
xchg
mov
cmp
sbb
xchg
mov
xor
out
in
or
pop
test
mov
int
aam
pop
lret
xchg
inc
sub
mov
mov
jle
sarl
push
add
cltd
jbe
lmsw
clc
ficompl
adc
repz
push
sub
loop
insb
test
jl
pop
loopne
or
jg
xchg
mov
pop
loopne
dec
repnz
sub
cli
outsl
int
push
mov
cwtl
inc
mov
addr16
add
adc
cmp
mov
xor
repz
lret
jge
cltd
push
orl
pop
push
into
cmp
cwtl
shr
sub
pusha
jo
or
cltd
sarl
enter
xchg
iret
out
fnstcw
push
scas
outsb
fldt
vmovmskps
lahf
sub
pop
dec
idiv
insl
mov
xor
pop
add
pop
pop
and
sbb
xor
hlt
nop
hlt
cmc
ljmp
decl
inc
push
jnp
add
cmpsl
push
stos
aam
and
jae
add
mov
add
fistpll
ret
sub
movsl
clc
movsb
out
outsl
lahf
int3
cmp
push
hlt
hlt
mov
dec
test
xchg
jne
or
shlb
les
lret
cmp
aaa
pop
mov
mov
outsl
adc
popf
mov
jae
js
int3
pop
xchg
fst
push
and
test
jb
movsb
add
push
push
push
aas
cmp
mov
mov
cmp
loopne
push
adcl
mov
cmp
dec
or
inc
dec
je
aas
cmpsl
add
adc
stc
sub
cmp
xchg
sbb
xchg
cld
adc
call
push
push
lods
enter
mov
sbb
or
add
fs
into
dec
jne,pn
lret
sub
dec
fs
inc
sbb
bndldx
mov
fwait
daa
sti
jno
mov
or
mov
and
mov
scas
aas
and
in
xchg
xlat
dec
out
in
mov
in
test
pop
jp
mov
out
xor
pop
sub
cmp
inc
les
stos
cmpb
inc
adc
xor
fwait
push
jne
mov
aam
inc
push
cmc
fbstp
add
ret
ljmp
xor
das
cmp
fs
clc
mov
mov
test
xor
test
lea
sub
xor
sub
test
imul
cli
loop
push
sbbl
mov
mov
addl
pop
xchg
imul
movsb
cltd
insb
adcb
js
jbe
stos
jo
mov
aam
xor
mov
js
cld
jge
push
mov
cs
push
lahf
ret
push
fdiv
sbb
push
xchg
js
movb
mov
xor
lds
push
out
fincstp
pop
mov
mov
jo
mov
mov
leave
cmc
xor
mov
mov
data16
ret
cmc
or
mov
in
sbb
test
pop
enter
mov
sbb
pusha
mov
pop
push
cmp
or
jg
sbb
jo
mov
jmp
pusha
int3
test
loope
xchg
xchg
mov
in
jae
sbb
lock
mov
mov
and
inc
mov
sahf
lret
movsb
sub
mov
out
jge
mov
sbb
or
lcall
movsb
shrl
insl
test
jmp
test
jmp
mov
mov
clc
imul
leave
dec
push
aas
sbb
pop
testb
cmp
repz
xor
cs
cmp
bound
xor
mov
xor
pop
push
mov
je
inc
xchg
adc
fs
insb
push
sti
xchg
sbb
jg
das
mov
int3
sahf
add
rcll
mov
popa
sbb
mov
int3
out
and
jns
std
xor
nop
or
xchg
outsl
pop
sub
cmc
hlt
out
inc
aaa
pop
aaa
movsb
jle
test
popa
pop
mov
test
jp
sti
fldl
jns
icebp
idivb
jo
pop
out
jno
arpl
mov
xor
adc
push
mov
loope
cmp
mov
movsb
in
fnstenv
mov
xor
lcall
mov
cmp
ret
jbe
mov
into
repnz
fcompp
sub
push
lods
cwtl
clc
push
push
pop
movl
hlt
jne
push
int
add
sbb
mov
aad
sbb
pushf
cld
int
fwait
jbe
mov
adcl
adc
das
sbb
pop
xchg
xchg
inc
add
mov
pop
mov
mov
pusha
lds
insl
pop
sub
inc
sbb
and
popf
inc
inc
cmc
dec
push
jo
fisttpll
test
inc
enter
cmp
sub
pop
ret
xor
cmpsl
push
jg
std
scas
sbb
sbb
fcmovnbe
imul
inc
cwtl
stos
add
or
fwait
adc
mov
int3
mov
test
sub
shl
cmp
push
push
xor
jecxz
cld
or
jg
gs
movsb
outsb
xor
cmp
sub
xchg
xchg
mov
in
pop
sub
aam
or
sub
sbb
and
mov
mov
stc
popf
dec
leave
in
cmpl
inc
lds
imul
dec
push
mov
hlt
mov
cmp
data16
mov
sbb
sub
cwtl
out
js
ja,pt
push
pop
add
test
sarl
fidivs
adc
pop
cld
aas
push
jp
dec
inc
sub
inc
xor
pop
les
add
mov
ret
xchg
int
jb
or
xchg
sub
rcll
les
repnz
push
sbb
test
inc
pusha
and
lahf
jg
lret
and
mov
ss
rcll
push
in
add
je
and
or
adc
fdivrs
rcr
mov
pushf
ss
repz
scas
sahf
xchg
or
sti
popf
xor
ja
inc
mov
pushf
and
and
imul
popa
into
sbb
sti
flds
fldcw
adc
lcall
insb
mov
add
cmp
rclb
xor
xor
pop
into
test
rorb
lock
int3
fisttps
iret
push
mov
cwtl
fs
mov
dec
jg
repz
test
mov
pop
lods
sahf
shl
decl
dec
mov
pop
xchg
jns
in
push
retw
cwtl
adc
ret
hlt
in
loope
aam
stc
mov
mov
fimull
add
adc
push
sar
sbb
inc
xchg
divl
cmp
add
sub
dec
je
jecxz
popf
addl
lahf
loopne
mov
sahf
sub
inc
or
inc
enter
std
test
pop
ret
clc
rcl
mov
arpl
dec
mov
push
pop
xor
dec
lahf
ds
dec
enter
xchg
inc
int3
jb
xchg
xor
dec
dec
jl
ret
mov
stc
xchg
or
xor
push
push
mov
push
movsl
xor
mov
add
dec
cmp
xchg
or
dec
addr16
or
cli
mov
rcr
subb
pop
cmp
jbe
or
in
mov
mov
rcl
out
rdmsr
push
das
shl
lcall
sbb
push
jmp
cli
jb
mov
fnstsw
das
aas
add
sub
ja
or
adc
inc
adc
mov
mov
add
xchg
movsl
inc
jle
pop
adc
jb
mov
sbb
int
in
imul
inc
xor
popl
pop
mov
ret
sub
sbb
cmpsl
fisubrs
popa
adcb
out
xorb
fs
test
sbb
popf
jne
mov
insb
call
fs
or
and
into
ljmp
push
sub
xlat
rcll
jg
xchg
popa
pop
adc
mov
push
out
mov
push
fimuls
cmp
int
int
je
add
sti
dec
mov
inc
jmp
add
and
pop
rcrl
mov
out
jns
mov
adc
jo
arpl
adc
stc
clc
ds
ss
dec
mov
cmp
mov
clc
push
arpl
pusha
push
lods
mov
in
add
xorb
dec
add
in
jns
out
adc
loop
rclb
dec
sub
sahf
shr
jecxz
push
lods
xchg
adc
sbb
jg
xor
mov
mov
sub
repz
arpl
lods
into
in
daa
inc
outsb
jmp
sahf
hlt
xlat
or
pop
pop
je
js
push
inc
jge
jl
xlat
lods
popf
sarb
mov
inc
adc
mov
xor
xor
cmp
and
xor
xchg
adc
pop
jbe
push
or
jecxz
mov
rcrl
xor
xor
cmc
jl
xchg
add
aas
cmpb
lods
dec
push
adc
dec
loop
ds
arpl
popa
lea
pop
cld
jae
insl
sets
into
ud0
fcomip
sbb
push
cltd
icebp
adc
inc
sub
cmp
or
pop
sahf
adc
pop
mov
shl
out
and
mov
addl
mov
dec
pusha
test
mov
mov
rol
sub
clc
pop
sub
icebp
add
aad
push
fbld
dec
enter
pop
ss
pusha
test
dec
mov
rcrb
je
inc
cmp
sbbb
sbb
push
sti
mov
sti
mov
std
add
cli
ds
fistl
sub
dec
sub
in
out
mov
fistpl
push
sbb
outsb
xor
jb
cmp
in
push
loopne
int
cmc
pop
popa
ja
lcall
imul
and
jnp
push
stos
dec
xchg
mov
aaa
jmp
sub
or
sahf
jnp
imul
inc
cmp
test
lret
sbb
cmp
xchg
jl
jmp
sahf
lret
cmpl
lcall
dec
icebp
test
hlt
add
dec
test
pop
cmpsl
sub
popf
jae
push
pop
xor
ja
in
push
js
call
mov
scas
ja
test
sub
stos
sbb
add
jne
repz
scas
stc
popf
mov
pushf
xchg
dec
in
mov
xchg
jle
mov
sbb
je
mov
in
std
pop
xchg
outsl
cmp
fdivrl
dec
inc
pop
outsb
out
xchg
mov
es
into
mov
mov
loopne
lcall
xchg
or
testl
call
les
in
shlb
xchg
mov
cmpsl
push
aad
mov
mov
mov
pushf
fs
popa
and
int3
and
fs
xor
add
cld
aas
jne
sbb
icebp
or
jne
mov
movsl
jl
cwtl
icebp
inc
shrb
mov
mov
scas
add
nop
mov
inc
int3
sbb
outsb
out
scas
cmp
iret
mov
push
add
int
out
and
lahf
mov
jno
mov
adc
add
loop
js
daa
mov
xor
xchg
lock
xchg
sub
shlb
stos
inc
imul
lds
rorb
xchg
cmp
mov
mov
pop
movsb
pop
out
sahf
fsubrl
push
idivb
lods
jecxz
sbb
icebp
gs
jge
lret
sbb
adc
movsb
dec
dec
mov
sbb
inc
mov
or
sub
aad
push
adc
fidivs
mov
xchg
repnz
pop
jmp
shlb
adc
dec
and
pusha
rorl
dec
xchg
fldt
scas
sbb
xchg
fbld
mov
out
adc
aas
pop
cmp
dec
adc
cmpsb
xor
jle
cld
push
aad
cmp
sbb
cltd
inc
and
outsl
movsb
jbe
cmpsb
add
and
push
adc
inc
mov
fnstcw
cmp
jnp
ljmp
mov
xchg
xor
add
mov
inc
and
cvtdq2ps
out
jae
push
scas
xlat
dec
and
add
ret
jb
ret
xlat
mov
xchg
je
pop
cmp
call
xor
xchg
lahf
cmp
jb
ret
movsl
dec
call
or
adc
fimuls
jno
sbb
adc
mov
push
subl
das
cwtl
cmp
mov
mov
and
pop
inc
pop
adc
push
pop
cmp
cli
mov
popa
scas
jbe
adc
dec
pop
or
pop
fistl
push
cmc
inc
mov
rclb
push
dec
test
mov
cltd
lcall
rcrl
dec
cwtl
mov
cmpsb
out
jb
and
leave
cltd
call
and
cli
in
fs
popa
data16
sub
test
ret
into
lock
jg
pop
dec
jle
ficomps
dec
jg
cmp
or
int3
lcall
addr16
xor
dec
cmpsb
mov
mov
gs
push
mov
or
in
jge
aad
cmp
jmp
pop
stos
pushf
repnz
pusha
push
fstl
notb
ret
dec
add
mov
out
mov
sbb
shlb
aad
dec
mov
rep
adc
ror
bound
dec
fs
pop
pop
push
and
mov
xchg
pop
fisubrl
call
adc
enter
sbb
jle
sbb
lods
in
jg
test
loop
leave
or
hlt
jae
pop
inc
je
into
inc
cmp
mov
roll
imul
int3
aaa
andl
sbb
loopne
push
clc
xor
imul
movsb
outsb
dec
ss
sti
fs
out
in
lret
jle
rorl
pop
cs
lods
pop
mul
or
fwait
pop
add
stos
adc
adc
cmp
xchg
sbb
scas
rclb
dec
enter
mov
cmpsb
dec
xor
es
adc
push
mov
dec
fs
jmp
pushf
rcll
inc
mov
jnp
das
mov
rorb
lods
mov
adc
xlat
test
mov
mov
cmpsb
pop
mov
sahf
xchg
loopne
xor
iret
repnz
xchg
loop
fsts
pusha
jb
subl
in
shll
scas
repnz
pop
push
add
movsl
sbb
mov
daa
jne
pop
mov
rol
das
adc
pop
add
pop
adc
stc
xchg
ret
cltd
stos
gs
inc
push
cmp
cmp
add
add
negl
xor
cmpsl
sub
cld
and
jae
mov
jae
mov
mov
sbb
xor
js
addb
or
inc
mov
dec
mov
les
sub
push
cmp
mul
fnstsw
pusha
out
mov
filds
fxch
shlb
cmp
mov
es
scas
mov
xchg
and
dec
pop
aas
mov
pop
test
adc
outsl
imul
cmp
imul
jbe
je
cwtl
xchg
mov
and
loopne
xor
fwait
jle
cltd
int
leave
js
jmp
dec
adc
jecxz
jecxz
testb
test
and
fdivs
jbe
mov
imul
dec
sti
or
mov
ffreep
test
mov
mov
sub
out
xor
mov
pop
outsl
xchg
inc
add
rcrl
mov
sti
cwtl
mov
hlt
push
addr16
rcrb
out
lds
lahf
cmp
std
int
push
push
push
xlat
mov
ret
pusha
sub
in
testl
test
and
mov
adc
fsts
pushf
cmp
adc
push
mov
or
sub
dec
sbb
mov
cmp
push
cmp
insl
fmul
mov
mov
add
sbb
sbb
jns
mov
sti
fildll
ja
stc
mov
add
shll
imul
xchg
popa
xchg
into
pusha
or
or
sub
ss
pop
add
inc
cs
pop
pop
xchg
or
cwtl
pop
jae
ret
adc
pop
out
and
stc
adc
xchg
pop
inc
push
push
mov
push
jno
push
je
mov
sbb
or
add
cmp
daa
in
adc
push
xor
jl
out
hlt
xor
or
sti
add
sbb
ja
popa
lea
aam
movsl
mov
incl
negb
sub
subb
mov
fdivrs
push
cmp
xchg
repz
and
stos
sbb
add
pop
fimuls
es
rorl
xchg
adc
jg
and
cmp
mov
cwtl
jp
mov
lahf
fcoms
das
cmp
or
add
movsl
icebp
inc
insb
sub
call
xchg
les
ja
adc
sub
add
jno
sahf
scas
and
incl
cmp
cmp
mov
push
scas
xchg
or
aaa
cs
insl
jae
cmp
xchg
add
pop
imul
popf
mov
scas
jecxz
mov
pop
movnti
outsb
xor
xor
xor
add
lret
xor
dec
ficomps
inc
arpl
imul
dec
inc
popa
test
ficomps
sbb
jp
aas
mov
pop
mov
int
push
ret
cmp
adc
mov
adc
shld
xchg
arpl
es
xor
pushf
clc
lret
stc
sub
sbb
or
outsl
cmp
pusha
push
sbb
pop
icebp
xor
dec
sub
fimuls
in
ret
rcll
jne
mov
nop
add
imul
lret
lock
test
popf
lea
stos
repz
mov
fs
lods
xor
push
push
mov
jg
lcall
adc
jae
in
pop
pop
xchg
fucomip
je
scas
inc
xchg
add
dec
xor
mov
sbbb
adc
and
arpl
cmpsb
sbb
leave
jno
mov
shll
rol
push
xor
dec
in
sar
add
dec
push
cmp
jno
push
cwtl
dec
sarl
mov
sub
adc
jl
leave
push
jae
or
stc
fcoml
xchg
add
loop
sub
jp
xchg
repnz
sarb
mov
cwtl
jmp
into
push
sub
les
in
fistps
jp
lea
jb
ja
inc
sub
nop
loop
add
hlt
mov
loop
repnz
xchg
jmp
sub
cmp
inc
inc
fldcw
subb
xchg
popf
and
sarl
adc
push
sub
push
lcall
mov
mov
outsb
inc
push
adc
fists
gs
and
fcom
shrl
mov
dec
cwtl
das
inc
dec
pop
fistpl
add
sbb
mov
inc
pusha
mov
shr
adc
scas
psubusw
push
rcrl
mov
cld
jbe
push
sti
push
push
inc
jmp
cli
fstpl
mov
push
adc
ljmp
adc
test
jle
testl
push
inc
repz
cmp
sbb
dec
repz
ret
mov
mulb
jns
fndisi(8087
popa
lret
std
ret
pusha
jno
rcrl
test
ret
popf
dec
rcrb
fs
cli
jmp
pop
mov
pop
add
lahf
ficoms
rorb
xchg
jne
mov
lock
stc
mov
movsl
adc
adc
add
repnz
call
pop
or
nop
pop
push
mov
mov
mov
mov
inc
sub
mov
lret
sar
je
push
inc
sub
loope
pop
cmpsl
stos
sub
mov
ja
out
push
mov
inc
lcall
pop
push
cmp
shlb
fidivrs
xor
rcl
sbb
insb
inc
mov
pop
repz
dec
and
sub
xor
mov
fs
inc
or
pop
xor
lret
dec
loope
cmpsl
pop
pop
sbb
aas
xor
xchg
xor
mov
repnz
jl
pop
xchg
ds
daa
dec
and
aad
leave
loope
cld
test
mov
or
pop
shlb
ds
lahf
add
jge
ret
cmp
cmp
int
cli
cmp
popa
xchg
inc
jp
arpl
enter
mov
cmp
push
outsl
testl
sbb
sub
idivl
or
xorb
cmp
out
mov
sets
sahf
adc
inc
xchg
jns
sti
imul
in
dec
outsb
imul
leave
pop
and
fstpt
popf
sbb
andl
scas
sub
sub
cmpsl
and
or
test
adc
test
and
outsb
nop
add
cmpl
mov
sahf
cmpl
mov
add
arpl
adc
lods
inc
subl
out
stc
testb
inc
dec
outsl
test
loopne
gs
outsb
stos
mov
sbb
scas
add
push
sbb
in
int3
pop
dec
xor
add
mov
lock
sbb
cwtl
xchg
and
gs
pop
addr16
xor
inc
fsubrl
and
push
sub
ror
std
mov
dec
and
dec
or
cmp
orb
pusha
ljmp
pushf
or
xchg
jmp
dec
dec
sbb
mov
xchg
dec
cmpl
push
daa
call
nop
cmp
fildl
lahf
add
add
dec
stos
fists
xorl
ds
jle
addl
call
pop
loop
js
xchg
add
out
xchg
lcallw
and
sbbb
xor
jmp
inc
lret
leave
or
mov
mov
loopne
jle
or
mov
out
push
push
test
aaa
add
shl
push
xor
int
xchg
jmp
loope
lret
mov
loope
mov
mov
lcall
pop
cmp
xchg
shlb
ret
mov
adc
loope
xor
das
jne
andl
inc
adc
lahf
scas
inc
adc
scas
inc
and
pop
mov
sub
mov
inc
mov
cmp
popa
xchg
mov
xlat
bound
mov
jg
mov
push
pop
lock
mov
cltd
sbbb
inc
lret
dec
ds
jmp
test
xor
xchg
push
daa
inc
mov
push
clc
mov
adc
sbb
fnstenv
xchg
mov
mov
jo
dec
pop
test
xor
stos
inc
push
daa
xor
sub
into
pop
add
mov
into
push
cmp
call
push
int3
or
jno
adc
stc
lock
sbb
mov
or
test
add
pop
push
push
fildl
push
adc
ja
jle
dec
xchg
xlat
xchg
xchg
popa
sbbb
pop
add
clc
mov
or
sbb
data16
out
js
adc
out
add
out
pop
fs
out
fs
adc
cld
push
test
jne
or
sbb
mov
std
mov
push
sub
cmpsl
sahf
movb
roll
or
dec
das
push
adc
mov
add
adc
aam
loopne
movsl
pcmpeqb
mov
mov
or
fmull
lret
std
add
jne
fisubrs
data16
push
jle
nop
jecxz
sbb
or
mov
cwtl
mov
icebp
cmpsl
pop
lahf
sbb
movsb
jnp
sub
lahf
aad
lods
arpl
iret
pop
xor
enter
pop
imul
out
into
jne
ficomps
jle
add
dec
das
adc
jmp
add
xlat
jno
test
insb
subb
sete
jg
adc
incb
sbb
dec
xor
stos
sbb
jns
shrl
mov
add
mov
fdivl
and
testb
push
mov
lcall
sub
enter
loope
jl
jnp
mov
fdivl
scas
movsl
repnz
adc
cmc
sbb
cmp
pop
mov
cmp
sub
pop
pop
test
xchg
cs
add
jmp
xor
mov
xor
xchg
jns
inc
mov
push
ficomps
rcrl
dec
mov
test
sti
ss
push
out
pop
fs
inc
sbb
xor
or
dec
pop
test
mov
pop
mov
arpl
push
iret
dec
dec
sahf
int3
jle
lds
out
lcall
jns
or
decl
in
jp,pn
ficoms
pop
add
jle
mov
add
cmpsb
insb
jb
mov
xor
daa
in
fcoml
pop
push
ret
cld
dec
jnp
loopne
adc
sbb
jecxz
repz
and
sub
dec
sub
es
leave
fldenv
dec
jb
lahf
inc
ror
sbbb
jmp
fldenv
lahf
mov
out
xchg
adc
or
dec
int3
and
push
inc
jns
sub
shlb
outsb
push
push
mov
ja
aam
sub
imulb
pop
pop
rcrb
ljmp
lods
adc
loop
out
xor
out
jmp
mov
js
test
add
adcl
js
mov
lret
push
lcall
in
dec
loop
or
and
add
mov
pop
and
rorl
push
push
mov
jmp
mov
bound
icebp
and
mov
jecxz
pop
daa
jle
pop
add
fisubrl
movsw
dec
push
cmpsb
xchg
push
xchg
pusha
cltd
cmpsl
rcl
sti
dec
mov
sbb
mov
cmp
cs
cltd
rol
xchg
xchg
mov
jno
pop
push
dec
pop
rol
stos
incl
imul
das
cs
xor
mov
jp
sub
cmp
push
adc
inc
les
mov
pop
jge
mov
ja
mov
sub
test
fs
fdivs
push
cmc
bound
imul
es
out
sar
mov
ss
push
or
arpl
push
mov
cmp
xchg
sub
dec
test
call
cmp
in
out
sarl
jb
lods
push
mov
outsb
sbb
int3
mov
add
fdivr
inc
sub
lret
out
adc
mov
xchg
shr
mov
mov
in
cmpsb
daa
cmpsb
cs
stos
leave
insb
rclb
gs
repnz
dec
repz
xor
flds
or
xor
pop
es
push
inc
dec
cmp
sbb
jo
mov
insb
push
dec
adc
pusha
dec
dec
sbb
jg
xchg
sbb
dec
mov
loope
jbe
push
dec
mov
sar
mov
jge
cmpsl
ret
or
add
sahf
stc
call
fdiv
subl
shr
fwait
loopne
pop
in
mov
sarl
jae
inc
cli
inc
sarl
jns
adc
mov
xor
xlat
aam
cmpl
jmp
mov
rcl
pop
popa
xor
insl
jl
movl
add
inc
mov
popa
mov
mov
stos
stos
fsubrl
xlat
sbb
fst
scas
xchg
sub
pop
push
fstl
mov
push
cmc
not
frstpm(287
stos
push
sub
int3
mov
add
jbe
mov
jmp
pusha
xchg
sub
pop
ret
xor
arpl
jecxz
xor
popf
imul
xchg
inc
push
stc
mov
aas
test
jo
mov
lock
push
in
bound
data16
mov
jae
xchg
mov
jb
xchg
jecxz
fistl
sbb
dec
mov
movsb
ret
jp
fucom
cmp
pop
imul
push
cli
hlt
and
pop
sub
in
icebp
or
sahf
les
lods
xlat
mov
test
cli
sbb
out
or
nop
test
shlb
inc
outsb
jge
rorl
mov
add
mov
xchg
inc
pop
pushf
shrl
test
or
sub
cltd
pop
xchg
pop
mov
mov
jmp
aad
stos
orl
aas
push
rol
jb
mov
std
jmp
cltd
mov
sahf
out
out
mov
jnp
jnp
ficoms
std
adc
mov
not
pop
and
jne
mov
stos
or
ljmp
and
movsl
lcall
sbb
idivl
out
cmc
pop
mov
enter
sub
popf
pusha
in
or
pusha
cmpsb
shll
clc
or
shrb
loopne
pop
rolb
loopne
or
scas
jo
in
push
lods
push
nop
ss
loope
mov
mov
aam
and
xchg
and
mov
movsl
int
jae
or
xorl
add
push
rcrb
inc
pop
les
xchg
xchg
mov
cmpb
mov
jecxz
in
hlt
jo
and
inc
mov
cmc
les
sub
inc
xor
std
call
inc
push
inc
adc
jne
shll
inc
pushf
loop
aaa
bound
call
arpl
mov
push
mov
push
mov
xchg
xor
ret
sti
gs
adc
cwtl
xchg
dec
shl
mov
and
or
and
mov
or
or
sbbl
das
push
cmp
movsb
imul
test
add
out
dec
ljmp
sahf
clc
and
sbb
lret
mov
pop
repnz
mov
pop
cmp
mov
pop
decb
xor
jecxz
pop
dec
ret
pop
inc
aaa
insl
testb
notb
popa
arpl
pop
outsl
call
cli
push
push
cmp
add
test
inc
and
lods
cltd
sub
jbe
lret
jmp
aaa
in
xor
iret
cmp
fsts
and
addr16
xor
loop
jg
and
cs
cmpsb
adc
lahf
xlat
mov
cmp
shrb
adc
xor
lcall
sub
sub
xchg
dec
lcall
push
cmc
fwait
jge
or
aad
jne
push
add
mov
or
fisttpl
inc
int
addl
lahf
dec
inc
repnz
loop
dec
jnp
fwait
inc
addr16
aas
mov
xor
cmp
jge
mov
sub
sbb
in
leave
in
out
subl
scas
outsl
pusha
adc
mov
inc
int
pop
xchg
adc
sub
aam
mov
adc
jle
jno
mov
xchg
pop
aad
dec
cmpxchg
ficoml
mov
movsl
out
xor
test
xor
push
pushf
clc
adc
rclb
int
stos
loop
mov
adc
test
fiaddl
jnp
cmp
pop
dec
cld
movaps
loop
fwait
xor
pop
sub
insl
adc
sbb
xchg
xlat
in
xor
movsb
dec
add
scas
jg
pop
jecxz
out
or
andl
push
cmpsb
js
adc
inc
stc
nop
shrl
pop
repz
lods
in
pop
fstpl
loope
push
jg
shll
loope
in
pop
loope
aam
mov
inc
xchg
mov
and
mov
rcrb
mov
cmp
jecxz
and
sub
push
sub
mov
cmp
or
call
jge
push
jb
cmp
lea
or
pusha
imul
scas
sub
out
hlt
mov
icebp
sti
add
xor
jno
iret
int
xchg
pushl
fdivrl
insl
mov
jmp
or
icebp
cs
cmpsb
cmp
pushf
dec
scas
lret
mov
icebp
add
xor
xor
jp
dec
movsb
push
cmpsb
ljmp
mov
fidivs
cmp
addr16
cmp
and
adc
cmp
dec
push
xor
jnp
xlat
sub
adc
lock
cltd
fidivs
insb
mov
inc
cmp
push
ljmp
mov
pop
jb
in
jno
popa
sti
repnz
roll
fistpl
test
xor
jb
pop
shlb
or
mov
and
imul
pop
or
ljmp
hlt
push
adcl
and
div
test
ds
push
in
jnp
push
pop
add
lcall
mov
jmp
adc
in
and
jae
jmp
ja
or
insl
xor
jo
ljmp
shrb
or
lret
or
sahf
out
mov
jmp
add
inc
fimuls
testl
das
mov
lcall
and
push
inc
fimuls
dec
aas
adc
cli
push
int
push
dec
jmp
sbb
mov
arpl
mov
mov
or
lds
pop
cmp
jae
outsb
insl
sahf
pop
popa
dec
cmp
es
lahf
sbb
shrb
sub
mov
xchg
mov
ja
ds
pop
pop
pushf
pop
aam
in
inc
popa
or
cmp
loop
push
jle
cmp
stos
mov
cmpsb
cmc
cmp
jmp
jecxz
std
xchg
ret
push
inc
adc
decl
fists
in
pop
cltd
cltd
pop
bound
cld
cmp
add
sahf
inc
jns
sti
or
adc
out
insb
jns
jae
cmp
adc
sbb
shll
movsb
pop
lcall
sub
inc
ljmp
xchg
or
dec
pop
or
inc
push
inc
nop
pop
mov
mov
dec
stos
aas
shlb
popa
xchg
add
sbbb
push
mov
in
xchg
mov
scas
cmp
xor
cmp
das
mov
push
lret
shll
out
cmp
jecxz
jae
mov
fsts
sbb
rorl
cmp
divl
popf
je
addl
stos
push
ret
push
pop
adc
and
and
pop
sbb
outsl
loope
sbb
gs
xchg
aam
dec
dec
push
outsb
ror
lock
ret
pop
lds
xor
lcall
mov
mov
jnp
repz
adc
popl
xor
testb
sub
leave
dec
inc
testb
outsb
fstpl
stos
dec
jns
mov
xor
mov
or
cmp
adc
sar
out
enter
arpl
fwait
movsb
jl
and
sbb
mov
inc
xor
mov
outsb
add
lock
aam
mov
pop
and
cli
nop
test
jmp
xlat
aaa
push
stos
xchg
or
icebp
aas
in
add
mov
sbb
push
or
ss
shl
lret
mov
add
ret
inc
je
sbb
push
daa
ljmp
js
push
iret
jg
adc
push
ret
inc
mov
mov
ss
lods
xor
sahf
fwait
inc
out
mov
jo
mov
arpl
repz
pop
sub
sbb
xor
das
in
adc
cwtl
jmp
arpl
out
xor
imul
repnz
test
push
add
sbb
xchg
pop
fwait
mov
push
notl
icebp
cmp
pusha
in
add
or
imul
es
inc
dec
insb
and
and
sbb
mov
loopne
ret
or
aad
mov
dec
inc
add
movsl
pop
inc
daa
enter
lret
out
jbe
test
js
in
pop
xchg
shll
pop
xlat
dec
fisubrs
fstps
inc
cs
push
idivl
fs
inc
mov
push
pop
dec
int
mov
xchg
fnstsw
sub
repz
cmp
jmp
mov
aam
lds
mov
dec
sarl
sahf
xchg
mov
cwtl
movsl
pusha
adcb
scas
popa
mov
ret
jg
int3
xor
les
addr16
mov
or
adc
ja
data16
es
aam
jle
xor
pushl
outsb
scas
lds
aam
add
inc
sub
mov
or
addr16
sbb
mov
sarb
cmp
cmp
cmp
mov
sub
mov
es
xchg
dec
adc
add
arpl
hlt
adc
aas
into
loop
ror
xchg
rcll
into
inc
lods
push
sbb
cmp
int
push
push
add
std
jl
mov
sub
push
mov
cltd
inc
lock
push
push
jmp
fldcw
add
lods
ror
jge
cmp
mov
add
push
rclb
or
movsb
lods
xor
ss
inc
mov
and
adc
test
jb
icebp
mov
pop
inc
fucomi
push
jb
jnp
lahf
addr16
xor
aad
jp
dec
cmp
sub
sub
jo
fildl
mov
push
or
jb
lock
daa
mov
jg
add
add
pop
jecxz
mov
pop
fnsave
int
cltd
testb
and
inc
xchg
int
cmpsb
test
xor
pop
xchg
sbb
stc
inc
dec
push
sub
push
nop
pusha
mov
imul
lea
lods
fs
mov
cwtl
jge
jae
push
loopne
or
jno
mov
mov
scas
movsl
cmc
cmp
sub
dec
dec
lds
fucomp
and
pop
scas
pop
jp
scas
lods
popa
jo
cmp
mov
mov
sub
and
rorl
test
cmp
mov
lds
leave
cmp
mov
sarb
jbe
add
stc
sub
pop
push
xor
sahf
dec
inc
pop
test
xor
nop
daa
sahf
stc
cmp
jbe
or
ja
xchg
add
lds
test
pop
pop
xor
sti
in
pop
jns
jmp
jbe
mov
std
xchg
in
into
xor
jbe
adc
std
lea
into
sbb
jl
loope
xor
adc
sbb
sarl
cmc
sbb
xor
cmp
enter
xchg
adc
push
ret
and
xlat
scas
push
mov
mov
xchg
je
aad
pop
cltd
dec
mov
lods
repnz
sbb
cmp
stos
cmp
and
in
dec
mov
lods
aam
mov
movsl
notb
xchg
xchg
cld
insb
xor
xor
xor
and
shld
aad
in
inc
pusha
daa
repnz
push
inc
lods
into
test
orb
mov
pop
cld
push
add
pop
cmp
stos
push
jo
fcoml
ss
xchg
test
in
in
pop
shlb
pop
cmp
jbe
rorl
cmp
insl
adc
and
jo
test
nop
fldl
xchg
outsl
or
lret
jno
fs
pop
mov
cmp
xchg
gs
jecxz
lods
inc
dec
dec
les
pop
sub
gs
mov
xchg
incb
cmc
in
dec
ds
fdivl
pop
cld
cmp
push
jge
stc
cmpsl
xchg
and
pop
mov
scas
lea
ds
ret
jns
xchg
mov
xchg
and
pop
dec
xchg
fdivs
adc
inc
or
js
pop
test
sbb
hlt
dec
ds
sub
rclb
adc
dec
lcall
cli
fldt
ja
sarl
pop
mov
call
loop
js
sub
jp
pop
scas
adc
dec
iret
hlt
movsb
mov
gs
mov
inc
jmp
imul
hlt
xor
lea
fidivs
mov
mov
jg
pop
stc
in
inc
int3
push
adc
push
inc
fcomps
popa
call
lods
jns
push
rol
jmp
mov
xabort
xchg
je
aam
jo
jb
pop
in
lahf
pop
rcrb
daa
sbb
sahf
sbb
xchg
xchg
cmpb
clc
dec
in
adc
loop
dec
fldl
adc
loope
mov
into
mov
leave
daa
fwait
daa
loope
mov
jl
cmp
jl
push
cmpsl
push
mov
es
inc
mov
pop
jb
adc
pop
xor
push
lcall
jp
xor
jo
fs
ja
xchg
push
inc
cld
add
jnp
cmp
mov
nop
enter
dec
mov
mov
cmpsb
test
add
jno
shr
mov
int3
adc
add
pop
out
xlat
mov
nop
fcompl
mov
inc
cmpsb
sbb
push
lock
dec
mov
jp
hlt
xchg
xlat
outsb
xchg
lds
sub
in
cli
mov
sub
test
mov
xchg
xor
hlt
mov
ficoms
pop
pop
insb
sti
shlb
push
push
and
dec
xor
subl
fstp
cmp
lds
ds
mov
mov
cmp
jo
sbb
je
push
fstpt
rcrl
in
pusha
and
outsb
je
std
out
icebp
or
xchg
adc
mov
cwtl
int3
lahf
adcl
mov
scas
mov
test
inc
fdivrl
inc
or
lea
mov
and
add
pop
int
call
out
jle
adc
fisubrl
jb
pusha
adc
mov
fistpll
lods
stos
jp,pn
jo
xchg
shll
clc
ret
push
rorb
test
add
xor
xchg
xchg
clc
cmpsb
lret
mov
pop
fcmovnb
insl
sub
clc
cmp
push
cmpb
leave
inc
mov
jae,pt
mov
pop
fisubrl
pop
arpl
ds
in
repz
outsl
inc
xchg
push
les
and
cmp
out
test
arpl
dec
in
or
iret
in
pop
pop
xor
lcall
into
addl
inc
scas
cld
jo
pop
rcl
test
dec
inc
and
sub
xchg
testb
cmp
stos
or
xor
or
dec
mov
lods
scas
frstor
fdivr
mov
fnstcw
aas
int3
jb
add
and
fistpll
mov
push
push
adc
add
data16
xchg
ficompl
xor
jge
arpl
mov
insb
icebp
test
and
repz
xchg
push
fstpt
push
filds
push
mov
add
cmp
pop
stos
popa
lret
mov
sahf
sub
jbe
out
repz
hlt
into
stos
outsl
push
ficoml
add
sar
sbb
cmpsb
iret
arpl
xchg
rcrl
js
out
pop
flds
pop
int
in
cmp
push
enter
mov
or
testl
pusha
dec
adc
jl
cli
cmpsb
cs
sub
rclb
jecxz
sub
pop
insb
cmpsb
xor
add
cwtl
lret
imul
sub
add
int
mov
out
pop
jne
lock
xor
addb
jno
mov
mov
cmpsl
loopne
test
mov
add
out
subl
popf
add
fcmove
inc
addl
in
xchg
in
mov
push
loopne
sbb
jb
loop
mov
adc
dec
add
cmp
out
jg
cmp
fs
out
insb
mov
pop
pop
imul
aam
pop
xchg
add
and
pushf
mov
sahf
xchg
jmp
arpl
push
fstps
sti
ja
jge
and
pop
les
push
je
in
sbb
int
xchg
sub
sub
sub
and
in
xchg
adc
cltd
test
push
into
cs
ds
jae
movsb
xchg
xor
push
and
lock
dec
xor
and
movsl
fs
shll
sub
and
ds
and
inc
fsubl
dec
mov
rcr
xor
jbe
mov
add
inc
ret
idivb
test
jmp
insb
xor
mov
fidivrs
push
sub
mov
or
orb
stos
jmp
into
pop
jne
imulb
js
outsb
or
ret
xchg
dec
sbb
jb
add
inc
mov
lcall
and
xchg
lcall
orl
pop
and
add
sub
pop
into
and
adc
pop
xor
inc
int
xor
adc
push
loop
adc
push
cmc
mov
mov
xor
fwait
xor
xlat
mov
fstpl
jmp
pop
mov
or
stos
mov
mov
sub
pop
xor
mov
push
sahf
sub
xchg
ds
xchg
pop
mov
dec
and
adc
inc
fmuls
fimull
cmp
cltd
movsb
jno
mov
lret
and
call
cli
lds
sub
jno
sub
arpl
push
sbb
dec
pop
sets
test
dec
pop
cmc
loope
cli
sub
add
xor
lcall
push
push
mov
test
jbe
data16
test
push
in
test
loop
fs
sbb
mov
lods
cmpsl
dec
imul
ljmp
popf
dec
mov
cld
sbb
xor
mov
ret
push
sbb
dec
push
pop
popa
js
xchg
pusha
sahf
and
mov
fs
mov
shlb
call
movsb
xorl
mov
sbb
in
and
add
pusha
push
pop
or
test
mov
jnp
fs
inc
inc
popa
fwait
adc
inc
clc
leave
xlat
rolw
es
int3
mov
jbe
and
in
mov
add
xchg
sarb
scas
pusha
xchg
cmp
mov
add
jae
pop
mov
add
sbb
rcl
cmp
cmp
iret
js
scas
insl
xor
daa
adc
jnp
repnz
out
sbb
mov
sbb
dec
fsubp
in
es
sbb
fsubr
cmpl
inc
or
and
cmovl
adc
fcomps
and
mov
fs
inc
or
add
add
and
hlt
mov
lea
cmp
test
sbb
ret
pop
fimuls
cmp
je
adc
inc
adc
or
dec
adc
and
arpl
jecxz
jo
xchg
push
adc
push
xor
cmp
in
ret
ret
enter
sub
jb
add
add
sti
lock
dec
ss
xchg
stos
fbld
and
cmp
in
lds
in
test
mov
xor
fnstenv
jp
sub
cmp
pop
leave
inc
xor
ret
pop
inc
sti
sub
mov
and
adcl
pop
pop
inc
in
mov
jmp
cmp
pop
jb
ja
repz
and
mov
cmp
movsb
out
mov
inc
adc
jnp
or
mov
divb
lock
lret
sub
jae
adcl
mov
jae
orb
ljmp
pop
test
xor
in
sar
cltd
or
or
mov
insb
adc
inc
adc
push
mov
xor
mov
pop
mov
scas
fwait
nop
jmp
dec
add
cmp
adc
sbb
cmp
xor
xor
cmp
popf
pushl
cmp
test
cmpsb
das
icebp
out
lahf
push
mov
pusha
mov
push
imul
stos
mov
add
dec
das
insl
int3
xor
mov
mov
mov
imul
xlat
mov
jno
push
testl
inc
rcr
nop
int
mov
jp
clc
mov
cmpsl
lar
enter
fcomps
pop
xor
add
mov
lret
jg
cmp
adc
lds
push
push
cmp
inc
aam
push
movsl
ds
jb
out
dec
lret
xchg
pushf
xchg
adc
or
icebp
jnp
inc
jns
int
insb
mov
mov
dec
inc
fidivrs
es
jo
jle
sahf
fmull
mov
xchg
mov
push
lods
jnp
js
outsl
or
xchg
mov
loope
test
fistpll
imul
push
movsl
aas
out
inc
and
mov
push
ss
pop
sahf
push
pop
popa
inc
shr
and
mov
dec
inc
xlat
pop
leave
in
rorw
loop
outsl
inc
test
mov
mov
pop
xchg
ljmp
jbe
int
bound
mov
loope
sbb
dec
lea
push
xchg
ja
pop
out
jl
lods
push
stos
in
rolb
