add
add
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
repz
push
push
or
fistpl
dec
lahf
mov
add
pop
add
push
add
push
add
add
add
add
add
xchg
jge
xchg
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
sahf
add
sbb
lds
addl
push
add
add
add
add
add
add
add
add
sbb
sahf
add
add
add
add
add
sahf
add
push
add
add
add
sahf
add
xchg
mov
push
add
add
add
add
add
add
add
sahf
add
add
add
add
or
add
add
add
add
add
add
add
daa
add
add
add
add
add
push
add
sahf
add
push
add
sahf
add
jbe
mov
sbb
sahf
add
add
cltd
add
sahf
add
add
add
add
add
add
add
mov
add
add
sbb
xchg
add
add
add
add
add
sub
or
aas
add
aaa
add
or
push
add
sub
xchg
add
add
add
add
add
js
add
add
add
add
sbb
pop
add
add
add
add
add
or
aas
add
push
xor
add
add
add
sahf
add
add
jne
sbb
add
add
add
jge
sahf
add
push
add
cmpsb
add
xchg
add
add
add
jno
mov
sahf
add
add
add
add
xor
push
push
add
add
cmp
jl
or
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
mov
adc
fwait
add
add
add
sahf
add
sbb
sbb
ret
add
add
add
add
add
add
add
add
add
add
add
aad
sbb
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
sub
add
add
pushf
add
int
aas
add
add
sbb
xor
or
add
add
add
sbb
out
sbb
push
add
bound
add
sahf
add
add
add
add
push
add
add
add
add
add
add
add
add
sahf
add
pop
add
push
add
sahf
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
sahf
add
add
add
push
add
sahf
add
or
bound
add
add
add
xchg
xor
push
add
add
add
mov
add
add
add
bound
add
add
add
add
sbb
add
add
add
add
testb
add
addl
mov
add
pop
rcl
out
push
es
fistl
inc
shll
das
sub
rclb
mov
and
cmp
mov
stc
in
into
pmulhw
jl
ret
cmc
pop
jmp
iret
dec
test
popa
and
xor
sub
pop
push
jp
pop
lds
inc
inc
pop
jo
sarb
push
rcrl
xor
push
pop
jl
push
sbb
popa
cmp
inc
arpl
movsb
aas
jmp
jg
inc
dec
clc
cmc
xchg
mov
out
divl
testb
or
push
mov
jmp
and
inc
dec
push
movsl
sbb
leave
mov
imul
out
cwtl
movsb
xor
cmc
jmp
loopne
sub
xor
mov
and
lret
lods
xor
xlat
fistpll
mov
lret
mov
push
in
sar
mov
mov
daa
std
pop
leave
sub
push
sbb
popf
add
outsl
add
sbb
shlb
mov
mov
mov
mov
icebp
xor
add
loope
cmp
jl
enter
xchg
negl
lret
mov
rol
mov
mov
pop
or
or
pushf
mov
in
addr16
jmp
pop
xchg
mov
into
sbb
adc
sbb
les
mov
pusha
pop
and
lahf
lcall
test
sbb
insl
adc
add
fimuls
movsl
les
ss
addr16
jo
movsl
xor
lods
adc
mov
mov
mov
sarl
cmpsl
sbb
loopne
or
push
lcall
ret
pop
add
cwtl
cmp
pushf
lds
xor
jmp
fcoms
jb
idiv
lahf
mov
lea
sbb
pop
bound
add
das
and
push
ja
pop
cmp
inc
pop
mov
stc
xchg
scas
movsl
inc
jo
fnstenv
les
dec
pop
ds
cmp
fwait
cmova
xchg
or
xchg
fadds
lock
push
xor
pop
add
lds
shll
jno
push
in
inc
out
dec
mov
icebp
cmp
or
fbstp
pop
out
jb
shll
lret
fidivl
loope
rorl
sbb
lahf
bound
out
mov
push
stos
aad
stos
push
jns
mov
push
cmc
test
in
mov
out
into
lret
mov
fstl
xchg
push
add
mov
mov
and
jae
sarb
add
out
pushf
lods
xor
adcb
popa
push
lods
lret
stos
out
and
les
nop
pop
nop
out
aaa
jno
mov
cli
aam
orb
adc
repz
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
or
cmp
dec
adcl
cmp
sub
dec
fcmovbe
ljmp
cwtl
inc
test
mov
push
jp
mov
sbb
sub
pop
ljmp
cmpl
lock
out
or
dec
mov
sbb
call
dec
add
mov
push
pop
int
test
cmp
xchg
incb
out
out
stos
mov
fisubrl
out
testl
das
js
xor
cwtl
add
repz
fwait
sub
addl
fisttpl
fmull
lcall
in
lahf
loope
push
jb
iret
push
jmp
enter
pushf
jp
mov
lcall
je
fucomp
xchg
cli
push
or
int3
mov
shrb
stos
hlt
sbb
stos
sar
orl
ja
in
sub
xor
jmp
sahf
jb
xlat
dec
movl
stc
jle
lahf
dec
mov
mov
mov
push
fsub
dec
or
add
xor
inc
fdivs
jns
mov
pop
int
frstor
test
mov
sbb
sub
pop
mov
pop
lahf
adc
loope
icebp
pop
fistpl
and
aas
xchg
lahf
pushf
das
lret
enter
ret
cmp
or
mov
dec
int3
imul
push
jp
mov
lcall
dec
ficompl
push
sbb
dec
enter
call
lcall
dec
ficompl
push
mov
mov
jecxz
jmp
test
push
pop
push
jecxz
adc
lret
ljmp
jmp
popa
xchg
add
mov
andb
int3
push
mov
mov
fadds
pop
xchg
add
iret
in
loop
cwtl
inc
pop
out
cwtl
pop
popf
shlb
mov
das
xor
and
push
jnp
xor
xchg
push
sbb
dec
push
or
cmp
fnstsw
sbbl
inc
add
out
pushl
push
mov
mov
or
jl
xchg
pushf
push
ficompl
xor
xchg
xchg
ret
pop
cmpsb
aas
lcall
stos
xchg
mov
add
push
shll
into
cs
mov
sbb
loope
ds
push
loop
ret
mov
lods
sti
cmp
in
push
push
sub
outsb
lret
sbb
xor
enter
pop
mov
mov
std
jge
rcrl
leave
mov
xor
iret
arpl
stc
mov
mov
imul
iret
pop
aas
jo
pop
int
insl
cwtl
jns
adcl
inc
fidivrs
xchg
push
inc
sar
adc
arpl
sbb
movsl
push
mov
add
popa
jp
push
das
sbb
pop
pop
fimuls
out
xor
into
jecxz
xchg
pop
sbb
add
imul
aas
sub
arpl
cmpsl
lods
out
lods
and
aad
out
mov
xlat
addb
fistps
fdivs
ffree
adc
js
dec
imul
imul
in
mov
dec
add
movsb
inc
or
mov
loop
sbb
cmp
cmp
cltd
mov
lahf
jmp
enter
pop
into
jmp
push
dec
pop
and
inc
and
jg
add
aaa
add
std
mov
cmpsb
mov
outsb
xor
adc
cmp
int3
adc
add
jmp
mov
adc
mov
sbb
cmp
testl
sahf
xor
inc
cmp
xor
mov
pop
ss
mov
mov
in
out
lods
je
sub
mov
and
mov
jge
inc
add
inc
sahf
dec
add
pop
xchg
pop
mov
lods
je
pop
push
push
pop
mov
decl
test
sub
and
addr16
or
repz
clc
dec
pop
mov
icebp
pop
xor
fstpl
pop
jnp
mov
jae
sti
lea
inc
dec
negl
push
add
imul
imul
and
push
popl
fld
fs
xor
ds
imul
push
stos
sub
push
les
mov
js
jle
fnstsw
jp
mov
dec
adc
push
or
and
out
push
mov
fiaddl
mov
fstps
pop
movsl
mov
jb
in
sbb
push
imul
aad
push
cmpsl
inc
insb
out
pop
push
in
fistpll
dec
bswap
or
jmp
cmp
mov
subl
xor
pop
out
dec
xchg
scas
dec
jg
mov
fwait
add
push
pop
sub
cmpsb
push
sub
mov
mov
cmp
cmc
sahf
xor
out
cmpsb
mov
inc
mov
mov
loopne
lods
push
inc
jecxz
pop
or
repz
cmp
aam
xchg
or
xchg
and
scas
pop
imul
xlat
adc
loopne
enter
push
sbb
insb
lods
pushl
popa
dec
dec
mov
aam
xchg
fs
mov
jns
mov
lcall
xchg
movsl
sub
inc
ret
cmp
xchg
fimull
incl
xchg
or
add
xchg
cld
add
push
xchg
pop
jl
pop
xor
or
in
mov
pusha
dec
ss
xchg
adc
ljmp
xor
pop
pop
hlt
out
daa
fdivp
inc
or
clc
addl
cmp
cmp
aad
outsl
mov
jp
stos
lret
movsl
stos
add
into
lret
ja
out
dec
mov
loop
push
push
int
in
cltd
lahf
push
data16
cltd
bound
cmc
fildl
scas
sub
push
xor
mov
pop
stos
sbb
stc
inc
enter
stc
movsb
aam
iret
lock
and
pop
movsl
inc
xlat
mov
jp
jp
rcrb
adc
daa
imul
xor
add
mov
stc
adc
jae
sub
subb
inc
lds
test
addb
mov
rclb
jle
lds
dec
push
test
scas
cmpsl
data16
imul
loopne
sbb
push
loope
bound
mov
xchg
mov
fmul
in
fidivl
imul
fnsave
outsb
cmp
insl
stos
orb
or
sbb
jae
aas
mov
push
int
sbb
jne
xor
ss
cmpsb
cmp
leave
pop
mov
insb
faddl
or
sub
stos
adc
nop
icebp
xor
ret
shl
adc
add
popa
jae
rclb
push
sub
push
cmp
sub
lds
ss
cmp
repnz
lods
test
es
pop
mov
outsl
push
insb
lods
cltd
bound
fs
mov
jp
xor
and
jmp
outsl
cmp
imul
adc
adc
add
call
sub
mov
repz
mov
les
add
lods
pushf
jae
jg
mov
repz
dec
push
pop
inc
xor
insb
sbb
stc
ljmp
insl
stc
jae
jmp
xor
loopne
out
sub
popf
jp
popa
stos
sub
cmp
sbb
inc
and
fistl
flds
mov
jno
pushf
sub
rcrl
mov
pop
fs
pop
outsb
jbe
mov
mov
mov
ret
inc
sarl
cmpsl
mov
jl
fwait
xorl
cmp
rclb
push
or
insl
mull
pop
xor
cmpsl
iret
sbb
cmp
leave
outsb
jns
pop
add
dec
mov
imul
ss
jmp
xchg
sbb
mov
push
and
xor
jno
cmpsl
push
and
and
jecxz
sarl
test
mov
mov
ret
mov
iret
mov
fimuls
mov
inc
lods
mov
test
or
sbb
arpl
aam
loope
lret
ret
xchg
andb
mov
fnstcw
jo
loope
mov
sti
jp
xor
adc
das
sbb
xchg
pop
cmp
aam
xchg
and
sub
cmp
stc
and
xchg
mov
mov
scas
mov
out
sbb
mov
mov
adc
lods
in
mov
push
icebp
daa
inc
roll
pop
lcall
xchg
mov
or
dec
inc
imul
cmc
aad
fcoms
das
pop
sbb
fidivs
pop
push
cld
mov
or
jg
add
push
and
sahf
sti
clc
outsl
lock
mov
rcrb
popa
repz
pop
pop
dec
das
or
sub
test
add
cmp
les
xor
and
xchg
imul
cmp
push
push
or
cld
mov
xor
inc
in
scas
push
mov
cltd
or
lahf
cmp
data16
icebp
ret
push
dec
fidivrs
add
push
insl
ds
sub
sub
or
fs
push
lods
pop
mov
cmp
adc
fldl
add
mov
dec
or
cmp
adc
je
stos
mov
leave
cmp
fimuls
and
cmp
mov
mov
movsb
xor
aad
mov
add
shl
mov
sahf
roll
inc
fisttpll
shrl
mov
mov
les
int3
mov
iret
enter
psllw
add
adcb
cmp
daa
xor
jmp
or
gs
or
xchg
add
roll
push
int
fs
and
add
std
int
sub
dec
dec
add
mov
in
sahf
or
lcall
fiaddl
dec
xchg
popf
shlb
in
in
jno
pop
xchg
mov
mov
adc
ret
out
add
cli
pop
movsl
cmp
orb
push
push
xchg
incb
and
or
je
stc
add
xchg
pop
sub
xchg
add
jne
jg
jecxz
mov
or
sbb
push
rolb
jmp
cmp
or
add
je
mov
pop
mov
jo
jno
lret
sub
push
inc
or
lret
je
jecxz
das
das
sbb
jle
sub
repnz
jecxz
inc
shll
adc
inc
xor
add
test
or
repz
push
adc
mov
sarl
and
std
mov
test
imul
cmp
dec
in
dec
lret
add
insb
daa
popa
pop
fiadds
lret
dec
subl
cmpsl
xor
inc
ret
popf
cmp
pop
and
je
into
aaa
dec
sti
xor
mov
sbb
pop
sbb
outsb
inc
or
fsin
repz
dec
mov
mov
cbtw
inc
adc
jae
mov
pop
lock
dec
pop
sub
mov
outsl
xchg
mov
bnd
fimuls
or
cmc
pop
mov
inc
dec
xchg
in
sub
imul
in
xchg
fs
mov
jno
movsl
xchg
insl
inc
fdivrp
mov
xchg
addr16
mov
std
mov
xchg
lods
mov
outsb
xor
push
sub
das
sbb
scas
stc
shll
data16
add
or
sbb
inc
adc
xchg
jle
inc
push
mov
iret
mov
js
xchg
push
adc
mov
xchg
loopne
mov
inc
inc
cmc
cli
add
data16
mov
nop
out
inc
cld
imul
sahf
iret
add
xchg
icebp
pop
jns
shrl
xchg
push
mov
jecxz
xchg
imul
push
push
data16
xchg
ljmp
imul
aaa
mov
pop
in
mov
cmc
into
loop
push
imul
and
adc
push
arpl
and
outsl
aam
mov
je
fs
sub
call
push
adc
and
pop
push
mov
orb
sub
data16
pop
lret
jns
decl
jae
cltd
push
lret
pop
outsb
mov
push
lods
mov
and
or
xchg
push
insl
mov
or
in
pushf
cmp
gs
pusha
inc
aaa
lret
sub
dec
cmc
and
jb
sahf
cltd
xchg
sbb
fs
inc
dec
pop
lahf
xor
testb
push
sub
add
mov
mov
les
ds
pop
sar
lcall
insl
xchg
stc
scas
pop
xor
cmc
insb
jge
out
adc
aad
pop
js
mov
aas
cmp
push
adc
ret
adc
popf
pop
mov
ja
das
push
mov
lods
cli
fidivrs
insb
jge
dec
jb
das
fidivl
mov
or
movsl
inc
or
pop
fisttps
testl
or
lret
test
scas
pusha
into
std
cmp
push
aad
pop
jbe
lcall
aad
dec
stos
or
inc
cmc
inc
pop
cmpsb
pop
jne
aaa
pop
into
icebp
cmp
sbb
insl
dec
push
mov
call
pop
lds
sub
pop
inc
push
and
mov
jns
adc
push
les
sub
orb
cmp
add
add
data16
lahf
sbb
sar
fistpll
lahf
das
leave
jmp
shl
in
and
rol
cld
in
xchg
aam
and
or
sbb
sahf
xlat
enter
pusha
inc
pop
mov
mov
sub
popf
dec
shr
sbb
jl
mov
sub
lea
cwtl
jle
filds
lods
testl
dec
inc
jecxz
push
int
adc
push
add
ds
daa
xchg
test
sahf
outsb
jp
and
out
add
rcr
outsl
or
shlb
pusha
aas
shrl
xchg
je
ljmp
std
jg
sub
push
data16
ss
add
or
xchg
adc
dec
ffreep
scas
in
adc
ja
aam
iret
lahf
scas
xchg
mov
mov
mov
shr
or
repz
fdivrl
jmp
sub
inc
in
mov
mov
cld
dec
int3
inc
lock
ficompl
mov
fmul
push
test
xlat
stos
xchg
or
inc
orb
and
add
mov
cwtl
rorb
loope
dec
stc
mov
in
cld
lahf
mov
mov
mov
addr16
cmp
or
lds
shll
repnz
mov
sbb
outsb
scas
sub
leave
mov
mov
mov
paddw
mov
std
jle
and
push
xchg
int
or
add
sti
test
shrb
mov
aam
xchg
cmp
mov
mov
rorb
mov
shlb
and
push
call
enter
inc
flds
adcl
or
mov
sub
mov
mov
lea
nop
jnp
aad
mov
sub
add
jmp
or
nop
test
and
test
jle
xor
movsb
fld
mov
sbb
cmpsl
sbb
andb
mov
mov
pop
es
xlat
pop
lcall
or
push
pop
or
and
lds
jnp
add
nop
xchg
jo
dec
push
icebp
push
mul
push
push
pop
pop
adc
jb
ret
dec
xchg
in
xlat
xor
out
inc
jecxz
pop
fildll
cwtl
out
push
roll
adc
or
fmuls
in
sbb
cmc
fisubs
gs
adc
or
mov
adc
nop
sbb
inc
cmc
mov
mov
inc
and
std
jne
or
inc
shll
cltd
pusha
inc
push
inc
push
xlat
add
dec
shrb
pop
lahf
inc
je
xchg
std
ss
mov
push
inc
xor
dec
and
mov
and
mov
mov
xchg
cmp
cmpsb
cmp
add
mov
sarl
jno
inc
and
aam
mov
jb
shll
ret
add
jns
xchg
mov
mov
mov
test
mov
or
lds
test
dec
jnp
or
jp
gs
xchg
or
stos
jae
mov
cmp
insl
xchg
adc
adc
test
popf
push
pop
aad
add
mov
and
dec
divl
add
or
xor
addb
add
lods
or
outsb
pop
mov
or
clc
call
lods
xchg
cmp
and
and
imul
sub
cmp
mov
mov
pushf
aad
push
in
arpl
pushf
xchg
shrb
pop
push
xchg
jns
in
inc
fcoml
xchg
ja
xchg
dec
fs
mov
fidivrs
inc
mov
sub
scas
pop
mov
repz
jle
js
fsubr
data16
scas
cwtl
pop
scas
mov
pusha
mov
jg
inc
sub
pusha
xchg
add
sbb
jge,pn
cmc
cwtl
sub
mov
push
or
lds
ds
mov
push
and
lcall
sahf
mov
sub
mov
je
lods
jae
sub
mov
lods
in
je
decb
je
or
pushl
add
push
cltd
xor
xor
xlat
out
inc
mov
lcall
push
add
pop
jo
cmpl
sti
push
cmp
hlt
ja
push
sub
sahf
arpl
sbb
sbb
xchg
xchg
jg
call
sbb
add
pop
mov
cmp
jae
or
shlb
cmpsl
and
leave
leave
xor
out
xchg
dec
mov
pop
daa
addr16
repnz
mov
outsb
fisttps
sbb
mov
xchg
push
dec
mov
aam
xchg
or
ret
mov
pop
and
call
lods
mov
add
xchg
mov
mov
ret
mov
push
push
roll
adc
shll
test
icebp
cmp
mov
rcrb
add
loopne
in
xchg
add
stc
adc
xor
add
out
inc
loop
jge
cli
ds
aas
mov
jne
in
jecxz
xor
inc
jne
sub
mov
jae
xchg
adc
xlat
aas
sbb
cmc
mov
xor
jnp
popf
or
jne
inc
das
popa
mov
jl
mov
out
sub
loopne
jmp
hlt
inc
movsl
jecxz
imull
pop
ret
cmc
pusha
cmpsl
push
sub
inc
mov
pushf
and
push
lock
sarl
mov
js
mov
cmc
mov
movsl
js
arpl
and
stos
jb
push
mov
sbb
mov
outsb
imul
xor
xor
push
rep
mov
movswl
dec
xchg
fdivrp
inc
inc
adc
mov
push
and
xor
sub
dec
fldenv
vmaxpd
push
xchg
outsb
je
mov
outsl
cmc
pop
or
push
inc
test
popf
repz
ret
aad
rclb
sub
ret
je
and
loopne
div
jl
fs
ficomps
or
fdivl
jbe
aam
outsb
int
mov
nop
outsl
jmp
loopne
cwtl
or
push
sahf
push
neg
cmp
aas
inc
xor
add
xchg
cmpsl
aam
inc
inc
xor
push
imul
mov
xorb
mov
xchg
jp
fldenv
inc
addr16
mov
jbe
nop
imul
xor
sbbb
insl
out
outsl
push
into
fdivr
push
ret
icebp
pop
stos
xchg
popa
test
cmp
dec
add
popa
outsb
mov
jo
cmpsl
adc
clc
dec
je
and
cmp
adc
lea
xor
std
outsb
enter
push
cmp
mov
das
inc
mov
aaa
lret
scas
aam
pusha
mov
nop
arpl
adc
ja
inc
xchg
push
iret
aas
mov
lret
and
xchg
fisubs
loop
push
xchg
inc
xlat
sub
flds
rolb
mov
scas
subl
ss
push
mov
push
push
xor
fwait
push
and
sub
inc
mov
fs
notb
inc
cltd
sbb
or
cmc
adc
hlt
pop
aaa
iret
loopne
test
adc
xchg
jo
mov
paddsw
test
and
bound
add
xchg
gs
bound
lea
sbb
dec
fcompl
pop
out
movsl
lock
fwait
popa
hlt
dec
mov
jnp
sub
lret
mov
sub
fnstsw
jb
dec
aam
push
xchg
je
lods
scas
push
push
ljmp
xchg
pop
cltd
mov
push
out
repnz
add
jmp
loope
dec
and
pop
jns
xchg
test
cwtl
pop
hlt
mov
pop
push
icebp
mov
getsec
pop
mov
ficompl
movsl
xchg
loopne
dec
jo
pop
or
pushf
add
data16
dec
add
jge
dec
fcoml
cmp
gs
ret
and
pusha
sbb
out
mov
mov
mov
pop
inc
sbbb
insb
dec
cs
xor
xorb
ljmp
outsb
dec
inc
cmpsl
jnp
push
notl
ja
int3
in
and
add
cmp
jge
cmpsl
jmp
sahf
xor
mov
lea
outsb
in
enter
dec
ret
sbb
imul
push
jle
sti
lock
into
jg
jno
mov
push
fstps
mov
or
mov
int
mov
dec
push
lcall
sub
je
ljmp
fsubr
dec
lahf
jecxz
mov
pop
xor
add
sub
dec
repz
push
and
test
push
lds
push
leave
push
loope
jl
int3
ror
enter
fldt
adc
lret
imul
sahf
jno
push
data16
dec
ret
frstor
and
mov
mov
lcall
or
lea
leave
lods
sub
mov
jae
push
fstps
jnp
xor
insl
nop
or
loop
jl
fs
fbstp
cmc
dec
mov
add
xor
mov
andl
sbb
mov
shll
push
and
mov
cmpsb
mov
pop
jg
ds
or
int3
mov
ss
sbb
or
pusha
ja
sub
clc
mov
call
xor
pushf
sub
lret
shlb
dec
xor
in
cmpsl
loope
dec
and
pop
jo
test
sbb
xlat
data16
push
xor
and
mov
sbb
adc
cmpsl
inc
fs
push
mov
sbb
mov
sbb
or
fildll
sub
mov
inc
xchg
pusha
and
fcompl
dec
popa
std
or
stos
popa
mov
sub
cli
mov
sbb
jle
inc
cwtl
in
push
push
push
mov
mov
loopne
mov
xor
or
dec
sub
jnp
stc
push
stc
mul
sub
repz
and
sub
dec
jbe
dec
test
int3
mov
popf
add
fwait
gs
lea
in
sub
je
stos
cs
pop
out
mov
fs
jp
sub
popa
cwtl
inc
ds
xchg
rcrb
pop
mov
fnsave
or
push
adc
lcall
movntps
jecxz
ljmp
les
xchg
movsl
pop
mov
and
repz
jae
push
adc
pop
dec
in
sbb
roll
pop
lret
xor
sarb
sbb
pop
jno
cltd
mov
xchg
inc
push
sbb
adc
push
fistps
adc
outsb
inc
out
into
sub
popf
adc
xor
dec
das
inc
sub
sub
fsubl
ficoml
mov
je
jg
inc
fimull
sbb
push
ret
lcall
and
lahf
mov
sti
xchg
lods
xchg
lret
in
push
enter
dec
movsb
adc
mov
adc
test
enter
mov
and
ficomps
sub
into
sbb
and
lcall
int3
push
inc
in
sbb
cmp
push
jp
mov
lcall
dec
ficompl
push
sbb
dec
enter
call
lcall
dec
ficompl
push
sub
fcmove
pop
fsubrs
mov
sbb
mov
pop
ljmp
pushf
jo
sbb
push
cli
cmp
sub
daa
adc
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
scas
in
add
xor
mov
cmp
sub
xchg
scas
sbbl
out
ror
into
jecxz
adc
add
xor
and
outsb
iret
pop
jae
pop
mov
mov
mov
fidivs
add
fwait
push
and
outsb
jg
popf
dec
jnp
dec
scas
loopne
in
jmp
popf
test
jecxz
adc
insl
push
inc
pop
jbe
fs
enter
mov
xchg
jno
jecxz
das
jp
mov
mov
lahf
jg
popa
mov
lret
mov
rol
fildl
mov
rclb
add
repnz
mov
sub
jp
in
aad
cmp
mov
jno,pt
inc
repz
pop
xor
adc
and
fwait
jle
inc
sub
insb
push
pop
push
sarb
mov
push
shr
dec
pusha
sbb
pop
jnp
arpl
rcr
into
je
mov
pop
loop
sbb
shrl
mov
sahf
adc
shlb
js
jmp
add
fcomip
iret
addr16
adc
repz
mov
sub
outsb
inc
pop
test
scas
inc
sahf
mov
out
cmp
repz
lea
push
jb
inc
or
sbb
sub
aad
icebp
ljmp
mov
andb
inc
push
inc
push
sbb
jo
sbb
ret
aad
jmp
mov
popf
mov
add
cs
aas
aaa
outsb
inc
pop
jae
arpl
mov
mov
fdivp
into
jecxz
adc
add
xor
and
outsb
inc
pop
jae
arpl
mov
mov
fdivp
into
jecxz
adc
aam
nop
pop
prefetchw
or
test
xor
add
repnz
lods
outsl
cmpb
lret
push
int3
xor
xchg
mov
xchg
ja
fsubrs
sub
add
cltd
jmp
push
push
pop
jl
jnp
mov
mov
pop
add
sbb
mov
outsl
ljmp
ljmp
pop
mov
test
xchg
sub
ffreep
jle
arpl
or
mov
negb
test
cmp
into
outsl
xor
inc
pushf
fisubrs
fadd
push
xor
adc
cmpsb
aam
mov
leave
cmp
xor
and
add
sub
cmp
jns
cmpl
sbb
push
and
sbb
loopne
sbb
xor
inc
sahf
data16
jns
outsb
cmpsb
mov
lods
cwtl
xchg
je
ljmp
je
sbb
sub
je
lret
xchg
xor
push
lock
inc
add
sub
mov
mov
pop
int3
sub
rorl
xchg
and
inc
xchg
mov
mov
arpl
aad
jo
ror
mov
pop
gs
mov
out
arpl
jl,pn
cli
jle
mov
fcmovbe
fistpll
push
scas
rol
je
push
xchg
shrl
dec
adc
adc
jnp
pop
mov
cmpsl
fwait
es
mov
les
lcall
or
out
daa
cli
add
insl
lahf
aad
mov
lock
int3
and
pop
pop
and
imul
cwtl
mov
pop
sbb
adc
fs
stc
rolb
cltd
jno
je
xor
sub
jmp
sub
cmp
inc
jns
lret
pop
cmp
and
lods
ljmp
push
adc
je,pn
shrl
mov
sahf
insl
add
mov
lcall
xchg
scas
dec
xchg
clc
sbb
push
mov
xchg
mov
sub
jb
imul
push
dec
orb
mov
sub
std
iret
push
std
popa
mov
lret
cmp
mov
pop
mull
mov
sbb
out
xor
dec
aam
mov
adc
xchg
orl
sarb
mov
or
jmp
fdivrl
xchg
pop
inc
pop
js
or
in
imul
fwait
add
mov
jp
push
sub
sub
dec
push
xchg
into
jp
outsb
idivl
fidivl
ljmp
rclb
inc
and
xorb
add
mov
das
cmc
lahf
pop
mov
orb
mov
es
je
mov
sub
adc
test
loopne
cld
or
sbb
lcall
fistps
sbb
jo
push
aas
sub
fwait
push
sahf
repz
and
in
ljmp
jbe
or
push
push
pop
xor
sti
adc
fsts
inc
out
rol
pop
cs
jp
lea
dec
and
pop
out
and
iret
cmc
mov
xchg
push
cmp
jge
fcom
and
xchg
adc
mov
out
mov
aam
inc
jg
jne
dec
out
out
lock
bound
mov
lods
push
stos
dec
test
mov
lahf
rorl
xchg
inc
inc
jns
dec
sub
sub
jg
push
mov
xor
sub
pushf
lahf
aad
xor
test
loopne
dec
mov
jmp
loope
push
mov
jne
inc
loopne
jmp
sub
or
test
imul
sti
stos
pop
inc
stos
pop
jmp
hlt
sarb
test
inc
push
les
call
arpl
jecxz
cmp
iret
int3
flds
mov
dec
sub
ret
push
jmp
mov
out
xchg
test
pop
les
cmp
sub
stos
mov
mov
xlat
adc
jno
and
cmp
insb
pop
jb
push
in
xor
pop
insb
cmp
shll
jge
xor
pop
addr16
mov
mov
jge
movsb
add
inc
jp
sub
rorb
mov
mov
push
js
adc
lahf
pop
add
sbb
push
inc
mov
fcoml
int3
push
inc
adc
and
data16
out
sub
pop
sbb
sbb
pop
pop
cmp
push
mov
xchg
or
test
push
mov
or
dec
adc
jae
out
or
ret
enter
jbe
lahf
xchg
jb
push
sahf
stos
fsubrs
jmp
jb
ss
xor
movsl
push
xchg
mov
test
mov
adc
out
mov
xor
lods
and
lret
mov
pop
ja
adc
jmp
sbb
xchg
push
cmp
xchg
mov
and
xchg
add
data16
stos
ds
nop
fisubrl
mov
ret
xchg
fwait
outsb
fcoml
inc
push
mov
jecxz
adc
push
mov
cwtl
cmc
scas
gs
pushf
cmp
lret
mov
sbb
movsb
sbb
cmp
fidivrl
ret
out
add
enter
inc
out
movsb
mov
xor
mov
jle
add
loopne
ret
pushf
fidivl
mov
xchg
sti
popf
sub
addl
shrl
or
pop
sti
cltd
push
cmp
push
clc
or
mov
sahf
lret
pop
or
xor
mov
stos
fucomip
sub
cmp
cmp
inc
push
pop
fidivl
idiv
pop
popa
lcall
lcall
lahf
std
movsl
cld
sar
pusha
or
roll
dec
lret
aas
lock
inc
pushf
mov
xchg
stc
sbbb
sbb
insl
andb
ljmp
shrl
mov
cmc
in
dec
xor
scas
sbb
pop
push
rcll
sahf
stos
sub
mov
sti
adc
inc
mov
xor
jl
xchg
out
les
jl
bound
lret
sbb
scas
add
loope
adc
add
pop
mov
cld
in
popf
nop
push
insb
ss
jnp
sbb
popf
pop
sbb
xchg
sbbl
xor
jg
lock
mov
lret
loope
or
inc
repnz
imul
lret
cmpsl
xor
mov
add
push
jle
test
rcrb
sbb
adc
fnstcw
pop
scas
sbb
xchg
das
add
rcrl
icebp
mov
stc
pop
push
testl
mov
insb
dec
jge
adc
andl
sbb
cwtl
int
cltd
mov
dec
inc
sbb
mov
push
nop
pop
mov
push
inc
mov
ds
les
inc
nop
cwtl
mov
pusha
and
movsb
push
push
inc
xor
addr16
sub
fadd
aaa
arpl
push
adc
sbb
cmp
icebp
jns
clc
and
outsl
lods
sahf
xchg
stos
aad
push
mov
in
dec
push
inc
xlat
sbb
cld
xchg
aas
shrl
sti
cmpsb
dec
inc
repz
mov
xor
pop
das
pop
cwtl
ss
push
iret
iret
ds
xchg
ret
xchg
out
dec
or
lods
cs
xor
in
xchg
fistpl
dec
pusha
das
pop
outsl
sub
std
sti
sbb
mov
xor
xchg
mov
pusha
xchg
aaa
dec
lcall
inc
call
push
mov
cli
adc
shrb
jae
lds
popf
outsl
imull
repz
jb
inc
stc
sbb
inc
imul
jne
push
adc
test
in
mov
test
popl
sbb
cwtd
idivb
call
xchg
jmp
int3
mov
frstor
fildll
insb
lahf
push
cmc
arpl
insb
inc
and
add
or
je
subl
cmpsb
addr16
lock
sbb
xor
sbb
out
into
mov
mov
sub
mov
xor
loope
stos
sub
mov
iret
idivb
outsl
xor
push
jns
outsl
sti
sub
sbb
movd
jno
sbb
cmp
jp
pop
pop
sub
fsubr
stos
pop
pop
adc
adc
adc
pop
xchg
je
and
cli
inc
push
inc
jno
sbb
movsb
test
shlb
bound
and
mov
das
push
ror
mov
nop
popa
out
adc
psubsb
jecxz
rorl
pop
cmp
push
dec
push
push
and
mov
fwait
mov
and
push
adc
jle
stc
and
dec
sbb
push
jns
adc
adc
sbb
jns
xchg
dec
add
lahf
jb
imul
cs
imul
push
and
sub
jae
cmp
and
cmpb
test
push
push
fdivrs
sbb
xlat
pop
add
rclb
adc
sub
outsl
movsb
pop
cmp
push
mov
cmp
sub
stc
pop
insl
sahf
cmp
movsl
push
shrl
jl
sub
dec
push
das
push
xor
fcoms
xor
jecxz
jbe
inc
mov
sbb
es
aas
lods
testl
int3
aas
shlb
pop
cmp
arpl
jmp
jmp
test
dec
pop
mov
mov
enter
xchg
aad
je
and
inc
test
fadd
stos
popf
and
xor
push
bound
ds
mov
in
dec
data16
xor
leave
in
in
jmp
cmp
sbb
adc
imul
sbb
mov
inc
cmpsb
mov
add
pop
sbb
adc
lret
jne
cmp
pop
mov
inc
inc
outsl
ret
mov
test
insb
jne
cmpsl
into
cmpsb
out
jno
mov
in
out
jp
sub
cli
xchg
cli
lods
stos
add
ljmp
addr16
rcll
jle
add
dec
dec
mov
inc
add
movsl
lahf
ret
imul
cwtl
and
cmp
cmp
sbb
sub
pop
aas
jge
lret
out
cld
mov
int
stos
loop
push
mulb
rclb
jno
out
js
test
outsl
sub
in
dec
xlat
daa
pop
in
data16
xchg
imul
inc
cmp
push
cwtl
addr16
sahf
mov
push
aad
inc
push
inc
aam
cmp
push
add
jg
pcmpeqd
cmc
jle
xchg
in
push
mov
jne
jnp
sub
bound
movsb
gs
cmp
adc
call
or
stos
pusha
adc
in
add
and
fbstp
jp
ja
pop
fsubrs
mov
test
movsl
inc
and
loopne
xchg
pop
inc
lock
push
stos
jle
mov
mov
mov
shrl
sub
push
add
push
fcmovnbe
std
je
push
mov
dec
mov
inc
repnz
jnp
xchg
ds
sub
fs
inc
or
pushf
je
cmp
fwait
sub
xchg
pusha
push
mov
in
cs
xchg
repz
daa
aam
dec
cwtl
aad
imull
mov
cmp
lahf
jp
or
pop
pop
mov
jb
stos
adc
pinsrw
insb
fs
mov
and
sbb
mov
xlat
sbb
dec
pop
cmp
imul
out
cmp
pop
hlt
mov
add
outsl
insb
jge
rcrb
mov
sbb
sub
dec
fisttps
jno
inc
xor
jae
fiaddl
mov
int
or
lahf
jmp
iret
leave
icebp
cmp
push
std
jbe
fldln2
lahf
andl
lret
stc
mov
xlat
and
outsl
imul
or
int
or
mov
cmp
inc
inc
add
or
ror
push
jnp
cld
std
and
testb
mov
cmc
inc
inc
mov
aad
mov
lret
sahf
sbb
pop
or
mov
push
dec
sbb
fs
repz
mov
mov
jmp
fimuls
push
out
in
xor
gs
dec
test
adc
aaa
leave
loop
or
adc
daa
mov
xor
sbb
cmpb
cmp
mov
adcb
jmp
into
insb
cltd
ss
ja
xchg
inc
adc
out
fucom
sbb
dec
jl
adc
sbb
inc
test
lods
push
jno
mov
cmp
pop
mov
jge
jno
mov
push
pop
sbb
sub
daa
sbb
xchg
or
fdivs
or
cwtl
xor
aad
lods
or
movb
out
dec
add
iret
mov
outsb
ja
or
lret
fisubrs
jns
shll
jp
jp
pusha
lcall
ret
and
inc
xchg
test
daa
pop
aam
mulb
cmp
loop
enter
mov
pop
mov
ret
xor
stos
cmp
call
xchg
call
ror
jns
pop
popa
push
push
ja
dec
ljmp
cmp
xor
cld
or
push
push
jnp
jns
inc
mov
inc
lret
scas
out
std
xchg
inc
xchg
lock
scas
mov
aad
xorb
mov
in
mov
sbb
add
push
ret
jl
insb
ss
pop
lahf
sbb
jmp
xor
popf
dec
pop
push
ficomps
jmp
or
or
and
les
fcmove
mov
add
fildl
fmull
nop
es
jp
xchg
inc
push
push
ret
jmp
cmp
adc
push
andl
out
xchg
xor
nop
les
mov
stc
sub
xor
and
mov
adc
and
aam
cmpsb
popa
cmp
hlt
imul
js
inc
test
ja
push
mov
ljmp
pushf
xlat
sbb
push
les
cmp
sbb
stos
mov
out
sbb
mov
stc
dec
mov
lret
inc
popa
test
xchg
mov
xor
outsb
mov
out
inc
rorl
jl
or
lods
dec
jp
imulb
js
jns
sahf
roll
stc
and
in
add
out
cmp
pusha
jae
sbb
xchg
mov
shrl
addl
xchg
andb
push
or
nop
jnp
enter
test
jns
shll
rcrb
inc
cmp
cltd
loopne
and
jbe
jg
adc
or
shrl
pop
lea
jbe
in
pushf
shl
fldcw
pushf
cmp
add
cltd
fadds
jmp
or
fsubrs
fs
mov
test
int3
or
sti
imul
inc
aaa
add
and
xchg
enter
negb
push
loop
sbb
or
lock
lcall
jbe
pushf
test
or
adc
jp
into
adc
and
movsl
inc
mov
jle
cltd
gs
jbe
daa
in
xorl
out
mov
scas
add
sbb
adc
in
popa
push
stos
cli
arpl
es
lea
push
cli
in
xchg
inc
jns
cmp
cmpsl
sbb
jecxz
sahf
fwait
hlt
pop
lcall
call
xor
lret
add
lcall
cmpsl
les
mov
lret
testb
pop
sbb
cmp
xchg
push
movsl
pminsw
and
data16
fsubl
xor
arpl
rcrl
ret
pop
inc
pop
mov
gs
mov
adc
lds
mov
outsl
jmp
insb
jecxz
jecxz
scas
add
inc
imul
push
or
pushf
add
xchg
or
out
test
std
and
or
lds
fucom
in
jg
test
mov
movb
mov
pop
lock
inc
loop
addps
bound
push
in
push
xchg
xor
roll
scas
jmp
ret
in
leave
push
and
mov
out
xchg
lret
shlb
dec
mov
mov
sbb
loope
js
or
leave
imul
jae
dec
push
mov
scas
mov
pop
or
fidivs
sbb
mov
outsb
push
jge
adc
xchg
je
xor
dec
push
sar
mov
xchg
loope
xchg
pop
push
leave
jp
outsl
pop
out
pusha
cmp
sub
cmc
xchg
adcb
and
mov
out
pop
inc
enter
dec
jg
aas
jne
cmp
adc
xlat
push
iret
fs
xor
sbb
add
in
push
jmp
jb
lcall
pushf
mov
pop
mov
xor
inc
subb
pushl
iret
jno
add
in
loopne
lods
pushf
pop
xor
ljmp
jb
dec
test
push
mov
mov
mov
dec
cld
dec
xor
xchg
push
and
add
mov
fsubrs
test
loopne
mov
pop
out
cmp
in
lahf
ficoml
lods
push
dec
notb
push
push
add
sbb
fbld
adc
fcomi
inc
inc
mov
outsl
jb
outsl
repnz
inc
pushf
add
push
int3
sti
add
add
out
pusha
push
cmpsb
jb
push
sub
popf
std
push
add
lahf
xchg
pop
mov
scas
loop
loop
and
mov
jmp
fldcw
cli
xchg
lock
cltd
adc
lcall
or
int
mov
loopne
xchg
xchg
loope
xchg
repz
mov
loopne
xor
mov
mov
and
arpl
mov
jo
sarl
xor
cltd
pop
mov
and
out
frstor
adc
push
sbb
lea
shl
fcompl
icebp
fadds
subb
call
inc
stc
mov
jno
jb
add
xchg
int3
imul
or
inc
push
out
and
aas
les
mov
xor
in
fcoms
sbb
cmp
pop
cmc
pop
lret
cmp
mov
mov
jge
mov
push
imul
lcall
sbb
push
enter
clc
subb
jp
insl
enter
jae
icebp
lods
test
pop
aad
sti
in
dec
push
push
fwait
xorl
inc
les
daa
test
sti
push
pop
jnp
adc
out
sbb
and
popa
dec
jmp
xlat
sub
and
pop
call
cmpsl
adc
jl
add
fwait
shl
and
scas
aaa
adc
xor
hlt
or
jb
cmp
add
pop
cltd
repnz
in
lods
mov
shr
xchg
mov
inc
test
inc
add
xchg
sub
jge
mov
inc
iret
dec
lods
cmpb
jp
clc
pop
jo
pop
repnz
xchg
mov
int3
push
or
push
mov
push
negl
out
adc
sub
push
addl
jb
fcompl
arpl
bound
mov
stc
jb
enter
sub
iret
mov
pop
and
scas
repz
mov
add
rcrb
das
jno
sahf
xor
in
jb
mov
cmp
jle
fisubl
pop
dec
lods
imul
pop
daa
aam
hlt
or
push
mov
lods
and
mov
dec
out
cmp
pop
repnz
stc
orl
stos
adc
test
xchg
xchg
sbb
jae
fsubl
mov
es
lods
mov
aam
out
mov
cmp
dec
movsl
push
dec
adc
xor
and
mov
jno
xlat
jns
or
out
inc
xchg
leave
in
mov
lret
out
dec
pop
jl
inc
popa
icebp
shl
sbb
mov
cmpsb
xor
ds
adc
fsts
sbb
pusha
repnz
mov
cmp
mov
sbb
imul
lahf
clc
test
fdivl
lret
in
rcrb
mov
aad
fiadds
push
ret
mov
stos
test
ret
sub
mov
dec
pop
popf
sbb
das
xchg
inc
lahf
add
adc
adc
sub
insb
jae
loopne
cld
mov
inc
mov
xchg
adc
loope
in
pop
hlt
popf
inc
mov
mov
repz
jo
xchg
cli
mov
out
adc
cmp
sub
fwait
pop
or
jne
and
mov
popf
push
lods
and
aas
jp
jle
mov
adc
jecxz
cmp
pop
ljmp
cmp
or
mov
cmpsl
sub
jno
lock
mov
daa
loop
mov
mov
fstl
rcrl
lret
arpl
ja
xchg
enter
adc
test
sub
mov
mov
loopne
pop
js
jae
addr16
js
je
cmp
push
xchg
xlat
adc
fisttpll
push
fisttps
or
add
sbb
daa
inc
adc
mov
pop
ljmp
test
cmp
lret
stos
xorl
movsl
xor
jne
test
xchg
sbb
and
pop
mov
push
jl
and
mov
rolb
test
call
outsl
mov
sbb
lea
aas
mov
sti
xchg
js
out
lahf
shrl
sub
cmp
repz
repnz
mov
jmp
sub
fidivrs
cmp
scas
pop
test
pop
lock
sub
idiv
stc
test
sbb
mov
fiadds
inc
mov
insb
dec
std
clc
cmovs
lret
out
mov
and
icebp
xchg
negl
inc
sbb
cmp
dec
js
xchg
pusha
jo
sub
call
imul
std
add
add
cmp
mov
xchg
xchg
sub
jmp
outsb
outsl
mov
or
push
adc
xlat
push
jns
icebp
inc
pushf
insl
cli
and
iret
cmp
xor
xor
repz
jecxz
decb
sub
add
into
es
into
jns
rcrl
ret
dec
data16
push
int3
jne
int3
lret
sbb
pusha
and
ficompl
jo
bound
and
mov
fsubrs
or
iret
leave
sbb
adc
movsl
and
movsb
xchg
pusha
or
jbe
cwtl
scas
call
cmc
and
mov
pop
add
test
cmp
push
xor
adc
adc
outsb
shll
xchg
arpl
xchg
cmpsl
cmpsl
pop
mov
aam
cmc
dec
sar
es
iret
xor
popa
fs
inc
xchg
addr16
cld
mov
push
mov
das
inc
adc
sbb
cwtl
adc
and
daa
fisttpl
or
cmp
sbb
mov
jmp
bound
insl
and
pop
imul
adc
xchg
mov
cltd
sbb
rcrl
nop
pop
sub
pop
xor
inc
push
and
popl
sub
nop
xor
int
mov
cmpsl
mov
xchg
xchg
pop
xchg
shrl
mov
jb
or
xchg
imul
pusha
out
mov
sub
push
mov
adc
mov
fcomps
and
outsb
inc
pop
jae
arpl
mov
mov
fdivp
into
jecxz
adc
add
xor
and
outsb
inc
pop
jae
arpl
mov
mov
fdivp
into
jecxz
adc
dec
push
dec
push
and
outsb
jmp
jae
arpl
mov
mov
iret
jecxz
adc
add
xor
and
outsb
inc
pop
repz
arpl
mov
aam
pop
data16
or
sbb
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
xchg
lds
mov
lret
adc
ja
inc
and
jno
popa
ret
add
roll
loope
adc
adc
mov
adc
jno
popa
int3
xchg
faddl
mov
pushf
shrl
dec
pop
sbb
and
add
inc
adc
popa
movsl
xchg
aad
dec
popf
pop
jns
xchg
pop
add
xor
cltd
cmp
cltd
dec
shl
cmc
pop
push
sub
inc
std
insb
jmp
mov
push
lret
test
pop
test
push
mov
xchg
push
sarl
loope
push
inc
jb
mov
pusha
add
mov
mov
rclb
mov
and
ficoms
int3
inc
xor
addr16
pop
movsl
push
mov
pop
push
mov
adc
jo
xor
mov
aam
sbb
ret
mov
mov
and
scas
adc
popa
adc
mov
mov
mov
mov
add
jl
or
jno
daa
cmpsb
cld
mov
out
mov
enter
inc
push
jns
popa
cmp
inc
add
rol
lret
nop
mov
mul
mov
out
fstps
inc
insl
xor
dec
jo
jbe
inc
add
bsf
div
nop
vpmullw
mov
movsl
loope
adc
jne
and
jno
popa
aad
lds
xchg
roll
loope
adc
jne
and
jno
popa
aad
push
xchg
lods
inc
lea
adc
or
test
mov
pop
and
push
push
dec
or
lea
cs
test
int3
sub
lds
mov
and
and
pop
movsl
daa
in
icebp
cmpb
popf
pop
lret
sarl
mov
rcll
push
add
fxch
lods
xchg
xor
jae
dec
or
sub
and
loop
xchg
repnz
push
cmp
test
xchg
add
sub
ss
stc
adc
or
mov
jl
loop
shrl
movsb
imul
sti
cmp
les
pop
pop
adc
addr16
xor
enter
cmpb
ret
mov
jle
or
insl
dec
or
cmp
orl
inc
and
sub
rcl
out
fwait
test
xlat
xor
push
aam
ret
aad
scas
xor
dec
jecxz
imul
jo
push
cmc
in
mov
and
xorb
pop
arpl
adcl
out
and
call
lret
fisttps
fcoms
push
ss
jecxz
sahf
mov
mov
xor
shll
mov
shrb
cltd
enter
mov
ret
sub
push
push
shlb
mov
adc
xchg
pop
icebp
dec
sub
jmp
push
pop
addr16
xchg
outsb
and
movsb
lret
jnp
xchg
mov
inc
push
lods
pop
push
in
fisubs
cmp
xor
movsb
and
stos
inc
adc
sbb
out
adc
addr16
inc
daa
cmp
sub
xorb
xchg
mov
adc
jo
pop
rcrb
jns
cmp
sub
jnp
xor
mov
movntps
rol
mov
cmp
cmp
stos
cmp
push
fimuls
sub
jb
clc
movq
pop
jnp
pop
fbstp
dec
xor
xor
rcll
movsl
lret
pop
inc
test
enter
jg
leave
bound
mov
cltd
repnz
xchg
lds
lods
sub
clc
or
mov
push
mov
fndisi(8087
inc
mov
std
in
movsl
lret
nop
mov
loop
cmc
sub
add
lock
cltd
jl
or
mov
iret
add
out
ret
jl
cmp
pusha
cltd
sbb
jg
sub
or
fdivs
rorb
sbb
cmpsb
int
fucom
loope
aaa
outsl
sbb
sbb
addr16
fnsave
adc
mov
nop
cmp
notb
cmc
cwtl
inc
fsubs
ja
jae
cld
pop
jg
es
and
xor
or
jmp
orb
imul
dec
jbe
mov
es
or
mov
into
jae
nop
xor
xchg
and
ds
lds
sbb
xlat
sbb
push
jl
int3
insb
insl
out
sub
lods
mov
es
mov
push
sub
rolb
add
stos
and
sub
or
sbb
daa
pop
int
xor
shlb
cmp
mov
sbb
fwait
jle
mov
int3
sti
iretw
lock
adc
enter
scas
clc
cli
jg
dec
add
jmp
inc
mov
adc
mov
mov
push
xchg
fldenv
cli
inc
mov
fs
add
xor
enter
jns
ss
fistps
sahf
arpl
mov
mulb
mov
dec
sbb
dec
ret
or
gs
imul
lods
fwait
cs
in
xchg
ffreep
add
cwtl
sub
insb
hlt
lret
sbb
push
mov
icebp
cwtl
mov
mov
loopne
daa
sbb
lods
out
imul
inc
push
xor
fs
movsl
mov
xchg
add
mov
popa
sbb
popa
mov
in
push
push
dec
sbb
xor
mov
mov
sub
jo
rcrl
neg
in
roll
or
negb
pusha
mov
dec
sti
shrl
sbb
xlat
dec
inc
icebp
insl
cli
xor
mov
in
cs
push
xchg
inc
sbb
and
or
clc
dec
xchg
sbb
xchg
imul
popf
sbb
push
je
xchg
cmpsl
sarl
or
pop
mov
movsl
pop
popf
jle
in
stos
cmc
and
add
js
arpl
dec
shrl
push
lcall
mov
lcall
pop
aam
daa
inc
fst
repnz
out
dec
ret
dec
ljmp
and
pop
andb
mov
js
daa
cmpl
mov
xor
mov
push
xor
mov
sbb
or
and
or
pop
test
push
and
add
inc
and
xchg
jno
mov
jne
sbb
xlat
pop
popf
pop
in
mov
aas
ljmp
mov
fildll
lods
ret
mov
test
or
in
sbb
loop
cmpsb
cwtl
mov
aam
jno
push
stos
shrl
sub
xlat
popf
imul
mov
mov
xchg
repz
sub
loope
push
call
test
xchg
mov
xor
mov
xchg
je
pop
jmp
and
adc
popa
fstpt
dec
xor
icebp
out
loopne
cmpb
xor
out
bound
dec
cmp
mov
xor
cld
xchg
or
shlb
sub
stos
int
inc
add
test
mov
cmovs
aam
xchg
or
pop
test
mov
je
push
inc
inc
sbb
jle
inc
adc
pop
pop
xor
in
mov
adc
xor
jns
xor
mov
cmp
insl
and
dec
sbb
in
adc
pop
adc
push
add
and
pop
xor
add
rcrl
add
fisttps
dec
jle
xlat
pop
xchg
les
jle
dec
jmp
lods
xor
push
leave
fnsave
xor
fcoms
imull
jg
adc
das
ja
cmpsb
call
push
gs
mov
nop
imul
add
sbb
jne
outsb
mov
cmp
pusha
jnp
push
cld
out
out
call
push
mov
jo
leave
or
pop
or
cmc
inc
push
dec
push
jg
sarl
int3
and
mov
addr16
test
cmpsl
mov
xor
sti
enter
insb
pop
adc
fildll
pop
add
cmp
and
push
in
imul
or
adc
mov
push
mov
cmp
xchg
xlat
cltd
movsb
mov
push
mov
and
mov
xchg
xchg
enter
jmp
sbb
gs
std
imul
push
stos
test
cmp
mov
pop
sub
sahf
jle
lods
dec
mov
aad
mov
ds
ret
add
and
adc
push
pop
cmp
cld
mov
and
int3
jae
orb
sub
test
ficoms
mov
mov
test
ss
jp
inc
ficoml
adc
jnp
mov
lea
xor
ret
roll
pushf
aaa
and
mov
outsb
sbb
pop
test
in
stc
test
hlt
ret
repnz
xor
or
lcall
adc
lock
add
push
cmp
lock
dec
out
lret
loopne
mov
inc
dec
cmpsl
mov
add
push
adc
fldenv
loop
adc
mov
mov
push
mov
fidivs
mov
xor
scas
shlb
lret
out
cwtl
test
shrb
push
lods
push
in
pop
in
dec
mov
fs
dec
fwait
stos
clc
pop
fldcw
sarl
roll
imul
icebp
inc
fs
inc
arpl
sub
sbb
dec
rcl
and
ljmpw
iret
cmp
push
push
pop
jno
mov
jo
jp
jae
je
cltd
loope
cmp
or
mov
sub
call
scas
mov
fdivl
lods
mov
push
cmp
cmpsb
aad
pop
and
or
jno
cmp
jne
ss
ret
iret
jp
xorb
in
mov
cmpsl
imul
jecxz
hlt
and
mov
inc
pop
hlt
adc
sub
pop
or
mov
xor
jbe
or
and
clc
add
sbb
or
jl
insl
daa
iret
xor
repz
xorl
cmp
cld
inc
jp
inc
pop
mov
loop
ret
push
in
mov
repz
aad
cmpsb
cmp
orl
mov
pop
cmp
repz
aam
sti
test
inc
in
insb
xor
xor
and
or
dec
xor
push
aad
mov
wbinvd
push
or
jne
adc
pop
fadd
enter
popf
pusha
ds
cmp
mov
scas
cmp
pop
mov
lock
shl
sbb
add
adc
scas
mov
out
cmp
je
mov
xchg
fstps
add
add
dec
das
mov
mov
test
mov
scas
jmp
and
mov
aad
mov
ja
mov
sub
ret
test
pop
sbb
xor
cmpsl
xlat
out
mov
push
ror
cmp
pop
xor
push
jne
rol
dec
idivb
mov
repz
jg
inc
aad
dec
aam
dec
mov
insl
nop
mov
mov
stos
or
mov
adc
sbb
nop
in
ja
rcrl
lret
pop
adc
aas
xor
lret
sub
sub
lcall
mov
dec
repnz
cmp
jmp
rcll
add
rol
sbb
fidivrl
scas
ss
andl
movsbl
iret
mov
or
frstor
sbb
mov
sbb
fwait
and
push
jl
jne
loope
int
cmpsl
into
insb
arpl
add
xchg
mov
jmp
jg
sbb
loop
inc
out
sbb
popf
test
shrl
xchg
mov
pusha
shr
lods
cmpsl
icebp
cmp
data16
jle
fcoms
dec
adc
lock
xor
push
dec
push
xor
inc
in
out
inc
test
gs
sbb
hlt
popa
out
pop
das
mov
cmp
cmp
inc
pop
daa
mov
fwait
outsb
pop
sbb
int
test
pop
outsb
in
sbb
mov
cmp
dec
jg
mov
or
jge
insl
cmp
add
mov
mov
xlat
movsb
std
mov
mov
pop
add
scas
cmp
jmp
mov
jae
sbb
jns
adc
fiaddl
mov
scas
xlat
rolb
and
add
ret
xor
xlat
mov
xor
xchg
cmp
jp
js
add
pop
nop
mov
inc
lock
adc
movsb
fmull
pmuludq
loopne
ds
aad
cmpsb
adc
push
test
andb
std
imul
sub
or
mov
xchg
sbb
dec
test
out
jno
adc
loop
xchg
int
dec
lcall
lcall
xlat
inc
pop
stc
mov
cmp
ja
xchg
adc
ljmp
xchg
add
ffree
jmp
outsl
xchg
out
cmp
cmpsl
pop
testb
dec
pusha
add
jl
pusha
and
dec
pop
and
iret
push
mov
call
ret
test
sub
call
imul
sub
xor
and
xchg
sbb
outsb
mov
loope
pop
addr16
lret
cmp
movsb
dec
outsl
push
hlt
int
dec
testl
sahf
push
insb
shld
std
or
cmpsb
lret
sub
push
dec
movsl
stos
push
daa
inc
sbb
mov
jno
lods
cli
pusha
push
add
bound
xor
jbe
add
pop
mov
hlt
insb
xlat
test
cmpsl
std
outsl
xor
pop
or
sbb
or
lock
push
jl
inc
incl
notl
push
cltd
mov
sbb
add
jl
inc
mov
inc
stos
rorb
fisttpll
scas
pusha
dec
cmp
xor
inc
jmp
cltd
cld
andl
ja
sti
leave
mov
lret
ljmp
cmp
jb
scas
cmc
or
sahf
das
in
cmp
jl
xlat
lods
int3
dec
push
aas
mov
push
cmp
outsb
rcrb
or
inc
fs
and
mov
adc
js
adc
or
inc
pop
pusha
push
scas
push
xchg
test
and
jl
xlat
cwtl
push
in
negl
flds
enter
pop
mov
shll
xchg
dec
popf
stos
rcrl
ret
push
jl
add
cltd
jle
fsubrs
or
addr16
out
fdivrs
gs
mov
adc
aad
in
push
and
add
es
test
add
jb
shlb
in
movsb
or
push
or
int
lods
sub
sbb
insl
or
mov
jecxz
jp
in
sbb
push
cmp
sbb
int
mull
movsl
pusha
jnp
mov
ds
mov
push
xchg
push
int3
xchg
sahf
sbb
mov
mov
xchg
xor
mov
sbb
out
cwtl
insb
mov
jo
into
sub
lret
sub
not
cmpsb
ja
mov
add
aam
das
rorl
mov
ljmp
or
adc
push
hlt
ret
jo
dec
cld
xchg
pusha
pop
inc
mov
wrmsr
adc
ja
mov
xchg
inc
lret
leave
rcll
push
movsb
sahf
xor
data16
mov
int
jns
shrb
sbb
and
les
inc
pop
cmpsl
cli
xchg
clc
sub
leave
mov
pushf
cmpsb
pop
fimull
repnz
lea
ljmp
in
push
push
xorb
setno
bound
aad
loopne
mov
test
mov
xor
sbb
add
and
mov
aad
push
imul
jecxz
in
std
jns
adc
mov
pop
push
movsb
push
xchg
in
and
xchg
clc
aam
jle
out
hlt
xor
jp
popa
lock
jp
xor
cmp
nop
mov
pop
jnp
sbb
adc
ss
or
leave
fcomps
mov
cld
mov
mov
sub
adc
data16
psubd
in
incb
cmp
sbb
mov
ds
or
lret
rorl
adc
ret
sub
out
lret
clc
lods
inc
mov
add
mov
mov
push
pop
enter
jnp
and
in
mov
jnp
lret
repz
push
outsl
or
jle
adc
pop
mov
cwtl
adc
bound
lods
and
cwtl
repz
adc
sub
iret
fistpll
daa
enter
ljmp
xchg
jno
push
cld
clc
mov
xchg
xor
pop
in
cs
imul
cs
ret
outsb
in
arpl
or
les
repz
aas
or
fsubs
popf
idivl
xchg
aaa
stos
dec
icebp
pop
cmpsl
fistl
adc
fcoml
lret
mov
mov
sahf
scas
push
mov
cmp
dec
and
or
or
inc
jno
sub
xor
scas
xchg
popf
xlat
adc
mov
test
fs
psraw
push
push
adc
pushf
leave
push
xchg
int
dec
push
add
stos
sahf
jnp
fcoml
aad
mov
xor
xchg
scas
in
les
clc
xchg
mov
cmp
cli
jns
mov
push
xor
int3
imul
cs
subl
jle
shr
mov
mov
std
adcl
or
movsb
arpl
fisubrl
je
push
fldenv
jl
jmp
xchg
or
cmp
fdivr
stos
pusha
add
xchg
out
push
jnp
pop
dec
xchg
sti
popa
shrb
push
jl
fcmovnbe
sbb
push
ljmp
push
movsb
adc
push
les
pop
ret
adc
pavgb
lcall
dec
mov
push
cmp
mov
xor
jb
mov
shlb
inc
jmp
pop
xchg
icebp
mov
nop
popf
or
imul
pop
pop
pop
jo
xor
loopne
arpl
pusha
dec
cmp
out
pusha
sbb
dec
aam
in
mov
dec
je
mov
cmp
adc
pop
mov
sub
imul
dec
dec
fs
jne
jmp
imul
mov
adc
push
sub
xchg
jp
iret
sbb
fidivrl
inc
sti
lahf
repnz
or
pop
scas
fs
sahf
lea
jg
add
sti
inc
or
sahf
fistpl
push
pop
jno
addr16
mov
pushf
sbb
push
cwtl
xchg
sub
loope
jns
inc
push
movsb
negl
mov
xor
ja
or
push
popf
pop
sub
lcall
outsb
fwait
das
mov
cmp
or
and
pop
out
loopne
rorb
repz
dec
sbb
xor
sub
cltd
cmpsb
cmp
nop
jne
inc
xchg
ret
mov
mov
mov
xchg
xor
sbb
sbb
inc
stos
mov
outsl
es
into
in
test
dec
push
and
std
push
pop
xor
or
loopnew
mov
adc
cwtl
fmul
dec
icebp
push
stos
pop
lret
jcxz
sub
push
sbb
iret
aas
push
or
mov
ffree
pop
inc
adc
or
cmpsl
add
ret
fcomps
inc
xor
popa
and
inc
push
sub
repz
addb
pop
outsb
loop
sbb
into
fs
psubb
andb
push
adc
push
iret
cmp
push
mov
std
mov
cs
jbe
jb
cltd
mov
rolb
mov
xchg
sbb
mov
ds
push
add
lock
push
sub
xor
fldt
aam
mov
aad
dec
xchg
and
pop
aam
xchg
ficoml
sub
or
mov
push
popf
pop
xchg
xor
mov
fwait
dec
sub
mov
ds
sub
mov
dec
int
add
xor
scas
outsb
hlt
sub
fdivr
pop
mov
cmpsb
sbb
jp
fwait
idivl
scas
mov
adc
cmovb
lcall
push
subl
test
mov
in
repnz
or
movsl
leave
mov
push
xor
mov
pop
and
hlt
mov
loop
xor
and
push
mov
mov
and
pop
push
aad
rorl
ds
mov
std
sbbl
fdivrs
out
dec
lahf
or
or
xor
sbb
addr16
movsb
mov
and
xchg
pop
loop
push
push
xchg
loope
cmp
scas
data16
call
fistps
in
xchg
es
mov
inc
in
inc
sbb
les
loopne
xchg
insb
fcoml
sbb
fs
mov
sbb
clc
in
push
jae
dec
fidivrs
movsb
and
mov
sahf
pop
cmp
sub
test
and
std
lcall
aas
pop
or
pop
insb
imul
add
mov
inc
into
fs
pop
xor
test
lret
dec
pop
inc
jno
push
sub
dec
enter
pop
mov
xchg
and
xchg
sub
mov
lret
rclb
pop
je
or
ljmp
mov
cmp
xchg
es
int3
xor
inc
sub
mov
jb
inc
ljmp
mov
push
xchg
nop
xchg
pushf
pop
xchg
mov
cli
xchg
xchg
ret
mov
fists
inc
das
call
repnz
or
in
jb
fildl
and
jg
notb
mov
test
jmp
sarl
aam
ret
adc
push
push
dec
ja
mov
xchg
pop
rcrl
cmp
mov
push
adc
xchg
scas
stos
lcall
movhps
jnp
sahf
out
push
sub
mov
fldlg2
and
cmc
mov
jae
push
test
push
in
fwait
daa
sbb
shlb
xchg
dec
mov
sbb
jle
sub
jl
or
add
shrb
add
out
cltd
fisubl
ret
shrb
push
sub
aaa
cmp
cmp
xchg
pop
subl
xchg
cmp
lods
js
adc
and
xchg
arpl
mov
hlt
addr16
pop
mov
pop
and
dec
jecxz
lahf
mov
mov
mov
inc
cld
test
in
mov
push
jb
mov
add
movsl
ljmp
movsl
mov
sbb
mov
push
push
jb
fwait
cmp
mov
xor
and
mov
jle
cmpsb
ror
push
repnz
sbbb
inc
sbb
pop
xchg
popf
xchg
in
or
movsl
dec
test
fstpt
cwtl
sub
sub
das
notl
mov
and
lret
leave
rol
adc
fisubs
cmp
sbb
pop
enter
stos
add
fildl
jmp
sbb
sbb
cli
inc
iret
mov
fmuls
gs
xchg
cmpsl
sbb
lock
gs
lea
mov
mov
pop
push
les
xor
mov
sbb
xchg
dec
popf
lret
decl
xor
adc
cmpsl
test
cmpsl
roll
ljmp
stc
aad
test
js
fildl
xor
mov
loope
add
mov
repz
sbb
leave
loope
loope
pop
sti
ljmp
push
pusha
dec
cmc
and
and
xlat
mov
sub
repnz
mov
push
mov
pop
sti
jns,pn
mov
dec
add
subb
add
imul
jge
dec
fisttpll
scas
ficoms
sub
dec
aaa
sub
adc
or
test
cmp
cmp
add
xor
mov
jmp
cmp
and
push
xor
sbb
fnstsw
inc
jb
ret
inc
mov
dec
enter
les
mov
jns
push
pusha
inc
gs
hlt
pop
and
jl
xor
jo
sub
sub
push
roll
loope
adc
jne
and
jno
popa
aad
lds
xchg
roll
loope
adc
jne
and
jno
popa
aad
lds
xchg
roll
loope
adc
jno
and
jno
popa
loope
icebp
add
roll
push
stos
out
mov
push
sahf
int3
int3
int3
int3
int3
test
xchg
shlb
mov
nop
nop
clc
mov
and
adc
xor
test
xchg
shlb
aad
in
cmc
fadds
jo
pusha
inc
jl
add
jne
test
xchg
shlb
aad
in
cmc
mov
push
add
inc
inc
es
es
sbb
icebp
mov
fsub
lret
test
cmp
int
ds
enter
lea
push
pop
lods
dec
lds
sbb
mov
adc
push
leave
xor
and
jp
dec
iret
lcall
das
inc
stos
cmc
mov
sub
add
mov
cwtl
test
mov
lods
xor
cmpl
lret
adc
popf
cmp
and
movsb
adc
cmp
cmc
or
fidivrl
add
sbb
fs
xor
mov
loopne
mov
inc
mov
push
adc
mov
mov
xor
inc
rclb
loopne
nop
aad
in
cmc
mov
and
adc
xor
loopne
testb
cmc
mov
hlt
jne
jo
push
adc
adc
add
outsb
repz
movsl
xchg
hlt
loopne
cld
sahf
int3
mov
sbb
pop
and
add
pop
dec
loop
xchg
mov
adc
cmpb
mov
and
adc
xor
test
xchg
shlb
aad
in
cmc
mov
and
adc
xor
test
hlt
test
sbb
aam
sti
mov
das
ss
imul
push
sti
out
jo
xchg
xor
popa
and
xor
mov
adc
and
int
cltd
sarb
repnz
pop
lret
jp
mov
out
adc
xchg
dec
mov
inc
push
sbb
dec
mov
lea
in
addr16
lods
fadd
lret
cmpl
mov
dec
stc
pop
inc
xchg
out
rcrl
rcrl
jmp
mov
push
js
nop
lret
xlat
data16
test
push
arpl
leave
push
mov
pop
inc
xchg
cld
sbb
test
cmc
jecxz
in
inc
mov
sbb
mov
scas
dec
mov
lods
cmpsl
fwait
in
xor
ret
inc
pushf
mov
push
sbb
stc
dec
aaa
outsb
add
inc
gs
jle
shll
dec
push
loope
ds
shr
jno
mov
dec
mov
pop
push
sbb
sub
test
mov
jp
jae
test
sub
inc
push
push
imul
dec
scas
insl
push
imul
cld
sub
lock
pusha
sbbl
ja
pushf
je
jl
xor
loop
fmuls
mov
hlt
pop
das
and
xchg
xor
dec
sub
test
repz
ds
lea
popf
inc
negb
mov
mov
in
sbb
fcomi
fsqrt
mov
clc
push
mov
dec
pop
aas
repnz
lods
push
xchg
test
mov
arpl
add
sub
jg
and
mov
pop
sbb
or
inc
inc
iret
lea
cwtl
xor
mov
leave
lcall
pop
cmc
ljmp
xor
inc
inc
xchg
js
adc
sar
loopne
sbb
push
sub
add
push
clc
add
test
pop
in
pop
or
ret
jmp
mov
push
jle
push
or
xchg
add
outsb
movsb
push
xlat
ret
rcrb
rcrl
add
scas
ja
push
push
cmp
andl
jp
mov
xor
mov
movsl
push
inc
or
popa
icebp
mov
xchg
push
and
in
rclb
cld
aaa
and
sahf
add
xor
addl
rorl
arpl
sbb
outsl
sar
mov
aaa
arpl
int
sahf
pop
out
mov
xchg
dec
cmpb
clc
jmp
push
push
test
std
daa
inc
mov
mov
imul
mov
dec
inc
inc
sub
jecxz
lret
jecxz
in
pop
movsl
out
int
fdivrs
mov
add
js
mov
fdivl
enter
mov
mov
divl
push
out
inc
inc
mov
push
cmpl
mul
popf
or
adc
sub
pop
inc
and
aad
imul
jl
mov
and
pop
adc
fisubl
rolb
lea
addr16
in
adc
sbb
mov
adc
movsb
push
scas
xchg
addr16
es
ss
jmp
pop
jno
jae
mov
out
inc
xchg
jl
sbb
add
out
scas
add
decb
push
push
rcl
ljmp
mov
sti
cmpsl
insb
fnstenv
mov
pop
pushf
notb
xor
insl
mov
adc
dec
pop
fidivs
sub
enter
jnp
jnp
fdivrl
xor
dec
stos
cmpsl
push
outsb
xchg
inc
std
cli
popa
daa
inc
xchg
and
or
mov
popf
popw
aad
imul
inc
and
sbb
fucomp
xchg
shrb
inc
dec
pop
lcall
lret
dec
mov
ljmp
bound
test
sbb
xor
add
push
cmp
fs
popa
push
sbb
mov
jmp
insl
mov
jbe
lea
push
and
aam
adc
stos
pop
push
loopne
push
adc
adc
jp
out
popf
mov
add
push
push
call
stos
pop
fwait
pop
or
push
push
pop
inc
or
pop
or
xchg
xchg
xor
enter
push
nop
es
inc
pop
mov
mov
sub
xchg
mov
mov
and
mov
lret
shlb
xchg
cld
pop
or
shl
xchg
or
test
adc
xor
aad
adc
push
jmp
ja
pop
sbb
push
mov
lahf
adc
daa
and
loop
sub
outsl
movsb
fdivr
rcr
mov
pushf
outsl
je
and
outsl
lods
cmpsl
shrb
pop
aad
roll
and
jecxz
adc
stos
xchg
in
jecxz
fstp
dec
jecxz
pop
leave
loopne
cmpsb
and
out
ja
mov
push
mov
pop
gs
inc
fidivrs
lea
stos
test
lcall
clc
lods
and
push
add
fidivl
sbb
push
cmp
add
stos
pushf
mov
jg
bound
cmp
sarb
fisubrs
dec
fmull
push
sub
sub
ret
and
push
test
sub
push
mov
dec
mov
mov
push
mov
dec
dec
mov
inc
jmp
inc
loopne
dec
bound
sub
mov
push
xor
in
inc
clc
mov
pop
mov
mov
or
or
cmp
jne
out
sub
pop
push
or
lods
repz
sbb
mov
aaa
cmp
stc
out
repnz
adc
xchg
test
imul
out
clc
mov
insl
mov
iret
adc
push
scas
mov
pop
fisttpl
insl
and
pop
inc
loop
xchg
cmp
add
outsl
xor
adc
pop
mov
out
xor
fwait
pop
jb
sbb
aas
hlt
push
in
jns
mov
and
add
push
jno
jp
cmpsl
mov
and
mov
js
push
or
call
scas
aam
int3
cld
lock
pop
xor
sarl
or
neg
adc
pop
push
xlat
fs
aaa
jg
jb
mov
pop
aaa
push
push
and
test
std
add
clc
test
cwtl
xor
jecxz
mov
sbb
fldt
inc
lcall
adc
lret
test
xchg
dec
adc
mull
ror
add
fwait
es
shl
push
dec
mov
adc
sbb
jg
pop
push
dec
pop
jns
iret
bound
inc
pusha
mov
imul
jo
mov
add
cmc
jmp
in
pop
adc
push
ss
inc
testl
cmp
fwait
adc
add
sbb
ja
and
bnd
dec
mov
mov
data16
jg
arpl
adc
mov
sarl
test
pop
jl
repz
inc
xor
rclb
xlat
cmp
daa
scas
jns
push
cmp
sub
or
sbb
add
daa
xchg
cmp
jmp
ja
add
in
sub
push
mov
in
mov
leave
inc
subb
add
scas
test
pmulhuw
test
addr16
add
out
rol
add
dec
dec
and
lret
pop
hlt
std
cmpsb
mov
popf
fbstp
dec
inc
mov
xchg
sbb
jnp
push
adc
or
mov
sub
dec
std
aaa
sbb
shl
and
jg
mov
outsb
lahf
int
inc
popa
scas
cmc
push
ret
cmp
xlat
dec
jnp
or
jl
rorb
fs
mov
push
jge
dec
jb
aam
popa
jl
pop
stos
or
mov
das
outsb
aam
in
push
inc
mov
sbb
shr
xchg
xchg
fcompl
cs
sub
popa
adc
sbb
mov
mov
ret
push
ljmp
fwait
sbb
rcl
jns
push
mov
std
push
push
loopne
xchg
imul
lods
fwait
decb
sbb
mov
add
xchg
hlt
jae
sbb
dec
enter
jno
mov
push
cmpsb
scas
push
jne
mov
mov
add
push
out
lahf
mov
pop
and
jmp
test
jmp
outsl
loop
xchg
mov
cmp
popf
loopne
aas
bound
jecxz
xor
jp
mov
cmpsl
rcrb
dec
jbe
or
mov
or
mov
rolb
fcmovu
loopne
add
shll
mov
lock
sbb
inc
fiaddl
push
repnz
push
adc
popf
stc
xor
mov
push
outsb
mov
inc
aam
aas
packuswb
imul
mov
jp
cmpsl
pop
mov
add
cld
jmp
movsl
or
dec
jns
push
dec
icebp
pop
dec
into
shll
fadd
xchg
sbb
cmc
and
sub
xor
ret
or
push
xor
fdivs
repz
mov
add
sbb
jmp
iret
popf
aas
add
into
fstps
je
adc
mov
and
jge
lahf
xchg
fsave
mov
or
not
loopne
mov
inc
sub
jg
je
icebp
pop
jl
mov
mov
and
sahf
push
xchg
and
mov
xchg
dec
inc
jl
stos
enter
mov
jae
mov
fbld
fs
mov
xor
xchg
mov
loope
fcomps
pop
add
cwtl
add
add
mov
rclb
add
fdivrs
and
orb
add
pop
or
and
lret
mov
mov
sbbb
sahf
or
adc
icebp
movsb
inc
add
in
iret
roll
add
xchg
out
rorl
loopne
ret
pop
push
push
cltd
fs
mov
ss
mov
jg
xchg
je
fs
pop
push
xchg
jmp
sbb
sub
movsl
mov
test
xor
xor
das
into
mov
loope
mov
cli
lock
movsl
leave
fs
inc
shll
js
fsubrs
mov
in
filds
xchg
enter
pop
xchg
cmc
jns
lods
pop
mov
cmp
enter
sub
xchg
scas
lods
int3
mov
push
adc
mov
sahf
mull
sbb
mov
cltd
jp
cmpsl
mov
inc
inc
xchg
add
push
repnz
pop
in
xor
cmpsb
clc
jns
xor
xchg
fcom
or
iret
jle
dec
cwtl
test
mov
mov
mov
sahf
pop
jle
shl
out
in
sbb
movsl
xchg
nop
push
rolb
hlt
stos
sbb
pop
jle
and
jp
dec
cmp
in
mov
cmpsb
xor
cmpsb
cmc
dec
and
fwait
mov
int3
dec
push
dec
adc
jge
dec
cmc
push
xlat
mov
aam
inc
inc
insb
mov
rcrb
lcall
cld
je
fwait
mov
orps
fisttpl
lds
push
inc
ds
call
add
sbb
and
clc
fldl
out
nop
jecxz
adc
dec
mov
mov
lahf
mov
mov
dec
test
mov
xchg
mov
sub
pushf
das
push
pop
add
enter
in
push
mov
push
das
mov
jle
jmp
lods
aas
mov
sub
push
mov
xchg
int
dec
mov
mov
fs
mov
repnz
sar
fisubrs
xchg
push
push
push
add
jnp
jns
dec
mov
ljmp
jns
lods
call
pop
push
or
test
push
fs
sbb
js
movsb
iret
mov
shrl
xchg
mov
int3
jae
testl
loope
jne
or
cmpl
cwtl
xchg
xor
xchg
leave
shll
ret
inc
fwait
pusha
fcomps
mov
add
sub
mov
push
popf
xor
pop
in
adc
cltd
icebp
mov
lock
popa
sbb
dec
pop
fwait
cmp
loop
and
outsb
xchg
es
daa
add
fcoms
jns
xchg
inc
stos
mov
scas
push
sub
jo
nopl
and
movsl
pop
sub
shll
inc
insl
dec
mov
in
mov
dec
jae
cltd
out
imul
iret
lods
jae
pop
fstp
fisttpll
jecxz
and
pop
xchg
aad
out
dec
adc
test
jg
push
jl
xchg
movsl
mov
scas
aam
xor
imul
insl
subl
aas
jno
scas
jl
mov
xchg
ret
jecxz
mov
xchg
mov
test
mov
dec
aas
out
minps
jg
sub
push
test
or
or
mov
addl
or
xchg
in
mov
push
iret
dec
in
jmp
movsl
mov
inc
jle
enter
inc
call
jb
das
sbb
and
and
push
in
dec
shll
pop
add
jne
andb
cltd
push
xor
lret
cltd
lahf
push
repnz
out
pushf
pop
ss
int
jp
mov
les
jne
ret
icebp
scas
or
and
xchg
jb
adc
in
xchg
orb
xor
lock
aas
frstor
mov
pushf
dec
dec
mov
pop
cmpsb
out
xor
jbe
fwait
and
pop
cmpsb
ret
jo
push
lahf
pop
roll
mov
add
rcl
fdivl
or
lcall
mov
add
mov
into
insl
mov
sub
dec
adc
gs
es
or
insb
and
and
push
add
cmpsl
ds
out
out
pop
pop
add
pop
lds
cmpsl
ret
inc
inc
out
mov
inc
ds
das
add
push
push
fcmovbe
outsb
clc
inc
sub
push
ds
pop
orl
pop
shrl
pop
popf
cmp
add
mov
sbb
pop
mov
imul
jecxz
hlt
jge
add
into
cmp
iret
xlat
lret
int
stc
outsl
bnd
jne
in
dec
les
push
sarb
fs
lahf
cwtl
lcall
rolb
popf
or
add
shlb
pop
lcall
mov
outsb
pop
insb
lret
push
mul
and
inc
pop
nop
mov
emms
repnz
es
ret
sub
ret
inc
stos
mov
lea
jp
sbbb
clc
mov
call
adc
hlt
pop
test
mov
mov
inc
adc
adc
jle
and
stos
mov
cs
sub
or
pop
jecxz
mov
mov
negl
dec
jmp
adc
xor
dec
stc
lods
pop
pusha
loopne
xor
fwait
lfs
lret
xor
dec
jmp
outsb
mov
mov
pop
xchg
push
mov
inc
push
xchg
push
sbbl
cmpsl
fdivs
push
dec
cmp
jl
cwtl
xchg
fsub
jge
fsts
pop
cmpsb
mov
stos
jp
add
cmpsb
nop
test
cli
mov
and
and
fsts
cmp
fst
inc
jns
ficompl
les
sahf
outsb
jp
ret
xor
ret
lret
jo
inc
jge
imul
je
add
int3
mov
rorb
in
inc
cmp
scas
rorb
je
jle
je
imul
cltd
push
inc
or
add
mov
push
subl
mov
push
or
ljmp
out
xchg
cmpl
pop
mov
dec
sub
sahf
push
pushl
insb
adc
inc
leave
dec
inc
xor
mov
jp
mov
or
lock
imul
push
ret
std
pop
mov
jo
xor
mov
ror
sbb
addr16
adc
test
xor
push
add
fnstenv
cs
rcl
xchg
cmp
lret
sbb
jg
sbb
sti
aas
cmp
dec
addr16
clc
xchg
adc
xchg
xchg
aam
fstpt
movsl
pop
cmpsl
or
nop
fldt
mov
xchg
push
dec
adc
in
jo
inc
aaa
xor
push
je
mov
out
repnz
pop
fcoms
test
mov
clc
mov
jge
lods
and
xor
out
pushf
mov
add
cmp
cli
mov
inc
mov
or
orl
lods
or
sti
stc
ja
aad
xlat
inc
jge
fs
aaa
and
xchg
mov
jle
ret
lcall
cli
out
ret
mov
nop
icebp
mov
es
punpckldq
aad
fcompl
pop
in
or
cwtl
inc
pslld
inc
cmp
add
jmp
mov
aas
mov
mov
cmc
fadds
fldenv
push
mov
fbld
lds
mov
cmp
aad
fiaddl
mov
sub
inc
cli
pushf
ja
mov
cmp
add
lret
sub
in
lahf
jl
rcr
cld
out
mov
bound
sub
jle
or
mov
mov
testb
ja
push
daa
mov
mov
icebp
pop
lds
cli
dec
and
jb
jno
pop
out
add
push
or
add
bound
jmp
dec
jg
adc
sbb
mov
cmpsl
jp
cwtl
cmp
sahf
xor
into
push
ret
adc
imul
jl
loop
pusha
mov
sub
leave
push
or
popf
addl
adc
jmp
and
cld
push
incl
add
xchg
jne
jno
icebp
sub
jmp
mov
mov
out
cmpsl
cmp
lahf
push
mov
mov
sbb
mov
add
leave
add
and
jns
inc
test
fwait
mov
call
lods
dec
jb
pop
jo
mov
add
xorl
mov
rorl
stc
pop
jge
xor
mov
mov
loopne
mov
dec
jb
lret
arpl
mov
adc
push
ds
pop
sbb
repz
rol
xchg
pop
fimull
push
jmp
in
sub
push
out
dec
popa
out
lock
andl
xor
shl
into
jb
mov
out
jne
xorb
dec
dec
std
sub
ret
les
cli
std
lods
out
shrb
aam
inc
mov
sbb
outsb
stos
aad
orl
jle
lods
and
shlb
add
addb
mov
mov
es
push
ficompl
test
jae
inc
pusha
pop
pop
and
enter
or
inc
outsl
daa
mov
push
stc
fwait
push
jecxz
das
push
test
fldt
test
jo
outsb
in
out
mov
dec
pusha
outsb
mov
cmp
aam
flds
mov
arpl
cmp
lds
les
sbb
addb
out
mov
imul
sbb
adc
add
inc
popa
fdivrs
sbb
fninit
pop
in
addr16
test
add
adc
sbb
and
popa
mov
pushf
ret
mov
adcb
sub
pop
dec
stos
loope
rolb
lock
leave
pop
cld
popl
sub
jae
outsl
push
mov
pop
insb
xor
push
adc
cmp
xchg
adc
imul
cwtl
fisttps
push
sbb
testl
cmp
out
int
pushf
or
test
sub
mov
loop
jnp
xor
adc
mov
pop
dec
mov
and
mov
stc
or
sub
pop
fdivrs
cmp
mov
ret
loopne
leave
mov
inc
sub
mov
jmp
jno
pop
ret
in
mov
push
xchg
ss
sub
dec
ds
andl
cmp
xor
daa
inc
cli
leave
in
add
dec
push
scas
mov
es
inc
pop
mov
jb
mov
sti
int3
nop
roll
adc
inc
sbb
adc
adc
and
imul
cwtl
mul
push
hlt
xor
enter
aam
pop
mov
insb
into
test
cmp
sub
push
xor
jbe
push
popa
inc
xor
and
outsb
inc
or
sub
jo
cwtl
sub
sbb
cmpsb
push
fidivrl
divb
stos
test
out
xchg
dec
mov
cmp
loopne
sbb
mov
cmp
push
in
arpl
cmp
push
sub
aaa
and
push
into
inc
jg
cs
push
scas
push
je
cmp
cltd
jge
or
scas
adc
inc
or
pop
push
lret
pop
outsl
mov
shlb
rcr
xor
dec
outsl
mov
cmpsl
sbb
mov
pop
dec
fiadds
loope
sarb
or
jecxz
loope
adcl
jb
scas
mov
test
gs
or
pop
jo
leave
divl
repnz
dec
repz
nop
mov
std
ret
cmp
movsb
pushf
lcall
cmp
lds
mov
xor
incl
xchg
and
dec
dec
xchg
dec
sahf
pop
mov
outsl
insb
addr16
dec
popl
test
ss
push
out
mov
roll
lods
into
and
xchg
je
shl
push
sub
cmp
jg
adcb
out
lret
ficompl
out
out
inc
push
mov
test
add
mov
mov
repnz
insl
ds
repz
add
jle
int3
mov
cld
adc
lahf
stc
mov
add
cmpsb
daa
addb
inc
ret
adc
mov
mov
mov
pop
push
mov
or
fwait
adc
sarb
sub
movsb
push
int3
jl
push
cmp
inc
push
ss
mulb
mov
sbb
pusha
loopne
shrb
and
scas
cmpsb
mulb
int
mov
sbb
push
int
add
jbe
and
sbbl
lds
push
test
inc
add
rcrl
cld
dec
xchg
into
shrb
sbb
inc
jge
adc
and
add
push
jle
push
jnp
je
mov
adc
cli
cmp
shlb
xchg
push
es
aad
arpl
mov
dec
in
sti
add
ss
cmp
inc
cmpsb
or
dec
sti
cltd
xchg
test
add
xor
out
mov
cs
idivl
test
push
or
mov
xchg
inc
fbstp
aaa
cmpsb
push
fs
movl
xchg
call
movb
mov
inc
push
aaa
js
jmp
jbe
enter
mov
mov
dec
push
add
and
in
std
adc
cmp
lcall
and
cmc
mov
and
adc
xor
test
xchg
shlb
aad
in
cmc
mov
and
adc
xor
test
xchg
shlb
aam
in
cmc
mov
and
adc
xor
test
xchg
shlb
aad
gs
mov
jo
pop
xor
int3
int3
int3
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
btr
mov
sti
fwait
xor
xor
add
jae
out
push
incl
mov
mov
dec
repz
jecxz
sarl
lahf
xor
add
jae
arpl
adc
inc
push
mov
mov
push
repz
jecxz
sarl
xchg
fwait
mov
add
ss
mov
test
data16
cld
das
cld
dec
rcrb
pop
add
lods
sub
inc
out
mov
call
mov
loopne
push
cmc
cmpl
sbb
aad
orl
mov
push
adc
lahf
push
iret
out
add
adc
jmp
mov
fs
mov
xor
xchg
mov
fcoml
jb
mov
push
cmpsb
mov
pop
sbb
nop
pop
jle
add
sahf
dec
lcall
pushf
lods
dec
pop
push
xchg
pop
mov
repnz
mulb
popl
iret
pop
je
in
dec
ret
aaa
arpl
lahf
adc
pop
push
xchg
pushf
cmpsb
ja
jo
adc
rolb
out
add
inc
incl
mov
mov
pop
repz
jecxz
shll
xchg
xor
add
jae
arpl
push
ljmp
arpl
jp
dec
cli
dec
ljmp
jg
push
repz
fdivrl
inc
iret
adc
add
jle
inc
xchg
dec
icebp
and
sub
int3
dec
cli
push
scas
jb
insb
iret
adc
push
jae
inc
sti
push
out
repz
jecxz
sarl
xor
add
jae
arpl
push
incl
mov
mov
dec
repz
jecxz
sarl
xor
add
jae
arpl
push
incl
mov
ljmp
pop
or
xor
pop
sub
into
ds
xor
lods
mov
inc
packsswb
dec
insb
daa
cmpsb
addr16
jae
cmc
mov
add
fwait
lock
sub
pop
in
xor
mov
xor
in
pop
leave
outsb
sysexit
jb
fsts
mov
lods
mov
aaa
push
mov
call
je
repz
sub
shrb
outsb
cmc
adc
fstpl
cmc
mov
addr16
js
outsb
ret
mov
lahf
enter
gs
aas
inc
test
pop
pop
scas
rcll
sub
lret
sub
mov
cmp
push
sahf
sahf
jb
aaa
repz
outsl
sbb
in
lods
adc
fsubrs
pop
or
ss
mov
push
sub
fcmovnu
in
test
jns
daa
jg
outsb
aad
insl
pop
testb
xchg
mov
rcrl
icebp
xchg
js
xor
dec
jb
pop
xchg
stc
cmp
add
in
loop
imul
pop
push
dec
inc
loopne
pop
dec
cli
repnz
sbb
sub
xchg
aas
cmpsl
mov
xchg
rorl
cmp
es
pusha
aaa
or
stc
fisubl
rcrb
push
add
or
dec
push
cwtl
xchg
jae
pop
sub
adc
ror
repnz
mov
sbb
pusha
cmp
out
xchg
into
outsl
movsl
sub
mov
das
dec
dec
das
dec
stos
imul
negb
or
jnp
adcb
aam
leave
shll
loopne
mov
sbb
std
mov
pop
add
iret
sbb
inc
nop
movsl
xrelease
xchg
xchg
add
dec
adc
sub
fisttpl
sub
pop
loope
jbe
jp
mov
insl
cmp
call
jp
mov
sbb
pop
xor
test
ds
fldcw
dec
lcall
inc
test
dec
mov
testb
mov
jp
mov
adc
popa
lret
arpl
inc
ret
sbbl
idivl
adc
bnd
cltd
aam
jl
mov
mov
inc
lods
xor
push
mov
jecxz
cmc
setno
push
pop
je
xor
mov
loop
popf
sbb
mov
dec
pop
test
lcall
mov
stos
xchg
test
fmul
jecxz
rclb
pop
lods
adc
orl
push
xchg
ljmp
sub
dec
fbld
jbe
add
and
push
out
or
adc
dec
mov
mov
or
push
mov
enter
stc
push
int
mov
and
sbb
enter
add
add
lock
adc
mov
daa
pop
cmc
outsl
testl
pusha
mov
negb
js
in
ja
adc
jge,pn
mov
aad
imul
stc
subl
adc
in
nop
xchg
shlb
inc
aam
lar
cmp
insl
xchg
mov
ds
mov
sbb
outsb
in
or
ret
lock
in
dec
ret
mov
adc
adcb
je
in
fiaddl
jecxz
cmp
push
test
push
nop
lock
test
dec
xchg
xchg
push
test
adc
xchg
test
inc
xchg
add
xchg
cmp
and
adc
lea
scas
addr16
sub
lret
fidivrs
push
icebp
mov
sbbb
or
push
add
js
inc
cmp
mov
push
sub
fimull
sbb
iret
adc
icebp
loopne
test
in
divl
add
aas
fstps
int3
xchg
popf
inc
inc
das
xchg
jb
mov
xchg
ljmp
test
mov
jecxz
rcrl
cmp
mov
je
jge
lret
jg
inc
int3
repz
out
negl
iret
stos
into
push
mov
lret
push
inc
nop
push
xchg
pushf
lock
xor
xchg
inc
cmp
cmpsb
dec
mov
popa
shl
ljmp
push
les
nop
loop
and
xchg
mov
mov
xor
inc
jb
mov
inc
cld
lcall
xchg
or
cmp
stos
push
cmpsb
mov
enter
ja
nop
repnz
lcall
inc
jle
lock
outsb
lock
outsl
jp
inc
mov
jbe
push
outsl
repnz
mov
dec
lret
sbb
add
push
xor
adc
xor
mov
mov
movsb
fidivl
lods
aam
jge
arpl
cmpsl
cmpsl
in
mov
leave
xchg
push
cltd
lea
int3
add
pop
xor
inc
jmp
and
pop
incb
sbb
in
sahf
cmp
xor
mov
cmp
shl
outsb
pop
ret
cmp
in
jle
xor
mov
pop
push
jbe
and
adc
push
adc
shrl
aas
and
inc
or
shrb
add
imul
fxch
or
mov
sub
call
stos
fs
fistpl
xor
ret
and
cwtl
mov
shlb
lret
pop
xorl
leave
and
fcoml
mov
sbb
ret
movsb
adc
pop
pop
mov
sub
mov
mov
and
sbb
mov
scas
push
movsl
sub
scas
nop
xchg
jl
and
outsl
shll
push
mov
inc
insb
out
pop
push
aaa
das
jge
cli
test
mov
push
popf
or
sub
std
cli
ljmp
lret
repnz
pmaxub
dec
inc
mov
jnp
rclb
sbb
in
hlt
cmp
leave
dec
add
push
cmpsb
pop
mov
push
mov
inc
aas
out
ret
decl
imul
lret
mov
adc
enter
mov
in
movsb
inc
cmp
iret
and
insb
sub
loope
dec
andb
pop
or
negl
sahf
dec
inc
xchg
add
jp
jne
add
das
push
xchg
push
adc
popf
aam
mov
popf
out
out
push
test
jmp
mov
out
and
aaa
lds
jns
aad
lret
mov
divb
add
mov
mov
out
jns
repnz
mov
sbb
jecxz
fwait
dec
sbb
pop
leave
xor
and
cmp
jle
or
subl
mov
cmpsb
in
imul
aas
shlb
gs
inc
call
std
cltd
scas
push
fdivrl
dec
xchg
mov
push
mov
xorb
dec
rclb
flds
scas
fimull
imul
jns
sbb
push
mov
pop
dec
push
jnp
fcom
addb
xchg
jo
stc
fistpll
test
scas
mov
ljmp
jbe
int
mov
sbb
mov
inc
push
add
pop
mov
mov
mov
roll
push
popa
xchg
pop
adc
loope
and
aaa
or
mov
inc
mov
mov
ret
pushf
mov
sbb
je
orl
lcall
loope
mov
or
jne
push
mov
jb
jbe
aad
lock
mov
repz
fldcw
or
add
fcmovu
pushf
jp
fistps
test
incb
dec
sti
xor
mov
inc
dec
add
lock
rcr
xchg
call
and
les
push
fsubl
arpl
sbb
imul
mov
mov
lods
add
stos
aaa
push
xor
mov
xchg
movsb
aas
rcl
jmp
insl
fldl
jecxz
mov
das
xor
icebp
test
popa
fiaddl
outsl
js
dec
xchg
jg
test
or
repnz
mov
ss
ficomps
fsubrl
dec
jnp
sub
cwtl
ss
cmp
ret
je
and
fstps
xchg
adc
add
mov
mov
aaa
jnp
xchg
pop
mov
lcall
adc
or
jle
xor
gs
icebp
mov
cmp
and
lock
dec
pop
fnstcw
add
rcll
popa
jg
iret
add
sub
jecxz
call
adc
movsl
scas
mov
jp
rcl
es
ja
cmp
fistpl
adc
in
add
mov
out
jmp
bound
shr
in
addr16
mov
cli
dec
mov
repz
loop
in
dec
data16
inc
xchg
scas
jbe
push
dec
stc
add
push
and
inc
daa
xchg
stos
in
scas
xor
in
cld
out
adc
es
pop
xchg
jne
push
push
lret
and
and
adc
jle
inc
cli
xor
cmc
leave
xchg
out
or
lods
push
lds
das
test
adc
mov
adc
mov
leave
mov
jge
ror
clc
pop
push
dec
movsb
push
and
shrb
aad
outsb
inc
out
xor
sub
fstl
and
js
int3
sbbb
sub
pushf
cld
scas
xchg
jecxz
inc
bound
or
jl
pop
aam
or
lea
outsl
add
xchg
ret
pop
dec
inc
out
cmp
rcll
inc
lahf
daa
mov
inc
jmp
mov
xchg
lock
pop
loope
outsl
idivl
mov
adcl
mov
mov
add
imul
hlt
jl
scas
int3
fdivrl
in
mov
and
lds
and
push
mov
push
push
dec
cmp
inc
stc
jl
addr16
call
outsb
pop
dec
shlb
xchg
fisttps
ja
jbe
insb
into
mov
xchg
or
das
sbb
movsb
mov
sub
decl
inc
scas
adc
mov
sub
xchg
es
arpl
and
sahf
jne
loopne
mov
xlat
pop
ret
rorl
aam
push
dec
mov
insb
stos
jge
loopne
cmp
pop
loope
shlb
fstpt
pop
test
jle
sbb
loop
or
mov
jle
mov
sti
or
sbb
ja
sub
in
je
test
lea
and
les
into
dec
lcall
lea
pop
xor
daa
adc
or
xchg
lret
mov
sub
xor
or
sahf
in
push
inc
aas
jmp
addr16
mov
mov
mov
xchg
jmp
xchg
iret
lret
lods
movsb
cmp
mov
xchg
andl
inc
ret
mov
nop
and
jle
ret
nop
lock
test
xchg
iret
jo
insb
adc
scas
fadds
mov
fstl
out
adc
cmp
mov
test
xchg
push
pop
jnp
fisubl
add
std
or
mov
xchg
cmc
or
repnz
adc
insl
push
cli
out
sub
add
xbegin
mov
mov
in
popf
mov
sub
nop
xchg
mov
xchg
fs
pop
shrb
xchg
cld
fwait
sbb
mov
mov
xchg
cmp
aad
loopne
hlt
add
adc
push
cld
add
dec
pop
into
pusha
fcoml
pop
imul
dec
dec
adc
pop
sub
mov
scas
adc
mov
les
mov
and
inc
int3
mov
push
test
cmp
repz
inc
dec
ljmp
out
mov
cmp
and
pop
ret
dec
inc
or
pop
mov
sub
loope
add
push
enter
out
cltd
out
int3
lret
pusha
pop
es
scas
clc
das
cld
arpl
fisubrs
push
stos
mov
aaa
add
stc
sbb
or
and
rorl
rcrl
xor
mov
inc
jecxz
sahf
mov
es
cmp
dec
xchg
add
fcmovbe
and
outsb
scas
iretw
imul
mov
sub
repz
mov
and
and
mov
inc
daa
mov
das
sarl
and
push
into
daa
cld
inc
test
push
jo
adc
es
cmp
sub
cli
mov
mov
into
cli
clc
sub
sti
mov
or
adc
not
shrb
lock
push
jno
sahf
add
mov
enter
ljmp
mov
pusha
ficoms
ds
mov
inc
pop
mov
cmp
add
sti
xchg
lcall
imul
in
xchg
cmp
pop
push
btc
in
mov
jmp
mov
shl
test
jl
dec
dec
xor
loop
mull
lock
push
inc
lods
hlt
aam
adc
add
adc
stc
xchg
jnp
mov
lds
es
adc
stos
xor
mov
jecxz
xor
addr16
in
imul
scas
icebp
in
stos
fidivs
sti
or
rorb
out
mov
outsl
xor
cmpsb
adc
mov
xor
mov
sbb
imul
call
sub
dec
adcb
call
js
cmpsl
mov
loop
popa
xchg
movsb
popf
lods
lret
mov
xchg
sub
mov
hlt
add
mov
xchg
rcll
fcom
lcall
popa
fildll
sub
frstor
jno
push
mov
sbb
push
icebp
movsb
inc
xor
jbe
push
pop
pop
sbb
sub
sub
jns
adc
fisttpll
push
fs
dec
repz
mov
xor
pop
imul
xchg
gs
push
in
and
popf
push
xchg
popf
mov
nop
pop
clc
push
pop
dec
xor
xorl
jno
outsl
jl
addr16
dec
dec
push
les
xorl
adc
xchg
mov
mov
pop
push
shlb
out
sbb
add
stos
mulb
mov
outsb
popf
add
mov
or
sbb
push
adc
incl
shlb
pop
or
sbb
repnz
xchg
add
cmc
xchg
into
add
in
mov
int
mov
sub
fs
mov
cwtl
add
pusha
bound
aaa
leave
push
sbb
xchg
leave
cmp
shlb
xchg
fwait
dec
mov
inc
lock
cmp
and
lret
sbb
push
aaa
jmp
ljmp
movsb
loope
outsl
jecxz
jne
jbe
and
leave
mov
jno
dec
scas
adc
mov
mov
call
xchg
and
inc
iret
fcoms
loop
lret
xor
lods
lret
mulb
dec
sub
jl
mov
in
jmp
sbb
push
jle
xor
aaa
or
leave
mov
aad
jb
lds
popf
ja
jecxz
mov
dec
cli
lahf
repz
jecxz
and
sub
cli
out
lcall
cli
dec
je
lret
pushl
pop
ss
rclb
adc
insb
subb
push
rorb
pop
je
dec
repnz
push
sub
push
outsb
mov
pop
or
jge
lock
cmp
jb
in
jo
outsb
aam
xor
pop
jno
inc
int3
pop
mov
pop
mov
mov
das
add
mov
xor
jge
mov
pusha
fwait
add
popa
test
pop
add
mov
lret
cmc
cmp
ret
cmp
adc
stos
leave
es
push
xchg
mov
inc
jnp
les
mov
cmc
dec
inc
fwait
and
pusha
mov
stos
add
je
das
add
stc
xchg
pop
stos
roll
sbb
add
push
or
mov
int3
fildll
fists
xor
shrl
jp
and
cltd
or
std
imul
sub
ljmp
daa
addr16
lea
dec
sti
push
push
aaa
xor
scas
pop
jns
bsr
mov
imul
push
lods
je
in
lret
sbb
adcb
data16
dec
sbb
rorl
sub
in
mov
repnz
jge
add
aas
xchg
pop
mov
sbb
mov
add
test
jle
xchg
loope
inc
loope
jnp
sub
shl
mov
xorb
xchg
aaa
inc
adc
ss
movb
or
add
inc
aaa
fnsave
std
pop
daa
and
cmp
dec
call
ljmp
push
or
xchg
mov
cmp
or
outsb
fwait
and
inc
jb
xor
movsl
daa
adc
sbbb
cmpsb
and
push
pusha
push
lds
in
and
mov
push
push
iret
addr16
pop
test
jb
mov
test
sbb
jne
dec
scas
xor
cmp
push
dec
cli
inc
cltd
mov
xchg
mov
xchg
cmpb
ja
mov
in
inc
fnstsw
and
pop
repz
cmp
cmp
mov
add
cmp
pop
cltd
mov
jmp
sbb
mov
setno
imul
out
lcall
sbb
jns
cltd
mov
add
inc
icebp
sub
push
out
inc
mov
sub
dec
jbe
cs
cmp
js
adc
movsl
xchg
popa
mov
out
rcpps
nop
add
pop
xchg
fbstp
repnz
dec
mov
xor
into
dec
jmp
data16
jb
gs
add
popf
loope
dec
scas
bound
jne
fstl
mov
jnp
pop
mov
and
pop
mov
adcl
dec
push
jbe
gs
testb
sub
push
scas
xor
sub
ja
jle
js
add
jg
test
nop
pop
mov
incb
mov
cmp
rcrl
fsub
sahf
out
shll
inc
sbb
test
fdivl
sbb
jb
movsl
sbb
cmpb
adc
in
lret
leave
pop
int
and
dec
and
out
out
mov
adc
addl
ds
pop
xor
jl
pop
rcll
push
xchg
cltd
fwait
jb
dec
or
and
xchg
inc
movsb
idivl
inc
or
dec
ffree
out
fldenv
xchg
inc
add
out
xchg
mov
das
pop
stos
dec
arpl
stos
rcrl
inc
add
sub
pop
dec
in
aas
aaa
mov
mov
lret
cli
aas
cld
pop
lahf
dec
out
das
and
dec
stos
rclb
clc
cmp
mov
mov
adc
mov
mov
in
jne
dec
idivl
inc
or
int3
fnsave
sbb
add
out
cs
xor
xor
push
mov
pushf
loope
loope
push
jg
sti
iret
rcrb
sub
mov
mov
in
adcl
es
push
stc
in
inc
dec
insb
sbb
loopne
push
stos
shrl
and
jge
stos
fstpl
leave
insb
xchg
xchg
cmpsl
out
or
mov
addr16
pop
dec
imul
pusha
or
cmp
xorb
aad
insl
add
rolb
pop
adc
loopne
fwait
sub
sbb
mov
push
sti
mov
pusha
clc
push
dec
aaa
dec
add
pop
loope
xor
lods
xchg
mov
pop
lahf
lock
ja
mov
orl
int3
xchg
cmpsb
push
jns
pop
add
cmpsb
pusha
dec
jmp
out
das
inc
jle
mov
and
cmp
iret
jnp
in
into
pop
adc
and
jl
xchg
clc
jp
pop
lods
clc
mov
dec
rorb
dec
inc
addr16
gs
push
mov
inc
clc
movsl
mov
mov
cmp
shrl
cmpsl
fstpl
adc
xlat
insl
mov
jae
mov
icebp
cwtl
and
loope
pop
das
pop
inc
pop
pop
bound
xorl
sub
jbe
popf
jbe
popf
jo
cmc
add
or
ljmp
std
xchg
push
jmp
or
jle
inc
fistps
adc
xlat
in
arpl
sti
inc
pop
jne
adc
mov
mov
xor
xchg
add
cmp
or
mov
dec
lret
or
sbbb
daa
int3
mov
xor
jne
push
je
sti
rol
rolb
adc
mov
xchg
sbb
testl
and
jae
daa
dec
adc
add
imul
mov
dec
sub
inc
int3
in
xor
adc
ds
jnp
roll
and
mov
leave
fimuls
in
lret
add
ds
lods
sub
loope
mov
aam
and
aaa
push
xor
repz
and
inc
test
cwtl
jmp
insl
cmp
mov
in
mov
les
popa
sub
ja
movsb
sub
jae
adc
jo
mov
nop
rcrb
sub
cwtl
push
cli
out
add
mov
lds
cmp
adc
out
cwtl
mov
pop
xchg
inc
inc
test
jae
and
insb
stc
outsl
cld
faddl
jl,pt
cmp
int3
or
fimuls
loope
adc
loop
pop
xchg
aaa
notb
pusha
dec
repz
mov
inc
dec
hlt
add
pop
imul
push
and
inc
mov
int3
out
xchg
int
mov
repnz
add
pop
push
mov
sub
inc
std
sbb
xor
dec
data16
sahf
mov
mov
stos
xchg
mov
sub
imul
jmp
cwtl
mov
dec
fnstcw
mov
sub
inc
repz
fs
jmp
sti
mov
cmp
lds
daa
loop
inc
stos
test
cmc
xor
movsb
pmuludq
cmp
jmp
add
enter
mov
push
imul
cmc
push
pop
fs
dec
lahf
imul
add
sarb
out
lds
arpl
mov
dec
in
jmp
stc
cmp
add
xchg
es
xchg
add
or
mov
je
je
test
lcall
and
shlb
adc
xor
cmp
add
adc
stc
mov
dec
xor
faddl
shll
not
gs
dec
pop
mov
fucomi
mov
add
insb
insl
fldenv
push
pop
pop
push
mov
je
repz
loopne
imul
ja
add
jecxz
adc
jo
push
xchg
icebp
push
jae
mov
xchg
mov
icebp
jmp
mov
mov
mov
pop
xor
xor
sarl
jns
push
imul
mov
xchg
aas
orl
jecxz
sarl
xor
add
jae
arpl
push
incl
mov
mov
dec
repz
jecxz
sarl
xor
add
jae
arpl
push
incl
mov
and
adc
orl
arpl
jg
mov
and
jae
arpl
push
std
inc
btr
orl
jecxz
sar
ret
jo
pusha
mov
sti
push
pushf
adc
int3
int3
push
mov
bound
daa
jb
push
imul
repnz
hlt
xchg
xchg
mov
inc
inc
push
jb
bound
push
add
xor
and
rol
ret
loop
xchg
in
jbe
cmpsb
mov
push
jb
bound
pop
add
xor
and
and
int3
idiv
loope
cld
lock
mov
inc
inc
aas
add
adc
push
jmp
fincstp
adc
pop
cmp
mov
sbb
stos
aas
pop
loop
fstps
pop
xchg
out
mov
lea
mov
jg
imulb
xchg
ret
mov
pop
sti
stos
mov
ljmp
push
int3
fcmovbe
inc
test
or
xchg
or
pop
push
inc
push
add
jecxz
adc
adc
int3
jle
leave
rclb
les
insb
aad
imul
cltd
pop
xchg
test
jbe
aaa
ret
loop
imul
out
sbbb
cmpsb
mov
lods
dec
jp
xor
cmp
test
test
or
cmpsl
out
aad
jecxz
pop
lret
inc
inc
inc
jb
bound
add
xor
and
rcr
ret
jmp
out
xchg
sahf
addb
and
push
pop
addr16
ja
push
dec
js
dec
arpl
scas
scas
xchg
mov
cltd
imul
jmp
mulb
xor
push
pop
jae
jne
and
inc
and
mov
cmpsl
mov
hlt
stc
ror
sarl
pop
xor
pop
arpl
adc
push
xor
and
rol
ret
out
notb
cmpsb
mov
push
jb
bound
push
add
xor
and
rol
ret
out
notb
cmpsb
mov
ror
inc
inc
gs
inc
das
ss
xor
pop
mov
sbb
stos
call
pop
inc
sub
insb
cmp
cld
fs
mov
in
popf
pushf
pop
cmpl
add
cmp
mov
and
xchg
or
jb
aam
nop
fdivs
xor
xchg
jl
xor
lret
add
sbb
rorb
jg
sti
dec
ss
jp
aad
inc
cmpsb
push
xor
insb
push
xor
cs
or
es
bound
popf
adc
sub
jnp
ficoms
cmp
cs
nop
ja
data16
ds
sub
mov
lock
xor
sahf
mov
jmp
jo
or
out
cmc
jne
dec
jecxz
sub
stc
enter
imul
mov
lods
mov
insl
sbb
mov
bound
sbb
out
jge
idivb
out
adc
sub
sbb
cmp
push
loope
cmc
pop
sti
mov
sub
mov
mov
mov
jne
aad
movsl
xor
xchg
or
pushf
xchg
out
cs
fnstenv
jge
adc
inc
dec
dec
inc
imul
pop
std
cs
xor
lds
sbb
std
mov
aam
mov
mov
repz
jl
in
dec
pop
scas
mov
popa
pop
loope
stc
test
sub
gs
mov
xor
dec
inc
jg
sbb
pop
mov
imul
xor
shl
int
lahf
or
in
xor
dec
sbb
int
push
inc
dec
xor
xchg
gs
repz
xchg
mov
inc
enter
lods
cmp
test
xchg
jae
add
leave
mov
sti
imul
adc
cltd
sub
xor
sbb
mov
cli
lahf
push
jge
lahf
or
xor
out
pop
lcall
mov
and
adc
and
inc
aas
ficoml
cld
sahf
jmp
stc
xchg
adc
sbb
sbb
movsb
shrb
stos
gs
sbbl
sar
int
test
std
addr16
jb
and
jae
cmpsb
in
push
lret
cwtl
mov
dec
jns
dec
push
test
mov
fwait
adc
sti
pusha
push
shr
cmpl
pusha
fisttpl
jecxz
sarl
xor
mov
pushf
pop
ss
cmc
fdivl
stos
and
xor
mov
daa
fldcw
test
in
stos
xor
movsb
btcl
xchg
adc
jns
enter
cmc
ds
xchg
jnp
jge
sbb
pop
outsl
pop
push
mov
or
pop
inc
pop
shr
mov
leave
jmp
fldt
popl
adc
mov
add
rorl
mov
fs
push
dec
cmc
mov
inc
jnp
xor
xor
or
mov
cmpsb
jle
test
inc
xor
outsb
cmp
xchg
push
sbb
jmp
aad
out
aaa
fisubl
sbb
fiaddl
roll
mov
lahf
cmp
loope
ss
dec
hlt
xor
lods
xor
mov
xlat
sbb
sbb
fbstp
pop
aad
lods
hlt
faddl
loope
pop
sub
mov
mov
arpl
notl
mov
cmc
enter
push
mov
xor
mov
sub
pop
jno
loop
cmp
call
mov
jbe
mov
cs
std
cld
dec
icebp
popf
cltd
arpl
leave
push
pop
out
push
jnp
int3
jl
cmpsl
out
jno
push
repnz
jns
aam
mov
ficoml
gs
adc
jmp
mov
pop
sbb
push
out
adc
dec
fistpll
lods
or
pop
mov
out
mov
sbb
cmpsl
in
idivl
cltd
pop
dec
ds
xchg
mov
pop
xchg
loope
clc
repz
and
jge
ljmp
scas
lock
ret
loope
jo
rcrb
cld
outsb
hlt
cmc
push
ret
popl
mov
cli
into
leave
dec
xor
push
mov
xchg
out
or
sub
mov
jbe
inc
mov
lcall
fldenv
fisubl
sbb
and
jmp
aad
xchg
movsl
cmpsl
pop
stos
dec
imul
mov
mov
pop
push
test
movsb
jb
movsb
cld
adc
cmpb
dec
int3
andl
jo
mov
mov
jmp
pop
stc
aam
sub
stos
fdivl
cs
jecxz
cmpsb
ja
add
dec
mov
mov
bnd
stc
pop
repz
hlt
jns
sbb
xor
xchg
pop
cmp
mov
xorb
gs
and
jbe
lods
adc
scas
inc
test
dec
fildll
std
dec
inc
popf
sbb
or
ljmp
xchg
scas
rcrb
stc
out
xchg
sahf
pop
call
popa
aad
nop
adc
aaa
das
pop
lea
push
insb
inc
pop
es
test
ja
xor
das
mov
popf
fsubp
and
mov
mov
aas
jnp
dec
in
jnp
enter
and
push
push
inc
xchg
repnz
notb
test
sbb
mov
and
push
mov
shll
ret
std
cmpl
mov
mov
fistps
lds
xchg
dec
cld
insl
jbe
add
dec
push
mov
pushl
jne
jb
adc
mov
ljmp
adcb
mov
iret
pusha
insb
mov
or
adc
adc
dec
jns
add
inc
test
orl
inc
mov
mov
into
ja
aam
dec
repz
jnp
add
pop
mov
mov
mov
cmp
clc
incb
mov
in
xor
pop
mov
mov
ss
insb
push
add
fs
sbb
adc
aam
std
subl
imul
out
dec
shlb
pusha
add
jns
mov
xlat
cmp
push
out
lcall
icebp
jl
pop
out
ret
mov
mov
push
and
sub
xor
and
popa
add
out
clc
insl
ljmp
pop
fists
dec
push
shll
loopne
cltd
or
add
inc
pop
push
cwtl
push
adc
lea
clc
mov
pop
cmp
imul
fwait
les
dec
ret
push
dec
int3
scas
mov
sbb
jmp
je
call
lcall
pop
dec
jmp
mov
cltd
testb
mov
outsl
std
push
test
dec
cmp
push
das
adc
jmp
cld
mov
shl
ret
or
lds
aas
or
mov
repz
addb
fcomps
adc
in
xchg
mov
mov
pop
mov
jb
lret
stc
bound
push
jle
pop
movsl
xlat
sub
repz
jae
adc
pop
or
lock
xor
inc
cmp
aam
inc
fldl
ret
in
loope
loope
sub
dec
in
jg
mov
sbb
pop
mov
ds
mov
cmp
push
jnp
jns
adcb
les
aad
push
daa
jp
data16
jmp
notl
call
stos
inc
cmp
insb
popf
inc
repz
lock
dec
add
cmp
in
xor
std
pop
fbld
icebp
xlat
mov
sarl
push
inc
hlt
pop
or
rolb
and
movsl
sbb
out
stc
lahf
pop
mulb
notb
add
hlt
loopne
idivb
pop
push
test
mov
jns
add
cmpsl
ret
inc
cmp
inc
inc
sar
rclb
jbe
ss
pop
popa
inc
cmp
repz
notl
cmp
push
dec
rcrl
out
adc
addr16
neg
test
shll
test
sub
mov
dec
mov
or
sbb
inc
nop
xor
rcrl
xchg
adc
loope
mov
jmp
cs
mov
enter
cmpsb
xchg
lods
jns
inc
jb
jle
shlb
sbb
xchg
adc
jae
aaa
mov
or
imul
enter
mov
mov
jl
movb
into
rcrb
arpl
mov
imul
sub
and
jns
popa
xchg
imulb
cwtl
leave
int3
or
cmp
movsb
sti
cmc
imul
lods
aas
push
push
lahf
scas
xchg
clc
cltd
xlat
xchg
ljmp
loope
sbb
push
int3
sbb
rorb
les
ret
in
popa
sub
out
push
xor
xchg
jae
pop
mov
push
sub
shlb
repz
pusha
jbe
xchg
lds
push
and
test
icebp
jle
mov
call
inc
mov
and
pop
push
test
dec
push
outsb
sbb
fsubs
out
xor
jle
fstps
mov
inc
pop
dec
out
jecxz
test
xor
lock
shrl
inc
insl
fstpl
sbb
pop
xchg
sub
dec
push
fisubrs
mov
ficoml
je
cmp
add
loop
incb
repnz
fucomip
sbb
inc
imulb
or
sbb
adc
or
mov
out
pushf
jne
xchg
adc
pop
adc
cmp
popf
fsts
es
cld
push
outsb
lds
pop
adc
test
and
insb
mov
jecxz
cmp
xlat
xchg
mov
mov
mov
add
shrb
out
jmp
pushf
pop
xor
sub
pop
repnz
cmp
ljmp
mov
ret
test
lods
and
fisttpl
fs
lahf
test
sub
sahf
push
bound
icebp
rcll
xor
inc
sub
cmp
push
xchg
sarl
push
repnz
mov
adc
in
scas
aad
mov
fmull
push
ljmp
add
cltd
mov
sub
xchg
pop
push
xchg
mov
cltd
leave
jge
or
adc
sub
xchg
enter
push
pop
jp
push
mov
push
ss
cmp
repnz
add
out
push
xor
repnz
cmp
test
jns
cltd
xor
push
out
sbb
cld
shll
je
mov
sub
jae
lahf
ficomps
pop
adc
mov
mov
addl
icebp
int3
rorl
ror
ret
pusha
into
dec
sbb
int
or
push
sub
cmp
jo
ret
inc
lock
lret
lcall
and
inc
push
dec
fdivs
call
mov
mov
shlb
test
test
dec
mov
pop
int
stc
clc
mov
jp
sbb
or
lea
push
add
push
ret
lret
insb
ret
int3
mov
into
xor
add
sub
sub
xchg
push
lret
inc
fmuls
fiadds
fbstp
sbb
fstl
pop
sub
xor
jge
xor
dec
mov
inc
xchg
mov
ljmp
cli
mov
mov
cmp
es
sbb
shlb
ja
jecxz
xchg
in
pop
fisubrs
sbb
pushf
hlt
jae
fcmovnbe
fcompl
mov
test
loopne
jmp
pop
cmp
push
and
xor
xor
pop
imul
jnp
pop
xor
mov
cwtl
add
stos
xchg
mov
dec
xchg
in
in
cli
inc
lret
stc
jo
sub
ret
push
imul
mov
inc
ljmp
mov
js
sub
in
ljmp
pop
inc
in
sub
push
lahf
xchg
xchg
adc
and
xorb
cli
dec
shlb
xchg
cmp
mov
fwait
es
movsb
orb
xchg
xor
push
xor
pop
inc
xchg
push
loopne
sbbb
test
aaa
and
xor
es
out
outsl
xlat
leave
popf
pushf
fisubs
inc
add
sub
dec
out
outsb
shrl
dec
call
inc
fstp
std
add
jbe
icebp
stos
arpl
jp
sbb
mov
mov
mov
aaa
leave
sub
jae
out
sti
sbb
in
inc
sbb
push
inc
adc
ss
pop
push
jnp
mov
std
orl
rcll
dec
cld
dec
or
in
adc
ret
adc
mov
mov
and
fnstcw
xor
pop
ja
mov
push
sub
mov
sbb
lea
test
loope
push
and
xor
test
cmpsl
aam
pushf
cmpsl
mov
std
into
jg
popf
not
pusha
pop
xor
les
push
addb
shr
ss
jmp
mov
adc
cmp
es
das
mov
arpl
inc
pop
xchg
clc
xchg
cmp
jge
orb
insb
daa
test
sub
sub
mov
xchg
ds
lods
sbb
sbb
in
js
ljmp
dec
mov
clc
int
scas
nop
and
sahf
or
and
sub
lds
sti
mov
mov
push
in
test
cmp
rorl
dec
sub
cmp
inc
push
dec
and
or
xchg
pop
jns
add
pushf
mov
cmpsb
push
inc
mov
mov
cli
mov
ss
cli
insb
mov
add
lock
addl
mov
push
push
mov
rolb
in
jle
orl
add
lock
push
push
xchg
es
jae
out
lcall
fiaddl
xor
sbb
mov
lea
mov
loop
dec
das
mov
dec
das
sub
sub
xchg
xor
mov
dec
sub
sub
push
lock
imul
loopne
pushf
add
jge
sbb
lds
movsl
ja
dec
mov
mov
mov
mov
jnp
push
jo
jo
xchg
movsb
push
std
mov
fsubl
mull
push
shlb
sbb
pop
rorb
mov
clc
ret
mov
fmuls
cmc
stc
sbb
sub
lea
call
aas
pop
mov
ljmp
jb
sbb
loopne
in
cmp
pop
jl
lock
loop
dec
and
ret
leave
filds
mov
sbb
mov
idivb
icebp
cmpsl
pop
sub
cmpsb
ds
jns
fwait
lock
aaa
xor
add
mov
imul
push
aaa
and
clc
push
mov
lahf
and
sbb
aaa
out
mull
cli
mov
int
lods
dec
inc
and
lods
lcall
adc
xlat
scas
jne
mov
aam
mov
lock
pushf
shr
cmp
pop
add
jne
aam
push
xchg
lret
sub
inc
pop
xor
shlb
pop
inc
and
mov
xchg
mov
mov
mov
outsl
inc
push
xorl
xlat
addr16
inc
test
dec
in
sbb
pop
and
mov
sub
add
mov
es
pop
std
xor
push
lret
mov
rorb
inc
jno
adc
jl
stc
sub
jno
or
xchg
out
xor
mov
fdivr
js
mov
jnp
test
inc
mov
dec
mov
shrb
or
insb
jo
and
fs
nop
cmp
jns
pushf
gs
fisttpll
xor
inc
xchg
scas
fsubr
pop
dec
fldenv
imulb
repnz
int3
xor
mov
push
mov
pop
ret
push
dec
and
stc
ss
test
inc
push
sbb
dec
loopne
mov
pop
cwtl
jmp
hlt
jmp
nop
push
sbb
xor
ficompl
adc
decb
ret
aaa
inc
mov
into
test
fwait
and
sub
adc
or
sbbl
fnstcw
insb
mov
scas
dec
cld
fnstenv
inc
xor
adc
lcall
in
cs
movsl
jl
imul
cmp
out
cli
pop
lahf
adc
push
lea
add
rcr
push
inc
mov
ret
cs
addr16
pusha
aad
or
xchg
sub
aaa
dec
ret
push
sahf
inc
call
flds
scas
stos
jne
inc
mov
nop
std
or
sub
repz
bound
mov
xchg
repz
mov
imul
inc
xlat
je
cwtl
call
push
shl
sub
aaa
mov
xor
icebp
and
arpl
adc
pop
pushf
enter
xchg
lret
inc
push
xor
repz
push
jge
mov
outsl
xor
mov
aaa
pop
inc
jg
call
jg
mov
push
xchg
sahf
push
lret
pop
push
jns
ret
jae
cmp
xchg
scas
push
lret
push
bound
sub
mov
push
cli
xchg
sbb
mov
jle
inc
mov
xchg
shrb
push
adc
or
ss
mov
test
int
shlb
push
call
xor
xchg
arpl
test
jne
mov
sbb
dec
gs
jo
jmp
ret
cmp
outsb
pop
in
pop
xor
lods
cwtl
out
aad
ret
out
mov
pusha
jne
sub
cli
arpl
xor
pop
adc
pop
dec
js
movsl
mov
xchg
lret
cmp
pop
mov
or
or
mov
insl
popa
jo
mov
pop
shl
and
insl
lods
jnp
mov
loope
lret
add
jecxz
mov
stos
mov
mov
xor
mov
jo
cmpsb
movsl
mov
dec
fisubs
scas
ret
sti
mov
out
and
out
lods
and
sahf
or
xlat
sub
mov
pop
jae
subl
cld
pop
mov
insl
stc
inc
rclb
xchg
ljmp
js
popf
loopne
inc
inc
testl
clc
dec
clc
add
cmp
les
xlat
lods
std
dec
lods
test
inc
mov
lods
jae
inc
cwtl
xor
cmp
sub
xchg
and
imul
insl
lods
fildl
stc
imul
mov
xor
xchg
sub
xchg
out
call
mov
pop
push
je
sub
mov
loope
outsb
arpl
out
mov
aaa
call
clc
call
mov
mov
adc
je
jb
enter
push
fldl
xchg
jbe
addr16
cli
and
xchg
inc
xor
jnp
sahf
dec
inc
aas
insl
xor
lock
js
fldl
ds
andb
adc
iret
lds
pop
push
insl
cmp
data16
or
subb
xor
lret
cld
imul
loopne
push
mov
mov
push
popf
and
call
repnz
mov
ds
sub
xchg
xchg
mov
inc
or
loop
add
push
adc
icebp
or
rclb
adc
in
dec
dec
add
stos
pop
jno
push
xchg
mov
dec
cmc
loopne
sub
dec
push
add
data16
movsl
inc
test
cmpsb
mov
jle
cmpsl
dec
imulb
popf
or
inc
test
lea
fsubrl
dec
adcl
fucomip
push
jg
popa
sbb
jne
pushf
jmp
clc
pop
rcrl
push
loop,pt
dec
push
adc
insl
test
jne
push
clc
and
sar
popf
fs
scas
outsb
cmp
rcrl
and
xor
jae
xor
mov
std
js
sarl
lret
cmp
test
cmp
repnz
nop
dec
out
ret
jmp
fstpt
jg
sub
cld
lods
int
iret
push
xor
pop
jg
xchg
dec
std
dec
mov
push
push
test
mov
outsb
pop
inc
sti
mov
outsl
cmp
xchg
rorl
pop
test
rclb
nop
cmpsb
movd
cmpsb
int
xchg
add
gs
inc
xor
shrb
loopne
hlt
pop
dec
shrl
dec
sarb
sbb
into
imul
and
std
push
scas
xor
stc
pop
fadds
mov
out
push
push
out
ror
mov
insl
push
scas
jl
sbb
pop
bnd
fdivl
dec
xor
enter
out
xchg
sbb
insl
call
cmc
lea
pop
xor
or
push
fucomp
push
add
inc
loop
in
sub
out
xchg
xchg
data16
adc
sub
cld
sahf
bound
push
xchg
jecxz
les
mov
leave
mov
insb
xchg
addr16
or
lcall
ljmp
loopne
sub
push
movsl
lahf
loop
cmp
aam
mov
test
push
addps
push
imul
stos
pop
mov
mov
cmp
insl
dec
scas
add
add
sti
xchg
cld
or
cltd
inc
in
les
loope
scas
jnp
cmp
jb
jl
jge
dec
mov
inc
jl
in
idivb
into
pop
inc
adc
cmp
fisttps
push
pop
inc
out
pop
xchg
cmpsb
inc
cmp
xchg
pop
add
pop
sub
mov
in
sbb
push
mov
mov
cmc
inc
xchg
pop
add
and
fsubrl
pop
out
xor
les
and
enter
ljmp
dec
cli
mov
and
inc
pop
bound
out
dec
loop
sbb
ja
jbe
insl
jg
inc
sbb
stos
mov
push
add
sbb
adc
xor
sbb
or
outsb
in
fistpl
xchg
sub
dec
repnz
jl
push
stos
jbe
add
mov
inc
inc
push
pop
xchg
cmc
push
js
fcmovbe
sub
inc
pop
idivl
or
inc
dec
jp
xor
jns
jne
fisubs
inc
push
dec
out
pop
sub
pop
adc
cmp
lds
mov
xor
jo
jbe
push
dec
aad
jl
int
mov
std
adc
xlat
xchg
insb
xor
push
xlat
test
dec
jbe
sub
das
jp
cmp
sahf
gs
dec
jge
mov
xchg
xchg
mov
out
mov
out
cmp
cmpsb
adc
sub
jno
dec
out
jl
xchg
idivl
mov
push
jne
mov
fs
mov
fs
xor
std
mov
addr16
mov
or
inc
pusha
in
mov
mov
aaa
cmp
xor
addr16
stos
gs
shl
fisttps
push
xchg
xchg
sti
inc
mov
rolb
addl
mov
cmc
add
aaa
inc
pushf
push
pop
mov
adc
add
xor
and
rol
ret
out
notb
cmpsb
mov
push
jb
bound
push
add
xor
and
rol
ret
out
notb
cmpsb
mov
push
jb
bound
push
add
xor
and
rol
ret
out
notl
cmpsl
mov
push
jb
bound
push
add
xor
and
rol
ret
out
and
pop
pop
dec
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
arpl
jae
inc
and
out
inc
inc
jb
or
jb
cmp
cwtl
ret
mov
mov
xor
repnz
jae
inc
and
and
push
add
pop
jecxz
repz
ret
mov
mov
and
repnz
jae
inc
and
and
push
add
jb
adc
scas
rcr
mov
xchg
test
pop
bound
aas
push
ljmp
ja
add
dec
stc
adc
out
mulb
sub
clc
add
dec
lods
mov
std
ljmp
cmp
sub
pop
shlb
mov
inc
lock
test
inc
pushf
mov
cmpsl
xchg
ret
movsb
adc
cmp
xchg
arpl
push
fs
es
xchg
xchg
outsb
jle
insl
cmp
shl
xor
xchg
cmpsb
repnz
ret
mov
leave
xor
or
xchg
scas
mov
xchg
dec
ret
xchg
adc
pushf
fdivrs
loope
rcr
call
add
repz
add
adc
inc
and
and
push
add
jb
xor
ret
mov
mov
and
mov
add
imul
cmp
add
adc
jecxz
xchg
mov
icebp
stos
ret
mov
loopne
aad
push
outsb
push
jle
push
push
and
jbe
jnp
inc
pop
xchg
mov
loopne
cmpsl
fldl
out
push
inc
jae
sub
aas
dec
outsl
jo
push
add
jb
xor
ret
mov
mov
and
repnz
jae
inc
and
and
push
add
jb
xor
ret
mov
mov
and
repnz
push
cmp
dec
jl
fnsave
cmp
xor
cwtl
cmpsl
aaa
das
sar
dec
loope
les
add
inc
enter
pushf
xchg
jle
jbe
push
push
sarb
inc
xor
push
into
nop
xchg
jb
out
es
arpl
mov
sbb
or
mov
ja
pop
dec
and
mov
jb
out
or
inc
in
out
fadd
std
mov
push
hlt
ja
popa
pop
imul
decb
fmuls
insb
sbb
sub
loopne
push
jb
repnz
inc
or
xor
ja
mov
cmp
and
clc
pushf
push
inc
cwtl
jnp
test
mov
sbb
mov
and
cmp
incl
xchg
clc
out
adc
testb
push
idivb
mov
dec
add
pop
dec
jno
loop
pop
enter
jne
popf
test
mov
cli
dec
pop
popf
xchg
addb
or
xchg
insl
stos
pop
push
fs
addr16
mov
push
add
push
andb
icebp
in
pop
lds
lods
scas
lret
sbb
ljmp
sbb
faddp
in
pop
xchg
daa
cld
jne
in
inc
dec
xchg
movsb
mov
mov
jl
mov
lods
push
cmpb
cmpsb
test
hlt
call
xor
xorl
xchg
loopne
jmp
repz
movhps
inc
mov
je
imul
lahf
pushf
sub
outsb
cmp
jae
je
sub
cltd
aad
mov
push
dec
fwait
jb
add
xchg
test
jecxz
jle
jns
scas
sub
push
and
stos
into
mov
pop
icebp
xchg
lcall
dec
test
test
aas
data16
cmp
pop
insl
dec
mov
xor
ret
fwait
out
inc
in
sbb
imul
out
mov
or
scas
dec
pop
mov
or
ss
lods
nop
ret
out
push
loopne
cmpsl
pushf
adc
adc
push
cmp
inc
or
fldl
testl
or
mov
cmc
jl
test
ja,pt
add
xchg
outsl
lods
and
into
jl
cmp
test
inc
sbb
es
call
sub
int3
cs
aas
data16
insb
adc
imul
cmpsb
inc
cwtl
pop
push
or
add
xor
scas
adc
jg
icebp
or
or
xor
push
dec
xchg
in
test
cmp
dec
outsl
ret
pop
jg
xchg
or
ffreep
leave
adc
dec
jge
fwait
mov
bnd
pop
adc
mov
jl
or
inc
jl
xor
push
call
sub
jl
xor
movb
mov
js
cmp
adc
add
loop
add
dec
insl
jbe
push
mov
je
jae
loopne
mov
mov
sbb
jns
fsts
jae
jo
in
mov
aad
or
xchg
and
add
or
cmp
jo
bound
dec
xchg
or
add
pop
stos
gs
imul
push
divb
stc
js
add
mov
push
mov
mov
stc
lods
hlt
jnp
mov
shll
push
and
in
push
mov
cld
or
dec
jne
ret
fwait
ret
sub
dec
xchg
repnz
int3
sub
sbb
cmp
outsb
xor
sti
in
out
pop
aad
in
adc
rcr
nop
adc
mov
xchg
mov
push
movsl
push
ficoms
dec
cmp
jne
mov
in
mov
fisubs
lret
sbbl
sarb
repz
mov
idivl
aam
enter
cwtl
add
push
and
stc
imul
ds
cmp
icebp
push
adc
push
xchg
lea
jno
arpl
int3
out
push
es
lock
roll
sub
cwtl
add
mov
adc
incb
sarb
xor
pop
jge
movups
xchg
push
sub
adc
sti
jnp
or
pusha
scas
ljmp
xor
pop
fisubl
and
sub
cwtl
out
aas
adc
lods
wbinvd
add
gs
cwtl
mov
imul
or
mov
cmp
xchg
and
mov
push
sub
or
jecxz
mov
sbb
mov
mov
mov
mov
or
cmpl
and
fs
dec
cmp
fstpl
jg
and
inc
repnz
data16
xor
mov
jl
gs
inc
push
pop
jle
roll
push
iret
pusha
mov
ffreep
mov
xchg
inc
or
inc
rorl
cmp
cmpsl
movsb
mov
outsl
and
out
icebp
pop
fisubl
movsb
cmp
dec
xchg
das
out
dec
sbb
mov
test
pop
or
fisubrl
and
push
push
and
dec
pop
push
or
mov
loopne
fistpll
cld
push
add
cmc
mov
dec
or
and
cmp
xchg
inc
not
pop
in
mov
and
idivl
lahf
mov
and
xor
xchg
pushf
cmp
xchg
sub
stos
ljmp
cmp
jmp
loopne
je
jmp
adc
mov
and
mov
insb
cmp
std
mov
jge
mov
xchg
inc
popf
push
in
js
mov
push
ljmp
pop
cmc
loope
stos
pusha
lea
stos
pop
add
push
xor
inc
sbb
mov
jge
push
cltd
fcomps
cmpsb
jae
jae
adcb
xchg
nop
addr16
mov
data16
pop
inc
jmp
sbb
add
loope
insl
mov
hlt
in
xchg
shll
xchg
imul
stc
mov
push
push
and
out
xor
out
les
mov
pop
mov
xor
adc
push
sub
jle
jge
push
inc
nop
fldl
ljmp
aam
hlt
ficompl
movsl
pop
int3
outsb
outsb
addr16
push
leave
or
arpl
jmp
mov
mov
js
jb
cltd
sbb
out
xchg
out
push
out
mov
int
adc
aaa
push
test
ret
jno
jno
push
test
daa
out
insl
lcall
or
lock
repnz
cmp
pop
rolb
sub
jne
cld
dec
call
mov
sbb
cmp
sub
push
mov
mov
inc
lret
test
or
xchg
popf
mov
imul
fisubs
addb
push
mov
inc
add
dec
shlb
iret
xchg
mov
lds
or
shll
cmp
mov
adc
test
test
inc
mov
negl
orl
adc
mov
sub
scas
add
push
sub
inc
mov
clc
jmp
ret
mulb
mov
jg
loop
push
ljmp
and
jle
pop
and
xchg
and
imul
and
mov
leave
bound
out
aas
les
sub
int3
sub
jo
mov
imul
xchg
mov
ljmp
pop
xchg
in
icebp
loope
lahf
sbb
jmp
orl
xchg
aaa
mov
xor
or
mov
and
xchg
or
pop
int3
mov
xlat
je
mov
insb
inc
cltd
cmp
push
add
insl
das
icebp
push
sarb
and
sbb
cmc
and
dec
add
in
addr16
inc
push
jbe
jecxz
jae
or
imul
lret
and
pop
jp
sub
mov
jbe
xor
xlat
test
out
or
bound
out
notl
push
and
add
adc
ret
mov
adc
add
xor
hlt
mov
add
dec
adc
jbe
jmp
cli
call
movsb
nop
cmpsl
aam
push
out
xchg
shll
cmp
cmp
imul
xor
lret
mov
push
dec
outsb
cli
cld
loop
sbb
lods
shlb
xchg
test
cmp
sbb
xchg
xchg
push
push
push
icebp
insl
fadds
les
cmp
loope
add
outsb
xlat
aad
aam
adc
push
mov
cmpl
inc
cmp
gs
cmp
loopne
xor
lea
or
addl
xchg
test
push
pop
push
inc
mov
addl
ljmp
lret
adc
out
sti
sub
cmp
mov
imul
loope
fwait
or
push
jnp
fs
pop
dec
add
adc
std
xchg
mov
mov
inc
add
ficomps
jne
hlt
jmp
pop
call
cmpsl
jae
outsb
sbb
inc
dec
or
and
mov
in
mov
inc
mov
sbb
jge
iret
outsb
add
orl
inc
pop
xlat
jg
push
push
jnp
dec
dec
inc
sbb
int3
xlat
push
jl
or
popf
pop
vucomiss
test
imul
iret
arpl
jecxz
add
clc
and
xor
ficoml
xchg
es
push
mov
call
in
xchg
roll
mov
dec
jae
xlat
lds
pop
push
in
aam
in
push
aam
nop
popa
add
bound
lcall
fisubs
cwtl
xchg
gs
xchg
in
call
imul
aas
xchg
clc
pop
das
test
ss
aaa
mov
xchg
cltd
and
negl
notb
into
xor
pushf
jl
shrl
fbstp
or
mov
movsb
cwtl
insb
movsb
out
int3
ss
lds
and
push
cmpsb
xor
cmp
jae
jae
mov
cmp
jle
push
sahf
ss
aas
add
fwait
or
es
pushf
jge
scas
ss
pushf
ja
gs
adc
repnz
add
xchg
or
jne
popa
lcall
fsub
pop
lea
mov
dec
xlat
dec
in
xor
mov
loop
xchg
adc
and
sbb
scas
mov
push
movsb
adc
mov
ficoml
sub
mov
pop
ret
orb
fwait
jo
pop
je,pn
push
dec
in
push
dec
leave
pushl
mov
icebp
inc
adc
push
xor
dec
loopne
jge
xchg
sbb
mov
stc
neg
nop
mov
xchg
push
mov
dec
cmp
xlat
cmp
into
sbb
xor
lcall
pop
mov
sub
mov
jbe
cmp
pop
iret
inc
iret
or
jmp
jecxz
cmc
cmp
xor
push
fmull
fisttpll
scas
mov
xor
mov
test
dec
rolb
fisubl
mov
sub
mov
jnp
jg
addl
cmp
movsl
out
test
popa
lret
mov
jae
orl
into
fsubrl
sub
inc
push
push
pop
adc
icebp
clc
sub
fildll
or
push
inc
add
into
iret
out
sbb
nop
cmp
push
enter
cmp
movsl
int
sbb
pusha
mov
ja
popf
push
data16
icebp
lods
sbb
jg
lods
cld
ds
cmpsb
and
jns
mov
dec
cmp
adc
in
sarl
adc
stos
ret
jnp
sub
mov
outsb
mov
jmp
es
xor
mov
sub
cltd
and
mov
mov
enter
adc
xchg
pop
int
rol
pop
in
fwait
mov
js
aaa
pop
cmp
mov
adc
and
divl
sti
xchg
outsb
repz
out
out
inc
ret
mov
sahf
mov
aam
mov
cli
pop
aaa
inc
push
xchg
sub
and
jns
add
add
jl
pop
pop
loopne
std
js
pop
cld
dec
insl
insl
mov
int3
mov
push
outsb
les
mov
mov
jl
out
push
xor
or
inc
inc
push
clc
lahf
xchg
push
add
loop
out
jo
mov
or
lods
push
adc
iret
stc
add
lods
fwait
cltd
push
pop
or
cmp
mov
js
test
cli
stos
mov
lds
insl
or
mov
jne
in
out
jns
aam
and
cmp
roll
outsl
es
test
repnz
not
or
xor
mov
cmpsb
rclb
fwait
icebp
xchg
sub
std
in
data16
cmp
gs
adc
mov
repnz
test
call
sarb
jg
aam
sbb
jmp
loope
es
sub
inc
jmp
popf
sub
cwtl
mov
scas
clc
mov
leave
mov
out
stc
jnp
and
fidivs
dec
sti
ret
mov
cld
arpl
clc
das
aaa
lret
dec
mov
inc
pop
sub
fidivl
pop
div
pop
and
xor
adc
les
into
hlt
xor
popa
mov
ds
sbb
pusha
jbe
pop
push
outsl
fcmovne
mov
mov
lods
in
in
mov
or
sbb
out
inc
adcb
dec
or
mov
cltd
imul
sti
hlt
aam
ss
xor
sbb
cmc
stos
jmp
push
jmp
or
lds
cmc
lods
jbe
shlb
push
mov
and
xchg
dec
imul
or
xchg
pop
aas
xchg
xchg
adc
push
xor
push
ds
adc
inc
sbb
jmp
std
adc
in
adc
stc
mov
addr16
ja
and
dec
andb
scas
sahf
repnz
mov
inc
imul
arpl
das
pop
push
out
and
mov
lret
in
in
push
enter
mov
mov
mov
out
and
jo
stos
and
sbb
push
mov
pop
or
lods
mov
cmc
aad
xor
stc
addr16
iret
xchg
dec
cltd
push
dec
add
rdpmc
xchg
jo
mov
cmp
lods
inc
push
int3
lahf
jnp
jl
lret
and
rcr
push
push
gs
repnz
dec
mov
jae
cs
inc
add
adc
dec
xor
aam
xchg
cmc
insl
pop
in
cmp
jmp
mov
fucomi
mov
xchg
mov
popf
outsl
inc
into
cld
imul
push
mov
out
cmc
add
arpl
mov
mov
mov
mov
pop
mov
mov
xor
adc
addr16
or
outsb
push
pop
dec
sbb
cltd
icebp
dec
or
dec
inc
mov
enter
sub
mov
int3
sbb
movsl
cmp
mov
cwtl
dec
sub
insb
pop
adc
or
dec
cld
jbe
adc
lret
in
rorl
ret
fiadds
daa
push
call
out
nop
daa
xor
mov
cmp
cmpsb
push
cmc
and
or
out
shrl
in
test
hlt
movsl
leave
sar
mov
outsb
bound
iret
aaa
test
cli
pop
nop
aaa
add
pop
jae
push
xchg
inc
loopne
pop
repnz
and
jbe
and
cld
push
or
ljmp
outsl
mov
stos
fidivrs
shll
cmp
movsb
mov
cmpsl
fldl
jnp
nop
aam
sub
fistpl
mov
push
cmp
mov
mov
mov
test
mov
ret
lret
push
lods
test
cwtl
cwtl
inc
rcrl
test
mov
cmpsl
les
mov
xchg
mov
rcl
push
loope
cs
ja
pop
or
cld
das
out
push
jmp
fwait
jle
stos
lret
pop
into
ja
jno
mov
or
xor
lret
int3
ret
testb
jae
push
push
mov
push
dec
mov
inc
loope
inc
add
lods
cmc
mov
out
and
icebp
inc
jmp
cmpsb
into
mov
in
test
mov
ret
test
iret
movsl
stos
dec
push
push
ss
lods
push
push
jmp
ficomps
and
xchg
jp
mov
cmpb
sub
dec
adc
in
cmpsb
nop
adc
testl
mov
xor
pop
xor
pop
lock
push
xchg
push
std
cmp
icebp
pusha
and
pop
pusha
popf
mov
dec
or
mov
clc
adc
or
outsl
mov
sbb
test
or
inc
adc
xlat
sbbb
mov
xchg
aaa
push
pop
sahf
out
inc
ljmp
push
xor
and
mov
out
adc
ficompl
pusha
or
adc
adc
mov
mov
mov
mov
jns
add
ljmp
mov
ficoml
hlt
pusha
arpl
mov
repz
sub
popf
mov
jne
int
cmp
xor
or
adc
or
mov
or
push
out
psrld
ret
jl
shl
and
aas
into
adc
stos
lret
addr16
push
mov
and
mov
cmp
fdivrl
cmpsl
xor
mov
ja
jle
es
jns
cwtl
sti
mov
jae
fst
push
dec
xchg
jae
in
fimuls
xchg
enter
scas
testl
mov
shll
jb
xchg
ret
out
fucomip
pop
mov
pop
jbe
test
inc
inc
lret
mov
popa
aad
add
dec
mov
sub
hlt
mov
cld
in
popf
pop
fadd
lods
xchg
xor
sub
and
push
fs
out
pusha
adc
fcoms
repnz
mov
or
xchg
xchg
mov
mov
cltd
xor
mov
lcall
add
sti
inc
scas
pop
lods
rcrl
dec
out
cmpsl
jbe
cmc
cmpb
adc
lods
add
arpl
lcall
dec
mov
jl
icebp
daa
dec
test
push
out
push
addb
repz
arpl
cmpsb
ljmp
ds
jbe
mov
jo
pop
pop
mov
push
out
push
xchg
cmp
shl
mov
push
xor
xchg
xor
sub
mov
stos
cmp
and
push
cwtl
movsl
cld
sbb
mov
int
jge
mul
cwtl
mov
ds
mov
mov
xor
insb
mov
sbb
jl
xor
fnstcw
and
popa
adc
popa
stos
je
fdivl
dec
ret
fdivs
mov
ljmp
xor
imul
jecxz
xorl
in
cmpsb
jb
xchg
adc
repnz
xchg
or
lret
push
jmp
fists
in
and
les
sub
outsl
jo
dec
or
lret
inc
inc
rcrb
imul
and
pop
cmpsl
aad
jmp
outsb
adc
mov
mov
sbb
sub
and
scas
fisubl
fmulp
xor
loop
jae
cmp
xchg
iret
adc
add
sub
ret
dec
pop
push
cmp
rorl
mov
xor
arpl
inc
mov
jo
test
mov
icebp
call
aam
movsl
orl
cltd
ljmp
in
inc
dec
push
jns
pusha
shl
adc
add
and
jecxz
sub
in
into
sub
test
cmp
lret
stos
jp
xchg
fidivrs
shl
jle
es
xchg
pop
sbb
dec
xchg
sbb
mov
mov
xor
fwait
jle
add
loope,pn
push
shll
jns
aaa
and
mov
jle
cmpsl
lret
aam
in
adc
loop
add
movsb
sub
scas
mov
loope
push
push
push
jnp
mov
sahf
cld
lock
jecxz
sub
repz
popf
stos
sub
mov
mov
into
fsubl
aas
lods
lods
movl
add
loop
ljmp
jns
jne
jl
mov
sbb
outsb
jne
dec
adc
pop
mov
cwtl
push
inc
inc
popf
test
shrl
mov
out
pop
pcmpgtb
and
push
pushf
pushf
in
insl
ss
or
mov
cwtl
xor
or
icebp
sub
and
adc
sbb
xlat
dec
dec
mov
sbb
js
shlb
adc
or
out
cwtl
popf
mov
sahf
or
mov
lds
cmpsb
xchg
xchg
lret
sbb
in
push
shll
test
sub
mov
test
dec
cli
mov
mov
dec
pop
mov
out
push
js
push
and
inc
mov
or
pusha
sbb
fists
adc
lock
pop
dec
fbld
add
cmc
pop
and
inc
add
rcr
idivl
icebp
mov
push
lea
icebp
jae
daa
mov
test
cmp
mov
push
ljmp
adc
mov
pandn
mov
inc
ja
cmp
and
stos
mov
sbb
inc
dec
cwtl
arpl
xchg
cld
idivb
sbb
push
nop
cmpsl
popa
xor
add
sub
aas
jns
mov
cli
addr16
xchg
push
mov
pop
andl
shlb
pop
push
shl
lcallw
lock
andb
in
das
iret
or
mov
fidivrl
std
pop
mul
shr
sti
inc
pop
cltd
movaps
mov
push
and
cli
fcmovb
sub
and
push
inc
xor
lret
mov
loope
sti
fwait
pop
add
xchg
aad
xor
pop
xor
dec
addr16
cmpsb
shll
and
jle
sub
popf
xchg
lahf
inc
movsb
sub
mov
dec
mov
pushf
imul
dec
ds
es
jo
mov
push
testl
ja
xor
clc
test
push
xchg
inc
add
inc
daa
sbb
fistpl
out
push
cltd
cmpsl
outsb
lock
scas
pop
call
mov
xchg
shrl
insb
aam
xchg
loop
jecxz
adc
popf
pusha
or
imul
adc
loop
and
scas
mov
out
daa
pop
pushf
push
adc
cld
fndisi(8087
jbe
aas
cmp
in
notb
cmp
ja
arpl
push
out
or
cmc
xchg
lods
mov
push
ret
dec
icebp
stos
xchg
push
pop
test
ljmp
daa
pop
repnz
ja
icebp
inc
pop
mov
or
adc
jb
mov
jno
lea
adc
jo
adc
adc
scas
mov
movsb
ret
imul
and
cmp
popa
or
push
inc
xchg
jbe
test
stos
mov
pushf
push
and
clc
jmp
pop
inc
in
inc
jns
insb
into
xchg
inc
loopne
repz
fsubrs
mov
out
jnp
std
lds
mov
xor
popf
out
and
push
sbb
cwtl
cld
cmp
test
test
out
push
mov
mov
pop
out
ljmp
movsb
adc
daa
imul
in
jl
aad
xchg
scas
and
xlat
xchg
js
sub
mov
jg
inc
push
rorb
adc
push
xor
inc
xor
bound
jb
xor
ret
mov
mov
and
repnz
jae
inc
and
and
push
add
jb
xor
ret
mov
mov
and
repnz
repz
and
mov
bound
xchg
ret
mov
mov
and
repnz
jae
inc
and
and
push
add
mov
xor
imul
jecxz
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
mov
jo
pusha
mov
adc
add
adc
lret
push
rolb
xchg
and
mov
mov
shll
pusha
mov
mov
push
and
arpl
jge
inc
loopne
mov
add
push
ljmp
mov
rorb
jecxz
xchg
and
fs
mov
ret
add
pop
out
xchg
mov
loope
pop
pusha
aas
pop
mov
or
dec
data16
xor
call
sub
dec
lahf
jecxz
pop
mov
das
sahf
cmp
push
mov
test
in
mov
sub
cmp
sar
out
mov
shrb
scas
jl
fs
addr16
fwait
inc
scas
je
pusha
mov
pop
xor
push
xor
inc
bsf
mov
dec
cld
fdivl
push
mov
dec
and
add
icebp
lret
fdivl
adc
sar
xchg
inc
jecxz
sub
sub
data16
pop
pop
repz
inc
jp
mov
inc
mov
pop
adc
rcr
pusha
roll
pusha
mov
out
xchg
xor
mov
shl
push
push
lods
cmp
xchg
adcl
or
mov
insl
addb
adc
and
les
repz
imul
add
or
inc
ret
pop
lock
and
inc
filds
data16
roll
sbb
or
pop
mov
and
arpl
push
lock
loopne
nop
and
repz
jecxz
shll
pusha
mov
mov
and
arpl
push
lock
loopne
nop
and
repz
daa
push
jnp
pushf
mov
ja
sbbl
dec
mov
loope
xor
sbb
leave
enter
push
insb
out
pop
push
test
mov
stc
inc
movsl
push
stos
je
mov
pop
push
scas
sbb
ss
insl
adc
push
mov
cmpsb
rcrl
xor
loopne
inc
movq
gs
sbbl
outsb
nop
and
je
aas
inc
rcrb
fnstcw
mov
add
mov
mov
sub
mov
pop
and
fbstp
push
push
out
xchg
dec
lcall
test
push
ja
push
idivl
and
lahf
sti
stos
lret
mov
jns
in
and
hlt
sub
shll
sbb
or
jge
andl
push
inc
notb
cltd
xlat
mov
lock
sub
jb
test
mov
test
mov
pop
push
cld
cli
aas
adc
arpl
and
aaa
test
xor
loope
movsb
and
jns
addr16
fsubrl
scas
inc
imul
pushf
sahf
xchg
push
test
aaa
and
daa
cmpsl
sbb
push
lea
inc
inc
sbbb
jae
inc
inc
mov
rorl
jmp
scas
imul
cmp
shll
jnp
js
jle
pop
and
call
mov
pslld
mov
mov
fnsave
fstpl
enter
fwait
sub
sbb
sub
jge
dec
or
repz
or
fxch
push
fimull
lea
pop
mov
and
fbld
jmp
inc
or
push
sub
mov
xchg
out
push
cmp
aam
sarb
gs
and
or
mov
pop
mov
push
xorl
test
xchg
inc
es
adc
or
cmpsl
inc
test
fists
xchg
cmp
mov
hlt
xlat
bound
sub
mov
lret
mov
ss
out
cs
push
loope
mov
pop
int
sbb
mov
jg
test
js
fwait
cmp
mov
fadd
sub
jns
shll
idivl
loop
dec
das
mov
lret
and
ja
nop
push
adc
mov
fbstp
fnstsw
mov
jbe
hlt
loope
ss
lret
xor
xchg
adc
insl
jg
xchg
sub
and
in
lods
pop
repz
sbb
cmpsb
cs
push
fdivs
mov
sbb
int
les
push
aad
inc
inc
mov
inc
ret
clc
cmpsb
clc
stc
adc
cmp
outsb
lock
out
shlb
pop
sub
mov
sbb
xchg
add
enter
adc
movsl
stos
sar
test
dec
dec
incb
xchg
mov
inc
addr16
push
xor
mov
jle
mov
fcmovne
iret
stc
in
int3
pop
mov
sub
mov
jo
frstor
cmc
mov
push
movsl
adc
aaa
lods
sbb
insb
add
shll
add
popa
out
lcall
fdivrl
insb
in
and
jno
xor
gs
inc
adc
ret
popa
pop
inc
dec
mov
inc
clc
repz
ljmp
mov
loope
outsl
pusha
xor
xchg
in
loope
bound
pop
or
inc
loope
in
fisttpll
mov
mov
imul
cmp
in
je
clc
mov
and
or
out
cmpl
add
out
cmc
sbb
loopne
pushw
call
in
mov
nop
fidivs
movsb
add
adc
push
shll
repnz
or
or
imul
pushf
mov
cmp
cld
dec
test
adc
leave
add
imul
lahf
adc
adc
mov
data16
out
cli
or
push
aam
xor
cld
pop
repz
sub
repnz
cmpsb
lret
lods
mov
jg
rolb
xor
add
aam
xor
push
mov
aaa
movsl
movsb
xor
in
mulb
inc
mov
bound
inc
call
in
push
cmp
cmp
mov
jo
orl
or
or
loop
jb
pushf
mov
hlt
stos
sbb
mov
sar
lret
leave
mov
mov
mov
mov
std
movsl
mov
dec
jecxz
push
push
nop
test
cmp
inc
int3
lea
mov
rcrl
repz
dec
sbb
lcall
iret
lock
xor
imul
fisubrs
bound
add
scas
das
gs
mov
ret
xchg
repnz
cmpsl
mov
cmc
mov
nop
repnz
repnz
jg
or
jno
mov
adc
xchg
mov
add
xchg
data16
sbb
inc
out
pop
mov
push
add
mov
sub
adc
jecxz
mov
xor
mov
xor
test
fisubrl
jns
lret
fidivrs
xlat
xchg
push
xor
xchg
fistps
adc
pop
sti
mov
or
sub
cmp
mov
pop
sahf
fstl
orl
adc
int
xchg
stc
xchg
jno
and
data16
dec
stos
popf
int3
mov
in
js
inc
sub
ret
xchg
mov
push
mov
push
pop
mov
or
or
das
inc
inc
xchg
cli
cmpb
adc
ss
loop
lcall
mov
popa
fwait
in
aam
sub
icebp
dec
and
icebp
and
lcall
jns
push
gs
repnz
ja
xor
xchg
cmp
test
cmp
test
jae
push
inc
shr
and
js
int3
movsl
mov
pop
mov
fbstp
enter
icebp
pushf
dec
sahf
dec
xchg
pop
rcrb
nop
pop
mov
lds
xor
pop
das
sahf
scas
pop
aas
xor
or
fmul
xchg
mov
mov
aad
add
xchg
jbe
mov
lods
add
jne
aad
movsl
in
imul
pop
jge
mov
sbb
adc
jne
sbb
stos
add
sub
push
mov
dec
pop
mov
pop
sbb
insb
push
call
mov
mov
and
adc
fistl
leave
orb
add
insb
fdivrs
addb
cli
pop
dec
push
pop
mov
mov
cli
push
in
sahf
or
repnz
nop
sarb
inc
add
mov
push
call
in
or
adc
fcmovu
jle
mov
insb
push
add
adc
loope
jp
mov
call
jmp
inc
mov
xor
push
and
mov
or
fcmovbe
sbb
hlt
push
sti
push
pop
and
dec
inc
cmp
and
xor
imul
cmp
pusha
daa
fcmovne
and
ljmp
loop
iret
adc
adc
sub
ror
mov
xchg
sbb
sub
xor
mov
std
mov
jmp
mov
in
mov
data16
cmp
mov
bound
mov
pushf
bound
push
shr
push
xor
out
mov
xchg
jecxz
js
xor
lcall
out
mov
push
add
in
mov
fistl
loope
pushf
jge
je
or
lds
out
inc
les
add
int
in
pop
mov
inc
inc
pop
push
add
fchs
sub
out
insb
adc
sbbl
int
mov
callw
aas
mov
setnp
xlat
aad
rorb
jl
cmp
mov
dec
jmp
nop
push
xchg
cmpsb
and
dec
aam
dec
std
lods
pop
pushf
sub
adc
pop
mov
push
and
loopne
test
dec
xchg
repz
scas
jb
xchg
pop
dec
adc
mov
pop
orb
shlb
xrelease
test
inc
es
sahf
std
das
rcll
push
aam
pop
js
ss
cs
sub
ficomps
mov
sub
xchg
nop
or
hlt
repnz
or
daa
icebp
enter
jo
mov
js
mov
jnp
mov
or
and
cmc
pop
push
pusha
xchg
cmpsl
lods
cmp
push
fs
push
push
mov
mov
pop
int3
cs
cwtl
inc
test
out
xchg
inc
sbb
or
ret
out
adc
adc
pop
inc
sbbb
pop
xchg
mov
repz
jb
and
gs
lods
idiv
or
add
mov
fists
aaa
fs
pushf
and
arpl
into
out
push
mov
sub
mov
sbb
add
push
daa
popf
icebp
addb
jecxz
cltd
test
test
dec
sbb
stos
push
daa
pop
add
lods
in
mov
adc
fs
cwtl
cmp
cmp
jae
pop
add
je
in
inc
fidivl
icebp
push
fstpl
scas
add
sbb
mov
scas
mov
fsubrl
xor
out
push
ror
popf
jb
insl
cltd
out
mov
add
std
loope
fcmovnb
inc
pop
jmp
repnz
cmpxchg
jle
aas
sbb
mov
and
dec
ret
mov
setnp
mov
test
push
shlb
int3
xchg
movsl
cmp
sbb
jnp
dec
add
icebp
fisubrl
sub
jmp
subl
ret
stc
cmp
and
cmp
sub
add
push
adc
mov
sub
adc
repnz
add
insl
je
icebp
add
dec
or
sub
lock
pop
pop
or
repz
lods
add
sub
addl
popf
add
mov
addr16
rol
hlt
sbb
jge
cld
aam
jp
sahf
fs
xchg
imul
xchg
mov
add
mov
xor
mov
xchg
ljmp
xchg
and
xor
es
dec
mov
pop
or
sub
add
pop
sbb
dec
in
mov
movsb
icebp
out
scas
dec
lods
adc
jo
cmp
lret
lea
test
push
sub
and
in
sub
out
cmc
jle
cmp
es
adc
xchg
daa
loop
push
push
or
loopne
xchg
scas
xor
subb
out
mov
dec
inc
int3
add
or
lods
mov
pop
or
cltd
bound
insb
test
mov
cli
dec
jnp
xchg
jmp
cmpb
sbb
mov
lods
inc
xchg
rcll
bound
adc
xchg
lahf
mov
or
mov
xchg
pushf
in
or
jp
ret
mov
xor
sub
mov
loope
cmpsb
imul
scas
imul
inc
xchg
dec
out
addr16
inc
out
jg
inc
adc
inc
data16
cmp
iret
jno
ja
ljmp
hlt
xchg
mov
cmp
push
jg
in
sub
mov
add
sub
imul
repnz
cmp
push
xchg
mov
pop
sub
sub
bswap
xchg
in
xchg
stos
dec
idivb
das
and
icebp
popa
fdivrs
aad
push
lcall
xor
mov
push
fdivs
sbb
xchg
test
xchg
jge
jo
sbb
xor
jl
xchg
inc
push
cmp
inc
pop
mov
mov
stos
mov
lcall
daa
sarb
nop
sbb
cmp
ret
test
enter
pop
aad
xchg
hlt
dec
call
pop
cmp
mov
addr16
inc
aam
int
insb
mov
pop
out
dec
les
fidivrs
sti
rcl
out
push
dec
rorl
sbb
stos
rolb
sub
add
jecxz
adc
adcb
push
sbb
sub
inc
test
loop
jg
rcll
cmp
lock
lret
aam
add
fsts
in
jbe
in
fwait
mov
lods
inc
movsl
add
or
popa
iret
shll
sbbl
loopnew
and
pop
jp
xchg
clc
mov
jg
cmp
aas
inc
xor
sti
out
inc
pushf
pusha
outsl
in
leave
sahf
pop
icebp
or
test
test
adc
in
leave
xchg
cwtl
aam
push
or
fcomps
pop
mov
test
xchg
or
sbb
jns
pushl
or
push
and
out
ss
cld
inc
dec
xorl
sub
aas
mov
sub
fistl
mov
ss
lods
cmp
sub
mov
dec
lahf
aam
scas
push
ja
aaa
push
mov
mov
cmp
mov
or
lods
mov
sub
bound
cmc
movsb
lea
test
cli
dec
mov
sti
jle
imul
in
in
sub
pop
arpl
sub
adc
aad
clc
cmp
mov
pop
cmp
and
lcall
mov
mov
dec
mov
cmp
scas
pop
clc
inc
outsb
ljmp
push
incb
xchg
test
ljmp
out
aam
imul
mov
xchg
mov
mov
shrb
ljmp
mov
mov
cmp
mov
in
add
sub
lods
insb
and
xor
jae
lret
cli
inc
push
fbld
mov
data16
xor
cmp
jnp
inc
mov
stc
nop
dec
out
push
in
das
das
inc
cmc
adc
imull
cmpsl
pop
or
and
sub
sbb
daa
dec
cmpsl
push
sbb
pop
js
shrb
push
bnd
jg
mov
sbb
jbe
leave
push
sbb
adcb
pop
mov
insl
dec
js
lret
and
fiaddl
adc
movsb
shlb
sub
lahf
pop
and
add
or
xchg
test
pushf
lock
push
rclb
inc
filds
daa
bound
shl
arpl
cmc
adc
mov
xchg
push
add
test
mov
mov
ja
fbld
add
add
fidivl
pop
pop
pop
add
out
inc
clc
lods
dec
inc
fchs
mov
push
dec
or
jle
repz
mov
mov
lods
out
fwait
das
adc
xchg
sub
jb
imul
xchg
loop
nop
das
adc
xor
fcomps
insl
imul
fildll
inc
icebp
cmpsl
adc
fwait
iret
inc
das
mov
pop
scas
out
adc
decb
testb
ljmp
fistpll
mov
cld
and
ss
cmp
mov
or
fildll
jge
int
daa
int
out
ljmp
dec
scas
mov
movsb
xchg
pop
insl
jae
fs
and
pop
add
xchg
insl
imul
dec
mov
sbb
xorb
mov
cmp
popa
rcll
fucomi
or
inc
mov
dec
jmp
rol
jae
inc
inc
add
daa
and
in
inc
mov
sahf
test
jno
push
mov
out
ret
movsw
add
mov
jp
loopne
xor
call
jnp
test
mov
js
push
mov
pop
into
js
cmpsb
sti
inc
or
mov
mov
mov
js
cld
push
mull
cs
dec
inc
fwait
mov
jg
shll
and
shlb
loope
jno
std
lock
fstl
mov
dec
cmc
pop
addb
outsb
sub
rol
push
data16
jecxz
mov
jge
mov
test
ljmp
iret
push
sbb
out
into
in
or
inc
xchg
and
mov
stc
sti
push
ret
sbb
shll
push
clc
sub
aas
mov
sbb
mov
clc
mov
test
mov
sub
cmp
xchg
inc
mov
movb
outsb
out
xor
inc
sahf
xor
cmp
add
or
popa
mov
inc
in
std
mov
xor
aam
fnstenv
push
mov
movsl
mov
rcl
in
icebp
test
cmp
mov
sbb
stos
test
addr16
lods
lods
lcall
addr16
cmp
xchg
repz
outsb
cmp
xchg
add
push
ja
enter
or
push
jle
andl
jnp
and
add
sahf
cs
xchg
xchg
xchg
imul
cmp
xorb
push
out
out
xchg
jecxz
insl
cs
jmp
xchg
sarb
jo
sub
ss
imul
mov
cmc
sbb
add
sbbl
scas
dec
jg
fwait
xlat
add
push
out
in
mov
mov
inc
mov
daa
push
adc
iret
leave
and
mov
lods
push
mov
and
pop
jge
test
loopne,pt
dec
sub
jns
cltd
push
mov
pop
sbb
insl
popa
adc
push
adc
dec
xor
mov
or
daa
loope
jns
mov
scas
shr
mov
pop
stos
iret
je
pop
frstor
cmpsb
mov
push
pop
sarb
push
roll
push
xchg
dec
cmp
fdivs
jp
xor
popf
lods
add
sub
movsb
out
and
adc
testb
lea
and
fists
add
add
imul
pop
test
xchg
inc
in
mov
pop
cmp
mov
je
mov
adc
push
loope
scas
add
or
lds
mov
shll
xchg
xchg
sub
fisubrl
add
int3
negb
push
int
pop
je
push
enter
call
ret
rolb
es
push
out
add
jne
push
mov
add
mov
mov
or
pop
dec
ljmp
fcoms
and
mov
inc
jae
lds
cmp
mov
outsl
xor
clc
mov
iret
movsl
inc
dec
roll
inc
adc
stos
jno
inc
jle
jnp
ret
loopne
aad
dec
pop
movsb
sbb
jmp
and
or
jno
jle
inc
lods
inc
jle
adc
out
adc
sub
cmpl
insl
insl
ret
pop
cmp
frstor
xor
cld
ret
pop
mov
popa
bound
js
or
outsb
fnstcw
lret
push
imul
or
rcrb
xor
stos
in
lea
cmp
loope
fwait
or
jp
ret
jb
mov
push
loop
call
mov
popa
aad
pop
inc
out
loope
xor
frstor
push
push
adc
dec
xor
cwtl
pushf
push
iret
fildl
mov
clc
sbb
dec
jno
jae
cmpsl
shll
adc
int
repnz
lock
add
repz
mov
cmp
frstor
mov
dec
dec
xchg
incl
cmp
mov
sub
mov
sbb
xchg
xchg
jb
cs
out
dec
cmp
add
mov
das
pop
das
lds
sbb
add
data16
pop
push
ljmp
push
leave
shlb
xchg
pop
into
nop
and
addr16
shrl
jge
ret
push
jmp
mov
xor
push
sti
rolb
fs
dec
ret
addr16
mov
jmp
sub
xorl
aas
add
dec
xor
and
shlb
mov
std
cmc
mov
shl
pushf
cmpsb
and
inc
lods
pop
ljmp
push
sbb
into
arpl
mov
lahf
mov
jne
insl
in
mov
mov
sahf
lret
mov
and
mov
mov
pop
test
addb
aas
xchg
adc
movsb
xchg
xchg
aad
cmp
sahf
adc
movsl
cmp
out
xchg
insl
repnz
sub
ds
loop
enter
jmp
push
and
and
pop
repnz
arpl
into
dec
xchg
scas
fnstcw
sbb
mov
xchg
cmp
fbld
push
push
dec
dec
adc
sbb
scas
inc
sub
pusha
mov
mov
mov
fidivrs
dec
dec
push
sbb
repz
loop
inc
das
lock
pusha
jl
jnp
shlb
setno
mov
sbb
xor
mov
xor
and
sbb
cmpl
imul
jle
jg
and
scas
xchg
data16
mov
sub
or
sub
mov
aam
int3
addr16
jns
lock
in
sub
jp
int
mov
lods
test
add
jno
push
sub
push
xor
mov
incb
adc
mov
or
shl
jae
daa
and
out
cmp
ljmp
adc
imul
xchg
xlat
cmp
pop
push
push
fs
sub
xchg
sub
mov
adcl
add
inc
pop
nop
or
pop
jge
sbb
cli
dec
jle
jne
cmp
mov
popf
xchg
ss
arpl
xchg
or
cld
aam
into
outsb
enter
inc
adc
push
stc
out
sti
mov
jecxz
xchg
iret
jae
mov
cmp
scas
xchg
ficomps
pop
mov
insl
mov
sbb
arpl
addb
shlb
out
and
test
js
add
orl
fists
mov
jne
inc
xchg
mov
in
sar
mov
inc
mov
jmp
xchg
inc
popa
lret
jns
into
mov
dec
test
pop
jge
test
lds
jmp
sbb
push
jp
xlat
cmpsl
mov
pop
cmp
iret
dec
xor
jecxz
pop
dec
fisubl
inc
bound
sbb
in
in
call
xchg
xor
xor
push
adc
insb
leave
push
dec
cltd
jae
fcoml
mov
dec
iret
loopne
scas
fnsave
fs
pop
inc
dec
stc
out
and
jmp
mov
lock
nop
pop
fdivr
jbe
mov
insb
dec
cmp
cld
pop
dec
adc
xchg
imul
sub
movsl
gs
cs
and
mov
imul
les
jg
es
jne
push
cmp
mov
mov
push
daa
add
test
cmp
push
rcr
sub
cmp
mov
add
pop
aas
icebp
loope
insb
daa
lock
push
jp
lock
les
scas
pop
jp
push
fwait
fs
mov
test
cli
mov
in
adc
mov
jne
pusha
mov
mov
and
arpl
push
lock
loopne
nop
and
repz
jecxz
shll
pusha
mov
mov
and
arpl
push
lock
loopne
nop
and
repz
loopne
ret
push
cmpsl
imul
arpl
pop
lock
jmp
pop
mov
iret
movsb
pop
xchg
jmp
mov
mov
xchg
mov
loopne
das
pushf
push
lock
xchg
inc
call
cld
fmul
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
cld
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
add
jl
add
je
add
insb
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
add
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
add
add
add
add
adc
add
sbb
add
and
add
aaa
add
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
push
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
faddl
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
pop
add
fs
add
pop
pop
add
push
pop
add
dec
pop
add
inc
pop
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
pop
add
mov
pop
add
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
