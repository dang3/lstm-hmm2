add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
out
std
mov
mov
jns
ss
add
add
add
inc
add
add
push
add
add
add
add
add
jl
xor
scas
add
add
add
add
add
add
add
jl
push
add
add
add
add
add
add
ja
sbb
in
add
add
push
add
add
add
push
add
add
mov
add
add
jl
pop
add
add
insl
add
add
add
add
add
add
add
add
add
add
add
addl
add
add
add
add
push
add
add
add
jl
push
add
add
add
inc
add
add
add
add
stos
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
lods
add
push
add
add
add
insl
add
add
add
adc
add
add
mov
in
add
add
add
add
add
add
add
add
xor
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
in
add
add
add
add
add
jecxz
mov
add
add
add
add
add
push
add
push
add
add
add
add
in
add
mov
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
icebp
add
add
test
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
loope
pop
add
sbb
pusha
add
add
add
add
add
push
adc
xor
add
push
add
add
add
add
add
add
add
add
in
add
add
add
sub
add
add
push
add
add
dec
add
add
add
add
add
add
add
cwtl
add
and
mov
and
add
add
add
add
in
add
js
adc
add
sbb
add
add
add
add
add
add
sub
push
add
add
mov
ljmp
add
add
add
in
add
mov
add
add
add
add
add
add
add
add
add
push
add
add
in
add
add
add
lods
add
jl
movsl
add
add
add
add
add
add
cmp
add
add
add
sbb
xor
cwtl
add
add
xchg
add
add
add
sbb
mov
inc
add
add
out
add
add
rolb
add
add
add
add
xlat
lcall
loopne
xchg
out
mov
xor
jl
adc
xor
xchg
xor
repnz
xchg
and
je
enter
aad
jae
pop
test
es
push
xchg
sti
loope
jmp
pop
add
lret
and
cmpsb
movsl
adc
or
int
cmc
mov
add
mov
sbb
in
inc
in
jg
sbb
mov
cwtl
cmpsb
mov
cmp
bound
add
pushf
add
jge
cmp
xchg
sbb
dec
pop
xlat
dec
popl
std
rorb
aam
jecxz
sbb
adc
cltd
hlt
sub
jae
cld
push
and
dec
or
dec
ljmp
mov
imul
mov
or
xchg
dec
cmp
push
imul
daa
gs
jns
ljmp
test
in
mov
push
dec
mov
pop
test
mov
and
mov
sub
shlb
mov
cld
mov
mov
ret
adc
jge
movsl
adc
fdivrl
in
pusha
test
std
mov
jns
enter
scas
mov
pop
jle
loopne
dec
xor
js
mov
sbb
sbb
lret
pop
mov
adcb
push
ljmp
jg
xchg
inc
mov
sbbb
dec
call
mov
mov
fdivs
cmp
in
cmp
movsb
stc
pop
cmc
sbb
and
movsb
or
ss
mov
inc
loop
sub
into
gs
test
mov
adc
rorl
fsubrl
cmp
or
xchg
mov
sub
sub
dec
je
pop
out
push
aad
movsl
mov
mov
call
decb
dec
repz
dec
imul
jl
lahf
sub
pop
add
fildl
xchg
mov
inc
pop
insl
jge
pop
in
lds
add
and
adc
ret
scas
daa
js
adc
fwait
std
cmc
ffreep
push
insl
mov
mov
jecxz
out
int3
loope
hlt
and
push
jmp
sbb
and
daa
mov
jp
mov
je
cmp
dec
call
jno
leave
mov
pop
push
nop
pop
push
mov
sahf
xor
sub
inc
out
orl
data16
pop
aad
in
and
mov
aas
cmpsb
xlat
pop
mov
jae
mov
push
xchg
ss
popa
jno
mov
sbb
pushf
sbb
in
jbe
addr16
xor
and
pushf
adc
ret
xchg
daa
dec
pop
or
adc
sarl
jge
dec
mov
ds
xchg
out
testb
insl
imul
and
xchg
out
mov
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
and
xor
inc
je
or
je
cmp
dec
movsb
pop
mov
lds
aad
hlt
pop
hlt
out
call
and
xor
inc
mov
adc
test
popa
movsl
pop
mov
mov
pop
hlt
xor
and
xor
inc
notl
addr16
test
mov
sarl
jb
insb
subl
test
and
cli
mov
pop
pop
jl
inc
call
push
dec
jp
dec
sbb
xor
add
add
dec
push
mov
movsb
in
sbb
jmp
subb
mov
stos
aam
mov
mov
negb
daa
or
lcall
adcb
cmp
cmp
xor
push
mov
jp
sub
pop
bound
xor
xchg
loopne
push
add
xor
pop
cmp
cmp
lret
xor
das
xorl
mov
push
incl
xor
inc
fisttps
out
data16
xchg
test
dec
stos
aad
test
ud2
faddl
adc
and
xor
inc
sti
push
fs
je
test
xchg
xchg
movsb
inc
mov
les
aam
in
mov
add
insl
mov
jne
add
and
lea
idivl
les
push
xchg
jnp
pop
xchg
out
push
adc
movb
adc
xor
pop
push
loope
out
ret
xor
pop
mov
pop
mov
mov
jbe
push
fs
je
test
dec
movsb
pop
mov
les
aam
in
hlt
out
add
adc
and
xor
inc
mov
je
test
dec
movsb
pop
mov
les
aam
in
hlt
out
add
cmp
dec
xor
mov
popf
stos
xchg
add
les
insb
iret
jl
js
jae
stc
push
ljmp
xchg
xchg
js
mov
out
pop
lods
cli
call
outsb
mov
movsl
jmp
xor
inc
clc
push
div
out
rorl
pop
mov
loop
mov
out
fwait
jmp
loope
std
lock
mov
xchg
xchg
loop
enter
icebp
add
sbb
xchg
les
xchg
pusha
xlat
or
je
jo
rorb
sbb
adc
loopne
lahf
sub
bound
dec
loope
jne
stos
mov
in
dec
jne
pop
loope
xlat
and
xchg
repnz
int
insl
test
xchg
jge
xor
iret
hlt
arpl
push
jg
push
sbb
mov
in
int
mov
cmp
mov
sub
adc
cmp
mov
call
jnp
mov
nop
loope
not
add
push
xchg
lahf
ja
mov
jmp
add
mov
mov
fnstcw
or
xchg
shr
rclb
ret
inc
dec
pop
loop
mov
in
loope
pop
dec
cmp
divb
xchg
push
lea
xchg
add
outsl
inc
fidivl
push
or
inc
pop
into
and
jnp
enter
mov
pop
call
aaa
insb
addr16
loopne
adc
gs
mov
push
xor
add
mov
jbe
fadds
dec
sbb
mov
cmp
xlat
push
ror
adc
sar
pop
sti
pop
pop
test
int
push
daa
pop
fcmovne
pushf
insb
lahf
pop
inc
jge
or
inc
pop
or
fdivp
loop
mov
dec
aam
scas
cli
pop
mov
lahf
push
cld
gs
jmp
mov
jb
add
icebp
scas
js
xor
fdivrl
ljmp
mov
mov
mov
popf
inc
insl
adc
xor
mov
inc
push
xor
adc
jns
shl
xchg
mov
cmp
cmp
subl
in
loope
pop
mov
lods
push
pop
fwait
addl
jp
fwait
aam
ja
movsl
adc
or
or
or
enter
jl
inc
jns
cmpl
icebp
dec
fnsave
cmpsl
dec
shrl
inc
ret
xor
push
bnd
push
or
ja
cmp
adcb
rcll
cwtl
push
fnstsw
arpl
cmpsl
sub
dec
sub
pop
sub
inc
clc
clc
das
push
mov
fsts
jle
rorb
adc
xor
or
popf
enter
repnz
sub
movsl
cmp
stos
and
push
push
in
mov
int3
sti
insb
lret
dec
subb
out
aas
and
add
test
int
mov
mov
mov
xchg
and
pop
jns
xlat
xor
xor
push
sar
cwtl
ret
mov
add
nop
aaa
stos
or
push
test
pop
mov
adc
xchg
or
xchg
and
inc
pusha
test
nop
jg
inc
out
xchg
icebp
shll
leave
and
add
or
sub
test
sbb
dec
jo
outsb
bound
inc
or
or
jbe
pusha
packsswb
cld
loopne
inc
nop
clc
mov
orl
push
outsl
in
cmpsl
jnp
lds
rcll
mov
dec
and
mov
and
sbbb
cltd
ja
xchg
inc
dec
adcb
and
mov
hlt
sub
sbb
pusha
test
jo
adc
mov
leave
xchg
jg
int
stos
sub
inc
ljmp
jbe
scas
and
push
rcl
fcompl
inc
mov
mov
jl
cmp
pop
push
adc
cmpsb
shrl
jmp
in
cmp
mov
inc
push
mov
add
mov
fildl
leave
or
fcoml
dec
orb
adc
or
xor
aas
sub
xchg
xchg
inc
dec
add
inc
ds
or
outsb
loope
cs
or
shll
push
mov
mov
in
hlt
add
decl
clc
loopne
mov
sub
add
nop
aad
adc
dec
test
imul
shr
movnti
mov
mov
jo
cltd
ret
jae
mov
ret
xchg
inc
jae
sub
pop
mov
add
pop
mov
or
out
xor
es
hlt
inc
rolb
mov
int3
lock
cmp
adc
std
xchg
or
cmc
lret
cmc
cmc
and
gs
jl
mov
xlat
in
sar
mov
cmp
out
ficompl
push
xor
xor
vmread
cmc
ja
out
out
enter
xchg
repnz
jmp
cld
cmp
push
call
pop
ja
pop
mov
jnp
push
xchg
sub
jp
cmpsl
aaa
call
pand
jno
rcrl
mov
mov
std
pop
and
mov
sub
roll
push
nop
sbb
jmp
and
repz
mov
gs
iret
dec
fisttpll
xor
push
sarl
fs
pop
fwait
mov
mov
shlb
repnz
repnz
outsl
std
jp
mov
adc
int3
add
cmp
push
cmp
xadd
aam
mov
jmp
push
cltd
push
mov
jecxz
xor
mov
fwait
jge
add
xchg
fidivl
repz
fdiv
je
dec
pop
xor
cwtl
adc
pop
rclb
test
jo
cmc
ret
adcl
aaa
mov
sbb
adc
jne
add
add
add
xchg
lock
or
les
jmp
inc
jns
jo
push
sbb
adc
dec
fsubs
adcb
faddl
cld
xchg
sbb
and
stc
outsb
testl
fldl
movsb
lret
test
call
orb
cmp
int
jge
lret
mov
sbb
inc
daa
sbbl
iret
je
lea
cmpsb
or
adc
cmpsl
pop
jmp
pop
fildll
idivl
lods
movsl
std
ret
das
sub
in
mov
sbb
push
out
and
pushf
or
jb
in
pushl
stos
push
call
mov
popa
mov
mov
mov
or
and
or
sub
adc
cld
jl
or
fs
hlt
mov
fistps
lea
xor
test
je
cld
std
fimull
push
rorb
and
decl
pushf
icebp
in
adc
sbb
shlb
pop
push
ret
cmp
jns
sbb
cli
pop
hlt
sub
jne
adc
jle
xor
fcmovb
mov
aaa
enter
mov
loop
aad
mov
icebp
adc
push
jns
dec
call
fstl
ljmp
jl
insl
inc
hlt
push
dec
in
or
or
mov
arpl
mov
mov
xchg
addr16
mov
add
push
insb
pop
dec
scas
pusha
clc
mov
xchg
mov
daa
addb
mov
sbb
push
addl
insb
push
imul
jmp
sub
pop
mov
ljmp
and
sarb
or
inc
sbbb
mov
sbb
or
ljmp
lock
jl
cltd
jne
add
imul
loop
repz
sbb
test
lahf
lret
repz
lods
movsl
mov
pop
push
adc
adc
xchg
ds
push
push
sub
fmulp
fildl
push
adc
adc
add
and
out
mov
sti
fadds
push
outsb
jae
test
out
lock
into
orl
in
jno
aaa
xor
inc
mov
mov
lock
jp
xchg
adc
xchg
adc
leave
and
icebp
and
push
shlb
xor
ljmp
pop
fidivrl
sub
dec
adc
pop
shr
push
xor
mov
inc
imul
pushf
sub
adc
aad
xchg
pop
je
pop
jbe
and
ss
and
mov
mov
xchg
lret
xor
daa
sbb
adc
sti
lret
xlat
and
xchg
mov
mov
dec
inc
mov
test
dec
push
ds
mov
call
mov
push
xor
inc
push
pushf
mov
jecxz
add
mov
sub
stc
pcmpgtb
sub
nop
insl
into
in
mov
push
inc
jo
hlt
lcall
sbb
enter
fld
mov
leave
fldt
movsb
pop
push
fs
xchg
int
notb
sub
stos
mov
mov
push
shrl
stc
xchg
aas
dec
sub
fisubrs
jb
movsl
ljmp
cwtl
xor
dec
outsl
popf
les
adc
lahf
push
add
dec
test
adc
inc
imul
inc
cmp
test
ja
and
inc
adc
xlat
shr
popl
iret
fcomp
adc
jge
or
sahf
imul
test
sahf
xor
sbbb
ss
call
pop
dec
scas
adc
mov
int
negb
lea
xor
std
xlat
mov
repz
sbb
and
pusha
mov
push
jo
mov
mov
aas
shll
or
out
rol
sbbb
pop
adc
in
gs
cli
or
in
std
mov
push
imul
fs
or
icebp
dec
mov
stc
sub
clc
aam
push
stos
aam
cmc
in
aam
add
push
xlat
inc
lea
inc
jp
or
loope
inc
in
call
dec
sti
lds
aas
mov
or
dec
fistps
pop
fistpll
push
scas
and
int
jnp
sarl
lcall
lret
lahf
cmpsl
sub
mov
leave
mov
or
scas
out
jmp
in
xchg
sub
pop
add
push
into
lahf
xchg
int3
cld
and
nop
fsubrs
dec
adc
xor
ja
testb
dec
add
rcrb
in
sbbl
jnp
cmp
rcr
mov
aas
loopne
cmpl
cwtl
inc
out
das
es
pop
pop
sbb
dec
loop
leave
fsubs
lcall
sgdtl
sbb
cmove
xor
mov
lcall
cmpsl
js
xchg
incb
jbe
pop
dec
mov
in
push
sbb
std
xlat
dec
mov
add
in
cmp
xchg
adc
jne
fs
xchg
xor
js
jle
mov
adc
push
push
jle
std
or
push
call
pushf
push
test
push
ret
dec
shrl
add
xor
addb
dec
test
jo
out
leave
stos
inc
xchg
jmp
shlb
js
mov
hlt
sti
xchg
or
ss
mov
notl
popa
es
inc
mov
adc
xchg
cld
hlt
push
shrl
push
clc
pop
jle
in
outsb
sbb
push
cld
inc
repz
mov
fwait
inc
mov
sbb
mov
jns
pop
dec
and
cmp
and
ja
mov
ljmp
lret
bound
inc
adc
gs
pop
xchg
jbe
ljmp
jmp
ret
aas
inc
aas
jo
shll
dec
addr16
push
mov
push
fadds
cmp
and
mov
add
add
mov
ret
into
repz
pop
mov
out
adc
les
imull
sbb
jns
insl
sarl
mov
data16
fnstcw
mov
js
ds
lods
xchg
and
dec
jbe
nop
xchg
lods
inc
test
call
loop
fildl
inc
repnz
fisubs
cmpsl
jmp
adc
add
push
pop
hlt
mov
xchg
jecxz
nop
movsl
pop
mov
pop
pop
adc
imul
xchg
sahf
mov
cli
negl
push
je
pop
dec
add
popf
pop
add
xlat
xchg
pop
sub
ljmp
out
hlt
inc
into
pusha
in
pop
push
mov
jnp
mov
mov
in
jecxz
sbb
je
push
xor
mov
xchg
loopne
roll
mov
jno
sbbb
sub
add
xor
add
cmc
jnp
je
std
push
xorb
daa
roll
mov
aad
mov
jne
test
cmp
fs
hlt
insl
lea
xor
popf
jg
push
scas
pop
jmp
imul
js
jo
outsl
jnp
sub
jmp
insl
dec
dec
xchg
push
aas
mov
fisubrs
lock
pop
arpl
add
push
cli
push
lods
pop
ret
dec
push
scas
ror
mov
add
cmp
jmp
cwtl
dec
add
pop
hlt
push
mov
xchg
mov
out
ss
mov
inc
and
jns
mov
sbb
movb
cmp
mov
loopne
or
test
out
sub
adc
mov
xchg
cmp
pop
dec
inc
xchg
pushf
cli
lret
or
add
dec
mov
adc
sub
add
aas
cltd
xor
add
loop
cli
or
idivb
push
mov
mov
cmp
or
pop
xor
scas
rolb
shl
mov
rcrl
test
jbe
fs
mov
push
test
cmp
pop
push
pop
jnp
jb
in
push
jp
add
sub
adcl
popf
bound
fisubs
test
mov
or
mov
mov
andl
and
pop
pop
popa
mov
pop
sub
shlb
out
jae
sbb
xchg
in
push
jmp
in
push
int3
adc
inc
test
mov
push
push
dec
mov
push
lods
jbe
cmp
repnz
ss
test
xor
sbb
lods
mov
push
jb
jmp
jnp
sub
add
sub
mov
mov
and
pop
gs
out
das
insb
jae
popf
add
dec
les
sub
mov
insb
and
inc
jb
sbb
stos
and
and
sbb
cmp
xchg
lea
hlt
push
fmull
pop
subl
dec
lods
push
adc
pushl
mov
addr16
in
and
nop
cltd
int3
jae
mov
dec
mov
idiv
xchg
jnp
push
xchg
mov
sub
test
jns
aas
mov
popf
incb
xor
shl
imul
pop
hlt
in
cmp
ds
push
pop
int
sarl
xchg
aas
mov
repz
or
int
in
lock
add
ficoml
xchg
clc
and
lret
loopne
cmp
jbe
and
xchg
fidivs
jecxz
popa
dec
mov
push
ljmp
cltd
mov
push
clc
xchg
stc
shrl
pusha
add
out
mov
or
pop
scas
repz
out
dec
cs
jns
jmp
push
imul
pop
and
fstl
and
mov
ja
mov
dec
fcmovnbe
mov
sub
loopne
lods
out
div
xchg
mov
or
adc
push
sbb
mov
mov
out
test
push
fidivrs
lea
sbb
mov
jns
mov
pop
lock
mov
cmp
pop
das
ds
or
xchg
mov
sbb
test
mov
cmp
mov
outsb
clc
in
push
scas
mov
push
xorl
lret
into
sub
lret
adc
add
inc
test
cld
pop
sub
fcmovbe
dec
mov
das
nop
inc
repz
mov
out
jb
loop
cmp
mov
inc
daa
ds
outsb
mov
out
inc
sbb
sub
into
cmp
pusha
in
xor
popf
and
sbb
popf
pop
add
push
xor
jns
xor
popf
shlb
pop
xor
cmpsb
dec
jne
push
stc
outsl
sbb
cltd
cmp
mov
or
js
lods
cmc
je
add
movb
mov
pop
outsb
push
mov
sbb
cmp
xchg
test
es
xchg
aas
xchg
pop
fsubrs
out
outsb
vpsraw
leave
rol
sub
xchg
dec
repnz
xor
push
js
xchg
int
cli
mov
popf
idiv
pusha
jbe
lods
insl
jno
adc
xchg
pop
cmp
ficompl
outsl
pushf
ljmp
aas
sarl
sahf
jnp
push
lcall
cmpsb
out
not
jno
push
push
insl
sub
mov
xor
adc
jno
adc
xchg
pushf
sbbl
pop
mov
sti
jbe
hlt
test
add
xchg
shr
leave
mul
jb
pushf
mov
jp
jae
bound
xor
test
ss
outsl
inc
stos
enter
jbe
fwait
int
mov
cmp
jnp
ret
or
int
clc
cmpsb
mov
cld
hlt
cmp
pop
inc
imul
mov
cmp
ljmp
cmp
stos
pop
das
jecxz
mov
shrb
inc
int
enter
adc
fldcw
insb
mov
into
arpl
push
sahf
adc
push
mov
addr16
ds
sub
mov
and
std
mov
cwtl
push
stos
daa
shl
mov
cld
mov
adc
cmp
popa
xlat
lcall
jmp
ss
sub
inc
lds
or
decb
and
mov
movsl
nop
sbb
and
int3
lret
pop
jge
out
push
cli
aad
inc
in
dec
lret
add
pop
aad
mov
cmp
sub
cli
cwtl
push
les
xchg
mov
insl
sbbb
pop
mov
xchg
xchg
dec
jns
test
push
mov
imul
das
sub
xor
jl
hlt
mov
xor
cmpsl
inc
xlat
and
mov
inc
sub
mov
jb
xchg
sbb
inc
frstor
mov
push
in
psrlq
push
mov
negb
movsl
rol
js
rcrb
aaa
cmc
mov
push
mov
les
imul
mov
or
fldl
rcrb
shrl
fcmovne
int
xchg
in
xor
inc
js
ret
test
lcall
dec
pop
or
mov
dec
orb
mov
inc
ret
mov
inc
sub
aam
sub
testb
cmp
fwait
outsl
pusha
sbb
aaa
push
xor
sub
fdiv
inc
or
out
loopne
icebp
insb
xor
call
dec
xlat
imul
ret
into
cwtl
jmp
jns
add
cmp
nop
bound
ljmp
outsb
xchg
mov
xchg
fmull
sahf
add
insb
bound
mov
sbb
fimuls
jnp
jbe
pop
push
into
repnz
dec
inc
push
cmp
fnstenv
dec
lahf
rclb
rcr
insb
mov
add
pop
inc
rol
jb
jnp,pn
dec
mov
jl
sbb
push
mov
mov
sub
sbbb
adcb
es
jle
push
pop
sub
insl
inc
bound
jb
in
xchg
inc
aas
mov
lret
cld
divl
xchg
and
shr
jp
divb
adc
mov
cmc
sub
sbb
xor
inc
mull
push
loope
mov
add
das
or
add
nop
mov
outsl
cmc
or
sbb
test
and
pushf
mov
xchg
out
mov
cmpb
xchg
pmullw
cmp
pop
jge
push
test
frstor
sahf
aad
into
scas
mov
sahf
push
mov
or
int3
push
mov
mov
das
add
push
push
adc
cmpsb
fdivl
xchg
push
sti
jmp
dec
mov
cmp
das
sbb
inc
cmc
jne
imul
insb
test
inc
or
dec
jle
aas
icebp
lods
mov
sbb
in
push
into
ljmp
pop
sub
in
xor
sbb
aad
and
pop
repnz
insb
cltd
mov
scas
jmp
int3
mov
jl
cmpsb
sti
pop
sti
rcrl
test
adc
and
in
mov
cmp
mov
mov
xchg
lds
inc
mov
jne
pop
pop
mov
adc
add
mov
fistl
rclb
lcall
jno
mov
fs
xchg
dec
and
dec
or
jae
mov
arpl
mov
out
aam
jb
enter
lcall
dec
or
insl
dec
repz
ret
xor
inc
mov
je
test
dec
movsb
pop
mov
les
aam
in
hlt
out
add
adc
and
xor
inc
mov
je
test
dec
movsb
pop
mov
les
aam
in
hlt
out
add
adc
and
xor
inc
mov
je
test
inc
movsb
pop
mov
les
aam
in
hlt
testl
xor
inc
scas
push
fs
mov
test
ret
pop
dec
mov
lock
or
std
sub
mov
into
mov
cltd
and
dec
add
sbb
inc
cmp
mov
in
repz
jecxz
sarl
and
jne
insl
jae
push
or
stos
jnp
or
lods
sti
ret
lahf
sub
outsb
dec
sbb
pop
jae
or
cmovg
ficompl
cmc
mov
ds
mov
fdivs
jnp
bound
mov
jb
xor
pop
push
jmp
aas
adc
mov
push
push
inc
push
push
mov
or
and
jae
push
mov
pusha
dec
mov
xchg
pusha
movsb
lds
pop
dec
add
fs
fcompl
jl
xchg
jae
lahf
icebp
push
jmp
mov
pop
stc
cmpsl
in
or
loop
sub
ret
fsubs
lods
es
mov
arpl
jecxz
xor
add
or
sti
mov
jle
sbb
popf
repz
mov
sbb
inc
xor
mov
shl
jle
int
lods
int3
push
scas
sbb
ss
dec
push
roll
jp
mov
in
in
repz
sarl
cmp
or
push
imul
jecxz
and
mov
cmpb
loopne
enter
push
dec
cmp
jae
push
bound
dec
cs
fcompl
repz
cmp
cmp
das
inc
pop
jae
or
scas
iret
sub
mov
mov
and
jge
insl
jae
arpl
mov
mov
in
repz
jecxz
sarl
and
jge
insl
jae
arpl
mov
mov
lahf
cli
xchg
outsb
mov
cli
fdivr
jmp
adc
pop
cwtl
mov
inc
inc
add
leave
cmp
aas
xchg
fcmovnb
or
sti
aaa
sub
push
pop
pusha
pop
addb
mov
push
inc
or
lods
movsl
and
insb
mov
mov
stc
fmuls
clc
in
sbb
insb
jmp
int
stc
mov
test
or
pusha
mov
sti
rorl
jns
xor
cmp
push
addl
enter
xchg
add
adc
jle
xor
fcomp
dec
cmp
dec
daa
push
pop
es
pop
lcall
pop
xchg
mov
cmp
jmp
cld
cwtl
or
and
mov
dec
mov
sti
push
inc
gs
inc
stos
add
int
je
stos
inc
lods
or
rorb
insb
movsb
mov
fisubl
dec
adc
dec
das
loope
jg
iret
push
in
pop
add
movsb
test
dec
dec
cs
scas
mov
cmpsb
dec
out
and
xor
cltd
pop
add
es
push
and
inc
xchg
popa
mov
mov
lods
push
or
sub
pusha
lods
mov
mov
sub
andl
xchg
xchg
or
and
add
pushf
jo
dec
dec
arpl
push
jmp
push
hlt
jg
loopne
sub
int
pushl
call
fdivl
sbb
arpl
or
out
test
ret
xchg
xchg
push
dec
stc
cmp
adc
in
leave
in
jnp
pop
addr16
in
xchg
cmp
imul
test
pop
pop
adc
jg
je
je
adc
xchg
sub
adc
add
and
popa
mov
push
sbb
out
icebp
xlat
push
pop
jl
pop
push
ds
pop
sub
dec
mov
insl
das
div
push
add
inc
cmp
adc
subl
pop
fdivrl
insl
pop
push
psubb
jno
cltd
fists
aad
inc
push
push
jbe
or
pop
inc
and
aas
in
cld
ffree
cmp
dec
call
jmp
lret
les
dec
mov
mov
jb
fstpt
mov
adc
cmp
xchg
mov
pusha
and
add
lods
repnz
sbb
inc
cmpsb
push
ja
pusha
dec
loop
popa
or
movsl
cltd
je
mov
mov
dec
push
push
mov
das
or
hlt
sarl
xchg
outsl
push
sbb
incb
mov
jp
cmc
jp
out
subl
dec
lds
rcrl
inc
ret
mov
adc
inc
mov
jbe
mov
fcoms
fldl
sub
ds
or
shll
andl
test
mov
xor
neg
icebp
and
fsts
mov
lret
xchg
xlat
sub
and
ret
pop
sti
inc
je
dec
pop
mov
cmp
jle
shrb
es
jno
inc
cltd
in
or
mov
test
mov
sub
daa
mov
mov
icebp
into
jecxz
ficoms
into
and
dec
mov
xor
popf
dec
cmpsb
jo
test
xchg
pop
jle
pop
fsubrs
inc
hlt
mov
int
icebp
sbbl
jle
cwtl
push
sbb
nop
or
pop
xchg
xchg
jg
fldcw
cli
lock
push
push
flds
dec
push
mov
lahf
dec
sub
aaa
test
enter
and
out
sub
xor
pop
xchg
sub
xor
inc
icebp
mov
push
and
out
pop
sbb
addr16
push
into
mov
xchg
and
int3
xchg
mov
jns
xchg
pop
daa
dec
jnp
mov
aaa
cmp
mov
adcl
push
imul
cmp
fdivrl
es
dec
addl
jg
pop
push
push
mov
xchg
jb
or
mov
pop
ss
mov
ds
lock
lds
mov
jns
imull
lea
mov
push
mov
xorl
mov
mov
scas
cmpsl
xchg
enter
les
out
sbb
out
cmpsl
push
popf
popa
cmp
pop
das
xor
xor
daa
push
cmp
pmullw
or
rep
in
stos
daa
add
insb
inc
pop
sahf
lahf
xchg
je
and
test
sub
insb
lahf
dec
sbb
jp
sbb
stos
repnz
push
sub
xor
movsb
ljmp
popa
or
adc
push
add
sub
fadds
push
push
mov
cltd
fstpl
outsb
mov
es
push
adc
sahf
loop
mov
int
jns
inc
mov
cli
and
add
jno
or
and
aad
pop
mov
sub
aam
sub
mov
cli
mov
sarl
jg
sbb
mov
jl
push
pop
std
in
add
adc
add
sarl
xor
leave
mov
add
repz
ficomps
pop
in
pop
push
call
or
mov
mov
out
cs
jb
out
clc
cmp
push
push
cmp
loopne
cmp
push
lahf
jmp
dec
sbb
test
loop
xor
add
xchg
jp
cmp
shl
fbstp
negl
gs
movsl
fnsave
repnz
sarl
or
fadd
int3
dec
test
aad
lods
push
push
pop
xchg
or
sub
mov
test
insb
scas
push
pop
or
mov
mov
mov
stos
fnstenv
in
pop
xlat
mov
jecxz
xlat
repz
xor
mov
inc
mov
fmull
movsl
sbb
and
add
aam
icebp
cmp
rcrb
sbb
jl
icebp
in
and
inc
test
adc
xor
sti
pop
outsb
add
mov
dec
xor
dec
adcb
pusha
in
jbe
shr
inc
adcb
xchg
jo
or
sub
outsl
jle
xchg
mov
inc
jno
test
sti
cltd
add
jecxz
add
and
pop
insb
dec
test
data16
mov
push
xchg
scas
out
pop
nop
idivb
in
add
aaa
mov
in
mov
mov
jo
push
stc
dec
jge
iret
mov
sub
loop
sbb
inc
fdiv
pop
mov
mov
jae
pop
aaa
or
mov
jmp
push
mov
sub
adc
mov
adc
xor
inc
out
adc
inc
in
mov
mov
jae
outsb
dec
ret
stc
inc
loopnew
in
in
xchg
call
push
fildll
call
or
stos
adc
das
enter
imull
test
push
pop
pop
cmp
out
fldt
dec
mov
leave
mov
xor
lds
inc
bound
and
mov
iret
notb
stos
insl
or
movsl
ss
addr16
inc
and
cmp
out
cmp
movsl
out
pop
orl
shll
sbb
daa
gs
fists
cmp
nop
and
aad
xchg
cltd
or
cmp
lret
loope
das
push
xchg
xchg
pusha
nop
shrb
adc
out
ja
sarb
decl
push
mov
xchg
xor
push
dec
fadds
sbb
sbb
sub
push
add
and
pop
cmpsb
or
ret
rorl
and
or
xchg
cmp
fdivp
mov
imul
pop
and
cmp
pop
lcall
jns
test
adc
sub
mov
mov
push
push
push
leave
push
jne
je
nop
mov
aaa
stos
stos
push
sbb
in
push
push
pop
xor
mov
xor
dec
shlb
push
aaa
xchg
rorl
mov
and
enter
inc
mov
cmp
lods
inc
call
lahf
xor
jo
push
dec
rclb
push
mov
mov
dec
incb
call
cli
loop
test
sub
out
cmp
dec
xchg
lahf
je
mov
lea
sti
in
xchg
fs
and
xchg
movsl
hlt
addr16
incl
mov
push
dec
xorl
mov
mov
sbb
es
aad
sub
pop
cmp
adc
into
jg
and
jp
out
fistpl
adc
push
mov
bound
jne
mov
add
leave
dec
or
pop
scas
and
std
inc
jbe
popf
push
mov
adc
int3
add
or
push
or
mov
xchg
movl
jnp
inc
jne
in
fwait
xor
fwait
cs
lds
and
arpl
cmc
jmp
cmp
out
sub
jg
fsubl
sub
pop
sub
ds
repz
dec
inc
dec
out
mov
divb
stos
mov
scas
repz
ja
fs
cmpsb
push
push
mov
dec
jle
lcall
std
lods
icebp
shlb
lret
test
adc
repz
and
jp
pop
std
ss
or
sub
and
cld
aam
insb
loope
or
enter
mov
sub
adc
pop
lock
add
in
mov
daa
adc
test
aas
insb
push
sbb
dec
mov
push
or
js
xchg
jae
jnp
add
ljmp
loopne
movsl
push
cmpsl
add
and
or
lret
stos
xchg
mov
sbb
aad
clc
mov
loope
cwtl
lahf
outsl
fdivl
pusha
daa
and
mov
and
jne
dec
jg
enter
xchg
add
sub
pop
dec
lods
mov
adc
mov
ret
in
adc
cmpsl
test
fdivrs
ljmp
xchg
leave
out
out
movb
xchg
jecxz
and
or
push
les
daa
mov
js
or
cmpsl
cmp
dec
and
jge
js
ds
ss
jns
imul
or
jle
xor
xchg
fstsw
xchg
leave
inc
mul
je
adc
jecxz
mov
cmp
sub
popf
into
mov
cmp
adc
and
mov
stos
mov
out
mov
mov
sti
mov
adc
stos
mov
and
out
decl
ds
int
repz
push
mov
pusha
push
mov
sti
push
pop
rcll
stos
xor
mov
popa
fst
mov
popf
adc
stos
dec
data16
jmp
mov
mov
add
mov
loopne
mov
inc
pop
lret
fwait
test
loop
add
cli
or
mov
loope
dec
and
scas
pop
jo
jnp
pop
pop
jnp
out
fucom
jge
pop
dec
negl
xchg
cmp
sbb
sbb
pop
mov
pop
adcb
mov
loop
outsb
rol
mov
xchg
leave
fcompl
or
or
sbb
sbb
aad
dec
pop
aad
add
fistl
pop
mov
test
into
mov
mov
scas
sarl
sub
pop
shr
ds
jae
adc
inc
in
arpl
outsb
sbb
pop
imul
cld
xor
mov
jg
lock
mov
dec
adc
mov
xor
and
mov
dec
mov
insl
das
into
add
sub
call
aam
sbb
gs
jp
jl
add
addr16
jmp
and
adc
idivb
mov
cltd
push
xchg
dec
xor
adc
adc
enter
ja
test
cs
xchg
xchg
adc
jg
clc
aad
leave
cmp
dec
or
push
or
addr16
rcl
lods
ja
stos
sub
cmpsl
and
into
scas
cmp
ljmp
or
lcall
aad
sub
fs
pop
lock
xchg
imul
out
xchg
aam
mov
pop
sbb
sub
xor
xchg
lods
cltd
push
dec
aaa
adc
js
mov
mov
mov
lcall
mov
mov
movsb
fs
mov
cld
dec
leave
outsb
pop
sbb
mov
pop
rcll
ret
cmc
es
mov
movsb
jne
jbe
mov
pushf
lret
inc
call
jge
std
add
nop
cltd
adc
mov
repnz
xor
in
es
iret
cmpsl
inc
stos
fcoms
sbb
jmp
in
cld
xor
dec
push
psubsb
xchg
lea
mov
ja
mov
repnz
jl
addr16
jge
push
xchg
adc
xor
daa
inc
xchg
aad
enter
mov
iret
dec
cmpsb
loopne
mov
jecxz
cli
push
mov
das
jmp
mov
stc
jnp
xchg
incb
push
push
sub
and
push
in
xchg
das
je
sub
dec
xchg
loope
mov
sarl
test
push
ljmp
insb
push
pop
ss
mov
jo
aas
cmp
and
cmpsl
mov
jne
scas
add
jae
cmp
movsb
in
cmc
pusha
notl
in
imul
xchg
sbb
cwtl
int
ret
cltd
push
sub
sbb
ja
and
sbb
iret
shll
pop
dec
cmp
xor
das
sub
add
dec
insl
into
add
jno
dec
testb
fwait
xor
mov
lock
adc
or
lret
pop
repz
fisubl
fnstcw
mov
or
dec
dec
leave
dec
mov
data16
int3
mov
mov
xlat
sub
rcr
stc
daa
jo
cwtl
xor
mov
pop
les
push
int
push
fnstsw
in
xor
sbb
jp
out
ja
add
aaa
in
dec
mov
insb
jl
push
fiaddl
jg
das
pop
xchg
ficoml
ret
pop
xor
pop
das
sahf
lock
iret
je
xchg
aad
ja
into
inc
push
push
sub
js
imul
std
inc
xor
push
andl
cmc
into
test
jns
js
sar
xor
or
in
daa
inc
cmpsb
push
push
inc
std
ret
xor
and
pop
lock
sbb
push
mov
aaa
sub
cli
enter
aam
dec
xchg
nop
jne
imul
pop
cs
and
jbe
and
test
orb
xchg
out
add
fwait
jnp
sbb
cmp
lea
mov
pop
cwtl
cmp
shrl
insb
out
mov
pop
adc
mov
enter
lock
dec
mov
sbb
mov
or
pop
nop
das
lahf
xor
inc
cmp
ljmp
loope
jle
mov
je
push
cmp
movsb
popa
cmp
xchg
pop
jmp
pop
sahf
xchg
fsts
ss
mov
out
inc
push
rcll
or
mov
sub
mov
test
push
shlb
dec
mov
sar
test
mov
testl
push
adc
inc
xor
pop
lahf
ds
add
aaa
test
int3
mov
int3
dec
mov
int3
rorb
lds
dec
cmp
push
fidivrs
data16
into
jl
jl
bound
negl
or
ret
mov
fsubr
push
sbb
js
jae
add
scas
pop
lea
and
add
cli
mov
lret
ds
sbb
in
les
pop
dec
popf
add
jmp
das
ss
dec
cmp
andnps
jb
testl
insb
in
inc
mov
bsr
imul
stos
jge
stc
inc
mov
stc
into
sbb
pop
movsb
pop
xor
mov
seta
mov
testb
dec
imul
adc
stc
push
insb
cmp
ret
and
lahf
loopne
nop
outsb
js
aas
mov
test
cmpsb
mov
lret
repnz
sub
dec
dec
push
mov
insb
testl
das
pop
sbb
xchg
cld
jno
sbb
pop
insl
jbe
lods
mov
and
pop
pop
mov
adc
sbb
cmp
push
jo
outsl
adc
dec
movsb
mov
iret
sub
add
pop
movsl
imul
pop
or
fmull
jnp
cmc
outsl
xor
pop
imul
clc
cs
xor
orl
jnp
jg
mov
adc
adc
pop
fisttpll
call
and
adc
cmp
int
push
outsl
mov
add
insb
insb
pop
aam
sub
dec
test
jo
jbe
xorl
dec
xlat
push
es
add
push
ss
insl
movsl
inc
push
cwtl
hlt
adc
in
mov
sti
pop
sub
in
pop
test
pop
sub
lods
inc
ret
hlt
ret
lea
fcoml
mov
push
mov
ljmp
adc
or
or
cwtl
ja
rcrb
call
pop
adc
rcr
add
add
jb
int
and
inc
in
dec
fsubrs
or
pop
dec
push
ds
data16
dec
fsubs
loope
ljmp
fisubl
inc
pop
adc
ljmp
jnp
jb
pop
mov
shll
das
lods
dec
sub
aaa
or
push
pop
imul
mov
inc
or
dec
mov
mov
outsl
jmp
sbb
xor
mov
push
fdivp
insb
cwtl
adc
loopne
fucomi
inc
mov
add
cmpsb
icebp
insl
cltd
push
mov
sub
js
dec
jmp
sahf
hlt
pop
repnz
push
rol
push
inc
push
fs
in
jnp
and
mov
shld
popa
int3
mov
leave
cmc
adc
push
shlb
dec
push
push
jne
daa
sti
and
cmp
add
mov
test
stos
imul
push
popf
fidivl
enter
push
mov
inc
dec
lods
and
or
bound
sbb
testb
lock
bnd
dec
mov
mov
adc
stos
hlt
arpl
decb
jne
lock
or
mov
fisubrl
cltd
cmp
and
ficoml
add
stos
mov
adc
popa
push
push
popf
jne
ret
adcb
lds
addr16
xchg
dec
jnp
addr16
inc
repnz
mov
ds
mov
adc
imul
outsb
sub
sbb
mov
leave
xor
pop
mov
aas
push
mov
jmp
rcrl
dec
xor
mov
mov
in
std
mov
inc
repz
in
mov
push
in
pop
push
dec
push
jg
sbb
jge
xor
test
adcl
adc
xchg
mov
sbb
mov
mov
fmuls
pop
xlat
movsl
jp
enter
mov
dec
xchg
lock
mov
arpl
imul
sahf
dec
jns
and
jo
imul
aad
mov
add
xchg
insl
fcompl
or
adc
fstpl
add
mov
rcr
pop
cwtl
mov
pop
test
or
add
das
or
out
and
xchg
sbbb
dec
fwait
or
movsb
imul
push
mov
jg
pushf
cli
aaa
sti
popf
sub
or
outsl
decl
or
ret
inc
pop
mov
subb
mov
mov
cmp
setnp
dec
roll
inc
mov
mov
sbb
rcll
mov
sbb
js
das
cmp
je
jne
adc
xlat
cld
fnstcw
xchg
addl
ljmp
sub
out
cmp
mov
mov
call
mov
insl
aaa
repz
fstps
add
mov
pop
sbb
push
mov
dec
and
jae
mov
bound
sbb
loopne
xchg
dec
test
or
out
stos
xchg
inc
lahf
int
adc
pop
sahf
push
repnz
sbb
shlb
xchg
scas
sbb
push
lret
imul
jae
mov
jecxz
pop
inc
mov
popf
movsb
sbb
iret
xor
cmp
dec
ljmp
xchg
stos
nop
in
mov
mov
fisubrl
fdiv
jmp
nop
ss
cmp
lret
imul
repnz
push
and
mov
movsb
and
adc
mov
div
pusha
xor
add
loopne
sbb
imul
idivl
and
sbb
sbb
in
fcompl
cli
loope
sbbb
xor
push
repnz
outsb
sbb
lret
lea
pop
int3
adc
lods
and
aaa
add
stos
xor
mov
rep
ljmp
push
punpcklbw
test
and
insl
push
xor
insl
inc
pop
mov
adc
sbb
cmpsl
outsl
sbb
ljmp
mov
push
scas
imul
js
enter
or
xor
cmp
jne
cmp
inc
xchg
repz
adc
push
inc
jge
mov
mov
ret
xor
sub
cmp
xchg
insb
lods
cwtl
xor
push
shrl
jg
adc
xor
je
in
lock
pop
push
fwait
xor
mov
daa
mov
adc
push
arpl
das
adc
push
scas
andl
inc
es
mov
inc
jmp
push
fidivl
int
clc
sub
popf
jecxz
sarl
and
jge
insl
jae
arpl
mov
mov
in
repz
jecxz
sarl
and
jge
insl
jae
arpl
mov
mov
jmp
sarl
and
jge
fs
bound
mov
mov
lods
icebp
popf
jecxz
push
cmp
fsub
mov
gs
lods
inc
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
cmpsb
pop
in
lock
int3
shlb
iret
jecxz
cmp
jl
push
insb
push
cmp
insb
xor
or
jmp
in
lock
ror
mov
orb
pusha
mov
inc
sub
adc
stc
cmc
lock
fcom
leave
movsl
mov
fwait
mov
dec
xor
popa
pop
outsl
push
adc
mov
imul
inc
mov
or
cld
add
mov
fsubrl
sub
insb
or
mov
xchg
cwtl
mov
movsl
jnp
lock
ja
lahf
push
mov
imulb
jl
in
mov
cld
mov
ret
xor
mov
lret
adc
cld
lock
inc
loopne
cmpb
dec
xor
pop
mov
jg
pop
mov
jp
fcoms
adc
subb
pushf
xchg
je
xchg
jo
add
sub
out
sbb
in
adc
lcall
andl
mov
jae
inc
cld
decl
cmp
in
out
rcr
lret
mov
pushf
cltd
xchg
mov
je
inc
pop
push
dec
and
xor
sbb
adc
lock
test
sahf
in
loope
or
insb
or
adc
dec
arpl
imul
mov
aad
rol
xor
leave
cld
jle
insb
adc
xor
adc
pop
pop
insb
insb
or
xchg
mov
int3
movsl
int3
lods
mov
orb
inc
dec
push
cmp
sub
sbb
or
cld
loopne
lock
int3
sarb
mov
pop
inc
dec
push
cmp
sub
sbb
or
cld
loopne
ja
loope
ret
xchg
popf
mov
sbb
mov
sti
jb
mov
cs
jns
cltd
sbb
mov
jae
popf
xor
int3
outsl
dec
and
push
sub
or
dec
and
lcall
rolb
mov
pop
adc
xchg
stos
inc
clc
test
xor
mov
pop
xchg
dec
out
jmp
dec
sti
mov
mov
inc
xor
sahf
mov
cmp
test
inc
xchg
out
push
push
call
cmp
cli
adc
jo
jbe
hlt
dec
sbbl
push
rolb
xlat
mov
leave
mov
lret
add
inc
in
roll
les
shlb
mov
sbb
js
addr16
outsb
shll
pop
mov
jle
mov
dec
bound
lods
mov
pop
add
ss
lahf
adc
les
jae
test
imul
xor
fidivrs
xchg
xor
mov
mov
je
clc
xor
movsl
cmp
jnp
divl
xchg
in
push
or
inc
sti
mov
aam
dec
ret
test
sub
push
lret
dec
push
pushf
sbb
mov
xor
pushf
inc
xor
mov
mov
xchg
shrl
xorb
push
repz
je
or
cld
lret
add
in
push
or
jge
cld
loopne
es
movsl
adc
pusha
int
inc
aaa
aas
cli
jb
fisubs
sbb
push
fldcw
test
mov
testb
sahf
iret
mov
stc
pop
stos
jecxz
notl
mov
add
sub
sbb
nop
test
and
std
in
inc
sbb
inc
loope
mov
inc
mov
xchg
testb
pop
pop
mov
or
es
xchg
sbb
fimuls
fadd
adc
ss
clc
mov
jns
sub
jmp
fisubrl
aas
sub
dec
and
sbb
scas
enter
push
fisttpll
mov
inc
add
lods
push
lock
cmp
or
and
fadd
xchg
insb
xor
lret
xor
mov
push
ja
and
cmp
dec
xor
test
mov
mov
sub
mov
push
push
ret
jecxz
or
cmp
xchg
shrb
xor
mov
idivb
js
rcrb
mov
mov
mov
xlat
ret
into
inc
mov
sub
aam
mov
pop
es
ljmp
mov
mov
adcl
add
sbb
es
push
dec
lods
add
fmuls
push
cmp
add
nop
imul
or
mov
dec
push
push
pushf
cmp
mov
mov
dec
mov
mov
xchg
mov
call
outsb
and
enter
xor
aad
js
or
mov
ljmp
sarb
frstor
jno
jge
mov
and
loope
loope
xor
stc
stc
dec
push
andl
mov
stos
loop
rclb
pop
cmp
sub
scas
dec
sbb
jle
mov
je
sbb
mov
dec
or
or
aam
and
push
ja
xlat
or
jbe
js
inc
push
daa
subb
xor
xor
cmpsb
cmc
pop
ljmp
pop
xor
iret
stc
decl
push
cs
push
sub
and
jmp
aas
aaa
xchg
xor
shlb
int
es
frstor
inc
imul
or
int
cs
mov
sar
aam
dec
sub
mov
iret
or
mov
pusha
mov
push
cmp
xor
test
cmp
icebp
mov
xchg
xchg
movsb
in
ds
add
mov
xchg
mov
add
adc
and
jmp
fistps
mov
push
mov
push
sbb
fimull
cmp
cwtl
loopne
push
adc
sub
add
inc
mov
lahf
hlt
mov
shlb
lret
push
popf
mov
and
ja
or
xor
ja
or
je
or
dec
inc
push
aas
arpl
inc
in
adc
arpl
test
dec
ja
repz
cmp
subl
test
shrb
adc
adc
out
and
js
jge
push
add
mov
idivl
inc
add
cmp
lods
push
inc
fstl
push
xchg
mov
or
das
mov
insb
ss
in
cli
leave
test
jl
sub
push
orl
or
aad
dec
push
rorl
daa
xor
sub
stc
in
adc
ret
push
mov
aam
fsubrs
mov
int
mov
in
mov
xchg
filds
bound
popa
pop
fsubl
jmp
jbe
and
sbb
adc
add
add
push
jae
sbb
rcrb
shr
and
pop
test
push
mov
rcll
out
push
data16
or
mov
loope
sbb
cmc
pop
mov
fbld
nop
mov
xchg
xchg
addr16
sub
jns
sub
hlt
mov
cli
mov
jae
mov
jge
mov
loopne
paddsw
call
cltd
popf
mov
addr16
addb
movsl
test
cmp
aad
std
lds
mov
dec
cs
or
push
mov
mov
ficomps
lock
mov
jmp
repz
xchg
jg
pop
roll
outsb
mov
push
and
pop
adc
fmuls
sti
mov
movsl
sub
test
dec
dec
jbe
pop
inc
mov
movsb
pushf
pop
int
mov
mov
sbb
mov
popl
pusha
push
inc
out
push
cmp
xchg
fs
xor
pop
push
jge
cmp
shr
scas
mov
lods
outsl
and
aas
das
in
or
xor
xchg
jmp
jne
pop
sbb
das
lret
out
pop
sub
and
sbb
cmc
lahf
test
pop
mov
xchg
cmp
add
jecxz
mov
cmp
movsl
idivb
cmp
adc
pop
mov
imul
aas
cld
stc
inc
outsl
sbb
xchg
mov
xor
cmc
mov
cmp
sahf
and
push
je
andb
or
out
and
inc
xor
adc
imul
mov
jp
xchg
sub
adc
dec
enter
imul
push
int
sub
repnz
iret
ds
outsb
ficompl
ret
subl
lock
or
lahf
roll
lock
aaa
inc
ror
mov
nop
mov
pushf
fadds
sar
mov
clc
test
cmp
push
in
rolb
mov
aaa
int
jne
mov
lea
sub
cs
into
mov
das
push
sbb
fwait
pushf
cmpsb
sti
add
imul
jl
pusha
ret
cmpsl
cs
xchg
comiss
mov
mov
and
sbb
jl
loop
out
repnz
ret
add
or
into
cmp
xor
lahf
jns
cmp
gs
iret
adc
mov
pop
div
pop
inc
push
rcrb
xor
adcl
sahf
lea
jb
jb
shl
into
fmul
pusha
mov
dec
push
pop
outsl
ljmp
add
push
mov
dec
pusha
pop
mov
xlat
adc
mov
idivl
and
push
cwtl
jge
orb
mov
jp
adc
inc
rorl
jmp
mov
jne
imul
repz
xor
lods
mov
js
in
inc
loop
push
test
mov
fmull
aas
mov
addr16
push
adc
push
div
aad
mov
adc
xchg
shr
rorb
in
pop
push
cmpsl
adc
push
mov
loopne
leave
pushf
jge
sub
mov
push
daa
or
sbb
inc
mov
mov
lods
fidivs
cmp
push
inc
push
or
out
jge
mov
orl
mov
rolb
inc
jmp
xchg
adcb
inc
push
jae
inc
sbb
aam
sub
and
das
xchg
add
mov
iret
and
sarl
inc
loop
fwait
aam
mov
enter
je,pn
ljmp
imul
pop
mov
cs
cmp
stc
xchg
mov
shr
xor
fnstcw
jae
mov
xor
push
inc
mov
movsb
xchg
leave
pop
xchg
pusha
loope
les
dec
dec
jge
jo
push
push
orl
fnsetpm(287
dec
in
jge
and
mov
mov
xchg
push
js
xchg
mov
ficoms
rcrb
stos
fdivrs
inc
dec
or
and
pop
lea
daa
clc
and
xchg
in
xor
jb
push
fildll
mov
js
data16
mov
cltd
pop
cmovnp
call
push
mov
push
lods
arpl
cmpps
insl
test
call
mov
loope
cld
mov
fs
ja
outsl
mov
mov
add
xlat
xorl
gs
loop
sbb
fldcw
sbb
adc
mov
mov
xchg
add
adc
push
ret
out
pop
jns
and
jle
iret
mov
xlat
and
stos
pop
xor
mov
sub
lea
out
das
fwait
pop
lea
in
arpl
xchg
test
loopne
add
in
dec
jns
sbb
scas
insb
insb
push
sbb
or
push
cmp
in
jp
mov
pop
xchg
mov
sub
and
test
push
bound
pop
mov
adc
enter
rcl
fldt
and
fmull
and
dec
mov
aad
shrb
xchg
jmp
mov
aad
hlt
mov
lods
push
out
inc
aam
sub
mulb
inc
aas
pushf
jge
cmp
add
lds
mov
push
jbe
fistl
call
out
adc
and
sar
imul
sahf
push
sbb
mov
loopne
lcall
int
dec
mov
outsl
pop
stos
push
fmulp
cwtl
sahf
movsb
sar
inc
adc
push
jns
imul
hlt
inc
mov
lahf
mov
xor
inc
push
mov
mov
pop
and
insb
addl
dec
xor
dec
mov
fcoml
cmpsb
imul
or
inc
pop
das
or
leave
pop
aam
dec
js
dec
adc
stos
sub
rcll
xchg
and
ja
imul
je
out
in
sub
orl
sbb
push
faddl
and
out
and
ja
ds
daa
push
xchg
imul
scas
sti
jnp
sub
loopne
ja
arpl
sub
ds
daa
sub
and
push
cmp
fmuls
shrl
stc
repnz
sahf
add
pop
das
ja
iret
out
add
ja
sub
and
test
out
in
sbb
push
jge
cld
cmp
sahf
sub
in
pop
sbb
into
aas
mov
std
add
mov
call
mov
or
test
pop
lds
rcl
dec
jmp
lret
cwtl
loop
xchg
les
xchg
sti
xorb
repz
xchg
outsb
aad
pop
xchg
adc
adc
add
sub
jp
loope
xchg
pushf
sbb
mov
cs
xor
pop
sti
shlb
sbb
mov
test
fs
int3
lods
jge
xchg
adc
add
cld
rcll
cs
mov
das
ss
fs
xchg
xor
add
xor
outsb
add
ss
test
pop
call
rcrl
dec
cmpb
jecxz
aad
imul
dec
test
mov
call
ret
das
icebp
lods
out
sub
inc
popa
stc
icebp
mov
xchg
mov
cmp
bound
ror
push
mull
mov
icebp
test
adc
dec
clc
lock
push
pop
fisubs
bound
jp
out
arpl
mov
push
mov
dec
or
test
outsl
mov
js
in
add
inc
mov
jnp
xchg
sub
ds
xchg
lret
or
xor
dec
or
xor
out
ret
imul
push
or
pop
aas
pop
jmp
push
cmc
fildll
xchg
js
roll
pop
cmpsl
inc
xchg
cmp
inc
stos
loop
mov
dec
sub
xchg
cmpsb
scas
addb
adc
sbb
dec
pop
roll
adc
mov
int3
std
mov
sti
push
jb
test
ljmp
rcl
shl
xor
and
nop
lcall
xor
addr16
fwait
jl,pt
mov
or
ss
cmpb
mov
enter
push
cs
sub
xchg
in
mov
shl
mov
jmp
test
or
popa
mov
jno
ss
jno
negb
test
and
xor
push
iret
cmc
adc
adc
mov
in
inc
mov
pop
call
add
pop
aam
fcmovnb
dec
rolb
movsb
mov
fwait
bnd
inc
sbb
dec
es
or
push
dec
dec
pop
push
sbb
sarb
test
std
es
test
jbe
pop
push
jp
inc
dec
std
cmp
cmc
ficompl
aas
stos
sahf
lahf
or
pop
xchg
adc
push
pop
ficompl
les
in
ljmp
xlat
mov
outsb
jne
fwait
xchg
adc
dec
jne
sbb
lret
xchg
sbb
test
daa
pushf
xchg
push
mov
pushf
sub
pop
fucom
fisttps
aam
inc
sbb
push
es
lret
jnp
and
mov
pop
in
fisubrs
scas
pop
pushf
arpl
sahf
cmc
insb
outsb
jecxz
movsl
pop
aam
cltd
sbb
out
lret
decb
or
mov
frstor
clc
pop
push
repz
xor
sub
lods
sbb
sub
ljmp
bound
push
push
loopne
jnp
in
aad
push
fnstenv
xlat
ret
es
dec
dec
xchg
adc
lods
fisttps
sub
push
push
inc
test
inc
sti
cltd
punpcklbw
ss
mov
inc
std
xor
adc
push
mov
add
test
cmp
inc
xchg
add
xchg
int3
out
mov
movsl
push
adc
mov
mov
rcl
int3
enter
mov
push
mov
bound
fdivrs
movb
das
push
inc
push
popf
sahf
push
xchg
movsl
mov
outsl
add
push
nop
shll
xor
or
out
ficompl
fs
aam
in
pop
int3
pop
xchg
mov
sub
rorb
add
adc
aaa
mov
xchg
ror
sbb
movsb
movsl
push
pop
or
insl
mov
ficomps
nop
push
mov
inc
jge
stos
mov
pushf
xor
push
xor
add
bound
shll
cmc
pop
sub
inc
xchg
addr16
test
mov
mov
mov
pop
cmp
outsb
test
mov
lret
shrl
mov
dec
ljmp
xchg
add
sbb
pop
stc
lret
cmp
sbb
cli
aas
xchg
pushf
or
lret
sarb
lods
mov
andl
decb
push
add
sahf
cli
xchg
sbb
rolb
and
ljmp
arpl
stos
jecxz
test
inc
push
hlt
push
pop
sub
loop
mov
mov
push
loopne
pop
sahf
lret
sahf
movsb
or
popf
mov
sti
sarl
lock
shll
ljmp
test
mov
xor
call
jge
iret
movl
mov
xor
imul
mov
cmpsl
cld
insl
sub
mov
mov
std
push
mov
dec
dec
movb
mov
clc
aam
mov
adc
push
lock
push
cli
cs
sahf
xor
cmpsb
popf
push
sub
push
gs
push
cwtl
xor
shll
xchg
push
xor
movsl
ret
jae
xor
aaa
add
dec
mov
pop
faddl
test
cmp
mov
pushf
fcoml
push
rol
mov
jp
fiadds
adcb
or
push
sub
xorb
cli
adc
sub
data16
ror
push
dec
dec
mull
adc
or
cmp
fucomp
pop
imul
adc
mov
in
subl
gs
xchg
push
or
aam
lea
sbbl
leave
add
jnp
push
cld
hlt
and
stos
xchg
cmp
enter
insb
clc
loopne
adc
mov
add
jg
or
pop
fistl
xchg
dec
pop
daa
dec
xor
xchg
mov
mov
lahf
shl
enter
stos
adc
dec
add
mov
xchg
ret
sub
or
sub
jns
sub
sbb
mov
ficoml
xor
and
xor
movsl
aad
lds
jbe
imul
sbb
in
jl
loope
xchg
test
cmpsb
test
jge
pop
pop
mov
inc
push
fbld
xchg
xchg
xchg
ss
std
outsb
sbb
dec
push
mov
xchg
mov
pop
popa
xor
mov
call
push
dec
sub
push
je
inc
mov
cmp
pop
popf
mov
mov
out
sbb
mov
mov
imul
mov
loop
jbe
xchg
movsl
or
add
dec
xor
or
or
mov
lods
mov
mov
cltd
xchg
inc
sbb
shrl
insl
sub
mov
cmp
std
jle
cmp
push
fadd
xor
stos
bndcl
mov
add
push
call
add
cmpsb
fdivr
in
rcll
mov
mov
pop
jle
jne
dec
inc
adc
arpl
inc
fidivrs
pop
push
mov
scas
stos
cmp
cmp
jbe
out
jecxz
xchg
inc
out
neg
aaa
insl
dec
pop
sub
inc
or
and
mov
adc
mov
sbb
les
xchg
inc
mov
imul
rcll
jl
sbb
rcrl
fstl
sub
sti
in
out
int3
stc
mov
pusha
push
daa
inc
jmp
mov
dec
stos
adc
jp
ficoml
or
lods
mov
cmp
cmpsl
xchg
mov
std
rcr
pop
orb
push
lods
sbb
sub
ljmp
pop
ret
or
mov
call
and
xor
fldcw
ret
push
dec
inc
jp
rolb
lahf
sbb
cltd
jmp
call
or
and
insl
into
out
adc
sbb
sbb
lock
xchg
out
pop
mov
and
and
dec
pop
push
inc
pushf
sbb
adc
stc
into
das
cmc
or
mov
mov
push
push
fwait
pop
pop
xchg
sbb
jge
mov
xchg
fistpl
push
pop
pop
fstpt
movsb
mov
mov
adc
mov
ljmp
lds
mov
ljmp
push
mov
push
sbb
push
cmp
cmc
mov
jge
lods
loop
mov
fwait
dec
xchg
or
dec
mov
adc
mov
push
and
pop
jnp
add
ljmp
mov
ret
and
mov
filds
adc
dec
jne
fstpt
add
inc
es
lahf
cmpsl
icebp
lock
enter
in
jle
adc
leave
stos
dec
dec
cmp
mov
push
mov
subb
mov
int3
push
lods
sub
sbbl
push
call
xor
call
ljmp
sti
shll
sbb
sbb
add
rcrl
dec
pushf
and
rcr
add
stc
stc
add
inc
aad
das
push
loope
fiaddl
lahf
addb
and
cs
inc
test
lret
mov
mov
mov
adc
xor
sbb
cmp
jne
hlt
mov
loopne
inc
sahf
mov
xchg
inc
pop
aaa
iret
xchg
lret
inc
xor
sub
pop
add
xchg
mov
aaa
out
and
mov
or
and
fldcw
loopne
sub
pop
aaa
dec
vpunpckldq
sarb
push
clc
cmp
rorl
mov
pop
and
ret
pop
out
lret
add
adc
or
fcoms
std
lcall
pop
sti
push
sub
adc
jo
xchg
jne
lock
das
int3
sarb
mov
pop
inc
dec
push
cmp
sub
sbb
or
cld
loopne
lock
int3
sarb
mov
pop
inc
dec
push
cmp
sub
sbb
or
cld
loopne
lock
int3
sarb
mov
pop
inc
dec
push
cmp
sub
sbb
cmp
lock
mov
orb
pusha
xchg
inc
dec
daa
dec
test
iret
jecxz
repz
adc
add
xor
and
pop
sub
push
add
insb
dec
xchg
mov
mov
test
fsub
enter
sub
sbb
or
inc
push
xchg
mov
mov
call
adc
add
xor
and
push
js
push
xchg
xchg
mov
stos
mov
mov
mov
cmp
xor
pop
mov
ljmp
cwtl
cmpsb
fistps
xor
push
cmpsb
add
xor
push
push
addb
push
mov
add
pop
mov
fdivs
pop
out
push
jecxz
pop
ds
das
js
push
mov
clc
dec
loope
adc
es
sbb
sbb
jns
js
mov
sbb
or
push
pop
ja
stos
sarl
movsl
test
mov
fdiv
scas
js
xchg
lea
mov
xorl
loope
sub
sbb
jge
mov
imul
jno
inc
les
xor
int
enter
sub
sbb
or
inc
push
xchg
mov
mov
call
je
sti
ja
addr16
xor
sub
cmp
in
ret
out
xchg
adcb
jns
bound
pusha
pop
xor
or
aaa
and
jecxz
out
int3
into
mov
xchg
push
inc
jl
adc
push
xchg
mov
mov
call
adc
add
xor
and
push
js
push
xchg
mov
mov
call
adc
pusha
cmp
cmpl
dec
cmpb
shll
push
lods
aad
mov
and
ret
pop
push
push
pop
call
adc
cmp
insb
sbb
movsl
mov
sub
pusha
inc
subl
les
repnz
data16
fmull
jb
dec
fld
push
cmp
add
rclb
sub
mov
xchg
popf
cs
aaa
mov
popa
iret
fsubp
jne
cmp
fisttps
adc
pop
xor
or
leave
xchg
adc
xchg
and
das
sub
mov
or
mov
les
fcoml
mov
inc
sbb
scas
adc
push
jnp
mov
loope
cmp
rcrl
out
sbb
les
sub
lds
mov
leave
xor
ds
popf
test
pop
cmp
lods
loopne
in
sbb
lea
loop
mov
jg
inc
mov
jne
repz
or
leave
sbb
lcall
mov
xchg
xlat
xchg
adc
int3
int
dec
js
fimull
sbb
or
mov
dec
xor
aaa
mov
pop
imul
mov
iret
nop
jmp
jl
push
sbb
jecxz
dec
lea
xor
mov
addr16
fcmove
jmp
jp
mov
dec
data16
or
jecxz
or
inc
psllw
ja
scas
push
out
inc
js
push
sub
pop
inc
and
xlat
mov
ret
mov
sbb
sub
cld
xchg
fdivrl
outsb
icebp
ja
sub
test
push
or
xchg
add
xlat
dec
negb
aas
inc
mov
faddl
xor
pusha
jbe
addr16
movsl
loop
pop
adc
addb
int
loop
inc
ds
xor
or
inc
ficoml
mov
mov
sbb
pop
insb
in
inc
pop
insl
cmp
push
push
popa
and
and
cmp
lcall
pop
out
icebp
mov
adc
pop
jg
dec
std
inc
mov
daa
or
and
insb
lret
mov
xorl
sub
jge
mov
mov
jp
sahf
ss
dec
pop
fnstcw
popa
mov
loope
aam
arpl
test
sarl
inc
repz
and
xlat
push
lds
movsl
cmp
xor
popl
jge
mov
mov
out
test
xor
loope
mov
cmpl
test
clc
jge
pop
pop
movswl
out
add
dec
stos
jp
cmp
cmc
adc
inc
inc
sub
jp
mov
push
rol
pop
mov
je
mull
jno
jecxz
mov
out
jl
data16
add
insl
fcomip
jl
mov
jle
inc
sbb
jmp
push
sbb
mov
xchg
lcall
jns
or
cmp
packuswb
mov
jge
call
daa
ds
push
stos
in
adc
push
aaa
and
jns
and
out
int3
call
enter
out
sub
and
hlt
mov
adc
cs
in
sbb
fwait
jb
sbb
cmp
mov
fwait
mov
rolb
inc
inc
bound
aam
shll
nop
add
push
fdivrl
in
rcrb
push
push
movsb
push
mov
pop
and
xchg
les
jmp
sbb
mov
xorl
imull
and
push
nop
mov
dec
cmp
mov
movsb
std
xchg
sub
or
insb
mov
jl
and
mov
jb
out
push
xchg
iret
pop
arpl
pop
ss
loopne
or
scas
xor
mov
jge
sbb
pop
and
pop
popa
mov
mov
lret
jnp
jne
jg
scas
nop
jb
jp
out
loop
stc
dec
and
cmp
in
mov
jecxz
popa
xor
icebp
jp
rcrb
add
scas
xchg
push
add
pop
in
call
addr16
popa
lds
xor
mov
jl
clc
inc
addr16
xlat
fildll
or
adc
sub
pop
mov
mov
cmpl
sahf
icebp
mov
cmc
adc
cld
sbb
xchg
repz
adc
testl
push
cmp
aas
mov
cmp
pop
mov
or
jns
mov
test
lock
jnp
mov
push
dec
cmp
jbe
pop
mov
jo
mov
inc
mov
repz
add
jmp
mov
jle
cmpsb
sahf
or
cli
push
dec
and
cmp
out
orb
pop
xchg
inc
xchg
add
xor
inc
fsubrl
arpl
mov
and
sahf
mov
xor
fwait
cmc
push
xor
je
adc
fwait
inc
jp
stc
jle
filds
add
or
adc
sub
adc
mov
cs
pop
push
pop
sub
fisubrl
jp
pushf
xorl
ds
pop
cmpsb
cmpsl
movsl
dec
sub
or
sbb
add
daa
or
loope
shrb
mov
outsl
int
jns
mov
lds
add
call
adc
leave
lahf
out
mov
outsb
or
pop
cmp
stos
xlat
out
adc
push
and
fprem1
sub
nop
and
sahf
ja
mov
dec
iret
and
adc
insl
stos
and
test
es
mov
mov
imul
rol
sub
mov
jnp
mov
mov
mov
std
loope
pushf
fbstp
adc
gs
test
fwait
push
sub
fildl
scas
leave
pop
movsl
xchg
pusha
mov
jp
push
js
xor
mov
cmpsb
mov
fdivrs
test
dec
push
lock
dec
cmp
fwait
stc
popf
out
push
and
andl
jp
ret
or
repnz
mov
pop
jnp
xor
mov
mov
dec
test
hlt
negl
and
iret
cltd
daa
shll
iret
test
call
and
jo
adc
cmp
cli
shl
js
pop
mov
xor
stos
push
push
sub
fldpi
sbb
push
inc
cs
dec
mov
aad
cwtl
cli
gs
sti
and
push
adc
sub
xor
mov
jne
inc
xor
xchg
test
or
xor
cmp
ret
or
xchg
cmp
xchg
inc
add
and
push
stos
bound
sbb
mov
cmpsl
mov
in
mov
pop
jno
jne
mov
pop
mov
mov
cld
fsubs
mov
in
mov
outsb
hlt
sbb
mov
xchg
jns
stc
jp
xor
icebp
sbb
inc
jmp
popf
xchg
fldpi
adc
loope
push
pop
push
bound
xchg
imul
pop
xor
and
js
aas
mov
mov
scas
cli
fistl
aam
pop
outsl
imul
inc
out
xchg
nop
xchg
xchg
movsl
pop
mov
insb
xor
das
add
stos
sar
add
pusha
sahf
inc
cltd
dec
xlat
push
into
mov
cmp
sbb
jnp
lahf
and
lds
imul
pop
lods
xor
mov
fwait
mov
cli
mov
xchg
rorb
lea
push
aaa
xlat
rcrb
pop
fucom
fdivs
adcl
adc
sbb
adc
add
mov
ret
ds
adc
jno
test
pop
or
push
push
rcl
imulb
fidivl
add
add
inc
jge
lcall
sub
loop
adc
pushf
push
sub
scas
lret
lock
orb
push
lds
daa
std
cwtl
jp
lret
mov
dec
mov
ljmp
lret
fnsave
cwtl
shll
into
repnz
sbb
inc
adc
and
or
mov
add
sub
movsl
fs
cmpsl
repz
insl
jno
popf
fisttps
cmp
push
stc
xchg
int
jge
pop
mov
popl
out
mov
jb
jge
and
scas
inc
les
mov
pusha
aaa
cmp
jnp
jbe
sbb
xchg
and
xchg
mov
pusha
fisubl
and
xchg
cmp
xchg
lea
dec
fs
mov
sub
fldl
sub
test
xor
repz
sti
mov
adc
jmp
stos
sbb
sbb
pushf
ret
mov
xchg
adc
mov
sub
mov
lods
adc
jb
jb
adc
lods
xchg
pop
xchg
das
pop
test
fs
enter
push
arpl
ret
cmp
clc
rcrl
aad
xchg
xor
fsts
testb
in
cmpsb
ss
fsubr
inc
inc
inc
mov
mov
arpl
pop
arpl
cmp
push
pop
xchg
bnd
imulb
push
push
push
adc
in
popf
mov
inc
pop
add
pop
lods
dec
in
lcall
test
idivl
nop
addr16
adc
mov
das
loopne
cmc
add
imul
imul
lock
ficoml
pop
out
enter
in
js
and
cmpsb
jns
clc
in
push
mov
sti
jmp
sub
or
or
jge
xor
jno
mov
and
inc
jle
xor
sbb
lods
sbb
jb
and
negl
mov
lahf
cmpsl
data16
sub
mov
fisttps
sbb
cli
negl
fbld
int3
lea
sbbb
flds
cmp
mov
or
sbb
fldcw
sbb
adc
lds
pop
push
test
scas
scas
inc
add
fs
adc
mov
les
pop
mov
jbe
or
add
leave
int
jno
add
stos
cmp
push
xchg
cld
cmp
and
mov
fwait
jp
into
pop
rcll
dec
push
repz
inc
xchg
or
imul
test
out
movsb
addr16
mov
fnsave
push
and
pop
mov
adcl
mov
repnz
adc
outsb
jmp
jmp
lods
arpl
xchg
incl
sbb
ret
jmp
sbb
call
xchg
aas
insb
fdivl
test
jo
or
lret
shrb
or
push
xchg
adc
pop
mov
shrl
iret
dec
cli
xchg
inc
jg
orl
in
loop
jg
sbb
data16
xlat
sub
out
iret
sbb
cmpb
test
adc
pop
cld
xchg
dec
jle
insl
imul
dec
add
add
daa
cld
cmc
lds
pusha
fwait
clc
sti
dec
adc
rorb
sub
dec
aam
mov
jnp
mov
xor
mov
testb
int3
fstpl
add
xchg
adc
sub
sub
or
imul
xor
mov
js
inc
les
xor
ljmp
jp
je
loopne
ret
sub
andl
shlb
xor
fmul
push
aam
flds
int
sbb
fcmovnb
sub
add
in
add
testl
push
xlat
shl
xor
jno
cltd
loope
jae
inc
cmp
mov
test
test
hlt
add
fcoml
out
mov
test
popf
pop
adc
mov
mov
cmp
push
mov
xlat
mov
cwtl
dec
fisttps
inc
push
push
outsb
inc
pop
mov
outsl
scas
lret
inc
jl
icebp
jno
mov
aad
dec
movsl
mov
and
cwtl
xlat
add
inc
loop
mov
mov
mov
mov
adc
dec
push
xchg
sub
faddl
imulb
call
ret
int
xorl
movsl
push
cmp
xor
push
xchg
aaa
sbb
push
out
stos
outsb
dec
dec
into
mov
cltd
mov
sub
mov
aam
jmp
gs
data16
or
pushf
adc
pushf
pop
xor
pop
aam
push
in
mov
cs
xchg
pop
xchg
gs
mov
cmp
xchg
mov
scas
mov
adc
insb
rcrl
vmovntps
sbb
inc
cmp
mov
dec
jnp
jge
stc
and
cmp
mov
push
mov
sub
and
jbe
sahf
inc
jg
push
les
push
aaa
jno
rorb
test
ljmp
adc
pop
cltd
mov
cmp
push
cwtl
sub
and
mov
stos
push
addr16
lds
mov
mov
mov
and
mov
push
ja
fisttpll
loopne
sub
xchg
sub
rorl
and
in
push
pop
and
popa
jns,pt
test
pushf
pop
mov
sti
aas
xchg
or
into
pusha
mov
loope
xor
xchg
mov
xchg
dec
filds
bound
pop
lret
xchg
push
out
adc
lds
std
push
bound
jp
imul
movsl
fstpt
repz
pusha
arpl
adc
lret
andb
xchg
cmpsb
inc
pcmpeqw
nop
testb
addr16
fidivrl
add
pusha
popf
mov
movsb
sti
jae
jle
sub
loop
orb
outsl
sahf
cmp
inc
rep
je
leave
mov
mov
test
add
sbb
daa
xchg
inc
inc
cmp
addr16
push
ret
jno
jns
push
or
outsl
fs
std
orb
loop
arpl
mov
sahf
sub
adc
dec
insl
pop
aas
cwtl
or
xchg
fistps
in
je
add
push
mov
push
mov
add
aam
push
negb
aas
sbb
xchg
std
sub
xchg
cld
fistl
jnp
notl
shlb
ret
notl
and
nop
aam
fimuls
popf
cmp
ja
iret
inc
fwait
imul
dec
dec
and
daa
stc
ljmp
xor
or
xchg
andl
dec
or
inc
cmc
or
xchg
pusha
sub
icebp
mov
push
pop
xor
pop
push
add
imull
push
jmp
xchg
es
push
adc
mov
push
sub
adc
iret
outsb
lock
call
mov
daa
cld
add
and
mov
mov
arpl
pop
pop
pop
daa
aam
adc
popf
pop
call
dec
insb
inc
dec
movsb
xchg
and
mov
or
cmp
jns
fisttpl
mov
cmp
push
xchg
test
js
pop
jmp
les
fucomp
pop
aas
pusha
xchg
xchg
lahf
sbb
add
xchg
xchg
subl
sbb
imul
or
lret
lcall
add
test
in
fisttps
int
lods
loope
aas
sbbb
cmp
inc
mov
les
mov
gs
mov
ljmp
and
pop
push
mov
adc
push
jp
mov
les
jmp
mov
clc
clc
cltd
je,pn
push
sbb
pop
leave
and
clc
push
fdivrl
dec
add
mov
mov
int
repnz
pop
sub
xorl
rolb
push
pop
push
shll
push
jnp
jb
cmp
fidivl
lcall
fucomi
mov
push
stos
add
in
int
sti
arpl
cmp
push
scas
adc
dec
adc
or
xor
dec
xor
and
jecxz
jge
addr16
test
popf
out
imul
adc
inc
xchg
pushf
pop
dec
imul
sub
xchg
jle
sbb
xchg
and
movsb
outsl
shll
mov
sahf
mov
jns
repz
outsl
sbb
in
mov
jge
jecxz
jb
dec
jecxz
jecxz
ret
lea
arpl
fistpll
ds
in
xchg
shl
shlb
repz
or
and
cwtl
pop
push
xchg
mov
add
or
inc
jbe
into
out
mov
loope
adc
leave
out
movsl
aas
push
xchg
decl
testb
imul
idivb
sbb
mov
mov
jmp
addb
jecxz
les
xor
lea
mov
mov
data16
popa
or
xchg
pop
xchg
scas
ja
rolb
test
rorb
jg
aam
xchg
pop
rcrl
xchg
iret
and
mov
pop
push
stc
mov
call
adc
inc
aad
scas
cmp
ljmp
cmp
adc
addl
out
call
push
and
xor
jne
daa
mov
orl
pop
inc
pop
dec
gs
lea
mov
scas
out
jg
cmp
and
stc
fsubrl
pop
inc
and
add
les
sti
dec
pop
in
mov
sbb
mov
adc
sbb
inc
aad
popa
loop
lret
jnp
ss
mov
mov
or
insl
mov
jp
jb
xchg
mov
cmp
jle
fimuls
lcall
mov
gs
pop
enter
add
testb
jl
and
adcb
stos
repz
xlat
insb
into
jmp
pop
into
jmp
mov
icebp
data16
jbe
cmp
add
in
daa
fwait
iret
ret
mov
or
pop
lahf
outsl
imul
out
rcr
push
out
subb
adc
popa
cltd
jbe
xor
adc
mov
adc
je,pt
cmpl
fstpt
movsb
jb
outsb
lahf
pop
mov
das
jle
xor
enter
mov
push
xchg
xchg
je
push
pop
jge
mov
xchg
mov
add
inc
pop
scas
scas
mov
xchg
cli
cwtl
and
inc
leave
inc
lret
sub
inc
fistl
in
aaa
nop
jmp
dec
stos
xor
and
lea
in
cwtl
call
mov
outsl
xchg
and
dec
mov
dec
fcomp
push
inc
jp
mov
pusha
ficoms
adc
lahf
mov
or
jecxz
pop
xchg
cli
and
imul
jle
jo
lock
xor
jmp
mov
enter
pop
pop
add
fstpt
sbb
xchg
adc
cltd
test
aam
ret
sahf
sti
shrb
lret
cmpsb
shlb
push
out
jne
inc
cmpb
mov
ljmp
cmp
jg
pop
dec
iret
sub
test
xor
loopne
lret
xor
cmp
ds
testb
xchg
mov
and
push
and
inc
lgdtl
outsl
sbb
int
jge
rcl
xor
idiv
sti
cmp
mov
push
loop
mov
pop
cmpsl
inc
dec
push
xchg
mov
jbe
mov
xchg
stos
das
repz
out
loop
sbb
push
out
mov
add
popa
cld
mov
mov
in
fsubl
push
sar
xchg
ljmp
lahf
xchg
push
loopne
enter
jb
adc
pop
negl
pop
push
rolb
icebp
pop
pop
mov
lcall
pop
mov
jmp
cmp
mov
nop
dec
mov
xchg
dec
ss
mov
fidivl
cmp
shrb
movsl
fcomps
push
shlb
xor
ljmp
test
inc
rolb
xchg
in
mov
dec
ret
xchg
cltd
push
dec
pop
stc
mov
push
mov
orl
jns
das
mov
cmp
xchg
jecxz
push
xor
insl
add
sbb
mov
or
xchg
stos
test
shll
into
dec
adc
adc
aas
xor
inc
jg
jle
jbe
lret
push
sbb
mov
sbb
ret
or
jmp
xchg
nop
rolb
insl
inc
pop
pop
push
xchg
cmp
mov
enter
jmp
icebp
lret
fmuls
fsubrl
jl
mov
add
in
xor
bound
popf
xchg
xchg
stos
inc
or
out
dec
jnp
and
jmp
out
int3
sahf
orb
in
ds
pop
xchg
lock
mov
mov
jnp
inc
sbb
aad
jns
jg
mov
push
mov
loopne
inc
mov
test
mov
dec
rcl
pop
int
sbb
fxch
int
sbb
cmp
sub
movsb
pandn
mov
adc
in
adc
fadd
dec
xchg
bound
push
sbb
or
inc
push
xchg
mov
mov
call
adc
add
xor
and
push
js
push
xchg
mov
mov
call
adc
sub
sbb
or
inc
push
nop
mov
mov
call
adc
add
xor
and
js
call
outsb
inc
jle
sbb
dec
pop
or
sbb
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
sub
jno
inc
sbb
insl
or
and
in
pop
icebp
mov
cltd
shr
mov
leave
xchg
dec
popa
cmp
inc
sbb
and
dec
add
test
rcrl
leave
sbb
jno
inc
rcll
sbb
push
add
int
lcall
cmc
mov
popf
out
test
inc
adc
or
jo
insl
add
xchg
mov
out
add
test
int
lds
sbb
stc
mov
or
sbb
int
or
gs
mov
es
jl
jl
xorps
repnz
pushl
cltd
cmp
add
sub
and
push
in
imul
xor
push
mov
xor
mov
fsts
sub
test
xchg
test
shlb
mov
cmp
lods
repnz
mov
adc
cld
or
adc
or
lock
les
loop
sbb
jno
inc
sbb
and
xor
call
outsl
loope
icebp
inc
test
mov
sbb
xor
popa
push
push
inc
pop
pop
cmp
cwtl
ljmp
loop
aam
clc
mov
adc
and
push
add
jge
push
jmp
mov
xchg
mov
xlat
cwtl
incb
push
cmp
dec
xor
vmwrite
dec
add
test
rcrl
leave
sbb
jno
inc
sbb
and
dec
add
test
rcrl
leave
sbb
sbb
lods
fsts
mov
mov
test
add
clc
ljmp
movsb
pop
pushf
icebp
dec
lcall
imul
insb
jnp
add
shr
shlb
cmpb
mov
ds
jmp
into
mov
bound
cmp
adc
jns
mov
adc
ficoms
jno
mov
add
sub
daa
addl
lret
scas
inc
popf
test
jnp
sub
add
or
lods
insl
mov
ret
cmp
push
inc
jp
fdivl
jnp
cli
rcrb
push
scas
and
insl
push
fsts
jp
mov
hlt
cmp
lcall
in
out
ret
push
cwtl
xchg
cld
mov
pop
push
mov
rolb
mov
jnp
sbb
test
mov
push
pop
push
xchg
nop
je
pop
mov
pop
jmp
mov
sub
xor
ss
cmp
das
mov
adc
insl
stos
mov
mulb
popa
add
fistpl
mov
mov
mov
enter
lods
bnd
repnz
and
mov
ljmp
inc
inc
enter
and
inc
mov
sbb
sbb
cmp
decl
jmp
stos
push
sub
mov
insb
pop
dec
xchg
jmp
adc
in
or
mov
shl
fmull
shrl
mov
xchg
in
adc
fldenv
mov
mov
add
test
std
jno
mov
mov
cs
xchg
mov
add
rorb
ja
xor
sbb
pop
dec
xchg
movsl
push
cmp
adc
sbb
sub
lahf
addb
cmp
cmp
dec
add
jae
scas
or
sub
call
ret
aaa
nop
mov
and
outsb
xor
std
xor
nop
or
inc
dec
push
and
inc
add
jge
jg
inc
jb
pop
mov
jo
jne
xor
push
mov
aaa
dec
pop
dec
jb
xchg
out
in
xchg
lods
repz
mov
inc
je
jp
lds
dec
mov
fbstp
sub
ret
adc
inc
cld
fldenv
scas
js
sbb
shlb
imul
testb
jbe
nop
inc
rcrl
sti
out
sub
jnp
repnz
fwait
lods
iret
das
jecxz
sub
repnz
mov
sbbb
push
stos
popa
idivl
or
mov
rcrb
jb
dec
loope,pn
int3
xor
dec
xor
out
dec
mov
inc
or
jae
cwtl
mov
in
pop
ja
and
in
in
xor
loop
js
fsts
faddp
addr16
xchg
fimuls
push
vmaskmovdqu
add
out
pop
sarl
cs
cmp
push
subl
fadds
inc
mov
mov
jle
adc
les
pop
dec
daa
cmpsl
xchg
dec
jns
cld
inc
fs
movsb
repz
xchg
dec
or
xor
xchg
stc
mov
arpl
negl
lret
mov
jnp
jb
in
mov
sti
push
xor
sti
or
outsl
imul
dec
shl
outsl
movsb
loope
aas
mov
push
ja
movsl
cmpsl
fmuls
pop
inc
addr16
dec
dec
jg
test
mov
scas
mov
imul
jno
aam
xor
fstps
ljmp
jle
mov
push
cwtl
mov
out
xor
in
mov
repz
jnp
mov
push
dec
into
sbb
adc
pop
and
outsl
outsl
mov
lds
mov
sti
xor
xor
xor
xor
mov
sub
ret
mov
push
push
pop
lea
repz
adc
clc
pop
pop
xor
inc
push
in
or
in
cmp
mov
sbb
xchg
enter
cwtl
pop
gs
cmpl
xor
fs
aad
xor
dec
and
cwtl
mov
xor
repnz
push
and
ficompl
in
jae
xchg
pop
mov
fs
add
std
mov
mov
xchg
pop
fiaddl
pop
pop
popa
arpl
stc
test
inc
push
add
test
mov
imul
pushf
push
mov
insl
or
popf
sti
movsl
xchg
fcomps
sbb
push
lahf
adc
ljmp
movl
clc
add
xor
ret
jb
cmp
push
cld
jne
movsb
mov
pop
loop
jo
push
test
mov
test
dec
out
scas
lods
sarb
xlat
pop
inc
push
cmp
out
inc
shlb
adc
int
or
dec
dec
testl
pop
jne
les
sahf
scas
ficompl
pusha
jno
push
jmp
cwtl
pusha
cli
push
sbb
sti
out
icebp
xchg
push
addl
inc
pop
jmp
lods
in
cmp
int
scas
aas
sbb
in
fistl
xor
or
imul
jl
cwtl
nop
pushf
clc
sti
xchg
dec
nop
push
popl
or
push
pushl
dec
inc
xchg
inc
lret
jl
push
inc
xchg
ljmp
dec
int3
xor
inc
insb
mov
lea
cltd
sbb
push
daa
cmp
rcll
cmp
xor
lcall
sbb
xlat
jbe
addr16
fisttpl
mov
jecxz
hlt
repnz
sub
push
inc
inc
and
mov
roll
inc
push
cmpb
push
xchg
ret
fbstp
xchg
xchg
movsb
adc
mov
inc
mov
dec
dec
mov
cmpsl
mov
push
test
pushf
orb
sahf
cld
std
pop
inc
in
xor
xchg
push
inc
cmp
cmc
sub
popf
sub
push
ljmpw
adc
inc
fdivrl
icebp
push
je
js
lods
rcr
sub
andl
mov
xor
sub
xchg
pop
lcall
mov
jae
push
or
or
imul
jge
or
int
lea
das
adc
je
add
jg
xor
add
mov
addb
scas
ret
lahf
mov
and
cmpsb
sbb
movsl
sbb
fadd
imul
xchg
xor
sub
jo
hlt
test
inc
mov
lcall
mov
push
xor
sti
test
inc
repz
sbb
popf
ljmp
xor
push
or
xor
aad
xchg
mov
scas
je
dec
arpl
mov
xchg
pusha
lret
xor
jne
add
sub
inc
ret
or
lret
in
xchg
sub
mov
mov
xchg
cmp
sbb
inc
cli
out
jo
mov
in
jp
int3
repz
int3
sbb
jmp
lods
jae
push
mov
mov
sahf
insl
push
jge
add
out
mov
cli
mov
cltd
insl
jl
mov
sub
pop
sbb
xor
js
test
sub
lock
and
lret
addr16
add
mov
mov
bound
ds
xchg
loope
adcb
or
pusha
es
dec
xchg
inc
sbb
xor
sub
sbb
and
pop
lcall
sbb
dec
test
stc
fisubs
xor
dec
loop
xchg
out
in
mov
gs
andb
je
lcall
stos
inc
dec
dec
jno
dec
xchg
sti
jl
xlat
adc
cmc
loopne
stos
cmp
jl
out
sub
jo
mov
or
mov
add
inc
mov
xchg
cld
dec
das
mov
push
xor
xor
outsl
loopne
icebp
pop
enter
and
sbb
testl
inc
sti
leave
icebp
sbb
cs
stos
fwait
das
mov
cwtl
push
jo
inc
and
mov
mov
cmpb
jp
sub
push
cmp
cli
or
shlb
mov
push
js
js
or
in
call
adc
cmp
iret
adc
xchg
and
in
popf
pop
xor
gs
icebp
inc
jg
icebp
jmp
sbb
hlt
out
mov
inc
or
shlb
sub
repnz
bnd
pop
fimull
dec
ljmp
push
mov
pop
xor
daa
fisubrl
mov
iret
mov
cmp
negb
push
pop
add
jne
scas
dec
inc
xchg
pop
aad
aaa
add
mov
data16
roll
mov
shrl
push
and
pop
jno
adc
dec
push
ffree
xchg
loopne
jno
enter
jns
loopne
sahf
cmc
dec
xchg
xchg
xchg
icebp
dec
imul
jns
sub
call
push
arpl
hlt
jnp
pop
icebp
mov
sub
outsb
inc
push
xchg
in
mov
xchg
pop
testb
out
gs
ja
sbb
mov
jae
jle
mov
and
xor
out
nop
pushl
and
popa
adc
flds
lods
lods
push
shr
outsl
popf
test
sbb
test
lahf
mov
xor
mov
add
mov
xor
mov
scas
jne
cmp
add
cli
out
and
and
pop
outsl
in
jl
dec
out
repnz
mov
jle
popf
add
enter
xchg
jno
lock
sbb
ret
sarb
cwtl
in
ljmp
test
into
push
mov
push
outsb
mov
cmp
insb
dec
out
fdivl
xchg
mov
pop
mov
popa
push
cmpb
fidivrs
push
adc
add
pusha
mov
sbb
pop
clc
mov
fs
push
aad
je
in
xchg
std
rcrl
cs
test
mov
loope
xorl
ffree
sub
mov
cmpsb
cli
push
xor
pusha
cmp
int
push
dec
hlt
mov
pop
push
cltd
les
dec
adc
add
mov
pop
mov
pop
out
cmp
sbb
or
pop
mov
jge
jge
outsb
leave
xor
mov
add
mov
and
out
inc
mov
xchg
lahf
iret
and
mov
jno
push
sbb
lahf
hlt
rcl
lret
mov
push
je
xor
mov
sub
pop
loope
mov
int
shll
in
nop
mov
and
negb
test
ret
inc
or
jne
jno
dec
cmp
imul
dec
adc
xchg
cmp
adc
or
or
ja
mov
fsubl
sub
das
and
hlt
push
fisttps
stos
sub
cli
ss
xchg
popf
xor
xchg
push
bound
add
pop
dec
sub
add
mov
pop
leave
cmp
push
pop
inc
xchg
lock
sub
xchg
add
insl
cli
sub
cltd
cmp
cmp
stos
add
mov
dec
movsb
arpl
push
adc
jno
jbe
aad
or
cmp
xchg
sbb
stos
dec
wrmsr
cmpl
fimuls
imulb
and
lock
xchg
insl
into
xor
sub
lods
pusha
dec
inc
int3
ret
idivb
aaa
xor
movsl
outsl
cmp
xor
aaa
enter
in
notb
test
sahf
pushw
adc
sarl
hlt
ds
mov
pusha
ljmp
inc
rol
das
int
das
cltd
mov
mov
sbb
xchg
nop
fdivrl
or
dec
shl
outsb
aam
push
and
jne
push
pop
arpl
scas
jecxz
xchg
sbb
mov
in
pop
jecxz
jg,pn
mov
fidivrs
addr16
ljmp
rorb
xor
jge
pusha
faddl
dec
sbb
sub
inc
and
mov
xchg
mov
enter
shrb
dec
movsb
mov
sbb
mov
aaa
pop
xchg
inc
cmp
xor
enter
inc
mov
push
mov
pop
xor
inc
out
das
js
lret
imul
dec
in
inc
sarb
and
xchg
std
push
stos
fucomi
pop
dec
popf
sbb
jp
sbb
ret
arpl
sub
aaa
fs
pop
icebp
ret
test
sarb
hlt
xor
movsl
dec
rorb
adc
cmc
jp
push
cli
add
sbb
ret
and
jge
and
pop
xchg
and
xchg
test
js
aad
jmp
mov
sbb
xchg
sbb
shlb
xor
xchg
cld
mov
roll
push
stos
imul
sbb
add
xchg
xchg
mov
loopne
sbb
movsl
ja
cld
sbb
rolb
lret
test
fwait
and
bnd
into
lcall
xor
push
dec
into
jmp
jnp
xor
imul
fldl
or
add
pop
xor
les
xor
or
gs
ljmp
pop
xchg
jmp
mov
enter
mov
cli
clc
or
lds
pop
mov
pop
jg
data16
mov
outsb
fistl
xor
jbe
xchg
adc
cmp
xor
test
icebp
js
enter
mov
jle
or
dec
cmp
xchg
lods
cli
jno
mov
shlb
pop
adcb
xchg
xchg
cld
sub
and
rcr
pop
and
daa
mov
xchg
hlt
add
push
xorl
mov
scas
lahf
les
repz
add
xor
imul
repnz
fcmove
add
sahf
rcll
xor
sub
dec
jb
cltd
cmp
push
lret
jmp
bound
xchg
cltd
aam
xchg
sub
popa
test
xor
out
mov
pop
sbb
jmp
mulb
rcl
pop
sub
pop
sub
push
push
lcall
movsl
xchg
je
xor
dec
inc
cmp
push
rcrl
push
or
adc
popa
pop
dec
movsb
daa
lds
movsb
pop
jno
nop
xchg
lock
pop
xor
mov
and
push
add
xchg
push
and
out
mov
xchg
mov
mov
or
xor
fdivp
push
mov
adc
sbb
sbb
insb
fildll
mov
pop
jae
mov
js
lods
test
and
mov
mov
scas
mov
imul
inc
not
movsb
xor
insb
dec
mov
xor
arpl
std
mov
cs
and
cli
xchg
loopne
iret
adc
xor
cld
jecxz
inc
jns
pusha
jne
outsl
pop
out
in
jecxz
gs
loopne
add
or
mov
pop
jae
xchg
dec
mov
push
pop
jge
add
push
sbbb
popf
xor
outsl
out
mov
loop
dec
add
imul
sti
cmp
cmp
fcompl
mov
inc
pop
cmc
cli
xor
jecxz
pusha
cmpsb
andb
ljmp
mov
inc
cmp
rolb
icebp
inc
rolb
jp
mov
mov
cmpb
sub
or
outsl
ja
push
pop
fidivl
nop
xchg
dec
sbb
out
jnp
lea
xchg
lock
xchg
out
jo
fwait
mov
hlt
fwait
repz
fwait
pushf
xlat
mov
shrl
dec
mov
leave
push
jge
ret
insb
mov
outsb
lods
pop
fs
inc
push
cmp
lods
mov
ret
or
xlat
xchg
cli
in
dec
out
cmpsb
mov
pop
xchg
call
add
mov
fcompl
adc
pop
and
loop
push
sarb
ja
jmp
lahf
pop
int3
icebp
inc
outsb
aaa
fsub
jge
mov
cmpsb
fs
test
rclb
cwtl
ja
pop
in
push
clc
imul
sbb
aas
push
mov
push
test
jnp
aaa
inc
popf
bnd
pop
js
ret
lods
jo
cli
notb
fldl
nop
ja
pop
stos
daa
jl
fwait
cmp
pop
mov
aas
int
movsl
sbbl
mov
mov
cwtl
lods
and
inc
outsb
fs
pop
push
inc
out
mov
xchg
mov
pop
test
xchg
sbb
xchg
adcb
pop
ret
ja,pn
stos
rclb
shll
out
jae
jle,pt
dec
ss
das
sub
adc
les
cmp
jmp
mov
dec
add
mov
lahf
call
push
xchg
push
or
outsl
xchg
xchg
jbe
clc
add
push
insb
jge
fbld
xor
pop
inc
jle
mov
sbb
movsl
push
stos
fnstsw
fimull
into
nop
xchg
outsl
push
insb
mov
lahf
push
add
or
int3
in
sbb
sub
ret
mov
outsl
fdiv
or
pushf
jge
out
movsb
pop
and
sub
adc
push
bound
stc
mov
dec
xor
mov
sarl
dec
mov
inc
aam
pop
xor
and
test
push
jno
cmp
aam
leave
fisubrl
dec
and
iret
enter
push
push
les
mov
jo
aaa
outsl
sbb
pop
push
adc
push
pop
leave
cs
xchg
loopne
push
inc
and
adc
lret
mulw
mov
decl
ret
xor
aad
mov
push
movb
mov
jnp
enter
fs
mov
inc
inc
cmpsl
mov
sub
mov
pop
or
xchg
jb
cld
pop
and
imul
or
pusha
inc
push
push
popf
dec
lcall
lret
or
mov
insb
in
rol
outsb
outsl
mov
mov
or
mov
and
xchg
movsl
jae
mov
inc
jle
ljmp
pop
setb
pop
xchg
sbb
andl
sbb
pushf
repz
cwtl
pop
outsl
pop
out
xchg
cmpsb
sub
xor
ret
faddl
adc
mov
jbe
out
push
xlat
mov
mov
andl
mov
shlb
loopne
xor
loop
push
imul
jb
iret
or
iret
pop
imul
jb
cmp
mov
sub
das
insb
cwtl
hlt
pusha
jl
mov
adc
bound
mov
and
pop
push
inc
popa
mov
movsb
ja
inc
jne
mov
lea
testb
add
add
sbb
mov
sti
popf
lahf
loop
jne
sub
in
outsl
hlt
jecxz
or
lods
jae
je
subps
cmp
sub
mov
mov
jae
xchg
adc
cmp
les
mov
dec
xchg
insl
scas
lds
int3
cmp
push
push
shll
lea
ja
and
lahf
mov
pushf
cwtl
out
dec
jge
ds
sbbl
arpl
mov
xor
jns
push
xchg
push
xchg
fsubp
sub
jg
in
insb
jle
clc
sub
xchg
stos
add
sbb
push
push
xor
cmp
ret
mov
jmp
addr16
xor
scas
add
inc
xchg
sbbb
loope
dec
cmp
push
and
sbb
xor
sbb
fs
and
push
push
aas
lretw
std
pop
cwtl
mov
ljmp
insl
dec
or
mov
mov
xchg
stos
adc
repnz
clc
sub
jp
or
scas
rcrl
add
fisttpll
sbb
pop
pop
pusha
std
xor
outsl
xor
sub
xchg
mov
mov
inc
cs
jp
pop
in
mov
mov
orl
push
test
mov
and
mov
push
js
mov
xchg
clc
je
push
mov
fsubrl
aam
idivl
shll
dec
cmp
adc
sub
sbb
jmp
fwait
leave
aad
push
sbb
enter
popa
insb
add
call
ja
imul
aam
repnz
loop
call
mov
mov
mov
dec
jns
ret
dec
jg
pop
adc
cmp
lcall
popa
popf
xchg
ret
cmpsb
fcoms
adc
cltd
vpsllq
lahf
popf
fcomps
push
into
push
aaa
mov
push
push
cmpb
add
inc
cli
std
add
jle
jmp
out
mov
add
inc
imul
popf
icebp
daa
jne
iret
xchg
out
xor
lods
sarl
cltd
adc
jmp
pop
aad
test
imul
cmpsb
cmpsl
cmp
or
in
sub
inc
inc
rcrb
sbb
mov
insl
out
fwait
scas
xor
jg
jbe
mov
sbb
out
sahf
in
daa
push
popf
lock
movsl
dec
aad
pusha
mov
std
addr16
push
jne
std
cli
sub
mov
add
mov
aaa
inc
pop
les
sahf
lock
xchg
ljmp
push
imul
pop
adc
rcrl
leave
sbb
jno
inc
sbb
and
dec
add
test
rcrl
leave
sbb
jno
inc
sbb
and
dec
add
icebp
jns
cltd
shr
mov
xor
push
inc
cmp
and
dec
add
adc
rcrl
ss
outsb
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
sub
mov
inc
clc
lret
push
scas
add
sbb
or
jnp
imul
jne
gs
push
mov
xor
lret
cmc
sub
jnp
or
jp
push
pop
aad
test
std
mov
or
sbb
sti
lret
sub
xchg
outsl
mov
loop
int3
jp
and
or
and
adc
lret
or
fnstsw
pop
pop
test
sub
daa
je
bswap
stc
sti
xor
fsts
mov
mov
mov
xchg
push
xchg
mov
aas
je
pusha
xchg
dec
jmp
pushaw
sbb
cmp
pusha
dec
pop
cmc
dec
les
setne
stos
jne
inc
data16
cli
xor
lret
or
mov
loopne
cmp
jge
inc
pusha
push
leave
push
lahf
rclb
loop
ficompl
pop
cmc
dec
adc
lds
out
movsb
filds
fcoms
inc
movq
jb
cmpsb
and
stc
vpaddb
push
mov
pop
pop
xchg
dec
add
jne
xchg
lcall
and
cmp
and
lds
lea
push
pop
xchg
dec
jmp
daa
out
notb
les
inc
scas
pusha
push
mov
mov
push
fisubl
shll
aam
in
xor
and
xor
pusha
lahf
pop
mov
fidivrl
imul
outsl
mov
or
push
out
int3
and
mov
adc
sub
sbb
or
jp
push
pop
xchg
dec
test
push
mov
xor
lret
cmc
sub
sbb
or
jp
push
pop
xchg
dec
test
neg
imul
dec
jge
and
pop
daa
cwtl
jmp
lret
movsl
insw
vpsrld
call
and
sbb
inc
jmp
pushf
jp
icebp
cltd
sbb
nop
lret
jnp
pop
push
mov
mov
sahf
insb
xor
xor
mov
pop
push
mov
fisubrs
stc
pop
scas
movsb
xor
cmpsb
xchg
sub
pop
or
push
aam
call
rorb
mov
or
dec
test
lods
push
xor
add
jae
jae
dec
xchg
add
mov
in
pop
fdivr
daa
scas
pop
jnp
mov
add
add
sarb
iret
adc
test
stos
pop
nop
inc
mov
adc
cmpsb
daa
das
xor
mov
shrd
je
add
cmp
push
sub
adc
aad
int
add
jecxz
xor
jb
dec
xor
in
int3
or
lret
fwait
icebp
adc
xor
sbb
and
leave
cld
imul
bound
xlat
scas
loopne
xchg
popa
cmp
lahf
js
sbb
pop
xchg
data16
in
mov
jae
xor
mov
mov
mov
jmp
ja
mov
insb
sub
jns
int
out
loop
fstpt
push
int3
pop
inc
rol
fcmovnu
adc
jns
arpl
insl
sub
cwtl
mov
pop
inc
aad
mov
stos
cmp
or
jnp
sub
dec
push
or
and
lcall
fnstsw
faddp
pop
test
xor
jge
mov
fists
cltd
or
adc
subl
scas
mov
xor
lret
aaa
jmp
sahf
cmpl
mov
dec
js
aas
pop
add
push
fimull
inc
cmp
jne
mov
cli
push
and
in
stos
or
sbb
mov
pop
fwait
jne
mov
cmp
rcl
scas
arpl
mov
sub
mov
imul
mov
push
aaa
scas
movsl
xchg
add
push
inc
test
xchg
jle
push
std
in
jns,pt
mov
sbb
inc
aad
dec
jmp
pop
sbb
inc
sbbl
add
xor
dec
call
push
test
das
loopne
dec
and
mov
lret
cmp
inc
lock
jge
mov
in
mov
dec
push
jle
or
push
ljmp
xor
sub
add
mov
mov
lock
aas
test
add
or
lret
sub
aam
test
add
push
loope
adc
cmpsl
or
out
xor
mov
jp
out
daa
sbb
push
mov
outsb
pop
add
mov
sbb
fdecstp
cmp
push
sbb
inc
push
cmp
sbb
sub
sbb
add
sahf
cmp
leave
test
incl
addb
inc
test
ljmp
xlat
jl
cmp
inc
dec
xchg
xor
xchg
repnz
sub
mov
xchg
jmp
sbb
or
fwait
es
in
insb
xchg
inc
mov
insl
sub
cmpsb
mov
dec
push
xor
and
dec
xor
pop
stos
xor
jae
ret
mov
adc
and
pop
mov
in
mov
mov
scas
mov
in
and
xor
xchg
mov
jae
cmpsl
push
mov
das
jns
cmp
pusha
mov
testb
jmp
dec
xchg
cwtl
sbb
add
in
xor
movsb
xchg
clc
icebp
fadds
in
push
xchg
jl
sub
add
or
cwtl
jle
dec
xor
roll
cmp
int
mov
mov
jp
pop
mov
cld
xlat
rcrl
xchg
addb
cmp
inc
adc
dec
repz
xchg
sbb
or
add
aam
fisubs
mov
pop
into
lods
mov
xchg
xchg
ja
sub
stc
pop
inc
popf
adc
xor
cld
cltd
cmp
ja
daa
jle
ret
xor
lcall
jle
ds
mov
xchg
mov
pop
dec
push
aam
dec
outsb
inc
xor
xorb
cmpsb
or
push
add
jne
mov
fsts
scas
jge
push
es
and
pop
clc
jmp
out
xchg
ret
out
dec
int
sbb
cmp
jle
aam
cmp
dec
in
mov
inc
inc
outsb
mov
mov
pop
sbb
and
inc
outsb
out
mov
fdivs
leave
xorb
scas
jo
clc
out
xchg
mov
xor
xchg
mov
repz
cmc
mov
or
std
jno
mov
add
andb
int
push
sub
mov
clc
fnclex
or
mov
repnz
cmp
clc
insb
lcall
jge
push
jmp
movsb
sub
out
sbb
rcr
push
jae
xlat
rcrb
cltd
xchg
lods
jbe
ror
iret
mov
mov
aam
stc
mov
inc
lods
cmpb
push
jno
pushf
std
mov
int3
jb
xchg
push
mov
and
mov
cltd
xchg
pop
loop
or
jno
popa
aam
pop
mov
xchg
mov
pop
popa
add
push
imul
addl
push
sahf
lods
sub
lock
sbb
push
sbb
punpckldq
hlt
clc
adc
jl
into
loope
mov
jbe
rcll
imul
loopne
subl
rolb
xor
sti
inc
test
xchg
out
arpl
rorb
adc
les
shlb
ret
mov
mov
lret
add
mov
sahf
jae
sub
rorb
and
inc
mov
rorl
stc
pop
push
dec
popa
mov
cmpl
out
and
shr
inc
inc
add
pop
sbb
inc
lcall
cltd
add
inc
into
cli
cwtl
dec
xchg
jae
jle
outsb
stos
sub
mov
add
clc
shl
push
pop
arpl
lahf
sbb
aas
hlt
loopne
jbe
or
mov
cli
or
mov
shlb
pop
mov
add
aaa
cmp
je
adc
nop
mov
loope
adc
ret
imul
lcall
sbbb
lahf
add
ret
dec
add
out
cmp
and
icebp
inc
inc
fsubrs
jg
mov
pushf
jecxz
fs
mov
cmp
sahf
xchg
jmp
xor
shl
das
xorb
sbb
inc
push
mov
fs
jmp
arpl
jp
push
cmp
xchg
pop
ja
dec
popa
out
rolb
sbb
mulb
jp
or
inc
mov
movsl
sbb
out
rcl
mov
push
sbb
clc
ret
out
or
jge
mov
pop
mov
mov
shlb
lea
pop
inc
cmc
iret
test
or
dec
xlat
xor
icebp
sbb
je
or
cmpsl
pusha
or
pop
test
fsubp
rclb
clc
rcrl
fisubl
addr16
fs
pop
sub
hlt
mov
adc
aad
lret
sbb
sub
and
and
jecxz
in
negb
mov
lds
jae
xor
subb
xor
sub
pop
adc
insb
cmpsb
pop
sub
lea
xchg
loopne
dec
dec
cmc
fsubl
or
add
jns
aas
mov
mov
mov
insl
mov
pop
lea
mov
mov
lret
fwait
cmp
lahf
jns
dec
or
sti
add
scas
ret
out
pop
pop
loopne
sti
and
jae
pop
sti
test
push
das
jno
gs
jno
ds
xor
xor
cmp
cmp
testb
adc
xchg
pop
sub
sbb
adc
dec
mov
adc
es
les
outsb
test
sbb
fisubl
out
movsl
enter
adc
xchg
mov
mov
call
mov
cmp
clc
sbb
cmp
leave
cmpsl
sub
jbe
test
aaa
mov
and
sub
jbe
loopne
repnz
lcall
out
dec
dec
xor
mov
inc
mov
jo
lock
test
jns
stc
jmp
pushf
mov
xchg
hlt
and
xchg
enter
push
push
mov
sbb
daa
repnz
pushf
xor
or
push
mov
sbb
ljmp
mov
mov
mov
inc
fistl
enter
push
bound
push
mov
jae
mov
sbb
in
jno
cmp
pushf
aam
mov
aaa
loopne
jmp
jns
lahf
and
mov
lods
mov
pop
sahf
and
fildl
mov
int
push
fcmove
mov
loopne
cmp
or
mov
negl
cli
adcb
push
movsb
cltd
leave
xchg
lcall
dec
mov
jne
cmpsl
nop
mov
outsb
jg
ret
pusha
mov
mov
cwtl
or
sbb
inc
pop
inc
out
mov
inc
test
addr16
pop
je
mov
mov
mov
push
repz
cli
lea
popa
add
popa
cmp
fistl
dec
dec
and
insb
sub
xchg
cmp
mov
sbb
pop
inc
inc
cld
sub
xchg
fisttps
xor
lds
and
push
mov
das
loope
and
mov
push
out
dec
call
jge
mulb
sub
mov
loop
ret
cld
lds
sbb
fistl
addl
cmp
cmp
mov
loop
mov
fildll
mov
outsb
adc
jg
push
loopne
xor
out
enter
adc
out
or
mov
sahf
cli
or
adc
out
adc
cmp
adc
imul
ja
mov
push
push
xchg
adc
jl
xchg
xchg
leave
inc
mov
shl
xchg
popf
sub
adc
push
jbe
cmc
mov
lds
loop
or
push
jns
mov
test
mov
mov
cmpsl
pop
aam
jno
mov
imul
std
jl
loope
add
mov
and
dec
pop
notl
xchg
push
fnsave
mov
cwtl
sbb
pop
adc
bnd
jle
adc
mov
not
add
aam
jb
outsb
lods
mov
and
cmpsl
insb
sbb
hlt
mov
xor
icebp
dec
xchg
cmc
insl
cmp
and
fwait
push
add
je
pop
xchg
imul
cmp
mov
push
dec
dec
xor
and
add
dec
and
sbb
lea
jge
mov
fwait
xchg
pushf
add
sub
sbb
sub
push
jb
jmp
scas
sahf
jmp
in
lea
push
lea
es
inc
sbb
pop
cwtl
mov
movsl
daa
inc
imul
rcll
icebp
inc
mov
or
mov
in
dec
lods
lods
stos
jb
mov
fldl
scas
jl
xchg
pop
mov
xchg
js
pop
xlat
ret
imul
pop
test
pop
cld
push
hlt
xchg
mov
popf
cmp
xor
xchg
dec
or
aaa
jle
pop
mov
in
ljmp
in
fdivr
mov
sahf
mov
xchg
sbb
dec
xor
pop
mov
jno
xchg
sbb
fpatan
pop
ljmp
xchg
cmp
in
inc
popa
dec
sub
int3
es
adc
cli
dec
xchg
int3
aaa
aam
xchg
lret
inc
lods
sti
add
rol
or
imul
sti
std
xchg
add
arpl
cli
add
out
ss
scas
pop
adc
lods
pusha
in
sbb
pop
std
xchg
outsl
sahf
out
aas
mov
outsl
in
fidivrs
aam
mov
adc
out
inc
call
lcall
clc
fs
jle
sarl
test
cld
das
pop
cmp
mov
and
icebp
lock
filds
sub
lahf
lods
stos
orb
mov
adc
pop
xchg
imul
xchg
iret
or
inc
aad
push
xor
iret
out
or
iret
push
inc
mov
xchg
add
das
out
pop
xchg
mov
fs
rcl
lret
rcrl
fstps
sarb
sub
mov
lock
loop
movsb
daa
xchg
iret
sub
rolb
scas
in
mov
loop
data16
movsb
xchg
adcb
ret
cli
pop
sub
sub
gs
icebp
and
sbb
iret
loop
adc
xchg
dec
inc
jl
mov
xchg
pusha
or
insb
or
add
xchg
jmp
xor
int
fidivrl
and
adc
inc
jae
loop
repz
shll
insl
movsl
dec
or
cmp
les
mov
add
xchg
xchg
flds
inc
icebp
lods
and
adcb
stc
mov
xchg
cmc
scas
xchg
call
dec
xchg
jle
inc
aam
loop
xor
int
cmp
sub
dec
mov
mov
inc
jle
popa
push
xorb
adc
and
daa
std
push
scas
clc
out
iret
outsl
sub
je
mov
xor
out
or
pushf
push
arpl
addl
pushf
push
and
cmp
adc
fldcw
arpl
xor
or
dec
int
leave
jmp
int
mov
fstpl
pusha
ror
mov
lahf
adc
lock
jmp
pop
and
leave
dec
jecxz
pusha
cmpsl
push
push
mov
xchg
subl
add
xorb
into
jge
pushf
sub
fwait
aad
cmpsb
fcomps
inc
xchg
repnz
xor
add
pop
jbe
repnz
loope
mov
cs
xchg
enter
lahf
xchg
xchg
push
mov
xchg
push
fmull
popf
mov
jno
jg
push
int3
mov
es
notl
pop
mov
icebp
iret
ret
cld
ds
xchg
in
dec
jns
push
dec
hlt
lods
pop
outsl
pop
or
jp
dec
cmc
xchg
xchg
dec
inc
sahf
push
das
in
dec
out
test
push
sbb
fs
push
pop
rclb
push
pop
push
fstpt
mov
add
mov
and
mov
in
mov
adc
fs
lock
cmpsl
lret
mov
lahf
fstpl
pop
cltd
jge
mov
gs
sbb
inc
mov
sub
adc
lret
popl
cmp
rorb
call
xchg
mov
cmp
push
decb
mov
mov
xor
pop
jge
loop
movl
adc
test
mov
push
mov
sbb
add
iret
mov
shlb
pop
push
fwait
mov
xchg
pushf
add
push
div
mov
pop
mov
xlat
pop
or
lock
fwait
xchg
push
cmp
cmpsl
out
pop
ss
ja
out
xor
outsb
bound
mov
inc
neg
test
incl
xor
fidivrl
ja
or
rcl
into
mov
ja
push
fs
inc
push
inc
daa
mov
sbb
pop
mov
mov
mov
jle
lods
clc
mov
icebp
jp
test
test
ljmp
popa
inc
push
dec
ja
ss
xchg
movsl
and
and
aam
inc
pop
sti
add
filds
fwait
imul
and
sub
xor
fsubs
sub
loop
mov
xlat
aam
or
jb
mov
int3
push
push
je
cmp
xor
movsb
ja
mov
xchg
push
sub
push
icebp
dec
mov
lret
aas
cwtl
mov
mov
mov
mov
fistpll
dec
xchg
frstor
cmpsl
inc
loopne
aas
jbe
xorl
cwtl
pop
sbb
imul
xchg
xchg
fsubrl
xorb
lock
fsubl
add
out
cmpsb
pusha
push
sbb
aaa
je
mov
mov
adc
or
notl
ljmp
enter
mov
rolb
hlt
mov
pop
scas
fs
es
add
sbb
pop
stos
rorb
lods
mov
cmc
mov
lods
xchg
jnp
add
out
xor
mov
repnz
outsl
in
cli
ds
out
out
add
mov
xlat
lock
aaa
icebp
adc
aas
mov
push
rorl
inc
xchg
mov
cwtl
imul
das
mov
sbb
cld
push
add
xchg
pop
mov
aaa
xchg
adc
mov
jle
cli
xchg
ss
cmp
shll
push
sbb
test
nop
mov
mov
adc
push
jge
cltd
xor
xchg
popf
xlat
and
repnz
push
add
push
mov
mov
fldcw
pop
icebp
fbstp
sahf
jne
cld
pushf
leave
xor
les
add
call
pop
pop
sub
pop
out
pop
jo
mov
cli
dec
shll
xor
xchg
fdiv
inc
cmp
ss
inc
pop
ret
out
in
inc
stos
mov
lcall
repnz
mov
jnp
lds
push
outsl
ds
mov
icebp
fwait
repnz
adc
imul
or
fstpt
cmp
add
pusha
into
insb
xlat
push
popf
cmp
pop
xor
je
stos
ret
jne
jb
push
push
ss
jne
xchg
and
xor
out
adc
sbb
xchg
pop
in
mov
jnp
add
in
adc
int3
or
pop
jmp
push
test
lret
nop
ret
jge
xor
jnp
jmp
pop
mov
scas
shlb
mov
sbb
clc
mov
aad
pop
sbb
pop
outsl
xor
in
mov
jl
shlb
aad
adc
out
mov
dec
arpl
mov
mov
push
leave
xchg
or
lods
cmp
pop
xor
mov
cmc
push
loop
loop
jmp
cmp
add
cmp
xor
ds
dec
pop
push
pop
mov
mov
sbb
xor
loope
imul
pusha
in
mov
adc
jae
pop
sub
add
push
lret
add
sbb
nop
lea
mov
ljmp
xchg
mov
mov
or
sub
nop
inc
xor
dec
rcll
adc
and
mov
inc
dec
aas
mov
cli
lock
add
pop
lea
repnz
mov
push
xor
ret
jns
sub
lret
leave
pop
cmp
popf
notl
test
adc
mov
jmp
in
aaa
or
cmpsl
dec
jl
adc
or
sub
adc
cld
cmc
jb
push
xorl
clc
lahf
and
inc
push
push
fistps
push
leave
jb
addr16
cmp
sbb
bound
pushf
sbb
iret
sbb
sbb
jo
push
add
adc
push
sbb
push
movsl
mov
cmp
movsl
mov
adc
jmp
jl
sbb
icebp
mov
or
dec
scas
sbbl
xor
cli
jecxz
push
sbb
pushf
add
das
das
mov
testl
insl
cmp
sub
sub
rorb
sbbb
sbb
cmp
test
push
and
inc
pusha
cmp
sti
insl
and
int3
movsb
jbe
jl
cmpsl
int
insb
sub
mov
ret
push
outsb
aaa
push
mov
adc
adc
loop
push
add
rcrl
xor
jmp
fs
or
and
lds
inc
push
cmpl
mov
mov
push
push
in
xor
lock
pop
dec
mov
mov
xchg
jnp
cmp
icebp
cltd
fldl
mov
popa
xchg
lock
je
push
out
cwtl
mov
xchg
jg
iret
jno
dec
mov
out
adcb
scas
adc
and
je
ljmp
dec
xor
cli
adc
lock
push
mov
and
jl
lcall
leave
push
adc
insl
in
jle
mov
ljmp
push
mov
adc
pop
aad
inc
sbb
pop
push
mov
lret
xchg
sbb
jmp
cld
adc
bound
pop
and
roll
lds
add
mov
mov
aaa
and
pushf
enter
inc
cmc
mov
adc
jle
sysexit
pop
sub
nop
sbb
mov
jmp
cmp
shrl
gs
sahf
cs
dec
repnz
jge
add
lea
pop
in
push
mov
inc
bound
push
pop
xchg
sbb
fstps
sarb
adc
sub
adc
dec
test
test
or
shrl
xor
mov
sub
fsubrl
xchg
jl
jo
cmp
cmpsl
aad
pop
popa
sub
dec
mov
shll
mov
insb
hlt
add
mov
or
out
addl
add
xchg
pop
rcrl
pop
sub
inc
add
popf
adc
jle
clc
rolb
dec
fwait
jp
gs
xchg
cmpsb
mov
repnz
push
or
xchg
push
mov
out
out
fnstsw
xor
cmp
and
cmp
sub
sbb
or
jp
push
pop
xchg
dec
test
push
mov
xor
lret
cmc
sub
sbb
or
jp
push
pop
xchg
dec
test
sub
ljmp
sub
or
jp
push
pop
mov
test
push
mov
ljmp
or
dec
mov
or
movsl
push
jp
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
mov
movsl
ss
shl
adc
or
pop
jne
gs
mov
movsl
sti
aad
lret
in
adc
or
pop
aaa
dec
gs
mov
movsl
sti
aad
lret
in
mov
or
cs
and
ficompl
adc
shrb
xor
pop
mov
or
aas
xchg
cs
or
cmpsl
repz
and
add
jmp
and
std
scas
cli
in
hlt
test
and
or
xor
int
xchg
pushf
inc
dec
jo
sahf
adc
mov
or
call
lret
fsubrs
push
push
test
mov
mov
jns
movsl
inc
pop
jp
sbb
lret
test
sub
inc
jne
jp
xor
aam
rcrb
mov
jmp
jbe
sub
mov
inc
add
roll
pop
cmp
lret
add
in
and
inc
out
push
popa
lret
fs
stos
test
aad
lret
in
adc
or
pop
jne
or
cli
filds
sti
mov
leave
mov
jo
jno
pop
jae
jp
imul
ja
and
xchg
into
xchg
mov
xlat
sti
popf
scas
mov
pop
insl
jp
sbb
jp
add
xor
hlt
fucom
shlb
lret
in
adc
or
pop
jne
gs
mov
movsl
sti
aad
lret
in
adc
or
pop
jne
gs
pop
movsb
loop
sbb
dec
test
aas
or
inc
mov
das
or
insl
data16
inc
add
pop
sbb
xchg
mov
test
and
loope
jl
shrb
mov
xchg
adc
sbb
sub
ret
push
adc
call
mov
rorl
sbb
leave
and
jecxz
fnstsw
cmp
xor
pop
movsb
pop
adc
mov
ds
pop
cmpsl
int3
insl
call
ss
lcall
push
out
push
pop
andl
xor
sbb
das
call
mov
dec
jae
gs
dec
cmp
mov
stos
inc
outsb
sbb
push
add
fstps
inc
leave
aaa
bound
hlt
inc
inc
frstor
repnz
shrb
dec
mov
lret
popa
cmp
mov
mov
into
mov
ljmp
xchg
fsts
push
das
es
popa
test
sbb
daa
mov
dec
jb
mov
test
stos
in
cmp
fwait
jbe
scas
dec
inc
sti
rorb
rorb
jg
pop
ret
adc
cltd
or
clc
adc
mov
mov
jl
cwtl
lcall
mov
jbe
in
add
add
push
or
loopne
hlt
cmp
dec
cmp
push
fsts
xchg
mov
jb
cmp
pop
scas
test
mov
push
pop
fisubrl
jnp
lcall
aaa
js
test
or
xchg
rolb
mov
sbb
jmp
in
mov
xchg
pushf
aaa
outsl
sbb
lret
push
test
and
test
movsl
jnp
jp
aaa
xchg
xchg
mov
movsb
mov
jns
call
adc
add
dec
mov
adc
mov
push
push
test
mov
push
xor
xchg
imul
fs
sarb
add
adc
push
dec
shlb
or
jbe
jno
or
rcll
sbbb
test
xor
int3
and
stc
cwtl
jne
cld
or
jge
test
shlb
push
pop
sahf
das
fcmovnu
xor
icebp
add
jbe
inc
sub
push
dec
repz
out
outsb
inc
sbb
fildll
mov
ds
xchg
inc
pop
inc
xchg
outsl
pop
push
xchg
out
sub
sbb
bound
fs
aam
xor
jae
jb
pop
add
push
fcmovnb
or
aaa
dec
sti
mull
enter
mov
insl
lahf
pushf
lret
fnsave
pusha
imul
rolb
insl
sub
jns
mov
sub
ret
sbb
imul
fdivrs
stos
and
in
mov
mov
xchg
in
adc
test
stos
pop
pushf
xor
int3
sti
stc
dec
icebp
fisubl
mov
mov
xor
adc
mov
ret
xor
xor
loop
mov
andb
mov
sbb
mov
xchg
sbb
out
pop
js
xor
mov
mov
imul
mov
and
adc
mov
sbb
loopne
pop
adcl
pop
gs
mov
ljmp
mov
out
mov
jno
subb
dec
and
dec
mov
adc
dec
std
or
loope
push
sar
in
add
hlt
pop
mov
js
aas
lea
shrb
das
pusha
mov
jnp
pop
mov
js
ss
xor
inc
scas
out
jp
mov
xchg
add
pop
add
sub
lods
int3
inc
push
mov
cmp
inc
mov
mov
xchg
aad
roll
adc
mov
leave
pop
add
push
inc
xchg
insl
jmp
dec
aaa
dec
xor
nop
push
adc
insl
lret
enter
mov
inc
push
lock
dec
jmp
pop
test
fs
push
aas
and
mull
xchg
dec
inc
mov
mov
shlb
cmpsl
xchg
pop
ja
jno
bound
pop
call
outsb
and
imul
and
jge
mov
dec
ret
loop
mov
mov
adcb
mov
in
out
pop
fsubrl
xchg
xchg
cmp
mov
ja
dec
xor
xchg
mov
adc
add
loope
pop
int3
ljmp
sbb
icebp
fildl
add
fsubr
addr16
movsb
das
push
mov
sarb
clc
jae
fptan
clc
cs
and
inc
and
jl
dec
or
mov
mov
lock
int3
test
shrb
dec
push
stos
pop
lock
rcrl
mov
lods
adc
xor
enter
sti
es
and
and
cmp
jge
loopne
dec
add
andb
pushf
std
jmp
jmp
xchg
pop
add
mov
mov
js
adc
jne
lcall
add
in
stos
shll
sbb
les
ret
jb
xchg
xor
out
out
mov
mov
sar
mov
xchg
adc
and
sub
mov
push
mov
push
add
daa
les
fldt
ss
dec
and
sbb
ljmp
lds
jb
outsb
pop
and
jne
shll
mov
in
mov
repnz
loop
inc
test
frstor
cmpsb
mov
fisttpll
jns
out
dec
cmpsb
sub
cmp
sub
xchg
push
pop
and
mov
push
pop
inc
lods
jmp
mov
clc
rcll
cltd
loopne
jo
and
and
xchg
and
xchg
das
call
mov
adc
xchg
test
pop
add
xchg
lock
ja
repnz
fisubl
fistpll
jg
xchg
mov
and
stc
pop
cmp
pop
movsl
push
inc
push
fidivrl
sub
dec
or
jne
out
add
xchg
mov
xor
jne
in
cltd
xor
inc
mov
loop
inc
mov
aad
mov
push
test
mov
test
jb
mov
movsl
leave
enter
jge
fiaddl
cmp
pop
lret
xor
repnz
sub
popa
sbb
dec
imul
jno
sub
push
fnstsw
fisttpl
cmp
fcompl
cmp
repnz
or
test
scas
push
dec
and
imul
arpl
mov
movsl
aas
sti
out
andl
and
sbb
imul
adc
mov
dec
iret
push
sub
arpl
mov
inc
shlb
sti
xorb
hlt
sti
xchg
punpckldq
call
cli
mov
fcoms
and
test
or
mov
dec
aam
rclb
lret
faddl
and
dec
push
imul
adc
sub
and
mov
xchg
and
dec
jae
fistps
and
scas
sbb
sbb
test
ljmp
fimull
push
orb
fstl
movd
mov
scas
shlb
insb
jl
jne
out
mov
daa
pop
clc
shll
pop
dec
or
jecxz
addb
pop
lret
fstpl
xorb
pop
jnp
cli
ds
or
xor
pop
clc
or
movsl
cmp
pusha
lds
test
cltd
out
nop
fs
mov
pop
push
es
scas
push
sbbb
push
in
or
mov
seta
ss
lahf
std
out
add
inc
aaa
iret
sbb
aam
icebp
pop
aas
fmuls
dec
into
imulb
int
stc
sbb
sbb
mov
fwait
lea
loopne
sbb
sub
cmp
or
sub
mov
aas
repz
je
popf
ljmp
or
sub
shlb
pop
mov
cmp
xchg
ret
in
mov
sub
ljmp
and
gs
push
jmp
lods
mov
xlat
sub
push
pop
stos
shlb
sub
addb
pop
repz
mov
jp
dec
add
aam
cmp
aaa
push
aas
cli
outsl
adc
xchg
push
pop
jbe
mov
inc
or
dec
outsb
lock
jmp
shrl
in
adc
fcomi
xchg
aas
movsl
cwtl
icebp
adc
notl
scas
aad
jae
mov
adc
or
clc
pop
lods
inc
push
je
xor
out
fstpl
subl
cld
mov
fdivrl
insl
and
xchg
xor
xchg
imul
dec
bound
stc
outsl
sbbl
dec
mov
inc
imul
xor
stos
popa
jmp
mov
push
pop
pop
ja
cmpsb
pop
pop
aaa
push
or
xchg
jmp
mov
fs
cs
shll
inc
js
mov
add
mov
aam
call
fsubrl
or
mov
push
sti
push
cmp
lret
idivl
enter
pop
adc
push
xor
xchg
rcrl
xor
sub
fnsave
out
and
rcrb
mov
inc
repz
jecxz
inc
adc
adc
push
push
sub
mov
int
insb
test
xor
cwtl
cwtl
sub
pusha
lock
jns
std
sub
or
scas
incb
es
and
pop
push
or
dec
mov
fdivr
cmpsb
jb
rorb
or
or
dec
test
cmpsb
fcoml
adc
adc
andb
xchg
and
aam
in
scas
add
jo
push
ja
mov
or
mov
iret
push
addb
sbb
mov
dec
cmp
xchg
mov
xchg
pop
int3
stc
jae
or
mov
call
outsb
call
enter
sbb
les
test
cli
rcrl
bound
and
adc
inc
add
test
mov
adc
cmp
mov
dec
jbe
shrl
or
outsb
pushf
lods
pop
xchg
shll
fnstenv
popa
fisttps
repnz
push
jbe
testl
and
lods
iret
mov
mov
js
fidivs
sub
xor
xlat
adc
ret
ja
xor
pop
mov
pushf
ljmp
push
fsubs
adc
shll
cmc
cmpsb
in
into
shlb
push
mov
mov
fisubs
inc
or
jmp
xor
dec
out
push
hlt
mov
xor
mov
out
push
bound
ror
push
and
push
out
pop
lcall
push
and
or
inc
jnp
sbb
push
sub
pop
mov
jb
cwtl
mov
mov
test
mov
cmp
movsb
dec
es
xchg
ret
dec
movsb
jne
and
dec
push
movsl
sbb
adc
add
lds
fcomip
mov
push
in
and
sbb
aaa
jmp
clc
outsl
mov
mov
sub
inc
out
call
and
inc
inc
test
push
sbb
ss
dec
fwait
out
push
and
dec
repz
enter
ffree
jmp
xchg
cmp
rcl
jns
xor
outsb
cmpl
mov
gs
mov
das
lret
ds
test
or
cmp
xor
imull
in
xor
jnp
push
test
jmp
xor
pop
aaa
imul
xor
mov
xchg
cmc
pop
sarl
push
add
das
or
mov
mov
loopne
mov
and
sbb
ljmp
in
inc
fs
mov
cmp
mov
dec
adc
out
into
rcl
sbb
adcl
dec
push
mov
cwtl
into
or
push
cmp
jl
movsl
and
lods
pop
mov
jno
fwait
jnp
push
outsl
pop
inc
inc
xor
cli
sub
cmp
cltd
cs
sarb
lea
pop
xchg
adc
push
cs
xor
xor
adc
cmp
xchg
mov
cmp
or
fs
pop
dec
test
sub
std
cmc
sarb
mov
inc
mov
and
sahf
scas
push
add
dec
mov
aam
inc
dec
adc
mov
inc
dec
in
cld
fmul
jecxz
pop
dec
xchg
rclb
inc
fbld
xor
pop
jmp
mov
cmp
shl
out
fisubs
and
lods
fwait
push
ds
int3
mov
lret
cwtl
cmp
outsl
sub
faddl
xchg
pop
nop
pop
je
mov
je
sbb
mov
mov
daa
cli
clc
dec
mov
inc
push
lea
mov
xchg
cs
aad
inc
fidivrl
pop
cs
cli
movsl
push
sbb
aaa
pop
inc
or
out
mov
sbb
iret
js
pushf
arpl
cmp
movsb
xor
push
jno
lods
daa
arpl
dec
adc
lahf
incl
mov
pop
loopne
loope
popf
pushf
xchg
shl
es
imull
out
gs
or
sbb
or
std
clc
push
fincstp
sbb
stos
or
popf
mov
lods
scas
add
cmp
lret
cmp
stos
and
cmp
xchg
cmp
fwait
loop
fwait
push
pusha
mov
data16
cmp
mov
jp
push
push
xchg
mov
in
incl
in
add
std
pop
pop
mov
dec
xchg
and
loop
iret
mov
mov
in
ret
test
xor
lret
jge
cltd
dec
and
sub
xchg
sahf
jmp
cmpsb
int3
mov
mov
lods
ljmp
test
sub
shlb
in
mov
pop
loope
inc
call
leave
mov
call
shlb
iret
in
repz
adc
stos
stos
test
pop
jne
aam
into
fsincos
dec
daa
dec
dec
jecxz
dec
mov
mov
mov
inc
pop
dec
mov
sub
ljmp
leave
adcl
pop
popa
mov
xor
dec
sbb
pop
lea
daa
rorb
stc
out
daa
data16
pop
fistl
add
in
lahf
mov
or
lods
xchg
mov
pop
pusha
call
aas
mov
and
std
sahf
mov
mov
movsb
push
popf
and
dec
push
push
arpl
mov
insb
sbb
in
outsl
aas
sbb
fsubrl
jb
or
sub
das
or
add
stos
movsb
fldt
mov
jno
insw
ja
push
gs
push
mov
mov
inc
inc
jnp
loopne
cld
mov
cmp
jle
stc
jp
fs
test
mov
or
adcl
add
xchg
mov
push
cmpb
xchg
inc
aaa
xchg
fwait
mov
stc
int3
in
push
dec
loope
cs
or
pop
pop
adc
adc
xchg
adc
pushf
inc
xor
subl
sbb
aas
pop
sbb
clc
fcmovnbe
inc
ds
mov
leave
mov
jb
add
add
push
and
sub
push
leave
pop
adc
imul
iret
xchg
in
arpl
xchg
sbb
pushfw
add
stos
inc
jg
pop
les
fdivrl
jnp
mov
xor
jae
rolb
push
add
in
cmpsb
outsb
cwtl
cs
out
fs
xor
fwait
and
sub
or
test
mov
shlb
mov
mov
bound
sbb
lods
sub
call
sbb
push
fimuls
jl
testl
insl
xor
jmp
fcompl
fdivrs
aaa
inc
orb
pop
in
lds
in
jle
sbb
andl
enter
dec
or
aam
pop
rep
into
cmp
out
jge
dec
scas
push
sub
mov
clc
fsubrs
add
sbb
mov
nop
and
xchg
xchg
cmc
and
in
cli
cmp
aam
imul
pop
adc
push
adc
and
mov
xchg
repnz
push
inc
inc
roll
mov
js
xlat
inc
sub
pop
xchg
mov
insl
jns
imul
aaa
test
leave
in
sahf
pmulhw
jns
inc
pop
stos
icebp
or
daa
jp
xchg
gs
or
jp
push
je
inc
pop
pop
push
gs
loopne
js
jmp
sub
inc
sbb
xchg
sti
push
leave
fs
mov
stos
dec
mov
cwtl
shr
std
xchg
popf
std
into
daa
bound
mov
sub
les
xor
dec
adc
outsb
pop
push
call
adc
ret
cmc
push
push
sub
scas
cmc
fadds
adc
lock
inc
repnz
jo
das
dec
popl
lock
call
inc
jo
sbb
push
hlt
cmp
mov
xor
cmp
lea
shlb
jne
loope
inc
divl
dec
sbb
mov
mov
mov
cld
mov
sub
mov
xor
and
sti
adc
addb
mov
sub
aam
aam
nop
fcoml
xor
jmp
movsb
insl
mov
inc
pop
mov
and
mov
pop
fistps
xchg
dec
shrl
jg
je
addr16
aas
std
in
int3
daa
pop
and
lcall
ja
out
dec
pop
mov
loop
mov
stc
ret
int
sbb
mov
push
jns
fs
fcmovnu
insb
jnp
mov
imul
mov
push
rolb
xchg
dec
ret
add
xchg
jb
or
out
es
rclb
ds
fistps
pop
shrl
out
pop
inc
stos
icebp
jle
push
cmpl
arpl
push
mov
stc
xchg
jl
mov
push
jno
shlb
ret
cmp
sbb
mov
jp
fld
push
mov
jae
call
rclb
and
out
int3
add
insl
fstp
call
icebp
outsl
dec
pop
je
mov
je
fcomp
test
out
out
cwtl
aaa
add
bswap
imul
fimuls
ja
sub
mov
mov
lea
stos
jne
fmuls
daa
std
sahf
lds
divl
gs
shl
fiadds
dec
push
cltd
ret
sub
or
push
or
jle
mov
movsl
mov
sub
sbb
mov
mov
outsb
cli
xchg
fwait
decb
jne
jo
push
jo
cmp
int3
loop
mov
lahf
stc
cmpsb
shll
outsl
stc
push
cltd
push
and
or
popa
ds
pop
outsl
jno
mov
mov
add
std
in
ss
sbb
popa
mov
lret
nop
jecxz
pop
pop
outsb
jae,pn
xor
int
inc
jecxz
inc
jge
push
adc
xchg
gs
std
jne
clc
xchg
out
sbb
jo
xchg
gs
idivl
pushf
xor
push
movsl
xor
gs
ljmp
inc
push
loop
mov
lea
dec
mov
xchg
ja
sahf
sti
js
cli
or
repnz
mov
push
sti
push
je
cltd
cmp
enter
test
sub
jb
pop
lock
fdivs
out
daa
mov
cs
adc
jnp
je
inc
inc
shlb
cmpsl
adc
nop
jmp
adc
dec
cmc
stos
xor
xchg
mov
inc
enter
dec
ret
add
fisubs
sahf
clc
jbe
sub
aad
jge
jae
mov
push
jp
enter
scas
mov
lcall
aas
sub
jbe
or
sub
idivb
adc
ret
leave
ss
mov
lds
push
or
decb
jmp
int
cmpb
jl
cli
je
outsl
prefetch
or
lods
mov
cltd
xchg
xor
or
jle
cltd
xchg
jnp
mov
in
ss
or
xor
cmc
js
daa
mov
lods
ljmp
jp
jb
es
push
xor
insb
sbb
xor
lea
add
std
lea
test
or
notl
lods
lock
jnp
cli
fdivrp
sbb
cmpsb
pop
jle
orb
mull
cmp
sarl
cmpsl
inc
rep
out
jae
jge
push
or
cld
sbb
testl
sahf
loop
pop
fcoms
pop
cmpsl
push
shll
jne
xchg
push
cmc
xchg
ficompl
dec
enter
pop
xor
and
add
push
cmp
ja
in
loop
mov
movsl
or
mov
cmp
and
aas
push
lods
aas
out
or
mov
movsl
mov
outsl
aaa
or
xor
rclb
cs
cmp
stc
test
aad
lret
in
adc
or
pop
jne
gs
mov
movsl
sti
aad
lret
in
adc
or
pop
jne
gs
xor
jmp
fcomi
dec
in
xchg
sub
jnp
imul
dec
gs
mov
movsl
sti
aad
lret
in
adc
or
fstpl
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
rcl
ret
repz
out
cs
ffreep
cmpsb
push
arpl
jae
arpl
push
add
rcl
ret
repz
out
xchg
adcl
pop
inc
inc
pop
jbe
adc
xor
and
ror
ret
fcomip
out
jecxz
xchg
popl
mov
add
dec
adc
pusha
jb
inc
dec
dec
lcall
adc
push
pop
dec
xchg
mov
gs
out
adc
pop
jg
push
ljmp
mov
dec
push
pop
movsl
test
out
in
jbe
pop
xor
fstp
sub
lods
cmp
imul
test
push
push
sub
sbb
cltd
mov
mov
xchg
mov
cmp
xchg
xchg
xchg
dec
ret
push
mov
mov
in
sub
xor
and
sub
mov
cltd
or
xchg
sub
repz
mov
mov
sahf
adc
push
shll
mov
mov
add
inc
and
testb
sub
mov
cltd
das
ds
xor
and
out
jecxz
xchg
xchg
addl
push
inc
pop
jae
arpl
push
add
xor
daa
xchg
stos
mov
xchg
xchg
ret
adc
inc
inc
adc
add
push
ja
ja
sarb
xchg
mov
mov
and
adc
fs
push
push
inc
push
and
cmpsl
lcall
xchg
push
inc
inc
jae
arpl
push
add
xor
and
rcl
ret
repz
out
xchg
addl
push
inc
inc
jae
arpl
push
add
xor
and
rcl
data16
jno
in
sbb
addl
push
or
dec
cmp
les
repz
mov
cmp
mov
lcall
xchg
xor
test
pop
sarl
call
adc
dec
cld
push
out
push
adc
mov
push
lock
out
insl
mov
mov
insb
call
testb
and
inc
pop
sahf
mov
out
adc
mov
mov
jp
addl
bound
fcom
add
fs
gs
lahf
xlat
sarb
into
sub
sub
lds
xchg
cmc
cmp
shrb
push
in
in
ja
xor
repz
inc
lods
inc
icebp
repz
imul
fmull
in
mov
push
mov
xchg
xlat
push
xor
bnd
mov
fnstenv
in
add
xchg
sbb
jns
test
movsl
popf
test
or
test
xchg
aas
adc
dec
mov
imul
mov
inc
cmpsb
cmp
mov
sbb
rcll
xchg
sbb
cmp
push
push
in
cmp
das
in
sub
cltd
xchg
mov
fldl
add
hlt
in
add
inc
cld
mov
pop
mulb
ret
mov
and
push
and
pop
pop
mov
cmp
clc
jmp
sbb
stc
pop
pop
mov
int3
jns
inc
push
or
pop
mulb
pop
popa
mov
cld
dec
arpl
mov
adc
sbb
not
pushf
out
mov
out
lds
outsb
xchg
jno
mov
add
pop
repnz
iret
imul
leave
push
ret
popa
shr
xor
push
dec
fsubl
fndisi(8087
rcrl
lods
iret
jne
jno,pn
repnz
bndldx
add
adc
ficomps
adc
push
pop
loope
push
sbb
mov
sub
cmp
lcall
repnz
mov
cmc
pop
test
jns
inc
jae
scas
imul
inc
addr16
aas
mov
fwait
jnp
cmp
add
mov
adc
xor
ja
cli
insl
lods
loop
push
jmp
fs
mov
jg
xchg
fisubrl
fs
ja
adc
adc
insl
sub
cmpsb
jno
jo
popf
jge
aam
jle
cli
popa
mov
dec
insb
cs
fwait
sbb
cmp
push
xor
inc
subl
in
jne
pop
popf
mov
dec
add
sub
bound
ja
sbb
shr
xchg
cmp
inc
add
mov
add
daa
jmp
inc
in
dec
divl
fwait
addl
lods
pop
sub
xchg
popa
lcall
mov
jns
es
inc
dec
add
or
jnp
jle
dec
orb
inc
std
out
jo
mov
mov
decl
clc
push
cmc
stos
mov
call
icebp
mov
ds
mov
cmp
xchg
cmp
sub
in
push
or
aam
dec
pop
push
cwtl
icebp
adc
ret
adc
repnz
and
orb
cmp
dec
or
mov
inc
stos
je
loope
pop
push
mov
les
out
ret
push
mov
sti
fcoms
xor
dec
mov
push
out
add
stos
xchg
aaa
xchg
popa
fcoml
mov
sub
mov
outsl
dec
aam
dec
in
enter
and
push
fwait
ret
pop
xor
jmp
insb
jb
repz
pop
sbb
xchg
cmp
inc
adc
outsb
insl
xchg
inc
fistps
xchg
adcl
out
fnstenv
push
sbb
jp
xchg
int
lods
negb
rcrb
lahf
aam
subb
cmp
sbb
mov
mov
mov
mov
sub
add
pop
in
sub
pop
stos
push
push
sub
out
repz
imul
cs
orl
jns
xor
leave
adc
loop
and
loopne
jne
mov
jae
test
dec
mov
dec
mov
inc
mov
cltd
push
push
ja
sbb
mov
mov
adc
in
push
ret
ret
loope
loopne
sbb
dec
xchg
push
jae
js
add
pop
push
lret
enter
mov
lods
in
in
pop
adcl
movsl
mov
shll
push
push
push
cmp
iret
aad
cmpl
jne
mov
imul
imull
mov
xlat
mov
or
lret
mov
outsl
push
mov
movsl
cld
push
mov
out
cmp
and
cmp
into
sbb
leave
mov
cmp
je
out
shr
lods
or
mov
jne
cld
push
push
cmp
popa
mov
rolb
mov
iret
les
push
les
jge
repnz
lret
pop
lcall
cmp
xor
fcoml
jne
shrl
xor
or
or
and
push
mov
dec
std
andl
add
inc
pop
or
lret
push
cli
push
js
mov
ficompl
pop
lea
jle
cs
lods
testb
mov
aaa
and
jle
out
outsb
fcoml
xchg
int3
jge
in
sbb
andps
iret
inc
mov
lcall
addr16
jns
mov
std
out
pop
lret
mov
mov
mov
add
mov
cmc
push
loope
rolb
ss
outsb
cld
push
sbb
cmp
mov
mov
jbe
push
jo
jle
adc
and
test
pusha
cmp
mov
pop
std
aad
mov
lods
int
test
inc
or
lret
outsb
or
mov
lea
jne
arpl
xor
lcall
jno
leave
sub
mov
mov
jl
fistpl
push
ret
test
push
test
loop
bound
push
sbb
adc
sbb
and
arpl
ret
mov
pop
xorb
pop
lods
out
jae
icebp
adc
sub
adc
xor
mov
adc
or
imul
pop
out
fucomi
cmpsl
xchg
test
xchg
jecxz
inc
jns
adc
dec
outsb
xor
pop
int3
jns
jae
add
int
dec
lds
fildl
test
imul
ret
xchg
imul
mov
sub
sahf
bound
mov
fs
adc
and
sub
outsl
cwtl
dec
cmpsl
movsb
cld
outsb
cli
movsl
out
xlat
pop
inc
sbb
dec
sub
adc
gs
ljmp
push
mov
dec
mov
sub
cwtl
repz
mov
mov
jmp
icebp
repnz
pop
jne
sahf
cltd
jle
or
cmp
xchg
jg
cmp
scas
push
xlat
ds
stc
lods
pop
mov
push
cmp
gs
mov
add
push
sub
scas
std
sbb
sub
push
mov
lret
sar
push
inc
mov
mov
or
subl
add
adc
adc
les
jbe
movsb
rclb
push
xchg
rclb
xor
in
push
sub
xlat
xor
sbb
mov
insb
push
bound
sbb
or
xor
mov
ljmp
jo
xchg
pop
jno
sbb
leave
inc
mov
mov
jae
stos
cmp
dec
std
pop
mov
mov
xor
xor
not
movsb
adc
les
int
pop
push
sbb
add
jge
push
lods
jmp
in
or
inc
std
dec
push
mov
push
xchg
lret
shrb
xchg
sti
bound
pushf
mov
fidivs
cmpsl
out
mov
movsb
mov
and
fisubs
and
stos
cmc
sbb
xchg
test
cmp
pop
dec
dec
mov
pushf
xchg
imul
imulb
pop
loopne
lret
test
push
lods
cmc
enter
sbb
sub
push
jmp
push
les
inc
jmp
lods
in
outsb
je
movsl
xchg
mov
pop
xor
insl
push
sbb
mov
mov
push
mov
push
xor
iret
xchg
and
xchg
sahf
ds
mov
lret
mov
sub
xchg
push
rcll
cmp
nop
hlt
push
xor
sub
xor
xor
stc
dec
cmpsb
dec
cli
jmp
popa
arpl
int
in
lods
pop
ret
pop
push
sbb
subl
inc
test
sarl
stos
leave
fucomi
dec
fisttpl
gs
nop
lock
adc
pop
dec
lock
xchg
xchg
cmp
mov
aaa
fwait
cmp
dec
add
adc
mov
mov
sbb
je
ret
dec
mov
ljmp
dec
sbb
add
pop
repz
xor
cmp
push
mov
xchg
xchg
ljmp
sub
imul
popa
and
mov
out
fisubl
or
xchg
pop
rolb
dec
or
pop
out
dec
divl
push
pop
adc
pushw
mov
loopne
adc
pop
call
mov
pushf
movsl
mov
inc
mov
sub
sbb
out
inc
inc
fcomip
jecxz
pop
or
test
fstl
lret
xlat
adc
rorl
loopne
sarb
stc
jmp
cmp
mov
sub
pusha
fnsave
mov
inc
push
frstor
faddl
cmp
pop
xchg
mov
out
rclb
cs
or
pop
rcr
xor
sbb
mov
jae
ret
test
sub
xor
mov
push
lds
jl
je
sbb
js
push
mov
jmp
sub
enter
mov
or
xor
push
xor
jae
js
add
sub
out
scas
jo
iret
xlat
and
loop
dec
stos
sbb
pusha
inc
inc
pop
cwtl
in
adc
sti
cmp
adcb
cmp
shlb
dec
adc
push
mov
sbbl
sub
pop
aam
add
add
mov
shll
add
and
cs
mov
push
nop
js
pusha
je
movsl
outsl
outsl
ds
aas
mov
cmp
inc
addb
hlt
pop
jb
push
daa
and
rorl
mov
rclb
xchg
and
dec
mov
pop
daa
into
fldenv
dec
loopne
dec
sbb
shrl
xlat
dec
sub
movl
sbb
jecxz
or
push
ffree
mov
andl
cmp
fstpl
pop
mov
in
push
jmp
mov
sub
mov
sub
cmp
xor
jno
test
or
pop
dec
pushf
adc
lret
decl
fadds
and
dec
xor
adc
mov
push
lahf
xchg
push
push
xchg
pop
mov
cmp
imul
add
lahf
pusha
ja
cmpb
jno
repnz
xchg
or
jno
adc
sub
add
jl
jb
addr16
sub
xrelease
in
gs
dec
and
ret
mov
pop
pop
lea
push
shll
ljmp
shl
ljmp
fdivrs
jne
mov
xchg
adc
adc
and
inc
cwtl
daa
mov
es
inc
fstpl
xor
pushf
cltd
adc
and
lock
pop
jp
and
inc
jnp
aam
jge
jno
out
arpl
lods
imul
sub
push
mov
or
test
lock
mov
out
dec
stos
fbld
dec
push
pop
cmp
fcmove
ret
sbb
push
cltd
sarl
xchg
rcll
and
or
movb
lods
lretw
mov
sub
push
repnz
push
sysexit
xor
cmpl
cmp
arpl
dec
mov
fsubrl
lds
pop
mov
gs
jbe
lcall
add
and
jmp
push
inc
dec
out
pusha
push
stos
xchg
lods
mov
sbb
cmc
stos
test
sbb
outsl
sbb
mov
ljmp
push
es
sub
imul
mov
sub
pop
sbb
dec
jb
ret
jae
mull
addr16
mov
mov
cwtl
stos
lods
pop
mov
or
pop
xorb
lock
lods
stos
pop
dec
mov
sbb
push
adc
and
lahf
and
movsb
cmpsb
inc
mov
mov
mov
cmp
mov
mov
mov
ret
xor
mov
mov
out
aam
add
and
lcall
cmpb
jbe
or
jbe
dec
sbb
xchg
addb
loop
cmp
cmc
ja
and
adc
cmp
push
cmp
bound
mov
adc
adc
lods
dec
lds
mov
into
sbb
and
jge
movsb
push
lcall
cmc
xlat
ljmp
push
and
cmpsb
add
push
imul
sub
dec
xor
leave
sbb
cwtl
xchg
adc
ret
pop
pop
mov
cmp
ljmp
in
sbb
loope
into
rcll
sti
xchg
cld
nop
clc
sub
movsl
rcrl
mov
add
xchg
pop
out
sub
and
iret
mov
ja
andnps
or
inc
rorl
mov
pop
pop
sbb
andl
push
inc
add
enter
fucomip
add
shrb
dec
xorb
push
jbe
loopne
inc
pusha
ljmp
inc
int3
sbb
cmp
xlat
and
aam
jl
loopne
jnp
das
push
into
dec
das
imul
push
xchg
push
rcl
jno
fcmovnu
repnz
cwtl
les
pop
jg
and
int
lods
stc
or
hlt
andl
movsb
xor
icebp
clc
test
jp
jle
add
fs
ss
inc
dec
and
sti
nop
setae
int
popf
or
mov
push
leave
jb
arpl
cmp
and
mov
lahf
stc
aam
int3
test
scas
cmp
sti
push
inc
or
and
add
lods
inc
or
inc
cwtl
aas
insb
mov
aam
lock
nop
sub
jmp
inc
push
xchg
add
rclb
jne
and
fiadds
mov
mov
cmp
jle
les
je
ja
sbb
loop
es
mov
mov
out
jg
insb
iret
popf
inc
addb
cmpsb
stos
loopne
mov
aas
dec
jo
sub
data16
imul
daa
inc
outsb
cmpsb
xlat
pop
lods
mov
and
sbb
cld
add
dec
leave
lahf
mov
or
sti
sub
push
mov
stos
xchg
inc
movl
jnp
mov
insl
and
leave
repz
cmpsb
mov
iret
mov
jno
sbb
das
pop
inc
sub
lahf
loop
mov
gs
mov
out
js
mov
pop
add
enter
popa
sub
mov
cmp
outsb
loopne
arpl
rdmsr
and
pop
clc
imul
push
je
cmpsb
pop
xchg
xchg
repnz
daa
push
arpl
sbb
cmpsb
bound
xchg
pushf
or
add
xchg
shlb
shlb
outsl
push
test
test
or
and
sub
mov
adc
stos
cli
and
stos
sbb
dec
in
sarb
sahf
add
and
daa
mov
cmp
cltd
test
jl
test
sub
movsl
aam
imul
jae
dec
inc
xchg
dec
mov
inc
or
and
insb
cmp
jge
sti
ficompl
daa
pop
xchg
imul
sub
jmp
add
fidivl
jp
in
std
xor
pop
mov
pop
icebp
int
fwait
ljmp
inc
stc
in
mov
call
adc
test
or
mov
and
rcl
mov
push
or
adc
out
or
cmp
dec
call
rcr
cld
dec
mov
cmp
cmpsl
addb
pop
sahf
in
mov
cmp
sbb
jns
jnp
aad
push
sub
pop
mov
jne
repz
mov
mov
pushf
out
push
adc
stos
sbb
mov
cmpsb
xchg
sbb
jl
das
push
bound
loop
out
ss
pushf
sbb
test
scas
stos
popa
xchg
cmc
aas
sbb
inc
cmpl
xchg
adc
push
notl
mov
push
je
inc
int3
iret
inc
rcll
jbe
insb
mov
mov
jp
es
fcmovb
in
subb
pop
mov
and
jb
and
jge
les
jmp
out
cs
bound
xchg
inc
adc
int
mov
inc
pop
rorb
xor
nop
daa
xchg
add
xchg
std
cmpsb
stos
lcall
stos
xor
insb
cmp
test
pop
jns
stos
jmp
xchg
jecxz
xor
movsl
movsl
xchg
arpl
inc
das
pop
sbb
jne
and
jmp
mov
jbe
jae
push
sti
and
imul
xor
sbbl
out
and
fmull
fnstenv
lahf
sub
sbbl
mov
jmp
xchg
jo
and
call
fisubrl
jae
adc
pusha
jmp
cmp
ds
jle
sbb
or
lcall
or
andb
arpl
mov
sub
sbb
push
mov
in
jle
out
icebp
in
or
inc
test
sub
lods
pop
cmc
insb
arpl
jns
out
xor
popf
sahf
mov
mov
mov
xchg
andl
jmp
int
and
hlt
xlat
and
mov
lret
xchg
stos
imul
xor
insb
push
pop
or
enter
sti
dec
dec
xor
idivb
pop
scas
push
addr16
push
mov
or
lahf
sub
sbb
lds
les
or
cmp
dec
inc
daa
mov
leave
subb
sahf
jecxz
mov
lcall
pusha
or
cs
mov
cli
repnz
push
or
adc
loop
cmp
sub
mov
push
lods
aad
and
es
xchg
jmp
stos
cmp
roll
stos
and
daa
mov
leave
rcrb
fsubrs
pop
pop
leave
les
rcll
insl
sub
scas
int
popa
mov
fcom
inc
es
dec
cmpsb
or
shrb
mov
shll
in
scas
fwait
stos
or
xlat
sbbb
mov
das
aam
push
lea
cld
mov
sbb
imul
add
cmc
mov
inc
test
mov
fidivrs
jb
lea
xorb
sub
outsl
insb
jg
test
xchg
or
std
xor
cld
sbb
cli
std
push
or
and
fnstcw
lret
sti
fisubl
outsl
scas
xchg
lahf
aam
hlt
repnz
rcll
jae
das
xchg
dec
movsl
or
lods
or
test
push
gs
lock
jno
lahf
insl
loop
inc
mov
pop
lret
lods
mov
cmc
cmc
cltd
push
add
xchg
pop
mov
pop
cmpsl
mov
divb
hlt
add
push
pop
cltd
lds
pop
mov
cmpsl
mov
cvtpd2ps
pop
cmc
xor
mov
mov
lret
pushl
xor
cmp
fldl
in
or
test
inc
add
stc
mov
mov
dec
push
xchg
jmp
push
mov
push
pushf
out
call
push
ja
imul
mov
hlt
mov
das
nop
aad
aas
push
jle
xchg
sub
cmp
mov
std
icebp
xor
xchg
push
mov
xchg
add
daa
ret
in
jmp
pop
mov
pusha
inc
dec
sub
fistps
xor
adc
scas
movsb
adc
hlt
mov
stos
test
ficoml
scas
mov
ljmp
scas
and
gs
popf
jmp
int
test
icebp
add
in
cmp
sub
mov
pop
das
stc
repnz
iret
xorb
into
stc
idivb
cld
adc
int
test
sarl
add
jno
pop
bound
lret
mov
movsl
daa
testb
jl
add
add
or
pop
cmc
loopne
xchg
push
mov
push
and
xchg
jl
rorl
sbb
and
test
push
push
mov
or
daa
lcall
pushf
std
sub
inc
mov
and
int3
clc
sub
xchg
push
icebp
clc
jle
dec
test
repz
jo
lcall
push
jne
add
or
mov
sub
dec
loopne
pushf
and
test
push
dec
push
mov
outsb
mov
lahf
sbb
xor
fsubl
orl
loope
arpl
cmpsl
das
rcrl
xor
add
push
inc
jbe
push
in
int
test
jecxz
pop
xor
jo
jnp
loope
push
push
test
sub
sbb
test
xorl
out
sbb
and
fcoml
mov
nop
add
es
mov
add
test
ds
out
xchg
addl
push
inc
inc
jae
arpl
push
add
xor
and
rcl
ret
repz
out
xchg
addl
push
inc
inc
jae
arpl
push
add
xor
and
rcl
ret
repz
out
xchg
addl
push
inc
inc
jae
arpl
push
add
xor
and
rcl
ret
ret
jecxz
xchg
xchg
addl
push
inc
in
fnstenv
adc
jns
dec
fcompl
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
