ror
shl
add
and
mov
test
jmp
lea
jmp
lcall
or
add
adc
into
add
add
xor
cld
jmp
jne
jmp
nop
nop
push
mov
sub
and
or
rol
mov
and
push
pop
sub
xchg
mov
mov
andl
mov
push
push
pop
nop
nop
nop
nop
nop
xor
xchg
and
addr16
mov
push
pop
lea
jmp
stc
inc
xchg
push
mov
mov
mov
jmp
pushl
xchg
xor
or
inc
pop
cmpb
mov
jmp
push
xchg
lea
jmp
mov
ljmp
addr16
pushl
nop
pushl
nop
call
leave
jmp
push
or
ret
jmp
xor
nop
nop
nop
nop
nop
push
mov
jmp
jne
or
sub
or
sub
mov
movzbl
jmp
int3
adcl
xchg
mov
addr16
call
xchg
lea
jmp
hlt
jne
mov
incl
add
test
jmp
mov
add
inc
and
pop
ret
jmp
nop
nop
nop
nop
nop
je
xor
mov
jmp
and
or
mov
xor
xchg
rorl
jmp
mov
rolb
jmp
sub
jne
add
pop
ret
jmp
addr16
nop
nop
nop
nop
call
xchg
popa
jmp
pop
add
add
nop
jmp
nop
nop
subb
cld
pushl
push
pop
sub
pop
cmpb
cld
je
xor
mov
jmp
nop
nop
nop
nop
nop
subb
xchg
jmp
push
xchg
xor
xchg
jmp
push
mov
jmp
dec
mov
jmp
nop
nop
nop
nop
nop
push
xchg
xor
inc
mov
jmp
dec
xchg
jmp
nop
nop
nop
nop
nop
add
mov
and
add
push
nop
push
inc
or
push
mov
mov
shl
add
inc
mov
and
mov
mov
add
dec
test
jne
pop
pop
mov
call
push
xchg
mov
xor
xor
mov
ror
pop
shr
xor
ror
xor
sub
mov
shr
rol
mov
add
pop
jmp
inc
mov
mov
xchg
mov
xchg
jmp
ret
jmp
sahf
in
outsb
shll
mov
push
pop
cmp
mov
jmp
add
mov
add
nop
add
mov
jmp
nop
nop
nop
nop
nop
nop
push
xchg
or
mov
mov
push
nop
jmp
mov
xchg
lea
jmp
call
mov
test
jmp
sub
test
or
add
int3
cld
decl
pop
out
mov
out
sbb
add
sbb
add
inc
nop
ret
jmp
adc
shr
or
shl
xor
mov
xor
and
add
push
mov
sub
and
pop
add
jmp
jbe
add
xchg
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
and
mov
sub
mov
push
xchg
ror
dec
inc
mov
push
mov
jmp
ret
jmp
mov
mov
push
pop
cmp
push
pop
jne
add
push
pop
jmp
addb
push
pop
xor
cld
jmp
push
mov
push
mov
push
mov
push
mov
test
jmp
inc
xor
xchg
jmp
push
push
pop
pushl
xchg
push
mov
pushl
inc
or
push
add
rol
and
add
ror
mov
sub
and
dec
test
jne
pop
pop
call
mov
jmp
call
xchg
test
jmp
cmp
je
push
addr16
xor
xchg
mov
and
pop
lea
jmp
iret
cmp
ret
call
nop
dec
addr16
jmp
mov
pop
shl
shr
mov
pop
shl
and
sub
mov
shr
pop
and
sub
or
ror
shr
pop
cmpb
cld
je
push
shr
sub
and
sub
and
pop
call
xchg
jmp
and
or
or
dec
mov
push
mov
push
mov
push
addr16
mov
xchg
call
push
pop
pushl
inc
sub
pop
push
addr16
jmp
movl
mov
shl
mov
xor
and
mov
shr
jmp
xor
push
inc
add
mov
and
nop
mov
push
pop
ret
jmp
sbb
nop
nop
nop
nop
nop
lea
jmp
test
incl
loope
out
jge
inc
and
jmp
int
gs
rol
mov
jmp
jne
add
mov
jmp
addb
mov
xor
xchg
inc
mov
ret
jmp
push
sbb
or
cmpb
xchg
je
cmpb
xchg
jmp
rep
jmp
mov
lret
dec
pushl
rol
mov
add
and
pop
pushl
rol
dec
or
pop
sub
ror
add
mov
sub
nop
add
mov
cmpl
mov
je
push
xchg
jmp
sub
xchg
mov
cld
mov
addr16
jmp
movb
cld
incl
mov
jmp
jmp
nop
nop
nop
nop
nop
nop
push
mov
cmpl
cld
jne
push
cld
lea
jmp
add
push
mov
push
xchg
push
push
pop
jmp
push
cld
push
cld
push
xchg
jmp
nop
add
add
add
add
test
add
add
fmuls
rorb
add
add
rorb
xor
and
add
pusha
jmp
dec
dec
jmp
and
dec
and
shl
sub
mov
push
nop
call
xchg
jmp
dec
sub
and
mov
sub
nop
shr
jmp
xor
mov
sti
sbb
js
jmp
inc
or
movsb
outsb
xor
add
mov
mov
movzwl
jmp
push
xchg
pop
pop
sub
cwtl
add
add
xchg
push
cld
push
xchg
call
mov
push
nop
push
mov
mov
cld
pushl
add
push
add
xor
or
ror
ror
shl
sub
and
add
xor
add
mov
xor
mov
dec
test
jne
pop
pop
call
jmp
scas
rolb
add
xchg
push
popl
movb
xchg
movl
xchg
call
xchg
or
jmp
je
jmp
sub
rol
xor
mov
and
mov
cmp
mov
jne
and
nop
jmp
cmp
xchg
je
mov
xchg
pushl
shl
mov
xor
pop
sub
add
and
mov
add
mov
add
xchg
cmpw
xchg
movzwl
jmp
out
jl
jmp
sub
xor
sub
mov
movzbl
jmp
loopne
push
incl
xchg
xor
xchg
inc
xchg
and
and
and
shr
mov
and
cld
inc
xchg
inc
addr16
nop
nop
nop
nop
nop
shr
jmp
mov
test
add
test
jmp
fmull
mov
test
add
add
shll
loop
jb
ret
sub
mov
inc
ror
mov
and
add
mov
sub
push
pop
mov
push
pop
incl
nop
jmp
mov
jmp
inc
fmull
jmp
mov
mov
jge
jmp
sti
sbb
movl
jmp
add
jmp
test
jmp
cld
imul
ret
je
jmp
xchg
pusha
jmp
jl
dec
jg
mov
add
shl
dec
shl
and
pop
inc
xchg
inc
mov
decl
jmp
nop
in
test
std
incl
inc
add
leave
cmpl
mov
jne
jmp
xchg
aad
push
jmp
enter
fimull
jmp
inc
cld
call
addr16
dec
mov
call
mov
inc
push
pop
call
xchg
jmp
daa
loope
sub
or
sub
ror
add
pop
mov
mov
mov
mov
add
xchg
xor
ror
and
shl
and
pop
push
popl
and
pop
leave
jmp
lods
push
sub
jmp
pop
push
sbb
nop
nop
nop
nop
nop
jmp
or
rol
or
mov
jmp
jl
loop
pop
add
add
xchg
jmp
mov
in
mov
nop
jmp
sbb
sbb
out
fs
mov
mov
nop
ror
mov
add
xchg
mov
mov
and
mov
add
mov
mov
inc
mov
rep
jmp
xor
jmp
imul
mov
xchg
jmp
call
addr16
test
jmp
leave
movsb
jne
cmp
xchg
jmp
inc
cld
call
cld
dec
mov
call
mov
call
nop
popa
jmp
roll
and
xchg
jmp
ret
jmp
xchg
mov
and
nop
nop
ror
dec
mov
add
cld
movzwl
jmp
lods
lock
cmpsb
incl
addr16
add
xchg
cmp
xchg
jl
nop
nop
nop
nop
nop
shr
rol
mov
inc
or
mov
sub
add
mov
pushl
and
or
ror
pop
pushl
add
pop
andl
cld
mov
cld
jmp
clc
add
jne
lea
jmp
fldt
call
addr16
nop
nop
nop
nop
nop
test
jmp
or
dec
decb
test
add
dec
and
jmp
mov
push
xor
xor
dec
sub
mov
add
cld
mov
xchg
or
mov
add
addr16
cltd
jmp
dec
sbb
and
mov
add
xchg
nop
nop
nop
nop
nop
sar
jmp
shr
jmp
test
jmp
and
sub
es
sbb
dec
and
xchg
inc
mov
mov
xchg
incl
nop
jmp
mov
jmp
sbb
mov
add
mov
nop
nop
nop
nop
nop
nop
or
ror
mov
xor
mov
jmp
hlt
sbb
add
xor
jmp
jmp
mov
imul
inc
test
jmp
dec
push
pop
dec
xchg
xor
or
mov
sub
mov
movzbl
jmp
out
popa
sbb
jo
shl
jmp
arpl
cmp
nop
jmp
lret
jle
sub
mov
mov
xchg
sub
push
pop
sub
xchg
jmp
lods
scas
and
inc
and
addr16
lea
jmp
lds
shl
dec
rol
or
sub
mov
call
addr16
jmp
and
and
dec
in
jmp
inc
mov
jmp
jo
cmp
xchg
jb
inc
push
pop
cmp
xchg
jb
inc
xchg
cmp
addr16
jae
inc
xchg
jmp
ret
jne
mov
xchg
ror
ror
ror
mov
jmp
testb
jmp
je
ror
add
add
mov
jmp
imul
nop
decl
jmp
mov
push
jo
jne
test
jmp
mov
jae
jmp
mov
jmp
jle
jmp
jo
and
and
sub
xchg
mov
mov
jmp
sbb
call
mov
mov
mov
add
mov
jmp
ss
incl
cld
dec
push
pop
mov
jmp
jne
mov
addr16
xor
mov
jmp
loop
rolb
decl
jmp
mov
test
shr
push
sbb
dec
fmuls
cs
mov
add
rorl
jmp
dec
and
sbb
jmp
stos
jmp
jmp
mov
or
mov
rol
mov
add
add
xor
mov
jmp
lret
ret
in
ret
mov
mov
xor
xchg
add
nop
jmp
xchg
mov
mov
xchg
jmp
push
leave
pushf
dec
jmp
pushf
scas
mov
jne
push
cld
push
nop
pushl
xchg
jmp
outsl
mov
mov
incl
mov
mov
mov
jmp
and
call
xchg
push
mov
inc
ror
mov
push
xchg
mov
nop
call
jmp
xchg
xchg
xor
xchg
cmpl
addr16
je
xor
or
ror
add
and
mov
add
mov
add
pop
sub
push
pop
jmp
push
pop
adc
test
inc
cld
xchg
sub
rol
sub
shl
mov
call
mov
pushl
and
inc
dec
pop
push
addr16
push
xchg
mov
mov
jmp
dec
xorl
nop
or
int3
push
pop
pushf
imul
and
add
sub
sub
dec
pop
ret
jmp
jp
jns
and
nop
nop
nop
nop
nop
call
xchg
test
jmp
pop
inc
iret
popa
sub
test
add
add
mov
cld
or
inc
mov
add
rol
and
mov
nop
nop
nop
nop
nop
or
and
and
add
rep
jmp
mov
shrl
add
add
add
nop
nop
nop
nop
nop
shr
mov
push
mov
nop
nop
nop
nop
nop
push
nop
pushl
xchg
call
mov
push
xchg
push
xchg
pushl
mov
call
mov
ror
mov
shr
and
shr
mov
nop
nop
nop
nop
nop
mov
xor
mov
test
jmp
adc
test
add
add
iret
mov
add
cld
nop
nop
nop
nop
nop
sub
xchg
jmp
xor
xor
mov
mov
sub
xchg
shr
jmp
fmul
mov
add
jle
nop
nop
nop
nop
nop
mov
xchg
movzwl
jmp
add
add
mov
xor
mov
and
push
pop
cmp
mov
nop
nop
nop
nop
nop
jne
pushl
xor
shr
xor
pop
and
cld
add
addr16
add
mov
add
mov
inc
xchg
inc
nop
decl
jmp
nop
nop
nop
nop
nop
jne
add
push
pop
push
push
pop
push
xchg
nop
nop
nop
nop
nop
call
xchg
cmpl
nop
jne
or
xor
xor
and
xor
mov
mov
and
mov
test
jmp
jmp
repnz
fdivr
je
pushl
and
pop
add
mov
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
push
mov
push
xchg
call
xchg
shl
add
sub
mov
add
xchg
push
nop
push
inc
xor
or
push
dec
shl
add
add
sub
sub
inc
add
and
add
add
and
dec
test
jne
pop
pop
mov
call
cmp
nop
mov
jmp
fidivrs
nop
nop
nop
nop
nop
je
add
add
rol
mov
mov
test
jmp
inc
test
test
add
add
inc
or
mov
mov
and
shl
mov
mov
xchg
add
addr16
add
addr16
nop
nop
nop
nop
nop
inc
mov
test
jmp
es
test
add
nop
nop
nop
nop
nop
push
mov
push
xchg
jns
call
nop
movzwl
jmp
mull
inc
sbb
nop
nop
nop
nop
jmp
call
push
pop
nop
nop
nop
nop
nop
shr
sub
add
and
inc
mov
add
xchg
add
xchg
push
xchg
pushl
xchg
call
xchg
mov
mov
nop
nop
nop
nop
nop
add
mov
add
xchg
nop
nop
nop
nop
nop
jmp
shl
mov
add
xchg
cmpl
mov
mov
jmp
cli
pop
in
lods
jne
mov
jmp
in
mov
xchg
or
add
mov
nop
nop
nop
nop
nop
mov
xchg
sub
mov
sub
mov
pushl
inc
sub
pop
xor
shr
pop
shr
add
and
pop
nop
nop
nop
nop
nop
xor
ror
pop
mov
mov
cmp
addr16
jne
xor
xor
mov
add
addr16
mov
mov
pushl
or
rol
xor
xor
or
pop
add
xchg
nop
nop
nop
nop
nop
leave
jmp
dec
mov
push
sbb
nop
nop
nop
nop
and
xor
pop
jno
jecxz
pop
inc
pop
sahf
jle
cmp
jmp
or
cmp
mov
jnp
and
pop
insl
adc
mov
lahf
sbb
xor
repz
jge
rcll
test
call
mov
stos
cmp
adc
outsl
xlat
xchg
sbb
sti
pop
leave
lret
ljmp
dec
sub
lahf
mov
sahf
pmulhw
roll
fistps
jne
inc
push
addb
lahf
mov
stc
ljmp
add
pop
inc
jmp
outsb
ffree
pusha
push
mov
loop
scas
ljmp
bound
xor
dec
jmp
push
inc
push
jl
scas
lea
sbb
push
aaa
jns
dec
or
leave
dec
test
xchg
or
imul
stc
icebp
mov
jecxz
sub
push
jp
push
xor
sbb
lret
mov
bound
jae
pop
fs
push
das
jns
xchg
push
mov
or
push
or
sbb
adc
dec
jae
dec
js
fadd
inc
mov
hlt
ret
push
xchg
sub
mov
xlat
sbb
pop
aad
or
and
inc
addl
mov
arpl
adc
jp
mov
ss
add
sbbb
int3
xlat
je
xchg
cmc
lds
sbb
dec
lea
xor
out
bnd
sub
std
clc
adc
loope
or
pop
decl
dec
fsubs
daa
out
and
lods
lods
cmpsb
es
fisubl
jmp
pop
icebp
and
inc
cmp
shlb
push
aad
mov
call
sub
shlb
jnp
push
ja
mov
and
sub
cmp
sahf
xor
xchg
cmp
in
jne
mov
aas
cmp
inc
clc
sub
inc
push
gs
vpor
fs
cwtl
jp
xor
cld
dec
mov
lods
loopne
sub
fmuls
cmp
dec
shll
mov
pop
lahf
xchg
xchg
mov
xor
mov
call
mov
xchg
jae
aad
ret
lcall
cltd
negb
test
rorb
loope
pop
inc
jmp
push
in
out
js
inc
mov
rcrl
sti
repnz
or
lods
inc
lcall
pop
dec
popa
sbb
ljmp
sbb
and
jne
insb
rcrl
aaa
hlt
and
insl
xchg
jnp
dec
inc
mov
push
sub
lcall
testl
xchg
push
lahf
mov
fsubs
dec
push
mov
cmp
jecxz
xchg
lahf
pop
std
test
stc
pop
inc
push
loope
cmp
les
leave
ljmp
insb
enter
add
mov
fstpt
leave
daa
insl
sbb
jb
mov
push
mov
cltd
sbb
pop
sub
or
inc
out
adc
fsubrl
pop
in
aad
add
lods
aaa
or
adc
xchg
cmp
sub
mov
pop
pop
scas
mov
add
cmpsb
enter
mov
cltd
adc
add
xchg
adc
xchg
leave
adc
adc
and
hlt
inc
sub
fwait
push
jne
lea
xorl
lea
adc
mov
adc
jmp
aaa
scas
bound
fcmovne
int3
pop
inc
loopne
adcl
jno
mov
sbb
mov
fidivrl
xchg
adc
mov
xor
pop
sbb
fildl
push
lahf
jo
outsb
jne
inc
mov
insw
leave
xlat
add
loopne
push
iret
push
out
xlat
add
out
mov
ljmp
les
jae
sub
dec
xor
sbb
push
cs
push
daa
int3
imul
pop
jmp
lods
dec
ret
xor
sbb
cmpl
inc
push
add
cmp
adc
scas
mov
sub
adc
int3
cmpsl
xchg
aad
adc
sbb
mov
fdivs
scas
dec
stos
mov
xor
push
dec
sbb
mov
add
ss
push
sbb
out
xor
adc
stos
pop
jge
pop
lock
aam
push
mov
or
dec
pop
inc
xchg
xor
cmc
sbb
icebp
mov
bound
jge
push
xor
mov
mov
fld
push
scas
pop
ss
rol
inc
out
rol
push
xchg
mov
enter
inc
ds
pushf
rolb
push
push
sbb
pusha
rclb
add
lds
test
movsb
cmp
insl
mov
adc
test
mov
stos
adc
ds
movsl
sarb
addr16
popa
sbbl
fmull
jmp
in
dec
push
and
jae
js
xchg
fimuls
push
lock
mov
popf
mov
or
inc
dec
mov
xor
repnz
pop
and
fwait
push
scas
and
xchg
testl
repnz
out
push
js
popa
std
adc
mov
or
pop
aaa
push
adc
or
cmpsl
sub
aaa
add
sub
cli
sahf
adc
and
cmpsb
add
insb
lds
push
jmp
popf
or
xchg
sbb
clc
ret
mov
fwait
cwtl
push
ret
in
jle
mov
ja
sbb
mov
pop
lret
arpl
mov
mov
or
nop
shlb
in
test
jle
cmp
adc
push
fidivs
push
out
repnz
mov
andb
fwait
mov
test
loop
fldenv
rcrl
je
jne
fisttpll
inc
mov
test
popa
add
xor
fistpl
mov
inc
sub
fildl
inc
xor
stos
xchg
sbb
clc
and
jo
dec
jg
mov
ret
sbb
iret
out
loope
mov
or
sub
adc
or
sbb
addr16
sub
repnz
mov
jns
cs
xchg
mov
cmpw
aad
insl
or
add
push
repnz
push
push
adc
cmc
enter
adc
cmp
movsb
inc
sti
push
xorb
jp
add
hlt
jecxz
mov
cmp
jecxz
mov
ret
dec
mov
adc
push
xchg
pop
cltd
fadds
leave
pop
xchg
ds
adc
fisttps
adc
jnp
jb
iret
mov
arpl
fimuls
push
inc
mov
pop
dec
gs
sub
int
subl
insl
inc
mov
loope
xor
sub
push
bound
imul
cltd
je
cmc
es
cld
dec
mov
mov
gs
add
insl
testb
fisubrs
scas
inc
or
hlt
mov
fnsave
out
jle
sub
sbb
mov
pushf
sub
inc
mov
inc
ljmp
lea
adcb
rorb
jb
lock
pop
push
push
aam
push
jnp
push
out
nop
pop
loopne
sub
rcrl
aam
sahf
sti
out
xchg
jb
or
dec
jo
mov
mov
and
inc
out
test
testb
sub
int
pop
add
xchg
xchg
mov
or
movsl
into
jns
cmp
mov
push
mov
dec
fsub
fisubl
xor
push
sbb
dec
and
shrb
sub
mov
rcll
or
mov
pop
ss
sti
mov
inc
mov
int
ret
mov
cmpsb
lods
out
jg
inc
dec
cmp
cmp
rclb
inc
lds
fnstcw
mov
inc
jge
gs
jle
sub
stc
xor
aaa
incl
enter
arpl
adc
rcrl
enter
sbb
data16
push
fisubrl
mov
adc
push
pop
pop
or
fcomps
inc
nop
jp
or
xchg
fsubp
loope
jge
pop
popa
and
lds
cltd
xchg
and
sahf
pushf
jl
mov
clc
mov
pusha
cmp
push
rcll
sbb
adc
inc
popa
jns
repnz
movsb
jae
test
jo
movsb
ficomps
lret
sti
cli
dec
mov
ss
daa
push
scas
pop
cli
cmp
jae
arpl
ja
add
xchg
or
mov
enter
adc
sub
push
pop
cld
add
add
mov
or
jnp
jge
inc
popa
sub
jae
xor
xchg
ret
mov
iret
inc
add
out
inc
fmuls
mov
pop
pop
rcrl
xor
les
pop
add
xchg
out
jmp
pop
mov
clc
stc
dec
xor
mov
inc
nop
add
add
mov
sub
divb
pop
dec
xor
jecxz
add
lahf
cmc
xchg
adc
in
jo
adc
out
push
push
pop
popf
js
sti
mov
push
orb
push
inc
mov
inc
int
test
mov
popa
jns
mov
les
jg
nop
stc
iret
mov
es
xchg
fsubs
jne
xchg
ja
sub
lcall
lods
mov
hlt
mov
cmp
lahf
push
xor
cwtl
cmp
es
cmp
and
mov
adc
call
inc
and
add
push
adc
mov
daa
mov
and
pop
adc
sarb
push
pop
pop
jp
jl
outsb
mov
cmp
cmp
js
dec
push
imul
jno
shll
mov
mov
out
je
aas
sub
push
pop
inc
push
inc
aad
dec
fimull
jecxz
movsb
neg
cmp
jo
dec
jae
test
xor
inc
jns
add
daa
mov
add
out
xlat
xlat
add
sub
cmp
adc
xchg
jbe
shll
cmp
lcall
inc
test
imul
xchg
sbb
sub
pop
stos
xor
dec
mov
and
popf
and
mov
jge
cmp
in
lock
popf
and
push
inc
test
inc
add
add
test
adc
jae
popf
mov
add
pop
scas
xor
xor
jg
lods
insl
idiv
lret
adc
or
sbb
scas
cli
adc
push
lret
push
sbb
xchg
scas
or
push
hlt
out
jg
scas
lock
cmc
sti
inc
ja
rcrl
sbb
mov
scas
insb
push
std
stc
cmp
pop
mov
xlat
mov
inc
arpl
mov
dec
dec
and
jbe
xor
not
out
or
fstl
cmp
sub
leave
adc
aas
mov
sbb
divb
mov
add
outsl
pop
mov
adc
jle
ds
leave
je
cmp
rorb
xor
out
dec
inc
test
in
mov
jmp
pop
lcall
es
push
lret
or
xor
and
ja
sahf
mov
mov
push
mov
lods
loopne
mov
pusha
jmp
shll
xchg
shrl
sar
rcll
pop
sub
ret
pop
mov
jne
mov
mov
pop
aam
cmpsb
push
das
dec
jne
jo
mov
and
in
adc
and
sub
sub
mov
add
sti
inc
and
test
fwait
into
sub
repnz
and
call
outsl
xchg
fstpl
out
dec
aaa
sar
dec
xor
push
adc
shrb
cmp
cltd
fsubrl
movsb
mov
push
mov
bound
pop
jl
inc
push
sub
dec
idivb
mov
test
sbb
clc
push
sti
imul
divl
add
call
cwtl
pop
fsubrp
sahf
outsb
push
pop
aas
sbb
movsl
hlt
pop
mov
xor
xor
in
rcrb
popa
pusha
ret
and
imul
or
inc
sub
inc
icebp
in
add
push
outsl
mov
cmp
jge
lahf
out
sbb
pop
fwait
xchg
or
pop
pop
mov
and
mov
incl
pushf
pop
pop
addb
sbb
arpl
mov
js
adc
pop
fdivs
fidivrs
lret
pushl
dec
dec
and
int3
stos
adcb
test
mov
mov
inc
push
cmc
and
jmp
pushf
cld
inc
test
sbb
std
pop
call
push
das
sbbb
scas
testl
nop
movsl
movsl
or
test
jmp
repnz
cmp
data16
mov
lea
fisttps
push
adc
pop
lock
movsb
xchg
or
pop
or
mov
push
stc
cmp
and
cmp
xchg
faddp
mov
hlt
and
scas
repnz
pop
push
insb
mov
push
lcall
add
mov
icebp
mov
dec
xor
add
and
add
or
pushl
cltd
scas
es
popa
sub
fistl
ret
or
cmp
xchg
lods
jle,pn
or
pop
or
xchg
std
mov
clc
call
push
adc
and
dec
push
movsb
sti
scas
or
push
test
sub
orb
enter
rclb
fnstenv
rclb
sub
push
push
lret
scas
aaa
jns
xchg
sub
dec
sbb
xor
sbbb
and
add
rclb
sub
jae
pop
push
imul
lahf
scas
lods
sti
mov
or
lds
sub
sbb
mov
add
and
push
in
popf
xor
xor
inc
mov
cmpl
mov
cltd
mov
inc
call
bound
movsl
xchg
imul
test
test
test
aas
push
nop
or
pop
pop
ljmp
xchg
sub
jns
cmp
lret
aad
adc
bound
arpl
mov
mov
inc
insb
cltd
ja
or
xor
andb
ror
into
push
pop
add
arpl
jbe
fmuls
xor
jg
cld
in
add
cmc
cmp
mov
sbb
dec
pop
mov
scas
loop
loop
xor
insl
jae
add
outsl
iret
push
je
xor
pop
aad
or
pop
pop
jg
daa
movsb
nop
push
and
and
outsl
stc
adc
xor
lods
aad
movsb
jae
push
les
inc
into
ret
imul
test
jne
jle
xlat
imul
or
push
xor
sti
lret
popf
addl
mov
lahf
and
adc
mov
and
jo
insl
scas
outsb
scas
stc
cmpsl
add
out
hlt
stos
mov
rcrl
arpl
shrl
inc
ficomps
sbb
pop
jns
popf
fptan
out
push
mov
adcl
popa
mov
data16
jl
push
cmp
std
sbb
mov
lret
loop
daa
xchg
pop
add
jg
aam
rol
arpl
adc
and
add
pop
mov
pop
add
sub
int3
xchg
in
dec
cmp
scas
sbb
inc
or
outsb
xchg
jae
mov
fimull
lcall
or
sub
sahf
fsub
outsl
add
adc
adc
loope
jecxz
or
jmp
sub
pop
sahf
lret
mov
push
or
ds
jno
xchg
xchg
pop
enter
push
or
das
or
adc
dec
cmp
add
mov
fsub
xor
and
jge
jge
outsl
xor
pusha
xchg
arpl
pop
int3
out
sub
dec
fldcw
push
clc
adc
sbb
mov
adc
fidivs
xor
push
xor
mov
xor
cmp
idiv
and
sahf
adc
negb
sbb
lea
or
pop
ficompl
add
cmp
shll
xchg
mov
pop
fildl
mov
push
inc
sub
xchg
sbb
fwait
cmc
arpl
mov
rorl
mov
push
lcall
repz
dec
dec
jne
xlat
stc
mov
dec
mov
pop
loop
mov
aaa
mov
fcmovnbe
jbe
mov
repz
push
mov
xchg
jb
cwtl
pop
imul
or
ror
loopne
mov
rcrl
testl
add
push
mov
xor
xchg
sar
inc
js
sub
outsl
mov
sbb
clc
push
in
pop
je
adcl
rclb
push
imulb
pop
dec
out
pop
je
cmc
xor
stos
add
lods
adc
pop
add
xchg
mov
aas
mov
mov
cld
add
cmp
lret
jge
sub
shll
shll
loope
js
ljmp
dec
mov
add
cld
xchg
fwait
or
xor
and
mov
sub
cmp
xchg
cwtl
sub
jp
ftst
push
xchg
out
mov
dec
sub
ret
inc
sti
dec
adc
adc
sbb
stc
adcb
loop
mov
dec
loop
lods
add
arpl
shrl
enter
les
test
das
clc
mull
lret
sar
imul
ret
dec
mov
push
out
lret
loop
or
inc
sub
jge
jb
cs
dec
repnz
mov
inc
pop
into
ds
and
and
cmp
and
sub
jl
push
notb
push
and
lock
push
test
icebp
adc
call
subl
push
push
xchg
cld
xchg
jl
cmp
cmp
mov
sbb
imul
je
test
psubsw
mov
xchg
cmpsb
lock
loope
lods
mov
push
mov
pop
jmp
ss
popf
pop
clc
push
loopne
or
push
mov
les
push
dec
aad
jbe
sbbb
data16
arpl
inc
cmp
stos
sbb
lods
lret
xor
loopne
or
mov
dec
fisubs
mov
scas
test
cmc
sarl
rcrl
fisubrl
mov
cmpsl
popa
stos
dec
xchg
movsl
sub
or
inc
push
mov
push
xchg
cwtl
xchg
stc
movsl
movsl
push
aaa
add
aas
fstpl
call
test
mov
mov
scas
jge
push
dec
mov
sub
fcomi
mov
stc
jne
lahf
mov
sub
out
mov
mov
pop
rcrb
mov
ret
hlt
mov
push
cmp
hlt
xor
aaa
frstor
cld
idivb
or
popa
mov
push
xor
ret
mov
mov
sbb
jl
fwait
push
in
div
rcl
mov
es
cwtl
push
xchg
xor
cld
cmc
inc
sbbl
pop
inc
cli
lods
lods
push
mov
clc
mov
lock
movsb
popf
dec
icebp
lret
push
jg
dec
add
rolb
mov
into
add
dec
and
mov
int
fst
lret
add
inc
fisubrl
cli
stos
inc
rorl
jo
cmpb
add
out
addl
pop
addb
fnsave
push
pop
cli
cmp
nop
push
in
jbe
jg
lods
adc
push
lret
inc
nop
or
repnz
inc
dec
jge
inc
xor
or
fcoml
movsb
not
lods
cmp
push
mov
imulb
sbb
push
es
or
jg
in
inc
adc
mov
pusha
pop
inc
clc
out
mov
cmp
push
fsubs
jecxz
pop
xor
add
aaa
cmp
in
jae
into
inc
ret
loope
nop
ds
xor
in
pop
xor
push
sbb
in
fimull
add
xor
pop
and
inc
shlb
jle
sbb
dec
dec
pop
fistps
lods
xor
ret
or
mov
imul
dec
movsl
and
out
pop
jo
test
adc
pushf
xlat
dec
aam
adc
push
adc
xchg
and
mov
mov
fildl
iret
fsubrs
sbb
inc
and
push
jecxz
sbb
imul
push
inc
lret
lods
push
push
lods
mov
lret
std
mov
iret
fldenv
sub
or
inc
es
mov
jb
xchg
test
roll
les
and
iret
fisubs
mov
shlb
push
adc
mov
jae
push
push
dec
jmp
jbe
lret
sahf
push
out
gs
xchg
lods
dec
adc
jo
lahf
aaa
mov
push
pop
cmp
fnsetpm(287
mov
test
push
lds
inc
loop
ss
push
dec
mov
inc
fidivrs
in
shl
pop
sub
aas
dec
cmp
scas
repnz
fcompl
jmp
rolb
push
repnz
cwtl
popa
call
add
mov
jne
mov
jnp
cmpsl
ficomps
mov
pop
out
mov
ja
mov
movsb
daa
jp
and
rcrl
jns
push
sbbl
mov
pop
or
xchg
mov
stc
adc
lahf
cmpb
adc
in
jbe
stos
inc
sub
push
lret
pop
dec
jb
jnp
out
repz
stc
push
shl
push
outsl
xor
hlt
push
mov
or
test
push
sub
cltd
shll
enter
xor
xor
pop
add
mov
dec
rclb
jo
mov
mov
arpl
push
xor
lods
jmp
xchg
ret
scas
jl
insl
pusha
mov
popf
mov
lock
sbb
out
aad
mov
xchg
dec
jl
pop
mov
cmc
loope
pop
xchg
sub
aas
dec
add
repz
push
jae
mov
sbb
or
pop
lods
cmpsl
mov
popf
pop
aam
sub
jl
addb
subl
sub
push
popa
mov
jle
or
sub
pop
pusha
in
inc
xchg
fldl
lret
dec
fwait
das
push
mov
aas
xlat
and
cmpsl
or
cmpsb
mov
xor
dec
je
or
rorb
dec
jne
out
xchg
pop
pop
inc
scas
cli
jno
arpl
aam
std
lds
ds
lea
mul
rcl
aad
mull
add
cmp
mov
ja
bound
stos
lock
loopne
into
dec
pop
lahf
loope
imul
mov
iret
mov
dec
mov
sub
cmp
imul
cwtl
insl
push
int
cmp
ret
aas
shrl
xchg
pop
sahf
int3
fcmovnu
pop
mov
mov
add
adcb
cmp
mov
das
push
push
popf
stos
push
xchg
jae
fcoml
ja
add
in
stos
loop
push
pop
pop
cli
xlat
xor
dec
scas
fldt
andnps
sub
fildl
jle
pushf
adc
adc
push
add
out
dec
pop
mov
jg
mov
push
or
std
icebp
mov
lret
jne
shlb
mov
mov
mov
cs
fstl
xor
mov
mov
add
fcmovne
jecxz
test
mov
movsb
into
mov
and
mov
mov
int3
movsl
sub
jae
push
loop
mov
mov
and
mov
mov
mov
lods
addr16
jmp
inc
jmp
stos
out
sti
dec
cld
pop
addr16
push
inc
inc
sbb
imul
stos
xor
fstl
lret
and
jno
loopne
push
movsl
jno
cmpsb
add
jae
xlat
repz
cmpb
fbld
lods
jae
jno
adc
cli
es
aam
mov
ror
adc
icebp
mov
ficoml
fiadds
lods
xchg
mov
outsb
fucompp
xlat
or
les
push
daa
xor
insb
test
and
cli
data16
xchg
adc
in
cmp
sbbb
dec
pop
insb
mov
pop
add
dec
mov
xchg
ficomps
fnstsw
icebp
sub
bound
lods
test
and
in
and
int
mov
bound
and
daa
imul
lcall
addr16
cmp
sbb
jmp
mov
add
loopne,pt
lea
xor
test
or
test
pop
jnp
loope
cmpsb
lcall
mov
mov
mov
rorb
loopne
mov
ja
enter
inc
ret
in
inc
sub
hlt
cltd
ret
ret
push
cmp
xlat
fsubr
jle
inc
xchg
and
int3
inc
adc
sahf
xchg
xor
inc
mov
lcall
aad
dec
jle
cs
dec
inc
jl
or
pop
das
jp
les
dec
pop
pop
mov
dec
dec
xor
leave
clc
xor
or
pmaxub
fs
xchg
pop
cmp
movsb
mull
repz
xchg
jns
or
adc
lcall
sarb
adc
sahf
push
and
inc
jbe
sub
or
jle
insl
adc
adc
adc
jp
lahf
xchg
jmp
mov
call
fwait
lea
pop
push
xchg
pop
ret
cmpb
pushf
sub
movsl
add
sub
iret
push
cmp
sahf
pop
repz
and
pop
add
dec
mov
mov
mov
dec
out
negl
aam
xor
dec
not
sbb
mov
sbb
bsr
push
cmp
push
cmp
movsl
ret
js
mov
dec
pop
bound
xor
jmp
shlb
or
cld
lds
int3
cld
cmc
fs
pop
jns
cs
jg
cli
aam
incl
and
jae
sbb
insl
roll
cmp
cmp
mov
cs
dec
xchg
jo
jecxz
push
stos
jno
mov
stc
dec
in
test
xchg
and
jecxz
dec
mov
mov
jl
call
sbb
cli
mov
pop
shlb
or
das
mov
sbb
lret
and
leave
xor
nop
fidivs
pop
popf
push
stos
idiv
lcall
mov
sub
push
inc
fs
mov
cmp
shl
dec
inc
xchg
add
jae
data16
sti
or
fwait
push
lods
nop
in
leave
pop
xchg
cmp
insb
jb
out
dec
mov
push
scas
popf
ljmp
insb
and
jnp
cmp
lea
out
mov
sti
sahf
mov
test
mov
adc
dec
pop
sbb
jmp
es
push
pop
mov
xchg
and
icebp
pop
jmp
mov
xchg
sub
sti
pop
imul
xor
movsl
and
adc
mov
mov
fcomps
arpl
test
dec
jle
std
outsl
mov
test
sbbb
mov
mov
cltd
cmp
insb
ljmp
shll
scas
jae
test
jbe
scas
mov
cwtl
mov
cmc
iret
mov
add
jnp
inc
or
shll
mov
out
sub
loop
iret
rcll
xor
lcall
dec
lcall
popa
xchg
push
mov
jp
sbb
rolb
and
jecxz
sbb
push
xchg
fucompp
xchg
xor
sub
hlt
in
or
mov
or
subl
cmovle
mov
loop
sbb
adc
pushf
scas
test
push
pop
adc
xchg
pushf
repnz
xchg
out
es
sub
insl
shll
fdivs
xor
pop
push
sub
jge
call
push
insl
dec
stc
scas
jecxz
and
add
pop
insb
pop
insb
or
pop
push
fidivrs
inc
mov
ret
loope
sbb
and
cmpsl
and
dec
addr16
cmpsl
jp
pop
inc
inc
nop
ss
dec
sub
sbb
sar
and
and
in
imul
call
daa
sbb
loopne
add
sub
ret
lods
insb
das
inc
xor
dec
inc
mov
xchg
push
jmp
out
jns
enter
dec
and
mov
mov
cwtl
movsl
test
xchg
jle
xchg
add
xchg
mov
cmc
mov
jbe
and
pop
lahf
push
cltd
aam
mov
popa
outsb
das
mov
leave
jl
test
mov
rorl
dec
sub
loope
jmp
adc
outsb
push
jns
daa
mov
xchg
sub
imul
fadd
frstor
test
pop
mov
in
push
push
jns
shl
mov
push
xlat
cmpb
adc
fwait
jbe
jg
daa
sub
test
pop
inc
data16
outsb
mov
xlat
mov
and
xchg
push
push
mov
sti
mov
mov
notb
or
sbb
jecxz
leave
lds
mov
test
push
mov
shrl
push
adc
adc
xlat
ss
inc
movsl
insb
pop
adc
jecxz
in
test
or
push
data16
add
xchg
std
and
imul
jp
enter
xchg
sub
std
test
or
in
pop
sub
mov
and
lock
mov
popa
sub
sbb
mov
jmp
pushf
outsl
push
mov
divl
mov
imul
xchg
call
outsl
roll
idivb
shrl
inc
cmc
outsb
gs
shrl
rcrl
in
cmp
mov
mov
lock
in
jns
out
into
shr
cmp
insl
arpl
out
test
ljmp
mov
insb
add
ds
out
fmull
sub
jae
rorb
xor
scas
or
lahf
clc
pop
mov
lods
sub
adc
ret
adc
xchg
dec
jno
lahf
xchg
fwait
les
xor
jmp
cmp
or
pop
jl
lock
inc
pop
mov
dec
push
and
cmp
push
ljmp
and
jmp
mulb
notb
xchg
push
xor
idiv
mov
enter
cmc
mov
aaa
xor
xor
daa
clc
pop
imul
inc
test
mov
es
ja
enter
adc
inc
mov
xor
xchg
mov
inc
cli
and
sbb
jle
adc
xchg
fstps
flds
fidivrs
aaa
mov
pop
cmp
mov
testb
fdivrs
cmc
scas
cmp
inc
clc
fwait
add
adc
scas
in
cmp
roll
rcr
cmp
ret
in
daa
repnz
cmp
subb
aaa
mov
sti
push
pop
into
mov
mov
mov
adc
push
addr16
pop
nop
out
in
sti
mov
xor
mov
push
sbb
clc
xchg
adc
cvtps2pi
jo
mov
and
mov
sub
sbb
add
mov
xlat
inc
call
cmp
xchg
stos
jno
mov
loope
out
mov
or
sub
inc
leave
imul
ret
pop
mov
scas
rcl
aaa
mov
and
lcall
pop
sti
mull
mov
imul
andb
in
fs
into
jmp
es
aam
fiadds
and
pushf
jb
push
das
data16
into
xchg
adc
inc
push
loope
outsl
mov
gs
je
stos
jns
and
xor
jae,pt
jmp
push
out
and
adc
push
fistps
nop
sbb
sub
in
cmpsl
ret
clc
adc
jb
mov
dec
mov
jl
xor
inc
add
bound
cmp
in
sti
pop
out
js
in
dec
adcb
ljmp
pop
add
push
loop
stos
mov
mov
test
aaa
mov
jge
jb
aad
xor
sub
pop
mov
fcmovnbe
cmp
dec
jbe
and
sbb
and
popf
xor
imul
ds
cmp
or
push
mov
aas
shlb
ret
mov
loopne
xlat
call
mov
cmp
enter
call
push
call
and
adcl
push
and
stos
test
push
fwait
or
cmp
push
sub
stc
pop
shrb
and
test
enter
push
in
rcll
int
rcrb
mov
adc
jmp
jge
loope
loope
jg
pop
popa
gs
sub
push
xor
popa
out
xor
inc
leave
out
fiaddl
mov
add
mov
jmp
je
nop
int
mov
add
shll
inc
mov
xor
data16
cmp
fimull
cli
mulb
xor
push
sarb
into
adc
add
jns
add
sbb
and
mov
jo
jo
xchg
mov
cltd
mov
lahf
fmull
in
add
inc
xchg
jnp
test
punpckhdq
shlb
repz
mov
push
inc
rcl
cmpsb
or
push
and
aas
ja
test
in
jb
out
data16
nop
inc
dec
in
jne
pop
jnp
dec
movsb
inc
popa
loope
xchg
jg
and
xchg
and
dec
iret
inc
lods
cmp
mov
jns
adcl
jo
popa
push
xchg
and
stos
pushf
xor
inc
loop
aad
pop
mov
aaa
cli
pmullw
mov
rcll
fucomip
pop
insb
sbb
pop
sbb
shr
pop
popl
mov
inc
mov
out
adc
dec
pusha
and
jle
xchg
out
jno
data16
push
aam
xchg
dec
dec
hlt
dec
aam
adc
lcall
popf
cmp
hlt
lods
fldl
pusha
je
popf
cmp
inc
push
leave
xor
repz
or
ljmp
inc
mov
dec
sbb
or
jmp
repnz
testl
mov
insl
lcall
xchg
aas
lcall
inc
xchg
roll
mov
das
xchg
xchg
push
mov
and
jl
inc
mov
mov
dec
addr16
jp
xchg
rcrl
cmp
rorl
push
cmp
sbb
loop
inc
mov
inc
stos
dec
mov
mov
ja
xchg
js
add
movsb
cmpl
lret
sbb
rorl
xchg
jne
ret
or
jecxz
andl
pop
cmp
mov
ja
lds
inc
sti
push
jp
fidivs
or
into
jns
xchg
mov
dec
scas
dec
push
loope
test
jo
or
pxor
sub
sub
dec
or
add
sub
cwtl
sub
push
shr
fmuls
stc
nop
pushf
in
dec
lods
mov
test
in
arpl
rcrl
sbb
add
sbb
sahf
fsubrl
in
push
pushf
icebp
mov
xchg
mov
push
cmc
scas
sbb
ja
es
mov
sbb
mov
push
push
lods
mov
jl
mov
lret
mov
shlb
fdivrl
stc
clc
popa
dec
aam
daa
and
jne
jne
inc
je
sti
test
icebp
and
shl
xchg
cli
int3
lcall
push
fucomi
mov
and
xchg
std
cmp
and
std
mov
orl
sbb
mov
daa
dec
out
or
sahf
xchg
into
or
loopne
lods
outsb
repnz
lcall
lahf
pop
sbbb
insb
cld
mov
sbb
or
xchg
sub
jne
push
or
daa
xor
ret
adc
movsb
out
push
pop
int
test
divl
push
sub
imul
cmpsl
push
sub
push
mov
hlt
out
aad
shlb
popf
sub
sub
sti
add
xchg
in
or
daa
stos
add
or
popa
divl
xlat
mov
into
inc
mov
mul
jb
outsb
xchg
fimull
mov
test
mov
mov
int3
jg
push
xor
popa
and
je
aam
and
push
lret
and
cld
mov
ret
push
lds
ret
fcmovnu
imul
or
test
adcb
cmp
sbb
fsubrs
icebp
xlat
fcompl
into
mov
jb
lahf
ficomps
lret
iret
xor
movsl
ret
mov
adc
cmp
mov
jg
int3
pop
cli
int3
pop
pop
popf
inc
cmp
push
fmull
and
dec
js
push
std
adc
and
scas
ja
mov
xchg
fsubl
jno
sbb
stos
mov
pop
jno
xchg
push
popa
cmp
mov
aas
or
lods
inc
movsb
fsubl
rcr
sub
outsl
xchg
sahf
push
pop
mov
sub
pop
jl
xlat
and
xchg
adc
loopne
pop
and
adc
and
and
push
xchg
lods
xor
int
loop
rclb
fwait
rol
xchg
adc
outsl
jmp
outsl
pop
jmp
mov
jecxz
out
jmp
jecxz
das
xchg
xlat
js
mov
aad
xor
daa
movsb
popa
sar
mov
repnz
jne
cmp
jns
jno
push
iret
cmp
fmul
into
xchg
and
push
fwait
cwtl
cli
xor
and
lret
outsl
mov
cld
ds
cmpsb
fadds
lods
sarb
out
or
repnz
sub
je
cmp
xor
push
jl
je
fs
mov
pop
enter
dec
jp
std
mov
imul
jmp
fistps
iret
push
cmp
sbb
dec
dec
pop
inc
push
push
outsl
inc
mov
sbb
push
call
lods
pop
sbb
add
lret
scas
jb
xor
inc
push
out
ljmp
outsb
jge
pop
or
movsl
mov
out
subl
add
and
cmp
int
sbb
out
imul
in
jo
in
cmp
lret
or
test
dec
and
inc
sbb
xor
test
jno
imull
push
mov
cmp
ja
sub
mov
dec
lds
fimull
fldt
jnp
push
subb
mov
into
push
adc
je
pop
pop
pop
ljmp
nop
pop
add
pop
out
in
fsubr
movsb
popa
sbb
std
adc
aam
or
aas
cmpsb
pop
adc
repnz
xchg
xor
xchg
cltd
mov
mov
mov
jnp
push
lret
scas
lock
jl
test
sub
adc
in
jae
adc
sub
dec
and
pop
sbb
cmp
gs
jae
mov
int3
in
dec
notl
sbb
filds
push
xchg
cmpsb
and
mov
sub
ret
repz
inc
nop
imull
push
in
js
shlb
es
xor
fdivrl
fistps
lret
aaa
adc
add
loopne
out
pop
and
pop
inc
push
in
insl
mov
inc
aas
push
repz
mov
insb
shrb
adc
rcl
or
push
adc
fwait
sbb
popa
fwait
and
movsb
icebp
lods
xchg
inc
and
rcl
pop
jb
movsl
sub
gs
adc
jecxz
leave
or
fstpl
aas
sbb
jp
ret
jmp
imul
pop
jge
push
loopne
scas
lds
or
in
orl
dec
lock
sub
cmp
fstl
fisubl
sbb
fidivs
rorl
add
or
out
les
add
pushf
jne
mov
pop
test
arpl
fisttps
fcoms
adc
pop
test
stc
xchg
adc
arpl
imul
xchg
pop
andb
push
scas
es
sbb
jge
scas
fistpll
cmp
insl
cmp
cmc
pop
mov
cwtl
mov
aas
jae
add
xchg
es
mov
enter
adcb
pop
and
nop
jge
dec
mov
repz
rcll
pop
jnp
sbb
or
jbe
or
out
in
add
push
mov
jae
out
xlat
negb
mov
mov
adc
jo
sub
and
ja
jnp
xlat
jb
fmuls
lcall
test
mov
ret
out
jnp
dec
and
inc
push
lods
mov
xchg
mov
push
xchg
fstpt
in
loope
sbbl
or
addr16
cmpsb
stos
jg
fcomps
shlb
fnstcw
aam
scas
insl
push
and
pop
jb
lods
popa
pop
loopne
dec
aam
add
push
xlat
push
aaa
and
add
stos
adc
lods
rolb
dec
sub
aam
shr
inc
pop
mov
adc
arpl
cmp
divb
imul
sti
pop
cmp
mov
xchg
jmp
sub
sbb
nop
loopne
mov
inc
pop
pop
ficoms
leave
icebp
cmpl
in
fadds
pop
adc
stos
outsl
imul
in
sub
and
aad
pop
xchg
in
movsl
adc
ljmp
pop
pop
jo
stc
mov
std
jmp
sub
lret
and
popf
fidivrs
test
je
dec
movsl
and
pop
das
lahf
scas
pop
xor
push
shll
movsb
mov
or
clc
repz
dec
pop
rolb
mov
adc
int
mov
add
add
outsl
out
pop
adc
and
shrb
push
lods
jnp
hlt
gs
ljmp
repnz
xchg
sub
inc
shl
je
nop
or
adc
jle
sub
push
jo
lods
cli
jmp
jmp
cmp
stos
loopne
lcall
or
test
cmpsb
mov
jle
lahf
pushf
lahf
in
adc
mov
mov
imull
pushf
out
adc
jne
pop
mov
mov
adc
arpl
add
inc
scas
adc
jecxz
mov
dec
and
bound
lret
dec
xor
cmp
inc
rcll
jae
mov
cmp
inc
mov
pop
xor
dec
jnp
icebp
pushf
cmpsl
mov
lods
insb
jae
test
sub
mov
shll
movsb
imul
lret
mov
and
ds
out
data16
inc
pop
jnp
adc
in
clc
insl
jo
pop
lods
daa
mov
in
nop
clc
cmp
aas
sbb
inc
daa
inc
mov
inc
aad
jl
sub
addr16
imul
out
and
pop
xor
sbbb
jmp
cltd
push
sbb
inc
inc
dec
adc
andl
mov
aas
ficompl
or
call
lock
jo
dec
js
repz
adc
xchg
arpl
xchg
jge
mov
mov
enter
in
xchg
int
lds
les
jo
jmp
dec
pop
sbb
daa
jge
add
mov
stos
std
cmp
dec
jp
lret
outsl
and
pop
popa
hlt
sub
sbb
out
jge
addr16
shlb
iret
pop
orb
mov
imul
test
test
cltd
inc
fmulp
push
mov
dec
xor
fnstsw
mov
jnp
or
cltd
movsl
decl
test
ss
syscall
rol
jbe
ds
pop
xorl
sub
cmp
push
cmp
iret
mov
icebp
sub
adc
js
das
cmpsb
cmpsb
mov
ds
cmc
fstl
imul
or
inc
test
sbb
xor
xor
jmp
popf
add
and
add
adc
sub
imul
xor
jo
or
push
lds
shll
cmp
sbb
add
stos
inc
xchg
icebp
imul
mov
jb
in
ret
or
mov
sbb
outsl
jmp
mov
rolb
push
jp
fs
and
push
mov
mov
pushf
sahf
in
rcrb
sbb
pushf
add
insl
je
mov
cmp
dec
sbb
dec
adcb
pop
cmpsb
jg
mov
aam
xor
sbb
and
lods
xchg
adc
fcomps
sbb
inc
adc
outsb
into
loop
lods
popa
adc
repnz
mov
testb
popl
jno
inc
jns
js
pop
jmp
xor
icebp
push
push
push
sbb
ljmp
outsl
jns
fisttpl
sub
roll
jmp
ds
lcall
xor
stos
js
test
and
ljmp
inc
insb
and
push
cmp
dec
mov
mov
cwtl
inc
popa
mov
icebp
jae
xor
pop
je
jle
out
sahf
xor
fs
out
xor
or
push
inc
test
jnp
xlat
fistpll
and
and
loop
sti
or
pop
imul
stos
lcall
cs
push
imul
int
out
mov
imul
and
push
mov
add
out
and
add
sbb
aas
iret
dec
mov
mov
lcall
popa
lock
push
jge
js
add
mov
mov
fstpt
pop
lods
insb
and
insb
call
xor
mov
add
dec
mov
fs
push
lods
pushw
lods
jg
adc
je
stos
imul
aas
or
fisttpl
out
jmp
mov
shlb
adc
jp
in
inc
xlat
jecxz
jo
xor
popf
xchg
mov
jmp
leave
ja
cmp
ja
dec
cmp
adc
out
add
mov
push
mov
push
icebp
jno
jl
lock
adc
cmp
jb
sub
stc
pop
pop
mov
push
push
out
dec
jg
push
dec
sbb
icebp
mov
adc
scas
mov
adc
repnz
es
adcb
xlat
add
add
imul
mov
cmp
lret
aad
jo
movsl
dec
xor
jle
pusha
sub
xor
jg
dec
push
xchg
js
dec
xchg
and
mov
test
popa
out
imul
mov
aaa
out
repnz
int
sub
je
fwait
ret
je
pop
adc
pushf
cmp
xor
push
jb
cmpl
roll
cld
xor
mov
add
mov
arpl
test
lcall
adc
int3
lret
push
cltd
in
call
movl
jnp
xchg
jns,pt
xchg
fwait
push
add
jne
addr16
pop
pop
adc
push
mov
fucomip
or
out
cmp
fs
das
fcmovbe
pusha
pop
mov
or
jbe
mov
jge
clc
xchg
les
out
lods
mov
push
addr16
stos
shrb
push
testl
xchg
mov
add
rcl
imulb
jmp
decb
rorl
xchg
imull
mov
ss
imul
adc
cmc
scas
ret
pop
loope
test
addr16
adc
adc
push
jle
push
leave
mov
call
xchg
popf
push
cmp
push
jl
sahf
insl
lds
adc
aaa
hlt
xor
popf
cmpsl
xchg
adc
outsl
adc
fwait
ljmp
loop
push
or
insl
popf
dec
sbb
cmp
add
into
push
jb
sub
mov
cld
sbb
mov
daa
xor
ror
sbb
adc
mov
inc
xor
add
or
xor
into
repnz
pushf
pushl
xchg
addb
xchg
xor
push
fidivrl
xlat
ss
cmc
inc
iret
push
es
add
and
xchg
cld
xor
leave
xchg
lret
pop
sub
xor
rorl
dec
mov
stos
add
stos
jnp
adc
jo
test
dec
xchg
cmc
and
jp
sahf
das
inc
jbe
aam
aaa
rcl
sahf
sub
lahf
jl
inc
hlt
outsl
cmp
mov
push
movsl
mov
test
dec
pusha
mov
lret
jb
gs
sbb
or
sbb
movsb
or
push
pusha
or
inc
mov
popa
imul
insb
out
inc
inc
wrmsr
addr16
idivl
dec
sub
mov
clc
sub
lahf
fistpl
aas
dec
mov
or
xchg
out
sub
int
push
adc
mov
pop
int3
cmpsb
xchg
mov
sbb
jl
js
inc
fdivr
jle
and
out
dec
mov
add
faddl
mov
or
test
cli
and
and
and
lods
xor
pop
int3
sahf
inc
enter
test
cs
insl
pop
jecxz
add
jge
in
dec
jl
cmp
inc
xchg
test
lret
inc
mov
fdivr
dec
out
adc
push
leave
push
pop
and
in
xor
ret
sbb
xchg
jle
jnp
js
test
xchg
cmp
or
cltd
jg
xchg
cmp
fldcw
xchg
jae
lret
pop
sbb
iret
in
lcall
fistpll
outsl
add
std
cmpl
mov
imul
ds
lret
orb
mov
add
testb
mov
repnz
jecxz
lret
mov
mov
pusha
cmp
dec
pushf
jns
sahf
in
adc
mov
sbb
push
mov
jns
cmp
push
insb
xchg
dec
xor
popa
pop
call
out
mov
lods
repz
data16
pop
ja
jo
fwait
xor
ljmp
xchg
imul
jg
loopne
push
mov
vpsraw
inc
out
movsb
jbe
jo
shll
out
iret
lret
add
sbb
in
ror
sub
xorl
sti
cmpsb
neg
push
sub
arpl
jae
mov
out
icebp
es
pop
push
cwtl
mov
or
xor
sbb
jl
filds
sbb
push
popw
nop
sbb
icebp
adc
jge
clc
sub
mov
subl
das
or
xchg
sti
das
adc
inc
xlat
push
stos
xchg
mov
mov
lock
sbb
jns
fs
or
push
lods
cmc
ss
inc
jbe,pn
jae
or
mov
data16
aaa
or
hlt
dec
or
pop
rolb
cmpsl
dec
dec
int3
ds
jge
out
pop
loopne
out
cs
out
mov
testl
mov
test
fadd
loop
xlat
shlb
loopne
std
sbb
add
push
xor
orl
out
and
rclb
xor
mov
dec
push
mov
sbb
cmp
cmc
push
xchg
jg
nop
mov
mov
popf
fidivs
shlb
jecxz
inc
mov
movsl
sbbl
ss
inc
push
fsubrl
in
mov
int
cwtl
movsl
mov
add
cmp
xchg
fbstp
lahf
sbb
bswap
pop
or
pushf
jge
fcmove
leave
xor
fbld
popa
jne
xor
push
stc
sahf
sub
cmp
gs
stc
call
pop
jmp
mov
sub
mov
lods
jo
lret
xchg
cmp
sub
jo
and
or
ljmp
adc
int
push
xchg
fwait
push
insb
xor
xchg
into
push
xor
xor
inc
inc
stos
dec
add
push
sub
sub
dec
fwait
call
sub
test
push
sub
sbb
mov
mov
icebp
andb
jle
sbb
lahf
int
inc
or
pop
pop
shl
xor
or
adc
push
jp
and
notb
inc
orl
and
fldt
and
cli
xchg
imul
pop
push
or
shrb
repz
dec
push
inc
and
sahf
aaa
mov
lods
ficoms
inc
fisubs
push
or
lahf
pop
outsl
cwtl
xchg
xor
test
pop
sub
ljmp
cmp
mov
test
and
pusha
mov
stos
push
js
mov
jbe
jns
pop
int
sub
das
xor
enter
pop
cmp
fdivrs
xchg
mov
loop
icebp
adc
sbb
pop
sbb
jmp
mov
inc
mov
incb
jbe
ret
cmpsb
lcall
adc
fnstsw
out
subl
out
xor
or
imulb
out
xor
adc
das
imul
call
mov
pop
mov
mov
mov
push
jp
je
xchg
xor
insl
sahf
imul
aas
jle
test
dec
stos
ret
ljmp
loopne
fs
fildll
mov
or
sarb
push
cmp
mov
into
call
aaa
adc
or
dec
testl
pop
lahf
lret
mov
or
imul
or
xchg
outsl
shrb
lods
or
pop
jnp
icebp
fscale
dec
daa
iret
push
out
adc
push
lret
inc
sti
repz
and
inc
push
pop
cmpsb
pop
daa
cmpsb
pop
pusha
flds
shlb
fst
add
les
jbe
mov
imul
in
cmpsb
fisttpll
repz
or
xor
test
dec
mov
xor
add
out
lock
xchg
pop
sbb
inc
andb
push
repz
add
cmp
and
mov
mov
adc
shl
xchg
repz
test
xor
ss
stos
cmp
cmp
loop
and
lock
cmp
xor
fcoms
icebp
je
lock
imul
fcoms
or
out
lock
aaa
cmpl
loop
arpl
inc
mov
sbb
call
fisttpl
xchg
cmp
mov
and
ljmp
pop
dec
cwtl
sbb
push
dec
jl
les
push
and
xchg
ja
jnp
sub
decb
popf
xchg
cmpl
push
mov
xor
pop
pushf
sub
cld
mov
sbb
jle
inc
mov
xchg
in
cmp
dec
daa
pop
jae
push
lret
xlat
test
lahf
or
cmpsl
inc
fmulp
mov
cmp
adc
pop
adcb
adc
inc
adc
cmp
imul
mov
and
orb
int
cmp
mov
xlat
mov
gs
mov
xchg
jle
mov
movsl
jb
jns
call
gs
fadds
xchg
pop
and
lret
xor
stc
add
ds
test
pmaxub
inc
dec
xor
mov
movsl
push
int3
mov
cmp
js
pop
cmpsb
jnp
mov
shrb
lods
and
movsb
ljmp
pavgw
xrelease
sub
mov
in
notb
shlb
stc
cmp
xchg
inc
xor
bound
cmp
xor
add
xchg
sub
inc
insb
fcomps
stos
push
xchg
loopne
dec
sbb
mov
cmc
push
inc
fcmovnu
pop
and
jne
or
or
lret
dec
xchg
test
stc
pop
jne
fdivs
sahf
jne
or
jge
jecxz
xchg
cld
cmp
add
mov
sub
out
cmp
movsb
push
lods
inc
mov
les
cmp
std
mov
bound
aad
push
push
gs
fs
aas
xchg
loopne
sub
push
lods
mov
cmp
shll
movb
or
aas
hlt
lcall
dec
pop
fmull
inc
push
test
cmp
mov
jb
cmpl
sbbl
dec
repnz
jbe
and
adc
aaa
daa
lock
mov
subl
xor
jbe
sbb
jns
mov
adc
inc
mov
push
inc
mov
scas
daa
imul
lret
lods
and
push
scas
adc
adc
in
in
and
xor
test
cmp
inc
adc
rolb
jns
mov
jbe
movsl
ja
mov
xor
xchg
xchg
movsb
xchg
cmp
adc
or
shlb
ja
jmp
jl
xchg
sub
lret
lea
jae
call
mov
cmp
call
pop
xchg
jg
jne
jge
cmp
lds
ret
xlat
cld
call
xor
xor
and
sbb
adc
loopne
push
inc
adc
jb
out
das
inc
cs
inc
inc
jbe
add
jb
jge
push
mov
and
imul
xor
jo
out
shll
sbb
mov
lret
jle
mull
xchg
sahf
adc
sbb
hlt
les
repnz
fcmovu
adc
leave
loope
xor
push
sub
faddl
cmp
mov
repnz
idivb
in
mov
jb
push
movsb
mov
test
mov
out
arpl
sbb
cmc
imul
lock
add
gs
cmp
and
mov
movaps
push
les
in
dec
pop
push
lahf
popf
movsb
daa
push
add
dec
ret
cwtl
lret
sarl
das
or
loop
out
pop
sub
xchg
sub
xor
in
cmp
inc
insl
dec
fldt
cwtl
dec
xor
pop
dec
sub
lcall
movsb
push
xchg
lods
sbb
outsb
xor
dec
ljmp
out
cld
inc
xchg
push
xor
mov
cmp
dec
pop
jmp
pusha
inc
mov
adc
mov
jno
negb
sub
add
pop
mov
in
jge
out
mov
cmp
inc
push
fbstp
pop
in
xor
pop
cld
daa
iret
sbb
enter
sub
xor
scas
js
icebp
std
ss
dec
dec
shrb
inc
cmp
push
je
adc
outsl
loopne
in
push
dec
add
or
popa
sbb
cmp
push
xor
ljmp
push
into
jns
cmc
xor
das
mov
aad
dec
adc
sub
pop
movsb
jge
clc
mov
enter
in
mov
jae
jecxz
or
sbb
inc
or
gs
cmpsb
sub
aaa
inc
or
xlat
push
pop
ja
rep
sbb
xor
xor
pop
jns
adc
imul
pop
mov
out
mov
mov
hlt
out
xor
ror
fnstcw
cmp
sub
cmp
lds
xlat
mov
aaa
nop
xor
jne
cmp
jno
mov
daa
mov
mov
jge
xchg
sbb
pop
xchg
fidivs
mov
lret
mov
sbb
push
cs
movsl
push
roll
out
call
and
lea
mov
test
mov
bound
out
movsl
lcall
movl
call
push
jmp
cwtl
jns
rorl
mov
xchg
and
imul
mov
test
ljmp
icebp
das
and
xchg
lea
push
in
xor
bound
or
sub
inc
mov
inc
mov
inc
insl
pop
fwait
imul
or
pop
subl
fldcw
sahf
leave
aaa
xchg
ret
xchg
mov
cld
mov
xor
xchg
sbb
ret
adc
push
add
adc
pusha
pop
ret
dec
shrb
push
arpl
dec
ds
addr16
aas
or
ja
push
data16
pusha
sbb
push
pop
pop
sub
jo
js
push
xor
adc
push
jg
mov
out
daa
xor
cmc
xlat
into
sub
or
stos
pop
pop
inc
scas
mov
aad
sahf
out
jae
cmp
fnstsw
paddd
pushf
fmull
pop
and
outsl
nop
sub
inc
pushf
lret
mov
imul
mov
jae
repnz
push
stos
jecxz
xchg
int
xchg
hlt
pop
out
imulb
xchg
ret
cmp
sub
inc
mov
loope
adc
mov
lock
mov
jne
or
push
mov
cwtl
scas
int3
mov
popa
je
lcall
icebp
sbb
shll
mov
movsb
insb
pushw
fucomip
dec
mov
scas
push
or
rcrb
mov
pop
frstor
cmpsb
jae
push
xchg
stos
push
sbb
fbstp
and
fstpt
xchg
dec
pop
jae,pt
dec
mov
adc
test
add
cmp
icebp
sub
inc
push
and
shrl
mov
jns
sbb
dec
and
ljmp
imul
pop
jno
lock
pop
inc
out
ss
ficoms
test
and
xchg
jbe
scas
xlat
test
cld
xor
xor
out
roll
cwtl
adc
push
jae
xchg
or
dec
cmp
sbb
pop
push
inc
je
dec
test
inc
push
inc
addr16
addl
mov
dec
aad
jle
and
dec
mov
jl
pop
outsl
int
xor
fdivl
repz
pop
inc
push
pushf
dec
pop
jecxz
daa
dec
inc
lods
xor
add
push
mov
cmp
pusha
push
test
add
enter
bound
lods
push
ljmp
fcomi
test
adc
fcoml
inc
stos
inc
dec
mov
out
sub
sub
mov
lahf
adc
ds
push
jns
ds
test
push
fs
lahf
jo
mov
adc
adc
int3
mov
mov
test
daa
hlt
push
lods
or
push
js
test
push
ss
subb
lret
iret
sti
sbbl
xchg
mov
dec
stos
cmp
rcl
mov
adc
dec
popa
scas
clc
adc
push
cltd
add
int
jo
cmpsb
in
data16
sub
cwtl
loopne
mov
js
cwtl
inc
push
in
arpl
negb
mov
pusha
pop
xor
xor
ffree
enter
dec
pop
lahf
pop
or
fstl
mov
ret
out
mov
test
popf
mov
into
and
sub
movsl
push
sbb
pop
xchg
jle
cmp
lcall
pop
sar
jp
lcall
fs
xchg
das
loopne
fsubrs
dec
mov
and
dec
negb
xchg
mov
ficompl
pusha
sub
movsb
data16
mov
loop
sbb
cld
mov
bound
pop
jg
dec
pcmpgtd
jmp
add
fdivl
test
push
jne
ret
push
aam
jge
add
outsb
sub
mov
pop
mov
mov
test
xbegin
in
dec
sahf
xchg
dec
pop
out
fisubs
jbe
ljmp
popf
sub
push
out
cmp
jmp
loope
sbb
push
rorl
int
pop
aaa
loopne
test
xor
mov
xor
mov
stos
add
je
ret
xchg
repz
mov
repnz
add
je
push
add
inc
pop
fdivp
xlat
cltd
andb
add
jno
fdiv
clc
mov
hlt
outsb
jge
shl
dec
mov
into
psrld
rcll
clc
push
jl
cmpsb
sub
lcall
sbb
stos
push
dec
out
pop
test
xchg
inc
je
ret
inc
test
cmpsl
cld
mov
pushf
mov
sbb
pop
ja
dec
sub
jbe
mov
pop
sub
rol
mov
out
adc
in
and
mov
pop
jns
cwtl
jge
mov
cltd
adc
xchg
dec
inc
mov
fldcw
sbb
cltd
enter
stos
enter
leave
cmpsb
jp
sbb
mov
xchg
pop
ja
mov
pushf
xchg
out
in
clc
lret
dec
xchg
lret
xchg
or
pop
xchg
insb
je
sar
xchg
lock
push
xorl
xchg
mov
mov
fldenv
sub
scas
xor
and
sbb
or
sub
mov
dec
push
push
aas
daa
dec
jns
cmp
push
in
lahf
sahf
gs
push
and
call
cmpsb
aaa
sti
jg
and
push
dec
xor
xor
shll
xor
cmp
cld
add
pop
call
sahf
inc
leave
fwait
ja
push
jp
nop
addb
add
dec
xchg
les
jno
mov
ljmp
ljmp
sub
inc
ljmp
jno
adc
xor
dec
or
mov
pushw
and
lods
cmpsl
push
sbb
cmp
stos
sbb
sub
mov
test
jl
push
add
xchg
sub
call
lds
fwait
jb
inc
mov
in
test
dec
adc
mov
xchg
cmpsl
or
lods
lods
cli
pop
test
out
test
jae
aad
fwait
stos
bound
xor
jge
sub
call
sbb
mov
jae
cld
xchg
xchg
sub
mov
cmp
pushf
fwait
imul
testl
add
gs
sbb
jp
jo
repz
mov
imul
and
int
fidivs
out
fldenv
mov
mov
xchg
popf
aaa
mov
fstpt
mov
loope
mov
aam
dec
push
gs
pusha
cmp
dec
rolb
push
rorl
xchg
add
rcrl
jno
push
pop
iret
mov
cmpsb
lahf
jb
ret
push
clc
lods
jl
enter
mov
jno
setns
sbb
rorb
movsb
jmp
ds
mov
adcb
mov
aam
fcoms
add
inc
scas
das
cmpb
jne
sub
sahf
leave
mov
mov
fstps
jns
fidivrl
cltd
pop
pop
inc
sarl
scas
popa
mov
sub
xor
sbb
xor
les
fwait
dec
and
jno
pop
shrb
mov
add
mov
sbb
push
fmuls
jmp
jecxz
aam
inc
cmp
mov
jbe
adc
out
scas
adc
dec
sub
push
loope
je
out
dec
mulps
movsb
add
scas
mov
rcl
repnz
popa
and
jns
shl
mov
cmp
lock
movsl
loope
data16
jge
les
int
sub
xchg
nop
add
ret
cmpsl
xchg
js
lods
popa
test
inc
fsubrs
fsubs
je
repz
jne
jns
pop
in
daa
lret
aas
pop
lds
dec
xor
subl
push
xchg
aam
sahf
test
jns
lahf
xor
insl
jne
ljmp
jg
dec
scas
add
clc
cli
fidivs
add
jae
outsl
pop
and
pop
in
adc
lds
scas
in
xchg
xchg
pop
cltd
or
mov
ret
mov
popf
ret
sub
fs
ljmp
dec
sub
js
setg
dec
add
dec
fucomip
add
aad
add
add
mov
fwait
repz
arpl
push
mov
scas
jnp
jecxz
xchg
pop
xchg
inc
mov
inc
xor
iret
mov
out
mov
pop
or
push
and
mov
or
mov
and
fwait
sti
xchg
mov
adc
aaa
ja
mov
scas
jnp
fsubs
dec
cltd
shrb
jge
fistpl
jl
je
cmp
adc
add
popa
in
js
test
aas
xor
jecxz
mov
cs
push
aas
xor
mov
mov
sub
cld
popf
lods
jbe
mov
dec
bound
fldl
dec
mov
pop
xor
xor
add
lahf
xchg
jle
shlb
inc
dec
int3
mov
adcb
fcmove
fstps
int
add
mov
sbb
xor
lcall
add
outsb
add
outsb
xlat
push
outsl
xchg
negl
xchg
addr16
push
sti
jo
inc
fcomps
xor
sub
out
leave
hlt
fsubl
test
sub
jecxz
in
and
dec
fs
fstpl
andl
xchg
ljmp
jecxz
mov
mov
subl
movsl
inc
and
jmp
fistl
out
push
cmc
jmp
jp
dec
std
loop
jo,pt
sbb
pop
je
dec
mov
cmpsl
xchg
xchg
mov
push
adc
xor
mov
loopne
ficompl
inc
in
dec
mov
add
insb
addr16
iret
adc
mov
or
xor
mov
xchg
inc
add
mov
idiv
sbb
idiv
jnp
inc
add
mov
lock
fstpl
jg
ljmp
pop
popf
xor
inc
jecxz
inc
lret
and
xor
push
pop
cmc
lcall
xchg
add
cwtl
insb
add
std
jl
pop
and
mov
adc
and
inc
or
stc
testb
jne
repnz
shll
mov
mov
gs
push
dec
rolb
movsb
ret
scas
mov
stc
jbe
mov
jl
jnp
orl
pop
xchg
pop
repnz
jne
stc
sub
popf
mov
xchg
addr16
push
sub
lret
or
ret
mov
xor
xchg
rdpmc
gs
and
pop
jmp
ja
stos
lahf
cmp
xchg
adc
test
add
adc
add
mov
cmp
cs
ret
loop
js
cmp
sahf
push
add
inc
mov
or
es
mov
movsb
test
cmp
jge
insl
inc
sub
dec
leave
xlat
pop
push
or
dec
daa
cwtl
and
or
les
sbb
jmp
hlt
mov
mov
out
pushf
and
xchg
cld
mov
mov
sbb
aam
test
inc
scas
mov
or
out
clc
es
jmp
arpl
insl
xchg
daa
test
sbb
iret
push
and
movsb
and
sahf
scas
int
add
mov
add
arpl
adcb
test
ds
mov
ljmp
dec
inc
or
push
je
loope
dec
sub
mov
add
cld
mov
movsb
test
push
push
out
fbld
inc
aam
add
pop
add
ret
fiadds
xor
lock
inc
test
or
add
loopne
push
mov
push
mov
mov
mov
mov
mov
pop
mov
repnz
int3
in
add
aaa
mov
push
jno
push
dec
fldcw
pop
iret
jb
adc
aas
and
insl
sub
add
mov
pop
pop
mov
lds
dec
lea
lret
pop
ja
stos
int3
mov
arpl
lods
es
xor
mov
and
adc
loopne
lcall
xor
loopne
sahf
push
aas
or
cmp
stos
inc
xor
pop
mov
dec
imulb
movsb
inc
cmpsl
pop
test
xchg
inc
out
pop
aam
das
mov
push
insl
outsb
cld
sub
mov
inc
test
sub
in
or
lods
mov
adc
ja
add
add
push
push
movsl
iret
cs
or
cmpsl
clc
ret
int
in
and
and
pushf
push
inc
and
mov
daa
mov
aad
add
arpl
sbb
cltd
inc
cmp
testb
cmpsl
dec
leave
jle
jno
pop
into
int
jb
pop
adc
pop
movsl
jmp
cmp
dec
fwait
cmpsb
push
test
mov
hlt
or
push
imul
and
pop
xchg
or
stos
dec
lock
jp
add
add
cwtl
testl
je
cmpl
mov
xor
pushf
sub
aas
mov
adc
push
push
loope
lret
dec
xchg
adc
or
repnz
sub
sbb
jb
jmp
das
mov
and
mov
and
lret
jmp
mov
insl
add
sahf
xchg
xchg
insl
jno
pop
test
mov
mov
or
sti
ja
out
inc
push
jg
xchg
mov
jne,pn
push
push
dec
mov
lret
mov
and
lret
adc
and
imul
iret
push
cld
loopne
fmulp
fs
sub
clc
ret
in
mov
xor
roll
inc
pop
ret
cwtl
roll
loop
inc
hlt
stos
loopne
ret
mov
cmp
call
loopne
fstpt
rep
xor
jno
inc
mov
xlat
enter
mov
push
aam
jne
pop
mov
add
dec
jo
push
pop
notl
jb
adc
imul
fisubs
mov
jg
or
jb
roll
push
gs
add
mov
xchg
push
push
sub
cmp
xchg
xor
stc
cmpb
repz
and
data16
shll
popa
bound
dec
daa
adc
mov
adc
xor
adc
xor
stos
dec
push
scas
lds
xchg
insb
leave
add
pushf
xor
pop
xchg
mov
pop
movsb
loopne
and
sbb
in
lock
shlb
cmp
cs
mov
les
fistps
xor
nop
sub
shlb
pop
sbb
movsl
cmpb
mov
xchg
vmread
pop
sbb
xchg
push
out
push
lods
jle
lea
negl
inc
add
mov
mov
cmc
xor
fcoml
in
mov
push
ljmp
add
inc
dec
je
es
mov
shlb
xor
loopne
cmp
lods
rol
loope
ret
jecxz
arpl
and
dec
mov
inc
mov
lds
repz
bound
xor
add
fwait
pop
jge
les
lock
add
xor
fsts
movsb
jge
imul
cmp
push
and
sub
in
sahf
int3
and
mov
cmp
push
mov
and
scas
int3
xor
pop
cmp
out
pop
movsl
and
dec
sbbl
popa
jmp
int3
addr16
inc
push
pop
faddl
push
push
sbb
mov
sbb
lock
sub
in
inc
pop
push
pop
fs
lcall
adc
stos
fidivrl
jne
mov
nop
aaa
mov
and
push
sbb
inc
subl
loopne
scas
into
xchg
insb
rorb
inc
inc
jo
adc
and
lds
jge
push
mov
mov
sub
add
arpl
cmp
sub
jae
das
dec
and
inc
pop
ret
es
sbb
stc
xor
cmc
push
push
mov
jecxz
cld
dec
rcll
mov
jae,pn
sub
and
in
pop
or
jmp
aas
sbb
mov
push
imul
push
push
mov
lcall
lods
insl
sub
add
insl
adc
xchg
xchg
test
xchg
insl
xchg
mov
aas
or
out
inc
idivb
daa
mov
xor
jmp
add
loope
sub
or
pop
movsl
push
mov
fiadds
stos
and
fisttps
pop
je
test
int3
add
lods
jbe
insb
mov
inc
arpl
fisttpll
xchg
or
sub
out
sub
sti
sub
in
fstpt
add
pop
mov
sub
mov
in
outsl
adc
mov
movsl
cmp
jl
inc
cmp
ja
mov
mov
fdivrs
movsl
fstpt
xchg
inc
cld
das
ja
mov
adc
mov
adc
xor
in
mov
mov
sbb
xor
aas
push
daa
ljmp
ja
nop
dec
cs
sarb
das
mov
test
gs
add
or
mov
xchg
sub
incb
mov
xor
out
inc
out
xorb
addr16
mov
lcall
mov
mov
addr16
pusha
adc
add
jecxz
sub
or
pushf
imul
bound
scas
addr16
fldcw
xchg
in
sub
xor
sbb
mov
jno
mov
into
cmc
dec
add
push
rolw
cmc
jg
sbb
out
cmpsl
inc
mov
pop
push
sbb
movsl
and
push
sub
jb
mov
mov
je
adc
repnz
insl
loope
notb
fbld
adc
xchg
stos
cmp
xchg
insb
es
and
loope
popa
mov
xor
mov
add
addl
sahf
mov
mov
es
fs
bound
pushf
lds
arpl
stc
test
xor
leave
and
test
icebp
in
inc
or
movsl
mov
push
dec
cmp
mov
popa
shrb
dec
cmpsl
mov
inc
mov
rep
add
add
lock
gs
out
xorb
cmp
xor
cmp
fcompl
popf
ficomps
dec
push
leave
sbb
in
aad
aam
mov
sbb
arpl
adc
dec
lcall
icebp
or
scas
mov
xchg
jge
jmp
lods
push
cmp
daa
mov
cmp
sbb
lods
add
jae
lret
xlat
sbb
jecxz
mov
or
mov
fcompl
lret
aaa
jmp
repz
xor
mov
jecxz
mov
loopne
dec
dec
addr16
jno
pop
pop
push
ja
push
int3
or
xchg
insl
sarl
inc
lcall
adc
and
jge
and
shlb
shll
xchg
xor
jo
mov
mov
or
sbb
cmc
pop
out
scas
dec
js
mov
inc
fbld
insl
adcl
pop
xchg
pop
lods
ret
push
hlt
push
and
loopne
adc
ljmp
jp
testl
stc
insl
enter
sub
add
mov
movsl
mov
push
mov
ja
icebp
loope
jno
cmpsb
adc
lcall
dec
xor
xor
xchg
jge
lahf
jge
into
idivb
call
leave
pop
or
sub
jge
sti
lea
mov
mov
or
pushf
jne
or
aaa
mov
sbb
inc
sub
aas
shl
add
fsubs
jb
test
std
mov
pop
cld
jecxz
sub
mov
ret
ja
xor
mov
push
es
addl
and
mov
cli
imul
add
sub
push
jbe
jmp
fisttps
call
pushf
ss
mov
mov
cmc
cmp
mov
adc
add
push
adc
adc
xchg
inc
lds
jmp
sbb
mov
lret
xor
mov
orb
and
fsubr
pop
int3
sub
or
js
subb
push
aad
xor
mov
push
sahf
pop
jo
pop
insl
addr16
repnz
loop
mov
xlat
jae
xlat
push
cmp
icebp
add
aas
out
push
xor
and
mov
or
sbb
int3
mov
pop
nop
movsb
pop
std
aad
outsb
inc
jle
iret
push
xor
cmp
mov
lret
cs
lret
mov
pop
jmp
icebp
cmp
push
jns
test
push
fs
pop
add
add
inc
lret
xchg
lock
sbb
adc
mov
add
pop
test
jbe
call
inc
xchg
xor
sub
cmp
push
pop
push
inc
or
push
out
xchg
stc
cmp
mov
and
nop
jecxz
lahf
mov
fwait
adcb
movsl
movsb
xor
arpl
out
daa
int3
arpl
cmp
fnsave
sub
in
int3
out
or
xchg
cld
aam
ljmp
mov
mov
adc
inc
orl
insb
mov
dec
es
pop
mov
notb
add
ss
push
jle
or
jb
cwtl
sub
fcom
inc
or
xchg
sub
aaa
rol
test
sahf
fiaddl
lods
and
push
xchg
pop
out
cmpsl
mov
stos
mov
js
mov
lcall
pop
out
sbb
fcoms
ss
sbb
xor
test
mov
push
push
adc
shlb
adc
testl
or
fs
jns
add
jb
add
add
ret
xchg
scas
mov
xchg
shll
and
aas
in
or
out
lret
shlb
mov
loope
out
xor
dec
rclb
mov
dec
je
or
int3
jg
lret
aad
mov
lds
fs
sub
pop
add
jo
add
push
pop
xchg
scas
loop
add
adc
inc
pop
daa
mov
push
cmp
jnp
mov
mov
push
mov
xchg
mov
or
mov
mov
cmpsl
jecxz
arpl
pop
xor
repnz
pusha
loop
je
aaa
push
adc
mov
push
es
aad
and
insb
pop
dec
insl
push
jo
andb
insl
xchg
inc
cmc
clc
les
jnp
icebp
ja
in
jl
test
or
leave
xchg
jns
fsts
lret
cmp
dec
pop
and
and
or
push
data16
fidivrs
call
cmp
out
pop
test
out
mov
rclb
aaa
cli
jnp
lods
pop
and
std
xchg
pop
repnz
xchg
adc
or
or
cmp
jmp
push
add
lock
inc
sub
ss
push
popa
mov
dec
insb
lds
mov
and
add
aad
clc
xchg
repnz
es
aas
xchg
mov
test
icebp
lds
iret
push
sbb
jl
aam
mov
lds
mov
lret
mov
cmp
inc
loope
xlat
sbb
jae
sub
mov
push
cli
jb
insl
or
test
mov
sarl
ljmp
imul
sbb
mov
into
jle
lret
push
rorl
imull
push
xor
or
pop
inc
in
xrelease
lret
jns
mov
sub
push
in
mov
adc
int3
or
mov
push
mov
inc
pop
add
jp
push
cmp
and
leave
jb
pop
dec
cmc
mov
pop
jo
arpl
aad
push
loopne
mov
sub
neg
in
add
adc
imul
or
imul
mov
dec
clc
sub
cli
mov
mov
sbb
ljmp
std
pusha
or
pop
xchg
push
adc
lock
sbb
dec
cmp
sbb
xor
popf
xlat
mov
mov
sbb
inc
or
movb
lret
sub
pop
xchg
lret
pop
iret
push
xor
rclb
sbb
sub
jb
inc
loopne
push
divb
add
ret
dec
inc
jno
mov
fidivl
bswap
adc
xor
aad
sub
and
push
ffreep
fisubl
push
xchg
idivb
cs
mov
ljmp
stos
std
int3
aas
ret
and
sbb
or
stos
arpl
and
sbb
jp
in
pop
mov
sarl
mov
pop
movsl
fisubrl
sbb
xorl
mov
insl
xor
test
dec
lret
hlt
hlt
sbb
add
add
cmp
fwait
in
jge
jge
cmp
or
sbb
inc
pop
jne
xor
add
jnp
js
xchg
fnsave
cld
xor
add
or
pop
dec
push
jb
call
das
xor
pop
into
repnz
imul
lods
leave
hlt
pop
mov
adc
xchg
adc
vpsrlq
imul
orl
lcall
jle
and
mov
sti
cmp
add
adc
inc
sub
mov
dec
lea
jnp
icebp
xchg
hlt
repnz
or
mov
ret
mov
cmp
jno
push
inc
stc
stos
cmp
dec
out
jns
push
shll
outsb
ja
mov
daa
add
sbb
mov
pop
stos
lahf
sar
pop
add
outsl
pop
xor
sbb
inc
bound
jbe
addr16
sub
je
mov
fcompl
mov
int3
enter
add
repz
xor
cmpsb
aas
jle
ja
sub
icebp
and
in
sbb
mov
lahf
add
cmp
and
pushf
push
fs
shlb
xor
add
pop
cmp
jnp
mov
and
add
in
int3
stos
mov
push
jbe
pop
dec
mov
aaa
xchg
ljmp
imul
adc
fs
stos
cmp
sbb
sahf
stc
es
in
ret
jne
xor
adc
push
adc
adc
call
shr
and
mov
sbb
mov
add
lea
sbb
pop
cmpsl
cmp
ja
aaa
cli
imul
push
outsl
ret
mov
sub
xor
add
dec
jne
cmp
bound
loope
mull
fwait
and
add
mov
xchg
mov
and
sub
mov
dec
adc
loopne
adc
loopne
sbb
jl
inc
fsqrt
pop
cmp
fmul
cmp
dec
dec
int
jno
repnz
lock
xchg
jmp
inc
and
mov
xchg
pop
mov
in
sbb
pushl
mov
adc
sahf
xchg
out
data16
add
mov
loope
xchg
jnp
rorl
xor
daa
adc
push
and
fistpl
sahf
or
lea
mov
and
aaa
pop
add
xchg
loopne
xlat
or
pop
xchg
adc
sub
pop
adc
insl
push
cltd
jne
inc
cld
xchg
mov
adc
fildll
sbb
hlt
cmpsl
fstpl
int3
gs
jp
rcrl
cwtl
js
push
push
jbe
pop
pusha
cmp
push
push
movsl
fiadds
ja
ljmp
lret
sbb
movsl
in
dec
insl
dec
pop
sarl
call
ret
dec
jg
mov
pop
mov
insl
stos
mov
mov
adc
add
mov
addr16
mov
inc
cli
nop
and
adc
outsl
push
cmc
sahf
adc
in
pop
rcrb
jno
cmp
sti
hlt
outsl
xchg
insb
pop
cmp
pop
xchg
lahf
pop
adc
and
add
adc
fsts
into
adc
pop
and
or
nop
and
out
rcrb
pusha
sub
rcr
test
repnz
das
outsb
notl
fstpl
shrl
adc
pop
xchg
insb
fstl
jmp
xlat
popa
pop
mov
adc
fnstsw
repnz
mov
push
inc
in
movsl
mov
aas
add
in
xor
add
mov
fsubs
pop
into
mov
mov
shrb
mov
xchg
xorb
popf
or
int3
out
xchg
add
and
xchg
push
and
mov
mov
lcall
outsl
dec
aas
pop
xchg
gs
adc
add
cwtl
add
iret
inc
push
in
test
pop
jge
jecxz
mov
adc
or
push
dec
fildll
push
subb
adc
pop
xor
call
popf
roll
xor
inc
xchg
cld
push
add
imul
add
mov
addr16
fcompl
fbld
int
sti
and
xchg
xchg
cld
and
and
sbbb
mov
inc
inc
arpl
xor
xor
xchg
xchg
data16
sbb
sbb
mov
push
jne
sarl
push
pop
arpl
adc
mov
fnstsw
add
mov
das
int
das
or
pop
es
popf
cmp
add
add
xorl
sahf
adc
xchg
cmp
cmp
lret
fcompl
mov
mov
arpl
repnz
sbb
sub
out
mov
int
or
sbb
mov
mov
push
cwtl
mov
rolb
ljmp
mov
mov
sahf
mov
sub
add
aam
test
push
ret
cmc
test
xlat
or
insb
cwtl
xor
loope
repnz
insb
or
add
sub
das
cmp
test
addr16
cld
leave
dec
mov
push
enter
js
inc
dec
loop
xchg
aam
notl
andl
stos
push
push
add
or
ljmp
pop
cmp
cmp
xchg
and
loop
je
push
mov
imul
sbb
push
sub
push
inc
sub
leave
pop
cmp
or
out
jb
stc
pop
test
addb
inc
stos
aad
loop
cs
fdivrs
sbb
xchg
xchg
mov
dec
cmp
or
pop
les
test
mov
cmpsb
sbbl
inc
repz
xor
js
mov
adc
push
jecxz
ds
out
cmc
sub
inc
jmp
popl
hlt
pushf
cmp
ss
js
pop
sbb
mov
into
pop
sub
xor
push
loope
cli
cmp
mov
dec
pop
mov
dec
sbb
lret
sahf
jb
mov
mov
mov
gs
ds
ret
mov
mov
jnp
or
mov
xlat
cmpsb
movsb
int3
xor
in
int
mov
lret
inc
dec
or
mov
and
rcll
mov
mov
mov
add
adc
mov
aas
outsl
mov
adc
xor
mov
push
mov
lret
xchg
mov
sub
fwait
xchg
gs
mov
push
sub
push
xchg
and
or
pop
mov
lcall
test
cmp
inc
jae
jb
stc
push
imul
arpl
je
mov
mov
adc
test
sahf
mov
adcl
and
pop
mov
fiaddl
add
mov
cmc
push
and
ds
es
pop
jg
ja
jne
add
add
or
arpl
pushl
cli
xor
jge
pop
ljmp
jg
push
fcmovu
bound
cli
inc
xchg
sbb
das
xor
cmp
jae
or
in
cs
or
negl
push
lahf
xchg
push
stc
loopne
mov
dec
mov
scas
testl
lea
lcall
lret
sbb
cld
or
and
and
xchg
sbbl
pusha
mov
stos
cmp
sti
lahf
ja
xchg
xor
mov
mov
pop
add
iret
pushf
mov
outsl
cmp
mov
pusha
xchg
or
cltd
sbb
inc
mov
jnp
jnp
add
repnz
sub
fidivrs
and
clc
in
adc
sti
jmp
push
cli
jecxz
pop
push
mov
aad
and
add
ds
sub
lret
decb
out
rorb
xor
mov
or
mov
jae
or
push
push
movsb
dec
in
outsl
adc
mull
sub
sbb
push
js
mov
add
jno
aaa
and
in
and
add
pop
xchg
aad
mov
sub
aam
push
add
fcoms
fwait
into
sub
or
sbb
ds
dec
and
add
push
gs
js
push
push
stos
inc
pop
stos
and
pop
mov
jno
stc
out
jbe
or
xchg
pop
mov
addl
jnp
sbb
pop
enter
inc
adc
loop
mov
arpl
mov
in
aad
in
insl
sbb
inc
push
inc
fmuls
out
pop
pusha
sub
inc
and
test
insl
cltd
cmpsl
scas
add
fwait
or
insl
pop
fisubrl
inc
xchg
add
ds
and
icebp
leave
add
adc
iret
cmp
aad
lds
out
mov
pop
and
sti
js
roll
jecxz
xchg
mov
mov
xor
xchg
mov
lods
push
lahf
lcall
or
adc
fs
jecxz
sub
xchg
sarb
js
in
pop
pop
in
cmp
pop
mov
fnstcw
pop
cwtl
mov
mov
mov
std
and
mov
xchg
add
or
outsl
push
xchg
ret
dec
lods
dec
adc
cmp
pop
jo
push
or
pushf
mov
xchg
in
out
mov
mov
arpl
pop
call
push
stc
cmove
push
or
pop
xlat
aad
mov
sbb
jge
adc
fsubrl
cmp
sarb
push
push
insb
xchg
jl
mov
scas
orl
cltd
jo
push
jle
test
push
mov
stc
push
push
fisubs
sub
adc
call
xor
push
or
pop
movsb
sub
dec
ljmp
out
into
mov
jns
mov
pop
fsubr
addb
xor
lahf
leave
jbe
lds
or
fdivr
adc
out
loope
pusha
int3
sahf
mov
mov
inc
sub
push
inc
pop
loop
sbb
mov
xchg
cmp
mov
pop
mov
scas
lea
out
lods
dec
scas
es
xchg
jno
mov
adc
gs
sbb
push
xchg
stos
mov
out
or
push
and
sarl
iret
fnsave
mov
pop
cmp
out
mov
mov
test
lahf
mov
popf
ret
imul
inc
pop
ret
cmp
jbe
xchg
xlat
sbb
push
and
adc
jbe
push
mov
dec
mov
jl
mov
mov
xor
cmp
pop
hlt
repz
xchg
jae
jg
push
jns
add
incl
and
sbb
mov
pop
lret
roll
mov
fdiv
mov
in
add
rcl
pop
pop
add
xchg
adc
cmc
push
or
pop
inc
shll
push
out
add
and
dec
and
insl
and
and
xor
mov
lret
add
fs
rclb
and
in
out
push
clc
mov
and
adc
mov
pop
loope
xchg
shrb
addr16
mov
mov
push
sbb
mov
and
push
int3
or
push
ljmp
fwait
push
push
pop
pop
daa
insl
cwtl
mov
mov
dec
xchg
lret
sub
dec
cmp
xor
add
or
mov
pop
imul
dec
ret
pop
ss
and
xchg
or
jmp
xor
and
mov
or
xor
cmc
shlb
dec
daa
aaa
sar
jmp
shrl
lock
stos
push
call
js
cmp
push
or
or
pushf
lret
cmp
sti
mov
lcall
xchg
addr16
ds
movsb
or
stos
cli
fcom
or
jae
ljmp
jb
imul
sbb
subl
sub
jl
aaa
test
cmp
push
cmc
repz
movsl
jl
test
inc
clc
or
pop
mov
lock
ss
mov
scas
inc
adc
xor
mov
jmp
in
mov
mov
push
in
vfrczss
dec
cmp
jae
les
sti
mov
mov
jo
cmp
ret
nop
js
ret
or
inc
jecxz
testb
cmp
cmp
push
mov
xor
cmp
xchg
addl
inc
jno
add
add
jp
pop
push
icebp
cmp
cmc
cmp
or
inc
pusha
dec
daa
sti
cs
fs
out
and
out
or
pop
movsb
arpl
dec
insl
out
add
aaa
lods
sbb
shl
xlat
mov
adc
ret
add
push
mov
and
cs
mov
orb
insl
test
sbbl
push
add
and
in
cmp
in
jns
dec
xor
cmp
scas
mov
or
pop
sbb
jo
fisubrs
inc
sbbb
jecxz
dec
loop
sbb
dec
push
add
test
in
adc
jb
jno
push
mov
pop
adc
mov
fwait
jmp
cmpsb
int3
sub
sbb
sbb
loope
and
pop
lods
sbb
cmp
xlat
pusha
ror
pop
fildll
loope
add
cli
pop
mov
cmp
bnd
lret
push
outsl
das
arpl
dec
xchg
dec
scas
or
push
out
mov
sbb
mov
je
xchg
add
xchg
jle
inc
in
lds
or
std
mov
data16
lret
xor
and
cmp
push
cmp
jns
cwtl
cmp
lcall
shrb
fldl2t
mov
sbb
addr16
aad
add
jecxz
adc
gs
sub
add
popf
xor
in
xor
jbe
and
mov
and
push
push
cmp
xor
repnz
call
mov
clc
stos
stos
rcll
pusha
inc
adc
lret
in
sbb
xor
mov
repnz
add
addr16
sub
xchg
in
push
mov
xchg
adc
imul
mov
mov
sub
sbb
nop
mov
or
nop
xchg
and
push
inc
roll
jl
subl
call
into
and
pop
icebp
inc
out
mov
in
sub
mov
fwait
mov
test
inc
das
stc
jb
or
jnp
or
or
or
inc
push
out
adc
in
push
pop
pusha
dec
test
inc
mov
lret
push
pop
enter
xor
mov
ret
incb
pop
xchg
adc
daa
and
fs
dec
out
lahf
out
xor
sub
mov
jp
enter
sbb
add
sti
adc
andl
add
scas
shrd
dec
adc
push
add
mov
cmp
ja
or
add
dec
rcll
divl
icebp
stos
or
lods
pop
sub
push
dec
push
sbb
mov
jo
sbb
js
mov
pop
mov
out
or
push
inc
mov
shrl
jg
fimull
adc
adc
fiaddl
adc
lret
xchg
les
jecxz
negb
fmull
xor
imul
push
sbbl
xlat
out
es
leave
fcompl
push
aad
push
js
mov
xchg
call
test
sub
int
push
leave
shrb
stc
mov
add
ja
cmp
xchg
or
enter
loop
xorl
fs
mov
outsb
adc
cltd
jb
outsl
sub
aam
add
roll
xlat
lcall
or
pusha
fwait
and
ss
ds
dec
mov
int
jp
jo
out
xchg
pop
sarl
movsb
mov
push
call
fdivrl
fisubrl
jle,pt
jno
dec
pop
mov
pop
or
ljmp
sub
pop
in
or
pop
in
xchg
or
mov
push
or
shl
ret
loop
jnp
shlb
arpl
xor
cltd
cwtl
gs
cs
dec
mov
push
jecxz
data16
jl
mov
or
aad
cltd
mov
clc
push
and
or
xor
popf
pop
imul
inc
cltd
insl
mov
dec
pop
fidivs
lret
roll
nop
push
jns
leave
fsts
ret
test
call
aam
fs
inc
pop
fdivr
data16
pushf
bound
cli
adc
cmp
daa
inc
dec
hlt
clc
loop
test
fs
add
jle
xchg
lea
cltd
add
inc
sti
xor
pop
xor
mov
jae
xor
lds
sub
sbb
pop
pop
popf
jmp
cmpb
mov
ja
pushf
test
mov
cmp
decl
ljmp
lret
adc
ljmp
mov
mov
adc
mov
ja
fnstenv
stos
rcll
xchg
rclb
add
subl
fcomps
pop
mov
add
jns
cmp
sub
jle
fadd
xchg
xchg
pop
sub
daa
push
or
fsubs
mulb
push
lods
dec
inc
pop
dec
pop
lret
lahf
xchg
mov
pop
loop
aad
push
ret
mov
ss
mov
jl
fistpll
repz
mov
pop
leave
out
push
test
mov
gs
lods
imul
subb
and
sbb
pop
lahf
dec
das
cwtl
in
mov
into
inc
ja
jmp
cmp
add
fistl
jle
mov
dec
sub
repnz
je
pop
mov
rorl
xor
aad
inc
jecxz
sub
mov
test
movlps
adc
ret
sbb
out
jo
pop
pop
push
out
adc
inc
enter
in
repnz
pop
pusha
aas
pop
add
outsl
sub
sbb
iret
mov
rcrl
jns
cli
cmp
mov
dec
test
jns
and
andb
mov
icebp
sti
mov
movsl
cmp
call
les
push
cmpsl
sbbb
fldenv
mov
cli
sbb
ds
cmp
stos
daa
pop
or
cli
add
push
das
shrl
and
xchg
xchg
int
jae
mov
adc
cmpsb
jne
arpl
fstpl
dec
cmpsl
add
testb
data16
cmp
dec
xorl
imul
negb
std
jbe
push
popf
in
sub
pop
imul
xor
pop
divl
in
jne
jb
ret
xchg
mov
sbb
inc
rclb
das
out
push
mov
dec
in
aaa
push
dec
cli
out
mov
aad
mov
cmp
outsl
mov
les
mov
jge
push
decl
xchg
addr16
aaa
dec
jecxz
rcrb
mov
imull
ljmp
mov
jo
repz
jns
mov
mov
mov
and
dec
pushf
xor
outsl
mov
test
ret
mov
fists
imul
out
adc
aas
dec
and
sub
in
into
adc
pop
cmp
cwtl
pop
mov
pop
dec
dec
or
pop
push
int3
insl
push
fbld
sub
mov
inc
mov
jp
pop
inc
rcrb
and
jb
push
mov
sub
pop
mov
pop
pusha
jae
imul
jo
xchg
jae
sti
pop
mov
cmp
iret
dec
jnp
cmp
pop
mov
ret
lret
nop
stos
loopne
mov
and
popf
nop
dec
es
jg
mov
jp
jb
test
xor
call
or
in
sbb
scas
fwait
inc
push
add
std
inc
xor
push
gs
movsl
orb
and
dec
ret
fidivs
faddp
cmpb
lcall
js
pop
imul
testl
sbb
ljmp
jle
lret
sub
push
mov
insb
add
dec
mov
inc
cwtl
mov
pushf
dec
jl
cmp
daa
sbb
mov
cwtd
jns
mov
addr16
sbb
icebp
out
out
enter
mov
push
mov
pop
mov
int3
jmp
adc
lret
movsb
shll
push
push
pop
orb
dec
vpsubd
xor
mov
sub
jns
xchg
sub
adc
sahf
pushf
out
aad
jp
sbb
cld
jbe
jg
jns
add
repz
adc
ja
out
and
leave
xchg
push
int
push
pop
jecxz
movsl
dec
and
shl
gs
cmp
out
add
out
movsl
mov
adc
mov
jnp
jne
push
das
pop
out
lret
xlat
pop
loopne
pushf
in
sub
dec
aam
fwait
jnp
hlt
pop
dec
mov
cld
mov
and
ret
sbb
push
shll
xchg
dec
inc
in
push
dec
test
jb
pop
pop
pop
dec
das
aas
sub
ja
dec
test
fstps
jmp
fld
dec
cs
mov
mov
xor
push
or
test
scas
jo
or
arpl
cmp
xlat
and
dec
scas
std
adc
loope
loop
lds
adc
subw
sbb
imul
cmpsl
mov
cmp
or
loop
cpuid
push
ret
fisubl
jnp
mov
aad
arpl
adc
or
loop
jle
mov
mov
loopne
sbb
inc
adc
negl
stos
icebp
in
dec
xor
lret
ret
push
xchg
adc
dec
jp
cmpb
mov
ljmp
adcl
movsb
dec
or
outsb
sbb
ljmp
sbb
in
lcall
lret
call
jbe
mov
std
pop
stos
gs
jae
cmp
jmp
cmp
into
imul
sbb
jbe
insb
mov
clc
cltd
sbbb
loop
iret
sbb
inc
cmp
scas
add
clc
in
dec
clc
mov
loop
pop
into
push
xchg
testb
cwtl
pop
pop
mov
in
xchg
out
jp
in
add
cmp
cmc
xor
sarb
div
jnp
xchg
dec
scas
xchg
aad
and
or
jl
rorb
mov
jno
shlb
pop
sub
mov
imul
aad
mov
movsb
fdivr
mov
test
jecxz
test
daa
jne
ds
adc
xchg
rorb
adc
push
dec
loope
divl
dec
fnstcw
stc
or
add
mov
fcompl
je
mov
call
add
nop
xchg
cwtl
adc
xorb
out
lods
cmp
into
cmp
ret
pushf
aas
imul
out
in
cld
adc
cmp
movsl
push
imul
xchg
mov
jl
ds
mov
pop
jge
jmp
mov
sbb
sub
imul
fidivl
out
push
pop
push
lds
mov
jmp
out
lock
xor
cltd
shrb
adc
aaa
mov
fdivrl
sbb
cs
inc
jg
into
lcall
sub
or
jo
cmp
xchg
push
repz
dec
jmp
mov
xchg
test
insb
loope
clc
shlb
data16
repz
push
mov
mov
push
or
dec
lret
out
jo
sbb
jns
cmp
mov
movsb
jae
inc
ficomps
fwait
cmpb
vmread
pop
pop
mov
jl
js
adc
push
dec
xchg
mov
shll
jae
lret
push
fbstp
sbb
jne
je
out
imul
hlt
fcom
icebp
jae
pop
xor
cmpl
add
jno
nop
pusha
mov
add
mov
sub
insl
cli
test
popa
inc
and
out
add
rcll
sti
mov
jbe
popf
stos
shr
sbb
xchg
outsl
fstpl
pop
sub
test
scas
xchg
push
mov
cmp
add
orl
jae
addl
stc
nop
pushf
pop
sbb
xchg
fsub
sar
scas
xlat
inc
sahf
mov
jge
fwait
cwtl
jecxz
sub
les
daa
sbb
cmp
mov
jnp
lret
pop
in
lahf
addb
sbb
adc
xchg
pop
call
shl
bound
jne
sarl
ret
inc
iret
dec
mov
rorb
jo
sbb
hlt
ljmp
inc
leave
cmp
adc
push
add
popa
push
mull
push
adc
rclb
and
xchg
in
les
push
push
rcll
pusha
dec
in
iret
xor
pop
jp
sub
fdivrl
fmull
push
jae
push
mov
mov
mov
int
and
sbbb
scas
push
sub
mov
fdivrl
imul
sbb
into
mov
push
sbb
xchg
pushf
cld
mov
push
adc
insl
mov
push
mov
jo
in
pop
and
dec
in
shlb
ds
mov
mov
out
dec
sbb
inc
jns
add
ja
push
and
mov
cld
mov
rcrl
or
fdivl
cli
mov
mov
sbb
xor
add
mov
cmp
cmp
adc
mov
add
loope
test
xchg
into
movsl
xchg
lock
cmp
jl
mov
les
fiadds
sbb
ror
push
lret
mov
xorb
out
add
sahf
cwtl
and
dec
data16
lds
das
insl
ljmp
mov
cmc
pop
xchg
pop
add
das
push
jmp
mov
xchg
pop
or
gs
ficomps
or
add
fidivrs
adc
fmull
pop
jo
js
or
or
push
xorl
loop
inc
push
mov
xchg
out
loop
cmp
xchg
or
test
dec
inc
mov
test
pop
jge
imul
adc
cmpsb
mov
and
sbb
cld
in
out
inc
or
push
and
dec
push
pop
pop
adcl
push
insl
or
lcall
adc
fsts
push
sbb
pop
int
insl
adc
sbb
mov
daa
jo
mov
push
pop
mulb
mov
inc
dec
call
hlt
lret
js
test
xorb
inc
mov
lret
je
bnd
mov
mov
lods
ffree
jmp
cmp
cmp
pop
jp
pop
mov
mov
pop
pop
xchg
pop
or
cmpsl
xchg
into
adc
cmc
loopne
shll
lock
mov
orb
sub
shlb
sub
movsl
pop
push
loop
jmp
nop
out
xor
xchg
xchg
adc
xchg
test
pop
bswap
fdiv
cmp
sbb
dec
dec
insb
iret
mov
cmp
jmp
add
jnp
push
nop
push
insl
stc
fwait
jp
mov
cmp
std
ds
in
mov
mov
andb
xchg
test
outsb
out
inc
test
cltd
pop
inc
mov
inc
mov
dec
shll
mov
movsb
xor
arpl
cld
insb
inc
scas
daa
test
mov
mov
mov
cmp
call
sub
flds
ss
notl
andb
pop
jmp
and
inc
mov
loopne
cmp
ret
sbb
pop
add
push
je
mov
and
into
filds
test
or
int3
gs
stos
xor
or
push
xor
imul
push
ret
bswap
mov
cmp
lcall
ficoml
jnp
mov
fidivrl
jb
push
je
insb
xchg
sarl
xor
or
jns
loope
sarb
dec
ljmp
js
mov
ret
testb
aas
xor
fisubrs
xchg
cmp
rolb
and
ja
cmpsl
sbb
xchg
cmp
aam
adc
mov
cmp
ret
push
push
scas
test
or
mov
pop
call
xor
push
add
stos
divb
add
jp
cmp
xor
jae
ror
mov
repnz
pop
dec
push
imul
repz
rorl
add
pop
mov
popf
pop
push
inc
xchg
mov
pop
test
lds
mov
lret
cmp
add
mov
pop
popa
dec
dec
mov
sbb
sti
and
pop
andnps
data16
js
lods
popf
pop
inc
inc
xor
jecxz
dec
outsl
lret
push
xchg
or
enter
jecxz
mov
add
adc
mov
jne
add
cld
out
repnz
xor
push
xchg
std
mov
jae
daa
push
sub
add
xor
xchg
out
mov
jns
icebp
mov
or
jnp
xor
mov
mov
jge
adc
sarl
stos
movsl
jnp
sub
rcl
xorl
jl
sub
jno
out
inc
ret
fisttpll
clc
pusha
pusha
aam
scas
and
sbb
sbb
out
and
jo
inc
push
fbld
adc
lret
mov
enter
inc
adc
into
insb
push
lods
mov
or
ret
inc
sbb
push
ja
xchg
ficompl
icebp
aam
clc
aaa
das
out
mov
push
mov
xchg
adc
or
adc
stc
add
jge
sbb
and
cmp
push
jb
pop
pop
sub
sti
shrb
stos
mov
xor
inc
cmp
dec
sbb
mov
adc
xchg
shlb
shrl
call
xchg
push
mov
cld
pop
lret
lret
scas
push
lock
test
add
mov
cmp
inc
aad
nop
cmc
nop
movsl
and
cmp
repnz
test
pop
mov
pusha
cmp
shl
sub
pusha
sbb
pop
les
cmp
or
push
int
push
mov
enter
jbe
jmp
in
ret
lret
mov
sub
repz
loopne
ss
push
mov
gs
jb
mov
add
stc
popf
push
sarl
mov
jno
dec
clc
imulb
pop
xchg
loopne
testl
int
je
inc
push
arpl
jbe
push
es
orb
test
jp
push
aas
test
and
sahf
scas
rcrl
gs
cwtl
negl
push
pop
push
and
shrl
sub
adcb
add
fs
push
push
cli
out
mov
fucomi
sbb
mov
test
mov
test
push
insl
enter
lahf
jo
test
test
pop
int
jno
lcall
xchg
into
ficomps
jecxz
inc
xchg
ror
mov
stc
aam
inc
ss
daa
test
mov
xor
cli
mov
in
aas
xchg
pop
jo
xchg
jae
inc
cwtl
loop
add
jae
jl
mov
mov
pop
inc
xchg
pop
pusha
push
mov
sbb
mov
add
xchg
loop
inc
arpl
in
pop
cmp
das
jg
mov
mov
cmpsb
test
push
ss
inc
dec
lret
dec
mov
arpl
imul
adc
inc
in
loopne
cs
mov
mov
aad
shll
jl
int
int3
test
xchg
mov
cmp
loop
sbb
dec
xor
mov
mov
ss
fidivrs
mov
roll
gs
inc
or
xor
cmc
mov
lods
gs
sub
nop
jae
out
in
cmpsl
and
dec
dec
adc
dec
push
bound
in
jmp
inc
in
stos
aaa
and
push
roll
mov
or
adc
xacquire
pop
fadds
mov
mov
xchg
pushf
mov
test
ja
in
shll
loopne
pop
pop
jnp
cmpsl
sub
clc
pop
les
nop
out
cld
mov
pop
push
sub
pop
pop
jb
test
jecxz
xor
cmpb
add
xchg
neg
shrl
pop
add
pushf
sub
or
mov
or
bound
test
mov
mov
ljmp
jg
jmp
mov
sbb
xchg
or
and
fmuls
and
pop
js
dec
cmpb
aaa
mov
negl
push
adc
inc
jl
nop
mov
ret
gs
les
addb
adc
fs
adc
or
fistpll
out
and
jecxz
dec
test
imul
sbb
jae
pop
aad
scas
inc
ret
ss
or
cltd
jns
cwtl
dec
xor
loop
mov
insb
cmp
mov
xchg
pop
cmp
movsb
xorl
jg
loop
jge
add
sub
push
cmp
fndisi(8087
xchg
lcall
jae
mov
fcoml
stc
add
in
xchg
aaa
hlt
jmp
mov
pushf
push
aaa
sbb
cs
mov
xchg
mov
movsl
icebp
lea
test
shrb
addr16
cmp
rcl
or
addb
mulb
mov
movsb
ret
push
dec
arpl
mov
test
jnp
dec
lahf
sub
sbb
fldcw
mov
or
pop
std
incl
lahf
jmp
mov
adc
ret
xor
aas
jbe
cmpsb
mov
jbe
add
xchg
xchg
dec
cpuid
dec
add
add
pop
popa
dec
inc
jo
jno
mov
mov
jle
loopne
push
xchg
gs
jp
pop
push
shl
push
adc
mov
mov
popa
icebp
and
cld
push
shr
cmp
mov
addb
fs
add
cmp
push
mov
fsubrs
sub
xor
xor
sbb
xchg
ror
mov
cli
xorb
call
leave
ljmp
scas
dec
gs
push
push
jl
fucomi
dec
push
arpl
or
xor
push
lds
add
scas
pop
outsb
sub
xor
inc
and
lahf
popa
call
hlt
fcomp
xchg
and
or
add
adc
mov
ret
sbb
xlat
fdivr
lods
cmp
stos
add
pop
sbbb
pop
fcoml
addl
pop
enter
out
popa
aam
insb
jno
jp
mov
out
fs
adc
jg
xor
cld
mov
lret
mov
loope
pop
fisubrl
imul
jne
aaa
sbb
outsb
pop
addr16
in
outsb
jecxz
gs
cs
cmc
dec
push
cmp
aaa
push
daa
adc
sbb
inc
push
adc
jge
sub
xchg
dec
dec
add
shlb
and
stos
aam
sub
ja
push
cmp
imul
xlat
negb
inc
clc
shr
in
shll
xor
outsb
loopne
rorb
pop
jge
sahf
scas
rcrl
cmp
xor
movsb
mov
outsb
cmp
fcomps
mov
aas
outsl
and
daa
jp
femms
clc
cmp
fstps
jg
mov
jns
dec
push
xchg
push
cmp
scas
pop
cmp
clc
cmp
push
jns
out
sbb
and
in
int
in
cmpsl
stc
xchg
dec
sub
add
push
jns
mov
stos
add
fsubp
pop
data16
add
dec
push
scas
js
mov
mov
sub
sbb
push
loope
je
push
fcomps
scas
push
push
incb
es
scas
inc
in
lds
stos
les
test
lods
sub
cmp
mov
test
dec
adc
lods
adc
jae
jno
sbb
mov
sbb
fbstp
inc
int3
and
xor
fwait
mov
cmc
mov
dec
sbb
jg
mov
sarw
mov
scas
repnz
lock
imul
push
adc
pop
xchg
test
or
pop
mov
out
mov
xchg
xchg
xlat
push
int3
mov
push
xchg
ss
xchg
pop
jb
pop
inc
mov
pop
jnp
mov
enter
mov
cwtl
mov
mov
bound
cmc
mov
and
mov
out
test
js
jo
cmp
scas
xchg
xchg
js
adc
imul
movsl
movsb
push
mov
add
xor
jg
jbe
push
add
subb
arpl
aam
jmp
cmp
and
ljmp
loop
ljmp
insb
adc
mov
inc
adc
jns
pushf
cltd
xor
sbb
and
lret
pop
mov
sar
into
leave
fidivs
jo
into
sahf
iret
jp
xchg
sub
fucomp
aas
and
adc
sub
jg
jmp
inc
mov
xor
sbb
pop
lds
aaa
fiaddl
dec
xor
dec
cmp
rorl
js
pop
push
xchg
cmp
lahf
aaa
dec
out
mov
not
and
pop
les
js
clc
mov
sbb
lods
cmp
rcll
shlb
mov
mov
test
or
lret
xchg
cmp
in
fwait
mov
mov
ret
stc
xchg
cmc
roll
xchg
les
sbb
cmc
cld
data16
pop
js
jb
or
xorb
push
push
or
xor
dec
mov
mov
xlat
cmpsb
aam
fsubl
xchg
push
xchg
ds
fbstp
and
int3
shll
fstps
pop
fbld
or
popf
out
jle
sbb
pop
cmpsb
mov
andb
pop
cld
jno
jae
mov
xor
imul
or
pop
dec
fists
aaa
out
mov
sub
and
mov
pop
cmp
ret
repnz
adc
lock
mov
inc
cltd
cli
aas
sub
outsb
jl
xor
clc
jns
shlb
daa
xchg
xlat
lret
push
test
jp
push
and
outsl
cmpl
inc
ficoml
int
mov
stc
popa
std
add
mov
cs
stc
push
pop
inc
dec
shl
shrb
loop
mov
stos
mov
add
sbb
mov
mov
mov
mov
and
arpl
sarl
jge
cmp
div
mov
sbb
cmpsb
ds
mov
jle
dec
xchg
xchg
test
stos
pop
push
mov
loope
out
sbb
in
xor
push
cmc
cld
pop
nop
repnz
ljmp
add
and
pop
cmpsl
inc
aad
arpl
xor
icebp
jae
pop
leave
add
dec
jmp
sub
or
mov
jnp
shll
adc
add
movsb
lea
out
mov
scas
nop
dec
fists
lcall
sbb
cmp
adc
subl
punpckhbw
jmp
sbb
mov
mov
das
movsl
add
imul
mov
mov
pop
out
call
push
int3
ja
push
jnp
add
lcall
out
jnp
es
dec
pop
pop
out
cmpsl
sahf
jne
addr16
xchg
or
pop
in
jbe
push
mov
cli
inc
jnp
jge
push
shr
scas
dec
pop
in
into
pusha
scas
jg
lahf
xchg
jne
push
mov
arpl
in
repnz
decl
pop
outsb
insb
aam
mov
and
pop
sbb
repnz
les
push
or
sbb
pop
xchg
mov
xchg
jae
push
mov
jns
test
inc
fdivs
test
pop
shr
pop
or
jl
in
loope
test
push
and
cmp
sbb
jp
push
aam
les
adc
movsb
cmpl
into
inc
mov
lret
in
or
idiv
aam
sub
aaa
add
std
and
insb
jle
jl
cmp
lods
adc
xchg
mov
inc
pop
scas
sub
arpl
aad
push
out
xchg
dec
xor
movsl
int3
fwait
mov
lods
rclb
clc
negl
dec
sbb
add
cmp
sub
cmp
insb
outsb
icebp
and
or
subl
xchg
push
cmp
fwait
repz
je
out
and
add
stc
xor
push
pop
xlat
xor
mov
ficomps
mov
ja
fsubs
jmp
jmp
mov
mov
push
or
int3
mov
daa
test
mov
sbb
pushf
xchg
add
ret
dec
jns
mov
push
pop
and
aad
fadd
xchg
push
push
jecxz
lahf
xor
cld
ss
xchg
xchg
push
or
movsb
xor
jmp
push
sahf
or
popf
repnz
popa
sub
insl
sbb
xchg
lock
out
add
jle
sbb
popf
jbe
out
out
jb
out
cmpsl
insb
xchg
push
and
jge
xchg
rcl
movsl
sti
or
mov
jle
xchg
and
jle
pop
or
adc
pop
test
insw
and
xorb
cltd
and
push
int
mov
jmp
jbe
in
rorb
movsl
mov
jle
test
insb
dec
adc
cld
push
enter
and
movsl
dec
pop
push
lret
aaa
inc
repnz
xor
pop
das
jnp
jns
inc
adc
jno
push
pop
test
in
add
cmp
das
andl
repnz
in
sub
sbb
mov
lret
mov
stc
and
cmp
and
pop
mov
in
lret
lahf
push
sub
push
cmp
std
xchg
or
hlt
test
mov
dec
cli
lock
aad
jnp
add
rcrl
mov
test
fisttps
leave
stc
repnz
ljmp
push
ja
out
aas
mov
icebp
pusha
mov
dec
add
jno
mov
sub
lods
subl
mov
or
mov
lods
cmp
jno
add
xor
cmp
mov
push
inc
notb
and
push
int3
test
lret
push
jge
fwait
es
cs
xor
sub
fwait
aam
and
pop
push
sub
xor
das
mov
fistpl
in
std
icebp
imul
jb
stc
stos
cmp
imul
fists
pop
pop
clc
icebp
std
pop
pop
pop
adc
dec
mov
xor
mov
leave
jge
stc
add
loop
sub
insb
das
stos
dec
xor
out
xor
inc
hlt
jge,pn
jne
xor
xor
and
mov
les
add
in
ss
jno
and
aaa
jecxz
dec
loop
sbb
jmp
jae
xchg
cmp
mov
lret
sbb
leave
scas
add
out
mov
cmp
negl
lods
sbb
mov
adc
xlat
add
xor
test
fisubl
fld
daa
push
dec
std
sti
addr16
aas
push
push
mov
js
sbbl
ds
xlat
jo
jne
dec
test
addb
xchg
mov
and
xchg
and
test
dec
inc
and
popf
sar
lods
xchg
push
pop
push
mov
sub
rorb
sahf
inc
mov
out
pop
mov
je
enter
lods
lock
jo
pusha
scas
cmc
xchg
and
inc
sub
push
inc
mull
not
sbb
dec
adc
inc
les
mov
or
sub
mov
lock
fstpl
ss
into
fdivl
outsb
add
mov
mov
pop
jbe
lea
or
ja
scas
es
test
addr16
dec
push
adc
sub
push
daa
test
in
xchg
pop
sbb
sahf
push
mov
adc
cli
or
push
push
cmp
xor
fwait
addl
fstp
dec
xor
xorb
jb
cmp
scas
arpl
sbbb
imul
pop
push
adc
mov
adc
imul
jg
jecxz
stos
repnz
imul
and
std
mov
mov
fisttps
or
cmpsb
fidivrl
mov
popa
lahf
scas
addl
into
mov
fwait
mov
sbb
xchg
out
test
xchg
push
sub
push
mov
or
pop
out
fsts
idivl
andl
repnz
inc
mov
or
andl
mov
mov
lods
xchg
int3
xchg
testl
push
cmp
scas
shll
adc
mov
adc
jno
clc
adc
into
cmc
stos
inc
jnp
and
xchg
jo
push
cs
fstps
loopne
and
xchg
cmp
xor
es
ja
sbb
aam
cmc
cmpl
jnp
cwtl
enter
push
dec
xor
ds
sbb
mov
mov
ret
insb
shl
loopne
fs
lods
shlb
movsl
leave
idivl
sub
bound
out
and
jnp
stos
leave
sub
sbb
adc
and
rorl
cli
sbb
sub
incb
pop
sub
imul
adc
in
sbb
imul
imul
pop
int
outsb
fdivrl
xlat
scas
lahf
jp
in
enter
dec
fmul
sahf
ds
ljmp
push
add
xchg
mov
push
fisubrl
ljmp
cwtl
push
mov
and
int
xor
inc
lock
push
movb
ret
xchg
pop
shufps
gs
inc
inc
xchg
fwait
int
xchg
pop
imulb
mov
push
mov
lock
pusha
pop
dec
mov
lret
dec
subb
shl
fnstsw
mov
push
loope,pt
in
cmp
loopne
inc
cli
or
fcoml
aas
repz
add
into
stc
push
jnp
or
jnp
lods
ficomps
dec
mov
ficomps
and
or
icebp
push
vmread
sub
inc
xor
je
jo
push
or
in
mov
mov
pop
lock
jg
rolb
mov
dec
test
cmp
xchg
inc
cmpsl
mov
or
mov
popf
clc
push
sbb
inc
push
or
push
xor
loope
mov
dec
shll
jp
movsb
fmull
popf
fildl
pop
fs
fnsave
xchg
dec
mov
cmpsb
cmc
scas
fldenv
lds
js
movsl
cmpsl
outsb
push
xchg
repz
or
push
jbe
and
ret
add
xchg
mov
push
lret
in
pop
movsl
cltd
clc
add
xchg
out
scas
pop
outsb
out
loopne
push
cmc
push
aad
into
std
popf
ljmp
cmp
cmp
test
shlb
lret
scas
pop
mov
add
xchg
imulb
pop
push
leave
fcoml
jmp
xor
mov
ret
sbb
fwait
mov
jecxz
push
ljmp
lds
sbb
add
mov
dec
andb
add
ret
cmp
mov
jle
out
mov
and
test
ret
jae
pusha
pop
insb
xlat
sbb
pop
or
mov
sbb
adc
pop
ja
aaa
sbb
popf
je
dec
clc
mov
lcall
fs
stos
jns
xchg
aam
pusha
adc
and
push
adc
pusha
cwtl
mov
sub
dec
push
popa
jne
lea
clc
jae
mov
sub
cmp
pop
icebp
cmp
rcl
jle
bnd
jp
enter
cmp
xor
pushf
sbb
xchg
pop
push
cmp
stc
add
mov
xchg
sub
jecxz
repz
out
push
in
jne
test
mov
shll
pop
lds
add
or
adc
mov
mov
iret
ljmp
aaa
test
stc
sahf
into
mov
push
ret
cmpl
bnd
or
aam
clc
insb
jmp
and
cmpsb
fnstenv
outsb
popa
shll
or
sub
insb
lock
enter
movq
jne
add
xor
test
cs
loopne
cmp
pop
jle
push
pop
sub
stos
cmc
mov
cmp
or
and
jns
loope
dec
out
aas
push
repnz
imul
cwtl
lret
and
nop
shl
adc
dec
xchg
pop
mov
ret
popf
sbb
or
test
dec
in
mov
cmp
fimuls
dec
rclb
out
and
ss
cmp
dec
insl
es
sarb
out
test
sbb
ja,pn
or
outsb
jg
fistpl
pop
pop
xchg
cmpsb
xchg
out
addr16
pusha
push
push
pop
jp
arpl
push
sbb
pusha
push
into
mov
rol
adc
xor
dec
adcb
inc
test
mov
cmp
xor
cmpsb
imul
and
sarb
repnz
push
xor
fcmovu
push
repnz
push
pop
popf
pop
mov
sub
pop
lret
andb
pusha
sbb
xchg
mov
pop
sub
jb
cmpsl
cmpsb
add
jecxz
cmp
inc
xlat
aas
das
mov
inc
sub
cwtl
test
sti
mov
add
lret
cmp
mov
add
jae
aaa
mov
mov
movsl
push
call
std
rcrl
inc
mov
js
pop
xchg
jnp
imul
stos
lds
cmpsb
mov
bound
cmp
xlat
shl
or
sti
enter
dec
daa
in
mov
xor
stos
jl
xchg
sub
ds
add
sub
cmp
insl
mov
sbb
loopne
inc
movsb
mov
mov
adc
stc
jecxz
xchg
aas
inc
cmpsb
sar
xchg
in
sub
and
out
cmpsl
hlt
xchg
cmp
scas
inc
adc
jmp
out
lcall
fcmovnb
lret
out
outsl
fisttpl
loope
mov
fldl
fstl
fcmovnb
mov
add
mov
aaa
movsb
loop
out
test
mov
mov
or
into
in
jle
pusha
xchg
imul
push
mov
cmpsl
lds
pop
sub
and
fwait
out
daa
loop
pushl
loopne
mov
testl
sbb
repnz
cmpsb
sti
or
nop
cld
pop
stc
push
jle
inc
js
mov
sarb
cmp
adc
fistpl
lock
jecxz
jmp
cmpsl
sarb
add
orl
pop
pop
ficomps
or
out
scas
sub
push
iret
ljmp
push
adc
dec
loopne
roll
lods
shlb
dec
js
mov
jg
jp
shrb
lret
add
adc
out
imul
cmp
ret
xor
clc
inc
icebp
xor
arpl
loope
xor
sbb
scas
cmpsl
mov
jno
xchg
dec
in
push
mov
ret
stos
sahf
test
mov
aam
adc
jne
mov
sbbl
ret
scas
xchg
inc
mov
mov
mov
add
in
es
movsl
pop
imul
pop
pop
leave
mov
lea
add
jae,pn
insl
sbb
mov
adc
adc
mov
fsubrl
loope
dec
stc
pop
testb
sbb
rol
lods
dec
inc
push
add
pop
xchg
push
je
mov
push
pop
imul
or
lcall
xor
ret
out
xchg
rcrl
push
stc
pop
shl
cmp
test
jg
jg
xchg
les
jnp
test
insl
ret
dec
sbbb
add
jmp
pop
mov
loop
das
push
ja
pop
cli
loop
push
dec
mov
fnsave
test
or
sarl
es
and
fdivs
loop
outsb
bnd
mov
dec
inc
add
mov
repz
adc
fwait
inc
pop
or
aam
outsl
mov
or
dec
and
sub
push
out
inc
jne
mov
pop
jnp
sub
out
movsl
dec
jg
mov
int3
ret
push
mull
js
in
mov
ret
mov
sbb
imul
aad
xlat
lcall
push
mov
dec
mov
pop
out
adc
sbb
jnp
test
jge
nop
xchg
lea
push
daa
addr16
dec
aam
push
sub
add
fmull
mov
push
mov
xchg
pop
rorl
cmpsb
test
mov
or
imul
and
enter
push
mov
add
mov
rcrb
lret
sub
shrl
lods
dec
arpl
inc
jns
lock
lds
inc
test
test
lea
sub
enter
push
mov
scas
negl
sub
add
cmpsl
orb
nop
xchg
enter
cs
in
cltd
mov
frstor
push
test
jbe
fs
adcb
inc
push
rclb
scas
les
mov
xchg
outsl
push
xorl
mov
and
mov
adc
loop
pusha
xor
mov
sub
loopne
mov
shl
inc
jge
iret
pop
inc
jmp
lods
nop
outsb
sub
xchg
repz
stos
cmp
pop
jno
repnz
cmp
mov
sub
mov
lcall
cld
stos
mov
push
mov
into
push
jmp
mov
push
jne
jns
push
mov
sub
cmp
ljmp
mov
xchg
push
cmp
cmpsl
adc
insl
add
into
mov
lret
andb
lea
jnp
fbld
or
aam
je
push
dec
or
fdivrl
mov
int3
rcrb
add
jmp
inc
or
jge
cmp
xchg
mov
aam
cmp
or
mov
inc
leave
mov
je
outsl
mov
jmp
xor
popa
sbb
leave
xchg
add
dec
push
paddw
jb,pn
outsb
dec
xchg
ja
or
shlb
mov
sub
jecxz
sti
fnstcw
inc
js
pop
jne
aas
out
ret
mov
cmc
ja
adc
jg
cltd
je
orb
mov
rcrb
movsl
inc
jmp
movsb
jge
movzbl
jl
dec
clc
xchg
cwtl
rcrl
adc
sub
add
push
xchg
movsb
sbb
shrl
xor
stos
hlt
sub
sbb
sub
sbb
dec
cmp
aas
lods
cmp
nop
push
sbb
sub
ss
cwtl
inc
stos
mov
dec
jb
clc
les
cmc
mov
inc
nop
fwait
inc
int
and
add
and
or
add
aad
js
cli
pop
cli
orb
js
sahf
or
loopne
mov
cmpsb
out
outsl
fstps
arpl
aaa
std
mov
popf
imul
xchg
inc
enter
and
into
sar
xor
pshufw
push
lret
test
rcrb
arpl
add
inc
div
mov
iret
lea
test
fistpll
imul
xor
inc
outsb
test
repz
add
daa
cltd
insb
adc
jp
push
popf
pop
mov
fmuls
gs
and
mov
std
repnz
mov
fidivs
fimull
sbb
inc
sbb
sbb
sub
and
mov
push
and
pop
popa
push
lea
mov
dec
push
fsubrs
jl
lcall
ljmp
xor
je
pop
pop
es
cmovnp
xchg
ret
mov
negb
mov
stos
insb
and
adcl
outsl
sbb
sbb
jp
in
lret
pop
mov
sbb
outsb
cmpsl
sbb
ret
icebp
cmpsl
hlt
pop
popa
xchg
mov
out
cmc
inc
xchg
out
sbb
fisubs
cs
and
loopne
loope
iret
cld
cli
pop
push
and
or
add
pop
sbbl
ja
lock
faddl
mul
ljmp
push
js
mov
loopne
sar
test
loopne
fiaddl
call
inc
mov
shll
sub
push
repz
jnp
xor
stos
cmp
andl
pushf
jg
pop
xchg
repz
cltd
xchg
in
push
adc
jle
fldl
in
and
daa
jae,pn
sarb
bound
mov
dec
push
push
mov
in
add
pusha
lret
ljmp
fldl
sbb
sbb
sub
rclb
jp
pushf
inc
stos
das
sub
enter
lret
xchg
and
scas
data16
std
scas
sarb
lret
dec
mov
adc
jmp
scas
sub
push
dec
movsl
fisttps
mov
clc
and
test
ss
stc
in
dec
cmpsl
inc
aam
icebp
add
jg
cmp
sbb
sbb
mov
out
jno
or
push
imul
int3
adc
dec
mulb
jp
cmp
pusha
push
cmp
repz
cmp
mov
xchg
add
movsl
pop
pop
sub
imul
jle
call
bound
mov
dec
cmpl
enter
insb
imul
out
fbstp
les
decb
pushf
sbb
pushf
inc
into
xchg
pop
sbb
jo
roll
movsb
pop
mov
cmp
lock
push
bound
testb
xchg
dec
ret
sub
or
xchg
mov
or
mov
mov
mov
sub
fimuls
mov
std
jo
insl
lods
cmpsl
jecxz
nop
mov
ret
jae
dec
loop
and
lahf
inc
pop
mov
jne
adc
stos
cmp
es
or
das
outsl
mov
sbb
sti
mov
aas
ds
pop
test
pop
adc
out
mov
insb
dec
or
dec
aam
push
pop
sub
repz
add
adc
enter
insb
test
jp
lea
push
dec
mov
into
xchg
mov
or
daa
lcall
inc
xlat
subb
scas
scas
pushf
push
and
mov
and
out
jmp
or
fmuls
mov
or
rcl
pop
shll
es
push
cmpsl
mov
or
pop
lahf
fcomps
int3
testb
mov
scas
mov
stos
into
lock
shlb
lret
scas
add
scas
jecxz
icebp
bound
push
nop
aam
cli
sub
sbb
mov
in
push
aas
pop
das
cmp
jmp
lock
sub
dec
jge
outsb
add
loopne
mov
push
push
mov
mov
pop
mov
enter
popf
or
adc
stos
pop
push
cltd
adc
dec
bound
sub
hlt
adc
into
push
inc
cmp
or
jnp
push
dec
cli
popa
sub
enter
aad
xchg
xchg
mov
stos
fdivs
cmp
outsl
cld
xchg
xchg
arpl
sahf
mov
out
nop
es
ja
inc
dec
data16
xchg
push
cld
jge
test
sbb
dec
jnp
hlt
cmp
push
add
ds
scas
cltd
add
movsb
push
inc
push
insb
fisubrs
out
enter
xchg
rcrb
mov
movsb
sbb
pop
xor
sub
insl
pop
out
dec
cmp
jno
xchg
mov
stos
mov
pop
dec
repz
sub
mov
lods
fmuls
test
inc
das
sahf
cmp
jg
out
pushf
or
ret
jb
cs
adc
pop
out
lret
shlb
sbb
movsb
mov
xchg
xor
or
inc
inc
push
jne
cmp
inc
xchg
shl
sbb
ljmp
test
std
rcrl
popf
subl
xchg
int
xor
pop
fidivs
xor
dec
xchg
jno
and
mov
fldl
xorb
movsl
pop
outsl
out
sbb
orl
pop
fadd
and
or
adcb
in
aas
mov
icebp
ss
movsl
sti
js
lahf
add
insb
mov
mov
jbe
xor
fbld
fdivs
ja
js
mov
call
and
adc
mov
cmp
ss
cmpsl
adc
inc
sbb
shlb
xchg
xchg
sti
cmpb
test
jns
jbe
xchg
dec
cmc
imul
inc
sub
lea
sbb
or
ja
sub
jmp
in
iret
cmpsb
cmp
outsl
rcr
sarl
fbld
test
and
popf
clc
xchg
cli
xchg
mov
out
pop
or
pop
xchg
pop
push
clc
jg
inc
rorb
dec
push
out
cmp
adcl
mov
lahf
aad
pop
stos
je
jae
sahf
jmp
push
movsl
inc
imul
xor
loop
jno
nop
sbb
insb
repz
push
aas
or
jl
cli
adc
mov
mov
pusha
cmp
mov
mov
mov
push
push
stc
bound
jbe
iret
aaa
bound
lret
adc
dec
xchg
scas
lret
and
or
in
sbb
ja
push
pop
pop
mov
push
jg
scas
xchg
adc
adc
shl
stmxcsr
cmp
push
sub
ds
fildll
and
popf
adc
hlt
sbb
test
fs
loope
mov
or
bound
cs
imul
popa
add
adc
fistps
enter
ljmp
cmpsb
jg
cmp
lods
in
jnp
sbb
call
sbb
aam
push
bound
sbb
dec
fwait
add
sbb
xchg
dec
cmpsb
mov
in
cli
aam
rolb
negl
test
xchg
enter
movsb
sub
mov
sbb
ficoml
sbb
test
adc
xor
push
sbb
mov
jge
cmp
push
movsl
mov
or
inc
ret
xchg
xchg
fiadds
ss
or
outsl
fcoml
mov
shl
pop
cmc
rol
pop
dec
jmp
xchg
cmp
lds
xor
inc
mov
add
imul
jecxz
bound
push
or
pop
aas
and
mov
mov
cmp
pop
or
cld
test
jecxz
dec
sub
mov
adc
movsb
xor
push
cli
orl
jmp
mov
fyl2xp1
subl
mov
in
and
pop
cmc
in
cltd
lock
xchg
xor
inc
inc
push
push
cltd
xchg
test
lock
fisttpl
sbb
add
mull
jmp
adc
push
pop
test
fimull
fs
inc
mov
sub
in
xchg
sub
xlat
sub
push
sarb
pop
imul
in
adc
int3
aad
push
out
repnz
jmp
sbb
std
mov
mov
nop
ret
mov
shl
mov
clc
ljmp
pop
add
mov
mov
lds
lds
ficompl
cmp
dec
jb
loop
nop
fwait
push
arpl
adc
icebp
bound
stos
pop
cmpsb
test
fwait
loope
orl
addb
pop
fnstcw
mov
inc
sub
imul
aad
add
pop
popa
jge
xchg
pop
mov
aaa
ffreep
add
cmp
outsl
scas
daa
or
mov
ds
jnp
add
mov
mov
les
test
fwait
scas
test
test
pop
pop
add
call
inc
shll
inc
outsb
in
jge
xor
push
push
sbb
jmp
repnz
pushf
or
dec
into
jns
dec
mov
and
xchg
sbb
in
mov
loopne
ljmp
xor
add
aad
fstps
mov
dec
ljmp
xor
and
test
adc
cli
inc
in
cmp
rcrl
mov
dec
lahf
mov
lock
sbb
scas
mov
xchg
cld
insb
ljmp
pop
pop
into
jno
jmp
mov
movsl
sub
dec
xorb
sbb
push
jmp
cmp
push
sbb
adc
add
jl
in
bound
inc
push
rcl
sbb
dec
add
xchg
hlt
jg
gs
push
mov
popa
ret
push
js
sub
sahf
vsubsd
jnp
insb
lret
jl
push
mov
scas
shrb
jns
mulb
push
je
addl
and
xchg
xchg
lret
sub
divl
stos
paddusw
or
cmp
pop
imul
pop
xor
jl
fists
shll
and
xor
adc
inc
out
or
jae
fildll
adc
loopne
cmp
inc
mov
push
push
xorb
addb
adc
dec
es
je
stos
jno
xor
out
sti
fwait
xchg
pop
cmp
bnd
cli
add
enter
jns
cmp
add
pop
lods
icebp
out
hlt
mov
jge
xchg
popf
test
dec
ret
jg
inc
adc
inc
outsl
cwtl
push
pop
xchg
arpl
int3
and
mov
fs
fcoml
jbe
mov
int
daa
aas
pusha
inc
mov
dec
jmp
xlat
mov
aas
test
insl
push
mov
pop
jecxz
ljmp
jbe
je
sub
das
cmp
cli
push
adc
es
or
idivb
test
mov
fldl
popa
lds
xor
jbe
sbb
lds
push
das
mov
pop
sbb
cmpsb
dec
jp
pop
mov
push
lcall
push
jp
sub
cvtps2pi
test
xchg
dec
sbb
imul
add
call
arpl
cli
pusha
xchg
fcoms
mov
push
and
push
into
enter
pop
add
das
cs
mov
pop
out
loope
aam
xchg
outsl
out
sbb
mov
loope
fninit
push
cmc
out
and
cmp
and
sbb
pop
pop
aam
mov
scas
xchg
inc
movsb
pop
mov
in
mov
add
cmp
sbb
jg
lock
add
jmp
xor
mov
push
or
and
ret
inc
xor
in
adc
scas
jmp
pop
into
push
add
mov
mov
fsubrl
fildll
stos
out
lfs
scas
sub
or
nop
sub
and
in
sbb
arpl
stos
pop
push
jg
jnp
ds
sarb
sbb
xor
dec
cld
pop
in
pop
adc
test
movb
dec
les
inc
fbstp
jmp
outsb
xchg
fstl
js
inc
nop
pop
dec
mov
mov
push
js
adc
jg
inc
test
mov
adc
loope
pop
mov
xchg
push
cmp
mov
jo
and
inc
or
sub
aas
gs
incb
es
out
orl
int3
xor
and
out
sub
mov
xor
call
addl
sub
inc
hlt
add
in
sahf
push
leave
and
std
aaa
pop
mov
inc
into
je
in
adc
ss
test
pop
add
dec
out
or
mov
jmp
add
sub
pop
add
clc
jae
std
or
jno
rcr
sbb
inc
dec
dec
xor
mov
mov
cmp
and
adc
out
adcb
push
push
or
inc
add
mov
cs
ret
shll
in
cmp
cltd
mov
inc
push
sbb
rorl
daa
inc
jle
sti
mov
cmp
into
cmp
pop
icebp
xchg
in
sbb
mov
pushf
in
push
ljmp
mov
js
scas
sarb
popf
or
push
aad
or
outsb
arpl
pop
cmp
push
mov
xor
fcmovne
mov
icebp
gs
push
out
sbb
lods
jp
pop
insl
mov
adc
loop
in
mov
xor
inc
ljmp
repnz
xor
inc
add
outsb
jnp
hlt
inc
sti
sbb
sbb
pushf
aaa
mov
sub
pusha
bound
es
and
pop
jo
push
popa
mov
dec
mov
popf
adc
jecxz
stos
es
nop
jnp
jne
pop
stos
or
imul
cld
test
pop
and
scas
cmp
andb
xlat
fcmovu
push
sub
in
cmpb
mov
mov
movsl
push
sub
jo
pop
sbb
addr16
cmp
bound
psubusw
or
ficomps
cmpsb
push
les
mov
aad
ds
xor
xchg
rclb
sub
lds
scas
loope
cmp
test
inc
mov
fdivrs
or
pop
repz
imul
or
icebp
add
mov
adc
jecxz
lods
loopne
mov
loope
sub
mov
cmpsb
and
dec
inc
pop
xor
mov
or
xchg
push
push
pop
push
push
or
sub
fdivp
stos
jbe
ret
adc
jl
xchg
xor
iret
jne
add
sub
leave
inc
pushf
push
cmp
idiv
jno
outsl
into
out
imul
pop
sub
mov
mov
lds
enter
fwait
push
popa
sbb
xchg
add
inc
inc
xchg
jne
add
and
mov
je
decb
sub
in
mov
pop
and
jle
loop
outsb
xchg
fnstcw
adc
out
rorb
dec
dec
icebp
nop
sarb
daa
mov
sub
push
cmp
sub
ffreep
jbe
fiadds
sbb
pusha
cmp
mov
out
push
push
in
ret
addl
mov
push
inc
and
dec
ljmp
mov
add
popf
out
jge
jbe
mov
sbb
sti
dec
xor
adc
cmpsb
int
fs
movl
subl
or
jae
repnz
fcmovnu
xor
jl
cmp
popa
xor
mov
movsb
imul
shlb
push
loope
cmp
inc
cli
movsl
test
stos
into
mov
xor
sub
mov
sbb
mov
jbe
lds
mov
enter
mov
int
nop
mov
push
fmull
mov
cmp
xor
adc
test
or
mov
mov
lea
mov
sbb
inc
fwait
push
lods
push
leave
dec
adc
lods
inc
or
nop
xchg
jle
divb
imul
mov
stos
sub
jg
popa
mov
push
push
cmp
ret
outsb
sahf
repz
push
jae
clc
popl
xchg
or
dec
inc
mov
push
add
cmpsl
sbb
add
xorb
mov
push
lods
outsl
jbe
dec
dec
js
fcomip
test
add
lock
loopne
mov
aad
int3
ljmp
in
sbb
push
fistpll
push
push
xchg
lret
loope
and
cmp
push
arpl
push
push
cmp
inc
pop
sub
sub
notb
fisttpl
mov
lods
jb
cmpsl
nop
cmp
adc
insb
mov
mov
jb
fs
jl
lods
lahf
pop
mulb
adc
ret
testl
mov
pop
jecxz
negl
xchg
add
pop
bound
push
add
int
aad
ljmp
sbb
inc
arpl
insl
lahf
fs
iret
fwait
pop
cwtl
mov
daa
mov
jae
sbb
and
push
xchg
test
dec
inc
xchg
dec
lcall
xor
mov
out
mov
sub
rcll
mov
push
inc
mov
hlt
lret
mov
mov
mov
das
pop
push
adc
rol
mov
ljmp
xabort
add
repz
loop
and
arpl
cmp
in
lods
xor
mov
dec
ss
cmc
movsb
jmp
ror
sub
sub
xorb
jmp
and
mov
addl
xchg
xchg
jp
bswap
or
or
pop
inc
incb
jp
out
dec
fdivrp
mov
loopne
push
push
loopne
pushf
cmp
push
add
push
dec
adc
rorb
dec
mov
sti
mov
std
insb
lock
loop
adc
adc
sub
dec
pusha
push
push
into
rorb
scas
jb
in
aad
adc
push
add
sbb
out
bound
sub
leave
js
pushf
enter
xchg
mov
push
clc
cmp
xor
sbb
mov
fwait
ljmp
jne
movsl
insl
pop
push
rol
lcall
fdivrl
fnstsw
hlt
hlt
adc
sub
pushf
inc
fidivs
je
jge
nop
push
or
xchg
fdivrl
movsl
mov
lcall
pop
lods
or
dec
iret
jno
xchg
adcl
fsubp
loope
int
fcomps
fisttps
test
adc
adcl
mov
movsl
dec
loopne
jmp
addr16
nop
bound
popf
pop
js
jl
fnstsw
iret
mov
push
xchg
inc
push
mov
popa
xor
push
mov
inc
ret
dec
repz
out
and
jmp
aaa
scas
lret
mov
call
pop
sahf
and
popa
cltd
sub
in
fiaddl
add
bound
nop
add
lcall
fcmovbe
or
jo
js
icebp
push
add
dec
mov
aad
cmp
lcall
cwtl
adc
inc
sti
mov
repz
mov
aam
and
call
xlat
sub
movsl
repnz
aam
dec
sub
dec
xchg
dec
push
xor
mov
jo
int3
popa
cwtl
cmpsl
rcll
pop
lods
loop
stos
dec
mov
jg
ja
les
adc
xor
mov
sti
int3
fdivrl
xlat
push
int
icebp
sub
mov
jo
sub
add
inc
out
xchg
cmp
aaa
mov
test
add
in
inc
call
je
pop
test
movsb
push
xor
xchg
xchg
sbbl
fcmove
xchg
push
out
dec
inc
insb
loop
std
push
jb
insb
rclb
jno
adc
testb
pusha
js
jge,pt
add
sbb
mov
jecxz
repz
dec
data16
rorb
jae
xorl
xchg
pop
jne
xchg
dec
mov
sbb
cmp
push
mov
call
int3
dec
aaa
add
sub
fildll
inc
inc
inc
adc
xchg
jne
test
ljmp
or
out
pop
js
fs
pop
ljmp
mov
mov
jns
mov
fwait
cmpsl
jbe
sarl
outsl
addl
sub
fcoml
adc
cli
sbb
push
and
std
sbb
cmp
mov
add
dec
sbb
xor
jmp
pop
jb
repz
cmp
xor
mov
nop
push
lock
fistpl
in
sarb
ljmp
jns
hlt
cmp
lods
xor
insl
adc
arpl
pop
mov
cmp
jle
xor
es
cmpb
das
sahf
orb
aam
lret
sub
pop
loope
movsb
out
lods
sbb
inc
cmp
mov
push
or
imul
lods
push
ret
push
mov
ja
fisttpl
lds
sti
stos
inc
pop
repnz
pushf
push
sub
mov
cmpsb
mov
cmp
push
pop
in
into
xchg
popl
iret
sbb
imul
xchg
add
repz
ret
mov
pop
fcomip
loop
inc
imul
or
fwait
inc
cmpl
data16
outsl
les
mov
or
sub
vsqrtsd
dec
cmp
arpl
rolb
cmp
adc
call
pop
push
ret
sub
xchg
cmp
mov
gs
adc
cmp
adcb
push
xchg
or
dec
in
arpl
loope
mov
ret
and
fiadds
sbb
fisttpl
sub
call
orb
pop
addr16
subb
and
rcpps
aaa
fisubrl
sbb
aam
aam
xchg
sahf
movsl
mov
loopne
and
into
jne
repz
pop
hlt
jp
sub
test
test
push
cmp
ja
xor
call
push
add
in
xchg
and
in
mov
cmp
shl
add
jle
or
insl
iret
cs
mov
arpl
shr
mov
mov
repnz
dec
cmp
outsl
out
repnz
jecxz
add
sub
test
sbb
fmulp
dec
add
pop
out
in
loopne
stos
dec
push
pop
imul
lret
jp
mov
add
xchg
xchg
push
push
mov
fldenv
sti
pusha
sahf
std
mov
or
stos
xor
into
cmp
out
inc
movsl
mov
aaa
stc
mov
mov
lahf
pushf
pop
xchg
gs
push
lcall
pop
xor
out
and
ds
scas
pop
jg
cwtl
xor
add
lods
lret
pop
addr16
sarb
sti
mov
push
dec
pop
dec
xlat
lods
aam
aas
dec
decl
loope
and
xchg
cltd
mov
mov
add
aas
inc
in
pop
mov
xor
pop
mov
adcl
stc
enter
ds
ljmp
push
mov
pop
push
fmull
cwtl
into
and
popa
insb
jbe
cmp
mov
push
adc
cli
fidivrl
sbb
ljmp
cmp
lcall
cmpsb
lods
sbb
push
fmulp
leave
es
repz
xchg
andl
out
aaa
sub
jecxz
mov
xchg
lock
iret
ret
push
ss
std
loope
lock
test
sub
lret
fistpll
insl
sar
and
rcl
jno
lods
insl
mov
xchg
add
sub
add
adc
push
mov
inc
add
inc
adc
jle
mov
ficoml
aad
int
test
sub
ret
out
mov
decb
jo
cld
pop
jg
and
aaa
loopne
sbb
dec
inc
sbb
decb
je
mov
nop
mov
pusha
lret
mov
jl
lods
or
ficoms
pushf
add
pusha
xchg
add
xchg
gs
push
dec
nop
jmp
bound
or
pop
or
rolb
mov
imul
mov
pusha
dec
int
cmp
mov
pusha
push
sub
jge
dec
push
cld
loope
xor
not
jne
xor
jl
inc
sbb
adc
jmp
mov
dec
xchg
cmc
mov
or
ficomps
shl
mov
cli
lock
mov
lret
or
inc
icebp
push
aad
clc
and
enter
hlt
xchg
push
lret
loopne
rolb
lret
sub
dec
lea
fisubs
cltd
xor
outsb
mov
sbb
xchg
loop
out
outsl
mov
mov
insb
es
lret
movsl
dec
pop
nop
ret
mov
lods
push
loope
xor
adc
mov
je
and
jecxz
jns
gs
add
pop
xor
subb
repz
jb
jae
aaa
in
xor
mov
mov
test
jecxz
test
xor
imul
jae
mov
mov
sbb
push
mov
adc
rcl
adc
push
sbb
addr16
mov
fimull
popa
pushf
flds
pushf
push
xchg
lcall
mov
pop
fisttps
mov
lods
add
xorb
cmp
xor
mov
in
dec
je
pop
leave
dec
rorb
xor
xchg
mov
pop
cmpsb
jo
push
inc
mov
in
jl
je
mov
loopne
cmc
enter
aam
push
or
lea
in
sahf
aaa
nop
cmp
jmp
or
frstor
mov
loop
push
sbb
push
push
mov
je
fwait
push
out
sub
sbb
lods
ljmp
adc
cmc
aaa
jae
mov
filds
xor
mov
xchg
mov
or
hlt
cltd
dec
dec
mov
mov
xor
in
shll
hlt
cmp
aad
or
xchg
or
pop
test
popf
mov
ja
rorl
js
inc
inc
into
xchg
mov
call
les
cld
test
lock
mov
xor
mov
sub
test
mov
sub
fsubrl
push
fcomps
dec
in
fs
add
jb
bound
movsl
lods
and
mov
movsl
and
notb
cltd
mov
push
or
dec
aaa
push
push
lret
sub
test
dec
jge
clc
pop
pop
sub
icebp
lea
cs
push
add
jno
push
test
mov
push
jge
pop
rcr
adc
int3
cld
ficompl
push
dec
out
jno
mov
push
aas
stos
xchg
in
enter
mov
mov
lret
lret
pop
add
xor
fimull
mov
sbb
out
inc
mov
movsl
adc
jne
hlt
jmp
aad
stos
pop
xchg
das
cwtl
popf
leave
sbb
mov
fidivl
pop
xchg
pushf
and
and
outsl
adc
out
icebp
xchg
lret
cld
push
mov
sbb
push
xchg
imul
sarb
es
popf
inc
orb
xor
fcmovnb
in
adc
mov
pop
xor
fwait
inc
clc
dec
inc
popa
adc
aaa
push
or
sahf
sbb
push
and
repz
incl
enter
sbb
fidivs
add
int3
sub
icebp
inc
inc
arpl
sbb
inc
cltd
cmc
cmp
insb
mov
test
lret
mov
movsb
jmp
jns
mov
dec
and
dec
movsb
jge
add
insl
cmp
cmp
movsb
push
inc
and
shll
out
inc
arpl
pushf
and
rcl
push
cmpsl
popa
movsl
aaa
jge
jns
fdivl
sbb
mov
add
xchg
pop
int3
into
daa
je
fdivl
or
arpl
jle
hlt
ficompl
out
pusha
lcall
sbb
or
push
cld
movsb
ret
cs
xchg
imul
xor
xchg
fxch
int3
inc
and
rol
mov
and
mov
js
gs
xor
cmpsb
mov
int
jno
rclb
mov
jmp
enter
mov
push
inc
int
dec
xchg
dec
pop
jg
push
add
js
adc
adc
movsl
xor
popf
rolb
pop
sahf
dec
dec
inc
and
pop
sub
std
mov
repnz
fdivrs
lods
adc
test
jbe
ffree
faddl
pop
movsb
mov
adc
jbe
sbb
icebp
and
sub
lcall
xor
cmp
gs
addl
ss
inc
cli
mov
scas
inc
jmp
cmp
jo
mov
jecxz
out
fdivs
sbbl
xor
insl
jecxz
and
adc
sbb
cmpsl
sbb
pop
mov
push
add
das
inc
das
outsb
push
shl
sub
xchg
xchg
fmul
add
xchg
mov
faddl
into
ret
or
cmc
rcll
inc
jg
xchg
inc
xor
ja
and
jecxz
mov
mov
push
dec
stc
into
rcll
mov
cmp
cmc
fstps
rorl
or
fisubs
loope
pop
mov
xor
jo
shrb
adc
or
pop
and
sub
dec
test
aad
add
out
cli
pop
repnz
jb
inc
xor
jle
dec
pop
roll
stc
shll
inc
push
xor
add
mov
sti
dec
push
scas
push
jne
dec
test
testl
fwait
mov
pop
cmp
sub
and
jg
and
int3
pop
out
cmpsl
adc
inc
push
fisttpl
adc
mov
call
fcoml
xchg
jge
pop
fisttps
faddl
mov
shlb
ss
data16
fs
pusha
pop
and
ja
out
push
jb
call
outsb
imul
inc
pop
test
mov
adc
ret
mov
int
dec
xor
sbb
add
pusha
mov
sahf
repnz
mov
add
fdivrs
mov
aaa
jb
push
jnp
cli
call
sub
or
ret
jecxz
cmc
ret
sti
int3
push
pop
or
push
sahf
xchg
aas
xlat
jmp
xor
stos
subb
sub
mov
mov
lods
inc
outsb
scas
popa
lret
lds
adc
adc
add
fsts
xchg
popfw
loopne
scas
push
or
adc
shrb
dec
adc
adc
or
adc
pop
std
je
jb
cmp
add
mov
jb
sub
out
push
dec
push
lret
scas
call
xor
mov
mov
fisubrs
adc
cmpsl
add
push
adc
int
push
ficompl
daa
dec
jl
xchg
jmp
roll
pop
mov
mov
cmp
mov
iret
mov
adc
dec
sub
mov
int3
mov
cmp
adc
push
pop
pop
mov
mulb
out
repz
push
mov
bound
cltd
and
dec
mov
mov
adc
jo
pushf
mov
push
mov
incb
dec
mov
and
cld
xorl
sub
sub
pop
ret
lock
xchg
and
mov
mov
aas
repnz
sub
or
insl
inc
scas
daa
insb
inc
insb
imulb
test
lods
hlt
push
sarb
adc
outsl
faddl
mov
repnz
jb
std
push
or
mov
xchg
inc
lahf
push
xchg
mov
into
lea
shrd
xor
loopne
sbb
jg
jnp
jbe
add
inc
jp
xchg
xor
jo
mov
pop
push
dec
das
inc
pop
or
shl
jno
inc
push
push
out
call
mov
loopne
dec
outsl
cs
lods
jl
dec
mov
mov
fsubrs
fnstcw
test
filds
jmp
movsl
inc
cmp
jo
jge
testl
mov
sbb
pushf
jl
add
pop
pop
sbb
add
stos
or
mov
add
xchg
out
jb
adc
pop
out
mov
jge
test
sub
dec
mov
int3
cmp
pop
les
jns
aaa
outsl
stos
mov
sub
or
negb
xor
mov
cli
mov
jmp
push
sub
ds
mov
add
jp
inc
and
and
shll
cmp
faddl
rcl
xor
jecxz
jno
jmp
mov
lret
mov
cmp
cmpsl
pusha
mov
push
and
sub
mov
sub
lahf
xor
sbb
stos
pushf
adc
pop
fidivs
out
cs
jle
jae
xor
or
xchg
mov
ja
repnz
cmp
push
enter
test
mov
push
mov
in
mov
and
inc
jge
inc
addl
cmpsb
dec
fcomps
std
xabort
imul
aas
dec
jno
rorl
and
enter
imul
pop
pop
jl
out
idivl
ror
lret
lock
insb
xlat
cwtl
sbb
adc
and
es
iret
and
push
xor
ds
loope
filds
cltd
xchg
xchg
loopne
add
jle
or
xor
pop
mov
lret
sub
sbb
and
lods
dec
iret
inc
or
test
dec
mov
int3
xor
push
mov
pop
les
movsl
sbb
test
pop
jecxz
lea
stc
dec
add
xchg
mull
mov
jo
rclb
shrl
das
rclb
sbb
loope
ja
enter
test
faddp
or
idivl
ds
cmp
sub
inc
pop
pop
ret
jle
call
pop
fnsave
das
and
mov
mov
movsl
lahf
mov
mov
hlt
xor
or
add
hlt
test
push
cmpsl
push
sub
jge
dec
xchg
cli
dec
ss
loop
xchg
pop
inc
mov
push
scas
test
xchg
loope
fisubs
repz
cwtl
enter
lahf
flds
xor
mov
in
outsb
addb
sbb
pusha
ja
or
int
ror
mov
xchg
icebp
and
or
mov
ret
jl
addl
cmpsl
jge
sbbb
sbb
pop
adc
lret
lret
or
lods
ret
loop
popa
out
jno
test
ds
dec
sbb
cmp
inc
inc
mov
push
xor
adc
push
inc
push
sti
int
test
je
jo
xchg
push
sub
dec
push
movsl
js
push
nop
push
lahf
arpl
rcll
push
nop
push
xchg
movsb
pop
loopne
pop
push
loopne
clc
lret
cmp
inc
andnps
and
movsb
or
out
ss
jno
jno
or
aad
pushf
mov
pop
das
test
sbb
or
dec
dec
or
xchg
cmp
lods
aas
cmpsl
loope
int
jae
mov
negl
testb
sub
popf
je
call
sub
push
loopne
push
pop
outsb
sbb
jle
dec
mov
mov
xchg
lock
jne
add
fcomps
daa
gs
cltd
add
mov
add
bound
sbb
andb
mov
shlb
jns
push
push
jnp
mov
pop
stos
mov
cmp
mov
mov
das
scas
pop
pop
aaa
jle
or
std
jp
notl
fidivl
daa
aas
std
daa
mov
push
dec
mov
out
ljmp
imull
xor
mov
imull
loop
and
xchg
xchg
call
pushf
jg
push
mov
jg,pt
scas
dec
sub
mov
daa
aas
shll
stc
mov
sti
sbb
pop
lods
jl
inc
push
stos
lock
xchg
adc
inc
or
popf
shrb
outsl
mov
push
xor
lcall
mov
roll
iret
stos
pop
aaa
pusha
mov
mov
pop
shlb
outsb
fs
adc
jl
cld
fsubp
inc
popf
cmp
jg
inc
sub
xlat
rorl
movsb
lcall
mov
sbb
movsb
dec
mov
mov
ror
jl
xchg
mov
pop
push
lods
movsb
jge
shrl
out
out
sahf
xchg
jmp
jo
mov
loope
xor
sbb
cmpsl
nop
je
cli
cwtl
mov
cli
adc
out
push
loope
mov
fs
push
insb
and
pop
sub
outsb
int
inc
pop
test
fwait
sub
cli
ja
and
aas
and
int3
mov
addr16
push
lcall
cs
ljmp
insb
pop
lods
inc
loop
sbb
pop
jle
adc
mov
add
add
lea
rclb
popa
aam
add
insb
sti
mov
imul
sub
jmp
aaa
lds
lods
xor
push
rcr
dec
xchg
int3
cmp
jnp
enter
cld
lods
pop
rclb
sbb
jl
pop
mov
mov
jne
rolb
stc
cmp
rcrl
or
out
sbb
inc
movsl
les
dec
xor
je
push
insb
jbe
ret
pushf
andb
testb
movsl
rcrl
adc
fsubrs
push
xchg
fidivrl
mov
enter
pop
push
adc
xor
addr16
mov
dec
push
or
orb
inc
add
std
dec
lods
inc
ret
and
fcompl
jb
loopne
fsubp
es
sbb
aas
ret
pop
jg
dec
rclb
push
std
jae
out
pop
mov
clc
sub
pushl
pop
pop
sub
cmp
insb
xchg
push
jmp
je
jns
xchg
pop
stos
mov
movl
outsl
imul
cmp
and
push
mov
xor
daa
ljmp
mov
mov
mov
mov
mov
ja
insb
daa
subl
push
rcrb
pop
add
pop
pop
cli
mov
mov
mov
xchg
lea
pop
das
push
cmp
inc
jno
xchg
cmp
xor
sti
mov
push
jbe
sub
jns
jl
push
push
icebp
fldcw
lahf
lret
mov
mov
in
dec
add
dec
arpl
or
dec
mov
pop
push
std
rorl
xchg
mov
adc
std
pusha
dec
mov
out
aas
jnp
xor
or
xlat
dec
sub
pop
das
mov
sbb
daa
jne
test
jno
ret
push
enter
out
jge
or
push
int
add
mov
push
inc
jg
dec
xor
in
loop
xchg
jae
fadds
stc
xchg
test
xor
rol
add
sub
mov
cmc
lahf
cmc
stos
sub
mov
add
mov
adc
fildl
mov
inc
ss
xchg
leave
mov
dec
and
jb
repnz
jp
ret
dec
or
test
adc
mov
inc
dec
ret
pushf
movsb
sti
sti
jl
lods
dec
sub
mov
cmc
cmp
mov
inc
cmp
fimull
das
sti
into
mov
mov
into
sub
jge
adc
mov
in
mov
xor
push
enter
sub
dec
pop
sbb
pop
and
hlt
gs
mov
iret
sbb
jns
mov
lahf
arpl
iret
adc
adc
call
and
inc
cs
pop
push
push
xor
cmpsb
clc
cmp
xchg
aas
push
lock
inc
movsl
mov
fildl
fucomp
and
scas
push
pusha
pushf
xchg
inc
sbb
ds
leave
les
pop
repz
movsl
into
mov
gs
stos
and
mov
or
dec
adc
mov
mov
jg
hlt
test
lea
in
push
dec
mov
out
mov
mov
mov
inc
xor
adc
mov
pop
repz
test
not
mov
lret
adc
mov
pop
mov
jae
repnz
ret
aam
outsl
mov
mov
add
push
cmp
iret
mov
je
ljmp
insb
loope
mov
mov
pop
sbb
into
mov
movsl
cmp
jnp
testb
add
adc
std
xchg
pop
arpl
push
xor
aad
cs
arpl
xor
xlat
in
cmp
fcmovnu
ficomps
cmp
leave
xchg
xchg
push
and
xor
inc
pop
insl
sarl
lret
idivb
dec
mov
cmp
nop
iret
rcrb
mov
mov
aam
mov
mov
dec
push
insl
fsubrp
fdivs
hlt
rclb
jno
mov
cmp
das
cwtl
je
jbe
or
xor
mov
sub
inc
out
lcall
movsb
xor
cld
outsb
inc
jle
cmp
push
pop
cli
cltd
adc
add
dec
cmp
jg
imul
jne
dec
push
rcrl
add
sti
stos
cli
scas
push
hlt
seta
fcomp
sbbb
jno
push
add
add
ret
sbb
xor
loope
stos
das
gs
sbb
jns
out
popa
pop
iret
lahf
pop
test
cmp
test
push
and
mov
lret
cmpsl
test
jo
jl
dec
add
fs
popl
fists
pop
mov
pop
dec
cmp
pop
loop
xchg
stc
aaa
push
jge
sbb
mov
pop
mov
xor
popf
mov
aaa
adc
ret
mov
mov
lcall
int
or
bound
cmp
inc
cmp
dec
mov
mov
loop
pop
or
push
test
in
jg
clc
addr16
xchg
mov
adc
xchg
mov
xor
sub
and
ljmp
test
movsb
movsl
rorb
inc
sbb
ljmp
push
jae
roll
cmp
stos
mov
or
mov
pusha
pop
iret
rolb
xor
xor
push
cld
mov
insb
les
loop
xchg
xor
mov
aas
fsubrl
ja
ja
outsb
sub
or
sbb
xor
mov
mov
icebp
adc
inc
insl
mov
cltd
push
out
xchg
or
adc
mov
push
fadd
push
int
push
mov
jecxz
decb
data16
push
push
cmp
sbb
dec
and
jno
mov
cs
rcrb
pop
cmp
jge
pop
pop
lea
and
mov
fisubs
cmp
xor
int
sahf
jns
jbe
sub
leave
sub
les
sbb
sbb
shld
mov
lds
sbb
cmp
lret
mov
icebp
pushf
je
out
sbb
subl
sbb
add
jb
jae
repz
mov
cmpb
mov
push
and
stos
jne
dec
xchg
fnstenv
sbb
dec
das
ss
loopne
cs
cmp
xor
loope
and
rcr
sbb
test
inc
test
cmc
xorl
out
out
mov
shl
mov
sbb
add
pop
mov
test
lock
fcomip
and
das
cmp
pop
pop
adc
mov
inc
jg
ja
inc
mov
filds
mov
dec
xchg
xchg
int3
sub
pop
add
jge
or
dec
insb
std
das
sbb
mov
jae
cmp
enter
jno
or
iret
pop
and
xor
lods
xor
jns
stos
lret
ljmp
outsb
test
mov
or
outsb
outsb
xor
fmul
cld
and
xor
inc
cmp
cli
sti
inc
mov
and
jge
sarl
es
icebp
xor
sub
incl
std
sbb
int
ljmp
pushf
neg
pop
lret
inc
fcomps
fisubl
sbb
pop
push
stos
mov
scas
popa
mov
nop
lcall
aad
jae
inc
rorl
xchg
ja
jno
insb
test
sbb
cmp
sbb
lret
out
icebp
jb
jmp
shr
enter
fcompl
jmp
xchg
imull
lock
outsb
pop
dec
dec
in
jo
adcb
jp
or
cs
jne
jmp
mov
dec
add
negb
in
dec
jmp
push
aaa
add
cmp
mov
sahf
or
pop
aaa
inc
mov
pop
inc
pop
insb
decb
lahf
mov
and
sbb
pop
xlat
mov
fldenv
cmp
ret
push
pushf
push
sbb
xor
sbb
sub
lds
ja
mov
inc
xor
and
xchg
test
jo
or
insl
mov
mov
into
jnp
popf
call
scas
lds
icebp
das
mov
and
out
jge
add
xchg
fnstcw
and
sbb
or
andl
clc
scas
xor
je
push
sub
dec
fwait
sbb
sbb
mov
xchg
and
sub
jle
and
lea
and
sub
add
dec
dec
mov
fs
ljmp
and
ret
loope
gs
pop
jne
mov
test
pop
lret
sbbl
mov
ss
dec
fsubrl
mov
jecxz
cwtl
jl
fmull
push
xchg
cs
popf
cmp
pop
inc
inc
push
aad
dec
dec
loopne
mov
insb
xlat
sbb
test
roll
xor
loop
pop
lret
arpl
loopne
ret
fstps
inc
push
lods
leave
inc
dec
sub
cmp
push
jg
jnp
ret
adc
in
lahf
orl
test
outsl
outsb
dec
pop
bound
push
or
jecxz
es
shlb
data16
jb
test
xchg
dec
aad
xchg
mov
add
call
lea
fidivl
repz
add
testb
push
icebp
jb
jns
scas
cltd
mov
hlt
mov
div
pusha
jb
in
cmp
movsl
insb
dec
call
repz
cmc
lret
mov
sbb
fs
shlb
cmc
out
and
imul
ds
sub
aad
sahf
aas
aaa
jnp
lods
in
dec
sbb
sub
call
adc
sbb
xchg
sbb
inc
sbb
xor
enter
jns
repnz
jb
adc
inc
mov
mov
test
lret
and
gs
insb
mov
aas
or
jno
jns
jle
or
rolb
lcall
addr16
addb
jmp
pop
jmp
cld
mov
cmpsb
insb
xlat
shlb
sub
enter
sbbb
jbe
push
mov
jns
sbb
int3
cmp
dec
jl
cmpsl
dec
fistl
inc
cmc
jo
insb
subb
fdivs
es
test
inc
xor
xchg
or
into
or
jnp
cld
cmp
pop
inc
jnp
lock
jp
mov
push
clc
sub
aam
jp
sub
in
shr
stc
repnz
outsb
lock
test
out
into
lds
add
sarw
cmp
mov
xor
lea
add
in
mov
pop
xor
fnstsw
or
stc
mov
sub
mov
mov
mov
int3
das
lods
mov
mov
inc
std
loope
pop
flds
cmpsb
in
cmpsb
sar
fiadds
lahf
mov
cli
jp
sbb
push
pop
in
cmc
pop
mov
mov
or
outsl
out
inc
insb
push
aad
fistl
or
movsb
sub
test
popa
insb
and
add
xchg
dec
sbb
bound
icebp
xchg
ffree
outsb
lock
shrb
sbb
insl
daa
in
f2xm1
ficoml
les
test
test
jl
insb
or
fldpi
push
jge
jbe
aas
cli
inc
dec
addb
in
sbb
jecxz
xor
fadd
fsubrs
dec
lock
sbb
outsb
push
pop
lods
scas
push
inc
xchg
pop
faddl
bound
pop
ljmp
add
and
jb
icebp
jmp
lods
adc
shl
adc
aas
popf
push
xor
scas
negl
nop
incl
rorl
pop
pop
pushf
and
mov
xor
jecxz
adc
push
outsl
leave
daa
jge
lret
xchg
lock
push
cmp
mov
fadds
imulb
cmp
insl
or
mov
lods
jp
mov
arpl
and
arpl
jge
xchg
cmpsl
sbb
repz
xlat
push
or
aam
sbb
fsubrl
mov
xchg
sbb
fs
xchg
cmp
xchg
push
add
sub
pop
pop
rol
push
test
pop
mov
fs
push
or
js
xchg
jae
cmp
imul
rorb
aad
or
jmp
iret
stc
je
add
jne
mov
dec
mull
orb
add
jo
mov
lock
sbb
or
bound
dec
push
lcall
pop
hlt
mov
rclb
sbb
dec
jmp
mov
sbb
cwtl
lds
xor
pop
enter
loope
mov
mov
mov
faddl
mov
cmpsb
mov
cmp
arpl
pop
cli
loope
mov
int
repnz
push
mov
icebp
es
out
pop
sbb
test
movsb
idivb
pushf
rcll
test
stos
dec
loope
mov
jne
popa
std
enter
cmc
cmp
fstpl
gs
arpl
mov
loop
add
movsl
out
cmp
and
sbb
lret
orl
stos
push
stc
lea
shll
push
push
hlt
sub
outsb
aam
gs
lret
xor
cs
xor
mov
rcrb
pop
jl
pop
imul
add
push
loop
mov
stos
adc
test
std
test
jbe
je
mov
je
ja
sub
add
daa
out
mov
mov
mov
shlb
dec
xor
mov
xchg
jne
hlt
dec
aad
ffree
aam
sahf
dec
push
mov
out
xor
and
push
aad
lret
pop
lcall
mov
outsl
ret
cli
xor
xchg
lcall
add
scas
dec
insl
mov
stos
dec
push
aam
dec
mov
divl
cwtl
jg
or
mov
xor
fs
add
mov
scas
out
mov
inc
out
xchg
mov
and
cmc
push
mov
adc
inc
mov
mov
repz
pusha
je
xor
in
loopew
daa
jge
inc
pop
mov
cmpsl
rcrl
mov
rol
mov
inc
push
fnsave
and
repz
int
mov
mov
and
xor
aaa
or
inc
in
sbb
push
adc
dec
fcmove
in
mov
sbb
cltd
sub
arpl
jnp
lods
cld
test
shll
in
out
push
pop
lea
xor
repnz
sahf
or
xchg
inc
fldl
hlt
mov
pop
push
mov
mov
jno
testb
cli
adc
sbb
xchg
jns
in
adc
and
aad
call
repz
roll
sub
sub
lahf
andl
pop
outsl
xrelease
out
int3
cli
and
inc
mov
sti
xor
out
mov
loope
sarl
fstpl
sbb
divl
cmp
imul
push
movsb
iret
push
xor
pop
xchg
scas
enter
sbb
lock
push
loopne
rcr
lahf
aam
cmpsb
or
das
jno
mov
xor
cwtl
jne
xor
mov
movsl
insl
adc
jns
add
xorl
lock
sahf
inc
jbe
xchg
out
xchg
outsl
xor
fidivrs
cld
mov
and
daa
clc
inc
vpsrld
jecxz
inc
fildl
xchg
das
cld
cmp
mov
or
out
mov
shll
push
sub
dec
sbb
add
cmp
dec
cmp
mov
roll
fstpt
popf
pusha
loopne
jns
mov
xor
add
ret
adcb
addr16
jb
pop
mulb
inc
lahf
or
mov
mov
xchg
xor
mov
adc
jbe
sti
pop
inc
or
dec
push
ss
test
popf
mov
mov
sub
lret
cmp
frstor
pushf
gs
fwait
sahf
push
dec
add
or
dec
pop
pusha
cmp
pop
xchg
and
jns
fs
pushf
sbb
jmp
aas
outsl
sbb
sbbl
cwtl
xor
shll
add
fidivl
xchg
insl
mov
es
popa
xor
xlat
adc
dec
mov
cld
int
mov
daa
andb
aad
ret
pop
sbb
xchg
adc
pop
scas
cmp
loop
mov
mov
mov
sub
inc
cmp
xor
nop
std
and
cs
jge
clc
mov
or
pop
mov
outsl
cld
loop
mov
mov
lcall
mov
roll
jle
inc
pop
adc
mov
jp
sti
cld
ljmp
jmp
adc
cwtl
mov
and
sub
stos
negl
ljmp
hlt
push
adc
icebp
push
scas
mov
mov
ljmp
jns
xchg
mov
aad
ds
inc
aam
cld
or
fsubrs
daa
std
xchg
jmp
sub
movsb
lret
jno
xor
mov
loop
or
fidivrl
mov
and
aam
mov
or
bound
hlt
ret
cmp
xlat
mov
or
lea
pushf
xchg
neg
repnz
and
fildl
jecxz
inc
pop
enter
movsl
mov
mov
pop
add
ret
xchg
mov
popa
mov
cmpsb
lahf
ret
cmp
adc
or
test
pop
iret
mov
loop
lock
shll
push
xor
pop
inc
pop
lret
or
in
jnp
mov
xlat
push
icebp
repnz
enter
xor
xorb
es
pop
and
cmpsl
test
fxch
fsubrp
mov
dec
jle
scas
in
sbb
dec
or
cmp
dec
fs
mov
pop
pushf
fcomps
mov
cmp
clc
cmpsb
push
popf
call
push
lods
jge
in
std
stos
mov
addb
dec
daa
sub
rcr
and
mov
mov
fs
mov
adc
popa
cmc
dec
lea
mov
gs
cmpsl
push
test
lcall
arpl
jb
sbb
pusha
imul
jmp
jnp
pop
mov
pop
pop
jl
xor
xchg
mov
inc
xor
xor
push
or
mov
add
mov
data16
mov
cmpsb
mov
push
sub
adc
test
dec
pushf
pop
and
lea
negb
xchg
adc
cmp
push
or
pop
inc
divb
xor
cmp
test
and
adc
popa
test
rcrl
sub
mov
mov
div
das
pop
pop
sarl
sbb
and
or
fistpl
les
cmpsb
stc
add
jecxz
fsubp
push
daa
lret
push
cmp
in
divl
dec
sub
repnz
fbld
sbb
mov
ds
mov
or
xchg
or
dec
mov
push
jg
lock
xchg
adc
jae
sbb
cs
or
fs
loope
fs
adc
je
sti
add
adc
iret
or
jp
mov
inc
xor
aas
call
sub
xchg
imul
testb
mov
fdiv
sti
das
mov
incb
or
jg
fisubrl
es
pop
cmp
mov
push
xor
jb
xchg
cmc
sbb
test
aaa
rorb
push
daa
add
inc
mov
add
jmp
adc
cmc
icebp
std
sahf
out
pop
icebp
push
jo
push
sti
adcl
dec
ss
mov
mov
cld
ljmp
jp
ss
call
sbb
cmp
sbb
sbb
cld
ret
fs
mov
and
les
push
ret
daa
aad
rcr
dec
ja
pop
int
sbbl
stos
jp
pop
cmc
mov
dec
rclw
std
jns
pushf
fcmovne
loop
cmpsl
gs
cmp
cmp
loopne
pop
imul
jns
inc
cwtl
dec
stos
gs
into
xor
div
out
jno
jb
test
fistpll
imul
mov
cltd
add
pop
ficoms
outsl
dec
pop
sbb
repz
ja
es
mov
orb
add
cli
scas
daa
sub
nop
test
lret
insb
mov
pop
or
add
in
mov
ret
sbb
push
int
loop
mov
ficoml
jno
cmp
jl
cmc
inc
loope
aad
jg
loop
cmp
and
push
test
dec
inc
or
outsl
xor
xchg
xchg
xchg
inc
cs
and
fsub
push
lcall
pop
sbb
in
mov
lret
xchg
jnp
rcll
adc
lsl
adc
nop
outsb
int
pop
scas
loope
lcall
cmpl
sbb
cltd
cmpl
jge
mov
orl
cli
dec
incb
test
scas
push
jge
das
shrb
sub
sub
pop
jb
cmpsl
xchg
jmp
and
repnz
jne
insb
xor
cltd
or
inc
mov
ffree
xchg
sahf
pop
fxch
mov
mov
fildl
and
scas
cs
mov
mov
and
jno
fwait
outsl
xor
xchg
or
xchg
dec
xchg
adc
daa
pcmpgtd
cmp
mov
jno
into
add
or
mov
pop
cmp
clc
loop
mov
dec
mov
jns
int
in
sub
cld
add
dec
in
mov
je
adc
inc
popa
mov
test
loope
in
pusha
add
dec
test
enter
fidivrl
aas
cmp
cmpsb
dec
xor
mov
dec
cmp
jp
sahf
scas
mov
test
nop
fsts
mov
jmp
xchg
cmpsb
stc
not
das
mov
add
xor
sub
loop
push
push
cmp
das
adc
cmp
adc
push
mov
jle
stc
popf
mov
fmuls
imul
add
inc
lahf
idiv
jle
pop
mov
mov
sbb
mov
cmp
loop
xchg
lret
mov
dec
mov
push
js
aaa
gs
and
rorl
imul
loop
outsl
enter
lods
sbb
sub
xchg
int
xor
sbb
xlat
inc
imul
lcall
ja
pop
jmp
or
xchg
mov
or
add
mov
mov
sub
sbb
add
pop
jle
mov
cmpsb
dec
dec
pop
insb
mov
icebp
mov
add
ss
add
mov
shrl
pop
out
sti
xor
cmp
gs
or
xor
lcall
inc
pushw
lods
adcb
iret
adc
dec
shlb
mov
cwtl
mov
mov
sti
mov
lods
mov
imul
mov
loope
insl
mov
and
icebp
jmp
stc
daa
inc
sbb
mov
mov
je
rcll
loope
inc
out
lcall
xor
in
sar
sub
cmpb
mov
pop
je
repz
pop
cltd
fistl
xchg
flds
int3
xor
aas
cld
sub
fisttpl
daa
push
xor
mov
inc
and
cmpsl
sbb
jge
loopne
je
xchg
test
adc
add
pop
aas
ja
add
dec
test
pop
mov
xor
out
in
popf
ret
mov
mov
lods
fwait
mov
push
loope
das
lea
in
sarl
mov
ds
mov
push
rclb
dec
mov
mov
hlt
dec
xor
or
out
sub
push
xor
mov
sbb
repz
notl
jbe
je
jne
cmc
jno
cmp
adc
orb
cltd
add
lea
sarl
sbb
cwtl
pop
pop
repz
mov
mov
dec
lods
cmpsb
call
jnp
mov
xchg
pop
xchg
pop
xchg
xor
jnp
mov
sbb
inc
cwtl
fldcw
fists
mov
push
adc
push
es
add
lea
push
nop
push
iret
mov
jle
ljmp
sub
pop
and
cs
out
les
ja
mov
pop
mov
dec
jp
movsl
dec
and
or
xchg
mov
int3
inc
stc
jmp
lret
mov
in
lods
sbb
popf
cmp
aaa
test
sbb
push
fsubrl
push
or
xchg
mov
jne
dec
add
movsb
outsl
cmp
icebp
rolb
mov
cltd
jb
push
insl
ret
fldt
popf
std
addr16
push
loopne
pusha
fsubl
scas
push
jne
das
jecxz
lahf
push
dec
lcall
cmp
iret
add
cmp
leave
insb
mov
cmp
jno
pop
jl
xor
hlt
out
dec
adc
das
mov
nop
sbb
jecxz
push
mov
fmul
mov
jecxz
and
fcmovnu
lcall
dec
test
jne
bound
stc
mov
rcrb
and
cmp
ja
fbstp
std
mov
pop
cmp
out
std
into
sbb
call
mov
js
and
lods
sarb
gs
arpl
cld
and
fcompl
lods
mov
sub
cs
imul
lds
sahf
add
or
push
mov
iret
xchg
fcompl
inc
jno
divl
aaa
adc
push
rclb
pop
test
pop
sti
cmp
inc
sti
cld
push
sub
adc
imull
rorl
cmc
into
fmull
fwait
mov
cmp
sbb
and
cltd
cltd
push
mov
shlb
dec
push
add
cmp
mov
leave
jmp
pop
cli
pop
sahf
lock
dec
enter
mov
dec
stos
mul
stc
add
ret
xchg
add
mov
xchg
dec
mov
adc
out
push
mov
ljmp
pop
js
sub
sbb
push
rcll
mov
divb
and
cmp
sub
push
rclb
js
decb
mov
or
sub
test
or
roll
cs
inc
xor
jno
xorl
loop
or
ds
je
push
mov
xchg
pop
or
add
cli
iret
inc
jp
adc
mov
xchg
pop
shlb
xchg
push
rol
loop
jmp
and
popf
ret
jno
sub
daa
inc
int3
loop
mov
pop
lcall
add
sbb
out
dec
push
outsb
mov
mov
cmp
mov
test
lock
das
mov
insl
and
hlt
add
ljmp
data16
loop
stc
fimuls
xorl
push
dec
jnp
push
mov
sbb
jl
das
popa
sti
cmpsl
xor
mov
imul
lahf
sarb
xchg
lret
jge
lcall
in
dec
jnp
add
mov
arpl
mov
fsubr
cli
ss
pusha
push
mov
or
je
out
sahf
outsb
and
insb
xchg
or
push
pop
je
movsb
adc
fwait
std
inc
push
pop
mov
repz
dec
aad
aam
cmpsb
xchg
lahf
insl
mov
adc
ss
movb
dec
aas
inc
xor
and
insb
and
jg
mov
bound
and
scas
sub
sbb
jbe
into
daa
and
jp
icebp
jle
daa
fistps
daa
inc
filds
lock
xchg
cmp
adc
stc
les
and
pop
and
mov
rcll
lods
hlt
stos
add
pop
sbb
push
mov
in
mov
mov
xorl
xor
iret
orb
iret
sbb
inc
dec
imul
ljmp
lahf
pop
inc
sub
jge
cmpsb
sub
int
cmp
fisttpl
push
jmp
and
add
and
jle
pop
data16
jmp
sbb
sub
adc
lock
push
jge
out
js
mov
mov
inc
or
or
gs
inc
adc
popl
imull
es
outsb
jle
add
inc
mov
xchg
movb
lret
call
fldcw
icebp
pop
dec
imulb
inc
mov
dec
cmp
dec
mov
pop
adc
sub
push
rcr
clc
es
sar
sub
arpl
jp
push
pop
dec
mov
daa
aaa
lods
pushf
movsb
loopne
cmc
xor
push
pop
das
arpl
mov
lods
or
push
cmpxchg
in
sbb
ret
popa
ret
rol
mov
js
push
pop
jge
int
xchg
or
jecxz
std
adc
ljmp
push
and
push
jnp
std
hlt
lahf
mov
lock
pop
jae
std
lret
jmp
loop
push
mov
push
dec
xchg
pop
add
mov
lret
shrb
xor
xor
cltd
or
mov
push
pop
pop
arpl
jb
pop
xor
xor
test
fsubrs
ds
push
push
push
jns
add
dec
inc
call
sbb
xchg
clc
mov
jbe
ja
jp
dec
lcall
in
inc
sub
leave
popf
decb
dec
lea
adc
sub
mov
insb
jp
xchg
or
lock
rcl
dec
sub
adc
add
mov
xor
inc
adc
mov
jmp
dec
stos
into
push
and
inc
dec
aas
lret
sar
pcmpgtb
stc
push
aaa
inc
mov
push
pop
xchg
call
mov
ret
fs
xor
sbb
xor
bound
mov
call
sbb
fstpt
xor
jmp
push
cld
loope
cmp
ret
xor
push
stos
es
or
test
ja
dec
pop
adc
in
xchg
mov
mov
hlt
jbe
xchg
lret
in
inc
inc
lock
sub
xchg
xchg
jbe
mov
addr16
leave
push
dec
pop
pop
sub
push
dec
jge
mov
dec
jne
jge
test
dec
jno
aas
mov
insb
das
push
and
jnp
rcr
mov
stc
dec
mov
mov
xchg
push
push
shlb
dec
mov
or
daa
sbb
mov
mov
mov
pop
dec
popf
aaa
lret
dec
sbb
push
mov
fnstsw
adc
ljmp
imul
popf
jge
out
jns
xor
clc
stos
out
les
jae
xor
and
pop
test
xor
fists
pop
fisttpll
jno
daa
xchg
inc
stc
or
out
repz
enter
xchg
or
dec
idiv
mov
and
mov
jnp
iret
out
popf
or
push
xchg
xor
jg
push
stos
sub
add
lret
adc
jle
xchg
mov
inc
int
nop
lahf
imull
pop
add
and
ficomps
xchg
stos
ficompl
xchg
stos
nop
ja
sbb
jecxz
push
cli
mov
prefetch
test
lret
pop
and
mov
push
nop
jno
shlb
addr16
mov
or
push
and
ret
mov
sar
test
sbb
mov
cmp
or
xchg
sub
inc
jl
xchg
add
pop
pop
addr16
ds
dec
subl
cpuid
inc
xor
push
loop
stos
into
push
lods
dec
cmc
mov
sbb
std
xchg
lds
mov
cmc
xor
or
inc
adcl
add
mov
xchg
andl
mov
sbb
lret
mov
xor
cmpsb
fnstsw
cmc
xchg
lock
pusha
orb
sub
fsubrl
sub
push
mov
mov
cmp
jno
sub
lahf
std
xlat
data16
or
call
inc
inc
mov
fdivl
ja
xchg
cmpsl
xor
add
sub
cmc
cwtl
jp
xchg
sub
adc
inc
lea
mov
sbb
lret
mov
loop
sbb
out
stc
int
shrl
adc
call
stos
xor
adc
lahf
push
sub
or
push
pushf
outsl
imul
xlat
sbb
mov
imul
mov
les
cltd
popf
stos
scas
loop
int
mov
xchg
imul
pop
sub
mov
test
es
sub
insl
mov
test
repnz
and
lret
in
xor
xor
insb
aad
xor
cmpl
int3
rcrb
aad
ror
scas
cmpsl
jo
inc
jo
insl
add
xchg
cmp
inc
sbb
pop
inc
in
pop
dec
out
cwtl
es
ror
stc
inc
cltd
dec
loop
pop
cmc
divb
mov
jne
lods
aaa
scas
jmp
arpl
jmp
loope
mov
add
xor
pop
out
addr16
dec
adc
inc
xchg
jae
mov
mov
jl
or
sub
mov
imul
enter
scas
adc
mov
shlb
sub
sub
xchg
test
subb
int
pop
int3
mov
mov
aad
fcomps
stos
shrb
cmc
xchg
icebp
aas
mov
mulb
aad
ret
push
xor
or
call
pop
and
call
cmpb
jecxz
jbe
enter
loop
popa
jo
stc
aaa
inc
mov
dec
sbb
mov
mov
jg
jmp
aas
data16
lods
andl
mov
imulb
lods
inc
popf
dec
xor
xor
xor
js
movsb
jle
data16
cwtl
mov
sar
or
ror
push
adc
add
mov
sub
test
loop
inc
or
repz
std
jno
cmpsl
sub
in
inc
movsb
push
outsl
fists
pop
mov
addr16
fnstcw
sti
sbb
jecxz
cli
in
mov
mov
push
data16
sbb
insl
dec
sbbl
ror
add
sahf
nop
xor
inc
ja
shlb
decl
jg
iret
in
out
insb
outsl
mov
mov
lea
int3
test
pop
insb
push
and
dec
sub
popf
push
add
test
jnp
xchg
loop
sub
adc
adc
xchg
xchg
cmp
out
or
loop
push
fcmove
push
add
cmp
mov
hlt
negb
sub
mov
pop
notl
add
push
mov
cld
insl
movsb
nop
dec
out
arpl
sub
repnz
and
pop
mov
dec
imulb
outsb
push
cmp
fdivrl
and
in
xor
xchg
pop
ss
xchg
iret
testl
mov
mov
out
das
sarl
and
push
movb
sahf
loope
add
mov
frstor
mov
adc
enter
jae
into
int
adc
add
scas
test
pop
pop
in
add
imulb
in
adc
xchg
push
xchg
in
xchg
sbb
adc
pushf
xchg
xchg
lcall
fistl
fwait
cmc
and
sub
mov
add
aas
push
pop
mov
enter
cmpb
xchg
xchg
sub
add
mov
inc
pop
mov
mov
jno
xor
and
mov
lcall
test
call
push
mov
sbb
xchg
mov
leave
mov
test
add
cmp
cli
setp
jno
sbb
sbb
jmp
je
jle
pushf
imul
mov
mov
in
imul
pop
lret
and
jge
xchg
adc
mov
cmp
mov
adc
cmp
outsl
adc
cmp
jns
push
nop
pop
push
sbb
popa
lock
xor
mov
stos
outsl
and
iret
cmp
pop
out
push
test
mov
mov
dec
jns
xor
mov
and
cmp
push
loopne
cwtl
xchg
mov
call
pop
and
push
js
cmp
lcall
test
arpl
dec
jl
mov
xlat
std
jmp
add
fs
fst
mov
jo
add
movsb
add
push
test
cld
mov
ja,pt
xor
sti
jns
imul
push
jae
filds
das
pop
xchg
gs
aaa
scas
lods
incb
inc
scas
mov
mov
pop
imul
stc
xor
jmp
push
cwtl
movl
xchg
aam
shll
mov
adc
cld
mov
loopne
cmp
dec
leave
cltd
pop
dec
xchg
inc
pop
dec
das
push
sbb
xor
pop
jae
test
movb
mov
fs
xor
jle
icebp
fcmovnbe
or
cmpsb
fsubs
icebp
cmpsl
xchg
repnz
stos
popa
cmp
dec
sub
cmp
cmpsb
pop
nop
roll
lods
out
push
es
test
jo
xchg
aam
pusha
scas
mov
fucomp
scas
divb
push
xchg
popl
pop
xor
iret
and
xorl
dec
repz
imul
pop
xchg
mov
lock
mov
mov
loop
jbe
xchg
add
jae
xchg
add
pop
lahf
icebp
stos
jecxz
and
add
push
dec
jecxz
cli
leave
mov
jecxz
ljmp
xor
xorl
mov
loopne
mov
or
fwait
pop
push
cmp
or
popf
mov
dec
popa
scas
ret
sub
push
cmp
add
lea
jne
xchg
in
and
mov
xchg
ja
mov
insl
dec
mov
or
xor
fcoml
pop
sub
jbe
subl
push
cmp
jle
mov
mov
xchg
xor
lock
mov
aam
cmpsl
lret
jecxz
cmp
int3
mov
in
and
ret
jecxz
idivl
popa
pop
repnz
mov
ss
dec
mov
sbbb
test
test
daa
adc
xor
iret
pop
mov
loope
pop
push
cltd
mov
cmp
lods
jbe
stc
mov
push
sub
fdiv
xchg
in
cmpsb
dec
ds
faddl
nop
add
push
into
dec
jbe
lcall
aad
not
into
test
js
or
add
lock
nop
dec
mov
jg
cmp
cs
mov
pop
das
mov
int3
or
add
in
mov
mov
xchg
mov
fldcw
cmp
out
xor
outsl
xlat
mov
xor
push
loopne
out
sub
fcomps
push
mov
out
jne
lcall
cmpsl
push
jns
pop
cmp
ficomps
popf
mov
adc
sbb
xchg
sti
mov
sbb
out
je
lods
adc
cwtl
sub
lret
pushf
or
sub
std
loop
movsb
movsl
adc
push
pop
and
stos
push
xchg
fimull
jmp
xor
in
stos
stc
data16
jp
pop
lods
sbb
mov
pop
adc
sbb
fimuls
rclb
bound
es
stc
daa
xor
mov
mov
in
cmp
fst
jb
cmpsl
imul
js
lods
addb
inc
ficoml
cmp
ficomps
or
movb
inc
cld
dec
lods
mov
jae
sbb
xor
bound
ret
push
pop
inc
push
lea
jg
stos
jecxz
cli
dec
fstps
clc
pushf
mov
jmp
push
mov
aad
insl
insb
aaa
push
int
xor
js
push
pop
pop
pop
ja
add
push
arpl
lret
xchg
repnz
xchg
sbbb
xchg
movsl
aad
into
out
push
dec
sar
mov
rolb
jns
mov
shl
iret
fnstsw
lods
data16
hlt
mov
lret
pop
ds
pop
stc
in
jae
push
icebp
pop
push
cmpsb
or
dec
push
shl
sub
sbb
jecxz
or
in
push
lods
add
and
ljmp
jl
fwait
sahf
sbb
mov
jge
and
cmpl
pop
push
push
push
lret
pushf
leave
jnp
in
sbb
mov
call
push
in
sub
xlat
xchg
dec
jge
out
or
out
inc
shll
xchg
hlt
fldcw
mov
out
push
adc
xor
enter
inc
or
icebp
insl
out
repz
sbb
pop
sub
inc
jg
or
mov
mov
ljmp
leave
and
sub
fimull
adc
ds
sub
fildl
ret
xchg
adc
fnstcw
jo
sub
inc
loope
mov
jb
outsl
mov
jl
jmp
push
insb
push
test
das
mov
enter
jmp
rcll
ja
dec
data16
lods
ret
and
jecxz
pop
shlb
xchg
xorb
std
push
adc
js
adc
inc
mov
cmp
mov
out
push
iret
cmp
outsb
test
sub
sbb
icebp
mov
inc
jg
jl
test
pop
fdivl
xchg
inc
mov
lret
stos
cmp
stc
push
xchg
ret
int3
jp
clc
loop
push
add
and
lds
mov
mov
loop
repnz
in
and
jecxz
dec
push
std
mov
lea
call
aad
mov
sub
xor
rclb
adc
xchg
mov
add
jae
loope
test
mov
or
cltd
cli
mov
pop
sbb
add
lock
xor
imul
aad
adc
sbb
mov
jnp
jmp
push
fwait
dec
and
fisubl
inc
daa
lcall
inc
outsb
and
cmpsl
addr16
push
push
or
adc
push
fldenv
mov
xchg
mov
mov
mov
xor
insb
lret
sbb
or
xor
sbb
js
test
cli
mov
or
mov
jle
std
in
cs
add
call
popf
jno
sub
mov
fcmovne
push
and
xchg
and
mov
dec
mov
push
jle
xchg
add
pop
and
std
shl
push
push
sbb
inc
hlt
jnp
add
lcall
and
cmpsl
fadd
xor
mov
or
jbe
mov
mov
and
mov
js
sahf
fsubl
lcall
mov
adc
inc
dec
cmpsl
cs
sarl
jae
call
add
push
pop
sub
push
jecxz
es
imul
mov
leave
push
pop
jmp
xchg
add
in
fxch
imul
adc
loope
xchg
stc
imul
dec
xchg
jno
add
imul
inc
cmp
movsl
xor
int3
popa
aad
ds
mov
les
jae
sub
xchg
int
cltd
pop
xchg
dec
dec
or
cmp
ret
pop
sub
pop
inc
repnz
sub
lock
outsb
repnz
and
mov
adc
jecxz
cmp
sbb
fstl
add
mov
adc
in
aam
lea
es
sbb
mov
les
xor
mov
addr16
sbb
cmp
push
jecxz
jo
pop
mov
cmp
leave
add
fcomps
pop
push
or
outsb
adc
adcb
push
bound
push
aas
inc
movsb
and
jl
cld
mov
cmpsb
sbb
sub
hlt
pop
outsl
push
out
daa
fisubl
insl
cmp
pop
bound
pop
sarl
insl
nop
fstpt
push
ljmp
adc
sub
fldenv
test
mov
fldlg2
pop
into
sbb
in
xor
out
jnp
adc
adc
jmp
jp
rcr
or
dec
popf
aam
jl
push
lcall
sub
aam
cmp
xor
movsl
int3
jnp
ss
ret
jo
adc
jmp
dec
xor
popf
imul
cmp
mov
xchg
cmpsl
inc
adc
inc
and
adc
jle
mov
loope
pop
and
dec
push
cmp
jb
enter
aas
or
cmp
xchg
hlt
fwait
sbb
mov
push
int
addb
insl
push
js
fmull
xchg
movsb
test
cmp
push
xchg
or
aas
ror
xchg
push
shrl
fstps
popa
dec
cli
shlb
cmp
cmp
test
rdpmc
dec
bound
insl
stc
mov
push
jle
or
imul
xor
and
jnp
jb
mov
aad
fdivrs
nop
fmul
fs
iret
in
inc
ljmp
ret
push
or
das
add
fs
in
jb
jl
sbb
pop
inc
push
les
scas
cmp
jae
push
ret
scas
mov
out
push
jbe
lds
imul
cmpsb
jp
jo
outsb
dec
cwtl
pop
xchg
cmp
int3
int
adcb
and
jp
mov
dec
cmp
dec
aaa
mov
xchg
sbb
mov
rcll
jp
jns
pop
xor
push
inc
mov
mov
dec
jae
sbb
push
lret
mov
insl
adc
adc
cmpsl
xlat
and
pop
imul
push
lret
rclb
jb
add
mov
fs
sar
out
in
and
lahf
pop
sub
movsl
cmp
dec
aas
sahf
stos
cld
sbb
xor
mov
sbbl
stc
aam
inc
inc
mov
xchg
test
in
ret
jp
xchg
pop
adc
push
aam
std
adc
push
pop
sbb
arpl
fwait
icebp
jne
hlt
cs
push
xor
sahf
lods
or
adc
iret
cwtl
mov
rcr
pop
cmp
inc
mov
insl
mov
test
rorb
popa
je
xor
mov
push
jmp
cmp
out
popa
cmp
mov
leave
jecxz
push
inc
ret
adc
ja
add
jnp
aad
mov
jg
push
xchg
ret
cmp
pop
in
xor
mov
jne
mov
jne
inc
ret
push
mov
sub
and
orb
xchg
out
lea
adc
in
insb
xchg
dec
scas
clc
add
pop
adc
sbb
sub
cwtl
mov
call
aad
adc
cmp
test
sub
jecxz
int3
lods
mov
lcall
adc
jmp
pop
test
lock
cld
adc
jb
jo
lock
jecxz
or
ds
out
inc
imull
repnz
adc
int
mov
sub
pop
or
mov
dec
ret
fsubrp
jbe
sti
shll
dec
jnp
insb
aas
arpl
push
fbld
lods
icebp
leave
scas
shr
mov
test
mull
mov
dec
or
sbb
popa
pop
roll
jle
das
and
int3
bound
lea
and
mov
and
rcll
rcrb
in
mov
and
popa
fdecstp
lock
mov
fsub
andl
mov
push
dec
mov
mov
sbbl
mov
gs
mov
sub
aaa
mov
xchg
imul
jae
inc
push
adcl
outsb
jl
out
cmp
xchg
in
jnp
imul
xlat
jp
sub
mov
adc
hlt
lock
in
push
dec
mov
pop
repz
sbbl
call
test
fidivs
fwait
lcall
js
or
sub
add
jne
iret
or
pop
xchg
mov
mov
push
adc
pop
rol
adc
pop
jmp
cmp
jmp
mov
in
mov
mov
loop
std
pop
scas
mov
leave
xor
and
hlt
cmc
daa
cld
mov
add
or
and
push
sbb
cltd
adc
dec
aas
arpl
pop
cmp
inc
sti
adc
pop
leave
add
inc
cltd
lcall
mov
repz
mov
xlat
loopne
cmpsb
cltd
pushf
or
inc
enter
mov
xor
adc
inc
aaa
mov
pop
popa
lock
insb
int
imul
mov
popa
test
popa
lock
sub
dec
ja
push
add
js
outsl
jno
mov
hlt
stc
test
icebp
dec
mov
sub
bound
loop
lcall
insb
shlb
mov
mov
lods
je
cmp
insl
cli
mov
xor
mov
jbe
stos
aas
int3
test
movsb
sbb
inc
out
add
ret
mov
xor
je
push
cmp
fcomps
iret
add
sarb
shrb
repnz
orb
push
push
fstpt
loope
cltd
mov
pop
push
and
ljmp
ss
mov
in
std
mov
jae
pop
add
cmp
sahf
pusha
sbb
xchg
dec
in
dec
mov
pop
dec
enter
push
and
imul
les
shll
shrl
ljmp
sub
lret
stos
and
rol
pop
xor
cld
gs
jp
sbb
enter
lds
rclb
lods
and
sahf
xor
dec
lahf
jl
pop
add
jmp
fldcw
leave
lret
and
insl
cli
fs
mov
fs
pop
pop
fs
sub
add
push
popf
insb
or
jns
adc
jnp
jae
sbb
scas
and
jns
int
imul
out
js
fnstcw
jo
rcrb
sbb
fabs
loopne
movsb
stos
out
enter
jge
decb
or
inc
mov
and
pop
push
mov
jnp
scas
xor
xchg
stos
ljmp
int3
inc
dec
loop
mov
jecxz
lock
and
loopne
push
and
jnp
inc
mov
xchg
cmpsb
inc
mov
cmpsb
mov
loop
push
add
add
pop
shl
jecxz
jge
dec
xlat
cmp
std
subb
pop
jns
mov
stos
fwait
fwait
aad
xor
das
fistpl
or
mov
int
pop
lea
loope
and
aam
xchg
test
jno
mov
dec
xor
jno
xorl
lcall
subb
mov
mov
sbb
inc
loop
mov
and
add
out
rorl
clc
mov
insb
lds
mov
push
outsl
imul
lahf
mov
xchg
inc
cmp
mov
sbb
bnd
cld
pop
push
xchg
or
lods
sub
fcoms
mov
xchg
mov
repnz
xchg
repnz
inc
jecxz
push
mov
movsl
movsl
fadd
adc
or
xchg
cltd
add
mov
xchg
insb
addr16
adc
mov
pop
not
pop
jge
enter
lahf
cmp
add
and
sti
pop
mov
jo
shrb
push
and
sahf
mov
fstps
pop
and
roll
testb
sbb
push
push
pop
lock
xchg
es
and
inc
jne
aaa
dec
jb
movsl
mov
pop
mov
cmp
lret
test
in
and
mov
sbb
cmovns
lods
push
fidivs
xchg
lcall
pop
enter
dec
xor
shlb
dec
shl
add
push
iret
add
mov
mov
lret
leave
and
xor
in
fildll
xor
testb
adc
sbb
inc
enter
jo
xor
clc
out
pop
mov
into
inc
mov
mov
cmp
inc
xor
lds
or
ret
in
sarl
jb
lret
cmp
adc
repz
rol
mov
shrl
aas
dec
mov
ficoml
dec
fdivr
adc
mov
call
testb
fstpl
inc
adc
mov
cmp
ja
leave
fldcw
cltd
or
shl
lret
mov
mov
push
cmp
lret
mov
ljmp
stos
push
push
lret
mov
les
inc
push
dec
fstps
fwait
xchg
aas
jbe
popf
jecxz
iret
jb
lods
movsl
test
stos
mov
adc
pop
mov
lret
lret
xchg
pop
jb
sbb
aas
dec
xchg
jecxz
or
add
lock
adc
sub
pusha
jae
mov
mov
add
lret
xchg
cmc
sbb
testl
adc
orl
aad
cmpsb
in
pop
lahf
dec
shl
cmp
insl
aad
pop
scas
xchg
sbb
pushf
mov
sti
repz
push
mov
or
movsb
sbb
aad
jns
insl
xchg
fidivrl
mov
mov
fs
imul
fsts
aam
inc
std
mov
aad
mov
push
mul
and
add
cmpsb
pop
sbb
sbb
mov
push
dec
leave
rcl
jno
mov
pop
sbb
pop
and
xchg
insb
sbb
into
les
stos
fnstenv
xor
add
cmp
mov
inc
loopne
das
and
lahf
lcall
mov
dec
inc
jge
mov
std
ret
cwtl
push
popf
jmp
call
stc
ljmp
mov
das
dec
and
lods
getsec
in
cmp
call
push
shll
imul
jae
and
in
dec
in
ret
fs
loopne
insl
icebp
lods
mov
add
mov
lcall
mov
add
subb
int3
jae
scas
addr16
iret
ret
fcmovnu
cmp
fidivs
xor
pop
and
jno
lret
add
xchg
sahf
sysexit
scas
cmpsl
addr16
jecxz
mov
enter
push
inc
jnp
gs
js
add
je
rclb
inc
repz
shlb
sub
sbb
fdivrs
cltd
pop
test
push
mov
clc
sarl
and
cmc
jmp
sub
jo
xchg
xor
in
fildl
cltd
push
icebp
popa
je
inc
push
pop
dec
ror
repnz
mov
popf
test
pop
xchg
sub
jo
rolb
push
lret
push
aaa
das
outsl
xlat
sarb
sti
aad
in
loopne
mov
cmp
imul
xor
test
out
imull
mov
jb
jmp
inc
insb
rol
mov
jg
and
xor
mov
cmp
out
aam
fnstcw
aas
sti
pop
pop
sti
push
cmc
xchg
jge
dec
cmpsl
or
xchg
cltd
push
mov
xchg
addr16
mov
push
or
xor
xchg
push
sbb
adc
rcrl
add
xor
hlt
lret
mov
pop
ljmp
enter
lods
sub
cmpsl
or
pop
push
push
jae
push
insb
lahf
jnp
inc
jb
and
inc
add
xor
xor
xor
add
js
popf
jnp
popa
mov
cs
or
rorb
into
pop
sub
inc
shl
or
jmp
and
fadd
fldl
sbb
int
pop
mov
inc
push
int3
data16
ficoms
pop
cmpsb
insl
inc
loopne
pop
or
xor
xor
shlb
ds
pop
in
aam
pop
jg
inc
lock
push
jne
mov
cli
lock
ret
mov
jno
mov
dec
shll
fidivs
dec
test
xlat
in
push
jo
or
mov
pop
mov
ja
pop
push
cmpsl
outsb
inc
xor
sub
cltd
das
shll
inc
loop
out
lock
fmull
pop
cmp
jge
inc
inc
loopne
scas
aas
mov
mov
loopne
push
in
mov
setp
mov
enter
call
xlat
sub
int
test
mov
cmp
mov
pusha
mov
int3
icebp
jbe
inc
cmp
dec
outsl
sbb
jmp
dec
out
aad
sbb
jb
insl
xor
shl
cmp
sbb
sarl
sti
test
stos
mulps
xor
cmp
jmp
or
push
loop
adc
dec
cmp
hlt
lods
push
adc
mov
pop
push
stos
iret
inc
add
or
icebp
mov
rorl
sub
cmp
cmc
pop
ja
inc
test
mov
int
push
insb
mov
inc
sub
stc
movsb
int
mov
pushf
mov
in
mov
mov
push
push
fsubrl
fisubl
fucomi
cld
repnz
cmp
orb
jl
jecxz
sub
dec
ret
sbb
addr16
pop
loope
sar
xor
mov
out
jge
scas
inc
daa
lods
jg
push
ljmp
sub
arpl
bound
scas
add
out
les
loop
scas
stos
popf
sub
xchg
push
lret
lock
cs
xchg
push
xor
nop
pop
and
pop
or
outsl
pop
adc
seta
repz
arpl
std
imulb
repz
sti
cmc
inc
xchg
add
pop
mov
dec
ret
adc
pop
sti
or
inc
mov
sub
ja
cli
xchg
dec
mov
push
fst
adcl
sub
adc
in
sbb
pop
push
pop
push
mov
int3
inc
icebp
jecxz
sub
fidivl
sub
ljmp
cld
pop
dec
aad
sub
pushf
mov
shl
and
and
fcomp
lahf
mov
jo
mov
inc
movb
ror
scas
dec
cmp
push
push
inc
aam
and
xchg
cwtl
dec
call
jo
pop
insl
ja
xchg
xchg
mov
mov
jns
mov
cld
mov
sub
jmp
adc
cmp
jle
scas
fsubs
mov
xorl
pop
lds
lcall
sub
lcall
push
add
push
and
adc
mov
jecxz
in
out
or
add
push
cmp
push
adc
inc
xchg
dec
iret
pop
cwtl
stos
outsl
or
inc
imulb
cli
pop
fnsave
fnstcw
mov
fcomps
pop
jnp
aas
into
mov
sbb
int3
cwtl
cmpsb
cmp
fcmovne
cmp
adc
mov
or
mov
or
es
dec
jb
adc
jl
push
mov
hlt
xchg
out
and
call
rcrb
xor
mov
pop
fidivl
sub
or
outsl
inc
sbb
jl
pusha
or
mov
ds
fisttpll
jnp
pop
shrb
arpl
push
mov
ds
xchg
sbb
dec
jmp
adc
push
lret
mov
lahf
adc
xchg
adc
lcall
mov
out
insl
clc
dec
xchg
mov
and
inc
dec
testl
mov
rol
sbb
das
stos
mov
and
fistpll
dec
aad
mov
rolb
shl
dec
xchg
sub
sti
jp,pn
inc
xchg
outsb
imul
dec
into
pop
jge
cli
mov
aas
pop
mov
out
pop
add
adc
fsubp
stos
jns
out
ja
ljmp
jecxz
or
js
adc
pop
inc
aaa
add
cltd
adc
jp
jno
dec
sbb
in
outsl
pop
inc
mov
lahf
movsl
adc
push
into
sub
lahf
mov
shl
sbb
movsb
or
push
push
mov
cs
mov
jno
xorl
inc
sbb
cmp
fistpl
push
or
xchg
mov
jge
cmpsb
les
add
je
sti
rcrl
faddl
icebp
in
sbb
jecxz
ret
stc
xor
cld
mov
mov
dec
loopne
aas
dec
pop
pop
adc
loope
cwtl
cli
cmp
pop
sub
push
ja
add
push
mov
jns
adc
inc
call
mov
xor
adc
jp
adc
push
or
pop
mov
cld
clc
or
add
push
and
jmp
cmpsb
push
js
mov
imul
das
jge
add
inc
loope
or
fs
or
mov
in
movsl
mov
arpl
in
mov
cmp
cmp
fcomps
mov
push
imul
scas
inc
pop
mov
sub
or
sbb
xchg
mov
push
jg
in
dec
lods
cltd
push
mov
jp
jmp
inc
fidivrs
push
sbb
cmp
mov
add
xor
xor
aaa
pop
addr16
or
hlt
mov
or
and
mov
pop
sub
jge
inc
inc
adc
js
or
lods
or
aad
cmpsb
or
rcll
test
out
insb
jge
mov
arpl
add
mov
inc
imul
popf
in
mov
icebp
test
rorl
dec
jns
xchg
fnstsw
pop
gs
mov
push
push
stos
inc
pop
mov
mov
das
mov
pcmpgtd
fidivrl
mov
sub
clc
xchg
push
adc
enter
or
test
jb
push
test
mov
or
es
or
popa
cmp
in
sbb
addl
lock
jbe
xor
cld
xor
mov
pop
shll
jmp
pop
add
rorb
sbb
ret
adc
inc
push
cmp
int
add
fsubl
or
bound
std
ss
jo
stos
js
add
mov
stos
hlt
dec
add
xchg
fistpll
sub
outsl
fistpll
je
outsl
addl
jmp
frstor
in
testl
pop
mov
jne
lods
enter
cltd
sbb
push
sahf
dec
stos
pop
filds
push
leave
lock
cltd
push
pop
insb
dec
aad
mov
rcrb
inc
jle
and
cld
sub
xor
pause
ljmp
addb
pop
and
rol
jne
mov
xor
leave
js
xchg
or
hlt
jecxz
pop
dec
out
and
imul
std
lcall
cs
sub
mov
push
xchg
pop
jnp
mov
push
insl
pop
sub
lahf
test
arpl
xor
jmp
cmp
adc
rcrb
fisubl
mov
sub
mov
xlat
in
fs
aam
icebp
mov
xor
out
gs
mov
les
inc
mov
popa
mov
mov
test
jp
nop
or
stc
hlt
icebp
mov
xchg
iret
icebp
push
in
or
inc
jns
clc
xlat
in
jns
sub
stc
inc
adc
data16
fstps
inc
or
or
jl
xchg
enter
shrb
mov
adc
dec
pop
xor
mov
icebp
inc
dec
sti
js
inc
and
clc
xorb
stos
outsb
mov
pop
fnstcw
lcall
add
mov
jne
push
nop
add
add
ljmp
or
or
push
jo
aad
aas
jge
movsb
or
movsb
inc
jecxz
mov
push
es
push
mov
pop
adc
nop
adc
jnp
loopne
test
dec
mov
add
loope
jp
les
mul
jbe
pop
popa
pusha
test
aam
inc
movsb
mov
negl
mov
loope
in
push
jb
mov
or
fwait
shl
mov
jmp
ret
icebp
das
dec
cs
or
mov
sub
pop
int
jne
cmpsb
lods
mov
or
fwait
jle
push
mov
and
clc
rorb
gs
mov
shlb
addr16
das
cmpsl
add
rolb
in
bound
pop
push
xor
adc
xchg
xchg
out
aad
sub
imul
lret
mov
jge
mov
sbb
stos
mov
loopne
xchg
push
adc
pop
jecxz
stc
sbb
test
jae
das
pop
push
inc
push
xor
mov
sbb
pusha
aaa
aad
cmp
xor
inc
push
push
push
in
add
insl
xchg
in
out
jg
jbe
mov
mov
lods
faddl
rcl
in
pop
xor
adc
cmp
mov
push
enter
jae
popa
sbb
mov
xor
mov
idivb
mov
cmp
ss
mov
or
rcl
loopne
xor
sbb
enter
or
lea
outsl
cmc
mov
lods
pop
scas
sub
inc
stc
jo
in
cmp
jl
sbb
lock
arpl
and
jne
inc
or
pop
push
push
xchg
jbe
mov
adc
dec
push
xor
sub
je
xchg
fs
mov
cltd
xchg
mov
push
pop
cmp
mov
arpl
xor
adc
loope
xlat
mov
and
pop
mov
xor
lahf
mov
xchg
cmc
push
sub
add
and
into
and
cmpsl
sbb
shlb
adc
je
daa
and
repnz
std
push
inc
dec
xchg
fnstsw
test
mov
adc
push
ss
sub
loopne
lods
into
jnp
sub
cli
cltd
or
lret
lret
test
imul
testl
subb
push
clc
sbb
out
mov
fdiv
stos
daa
pop
orl
sub
int
not
fistpll
push
sahf
addr16
pop
outsl
push
push
rclb
subl
loop
bound
clc
int
dec
sub
sti
cmp
add
js
sbb
xchg
loopne
in
xor
cmp
mov
push
rcrl
add
pop
mov
mov
daa
fs
dec
xchg
jp
xchg
mov
cmp
aad
fisubl
sub
enter
mov
xor
mov
xlat
mov
pop
mov
and
add
js
or
fwait
mov
sbb
cmc
or
mov
dec
sbb
scas
xchg
jl
fldcw
aad
test
jmp
stos
enter
loop
jecxz
lods
aad
aad
insb
sahf
outsb
add
in
add
cld
and
sub
scas
sub
jge
or
push
icebp
add
push
arpl
mov
jmp
pop
or
or
addr16
jecxz
rorl
inc
fwait
push
add
push
stos
dec
sub
loop
in
sub
outsl
push
or
xchg
out
addr16
and
dec
test
sbb
gs
aaa
sub
and
xchg
loop
movaps
inc
and
cmpsb
and
repz
mov
push
pop
mov
stos
add
stos
int3
lock
ljmp
inc
outsl
scas
pop
sbbl
sub
aad
xor
addr16
push
fsubrs
add
xchg
pop
or
jae
insl
rcl
imul
ljmp
pop
cs
arpl
in
cltd
dec
add
push
mov
stos
inc
xchg
out
adcl
call
mov
subl
mov
cmp
push
xchg
mov
out
fsubrs
les
pusha
sub
mov
shlb
mov
xor
xchg
mov
pop
xchg
stos
popa
pop
adcb
push
lcall
mov
mov
scas
scas
and
xchg
or
loopne
or
dec
pop
lcall
sbb
test
out
loopne
pop
sbb
dec
gs
add
xor
in
mov
popa
push
aaa
mov
sub
addl
sbb
dec
push
rorl
fsubrl
mov
int
lds
inc
and
js
fs
mov
test
outsl
xor
dec
outsb
lea
add
sahf
int
pop
add
sbb
cwtl
lds
out
outsl
hlt
pop
add
xchg
mov
mov
int3
nop
pop
dec
push
xchg
adc
enter
xchg
adcb
add
js
adc
in
ror
mov
add
add
push
inc
xor
loope
mov
mov
dec
nop
popa
sub
scas
repnz
sub
mov
addr16
mov
dec
push
inc
cmp
leave
cli
leave
xchg
dec
sub
aas
sbb
insl
cmpsl
and
pop
add
push
movsl
mov
jo
scas
pop
outsb
sbbb
mov
ss
mov
rcr
leave
aaa
in
test
cmc
and
push
sti
insl
mov
iret
test
out
rorl
mov
fst
fdivp
adc
xchg
movsl
outsb
pushf
movsb
adc
or
bound
aas
push
insb
daa
pop
xor
mov
mov
cwtl
jge
and
pop
arpl
clc
or
dec
es
mov
daa
nop
sbb
sahf
inc
lret
into
pop
jecxz
jmp
lea
cmpsl
and
mov
push
and
lock
aad
rolb
cmpsl
sbb
roll
sahf
inc
frstor
sbb
stos
ss
fwait
push
jbe
sub
xor
sahf
mov
mov
pop
enter
popw
test
xchg
ret
mov
pminsw
or
mov
mov
ds
push
add
cs
fsubrs
xor
test
mov
rcl
mov
jmp
or
les
inc
lret
jle
jbe
daa
sbb
xchg
lods
or
out
push
inc
icebp
cmpsb
cld
cli
adc
push
sbb
and
loopne
inc
xor
fidivrs
xor
dec
insb
sbb
fwait
cli
lods
fldl
push
adc
out
test
add
mov
movsl
mov
mov
ds
fcompl
dec
dec
dec
push
cwtl
cwtl
pop
fs
lcall
mov
sub
or
add
sbb
cli
test
fmull
bound
xchg
iret
filds
in
xcrypt-ctr
cmpsl
pop
inc
test
or
pop
rcrl
sbb
inc
out
cbtw
jg
lock
gs
inc
sbb
subl
mov
pop
fildll
in
dec
mov
push
jecxz
out
inc
push
sahf
xor
es
mov
insb
sbb
ljmp
popf
jnp
scas
mov
sub
xor
mov
fnstenv
shll
add
in
xor
ret
and
sbb
mov
pusha
daa
cmp
xchg
dec
cs
adc
jl
stos
sbb
loop
jge
push
ret
iret
cld
insb
mov
popf
outsl
push
dec
xchg
pushf
mov
push
pushf
push
jno
cmp
int3
int
das
lret
xor
xlat
mov
outsb
and
jne
aaa
dec
jne
add
arpl
inc
ljmp
add
xor
adc
out
aam
addl
test
mov
xchg
sbb
pop
cmp
ljmp
ja
mov
repz
rorb
pop
movsl
push
sbb
outsb
pop
dec
repnz
arpl
cmpsb
and
int
mov
es
insl
movsl
lods
sar
cmp
mov
repnz
stos
push
popf
clc
mov
int
popa
inc
stos
mov
sbb
or
mov
jmp
cmc
sbb
xchg
push
in
xchg
aas
pop
cmp
mov
adc
xchg
sub
pcmpgtb
and
jge
inc
xor
cld
xor
mov
hlt
daa
mov
aad
out
cli
xchg
add
jo
dec
pop
js
mov
pop
mov
xor
add
stc
aas
outsb
sbb
dec
lea
sub
inc
xchg
add
loope
and
dec
outsl
jmp
adc
fistps
loope
iret
subb
mov
push
lcall
push
cmp
out
xor
out
mov
mov
xor
mov
rcrb
lock
xchg
push
bound
lahf
mov
mov
out
ja
cwtl
jge
add
inc
loope
lret
ja
lods
mov
cmp
pop
mov
xor
divl
pop
xor
lret
pop
inc
nop
push
aam
push
mov
aas
sub
mov
jbe
inc
and
jb
xchg
mov
inc
outsl
mov
xor
sbb
sbb
jns
xchg
and
insb
cmp
cwtl
inc
push
das
cmp
xchg
je
dec
loop
cli
aas
push
mov
mov
enter
mov
mov
adc
lods
pop
cmp
aad
fs
push
xchg
add
negb
push
pop
popf
cmp
pop
pop
lahf
xlat
mov
mov
mov
inc
pop
cmpb
jmp
std
mov
pop
dec
inc
inc
inc
outsl
push
or
cmpsl
adc
fisubrl
and
push
inc
xchg
jne
testb
cltd
mov
fisubl
jb
rolb
and
in
xor
loopne
mov
inc
lahf
push
sub
in
cmp
mov
jbe
cmp
push
fsubrl
pop
js
lods
ja
xchg
in
add
imul
pop
outsb
and
mov
sbb
jmp
xor
ret
lcall
jne
pop
bound
rcll
aas
cld
or
rorb
adc
lds
loope
pushf
sbb
fdiv
jo
dec
ds
cmp
mov
inc
cltd
mov
repz
test
out
push
popf
xor
fdivrl
and
mov
sub
neg
jmp
mov
fsubrs
outsl
aaa
lea
xor
pop
sub
sbb
and
xor
cmp
out
jecxz
fdivr
cmpsl
mov
add
inc
ljmp
mov
nop
xor
pop
popf
mov
cmp
ret
and
mov
sbb
mov
sbb
push
movsb
add
adc
mov
jbe
dec
pop
xor
cmp
outsb
in
xchg
dec
or
xor
pop
jo
dec
jp
outsl
repz
out
cs
cmp
insb
rcrl
movsb
xor
fistps
xchg
cmp
jns
cmpsl
cmpsb
mov
push
sub
jl
mov
fstp
jl
sbb
stos
sbb
push
rorl
and
push
mov
cmp
aad
dec
mov
mov
cmp
ja
jmp
push
clc
iret
sub
pusha
inc
insl
mov
cli
ds
xor
mov
popa
fsts
sti
test
dec
jnp
push
ret
jg
dec
sbb
sti
or
cmp
rolb
mov
roll
cmc
adc
jns
pop
leave
hlt
cmp
xchg
dec
inc
pusha
lret
jecxz
in
repnz
mulb
fcoms
jmp
scas
xchg
enter
pop
lahf
mov
test
fisubl
inc
and
icebp
mov
or
repz
lea
mov
sub
ss
xor
pop
fwait
mov
inc
mov
mov
sub
add
mov
fwait
out
mov
into
xchg
lock
add
pop
leave
sbb
jns
inc
mov
ljmp
cmpsb
push
cmpsl
cmpsl
push
jecxz
in
xchg
push
iret
je
gs
rcrl
gs
push
ljmp
push
loope
and
push
xchg
fsubr
mov
lret
push
call
jg
mov
or
sahf
jbe
push
popa
mov
push
test
mov
bswap
rclb
dec
xchg
mov
adc
cs
xor
cmpsb
pop
outsb
push
inc
inc
push
movsl
ror
jne
aas
pushf
cmp
dec
xchg
sub
test
cmpsb
and
cwtl
mov
jne
mov
adc
xlat
and
nop
jno
cwtl
mov
cmc
mov
jne
add
movsb
scas
dec
sbb
and
lods
or
mov
adc
inc
jmp
xchg
sub
subl
das
jge
and
outsb
mov
stc
xor
leave
adc
add
dec
clc
and
sub
loope
xchg
push
out
pushf
mov
sbb
xchg
push
and
addl
push
loop
push
popf
in
gs
and
stos
call
jge
insl
cmp
adc
movsl
xor
lret
lods
aaa
mov
pop
xor
cmc
lea
adc
jp
jb
inc
pop
lea
mov
xchg
push
add
or
add
imulb
push
mov
mov
mov
inc
insb
jnp
jo
bound
or
or
imul
sub
sbb
outsb
add
add
neg
pushf
add
mov
cli
bound
out
push
psubsw
push
imul
or
cmp
or
bswap
push
xchg
js
sti
mov
daa
jno
repnz
or
not
out
in
insb
lods
jo
shlb
scas
and
sti
jb
insb
xor
scas
pop
pop
in
cmpsb
add
test
push
jno
repz
push
pop
dec
test
lcall
mov
cmp
mov
in
inc
lcall
mov
push
jno
xlat
subl
xchg
cli
ja
jae
lea
loopne
enter
decb
cmp
xor
inc
cmp
pushf
in
int
scas
leave
xor
scas
pop
xor
imul
inc
mov
sub
pop
mov
lods
dec
daa
pop
fnstenv
lret
in
pop
repnz
aas
in
push
cmpsb
div
lods
fimuls
xlat
out
cmp
jns
aad
les
sbb
clc
sub
sbb
mov
jmp
push
fdiv
fs
or
roll
add
aad
push
mov
jmp
xchg
mov
xor
add
ss
mov
inc
and
cmp
int
andb
add
pusha
mov
mov
lock
lret
jge
or
mov
loopew
push
in
xchg
and
sar
dec
pusha
jnp
dec
pop
mov
mov
loopne
sahf
xchg
xchg
fsubs
dec
xchg
jb
stos
out
adc
std
jne
cmp
cs
mov
test
mulb
sub
cmp
fwait
popa
movsl
pop
fstpl
jg
push
or
adc
lea
and
ffree
cmp
inc
gs
and
ds
sub
es
jo
inc
cli
dec
and
sti
mov
adc
les
mov
push
test
lret
daa
xchg
pusha
call
sbb
aad
xor
mov
dec
xchg
mov
pusha
sub
call
scas
pop
leave
cmp
inc
leave
adc
push
insb
jmp
clc
push
lods
xchg
stc
ljmp
sub
pop
jne
leave
addr16
out
shl
xor
xchg
ljmp
adc
pop
nop
dec
add
stos
lods
or
jnp
repz
outsl
add
mov
lds
repz
sti
xchg
mov
imul
jp
mov
es
jge
mov
sbb
mov
inc
out
mov
lret
or
test
dec
inc
into
call
adc
aas
pop
pop
jae
aam
lcall
shlb
std
fidivrs
aaa
scas
outsl
loopne
mov
dec
xor
cmpsl
push
es
in
out
push
test
inc
sbb
dec
test
scas
add
cld
xor
and
orb
add
cwtl
sbb
push
sbb
mov
mov
scas
xchg
sahf
sbbl
sbb
loopne
stos
out
jmp
mov
dec
je
adc
and
jmp
mov
mov
lock
xchg
repz
jle
jbe
lcall
xor
pusha
loopne
sbb
shlb
inc
jmp
and
xchg
loope
cmpsb
jl
jne
out
cwtl
idivl
mov
push
push
out
sub
roll
insb
adc
jl
dec
pop
sti
aam
mov
je
pop
mov
mov
dec
out
jb
xchg
or
sbb
gs
push
sbb
ss
fs
cmc
or
lcall
xor
int3
jmp
jb
mov
sbb
add
mov
sbb
mov
mov
les
jns
fs
mov
out
mov
mov
lods
pop
mov
xlat
imul
adc
add
out
fcmovbe
sti
mov
mov
shll
adc
data16
jge
sub
rcll
or
fsubl
mov
jecxz
aas
int3
cmp
pop
int3
test
ljmp
mov
sbb
mov
roll
lock
mov
shlb
add
lods
mov
scas
mov
setne
add
mov
sbb
call
dec
insb
or
in
loopne
mov
sub
popf
push
dec
aaa
lret
or
in
aaa
enter
add
xchg
pop
inc
stos
decl
or
cltd
xor
adc
push
mov
fisttps
iret
cld
lahf
adc
rcll
add
sbb
xchg
adc
sahf
xchg
jno
cld
inc
dec
xchg
sub
adc
and
ja
pop
cwtl
movsb
sahf
in
add
es
dec
gs
sub
mov
or
scas
std
sbb
push
cmp
cld
stos
sub
nop
mov
inc
pop
add
mov
ljmp
adc
pop
bound
enter
cld
sbb
sarl
insb
popf
shll
dec
xor
arpl
pop
mov
cmp
xor
into
xorb
repnz
adc
mov
fldln2
push
xchg
pop
xor
push
add
mov
orb
icebp
mov
or
ja
in
sbb
mov
jecxz
fwait
mov
and
pop
mov
data16
sarl
fwait
cmc
loop
dec
push
inc
jge
xchg
inc
pop
and
rcrl
jecxz
inc
es
sub
imul
aam
jno
sub
mov
jne
mov
adc
or
push
test
xor
lock
shl
mov
faddl
stc
test
add
stc
jle
inc
idivl
and
mov
fsubrp
mov
mov
test
jl
inc
scas
fwait
xor
cmp
cwtl
pop
dec
les
sbb
dec
out
jecxz
sub
mov
into
andl
xchg
inc
aas
pushf
sbb
roll
leave
testl
movsb
test
iret
mov
imul
xor
ljmp
rcrb
dec
enter
in
mov
pop
and
mov
sti
lret
hlt
add
jmp
xchg
jmp
mov
pop
lods
stos
loope
xchg
mov
push
pop
repz
push
mov
in
push
lret
dec
shl
das
jbe
lods
hlt
pop
jne
jle
sbb
out
loope
enter
jg
push
xchg
push
std
lock
sbb
xchg
je
hlt
pop
in
dec
xor
scas
or
mov
shll
and
addr16
dec
push
mov
sub
jg
mov
jnp
cmpsl
mov
addb
push
push
pop
aad
loope
jp
dec
stc
pop
jbe
adc
imul
les
or
cmp
orl
jnp
idiv
fcoms
popa
jecxz
adc
mov
cmp
mov
fnstcw
ret
mov
out
sbb
pop
dec
adcl
push
outsl
in
fcmovne
cmpsl
jb
mov
scas
std
xchg
stos
and
and
push
mov
or
mov
mov
fadds
dec
push
xor
pop
mov
dec
cwtl
nop
xchg
js
xchg
movsb
push
outsl
dec
mov
ret
pop
pushf
pop
insl
add
bound
pop
sub
rcrb
ds
push
je
mov
testb
aad
and
xor
adc
mov
pop
jbe
or
enter
pop
jmp
imul
imul
jmp
lock
nop
inc
mov
pop
dec
pop
jg
hlt
rcrl
int
adc
repnz
push
fsubs
mov
pop
and
mov
mov
data16
shll
xchg
ret
daa
jp
shlb
mov
nop
popa
push
pushf
enter
jo
mov
dec
rorb
fs
jecxz
lods
adc
stc
loop
or
aam
ret
into
test
inc
sbb
xor
cmp
fdivrp
lret
bound
and
sub
repnz
sub
test
mov
jb
gs
insb
xchg
into
insb
push
cmp
cmpsb
sti
ret
lock
xchg
leave
int
cltd
add
xchg
xor
adc
sbb
lcall
movsl
cmpsb
xchg
and
pop
iret
pop
push
dec
fstl
js
mov
imul
bound
dec
cmp
out
dec
pop
popl
ds
out
mov
outsl
in
popfw
ss
adc
sub
sarl
inc
sbb
ret
pop
mov
pop
mov
mov
push
xchg
pusha
adc
adcb
in
xchg
xlat
dec
and
cli
int3
mov
andl
sahf
xchg
jl
add
icebp
xchg
add
into
add
pop
lcall
fcmovne
rcrl
ret
jnp
in
out
js
dec
lods
mov
push
test
hlt
sub
jecxz
enter
mov
popf
test
adc
sub
xor
ret
cs
fwait
mov
jl
incl
dec
cmp
inc
pop
adc
loopne
std
xchg
mov
repnz
lcall
ljmp
rolb
iret
aam
or
sub
dec
or
pop
pop
push
push
cmp
imul
mov
dec
cs
popa
imul
cmp
aam
push
outsl
ret
pop
push
sbb
imul
xor
pop
cmpsl
adc
add
shl
cld
sbb
pop
hlt
ja
add
cmp
loope
sbb
xchg
popa
inc
insl
push
frstor
movl
push
and
push
mov
sbb
dec
inc
outsl
add
pop
outsl
outsb
pop
mov
fs
pop
xor
jg
aaa
sbb
ss
sahf
cmp
xchg
inc
aad
sub
fsts
pop
push
loope
out
popf
inc
or
xor
xchg
add
add
fisttpll
inc
fsubl
int
sbb
cmp
jo
sbb
sub
and
push
lods
enter
insb
cmpsb
pop
jne
pushf
inc
mov
lods
xor
cld
sbb
fadds
mov
scas
xor
pushf
mov
ror
xchg
adc
adc
out
mov
stc
jp
arpl
mov
pop
in
idivb
push
pop
addl
lods
lahf
dec
call
mov
jp
imul
scas
push
fistpll
or
lock
jecxz,pn
fdivs
jb
xor
push
in
xor
ja
xchg
and
vphsubdq
lret
jge
pop
jp
fwait
int
loopne
xchg
adc
les
dec
fidivs
cmp
xor
test
fildll
jae
movsb
mov
outsb
sub
enter
aam
out
and
into
mov
mov
push
nop
sub
pop
ljmp
into
pop
or
testb
adc
in
rcrl
leave
pop
test
dec
lahf
subb
scas
sub
adc
inc
fst
les
insl
push
xor
mov
mov
pop
into
loopne
stos
cmc
and
dec
xchg
xlat
jnp
sbb
push
cli
sub
lods
sbb
pop
insl
inc
out
out
ficoms
jge
mov
scas
mov
cld
cmpsl
dec
cld
cmp
shll
xlat
out
lcall
lea
xlat
jmp
rorl
mov
jp
pop
ja
rol
cmp
int
cmp
jne
int3
out
nop
mov
and
les
jp
or
sbb
test
daa
mov
mov
incb
pop
fdivrl
loope
xor
mov
sbbl
lods
rol
ret
aad
xchg
mov
push
lods
idivl
xchg
dec
cs
aam
xlat
fmul
lods
dec
test
lods
cs
push
ret
in
mov
push
jmp
and
outsl
stc
fldenv
sarl
shl
rsqrtps
cmp
xor
fdivrp
jno,pn
stos
add
addr16
push
cltd
cs
aad
inc
xor
xor
mov
icebp
mov
pusha
and
sbb
ljmp
sub
mov
out
or
cmp
int
adc
dec
xor
sbb
popf
push
sti
sbb
gs
jmp
and
es
in
mov
hlt
and
xor
in
test
mov
push
lds
adcb
aaa
push
adc
xchg
or
add
lock
xlat
fdivs
inc
xchg
test
cmp
in
add
adc
xor
test
fldenv
sbb
lock
mov
nop
jp
cmc
mov
loopne
sbb
imul
leave
fbld
sub
shll
push
inc
cwtl
jmp
mov
xchg
ljmp
pop
xchg
ds
imul
fstpl
inc
les
mov
dec
shlb
jmp
jo
inc
mov
int3
cmp
div
das
pop
mov
xor
movsl
mov
adc
and
int
sbb
mov
mov
fwait
xor
mov
xchg
dec
mov
outsl
pop
mov
sub
sahf
mov
jle
mov
push
push
test
and
mov
or
lret
jle
sbb
and
mov
jge
leave
pop
or
cld
dec
jb
jl
repz
xchg
ljmp
mov
jg
js
xchg
cwtl
push
mov
mov
add
pop
mov
xchg
pop
jns
dec
in
mov
sbb
ljmp
lods
arpl
jne
test
adcl
sbb
jae
pop
lods
jg
pop
dec
aam
or
cmp
inc
mov
sahf
arpl
testl
mov
jns
jno
adc
xchg
scas
std
mov
sub
jns
stos
inc
repnz
das
jns
jmp
xchg
dec
pop
out
cmpsb
cmp
mov
push
xchg
dec
add
pop
pop
and
in
add
arpl
pop
push
and
stos
pop
add
mull
lret
jge
add
repnz
jmp
xchg
sahf
mov
jmp
cs
ud0
sahf
and
bound
sbb
cli
cmp
push
jo
outsb
mov
push
xor
jg
inc
insl
jno
iret
lret
fimuls
push
or
cmpl
das
shlb
cmp
xchg
push
and
mov
aas
lods
ljmp
mov
dec
jb
xor
clc
cs
pop
cwtl
xor
pop
mov
jae
lods
in
push
xor
nop
jg
sub
mov
dec
lds
rorb
loopne
jae
int
int
loope
cs
mov
jmp
mov
xlat
pusha
pop
fwait
rcll
fcompl
and
fcoms
pop
daa
mov
std
in
push
int3
cmp
test
sti
lds
or
jbe
adc
dec
pushf
xchg
cltd
sbb
jmp
sahf
mov
and
push
xchg
and
mov
sarb
xor
sub
outsb
aas
aad
fldt
aad
mov
and
gs
loope
push
test
pop
stos
fisttpl
pushf
pop
inc
add
lea
mov
sub
lret
push
push
fcomp
test
inc
xor
xchg
sbb
adc
jo
cmp
jnp
push
mov
mov
and
lds
push
out
inc
daa
xor
pop
cltd
lret
pop
pop
inc
jo
xchg
imul
add
pop
mov
dec
sbb
sti
sub
ja
mov
popa
or
ljmp
mov
dec
scas
loop
stos
scas
or
sub
adc
sbb
sar
call
jb
in
xchg
pavgb
xchg
jns
in
and
mov
aam
jmp
pop
or
lahf
mov
in
cmp
imul
shlb
and
jp
sbb
fidivs
ret
out
mov
out
je
popf
and
stc
push
dec
into
arpl
xor
ds
mov
mov
gs
adc
test
sub
lret
lods
cmp
inc
iret
jp
inc
cmp
xchg
test
jl
mov
pop
push
dec
test
jb
ljmp
orl
sti
popf
push
jae
and
adc
fisttps
xchg
jge
jp
mov
out
popa
adc
ret
pop
lret
gs
mov
cmp
pop
mov
add
sub
jnp
pop
and
lcall
scas
data16
int3
cs
out
out
mov
fcompl
xor
cmpsl
imul
jno
int3
pop
xchg
out
push
jnp
decl
cmp
shrb
outsl
stc
mov
pop
and
popa
fwait
mov
int
outsl
and
shl
out
add
orl
dec
dec
sarl
add
mov
or
ret
cmp
call
push
add
pop
add
mov
lahf
mov
int
into
sub
mov
push
outsb
lret
push
dec
scas
out
ljmp
outsb
mov
ret
or
mov
jbe
clc
gs
sbb
pop
pop
fsubs
test
ljmp
lret
enter
push
mov
inc
inc
push
or
cli
mov
addr16
lcall
add
pop
jae
cltd
fcompl
xor
pop
popa
aam
loop
out
fwait
pusha
xchg
sbb
call
es
jns
xchg
pminsw
jnp
mov
test
push
jne
jb
pusha
cli
ret
and
out
lret
dec
mov
xor
icebp
inc
xchg
mov
add
sbb
or
stos
ja
jle
lock
xchg
sub
test
aas
mov
and
hlt
push
js
xchg
add
mulb
fwait
lret
push
sti
fs
add
hlt
arpl
inc
xor
cld
cmpsl
pop
daa
movsb
call
sbb
cmc
pop
xor
push
mov
inc
lock
jb
lfs
shll
sbb
insl
je
jbe
jae
sub
dec
lcall
push
in
ficoml
repnz
pushf
sti
lcall
out
test
push
pop
inc
jmp
xlat
fidivrs
fwait
mov
mov
xor
repz
pop
inc
inc
mov
sbbl
ficoms
pop
mov
push
out
sbb
arpl
xchg
test
outsb
pop
mov
dec
cmp
cwtl
call
push
mov
xor
inc
int
arpl
cmp
adc
pop
push
jbe
lods
outsb
mov
or
test
in
jl
loope
and
aad
xchg
data16
xor
xchg
dec
fs
push
mov
jl
clc
ljmp
sub
xor
or
insb
jnp
xchg
cmp
scas
adc
mov
rorl
addb
test
jnp
fsts
sub
cwtl
ficompl
arpl
ja
loope
mov
into
aad
ljmp
in
add
cmpsl
fs
jnp
push
rolb
rcl
icebp
mov
ja
fistpl
xor
jnp
out
inc
add
iret
adc
xchg
fld
mov
lods
mov
out
lods
push
fxch
cmp
fwait
test
dec
and
pop
popf
xchg
or
jecxz
sub
movsl
sub
mov
sbb
pop
sti
stos
jge
fadds
sub
hlt
adc
and
xor
cwtl
shl
jb
into
pop
int
pop
dec
lods
into
xchg
xchg
pop
mov
pop
outsb
mov
mov
adc
pushf
jecxz
adc
rclb
pusha
stos
pushf
int3
lahf
repnz
insb
je
fistps
xor
outsb
les
nop
fdivp
in
push
push
fs
fs
hlt
test
out
inc
testb
push
jmp
popa
je
dec
push
mov
dec
dec
xlat
add
mov
pop
loopne
pusha
ljmp
aam
inc
mov
lcall
mov
loope
test
mov
and
and
push
push
bound
sub
scas
jb
xchg
aas
push
lock
xor
push
flds
out
ja
jmp
mov
pusha
lret
and
cld
pop
pop
sbb
push
aad
aam
fldt
push
cwtl
pusha
outsl
and
test
lods
cmp
push
jns
std
mov
push
and
inc
icebp
xchg
xchg
and
adcl
stc
or
pushf
scas
push
loope
test
hlt
repz
sbb
testb
cmpsl
add
mov
addl
clc
xchg
pop
sti
jle
aad
into
adc
movlps
fisttpll
lret
into
fsubrp
subb
adc
xchg
jle
pop
bound
lahf
hlt
or
adc
cmp
aaa
mov
nop
pop
sbb
insl
sub
pop
dec
lret
test
cli
sbb
in
adc
inc
in
leave
jne
inc
push
adc
lods
fstl
push
push
or
das
movsl
repz
inc
and
call
pusha
mov
je
xor
test
fcom
and
icebp
dec
cmp
pop
out
dec
inc
js
sub
jp
sub
xorb
pushf
scas
imul
lods
cmpb
pop
mov
sub
lret
dec
insl
inc
ret
push
mov
sub
shl
adc
pop
xchg
inc
sbb
jnp
cmp
push
sahf
xchg
jns
loop
sbb
stc
dec
repz
adc
lods
data16
and
mov
mov
cmpsl
pusha
add
pop
and
int3
xor
adc
adc
push
sub
pxor
andb
movsl
pop
nop
xchg
shll
push
xor
mov
popa
dec
pop
js
repz
ss
sbb
jle,pt
mov
or
jl
mov
cmpsl
adcb
lret
loope
xchg
adc
ja
lds
fists
jl
icebp
add
mov
ja
aam
mov
lock
cmp
push
or
aaa
testl
jecxz
push
aam
mov
adc
mov
push
push
xchg
jne
enter
leave
shrl
cmpsb
lods
arpl
push
jg
adc
mov
xchg
fs
jb
mov
fsubl
jnp
lret
mov
push
dec
mov
leave
std
xor
and
or
mov
sbbb
push
push
insb
das
sbb
adcl
and
dec
inc
adc
mov
inc
int
adc
mov
repz
mov
add
pushf
push
mov
adc
nop
loopne
and
pop
lcall
xchg
aam
and
daa
inc
mov
cmp
push
cmpsl
test
fldcw
decl
mov
mov
in
jo
adc
jmp
adc
mov
cmp
inc
repz
mov
ret
mov
imul
pop
in
aaa
mov
mov
sti
cmp
fnstenv
xchg
cmp
jge
dec
fucompp
sub
xlat
ss
sahf
aad
push
data16
int3
adc
xorb
inc
cmpsl
push
sub
cmpsl
mov
ja
aad
lcall
mov
push
cmpsb
dec
and
sub
pop
into
mov
out
and
cmp
das
insl
mov
int3
pop
movsb
xchg
add
jge
xchg
leavew
ja
pop
sbb
jne
in
aas
jbe
mov
adcl
loopne
idivb
mov
inc
inc
jae
sub
movsb
xor
out
or
fisttps
dec
es
push
testb
add
out
roll
stos
int3
pop
jle
mov
fmuls
cmpsb
mov
sbb
inc
mov
push
out
xchg
mov
aad
mov
ds
cli
lahf
loope
js
sbb
sbb
xchg
cmc
mov
popf
std
sub
jo
cld
cmpsb
mov
fiaddl
shrl
sbb
lea
in
cli
or
mov
mov
sti
sub
xchg
sub
repnz
jns
mov
mov
xchg
adc
cmpsb
jae
push
mov
sarb
je
mov
rolb
lds
mov
jns
lahf
ja
in
pop
jmp
loope
or
shlb
mov
sub
inc
loope
stos
push
xor
imul
lods
adc
rorl
pop
pushf
dec
xor
xchg
dec
lds
jno
xchg
movsb
hlt
fistpll
dec
rcr
mov
cmp
adc
mov
jp
enter
push
add
enter
sub
fst
push
mov
ficoms
or
jbe
mov
popf
mov
mov
inc
jbe
aas
ret
cmp
sti
repz
sub
cmp
sbbb
xor
je
mov
leave
push
repnz
cmp
outsb
clc
in
cltd
shlb
pushf
sub
imulb
cmpsb
test
pop
push
mov
sbb
js
ficoms
js
mov
ret
mov
movsl
dec
mov
sbb
sub
cmp
and
dec
cs
mov
add
inc
mov
aaa
adc
std
cmp
mov
mov
and
xchg
adc
arpl
push
or
stos
rcl
push
pushf
fwait
and
mov
movsl
xor
in
test
clc
das
push
jno
call
pop
mov
ret
fcomi
rolb
xor
add
mov
and
addr16
imul
pop
ljmp
inc
lahf
or
adc
push
jbe
outsl
cld
dec
js
ret
adc
clc
cld
jl
fdivs
orb
inc
lahf
out
push
adc
ljmp
or
gs
pop
jbe
lods
push
pop
cmp
je
cs
xchg
push
jecxz
mov
cmc
stos
jns
cs
add
push
push
jg
inc
jmp
push
fldcw
dec
mov
out
adc
popa
push
into
std
ficoml
xchg
jmp
dec
cli
sub
daa
sub
in
jg
pop
cmp
hlt
es
cwtl
pop
mov
sbb
adcl
fisubrl
ret
sahf
testb
jle
mov
xor
outsl
jp
sub
inc
dec
adc
mov
sub
out
movsl
lds
scas
aaa
push
mov
cmp
mov
repnz
and
ljmp
mov
dec
scas
stos
scas
mov
push
ja
cs
mov
xor
fidivrl
jecxz
es
hlt
sbb
jmp
movsb
sub
ss
mov
fsubrs
lock
add
iret
fnsave
adc
push
movsl
pop
js
cmp
into
adc
or
rep
rorb
or
jno
lods
das
ss
sarb
aaa
movsb
adc
pop
cltd
adc
xor
sbbb
ljmp
mov
mov
ja
dec
add
sub
add
adc
xchg
push
mov
dec
ljmp
sub
aad
pop
es
xor
aas
and
add
int3
mov
mov
aaa
int
idivl
fdivp
fstpt
or
test
out
xchg
mov
jno
xchg
cwtl
mov
mov
jne
lods
push
or
xchg
pop
mov
mov
in
mov
sar
or
sbb
popa
sub
pushl
and
std
mov
inc
das
push
cmp
mov
jns
test
gs
inc
es
mov
xor
or
xor
fnsave
mov
pop
jno
push
push
push
popf
inc
mov
push
iret
adc
aam
jmp
sub
mov
fnstcw
dec
cmp
pop
shrl
aas
ljmp
dec
lsl
adc
dec
inc
xlat
gs
fcoms
dec
call
mov
add
in
xor
pusha
data16
and
les
pop
xchg
pop
sub
mov
inc
adc
jp
pop
repz
mov
jmp
pop
mov
cli
inc
fucomi
movl
pop
cmpsl
adcb
test
inc
adc
ja
mov
and
lret
cmp
insb
ss
pushf
push
jns
mov
jne
push
mov
loopne
dec
mov
mov
pop
in
sbb
sbb
sub
mov
jg
mov
mov
ljmp
mov
insb
mov
jge
stc
out
mov
jo
jns
rcr
mov
stc
shll
xlat
sub
sbb
inc
loop
xchg
imul
push
outsl
inc
imul
in
mov
movsl
iret
xchg
in
loope
clc
xor
xchg
loope
enter
fucomip
fmuls
es
pop
jp
jmp
movsb
mov
push
xchg
add
mov
popa
loopne
mov
sbb
lret
and
push
push
movsl
mov
dec
int
popa
mov
pop
xchg
enter
lea
and
mov
orb
stos
icebp
mov
fidivs
jae
fiadds
lods
mov
pop
into
outsb
add
and
call
xor
jl
in
and
cli
cwtl
inc
inc
js
mov
mov
mov
mov
loope
cmp
push
inc
cld
adc
mov
mov
adc
dec
dec
out
push
dec
in
jecxz
sub
outsb
cmpl
out
xor
jge
ficompl
and
ret
je
sub
adc
ret
sub
fdivrp
xor
mov
lods
fwait
or
pop
xchg
jmp
cmc
ljmp
rcrl
xor
repnz
aas
mov
divb
or
loopne
ja
enter
mov
fldl
frstor
inc
popa
fwait
mov
gs
dec
cmp
shrl
mov
mov
pusha
movb
flds
das
lds
sub
repz
lahf
pop
lds
iret
cltd
ret
cmp
sbb
lcall
mov
inc
fists
sub
int3
sub
mov
loope
push
adc
inc
dec
hlt
ror
daa
sbb
add
sbb
inc
sub
lea
push
ljmp
fstps
mov
sbb
or
mov
mov
mov
fidivl
out
and
inc
je
inc
and
jge
mov
ror
xchg
jo
push
in
stos
outsl
fwait
jmp
cmc
dec
clc
inc
adc
cmp
pop
xchg
cmp
push
mov
mov
sarl
xchg
xor
xchg
push
pop
mov
and
call
cltd
fisubrs
cmp
and
adc
inc
sbb
mov
call
and
into
jl
jecxz
arpl
or
push
add
cmp
pop
and
insb
das
jns
shll
jb
cmp
int
inc
or
push
sub
daa
dec
sahf
mov
cmp
inc
adc
out
lock
pushf
push
jle
fwait
add
mov
call
or
nop
test
cltd
sbb
dec
and
lcall
shrb
inc
outsl
cltd
jae
hlt
jge
test
inc
je
je
loope
push
repz
movb
mov
push
mov
lods
inc
adc
popa
inc
or
jp
and
rorb
push
jge
push
or
sti
jae
xchg
frstor
mov
dec
gs
je
enter
and
je
push
rcr
and
popa
pop
testb
or
xlat
int3
lahf
jb
lret
shrb
xlat
lret
sbb
mov
gs
xor
sub
xchg
jle
mov
sub
dec
test
or
pop
adc
xor
fistl
loop
mov
scas
mov
les
xchg
rcrb
out
and
push
aad
mov
dec
rol
and
das
in
in
les
push
adc
mov
adc
lcall
adc
frstor
cltd
dec
lret
insb
loope
sbb
xor
arpl
sbb
movsb
shlb
mov
xor
mov
mull
push
scas
in
repz
das
jmp
xchg
inc
rcr
popf
negl
or
jle
mov
sub
jno
pop
addr16
or
sub
adc
cltd
add
sti
adc
stos
jecxz
lcall
push
or
xchg
mov
pop
es
aam
aam
adc
add
sbb
mov
mov
int3
push
and
clc
inc
lods
lea
dec
mull
adc
push
inc
push
add
enter
xchg
xchg
std
jp
cmp
jne
pushf
mov
cmpsl
xor
dec
jle
pusha
jge
sbb
dec
icebp
call
sub
cmp
push
xchg
aas
sub
sbb
fildl
testl
clc
and
sahf
mov
push
adc
imul
pop
icebp
mov
movsl
je
cld
fisubrl
ffreep
dec
insb
sti
push
mov
sbb
lahf
dec
call
sbb
int3
sbb
mov
shrl
ss
in
repz
jmp
xor
sbb
mov
roll
sbb
jge
repz
sbb
aaa
push
push
jmp
or
mov
bnd
mov
sub
cmpsl
cld
lcall
push
inc
adc
cmc
add
notb
jmp
xchg
aam
das
jmp
loope
mov
mov
jno
cmp
stos
out
call
fldcw
push
or
mov
xor
or
hlt
and
mov
test
xor
loopne
xchg
or
pusha
add
shlb
pushf
and
push
aas
lret
into
outsb
dec
dec
clc
ja
movsl
push
shll
cld
enter
test
jbe
in
inc
cmp
push
pusha
add
pop
or
dec
sahf
arpl
loop
add
dec
pop
mov
fsts
mov
push
out
add
xchg
xchg
repnz
jb
mov
mov
lahf
lds
fstpl
sbb
cmp
and
add
ds
sub
cmpsb
iret
push
jno
add
jo
jp
ds
popa
dec
xor
sub
movsl
addl
jmp
and
mov
in
out
popf
dec
jb
xchg
rolb
ss
sbb
mov
fcompl
or
shll
xor
mov
sar
cmc
movsb
movsb
jecxz
xlat
repz
ja
pop
movsl
cmc
mov
mov
xor
sti
cmp
jle
lods
mov
xchg
xchg
lods
andb
cmpsb
xor
xchg
cmp
pop
or
jge
fnsetpm(287
mov
dec
push
dec
enter
arpl
pop
clc
orb
cmpsb
cmc
inc
mov
out
cli
or
xor
pop
inc
mov
stos
iret
sti
insb
iret
scas
or
bnd
test
add
lret
fwait
cli
xor
mov
xor
pop
and
push
outsl
push
sub
jne
fwait
das
xor
mov
mov
cwtl
sub
push
outsb
xchg
das
into
inc
out
mov
pop
ficomps
lds
les
push
mov
daa
ret
iret
sub
or
xchg
xor
orb
add
repz
mov
sbb
inc
mov
sub
ss
pop
outsb
mov
jne
js
xchg
adc
dec
jp
lcall
mov
iret
fadds
pop
xchg
inc
or
aad
sbb
sub
lods
sti
dec
stos
incb
cmp
mov
insb
pop
cmp
inc
mov
dec
xchg
rcl
sbb
loop
int
fdivs
xchg
sbb
push
fdivl
stc
ljmp
and
cmpsb
dec
jge
cltd
mov
sub
or
xchg
and
pop
dec
das
xor
gs
adc
xchg
lock
lahf
insl
repz
popl
enter
add
xchg
faddp
mov
sbb
dec
scas
outsl
fcoms
fimuls
rcrl
movsb
aaa
flds
leave
push
loope
pusha
movsl
mov
xchg
mov
push
je
inc
sbb
inc
inc
lock
fistl
fsubrs
sahf
push
jo
mov
loope
dec
aaa
mov
cmp
xor
mov
adc
push
or
cltd
bound
adc
fdivl
add
xchg
sub
imul
mov
jmp
fists
adcl
pop
cmp
jno
push
xchg
shr
shlb
xchg
mov
mov
dec
or
ret
sbb
lods
shll
ret
subb
push
mov
mov
pop
jns
inc
push
mov
sahf
jge
or
ret
mov
frstor
jmp
lret
mov
aad
mov
hlt
icebp
std
pusha
sub
mov
cmp
cmp
push
mov
or
xchg
cltd
test
sbb
fcomp
inc
push
xor
xchg
lret
fcoms
shll
or
ss
and
sar
pop
sbb
popa
dec
and
xchg
bound
std
pop
lods
roll
mov
dec
loop
stos
test
ret
lcall
ljmp
adc
xchg
test
add
and
dec
and
mov
adc
xchg
imulb
shrl
insl
and
jl
shr
adcl
loop
inc
lret
fbld
or
adc
sbbl
push
jmp
test
stos
cwtl
ja
push
dec
stos
xchg
mov
ficompl
in
movsl
push
sub
xlat
xlat
sub
cwtl
decb
or
lret
popa
sbb
fmull
pop
and
xchg
outsb
in
push
inc
xorb
stc
lret
jg
aad
adc
add
divb
into
and
insb
adc
cltd
and
mov
adc
std
inc
scas
pop
pop
jae
call
adc
fldenv
add
cli
xor
cmp
pop
lods
pop
mov
sub
adc
out
movsl
int
inc
fld
dec
out
ret
push
call
sub
adc
mov
inc
and
jg
fidivl
cmp
pop
das
aaa
mov
or
jnp
adc
jecxz
add
lret
frstor
xchg
sbb
push
outsl
and
stos
mov
adc
dec
sub
dec
fbstp
nop
sbb
sbb
jno
pop
jle
adc
imul
adc
fldenv
ss
cmpsl
sbb
hlt
sbb
or
inc
mov
es
cmp
adc
repnz
jecxz
in
out
sbb
or
xlat
fisttpll
mov
jmp
cmp
xorl
dec
sarb
mov
sub
mov
sub
xor
loope
insb
lea
pop
inc
arpl
adc
int3
or
mov
and
gs
sub
jp
mov
out
sbb
or
into
shlb
outsl
mov
push
andl
and
mov
jmp
mov
out
add
leave
frstor
lds
aas
sub
clc
andl
jl
iret
adc
add
dec
movsl
cltd
jge
enter
fsubp
push
nop
ficoms
inc
push
xchg
push
in
popa
mov
in
mov
inc
cmp
das
negl
xor
test
std
sbb
daa
sahf
outsl
dec
mov
fisubl
mov
gs
adcb
jecxz
hlt
popf
mov
sahf
xchg
in
jns
dec
mov
inc
gs
dec
pop
sti
inc
dec
adc
jbe
andb
mov
mov
fwait
add
xchg
cmp
dec
mov
test
loopne
ljmp
sbb
push
inc
dec
mov
xchg
mov
scas
mov
pop
xchg
out
aad
test
sub
out
mov
push
dec
push
rorb
adc
mov
insl
mov
adc
and
push
js
pop
insl
fistpl
xchg
pop
push
xchg
cmc
xlat
out
sbb
loopne
fimuls
xchg
mov
mov
fistpl
push
jp
in
insb
in
adc
jo
dec
mov
add
roll
das
push
push
jb
pop
inc
fadd
mov
mov
push
add
add
mov
loope
mov
aas
iret
push
dec
sti
pushl
in
movl
mov
cmc
inc
rcrb
xor
jge
outsl
xchg
leave
xchg
inc
sbb
mov
test
xchg
lahf
cmpsb
gs
mov
in
idivb
aad
pop
stos
arpl
iret
jae
pop
push
mov
out
fcompl
cli
test
out
pop
je
push
rcr
fs
sub
dec
cmp
push
push
mov
test
pop
dec
pusha
mov
sbb
pop
xchg
fstp
mov
stc
aad
push
xchg
or
stos
pop
sub
fbld
mov
cld
rclb
xor
outsb
mov
jo
pop
push
addr16
jg
xorb
jecxz,pt
pop
int
ja
scas
cld
xchg
mov
mov
xchg
push
mov
out
jnp
shrb
cli
add
adc
loopne
mov
outsb
mov
scas
dec
stos
imul
cld
xor
dec
aas
mov
adc
decl
fwait
xchg
cs
bswap
jnp
and
and
pushf
and
icebp
insl
ret
rcrb
mov
fwait
inc
add
cmp
dec
sbb
jl
jnp
push
sbb
sti
jns
dec
fsubp
add
testb
sahf
mov
add
aas
xor
rcrl
push
sub
fwait
pusha
in
sar
jno
add
pop
imul
popa
jno
inc
adc
mov
mov
sbb
scas
xchg
lock
mov
or
loop
push
iret
inc
pop
popa
loope
into
adc
xor
fldt
sahf
lock
out
imulb
add
pop
fwait
out
ret
shll
mov
imul
push
add
insl
imulb
mov
jmp
pop
inc
xor
sub
mov
sbb
sbb
in
aaa
mov
popf
pop
jg
imul
sub
nop
xor
movsb
repnz
jmp
mov
pop
arpl
push
adc
imul
inc
xchg
pop
movsb
jg
push
jne
push
mov
jne
call
movsb
pop
jns
lods
and
mov
xchg
subl
pop
dec
or
mov
cmpsl
cli
cmp
dec
xor
adc
sbb
call
adc
sbb
push
dec
dec
in
aaa
cmp
cld
out
ss
inc
sub
xchg
jno
cmpsl
rcl
pop
aas
lock
lret
scas
cmp
mov
pop
std
ss
push
push
loop
pop
mov
arpl
fistpl
div
dec
jmp
test
jns
pop
sub
fdiv
mov
sbb
push
jecxz
icebp
mov
xor
loope
lret
jno
das
stc
repz
mov
add
out
mov
adc
cmpsb
inc
xor
or
mov
ds
repz
fsts
jg
sbb
mov
std
iret
ret
clc
inc
jno
cld
mov
ss
out
ret
out
dec
sbb
push
imul
and
enter
push
pop
xor
pop
xchg
loopne
xchg
sti
jno
inc
test
es
push
mov
or
into
je
ja
mov
sub
cmp
xchg
dec
dec
pusha
fwait
jae
scas
xchg
dec
imul
mov
aaa
fsubs
push
jns
mov
xchg
icebp
ss
jg
xchg
stos
lret
mov
mov
push
aas
and
shrl
shll
orl
test
aaa
outsl
lock
pop
xor
loop
push
mov
aas
add
arpl
pop
or
inc
gs
mov
call
fcomi
jmp
aam
xchg
xchg
jo
daa
mov
call
jg
mov
fwait
cmp
sub
out
int3
mov
sub
test
aam
push
jmp
jg
mov
mov
insb
push
mov
popf
aas
jge
sbb
imul
mov
add
lods
adc
cli
dec
shll
pop
pop
add
aam
or
add
stos
dec
cs
push
push
xchg
add
lret
or
jge,pt
inc
or
out
inc
xor
cmp
data16
aas
sub
mov
inc
mov
scas
idivl
test
and
mov
mov
insb
mov
or
pop
pop
xchg
vpmovzxbd
loopne
lds
int
imul
xchg
adc
mov
incl
push
push
int3
mov
test
hlt
out
push
pushf
or
xchg
sarb
pop
loope
add
push
cwtl
jg
mov
cli
mov
call
in
lret
dec
loop
pop
or
cmp
jg
daa
and
scas
sub
mov
mov
sbb
test
push
sbb
imulb
scas
pop
cltd
icebp
in
inc
inc
call
or
cmp
jno
std
sbb
imul
add
loope
mov
out
bound
out
xor
mov
scas
cmpsl
std
loop
sahf
mov
mov
inc
sbb
aam
enter
sahf
bnd
cmp
sarb
and
push
xchg
pop
mov
lret
stos
outsb
and
ljmp
jo
xchg
lcall
jnp
shr
push
xlat
add
jmp
out
or
lods
mov
sarb
adc
orb
xor
xchg
cmc
mov
in
lret
adcl
mov
sbb
ds
or
mov
jno
sub
aam
js
dec
inc
xchg
xchg
adc
cmc
js
inc
in
mov
cmpb
mov
xchg
outsb
push
scas
loope
sahf
pop
dec
loope
xor
mov
inc
sti
mov
pop
shrb
sar
mov
aam
xchg
pop
add
lret
dec
pop
mov
insl
or
aad
in
loope
popa
repnz
pop
or
push
les
cli
xlat
inc
ror
xor
xorb
jne
lods
mov
mov
dec
mov
and
or
outsl
jne
ficoms
mov
inc
push
inc
iret
or
dec
sub
movlpd
mov
cld
push
test
add
mov
jae
pop
dec
mov
lret
out
mov
dec
xor
js
or
xor
pop
test
outsb
arpl
pop
int3
cltd
pop
cli
mov
cli
out
dec
xlat
mov
and
popa
insb
fistpl
dec
fildll
adc
cmc
jbe
pop
jp
aam
or
mov
lret
mov
xorb
lahf
lret
inc
pop
xor
lret
int3
popf
mov
sbb
sub
pop
cmpsl
dec
cltd
adc
repz
jge
fmul
push
jle
cmp
fsts
or
mov
push
sti
or
jnp
js
jns
inc
jo
add
out
sub
in
pusha
push
cmp
repnz
aaa
mov
repnz
daa
out
dec
dec
repnz
sbb
adc
xchg
cs
mov
inc
pop
dec
xchg
adc
movsb
call
inc
cmp
mov
cltd
xchg
jno
daa
inc
add
enter
and
js
add
sub
push
xchg
aam
mov
ja
lret
jl
loopne
clc
pop
dec
ror
leave
addb
lods
lcall
dec
cwtl
inc
testb
pusha
cmp
jle
insb
subl
adcl
scas
insb
fcomps
cli
cmp
sbb
dec
mov
cmp
andl
shrb
adcb
xchg
xchg
mov
mov
xlat
subb
xchg
mov
sub
push
shlb
adc
inc
mov
out
cmp
jp
jo
adc
jl
in
dec
mov
add
mov
sti
outsl
lcall
xchg
out
into
rep
stos
iret
ret
sahf
mov
popa
loop,pt
jne
sbb
cmpl
fsts
lret
scas
inc
sahf
icebp
sbb
lahf
adc
call
jle
lcall
scas
addr16
pop
or
arpl
lds
dec
and
mov
sahf
and
insl
inc
fcmovnu
pushf
movsb
sbb
lahf
jl
divb
adc
cmpl
shrb
in
mov
mov
jns
fsubr
sub
mov
pop
or
mov
push
xor
cmpsb
cmp
clc
jo
push
stos
and
mov
xor
lds
push
inc
nop
or
in
lock
aad
push
push
mov
sbb
mov
jmp
add
cs
sbb
sahf
cltd
ret
pop
inc
sahf
sbb
test
cld
or
pop
adc
lcall
adc
pop
mov
arpl
into
insb
lret
jnp
push
push
icebp
mov
cmp
add
push
add
ss
cmpl
or
xor
daa
mov
orb
mov
mov
cmp
cwtl
or
stc
scas
aad
mov
mov
scas
bound
loopne
jle
mov
xor
sbb
daa
xchg
loop
inc
jg
inc
mov
mov
addr16
mov
pop
cld
dec
in
adc
sub
and
xchg
sahf
loopne
push
jnp
push
cli
pushf
add
dec
incb
cmp
mov
sbb
mov
out
mov
dec
adc
jp
xchg
and
add
xor
jae
push
dec
jmp
aas
dec
push
xor
es
movsb
jp
mulb
sub
popa
scas
rcrb
mulb
sbb
out
fcomps
jae
mov
out
lret
mov
in
shll
sti
icebp
mov
es
adc
divb
movsb
mov
xlat
mov
mov
push
lods
adc
dec
or
jl
mov
scas
adc
sub
dec
adc
dec
push
outsb
decb
adc
sbb
ror
add
leave
mov
jecxz
or
adc
add
sbb
push
jbe
inc
push
adc
fisubs
or
jns
pop
mov
pusha
stos
std
scas
cmpsl
loope
and
shl
mov
push
adc
inc
xlat
lcall
push
repnz
add
mov
je
andb
je
gs
movb
jno
fiadds
jne
xor
daa
mov
ret
xlat
mov
movsl
das
push
loope
mov
add
imul
adc
std
fidivs
lahf
dec
shlb
call
fcompl
push
mov
fs
inc
mov
mov
pop
aad
stos
pusha
xchg
xchg
outsl
sub
andl
cli
mov
or
jo
pop
decb
dec
test
pop
mov
test
adc
loopne
mov
sub
hlt
lahf
int3
pop
hlt
dec
inc
add
out
lcall
sbb
jnp
scas
inc
mov
stos
pop
mov
es
aaa
xchg
jae
xorb
rcrl
inc
jmp
add
arpl
sbb
cmc
mov
dec
pop
adc
ljmp
insl
ror
adc
imul
js
out
add
cmp
and
xchg
push
cmpsb
dec
jo
fcmovbe
into
dec
push
push
dec
pop
add
inc
sti
dec
lods
scas
cmpsb
icebp
out
xor
leave
test
mov
pop
mov
or
mov
imul
push
jl
ds
repnz
add
mov
test
xor
in
pop
pop
and
pop
inc
repz
add
sbb
inc
jo
mov
lret
bound
scas
sahf
repnz
dec
mov
push
add
in
cmp
mov
cltd
xchg
add
push
jle
movsl
test
push
out
xor
sbb
pop
mov
rep
out
add
sbb
ljmp
xchg
leave
scas
jp
jno
adc
adc
push
dec
add
in
gs
hlt
jg
daa
fs
imul
xor
lret
addb
inc
push
jle
inc
or
lds
ds
dec
and
and
push
data16
loopne
fists
cmc
ror
pop
inc
or
or
sub
pop
cltd
mov
shll
sub
es
jp
mov
xchg
mov
cltd
loopne
out
xor
dec
and
cmpsl
jle
sbb
out
lds
adcl
cmp
dec
sar
push
sbb
xor
fistps
leave
mov
rorb
out
arpl
ret
out
lret
mov
in
jb
push
sbb
clc
lods
neg
push
xorl
rcll
lea
imul
aaa
les
nop
insl
popf
xchg
sub
cmc
and
xchg
pop
jecxz
jge
xchg
and
imul
ja
dec
mov
std
sbb
and
jno
jge
iret
sub
arpl
mov
rcrl
loop
movsb
jne
jne
aam
outsb
in
les
ret
mov
mov
jp
xchg
xor
push
imul
mov
lods
inc
stc
adc
shrl
mov
pop
jns
ss
and
les
out
jecxz
lock
pop
pop
mov
cmpsl
xor
jg
xor
movlhps
movsl
jmp
fcmovne
lods
mov
ds
mov
addr16
repnz
outsl
dec
pop
adc
icebp
mov
pop
mov
or
mov
into
ret
xchg
test
stos
fadds
dec
fcoml
pop
and
into
mov
xchg
and
lret
je
xlat
aaa
mov
mov
pop
mov
es
js
adc
insb
mov
arpl
pop
test
inc
jb
fucom
and
mov
jnp
stc
icebp
loope
lret
mov
fisttpl
jge
mov
popa
mov
jb
add
mov
sub
sbb
out
mov
cmpsb
jns
jmp
pop
jle
in
cmp
iret
dec
outsl
jno
adc
inc
sahf
mov
sbb
negl
mov
inc
outsl
in
cmpsb
cmpsb
pusha
insb
insb
cmp
bound
ss
lahf
cmp
or
mulb
subb
jae
popf
pop
push
enter
jno
addr16
xor
push
popf
pop
sbb
jo
leave
mov
cmp
mov
arpl
stos
dec
xor
and
jmp
mov
push
test
sbb
cwtl
clc
cmp
push
mov
cmp
pop
out
sbbl
mov
and
cmp
fisubs
or
xchg
inc
push
jno
imul
movsb
in
xor
pop
add
cmpsb
and
and
in
shr
mov
pop
mov
sub
sub
sbb
in
mov
mov
sbb
xchg
or
in
outsb
xchg
stos
or
dec
hlt
frstor
fstl
and
mov
cmpsl
pusha
sahf
xchg
enter
adc
cmpsb
lret
pop
xor
aaa
movsl
sbb
testb
mov
hlt
dec
outsl
push
test
inc
fstl
jb
nop
sbb
dec
pop
sub
xchg
fmul
loopne
xor
insb
mov
add
mov
or
dec
je
mov
mov
adc
add
out
adc
xor
cmpsl
dec
movsb
daa
sbb
or
xchg
pushf
enter
push
dec
mov
pop
or
xchg
cmpsl
inc
call
call
test
cmpsl
jge
adc
push
pop
jne
and
cmp
jbe
sub
iret
js
mov
popa
pop
mov
out
fcmovu
jne
inc
dec
test
mov
push
sub
mov
in
mov
lret
clc
es
push
outsb
stos
xchg
and
movsl
test
xlat
fidivrl
mov
sub
push
cltd
sub
sbb
inc
icebp
pop
push
mov
gs
shlb
sub
repnz
mov
jp
or
in
mov
xchg
adc
sub
xchg
push
mov
cmp
or
mov
test
and
jp
in
push
in
int
dec
arpl
mov
pusha
loopw
pop
in
imul
jmp
adc
fwait
das
xchg
mov
xor
mov
sbb
pop
aaa
xor
mov
je
movsl
dec
imul
inc
outsl
sub
or
and
aad
mov
jge
sbb
dec
adc
pop
imul
roll
add
into
scas
xchg
pop
sub
mov
jb
ret
push
inc
add
jecxz
add
xor
sub
push
xor
jl
cmp
shrb
sbb
xor
out
daa
pop
jbe
and
testb
mov
jle,pt
jge
stos
pop
xchg
fdivr
xor
fmull
in
mov
push
std
jg
push
sub
mov
std
enter
inc
iret
dec
xlat
or
mov
push
jae
sbbb
dec
cmp
and
nop
mov
add
sub
call
or
and
fwait
mov
push
cmp
out
mov
std
push
in
pop
negb
adc
mov
cld
movsl
mov
repnz
les
std
or
xchg
in
pop
jmp
imul
or
popf
or
cmp
in
jge
dec
jecxz
lahf
mov
sbb
mov
insl
sbb
in
or
inc
daa
sarb
mov
in
mov
xor
out
add
sar
xor
lock
sub
pop
mov
lea
and
push
decb
movsl
dec
jo
jno
icebp
movsl
mov
sub
lahf
sbb
jl
outsl
pop
mov
inc
scas
lahf
repz
cmp
sbb
cmpsl
rclb
push
pop
test
ret
sub
jns
push
xchg
pop
inc
mov
sub
jae
adc
bound
lcall
loop
dec
mov
in
adc
cmp
or
xor
adc
jnp
stos
cmpsb
xlat
das
xlat
dec
stc
leave
das
mov
rcll
test
idiv
cmp
dec
push
or
dec
jp
fwait
and
mov
sub
push
flds
aam
in
push
loope
repz
jg
dec
cltd
test
incb
into
lret
daa
lds
and
fs
outsb
dec
or
push
push
arpl
xor
push
daa
cmp
fcompl
lock
add
push
add
lret
mov
pop
mov
mov
mov
addr16
fbstp
or
jbe
lock
add
push
cmp
aam
roll
sub
or
cmpsl
sub
and
xchg
fistl
into
popf
pop
xor
ret
cmp
mov
loope
pop
data16
push
jmp
dec
push
out
shl
ficompl
pusha
dec
lods
pop
daa
push
in
inc
mov
mov
sti
mov
inc
cltd
or
push
sbb
pop
cltd
adc
loope
ljmp
std
adc
add
in
and
std
daa
or
and
movl
jb
cltd
movsb
push
outsl
and
cli
test
jmp
ficomps
sahf
add
insb
xchg
jno
loope
and
xor
pop
jle
scas
lret
push
pop
dec
push
insl
cltd
jb
fs
push
fildll
jo
iret
shrb
jno
mov
popf
xchg
in
cli
sub
lret
mov
out
cmpsl
xchg
test
xchg
sub
adc
add
nop
pop
clc
testl
adc
loop
pusha
inc
jg
bnd
in
cmpsb
push
mov
out
pop
in
movsb
div
add
xchg
clc
nop
pop
fwait
xchg
fmull
lds
hlt
jmp
loop
pop
jmp
test
sub
call
cmp
aam
loope
fldenv
add
iret
lcall
mov
sahf
repz
clc
cmp
scas
cmpsl
inc
subl
cmp
outsb
add
xor
dec
cmpsl
aas
loopne
mov
pusha
cmpsl
icebp
incb
xchg
sahf
pop
mov
cmc
mov
sub
enter
lret
jb
xchg
sub
adcl
mov
adc
repz
int
bound
fidivrs
add
inc
push
inc
dec
adc
pop
sbb
pop
lea
ljmp
lcall
cli
add
sbb
mov
cmpsb
nop
sbb
adc
aaa
ds
lcall
xchg
adc
adc
push
push
iret
sarb
push
and
in
out
jle
pop
lods
mov
or
sbb
aas
xchg
dec
iret
pop
int
sbb
lock
mov
xchg
mov
test
adc
inc
dec
cmp
sub
ds
sarl
repnz
dec
repz
sub
xchg
mov
lret
sub
jno
fidivrs
ret
cmc
cltd
mov
cs
sub
addr16
cli
xchg
jne
inc
outsl
insl
xor
adc
push
and
movsl
dec
lock
sub
jb
mov
daa
inc
adc
mov
inc
rcrb
pop
dec
aas
mov
xor
xchg
cmc
mov
movsb
jl
gs
mov
enter
mov
mov
test
pushw
ret
xor
dec
jl
sub
std
fwait
sub
xchg
jmp
fisttpl
xchg
push
mov
mov
sahf
mov
pop
mov
test
mov
divl
fwait
adc
not
push
push
imul
and
push
mov
sub
ljmp
xor
call
push
addl
mov
pusha
xor
jns
push
xor
sbb
cmp
push
arpl
push
mov
inc
gs
aaa
mov
or
push
leave
repnz
pop
xchg
mov
das
sbb
mov
sbb
aad
xlat
sbbl
popf
mov
inc
mov
sbb
fimuls
negb
aas
pusha
sarl
mov
js
push
mov
je
dec
mov
xchg
push
dec
cmp
xchg
inc
jbe
in
dec
push
push
lret
aas
add
std
jo
inc
sub
mov
xchg
dec
fnsave
push
int
sbb
sub
jmp
fsubrs
adc
jno
sbbb
lahf
fsubr
stc
je
ljmp
lret
fmull
out
in
xor
arpl
lahf
popa
pop
add
push
popa
xor
orb
icebp
lods
lods
imull
adc
and
mov
fnstcw
dec
adc
hlt
mov
mov
mov
aam
lods
fists
jns
cmp
jo
pop
mov
shl
or
dec
imul
jb
cmp
push
cmp
pop
addr16
mov
dec
push
inc
popf
mov
inc
xchg
or
xor
mov
or
addl
xchg
dec
inc
mov
hlt
idivl
outsl
arpl
clc
push
xor
dec
frstor
int
sbb
sarb
lods
xor
into
ss
xor
loop
adc
mov
pop
push
and
in
add
popf
cld
outsl
dec
or
les
mov
xor
inc
arpl
mov
inc
adc
fcompl
push
mov
imul
cltd
pop
cmp
inc
pop
repz
xchg
jno
cmp
aam
adc
xor
popa
int3
mov
iret
mov
fwait
sbb
add
and
scas
xchg
sbb
adc
dec
mov
jo
stos
push
dec
repnz
out
mov
cmp
xor
aam
sbb
into
xlat
loopne
and
ss
cld
inc
pop
adc
sbb
test
rcl
idivb
add
loope
sub
test
ljmp
cli
sub
in
cmp
loopne
in
sbb
jb
cmp
ja
bnd
mov
jle
mov
arpl
sbb
dec
mov
or
cvtdq2ps
xor
lods
fidivrs
mov
push
mov
inc
cmp
pop
mov
fstl
xorl
mov
enter
push
in
fisubs
das
in
inc
cmpsb
popa
movsb
test
cmp
and
cli
pop
push
lret
cmc
inc
popa
loopne
cli
data16
xchg
push
lods
mov
dec
xchg
fimuls
push
mov
pop
repnz
lret
and
std
les
into
test
movsb
xchg
adc
es
push
jmp
mov
testl
jge
rorb
cmp
mov
xor
adc
inc
adc
xchg
int
outsb
mov
addr16
hlt
cmpsl
xor
xor
addb
adc
ret
dec
pop
std
sti
lock
mov
lock
jne
inc
fistpll
aas
inc
add
repnz
sub
popa
inc
les
addr16
jo
aaa
xchg
imul
mov
out
xchg
mov
jae
and
js
jo
mov
insl
and
fidivrs
mov
jmp
nop
mov
jae
pop
pop
sti
xor
add
pop
jmp
in
xchg
call
leave
lret
dec
lahf
arpl
cmp
dec
rdpmc
add
mov
sti
push
xor
es
jae
rep
xlat
jae
add
cld
cmc
mov
jbe
mov
lds
sbb
fisubrl
mov
xor
test
hlt
rol
pusha
add
testb
sub
pop
enter
out
out
je
pop
pop
pop
xlat
out
xlat
push
imul
hlt
jno
mov
mov
sbb
aas
in
jb
mov
testb
pop
add
push
inc
cmp
mov
jo
lods
fs
ss
insl
js
popa
jg
lcall
push
dec
fwait
push
aas
cmp
adc
popa
mov
movsl
aaa
sub
ret
loop
xchg
or
imul
in
aaa
fisttpll
add
imul
and
mov
xor
or
sbb
and
movsb
dec
jge
das
repz
pushl
inc
cmpsl
push
bound
sbb
cs
add
movswl
dec
inc
adc
inc
cmpsl
into
into
dec
aam
out
cld
jb
push
ss
xchg
lea
xchg
jnp
add
or
mov
or
out
mov
cwtl
in
mov
and
and
jle
fiaddl
popf
mov
xor
push
lahf
enter
sub
cmp
cmc
push
cmp
dec
add
add
and
int
mov
imul
xor
cmp
cwtl
jp
inc
inc
into
ret
xchg
sbb
and
enter
mov
das
lret
lcall
int3
aaa
add
cmp
jmp
aad
enter
iret
insb
sbb
xor
es
in
out
repz
out
aaa
cmp
cltd
and
dec
mov
jno
dec
and
or
push
fidivrs
pop
or
sub
adc
sub
scas
push
sub
mov
out
scas
in
loop
jae
sub
in
fsubrl
xchg
sarl
in
jbe,pn
pop
cmp
pop
mov
jnp
out
sbb
mov
xchg
negl
rcll
ss
push
mov
enter
xor
and
xor
pop
push
js
rclb
stos
mov
je
jne
cmp
jne
pop
jo
jnp
and
inc
push
xor
push
jbe
xchg
or
lock
adc
sbb
jae
das
addl
lret
sbb
mov
ss
push
xchg
or
xchg
fmull
push
add
imul
push
test
and
push
call
ljmp
mov
loope
ja
movsb
je
mov
cmpsl
pop
mov
xchg
movsl
inc
jno
int
dec
mov
es
or
pop
sbb
incb
stc
jne
lret
fistpll
add
push
and
dec
mov
push
pusha
mov
lret
pop
sahf
shll
fstpt
pusha
mov
fnstsw
out
cmp
dec
mov
int3
mov
vpshlq
xchg
pop
into
and
movsb
xchg
test
xlat
arpl
divl
lock
and
jge
mov
sahf
add
ret
test
sub
mov
movmskps
mov
fwait
into
pop
flds
arpl
pop
sbb
push
mov
cmp
mov
xor
cmpsl
test
inc
mov
sub
in
xchg
add
push
pushf
into
sbb
rcll
and
dec
fldenv
jno
insl
setno
ret
stos
adc
jp
xlat
subl
loope
pushf
imul
mov
adc
out
aam
scas
ror
mov
dec
idivb
outsb
aas
loopne
jno
clc
add
pop
pusha
mov
xchg
adc
flds
cmp
adc
pop
addr16
cmp
scas
inc
dec
int3
push
mov
clc
stos
cli
push
xor
dec
popa
mov
fisubs
insl
jbe
push
jnp
xor
xchg
nop
std
cs
insl
pop
sahf
stos
xchg
xchg
mov
adc
mov
es
xchg
lret
mov
cmp
dec
pop
lahf
cmp
pop
add
mov
out
mov
fisttpll
push
sbb
in
or
inc
mov
mov
or
xchg
xlat
push
mov
imul
mov
inc
pop
push
xchg
mov
xchg
aaa
mov
leave
push
cmp
dec
ljmp
fs
xchg
in
add
cmp
out
shl
in
xchg
and
push
cmp
jae
adc
insb
add
pop
jne
in
mov
jae
test
sub
aad
nop
add
enter
adc
test
mov
rcrl
jns
inc
test
mov
fstpt
das
hlt
pop
xchg
loopne
push
aas
addr16
push
mov
enter
es
aam
mov
stos
loop
push
aas
imul
in
stos
cli
imull
imul
fstl
pushf
ja
and
addb
or
jp
fcmovu
and
mov
or
stos
xchg
sub
cmp
movsl
push
mov
imul
sub
ds
or
imul
fwait
sub
mov
sti
sbb
sbbb
cmp
lods
insl
insl
mov
ljmp
jns
int
fbld
pop
push
cltd
dec
shl
jle
xchg
cmpsb
inc
icebp
aaa
inc
push
sub
ret
inc
sbb
popa
repz
outsl
ja
xor
inc
push
adc
nop
mov
lret
outsb
mov
adc
test
cmp
jge
or
ret
iret
popa
xchg
xchg
cmp
fisubrs
push
push
loopne
loope
sbb
les
mov
jmp
stc
aaa
repnz
enter
das
int3
sbb
cs
inc
mov
jnp
mov
mov
mov
dec
xor
dec
add
fwait
jae
xchg
or
mov
jmp
es
pop
adc
pop
sbb
out
sub
cltd
push
cmpsb
sarb
cltd
and
sbb
xor
js
pop
mov
xor
cltd
push
cmp
xor
aas
cmp
adc
inc
inc
adc
fcmovnbe
pushl
xchg
outsb
push
sti
mov
repnz
dec
cmpsb
sub
adc
jnp
and
outsb
scas
sahf
cmpw
mov
in
cli
jae
jo
aam
stos
and
adc
push
push
call
xchg
mov
xchg
pop
sbb
jno
stos
push
jg
popf
inc
add
movsl
imul
pop
push
mov
out
mov
xor
mov
dec
outsb
xor
push
rcr
adc
push
dec
adc
stos
fistps
andl
fs
jle
jb
or
minps
fs
popf
cld
ret
pop
adc
ss
cltd
pop
addr16
jbe
rclb
xchg
lret
push
jo,pn
bound
je
push
test
sbb
add
push
imul
mov
inc
jecxz
inc
enter
cmc
inc
jbe
mov
sub
inc
ret
cmp
xor
mov
aad
es
shlb
or
add
fsubrl
push
and
pusha
test
lret
lds
jmp
lahf
out
mov
iret
ds
dec
test
int3
pop
testb
pop
shll
mov
fidivl
mov
sbb
sbb
lds
roll
out
xor
push
test
add
lcall
push
clc
cld
scas
and
dec
cmp
dec
das
jae
xor
loop
jp
scas
xchg
adc
pop
adc
xorl
rorl
shll
mov
loopne
shlb
notl
imul
sbb
test
jmp
rcl
sbb
cmp
inc
sub
pcmpgtb
and
mov
pop
xchg
push
adc
test
jmp
jo
push
ret
push
inc
sub
jnp
add
js
inc
ret
push
cwtl
outsb
std
adc
adc
xchg
add
dec
hlt
xchg
xchg
stos
aam
in
push
xor
inc
ljmp
das
aaa
jo
repz
in
cmp
les
pushf
outsb
sub
ret
cmpsl
pusha
sub
add
inc
push
jnp
fisttps
mov
adc
enter
aad
push
pop
jns
sbb
popa
jg
or
mov
pusha
pop
dec
mov
int
dec
dec
push
pop
pop
js
mov
cli
mov
jb
jp
das
pop
cmp
imulb
pop
std
je
ljmp
mov
sarl
mov
sbb
insb
int
int
mov
mov
jno
gs
arpl
pop
mov
pop
inc
outsl
xchg
inc
mov
xchg
fistpll
or
inc
outsw
mov
or
cld
jg
shrb
mov
xchg
inc
stos
sbb
mov
inc
fisubs
cmpl
mov
pop
hlt
and
fnsave
rol
xor
xchg
shl
fldl
add
dec
cld
fstpl
lret
cmp
inc
xchg
loop
push
outsl
sbb
adc
add
and
mov
xchg
pop
mov
pop
and
sub
jg
icebp
dec
cmpsl
pop
std
gs
inc
shll
inc
int3
sahf
adc
cs
inc
cld
arpl
cltd
rcll
and
and
xchg
push
xchg
roll
lods
hlt
leave
and
add
out
push
arpl
pushl
mov
stos
jns
in
mov
cltd
cli
repnz
lds
fcmovb
or
xor
idivl
mov
jmp
loope
frstor
fdivl
fnstsw
sub
lea
repnz
fisubl
mov
push
std
scas
aam
mov
mov
mov
lret
fldcw
sbb
movsb
add
aad
jnp
pop
stos
adc
jno
or
xchg
dec
outsl
push
stos
leave
xor
push
adcl
sarb
loop
push
ficoml
inc
xor
test
add
inc
ljmp
adc
addb
popa
mov
imul
bound
test
jnp
and
ss
sbb
jne
jnp
xor
lods
pop
std
dec
push
or
sub
xor
sbb
or
or
nop
jne
lock
mov
xor
inc
fsubrl
mov
xchg
out
adcl
xor
mov
add
xchg
inc
jbe
out
idivl
ret
movhlps
push
sti
inc
pop
outsl
push
int
push
mov
add
and
sti
aam
and
jbe
pop
pop
inc
add
std
pop
mov
or
pushf
dec
stos
pop
mov
mov
addr16
inc
dec
dec
enter
cmc
sub
ja
mov
pop
sub
imul
bound
mov
sbb
leave
xchg
jmp
dec
cs
cli
or
push
sub
or
xchg
imul
pop
fistpll
xor
dec
arpl
aad
sbb
std
mov
leave
lods
mov
and
dec
in
cs
mov
push
xor
xchg
test
dec
inc
imull
dec
fisttps
xor
stos
mov
insl
cli
test
push
mov
pop
adc
fldpi
and
int
mov
inc
cmp
pop
mov
mov
or
inc
dec
repz
add
call
adc
jns
or
pop
sti
push
mov
fistps
and
lods
cmp
xor
lods
and
push
lods
mov
bsr
cmpl
inc
add
daa
push
shll
jp
lcall
sub
push
push
jl
push
rorb
add
mov
mov
mov
js
ret
pop
pusha
mov
and
icebp
mov
jg
in
cmpsb
sarl
sbb
mov
int
xor
sbb
daa
sbb
roll
xchg
iret
stc
jmp
popf
out
cmp
push
sub
fstpt
mov
push
sbb
cmp
sti
scas
daa
fs
pop
pop
mov
xchg
xorl
sub
sbb
pushf
inc
lods
in
scas
and
xchg
loope
jle
lock
lea
ficompl
jns
adc
pop
lahf
loopne
xchg
orl
shlb
loop
jbe
mov
int3
lcall
icebp
fsubs
js
and
std
out
cmp
adcb
fwait
ret
jecxz
repz
xor
loopne
xor
idivl
test
das
stos
enter
mov
gs
mov
dec
xchg
adc
mov
hlt
test
lahf
and
jmp
ror
push
xorl
ret
dec
and
jmp
jge
pop
stos
inc
cli
mov
lock
sbb
repnz
mov
xchg
push
in
scas
fnstcw
push
dec
idiv
arpl
sbb
pop
add
jl
in
mov
inc
or
adc
shl
test
ljmp
pop
adc
outsb
xchg
mov
xor
xchg
fwait
popf
sub
cs
and
and
movsl
xor
xchg
fcomp
lock
nop
outsb
arpl
cmp
jbe
les
inc
adc
out
and
outsl
out
std
or
cmp
jge
scas
mov
jecxz
sbbb
adc
lods
in
jno
lcall
push
mov
cmpsb
lock
scas
xor
cmc
cmpsb
mov
push
fsubrl
sbb
pusha
jne
lcall
imul
arpl
jo
out
xchg
pop
add
sahf
mov
scas
push
gs
out
cmpsl
std
addr16
dec
sbb
rcl
je
loope
xchg
sarl
cld
xor
inc
jle
mov
pop
or
xor
dec
and
inc
orl
out
mov
push
push
xor
out
jno
movsb
into
in
inc
rol
lahf
push
xchg
and
inc
jmp
inc
jge
sbb
andps
pop
stc
ret
add
int
mov
pop
or
dec
xor
add
stos
adc
pop
xchg
lret
pop
rorb
out
mov
aam
out
xor
adc
and
insl
mov
cwtl
aam
sbb
or
push
int3
or
mov
sub
lret
scas
psubw
stos
push
dec
test
out
push
popf
xchg
lea
orb
lods
cmc
mov
out
add
mov
xchg
js
stc
ss
cmp
cmpsl
sub
div
add
jae
adc
mov
xlat
pop
shl
mov
pop
xchg
fistl
cld
mov
daa
xor
jo
push
imul
dec
mov
into
cli
adcl
mov
lret
cli
stc
stc
std
adc
push
imul
and
add
adc
inc
push
shlb
setp
push
mov
outsl
add
lds
and
out
add
cmp
scas
lcall
sub
fwait
add
sub
scas
loope
push
std
icebp
mov
cmp
outsb
xrelease
incl
dec
xchg
in
pop
ret
outsb
outsb
mov
pop
sub
es
sbb
aad
add
and
aaa
or
ljmp
push
mov
lret
iret
jno
ret
lods
daa
cmp
push
pop
rcll
add
ds
push
cmp
cs
adc
xchg
sbb
gs
repnz
adc
mov
dec
mov
and
cltd
push
adc
add
bound
jg
mov
pop
xchg
mov
enter
bound
out
mov
loope
pop
sahf
in
into
imul
cmp
inc
inc
push
push
push
inc
insb
xchg
cmp
push
aaa
or
xchg
xchg
aad
push
iret
cmp
mov
jp
out
fidivl
stos
repz
out
pushf
mov
jae
mov
es
outsb
mov
dec
dec
daa
and
lret
ret
incb
adcb
es
daa
fs
jb
mov
pop
mov
xchg
and
nop
in
insb
clc
test
and
mov
cmp
aas
mov
loop
or
push
lret
daa
mov
inc
mov
les
repz
fdivs
lock
jl
nop
push
dec
into
mov
movsl
jg
shrl
cmpsl
test
dec
test
in
push
mov
cmc
jbe
std
xor
jecxz
out
punpckhdq
jns
lret
adc
vpmacssdql
pop
lcall
cmp
push
sub
jg
out
les
cmp
add
out
dec
mov
fs
mov
aam
popa
mov
mov
shll
pop
mov
cli
mov
adcl
shll
cld
pop
repz
int
inc
dec
stc
sbb
adcb
adc
lods
das
push
jecxz
xchg
and
xchg
push
fdivs
in
stos
das
sbb
popf
shl
lahf
cmp
cmc
push
iret
pop
imul
call
cld
mov
pop
jl
inc
pop
push
dec
xchg
sub
and
mov
out
mov
xchg
inc
test
or
lods
sub
int
jns
insl
into
movsl
fwait
dec
xchg
roll
adc
out
or
je
push
jb
pushf
imul
or
pop
sbb
adc
rcl
mov
call
and
jns
std
call
xchg
pop
idiv
rcl
push
icebp
stc
sbb
test
mov
inc
xor
cmc
sti
es
repz
stos
lock
xchg
fwait
std
mov
xchg
inc
or
cmp
out
dec
pushf
lock
jo
loope
mov
jecxz
inc
je
mov
imul
jbe
or
popf
xchg
dec
dec
aas
mov
cwtl
xchg
subl
imul
enter
or
pushf
add
and
addr16
push
mov
leave
mov
roll
jle
aam
jl
ret
aaa
sub
aas
adc
xchg
and
sub
push
cs
sbb
movl
mov
add
push
push
stos
iret
stc
outsl
and
addr16
fnstenv
mov
xor
add
and
adc
cmpsl
inc
xor
test
xchg
aam
loop
lcall
cmpsl
stos
adc
gs
mov
fstps
arpl
xchg
imull
mov
lods
movsl
imulb
xchg
push
clc
xchg
and
xchg
shll
xor
cmpsl
imul
pushf
push
aas
dec
xchg
cmpsb
or
aas
movsb
jae
inc
lret
mov
in
xchg
pop
push
or
jo
push
add
adc
ret
inc
pushf
push
xor
sbb
and
shr
jbe
sub
repnz
sbb
or
adc
fs
out
xchg
pop
cmp
test
ljmp
test
push
test
lds
xchg
insb
jge
hlt
aaa
cwtl
and
adc
sub
movsb
sbb
mov
cli
inc
and
bound
jmp
enter
mov
fsts
les
test
push
mov
or
ljmp
or
rcl
insl
xor
repz
lods
and
adc
jns
loopne
dec
push
aas
insb
cmp
pushf
bound
jmp
cli
pop
movsb
je
decl
jecxz
adc
out
mov
inc
fildl
negl
out
xor
and
cmp
daa
pop
jmp
mov
sub
pop
jmp
xor
mov
xchg
int
test
out
test
jno
adc
andb
push
dec
aam
roll
fistl
jbe
pop
xorb
fs
push
cwtl
push
sub
fcompl
mov
dec
inc
frstor
inc
xchg
cmp
pushf
adcl
out
pop
addr16
xlat
ret
test
cmp
imull
push
push
jp
mov
mov
inc
fmul
mov
jmp
test
subb
inc
add
into
jge
xchg
iret
popf
jns
das
loope
movsb
mov
cs
in
jmp
xor
sub
das
push
sbb
inc
into
or
movsl
dec
jp
repz
fs
fiadds
jge
adc
dec
in
jmp
enter
shl
cli
lret
out
xchg
xor
mov
sub
sbb
dec
rcll
in
xchg
jmp
out
mov
push
sub
add
das
mov
jle
in
and
sub
test
xor
lods
ret
and
test
jns
mov
mov
hlt
in
sub
push
mov
pcmpgtw
in
insl
push
mov
fnsave
test
std
dec
cmp
in
cmp
hlt
inc
lret
cld
mov
push
mov
out
loope
pop
pop
sbb
repz
xchg
inc
push
and
push
fucomip
data16
dec
xor
push
insb
clc
addl
lods
lods
jo
xchg
and
ret
ljmp
mov
orl
add
xchg
mov
push
fdivr
push
sub
lret
dec
jb
mov
aad
ds
imul
aad
or
push
cli
or
aad
lock
dec
in
fchs
dec
dec
and
jmp
mov
sub
cmc
or
mov
mov
jecxz
adc
lock
movsb
xchg
push
jo
add
pushf
aas
sbb
outsl
outsb
fisttpl
movsb
orb
icebp
stos
push
lcall
pop
adc
mov
pusha
jg
call
add
repz
mov
dec
mov
push
cmpsb
jecxz
je
cmp
sbb
or
in
adc
xor
push
in
and
xor
mov
and
inc
xchg
dec
lahf
in
stos
jb
out
aas
adc
push
xchg
and
ret
cmp
mov
bound
pop
and
mov
imul
jbe
adc
filds
mov
int3
popa
mov
aam
sbb
data16
push
mov
out
in
call
sbb
cltd
xchg
xor
adc
insb
mov
sbb
or
pop
jg
adc
cmc
ret
arpl
fninit
jmp
stos
mov
adc
push
mov
jo
pop
cmp
cmp
pusha
sbb
mov
push
movsb
mov
fdivp
mov
xor
xchg
lods
lcall
shlb
mov
adc
add
xchg
mov
inc
loop
lock
inc
out
add
js
mov
arpl
mov
lcall
ffree
xor
sbb
test
loopne
mov
int3
or
movsb
fs
aad
lcall
push
jbe
ret
cs
mov
out
fsubrl
dec
pushf
xor
or
cmpsb
mov
mov
or
sub
mov
and
lods
jg
fwait
lods
movsl
jmp
xchg
and
mov
lahf
mov
adc
jp
add
nop
pop
flds
cmpsb
mov
stos
out
test
popa
push
mov
bound
pusha
push
fnsetpm(287
cmp
fisttpl
push
sub
mov
jge
mov
sbb
pop
jns
mov
mov
loopne
add
mov
sub
stos
mov
ja
jl
fsubrs
mov
lds
fwait
ret
lret
les
dec
inc
incb
fs
jle
leave
xor
pop
in
push
mov
jno
leave
mov
dec
sub
cmp
cmpsb
adc
insl
inc
addr16
dec
fmull
sti
xchg
cld
imul
movsb
popa
push
xchg
push
adc
inc
mov
push
clc
test
push
mov
fists
divb
jb
out
dec
fistpl
adc
sub
ror
cs
into
rcrl
sti
xor
inc
inc
rorl
add
ljmp
push
mov
adcb
das
nop
pop
jge
push
lds
xor
iret
in
mov
ja
dec
push
setno
and
rcll
xchg
out
fucomip
mov
lods
add
push
aam
xchg
xor
test
xchg
jge
out
imul
inc
mov
shrb
jp
mov
adc
push
pop
xchg
dec
outsb
fnsave
ja
movsb
ret
int
mov
sbb
push
sarl
out
imul
fs
sti
cmp
xchg
lds
xor
push
rclb
and
mov
mov
aad
mov
mov
jmp
dec
cmc
adc
imul
cmp
push
dec
sub
daa
jne
mov
loop
movb
push
pop
mov
dec
sbb
hlt
cld
xor
insl
pop
out
mov
lea
mov
or
es
out
in
adc
inc
xlat
popf
ds
sub
push
jb
dec
jne
xor
sbb
jns
add
addr16
and
ds
icebp
dec
pop
fbstp
xor
mov
cmp
mov
mov
adc
scas
negb
pop
mov
dec
ffree
xor
cwtl
jp
stc
cmpl
int3
ffree
dec
lds
call
popa
stos
sti
or
cltd
je
lods
sbb
or
pop
inc
out
fsubrs
and
cmpsl
fidivl
add
jbe
lea
lods
inc
imul
xchg
je
sarl
lahf
or
mov
mov
fidivs
fcoms
and
push
pop
inc
inc
mov
jg
cwtl
mov
mov
daa
testl
cmpb
jl
sub
cmp
mov
xor
adc
stc
cmp
sub
cmp
adc
cwtl
outsb
movsl
cmp
sbb
stos
enter
pop
daa
clc
inc
jns
icebp
fucom
cmpsb
lods
icebp
in
mov
outsl
lret
and
ljmp
dec
lret
fnclex
repnz
and
jne
xorl
call
pop
mov
jp
outsb
cwtl
into
shlb
sbb
pop
pop
add
pusha
test
cli
aam
mov
bnd
sbb
ljmp
mov
enter
ror
jnp
outsl
push
cwtl
out
test
outsl
aam
jmp
mov
in
or
hlt
adc
sbb
repz
jge
adc
mov
xor
or
test
gs
mov
sbbb
mov
adc
xchg
rcrb
add
sbbl
lea
mov
lods
inc
xor
sbb
mov
cmp
dec
jl
sub
out
adc
imul
popf
test
leave
or
sub
cmp
inc
aaa
cli
les
and
movsb
or
sub
cltd
cmp
or
xor
bnd
gs
pusha
flds
loop
into
add
dec
leave
cmpb
enter
out
jb
arpl
push
loop
scas
and
fwait
pushf
rorb
dec
pop
int3
push
rcrl
cmp
data16
loop
dec
jne
pop
cmp
mov
or
mov
mov
push
add
xchg
ret
mov
pop
mov
pop
pop
push
mov
push
xor
jae
rorl
test
adc
es
pop
inc
mov
mov
sub
lock
test
insl
cmp
or
adc
xor
jecxz
pop
mov
aam
xor
and
dec
cmp
pop
mov
shll
sbb
outsb
stos
or
insl
stos
addb
mov
jno
inc
xor
out
les
xor
and
lret
pop
dec
mov
int3
mov
or
or
test
and
aam
inc
mov
dec
xor
xchg
loop
std
sub
sbb
repz
dec
cltd
sbb
cli
je
adc
or
mov
pop
call
jnp
sbb
lds
pop
gs
sub
repnz
xchg
cmp
dec
cmpb
mov
xor
js
rcrb
xlat
cmp
xor
cmp
loopne
scas
push
movsl
push
add
pop
mov
mov
push
sar
mov
enter
mov
adc
mov
mov
test
mov
push
fisttpl
pop
into
fs
bound
shlb
fbld
les
ljmp
jl
lret
movsl
add
cltd
push
mov
cmp
icebp
lahf
sbb
je
mov
lcall
test
jg
out
fmul
aad
scas
nop
adc
mov
insb
dec
jecxz
sbb
rcrb
inc
into
daa
jge
loop
movsb
adc
cmpb
add
sbb
pop
mov
push
mov
stos
and
sbb
adc
sbb
dec
movsb
paddw
inc
jae
fs
inc
xchg
sbb
xchg
mov
and
shll
lret
rcll
sti
jl
mov
scas
adc
lds
xlat
inc
loopne
stos
mov
pop
test
in
test
or
out
sub
push
mov
add
push
fstpl
mov
jb
push
add
jge
xlat
xchg
and
cs
mov
and
mov
jno
inc
daa
into
jge
into
fs
loopne
push
test
bound
testb
dec
add
out
pop
push
pop
cs
imul
das
sbb
les
mov
ret
mov
ja
insl
mov
pop
xor
inc
pop
cmp
aam
jbe
lods
outsl
pop
inc
push
out
sbb
sub
adc
aam
test
add
call
dec
test
cmp
or
xchg
jb
popa
mov
add
sub
or
dec
cmp
pop
scas
mov
ficomps
call
pop
dec
ljmp
shll
inc
fcoms
sub
dec
push
mov
in
daa
xor
xlat
es
lret
xor
xor
inc
rol
or
loopne
or
or
mov
xchg
mov
adc
push
push
popf
dec
push
es
add
jge
inc
xlat
mov
inc
pop
jle
popf
xor
movsl
sub
jnp
cmp
lds
sub
pushf
xchg
and
pop
xor
sahf
stc
lods
stc
in
push
stos
mov
ds
leave
sti
aad
fs
les
pop
loope
cmpsl
fcompl
inc
mov
sti
ja
cld
jae
test
mov
movsb
xchg
pop
notb
mov
fdivl
mov
inc
sbb
sbb
or
cmpl
loop
aam
gs
mov
mov
rcll
lds
and
inc
pushf
clc
dec
xchg
pop
push
int3
sbb
out
mov
loopne
pop
sbb
lds
leave
es
out
and
pop
rcrb
jo
inc
test
sbb
jae
add
mov
xchg
mov
mov
sub
call
in
data16
jle
dec
mov
push
icebp
test
mov
cwtl
mov
shlb
jmp
imul
adc
cwtl
add
adc
int
loopne
lock
xchg
push
mov
push
cmpsb
aad
and
inc
das
out
outsb
lcall
sbb
mov
sbb
out
insb
popf
ljmp
stos
ds
out
adc
pop
rcl
mov
mov
cs
inc
mov
jecxz
dec
mov
ljmp
fisubrl
xor
cmpsb
insl
roll
pop
sub
iret
adc
sbb
in
push
mov
jmp
inc
and
cmp
cmp
sbb
cmp
pop
leave
pop
cmpsb
sub
dec
adc
repnz
in
and
jb
jecxz
lret
sbb
xor
pop
sbb
cmp
loope
mov
inc
repnz
mov
push
inc
cld
in
fcomps
das
lcall
inc
jae
insl
into
ficoml
sbb
sbb
pop
lahf
jno
sbb
adc
fdivrs
xlat
in
das
cmpl
mov
jecxz
aad
cmp
add
cmp
jmp
cli
dec
mov
pusha
xchg
pop
icebp
jbe
cmc
jmp
lods
call
in
fwait
ja
setp
movsb
sbb
xor
push
xchg
orl
out
push
out
dec
and
sti
and
movsl
dec
lret
inc
mov
adc
push
xchg
mov
imul
cmp
cltd
mov
jecxz
in
into
or
jno
jb
adc
pop
pop
mov
pextrw
movsl
jl
cmp
adc
daa
cmp
in
ret
or
test
rorb
in
pop
cltd
faddl
sub
mov
inc
jns
jno
xchg
fsubrl
inc
imul
cmp
lods
je
ds
ds
or
mov
cld
outsl
iret
jge
gs
bound
leave
mov
shrb
sub
push
loop
xchg
add
xcrypt-cbc
or
mov
into
hlt
jae
pop
hlt
loopne
add
pop
stos
ds
inc
es
icebp
fdiv
aad
xor
movsb
mov
mov
mov
stos
xor
cmp
fs
rcrb
push
sbb
packssdw
fs
sbb
sub
fmulp
mov
ja
dec
sbb
aad
outsb
lds
stos
jl
xor
dec
cld
rorl
ss
pop
repz
pop
jge
test
inc
outsl
fs
push
ss
jns
std
adcb
pop
call
pop
mov
and
sbb
out
jne
add
inc
jg
adc
std
movsb
xlat
jmp
and
outsb
push
dec
dec
and
mov
rorb
gs
cmpsl
mov
mov
aaa
das
rcrl
inc
lret
pop
xchg
sub
sbb
jge
jecxz
out
mov
push
xor
sbb
mov
aaa
and
leave
clc
imul
idiv
int3
loopne
jb
push
movsb
outsb
dec
and
shll
dec
xchg
test
sbb
add
lods
insb
je
ss
insb
inc
imul
sbb
test
push
mov
mov
mov
js
xchg
lods
popa
out
xchg
sbb
enter
push
push
std
test
movsb
enter
adc
lock
xchg
inc
enter
lret
test
lahf
sbb
test
cld
push
lock
outsb
es
icebp
adc
fidivrl
mov
sbb
in
loope
push
stos
sbb
es
aad
or
push
mov
scas
xor
xchg
add
cmpsl
outsl
sub
dec
imulb
pop
pop
sbb
std
fiaddl
fstpt
fnstsw
mov
mov
insb
lods
shlb
lods
mov
mov
gs
jne
cli
xor
xlat
add
iret
jge
loope
jl
jge
sub
xor
mov
clc
das
push
mov
sti
mov
lods
sbb
and
adc
outsl
or
ss
cmp
inc
js
jg
adc
sub
shr
out
lcall
sub
push
jmp
ret
cmpsl
leavew
cmpsl
lcall
shrl
adc
cmpsl
xor
andl
push
popf
sub
dec
fbld
dec
dec
divb
imul
test
jns
mov
js
cs
imul
jbe
xor
lock
stc
addl
insb
cs
cs
xor
mov
pop
pop
adc
jge
sub
cmp
mov
push
cltd
iret
add
push
sub
cmpsl
pop
dec
sarl
pushf
les
jl
sub
cwtl
jmp
imul
jecxz
mov
mov
mov
adc
mov
decl
or
stos
insl
sbb
cmc
scas
inc
lcall
rcr
dec
inc
xor
xchg
addb
repnz
stos
and
pop
sbb
fnsave
fcomps
adc
lods
fnstsw
loopne
fldt
ja
and
jp
jp
pop
fnstenv
xor
push
clc
into
inc
xor
ljmp
adc
push
aad
fsubl
jmp
add
inc
sti
pop
xchg
shrl
enter
mov
xchg
jecxz
mov
adc
push
add
mov
mov
xchg
cltd
setno
xor
inc
pop
pop
fidivs
or
cmp
loope
push
sub
in
jmp
test
mov
sub
jno
xor
or
ja
pop
test
daa
push
cmp
adc
xchg
scas
pop
and
inc
pop
fcomp
jge
xor
jb
adc
cmp
ficoms
xchg
addb
test
pusha
fstps
stos
jnp
mov
mov
sub
sbb
dec
cld
xor
push
enter
mov
or
sbb
jg
sbbl
stos
mov
and
test
ror
or
push
inc
andb
adc
push
lret
pop
cmp
jecxz
rcrl
mov
dec
int3
and
cmp
mov
sub
mov
mov
bound
test
pop
mov
add
fisubrs
fucomi
test
push
aad
dec
xchg
rcl
icebp
mov
jno
xor
mov
inc
jl
popf
cmc
mov
fwait
sub
sbb
std
xchg
scas
cli
mov
xorb
adc
filds
pop
pop
inc
icebp
push
xchg
inc
sbb
out
mov
icebp
ret
loopne
adc
shr
mov
push
cmpsl
jns
push
je
movsl
sbb
ss
in
xchg
imul
scas
jp
xchg
bound
cmp
hlt
scas
cwtl
mov
stc
jae
and
out
fmuls
jbe
rclb
and
mov
ja
mov
int3
popa
xchg
movsl
sub
lret
jne
aas
fsubl
in
dec
pop
mov
xchg
pushl
lret
mov
or
sbb
stos
subl
and
stos
test
fcoms
rolb
icebp
sbb
sti
inc
push
icebp
dec
outsb
pusha
hlt
pushf
ljmp
lock
ljmp
sarl
pop
xchg
adc
xchg
sbb
addr16
sub
sub
mull
push
xor
lock
push
leave
xchg
dec
or
adc
cwtl
clc
jb
dec
xchg
adc
jl
sub
jmp
xchg
js
lahf
mov
sub
cld
xchg
xchg
stc
mov
rcrl
in
int
dec
aaa
lods
fists
lods
jno
test
loop
sti
loopne
popf
xlat
sub
clc
push
sbb
and
icebp
ja
hlt
adc
inc
dec
mov
imul
rcll
dec
fstpl
cwtl
inc
and
popa
int3
adc
sbb
in
dec
inc
test
nop
sub
and
fldt
dec
cmpl
push
pop
jle
bound
in
mov
jge
pop
test
jle
pop
jp
scas
pop
or
ret
adc
ljmp
pop
xor
xchg
sbb
ucomiss
popl
mov
pop
mov
xor
mov
das
mov
outsb
mov
mov
add
loopne
dec
and
push
fdivr
sbb
and
xor
jns
fisttps
cmp
inc
stos
jg
icebp
leave
xchg
mov
adc
and
fdivrp
adc
xchg
lea
mov
fstpl
je
fbstp
repz
or
cmp
inc
lods
or
insl
pop
push
or
and
fildl
mov
pop
jle
sub
out
insl
cmovge
cmp
cmpb
cmpsl
loopne
loope
mov
mov
iret
leave
in
clc
sahf
jg
fidivrl
mov
sub
in
fs
xchg
jl
dec
sub
or
int
cmpsl
sbb
mov
adcb
mov
clc
test
pop
loope
inc
out
mov
dec
stos
mov
pop
repnz
pop
xchg
mov
shlb
jo
mov
sti
jl
cltd
add
inc
pop
add
fcoms
jo
lock
xchg
inc
jnp
stos
mov
mov
xchg
rorb
int3
mov
xor
out
ret
rclb
push
repnz
jae
ja
jecxz
jecxz
lods
jne
push
aad
jge
outsb
fwait
pop
push
cld
fwait
pop
je
jbe
aaa
hlt
imul
or
scas
out
out
sub
mov
lret
jp
cmpsl
fmuls
pushf
insb
cwtl
and
push
dec
xchg
dec
repnz
or
ss
insl
cmp
jo
cmp
aam
sbb
dec
push
xchg
jbe
insb
popf
cltd
dec
jae
lds
fmuls
lds
rcll
push
loop
mov
sbb
push
sub
sti
data16
repnz
subl
cmp
cmpsl
xchg
nop
ss
or
iret
sbb
sub
sub
rcl
add
aaa
xchg
repz
enter
pushf
xor
inc
cmp
dec
sub
sub
mov
and
mov
or
mov
cmpsl
cmpsl
xchg
shlb
pop
or
hlt
cmp
mov
jmp
mov
add
pop
dec
adc
mov
adc
and
adc
xlat
pop
cmpsl
jle
xor
subl
sub
xlat
and
fmull
cmp
pop
inc
sahf
inc
xchg
jnp
sub
push
out
test
push
mov
mov
out
enter
scas
mov
leave
in
clc
jp
and
sbb
mov
outsl
or
add
xchg
insl
outsl
mov
roll
pop
nop
test
jl
stos
jnp
stc
lods
and
flds
jbe
push
test
mov
mov
ret
xlat
jbe
inc
roll
jle
xlat
ret
imul
pushf
arpl
adc
insb
inc
rcrb
lret
cmpb
xchg
cld
leave
fcompl
jmp
cmp
lods
or
lret
mov
xchg
shll
outsb
adc
cld
push
test
lahf
ss
fwait
push
xchg
and
and
into
aaa
lcall
adc
mov
pop
dec
or
test
jb
fnstsw
push
int
pushf
comiss
mov
pusha
cmp
add
fisubrl
sub
sub
pop
push
sbb
je
cs
jae
sub
mov
lret
loope
pusha
jo
push
jecxz
ret
xchg
sub
cmp
mov
cmp
fs
lcall
outsb
push
repz
arpl
cmpsb
cmpsl
push
adc
jp
jl
mov
pop
enter
mov
std
ja
in
mov
pop
cmp
in
mov
push
mov
mov
cmovle
adc
add
ja
test
mov
lcall
pop
roll
mov
mov
lods
loop
adc
test
mov
mov
inc
pushf
pop
fisubrs
push
mov
jp
icebp
mov
mov
mov
clc
mov
in
and
cmp
dec
push
adc
in
mov
pop
test
lea
pop
lahf
dec
call
std
push
pop
or
inc
fnstsw
call
inc
jg
push
and
xor
add
mov
test
scas
in
jecxz
js
dec
adc
outsb
push
dec
jns
test
cmp
and
outsb
leave
cmp
sbb
sub
push
inc
xor
cwtl
xchg
cmpsb
icebp
mov
mov
shlb
fisubrs
and
bound
mov
andb
mov
and
sub
inc
mov
pop
outsb
mov
and
jge
inc
in
ja
icebp
push
mov
addl
mov
pop
dec
sbb
add
lock
lods
cltd
scas
call
push
sub
or
pop
popf
fistpll
in
in
into
lock
outsb
cltd
inc
sub
pop
fisubrl
and
hlt
jne
xchg
inc
jb
sbb
sbb
push
push
pop
inc
add
aas
in
mov
std
repnz
add
xchg
lea
ljmp
fs
dec
mov
or
add
jl
movsl
notb
mov
add
xor
and
aas
lahf
std
lret
imul
rcl
fs
punpcklbw
rcrl
ret
push
out
es
les
dec
push
or
xor
mov
cmp
cmpsb
push
or
xchg
xor
outsb
sti
mov
stos
scas
test
cli
mov
ret
pop
and
sub
sbb
gs
xchg
dec
push
and
movsb
iret
push
mov
jmp
adc
dec
das
pop
shlb
loope
inc
add
std
aas
in
jo
push
add
mov
fidivs
hlt
jnp
inc
xchg
fistpll
and
ret
add
push
push
sub
or
or
movsl
or
lea
push
sti
lods
cld
loopne
push
testl
mov
sub
jb
sahf
insl
inc
pop
adc
scas
test
aaa
out
add
ljmp
push
negl
push
adc
jl
mov
pop
test
jo
sti
mov
dec
push
stos
push
js
fimuls
inc
les
add
iret
push
addb
div
mov
xchg
addr16
sub
dec
mov
cwtl
add
clc
popf
jno
mov
scas
lret
enter
adcb
outsb
cmpl
dec
fisubs
dec
outsl
pop
aaa
fcmovnu
cwtl
str
cld
lahf
cmc
fs
test
xlat
pop
xchg
xor
or
mov
jb
or
and
or
mov
push
sub
jge
lods
shr
lret
repz
mov
adc
leave
pop
mov
jge
push
or
fisubs
bound
lahf
lds
ljmp
out
rcrl
add
cmpsl
xlat
adc
cltd
repz
xor
sbb
lea
fiaddl
adcl
negl
xchg
call
pop
or
add
xor
dec
jb
or
mov
cli
jo
xchg
sahf
xchg
rcl
sub
mov
das
pop
push
and
dec
adc
in
gs
mov
mov
sti
mov
pop
rclb
std
jmp
ret
mov
fisubrs
sti
jp
int
or
cmp
sub
aam
cltd
mov
jecxz
mov
inc
adc
cli
or
pop
jno
mov
mov
jae
mov
adc
ja
inc
xchg
iret
cmp
mov
add
mov
je
or
xchg
fucom
mov
scas
xor
in
jbe
nop
shr
dec
sbb
cmp
dec
je
out
test
cmc
adc
push
fwait
cmpl
push
add
out
repz
clc
or
in
arpl
xchg
sbb
test
jmp
frstor
or
cmpsl
cltd
and
stos
shr
pop
pop
in
cmp
lret
rcrb
fstp
push
out
out
sub
mov
out
popf
jle
fiadds
bound
dec
pop
xor
mov
gs
int
xlat
xor
inc
fists
fisubrl
cmp
jne
jmp
jo
dec
mov
xor
jno
in
iret
hlt
xchg
incb
pop
pusha
and
cmp
lcall
xorb
sbb
aas
mov
outsl
jnp
pop
add
je
or
mov
lret
xor
insl
les
mov
add
and
out
addr16
arpl
push
adc
inc
psraw
iret
xchg
hlt
sbb
push
scas
fcoms
fidivl
xchg
xor
fcmovb
dec
out
pop
adc
fldpi
xchg
orl
jle
xor
mov
daa
jnp
addr16
imul
iret
out
cmpsb
loopne
fs
cmp
or
pop
int
jle
lock
jle
jge
enter
fimuls
jno
psubb
lret
outsb
jno
outsb
pushl
adc
pop
popf
xor
jg
out
outsb
int
mov
sbbb
mov
repnz
pop
iret
or
insl
dec
lret
sahf
pusha
mov
jno
int3
pop
outsl
push
stc
cmp
mov
repz
cmp
inc
cld
inc
cmpsl
lahf
gs
sub
mov
mov
push
cmp
scas
fcomi
rep
lock
repnz
sbb
xchg
jge
mov
or
sbb
cmp
mov
sbb
movl
pop
imul
or
fnsave
xchg
rcrb
insl
xor
xchg
inc
dec
add
mov
arpl
ja
fstpt
in
stos
clc
cwtl
fldenv
pushf
hlt
mov
iret
cmc
int
pop
push
pop
jae
mov
dec
sbb
add
mov
stc
fmulp
ljmp
lret
mov
cmp
xchg
xor
mov
pusha
dec
dec
sahf
pop
ja
loope
loopne
xchg
push
mov
leave
inc
jbe
sub
mov
cs
subl
mov
outsb
lods
pop
pushf
movsb
in
xchg
dec
jl
iret
fnsave
les
mov
xor
popa
int3
pop
shr
scas
xlat
dec
xchg
lret
ret
out
mov
dec
decl
outsl
pop
add
jns
xor
mov
inc
push
dec
cmp
int3
push
mov
dec
or
in
fistl
xchg
mov
lcall
sbb
scas
in
ja
in
rcr
and
add
es
in
fsts
xchg
ljmp
and
lock
in
push
mov
arpl
push
xchg
jl
add
jae
xchg
orl
rep
icebp
xchg
insl
pop
ret
nop
cld
mov
push
sbb
sbb
jbe
fwait
add
test
jle
push
mov
leave
and
xor
sub
sub
fwait
mov
dec
cmpsl
cmpsb
fmuls
push
mov
mov
xor
or
adc
mov
mov
mov
dec
lret
adc
mov
push
or
sub
cmp
addr16
test
add
daa
pop
iret
push
mull
mov
js
lret
adc
or
stc
negl
push
jne
or
dec
leave
out
jl
xchg
push
or
aas
dec
jne
push
jle
or
mov
cmp
mov
sub
in
fldt
jns
push
sbb
add
dec
sub
inc
arpl
insb
test
enter
xchg
or
xchg
cmp
mov
push
rcrl
push
xchg
fnstcw
test
cmp
or
pushf
sbb
cs
cwtl
rcrb
leave
int3
adc
rcrl
jl
mov
dec
leave
pop
mov
lock
je
bsr
js
jg
aad
cmp
and
cmp
adc
lods
inc
mov
add
lods
lock
and
or
inc
cmc
ds
or
or
les
stos
fcoml
adc
jge
adc
lret
mov
xchg
fwait
push
sbb
imul
cmp
fsubrs
mov
mov
ret
popa
or
repz
sti
push
out
xorl
in
shr
daa
adc
mull
mov
and
cmpsl
in
xchg
cltd
add
adc
mov
mov
scas
adc
pop
ds
ret
stos
nop
decl
push
push
in
jnp
ja
push
ret
ret
pop
mov
sub
cltd
mov
xchg
xchg
pop
repz
aad
pop
inc
test
sbb
or
inc
ss
mov
cmc
xchg
sub
cmpsb
and
inc
imul
adc
mov
dec
mov
push
add
or
sbb
sbb
sub
insb
mov
and
cwtl
jge
sbb
fsub
push
pop
push
jmp
jge
push
pop
in
cmc
mov
lods
lods
pushf
dec
mov
scas
dec
loope
mov
loope
inc
push
sub
call
shlb
xor
pop
dec
push
jbe
mov
xchg
imul
push
cmpsb
call
sub
pop
sbb
in
lahf
mov
fimuls
adcb
pop
pop
cmpsb
mov
enter
sbb
jmp
movsl
mov
xchg
or
jl
sti
or
mov
jne
push
pop
aaa
adc
lods
std
mov
jp
sub
pop
fistl
or
jecxz
pop
push
pop
out
pop
push
jns
dec
push
lods
into
dec
adc
in
scas
mov
pop
scas
jno
and
loop
cmp
jmp
sahf
xlat
inc
movsl
jne
sbb
xchg
jp
fisttpll
mov
xchg
shll
out
dec
in
xor
push
out
fucomip
xchg
dec
push
xlat
push
pusha
xchg
xor
pop
add
sub
ja
dec
outsb
pop
pop
sbb
clc
outsb
pop
inc
sub
cli
stc
cmp
jge
xor
lock
mov
sbb
int
dec
int3
in
dec
push
in
and
and
add
push
loop
xor
cltd
lcall
in
add
xchg
mov
stc
or
andb
cmpl
push
scas
inc
test
scas
xor
jge
mov
mov
rorl
data16
jmp
jp
push
or
push
jae
push
cmc
daa
in
pop
dec
sub
pop
out
fisttpl
mov
dec
mov
mov
addr16
dec
out
sub
push
movsl
imul
jb
bound
mov
mov
rorb
adc
adc
bound
gs
sub
and
xor
call
mov
fsub
cmp
mov
pop
in
mov
bound
mov
adc
mov
or
xor
add
xchg
xchg
bound
cltd
shrb
repz
popa
or
addr16
sub
enter
test
ds
stos
fidivs
fiaddl
stos
repz
pop
cmp
adc
sub
jo
or
mov
pop
inc
add
sub
icebp
push
and
jb
push
rorl
jnp
cli
or
int3
imul
rcll
pop
ds
stos
lret
in
mov
icebp
xchg
lods
jp
or
jl
enter
adcl
mov
cld
inc
pop
ja
mov
adc
insb
lods
out
ds
stos
nop
push
mov
and
cltd
scas
jmp
push
testl
rol
jmp
stos
adc
mov
inc
rolb
imull
jl
push
inc
addl
sarl
mov
dec
pcmpgtw
dec
dec
lods
scas
push
orb
fnsave
push
adc
adc
xor
das
add
shr
outsb
pop
mov
in
dec
jne
jmp
mov
jg
orb
lret
adc
movsb
aad
shlb
std
out
jo
movsb
jnp
xor
jge
jne
arpl
cmc
sbbb
in
and
dec
push
mov
fldt
fists
dec
push
daa
xchg
push
add
aaa
push
sbb
sub
sahf
fldenv
xor
adc
push
cmp
inc
ss
xchg
xchg
popa
in
jmp
rorb
jns
mov
push
or
testb
inc
cltd
adc
mov
test
pop
add
and
mov
pop
adc
xlat
divb
pusha
pop
stos
xchg
sbb
fidivrs
lock
pop
jno
dec
push
mov
dec
add
push
push
aam
cmpsb
dec
in
inc
adc
imul
jg
rclb
dec
mov
or
and
bound
push
sub
ds
lret
rorl
aas
sarl
movsb
cmpb
and
or
js
movb
fists
pop
shrl
ret
rcrl
pop
out
cwtl
jbe
or
sub
loope
cmp
test
mov
test
xchg
ds
adc
jg
add
mov
mov
jmp
gs
cwtl
mov
mov
into
jae
jge
and
cs
leave
inc
inc
in
nopl
insb
pop
cmp
pop
stos
mov
pop
ss
call
rcrl
xchg
xchg
pop
jl
mov
jae
into
inc
in
jmp
scas
xorb
out
lahf
in
or
push
cli
inc
loopne
mov
insb
shlb
pop
push
add
test
das
pop
mov
inc
push
xchg
inc
stos
in
cmpsl
inc
addb
push
ret
adc
cld
hlt
mov
out
push
xor
dec
aad
dec
lock
xlat
jle
shrb
lock
push
test
pop
jnp
mov
cmp
jle
dec
aad
push
stos
fisubrs
push
or
sbb
push
mov
pop
mov
mov
repnz
mov
daa
call
mov
mov
ret
call
or
in
jo
push
lcall
xlat
jae
repz
sub
imul
xchg
push
es
xchg
movsl
cmp
fs
dec
popf
cli
outsl
and
or
je
sub
push
dec
xchg
in
fmull
dec
or
and
mov
cmp
mov
sbb
jmp
arpl
jbe
or
add
adc
xchg
add
mov
test
jnp
or
dec
add
outsb
jne
leave
pushf
test
xor
insl
scas
and
cmp
pop
lcall
sbb
sbb
stc
ficomps
mov
sar
ja
lcall
or
xor
out
push
scas
inc
test
dec
loope
pop
mov
arpl
adc
mov
push
cld
lcall
es
lcall
xor
adc
mov
jecxz
cmpsb
loopne
enter
sbb
push
xor
xlat
pop
out
addb
data16
pusha
dec
lds
repnz
loopne
shrb
push
test
xchg
xchg
lret
xchg
sub
imul
mov
sbb
dec
out
es
iret
fcomip
mov
mov
rorl
outsb
pop
outsl
pop
push
cmp
add
outsb
xchg
leave
sahf
movsb
lds
jmp
repz
mov
or
pop
pop
mov
or
mov
stc
insl
dec
mov
cmp
mov
pop
push
pop
mov
repnz
mov
jae
jne
inc
scas
mov
rorl
lret
sahf
pushf
adc
out
jg
mov
sbb
mov
imulb
inc
test
push
jne
sbb
cmp
jg
xchg
sub
inc
cmpsl
cmpsb
adc
scas
rolb
xchg
aaa
sbb
push
or
lret
aaa
pusha
jns
mov
imul
mov
inc
sbb
jl
repz
cmp
in
inc
test
dec
xchg
repz
nop
jae
mov
fdivr
or
mov
dec
scas
push
push
dec
dec
scas
stc
pop
aad
xchg
xchg
outsb
pop
sarl
ror
add
cmp
xchg
mov
enter
in
stos
es
jnp
enter
cltd
lods
mov
mov
addr16
or
movsb
cmpsl
xor
test
arpl
mov
pushf
cmp
add
mov
je
int3
inc
mov
mov
and
test
dec
cmp
test
out
dec
mov
push
repnz
jae
xchg
bound
enter
adc
adc
cmc
mov
testb
xchg
test
mov
sbb
icebp
or
mov
and
stos
lahf
push
jae
adc
loope
xor
cmp
enter
pop
dec
ficoms
fmul
imul
xchg
mov
xchg
mov
sbb
xchg
fisttpll
stos
lret
cmc
cmp
out
test
dec
mov
xchg
cmp
imul
outsb
rcrb
jp
and
adc
lds
jb
iret
sarl
mov
lock
and
cltd
pop
and
xchg
insb
negl
cmp
dec
jg
aam
adc
faddl
adc
dec
and
dec
push
cltd
push
addr16
pop
jge
pushf
movsl
add
and
lret
mov
data16
cmp
mov
jne
jp
xchg
loop
add
insl
jle
jb
test
enter
aaa
jge
jmp
lods
into
filds
repz
lds
add
mov
in
out
xchg
cmp
pop
jmp
pop
jle
popf
mov
and
jno
mov
cwtl
sbb
mov
lret
ljmp
lahf
mov
mov
mov
or
sub
scas
cmp
dec
pusha
leave
std
mov
test
jbe
rcrl
mov
xchg
ret
repz
aad
add
and
insb
xor
jbe
push
adc
inc
dec
ret
xchg
cmp
sub
icebp
loope
cwtl
xchg
cmpsb
pop
mov
add
addb
push
push
or
pusha
push
xor
int3
in
xchg
xchg
orb
ja
cmp
sar
and
dec
sbb
jp
xorb
sub
jo
jb
movsb
outsl
and
adc
push
push
mov
fimuls
xchg
and
bound
inc
jns
arpl
adc
pop
sahf
int3
adc
push
mov
adc
cmp
ljmp
aaa
mov
push
out
pop
mov
xor
xor
dec
xor
dec
lret
cmpl
jle
adc
ret
and
mov
mov
shll
pop
adc
jnp
adc
fcomp
jae
setns
sbb
xor
popf
dec
or
std
ljmp
and
roll
es
mov
add
into
add
mov
cmp
push
jge
dec
jl
mov
cmpsl
xlat
push
dec
push
cmpsl
repnz
rcl
sub
and
out
inc
adc
jle
add
pushf
pop
mov
aas
lret
mov
ljmp
mov
cmpsl
sbb
stos
sbb
repnz
out
repz
pop
inc
xor
psllw
jo
in
in
and
in
out
jl
ljmp
mov
and
mov
ficompl
das
xor
test
jl
inc
mov
pop
xchg
xlat
push
jmp
push
out
push
pop
cld
dec
jb
jo
xchg
aad
stc
or
insl
dec
cmpsl
and
xchg
test
pop
lret
xlat
push
int3
addb
and
pop
test
sub
inc
xchg
lcall
push
mov
push
adc
mov
xchg
or
jnp
xchg
push
outsl
out
std
adc
lock
mov
test
mov
sub
movsb
ds
sub
rcrb
dec
cs
xor
mov
push
xchg
sub
pusha
imul
xchg
fsubrs
mov
inc
inc
mov
mov
adc
call
xor
aad
cmp
add
xchg
test
adc
sub
cmp
das
xchg
mov
and
repz
insb
jbe
xchg
fwait
cmp
loopne
fidivrs
adc
mov
hlt
push
push
and
arpl
adc
test
dec
xchg
mov
pop
loope
mov
jl
pop
ficompl
xchg
repz
movsl
jmp
add
mov
test
mov
sub
cli
sub
outsb
fldl
into
fwait
stc
sub
jne
push
pop
push
pop
lret
adc
or
pushf
ja
lret
mov
sbb
dec
ja
push
scas
loop
mov
std
int3
inc
mov
sti
mov
and
mov
aam
lret
in
lds
loopne
cmp
sub
popf
cmpsb
adc
int3
mov
lcall
lcall
sub
push
imul
pop
in
jnp
push
fmull
mov
out
push
movsl
cmc
push
mov
out
out
imul
addr16
cli
xlat
popa
push
ret
xor
jo
divl
roll
sub
sbb
mov
xor
test
or
push
test
pop
faddl
hlt
pop
push
sbb
xchg
ret
into
push
mov
faddl
insl
sub
cmp
add
jmp
sahf
out
inc
test
daa
jae
cmp
movsl
loopne
pushf
jl
inc
dec
dec
sbb
xchg
movl
scas
loope
xchg
and
sbb
scas
jecxz
push
out
dec
mov
pop
adc
pushf
xor
pop
ret
mov
movsb
jno
or
cmp
fsubrs
mov
arpl
mov
mov
pop
imul
sbb
out
mov
jg
lahf
fldcw
xor
jl
pop
fnstcw
mov
and
enter
push
cmp
dec
sarb
fildll
and
outsb
push
fsubr
push
add
loopne
pop
pop
imul
or
inc
jbe
ljmp
dec
ss
push
cmc
xor
cltd
arpl
ret
in
ljmp
add
mov
lcall
pop
enter
pop
mov
xchg
movsl
fisubl
jb
test
add
mov
mov
xor
pop
stos
push
enter
or
add
xor
sbb
test
mov
leave
mov
sbb
pop
mov
cmpsb
push
ret
ret
inc
push
int
adc
jg
imul
mov
lds
subl
mov
sub
pop
test
and
and
int3
pop
sbb
loope
xor
stos
ds
mov
xchg
jg
sub
or
rcll
push
pusha
iret
mov
ss
adc
mov
aad
push
or
push
popa
insb
jge
cmpsb
push
xchg
sarb
lods
lahf
dec
pushl
in
xchg
in
inc
add
inc
fs
or
cld
mov
sbb
xchg
filds
cmp
in
sub
or
jnp
rep
movsl
or
push
imul
cmp
stos
inc
cmp
xchg
sub
movsl
and
adcl
cmc
out
and
and
sub
test
sbb
push
xchg
adc
int3
jno
in
out
or
fwait
jnp
gs
andl
xor
arpl
ss
loope
push
xor
adcl
lods
mov
arpl
add
xor
leave
pop
std
daa
xor
pop
xor
and
lea
adc
pop
sub
clc
or
aaa
cmpb
dec
dec
cltd
adc
or
daa
lcall
mov
pop
ret
inc
dec
push
not
rcrl
mov
addb
aad
inc
rolb
lods
dec
mov
xor
addr16
repz
lcall
push
add
push
mov
inc
dec
push
xchg
push
and
cmc
in
xor
test
pop
cmp
cwtl
push
outsl
jp
test
mov
or
adc
fidivl
in
fwait
ret
cwtl
out
cmc
sbb
inc
nop
mov
std
sbb
xchg
in
jne
fldcw
lods
xchg
or
insb
pop
mov
jb
xchg
subb
push
hlt
arpl
hlt
xor
and
inc
test
xchg
scas
fildl
test
cli
add
mov
mov
or
add
psubb
push
fdivrl
or
and
mov
mov
pop
and
out
xor
dec
cwtl
xor
sbb
stos
scas
jnp
fwait
mov
outsl
xchg
push
scas
mov
xchg
fstpt
jge
mov
pop
hlt
inc
jp
outsb
dec
cmc
cld
push
arpl
pop
popa
pop
test
scas
xchg
or
rorl
push
mov
or
adc
shll
inc
insl
btr
mov
sbb
test
inc
fcmovnb
sbb
mov
mov
adc
popf
mov
push
pop
adc
mov
add
jge
andl
mov
push
notl
inc
pop
xlat
or
push
inc
sub
mov
jns
int3
mov
aam
mov
sarl
dec
xchg
fsubl
add
cmpsb
push
mov
call
mov
mov
outsl
or
add
and
es
idivl
xchg
mov
or
jne
in
repnz
sarb
push
or
sub
push
dec
call
scas
in
xor
arpl
out
sub
test
push
jmp
cmp
xchg
ljmp
in
sbb
push
inc
inc
or
cld
push
push
sub
pop
sub
mov
add
dec
mov
and
pushf
push
pushf
jecxz
cmp
js
pop
cld
sbb
faddl
in
fs
mov
jb
inc
repz
cltd
ss
dec
cli
mov
dec
scas
add
sbb
mov
pop
add
xor
mov
dec
cmp
mov
add
xchg
call
cmp
xchg
bound
fbld
dec
out
xchg
mov
jle
int
sub
xor
loope
testl
out
push
hlt
jbe
mov
fwait
xor
scas
pop
mov
dec
ret
lret
adc
shrl
mov
ds
cmp
push
addr16
mov
adc
add
popf
js
xchg
incl
mov
jns
fcompl
test
arpl
ds
sub
inc
jnp
dec
bound
rcrb
xchg
xchg
jge
adc
pop
ljmp
shr
fs
dec
int
or
or
stc
mov
sub
cld
mulb
mov
xor
cltd
cmp
lods
insb
mov
lret
stos
cmpsb
or
inc
jmp
shr
stc
lahf
push
arpl
cmpl
outsb
add
pop
adc
movsl
sub
push
cltd
jbe
inc
je
loop
iret
paddw
xchg
fnstsw
outsl
push
xor
inc
ljmp
and
mov
xchg
add
mov
lds
or
rcrl
adc
insb
jmp
pop
shlb
mov
sub
das
push
lods
sbb
inc
ljmp
cltd
aaa
test
or
jne
insl
pop
mov
or
lds
pop
xlat
jmp
add
sahf
out
mov
or
cmc
dec
loopne
in
mov
push
stos
out
mov
pop
gs
dec
testb
out
push
cltd
xor
dec
jl
push
pop
mov
sub
jne
xor
and
fidivrs
jb
test
or
jne
xor
push
ljmp
aaa
mov
and
sub
cmp
jae
lcall
sbb
cmp
dec
lods
lret
adc
pushl
stos
stc
and
into
js
pop
dec
lods
pop
jmp
pusha
xor
push
sub
cmpsb
repz
xchg
fldl
lret
aad
fwait
es
jns
dec
add
pop
aad
inc
int3
adc
or
adc
sti
jne
sbbl
repnz
dec
pushf
mov
and
nop
add
xor
cmp
hlt
ds
xorl
iret
pop
pop
jo
push
popa
jb
cmp
adc
cwtl
mov
push
cmpsb
add
shl
mov
js
lret
xchg
out
repz
and
sub
mov
mov
sbb
rolb
sub
lahf
mov
dec
dec
push
and
adc
adc
xor
insb
add
push
insb
pop
into
xor
stos
pavgb
ja
addr16
ja
lock
cwtl
enter
addr16
xchg
pushl
inc
cmp
add
sahf
mov
push
pop
cwtl
aaa
xor
mov
sub
push
add
in
pop
and
test
rol
jo
inc
mov
jns
mov
mov
scas
cmpsb
push
clc
cwtl
bound
cmp
les
cmpsb
mov
jp
cmp
sbbb
hlt
mov
enter
insl
into
push
or
or
sbb
sub
notb
mov
and
sub
sarb
pop
cld
pop
movsb
aam
mov
dec
add
push
and
lret
cs
repz
sarl
fdivrs
ja
and
mov
pushf
xchg
xor
fsubr
push
cmc
shlb
arpl
je
cwtl
or
fwait
xchg
ss
jne
rcrb
jne
cwtl
sub
daa
jnp,pn
and
out
add
idivb
jbe
aad
loop
mov
mov
sbb
mov
xchg
cs
test
jge
pop
or
clc
js
mov
or
mov
arpl
cltd
sub
out
lock
sti
xor
xor
pushf
mov
out
xchg
add
fstpt
pop
scas
add
divb
and
fs
sbb
jmp
scas
jl
jl
cli
sti
hlt
sbb
push
or
jb
jb
stos
stos
cld
lcall
sub
in
arpl
push
jb
jnp
dec
mov
xchg
dec
fyl2xp1
ja
mov
data16
jbe
add
mov
sub
lock
mov
dec
push
data16
dec
and
lcall
or
cmp
add
outsl
mov
aas
xor
into
xor
test
sti
and
push
push
dec
cli
stos
divb
push
or
loop
adc
cmp
add
jae
int3
pop
jle
cs
mov
adc
jl
ss
sub
inc
inc
mov
imul
ficoms
push
test
mov
adc
pop
mov
add
lods
addl
sub
pop
mov
mull
in
add
in
cmp
jbe
loopne
dec
dec
cs
jbe
adcb
adc
mov
nop
xchg
add
scas
pop
ds
jnp
jae
jb
xor
imul
add
into
movsl
stos
addr16
push
fnstenv
pop
push
and
push
imul
leave
rcrb
repz
leave
rcrb
movsl
pop
shrb
adc
in
out
loope
jbe
aam
cmp
push
aam
repz
loop
aam
std
ja
movsb
and
stos
lret
xor
aad
test
dec
mov
push
stos
jge
loop
call
std
aas
cmp
push
lods
loopne
mov
sbb
call
sub
and
add
ret
call
sarl
movsl
xlat
and
popa
push
lods
test
inc
out
push
jge
sbb
push
dec
cld
xchg
arpl
fwait
pop
cmp
mov
jae
push
movl
xchg
add
xchg
xchg
sub
outsl
mov
cmpsl
mov
pop
xchg
push
inc
cli
test
inc
hlt
pop
les
fisubrl
jae
out
mov
sbb
lcall
mov
mov
xlat
mov
mov
adc
call
xor
adc
lds
mov
pop
mov
add
xchg
mov
jbe
mov
ljmp
xchg
std
in
in
sub
inc
sub
dec
add
jmp
stc
dec
inc
in
xor
xchg
lods
sbb
pop
lahf
sbb
das
fcompl
push
xchg
sahf
pop
xlat
jg
mov
push
cld
xchg
cld
and
divb
pop
inc
add
gs
sbb
notl
fucomi
xlat
cmc
aad
mov
in
inc
lcall
orl
cmpsl
sub
xor
push
push
add
cmp
lret
or
loopne
push
stos
lds
aam
and
dec
pop
in
inc
inc
fwait
dec
lret
dec
sub
cmp
lds
fdivrl
lds
imul
js
movsl
sub
dec
push
insl
addr16
sbb
insl
std
push
xchg
push
cwtl
lcall
cli
push
sub
sarl
lahf
cmpb
out
push
add
icebp
imul
leave
popa
or
shll
dec
jae
lods
push
mov
lock
rclb
xchg
test
mov
jp
das
es
ds
jge
or
loopne
cmpb
pop
xchg
cltd
jbe
out
pop
int
ljmp
lods
pop
jl
push
jl
xor
xor
lea
sarl
mov
cmp
stc
stos
dec
es
lea
lcall
jae
mov
cs
outsl
inc
lods
mov
loope
push
inc
fs
mov
addr16
mov
adc
cli
fcomps
shr
popa
cmp
mov
mov
inc
into
inc
shrb
divl
xor
dec
push
add
repz
cld
pinsrw
std
in
mov
test
jnp
jae
nop
loopne
imul
imul
js
jg
sahf
nop
out
mov
dec
out
dec
mov
and
adc
dec
xor
or
cmp
outsl
jmp
adc
scas
and
sbb
iret
add
xor
clc
cmpsb
clc
or
arpl
mov
popf
lret
lock
pop
mov
mov
fimuls
sbb
ja
pop
cmp
bound
fimull
and
pop
je
sub
cmp
je
dec
pop
cmp
sbb
cltd
stc
mov
dec
adc
lret
test
mov
mov
imulb
xor
clc
test
jnp
or
sub
inc
or
insb
je
jle
cld
dec
mov
xchg
xorb
mov
push
stc
sbbb
dec
push
jl
cmp
ss
lcall
xlat
add
xchg
mov
adc
negl
lods
push
lods
push
jne
mov
jae
adcb
cmpsl
mov
outsb
out
and
cwtl
and
pop
pop
in
stc
movsb
sbb
cmp
rcr
jno
pop
inc
and
in
mov
movsl
push
inc
cmp
and
iret
mov
mov
jl
mov
dec
mov
ds
mov
cmpsl
mov
jno
jb
fsubrs
sub
out
sti
aas
ret
sahf
sub
and
jl
mov
inc
ds
lret
scas
pop
xchg
push
out
xor
fcom
and
xor
out
push
ds
jp
push
jl
aaa
add
fsubrp
shr
fiaddl
leave
fistpll
mov
cs
mov
loope
pop
stc
movsl
mov
add
mov
pusha
jmp
mov
das
aas
push
xor
enter
pop
test
push
adc
sbb
and
xor
jb
mov
popf
call
std
outsb
push
mov
pusha
and
in
popa
jl
xchg
fs
jl
cmp
testl
mov
stos
mov
rcll
test
pop
movsb
ljmp
xchg
shl
dec
adc
aad
jmp
pop
push
mov
stc
mov
in
pop
cmc
into
test
sbb
xchg
push
mov
movsl
mov
je
push
into
sub
add
insb
into
dec
inc
sbb
ljmp
pop
jl
add
xchg
dec
ja
sarl
cwtl
fcoml
hlt
pop
sub
lods
out
xchg
mov
sub
lea
fldenv
and
sub
inc
lcall
popa
icebp
jo
pop
push
cmp
outsl
adc
popf
negb
jp
dec
popa
sbb
out
xchg
lock
inc
add
cmp
sahf
roll
mov
jns
pop
ss
mov
shl
dec
lret
push
cmp
cld
mov
push
test
mov
xor
pop
lret
xorb
adc
ret
xchg
repnz
stos
loop
jo
aam
stos
xchg
push
pop
es
aas
inc
fsubrs
inc
fcomps
xlat
push
jno
testl
insb
dec
push
mov
and
or
mov
push
aas
and
nop
inc
cmp
sub
nop
add
and
insb
and
mov
int3
dec
push
aad
push
fwait
nop
mov
push
cmp
aad
in
jge
into
jo
pop
es
ret
test
inc
ret
ja
push
fs
scas
cmpsl
xor
inc
lods
sbb
xor
loop
daa
push
inc
out
fsubr
dec
mov
rorb
mov
hlt
and
jl
out
js
push
cltd
lods
out
sub
mov
arpl
mov
test
adc
call
pusha
shrl
loopne
inc
fwait
cmpsb
das
jge
jmp
shrb
in
push
rcr
xchg
lahf
ljmp
fdivrs
mul
js
pop
jecxz
dec
test
loope
int
pop
sar
addr16
inc
stos
add
das
jno
jmp
ja
sbb
pusha
and
out
xorb
iret
and
or
das
or
jge
mov
pop
mov
int3
and
xor
jbe
shll
sub
xchg
mov
dec
xor
movsl
lret
lcall
adc
dec
mov
inc
ret
xor
btcl
xor
push
movb
pushf
sub
fisttps
adc
xchg
cwtl
gs
movsl
push
adcb
mov
movsl
enter
jge
aas
leave
sub
dec
addr16
dec
mulb
lea
stos
and
sub
sbbl
inc
shrb
je
and
lret
enter
pop
xor
mov
push
lcall
fistps
lea
aas
pop
jg
mov
lret
rolb
mov
mov
popl
xor
adc
leave
pop
mov
loop
jbe
dec
and
adcb
cmpsb
and
mov
mov
sbbl
inc
out
inc
inc
xrelease
inc
out
inc
mov
cmp
cmpsl
and
outsb
rol
mov
int
arpl
out
inc
adc
mov
mov
jecxz
xor
fimuls
ja
mov
outsl
push
iret
jg
push
push
pop
push
mov
ljmp
outsl
mov
call
mov
push
xchg
push
sbb
xor
jmp
sbb
push
das
int
sbb
cmc
lods
inc
mov
repz
push
negb
xchg
in
ret
adc
jae
rolb
out
and
xor
dec
mov
popf
pop
mov
fisubl
call
ret
repnz
pop
sbb
loopne
shlb
scas
fs
xorb
push
mov
int3
mov
repz
xchg
inc
fs
stos
adc
inc
es
jecxz
or
mov
lahf
lea
jge
call
mov
repz
xor
jle
mov
fnstenv
push
lds
jmp
pop
rcrl
int
inc
movsl
out
cmpsb
mov
jnp
insb
xchg
insb
push
sbb
lods
inc
out
mov
mov
xchg
testb
js
push
shlb
clc
cld
faddl
stos
add
movlps
push
push
dec
movsl
adc
dec
mov
jl
mov
cld
inc
mov
movsl
fnstsw
jno
lods
mov
sub
push
jae
and
sub
push
loopne
cmp
mov
lret
inc
mov
bound
inc
jg
add
lea
sbb
adc
aaa
or
and
mov
adc
into
subl
loopne
jne
sbb
out
clc
cmpb
cmp
out
test
pusha
jle
pop
out
dec
je
and
sub
fucom
push
cmp
mov
or
fldl
pop
or
xor
mov
fisttps
out
dec
jno
repnz
out
mov
pop
lods
adc
fadds
sbb
mov
decb
or
loop
pop
fists
gs
scas
pop
jp
inc
xor
mov
repnz
aam
div
clc
lods
int3
aaa
inc
mov
and
ret
nop
mov
arpl
cltd
lock
clc
jmp
nop
cld
push
in
inc
mov
jecxz
adc
xor
and
nopl
cmpl
test
test
in
call
scas
mov
fdivrs
lods
sbb
scas
inc
adcb
cmp
hlt
insb
mov
int3
out
aaa
add
pushl
movsl
adc
mov
adc
mov
insb
cld
jb
push
bound
inc
inc
test
mov
push
leave
shrl
push
movsb
enter
cmpsb
rolb
mov
mov
dec
pop
push
mov
push
push
push
fstpl
bound
arpl
pop
jmp
ret
ja
adc
sahf
push
mov
pop
add
shrb
mov
adc
shll
fs
sub
jge
sub
fnstcw
dec
and
jmp
test
test
gs
inc
cs
mov
aaa
es
xlat
out
mov
enter
outsl
pop
mov
or
mov
adc
jae
insb
int
sbb
aas
mov
inc
jns
aas
repz
or
in
jns
rol
out
mov
in
shr
loopne
push
fdivrl
test
pop
iret
dec
and
mov
ret
bound
mov
scas
add
test
add
xchg
leave
sub
shll
aam
loop
shlb
popf
sub
adc
nop
scas
scas
test
xlat
xor
lods
jl
cmp
stc
lods
cmp
or
and
aaa
xor
add
or
push
js
rcl
cli
sbb
mov
dec
fsubp
push
pop
mov
or
adc
mov
das
shll
dec
mov
mov
ds
mov
and
mov
aas
mov
insl
xchg
loope
push
jmp
stos
hlt
xchg
clc
dec
push
ror
scas
xchg
and
sahf
add
in
jnp
dec
cmpsb
movsb
ljmp
mov
mov
jp
ds
fmuls
in
mov
dec
inc
inc
out
pop
lods
sti
sbb
cmpsb
dec
or
jne
dec
or
loop
cmp
cmp
mov
sub
movsl
add
les
adc
jns
testb
in
dec
or
je
mov
fisubs
add
cmp
aaa
lock
xor
sbb
fwait
dec
lods
mov
xchg
mov
and
sub
sub
lock
imul
lret
addb
or
sub
cs
pop
sahf
movsb
mov
fnsave
data16
sbb
push
jae
lahf
mov
lahf
scas
movsb
lods
mov
sub
and
push
pop
lock
ret
or
mov
pop
mov
cmp
jmp
aad
push
bound
js
push
mov
sbb
push
lahf
add
cmpsl
outsl
push
xchg
js
mov
jb
pop
inc
addr16
bound
stos
cmp
mov
push
aad
or
into
test
mov
mov
pusha
js
in
and
std
stos
dec
fists
ficoml
xlat
inc
lret
je
insl
ja
add
jno
popa
loopne
ffree
push
cmpl
xchg
lods
ss
aam
adcb
add
push
sub
push
idivb
sbb
call
mov
into
movb
xor
push
add
cmp
enter
adc
xchg
ret
adc
push
xlat
or
in
mov
dec
sbb
mov
jl
sub
pusha
movl
sub
in
into
fcomi
mov
adc
movsl
or
cmc
repnz
shlb
aas
cmp
inc
dec
inc
leave
int3
pop
pop
and
mov
jo
mov
mov
repz
sarl
lods
xchg
sub
push
iret
inc
sahf
jecxz
js
cltd
sbb
inc
push
dec
mov
mov
orl
bound
dec
xor
lret
cmp
cli
mov
push
ja
push
push
sti
jl
mov
inc
push
into
jbe
inc
icebp
leave
sbb
rclb
mov
mov
push
pop
adc
xchg
pop
mov
and
js
mov
xchg
ror
or
pop
push
pop
in
add
inc
mov
inc
sbb
rolb
nop
scas
xchg
adc
mov
add
inc
fadd
sub
dec
movhps
push
push
jp
fldt
xlat
jbe
mov
out
ja
jne
mov
bound
lds
push
xorl
xchg
inc
jne
dec
out
orl
mov
push
int3
ljmp
or
mov
dec
adc
jne
stc
fnstenv
adc
mov
mov
cmpb
push
mov
mov
ret
dec
sbb
pop
or
sub
dec
dec
cmp
mov
pop
xchg
fcmovne
mov
loopne
jg
push
arpl
jmp
dec
out
pop
push
jae
xor
mov
ret
scas
mov
xchg
adc
cmp
es
cmp
lahf
add
hlt
clc
test
jl
out
or
add
lcall
test
pop
xchg
stos
leave
repnz
test
cmpsl
mov
pop
out
lcall
mov
sub
xchg
push
je
mov
out
add
enter
jmp
dec
sub
mov
jns
lods
hlt
stos
sub
add
jae
bound
sbb
pop
dec
mov
out
loop
cmp
call
push
pusha
out
sbb
icebp
push
jo
cmpsb
jbe
std
mov
loopne
inc
outsl
jg
popf
test
je
push
xor
loope
arpl
jecxz
iret
pushf
fidivs
ret
test
mov
stos
jo
xchg
movsb
outsb
lock
xor
dec
or
std
std
les
popf
mov
inc
mov
pop
in
hlt
movsb
stos
dec
and
sub
mov
jmp
push
push
add
push
icebp
popa
and
and
xchg
mov
sub
repnz
scas
das
rol
mov
pop
scas
filds
aas
popa
inc
lods
int
or
insl
lret
mov
leave
push
call
ss
lcall
ss
lock
pusha
mov
jbe
push
inc
gs
mov
and
cmp
in
lret
loope
clc
cmp
leave
into
push
jl
test
jge
fwait
pop
sub
cmp
adc
inc
xlat
pushf
es
mov
jnp
add
push
cmp
fs
mov
and
divb
push
mov
int3
sgdtl
xor
nop
or
mov
ret
out
xchg
mov
fimuls
leave
outsb
lahf
in
cli
push
fisttpl
pushf
leave
sbb
in
mov
ss
push
pop
add
add
and
mull
sub
mov
sub
adc
adc
pop
ja
cs
fwait
sahf
mov
inc
mov
ja
mov
mov
mov
xchg
pop
loopne
gs
pop
xor
pusha
or
test
cwtl
inc
mov
cmpsl
lahf
gs
in
into
aas
and
imull
in
cmp
sbb
jo
adc
push
pop
in
iret
je
push
pop
scas
adc
das
push
stc
and
stos
loopne
add
xor
push
lret
test
pop
add
sub
cmp
stc
and
add
test
sub
mov
sbb
hlt
pop
inc
sbb
push
mov
or
shl
and
cmpsb
inc
imul
in
adc
mov
adc
adc
popa
dec
out
lea
jns
arpl
fwait
pop
fs
je
xor
adc
sub
lea
std
cld
outsl
decl
call
es
aas
cmp
enter
add
mov
aad
or
ret
jb
xchg
lret
adc
sub
push
pusha
sti
pusha
popf
imul
call
cmp
inc
xchg
pop
mov
inc
inc
dec
cmpsl
in
adc
or
xchg
pop
dec
shll
mov
js
nop
out
sub
push
cs
in
cmc
icebp
dec
fsubs
xchg
lds
or
scas
repz
xor
xchg
bound
mov
xchg
adc
push
bound
out
sbb
mov
mov
in
js
out
out
push
or
cmc
mov
sbb
rol
adc
pusha
iret
pusha
inc
push
in
js
xadd
lahf
or
mov
les
jge
dec
adc
mov
xchg
and
inc
cmp
arpl
in
xor
push
mov
xchg
cli
xchg
xchg
and
jmp
insl
mov
iret
add
sub
in
mov
imul
mov
test
cwtl
mov
mov
aad
jnp
xor
sub
push
sub
mov
dec
into
push
fsubr
sbb
imul
lods
clc
gs
scas
rcrl
iret
adc
jle
outsb
insl
dec
cmp
adc
and
cmp
cmp
push
cmp
dec
ja
ret
mov
cli
push
insb
jle
xchg
popa
dec
cwtl
jmp
int
sub
js
xlat
test
sub
mov
cmpsl
cmp
pop
or
sub
repz
int
push
inc
sub
mov
pop
add
cs
or
jge
jnp
inc
lret
xchg
cmpsb
imul
inc
mov
xchg
pop
addb
mov
lock
les
cmp
adc
out
add
ja
fildll
add
jmp
lock
repnz
or
test
out
push
pop
cmp
xor
cld
setns
mov
fmull
pushf
inc
hlt
push
add
rorl
mov
push
sbb
lret
fnstenv
push
add
imul
xor
popa
xchg
arpl
adc
int
sub
mov
inc
sub
bt
mov
sbb
mov
sub
and
inc
pop
scas
test
insb
icebp
das
pop
mov
scas
jge
sahf
sbb
push
shlb
out
push
inc
outsl
cltd
pop
subb
xor
into
mov
mov
lret
leave
inc
or
jae
add
or
andl
out
cmp
les
xchg
mov
imul
jle
sub
addb
aaa
push
mov
mov
stos
sahf
mov
push
aad
call
jp
push
insl
mov
fdivrs
mov
pop
ja
mov
cmpsb
stc
scas
sbbb
mov
addl
sbb
jmp
xor
cmp
xlat
inc
ja
mov
jg
and
fdivs
mov
movsb
pop
addb
leave
adc
sub
popl
dec
adc
out
push
daa
int3
xor
pushl
scas
push
pusha
imul
jl
pop
pop
das
int
pop
dec
movsl
or
xchg
and
rcrb
inc
pop
movsl
xor
aam
sbb
dec
push
lret
cmpsl
adc
xor
hlt
xor
outsb
fidivl
loopne
pmulhw
cmp
sti
pop
pop
nop
jne
pop
adc
cmp
xchg
into
push
test
lods
or
dec
aam
lret
sub
mov
mov
pop
xchg
mov
pushf
lods
cmp
clc
add
popa
add
sbb
arpl
xor
out
dec
call
scas
fsubrl
cmp
test
in
and
data16
divl
and
xchg
mov
ret
fidivrl
addl
jbe
fsubrl
lds
push
or
mov
jbe
and
ds
xchg
cmc
mov
rorb
arpl
xchg
dec
sbb
pand
push
jb
das
push
insl
and
repz
sar
push
or
mov
sub
lret
test
ret
pusha
ja
xchg
jle
jnp
cmp
add
xor
jg
pop
jmp
scas
pop
cmpsl
ds
inc
adc
outsb
sbb
arpl
sarb
in
sbb
xchg
fildl
xchg
js
xor
adcl
movl
sub
loop
or
or
push
lret
pop
in
mov
jl
mov
mov
push
mov
pop
enter
shr
fcompl
stc
and
jmp
fldcw
mov
push
mov
movsb
push
push
daa
scas
sbb
pop
cmp
cwtl
ficompl
out
adc
sbb
outsb
cmpsl
push
or
ss
pusha
fisttpl
sbb
jne
aam
out
stos
sahf
and
sub
clc
pop
mov
popa
loope
inc
fdivrs
shrl
push
test
and
jno
push
and
and
pop
pop
js
lea
lods
gs
jo
mov
dec
test
push
cmp
in
cs
add
cwtl
mov
xchg
jno
and
es
bound
ljmp
adc
cwtl
aas
lret
lret
mov
add
sbb
cmp
push
aad
out
mov
test
addr16
pop
adc
cmc
pop
movsl
repz
mov
shl
mov
jge
push
rorl
cmp
cmp
hlt
mov
inc
bound
hlt
xor
std
pop
pop
dec
scas
fldt
dec
jb
pop
dec
cli
sub
dec
push
and
add
imul
movsl
inc
and
adc
pop
mov
jb
pop
pop
mov
push
pop
imul
int
mov
je
lret
push
xchg
cmc
icebp
mov
stos
mov
push
jmp
or
and
fsubrs
push
popf
ds
test
add
push
jbe
sub
xor
xor
dec
cmp
push
mov
inc
jno
xchg
cmp
mov
mov
adc
sub
clc
aas
sub
push
icebp
outsb
decl
js
ret
ljmp
push
mov
sub
stos
mov
es
jns
and
or
pop
lods
sbb
jmp
out
adc
push
fdivrl
daa
sbb
addl
lea
xchg
jb
cmp
call
hlt
mov
insl
cmpsl
nop
daa
push
push
xchg
mov
sub
jg
gs
adc
roll
icebp
outsl
daa
cmpsl
in
add
pop
int3
cs
or
inc
cld
mov
loop
repnz
inc
adc
out
add
dec
arpl
pushf
sbb
jnp
add
movsb
test
fists
jnp
pop
hlt
les
push
movsb
sarl
call
sbb
cmpsl
mov
icebp
adc
std
lea
test
push
je
in
lcall
and
adc
shlb
push
clc
pop
out
mov
and
sti
pop
inc
pop
jo
add
adcb
fldt
or
xor
addr16
test
jl
mov
mov
inc
or
add
pop
push
fbstp
mov
pop
rcr
fcompl
ret
push
outsb
mov
jle
hlt
mov
add
cwtl
bound
add
mov
pop
xchg
out
dec
stc
xchg
pop
xor
cmc
sbb
xor
jg
add
les
xor
in
stc
je
push
das
aas
std
cmpsb
pop
xchg
push
xchg
push
ret
inc
addr16
leave
xchg
mov
mov
jg
cwtl
mov
jns
sub
mov
xor
mov
sahf
out
push
sub
movsl
call
xchg
xchg
leave
insl
adc
lock
mov
adc
int
adc
mov
pop
pop
mov
xor
popf
mov
pop
sub
sbb
xor
imul
lret
sbb
sbb
inc
cmp
push
lods
int
fimull
sub
subl
movsl
in
movsb
ljmpw
jbe
sbb
dec
mov
adc
cs
pop
jmp
rorl
fnstenv
out
jmp
mov
dec
xor
addr16
xchg
cmp
ret
test
scas
subl
leave
and
or
jl
cltd
or
pop
or
iret
pop
lock
popa
in
cld
add
jno
leave
std
sarb
out
pop
hlt
or
fisubl
mov
test
popa
mov
cs
pop
bound
cmpsl
sahf
outsl
and
enter
cld
xor
test
and
cs
jecxz
add
dec
mov
xor
arpl
andb
gs
mov
mov
cmpsl
test
imul
xchg
xor
repnz
mov
pusha
lcall
lea
repnz
notb
sahf
mov
jo
mov
in
fsubs
dec
fucomp
out
pcmpeqw
int
loopne
scas
jnp
pop
lock
or
leave
cmc
in
insb
mov
test
jecxz
lret
gs
fstl
lods
lahf
imul
xchg
insb
and
or
add
mov
leave
outsl
aad
stos
push
insl
inc
int3
fiadds
addl
lds
pop
test
add
movsb
inc
in
add
sbbl
dec
gs
sub
sbb
pop
out
call
xchg
sbb
das
mov
nop
cmp
loope
dec
popa
mov
cmpsl
mov
xor
mov
paddq
jle
dec
xchg
mov
inc
jge
mov
cltd
mov
sbb
scas
adc
adc
pop
mov
int
aam
fnstsw
fildll
sub
lea
int3
mov
bound
dec
outsb
js
fisubl
test
push
data16
lds
cmp
insb
int3
fwait
mov
sarb
inc
aam
les
icebp
aad
bndstx
cmp
sahf
int
ss
fmuls
les
dec
loopne
addl
lods
or
mov
pop
pop
cmp
mov
or
jl
mov
call
or
popa
cwtl
cmp
cmp
in
ret
add
mov
mov
push
inc
adc
or
jb
subb
in
jbe
pop
jo
mov
inc
pop
dec
adc
lret
adc
and
fiadds
negb
in
lods
or
add
aas
and
cld
test
xchg
push
popf
fldcw
test
ret
mov
xchg
push
push
pop
inc
ljmp
jge
jecxz
jo
push
mov
pusha
or
scas
or
jmp
jg
inc
adc
jge
mov
sahf
into
pop
fs
dec
sub
inc
aaa
pushw
imulb
inc
or
js
xchg
sbb
jp
aad
sbb
es
and
inc
add
into
test
das
push
mov
in
jle
or
jne
test
shrb
xchg
xor
shl
xor
iret
mov
hlt
fucom
in
ss
scas
xchg
or
imul
adc
ja
pushf
dec
lcall
hlt
jo
pop
jno
js
fscale
test
enter
xchg
out
and
insl
insb
cwtl
lds
inc
cs
add
mov
js
arpl
call
call
pop
pop
mov
cltd
out
mov
test
mov
lcall
adc
adc
adc
popa
into
test
fdivs
jo
pop
sub
push
call
xchg
sbb
dec
inc
adc
into
outsb
adc
push
xorb
dec
mov
xchg
jnp
leave
or
std
fdivrs
and
cmp
adc
pop
sbbb
jg
add
inc
cmp
cmp
pop
lea
jp
clc
popa
push
adc
nop
xchg
test
cwtl
insb
inc
aas
lcall
push
mov
idivb
cld
fadds
pop
call
pop
in
sahf
push
inc
sahf
xor
mov
arpl
hlt
mov
jmp
adc
or
lock
out
repnz
imul
dec
stos
jnp
xchg
nop
dec
xchg
dec
sub
pusha
xlat
mov
or
decl
shlb
sarl
pop
ss
test
lret
lahf
lahf
cmp
sub
inc
cmp
divb
push
add
jp
mov
fdivr
stos
rolb
adc
mov
movsb
inc
jecxz
push
cs
cwtl
push
bound
pop
popa
mov
and
mov
cmpsb
mov
fs
cmp
pop
mov
jno
or
insb
out
lock
ret
cltd
sti
push
sbb
loope
in
das
xor
inc
mov
lods
in
xchg
pop
mov
pop
lahf
cmp
stos
inc
sbb
ljmp
mov
add
lret
add
lods
xorl
sbb
ret
divb
jae
pop
lret
pop
insl
shlb
adc
std
cmp
cmp
jg
icebp
cs
aaa
daa
xor
cmp
lock
repz
and
jo
mov
jp
and
int3
das
cmpsl
pushf
into
xor
loope
cmp
inc
cltd
add
cs
xchg
cmp
les
or
jo
es
adc
in
jp
and
idivb
mov
xor
jb
adc
lret
outsb
dec
cmp
push
aas
xchg
icebp
fwait
pop
or
inc
movl
stos
or
stc
call
xchg
add
cmpl
mov
mov
mov
fmul
fwait
jb
wbinvd
jb
pop
xchg
xchg
sbb
test
adc
cld
jmp
adc
mov
xor
into
nop
cld
add
jl
xorl
in
mov
inc
push
out
and
sbb
cmp
gs
lea
fwait
or
adc
sub
lret
add
sub
inc
dec
sbb
sbb
fldcw
cwtl
subl
lcall
adc
sub
mov
clc
xchg
in
xor
lock
test
adc
repz
fst
sbb
lea
inc
or
push
jecxz
imul
les
rorb
arpl
rcl
rol
fdivr
push
les
adc
out
imul
jmp
push
mov
sub
pop
ret
lea
rcll
cmp
cmpsb
jbe
sahf
dec
or
rcl
jae
pop
hlt
stos
push
lret
push
sub
mov
rcrl
testb
sti
mov
nop
sub
arpl
sub
addr16
fdivl
and
dec
mov
insb
mov
add
cmc
je
jle
dec
mov
pop
xchg
xchg
inc
adcl
mov
clc
xchg
test
out
xor
call
bound
mov
scas
test
sbb
dec
mov
adcl
into
outsl
push
adc
dec
ficomps
fistps
pop
mov
dec
aaa
adc
jno
sub
ret
push
push
jno
mov
repz
xlat
sti
sbb
ljmp
cmp
gs
add
test
xor
andl
scas
xlat
in
dec
sbb
out
add
mov
cmp
jl
mov
inc
or
cmp
add
jo
lock
jmp
jp
mov
outsl
pandn
std
xor
push
mov
movsb
scas
jmp
movsl
pusha
paddb
push
pop
or
lods
push
movb
out
arpl
test
loope
sub
roll
mov
into
fs
add
xchg
cs
dec
ficoml
mov
insl
jb
popa
mov
pushf
fsubrs
jge
daa
or
int3
cmp
imul
jg
mov
inc
rol
pusha
jbe
push
aaa
push
mov
ljmp
pop
inc
xlat
pop
sub
loopne
out
mov
sub
cmpsb
sub
gs
and
xor
and
adcb
mov
repnz
mov
shrb
cmpl
enter
gs
jnp
sbb
xchg
mov
mov
aam
xchg
xchg
push
adcl
stos
lds
fs
test
cmc
xor
xor
push
add
or
jmp
cltd
fbld
nop
push
mov
fldt
lods
mov
lahf
es
jne
fcmove
dec
mov
xchg
sub
pop
and
cmp
jbe
test
stos
ret
push
mov
jne
pusha
sbb
faddl
mov
fsubrs
adc
sub
insl
sbb
clc
pop
or
fistps
xchg
dec
dec
mov
lods
mov
mov
or
xor
add
je
rclb
rolb
shll
pusha
fsubrl
mov
sub
psubusw
cmp
enter
jbe
or
into
mov
insl
rorl
jo
ja
mov
aad
inc
outsl
in
mov
dec
adc
add
xchg
mov
dec
jae
adc
aad
inc
std
push
bound
cmpb
lret
jmp
jno
std
pop
pop
and
push
in
daa
pop
cltd
jmp
movsl
add
push
nop
into
pop
ljmp
sti
pop
sarl
repz
in
pop
lcall
or
sbb
test
je
dec
mov
in
add
pop
jns
lahf
mov
aaa
out
loop
cmp
and
sub
adc
lock
add
jge
dec
xchg
test
add
movsl
dec
les
hlt
mov
out
jo
push
and
adc
pop
insl
loope
lods
lods
pop
sub
scas
test
jns
fwait
sub
pushf
fsub
paddusw
call
fists
xchg
in
roll
inc
or
dec
sub
add
pop
mov
ljmp
xchg
adc
je
dec
enter
aas
push
imulb
mov
mov
inc
test
adc
push
dec
or
pop
insb
jae
popf
and
loopne
in
cld
push
jnp
sahf
jl
imul
xor
cld
and
cmp
leave
stos
mov
lea
stos
pop
xchg
add
sti
dec
and
add
sub
add
mov
aam
inc
inc
xor
mov
xorb
icebp
and
xchg
pop
sub
mov
sbb
repnz
pushf
and
adc
cmp
cli
pop
scas
lods
hlt
jns
inc
sub
xlat
popf
jbe
sti
xlat
mov
push
aas
mov
jmp
or
imul
imull
jmp
int3
and
inc
in
shlb
pop
jne
inc
fwait
cmc
adc
jmp
add
xchg
test
into
leave
lock
pop
lahf
or
lahf
jecxz
adc
push
lahf
les
ljmp
inc
lea
popa
cmc
cli
movsb
mov
inc
mov
add
cli
jge
xor
imul
inc
shrl
adc
ret
enter
xchg
sti
add
sahf
pop
add
mov
leave
pusha
and
test
shlb
push
out
stc
dec
icebp
in
lods
cmpsl
leave
shl
jl
icebp
mull
mov
sar
jbe
cmp
or
cli
pushf
in
sbb
dec
dec
dec
test
cmp
sbb
push
dec
push
shrl
mov
in
cmp
imul
mov
add
cmp
insl
add
in
inc
mov
subl
add
xchg
test
test
js
shrb
ds
test
xchg
pop
pop
xchg
addr16
xchg
push
ror
jo
mov
cmc
rorb
or
dec
cmp
jle
mov
mov
inc
mov
fiadds
xor
gs
repz
sub
cmp
xchg
out
lods
nop
dec
outsb
xor
dec
xor
jge
aaa
xchg
leave
dec
push
cmp
push
out
pop
and
int
arpl
cmc
push
sub
scas
cmp
jecxz
test
mov
je
scas
call
dec
cmp
setae
mov
add
add
imul
mov
imul
and
mov
xchg
int3
cmp
pusha
fdivs
in
push
cmp
repz
push
cmpsl
sbb
mov
popf
sbb
imul
iret
mov
pushf
add
and
and
push
jmp
movnti
and
iret
or
popa
adc
cs
dec
pmuludq
mov
and
mov
aam
jg
fists
bound
xchg
and
movsl
pop
push
loopne
sub
jg
repz
mov
cmp
jo
popf
push
mov
xchg
clc
inc
clc
inc
dec
popf
ffreep
jne
fsubrp
inc
mov
pop
stos
inc
adc
push
stos
mov
in
inc
push
add
push
mov
mov
movsl
cmp
push
stos
aam
cmp
inc
and
in
lods
inc
mov
cltd
inc
cs
mov
xchg
jp
mov
xor
jae
mov
pop
sub
cs
int
dec
pop
test
mov
nop
in
jmp
lahf
nop
les
popf
jg
fists
jae
jb
mov
sbb
push
xchg
jmp
push
push
fwait
pusha
lret
iret
cmp
scas
cmpb
adcb
push
bound
orb
xor
enter
add
out
je
pop
jmp
and
dec
mov
push
fcompl
imul
hlt
call
and
out
movaps
inc
leave
and
dec
pop
in
outsb
sub
sub
push
cmc
cmp
push
jg
aad
js
push
cmp
jo
ljmp
xlat
and
inc
cwtl
mov
scas
nop
mov
cltd
lods
ret
bound
pop
sbb
outsl
mov
jmp
dec
popf
icebp
inc
inc
pop
inc
xor
jmp
daa
test
in
lcall
xchg
shll
xchg
jae
bound
je
inc
push
ja
out
add
scas
mov
bound
lea
dec
mov
loopne
sub
xchg
mov
pop
cwtl
mov
repnz
ja
add
fmuls
add
fmul
inc
mov
popa
push
mov
jno
push
ljmp
test
adc
sbb
movsl
sbb
sub
mov
mov
adc
inc
lods
push
inc
into
insl
sub
xor
shll
or
leave
cli
adc
and
sub
int
out
sahf
stos
inc
pop
mov
ret
or
push
xchg
jb
sar
leave
xchg
or
inc
pop
adc
or
mov
into
xchg
mov
push
push
mov
add
sbb
push
push
xchg
in
xorl
sub
sub
mov
pop
test
inc
imul
sbb
imul
sbb
adc
xchg
and
cmp
mov
ret
or
cmpsb
and
out
js
jns
push
mov
xor
test
arpl
dec
push
pop
ret
insb
cld
popf
loope
xchg
outsb
scas
mov
jecxz
outsl
xchg
add
cmp
inc
outsl
pop
mov
push
ret
and
movsl
or
cs
cmp
jno
xchg
dec
ret
adc
inc
int3
fs
cwtl
gs
lock
cwtl
xorl
loop
jne
notb
out
lods
gs
adc
cmpsb
imul
jno
dec
pop
jecxz
jne
cmpsl
pop
add
xchg
scas
add
and
decl
call
dec
out
push
loope
push
arpl
popf
dec
fs
lds
or
mov
jge
arpl
mov
and
clc
imul
sbb
adc
jb
orb
push
mov
fsubrp
jl
cwtl
dec
jbe
cmp
mov
outsb
stos
mov
repz
sbb
lods
sbb
in
pop
inc
pop
call
cmp
test
pop
adc
xor
jmp
inc
imul
lret
aam
scas
push
pop
sub
ret
and
or
and
ljmp
mov
call
test
and
add
lods
cltd
out
cld
mov
and
mov
enter
fsts
popf
cmp
adc
jp
sub
es
inc
pop
or
inc
mov
ret
mov
hlt
rorb
cwtl
jnp
test
int3
cld
sbb
cli
cmp
loope
popf
xor
out
insl
adc
pop
mov
pop
add
cmp
repnz
xchg
push
imul
adcl
xchg
mov
movsb
pushf
add
nop
mov
fcompl
stos
fldenv
aam
mov
verw
mov
out
xor
mul
jae
or
inc
aas
hlt
es
js
push
cmp
mov
and
xchg
push
lods
sub
mov
arpl
iret
arpl
mov
stc
mov
dec
dec
out
xchg
bound
out
repnz
mov
xchg
fldenv
dec
testl
outsb
xchg
lock
fldl
mov
mov
movsb
dec
nop
sbb
subl
add
jb
push
in
mov
aaa
add
mov
cmp
lds
loope
xor
les
into
cmc
pusha
stos
mov
aad
jl
pushw
mov
push
pop
inc
fwait
es
fwait
dec
mov
sahf
data16
jno
jmp
jge
je
imul
mov
cmpsb
dec
push
xor
leave
cmp
push
add
push
and
dec
sub
inc
repnz
loopne
push
sahf
bound
and
add
lods
test
into
adc
pop
cmp
ds
pop
push
xor
pop
stos
cmp
xchg
inc
cmp
sbb
push
jb
lods
shrl
in
scas
je
fisttpl
dec
add
dec
jno
std
frstor
mov
push
sbb
push
mov
insl
in
dec
cmp
and
xchg
mov
imul
xchg
xrelease
inc
adc
adcl
cmp
add
dec
xchg
sbb
or
daa
cmp
in
divl
sbb
mov
fistpll
mov
sbb
and
mov
jbe
int
xchg
mov
mov
sub
dec
ficomps
pop
adc
jns
mov
inc
pop
sbb
movsb
outsl
and
mov
lods
mov
scas
andb
mov
imul
sub
ljmp
inc
stos
dec
icebp
inc
aas
adc
in
repz
mov
add
mov
mov
mov
bound
arpl
js
pop
outsl
orb
inc
pop
push
adc
mov
and
out
mov
mov
jle
mov
mov
js
sub
cmovb
hlt
push
enter
shr
cmpsl
sub
or
inc
jle
lret
addl
and
mov
and
aam
inc
pop
push
outsb
pop
gs
push
dec
data16
xor
or
or
xchg
xor
mov
bswap
adc
fdivs
ja
adc
shrb
and
xlat
inc
cltd
imul
mov
mov
les
test
clc
jg
ja
xlat
push
push
mov
mov
pop
idivb
pop
mov
inc
mov
test
fisttpl
les
data16
sub
xchg
sarb
mov
out
lcall
adc
adc
lret
adc
pop
scas
xchg
mov
jnp
fwait
cli
cmp
adc
dec
jae
mov
nop
adc
or
and
and
xchg
mov
jo
or
jae
mov
mov
pop
cmp
mov
mov
jmp
leavew
sub
xlat
mov
sbb
and
mov
pop
out
lahf
pusha
mov
mov
pop
fcoms
out
push
dec
add
sub
stos
adc
sub
mov
fs
add
roll
mov
mov
imul
push
pop
int3
mov
cmc
dec
aam
daa
cmp
lds
pop
aam
insb
cmpsl
das
in
pop
notl
pop
push
repz
leave
pop
inc
jno
xacquire
and
imul
lret
add
cld
cmp
imul
clc
cmp
stc
dec
pop
rorb
push
shlb
idivb
cmp
sarl
les
sbb
fldcw
fsubs
xchg
inc
or
xchg
mov
jae
push
sbb
pushf
cld
push
mov
or
fucomip
lock
xor
mov
mov
movsb
xor
dec
pop
ss
xor
dec
dec
scas
jp
cmpsb
inc
inc
into
pop
jo
pop
jle
mov
inc
andb
pop
rcrb
aad
add
cmpsl
fidivs
fs
or
pop
inc
mov
xor
or
xchg
fst
test
cmp
add
icebp
pop
inc
sbb
mov
pop
in
mov
cld
push
es
scas
xchg
mov
mov
addr16
frstor
pop
push
pop
pop
and
hlt
xchg
adc
add
sub
inc
rolb
and
fisubs
adc
pushf
lcall
pop
jae
jge
xor
insl
jle
push
mov
clc
fcomip
int3
jnp
xor
mov
dec
adc
pop
cmovge
cs
int
stos
cmpsb
or
mov
loop
cltd
mov
mov
fs
sub
dec
mov
daa
fcomip
cli
or
adc
xor
stos
push
ja
mov
adc
insl
xor
sbb
xor
stos
pop
rorb
in
popa
jns
aaa
aas
pushf
enter
cmp
fsubr
sahf
je
fld
ret
mov
in
pop
mov
jno
lds
add
xchg
mov
out
lahf
mov
or
mov
stc
rcll
adc
push
fisttpl
flds
int3
pop
and
cmc
popa
push
idiv
jo
mov
cmp
pop
inc
out
or
pop
pop
xor
xor
fs
push
popa
mov
test
sti
stos
shr
popf
lock
les
sub
rorl
push
mov
inc
nop
dec
pusha
pop
xor
fwait
inc
cmpsb
xor
dec
pop
in
mov
imul
lcall
jb
sub
mov
adc
ret
push
add
fisubrl
dec
lock
pop
jmp
aaa
pop
dec
loope
cmc
into
fs
jne,pn
inc
fstpt
push
jno
test
xor
xchg
push
push
xorl
gs
fimuls
push
push
mov
jbe
dec
and
inc
daa
sbb
cmc
arpl
mov
iret
enter
xchg
lcall
inc
inc
ljmp
test
sti
jmp
pop
add
xlat
xchg
dec
cmpsb
jne
push
sbb
ss
mov
iret
stc
xor
or
jns
in
cmp
scas
loopne
push
xchg
and
pop
scas
fsubs
in
test
cwtl
sub
movsb
scas
sbbb
sbb
xchg
mov
xor
mov
mov
adc
dec
jne
mov
jmp
in
divb
cmpsl
cltd
jge
pop
inc
out
mov
cmpsl
lock
dec
push
xor
xor
jle
xor
push
es
and
xchg
out
xchg
pop
push
je
jo
pop
pusha
cmp
cld
test
filds
dec
or
push
mov
aaa
inc
loope
mov
gs
mov
add
mov
jl
push
loopne
or
dec
push
sub
gs
lock
push
and
rcll
jb
pop
fsubs
mov
or
push
push
lahf
mov
mov
or
and
mov
jnp
das
insl
mov
dec
dec
jmp
pop
in
adc
inc
xor
test
pop
adc
push
sbb
xor
movsl
repnz
push
out
mov
mov
lret
mov
and
push
gs
icebp
mov
mov
push
adc
cmp
cli
sbb
add
xor
test
push
xchg
and
jmp
es
xorl
dec
xchg
call
mov
mov
outsl
xchg
sub
mov
je
push
hlt
gs
dec
and
int
pop
jge
movsb
in
sti
out
mov
popa
subl
inc
subb
testb
xor
stos
ret
jg
or
insb
ds
aam
data16
jmp
iret
jno
int
enter
mov
scas
push
sub
gs
cmpsb
sbb
and
gs
aad
fs
out
sub
ds
pushf
dec
inc
cmp
aam
icebp
jp
fisubrl
lds
cmp
add
pop
inc
mov
or
insl
call
mov
push
aaa
or
icebp
fsts
ficoms
fnstsw
sub
lock
xchg
aad
scas
das
jl
addr16
subb
sti
jns
mov
inc
movsb
or
popf
sub
dec
inc
dec
cwtl
add
andl
adc
push
leave
or
mov
repz
xchg
fstpt
mov
cmpsb
xchg
and
mov
inc
mov
xchg
or
push
or
sbb
ret
sbbb
jae
or
push
inc
sbb
sbbl
cmp
and
mov
dec
orl
int
lods
push
in
xchg
imulb
pushf
pop
pushf
in
fimuls
imul
cmpsb
loop
cltd
mov
addb
pop
daa
add
push
cmp
int
xlat
imul
push
pop
and
ja
pop
mov
lcall
pop
mov
xchg
push
nop
pop
dec
dec
aad
or
into
adc
jmp
clc
xor
cmp
in
xchg
mov
push
jns
shlb
in
lods
jno
sbb
sbbb
mov
pop
adc
inc
mov
inc
push
jns
push
sbb
xor
cld
mov
rep
sub
inc
xchg
je
cmp
mov
push
loop
je
cmc
push
fsubrl
lods
pop
cmp
mov
pop
dec
jno
rcrl
icebp
mov
sub
loop
lahf
in
imul
xor
out
daa
pop
in
repnz
adc
jb
fidivl
or
jae
xchg
cmp
enter
push
leave
xor
ljmp
js
lods
popf
add
jnp
std
in
imull
in
stc
sub
stos
bound
ret
jmp
and
jge
mov
dec
notl
scas
rcr
pop
icebp
int3
xor
int3
jg
inc
ret
dec
psrad
xlat
sub
aaa
jns
lods
push
mov
push
mov
loope
xchg
out
ds
pop
stos
outsl
test
inc
cmp
enter
mov
pushf
sbb
sub
es
mov
popf
push
cltd
push
negl
outsb
adc
loopne
push
xchg
insb
or
dec
mov
andl
add
and
ljmp
les
adc
jecxz
jp
aam
jmp
adc
orl
loopne
cld
dec
lock
sbb
xlat
add
mov
pushf
push
xor
push
subl
sbb
popa
or
setnp
sub
sub
outsb
cmp
sub
push
fmuls
xor
gs
push
std
push
push
sbb
push
cmp
add
mov
sahf
in
pop
mov
mov
mov
repz
mov
and
ljmp
mov
es
mov
mov
fdivs
pusha
mov
adc
pop
add
dec
push
sbb
sub
test
jno
xchg
sahf
add
shlb
push
nop
or
loop
loopne
xor
mov
mov
adc
mov
inc
lret
enter
dec
xchg
cmp
xor
fnstsw
cmp
mov
arpl
sub
dec
arpl
sub
adc
xlat
es
sbb
push
and
shrl
and
push
lods
mov
std
inc
fdivs
leave
or
xlat
rcll
mov
out
sub
mov
fldcw
fisttpll
xor
jl
jle
lahf
and
adc
cmp
loopne
outsl
cmp
fistl
mov
std
scas
sahf
int3
xchg
in
push
push
pop
jg
mov
aam
jecxz
daa
dec
test
aad
jge
out
mov
xchg
lret
or
loopne
icebp
sbb
jns
dec
negb
mov
lahf
mov
js
xchg
mov
pop
dec
jle
inc
mov
out
mov
xchg
xchg
in
xor
daa
add
jmp
mov
push
mov
mov
mov
push
pop
jp
fcomi
mov
andl
mov
mov
inc
pop
ljmp
jo
into
mov
mov
xchg
fildll
daa
pusha
pop
fs
out
and
gs
out
push
sbb
or
js
pop
xor
hlt
pop
jbe,pt
xor
xor
jno
and
sub
test
in
or
sbb
mov
mov
jne
fdivl
cmp
inc
mov
dec
push
les
int
cmc
aad
repnz
cltd
push
stos
bound
or
mov
sub
adc
push
mov
repnz
sbb
mov
dec
dec
rclb
xorb
sarb
outsb
mov
sahf
in
popf
lds
mov
jmp
lods
push
push
std
mov
in
mov
cmpsb
push
test
and
imul
pop
mov
hlt
xchg
mov
mov
shrl
jae
jle
ret
jns
cmc
mov
push
test
popf
sbb
pop
sahf
test
mov
sbb
pushf
mov
mov
jnp
push
test
add
cmc
mov
cs
sub
add
xor
push
push
jp
pushf
lret
nop
push
repnz
sub
inc
sbb
jbe
enter
mov
in
jno
jmp
in
lahf
fcomi
bound
pop
cmp
xchg
sub
inc
lods
ucomiss
inc
cmp
clc
jl
incb
cmp
add
jb
outsb
xchg
sti
or
mov
lcall
dec
sti
fdivrl
dec
insl
pop
mov
inc
push
adc
in
subl
add
sbb
js
sub
dec
int
sti
in
xchg
addr16
cmp
xor
and
shr
xor
xchg
mov
lcall
mov
cmp
orl
push
xor
movsb
testl
fnclex
inc
inc
les
adc
pop
pop
arpl
inc
je
mov
cmp
and
mov
sbb
lahf
fisttpl
in
xchg
out
sbb
fsubrl
xchg
add
pusha
mov
or
faddl
mov
cmp
mov
lret
ja
cmpsl
add
and
das
inc
xchg
and
pop
sbb
jecxz
jp
int3
sub
popa
xchg
fldt
or
push
mov
jecxz
fwait
sub
stos
push
aas
cwtl
push
push
pop
repz
stc
xchg
imul
xor
xchg
jno
xor
sub
xchg
cld
cs
pushf
sbb
push
push
adc
mov
cmpb
out
rorb
bnd
pop
and
mov
jmp
dec
add
lods
or
inc
ds
xorb
mov
push
mov
ja
lds
push
js
sub
xor
jb
insb
xor
das
lods
jns
test
out
xor
imul
loop
sub
cmp
jl
mov
hlt
insl
mov
mov
inc
inc
adc
pop
int
inc
adc
mov
inc
mov
fwait
shrb
mov
jecxz
xor
mov
inc
push
mov
xor
loope
out
xor
xor
mov
pop
adc
cmc
rcrb
or
mull
pop
dec
repz
jo
inc
rorb
xchg
inc
pop
mov
dec
cmpl
sbb
jmp
mov
addb
rolb
fwait
adc
or
dec
inc
jb
inc
jg
cmp
les
pop
inc
pop
mov
mov
cld
adc
imul
jnp
xor
jmp
sahf
mov
jne
ret
insb
int
loop
shrb
add
stos
movsb
cmp
cmc
sbb
ret
xchg
pop
add
push
push
or
push
mov
push
mulb
notl
out
je
sbb
inc
mov
sbb
jge
xor
sub
pushf
sbb
xlat
xchg
push
or
and
repz
call
cs
xor
shlb
cmp
shll
push
sbb
and
mov
insl
mov
xor
sub
jp
mov
stc
pop
int
pop
push
ljmp
mov
or
lods
inc
leave
xchg
addb
push
stos
jge
xchg
cwtl
sarb
daa
mov
aas
sbb
adc
dec
sbb
andl
rcr
push
jecxz
adc
les
cmp
inc
pop
sti
aad
mov
dec
xor
pop
popa
push
dec
sbb
in
popa
fwait
xlat
das
shrb
lcall
mov
gs
mov
out
sbb
iret
sbb
or
lods
cli
inc
mov
mov
sbb
add
jnp
mov
fadds
scas
int
or
jp
sub
push
jmp
loopne
insb
cmpsb
mov
cmc
in
cmc
fwait
shll
movsl
cmc
aam
mov
test
sub
ja
mov
push
sbb
bound
mov
sbb
jns
das
sbb
push
jb
sub
inc
inc
dec
cwtl
or
add
jbe
dec
xchg
add
and
adc
out
lea
movsl
pop
repz
inc
xor
or
dec
daa
dec
and
outsb
bnd
mov
jns
or
pushf
ja
insb
push
mov
push
lea
push
pop
and
fsubs
lahf
popa
jmp
aad
into
xor
cwtl
lahf
sahf
xor
cltd
pop
mov
push
and
das
fstp
push
fs
dec
push
in
and
repz
xor
mov
cmp
cltd
test
fucomp
bound
and
pop
mov
enter
inc
cwtl
add
lds
fwait
icebp
lea
jmp
mov
insl
stos
stos
fmul
pop
cwtl
dec
mov
push
movsb
mov
fsubrs
rcrb
and
inc
and
push
fisubl
fsubrp
or
orl
mov
dec
inc
movsl
xchg
lock
repnz
jg
jae
pushf
sbb
push
xchg
outsb
mov
xorb
dec
fwait
je
jge
and
insl
jg
mov
sbb
pop
mov
add
es
adc
or
dec
es
xor
repnz
mov
mov
push
cmc
jmp
jmp
aaa
imul
lahf
mov
shll
mov
sub
mov
cmpsb
and
mov
xor
repz
mov
nop
mov
les
xchg
js
ficoml
in
add
lods
movsb
pop
jo
dec
nop
cmp
and
xchg
mov
cmp
xchg
jne
add
mov
sub
adc
adcb
roll
lret
jae
jmp
push
xor
cmpsb
loopne
and
mov
push
imul
lods
cwtl
pop
iret
xor
adc
mov
or
cltd
pop
push
imulb
les
cli
or
mov
sbb
fs
popa
mov
test
mov
jl
adc
sbb
js
cwtl
add
add
xchg
mov
mov
scas
arpl
lret
and
cmc
or
adc
push
inc
xchg
aaa
mov
xchg
cwtl
lea
fcompl
pop
sub
mov
out
pop
gs
sbb
push
pusha
lods
push
cli
dec
mov
pop
mov
jge
xor
stos
dec
or
mov
inc
sahf
and
dec
jns
js
call
mov
lret
mov
lahf
scas
push
push
fucomi
push
jle
add
scas
in
das
inc
sarl
jmp
mov
lods
je
into
aad
fiadds
sub
mov
adc
dec
jb
or
jne
sub
ret
jnp,pt
aaa
or
pop
dec
outsl
dec
push
xor
sub
dec
xchg
pop
sar
test
in
jp
or
fwait
or
pop
lcall
inc
fistl
out
fldenv
jne
fimull
xchg
and
addr16
insl
mov
cltd
pop
jbe
xor
cs
inc
in
pop
pop
mov
je
fs
cmc
xor
mov
icebp
push
sub
ds
fisubs
jmp
loopne
fsubrl
add
mov
and
jnp
mov
mov
aad
jg
jno
fmulp
sar
sbb
sbb
push
dec
xor
inc
mov
pushf
repnz
in
add
jae
roll
sbb
cmp
mov
fucomi
sub
xchg
mov
jp
mov
movsb
icebp
inc
jo
cmp
add
jae
pop
movsl
fwait
and
outsb
pop
repz
and
sub
mov
pop
aas
pop
inc
mov
push
outsl
test
inc
inc
cmpsb
dec
pop
adc
imul
es
and
cmpsb
stos
adc
outsb
jne
sbb
imul
cmp
rcll
stc
je
fcmovnbe
mov
sub
lea
mov
fdivl
lock
test
fistpll
sbb
lock
loope
repz
push
incl
cmp
adc
or
dec
jmp
fucomp
mov
addr16
cmp
cmpsb
mov
pop
popf
mov
rcr
mov
outsb
xor
shr
pop
and
mov
pop
ss
out
or
icebp
out
es
nop
add
leave
cmp
mov
and
inc
or
std
cmp
mov
or
rclb
cmp
xchg
or
testl
mov
add
inc
mov
shlb
add
xchg
rcr
mov
lcall
and
imul
cwtl
mov
jns
lret
stos
mov
push
lock
and
and
sarl
jae
mov
testl
cmpsb
jecxz
fistps
jmp
xchg
sbb
pop
fneni(8087
lock
fiadds
insb
aad
shll
mov
mov
out
subb
int
xor
mov
orl
dec
sahf
out
movsl
daa
cltd
xor
mov
xchg
ljmp
jbe
inc
xchg
stc
pop
jnp
fstl
mov
lock
addl
scas
push
pop
ret
jle
pop
rorl
je
pop
and
pop
jno
rcrl
stos
adc
test
fstpl
popf
mov
jl
in
add
adc
sbb
ficoml
mov
add
lods
dec
mov
push
xor
add
mov
imul
popa
ret
mov
gs
rclb
sub
aad
adc
dec
pop
sti
push
jmp
or
nop
inc
std
pop
clc
loop
sti
nop
int
xchg
pop
daa
or
lds
mov
mov
inc
popa
push
sbb
push
push
mov
fcomi
addr16
test
push
add
mov
and
or
pop
es
sub
lock
dec
sbb
jg
dec
add
outsl
movsb
mov
int
iret
das
incl
cmc
ds
ret
add
add
xor
stos
stos
adc
or
fnstsw
fwait
sbb
pop
jecxz
and
adc
and
mov
push
xadd
and
dec
mov
add
cmpsl
cmp
imul
insb
sar
imul
fwait
dec
adc
lds
cmpsb
mov
inc
push
sbb
sbb
enter
or
ds
cmp
xor
ficomps
sbb
mov
or
jp
fsubrs
orl
inc
fsincos
xchg
es
mov
xor
int3
pop
cmp
scas
mov
dec
mov
ret
mov
call
pop
pop
xor
iret
out
or
and
fs
insl
cli
imul
add
je
in
mov
sub
lods
pop
stc
or
push
cmp
subl
loope
add
mov
fs
inc
lahf
icebp
inc
pop
and
rorl
pop
enter
out
clc
mov
test
test
mov
or
mov
pop
mov
mov
add
cltd
jbe
pop
in
cs
shrl
and
insb
xchg
bound
and
cmc
lret
mov
mov
je
hlt
negb
xor
or
sub
iret
idivb
fcmovnb
movsb
mov
rol
movsb
lahf
stos
xchg
lock
cltd
mov
orb
add
sti
rcll
mov
xchg
add
leave
bound
cld
adc
mov
adc
in
shrl
jmp
or
add
les
fwait
mov
gs
pop
xchg
ret
or
xlat
sub
pop
pop
cmp
pop
jge
and
popa
push
adc
inc
mov
cmp
nop
cmpsb
test
cmp
cmp
sub
in
lock
or
sub
pop
jg
fsubs
movsl
pop
jmp
ja
test
jno
cmpsb
push
addr16
xor
mov
lea
xorl
daa
push
cmp
shll
pop
and
stos
in
cmpsb
add
mov
shrb
push
fmuls
mov
sbb
call
dec
push
xor
sbb
pop
dec
mov
mov
mov
cmp
mov
and
ror
xchg
mov
daa
loopne
sub
fdivl
mov
aas
cmc
cmc
pop
int
aaa
xorl
test
adc
add
mov
adcb
addb
lds
popa
mov
or
imul
sbb
dec
xor
iret
add
ret
or
pop
xchg
cmp
jmp
push
fwait
jb
orl
loop
out
stos
mov
rolb
add
sbb
lea
lock
lret
mov
mov
rcrl
xorl
push
sub
in
pop
arpl
sbb
popf
jo
cltd
out
push
in
es
jmp
mov
adc
pop
sub
mov
or
adc
pop
sti
jns
push
or
outsb
inc
add
repnz
popf
stos
push
mov
sti
adc
das
js
push
outsl
int
push
cmp
pop
popf
data16
adc
jp
pop
pop
nop
and
add
push
int3
ja
push
pusha
daa
pop
ret
add
shlb
and
leave
movsb
cmp
mov
mov
cs
mov
ss
adc
xor
adc
push
xor
xor
add
mov
mov
pop
lock
cmpsb
faddl
push
iret
inc
outsl
cmp
and
lret
jbe
fincstp
push
xchg
fistpll
lahf
sub
cld
xor
popf
cltd
jle
mov
into
gs
dec
gs
ret
add
dec
sub
int
jle
cmp
clc
out
stos
xor
dec
mov
push
outsb
mov
and
cmp
bound
cmc
mov
int
dec
scas
icebp
adcl
and
bound
cmp
daa
push
rcrl
ljmp
scas
jae
je
sub
push
xor
pop
pushf
bound
xor
push
sti
lods
xor
clc
cmp
jle
enter
inc
sub
push
inc
dec
movsb
sbb
push
push
mov
popf
mov
dec
negl
andnps
stos
cltd
and
or
sbb
jmp
lods
in
testb
mul
shlb
mov
iret
jg
sbb
push
test
and
cmp
dec
or
xor
mov
int3
cli
pop
jmp
push
dec
ret
daa
aam
test
cmc
jmp
sbb
aam
jne
adc
add
cmp
xor
movsl
pushf
jae
xchg
mov
push
cmp
icebp
cli
fsubs
pop
shl
adc
push
sbb
sub
loope
repnz
xchg
inc
mov
out
and
call
push
pop
pop
jbe
popa
xchg
std
xor
push
mov
add
sahf
mov
call
mov
cmp
lods
xor
cmp
fmuls
mov
out
jge
sarb
pop
pop
into
loope
popf
stos
ljmp
pop
inc
sub
popf
mov
lcall
les
cmp
mov
insb
stc
out
inc
fldenv
loop
fimuls
ja
pop
out
jbe
test
xchg
and
div
into
rol
jno
sub
add
mov
je
adc
dec
inc
xor
movsb
adc
sbb
int
xchg
lcall
push
hlt
icebp
sbb
dec
pop
pop
es
push
call
sbb
push
xchg
or
cli
decl
xchg
xchg
or
daa
add
jns
cltd
lret
inc
test
xor
out
lahf
push
dec
sub
cmovns
test
aas
adc
fldl
jle
repnz
push
std
jbe
les
jno
jb
arpl
mov
xchg
or
mov
outsl
rclb
rcll
popa
mov
inc
lods
pop
in
cwtl
cmpsb
iret
and
rcrb
les
jg
inc
mov
hlt
int
inc
cmpsb
push
jo
xchg
js
xchg
sbb
pop
xor
or
mov
scas
bound
sbb
fimull
xchg
inc
aaa
mov
xchg
cwtl
sarl
and
std
sbb
aad
pop
imull
test
das
xchg
pusha
push
xor
les
mov
dec
rcr
lcall
rcl
test
dec
outsl
cs
out
mov
ficompl
arpl
push
std
out
les
mov
pusha
or
or
nop
into
lods
sub
testb
addr16
popf
js
scas
mov
orl
pop
dec
add
add
out
add
cmp
pop
add
xchg
jo
dec
jp
push
xchg
add
jp
xor
xor
mov
sbb
cmpsl
mov
scas
mov
mov
shrb
lret
cmpsb
or
pop
aas
adc
pop
add
mov
adc
sbb
sbb
add
aam
out
cli
push
cmp
out
loopne
mov
push
jae
cmc
dec
fsubrl
ljmp
xchg
inc
push
mov
adc
test
xor
pop
hlt
xchg
std
test
mov
mov
out
cltd
pop
xchg
adc
in
pushl
ret
fisubrs
aad
or
loop,pt
add
out
stos
test
xor
inc
movsl
scas
dec
std
fcomi
pop
xchg
cmp
in
ds
pop
mov
pop
add
lock
xor
ja
push
call
or
xchg
ss
cmpsl
push
jl
dec
stc
jae
push
cmp
push
rorl
sti
or
push
ja
pop
push
daa
loopne
inc
out
aas
cmp
cmp
add
adc
in
pop
lret
sti
fcomps
lds
lock
imul
push
popa
das
adc
ret
loopne
iret
mov
ljmp
ret
xchg
push
in
enter
shr
dec
rclb
jnp
inc
dec
push
movsb
js
and
lret
sbb
cmp
push
mov
jl
push
sub
xor
les
inc
mov
cli
and
and
xor
xor
loop
add
mov
dec
push
or
pop
arpl
push
add
jae
jns
dec
sub
cmp
sbb
loopew
loopne
push
fdivrs
mov
xor
push
cmp
cs
xor
clc
fisubs
lds
gs
call
xchg
inc
aad
repz
sub
and
int
push
push
add
fwait
inc
sti
mov
int3
pusha
mov
cmc
outsb
int
jp
cmp
push
inc
push
and
mov
jp
cwtl
cmp
dec
mov
ss
fidivl
sti
ffree
fwait
mov
adc
xlat
xchg
in
insb
divb
jp
jle
cwtl
xchg
mov
dec
jo
sbb
fistpl
out
andl
lret
xor
xchg
fsts
int3
mov
cmp
push
dec
sub
xlat
or
dec
fildll
mov
outsl
adc
scas
jne
sub
push
pusha
add
xorb
and
push
inc
outsb
or
sbb
je
mov
jg
lcall
and
jp
push
mov
shrl
lret
jae
jne
icebp
mov
mov
sub
push
pop
xchg
xor
mov
cwtl
inc
inc
pop
xor
fdiv
aaa
fdivl
cmc
jmp
sbb
popa
pop
ljmp
add
es
push
sub
xchg
mov
pop
test
sub
xchg
mov
mov
dec
jle
int
jg
fistpll
mov
push
lcall
jl
loop
dec
ljmp
repz
insl
xor
rcll
lret
loopne
adcl
sbb
inc
inc
cmp
pop
push
jmp
jbe
adc
mov
jae
jle
mov
andl
mov
in
int
out
mov
or
insb
ljmp
mov
xor
cmp
mov
xor
xor
int3
push
jecxz
inc
cmp
sub
push
out
and
dec
xor
ja
jae
jno
outsb
pusha
xchg
sub
sar
add
scas
xor
push
xchg
mov
test
xchg
cltd
ds
in
push
loop
mov
jge
shll
or
testl
xor
inc
fisubrl
filds
bound
pop
lods
adc
call
in
je
inc
cmc
mov
nop
adc
dec
sbb
push
xor
mov
add
stos
add
and
js
outsl
pop
test
imul
sahf
mov
imul
mov
bound
pop
test
pop
sbb
push
xor
cmc
mov
push
movsb
xchg
sub
xor
stos
scas
adc
rcr
arpl
xchg
xchg
fnstsw
or
ret
or
or
insb
mov
mov
call
push
mov
inc
int
sbb
stc
pop
mov
mov
sbb
loopne
mov
lcall
mov
jnp
sub
sub
std
outsb
lock
xchg
outsl
cs
cli
ss
sub
xchg
inc
fcomp
dec
int3
adc
and
pop
dec
mov
inc
sbb
les
pop
jne
cld
mov
jl
outsl
pop
sti
pop
cmp
lods
rorl
mov
jg
inc
std
or
out
pop
push
pushf
inc
jmp
sbbb
jns
sbb
sarb
imul
sub
xchg
decl
and
xor
and
jae
add
pop
inc
dec
imul
out
mov
insl
mov
addr16
data16
lret
jne
shrb
rcll
xchg
imul
inc
xchg
inc
pushf
jp
mov
rcl
out
or
or
jecxz
or
add
inc
pop
js
icebp
pop
jmp
notl
cmp
popa
jnp
xchg
push
ret
xchg
push
ret
pop
sti
daa
sub
mov
pop
and
lret
mov
cmp
fcmovne
dec
fidivl
push
jne
cmc
add
popf
mov
adc
gs
ljmp
xchg
add
orl
flds
fimuls
jo
pop
enter
fisttpl
lret
imul
test
cmpsl
pop
es
jg
in
add
jg
xchg
lock
sub
xchg
pop
sub
or
cmp
hlt
mov
leave
push
aaa
xchg
or
pop
cltd
dec
mov
dec
nop
jb
cltd
mov
outsb
cmp
jg
call
mov
popf
add
movsb
xchg
cmp
cmc
or
jns
hlt
jp
xchg
repz
out
push
das
xor
insb
out
lods
xchg
aaa
xchg
dec
pop
in
test
push
test
sub
in
enter
push
dec
rep
pusha
mov
psadbw
movsb
clc
das
push
in
ja
or
lods
ds
mov
stc
add
arpl
dec
adc
in
adc
fildl
jle
xchg
mov
dec
std
mov
dec
mov
adc
xor
gs
aas
call
arpl
cmc
mov
sub
adc
cmp
jnp
sub
and
cmp
adc
xchg
pop
jmp
xor
pusha
cmp
inc
mov
cmp
subl
cmp
pop
mov
inc
cmp
lret
push
or
rcrb
add
mov
shrl
leave
orl
xchg
call
cld
pusha
daa
std
mov
jl
fsubr
addps
pop
cld
xor
in
adc
out
iret
scas
fimull
mov
int3
or
test
je
fidivrs
mov
sahf
pop
jmp
mov
jbe
mov
iret
fsubr
adc
rorl
mov
jge
xor
pop
imul
inc
iret
lret
scas
inc
mov
aas
arpl
fs
les
jmp
fwait
repz
mov
push
sbb
pop
mov
pushf
imul
cltd
jae
inc
cmp
mov
jae
scas
movsb
xor
pusha
sbb
je
into
mov
bound
cld
or
fisubrl
js
inc
cld
mov
pop
and
sub
shlb
rol
xchg
push
push
loop
ficoml
aaa
lods
jp
adc
scas
popf
mov
icebp
xor
gs
pop
mov
cmp
cmpb
sbb
imulb
js
add
mov
lcall
scas
mov
jae
imul
arpl
inc
adc
xchg
loopne
dec
movl
sub
into
xchg
into
pop
je
cmp
inc
mov
pop
dec
push
adcl
insb
icebp
inc
push
call
aas
xlat
lods
add
sbb
jge
cmp
jmp
adc
popa
into
cld
xchg
adc
out
cld
cmp
popa
sub
or
cli
in
dec
lar
in
pop
mov
subb
jo
push
addr16
lahf
lar
inc
bound
lods
arpl
test
mov
xor
adc
sbb
sarl
orb
add
sarb
lods
cmp
fmuls
inc
ds
and
pop
aaa
in
or
xchg
inc
pop
enter
daa
ja
xor
dec
mov
mov
gs
xchg
push
or
sbb
dec
incl
cld
insb
lret
scas
pop
js
int3
inc
inc
in
pop
js
inc
out
push
out
cmp
out
out
sub
cmp
add
push
adc
adc
insl
js
call
mov
pop
out
jge
dec
lods
jmp
int
mov
sti
sbb
mov
cmc
leave
stos
std
and
dec
lcall
clc
fisubs
xchg
das
xlat
inc
mov
mov
lret
jno
movsb
xchg
enter
fildll
push
and
jb
cmp
test
dec
mov
jp
sub
adcb
and
test
test
mov
mov
and
cmc
push
cmp
dec
xchg
inc
or
stc
lods
pop
add
add
sbbb
cmp
dec
xchg
sub
outsb
lods
pop
jg
shll
adc
push
inc
icebp
aas
and
dec
push
call
sub
test
cmp
jecxz
imul
int
lcall
jg
xor
in
imul
out
jno
mov
loopne
repnz
mov
fistl
adc
or
cmc
mov
int
iret
dec
xchg
xchg
scas
outsb
mov
mov
inc
mov
gs
fwait
jno
fs
movsb
iret
popa
popf
add
imul
dec
je
xor
mov
mov
repnz
sbb
fsubrs
add
mov
sbb
aad
xchg
xchg
sub
xchg
fs
jl
shlb
xchg
in
push
fisubs
jmp
jnp
test
xor
mov
leave
pop
insl
adc
cld
cmp
xor
lock
jbe
cmp
js
push
sbb
lret
push
jmp
andl
dec
into
cmc
xor
jge
repz
mov
dec
pop
jl
push
data16
iret
hlt
out
inc
sbb
icebp
sbb
pop
adcl
ljmp
pop
idivl
inc
cld
ficomps
pop
repnz
mov
mov
aas
shl
cmpb
ds
push
sti
xchg
xchg
xchg
in
sar
outsb
shrb
and
sub
inc
jne
lcall
jae
mov
les
imul
aaa
mov
mov
jg
jne
mov
test
ret
ud2
pop
fmuls
sbb
orl
inc
cmp
jmp
pop
jl
leave
jmp
xchg
mov
decb
cmp
leave
push
mov
sub
fcmovne
mov
shll
push
mov
ret
das
cmp
into
ficoml
sbb
fldenv
mov
pop
pop
imul
bound
adcl
std
mov
lcall
jb
popa
mov
sub
cli
cmc
cmpsb
sbb
mov
jmp
xor
movsb
lods
adc
mov
mov
adcb
mov
out
and
je
sahf
add
mov
sbb
pop
insb
xchg
das
clc
shlb
push
inc
cmc
or
ret
jmp
imul
pop
xor
mov
stos
mov
xchg
pusha
ret
es
rcrl
and
pop
lret
and
mov
sbb
repnz
mov
stos
leave
or
mov
push
movsl
or
inc
jno
fistps
in
mov
outsb
xchg
push
popa
adc
push
out
mov
ss
int3
nop
push
sbb
cs
jb
add
imul
jecxz
sub
lcall
push
xchg
int3
push
cmp
pop
cmp
cmpb
imul
jo
dec
cmp
pop
cmp
aam
add
cli
cmp
pushf
test
and
mov
sub
shlb
mov
jno
das
mov
mov
dec
clc
filds
cs
dec
jnp
nop
loope
mov
xor
fnstcw
loope
je
inc
push
xor
mov
in
data16
iret
cmpsb
jno
cmpsb
loopne
mov
roll
sbb
dec
cli
aad
into
into
sahf
inc
sub
int3
xchg
sub
cmc
xchg
insb
sbb
mov
sub
dec
stos
and
jle
xor
fldenv
stos
loop
in
popa
cmpsb
mul
fnstenv
dec
pop
mov
inc
loop
insl
nop
ret
in
sarb
sbb
push
cmpsb
loopne
hlt
xlat
push
mov
lret
pop
cmp
aaa
adcb
idivl
arpl
mov
pusha
ret
dec
inc
pop
push
stc
xchg
negb
xor
add
cld
pop
lret
dec
cmp
push
lret
mov
je
push
int
jmp
lret
repz
std
popf
shlb
fcmovb
adc
sbb
sub
bnd
addr16
fdivs
js
inc
lahf
ljmp
inc
cwtl
shlb
in
inc
push
xor
lcall
push
pusha
cwtl
shrl
inc
fwait
lods
shr
nop
dec
inc
stc
adc
pusha
sbb
mov
mov
ja
movsl
cld
inc
ljmp
pop
lods
mov
fists
sub
pop
sbb
mov
push
gs
mov
adc
clc
xor
push
pop
pop
movsb
pop
repz
lea
adc
cwtl
fiaddl
sub
out
sub
push
ds
dec
fildl
call
inc
mov
or
gs
icebp
fisttpll
shl
push
pop
icebp
pop
xchg
push
mov
mov
stos
es
in
jg
xchg
push
decl
adc
pusha
inc
sbb
gs
xor
push
jbe
bound
cmp
mov
out
inc
jno
cmp
xchg
jecxz
jno
or
jnp
mov
add
inc
and
jecxz
mov
lods
rol
fcomi
rorl
pop
pop
leave
rorb
sub
insl
mov
dec
in
jne
fdivrp
inc
cmc
insb
mov
clc
dec
push
cwtl
and
imul
sbb
sub
mov
mov
mov
mov
rorb
sub
sub
mov
add
jg
fisubrs
inc
iret
cmp
adc
mov
push
sub
dec
hlt
lods
xor
out
inc
nop
test
fimuls
xlat
mov
nop
cmpsl
in
aad
bound
push
mov
lcall
pop
inc
pop
pop
stos
outsb
rclb
jno
ljmp
inc
iret
out
lods
test
popf
arpl
or
jns
or
cli
inc
sbb
aas
mov
inc
pop
mov
ja
mov
sbb
xchg
enter
repnz
ljmp
lods
cld
es
mov
cmp
inc
adc
inc
cltd
outsl
inc
and
insl
pushf
rolb
cmpsb
sbb
enter
mov
scas
sub
pop
or
inc
dec
popf
sbb
out
pop
mov
pusha
repnz
hlt
push
fidivrs
cmp
push
mov
mov
clc
iret
inc
inc
imul
gs
ljmp
lods
push
ds
cld
gs
je
xor
and
cmpsl
cmp
mov
cmp
fsubrs
das
push
jbe
adc
sub
int3
sub
ljmp
pop
lea
adc
dec
pop
mov
xchg
push
sub
gs
jp
and
and
shll
test
mov
insl
in
push
stos
ss
movsl
jl
push
fbld
ret
sub
and
mov
daa
int
or
in
push
cmp
lahf
shll
cmc
dec
inc
sbbl
lret
pop
pusha
aam
jecxz
into
mov
in
je
pop
enter
in
mov
test
aas
adc
movsl
sbb
scas
add
loopne
cmpl
int
lods
inc
adc
xchg
mov
ret
and
aad
mov
dec
addr16
and
sahf
sub
sub
test
insl
dec
in
push
ret
in
mov
add
pop
or
jns
fisttpl
in
fs
popa
fdivrl
mov
ret
jecxz
pop
das
jbe
leave
add
jnp
cmpsl
cmp
andl
cmp
gs
hlt
std
insl
cld
jbe
int
push
jae
out
test
mov
fs
mov
or
outsb
cmp
scas
fsubs
cltd
cmp
pop
mov
stos
fstl
and
adc
cli
leave
mov
stos
pop
dec
pop
jge
adc
pop
aaa
clc
lock
mov
mov
cli
mov
push
cmpl
dec
xlat
sbb
xor
imul
es
stos
std
aam
adc
scas
mov
imul
pop
xchg
daa
pushl
cmp
lcall
mov
or
mov
aaa
dec
sub
jb
ljmp
fstl
inc
clc
mov
ljmp
cld
les
subb
js
int3
mov
or
sti
mov
push
inc
outsl
imul
repz
pop
mov
nop
inc
sub
xor
pop
scas
shrb
dec
fs
pop
stos
out
fcoml
push
insb
mov
pop
fdiv
rolb
ss
mov
dec
push
mov
lret
dec
and
repz
sbb
sahf
pop
adc
or
mov
inc
fcmovu
dec
add
jl
or
dec
cmp
push
push
addr16
test
ror
push
xchg
aam
sub
pop
bound
bound
es
or
pusha
das
mov
sub
test
dec
test
dec
aaa
dec
notb
leave
adc
notl
mov
leave
sub
xlat
sbb
sub
xchg
push
or
sbb
and
xor
xchg
xchg
xor
repnz
inc
jl
cs
push
cmc
dec
mov
int3
fists
lret
fcoml
out
mov
mov
xor
or
jbe
js
fstps
nop
xlat
pop
out
push
popa
cmp
sub
sub
aas
jmp
idiv
xchg
pusha
insl
aam
mov
imul
mov
inc
gs
xor
mov
aam
dec
imul
cmp
xor
dec
lea
add
ret
mov
bound
pop
mov
loop
xchg
cmp
sbb
sub
loope
jmp
mov
inc
popf
das
loopne
push
imul
adc
push
mov
clc
cmp
out
loope
mov
pop
leave
subb
mov
test
xchg
repz
js
aaa
movsb
ljmp
push
xor
mov
lds
xchg
or
cld
and
cmpsl
std
je
andl
int3
pop
mov
sub
cmp
push
mov
je
outsb
adcl
test
scas
inc
cwtl
movsb
xor
xchg
and
add
push
sub
dec
sbb
add
or
clc
push
repnz
ret
rorl
int3
cmp
ds
mov
aas
fdivrs
xor
jle
xchg
bound
inc
sbb
cmp
ljmp
mov
shlb
inc
push
out
aad
jno
add
jne
popa
loop
xor
push
xchg
mov
add
xor
gs
fisttpl
or
mov
and
into
jns
adc
adc
loop
xor
dec
icebp
mov
inc
ss
or
mov
subps
sub
mov
xor
dec
insb
cmpb
sarl
cli
aad
loope
insl
icebp
ret
dec
scas
push
mov
dec
rorb
pop
add
movsb
xchg
push
icebp
dec
jo
rolb
andl
add
and
mov
pop
daa
inc
or
fistps
xchg
pop
inc
and
and
data16
cwtl
fcompl
pop
mov
sti
add
sub
gs
dec
sahf
cmpsl
idivl
insb
sarl
cmp
sbb
sub
xchg
xchg
stos
sahf
ret
mov
and
xor
std
lcall
cmp
fwait
or
in
dec
andb
mov
sbb
push
ret
dec
add
push
enter
test
cmpsl
outsl
pop
inc
pop
cmpsb
ss
inc
fs
dec
mov
fs
rorb
shlb
mov
or
repnz
pcmpgtb
lahf
outsb
test
popa
pop
shll
add
shll
xchg
and
cli
cmpsl
mov
ret
jb
pop
xchg
mov
outsl
movsb
jp
inc
repz
gs
or
ja
cmp
mov
bound
sub
mov
popf
sti
mov
pop
inc
pop
mov
sbb
jo
cmp
and
pop
das
xchg
rorb
stc
das
loop
sbb
ret
imul
jbe
inc
sbb
sbb
iret
xchg
gs
ficoms
xor
stc
jno
dec
dec
shlb
mov
rcll
xor
push
jb
xor
pusha
pop
jno
dec
xor
test
sbb
xchg
mov
cli
lret
and
in
pop
lea
push
insb
movsl
cmp
andb
adc
cltd
jg
jp
sbb
adc
jbe
cmp
push
sahf
idivb
lds
popl
mov
cmp
stos
adc
shl
cmp
adc
test
xor
jns
xchg
cli
push
or
test
add
loope
mov
into
cmpsb
pop
dec
pop
mov
test
jge
in
inc
sbb
ss
popf
or
jl
xlat
dec
lahf
mov
sbb
testl
sti
icebp
sbb
or
stc
jge
jp
sub
push
les
add
dec
jne
mov
ja
push
rclb
push
and
xchg
dec
arpl
jle
sar
loopne
mov
or
repnz
lock
mov
jg
mov
sub
sbb
es
cmp
test
pop
outsl
mov
mov
jb
sbb
cmc
aam
xorb
rorl
mov
cmpsb
lret
daa
mov
cmp
test
xor
add
mov
pushf
imul
addr16
jb
ds
pusha
hlt
cmc
inc
fldenv
pop
add
lods
popa
fistps
fimuls
mov
mov
jo
fisubrl
push
xchg
inc
xchg
pusha
mov
xor
aas
jle
sub
cmpb
insl
enter
rolb
fadds
cmpsb
adc
dec
mov
test
jno
imul
fistps
js
sbb
fcom
jno
pushf
cmp
sbb
mov
data16
fildll
cmpsb
adc
sub
push
jns
stos
push
and
les
fimuls
dec
es
jns
aam
mov
mov
movsbl
pop
sbb
cmp
mov
pusha
orl
xchg
and
icebp
scas
and
test
xchg
lock
xchg
lods
stos
mov
push
dec
test
cmp
pusha
fnstenv
mov
and
and
cmpsl
xlat
lahf
inc
popa
stc
loop
clc
lea
jg
mov
or
stc
push
cmc
stos
inc
scas
jge
xchg
mov
adc
jmp
pop
lret
js
aas
rcll
loope
mov
notl
fimuls
jns
loopne
hlt
pop
outsb
xchg
repz
mov
push
imul
add
stos
sbb
aad
inc
test
cwtl
add
push
push
scas
push
icebp
xor
sub
sahf
mov
imulb
mov
cmpb
lret
mov
in
pop
sbb
arpl
pop
outsl
es
jns
sub
ljmp
out
mov
aam
lods
stc
aaa
daa
jecxz
adc
test
mov
stos
pop
call
add
inc
mov
out
xchg
lock
pop
add
jg
xchg
sbb
fistl
mov
aas
fdivl
aas
cwtl
xorl
pop
adc
and
and
sahf
sarb
adc
pusha
pushf
mov
aam
or
jo
adc
out
hlt
add
add
pop
pusha
enter
das
pop
dec
dec
mov
arpl
jae
sbb
mov
and
lock
es
fidivs
ja
fdivr
or
lret
push
stc
mov
jo
adc
icebp
or
xchg
jmp
mov
and
sahf
or
iret
mov
push
push
mov
jl
push
and
fmul
lods
cmp
into
push
push
cmpsl
pop
jo
mov
jae
jg
int3
jl
jge
pop
lcall
aam
scas
shll
clc
test
inc
xor
dec
cmp
mov
sbb
pop
mov
mov
aas
pushf
arpl
push
in
or
mov
cld
pop
sbb
cli
icebp
or
add
push
mov
js
inc
cli
jnp,pt
jl
xchg
push
sbb
fwait
inc
xor
sbb
jns
loopne
popf
mov
sub
jne
adc
loope
cmp
adc
test
dec
enter
adc
xchg
dec
jne
jl
pop
fmuls
lcall
add
push
out
mov
sub
fwait
mov
pushf
adc
lock
insl
mov
insb
dec
jecxz
and
lods
xchg
and
xor
das
lds
mov
mov
cmp
cmp
pop
pop
xchg
ficoml
add
and
mov
movsb
push
ja
fstpt
in
mov
shll
dec
cli
das
in
ret
and
movsb
test
bound
inc
mov
inc
xchg
out
out
and
dec
loopne
adc
mov
push
cmp
inc
mov
jmp
mov
shll
or
inc
mov
sbb
incl
lcall
push
pop
in
sub
mov
adc
xchg
shl
stos
fsts
push
adc
ficoms
inc
jmp
int3
dec
and
cmp
stos
xchg
xchg
mov
fiadds
sti
les
dec
mov
xchg
and
xchg
aad
pop
shl
movsl
lock
cld
and
lods
int3
sbb
ljmp
xor
cs
mov
xor
clc
or
hlt
ret
das
scas
mov
fsubl
fsubrs
xchg
subb
mov
or
test
pop
filds
adc
jnp
jmp
jo
lock
lret
and
call
out
push
xchg
sahf
cld
mov
xor
jge
rorl
cld
out
test
cmc
push
movsl
cmp
imul
jle
xchg
sub
mov
nop
jle
inc
jno
adc
jae
jbe
push
mulps
outsl
enter
adc
jle
cmp
hlt
cmp
mov
push
and
fisubrs
ret
inc
jno
mov
jl
xlat
xor
arpl
and
push
insl
mov
int3
movsl
push
pop
das
fdecstp
mov
movsb
or
jb
aaa
out
roll
pusha
out
lea
mov
leave
and
testl
or
mov
cmpsl
pop
sub
out
mov
pop
shlb
mov
mov
pusha
sub
out
push
imul
out
test
fs
inc
cmp
adc
popa
fbld
gs
inc
push
push
mov
adc
ds
dec
mov
sub
les
es
pop
xlat
jo
clc
loop
scas
sbb
mov
dec
mulb
cmpb
jg
xor
jns
fstps
jl
mov
mov
pop
fcoml
into
cmp
call
add
lea
sbb
fmulp
xor
mov
test
outsl
dec
es
push
mov
sub
sahf
pop
fs
sbb
testb
in
sbb
jnp
out
out
lret
xchg
or
sub
out
rclb
sub
xor
xor
jg
jb
test
push
cmp
rorb
push
mov
push
rolb
scas
push
in
leave
sbbl
fnstsw
and
rclb
pop
enter
shrl
sti
mov
cmpsb
call
insb
in
jne
mov
pusha
cmp
jg
cmp
mov
pop
int
fs
mov
pushf
repz
ja
mov
xor
pushf
in
in
adc
mov
ja
cld
cmp
out
add
call
popa
xchg
add
hlt
jo
xchg
jo
dec
ftst
mov
xchg
jmp
int
mov
or
inc
cwtl
hlt
repz
aaa
or
sub
pop
or
cmc
jo
adc
xor
push
out
cmp
and
movsb
bound
ficompl
rcrl
loope
fcomps
adc
dec
and
sub
jge
les
cmp
or
seta
pushf
fstpt
mov
mov
roll
dec
push
in
mov
and
or
mov
dec
mov
lods
bound
aam
cmp
inc
mov
insb
inc
loope
jne
call
mov
push
xchg
stos
pop
cmp
xchg
inc
mov
sbb
sub
test
les
push
inc
insb
and
cwtl
pop
pop
jae
pop
enter
adcl
fists
xchg
jnp
jnp
std
lods
or
in
dec
adc
fiadds
pop
adc
mov
jecxz
movsl
xchg
add
xchg
or
cmc
sbb
out
in
jnp
sbb
leave
lock
movsl
cmp
inc
loopne
adc
xchg
or
cmp
pop
push
mov
or
hlt
mov
dec
mov
and
aaa
data16
imull
sbb
jmp
lahf
sbb
stos
lods
enter
test
fisubl
dec
cmpsb
inc
push
ficoms
cmp
push
test
dec
sub
inc
mov
jno
jecxz
mov
jecxz
fldcw
adc
pop
aam
add
orb
add
jno
ror
xlat
pop
jl
repz
mov
jle
stc
push
xchg
pop
jnp
mov
inc
mov
jle
pop
rol
mov
or
or
jmp
mov
inc
cmp
pop
and
mov
sub
xchg
lds
clc
inc
loop
loop
jnp
stos
jp
mov
xchg
or
outsb
add
fistpl
call
ret
mov
adc
lret
xlat
scas
int
test
lock
outsl
stos
mov
stc
loop
jne
and
stos
or
and
push
mov
xchg
sub
icebp
mov
int3
cmp
shl
lds
iret
xor
nop
movsb
cltd
cmp
jnp
into
dec
aas
out
dec
out
add
imul
dec
pop
loop
and
lcall
inc
push
jl
adc
sub
push
cmpl
ja
cmp
std
test
push
gs
popf
pop
rcrb
or
push
push
lods
fcomi
xchg
sbb
outsl
test
cltd
cmp
clc
or
jle
xchg
icebp
add
sbb
in
mov
mov
mov
jl,pn
out
and
mov
out
dec
lcall
stos
or
add
movsb
pop
fstpl
push
orl
adc
adc
jb
stos
stos
addb
adc
in
daa
ss
cmp
in
or
test
bts
fcoms
icebp
or
jno
adc
leave
test
int
cmpb
and
aaa
pop
xor
mov
std
std
xor
sub
mov
jns
mov
adc
int
je
mov
stc
dec
enter
xlat
mov
shrb
ret
popf
mov
bound
ret
popa
in
clc
cltd
repz
imul
mov
inc
jne
xorb
xchg
jne
xchg
cwtl
movl
insb
outsl
fwait
shll
ret
daa
push
testb
bound
push
adc
dec
out
sbb
mov
aad
in
addr16
xchg
out
dec
xchg
nop
xor
xchg
das
sbb
xor
adc
bound
jmp
repz
sarl
push
imul
mov
lock
add
xchg
add
sub
lret
mov
fsubrs
mov
mov
cmp
in
xchg
clc
loopne
cmpsl
push
add
shl
inc
scas
int
sbb
rorb
sbb
popa
aas
jbe
sbb
or
popa
stc
pop
push
xchg
out
fs
mov
test
clc
push
inc
xchg
xor
insb
xor
test
pusha
stos
xor
fcomps
lret
mov
xor
sbb
ss
mov
movsb
xchg
and
xchg
int
incb
mov
insb
inc
rorl
mov
les
idivb
mov
repnz
imul
stos
xor
mov
lahf
dec
les
add
xchg
fs
and
jbe
rorl
movsl
and
and
rcll
sbb
cmpsb
push
and
nop
mov
sub
xlat
les
and
aad
sbb
mov
rcrl
popf
outsb
mov
xchg
cltd
lcall
push
mov
mov
lock
push
mov
loope
adc
cmp
push
mov
repz
sbb
stos
insl
xchg
xlat
inc
pushf
sub
and
cmpl
fnstenv
outsb
push
inc
add
lret
push
push
mov
lcall
stc
cmc
sub
loope
inc
daa
jnp
cld
cwtl
in
jnp
call
add
push
and
in
lea
or
imul
lret
cmp
mov
sbb
daa
push
mov
aad
in
lea
dec
lods
mov
pop
xor
mov
in
pop
cmpsl
xor
sbb
outsl
add
addb
jne
sub
sbb
mov
xchg
add
fwait
mov
fldl
mov
enter
test
cltd
and
js
lret
in
fisttpll
xchg
sahf
mov
mov
push
int
in
scas
das
fstpt
rorb
or
lea
scas
adc
mov
pop
js
shr
ror
inc
sbb
sub
mov
sbb
aam
pop
mov
cmp
sub
loop
stos
fwait
adc
sub
int
jle
insb
hlt
enter
pushf
and
fidivs
and
dec
cmp
adc
inc
mov
rcll
dec
in
lods
xchg
movsb
mov
sbb
dec
push
sti
in
fnsave
gs
jg
shrl
inc
sub
lods
fisubrs
mov
ljmp
inc
xchg
aaa
stc
ljmp
pop
lahf
sbb
stc
dec
das
mov
mov
orl
push
jecxz
pushf
out
push
dec
mov
fadds
push
nop
mov
les
in
jle
mov
xchg
movsl
pop
push
ror
sahf
xchg
jecxz
jae
pop
fsubrl
fdivl
cmp
mov
ret
mov
imul
stc
jg
jmp
jno
pop
inc
insl
inc
sub
push
in
cmp
mov
out
pop
test
stc
repnz
pop
inc
out
and
vmread
lods
test
sbb
xlat
mov
cmp
test
push
ret
push
mov
ds
fdivrl
sub
mov
int3
xchg
or
jp
or
loopne
icebp
xor
or
mov
inc
test
push
jecxz
roll
fwait
pusha
or
mov
movsb
stc
fisubl
inc
pop
sahf
imul
dec
sarb
push
pop
lds
movsl
jg
fidivrl
adc
repnz
test
mov
mov
or
and
stos
addr16
push
fwait
and
aaa
mov
xorl
int
lock
into
jge
mov
xor
call
sub
es
shl
pop
jmp
xor
add
insl
pop
popf
xor
push
fadds
nop
js
test
sti
xlat
pop
test
push
pop
bound
loop
mov
push
loopne
loop
sub
pusha
stos
test
clc
mov
call
sub
fstps
cmp
aas
lcall
loop
and
cmp
or
pop
hlt
xchg
test
mov
xchg
lahf
lods
or
popf
cmp
bound
rcrl
sbb
cld
mov
movsb
push
sub
mov
jp
cmp
lahf
cwtl
sub
jge
inc
dec
int3
repz
jle
or
and
mov
push
adc
mov
pop
jns
or
into
pushf
mov
pop
add
cmp
inc
gs
xchg
ja
dec
or
scas
or
and
mov
imul
int
fldt
scas
fwait
sub
and
xor
mov
out
dec
sbb
icebp
push
cmp
popa
jecxz
imul
pop
neg
mov
sbb
inc
fcmovu
ss
in
inc
or
jecxz
cmpsb
sahf
mov
sbb
cmove
pop
xchg
in
mov
lcall
insl
mov
ds
sub
loopne
xchg
and
es
fdivs
movsb
rolb
sbb
xchg
xor
ja
sub
lods
cmp
imul
leave
sub
in
leave
imul
inc
sub
hlt
push
inc
pusha
jl
push
loope
xchg
in
cmp
in
loope
push
call
arpl
xchg
in
mov
lret
ror
movsl
xchg
stos
frstor
arpl
fisubs
xlat
insl
repz
xor
dec
mov
xchg
loop
mov
mov
xor
sbb
pop
jle
xor
sbb
shl
add
leave
mov
mov
mov
call
stos
jmp
insb
push
ficoms
loopne
orb
mov
mov
aad
sahf
xchg
dec
in
sbb
jp
cld
or
mov
pop
aas
sarb
rol
test
pushf
cld
push
xchg
xchg
sahf
xor
adcb
and
sub
jbe
mov
insl
pop
sbb
push
icebp
mov
daa
mov
stc
sub
or
imul
xchg
dec
call
adc
or
movsb
dec
pop
inc
das
jae
jecxz
jno
cmc
ficoms
repnz
jae
pop
pop
fwait
outsb
ja
mov
and
mov
mov
adc
add
push
pop
nop
push
push
scas
push
pop
pop
insb
cmp
jge
aas
xchg
mov
cmp
cltd
or
xor
fisubrs
aam
dec
pop
gs
xchg
xchg
stc
adc
mov
in
str
mov
jno
in
scas
mov
add
push
cs
scas
loop
daa
push
aam
jg
in
out
push
xchg
lock
inc
cmp
insl
add
outsl
fs
add
ret
jnp
inc
cmp
dec
pop
cld
inc
xchg
imul
testb
or
cmp
mov
out
mov
jo
xor
add
adc
sbb
shlb
jl
mov
jae
repnz
outsl
add
out
sbb
dec
cmp
dec
out
out
iret
sahf
adcb
sbb
rorb
push
cmpsb
push
jb
or
dec
jmp
mov
mov
or
inc
ss
jns
sbb
fs
adc
dec
xchg
xchg
lods
xchg
xchg
in
ss
aam
out
test
mov
divb
lods
jnp
cmp
mov
mov
in
mov
test
orb
scas
leave
push
inc
lret
imul
mov
dec
and
out
sbb
xchg
inc
ret
adc
sub
and
adc
mov
pop
ret
icebp
xor
lods
mov
shlb
xsha1
cmpsb
mov
mov
les
push
xorb
cmp
outsl
push
jg
mov
pop
mov
inc
cmp
dec
test
add
shl
xchg
cmpsb
sbb
sahf
pop
fiadds
pop
inc
mov
sbb
push
dec
rcrb
lds
xor
cmp
std
movsb
add
jae
add
ret
mulb
push
flds
ror
aaa
fimull
mov
sbb
rol
addl
jg
mov
mov
negb
lods
push
cmp
xor
and
sbb
xlat
add
rorb
fidivrs
out
jae
add
pop
inc
or
daa
jle
pop
dec
movsl
fcmovnbe
push
mov
jne
mov
stos
sbb
cmp
inc
je
mov
js
mov
scas
mov
pop
mov
nop
dec
mov
sbb
sar
in
and
cmpsb
out
fnstsw
mov
cmp
jae
nop
mov
sub
stos
jl
cmpsb
xor
inc
push
push
mov
push
xchg
adc
cs
into
mov
out
push
jns
push
cwtl
jge
jne
mov
loopne
loope
xor
bound
jns
aas
cmp
mov
add
inc
sbb
fs
aaa
das
ljmp
int
dec
mov
cmp
lcall
sbb
cmp
xlat
xor
loope
xor
mov
idivl
push
in
mov
sub
mov
inc
push
push
jge
mov
out
cmp
cwtl
push
pop
mov
mov
jmp
ds
sub
mov
xlat
pop
mov
push
test
lret
and
mov
jl
cmp
jmp
enter
cmp
xchg
test
mov
pusha
out
loopne
xchg
add
sbb
sub
push
outsb
loope
and
aaa
push
cltd
mov
push
sub
cmp
mov
cli
inc
jmp
xorb
gs
testl
push
pusha
int3
rcrl
filds
scas
pop
dec
sub
das
dec
push
int
push
enter
les
out
cmpsl
mov
sbb
add
int3
cmp
mov
ds
cmp
pop
js
adc
pusha
adc
pop
pop
xchg
test
into
pop
das
push
sbb
shrl
inc
jl
mov
adc
dec
sub
jno
mov
adc
push
test
cmp
in
enter
push
loope
push
bound
mov
xchg
sbb
imul
jae
and
cmp
jne
push
add
adc
inc
mov
mov
adcl
sub
imul
lods
mov
and
in
add
inc
xchg
jecxz
mov
sbb
jb
sub
cmp
mov
insl
xor
lret
ljmp
shlb
mov
gs
shrl
call
outsl
es
pusha
sar
mov
shlb
push
mov
mov
jmp
adc
jo
dec
enter
mov
lods
mov
out
cmpsl
cmp
int
xor
iret
or
adc
insl
sarb
fwait
mov
je
repnz
push
leave
adc
xchg
cltd
iret
outsl
jbe
and
push
xchg
adc
dec
aaa
faddl
repz
lods
xchg
dec
divl
cltd
mov
nop
movsl
and
mov
xchg
lock
std
xor
test
test
pop
jb
sub
lds
cltd
push
mov
fistps
xor
ljmp
and
push
and
jle
js
pop
inc
stc
outsl
lret
mov
lcall
stc
fs
dec
inc
fs
jle
pop
ror
mov
sbb
call
xor
mov
stc
mov
and
jmp
pop
repnz
aam
arpl
push
rolb
lods
insl
mov
push
or
push
imul
xor
mov
test
xchg
js
fcomps
daa
xchg
mov
into
pop
pop
lahf
cwtl
xchg
in
inc
mov
cmc
test
or
or
jge
xlat
push
aaa
and
es
adc
and
stos
adc
into
push
jnp
into
addr16
dec
mov
in
mov
adc
dec
data16
mov
add
mov
mov
fmull
pop
and
add
dec
ss
sub
test
pop
mov
jnp
and
out
test
test
leave
jbe
out
push
sub
jb
aad
xchg
xlat
in
xchg
std
lret
out
sbb
pop
repz
mov
jecxz
popf
cmp
fidivl
mov
adc
fdivp
or
divb
ss
cltd
loope
push
cmpsb
ja
frstor
add
sbb
inc
cmp
jecxz
lods
mov
push
adc
test
call
dec
and
sbb
sbb
jno
cmp
loop
xor
mov
arpl
fs
lods
in
sub
mov
and
push
aam
xchg
fldt
std
mov
pop
dec
loop
call
sarl
test
sub
pop
jno
loop
outsl
in
cmp
int
pop
jg
fisttps
mov
divb
cmp
jmp
mov
xchg
jecxz
cmpsb
pop
mov
push
lods
daa
push
and
jno
fmul
mov
sbb
jno
or
mov
addr16
mov
lea
out
sarl
nop
and
and
aaa
jmp
dec
call
cmpb
clc
xchg
hlt
pop
cs
dec
out
out
or
daa
jns
fisubrs
inc
movsb
test
adc
sub
iret
pusha
mov
cmp
in
adc
pop
imul
xchg
idiv
mov
out
stos
int3
sarl
add
cmp
or
je
or
sub
mov
mov
jle
sub
setno
xor
and
in
mov
jge
pop
push
or
aaa
lock
pop
or
lahf
xorl
enter
inc
insb
mov
js
jle
enter
cmpsb
mov
movsb
aad
js
push
mov
add
jne
cs
xor
jl
xor
subb
adc
and
outsb
sbb
push
mov
jbe
nop
sbb
fildll
inc
xchg
sub
xor
add
xchg
jp
out
push
aam
fstl
test
ljmp
pop
push
dec
mov
sahf
and
bound
mov
aam
insb
xchg
jo
cmpsl
repnz
scas
test
mov
cmp
ja
in
lods
dec
pop
stos
ja
xor
mov
pop
fwait
loope
cltd
cwtl
nop
stc
cmp
fcmovnbe
push
xor
in
in
inc
pop
dec
test
cmc
dec
or
fsubrl
mov
add
add
and
fst
and
fs
cmp
and
add
hlt
inc
push
sbbl
mov
pop
ja
pusha
flds
or
pop
lahf
sbb
push
jge
dec
push
push
sbb
cli
mov
test
test
jns
das
jne
xchg
adc
sub
stc
push
push
or
xchg
push
lods
dec
mov
ds
sahf
jge
lea
sub
dec
orb
scas
icebp
mov
mov
mov
sbb
cli
mov
sub
mov
or
movsb
cmp
out
iret
pop
dec
imul
es
push
push
cmpsl
nop
xchg
aad
cmc
lret
push
sbb
jae
out
loopne
pop
cmp
lcall
and
jns
pop
les
dec
stos
dec
inc
cmp
jmp
or
mov
lcall
jo
pop
sub
es
dec
in
xchg
push
push
rcrl
jge
aam
adc
sbb
jmp
add
adc
lahf
mov
cmp
dec
dec
cmc
hlt
mov
dec
push
adc
inc
and
pop
inc
jmp
push
daa
das
dec
in
insb
scas
hlt
xchg
dec
jle
es
into
ret
mov
dec
hlt
insb
add
mov
and
fucom
sub
js
and
inc
call
aad
push
and
aad
push
in
xor
ficoml
mov
xchg
sub
out
push
je
cmc
mov
jae
cmpl
loop
mov
jg
rorb
fnsave
insl
aad
sbb
cmp
stos
mov
fwait
adc
xchg
push
dec
sub
lea
inc
jo
das
adc
fs
push
stc
xchg
shrb
bound
add
pop
addr16
dec
fistpll
and
in
add
and
call
mov
xor
inc
lea
orl
cs
push
add
in
xor
cmp
xchg
sub
mov
xchg
stos
push
add
mov
in
insb
mov
out
movsb
imul
loopne
dec
les
mov
inc
or
aas
pop
and
push
cmpsb
in
enter
cmp
imul
pop
outsl
cs
jl
inc
cmp
repz
xor
push
lret
dec
adc
std
pop
sarl
cs
rcll
mov
push
loope
cmpsb
cmp
push
jne
test
push
pop
call
xor
bswap
fbstp
dec
mov
dec
sti
and
xacquire
sti
lret
lcall
xchg
mov
dec
ss
mov
aad
rcrb
xchg
mov
subl
mov
lahf
pop
into
jge
pop
iret
adc
cmp
mov
push
es
jg
inc
je
adc
cmp
sub
pop
lcall
pop
jb
cmpsl
insb
pushf
jp
pop
clc
das
dec
ffreep
xchg
into
inc
push
adc
insl
dec
adc
jle
mov
inc
adc
aam
cld
mov
xchg
jo
cmp
add
out
jp
pop
add
mov
jp
shrl
lcall
cli
sbb
sub
jae
inc
mov
cmp
add
pop
xchg
js
not
cmp
jne
cmp
push
mov
fst
movsl
fdivrs
or
xchg
nop
es
push
jg
stos
xchg
and
scas
enter
lds
fbstp
xor
push
ss
lret
mov
loopne
xor
ss
jb
mov
repnz
xchg
add
xchg
mov
mov
mov
jae
loope
sub
daa
adc
or
jnp
fdivrl
filds
jg
rol
loopne
fiaddl
sbb
stc
loop
pop
imul
lahf
das
dec
or
les
add
sub
or
jnp
aas
dec
push
mov
popf
or
jne
mov
imul
fstps
cltd
fildl
loop
sbb
fwait
mov
mov
mov
loop
xlat
fisubl
loopne
orb
mov
fidivrl
mov
jp
enter
pop
jmp
pop
bound
iret
fs
in
jg
mov
lea
pop
pop
clc
aad
push
nop
aad
int3
int3
jno
or
fisubs
and
xchg
xchg
loop
loop
rorl
mov
fcompl
dec
mov
data16
xchg
pusha
jns
lock
je
fwait
or
cmp
cmpsl
push
jo
jne
pop
fimuls
aaa
and
aas
out
jns
into
add
xor
xchg
xchg
push
ret
mov
test
jecxz
popf
icebp
mov
sub
adc
sbb
xor
xor
repz
mov
in
movsl
jne
jmp
xlat
add
xor
pop
mov
mov
xor
cmp
movsl
mov
xlat
push
jnp
mov
sub
fstl
mov
aaa
mov
dec
nop
xchg
call
dec
jne
mov
jno
or
add
aad
loop
pop
push
xchg
les
cli
cs
adc
pusha
dec
pop
mov
push
cmp
ret
adc
mov
push
cmp
stc
dec
je
cmp
call
sub
int
repz
movsb
sbb
bound
mov
fldlg2
cwtl
mov
sub
xchg
mov
push
mov
cmp
std
repnz
or
and
daa
push
push
and
cwtl
nop
mov
fnstcw
and
icebp
dec
or
sbb
jb
and
xchg
dec
or
mov
popa
or
add
or
push
repnz
or
push
and
and
bound
jb
out
pop
push
popf
push
add
inc
fwait
jp
xchg
fcoml
pop
jae
add
add
add
pop
cmp
in
jg
test
sbb
mov
xchg
negb
push
pop
fcompl
and
mov
sbb
lcall
hlt
das
pusha
scas
add
sbb
stc
mov
ret
leave
rorl
push
cmc
push
mov
cmp
cmpsl
dec
sbb
jp
sbb
or
cmp
shll
xor
outsb
movb
clc
xor
jg
mov
in
or
repnz
repnz
mov
addb
mov
mov
out
and
dec
jle
cmpsb
mov
sahf
cmp
lods
lret
mov
pop
add
or
and
fnstcw
rolb
andl
cs
cmp
xchg
pop
xor
lcall
je
imul
out
lret
dec
out
imulb
push
mov
jecxz
fwait
mov
out
or
les
sti
dec
push
int3
add
jns
cmp
aas
lcall
push
fildl
jb
mov
mov
mov
xor
mov
xchg
or
fsubrl
movsl
and
cmp
sub
pop
movsl
mov
xor
dec
repnz
sahf
pop
mov
mov
cmp
es
jns
inc
mulb
xchg
add
sub
test
mov
cltd
dec
leave
lahf
rcrb
or
push
jo
mov
sub
inc
or
jmp
neg
add
sysret
je
loope
out
xchg
icebp
cmp
push
push
dec
cmp
lock
sub
push
fisubl
mov
stos
sub
inc
dec
jp
sahf
dec
shll
xor
fsubrl
hlt
test
cwtl
shlb
or
bound
add
mov
cld
lods
push
adc
adc
aaa
repz
xor
lods
lods
hlt
xor
jmp
nopl
into
aad
xor
push
sbbb
popl
mov
jg
cmp
cmpsb
mov
js
pusha
adc
and
aaa
mov
mov
je,pn
and
insb
call
std
out
imul
jno
cmp
aam
adc
xor
rorl
rcll
dec
in
push
lds
das
iret
mov
push
enter
sbb
mov
cltd
fadds
pop
xor
aas
mov
aad
int
dec
sbb
xor
sub
dec
add
pop
sti
push
xchg
sti
cmpsl
outsl
or
enter
addr16
fidivs
xchg
mov
xor
in
jp
sub
push
popf
cmp
rolb
cmp
add
xchg
push
loop
or
in
xchg
outsl
outsl
fstl
jge
add
shlb
mov
lods
pop
addr16
mov
mov
jne
aam
aas
icebp
or
mov
cmp
adc
or
or
loope
sub
or
int3
les
xchg
loop
pusha
xor
mov
js
pop
inc
dec
inc
dec
mov
jle
add
pushf
lds
jle
fsubr
dec
cmpsb
jne
inc
int3
mov
aad
rorb
sbb
fildll
xchg
push
fdivs
mov
sbb
ljmp
scas
fnsetpm(287
dec
push
mov
push
popf
jb
pop
into
leave
sub
or
dec
dec
aas
jo
fiadds
sbb
mov
pop
andl
cltd
fidivl
loopne
loopne
movnti
lcall
out
rorl
xor
hlt
mov
mov
mov
inc
cwtl
push
cmp
ss
in
xchg
sub
pop
sbb
push
decl
cmp
insl
sbb
out
adcb
ret
loopne
lods
jbe
stos
pop
lds
push
outsl
push
ret
lahf
mov
jb
in
fbstp
adc
pop
lds
out
pop
mov
ror
cld
es
pop
lods
dec
dec
test
inc
movsl
lock
pop
int
pop
xlat
test
out
jmp
pushf
adc
imul
jns
aad
mov
sarl
into
iret
and
or
mov
inc
mov
push
xchg
mov
xor
lcall
xor
adc
fs
push
lods
rcrl
js
adcl
jnp
std
scas
cmc
sub
pop
dec
movd
iret
loopne
out
stc
mov
jmp
call
mov
lcall
xchg
pop
jb
out
insb
pop
or
and
inc
dec
add
sbb
or
mull
push
jns
add
aad
loop
mov
or
or
add
shrl
sub
mov
push
xor
pop
lds
pusha
cmp
pop
jg
bound
in
ljmp
fdivrs
inc
jbe
icebp
jae
jmp
jbe
sub
data16
mov
xor
lahf
jle
xor
rorl
pop
out
jge
jmp
or
stos
push
decl
out
iret
pusha
cld
cld
and
roll
ret
add
mov
ret
inc
out
inc
add
sub
cmpsl
mov
mov
testb
jno
loope
mov
adc
xchg
js
out
sarl
lret
inc
call
idivl
dec
xchg
jnp
pop
lcall
dec
stos
popa
cmc
fcoml
in
lea
jge
cmp
into
ss
out
push
outsb
ret
mov
jle
out
sbb
jecxz
pop
out
inc
xor
jns
adc
jle
sub
daa
adc
loope
mov
xchg
es
stos
jb
clc
push
or
jl
mov
pop
mov
add
cmp
fiadds
cmpsl
mov
mov
sahf
dec
lcall
out
push
xor
movsb
cmp
je
add
daa
xlat
testb
sub
ljmp
and
mov
test
jl
jge
sahf
push
inc
mov
sub
test
filds
out
ret
xor
push
and
cld
pushf
add
adc
xor
addl
lcall
loop
movsb
adc
les
data16
fneni(8087
mov
dec
add
ret
rclb
jge
sub
jbe
js
in
neg
repz
add
pop
daa
xchg
subl
inc
cltd
cli
mov
mov
popa
sub
insl
insl
call
jecxz
mov
jle
lret
push
jg
mov
in
nop
jnp
je
jb
lock
lods
sbb
inc
out
push
lret
shrb
adc
dec
fcompl
incl
xchg
out
cwtl
in
lods
xor
push
jg
enter
ret
xor
cmp
mov
jns
mov
jge
ficoml
xchg
imul
outsb
mov
sarb
sub
push
pop
mov
je
and
imul
daa
loopne
add
fadds
shrl
mov
mov
les
jl
xor
mov
jecxz
pop
incb
xchg
rclb
push
xchg
jnp
je
mov
dec
sbb
adc
imul
shr
test
out
add
sub
test
sbb
sbb
push
pop
cmp
sub
in
or
fstpl
push
push
pop
xor
sub
repnz
inc
add
cmp
and
xlat
out
pop
sub
add
xchg
jmp
and
cmp
mov
daa
push
and
pop
xchg
mov
into
xchg
xor
addr16
das
daa
jecxz
pop
inc
mov
inc
mov
sbb
adc
inc
pop
insb
inc
adc
mov
and
loope
and
dec
xor
pop
sub
faddl
pop
mov
pop
pop
roll
out
in
pop
push
insl
push
in
dec
stos
pop
ljmp
imul
or
mov
ja
push
leave
bound
mov
xlat
ret
xchg
popf
cmp
and
subb
orl
push
push
xor
mov
add
outsl
xor
nop
scas
cs
scas
sub
mov
cmpsl
loopne
out
shlb
sbb
fsts
push
out
ss
jae
mov
push
mov
sbb
inc
mov
ljmp
ljmp
arpl
std
shll
jae
mov
sahf
repnz
jne
xor
stc
mov
in
pusha
mov
lock
aas
js
cld
pop
negl
jl
arpl
jp
adc
jae
fstpl
in
jp
clc
and
in
add
test
lock
push
pop
inc
xchg
push
mov
push
xlat
sbb
outsl
popf
adcb
sub
aad
into
jmp
outsl
mov
iret
pop
cmp
jl
jns
adc
ljmp
in
cmp
pushf
jl
filds
jbe
aam
jo
pop
out
int3
cmp
inc
inc
dec
dec
repnz
lea
mov
inc
movsb
add
pop
cmc
fsubrs
sti
push
call
sub
cmp
inc
push
dec
push
stos
jmp
mov
fwait
mov
pop
mov
icebp
popa
jb
jno
divb
or
shll
lret
insl
pop
push
mov
mov
icebp
psubw
sbb
xor
lods
xchg
cltd
out
mov
fs
pusha
xchg
xchg
push
fs
or
popf
push
push
mov
push
push
enter
popf
cli
pop
sbb
xor
jns
dec
sub
pop
ret
mov
movsl
pop
mov
xlat
out
xchg
js
aaa
add
in
jo
aam
out
pop
hlt
cmp
inc
xor
adcl
aaa
mov
push
xor
push
pop
and
pop
sbb
das
mov
lods
loope
push
cmp
mov
push
push
sarb
enter
mov
lret
push
add
xchg
push
jne
cld
jbe
in
jp
and
das
pop
daa
clc
cmp
push
aad
test
mov
push
data16
lcall
sbb
stc
test
mov
pop
push
sti
mov
adc
stc
lret
pop
pop
or
and
imul
fisttpll
insb
inc
iret
add
sbb
testb
cli
pop
es
out
jp
sub
notl
fidivrl
lret
jg
jnp
lret
push
filds
aam
push
xor
push
cmp
scas
repz
add
pop
xor
pop
aaa
pop
xchg
inc
nop
mov
pop
add
adc
popf
or
fadds
fisttpl
jno
sar
ds
pop
shll
jecxz
int
gs
rcrb
mov
bswap
es
aas
jmp
movl
sub
adc
dec
lret
dec
inc
out
pop
xchg
pop
lcall
mov
xchg
pop
stc
popa
aam
fbld
loopne
cmp
icebp
sbb
cmp
insb
cmp
xor
jl
fisttpll
xchg
push
nop
leave
mov
shrb
imul
mov
add
inc
cwtl
cmpsb
std
mov
mov
or
adc
sarb
fdivrl
sub
iret
mov
shll
sti
xchg
mov
cmp
mov
test
and
lods
roll
push
and
out
stc
int3
sti
enter
clc
xlat
sbb
mov
mulb
inc
inc
aam
fsubrl
lret
adc
loopne
push
adc
mov
cld
mov
mov
sbb
loope
adc
ret
jl
inc
je
jbe
mov
ljmp
push
enter
cmc
xlat
xchg
pop
jg
add
mov
sarl
rolb
mov
mov
pop
add
cld
cwtl
add
adc
pop
jecxz
icebp
nop
aas
push
dec
sti
je
dec
dec
cltd
test
mov
std
inc
in
xor
xchg
dec
call
jb
lods
aas
pushf
sub
bound
hlt
add
mov
dec
int
pusha
imull
mov
repnz
sbbl
ret
sti
fwait
cltd
push
loopne
pop
call
adc
xor
outsb
cmp
das
fstpl
sahf
iret
std
add
into
cmp
fdivrp
sarb
sub
gs
addb
jne
jle
or
pop
ljmp
xchg
test
cs
add
dec
xor
jbe
or
scas
mov
mov
push
sti
mov
bound
loope
arpl
das
in
pushf
adc
out
shl
rcrl
je
push
mov
mov
mov
cwtl
in
repnz
fidivl
fwait
xchg
fmuls
sti
stos
fs
pop
xchg
xchg
sbb
loop
pop
cmp
mov
xor
adc
sti
add
dec
xchg
mov
out
sub
xchg
mov
xor
ret
leave
icebp
out
push
test
mov
stos
inc
cmp
cmpsl
sub
mov
jge
dec
rorb
ljmp
mov
or
cld
sub
jle
jo
xlat
hlt
stc
and
leave
das
sti
cmp
xor
lahf
out
jne
dec
mov
inc
mov
cmp
dec
pop
inc
push
cmp
mov
push
xchg
outsb
jecxz
aaa
test
jmp
xchg
jae
out
push
and
ss
sub
sbb
out
shll
mov
es
inc
int3
repz
repz
mov
rcr
scas
mov
cmc
test
add
or
daa
sub
mov
sbb
inc
pop
in
mov
orl
xchg
pop
arpl
cld
mov
dec
push
cltd
sub
sub
add
es
ss
jne
imul
loop
out
jns
cmp
push
sbb
push
jae
xor
xchg
movsb
mov
mov
xor
xchg
sbb
push
sub
lret
jg
mov
xchg
jbe
inc
hlt
cmp
aaa
mov
xor
leave
dec
pop
inc
ret
push
andl
sarl
or
cmp
movsl
mov
and
popa
pop
out
lret
icebp
mov
aam
loope
fildll
xchg
push
pop
mov
shl
inc
mov
xor
mov
mov
pushf
push
icebp
dec
adc
push
rorl
iret
lret
shrb
fdivs
push
add
jnp
adc
dec
push
mov
js
ja
lods
add
mov
jp
shl
mov
daa
adc
negl
enter
push
js
loop
inc
in
mov
ds
push
xchg
das
push
lds
cs
push
lods
jmp
test
push
mov
enter
test
adc
xchg
fisttpl
jecxz
xchg
push
and
xchg
inc
stos
xor
xor
pop
sbb
call
xchg
ss
lds
cld
jmp
inc
pusha
ss
aas
dec
mov
cwtl
push
dec
int
fstpl
aaa
sbb
and
test
pop
and
lahf
jno
push
imul
imul
lahf
sarl
out
fwait
jb
addr16
jne
cpuid
push
mov
fiaddl
xor
data16
cmp
push
dec
xor
xor
xchg
out
mov
cmp
fldcw
andl
dec
scas
push
loop
mov
sbb
inc
insl
xchg
outsb
mov
pop
add
cmp
bnd
jmp
sti
and
fadds
js
inc
cmp
mov
xlat
xchg
pushf
dec
outsl
aas
movsl
jmp
iret
mov
nop
and
pop
push
loope
jge
xor
fxch
ds
mulb
and
sbb
out
es
lahf
push
ret
cld
push
fnsave
jg
insb
add
inc
jg
enter
ficoml
pop
xlat
hlt
cmpsl
fsubp
pop
lea
mov
test
pop
inc
enter
jnp
lahf
iret
mov
loopne
inc
mov
add
adc
ljmp
repz
insl
or
pop
int
or
xor
es
pop
inc
imul
aas
fcoml
adc
leave
mov
cmpsb
test
dec
addr16
inc
inc
inc
icebp
imul
xchg
pop
scas
inc
int
nop
fildl
insb
les
xchg
inc
bound
dec
orb
mov
sub
mov
aas
push
pushf
outsb
or
cld
int
lahf
in
xor
dec
push
mov
hlt
jne
inc
or
or
clc
jmp
adc
pusha
dec
sub
das
outsl
dec
sub
xchg
into
repnz
jns
push
cmpb
or
dec
dec
cmp
lea
hlt
mov
shl
out
enter
daa
cmp
test
push
inc
pusha
mov
pushf
enter
fsubl
sbb
stc
push
pop
scas
and
mov
pop
dec
xorl
or
or
lahf
cmpsl
test
push
scas
push
in
xlat
mov
mov
jmp
and
mov
mov
loopne
fsubs
push
push
adc
stc
or
adcl
cmpsl
aad
testb
xor
daa
sub
mov
repnz
bnd
aaa
inc
or
xchg
jl
pop
cmp
adc
xor
xlat
cmp
mov
jp
subl
pop
pop
xchg
dec
movsl
dec
hlt
jne
pop
dec
jle
mov
decl
lahf
stos
add
mov
loope
mov
das
cltd
push
sahf
out
pop
in
outsl
clc
mov
mov
mov
shl
ret
xor
cmp
repnz
or
adc
mov
mov
lcall
mov
sub
mov
sbb
mov
sub
popf
push
fnstcw
mov
addr16
adc
jbe
xchg
mov
pop
xor
xchg
lret
scas
xchg
sbb
sbb
jge
or
pop
arpl
add
pop
dec
sarb
mov
notb
frstor
push
loope
xchg
imul
cltd
lds
jmp
popf
std
xlat
je
out
push
loope
jge
adc
xchg
sub
popf
jae
inc
xchg
leave
add
sbb
push
sub
and
iret
cltd
lahf
cltd
dec
xchg
mov
mov
ret
lret
call
jge
fsub
mov
mov
mov
jg
fnsave
scas
inc
addr16
into
cli
clc
mov
mov
cmpsb
xor
inc
pop
pop
xchg
in
jle
mov
push
or
iret
xor
and
xchg
lcall
pop
sub
push
dec
cmpsl
pop
and
imull
add
ss
inc
gs
push
push
pop
or
jbe
into
rclb
cmp
mov
jne
mov
or
mov
dec
pop
push
jmp
xor
clc
aaa
pop
mov
xchg
pop
sti
in
inc
mov
sbb
dec
mov
xchg
or
jb
xchg
xchg
insl
xchg
pop
out
fistl
sub
jmp
outsl
xchg
mov
cmpsl
or
lods
mov
cmp
dec
or
dec
pop
rclb
movsl
rolb
mov
pop
xor
pop
and
out
mov
cmc
mov
les
test
mov
ljmp
push
jge
pusha
xchg
outsl
cwtl
je
inc
test
ret
in
scas
mov
popf
jp
adc
jno
mov
lods
mov
mov
or
inc
cli
in
lret
xchg
aam
adc
fcmovb
fs
cmp
lock
jne
out
leave
cli
std
sub
in
cmp
cmp
lret
sbb
cld
jno
fwait
mov
cli
lret
push
mov
pop
xor
loope
xor
mov
andl
jbe
jecxz
xor
inc
pop
xchg
pop
rcrl
push
dec
cs
xor
bound
mov
add
mov
mov
repnz
mov
jbe
test
fsubrs
jp
lea
stc
shlb
pop
adc
lcall
fs
xchg
dec
mov
stos
cli
repnz
mov
mov
or
add
and
push
dec
lods
lea
push
cmp
push
aad
ret
jmp
cmp
lods
add
inc
scas
sub
and
in
std
and
adc
test
jle
ret
aad
sbb
ss
push
mov
nop
or
push
insl
jmp
sub
addr16
inc
loopne
push
dec
out
enter
mov
lahf
pop
or
fidivl
and
fwait
lret
or
in
or
and
mov
shlb
or
xchg
add
fisubrl
inc
mov
dec
mov
cmpsb
add
jb
ja
loop
imul
push
sahf
mov
in
sti
nop
pop
xlat
repnz
push
stos
inc
xchg
dec
addr16
cmp
inc
out
lahf
or
fs
push
push
mov
pop
aaa
scas
enter
xlat
arpl
lods
sbb
rcrb
pusha
dec
mov
add
mov
sub
jp
aam
xor
cmp
ljmp
negl
mov
arpl
xor
mov
in
xchg
push
scas
cmpsl
mov
imul
cmp
sbb
push
loopne
dec
jno
push
int
popa
pop
mov
mov
leave
pop
sbb
fcmovu
inc
test
rcl
fwait
xlat
shlb
in
sub
pop
sbb
mov
push
mov
add
pop
mov
push
mov
jecxz
stos
xor
sub
ret
mov
dec
outsl
int3
mov
je
adc
inc
out
int
lahf
cmpsb
imul
xchg
popf
lea
mov
int3
loopne
or
not
movsb
mov
sub
pop
mov
aas
mov
cs
jle
iret
imul
mov
in
xor
sbb
mov
ret
xchg
xchg
xchg
rol
cltd
out
dec
pop
ja
call
dec
xlat
push
xor
mov
jb
jb
dec
outsl
out
orb
mov
stc
cli
loopne
inc
cmp
lds
cmp
jnp
xchg
and
lods
pushf
leave
imul
adc
stc
bound
movsl
aaa
mov
jmp
mov
push
sbb
dec
push
cmp
lods
mov
xchg
add
mov
insl
sahf
stos
into
mov
hlt
outsb
rcrw
or
lcall
decb
sbb
lods
sbb
pop
or
xchg
mov
aam
inc
cmp
pop
out
adc
stos
lcall
push
stc
dec
add
push
imul
je
cmp
out
xor
adc
sbbl
sbb
add
adc
fcomps
adc
dec
push
movsb
mov
push
pop
in
sbb
jmp
pop
das
int
adc
pop
inc
mov
cld
xchg
fcmovnb
fcmovnbe
adc
lods
push
or
sti
cmp
adc
aas
ficoml
sub
movsl
add
or
cmp
loop
cld
shr
nop
out
mov
mov
push
sbb
ljmp
flds
pusha
xor
lds
lret
push
setge
inc
into
pop
cmp
pop
push
es
faddl
repz
out
or
push
es
cmpsb
xlat
xor
mov
loop
fwait
out
lock
add
jecxz
leave
push
and
sub
mov
lcall
mov
lock
xchg
in
and
xor
scas
sti
cmp
movl
xchg
int
fmull
or
ja
aad
mov
bound
pop
jnp
lret
pusha
add
inc
rorb
lds
push
sbb
pop
mov
xchg
fidivrl
jle
dec
jl
cmpsl
xor
cs
std
xchg
pushf
push
push
stos
and
jb
add
mov
loop
rorl
lret
imul
jg
imul
insb
jmp
test
jg
mov
cwtl
push
push
dec
inc
bound
xchg
enter
pop
jns
mov
lret
pmullw
clc
dec
xor
dec
xchg
arpl
mov
sbb
pop
into
repnz
dec
push
into
aad
iret
insl
movb
out
inc
jmp
mov
pop
jmp
jno
mov
push
mov
add
or
loopne
pop
xor
cmp
std
push
push
adc
ret
outsb
mov
mov
mov
push
lods
fst
dec
lcall
fldcw
int3
mov
andl
jmp
push
jns
dec
sbb
xchg
scas
adc
out
cmp
add
and
or
pop
mov
adc
test
cmp
or
mov
negl
out
pop
cmpsl
dec
push
dec
aaa
in
cwtl
xorb
mov
inc
lods
shr
nop
add
lds
adc
std
mov
sub
sbb
dec
sarb
mov
pop
mov
popa
pop
jl
gs
out
adc
les
test
mov
adc
xchg
inc
cmpl
or
sub
inc
mov
arpl
lret
mov
sub
xor
cmp
cs
inc
mov
lods
ds
adc
xlat
and
xor
jp
jp
sbb
stos
fmul
jle
push
and
pop
pop
repnz
enter
adc
cs
inc
fwait
xchg
popa
das
or
rorb
pushf
in
ret
sub
mov
out
daa
mov
outsl
jae
incl
xchg
xor
arpl
mov
flds
cmovle
xchg
sbb
lea
cmp
mov
mov
out
cld
and
clc
repz
pop
sbb
out
add
dec
in
cmp
pop
mov
lock
cmp
dec
addb
add
scas
idiv
loop
das
ja
mov
xchg
in
jp
mov
cmp
ret
sub
repnz
inc
fcoml
mov
ja
sbb
push
push
sub
jecxz
push
cld
rorb
adc
mov
test
adc
call
ficomps
mov
push
mov
test
aaa
or
testb
fbstp
dec
dec
xchg
aad
add
inc
sub
sub
iret
dec
push
shll
sbb
adc
xchg
push
jo
popf
popa
pop
movsl
jae
mov
dec
ret
mov
aad
arpl
and
push
test
cmp
in
push
mov
iret
jo
pop
mov
mov
mov
cltd
xchg
mov
sbb
fldl
xchg
mov
pop
sub
call
add
push
gs
fwait
test
jnp
or
push
add
out
int
mov
addr16
ret
sub
stos
out
mov
dec
sub
dec
fsubl
and
dec
add
nop
out
sarl
push
xchg
jb
add
syscall
xchg
sub
lods
ds
in
rcll
loop
dec
cltd
push
outsb
loop
imul
push
outsl
icebp
cli
je
mov
dec
mov
dec
lods
lock
sub
mov
pop
cmp
jle
lds
and
leave
dec
mov
sbb
hlt
pushf
test
mov
mov
shll
push
cmpsb
mov
push
sub
imul
in
add
jo
xor
arpl
or
shlb
push
inc
add
aam
cmc
mov
push
xchg
sahf
call
push
push
test
shrb
pmulhuw
icebp
clc
sub
addl
gs
mov
js
lahf
adc
out
sbb
cmp
fucomp
xorb
mov
add
ds
and
mov
push
leave
ljmp
mov
out
add
mov
dec
imulb
adc
dec
mov
mov
pop
and
loop
cs
hlt
shll
roll
jle
push
push
lea
cmc
xor
andl
addr16
scas
jb
mov
push
jmp
push
cmp
jecxz
sahf
cli
sbb
sbb
scas
std
xor
pop
push
into
or
inc
jns
jbe
mov
jno
lock
and
push
xchg
cmp
fmul
lcall
daa
dec
sbb
aad
sbb
lahf
cmp
lret
insl
call
push
mov
ret
ljmp
rep
cmp
imul
lock
mov
jns
in
nop
scas
xor
adc
test
cmpb
stc
push
xlat
shrl
push
test
adc
das
jg
cmpsb
sar
fildll
loope
jge
lret
fisubrl
push
or
ret
push
ds
push
in
inc
aaa
fwait
jmp
insb
test
push
xchg
loopne
adc
xchg
jge
lods
dec
add
jbe
pop
lret
mov
int3
xchg
sti
or
inc
or
js
or
stos
int3
mov
mov
nop
addb
adc
outsl
push
mov
std
ljmp
add
js
repz
les
lock
dec
inc
in
sub
push
fidivl
cmp
xchg
cltd
popa
mov
and
sub
jae
mov
loop
out
pop
sbb
lods
clc
pop
xchg
jae
jg
inc
jmp
aaa
mov
push
mov
lcall
pop
xchg
sahf
fisttps
jns
insl
loope
loope
in
cwtl
pushf
xor
std
sbbb
aam
or
test
aas
jns
and
jns
adcl
add
or
lahf
xor
aaa
and
push
cltd
or
imul
xchg
pop
outsl
lcall
xor
mov
imul
sub
mov
mov
ja
jns
arpl
adc
jb
xchg
int
movl
cmp
mov
lret
cmp
stc
loopne
inc
mov
jo
mov
out
fadds
pop
flds
or
push
movsl
sbb
cld
add
mov
sti
sarb
shrl
add
and
out
and
xchg
rcrb
or
mov
loopne
add
data16
insl
orb
sbb
int3
lcall
pop
jle
bound
pop
lds
mov
mov
scas
stc
pop
jge
leave
push
adc
insl
adc
in
in
jno
insb
or
sub
test
mov
fnstenv
add
and
sub
xor
lock
loop
int
inc
and
add
pop
mov
inc
in
mov
cmp
add
repz
pop
ret
inc
das
dec
clc
fmul
cwtl
mov
dec
xor
cmpsb
mov
cmp
shll
test
add
jae
sbb
xor
mov
adc
test
lock
mov
shr
stos
add
repnz
out
fisubl
fsubs
lods
bound
push
jb
inc
push
mov
mov
addr16
addb
fsubl
and
xchg
cmpsl
pop
insb
popf
mov
lea
ret
push
sub
clc
cmpl
mov
mov
ret
mov
roll
scas
cmp
cli
mov
inc
int
cwtl
push
sbbb
cmp
loop
and
sti
xchg
nop
shlb
or
inc
sbb
pop
mov
dec
mov
mov
sub
je
stc
jmp
ljmp
in
int
mov
out
and
stos
dec
imul
bound
xchg
sti
dec
inc
scas
xor
mov
mov
pop
xchg
mov
dec
push
fmuls
xchg
icebp
pop
mov
imul
test
add
jno
mov
jo
xchg
testl
iret
loope
adc
loop,pt
shr
ja
sub
cmp
arpl
daa
jae
push
pop
mov
ret
fisttpl
lahf
pop
jae
mov
add
test
scas
push
xor
fmuls
adc
mov
test
insb
mov
pusha
xor
xchg
xchg
fisubrs
mov
arpl
mov
xchg
lret
ret
sahf
pushf
xchg
sbb
nop
xor
jle
mov
sbb
and
ljmp
pop
pop
cmp
xlat
test
imul
jae,pt
mov
inc
bound
notl
ja
jo
insl
sub
jp
cmpsb
pop
push
mov
push
pop
ret
cwtl
lea
sti
cltd
out
flds
test
push
daa
or
pop
hlt
mov
repnz
sbb
lcall
je
je
cli
pusha
push
shll
pop
xor
cmp
in
out
rol
bound
mov
dec
ja
pop
ror
rolb
mov
popf
and
add
mov
mov
insb
popa
mov
and
pop
sub
push
lods
movsl
les
xor
out
repnz
mov
ret
lahf
and
push
push
int
xchg
xchg
xor
int3
leave
xchg
sub
jno
movsl
jmp
data16
pop
ss
push
into
dec
mov
sub
ret
iret
push
dec
inc
pop
imul
cwtl
imul
pop
lahf
insl
xor
ret
xor
add
adc
cmp
jno
push
jns
jno
mov
push
cmp
fnstsw
aaa
inc
pusha
aad
aas
mov
mov
push
sbb
xchg
pushf
jno
pop
xchg
and
pop
scas
rcrl
mov
daa
xchg
mov
dec
and
adcb
cmp
add
fbstp
nop
lcall
cmpsl
loope
mov
mov
lret
ret
iret
in
push
sbb
sbb
mov
adc
je
call
popf
in
mov
mov
cmp
pop
cmpsb
incb
je
sub
test
or
enter
xor
in
stos
or
cmc
xchg
push
sbb
mov
sub
nop
jns
es
push
and
mov
fnstsw
mov
inc
imull
cmp
or
imul
add
sbb
mov
sti
xor
jo
sbb
into
loope
cs
xlat
jmp
mov
adc
icebp
sub
jmp
js
std
fildl
into
dec
icebp
or
cs
ret
testl
aad
into
dec
mov
inc
test
and
dec
fs
pop
dec
xchg
xor
sub
out
mov
jno
xchg
xchg
or
shll
sub
cwtl
scas
or
fsubrp
lret
nop
lcall
ret
cmc
xor
ja
push
sbb
mov
aad
cmp
mov
sub
jae
fbstp
inc
mov
rcrb
mov
sub
test
sub
mov
mov
std
loop
pop
js
shll
fists
insb
sbb
cs
xor
fimull
ret
les
fsubp
push
push
jl
lods
stos
mov
insl
out
adc
mov
outsb
lret
sbb
imul
cld
or
xchg
insb
pop
sub
push
sbb
xchg
mov
mov
jp
mov
inc
in
incl
jno
sub
or
pop
dec
pop
in
roll
mov
jno
testb
iret
leave
xchg
push
jle
jmp
push
addr16
mov
js
test
xchg
js
hlt
inc
jmp
cmp
insl
inc
sbb
adc
ds
dec
mov
xor
in
outsl
loopne
inc
xchg
imul
push
dec
sbb
icebp
sti
aas
sub
jbe
sub
mov
lea
pop
out
scas
arpl
dec
and
in
mov
pop
push
shll
inc
mov
pop
arpl
aad
add
je
push
lods
push
mov
imulb
xor
push
mov
sub
arpl
mov
sub
ljmp
pop
inc
sub
andl
push
das
or
add
in
dec
clc
les
xchg
jne
mov
mov
negl
repz
popa
call
fsub
test
sub
cmpb
mov
add
adc
pusha
mov
add
enter
inc
push
inc
insl
shlb
mov
mov
mov
mov
jns
adc
dec
adc
pop
and
and
inc
inc
jns
cmp
push
mov
push
pop
adc
es
insl
dec
mov
out
cwtl
and
lret
bound
inc
pop
and
loope
rcrl
dec
and
xor
inc
cwtl
and
es
adc
cmp
leave
mov
adc
and
mov
inc
cmp
nop
daa
jae
in
cwtl
mov
dec
movb
sti
cli
hlt
pop
dec
pop
cld
dec
scas
bound
in
push
jnp
inc
sbb
shr
dec
rcl
push
dec
cmpsl
jo
jb
lahf
adc
lds
jae
scas
icebp
adc
jns
frstor
fcmovne
and
add
cmpsb
xor
add
and
adc
add
aam
cmp
mov
ret
jns
xchg
cli
jb
fsin
loop
xchg
sahf
inc
in
lret
jno
ret
and
pop
fidivs
cmp
mov
push
add
sbb
loop
jbe
dec
int
dec
sbb
inc
add
and
andb
out
sub
bound
and
sbb
lods
mov
lahf
aaa
jg
xor
dec
push
mov
cmp
addr16
jecxz
fiaddl
adc
into
cld
push
or
aaa
adc
push
test
jle
loop
mov
mov
jns
xchg
sub
inc
adc
mov
sti
jmp
fcmovu
mov
push
stos
mov
pop
sahf
repnz
daa
mov
sbb
mov
adc
jp
push
jnp
ljmp
xchg
cli
mov
dec
push
fcmovnu
punpckhdq
insb
into
jne
mov
push
mov
or
fimuls
or
pand
sbb
cmp
pop
and
cli
shr
repz
xor
push
and
sbb
mov
test
sbb
movlps
add
push
lcall
mov
push
std
pop
rorb
adc
hlt
imul
and
dec
stos
in
push
mov
pop
add
inc
sub
jns
sbb
sarl
pop
cmp
pop
and
daa
push
pop
into
lds
push
pushf
daa
dec
add
adc
pop
iret
int
push
in
movb
repz
and
sbbl
popf
mov
hlt
adc
jo
xor
andl
jns
popa
pop
aam
insb
mov
push
sbb
dec
movl
lea
imul
xchg
popf
repz
dec
push
push
mov
pop
cmp
mov
mov
jnp
xchg
mov
lahf
popa
push
pop
hlt
sub
xchg
test
push
lret
jns
pushf
es
xchg
rolb
add
adc
xchg
loope
xchg
shrl
inc
bound
scas
xor
call
in
xor
ljmp
push
pop
pop
mov
ja
xor
jle
mov
mov
aam
xchg
pop
into
mov
test
insl
sbb
cmpsl
out
jg
xchg
arpl
mov
fwait
cli
mov
ret
pop
jg
mov
mov
mov
cltd
jp
xor
icebp
xchg
popa
and
stos
clc
push
lret
orl
push
add
adc
xchg
sbb
aaa
xor
adc
sti
cmpsb
repnz
mov
push
or
pusha
lret
sub
cli
mov
add
push
fisubl
fldenv
addr16
cmp
pop
ss
sbbb
stos
jo
jl
dec
sub
add
movsl
jbe
dec
stos
fists
mov
enter
inc
dec
pusha
popa
push
ficompl
call
cmp
dec
in
out
adc
xchg
fdivrl
mov
cmp
inc
pop
repnz
fiaddl
push
jge
scas
push
add
popf
aas
insl
shlb
cmp
xchg
pop
ja
sub
cs
cltd
les
xlat
popf
xchg
or
push
jge
stos
sub
fwait
mov
fwait
and
lcall
mov
xchg
imul
int3
rol
xchg
aaa
push
aad
push
push
jge
xor
stc
dec
pop
push
loopne
pop
mov
inc
aad
or
aam
xor
lret
test
aas
jl
arpl
pop
pop
cmp
xchg
sarb
nop
xchg
pop
je
xchg
pusha
jnp
mov
adc
adc
xor
inc
mov
dec
mov
out
xor
sbb
cs
sbb
mov
pop
cs
adc
popa
cmpsb
push
inc
mov
in
cwtl
stc
stc
out
mov
xor
ja
in
mov
jl
fstpl
inc
out
scas
pop
xchg
sub
cmp
and
pop
ss
cmpsb
pop
mov
mov
jp
xor
loope
cwtl
pop
push
lock
inc
sub
mov
xlat
dec
out
cmp
repnz
jo
das
add
and
xchg
mov
or
orl
sti
inc
xor
idivl
sar
sub
mov
jns
push
enter
and
cmpsb
shll
leave
testl
stos
stc
add
jns
mov
jl
cli
in
rcrl
leave
push
js
test
push
test
add
xor
icebp
add
push
movsl
shrl
push
mov
mov
dec
lods
loopne
xchg
mov
sbb
js
leave
outsb
mov
lds
or
in
enter
push
and
mov
stc
sti
dec
cld
push
fs
jb
lds
or
int
lcall
xchg
shlb
ficompl
pop
inc
int
push
and
push
insl
cmp
lock
dec
jge
lock
mov
in
test
push
mov
pop
fisubl
sarb
out
lods
jle
mov
mov
aam
xor
sbb
xchg
ret
xor
jmp
sbb
sti
xor
in
nop
jl
orb
je
mov
inc
pop
mov
dec
out
cmpsb
mov
ficompl
jb
cwtl
xor
push
mov
lods
leave
fcmovne
push
adc
ja
movsl
add
push
cmp
ret
popf
js
xor
ret
mov
rcr
push
icebp
scas
arpl
xchg
mov
enter
int
daa
dec
push
and
stos
dec
sub
fistpll
or
mov
aas
inc
xchg
cwtl
dec
ja
pop
xchg
iret
jge
scas
insb
or
jnp
aas
insb
out
mov
aaa
sbb
int3
into
xchg
adc
sub
mov
imul
enter
ljmp
ret
add
jne
nop
xchg
pushf
daa
mov
adc
mov
mov
mov
xor
jae
das
mov
fwait
mov
scas
std
cmp
in
pop
cmpsl
push
ret
aas
nop
push
bound
mov
enter
shll
ret
popa
jle
js
pop
stos
xor
enter
push
inc
lret
in
movsl
fcmovnbe
cli
loope
data16
pop
pushl
mov
mov
push
inc
sub
cmp
add
or
sbb
orb
jno
and
cmp
xor
dec
inc
sub
pop
or
sub
cmp
enter
or
add
int
xor
addl
lret
cmp
add
push
ret
sbb
cmc
hlt
or
stos
dec
mov
lods
ret
mov
ret
inc
imul
mov
icebp
xor
pop
jmp
imul
clc
in
dec
cmpsb
std
and
fcomip
sarb
loop
xor
cwtl
addr16
sub
repnz
jne
or
and
addr16
mov
or
aas
repnz
ficoms
enter
add
aam
aaa
dec
das
mov
push
not
dec
mov
mov
ret
pushf
lahf
cmp
insb
pop
rcrb
movsl
mov
inc
push
jae
add
lea
outsl
mov
inc
rorb
call
shll
pop
inc
lods
pop
out
arpl
jmp
pop
repnz
lahf
roll
adcl
inc
cmp
popa
test
xor
mov
mov
mov
imul
addb
sub
mov
xchg
enter
dec
lods
jnp
divb
sbb
icebp
ret
imul
push
dec
gs
push
xchg
icebp
xchg
sbb
push
xor
mov
outsl
gs
jns
sti
jg
inc
aaa
pop
testb
pusha
jge
roll
stos
sbbb
fidivs
jle
lahf
xlat
insl
div
pusha
mov
lahf
out
push
fstpt
push
xchg
add
ficomps
pop
cmp
es
push
outsb
cmp
adcl
fsubs
int
push
dec
inc
repz
xchg
dec
dec
sbb
xchg
mov
jp
or
out
sub
mov
lds
pop
les
or
dec
nop
popf
cs
xor
push
in
das
dec
xchg
sub
mov
daa
mov
shlb
mov
jns
imulb
pushf
imul
mov
mov
cli
imul
mov
sarb
mov
cmp
shrl
js
in
mov
ret
sub
xchg
outsl
xor
test
mov
mov
mov
cmp
rcll
xor
lahf
addr16
mov
pop
push
loopne
cmp
jbe
mov
leave
xchg
test
xor
push
outsl
out
xor
bnd
add
scas
add
jo
and
jp
cmpl
test
iret
sub
inc
call
add
outsb
mov
nop
sbb
or
lods
jne
cli
pop
xchg
adc
stos
cwtl
jmp
pop
out
xor
pop
test
xchg
cmp
iret
or
cmp
cvtpi2ps
ret
inc
mov
out
push
lods
xchg
sub
lcall
mov
pop
outsb
dec
cli
call
int3
jno
adc
fwait
dec
sbb
andl
push
xchg
mov
imul
incb
icebp
pop
movsl
cmp
cltd
mov
mov
loopne
jl
mov
sub
shlb
sub
aas
push
ret
and
push
fisubl
or
pop
sub
xchg
cmp
loopne
xlat
adc
xchg
nop
jbe
pop
ss
add
mov
addb
push
jecxz
or
mov
mov
shll
inc
jno
push
mov
ja
and
jecxz
nop
fs
aaa
jbe
xor
sahf
and
sbb
fsubrs
mov
jle
loopne
or
inc
ja
dec
jns
int3
mov
pop
push
das
mov
xor
jg
xchg
jo
es
inc
out
rclb
jns
je
mov
and
fimull
ds
sbb
mov
add
roll
loop
and
pop
lahf
in
popa
mov
push
jg
cmp
adcb
push
cmp
pop
mov
sbb
aaa
xchg
pop
xor
inc
jb
mov
je
sbb
idivl
mov
xchg
cmp
jbe
repz
sbb
push
sub
enter
inc
test
mov
or
mov
add
leave
adc
sub
call
xor
push
push
lock
cli
adc
adc
pop
dec
jo
mov
scas
or
test
pop
sbb
cmc
stos
sbb
fiadds
cmp
enter
int
int3
jecxz
lret
cmp
mov
sub
mov
notl
pop
push
sbb
jg
dec
arpl
pop
incb
sub
jl
cmp
xchg
idivl
xor
mov
and
ljmp
int3
mov
aas
js
or
inc
fdivrl
inc
fidivrl
std
mov
sarb
mov
addr16
push
repz
inc
loop
clc
leave
mov
sbb
mov
jmp
cmpsl
or
sub
scas
xchg
rcrl
sarl
lods
jb
jl
in
lcall
push
mov
sub
sti
dec
rcr
gs
xchg
mov
dec
sbb
hlt
pop
int
mov
push
in
je
pushf
shrl
push
loop
or
jle
outsb
or
push
mov
sahf
sbb
xor
scas
rol
in
ss
fwait
sub
fisubrl
enter
inc
in
faddl
inc
das
inc
test
je
mov
xor
and
jmp
cmp
aad
push
insl
pop
fsubrl
out
jg
pushf
negl
mov
scas
jns
icebp
call
add
imul
jle
scas
xlat
cmc
pushf
loop
mov
cmp
insl
sarl
sbb
jge
out
dec
int
pop
add
rclb
imul
jno
mov
mov
cmpsl
incb
mov
sbb
fidivs
lret
aam
loop
stc
loopne
sub
xchg
mov
add
rorl
adc
push
fdiv
or
cwtl
adc
cmp
aaa
test
loopne
test
pusha
shll
xor
cmp
retw
jmp
sub
mov
and
sarl
rolb
dec
adc
sahf
ret
xor
das
sub
ret
jb
mov
ret
lock
lret
pop
pusha
sub
test
sbb
jmp
popf
ficomps
mov
or
xchg
or
push
or
pusha
and
lahf
stc
nop
cmpb
jbe
cmp
sarb
pop
lock
xor
shlb
aaa
jp
adc
push
repnz
loope
aaa
cmpb
pop
lods
frstor
cmc
mov
inc
out
cld
mov
idiv
sahf
fdiv
mov
push
scas
or
jo
xchg
in
cmc
out
cmp
lcall
push
jno
jmp
ret
push
repz
jp
push
cmp
fiaddl
out
movsb
cmp
sub
addr16
outsl
push
mov
pop
push
out
xlat
sub
xchg
subl
lcall
jno
pushf
cs
bound
lret
and
mov
test
ss
pushf
jl
sahf
insb
xor
jne
lea
mov
sub
aad
and
jl
enter
aaa
dec
xchg
cmp
sbb
lds
aas
call
iret
imul
and
nop
sbb
push
hlt
out
jp
mov
xor
fwait
in
loope
or
adc
fs
mov
das
xor
xor
pop
push
sbb
in
pop
repz
push
sub
ds
or
and
or
add
pushf
mov
fstpt
rcr
jnp
popa
cmp
jle
pop
dec
jmp
add
push
jb
pop
addb
xchg
out
lods
icebp
cmp
dec
stos
fucomip
dec
scas
mov
and
push
cld
into
or
jne
fld
rolb
bound
cwtl
inc
jg
mov
and
les
stc
lods
sbb
dec
ds
addr16
cld
xchg
mov
xchg
test
mov
hlt
inc
fists
repnz
jl
xor
stos
mov
mov
dec
jmp
ss
cmp
dec
sti
hlt
outsb
xor
movsb
repnz
pop
adc
lea
inc
add
int
jno
sahf
mov
push
cld
in
xchg
cmp
jmp
repz
icebp
add
mov
cld
pusha
or
mov
and
add
movsb
add
insl
push
ret
lahf
pop
or
movsb
push
call
cmp
jp
mov
add
aam
js
push
xchg
sbb
push
mov
cs
movsl
inc
dec
addr16
xchg
push
fidivrs
add
or
add
aaa
pop
daa
sbb
xchg
xor
pop
in
loop
pushf
cltd
bound
sub
mov
pop
or
jnp
gs
xchg
mov
popa
scas
sahf
es
test
fistl
ja
pop
xchg
clc
mov
xlat
ljmp
and
ret
add
pop
dec
pop
cwtl
retw
inc
mov
iret
adc
daa
fwait
in
ret
ret
xchg
xor
push
jmp
xchg
lret
sti
pusha
jnp
fs
push
cmp
push
mov
cmpsb
sbbl
and
insb
aaa
cmpsl
dec
dec
bound
mov
adc
sbb
sbb
mov
cmp
mov
pop
leave
ja
stos
lock
inc
ja
fildll
push
into
xchg
or
push
ds
call
cmp
cmp
xchg
jo
sub
lcall
inc
clc
addb
out
fiaddl
mov
push
in
fbld
ret
push
dec
es
cs
aam
clc
push
or
mov
imul
xlat
push
adcl
repnz
cwtl
lods
hlt
lcall
jge
popa
rorl
std
ret
sub
insb
test
or
mov
cmp
xor
lods
adc
jnp
push
dec
test
hlt
and
aaa
jo
mov
sbb
sub
lods
inc
mov
ret
inc
popa
stos
cmpsl
jmp
je
addb
xorl
arpl
sti
jecxz
pop
push
push
pop
push
mov
mov
push
sub
insb
push
aam
jo
or
jno
movsl
xchg
push
jecxz
pop
out
and
and
out
popf
test
mov
pop
mov
mov
ljmp
imul
xor
jl
sbb
adc
mov
arpl
or
rolb
push
push
sarb
fwait
lahf
mov
pop
out
nop
enter
sub
out
jae
inc
adc
scas
aaa
mov
pop
out
cli
xor
push
pop
inc
jge
cli
rcrb
mov
adc
fldenv
mov
ds
push
call
mov
inc
movsl
jmp
js
fs
jns,pt
add
fisttpl
adc
xor
mov
adc
dec
bswap
or
into
jb
mov
daa
jns
imul
pop
arpl
cmp
add
jb
fstpl
pop
dec
lods
adc
adcl
cmp
pushf
push
xor
mov
rcrl
pop
or
pop
jmp
push
mov
or
pop
mov
es
out
into
mov
jb
lds
xchg
xor
les
dec
or
cli
push
push
jbe
adc
sub
push
movsb
pushf
in
sbb
jp
lret
decl
adc
roll
addb
std
mov
push
push
icebp
mov
cmp
push
sahf
loopne
xchg
jmp
jbe,pt
cmpsl
iret
shrl
orl
pop
in
imul
and
pop
pop
adcl
sub
mov
repnz
pusha
jl
sub
dec
inc
nop
mov
bound
mov
nop
lahf
inc
add
mov
stos
es
add
xchg
sbb
mov
ror
and
rclb
clc
add
or
pushaw
enter
roll
subl
pop
jnp
jecxz
cmp
inc
fs
push
mov
subb
cmp
or
mov
push
icebp
mov
mov
loopne
aaa
mov
insl
mov
adc
fsubs
leave
or
hlt
push
add
xchg
lea
sbb
cmp
nop
sub
imul
dec
mov
push
shll
xor
pusha
xor
mov
jle
gs
pop
xchg
int
mov
sub
xlat
int3
and
cli
pop
pop
xchg
popa
xor
jb
dec
pop
es
xor
sti
add
outsb
out
fiadds
mov
xor
hlt
sub
xor
icebp
arpl
faddl
jb
add
incl
sbb
in
sub
sub
mov
addl
lods
fisttpl
lods
jecxz
or
pop
xor
test
int
mov
cmp
sub
aad
jle
ja
cmp
xchg
imul
aas
xchg
push
ja
push
dec
pop
es
fsubl
push
push
out
add
push
mov
mov
xchg
mov
xchg
stos
pop
mov
cs
je
addr16
mov
sbb
in
sbb
cli
and
in
or
sub
xor
cmp
out
cmpsb
pop
mov
mov
push
or
adcb
or
mov
cmpsl
sbb
mov
mov
pop
jge
in
xchg
sub
cli
imul
pop
bound
pop
call
mov
jae
jae
push
pop
mov
push
or
inc
cmp
stos
push
dec
jb
xlat
mov
mov
pop
and
dec
aaa
pop
outsb
fidivs
jle
push
sub
lea
jle
loopne
add
aad
sub
mov
insl
shl
sbb
and
jo
int3
mov
jg
ja
mov
sub
lds
mov
xchg
rorb
insb
pop
xchg
fimull
stc
dec
xchg
cmp
xchg
mov
mov
sarb
ljmp
or
add
loop
sbb
jp
and
cmpl
aas
cmp
and
jge
lods
data16
mov
fisubrl
movsb
fists
mov
jno
xchg
cmp
and
les
inc
pop
in
cmp
dec
fwait
mov
push
and
shl
jecxz
lds
adc
or
push
sub
dec
out
jae
rorl
and
emms
xor
pusha
lds
inc
int
and
mov
or
jnp
push
int
mov
mov
mov
sahf
inc
pop
xorb
lcall
fstpl
mov
add
and
sbb
add
or
pusha
clc
add
jnp
pop
adcl
idivl
into
test
and
call
sbb
mov
inc
dec
xor
ljmp
sub
cld
in
push
or
or
xchg
cmp
lods
xchg
gs
test
test
mov
out
dec
mov
fldcw
lahf
pop
aaa
mov
test
pop
mov
imul
lret
or
aad
xchg
mov
loop
xchg
or
dec
xor
hlt
pop
into
mov
test
mov
cmp
cld
inc
cs
pop
pop
cwtl
adc
jae
pop
outsl
add
test
lcall
lahf
int3
or
aam
dec
sbb
mov
rcll
pop
sbb
fs
pop
add
jbe
mov
cmpsb
jl
and
mov
out
jle
dec
bound
addr16
dec
sub
add
cld
push
fisubrl
mov
push
ss
loopne
stc
xchg
addr16
xor
fs
cmp
mov
mov
inc
in
loopne
jo
xlat
arpl
movsb
mov
imul
mov
mov
pop
fisubl
insb
dec
push
sub
inc
cmc
add
push
or
dec
push
jnp
jne
dec
in
xchg
mov
das
stos
clc
jo
es
sub
push
jbe
dec
xlat
ficomps
inc
push
add
addl
push
loope
movsl
fstl
add
add
fisubrs
xchg
adc
shlb
cs
in
dec
jns,pt
and
and
arpl
ljmp
aam
pop
popa
sbb
push
pushf
mov
inc
xor
fsubs
leave
in
sbb
call
outsb
sahf
fwait
imul
lret
fisttpll
enter
cmp
adc
dec
insl
mov
add
nop
sub
out
xchg
mov
les
fisubrl
sarl
arpl
push
mov
xor
push
pop
sub
sbb
or
jae
dec
pop
mov
push
pop
mov
cmp
loopne
inc
hlt
push
loope
test
xchg
or
jge
lea
or
test
jne
clc
mov
push
add
sti
dec
xor
in
pop
mov
dec
ja
lahf
sub
clc
imul
in
jbe
cmp
dec
mov
loopne
leave
mov
jle
push
xor
es
mov
jmp
lea
jo
xor
jge
mov
insl
ret
push
and
insb
add
inc
imul
cmp
sbb
sbb
enter
sahf
mov
fbld
lahf
cli
xchg
out
daa
repnz
xchg
into
test
pop
popa
jle
fnsave
xchg
aas
lods
jecxz
in
cmpsb
into
insl
aas
rcrl
movsl
mov
push
cmpl
in
push
popa
xor
aaa
pop
push
icebp
nop
dec
sbb
es
mov
pop
dec
inc
mov
pop
push
nop
das
push
jle
icebp
ss
dec
pop
imul
add
mov
fnstenv
int
jmp
ss
out
pop
subb
out
stos
cmp
mov
dec
xchg
lds
mov
push
rcrb
inc
push
jb
xor
xchg
jns
iret
lea
repz
push
jno
and
rorb
add
jo
mov
orb
pushf
lods
enter
or
insb
stc
push
jne
fsubrl
pop
std
pop
pop
mov
mov
add
adc
shlb
movsl
pop
adcl
cli
ss
dec
xchg
jg
ljmp
enter
jg
sbb
out
push
shll
push
sub
inc
ret
andl
es
mov
mov
sar
lret
xor
lods
sub
sbb
imul
mov
jle
xchg
into
and
insb
jno
in
in
mov
shll
mov
out
inc
push
jg
sub
push
mov
dec
in
cli
iret
lods
inc
inc
push
add
test
lret
sub
sub
movsb
jp
cmp
adc
xchg
ret
add
mov
sbb
test
pushf
fwait
sbb
int3
int
xor
in
push
push
cmpb
inc
sbb
sub
pop
xchg
es
fwait
mov
sbb
mov
fadd
rclb
mov
loopne
lret
shlb
jp
incb
pusha
scas
es
fistl
sub
daa
xchg
hlt
std
popf
dec
loopne
cmpsb
dec
sbb
filds
sahf
sbb
bnd
pop
lea
pushf
inc
sub
xorl
aaa
jbe
in
stos
pop
xchg
mov
mov
adc
or
repnz
int3
sbb
hlt
fbld
dec
mov
inc
pop
push
dec
mov
js
js
adc
ret
ljmp
adc
stc
in
cmp
pop
test
das
clc
inc
xchg
shrb
stc
cmc
or
rcrl
dec
and
out
mov
scas
pop
push
packssdw
cmc
jns
xor
pop
aad
mov
inc
sub
push
enter
mov
push
mov
xchg
sub
test
dec
add
out
jno
pop
mov
pop
push
mov
mov
jp
loope
out
adc
and
mov
hlt
jl
push
loopne
adc
out
pop
je
push
not
out
or
rorb
mov
loope
popf
lcall
fnsave
daa
inc
fcmovne
in
xchg
mov
ret
fimull
sub
xor
adc
ss
rcrl
leave
stos
adc
mov
add
push
sbb
mov
stos
push
pop
insl
out
cwtl
cld
sbb
data16
outsl
roll
aam
test
ret
ljmp
fildl
decb
pop
mov
arpl
dec
cld
jp
call
inc
dec
je
cld
sbb
xchg
mov
mov
mov
adc
xor
fwait
push
push
and
adc
js
jecxz
pop
sbb
sbb
mov
mov
pop
repz
loopne
sub
cmpl
cltd
mov
dec
js
aam
cmpsl
push
stos
movsb
enter
ljmp
adcb
in
add
push
rorb
add
lret
aad
add
les
hlt
pop
daa
cmc
add
shr
ds
jno
add
and
xor
dec
jno
add
pop
jbe
mov
mov
push
jle
jnp
ja
stos
sbb
xchg
cwtl
mov
pusha
sbb
std
or
adcl
mov
jl
adc
ja
loop
xchg
jl
dec
lds
aad
ret
add
repnz
add
adc
stos
xor
sub
and
mov
xlat
loope
pushf
or
adc
push
jno
adc
mov
popf
lods
push
dec
cltd
sbb
mov
xor
xchg
sbb
xchg
js
cli
push
xor
mov
add
pop
in
movsb
mov
ret
and
lret
jmp
sub
push
ret
jmp
jbe
mov
dec
and
sub
dec
in
insb
das
push
repz
sub
iret
rolb
sbb
pop
and
js
mov
addr16
push
dec
mov
mov
out
rorl
lods
shrl
rol
push
jg
dec
jp
lret
xchg
lods
cmp
or
fwait
out
nop
inc
scas
ds
cmp
inc
ljmp
aam
leave
rcrl
push
mov
xchg
out
mov
shlb
divb
mov
nop
cmpsb
adc
mov
outsb
sub
pop
stos
push
out
movsl
je
mov
test
std
mull
popf
add
cmpsb
gs
imul
add
das
fstl
and
mov
xor
divb
imul
orl
sub
cmpsl
sub
popa
mov
mov
xor
nop
mov
inc
aas
xchg
lret
xchg
mov
in
lods
shl
addr16
les
movsl
setae
xor
into
and
push
mov
das
mov
rorb
push
xchg
outsb
imul
xlat
ds
push
cmp
pop
sti
or
dec
daa
dec
pop
or
addr16
sbb
lahf
fdivl
sbb
or
sub
sbb
int3
jmp
fwait
sarb
jle
int
les
mov
scas
push
sub
out
jne
jl
ret
test
jne
sub
aaa
cmc
jo
cmp
or
insl
std
push
test
arpl
cld
mov
pop
sbb
clc
movsb
xlat
mov
dec
popa
je
add
push
xor
mov
cmp
mov
mov
stc
xchg
testl
sbb
lea
push
xor
adc
sub
lahf
aad
mov
mov
xlat
pushf
xor
movsb
push
movsl
dec
sbb
pushf
testb
mov
xchg
mov
and
cld
icebp
outsl
add
mov
shl
cli
out
xor
negb
out
xchg
dec
jo
jne
sub
aas
inc
inc
sti
pop
push
insl
sbb
cmp
push
mov
dec
xchg
sub
or
sbb
clc
mov
cmpsl
jle
sahf
fnstsw
sahf
push
inc
scas
ja
sub
ret
sub
and
ljmp
iret
sub
mov
or
test
mov
les
cld
clc
xor
jb
dec
mov
sub
xor
vandnps
add
sbb
mov
popa
scas
sarb
lock
cltd
icebp
inc
addr16
cmpsl
or
ret
dec
rcl
jecxz
inc
jg
gs
nop
sti
lds
mov
dec
inc
and
cmp
fmuls
jmp
pop
mov
iret
outsl
jl
adcb
adc
cmpsb
add
sbb
push
add
leave
xchg
mov
dec
repnz
fdivr
lods
shrb
aas
push
sub
mov
rcl
outsb
xlat
rcrl
je
mov
or
jle
cmp
push
lods
pop
cli
xchg
jbe
jns
into
xchg
inc
popf
adc
add
clc
push
mov
cmpsl
in
push
add
cmp
jo
or
sbb
dec
out
jmp
ret
rolb
test
cmp
test
adc
outsb
aaa
add
out
adc
and
out
repz
sbb
jns
fcoml
fimuls
ja
mov
sbb
dec
jle
mov
sub
mov
pop
popf
mov
or
sub
xchg
inc
clc
add
inc
std
rcrl
sbb
dec
es
adc
lahf
icebp
jo
pushf
loop
inc
outsb
pop
pop
jns
sbb
sbb
mov
pop
push
and
sub
xchg
lcall
popa
dec
jb
arpl
sahf
addr16
les
mov
push
fdivl
add
cmp
xchg
adc
dec
mov
inc
xor
flds
jle
push
cmpl
lret
fidivrl
mov
jo
or
notb
aam
xchg
mov
lock
mov
popa
cmpsl
mov
sti
push
cld
xchg
sbb
jae
mov
je
or
and
loop
hlt
shrl
cmp
pop
pushf
out
stos
dec
jp
xor
sbb
jle
fstps
out
clc
mov
or
call
and
xorb
clc
xor
dec
stos
push
daa
shll
sbb
je
cmp
push
sbb
jle
subb
dec
adcb
inc
mov
loop
sub
sub
jns
into
push
ror
and
pop
cmp
ret
insb
mov
insl
orb
cli
jg
xor
loop
jp
das
notl
and
testb
dec
xchg
shl
cmc
daa
push
inc
leave
xor
adc
mov
inc
fldcw
in
lret
stc
push
idivb
in
and
mov
mov
popa
jmp
push
mov
push
sbb
movsb
sbb
test
xor
add
inc
and
jmp
in
insl
xlat
jmp
movsb
xor
cwtl
sahf
jb
mov
adc
inc
scas
xor
mov
xchg
or
adc
repnz
fistpl
xor
xchg
cmp
stos
adc
sub
in
jno
cmp
rcl
sub
cli
sbb
mulb
movsb
cmp
mov
adc
shrd
or
push
xchg
cwtl
jne
jle
outsb
sbb
mov
xchg
int
cmp
in
push
clc
sbb
ja
movsl
sub
jecxz
inc
mov
lock
dec
cmpsb
ds
push
cltd
cwtl
sbb
adc
and
sbb
fdivp
scas
jmp
xchg
cld
jecxz
push
jo
mov
dec
sbb
dec
xchg
outsb
repnz
dec
sub
add
xor
arpl
out
repz
xchg
clc
or
lret
inc
sub
out
ss
or
push
inc
pusha
push
pop
jge
in
xchg
loopne,pt
enter
dec
and
testb
les
test
or
adc
aaa
cmp
ror
add
push
sti
int3
mov
js
adcl
stos
mov
sub
pop
int
adc
ret
xlat
jae
xchg
jnp
popl
or
shll
repnz
push
out
add
sub
add
dec
push
push
ret
push
or
std
cmpsb
in
je
dec
fs
in
aaa
cld
popa
mov
pushf
mov
mov
and
dec
sub
sub
jle
mov
pop
sbb
jmp
mov
test
es
xchg
or
push
cwtl
xor
loop
cmp
mov
cmp
sbb
sub
std
out
jmp
cmp
mov
jbe
cmpsl
test
mov
mov
mov
aad
dec
sbb
fwait
jb
aad
fnsave
lods
add
aam
ds
repnz
int
call
mov
mov
xor
sbb
xchg
sbb
fidivs
lock
mov
insb
or
pop
mov
test
xorb
inc
jecxz
enter
and
push
push
test
adc
test
aaa
enter
cmp
or
sbb
xor
mov
adc
push
and
mov
push
sub
andb
fidivl
jns
inc
in
or
arpl
cmpsl
push
dec
outsb
jne
cld
cld
adc
gs
push
fistpl
insb
push
mov
cltd
and
movsl
imul
cli
into
imul
and
cmp
in
nop
mov
sbb
pop
cmp
pop
imul
xlat
pop
lea
jbe
in
rcl
mov
movzbl
inc
xorl
jmp
fstpl
push
loope
dec
scas
sub
sbbl
je
ss
sbb
fstpt
aas
xor
pop
mov
lret
sub
icebp
sbb
out
dec
jp
mov
loope
lods
cmc
jnp
inc
dec
repnz
pushf
insl
mov
imul
fs
dec
test
mov
test
add
cmp
lret
fcoms
or
in
xchg
cs
jbe
fdivrl
xchg
loopne
js
pop
or
aaa
bound
fidivrs
fadds
addr16
push
inc
or
pop
pop
mov
mov
stos
or
mov
jno
imul
outsl
clc
js
or
or
cmp
inc
inc
insl
gs
loope
ret
pop
in
mov
jl
adc
and
xlat
xor
push
or
aaa
mov
subb
test
mov
movsl
shll
je
xor
ret
ja
hlt
push
ljmp
add
or
shrl
or
test
outsb
loopne
or
lahf
dec
mov
and
pop
imul
jbe
or
add
mov
pushf
jo
shll
mov
cli
leave
jp
loope
jns
xor
cmp
in
retw
cwtl
loope
jecxz
hlt
cld
add
test
fldt
mov
movntq
in
pusha
test
int
shlb
clc
cmp
push
dec
ss
pop
xor
movsb
icebp
lock
clc
mov
xchg
jbe
andl
cli
push
pop
sub
addr16
rcl
iret
test
cmc
sti
daa
xchg
imul
js
scas
pop
or
sub
in
push
push
sbb
and
xchg
inc
mov
mov
mov
daa
aam
and
xchg
cmp
shr
fisttpll
sbb
xchg
inc
mov
scas
cmp
sbb
in
mov
jb
pop
mov
push
call
xor
adc
push
lds
fcompl
int3
sbb
pop
add
jl
jecxz
arpl
cmp
insb
cmpsl
inc
lods
mov
ja
xchg
inc
jbe
sub
or
jb
xchg
xchg
je
nop
fwait
iret
js
pop
lods
xchg
js
rorl
sbb
fcom
data16
adc
sub
jp
and
add
cli
push
scas
dec
sahf
out
dec
mov
xchg
ret
stos
adc
cmp
xor
lcall
sbb
push
jmp
dec
push
fwait
mov
leave
shrb
outsb
cmpsl
xor
jmp
std
push
dec
rep
in
pop
sub
push
hlt
shl
xor
jg
dec
arpl
mov
sbb
lds
sahf
cltd
sahf
idivb
or
fcomp
mov
nop
push
loopne
arpl
xchg
mov
dec
sub
sbb
in
out
inc
jns
jg
mov
xchg
stc
push
or
adc
arpl
lret
test
jb
inc
xor
icebp
cmpsl
push
inc
inc
xchg
jae
out
push
or
xor
jecxz
add
test
call
push
inc
aaa
or
cmp
or
mov
adc
shrb
mov
jno
aaa
std
mov
loop
cmp
xor
pushf
jne
or
push
sub
lret
push
jl
push
and
enter
jne
pusha
jae
pushf
lods
or
aad
aaa
shrl
inc
mov
enter
imul
shlb
pop
sbb
loop
fcmovu
pop
int
cli
loop
push
adc
mov
jl
cmpsl
lret
xorl
je
xchg
inc
add
xchg
jnp
xor
xchg
adc
popf
mov
sbb
xor
dec
and
sbb
xchg
sbb
in
pop
int
mov
imulb
ja
jmp
lret
out
mov
jo
jae
pusha
cmp
fwait
in
sbb
jb
popa
cmpb
or
xchg
out
jae
sbb
mov
jecxz
sub
ficompl
inc
out
jnp
add
jmp
jns
sbb
or
ret
frstor
cmp
jb
and
lods
ss
imul
fistpl
lret
inc
andb
outsl
mov
aas
push
xlat
popf
enter
popa
cmpsl
xor
jnp
cmp
or
lahf
fldenv
inc
andb
sub
xchg
mov
insb
cmp
inc
shrb
stc
divb
adc
pushf
mov
imul
xor
or
adc
jle
mov
lock
mov
pop
dec
in
ds
pop
adc
cmp
stos
xor
add
imul
ficompl
rorl
dec
dec
mov
adc
icebp
adc
mov
jmp
sti
fs
stc
or
popf
push
jo
cmp
outsb
inc
jne
mov
add
mov
ja
jbe
dec
fidivrs
or
mov
repz
repz
or
imul
push
xchg
cwtl
mov
in
or
jo
cmp
add
or
jg
rcrl
js
adc
push
pop
sub
flds
arpl
push
pop
fdiv
jns
xor
mov
scas
sub
jnp
fidivrs
jo
rcrb
inc
inc
push
fsubrl
ja
mov
clc
push
popf
les
rorl
and
or
push
inc
fnsave
jae
lret
pop
sbb
out
call
popa
xchg
jbe
flds
repnz
test
mov
jno
dec
fisubrl
jle
jo
clc
bound
dec
jmp
sbb
mov
pop
sub
jmp
jecxz
loop
add
mov
cmp
ret
mov
adc
mov
mov
into
test
dec
jle
add
stos
out
xchg
sti
push
push
push
sbb
pop
clc
push
sub
inc
out
or
jle
xchg
add
mov
add
ljmp
adc
roll
fwait
adc
hlt
testl
and
adc
pop
dec
mov
pop
ret
add
and
movsb
shlb
mov
dec
or
out
fcmovnb
adc
outsb
mov
mov
fwait
in
out
fdivrl
test
jmp
sub
cwtl
sub
in
fucom
add
orl
lods
jp
and
stos
jo
fidivrs
divl
pop
add
xchg
nop
clc
aaa
and
cs
dec
lock
adc
mov
test
andl
push
hlt
jmp
in
mov
dec
ret
sahf
mov
mov
or
cmp
scas
shr
mov
jp
and
int3
xorl
jmp
and
clc
insl
push
repz
cmp
xchg
jb
or
fisubs
pop
inc
icebp
cmpsl
in
out
mov
roll
mov
mov
mov
lcall
mov
std
push
enter
loope
popa
mov
gs
inc
and
pop
dec
mov
mov
mov
imul
std
lcall
mov
adc
jno
jbe
xchg
aam
fdivrs
and
inc
leave
push
dec
popf
cmp
mov
cld
inc
shlb
or
rol
xor
add
mov
xor
xor
sarb
in
add
add
mov
push
mov
pop
lods
adc
add
out
mov
ljmp
aad
repnz
stc
sbb
lock
test
out
adc
cmp
sub
mov
jbe
pop
mov
add
repnz
roll
mov
mov
jg
jae
fwait
scas
xchg
pop
mov
out
pop
movswl
mov
jecxz
sub
cmpsb
push
jp
shrb
mov
jae
out
mov
les
mov
inc
push
mov
in
push
gs
jg
ds
out
daa
outsb
arpl
inc
dec
pop
sbb
jbe
xor
shrb
into
inc
adc
jne
lret
shlb
outsb
in
inc
js
mov
push
arpl
inc
cmp
xchg
aaa
xchg
or
jmp
add
or
xchg
stc
scas
in
or
test
mov
sub
mov
jbe
dec
cwtl
xchg
cmp
jbe
cmpsb
pop
and
inc
mov
lea
pop
out
sahf
jmp
jne
imul
movsb
cli
mov
adc
sbb
test
mov
test
sbb
inc
cli
or
repnz
out
call
imul
movl
jno
push
adc
and
les
ror
pushw
fidivrl
sbb
jle
stos
mov
sbb
repz
and
jae
cmp
sub
jmp
std
push
jmp
repz
xorb
rcr
in
sub
pop
aam
jmp
inc
jmp
add
arpl
mov
test
and
cli
xor
test
push
lea
mov
pop
lret
sub
clc
sub
and
or
jge
scas
lock
nop
jl
mov
sar
ret
xchg
pop
mov
outsl
ljmp
sub
scas
xchg
dec
lds
jecxz
aam
sbb
aad
rep
inc
mov
cmpsl
int3
loop
in
test
sub
push
lock
or
pushf
hlt
mov
mov
loopne
movsb
sub
lcall
clc
xor
mov
jno
jp
clc
xchg
jecxz
cld
cs
push
jae
nop
cmp
or
push
xor
mov
add
push
std
inc
jmp
add
dec
dec
aaa
addb
clc
sub
jecxz
mov
adc
mov
std
mov
mov
int3
pop
dec
sbb
outsb
in
outsl
jp
xchg
push
adc
add
sub
aas
add
cmp
pop
inc
adc
mov
dec
mov
out
subl
sub
mov
push
fwait
std
xchg
xchg
cmp
add
arpl
mov
cmp
shrl
mov
mov
or
dec
adc
xor
push
gs
xor
mov
rcl
lcall
sahf
and
pop
mov
push
mov
mov
mov
xchg
mov
mov
frstor
dec
push
jge
int3
inc
call
adc
jge
nop
enter
cmp
mov
push
outsl
pop
popa
gs
out
pop
pusha
test
and
xor
testb
xor
mov
jb
loope
mov
cmp
jae
cmp
inc
daa
push
fidivl
ljmp
inc
imul
fcmovnbe
sti
mov
testl
inc
loope
or
lret
adc
fmuls
sub
xchg
jle
in
lods
call
push
inc
cmp
jne
movsb
inc
mov
jo
jno
in
inc
lods
fcmovnb
or
jo
xor
into
inc
mov
pusha
pop
cmp
push
call
xchg
dec
xlat
sti
push
adc
dec
add
lea
scas
jb
jg
icebp
shl
mov
sub
int3
sbb
es
xchg
sbb
sbb
lds
orb
add
call
ja
das
add
aam
popf
jno
sbb
sbb
cmpsb
pop
cmpb
cmp
push
popf
cltd
fs
dec
jb
arpl
pop
adc
inc
arpl
mov
test
daa
scas
aaa
mov
js
popf
jg
push
mov
and
fistps
insl
mov
xor
or
jbe
dec
ret
addr16
inc
xor
xchg
jo
sub
pop
push
cmp
pop
dec
lods
mov
push
dec
es
mov
jg
mov
add
loopne
jmp
xor
aaa
sub
sub
inc
stos
push
adc
push
gs
adc
ja
mov
jno
cmp
push
pushf
push
and
push
dec
lea
cmp
mov
push
push
add
jnp
fsubrs
xchg
sahf
mov
ret
cmpsl
inc
js
out
adc
js
sub
mov
or
jae
rcl
jl
arpl
inc
mov
jb
mov
js
and
mov
fists
pop
xchg
loopne
xor
sbb
add
xor
daa
loop
mov
push
jmp
cmp
add
or
into
cmpb
jp
jnp
test
ljmp
jp
sti
sbb
adc
dec
pushf
popa
pop
dec
insl
and
mov
mov
repz
push
outsl
sub
jecxz
test
inc
mov
inc
xchg
xchg
pop
mov
js
stos
inc
mov
stos
mov
test
inc
add
bound
xchg
jge
sbb
out
arpl
cmp
lret
xchg
xor
movsl
nop
add
enter
sti
xchg
out
jl
cli
inc
js
inc
pop
mov
xor
push
inc
mov
push
into
loopne
xor
daa
fnstenv
aaa
push
push
push
loopne
rcll
sub
mov
dec
pop
inc
popa
jo
fucomi
sbb
into
pushf
test
int
xchg
xor
or
roll
mov
xor
mov
jb
and
xchg
xlat
inc
movl
add
adc
testl
inc
stos
insl
add
ffreep
pop
scas
and
add
les
xlat
pushl
mov
and
pushf
push
sbb
rorb
mov
jmp
lcall
out
xlat
dec
out
dec
shll
dec
mov
cmp
inc
les
outsb
jle
inc
cmp
or
cs
mov
jmp
fldenv
xchg
push
pushf
mov
add
cmp
mov
aaa
sbb
xor
cmp
lret
dec
push
ret
aad
and
sbb
mov
push
outsb
dec
lahf
xchg
xor
push
push
in
push
dec
add
and
fcmovnu
mov
sbb
sbb
imul
push
lock
int
stos
jne
push
pop
shll
fchs
xchg
jnp
fpatan
mov
repz
cmp
lea
mov
jge
rcll
mov
sbb
xchg
jl
pop
mov
insl
push
xchg
mov
data16
cltd
fwait
cli
loop
mov
ljmp
outsb
mov
or
cmp
inc
and
orb
aaa
mov
mov
dec
cmp
loop
test
ficompl
inc
sub
adc
lret
push
mov
sarb
ja
xor
dec
lock
lahf
pop
inc
and
loope
cwtl
inc
adc
out
out
je
shrl
aaa
dec
jbe
fwait
mov
push
and
les
and
cmc
adc
test
adc
mov
stos
push
repnz
les
push
das
push
push
lahf
jo
inc
mov
cmpsl
daa
gs
loopne
fiaddl
sarb
mov
fsubrs
lret
sub
cmovno
pop
rcrl
sti
test
aas
xor
ss
insb
cld
push
lock
push
test
je
pop
mov
cmp
lea
mov
and
ret
cmp
mov
xchg
dec
jnp
subb
dec
and
xchg
cld
cmpl
aad
icebp
adc
orl
sti
cmp
or
mov
jae
addl
repnz
sbb
adc
in
xchg
cmp
rcr
push
add
sarl
sbb
cmpsl
push
loopne
xor
cmp
in
aad
push
sti
shlb
in
data16
jge
mov
or
mov
mov
xchg
lock
mov
das
lds
mov
fimull
shll
js
lods
mov
scas
mov
mov
xchg
pushf
mov
xchg
rolb
loopne
push
sbb
xchg
popf
fsub
xchg
nop
fld
push
nop
ljmp
inc
les
mov
out
mov
adc
loope
int
cltd
cmp
jl
or
stos
jle
fsubrl
repnz
lea
fimull
test
adc
insb
dec
or
xchg
cli
mov
xor
ds
adc
or
testb
xchg
xchg
mov
mov
bnd
es
in
xchg
imul
sub
adc
pop
mov
out
mov
fdivl
mov
stc
call
fwait
in
call
sub
sbb
sbb
inc
loopne
or
adc
push
inc
push
sbb
pop
aam
cmc
push
mov
rolb
push
xor
or
jae
and
push
dec
xor
pop
fldl
jae
xor
pop
xchg
mov
or
adc
fcmovnbe
loope
ficompl
xor
popf
es
hlt
mov
jno
leave
mov
push
imul
aaa
fnstenv
sub
mov
inc
pop
xchg
out
fildll
mov
dec
adc
adc
push
lods
adc
daa
add
testb
jo
aad
and
xor
jmp
dec
hlt
jle
and
mov
lret
xor
test
out
mov
cmpsb
aam
aas
sbb
sbb
outsb
rcrb
ja
mov
sbb
je
and
in
outsb
inc
fs
mov
pop
popf
cs
fwait
ret
mov
push
or
and
mov
je
roll
mov
sub
ljmp
add
add
xor
pop
dec
out
push
stos
insl
jno
mov
repnz
jmp
ficoml
inc
jl
mov
sbb
add
push
or
inc
xchg
decl
inc
jg
into
mov
loop
adc
frstor
adc
xor
int3
adc
sti
rolb
movsl
xchg
lahf
jmp
push
push
shl
xchg
fstpl
adc
out
fildll
fcoml
sbb
add
jne
mov
or
cld
mov
outsb
add
ficoml
lea
or
cmp
mov
push
dec
mov
lods
xor
aad
ret
push
pushf
gs
fcoms
and
das
cltd
mov
add
inc
push
mov
dec
lock
inc
enter
lret
xchg
mov
lahf
push
cmp
lcall
outsl
incl
mov
sub
jmp
push
testl
gs
std
into
dec
dec
jno
adc
cmpb
mov
outsl
aad
mov
and
add
jp
adc
iret
dec
fcomps
mov
mov
outsl
aam
aaa
out
outsb
movsb
pop
dec
pop
dec
push
scas
iret
test
cmpsl
fisubrl
mov
aam
dec
arpl
leave
or
out
popf
sbb
mov
ficompl
and
add
sbb
inc
scas
das
lret
pop
sub
sub
sbb
mov
daa
fnstenv
call
test
jle
push
fwait
jno
aas
and
hlt
lods
bound
faddl
ret
inc
jno
mov
out
jmp
fiaddl
mov
xorb
jle
push
nop
add
enter
mov
and
int3
subl
aas
sti
sbb
inc
lret
je
and
jno
ljmp
loopne
inc
sbbb
ret
xlat
jns
pop
movsl
lahf
das
stos
dec
enterw
loopne
test
ljmp
leave
lret
fmul
mov
lret
data16
sub
loope
stos
pop
and
xchg
mov
push
inc
out
cmp
sbb
and
pop
out
inc
pop
add
pop
dec
data16
cli
addr16
popa
pop
xchg
inc
pop
pop
dec
icebp
push
add
sub
sub
pusha
stos
pop
fadds
testl
mov
xchg
cwtl
add
dec
mov
push
mov
ja
inc
jl
or
push
mov
mov
dec
in
jnp
pop
push
leave
xchg
mov
in
cmpsl
fistpl
lds
and
mov
popa
cmp
adc
adc
and
jae
das
fs
push
outsl
fs
test
xchg
push
lods
jmp
and
flds
lods
mov
jge
sbb
lret
int
cmp
out
jmp
mov
mov
push
mov
add
repz
rcrb
sbb
xlat
out
sub
cld
push
dec
jmp
sbb
mov
repz
in
repnz
loop
mov
bswap
int3
pop
mov
jae
adc
mov
popa
mov
jbe
stos
aad
cmp
mov
sub
ljmp
adc
lock
pusha
cmp
shlb
cld
push
sub
das
aas
fildll
and
testb
sub
pop
je
cmp
stc
sbb
xchg
pusha
insb
xor
pop
out
fsubrl
mov
or
pushf
pop
shrb
mov
add
cmc
jmp
pop
push
lea
sbb
aad
add
jnp
out
sbb
int3
mov
sub
ret
aas
dec
cmp
repz
aas
pushf
or
mov
cmovns
shlb
pushf
lock
stc
add
in
inc
pop
mov
and
or
xchg
jno
sbb
xor
dec
dec
and
int3
arpl
stos
and
or
iret
inc
xchg
push
xor
or
stos
pop
lods
outsl
or
or
in
aam
mov
push
icebp
outsl
or
cmp
jno
es
imul
adc
ja
xchg
rcll
jge
pop
push
mov
imul
jae
lcall
sub
pusha
mov
pop
mov
push
rorl
out
fcoml
jp
ret
xor
ss
leave
clc
movsb
add
push
in
jg
nop
dec
shrb
call
shlb
jg
pop
jp
enter
sbb
push
int3
and
mov
lea
or
pop
mov
push
test
inc
int3
cld
inc
ret
cmpl
add
mov
mov
inc
mov
dec
mov
daa
loop
mov
mov
cmpsb
dec
daa
add
add
gs
out
into
insl
mov
sbb
mull
sub
xor
loope
es
test
in
test
fabs
cmp
mov
insb
fdivrs
add
das
mov
pop
add
out
push
push
pop
inc
fwait
pop
add
mov
mov
or
sbb
cmc
arpl
in
shrl
push
fwait
adc
dec
mov
rcr
xchg
ror
jb
imul
popf
je
pop
into
ljmp
xchg
imul
pop
stos
xor
add
xchg
sbb
nop
sbb
gs
pop
sbb
push
mov
out
test
cmc
jmp
ja
xor
orl
loopne
repz
popl
cmp
ljmp
xor
mov
mov
mov
mov
out
mov
push
pop
or
push
loop
adc
jbe
aam
sub
test
insl
insl
cmp
and
dec
ss
jbe
inc
bound
and
sbb
sti
mov
or
icebp
aaa
xor
lods
in
rorl
mov
pop
mov
aad
cmp
cmp
repz
sbb
sub
push
fwait
cmpsb
or
xor
mov
lock
and
adc
daa
add
movsl
andl
jae
movsb
xchg
in
and
lcall
icebp
and
dec
mov
loop
cmp
jl
inc
push
jge
popa
and
addr16
jae
das
test
jmp
and
cltd
movsl
test
mov
mov
mov
jae
lcall
jl
lret
lahf
jbe
insl
xchg
insb
mov
loope
add
pop
push
ret
dec
enter
mov
lock
mov
pop
add
add
dec
pop
loop
inc
js
pusha
pop
cmp
or
cltd
xor
test
outsw
lods
push
iret
xchg
jle
sub
add
inc
mov
xlat
xor
mov
mov
jnp
aad
insb
pop
bound
sbb
filds
or
inc
and
pop
in
adc
pop
je
jp
and
pop
fbstp
insb
fldenv
adc
ss
clc
inc
cltd
movl
adc
inc
cmpsb
cmc
fsubrl
mov
sahf
sbb
adcl
pusha
addr16
push
dec
inc
call
out
sbb
mov
mov
ljmp
add
fbld
fnstenv
push
mov
cld
aam
out
sbb
and
push
adc
and
xchg
xchg
das
rcrb
rolb
in
jecxz
and
lods
out
rorl
fnstcw
dec
lea
dec
inc
jo
fdivrl
dec
in
ds
das
pop
sub
adc
push
mov
enter
mov
add
xlat
ds
mov
int
fidivl
int
addl
push
jg
cli
mov
rcr
mov
inc
insb
outsb
dec
add
adcl
xchg
dec
mov
xchg
scas
mov
pop
mov
xchg
or
outsl
ret
and
jle
dec
in
adc
sti
pop
cli
xchg
mov
sub
fwait
push
cmp
xor
mov
shll
imul
and
add
incl
test
cmpl
adc
es
or
ret
cmp
push
pop
lcall
and
adc
or
popa
ja
pop
sub
push
add
shrb
pop
loope
jnp
sbb
xlat
scas
inc
sbb
cmp
or
nop
mov
mov
pusha
fsubs
data16
ficompl
ret
outsl
push
fistpll
cwtl
in
cmp
bound
lock
xchg
js
addr16
xchg
sti
call
lea
adc
mov
pop
into
mov
into
out
jbe
cs
add
dec
incl
shl
or
lcall
add
xchg
push
pop
mov
ret
xor
add
imul
enter
sub
arpl
out
or
mov
add
jg
std
pop
xchg
pop
xor
cld
mov
arpl
sarl
push
in
fadds
jae
repnz
mov
pop
lcall
in
inc
lods
push
dec
and
xchg
cmp
lods
sarb
cltd
hlt
mov
xor
push
inc
pop
push
out
fs
inc
jge
repnz
sbb
pop
pushf
xchg
pop
sub
sbb
mov
daa
fisubrl
out
mov
rcll
dec
outsb
mov
dec
sbb
pop
dec
jg
xchg
shlb
addr16
rolb
addr16
cmpsb
enter
arpl
push
inc
dec
jne
fdivl
popaw
rcrb
orb
fcomi
loopne
and
repz
divps
jnp
aam
lret
fscale
into
sbb
dec
insb
adc
roll
shr
inc
jg
xchg
jmp
xchg
and
nop
push
cli
in
add
cmp
das
sub
or
fildl
stos
inc
aas
mov
jnp
mov
rol
cmp
add
sbb
ja
cmp
setne
out
pop
ja
jecxz
in
in
cmp
pushf
jg
push
xor
add
flds
adc
jg
pop
test
cmc
fisttps
fsubs
sub
sub
add
sbb
mov
cmp
push
mov
and
jae
xor
inc
fsts
dec
push
push
or
std
pop
subl
cs
mov
adc
inc
imul
mov
sbb
scas
cmp
add
pop
cmpsl
test
or
xchg
hlt
ljmp
scas
jb
and
or
test
cmp
notb
cltd
adc
cld
and
scas
mov
test
loopne
in
in
in
xor
popf
ror
pop
xchg
loopne
adc
adc
int
nop
repnz
popf
sbb
stc
sub
fwait
lods
and
dec
stos
xor
adc
mov
or
adc
jle
int3
in
adc
fimull
rolb
lds
lret
sub
leave
pop
push
stc
call
xchg
push
out
out
stc
cld
dec
mov
jmp
subb
mul
sbb
call
imul
push
aad
cmpsl
add
lcall
inc
push
andl
add
pop
or
add
stos
jecxz
ret
push
mov
loop
shrb
test
pop
cltd
push
sub
pushf
leave
xchg
and
iret
dec
adc
ja
or
sub
je
cltd
dec
data16
add
jo
push
sub
loop
pop
cmp
and
push
loopne
movsl
pushf
repnz
xchg
pop
sub
xchg
popf
dec
call
cmc
jne
flds
pop
shl
sti
scas
into
stos
adc
movsb
icebp
xor
mov
outsl
adc
call
arpl
lret
stos
inc
stos
fildl
les
pop
mov
scas
js
lods
and
mov
loope
pop
insl
bound
pop
popf
lret
lcall
arpl
mov
sbb
cmp
adc
loope
push
out
scas
inc
stos
cs
or
ds
mov
test
inc
fldenv
loopne
add
push
daa
gs
jns
dec
push
ja
push
lds
cmp
je
pop
mov
cwtl
enter
mov
mov
popa
popw
in
push
inc
les
jl
gs
test
add
imul
insb
loop
fistps
mov
test
and
add
dec
pop
xlat
and
and
sbb
push
mov
movsl
test
jmp
dec
jle
lcall
iret
sub
cltd
mov
repnz
cmpsb
jno
lret
inc
cwtl
iret
cltd
adc
xchg
popa
add
push
cmpsl
sbb
shll
mov
xor
loopne
push
sahf
and
push
dec
je
subl
dec
shll
xor
jge
xchg
fst
inc
ret
inc
xchg
pop
mov
mov
ja
mov
sbb
push
sub
stc
push
ss
lcall
cld
mov
je
dec
sbb
aam
jg
jne
fistl
mov
xchg
mov
cs
jecxz
arpl
repnz
lcall
jge
mov
add
out
ss
aam
xlat
mov
repnz
sub
sub
jne
sub
sti
dec
sub
ljmp
inc
lods
inc
stos
xchg
cwtl
pop
ds
test
pop
shlb
xchg
lods
sbb
sbb
cmp
or
jo
xchg
mov
cmp
push
cmpl
dec
pop
ret
test
insb
nop
dec
sti
and
gs
jle
mov
pop
ds
pop
subb
pop
inc
cmpsl
mov
mov
mov
mov
notl
jno
sbb
js
daa
adc
inc
cmp
cmc
push
adc
dec
lods
int3
sahf
xlat
mov
pop
in
sbb
in
aad
or
pop
and
mov
xchg
movaps
cmp
pusha
cmp
jns
cmc
mov
stos
push
out
dec
xchg
push
sub
dec
jno
dec
in
fisttps
inc
das
loope
repnz
lods
jge
or
rolb
xchg
or
or
mov
or
cmp
add
push
pop
es
mov
mov
std
push
inc
jns
adc
push
pop
test
pushl
jge
int
sbb
mov
lea
and
ljmp
aas
cli
pop
pop
adc
sahf
loope
insl
vmovaps
mov
sub
mov
popf
lret
stos
cmp
or
sub
mov
test
cmpb
sbb
cmpb
addb
movb
sbb
in
sbb
dec
add
add
pop
test
inc
push
hlt
add
test
push
push
aas
mov
subl
stc
sub
mov
push
hlt
imul
push
out
iret
dec
fnstsw
inc
lret
cmp
cmp
lret
loop
mov
test
pop
sbb
push
test
pop
rorl
jns
and
sti
mov
imul
inc
mov
icebp
jge
faddp
mov
push
loope
xchg
outsl
push
testl
and
cld
adc
push
cmpsb
xchg
fmull
rcrb
loope
loopne
push
push
fs
outsb
imul
push
loop
dec
pop
and
lods
nop
rol
pop
mov
xchg
cmp
mov
mov
sub
dec
mov
cld
and
pop
arpl
jmp
out
add
mov
cmp
adcb
in
clc
in
pop
jno
inc
sub
mov
aad
mov
lods
out
in
inc
adc
and
push
mov
cmp
fimuls
and
mov
popf
pop
lea
and
mull
aaa
xchg
mov
and
or
mov
sbb
lds
insb
popf
ss
insb
adc
arpl
adc
sbb
cld
jne
jbe
repnz
mov
mov
mov
lcall
aaa
nop
pop
out
sub
popf
ffree
pop
pop
pusha
test
dec
push
jb
adc
scas
add
lea
push
idivb
mov
xor
scas
push
cmp
sarl
add
pop
xor
pushf
cmp
push
mov
fsubrl
add
dec
pmulhuw
cmpsl
aad
jo
push
addr16
pop
xor
mov
pop
fistpl
lods
test
fucomip
push
push
inc
mov
and
fldt
movsl
cmp
sbb
sub
repz
or
out
xchg
int3
inc
inc
into
pop
fcmovne
out
insb
or
lea
inc
lods
jae
into
sbb
cli
cmp
or
and
and
lock
fists
sub
and
push
cli
jo
and
sahf
mov
rcrl
sbb
mov
mov
add
pop
mov
loop
fwait
dec
in
popf
lret
mov
pop
gs
insb
stos
enter
outsb
ds
fldenv
jl
dec
lret
cld
fsubrs
sti
sbb
jg
and
lret
cmp
out
pop
movsb
aas
aad
int3
jmp
std
scas
xor
outsb
cmpsb
cwtl
push
cld
test
sbb
cvttps2pi
pop
fisttpl
test
dec
xchg
lds
inc
int
dec
sti
insl
xchg
insb
test
xchg
sbb
add
jmp
xor
mov
mov
in
ds
enter
mov
cmpsl
aad
xor
bound
add
jne
scas
mov
test
fldenv
aaa
and
pop
sti
add
aas
in
cmpsl
pcmpgtw
jno
cmp
dec
mov
jns
clc
jl
adc
jp
call
mov
rcll
dec
or
jl
movsl
add
or
into
andb
sbb
mov
lea
mov
xchg
imul
cmpsb
mov
mov
test
repnz
popa
cli
dec
push
cmpsb
fidivs
repz
popa
xor
shr
insb
xchg
lods
cmp
pusha
and
sub
adc
mov
orl
cmc
jne
fnstsw
sbb
inc
leave
add
loope
sub
adc
mov
mov
pop
rcrb
adc
popf
rclb
addr16
mov
sub
test
sub
cmpb
xchg
stc
adc
dec
add
xor
popf
test
ljmp
int
push
loopne
std
cmpsl
adc
pop
dec
add
mov
push
xchg
add
stc
inc
test
cs
push
imul
adc
xchg
ror
mov
pop
xor
and
out
adc
fldt
pushf
jl
leave
mov
dec
imul
or
jg
in
push
bound
mov
xor
jecxz
inc
mov
add
adc
push
sbb
stc
push
add
jmp
mov
push
xchg
adc
loopne
sar
xorl
pop
and
cmpsl
jo
xchg
jnp
dec
out
pop
jnp
fs
add
ret
jg
sub
pop
call
in
iret
mov
sbb
adc
inc
pop
daa
push
push
mov
adc
lods
orb
pushf
adc
push
mov
cmpsl
xchg
aam
push
gs
and
pop
aam
popa
sti
insb
pop
push
fdivrl
adc
mov
xor
adc
fsubr
dec
loope
push
bound
movsb
mov
pop
fabs
jae
mov
lds
push
push
add
xchg
std
add
aas
in
lds
repnz
dec
adcb
lds
lcall
lret
insb
out
mov
push
pop
mov
dec
mov
sbb
js
mov
push
mov
push
shrb
mov
mov
jmp
sti
dec
xor
add
loopne
inc
nop
dec
or
lahf
xchg
jo
inc
xlat
fdivr
adcb
lods
leave
push
out
mov
mov
movq
mov
ljmp
push
pop
mov
dec
xchg
jp
inc
jno
sub
mov
jb
mov
cld
pop
jnp
jg
leave
mov
xchg
lods
lret
jle
sahf
rol
jl
arpl
je
test
mov
or
xchg
xchg
test
pop
inc
xchg
jge
xchg
and
rcl
sub
add
cmp
or
jae
inc
or
inc
and
or
pop
ret
cmp
cmp
push
clc
mov
add
sbb
out
cmp
stos
imul
xchg
and
ja
pushf
pushf
frstor
mov
push
gs
or
xor
cmp
push
mov
imul
push
mov
aaa
jnp
inc
push
mov
mov
mov
adc
bound
push
mov
loop
stc
adc
popa
push
in
daa
and
or
bt
shlb
push
stos
sarb
xlat
lock
jbe
lret
fistpl
leave
gs
add
cld
mov
dec
outsb
subb
xor
xor
mov
xchg
dec
mov
jb
cmpsb
mov
into
add
std
mov
xchg
ret
dec
nop
pop
mov
jne
fisubrl
mov
in
js
inc
mov
jl
ret
mov
fimull
sbbb
fsubl
or
add
pop
and
test
repz
shll
adc
inc
adc
notb
repnz
adc
cltd
xchg
or
hlt
push
mov
xchg
pop
dec
out
add
sub
test
dec
in
fcmove
sub
cmp
shl
loopne
roll
movsb
ljmp
push
adc
or
or
jb
cmp
mov
inc
daa
lea
dec
or
cltd
out
mov
daa
fildl
jne
pop
mov
ljmp
fdivr
pushf
fbld
inc
sub
loope
lods
insb
out
add
add
adc
cmovne
sbb
pop
mov
fnsave
jg
pop
mov
xchg
jae
loop
pusha
pop
sub
sub
jecxz
pop
push
mov
adc
lods
aas
addr16
adc
ja
test
dec
and
xor
ds
lods
loop
ret
or
mov
loop
sub
icebp
dec
out
test
leave
sub
push
mov
sbb
adc
push
fwait
jnp
push
mov
pop
out
cmc
and
loope
jp
sbb
sub
bound
stc
pop
test
xchg
test
ret
mov
sbb
push
mov
sbb
and
cmc
mov
stos
cmp
ficoms
or
ss
push
out
mov
push
leave
arpl
or
lcall
jle
idivl
sti
dec
cmc
mov
push
ret
cmpsb
xor
mov
cs
jmp
adc
mov
jbe
int
repz
jbe
mov
shlb
jae
or
xor
mov
jecxz
add
lret
xor
inc
daa
mov
sahf
dec
mov
push
sbb
stos
cmp
ja
insb
mov
aas
pop
stos
sbbl
mov
aad
xlat
lret
xchg
out
mov
push
dec
test
jnp
push
fistpl
inc
dec
dec
packsswb
adc
xchg
jmp
inc
push
mov
iret
xchg
ds
mov
xor
or
lahf
xor
dec
dec
sbb
push
test
adc
mov
and
sub
jae
mov
subb
sbb
lds
inc
negb
xorl
ss
inc
mov
fmuls
mov
aad
push
add
repnz
mov
lret
clc
lock
inc
rolb
cmpsb
pop
into
clc
mov
insl
rcrb
mov
addr16
sub
mov
or
je
dec
mov
jne
dec
inc
push
jmp
enter
daa
xchg
bound
inc
scas
outsl
sbb
sbb
ret
mov
inc
lret
out
cmp
pusha
inc
mov
mov
pop
ficoml
movsl
stc
mov
insl
lret
test
mov
cmp
call
incb
xor
aaa
mov
out
leave
mov
xchg
fisubrl
test
test
or
xor
movsl
fldl
aaa
dec
popa
and
push
incb
mov
iret
iret
repz
divl
into
mov
mov
les
addr16
int3
pop
arpl
js
push
aam
mov
lcall
fldt
mov
fndisi(8087
mov
cmpsb
xchg
sbb
or
xchg
sbb
je
sub
movsl
sti
insb
xchg
and
xchg
pop
test
jmp
mov
cltd
pop
mov
push
out
add
enter
fs
jbe
push
inc
adc
out
dec
loope
sbbb
int3
imul
lods
std
shrb
cmp
sti
jbe
add
dec
adc
fs
rolb
arpl
movsb
sbb
mov
orb
imul
xchg
or
adc
popf
dec
icebp
pop
out
cmpsl
lods
add
dec
in
pop
mov
adc
cmpsb
in
mov
imul
repz
adc
je
fdiv
mov
out
and
dec
psubw
aas
pushf
das
cmp
xchg
prefetchwt1
or
jge
xchg
push
xchg
and
mov
cwtl
add
dec
jne
aas
add
push
cmpl
cmpsb
aam
adc
fcmovb
out
dec
mov
jbe
sbb
or
xor
pushf
inc
adc
push
iret
mov
mov
xlat
sub
andb
fdivp
jo
movsl
adc
xor
pop
or
lret
mov
clc
mov
bound
iret
arpl
aam
sub
sbb
dec
lods
aam
shlb
les
and
xor
fstl
mov
in
into
jmp
pop
cli
fdivr
in
int
adc
aaa
adc
adc
add
sub
push
stos
mov
movsb
jmp
lods
bound
fcom
in
add
inc
fisubrs
aaa
dec
outsl
push
jo
and
mov
adc
stc
adc
xor
mov
jmp
fmull
jnp
mov
mov
aas
mov
in
lds
pop
loopne
xchg
sub
out
pop
out
sbb
adc
sbb
xchg
ret
fbstp
adc
push
stos
sub
dec
nop
add
xor
jns
inc
sarl
mov
mov
mov
mov
daa
clc
call
popf
mov
mov
or
sub
jl
loopne
rorb
mov
sarb
shrb
add
xor
das
cmp
movsl
cltd
lods
jle
mov
dec
or
mov
pop
repnz
fadd
insb
jmp
bound
lea
cmp
mov
pop
mov
push
loope
jge
clc
lea
test
xchg
pop
mov
and
popa
das
xor
mov
pop
push
pop
sbb
std
push
jns
lcall
and
test
mov
outsb
and
fbld
lcall
add
popa
rcrl
xchg
fimull
dec
mov
cmp
je
push
xchg
lret
divl
sbb
inc
lea
cmpsb
jp
mov
bound
sub
jb
imul
inc
add
cmc
xlat
fwait
daa
aad
push
jns
sub
pop
inc
push
sbb
aam
mov
push
icebp
jne
add
xchg
mov
repnz
cmc
xor
jae
cmpl
pop
shrl
or
mov
xchg
push
mov
push
push
push
popf
nop
leave
dec
out
pop
rdpmc
mov
push
scas
xor
jns
pusha
inc
xor
and
lods
xchg
lods
aas
ficomps
push
sbb
out
adc
movsb
outsb
test
jo
repnz
pop
lods
jmp
inc
sbb
cmp
pop
pop
scas
pop
flds
xor
or
mov
addr16
xchg
mov
dec
lahf
repz
out
mov
dec
out
and
lds
outsb
dec
dec
fstpt
mov
mov
push
lret
xorl
xlat
cwtl
jp
or
arpl
adc
pop
fnstcw
out
nop
xchg
ds
jmp
jb
and
sub
cmp
mov
in
maxps
xchg
sub
mov
test
bound
mov
mov
pop
jg
pop
adc
clc
lret
and
es
pop
ret
inc
aaa
rcrl
and
in
sub
mov
inc
xorb
dec
loope
subl
rcrl
decb
clc
xor
std
jae
push
lea
leave
test
stos
stos
xchg
inc
and
xor
sub
int
mov
mov
and
mov
out
mov
sbb
sbb
ja
or
push
add
cld
test
movsl
stc
lock
push
pop
shrl
and
scas
ds
hlt
or
mov
mov
outsb
sub
outsb
mov
add
sbb
xor
aad
cmp
je
das
fwait
jns
sahf
js
je
roll
mov
insb
adc
iret
ljmp
lcall
std
adc
add
enter
and
push
or
es
js
and
jle
dec
mov
cmc
jno
add
push
lea
shrb
pop
call
scas
repnz
pop
pop
xchg
ret
sub
stos
int3
jmp
sar
aas
mov
cwtl
das
jmp
bound
ret
or
cmp
sti
mov
xchg
in
out
jb
push
pop
lock
imul
add
jecxz
mov
adc
movsb
sbb
fmuls
lcall
enter
ja
push
xor
out
cmpsb
add
leave
adc
nop
inc
fs
mov
jmp
add
minps
lock
pop
cwtl
sbb
push
cmp
in
scas
pop
ficoml
mulb
pusha
lea
enter
outsb
ss
mov
mov
pop
pop
xchg
and
add
mov
repz
cmpl
sbb
cmp
lods
mov
pop
cltd
dec
mov
test
jb
in
mov
sbb
lret
inc
out
xchg
scas
and
sub
ss
inc
dec
scas
mov
repnz
out
stos
es
iret
pop
je
or
mov
into
sbb
testb
pop
xchg
ret
dec
lock
jnp
stos
outsl
mov
scas
int3
sub
jmp
mov
mov
jnp
movsb
mov
jo
fiadds
mov
imul
outsl
sbb
fisttpll
pop
pop
mov
movsl
cmp
sub
pushf
loopne
pop
push
hlt
jge
daa
xor
negb
push
lret
fdivrl
js
jecxz
jno
and
mov
sbb
jg
ss
leave
jp
push
outsl
sub
jp
loope
mov
fldt
mov
adc
xor
lds
rolb
push
jo
loop
in
test
movsl
mov
in
orl
pusha
dec
pop
aas
xchg
and
mov
jbe
in
and
lret
or
adc
cltd
lcall
cmpb
sub
pop
push
and
push
inc
idiv
cmpsl
and
lea
sbb
xor
pop
les
psrlw
bnd
xor
or
add
js
nop
jecxz
cwtl
std
es
cmp
das
test
dec
and
jl
jmp
and
adc
or
xchg
jno
jno
inc
push
push
inc
lret
mov
out
adc
into
dec
inc
jns
adc
mov
jb
mov
and
mov
fcompl
ret
jp
xchg
sbb
cltd
dec
lcall
and
xchg
out
addb
fnstcw
jb
fidivs
or
jle
jle
mov
xchg
pop
inc
push
xchg
adc
mov
xor
dec
or
jmp
xor
pop
push
push
sbb
dec
loop
bound
in
push
lea
cmpsb
pop
add
lds
ss
insb
sub
movsb
mov
adc
cmp
and
out
roll
xchg
out
jg
sbb
xchg
outsb
test
cmp
es
shlb
and
stos
test
fstpl
mov
mov
into
mov
push
cmpsl
adc
out
dec
fsub
jnp
daa
inc
cmc
pop
xor
cmc
insl
out
xlat
out
inc
adc
in
push
pop
fdivrs
xchg
add
ljmp
mov
pop
lock
sub
dec
pushf
dec
push
imul
jmp
jle
jbe
ss
addr16
inc
jp
mov
jg
cmc
negb
xchg
ja
inc
or
mov
push
mov
sub
fnstcw
stc
das
adc
pushl
and
adc
movsb
fidivl
cs
imul
lods
cmp
fstpl
xor
pop
cld
iretw
add
mov
and
mov
mov
jnp
pop
jne
jbe
xchg
clc
pop
into
dec
cmp
pop
mull
sub
in
mov
in
lret
pop
dec
push
mov
jo
stos
stc
scas
xchg
push
mov
xor
scas
insl
insl
je
ds
in
popa
sbb
test
xchg
add
mov
jmp
or
aaa
loope
jg
or
cmp
sahf
popa
and
pop
jb
into
repnz
dec
sbb
pusha
pop
out
fsts
jns
lds
jo
gs
cmp
sbb
gs
adc
ja
jecxz
or
jne
aaa
roll
pop
data16
addl
pop
adc
push
mov
je
stos
sbb
sbb
jl
jl
addl
pusha
inc
data16
mov
push
mov
add
sbb
add
add
movsb
pop
xchg
int
into
pop
cmpsl
cs
insl
xchg
in
jnp
fisttps
in
pop
push
insb
sti
rol
pop
lea
dec
rep
pop
cmp
mov
int
imul
aas
test
daa
sahf
push
xchg
sub
scas
xor
cmp
pop
fdivs
cmp
sub
adc
sbb
test
cmpsl
sahf
xchg
push
jge
xchg
pcmpgtw
clflush
in
fcmovb
cmp
inc
loope
gs
and
sub
adc
mov
or
xchg
mov
push
sub
into
mov
xlat
jo
sbb
mov
sbb
or
xchg
mov
lea
mov
idivb
bound
dec
sub
xchg
mov
push
adc
loop
lahf
or
fs
mov
mov
mov
jmp
add
rcl
push
dec
add
or
xor
xor
mov
das
and
dec
sub
ret
in
pop
stos
scas
xor
jne
into
out
stos
stos
jnp
xor
push
jecxz
push
jg
arpl
jecxz
pop
xor
outsl
mov
mov
shr
leave
dec
push
cmp
jmp
xchg
filds
fiadds
mov
bound
int3
lock
inc
add
addl
out
jmp
pop
xchg
sbb
shlb
test
test
inc
ljmp
dec
loopne
cli
mov
das
jb
jno
mov
fbstp
mov
arpl
cmp
jl
xor
mov
pop
fcoms
and
sbb
outsl
out
js
insl
sarl
mov
jmp
add
mov
cmp
mov
xlat
inc
ret
lods
cli
lret
sbb
mov
adc
pusha
lods
int
or
jno
xor
arpl
sbb
mov
sub
cltd
lock
mov
mov
out
or
in
and
jge
in
iret
out
inc
movsb
jl
addl
mov
roll
lcall
lahf
push
cmp
aas
fadd
stos
push
and
pop
nop
sbb
xor
sub
xor
daa
pop
xchg
ds
dec
pop
fwait
inc
fidivl
repnz
mov
xchg
mov
mov
aam
jl
cmpl
test
inc
inc
xchg
push
mov
inc
sarb
push
add
add
sub
mov
fistpll
push
push
mov
lock
xchg
mov
arpl
or
das
rcrl
popa
push
dec
sbb
ja
aaa
es
pop
in
inc
das
add
out
in
aam
pop
movsl
leave
das
fistpll
xor
pop
add
movl
jmp
mov
mov
test
cmp
ljmp
cmp
push
sti
lret
jg
mov
adc
arpl
mov
js
push
jg
inc
lds
repnz
rorb
adc
inc
dec
sub
ds
dec
jp
inc
add
in
divps
sub
adc
out
inc
jecxz
dec
mov
into
lds
out
sbb
and
imul
cltd
jno
repnz
jno
cmpsl
mov
bound
outsl
repz
ret
ror
call
and
push
clc
mov
lcall
cmp
cltd
rorb
pop
rol
sbb
out
push
mov
enter
and
outsb
dec
jno
inc
std
cmp
popa
and
jno
push
pop
adc
jno
sub
pop
sub
test
outsl
cltd
sti
dec
jmp
movsl
mov
xor
or
into
fucom
pushf
jno
testl
sbb
fs
push
addr16
lods
iret
stos
mov
aas
pop
gs
stos
inc
in
stos
sahf
repz
lcall
movsl
mov
divl
lods
movsl
rcll
lea
out
ss
and
pusha
movsb
add
test
xor
sbb
and
jp
jp
push
pop
inc
xor
jg
push
enter
stc
fsubrl
mov
in
cmp
leave
js
mov
add
out
movsl
mov
inc
lret
stos
bswap
pop
in
xor
fs
mull
cld
mov
fcomps
pushf
sbb
test
notl
call
mov
xor
pushf
jp
outsb
in
addr16
lods
inc
leave
out
retw
sbb
xchg
out
lret
sbb
out
jae
js
sub
data16
fimull
xchg
or
mov
test
adc
cmp
push
outsb
scas
xchg
leave
adc
jle
mov
jmp
es
jge
adc
mov
mov
adcb
mov
aaa
and
cmp
std
push
mov
loope
fidivrs
mov
jp
jo
mov
dec
stos
xor
cmp
sbb
lcall
dec
jecxz
inc
xor
xchg
pop
mov
or
cmp
mov
mov
pop
cmp
jp
cltd
out
hlt
xor
push
rorb
push
les
mov
mov
xchg
mov
inc
inc
pop
test
es
lds
mov
popf
addr16
adc
in
out
xor
je
pushl
loopne
mov
and
sahf
mov
movsb
jg
cmp
int3
xor
adc
aad
sahf
enter
decl
cmp
cmpsl
cmp
mov
mov
jb
sbb
cltd
or
sbb
and
mov
cmp
into
test
mov
cmc
loop
xchg
dec
pop
dec
xor
push
es
nop
inc
xchg
je
in
mov
stos
lahf
mov
in
ret
sbb
por
xor
pop
leave
push
negl
sbb
pop
jbe
mov
add
or
bound
loop
mov
cld
testb
pop
sahf
in
bound
repnz
repnz
sbb
mov
outsl
lea
adc
hlt
and
fstps
mov
fiaddl
add
xchg
xor
adc
or
das
mov
pop
hlt
arpl
mov
or
adc
jecxz
lea
daa
cmp
add
push
dec
mov
sbb
xor
sbb
mov
cmp
ret
add
lret
xor
add
mov
test
or
ljmp
jmp
mov
ss
test
pop
ret
mov
sbb
mov
ja
icebp
dec
ljmp
sbb
and
insl
mov
sarl
iret
and
and
adcl
ret
out
outsl
fcomps
or
lods
in
call
mov
addr16
roll
jg
xchg
decb
adc
jg
pop
cmp
ljmp
xchg
and
roll
sbb
pop
repz
xorl
test
pop
dec
jns
mov
jecxz
fdivs
xchg
mov
xor
lods
call
mov
aam
fstpt
mov
inc
dec
pusha
push
mov
or
shrb
mov
mov
sub
xchg
lds
ror
mov
test
mov
jno
inc
imul
ljmp
jmp
lods
fidivrl
mov
iret
xor
add
push
or
shll
cmpsl
call
mov
stc
sbb
loop
es
mov
movl
dec
cmp
aas
ss
mov
sbb
fcomi
lret
lret
dec
xlat
cmp
es
pop
mov
loop
push
fcompl
adc
cmp
int
push
cmp
movsl
hlt
dec
rcrl
shlb
or
hlt
insb
xchg
out
in
in
sbb
xchg
ret
stos
mov
and
dec
adc
inc
aaa
lock
icebp
sbb
loope
inc
push
pop
adc
mov
mov
ja
mov
gs
test
jns
mov
jle
lahf
mov
es
data16
idivl
push
rcrb
and
fisttpl
dec
pop
pop
xor
and
xchg
push
cwtl
loop
std
push
popf
aaa
movsl
push
aas
aad
icebp
cmpsl
aad
jmp
testb
fwait
cmp
lret
inc
inc
cwtl
lock
fsubp
data16
mov
je
jmp
cmp
imul
sbbl
sub
adc
xchg
sbb
xor
sbb
lcall
fucomp
jb
inc
xor
push
cmp
cli
and
jmp
jg
add
gs
jl
pop
dec
nop
in
int3
jbe
pusha
pop
pushf
cmp
lds
ficomps
pop
jne
jno
mov
sub
pop
add
xor
mov
xchg
popa
dec
out
lods
fidivs
jle
js
pop
xchg
mov
xor
lods
movb
orb
nop
push
cmp
xor
jmp
movl
lahf
pop
jne
aaa
add
in
imul
repz
dec
inc
out
adc
call
mov
xchg
arpl
add
setge
lcall
lcall
push
repnz
adc
pop
push
gs
or
les
sbb
jmp
pop
fdivrs
mov
fidivrl
inc
int
dec
add
cmp
std
enter
inc
dec
rolb
and
out
jne
enter
adc
pop
test
mov
loope
cmp
nop
mov
fdivl
mov
cmpsb
lock
mov
in
xchg
pop
dec
push
inc
test
sahf
in
adc
lods
pop
test
fiadds
lahf
lret
stc
imul
shlb
pop
sbb
and
push
push
push
mov
push
or
sub
add
jp
adc
xor
dec
jno
insb
movsb
pop
jmp
push
pop
fildll
jb
xor
mov
fs
pop
aaa
fldt
sahf
xchg
pushf
jmp
decb
mov
jecxz
clc
jo
leave
inc
rol
jg
int
icebp
mov
and
xchg
sbb
fs
je
add
cmp
shl
pop
aam
inc
mov
lret
lea
dec
stc
add
sbb
fs
jecxz
popf
jecxz
in
lret
testb
inc
sahf
adc
fwait
ss
adc
xor
xchg
movsb
push
out
inc
xchg
test
int
mov
mov
clc
mov
imul
sub
popf
shll
out
mov
or
test
sahf
mov
mov
outsb
frstor
adcl
out
enter
ret
adc
or
ret
mov
dec
or
jns
aaa
pusha
addb
push
jg
push
jecxz
dec
scas
repnz
mov
mov
mov
cmc
adc
or
jg
adc
sbb
xchg
jecxz
cli
or
out
push
loopne
mov
dec
int
outsl
ja
add
pop
jae
lea
out
pop
and
xor
xchg
adc
rorb
cltd
xor
pop
shll
popf
cmp
pop
mov
jl
movsl
cmp
push
dec
sbb
mov
pop
dec
ds
stos
xchg
outsb
pop
add
lds
ja
inc
out
mov
xor
cmpsl
ljmp
or
cwtl
pop
popf
out
in
icebp
stc
bound
mov
mov
inc
aas
add
pop
mov
push
adc
inc
mov
push
negb
pop
ret
aad
fldt
std
rcll
pop
arpl
rcrl
push
ljmp
sub
or
cmp
sub
jmp
dec
dec
leave
push
add
mov
dec
aam
xlat
push
stc
xchg
adc
xchg
fs
jne
adc
cltd
jb
jns
mov
sub
test
sbb
dec
xor
jp
pop
inc
movsb
loope
adc
push
popa
imul
adc
arpl
in
jno
jbe
mov
push
inc
and
sub
cmpl
divps
aas
lret
call
pop
pop
sub
xor
pop
mov
clc
sub
mov
jno
stc
push
nop
not
lcall
fwait
mov
or
adc
jge
mov
jmp
aad
dec
dec
push
jne
add
inc
shll
mov
pop
lret
xchg
lock
mov
fdivrs
dec
clc
pop
or
ja
xor
cli
enter
mov
aad
push
pop
and
sbb
add
data16
outsl
sbb
mov
mov
insl
sub
inc
fstl
in
dec
in
pop
nop
xor
xchg
fistl
and
xchg
popf
out
inc
aam
jb
jmp
xlat
add
xorb
push
mov
nopl
mov
mov
subl
icebp
loopne
outsb
outsb
mov
inc
mov
or
xchg
push
pop
out
cmpsl
jmp
out
imul
mov
loop
test
sbb
add
xor
or
push
mov
mov
adc
lock
or
dec
aas
inc
push
mov
cltd
pop
sbb
mov
das
mov
sbb
add
pop
out
dec
sub
push
test
imul
loop
push
jecxz
hlt
jl
xor
sbb
sub
repz
push
aam
jmp
imul
cmc
movsb
fwait
mov
rcll
pop
or
cmpsb
inc
pop
mov
es
popa
outsl
lea
mov
pop
hlt
jge
xchg
add
sbb
movzwl
xor
dec
roll
mov
xchg
das
xchg
sub
cmp
in
xor
push
and
and
pop
leave
loop
ljmp
sub
in
ficomps
and
push
ljmp
fsubl
or
stos
into
nop
cli
aaa
cmp
jne
in
jbe
mov
dec
push
aad
shlb
jae
sub
adcl
sbb
mov
pop
rcr
jle
fwait
lcall
adc
popf
dec
push
and
gs
xor
pop
jl
xor
jg
rcl
xor
inc
das
xchg
hlt
das
sub
out
lahf
insl
dec
add
lods
mov
sbb
xchg
imul
and
stos
mov
scas
jmp
ja
lock
mov
mov
adc
int3
sti
inc
ja
daa
add
daa
mov
dec
inc
bound
xor
scas
enter
rclb
test
mov
mov
mov
arpl
add
mov
add
mov
and
adc
cwtl
adc
in
sbb
and
fs
loopne
pop
js
fisttpl
cmp
popa
jns
and
mov
push
mov
dec
add
cmc
sub
mov
or
push
decb
shll
lret
mov
jecxz
inc
jg
pop
mov
jae
push
inc
sbb
loope
loopne
jno
js
repnz
mov
je
adc
sub
into
add
push
bnd
jns,pt
dec
fdivs
pop
xchg
movsl
pop
push
cmp
mov
lds
ret
jge
push
or
cltd
xchg
ss
loopne
jno
cmpsb
adcl
xor
jp
dec
or
add
xchg
es
xor
cmp
inc
orl
inc
fs
inc
push
dec
jl
push
adc
call
mov
adc
jle
dec
dec
add
xchg
fdivrs
mov
xchg
loop
xorb
rclb
jnp
bnd
scas
cli
sub
xor
call
and
lahf
neg
push
lret
sbb
xlat
xchg
fidivrs
pop
aas
inc
inc
xor
fiadds
jmp
insl
lret
daa
mov
and
sub
popa
push
cmp
sbb
adc
mov
xorl
bound
cmp
daa
arpl
fcom
mov
arpl
jg
sub
cmpsb
xor
repnz
mov
fnstsw
xor
scas
mov
cmp
je
adc
or
es
mov
popf
pop
jg
movsb
ss
pop
adc
sbb
ja
leave
test
push
in
sbb
mov
and
adc
xor
rcl
mov
mov
test
sahf
adc
mov
filds
lea
pop
pop
jne
sbb
rclb
in
out
xchg
or
shl
lock
ds
test
inc
sub
xlat
jp
push
enter
rcr
lods
addr16
and
inc
aas
pop
fildll
xchg
insl
int
int3
or
jbe
fistpll
stos
mov
mov
arpl
inc
xchg
pop
adc
sti
xlat
add
and
jge
stos
repz
lahf
add
daa
aas
xchg
xor
jecxz
std
pop
test
bound
sub
and
test
mov
pop
or
in
and
inc
mov
mov
cli
test
sbb
imul
sbb
cmp
stos
or
sarb
or
pop
add
dec
sbb
xor
shrl
das
jmp
jge
iret
mov
xchg
push
mov
ret
in
ret
mov
daa
std
leave
ja
pushf
mov
ds
and
add
out
int3
shll
xchg
sub
xchg
pop
hlt
test
subl
pushf
mov
push
mov
jno
leave
adcb
fs
mov
add
mov
lret
sub
cli
xchg
decb
push
pushf
pop
arpl
in
add
out
xor
lock
fildll
add
dec
in
sbb
pop
mov
cmp
push
mov
dec
mov
inc
stos
ja
sbb
insl
stc
pushf
dec
inc
outsl
mov
add
inc
sub
or
mov
testl
xchg
inc
mov
and
adc
test
out
mov
mov
adc
in
insl
ret
jnp
pusha
push
in
adc
xor
mov
andb
inc
add
jne
mov
xchg
loope
clc
clc
push
fs
std
mov
pop
enter
and
push
jp
rorb
je
negb
int
rsqrtps
mov
adc
jo
pop
pop
pop
ficomps
add
pop
jecxz
xchg
pop
pushf
cmc
insb
imul
inc
scas
xor
pusha
pop
add
pop
jge
xor
movsb
shlb
roll
into
pop
sbb
or
in
cmp
ret
fwait
andb
xor
adc
pushf
mov
rclb
lea
ret
cwtl
push
dec
pop
and
inc
in
xor
rcl
mov
aam
imul
sbb
sahf
xorl
ds
stos
pusha
clc
shrb
jb
int3
imulb
dec
cmp
pusha
or
jp
call
dec
cli
stos
mov
xor
int3
fldl
dec
fcmovne
push
cmpsl
add
xor
iret
iret
repz
xor
or
inc
jl
insb
bound
or
sub
jo
in
scas
std
mov
inc
xor
cmpsb
repnz
stos
dec
fwait
add
andb
pop
xor
mov
add
jns
rcl
out
sti
and
lea
add
mov
imul
incb
and
mulb
mov
les
sahf
out
pop
inc
sti
push
arpl
les
sti
scas
push
aam
outsb
mov
idivl
cmpsl
cmp
inc
rclb
mov
iret
dec
push
jmp
shll
jge
insb
nop
testb
cmpsl
add
out
xor
mov
pop
and
aas
imul
adc
push
icebp
and
cmp
movsl
out
bound
mov
push
sub
sub
in
lahf
in
add
sub
lret
stc
inc
leave
lds
inc
fs
cmp
mov
jbe
clc
xor
mov
rol
cltd
sub
xor
stos
sub
ds
cmp
stos
gs
call
test
jnp
inc
in
mov
aaa
xchg
lret
jnp
in
testb
sbb
and
xor
pop
jg
shlb
cmp
pop
xchg
in
adc
std
push
inc
cmpsl
popf
inc
lahf
mov
rcrl
dec
xchg
cmpsl
xchg
decb
mov
lea
fistps
ljmp
sub
mov
clc
cmp
cltd
adc
outsb
scas
inc
iret
scas
testb
jmp
fcmove
aam
ret
xchg
rep
dec
xchg
loope
repz
fistpl
mov
aas
mov
jmp
scas
icebp
fwait
xchg
pop
adc
jecxz
or
cmpsb
movsl
push
pop
int
adc
mov
loope
xor
sbb
das
add
sbb
call
push
xor
fistpll
mov
out
in
mov
push
rol
jmp
ja
mov
push
out
xor
sbb
imul
test
cmc
xchg
xchg
inc
push
push
push
dec
fxch
bound
jmp
mov
sti
sbb
popf
inc
and
dec
mov
popf
sbb
enter
les
inc
mov
mov
inc
xchg
sbb
cmp
incb
pop
mov
jmp
mov
int
jnp
pop
cmp
and
and
popa
mov
jecxz
repnz
dec
pushf
rcrl
mov
in
fimuls
sti
push
pop
insb
mov
mov
or
fstps
xchg
or
mov
cmpsl
mov
push
pop
pop
cwtl
xor
ret
hlt
rcrl
jp
push
popl
pushf
ja
adc
adc
jne
jmp
mov
fisubl
pop
jp
lds
xor
and
popf
jb
fwait
sbb
jp
and
push
adc
sub
outsb
mov
adc
inc
testl
test
jb
cmpb
loop
scas
ret
mov
adc
movsl
pop
or
add
scas
rorb
push
dec
or
cmp
cwtl
mov
jp
imul
xor
vphsubdq
jecxz
mov
jbe
jp
jnp
js
xchg
cli
jle
cld
mov
dec
les
fst
and
xchg
push
rorb
or
mov
loopne
dec
pop
sub
mov
je
adc
es
fisubrl
pop
mov
mov
in
imul
add
addb
pop
and
iret
and
pop
das
add
fiaddl
dec
mov
mov
lds
imulb
dec
jae
add
fs
sahf
das
icebp
or
loop
mov
in
xchg
or
fimuls
fwait
cli
sub
mov
sub
sbb
mov
cmp
xchg
push
xchg
mov
mov
pushf
lret
pop
pop
push
dec
jge
cld
mov
popa
mov
mov
mov
mov
pop
aas
mov
xor
addr16
mov
adcl
mov
pushf
popf
test
repz
jnp
roll
jge
sbb
xor
lahf
popf
add
out
mov
push
into
sti
xor
in
enter
cmp
and
les
pop
sub
add
add
lahf
lahf
cmc
mov
lret
cli
push
fdivl
fs
into
push
lcall
mov
jnp
fsub
xlat
aad
xchg
push
xchg
dec
pop
dec
dec
push
popl
sub
fcomip
xchg
add
jp
int
adc
pop
dec
dec
movsl
rolb
arpl
mov
shl
ds
iret
mov
mov
insl
sub
out
test
sbb
loopne
leave
jns
movsb
cltd
inc
add
das
sub
mov
inc
inc
mov
call
test
out
lods
lds
xchg
jo
mov
lea
test
adc
out
call
gs
in
push
xor
inc
sub
imul
inc
mov
xor
movntps
test
mov
cmp
jbe
inc
arpl
jbe
xlat
inc
loop
orb
shll
adc
cmp
jmp
mov
imul
push
out
clc
in
scas
js
out
daa
dec
pop
dec
mov
pop
mov
add
push
lret
pop
jno
sbb
jnp
push
and
xchg
sarl
xor
mov
pop
in
test
lea
loope
in
inc
imul
pop
pushf
sahf
mov
dec
jg
mov
movsl
hlt
rcrl
xchg
sub
dec
out
iret
out
fidivs
add
push
cmp
pusha
cmpsl
popa
add
mov
imull
xor
mov
into
rolb
in
addl
in
jb
jg
lds
test
xlat
push
inc
ljmp
cmp
push
sti
jb
shll
hlt
jl
shlb
idiv
inc
je
test
adc
cltd
rclb
or
add
int
lcall
les
push
and
mull
sbb
adc
sub
aaa
mov
sbb
dec
das
mov
jl
insl
mov
or
call
test
repz
in
int
aam
hlt
xor
add
pop
out
enter
icebp
movsb
ja
out
es
push
test
or
cltd
mov
adc
les
scas
xchg
js
dec
pop
scas
inc
dec
js
push
test
and
out
xchg
and
mov
cmp
lahf
inc
push
pop
mov
lret
out
inc
hlt
mov
jp
outsl
xor
fsubrs
xor
iret
into
filds
sbbb
jb
in
insb
cmp
fisubrs
ds
cltd
ja
hlt
add
or
adc
lret
xor
mov
mov
fwait
add
cmpsl
out
int3
mov
inc
xchg
aas
xchg
sub
ret
data16
out
clc
movsl
add
iret
inc
push
sbbb
imul
je
movsl
mov
pop
call
or
jle
mov
imul
inc
xchg
sbb
mov
shlb
mov
imul
ljmp
mov
leave
xlat
mov
or
into
ja
mov
fidivs
sbb
jbe
in
jecxz
jg
syscall
adc
mov
mov
aad
jo
imul
inc
dec
sarl
ja
pop
ds
fsts
mov
rcl
lock
insb
jb
loop
mov
cli
push
mov
lahf
out
ds
rcrl
lahf
stc
ss
movsl
idivb
loopne,pt
shlb
dec
or
sbb
repnz
pushf
jb
sbb
fwait
mov
push
je
cltd
loopne
aas
mov
loop
fwait
inc
stc
fistpll
inc
pusha
nop
pop
mov
iret
lds
mov
cltd
mov
mov
ja
pushf
mov
and
sbb
lea
rcr
sbb
cmp
loopne
or
movsb
ret
push
xchg
scas
mov
loope
mov
cmpsl
jecxz
ficompl
stc
sub
into
sub
mov
fdivs
or
rolb
inc
cmp
pop
jb
mov
xor
mov
sahf
filds
mov
addl
sbb
fmull
outsl
sub
out
jle
and
xchg
mov
das
sbb
mov
and
push
add
movsb
shll
cmp
xchg
out
loopne
pop
jecxz
fisubs
subl
mov
sub
repnz
xchg
stos
mov
cmp
cs
xor
ljmp
sub
sbb
jl
add
sbb
popa
shlb
repnz
or
dec
jbe
jnp
cwtl
cld
insb
dec
repz
pop
inc
in
pop
fbstp
mov
out
or
lods
call
fsub
cwtl
add
xor
pop
jne
int3
je
dec
or
xor
dec
out
out
repz
stos
out
imul
ret
jb
fcmovnu
inc
lahf
xor
out
and
rcll
lods
jle
and
pop
sahf
pop
fwait
in
not
mov
cmp
push
mov
xchg
into
nop
push
push
sbbl
into
pop
mov
xchg
dec
xchg
sahf
dec
add
push
pushf
shl
int3
adc
fbstp
enter
arpl
outsl
dec
and
out
cld
sbb
and
hlt
jle
push
jge
andb
adc
mov
adc
inc
lret
inc
aad
test
call
dec
lods
insl
pop
outsb
ret
pop
push
ret
sub
adc
mov
js
cmp
test
iret
mov
mov
cmp
or
inc
or
xchg
add
sub
jae
test
or
cmpsl
ljmp
mov
lret
adc
jmp
add
je
imul
jl
incb
mov
cmp
adc
sub
cmc
mov
lock
leave
movsl
push
mov
das
sbb
and
loop
lret
ret
dec
shrb
sti
push
jne
or
xchg
mov
push
dec
and
xor
out
aam
lcall
sahf
mov
int3
repz
or
daa
mov
out
cmp
mov
xchg
ljmp
sahf
out
loopne
mov
pusha
dec
in
stos
aad
je
inc
pop
loop
mov
mov
into
mov
add
sahf
mov
imul
add
cli
push
and
scas
rclb
mov
mov
sub
cmp
cmp
out
pop
pop
xor
dec
push
jns
stos
inc
mov
xchg
jns
fisubl
mov
fidivrl
push
fs
adc
and
xchg
ret
cmp
sar
sub
inc
xor
jmp
ret
mov
mov
dec
and
cmp
jge
inc
pop
jnp
popf
aas
dec
cld
mov
pusha
fwait
push
lods
sub
inc
nop
xchg
cmp
xor
mov
mov
mov
inc
jle
js
sbb
mov
and
dec
sub
dec
lahf
or
add
imul
add
pop
push
add
cltd
push
jns
imul
das
cmp
loop
and
mov
xor
sbb
sbb
push
mov
loope
bound
add
nop
dec
lds
xchg
cmp
pop
clc
test
push
dec
push
inc
pushf
fwait
adc
insl
mov
std
jae
dec
fbld
sbb
cmp
dec
test
aad
cltd
push
pop
add
test
out
pop
aad
arpl
xchg
and
cmp
or
add
pop
push
int3
movsl
xchg
mov
test
mov
cmp
adc
jp
inc
jl
stos
shrb
ffreep
mov
pop
js
imul
xchg
or
inc
dec
and
fsts
jno
push
test
or
bound
pop
jge
pop
mov
inc
inc
shl
jb
add
push
jle
mov
mov
call
xlat
sbb
fistpl
imul
ficompl
or
add
cmpsb
sbb
cmp
and
add
out
cltd
pushf
xor
push
sub
add
dec
xlat
negb
jmp
nop
and
les
push
in
popf
iret
xchg
pushf
or
fcmovu
jbe
mov
jle
cmp
pop
xor
call
cmp
push
bound
loope
dec
or
mov
push
push
pop
cmp
outsl
sahf
mov
pop
push
pop
pusha
mov
pop
xor
mov
inc
cmpsb
shlb
fwait
mov
push
mov
cmp
ja
out
push
jg
cmp
mulb
adc
subl
fwait
xchg
pop
inc
fcmovnu
jmp
rcrb
mov
inc
movsb
and
shlb
popf
inc
cmp
dec
sub
jno
xchg
aas
gs
mov
mov
push
xor
iret
outsb
subl
popf
cmp
push
mov
pop
jp
cmp
mov
lea
mov
push
cs
shl
xchg
mov
xor
xchg
sbb
jb,pn
cld
or
addr16
add
mov
ficoml
call
add
dec
push
jns
fdiv
dec
pop
pop
xor
xchg
roll
dec
jmp
popa
mov
pop
inc
subl
out
cmpsb
mov
shlb
xor
adc
pop
cld
mov
fbstp
pop
jle
divl
xor
mov
inc
xchg
pop
add
leave
stos
lea
or
inc
sub
add
mov
pop
imul
xor
sbb
push
outsl
call
int
fwait
push
inc
jae
clc
xor
push
push
es
test
cmp
inc
cmpb
sbb
rol
in
sahf
fidivrs
jmp
shll
cmp
in
jge
insl
fsubrs
cs
pop
out
outsl
xchg
xorl
dec
imul
into
jle
push
mov
jne
iret
repz
and
cld
mov
jb
add
mov
test
lds
jmp
or
jecxz
mov
sbb
add
dec
loopne
and
push
pop
push
test
fwait
sbb
mov
mov
hlt
push
icebp
xchg
bound
mov
imul
out
adc
cld
lods
cmpsb
push
dec
scas
jl
fcmovnb
icebp
jne
les
push
gs
jne
push
dec
cmp
add
push
sub
sub
cmp
push
or
xor
adc
jge
mov
inc
scas
rcll
mov
in
adc
stos
push
mov
pop
jle
pop
ljmp
addr16
mov
loop
mov
inc
int3
lret
inc
adc
gs
into
xchg
sub
or
xchg
bound
or
push
and
add
adc
test
mov
nop
dec
mov
fimuls
mov
mov
xor
pop
sbb
cltd
shl
enterw
sub
mov
push
or
int
inc
mov
add
leave
test
dec
jb
pop
xchg
pop
pusha
lea
lods
movsl
sub
mov
xchg
sub
xor
pushf
xlat
mov
cmpl
bswap
mov
xor
mov
rclb
rol
inc
sbb
test
add
and
sti
add
mov
mov
mov
inc
pop
xor
cwtl
inc
mov
movsb
inc
ljmp
sub
pop
cli
jae
scas
fimuls
sbb
cltd
xor
stc
inc
icebp
arpl
sbb
outsl
jl
les
aaa
pop
imul
and
lahf
std
sbb
pop
or
test
push
lock
or
arpl
inc
and
xchg
lahf
pop
xor
mov
sti
pop
lea
out
and
mov
jmp
pushf
or
enter
mov
xor
pop
jae
mov
mov
popa
dec
dec
push
shl
mov
aaa
shl
pop
mov
imul
push
cmc
xor
shll
repz
out
nop
or
and
mov
stc
add
iret
sbb
aas
jl
cmp
pop
faddl
mov
out
leave
pop
pop
or
rorl
fwait
inc
pop
jecxz
cltd
push
sbb
sbb
std
mov
lahf
hlt
cltd
std
mov
cmp
add
or
sbb
scas
jae
jno
and
arpl
fdiv
lods
jae
xor
inc
and
and
mov
jbe
mov
lods
ds
pop
and
mov
icebp
sub
std
or
lret
popa
mov
or
mov
cmp
inc
xchg
mov
stc
mov
cmpsb
aaa
or
cwtl
mov
jge
mov
sbb
mov
sub
sti
fisubl
lcall
xlat
pop
aad
test
mov
leave
scas
repz
out
arpl
push
mov
add
mov
mov
sahf
fstl
xchg
push
test
sub
rcl
adc
add
adc
ljmp
jnp
imul
ds
sub
out
xchg
pop
test
ret
daa
add
sbb
jae
cmp
les
aad
mov
push
lahf
sti
pop
je
and
shll
int3
outsb
aaa
and
es
sbb
arpl
and
and
mov
addr16
jle
sarb
cs
pusha
dec
jge
pop
fstl
imul
mov
das
lahf
decl
jle
aaa
test
mov
pop
jl
insb
pop
fimuls
push
mov
sar
xchg
int3
subb
mov
jmp
sub
sbb
jmp
cmp
sub
pop
add
jecxz
int3
mov
mov
test
ljmp
xchg
pusha
movsl
pop
fs
fs
pop
cmp
repnz
xorps
xor
aas
dec
or
and
and
int
and
in
ds
test
cmp
dec
adc
adc
push
pop
ret
ds
negl
mov
mov
sbb
and
push
insl
aam
dec
sbb
enter
mov
aam
addr16
gs
fs
stos
dec
test
or
jmp
jbe
cs
mov
nop
fistpl
pop
and
ljmp
call
jmp
push
js
ret
xchg
push
inc
sti
push
xchg
nop
rcll
out
xor
jecxz
cltd
sbb
out
rcr
icebp
jae
add
rcr
push
dec
idivl
xchg
jne
mov
cmp
mov
lret
xchg
mov
or
or
rcll
cmc
shr
orl
imul
lret
shr
insl
cmp
add
dec
ja
lea
xlat
das
rorb
xor
imul
lret
cmpsl
ja
sub
mov
mov
cwtl
in
lret
aas
mov
call
cmc
sbb
lds
and
addb
add
push
shl
jae
inc
mov
repz
cltd
jp
jg
xlat
xlat
js
jno
mov
and
cmp
pop
out
mov
sbb
rcll
mov
push
push
stos
rdpmc
pop
xor
out
lahf
and
jno
push
xor
sub
sub
and
fsub
pusha
dec
stc
pop
repnz
cmc
aad
stc
jne
pop
adc
test
lds
clc
cmpsl
jns
or
jmp
push
jecxz
ljmp
nop
stos
mov
or
aam
xchg
je
outsl
fwait
xchg
cmp
lods
leave
lret
mov
iret
xchg
rcrl
stos
jmp
orb
fwait
xchg
adc
cs
cmp
leave
lcall
insb
add
dec
int3
leave
out
ss
dec
push
fisubl
xchg
sub
and
mov
imul
fs
outsl
scas
test
dec
xchg
stos
lock
jecxz
adc
sbb
scas
rolb
jno
xchg
mov
add
mov
sub
aas
rcr
lret
test
xchg
and
add
jmp
test
in
ljmp
push
pop
iret
or
push
fistpll
adc
push
imul
jmp
loopne
pop
mov
pop
mov
js
adc
dec
mov
test
xor
rclb
or
or
iret
sub
cli
adc
dec
sbb
push
sbb
push
es
ret
ret
cmp
dec
fsts
or
mov
jne
out
in
inc
out
orl
insb
or
decb
out
jl
test
cmovb
and
pop
shlb
fldt
adc
xchg
dec
and
andb
mov
mov
xchg
pop
jnp
popa
lahf
cmpsl
lods
enter
inc
outsl
cmpb
fistpll
xor
mov
movzbl
sub
pop
cmpsl
fwait
jp
testb
notl
pop
inc
or
and
mov
lods
jge
mov
push
lcall
jmp
fadd
cmpsb
mov
xchg
in
enter
lods
pcmpgtd
or
xchg
cmp
imul
dec
jo
inc
add
jb
inc
push
sti
dec
jp
call
frndint
xchg
pop
cltd
rcll
repz
push
scas
repnz
loopne
adc
mov
xor
aam
insb
fcomi
nopl
stos
inc
dec
cmc
push
inc
pop
repz
stos
push
imul
stc
mov
aaa
mov
xchg
test
pop
mov
fdivrs
ficoms
ja
lret
data16
ret
mov
test
adc
adc
testb
clc
xchg
xchg
lret
lcall
out
mov
jbe
and
mov
mov
out
jge
jns
sahf
mov
mov
aas
mov
movsl
cld
nop
and
jae
sub
cmp
les
push
pop
mov
pushf
aaa
into
aad
std
repz
mov
dec
push
imul
cmpsb
aaa
fisttps
mov
int3
and
popa
sub
adc
cmp
icebp
jne
test
mov
pop
sub
fwait
xor
sub
push
lods
push
jmp
ret
mov
pusha
dec
pop
inc
mov
mov
adc
cld
pop
dec
popa
daa
mov
mov
mov
jg
negb
dec
sar
gs
mov
adc
sbb
std
idivb
mov
xchg
lahf
adc
test
rolb
jbe
nop
inc
stos
pop
outsl
adc
stos
les
jo
nop
xor
push
je
cmp
ljmp
fimuls
mov
ret
adc
sub
and
fimuls
mov
xor
mov
mov
out
lea
sub
pop
movsb
movsb
or
lock
sub
mov
decb
cmp
push
jp
jbe
outsl
pop
adc
xlat
por
cmp
insb
mov
lret
mov
xchg
cltd
ja
inc
pushf
sub
rcl
repz
stos
sbb
cmc
pop
fstps
out
lods
sbb
in
mov
in
and
shl
fs
jle
loope
andb
add
pop
xchg
shrb
push
mov
dec
add
and
mov
out
xchg
shll
pop
xchg
stos
sbb
inc
stc
out
inc
bound
aas
fisubs
imul
aad
pushf
fiaddl
adc
mov
ljmp
in
dec
insb
adc
mov
mov
adc
jbe
inc
and
mov
jge
push
cmpsl
icebp
xchg
lods
pushf
out
lds
jb
arpl
mov
mov
fbstp
hlt
mov
rclb
lcall
push
pop
mov
stos
add
xchg
arpl
daa
jno
add
mov
outsl
jo
repnz
sete
out
push
out
fdivrs
popf
outsb
enter
jle
jns
jecxz
mov
lds
cmp
push
aad
jecxz
iret
lret
adc
sbb
jb
cli
ss
and
das
sub
es
nop
inc
mov
dec
lea
test
xchg
movsb
in
xor
cmpsl
lock
add
aad
gs
repz
push
loope
mov
push
sbb
fidivrl
out
inc
outsb
inc
mov
sbb
inc
jb
push
fstl
sbb
cmc
push
and
lret
in
stos
aad
popf
les
inc
hlt
popa
stos
fisubs
out
jle
mov
jo
jmp
or
out
jbe
pusha
xchg
xchg
mov
arpl
xchg
or
dec
add
jg
rolb
dec
xchg
nop
xchg
xchg
pop
xchg
xor
sbb
scas
roll
jmp
insb
sub
mov
dec
xor
push
xor
shlb
sti
mov
pop
scas
mov
test
mov
outsb
insl
out
sbb
pushf
mov
stc
xor
lock
cmp
lea
mov
cmp
repnz
adc
inc
adc
pusha
sub
imul
ret
mov
pop
and
daa
enter
add
outsl
jmp
push
shlb
insl
lods
push
cmp
xchg
jp
bound
mov
mov
add
cmpsb
mov
ret
outsb
pop
xchg
mov
fldcw
hlt
jmp
mov
adc
xor
adc
mov
popa
out
jle
push
stos
lret
and
sub
jge
sti
mov
andl
inc
lods
jp
pop
stc
and
jnp
jecxz
or
xchg
push
inc
repz
and
jl
shrl
mov
dec
jge
lcall
out
out
sub
adc
lods
inc
out
pop
int3
popf
dec
dec
or
ret
sbb
ss
lods
test
jecxz
fdivrs
xchg
test
test
lcall
xor
call
lods
in
std
hlt
out
aas
das
pop
adc
pop
aam
paddb
push
int3
sbb
sub
bsf
add
push
xchg
jne
test
and
or
mov
mov
rorl
das
mov
cwtl
sub
xchg
test
lcall
dec
ret
inc
mov
jno
addl
xlat
fs
test
cmp
shll
pop
fdivrp
shrl
popf
insb
xor
jl
scas
inc
cld
and
loopne
insl
cmc
or
cmp
mov
ja
cltd
mov
lods
sbb
dec
push
adc
mov
xchg
mov
push
jbe
cmp
cmp
jb
jbe
repnz
movsb
inc
pop
lahf
pop
cmp
ljmp
call
jp
ljmp
add
popa
dec
call
and
pop
or
inc
call
shlb
clc
dec
inc
cmpsb
inc
sahf
in
cmp
mov
pop
xchg
dec
test
jecxz
in
fadd
xor
sbb
or
scas
stc
mov
or
mov
xlat
cwtl
rcrl
scas
xchg
dec
push
mov
rcrb
mov
ja
xchg
orb
icebp
pop
dec
pslld
sub
sbb
sti
rcll
adc
xchg
xchg
pop
aas
repz
adc
sub
lock
mov
mov
insb
call
inc
pop
in
pop
pop
lods
or
inc
and
mov
in
sbbb
ret
scas
inc
jl
inc
mov
sbb
les
dec
lcall
pop
jb
mov
sbb
mov
movsb
push
popw
hlt
xchg
rcrl
adcl
int
inc
aam
rcrb
cwtl
cwtl
cmp
push
mov
je
rorb
loop
jb
dec
outsb
pop
test
bound
xlat
ret
xchg
push
addr16
xchg
mov
in
je
adc
lret
dec
call
pop
lcall
mov
lods
or
leave
inc
sbb
ja
popf
pop
aad
fists
bound
pop
ds
cmp
fxch
adc
dec
mov
mov
pop
mov
mov
pop
cmp
mov
les
out
rorb
xlat
cmp
mov
jge
mov
xchg
sbb
dec
cmp
pop
pop
mov
sbb
cli
xchg
cmp
dec
out
loope
fsubp
fwait
enter
aaa
dec
push
mov
adc
imul
subb
push
lock
aam
inc
mov
leave
adc
in
and
mov
mov
mov
dec
shlb
add
sti
rolb
movsb
lea
mov
cmp
xor
cmpsb
inc
pop
insb
mov
out
mov
out
dec
jbe
pop
outsl
test
aas
jecxz
sbb
stos
dec
mov
xchg
aam
mov
pop
jae
std
movsb
mov
sub
push
test
xor
sub
mov
in
push
ret
inc
in
add
sbb
mull
test
jle
inc
pop
stos
in
add
xchg
ljmp
mov
addr16
mov
xchg
xor
adc
cmp
test
or
imul
lcall
pop
sbb
sbb
insl
jl
push
push
or
mov
pop
add
mov
jno
or
jg
or
popa
add
pop
sbb
daa
and
push
push
aam
fdivrs
mov
jns
fstps
inc
jmp
ss
xchg
fisubl
popa
mov
loope
out
adc
ret
mov
mov
and
push
xchg
fs
sti
and
mov
mov
jne
icebp
in
add
jns
jno
mov
rclb
pinsrw
rcrb
sbb
pop
push
cmp
ljmp
sbb
ret
push
and
xchg
pop
mov
xchg
pop
sbb
add
add
clc
xor
inc
fwait
pop
inc
imull
jb
in
xchg
or
in
jl
ja
or
movsl
dec
and
jo
jae
in
xchg
in
inc
or
add
loop
dec
push
cmp
adc
fldcw
rclb
orb
inc
das
dec
test
mov
push
mov
jbe
xchg
aam
sbb
pop
pop
cwtl
jbe
idivb
xor
sub
mov
lret
push
jmp
inc
andb
mov
lahf
mov
dec
popa
sbb
jno
mov
xchg
xchg
xchg
cmc
pop
shll
dec
addr16
inc
or
icebp
mov
sbb
mov
sbb
cmp
cmp
cmp
fisubrl
ljmp
xchg
call
inc
and
mov
loopne
loopne
adc
add
fsubl
sbb
push
insl
cmp
aam
xchg
nop
repnz
inc
sbb
fdivl
xor
popa
insl
leave
pop
jl
test
fwait
stc
cld
lret
filds
mov
adc
adc
out
or
mov
xchg
mov
sub
pushf
push
pop
push
aaa
jecxz
test
jno
fsts
mov
call
sub
in
add
sbb
hlt
pop
insb
add
pop
shll
or
xchg
jne
out
pop
clc
pop
popf
into
pop
add
test
mov
out
frstor
dec
jno
push
test
sbb
sub
jno
mov
outsb
inc
out
pop
or
xchg
test
mov
movsb
out
xor
cmp
adc
notl
xchg
push
inc
iret
xchg
fwait
and
lods
mov
sti
dec
or
jmp
into
lock
cmp
sarb
add
scas
pop
and
cmp
in
arpl
inc
stos
bound
dec
outsl
cmpsb
pushf
out
js
dec
int3
cltd
dec
into
call
push
mov
fs
cmpsb
mov
mov
mov
and
iret
scas
cwtl
dec
mov
insb
fldcw
mov
sbb
inc
xor
test
stc
or
dec
test
loop
pop
jne
push
xor
daa
lds
xor
fcmovu
dec
xor
cwtl
insl
xlat
push
dec
sahf
out
jg
push
not
adc
loop
stos
mov
fnstenv
push
es
pop
mov
pop
inc
jl
cmc
aad
jno
adcb
aaa
mov
jge
aas
jne
adcl
xorl
mov
fwait
es
stos
fildl
push
mov
push
test
jo
push
lds
xchg
sub
add
add
loop
adc
shlb
xor
imul
out
outsl
cwtl
test
daa
in
std
aam
or
sub
cmpb
mov
or
nop
sub
xchg
cmp
lret
push
leave
into
inc
jecxz
pusha
loop
inc
out
fcom
push
pop
fstpl
leave
test
mov
es
lds
mov
pop
ljmp
enter
je
xchg
mov
or
pop
mov
popf
pop
mov
jnp
aas
push
and
jne
mov
mov
mov
scas
cmpsb
mov
add
jg
jmp
inc
adc
aaa
xchg
lock
out
push
mov
or
pop
cmp
mov
mov
xchg
neg
and
pop
cmp
jmp
cmp
fs
sub
push
daa
mov
xchg
cmpsl
adc
scas
adc
jb
mov
sti
cmp
add
push
sub
faddl
sbb
or
inc
push
mov
add
cmp
call
daa
lods
cmc
gs
dec
out
out
xor
jg
jbe
enter
repz
dec
or
adc
mov
pusha
es
add
jle
popf
jnp
int3
push
ds
fs
pushf
in
mov
xlat
jge
xchg
les
cli
xchg
rclb
popf
push
mov
add
gs
lret
sbb
fildl
sub
test
in
inc
push
bound
pop
mov
xlat
cwtl
sbb
mov
mov
orb
add
sbb
ja
push
or
mov
jno
test
arpl
data16
mov
frstpm(287
jge
test
fisttpl
movsl
pop
inc
push
jmp
push
add
jmp
mov
in
cli
cmpsl
cmp
or
cmp
add
adc
outsb
mov
int
cwtl
inc
pop
xor
rcrl
push
inc
xchg
xor
test
test
bound
mov
cld
mov
stos
or
and
cld
out
scas
cmpsb
sahf
movsw
int
lods
fcompl
cwtl
hlt
loope
fwait
mov
jp
xor
out
idivl
and
mov
xor
lahf
cwtl
cli
or
pusha
pop
or
movsl
jns
into
inc
sbbb
scas
data16
leave
in
jp
adc
arpl
cmp
arpl
ficompl
mov
and
test
and
test
jl
mov
mull
test
or
pop
lods
jb
fldenv
sarl
jb
mov
ja
push
stos
filds
push
lods
pop
repz
xor
ret
cmpsb
and
cmp
inc
imul
jle
pop
ret
repz
jne
push
lcall
std
sub
pop
add
stos
jle
in
popf
push
push
add
out
sub
out
sub
xchg
mov
pop
pop
mov
icebp
loop
fstl
xchg
jo
imul
push
sub
iret
popf
mov
test
sub
movsl
cmp
xchg
aaa
jne
mov
fld
fs
fsubs
mov
mov
negl
pushf
pop
in
inc
jno
bound
pop
pop
jnp
imul
in
insl
and
push
mov
popa
je
dec
xchg
into
pop
ret
or
mov
push
jb
cli
add
adc
xchg
dec
lock
int3
add
fidivl
xchg
stos
mov
out
aam
mov
mov
xchg
jecxz
movsb
repz
cmc
cmp
jge
sbb
mov
je
sbb
xchg
sub
outsl
test
lock
clc
jbe
decb
push
sahf
sbb
lcall
fwait
lods
xchg
ds
adc
push
push
and
pop
dec
insb
mov
dec
push
fadd
jae
and
ss
dec
mov
jmp
sub
and
sbb
std
push
ja
ret
rorl
or
aaa
test
insl
loopne
mov
jle
mov
cld
mov
fcmovu
pop
out
mov
int3
jae
lret
pop
orl
sbb
popf
push
adc
sbb
dec
int
sub
jne
push
mov
shrb
add
sub
icebp
xchg
jmp
pop
mulb
sub
adc
push
in
push
jb
pop
fdiv
xlat
inc
addb
stos
outsl
into
adc
dec
pop
pop
or
addr16
iret
push
dec
test
add
pop
adc
scas
testl
dec
mov
mov
push
fisttpl
aad
imul
mov
lods
lods
jae
out
and
test
cmp
fwait
push
enter
push
out
add
arpl
cmp
lds
sbb
add
mov
mov
jns
jge
dec
in
dec
addb
push
popa
push
imul
cld
or
dec
cmpsb
adc
loopne
sahf
ret
sarl
aad
into
xchg
negl
adc
outsb
dec
mov
repz
data16
jmp
cmp
add
inc
insl
div
pop
ret
movsl
dec
mov
mov
dec
mov
push
add
lahf
or
xor
cmp
into
mov
mov
xor
push
fwait
add
fists
js
add
mov
mov
pop
sbb
stos
mov
cli
push
cmpsl
pop
icebp
push
das
mov
push
rcll
fbld
test
hlt
call
cmp
xchg
popa
inc
out
pop
jecxz
fdivrs
ret
sbb
sub
add
movsb
popa
idivl
popa
jbe
jle
ljmp
roll
xor
movsl
in
cli
adc
xchg
das
pop
ds
data16
ror
xlat
icebp
fwait
mov
call
add
loop
or
jle
jmp
mov
xchg
sahf
std
shrl
lods
jno
lds
out
jmp
loop
mov
push
imulb
dec
or
jg
mov
pop
enter
mov
add
addr16
pusha
xor
ret
testb
loope
dec
lret
inc
mov
shrb
sahf
sbb
pop
cmp
push
sub
popf
xor
adc
inc
iret
xor
jno
js
lds
mov
push
xchg
dec
gs
push
dec
xchg
sti
loop
lods
lock
mov
mov
fwait
mov
in
call
pop
mov
mov
push
pop
xchg
aas
out
fsubrl
cmp
xchg
push
xlat
or
mov
push
shrb
pushf
cmp
rolb
popf
ret
jno
mov
push
repz
fwait
popa
mov
or
insl
loopne
mov
movsl
cmp
clc
sbb
pop
cmpsb
fwait
sti
out
inc
icebp
xorl
mov
shrl
aam
sub
xor
loop
out
outsl
cli
pop
call
icebp
mov
jg
cli
stc
pop
je
subb
sub
sub
push
mov
push
or
bound
and
pop
movsb
outsl
out
and
and
hlt
in
xor
cld
dec
jo
fbld
jl
cmp
frstor
fisttpl
and
or
cmpsl
jge
repz
mov
pop
sub
dec
adc
cmp
pop
mov
inc
in
ljmp
mov
push
mov
loopne
out
imul
cmc
adc
das
outsb
push
mov
repz
dec
jge
test
je
daa
and
mov
lahf
jmp
das
outsl
inc
addb
dec
je
in
pop
sbb
dec
jbe
loop
dec
add
pushf
pop
call
imul
fnstcw
ss
bound
pop
pop
aas
in
int
int
sub
fiadds
add
xor
adc
gs
xchg
out
dec
push
pusha
in
ds
jbe
xor
fcoml
test
add
mov
scas
popa
leave
mov
aas
aaa
sub
dec
add
push
lret
push
imul
jb
scas
push
movsl
gs
dec
mov
jge
and
push
test
xchg
cmpxchg
rcll
icebp
hlt
ljmp
sbb
sub
and
lret
into
hlt
mov
adc
dec
mov
ds
ss
dec
xchg
pop
sub
int
cwtl
mov
ror
cmp
push
jg
subb
test
adc
sub
pop
das
pop
pop
das
xor
fwait
sbb
notl
dec
adc
mov
fs
sbb
sti
lret
jo
daa
sbb
inc
sbb
xor
and
out
rorb
inc
mov
call
loop
jnp
lods
std
shll
cld
insb
imul
cltd
repz
fisttpll
idivb
clc
mov
nop
insb
ja
xchg
or
jo
or
push
xorl
and
cmp
xchg
ds
repz
shrl
data16
mov
jecxz
pusha
mov
jae
push
push
push
rclb
xor
adc
mov
loopne
inc
jo
xor
lods
sbb
adc
test
js
call
pop
jo
cmp
xchg
sub
js
cmp
cmc
sub
pop
ss
jle
rcr
add
pop
das
movsl
mov
push
lahf
jns
shrb
ss
push
sub
loop
dec
sub
enter
imul
cmp
shrb
add
inc
enter
iret
push
nop
push
or
insb
xlat
fimuls
push
hlt
rol
mov
inc
stos
fdivrl
cs
mov
stc
notb
jne
jae
dec
enter
push
aad
cld
movsl
hlt
xchg
inc
sbb
xchg
dec
lods
rorb
mov
and
pop
and
das
jp
mov
lret
mov
jno
push
outsb
mov
inc
pop
adc
mov
dec
jne
notl
cmp
sbb
mov
cmpsl
mov
adc
xor
pop
loopne
pop
jge
imul
lahf
stc
mul
sub
loop
mov
or
adc
inc
lret
jno
jl
pop
sbb
int3
or
scas
xor
xchg
cli
pop
stos
cli
in
aas
lods
shll
cltd
mov
cmp
gs
xor
xchg
pop
mov
push
dec
pop
jecxz
dec
shl
cmp
subb
ficomps
jbe
in
jne
imul
xchg
mov
aad
jb
add
and
ljmp
ljmp
outsb
clc
xor
add
sti
pop
fabs
rorl
mov
ljmp
jo
sti
or
jge
pushf
mov
pop
dec
xor
and
js
lods
lcall
js
mov
mov
ss
scas
fiadds
outsl
add
jnp
sahf
cmp
pop
adc
lcall
leave
sbb
loope
outsb
xor
aam
push
sbb
fwait
push
and
jb
in
xchg
rcll
fbstp
inc
jle
add
pop
inc
in
clc
adc
xor
xorb
ret
pop
mov
aam
rcr
arpl
sub
xchg
sbb
mov
jbe
push
scas
in
pop
fcomp
cld
xchg
mov
ror
rcll
cld
leave
jb
rcll
iret
xchg
incl
push
ficoml
mov
imul
mov
leave
inc
test
mov
push
sub
sbbl
lock
outsl
xlat
xlat
filds
outsl
fwait
imul
ret
cltd
imul
stos
jnp
cmc
mov
xchg
cmp
mov
dec
push
pop
xor
mov
add
popa
scas
cmpl
or
jle
or
inc
test
xlat
dec
cltd
subb
add
or
fucomip
jle
xchg
mov
sub
rcl
frstpm(287
enter
xorl
subb
sub
aam
nop
sub
mov
shlb
ljmp
fists
sti
dec
mov
and
andb
adc
or
out
or
lahf
insl
enter
enter
mov
and
cld
mov
outsl
push
test
mov
mov
imul
aaa
ss
stos
pop
int3
pop
or
lods
xor
pop
icebp
xchg
xchg
jo
xchg
pop
sbb
inc
jns
jge
and
loop
cs
aas
mov
inc
and
mov
inc
je
call
hlt
out
jo
mov
data16
int3
imul
dec
pop
sbb
adc
mov
sbb
jb
add
or
loopne
mov
ret
add
or
dec
movl
enter
xadd
pop
std
shll
add
pop
lods
in
jle
jae
push
jmp
call
loope
sbb
cmp
movsb
lods
bound
leave
fbstp
mov
push
push
pushf
cmp
jnp
rcr
movsb
call
fistl
or
inc
pop
loope
sub
and
push
rcrl
jae
sbb
pop
xor
or
inc
mov
jo
repz
jecxz
cld
outsb
push
bound
add
lock
jmp
push
push
xchg
cmp
mov
dec
movsb
lock
dec
test
imul
and
int3
das
fs
push
inc
push
sub
xchg
push
xchg
les
cltd
andb
loopne
xchg
or
dec
mov
clc
inc
pusha
imul
push
mov
xor
jnp
rcrb
std
xor
cltd
and
xchg
adc
sbb
or
das
ret
orl
lea
push
lods
in
mov
fidivrs
aam
into
push
notl
pop
push
and
sbb
outsb
lahf
out
icebp
test
mov
mov
push
stos
mov
adc
out
call
or
adc
jl
call
jno
inc
mov
xor
sbb
pop
popf
sbb
and
dec
in
testl
hlt
mov
pop
mov
out
dec
rcll
fadds
mov
or
sub
inc
test
dec
jmp
mov
cmp
arpl
or
test
jecxz
mov
xchg
sarb
neg
cld
cmp
scas
lods
xchg
mov
or
add
fsubrl
mov
incl
mov
jno
pop
out
scas
add
push
int3
lea
pop
mov
mov
pop
adc
cli
call
lcall
cmpsb
cmp
push
pop
inc
mov
mov
xor
shll
and
cli
and
push
sub
and
inc
sub
ja
or
lea
jl
jge
jecxz
dec
or
dec
xchg
push
xor
data16
mov
dec
jb
stos
je
enter
and
jle
mov
xchg
mov
push
xlat
mov
jmpw
xchg
stos
mov
jne
addr16
xor
lds
jge
dec
jl
or
mov
dec
pop
fidivl
mov
mov
ficoml
imul
cli
push
rcl
cltd
push
inc
in
mov
mov
sbb
jmp
sarl
sarb
adc
xor
lea
xor
fistpll
lods
fistps
mov
or
mov
dec
sub
insl
out
mov
fists
fnstsw
xor
ds
jp
insl
subb
fmul
jecxz
jg
pop
cmp
xchg
or
mov
stos
add
es
stos
mov
push
lea
fildll
icebp
push
in
leave
jp
es
leave
sahf
rolb
lock
pop
les
dec
aas
test
addr16
imul
pop
rcrb
repnz
std
pushf
xor
add
pushf
jnp
and
ret
jecxz
pop
icebp
nop
adc
shrl
in
je
pop
sbb
hlt
pop
js
int
orb
lods
in
dec
mov
inc
jg
jns
add
addr16
jmp
jmp
mov
test
pop
mov
adc
bnd
ret
mov
sahf
je
cltd
jge
xor
push
je
or
xor
cld
test
jae
xor
int
lods
fadds
popa
jg
mov
cmp
dec
int
jno
daa
les
addl
mov
mov
push
mov
out
xor
insl
xlat
bound
js
aas
push
push
aad
addr16
stos
sub
or
cmp
mov
pop
adc
sbb
add
sub
xor
mov
imul
cmp
cmpsb
cmpsl
jbe
fidivl
adc
mov
xor
or
jmp
jo
rorl
xor
andps
pop
mov
lret
mov
or
shrl
cltd
out
dec
ret
rorb
inc
dec
xchg
and
push
pop
mov
scas
cmp
out
bound
jbe
test
cmp
xchg
out
xor
repz
push
jne
mov
ss
mov
cld
lret
xor
out
add
leave
iret
fwait
push
rorb
mov
cmpsl
in
cmp
outsb
push
adc
testb
jge
add
mov
insl
dec
lret
mov
out
outsb
je
push
or
lahf
cli
adc
cmpsb
data16
sbb
adc
in
or
in
dec
adc
lds
orl
cmp
movsl
lods
imul
mov
dec
sub
mov
jg
mov
loopne
enter
movl
xchg
test
mov
out
sub
mov
frstor
adc
std
divl
pop
cwtl
mov
cs
filds
xor
push
in
loop
in
js
test
mov
in
push
and
add
cmc
psrlq
cvttps2pi
loope
cmc
aaa
mov
movsl
outsl
or
jl
cmc
test
stos
aad
mov
dec
test
popf
jns
sahf
adcl
add
pop
xor
ja
roll
xchg
push
add
xchg
fcomps
rcll
mov
dec
xor
or
cmp
mov
xor
adcl
ror
bound
and
dec
testb
inc
pushf
pop
dec
cld
ds
push
fsubl
les
je
adc
icebp
js
sbb
call
lahf
or
mov
lcall
dec
sar
add
std
jecxz
ss
cmpb
lret
notb
out
push
insl
push
mov
pop
add
rclb
pop
stc
jmp
add
dec
adc
loop
imul
js
or
lods
push
inc
push
fnstenv
or
lods
inc
sub
jae
jae
ret
jg
sub
outsb
movsb
push
cmp
add
push
aaa
inc
rcr
or
nop
jnp
xchg
gs
xor
dec
pop
daa
out
mov
add
bound
inc
in
push
stos
jecxz
add
mov
add
sub
mov
scas
pop
push
fldl
cmp
ja
adc
lmsw
ret
dec
in
jecxz
xor
adc
mov
dec
fimuls
cwtl
mov
cmp
mov
dec
sbb
in
inc
xor
cmp
mov
cmp
in
pop
jnp
das
test
mov
pop
jo
or
push
loopne
addr16
gs
scas
ret
xor
jmp
es
lret
imul
movsl
and
jg
out
mov
into
es
fldlg2
bound
pop
jo
mov
pop
xchg
lret
adc
popf
cld
add
lods
dec
repz
and
scas
nop
mov
pusha
fists
xor
push
mov
push
jg
test
push
cmp
jg
pusha
cmp
clc
inc
cmpsb
aas
sarb
shlb
out
xor
add
push
movsb
mov
mov
pop
fdivs
in
in
das
fstps
lods
cmc
sbb
ret
push
daa
sbb
scas
jle
test
jae
pop
js
aam
mov
pop
push
dec
adcb
clc
xlat
sbb
sub
push
mov
hlt
xchg
aas
cmpsb
roll
pop
out
mov
das
xchg
mov
xchg
fnstsw
xlat
pop
gs
sub
sub
add
mov
add
and
dec
push
iret
cmp
cmp
out
ret
add
call
add
cmpsl
outsb
or
mov
xor
inc
fdecstp
pop
lea
repnz
adc
ss
mov
stos
mov
clc
les
enter
je
je
frstor
mov
cmpsl
loopne
jb
sub
cltd
xchg
pop
mov
out
jae
out
dec
mov
jp
inc
lea
xor
pop
push
inc
insb
in
fstpl
push
mov
test
fsubrs
adc
xchg
leave
xor
rolb
lahf
lret
xchg
push
jbe
fldt
cmp
and
popf
bound
and
aaa
or
pop
xor
cmpl
ja
cld
dec
gs
sbbb
mov
jb
mov
js
inc
lds
mov
pmaxsw
mov
jae
or
rcl
jbe
addr16
or
outsb
cmp
xchg
outsl
xlat
in
pop
mov
lds
shl
inc
mov
inc
jae
pop
jecxz
or
fxch
xor
dec
xor
and
mov
lcall
bound
dec
inc
imul
negl
mov
xor
ret
adc
add
mov
scas
or
ret
adc
aam
sub
scas
sub
adc
nop
sbb
push
mov
lods
andb
adc
enter
inc
add
insl
stos
push
xchg
lret
in
mov
or
les
ficoml
daa
sub
pop
pop
test
jmp
insl
pusha
xchg
insb
xor
or
push
mov
bswap
sub
push
pop
xor
mov
mov
and
push
dec
or
out
mov
in
lret
push
int3
es
jmp
push
cs
popf
jecxz
xchg
sub
arpl
adc
lcall
dec
cmp
movsl
pusha
aas
mov
xchg
adc
or
lret
mov
cmp
mov
gs
fistl
cmp
or
mov
xchg
ja
pop
push
jecxz
add
xchg
les
sahf
frstor
jmp
ret
inc
sbb
add
xor
push
jnp
insb
jbe
sub
clc
arpl
in
fsubrs
scas
mov
cmpsl
aaa
test
cli
mov
jp
mov
out
pop
add
stos
dec
call
jno
xor
int
movsb
cmpsl
outsb
mov
iret
jle
mov
aas
or
sub
mov
push
and
jmp
dec
or
insb
cmpsl
mov
jae
in
mov
push
es
adc
push
scas
mov
movsb
popf
imul
cwtl
dec
arpl
pop
pop
inc
xchg
dec
xor
xchg
jne
add
push
decb
xlat
and
add
jb
add
dec
and
loope
fnstsw
and
push
push
mov
push
pushf
or
shl
sbb
out
inc
adc
xchg
popf
aas
jb
or
xor
popa
fimull
flds
testb
sahf
add
pop
int
ljmp
stos
ret
fs
lret
jnp
cmp
mov
pop
push
scas
adc
and
xchg
icebp
xchg
push
xor
or
mov
cmpsl
hlt
ja
and
fnstcw
sbb
test
push
adc
jmp
mov
daa
insb
and
push
lahf
hlt
sbb
pop
jecxz
bound
xchg
cmpb
jbe
jo
xchg
loopne
les
int3
divb
push
or
push
lock
dec
test
mov
std
sub
outsl
mov
pop
or
push
mov
leave
pop
dec
mov
and
sub
or
add
jle
push
adc
fldl
mov
inc
cmp
adc
int3
jnp
add
sbb
or
jb
fs
addr16
ss
ret
stos
nop
iret
pusha
mov
mov
jb
cmpsl
jns
push
cmp
jb
or
add
aas
shll
in
out
fcomps
adcl
flds
in
aas
mov
sub
scas
pop
fdivrl
xchg
mov
push
outsl
pop
mov
mov
jmp
push
dec
decb
xchg
aas
jle
bnd
mov
cld
imul
mov
push
pop
xorb
in
pop
test
xchg
fs
xor
cmc
pop
ret
nop
ds
add
cmp
mov
mov
dec
mov
ljmp
movsl
into
mov
cmp
dec
add
flds
pop
inc
inc
sbb
jmp
repnz
jp
stos
adcl
xchg
fimull
xchg
pop
cmpb
xchg
inc
pop
sbb
xor
push
pushf
jns
int3
add
jge
ret
fistpll
inc
cmc
push
fnstcw
dec
cmp
iret
xchg
stc
jge
jns
sub
pop
add
iret
in
pop
xor
cmp
mov
sbb
aaa
add
mov
sbb
adc
mov
out
mov
das
xlat
sahf
je
in
je
js
les
inc
cmp
adc
mulb
enter
cwtl
pop
mov
jbe
pushf
cli
jmp
cmp
sbb
popa
xor
cmp
lahf
pop
leave
add
mov
sbb
pop
call
mov
add
pop
or
sub
xchg
andl
push
or
pop
sbb
mov
xchg
movsb
enter
fildl
mov
or
push
cmp
cmp
mov
dec
pop
mov
mov
jle
call
jo
sbb
push
add
mov
outsl
stos
rorb
out
add
ret
xor
xlat
xor
cld
lret
adc
sbb
hlt
clc
push
into
call
daa
mov
or
mov
dec
testl
popa
outsb
cmp
jnp
xchg
jg
fcoml
cmp
cmp
scas
sbbl
add
repz
xchg
and
test
outsl
jl
cmp
pop
cmpsb
ss
pop
push
mov
lahf
in
and
cmp
test
out
inc
iret
aam
dec
fists
inc
or
add
lahf
pop
lret
lea
mov
mov
popa
js
mov
dec
lods
pop
xlat
xchg
cwtl
enter
lcall
inc
cld
and
popa
or
mov
push
loope
sub
jl
sbb
or
addr16
xor
data16
push
sub
xorb
aas
fld
mov
and
or
sub
jns
dec
lods
xor
add
dec
pop
test
cmp
mov
xchg
enter
int
sbbb
test
ds
decb
cli
cli
insb
mov
cltd
or
loop
dec
stos
lods
jge
push
inc
push
sub
orl
lcall
je
push
in
or
fs
mov
jle
push
jl
outsl
or
push
inc
es
jnp
xorb
pop
movsb
test
fsubrl
lcall
adc
ret
outsb
or
inc
ficoms
popf
int
jmp
outsb
or
xchg
and
sbb
lods
sub
movsl
fidivrs
pop
adc
adc
test
sub
sbb
add
in
cmpsl
xlat
inc
mov
test
xchg
cltd
in
mov
aam
into
fmuls
insl
hlt
mull
lods
mov
dec
mov
pop
dec
movsl
mov
pop
mov
inc
push
pop
lahf
ss
gs
cmp
insb
fdivrs
in
xchg
inc
ja
call
jg
cmc
sbb
adc
loop,pt
loop
cmp
inc
jp
mov
xor
inc
addr16
add
repz
shl
sub
loope
int
pop
rorb
jmp
mov
fadd
sub
push
xchg
xor
lcall
jnp
pop
ds
stos
jp
outsl
push
fwait
rcrb
rorb
out
scas
mov
fildll
xor
mov
jmp
orl
in
imul
sbb
push
sti
lock
lret
mulb
adc
inc
pop
xchg
adc
pop
sahf
push
shlb
addl
mov
ljmp
and
pop
jnp
imul
add
in
jbe
inc
push
pusha
repnz
test
sub
ljmp
test
cmp
das
lret
ror
adc
xchg
jg
rcrb
movsb
rep
xchg
leave
ss
xor
test
in
sbb
lods
out
lret
add
sub
int3
and
orb
mov
xor
pop
lds
movsl
ret
pop
insl
in
das
lret
pusha
push
jle
xor
jno
mov
dec
xchg
int
add
push
lock
sbbl
lods
mov
xorb
gs
push
sub
nop
pop
xor
mov
and
ja
pop
mov
mov
or
stos
push
jg
aas
inc
stos
std
rcrl
push
sbb
xorl
rcll
mov
call
loop
insb
sti
clc
xchg
or
push
lcall
minps
test
cli
push
inc
insl
out
xchg
jno
mov
xor
popf
movsl
nop
cmpsb
cmpb
adc
loop
push
test
adc
mov
in
rcl
sbb
push
add
xor
add
movsl
jns
testl
sbb
rcrb
fsubrl
pop
xchg
stos
ljmp
jp
leave
rcl
enter
sbb
sbb
jno
adc
cmp
adc
fcmovbe
fldcw
pop
out
push
pop
arpl
daa
sti
fs
cmpsb
pushf
cli
mov
xchg
pop
and
ret
cli
cmp
sub
aad
xchg
cmc
icebp
cmp
mov
push
in
xchg
cmp
mov
popa
imul
into
movsl
test
lods
mov
mov
div
sub
stos
cmp
mov
mov
and
popa
xor
icebp
push
insb
movsl
push
jbe
ss
mov
in
in
dec
xchg
dec
out
int3
iret
addl
movsb
and
aad
out
loop
jne
dec
insl
cmp
jmp
cmp
leave
loopne
cmp
push
dec
sbb
and
clc
xor
pop
dec
push
inc
dec
pop
ret
jo
push
xor
cmp
outsb
je
and
mov
push
and
xchg
mov
sub
add
pop
jns
or
in
sbb
aas
cmpsl
push
push
rclb
nop
dec
in
xchg
adc
push
sub
in
xor
jo
imul
fisubrl
dec
pusha
mov
jmp
and
lcall
cmp
pop
outsl
repz
mov
push
mov
cld
add
jmp
pop
dec
jne
cmpsb
jbe
add
jns
push
je
adcl
fadd
push
addr16
and
mov
scas
add
mov
loopne
dec
jbe
jle
lcall
aam
mov
and
cmp
call
cmp
xor
push
xor
sbb
pop
adc
int3
or
js
cwtl
aas
jae
enter
cmpsb
dec
lcall
ds
outsb
out
mov
sub
adc
xchg
xchg
mov
pop
std
lahf
inc
adc
sbb
xchg
xchg
fists
mov
test
and
xor
jne
ret
xlat
lcall
ja
shll
lea
sti
sti
loop
sub
faddl
jmp
fdivrs
cmp
mov
dec
xchg
in
push
mov
jecxz
jmp
nop
jg
fstpt
xor
xchg
in
push
movsb
fdiv
push
aaa
xchg
movsb
int3
dec
pop
fcomps
push
adc
xor
out
jb
xchg
mov
sub
sub
into
imul
out
mov
dec
fmull
mov
addb
inc
cmp
rorb
popf
inc
lahf
pop
mov
daa
or
stos
jbe
popf
fidivrs
dec
cld
and
mov
je
sub
jae
js
push
lcall
adc
out
lahf
cwtl
fsubs
mov
movsw
das
mov
mov
mov
adc
in
lret
pop
mov
adc
sbb
sbb
scas
int
ror
push
aaa
or
pop
nop
push
fsubs
fstl
js
cmp
cltd
popa
insb
rcrb
xchg
loop
add
fcomps
jno
rolb
jmp
push
test
sub
adc
rcrl
std
jns
add
ljmp
je
jle
cmp
dec
repnz
sub
mov
pop
jo
pop
ljmp
rdpmc
popa
inc
add
and
aas
stos
icebp
adc
ret
cli
or
mov
das
jle
xor
sahf
jno
hlt
sbb
push
aam
jo
std
and
and
movsw
stos
pop
inc
out
lods
sbb
mov
sbb
fwait
adc
movsl
idiv
dec
js
sbb
pop
mov
mov
lahf
cwtl
pop
imul
inc
and
push
adc
adc
jne
adc
xor
addl
pop
in
adc
xchg
fcomps
insl
test
jle
das
mov
lahf
fimull
mov
sbb
test
out
jmp
enter
mov
add
mov
sahf
mov
imul
pop
shr
or
cmp
xchg
daa
test
inc
jbe
test
outsl
iret
xor
xchg
int3
aam
stos
adc
bound
stc
movsb
push
dec
dec
test
mov
xlat
faddl
test
mov
loop
pusha
lds
cmp
jle
inc
jg
mov
movsb
cmp
add
mov
xorl
lcall
mov
mov
je
and
aam
pop
sbb
push
push
pop
stc
fdivs
stos
or
sub
cmp
ljmp
aam
sbb
popa
dec
stos
fldl
stos
ret
lret
shl
hlt
lret
or
hlt
mov
jle
push
inc
mov
insb
pusha
dec
out
das
cmp
mov
or
aas
mov
in
dec
divb
xor
cmp
mov
sub
pop
pop
imul
dec
or
daa
cltd
push
rcl
xchg
jne
in
jl
jge
and
jecxz
daa
push
cmp
cmp
mov
pop
or
inc
adc
xorb
mov
jo
jno
mov
inc
push
inc
inc
jp
movsl
in
insl
in
cltd
inc
je
call
gs
sub
f2xm1
sbb
mov
mov
das
or
jne
in
les
out
sub
cmp
mov
icebp
testb
dec
insl
cli
mov
fs
repz
mov
mov
pop
lods
jne
and
int
scas
inc
mov
and
jns
sub
or
xchg
loop
mov
call
lahf
jl
dec
pushl
push
cmp
jmp
push
xchg
loopne
loope
icebp
cmp
lret
psllq
test
adc
loop
sbb
fcomps
mov
inc
pop
sub
jae
cld
cmp
shlb
into
lods
mov
sub
not
aad
dec
cmp
inc
lahf
mov
jg
cmpsb
push
pop
pop
popa
out
aaa
inc
adc
pop
das
sahf
test
lods
ljmp
mov
mov
js
ret
addr16
fs
and
pop
add
aaa
jl
mov
sarb
cmp
ret
fdivrl
mov
stc
test
in
mov
imul
inc
mov
imul
shl
je
in
aad
and
sub
adc
push
fdivrl
ja
inc
adc
es
pop
repz
jb
dec
in
xor
jmp
mov
shll
mov
dec
shr
int
adc
incl
xor
mov
cmp
adc
adc
test
out
sbb
mov
xchg
mov
fistpl
push
push
inc
dec
push
adc
stos
jb
jecxz
ljmp
test
xchg
cmpb
inc
xor
and
test
lock
aas
jge
sbb
stos
jnp
leave
inc
data16
jnp
ret
mov
sbb
xchg
out
in
adc
data16
push
lods
fiaddl
lock
negb
mov
cli
dec
jb
sbb
jno
pop
inc
jge
mov
loop
mov
aad
sti
outsb
addr16
mov
ret
mov
cmpsl
adc
pop
mov
jnp
imul
lds
inc
xchg
shll
stc
mov
sbb
cmp
repnz
icebp
mov
push
cmp
scas
std
dec
mov
rcll
inc
pop
inc
and
sbb
aaa
or
xor
jb
imul
mov
sbb
pop
pop
xchg
lret
xchg
and
orl
sub
xchg
fbstp
cmovae
fwait
aas
or
je
inc
stc
rcll
nop
xchg
call
rcrb
adc
mov
hlt
mov
and
fs
icebp
sbb
and
popa
xchg
and
xchg
std
rorl
mov
fnstsw
pushf
cmp
or
daa
mov
nop
pop
adc
push
pop
add
rorb
jmp
and
pusha
cmp
pusha
dec
sub
test
push
ja
dec
xchg
push
fisubrl
bound
cld
mov
cmpsl
push
imul
xor
xchg
bound
mov
stos
inc
aas
das
cltd
mov
scas
add
or
sahf
ficompl
mov
pop
pop
fs
decb
mov
pop
mov
adc
jmp
and
mov
imul
js
insb
popl
imul
and
pushf
inc
mov
clc
shr
adc
pop
insb
dec
pop
push
lcall
mov
sahf
sub
inc
mov
lret
push
sarb
dec
sbb
cmpsl
pop
mov
bound
adc
movsl
and
test
pop
xor
mov
jp
xor
sbb
sub
aad
mov
lcall
lock
repnz
daa
rcl
xchg
loope
mov
mov
pop
ljmp
or
pusha
and
dec
mov
cli
fidivrl
jae
cmp
or
sbb
inc
inc
or
xor
imul
inc
fs
jge
out
adc
mov
push
int
mov
in
mov
push
rclb
mov
fs
xor
or
pop
inc
mov
insl
push
push
cs
fwait
push
fmull
call
in
push
rcrb
pop
jl
jmp
movsb
aam
jge
inc
inc
xchg
mov
lahf
jno
loopne
xor
and
mov
sub
loop
push
mov
xor
sarb
scas
ss
mov
add
mov
sbb
lahf
dec
pop
inc
outsb
fdivs
adc
das
into
push
mov
pop
insb
cmpsb
cltd
ret
add
fdivrl
ret
cmp
jb
sub
dec
mov
dec
xor
or
xorl
add
add
cmp
loope
sbb
mov
fadds
add
xchg
rolb
lahf
mov
mov
lahf
hlt
outsb
push
push
sbb
mov
rcrb
jne
mov
cmc
mov
leave
mov
outsb
hlt
fcmovne
lahf
cmp
xlat
lcall
mulb
lds
mov
es
imul
dec
xor
std
fs
insb
push
jns
xor
in
mov
testb
scas
repz
adc
adc
stos
fildll
mov
int3
jae
enter
ss
flds
fists
mov
iret
repnz
insl
xchg
mov
sbb
xor
lret
add
or
movsb
nop
and
sbbb
cmpsl
xchg
rol
in
add
adc
pop
loop
ret
add
jne
pop
dec
add
stc
push
outsl
add
sbb
push
lods
mov
test
int3
popa
scas
pop
sub
in
sahf
mov
repnz
xchg
adc
xcrypt-ofb
cmpsl
sub
sub
jo
neg
push
lea
jns
mov
cmp
xchg
in
fsubr
arpl
ja
pushf
mov
adc
ja
adc
jbe
test
inc
adc
lods
dec
inc
push
rolb
pushf
loop
xchg
shl
xor
lods
sbb
mov
leave
cs
sbb
sti
inc
sub
jo
into
mov
pop
icebp
popa
dec
rcr
int
jb
xor
es
dec
das
pop
jne
sbb
mov
cwtl
int3
fs
dec
sbb
jmp
pop
pop
scas
jecxz
push
cs
inc
mov
mov
sbb
pop
xchg
adc
pop
lahf
jg
sub
jne
std
cs
int
adc
mov
mov
inc
xchg
inc
lret
push
inc
loope
out
pop
dec
mov
mov
pop
or
arpl
je
or
pop
out
fst
mov
out
sbb
sub
fisttpll
jecxz
xor
arpl
sub
xchg
aaa
jmp
stc
mov
jge
pop
inc
divb
int3
cmp
icebp
sbb
inc
iret
add
or
imul
aad
dec
ret
pop
push
and
mov
mov
jo
dec
add
fimuls
sub
sbb
cs
dec
add
lret
in
inc
sub
roll
loope
dec
mov
iret
pusha
fwait
out
add
inc
sub
popa
inc
add
lret
psrld
mov
aad
icebp
mov
aad
sysexit
mov
fistpll
insl
jg
push
jmp
lods
lods
je
loop
add
loope
mov
dec
inc
adc
pop
and
mov
mov
imul
inc
adc
xor
popa
and
push
clc
imul
loope
aad
push
pop
ficomps
addr16
mov
fwait
negb
loope
nop
rcll
lcall
xorl
or
push
stos
std
les
inc
inc
mov
out
mov
push
pop
xchg
lret
imul
imul
jecxz
cmp
push
das
lds
imul
mov
cmp
fimuls
add
sahf
dec
dec
sbb
mov
lods
ja
and
push
pop
xor
jmp
sub
cltd
mov
xor
movsb
jns
imul
inc
xchg
cmc
mov
rclb
push
mov
or
pop
sbb
orb
jb
mov
outsb
cmp
in
inc
adc
std
push
push
cmp
fnstsw
aad
fwait
mov
repnz
iret
lcall
cmp
push
inc
jne
dec
in
lret
sub
ret
popf
lret
sahf
mov
pusha
add
adc
ret
mov
ficomps
les
pop
jg
add
jp
ret
add
dec
fiadds
cs
add
mov
xchg
cmp
lret
cmp
mov
scas
cmpsb
icebp
add
sub
jns
lods
xor
xchg
xchg
push
mov
pop
dec
sysret
and
gs
add
inc
adc
mov
ljmp
lcall
adc
imul
sub
mov
xor
jle
jecxz
call
push
mov
ret
dec
ret
or
xchg
adc
or
sbb
lea
adc
insl
dec
ret
lret
cmpsl
push
sub
sub
or
or
push
cmp
lods
test
sbb
push
xor
scas
xor
push
cld
aad
inc
lahf
lods
sbb
cmovs
dec
ljmp
mov
add
push
mov
cmp
jne
push
fisttpl
push
test
push
jbe
xor
sub
jbe
mov
divb
dec
pop
fsubs
push
xchg
mov
pop
jge
sub
jl
xchg
out
push
sbb
insb
lea
pop
loope
jae
daa
sarb
xor
push
pop
pop
push
mov
divl
subl
mov
jb
jae
in
sub
xchg
clc
test
xchg
stos
test
les
xchg
jecxz
mov
mov
movsl
fdivl
mov
fnsave
and
imul
and
fidivrl
and
lret
or
loop
mov
insl
inc
sbb
enter
sub
clc
pop
mov
std
mov
pop
loop
sbb
adc
sbb
xchg
adc
lahf
nop
loop
cmc
in
jl
vmovups
push
mov
push
out
or
out
adc
fcmovbe
mov
mov
daa
cmp
ljmp
out
and
or
push
xor
xor
ljmp
push
push
imul
movaps
icebp
lock
popa
fcompl
repz
insl
jnp
mov
orb
stos
mov
test
push
push
push
cmpsb
test
std
mov
scas
xor
hlt
or
adc
pop
push
into
adc
sti
loop
cli
bound
iret
rorb
mov
mov
pop
fwait
dec
sub
lods
jnp
pop
repnz
js
mov
lret
loope
fldenv
insl
pop
stc
adc
mov
in
jno
pop
lods
andb
jp
inc
int3
push
inc
mov
lcall
pop
push
pop
or
mov
add
mov
sbb
sbb
mov
lods
sbb
add
mov
mov
iret
mov
pop
sbb
sub
xor
cmpb
or
and
stc
inc
repz
push
sti
or
mov
mov
mov
add
js
int3
ds
xchg
pop
aaa
mov
add
loope
ret
fmulp
add
popf
mov
push
pop
stos
fnstsw
sub
fs
aam
push
or
jge
pop
push
xchg
or
add
fldcw
push
jo
mov
adc
inc
cmp
nop
cmp
test
lea
xorl
arpl
push
in
fidivrl
xchg
test
sbb
mov
mov
repz
fiadds
jp
loope
icebp
cli
sub
faddl
push
or
out
in
and
inc
lret
in
fsts
jge
jge
ret
insb
and
pusha
bound
std
mov
jecxz
lock
into
stos
enter
clc
pop
adc
push
xchg
pop
mov
and
mov
mov
jg
cmp
bound
dec
xorb
cmp
inc
ret
mov
je
test
adc
shr
pop
pop
cs
jo
lahf
sbb
scas
mov
cltd
cmpsb
or
adc
dec
nop
jge
popl
lret
sub
icebp
call
jp
addl
cltd
xor
xchg
gs
loop
js
movsb
mov
pusha
xor
mov
scas
jne
ret
jae
push
sbb
fwait
mov
cmp
in
push
cltd
int
pop
xchg
subb
xor
dec
xchg
fisttps
push
sub
mov
cwtl
into
mov
lds
or
sar
int
push
inc
sarl
mov
jnp
sti
sub
pop
aad
js
rcrl
cmpsl
mov
jle
push
aad
jl
in
ljmp
and
cld
lret
rol
out
cld
sbb
push
lret
in
int
sti
dec
mov
mov
into
int
test
daa
in
jne
jg
mov
jle
push
add
xor
ljmp
andb
hlt
mov
lock
leave
pop
add
inc
cld
test
ljmp
stos
cld
cmp
int3
lahf
mov
addl
scas
in
cmp
in
dec
ja
testl
aad
xor
and
mov
push
lods
and
fistpl
and
mov
pop
sub
cwtl
jl
or
sub
or
iret
pop
call
mov
addb
lcall
stos
cld
insl
and
and
iret
test
repnz
add
sub
jns
mov
leave
add
add
lods
das
sbb
inc
sahf
pop
jge
fisttpl
flds
loop
ja
jbe
cld
jp
pop
daa
dec
and
icebp
fwait
cmp
adc
inc
ficoml
jnp
push
inc
and
scas
add
dec
sub
sbb
sub
ljmp
sub
daa
jge
jae
fidivrl
sub
rclb
mov
int
lods
das
call
mov
scas
lret
or
cmp
imul
das
dec
dec
mov
cs
adc
adcb
sbb
sub
mov
xchg
lods
jo
sbb
in
add
pop
fwait
js
sbb
xor
lods
jmp
push
xchg
mov
fcompl
xor
jb
shl
sub
dec
adc
lret
lahf
cmp
cld
xchg
scas
mov
ret
in
out
sti
out
pop
xchg
sahf
xchg
mov
mov
jl
rolb
mov
mov
sub
xor
lds
mov
je
sbb
lds
or
mov
loop
adc
nop
cmp
pop
sbb
dec
xchg
rclb
push
mov
mov
lret
lret
xchg
test
in
or
or
std
imul
insb
and
imul
lcall
xor
inc
mov
out
sub
faddp
test
mov
push
or
decl
jno
aas
xchg
arpl
mov
sbb
pop
je
dec
dec
jno
and
aad
mov
and
in
sbb
inc
mov
xor
mov
xchg
push
xor
jg
jl
mov
icebp
std
pop
or
or
sub
or
ret
mov
lea
and
xchg
leave
mov
xor
mov
add
or
scas
loop
xchg
push
inc
mov
and
pop
jns
mov
fdivr
test
or
ljmp
mov
xor
mov
adc
les
xorb
mov
push
sbb
arpl
outsl
out
cmpsb
fwait
push
xchg
sbb
ljmp
xchg
sub
and
or
and
inc
dec
xchg
mov
addb
stos
test
sbb
jo
push
dec
mov
push
testb
or
jg
jge
ja
jmp
out
jno
push
jle,pn
cmp
cmpsb
icebp
in
fnstcw
jne
pop
push
pop
out
push
jbe
into
lods
imul
ror
xor
shlb
mov
cmp
aad
cmpb
dec
dec
add
stos
nop
jecxz
adc
jbe
out
and
adc
pop
data16
mov
jno
xchg
data16
pop
adc
clc
lret
inc
mov
mov
pop
jae
insb
fs
out
xchg
push
push
xchg
dec
lcall
xchg
pop
push
mov
dec
sarb
or
add
icebp
filds
lcall
test
mov
mov
shl
dec
lea
out
pushf
adc
int
jne
lahf
scas
dec
lea
add
stos
and
pop
or
movsb
std
lahf
jmp
push
xchg
movsl
rcll
push
cli
fucomp
push
jge
fcmove
cmpsb
pop
adc
lods
pop
or
roll
adc
aam
leave
fcmovbe
fiaddl
and
mov
sbb
bound
adc
mov
lret
sbb
shl
aaa
inc
sub
mov
test
dec
dec
insb
imul
cmpsb
add
or
mov
push
testb
icebp
jo
movsb
fwait
mov
fcmovnb
movntq
jp
pop
data16
outsl
or
insl
std
mov
bound
out
jno
frstpm(287
loope
cltd
sub
push
fildll
fmul
add
cmpsl
sub
sahf
and
sub
jae
add
lret
lods
mov
push
out
or
mov
cmp
clc
fwait
stos
daa
rcl
pop
mov
pop
fwait
adc
pop
xchg
adc
not
sub
ss
lea
cmp
mov
cmp
ret
ret
rolb
int
std
mull
dec
jle
cmp
movsb
in
les
mov
into
adc
lods
push
ror
insb
sbb
mov
stos
sub
dec
jp
xchg
mov
xchg
fwait
insb
cmpsl
jbe
inc
cmpsb
xchg
mov
ja
sti
mov
ljmp
xor
int3
popa
mov
pop
gs
pop
fcomp
sub
and
js
push
mov
mov
push
xchg
mov
jg
jae
mov
out
adc
pop
lods
aad
sub
lea
jno
insl
shll
pop
mov
sbb
jae
mov
jecxz
daa
xchg
or
clc
daa
and
repz
or
add
push
lret
test
pusha
jmp
scas
ja
pop
insb
add
jnp
dec
rcrb
adc
scas
sti
in
pop
xor
and
pop
lret
cmp
mov
lret
cld
lea
push
shlb
xchg
adc
mov
mov
cmpsb
loope
leave
je
adc
mov
ret
lcall
lea
in
jp
push
neg
inc
and
or
sbb
mov
js
push
cmp
aam
xchg
sbb
aas
fisttpll
scas
roll
jns
insl
lret
aas
aas
xchg
pop
push
mov
pop
fdivs
bound
mov
xor
aam
movsb
pop
pop
lcall
jne
aas
jle
sarb
out
adc
jge
push
pop
icebp
popa
sbb
nop
push
add
int
insb
jge
sahf
mov
fisttps
out
std
xchg
push
pop
lods
sahf
int3
mov
imul
adcb
cs
loopne
outsl
loope
sbb
inc
outsl
pop
lahf
pop
adc
adc
inc
sub
mov
or
std
das
cmp
ds
cld
lea
pop
jnp
adc
jl
ja
push
inc
int3
popa
in
je
and
mov
arpl
jl
test
jo
mov
cmpsb
aaa
ss
mov
shrb
ljmpw
cmpsb
loop
das
or
mov
scas
idiv
xchg
lea
lds
mov
stos
mov
sub
push
mov
movsl
sbb
jnp
mov
ss
scas
sahf
inc
lcall
sub
or
inc
int
adc
adc
cmp
ret
sahf
out
cmpl
jmp
mov
add
arpl
stos
add
pop
adc
push
stc
and
fnstcw
dec
xchg
and
sub
push
iret
outsl
in
inc
cmp
ror
sub
ljmp
shlb
lret
loop
cmp
mov
icebp
jo
dec
jp
faddl
xor
call
mov
sub
dec
lods
xor
iret
ds
push
xchg
and
jp
mov
pop
arpl
adc
lods
call
mov
pusha
loope
sbb
xchg
sarb
add
movsl
loop
or
pop
push
fwait
or
mov
sti
jnp
jle
sub
or
cmp
iret
leave
inc
fwait
shll
mov
movsb
push
pop
sub
mov
stc
shl
xor
xlat
mov
mov
notl
adc
in
inc
add
push
jne
js
lahf
xor
or
popa
and
or
pop
movsb
mov
pop
pushf
xlat
jb
std
lods
push
fwait
xchg
leave
sub
sbb
inc
mov
aam
mov
pop
sub
mov
pop
or
jnp
fisttpll
xchg
popf
sbb
aad
enterw
pop
fisttpll
pusha
xor
repnz
mov
shrl
fdivrp
out
push
inc
dec
imul
adcl
enter
adc
fnstenv
push
rol
loop
insl
rorb
call
into
cmp
push
xor
push
jne
sub
sbb
sub
loop
cmp
insb
das
mov
mov
pop
push
mov
sub
mov
test
das
fst
les
push
aaa
push
enter
xchg
mov
dec
cmp
cmpsl
pop
mov
pop
call
lret
test
jnp
and
es
jae
xchg
sbb
add
push
pop
icebp
pop
popa
pop
imul
cmp
push
loopne
xor
or
jns
pop
sbb
out
sbb
dec
pop
xchg
mov
negb
sahf
push
or
push
stc
mov
sub
mov
je,pt
lcall
pop
fnsave
and
stc
xchg
cmpb
dec
jno
xchg
push
xchg
test
inc
adc
add
xchg
dec
in
daa
adc
mov
clc
mov
sub
push
sub
and
xchg
mov
mov
jns
cmp
add
or
lds
mov
pop
in
bnd
test
push
inc
sub
dec
mov
xor
xorb
movsl
test
in
add
mov
jnp
sahf
lods
ljmp
pop
xchg
jle
hlt
jne
xchg
fldenv
int3
loop
xchg
idivl
das
push
dec
lods
sbb
push
add
mov
addr16
popf
push
push
cmp
movsl
je
notb
fwait
ret
dec
dec
jb
sbb
filds
fidivs
mov
jle
push
pop
push
cmp
iret
xchg
sbbb
lcall
and
inc
jae
and
sbb
mov
fstps
fs
test
fs
push
dec
xor
mov
out
iret
les
jmp
imul
or
mov
mov
sub
fs
jg
cmpsl
loop
jno
in
jae
shrb
mov
xchg
mov
xchg
push
and
cmp
popa
icebp
aam
pop
lock
mov
scas
movsb
sbb
xor
roll
ja
fsubrs
nop
mov
sbb
inc
cmpsb
fsub
aam
lret
cli
pop
jns
je
inc
dec
rcr
jne
mov
repz
imul
lret
adc
insb
xchg
mov
jbe
xchg
add
roll
aad
into
sub
xchg
mov
jecxz
in
cltd
xor
pop
mov
mov
inc
or
lods
not
aad
imulb
arpl
sbb
mov
cmpsl
cmpsl
loopne
fld
outsl
pop
push
mov
orb
cpuid
pushf
pop
aad
sbb
dec
dec
or
scas
push
jne
test
leave
jl
ficompl
popf
adc
in
clc
xchg
mov
push
add
xchg
ret
inc
pusha
xor
mov
pop
or
mov
sub
test
aaa
jmp
lods
shl
cwtl
cld
pop
xchg
scas
sbb
add
je
aaa
mov
or
mov
shrl
addb
ficomps
ljmp
mov
fdiv
es
push
or
inc
jo
es
lahf
sbb
idivl
ss
dec
shll
sbb
fdivl
stos
sbb
cmpsl
in
add
test
xchg
popa
lock
mov
push
inc
dec
repz
mov
sub
test
popa
arpl
add
add
pop
xchg
sbb
inc
sbb
sub
movsb
jecxz
mov
inc
jne
and
aas
mov
jmp
popf
inc
subb
fidivrs
jb
ljmp
aaa
ss
dec
push
cmp
add
or
xchg
test
ds
pop
rcll
sbb
xor
jnp
inc
lret
pop
enter
and
cwtl
xorb
test
ret
pop
lods
in
inc
pop
xchg
mov
outsb
cmpsb
call
cmp
notb
add
js
xchg
sub
leave
sbb
sbb
push
xor
add
pop
lods
push
addr16
mov
xchg
mov
outsl
repz
mov
call
mov
movsl
jg
pop
mov
out
cmpsl
stos
loop
insb
pop
ds
mov
xchg
mov
fdivrl
scas
mov
cwtl
lods
inc
cmp
inc
fwait
or
sbb
lret
int3
xchg
clc
mov
outsl
xor
in
cmp
push
xchg
lods
mull
repz
cmp
push
outsl
cmpsl
xchg
loop
nop
xor
cmp
sub
ss
or
lcall
cltd
movsb
iret
xchg
adc
lods
scas
adc
in
pop
loope
lds
xor
pop
add
ja
cmpl
jp
mov
sub
jge
mov
pop
fst
rcr
pop
add
push
int
mov
pop
add
sub
fcmovnb
push
jl
push
jp
repz
pop
sbb
push
lock
jl
xchg
inc
lock
mov
cmp
push
daa
aas
mov
movsb
or
inc
nop
iret
scas
pop
push
mov
mov
dec
push
xchg
nop
leave
loop
adc
leave
or
push
ds
mov
testl
jecxz
mov
shrb
cmp
ljmp
gs
cmp
fnstcw
stos
aaa
push
iret
add
test
and
cmp
mov
pop
dec
fnsave
xchg
sbb
fldenv
xor
inc
mull
int
out
push
hlt
xchg
movsl
jae
cmp
inc
aaa
loop
jge
mov
mov
xchg
sub
jle
lahf
ret
pop
xor
data16
cmp
sbb
sub
cld
xchg
mov
lret
sbb
jg
repz
sbb
pop
jae
ret
loope
xchg
mov
daa
mov
ret
daa
imul
adc
bound
js
sbb
mov
hlt
cmp
and
faddl
adc
add
and
adcl
movsl
mov
leave
cmp
scas
into
xor
cmp
test
int
jmp
popa
xchg
adc
push
fisttpll
gs
xchg
push
popf
jb
push
and
leave
and
je
loop
adc
jno
push
pop
dec
lret
fbld
int3
call
aam
jge
push
push
inc
in
div
sub
scas
xor
roll
mov
icebp
out
arpl
in
sub
rolb
ret
rcrb
dec
arpl
mov
jbe
in
inc
inc
nop
outsl
sub
enter
subb
ret
in
mov
mov
sbb
fnsave
enter
push
ljmp
das
imul
stc
cwtl
inc
inc
cwtl
mov
xchg
clc
cmpsb
cli
and
or
inc
cmp
mov
xor
movsb
mov
in
pop
jb
mov
fnstenv
xchg
std
sub
mov
push
test
push
pushf
inc
aas
imul
stc
add
dec
push
lock
ror
or
xchg
push
shlb
add
push
cs
mov
mov
sub
in
dec
adc
fisubrs
or
pushf
addl
into
aaa
jno
and
mov
xor
jb
pop
loopne
fimull
sbb
fadds
cmpsb
shll
sbb
fcoml
rorl
ljmp
jg
mov
dec
in
inc
pop
fs
push
ljmp
daa
jmp
xchg
fisttpll
shll
push
adc
or
pop
sbb
jnp
cmp
sarb
pop
iret
pop
fbld
sbb
and
cmc
inc
stos
cmp
ja
insb
lret
lds
sti
xor
adc
mov
mov
aam
pop
mov
cld
into
pop
jg
dec
inc
in
cmp
cli
test
add
sub
aas
push
js
and
jae
lret
fimuls
xlat
outsl
in
aas
rclb
pop
mov
mov
lea
and
pop
imul
dec
ret
sbb
into
push
dec
das
inc
dec
xor
cmp
mov
inc
arpl
filds
cmp
ret
sub
in
ret
mov
push
int
bound
data16
mov
aas
mov
add
call
xchg
loope
cli
test
pop
mov
fistl
or
mov
stc
cmpsb
dec
or
push
pop
add
mov
sub
adc
sbb
sti
jne
cmp
movsb
pop
repnz
xor
sub
fistps
mov
sti
cmc
push
outsl
lock
lock
pop
xchg
in
xchg
mov
or
test
xor
mov
sub
mov
and
into
imul
pop
cmpsl
push
sti
roll
popf
ja
adc
insb
fidivrs
adc
mov
fdivs
rcl
sbb
push
les
dec
std
mov
jg
cmp
jmp
dec
mov
add
inc
dec
sub
push
mov
testl
jmp
jg
popf
and
add
xchg
pop
push
mov
inc
push
adc
xchg
outsb
mov
mov
in
repnz
inc
mov
inc
jp
pop
sbb
dec
dec
call
push
inc
lods
pop
jo
xchg
or
out
dec
lret
and
filds
ljmp
sub
int3
add
cmp
test
xlat
testb
jae
aas
hlt
insl
in
cmp
push
xchg
test
pushf
mov
gs
cmp
icebp
sub
or
lods
mov
cmp
cmp
mov
jmp
jmp
clc
pop
arpl
add
mov
pusha
push
jae
dec
and
adc
jmp
pop
stc
cmp
mov
fdivrl
loopne
flds
xchg
mov
sbb
test
sub
cmp
rclb
mov
mov
popa
fmull
push
pop
pushf
mov
sub
xor
jb
repnz
push
sbb
lahf
or
shlb
scas
pop
mov
pop
sub
xchg
jle
icebp
mov
adc
dec
mov
test
and
push
jbe
stos
movsb
pop
ja
out
sahf
add
mov
addr16
and
movsl
mov
cmpsl
push
mov
mov
nop
das
xchg
xor
psubusb
sub
push
push
jns
enter
mov
shrl
cmp
and
jl
inc
shlb
xor
iret
fldenv
insb
xchg
inc
lret
jmp
push
xchg
jl
scas
sub
xchg
jmp
pop
xlat
out
or
scas
aas
cmp
mov
mov
outsl
add
stc
sbb
imul
inc
add
shrl
xor
jg
inc
cmp
pop
nop
sub
jge
orb
xchg
xchg
daa
pop
inc
cmp
sbb
repz
pop
bound
mov
sbb
ss
jl
lods
sbb
and
imul
loop
in
mov
sub
pop
mov
mov
leave
popf
dec
imulb
mov
popf
sbb
sub
dec
dec
jle
dec
pop
loope
add
ret
scas
scas
add
xchg
mov
aam
in
pop
xor
push
push
addr16
test
mov
fisubl
xor
adc
je
cmp
xchg
pop
int
mov
or
das
jns
xor
cltd
test
mov
divl
frstor
std
dec
daa
sbb
xor
icebp
cmp
adc
out
or
cmc
clc
popa
es
cmp
mov
mov
in
mov
cli
out
and
dec
push
flds
icebp
andb
insl
inc
dec
movsb
repnz
inc
inc
cmp
dec
jg
ficoml
inc
idivl
add
add
and
rcr
mov
mov
call
cli
push
dec
rcrb
push
mov
fiadds
fucomp
xor
out
xchg
mov
cmpl
mov
fdivrp
jns
sub
mov
inc
dec
mov
dec
cmpsb
inc
dec
mov
cmpb
push
jo
loop
cltd
lds
jb
jno
push
in
mov
cmc
pop
gs
movsb
ret
pop
mov
pop
xchg
xchg
in
mov
mov
stos
push
and
sbb
lock
xchg
cmc
ror
sbb
std
and
sub
pop
mov
mov
push
cmc
cli
aad
pop
pop
sarb
mov
dec
and
pusha
push
iret
and
subb
or
daa
and
cli
and
stc
vmovlps
xchg
cmp
stc
push
fdivl
shrl
js
int
adcl
push
dec
xlat
call
cmc
add
xor
pop
adc
dec
loope
mov
jge
or
inc
inc
add
test
dec
mov
enter
dec
int3
loope
mov
pop
inc
add
pop
adcb
cmc
pop
and
push
cmp
shrl
cmp
or
cmp
and
push
sbb
arpl
adc
or
xchg
lods
stos
ja
mov
adc
xor
push
jecxz
aad
mov
stos
out
mov
jecxz
das
subb
dec
cmpsb
xlat
mov
sahf
sub
sub
call
sti
mov
ficomps
sbb
es
scas
dec
popl
test
add
push
dec
call
dec
mov
mov
jle
pop
mov
mov
test
stos
clc
push
fsubrp
imull
xlat
push
into
inc
mov
clc
dec
insb
loopne
push
mov
mov
sub
xchg
in
mov
rcrb
mov
cmpsb
cmp
xchg
jo
xor
and
cli
mov
mov
lods
jno
jnp
mov
mov
pop
std
sub
or
pop
je
mov
repnz
notb
rorb
adc
push
cmp
fldenv
ljmp
stos
pusha
pop
insl
dec
jns
pushf
mov
jae
lret
lods
pushf
movsb
sbb
mov
jp
pop
sbb
sbb
fstcw
sbb
xchg
inc
ret
jbe
and
xchg
stos
ret
sub
icebp
adc
mov
rcrl
ret
mov
xchg
fsubrl
xchg
add
adc
mov
fwait
sbb
addr16
add
loop
mov
inc
jge
jae
sbb
int3
sbb
sub
mov
mov
mov
subb
sub
mov
xor
dec
out
jg
sahf
adcb
insl
out
mov
insl
insl
lret
and
je
mov
inc
dec
test
sub
shrb
mov
cmp
pop
sti
mov
pop
popf
incl
xor
cmp
inc
add
pusha
std
cmp
jns
mov
out
out
dec
xor
jle
cmp
jne
xlat
add
into
gs
inc
and
adc
and
leave
lcall
pop
push
movsb
jecxz
ss
push
cli
xorps
sbb
cmp
lcall
sbb
jne
test
add
mov
fnsave
push
push
fisubl
sbb
out
cmp
cmp
repz
imul
push
push
inc
adc
mov
jle
push
lods
shll
or
fs
jne
jg
inc
inc
mov
aad
push
faddl
call
gs
pop
mov
jp
add
jnp
into
nop
add
and
lea
cmp
test
es
jle
repnz
jle
insb
or
fwait
xchg
jecxz
add
mov
or
push
stc
xor
push
add
sahf
shlb
out
ret
ret
sahf
jnp
sub
jnp
lcall
aam
and
cld
aad
cli
adc
frstor
sbb
cmp
and
cs
push
xchg
lds
and
xlat
outsb
hlt
cvttps2pi
and
shrl
outsl
test
add
sti
push
sbb
fstpl
outsb
loop
outsl
mov
xor
mov
stc
cmpsb
jmp
sub
xchg
shlb
cmp
sbb
daa
enter
dec
inc
pop
inc
in
enter
call
std
shrl
dec
not
cmpl
adc
icebp
aaa
loope
test
pop
scas
daa
fucompp
sbb
cmp
idivl
popa
jb
xchg
scas
pusha
je
lods
adc
in
xchg
out
mov
sbb
cwtl
dec
cld
insb
test
pop
inc
adc
neg
jge
inc
lahf
imull
aas
mov
mov
mov
repnz
out
add
add
subb
sub
push
mov
dec
mov
xor
shlb
xchg
lret
mull
jmp
ret
mov
test
pop
loope
lock
std
mov
fucom
out
pop
push
sarb
sub
in
ret
xchg
icebp
fsubs
or
pop
add
mov
mov
and
dec
adc
cmp
loopne
notb
in
inc
fbstp
or
push
mov
jle
and
push
push
push
lret
int3
push
rcrl
adc
mov
push
jno
addb
sub
leave
iret
inc
push
in
es
xchg
aam
pop
test
xchg
imul
mov
outsb
inc
std
movsl
cmp
xchg
sub
outsb
cli
stos
cli
clc
xor
in
or
sub
mov
dec
jb
fucomip
fisttpll
in
jae
jbe
dec
popf
sub
mov
arpl
jbe
rcr
adc
lahf
xchg
sbb
into
testb
mov
aas
ret
xchg
push
cmp
fidivrl
fs
hlt
mov
adc
and
cmc
insb
lcall
push
stos
xchg
push
xchg
add
shll
add
stos
mov
mov
in
sarb
jb
shrl
outsl
out
test
push
lahf
repz
cmp
sbb
jl
mov
jo
lcall
ret
mov
jne
sbb
inc
imull
cmp
cltd
jnp
ljmp
pop
int
imul
push
insb
lret
fsubr
call
fiaddl
in
gs
xlat
jo
add
sarb
xchg
imul
std
dec
outsb
loop
out
in
fbstp
mov
in
xor
incb
popa
xchg
fdivp
inc
xchg
std
xchg
test
lcall
mov
push
in
mov
cmp
data16
lock
in
mov
stc
ljmp
icebp
hlt
jbe
stos
xchg
inc
scas
push
pop
outsl
or
sbb
sbb
imul
std
testb
pop
mov
addb
scas
xor
and
mov
lods
dec
inc
hlt
cld
jb
incl
xor
iret
mov
inc
xchg
movsl
adc
inc
nop
push
rorl
repz
xchg
decb
sahf
mov
insl
xorb
mov
cmp
push
arpl
roll
xchg
cmp
imul
aam
test
pop
cmp
fwait
xchg
data16
adc
mov
xor
jns
fdivrs
jmp
fimull
mov
fstps
ret
lods
jmp
ja
js
testl
jge
mov
fnstsw
ds
insb
inc
sub
scas
mov
xor
xor
iret
adc
sub
das
or
pop
mov
faddl
sbb
loop
dec
xor
popa
push
add
inc
sub
iret
dec
mov
insb
fdivr
xchg
fwait
cmp
aaa
sub
push
push
cmp
lret
xor
jl
pop
aaa
pop
ja
sub
int
pusha
push
cmpb
int
ljmp
cmpsl
lds
push
pop
ret
outsl
imul
iret
pop
push
or
mov
js
jle
sahf
loop
mov
ret
loop
das
dec
out
cmp
adc
aas
mov
cmpsb
js
mov
add
imulb
insl
rorl
fs
and
hlt
dec
lret
jecxz
mov
mov
dec
imul
pop
sbb
mov
add
fwait
shlb
cmp
cmp
mov
fbstp
enter
mov
ret
dec
mov
sti
cmp
rcll
lds
jge
or
mov
push
jbe
sbb
push
adc
adc
jmp
mov
aad
ret
and
and
push
loope
loop
inc
and
push
out
pop
movsb
mov
addr16
cmp
test
call
adc
push
std
add
xor
inc
mov
dec
adc
lret
in
icebp
lods
repz
jg
sbb
cs
mov
inc
push
subl
cmpsl
mov
lods
negl
and
int3
mov
push
ja
stos
jb
push
cmc
adc
dec
push
xchg
lods
cmp
or
cmp
int
add
mov
dec
test
sahf
jg
stos
and
mov
popa
sbb
jae
scas
push
cld
mov
xchg
subb
sub
stos
dec
out
push
mov
jge
mov
dec
aad
fwait
mov
adc
xor
insl
and
clc
inc
xchg
jb
mov
aas
in
jnp
xchg
test
shll
negl
shrl
mov
and
lret
cmpb
and
inc
jnp
push
pop
nop
loope
int
stos
insb
jb
out
dec
inc
mov
shl
or
inc
cmp
cld
scas
testb
lahf
jne
and
jl
cmpsb
ss
or
jl
adc
xchg
daa
and
mov
cltd
dec
ja
mov
or
mov
in
addl
inc
mov
mov
and
adc
adc
push
xchg
pop
push
insb
dec
popa
push
cwtl
mov
jo
dec
sub
popa
sub
repz
xor
std
cmp
fisubs
fucom
dec
or
xchg
lods
cmp
sbb
sti
mov
or
dec
add
rorb
icebp
mov
fnstenv
aam
and
jb
cmc
jecxz
adc
xchg
jge
scas
xor
jge
sub
adc
mov
inc
sub
xlat
cltd
mov
jg
lcall
test
adc
pop
fnstenv
push
int3
sbb
mov
jb
movsb
and
sbb
mov
addr16
mov
push
cmp
mov
les
test
mov
iret
test
nop
aaa
loope
iret
test
adc
popf
shlb
out
push
push
or
andl
movsl
repz
sbb
mov
mov
add
lahf
in
iret
repnz
mov
add
xchg
jo
cmp
aaa
cmc
sbb
bound
stos
les
jns
stos
test
push
lea
mov
pop
mov
and
ljmp
push
inc
jl
jae
jmp
pop
arpl
test
dec
dec
hlt
lret
xor
pop
lret
pop
shlb
pop
mov
xorb
lcall
mov
cltd
pop
mov
hlt
shll
bound
or
xor
mov
fisubs
jmp
or
add
daa
sarl
cwtl
jno
xorl
lret
andb
or
sub
and
jp
or
mov
aaa
xor
or
mull
push
push
fs
xor
ja
jb
out
stos
pop
xorb
sbb
movsl
mov
daa
adc
pop
mov
dec
adc
inc
mulb
rclb
sub
fcomi
cmp
call
mov
aas
xor
iret
and
cmp
push
shll
mov
xor
sti
and
gs
xchg
push
aas
addr16
cmp
fwait
adc
outsl
mov
cmpsb
ss
fisttps
inc
sbbl
or
test
mov
aas
xchg
xor
dec
and
cmp
jae
pushf
push
xor
mov
jl
cmc
out
dec
pop
add
xchg
in
dec
fwait
push
dec
mov
std
mov
inc
or
rclb
jo
or
scas
sbb
stos
shll
imul
ja
outsl
repz
add
sub
ret
xor
pushf
fildl
mov
inc
jne
jo
into
adc
in
or
mov
es
pop
nop
cs
xchg
sbb
iret
adc
mov
insb
dec
push
sbb
icebp
cmp
loopne
out
cmc
push
pcmpeqd
sub
dec
enter
movsb
cmp
inc
push
sbb
es
sbb
inc
add
or
bound
dec
cli
push
into
je
and
sbb
sbb
adc
clc
jl
enter
mov
bound
pop
cltd
repz
or
ret
fnstsw
xor
pop
sbb
lahf
std
dec
les
mov
inc
popa
xor
cwtl
push
mov
lcall
adc
pop
jle
scas
call
sbb
mov
or
jne
and
pop
sbbb
inc
icebp
scas
cmp
dec
lcall
bound
push
jge
in
rclb
sbb
cmpsl
sub
rcpps
sbb
add
in
inc
fidivl
sbbl
ds
cmp
push
or
movb
cmpb
scas
rcl
out
outsl
insl
shrl
jl
stc
sbb
cmp
bound
mov
or
call
pop
clc
sub
mov
jmp
shlb
or
pop
lret
add
arpl
ja
daa
test
test
leave
imul
xor
push
in
loopne
mov
inc
imul
jecxz
jo
fistpll
fsts
inc
push
cmpsl
insb
mov
sahf
inc
cwtl
loope
ljmp
sbb
cltd
cmpsl
cs
loopne
jl
push
shlb
inc
pop
jns
cmp
gs
xor
out
aad
ljmp
insb
dec
orl
cmpsb
stos
mov
vmptrld
mov
add
inc
mov
or
icebp
mov
movsb
xor
movsb
push
xchg
pop
gs
out
dec
sarb
adc
add
dec
es
push
sbb
fisttps
mov
xor
xchg
xor
pop
jge
push
xchg
clc
fcmovne
inc
mov
sub
cld
sahf
dec
inc
sub
imull
out
scas
lds
lds
sbb
pop
cli
xor
loopne
mov
dec
add
shll
push
addb
cmpb
popf
frstor
add
scas
loope
shr
mov
andl
jle
pushw
ljmp
cmp
and
xor
xchg
arpl
test
test
repnz
push
mul
cli
sub
aad
mov
ret
fisttpl
rcrl
lods
sub
xchg
mov
sub
test
xchg
and
or
aaa
shll
daa
push
js
ret
xchg
mov
out
pop
and
addr16
adc
gs
jns
scas
pop
mov
inc
scas
mov
mov
pop
leave
push
iret
dec
dec
iret
pop
pop
dec
mulb
push
fbstp
jg
cmp
lret
xor
inc
sub
sbb
xor
cmp
sbbl
add
nop
jmp
xchg
sub
xchg
mov
insl
popf
sahf
sub
imul
daa
fisubs
adc
xor
jecxz
outsl
pop
in
xchg
mov
add
jg
movsl
fs
psadbw
push
dec
and
aaa
jecxz
mov
jb
dec
arpl
xor
subl
bound
xchg
jmp
add
insb
daa
das
dec
inc
pop
cwtl
popa
test
xchg
pop
jae
pusha
push
mov
imulb
mov
movsl
in
mov
fs
imul
out
xchg
jb
icebp
je
jne
jb
inc
ds
jne
or
mov
mov
les
mov
xchg
mov
sub
jo
arpl
popf
insl
bound
int
out
into
sbb
xor
push
icebp
cli
pop
push
or
dec
dec
clc
add
push
sub
mov
jo
std
dec
sub
fucomip
add
mov
mov
les
dec
pushf
in
cmp
cltd
test
jg
lods
std
out
xchg
cmp
mov
cmp
jno
je
mov
fwait
int
pop
push
enter
jns
test
cwtl
in
xchg
lods
inc
push
sbb
jbe
loopne
es
mov
aam
xor
mov
mov
push
cs
test
shll
cltd
and
mov
mov
xlat
sahf
dec
xor
push
jl
jns
and
pop
outsl
jp
dec
xor
pop
inc
fstl
movsb
sbb
xor
ficompl
imul
xchg
pop
push
jns
mov
cltd
lods
ret
sub
inc
xchg
mov
cwtl
fstpl
push
jne
mull
mov
add
lcall
inc
sub
mov
fcomip
pop
mov
jp
inc
mov
call
aas
sti
das
sub
jl
xchg
mov
rol
xchg
sahf
adc
mov
bound
jae
and
sub
cmp
dec
sub
or
mov
mov
aaa
push
mov
adcl
sub
das
mov
or
stos
aaa
shll
push
aam
cltd
inc
cli
inc
cmp
mov
lret
repnz
cli
pop
and
xlat
adc
xor
and
jb
imul
mov
push
sub
push
cltd
push
outsl
add
add
jb
xchg
mov
push
xchg
stos
cmp
mov
repnz
adc
scas
sahf
cltd
sahf
notb
fbstp
sbb
in
movsl
jnp
sbb
lock
adc
out
les
push
mov
push
mov
push
sub
mov
ret
adc
or
inc
insb
test
flds
flds
pop
arpl
add
fisubrs
dec
cmp
inc
jnp
xor
test
es
in
loope
pop
push
inc
xchg
jo
rorl
cltd
outsb
inc
clc
addr16
outsl
stc
jnp
pop
jb
jnp
sbbb
test
inc
xchg
sub
lret
or
cmpsb
outsb
mov
enter
mov
mov
and
clc
push
scas
icebp
shlb
not
hlt
mov
mov
ret
jg
dec
sbb
mov
jge
and
push
fiadds
dec
cmp
nop
adc
inc
jl
push
cmpb
mov
pop
cmc
mov
and
testl
jmp
dec
es
xor
sahf
in
pop
test
dec
fcomi
xchg
jns
add
out
add
and
getsec
testb
sub
outsb
bound
jmp
shrl
sbbb
xchg
push
loopne
lods
dec
andl
shll
aad
insl
rclb
pushf
push
in
push
or
push
mov
dec
and
xchg
outsb
jge
jnp
popa
sbb
jg
fiaddl
xlat
icebp
push
jbe
jns
mov
inc
mov
leave
xchg
pop
xor
jb
shlb
push
lods
jne
insl
jmp
lahf
jg
and
data16
test
mov
xor
sub
add
xchg
outsl
lea
xchg
popf
inc
sbb
in
xchg
pop
test
test
sub
pop
fbstp
mov
out
push
jmp
jl
test
sti
lret
pop
mov
push
scas
fimull
mov
pusha
aam
movsl
lret
roll
cld
aam
add
mov
mov
or
cld
fs
sbb
adc
test
mov
and
cmpsl
pop
mov
and
lods
fdivrl
and
inc
movsl
sub
jle
in
xor
movsl
dec
mov
fdivrs
test
jge
movsl
mov
adc
stos
sub
in
mov
cmp
and
fs
pop
lahf
mov
icebp
test
add
lret
jno
mov
push
outsb
sbb
jl
add
push
jno
adc
adc
xchg
mov
int
push
popf
cmc
xchg
jl
cmp
adc
pop
fwait
out
inc
gs
dec
cmpsb
jmp
mov
mov
shll
mov
loop
roll
lea
imul
clc
in
pop
fidivrs
pop
sub
push
lahf
lock
mov
pop
dec
in
cmp
ss
repnz
lock
in
movsb
adc
gs
cld
jb
sarb
xchg
cld
jl
ds
adc
inc
stos
dec
cli
lods
cltd
mov
cmp
sbb
jne
add
mov
repz
jae
mov
adc
test
mov
xchg
sbb
xchg
pushf
pop
lahf
xor
sub
fwait
pop
sub
add
mov
ficoml
fdivs
sub
or
cmpsb
negb
jmp
jbe
mov
or
addr16
mov
mov
enter
bound
xor
fs
xchg
mov
lcall
xchg
inc
pushf
mov
cmpsl
mov
inc
push
mov
dec
lds
push
cs
std
hlt
mov
sti
les
stos
testl
mov
cmp
mov
ss
imul
fbld
add
dec
xchg
xor
xchg
xchg
mov
in
shrb
jo
mov
outsb
add
sub
push
add
rclb
int
sbb
bnd
mov
xor
faddl
pop
cltd
inc
movups
or
aad
mov
out
push
inc
negl
sbb
jb
sub
imul
sbb
mov
dec
aad
out
jge
insb
into
jecxz
and
stos
sbb
mov
test
sbb
xor
inc
pop
cmc
pop
ja
add
pop
outsb
jno
push
out
and
outsb
xor
stos
sti
mov
repnz
pop
stos
push
xchg
scas
insl
and
ds
dec
ds
sub
std
or
or
adc
inc
subb
push
jl
mov
push
clc
leave
int3
into
jae
stc
gs
in
mov
xchg
mov
sti
mov
dec
jns
stc
mov
mov
lcall
ljmp
loop
fcompl
aam
loope
pop
and
stc
sbb
shl
cmp
jge
jecxz
ja
gs
pushf
jno
dec
cmpb
dec
testl
icebp
lret
aam
push
mov
xor
addr16
jl
and
popf
lret
or
ja
insl
xor
out
cmp
sarl
jp
into
fldenv
and
push
mov
adc
data16
jbe
cmp
sbb
jne
ljmp
lds
adc
lods
inc
pop
or
je
push
mov
xor
cmp
and
mov
push
jle
push
lods
rcrl
mov
addr16
push
push
dec
mov
cmp
xchg
pop
es
jo
adc
jnp
imul
test
cmpsb
mov
pop
loopne
repz
aad
mov
jne
sub
test
mov
mov
iret
sub
pop
rorl
in
or
add
nopl
sti
cmp
xorl
mov
add
adc
xor
jge
cld
cwtl
adc
mov
and
and
jne
and
fwait
pushf
cmp
pop
pop
xchg
lock
outsl
pop
or
push
dec
xchg
loope
inc
cmp
std
dec
test
sahf
mov
int3
cld
aad
call
int3
enter
std
push
ret
inc
xchg
out
xchg
pop
dec
cltd
pop
test
or
mov
ret
out
fwait
mov
adc
jmp
push
data16
dec
adc
movsl
je
dec
add
lods
mov
sub
bound
leave
dec
aam
push
jne
sbb
jmp
stos
inc
mov
imul
mov
push
add
sub
out
loop
scas
sbb
inc
push
xchg
sub
ffree
sbb
mov
inc
iret
notl
dec
loopne
lds
mov
imul
xchg
sti
adc
mov
jle
jno
push
and
lret
adc
push
sti
enter
pop
subb
lret
and
pop
or
xor
mov
addl
outsl
pop
mov
cli
das
in
imul
push
pop
fisubrl
mov
cmp
out
jno
cli
add
cli
pop
ja
adc
pop
mov
add
movsb
ret
lahf
jmp
aad
dec
and
adc
lcall
push
sbb
scas
mov
dec
sahf
shll
add
inc
sub
push
push
ret
rcrb
mov
or
mov
mov
pushw
divl
nop
add
gs
rcll
inc
or
inc
mov
push
lds
add
dec
popf
test
inc
in
jo
es
jb
adc
pop
or
jae
pop
sub
and
add
push
inc
sbb
sub
roll
pop
stc
push
pop
pop
cwtl
das
fbstp
mov
subb
out
js
mov
pop
ljmp
cmp
mov
movb
inc
je
pop
xchg
jp
imul
fistl
into
sbb
adc
and
dec
sbb
aaa
in
stos
fisttpl
xlat
inc
push
push
sahf
mov
es
cmpsb
loop
int
push
je
daa
pop
mov
pusha
add
jae
ljmp
sbbl
mov
adc
jnp
xchg
ret
out
jo
sub
pop
cmp
inc
in
leave
hlt
mov
or
mov
jmp
dec
inc
bound
adc
and
jne
rcl
lock
adc
dec
ss
popa
xlat
xchg
sbb
nop
mov
ja
xchg
in
or
mov
ficomps
in
add
dec
push
push
enter
push
xor
mov
ljmp
cmpsl
mov
insb
adc
ja
int
mov
pop
dec
fisttps
or
dec
call
lock
jle
imul
out
cmc
mov
stc
cli
xchg
mov
cmp
dec
add
lock
sahf
movsl
fistpll
sbb
int3
mov
cmpl
pop
popa
test
out
sub
repz
shrb
jmp
mov
jg
xchg
push
xlat
or
pushf
xor
mov
mov
lods
push
sti
sbb
out
fistps
cmp
sub
add
sub
sarb
cmp
daa
popa
sbb
mov
pop
push
imul
out
mov
and
lds
inc
xor
mov
adc
add
jae
outsl
jle
test
test
das
mov
add
mov
scas
push
mov
popf
cltd
push
dec
stos
xchg
mov
cmc
and
pop
je
add
xchg
jecxz
mov
xchg
mov
addb
mov
int3
pop
in
aad
or
jno
cmpsb
push
dec
cli
in
xchg
mov
push
pop
and
fimull
push
push
outsl
iret
decb
cmp
adcl
jmp
out
mov
je
rcrl
or
adc
sub
add
hlt
call
mov
or
xor
push
pop
pop
jp
sub
mov
subb
sub
xchg
ljmp
jle
inc
xor
mov
push
mov
stc
jmp
mov
pop
inc
movb
out
out
fistps
mov
cmp
adc
mov
int
out
and
add
jno
loope
mov
dec
aam
adc
data16
add
dec
dec
xchg
pop
mov
test
xchg
in
scas
xchg
in
and
xchg
adc
cmp
in
xor
mov
mov
lods
aad
scas
rclb
mov
cld
ss
aas
xor
rol
jb
mov
movsb
into
inc
and
cmp
push
and
mov
mov
subl
adc
pop
stc
lods
es
mov
ficomps
push
pushf
mov
push
insb
shl
jecxz
stos
and
out
enter
mov
xor
push
mov
icebp
adc
insb
lock
mov
cmc
and
sbb
push
xchg
dec
inc
pop
pop
mov
fldcw
in
out
and
jne
icebp
int3
mov
daa
sbb
cld
xchg
mov
push
hlt
rcrl
pushf
cmp
in
pop
repz
inc
inc
aaa
pop
mov
pop
mov
jl
jne
sbb
imul
das
popa
jp
push
shll
sub
je
popa
sbb
dec
aaa
jbe
mov
orb
decb
insb
cmp
out
insl
out
and
inc
int
or
dec
mov
push
sub
addr16
jmp
jno
test
cmp
popa
or
nop
jg
jno
pop
push
push
push
dec
pushf
ret
jge
loopne
stc
xor
bound
xor
pop
cli
adc
mov
cwtl
mov
leave
xchg
xchg
or
xchg
sub
pop
mov
in
push
pop
mov
sub
inc
xchg
mov
dec
jo
mov
aad
xor
push
xor
adc
mov
adc
out
das
pop
ret
cmp
push
fists
xor
addb
mov
sbb
xor
bound
stos
cwtl
add
std
repz
jb
sub
jmp
adc
adc
mov
jb
clc
bound
mov
test
push
adc
fnsave
push
push
jbe
adc
out
lcall
pop
fcompl
dec
lods
jbe
aam
cld
jbe
dec
inc
xor
les
lea
rorl
lods
nop
pop
ljmp
sbb
jbe
test
inc
test
aas
arpl
insb
cmp
lds
mov
ljmpw
mov
fdivs
lcall
in
cmp
xchg
xchg
aam
sbb
mov
imul
mov
arpl
add
dec
and
pusha
popf
pop
jnp
push
or
mov
dec
adc
pop
ss
mov
ds
ss
testl
adcb
pop
jbe
pop
fcmovnb
leave
cmp
jmp
mov
dec
clc
movsb
mov
sbb
sahf
jmp
push
jns
addr16
jo
cld
fldcw
sbb
mov
add
decl
loop
bound
adc
add
aas
fnstsw
stos
pusha
aam
daa
les
inc
adc
cltd
sbb
sbb
pop
jb
cmp
inc
mov
push
xor
jmp
xor
mov
push
cmp
add
mov
divps
and
daa
repz
sbb
xchg
adc
ret
xor
loope
mov
mov
test
sbb
stos
sub
in
xor
adc
or
and
sub
add
mov
or
sbb
mov
inc
lds
fstpt
pop
pop
mov
dec
xchg
jl
xorl
xor
adc
pop
scas
leave
cmovno
arpl
jae
xchg
sub
xor
pop
push
pop
sahf
mov
je
inc
fwait
mov
mov
mov
loope
pop
mov
cmp
lahf
js
jnp
outsb
addl
xor
js
jmp
into
bound
lods
lret
fbstp
test
jmp
xchg
push
sub
push
std
jge
jno
sarl
lahf
pop
xor
int
adc
sub
push
and
repz
addr16
jl
mov
push
scas
adc
xor
pop
aas
add
push
lock
divl
or
mov
or
adc
inc
leave
xchg
xchg
sub
ljmp
mov
std
addl
mov
mov
adc
and
add
enter
mov
jp
xor
pop
popf
aam
pop
addr16
adc
adc
stc
sub
cwtl
xor
sub
jmp
sub
adc
mov
mov
adc
lock
subb
cmp
pop
ret
xchg
out
in
mov
mov
xchg
mov
sbb
inc
inc
bound
jp
divb
test
mov
das
sbb
int3
gs
xor
loop
fmul
rcll
shll
shrb
sbb
fsubr
addr16
mov
and
cmp
cmp
cld
ret
mov
sbb
repz
shrb
xor
jl
xor
shlb
leave
push
jp
int
sub
xchg
jbe
pushl
mov
ss
test
iret
mov
mov
daa
stc
xchg
sbb
push
mov
fucom
cmpsl
ljmp
lea
cmpsb
pop
sub
xchg
imul
mov
lods
out
jns
insb
pusha
xor
fsts
xor
xor
cwtl
push
pop
arpl
dec
insb
sarb
loope
and
xchg
negb
mov
lock
fwait
and
jg
xor
cmpl
mulb
addr16
stos
bound
addb
push
roll
adc
xlat
loope
aas
inc
mov
psubw
test
cmc
movsl
in
outsb
rcrl
cmc
pushf
scas
fcoml
sbb
sub
jns
sub
xchg
jmp
mov
int
les
or
jns
call
mov
lock
or
int
and
and
hlt
fisubrl
adc
ds
insl
push
lret
sub
lock
int
pop
out
xorl
adc
sbb
jbe
scas
outsb
icebp
leave
movsb
mov
outsl
lret
and
mov
cmp
xchg
push
out
mov
outsb
pop
mov
cld
mov
or
rcrw
mov
xchg
loope
add
dec
daa
push
xchg
psrlq
mov
lods
pop
push
and
sbb
fs
push
mov
std
and
mov
and
mov
push
push
mov
clc
fwait
xor
mov
ss
jno
inc
sub
in
jle
mov
dec
inc
popa
aas
xor
jns
cmpsb
ret
bound
out
xor
aaa
gs
mov
cli
popa
xchg
sarl
imul
leave
inc
gs
fcompl
fwait
mov
roll
mov
lcall
xchg
pop
ret
idivl
and
inc
pushf
pop
adc
push
leave
and
push
mov
pop
inc
mov
outsb
cmpsb
xor
add
pushl
std
adc
repz
inc
aam
clc
jb
aas
jbe
rorb
add
sbbb
pop
aam
cmp
sti
xor
jbe
push
jmp
xchg
mov
xchg
popf
mov
scas
mov
iret
cmc
ss
push
ss
dec
sub
insb
adc
pop
add
sub
xchg
sbb
cmpsb
daa
ss
dec
xor
scas
push
lcall
sti
jnp
lcall
adc
je
sub
das
out
xor
mov
lods
sub
test
inc
push
arpl
inc
inc
sub
cmpb
xor
xchg
rolb
fcmovu
outsl
daa
lea
repz
mov
insb
and
mov
push
lret
lahf
xchg
jl
and
pop
push
mov
in
pop
push
ret
dec
stc
dec
call
nop
das
pop
repz
cld
lock
pop
lret
cmp
fstl
js
cmpsl
jge
cli
in
mov
xor
inc
fdivr
iret
mov
lret
repnz
push
inc
mov
daa
jo
xor
fildll
cld
fistpll
stc
outsb
repnz
int3
mov
movsb
cltd
add
ret
lods
jmp
inc
out
mov
inc
jne
call
add
pop
mov
int
jp
cmp
push
imul
mov
push
lret
js
scas
inc
stos
std
cli
or
push
loopne
lcall
adc
xchg
jle
xchg
mov
lret
jp
sub
inc
dec
add
or
aad
cmp
push
adc
push
jp
bound
adc
fmuls
mov
push
mov
sarl
cmp
stos
push
push
mov
js
subl
inc
sahf
push
ret
mov
mov
lods
pop
mov
jae
push
repz
fists
xor
inc
sub
jno
aad
lea
notb
movsl
popf
cmp
xor
leave
loope
sub
sub
or
fimuls
inc
or
push
mov
loopne
sub
mov
outsl
out
roll
aad
out
icebp
sbb
fmull
and
aaa
push
js
lods
mov
imul
orb
stos
sbb
inc
pop
mov
mov
push
call
enter
ss
pop
mov
xchg
or
icebp
xchg
lret
not
lea
mov
popf
mov
mov
sbb
xchg
lods
xor
mov
pushf
sti
mov
movsl
stc
lea
dec
popf
sti
cmp
pop
mov
lds
jg
push
bound
faddl
addr16
loope
out
mov
mov
mov
out
shlb
int
lds
and
cld
test
push
lds
dec
sub
sbb
push
mov
xor
cmp
cmc
ds
sub
xchg
es
dec
aaa
std
rcr
insl
xchg
clc
aad
movsl
scas
in
decl
sub
xor
enter
xchg
rep
testb
pop
pop
lods
xor
add
sarb
adc
adc
dec
in
adc
mov
data16
cld
sbb
in
call
iret
inc
out
div
xor
loop
push
iret
std
das
in
imul
fisttpl
or
repnz
bound
adc
xlat
lock
cli
jae
insl
push
cmovno
lods
cmpsb
mov
cmp
jmp
xchg
sbb
mov
lea
xchg
sub
fadds
jnp
and
sahf
add
cmp
repz
or
jle
and
add
bnd
mov
nop
push
jne
jns
or
dec
mov
bound
mov
xor
int
loopne
mov
imul
jb
sti
std
lret
or
sub
mov
xchg
jle
inc
icebp
loop
jp
in
jecxz
ret
dec
ja
dec
mov
jecxz
mov
or
ror
cmc
or
jae
test
dec
and
inc
aaa
xchg
mov
sar
mov
aaa
push
cwtl
push
mov
negb
or
fwait
jno
jno
xor
jmp
test
cli
insb
inc
and
imul
loope
jne
outsl
mov
mov
int3
aad
sahf
mov
push
jmp
rcll
scas
xchg
sbb
sbb
mov
lcall
and
jae
jl
pop
xchg
test
test
cmc
loope
adc
fdivrl
cld
frstor
scas
pop
xchg
push
es
xor
adc
pop
cltd
mov
into
sbb
and
cmpsb
sub
addr16
mov
mov
inc
add
dec
jmp
mov
scas
dec
and
test
in
jns
or
inc
popa
mov
jne
test
icebp
ss
jge
dec
dec
dec
push
sbb
xor
cli
imul
jb
sub
int
roll
sub
in
sub
loop
mov
insl
jl
xor
mov
jg
xlat
arpl
imul
mov
cmp
mov
dec
out
fs
pop
jae
xor
std
inc
jl
aas
pop
sub
jge
in
mov
inc
call
stos
in
jg
neg
mov
fstps
inc
bound
inc
cmp
out
daa
andb
jge
push
stc
xchg
dec
jg
or
cmp
int
mov
mov
sub
popa
inc
cli
pop
cmc
mov
mov
and
push
pop
jo
in
sub
dec
cmpsb
lret
ss
testl
xchg
add
jno
sbb
xchg
fmull
lret
test
inc
orl
mov
mov
mov
lods
mov
and
jbe
jg
mov
or
sbb
xor
push
or
lock
dec
cmpsl
xor
outsl
fmuls
xor
xor
std
mov
inc
pushf
cltd
scas
and
fwait
rolb
cmp
les
inc
mov
or
dec
das
jnp
inc
xorb
sub
and
pop
dec
lock
or
iret
stos
mov
mov
aam
pop
mov
and
mov
pushf
loopne
outsb
orb
xchg
dec
popa
xlat
sti
push
pop
lahf
inc
mov
xlat
mov
in
jnp
xor
jbe,pt
popf
sub
cltd
mov
in
mov
jg
out
pop
test
test
xchg
pop
iret
imull
cmp
xchg
imul
or
sbb
cmp
push
mov
clc
movl
std
fwait
jge
jns
xchg
inc
bound
scas
in
lods
out
xchg
or
imul
and
repz
cmp
push
dec
jb
lahf
push
adc
subb
lret
xor
fcmovne
repz
jecxz
pop
aas
fbstp
lahf
xchg
sbb
pminsw
jne
pop
inc
insl
jmp
push
fwait
xor
testb
sub
xor
in
fists
lods
iret
xor
sub
pop
dec
sub
xor
inc
pop
scas
je
in
adc
idiv
cmp
xchg
test
leave
xor
out
movsb
rcrb
scas
sub
push
push
mov
sbb
sub
lds
inc
clc
adc
xchg
mov
inc
ss
cwtl
test
dec
outsb
sti
lahf
pop
xchg
rcrb
imul
dec
dec
jmp
and
fwait
outsl
lds
mov
scas
xchg
es
repnz
dec
jno
inc
jecxz
das
scas
mov
mov
mov
arpl
add
sti
sub
popa
enter
pushw
insb
mov
lcall
jo
sub
jecxz
ret
inc
inc
or
pop
push
mov
push
adcl
roll
aas
add
jno
mov
out
xchg
movl
popa
loop
add
fs
xor
and
jne
fisubl
aam
mov
mov
jb
imul
outsl
inc
inc
jne
iret
jle
enter
flds
cwtl
jne
and
leave
adc
adc
mov
and
or
lret
mov
xchg
cmc
pop
jecxz
push
jae
fadd
dec
mov
jp
push
mov
xor
cld
movsl
lahf
ljmp
in
jno
inc
and
stos
adc
jmp
push
xor
cld
rcrl
insb
addr16
push
in
dec
mov
or
lods
mov
adc
dec
into
adc
sub
sbb
and
push
or
push
jg
sahf
hlt
mov
stc
stos
dec
or
jo
in
out
das
inc
jle
repz
es
je
mov
adc
mov
xchg
std
int
dec
push
inc
jl
ss
insb
call
or
jae
ret
or
lds
add
gs
pop
mov
and
pop
mov
add
repnz
outsb
call
iret
fbstp
adc
push
mov
cmc
aad
arpl
in
mov
outsb
or
rolb
mov
cs
or
inc
out
mov
dec
int3
test
inc
test
sub
mov
or
mov
scas
or
ss
nop
xor
xchg
adc
mov
jp
adc
popa
and
int3
cld
and
ret
mov
mov
sub
add
and
cmp
pop
dec
and
sbb
adc
push
adc
dec
nop
repnz
ret
stos
mov
sub
mov
scas
push
les
add
sub
jns
daa
pop
sub
sbb
push
push
aam
clc
jle
cwtl
pop
xchg
mov
pop
pop
cwtl
adc
jo
fdivrs
mov
mov
xor
or
mov
fs
add
into
xchg
pop
lods
outsb
mov
jb,pn
mov
mull
pop
add
daa
or
or
jg
pushl
addl
lea
rclb
jecxz,pn
hlt
std
repz
sub
fmull
adc
mov
idivl
lock
daa
pop
xchg
cld
test
push
std
jecxz
dec
lahf
cs
sbb
mov
cmpsl
inc
mov
and
mov
addr16
mov
les
ret
jne
jne
rcr
out
pop
cs
xchg
loopne
fadd
pop
jbe
cmpsb
pop
scas
ds
addr16
sti
sbb
xchg
adc
xor
and
and
negl
subl
shlb
fcmovb
jno
push
ss
jmp
sahf
push
stos
jb
and
cmp
fstps
arpl
insl
rcrb
pop
xor
repz
xor
pushf
fstl
jb
push
aam
mov
rclb
imul
sbb
nop
and
xor
jl
mov
repz
fdivs
mov
and
imulb
lret
xlat
mov
xchg
fsubs
xchg
xchg
cwtl
pop
lock
pop
inc
add
inc
sbb
scas
outsb
sub
aam
mov
mov
push
sub
insl
jne
fcoms
cmp
add
fsubrl
movsl
cmp
sti
pop
jne
xchg
mov
aam
mov
cmpsb
fs
xchg
push
or
loope
rorl
fisubrs
out
push
sarl
or
pop
mov
das
aam
iret
addr16
push
in
xor
in
not
pop
and
ja
insl
jb
ja
sub
aas
dec
in
js
xchg
ja
je
stc
fstpl
dec
mov
adc
daa
ss
inc
pop
mov
in
pop
jo,pt
add
fstpl
inc
lcall
dec
mov
ljmp
scas
test
cwtl
daa
or
jnp
sub
sub
addr16
add
fisttpll
std
imul
test
lahf
scas
outsb
add
xor
bound
hlt
inc
aas
sbb
or
pop
shl
rcll
or
dec
pop
cmpsl
test
movsl
xchg
mov
rcrb
or
int
das
adc
popf
push
xor
cmpsb
adc
movsb
mov
adc
dec
xor
sbbb
out
das
repnz
stc
cmc
inc
push
les
inc
jmp
insl
pop
inc
in
repz
jmp
fisubl
scas
aaa
cwtl
sbb
push
and
shlb
ret
dec
test
or
pop
loopne
dec
lds
jae
mov
inc
pop
pushf
enter
dec
push
xchg
xchg
insl
mov
fnstenv
iret
sub
hlt
mov
cmp
cmpsb
ds
cmp
jmp
inc
cmp
psubb
dec
clc
fists
out
andb
in
or
mov
decl
stc
ret
repz
cmc
out
scas
cmc
stos
cld
and
popf
lea
cmp
xchg
push
jno
or
sahf
jb
lock
xor
pushf
aad
push
test
iret
mov
sub
pop
std
cmpb
dec
push
sub
jbe
adc
shl
jae
data16
std
add
inc
mov
push
dec
aad
bound
pop
mov
lret
jle
ret
inc
or
test
lret
add
das
cmp
stos
sub
cmp
test
push
into
nop
imul
leave
mov
mov
mov
or
jmp
fsubp
inc
dec
stos
cmpb
cmp
dec
popf
outsb
ret
sti
add
push
or
subl
sbb
cs
mulb
popf
push
icebp
shl
xor
inc
add
sti
mov
popf
or
stc
rclb
fsubp
loop
xchg
outsb
mov
int
mov
inc
or
fwait
xor
mov
hlt
push
out
jge
mov
push
sbb
dec
inc
pop
imul
data16
push
stc
or
pop
fcoml
ret
mov
xchg
or
mov
xor
mov
or
mov
jae
adc
loop
add
jns
sahf
loopne
out
mov
in
jecxz
jl
clc
out
cmpsl
cwtl
xor
xor
imul
and
pop
jae
pushf
leave
mov
mov
movsl
std
dec
adcb
xor
stc
cli
jae
mov
mov
test
sbb
ja
pop
or
in
push
sarl
dec
testb
mov
pop
lods
mov
sub
push
lcall
jl
lods
ss
push
mov
je
pushf
testl
fstpt
sbb
jge
xchg
adc
push
dec
sbb
adc
push
aaa
push
test
scas
cmp
add
or
mov
and
jle
pop
fsts
dec
in
dec
jle
lret
insl
add
or
loopne
inc
dec
add
shrb
xor
ljmp
aad
jge
jns
push
loopne
push
shrb
inc
xchg
iret
or
jge
add
imul
push
out
mov
and
ret
aaa
jmp
in
imul
testl
jp
mov
cs
jmp
dec
arpl
pop
leave
add
in
adc
test
cmc
loope
jecxz
stos
xsha1
cmpsb
int3
and
mov
or
sub
pop
sub
divl
push
repz
repz
add
shrl
xor
and
xor
out
or
movsb
sub
cmpsb
int3
stos
jno
dec
fnstsw
ss
movsl
mov
xor
fstl
leave
cmp
dec
mov
push
push
push
scas
mov
mov
mov
pop
push
inc
push
push
stos
decl
stc
push
xchg
pop
lds
sbb
xor
lea
sbb
and
sbb
jl
repz
adc
pop
ret
mov
loopne
mov
or
mov
or
xorl
lock
mov
xchg
xor
push
addr16
pop
mov
mov
daa
mov
aaa
xlat
xor
xchg
jl
adc
lods
mov
and
pop
cmp
push
or
lods
repz
paddq
cli
iret
jns
inc
in
or
fldenv
and
cmpsb
cmp
in
inc
dec
jo
xor
xor
pop
xchg
or
lret
mov
arpl
mov
das
mov
mov
int3
push
sbb
fistl
cmc
stc
sbb
aad
and
adc
mov
and
add
mov
testb
mov
in
xor
pusha
rcrb
cltd
fsts
aam
adc
in
jp
add
mulb
adc
cmpsl
pop
or
adc
sub
movsl
aad
imul
insb
movsl
lret
loope
push
pop
xchg
sub
jne
sbb
jnp
ljmp
mov
adc
sbb
mov
ljmp
lock
aad
adc
or
ret
leave
push
sub
mov
jmp
lret
stos
stos
fs
cltd
mov
or
imulb
push
mov
das
dec
pop
cmpsl
adc
pusha
mov
imul
push
movsl
lods
mov
lds
cmp
mov
xlat
adcl
adc
jle
in
sub
push
push
fldcw
cmp
mov
mov
sarb
andb
pop
test
cmpsb
push
int3
mov
cmpl
psllw
push
and
inc
push
push
xor
popa
cmpsb
pop
fdiv
jle
cmp
inc
div
jno
xchg
sahf
jecxz
push
in
in
sbb
lcall
add
add
mov
xchg
mov
jns
cld
jnp
mov
jg
mov
inc
sub
loope
jl
xor
adc
fistps
fldt
fs
sub
sub
int3
jo
push
push
shr
pusha
push
dec
iret
shrb
repz
aad
sub
das
and
scas
ficompl
mov
adc
fwait
xchg
add
cmp
cmp
pop
inc
xor
and
int
mov
inc
mov
arpl
lds
fsubs
mov
enter
adc
ds
bound
shr
cmp
dec
gs
sbb
fcmovbe
imul
aad
adc
data16
xor
and
iret
ret
popa
pushf
push
sub
mov
pop
xlat
add
jle
pop
fadd
aad
ret
popa
or
insb
jp
dec
shrl
aad
stos
in
rolb
mov
repz
shr
cmc
test
out
push
dec
sbb
push
sub
mov
fidivrl
loope
addr16
xor
fdivrs
lds
scas
repz
push
sbbl
cmpb
jle
cmpl
cmp
iret
jle
inc
sbb
popa
mov
aas
movsb
mov
sub
mov
inc
adc
data16
int3
pmaxub
clc
push
push
jmp
add
or
fiadds
jle
sub
insb
inc
sub
je
ret
repnz
filds
jl
xlat
lret
cmpsl
js
stc
jnp
jb
pop
pushf
sub
add
jno
adc
xchg
outsl
fdivl
push
and
push
push
lods
cmp
stos
jle
mov
or
lods
add
test
mov
cwtl
mov
sub
fcmovne
and
push
sbb
movsl
sbb
add
mov
and
insb
or
test
mov
dec
and
inc
ljmp
icebp
adc
sbb
jo
sbb
es
push
mov
imul
pusha
and
cmp
mov
xor
aaa
xor
pop
test
pop
push
popf
jg
int3
and
into
xor
dec
stos
std
scas
mov
leave
int3
push
mov
insb
and
jl
stc
inc
adc
lds
dec
mov
pop
sub
sbb
enter
adc
cmp
and
ja
aam
je
sbb
mov
mov
iret
pop
test
rclb
pushf
jb
pop
fidivrl
test
cmpl
mov
aam
rolb
fnstsw
outsb
aas
push
adc
inc
cmp
outsl
inc
in
jge
roll
fwait
cmc
jb
xor
icebp
js
jae
aad
dec
jnp
cmpsl
cltd
insl
adc
loop
pop
inc
inc
push
dec
adc
mov
adcb
sbb
mov
pop
and
mov
cld
lea
daa
arpl
stos
lods
inc
pop
mov
test
lea
xor
and
int3
arpl
xchg
xchg
cmpl
sar
das
jnp
scas
adc
les
push
loop
mov
mov
es
push
sbb
dec
cli
xchg
sub
pop
fcompl
or
fdivl
jecxz
push
pop
in
adc
sub
xchg
xorb
mov
cmp
mov
cmpsb
mov
push
test
mov
in
lock
hlt
and
mov
mov
out
mov
lods
pop
xlat
idivb
sbb
into
addl
push
sti
mov
mov
push
gs
mov
aaa
stos
daa
dec
in
mov
and
fbld
jp
mov
push
fs
add
or
or
or
push
push
push
push
icebp
stos
popa
leave
xor
stos
stos
mov
pushf
mov
pusha
pushf
outsl
popf
shll
adc
daa
insl
push
inc
jg
pop
jl
cmc
lods
push
xorb
mov
adc
movsb
les
adc
fstpt
pop
add
sbb
push
xchg
jmp
shl
sub
adc
adc
jo
and
test
ds
dec
sbb
loope
daa
xlat
push
pop
cmc
jmp
adc
inc
in
dec
mov
fsubl
cwtl
pusha
mov
pop
dec
push
je
and
test
xchg
fwait
mov
or
stos
mov
mov
lods
pushf
mov
rcrb
sahf
and
inc
cmp
cmpsl
sub
dec
mov
and
mov
nop
jecxz
or
inc
pop
aad
in
in
dec
or
cld
lods
and
jbe
push
clc
sub
xlat
ret
inc
sbbb
push
dec
inc
outsb
das
cli
pop
bound
pop
xchg
adc
das
dec
or
lock
hlt
push
or
cs
repz
and
and
or
sbb
and
je
mov
jbe
xor
pshufw
inc
or
mov
outsb
or
jbe
in
xor
addr16
pop
dec
insl
mov
adc
xchg
jp
cmp
mov
pop
xorb
gs
leave
jp
xchg
mov
xchg
mov
push
test
out
test
or
fadds
out
inc
cs
out
hlt
cmpb
in
pop
popa
rcl
sbb
ret
or
pop
mov
ret
mov
xchg
xchg
pop
cmpsl
lock
dec
mov
xchg
jae
lcall
int
push
xor
add
jecxz
mov
cmp
outsl
loope
ljmp
push
into
xor
push
leave
mov
stc
sbb
dec
stc
fisttpll
repz
jp
rcll
call
mov
sbb
pusha
jle
lods
cmp
cld
jmp
fwait
rorb
mov
xchg
lock
dec
push
xchg
aas
sti
pop
out
frstor
push
es
mov
xchg
sar
or
sar
xchg
xchg
fistl
sbb
push
jb
pop
out
sub
movsl
paddd
addl
lods
pop
xlat
test
cmpsl
pop
fcompl
inc
xchg
inc
aaa
adc
stc
in
test
jmp
stos
arpl
mov
xchg
jbe
adc
add
jmp
sbb
inc
mov
cmp
lea
and
adc
popl
cmpsl
xor
fstpt
adc
pop
pop
mov
sti
aad
std
cli
pop
lret
and
stc
xchg
pushf
cmpsb
cmp
pop
xchg
jne
pop
xchg
scas
ret
fwait
js
xchg
jge
mov
fisubrs
stos
xchg
xor
sbb
shll
fdivrl
jp
shll
arpl
scas
sub
dec
jl
jge
and
daa
and
add
pop
je
inc
or
mov
mov
push
scas
jge
dec
mov
xor
lcall
xchg
mov
xchg
xor
push
adc
rcr
mov
cmpl
mov
lret
mov
mov
mov
jg
std
and
shlb
popa
test
sbbb
and
jg
mov
cmpsl
int3
inc
rclb
out
mov
lret
scas
mov
inc
rcl
pop
imulb
imul
push
jne
outsl
cmp
aas
pop
insb
cli
call
pop
iret
addr16
inc
hlt
repz
aas
and
sbb
fdivs
out
aas
xor
pop
mov
jg
dec
mov
xlat
dec
aad
scas
adc
dec
dec
push
test
in
jg,pt
shlb
in
jae
movsl
xor
mov
pop
dec
stos
dec
cmp
loop
movsl
jo
pop
dec
out
bound
push
sub
pop
sub
jb
push
mov
ds
pop
lcall
notb
and
test
in
out
pushf
filds
push
pop
inc
inc
mov
es
mov
jno
push
fdivp
xor
int3
test
dec
icebp
stos
into
adc
popa
jle
xor
test
orl
push
pop
pop
cs
repz
cs
lods
pop
into
je
mov
pusha
aad
cmp
shlb
cltd
ljmp
push
insl
pop
sarl
mov
rcrl
push
mov
jp
pop
ds
or
push
test
xchg
adc
mov
mov
cmp
jmp
jp
inc
pop
push
adc
addb
push
lcall
push
outsl
sahf
sahf
xor
es
test
fsubs
pop
mov
mov
add
mov
insl
fcoms
xor
or
pop
add
inc
fs
hlt
out
xlat
fucomp
and
inc
push
and
ds
or
mov
add
imulb
test
adcb
out
outsb
out
add
scas
push
or
adcl
mov
pop
pusha
push
mov
pop
hlt
add
jae
push
pop
pusha
les
cli
rolb
dec
out
pop
pop
mov
or
jl
and
mull
addr16
push
jo
push
adc
movsb
cmp
mov
pop
and
movsl
test
clc
adc
jns
gs
xchg
pop
outsb
lahf
jne
test
popa
lret
cmpsl
fisubrs
adc
inc
dec
or
mov
shrd
mov
inc
xor
pop
test
xchg
fisubl
inc
mov
popa
pop
les
mov
fnstcw
sub
ficomps
test
xchg
cmpsl
out
lahf
icebp
mov
adc
dec
jmp
sbb
mov
sbb
jge
lea
add
push
movl
push
fdivs
mov
or
into
xlat
iret
xor
addr16
shlb
cld
or
filds
sub
imul
or
xor
gs
mov
addr16
fisubl
add
xlat
push
icebp
arpl
ds
sub
mov
jp
push
in
cmp
inc
cwtl
jno
add
popa
jae
rcll
cltd
pop
mov
mov
scas
add
lock
adc
fs
mov
add
mov
shrl
pop
cmp
mov
mov
and
adc
sub
pop
cwtl
inc
cmp
lret
fwait
test
pop
fsincos
stc
cs
movsb
and
sbb
xor
or
call
jmp
mov
in
inc
push
rcll
xchg
xchg
inc
ret
gs
cwtl
xchg
sbb
std
cltd
inc
orb
jle
adc
mov
xchg
sbb
lahf
sub
cmpsl
mov
sbb
je
push
pop
loope
inc
imul
jno
lock
mov
in
xor
daa
std
jl
push
cmp
outsl
sub
or
mov
cmp
add
add
subl
mov
xlat
dec
out
stos
sahf
popa
mov
rclb
jle
xor
cmpsb
and
aas
pop
jnp
into
xchg
test
pop
inc
aam
aam
in
dec
lds
dec
scas
dec
mov
loop
test
xchg
sub
cmp
adc
jmp
arpl
out
cmp
push
in
call
mov
push
inc
enter
mov
lcall
and
mov
mov
rcl
or
push
fstpl
jbe
and
add
fldl2t
in
mov
push
addb
sarb
into
je
mov
enter
xchg
ret
shrl
xchg
sub
xor
or
test
je
addr16
pop
xchg
daa
inc
jo
shrb
outsl
dec
or
dec
lock
lods
xor
add
mov
sub
outsb
popa
outsb
fsubl
shlb
cmp
hlt
aam
jbe
dec
dec
sub
popa
aam
lea
js
jno
hlt
das
mov
xchg
sub
fwait
cmp
or
cmp
cwtl
sbbl
mov
in
test
inc
sbb
fsub
loopne
iret
in
sbb
lock
std
icebp
test
dec
cmp
mov
sub
or
cs
test
pop
je
ret
sahf
cmp
fbld
fisubrl
andb
pop
sti
gs
mov
push
loop
mov
iret
fistl
mov
add
in
sti
pop
xor
js
rclb
fisubrl
rorl
push
test
xchg
inc
mov
add
cld
rcrl
call
in
xchg
jge
cld
mov
test
jo
cli
arpl
xchg
adc
push
lahf
mov
iret
inc
or
idivb
and
aaa
out
rcrb
mov
xlat
sub
shrb
inc
jo
mov
sbb
lods
fidivs
and
xor
jmp
or
sbb
jae
mov
fists
aad
cmp
add
test
jae
push
jmp
cld
jnp
xor
adc
dec
xor
pop
mov
mov
imul
mov
out
fucom
sbb
mov
cltd
xor
mov
aaa
dec
mov
fisubs
jmp
cli
fldt
inc
pop
adc
dec
push
jns
jl
pop
inc
mov
dec
dec
jg
fistpl
cmp
dec
mov
add
pop
in
stc
pop
mov
and
mov
xchg
gs
mov
pushf
or
imul
mov
lea
in
dec
aaa
es
cmp
adc
pop
loop
jp
and
cld
movsb
mov
xchg
adcl
pop
mov
and
push
cmp
loope
loop
xchg
mov
cs
das
in
int3
jne
jle
and
dec
rclb
cwtl
push
xor
push
fmuls
mov
lods
inc
insb
dec
cmp
jae
rcrb
movsb
mov
push
dec
jle
push
mov
mov
je
cmp
cmp
jno
mov
addr16
fldt
jle
enter
mov
stos
icebp
test
push
fstl
aaa
adc
fistpl
mov
out
inc
aam
repz
addl
xchg
jb
cmpsl
add
sbb
loop
inc
test
es
arpl
aam
pop
pop
out
out
int3
mov
das
hlt
incl
jbe
adc
xchg
xor
rclb
movsb
or
mov
mov
push
dec
shrb
mov
cmp
xchg
aas
pop
lods
push
mov
dec
mov
shll
das
pop
ss
nop
ret
lock
shll
lahf
insb
call
mov
dec
in
xchg
call
pop
mov
cmp
xor
iret
jmp
lds
inc
hlt
push
mov
fsubr
jg
adc
xor
js
outsb
data16
mov
push
imul
clc
jmp
enter
int3
std
rcl
cmp
or
dec
enter
repz
mov
stc
lcall
lods
shl
in
add
ret
xchg
data16
outsl
ret
mov
mov
jle
cmp
sti
orb
push
dec
jle
stos
aad
xor
push
sub
add
pop
testl
loope
dec
sarb
sub
lret
jle
fs
gs
inc
shll
mov
mov
sbb
or
add
repz
lret
jae
pop
push
stos
test
xor
adc
adc
cli
dec
notb
adc
arpl
and
xchg
pop
mov
dec
cmpsl
ljmp
and
in
cld
in
mov
js
dec
dec
call
and
cmpsl
in
dec
dec
es
out
sub
mov
lods
xchg
popa
mov
fsts
insb
add
loope
mov
add
push
xor
jl
push
sbb
pushf
xchg
imul
clc
out
or
int
int3
insb
cltd
mov
fcmove
pop
jno
jno
sbb
stc
sbb
pop
mov
jns
jge
ss
sub
mov
lcall
xor
jnp
or
inc
arpl
sbb
xchg
inc
fldl
jno
adcb
jb
xor
idiv
push
inc
xor
inc
out
cmpl
push
lods
pop
out
test
sub
addr16
sbb
adc
jp
push
fldl
and
xor
int
or
push
lcall
sub
insb
std
or
daa
in
test
imul
popf
jl
repz
mov
insl
ficoml
iret
ficomps
pop
xchg
mov
inc
add
out
dec
pop
and
in
inc
xchg
dec
negl
mov
adc
pop
rcrb
dec
push
xchg
cmpsb
jae
ljmp
arpl
push
cmp
lds
mov
pop
outsb
outsl
repnz
out
lahf
xlat
jno
ja
inc
xchg
xchg
js
adc
mov
dec
pop
fwait
push
xor
xchg
cmp
in
dec
sahf
je
fsts
push
fcmovnb
cmp
add
cmp
mov
cmpsb
sub
add
jnp
aam
in
cmp
ljmp
mov
cmp
scas
fbstp
leave
adcl
mov
fidivrl
pusha
adc
sub
inc
xchg
and
pusha
jle
and
stos
fptan
xchg
sbb
jns
fcmovnu
outsl
inc
cmp
aas
out
adc
movsb
ficoms
xor
pop
sbb
mov
jnp
rorb
addr16
movsb
xchg
adc
insb
cmc
test
dec
call
loop
es
sbb
ja
das
enter
jbe
rcl
or
inc
sti
add
fdivl
push
mov
lret
sarb
jns
mov
es
imul
mov
enter
das
and
popa
or
xor
pop
in
arpl
mov
adc
mov
loop
adc
xlat
imul
or
lods
scas
loope
mull
pushf
cmc
mov
lock
jae
dec
fcmovnb
loope
xor
dec
sahf
mov
inc
adc
fucomi
cmp
cmp
cmp
pushf
push
xchg
test
shrb
rcll
lods
add
add
mov
or
push
push
mov
xor
cld
lret
dec
mov
jne
pop
mov
ret
and
jnp
daa
mov
inc
xchg
lods
mov
jo
orb
lcall
decb
pushf
sbb
aas
cltd
cmp
sub
adc
sar
repnz
mov
es
or
xor
cwtl
sbb
sbb
fs
into
popf
icebp
ret
incl
add
shrl
stos
test
or
xchg
sub
push
leave
mov
dec
ss
jnp
lods
into
cld
andl
push
adc
fwait
pop
cwtl
lcall
out
sarb
or
arpl
testl
push
xor
or
clc
add
mov
rcl
pusha
sub
js
push
std
call
stc
fidivs
sbb
add
add
stos
in
mov
xchg
fwait
push
sbbl
rorb
xchg
shl
pushf
fnstsw
enter
cld
sbb
stos
sarb
daa
sti
arpl
dec
mov
push
xor
cmp
push
loopew
mov
xchg
mov
add
ret
call
aam
lret
fadd
mov
dec
jmp
mov
mov
sub
mov
sub
sbb
jnp
popa
enter
in
cmovl
sti
sbb
das
jns
xor
arpl
cltd
js
jecxz
jns
mov
cmpsl
scas
scas
ja
mov
daa
inc
scas
sub
mov
jle
mov
popa
mov
mov
add
push
xchg
out
and
add
xchg
xor
cwtl
int3
lods
xchg
cmp
pop
call
addr16
sub
xor
xor
pop
xchg
mov
sub
sarl
test
movsb
dec
lahf
push
push
adc
and
imul
jae
ret
inc
loopne
dec
dec
push
iret
and
sbb
push
lea
addl
fwait
in
or
aas
push
ret
icebp
mov
outsb
cmp
mov
out
mov
sub
cli
jecxz
iret
lods
shll
mov
inc
imul
test
xchg
cmp
mov
mov
mov
pop
xchg
cmp
adc
insb
mov
cmpsl
ljmp
xor
lock
jae
jb
mov
jnp
insl
pop
fs
and
or
mov
sbb
push
lods
xchg
or
mov
sbb
ss
or
aas
mov
test
jl
pop
pop
cmp
cmp
push
add
fdivrs
cmp
pop
cmc
cmp
inc
fistpl
in
in
jge
cmp
int3
xor
mov
mov
mov
mov
pusha
cmp
push
xor
shrb
fsubrs
inc
mov
mov
in
data16
xchg
in
stos
jge
int3
sarl
std
pop
out
jbe
test
sbb
sbb
loopne
jge
ret
cmp
add
xchg
loop
pop
jbe
pop
ljmp
pop
or
push
int
jno
std
add
push
neg
xchg
sbb
dec
sub
neg
pop
leave
sub
adc
sub
adc
sub
into
or
sbb
loopne
fildll
imul
test
shlb
repnz
sti
icebp
enter
movsl
push
int3
jae
dec
mov
mov
jmp
sar
repnz
fnstcw
xchg
mov
jnp
iret
sub
pusha
or
popf
xchg
popa
cmp
ret
jno
xor
xchg
adc
xor
rcrb
aaa
std
jae
data16
or
push
in
or
mov
mov
mov
jne
cld
ljmp
lods
fwait
mov
clc
or
sti
movsl
ja
outsl
push
lahf
pop
jae
pop
and
sahf
popa
cmc
push
lahf
ja
aam
inc
pop
lcall
sub
jmp
in
mov
mov
add
or
pushf
inc
call
xchg
cmpsl
rcrb
adc
cmpsb
push
pop
or
ja
pop
push
cmp
dec
mov
adc
cmp
pop
inc
bnd
int
leave
mov
call
mov
xlat
in
stc
int3
shll
in
incl
shl
sbb
sti
mov
out
or
repz
pop
jo
sahf
daa
sbb
mov
cmpsb
sub
into
add
jmp
xchg
xor
lods
test
push
xchg
in
out
outsl
aad
dec
add
mov
pop
cwtl
mov
mov
sbb
mov
and
sarb
jp
out
daa
fs
addr16
push
inc
cwtl
cmp
mov
aaa
fs
mov
xor
push
loopne
dec
xchg
ds
bound
mov
mov
cmp
or
nop
xchg
push
mov
sbb
pop
or
shl
fs
cli
mov
inc
dec
test
inc
das
xlat
stos
xor
cmp
or
fimuls
lahf
lods
and
dec
pop
mov
pop
xor
pop
fwait
les
sar
xchg
icebp
and
xor
mov
inc
mov
jno
nop
js
mov
add
repnz
popf
orl
cmpsl
into
cmp
mov
push
push
orl
in
arpl
nop
sub
sahf
jne
xchg
outsb
fwait
dec
subl
sub
pop
jmp
xchg
add
pop
test
sub
jp
xchg
iret
stc
pop
adc
leave
ljmp
fucomp
cmpsl
pushf
dec
jmp
pop
outsl
fsubl
sub
dec
push
pop
jmp
ja
les
lahf
arpl
cmp
mov
mov
andb
aaa
push
push
mov
and
jb
icebp
xor
sbb
shr
cmp
inc
mov
xchg
xchg
dec
pop
loope
pop
push
mov
or
mov
insl
or
mov
inc
test
shrl
mov
pop
add
nop
cmp
sti
bound
adcl
cmp
mov
add
sub
cmp
sub
xchg
dec
in
flds
jp
jecxz,pn
mov
idivb
adcl
pop
sbb
adc
in
mov
adc
push
or
inc
inc
negb
je
adc
aam
xchg
and
lds
ds
shll
movsb
ss
movsb
adc
jmp
mov
xchg
das
jmp
pop
loop
add
int3
imul
push
dec
call
cmp
data16
mov
imul
and
adc
pop
and
xor
mov
stos
inc
int3
rcl
xchg
cmc
call
jae
fiaddl
jnp
add
es
cmp
fdivl
sahf
aad
sub
cmp
pop
out
imul
xchg
or
mov
inc
jns
pop
xchg
gs
stos
inc
cli
mov
mov
and
cwtl
stc
jl
inc
das
test
jg
mov
pop
mov
and
xor
loope
es
push
ret
pop
sbb
movsb
pop
aad
in
es
push
call
xchg
std
xchg
iret
loop
outsb
lahf
xor
xchg
int
or
sti
ljmp
adc
loop
sbb
sub
fidivrs
cmp
iret
addr16
cs
stos
mov
adc
mov
add
mov
mov
and
sbb
add
in
and
mov
addr16
test
lahf
inc
lock
xchg
push
cmpsb
aam
xor
push
jl
push
andb
pop
adcb
mov
push
hlt
xchg
cld
adc
sbb
push
ret
into
xchg
test
out
movsb
out
mov
ljmp
push
mov
into
out
rolb
pop
or
add
lret
dec
aas
lds
loop
inc
adcl
push
fidivrl
push
fimull
push
mov
cmp
mov
mov
sub
mov
dec
xlat
cli
jl
xor
test
rcrb
adc
inc
sbb
outsl
sti
movsb
pusha
jno
jo
pop
cmp
mov
mov
cmp
mov
mov
addl
jmp
insb
cmc
enter
testl
jne
dec
xor
scas
xor
testb
inc
pop
ficompl
or
pop
lret
mov
cmp
and
jns
xchg
mov
or
mov
aam
mov
out
mov
dec
xor
roll
xchg
push
lret
ret
das
mov
mov
nop
addr16
add
sbb
dec
pop
lods
push
push
sbb
insb
popf
jo
jns
movhps
xor
in
out
les
fisubrl
adc
dec
or
stos
mov
push
pusha
mov
cmpsl
sbbl
adc
xchg
mov
inc
push
roll
jmp
xchg
dec
in
jns
adc
pusha
rcrl
sub
push
jmp
aam
jae
fcoms
out
mov
mov
add
xor
loop
sti
mov
inc
mov
testb
mov
and
add
mov
xor
sarl
adc
xor
jp
push
adc
xor
mov
call
cltd
pop
xchg
mov
inc
or
sub
popa
inc
mov
lds
paddsb
mov
cmp
xchg
out
inc
fisttpll
push
sub
stos
and
jo
stos
fisubl
xor
cld
push
int
negb
mov
imul
aam
inc
pop
jae
xchg
js
fdivrs
out
shl
movsl
mov
repnz
mov
stos
pop
add
jl,pt
dec
lret
jnp
dec
mov
jne
pushl
andl
mul
adc
and
dec
pop
sbb
insl
inc
clc
loope
sarl
cmovp
imul
mov
mov
insb
adc
stos
jne
and
into
outsl
fisttpll
inc
mov
clc
es
pop
inc
pop
les
jmp
mov
in
std
hlt
mov
add
outsl
loopne
cmpsl
inc
cmp
add
aam
stos
xchg
or
roll
xchg
pop
js
mov
xor
jno
pop
jmp
mov
or
fwait
loope
lret
push
inc
and
cmp
decb
out
in
leave
insl
insl
lahf
mov
fistpll
cmp
inc
sbb
mov
inc
cmpsl
fadds
popa
sti
xor
sub
and
push
xchg
mov
inc
dec
lret
adc
fstps
mov
or
sbb
mov
rol
loopne
mov
sar
jne
sbbl
lock
js
nop
andb
xor
js
cmc
dec
mov
xchg
imul
loopne
int
js
pop
mov
stos
xor
stos
lret
pop
mov
cmp
xchg
bound
mov
cmp
or
dec
jnp
imul
bound
or
xchg
push
jnp
and
jns
push
and
mov
mov
loop
sub
inc
in
and
jbe
lcall
mulb
pop
or
bound
notb
mov
sbb
or
jle
aam
mov
lods
lods
push
adc
ss
xor
cmp
inc
call
lods
sbb
scas
add
popf
adc
sub
mulb
or
dec
test
movsb
lock
stos
mov
mov
push
xor
and
xlat
jl
sarl
in
lret
ficoml
jl
push
fisubrl
insl
push
mov
sub
xchg
bound
xchg
push
mov
loopne
gs
loopne
push
clc
dec
out
icebp
shlb
dec
push
loopne
lahf
jns
lret
nop
xchg
bound
inc
cmp
push
stos
ret
pushf
mov
cmp
mov
aaa
sbb
lods
rclb
xor
jb
dec
mov
aam
loopne
aas
cmpb
mov
mov
ds
lods
sub
mov
push
or
dec
and
push
sub
sub
xchg
mov
dec
fisubs
and
pop
dec
mov
dec
sbb
cltd
pop
movl
pop
aaa
xor
jmp
out
in
sub
lods
jnp
cmp
nop
add
push
jp
push
pop
dec
scas
pushf
fmull
call
dec
sbb
shrl
sub
push
int3
or
jge
mul
mov
inc
popf
inc
mov
addr16
xchg
pop
into
mov
dec
add
mov
loop
sub
cld
cmp
mov
lret
pop
aad
inc
ljmp
mov
jge
pop
xchg
nop
aaa
sub
rcll
push
xchg
out
pop
loop
dec
repnz
rorl
sub
lahf
jle
cs
lret
and
testb
dec
ljmp
pop
ljmp
stos
fadd
repz
std
jle
jge
push
pop
je
push
and
es
pop
cmp
data16
jo
repnz
add
nop
adc
xor
pop
fs
cli
mov
stos
addr16
push
loopne
xchg
aas
cmp
mov
mov
aaa
cld
inc
sub
lea
fnsave
push
lret
jge
add
or
hlt
fiadds
mov
aad
push
into
xchg
mov
mov
shlb
bnd
push
push
adc
enter
add
mov
cmp
call
and
push
push
shlb
adc
mov
clc
or
das
mov
das
ret
push
mov
dec
sbb
outsb
clc
ror
dec
clc
mov
mov
mov
mov
data16
sahf
xchg
pop
mov
sub
and
xchg
sub
push
mov
inc
ds
pop
scas
cwtl
sbb
ret
fndisi(8087
insl
pop
pop
fisttpll
jbe
or
roll
pop
loope
movl
shl
lods
jmp
inc
xchg
dec
imul
out
aam
fcmovu
mov
xor
or
push
inc
xor
mov
mov
inc
push
cmp
sub
jb
pop
test
push
jecxz
mov
test
stos
repnz
lcall
arpl
rolb
movsl
dec
jns
icebp
unpckhps
cmpsb
aad
pop
nop
adc
jmp
ljmp
sbb
xor
cmp
dec
fldt
mov
mov
and
mov
mov
dec
mov
mov
or
rol
mov
and
insb
dec
in
je
movsb
xchg
mov
testb
cmp
cmp
dec
jne
in
sarb
jne
mov
fbstp
jle
jle
xchg
inc
or
out
fsub
sub
add
pop
push
loopne
and
neg
cmpsb
outsl
sbb
fnsave
or
int
add
cltd
push
mov
test
scas
add
jge
sahf
sbb
and
out
xchg
xchg
in
cmp
mov
or
shll
shrb
push
xchg
xchg
iret
jmp
pop
cli
or
sbb
fprem
pop
movsb
adc
mov
jg
fwait
js
lods
sti
adc
mov
fnstcw
fsubl
fnstsw
imulb
sbb
xor
inc
sti
dec
nop
dec
nop
mov
imul
push
jne
add
mov
jnp
push
or
aaa
xchg
xlat
shll
inc
hlt
jnp
cmp
outsl
je
sarl
xlat
nop
outsb
pop
push
gs
fisttpl
inc
xchg
pop
arpl
aaa
adcl
sbb
lahf
push
mov
ja
stos
add
addr16
adc
hlt
bound
pop
cli
cmp
push
or
enter
repnz
in
dec
lock
bound
dec
sub
ja
xor
popa
lahf
daa
mov
int3
cmp
or
inc
pop
stos
and
mov
xchg
fadds
lods
jle
and
mov
and
jo
iret
inc
mov
lea
movsl
jns
or
rcll
inc
pusha
pop
cli
andb
adc
add
lods
mov
jecxz
adc
xchg
loop
fs
cltd
stos
sbb
cmp
rcrl
int3
push
bound
data16
dec
and
mov
test
popa
dec
cmc
addr16
mull
stos
add
mov
add
xor
adc
mov
aaa
mov
push
shrl
rclb
pushf
jbe
std
shll
xlat
cmc
xchg
pushf
lea
in
add
jecxz
dec
cmp
sub
xchg
dec
pop
cltd
mov
lret
fistpl
inc
jecxz
call
pop
in
or
and
adc
mov
add
mov
cmp
data16
xchg
and
cmpsb
imul
insl
js
mov
mov
pushf
mov
inc
movsb
negb
xchg
xor
and
lahf
sub
pusha
cli
push
lods
out
mov
icebp
ret
dec
and
push
inc
push
pop
fcomps
or
es
sbb
pushf
xchg
cmc
mov
rcr
enter
aaa
sbb
scas
hlt
out
jmp
inc
stos
push
mov
sub
push
adc
add
dec
xchg
loop
jns
rclb
mov
insb
jns
lahf
pop
xor
cmp
mov
out
int
loope
neg
mov
dec
rclb
adcb
js
xor
jl
mov
xlat
movsl
popa
or
dec
inc
stc
test
cmpsb
cmpsb
jmp
cli
or
mov
adc
ljmp
mov
into
mov
inc
andl
pusha
mov
mov
mov
mov
xchg
pop
push
loopne
pop
out
lret
xchg
insb
jle
sbb
jb
gs
jae
lret
pop
add
pop
je
gs
mov
imul
mov
and
sub
or
pop
subb
cmpb
push
sbb
shlb
dec
stc
push
adc
dec
cmc
pusha
xor
imul
add
or
mov
ss
sti
push
lds
mov
rcr
int
stos
fs
adc
decl
jle
push
insb
or
iret
lcall
pop
das
xchg
adc
push
adc
mov
jns
lock
jb
push
negl
or
mov
mov
xor
arpl
add
shll
clc
mov
dec
or
out
daa
mov
sub
dec
push
cld
pop
stos
mov
daa
inc
les
not
dec
daa
adc
leave
sub
sbb
sbb
cmp
xor
call
mov
dec
test
cmpsb
lods
push
push
push
add
insb
xchg
rcrl
jb
adc
push
mov
sbb
loopne
into
pop
cmp
shlb
insb
and
jecxz
jmp
insb
adc
cmp
and
push
jmp
fmull
mov
mov
xor
insl
push
addr16
inc
sub
mov
cmp
das
ja
jns
and
in
testl
cwtl
jmp
popf
outsb
pop
test
mov
call
xchg
mov
popa
outsl
adc
mov
lcall
fs
push
inc
lahf
sbb
cmovg
and
mov
cmc
adcl
ret
xchg
ja
xor
lahf
gs
cmp
rorl
lret
mov
repnz
mov
mov
mov
ret
out
stc
and
xor
jae
xor
cmp
sub
pop
jl
outsb
and
mov
push
xor
nop
cmpsl
hlt
jp
fsubrl
out
insl
push
jle
cli
loope
aad
clc
mov
push
xchg
adc
pop
fs
andl
push
mov
ret
inc
inc
dec
ss
xor
shl
add
and
insb
jmp
sarl
ss
dec
cmp
fst
mov
lods
orl
stc
inc
mov
decl
sti
fsts
in
aas
sub
dec
je
sub
push
sahf
mov
fdivrl
mov
inc
mov
rorl
pop
sbb
push
sbb
lock
test
les
js
xor
pop
icebp
mov
aam
aad
bound
fldl
jp
lds
loope
xchg
xor
test
sub
pop
mov
and
test
shl
test
int
int
or
adc
outsl
cmpsl
lcall
ret
mov
sbb
add
push
xchg
pushf
jb
mov
out
mov
outsb
ret
lret
test
and
or
ret
push
test
mov
int3
mov
mov
mull
sub
xor
or
dec
inc
xlat
daa
adc
and
jb
jge
push
ja
cmp
pushf
sbb
cmp
sbb
decl
aam
xchg
sbb
adc
xor
jl
jb
cmove
pop
adc
scas
xchg
fdivrl
jge
es
jno
mov
in
push
and
sub
xor
mov
lods
jl
xchg
scas
mov
ds
es
idivl
mov
stc
pop
push
sub
cs
xchg
mov
fadds
rolb
xor
cltd
std
xlat
lcall
addb
jle
mov
std
clc
js
inc
bound
mov
movsl
js
aaa
subl
daa
pop
pop
mov
addr16
je
fsubrs
shlb
sti
mov
scas
push
ficompl
or
adc
data16
sbb
aad
cmp
inc
pop
adc
divl
xchg
jae
out
movsl
mov
cmpb
dec
popf
cli
adc
dec
movsl
add
jae
enter
jno
fnstcw
push
lods
xchg
mov
dec
adc
dec
scas
int3
lret
daa
mov
aam
es
fs
and
stos
loopne
fsubr
punpcklwd
flds
cmp
push
fcompl
insb
sbb
dec
iret
fs
mov
cli
bound
mov
inc
add
jo
mov
xor
test
lahf
je
adc
pop
sahf
lea
and
inc
sub
int3
inc
adc
ljmp
xchg
sub
jo
and
insb
mov
xor
cmpb
jbe
outsl
cmc
xchg
rorb
and
mov
daa
mov
sub
mov
scas
xchg
and
mov
sub
pop
xchg
or
push
push
push
aas
pop
lea
ret
inc
out
xchg
icebp
ret
fcoml
jae
cwtl
stc
cmpb
mov
in
fstpl
enter
movsl
pushf
cmp
in
pop
ds
out
shlb
mov
adcb
jbe
jmp
fiadds
jb
jl
cmp
sbb
mov
iret
call
sbb
sub
enter
and
dec
and
mov
lods
test
xchg
cmp
and
jo
insl
loopne
or
or
push
adc
jb
cmp
insb
icebp
mov
jmp
mov
and
shrl
pop
aam
dec
jg
hlt
adc
pop
repnz
jo
and
lea
scas
aaa
bound
pop
and
les
pop
dec
cmp
clc
imul
mov
xor
lret
add
inc
and
pop
sbb
sub
xchg
in
test
jecxz
mov
cmpsb
mov
jle
and
cmc
jg
in
and
jae
or
sub
pop
das
push
fildl
and
add
aas
in
mov
cltd
inc
cmpsb
jne
hlt
fsubrl
cltd
arpl
cltd
dec
aam
sbb
in
or
add
inc
in
jno
cmp
jne
out
xor
inc
dec
dec
pop
ret
jp
sbb
pop
in
mov
inc
cmp
lds
cld
sti
leave
push
repz
xor
jb
xor
push
call
fwait
jge
dec
push
add
in
lcall
nop
sbb
mov
loop
fldenv
mov
inc
ljmp
xchg
cmp
les
push
roll
jb
add
clc
xchg
ds
sbb
leave
outsb
movsb
in
sbb
pop
insl
mov
shrl
adc
xchg
lea
sub
loopne
sbb
sub
mov
and
xor
inc
div
leave
mov
insb
sbb
push
test
jge
mov
out
pushf
mov
cmpl
xlat
adc
sbb
shrb
arpl
mov
stc
xchg
sarl
pop
call
sub
les
fwait
mov
cmp
jl
push
pop
addb
push
lds
das
mov
clc
xchg
jnp
xlat
jnp
in
in
push
enter
inc
cwtl
push
in
xor
decl
fisubrs
mov
gs
mov
js
cmp
lods
sbb
mov
or
pop
and
imul
jecxz
bound
fs
xor
push
xchg
faddl
xor
xchg
lock
jb
xchg
or
test
negb
sbb
cs
out
ret
inc
leave
gs
sti
mov
test
sub
mov
outsl
xor
scas
stc
icebp
or
in
sub
xchg
mov
xor
mov
push
mov
push
sahf
inc
push
pushw
rclb
clc
sarl
jl
punpcklbw
adc
psubusb
mov
mov
cs
lock
gs
xor
mov
jp
xor
or
aaa
cltd
sub
mov
mov
aaa
push
add
stc
inc
jecxz
mov
mov
rorl
into
push
add
jnp,pn
mov
mulb
push
mov
xor
pop
lods
shrl
fsubl
shl
lret
cmpsb
pop
loop
insb
loop
stos
mov
faddl
pop
repnz
mov
sub
popf
or
fildl
int
je
cltd
pop
movsl
or
push
add
sahf
add
mov
and
jnp
gs
inc
addr16
cmpsl
das
call
lahf
adc
xchg
sub
lea
push
sub
jns
xor
repnz
mov
je
and
sbb
xchg
jb
xchg
aam
imul
add
adc
loopne
mov
sub
dec
std
clc
pop
jo
sub
jb
jae
inc
das
xor
out
divb
insb
mov
dec
pop
dec
mov
out
fldl
sbb
outsb
hlt
ret
dec
and
cmp
and
inc
pop
push
adc
es
pop
scas
rolb
ss
mov
xor
push
jo
jns
ret
fldl2e
mov
mov
lds
sub
dec
les
or
cwtl
test
arpl
and
push
fcmovb
das
xchg
mov
dec
push
xorl
dec
jmp
ret
cmp
loopne
xchg
pop
out
mov
adcb
mov
inc
sub
sub
ret
ljmp
pop
mulb
dec
pop
gs
mov
mov
js
xchg
movsl
xor
loopne
pushf
outsb
shl
imul
mov
mov
sub
mov
jmp
dec
loopne
inc
jge
adc
loopne
pop
adc
mov
or
xor
dec
test
imul
dec
sbb
fdivl
fs
push
inc
and
lods
mov
mov
je
jo
push
mov
push
xor
not
push
push
lcall
add
cwtl
dec
pop
inc
lds
inc
std
xchg
mov
dec
cmp
cmpsl
sub
testl
cmpsb
mov
inc
mov
jno
pop
mov
loope
xlat
cmpb
stos
add
jne
dec
cli
dec
popa
sti
outsl
rolb
adc
jge
adc
dec
mov
scas
or
pop
into
mov
cmpsb
sub
inc
test
sbb
cmp
mov
fdivrs
mov
push
or
cmp
icebp
arpl
pop
pop
mov
inc
and
jmp
inc
in
aas
lods
movsb
lret
enter
clc
sti
out
inc
data16
cmp
mov
add
xor
cmp
into
xor
scas
iret
mov
pop
addr16
cmp
sbb
test
in
shll
pop
rorl
or
push
push
inc
push
add
xchg
pop
mov
jbe
mov
jmp
scas
mov
adc
mov
cmp
test
jbe
jo
and
test
mov
js
dec
mov
out
mov
add
xchg
ja
xchg
xor
sbb
in
jmp
popf
dec
push
dec
push
scas
inc
mov
roll
cmp
jmp
cltd
cmp
mov
fsubs
pop
pop
outsb
movaps
mov
pop
pop
push
cld
sbb
jg
test
pop
mov
mov
inc
add
test
scas
testl
cmc
mov
mov
xchg
mov
mov
xor
fsubrl
xchg
scas
out
inc
mov
pop
mov
sbb
push
mov
out
cmpsb
cs
inc
jp
dec
sub
mov
add
hlt
in
clc
movsb
ss
pusha
and
or
pop
cmp
mov
mov
in
jge
adc
xchg
xchg
hlt
div
xor
adc
pop
lods
inc
mov
iret
push
stc
pop
pop
fcmovb
dec
mov
mov
and
xchg
movsl
sub
jae
pop
add
jns
int
fs
push
negl
inc
fs
sahf
popf
mov
sbb
ja
jnp
clc
clc
xchg
pop
xchg
shrl
inc
incl
sub
mov
lahf
pop
out
mov
roll
sbb
in
mov
push
xor
cld
dec
pop
hlt
cmpl
in
in
adc
loop
inc
add
lcall
iret
rcrb
cmp
daa
in
dec
ret
inc
mov
test
shlb
xchg
shrb
add
out
sarb
mov
bound
adc
repz
mov
jb
dec
lret
cmp
aas
pop
pop
mov
cmp
xchg
aad
stc
fists
inc
addr16
cmp
rcll
jbe
ret
mov
in
and
xor
call
ss
pushf
popa
test
mov
flds
mov
cmpb
clc
nop
pop
dec
sbb
dec
cmpb
inc
inc
add
and
arpl
je
sub
sub
mov
loope
ljmp
xchg
leave
pop
pop
in
out
mov
pop
dec
cmp
xchg
popf
aaa
out
jnp
xchg
sar
push
mov
push
cmp
inc
xor
pushf
arpl
adc
lds
stos
mov
sbbl
repnz
push
lds
scas
lcall
jns
add
xor
out
adc
ljmp
in
mov
fnstcw
mov
lock
add
dec
cmp
loope
mov
ss
ja
aam
jb
push
lcall
and
fisttpll
dec
inc
sbb
and
arpl
js
or
jle
leave
xchg
mov
or
cmp
cmpsb
fwait
pop
fdivs
add
scas
jns
add
popf
icebp
cli
push
inc
add
inc
inc
push
hlt
je
cmc
ss
js
mov
xchg
mull
xlat
jno
jmp
xchg
insl
repnz
jb
stos
in
loopne
sub
pop
jmp
lock
mov
std
pushf
cld
push
or
test
mov
cmp
in
xchg
pusha
mov
xor
mov
jg
jns
fwait
ja
mov
mov
xchg
cmp
pop
pop
in
cmp
xlat
mov
mov
adc
jnp
fucomip
out
sarb
mov
jbe
stos
cmp
int
xchg
js
ret
imul
stos
neg
mov
mov
pop
popf
jp
aas
ret
repz
popa
aaa
imul
rcrl
mov
hlt
shrl
mov
push
adc
lods
lret
pop
imul
pop
sub
aam
lea
and
fdivr
mov
insb
cmpsb
push
aam
fmuls
ret
or
shll
popf
insl
sbb
pop
adc
xchg
jnp
jmp
faddl
add
daa
dec
or
in
jns
sub
pop
lods
and
cltd
popf
aaa
pop
stos
and
loop
hlt
push
or
fcmovnbe
inc
aam
xchg
mov
enter
sub
orb
out
loope
xchg
push
add
push
out
shr
pop
cmp
mov
push
dec
cwtl
mov
or
adc
roll
sub
dec
ret
sub
dec
pushf
cmp
es
xchg
mov
push
or
ja
add
leave
loope
aam
dec
add
cltd
shlb
push
testb
addr16
xchg
jp
lret
mov
jle
inc
sbb
dec
sub
sub
fldenv
jbe
int
dec
dec
lea
bound
inc
gs
push
je
or
adcb
mov
shrb
imul
jo
loopne
sti
inc
sbb
jge
aad
cmpsb
add
insl
sub
mov
mov
inc
pop
inc
popf
cmp
test
aam
ret
test
push
xor
pushf
mov
in
jne
movsl
leave
in
and
dec
test
pop
test
bound
loope
mov
movsb
xchg
stc
stos
push
es
fld
cmp
les
mov
jbe
mov
pop
push
pop
sbb
add
fucomi
sub
mov
xchg
pop
stc
cwtl
adc
mov
or
in
push
dec
jmp
test
adc
les
js
xor
int
mov
gs
sbb
out
bound
inc
mov
xchg
and
cmp
adcb
push
or
popa
mov
ja
stc
mov
test
loopne
in
lret
or
jmpw
dec
scas
or
stc
pop
sub
pusha
push
dec
cld
pop
mov
dec
push
sbb
shrl
shrb
sub
mov
jmp
xchg
push
xchg
mov
jne
mov
pop
mov
bound
sbb
nop
test
fadd
push
rcrb
xchg
pop
stos
mov
inc
xchg
gs
jbe
das
push
enter
ffreep
jbe
or
sub
jne
cld
insb
add
shrl
iret
insb
neg
inc
pop
and
in
jl
cmp
orl
inc
sahf
movsl
jle
in
loopne
jo
pop
arpl
into
jp
xchg
dec
sub
scas
push
js
jg
dec
jno
rorb
cmpsb
dec
pop
call
lods
rcr
adc
lret
jne
mov
sub
lret
jo
or
sbb
inc
jl
retw
inc
mov
and
jno
inc
movmskps
jo
ret
push
dec
or
shrb
aad
adc
cmpsb
lcall
jmp
sbb
jecxz
pop
pop
sub
in
push
arpl
jns
lahf
push
sbb
repz
negl
mov
ret
push
inc
jb
int3
push
aam
ret
sub
inc
call
and
sub
push
inc
dec
inc
mov
adc
scas
mov
pop
and
testb
mov
xor
push
es
mov
daa
pop
mov
inc
cmp
or
aad
xchg
xor
push
push
push
jle
sub
push
imul
add
push
pop
loopne
rol
out
and
mov
jle
fidivrl
dec
daa
mov
sbb
lea
adc
xchg
mov
dec
fxch
sub
dec
inc
lds
mov
dec
sahf
or
mov
pop
popa
aaa
mov
pop
dec
fsubrs
xchg
data16
inc
repz
call
xchg
mov
mov
dec
add
cmp
stos
dec
jecxz
pop
or
lods
mov
cmp
inc
es
lea
add
fmuls
and
inc
repz
push
jbe
popa
cs
mov
outsl
jne
clc
dec
jns
cld
bound
shlb
push
inc
xchg
aad
xlat
xchg
cltd
aas
out
shr
dec
lret
or
test
decb
cld
add
icebp
flds
mov
mov
push
and
xchg
xchg
sub
push
push
and
dec
and
cmpl
lret
and
test
dec
jecxz
insb
stos
mov
and
xor
pop
xor
sub
cltd
and
mov
in
sbb
aaa
rol
sti
iret
arpl
ljmp
xchg
jge
or
cmp
lods
stos
or
insb
cmp
sbb
pop
jb
movsl
sub
mov
adc
popf
cs
sub
scas
xor
outsl
mov
jg
jecxz
pop
pop
sub
pop
fnstenv
jns
std
leave
addl
inc
push
shrb
push
rorb
fldcw
mov
mov
out
jb
mov
xorl
mov
repnz
push
in
inc
sub
inc
inc
aam
mov
aad
push
add
dec
pop
daa
dec
cmp
insb
dec
daa
popa
push
push
insl
or
out
cmp
cli
aad
ret
fcomps
leave
sbb
outsb
adc
sbb
sahf
pop
and
jno
addr16
inc
xorl
lahf
movsb
pop
sbbl
inc
inc
bound
pop
popl
mov
pop
jbe
imul
mov
sbb
push
jbe
adc
loop
test
and
jge
iret
mov
xor
inc
dec
mov
inc
or
cltd
xchg
fdivr
sub
movsb
pop
in
add
mov
cmp
xor
repnz
sbb
stos
daa
dec
gs
or
xlat
adc
sub
gs
mov
stc
push
mov
subl
sbb
pop
pop
in
or
imul
mov
repnz
mov
xor
dec
jno
es
bound
sbbl
mov
xor
subb
xchg
loope
repnz
xchg
data16
mov
cs
xchg
popf
inc
aam
pop
lahf
and
sbb
icebp
pop
stc
fisttps
jg
push
movsb
lods
in
dec
pop
xor
inc
cli
aaa
sub
adc
pop
mov
jbe
enter
push
cltd
arpl
mov
pusha
addl
xchg
movsb
cmp
call
push
lahf
push
nop
push
leave
or
into
pusha
xchg
in
sub
ds
lea
cwtl
push
cld
repz
jle
and
outsl
cmpsb
and
add
int3
and
sub
mov
xor
add
inc
sbb
push
lea
sbb
or
and
lar
das
push
jns
push
dec
jl
mov
imul
das
xchg
mov
lods
sub
push
mov
mov
jmp
dec
in
jg
sbb
adc
add
aaa
cmp
add
add
add
add
loope
or
test
inc
add
xor
add
add
in
sldt
add
add
xor
add
add
test
inc
add
xor
add
add
or
or
adc
sbb
add
add
add
inc
inc
xor
xor
aaa
aaa
aaa
xor
cmp
xor
cmp
inc
inc
inc
cmp
xor
cmp
xor
inc
aaa
xor
inc
inc
cmp
xor
xor
inc
inc
inc
inc
inc
inc
