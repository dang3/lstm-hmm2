add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
mov
bound
cli
stos
sub
stc
add
add
pop
or
add
add
add
add
stos
add
push
add
add
pop
add
dec
add
add
add
mov
add
add
add
add
leave
add
add
add
sti
add
add
mov
add
add
add
add
add
add
dec
add
loop
leave
add
rolb
sbb
add
jp
mov
adc
rolb
or
lods
add
add
xor
mov
adc
rolb
sbb
mov
push
rolb
xchg
add
adc
add
add
add
add
add
xor
mov
and
rolb
popl
xchg
jb
rolb
sbb
add
pop
add
push
add
cwtl
add
add
add
and
mov
adc
rolb
mov
add
add
add
sub
mov
loopne
rolb
popl
out
enter
aam
add
inc
add
test
rolb
dec
add
add
add
jb
rolb
cmpsb
add
outsb
add
xchg
rolb
sti
add
add
add
xor
add
add
add
add
add
add
rolb
adc
or
pop
add
add
rolb
icebp
add
add
bound
push
add
nop
add
add
add
add
add
add
add
jne
add
add
add
add
add
add
add
add
bound
dec
add
push
add
add
add
addb
add
add
add
add
add
loop
pop
add
add
dec
add
add
add
add
add
add
add
rolb
cwtl
add
add
add
add
popl
popa
add
add
add
add
add
add
addb
add
add
cmp
push
add
add
add
add
add
mov
jle
addr16
cltd
add
add
add
add
mov
addb
add
add
push
add
push
add
add
add
roll
addb
add
add
add
add
add
add
add
leave
add
add
xor
sti
add
add
mov
add
add
bound
cwtl
add
add
add
add
add
add
and
push
add
popl
gs
add
add
add
push
add
sbb
arpl
xchg
clc
add
add
sahf
add
add
add
add
bound
push
add
cmpsb
add
js
clc
add
add
add
add
add
inc
add
add
add
adc
clc
add
bound
movsl
add
add
add
add
dec
add
or
push
add
add
jp
rolb
popl
push
add
sub
add
add
loop
or
rolb
rolb
add
roll
rolb
push
or
enter
push
add
add
add
push
add
popl
rolb
dec
add
add
add
dec
add
add
addb
add
add
jae
dec
add
add
add
mov
rolb
nop
add
add
add
add
add
add
xor
pop
add
add
xor
pusha
add
add
flds
rolb
pop
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
add
loopne
mov
ljmp
jge
out
divb
js
xchg
push
mov
xor
push
sub
jge
cltd
pop
jmp
dec
scas
xchg
les
popf
nop
or
add
stos
mov
push
push
add
inc
mull
test
dec
jmp
je
cmp
xrelease
push
mov
outsb
push
into
rcll
jp
add
inc
sub
test
ds
mov
lret
inc
fsubrl
xor
pop
and
pop
sbb
outsb
pop
aaa
xor
shlb
sub
pop
xchg
fildll
mov
dec
jne
stc
xlat
mov
aas
insl
aaa
xor
xchg
cmp
xchg
add
imul
pop
mov
loop
add
sub
cs
imul
insb
insb
lock
inc
mov
arpl
xor
daa
adc
push
sub
adc
dec
ds
add
pop
gs
pop
and
cmp
jae
imul
add
jmp
in
push
add
sub
mov
sbb
mov
xor
outsl
test
push
pop
pop
add
cmc
xor
mov
adc
jnp
push
fdivr
into
cmp
in
popa
mov
sub
in
ficompl
xchg
addr16
int3
lret
sub
cwtl
out
insb
adc
lock
lret
hlt
mov
aad
in
mov
pop
xor
pop
mov
push
push
cwtl
adc
int
adc
arpl
sti
test
lods
lods
mov
out
or
dec
int
push
ss
in
popf
ret
inc
test
cwtl
int
in
push
fnstsw
cmpb
inc
aas
dec
arpl
mov
jnp
outsb
mov
add
into
xchg
mov
popf
adc
mov
add
pop
or
je
jmp
out
repnz
daa
or
shll
xchg
xchg
or
popa
je
sbb
cli
push
mov
cwtl
std
jg
rolb
sub
push
cmp
inc
or
cltd
into
push
xlat
mov
aad
xchg
or
dec
add
adc
es
outsl
ret
push
push
divl
out
cld
jecxz
cmp
das
dec
cmp
out
bound
xchg
lahf
sub
popa
jge
sbb
rolb
or
out
mov
lock
sub
dec
outsb
dec
or
mov
das
out
push
fmuls
stos
add
and
cld
rorb
xchg
mov
xor
popa
clc
xor
mov
aaa
mov
rep
pop
js
inc
adc
sarl
nop
ljmp
jp
inc
daa
cmc
repnz
adc
jb
loope
add
call
movsl
imul
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
out
idiv
out
faddp
arpl
int3
xchg
xchg
jg
dec
push
pop
inc
cs
push
push
push
out
idiv
out
faddp
scas
mov
cmpsb
mov
jle
dec
push
pop
inc
out
pop
ds
push
push
push
out
idiv
out
faddp
scas
mov
cmpsb
mov
pop
inc
and
daa
bound
jnp
jo
mov
lcall
xchg
xor
or
lahf
lahf
ds
jnp
pop
popf
sbb
movsl
jne
xchg
mov
inc
push
mov
and
arpl
inc
mov
out
pop
push
xchg
push
mov
mov
lret
es
and
jmp
setle
jle
inc
imul
ret
ficoms
or
sahf
js
mov
cltd
mov
xor
shll
jle
lea
pop
adc
and
ds
cmpsb
xchg
and
shll
push
pop
clc
adc
imul
dec
outsb
add
mov
jle
mov
dec
push
sahf
adc
idiv
out
faddp
scas
mov
cmpsb
mov
jle
dec
push
pop
inc
cs
push
push
outsl
scas
repnz
scas
ror
iret
ljmp
addr16
xor
xor
jne
inc
insl
outsl
pop
dec
mov
mov
scas
ljmp
das
pop
dec
add
push
daa
bound
imul
cwtl
mov
xchg
jle
dec
push
pop
inc
cs
push
push
push
out
idiv
out
faddp
scas
mov
cmpsb
mov
jle
dec
push
pop
inc
cs
push
push
push
out
neg
mov
icebp
add
ret
aas
outsl
xchg
jmp
xchg
push
pusha
xor
jmp
jae
dec
mov
lret
jmp
mov
fistpll
addl
or
cwtl
jbe
les
cwtl
leave
adc
jmp
sub
fldt
xor
push
icebp
mov
jno
notl
jle
inc
xor
rolb
test
xor
shll
cmp
sub
addr16
jno
cmp
xchg
add
divb
jb
loopne
imul
clc
stos
fs
mov
outsl
lea
aam
and
xchg
xchg
sub
pop
addl
repnz
mov
rolb
ret
mov
inc
jae
sahf
aad
xchg
dec
shrl
pop
pop
aam
xor
cmpsb
lds
pop
gs
imul
leave
push
add
inc
xchg
push
mov
test
mov
add
ja
and
cmp
loop
nop
roll
inc
out
lret
jns
sub
jmp
ds
inc
cmp
in
adc
jge
or
dec
outsb
adc
mov
sahf
xchg
add
and
push
adc
push
rcrl
enter
pop
in
mov
aas
pop
add
loopne
data16
lret
inc
inc
in
xchg
jmp
mov
xchg
sbbl
decb
xchg
repnz
test
outsl
stos
adc
adc
mov
fucom
loope
adc
mov
sub
sbb
mov
adcl
inc
enter
dec
jb
or
push
xchg
cwtl
adc
jo
popf
and
in
sub
mov
fisttps
pusha
ds
cwtl
pop
inc
sarl
outsb
dec
mov
jle
mov
mov
inc
setl
imul
popf
movsb
dec
add
leave
push
les
adc
movsl
loop
jle
stc
movsl
adc
add
aad
sarb
fsubrp
mov
daa
and
sbb
cltd
xor
mov
mov
and
test
mov
push
xchg
mov
add
push
int
sbb
ret
xor
and
push
mov
xor
std
lods
mov
mov
xchg
pushf
add
mov
ret
adc
xchg
inc
ss
jnp
mov
jns
in
cltd
fmull
addl
cmp
and
pushf
das
in
in
ds
sub
rcrl
bound
rcr
mov
rorl
hlt
inc
inc
jge
push
or
cmp
hlt
aad
pop
and
jbe
ret
inc
jmp
dec
test
mov
xchg
insb
cmp
lret
push
dec
test
fbld
dec
js
std
xchg
adc
xor
repz
or
xor
sbb
loope
mov
and
adc
pop
data16
mov
xchg
div
lock
dec
mov
cmpsl
loop
rcl
xchg
movsl
add
inc
loope
test
sbb
inc
shrl
pop
mov
ret
jge
cmpsb
imul
incb
and
popa
jmp
mov
movsl
xchg
rcrb
es
iret
xchg
cmp
mov
in
insb
loope
ror
mov
cmp
popf
and
mov
hlt
int3
inc
mov
mov
xchg
test
or
fwait
xor
pop
cmpsl
jns
shlb
inc
out
pop
and
or
cmc
cmc
jge
push
add
js
mov
add
inc
jle
add
and
cli
fcmovne
repnz
pusha
popa
and
add
jbe
cmc
sahf
cwtl
cld
les
sarl
rcll
dec
addr16
adc
pop
mov
cmpsb
nop
enter
inc
push
mov
sbb
xchg
shlb
mov
js
mov
jb
lret
mov
in
aad
les
push
js
push
push
inc
mov
andb
sbb
test
mov
adc
scas
push
jns
mov
out
outsl
mov
dec
add
shll
mov
and
or
dec
test
xchg
xchg
outsl
hlt
ljmp
add
sahf
inc
xchg
outsb
mov
push
sbb
cs
aaa
add
sbb
jae
mov
test
iret
stc
or
pop
pop
sub
insb
mov
or
xchg
mov
add
outsb
in
push
popf
and
negb
and
sub
adc
popa
push
leave
scas
inc
push
aam
int3
jg
mov
movsl
test
pop
ja
and
shrl
push
ss
jge
ficoms
mov
into
cmp
xlat
into
pushl
icebp
push
and
faddl
icebp
pop
sahf
mov
xchg
fmul
hlt
xlat
mov
loopne
lock
addr16
ret
xchg
inc
push
orl
scas
inc
xchg
ds
fistps
pop
mov
mov
shlb
push
sub
xor
lret
xchg
jo
fildll
rol
cmp
cmp
sub
sbb
int
iret
jae
xchg
fldenv
lret
cwtl
idivb
mov
add
or
mov
mov
imul
xchg
and
mov
mov
std
jecxz
push
dec
xor
sub
stos
xor
pusha
mov
xchg
push
test
pop
pop
ret
jmp
and
jbe
out
add
sbb
cltd
inc
inc
mov
mov
subb
mov
pop
js
imul
dec
lret
jno
call
lcall
mov
je
mov
jmp
je
fnstenv
cmp
jge
fdivrs
sbb
sub
xchg
mov
pop
pop
cmp
gs
xchg
or
les
ret
int3
out
pushf
jl
jle
cmpsl
aad
adc
ljmp
pop
jo
scas
xchg
out
in
fistl
pop
adcb
mov
leave
and
cmp
adc
jl
inc
push
mov
fwait
aas
cmp
iret
aas
mov
dec
imul
and
insb
or
push
int3
pop
cmp
pushf
sub
test
std
jmp
xchg
sub
adc
aas
orb
cmp
shrl
fs
inc
xor
je
je
mov
cwtl
or
insb
mov
adc
xchg
push
in
pop
pushf
mov
pushf
sub
jp
cmp
loopne
mov
mov
jno
decl
add
stos
inc
fdivp
std
dec
ret
fwait
outsl
fistl
lds
ss
inc
sub
sbb
repnz
aam
js
nop
test
leave
das
ja
mov
cld
pop
jnp
cmp
pop
push
mov
hlt
call
mov
lcall
jnp
out
jg
das
arpl
cmp
call
adc
push
mov
fsubrl
jo
sbb
mov
gs
sub
mov
add
loop
sub
je
xchg
inc
dec
in
insb
push
rcrl
leave
fcom
sbb
test
icebp
push
mov
dec
int3
sub
int
insb
in
jne
add
mov
push
push
icebp
fldcw
sbb
and
add
dec
fbstp
shlb
adcl
bound
pop
stos
mov
pop
jle
dec
sub
adc
filds
mov
cmp
adc
mov
bound
mov
and
movsb
incl
stc
xchg
pop
lret
insl
dec
cwtl
xlat
xlat
loope
insl
jae
fisubs
mov
xlat
or
lea
sub
xor
push
adc
push
mov
cmp
add
imul
sub
rcrb
mov
cli
and
andl
aam
mov
gs
xchg
inc
scas
clc
xchg
lds
push
or
out
and
jg
insb
pop
sbbb
stc
data16
sahf
jbe
and
jmp
sub
or
push
add
sbb
jg
push
out
scas
in
cwtl
jnp
xor
insl
dec
cmpb
test
in
inc
imul
add
fwait
or
push
test
shrb
pop
mov
sbb
rclb
fists
mov
xor
bound
popa
stos
rcll
dec
cmp
cmpsl
in
call
fstpl
sub
clc
movsb
pop
add
loop
fnstenv
mov
inc
jecxz
rclb
mov
loop
lret
xchg
in
push
popf
add
push
data16
adc
xlat
dec
or
pop
cmp
cmp
int
xlat
sub
les
inc
add
inc
sbb
push
or
out
mov
dec
xchg
mov
mov
inc
sub
push
imul
dec
lods
push
ja
jbe
leave
lods
mov
sysret
out
int
jae
pop
sti
test
popf
stos
mov
out
mov
in
cmp
inc
mov
int3
jmp
mov
push
mov
and
pop
dec
and
and
sub
out
inc
enter
add
sub
inc
pusha
mull
and
sbb
pop
cmp
xor
test
loope
and
and
loopne
xlat
xlat
cld
call
cmpb
pop
outsb
push
push
jo
push
push
mov
pop
shr
jns
jg,pn
pop
xchg
xchg
push
cmpsb
and
fwait
cmpsb
inc
cmp
inc
scas
lea
jcxz
psadbw
outsl
xchg
in
dec
popa
sti
mov
bound
int3
fwait
icebp
add
leave
jae
jp
in
push
loope
sub
icebp
icebp
mov
mov
pop
insl
mov
or
push
stc
scas
add
lods
fwait
call
shl
or
cmp
sbb
dec
in
icebp
sub
or
in
dec
inc
jecxz
push
daa
jae
aam
inc
mov
mov
rcrl
enter
sub
cmc
or
ficoml
cmp
sub
mov
jmp
mov
fsts
icebp
fisubrl
imul
inc
ja
outsl
outsb
xchg
xchg
pop
jge
gs
gs
xchg
jp
movsb
push
decb
outsb
xor
cmp
xchg
fsub
adc
es
push
jmp
popf
ret
or
in
inc
mov
lods
push
adc
pop
push
and
or
insl
pusha
ja
cli
repnz
int
lds
pop
js
mov
scas
aaa
cmpsl
aaa
xchg
fs
sahf
fs
arpl
ljmp
sub
mov
pushf
outsl
inc
shll
orb
js
rolb
pop
jge
add
mov
rolb
outsb
sub
jecxz
mov
rcrl
dec
nop
imul
xor
sub
pop
xor
lcall
out
popf
cmp
fmuls
fstl
pop
stos
call
mov
sbb
aaa
addr16
mov
or
jle
std
movsl
repnz
push
testb
inc
cs
sub
add
lods
roll
cmp
sub
icebp
in
xchg
rclb
push
fs
icebp
mov
stc
pop
push
pop
adc
sub
pop
aad
outsb
jl
movl
pop
pop
mov
imul
jnp
insb
pop
mov
es
push
popf
sub
fstpt
pop
add
leave
sbb
inc
pop
push
jo
in
roll
pop
mov
xchg
icebp
pop
mov
or
test
mov
or
inc
fwait
mov
adc
cmpsl
mov
xor
leave
popf
or
cltd
or
in
xchg
inc
hlt
pop
xor
xchg
fadds
mov
add
loope
inc
add
mov
pusha
mov
push
test
popf
mov
lods
mov
aam
sub
mov
sbbb
imul
lods
rcrb
ds
add
sarb
pop
in
mov
shlb
lds
jp
stos
inc
in
adc
popf
stos
sbb
ret
adc
mov
xor
gs
rorl
movsb
xlat
andl
aam
mov
andl
mov
mov
pop
add
ds
bound
fiaddl
push
sbb
push
inc
dec
xchg
scas
cmp
js
mov
adc
sbb
out
out
scas
lret
test
mov
lods
cmpsb
jle
adcl
nop
ret
jns
pop
cmpb
mov
fcomps
fcomip
and
imul
inc
xchg
mov
pop
movsl
and
sti
imul
xor
sbb
cmpb
pop
or
pusha
in
mov
xchg
shrb
int
popa
sub
xchg
xchg
bound
es
test
movl
dec
and
mov
cmpsl
outsl
hlt
test
adc
sbb
addr16
incb
shll
ljmp
aas
add
leave
cmp
in
outsb
pusha
int3
orl
subl
xor
push
jmp
pop
push
out
cmc
sbb
loopne
xor
cmp
rorl
sbb
xchg
or
mov
jge
sub
push
mov
jg
aam
and
pushf
pop
inc
mov
add
fadds
and
dec
sub
iret
rclb
mov
aaa
jmp
jge
adc
enter
daa
mov
negl
sub
aas
jno
test
inc
sarl
push
pop
int
xchg
xchg
inc
jne
pop
fs
xchg
jp
test
adc
das
mov
dec
test
repnz
cmpsw
xor
jo
xor
mov
mov
neg
shl
aad
mov
lahf
bound
iret
inc
dec
cmp
in
test
cmpsl
js
xchg
jno
xor
inc
cs
pop
cmc
fcoms
into
jne
push
push
cli
imul
daa
outsl
dec
inc
xchg
das
pop
jl
xor
lods
jl
cmp
repnz
xchg
cli
cmpsl
mov
sbb
mov
xor
outsb
fwait
popf
ja
lret
or
leave
shll
xor
enter
push
mov
cmp
mov
sub
imul
aas
rcr
clc
sub
xchg
cmp
dec
insl
inc
mov
xchg
cmc
adc
sub
imul
jl
lcall
out
inc
jnp
les
xor
cmp
fdiv
add
add
cmpsl
xor
mov
aad
bound
outsb
xchg
or
movsl
or
inc
push
inc
jle
or
shll
data16
sub
cli
push
loope
jbe
pop
jl
add
xchg
cmp
outsb
sub
push
les
push
jge
sub
daa
in
maskmovq
idivl
or
insb
xor
jp
test
lahf
mov
movsl
jno
and
nop
dec
lea
push
aad
add
mov
sti
adc
push
xchg
lock
xor
in
lahf
inc
int3
andl
orl
or
inc
into
cmpsl
push
cld
and
pushl
fcomip
std
int3
arpl
lret
scas
test
test
out
aaa
dec
cli
and
sbb
or
push
add
cwtl
jle
ljmp
repz
mov
cwtl
or
mov
xchg
mov
out
fsub
lea
sub
in
xor
or
mov
into
iret
add
ds
bound
int3
dec
pop
mov
jmp
gs
pusha
xchg
cli
aas
lods
inc
icebp
pop
xor
les
insl
repnz
add
shlb
mov
jb
negb
mov
xchg
ja
ja
or
sub
adc
subl
xor
sbb
cmpsl
sti
dec
dec
icebp
jo
xor
jge
jecxz
sub
mov
mov
sbb
xor
sub
push
loopne
imul
and
ljmp
sahf
in
out
mov
movsl
mov
pop
jle
mov
add
mov
push
inc
sar
push
out
lret
stos
sbb
fwait
ss
imul
inc
js
cmpb
outsl
shll
add
xor
push
jnp
sub
jl
std
mov
pop
mov
and
dec
aam
xor
in
movsb
adc
jno
xchg
outsb
cld
stos
mov
clts
jg
xchg
xchg
aas
cmpsb
cmc
sbb
lret
mov
push
clc
popl
mov
jecxz
scas
rep
mov
push
push
loope
mov
mov
jno
push
jl
sub
inc
stos
xchg
jno
fldt
adc
xchg
lods
ljmp
popa
push
xor
shlb
dec
imul
ljmp
xchg
outsb
xor
lret
lods
mov
push
aad
inc
incl
dec
push
nop
sahf
lret
test
adc
pop
repz
cmp
cmpsb
ret
fsubl
jns
out
adc
mov
lock
outsb
dec
jns
in
fs
dec
stos
dec
mov
xchg
inc
xchg
in
andl
ja
xchg
rcr
sahf
push
or
gs
pop
inc
adc
adc
dec
jo
adc
jnp
adc
fsubrs
loop
sbb
cs
orb
insl
adc
mov
stos
stc
jnp
hlt
push
mov
mov
js
scas
icebp
bound
rcrb
adc
in
xor
lcall
jmp
mov
sub
sarl
loope
xchg
jbe
popf
je
and
xchg
jns
out
jmp
lock
nop
mov
ret
jg
shll
xor
ljmp
and
fcompl
cwtl
push
cld
flds
lret
mov
mov
dec
and
repz
jno
pop
pop
cmpsl
in
cs
test
ljmp
ret
jge
clc
outsb
cmpps
xor
sub
lret
adc
aaa
lcall
push
mov
xchg
cmpsl
mov
sti
pop
aam
insl
adc
mov
std
out
lea
mov
loopne
xlat
aad
xchg
in
push
mov
mov
add
btcl
xchg
sub
mov
mov
xor
sub
cmc
or
jae
ja
jp
add
push
dec
popa
je
inc
out
lret
dec
subl
inc
scas
pusha
leave
call
fidivrs
xor
js
addr16
jge
cltd
bound
or
sub
sbb
xchg
inc
test
mov
lret
int
jo
and
push
and
xor
sub
mov
or
jo
dec
sub
dec
and
stos
movsl
and
mov
push
dec
jb
cmp
jns
pop
push
fistpl
pop
rolb
lods
icebp
lock
mov
cwtl
aas
adc
mov
or
push
xor
cmpsl
lods
jb
dec
aad
pop
xchg
popa
leave
data16
cltd
mov
ret
pop
adc
pop
and
in
xchg
lods
pusha
mov
cmpsb
sbb
dec
lds
das
sbb
jne
fistpll
pushf
and
dec
stos
cmpsl
cmc
iret
mov
out
mov
pop
mov
loopne
jle
cmp
or
mov
fidivs
pop
xchg
std
jl
sub
stos
mov
pop
negb
sbb
push
clc
cli
repnz
test
imul
pop
cmpsb
loopne
jmp
lods
adc
or
cmc
sub
add
xor
xor
or
outsl
rol
test
jne
dec
jnp
rorb
push
jmp
rol
insb
cli
lds
das
xchg
fnstenv
ds
push
fcoms
xor
sahf
in
sti
iret
testb
cwtl
xchg
and
stos
adc
dec
addr16
icebp
sub
adc
cmp
xor
jle
xor
repz
pushf
movsb
fistps
fnsave
fmul
and
inc
cmp
je
mov
daa
aam
mov
jae
mov
mov
mov
jns
leave
mov
outsb
lcall
out
cmp
mov
div
cmp
xor
in
xchg
shll
jmp
cmc
fsubl
daa
cmp
orb
aad
cmpb
dec
cmpsl
test
jo
inc
jo
jge
or
repz
cmp
add
jge
ja
sahf
cltd
lods
imul
mov
ret
outsb
cmp
pushf
push
and
sub
jmp
push
mov
add
pop
popa
push
sbb
shl
in
add
or
mov
jmp
shr
mov
sbb
jl
js
mov
in
sub
paddw
andb
idivl
imul
cmp
add
mov
jmp
xor
mov
push
dec
cmp
and
pop
addl
pop
cmpsl
rcrl
test
shr
jnp
mov
or
push
addl
xor
rol
std
gs
aad
mov
cmpsb
or
call
insl
xchg
ds
mov
add
push
std
movsb
adc
cmp
jg
fsub
repnz
mov
adc
sub
orb
das
mov
insl
jbe
jmp
mov
xchg
cmc
pop
mov
mov
pop
mov
faddp
scas
mov
cmpsb
mov
jle
dec
push
pop
inc
cs
push
push
push
out
idiv
out
faddp
scas
mov
cmpsb
mov
jle
dec
push
pop
inc
cs
push
push
push
out
idivb
dec
faddp
cs
cmpsb
mov
jle
dec
push
pop
inc
cs
push
push
push
out
idiv
out
faddp
scas
mov
cmpsb
mov
jle
in
pop
xor
dec
fnstcw
outsb
stc
clc
negb
ret
mov
mov
mov
imul
adc
mov
rolb
mov
gs
bound
pop
add
and
inc
add
and
mov
subb
xor
xor
popa
cmp
ss
mov
mov
jle
mov
inc
push
stc
es
sbb
mov
adc
je
mov
cmpsb
or
movsl
cmpsl
sbb
insl
inc
jge
fcomps
lock
hlt
jge
cltd
enter
mov
xchg
mov
pop
mov
jae
jb
push
sti
mov
cmpsb
sbb
lock
call
cmpsb
sbb
and
jbe
add
daa
scas
inc
in
mov
pop
push
inc
cmp
xchg
push
lea
push
jne
ljmp
aaa
add
or
and
js
sbb
or
fnsave
adc
add
addr16
push
push
xchg
cmpsb
jmp
mov
jb
lret
sbb
push
jnp
push
or
xor
repnz
fwait
pop
nop
iret
out
lds
adc
and
add
mov
movsb
shlb
test
mov
adc
add
push
jge
and
ja
jno
adcl
mov
xor
push
add
and
inc
add
rolb
mov
xor
push
add
and
inc
add
scas
fisubrl
aad
inc
icebp
push
pop
repz
ss
fisubl
xor
mov
cli
mov
bound
jo
rol
jns
andw
jnp
adc
push
popf
std
ja
push
fnstenv
ret
in
sbb
cmp
add
push
negb
aaa
push
clc
jns
decl
outsl
outsl
fistpll
fsubr
rcr
inc
pop
sub
cmp
xchg
stos
push
pop
stc
dec
mov
jp
and
neg
dec
lret
punpckldq
movsb
es
ds
mov
stc
daa
roll
and
gs
sti
inc
gs
rcrb
pop
pop
or
and
addr16
mov
les
push
pop
sbb
sub
xor
js
jmp
adc
daa
xchg
enter
dec
sbb
mov
inc
cmpsl
adc
pop
push
inc
add
push
aad
push
push
mov
arpl
jecxz
icebp
inc
jg
jecxz
xchg
adc
mov
pop
or
push
inc
fisubrs
mov
ss
pop
or
xor
imul
adc
sti
add
pop
inc
adcb
lcall
int
mov
pushf
jo
nop
fistps
adcl
jmp
fists
push
inc
push
out
xchg
jp
push
dec
dec
xchg
gs
nop
js
shrl
es
roll
aam
jp
decb
fdivp
mov
ljmp
into
ljmp
imul
or
inc
test
and
adcl
mov
lea
test
jne
and
ret
popa
stc
fs
in
add
pop
out
sbb
pop
mov
test
dec
jb
pop
insl
sub
and
push
in
subb
jmp
jne
or
fwait
mov
outsl
dec
gs
test
push
inc
sbb
xor
arpl
xchg
xor
dec
cmp
push
mov
into
cs
and
and
cmpsl
dec
stos
lret
pop
cli
jmp
jp
or
inc
cmp
adc
mov
jo
mov
movsb
pop
sbb
movsl
xor
mov
call
out
lods
imul
sbb
add
fs
xchg
lret
inc
test
sbb
push
lea
pop
dec
in
and
inc
ficoms
sub
mov
fxch
cmp
xorb
xor
sahf
iret
cmp
scas
stos
adc
lods
inc
fisttpll
adc
ds
cmp
int3
scas
mov
xchg
push
adc
sbb
scas
divb
xchg
mov
jle
in
adc
mov
mov
test
or
pop
ficomps
xlat
out
lods
jae
arpl
imull
and
cli
outsl
sbb
jne
cs
cmpsb
push
mov
dec
inc
jns
pop
hlt
xchg
jbe
lods
mov
inc
xchg
xchg
add
dec
mov
insl
movsb
std
cmp
and
mov
mov
scas
icebp
cld
iret
ret
cmp
or
xchg
sub
popa
call
mov
push
out
mov
jecxz
push
ljmp
add
mov
push
mov
pusha
enter
xchg
mov
sub
and
and
icebp
cltd
xchg
dec
mov
test
test
pop
push
pop
pop
test
lods
test
out
ja
push
in
xor
sub
dec
push
jne
test
push
std
loope
scas
insb
xchg
rcll
and
ret
adc
jns
inc
pop
lret
in
loop
jbe
mov
scas
and
std
insb
cmpsl
jge
pop
mov
or
out
lret
inc
sti
mov
insb
push
mov
mov
mov
xlat
shld
lea
pop
mov
fadd
cltd
sahf
mov
pop
loopne
cs
in
sbb
xchg
xchg
cmp
add
adc
testl
push
test
test
xor
xchg
int
inc
in
cli
outsb
sti
xchg
dec
jno
lds
test
pushf
addr16
push
inc
jne
mov
scas
xor
loope
js
aaa
dec
pop
jbe
dec
lcall
mov
adc
push
lds
jle
outsb
jl
dec
pushf
or
les
subb
in
mov
fisubl
sbb
cmp
push
cmpsb
inc
test
ds
dec
dec
fidivs
jnp
out
push
fnstsw
movsb
mov
pop
mov
mov
movsb
lods
jmp
cmpsb
shr
push
xchg
adc
shrb
movsb
mov
push
shlb
ret
and
adc
jp
not
mov
rclb
xchg
push
insb
mov
and
push
mov
dec
jl
fdivr
mov
fidivrl
mov
push
inc
add
outsl
cmp
and
lcall
xor
icebp
mov
fsubs
pop
jnp
in
xchg
aad
repnz
popf
mov
mov
ds
xor
cmp
push
sti
and
fstps
fildl
push
mov
mov
insb
enter
je
add
push
fistpll
mov
push
outsl
jge
not
js
shl
pop
hlt
ljmp
adc
jno
sbb
or
daa
rcrl
or
pop
sub
pop
leave
stos
cs
push
fistpl
ret
pop
ret
aam
sub
inc
cmp
testb
push
pop
in
cmc
jmp
fnstenv
lret
cwtl
adc
jmp
pop
or
xchg
fwait
notb
inc
loop
lods
cltd
inc
out
mov
jbe
jle
sub
push
xor
xchg
cmc
clc
push
mov
xor
cmp
cmp
mov
shlb
popa
scas
into
dec
adc
inc
lret
jno
ret
repnz
jne
adcl
xchg
cltd
outsl
ljmp
sbb
sbb
adc
lret
loopne
in
imul
pusha
filds
sarl
fdivrl
push
mov
add
pushf
jo
outsb
jns
sbb
fmul
jge
ljmp
xlat
mov
mov
sahf
push
xchg
fs
sub
push
dec
fmull
aad
pushf
leave
stos
sbbb
mov
repnz
jg
jge
test
mov
pop
sahf
fiaddl
pusha
push
inc
outsb
aam
mov
inc
stos
pusha
and
push
in
orl
shl
insl
push
shr
daa
out
inc
cmp
adc
mov
test
jae
mov
lret
push
outsl
push
fdivrs
push
adc
xchg
mov
cmc
xor
sub
pop
test
stos
adc
jge
aam
jo
xchg
mov
cmp
ret
mov
jae
or
sahf
fcoms
fldl
sbb
nop
adc
mov
outsl
fs
das
es
scas
dec
gs
or
dec
and
cmp
inc
jg
push
and
xor
jno
sbb
scas
jne
ss
out
dec
xor
sbb
xchg
sub
dec
test
or
je
lret
push
aam
dec
dec
cmp
mov
ja
cs
or
pushf
cltd
mov
cmp
dec
xchg
or
and
ds
xchg
fsubrl
ficoms
lea
mov
lods
dec
jbe
mov
outsl
xor
loop
aad
rclb
sarb
stos
jg
pop
adc
into
sub
and
bound
lods
notb
xorl
xchg
sub
mov
xchg
cmp
pop
in
mov
in
test
sub
mov
mov
and
mov
adc
mov
xchg
sub
mov
mov
enter
dec
mov
xchg
dec
ljmp
fisttps
adc
or
lods
fsubrl
xchg
mov
js
insb
xor
imul
jecxz
push
cld
lcall
mov
mov
ret
or
fcoml
movsb
sub
div
insl
ss
jmp
lods
adc
jne
inc
stos
xchg
outsb
iret
lcall
lahf
adc
outsb
test
mov
dec
std
sub
pop
xchg
sbb
add
iret
push
shl
js
cltd
mov
cmp
xchg
imul
movsl
test
ss
pop
je
pop
mov
out
nop
divb
push
rcrb
std
cmpsl
xor
cwtl
pushf
pop
rcrl
xor
add
push
add
sub
cwtl
fidivl
and
mulb
negl
loopne,pn
xchg
push
push
dec
pop
scas
mov
cmp
repnz
movsb
test
add
lods
enter
jl
mov
adcl
call
mov
loope
mov
iret
sub
mov
rclb
cwtl
pop
call
pop
add
dec
sar
adc
lods
test
sahf
pop
lahf
mov
std
jae
mov
lods
insb
hlt
pop
inc
lea
adc
sbb
inc
xchg
std
mov
aam
mov
repz
jae
add
add
fisubl
test
xchg
movsl
and
scas
adc
dec
or
push
mov
orl
jmp
or
out
mov
push
test
nop
hlt
pushf
out
ret
inc
in
clc
fwait
hlt
pop
fnstcw
lea
mov
fwait
fs
dec
fsubrs
popa
test
xchg
mov
push
arpl
xchg
cmc
mov
dec
fildl
pop
sbb
rorb
sbb
mov
mov
sbb
jne
sub
sub
push
sub
xor
add
mov
adc
cmp
adc
or
inc
sbb
mov
mov
pop
insb
mulb
and
fidivrl
xchg
xchg
inc
jge
je
test
xor
adc
pop
mov
mov
ror
pop
push
sbb
dec
cmp
or
mov
leave
test
rcrl
idivl
mov
clc
push
shrb
pop
ficoms
push
ficomps
nop
pop
stc
and
sahf
lea
jno
or
sub
inc
push
nop
push
lea
jae
cmp
sbb
mov
mov
mov
cs
cmpsb
sahf
mov
mov
imul
cmp
and
stc
clc
pop
mov
outsl
sub
subl
mov
jns
add
pop
out
and
je
out
mov
sbb
iret
and
pop
push
aas
roll
mov
cmp
rorl
cmp
xchg
repnz
push
xchg
mov
sarl
leave
fwait
dec
push
lock
imul
sub
add
mov
mov
ret
adc
xor
adc
sub
sub
or
ror
cmp
das
mov
add
insl
insb
dec
push
cld
inc
sbb
fisubl
mov
or
mov
hlt
xchg
fcoms
jecxz
jg
add
fists
data16
push
dec
insb
push
cld
subb
lock
shrb
fsubrs
mov
sbb
into
jecxz
popa
int3
arpl
and
lea
popf
sti
sarb
or
test
cmc
cs
sahf
dec
mov
out
mov
lret
ljmp
lods
lds
cmp
and
push
adc
xchg
iret
push
xor
xchg
pop
in
push
insb
js
dec
fidivrl
rcll
sahf
rcrb
xchg
movsb
mov
ret
into
xor
leave
jno
xchg
cmp
xchg
mov
push
or
stc
mov
xchg
daa
inc
cmc
test
xchg
repnz
push
push
mov
push
pop
in
sbb
mov
add
cmpsl
int3
and
idivl
adc
and
xor
cwtl
xchg
xor
icebp
cli
jno
or
cmp
cmpsl
mov
test
test
add
stc
sub
push
test
xchg
daa
scas
arpl
cmpsb
mov
shlb
popf
cmpsl
jae
pop
cmp
sarl
jl
xchg
push
lcall
mov
pop
push
das
dec
mov
inc
xor
mov
mov
hlt
jge
js
add
pop
fcomip
sahf
and
lock
dec
mov
jbe
adc
js
repz
mov
testb
sbb
movsl
adc
int
movsb
and
fsubs
adc
jb
inc
dec
mov
adc
mov
sti
pop
push
xlat
mov
jb
aaa
xchg
jge
es
ficoms
mov
imulb
movsl
ret
data16
dec
add
jle
aas
fwait
iretw
cld
dec
shl
xchg
andl
ret
pushf
xchg
jl
or
subl
dec
inc
bound
inc
mov
mov
adc
repnz
jae
jno
mov
push
fsin
in
movsb
mov
popf
inc
and
push
mov
push
xor
jno
mov
xor
lret
les
push
out
and
aad
mov
mov
subb
out
iret
jmp
sbb
mov
cs
sti
and
xor
mov
dec
out
les
cs
push
ds
jle
sub
in
push
mov
scas
inc
mov
insl
in
mov
push
jns
fcompl
mov
push
es
emms
das
inc
les
pop
outsb
cli
mov
shll
push
jecxz
push
mov
ja
mov
add
lcall
cmp
pop
push
shl
test
mov
mov
in
scas
adcb
push
mov
stos
mov
xor
fsts
icebp
sbb
sbb
test
and
movzbl
fcoml
add
xor
insb
and
inc
push
movsb
mov
ds
push
imul
sti
mov
mov
daa
mull
pop
push
shrl
lret
and
add
hlt
mov
nop
pop
adcb
sbb
rclb
addb
sbb
pop
jl
test
jne
jae
xor
push
pop
xchg
shl
in
mov
fs
mov
jno
dec
and
repnz
dec
pop
lods
jo
pop
lahf
cmp
cwtl
dec
movsb
mov
push
jmp
mov
cmpsl
fmull
xchg
mov
add
add
xchg
adc
cmp
bswap
jmp
repnz
les
repz
fs
sub
sub
pop
ja
clc
lods
insb
iret
insl
jno
popa
jbe
xchg
cmp
out
mov
mov
sub
test
loopne
lahf
test
inc
sub
loop
push
shlb
sbb
xchg
xchg
xor
imul
lods
sub
in
lods
add
lock
out
jge
mov
xchg
dec
enter
mov
xor
mov
mov
sysexit
adc
mov
jp
ja
movsl
lret
aad
addr16
loop
inc
ja
out
xchg
rcrb
out
mov
insl
pop
xchg
ds
into
stos
lds
jle
das
sbb
xor
or
add
and
pop
jl
popa
ret
nop
jecxz
sub
addr16
lods
xchg
inc
lahf
push
or
cmp
jmp
out
mov
inc
pushf
mov
xchg
daa
mov
loope
sbbb
call
xchg
push
and
jp
mov
leave
push
out
adc
dec
cmp
cwtl
mov
mov
fwait
jns
ror
cmp
xor
fdiv
enter
jl
scas
mov
fstl
in
sti
mov
mov
ds
adc
mov
sub
fwait
pop
mov
cmp
push
addr16
jle
xor
dec
cs
cmpsl
cmp
hlt
mov
cmp
enter
mov
sbb
push
hlt
xchg
das
out
roll
lret
xor
cmpsb
pop
ds
mov
popa
lock
data16
add
mov
jp
jl
in
lcall
lds
or
xchg
mov
dec
adc
mov
adc
movsl
fnstenv
mov
jg
andl
popf
inc
lahf
mov
cld
aaa
fidivl
mov
or
lods
inc
jo
mov
adc
mov
pop
and
sub
cmp
adc
iret
jle
divl
pop
mov
mov
push
dec
stc
inc
jns
or
sub
jp
cmc
push
inc
sbb
nop
out
adc
lret
nop
popa
jecxz
inc
test
insb
or
add
add
xor
inc
scas
dec
outsl
mov
adcl
icebp
push
cmp
xor
sbb
mov
mov
dec
xor
jo
popf
in
adc
ja
cli
xor
add
or
ss
or
dec
mov
adc
sbb
mov
mov
mov
jp
xchg
jnp
leave
jb
fisttps
fdivs
inc
pop
int
test
les
lahf
pop
push
ljmp
cmpsl
or
xor
fcmovnbe
lcall
int3
push
stc
pushl
sbb
mov
lock
jbe
stos
inc
aam
subl
popf
outsl
adc
jbe
jecxz
test
sbb
add
jp
dec
mov
hlt
push
lahf
fcompl
pop
loope
xor
js
jo
hlt
scas
jp
mov
sbb
lods
lds
cmpsb
mov
insb
and
cmc
jbe
inc
dec
arpl
jecxz
sahf
jo
jecxz
lahf
not
test
sbb
ficomps
loope
sbb
rorb
add
push
in
fstpt
in
and
xchg
xor
sbb
xor
ss
imul
rcll
xchg
dec
lcall
cmpxchg
mov
xchg
loope
jle
imulb
push
cli
lods
and
cld
mov
push
nop
cwtl
cld
inc
xor
std
out
mov
and
in
dec
lea
xor
cmp
jecxz
and
enter
ja
dec
xlat
push
cs
xchg
sbb
and
push
mov
mov
aaa
mov
mov
cltd
in
mov
aad
je
jnp
adc
rclb
adc
add
mov
stos
cmp
and
push
mov
lock
sub
insb
imul
movsb
dec
rep
add
cmp
mov
fisubrs
jecxz
cli
sahf
fldenv
mov
lahf
insb
mov
xchg
mov
fisubrs
jecxz
popa
pop
stc
sti
adc
int3
mov
cmpl
sbb
out
fwait
test
out
jl
lcall
jmp
jo
pop
pop
jnp,pt
sbb
add
xchg
mov
fildll
and
pop
call
js
into
das
outsb
mov
mov
in
out
mov
mov
lods
icebp
jnp
fistpll
mov
shll
imul
shr
push
stos
inc
mov
jl
jl
ret
daa
or
rolb
jmp
pushf
xchg
inc
fwait
out
push
pop
fisttpll
daa
xchg
fsubs
mov
ljmp
adc
repnz
enter
seta
lcall
sbb
sbbl
mov
shrl
jns
scas
push
mov
movsl
add
push
ja
add
mov
and
insb
imul
inc
pusha
popf
call
iret
sub
add
aaa
jo
cmp
fwait
mov
les
flds
icebp
xchg
lods
cmp
xchg
jmp
ljmp
xchg
and
mov
test
adc
mov
mov
rol
lea
jl
jle
mov
add
mov
les
mov
dec
mov
cli
popf
insb
adc
push
test
pop
daa
lret
dec
cmp
mov
cmp
mov
icebp
inc
sbb
fwait
xchg
enter
dec
mov
loopne
xchg
cli
ficompl
push
divb
xor
call
ljmp
cmp
pop
enter
fwait
pop
aad
sub
clc
stos
popf
add
ror
fstps
lods
cmp
in
push
jns
push
in
adc
jle
shlb
nop
or
and
push
cmp
sub
clc
adc
sub
sub
cmp
rdtsc
rorl
jae
pusha
cmp
test
push
inc
nop
in
loope
inc
cmp
shll
xor
icebp
mov
idiv
popf
mov
cli
push
or
fmul
adc
xor
push
inc
xor
jge
mov
xor
mov
xlat
inc
push
fdivrs
stc
inc
push
loope
orb
es
jmp
fnstsw
jp
fiadds
adc
scas
cmp
mov
ret
insb
mov
and
ficompl
test
adc
mov
xor
sbb
adc
dec
mov
stos
ret
scas
cmc
cld
sarl
clc
adc
xor
mov
jno
out
or
mov
inc
cmp
dec
pop
js
enter
push
sbb
pop
and
sbb
negl
cld
popa
mov
lock
test
aad
pop
repnz
pop
jbe
mov
jns
mov
mulb
mov
xchg
mov
outsb
or
and
enter
mov
aas
addr16
pop
out
repz
sbb
lret
dec
test
les
orl
stos
out
std
push
and
adc
xchg
ja
in
lahf
jl
or
popa
xlat
cltd
ret
in
aad
lds
adc
xor
push
adc
mov
movsl
loop
rolb
mov
xor
push
add
and
inc
add
lret
hlt
mov
leave
aad
les
sbb
add
ss
push
sbb
lods
push
mov
sbb
mov
mov
xor
push
add
pop
stos
push
jp
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
cs
fs
push
pop
inc
pop
sub
push
xor
imul
in
xchg
xchg
mov
in
xchg
xlat
test
arpl
fs
fs
inc
pop
xor
and
adc
add
cmpsl
in
mov
push
xchg
mov
movsl
notl
jge
dec
pop
pop
pop
sub
inc
adc
cmpsl
out
xchg
mov
mov
in
mov
sbb
cmp
fcomps
sbb
sbb
outsb
pop
sbbb
daa
push
insl
push
lcall
int
cmp
js
orb
rep
js
or
sbb
sub
xchg
mulb
cmp
sbb
lret
ds
inc
sbb
iret
inc
adc
ja
dec
add
rcrb
aam
cwtl
adc
div
pop
aam
insl
xlat
xchg
out
enter
sbb
cwtl
add
adc
cld
pop
sbb
push
mov
out
scas
jl
xchg
jle
and
mov
scas
cld
hlt
int
fimuls
cmpsl
sbb
je
mov
je
test
mov
fs
push
pop
push
pop
and
ja,pt
inc
sbb
mov
xchg
xchg
lods
out
notl
add
inc
and
and
push
and
adc
scas
cmpsb
aam
out
xchg
shlb
dec
fs
xor
je
and
xor
inc
jns
ret
xchg
loopne
xlat
popa
in
test
xor
outsl
dec
push
and
adc
add
hlt
cmpsl
in
aam
les
xchg
movl
xor
and
adc
add
hlt
cmpsl
in
aam
les
xchg
movl
sbb
sub
testb
in
push
sar
xor
jb
xor
sub
in
dec
lds
dec
cmp
fildl
lret
pop
jo
push
scas
lock
in
pusha
or
lds
idivb
adc
scas
leave
jo
mov
cwtl
je
adc
stc
lahf
mov
ds
inc
inc
push
or
dec
xor
fdivrp
mov
pop
cmp
and
xor
iret
dec
push
jae
xchg
aas
bnd
or
sub
mov
aad
sub
loope
inc
mov
incl
gs
mov
es
lret
mov
mov
fnstcw
bound
sub
inc
pusha
dec
dec
ljmp
pop
add
fadds
sub
in
sbb
out
mov
fs
add
cmp
sub
mov
pop
xchg
repnz
mov
arpl
mov
jne
lcall
xor
pop
out
xchg
and
xor
cmp
and
dec
int3
insl
adc
mov
test
sti
ja
jg
ja
xchg
cmp
mov
in
cltd
fnstsw
jne
scas
mov
xor
std
mov
rorl
xor
arpl
in
aad
sub
jne
cmpsb
out
shll
xor
push
fbstp
mov
or
cmp
cmp
pusha
cmp
lds
cmpsb
sub
rclb
mull
into
mov
shl
cwtl
leave
cmc
dec
adc
int3
lahf
mov
aad
ds
mov
mov
push
or
push
aam
clc
mov
add
adc
push
inc
pop
icebp
cmp
push
loope
mov
les
orb
clc
push
outsb
lret
aad
fistl
pusha
repnz
push
add
popa
aaa
mov
dec
add
stc
xor
cmp
push
imul
xchg
dec
jle
xchg
fwait
in
xchg
add
out
push
fbld
jno
mov
or
sbb
adc
out
jge
push
das
pop
jbe
mov
mov
sbb
testb
and
sbb
cli
sbb
jge
es
rcrl
jno
cmp
lcall
into
rcl
int
ja
das
xor
cwtl
daa
dec
test
jnp
jl
sbb
and
mov
pop
push
and
nop
ror
adc
testb
mov
fisubl
fisubl
stos
mov
and
js
fwait
xchg
mov
in
insb
stos
xchg
push
popa
sub
cwtl
in
jno
in
nop
xor
dec
or
pop
pop
es
sti
ljmp
inc
ret
std
or
dec
cmpsb
sbb
hlt
or
xchg
inc
daa
mov
push
mov
jge
xchg
add
mov
push
lret
and
lods
arpl
pop
add
cmp
mov
mov
xchg
jge
scas
testb
xchg
inc
jle
leave
imul
in
orl
jns
mov
add
std
pop
in
dec
dec
stos
jecxz
loopne
jecxz
lret
or
popa
fimull
lods
xchg
mov
lock
cmp
xor
testl
sbb
ljmp
jo
mov
imul
sbb
push
testb
ret
push
adc
addr16
or
stos
cltd
mov
loop
cmc
pushf
mov
nop
xchg
mov
inc
push
mov
mov
js
in
add
add
mov
fnsave
test
adc
xchg
sub
mov
leave
cmp
xor
sbb
push
in
lods
push
jl
sbbl
enter
add
push
fidivs
rorl
cmpsb
dec
jbe
jl
aad
addr16
push
cmpsl
mov
into
or
xchg
pop
dec
shll
xor
int
addr16
jns
and
js
dec
and
mov
sbb
roll
pop
sub
sub
dec
xor
js
cwtl
cmpl
lcall
mov
jg
or
lods
sbb
inc
pop
xchg
and
adc
lret
std
xchg
lea
stos
scas
mov
pop
lahf
and
out
out
mov
or
movsl
fildl
adc
jge
scas
outsl
testl
xlat
loop
push
movsl
or
imul
adc
push
push
repnz
adc
arpl
mov
adc
cmp
mov
dec
pop
adc
jecxz
pop
pop
xchg
mov
dec
cmpsl
movsl
xor
add
jne
or
lods
inc
xchg
mov
and
xor
in
cmpsb
in
ja
subb
push
scas
ja
pop
shlb
punpckhwd
xchg
in
and
sub
aas
ja
pop
adc
ds
push
repz
cmp
inc
cltd
jae
sar
mov
mov
out
shlb
in
lahf
or
loop
xor
lods
push
xor
testb
cmp
inc
sbb
lretw
push
adc
sbb
shll
in
iret
cmp
mov
jns
mov
fdivl
mov
idivl
ljmp
insl
jns
out
popa
ret
xchg
mov
data16
icebp
mov
movsl
xchg
aad
lds
add
sub
mov
cmc
xchg
pop
out
mov
and
outsl
bound
mov
add
and
sbb
insl
mov
mov
xor
out
dec
cmp
std
sahf
inc
in
sbb
hlt
dec
ss
pushf
xchg
cmp
push
sbb
lea
ret
daa
jne
cld
movsl
pusha
or
shlb
mov
mov
xchg
pop
mov
push
popf
mov
mov
add
rclb
xchg
fwait
mov
mov
sub
sbb
adc
sub
enter
call
movsl
fcmovu
jae
adc
fnsave
cltd
bound
lods
sti
xchg
ss
pop
xchg
popa
push
aam
icebp
movsl
add
xchg
dec
push
fldcw
push
xchg
sub
push
or
xor
test
sub
fidivrs
adc
pop
jmp
repnz
testl
loope
cs
fbstp
inc
cmp
dec
and
sbb
mov
in
cwtl
push
imul
cs
inc
xchg
repz
das
pop
out
add
add
je
mov
cmp
jmp
pop
mov
ds
xor
out
xlat
out
ficomps
jb
jle
cmp
mov
pop
mov
mov
cmpsl
mov
rcl
mov
cmp
mov
add
cmp
aam
notl
inc
jle
xor
xlat
notb
push
stos
cmp
je
xor
and
and
xor
mov
fstpt
mov
push
icebp
pusha
ljmp
incb
fs
js
add
sub
test
mov
mov
lds
sbb
xor
out
mov
leave
mov
outsb
icebp
mov
aas
xor
push
adc
aam
jl
add
cmpsl
leave
xor
pop
stc
mov
test
jmp
sbb
dec
and
scas
sub
add
xchg
add
pop
sub
stos
pop
aad
out
addr16
into
adc
jp
movsl
into
les
dec
hlt
pusha
cmp
push
adc
mov
dec
movsb
mov
leave
loop
mov
sub
or
mov
je
fiadds
shlb
add
sbb
fstpt
out
and
cmc
ficoms
popf
adc
insb
pop
adcb
pop
jnp
adc
outsl
pop
dec
mov
movsb
out
dec
call
cld
sbb
hlt
pop
mull
lds
push
je
mov
ja
call
dec
js
pop
cmp
scas
les
dec
scas
xchg
jo
test
and
cmpsl
bswap
adc
push
push
jmp
cmp
push
push
movsl
fcoms
out
icebp
and
ss
mov
jnp
push
cmp
mov
movsb
cmp
data16
lods
or
add
lcall
xor
int3
jno
loop
jb
addb
push
jmp
sahf
cmp
pop
mov
pop
pop
jb
pop
adc
ds
mov
cli
xor
sub
test
movsb
lock
jbe
cmpsb
cmp
wbinvd
lret
addl
sbb
cmp
outsl
fadds
mov
in
inc
and
sahf
cmp
mov
mov
xor
sahf
out
bound
mov
les
or
adc
test
xor
sarb
mov
sbb
ja
push
jns
out
push
loope
mov
jb
xchg
repz
lock
sub
inc
xor
mov
adc
push
out
cmc
repz
sbb
dec
or
loope
sub
icebp
out
push
test
idivb
jmp
loop
test
inc
dec
xchg
inc
shlb
pop
jo
in
jle
sbb
xchg
daa
aad
mov
ss
lds
add
jg
adc
dec
subl
pop
jno
add
add
stos
leave
int3
xor
dec
xchg
das
aad
inc
push
repnz
inc
push
mov
movsl
std
push
ds
cmpsl
lods
xlat
cltd
xor
and
cs
fmulp
sub
in
mov
fbld
and
adc
outsl
fwait
mov
lcall
fadds
mov
jne
pop
mov
jle
std
push
mov
xor
mov
ds
push
xchg
sbb
xchg
inc
into
jns
push
and
fists
mov
dec
push
adc
stos
pop
lret
cltd
mov
std
xor
outsb
xor
jne
adc
jge
xor
inc
and
gs
xor
cs
xor
pop
xchg
call
sbb
ret
dec
jns
imull
mov
xchg
loope
fadds
dec
and
inc
jo
and
push
insl
into
jb
cmp
sbb
mov
xor
mov
aaa
test
pop
jmp
clc
add
push
stos
mov
addr16
aad
fstp
mov
mov
insb
or
cmp
or
clc
dec
jg
mov
push
leave
and
out
xchg
mov
cmp
xor
add
cli
call
jb
jne
in
out
jmp
ret
xor
sarl
or
dec
outsb
add
ja
mov
or
push
fcomp
inc
loope
in
fstl
pop
adc
outsl
stos
jae
sbb
sub
mov
cmp
ret
mov
cmpsb
adc
loop
fs
dec
jp
jnp
add
ror
sbb
iret
adc
lods
movsb
lds
add
dec
jl
jne
dec
cld
adc
pop
je
loopne
pop
aaa
sbb
dec
out
mov
mov
adc
test
arpl
ss
and
mov
lods
mov
push
pop
jae
dec
dec
or
mov
cs
test
fbld
and
stc
pop
dec
dec
into
add
shll
mov
dec
imul
scas
jno
inc
popf
cltd
and
dec
ret
int3
or
aas
sub
call
frstor
fwait
leave
sbb
mov
sub
test
leave
call
fists
mov
cmpl
popf
ja
and
inc
mov
cwtl
jb
jmp
push
jo
and
pop
icebp
sub
mov
shl
mov
jmp
or
pop
loope
inc
enter
push
jns
jns
pop
popf
add
xchg
jbe
outsl
adc
mov
lcall
mov
pop
mov
loope
pop
pop
out
xor
cld
push
call
sub
pop
sbb
mov
lock
inc
sub
jle
out
mov
xchg
fidivs
test
inc
pop
mov
lcallw
ret
cmp
cld
jge
inc
add
jl
stc
icebp
mov
cmpl
dec
pushf
mov
mov
gs
negb
and
mov
divb
pop
sub
mov
xchg
mov
pop
les
fistl
sub
sbbb
sti
mov
or
or
mov
mov
xor
add
movsl
jnp
push
cmp
mov
bound
mov
mov
test
jp
cs
mov
jmp
sahf
xor
into
adc
lret
pop
xchg
xchg
inc
sbb
jge
mov
and
into
jns
inc
addr16
insb
pop
outsb
lds
adcl
clc
xor
out
xchg
lret
gs
xchg
iret
insl
jbe
push
and
mov
jmp
xchg
add
fwait
lds
testb
int3
xchg
out
or
push
or
jl
in
lock
sub
jmp
xchg
add
pop
push
aam
stos
and
push
data16
adc
out
xor
xor
fidivrl
pop
push
and
xchg
nop
ds
repnz
mov
jecxz
in
pop
into
mov
int3
push
cli
push
pop
pop
dec
xchg
jne
xor
push
in
push
xchg
ljmp
jb
bound
adc
jo
fdivs
cmc
cmpsl
pop
pop
push
repnz
mov
pop
jae
xchg
jb
dec
adc
mov
or
fwait
cmp
push
rcr
add
addr16
nop
lahf
scas
data16
dec
ss
xchg
sub
arpl
jl
pusha
sub
ds
xor
out
jno
mov
mov
and
push
mov
in
addb
fs
xor
fidivs
mov
fdivrl
test
dec
ret
jg
sbb
dec
dec
inc
sub
int
iret
dec
hlt
call
imulb
or
dec
outsl
sub
or
je
mov
adc
sbb
dec
shll
loop
lahf
mov
andb
test
imul
add
test
sub
sbb
xor
fwait
insl
popf
hlt
push
push
inc
jmp
aam
in
push
test
or
aaa
leave
add
adc
int3
pop
mov
cmp
cmp
test
add
inc
cmpsl
ljmp
pop
insb
cmp
aaa
mov
mov
test
sbb
jl
and
mov
pop
jbe
out
repz
lret
pop
adc
and
divl
mov
outsl
pop
mov
pop
shrl
stos
repz
arpl
lahf
test
les
imul
cmpsb
arpl
xor
dec
in
std
fnstenv
inc
sbb
fdivl
adc
les
xor
xor
and
dec
add
jmp
mov
pop
adc
cmp
pop
cmc
je
sbb
add
and
xor
repz
cld
jnp
leave
sbb
stos
cld
jecxz
mov
sub
mov
or
insb
push
inc
outsl
adc
dec
add
add
push
push
xchg
dec
aas
and
mov
pop
xorb
insl
or
dec
nop
scas
inc
loopne
cmp
jbe
lods
fwait
cmc
cmp
dec
jg
cli
ret
adc
scas
int3
stos
outsb
stos
xchg
pop
enter
add
lea
sbb
pop
xor
xor
or
pop
loop
les
sub
and
or
lods
mov
daa
push
push
loope
sbb
in
mov
add
adc
mov
call
stc
std
sbb
jnp
adc
fstp
inc
push
rcll
push
dec
fisubrs
push
fmuls
push
mov
enter
and
movsl
xchg
and
inc
aam
adc
loope
fnstcw
fidivrl
add
lods
mov
pop
lea
divb
roll
subb
or
mov
add
add
ljmp
jl
popa
daa
pop
int
pop
cltd
jmp
sbb
push
or
mov
fadd
cmp
test
cmpsb
jo
jns
roll
mov
mov
inc
call
pop
inc
jne
shll
sbb
push
out
dec
test
pop
or
cld
popf
push
inc
subb
test
or
inc
jne
cld
aas
pop
xchg
inc
inc
mov
les
cmp
mov
aas
test
data16
dec
push
xchg
or
loop
sbb
cmp
pop
je
insb
dec
push
lahf
cli
inc
fsts
int3
hlt
scas
xchg
sbb
xor
orb
loop
mov
lret
cmpsl
iret
mov
dec
mov
cmpb
pusha
aam
ja
xor
jle
cmpsb
call
xchg
xchg
adc
sub
ror
cmc
ja
imul
sbbl
push
mov
insb
outsl
pop
sub
outsl
ror
in
mov
xchg
lock
push
dec
jbe
loopne
sbb
adc
add
insl
sti
test
arpl
add
mov
pop
push
dec
test
pop
mov
sbb
add
xor
jecxz
fs
push
mov
int3
lahf
mov
push
movsl
nop
iret
pusha
pusha
push
mov
loop
cmpb
push
stos
jnp
in
nop
ret
jmp
scas
lret
add
stos
sbb
out
lock
out
fwait
push
daa
mov
dec
movsb
std
lods
cmpsb
sub
inc
repz
push
add
and
test
lods
mov
shlb
test
cwtl
shr
cmpsb
and
rol
mov
jge
sbb
push
fldl
push
nop
xchg
fldt
mov
psrlq
cmc
sbb
lret
test
xchg
xor
sub
je,pt
mov
aad
xor
pop
lock
outsb
inc
mov
mov
jl
aaa
mov
inc
js
jp
mov
mov
mov
out
fbld
int
int
inc
inc
adc
cmpsb
push
not
cmp
xchg
bound
leave
mov
mov
rorb
imul
outsb
out
fcompl
jno
aad
sub
push
hlt
sub
xor
mov
sbb
add
adc
ficompl
nop
xor
ja
lahf
and
ret
ret
js
stc
leave
int
sub
dec
loope
jg
mov
ja
jge
adc
cld
jnp
cmp
push
mov
sti
mov
dec
inc
in
inc
icebp
add
addr16
loope
int3
ss
and
in
add
es
jnp
mov
sbb
inc
std
or
cs
es
cmp
pop
adc
jp
lock
adc
mov
lret
xchg
dec
outsl
dec
ficoml
aas
add
int
pop
jecxz
sub
jmp
mov
int
nop
push
mov
js
nop
xor
pop
xor
mov
mov
inc
lcall
mov
cld
jl
xlat
movsb
out
cli
out
bnd
mov
xor
adc
mov
and
mov
bound
popa
mov
outsb
jecxz
adc
in
outsb
pop
cmp
xchg
decb
jmp
rol
aad
movsl
fs
pop
or
dec
rcll
ja
cmpsl
in
adc
dec
pop
test
out
enter
sub
mov
cs
xchg
adc
ds
sbbb
insl
dec
inc
cmpsb
push
ljmp
mov
xchg
fs
xchg
cmpsb
fldl
cwtl
nop
aam
mov
add
popf
scas
out
mov
adc
mov
jb
jle
jle
jnp
nop
add
fs
iret
pop
mov
sbb
add
fnstsw
adc
repz
and
out
scas
rcrl
xchg
and
lret
adc
jno,pn
cmp
fadd
ret
out
xor
push
and
sub
ret
fisubl
xor
add
cmp
pop
insl
or
sbb
mov
sbb
xor
mov
adc
and
cld
lret
lcall
inc
lret
push
push
jbe
push
call
daa
mov
mov
mov
sahf
jl
popl
movsl
out
and
insb
mov
inc
incb
jmp
mov
cmp
jnp
cwtl
mov
lahf
or
sub
cmpsb
push
ja
in
push
pop
mov
pusha
pop
sbb
add
inc
xchg
mov
adc
hlt
inc
das
subl
pop
std
jbe
in
mov
or
out
sub
mov
pop
jg
iret
ret
push
push
test
xchg
in
mov
inc
jge
mov
lods
lret
xchg
mov
or
cmp
mov
popa
les
inc
cltd
pusha
out
jo
arpl
push
or
in
cli
lds
jle
je
dec
out
jns
cmp
cli
sub
xor
add
jp
fs
xor
adc
insl
fisttpl
dec
xchg
push
mov
mov
addb
push
lcall
lret
jae
and
jne
xor
int3
stc
ja
jnp
pop
lcall
inc
sbb
fwait
push
dec
and
aad
insl
mov
gs
addr16
xchg
sub
xor
jne
xor
mov
out
fs
sarl
scas
xor
ret
cmp
mov
mov
aas
push
fwait
mov
ljmp
add
pop
inc
pop
xor
and
adc
add
hlt
cmpsl
in
aam
les
xchg
movl
xor
and
adc
add
hlt
cmpsl
in
aam
les
xchg
movl
xor
and
adc
add
hlt
cmpsl
in
rolb
mov
xlat
inc
daa
push
aaa
bound
inc
pop
xor
and
xchg
inc
test
jle
loopne
outsl
sub
imul
sub
sbb
inc
push
lcall
xchg
loopne
lock
push
rclb
mov
nop
push
nop
push
pusha
out
testb
and
adc
mov
inc
mov
addb
push
pusha
pushl
inc
ficoms
and
adc
xor
pop
mov
out
lahf
or
add
dec
adc
sbb
push
popa
in
repz
iret
inc
addl
xlat
cli
sbb
mov
adc
and
gs
xchg
out
sahf
cltd
push
pop
push
pop
mov
push
jno
cltd
xor
mov
gs
jecxz
mov
cli
das
rcrl
ss
add
aad
cmpsl
mov
mulb
mov
jbe
ficoms
imul
cmpsb
cmp
nop
mov
pop
adc
inc
ss
add
adc
nop
add
push
repz
fdivrs
cwtl
jmp
aad
rcrb
pop
bound
inc
aam
mov
cmp
jo
inc
push
int3
and
adc
rcrb
mov
push
nop
jb
xorl
push
xlat
arpl
push
fadds
jne
mov
inc
push
scas
adc
in
push
in
aas
sahf
xor
xor
sbb
inc
aad
test
loop
cli
mov
popf
pop
mov
push
ret
pop
shrb
jae
cmpsl
pop
xchg
and
xor
loopne
lock
inc
rclb
es
addb
push
pusha
out
testb
and
adc
rolb
mov
push
nop
push
pusha
out
jno
out
lds
inc
cmpb
cmpsl
std
clc
xlat
iret
or
inc
sub
cs
das
outsb
jne
dec
les
ss
adc
bnd
cli
and
shll
stos
in
pusha
sub
pop
dec
sbb
sahf
sub
pop
pop
cli
jecxz
pop
std
mov
jmp
ss
push
cmpsb
les
pop
lahf
roll
xor
fdiv
mov
js
xchg
rorl
adc
dec
pop
mul
lods
addr16
xchg
inc
add
xchg
icebp
cmp
std
xchg
mov
faddl
dec
popf
imul
fnstenv
shl
add
ret
cltd
jge
out
es
mov
call
inc
xor
inc
mov
leave
sbb
pop
cmp
das
mov
inc
jl
cltd
test
enter
outsl
dec
adc
sub
and
lcall
out
mov
mov
loop
aad
pop
push
mov
mov
xchg
mov
mov
xchg
cwtl
loop
in
ljmp
jecxz
int3
push
in
mov
jae
jg
ret
test
inc
add
dec
pop
jecxz
mov
psllw
int
xchg
imul
xchg
pop
cltd
sbb
aad
lds
xchg
insb
mov
cli
pop
pusha
jns
idivb
dec
pop
sbb
ret
inc
and
add
lods
inc
xor
out
into
push
in
add
xlat
ljmp
jns
mov
jg
mov
nop
in
or
and
nop
cmp
cmpsb
out
inc
cmp
mov
cmpsb
test
lcall
mov
lret
jg
cmc
cmpsl
push
into
loope
jecxz
sbb
xchg
cmp
pop
push
xchg
daa
lahf
jp
cmp
sbb
ret
pop
adc
sub
push
popa
mov
sbb
sbb
mov
or
jmp
in
aas
push
repz
mov
iret
mov
push
mov
cs
add
mov
mov
add
subb
sub
fsubr
sbb
xlat
fwait
lds
push
pushf
and
xchg
les
and
pop
sub
fs
jns
or
subl
and
xor
mov
subl
add
fidivrl
out
inc
scas
dec
sub
add
pop
mov
or
lock
sbb
es
push
rclb
cmp
mov
jl
xchg
sub
outsl
data16
mov
cld
inc
add
and
inc
in
lods
loopne
mov
pop
adc
mov
mov
cmpsl
ret
mov
les
outsl
in
popa
sub
jno
fmuls
dec
fsubs
cmc
popf
repz
div
jo
cmpsl
test
lret
unpckhps
mov
dec
mov
loope
jg
pusha
scas
fbld
andl
jae
repz
sti
sbb
sbb
push
and
cmp
scas
mov
shll
mov
cltd
int
mov
data16
dec
xchg
imul
push
loope
mov
enter
pop
push
cld
sub
out
cmp
mov
or
les
xor
fwait
dec
gs
and
add
xor
jg
jno
fldcw
pushf
ret
add
xchg
test
ficomps
dec
jae
sub
pop
arpl
jns
cwtl
sub
push
xchg
add
into
cli
add
nop
xor
xchg
addr16
pop
es
rcl
aaa
mov
jo
mov
inc
and
lock
adc
dec
es
mov
repnz
jns
ds
push
adc
dec
adc
fcomps
in
aas
rclb
out
ffreep
imul
xor
sahf
mov
adc
pop
jbe
int
imul
icebp
mov
xchg
sahf
fmuls
mov
imul
icebp
arpl
or
data16
mov
incb
add
incb
scas
adc
lret
sub
loope
xlat
jne
addb
and
pop
into
mov
adc
push
fld
cmp
inc
clc
cli
stos
sbb
pop
shlb
mov
push
pop
filds
mov
daa
push
test
in
pop
cld
sub
inc
and
adc
out
das
in
call
xchg
jno
xor
fistps
rolb
cmp
in
pop
adc
cmp
pop
paddd
adc
dec
jl
ljmp
sbb
mov
pop
nop
inc
popf
mov
mov
jns
pop
lret
jbe
pop
push
inc
push
mov
mov
das
adc
stc
inc
fldl
in
lods
scas
sub
mov
mov
call
and
inc
rcrb
xchg
add
int3
cli
push
jbe
loopne
out
fsub
enter
cmova
or
cltd
xchg
push
xchg
cmp
ret
add
fldenv
or
imul
mov
out
enter
jno
push
add
ljmp
adc
in
xchg
dec
dec
jle
dec
cltd
rorl
jbe
cmpb
sbb
jbe
jns
mov
mov
insb
push
into
insb
repz
jmp
xchg
sub
add
test
call
out
mov
adc
mov
pop
lret
sbb
jno
adc
mov
xchg
push
inc
lea
mov
cwtl
dec
xlat
scas
mov
jecxz
xor
mov
ss
xor
sti
in
or
lock
and
pop
add
push
enter
sbb
sbb
negl
incl
int
dec
push
sbb
int
sbb
add
lods
pop
mov
and
ljmp
inc
dec
and
xchg
bound
dec
mov
jl
cmp
dec
adc
xchg
push
addb
mov
and
jo
xchg
movl
and
aas
cmpb
int3
je
xor
add
scas
xchg
adc
repnz
lea
cmpl
push
jno
loope
movsl
sub
cmp
ja
mov
into
and
mov
mov
adc
sub
sti
add
push
dec
daa
pop
mov
ret
mov
xchg
inc
pop
test
push
add
rdpmc
fimull
or
and
inc
dec
add
stos
imul
aas
aaa
mov
shl
and
xorb
dec
sub
jnp
rcll
mov
rolb
sub
inc
stos
int
mov
push
test
fsubs
inc
or
mov
adcl
ja
dec
andb
loope,pt
jbe
ds
sbb
fldt
in
leave
pop
lea
clc
xlat
popf
ret
sub
jo
outsb
pushf
jmp
mov
mov
and
or
ss
or
add
or
cmp
hlt
sub
push
jno
daa
iret
jl
sbb
jne
loope,pn
or
lods
lds
iret
mov
xor
and
sub
jmp
xor
ret
pop
test
mov
arpl
lahf
rolb
movsb
pop
push
mov
sahf
or
div
rorl
stos
push
mov
inc
enter
xchg
es
shll
vunpckhps
fistpl
loop
test
or
out
out
insb
int3
test
pushf
or
movsl
jno
ss
xchg
cmp
jecxz
and
imul
jg
lock
scas
mov
repnz
arpl
sahf
xchg
adc
out
enter
rclb
inc
xorb
cmp
int
jecxz
stos
iret
push
push
clc
nop
ret
into
or
rcll
jmp
test
and
cmp
lods
mov
dec
fwait
dec
jecxz
insb
jne
jg
dec
mov
pusha
mov
push
adc
out
and
cld
pop
cmpsb
scas
arpl
add
lods
inc
iret
lret
jnp
pop
jno
daa
mov
sbb
test
mov
loopne
movsl
adc
pop
pop
xchg
loope
adc
dec
ja
pop
mov
xor
push
and
jge
lods
test
mov
int3
cmp
fwait
jge
dec
pop
or
push
scas
xchg
sub
fsubs
fstl
imul
jae
mov
mov
out
je
sub
cmp
pop
adc
adc
sub
aaa
cmp
push
add
or
push
mov
std
or
mov
adc
out
adc
andl
scas
or
aam
and
rcl
inc
ds
ficomps
pop
sbb
xchg
mov
mov
out
sbb
sub
sahf
es
das
jp
ds
adc
pop
dec
mov
inc
or
pop
test
xchg
xchg
adc
pusha
fwait
ljmp
pop
aaa
mov
test
sbb
push
jo
dec
mov
insb
fistpll
in
push
int
js
and
out
pop
adcb
clc
and
hlt
enter
jmp
sub
int
jp
and
mov
jge
enter
je
repz
adc
push
test
pop
inc
cltd
push
sub
in
xor
scas
sbb
stos
dec
daa
sti
dec
lods
mov
push
push
ja
cmp
negb
cmp
mov
cmc
dec
cmp
inc
out
dec
scas
pop
dec
int
inc
xchg
push
pop
jle
pop
lahf
cmp
pop
in
nop
push
xchg
or
outsb
test
mov
adc
mov
cmc
sbb
rcl
daa
inc
xchg
fistl
aad
jge
mov
or
mov
mov
mov
add
sarb
mov
jmp
inc
in
iret
mov
popa
ds
setns
stc
push
adc
popa
fisubl
lahf
fisttps
cmp
notb
stc
inc
push
mov
jae
es
xor
jge
repnz
xchg
sub
enter
dec
dec
cmc
adc
dec
xchg
jns
cmp
lret
movsb
mov
stos
cwtl
inc
adc
es
je
xchg
pop
addr16
xor
mov
fcomp
inc
imul
push
mov
mov
clc
pop
int
add
out
mov
enter
lahf
nop
push
into
mov
cld
fiaddl
and
and
xor
mov
jnp
jns
cwtl
mov
xorb
ret
ds
ret
aam
jno
arpl
push
cmp
mov
and
pop
push
push
pop
xor
mov
jno
inc
pop
loopne
jg
test
push
stos
mov
jle
fldenv
icebp
and
sbb
enter
jb
mov
fwait
adc
sub
inc
lret
sbb
push
and
pop
fs
loope
iret
push
jl
lret
je
insl
subb
daa
es
sub
jae
les
loope
fneni(8087
in
stos
into
jp
add
push
adc
and
lods
dec
rorl
clc
scas
popf
dec
imul
push
pushf
lcall
dec
insl
inc
jl
cmp
pop
adc
push
lahf
mov
les
lock
in
add
insl
icebp
andb
test
test
inc
xchg
adcb
ljmp
lahf
daa
sub
or
scas
mov
mov
sub
sub
jle
into
data16
movsb
adc
inc
pop
stc
cwtl
sub
lods
repz
test
inc
cmp
cmp
adc
loope
mov
adc
mov
sahf
dec
add
inc
popf
ds
mov
ja
sbb
or
movsl
pop
adcb
sti
adc
sub
add
adc
popf
outsl
insl
cmp
enter
enter
adc
movsl
sub
decb
xor
ss
jae
mov
cltd
pop
sti
loope
loope
repnz
in
push
adc
into
testl
sar
in
and
push
cmc
inc
out
mov
xchg
jle
pop
leave
fstps
je
pop
and
and
les
fiaddl
fsubrl
jne
cmp
mov
xlat
in
jno
movsb
into
sub
inc
je
int3
xor
shll
pop
mov
push
loope
outsb
inc
popa
pop
call
es
pop
mov
lcall
dec
dec
loopne
and
scas
sbb
sar
repz
mov
pop
icebp
inc
hlt
or
xor
das
stos
fcomps
push
or
pop
sub
inc
int3
in
cmp
xchg
gs
xchg
mov
xor
mov
jne
js
mov
add
push
dec
stos
out
lock
cmpsb
and
fadds
inc
dec
imul
cmc
pop
es
stos
daa
push
call
cmp
arpl
into
and
pop
jg
sub
lcall
daa
mov
and
or
mov
mov
mov
fistpll
xchg
xor
ja
sub
dec
out
fld
jg
mov
mov
cmpsl
xchg
stos
popl
les
pop
jb
add
pop
inc
fldenv
test
add
sub
add
ja
sbb
mov
out
cwtl
mov
pop
dec
cmp
push
in
out
jae
fs
sbb
mov
jo
loop
pop
mov
push
adc
je
mov
mov
lea
mov
scas
dec
sub
jle
sahf
ja
sub
pop
dec
ja
jp
lret
or
cwtl
cli
mov
test
jnp
dec
stc
test
ss
orl
pop
rolb
mov
pusha
in
adc
pop
fnstsw
push
aam
jmp
sub
inc
stos
xor
fs
imul
mov
roll
add
add
add
sahf
ja
mov
sbb
lret
pop
dec
cmpsb
mov
adc
mov
bound
decb
push
fnstsw
fisubrl
xchg
add
and
pop
jno
leave
cs
outsb
cwtl
aad
push
mov
push
jne
xchg
push
cmp
aas
lret
imul
mov
cmp
js
and
sahf
mov
add
and
fldenv
inc
mov
ficompl
adc
xchg
inc
in
bound
clc
dec
push
add
movsb
in
xchg
pop
addl
push
scas
mov
mov
arpl
and
push
pop
mov
arpl
jnp
jl
cmp
sbb
sub
push
test
repz
cmp
outsl
and
test
icebp
sub
ret
xor
mov
jg
sub
pushf
out
stos
loopne
mov
cli
jmp
std
xlat
sbb
xchg
adc
push
push
ret
inc
sbb
ret
push
int
cli
and
push
push
shrb
dec
daa
imul
dec
lret
fwait
add
popa
repz
push
inc
push
adc
test
sar
test
inc
int
xchg
mov
adc
xchg
xchg
or
cmpsb
cmp
pop
sti
fnsave
mov
cld
popf
shrl
repnz
xchg
in
pop
cmp
das
shll
add
sub
pop
testl
cltd
loopne
jg
cmp
lods
push
ret
stos
push
xchg
loopne
shr
icebp
dec
xchg
sub
gs
bound
insl
call
repnz
mov
cmpb
lret
jge
sub
sbb
stos
dec
mov
je
dec
pushf
movl
iret
ljmp
dec
mov
jle,pn
push
push
cmp
jbe
pop
sbb
push
and
jmp
mov
push
ss
xchg
out
xchg
sub
push
adc
pusha
in
pop
rolb
outsl
fimull
xor
out
jbe
lret
push
mov
cmp
stos
inc
jo
pop
dec
aam
ss
inc
lock
mov
stc
fnstcw
sbb
shlb
mov
jae
incb
enter
ret
mov
out
jg
addr16
and
clc
int
xchg
jo
pop
xchg
loopne
int3
dec
lcall
sbb
push
or
stos
push
dec
stos
add
cli
mov
fcomp
push
cwtl
lahf
jecxz
fcomps
lret
and
cmpl
sub
shrb
imul
or
or
mov
shlb
xchg
inc
out
stos
insl
imul
jecxz
xlat
push
pusha
push
cmpsl
jb
and
adc
inc
inc
rcll
pop
pop
dec
push
enter
or
enter
xchg
push
pop
xlat
mov
jnp
mov
in
and
ds
lea
jnp
call
ss
lods
sarb
mov
push
movsb
fcoml
xchg
mov
and
fldcw
lahf
shrl
aas
loop
push
xchg
in
cmp
pop
jg
push
out
int3
add
call
lea
outsl
mov
loop
cli
mov
inc
popf
sub
mov
xor
loope
push
pushf
mov
ret
loopne
sarb
mov
or
xor
xor
rolb
xchg
xchg
test
sbb
daa
pop
into
lcall
lock
add
pop
aad
cmp
loope
lods
mov
outsl
mov
out
xchg
in
xchg
push
add
aaa
sub
push
dec
sbb
nop
dec
mov
in
pop
fiaddl
rcll
and
mov
push
sbb
cmp
fnstenv
jnp
dec
in
fildl
jno
push
insb
test
sbb
xchg
scas
push
in
xchg
fcompl
sbb
cmc
cmpsl
mov
push
xadd
jmp
dec
gs
sub
stos
mov
cmc
xchg
mov
xlat
jecxz
lods
adc
loop
jo,pn
scas
in
lahf
data16
mov
addr16
add
stos
in
mov
cmc
and
push
cmp
outsb
cmp
test
xchg
pop
xchg
andb
int
add
adc
outsb
xchg
pushl
mov
mov
mov
lds
ja
push
cmp
or
push
hlt
in
into
out
cmp
pop
pop
xor
outsl
in
inc
sti
cmp
xorb
cmpsb
mov
sub
mov
dec
enter
mov
sbb
jbe
cmp
mov
repz
clc
and
aas
in
jp
jg
dec
rol
cmp
dec
popa
mov
fmul
xlat
push
jbe
imul
jecxz
or
pop
std
loope
or
adc
xlat
push
bnd
xor
dec
test
test
adc
xchg
fwait
and
gs
clc
mov
aaa
add
pusha
arpl
mov
inc
mov
shll
mov
xchg
or
push
pop
pop
sub
inc
cld
scas
aaa
cmpsl
dec
jmp
jbe
jne
in
in
cmp
push
push
daa
mov
xor
pop
pop
out
imul
jno
mov
outsl
push
adc
and
orb
fwait
cmp
or
lahf
jns
push
in
pop
push
jns
adc
aam
add
aad
loope
jno
xor
cmp
push
pop
mov
xchg
mov
call
adc
push
mov
push
jo
pop
pop
mov
outsl
xor
ljmp
inc
repz
xorb
aam
jecxz
sbb
aad
mov
insb
std
ret
mov
add
xchg
and
and
xchg
aaa
mov
std
aaa
bound
dec
loopne
bound
fcmovnu
stos
sbb
aam
rorl
ds
rcrb
pop
fisttpll
addr16
insl
mov
loope
pop
popa
xor
ss
cmp
pop
mov
stos
xor
jmp
subb
out
les
icebp
push
inc
into
xchg
stos
or
ss
ss
mov
test
add
loope
mov
ficompl
les
addr16
mov
movsl
adc
andb
mov
and
cli
or
ljmp
mov
mov
mov
pop
dec
adcb
das
sbb
xchg
in
pusha
push
stos
into
push
rorl
subb
daa
je
add
cwtl
dec
cltd
xor
and
adc
cmc
xchg
and
jg
mov
sbb
pop
mov
rorl
sti
in
push
sub
jb
cmc
shl
sbb
lea
movsb
dec
dec
roll
into
stos
dec
in
xchg
cmp
sbb
movsb
sub
in
shll
test
idivl
jae
cmp
testb
fsts
inc
xchg
xchg
rol
outsl
test
add
cmp
jge
cs
dec
in
shlb
mov
insb
sbb
ds
jno
push
shll
sbb
sub
call
mov
cmp
cmp
loopne
sub
mov
in
scas
bound
lret
mov
lds
add
ljmp
jns
or
repz
scas
inc
shlb
andl
mov
adc
xchg
and
pop
mov
repnz
cmp
cs
sub
cs
call
outsl
mov
xlat
push
cmp
addr16
mov
push
sbb
les
sub
std
lea
sub
and
adc
rolb
mov
push
nop
push
pusha
out
testb
and
adc
rolb
mov
push
nop
push
pusha
out
testb
and
adc
rolb
mov
pop
xchg
push
popa
out
testb
and
adc
push
shlb
xlat
scas
cmp
jg
outsl
jmp
in
sbb
pop
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
pop
inc
dec
scas
jg
outsl
push
push
xor
dec
lcall
lcall
out
push
lahf
jle
insb
mov
mov
outsl
mov
decb
bound
fisubrs
mov
lcall
out
push
lahf
adc
dec
pop
sub
scas
jg
outsl
mov
ret
aas
xor
in
dec
popl
jge
sub
pop
cld
sub
dec
sub
push
fistl
leave
pop
gs
movsb
push
pop
cmp
call
jecxz
sbb
adc
les
adc
sahf
mov
inc
jle
jbe
push
enter
jmp
mov
mov
cmc
js
inc
popa
mov
stos
out
xchg
push
sahf
pop
add
cmp
scas
pop
pop
jle
mov
ja
lock
das
xor
roll
sub
repnz
jg
xchg
inc
mov
sbb
cli
int
or
fisubrl
stos
ret
movsb
into
fisubrs
jb,pt
fs
iret
sub
scas
mov
jle
adc
nop
mov
mov
aas
xor
loope
push
jnp
fcoml
pushf
mov
outsl
test
decb
out
aas
add
dec
fistpll
out
inc
lahf
push
xchg
mov
in
sub
cmp
sub
push
mov
stos
scas
js
imul
sbb
pop
fildll
sub
cmp
sbb
cs
jp
inc
fnstsw
push
lods
pop
test
cmpb
push
aas
lds
cmp
or
pop
lcall
fistpll
iret
lcall
out
push
lahf
jle
outsb
mov
mov
outsl
mov
decb
out
aas
fisubrs
into
fistpll
iret
lcall
out
push
lahf
jle
outsb
mov
mov
adc
pop
insl
repz
mov
in
aas
and
add
xchg
sub
inc
add
icebp
sub
je
xor
mov
sbb
lret
leave
sub
fidivrl
and
fwait
jecxz
adc
and
or
insb
scas
and
push
mov
xlat
fcmovnb
adc
jbe
cli
andb
add
insl
in
outsl
call
add
xchg
fbstp
xor
popa
mov
rcr
js
int
nop
cmp
orb
fadds
jbe
cmp
es
scas
das
jae,pn
mov
in
lock
pop
dec
aam
into
cmpsl
es
lret
or
mov
sub
mov
and
sub
iret
sub
dec
xlat
iret
rclb
adc
sub
add
sub
int3
sbb
jnp
sbb
adc
filds
adcb
lods
xor
push
loop
pusha
adc
fcmovb
mov
xor
sahf
jecxz
call
call
push
mov
pop
pop
lret
xchg
cli
xor
fldt
xor
jp
push
popf
jg
mov
std
popf
jnp
int3
inc
stos
xchg
push
jns
in
jp
daa
aaa
lcall
pop
les
add
and
push
inc
push
sbb
hlt
loope
ljmp
ret
cmpl
push
out
pop
imul
pusha
fcmove
add
in
test
test
inc
push
jecxz
daa
and
test
frstor
or
xchg
outsb
loope
in
xchg
pop
push
pop
push
aad
repnz
or
jnp
lahf
dec
add
out
xchg
cwtl
addb
cmp
sbb
mov
or
pop
mov
fwait
bound
repnz
pop
adc
jg
lcall
rol
enter
lock
and
adc
inc
fistpll
pop
add
or
lock
in
cwtl
inc
lcall
or
clc
fbld
packssdw
call
imul
mov
subb
cmc
vpmacssdqh
mov
push
xchg
iret
outsl
inc
push
xor
aaa
mov
jb
jnp
xchg
loopne
mov
inc
pop
or
rorl
pop
dec
nop
and
jbe
aam
mov
aaa
jle
add
jp
cmp
fadds
mov
je
out
scas
iret
mov
sahf
rolb
lods
fwait
std
fadd
xchg
aad
push
adc
sub
pop
pushf
or
sbb
enter
gs
pop
in
jae
cs
js
pusha
sahf
mov
enter
loopne
push
add
cmpsb
pop
xor
rorl
sbb
xor
push
je
pop
jne
cmp
inc
pushf
sub
pop
cltd
das
imul
sti
inc
cli
leave
test
mov
stos
popf
aad
scas
pop
xchg
fninit
jnp
and
stos
in
sub
pop
xlat
xchg
mov
push
imul
shll
or
jo
cmpsl
cmp
lds
or
dec
pop
call
cmp
les
cltd
lds
test
inc
outsl
add
dec
cmpsb
push
cmpsb
xor
ret
fisttpl
add
sub
xor
cwtl
pop
xchg
pop
inc
lock
ret
add
popa
pop
push
ss
mov
and
inc
push
mov
push
sub
inc
decb
daa
mov
jmp
sub
popa
out
cwtl
sub
and
bound
mov
rcl
inc
fnsave
inc
in
sti
cwtl
shll
sub
sbb
movsl
test
ss
fs
mov
aas
dec
shl
jl
flds
test
ficompl
mov
xor
je
mov
or
sbb
adc
xchg
pop
data16
or
lods
jmp
sbb
or
int3
push
adc
mov
cmpsb
or
test
xchg
adc
loopne
cmp
or
sub
cmpl
or
test
cmp
int
outsb
xor
sub
outsl
insl
aam
adc
push
mov
lock
outsl
mov
movsb
jge
push
out
mov
hlt
jmp
jns
fisubrs
inc
xor
insl
stos
shrb
mov
lds
je
jbe
dec
test
mov
and
movsl
mov
test
or
testb
mov
stc
push
or
jne
pop
cmp
ds
fistl
rcl
pop
mov
lods
clc
loope
shrb
lret
lahf
ss
lret
mov
lahf
xchg
pop
inc
sbb
ja
rclb
xorl
cmpl
clc
scas
push
push
or
filds
push
or
iret
mov
add
lock
push
mov
jns
sarb
jp
sub
push
lcall
scas
push
sti
pop
mov
aam
ftst
repnz
out
inc
and
lcall
mov
in
std
dec
cmp
dec
das
imul
outsb
outsb
lods
aad
in
fstpl
loop
out
insl
inc
mov
std
repnz
sub
push
adc
pop
adc
lea
or
movsl
sub
lea
mov
add
xor
adc
jmp
sbb
nop
inc
nop
mov
dec
out
cmc
clc
les
mov
push
dec
xor
inc
addr16
push
cmp
sbbb
sub
mov
fs
notb
in
pop
in
inc
xchg
clc
push
push
jbe
push
shl
xor
xor
fidivl
out
pop
cwtl
jbe
mov
cmp
or
jp
inc
inc
pusha
mov
out
int3
mov
jno
lahf
in
jne
pop
adc
mov
mov
dec
mov
jg
cmc
lods
dec
call
adc
sbb
int3
adc
jg
xchg
jle
jno
test
insb
xchg
dec
or
cwtl
dec
cmp
icebp
or
adc
sbb
xchg
dec
mov
push
in
popf
sahf
insl
test
iret
jl
push
das
add
adc
ljmp
mov
pop
pop
dec
ljmp
mov
shl
inc
lcall
rclb
push
dec
into
xchg
xor
loopne
test
cmp
inc
jne
inc
cltd
mov
dec
fadds
jle
xor
or
es
fisubl
mov
iret
and
jmp
testb
push
mov
adc
dec
cltd
mov
jmp
add
leave
or
negb
dec
loopne
repz
xor
je
inc
cmp
pop
pop
es
adc
mov
mov
adc
xchg
mov
xor
mov
repz
aam
jge
shlb
sbb
mov
pop
adc
dec
sti
rclb
cmpsl
daa
mov
loop
xlat
mov
iret
jl
push
dec
lret
fcmovbe
bound
xchg
fxch
out
pop
fscale
testb
sub
scas
mov
push
mov
sub
jle
sbb
inc
mov
movsb
mov
fsubrs
mov
inc
cmpsb
rolb
out
pop
in
mov
jae
xchg
movsl
mov
dec
dec
jbe
adc
addr16
push
mov
arpl
cmp
mov
cs
fmull
jecxz
loope
popa
adc
sub
adc
or
jo
mov
mov
mov
arpl
lcall
xor
fwait
xchg
ror
insl
stos
lret
lods
pop
and
cmp
les
enter
mov
jmp
lods
sub
fstpl
add
fcmovnbe
clc
std
nop
fwait
xchg
add
cmpsb
pop
add
out
sbb
mov
out
sub
in
clc
in
xchg
dec
jo
imul
out
incl
push
xchg
sub
cli
mov
pushf
mov
mov
bound
dec
mov
ja
xchg
mov
lods
add
xor
loop
and
cs
sub
lret
ffree
cli
insl
add
xor
push
mov
not
out
or
cmp
repz
xor
xor
mulb
adc
ljmpw
pop
mov
sahf
mov
lock
sbb
and
xor
mov
mov
cli
bound
int3
xchg
xor
pop
fdivl
xlat
and
mov
faddl
loop
add
adc
push
ss
mov
mov
hlt
push
push
loope
sar
insb
ret
pop
lea
pop
inc
stos
js
pop
enter
fdivrp
std
mov
push
mov
sub
movsb
add
xchg
push
jge,pt
or
and
xor
call
scas
and
inc
gs
mov
std
sbb
dec
xchg
push
cltd
sbb
xchg
inc
xor
xor
xor
cmp
out
test
mov
shrl
pop
pop
and
mov
mov
sbb
mov
les
sbb
ffree
mov
xor
cmpsb
test
push
pop
pop
lahf
hlt
outsb
fs
popf
mov
movsb
int3
cmpl
xor
out
jbe
addr16
add
or
ss
adc
cmpsl
ja
imul
out
test
lods
nop
mov
sbb
lea
jne
lods
sarl
add
jle
iret
xchg
sti
inc
bound
adc
lret
and
or
fs
dec
push
stc
cmp
loope
xor
mov
mulb
je
fisttpl
loope
fistpl
daa
mov
je
cmp
mov
es
pusha
shrb
sub
xor
sti
mov
xchg
sub
xorl
mov
std
mov
dec
ss
rorl
xchg
sbbb
mov
imul
push
mov
sbb
push
lods
hlt
pop
jp
xor
imul
out
xchg
rcll
mov
pop
push
add
cmp
pop
jbe
inc
rorl
inc
daa
in
repz
lret
jmp
cmp
add
movsb
lret
lahf
loop
dec
jno
int
dec
mov
sbb
push
sbb
sub
lds
pushfw
shlb
xchg
xchg
mov
iret
xchg
sar
cld
xlat
push
divl
out
dec
cmovl
fs
aas
adc
or
push
mov
sti
push
ret
rolb
push
xchg
xlat
loopne
lods
and
push
pop
outsb
sub
lock
dec
jg
sub
mov
out
cmp
xchg
mov
xlat
xchg
inc
mov
cmp
dec
dec
dec
cmp
test
jo
imul
sbb
fstpt
mov
movsb
mov
inc
mov
mov
mov
cmp
xor
call
push
mov
das
and
into
sbb
mov
in
ss
pop
lahf
mov
sbb
rclb
icebp
xchg
pop
pusha
add
or
lret
jno
stos
repnz
sbb
xchg
mov
cs
icebp
js
stos
scas
popa
pop
test
pop
call
andb
nop
jmp
aam
out
pop
insl
stos
insb
mov
fwait
xchg
scas
mov
sub
test
lahf
insl
or
loopne
sub
subl
xor
and
inc
xchg
imul
sbb
mov
xor
es
stos
sbb
aad
pushf
cmp
pop
pop
movups
cwtl
push
imul
cltd
pushw
jns
cmp
xlat
add
cmc
dec
jmp
sarb
repnz
enter
aad
sub
aas
inc
fmuls
test
dec
xchg
cmpsb
jb
xor
xor
popa
loope
pop
cmp
mov
movsl
ret
push
xchg
insl
subl
scas
aaa
or
cmp
xorps
es
cmpsb
cmp
fcoml
cli
xor
or
rorl
mov
jge
ljmp
xchg
adc
fcomps
add
call
loop
enter
push
idivl
inc
xchg
inc
scas
pop
add
xchg
or
pop
adc
stos
adc
adc
push
mov
mov
jg
aas
cmp
cmp
icebp
and
fs
xchg
cmpl
push
test
int
inc
push
gs
lods
int
daa
xchg
mov
or
jp
mov
mov
xlat
dec
aam
mov
in
pusha
xor
not
and
adc
adc
jo
mov
rcll
jp
push
xchg
dec
jle
jbe
imul
xor
sbb
xor
arpl
cs
mov
clc
jle
inc
cli
xchg
cmp
cli
test
dec
pop
sub
sti
sbb
and
inc
jbe
dec
idivb
mov
inc
mov
mov
lods
ds
jge
sbb
xchg
xor
popa
push
push
sbb
or
test
repnz
mov
pop
add
lret
sahf
cmpsb
sahf
idivb
arpl
cmpsb
sbb
dec
test
push
add
and
cmc
je
add
int3
fimull
xor
mov
sbb
orb
pop
mov
test
sub
imul
pop
xchg
pop
sti
fdivr
mov
leave
loope
leave
lds
mov
setl
and
cld
outsb
pop
es
and
imul
mov
roll
dec
xor
lock
and
call
cmp
cwtl
arpl
xor
fidivrs
push
xor
or
mov
dec
inc
sbb
and
mov
push
fstpl
jnp
and
jmp
mov
leave
jb
fldl
cmc
cltd
test
das
add
and
jae
mov
fmuls
add
into
mov
inc
xlat
mov
fcomp
inc
cmpb
cmp
call
shrb
inc
orb
out
adc
lahf
repnz
insl
imul
dec
mov
les
pop
add
jp,pt
pusha
adc
loopne
mov
mov
dec
and
sub
or
or
push
cmp
data16
clc
andl
in
cli
das
mov
push
jmp
add
cld
ljmp
mov
sub
sbb
add
test
mov
push
dec
data16
jno
mov
or
sub
and
xchg
pushf
js
fiadds
lahf
pop
pop
mov
cmp
lret
les
lds
mov
xchg
cli
mov
lds
outsb
ror
xchg
pushl
out
cmp
mov
pop
push
out
sti
pushw
mov
or
stos
mov
es
jb
stos
out
pop
xchg
xchg
or
fistps
lea
pusha
mov
mov
ljmp
inc
mov
mov
inc
je
pop
imul
pop
add
clc
jmp
sub
dec
shll
cmp
cmp
xchg
and
dec
lods
test
fistps
push
jno
and
jmp
mov
jle
pop
ja
pop
dec
aam
popf
loope
push
icebp
loope
adcb
dec
mov
pop
xchg
inc
adc
push
push
cmpsl
out
test
rep
or
fcompl
add
or
or
into
es
test
mov
mov
out
inc
xor
sarb
mov
mov
daa
jl
clc
cmp
scas
imul
into
call
mov
pop
push
mov
pop
sahf
xchg
test
call
mov
in
sarl
fsts
adc
mov
in
add
mov
arpl
sbb
xor
rclb
add
repz
cmpsl
in
mov
xor
jle
int
adc
or
xor
clc
sbb
outsb
mov
addr16
aam
inc
sti
pop
jmp
push
sbb
outsb
mov
shrb
std
and
add
jb
xor
xchg
mov
pop
scas
leave
lods
inc
mov
jl
mov
push
sbb
test
test
fs
jae
push
je
cmc
xor
addl
dec
and
jne
xor
outsb
jae
sub
push
jbe
xchg
pop
loope
sub
add
lret
dec
inc
sub
das
mov
adc
ljmp
rcrb
mov
mov
push
or
fsubr
jp
add
gs
jecxz
mov
dec
and
imul
inc
les
xchg
js
inc
or
into
fstpt
ljmp
sub
xor
subl
push
mov
cmp
mov
in
xchg
xor
cmp
mull
mov
adc
adc
xlat
gs
pop
bound
xor
aaa
adc
pop
xorl
iret
xchg
arpl
leave
pop
mov
inc
xchg
xchg
and
les
jge
loop
push
test
mov
scas
bound
out
sbb
inc
hlt
movsb
inc
cmpsl
fsts
ret
aad
out
out
jmp
int
sub
push
mov
adc
mov
mov
sub
dec
push
hlt
xlat
and
sbb
sub
adc
cmp
push
or
lret
int
add
xchg
movsb
inc
ret
push
xlat
jg
divb
add
pop
dec
inc
in
push
enter
outsl
jecxz
add
cmpsl
sbb
ret
ja
pushf
sbb
dec
cmpsl
mov
dec
out
lods
dec
es
pop
enter
subl
add
inc
mov
ficoms
test
stos
ljmp
mov
int3
les
xchg
jg
ret
dec
mov
jmp
in
push
jnp
xor
das
sbb
repnz
lahf
mov
push
in
lahf
fldl
add
shlb
cmp
jno
jae
mov
dec
sbb
sub
inc
mov
lret
jmp
jmp
mov
adc
outsb
arpl
xchg
mov
mov
add
inc
push
stos
and
jecxz
aaa
cld
jno
jg
gs
and
leave
fcompl
add
cmp
jg
paddusw
cli
fldenv
into
repnz
fs
pop
mov
enter
pusha
dec
add
pop
ss
sbbb
and
add
lods
sub
xchg
mov
frstor
xor
sub
stos
lar
sbb
jmp
popf
mov
mov
nop
aad
cwtl
fmull
add
jmp
dec
cmpsb
or
xchg
and
pop
cli
fs
and
dec
arpl
inc
popa
jbe
dec
insl
imul
pusha
aam
lahf
mov
and
je
shrb
xchg
mov
in
outsl
pop
xor
lds
xchg
es
xchg
cmp
mov
ret
xor
decl
ja
mov
inc
or
sahf
mov
push
aaa
push
popf
sub
popf
sahf
push
rcr
sub
add
test
icebp
popf
push
movsl
add
sbb
iret
pop
jns
lods
or
add
push
loop
adc
stc
iret
andb
push
rcrl
dec
dec
in
push
and
mul
ja,pn
fbstp
push
int
ljmp
cmpsb
xchg
mov
mov
shlb
or
dec
fmuls
jb
in
test
daa
inc
xlat
lcall
inc
or
add
xchg
cmp
xor
pop
data16
aaa
test
push
movsb
loopne
pusha
cmpsb
mov
nop
jb
insb
fs
lds
inc
jg
sub
std
pop
pop
std
push
pop
xor
movsb
inc
sti
scas
inc
xor
mov
xor
xor
and
out
xchg
push
pop
mov
adc
fmul
in
push
inc
lahf
test
dec
or
int3
pop
add
in
xchg
cmp
cli
repnz
in
dec
inc
and
sbb
js
mov
jmp
jecxz
sub
inc
sub
sub
inc
inc
pop
cs
pop
insl
iret
fs
jmp
insl
iret
iret
cmp
test
popf
iret
mov
js
push
push
je
mov
jle
into
inc
jp
and
insb
jo
jae,pn
mov
addb
xor
xchg
mov
sbb
pop
jne
fstl
mov
xor
into
or
in
in
mov
ljmp
test
pop
inc
mov
xlat
cltd
test
dec
xlat
jp
inc
xchg
push
pop
mov
mov
pop
nop
jns
aam
jnp
mov
pop
dec
or
inc
test
popf
cmp
dec
icebp
lods
lret
adc
pop
adc
mov
clc
mov
test
push
jmp
lods
add
mov
cmp
or
xchg
movsb
or
test
jb
fadds
icebp
inc
cli
cmpsl
xlat
pusha
int
inc
fcmovu
mov
inc
push
popf
push
dec
mov
scas
adc
and
in
cmc
xchg
add
fs
inc
popa
dec
pop
sbbb
cltd
push
pop
sub
pop
xorb
sub
add
lret
cmp
mov
rcrb
mov
adc
js
xor
shrb
dec
addr16
pop
adc
decb
mov
lret
stos
pop
sbb
jo
pop
data16
mov
scas
inc
repnz
mov
decb
out
aas
fisubrs
into
fistpll
iret
lcall
out
push
lahf
jle
outsb
mov
mov
outsl
mov
decb
out
aas
fisubrs
into
fistpll
iret
lcall
out
push
lahf
jle
outsb
mov
mov
outsl
mov
decb
inc
aas
fisubrs
into
fsubp
iret
lcall
out
push
lahf
jle
outsb
mov
mov
outsl
pop
decb
out
mov
shll
push
push
out
jns
testb
inc
mov
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
xor
out
mov
int
mov
xchg
jbe
and
inc
inc
ss
mov
xor
out
mov
ret
mov
cmpsb
jecxz
xrelease
jbe
push
push
push
xor
ss
arpl
xor
out
mov
ret
mov
cmpsb
jecxz
xrelease
ficoms
push
xor
dec
sub
notb
xchg
xorl
push
call
pusha
ret
enter
out
push
xor
or
ds
xor
add
cltd
scas
push
mov
mov
inc
lea
scas
sbb
imul
stos
popf
cmp
ja
sbb
cltd
fcoml
push
jmp
xchg
gs
xor
ret
mov
cmpsb
sbb
lods
add
scas
test
cmp
arpl
jno
jl
out
leave
push
mov
js
fdivs
adc
mov
fiaddl
pusha
stos
sbb
mov
aas
cmp
adc
sbb
js
push
add
fildl
inc
jg
push
loope
add
pop
xchg
out
mov
ret
mov
cmpsb
jecxz
xrelease
jbe
and
inc
inc
ss
arpl
jae
lds
scas
scas
ficompl
inc
adc
adc
pop
add
push
cmp
adc
inc
xor
in
mov
mov
xchg
adc
bound
jbe
es
pop
dec
adc
push
ljmp
mov
jecxz
xrelease
jbe
and
inc
inc
ss
arpl
jae
xor
out
mov
ret
mov
cmpsb
jecxz
xrelease
jbe
and
inc
inc
ss
arpl
jae
xor
scas
sbb
sbb
push
fcoml
repz
imul
ss
dec
push
xor
ret
mov
add
mov
pop
add
sub
pop
mov
push
mov
mov
lods
iret
test
fcmove
cmp
mov
xchg
outsl
jb
or
bound
inc
mov
and
cltd
cltd
push
mov
mov
or
pop
stos
clc
das
add
add
into
adc
xor
or
adc
xor
fimull
imul
pop
mov
cmp
js
xchg
and
std
das
je
enter
data16
mov
fs
call
ja
xchg
adc
push
sbb
aam
push
filds
mov
cmp
pop
xchg
xlat
out
pusha
push
inc
cmp
lahf
popa
jle
mov
push
mov
and
pop
add
adc
xchg
cs
mov
ss
add
xlat
outsl
jo
mov
nop
fistpl
negl
add
push
sub
or
int3
mov
and
test
rol
xchg
adc
or
les
xchg
cmpsb
out
out
sbb
mov
sti
into
loopne
inc
mov
loop
aad
stos
hlt
lretw
insb
push
mov
arpl
mov
jbe
add
sbb
mov
outsl
mov
dec
jp
pop
push
jb
cmpb
adc
xchg
push
lahf
or
lret
sub
les
mov
mov
aam
test
cmp
or
stos
pop
dec
push
mov
sbb
xchg
ja
adc
dec
mov
sbb
pop
and
cmc
push
cwtl
les
jne
loope
repz
xlat
jo
lods
test
iret
mov
add
mov
dec
pop
sti
jne
loop
jle
or
add
jg
inc
ret
add
lods
push
cmp
es
or
push
gs
mov
and
jne
shrb
push
sub
fistl
jge
xchg
adc
and
or
push
insb
inc
xor
enter
pop
rorb
pop
mov
rorl
mov
stos
je
jns
sbb
jns
push
cmpsl
sti
xchg
fsubrl
push
in
cli
cmc
in
mov
test
fistpl
lods
and
pop
mov
sbb
loop
cld
mov
sbb
sbb
gs
cmpsb
push
aaa
sub
out
scas
jge
mov
out
inc
push
cmp
push
inc
out
repnz
pop
xlat
sub
adc
ret
test
inc
and
dec
movsb
dec
enter
or
push
insl
dec
and
lods
xor
stos
or
decb
outsb
jecxz
or
adcb
sub
pushf
sbb
adc
aam
sbb
cmp
push
sub
std
push
das
aam
and
adc
shll
test
int3
ret
fs
jno
xchg
mov
jno
xchg
add
out
mov
enter
outsl
dec
jp
inc
pop
scas
add
aam
add
neg
push
jle
call
mov
repz
sti
dec
push
jns
fsub
mov
or
scas
pop
cmp
out
imul
mov
push
sub
pop
dec
xchg
data16
fcompl
incl
sahf
sub
adc
fs
mov
dec
lods
lret
cmpsb
cmp
sbb
mov
mov
mov
or
mov
stos
scas
mov
inc
sbb
push
dec
mov
or
mov
daa
mov
pop
mov
cltd
js
jg
cmp
movsl
and
les
shll
les
fst
dec
repz
fldenv
add
movsb
pop
jl
stos
daa
fimuls
aas
mov
jno
sbb
mov
dec
push
or
sub
cmc
push
negl
mov
pushf
cmp
out
sahf
jne
daa
cs
sub
addr16
int
cmp
mov
pop
je
mov
mov
loope
jle
lret
mov
mov
or
adc
jae
into
add
mov
arpl
cmp
insl
xchg
leave
repnz
cwtl
loopne
mov
iret
aaa
fnstcw
add
dec
es
test
ret
xchg
fcoms
xor
and
leave
adc
mov
scas
clc
inc
pop
dec
sub
stos
out
subl
std
cmpl
jne
adc
insl
gs
pop
ds
and
mov
push
pop
sub
outsb
jnp
movl
cmp
mov
xchg
aaa
cmpsb
cld
pop
scas
clc
or
sub
mov
imul
es
or
xor
rol
dec
mov
mov
aaa
lahf
in
pop
add
imul
or
jecxz
inc
out
fsubrl
mov
test
pop
sarl
pusha
scas
lahf
inc
mov
sub
stc
sbb
mov
sub
xchg
cmpsb
xor
cmp
mov
jo
sub
lock
test
cmpsl
outsl
add
adc
popa
scas
ljmp
mov
xchg
and
aam
jo
jno
stc
pusha
gs
dec
lahf
scas
mov
cmp
sar
sub
add
push
nop
aaa
pop
adc
xchg
jbe
sbb
and
addl
fisttpll
in
stos
pop
iret
fsubl
je
sti
xchg
bnd
sub
fs
pop
icebp
jl
ret
imul
scas
mov
test
or
xor
sub
aaa
xor
mov
ret
shrl
aas
out
xchg
cmp
scas
in
in
insl
mov
jle
push
imul
loope
xor
mov
jg
add
add
jo
fnstenv
icebp
jmp
and
sub
mov
dec
push
aam
sub
push
jmp
cmp
dec
lret
adc
ror
popa
adc
mov
scas
popa
adc
popl
inc
inc
scas
fcomps
sbb
add
scas
test
inc
jp
fstpl
push
add
push
dec
lods
pushf
sbb
adc
jecxz
lock
das
cmc
or
cmp
adc
pop
pop
sysret
js
or
jno
inc
cmp
lock
adc
scas
in
cmp
aaa
jno
nop
xor
or
xchg
aaa
dec
sbb
cmp
cmp
push
inc
outsb
pop
inc
add
mov
mov
cmp
mov
int
popa
int
sarb
adc
mov
and
shlb
mov
cli
mov
jnp
andl
scas
or
jecxz
jae
aas
lret
sbbb
sbb
rorl
add
or
cmp
ja
and
push
aas
cld
cmp
cmp
leave
dec
rol
cmp
lods
or
aam
inc
push
pusha
cmp
mov
lods
xor
jge
cmp
data16
xchg
and
dec
pusha
mov
pop
dec
cmp
xor
cli
ficomps
aad
jb
push
aam
jg
icebp
add
jg
mov
pusha
shlb
and
inc
pop
test
dec
sub
sti
dec
mov
lahf
mov
adc
das
mov
mov
add
pop
xchg
pushf
aad
dec
test
sub
push
xor
dec
jne
mov
rolb
pop
out
shlb
hlt
leave
repnz
into
stos
adc
push
pusha
or
iret
sbbb
push
dec
arpl
mov
insb
stos
jae
or
mov
mov
jp
inc
ret
jne
pop
or
push
daa
xchg
loope
inc
test
pushf
scas
fidivrl
into
sub
cmp
jne
mov
lahf
ret
daa
push
sub
push
stc
xor
fnclex
imul
sub
dec
ret
arpl
loope
xchg
xor
fs
and
pop
movsl
cmpsl
inc
ljmp
xorb
push
stc
adc
pop
out
adc
xchg
pop
push
push
fwait
inc
xor
subl
shr
ret
or
cmc
add
mov
scas
cmpsl
pop
mov
rol
jb
and
push
pop
int
test
mov
xchg
in
push
bound
adc
in
mov
or
cmp
aas
mov
xchg
jns
outsb
jb
imull
xor
jns
xchg
sub
ss
sub
ss
adc
fists
add
sbb
xor
je
jne
xor
sub
sbb
xchg
pusha
bound
pop
sub
pop
sbb
inc
push
cli
inc
xor
ss
sbb
mov
stos
int3
xchg
xlat
stc
or
shr
mov
or
mov
mov
mov
mov
cmpsb
adcb
mov
inc
roll
or
mov
cmpb
push
fstpt
sub
test
enter
dec
rcl
adc
fcmove
cmp
orb
mov
xchg
insb
jmp
and
sbb
pop
xchg
mov
dec
jmp
mov
jmp
inc
movsl
mov
xor
in
rcr
add
bnd
mov
cmp
cmpsb
jge
test
cmp
pop
mov
or
mov
mov
je
icebp
cwtl
fldl
push
stos
inc
and
dec
push
mov
cmpsl
mov
cmp
sbb
imul
sti
jo
push
scas
adc
or
mov
les
or
lahf
sub
dec
or
shrl
lods
nop
test
push
jge
outsl
jns
daa
push
lock
xchg
imul
bound
data16
lods
mov
notb
sub
sub
popa
cmp
jmp
adc
jecxz
push
and
xor
dec
xchg
std
aam
jle
pop
outsl
int
popa
sarl
out
stc
mov
fbld
sub
shl
sbb
mov
mov
inc
sti
and
cmp
or
insl
fnstcw
lods
clc
adc
add
gs
cmpsb
subb
xchg
and
adc
mov
std
and
lock
movsb
loope
push
dec
jnp
mov
sub
cltd
cld
lcall
notl
lods
rorl
xlat
pop
inc
mov
and
fldt
inc
push
in
jle
pushf
lods
mov
jbe
jl
xchg
jns
inc
fidivs
std
and
mov
ss
shl
movsl
into
dec
rdmsr
sub
les
push
ret
cmp
int3
mov
cwtl
pop
mov
dec
inc
push
fisttps
sub
pop
leave
lods
daa
jmp
jne
scas
lret
aaa
or
mov
into
fistps
cld
pop
inc
movl
ja
shlb
and
pop
inc
mov
push
je
mov
cmp
test
push
push
cmpsb
sub
scas
cmpsb
in
mov
jae
jne
jecxz
daa
add
pop
or
jecxz
mov
add
aad
sbb
pop
insl
iret
cmp
imul
punpckldq
jo
scas
inc
dec
loope
orl
pop
xlat
cmc
mov
adc
inc
lock
mov
dec
dec
repnz
jns
int3
mov
lahf
loop
popa
sti
jno
xlat
out
or
fistpll
inc
xchg
icebp
pop
ss
mov
stos
cmp
mov
push
aaa
dec
xchg
enter
jp
fs
jmp
stos
ret
aam
jne
ss
cld
add
inc
cs
scas
adc
mov
lock
add
es
int3
mov
push
ds
flds
out
or
fnstsw
cmp
ja
dec
daa
fcmovnbe
dec
mov
stos
pop
fidivrl
cmp
lahf
cmp
repnz
jle
imul
fildll
xor
out
pop
push
sub
xor
int
jno
push
out
mov
iret
mov
rcl
arpl
js
mov
popa
std
sbb
in
cmp
aaa
push
insl
xchg
sub
xchg
mov
in
dec
or
pusha
ja
sbb
pop
dec
scas
mov
mov
sub
xchg
pop
add
ss
jnp
fsts
imul
sub
dec
jo
ljmp
out
xchg
xor
cmc
cwtl
add
jbe
jb
jp
dec
test
fwait
pop
or
mov
cld
dec
mov
and
js
dec
cltd
jp
and
mov
insl
pop
insl
adc
dec
rcll
mov
das
xchg
jo
test
push
lret
mov
push
cmc
inc
sub
inc
jecxz
orb
xchg
inc
andb
sbb
jecxz
arpl
mov
fnstsw
sub
inc
jb
sub
popa
jge
stc
sub
mov
pop
xor
stos
clc
insl
pop
ret
push
fldt
push
xchg
mov
call
mov
add
ja
push
loope
mov
cld
in
mov
push
push
jno
out
mov
cmpsl
cmpsb
lahf
lods
xchg
dec
test
push
cmp
xor
cmp
jp
or
sub
mov
pushf
add
loop
push
and
xchg
pop
js
sahf
dec
and
es
lods
cmpsl
pop
add
cmp
adc
sbb
mov
push
fucomp
lods
imul
icebp
add
jns
add
or
mov
out
int3
mov
sbb
mov
lcall
add
and
dec
or
adc
cmp
dec
pop
xor
mov
pop
hlt
in
jmp
dec
or
add
sarl
pop
or
in
pop
or
ret
scas
cmpl
out
add
in
aam
shll
mov
insb
int3
scas
das
push
mov
cmpb
mov
sahf
loopne
jmp
cli
xor
in
imul
lods
inc
sti
fsts
clc
pop
ss
movsl
pop
sbb
add
xchg
jle
mov
jo
les
push
sarl
loop
cmpsl
add
mov
clc
sub
call
pop
lds
inc
inc
cwtl
inc
pusha
or
mov
lods
or
cmpsl
or
sbb
test
mov
popa
sti
out
cmp
pop
movl
cmp
outsb
dec
pop
sahf
ret
push
clc
out
cmp
cwtl
outsb
ret
cmp
push
jmp
mov
xlat
cs
cmp
mov
cmp
in
xacquire
mov
jno
xchg
and
adc
sub
xlat
test
jmp
pop
mov
shrb
fisttpl
mov
fcoms
fcoms
lods
jmp
jecxz
jbe
sti
insl
cmp
inc
mov
jbe
mov
ret
cmp
out
cmc
loope
arpl
rclb
bnd
push
cmp
mov
dec
clc
or
lea
fisttpll
inc
jg
ja
xor
jle
leave
insb
mov
in
cltd
insb
es
push
jge
or
jne
or
fistl
loop
cmp
fwait
sub
lods
and
cmp
mov
sub
xor
int
dec
push
icebp
sub
or
xchg
inc
repnz
sbb
xchg
lea
mov
cltd
push
add
and
xchg
es
outsb
cld
mov
or
cmp
cmp
inc
cmp
out
cmpsb
pop
mov
adc
inc
testl
jb
stos
jmp
push
lret
jl
push
movsl
xchg
icebp
popa
adc
jge
inc
push
hlt
inc
xchg
loop
lahf
repnz
pop
jo
push
dec
inc
jbe
dec
js
sbb
pop
out
jbe
and
int3
push
sub
jnp
sbb
xor
dec
fsubrl
and
ljmp
ja
maxps
inc
push
pusha
sbb
push
das
insl
mov
loopne
stos
arpl
test
mov
test
fwait
enter
js
mov
pop
push
nop
mov
iret
scas
dec
inc
cmc
xchg
mov
cs
sbb
adc
and
std
mov
add
mov
pslld
dec
add
aas
jp
les
pop
lcall
inc
jp
das
pop
adc
addr16
das
mov
in
fwait
ljmp
xchg
mov
xor
in
or
aam
sbb
mov
icebp
sub
into
cmp
inc
cld
pusha
in
pop
cld
mov
and
ret
adcl
xchg
insl
adc
xchg
lea
xchg
sub
iret
je
xchg
loopne
in
mov
dec
inc
scas
xor
sub
in
scas
mov
or
add
dec
test
inc
mov
mov
pusha
dec
dec
mov
sbb
rcll
daa
daa
loope,pt
push
mull
fsubl
js
call
fs
aad
xor
inc
cli
push
jle
mov
mov
mov
or
test
push
xor
fisttpll
stos
loopne
fsts
dec
adc
pop
call
mov
shlb
int
fistpl
test
push
scas
and
or
push
icebp
shl
test
mov
sub
call
mov
mov
arpl
mov
inc
repz
add
sub
aad
cwtl
es
loope
add
aaa
cmp
or
sub
inc
sbb
jecxz
lret
outsl
fnstenv
or
inc
inc
sti
mov
sarb
movsl
or
scas
push
cs
mov
xchg
dec
mov
daa
mov
add
bound
lret
add
mov
dec
arpl
mov
adc
sbb
std
ret
clc
and
in
out
fucomp
xchg
pop
and
xchg
xor
je
or
add
jo
jnp
mov
xor
fadds
cli
mov
in
adc
jecxz
lret
sti
adc
aaa
jp
dec
xchg
mov
dec
and
inc
loop
jl
fdivrl
inc
jo
dec
lret
sub
in
data16
and
fnstcw
adc
xor
mov
sbb
lahf
xlat
loopne
inc
mov
sarl
jp
inc
fists
jl
div
insl
cltd
pop
les
loopne
cmp
pop
nop
mov
insb
int3
dec
xchg
outsl
dec
jb
jo
jne
jle
repnz
cmp
mov
inc
mov
xchg
scas
mov
gs
or
push
lds
mov
and
push
jb
in
cmpl
pop
add
out
cmpsb
mov
gs
xchg
pusha
repz
dec
cwtl
lods
loopne
movsb
loopne
push
cmp
inc
iret
rolb
xor
loop
or
pop
cmpsb
xchg
cmpsl
iret
into
cmpsl
adc
mov
cmpsb
jmp
mov
lds
out
outsb
test
push
ret
adc
or
cld
pop
adc
addl
ret
ret
les
adc
fmull
jns
adc
pop
mov
in
sbb
cmp
fildll
pop
loope
aad
mov
sbb
daa
test
jae
jb
shrl
cli
jle
out
and
mov
ficomps
cs
lcall
jle
ds
hlt
or
mov
jb
xchg
jae
pop
lods
inc
ds
ret
or
mov
adcl
xchg
insl
lea
dec
ret
dec
sub
xchg
jle
in
mov
loop
aaa
lods
mov
dec
jle
inc
mov
shl
push
ret
xor
adc
mov
lea
push
imulb
testl
mov
stos
jno
push
cmp
jge
icebp
xchg
icebp
mov
push
leave
sbb
repnz
bound
lret
or
cmp
fnsave
mov
pop
test
push
dec
iret
sub
cld
jae
icebp
and
in
and
enter
stc
mov
sub
aaa
jo
rcl
jns
dec
xchg
int3
push
mov
stos
pop
and
mulb
sbb
cmp
mov
pop
pop
xchg
push
cmp
inc
addr16
test
insb
add
popf
mov
sub
and
sbb
mov
cwtd
jnp
xchg
lret
push
xor
adc
hlt
sub
dec
das
and
or
cmp
cmp
sub
insb
cmpsl
out
or
insl
stos
xchg
sarb
out
das
mov
pop
mov
int3
stc
out
xchg
pop
call
icebp
lods
jecxz
xchg
add
pop
and
sub
and
jecxz
jae
aad
fwait
jge
ret
pop
imul
idivl
loope
lea
data16
nop
dec
xor
movsl
jecxz
jbe
sub
sbbb
dec
mov
cmpsb
lock
jb
and
nop
loopne
int3
fldt
mov
fdivl
mov
stos
pop
sub
cmpsb
or
pop
push
sub
jns
imul
jl
xchg
push
inc
sub
pushl
popa
adc
repnz
cmp
enter
jnp
sbb
int
pop
icebp
adc
hlt
mov
adc
out
mov
ret
mov
cmpsb
jecxz
xrelease
jbe
and
inc
inc
ss
arpl
jae
xor
out
mov
ret
mov
cmpsb
jecxz
xrelease
jbe
and
inc
inc
ss
arpl
jae
xor
mov
mov
es
xrelease
notb
and
inc
inc
ss
arpl
jae
xor
out
mov
ret
mov
cmpsb
jecxz
xrelease
jbe
int3
mov
xor
fcmovnu
pushf
jmp
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
add
pop
ss
inc
push
pop
or
cld
jbe
cmpsb
fdivl
in
out
out
bound
dec
pop
ss
inc
cmp
sub
sbb
or
cld
xchg
in
fdivl
lods
out
testb
out
dec
pop
cmp
sub
sbb
or
ret
into
lods
ror
lods
out
movsb
enter
mov
pop
sbb
cmp
inc
cli
push
in
mov
loopne
mov
cmpl
inc
ljmp
mov
shr
adc
add
inc
loop
and
dec
int
jl
daa
out
or
imul
imul
outsb
sbb
sarb
adc
mov
lret
cmpl
pop
ficompl
cmp
jbe
xchg
xchg
stc
and
dec
xor
out
cld
out
imulb
push
mov
shr
jecxz
pop
cmpsb
mov
repz
popf
cli
fdivr
stc
mov
idivl
mov
fadds
dec
inc
test
mov
mov
inc
insb
es
ss
mov
sbb
or
cld
or
rcr
xchg
mov
lret
fs
sub
insl
adc
jl
nop
lds
mov
mov
jmp
push
pop
push
sbb
pop
xor
xchg
jae
or
mov
into
mov
vphsubwd
jp
inc
sub
adc
sbb
or
cld
xchg
in
cmpsb
fdivl
lods
out
testb
ss
inc
cmp
sub
sbb
or
cld
xchg
in
cmpsb
fdivl
lods
out
testb
negb
sahf
jb
mov
movsl
stos
les
pop
push
cwtl
or
dec
call
and
mov
or
cmp
out
out
mov
push
in
into
aam
xchg
in
sbb
pop
dec
cmp
test
xchg
cwtl
fs
es
in
xchg
ss
add
xchg
es
lahf
incb
mov
jle
ss
cmpl
bound
subl
sub
jle
pop
xchg
push
shlb
test
les
mov
push
mov
stos
fsts
rcr
and
out
adc
jne
sbb
testb
in
mov
push
jg
xor
pop
inc
cmp
rcll
lods
mov
frstor
loopne
mov
pop
jne
and
fdivrs
out
test
push
push
jo
aaa
dec
push
out
pop
data16
xchg
js
fs
rcr
mov
adc
cld
clc
clc
xchg
addr16
mov
fdiv
shrl
push
mov
sub
and
xor
ds
test
xor
jbe
and
xor
inc
out
adcb
nop
out
flds
fs
repz
push
push
mov
scas
add
or
push
and
mov
pop
cmp
push
ret
jae
orb
stos
fidivrs
addr16
jo
cwtl
iret
xchg
pop
leave
cmpsb
sahf
mov
add
fiaddl
or
cmp
push
inc
xlat
and
or
aaa
stos
jno
mul
fdivs
mov
out
and
jmp
and
test
push
test
jne
ret
xchg
or
cmc
sub
sbbb
jnp
jae
jmp
dec
sub
jge
jmp
inc
in
cmp
jae
jb
push
mov
xor
fcomps
add
cmc
cmc
mov
sbb
or
cmp
push
inc
push
call
cmpsb
int
cmp
ljmp
xor
lret
dec
pushf
sbb
dec
je
mov
lea
xor
fdiv
shr
mov
dec
pop
cmp
stc
orb
add
add
lods
fcoml
jge
mov
pmaxub
sbb
pushf
or
xchg
out
mov
inc
sbb
adc
sbb
gs
push
pop
sbb
pop
mov
pop
ret
xor
cmp
pop
mov
pop
jae
into
cmpsb
mov
sbb
jecxz
mov
pop
jge
fneni(8087
ja
add
mov
jb
dec
add
inc
jg
insb
cwtl
arpl
jo
ja
lahf
or
ja
sub
lods
pop
cld
lcall
sti
cvtpi2ps
lds
xor
pop
fsubs
bound
sub
sarb
inc
in
dec
das
sub
sbb
adc
cmc
mov
imul
fcmovnu
fcmovnb
fistps
push
stos
stos
outsl
shlb
leave
test
or
mov
fnsave
and
adc
push
lahf
ja
xor
sbb
in
add
inc
das
lret
xor
add
jle
inc
jecxz
ficoml
out
fsts
or
fcmovne
dec
mov
sbb
lret
xchg
fwait
inc
lahf
hlt
sbb
rclb
movsb
imul
lret
stc
scas
xor
iret
xor
in
fimull
shr
or
xlat
sub
scas
mov
mov
jmp
mov
out
push
ss
icebp
cmp
fs
popa
pushf
int3
mov
lods
or
xor
inc
cmpb
lret
sti
repnz
movsb
cmp
sub
cwtl
dec
mov
mov
arpl
mov
imul
pop
xchg
leave
mov
jno
cli
fdivr
pop
add
in
stos
cltd
cmp
xchg
mov
xchg
imul
jge
loope
push
cmc
or
int3
xor
test
mov
mov
jns
aaa
ret
cmp
test
jmp
xlat
dec
mov
or
mov
mov
xlat
fmuls
sahf
imul
insl
outsl
and
les
imul
pop
xor
dec
push
test
cld
xor
jl
scas
push
adc
movsb
dec
lods
lret
rolb
pop
xchg
push
push
adc
popf
das
cmp
popf
jle
jo
pushf
ss
mov
mov
mov
stc
xor
scas
push
xchg
and
test
mov
fnstsw
and
pop
inc
cltd
int3
ds
or
stc
stos
inc
mov
mov
imul
push
mov
mov
ret
push
out
cmp
leave
cs
outsb
scas
inc
sbb
orb
xchg
mov
mov
mov
out
xadd
cwtl
jnp
js
mov
stos
push
popf
cmc
jg
test
pop
dec
fisubrl
hlt
cld
stos
mov
xchg
shl
popa
push
push
cmp
jp
js
or
adc
in
and
and
xchg
outsl
out
xchg
jg
test
out
mov
repnz
mov
and
mov
mov
inc
in
push
jbe
jnp
rorb
dec
push
push
push
mov
punpckhdq
imul
jecxz
insl
iret
ret
pushf
or
xchg
fisttpl
adc
xchg
xchg
cli
shr
push
push
pop
inc
out
pusha
mov
lds
mov
jbe
mov
out
divps
adc
mov
sbb
cmp
cld
pop
rcll
lods
hlt
mov
adc
in
xchg
xlat
mov
and
es
clc
ret
mov
jle
aaa
pop
sbb
dec
pop
sub
lods
mov
sub
ljmp
mov
sahf
jp
gs
dec
cwtl
rorb
add
int
popa
jl
sbb
ja
cs
inc
dec
pop
lret
push
pop
pop
ljmp
mov
nop
popf
rcr
sbb
addr16
mov
adc
outsb
inc
pop
jmp
lock
mov
add
das
fdivs
out
sbb
aam
xchg
push
cld
jl
mov
add
jp
mov
push
dec
sub
add
inc
jbe
in
outsl
push
inc
jbe
push
ret
fadd
push
les
jge
and
ficoms
fistpll
fistl
sub
leave
sub
fsts
sub
pop
pop
jp
mov
mov
mov
inc
cmp
and
neg
or
xlat
std
out
shlb
inc
xchg
fisubs
subl
xchg
inc
mov
pop
xor
cld
ja
fstps
jg
add
mov
or
shlb
dec
xchg
frstor
popa
adc
jmp
imul
insl
outsb
lret
mov
push
subb
aam
lds
inc
fs
mov
fildl
sbb
jge
in
ds
shrb
dec
xor
imul
in
cmpsl
cmp
stc
mov
fisttpl
nop
inc
xorb
dec
aaa
lcall
psubsw
xor
lea
jbe
and
xchg
addr16
xchg
adc
mov
cmpsl
popf
repnz
es
xchg
cmp
pop
jne
cli
or
and
rcr
pop
cmp
pop
inc
jns
cmp
xor
adcl
mov
push
sub
scas
ljmp
mov
pop
jno
push
push
jnp
addl
mov
push
repz
out
pop
gs
roll
and
ds
movsb
or
add
sub
shrl
cmp
lret
or
clc
ret
nop
jp
xchg
mov
sbbb
mov
xor
mov
and
shr
fstpt
dec
lret
push
loop
cmp
pop
xor
mov
insb
push
out
fstl
scas
mov
dec
int3
out
shll
pop
insb
iret
addb
mov
push
sub
das
les
mov
sub
test
jge
outsl
jb
jle
dec
inc
pop
scas
push
fistl
push
xor
fmull
mov
rorl
ret
mov
adc
loopne
adc
cwtl
dec
adcl
subl
mov
outsl
aas
xor
mov
push
insl
adcb
inc
mov
pop
jae
imul
or
rcl
sbb
sub
sbb
adc
or
std
sub
dec
ja
inc
mov
cmpsl
pop
jge
loope
in
lret
adc
jnp
stc
or
add
test
xor
ss
mov
bound
lret
enter
into
or
mov
fstl
cmp
stc
and
icebp
mov
lcall
lcall
aaa
mov
loope
stos
ja
and
mov
icebp
popf
ret
inc
out
push
jg
mov
xchg
fnsave
adc
in
insb
sahf
jge
sub
fmull
mov
inc
popa
es
jge
lds
xchg
xchg
xchg
repz
imul
ret
fstpt
sub
jbe
or
sbb
fwait
xor
cmp
mov
mov
test
push
sub
xor
or
pop
and
gs
xor
insl
xchg
cmp
fwait
loop
ss
dec
push
sbb
cmp
adc
jl
push
test
pop
adc
lods
jp
mov
cmpsb
adc
jo
inc
jns
iret
enter
addr16
fcmovnbe
ja
push
lahf
in
jns
inc
adc
sbb
mov
mov
ds
lods
add
and
pop
les
std
add
repnz
jnp
jb
push
fildll
mov
sar
push
aad
call
inc
arpl
push
test
fwait
jl
sahf
inc
ja
push
jecxz
in
lea
jp
fmul
pop
mov
jo
std
push
inc
in
push
sub
jb
fwait
aas
pop
jne
mov
lods
jle
mov
es
pushf
and
lods
lea
adcl
or
sbb
arpl
es
int3
gs
cmp
std
dec
push
sub
pop
repz
adc
fwait
push
sub
or
cmp
push
shll
sar
lods
cld
lea
movsb
gs
mov
pusha
mov
sahf
or
cs
pop
jp
or
cmp
stos
xor
add
xchg
pop
loop
leave
fs
or
adc
dec
stos
or
mov
loop,pt
pushf
orb
mov
enter
insb
pop
movsl
mov
out
test
adc
pop
and
adc
mov
loop
dec
jnp
sbb
mov
out
arpl
jno
pusha
ljmp
jg
cmp
or
in
push
in
mov
and
pop
xor
cltd
stc
cmc
pop
cmpsl
xchg
mov
add
push
push
add
movsb
sbb
and
sub
xor
jl
push
mov
test
mov
mov
mov
mov
pop
dec
sbb
inc
mov
dec
mov
popa
mov
or
ljmp
stc
int
pop
inc
push
sbbl
xchg
dec
das
mov
push
pop
int
jge
inc
out
inc
in
jnp
push
lods
mov
push
cmpsl
call
mov
dec
pop
call
push
dec
add
popf
mov
push
js
icebp
xchg
cmp
fistps
and
mov
push
lcall
pop
add
adc
test
mov
iret
ret
jp
adc
lock
mov
or
push
cli
push
mov
push
aad
mov
mov
subl
and
iret
pop
std
idivb
clc
push
pop
mov
pushf
test
xorl
aad
loopne
dec
cld
mov
loopne
or
inc
imul
mov
push
cmp
jp
cli
push
hlt
test
fcmovnbe
push
out
adc
repnz
cli
xchg
std
mov
out
mov
add
out
cmp
jb
test
ljmp
add
xchg
pop
idivb
fisttpll
lock
adcl
adc
adcl
je
sbb
jmp
aad
gs
loop
repnz
jne
nop
xchg
and
fmull
clc
add
dec
lods
out
jb
mov
add
dec
or
adc
jp
movsl
ficoms
jne
fld1
shlb
pop
clc
es
es
xchg
cmpsb
sbb
mov
sub
add
popf
adc
inc
dec
cltd
movsb
mov
mov
mov
cmp
insl
loope
xchg
psubusb
inc
xor
jns
loop
gs
lret
lcall
pop
neg
jmp
mov
int3
mov
ret
inc
dec
pop
scas
jns
dec
xchg
inc
mov
inc
add
adc
jns
xor
cmp
lahf
add
sbb
add
fldcw
out
movsl
sub
fsub
xchg
push
sbb
loope
xchg
lods
pop
repnz
sbb
addb
push
adc
mov
mov
mov
mov
movsb
pop
test
pop
adc
dec
mov
cs
clc
ficoml
cmpsb
cld
lds
lock
sti
or
pop
add
lcall
iret
jnp
lods
jno
lds
cld
negl
loope
call
pop
push
std
addr16
lds
fbld
add
clc
mov
and
mov
sbb
divl
test
push
push
scas
daa
js
aaa
rclb
mov
mov
popa
cltd
out
pop
mov
push
subb
int
add
mov
cmp
fcoml
and
or
ret
push
pop
sarb
or
icebp
inc
gs
sar
add
pop
outsb
insb
ja
pop
xchg
sbb
jmp
das
cld
xchg
pop
sbbb
test
or
xchg
cltd
mov
adc
mov
push
icebp
jle
mov
lock
push
sbb
lahf
clc
fisubl
clc
nop
xor
gs
fidivl
ds
clc
jg
std
fcomi
cwtl
and
movsl
xor
jmp
pop
imul
icebp
aaa
repnz
and
fdivl
ds
enter
cmp
push
loope
jnp
xchg
iret
sbb
mov
icebp
sub
repz
jbe
dec
icebp
mov
mov
ror
shrb
mov
sbb
subl
out
mov
sbb
cld
test
cltd
push
mov
jae
or
cld
push
mov
pop
movsl
xor
push
and
xor
cltd
cmc
nop
movsl
jecxz
mov
ds
in
int3
inc
push
loopne
xor
jno
mov
adc
xchg
add
movsb
ds
jo
push
lods
iret
mov
subl
sbb
stos
hlt
jno
test
outsb
jne
pushf
jg
xchg
std
test
and
inc
mov
sub
add
rcl
hlt
adc
mov
into
xor
cmp
hlt
mov
sub
xchg
xorb
mov
das
addl
sar
jo
inc
mov
adc
lds
aaa
lret
ljmp
lock
lea
pop
or
fwait
dec
jg
mov
xorb
aas
aas
inc
in
dec
loope
out
xchg
mov
inc
jno
in
sub
ret
int3
cmp
cmpsl
aas
mov
xchg
jnp
mov
jo
add
pop
lret
sub
dec
push
mov
fs
outsb
std
push
mov
dec
sti
push
sub
jle
jmp
or
mov
mov
pop
inc
mov
inc
aam
pop
loopne
hlt
les
inc
xor
in
out
jae
xchg
ret
jp
lods
xor
push
mov
mov
mov
loopne
inc
lret
rsqrtps
sahf
pop
rorl
xchg
adc
dec
push
adc
popa
addr16
int3
movsl
add
add
mov
adcl
hlt
sbb
xor
jp
sbb
aam
mov
cmpsb
js
jmp
cmpsl
movsl
xor
mov
out
mov
pop
sbb
enter
aas
frstor
ret
mov
arpl
jmp
aam
lahf
movsl
xlat
cmp
pop
dec
test
mov
sub
out
xchg
push
leave
cmp
or
pop
inc
lods
loope
sbb
push
mov
insb
add
pop
hlt
jl
pop
ljmp
stos
or
xor
xor
ds
in
push
xor
stc
xchg
leave
iret
dec
insb
stos
out
fadd
out
scas
bound
sbb
xlat
sub
cmpsl
cld
test
cmp
jnp
jmp
lahf
cwtl
es
aad
dec
push
clc
scas
in
jp
lds
and
movsb
sbb
mov
fadd
ss
mov
push
jp
sub
frstor
jmp
test
gs
je
cli
outsb
cmp
ljmp
xor
or
cmpsl
std
imul
push
nop
add
jae
ja
in
add
pusha
popf
sbb
inc
nop
push
cmp
jge
jbe
negb
adc
in
xchg
mov
cmc
lods
jge
mov
adc
bound
imul
jg
pushf
cld
hlt
add
push
pushf
fdivs
gs
sbb
popf
cmp
sahf
cmp
cmpsl
dec
cmp
cmpsb
sbb
dec
test
xor
adc
cmp
fdiv
scas
out
add
push
mov
mov
xchg
sub
sbb
xor
mov
inc
cmp
out
loop
jne
add
sbb
xchg
mov
in
jae
insl
js
sahf
dec
movsl
fs
cmpsl
fidivs
cmp
in
sbb
cltd
xor
andl
fcomps
mov
adc
iret
sub
push
mov
cmpsl
pushf
adc
roll
jmp
and
mov
push
fucomi
cmp
push
sbb
inc
or
pop
mov
cmp
sub
out
adc
push
mov
out
test
push
lret
out
or
insb
pop
jno
dec
imul
or
push
adc
mov
fcoml
mov
icebp
lods
or
icebp
jns
cmc
push
out
sbb
xchg
aam
inc
shll
test
mov
gs
dec
arpl
xor
pop
stc
mov
iret
jl
mov
add
xchg
rcrb
aad
insb
xor
and
sub
sbb
dec
leave
xor
mov
sbb
and
ret
sahf
jp
hlt
mov
jo
inc
cmpsb
push
adc
dec
dec
push
sbbb
pop
mov
sbb
jnp
sar
inc
negl
mov
mov
mov
push
adc
fstpt
and
loopne
fs
lea
mov
test
in
jno
xlat
iret
hlt
cmp
mov
mov
cmp
cmp
popa
movsb
out
add
test
scas
fdivr
jle
repnz
outsl
lods
jbe
and
shl
cmpsl
pop
xchg
mov
push
push
pop
xchg
outsl
iret
mov
sub
roll
out
stos
pop
imul
xchg
shrb
icebp
cmpsl
test
mov
fadds
inc
pop
stos
fisttps
nop
in
mov
popa
imul
xor
imul
out
in
mov
dec
xchg
mov
push
dec
jae
pushf
jg
cmpsl
push
ja
fldl
jecxz
outsl
out
in
adc
daa
mov
sub
or
int
sbb
fdivs
push
mov
stos
nop
xlat
dec
adc
dec
aam
adc
lret
mov
out
mov
in
adc
stos
jle
in
sub
jae
mov
inc
outsl
pushf
rcrl
sub
popa
lock
sub
jb
push
mov
add
lret
jle
pushf
fsts
mov
enter
ljmp
inc
fisttpll
sub
push
push
test
mov
dec
mov
push
stos
cmp
into
mov
out
out
xchg
leave
and
xchg
inc
xchg
add
stos
daa
mov
xor
dec
mov
add
push
xor
call
arpl
dec
stc
jle
dec
cmp
inc
lock
pop
jl
pop
jl
add
push
jmp
stos
in
outsb
repz
out
sahf
enter
shll
inc
ljmp
mov
adc
arpl
shll
dec
xchg
cmp
sbb
movb
pop
and
adc
test
cmp
jae
dec
add
mov
adc
pop
loopne
push
jmp
push
jns
pop
or
xchg
repz
add
push
jmp
cmpsl
add
rorb
push
out
es
xchg
call
lds
insb
sahf
cmp
jns
jbe
imul
sub
push
inc
xchg
push
in
pop
aas
and
and
je
loopne
filds
jge
insl
mov
dec
in
cmp
and
mov
idiv
lret
and
aas
out
adc
xchg
daa
cmp
xor
outsb
sbb
mov
ret
and
sbb
sbb
fistpll
ret
in
add
nop
or
inc
arpl
shlb
pop
mov
sub
mov
adc
loopne
aas
test
mov
rclb
lds
das
test
insb
or
cmp
cmpsl
insb
popa
pop
ss
inc
cmp
sub
sbb
or
cld
xchg
in
cmpsb
fdivl
lods
out
testb
ss
inc
cmp
sub
sbb
or
cld
xchg
in
cmpsb
fdivl
lods
out
testb
ss
cmp
sub
sbb
xchg
in
push
fdivl
lods
out
push
mov
jl
insb
jl
push
dec
inc
cmp
lods
pushfw
div
xchg
imul
xor
push
sbb
jae
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
pop
mov
insl
xchg
test
stos
and
fcoml
int
std
pop
in
add
inc
lods
push
pop
mov
insl
xchg
sbb
ret
sub
xor
add
adc
inc
lods
push
inc
mov
jne
add
adc
leave
les
out
adc
sub
pop
loope
cli
cmp
out
and
jge
sbb
dec
sub
cmp
stc
ss
pop
mov
xchg
fwait
mov
gs
mov
add
xchg
or
sub
fsub
int
push
adc
int
popf
sub
mov
mov
int3
fisubrs
fdivs
and
xor
imul
mov
std
pop
dec
mov
dec
shl
or
ret
push
push
ret
int3
int
cld
adc
ss
rorb
out
and
mov
cld
sti
sbb
arpl
mov
cmp
sbb
imul
andl
inc
pop
cmp
in
fmuls
xchg
mov
mov
mov
or
sbb
lret
aad
in
hlt
or
pop
lods
push
xor
sbb
outsb
loope
xchg
jo
sub
xor
push
call
aas
xor
sub
adc
sbb
mov
sahf
push
test
std
data16
adc
and
daa
cmp
add
repz
and
xor
add
adc
inc
lods
push
pop
mov
insl
xchg
sbb
ret
sub
xor
add
adc
inc
lods
push
pop
mov
push
xchg
jno
jns
pop
and
ja
scas
insl
sbb
adc
stos
out
xchg
xchg
push
or
sub
insl
in
insb
mov
dec
push
decb
cmp
cmp
pusha
pop
mov
subb
mov
xor
sbbl
push
pusha
bound
lds
jmp
out
pop
es
xchg
mov
xchg
sub
and
dec
or
icebp
pusha
push
aad
pusha
addr16
cmp
test
xor
pop
adc
lds
sbb
cmp
inc
inc
push
dec
lods
mov
add
jnp
test
in
jmp
pop
add
outsl
stos
jno
outsb
stos
jno
idivl
cmc
in
ja
mov
lret
pop
lds
xor
push
push
fldenv
mov
sbb
inc
hlt
xor
out
mov
mov
stc
push
xchg
mov
roll
push
loope
or
or
les
mov
add
or
shrb
and
adc
inc
dec
jns
pop
test
cli
test
and
push
pop
mov
mov
mov
pop
lea
mov
or
mov
mov
jb
mov
push
mov
xchg
dec
shll
mov
jbe
lret
pusha
lret
push
cmp
mov
popf
test
and
insl
out
ret
loop
push
mov
sti
push
mov
popf
jbe
cld
sbb
mov
jl
sbb
es
mov
test
loopne
in
jns
mov
roll
inc
push
sub
out
push
cmp
mov
or
arpl
out
cmpb
pop
mov
jmp
fwait
sub
mov
and
push
sub
pop
jo
imull
stos
popa
cld
aaa
pop
sbb
or
pop
sub
xor
clc
adc
dec
fwait
pop
int3
pop
jg
movsl
adc
divb
clc
jp
jmp
ret
mov
jne
dec
notl
std
mov
out
iret
sbb
push
aad
xor
sbb
xor
dec
ret
outsb
nop
lcall
jecxz
test
xor
and
clc
xor
cld
daa
add
or
dec
divb
jle
addr16
lret
pop
pushf
loop
test
jno
inc
fadds
imul
imul
jne
iret
scas
std
fs
out
sbb
cmc
pop
scas
out
inc
loope
test
mov
add
cmp
in
lods
outsb
xor
xor
ret
ret
loope
or
cld
call
dec
inc
popf
dec
clc
decb
call
iret
mov
mov
mov
push
jmp
sub
fstps
xlat
in
out
sub
xor
icebp
push
sub
in
imul
sbb
es
sub
add
cltd
push
xor
fcompl
adc
stos
jo
jbe
cli
sbb
pop
mov
out
or
and
jnp
rcrb
inc
stos
push
lret
xchg
sarb
sub
adc
sbb
packssdw
cmpsb
ret
or
jle
add
jp
or
fnsave
mov
loope
jnp
imul
decl
mov
into
xor
and
test
sti
leave
popf
scas
imul
or
xor
push
pop
cmp
cli
mov
vprotb
fs
and
inc
mov
push
shl
or
call
xchg
sbb
stos
add
push
mulb
stc
push
mov
mov
leave
xchg
jmp
std
push
loope
loope
std
insb
push
xchg
ljmp
xchg
in
fucomi
ficoms
xor
aad
cmp
pop
test
inc
cmp
or
mov
mov
pop
sbb
mov
mov
adc
xchg
sub
adc
ss
mov
push
sub
push
dec
xchg
testl
and
int3
aam
or
adc
add
inc
scas
push
data16
inc
repnz
sub
cltd
sub
js
pop
int
jb
mov
cmpsl
inc
mov
dec
shl
lock
aaa
and
sbb
stos
enter
or
stos
push
sub
mov
lds
add
xchg
sbb
fisttpll
rcl
movsl
inc
into
lcall
rcrb
sub
rorb
cmp
and
inc
xchg
inc
stc
test
ret
int
and
lods
repz
aas
ja
andb
jno
pop
shll
call
or
mov
cmpsl
mov
icebp
ret
lods
jno
out
and
inc
sbb
into
and
and
ficoml
sbbl
push
hlt
pop
lea
test
stos
mov
cltd
jbe
arpl
mov
ss
in
adc
je
int
add
outsb
shll
pop
ret
inc
dec
adc
push
jle
in
outsb
mov
add
mov
dec
mov
outsb
and
pop
fcmovne
sbbb
bound
sub
cli
fadds
xchg
inc
iret
lods
inc
mov
xchg
ss
add
push
dec
gs
nop
add
test
repz
dec
fldenv
cmp
add
jnp
fisubs
mov
xchg
push
cltd
pusha
sbb
stos
mov
les
ret
sbb
sub
jl
les
repnz
cmp
adc
in
and
imul
jge
sub
pop
inc
outsb
clc
cmp
std
rcrb
push
inc
sbb
cmpsb
das
divl
sbbb
ret
push
push
pop
inc
mov
push
adc
jecxz
into
aad
inc
mov
lcall
sub
flds
xchg
dec
pop
dec
scas
mov
sub
aad
mov
mov
or
lret
sbb
mov
sub
sub
add
pop
pusha
push
flds
icebp
add
out
das
mov
mov
test
iret
in
jmp
aas
into
push
repz
inc
jmp
cmp
pushl
stos
mov
roll
js
test
stc
out
cmc
dec
in
and
sub
push
outsl
xor
inc
pushf
dec
fs
sbb
std
stc
inc
in
sub
lods
dec
adc
mov
stc
shl
inc
test
adc
or
je
andl
fnstsw
sbb
mov
faddl
adc
add
out
and
jnp
pop
mov
ljmp
adcb
fnstsw
cmpsb
mov
lea
inc
xor
hlt
push
fnsave
push
pop
xchg
xchg
sbb
dec
cltd
push
xchg
sbb
push
lcall
mov
into
mov
das
ror
outsb
cmpb
mov
std
mov
xchg
pop
les
in
add
push
pop
fldt
inc
jg
pushl
jno
lahf
xchg
jne
and
loop
inc
push
mov
push
mov
mov
test
test
and
add
inc
adc
test
jmp
js
jmp
push
inc
adc
popa
mov
iret
rolb
daa
lahf
sbbb
test
jns
cmp
cld
call
pop
test
popa
out
pusha
data16
cli
sub
aaa
add
gs
sub
data16
jecxz
es
test
stc
adc
fs
in
mov
pushf
int
sbb
fnstenv
mov
fidivl
imul
sub
adc
adc
pop
mov
pop
jecxz
sub
int3
mov
fisttps
dec
scas
jmp
je
mov
mov
fisubrl
mov
scas
dec
cmpsl
xor
lea
jl
fbstp
or
dec
shlb
cmp
pop
loop
rorb
lods
jle
int
mov
pushf
xor
adc
pop
loopne
out
addb
fwait
and
mov
jmp
inc
jp
mov
mov
enter
pop
mov
shlb
repz
test
jbe
cmp
divl
out
bound
rolb
addr16
xchg
jae
sbb
mov
lcall
out
add
pushf
xor
mov
dec
pop
pop
jmp
sahf
imul
fs
cld
sarl
cmp
jle
iret
cmp
xor
cmp
scas
fnsave
adc
aaa
scas
addr16
push
inc
add
movsl
push
xchg
ret
dec
pop
leave
cmp
mov
in
sbb
dec
or
cwtl
test
xor
push
pop
sbb
movsb
pop
add
loopne
js
jecxz
mov
jbe
xchg
dec
xlat
jne
mov
test
scas
xchg
mov
pop
aad
je
sub
jg
pop
ret
rcrb
mov
cmp
and
imul
add
push
loope
mov
mov
pop
cmpsl
dec
scas
and
sub
lea
jno
add
fst
mov
mov
fisttps
rol
jne
mov
jbe
test
hlt
mov
push
push
sbb
xchg
xor
add
and
dec
adc
and
icebp
inc
dec
mov
or
ficomps
popa
and
aad
inc
aaa
or
pop
fsts
call
out
xchg
cli
fisttpll
int3
sahf
popa
cmpsl
jecxz
fldt
mov
enter
mov
jns
repnz
fwait
cmpsl
sti
hlt
pop
scas
das
pop
xchg
arpl
cs
lahf
cmp
sbb
cmpsl
fs
cmp
out
mov
adc
cwtl
jl
leave
mov
std
nop
loop
or
inc
xchg
or
xchg
insl
adc
fnstcw
outsl
lock
test
and
dec
loope
fbstp
hlt
fisubrl
push
std
adc
scas
add
lret
xchg
pusha
inc
stos
mov
movsb
add
pop
mov
roll
cmp
push
inc
mov
jl
int3
sahf
dec
test
inc
fwait
in
dec
es
inc
lea
mov
bsf
xor
test
adc
daa
ret
out
fnsave
pop
stos
icebp
incb
shll
in
or
xchg
shll
pop
and
add
xchg
imul
je
inc
mov
ljmp
rcll
pushf
push
sbb
mov
pop
dec
mov
gs
or
test
push
push
in
and
in
sub
jl
icebp
dec
xchg
jl
inc
lahf
lods
movsl
xlat
popa
or
jae
xor
xchg
pop
test
sarl
stos
inc
sbb
addr16
cmc
data16
jnp
lret
push
aas
dec
fisubrl
mov
in
and
repz
inc
jo
mov
sbb
enter
in
movl
test
addb
jno
cmpsb
xor
pop
in
outsb
popa
add
push
pusha
mov
movsl
stc
jp
fadds
insl
ficoms
fildll
ljmp
outsl
pop
sbb
stos
ffreep
push
ret
add
mov
pop
inc
push
cmp
adc
adc
shl
sbbl
pop
ljmp
ficoml
lret
inc
xor
add
dec
or
js
ja
mov
and
adc
lods
test
mov
add
cmp
mov
sub
or
sbb
xchg
mov
adc
mov
mov
add
push
stos
jg
repnz
clc
sbb
jne
sub
cltd
ds
nop
mov
add
xor
movsl
mov
jl
aad
xor
aaa
subb
mov
adc
lret
pop
xchg
sbb
outsl
or
jns
add
sub
dec
push
push
shr
jbe
test
push
pop
xlat
insb
lds
les
xor
adc
nop
icebp
mov
sub
pushf
cmpb
xchg
das
and
in
push
out
sbb
and
and
mov
bound
add
or
adc
mov
and
mov
mov
pop
inc
lds
addr16
sarl
mov
inc
xor
sbb
lcall
mov
push
mov
addb
scas
mov
aad
dec
stos
stc
mov
cs
adc
aad
leave
ds
dec
mov
xchg
les
dec
sbb
dec
cwtl
sbb
dec
jecxz
or
int
imul
sub
loop
inc
popa
or
sub
cwtl
mov
popa
mov
popa
xor
push
fsubs
pop
je
jo
cmp
pop
cmpsl
out
int
dec
subl
outsl
neg
movsb
in
cmpsb
pop
loopne
and
and
test
dec
mov
xor
mov
je
and
les
push
mov
push
pop
outsb
xor
or
mov
mov
mov
jmp
psraw
repz
popa
sti
test
mov
data16
push
out
std
push
mov
hlt
cltd
cmpsb
jo
dec
fbld
or
jbe
aas
xor
lret
outsb
pop
pop
aad
inc
and
xchg
adc
cs
xchg
inc
ficomps
stos
mov
movsb
and
clc
lret
cltd
bound
add
loope
and
rcl
roll
dec
inc
out
adc
or
int
gs
mov
insl
cmp
stos
xlat
xor
push
sbb
dec
ret
fsubp
mov
xorb
in
int
cltd
push
push
inc
jb
loope
testl
leave
jae
cmp
mov
xor
or
rolb
fadds
lods
fwait
mov
xchg
cmp
or
jle
sti
add
pusha
das
bound
sub
leave
cmp
sub
js
jnp
gs
dec
movsl
fwait
jg
mov
jnp
cmp
in
shll
ja
push
imul
aaa
shl
mov
and
jns
cmc
sbb
pop
or
ja
enter
int
inc
pop
scas
and
mov
and
shrb
xor
mov
sub
test
repz
cmp
ret
push
and
lret
outsl
xor
repz
in
imull
xchg
inc
pop
fidivrl
pop
push
test
dec
pop
mov
fldcw
pop
pop
lcall
sub
ret
int3
sti
mov
jl
imul
roll
push
in
push
es
mov
pop
xchg
or
int
nop
pop
mov
and
in
dec
inc
cmovno
rcrl
mov
fildll
jecxz
int3
xor
cli
bound
jecxz
das
cmpsb
stos
jmp
jmp
hlt
aas
sti
cmpsb
cmc
sbbl
imul
or
into
lcall
pop
jo
jecxz
js
mov
xchg
repnz
sti
test
mov
cmp
lock
xor
mov
push
enter
pop
push
push
cmpsb
repz
rcrb
cwtl
xor
mov
xlat
mov
popa
push
or
cmp
fbld
adc
jnp
add
mov
jp
in
clc
addl
mov
sub
pop
sub
fldcw
cmpsb
cmp
mov
insb
xlat
dec
xchg
loope
fnsave
mov
shrb
xchg
inc
push
mov
test
jno
sub
push
pop
scas
and
movsl
loop
push
or
in
mov
push
inc
jp
adc
test
cmpsl
pusha
pop
add
sbbb
loopne
pop
imul
fcomp
fwait
ret
iret
cmpsb
das
push
inc
mov
jge
pop
pusha
rorl
popa
pop
cltd
cltd
sub
jbe
xor
and
ja
test
jle,pt
mov
mov
pop
insb
mov
out
push
les
mov
sbbb
sub
fidivl
xor
dec
cmc
inc
dec
in
aas
cwtl
push
xchg
inc
cmp
aas
dec
bound
inc
test
inc
daa
jae
outsb
mov
stc
hlt
mov
cmc
xor
imull
fmuls
rorb
gs
cmp
mov
into
sbb
pushf
ret
notl
repnz
sbb
in
pop
sbb
xor
mov
cmpsb
jbe
into
push
adc
adc
sub
sub
adc
sub
pop
fisubrs
xor
adcb
mov
cmp
clc
and
xchg
cmp
pop
sbb
pop
sub
stc
mov
icebp
push
js
mov
xorl
jno
test
xor
mov
addr16
pop
sbbb
inc
enter
dec
daa
bound
jmp
fsubs
pop
out
adc
inc
lods
xchg
pop
lcall
sbb
pop
xchg
jp
call
scas
cwtl
sahf
sub
push
pusha
orb
or
stos
call
dec
add
jp
push
loope
enter
pop
movsl
dec
mov
mov
fldenv
es
adc
inc
js
pusha
mov
jg
dec
fcomp
xchg
repz
adc
push
std
fisttpl
sub
fistpll
in
aam
popa
and
and
add
xchg
loope
xor
cli
lods
jge
cmp
pop
in
push
add
sbb
ret
mov
cwtl
int3
jl
aas
movsl
and
ljmp
inc
lea
enter
js
push
inc
cwtl
into
bound
in
pop
imul
dec
sbb
jl
jns
jle
mov
lea
and
shrb
sub
cmp
ljmp
test
shll
insb
aas
fwait
xchg
cmp
mov
adc
or
jb
sub
xchg
inc
daa
xlat
sub
push
xor
pop
stc
out
and
jae
jno
mov
and
or
clc
push
or
js
rorl
daa
and
aaa
test
jne
dec
insl
push
sbb
cld
mov
shl
jg
imulb
fstpt
mov
adc
mov
sti
mulb
outsb
rolb
cmp
mov
mov
test
jl
fimull
cmpsb
nop
cltd
enter
sbb
add
rclb
push
mov
push
jp
jmp
jo
cmp
out
fmull
inc
mov
adc
mov
jle
sub
mov
pop
sub
inc
jmp
out
pop
and
out
xor
xchg
cmpsl
push
stc
mov
mov
jg
outsb
lret
adc
adc
mov
test
cmpsl
push
pop
dec
lret
lahf
mov
fsubr
or
cmpsb
out
xor
sub
xor
cltd
popf
pusha
and
mov
xor
rep
xchg
mov
inc
mulb
std
nop
sbb
xchg
fbstp
cs
dec
imul
sti
ficoml
push
popf
add
push
mov
je
fstpt
aam
in
aaa
in
mov
call
mov
or
cs
cli
pop
fnstsw
test
insb
es
rcll
out
jl
jmp
in
and
lret
insl
addr16
xchg
popf
mov
loope
adc
ss
xchg
jecxz
jg
cmp
jmp
sbb
movsl
mov
fs
fdivrp
push
or
jle
sbbl
adc
or
bound
add
mov
mov
pop
aam
icebp
jmp
out
sub
adc
ret
imul
ss
cmp
repz
nop
push
jmp
xor
xchg
fcoml
mov
jge
adc
into
jp
pop
ja
scas
lret
or
mov
xchg
push
incl
dec
rorb
mov
sbb
stc
pop
test
lods
mov
mov
cld
leave
imul
dec
nop
or
mov
jnp
or
cmc
mov
jno
pop
add
pop
inc
dec
push
mov
cmpl
scas
inc
ljmp
outsb
loop
lcall
pop
mov
xchg
push
sbb
push
push
dec
adc
data16
or
and
adc
mov
cmc
cmp
cld
sub
das
xchg
mov
dec
inc
xchg
imul
out
out
jg
call
sub
or
loop
mov
test
xor
dec
jae
insb
mov
ss
clc
xor
mov
ret
mov
stc
icebp
adc
sti
dec
or
push
cmp
aam
mov
scas
mov
sbb
iret
pop
jl
hlt
sub
push
imul
pop
cli
mov
fimull
or
inc
mov
shll
inc
xchg
cmpsb
jno
add
data16
lock
ret
push
jo
add
insb
cmp
clc
mov
sarb
or
std
pusha
and
sbb
or
xchg
frstor
mov
stos
test
push
int3
test
add
leave
dec
inc
cmp
int3
xchg
xchg
call
test
fs
mov
mov
cmpsl
imul
test
bound
xchg
jg
ja
pop
insb
dec
mov
fbstp
lret
mov
iret
scas
mov
fdivrl
xchg
stos
sti
xchg
push
mov
adc
sub
dec
mov
sarl
das
mov
pop
mov
mov
jo
out
jnp
add
xchg
into
add
add
pop
insl
lret
cmpsl
or
ja
pop
std
cmc
insl
call
in
sub
push
xchg
push
ja
lret
xchg
out
sbb
shrl
xchg
out
push
test
lret
jmp
lods
mov
aas
add
jb
mov
and
xchg
or
mov
subl
jecxz
repz
and
xor
add
adc
inc
lods
push
pop
mov
insl
xchg
sbb
ret
sub
xor
add
adc
inc
lods
push
pop
mov
insl
xchg
sbb
ret
sub
xor
add
pop
popf
arpl
pop
cmpsl
dec
mov
xchg
pop
jecxz
repz
and
cltd
push
add
fs
sub
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
