xchg
add
xchg
add
add
jl
add
adc
add
push
xchg
add
jl
add
add
add
aaa
lcall
js
add
bound
add
add
pop
lcall
jno
add
sbb
add
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
lret
cltd
add
jl
add
jl
add
jl
add
cs
gs
jne
je
add
add
add
js
add
bound
add
add
push
sub
add
add
sbb
pushf
add
jl
add
jl
add
jl
add
inc
outsl
add
jl
add
xchg
lahf
add
xchg
add
lahf
add
jl
add
adc
add
mov
sub
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
jb
jae
outsl
add
inc
add
add
imul
add
je
add
add
add
add
and
dec
add
ja
and
push
add
insl
add
outsb
add
add
add
outsl
add
popa
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
inc
add
imul
add
add
nop
hlt
inc
adc
adc
fisubrs
pop
out
rclb
cwtl
mov
pusha
xchg
fisubrs
add
push
mov
call
pop
pop
ret
loopne
repz
ret
push
roll
xor
add
dec
xchg
ljmp
xor
xchg
pusha
scas
push
roll
xor
gs
jae
and
push
shlb
mov
pop
jo
pusha
push
push
or
xor
and
lock
ret
sub
inc
cld
push
cmc
dec
testl
mov
add
sbb
fimuls
pop
outsl
pop
inc
pshufw
inc
cmp
lea
xor
xchg
loopne
pop
das
scas
aad
mov
in
rcrl
add
push
repnz
mov
mov
loope
push
aas
xor
pushf
lret
sbb
fwait
jne
inc
aas
push
pop
xor
loopne
or
pop
push
lods
inc
fsubl
adc
jecxz
dec
dec
pop
mov
sbb
inc
cmc
inc
das
push
shlb
mov
clc
pop
pusha
sbb
outsb
jbe
out
sub
stos
jl
cmpsb
mov
ja
lret
aas
scas
mov
adc
jo
pusha
ret
push
roll
xor
and
lock
shrb
mov
mov
sbb
ja
push
divl
je
andb
xorl
push
les
push
jbe
scas
sbb
or
sbb
gs
cs
and
pop
aad
ss
push
aam
xor
cmp
add
add
jae
inc
rclb
and
adc
ret
push
roll
xor
add
jae
inc
rclb
and
adc
add
adc
in
inc
xor
or
sbbb
adc
adc
ljmp
cltd
mov
in
or
and
jae
subb
dec
push
mov
mov
inc
pop
int
fistpll
movsb
daa
cmc
sub
insl
xchg
and
push
push
push
cmp
nop
or
or
or
repz
faddp
cmc
pop
andl
or
pop
shrl
jae
dec
insb
sbb
sbb
jl
imul
mov
ret
aam
test
xor
fistps
mov
push
sbb
mov
or
cmp
push
fwait
dec
jle
jnp
cwtl
lock
aaa
cltd
pop
and
lcall
pop
sbb
mov
dec
dec
xchg
inc
push
pop
push
sub
dec
xlat
test
pop
test
aad
stc
mov
popf
add
inc
mov
xchg
mov
repz
lods
fbstp
add
cld
hlt
sbb
cmp
es
inc
jo
movsl
xchg
lds
fisubrl
mov
mov
pop
mov
jae
mov
outsl
and
sti
scas
std
and
pop
lahf
cmp
loopne
jb
adc
sub
aam
jno
lods
dec
push
mov
ret
sbb
ret
cmp
ret
mov
pop
pop
mov
mov
testb
insb
cmp
scas
mov
fs
push
or
add
lahf
cld
addr16
xchg
aam
push
popa
mov
sub
outsl
xchg
sbb
test
inc
dec
pusha
sbb
sub
inc
push
out
or
or
out
xor
xchg
out
repnz
add
aaa
cmp
inc
je
sbb
sbb
inc
mov
popf
sbb
inc
sbb
int3
mov
mov
push
mov
data16
fstpt
in
je
xor
mov
pop
xlat
popa
pusha
inc
add
flds
push
fistl
jo
mov
sub
push
dec
mov
xchg
call
leave
fisubrl
push
mov
jno
mov
imul
jg
jp
jle
test
xchg
cmc
movsl
mov
fwait
int3
inc
fwait
dec
ror
jae
arpl
into
jae
sbb
fcoms
mov
push
sar
mov
lret
gs
push
arpl
pop
adc
inc
sbb
push
adc
in
mov
dec
enter
arpl
cmpsb
repz
sub
sbb
daa
mov
pop
pop
dec
fcoml
xchg
mov
or
and
mov
mov
icebp
xor
ljmp
dec
icebp
pop
fincstp
mov
iret
xchg
mov
es
mov
sbbl
adc
sbb
mov
out
sti
andl
repz
and
pop
not
jo
ret
aam
dec
lahf
idivb
sahf
xchg
out
out
bound
dec
jg
xchg
outsl
push
ss
rorl
inc
jns
test
cld
mov
cs
or
cmpsl
ret
cmp
and
or
pop
sahf
push
add
in
or
mov
fs
leave
or
push
dec
lods
dec
and
adc
cmp
sub
jmp
jle
dec
cmpsl
lds
dec
out
int
jecxz
js
ja
cmp
enter
xchg
fistpl
out
out
cmpsb
imul
loop
pop
aas
inc
or
loope
mov
pushf
adc
das
mov
in
push
gs
ljmp
pusha
mov
imul
in
imul
outsl
cltd
ds
sbb
xlat
xabort
fdivs
movsl
aas
ds
push
lods
mov
jo
inc
in
jae
xchg
notb
repnz
out
insl
mov
mov
push
cmp
dec
xlat
xchg
popa
sbb
cmp
push
mov
cltd
imul
sbb
jae
ss
mov
adc
mov
sti
shll
out
loopne
xor
das
sahf
pop
cmp
mov
test
sub
ljmp
xchg
mov
jae
sub
loope
and
ret
faddp
ret
aas
or
xchg
mov
inc
in
jb
cmpsb
jno
scas
xchg
test
jnp
inc
scas
jbe
sub
and
mov
xchg
fcmovnbe
arpl
mov
loopne
mov
cmp
xor
jg
and
cmp
xor
mov
inc
or
lds
jne
test
push
inc
inc
jge
sub
mov
je
jns
adc
jg
insb
pushf
lock
lcall
jge
jns
xchg
dec
push
add
mov
cmp
in
out
or
add
imul
inc
mov
add
fstpt
xor
and
movsl
inc
inc
push
imul
xor
fwait
subl
hlt
mov
jge
sbb
and
and
jmp
andb
jg
sahf
test
ljmp
push
mov
mov
or
lea
insl
mov
ret
xor
adc
and
sub
insl
jnp
xor
call
xor
roll
std
leave
repnz
xor
mov
inc
lcall
xchg
out
or
mov
xchg
xchg
pop
mov
or
xchg
pop
mov
jb
add
and
pop
shlb
addr16
mov
sahf
lret
push
aam
add
mov
adc
mov
dec
roll
mov
lea
jle
push
adc
pop
adc
pusha
lret
bound
pushf
pop
inc
repnz
stos
inc
std
jmp
xlat
mov
mov
add
test
mov
jle
repnz
and
push
std
insb
cs
out
sbb
pop
push
ja
mov
cmp
in
ss
mov
loope
sbb
sbb
push
iret
jae
pushl
jae
sbb
jb
les
shlb
sbb
outsb
dec
mov
jae
test
cmp
repnz
fcoms
pop
out
push
das
movb
push
push
xchg
inc
adc
cmpsl
test
sar
push
roll
nop
mov
pop
mov
out
bound
loop
repz
leave
pusha
dec
cmc
icebp
or
lret
sbb
inc
js
lods
ffreep
push
adc
ja
in
gs
mov
ss
mov
push
sbb
add
lea
jbe
cmc
leave
mov
dec
movsb
inc
test
adc
jo
push
ss
mov
lret
push
pop
mulb
add
clc
pop
fidivl
scas
mov
push
pop
jns
pop
lcall
inc
lcall
fcoms
push
int
or
test
repz
stc
nop
add
cmpb
hlt
adc
sbb
int3
ret
out
int
mov
leave
daa
mov
pop
iret
bound
shl
xor
stc
jb
repz
sub
gs
xlat
jns
cmp
xor
pushf
stos
addr16
popf
pop
loop
cwtl
lods
sub
outsb
or
shll
jle
inc
inc
sbb
xchg
add
xchg
inc
jl
inc
cmp
or
add
pusha
or
orl
pop
adc
inc
shrl
ljmp
or
loop
dec
je
cmp
inc
xchg
hlt
cltd
movsb
cmpsl
fcoms
hlt
mov
je
bound
adc
and
sub
aas
fisubrs
cmp
movsl
cmp
cld
lods
sub
clc
ds
lock
sub
aam
out
push
or
dec
scas
arpl
in
mov
fstps
sub
testl
imul
imul
cmp
shlb
scas
sbb
shl
mov
test
icebp
arpl
sbb
jns
pop
andb
sub
add
add
xchg
in
mov
lahf
sbb
push
or
scas
xchg
jecxz
dec
jo
or
and
data16
and
mov
divb
aad
popf
xchg
icebp
pusha
jnp
int
mov
push
and
in
fbld
test
and
sti
push
and
sub
int3
jns
xor
mov
cmp
mov
cmp
inc
scas
pop
das
mov
repz
and
stc
xchg
or
setae
add
ss
imul
jb
xor
outsl
inc
dec
xor
dec
icebp
stc
insl
push
jge
into
movsl
cmp
mov
cmp
out
ret
push
cmp
xchg
mov
sahf
out
popa
lds
mov
fcomp
xchg
ljmp
mov
jnp
cli
jg
ss
pop
add
pop
xor
push
daa
push
mov
cmp
cwtl
outsl
ss
gs
mov
mov
jl
lods
mov
pop
push
cmp
inc
dec
push
jp
or
mov
fucom
jle
mov
std
mov
dec
dec
loope
cmp
xlat
jp
mov
int3
xchg
mov
lds
or
jo
arpl
xor
sub
std
push
xor
insl
aad
and
adc
sbb
ss
flds
aad
mov
mov
and
mov
call
xor
sub
xlat
lret
adc
jecxz
cltd
mov
dec
out
out
xor
cltd
dec
ret
lds
nop
cmp
pushf
jae
ja
scas
push
jns
xlat
and
test
scas
movsl
push
cli
sub
outsl
sub
cli
and
xchg
rol
sbb
xor
pop
jp
lea
xchg
and
in
cmpsb
pop
or
and
mov
out
mov
adc
or
ret
pop
xchg
das
cmc
xlat
shrb
lahf
enter
ljmp
add
sti
push
jecxz
jecxz
stos
and
mov
repnz
or
aas
inc
iret
fcmovbe
pop
mov
call
lods
popa
xchg
dec
mov
out
sbb
int
xchg
clc
les
ljmp
add
outsb
push
rorl
loope
add
dec
ja
dec
or
and
cmpsb
fcomp
inc
lcall
push
add
jge
pop
mov
inc
or
xchg
add
out
stc
rolb
lock
in
adc
stos
and
push
jge
xchg
adc
push
ljmp
jge
and
cmp
pop
stos
mov
popa
shrl
pop
stc
mov
test
int
scas
cmpsl
insl
mov
and
fs
stc
add
pushf
mov
mov
out
add
pop
lahf
push
gs
sti
jb
cwtl
fisttpll
ss
and
or
jecxz
inc
mov
popf
xchg
dec
xchg
push
dec
mov
outsb
push
popf
aad
mov
out
ds
mov
rcrb
add
sbb
test
aam
negb
into
jo
inc
cmp
cmp
repz
xchg
dec
mov
ret
and
dec
hlt
mov
fbld
fs
mov
push
inc
cmp
loopne
jbe
jle
cmpsl
cmp
sbb
add
add
adc
imul
jns
fidivrl
lcall
ss
jge
xchg
fs
int
pop
adc
mov
inc
add
pop
scas
xor
dec
outsb
push
je
mov
lret
jbe
lret
pop
sub
push
sarl
lods
loopne
sub
mov
adc
in
testl
push
dec
xor
fbld
dec
inc
and
cltd
add
shrb
lret
notl
std
cmp
icebp
in
dec
push
inc
jg
cmp
cmc
push
call
dec
xchg
mov
lock
mov
inc
mov
cmpsl
push
mov
add
pop
xor
xor
adc
aam
out
pusha
rcl
add
mov
adcl
inc
mov
lock
stc
or
js
pop
inc
aas
shrb
push
xchg
add
xchg
enter
inc
imul
aad
push
loop
loop
pushaw
adc
leave
push
mov
jb
popf
sti
fmuls
push
ljmp
mov
cwtl
jle
sbb
sbb
pop
sbb
mov
xorb
cmpsl
enter
dec
dec
in
adc
pop
std
add
aas
sub
inc
adc
in
imul
inc
jno
sti
xchg
xor
jl
inc
aaa
in
lahf
test
push
sbb
sub
jl
mov
or
jg
sub
cmc
push
sub
sub
adc
pop
loopne
jo
shlb
hlt
adc
add
xlat
dec
xchg
jae
outsb
arpl
xchg
push
aam
scas
repnz
xchg
inc
cmp
jmp
mov
movsb
popa
jb
and
scas
and
test
cld
push
push
pop
sbb
pop
or
and
ljmp
arpl
inc
jle
push
jno
xchg
js
push
int
aad
sbb
ficomps
lahf
jnp
mov
mov
push
es
xchg
inc
or
ds
pop
dec
push
mov
pop
add
add
or
adcb
aaa
mov
or
sub
jb
mov
mov
aad
push
mov
xor
das
cltd
pop
xchg
out
dec
inc
movsb
or
dec
sbb
cmp
out
int
lock
jb
stos
inc
xchg
shr
push
cld
or
incb
lock
rorb
hlt
push
sbb
test
inc
sub
mov
xchg
push
push
xchg
add
pop
mov
sbb
jl
into
jbe
ss
popa
sub
pop
sahf
mov
xchg
pop
adc
mov
lods
loope
mov
bound
lcall
jmp
fnstsw
ss
mov
sbb
adc
ds
push
aaa
and
gs
jge
sahf
inc
add
jle
fxam
xchg
pop
xor
andb
dec
icebp
xchg
negl
je
sti
and
and
mov
mov
loopne
or
pusha
test
sbb
and
mov
es
sbb
outsl
xor
loope
sub
mov
dec
popa
xor
shll
or
dec
add
push
add
lahf
cmp
jge
jmp
enter
xchg
xor
lret
add
and
out
jb
pminub
push
lret
xor
ret
sub
loope
pop
xor
fldl
pop
fbstp
and
jle
ret
icebp
cbtw
addr16
and
pop
loope
xchg
xchg
nop
pop
and
arpl
icebp
push
shrl
xor
idivl
fcomps
xchg
xchg
imul
lcall
cmp
mov
mov
insb
sarl
dec
ds
and
enter
sbbl
xchg
adc
subl
shll
dec
out
mov
lcall
jle
and
ret
les
nop
xor
adc
aas
jo
push
loopne
adc
stos
dec
shlb
dec
aam
cmp
mov
jo
lods
jo
arpl
jae
gs
imul
jns
cmpsb
addl
mov
push
fs
insb
sub
mov
out
mov
sub
inc
mov
sarb
jno
aaa
mov
push
sub
cmc
hlt
sub
cltd
push
mov
jecxz
pop
sub
dec
dec
pop
push
mov
cltd
lock
cmp
scas
mov
add
xchg
leave
fmull
loope
pop
mov
imul
imul
dec
cmp
fs
les
xchg
outsb
out
dec
inc
das
sti
imul
imul
mov
sub
scas
addb
or
loopne
fsubrs
in
out
rcrb
cmp
xchg
fwait
cwtl
clc
xor
das
xor
mov
call
movaps
jmp
or
mov
add
loopne
xchg
fcompp
imul
adc
insb
mov
xor
xor
inc
mov
add
pop
testl
mov
adc
cwtl
mov
sub
insl
loop
inc
pop
movsl
clc
dec
filds
fdivr
fisttpll
mov
cmp
loopne
xor
pop
fisubs
jno
push
push
jnp
adc
push
pop
dec
or
push
push
sub
lahf
je
js
fwait
repnz
lds
inc
pop
mov
out
mov
clc
fstpt
cwtl
rcrl
insl
shll
or
iret
cli
cmp
jns
pop
movsl
and
movsb
jmp
cld
xchg
sbb
xchg
add
dec
mov
mov
cltd
push
mov
std
out
inc
pop
mov
push
movsl
loope
dec
rorl
aad
mov
int
dec
inc
xchg
lahf
out
xchg
ss
xor
int
sub
scas
xchg
mov
push
pop
sub
dec
mov
lock
xchg
fstpl
inc
or
mov
mov
cmp
push
aaa
or
push
or
ret
fbld
and
or
lcall
imul
sub
lret
push
fcomps
mov
mov
dec
adc
xorl
cmp
fwait
pop
inc
mov
ficompl
gs
outsb
cmc
jo
xchg
add
lcall
or
xchg
push
pop
push
sarl
add
enter
stos
imul
or
popa
xchg
fists
inc
add
bound
fs
add
or
sub
pusha
fsts
sbb
sahf
pop
add
add
mov
shlb
push
mov
into
xchg
inc
mov
mov
xchg
push
jne
mov
roll
test
sbb
cmp
dec
roll
imul
mov
dec
dec
jns
scas
mov
or
xor
repz
cmp
cmp
repz
jmp
push
cltd
sar
cmp
popf
cmc
mov
mov
inc
or
inc
push
push
dec
adc
mov
loope
cmpsl
out
cltd
js
pop
insb
test
das
mov
pop
lcall
jecxz
lea
daa
jmp
ja
and
loop
outsl
jp
daa
mov
outsb
mov
cmpsb
dec
mov
aas
jg
ljmp
pop
fwait
jnp
enter
movsl
out
lahf
insb
sub
movsb
cs
mov
xchg
jp
fsubs
xor
mov
xchg
stc
loop
xchg
pop
jg
lods
jae
sbb
insb
fs
xchg
es
cs
or
jp,pt
aas
cli
sub
or
inc
adc
popa
adc
inc
add
mov
push
jb
mov
push
hlt
sub
mov
cli
pushf
inc
xor
and
ja
sbbl
mov
or
push
mov
roll
mov
out
push
cmp
stc
dec
das
pop
push
and
inc
add
fincstp
mov
in
out
jbe
mov
sub
ljmp
fsubp
jp
xchg
pop
inc
push
lcall
xorl
fdivs
loopne
cmp
mov
mov
out
fistps
cltd
dec
xor
stc
lahf
sbbb
stos
mov
invd
and
mov
push
aas
loope
sub
inc
fs
cmp
clc
jae
xchg
aam
loopne
fldl
inc
popa
inc
iret
inc
cmc
cmpl
adc
inc
outsb
add
leave
sub
incl
mov
pusha
push
mov
mov
dec
jo
fidivrs
mov
add
shll
xchg
lea
and
popa
outsb
sub
je
cmpsl
adc
cld
sbb
and
push
into
std
mov
ljmp
lds
xchg
jae
js
lret
daa
inc
int
les
in
std
mov
adc
pusha
nop
xor
mov
loop
cs
nop
popa
dec
test
in
pushf
es
mov
negl
imul
movsb
jno
cltd
push
pop
fwait
les
mov
mov
ret
pop
xor
cmp
mov
pushf
gs
lods
mov
dec
stos
fucom
push
cmp
sub
jne
mov
push
jmp
inc
mov
arpl
ret
push
sbb
sub
mov
xlat
mov
hlt
fsub
movsl
popf
push
das
adc
add
mov
push
or
insl
test
fldl2e
loope
shll
sahf
int3
popa
push
outsl
mov
mov
mov
add
mov
adc
inc
lret
xchg
hlt
movsl
pop
int
repnz
aas
mov
ja
fimuls
ret
mov
aas
add
ss
push
dec
sub
jp
cmp
and
sbb
bound
xchg
mov
icebp
or
stos
xchg
inc
lretw
push
clc
je
mov
roll
push
insb
loopne
jnp
or
clc
push
cltd
inc
out
cmp
or
lods
mov
mov
repz
xor
je
insb
jnp
sarb
cli
stc
xor
xchg
stos
fcmove
dec
push
cld
add
pusha
dec
or
repnz
in
xlat
or
data16
cmpl
insb
xor
xor
mov
sub
lds
push
sub
cmp
mov
push
sub
test
jecxz
scas
sarb
push
mov
aas
rcrb
and
mov
xor
xor
push
test
add
jl
ljmp
push
stos
dec
sti
je
xchg
fildl
pop
aad
inc
cld
out
mov
out
jmp
shll
in
and
shlb
pop
sti
insb
data16
mov
jp
fsubrs
cmc
push
cwtl
nop
repz
mov
add
jne
outsl
jo
dec
push
dec
faddl
ljmp
shll
in
mov
or
or
push
dec
hlt
adc
mov
rorb
arpl
test
jmp
call
and
pop
jmp
movsb
or
movsb
mov
andb
jo
cmp
outsl
and
pop
scas
xlat
inc
add
push
fistpll
or
aam
jle
and
push
xchg
in
sub
adc
hlt
dec
and
jae
aaa
scas
lds
cmp
test
xchg
and
fwait
xchg
hlt
push
cmp
std
mov
jle
inc
fcomps
cmp
sbb
push
inc
pushf
adc
or
push
push
jl
idivb
cwtl
mov
jae
rorb
push
fwait
xor
test
push
cmp
test
dec
mov
and
pop
push
add
sahf
stos
out
add
mov
xchg
jge
xor
or
nop
pop
mov
mov
fidivrs
sub
stc
pop
add
mov
cmp
inc
or
sbb
sti
fistpl
pop
sbb
pusha
inc
fstpt
divl
fadds
or
or
lods
dec
jle
jb
sub
sbb
inc
popf
ja
or
sub
push
dec
mov
push
roll
xor
add
jae
inc
rclb
and
adc
ret
push
roll
xor
add
jae
inc
rclb
and
adc
mov
xor
add
jae
mov
push
shlb
and
divl
pusha
cltd
push
repz
mov
adc
shlb
dec
jmp
cmp
jg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
andb
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
and
add
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
and
add
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
and
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
and
add
add
mov
and
add
and
add
and
add
and
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
sbb
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
add
insb
add
nop
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
cld
add
hlt
add
in
add
in
add
fsubl
add
aam
add
int3
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
add
xor
add
cmp
add
push
daa
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
enter
call
sub
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
sub
add
add
add
add
add
xchg
sub
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shrb
add
sub
add
sub
add
sub
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
mov
push
pushl
mov
call
mov
call
cmpl
movl
jne
call
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
push
xor
push
push
push
push
push
call
push
push
push
push
push
push
push
push
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
mov
mov
push
push
call
push
push
push
push
mov
call
call
pushl
call
pop
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
mov
xor
leave
ret
ljmp
cmc
addr16
sti
in
nop
mov
inc
jnp
dec
gs
jne
add
sbb
lret
cmc
stos
test
mov
inc
jp
dec
gs
jne
add
sbb
lret
cmc
stos
test
mov
jnp
or
adc
push
jno
inc
je
mov
sahf
mov
arpl
push
andl
fwait
and
jg
pop
scas
push
cld
mov
hlt
and
push
test
pushl
aad
cmp
mov
adc
push
add
cs
dec
pusha
lcall
ficompl
xor
cmp
aam
in
loope
test
in
jbe
inc
mov
xor
mov
das
adc
pop
sbb
sub
and
push
pop
addb
push
iret
cltd
daa
inc
jns
lds
and
gs
inc
add
subb
xchg
pop
outsb
lcall
popa
jb
jp
mov
dec
xor
aad
in
cmc
stos
test
mov
inc
jp
dec
gs
jne
add
sbb
test
push
mov
ljmp
push
pop
cmp
or
sbb
push
pop
push
popl
mov
repnz
verw
cmp
pop
sbb
push
jp
push
outsl
pop
xchg
cli
mov
out
mov
mov
inc
jp
dec
gs
jne
add
sbb
lret
cmc
stos
test
mov
inc
jp
dec
gs
jne
add
sbb
push
pop
cmc
and
inc
mov
lret
sbb
dec
sub
pop
pop
add
ds
addr16
sbb
sub
jne
jle
and
jge
xor
js
inc
lods
sti
cmp
xchg
jp
pusha
or
pusha
add
sbb
cmp
push
testl
add
cmp
mov
push
xor
test
dec
lods
push
inc
mov
or
or
jb
dec
nop
xchg
xchg
ret
popf
les
mov
xchg
jecxz
out
mov
stc
ficomps
sti
adc
push
dec
cmp
mov
ret
outsl
jae
jne
icebp
gs
in
add
std
add
outsl
or
xor
out
lea
inc
dec
push
in
shl
mov
movsb
enter
pop
bound
jge
shlb
xchg
insb
ret
ss
mov
push
sbb
mov
in
das
je
pop
pop
test
outsb
incl
leave
or
rcrl
clc
xlat
nop
cmp
fnsave
jmp
popa
cwtl
pop
cli
jp
push
fistps
daa
cmpsl
stos
or
cmp
adcl
sbb
jo
jle
cmp
jno
ljmp
dec
popa
inc
insl
fs
pop
push
push
mov
out
xchg
icebp
mov
jne
outsl
out
cmp
rolb
cmp
xchg
xor
mov
jnp
shrl
scas
adc
stos
dec
ret
movsl
lods
and
add
xorl
rcrb
or
push
daa
push
adcb
inc
xchg
add
int3
leave
dec
insl
insb
sub
bound
or
pop
mov
aaa
movsl
jbe
jp
cmpsl
adc
adc
mov
call
pop
and
testl
pop
cwtl
xchg
lahf
sbbl
xchg
jp
jmp
loopne
jae
scas
pop
inc
mov
xchg
mov
inc
or
les
add
mov
inc
jmp
insb
rorl
mov
clc
dec
cmpsb
aaa
push
enter
test
jne
sbb
fsubl
popf
lret
pop
jo
add
mov
mov
mov
lret
xchg
fstpt
movsl
adc
lret
jg
outsl
cmc
mov
enter
fstpl
or
leave
mov
sub
or
xchg
inc
cs
icebp
push
sbb
mov
lcall
xchg
xor
add
loopne
cli
lcall
addr16
rcrl
int3
xchg
sub
xor
gs
jno
or
repnz
mov
sbb
add
or
jbe
fdivl
xchg
mov
in
adc
mov
test
sbb
cmpsl
xchg
jecxz
dec
mov
xchg
mov
rclb
cmp
mov
push
sub
inc
rclb
mov
jl
lods
addr16
dec
add
or
daa
fisubrl
or
repz
pushf
mov
cltd
dec
rorb
mov
add
imul
fcoms
mov
sub
ljmp
inc
push
and
ret
bndstx
jae
sub
lret
mov
pop
mov
push
fdiv
repz
out
dec
icebp
sub
outsb
xor
scas
sub
mov
cmp
pop
in
popa
dec
jo
cmp
ret
push
sbb
adc
lret
adc
xor
add
movb
mov
cltd
in
sub
test
sub
int3
jle
cmp
lock
pop
cli
fstpt
jno
add
movsl
popf
pushf
lret
fcom
aam
mov
pop
jecxz
push
xchg
or
test
out
cmp
rcr
sbb
sub
sub
icebp
outsl
pop
mov
or
xchg
pop
fisubrl
mov
or
adc
sbbl
sti
mov
push
xchg
aad
mov
hlt
inc
push
pop
push
mov
pop
in
subl
jae
mov
loope
adc
imul
ss
cmpsb
pop
xor
push
ficomps
int
in
inc
mov
int
xchg
cmp
xor
cmc
shll
sbb
loope
ret
int
and
mov
lahf
inc
xchg
inc
jns
fisttps
sub
pop
cmp
sbb
jo
jle
ficoms
push
pop
les
mov
cmp
aas
dec
sub
and
out
mov
sahf
sub
sti
and
push
std
aad
pop
int
shll
fstpl
mov
insb
cmp
pop
mov
scas
orb
add
outsb
pusha
or
ror
stc
pop
mov
add
in
mov
pushf
xor
cmc
dec
inc
push
cmpsl
mov
push
sti
enter
in
or
aam
inc
xor
in
pop
pop
imul
inc
push
mov
sub
pusha
add
rorb
lahf
mov
ss
movl
or
nop
dec
in
daa
les
mov
xchg
pop
sbb
and
adc
inc
or
jno
dec
addb
data16
iret
int
out
ljmp
std
inc
jge
test
xor
push
movsl
sti
mov
test
sub
js
daa
icebp
sahf
dec
pushf
setns
inc
cmp
lods
xchg
dec
mov
in
sub
lods
shrb
shl
dec
jl
pop
daa
adc
mov
fiaddl
hlt
or
fdivs
cwtl
test
shl
ja
add
lret
xchg
ror
adc
leave
jo
mov
rcrl
dec
or
cltd
filds
cmp
fdivs
mov
fcom
sbb
testb
sbb
loop
jmp
jg
loopne
pushf
mov
inc
hlt
ret
cmp
into
or
out
dec
add
ficomps
daa
stc
jmp
loopne
sahf
xor
mov
inc
sbb
in
cmc
mov
lret
sbb
pop
fcompl
and
adc
fwait
mov
or
mov
lahf
pop
add
std
sahf
pop
xor
xor
ds
dec
movsl
outsl
xchg
inc
lret
je
aam
jo
fisttpll
mov
fsub
mov
imul
xchg
gs
sub
lcall
add
test
push
sbb
ss
insb
mov
add
mov
sarl
in
xchg
xchg
push
and
inc
filds
mov
aaa
dec
loop
mov
mov
jl
mov
fldl2e
sub
pop
stos
in
ljmp
out
mov
cld
push
jo
bnd
call
popf
mov
popa
xchg
sbb
orb
mov
xbegin
rcl
stc
cmp
sbb
cltd
cmp
lcall
push
cltd
push
lret
popf
stos
jge
sbb
jb
mov
mov
gs
jne
rorb
frstor
lea
testl
rorb
xchg
mov
sarl
roll
inc
jle
gs
mov
sbb
rcll
cli
cld
les
imul
loope
bound
xchg
pusha
sub
out
jecxz
xor
cmp
ljmp
push
push
adc
mov
push
test
lock
jae
fldenv
pop
jmp
add
lcall
pop
fisttpll
pop
subb
push
mulb
and
add
cltd
mov
jge
imul
cmp
push
xor
pop
xchg
loope
cmp
sub
ja
or
sbb
dec
fs
fs
xchg
jle
aas
cli
add
ret
insl
sahf
gs
test
scas
push
jb
cs
sti
jo
cld
jge
jle
xchg
mov
or
sbb
adc
lods
data16
movsl
adc
mov
enter
ret
add
roll
fwait
shrb
add
adc
push
lea
jl
ficoms
filds
fcmovnu
cmpsb
lcall
shrb
and
lock
les
mov
mov
cmpsb
insb
pop
outsb
adcl
test
inc
lods
lret
mov
aas
or
je
sahf
iret
aas
jns
mulb
dec
mov
xlat
gs
or
clc
leave
cmc
popa
ret
cmp
icebp
dec
push
test
xchg
xor
std
sbb
out
push
dec
dec
repz
sub
fdivr
dec
mov
push
adcb
push
nop
push
cmp
pushf
or
inc
jns
fldenv
xchg
cmp
xor
inc
mov
and
fwait
xlat
mov
adc
ds
hlt
clc
add
std
std
lods
fdivrl
pop
dec
lods
jo
shl
cmp
cs
or
mov
jle
pextrw
push
mov
orb
fnstenv
sahf
jae
sti
pop
sar
xor
lods
mov
pop
pop
ss
inc
add
sbb
sub
mov
push
roll
add
test
loop
neg
scas
outsl
dec
inc
adc
popa
jns
bound
into
mov
icebp
jne
mov
pop
push
mov
adc
mov
mov
jl
aad
push
xchg
hlt
ret
lret
or
xor
add
pop
in
insb
inc
frstor
adc
iret
pushf
or
xchg
mov
outsb
add
sbb
xchg
mov
aam
push
xchg
or
adc
ljmp
or
dec
loope
out
movsl
and
and
sahf
mov
cmc
aam
out
add
into
sub
inc
xchg
mov
xor
mov
and
ret
repz
inc
push
pop
xor
xor
pop
enter
add
and
cmp
test
xor
das
lret
cmpsb
pushf
fldt
xchg
loopne
enter
into
iret
xchg
lret
addr16
push
inc
sub
lret
icebp
in
jae
cmp
add
add
stos
out
sub
lret
push
shrb
mov
movsl
inc
out
popa
fst
das
call
sub
inc
enter
adc
in
mov
sub
xor
sbb
xorl
xchg
dec
jae
mov
dec
cmp
mov
adc
in
das
popf
mov
and
adc
xor
or
cmp
add
out
dec
lahf
push
loope
dec
sbb
dec
xchg
lcall
movsl
aaa
es
sbb
mov
or
ja
pop
mov
mov
pusha
lcall
mov
adc
adc
mov
andl
jbe
rcrl
stos
add
mov
shrl
das
mov
cmp
add
sbb
or
jbe
mov
gs
faddl
iret
bound
adc
sarb
mov
lret
cmpsb
mov
add
or
ds
movb
mov
mov
dec
xchg
mov
pop
leave
sub
cmp
mov
shl
pop
pop
call
xor
pop
inc
in
mov
andb
mov
cmc
test
dec
pusha
jnp
leave
lea
or
mov
rep
xor
sbb
imul
or
nop
xor
xchg
or
jne
stos
scas
mov
ljmp
fistps
add
jp
xchg
and
jno
lea
mov
cmpsl
mov
ret
sub
xchg
push
pop
daa
xchg
int3
cwtl
push
out
jp
fldcw
inc
sub
ds
or
dec
jmp
jb
sahf
jo
xor
and
out
mov
add
push
xor
leave
xchg
mov
aam
sub
rcrl
push
cmp
mov
test
and
mov
jb
lahf
rclb
sbb
nop
ds
bound
popf
push
fldl
pushf
iret
or
aas
jle
pusha
scas
jae
pop
rcrl
pop
sub
in
lret
mov
push
inc
xorl
sub
and
adc
jns
out
je
stos
mov
daa
or
loope
je
xor
add
clc
cmp
scas
ret
cld
dec
push
scas
std
mov
pusha
mov
fistpll
mov
add
push
inc
pop
push
hlt
test
mov
dec
push
sti
pop
jge
mov
xchg
jb
fldpi
fwait
push
and
insb
gs
test
sub
sbb
cmp
cs
gs
xchg
xchg
jp
inc
dec
mov
adc
adc
mov
cmp
shlb
jmp
lds
loop
sti
inc
adc
inc
mov
pop
adc
adc
lods
dec
pop
xchg
cmpsl
mov
pushf
xchg
int3
cmc
in
pushl
sbb
bound
mov
fimuls
fs
stos
mov
imul
imul
mov
divl
aam
cmp
jge
cld
cld
in
or
adc
lods
add
stos
or
push
cmc
push
pop
inc
xor
sub
sbb
and
xor
das
cwtl
adc
xor
xchg
lret
mov
sub
xchg
xor
ret
cwtl
pushf
xor
popa
outsl
das
inc
or
clc
mov
test
jno
lock
loopne
fs
iret
fsubrs
movsl
cs
pop
mov
mulb
push
xchg
mov
jno
push
lcall
repnz
adc
incl
cmc
pop
out
sub
daa
nop
jecxz
fistpll
pop
inc
mov
outsb
fisubrl
pop
sbb
popa
mov
lret
adc
aaa
sub
and
dec
and
arpl
jl
jle
popf
mov
sbb
fdivrs
ja
mov
gs
sub
out
pop
ljmp
add
rcll
jge
pop
add
adc
test
push
rol
inc
insl
push
mov
fdivrp
fidivrs
inc
outsb
pop
sub
aad
ja
es
aas
sti
cmc
jle
hlt
stos
vpunpcklbw
or
lea
xor
and
pop
sub
or
push
mov
int3
arpl
inc
loope
cltd
inc
gs
add
cmp
dec
or
mov
insl
aaa
out
mov
dec
mov
and
ljmp
fiadds
lock
dec
shlb
lock
jns
push
out
mov
lea
push
icebp
loopne
imul
adc
out
inc
jl
add
push
inc
out
inc
xor
cmp
xchg
out
fidivl
dec
xor
call
push
pop
dec
outsb
and
sbb
pusha
out
mov
cmpl
fstpt
dec
or
fidivrs
sbb
and
dec
imul
jne
out
ss
jg
adc
std
cs
and
cmpsl
test
lds
mov
sub
imul
pop
adc
sarl
jl,pt
and
orl
xor
out
int
std
mov
sahf
xor
xor
das
cmpl
iret
or
mov
pushf
sbb
sti
mov
dec
stos
mov
mov
mov
sarb
in
rcr
sub
stos
fildl
or
push
data16
mov
in
cmp
outsb
test
insl
mov
push
decb
dec
in
inc
or
cbtw
cltd
outsl
cld
in
add
xor
mov
rcr
cmp
add
fs
scas
mov
sub
mov
xor
inc
sahf
jb
sub
pop
rolb
repz
sub
add
cmp
nop
pop
cltd
jns
and
outsl
mov
sub
mov
outsb
in
ss
lret
cld
jle
out
push
fnstenv
mov
add
dec
sbb
xchg
sub
dec
mov
dec
mov
test
adc
dec
push
shrl
pop
dec
and
cmc
xchg
loop
pop
push
sub
icebp
scas
int
push
ljmp
jne
lds
or
mov
ret
shrl
sub
pop
gs
sbb
ljmp
adc
push
lods
inc
add
in
adc
sub
std
sbb
sub
orb
daa
mov
cmc
fidivs
cwtl
idivb
jle
insl
smsw
lret
or
sbb
lret
sbb
imul
hlt
aad
jl
xlat
mov
mov
js
das
jno
jmp
cmp
xor
add
sbb
sbb
sahf
xchg
inc
adcb
sbb
xchg
shr
adc
filds
add
xchg
cmc
dec
lcall
cs
cmpsb
push
inc
inc
call
cs
inc
shll
mov
pop
cmp
daa
and
mov
popf
test
jl
inc
ljmp
dec
and
lahf
test
decb
lods
loopne
mov
int
enter
arpl
aad
push
add
pusha
sub
mov
or
leave
orb
xchg
fnsave
mov
enter
fldcw
cmp
cmp
orl
sbb
mov
add
pop
sub
jg
hlt
lret
add
movsl
push
add
jns
jmp
inc
sahf
dec
lcall
rorl
xchg
xchg
xchg
sub
loope,pt
inc
popa
push
push
add
aam
and
insl
adcb
fwait
mov
fsubrp
neg
dec
inc
jg
adc
mov
dec
cld
or
or
dec
add
sbbl
pop
aaa
data16
mov
fld
sub
iret
jbe
rcll
xor
cmp
mov
stc
inc
jns
xchg
xlat
pop
nop
jle
inc
sbb
loopne
je
data16
inc
mov
test
pop
push
mov
xchg
adc
pop
sarb
test
mov
mov
aam
inc
rolb
jp
fcoms
loopne
mov
push
mov
idiv
setb
add
push
mov
fwait
out
daa
pusha
push
inc
cmp
jne
dec
loope
pop
pop
test
cwtl
sahf
jmp
fidivrs
idivb
mov
xchg
mov
andb
xchg
outsl
pop
adc
ja
lret
fistps
shl
xchg
and
jne
addr16
push
ljmp
jo
arpl
test
icebp
imul
aad
push
fcoms
out
adc
adc
pushf
mov
std
mov
stos
sub
andb
fs
lods
sarl
cmp
cmp
and
ja
lcall
sub
pop
jecxz
sub
add
pop
cmp
into
pop
loope
lahf
loopne
xor
aam
pop
aam
outsb
push
mov
push
and
into
or
pop
dec
mov
pop
ret
fsubrs
or
cmp
push
lds
jmp
xor
fwait
sbb
inc
into
lods
mov
push
movsb
imul
pop
and
out
xor
jmp
movsl
adc
mov
jg
mov
xchg
test
cmp
out
cmp
jge
push
mov
or
mov
test
sub
mov
in
pushf
es
inc
nop
dec
push
lock
mov
les
sub
mov
shll
mov
dec
jmp
testb
push
pop
bound
fisubs
clc
orb
jne
add
nop
adc
pop
push
xchg
pop
loopne
push
mov
pop
xchg
lret
lock
in
push
and
adcl
mov
cmp
xor
sub
and
lods
fstp
mov
pushw
sub
syscall
mov
and
pop
iret
lods
or
xchg
inc
arpl
xor
sbb
in
scas
cmc
cmc
nop
jb
dec
jo
lods
mov
fwait
shrb
dec
jge
sub
call
push
aaa
sub
mov
stos
jecxz
xchg
repz
jmp
aad
xchg
aam
and
imul
or
scas
xchg
pop
push
lds
imul
in
jnp
push
les
cmpsl
clc
sub
pop
aaa
xchg
xor
and
stc
sub
mov
xchg
xchg
push
lea
loope
sub
inc
in
cmp
and
sbb
sub
inc
sub
call
inc
push
push
xchg
cmp
test
sub
divb
dec
call
mov
aaa
leave
cmpsl
aad
insb
inc
mov
add
mov
out
jnp
lret
sub
pop
mov
jne
cld
sub
ja
push
mov
xchg
cs
loop
iret
in
mov
jne
inc
icebp
jns
jae
lods
lods
out
pop
xchg
jae
test
xor
sub
rorl
or
push
bound
loop
mov
pop
dec
inc
dec
jno
in
mov
sbb
pop
mov
data16
aaa
dec
inc
pop
rcll
and
es
add
push
fnsave
or
mov
imul
sub
ss
hlt
in
jmp
dec
scas
inc
mov
ret
xchg
xchg
arpl
mov
jecxz
xor
or
xor
lock
xor
dec
daa
mov
xchg
push
cli
xor
cmp
pop
fs
mov
lock
sbb
ja
inc
mov
add
pop
cli
add
not
dec
lods
dec
clc
cmp
mov
into
inc
jle
fs
dec
push
mov
xor
pop
test
outsl
xlat
add
sbb
out
stos
inc
push
adc
iret
xchg
push
into
sub
out
inc
adc
arpl
movsl
in
or
insl
js
in
lcall
dec
cmp
mov
call
icebp
jne
ss
xchg
dec
adc
mov
inc
push
sbb
xchg
jge
rolb
xor
sub
lock
sub
or
outsl
sti
xchg
jl
movsb
xor
stos
sbb
addr16
adc
jnp
cwtl
aad
and
inc
and
or
movaps
pop
push
ret
xchg
mov
int
cmp
fs
adcb
dec
ds
fiadds
das
pop
clc
fisubrl
fildl
mov
test
mov
xor
cmc
fstpl
stc
pop
and
out
xor
push
add
inc
and
ret
inc
dec
ljmp
adc
xlat
push
mov
mov
mov
roll
inc
jbe
call
cmp
aam
adc
fwait
pop
add
xchg
shll
and
jae
xchg
or
dec
outsb
jns
sub
shlb
lret
push
pop
in
dec
cli
sbb
mov
adc
adc
push
scas
jae
es
mov
std
sarb
xchg
cld
sbb
decb
add
mov
lret
in
cmc
stos
test
mov
inc
jp
dec
gs
jne
add
sbb
lret
cmc
stos
test
mov
inc
jp
dec
gs
jne
add
sbb
dec
in
hlt
sub
sbb
dec
gs
jne
add
adc
ljmp
icebp
stos
test
dec
push
jp
loopne
pop
add
dec
ljmp
int3
int3
int3
dec
mov
pop
imul
jl
imul
mov
mov
pop
imul
xchg
sub
fscale
jmp
loop
popf
test
filds
jno
popa
jg
xor
and
ret
cmp
mov
orl
and
xor
movaps
sbb
dec
into
and
das
mov
adc
mov
enter
adc
or
loope
insl
lods
jg
call
pop
in
xor
ja
push
lret
and
sahf
inc
es
shll
jo
lods
gs
test
lea
mov
or
cmp
inc
xor
push
add
cltd
bound
inc
mov
mov
ds
clc
imulb
add
and
pop
int
sub
std
jno
cltd
pushf
push
mov
mov
inc
testb
fisubrl
shll
push
mov
adc
bound
dec
inc
lods
imul
or
rorb
sbb
std
loopne
xchg
mov
mov
pop
or
or
jb
inc
cmp
mov
xchg
mov
cld
jmp
or
sbb
or
pop
bound
sub
push
mov
mov
rcr
int3
fst
sub
xor
push
inc
imul
cmp
jmp
lea
mov
imul
sbb
leave
int
fucomp
in
stc
std
mov
mov
mov
into
or
xchg
jnp
sub
jbe
or
xor
loopne
nop
xchg
jo
push
lcall
xchg
lds
push
shrl
pop
jle
popf
call
rolb
adcb
sub
mov
iret
repz
insl
das
hlt
inc
mov
lods
pusha
scas
mov
cmpl
repnz
dec
push
imull
sbb
hlt
movsb
ret
add
std
in
mov
fdivr
push
out
dec
sti
adc
in
mov
mov
js
daa
pop
push
movsl
push
push
lret
mov
xor
out
and
sub
ss
sbb
add
pop
dec
xchg
test
mov
jo
outsl
pop
or
sbb
or
fidivrl
add
fistpl
int3
stos
jbe
ss
sbb
pop
mov
dec
scas
fmuls
push
sti
or
jg
and
jg
pusha
jg
inc
lock
mov
pop
filds
cmp
mov
scas
popa
lcall
shr
icebp
hlt
mov
cmp
lret
repnz
es
dec
aaa
dec
mov
xor
in
shl
xor
mov
out
testl
cmp
mov
divl
fidivl
lret
adc
orb
ficoml
rorb
cmp
out
ljmp
adc
push
aaa
cltd
xchg
xchg
lds
das
cld
mov
lods
fs
add
icebp
lds
inc
sbb
jecxz
sub
int
lar
pop
add
arpl
mov
mov
push
cltd
lret
aas
cmp
sbb
xchg
cmc
icebp
mov
mov
popa
int3
and
in
push
pop
repz
je
popl
dec
mov
pop
adc
insb
inc
cwtl
jp
add
sub
fwait
dec
dec
pop
test
jb
popa
add
arpl
imul
cli
ret
leave
sub
sub
cmp
js
pop
out
fildl
repnz
inc
mov
mov
out
or
jb
fwait
dec
orb
outsl
fisttpll
adc
lods
jae
xor
arpl
ja
push
aam
push
mov
jl
loope
add
lcall
scas
or
fstpl
cmpsl
or
aaa
into
or
sahf
cmpsb
xchg
push
ret
xor
rclb
pop
fadd
fsubr
or
insl
aas
scas
shrl
ficoml
cmp
popf
inc
sbbl
cmp
loope
mov
or
mov
push
arpl
scas
jae
cli
aas
test
sub
fmull
sahf
test
inc
mov
popa
das
lcall
fs
mov
dec
push
sti
cli
add
les
lods
scas
pushf
and
leave
sub
std
and
xchg
push
data16
je
sub
mov
dec
sar
ds
enter
jecxz
adc
cmp
es
shlb
test
push
insb
push
xor
pusha
adc
enter
xlat
out
dec
jp
and
adc
xor
xchg
adc
fcoms
xchg
pushf
lods
ror
fs
incb
mov
mov
and
xchg
rcrb
jb
arpl
cld
repz
sub
pop
das
pop
sub
or
pop
test
cmovge
pop
arpl
in
fcmove
loop
arpl
lcall
sahf
xor
fnstenv
xor
inc
mov
aas
cmp
cmp
aaa
xor
sub
jmp
js
cmpsl
mov
clc
clc
scas
int
cld
aas
sub
lret
aam
shlb
push
std
daa
push
jnp
lods
sbbb
test
push
dec
es
in
cmp
jnp
enter
aad
cmp
or
push
adcb
imul
inc
mov
into
cmp
repz
enter
aas
cli
icebp
shrl
flds
xor
and
jecxz
jl
std
xchg
xor
pop
sub
ss
mov
adc
inc
add
scas
shrl
adc
shlb
inc
mov
cmp
jl
dec
movsl
bound
sub
cmpsl
and
cltd
hlt
xor
adc
jbe
xchg
repz
xchg
jp
rcrl
sbb
imul
hlt
mov
mov
in
mov
outsb
push
mov
mov
bound
mov
mov
xor
dec
inc
cmp
gs
mov
adc
mov
and
cwtl
icebp
es
sbb
push
loope
lret
adc
push
dec
cmp
mov
ret
push
mov
adc
stos
adc
lock
inc
nop
stc
ljmp
js
inc
cmpl
lods
lcall
mov
lock
inc
push
mov
loopne
bound
xchg
pop
inc
shll
mov
insb
aas
fdiv
lret
sbb
sub
push
stos
mov
ficomps
repz
cmp
adc
jg
dec
pop
dec
push
repnz
test
popa
push
add
repz
andl
sbb
je
pop
in
ja
sbb
and
cmp
jge
cmpsb
cltd
cmp
rcrb
fcomps
mov
in
loope
mov
cld
jp
mov
cmp
pop
fwait
dec
mov
hlt
das
sub
int
sti
loop
jg
iret
nop
xorb
test
aas
or
data16
jae
lahf
outsb
cmp
or
push
ret
mov
imul
int3
popf
enter
lret
add
ret
shr
inc
in
push
fisubl
lods
loope
adc
fwait
mov
mov
sub
sar
popa
lea
mov
add
subl
jmp
and
pop
and
fdiv
scas
adcb
xchg
fldcw
dec
mov
cld
pusha
adc
lods
ljmp
sbb
popa
stc
addr16
dec
or
and
mov
movsl
fstpt
dec
jl
mov
mov
sbb
sub
fwait
loopne
sbb
icebp
jnp
mov
in
aas
ret
pop
mov
dec
les
je,pn
xor
stc
push
mov
add
inc
ret
pop
sub
pop
int
adc
cld
inc
mov
and
loopne
sub
pop
pop
adc
inc
popf
mov
enter
lret
jns
mov
daa
sti
adc
mov
pop
push
idivl
sbb
mov
xchg
mul
test
adc
dec
add
xor
std
cld
data16
pop
fbld
rorb
mov
mov
push
out
push
xchg
pop
loop
test
movsb
out
bound
inc
fstpl
out
sub
adc
adc
or
cwtl
bound
pusha
cmpsl
jae
fidivrl
jbe
push
pop
pop
mov
mov
in
push
cmp
fs
iret
insb
xchg
or
or
stos
add
jns
lods
int
fistl
or
nop
ret
out
mov
jnp,pn
mov
xchg
std
adc
inc
or
adc
sbbb
mov
data16
dec
int
mov
dec
add
dec
cmpsl
clc
or
xchg
loope
mov
repz
mov
sbb
dec
arpl
push
loop
mov
cmpsl
imul
and
ljmp
clc
inc
fmul
es
jo
mov
dec
cmp
mov
insl
call
test
test
test
xlat
iret
pop
in
iret
mov
bound
cmp
lods
inc
mov
dec
pop
cmp
jp
mov
enter
mov
jge
ret
jle
push
lds
addr16
push
push
pushf
jnp
jbe
sbb
icebp
fdivl
lcall
negb
repnz
sahf
and
outsl
mov
mov
mov
hlt
rcll
pop
notb
xor
shrb
and
sub
cmpsb
mov
xor
ror
and
sbb
sbb
or
sub
stc
stos
lds
mov
in
pop
lcall
sub
adc
cmp
mov
fs
inc
push
jle
and
aaa
mov
les
outsl
mov
flds
pop
mov
inc
mov
gs
jne
loope
mov
lret
daa
adc
mov
push
sub
mov
mov
iret
xor
cld
pop
mull
ja
repnz
jns
into
sti
imul
fwait
mov
fcmovb
mov
loop
divl
js
scas
jecxz
jo
sbb
loop
mov
mov
cmovnp
xchg
aaa
push
push
dec
cltd
lds
ds
mov
rcr
daa
cmpsl
popa
arpl
mov
mov
xchg
fiaddl
mov
inc
and
pop
cmp
xor
push
mov
inc
fildll
pop
sbb
movsb
repz
test
xchg
fisubl
mov
pop
or
xchg
push
mov
es
jno
fists
jo
mov
xor
stos
ret
cli
cltd
pop
fnstcw
cmp
jmp
jecxz
push
in
bound
insl
adc
and
aas
jmp
sub
repz
fidivs
jl
stc
sub
sbb
push
das
pop
xchg
lock
popf
mov
jmp
and
das
test
xor
cmp
xchg
xchg
cmp
gs
dec
divl
cltd
inc
sbb
sub
jg
mov
or
es
loopne
or
aaa
dec
sub
mov
fstpt
int
shlb
loopne
push
lret
fstpl
lcall
mov
shlb
xchg
sbb
pop
pop
sub
xor
fdivs
fwait
xchg
mov
fldenv
neg
cmp
fcmovne
sub
sbb
pushf
xchg
ds
pop
outsb
sti
dec
push
ljmp
lcall
fst
rcrb
push
fcoms
aas
pop
scas
roll
rcrb
repnz
loop
jne
sbb
nop
mov
shrl
in
enter
jae
push
xchg
push
call
jo
xchg
mov
enter
into
decl
mov
dec
jp
mov
inc
inc
jle
leave
addb
mov
cmp
cmp
dec
push
js
shrl
dec
sub
jecxz
aas
pop
push
and
ret
sbb
pop
cmpsl
ret
cmpsl
dec
test
testl
mov
xor
xchg
add
stos
push
cmp
sub
je
jno
mov
sub
fistpll
xchg
pop
jmp
das
mov
insb
dec
bnd
dec
fistps
and
xchg
sub
out
dec
mov
hlt
xchg
sbb
movsb
cltd
lock
ljmp
jns
fdivs
das
sbb
push
and
jge
pop
mov
or
cmp
mov
jo
inc
std
aas
xchg
sub
cmp
xchg
or
out
cld
and
mov
mov
push
xor
inc
daa
xchg
scas
add
in
push
push
xor
icebp
mov
out
aam
xor
mov
ds
and
pop
cmpsb
jns
mov
repz
sbbb
in
push
mov
sbb
xor
ja
mov
call
pop
ret
clc
push
nop
xor
mov
and
in
int
and
add
pop
loop
inc
aaa
aas
repnz
int
jne
inc
xor
lret
fsubrs
cmp
xchg
sub
or
sub
hlt
push
xchg
divl
test
adc
outsb
or
inc
mov
bound
add
cmp
out
sbb
enter
sbb
dec
dec
cs
sbb
jnp
daa
mov
cmpsl
ror
test
ljmp
sub
and
or
popf
pop
test
and
mov
sub
jp
lret
and
aaa
cmp
sbb
add
je
mov
and
arpl
dec
std
mov
xchg
ret
cmp
mov
lret
into
mov
cmpsl
xor
fisttpll
xor
das
jo
andb
add
dec
test
adc
sub
push
sbb
out
dec
mov
dec
pop
pop
xchg
adc
out
ret
js
cld
dec
hlt
mov
jle
jb
arpl
je
pop
pop
lahf
cmp
mov
pop
roll
pop
push
imull
fcomps
gs
xor
sub
or
lods
pop
dec
mov
loop
xchg
and
xchg
fdivp
jp
push
scas
movsb
or
stc
std
test
notl
shll
mov
mov
adcl
ss
hlt
push
test
jno
xor
lcall
dec
jl
dec
or
in
adc
test
push
xor
mov
test
dec
mov
sub
out
mov
xchg
xchg
cmpsb
cmp
inc
pop
insl
out
lahf
inc
lahf
jbe
out
or
fisttps
adc
in
cmp
movsb
dec
test
and
dec
or
cli
ds
repz
lcall
insb
push
xchg
mov
xor
popf
adc
scas
aaa
mov
dec
lea
cmp
test
cs
or
dec
dec
jle
stos
movsb
and
xor
out
lret
stc
jns
add
xchg
xchg
ss
testb
sbb
adc
inc
fimull
outsb
sbb
inc
push
cmc
mov
jbe
inc
in
push
adc
in
push
pop
ss
insl
pop
pop
add
in
js
sarb
mov
icebp
cltd
xchg
mov
fsubl
mov
and
push
ret
aas
adc
sub
mov
pop
and
push
mov
mov
repz
jmp
jbe
mul
lret
out
push
jle
pop
inc
in
loope
cmp
and
inc
icebp
sub
mov
test
and
repz
ss
pushf
sub
movsl
mov
out
std
clc
jp
push
insb
aas
dec
dec
rolb
cmp
or
daa
add
insb
or
jge,pt
jb
xor
mov
cwtl
xor
mov
push
push
outsb
fcomp
and
cmp
jecxz
rorl
rclb
xchg
testl
pop
add
fwait
jae
cmp
push
and
xchg
mov
cltd
or
cmp
pop
mov
lret
cmpl
mov
rcrl
insl
rcrb
jns
pop
cs
adc
inc
add
vlddqu
sbb
popa
add
pop
loop
sub
ret
fstl
icebp
lods
push
mov
mov
cmpsl
push
xor
idivb
aam
push
xchg
loop
sub
mov
fstpt
dec
jne
jle
inc
arpl
add
jp
sub
jns
addr16
xor
fistpl
or
lahf
cmc
cmpsl
loopne
ret
and
xlat
outsl
mov
inc
int
nop
jbe
lret
cmc
addr16
loopne
xor
out
mov
jae
xchg
cld
xchg
popf
jl
add
cmpsl
mov
and
test
xor
jmp
cmp
mov
es
bnd
and
psubsw
mov
pop
dec
shl
imul
cld
cwtl
cld
sahf
xchg
pushf
sub
sbb
mov
push
xor
pushf
out
ljmp
flds
aas
mov
cmpsb
and
test
ret
jl
xor
jne
fimull
daa
sub
and
pop
adc
sub
scas
icebp
xchg
stc
or
jno
loopne
add
mov
pop
xchg
jbe
arpl
movl
push
cmp
stos
dec
leave
and
icebp
inc
jmp
stc
jnp
fcompl
mov
xlat
jne
xchg
push
pop
lock
loop
jo
and
jg
out
mov
addr16
mov
push
jno
pop
adc
cmpsl
pop
push
dec
roll
push
xor
and
sub
rorb
out
cmp
test
mov
enter
aad
or
ficoml
mov
inc
fwait
xchg
adc
stos
pop
jmp
or
addr16
mov
lock
mov
adc
enter
jmp
xchg
mov
xchg
out
movsl
insb
test
cmc
cmp
xor
lret
movsl
adc
lds
xchg
jae
scas
push
test
push
lret
out
mov
mov
int
mov
insl
dec
cld
lock
loop
mov
fs
sub
jmp
pop
or
imul
xor
jmp
aad
adc
hlt
rcrl
jle
repz
push
add
mov
shll
shll
rorl
loopne
pop
int
aaa
push
cmpsl
cld
and
jns
std
xor
gs
je
sub
rorb
and
repz
pop
iret
push
ss
xchg
ds
aas
inc
icebp
xchg
sub
inc
out
cmc
cmp
sub
xchg
jp
mov
push
xchg
pushf
in
dec
aam
stos
pop
pop
xor
enter
in
jns
pop
outsb
pop
fildl
dec
dec
pop
lods
pop
xchg
mov
mov
cwtl
pop
push
cltd
repz
xchg
in
outsl
repnz
mov
arpl
adcl
aas
add
stc
andl
stos
lods
mov
sub
pop
xor
pushf
mov
je
arpl
and
cmp
and
pop
xchg
inc
adc
lahf
jns
cmpsb
or
inc
adc
jbe
mov
xor
pusha
jne
push
bndldx
jg
adc
push
outsl
test
lret
jo
dec
fisubrs
stos
xor
mov
jne
push
int
mov
mov
pop
pop
xlat
xor
sbb
pop
pop
daa
add
xchg
mov
cmp
dec
mov
fcmovnbe
arpl
cld
repnz
xor
popa
jmp
imul
lret
pop
loopne
jl
aaa
andb
jg
cmp
and
adcl
dec
scas
imul
pop
or
pushf
sub
mov
fisubrl
fwait
or
cmpsb
xchg
std
inc
mov
dec
add
sbb
push
bswap
cmp
ret
mov
fwait
push
sarb
inc
add
iret
fwait
cltd
mov
sbb
sub
repnz
aam
fimull
ret
add
sbb
mov
xchg
aas
jo
test
aad
mov
gs
cmpsl
add
mov
pop
in
fdivrp
sbb
or
test
lock
aam
or
sahf
subl
in
arpl
mov
jle
test
mov
dec
cwtl
lods
mov
push
lahf
push
gs
fdivs
sbb
and
xchg
outsl
out
sub
push
cmp
sub
push
push
dec
call
jns
mov
cmp
xor
pop
push
xchg
jne
pop
stc
test
aad
cwtl
jmp
cli
shl
push
and
fnsave
dec
cltd
rcrb
dec
int3
pop
jne
sbb
leave
ret
adc
push
ret
dec
lret
mov
and
roll
jb
int
arpl
sbb
ds
or
mov
nop
xor
inc
sub
push
in
loope
cltd
push
xchg
xchg
sbb
leave
outsb
loope
scas
ljmp
add
pop
mov
test
ja
lret
dec
lea
test
dec
pop
add
lods
mov
mov
or
cld
mov
or
add
inc
mov
repz
pusha
xor
lea
pop
fcoms
push
add
call
push
into
movsb
lods
jecxz
mov
test
pushf
jb
test
xlat
je
addr16
jnp
push
mov
imul
out
xor
fwait
or
sbb
sub
sbb
insb
dec
pushf
int
sbb
insl
mov
add
push
jb
pop
jne
add
outsb
pop
insb
and
ret
sub
dec
fiadds
ds
dec
aad
dec
in
cmp
adc
cmp
sub
dec
cmp
ret
inc
iret
jecxz
adc
sarb
xor
daa
gs
jns
shll
ret
mov
cmc
pop
mov
sti
std
xor
aad
jmp
jae
cmp
jo
dec
lea
and
fiaddl
xchg
push
rcr
subl
stos
ja
insl
in
xlat
cli
adc
aam
cs
fcoms
add
or
test
int3
sbb
adc
push
pop
leave
jge
popf
gs
icebp
or
daa
push
xchg
push
fisubrs
enter
cwtl
mov
and
add
push
or
inc
cld
or
mov
adcl
test
xor
jae
mov
mov
jnp
iret
aam
dec
lods
mov
sub
cmp
shrb
mov
test
inc
mov
mov
or
push
dec
and
sbb
push
ficoms
pop
push
sub
adc
fimuls
repz
xchg
xor
and
push
push
mov
shlb
testl
arpl
out
enter
repz
sarb
leave
decb
jno
pop
jno
fwait
cmp
jge
js
add
push
push
clc
push
push
stos
cmp
in
hlt
dec
fistps
int3
add
adc
loop
xor
outsl
std
cmc
push
mov
xchg
adc
mov
jne
fsub
push
cltd
roll
pop
push
enter
mov
roll
idivl
test
adc
nop
aad
jb
push
aad
popa
ret
es
add
mov
sbb
rolb
sub
fsubrs
or
push
mov
into
mov
test
xor
rorb
sbb
adc
das
test
inc
pop
inc
cmpsl
in
adc
std
nop
repz
adc
ds
addb
mov
insl
js
add
jb
cli
xchg
test
lods
mov
xor
lea
insl
fisttps
loop
leave
push
repnz
xchg
lcall
stc
gs
jmp
arpl
orb
imul
add
push
and
mov
and
shrl
mov
sub
imul
das
shll
in
out
sbb
pop
bound
cmpsl
cmp
mov
add
icebp
jge
arpl
jno
js
fsubp
jmp
fiaddl
cld
lock
lret
pop
lods
int3
and
test
stos
cmpsb
sbb
sub
fsubl
xchg
jmp
dec
gs
xor
sbb
pop
icebp
gs
lea
out
lock
rcrb
inc
mov
inc
mov
mov
jmp
pop
jecxz
push
add
sbb
dec
cmp
mov
xor
mov
push
push
lahf
lret
imul
dec
cmp
clc
xchg
jo
dec
push
clc
in
lret
inc
pop
and
imul
inc
add
lods
test
inc
imul
lds
mov
fstl
jp
aad
or
and
mov
adc
jnp
out
movsb
es
js
dec
and
pop
inc
pop
aad
pop
ljmp
addr16
cmp
icebp
mov
mov
jmp
imul
push
mov
inc
jo
je
pushf
std
mov
es
add
adc
pop
arpl
jns
or
cmp
jmp
lea
mov
imul
sbb
leave
int
fucomp
in
stc
std
mov
mov
adc
or
cmp
jmp
lea
mov
push
or
mov
ja
in
stc
mov
add
inc
inc
int3
int3
int3
int3
int3
adc
xchg
cmc
movsb
test
xchg
nop
icebp
add
adc
and
pusha
push
cwtl
je
je
test
mov
in
cmc
in
hlt
sti
add
adc
inc
or
push
jne
inc
je
test
xchg
jae
pop
mov
aad
mov
add
adc
inc
fs
addr16
ss
xor
loope
hlt
call
ljmp
test
decb
sarb
lcall
shll
cmc
push
lock
cmp
leave
jge
mov
sub
sbb
int
in
stos
rorb
or
xor
inc
and
cli
xchg
xchg
mov
xchg
xor
test
clc
lds
rcl
and
jo
clc
je
jle
jns
imul
mov
hlt
in
hlt
sub
bound
in
pusha
loope
mov
jl
xchg
dec
lock
stos
sbb
sbb
xor
sti
jbe
gs
sarl
xor
jne
fldt
xchg
xchg
movsb
icebp
mov
in
cmc
in
hlt
inc
add
adc
and
xor
inc
pop
push
fwait
fs
je
lock
rcr
enter
xchg
cwtl
mov
data16
inc
dec
mov
sbb
or
add
jecxz
repz
cld
stc
mov
lods
mov
push
inc
jns
pop
push
push
and
xor
imul
mov
stc
test
hlt
aad
and
xor
inc
gs
jne
inc
je
test
mov
in
cmc
in
hlt
aad
and
xor
inc
gs
jne
inc
je
test
out
mov
xchg
insb
add
adc
mov
inc
mov
sbb
insb
jns
cmp
sub
push
mov
push
sub
pop
sbb
out
or
or
add
inc
jle
dec
cmp
add
xchg
xor
gs
mov
xor
lcall
mov
pop
jecxz
dec
sbb
aad
bound
xor
fs
jge
sub
loope
lea
pop
pop
xchg
xor
jne
or
por
cmp
adc
ret
xor
rcl
fistl
aaa
inc
push
aas
and
jmp
call
aas
cs
decb
test
std
shlb
fisttps
insb
mov
cmp
xchg
dec
and
cmp
xor
sub
cld
fcoml
adc
xor
xor
dec
fs
movlps
ss
pavgw
mov
dec
mov
mov
pop
lret
mov
fisttps
rorb
mov
aas
imul
xor
inc
movsl
adc
cmp
inc
sub
pop
sarb
jle
inc
push
fldenv
shl
lret
in
jae
xchg
insl
shl
std
pop
dec
push
jp
xchg
js
test
and
cld
in
test
ret
adc
daa
stc
addr16
lods
mov
sbb
bound
pop
pushf
loopne
xchg
nop
adc
add
mov
scas
in
add
adc
aam
cmp
dec
inc
stc
inc
push
push
adc
adc
and
aad
sub
negb
adc
inc
je
xor
ds
out
mov
or
cwtl
xchg
cmc
or
pop
pop
in
adcb
frstor
in
test
icebp
pop
lret
add
arpl
adc
sbb
pop
inc
ds
call
adc
iret
mov
aam
pop
mov
mov
repnz
and
xchg
arpl
in
jns
movl
jnp
mov
jno
loop
pop
mov
popf
leave
fldt
pop
adc
pushf
leave
mov
pop
scas
in
mov
adc
mov
cmp
mov
mov
mov
mov
iret
lret
mov
jns
lds
inc
jo
bnd
xchg
sbb
sbb
pop
mov
add
mov
mov
les
insl
lcall
xor
es
pop
mov
cmpsl
and
int3
dec
jns
jb
outsl
jmp
aam
lea
inc
adc
bound
pop
and
xlat
movsb
dec
jecxz
or
out
xlat
in
inc
in
adc
hlt
pop
sub
divl
jl
cmc
arpl
hlt
mov
sub
icebp
movsb
xchg
pop
mov
roll
call
add
aas
inc
loop
jle
xor
std
es
ret
lret
or
dec
mov
adc
js
mov
push
mov
pusha
pop
jg
js
in
incb
mov
lock
call
shlb
pusha
and
adc
fcmovnbe
or
aaa
pop
scas
inc
jne
fadd
loop
faddl
dec
jnp
sahf
mov
xchg
push
outsb
jne
cmp
and
sbb
push
cs
push
hlt
jmp
cli
sub
ljmp
ficoml
sub
cltd
cmp
mov
jl
jae
popf
lcall
push
mov
adc
insb
xchg
mov
add
push
mov
jmp
pop
sbb
pop
mov
aad
inc
adc
scas
pop
jnp
test
and
inc
scas
dec
mov
cmp
jg
sbb
mov
ret
shll
lret
adc
lahf
cmp
cli
xchg
loope
stc
sbb
out
adc
iret
jp
add
inc
psraw
cmp
lret
fneni(8087
aad
out
fucom
mov
xor
fs
xor
jmp
xchg
hlt
sub
aam
inc
mov
push
adc
sub
in
or
js
mov
sbb
xchg
mov
into
mov
cmp
cs
or
mov
push
jl
inc
cmpsl
dec
mov
or
rorb
push
das
and
add
in
ja
push
adc
addr16
shl
mov
dec
adc
xor
filds
adc
into
sub
test
aam
cltd
jnp
imul
faddp
mov
fwait
pop
inc
fs
jge
dec
movsb
test
cld
jns
ds
fdivp
cmp
lcall
dec
rcll
lods
lods
sbb
adc
test
popf
xchg
sub
repz
mov
sub
testb
imul
jmp
outsl
xchg
push
enter
mov
lods
into
pop
and
inc
outsl
fnstcw
outsl
sti
sub
outsl
xlat
sbbb
lods
movsl
xchg
sbb
ficoml
pop
div
roll
sub
sub
or
mov
cmpsl
or
jl
push
sub
notb
pop
cmp
imul
adc
pop
shl
lods
push
mov
sbb
popf
call
testl
sub
mov
and
mov
cli
sub
xchg
jbe
inc
pop
ret
sub
inc
repz
adc
pop
mov
jl
jns
xchg
pop
push
mov
cmpsb
sbb
test
notb
std
je
lods
test
dec
test
data16
mov
arpl
jle
test
mov
orb
clc
out
pop
mov
lds
fimuls
stc
movsl
cmp
dec
es
cmc
add
xlat
movsl
orb
push
xchg
adc
out
jns
jmp
xor
jl
les
fcomps
aaa
dec
pusha
pop
mov
pop
sbb
jo
fs
jge
jne
sbb
jecxz
xchg
in
dec
imul
and
loope
add
test
xchg
xchg
sub
loop
shl
push
lret
inc
xchg
and
outsb
daa
dec
mov
cmp
sbb
and
movb
lds
adc
xchg
push
jle
nop
neg
xor
pandn
fdivp
or
add
add
shlb
roll
sub
add
xchg
rcrl
ret
sbb
enter
sbb
das
xlat
shl
movb
inc
ja
mov
loopne
sti
push
sub
testl
mov
xchg
xor
jmp
cmp
and
popf
lret
and
daa
addr16
and
rcrl
ficoml
and
daa
dec
or
xchg
push
std
sub
loop
inc
mulb
fnstcw
cmp
push
push
inc
int
rcrb
scas
jns
sbb
aas
lahf
out
mov
jge
addb
movsb
adc
cld
cmpsb
ja
jae
outsb
fldln2
aaa
cmc
and
sbb
cmp
dec
and
fdivl
mov
xor
ret
lret
lcall
cmp
mov
loope
jg
mov
or
aas
cltd
roll
or
pop
push
sub
mov
mov
in
imul
add
dec
mov
mov
sbb
clc
add
adc
fimuls
pop
popf
and
or
mov
push
sbb
xor
adc
jl
pop
addr16
push
in
cmc
je
inc
sbb
jo
mov
aam
dec
push
adc
push
mov
and
lock
fiaddl
cmp
int
xchg
push
fdivrp
cmp
xor
sub
outsl
cltd
daa
pop
cwtl
callw
enter
xor
mov
pop
jp
mov
shlb
xlat
jo
fwait
aaa
jp
cltd
popa
dec
sbb
int3
jae
pushf
arpl
cmp
jo
add
or
sbb
movsl
ljmp
outsl
jbe
xor
data16
pop
pop
mov
and
xchg
out
adc
or
out
dec
cld
fstps
std
jmp
sub
jmp
sub
push
div
cltd
int3
leave
imul
jno
push
mov
ljmp
test
out
fstpt
sti
insl
cltd
pusha
lods
imul
scas
rclb
jle
pop
jecxz
not
sahf
insl
fistpll
jno
and
in
cmp
stos
repnz
adc
lock
sub
imulb
test
or
dec
push
repnz
cmp
xchg
test
xor
cli
fwait
std
loopne
add
jge
in
or
insb
mov
insb
xchg
sub
adc
push
dec
mov
dec
add
cs
lcall
adc
fsub
leave
push
mov
or
cmp
pop
repnz
pop
movsl
mov
dec
push
jne
pop
mov
idivl
pusha
push
and
inc
je
mov
cmpl
mov
test
test
pop
in
jl
push
iret
jle
rorl
out
cltd
std
repz
mov
lcall
or
lret
cli
out
in
rcll
pop
dec
mov
pop
pmulhuw
dec
cld
xchg
cld
pop
mov
clc
pop
push
enter
sahf
xor
sub
in
cli
icebp
pop
inc
fsubs
aaa
pop
testb
lea
cmpsb
out
jmp
jle
outsl
jmp
fsts
stos
mov
jmp
stc
paddb
mov
jb
jmp
sarl
and
inc
fstps
pop
movsl
cmp
cld
test
in
test
mov
sbb
cmp
jbe
adc
or
push
popf
icebp
lea
cmpsb
pushl
dec
repz
adc
add
imul
xchg
mov
lret
fwait
and
sub
inc
mov
add
mov
pop
xchg
loopne
fimuls
xor
and
call
inc
push
jg
mov
push
stos
dec
adc
sbb
cmpb
lret
inc
push
dec
xor
cld
xchg
jb,pn
dec
shlb
and
decl
hlt
test
ret
pop
cwtl
out
mov
xchg
jle
mov
rolb
jne
ja
inc
push
test
bound
hlt
and
xor
dec
ja
aas
push
xor
gs
dec
lea
dec
and
lods
fldt
pop
xchg
sub
sub
xor
mov
pop
push
test
xchg
mov
cs
lods
cmpsb
push
test
rcl
pop
push
int3
xor
dec
leave
int
adc
inc
cmp
cmp
loopne
add
aaa
aad
sub
xor
popf
pop
cli
arpl
fwait
enter
inc
stos
jecxz
xor
loope
cmpsl
mov
sub
or
pop
pop
cmp
mov
sub
sbb
jae
lahf
push
sti
dec
inc
mov
adc
or
movsb
sbb
std
jae
into
jo
cltd
sarl
lock
movsb
sbb
xor
enter
xchg
push
cmp
mov
sub
mov
push
sarb
rcl
popf
and
adcl
pop
ljmp
shll
insl
decb
jno
leave
or
mov
dec
jp
lcall
in
sub
sbb
pusha
outsb
mov
cmp
dec
lds
or
xchg
pop
insb
pop
mov
and
inc
jne
sti
adc
insb
or
add
iret
popa
xorl
dec
push
pop
addl
iret
xchg
mov
sbb
sub
and
bound
jnp
xchg
mov
mov
pop
and
pushf
push
insb
je
mov
lods
xor
pushf
push
std
jno
inc
out
mov
xchg
cs
dec
inc
clc
clc
jle
nop
cmpsb
push
cmp
mov
jnp
shr
dec
mov
lret
push
shll
ret
ret
xchg
xor
stos
imul
pop
mov
rorb
jge
push
lods
jae
xchg
aaa
je
add
ss
mov
push
jno
sub
shlb
inc
xchg
push
loop
inc
jns
inc
shll
std
xlat
inc
scas
and
jg
test
sub
sti
push
sbb
xlat
xor
aam
mov
and
cli
xchg
cmp
jbe
mov
fwait
mov
xor
pop
jbe
rcrl
lds
jmp
xchg
pop
in
pop
in
repz
lods
mov
ljmp
jo
mov
sbb
dec
pop
xor
stc
mov
sbbb
inc
pop
sti
dec
push
mov
mov
mov
push
push
dec
xchg
inc
xchg
into
fwait
ret
mov
iret
icebp
imul
jns
in
mov
enter
sub
test
fisttpl
rcrb
insl
lahf
cmp
clc
inc
scas
popf
es
popf
loope
xchg
adc
pop
hlt
jle
mov
jnp
out
fwait
sbb
sub
cmc
test
aam
mov
imul
jno
aam
jbe
inc
xor
push
mov
mov
sub
push
sub
or
sub
sub
sub
popl
aas
inc
mov
outsb
cmp
xor
xor
repnz
jb
call
lret
int
sbbb
sahf
call
sbb
xchg
mov
jg
lds
loope
dec
daa
dec
or
aam
std
ss
sub
inc
insl
dec
cmp
cmpl
gs
sbb
dec
xchg
leave
dec
clc
pop
add
or
insb
mov
sbb
in
es
out
shll
call
iret
mov
cwtl
test
mov
pop
push
mov
mov
popa
imul
mov
scas
scas
push
mov
mov
mov
fcom
rcrb
dec
mov
or
xchg
and
mov
ret
icebp
sti
mov
gs
xchg
iret
gs
adc
cmp
jb
out
fld
inc
xor
movsb
aas
jne
push
adc
repz
imul
dec
mov
push
or
adc
mov
cmp
sub
add
push
xchg
test
inc
imul
lea
std
xor
xor
cmc
lahf
push
push
mov
jle
xchg
leave
jo
push
sbb
cwtl
mov
or
push
cltd
lods
jae
pushaw
push
fidivrl
jp
jg
ror
sahf
int3
cmp
cli
add
and
mov
dec
push
or
lcall
mov
xchg
jae
lret
fwait
dec
push
decb
mov
cmp
add
jle
aad
outsl
das
cmc
fmuls
push
enter
dec
pop
fisubrs
adc
adcb
ja
popa
adc
int
push
inc
lcall
pusha
aaa
sbb
aam
fisubl
out
adc
xor
add
and
pop
mov
insb
mov
ret
xchg
push
sub
cmp
jecxz
mov
cli
xor
dec
fstl
sub
add
add
loopne
call
notb
adc
bound
in
fimull
jbe
jb
jmp
shl
mov
push
xor
sub
arpl
inc
in
mov
sub
xchg
test
aam
shlb
mov
lds
mov
jbe
in
sahf
pop
xchg
jo
ljmp
jno
jle
call
xlat
and
aam
or
popa
cmp
ret
pop
pop
cmp
sbb
push
xor
addps
subl
je
dec
pop
xor
ficomps
mov
pop
push
mov
mov
outsb
and
jp
ficomps
add
ret
jle
fsubl
inc
fdiv
add
lock
add
hlt
xlat
cmc
sbb
loop
jle
mov
and
and
inc
pop
push
out
jl
aad
pop
adc
scas
call
xchg
mov
inc
xlat
and
clc
xchg
fs
jmp
addl
loopne
mov
dec
sub
ds
xor
mov
cltd
jge
dec
mov
sub
jle
jge
out
popl
cs
lcall
adc
scas
leave
mov
loop
sbb
push
hlt
xchg
push
aam
mov
xchg
movsb
cmp
add
sbbb
push
shl
mov
mov
popa
cmpsl
xchg
mov
js
add
pop
loop
pop
fs
call
aad
push
inc
fidivl
add
dec
ret
stos
andb
and
push
and
in
int3
es
jmp
push
aam
push
dec
insl
mov
jg
jo
mov
add
jmp
sbb
out
push
imul
imul
shrb
sbb
push
imulb
clc
cld
aam
js
sub
mov
sub
nop
mov
jns
add
subl
imul
imul
les
push
enter
jnp
dec
std
imul
shlb
pop
insb
iret
in
push
dec
xchg
xor
push
and
push
cmp
pusha
pop
and
dec
dec
jmp
xchg
outsb
dec
test
push
scas
in
push
lods
mov
xchg
dec
js
sbb
movsb
sub
ret
stos
into
lds
sub
mov
or
pop
adc
adc
adc
xchg
int3
push
add
inc
lcall
mov
pop
outsl
andl
mov
fwait
dec
xor
adc
out
mov
je
pop
sbb
mov
jo
jmp
div
arpl
add
cmp
insl
pop
fidivl
insl
aam
mov
inc
mov
adc
inc
mov
cmp
ror
call
add
cmc
insb
sbb
add
dec
loop
enter
mov
inc
mov
add
inc
xor
imull
inc
das
in
push
ret
mov
out
aas
das
xchg
mov
repz
aas
dec
mov
add
nop
iret
lods
sbb
xchg
xlat
or
rorl
push
fwait
leave
mov
and
out
push
insb
fmull
mov
xchg
add
jb
xor
push
or
repnz
xchg
jns
push
fnstsw
cmp
fmull
adc
icebp
movb
add
xchg
cmc
andl
dec
pop
mov
fmuls
ljmp
popa
movsl
lea
xor
and
int
lods
adc
inc
pushf
pop
dec
repnz
push
jecxz
lret
cld
in
shll
jl
aas
cmpsb
sti
xchg
add
sti
enter
iret
sub
and
aad
pop
add
and
inc
xchg
mov
gs
xchg
push
pop
out
mov
xchg
dec
fmuls
ja
ret
adc
mov
sub
mov
cli
mov
dec
mov
scas
cmp
xchg
pop
add
iret
sbb
sub
lea
push
add
insb
movsl
mov
cmp
cmc
push
nop
or
aam
jmp
sub
and
rcrb
pop
mov
sub
pop
or
xlat
jb
pushf
adc
sahf
dec
inc
push
dec
cmpsl
filds
stc
mov
sub
ret
negb
cmp
dec
das
inc
xor
mov
adc
mov
dec
mov
incl
mov
jp
cmp
mov
or
ds
andl
mov
clc
filds
rolb
stc
jp
mov
xchg
imul
cli
mov
loop
daa
lret
and
jp
and
in
dec
cmc
aad
insb
bound
and
mov
add
or
sbb
in
mov
pop
aad
and
sbb
cmpsl
rcrl
lds
or
add
stos
mov
jne
add
mov
sbb
adc
sub
outsl
fimuls
add
ret
xor
popf
dec
clc
lcall
pop
inc
or
mov
shll
cmp
popa
xlat
add
add
jnp,pn
add
subb
ror
sbb
sbb
test
popa
lret
mov
and
jg
adc
or
sbb
mov
mov
test
mov
arpl
dec
adc
xor
inc
imul
mov
inc
js
fidivrs
in
imul
sub
pop
mov
adc
sub
data16
push
and
lods
lcall
adc
or
xor
fdivs
dec
aaa
mov
cwtd
mov
sub
inc
clc
rcl
pop
lds
aad
or
xchg
rolb
and
movsl
icebp
or
jnp
inc
pop
xchg
ja
fcomp
pop
int
aam
outsb
popa
sbb
dec
jmp
ljmp
out
jns
jp
mov
lret
pop
addr16
mov
mov
jne
sarl
sub
repz
mov
loop
sbb
push
and
jmp
call
fstpt
cmp
sub
mov
mov
nop
daa
jl
negl
xchg
das
fcomip
cs
stos
xor
lahf
xchg
loopne
aaa
push
push
outsl
or
mov
jl
mov
test
cmp
push
or
dec
mov
push
pop
inc
mov
aad
fimuls
and
cmp
mov
jno
aam
push
sbb
pop
add
jae
rcrb
fidivl
lods
cmpsb
sbb
cmp
lods
insl
jmp
xlat
mov
mov
adc
outsl
pop
dec
cmp
fistps
repnz
addr16
and
adc
or
out
enter
cmp
push
rol
adc
lock
and
push
pop
test
adc
lea
xor
ljmp
mov
out
mov
inc
jno
push
incb
jecxz
push
or
mov
add
das
data16
mov
fisttpl
xchg
or
jle
adc
cld
sub
mov
ret
addr16
ss
mov
lcall
jmp
jno
sbb
mov
stc
roll
or
ret
mov
push
sbb
aam
jmp
mov
sbb
rcl
adc
push
arpl
xchg
lods
inc
push
mov
cmp
pop
mov
movsl
cmp
mov
xchg
push
insl
jg
idivl
cmp
lods
movsb
xor
jg
inc
dec
ret
add
push
xlat
inc
inc
jns
outsl
sbb
and
inc
jns
sbb
addl
out
or
add
movsb
add
test
daa
subb
xchg
jo
lret
movsb
xlat
mov
rcrb
sbb
lcall
imul
aam
test
je
jl
outsl
andb
add
adc
mov
pop
mov
mov
pop
fcmovbe
imul
xchg
sbb
mov
fs
adc
or
mov
and
andl
loop
cmp
mov
mov
ljmp
jno
imul
lahf
enter
cmp
sbb
aad
push
xchg
mov
dec
sub
lret
loope
movsl
jnp
jl
pop
jne
sub
aam
pushf
loope
push
rep
dec
mov
xorb
add
adc
and
xor
inc
gs
jne
inc
je
test
mov
in
cmc
in
hlt
aad
and
xor
inc
gs
jne
inc
je
test
mov
in
sahf
in
hlt
aad
and
xor
push
jne
dec
jne
test
push
movsl
popa
mov
in
cmc
in
hlt
adc
mov
fmull
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
push
add
xor
mov
mov
add
mov
mov
mov
call
push
push
mov
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
mov
mov
mov
movzbl
sub
je
call
mov
add
inc
cmp
mov
jne
movzbl
jmp
pushl
pushl
call
pushl
call
push
pop
pop
pop
ret
mov
outsl
jg
addr16
jo
rsm
aas
aas
iret
das
fistps
out
ud0
outsl
sbb
dec
mov
lahf
outsl
jg
pxor
fildll
iret
aas
aas
iret
das
mov
jg
outsl
lahf
pop
in
dec
mov
lahf
outsl
jg
pxor
fildll
iret
aas
aas
addr16
fildll
call
lret
adc
and
in
add
cs
cmc
xor
std
push
cmc
xlat
xlat
mov
jg
shlb
adc
push
add
aam
cmp
daa
add
xchg
out
mov
cli
jp
pop
pushl
dec
push
cwtl
pop
adc
outsl
and
aas
xor
loopne
gs
mov
pop
cmp
ss
pop
scas
fsubr
mov
lcall
and
aas
mov
adc
scas
and
dec
xor
inc
push
in
fidivrs
into
mov
movups
arpl
fsts
xchg
jp
xchg
and
fildll
inc
decl
inc
lcall
loope
scas
pop
lahf
outsl
jg
pxor
fildll
iret
aas
aas
iret
das
fistps
out
ud0
outsl
lahf
pop
scas
dec
stc
and
pop
cli
push
ljmp
popa
mov
stos
sub
sbb
push
in
sbb
fstpl
outsl
ljmp
pop
iret
aas
pop
mov
stos
pop
mov
sbb
cmp
sub
push
lret
or
pop
mov
decl
out
pop
fildll
iret
aas
aas
iret
das
fistps
out
ud0
outsl
lahf
pop
scas
dec
mov
lahf
outsl
jg
pxor
fildll
iret
aas
aas
iret
das
fistps
out
ud0
outsl
lahf
pop
scas
dec
mov
and
stos
cmp
push
sar
push
sub
ss
mov
adc
gs
es
sbb
enter
cmp
sbb
inc
filds
mov
test
add
and
out
iret
mov
rcrl
dec
lahf
out
mov
stos
sub
pop
inc
dec
mov
jl
out
pop
leave
xor
std
and
pop
and
pusha
cmp
inc
sbb
fwait
mov
add
and
sub
mov
inc
data16
jecxz
stos
movsl
pushl
jmp
lcall
shll
adc
test
xchg
das
pop
dec
and
enter
sub
addr16
push
imul
outsb
inc
mov
inc
xlat
cmc
and
pushf
rorb
loop
aam
rcrl
push
test
push
mov
mov
in
hlt
jge
and
and
test
pop
daa
imul
sahf
nop
sub
shll
cmpb
movsl
insb
xor
je
jmp
sahf
js
out
in
adc
add
scas
dec
cld
push
push
pop
movsl
sbb
into
jge
in
lea
outsb
cmpsb
lods
inc
cmp
aas
ret
sub
push
divb
adc
out
pop
es
xchg
inc
jmp
fiaddl
out
jmp
adc
mov
pop
mov
jle
lret
mov
dec
and
cwtl
test
scas
outsb
pop
inc
cs
lret
mov
xor
rorb
roll
scas
lods
xchg
ds
push
xchg
inc
xchg
in
shlb
dec
adc
cli
push
and
pop
das
dec
or
lret
movsl
mov
fcom
insb
mov
xlat
cwtl
enter
lods
add
push
lock
mov
lret
pop
mov
es
mov
popl
push
sub
xor
aaa
inc
sub
cmp
movsl
mov
into
sub
push
out
cmp
jg
out
cmp
mov
fcompl
sbb
mov
lea
push
mov
push
iret
cmp
sub
xor
icebp
dec
mov
lds
leave
mov
cmp
pop
sbb
cli
nop
sti
push
cmp
add
xchg
and
fmul
icebp
arpl
not
xor
lahf
pop
lcall
aam
or
and
xor
imul
fcos
cmp
fstpl
add
push
out
dec
jge
jbe
mov
adc
stc
inc
add
out
fcoms
and
sub
popw
push
or
int
addr16
into
mov
inc
jne
shr
sub
out
ret
nop
dec
add
xor
xchg
add
arpl
push
jae
dec
and
sbb
push
adc
sub
adc
inc
xor
popf
outsl
setne
xchg
xor
jae
mov
insl
movsb
adcb
and
push
dec
repz
loopne
leavew
add
inc
push
lods
mov
in
mov
lods
push
ds
cmc
dec
pop
aas
fiaddl
mov
adc
and
lret
cltd
adc
dec
xor
cmpsb
shlb
aad
cmp
mov
xchg
mov
ret
fstl
cs
push
jns
int3
dec
stc
aad
xor
push
add
mov
xchg
xchg
cmp
rep
mov
mov
rcrl
adc
adc
dec
mov
ret
out
fsubl
in
std
les
push
stos
cltd
lret
add
push
adc
pop
rolb
mov
fwait
push
mov
aaa
int3
rcl
lret
rcll
addb
jmp
jne
mov
idivl
and
cmp
dec
sub
jle
mov
inc
xchg
mov
jl
nop
add
cmp
rorl
cmp
sub
mov
into
mov
fdivr
jle
loop
out
cwtl
pop
pop
pop
dec
mov
dec
and
repz
adc
bound
std
xor
aas
cmpl
or
ljmp
sti
lods
mov
fcmove
push
shr
ljmp
or
xor
pop
imul
test
outsb
cmp
ret
mov
mov
or
clc
push
jne
test
loope
jg
insl
cld
repnz
lods
inc
jns
lret
lahf
inc
loopne
cmp
decb
leave
call
sub
lahf
lock
gs
cwtl
mov
scas
loopne
sbb
testb
mov
cmp
or
mov
cmp
pop
dec
sahf
cmp
jo
or
insl
jns
in
call
sbb
mov
pop
popf
mov
addb
pop
inc
testb
mov
cltd
xlat
outsb
xchg
std
mov
addl
mov
adc
or
jge
in
xchg
cmp
jb
cmp
xor
adcl
or
add
dec
int3
cmp
mov
ret
push
and
push
daa
push
aam
mov
inc
sbb
mov
ficoml
cmp
jne
inc
cmpsb
std
pushf
xchg
and
pop
nop
mov
ficoms
and
test
push
xor
xchg
jbe
insb
or
inc
std
sti
clc
mov
inc
sub
dec
push
sbb
mov
add
mov
adc
inc
dec
pushl
scas
fwait
and
pop
faddl
pusha
mov
fwait
and
push
stos
lcall
pop
addr16
jl
xor
cltd
or
mov
call
out
xchg
out
packuswb
fwait
adc
daa
es
and
cld
in
ljmp
sub
dec
push
sub
or
sbb
add
xchg
mov
es
test
repnz
fildl
xor
jb
add
push
ffreep
push
push
mov
or
pop
aas
lock
or
mov
mov
sbb
mov
jl
rcll
xchg
mov
pusha
mov
or
scas
mov
inc
adc
mov
adc
inc
cmp
loopne
xchg
dec
xchg
inc
in
in
int3
sub
leave
adc
cs
xor
pusha
jo
or
cmp
inc
fs
adc
daa
das
xchg
mov
dec
addr16
xlat
lahf
popf
pop
lock
mov
cmp
mov
or
clc
mov
push
ss
xor
add
aaa
mov
int3
fisubrl
push
add
push
dec
leave
jmp
enter
inc
mov
push
addl
push
cltd
shl
fisttpl
ucomiss
pop
std
jmp
test
fildll
jmp
lds
inc
les
xchg
bound
cmpsl
and
pop
les
out
jmp
mov
ljmp
jp
mov
pusha
jmp
out
imul
subb
sarl
jo
fwait
pushf
outsl
push
push
push
lods
jb
sar
fisttpl
mov
jp
push
xchg
inc
mov
sbbl
psraw
insb
leave
mov
add
ret
cld
jmp
iret
cs
push
xor
sbb
or
push
cltd
repz
mov
imul
add
outsb
push
inc
mov
mov
cmp
ret
mov
xor
jecxz
aam
adc
xlat
dec
imull
xor
test
adc
jo
mov
dec
or
rol
das
sahf
add
cmp
dec
loopne
xchg
mov
dec
ljmp
xchg
mov
xchg
dec
sub
jnp
pop
mov
add
mov
lods
rclb
mov
stos
jmp
decb
leave
fmuls
pop
pop
pushf
and
push
pop
sbb
outsb
arpl
push
stos
or
into
hlt
push
dec
sbb
negl
js
adc
cmc
xor
xchg
cmp
cmpsl
pop
mov
aad
or
test
xor
and
push
lret
sub
mov
sub
mov
mov
xchg
loopne
or
orl
sbb
bound
xor
pop
je
mov
xchg
xchg
or
mov
add
xchg
add
and
aas
mul
adc
aad
inc
xor
sti
and
pop
or
push
sbb
test
push
jmp
lea
or
jl
mov
dec
and
cli
dec
mov
cmc
pop
adc
xor
int3
movsl
loop
rorb
push
stos
mov
mov
jmp
xchg
repnz
fmull
mov
mov
push
add
xchg
pop
es
lods
dec
adc
jmp
cwtl
xorb
les
ljmp
inc
or
out
xor
and
sub
xor
sub
pop
shll
xor
mov
fs
lock
test
in
cmc
int3
jge
mov
daa
fsubrs
cmovl
dec
pop
fmull
movsb
add
aad
mov
scas
in
pop
push
xchg
rol
and
lock
jg
xchg
aad
sbb
das
adc
int3
mov
pushf
xorl
ja,pt
inc
in
sbb
push
stos
dec
outsb
jmp
std
mov
insb
ret
xor
daa
test
xor
push
aad
sub
negb
mov
jnp
pop
jne
fcoml
insl
or
int3
dec
enter
insl
inc
jns
shl
scas
in
xor
sbb
pop
mov
jmp
cli
pop
add
inc
xor
sub
add
out
jmp
les
mov
stos
scas
nop
popf
std
jb
add
push
mov
jg
movsb
cmp
outsb
xor
sub
jns
sbbb
lods
es
or
jmp
xchg
mov
pop
xor
out
jp
imul
imul
and
inc
pop
pusha
les
jmp
addb
out
push
dec
cs
fdivs
outsb
call
mov
ljmp
out
push
pop
aas
dec
int3
mov
scas
imul
lea
and
dec
inc
imul
or
pushf
fdivl
repnz
mov
lret
test
or
mov
ret
adc
ror
adc
sahf
call
int
aaa
inc
push
test
mov
sub
push
fucomp
cltd
popa
pop
pop
rcl
jns
movsl
mov
repnz
scas
mov
sub
dec
xor
aad
fcoms
inc
fcmovbe
pop
js
add
imul
mov
out
fdivp
or
inc
faddl
out
testl
leave
cmp
adc
popf
xchg
jo
fs
icebp
jb
sub
inc
and
adc
sub
xor
int3
xchg
rolb
aas
pop
cmp
jge
inc
dec
lods
mov
adc
mov
push
rorw
inc
pop
lods
fs
in
mov
cmpsb
je,pn
stc
and
mov
mov
cmp
xchg
incb
inc
mov
insl
cmp
mov
fstp
jnp
jne
sub
fdivrp
mulb
dec
xor
inc
push
loope
int
sub
bswap
mov
pop
fs
fmuls
ret
hlt
sbb
clc
sarl
rclb
pop
arpl
je
or
push
call
cmp
fwait
jne
mov
test
repnz
scas
cmp
mov
jmp
dec
scas
cmp
xchg
cmpsb
jne
xchg
and
dec
mov
add
jg
mov
sarl
lods
bound
lcall
pop
inc
fists
cmp
cmpsb
nop
lods
outsl
orl
adc
movsb
jecxz
xchg
incb
shrl
scas
pop
and
ljmp
test
insl
cld
dec
jbe
sub
or
outsl
adc
mov
stos
sarb
jbe
fmuls
ss
push
inc
inc
lock
add
out
and
dec
adc
inc
fistps
cmp
inc
movsl
test
or
mov
fstpl
cld
mov
and
scas
cmpb
hlt
xchg
test
xor
adc
shlb
mov
pop
dec
mov
fsts
sub
lret
ret
aas
mov
push
in
loope
dec
or
sub
dec
inc
addl
adc
dec
scas
or
lret
pop
xchg
mov
push
or
mov
test
in
sub
lea
add
fsubp
cmp
scas
pop
add
push
addl
mul
inc
jbe
arpl
xlat
sub
mov
sbb
arpl
shrl
scas
sub
sub
and
movsl
jecxz
mov
rcll
sbbl
adc
xor
out
sub
adc
mov
test
mov
sahf
iret
je
pop
in
call
or
mov
and
sub
push
jb
and
fcompl
jmp
ljmp
push
lock
cmp
push
push
push
xchg
adc
mov
jo
lock
int3
arpl
or
jg
outsl
push
hlt
mov
loope
je
rcl
loope
cli
std
jnp
jle
mov
mov
push
repz
pop
and
mov
cmpsl
pop
test
repnz
and
jmp
nop
pop
fidivl
or
leave
or
cmp
add
ficoms
das
mov
fsubrs
hlt
dec
pop
pop
rorl
or
mov
jecxz
adc
cmp
jge
mov
movsl
imul
stos
lock
push
cmp
sub
xchg
jae
imul
cwtl
imul
rorl
add
test
icebp
inc
cmp
pop
xchg
popf
cmpsb
mov
inc
adc
cld
adcl
addr16
mov
mov
ret
out
mov
mov
mov
sub
mov
adc
cli
cld
and
cli
push
mov
out
lods
sbb
or
es
das
into
mov
pop
mov
sub
repz
sbb
mov
pushf
and
push
cmpsb
test
adc
pop
mov
xchg
enter
jb
pushf
pusha
loopne
cmp
dec
xor
xor
cmp
or
and
pop
jae
push
es
adc
pop
jae
out
push
out
outsb
rclb
pushf
popa
cmp
insb
cld
sahf
hlt
and
jmp
mov
gs
inc
inc
int
ja
mov
adc
shlb
and
lock
push
jle
jae
lret
pop
scas
push
rcll
imul
mov
sbb
je
xchg
or
xchg
insl
je
lea
add
divl
pop
stos
add
mov
xchg
jo
fnop
push
mov
inc
cli
sbb
scas
mov
in
out
xor
push
push
lahf
test
adc
cmpsb
popl
push
adc
in
repz
cmp
shlb
inc
mov
cmpsl
jb
sti
jp
popa
mov
mov
imul
xchg
and
push
jns
cmc
stos
fmull
adc
mov
lock
loop
ret
shrl
mov
test
jecxz
cmp
jmp
adc
lods
outsb
cmp
pop
lods
jo
sub
dec
mov
mov
cmp
ficoms
dec
jl
add
sahf
int3
jmp
pop
rclb
ja
mov
inc
push
jo
adc
fsub
insl
ret
out
push
aaa
and
ret
add
sbb
xchg
test
jo
rolb
js
dec
mov
lret
jge
jge
out
xchg
inc
and
jl
xchg
inc
sub
cmp
movb
fs
xor
add
sub
sti
fidivs
shll
shrd
mov
bound
cmp
add
push
nop
repnz
pop
dec
lds
stc
mov
sbb
pop
movsb
inc
pop
inc
fistpll
or
int3
rorb
in
cltd
push
addb
das
adc
push
xchg
dec
mov
adc
xchg
or
popa
inc
lret
and
or
out
sbb
dec
mov
aam
and
xchg
pusha
aad
dec
xchg
frstor
xchg
mov
mov
xchg
fcomip
pop
in
push
xor
les
ss
jae
dec
adc
hlt
notb
les
push
cmp
sbb
pop
lret
hlt
repnz
inc
dec
scas
gs
sbb
adc
cmp
cmp
pop
fdivrp
dec
cltd
pop
imul
sub
push
dec
inc
fistpll
popa
xchg
lahf
sbb
jge
mov
xchg
push
add
push
ja
outsb
sub
push
mov
lds
jbe
inc
js
sub
test
xchg
mov
std
jns
or
scas
lds
dec
pop
std
insb
mov
pop
stc
cwtl
or
jg
lods
rcl
out
or
jl
jp
mov
call
mov
inc
mov
add
dec
mov
mov
sbb
rcll
jmp
mov
dec
push
mov
fidivl
mov
and
mov
push
js
loopne
or
imul
gs
and
roll
subb
enter
sbb
movsl
aad
cmp
push
xlat
daa
aad
cmc
out
je
xor
lret
pop
shll
fmull
inc
arpl
addr16
outsl
jg
stos
insb
pushf
pushf
out
clc
clc
sbb
fbstp
xor
xor
rcrb
cld
cmp
insl
add
shlb
insl
sbb
sarb
dec
jecxz
nop
mov
xor
sub
sbbb
and
int
inc
mov
sub
mov
adc
out
pop
gs
or
insb
les
xor
inc
leave
mov
icebp
into
out
scas
mov
xchg
or
and
adc
arpl
test
mov
js
dec
and
mov
imul
insb
mov
ljmp
shlb
mov
cmp
mov
lcall
adc
sbbl
or
cmp
pop
mov
pop
scas
xor
cmp
daa
leave
lahf
bound
into
leave
cmp
mov
stc
sbb
mov
and
sbb
sub
xchg
pop
ja
sub
out
or
dec
dec
add
in
inc
sbbb
imul
jns
or
out
leave
xchg
adc
push
add
dec
mov
jbe
in
outsl
divb
stc
mov
dec
enter
arpl
test
rcr
mov
sbb
xchg
ja
xor
mov
pop
in
repz
dec
mov
cmp
ret
fs
arpl
clc
inc
js
xchg
popa
int3
es
adc
sub
ficomps
insb
add
sarb
sbb
les
inc
daa
rcrl
xchg
lea
hlt
jnp
jg
mov
or
push
push
loop
js
loopne
sarb
xor
dec
sub
xlat
repnz
sbb
into
outsl
jg
jecxz
lods
sbb
clc
lods
dec
mov
mov
jo
jecxz
mov
jl
cmp
popa
mov
dec
testl
and
aas
jb
mov
xchg
stc
hlt
xchg
dec
cmp
mov
mov
xchg
sub
push
push
jmp
int
fmuls
sbb
push
dec
clc
xchg
out
xchg
loopne
mov
pop
mov
lcall
ljmp
sahf
out
icebp
test
test
movsl
jle
sahf
fnsave
inc
adc
cmc
pusha
push
inc
mov
addr16
pop
push
enter
or
cmp
jmp
jb
fwait
rorl
in
inc
and
cmp
repz
xchg
mov
jbe
or
movsl
xor
pusha
jl
and
leave
repnz
dec
mov
mov
add
inc
sbb
xor
adc
mov
mov
or
pushf
jb
dec
dec
fstpl
fucomip
shl
inc
pop
sub
pop
loop
mov
lds
sarl
imul
push
ss
ffree
mov
cmp
cmpsl
out
mov
sub
mov
into
sub
xchg
test
orl
pop
mov
jbe
mov
lds
rol
cltd
cmpsb
push
insl
sub
sub
mov
lock
fdivp
pop
dec
aad
ja
adc
cmp
dec
dec
notl
pop
adc
push
aam
cmp
sbb
xchg
jl
xor
dec
pop
jno
add
dec
dec
push
shld
scas
pop
mov
lahf
pop
push
scas
sub
sbb
inc
adc
outsl
fwait
sub
lods
pop
add
icebp
mov
lods
imulb
adc
mov
push
imul
mov
sbb
mov
das
jb
inc
pop
push
inc
sub
sti
ljmp
pop
ja
cmp
sub
aad
pop
pop
aaa
xchg
fnstsw
add
daa
push
enter
xchg
icebp
andb
mov
frstor
jns
ret
sbb
mov
pop
popa
jbe
add
stc
sbb
jnp
cwtl
fadd
leave
add
loop
jo
pop
mov
inc
stos
or
jns
scas
orb
aaa
in
pop
sub
push
push
rolb
xchg
loopne
pop
xor
mov
pop
and
push
dec
cmp
inc
in
scas
inc
xorb
je
mov
push
push
mov
shl
movb
add
mov
jns
or
adc
sti
sti
popa
mov
jb
pusha
roll
rcrb
sub
pop
into
push
hlt
icebp
inc
mov
movsb
mov
pop
xchg
inc
push
sub
push
fadds
pushf
xor
fldl
les
call
ja
and
fdiv
icebp
test
js
cld
cmp
mov
loope
cmp
xchg
je
ret
add
sbb
xchg
mov
int3
mov
shll
xchg
insb
adc
imul
inc
test
or
sub
repz
dec
xchg
fiadds
xchg
inc
rorl
or
mov
ja
inc
pop
xor
inc
stc
scas
mov
scas
imul
aas
push
fcmovb
and
and
push
xchg
adc
mov
cmp
mov
dec
lcall
xor
pop
jne
test
cmpsb
xorl
ss
and
decl
sub
inc
jb
adc
leave
popa
adc
cmp
lock
jecxz
dec
cmp
js
xor
mov
fcmove
out
pop
lock
mov
icebp
sub
lock
std
cltd
test
pusha
dec
hlt
es
dec
dec
aad
cmp
adc
jb
and
lods
push
jge
iret
adc
push
mov
ja
lods
cmpsb
aaa
scas
and
lcall
lea
jle
jmp
xchg
mov
cmpsl
mov
icebp
enter
test
test
mov
push
adc
mov
jg
pxor
fildll
iret
aas
aas
iret
das
fistps
out
ud0
outsl
lahf
pop
scas
dec
mov
lahf
outsl
jg
pxor
fildll
iret
aas
aas
iret
das
fistps
out
ud0
outsl
lahf
pop
scas
dec
mov
lahf
out
jg
pxor
aas
dec
das
fistps
out
ud0
outsl
lahf
pop
scas
dec
mov
lahf
outsl
jg
pxor
fildll
iret
aas
aas
iret
das
jne
out
js
mov
int3
int3
int3
int3
push
mov
push
push
lea
push
push
call
call
movzbl
push
pop
cmp
sbb
and
add
cmpl
mov
mov
je
cmp
je
push
call
mov
mov
xor
push
call
mov
mov
mov
call
xor
push
mov
mov
mov
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
test
jne
mov
not
mov
or
mov
mov
movzbl
movzbl
sub
je
incl
jmp
pop
leave
ret
mov
cmpsl
ret
xchg
mov
in
mov
push
and
pusha
ja
add
inc
and
repnz
notl
mov
pop
push
pop
bound
data16
xor
mov
cmpsl
ret
xchg
testl
add
addr16
bound
push
adc
adc
cs
rol
stos
xchg
xchg
imul
sub
arpl
sbb
stc
in
ds
pop
subl
push
negl
out
sub
das
sub
clc
bound
xchg
addr16
add
push
outsl
dec
sub
into
xchg
cwtl
dec
mov
xor
jbe
in
add
int3
inc
and
repnz
mov
inc
mov
pop
movl
clc
popf
daa
inc
addr16
scas
mov
and
adc
jle
loop
mov
lcall
fisttpll
bnd
fsubrl
xlat
das
jo
bound
insl
jb
inc
xor
nop
int
xor
aad
loop
clc
notl
mov
pop
imul
ja
addr16
shlb
shl
les
iret
inc
cmp
fs
inc
or
xor
aaa
dec
shrl
out
loope
mov
or
sub
push
pop
and
pop
sub
cmpsl
rcll
out
xlat
mov
mov
pop
jb
bound
add
inc
and
repnz
notl
mov
pop
jb
bound
add
inc
and
sar
icebp
daa
scas
adc
dec
test
hlt
xchg
dec
fsubrs
std
mov
pop
lret
sarb
add
mov
mov
jmp
adc
push
mov
loop
clc
lods
mov
fisubl
inc
in
jb
inc
negl
jecxz
movsb
fs
xchg
fcoms
sub
rorl
andl
lds
xchg
inc
xor
pop
data16
mov
jmp
push
mov
add
inc
in
jne
int3
enter
loop
mov
ss
in
mov
sbb
mov
jmp
jle
or
sbb
insl
testl
fistpll
xor
pop
int3
or
xchg
es
mov
in
mov
mov
mov
mov
shl
cmc
push
into
sti
pusha
cmp
das
jnp
cmpsl
fiadds
mov
mov
pop
cmc
xchg
push
out
pushf
insl
xchg
mov
in
cmp
andb
jne
jecxz
push
push
dec
inc
ljmp
std
cltd
cmp
push
xchg
jne
mov
movsl
mov
mov
sahf
inc
daa
fbld
inc
mov
pushf
daa
mov
int3
pop
mov
mov
stos
fisttps
mov
cmp
addl
pop
pop
push
mov
mov
lret
add
pushf
jge
pusha
rcll
xor
repz
xor
iret
mov
aas
aam
and
stos
xlat
adc
sub
lock
jg
xchg
jge
data16
mov
das
adc
jle
sbb
inc
pop
in
cltd
add
cmp
sbb
gs
add
sbb
push
mov
cmc
mov
cli
pop
mov
xor
dec
inc
jg
jne
movsb
lods
idivb
xchg
xor
xchg
pop
loope
sub
cmp
pop
fidivrl
jb
xchg
adc
and
cmp
push
repnz
arpl
je
rol
loopne
pop
xchg
push
out
mov
fs
es
jp
pushf
enter
jae
mov
xor
pop
mov
sub
cltd
mov
mov
into
scas
push
jmp
sub
sbb
cmc
xor
enter
bound
mov
mov
and
cwtl
dec
daa
xor
mov
xchg
into
adc
xchg
nop
mov
push
push
mov
fists
fnstcw
scas
roll
adc
adc
mov
arpl
inc
scas
push
cli
aas
fmull
loop
pop
inc
lods
in
pop
int
insb
push
xor
cld
aaa
xor
add
inc
or
xor
cltd
mov
shrl
roll
push
enter
and
pop
mov
sbb
lods
lcall
jp
cmp
je
pop
out
sahf
lock
cmp
lret
pop
jnp
mov
sub
or
in
ficompl
pop
push
int3
repnz
out
mov
mov
icebp
xor
lret
fdivs
mov
out
es
fldenv
xor
push
mov
sbb
pop
daa
cmpsl
push
stos
sbb
or
sub
stc
or
lret
sub
sarb
add
cmp
push
jne
sub
idivb
mov
mov
dec
cmp
mov
sbb
in
inc
addl
jnp
int
xchg
test
inc
fcompl
into
cli
and
xchg
mulb
mov
test
cmc
testl
sbb
fidivs
scas
data16
dec
int
std
mov
pop
stos
in
dec
enter
enter
mov
ja
ljmp
imul
add
add
cmp
or
aas
movsl
adc
incl
notb
aad
mov
jg
push
pop
sub
or
adc
bnd
adc
push
or
sbb
push
imull
and
int
mov
add
jae
jecxz
xchg
jle
inc
repz
mov
jbe,pt
sbb
in
cmp
jecxz
jo
rcrl
sbb
push
es
adc
jl
outsl
cmp
pop
or
fisttps
sbb
jnp
imul
fstpl
add
enter
leave
mov
lock
add
jno
jecxz
pop
push
cmpsl
sub
xor
xlat
xchg
push
sub
cs
inc
mov
mov
mov
stc
mov
cmpsl
add
push
mov
data16
insb
mov
es
jmp
ret
sahf
push
lret
mov
mov
idiv
movsl
xchg
inc
mov
aad
add
mov
add
xchg
pop
mov
fnstenv
or
pop
imul
pop
mov
clc
sarb
jle
lock
test
cmp
rorl
add
data16
out
xchg
aam
int3
inc
push
cwtl
fmul
lock
push
or
mov
xchg
sbb
fistl
aaa
fwait
je
fs
mov
std
loopne
arpl
rcrb
in
sub
arpl
add
add
je
into
xchg
mov
popf
adc
in
lret
and
popf
les
mov
test
stos
mov
dec
xor
int
imul
push
inc
push
sub
mov
xor
out
popa
fnstenv
xchg
into
or
jnp
scas
outsb
mov
std
out
mov
push
sub
iret
or
sub
lods
mov
or
mov
and
sahf
pop
gs
sub
icebp
cmp
xchg
sub
jge
mov
pop
inc
repnz
pop
addr16
push
ss
lcall
mov
call
mov
push
ret
jae
sub
js
jl
pop
push
dec
gs
scas
rep
stos
xor
call
cwtl
addr16
rol
jle
mov
add
add
mov
pop
cmp
aas
add
sahf
fists
sub
dec
jp
jns
jg
ljmp
out
mov
adc
mov
jg
insl
sub
adc
xchg
sbb
das
mov
shll
pushl
sbb
js
mov
jecxz
add
sub
dec
mov
ret
insb
stos
in
mov
fstps
fwait
ss
and
in
fld
inc
fwait
fs
les
in
add
sub
cmp
dec
jae
pusha
dec
xor
fadd
adc
mov
fdivs
pop
adc
jl
int3
aaa
movsb
aaa
xor
push
fldenv
fbstp
push
es
jbe
test
jb
rcrl
jnp
adc
fdivrl
pop
movsl
lret
popa
hlt
jae
jle
cmp
outsb
add
jle
mov
loope
push
or
push
cli
or
lcall
fisubs
sub
test
sbb
push
pcmpgtb
repz
jne
jecxz
ret
in
js
sub
hlt
sbb
add
aaa
xchg
shll
push
dec
mov
gs
insb
pop
daa
es
pop
add
lds
subl
push
popa
lds
jg
les
popa
add
and
inc
jo
test
dec
and
mov
fnstcw
mov
dec
and
cld
dec
mov
ret
out
mov
mov
jp
sahf
push
pop
push
loop
fsubrl
or
dec
mov
pop
lret
call
aas
imul
roll
cmpsb
hlt
mov
jg
xchg
divl
leave
and
jo
fisttpl
push
scas
popf
push
cmp
pop
pop
sbb
push
lret
adc
jge
adc
add
cmp
pop
pusha
in
push
pop
dec
and
test
movsb
pop
inc
roll
jne
fisttps
pop
lods
jmp
push
fists
mov
ljmp
pop
push
repz
inc
call
fstp
jecxz
add
fldenv
pxor
scas
fstpl
mov
leave
or
jae
sbb
iret
stos
pop
or
and
popa
jle
jnp
out
mov
jl
jnp
xchg
ss
sbb
lcall
push
subb
bound
pop
in
jns
xchg
cwtl
lahf
pop
jno
jnp
mov
lods
cwtl
insb
push
ja
bound
xchg
in
dec
aam
ret
pusha
or
pop
loopne
repz
fadd
bound
lds
mov
mov
daa
popf
nop
pop
popf
in
cli
into
test
xchg
les
mov
add
aas
out
cmp
mov
inc
adc
xorb
push
mov
insl
lret
shr
mov
adc
push
dec
leave
or
mov
sub
pop
sub
sub
or
and
iret
xchg
pop
insl
addb
pop
inc
lock
adc
xor
outsl
icebp
mov
jns
lret
inc
and
dec
andl
cmpsl
in
xorb
rcll
or
xor
fstps
cmp
insb
mov
rcll
jp
sub
mov
cmp
fchs
int
xor
ret
es
sbb
popa
repz
aas
xchg
outsb
lret
js
jbe
sub
cmp
push
mov
push
sarl
test
fldl
repz
repnz
dec
movsb
xor
rcll
scas
out
insl
jae
inc
imul
inc
adcl
stos
mul
iret
lods
js
ljmp
inc
push
hlt
call
sbb
imul
cltd
lret
pop
jl
inc
lcall
and
outsb
stos
jle
loopne
mov
cli
xor
aaa
push
mov
repz
faddl
repnz
push
inc
sub
decb
sub
sahf
adc
pop
mov
sbb
add
hlt
push
and
lock
dec
xor
sub
roll
xchg
jge
adc
add
int3
sub
nop
fadd
cli
mov
call
insl
cmpsb
jle
xchg
adc
mov
mov
mov
jnp
addr16
fdivs
add
call
add
jp
lahf
pop
mov
pop
push
insb
fisubrl
cmp
fsubrs
cmp
sbb
ss
inc
das
pop
int3
arpl
aad
in
dec
dec
push
ret
loopne
test
jbe
fnsave
ret
mov
jno
jecxz
mov
lahf
jno
or
xchg
fs
imul
lret
pushf
xchg
lods
stos
int3
repnz
int
or
xchg
push
ja
pop
addr16
shlb
paddsb
mov
xor
scas
mov
pop
mov
mov
rorl
cmp
es
jp
cmpsl
nop
jae
fsubs
push
push
sbb
jae
lods
sbb
cmp
jno
jecxz
push
fwait
adc
sub
ss
mov
imul
mov
push
jnp
lret
aam
sub
add
inc
xor
bswap
mov
push
or
add
and
adc
jne
in
test
nop
and
fldenv
sbb
cmp
cmpsb
outsl
rcll
and
inc
sub
jle
sbb
push
sbb
xlat
or
lcall
sub
xor
jns
or
test
push
loope
adc
and
ret
xor
mov
add
hlt
pop
insb
sub
test
mov
iret
fsubrs
or
out
fnstenv
shlb
mov
inc
stc
divl
or
ss
lret
or
push
insb
mov
aas
sarl
cmpsl
or
push
push
ret
into
movsb
adc
cmpsl
lea
mov
jns
es
ret
jbe
push
pop
inc
lods
in
nop
mov
clc
call
mov
scas
js
movsb
insl
or
jle
add
mov
rolw
jmp
sbb
test
popf
jle
rol
fsts
jmp
add
mov
aaa
call
sub
int3
push
or
mov
test
repz
mov
insb
fwait
or
pop
jb
scas
test
mov
xchg
pop
mov
jbe
jno
sub
sahf
cmp
xor
adc
sub
rcll
dec
xchg
jmp
stc
xchg
mov
les
dec
fwait
sub
jb
dec
mov
add
pushf
loop
xorb
out
enter
std
leave
and
mov
fiadds
xchg
inc
cmc
pop
jge
or
inc
jl
mov
sbb
test
lea
xchg
sbb
push
cs
lcall
jle
jae
pop
adc
lret
jb
mov
xlat
ret
stos
pop
mov
pop
cmpsl
jb
enter
je
out
or
sub
mov
popf
cmp
pop
aam
repz
in
mov
jg
sbb
out
in
push
rorl
jbe
mov
imul
pop
mov
adcb
add
lods
push
xor
loop
pop
xor
sbb
pushf
adc
sbb
fnsave
inc
inc
pop
mov
orl
cmp
mov
ja
fwait
les
lret
fcomps
push
xor
cli
xchg
mov
scas
jge
push
xchg
add
xor
leave
adc
and
cmp
or
inc
jmp
push
cli
addr16
inc
loop
xchg
sar
fcom
mov
cmc
inc
lret
pop
stos
bound
mov
lock
clc
mov
mov
in
cmpsb
test
dec
sti
popf
or
inc
cmpsb
xlat
shr
movsl
and
arpl
out
jno
cmp
mov
test
xlat
adc
scas
fdivl
sub
vpcmpeqw
xor
testb
mov
iret
mov
jnp
cmp
gs
cmp
js
mov
dec
fiadds
lods
add
rorb
loopne
popf
jae
iret
inc
std
lret
jae
add
loopne
stc
sub
add
shr
add
xchg
xchg
outsl
fbstp
int
inc
or
scas
stc
inc
mov
jle
loop
cmpsl
cmp
pop
hlt
hlt
loopne
jno
mov
jne
cwtl
xlat
or
cmp
aad
inc
adc
imul
xor
sbb
dec
leave
nop
ror
in
fs
push
lcall
xchg
push
sahf
mov
adcb
mov
inc
jmp
dec
mov
lea
and
packssdw
and
into
data16
ljmp
mov
pop
sub
mov
mov
lea
aam
xchg
cmp
aam
into
cmc
jmp
call
pop
arpl
xor
rol
mov
data16
dec
lret
dec
push
sti
out
adc
xor
insl
mov
jmp
es
js
jl
pop
ret
rol
xlat
ret
imul
lret
fisubrl
jno
repz
xor
adc
sbb
sbbl
xor
adc
xor
mov
aas
cld
jecxz
test
das
ret
or
xchg
je
or
inc
into
cmp
mov
subl
ret
xor
mov
inc
inc
lods
shrb
cmpsl
gs
movzbl
xchg
int
cmc
push
test
xor
pop
xchg
int
sbb
outsl
inc
bound
push
mov
std
dec
xchg
pushf
jo
jmp
outsl
fildl
shlb
mov
test
rclb
xchg
push
fs
mov
std
cs
sti
cli
add
clc
and
je
dec
cmp
cmp
enter
pop
add
stos
add
fcmovb
xchg
push
sbb
adc
insl
add
add
ret
cwtl
movsb
sub
push
adc
push
and
push
mov
pop
lret
insl
push
lcall
dec
adc
xchg
repnz
in
push
sub
lcall
xchg
and
orb
decb
movsl
int3
pop
xchg
fs
scas
xor
sub
push
lcall
inc
rorl
jecxz
pop
push
xor
movsl
ret
into
ret
ss
pop
stos
scas
in
add
add
shrb
outsl
ljmp
je
pop
inc
mov
cmpsl
stc
push
add
cs
jne
or
jecxz
shl
mov
rorb
adc
jg
dec
es
xorb
fbld
mov
mov
aas
aam
mov
xlat
mov
mov
test
cmp
lahf
fisubl
insl
pop
std
shll
or
iret
fsubp
xor
mov
insl
in
push
mov
in
scas
or
cmp
cmp
fisubrl
and
lods
shlb
cltd
outsb
inc
cmpsl
inc
cmp
adc
xchg
push
popa
inc
sub
mov
lods
cmp
cmpsl
inc
cmp
in
loopne
mov
mov
adc
or
xlat
push
mov
jo
aas
push
shll
cmp
or
loopne,pt
dec
cs
mov
mov
fsubr
cwtl
cmp
mov
xchg
push
push
stos
dec
or
jmp
mov
in
pop
fwait
dec
xor
adc
push
push
mov
ja
and
pop
xor
or
dec
and
push
dec
movsl
jno
hlt
in
cmpsl
xchg
sub
popf
fidivrs
push
cli
or
mov
jb
pop
add
pop
xor
pop
jbe
xchg
fs
push
call
lcall
or
add
insl
dec
adc
sbb
cli
gs
jnp
or
inc
addl
test
add
das
adc
jge
scas
push
arpl
xlat
cs
dec
fmulp
ja
in
adc
or
inc
fs
cmc
inc
jmp
pop
jg
cwtl
fwait
rcrl
adc
loop
lds
jne
dec
rcl
test
sub
scas
ret
inc
into
repz
adcb
push
sub
cwtd
and
shl
jl
aaa
aaa
inc
xchg
dec
rcrb
cs
cli
dec
cld
jb
testl
and
push
pop
sub
pop
int3
sbb
out
and
add
cmpsb
shl
jno
inc
pop
pusha
dec
shrb
push
jmp
jmp
sbb
notb
mull
cs
inc
in
daa
push
xor
jge
pop
push
loopne
pop
push
out
in
mov
mov
jnp
sahf
lahf
fnstsw
add
loop
ds
sub
cmpb
outsb
lods
fisubrs
mov
push
xchg
popa
out
stos
in
das
push
dec
movsl
and
mov
mov
fstps
outsl
repnz
in
idivl
popf
lret
pop
dec
adc
mov
loope
mov
lds
mov
in
xchg
std
gs
push
ret
add
scas
adc
cli
cmpl
mov
dec
inc
xchg
daa
lret
add
sbb
movsb
imul
data16
orl
jne
pop
jmp
push
in
in
adc
aaa
mov
lea
pop
mov
mov
sbb
or
cmp
cwtl
sbb
sbb
movl
in
sti
adc
sub
mov
sbb
into
hlt
fs
jg
jp
xor
in
sub
dec
xchg
ret
inc
mov
hlt
jbe
cmp
jmp
rcr
xchg
jb
in
push
jne
push
sub
lret
jmp
sbb
scas
movsb
stc
clc
mov
push
mov
mov
dec
pushf
sbb
loopne
jg
jg
push
jl
dec
scas
aaa
inc
fidivrs
jl
mov
test
sbb
arpl
mov
fldcw
mov
ss
jecxz
adc
data16
mov
stc
add
add
clc
mov
mov
test
add
lods
hlt
fstps
mov
es
jo
jnp
pop
xchg
push
or
pop
iret
mov
xor
adc
jmp
add
out
mov
scas
pop
cmp
inc
or
push
dec
sbb
dec
pop
loop
fsub
or
mov
mov
push
fmuls
xchg
arpl
shll
cmpsl
shrl
mov
lock
aas
sub
and
shrd
push
sub
mov
cmp
std
aas
inc
in
jae
out
in
arpl
clc
cld
gs
repnz
mov
fildll
mov
insb
add
ds
out
mov
jo
lods
sbbb
daa
negl
jnp
aaa
xor
push
movb
test
lret
adc
push
mov
dec
rcll
jle
lcall
flds
push
mov
dec
loope
jmp
pusha
push
xor
add
mov
sub
mov
jle
cld
outsb
cld
push
gs
enter
insl
jne
nop
rcrl
mov
and
xchg
pop
push
xchg
lahf
inc
adcb
addr16
push
xor
push
mov
popf
faddp
stos
adc
add
andb
push
repnz
jl
cmp
outsb
jl
and
js
repz
mov
outsl
in
fnstcw
pop
jae
mov
adc
popf
pop
push
pop
mov
out
mov
test
jg
jnp
fwait
jmp
lret
pop
adc
mov
cmp
ret
sub
sahf
jp
popf
jns
mov
insl
or
lret
test
cmp
dec
loop
faddp
dec
dec
and
mov
scas
jmp
std
xor
mov
inc
add
and
fcomps
lcall
push
mov
in
bound
cmp
cmp
pop
jbe
mov
sarb
jno
fiaddl
fwait
xchg
inc
and
add
lret
sbb
mov
pop
js
jbe
push
in
lcall
adc
jge
adc
pop
fcoml
push
in
lock
pop
pushl
push
imul
add
push
mov
mov
fcomi
pop
jns
in
outsb
xor
iret
dec
dec
aam
enter
daa
adc
xor
daa
adcb
clc
and
push
leave
call
adc
arpl
or
mov
adc
xor
out
mov
xor
xchg
cmp
inc
lds
xor
adc
inc
mov
inc
or
sub
pop
sbb
lock
push
and
ret
lock
ss
sub
sarb
cltd
mov
push
out
adc
fidivs
pop
out
jae
pop
aad
adc
in
lds
jae
shll
push
lods
icebp
out
cmc
outsl
ja
xor
xchg
dec
push
popf
inc
push
add
ret
sbb
in
iret
jl
test
inc
into
push
aad
push
rcll
inc
dec
add
movsl
icebp
push
or
popf
sbb
jecxz
cmc
insl
stc
mov
sbb
jecxz
lahf
daa
out
xchg
xchg
mov
mov
mov
xor
iret
push
xor
dec
xlat
add
add
pop
scas
sub
push
mov
scas
inc
sub
data16
pop
test
jmp
xor
aas
add
call
fwait
dec
lea
adc
cmp
stos
jg
fisubrl
out
add
sti
test
gs
and
pop
rcl
or
sub
xor
push
movsl
daa
mov
jb
addl
and
scas
adc
add
jns
cmp
scas
pop
and
dec
aam
xchg
fiadds
ljmp
fistpll
cwtl
mov
jbe
lcall
pop
pop
jnp
ret
xchg
notl
mov
pop
jb
bound
add
inc
and
repnz
notl
mov
pop
jb
bound
add
inc
and
repnz
notl
mov
pop
jb
arpl
add
inc
and
repnz
notl
inc
mov
mov
lcall
int3
int3
int3
int3
int3
imul
dec
push
pop
push
sub
sbb
mov
xchg
fsub
lods
idivb
insb
ss
dec
push
pop
data16
cmp
or
fs
mov
test
xchg
fsub
rclb
cld
insb
mov
orb
sub
cmp
or
sbb
in
fcmovu
loopne
idivl
mov
movsl
out
addr16
push
xor
in
or
cmp
push
xchg
xchg
lgs
cmp
pop
out
sub
popa
hlt
adc
mov
and
jge
arpl
int
insb
es
es
pop
out
and
mov
out
dec
jno
xchg
push
mov
arpl
dec
pop
jnp
inc
or
mov
mov
in
xchg
dec
imul
xchg
popf
mov
sbb
rcrl
pushw
cmp
adc
mov
xor
mov
mov
pop
mov
jmp
mov
ret
add
pop
pop
std
dec
scas
xchg
leave
arpl
mov
dec
jp
data16
cmp
or
sbb
in
and
pop
int3
mov
xchg
cmc
push
push
js
or
push
push
dec
aaa
dec
xchg
idiv
test
cwtl
fnstenv
or
pop
cmovo
jo
gs
test
lahf
cli
mov
mov
xchg
repz
sub
cmp
add
inc
or
sbb
in
mov
xchg
xchg
fsub
lods
idivb
insb
ss
dec
push
pop
data16
cmp
or
sbb
in
mov
xchg
xchg
fsub
lods
idivb
insb
repnz
mov
sbb
xorl
in
pop
fld
dec
out
leave
xchg
sub
mov
cli
mov
fildll
or
icebp
inc
popa
inc
inc
lods
sub
push
sbb
cmp
mov
push
jae
sub
adc
sar
xchg
jge
xchg
jecxz
lret
mov
shll
rcrl
sub
jbe
pop
jmp
test
imulb
mov
sub
outsb
push
inc
fimull
cmp
hlt
testb
push
in
roll
xor
xor
les
fnstsw
adc
and
fildll
adc
fsts
cmpsb
js
push
paddusb
mov
mov
inc
jecxz
mov
fadd
gs
fcoms
xchg
add
mov
jp
sti
orl
filds
insb
das
mov
orl
popa
add
insl
add
inc
ret
sub
ret
stos
iret
adc
popa
es
xchg
mov
sub
add
loop
xor
add
pop
mov
es
jb
mov
mov
or
xchg
sub
ss
mov
cmpsl
and
outsb
adc
movsl
mov
mov
js
jg
orb
enter
dec
testl
or
push
jecxz
mov
and
dec
pop
shrb
enter
pop
mov
jmp
push
ret
fldt
sub
or
sub
loopne
sub
fisubrl
adc
xor
out
sub
mov
jne
shl
ja
xchg
adc
in
pushf
xchg
insl
jno
and
js
xchg
dec
aam
sub
cmp
sub
fadd
das
pop
jmp
pusha
add
push
call
dec
push
out
dec
or
mov
jg
mov
shll
and
in
xchg
inc
out
mov
mov
fld
sbb
pop
aam
sbb
xor
jbe
arpl
leave
lret
xor
mov
mov
stc
out
fisttps
dec
inc
cld
jnp
pop
pop
xchg
jmp
pop
jo
insl
stos
push
aaa
add
xchg
pop
sahf
neg
std
fisubs
lcall
add
int
xor
pusha
pop
add
data16
insl
or
push
aad
into
stc
cmp
repz
sbb
add
fidivrs
inc
pop
and
mov
int3
cwtl
test
inc
push
ja
scas
mov
push
jo
xor
hlt
push
xchg
nop
mov
dec
aad
stos
pushf
outsb
out
ja
cmp
adc
out
stc
fsubl
int
fs
inc
or
jne
dec
jns
and
jle
cmp
fistl
adc
jl
push
inc
xchg
lods
mov
xchg
lcall
mov
sbb
shl
sbb
adc
stos
sbb
inc
pop
gs
fcoml
sbb
icebp
push
pusha
xchg
sub
adc
cmpsl
fwait
cli
xor
adc
mov
lds
aad
leave
addb
pop
add
add
inc
sahf
inc
jge
jmp
sbb
loop
jb
ftst
cmp
adc
mov
pop
mov
jg
sub
daa
add
jne
into
xor
orb
dec
pop
xchg
adc
jp
outsl
clc
outsb
xor
clc
adc
pop
xchg
and
dec
mov
inc
sti
addr16
daa
cltd
pop
shrb
addb
je
out
push
push
in
mov
push
shll
pop
shlb
cmc
xor
scas
push
inc
fst
xor
jnp
out
jecxz
cmp
sbb
mov
pop
jle
ljmp
cmpsb
pop
or
ss
aam
dec
aad
roll
mov
push
outsb
and
pop
mov
add
ja
mov
popa
ret
lret
movsl
insl
mov
shl
xchg
movb
icebp
inc
cltd
mov
mov
jmp
pop
xchg
mov
inc
movsl
inc
jmp
sbb
dec
sti
js,pn
aam
mov
loope
mov
aad
mov
daa
add
mov
movsb
in
test
in
enter
cwtl
xchg
xchg
dec
ljmp
ds
ret
enter
jle
sbb
jge
push
or
pusha
mov
inc
or
fs
mov
cmp
pop
bound
cmc
out
xchg
jge
stos
xor
ss
ror
xchg
test
rorl
jne
sbb
xchg
hlt
lods
shrb
ljmp
inc
gs
orl
xchg
arpl
data16
cmp
je
xchg
push
push
into
in
fistpl
lea
push
cld
mov
hlt
mov
std
pop
push
inc
jns
mov
mov
xchg
xor
mov
imull
or
jg
adc
mov
es
xchg
jmp
pop
dec
in
in
mov
popa
addr16
fisubl
clc
xor
add
stos
fsubrs
std
pop
inc
fstps
mov
addb
push
test
iret
lcall
mov
pushf
aad
push
sti
mov
lcall
into
fs
or
pushf
pop
xlat
sahf
mov
hlt
jge
mov
mov
mov
push
insl
sbb
adc
sahf
cs
pop
or
cmp
ja
jb
dec
ja
jns
pop
out
dec
lahf
loope
push
jmp
sbb
lods
hlt
cwtl
mov
cmpsl
dec
je
push
jge
add
or
adc
test
iret
push
sbb
mov
or
pop
jmp
addr16
jo
sub
pop
test
hlt
sub
ja
cltd
insb
inc
sub
jg
mov
jbe
loop
or
into
xor
xor
movsb
leave
or
mov
pop
mov
xchg
pop
jne
bound
shlb
jns
add
loopne
out
xchg
xchg
add
pop
push
cmp
test
outsb
pop
faddl
ret
xor
sbb
or
sub
movsb
pop
pop
jae
dec
in
data16
and
sub
cmpl
sub
cmp
cld
sbb
cs
mov
mov
out
stc
sarb
or
cmp
mulb
jns
testb
inc
test
insl
das
outsb
mov
xchg
cld
cmp
mov
repnz
jno
lock
fucomip
sti
xor
push
push
rcrl
loop
enter
test
iret
ja
cmp
sti
js
add
stc
push
sbb
mov
adc
or
dec
jge
int
adc
cmc
xchg
ds
les
je
int
sbb
addr16
es
leave
cmp
xchg
jmp
mov
dec
mov
rcll
mov
push
inc
xchg
and
mov
cli
rolb
mov
icebp
inc
test
int3
es
cli
mov
data16
and
js
push
data16
repnz
outsb
jmp
ds
in
xor
loop
adc
or
insb
jle
lock
ljmp
or
dec
pop
and
cmp
xor
mov
add
je
jo
packuswb
test
ret
adc
mov
ss
ljmp
xor
push
xor
push
jno
jp
and
imulb
aaa
std
mov
inc
lock
xor
popf
ds
ss
sbb
cmp
add
hlt
xlat
mov
movsb
pop
pop
div
dec
cmpsl
cs
inc
lret
cmpsb
call
cmp
jecxz
pop
push
lods
jecxz
int3
xchg
inc
jmp
fdivl
push
mov
outsb
xchg
jmp
repz
sub
adc
mov
inc
sub
dec
sahf
das
lds
int
test
rcl
in
mov
clc
and
shlb
adc
jecxz
mov
cmpsb
cld
inc
adc
mov
rcrl
mov
pusha
pop
and
jecxz
or
dec
stc
mov
iret
push
push
xor
jl
clc
xchg
sub
xchg
int
push
adc
out
and
mov
leave
sbb
es
pop
mov
pushf
adc
xlat
fdivrs
outsb
cmpb
jmp
jo
mov
jo
cmp
push
xchg
push
jg
cmp
inc
mov
pop
sbb
roll
pop
mov
dec
cmp
je
ljmp
fldl
notb
sbb
cmp
mov
add
xor
notb
clc
mov
hlt
scas
inc
pop
ja
in
add
scas
pusha
imul
or
adc
push
push
imul
jg
mov
mov
mov
je
out
sbb
xor
jle
add
in
pop
cli
repnz
push
clc
inc
js
loopne
mov
fidivl
arpl
sub
jo
out
mov
les
fwait
pop
aad
mov
cmp
sbb
mov
sbb
je
inc
insl
imulb
lahf
xchg
adc
jl
mov
bound
push
js
and
xor
daa
push
jmp
sbb
sbb
cmp
js
pop
sbb
dec
ljmp
or
repnz
in
adc
jp
xchg
pop
add
outsb
push
mov
popa
test
cmp
dec
jmp
or
fwait
sub
mov
and
sti
andl
pop
xchg
dec
ljmp
mov
jo
call
icebp
pop
jno
dec
ljmp
testb
xchg
push
cmp
inc
loope
fmul
push
das
lcall
jne
push
in
jae
mov
fsubp
cmp
mov
mov
dec
xor
ret
shl
lret
cmpsb
adc
mov
xor
push
and
mov
scas
bound
mov
add
adc
sti
lahf
aaa
js
loopne
xor
xchg
sahf
cmp
sbbb
enter
sbb
dec
pop
ss
hlt
lret
scas
push
mov
inc
inc
fdivs
mov
cmp
xchg
pop
jae
fwait
cltd
cli
add
jle
repnz
test
mov
nop
push
jmp
jae
shr
xlat
out
sub
pop
cmpsl
fidivs
jbe
leave
push
mov
sub
add
sbb
sbb
xchg
lea
int
dec
and
leave
pop
dec
orl
sub
cmpsb
aad
iret
aad
hlt
sub
pushf
pop
lret
xchg
mov
mov
lret
mov
or
lds
outsb
mov
emms
mov
jnp
mov
or
cmpl
imul
inc
inc
add
test
and
fsubrs
inc
sub
jns
outsb
js
in
push
out
int
jmp
jmp
into
cmp
mov
xchg
bound
or
out
mov
lea
mov
adc
push
sti
sub
imul
sbbb
loop
jne
mov
jle
cmp
cmpsl
xchg
test
lea
in
inc
hlt
mov
outsl
fmulp
and
mov
push
xchg
leave
out
lock
pop
mov
cmpsl
js
push
test
stc
mov
dec
dec
mov
and
daa
lock
xor
fsts
cmovge
fwait
pop
mov
mov
sbb
stc
ret
and
mov
sti
mov
ret
adc
xor
insl
shlb
push
xor
mov
fs
sbb
fisubs
pushl
lods
mov
push
in
push
cmpsb
jnp
xor
dec
mov
leave
sub
fists
mov
xor
hlt
fidivl
jp
hlt
loope
xchg
or
sbb
jns
aad
inc
mov
adc
mov
mov
repz
sbb
mov
jns
mov
cs
cmc
jle
fistpll
scas
mov
inc
push
pop
adc
loopne
shll
dec
hlt
jecxz
ja
mov
adc
or
fsubr
sub
fnstsw
or
jno
jbe
xchg
lret
repz
push
and
idivl
sti
adc
pop
out
adc
adc
dec
addb
add
ljmp
dec
sub
lds
pop
dec
insb
lds
lcall
js
popf
popa
call
mov
pushf
mov
jecxz
stos
jnp
cmp
cli
mov
shlb
sbb
inc
imul
jb
sbb
leave
pop
mov
mov
mov
mov
sbb
pop
xor
xchg
aas
push
inc
mov
xor
scas
lret
dec
jae
daa
sbbb
shl
sub
pusha
jmp
mov
test
shrb
cmp
cmp
in
sbb
test
push
jge,pn
fidivl
stc
and
adc
jb
inc
push
cld
inc
mov
out
repnz
dec
adc
clc
repnz
mov
add
lahf
cli
orl
add
out
pop
sub
ja
daa
cmpsb
loopne
fisttpl
rcrl
dec
push
in
fsubrp
cmpsb
sbb
adc
clc
adc
stc
clc
iret
adc
sub
loope
popa
out
cmpb
arpl
dec
repnz
cmp
pop
gs
movsl
cmp
cmp
mov
mov
aaa
xchg
xchg
add
add
jnp
outsb
ret
push
and
push
inc
mov
jnp
cli
fstps
std
push
loope
montmul
cmpsb
subb
xchg
fcmovnbe
push
sub
or
and
mov
shlb
notb
sub
adc
mov
dec
sbb
pop
mov
xchg
insb
lods
or
shlb
inc
jne
cmpsl
mov
mov
xchg
lods
popa
mov
mov
test
inc
gs
cmp
loope
leave
xchg
lret
nop
fsub
add
mov
iret
jmp
out
push
test
mov
push
jg
sbb
cli
mov
iret
mov
orl
mov
std
xchg
loop
or
movsl
lds
and
lds
pop
loope
leave
mov
pop
push
js
clc
cltd
adc
out
xor
xor
xchg
or
test
jno
scas
and
out
jns
loopne
adc
xchg
das
cmp
mov
add
sti
sbb
cmp
in
lret
adc
sub
mov
cmpsl
xchg
jae
adc
hlt
xchg
fs
std
mov
xchg
or
in
fldt
push
sbb
xchg
and
call
dec
mov
aas
push
das
inc
sbb
mov
push
jb
xchg
fs
sarl
cmp
sbb
fsubrl
jecxz
sbb
sub
pop
jl
imul
jne
fldcw
cmp
ss
mov
lods
cmpl
sbb
mov
mov
sub
pop
fs
aam
adc
sti
sub
mov
or
or
dec
or
adc
jns
sub
testb
xor
aaa
push
jae
sub
pusha
mov
mov
rolb
aaa
and
xor
add
sbb
movsl
iret
clc
ss
test
pop
inc
pop
test
pop
push
xchg
es
mov
xor
jne
add
xchg
scas
jbe
dec
lahf
mov
in
push
mov
repz
or
nop
ret
push
xchg
jns
sbb
lea
lret
pop
push
lods
fildll
outsb
mov
leave
lcall
test
xor
cmpb
bound
push
push
out
sub
add
lods
sahf
sbbl
daa
xor
sbb
outsl
mov
adc
mov
push
pop
nop
out
fidivrl
in
cwtl
jge
mov
lods
frstor
cs
mov
scas
es
pop
repz
mov
shlb
loope
cmp
lahf
scas
xor
shufps
in
ffreep
scas
sbbl
mov
fistl
lds
mov
or
jg
dec
add
xor
fcoms
pop
mov
mov
js
mov
mov
ret
jecxz
lcall
xchg
mov
int
xchg
mov
movsb
mov
push
cs
cmp
movsl
inc
push
arpl
xchg
dec
sbb
insb
push
repz
mov
es
sub
mov
ja
pop
dec
xchg
rcrl
testl
and
cmp
dec
pop
xor
repnz
outsb
je
and
loopne
insl
mov
pop
sbb
xor
jno
imul
pop
xor
jp
push
enter
rclb
jbe
lods
xchg
xor
fisubrl
push
loopne
lcall
pop
mov
lods
popf
cmp
jge
punpckhbw
pushf
je
int
inc
ss
sbb
cmp
mov
mov
aam
fwait
int3
das
and
cwtl
cmp
dec
test
lret
repnz
test
inc
cmpsl
fdivrl
sahf
add
or
cwtl
jns
mov
pop
in
dec
sub
ds
mov
ret
push
cmc
xchg
pop
sbb
adc
jnp
adc
push
push
adc
popf
mov
iret
sbb
jl
leave
or
mov
inc
lahf
scas
jg
test
sub
je
sbb
loop
rolb
enter
and
inc
gs
test
cs
push
mov
inc
mov
js
mov
cmp
jae
repnz
fsubr
cmp
pop
mov
and
lods
test
push
add
daa
xorl
mov
addl
lret
mov
add
in
clc
ret
int
mov
push
loope
or
dec
mov
movsb
jge
pop
repnz
xchg
cmp
or
divl
movsl
ss
sbb
xchg
lods
mov
int3
xchg
jl
inc
mov
xchg
mov
aad
cmp
cli
mov
mov
fmul
cmp
push
mov
pop
xchg
inc
sarb
xlat
lock
mov
sub
gs
mov
add
mov
icebp
rcll
orl
xchg
xor
xchg
fistpl
stos
pop
movzbl
xor
sti
mov
push
jmp
xlat
shlb
mov
dec
cs
sbb
add
loop
adc
shll
and
popa
ja
lods
mov
mov
xchg
mov
in
mov
stos
xor
add
dec
sub
sub
xor
dec
sbb
and
cmp
inc
sbb
jnp
outsl
inc
jno
mov
dec
mov
inc
cmp
push
mov
lods
adc
sar
cmc
or
out
xor
push
test
pop
add
mov
and
imul
scas
jl
leave
mov
sbb
xor
mov
inc
std
out
ja
inc
imul
push
xor
jns
bound
mov
data16
sbb
lret
pusha
xchg
iret
cmpsb
rcrb
xchg
or
pushf
add
pop
and
mov
js
dec
sub
test
jae
adc
jae
pushf
ror
or
lret
pop
cmp
and
cltd
xchg
sub
repz
dec
sbb
and
xlat
inc
mov
and
jno
lcall
sbb
jl
pusha
xor
pop
mov
dec
je
ret
sbb
movsb
pop
cmp
xor
dec
loopne
addr16
push
mov
in
inc
dec
or
out
pop
push
sub
cmc
mov
lds
ret
sbb
nop
lcall
lds
mov
cmp
std
jge
aaa
repz
adc
mov
dec
xchg
pop
jle
es
mov
push
pop
dec
sti
sahf
outsl
jg
jnp
xchg
xchg
fldenv
iret
fistl
cbtw
mov
daa
hlt
hlt
repnz
in
and
sbb
and
sbb
sar
out
imul
mov
inc
rol
rclb
mov
mov
sub
lods
addr16
sbb
mov
and
sub
loopnew
xchg
inc
and
outsl
jg
mov
pop
xchg
js
cmp
jne
ret
test
xchg
inc
hlt
jnp
mov
out
cltd
inc
dec
add
dec
push
repnz
aas
repz
xor
imul
dec
lret
add
nop
sti
rolb
add
and
imul
in
adc
push
insl
sbb
and
gs
add
xorl
out
lret
int
jne
test
mov
pop
pop
jno
add
test
cli
testb
xor
insb
into
int
lret
inc
fimuls
jecxz
pop
cmpsb
xor
js
loope
or
adc
xchg
hlt
sub
jb
push
dec
inc
lods
int
inc
orb
mov
or
xchg
rol
fsubl
mov
cmpsl
jecxz
sbb
mov
fs
out
pop
push
shrb
jle
fsubs
cltd
stos
mov
aad
jge
dec
ss
das
push
fiaddl
in
pushf
or
outsl
pushf
xor
test
and
lcall
push
pop
int3
cmp
shl
icebp
sub
xchg
jno
push
pop
adcb
imul
adc
not
movsl
pop
mov
pop
push
sub
adc
daa
sub
dec
dec
inc
mov
test
jge
jne
aam
mov
ret
xchg
inc
dec
sbb
jb
cmpsb
inc
leave
testb
subb
in
pop
insl
dec
and
inc
in
cli
jo
dec
lock
das
inc
mov
add
pop
dec
jnp
imul
test
add
gs
insl
ds
inc
cltd
rcl
pop
or
mov
mov
mov
pop
gs
movl
push
add
add
add
add
loopne
mov
fsubl
leave
les
inc
xor
mov
ljmp
jb
and
pop
test
adc
xchg
sbb
rcr
add
xchg
adc
push
and
adc
pop
sbb
xor
aam
push
rorb
rolb
push
in
pop
ljmp
rorl
adc
xor
or
ds
movsb
jo
sbb
and
or
imul
dec
lods
int
add
mov
cli
mov
xor
les
mov
pusha
in
mov
inc
add
jb
cli
sbb
call
cmc
sub
inc
xor
xchg
xchg
jmp
sub
clc
cwtl
sbb
mov
mov
jmp
nop
adc
clc
out
sub
enter
stos
cltd
pop
not
mov
push
inc
movsb
addr16
mov
js
test
pop
sub
inc
out
dec
push
popa
inc
mov
jae
jle
aam
and
lock
pop
jbe
add
add
jo
or
popa
bound
xor
ss
stos
roll
clc
cld
fimull
pusha
xlat
mov
enter
xor
cltd
addr16
in
jae
jmp
xor
pop
lds
les
data16
cmp
or
sbb
in
mov
xchg
xchg
fsub
lods
idivb
insb
ss
dec
push
pop
data16
cmp
or
sbb
in
mov
xchg
xchg
fsub
lods
idivb
insb
xor
pop
addr16
cmp
or
sbb
in
mov
int3
xchg
fsub
lods
out
mov
ds
sbb
ds
data16
cmp
or
sbb
in
dec
push
sub
xchg
stos
xchg
and
inc
cmp
arpl
int3
int3
int3
int3
jbe
cmp
or
sbb
jae
sete
fldl2t
sbb
cmp
imul
cmp
sbb
insb
jmp
pop
lods
cmpsb
and
dec
sbb
sbb
jnp
dec
fcompl
mov
mov
jne
gs
rorl
lods
sub
insb
ret
es
mov
in
leave
inc
in
jb
and
ss
repz
je
or
add
les
mov
or
or
stos
cltd
orl
ss
es
inc
jae
xchg
out
or
mov
inc
mov
jge
pop
cli
inc
test
arpl
adc
mov
sbb
imull
in
jbe
lret
imul
cwtl
leave
aam
mov
rclb
xor
inc
push
jbe
in
cmp
mov
mov
aad
cltd
icebp
pushf
mov
inc
sbb
int3
push
cmp
inc
jno
adc
arpl
pop
lods
enter
inc
inc
push
jae
popf
out
inc
in
cltd
sub
fcompl
mov
or
dec
leave
inc
shlb
test
hlt
jno
popa
int3
push
lds
test
js
or
adc
fadds
cmp
or
cwtl
jnp
es
shrb
push
negb
jmp
sbb
scas
pop
mov
sbb
fsubrl
imul
jl
dec
leave
pop
fldcw
pushf
sbb
imul
pop
sub
cmp
or
sbb
insb
jmp
pop
fldcw
pushf
sbb
imul
pop
sub
ljmp
inc
bound
repz
add
xorb
fs
fwait
popf
and
shlb
mov
dec
cmp
pop
fldt
push
test
jmp
ret
stc
cld
mov
clc
pop
nop
push
push
test
es
sbb
lret
mov
adc
xchg
nop
push
movsb
or
rcr
popa
sub
aam
js
and
rcrl
mov
sbb
insl
adc
rolb
gs
movsl
sbb
test
iret
mov
ret
pop
xchg
test
fstps
fwait
xor
sbb
iret
rcrl
cmpsb
gs
cmp
out
or
cltd
fistl
lcall
adc
outsb
sub
adc
mov
xchg
sbb
mov
pushf
cmp
mov
dec
lcall
xorb
cmp
inc
dec
cli
adcl
cmc
mov
mov
and
mov
stos
mov
loope
rcrl
cmp
dec
inc
in
scas
ljmp
adc
or
xor
decl
loope
push
jo
mov
cmpb
bound
and
and
cli
das
fildll
and
jne
mov
cwtl
or
sbb
mov
pusha
outsb
mov
push
lock
sti
iret
mov
adc
out
pop
adc
outsb
push
push
mov
addr16
arpl
shl
loop
push
and
push
icebp
jmp
lea
pop
mov
sbb
repz
je
rcll
add
add
js
ljmp
add
loope
push
adc
jae
loope
mov
and
sub
aaa
fsubrs
aas
pushf
addr16
sub
sbb
add
adc
subb
xchg
bnd
scas
ret
xor
daa
push
inc
mov
push
lods
icebp
adc
insb
pop
mov
orl
dec
mov
mulb
jmp
or
es
pop
xchg
inc
fs
cltd
cmpsb
lcall
or
aad
imul
and
lods
data16
cs
xor
call
jns
aad
repnz
dec
fisttpl
inc
mov
movsl
lcall
jbe
mov
sbb
fs
stc
ds
pop
push
adc
negl
sahf
sub
push
pop
into
xor
jns
inc
std
out
jle
in
adc
push
pop
xlat
movsl
lret
fld
adc
sub
sbb
mov
jg
das
pop
sub
jp
lahf
adc
xor
sti
mov
cmp
into
mov
loopne
mov
jb
dec
or
je
sbb
ljmp
push
push
stos
dec
cmp
xchg
or
cli
pop
insl
inc
mul
addr16
inc
jg
mov
inc
sbb
dec
mov
dec
cmp
cmpsb
lods
shll
in
and
mov
xchg
notb
hlt
pop
push
mov
xor
xchg
loopne
cli
dec
outsl
scas
subl
in
push
jb
ret
and
jge
pushf
add
es
fadds
sahf
xchg
andl
cs
mov
cmp
mov
or
dec
jbe
push
cli
mov
and
push
pushf
jmp
fistps
pop
popf
pop
adc
ret
imul
add
insl
loopne
test
adc
fwait
jbe
mov
int3
in
ljmp
in
insl
in
xchg
aad
add
add
in
mov
mov
or
lods
sub
and
adc
push
jb
insb
or
sbb
add
dec
in
xor
scas
inc
mov
add
xchg
leave
pop
lcall
mov
loop
mov
mov
sbb
mov
cltd
mov
cwtl
mov
mov
sbb
xchg
sub
and
mov
or
mov
cli
pop
inc
imul
add
insb
xor
clc
int3
pushfw
insb
xchg
bound
sub
mov
out
ficomps
fsubr
push
cmpsl
add
pop
imul
jge
popf
xchg
mov
repz
push
test
sbb
lds
lock
mov
cld
xchg
sahf
repz
popl
pop
aam
sub
sbb
pusha
imul
jbe
mov
mov
leave
mov
in
fcomps
xor
cli
sub
ret
loop
insb
xchg
pop
ret
cmp
clc
out
sub
mov
scas
xchg
cltd
jns
jbe
lods
fisubl
imul
mov
movd
sub
sti
leave
push
jns
mov
sahf
shll
dec
push
js
cli
jnp
sbb
mov
mov
in
or
mov
mov
iret
mov
sbb
add
rclb
mov
pop
mov
std
loope
ljmp
test
xor
repnz
inc
add
pusha
xor
mov
pop
popa
int3
adcb
lret
scas
fdivrl
lea
inc
mov
js
insl
cltd
int
mov
shr
gs
shl
js
cltd
lret
in
mov
popa
adc
rclb
in
jecxz
cmp
popf
ljmp
pop
clc
dec
inc
sbb
faddl
mov
outsb
lret
inc
mov
cmpsl
cld
or
jno
cmp
fs
xlat
iret
loop
push
adcl
subl
repnz
repz
movsb
ja
loop
push
cwtl
mov
mov
pop
xor
sahf
outsl
cmp
cmp
cmp
xchg
popa
js
cmp
ror
out
sbb
lock
push
mov
sub
cmp
sub
lds
les
mov
mov
js
stos
test
pushf
scas
enter
xchg
lods
and
popf
lods
mov
ret
int
cmc
call
mov
mov
enter
icebp
inc
xchg
test
ja
sti
sub
test
add
bound
loope
mov
cmp
mov
push
add
icebp
pusha
out
dec
sbb
int
inc
out
les
pop
mov
xor
lock
leave
insb
mov
outsl
mov
adc
inc
subb
cmc
sub
push
jnp
insl
inc
in
ret
push
iret
and
push
pop
cmpsb
loope
jp
cwtl
ss
mov
adc
lret
xchg
sbb
icebp
sbb
pusha
xchg
icebp
ret
xchg
sbb
insb
xchg
push
sub
out
push
popf
ret
inc
movsl
pop
adc
fstp
xor
popf
push
dec
insl
push
dec
mov
or
mov
mov
cmp
push
idivb
xchg
out
push
sti
imul
out
aaa
hlt
imulb
push
imul
ss
sbbl
adc
jge
mov
xor
mov
mov
ds
push
incb
out
punpckhwd
sti
fcmovu
xchg
mov
lods
mov
lds
nop
xchg
hlt
xchg
and
sbb
or
fidivs
dec
das
outsb
mov
aas
xchg
sbb
iret
mov
fs
adc
jg
test
mov
lret
push
pusha
lods
in
rcl
nop
sub
xor
pushf
lahf
insb
jnp
mov
mov
adc
lods
push
jge
imul
cmpsl
sub
in
imul
push
mov
sahf
lock
sahf
jmp
lea
add
pop
mov
bound
mov
lret
push
push
mov
push
jecxz
adc
icebp
out
and
inc
jl
pop
push
in
jno
jge
sbb
adc
pop
dec
xor
push
dec
xchg
inc
addr16
nop
inc
pop
mov
clc
sub
bound
add
inc
jmp
arpl
in
xor
cli
mov
pop
xchg
cmpsl
xchg
testl
inc
sbb
mov
ret
dec
lock
xor
scas
dec
pop
sbb
push
mov
sbb
mov
out
mov
jle
outsb
sarb
lods
xchg
push
mov
or
jbe
push
inc
jb
lea
pop
ret
repz
sbb
xchg
cld
pop
test
sbb
aaa
loopne
xor
mov
jmp
jb
stos
push
add
and
incb
dec
xchg
sarl
mov
lods
sub
cmp
loop
cltd
aaa
aaa
lods
out
fwait
ja
push
in
and
in
jmp
jno
jecxz
xchg
adc
mov
mov
aam
ljmp
addr16
gs
and
test
or
jmp
insb
popa
mov
loope
xchg
add
push
xor
nop
or
shrl
sahf
jl
jecxz
mov
cmovle
xchg
lret
dec
push
test
lahf
jbe
xchg
fmulp
mov
scas
shl
cld
lods
jnp
xor
in
lahf
xchg
cmp
adc
gs
or
add
mov
push
pop
cwtl
inc
xor
sti
sbb
jne
jo
test
aas
pop
pusha
dec
in
and
es
dec
enter
sbb
stc
xchg
orl
sub
andl
dec
ret
pop
leave
pop
ficoms
inc
adcb
out
mov
add
adc
rorl
xor
push
xchg
and
xor
cmp
and
ss
sub
xchg
lret
in
dec
testl
lahf
pushf
out
add
rcll
xchg
jns
push
jmp
nop
dec
pop
add
out
xchg
test
xor
mov
jb
rcl
ret
mov
insb
lahf
mov
push
and
lods
push
clc
out
push
das
mov
testl
add
mov
fwait
add
pop
xchg
sub
shll
xor
ljmpw
fldl
or
inc
leave
cmpl
jae
add
in
mov
xchg
out
cmpsb
aaa
shr
pushw
push
jb
push
sar
lahf
test
xor
push
add
sub
jae
xor
xchg
fs
mov
inc
jne
push
sbb
mov
test
ret
sub
xchg
xor
push
pushf
inc
jp
sbb
inc
push
push
rorb
aad
fs
loop
mov
iret
pop
inc
js
shll
pop
cmpsb
movsl
jmp
loop
scas
push
push
inc
mov
cld
lea
adc
out
stc
mov
roll
mov
pop
fs
sub
out
add
sub
sarb
mov
cld
cmc
pop
adcb
cmp
stos
je
ror
outsl
push
dec
je
gs
lds
xchg
or
mov
xor
movsl
cmpsl
or
shrb
aaa
lods
stc
mov
movsb
out
dec
lret
xchg
push
or
xchg
add
jae
lods
sbb
movsb
add
sub
push
mov
sub
pop
xor
ja
xor
xchg
cmp
add
nop
jecxz
out
or
clc
add
daa
imul
aam
add
cmp
jmp
sub
insl
aam
and
cld
xchg
xor
insb
sub
cmp
mov
cli
fimuls
call
add
shl
call
stc
sub
xor
and
mov
jae
leave
mov
push
in
fnstcw
xchg
pop
sub
pop
and
xchg
lret
adc
mov
rep
lods
fmuls
lret
push
fildl
je
notb
dec
inc
push
fdivrp
xchg
int
sbb
cltd
pop
jmp
xor
lods
cmp
std
sti
inc
mov
push
xchg
dec
push
pop
adc
in
push
mov
cltd
dec
sub
cmpsl
pop
mov
fildl
int
pop
dec
or
xor
mov
jg
hlt
mov
push
jecxz
adc
cmp
ljmp
mov
aad
pop
addr16
pop
out
iret
sbb
in
in
mov
mov
int3
xchg
push
and
jle
in
cmc
inc
lods
std
pop
cld
aas
xorl
insb
add
jg
xchg
mov
pop
out
fistl
mov
in
inc
fisttps
dec
gs
add
aas
or
icebp
shrl
sub
test
dec
xor
pop
ss
add
scas
lock
test
sti
mov
cmp
pop
inc
shlb
xor
int
add
mov
push
cmp
jecxz
loop
arpl
addr16
lock
aad
cld
stc
mov
sar
xchg
push
inc
dec
out
shl
jno
jl
dec
adc
inc
scas
inc
dec
loop
sbb
push
out
test
mov
xor
add
push
cs
js
jns
dec
stos
pop
imul
gs
jo
sbb
popf
pop
pop
mov
rclb
xchg
lea
fdivr
test
push
lods
xchg
dec
popf
mov
fisubs
loope
and
xchg
add
mov
dec
out
scas
sub
dec
dec
mov
lods
arpl
inc
xorb
mov
add
sub
jg
fdiv
pop
push
push
shll
arpl
les
pop
sub
xchg
stc
inc
loop
jo
xlat
sub
sbb
jecxz
lds
nop
inc
ror
mov
dec
jo
pushf
outsl
in
out
push
jmp
pop
clc
add
xchg
jae
add
inc
shr
sti
adc
cwtl
loopne
jmp
xchg
out
popa
jmp
loope
add
mov
outsl
popa
loope
cmp
jae
cmp
xchg
pop
push
mov
inc
mov
cltd
mov
xor
mov
adc
out
lret
ja
pop
das
or
mov
mov
test
out
sar
mov
std
test
jg
fucomi
adc
or
and
leave
mov
decl
push
bnd
mov
jle
scas
lods
xchg
jb
or
es
les
out
jno
sub
sbb
push
jle
hlt
add
rcr
xlat
cmc
mov
cmp
mov
pop
push
push
xor
jne
mov
cld
int3
imul
gs
hlt
jge
and
addr16
pop
aas
dec
popf
testl
cmp
das
imul
addr16
and
or
rcrb
push
hlt
jmp
pusha
ja
outsb
int
aaa
hlt
or
lret
fcomp
movsb
cmp
lods
sbb
aam
fs
adc
sbb
push
aas
push
mov
push
jbe
push
jecxz
mov
sub
push
dec
inc
out
out
aas
xchg
push
mov
xor
sbb
mov
jno
cmp
adc
adc
das
xchg
mov
add
and
pushf
and
mov
out
xchg
xchg
push
mov
fldcw
jecxz
bound
hlt
sub
xchg
iret
dec
mov
jns
ds
arpl
call
inc
xchg
sub
aaa
pop
nop
imul
arpl
roll
push
pushf
clc
xchg
loopne
test
stos
add
and
pop
pop
inc
dec
mov
and
xor
mov
jle
sbb
loope
aam
jnp
pop
sbb
or
adc
mov
loopne
call
pop
inc
out
push
pop
and
xchg
xor
add
hlt
xchg
insl
mov
daa
jo
add
mov
test
xchg
outsl
pop
inc
pop
pop
cmpsl
das
sbbb
je
lret
inc
push
push
fsts
rol
imulb
dec
es
dec
fxch
add
popa
sbb
jbe
mov
imul
dec
mov
filds
clc
aam
sbb
pop
jo
inc
add
mov
arpl
les
jo
jo
sub
adc
sub
int
fdivrs
or
in
lret
repz
rcll
xchg
and
imul
push
pop
test
aas
pop
rcll
push
fcmovu
sbb
mov
je
std
andb
and
int3
dec
test
inc
or
or
fdivrl
cmp
shlb
rcrl
shll
in
mov
push
adcl
sbb
pop
ret
loopne
mov
xchg
sbb
mov
clc
jle
cltd
sub
inc
test
sub
testl
sub
cwtl
dec
mov
push
mov
iret
push
imul
fcompl
in
jno
stos
cmp
pop
lods
inc
mov
in
test
sub
jns
mov
jmp
jp
cmp
adc
mov
cwtl
sub
shlb
test
adc
dec
jbe
cmp
mov
jo
fisttpl
lahf
jo
cltd
adc
inc
les
and
inc
mov
in
adc
jg
ja
out
xorl
mov
or
cmp
movsb
lahf
rcll
cmp
push
cmp
test
and
popa
test
gs
inc
stc
push
sti
dec
movsb
pop
iret
mov
test
inc
adc
dec
call
out
fcom
jne
fstps
mov
push
cltd
sub
pop
popf
mov
push
loope
sar
outsl
mov
fisubs
and
test
popa
into
je
ja
popa
fs
pop
adc
jle
lds
mov
push
jg
je
fcoml
and
dec
gs
or
dec
xchg
inc
pushf
mov
xor
mov
jbe
repnz
adc
cld
pop
jnp
shll
nop
loopne
cmpsl
repz
or
jae
outsb
jnp
fcompl
inc
scas
sbb
les
sub
sub
test
cmp
lcall
sbb
inc
aad
xchg
pop
loop
mov
add
cmpl
into
loop
sbb
sbb
mov
cmp
sbb
adc
mov
adc
mov
inc
push
popa
div
xor
and
xchg
push
jno
xchg
aas
popa
push
or
mov
and
in
stos
xchg
fcmovne
dec
push
mov
jle
pop
test
fidivrl
and
pop
mov
lret
insb
pop
pop
inc
gs
js
xor
ss
jnp
jge
mov
cs
into
xor
adc
add
pop
and
daa
pop
push
sub
sbb
scas
fcoml
mov
repz
divb
imul
cmp
call
xchg
cmc
lods
cs
aaa
dec
aad
into
cmpl
mov
dec
pop
xchg
push
ds
xchg
icebp
testl
dec
adc
mov
das
adc
cmc
bound
adc
and
mov
xlat
movsl
inc
and
adc
push
cwtl
fs
sbb
pop
rorb
add
scas
cmp
adc
enter
fimuls
je
pop
fucomi
popa
stos
jp
hlt
sbb
mov
test
sub
pop
push
or
test
fldenv
jl
mov
std
jae
stos
lcall
and
pop
fwait
aad
inc
push
cmp
dec
mov
mov
jns
lods
divb
inc
pop
loop
je
jno
cmpsl
cmc
les
addl
sti
xor
pop
push
sar
sbb
pop
and
mov
mov
out
jns
cmp
sub
data16
sbb
jecxz
mov
cmp
das
add
in
cmc
loop
push
and
xchg
aas
adc
mov
fstpt
rorl
popf
push
inc
into
cmp
sbb
and
mov
jle
aas
test
cs
push
xor
and
jl
lret
movsb
iret
out
ret
push
dec
in
pop
notl
mov
js
inc
mov
mov
orb
out
and
mov
pop
sbb
dec
mov
inc
data16
lock
ss
sahf
mov
inc
mov
aam
or
dec
loop
ljmp
jns
mov
outsl
scas
out
test
dec
dec
cli
movsl
rcrb
testl
jns
cmp
into
or
rolb
scas
xor
push
sub
xchg
jne
fxch
movsl
int
xor
dec
sub
in
xor
loope
xor
aaa
lcall
jb
cmp
lods
arpl
pop
loope
sahf
mov
rcll
pusha
mov
je
pop
push
or
cli
fiadds
dec
add
jne
pop
mov
insl
inc
dec
cmp
pop
dec
and
sbb
inc
fs
xor
mov
xor
mov
sub
clc
addr16
movsl
push
aam
idivb
scas
jg
test
and
mov
js
dec
pusha
jae
stos
xor
add
fcompl
pop
cmp
adc
add
mov
sahf
jg
mov
mov
push
pop
mov
daa
inc
ss
or
test
repz
jecxz
pop
push
andb
sahf
push
aam
pop
pop
out
mov
insl
pop
cmp
fcmovne
fldenv
repz
mov
scas
bound
add
inc
call
pusha
xlat
andl
popa
sub
mov
adc
frstor
roll
lcall
and
pop
scas
daa
stos
push
adc
xchg
std
aas
sti
fdivrs
js
aaa
mov
mov
or
mov
test
pop
pushf
cmp
in
lret
and
out
sbb
fdivrl
pop
inc
sahf
setnp
xor
xor
mov
leave
mov
xlat
mov
sarb
in
or
mov
jnp
js
pop
push
mov
jb
sbb
iret
cltd
pop
mov
or
sbb
dec
sbb
clc
leave
je
into
out
in
mov
inc
popa
xchg
cmpsb
lahf
push
icebp
cmp
ret
jno
adc
adc
imul
sarl
push
lods
rcll
push
mov
sbb
movsl
mov
and
lods
adc
fiadds
add
fiadds
test
mov
mov
xlat
mov
leave
outsl
in
jle
js
cmp
inc
into
xchg
xchg
dec
sbb
adc
js
adcb
add
mov
push
into
in
push
hlt
ret
testl
adc
in
mov
pop
fucomip
outsb
out
lock
or
or
dec
jmp
lock
mov
cs
or
sbb
cmp
inc
cmp
fdivrs
mov
jns
sti
sbb
in
incb
pop
sub
push
inc
pop
inc
test
mov
mov
out
add
inc
and
pop
gs
pushf
sub
mov
inc
pop
jb
jmp
arpl
rcr
inc
cmc
dec
sarb
out
and
mov
mov
mov
push
mov
push
jns
jle
ds
inc
faddl
outsb
jle
out
stc
inc
mov
mov
aaa
mov
js
ret
pushf
cmpl
dec
pop
or
aam
or
xor
movsb
shll
imul
mov
mov
aad
or
ljmp
sub
push
dec
inc
or
pop
inc
nop
or
divl
mov
imull
hlt
xchg
testl
leave
mov
mov
test
enter
dec
mov
mov
mov
ret
inc
pop
adc
scas
ficompl
addl
repz
das
lock
xor
mov
aaa
pop
inc
and
lods
mov
insb
jmp
pop
fldcw
pushf
sbb
imul
pop
sub
cmp
or
sbb
insb
jmp
pop
fldcw
pushf
sbb
imul
pop
sub
cmp
or
sbb
insb
jmp
pop
fldcw
pushf
sbb
int3
dec
in
pop
sbb
sbb
insb
jmp
fcompl
push
sub
or
xor
and
int3
int3
int3
int3
int3
push
mov
push
push
call
mov
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
push
push
movl
movl
mov
movl
call
push
mov
call
pop
ret
push
mov
sub
push
pushl
call
mov
pushl
xor
movl
pushl
mov
mov
mov
movl
movl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
sub
push
push
push
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
mov
add
push
pushl
call
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
push
push
push
push
push
call
mov
pushl
pushl
pushl
pushl
pushl
call
push
pushl
call
push
push
push
push
pushl
call
push
push
push
push
pushl
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
mov
sub
movzbl
sub
test
je
movl
movl
movl
andl
jmp
movl
movl
movl
movl
movl
movl
push
call
mov
add
mov
andl
jmp
mov
inc
mov
mov
sub
mov
add
mov
movzwl
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
mov
xor
mov
mov
and
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
mov
pop
pop
pop
leave
ret
