sbb
add
std
jg
insb
xchg
aaa
cli
mov
js
and
adc
out
fs
sbb
mov
adc
or
call
in
add
pop
inc
fsub
out
xchg
push
imulb
sbb
jmp
iret
pop
ficoml
push
mov
pop
or
fisttps
std
cmp
sub
std
mov
mov
inc
pop
daa
jne
dec
ljmp
or
jecxz
stos
jb
jg,pt
sub
mov
push
inc
push
into
add
mov
cmpps
mov
div
xlat
pushf
int3
pop
adc
cld
adc
dec
jb
loopne
movsl
cmp
pop
mov
sbb
jmp
leave
mov
push
roll
push
sub
out
push
dec
enter
inc
add
loope
test
gs
addl
dec
scas
dec
jns
mov
fbstp
daa
dec
rcrb
adc
test
pop
fisubl
jmp
dec
dec
insb
mov
jge
cmp
pop
testb
js
loope
adc
sbb
lret
jno
cli
icebp
data16
and
xorb
enter
xchg
inc
jae
cltd
sub
shll
xchg
dec
sbb
cmc
dec
cs
jne
or
sub
icebp
jmp
sub
add
fwait
cli
ficoms
popf
inc
or
xor
inc
imul
fadds
fcmovb
dec
loopne
call
lods
push
mov
push
pop
icebp
pop
mov
and
inc
gs
out
cwtl
in
mov
and
ret
fs
sbb
test
jg
or
and
push
ret
pop
cmp
out
popa
xor
sar
inc
in
shlb
xchg
pop
ds
loopnew
addr16
mov
js
sub
mov
clc
enter
les
pop
sub
pop
pop
cmp
jnp
fisubrs
js
jo
push
dec
test
int
call
pop
int3
pop
cmp
sub
mov
popa
mov
add
xchg
aaa
pop
or
rorl
mov
or
pop
pop
out
ret
in
lcall
xor
push
pop
cmp
icebp
and
loopne
loop
and
xor
mov
lock
and
fstps
test
aas
ficomps
push
scas
ds
out
push
imulb
push
lea
fwait
or
jg
outsb
stos
rol
jbe
or
fwait
cmp
rolb
aad
inc
loope
mov
jmp
inc
in
add
sbb
inc
pop
pusha
arpl
xorl
adcl
and
cmc
in
adc
dec
sbb
movsl
andb
in
lret
or
outsl
pop
sbbb
mov
cmp
inc
push
push
cmp
cmc
push
mov
xchg
cmpsl
add
push
xchg
mov
mulb
sbb
xchg
inc
and
or
push
xlat
mov
notl
das
outsl
xchg
xacquire
lds
inc
test
jno
es
inc
psllq
ja
ja
outsl
hlt
cmp
lods
push
pop
repz
mov
lcall
xor
test
mov
xchg
dec
sub
leave
push
testl
push
or
mov
popa
sub
jae
cmp
addr16
fucom
and
repz
jge
mov
mov
pushf
cs
inc
jecxz
mov
mov
jb
das
push
pushf
fnsave
adc
lcall
add
movsb
xor
pop
or
xchg
test
dec
xor
aas
mov
push
xchg
sbb
rcrl
jp
jmp
push
and
push
scas
push
xchg
pop
mov
out
pusha
jg
and
testb
xor
loope
sub
push
and
cmp
jbe
icebp
call
lahf
stos
fnstsw
push
repnz
push
jl
sub
aad
and
out
sahf
movb
cmpsl
adc
adc
into
repnz
lret
push
jmp
pop
add
jp
in
aam
and
adc
pop
out
pop
or
mov
adc
lea
ret
mov
jle
dec
xchg
add
stos
push
jnp
or
out
rcrl
add
and
out
jne
xchg
loop
fisttpl
adc
gs
inc
jnp
js
xor
outsb
push
and
andl
xchg
addr16
aaa
push
pop
mov
mov
sbbl
cmp
js
in
enter
push
fwait
mov
add
cmc
lds
fnstsw
xlat
cmp
lds
sti
adc
loopw
int3
enter
lcall
hlt
cmp
push
loopne
inc
pop
cmp
loope
push
sub
lods
fstpl
jb
andl
cltd
std
cmpsb
int
cmp
xor
loop
aaa
out
iret
jl
add
testl
mov
sbb
fidivrl
aas
rolb
test
mov
cmpsb
pop
lods
cwtl
sub
push
movsb
push
lret
movsb
push
lods
lret
jns
xor
sbb
pop
imul
lods
xor
arpl
test
and
xor
sbb
add
jmp
adc
pop
divl
ret
fwait
pushf
cmpsl
outsl
pop
mov
or
stos
jno
popf
fbld
stos
xor
inc
push
jns
nop
subl
lea
pop
dec
lods
jmp
inc
push
jge
inc
idivb
rcrb
fcmovne
pop
inc
pop
mov
xor
rolb
mov
inc
jb
cwtl
add
and
sub
add
in
cmp
sub
shl
mov
mov
dec
popf
mov
out
jl
adc
loopne
adc
stc
sbb
enter
and
push
mov
lea
mov
mov
subl
loop
ror
fidivl
push
mov
cmp
ss
ja
movsb
mov
lea
and
cmpsl
out
fcoms
lcall
push
outsb
call
xor
sbb
sbb
jno
fmulp
les
loope
sub
pop
loopne
mov
into
pop
push
fscale
lods
xchg
shr
jnp
aas
mov
cmp
mov
mov
mov
jns
imul
add
mov
daa
mov
sub
mov
cltd
lea
pop
xchg
and
popf
shll
adc
push
cmp
sbb
loope
and
adc
sbb
enter
adc
js
and
xor
sbb
cmp
push
arpl
jne
lcall
nop
or
subl
test
xlat
xor
or
into
popa
adc
mov
gs
dec
nop
push
cltd
push
subb
push
jb
mov
push
jle
cli
jae
pop
outsb
mov
jg,pn
add
into
les
clc
loope
mov
or
or
push
and
and
ljmp
rorb
test
ret
push
clc
fwait
movsl
cli
roll
jo
clc
mov
rolb
mov
inc
repnz
xor
pop
xchg
pop
repnz
push
xor
adc
imul
or
mov
and
mov
xchg
test
lock
jno
and
add
cwtl
insb
push
fadd
jecxz
jne
mov
ja
jle
mov
pop
or
pop
sahf
sub
in
cmp
stos
lea
add
popf
scas
scas
std
xchg
sbb
adc
jo
xor
stos
pop
das
pushf
and
popa
xor
or
ret
nop
data16
xlat
enterw
dec
test
pop
loop
sarb
enter
xchg
cmp
and
push
xor
jo
pop
cmpsl
xchg
adc
inc
pop
shlb
sub
aam
insb
push
lcall
xchg
add
sbb
jae
dec
mov
mov
cmp
arpl
or
adc
in
inc
push
cmp
cmc
xchg
cld
adc
add
inc
ret
js
imull
push
push
pop
aam
push
mov
cmp
push
scas
xor
dec
xchg
roll
pusha
add
stc
add
xchg
mov
test
and
jge
add
stc
push
mov
adc
sbbl
mov
dec
jbe
add
lods
subb
mov
pop
dec
mov
cmp
sti
xchg
lcall
jns
movsb
lods
push
mov
dec
sub
sahf
out
xchg
xor
addr16
xor
nop
insb
jge
jl
iret
rorl
pop
or
test
push
cvtps2pi
cmpsb
aad
popf
xor
mov
add
sub
jge
imul
test
fists
bound
aaa
and
repz
cld
jle
pop
mov
sahf
mov
inc
adc
cmp
mov
cmp
xchg
sarl
leave
inc
fwait
push
movsb
xorl
lock
xchg
clc
jbe
adc
lods
scas
sbb
sarl
jle
ret
unpcklps
dec
dec
add
out
push
jg
push
add
cs
xor
xor
fdivr
push
mov
xor
dec
in
ret
cld
push
pushf
std
xchg
dec
in
jmp
dec
repz
mov
xchg
add
fcoml
aas
mov
mov
mov
or
add
lret
inc
mov
xor
jmp
xchg
jle
cmp
jg
icebp
popa
and
lds
push
mov
push
arpl
fsub
scas
jb
mov
sub
xor
sub
xor
mov
clc
stos
inc
mov
int3
into
push
dec
cmpsl
add
inc
int3
fcoms
ss
out
scas
mov
adc
mov
and
xchg
jmp
stos
cwtl
or
lods
pop
lret
mov
mov
inc
pop
ss
dec
repnz
in
jb
mov
or
lock
aas
into
dec
psrlq
sahf
jo
pop
je
adc
iret
pop
pop
dec
pop
repnz
dec
mov
xchg
mov
jne
popf
ljmp
mov
es
fs
xlat
sub
lret
fsubs
push
mov
cli
push
pop
mov
test
mov
cwtl
std
fnstcw
pop
ss
xor
sbb
mov
cmp
jnp
clc
scas
cmpsb
push
or
ss
mov
sbb
xchg
sub
adc
add
call
arpl
cmp
cs
stos
xor
cmpsb
lret
into
push
sti
mov
dec
rolb
push
dec
mov
insl
adc
dec
loop
mov
fistpll
fdivl
rorb
pop
add
adc
pop
imul
push
scas
xchg
sbb
dec
push
and
add
push
sub
adc
dec
enter
jns
dec
jge
in
ret
aas
mov
sub
and
pop
adc
jp
mov
testb
jmp
push
std
or
pop
lds
pusha
pusha
push
lds
pop
xor
in
stos
jmp
push
mov
ss
sub
repnz
add
fldt
insb
pop
imul
sub
stos
ljmp
aaa
ret
fimuls
xchg
test
jp
test
into
inc
jb
out
push
arpl
cwtl
add
push
jbe
pop
loop
test
sti
push
inc
mov
mov
cli
les
pop
sub
push
nop
add
xchg
popf
repz
add
push
xchg
ficompl
sbb
add
ds
cwtl
inc
adc
call
outsb
out
sub
js
and
movsb
testl
adc
loopne
jno
push
dec
imul
in
sub
imul
cli
xchg
push
pop
inc
dec
shlb
clc
add
fwait
in
fstpl
nop
sbb
in
outsl
fs
lods
dec
or
jno
mov
mov
sub
in
data16
mov
mov
add
jp
add
inc
ja
add
pushf
pop
fwait
idivb
xorl
add
lret
call
cltd
xchg
repnz
cmpb
add
xchg
stos
fstl
arpl
movsl
sub
jns
test
les
jge
xchg
movsl
stc
mov
and
cmp
dec
fsubl
aas
aad
sub
fistl
addl
adc
das
insl
pushf
mov
cs
int
jl
xchg
scas
leave
jl
and
inc
frstor
sub
sbb
ficomps
mov
insl
and
icebp
clc
in
inc
inc
sub
jmp
or
pop
in
lea
nop
cld
sub
ljmp
jno
cli
dec
inc
cmc
rcll
or
ret
cwtl
aas
xor
inc
in
mov
xlat
icebp
sbb
pusha
lea
xor
mov
fsubrs
icebp
cmp
adc
inc
std
rclb
scas
scas
and
push
mov
xchg
push
mov
push
mov
setns
aas
sahf
test
mov
rolb
add
adc
fmul
pop
inc
rcrl
sub
je
movsl
stc
int3
mov
in
cld
dec
leave
xchg
mov
sbb
ss
dec
cmpsl
push
sub
or
das
inc
ljmp
cmp
jnp
scas
sarb
pop
sub
push
repnz
inc
adc
cmp
scas
pop
xor
sub
fwait
push
dec
loop
call
adc
jge
jle
adc
fistpl
xor
cmpsb
inc
stos
inc
cli
mov
lea
out
or
movsb
pop
add
in
imul
shll
mov
cmc
pop
mov
in
test
fstpl
xchg
adc
inc
ret
call
ljmp
aas
enter
push
gs
jmp
jmp
insb
scas
lods
adcb
push
xchg
cmp
test
shrb
sub
push
add
mov
sahf
inc
incl
dec
push
lock
nop
addb
mov
pop
xchg
and
mov
mov
lods
mov
in
shl
out
dec
leave
jmp
enter
or
jp
roll
stos
sub
clc
lret
lahf
pop
mov
loop
mov
pop
lods
dec
call
cwtl
xchg
fstpl
imul
xchg
cmp
pop
cmpsl
aas
mov
leave
mov
mov
push
mov
in
xchg
test
fimull
fwait
or
scas
js
rdmsr
filds
fildll
shll
jno
cltd
imul
mov
mov
cwtl
ja
imul
in
mov
pop
xor
cmc
mov
imul
push
pop
cltd
in
jae
fwait
push
jge
insl
in
push
jae
push
sbb
fistpll
outsl
es
add
inc
dec
cmc
lret
jae
popf
stos
clc
or
ja
test
jns
pop
aam
pop
flds
cmpsl
cmc
ljmp
xor
repz
or
lret
mov
adc
and
jae
sub
pop
pop
adc
pop
jecxz
into
lret
pop
sub
pop
mov
sbb
int3
mov
cmpsl
lods
pop
jb
shll
xlat
mov
hlt
push
and
fwait
cltd
cmp
in
mov
stc
mov
pop
mov
inc
sbb
fbld
adc
ret
mov
repz
mov
jp
pop
dec
cmc
fucomp
ss
sbb
inc
mov
xchg
es
movsl
jge
xor
mov
xor
mov
pop
hlt
add
pushf
lods
std
jne
mov
pop
adc
xchg
and
mov
testb
lcall
add
dec
cld
sbb
std
lcall
mov
lret
jmp
das
lcall
fists
push
push
pop
sti
jl
decl
push
pusha
shll
les
mov
adc
enter
xor
mov
andb
jl
jb
mov
js
mov
leave
iret
jg
and
adc
add
inc
sub
in
xchg
lcall
and
inc
xor
adc
das
lahf
dec
mov
addr16
xor
loop
inc
arpl
jge
inc
sbb
jo
mov
fwait
add
sbb
test
xchg
pop
sbb
or
dec
cmp
dec
imul
daa
popf
add
mov
gs
add
fadds
inc
loop
fisubrs
sarl
mov
data16
mul
jl
adc
rcr
push
lret
jnp
adc
cltd
fcmovb
cld
jae
cmpsl
stc
ss
xlat
sub
mov
mov
inc
lcall
mov
popa
popf
loop
lcall
xchg
mov
sub
xchg
mov
mov
inc
out
adc
jmp
add
andb
nop
fisubl
push
pop
cltd
stos
xchg
mov
and
cmp
lret
lcall
mov
mov
or
push
dec
push
mov
inc
adc
jge
inc
neg
add
repz
sbb
xor
lods
mov
fidivl
imul
jp
mov
add
ja
jae
sbb
ja
sub
add
cltd
addl
mov
jo
es
loope
jbe
mov
or
iret
outsb
fadd
cld
push
lcall
pop
sbb
lahf
inc
test
pop
cld
pop
lret
xor
je
jle
in
cltd
loope
into
out
cmc
ret
push
fistps
fldl
cmp
jge
ljmp
sbb
loopne
imul
call
xchg
or
andb
adcl
mov
xor
push
xchg
aaa
mov
lods
sub
lret
loop
or
stc
sbb
mov
cmp
mov
or
loopne
fs
or
cmpsl
and
mov
cwtl
pop
xchg
aad
loopne
cltd
jns
lret
lea
lahf
sub
adc
ja
js
mov
mov
jnp
jg
inc
lods
jb
or
add
mov
xchg
dec
sbb
bound
xor
hlt
filds
cs
cld
add
sub
mov
scas
and
or
push
dec
jnp
call
fimuls
lahf
movsl
cmc
cmpsb
cli
sbb
fistpll
rclb
sbb
negb
pop
push
arpl
popa
jp
push
mov
jmp
inc
gs
outsl
jl
call
push
mov
lock
outsl
or
xchg
mov
stos
andb
fmul
pusha
nop
dec
ljmp
jne
std
mov
mov
in
roll
cmp
sbbl
and
mov
dec
or
mov
loopne
sub
pop
std
leave
lahf
enter
dec
mov
add
in
inc
jae
lret
xor
xchg
xor
fisttpll
cmp
lock
or
imul
push
imul
mov
mov
xchg
jmp
push
mov
ret
dec
or
or
pop
inc
popa
dec
popf
lds
ljmp
push
leave
mov
dec
mov
or
push
fwait
bound
js
mov
fimuls
std
ss
std
adc
pop
jo
or
jmp
mov
sub
xchg
xor
push
sahf
and
std
adc
ret
mov
ja
inc
mov
and
arpl
push
pop
jo
and
jb
jg
adc
mov
mov
out
outsb
out
sarl
add
mov
pushf
aad
xor
dec
xor
outsl
aaa
leave
jmp
ss
lret
into
lds
pusha
mov
sbb
lahf
les
out
push
cmc
iret
sub
cs
mov
cmpsl
xchg
leave
jl
inc
loopne
add
sbb
repnz
push
loopne
jno
in
pusha
xchg
pop
ja
sahf
add
pop
fldcw
mov
in
lahf
lock
or
xor
cwtl
enter
out
fpatan
mov
jmp
jb
pop
push
ret
js
mov
pop
xor
je
lock
mov
imull
movsb
sti
cs
adc
data16
dec
jns
daa
inc
test
xor
add
pop
sti
movsl
adc
sti
sub
mov
test
inc
mov
in
xchg
rcrl
push
aas
das
mov
insl
mov
and
sahf
cmp
jns
dec
adc
sub
call
dec
and
ret
imul
pop
inc
lods
fistpll
dec
cmp
data16
xor
test
repz
and
out
jl
jo
imul
dec
jo
scas
inc
jns
lods
dec
jae
mov
mov
push
xchg
negb
push
sbb
adc
jmp
icebp
dec
or
fwait
inc
and
shrl
stos
xchg
mov
sti
js
xor
fnstenv
add
loopne
add
sub
loopne
sti
cli
leave
cltd
dec
xor
mov
push
arpl
cmp
and
xchg
or
xor
pop
movsl
pop
pop
in
jmp
sbb
cmpl
ljmp
cmpsb
sbb
mov
pop
loopne
jae
notb
mov
outsb
mov
pop
xchg
and
fadds
add
in
push
or
xchg
ret
arpl
aaa
push
xchg
les
cli
xchg
lret
mov
and
cmpsl
fimull
mov
cwtl
ja
rolb
add
jbe
pop
ja
lds
sub
lret
imul
xorb
add
inc
imul
popa
sub
fcomi
push
int3
xchg
xor
pop
mov
int3
iret
imul
arpl
jne
icebp
push
lret
sub
xchg
sbb
es
jb
out
loope
dec
bound
jno
jecxz
sarl
push
pop
lea
aam
inc
lcall
and
sbb
lods
cld
and
mov
jne
mov
pop
and
mov
inc
push
inc
test
inc
mov
jnp
cmpsl
imul
xchg
cmpsl
das
sbb
loop
out
xor
sbb
scas
mov
sti
mov
loopne
mov
mov
mov
mov
adc
int3
lods
shl
adc
mov
and
xchg
sbb
flds
out
pop
testb
aam
mov
stos
fistps
lock
dec
push
test
int
mov
mov
pop
ret
aad
sub
sarl
cmovg
inc
jp,pt
test
xor
or
jge
gs
adc
jg
leave
scas
xor
imul
xor
add
cmp
dec
lea
inc
test
xchg
cmpsb
xor
ljmp
cmp
sbb
mov
ja
shll
ret
xor
cmp
lcall
hlt
xchg
and
mov
pop
icebp
adc
sub
imul
cs
pop
xchg
jnp
ds
push
adc
dec
jno
cmp
rcrl
inc
loope
xchg
push
jecxz
lock
pop
leave
push
loopne
mov
sti
out
push
loope
cmp
pusha
mov
xor
leave
std
les
out
mov
xchg
mov
bound
sub
push
mov
decl
push
fcmovb
sbbl
jmp
loop
lock
loope
inc
cwtl
rorl
lcall
scas
xchg
pop
sub
lea
jae
fcoml
mov
cmc
inc
sub
jb
mov
rcll
lcall
aas
lock
repnz
shl
inc
fmull
enter
lahf
imul
addl
je
mov
and
xchg
cmp
jno
cwtl
insb
fildl
push
aaa
cmp
and
dec
cmp
ror
and
jns
rorl
loop
xchg
out
ss
push
inc
test
fstpl
inc
ljmp
loopnew
add
push
test
dec
jle
dec
inc
inc
scas
sbb
test
repnz
daa
arpl
and
jb
movsl
outsb
xchg
movsl
dec
lea
jae
lods
fildl
push
mov
pop
js
fidivrs
insb
shr
or
movsl
xor
push
mov
sbb
inc
xchg
popa
daa
mov
inc
adc
lret
movsl
jae
test
mov
xchg
mov
sbb
cmpsb
fldcw
call
mov
mov
addb
ret
into
lea
mov
in
xor
xor
std
push
arpl
cmp
xor
enter
int3
xchg
sub
mov
cld
sub
cmc
pop
pop
push
int
mov
jecxz
dec
xlat
sbb
loopne
pop
mov
enter
pop
jns
out
ret
mov
mov
cmp
lcall
mov
jmp
mov
mov
shll
mov
and
xchg
xor
xor
das
ret
pop
fnsave
mov
adc
or
bound
insl
and
pop
inc
push
cwtl
jns
sti
ret
sub
lahf
popa
cwtl
push
in
addr16
repz
lcall
sub
cmpsl
pop
jns
inc
outsl
je
push
inc
in
jne
cmp
push
dec
mov
rcl
xchg
fcomps
and
fwait
inc
aaa
or
pop
mov
sub
loope
imul
and
xchg
push
das
lods
sub
push
fwait
cmp
daa
cwtl
es
cld
xor
cmp
mov
push
mov
sub
outsl
jnp
fldcw
cmc
rcll
sbb
outsl
mov
mov
inc
mov
push
inc
sub
in
jmp
arpl
inc
scas
addr16
jmp
jae
imul
hlt
out
pop
call
jge
cmp
cmpsb
cmp
cmp
vphsubwd
loope
sub
sarl
filds
popf
arpl
xchg
xchg
xor
mov
aam
jbe
or
cmp
pop
inc
push
pop
jo
lret
pop
cmp
cmc
inc
pushf
dec
ror
js
jne
outsb
pop
xchg
in
pop
lea
aad
clc
and
int3
popa
and
imul
or
mov
or
lods
cmc
xchg
dec
orps
and
jp
repnz
sbb
loop
dec
cmpsl
cmp
add
jmp
mov
in
fwait
je
push
dec
inc
cmp
insb
outsl
fwait
dec
dec
aam
rcr
pop
cli
out
push
push
push
andb
cwtl
cmpb
imul
xchg
inc
cmp
sbb
and
or
orb
sub
cmp
inc
popa
push
push
dec
lods
insb
stos
fidivs
stc
push
stos
pop
stos
mov
outsb
aas
dec
loope
ja
test
jb
out
outsb
push
sub
fstps
in
xchg
sub
jo
add
fdivrs
mov
fcmovu
inc
int
bound
mov
icebp
adc
add
dec
lds
or
movb
cmp
sbb
icebp
cmp
pusha
adc
outsl
mov
xor
cmp
aam
xchg
cmpsb
xchg
insl
or
push
xor
popf
inc
mov
xchg
ja
jb
jle
movsb
scas
push
mov
ret
filds
inc
add
in
test
xchg
lea
sub
inc
stc
mov
cmp
jae
out
or
mov
test
js
dec
rcrl
push
and
inc
mov
into
add
addr16
adc
std
fistpl
hlt
std
inc
cmpl
mov
je
lods
lcall
lea
jge
cmp
push
mov
je
push
add
js
jg
pop
mov
int
pop
sbb
push
lock
jne
clc
mov
sub
jl
pop
mov
aas
and
pop
bnd
cli
loopne
pop
popa
add
pop
inc
cmc
scas
iret
movsl
fsubs
or
jb
push
addr16
push
mov
and
movsb
dec
xchg
cmpsb
xor
stos
stos
es
popa
inc
in
jnp
xchg
jge
mov
fwait
inc
aad
xchg
sub
aad
in
pop
fstl
test
shll
mov
subl
mov
dec
insl
cmp
shll
icebp
jle
inc
popf
sub
adcb
sub
in
push
shlb
out
fistl
xchg
cmp
adc
sub
out
pop
jae
or
mov
lahf
mov
addr16
clc
cmc
mull
inc
je
lret
inc
addb
cmp
es
loope
xorl
sbb
adcl
jo
jg
ljmp
inc
out
sbb
inc
xchg
sub
add
fucomip
pop
test
addr16
cmp
lea
mov
jecxz
mov
leave
mov
clc
push
and
pop
fstl
cmc
add
lds
push
inc
push
sbb
fidivrl
jo
xor
shl
clc
inc
jl
jnp,pn
or
orb
fdivrs
cli
daa
cmp
sbb
out
xor
mov
pop
inc
dec
std
adc
ss
ljmp
outsl
inc
hlt
and
add
sbb
mov
push
scas
repnz
add
xchg
int
sti
ret
sbb
cmp
and
lock
adc
fnstsw
mov
loopne
test
cmp
sbb
int3
or
repz
int
sub
sub
ss
mov
ret
mov
mov
xchg
popa
jb
cld
sub
pop
fidivl
std
fildl
sbbb
ret
mov
sahf
out
add
push
ficoml
pop
scas
movsl
dec
lock
mov
lds
cmp
popa
mov
popf
jo
cmp
sbb
jg
add
mov
xor
add
in
pushf
xchg
addr16
arpl
aam
adc
cmp
inc
adc
ss
lock
pushl
sbb
fstenv
xor
cmpb
push
push
or
push
or
dec
pop
pop
jnp
test
bound
paddusb
daa
sub
push
outsb
add
jle
ja
out
int
stos
xchg
arpl
add
out
popf
in
sbb
and
adc
mov
add
dec
dec
dec
xchg
nop
cmpsl
xor
ds
or
xlat
mov
cmp
inc
ret
and
adc
gs
addr16
xchg
xchg
fcmovnbe
and
js
lcall
stos
xchg
dec
or
cmp
inc
test
ror
scas
dec
leave
mov
jle
aad
call
sub
js
and
sub
inc
xchg
rorb
fcompl
sahf
mov
nop
das
cmpsl
add
fsts
lods
sbb
jecxz
shrl
cwtl
dec
loop
sub
out
aaa
mov
scas
into
adc
sbb
sub
jl
xor
cmp
fisttps
xorl
out
mov
pop
mov
cli
imul
push
lret
in
jb
mov
xchg
or
jecxz
int3
notb
add
push
jne
cmp
mov
int3
sbb
notl
mov
movsb
pop
int
mov
jo
fwait
sub
insb
in
sub
add
std
xchg
enter
adc
sbbb
and
stos
or
pop
mov
dec
sbb
pop
outsb
cmp
add
mov
fldcw
loop
inc
and
and
clc
xchg
iret
pop
mov
lods
xchg
outsl
std
or
notb
jle
push
add
add
vcvtss2si
fdiv
shrl
jo
cwtl
scas
mov
or
shrl
inc
and
push
int
loop
jbe
mov
sbb
lahf
cwtl
loop
ret
mov
aam
mov
shrb
mov
mov
add
dec
xor
sbbl
leave
popa
xor
or
inc
lcall
push
js
dec
push
and
fsubrl
add
scas
inc
adc
jp
push
mov
add
mov
adc
push
xchg
push
mov
lcall
jecxz
loop
stc
cmpsl
mov
xchg
mov
dec
fistps
mov
pop
lret
icebp
stos
xchg
outsl
xlat
fs
ss
rol
enter
xchg
cmp
bound
mov
xlat
push
dec
push
call
rcrb
and
sbb
pop
mov
xor
jp
mov
lods
lods
loop
cmpsb
cmpb
lock
daa
es
and
cmc
arpl
pusha
stos
push
push
lcall
enter
or
ret
shlb
enter
and
aas
lock
and
adc
jp
hlt
ret
jb
xor
mov
jae
das
mov
fistpl
jae
std
add
sub
leave
rorl
in
sub
xlat
mov
add
ja
mov
out
shrb
cmpsb
jl
clc
xchg
cmp
inc
xor
popa
outsb
jmp
push
jb
sub
leave
aas
das
xchg
std
mov
daa
repz
cli
insb
int3
data16
repnz
sbb
fs
xchg
xchg
xlat
push
push
data16
push
scas
inc
mov
rcll
mov
test
inc
call
lahf
pop
and
jg
test
cmpsb
cltd
cmp
jg
gs
jmp
push
cmc
mov
push
roll
movsl
pop
repnz
fistpll
add
xchg
mov
push
daa
mov
jns
dec
adc
xchg
or
test
sbb
push
mov
data16
and
movsl
mov
out
pop
adc
ret
xor
cmpsb
dec
cmp
push
int3
out
dec
mov
pop
ds
dec
cmp
pop
sbb
pushf
nop
outsb
dec
dec
js
mov
repz
cmp
outsb
add
stos
gs
mov
pop
pop
test
sti
scas
pop
jnp
daa
je
test
dec
test
sub
mov
sub
cli
dec
sti
and
push
dec
push
cmp
sub
mov
mulb
stos
dec
lahf
and
popa
xchg
cmpb
ret
xchg
xor
roll
daa
and
ss
cmp
and
push
dec
jmp
stc
int
arpl
mov
js
adc
dec
ficoml
xchg
mov
xchg
das
call
adc
mul
lret
push
adc
push
push
sbbb
mov
jb
push
push
hlt
ja
add
mov
push
test
xchg
inc
add
cld
dec
bound
xor
shrl
pop
add
mov
jmp
cmp
pop
add
insl
jnp
cld
mov
test
jnp
fldl
mov
and
stc
bound
mov
bound
pop
shr
adc
sub
adc
fdiv
xor
inc
jg
scas
mov
out
pop
pop
lret
and
ffreep
fxch
push
insl
aaa
mov
fwait
mov
mov
std
inc
jge
ljmp
sarb
xor
pop
push
rcll
sbb
mov
faddl
inc
jp
hlt
adc
movsl
inc
cmpsb
cli
scas
stos
add
int3
mov
push
mov
or
xchg
jecxz
pop
subl
xlat
inc
jge
ds
or
dec
dec
mov
mov
cltd
xchg
out
psubsb
sub
sbb
xor
rcrl
pop
js
jb
lock
pusha
fidivs
push
sbb
push
fldl
cmp
dec
shrb
dec
ja
cmp
dec
inc
sbb
pop
out
and
dec
fs
fs
inc
xchg
repnz
into
test
jo
clc
stos
pusha
jp
lds
pop
in
lcall
push
cmp
ret
fimuls
push
stos
in
mov
rdmsr
sub
lahf
ret
jbe
je
mov
cmp
je
mov
mov
in
xchg
mov
cmpsb
jmp
imul
fwait
push
mov
xchg
bound
inc
stos
int
sbbb
or
add
mov
dec
test
xchg
negb
xor
sbb
push
adc
xlat
int
mov
das
lret
out
sbb
cmpl
testl
sbb
addb
xlat
and
xchg
add
mov
sahf
hlt
into
push
subl
icebp
vsqrtps
test
pextrw
fiaddl
mov
mov
mov
add
jg
xchg
xchg
mov
ds
test
xlat
or
xor
add
push
mov
cmp
cmpsb
push
jno
add
mov
push
mov
xor
or
outsb
rorl
sbb
push
xchg
sti
sbb
sub
imul
outsl
jmp
mov
clc
aad
adc
insb
rolb
fwait
xchg
pop
pop
rorl
cmp
fadd
sbb
sbb
mov
sbb
clc
cmc
cmpl
mov
or
xchg
pop
mov
sahf
pop
or
push
stos
imulb
inc
fwait
pop
mov
add
sub
mov
mov
faddp
scas
mov
sbb
mov
out
mov
aam
lret
js
push
jb
push
jmp
insb
sub
jne
jp
xor
in
mov
push
ret
mov
js
mov
and
xor
mov
out
push
out
hlt
cmp
rorl
sarl
or
adc
mov
push
mov
push
mov
lret
in
adc
rolb
movsb
sbb
in
mov
out
or
add
ja
dec
xor
pop
fisubrs
mov
fs
fidivl
sub
cs
push
jl
sahf
dec
ficompl
mov
jp
fwait
stos
sbb
shlb
adc
adc
sar
pop
pop
call
mov
jae
and
aam
pop
sbb
ret
and
repz
sbb
mov
jp
mov
jl
jno
xor
cmp
and
mov
pop
jo
outsb
mov
and
push
mov
adc
add
out
jbe
push
aaa
sub
ds
push
mov
sbb
and
or
inc
sbbb
in
movsb
fldcw
xor
mov
pusha
add
jg
clc
mov
out
sub
repnz
iret
xchg
orb
push
mov
mov
lret
cmp
in
sub
mov
scas
cmp
insl
mov
pop
pop
dec
inc
push
add
jl
push
adc
lds
test
fistl
loop
in
mov
pushf
cmp
fimuls
mov
rclb
mov
stc
les
fucomp
xchg
jno
scas
stos
clc
int
jl
mov
sub
and
sub
in
xor
cmp
add
repz
push
mov
lret
pop
pop
nop
mov
xor
jne
shll
jbe
lods
mov
mov
icebp
add
mov
adc
inc
xlat
enter
mov
and
jg
inc
icebp
push
mov
stos
lahf
enter
or
pop
sub
pusha
jb
sarb
dec
sub
lcall
ljmp
push
sbb
xor
push
mov
xchg
dec
mov
and
idivb
inc
outsb
cmpsb
lods
mov
test
lcall
cmp
xchg
mov
leave
or
daa
out
sahf
popf
rclb
call
push
inc
cmpsb
es
mov
push
out
shrb
sub
cld
pop
cmp
jl
loope
jle
iret
mov
inc
and
cmp
sbb
sub
fwait
mov
push
mov
fcos
mov
je
imull
mov
mov
dec
pop
psrld
xchg
ja
addr16
es
mov
ret
and
imul
in
cli
xchg
cmpsb
repz
cmp
jnp
in
jo
push
pop
and
es
repnz
inc
xchg
ds
cld
push
sarb
in
inc
push
mov
and
cmc
sti
rcrb
adc
outsb
inc
sub
rcrb
andl
outsb
mulb
add
outsb
mov
push
outsl
pop
jle
or
jns
inc
lahf
jecxz
dec
sbb
sbb
pusha
lcall
insl
out
add
mov
cmp
xchg
xchg
inc
push
jne
or
mov
push
mov
clc
mov
cmp
and
jno
add
test
data16
imul
loop
xchg
mov
mov
cmp
test
orb
jl,pn
sbb
hlt
mov
xchg
test
js
scas
lock
fists
cmc
mov
xor
or
push
mov
xor
dec
push
arpl
mov
or
pop
aaa
cmp
enter
mov
or
mov
mov
mov
xchg
pop
test
imul
pusha
xor
test
out
pop
fiadds
movsb
mov
mov
dec
fs
xor
jmp
sub
fimuls
jmp
or
xorb
xor
adc
ss
gs
push
adc
int
in
and
pop
mov
ret
and
in
lahf
adc
and
mov
push
aas
jo
clc
lock
dec
iretw
jl
cltd
xchg
leave
pushf
lahf
iret
mov
inc
pop
out
dec
leave
insb
mov
dec
xlat
xor
and
ljmp
sbb
testl
push
std
or
test
or
rol
mov
arpl
jecxz
xchg
or
aas
in
or
mov
imulb
repnz
sbb
lea
ret
xor
imul
sbb
xor
subb
sub
jl
push
adc
out
jo
xchg
leave
es
popf
mov
adc
lods
mov
mov
or
test
sbb
nop
popa
cmp
jle
arpl
push
ret
sarb
fsubrs
out
mov
mov
int
jnp
inc
add
mov
lcall
add
sahf
and
inc
popa
jnp
test
lahf
pop
test
sub
aas
jne
ret
rorl
cli
lret
stos
mov
xchg
stos
cmpl
hlt
xchg
insl
insl
cli
into
xor
pop
rcl
shrb
xchg
aas
dec
imulb
pop
mov
rcrl
push
lret
mov
testb
das
mov
fninit
out
cmc
sub
pop
and
jne
movsl
movsl
fst
pop
imul
adc
xor
popf
jae
xorb
mov
sbb
inc
scas
scas
shrl
js
loop
xor
scas
xor
subl
out
sub
cmp
xlat
push
aad
dec
insl
data16
sbb
shr
rol
loope
dec
ja
loopne
sarl
or
jge
lret
bound
add
out
inc
roll
call
cmpsl
cltd
mov
clc
pop
and
dec
sarb
daa
int3
shlb
mov
mov
push
std
addr16
lcall
push
rolb
lds
stos
addr16
and
ljmp
jle
mov
mov
loop
in
das
mov
mov
xchg
gs
inc
jae
movsl
cmp
pop
cmpb
in
adcl
out
sub
rolb
pop
jns
iret
and
cmp
call
stos
ret
insb
jle
xor
or
inc
scas
sbb
adc
dec
dec
adc
sub
js
push
fadds
mov
sub
dec
js
stos
or
mov
inc
dec
sub
loope
das
test
mov
sbb
test
push
push
inc
ret
loop
mov
inc
inc
ljmp
push
stos
test
xor
cmp
insb
popf
ljmp
fwait
ljmp
mov
sub
ljmp
std
das
inc
push
rorb
popa
xchg
cmc
cmp
cld
xchg
aad
mov
movsb
xchg
or
aaa
pop
mov
insb
pop
inc
enter
mov
push
negb
shlb
and
push
xor
cmp
notl
das
rclb
sbb
pop
inc
aad
shll
aas
mov
or
sbb
aas
xchg
mov
adc
adc
adc
mov
out
fstl
lods
lds
xchg
test
or
les
sub
push
jno
lcall
fmull
fdivs
cld
push
in
mov
gs
scas
in
jns
inc
xchg
inc
sbbl
lds
or
or
cmc
mov
outsb
std
in
cld
call
arpl
xchg
fsubrl
jo
enter
or
inc
iret
mov
xchg
enter
pop
stos
sbb
movsb
or
into
mov
cwtl
lcall
dec
cmp
or
out
stos
mov
mov
mov
imul
dec
mov
sar
and
sub
je
fisubrl
mov
loopne
movsb
xor
cmp
fldt
sahf
adc
adc
fdivl
push
aad
hlt
lods
ss
mov
mov
nop
jbe
jmp
jmp
mov
push
fcmovnb
sbb
roll
or
addr16
jns
clc
aaa
mov
or
jns
sbb
mov
stos
and
fcmovbe
push
adc
mov
jmp
or
push
mov
imul
out
lds
leave
js
cltd
jl
push
iret
push
cmp
adc
loopne
push
inc
lods
shr
lret
nop
inc
repnz
lcall
push
cmp
jbe
in
sub
lock
dec
dec
pushf
xor
out
outsb
mov
xchg
mov
lds
inc
das
xor
or
iret
mov
scas
lods
or
int3
cmp
sbb
mov
shlb
ljmp
pop
cmp
adc
mov
jg
dec
mov
jnp
adc
inc
imull
adc
mov
push
push
push
push
std
fdiv
enter
aam
mov
xchg
mov
ljmp
cmc
lahf
sbb
sub
cld
enter
add
scas
pusha
test
or
cwtl
mov
push
jns
xlat
or
jbe
popf
cmp
jae
enter
xchg
cmp
xchg
rolb
sbb
cmp
rcrl
jb
cltd
sub
sbb
andb
lods
xor
push
xor
fst
add
xchg
test
adc
enter
pop
cmpsb
insb
xchg
dec
leave
or
fnstenv
mov
inc
xor
movsl
or
fwait
or
inc
cmp
mov
int3
popf
cli
nop
popa
rol
rclb
jo
sbb
cltd
jl
and
subl
popf
pop
mov
inc
aas
dec
ficomps
jo
xlat
outsb
xor
mov
mov
and
out
xchg
push
inc
ss
dec
xchg
cmp
mul
aam
jmp
out
mov
fldenv
addr16
repnz
pushf
sbbl
jne
jb
ret
jmp
dec
pop
inc
mov
mov
jbe
dec
inc
push
in
icebp
inc
aas
iret
adcb
jle
in
js
fcomi
shll
lea
jg
pushf
cmp
jae
mov
test
mov
pop
push
in
imul
pop
popa
scas
pop
mov
cs
ljmp
ljmp
pop
mov
int3
lock
add
and
cmp
mov
lret
adcb
xchg
cs
dec
aam
lahf
ret
and
sarb
inc
sbb
inc
lahf
aaa
popf
ss
mov
sbb
mov
pop
repz
sbb
arpl
iret
leave
dec
jo
pop
repnz
insb
xchg
push
fsubrs
outsl
adc
imul
mov
mov
fucomi
sbb
out
lods
mov
in
in
or
pop
ja
int3
mov
sub
call
mov
jns
push
icebp
lcall
mov
sahf
cwtl
xchg
mov
test
cli
push
ja
mov
xchg
mov
sbb
lret
mov
lods
adc
push
faddl
aas
cmpsl
sub
cmp
cmp
orb
xor
inc
data16
or
pop
fucomi
jle
xorl
pop
cmp
push
sbb
mov
xor
jae
lret
fisubrl
in
push
aas
int3
fwait
cld
cmp
xor
cmc
push
ss
mov
pop
scas
enter
sub
adc
mov
xchg
jne
sbb
std
insb
xchg
mov
clc
lock
testl
and
push
pop
clc
insl
sub
gs
mov
sbb
insb
das
test
scas
xor
mov
and
inc
push
mov
loopne
xor
cld
xchg
dec
int
mov
mov
adc
clc
dec
mov
mov
sub
inc
bound
bound
xchg
inc
int
popa
pop
sti
jge
aam
out
mov
shrb
repz
sbb
mov
mov
or
dec
in
repz
clc
pop
xchg
push
loope
jp
sub
dec
xchg
les
mov
sar
repz
ffreep
das
outsb
stc
mov
bound
out
mov
daa
outsl
jle
and
insb
lret
inc
in
xchg
mov
lret
call
push
adc
js
sbb
pop
push
cmp
add
std
cltd
mov
in
adc
js
data16
push
lret
push
insb
popa
stos
mov
aad
movsl
sub
inc
sub
or
mov
or
xchg
sahf
push
ret
jnp
mov
jne
sub
pusha
rorb
outsb
add
adc
or
mov
mov
outsb
outsl
test
add
fsub
inc
out
out
sbb
add
ds
test
bound
or
cli
ret
cltd
xchg
insb
xchg
cltd
popa
rorl
mov
popf
or
in
sbb
jp
mov
out
mov
sbb
enter
aam
sub
roll
out
test
pop
fs
sbb
lret
adc
movsl
jge
mov
lds
lods
movsb
test
gs
push
loopne
xor
sub
push
daa
daa
pop
out
and
int
mov
loopne
inc
aaa
cmp
shlb
mov
jl
adc
test
aam
jle
lods
cltd
xor
sub
leave
ret
lahf
or
sub
arpl
dec
in
stos
xlat
fsts
out
push
sub
push
and
dec
jl
or
pop
jo
mov
or
jnp
mov
jno
out
shl
inc
cwtl
sub
mov
jae
stc
push
call
js
cltd
sub
adc
or
sbb
test
lods
fdivl
bound
rolb
pop
jle
iret
nop
ret
or
cmpsb
push
adc
popa
mov
xchg
popa
dec
vmaxss
in
js
inc
push
out
iret
lods
adc
xchg
jae
xor
lock
sbb
mov
xor
stos
out
jbe
fcomps
in
inc
sub
loopne
in
call
imulb
pushf
jg
or
push
dec
imul
xor
jo
jp
mov
sbb
data16
pushl
outsl
in
push
mov
push
sub
or
mov
xor
punpcklwd
pop
mov
pushf
insl
sar
push
adc
call
mov
mov
jp
fs
dec
repz
mov
mov
out
pop
fs
loopne
les
hlt
repz
mov
fdivr
negb
inc
sbb
mov
push
adc
push
xchg
mov
mov
in
mov
test
fs
stc
mov
add
fidivs
lcall
pop
ljmp
arpl
dec
cmc
out
pop
jle
push
into
add
push
mov
pop
push
pusha
insl
out
aaa
shlb
mov
and
mov
sub
jno
push
stos
and
test
mov
pop
mov
scas
sbb
daa
popa
stos
out
mov
lcall
sub
sub
and
fimull
or
outsb
inc
test
pushl
xchg
sub
mov
adc
clc
imul
ljmp
lods
stos
jae,pn
dec
mul
cmp
push
cmpsl
test
roll
pop
dec
xor
pop
mov
dec
into
xor
popf
and
ds
ss
xchg
cmp
insl
mov
hlt
push
lock
mov
notl
adcb
push
sbbb
incl
fisubrl
mov
cmp
jo
or
imul
cmp
outsl
arpl
cmp
sub
adcl
popf
inc
sub
js
jge
pop
or
inc
repz
sbbb
dec
es
clc
or
movsb
ficoml
ror
fstl
push
testb
call
push
movsl
scas
xchg
adcb
call
sbb
lret
mov
jns
jle
cmc
shl
in
in
bswap
add
add
cmp
int3
adcb
mov
fisubrl
adc
adc
sub
mov
outsb
pop
or
stos
rcrl
sbb
inc
jb
jo
push
movsb
gs
adc
push
cwtl
in
jle
daa
hlt
idivb
mov
fisubrs
rclb
cmp
mov
pop
or
xchg
cmp
cld
add
or
pop
mov
testb
repnz
mov
shrl
ret
lock
clc
dec
fnstenv
daa
ret
or
scas
mov
cltd
lods
jge
dec
icebp
arpl
cmp
stos
shr
pop
int
inc
popa
dec
roll
push
cli
fsub
es
lcall
jb
jae
lcall
and
subl
pop
pusha
lods
dec
leave
out
sti
mov
jnp
lret
movl
cmpsb
dec
xchg
xlat
inc
leave
ljmp
mov
loop
add
gs
out
fndisi(8087
xchg
and
mov
jb
sub
imul
pop
mov
lcall
loop
adc
in
arpl
cmc
xchg
inc
xor
dec
cmp
or
bound
mov
xchg
inc
sub
push
sti
lret
push
fdecstp
arpl
test
iret
jle
clc
ja
shlb
mov
xchg
push
andb
mov
push
int3
or
in
imul
xchg
or
daa
cmp
push
sub
push
cs
out
lahf
sti
pusha
push
pop
ds
imul
shl
push
call
sti
push
mov
jb
sbb
fistps
out
mov
add
jns
push
mov
movsb
outsb
in
inc
pop
mov
ja
scas
and
xor
adc
lds
arpl
insb
jns
test
add
out
pop
sbb
push
jmp
jne
pop
push
and
push
dec
imul
fstpt
adc
add
push
in
lcall
and
jo
movsl
shrb
test
push
fistl
in
mov
dec
mov
xor
mov
pop
or
shll
cmpsb
fimuls
xchg
fisttps
movsb
jae
xchg
data16
aas
out
lahf
loopne
stos
aam
pop
pop
mov
in
xchg
xchg
mov
and
jns
cmp
out
movlps
movsl
sub
ja
cli
or
or
lea
and
adc
nop
adc
adc
adcb
fs
pop
hlt
loope
fcmovu
jb
addr16
fiadds
int
or
inc
adc
dec
jg
ffree
enter
jo
gs
nop
pushf
addr16
mov
lcall
or
sub
add
pop
dec
movsl
dec
out
xchg
jne
cli
xchg
inc
lods
lods
push
aad
xor
cwtl
push
inc
add
lock
cmpsl
nop
pop
data16
rol
inc
hlt
aam
js
ja
or
out
lcall
in
xor
cmpsb
fistpll
sbb
mov
test
jle
std
or
sbb
leave
fstpl
mov
repnz
add
push
xchg
xchg
dec
mov
mov
mov
jns
and
xchg
pop
addr16
add
mov
stos
pop
ds
dec
sbb
xor
test
jmp
mov
cmp
ret
cmpsl
cmc
jge
inc
loop
cwtl
fisubrs
movsb
push
insb
int
smsw
push
mov
mov
xchg
pusha
jle
xor
pop
push
idivl
jle
jb
cmp
pop
and
push
in
mov
pop
daa
push
mov
ljmp
pop
call
sbb
or
lds
pop
aam
stc
fisubrl
insl
imul
dec
addr16
jecxz
rol
pop
xchg
push
sbb
cmpsl
mov
inc
lods
xlat
and
das
mov
int
sahf
subl
jne
in
test
inc
insb
ja
movsb
stos
mov
and
sub
push
mov
scas
insb
push
imul
pop
lcall
mov
jp
stos
sbbb
pop
xor
push
test
jno
xor
ss
inc
and
sub
fisubrs
add
jp
shr
icebp
movsl
insl
jb
dec
fisttps
or
inc
pop
cltd
jo
cmp
fwait
inc
push
test
sbb
fcmovnbe
xchg
filds
arpl
cli
fdivrp
sub
or
in
cs
jmp
sub
xor
cmp
dec
pop
mov
flds
mov
rclb
mov
out
mov
cli
jmp
or
sub
hlt
jmp
lret
xlat
lock
inc
add
inc
push
jae
jns
push
dec
sub
inc
bound
into
outsl
rcll
popa
mov
in
pop
mov
lret
pop
sti
sahf
psubusb
outsl
lret
lret
mov
pop
cmp
jl
lret
push
push
sbb
and
arpl
testl
mov
adc
cmpsl
daa
adc
and
jns
jg
cmpb
or
repz
xchg
inc
jnp
xchg
pop
sbb
xor
dec
cmp
xor
leave
add
dec
ja
lods
cmp
push
int3
fstpt
xchg
pop
sbb
add
lret
aaa
mov
mov
push
cmp
data16
sbb
js
pop
int
mov
std
fsubs
daa
sbb
or
xchg
jle
add
daa
sbb
rorl
cmp
out
je
faddl
stc
jne
jge
jmp
aaa
loope
inc
or
adc
sbbb
mov
out
sahf
cmp
fwait
dec
mov
mov
aam
inc
mov
pop
cwtl
sbb
sub
inc
jne
jmp
je
dec
inc
ror
xor
xor
aas
out
pop
xchg
repz
sarb
cmp
std
jnp
mov
fstps
fs
addr16
insb
fldcw
mov
jb
xor
push
loopne
or
sub
or
inc
dec
mov
clc
xchg
pop
movb
lret
adc
adc
mov
mov
adc
std
repnz
jmp
icebp
push
rcl
fsubs
inc
add
xor
pop
test
sub
scas
sub
pop
out
test
dec
jne
jb
mov
cmp
pop
aaa
fidivrl
in
pop
lods
ficompl
ljmp
push
add
scas
inc
mov
imul
inc
add
sbb
ret
ljmp
add
pushl
lods
testl
jmp
cmp
pop
stos
rclb
pop
dec
stos
pop
push
dec
int
jmp
or
insb
pop
roll
pop
jnp
repz
inc
int3
xchg
xchg
pop
daa
aaa
add
and
mov
dec
dec
mov
out
pop
push
lahf
dec
lods
dec
xor
mov
add
loope
jp
dec
mov
int3
push
mov
push
fstp
shrb
ss
aam
fyl2xp1
cmp
loopne
xlat
adc
out
mov
mov
inc
push
jae
in
aaa
sbb
mov
push
jg
movsb
ljmp
xchg
xchg
enter
leave
mov
push
sbb
pusha
testb
jl
adc
mov
shll
sub
sbb
push
lret
pop
fildll
data16
cmp
add
cwtl
out
cmp
push
push
pushf
and
iret
mov
fldl
mov
cmp
xchg
and
incb
es
jp
std
mov
sub
and
mov
or
movsl
mov
popa
mov
adc
mov
dec
std
mov
lcall
insb
ss
and
mov
and
push
scas
fmulp
data16
addr16
push
add
mov
ss
jo
flds
notl
cmp
pop
inc
addb
sbb
push
adc
loopne
es
imul
bound
pop
adc
xchg
mov
aad
ss
int3
xorb
push
aaa
rolb
stc
scas
pop
test
or
xchg
test
lcall
pop
enter
loope
adc
pusha
inc
aaa
fdiv
insl
sahf
and
jg
aas
dec
pop
push
pusha
xchg
sub
fwait
aad
sbb
imul
iret
ret
mov
cld
lock
aad
inc
jmp
push
adc
xchg
sbb
dec
push
jg
mov
popf
sub
dec
lea
cmp
sti
test
adc
and
lcall
push
xchg
cmp
mov
addr16
pop
mov
loop
sub
addr16
push
js
aad
call
pop
fnstsw
xchg
or
and
or
mov
out
mov
stos
out
sub
mov
insb
lahf
and
push
js
inc
mov
pop
mov
pop
fwait
mov
push
push
into
or
mov
jg
mov
imul
lds
sbb
inc
xchg
shl
xchg
xor
push
push
push
lods
lea
xchg
cmp
cmc
inc
aas
pusha
push
nopl
out
incl
leave
cmpsb
loop
xchg
xchg
xlat
add
sbb
sbb
lahf
adcb
mov
push
jnp
hlt
mov
push
push
out
xchg
cmp
lret
sbb
pop
adc
jle
and
dec
cmp
sub
aam
mov
cld
aas
aad
sub
mov
dec
adc
andl
jae
mov
dec
adc
mov
mov
sbb
ljmp
inc
xchg
fndisi(8087
hlt
fistpl
add
repz
adc
add
bound
mov
jb
and
sbb
and
cmp
xlat
sub
mov
cmc
xor
pop
push
test
jl
xchg
mov
arpl
add
mov
push
jmp
or
daa
push
ret
dec
out
das
scas
clc
push
ds
mov
sarl
cs
mov
xor
insb
andl
mov
loop
sbb
movsb
mov
xchg
sub
pop
cmp
push
test
and
push
into
cmp
scas
lahf
out
popa
jbe
in
lret
jecxz
or
cmp
push
dec
push
inc
repnz
loopne
ja
xchg
lods
mov
mov
cmpb
bound
lcall
pop
sbb
in
mov
fisubs
jne
cmp
cli
mov
lds
mov
lret
jg
pusha
sub
stos
es
and
xchg
add
and
int3
gs
lahf
xchg
pop
push
addr16
fisttpll
fbld
jg
popw
inc
bound
outsb
cmp
jo
es
imull
fwait
xchg
cmp
outsw
add
pop
out
notl
clc
cmovl
movl
push
pop
xchg
inc
inc
inc
lods
cli
pop
xor
aaa
mov
sar
cmc
push
jl
cltd
int3
jb
cmp
mov
call
xchg
pop
xchg
hlt
jnp
lcall
push
popa
test
gs
inc
imul
pop
add
pop
fs
mov
psubw
das
add
imul
dec
scas
jo
test
adc
pop
daa
jns
sub
dec
adc
push
jno
mov
jbe
sub
lods
dec
and
inc
in
ficoml
adc
sbb
push
pop
ja
sarb
idivl
pop
sbb
out
sub
nop
mov
hlt
xchg
jne
inc
pop
and
sti
mov
ljmp
std
lcall
mov
mov
push
add
or
movsb
pop
sbb
or
stos
scas
mov
xchg
push
jne
cli
std
mov
mov
mov
cmc
sbb
jecxz
lret
xchg
jmp
andl
mov
mov
xor
ds
mov
dec
sbb
test
sbb
scas
jae
sbb
ret
leave
inc
sub
fistl
nop
into
push
xlat
mov
xchg
xchg
sbb
lea
cmc
push
mov
insl
xchg
inc
xor
inc
mov
pop
out
dec
loope
flds
jl
out
bnd
mov
adcb
aad
push
add
ss
jne
mov
push
das
cmpsl
std
pop
xor
outsb
sbb
mov
je
lods
xchg
lret
xchg
loop
lcall
in
and
das
lock
sub
xchg
pusha
and
jmp
ret
dec
mov
xor
jp
add
mov
setb
mov
sahf
mov
adc
fadds
lahf
int3
xchg
inc
push
ja
jne
xchg
sbbb
push
das
loope
sti
xor
push
ja
ret
lret
stos
jns
in
int3
mov
xlat
cmc
mov
fdivl
cmp
in
loope
fucom
and
adc
dec
mov
inc
push
lock
fisubl
push
sbb
into
add
adc
sbb
pop
mov
fiaddl
fwait
inc
sti
inc
cmc
arpl
push
inc
shll
mov
adc
mov
cmp
cltd
ljmp
lcall
lock
mov
fiadds
pop
push
movsl
fisubrs
arpl
adc
and
and
lahf
adcl
jb
cmp
xor
jne
jns
cli
sti
jnp
lret
rcll
nop
inc
push
or
adc
gs
hlt
mov
out
mov
int
fcompl
cmp
jp
icebp
pop
dec
leave
jae
pop
push
cld
pop
ds
mov
push
xchg
icebp
cltd
hlt
add
pop
mov
ds
fmuls
xor
pop
aas
pop
into
jl
mov
inc
loope
lods
dec
mov
dec
adc
loopne
push
dec
arpl
jecxz
jne
addb
hlt
jmp
push
mov
inc
mov
mov
sub
out
sub
jp
ret
sub
pop
loope
icebp
push
or
mov
ss
push
arpl
sbb
push
adc
out
push
xor
daa
sub
loop
stos
mov
inc
pop
shll
push
fwait
mov
out
push
faddl
outsl
dec
add
in
mov
lds
pop
cvtss2si
stos
cmp
dec
int
imul
mov
inc
repz
xlat
outsb
pop
fdivp
call
cmovo
cmp
adc
test
stos
xor
cmp
mov
cmp
cmc
movsl
nop
sub
scas
mov
push
inc
mov
outsb
mov
iret
add
aam
imul
mov
mov
jecxz
or
cmp
mov
int3
sub
test
and
fdivl
xor
and
ret
data16
mov
repnz
leave
mov
aad
sti
mov
jl
imul
jbe
imul
mov
fldenv
arpl
shl
cmpsl
cmp
xor
and
inc
mov
add
add
sub
stos
sub
sub
cli
leave
inc
repz
inc
inc
cli
icebp
sub
mov
jb
and
mov
pop
cli
push
rcl
pusha
call
inc
sub
xchg
or
pusha
jmp
out
mov
and
test
sbb
push
lea
jne
cmp
cmp
dec
int3
leave
cs
push
jp
xor
adc
cs
pop
mov
xor
xor
test
movsl
sub
push
in
jmp
push
push
repz
mov
shlb
add
out
adc
imul
xor
inc
pop
mov
mov
push
and
pop
or
and
ud2
scas
xorl
push
in
or
outsl
sbb
in
rol
loope
cmpsb
inc
movsl
rcrl
and
fcmove
les
jecxz
dec
mov
ret
insl
mov
sub
lcall
fldenv
add
cwtl
out
js
cmp
insb
pop
inc
dec
hlt
adc
xchg
mov
sahf
gs
or
xchg
mov
ss
loopne
adc
loop
movsb
out
mov
sbb
jne
pop
mov
mov
inc
mov
mov
sbb
imul
cwtl
jmp
bswap
jnp
jne
daa
cmpsb
leave
xchg
jno
flds
or
or
cmp
xchg
inc
pop
cmpsb
es
stc
sub
test
jae
es
mov
xchg
fisttpll
mov
popf
lret
push
xor
sbb
loop
dec
stc
popf
sbb
ss
cs
dec
mov
inc
jns
subb
icebp
jno
push
or
add
ss
out
push
ljmp
cmp
imul
xchg
or
push
inc
pop
sub
mov
mov
fwait
dec
pop
inc
jl
gs
sti
stos
pusha
and
es
xor
xchg
pop
pop
leave
outsl
pop
adc
loop
popf
dec
mov
call
push
mov
sub
test
push
call
add
mov
imul
cli
sbb
cmp
loopne
clc
cmp
pop
pop
out
dec
stos
add
cmp
test
adc
aas
cmp
pop
popa
and
xchg
inc
flds
les
mov
adc
sbb
jae
mov
outsl
outsb
inc
push
sub
sub
mov
popa
loopne
lods
xor
mov
or
mulb
push
cli
inc
and
cmp
std
pop
ret
mov
add
push
sti
pop
sbb
fidivs
fidivrs
loope
lds
jae
pop
je
xor
jg
ja
pushf
ja
add
idivl
push
dec
adc
lods
jb
pop
mov
push
xchg
dec
mulb
popf
int
and
xlat
bnd
arpl
cmp
subb
cld
jae
movsl
stc
scas
jae
lret
cld
pop
bound
std
bnd
arpl
roll
stos
rcrb
addr16
leave
gs
aam
out
mov
test
stos
insl
jbe
fldcw
xchg
cwtl
push
xorl
sub
enter
xor
ret
lret
and
ds
imul
shrb
mov
test
in
dec
adc
fsts
jnp
mov
test
pop
mov
out
sub
insb
pop
jae
daa
adc
rolb
mov
sbb
stos
xchg
mov
dec
sbb
insb
mov
inc
in
jns
adcl
mov
and
int3
inc
pop
adc
inc
adc
rorb
push
xchg
xchg
mov
fstp
ror
pop
inc
cmp
sbb
gs
mov
sarl
movsb
cmp
cmpsl
push
xchg
bound
add
push
xor
sbb
mov
insl
sbb
rcr
mov
jl,pn
sub
scas
shrl
mov
push
scas
sahf
xor
ja
mov
mov
inc
ds
mov
call
es
cli
dec
movsl
mov
adc
sbbl
dec
push
and
inc
add
mov
inc
enter
add
mov
xchg
lock
add
cmp
mov
mov
inc
pusha
jb
int3
test
stos
sbb
xor
jecxz
add
cli
add
cmp
shl
add
jns
push
test
add
inc
sbb
sbb
push
dec
les
adc
mov
outsl
inc
cmp
orl
pop
mov
mov
aad
jb
hlt
hlt
lret
dec
mov
mov
mov
arpl
out
adc
add
mov
push
test
sti
cli
cwtl
jo
or
sbb
test
pop
mov
cmp
pop
push
outsb
iret
adc
out
dec
aaa
cmpsb
dec
pop
inc
daa
dec
hlt
sub
jmp
and
loop
mov
je
pop
jge
stos
hlt
push
out
jne
push
out
sarb
xchg
loop
jo
xchg
dec
jecxz
adc
in
pop
stos
pop
mov
cmp
inc
push
je,pn
sub
push
cmp
addb
insl
xchg
push
or
sbb
jns
mov
or
int3
cld
inc
or
mov
adc
pop
test
ficoms
addr16
movsl
sbb
scas
out
cld
push
xor
ss
test
dec
aam
repz
dec
stos
fs
fstps
push
sub
pop
popa
sbb
mov
jmp
push
pop
repz
mov
inc
fwait
ss
sub
xor
jg
sbb
xor
fimuls
test
out
xor
mov
and
xchg
shlb
lods
add
sbb
roll
xor
dec
into
xchg
xlat
gs
mov
dec
push
sar
dec
or
pushf
dec
xor
and
cmova
sub
or
push
test
lahf
push
inc
inc
xchg
pop
cmc
in
mov
add
xor
testb
pushf
sub
and
icebp
push
inc
scas
add
test
xlat
arpl
or
mov
adc
or
fildll
jmp
lret
xchg
dec
fs
ficomps
mov
dec
repnz
and
jns
pop
add
out
xchg
dec
cmpsb
pop
mov
push
add
mov
gs
mov
lea
jle
adcl
lahf
cmp
mov
outsb
dec
jp
jmp
inc
adc
or
push
and
pop
xor
dec
mov
jbe
in
aas
jle
inc
jmp
xchg
scas
add
nop
stc
dec
sub
movsl
out
jecxz
std
lgs
lock
mov
stc
lidtl
mov
cmp
repnz
pusha
mov
push
aad
pop
icebp
inc
mov
mov
xchg
sar
fisttpll
jnp
xchg
dec
stos
and
mov
mov
mov
outsl
lahf
push
dec
add
daa
in
lods
in
clc
fdivs
jle
sub
pushf
sarb
or
shlb
xor
push
lret
mov
mov
sbbl
int
cltd
sub
iret
clc
dec
xchg
fldl
push
cmp
stos
mov
jo
outsb
cld
push
cmpsl
jle,pt
fdivrl
addb
dec
inc
aaa
pop
mov
loopne
jb
out
push
xacquire
stos
in
push
fs
andb
push
movsb
loope
push
mov
inc
fs
iret
sub
inc
or
xchg
outsl
cs
sbb
pop
mov
testl
imul
xor
jle
push
sti
xor
mov
stos
test
stos
outsb
sub
mov
outsb
xor
in
lock
ret
mov
aam
int3
cmp
and
dec
dec
xchg
test
mov
mov
sarl
stos
dec
imul
test
mov
pop
sbb
adc
xchg
loop
adc
fwait
sbb
pop
and
cltd
push
loope
inc
sub
call
mov
dec
mov
mov
subb
mov
cmp
jno
daa
and
cmp
lret
mov
decb
aas
inc
je
pop
jge
xor
or
dec
jmp
lret
push
repnz
lret
cmp
hlt
fstp
lret
xor
add
shlb
mov
rcrl
lods
pop
pop
into
aam
sub
insb
aas
xor
sbb
xchg
jns
int3
pop
dec
aad
mov
adc
cli
dec
mov
xchg
shr
lds
imul
jmp
fimull
xlat
mov
xchg
out
dec
push
xlat
mov
test
dec
hlt
mov
stc
out
jne
ror
scas
mov
push
lods
mov
shrb
orb
xchg
mov
xor
push
mov
dec
push
fisttps
jle
sbb
xlat
nop
cmp
dec
in
cmp
and
push
in
push
mov
mov
je
stc
nop
pcmpeqw
pop
scas
repnz
mov
mov
xchg
lret
and
push
enter
add
loope
sub
xchg
pop
mov
in
dec
in
imul
fistps
cmpsb
push
loope
test
es
int
testl
and
dec
stos
mov
or
jbe
cli
and
jmp
stos
test
lahf
lock
gs
addr16
movsl
push
mov
negl
pop
in
popa
push
jmp
insl
push
imul
jae
mov
mov
cmp
ja
addl
aaa
aaa
lea
cmpsb
stos
test
int
or
pop
mov
adc
ljmp
xchg
sub
jl
repnz
or
push
mov
add
fsts
icebp
adc
adc
add
push
ss
test
aas
pushf
ds
jnp,pt
sbb
xchg
ds
data16
in
pop
les
sbb
mov
add
nop
mov
push
lds
sar
in
pop
ficompl
mov
stc
addr16
ficoml
xchg
insl
cmpsl
pop
ss
hlt
mov
ja
mull
dec
mov
into
les
mov
mov
xchg
inc
insb
scas
jmp
fsubrl
xor
pop
and
orl
push
cmp
ret
inc
cmp
adc
or
mov
adc
push
xchg
push
jno
pop
cmp
fisttpll
hlt
or
out
ds
cli
imul
ret
push
flds
mov
jl
or
out
test
rol
movsl
mov
jp
push
ret
je
addr16
push
aas
aad
sub
xor
test
fcomps
mov
fmuls
in
sub
fimull
pop
dec
mov
aas
adc
push
lahf
daa
and
ret
shll
test
hlt
mov
and
ret
out
loope
jb
jo
out
rorl
je
xchg
sub
add
loope
mov
push
jge
cmp
pusha
mov
xchg
out
or
or
sbb
std
add
mov
sbb
adc
scas
cld
popa
pusha
fstpt
dec
or
xor
inc
xchg
xchg
loopne
sub
add
lret
cmp
repnz
and
sbb
dec
iret
add
adc
jmp
fldcw
push
mov
aaa
rcll
mov
dec
pop
lahf
push
xchg
fdivrl
push
data16
mov
xchg
adc
xor
add
push
inc
mov
mov
mov
test
lcall
nop
jecxz
or
movsb
xchg
dec
mov
lods
push
mov
mov
fwait
rorb
jp
psrad
pushf
xchg
mov
cmpsl
scas
cli
mov
je
or
and
jmp
dec
out
stos
pop
push
stos
nop
dec
lret
aad
sub
aaa
je
cmpsb
je
or
fildll
mov
cmp
and
bound
sarl
mov
es
cltd
aas
xor
fildll
push
outsb
int
add
fs
fldt
jl
iret
push
ficoms
mov
xor
push
fmull
cli
js
dec
loopne
push
scas
jg
cmp
push
mov
jle
fs
outsb
lret
mov
test
dec
jp
mov
sub
das
lds
sbb
out
inc
ja
mov
loop
cmp
imul
lods
xlat
inc
xor
inc
sub
in
sbb
leave
sbb
add
pop
xchg
out
mov
push
mov
sub
inc
and
mov
add
data16
cltd
mov
aam
das
adc
arpl
and
les
jle
jae
or
cmp
inc
dec
or
mov
sub
adc
pop
or
and
sub
sub
test
add
subb
and
push
cmc
daa
stc
sub
lahf
cmpsb
imul
mov
aas
or
les
les
xchg
sub
push
push
scas
arpl
ss
lret
pop
adc
fldenv
out
mov
xchg
in
push
imul
lods
imull
fistl
xchg
sbb
xchg
xchg
shrb
out
jnp
mov
imull
loop
out
jecxz
jp
popa
xor
popf
adc
scas
scas
shlb
aam
movsl
popf
lock
jl
xchg
xor
jp
rol
adc
dec
cmc
pop
out
xchg
lahf
xor
mov
test
pusha
xor
scas
mov
or
sbb
pop
subl
mov
out
loopne
jnp
scas
cmc
jp
aad
stos
lcall
cwtl
xor
pop
sbb
jne
addr16
mov
sub
mov
dec
and
jecxz
and
push
sahf
sarb
call
sub
adc
lret
inc
inc
push
xchg
pminsw
mov
add
adc
test
fsubrs
or
mov
adc
cltd
lcall
daa
mov
inc
push
mov
mov
xor
rclb
cmp
lea
out
aaa
mov
cwtl
sub
mov
mov
popa
ficoms
sahf
push
stos
ja
pop
add
mov
inc
daa
sbb
movsb
cmc
sub
dec
sahf
inc
mov
push
movsl
loope
imul
cs
repz
fcomps
jno
fs
push
mov
fwait
pop
mov
inc
mov
cmc
add
sbb
into
xchg
nop
mov
add
test
dec
dec
adc
insl
rcr
adc
cmpsb
in
cld
adc
xchg
lock
mov
cmp
add
test
clc
pop
test
mov
popa
pop
mov
mov
stos
jge
les
inc
hlt
pop
out
rcll
mov
sub
jno
mov
aas
add
sbb
aad
int
test
push
outsl
add
xchg
orl
loope
pushf
sahf
lock
dec
adc
pop
pop
sub
loope
xor
cli
jle
dec
das
mov
mov
imul
test
imul
and
push
lock
push
xchg
shrb
mov
test
mov
iret
and
jno
sti
inc
sbb
mov
xchg
lret
in
dec
sub
xor
push
fsubrl
jb
cwtl
jnp
fstpt
test
pop
xor
xlat
mov
sahf
push
mov
mov
push
into
fcmovb
push
imul
jnp
jp
lret
xor
adc
dec
lods
push
test
inc
rcrl
mov
cmpsl
push
cld
or
mov
and
aad
sbb
sub
sub
inc
ja
push
inc
dec
pop
sbb
ret
stos
sahf
xor
outsl
adc
jnp
cwtl
scas
cmp
not
jbe
aaa
sub
imul
cli
andb
test
cmp
jb
out
and
in
mov
leave
out
lds
push
movsl
inc
add
fisttpl
adc
push
push
iret
dec
pop
popf
push
out
mul
or
push
jae
ds
cwtl
lahf
mov
and
test
fisttps
adc
es
fdivrl
jne
repz
or
jnp
cs
cmpb
adc
sub
inc
imul
loope
data16
sti
jle
fisttps
push
lea
es
xchg
pop
lcall
mov
dec
and
push
test
and
inc
adc
insb
enter
ds
nop
jnp
in
dec
or
test
gs
pushf
roll
cmp
or
cmpsb
xchg
mov
mov
lock
push
iret
mov
push
jnp
je
jnp
xchg
loop
fwait
adc
cltd
push
leave
push
xor
and
leave
loop
push
push
mov
or
xor
push
mov
xchg
mov
dec
inc
hlt
jno
call
fimuls
cmc
out
xor
jae
sub
xchg
clc
dec
into
mov
lods
xlat
push
inc
rorb
mov
sbb
sub
pop
ds
pop
jae
lcall
ss
das
pop
decb
push
sub
push
cmc
push
std
and
xor
fsubrl
xor
lods
daa
je
into
jbe
ror
ljmp
pop
fwait
inc
mov
xchg
sahf
addr16
dec
in
cli
outsb
inc
push
subb
bound
xor
adc
int3
cmp
cld
pop
sbb
icebp
bound
aas
xchg
jg
push
scas
movsl
aas
out
xchg
fwait
or
jno
nop
inc
xor
jmp
sbb
clc
pop
jmp
and
lret
or
or
pop
sub
jp
mov
mov
test
xor
jecxz
cmpsb
jle
and
dec
dec
mov
and
push
inc
and
mov
lcall
sbb
insb
push
mov
push
xlat
mov
mov
es
sahf
mov
mov
leave
test
or
or
or
xchg
xchg
pop
inc
mov
mov
in
adc
fwait
test
cld
js
sbbb
or
xchg
jne
frstor
sahf
fwait
push
xchg
or
cmp
fs
in
push
jnp
in
ss
xchg
pop
lods
pop
mov
stc
xrelease
push
sbb
sti
in
xchg
jns
jae
cld
and
repnz
into
add
sbb
xor
js
or
pop
push
lea
pop
ficoml
cmp
mov
lret
mov
lahf
mov
jno
ss
mov
int3
pop
cmp
out
in
jb
je
cmpsl
fistps
lock
xadd
enter
sbb
add
add
sub
mov
or
mov
repnz
loope
icebp
and
or
mov
and
ds
test
sbb
jle
jo
insb
bnd
into
pop
ljmp
jg
out
mov
movsb
xchg
add
sub
push
jl
dec
jp
xchg
cmp
mov
jecxz
arpl
ja
add
inc
adc
push
imul
and
pushf
dec
into
out
push
adc
out
shrb
sub
daa
insl
loop
cld
adc
mov
cmp
push
xor
cmp
dec
cmpsl
iret
jnp
in
mov
sbb
test
xchg
pop
fnstenv
stc
mov
out
and
sbb
std
push
push
jp
out
rcrl
mov
rolb
mov
and
mov
movsb
sub
int3
or
das
imul
inc
jno
leave
xor
jge
xorb
mov
incb
bound
pop
lods
jns
xor
mov
mov
enter
or
inc
negb
xor
lret
clc
or
pop
sbb
cmp
call
repnz
xchg
clc
or
inc
push
cli
bound
mov
cmc
int
dec
in
xchg
adc
in
or
cmpsb
imul
fwait
nop
cmp
ss
jecxz
mov
add
dec
jmp
test
mov
xchg
cmp
jl
cmp
mov
es
fnstsw
push
adc
xor
lods
adc
cmpb
fistpl
popa
aaa
repz
cmp
sbb
cmp
rorb
and
dec
scas
lcall
sbb
dec
divb
pushf
adc
icebp
mov
ret
adc
dec
sbb
push
in
lods
xor
cmp
cmp
jae
lea
scas
leave
cmp
es
push
sub
je
dec
mov
lods
sub
ss
in
inc
xor
iret
js
inc
push
in
mov
out
scas
or
add
in
jp
cld
out
sub
cltd
jae
xor
shll
test
sarb
jb
mov
jp
push
daa
repnz
xchg
cmp
mov
jns
int
and
lock
sub
jmp
push
int
mov
lods
ja
cld
out
mov
insl
push
in
subl
pusha
popa
add
mov
rcrb
int3
dec
cmp
data16
std
xor
mov
mov
cltd
movsb
shr
maxps
cmpsl
mov
out
jg
sbb
out
inc
adc
or
test
xor
dec
nop
jge
test
lcall
and
in
pop
shrb
cmpb
nop
add
dec
xor
push
or
sbb
mov
mov
shrl
inc
and
mov
mov
sbb
cmp
sarl
push
inc
mov
jl
mov
mov
xchg
call
fxch
jo
cmp
cld
sub
sub
or
fcomi
sbb
dec
cmpps
pop
fnsave
loopne
andl
inc
sti
stos
inc
inc
lahf
mov
imul
mov
sbb
and
jns
ljmp
clc
mov
clc
push
push
mov
lahf
inc
enter
add
adcb
mov
fnstcw
ja
jecxz
sbb
int
cld
adc
outsb
fst
psrad
out
push
or
and
xchg
jns
mov
ljmp
mov
in
dec
fwait
cmpsl
fdivs
cmc
mov
dec
insl
data16
add
sub
and
aaa
adc
loope
out
rolb
xor
add
mov
gs
loopne
push
dec
in
fs
xor
jecxz
imul
adc
push
jae
add
mov
mov
pop
mov
mov
leave
call
cwtl
enter
inc
lock
xor
rorb
sub
inc
xor
cmp
loopne
fists
dec
jno
dec
add
hlt
and
inc
pop
loop
cmp
fildl
xchg
inc
pop
sbb
fs
mov
xor
mov
rcll
in
mov
adc
mov
adc
in
cmpb
mov
subb
lea
add
test
xchg
inc
dec
pop
mov
lock
or
call
jbe
ss
rcrb
or
insb
cmpsl
mov
sti
push
lret
sub
or
pusha
fcoms
xor
push
lods
in
sub
aas
pop
outsb
add
jmp
jecxz
push
sbb
jg
movsl
add
pop
insl
jb
xor
int3
pop
ss
lret
les
out
nop
mov
xchg
cltd
jo
lds
sahf
jbe
mov
inc
xor
dec
sub
js
sbb
out
inc
movsb
pop
stos
push
cmp
jge
mov
fnstcw
push
pop
pop
outsb
jmp
push
jno
idivb
cmp
lcall
xchg
lret
ficomps
hlt
je
pop
sbb
sbb
push
lock
aad
or
es
inc
mov
cld
pop
or
ljmp
test
sbb
sbb
loopne
mov
ficompl
push
das
sbb
movsl
mov
sbb
out
ficoml
call
xor
adc
push
addr16
mov
aad
jne
push
xchg
dec
test
pop
sbbl
test
cmp
xor
add
xchg
insb
push
insl
jne
fmuls
mov
pop
xor
repz
add
inc
jb
or
test
and
lahf
pop
idiv
arpl
es
sub
xchg
dec
mov
xor
cmp
pop
cmpsl
mov
addl
clc
in
es
lret
test
add
mov
cld
xchg
dec
fidivl
sbb
and
repnz
test
lods
std
hlt
jbe
mov
xlat
pop
or
jne
shll
jne
ljmp
push
imul
and
repz
ss
in
je
xor
in
sub
ja
cs
subb
add
cmpsb
jle
jl
mov
add
cmp
stc
cli
mov
jno
cmc
movsb
sub
jl
jecxz
mov
aam
sbb
imulb
mov
enter
push
add
imul
mov
mov
movsb
jle
mov
inc
mov
cli
or
imull
push
and
subb
imul
pusha
ret
sbb
pop
sub
dec
sbb
mov
add
inc
into
jp
mov
xchg
xchg
dec
jae
out
mov
inc
dec
pop
bound
sub
imul
push
mov
pop
xchg
mov
pushf
cmpsb
and
nop
cmc
add
sub
sti
pop
fcomps
movsb
test
pusha
mov
nop
sub
jecxz
loopne
dec
or
xchg
sbb
inc
fdivrs
call
and
testb
lock
and
into
aaa
icebp
test
repz
ret
imul
icebp
or
sbb
sti
push
xchg
fildl
xchg
aaa
add
xor
mov
sbbb
sbb
cmp
mov
adc
sahf
gs
mov
jecxz
or
mov
es
enter
aaa
jmp
push
bound
lret
nop
into
test
inc
loope
add
adc
push
push
fimull
stos
xchg
pusha
and
inc
pop
xchg
call
insb
sarl
fimuls
testb
push
sub
inc
daa
mov
ja
adc
in
and
xrstor
xabort
ja
rcrb
jp
inc
pop
dec
jae
cltd
addr16
cmpsb
dec
daa
ret
mov
jmp
inc
das
xor
mov
adc
cmp
cmpl
xorl
sbb
cld
sub
testb
jmp
pop
push
xorl
push
inc
aas
dec
and
lods
in
lret
mov
outsb
jge
sbb
test
mov
or
or
xor
xchg
into
das
aaa
ret
aaa
jp
jnp
inc
xchg
fwait
mov
jbe
ja
jg
outsl
pop
sub
cmp
mov
test
pavgb
xchg
arpl
outsb
ret
pop
out
pop
adc
fcmove
xchg
cltd
es
iret
push
and
add
inc
mov
mov
sub
data16
aas
xchg
leave
adc
imul
lahf
pop
repz
adc
pop
das
sbb
movsb
out
inc
mov
lds
push
adc
sbb
std
pop
push
xchg
jo
pop
jg
add
std
cmc
test
and
push
hlt
xorb
int
adc
jmp
inc
jne
das
ret
push
repnz
ja
data16
add
inc
cmp
stc
push
fistpll
loope
lods
je
sub
loop
outsb
cld
dec
mov
mov
dec
fbld
idivb
movsl
pop
or
mov
paddsb
loop
jno
mov
mov
cld
xchg
int3
adc
lods
inc
in
sbb
sbb
pop
xchg
xor
sbb
or
in
shlb
in
adc
cmpsb
rcrl
xor
mov
call
dec
xchg
lret
cmp
mov
leave
lock
push
jge
adc
pop
jbe
jl
jno
cli
and
ja
sub
xchg
rcl
arpl
fcmove
aad
push
pop
and
add
out
in
popf
std
pop
daa
lret
rclb
inc
jae
push
xor
push
pop
mov
lock
das
scas
rcr
pushl
call
out
mov
insl
fisubrs
cmp
data16
inc
std
and
loope
in
out
dec
pop
fcompl
test
and
test
dec
xor
sbb
push
aam
cmp
mov
ret
addb
hlt
inc
push
fdivs
movsl
vmovddup
popa
arpl
mov
cmp
cwtl
sbb
push
mov
and
shll
mov
outsl
cmpsl
pop
or
ljmp
add
or
sarb
fwait
ja
xchg
popf
push
cmpsl
sar
shlb
adc
shll
in
or
inc
cmp
xchg
inc
or
add
neg
adc
icebp
cmp
jne
push
sti
jnp
lock
pop
add
cs
xchg
cmp
inc
sub
rolb
out
sub
rcrb
mov
rcl
push
push
jne
data16
inc
mov
mov
adc
jnp
push
xor
add
rcrl
jg
mov
fidivl
out
mov
inc
arpl
mov
pop
push
dec
mov
orb
arpl
push
xlat
lods
ja
outsl
mov
popf
cmpb
dec
repz
scas
jecxz
push
push
bound
inc
and
push
lahf
and
js
adc
push
dec
outsl
test
loop
test
xchg
hlt
jle,pt
mov
push
xor
push
jge
jbe
jle
aas
sbbb
test
aad
xchg
nop
add
int3
sub
loop
dec
fcoml
jmp
pusha
add
rolb
in
addl
addr16
fnstsw
loop
pop
imul
or
or
std
jle
jle
jge
outsb
adc
fdivs
leave
jo
cmc
outsl
jg
xor
jl
cmp
pushf
pop
jb
cmp
and
and
scas
in
scas
push
xchg
mov
mov
out
push
sbb
aam
cli
cmp
popa
jl
xor
sub
sub
cld
sub
adc
out
testl
adcl
test
xchg
sub
inc
or
dec
and
and
subb
jo
xchg
mov
jmp
stos
pop
decl
sbb
in
sub
mov
mov
or
div
inc
add
movsb
and
sub
and
fldcw
mov
test
arpl
ret
fwait
adc
inc
xor
jecxz
mov
mov
ret
arpl
mov
or
fcomps
cli
sbb
mov
fs
test
in
mov
sub
xchg
dec
jp
mov
jge
icebp
sub
push
pop
popf
inc
xor
xchg
push
and
dec
mov
jp
mov
scas
call
jle
fldl
mov
aaa
lods
ja
mov
push
mulb
push
push
jmp
lcall
xchg
nop
and
and
cmp
cmp
push
test
pushf
lret
xchg
mov
mov
xor
stos
ret
sub
push
data16
dec
sub
sahf
in
mov
sbb
jmp
sahf
cmp
call
out
push
js
push
inc
and
fadds
lahf
xor
adc
add
mov
mov
xor
loop
jo
push
xchg
adc
imul
cmpsb
inc
icebp
sub
xor
adcb
dec
clc
pop
mov
popf
mov
xchg
les
add
mov
lret
aas
and
xor
sub
sub
mov
push
pop
lcallw
aam
fidivl
jg
loop
scas
popa
stos
xchg
xlat
push
mov
ds
inc
cmp
popa
cld
pop
dec
dec
shll
subb
cmp
push
dec
or
mov
xchg
movsb
lcall
add
mov
lahf
mov
cmp
mov
pusha
jp
popf
sub
push
je
ss
into
adc
xor
push
inc
out
pop
cmp
xlat
in
pop
push
ficompl
or
stos
inc
repnz
loopne
sbb
cmpsb
adcb
shlb
inc
push
mov
mov
sub
inc
adc
add
stos
mov
push
sbb
jl
mov
test
dec
add
mov
and
loope
sbb
stos
push
mov
xchg
scas
loop
bnd
dec
mov
aaa
mov
iret
bnd
rolb
sbb
aaa
sbb
cmp
cmp
mov
lcall
pop
gs
xchg
daa
lock
adc
sub
jecxz
xor
pop
std
fmuls
mov
gs
or
jp
lret
js
sub
test
dec
xchg
jle
icebp
mov
dec
push
lret
mov
daa
shr
jge
sti
pop
jmp
pop
and
lods
lods
popa
pop
cmp
mov
das
fs
push
fsubl
add
nop
mov
mov
mov
pop
push
inc
adc
dec
stos
inc
scas
lea
ljmp
and
movsb
stos
out
sti
addr16
fcomi
repz
rcl
cmpsb
fstpt
fdiv
popf
arpl
push
ret
pushf
mov
add
or
pop
loopne
cmpsb
call
popa
jecxz
jl
push
lahf
dec
push
jl
pop
push
jge
lds
rolb
cmp
rclb
test
xchg
mov
cmp
aad
inc
popa
mov
adc
mov
insl
push
pusha
icebp
xor
shll
dec
or
cmp
fwait
mov
les
inc
loop
and
mov
and
cmp
sub
test
addr16
iret
loopne
test
jge
dec
sub
push
int
pushf
cmpsb
adc
int
lcall
popf
mov
mov
sbb
out
mov
dec
xor
mov
sub
push
insb
push
cmpb
xor
loopne
push
cmp
dec
push
mov
in
or
aas
ja,pn
jecxz
ficoml
pop
push
std
into
mov
lods
in
jne
sub
ret
sbb
icebp
repz
sbb
shlb
sbb
push
call
addr16
mov
ja
mov
mov
ss
mov
sbb
and
aam
test
and
lahf
push
mov
movsb
test
dec
push
mov
inc
adc
pop
pop
lcall
sbb
movb
jo
push
ffreep
xchg
mov
and
insl
cld
cmc
jbe
lret
int
fbstp
insb
mov
lea
or
mov
push
mov
dec
mov
and
sahf
popf
sbb
lea
cs
test
mov
out
dec
jle
and
pop
inc
xchg
popa
sbb
push
dec
repnz
mov
push
popf
insb
adc
jecxz
psubusw
xchg
fistl
push
lock
in
pop
repnz
and
mov
or
sbb
fdivl
stos
cmp
pop
enter
push
lods
das
or
cmp
pop
xchg
vcvttpd2dqy
data16
ret
mov
in
jbe
dec
sbb
shr
sbb
in
mov
inc
rol
rorb
cld
pop
aad
jg
sbb
lea
jp
insb
and
jg
and
jecxz
pop
cmpsl
bound
inc
pusha
shr
jnp
push
pop
inc
or
cld
inc
bound
add
adc
cmp
mov
aam
dec
lods
mov
call
loop
mov
jb
ret
inc
sub
stc
dec
cld
sti
mov
adc
stos
fiaddl
cmpsb
clc
iret
in
int3
mov
inc
leave
xor
xorb
or
xor
pop
pop
aam
fdivrp
fwait
push
xbegin
fisubrs
cli
pop
push
lods
push
cmp
xor
cwtl
int
sbb
insb
dec
lds
nop
xchg
mov
sbb
dec
in
mov
mov
cmp
aaa
cmp
popa
add
xor
in
or
jbe
sub
rcr
jae
repnz
or
sub
or
add
clc
mov
call
mov
sub
cli
movsb
popf
ja
ss
sahf
lock
ret
sbb
xchg
mov
jo
jbe
xchg
mov
add
int3
inc
out
push
push
lcall
push
or
outsl
lret
or
pop
rep
xchg
push
es
push
loopne
pop
push
dec
jg
sbb
shll
out
or
jo
jmp
add
insb
jo
sbb
sbbl
repnz
adc
fldenv
or
push
inc
dec
cmp
sbb
incl
sbb
daa
sbb
test
in
jae
sahf
into
int
cltd
in
push
lods
iret
out
push
or
push
in
add
out
and
dec
pop
push
and
push
aaa
ss
xchg
and
test
std
and
mov
leave
ja
xor
push
cmp
or
sbbl
hlt
mov
sub
aas
out
jle
test
pop
rorb
mov
cmp
cmpsl
stos
and
pop
jne
mov
mov
mov
loope
push
xor
js
pop
mov
push
xor
aas
fstpt
in
pushf
rolb
jle
cld
jns
movsb
mov
ss
mov
inc
or
push
mov
arpl
cltd
pushf
xlat
cltd
push
sub
shl
xchg
js
clc
pop
pop
mov
cmpsl
push
pop
and
push
jle
icebp
mov
rcr
lcall
push
push
cmpsb
rolb
xchg
pop
outsl
and
daa
lret
cmpsl
aam
ja
inc
std
ret
pop
mov
out
add
fisubrl
jmp
movsb
leave
sbb
cmp
jmp
imul
xor
in
popf
js
jo
insb
std
push
add
mov
dec
push
aad
xor
mov
and
dec
xlat
sbb
adc
jl
sub
and
data16
jle
push
inc
add
jnp
sub
shll
mov
jg
fisubl
outsb
jnp
lock
roll
lods
es
cltd
movsl
hlt
cld
pop
pop
push
pop
mov
mov
and
jmp
imul
inc
xchg
pop
test
ja
fwait
pop
gs
inc
movsl
fsts
in
inc
cltd
and
push
push
shll
jnp
loopne
add
leave
cmpb
mov
sbbb
test
js
xor
mov
push
mov
xor
sub
mov
mov
pop
jge
jecxz
cld
jb
inc
insb
mov
pop
mov
mov
lods
aas
ficompl
pop
test
es
and
scas
pushl
or
push
xchg
jno
pop
cld
idivl
jo
out
cltd
jl
xchg
adcb
shlb
inc
and
pop
pop
mov
icebp
mov
mov
lds
rorb
push
push
push
ja
fcmovne
mov
adc
push
add
mov
call
mov
push
sahf
lea
stos
ss
dec
test
jmp
shll
or
push
add
add
test
aam
lcall
loop
lret
sbb
push
mov
out
dec
bound
inc
arpl
shlb
sahf
loope
orb
jno
pusha
bound
push
or
inc
inc
ss
movsb
dec
xchg
mov
sbb
int3
cmp
jg
insb
scas
sub
pop
jnp
add
xchg
push
fwait
xchg
and
outsl
andl
lods
push
scas
mov
mov
mov
aam
sub
inc
push
ljmp
lret
fnsave
insb
inc
popf
mov
rsqrtps
xchg
pop
insb
or
mov
sti
mov
xchg
shrd
iret
push
scas
jmp
in
pop
inc
and
addr16
ficomps
test
inc
xchg
divb
adc
leave
push
or
inc
data16
nop
fistl
lret
daa
into
test
sub
sub
and
sti
gs
pop
sub
lds
jo
mulb
test
inc
cs
mov
mov
push
inc
jg
sub
cmc
and
imul
xor
loop
loope
jno
std
or
push
xchg
xor
fimull
ss
sbb
shll
fstps
lea
xchg
stos
add
lahf
repz
sbb
xchg
xchg
mov
xor
and
aaa
cwtl
or
pop
pop
je
ja
pusha
add
dec
cmp
jge
inc
idiv
imul
addr16
mov
lock
out
and
cmp
mov
mov
push
inc
aas
cmp
mov
arpl
push
inc
pop
rcrl
add
inc
xchg
mov
pop
pop
ljmp
xchg
mov
out
mov
fprem1
cmp
loope
adc
notl
xchg
sbb
fisttpll
in
std
out
subb
mov
lea
mov
and
mov
sbb
pop
and
sbb
add
inc
adc
and
scas
out
xor
stos
arpl
ror
adc
xor
int
ja
into
inc
xor
jae
out
addr16
push
sbb
enter
fistpll
movsb
movsl
and
enter
scas
movsl
xchg
pop
flds
out
push
inc
cmp
outsl
inc
jle
imul
inc
and
testl
dec
mov
mov
xchg
cmp
mov
les
adcl
xchg
cmpsl
into
xor
lcall
je
xchg
cmp
add
add
aaa
stos
jle
add
popa
icebp
int
mov
mov
daa
insl
mov
cmp
shll
push
inc
daa
sbbb
out
mov
pop
inc
cmpsb
jmp
sub
cltd
push
pop
xchg
mov
imul
test
test
push
movsl
lret
adc
jle
popa
xchg
or
or
fidivl
mov
icebp
pop
outsb
add
sar
pushf
inc
popf
mov
jbe
sub
jnp
cmpsb
int3
xchg
gs
into
test
test
idivl
shll
jmp
mov
test
or
andb
sub
mov
mov
fldpi
cmpsl
push
jmp
add
imul
ja
mov
adc
mov
sbb
xor
jp
add
addb
xor
outsl
movsl
and
out
mov
in
mov
or
mov
cmpsl
ja
popa
xchg
subb
sbb
cs
cli
mov
mov
pushf
cmp
xor
xchg
enter
xchg
loope
adcb
pop
push
mov
xchg
mov
data16
stos
pop
cmp
dec
cmp
mov
jmp
in
fwait
popf
inc
push
test
and
pop
cmp
addr16
xor
jmp
dec
jae
mov
sub
mov
xor
add
cli
xlat
xor
loop
mov
push
pop
jmp
es
jb
ss
clc
mov
push
mov
sahf
test
push
sub
leave
inc
or
push
repz
inc
mov
inc
add
sub
add
inc
adc
lret
sub
push
dec
repz
dec
call
xchg
ljmp
scas
negb
lods
cmp
sub
lcall
in
sub
in
stos
pop
jp
push
insb
loop
cs
in
pop
fwait
mov
pop
inc
mov
sbb
add
testb
sub
and
or
inc
inc
and
mov
repz
ss
sub
jmp
incb
ljmp
into
mov
out
lds
xchg
xchg
addr16
cmp
test
mov
mov
mov
xor
sub
cmc
jp
push
lret
xor
adc
pop
cmp
ds
dec
aam
gs
sbb
mov
mov
arpl
mov
mov
es
pusha
mov
or
loopne
add
xchg
push
inc
adc
cs
jmp
jmp
pop
sbb
bound
ds
mov
fsubrl
inc
xor
and
and
imul
fsubrs
inc
lock
sbb
inc
leave
add
push
movsl
outsl
push
dec
outsb
adcb
mov
aas
add
popf
rcll
xchg
inc
jae
movsl
mov
push
add
sbb
out
dec
sbb
sub
popa
in
clc
aaa
mov
xchg
or
pop
xchg
mov
aas
cwtl
mov
sbb
out
jae
jae
mov
test
pop
lods
iret
inc
dec
jge
push
outsl
stc
shrb
pop
xchg
adc
cmc
push
scas
jge
inc
xor
loopne
shll
cmpsb
insl
adc
mov
dec
mov
insb
data16
mov
mov
xchg
notl
and
mov
dec
ss
dec
push
inc
push
insb
and
sbb
xchg
inc
movsl
clc
cmp
cmp
sub
or
jne
js
sbb
pop
ja
mov
mov
fwait
shlb
aas
outsl
sar
iret
cld
leave
inc
sub
jg
fsubr
xor
cmpl
std
push
icebp
and
mov
dec
push
into
into
adcb
ror
into
sbb
lret
pop
jnp
push
stos
insb
or
push
mov
pop
xor
cmp
out
dec
jnp
cmpsl
call
xor
inc
rclb
xlat
pop
jno
pop
gs
enter
or
test
push
jmp
incb
inc
cmp
ljmp
scas
xchg
scas
adc
lods
and
jne
add
mov
sbb
mov
mov
imul
das
imul
xchg
test
mov
push
sub
xchg
push
addr16
loop
ret
jl
aad
inc
add
pushf
in
jo
addl
mov
movsl
outsb
insl
repnz
xchg
cmp
out
sub
repz
and
add
jp
test
jl
aam
add
neg
icebp
ljmp
imul
xchg
popa
into
nop
dec
push
das
rcll
movl
fcomps
lret
cmpsl
xor
in
icebp
fs
and
and
rclb
sahf
outsl
add
lods
insb
std
bound
aad
jo
in
cltd
out
test
pushf
lahf
repnz
icebp
stos
into
cmpsb
ret
cmc
call
xor
clc
push
or
rcrb
dec
push
ds
in
insb
cmp
test
mov
mov
je
aad
dec
pop
xlat
xor
adc
pop
adc
mov
sub
pusha
adc
sahf
xor
pop
ljmp
jo
push
sub
pushf
in
imul
pop
inc
mov
clc
ja
pop
andb
jo
inc
xor
lcall
add
repnz
out
adc
pop
fucompp
pop
movsl
test
add
lahf
call
arpl
loopne
push
inc
mov
popf
imul
mov
pop
movsb
hlt
fdivl
shll
cmpsb
out
not
js
jnp
mov
fdivp
lret
imull
enter
sub
and
out
lea
push
push
push
jle
repz
mov
dec
mov
outsl
scas
xchg
add
std
cli
cmp
addr16
cs
arpl
lods
cmp
pop
dec
shlb
insl
jge
push
jle
sbb
or
mov
dec
mov
in
push
aam
inc
mov
bound
ljmp
iret
xchg
adc
pop
and
pop
xchg
fstpl
inc
xor
mov
sbb
fcmovne
push
xchg
xor
and
icebp
lret
dec
jno
outsl
jnp
sub
pop
xor
cmpsb
jle
and
push
sub
repz
and
jbe
shrl
in
or
enter
mov
sub
ljmp
add
dec
inc
inc
ds
add
mov
xchg
jl
fsts
cmpsb
scas
scas
icebp
adc
movsl
sub
mov
cmp
inc
add
cmpsl
repnz
pop
adc
mov
adc
daa
into
repz
or
movsl
cltd
mov
ret
xchg
call
push
push
sbb
arpl
inc
or
cmp
pop
sub
fwait
add
push
sbb
loop
rorb
mul
xchg
and
xchg
push
jmp
inc
mov
push
hlt
dec
mov
mov
mov
je
lods
cli
xlat
orl
jg
aam
xor
stos
sarb
das
jae
push
adc
data16
addr16
and
push
adc
pop
iret
hlt
imul
and
jge
mov
add
in
inc
test
call
cmp
cltd
rcll
out
sti
jmp
pop
es
jnp
xor
mov
xchg
mov
cmp
lds
mov
fbld
cld
inc
fbstp
add
stc
lret
sbb
stos
xor
lahf
jb
pop
fistps
lcall
pushf
push
sahf
push
ds
pop
out
ljmp
dec
jnp
clc
sbb
xor
mov
stc
mov
gs
outsl
xor
cli
lahf
hlt
add
fcomp
out
xchg
sbb
adc
pop
sub
cmpsb
sub
adcl
jns
adcb
jmp
adc
cs
sub
xchg
pop
sub
movsb
and
je
sti
and
mov
and
jmp
ret
aad
push
jg
test
cmp
lret
hlt
add
pop
mov
jg
test
imul
inc
mov
out
shl
xchg
push
mov
sbb
jb
inc
sti
add
mov
enter
pop
xchg
sbb
jnp
and
lret
mov
dec
decl
cwtl
sub
fiaddl
add
rcrl
fmuls
pusha
test
out
adc
and
mov
cltd
andl
inc
cmpsl
lcall
inc
cmp
xchg
cmpb
aaa
mov
cmp
loope
xchg
jo
into
lret
test
jbe
lcall
repz
adc
mov
inc
stos
add
or
jns
and
mov
pop
xorl
jnp
ret
and
add
jns
dec
dec
dec
mov
mov
xor
repnz
jg
stos
in
js
mov
repz
adcl
das
sbb
jns
rorl
push
or
clc
mov
add
andb
mov
mov
pop
push
addr16
fucomp
clc
jno
mov
cltd
xchg
cmpsb
in
outsb
push
add
or
bound
test
push
cs
xchg
test
cmpsl
pop
sub
xor
jbe
jns
pop
test
dec
popf
rcll
cmp
mov
push
clc
jae
fistps
pop
add
sahf
insb
ljmp
mov
sbb
scas
dec
mov
pop
push
jno
das
cmp
rcrl
mov
shl
adc
mov
cmp
cld
dec
jg
add
or
mull
adc
fstpl
pop
aaa
lds
dec
cmp
jb
roll
jle
sbb
ss
xchg
inc
orb
cmp
popf
pop
mov
repz
mov
insb
jnp
rclb
cmpsl
sub
arpl
bound
aam
push
ss
xor
inc
inc
mull
push
xchg
and
dec
dec
call
xchg
add
push
inc
inc
lock
mov
xor
inc
mov
pop
mov
or
push
mov
sbb
es
adc
or
mov
mov
jl
loop
sub
loopne
dec
mov
or
add
adc
ss
loopne
jle
fldl
jno
inc
fadds
mov
xlat
hlt
and
sbb
ja
movl
xchg
mov
pop
shr
fcoml
mov
out
insb
mov
dec
mov
cmp
aad
add
cmp
fsubrs
jmp
cmp
enter
in
addr16
push
fcmove
sbb
popa
and
movsl
es
lods
push
je
and
mov
inc
scas
pop
into
jecxz
mov
xchg
dec
aaa
es
into
or
out
cmp
fcomps
xchg
adc
adc
pop
icebp
push
ljmp
mov
xchg
add
mov
lock
fprem
imul
dec
arpl
add
test
shlb
test
aad
push
popa
in
push
in
cli
xchg
xor
pop
rcll
nop
pop
scas
adc
leave
pop
dec
lock
adc
mov
mov
insl
inc
clc
mov
mov
mov
scas
dec
je
or
push
mov
enter
pop
xchg
or
sahf
or
ljmp
imul
or
sahf
ud2
pop
jle
subb
jnp
lret
pushf
push
jnp
mov
sub
jnp
dec
scas
or
xchg
sbb
std
jb
outsl
pop
stos
out
lret
adc
cmc
mov
jbe
js
rolb
ja
mov
push
adc
mov
call
leave
out
mov
ret
enter
aas
sub
scas
fwait
dec
sbb
notl
jno
in
cmp
mov
xor
clc
loop
jnp
into
ret
mov
add
bound
push
and
mov
pop
mov
adc
mov
sbb
fidivrl
sbb
test
or
clc
ficoms
adc
xchg
push
lock
xchg
cmp
sti
cmpsb
mov
mov
out
repz
leave
inc
xchg
push
lea
mov
nop
lock
push
jl
mov
sbb
mov
jge
add
in
sbb
pop
xchg
cwtl
loopne
iret
mov
mov
jnp
in
sbb
push
push
xchg
js
popa
nop
jmp
xor
mov
mov
rcl
push
inc
cmp
or
xor
bound
mov
mov
or
add
or
adc
adc
jecxz
pop
adc
imull
nop
and
xor
pushf
movsb
in
int3
add
testb
in
dec
dec
cmp
loop
hlt
and
jge
mov
test
inc
loopne
sbb
pusha
std
or
cld
xchg
mov
popa
std
sbb
lcall
mov
pop
inc
push
and
xchg
push
sbb
xchg
push
shll
out
jnp
icebp
fcmovnbe
pop
stc
lret
mov
mov
mov
out
pusha
and
pop
mov
push
dec
icebp
cmp
jne
imul
inc
pop
int
xlat
cmp
push
push
fistps
jb
xchg
mov
fdivrl
adc
add
push
rcll
sub
imul
repz
rcrb
into
fwait
bt
pop
cmp
aad
lds
jge
movsl
mov
mov
cmpsl
ja
lods
sbb
clc
loop
dec
cmpsl
ja
out
andps
dec
jnp
imul
testb
outsl
out
ds
sbb
dec
jbe
testb
shlb
jle
in
pop
jle
push
mov
cmpsl
push
add
gs
mov
movsl
out
cmpsb
insb
push
lock
leave
dec
test
sub
sub
push
xchg
arpl
xchg
pop
jp
test
cmpsb
push
js
mov
mov
jnp
iret
jns
sub
sbb
inc
in
int3
dec
mov
jecxz
jb
jecxz
test
out
push
pop
sub
add
or
cli
jne
dec
cmc
ss
xchg
mov
add
jno
inc
cmp
ret
or
rorl
shlb
mov
jb
pusha
pop
push
mov
scas
inc
adc
mov
xchg
ss
cmpsb
dec
add
scas
sub
out
adc
xor
add
shl
repnz
mov
push
jmp
popa
fisttpl
mov
xchg
or
add
jl
cmp
add
adcb
clc
mov
pop
pushf
test
int
xchg
cmp
pop
dec
and
add
sbb
insl
movsl
adc
push
cmpsb
clc
mov
cmp
mov
dec
pop
setne
add
dec
xor
iret
lock
aas
or
mov
pop
rolb
cmpsb
lods
lret
repz
adc
fstpt
enter
cmc
adc
scas
and
dec
das
cmp
add
push
loop
fsubrl
push
loope
out
mov
shr
mov
sub
cmpsb
fmulp
mulb
dec
pop
push
pop
sbb
inc
out
and
fdivrp
jbe
rorb
loop
dec
inc
in
lret
in
or
daa
mov
je
lahf
inc
popa
mov
fdivs
pop
ret
or
xchg
sub
push
push
icebp
div
ss
call
dec
in
inc
xor
jp
xchg
inc
xor
pop
dec
add
fcmovnb
or
lock
andb
pop
test
repz
imul
std
test
adc
es
rclb
xchg
das
pushf
fsubrl
mov
mov
leave
sbb
xchg
shlb
sbb
outsb
and
and
stos
cmpsl
and
inc
sbb
sub
das
add
cmp
cltd
xor
cmp
xchg
pop
fistpl
mov
icebp
pop
popf
push
and
sar
mov
ds
mov
shrb
mov
test
lret
insl
inc
push
inc
inc
dec
fnstcw
into
out
pop
pop
xor
cltd
sub
pop
inc
mov
aas
icebp
push
fs
or
shlb
aam
xlat
or
gs
mov
dec
imul
ja
cmp
xor
idivb
movb
inc
add
lahf
repnz
xchg
repnz
cli
into
scas
add
enter
adc
je
cmpsl
jne
out
cltd
in
jne
mov
repnz
pusha
mov
xor
jbe
cmpsl
mov
mov
dec
add
shlb
mulb
daa
rcrb
clc
xor
aas
nop
adc
push
cmpsl
daa
xor
aaa
push
adc
add
cmpsb
inc
into
mov
xchg
lock
dec
lret
mov
cmc
add
fidivl
in
movsl
xchg
mov
jle
lods
popa
fsub
or
jo
mov
je
push
bound
sub
pushf
add
leave
xchg
rcl
nop
fldl
and
stos
push
stos
and
adc
dec
repnz
pop
lret
insl
shr
fs
and
sub
rorb
push
fcmovne
fildll
cld
scas
sahf
aad
mov
lods
data16
push
fsubs
test
and
inc
add
mov
loopne
cld
sub
mov
inc
push
push
xchg
int3
push
inc
int3
cmp
int
mov
jnp
mov
cmp
mov
jae
negb
jnp
add
pop
je
int
lods
fnstcw
xor
xor
loopne
inc
shlb
mov
push
mov
mov
or
gs
icebp
scas
mov
and
add
stos
test
push
sub
sub
mov
adc
sub
repz
mov
lods
repz
gs
mov
sub
xor
bound
pop
ret
pop
xorb
clc
lods
in
dec
mov
rclb
sbb
mov
dec
mov
adcb
fiaddl
push
notl
or
fwait
adc
in
fsubl
inc
inc
or
adc
cmp
sub
stc
out
and
out
fimull
pop
xchg
dec
fwait
cltd
les
sahf
add
jecxz
or
lods
push
adc
adc
inc
pusha
inc
jg
mov
mov
rcr
dec
cltd
lods
jno
pusha
pop
scas
gs
adc
fcoms
push
ja
push
or
sub
mov
sub
imul
or
iret
mull
pop
shrd
mov
outsb
pushf
jb
data16
fcomi
std
int
mov
or
push
clc
xchg
jbe
or
lahf
test
xlat
and
cmpsl
mov
dec
inc
push
and
loop
or
imul
jmp
insb
pop
cmp
mov
shlb
pop
pop
dec
pop
mov
xor
hlt
adc
fnstenv
popf
fwait
lds
mov
mov
cmp
xor
xor
pop
loope
xchg
mov
push
mov
rclb
iret
mov
mov
jno
test
mov
inc
xor
xchg
stc
inc
push
jle
fistps
pop
cmp
inc
loope
mov
sub
sbb
xchg
mov
repnz
jmp
mov
mov
and
inc
addr16
sub
ljmp
dec
add
pop
les
cmp
inc
cli
push
mov
sbb
call
or
jne
inc
mov
mov
add
cmp
sar
cmpl
mov
ret
mov
ficomps
fildl
adc
xchg
int
jns
rol
jno
das
es
jecxz
in
sub
dec
mov
and
dec
push
xor
pop
dec
push
and
sbb
adc
idiv
cmp
in
jle
in
ja
adc
jbe
scas
adc
dec
jne
shlb
dec
mull
inc
ljmp
js
mov
in
insb
shrb
das
aam
or
in
jbe
call
in
inc
pop
and
push
xchg
fptan
bnd
push
daa
inc
loopne
cmp
xchg
enter
stc
popa
lret
loopne
xor
ss
inc
clc
scas
mov
aam
mov
jo
cmp
mov
popa
data16
inc
xchg
adc
mov
sti
push
dec
jns
xor
arpl
dec
mov
aad
xor
in
loop
jns
mov
inc
push
es
cmpsl
mull
add
pusha
sub
pop
mov
sbb
test
or
stos
xor
mov
sbb
or
das
fwait
addb
ljmp
mov
inc
movsl
push
xchg
push
cmp
mov
inc
sub
test
mov
movsb
xlat
lahf
dec
inc
mov
mov
ret
mov
ljmp
out
push
or
shrb
inc
cmc
jne
dec
out
lahf
jne
sbb
inc
leave
scas
pop
jae
daa
pusha
cld
jmp
shlb
addr16
aad
push
jbe
pop
fcoms
jno
and
cpuid
inc
jecxz
pop
test
add
stos
mov
jns
push
mov
jb
fwait
push
inc
cwtl
sbb
movsb
mov
pop
das
dec
rcll
xchg
decb
xchg
xchg
jg
pop
in
call
fdivs
out
fadds
and
xor
inc
cld
dec
dec
inc
sub
aad
mov
dec
dec
adc
jl
add
cmp
inc
loopne
jecxz
xor
dec
jle
lea
or
inc
mov
xchg
dec
mov
test
shrl
xor
loopne
sub
and
fcoml
popa
test
orl
or
pop
scas
sahf
inc
dec
aad
xor
xchg
jp
movsb
sub
jle
pop
sbbl
pop
mov
jge
sub
aad
mov
sbb
or
pop
fldenv
fdivl
out
mov
jg
xchg
addb
call
sub
pushf
push
icebp
cmp
inc
lods
or
cwtl
inc
sbb
repz
push
js
mov
aad
mov
push
mov
inc
pop
xchg
cmp
mov
cmp
bound
dec
sahf
dec
jge
mov
out
push
pop
jns
cmp
arpl
ss
ficompl
push
hlt
aas
jne
loopne
adc
fimull
jg
sbb
subl
loopne
jbe
movsb
orl
mov
and
pop
sub
cs
pop
dec
je
pop
popa
mov
call
in
stos
push
andb
inc
mov
xchg
xchg
iret
in
lea
fiadds
push
aas
jp
sub
pop
inc
add
or
xor
and
sbbl
push
mov
sub
xchg
ret
lods
insb
lahf
movsb
cmpsl
xchg
xchg
and
adc
outsl
scas
das
and
ss
push
aas
or
mov
insl
fidivs
cmpb
or
xchg
mov
cmp
repz
leave
enter
mov
xchg
adc
loopne
xchg
cmp
fwait
pop
ret
sahf
and
mov
fs
and
xchg
mov
inc
movsl
add
cmpl
in
inc
std
scas
sbb
sub
mov
aad
lea
pop
in
pop
in
add
clc
mov
jge
xchg
sub
push
xchg
and
stos
hlt
pushf
imul
and
mov
pop
popf
shrb
ror
or
pop
or
icebp
fcompl
add
dec
push
pop
sub
xchg
xchg
cli
jmp
inc
pop
mov
sub
push
cmp
xchg
arpl
adcl
ja
je
lahf
orl
ljmp
mov
push
loope
jl
loopne
add
mov
loope
mov
imul
inc
int3
inc
shll
sub
bound
xchg
dec
out
push
sahf
pop
mov
ficompl
jmp
xor
mov
flds
fldl
cld
into
pop
aad
push
inc
jnp
in
nop
aas
out
sub
inc
mov
std
call
xor
cwtl
inc
mov
in
insl
les
adc
adc
dec
paddsb
mov
pusha
in
inc
inc
pop
and
sti
and
jns
xor
and
mov
scas
cltd
subb
cmp
jmp
xor
pusha
mov
mov
push
pop
test
loope
fdivs
lea
fcomps
cltd
fmul
jmp
outsl
mov
dec
aam
mov
je
stc
insl
nop
mov
out
xchg
xchg
aas
push
xchg
dec
mov
pop
loop
in
push
xchg
negl
sub
std
dec
inc
sbb
sahf
mov
jmp
cld
dec
add
add
aaa
mov
lret
jns
ljmp
shll
lret
ds
dec
push
mov
cmpsb
xor
in
ss
jnp
or
and
ja
sub
mov
mov
pusha
cmp
out
jo
mov
enter
cmp
ficoms
add
addr16
mov
aas
insb
decl
clc
push
lds
mov
dec
insb
enter
fstps
shlb
jl
xchg
push
mov
in
jae
pop
gs
xchg
subl
ret
out
fs
mov
lea
call
sub
ljmp
mov
pop
test
aam
js
cmp
lret
sub
xchg
pop
jnp
call
add
fwait
push
inc
fs
cmp
mov
nop
out
shr
out
pop
add
cltd
pop
aaa
or
push
jnp
std
es
aas
jns
pop
xchg
lds
movsb
inc
pusha
in
mov
hlt
push
adc
pop
dec
addr16
add
fwait
insl
adc
jl
pop
ret
xor
bound
stos
sti
sbb
in
mov
mov
mov
fstps
xchg
mov
addr16
clc
fwait
jae
mov
dec
sub
outsl
sar
int3
lret
das
or
sti
out
data16
ss
mov
jno
sub
cmp
cmpsl
test
and
out
pop
lcall
add
add
test
loope
jo
out
jle
lcall
cmpsb
std
dec
sbbb
inc
lcall
xor
imul
lods
mov
dec
cmp
shll
stos
inc
xor
mov
aaa
outsb
push
popa
imul
bound
aad
mov
inc
jns
xor
xor
sti
imul
daa
sbb
pop
xchg
cld
cs
xor
mov
adc
sbb
or
xchg
pushf
cmp
pop
mov
ficoms
adc
or
insl
cmp
lods
mov
fmull
clc
loop
xor
outsb
inc
test
mov
cmpsb
mov
cmp
ja
pop
push
rcrb
dec
sbb
ret
inc
cmp
mov
pop
and
sub
outsl
adc
stos
mov
adc
xlat
in
es
lret
lret
pshufw
mov
cmp
inc
xchg
cmp
imulb
lret
cltd
roll
add
inc
sbb
ja
sbb
inc
xor
loop
cmp
rorl
lcall
sub
jae
int
lods
pop
push
pop
into
adc
or
in
bound
sahf
test
jbe
jno
sarl
divl
mov
mov
mov
outsl
mov
pop
inc
jne
push
subl
mov
push
lock
xor
adc
enter
mov
mov
in
mov
push
frstor
mov
aad
or
inc
inc
outsb
push
iret
pop
cmp
mov
xchg
or
push
mov
shl
das
aam
aad
arpl
lods
jns
jmp
fistpll
hlt
nop
xchg
dec
push
cld
or
shlw
in
mov
xchg
test
mov
mov
fcmove
mov
aam
arpl
mov
les
scas
sbb
arpl
mov
and
push
sub
cmpsb
insb
add
sbb
sbb
scas
aaa
or
sarb
aas
mov
and
inc
mov
push
cld
lret
mov
call
fldt
sti
test
test
pop
imul
add
cmpsl
pop
cmp
mov
bound
push
lock
into
inc
xor
mov
clc
xlat
sbb
xchg
inc
fisttpl
lret
jmp
jp
aad
jno
inc
adc
pushf
cmc
xor
vpunpckhbw
mov
or
dec
stos
hlt
xor
lret
ret
popf
pop
mov
fwait
js
pop
inc
fcoml
sarl
add
xchg
sub
and
orl
xchg
repz
mov
jb
cmp
hlt
das
xor
icebp
js
dec
xor
jecxz
add
ror
push
push
stos
xchg
jmp
jge
cs
jns
fcomps
adc
aad
lds
jbe
dec
lea
out
sbb
mov
out
insb
pop
lea
or
xor
sbb
rclb
vpcmpeqb
out
nop
and
in
jge
js
lods
popf
mov
mov
push
inc
dec
outsl
int
mov
ret
dec
push
in
xchg
and
enter
roll
sti
mov
fs
sbb
call
ja
out
aas
inc
fsubrp
add
pop
mov
sbb
faddl
in
sub
adc
xchg
out
cmp
inc
push
pop
jns
push
sub
movsl
stos
push
jbe
mov
movsb
jle
fstps
push
ret
sub
in
sbb
out
stos
sbb
lods
and
ret
shlb
sbb
fucomp
and
int
or
push
fists
xchg
or
insb
popa
daa
jno
mov
cmc
xor
cmp
push
fwait
adc
jno
cs
int3
cld
movsl
lret
aad
push
stc
cltd
push
fnsave
or
daa
xchg
rcrl
lea
sub
out
test
xchg
jmp
xchg
es
fists
ss
incl
push
pop
cmp
or
fwait
pop
shr
push
sbb
adc
loopne
movsl
push
test
push
add
int
cltd
mov
lahf
xchg
dec
and
ljmp
das
and
mov
sbb
lods
add
icebp
sbb
mov
daa
push
aad
sbb
mov
imulb
push
inc
mov
jb
jp
pushf
mov
roll
gs
in
bswap
sub
push
xor
mov
lret
fs
xchg
mov
js
push
mov
ficoms
fisttpll
adc
sub
xorps
in
leave
lea
in
aas
lock
lea
pop
jmp
mov
or
adc
push
rol
ret
sbbl
pop
pop
sub
xlat
dec
and
test
adc
mov
lahf
jge
fisubl
insb
sbb
xchg
pop
dec
repz
lock
outsl
push
dec
dec
out
jne
push
in
repnz
int3
xchg
xor
and
rcll
push
xchg
movsl
pop
pop
negb
idivb
or
pop
dec
and
into
testb
cli
add
dec
icebp
fadds
inc
dec
dec
sbb
das
stos
pusha
or
xchg
inc
mov
addr16
jb
fsubl
shrl
pushf
orb
aam
pop
dec
push
add
or
sbb
fs
and
ds
pusha
push
sub
xchg
call
sahf
mov
out
cmp
out
or
inc
or
pop
addr16
mov
and
gs
xor
stos
jp
ret
std
xchg
jno
xor
cmp
fs
mov
test
add
sub
push
mov
loop
fdivrs
xor
cmp
das
jnp
orl
pop
iret
aaa
negl
adc
insb
push
jnp
nop
inc
cmp
lock
into
mov
aaa
cld
iret
dec
dec
pop
inc
lods
push
and
mov
xchg
xorb
inc
loopne
loope
ret
or
and
outsl
in
or
dec
mov
mov
push
and
pop
idivl
nop
mov
arpl
inc
or
andb
sbb
push
mov
adc
sbbb
pop
or
cld
jmp
enter
push
int
popa
sbb
movsl
pop
scas
fucomp
ret
data16
xchg
pop
mov
mov
aaa
cmc
and
fisubl
movsl
push
push
xchg
push
mov
cli
mov
xorl
jge
out
jbe
fcomp
scas
test
mov
out
fcompl
pop
mov
rcrb
nop
lock
cmp
aad
push
push
push
mov
lret
popf
jg
mov
clc
idivl
xchg
pusha
cmpxchg
xchg
call
jbe
movsl
nop
or
subb
pop
pop
scas
mov
out
add
movsb
enter
mov
lcall
dec
push
pop
imul
test
jp
xchg
mov
popa
lahf
cld
dec
addl
in
cmp
xchg
mov
dec
jbe
mov
lods
push
test
stc
aas
sbb
addr16
xor
mov
mov
scas
aaa
ljmp
xchg
out
in
sbbl
mov
cld
add
jb
pusha
in
stc
adc
mov
xchg
repnz
in
pop
call
shlb
sbb
test
data16
subb
cmp
cli
adc
dec
aaa
or
add
push
push
fcomi
stc
mov
fst
xlat
imul
mov
xlat
in
rclb
nop
sub
mov
lret
lahf
inc
test
xchg
call
push
xor
mov
mov
imul
test
loope
add
fdivrl
cmp
add
lds
rcrl
aad
aam
adc
dec
mov
scas
cmp
inc
cltd
ret
jns
iret
in
cmpsb
test
push
cmpsb
outsb
add
or
cltd
push
mov
subl
imul
loopne
add
push
mov
insb
and
dec
pop
mov
shl
jmp
outsb
mov
or
adc
xor
cs
cmp
fbstp
pop
mov
scas
dec
fcompl
addl
je
adc
repnz
jns
ds
hlt
out
fsubrl
xor
inc
jg
inc
pop
dec
rcrl
in
arpl
push
xchg
jns
mov
mov
aaa
sbb
jns
ret
scas
push
and
cs
lcall
cltd
clc
lret
push
xchg
mov
dec
ds
lods
sub
cs
and
out
mov
adc
ror
dec
cmp
mov
push
or
test
imul
and
loop
leave
fdivs
xchg
repz
push
lcall
inc
cs
rcr
fstl
js
sub
mov
xor
out
adc
push
stc
xor
stc
hlt
xchg
xchg
loop
mov
js
test
or
mov
dec
pop
fnsave
mov
push
das
das
mov
and
lock
shlb
pushf
cmp
sub
stc
test
adc
push
aaa
cli
cmp
stos
lea
mov
dec
sbb
xchg
cmp
push
push
loop
inc
outsl
pop
sub
sub
push
sahf
lcall
insl
ret
cld
repnz
adc
ret
xlat
movsb
mov
stc
jbe
dec
js
mov
lods
and
cmp
lret
loop
inc
adc
adc
je
sbb
stos
mov
shl
insl
and
in
nop
jecxz
andl
jecxz
add
sub
cltd
inc
mov
and
xchg
sbb
mov
in
enter
call
incb
jge
inc
cltd
mov
lret
fs
jl
sarl
sbb
mov
outsl
shlb
sbbb
pushf
sub
cmp
in
adc
push
cmp
pop
sub
lret
xchg
test
lcall
pop
xlat
xchg
mov
mov
and
addr16
or
fsubl
ret
mov
cmp
mov
fdivrp
push
jge
ret
enter
push
pusha
inc
es
fwait
addr16
lcall
gs
inc
divl
push
dec
push
push
es
jecxz
pop
sbb
and
xor
sbb
or
lea
add
adc
ficoms
imul
xchg
push
popa
jmp
mov
mov
jg
and
std
sbb
inc
pop
das
mov
daa
loope
rorl
pop
or
js
je
mov
xor
mov
mov
movsl
les
or
addr16
push
jae
push
sub
sub
lret
cmp
xchg
add
daa
ljmp
push
mov
loopne
pop
inc
insl
adc
enter
ja
stos
lock
cmpsb
adc
cmpsl
adc
xchg
fbld
add
sbb
dec
hlt
mov
mov
rep
sbb
ret
mov
test
inc
adc
push
pop
std
add
jns
nop
test
jns
and
and
orb
push
ss
mov
xor
sub
jle
into
jb
adc
xchg
cli
xchg
mov
mov
mov
das
add
iret
pop
mov
outsl
add
and
cmp
sti
and
or
rcr
test
sub
std
add
or
stos
in
pop
sti
fwait
push
repnz
fs
xor
sarb
sbb
sub
in
mulb
and
push
sub
mov
call
call
and
or
repz
and
popa
imulb
add
mov
aas
aaa
aam
movsb
add
nop
adc
loop
ss
in
incl
into
cmp
je
dec
sub
add
xor
sub
mov
ret
mov
shr
mov
jbe
add
or
mov
add
aam
or
xchg
addl
inc
je
or
jmp
in
ret
fwait
aam
mov
inc
stos
jns
push
cwtl
call
fiaddl
pop
inc
push
stc
out
or
insl
jo
and
iret
sti
pushf
mov
mov
push
mov
lds
adc
mov
test
inc
sbb
movsl
xchg
push
pop
mov
stc
dec
iret
test
pushf
out
cld
xchg
cmp
andl
dec
sbb
mov
daa
and
pop
jg
jmp
xchg
mov
cmp
gs
adc
jg
or
push
dec
sti
int3
popa
cmp
fsubrl
xor
inc
dec
loop
push
test
inc
lret
cmp
sub
testb
dec
xchg
and
out
dec
adc
cmp
in
daa
jno
icebp
inc
xchg
pusha
roll
hlt
add
data16
loopne
push
pop
insl
lea
inc
dec
imull
fcoml
pop
flds
mov
repz
sub
xor
mov
and
loope
fdivrs
push
jo
test
inc
push
fs
cli
je
stc
out
call
push
lret
test
faddp
pop
rol
jns
out
sbb
movsl
cwtl
loopne
popf
mov
mov
out
or
test
add
inc
mov
ret
xchg
int
ljmp
push
outsl
and
shl
mov
jp
lcall
or
aam
pop
sbb
or
sbb
mov
aad
lret
insb
sub
cmp
stos
pop
inc
cmp
ss
loopne
das
dec
inc
add
iret
lahf
inc
cmp
mov
rcrb
pushf
pop
ds
shrb
pushf
xchg
mov
dec
frstor
out
jl
lret
pop
inc
in
mull
ret
push
xchg
adc
pop
rol
jle
cmp
in
mov
insb
adc
dec
loop
or
mov
add
in
mov
mov
repz
popa
fwait
or
pusha
add
xor
cmp
mov
xchg
sub
mov
leave
fs
push
mov
push
pop
push
lahf
sbb
imul
ss
mov
and
js
sbb
insl
je
mov
int
mov
dec
pop
add
out
push
or
bound
jns
xlat
mov
mov
dec
xorb
sbb
orb
cmp
fcmovnbe
pushf
inc
cwtl
mov
jo
sub
sbb
std
adcb
test
lret
jl,pn
addr16
add
mov
bswap
and
out
mov
sbb
or
pop
leave
sub
mov
sub
scas
cltd
sbb
cmp
and
dec
or
inc
pop
adc
call
cmp
mov
and
into
mov
xchg
fmull
or
dec
imul
in
aas
add
out
hlt
into
mov
into
xchg
mov
sub
out
xchg
mov
movsb
dec
out
xchg
dec
jae
daa
mov
adc
sti
aas
int3
cs
jp
mov
hlt
pop
unpcklps
lahf
leave
mov
ljmp
test
xchg
inc
das
mov
add
cmp
pusha
popf
xchg
mov
mov
hlt
inc
push
scas
dec
aas
xor
or
jmp
xchg
mov
push
stos
mov
mov
sub
fs
lods
outsb
out
outsl
mov
and
or
dec
ljmp
shlb
pop
leave
int3
dec
push
popf
pop
adc
mov
and
mov
inc
loope
sub
mov
mov
int3
pop
aad
jp
sub
lods
dec
or
or
fwait
mov
mov
xchg
adc
and
rclb
shll
sbb
aam
outsb
out
cmp
xor
mov
mov
sti
ret
adc
xlat
inc
xor
inc
mov
dec
lods
pop
adc
and
xor
scas
add
xor
ds
push
jle
adc
ret
scas
pop
lret
dec
ret
push
mov
jle
ljmp
xor
ret
xor
inc
pop
js
mov
push
xor
xor
and
imul
cmpb
insl
out
or
ret
daa
xor
or
dec
loopne
xchg
lahf
rorl
repz
jge
mov
pushw
ljmp
mov
std
mov
icebp
push
jno
push
std
repnz
sbb
ret
fwait
sbb
sahf
sti
shlb
mov
xchg
pushf
std
loop
add
or
fists
cmpsl
daa
pop
jp
lds
mov
iret
mov
and
lds
jle
push
jno
sub
xchg
scas
mov
into
jns
add
fcompl
sti
pop
mov
add
or
jge
adc
lock
out
pop
add
in
sub
sub
pusha
adc
mov
mov
inc
push
push
arpl
roll
cmp
mov
jns
into
int
out
mov
lahf
fmuls
clc
cmp
cmp
mov
pop
xchg
hlt
mov
add
push
xchg
sbb
inc
cmc
repnz
xor
lods
pop
xor
sarl
je
sub
xor
ljmp
rcrb
cmpsl
inc
test
and
or
je
add
mov
jg
sub
stc
push
sbb
sbb
sahf
bound
xor
dec
pop
sbb
lds
push
sbb
sbb
xlat
mov
aad
scas
mov
and
adc
pop
in
out
xchg
pop
mov
popa
xor
xchg
pop
xchg
sbb
jmp
jle
loop
ret
dec
imul
cmpl
imul
mov
xor
add
mov
cmp
mov
xchg
ficomps
cmpsl
inc
daa
mov
ds
out
pusha
sbb
aam
out
mov
lret
rcrb
aas
jecxz
adc
mov
push
mov
jno
sub
and
lea
jge
addb
cmp
fstl
aas
dec
mov
fwait
lret
pop
xchg
adc
push
inc
mov
js
jae
shlb
sub
rolb
pushf
popf
xor
adc
jp
push
test
xchg
xor
jb
pop
ret
sub
stos
dec
add
inc
ret
sahf
adc
loope
push
pop
pop
adc
add
mov
test
jne
cli
dec
add
xchg
pusha
int
mov
cmp
xchg
sub
mov
in
out
imul
daa
ljmp
sbb
insl
add
and
iret
lret
ja
xlat
inc
xchg
push
loop
ds
dec
dec
or
std
mov
sbb
push
dec
inc
mov
dec
scas
sub
pop
clc
pop
pop
mov
scas
daa
pop
push
loope
sarl
fildl
jno
ret
mov
stos
dec
and
xor
inc
sbb
repnz
mov
fcomps
test
sbb
sti
mov
scas
movd
push
sti
cmc
mov
lea
lcall
dec
push
mov
xor
pop
in
xor
andl
inc
into
inc
loope
add
jno
out
lock
cli
mov
pop
jge
daa
cld
and
data16
cmp
call
shll
mov
std
sub
pop
pop
test
sbb
cwtl
mov
add
jne
push
add
into
stos
push
cwtl
lds
ljmp
cmp
cmp
lahf
hlt
mov
xor
pop
and
dec
out
fmuls
jae
pop
push
fistpl
pop
inc
shr
mov
cmpl
xchg
out
xor
sub
mov
jmp
in
jo
mov
int
mov
sbb
stos
jbe
sbb
les
in
pop
push
adc
test
loop
pop
mov
pop
fstps
test
std
mov
add
addr16
sub
sub
stc
and
mov
dec
lret
comiss
movsb
subl
mov
andl
mov
or
jle
inc
push
dec
mov
jne
adc
xchg
std
sbb
inc
cs
pushf
push
sub
mov
jae
sub
leave
negl
push
dec
xor
mov
jb
mov
xchg
por
sub
mov
clc
mov
mov
stos
pop
xchg
jp
mov
and
mov
add
sbb
adc
fs
mov
aas
mov
ret
stc
mov
mov
addb
inc
dec
ljmp
cmc
std
adc
push
add
scas
xor
shr
add
jo
adc
mov
mov
inc
adc
adc
addr16
ja
jg
xor
movsl
aas
or
into
call
mov
dec
xchg
repz
js
adc
inc
inc
add
xchg
int
pop
pop
xchg
pop
out
test
je
sarl
ret
pop
adcl
cmpsb
xchg
or
inc
xchg
lcall
rcrb
fsubr
cmp
arpl
sbb
mov
lahf
les
push
pop
xchg
paddusb
fsubrp
hlt
jg
adc
sbb
push
or
push
in
adc
dec
sti
rclb
jmp
lods
imul
inc
movsl
imul
repnz
jp
inc
in
lock
pop
test
mov
adc
mov
dec
pushf
add
jl
flds
lea
dec
push
xor
subl
pop
and
mov
testl
popa
stc
data16
xor
insb
enter
mov
lcall
adc
fsubs
cmc
or
xlat
sub
test
ret
rcll
insb
xchg
jne
adc
adc
aam
lods
pusha
jae,pt
cmp
filds
mov
adc
ficoml
and
test
ljmp
mov
pop
leave
pushf
loope
out
je
dec
mov
dec
cmp
mov
jns
or
pop
mov
insb
or
mov
jle
cmp
int3
push
int3
add
mov
mov
push
adc
ds
sahf
lock
xchg
sbb
test
xchg
int
mov
jge
js
push
push
xlat
add
or
into
dec
sbb
xlat
mov
sbb
fidivl
lcall
jge
lds
fsubrp
xor
pop
sub
jbe
xchg
push
fbld
faddl
int
out
inc
arpl
inc
cmc
fldenv
enter
xchg
enter
jmp
sti
sbb
scas
imul
xchg
cld
imul
je
enter
sbbb
add
pop
scas
test
push
icebp
mov
sub
pop
pusha
add
cmp
xchg
jo
inc
hlt
push
shrl
lret
das
jo
lds
jo
push
xor
fwait
add
int3
cmp
sbb
push
pop
xor
sub
gs
aam
dec
pop
mov
popf
push
pop
mov
inc
stos
cmp
icebp
ds
sub
je
ror
or
push
outsl
sub
pusha
movsb
sub
sbb
in
data16
push
adc
aas
cmpsb
shrb
fisubrs
xchg
iret
in
fstl
lods
add
cwtl
leave
jecxz
enter
mov
mov
sbb
subl
cmp
and
and
add
fistpl
jl
mov
adc
lods
push
ret
cmp
in
or
outsb
outsl
sub
ss
dec
inc
arpl
xchg
push
sar
xchg
clc
ficoms
out
add
jno
push
les
or
rolb
inc
fisttpll
mov
lret
cmp
inc
and
lcall
xor
sbb
je
jle
movsl
jecxz
mov
dec
inc
icebp
test
dec
imul
mov
mov
imul
and
lret
fildll
push
mov
cmpsl
mov
xor
imul
and
scas
cmp
out
add
pop
mov
lods
jns
movsb
nop
sarl
xor
mov
jg
int3
loope
inc
aaa
jo
jno
sarl
sub
jp
outsb
ret
les
inc
sub
js
dec
orl
orb
ss
inc
dec
sbb
shl
mov
and
jl
push
or
and
nop
into
pop
loope
outsl
sub
addl
xchg
jne
pop
fwait
mov
xchg
mov
jecxz
mov
pop
scas
or
push
mov
enter
cmp
dec
xor
sub
cmp
frndint
hlt
sbb
dec
dec
push
dec
ja
sbb
sbb
movsb
setp
mov
and
cmc
sbb
add
xlat
clc
cmc
cmpsb
fbld
loopne
xor
sbb
mov
xchg
pop
cld
cmp
dec
pop
movsl
cmp
call
lahf
aam
xor
mov
insl
jg
fnstcw
xor
int3
je
mov
movsl
xor
push
das
push
sub
out
sub
fnstenv
imulb
insl
loopne
sub
push
adc
jge
pusha
add
and
sub
jno
jno
xchg
dec
mov
jno
push
bnd
push
and
orb
push
call
add
shll
add
sub
or
sti
dec
insb
imulb
mov
imull
test
mov
and
aad
mov
std
mov
or
loope
or
sbb
pusha
push
leave
pop
add
rcll
popf
push
xchg
shll
repnz
movsb
repz
sbbb
mov
cmp
inc
insb
sarb
faddl
mov
dec
sti
fwait
push
push
rorb
pop
xor
popf
inc
mov
mov
pop
insl
in
push
mov
pop
dec
dec
mov
jg
sbb
ret
stos
cmpsl
aaa
xor
popa
popa
mov
in
aas
iret
push
jg
andl
rcr
sbb
pusha
es
sbb
sub
rcrl
dec
adc
add
mov
mov
enter
push
call
repz
cmp
fisttpl
imul
jle
inc
loopne
and
sahf
mov
mov
hlt
mov
xor
pop
push
fdivrl
and
adc
push
aas
cli
scas
cmpsl
mov
dec
insl
cmp
inc
sub
mov
test
inc
jle
cmp
loop
pop
mov
jge
pop
mov
test
adc
push
lods
cmp
fldenv
sub
andl
and
outsb
jo
in
pop
jmp
push
pushf
stos
scas
adc
imul
adc
ds
mov
out
inc
mov
jmp
mov
sbb
push
fcmovb
sbb
mov
test
clc
sarb
adc
pop
jns
sbb
clc
lds
jp
in
push
dec
sbb
pop
and
inc
rorl
mov
popa
loope
push
mov
out
outsb
fisubl
mov
cmp
les
cmp
jp
mov
insb
adc
ret
pop
sahf
mov
outsb
and
aaa
xchg
and
ror
mov
leave
in
jg
enter
and
push
add
out
cmpsb
and
jg
jle
les
les
sbb
mov
adc
jg
pxor
sub
or
and
cmp
or
cmp
enter
jge
xchg
inc
fdiv
push
test
jns
sub
int
push
roll
jl
push
fiadds
jle
test
cmp
mov
adc
lea
shll
lods
mov
mov
addr16
pop
dec
fwait
sub
fnstenv
xchg
ds
mov
xchg
mov
testb
daa
push
fdivr
loop
fildl
inc
enter
cmp
cmp
jae
mov
pop
fdivrp
jbe
sbb
cwtl
mov
fwait
cmc
mov
sub
push
scas
push
je
jmp
dec
jl
dec
add
cmp
les
xorl
decb
lahf
push
out
jno
mov
and
pop
mov
mov
jl
lods
xor
adc
mov
insl
push
mov
xor
loope
loopne
mov
push
cmpsb
dec
inc
in
fmull
push
xchg
dec
push
lret
ret
lcall
les
adc
mov
xor
call
adc
inc
nop
popf
cwtl
fistpll
sbbb
pop
sub
lods
cmp
fcoml
mov
jbe
popa
shll
lods
adc
arpl
mov
jmp
mov
cmc
and
cmp
jno
push
popa
ja
scas
insl
in
add
loope
and
adc
adc
es
cmp
mov
aaa
pop
mov
cld
loopne
or
push
adc
inc
lock
stc
mov
mov
inc
mov
cmp
adc
dec
cli
xor
mov
inc
shl
stos
outsb
shrl
cmc
movsl
jbe
daa
jnp
or
movsl
push
dec
mov
jae
sub
cmp
mov
push
ja
ret
loopne
dec
xor
jbe
push
pop
test
fs
push
insb
fisubl
inc
cmp
add
iret
dec
cli
sub
sbb
fisubrl
test
sahf
inc
pop
add
xchg
jnp
jae
or
das
push
adc
adc
sbb
call
out
push
fidivs
scas
push
pop
fimuls
or
xor
mov
repz
mov
aas
sbb
inc
out
xlat
fisubrl
jecxz
mov
push
aas
aam
cltd
push
mov
cli
mov
int
test
jp
cmp
pop
outsl
mov
push
or
mov
mov
add
ret
insl
dec
xlat
cli
aam
sub
pop
pop
aad
pop
add
adc
rcll
bound
sub
ds
stos
sub
mov
lods
pop
data16
sub
cld
inc
leave
daa
int
in
inc
add
adc
les
add
out
xchg
adc
jp
sub
adcb
or
stos
mov
inc
jecxz
jns
mov
ja
cwtl
or
lods
icebp
mov
and
aam
int
or
lahf
sbb
enter
inc
mov
sbb
sbb
arpl
aaa
add
xchg
scas
mov
pop
outsb
inc
or
jo
int3
mov
aaa
enter
aas
xor
aam
xor
dec
push
xchg
xchg
mov
mov
mov
cmp
adc
mov
aaa
adc
loopne
ljmp
or
jge
inc
rolb
leave
push
loope
lea
mov
cmp
movsb
mov
popa
ret
or
call
mov
cmpsb
cwtl
xchg
fs
or
repnz
mov
adc
test
fsubs
and
fcomp
jae
in
data16
ljmp
leave
fbstp
pop
fs
push
push
loope
icebp
frstor
and
or
adc
and
push
mov
aas
out
dec
shlb
mov
push
adc
ds
mov
pop
jns
and
push
push
push
and
add
vmovss
xchg
cmp
in
mov
add
sti
push
push
adc
aas
cld
das
out
jmp
inc
nop
inc
aaa
sub
mov
es
sbb
rcrb
or
jecxz
aas
lret
dec
shll
je
cs
adc
fisubrl
or
mov
or
sub
vminpd
dec
sub
mov
mov
in
movb
xlat
in
repz
int3
xlat
shl
and
xor
mov
or
pop
jg
cmp
icebp
cli
clc
adc
fmul
stc
jbe
int3
popa
loope
iret
or
jle
add
and
cmp
ret
in
imul
lahf
cmp
rcr
adc
mov
jp
lret
insl
in
cltd
xor
sub
and
les
imul
push
lahf
js
rcrl
inc
ficomps
xor
scas
push
sub
sub
push
loope
jge
cmp
insb
push
xchg
jle
mov
mov
inc
or
hlt
iret
or
lret
mov
insb
or
hlt
adc
dec
mov
push
inc
sti
pop
jg
fcoms
out
divb
shlb
cmp
or
sub
mov
fdivl
leave
leave
add
sahf
jo
inc
push
dec
jmp
jb
fcoml
pop
pop
mov
cmpsl
inc
rcr
cmp
jo
lret
jb
push
xchg
out
lods
mov
or
cwtl
pop
test
add
popf
push
repnz
or
inc
sbb
fucom
movsb
jmp
aas
call
xchg
insb
adc
sarl
inc
add
xor
das
sbb
int3
dec
aas
mov
aam
add
or
fwait
xor
fcmove
mov
sbb
inc
subb
dec
ss
and
gs
cmpsb
stos
daa
into
dec
out
xchg
sub
mov
mov
mov
xchg
lods
jo
or
pop
xchg
sub
mov
xor
loope
mov
decb
or
mov
pop
pushf
add
loope
js
dec
fimull
inc
call
or
sbb
add
addr16
xor
adc
cmp
inc
mov
sarl
mov
xchg
sub
mov
pushl
push
popf
mov
adc
inc
dec
bound
jo
imul
cmpsb
add
movsl
and
dec
xor
mov
dec
and
cmpsb
inc
push
arpl
inc
into
xchg
lods
fs
xlat
jle
ret
mov
pop
pop
inc
hlt
sbb
hlt
cmp
adc
rcrl
push
jb
aaa
pop
mov
pop
sahf
push
sub
test
andl
inc
xor
int3
into
mov
inc
lret
rcrl
dec
loop
jecxz
or
dec
jb
or
imul
fwait
popf
xor
repnz
ljmp
fidivrl
xor
jp
pop
call
pop
sub
cwtl
std
idiv
add
pop
outsl
sbb
leave
cmp
ja
or
pusha
xor
push
mov
inc
lods
shlb
jle
pop
inc
dec
xchg
push
ret
or
pop
dec
sarb
iret
dec
imul
rorl
inc
mov
adc
push
inc
add
mov
int
sbb
add
xchg
pop
xchg
dec
adc
scas
repz
es
or
or
call
mov
pop
mov
cwtl
out
and
cmp
lahf
inc
rorb
jo
jns
push
and
add
mov
push
ret
cmpsb
adc
pop
or
call
adc
in
pop
pop
mov
lds
cmp
aaa
arpl
push
in
sbb
jecxz
arpl
adc
ret
test
adc
js
push
pop
and
adc
push
add
lods
fistpl
jb
popf
aam
cs
loope
fwait
jge
cld
jb
jb
ficompl
add
push
mov
mov
rclb
dec
jns
cmc
scas
fistpl
and
dec
dec
loopne
add
push
lods
mov
popf
movsl
movsb
aam
js
addr16
ljmp
test
sub
pop
pop
jns
out
and
dec
jo
fnstcw
sti
pop
jns
add
dec
dec
push
push
dec
mov
enter
dec
jb
bndstx
mov
nop
call
inc
pushl
cmp
mov
in
ja
push
adc
xor
jl
out
in
adc
mov
jae
gs
xchg
stos
pop
fimull
pushf
lock
mov
cmpsl
call
cmp
pushl
lret
dec
mov
rorl
push
arpl
repnz
pop
mov
test
sbb
sahf
fidivl
cmc
jl
enter
fdivs
std
sbb
data16
and
fdivrl
sti
insl
xorb
adc
dec
dec
cmp
pop
fwait
sti
rorl
dec
movsb
sahf
pop
lods
xchg
xchg
ret
dec
xchg
sub
and
push
jb
xorl
xchg
push
sbb
jl
fadds
or
nop
cmp
pop
addr16
cmc
xor
push
add
mov
or
mov
test
pushf
sub
adc
pop
pop
fmull
arpl
cltd
vhaddpd
jp
mov
icebp
sub
test
fnstcw
lret
add
in
mov
mov
mov
sbb
or
fcoml
movsl
arpl
push
sub
cmp
push
hlt
cmc
js
push
xlat
or
push
lds
inc
xor
sbb
xrelease
sbb
push
and
pop
out
pop
insl
ja
sahf
cmp
ret
sub
or
mov
lret
iret
dec
mov
xchg
push
addb
in
call
or
pop
mov
sbb
jnp
sbb
movsl
xorl
sbb
sbb
pop
cltd
mov
push
mov
fnsave
pusha
dec
icebp
pop
out
mov
jns
ljmp
adc
test
jge
repz
xchg
pop
jbe
testb
or
or
lods
in
xchg
fs
push
mov
sti
lock
mov
xchg
add
loop
mov
push
jp
shlb
ficomps
fildll
pop
rol
pop
pop
xor
push
sub
jmp
jbe
imul
fnstcw
aaa
mov
jmp
jmp
xchg
fnsave
clc
fnstsw
cltd
popf
jge
push
cwtl
fnstcw
mov
insb
sti
imul
jl
data16
js
jo
sbb
pop
jbe
shrl
das
xchg
lods
push
mov
mov
pop
cmp
ljmp
dec
push
in
mov
es
popa
rorb
sbb
aaa
jnp
jbe
xlat
push
mov
mov
inc
idivb
aam
fdivrp
in
or
and
mov
leave
cmpsl
in
mov
xor
hlt
fidivrs
push
lea
aas
repnz
xchg
out
fldenv
add
cmpsb
bound
push
aad
in
sarl
ret
mov
clc
xchg
fisubrs
outsb
add
call
fisubrl
mov
jecxz
xor
xor
fsubl
ja
or
std
push
xor
mov
cmpsl
shrb
push
xlat
mov
jne
insl
adc
imul
rcrb
and
sbb
sbb
mov
nop
int3
stos
lret
push
xchg
ljmp
lcall
shlb
pop
test
cs
mov
dec
imul
aas
cld
aas
sbb
push
int3
xchg
ret
push
cmp
or
leave
jns
scas
int3
test
lds
cmc
cwtl
push
rorl
popf
adc
xchg
or
mov
jb
dec
dec
into
add
dec
and
jp
push
cmp
pusha
inc
out
iret
orl
mov
mov
xor
jecxz
xchg
fwait
xor
cmp
cmpsb
mov
mov
lcall
scas
ja
out
cld
outsl
or
orl
mov
adc
scas
push
leave
mov
lds
test
sbb
cmovae
inc
dec
lcall
arpl
push
xchg
and
into
and
call
jne
cwtl
loopne
gs
cmpsl
mov
add
ror
xor
rcr
rorl
fists
aaa
call
sub
int3
jge
orb
lods
add
stos
jle
jecxz
jne
fwait
dec
cmp
sub
cmpsl
adc
mov
push
xor
pop
cmp
inc
or
ficoms
dec
sub
insb
std
xchg
cmp
mov
in
xchg
mov
orb
clc
sbb
aad
adc
into
mov
out
fidivl
fcomps
mov
push
or
add
sarl
fidivrs
fiaddl
pop
dec
mov
inc
or
arpl
js
dec
sbb
add
in
jl
cli
andl
scas
scas
xchg
jno
inc
cmp
and
or
nop
data16
test
enter
cs
xor
ljmp
fstps
popa
ja
movsb
mov
cmp
loop
shld
clc
jo
jae
jg
insb
pop
mov
pop
adc
push
popf
jg
outsb
movsl
or
push
pop
mov
sbb
adc
fists
and
add
lcall
mov
lahf
repnz
mov
and
mov
mov
jbe
movsl
out
mov
loopne
ja
mov
mov
test
adc
mov
aaa
xor
shufps
movsb
lods
in
pusha
sbb
mov
decl
addr16
sub
and
push
test
fdivl
push
pop
lcall
nop
aas
and
aas
rol
pop
lds
idivb
xor
push
and
sti
scas
and
or
divl
push
aas
cmp
push
dec
scas
xchg
pop
das
push
popf
sub
sub
push
or
mov
push
mov
xor
sub
push
adc
mov
xor
dec
int3
sbb
je
out
call
aad
test
pop
mov
mov
cmp
jb
sarl
fstp
xchg
cld
sbb
rorl
jnp
hlt
add
add
cmp
adc
xchg
dec
push
pop
add
hlt
add
push
loop
or
dec
xchg
mov
cmp
xor
mov
and
test
cli
les
lods
lahf
test
pusha
mov
lds
fldcw
sbb
pushf
fdivrs
push
fcos
dec
inc
pop
pop
adcb
lds
adc
inc
test
or
sub
sub
cwtl
adc
xchg
jmp
stos
add
int
jle
pop
not
jl
rorb
or
xor
orl
insb
add
shl
movl
cmp
test
jecxz
out
mov
gs
lret
fimull
fmuls
loop
ja
xchg
jne
sbb
insl
ljmp
pop
inc
imul
and
cmp
dec
aam
sub
pop
data16
inc
mov
cmc
and
sub
test
aaa
cmc
loope
fnstenv
mov
fidivrs
andl
or
data16
out
loopne
push
andb
stc
loope
sbb
insb
loope
stos
nop
aam
xor
stc
int3
ja
call
enter
mov
data16
add
out
pop
hlt
or
dec
sbb
jae
jns
in
movsl
xor
mov
adc
data16
out
mov
or
cmp
xchg
jno
add
insb
in
xchg
subb
icebp
daa
out
push
pop
jns
mov
imul
dec
fwait
lods
inc
cmpsb
push
in
insb
xchg
jge
leave
pop
pop
in
and
jb
or
nop
lods
call
shlb
or
mov
or
add
outsl
out
rcll
test
cmp
add
das
pop
dec
lret
clc
and
xchg
inc
mov
imul
in
cmp
push
lahf
sahf
sbb
scas
add
pop
movsb
aad
cmp
jbe
ret
pop
inc
out
pop
lock
sub
data16
subb
dec
gs
or
std
mov
out
mov
push
data16
loop
jl
in
icebp
mov
sbb
xchg
imul
rolb
add
sahf
hlt
xchg
stos
ja
outsb
and
mov
add
insb
bnd
mov
or
xchg
or
loop
inc
aaa
stc
leave
clc
and
das
inc
lds
mov
imul
test
add
xorb
subb
test
mov
out
adc
cmpsb
cmp
pop
push
jmp
xchg
scas
or
xor
hlt
mov
cmp
popa
push
adc
fs
aas
add
je
sbb
mov
inc
cld
pop
je
push
inc
xor
mov
addb
movsl
rcll
dec
xor
dec
mov
jle
push
lock
repz
fsubl
dec
lods
in
cmp
cmp
orb
pop
in
xor
push
imul
sbb
inc
repz
ds
frstor
test
mov
out
sub
cmp
in
jne
lcall
loopne
aaa
push
push
mov
add
inc
add
sbb
and
inc
push
mov
jnp
pop
cmp
adc
mov
sti
pop
mov
lods
xor
scas
scas
dec
jo
in
or
ret
leave
cltd
lahf
sub
popf
insb
push
and
test
test
sub
popf
sub
sbb
icebp
addr16
cli
fldt
inc
push
ret
sbbl
in
jno
mov
ret
pushf
outsl
jle
push
fdivp
or
dec
and
pop
cmpsb
add
mov
and
addb
mov
dec
mov
mov
jge
add
cmp
pop
or
mov
lret
mov
rol
xchg
decb
fdivs
mov
adc
mov
push
cs
mov
sub
call
sub
pop
mov
inc
mov
push
lret
push
aaa
hlt
cwtl
jne
out
adcl
push
add
je
stos
test
and
ret
es
into
sbb
add
aam
cmp
add
and
fdivrp
xchg
mov
ja
add
leave
test
mov
inc
adc
jl
int3
xchg
frstor
add
filds
push
jmp
fs
dec
imul
and
cwtl
sub
mov
mov
adc
in
negl
inc
shlb
pop
testb
mov
mov
mov
cltd
sbb
push
push
fisttpll
gs
mov
ret
dec
or
pop
out
out
movsl
pop
cld
std
je
mov
cmc
dec
mov
lods
jle
pop
cmp
pop
iret
cwtl
push
scas
incl
call
test
mov
push
pushf
mov
in
fwait
bound
lock
dec
or
xlat
mov
sub
or
and
cmp
je
and
loopne
or
gs
lahf
dec
xchg
push
into
iret
fidivl
lcall
fstpl
aam
les
dec
out
dec
sbb
fbstp
movsb
addr16
inc
mov
or
push
dec
mov
lret
pop
jmp
sub
std
cwtl
jne
jbe
dec
mov
or
lock
popa
mov
pop
mov
cwtl
cmp
lret
adc
popf
clc
lock
inc
jge
fisttpll
pop
or
mov
and
int
mov
adc
mov
ficompl
pop
xchg
xorb
push
data16
dec
gs
iret
push
cmp
ljmp
insb
fldl
insl
popf
mov
cmpsl
cmp
sub
jp
sbbl
cmp
fldcw
mov
insb
test
das
inc
daa
adc
out
inc
fwait
cld
mov
test
jp
xchg
add
mov
cmp
push
fsubp
pop
testb
xchg
lea
pop
pop
cltd
adc
xchg
scas
fdivr
mov
lahf
push
sti
adc
shll
and
mov
jbe
or
pushf
out
mov
and
mov
test
out
adc
sbb
idivb
mov
mov
sub
divb
xlat
out
inc
jns
push
ret
adc
enter
fldcw
jecxz
dec
jle
stos
and
fnstsw
xor
aad
repnz
outsb
pop
mov
das
push
insb
cmp
cld
fwait
xchg
mov
cwtl
xor
jg
mov
mov
leave
and
imul
lcall
push
out
stos
lods
lock
es
sub
mov
pop
sbb
imul
mov
add
push
cmp
and
jp
xor
ffreep
jmp
add
out
movsl
sti
aas
xor
loope
pop
add
mov
js
sti
cmp
cmpsl
lods
test
das
xchg
adc
xor
ljmp
cmpsl
pop
adc
cmp
or
sub
sbb
add
cmp
lret
dec
push
mov
cli
push
jo
into
add
rol
dec
iret
adc
imul
jmp
or
jb
jp
bound
xor
fwait
inc
fwait
dec
movsb
std
cmpsb
es
xchg
jae
shlb
in
icebp
call
cmp
inc
leave
or
jmp
mov
and
jmp
mov
repz
lret
lods
pop
pushl
addb
jae
shrb
push
mov
in
xchg
mov
ds
cltd
stos
add
jb
fidivl
mov
into
movsl
iret
xchg
fidivs
pop
and
and
mov
mov
xchg
mov
punpckhdq
mov
outsl
cmp
lods
jnp
push
and
sbb
push
sbb
fdivl
scas
sub
xchg
xor
in
cmp
movsb
or
hlt
mov
cmpsb
push
jbe
cmp
lea
fstpl
or
add
sbb
and
test
sti
and
sub
imul
mov
outsl
sbb
addl
cli
into
aas
mov
jae
lahf
pop
stc
int3
ljmp
xchg
sti
les
std
addb
inc
mov
pop
enter
cmp
and
push
jns
out
pop
inc
ljmp
inc
mov
mov
icebp
sub
adc
out
inc
sub
mov
lcall
lcall
outsl
jo,pt
cli
mov
mov
mov
or
jbe
fdivrs
or
or
test
in
adc
cs
addr16
leave
into
icebp
xor
addl
and
stc
out
in
mov
pop
xchg
cmp
xor
in
mov
cvtps2pd
ljmp
sub
in
fcomps
mov
mov
arpl
icebp
imul
inc
xchg
jge
jl
lret
mov
jae
sub
add
jge
dec
sarb
mov
addr16
mov
and
xchg
mov
hlt
sub
cltd
ret
xchg
sbb
push
divl
jnp
lcall
shrl
inc
jnp
and
or
loopne
and
mov
lahf
test
outsl
loopne
mov
dec
in
aaa
mov
iret
push
or
sbb
shl
mov
dec
push
addr16
ficoml
pop
cmpsl
xchg
fists
push
movsl
mov
push
mov
pop
mov
add
cmp
imull
imul
push
pop
lds
cltd
or
sub
hlt
adc
mov
popf
pop
test
xlat
imul
popa
pop
sbb
cli
mov
pop
roll
loop
dec
adc
pusha
pop
dec
test
rclb
dec
sbb
inc
leave
std
lods
adc
jnp
sub
repnz
xor
fstpt
dec
sbb
jae
stc
adc
sub
mov
shl
add
cwtl
out
imul
add
or
fdivrs
lret
mov
dec
lahf
pop
xor
std
insb
pushf
cmp
mov
mov
dec
fdivs
mov
xor
sbb
push
std
push
loopne
cmp
and
stc
xchg
mov
or
movsb
jp
and
in
mov
mov
and
fxch
addl
lahf
test
or
rorl
sub
es
das
repnz
scas
mov
inc
cli
inc
aaa
and
pop
mov
stos
daa
xchg
sarl
lret
daa
sti
insl
shll
mov
mov
mov
adc
movsl
call
test
lret
inc
jae
jp
cmp
push
mov
xor
fld
cmp
add
xchg
push
fs
adc
adc
jmp
movsb
mov
popa
sbb
iret
pop
fwait
push
test
pop
mov
lods
aad
dec
pop
push
push
push
pushf
mov
shl
ds
push
popa
xchg
add
jae
xchg
xchg
lock
sub
pop
jne
mov
ss
daa
push
sub
imull
add
insl
cmp
daa
movsl
inc
or
adc
out
inc
packsswb
inc
notb
jno
shrl
inc
or
ljmp
call
push
pop
pusha
xchg
ret
pop
out
mov
jle
mov
in
hlt
fidivs
gs
inc
xchg
ret
push
in
sub
jae
dec
or
out
add
pop
push
dec
jo
cltd
or
cmp
xchg
sbb
ljmp
aas
addl
andb
xchg
imul
pop
shlb
push
sti
addr16
sbb
movsb
jbe
fs
cmpsl
add
pop
jno
ja
inc
mov
cltd
pop
lods
jae
sbb
sti
xchg
push
divl
sbb
cmp
or
iret
cmp
fcmovb
out
xchg
add
lods
push
add
adc
pop
mov
cmp
arpl
xorl
insl
orb
aam
hlt
das
sbb
lret
pop
or
in
and
out
into
call
jns
call
int
lods
bound
fwait
int3
dec
pop
jg
inc
fildll
push
fisubs
daa
inc
orl
adc
adc
mov
jge
in
cs
dec
jne
xchg
aas
cmp
outsb
ret
sub
dec
notl
jp
jne
and
imul
cmp
leave
pusha
xchg
das
xor
scas
sub
sahf
clc
mov
push
ret
mov
push
mov
mov
insb
fwait
lahf
xchg
xchg
sub
out
add
sub
sub
xchg
add
mov
sahf
dec
xor
in
les
insb
xlat
mov
or
loopne
add
ja
in
fdivrl
mov
mov
sbb
mov
push
pop
rcl
xor
out
gs
fistps
pop
int3
aaa
add
out
sbb
cmp
pop
dec
mov
xor
fbld
insb
daa
mov
cwtl
adc
icebp
push
push
popf
fsts
icebp
dec
scas
inc
pushf
hlt
gs
repz
lds
adcl
lods
mov
push
clc
flds
loopne
push
pop
mov
inc
xchg
jmp
cmp
mov
jnp
xchg
lea
in
les
sbb
iret
cmpsl
addr16
inc
mov
dec
inc
pop
int
pushf
add
add
fwait
pop
ja
bnd
or
and
pop
scas
pop
or
lods
pop
ds
jmp
add
push
loope
fwait
outsl
lahf
movsl
or
in
add
leave
imul
movsl
sahf
fwait
outsb
lcall
mov
mov
cmovo
push
sahf
dec
push
inc
cwtl
enter
test
mov
out
loope
pop
push
jne
xor
leave
adc
adc
clc
mov
test
inc
fbstp
imul
mov
stos
insl
fwait
ror
add
in
mov
cmp
mov
or
pusha
das
popf
js
mov
jne
cmp
filds
or
pop
or
aaa
ret
lahf
push
mov
cmp
cltd
call
jl
popa
jecxz
mov
cltd
jge
rol
sub
icebp
enter
jb
stos
invd
pop
inc
xchg
xlat
popf
xchg
push
test
xchg
stos
xchg
imul
test
mov
test
or
aas
jne
lahf
adc
stos
dec
insl
inc
adc
fisubs
sub
nop
jmp
jne
das
mov
mov
lahf
aaa
sub
sbb
and
sub
dec
xor
ja
arpl
pop
dec
pop
jnp
sub
inc
pop
cmpsl
mov
dec
cmc
push
imul
lods
add
push
add
les
inc
mov
in
cld
call
outsl
jbe
and
sub
jne
js
lcall
outsb
push
dec
mov
jg
or
in
jg
mov
orb
seta
dec
ljmp
in
cmp
cltd
cmpsb
jb
adc
adc
sub
incb
rcrl
add
out
xor
das
push
in
sub
pop
mov
cmc
lock
xlat
jns
nop
xor
cmp
dec
cmp
fcoms
sub
stos
jnp
mov
lods
pop
xchg
sub
into
jmp
rcl
inc
lds
clc
fs
jb
mov
dec
std
pusha
hlt
fbld
ds
pop
in
ljmp
mov
stc
cmc
jmp
xor
mov
cmp
icebp
cmp
or
jnp
inc
and
push
shl
cmc
es
test
jb
loopne
inc
iret
mov
dec
les
mov
mov
jno
pop
test
pusha
adc
test
out
dec
shlb
pushf
hlt
jp
mov
test
cmp
pop
out
pop
adc
xor
cmp
leave
adc
xchg
stos
jecxz
push
hlt
or
stos
hlt
daa
cmpsb
or
xlat
sub
mov
movsb
or
fstpl
ret
mov
jne
inc
repz
imul
and
imul
push
mov
xor
sub
mov
mov
call
insb
lods
mov
xchg
mov
xor
sbb
push
ja
mov
lods
and
xor
dec
sahf
js
mov
mov
scas
or
jg
xor
xchg
add
push
jl
or
jge
jno
mov
mov
fcomps
cpuid
sahf
loopne
sbb
sbb
cli
xchg
xchg
fcmove
cmp
int3
add
js
jo
fdivl
cmpsb
xchg
lahf
xor
add
div
and
mov
aam
subl
dec
cmp
iret
jne
mov
ficoms
pop
jo
je
in
punpckhdq
cmp
fs
add
lock
add
subb
jl
aam
dec
push
jns
xchg
xor
sbb
push
pushf
and
and
jge
and
sarl
loope
sub
xchg
inc
jnp
leave
jo
adc
leave
lcall
dec
mov
fwait
pavgb
xchg
inc
adc
ss
movl
lods
pop
insl
mov
xor
repnz
adc
mov
or
jns
dec
add
push
int
and
mov
xor
mov
repz
mov
lods
cli
sbb
add
sub
mov
or
or
cli
push
inc
mov
sbb
jae
mov
jne
cmp
inc
leave
out
ret
xchg
add
add
lods
mov
subl
push
test
dec
cmp
sbbb
xchg
add
inc
cmovs
dec
cmp
jns
mov
sub
sub
ss
lock
jne
dec
push
add
loope
bound
push
mov
leave
nop
sbbb
js
and
leave
mov
jne
fdivrs
mov
mov
bound
push
mov
mov
lcall
or
or
xor
mov
lcall
pop
mov
in
sub
add
repz
fadds
jne
xchg
push
popa
daa
ret
sbb
mov
add
xlat
cmp
fcomip
cmp
mov
jle
movsl
icebp
inc
dec
das
fs
and
xchg
lods
ss
mov
fimuls
and
rcll
ror
push
fsts
enter
adc
jmp
cmp
fwait
ret
cmp
nop
in
jnp
cmp
xlat
les
xchg
cmp
dec
test
pop
and
push
adc
imul
pop
vpmacssww
cmc
pop
push
fistl
xchg
rcr
jg
scas
push
sub
int
push
fistpll
mov
inc
fs
lds
aad
push
mov
xor
stc
jle
xchg
pmulhw
fstl
sbb
frstor
bound
test
mov
ljmp
mov
mov
mov
nop
insl
dec
cmc
dec
je
mov
cmpsl
jle
shll
rcll
dec
xchg
leave
xor
jnp
xor
jmp
push
sahf
lock
lret
mov
mov
add
adc
jg
pop
mov
add
daa
push
lea
gs
ljmp
imul
pop
cwtl
dec
push
cmpsb
aaa
in
fsubs
xchg
imul
in
and
cmpsl
enter
jle
insb
fistpl
adc
xchg
xchg
int3
push
ror
insl
xchg
mov
mov
pop
lods
or
int3
lret
cmc
dec
outsb
cltd
lcall
popa
ds
jo
pop
sub
mov
mov
sbb
mov
cmc
or
mov
sub
cld
imul
and
dec
dec
inc
sti
faddl
sbb
int3
sub
or
pushf
mov
sub
gs
in
cmp
rorb
sub
adcl
xor
iret
or
lret
repnz
jbe
or
fcomi
xchg
repz
aad
loop
pop
dec
filds
dec
xor
cmp
adcb
xor
push
scas
stos
cmp
out
xor
push
cmp
loop
inc
ljmp
sbb
js
inc
jmp
push
insb
ficompl
cmc
dec
mov
out
dec
lahf
imul
inc
repnz
push
repz
fwait
dec
push
iret
rcll
in
mov
push
or
fistpl
mov
imul
add
sub
lret
fmull
dec
jle
vcvttsd2si
jmp
push
mov
loop
xchg
mov
pop
mov
pop
aas
lcall
scas
push
fidivl
sti
xor
sub
mov
xor
les
jb
rclb
out
daa
inc
negb
jp
sub
or
mov
cmpsb
fs
aam
dec
adc
std
adc
sbb
xchg
pop
jnp
jae
mov
ss
nop
bound
sbb
hlt
insl
lret
dec
adc
adc
jns
jnp
sbb
add
test
xchg
arpl
movsw
pop
sbb
add
ss
inc
add
adc
test
lcall
sahf
jnp
add
push
mov
and
xchg
imulb
xchg
inc
xchg
sar
mov
or
xor
dec
inc
sahf
hlt
pop
xchg
or
movsl
pop
xchg
cmp
inc
dec
push
out
mov
jnp
xorb
pop
test
iret
fmuls
dec
nop
cmp
fstp
pop
xchg
mov
push
push
lahf
test
loopne
imul
dec
out
or
jge
inc
jnp
push
push
dec
sar
ss
dec
pusha
inc
nop
addb
and
mov
dec
sub
add
and
pop
push
fdivr
sti
mov
pop
jne
mov
xchg
jmp
and
xor
push
jge
or
sbb
xor
add
add
or
div
sbb
push
push
xchg
add
call
fdivr
push
lret
cmp
outsb
jae
pop
mov
decl
insb
push
sbb
fsubrl
xchg
mov
and
mov
shrl
cmp
lahf
aam
fwait
subb
cmpsb
out
lods
mov
sbb
sub
flds
mov
xlat
mov
insl
dec
adc
in
in
mov
jecxz
outsb
mov
shlb
out
sti
in
fidivrl
sahf
test
inc
fistl
cmc
std
mov
mov
sbb
repz
repz
int3
test
and
xchg
mov
add
mov
clc
ror
or
shl
movsl
dec
add
std
ja
loopne
pushf
xchg
jb
sbb
mov
mov
or
add
push
add
adc
insb
icebp
daa
repz
pop
push
mov
ss
fisttps
inc
mov
es
out
jle
fsubrl
add
inc
fcmovnu
mov
je,pt
sbb
aad
pushf
pop
add
insl
cmp
adc
aas
loopne
push
cmp
mov
mov
mov
sub
sbb
std
jmp
jbe
or
push
push
mov
stc
dec
lahf
sbb
or
movsb
pusha
hlt
fs
or
pop
das
cmp
or
xor
iret
lods
sbb
jg
sahf
dec
mov
pop
push
lock
outsb
arpl
jb
aaa
jmp
in
inc
imull
mov
cmp
pop
test
mov
mov
scas
loope
cmpsb
pop
negl
pop
clc
lods
insl
int3
out
pop
jg
rcrl
pop
outsl
call
lods
adc
js
shl
repz
xchg
scas
shrl
mov
cltd
pop
loope
out
xchg
inc
call
mov
shr
notb
outsb
daa
in
add
lea
movzbl
xchg
fiadds
call
movsb
fwait
lods
mov
data16
je
xchg
ja
mov
mov
in
lea
dec
popa
adc
pop
sbb
jno
subl
fwait
xchg
push
sub
js
repz
inc
bound
add
das
adc
lcall
dec
in
cs
test
and
idivl
adc
sti
push
cwtl
xchg
int3
jge
mov
outsl
mov
loopne
lret
jge
lahf
inc
cmpsb
push
pop
sub
ss
test
push
rcl
mov
mov
mov
cltd
pop
mov
pop
pop
and
dec
jae
mov
mov
or
loop
mov
pop
push
pushf
dec
and
mov
mov
cs
fsts
idivb
movsl
xchg
jno
cmpsb
ljmp
jmp
repz
jbe
xchg
jbe
cmp
mov
in
or
xor
frstor
popf
scas
push
mov
mov
dec
add
sbb
push
or
ds
je
pop
dec
js
outsl
jge
xchg
int3
push
ds
mov
push
push
inc
inc
cs
iret
xor
addr16
bound
mov
lods
push
mov
adc
imul
xchg
dec
push
mov
mov
out
aam
mov
xchg
loopne
mov
ja
sub
jmp
out
in
ja
sub
dec
and
mov
cmp
out
shr
or
test
pop
mov
pushf
cmp
incb
push
out
movsl
cld
loop
addr16
push
dec
or
xchg
xor
xor
push
inc
lock
xor
mov
data16
add
inc
stc
leave
mov
xor
mulb
rcrb
push
dec
mov
xor
jae
fld
mov
and
fbstp
and
jne
sbb
mov
xlat
nop
add
sub
lock
in
and
mov
push
mov
inc
lahf
add
adc
xchg
dec
fnsave
dec
and
inc
test
cmpl
or
lock
aam
pop
dec
cmp
sarb
insb
fwait
sbb
dec
mov
test
sbb
mov
lahf
in
mov
cmp
cmp
jbe
push
lea
xchg
mov
xchg
inc
push
xor
outsl
mov
pop
or
es
xchg
push
push
pop
xchg
push
push
popa
sub
ss
fisubs
inc
js
mov
mov
cmp
bound
rcll
jns
popf
int3
jp
adc
stc
sbb
arpl
out
fxtract
mov
nop
pop
pop
push
mov
jns
sub
cmpsl
and
cmpsl
lret
inc
sahf
aam
into
outsl
xor
outsb
push
rcll
mov
or
pop
sub
cmp
mov
jecxz
scas
ja
pop
jl
inc
add
mov
jns
cmpsb
aam
repz
add
outsb
fsubrl
lcall
cmp
mov
stos
in
cmpsb
in
lock
cmp
stos
xchg
fcoml
fidivs
cmp
loopne
mov
cmp
ss
xchg
mov
leave
scas
push
lea
loopne
imul
sar
vfrczps
jge
inc
repz
pop
iret
lods
stos
in
inc
fistps
mov
add
shll
pop
jp
cld
mov
int3
mov
iret
jge
pop
rcl
mov
dec
mov
xchg
ds
inc
or
andnps
push
fdivrp
test
sbb
sub
xchg
andl
lcall
repnz
fs
or
lahf
ljmp
sub
pop
lods
push
jle
jnp
out
jmp
jl
pop
ss
push
imul
dec
imull
aas
jnp
jbe
push
jae
adcl
sbb
lret
cmp
stc
mov
mov
or
fs
int
rcll
cmp
adc
xchg
sbb
aaa
jp
mov
roll
push
sarb
ljmp
and
aam
mov
aas
xchg
or
test
popa
or
mov
int3
jge
mov
pushf
inc
fstp
jbe
pop
sub
cmp
push
gs
insb
mov
mov
sbb
enter
ja
sbb
inc
inc
jg
les
cmc
popf
sbb
les
mov
ss
lret
xchg
cltd
cs
inc
divb
scas
push
add
adc
loope
test
jae
inc
sub
and
mov
xchg
sub
mov
cs
out
mov
shlb
adc
push
mov
insb
sub
insb
outsb
rorb
push
les
xor
test
rorl
int3
xorb
je
negb
fst
test
xor
jecxz
adc
pop
sbb
repnz
mov
xchg
fsub
cmp
aaa
pusha
or
push
into
pop
test
ds
mov
push
push
dec
pop
iretw
dec
mov
sub
xor
fsts
stc
in
rol
sbb
in
in
jne
jecxz
daa
cwtl
or
orb
pop
jno
xor
dec
pop
and
adc
call
adc
mov
test
dec
mov
lods
xor
adc
pop
fwait
into
mov
out
shlb
movsl
mov
or
ja
mov
jp
js
std
loop
mov
jmp
bound
js
mov
push
nop
test
test
mov
popf
and
lret
std
dec
std
inc
or
loopne
sbb
xor
int
stos
jne
jmp
pop
cmp
mov
mov
rorb
pop
cmp
jmp
subl
push
nop
mov
jnp
xorb
test
and
shlb
xchg
mov
inc
xor
sub
pop
insl
ljmp
xchg
mov
lahf
and
dec
ja
inc
dec
push
ja
sbb
fisttpl
ret
je
or
fmuls
mov
invd
mov
xchg
iret
int3
add
or
fdivrl
imul
push
jecxz
mov
jnp
pop
mov
ret
adc
into
and
pushf
mov
jns
stos
inc
test
gs
mov
lock
insl
jns
fbld
mov
mov
xchg
pop
sbb
lds
xor
divl
fdivrs
jmp
xchg
add
inc
daa
iret
out
rclb
xor
aaa
mov
cli
data16
popa
or
inc
pop
push
sbb
out
push
imul
loopne,pt
aam
out
call
repz
aam
push
xor
mov
sbb
add
call
add
or
jge
icebp
fs
aaa
jl
mov
test
neg
hlt
insl
adc
repz
cs
rcll
jmp
pop
adc
adc
sbb
jnp
pop
push
fadds
pop
cmc
pop
xchg
or
scas
pop
cmp
mov
pop
cld
adc
pop
lahf
push
in
in
popa
inc
xchg
xchg
sbb
xor
push
sbb
xor
cmp
je,pt
orb
inc
cmp
dec
int
fs
xchg
lds
mov
xlat
shll
pop
outsb
jnp
hlt
int
das
ficoml
sbb
mov
mov
push
shll
sbb
jl
out
fnstenv
inc
push
or
inc
lds
stos
or
mov
movsb
ret
cmp
data16
push
stos
imul
jge
push
mov
lods
fsubl
xor
aas
sbb
repz
leave
cmp
insl
shlb
daa
pop
fdiv
jns
ror
pusha
add
outsl
sub
mov
insb
sub
jae
ds
daa
xor
adc
add
orb
sbb
xchg
outsl
sbb
cmp
add
out
das
xchg
sbb
cli
mov
movsb
arpl
divl
test
push
push
jmp
aad
jnp
fstpl
ja
and
rcll
xor
leave
inc
adc
xchg
mov
stos
jmp
sbb
enter
jmp
jg
inc
mov
or
das
sub
rcrl
jmp
cmpsb
push
cwtl
inc
arpl
sbb
add
loope
int3
lret
aam
push
dec
dec
mov
adc
mov
sub
ss
xor
jmp
mov
into
subb
leave
arpl
push
or
stos
mov
daa
xchg
cmp
pop
out
mov
lock
fidivrl
sub
inc
mov
adc
sub
adc
cmp
dec
ja
add
movsb
nop
add
push
fistpll
mov
adc
mov
adc
dec
add
ficoms
dec
jg
jbe
outsb
or
out
sub
and
outsl
push
aas
bound
push
lcall
xchg
into
pop
or
and
out
push
jo
fwait
es
mov
lret
test
mov
and
in
imul
in
cld
jns
ss
notl
stos
call
out
pop
cmpsb
out
xlat
scas
fsubl
xor
and
ds
lret
sbb
adc
hlt
in
pop
pushw
pushf
test
inc
mov
dec
jle
xor
or
push
xlat
aad
dec
xchg
enter
xlat
mov
cli
hlt
scas
jge
jnp
push
dec
xchg
dec
xchg
xchg
lea
add
shll
ljmp
and
pmulhuw
lock
adc
jecxz
das
ja
and
or
rorb
sarl
ja
adc
lds
adc
and
jg
dec
idiv
imul
cmp
adc
icebp
pushf
mov
or
add
in
xor
aam
pusha
xor
sbb
or
push
mov
inc
shll
ret
mov
xchg
add
jo
scas
mov
stos
ss
ror
hlt
fisubs
dec
add
fwait
xor
jle
adc
cltd
jo
xlat
ds
mov
inc
or
rcrl
inc
push
ljmp
rol
push
movsb
adc
cmpsl
jl
mov
enter
loopne
push
cmp
jbe
aad
je
sbb
sbb
scas
pusha
push
sub
or
mov
push
mov
or
out
divb
mov
stos
bound
push
xor
dec
push
data16
sti
push
add
dec
sbb
xchg
sahf
cmpsl
jb
shlb
in
sbb
fmul
data16
push
jne
dec
fildll
insb
mov
in
mov
adc
xchg
ja
push
push
xor
adc
push
sub
push
inc
lret
insl
inc
dec
xchg
sti
aas
xchg
xlat
ljmp
mov
mov
lcall
pop
int
data16
sub
movsb
inc
inc
mov
lcall
push
outsb
sbb
outsl
sti
mov
mov
mul
fidivrl
add
adc
std
xor
popa
xchg
adc
test
push
pop
pop
lods
hlt
xor
or
cwtl
and
adc
addr16
mov
bts
bound
push
mov
and
jecxz
mov
fwait
sub
fcomps
scas
mov
lods
outsl
inc
sahf
mov
decb
lea
daa
fwait
ds
inc
dec
test
fldt
mov
lret
add
mov
adcb
pop
fcmove
pop
and
xchg
lods
outsl
and
movsb
addr16
inc
cld
jmp
push
add
lret
jno
mov
rcll
insb
inc
stos
stc
inc
cld
imul
or
test
add
cwtl
push
js
mov
and
es
adc
jnp
repz
mov
cmp
add
ds
daa
lcall
jb
mov
clc
cmpsb
inc
jge
das
mov
in
sub
bound
je
push
pop
xor
sbb
push
aam
jmp
push
lcall
cwtl
fidivrs
pop
stos
imul
fnstsw
sbb
fnstenv
aaa
jmp
jg
dec
jmp
xchg
sub
jl
pop
test
mov
repz
and
sub
fisttpll
int
push
pop
mov
push
mov
scas
ret
call
xchg
cmpl
adc
out
pop
stos
xor
lds
jle
or
sbb
dec
mov
add
clc
mov
inc
clc
mov
jl
clc
xchg
push
mov
jns
xor
or
outsl
sub
jae
and
and
and
mov
cs
ss
fdivrp
inc
fnstsw
insl
int
call
xchg
call
and
int
fistps
loop
stos
push
lahf
xchg
pop
or
out
out
stos
mov
lods
sub
and
addr16
mov
imul
ficoms
xchg
stc
push
push
pushf
adc
call
rcrb
sub
adc
inc
insb
or
fstp
addl
iret
add
cwtl
jle
pop
clc
dec
sub
or
lock
shlb
and
and
insb
xchg
sub
std
out
loope
mov
ret
and
and
movsl
and
pusha
cmpsl
int
pop
inc
xlat
ret
mov
and
gs
add
stc
push
jns
mov
and
das
dec
into
xchg
dec
or
sub
fwait
imul
xor
sub
fmull
loopne
push
jle
aas
mov
pushf
xchg
push
out
mov
push
adc
pop
movsb
xor
in
ret
mov
and
mov
sub
pop
lods
adc
push
adc
gs
daa
stc
and
out
push
jp
daa
mov
xchg
dec
pop
sub
out
lret
les
lcall
call
mov
je
inc
gs
addr16
dec
jno
shlb
cmp
xlat
dec
push
mov
dec
mov
fldl2t
push
repnz
inc
js
rol
pop
inc
in
and
rcrb
jg
and
out
nop
cmpsb
sti
clc
add
jns
jle
nop
std
in
add
dec
mov
adc
out
xor
adc
push
cmp
sbb
out
pop
jecxz
xorl
xchg
and
pop
movsb
es
and
mov
xchg
lret
mov
mov
and
jle
cld
cmp
add
inc
sbb
out
add
inc
add
add
push
into
ja
in
in
pop
adc
mov
mov
mov
nop
ficomps
jge
in
orb
movb
mov
jo
gs
jecxz
scas
jno
add
mulb
stos
xchg
cs
outsl
mov
or
hlt
mov
ret
pop
jns
pop
int
mov
mov
jns
push
data16
mov
cli
jge
fbld
add
pop
mov
or
xchg
mov
add
jb
subl
stos
rorb
xchg
mov
aam
add
add
lahf
mov
fists
into
adc
rcl
je
out
push
xchg
sbb
adc
dec
sub
sub
xchg
out
adc
pushf
int3
lret
icebp
jnp
pop
jbe
lret
mov
mov
push
lock
cmp
cs
ljmp
jge
cmp
xchg
orb
push
aad
xchg
popa
mov
ljmp
mov
xorl
mov
fnstenv
lret
vmaxss
mov
pop
sbb
test
in
mull
iret
ret
adc
popf
dec
rcl
hlt
out
testb
sbb
fildl
xor
mov
in
test
push
or
cmp
es
repnz
dec
js
stos
repnz
in
pop
inc
or
push
jns
clc
nop
fs
xorb
ret
inc
loop
jno
push
dec
ja
mov
shll
loope
fucom
lds
or
sbb
pop
shlb
add
mov
pusha
ret
lock
push
sbb
adc
cmp
rcl
sbb
sub
mov
and
outsl
xchg
gs
add
je
jecxz
cmc
mov
mov
movsb
int3
ds
sub
jb
jmp
aaa
roll
and
movsl
dec
pop
cmp
or
in
gs
pop
inc
pop
add
mov
mull
and
sub
or
insb
iret
icebp
stc
ljmp
outsl
xchg
pop
sub
cmc
in
push
iret
and
int
and
test
pushf
repz
adc
jmp
and
lock
cmp
ficomps
sub
or
std
inc
xchg
cmpsl
fwait
js
popa
lea
repz
out
dec
std
scas
cmp
mov
nop
popa
and
add
mov
xchg
js
mov
xchg
jle
push
int3
outsb
shl
xchg
ss
dec
push
dec
or
pop
mov
ror
mov
cmc
shlb
jmp
xchg
jno
insl
pop
aas
dec
xor
loope
ljmp
dec
and
jg
sub
push
fldenv
push
stos
in
cltd
mov
mov
outsb
xchg
mov
rcrb
inc
jg
lret
movsb
mov
dec
and
mov
fstps
and
mov
mov
xchg
imul
shrl
push
jbe
sub
test
inc
hlt
jo
inc
dec
push
outsl
cmp
movsb
mov
out
add
push
cmp
and
sub
sti
jge
and
pop
sub
inc
jne
xor
cmp
ret
gs
lret
or
mov
pop
cwtl
sbb
dec
push
adc
push
sbb
imul
shll
repnz
inc
fdivrl
inc
jle
or
testb
pop
into
mov
mov
daa
sub
les
xor
iret
test
pushl
mov
daa
xorl
add
xor
inc
mov
arpl
iret
xchg
or
or
ret
and
xchg
test
add
sbb
push
pop
out
xor
xor
cmpsb
dec
addr16
cs
arpl
adc
dec
or
aad
test
push
mov
cmp
jns
jecxz
mov
or
push
push
aaa
and
jno
ret
sub
mulb
inc
test
xchg
jbe
push
or
pop
sti
xchg
insl
pushf
repnz
dec
in
lret
cmpsl
inc
and
pop
jg
sbb
in
enter
jno
mov
inc
inc
fwait
push
mov
cmp
cmpsl
in
es
in
mov
scas
push
bnd
dec
popf
mov
movsb
ret
andb
jo
pop
aas
add
adc
cmpsl
aaa
push
andb
dec
adc
sbb
lcall
pop
hlt
aas
or
sbbl
ja
or
push
inc
fdivrs
inc
popf
xor
and
je
lret
and
cmp
sbb
xchg
adc
shl
outsl
inc
and
rcll
movsb
push
lea
jno
push
in
inc
mov
gs
aaa
out
push
jbe
mov
sti
mov
push
and
test
imul
sbb
add
sbb
inc
cltd
mov
aaa
cmp
mov
cmp
test
daa
cmp
incl
add
int
jecxz
mov
dec
and
xchg
push
mov
cmp
cli
rol
pop
xchg
inc
call
stos
lea
ja
int3
in
adc
je
push
mov
les
add
jp
jbe
cld
out
call
mov
dec
pop
js
mov
or
ret
pop
call
frstor
enter
cwtl
jp
in
jbe
repz
add
adc
cmp
stos
rorb
sti
push
xchg
adc
xchg
icebp
or
xchg
ret
dec
and
loope
clc
add
mov
dec
repz
cwtl
pop
mov
nop
add
pop
mov
xor
gs
mov
mov
mov
jb
loope
sti
ja
jmp
pop
mov
mov
pop
xor
ret
sub
mov
sbb
jb
loope
and
nop
and
mov
xor
mov
pop
jecxz
ret
imul
lret
fisubrl
jne
movsl
lods
mov
leave
cmp
sub
push
leave
mov
lds
jle
pop
push
leave
add
push
js
addr16
iret
sub
cwtl
and
shl
adc
sub
add
mov
jne
sbb
xchg
jp
adcb
xor
ffree
pop
mov
push
xlat
mov
std
call
and
ljmp
out
insb
jg
jg
push
xchg
mov
cmp
jmp
mov
xorb
ret
cmp
mov
jae
mov
pop
scas
jge
hlt
push
and
std
dec
fcoml
aad
js
jg
dec
lea
decb
mov
xchg
les
sahf
cltd
and
mov
arpl
inc
push
jns
dec
cs
or
mov
insb
dec
inc
push
add
and
ret
mov
jbe
jns
outsl
or
inc
call
adc
pop
outsb
jnp
pop
jg
fwait
leave
inc
sub
pushf
cmpsb
mov
icebp
mov
dec
lret
sbb
mov
cli
testl
push
jnp
fadds
pop
or
xchg
std
mov
in
jmp
outsb
push
and
add
out
push
xlat
add
pop
rclb
inc
fs
mov
mov
cltd
out
call
xor
dec
pop
fnstsw
push
and
daa
mov
or
mov
bound
insb
sbb
ss
je
and
lds
loop
mov
inc
sub
es
insl
sub
out
daa
and
scas
cmp
jno
push
mov
xor
addr16
stos
loop
and
popf
lea
mov
push
xchg
cld
insl
es
push
or
push
pop
lds
in
orl
aaa
cmp
fadd
jmp
push
in
out
add
rcrb
pop
das
sar
sub
loop
mull
inc
in
adc
lcall
jnp
ficoml
cmp
pop
out
adc
subb
nop
push
call
clc
sub
arpl
in
sti
jecxz
insb
fsubrs
xchg
fisttpl
push
leave
scas
jne
cmp
mov
lcall
sbb
sub
movsl
arpl
cwtl
popf
mov
pop
push
or
in
sbbl
or
aaa
sbb
add
bound
add
subl
cmp
mov
and
test
out
add
push
or
inc
sbb
fs
cmpsb
jmp
and
pop
fs
call
adc
sbb
push
mov
dec
push
xor
pop
ja
orps
pop
sbb
hlt
xchg
out
cmpsb
adc
pop
cli
pop
int
lds
bsr
pop
mov
adc
inc
aaa
mov
in
mov
xchg
jl
cmp
leave
dec
push
mov
xchg
sub
pop
loope
adc
or
inc
rcll
ljmp
push
cmp
add
insb
cmp
fsub
xchg
pusha
in
push
xlat
mov
mov
adc
iret
mov
int
movsb
cmp
hlt
inc
out
pusha
pop
dec
fnstcw
add
mov
add
mov
dec
iret
test
hlt
lcall
cmc
popf
and
and
xchg
or
sub
mov
xchg
imul
andb
jb
int
sahf
lock
jns
pop
and
cmp
pop
rorb
std
test
xchg
jb
add
testl
daa
rclb
fiaddl
lods
clc
push
xor
xor
xor
mov
inc
jo
push
dec
enter
out
out
cmc
cmpl
scas
jno
jne
inc
push
add
mov
fsubrl
mov
ss
imul
jo
inc
add
fwait
out
add
loop
fdivl
xchg
es
lods
dec
xchg
cmc
jno
aad
std
jae
jbe
mov
mov
rcll
xchg
hlt
adc
leave
push
jmp
mov
adc
jl,pn
mov
dec
inc
jecxz
fidivrs
cltd
and
push
jno
int
cs
dec
dec
dec
add
push
popf
xor
add
mov
loop
scas
sahf
ljmp
fwait
int3
pusha
subb
js
scas
movsb
inc
push
xor
js
adc
fs
loopne
insl
xor
mov
arpl
in
pop
sbb
dec
sbb
xchg
mov
leave
jnp
loope
mov
xor
data16
cmp
mov
out
outsb
call
popf
and
push
jbe
gs
inc
xor
dec
cmp
icebp
adc
loop
and
mov
sbb
xchg
pusha
mov
or
mov
mov
mov
js
xor
outsl
pop
push
dec
mov
or
mov
in
mov
and
xlat
mov
pop
xor
in
shl
mov
jns
push
and
push
gs
movsl
jbe
pop
jecxz
xchg
ss
dec
stos
dec
pop
enter
mov
iret
enter
sbb
pop
out
pushf
mov
dec
xchg
add
data16
sub
push
cmpsb
adc
stc
inc
shrb
cmp
sbb
cmpsb
or
sub
or
mov
repnz
popf
mov
dec
test
mov
and
jo
sbb
jp
and
mov
push
jp
jo
inc
adc
push
mov
rcl
add
cmp
mov
aad
inc
clc
std
in
fwait
in
or
mov
mul
in
frstor
out
adc
sub
inc
pop
jmp
dec
cli
faddl
sti
jmp
sbb
mov
fildll
mov
fldl
call
mov
mov
shr
sbb
xlat
cmp
addr16
cmp
mov
jnp
loope
les
sub
push
and
lea
fistpll
outsb
cmp
cmp
mov
or
frstor
push
mov
push
and
mov
sarb
adc
sbb
into
push
cs
push
loop
out
lahf
cwtl
adc
cmp
repz
xorl
mov
mov
popa
fstpt
mov
cmp
fistl
mov
imul
mov
mov
add
popf
adc
bound
push
out
lea
sub
and
rcrl
mov
shlb
sub
arpl
stos
mov
imul
sub
pop
jle
nop
test
rcll
sbb
xchg
pop
or
fwait
dec
arpl
ror
ss
sub
les
mov
push
mov
pop
popa
mov
fisubrs
dec
repz
jle
mov
stos
ror
out
mov
popa
ficompl
cld
mov
mov
pusha
push
jns
xchg
xor
mov
in
mov
push
sub
out
and
sbb
inc
pop
mov
stc
loope
sub
lods
jmp
mov
lcall
das
jge
test
mov
repnz
cld
rol
push
sbb
xchg
mov
jns
dec
adc
xor
cmpb
adc
xchg
movsl
and
sbb
imul
xlat
out
lcall
std
ss
mov
xor
stos
cli
lcall
jb
cmp
add
mov
or
or
xchg
push
push
in
inc
loop
jns
or
mov
xor
cwtl
movq
insb
decl
loopne
test
filds
inc
adc
dec
pop
out
xor
lea
dec
lods
inc
xchg
mov
jae
push
adc
pushf
lods
lods
das
and
stos
push
in
or
pop
xchg
push
insl
std
cmp
in
imul
mov
cltd
pop
arpl
lret
push
ljmp
xor
mov
adc
jae
insb
xchg
sbb
xlat
inc
fcomip
add
outsl
mov
int3
es
bound
xchg
js
push
inc
iretw
repz
nop
cmpsb
stc
fsubrs
roll
test
mov
in
and
fldt
mov
jmp
dec
push
shlb
lret
push
xchg
jbe
movsb
ja
hlt
add
mov
sbb
notb
cmp
mov
xchg
sbb
clc
loope
mov
insl
jbe
iret
popf
outsb
insb
pop
pop
cmc
jl
push
inc
leave
pop
push
stos
xor
push
notb
test
inc
iret
fsubl
jmp
xor
fwait
movsb
xorb
and
or
pop
xor
stc
xor
add
xor
ret
roll
inc
scas
mov
pushf
testl
stos
mov
inc
xchg
mov
rcr
sub
mov
xchg
jb
lods
sti
sbb
dec
fwait
leave
stc
sub
leave
sbbb
xchg
mov
mov
add
test
fcmove
outsb
xchg
push
mov
ficompl
inc
xor
xchg
pop
push
jg
cmc
sub
mov
fs
adc
xchg
test
push
imul
std
jno
mov
pop
aam
mov
sub
or
das
lods
mov
insb
js
pop
stc
mov
arpl
call
aad
dec
sub
jg
imul
je
pop
test
mov
lods
aam
jbe
mov
nop
dec
cmp
call
mull
lret
or
inc
add
popf
jne
addl
inc
and
push
aas
mov
add
sbb
punpcklwd
enter
or
aad
dec
fsubrs
inc
jb
movsl
xchg
rolb
xchg
pop
imul
and
std
pop
or
sbb
cmp
mov
cltd
aad
mov
pop
loope
add
sub
xchg
and
dec
cmpsl
fsts
dec
xchg
and
rolb
xchg
cmp
out
mov
dec
popf
mov
or
cmpsl
mov
out
mov
sbb
mov
adcb
add
pusha
cwtl
imul
push
idivb
xor
inc
lds
jmp
lcall
mov
adc
sbb
jg
jb
je
fdivrl
repz
jecxz
dec
stos
ficompl
das
ret
cmp
mov
pop
xchg
xor
add
scas
aas
xchg
dec
jge
pop
rcl
cli
adc
jo
xchg
adc
cld
stos
pop
push
test
pop
mov
jecxz
pop
inc
test
sbb
xor
jmp
and
add
dec
inc
shl
dec
mov
imul
fldt
mov
and
xor
push
jbe
xchg
icebp
ja
inc
loope
test
mov
or
inc
test
add
mov
mov
xor
mov
loope
cld
imul
xchg
jb
push
mov
push
movb
xchg
jb
ja
jecxz
imul
outsl
dec
int
dec
ljmp
xchg
fs
divb
mov
movaps
pop
add
lods
jl
inc
mov
loop
imul
ret
xor
aas
icebp
inc
rcll
push
cwtl
leave
inc
inc
jb
xor
push
push
cmp
scas
stc
outsb
std
rorb
out
mov
sub
fwait
enter
je
pusha
push
arpl
jae
mov
gs
cltd
push
mov
fisubs
xor
in
data16
into
fwait
mov
add
mov
cmp
enter
sub
mov
xor
xchg
es
dec
push
xor
jp
cld
mov
push
sarl
repnz
and
adc
push
sbb
cs
mov
mov
push
cmpsl
pusha
sbb
stc
dec
aad
mov
mov
pusha
xchg
push
or
add
push
popa
in
inc
outsl
es
cmpsl
and
addr16
daa
int
inc
addr16
aas
jnp
xor
sbb
aad
mov
and
icebp
mov
callw
sub
adc
jmp
xor
insb
data16
orl
adcb
push
es
push
les
rcll
aad
js
push
mov
mov
mov
cmp
call
iret
or
and
rcl
lahf
dec
and
popa
es
or
or
sub
es
push
xor
inc
mov
sub
aas
jno
mov
fldt
jl
push
scas
filds
xchg
jbe
movsb
scas
cld
fists
fsubr
roll
xlat
test
lahf
imul
mov
mov
adc
les
mov
dec
or
in
enter
mov
pop
cmp
das
ljmp
fnstcw
stc
inc
sbb
xor
cld
pop
cmpsb
xchg
hlt
sub
stos
lcall
pop
xor
lcall
sbb
mov
inc
das
out
mov
mov
das
popa
movl
daa
sti
aaa
add
sub
insl
dec
rcll
add
xchg
jb
ljmp
loope
adc
lock
fstps
adc
pop
inc
pop
mov
adc
sub
mov
outsl
xor
rolb
pop
leave
test
clc
adc
ljmp
jnp
fnsave
xor
das
xchg
movsb
aad
or
sbb
mov
jns
and
xchg
dec
jecxz
mov
and
icebp
cmpsb
loopne
cmc
jbe
mov
jmp
hlt
cwtl
xchg
add
push
loopne
test
int3
lods
jne
lret
popa
aaa
push
mov
fidivl
es
or
jbe
sub
aad
cbtw
or
iret
sub
fdivrp
fistpll
imul
jle
hlt
faddp
mov
ss
push
xchg
mov
or
ficoms
ret
pusha
movsl
fldt
into
rorl
cmp
daa
ret
inc
and
jno
push
scas
in
test
leave
and
xor
stos
dec
add
add
mov
xor
imul
ftst
call
popl
or
xchg
js
dec
sahf
or
push
or
and
repz
jp
adc
xlat
and
mov
inc
lock
push
aam
ret
mov
adc
mov
mov
mov
in
arpl
xchg
loope
add
dec
jp
jno
dec
pop
and
imul
sub
push
les
clc
cmp
dec
dec
enter
xchg
dec
out
in
testb
xor
out
imul
lods
mov
cmp
nop
in
sbb
or
xchg
adc
bound
xlat
adc
and
lds
pop
jp
sub
mov
mov
jge
mov
inc
adc
dec
adc
xor
outsb
fisttpl
push
dec
lret
call
push
mov
cmc
imul
vunpckhps
aad
shlb
adc
and
jmp
shr
addl
sbb
pop
push
test
sbb
aam
mov
sti
and
ljmp
mov
mov
xchg
ja
call
testb
stc
or
js
push
in
mov
andb
scas
mov
notl
xor
ret
fldl
lcall
pop
ret
or
push
cmp
mov
fs
in
imul
shrb
adc
sub
cs
std
adc
cli
das
movsb
jno
adcl
leave
std
movsl
mov
hlt
sbb
int
push
fmull
and
dec
repnz
pop
into
sub
cs
adc
inc
jmp
cmp
jl
push
rcrl
xor
cmp
sub
push
ljmp
fwait
imul
push
repnz
ficoml
std
pop
outsb
sub
pop
mov
test
jle
lret
andl
ret
jmp
popf
ds
sbbb
test
nop
outsl
mov
jbe
or
pop
jno
pop
push
push
pcmpeqd
nop
and
cmc
inc
clc
pop
and
dec
xchg
mov
mov
mov
insb
mov
enter
or
scas
fwait
jnp
ret
or
in
dec
outsb
pop
inc
inc
cwtl
mov
test
out
sbb
mov
repz
mov
out
addr16
push
jo
fwait
mov
xchg
pop
icebp
sub
dec
stos
and
and
popf
loopne
xchg
testl
xchg
data16
out
adc
and
cmc
testl
xchg
lds
fcoms
mov
int3
filds
xor
popl
movb
jne
push
mov
cmpsl
xchg
pop
pop
jae
cmp
jle
pop
icebp
popa
stos
test
pop
lret
int3
push
dec
daa
je
test
cmpsl
inc
sbb
and
in
nop
movsl
sub
jle
dec
dec
xchg
add
push
in
loope
jb
mov
jb
mov
inc
cmpb
sub
sbbl
adc
pop
mov
cmp
test
or
xchg
shlb
pop
inc
sahf
mov
adc
daa
ror
sbb
or
out
out
scas
and
push
xor
jbe
out
sbb
xor
enter
lahf
sbb
xor
fiadds
and
mov
fdivrl
clc
sti
pop
add
pop
xchg
js
lods
sub
dec
into
mov
outsb
repz
pop
nop
call
cmpsb
iret
negl
jo
into
jne
fsubl
mov
add
ljmp
and
dec
pop
out
aad
jnp
inc
nop
arpl
jp
inc
push
dec
test
sub
push
imul
and
jnp
add
cmp
add
lcall
xlat
cmp
icebp
pop
inc
push
mov
mov
dec
jnp
call
lret
sub
inc
insb
push
arpl
add
adc
xchg
jae
mov
push
stos
pop
mov
in
sub
in
lret
sbb
jecxz
push
xor
pop
mov
fdivrs
xchg
sub
jecxz
xchg
aad
jnp
cli
roll
mov
jg
inc
pop
mov
mov
push
fstl
cs
mov
inc
hlt
cmpl
add
bound
add
scas
aas
sub
xor
test
aam
std
int3
xchg
mov
cmp
jo
mov
xchg
pop
nop
movsb
leave
push
sbb
repz
xchg
sti
lahf
fsubrp
mov
testl
mov
sbb
les
pop
repz
pop
mov
dec
and
ss
ret
push
dec
movsb
jecxz
fadds
nop
sub
ljmp
scas
pop
stos
mov
xor
add
incl
xor
in
cmp
sub
pop
mov
test
cmpsb
jns
and
in
out
iret
sub
mov
add
int
scas
inc
or
and
repnz
or
adc
leave
je
out
mov
dec
movsl
mov
fadds
clc
test
dec
push
in
adc
cmp
cmp
fisttps
and
mov
xchg
adc
out
sub
loope
pop
fisubs
sub
jmp
jbe
outsb
jg
mov
mov
jb
add
je
movsl
and
push
hlt
lret
fisubl
dec
es
push
aam
test
mov
push
push
mov
sub
push
mov
inc
movsl
pushf
subl
aaa
data16
or
insl
sbb
int
cmp
dec
and
mov
push
std
pushf
in
cmpsl
sbb
or
and
or
rcrb
gs
lods
inc
lds
aaa
xchg
sbb
in
sbb
mov
popa
xchg
or
dec
leave
pop
inc
push
xor
cmp
push
sbb
sub
loope
test
mov
xchg
push
daa
sbb
in
pop
lahf
xor
mov
mov
lods
add
mov
mull
inc
stos
mov
and
pop
pop
fmuls
ljmp
js
call
adc
je
in
lcall
jle
aad
adc
xor
js
and
mov
push
push
daa
mov
or
and
push
pop
sub
cmp
ljmp
xchg
push
mov
fsubs
mov
push
jno
idivb
fwait
imul
aas
mov
sub
nop
sub
sbb
je
mov
jecxz
cmp
mov
in
xor
std
aas
mov
add
mov
mov
xchg
jge
xchg
dec
shlb
jp
adc
xchg
std
scas
cmp
stos
adc
xor
hlt
dec
xor
sub
ja
int
shll
or
mov
jne
das
adc
adc
cmp
and
pop
das
aad
add
pushf
cmp
mov
jns
sbb
lret
out
fsubl
cwtl
sub
negb
cmp
rcr
inc
leave
sbb
push
mov
popf
and
or
lahf
addb
pop
loop
cmp
cltd
outsl
add
movsl
ja
mov
cmpb
mov
jb
sbb
stc
leave
jbe
mov
sbb
or
sub
add
or
dec
xor
es
ffreep
das
les
fdivl
jecxz
fmull
sub
xor
xor
and
mov
dec
mov
jnp
outsl
sub
ficomps
xchg
push
xchg
sub
loopne
mov
loop
pop
insb
push
xchg
add
shlb
aad
rep
adc
cmp
icebp
lret
xchg
addr16
pop
dec
push
clc
loope
cmp
aaa
mov
rcr
lcall
or
cmp
jae
mov
rorl
xlat
leave
jle
movsb
std
imul
dec
mov
shlb
mov
scas
loopne
loope
jno
aaa
and
and
fdivs
lcall
jnp
dec
sbb
insb
neg
mov
jne
mov
sub
ret
shll
scas
inc
pop
mov
xorb
or
je
mov
push
pop
mov
sbb
xorl
lods
xchg
inc
adc
neg
cmp
jo
sub
sbb
cmp
cmp
into
cmp
dec
leave
pushf
and
mov
lods
push
push
cltd
mov
orl
adc
jmp
pop
inc
mov
xor
fisubrl
mov
mov
pushf
aad
lods
xchg
and
xchg
int3
jo
lret
sbb
sbb
and
xchg
add
jmp
push
into
int
push
insb
imul
add
test
push
mov
arpl
repnz
test
sbb
cmp
sahf
cmp
bnd
add
cltd
xchg
cmp
sbb
push
mov
ss
push
cmp
sub
aam
and
aas
js
mov
mov
rclb
shll
mov
mov
jb
ja
and
rcrl
adc
fldl
or
dec
sub
leave
or
jbe
jno
push
ret
int3
lret
inc
test
rcrb
js
pushf
pop
add
jb
inc
inc
nop
int
fmull
push
xlat
test
sub
arpl
ret
neg
lahf
out
sub
push
adc
cmp
je
fnstenv
mov
adc
hlt
push
ljmp
stos
inc
adc
fnstcw
lret
sbb
sarb
insl
cld
cmp
dec
test
and
jbe,pt
rcr
ret
push
int
mov
sbb
cmovno
inc
fdivrs
mov
je
push
div
mov
das
in
dec
adc
dec
xchg
mov
cwtl
mov
loop
out
insb
pop
xchg
scas
jg
add
add
adc
push
fistpll
and
nop
cltd
mov
aad
and
adc
xlat
icebp
mov
pushf
js
test
or
in
sbb
in
xor
insb
ss
inc
mov
mov
sub
lods
sti
enter
stos
lret
mov
dec
jge
xchg
cmpsb
jbe
sbb
cmp
lock
and
cmp
push
repz
sti
jmp
mov
stc
push
sbb
pop
and
push
cwtl
dec
cmpsb
arpl
and
or
out
fldenv
sti
add
imul
jno
dec
out
xlat
xchg
jg
jmp
imul
inc
roll
lcall
xor
sti
ds
arpl
stos
enter
ja
pop
aaa
lahf
repnz
cmpb
in
ss
sti
sbb
mov
fwait
scas
sbb
fsubr
adc
push
sub
jecxz
sub
xchg
xor
js
pop
imul
icebp
or
imul
imul
xor
push
mov
push
ror
std
xchg
jge
push
icebp
fcompl
xchg
cltd
push
or
push
jp
or
xlat
or
sub
push
fwait
insl
addr16
mov
mov
add
mov
sub
mov
out
jnp
push
popf
loope
push
pop
pop
aaa
test
rorb
ret
int
pop
das
loope
int3
adc
mov
and
out
xor
dec
cmp
les
test
mov
adc
push
insb
inc
inc
lock
test
dec
xchg
dec
rcll
fsubrs
int3
mov
pusha
fsubl
push
push
jge
push
add
xchg
shrl
and
sub
cmc
cmp
pusha
mov
pop
rcr
push
int3
js
or
or
clc
add
mov
add
mov
or
and
and
dec
stos
mov
int3
or
cmp
mov
or
mull
fldcw
xchg
rcrb
cmpsb
or
xor
pop
outsl
stc
lcall
push
sub
pop
in
lods
pushf
push
sub
add
mov
or
stos
jp
pushf
adcl
push
push
add
icebp
enter
aam
stos
int
mov
jae
cmpsb
fmulp
and
int3
pop
xchg
lods
dec
mov
repnz
and
imul
push
add
aas
data16
jo
jmp
or
test
in
mov
arpl
sbb
xor
je
les
xor
bound
add
out
mov
push
out
int
mov
pop
adc
sub
pop
mov
xchg
cmpsb
or
in
clc
mov
repnz
xchg
ret
dec
mov
pop
test
loop
cmp
repnz
test
in
mov
add
mov
sub
mov
in
bound
cmpsl
add
mov
adc
xchg
adc
mov
or
xchg
mov
adc
into
and
push
mov
pop
shlb
shlb
test
push
mov
jne
push
cwtl
dec
mov
cmpl
push
leave
xchg
mov
repz
addr16
movsb
cmp
adc
mov
in
add
je
cmp
dec
push
in
mov
leave
jmp
in
out
pop
xchg
xlat
stc
jae
pusha
ss
mov
mov
dec
push
test
mov
ret
adc
fistpll
pusha
adc
cmp
popa
inc
add
int3
xchg
lods
adc
mov
xchg
pop
insl
jmp
mov
inc
adc
dec
popf
lret
fadd
sbb
fisttpll
movsl
ljmp
repz
add
rolb
test
insl
aad
or
repnz
ss
jo
push
pop
dec
or
mov
jle
cmp
jg
jle
in
sbb
mov
mov
nop
subl
and
incb
push
frstor
jmp
push
ret
stos
pop
mov
sbb
test
jp
dec
fisttpl
dec
push
mov
stos
fidivrl
js
sti
lahf
out
jo
scas
stos
sbb
fimull
fsubl
add
pushf
iret
lods
sub
lods
rolb
mov
inc
xor
sahf
inc
add
rcrl
or
rcrl
xacquire
pop
fidivrl
push
jl
fwait
outsl
xor
pop
flds
popa
and
add
ret
mov
fwait
adc
dec
mov
daa
iret
rcl
sub
in
cmpsl
sub
sqrtps
push
inc
pop
cmpl
scas
push
mov
xchg
stos
and
mov
mov
stos
adc
pop
dec
cltd
lea
or
or
out
mov
add
push
insl
mov
xor
jg
ror
mov
cmp
xchg
dec
fisubrs
ljmp
inc
xchg
push
add
add
or
movsb
cs
sbb
cmpsl
push
aaa
fldcw
es
pusha
mov
sub
pop
pushf
push
int
adc
cmpsl
dec
xor
add
ja
lock
pop
push
loop
mov
js
dec
mov
mov
lret
xchg
cmp
cmp
pop
sbb
mov
cmp
imul
mov
sbb
fld
in
pushf
aaa
in
jge
pop
adc
lock
dec
sbb
inc
xchg
pop
or
pcmpgtw
or
push
jle
jb
mov
push
roll
jnp
mov
in
jg
push
aas
aad
dec
jmp
add
in
orb
movl
out
out
fmuls
ror
cmp
jmp
arpl
sbb
inc
mov
xor
inc
leave
or
cwtl
sbb
unpckhps
fwait
mov
and
and
ja
mov
ja
jbe
sti
lea
cmp
sbb
out
dec
flds
lods
rclb
sahf
jne
mov
push
or
out
sub
push
or
xchg
or
add
push
loope
cmp
mov
out
mov
mul
out
jo
idivl
sub
into
scas
pop
outsb
cmp
loope
testb
fwait
inc
aad
mov
push
into
aad
pop
movsb
sbb
data16
jo
xor
inc
pop
rclb
fidivs
mov
iret
loop
nop
sub
push
jb
pop
xchg
daa
or
sub
push
sbb
lahf
inc
sbb
dec
ror
cmpsl
fdivp
pop
mov
xor
les
cwtl
in
or
sti
aad
repz
mov
shrb
cmpsl
rcrl
mov
setle
xor
pop
push
pop
jle
xchg
outsl
inc
xchg
gs
call
test
repnz
int
sub
mov
and
push
cli
inc
mov
ret
adc
pcmpeqb
mov
lcall
jnp
test
mov
cs
mov
loopne
lret
clts
mov
stos
cmpsl
je
adc
dec
add
add
mov
mov
or
aaa
cmc
and
ret
or
sub
sbb
addl
mov
je
aad
push
adc
out
imul
mov
lds
adc
or
add
mov
xchg
lcall
jl
cmpsb
mov
rol
sub
jne
out
cltd
sub
xchg
pop
stc
mov
adc
rcrb
mov
adc
adc
push
jmp
test
jae
cmc
inc
enter
out
outsl
add
daa
cmp
and
mov
xchg
add
cmp
fwait
mov
lock
mov
mov
push
adc
cmp
sub
jbe
pop
pop
pop
or
fldl
mov
or
jne
pop
xor
daa
jnp
std
or
lods
or
lret
push
pop
out
cltd
mov
xorb
pop
mov
jno
js
mov
mov
jae
idivb
adcb
add
pop
movsl
jg
pop
adc
lock
fdivl
into
xor
les
fsubr
lods
cwtl
scas
repnz
jo
xchg
xor
aad
jle
stc
test
inc
popf
xchg
push
jge
hlt
das
repnz
popa
insl
cmpsb
daa
icebp
cmp
mov
sti
jle
outsl
addr16
push
iret
gs
mov
add
mov
movsb
pop
out
fnstcw
loope
add
fcompl
mov
clc
in
lahf
mov
in
mov
inc
daa
pop
lcall
jne
lock
iret
cli
aad
sbb
sub
mov
pop
ret
add
jo
sahf
iret
and
hlt
mov
mov
jg
add
hlt
pop
sub
cmp
mov
xor
mov
adc
fs
mov
mov
test
push
sti
cmp
pop
andb
push
bound
xorb
loope
adc
or
pop
cmp
mov
sub
dec
or
jle
das
jp
push
xor
lret
dec
push
clc
dec
outsb
cltd
jns
xchg
bswap
inc
cld
scas
cmp
pop
imul
leave
mov
dec
nop
fcomi
dec
jl
idivl
lock
daa
xlat
andl
fcompp
addr16
jns
pop
mov
push
jae
and
push
repnz
jo
xor
push
mov
negb
mov
jnp
repnz
pop
mov
cmp
fildl
or
cltd
fcoml
rol
test
imul
stos
mov
mov
mov
dec
jne
dec
and
shl
add
push
and
add
shl
sub
sub
movsl
sbb
or
cld
mov
std
xor
add
stos
data16
iret
mov
sahf
adc
mov
jne
outsb
xchg
mov
out
mov
aam
mov
lock
or
loop
inc
insb
inc
sbb
pusha
sbb
xchg
mov
xor
cmp
lods
mov
or
scas
jge
repnz
mov
pusha
scas
in
sti
out
insb
xchg
clc
xchg
lock
mov
jl
je
repz
jle
pop
je
push
xor
or
addr16
ljmp
xchg
xchg
test
push
enter
jmp
jl
shr
ja
in
push
jle
jge
jmp
out
cmp
je
or
js
sbb
leave
inc
add
into
rorl
pop
jnp
outsl
push
adc
loopne
imul
push
ret
lock
cmp
push
mov
pop
call
cs
jp
pop
shll
xchg
push
shll
xor
mov
fnstenv
fstpl
shr
or
dec
add
lea
mov
pop
inc
pop
add
sub
daa
out
push
insb
popa
das
add
push
xor
mov
xchg
lcall
jb
icebp
add
and
or
repz
outsl
mov
jl
and
push
in
cmp
gs
ret
and
and
ret
cmp
or
jp
les
or
ss
jge
jmp
xor
jge
pusha
push
insb
xchg
jl
adc
btsl
fdivrl
loopne
xlat
xor
mov
stc
mov
inc
int
and
cmp
push
fwait
mov
cmp
push
push
mov
sarl
jbe
sub
xor
dec
repnz
push
fists
lods
mov
mov
push
sahf
cmp
in
xchg
xor
int
dec
jle
sub
les
fnsave
fstpl
repz
sub
test
scas
push
and
mov
lods
mov
add
and
je
add
cmpsb
xchg
and
xlat
leave
nop
push
and
add
insb
jl
fsub
adc
pop
pop
and
push
mov
and
lock
test
lahf
xchg
sbb
sub
lods
aad
mov
push
stos
mov
notl
cwtl
ficompl
test
data16
shrl
cld
outsl
lods
mov
not
or
push
jnp
loope
adc
stos
lcall
stos
out
movsb
xor
sahf
mov
mov
mov
hlt
int3
xchg
mov
loop
xor
cmpsb
mov
popa
sbb
test
fs
shl
cld
dec
hlt
aas
sub
stos
and
stos
and
fildl
and
cmp
mov
mov
inc
mov
and
bound
sub
test
push
mov
jne
subb
dec
mov
xor
loopew
fbld
inc
hlt
inc
adc
in
jo
jecxz
inc
pop
mov
pop
stc
jbe
mov
add
int3
xchg
add
mov
sti
jl
imul
ret
jne
push
rorl
sbb
jbe
cld
xchg
scas
jle
adc
and
adc
test
xchg
scas
hlt
ret
jns
fcmovnu
inc
and
xchg
imul
and
popa
sahf
inc
mov
daa
push
cmovns
jg
mov
add
gs
test
out
sbb
lcall
dec
lea
pop
mov
int3
xchg
andl
loopne
mov
jae
call
sarb
dec
cpuid
dec
adc
cmp
mov
into
or
nop
shll
in
aaa
jp
mov
push
jne
sbb
xor
out
iret
lds
imul
jnp
popa
pop
subl
xor
fldenv
outsl
sbb
test
dec
mov
jle
jge
test
sbb
xchg
loope
mov
loope
repnz
dec
inc
in
jl
dec
push
lret
pop
mov
in
lods
or
mov
filds
dec
shl
push
inc
or
xor
aam
decl
inc
inc
out
push
lods
inc
jb
pop
fidivrl
lahf
push
or
aad
cld
mov
sarb
dec
iret
cmp
ror
bound
int3
adc
fsubrs
stc
ljmp
outsb
pop
in
ret
lds
shrl
jecxz
enter
imul
arpl
sbb
or
sub
pop
pop
outsb
pop
xchg
sbb
inc
jge
mov
cmp
sub
xchg
jns
mov
xor
rclb
mov
inc
cltd
pop
sub
fwait
push
add
aas
add
mov
adc
mov
in
lods
lretw
mov
mov
fdivl
rcrl
sub
daa
adc
cmpl
inc
dec
xor
mov
repz
popf
stos
aad
adc
push
cmp
call
stc
jle
adc
and
push
fs
and
inc
shl
mov
jmp
shll
inc
dec
enter
and
or
mov
push
cmpsb
xor
nop
jecxz
in
data16
cli
jbe
popa
mov
or
push
repz
jns
adc
stc
imul
inc
xor
std
enter
xor
adc
in
xchg
ds
loope
lea
imul
mov
xor
adc
lahf
mov
scas
jae
jl
test
xchg
aam
mov
cld
or
inc
stos
cli
dec
movsl
or
xlat
pushf
fnsave
lods
push
and
test
stos
jl
movsl
and
add
out
gs
cli
xor
stc
push
xchg
push
nop
jg
xchg
lock
mov
les
rcrb
dec
sub
inc
sub
fisubs
cmp
ret
shll
shlb
mov
je
aam
mov
pushw
mov
cltd
and
stos
xor
pop
dec
std
and
leave
cmp
add
xchg
push
cmpsb
xchg
hlt
push
xchg
jb
ljmp
cmp
or
mov
aaa
shr
push
cmp
inc
adc
bnd
xchg
loop
outsw
pop
sti
out
mov
rorl
jns
sub
inc
stc
hlt
xor
inc
orb
cwtl
cld
xlat
mov
xchg
adc
call
and
mov
push
sub
mov
cmp
jno
sub
test
loopne
push
rcrl
mov
arpl
jns
sbb
xor
lcall
inc
cmc
fcmovnu
jae
pop
push
xchg
sahf
jg
leave
add
mov
sbb
cmpsb
push
iret
sub
jp
fiaddl
adc
xor
lcall
lods
movsb
filds
push
or
inc
mov
lea
mov
inc
arpl
mov
push
xchg
push
fwait
mov
pusha
push
xchg
ja
jl
jae
loope
mov
dec
fistl
popf
test
shlb
dec
mov
fsubp
xchg
sub
push
jge
jo
add
test
add
adc
mov
cs
es
mov
inc
inc
lcall
and
or
xchg
lcall
cmpsl
mov
mov
out
xchg
and
xorl
outsb
and
ret
push
mov
sub
adc
xchg
cmp
outsl
or
into
imul
push
gs
adc
push
data16
aas
daa
dec
lods
sahf
ljmp
jo
and
adc
mov
int
es
cmp
inc
cmp
adc
fistpl
xor
inc
adc
outsb
scas
pushf
icebp
shl
out
pop
ret
jecxz
shlb
rclb
mov
xor
dec
int3
leave
dec
mov
pop
rclb
movsb
cmp
cmp
repz
cmc
dec
in
pop
dec
push
mov
outsb
sub
cmc
mov
jnp
fdivs
cmp
sbb
cmp
jg
mov
xchg
pop
hlt
dec
clc
ret
and
leave
xchg
adc
call
jno
popf
ja
pop
sub
and
cld
cmp
fidivrl
insl
test
int3
pop
xor
xchg
lods
clc
mov
popf
jnp
jae
cltd
sbb
je
cmp
inc
inc
aas
pop
rcll
scas
and
test
xor
in
cs
push
test
sbb
add
push
gs
mov
test
pop
pop
jne
push
cmc
enter
std
cs
loop
or
xchg
mov
mov
repnz
cmp
add
cwtl
test
sbb
fwait
sbb
in
jns
in
jbe
pop
fldcw
and
add
pusha
in
into
mov
add
xlat
sbb
cs
mov
sarl
orl
sub
pop
xor
add
sub
sbb
xor
fnstcw
mov
cmp
or
jmp
xchg
popa
dec
fldt
adc
lds
into
jae
test
jg
xchg
push
or
xor
mov
xchg
rcrl
dec
fwait
loope
cmp
inc
outsl
sbb
outsl
loopne
xchg
outsb
int
jl
idivl
loop
push
cmp
fistps
sbb
mov
pop
pop
idivb
loopne
pop
xchg
in
mov
add
sahf
mov
mov
jecxz
mov
add
movsb
inc
sub
mov
ret
jb
clc
rcll
mov
pop
fidivrs
sub
mov
push
cmp
fcmovu
xor
and
in
add
or
lret
int
cmpb
inc
jg
and
in
push
inc
lds
and
icebp
int3
or
repz
inc
push
and
dec
xchg
mov
adc
xchg
loopne
and
lcall
jmp
dec
loop
fbld
gs
dec
mov
mov
sub
ficoml
out
movsb
pop
mov
add
js
test
rorb
clc
or
lock
or
cmp
cmp
int3
mov
jnp
std
jnp
jp
xor
cmp
push
and
xchg
xlat
pop
push
cld
pop
lret
push
roll
pop
fisttpll
test
mov
int
xchg
nop
leave
push
js
jle
enter
mov
scas
or
cmpb
inc
pushf
leave
adcb
add
lock
mov
jmp
bound
mov
hlt
test
jo
pop
sbb
jle
push
js
enter
imul
push
pop
imul
dec
mov
out
jno
jns
arpl
sahf
aas
adc
scas
rclb
fdivs
out
test
jg
aad
or
lods
les
and
xor
push
scas
mov
push
xchg
js
mov
rolb
jmp
mov
pop
or
jns
xor
mov
sub
aad
and
push
popa
or
pop
adc
pop
loopne
and
popa
scas
addr16
ja
jle
fidivrs
rcr
mov
jnp
add
xchg
shll
pop
out
mov
pop
and
out
push
xor
sbb
xor
push
roll
inc
sahf
addr16
les
fsubrl
daa
jnp
sbb
hlt
clc
cmpsb
int
mov
inc
mov
push
out
mov
push
dec
aad
jp
xchg
xor
dec
and
mov
int
cmp
ljmp
and
aaa
jmp
out
outsl
mov
popf
adc
mov
adc
push
fs
mov
add
adc
ds
out
xor
push
xchg
xchg
jmp
out
fwait
mov
jmp
and
jg
es
orl
mov
jb
not
adc
cmp
mov
dec
ljmp
add
dec
xchg
or
popf
jne
mov
add
movsl
cmp
jbe
leave
loopne
jge
adc
in
jb
mov
cmc
sti
arpl
cmp
repnz
or
pop
in
es
fcomps
mov
loopne
mov
stos
xchg
cli
mov
cmp
aam
fxch
daa
movsl
fadds
mov
movsb
mov
repnz
rcr
sub
mov
imul
jno
jl
popf
adc
pop
insb
jae
incl
push
push
adc
rcll
sub
cmp
or
popa
hlt
cmp
imul
imul
movb
xlat
sbb
repnz
mov
movsb
xlat
or
dec
jp
add
popf
sbb
loope
testb
cmp
je
arpl
mov
ficoml
or
clc
mov
and
lahf
lock
jp
mov
mov
out
sti
mov
cmpsb
fcompl
pop
ljmp
out
and
pop
xorl
pop
orb
pop
js
jae
fisttps
movsb
fs
push
mov
fidivrs
or
mov
fcoml
movsl
push
les
insb
insb
jo
mov
add
mov
mov
call
sbb
testb
cld
pop
sbb
jl
push
loop
scas
into
ss
mov
mov
in
jno
and
insb
les
xchg
andb
dec
mul
dec
rclb
mov
inc
aaa
xor
and
nop
jp
je
xor
jl
aam
cmpsb
adc
xchg
dec
jb
outsl
cmp
cmc
jg
adc
dec
sub
or
adc
mov
punpcklwd
xor
lds
sub
test
push
ret
popa
add
rorb
pop
loope
mov
dec
and
imul
inc
test
adc
sarb
mov
jecxz
xchg
out
pop
nop
popa
adc
sub
inc
and
and
popa
xorb
adc
dec
test
pop
repz
pop
outsb
add
jno
mov
add
cmc
mov
fdivrp
outsl
ljmp
adcl
adc
or
adc
mov
sti
imul
sarb
xor
pop
cltd
add
add
or
jecxz
and
cltd
inc
or
rcl
inc
xor
mov
mov
pop
in
cli
imul
fildll
jnp
mov
hlt
sahf
pusha
icebp
sti
repz
out
add
repz
xor
loop
pop
or
shrb
jbe
push
dec
jne
mov
jns
lcall
xor
cmpsb
rcrl
out
ret
lds
loope
jmp
shlb
cmp
scas
or
or
and
out
mov
sbb
andl
aam
cmp
pushf
or
push
mov
or
mov
int3
in
loope
lahf
scas
jecxz
rorb
int3
and
push
loop
stos
adc
fs
popa
cmpsl
cmpsl
test
out
mov
repnz
popa
jb
loope
pop
xor
jle
mov
or
ljmp
int3
lods
inc
dec
pop
jmp
cmp
and
cwtl
int
outsb
sbb
or
test
cmp
or
clc
into
rclb
push
add
pop
inc
fs
jmp
mov
scas
movsb
and
out
mov
xchg
test
leave
mov
jmp
outsl
jp
xchg
cmpb
negb
pop
fadds
xor
aaa
icebp
pop
gs
xchg
mov
fcmovnu
pop
dec
xchg
test
dec
adcl
add
arpl
in
xlat
fldl2e
outsb
sub
jbe
jle
leave
or
inc
cmpsl
stos
xchg
add
inc
rorl
pushf
add
lea
out
push
lcall
dec
or
jmp
mov
ldmxcsr
mov
pop
int
sar
test
bound
jo
xchg
adc
xor
pop
xor
pop
mulb
loop
adc
sbb
cmp
insl
xor
lret
or
scas
xchg
mov
push
fwait
in
subb
stos
data16
dec
adc
or
mov
dec
jbe
popa
jae
movsb
jnp
dec
pop
hlt
js
out
mov
insl
popa
adc
scas
mov
jno
push
xchg
cmp
gs
inc
and
mov
in
nopl
cmpsb
aad
and
lock
and
inc
repz
push
cmp
lods
mov
daa
out
jne
push
pop
out
js
outsb
lods
jne
rcrb
orl
test
inc
fcoml
aad
cmp
testl
xchg
rcr
jo
adc
dec
out
xchg
insb
push
mov
fistpll
loope
sub
insb
xchg
or
inc
jecxz
out
lcall
push
jecxz
add
lds
jo
roll
push
inc
mov
or
fildll
pop
popa
sti
gs
cltd
inc
cmp
mov
and
inc
xor
push
loopne
mov
dec
out
or
mov
negl
iret
test
testl
push
add
jl
xor
push
pop
clc
aam
loope
jo
cmpb
dec
or
add
inc
popf
pop
xor
inc
loop
pop
ljmp
lcall
sub
fmull
mov
mov
and
inc
aad
adc
out
ficoml
cmovs
test
dec
xor
in
sahf
inc
fidivrl
jns
mov
mov
jl
push
loope
xchg
insb
mov
dec
mov
dec
or
enter
push
lret
scas
cli
cmp
pop
divb
shl
push
mov
repz
es
pop
dec
mov
jbe
sti
scas
stos
inc
push
sbb
cli
jne
incl
jl
int3
insb
call
mov
xor
push
xchg
loope
push
add
popf
jg
inc
icebp
filds
push
mov
sbb
popf
adc
fucomp
jmp
xchg
pop
data16
in
mov
daa
or
frstor
pushf
adc
mov
inc
or
addb
cmp
lahf
arpl
mov
movsb
cmp
ds
sub
popa
dec
fcmovb
xchg
or
jmp
mov
sbb
inc
and
scas
and
outsl
in
lret
nop
mov
lret
push
adc
int
fstpl
xchg
shr
add
into
data16
jb
sub
jae
dec
mov
je
sub
pop
repz
inc
cli
add
test
fisubl
test
in
imul
mov
pop
jecxz
mov
sarb
enter
cmp
lds
xlat
mov
or
push
mov
or
in
jge
push
pop
mov
mov
stc
imul
sub
sarl
shll
out
stc
mov
add
and
imul
mov
push
stos
add
jge
sub
movsb
sub
and
mov
fs
mov
arpl
pop
imul
mov
loopne
les
fidivrl
clc
js
sub
cmc
cwtl
inc
scas
pop
and
cmp
enter
outsb
in
and
in
adc
fnstenv
or
push
mov
ss
push
pusha
or
pop
out
cmp
add
scas
sbb
or
dec
jmp
aas
pop
fists
jne
in
xchg
inc
mov
add
cmp
enter
sub
nop
popf
dec
out
fstpt
or
or
push
dec
xor
call
xchg
rcrl
mov
or
push
jno
cmp
bound
mov
stc
lods
pop
sub
xor
jp
filds
push
mov
out
addl
stc
mov
push
cs
mov
push
xor
loope
mov
addr16
sub
pop
fcomp
sub
add
push
push
sbb
addr16
into
loope
insl
pusha
sub
push
bound
roll
imul
mov
icebp
sub
xchg
inc
push
push
or
and
xchg
mov
xor
cwtl
cmc
dec
test
addb
inc
mov
movsb
and
shlb
fildl
push
and
cs
cmc
in
mov
cmp
push
xor
xor
dec
daa
aad
jg
or
sbb
push
into
lcall
outsb
mov
push
aas
sbb
push
mov
add
mov
lods
leave
sub
ja
gs
dec
shl
push
jmp
adc
cwtl
cmp
fcomi
outsl
mov
daa
and
mov
or
cmpsb
add
andb
shl
jle
and
inc
cmp
sub
cmpsb
das
inc
xchg
sti
cmpsb
sbb
xor
adc
jmp
jmp
pusha
lods
mov
mov
jmp
push
cmp
pop
and
push
inc
xor
pop
enter
shrb
lods
icebp
xchg
dec
mov
gs
push
fbld
inc
push
jns
lock
aas
sub
pop
call
dec
mov
js
cmp
fucomp
mov
fdivrs
and
fsubl
add
stc
push
push
jle
mov
push
movsl
insl
movsb
add
enter
jnp
adc
dec
dec
stos
js
xchg
jnp
mov
test
addr16
mov
cli
orl
sbb
out
xor
clc
gs
in
movsl
cli
mov
jg
add
loopne
xchg
xchg
out
xchg
push
cmp
mov
aad
inc
cmp
je
xchg
test
dec
jg
adc
in
mov
test
cwtl
mov
daa
xor
add
push
addb
in
inc
dec
mov
pop
and
int3
lock
lret
flds
dec
sub
cli
add
nop
xor
cmp
stos
shr
fcoms
or
add
cli
call
pop
scas
seto
pop
mov
pop
ret
daa
cmp
pop
add
aas
or
mov
aad
add
loope
sub
inc
pusha
sarl
gs
add
xor
testb
adc
sub
xor
xcrypt-ecb
cmpsl
leave
mov
not
leave
lods
push
sub
mov
mov
test
ret
inc
lahf
cli
lcall
in
xor
outsl
das
es
sbb
mov
loope
dec
mov
xchg
and
es
in
aam
test
cmc
ret
or
cmp
sahf
push
stos
jns
cli
pop
insl
xchg
lcall
repnz
fs
mov
filds
outsl
movsl
test
sub
jno
push
out
out
mov
aaa
mov
mov
adc
loop
cwtl
adc
aaa
push
push
jecxz
loop
pop
mov
mov
sbb
mov
in
sub
inc
mov
fiaddl
inc
xlat
sbb
lods
dec
jo
xlat
inc
mov
or
jg
setl
out
out
imul
push
fs
sahf
sti
lods
gs
nop
pushf
add
hlt
movsl
test
mov
gs
adc
sbb
mov
xorb
adc
mov
mov
mov
repz
xchg
xchg
sbb
loopne
jno
std
test
cld
repz
ret
inc
mov
jo
aam
and
cmc
outsb
push
push
imul
mov
xor
js
pushf
icebp
xor
inc
pop
mov
dec
sbb
push
mov
xchg
push
mov
mov
in
or
int3
repz
pop
dec
push
shll
mov
mov
mov
outsl
testb
addr16
inc
stc
cmp
dec
repnz
xchg
js
stc
cli
icebp
ret
push
out
lret
mov
ljmp
lret
mov
outsl
mov
ret
cmp
dec
rorl
mov
push
xchg
xor
adc
cmpsl
popa
mov
pop
sub
das
push
flds
mov
in
rcll
cmp
xchg
out
lcall
ljmp
test
push
add
jmp
jae
mov
inc
into
push
sub
scas
divl
pop
or
and
cli
adc
or
jp
jnp
in
xchg
jns
or
sahf
iret
sahf
rorl
mov
ss
push
mov
jne
popf
arpl
es
loop
sub
and
decb
cmp
xchg
sbb
xchg
outsl
mov
sbb
push
mov
je
andb
inc
scas
das
fists
test
enter
mov
mov
jmp
jge
cmp
loop
cmp
xchg
clc
das
cmpsb
xor
jge
call
add
movsb
cld
push
pop
ds
xor
leave
imul
mov
or
ljmp
fprem1
fs
mov
jnp
faddl
push
cmp
test
sbb
push
clc
xor
pop
dec
lods
jmp
sbb
sub
js
mov
in
mov
or
sub
inc
adc
cwtl
jo
cmpsl
out
andl
cmp
jmp
push
sbb
xchg
gs
cmc
jno
lea
shr
lods
xchg
jno
fs
leave
push
pusha
xor
lret
enter
cmp
gs
addr16
mov
push
int
push
sarb
push
xchg
jl
test
in
and
or
sub
flds
in
xchg
jno
sub
sub
jo
stc
lock
pushf
stc
or
xchg
xchg
rcll
pop
jle
pop
mov
in
mov
ds
push
fxch
insb
jge
add
negb
push
in
out
ja
or
dec
testl
shrl
jge
cmpsl
and
loopne
shll
xchg
cmpsb
mov
sub
out
icebp
leave
into
data16
enter
jb
outsb
mov
in
movsl
aam
out
sti
mov
out
fisttpll
popf
cmp
stos
cmp
inc
cmp
inc
dec
adc
ret
push
ljmp
lret
in
mov
mov
jae
loopne
stos
popa
ret
jb
out
sar
sub
pop
shlb
orb
cwtl
dec
lahf
stos
sub
add
ficomps
sub
push
cmc
jmp
flds
add
out
and
test
sbb
pop
mov
faddl
push
push
repnz
add
or
mov
or
and
in
lods
push
push
xor
rorb
mov
jns
into
lods
enter
in
es
testl
cld
gs
repz
cmc
std
out
cmp
xor
out
je
inc
xchg
cmp
sub
les
sbb
nop
mov
fcomi
cmp
lds
cmpsb
cmpsb
push
jl
xlat
add
xchg
ficomps
fs
jne
test
mov
lock
daa
pusha
aad
xchg
add
inc
out
push
adc
xchg
push
out
mov
ss
lcall
jecxz
in
xorb
popa
xchg
out
cmp
dec
daa
call
leave
aad
add
fxch
xchg
test
std
mov
xchg
in
push
push
sub
aas
hlt
fs
movnti
out
gs
xchg
ja
jae
movsl
pop
dec
cld
mov
sbb
in
push
pop
sbb
out
out
cmp
xchg
add
xor
xor
mov
push
cmpsl
push
rorb
cmpl
or
or
pop
lret
cmp
outsb
or
lock
sbb
push
and
dec
jecxz
sbb
popf
dec
push
cmc
loop
cmpsl
imul
push
sub
push
jg
lods
out
mov
mov
sbb
dec
jno
inc
data16
in
into
add
repnz
pop
in
stc
scas
out
xchg
xchg
shrl
test
pop
xor
xchg
gs
xchg
push
imul
in
pop
sub
movhps
es
xchg
imul
int
push
adc
ss
jo
in
fisttps
roll
loope
xor
or
test
xchg
addr16
rcll
in
add
aad
lods
pop
jb
pop
xor
mov
out
push
or
je
adc
adc
into
sbb
pushf
int
mov
rorl
jo
cld
in
daa
dec
out
sub
xor
out
inc
sub
mov
hlt
insl
and
mov
xchg
mov
movsl
dec
dec
hlt
sbb
mov
inc
xor
cmp
or
jbe
pop
mov
mov
mov
mov
das
jo
jg
repz
das
push
or
xor
xchg
bound
fidivrs
mov
mov
loop
adcl
mov
divb
or
lcall
mov
repz
ss
or
xor
jnp
xor
andb
push
and
mov
xor
call
mov
push
imul
loop
out
jbe
add
ds
and
cmpsb
stc
icebp
andl
cmpsb
pop
mov
pop
sti
aas
enter
shl
insb
fidivrs
shrb
imul
enter
cmpsb
pop
js
roll
xchg
push
dec
push
aam
nop
cmp
dec
inc
shlb
jae
lock
or
je
cmp
sti
add
mov
inc
in
fxch
add
sbb
mov
enter
xchg
fadd
out
push
cwtl
into
and
jno
scas
lcall
fisubrs
pop
outsl
gs
dec
push
mov
aaa
dec
dec
inc
fsubp
cmpsb
add
and
mulb
shlb
push
scas
pop
pop
pop
push
inc
je
dec
dec
pop
icebp
adcb
dec
xchg
sub
and
jno
mov
rolb
lock
fldl
mov
and
pop
or
out
jge
lock
mov
xchg
loopne
aam
or
jnp
xor
jg
mov
xchg
push
aas
gs
mov
daa
enter
cmp
int
pop
popa
push
sti
pop
es
or
rcrl
inc
mov
lds
add
add
push
pop
and
xlat
xchg
cmp
sbb
sahf
fcmovnu
subl
cld
cltd
out
fsubl
out
dec
xor
mov
dec
aad
push
lods
or
xorb
rcrb
pop
cmp
jmp
cwtl
sahf
sbb
push
xchg
inc
fwait
test
inc
xchg
ret
repz
or
sub
cmp
or
popf
inc
adc
ljmp
stc
mov
call
add
or
inc
xchg
aaa
les
or
push
push
inc
scas
inc
jnp
xchg
imul
in
and
sarb
in
adc
insb
ds
movl
mov
js
cld
cmp
cmp
stos
insl
ss
test
pusha
mov
and
gs
data16
outsl
jns
je
aaa
leave
loop
add
sbb
adc
mov
pop
xchg
push
xchg
clc
in
leave
jp
pop
cmc
cmpsl
cmp
xchg
ss
pop
flds
sbb
xor
adc
inc
test
jecxz
mov
cli
test
xchg
int
inc
pop
mov
aas
mov
nop
jle
fs
mov
jo
dec
push
outsl
movsb
stc
fcoms
mov
ss
sarb
mov
out
nop
sub
adc
popa
xor
pop
jle
sub
arpl
bound
push
int
ret
or
in
int3
mov
mov
dec
loope
ds
jnp
cltd
jl
les
cli
xor
call
test
icebp
xlat
pop
cmp
cmpsl
repnz
add
loop
fwait
pop
test
add
dec
push
cmp
mov
xchg
stos
js
jb
xor
lahf
aaa
pop
bound
add
pop
les
mov
nop
pop
cli
imul
sbb
add
mov
aam
out
jge
push
das
sbb
pop
dec
jl
xorl
mov
push
sub
mov
mov
daa
ja
insb
loopne
adc
das
xchg
xchg
imul
sbb
jmp
ficomps
dec
jecxz
loop
push
in
pushf
dec
mov
stos
cmp
push
mov
push
jge
xchg
dec
js
cmp
cmp
mov
add
leave
fsubrs
out
add
ret
in
xchg
sub
lret
or
push
fdivrs
jne,pt
cltd
cld
lret
mov
into
push
inc
lods
insl
dec
jecxz
test
mov
or
mov
jecxz
leave
dec
push
mov
scas
push
pusha
stc
stc
scas
and
inc
sbb
aaa
jecxz
imul
cmp
out
jo
stos
push
movsl
mov
bound
fstpl
adcl
add
in
shlb
mov
aaa
insb
pop
sbb
popf
lret
fs
andl
loope
add
shlb
out
nop
insl
fxch
mov
imul
sub
or
inc
sahf
push
adc
inc
jbe
shl
jp
mov
ficoml
lds
rcrl
sub
shll
jmp
out
add
shrl
mov
pop
in
sbb
ja
repz
or
std
in
jb
sub
and
push
xor
xchg
sub
mulb
mov
fwait
out
add
aaa
inc
mov
hlt
loopne
movsl
iret
sbb
aad
repnz
xchg
mov
sub
cmpsl
imul
adc
jle
mov
mov
and
dec
add
dec
stos
adc
pusha
and
mov
mov
cmc
shlb
cli
call
or
adc
jl
and
cmpsb
push
lcall
and
mov
icebp
fs
in
sub
jg
std
sub
push
lret
adc
jne
clc
mov
jnp
mov
push
pop
cs
adc
leave
or
and
scas
shr
rolb
pop
sub
and
in
mov
mov
or
ret
jne
loop
ss
pop
in
pop
push
pushf
or
stos
repz
divl
loope
inc
xchg
jp
mov
out
in
hlt
xchg
push
fcompl
lock
or
andl
add
out
cwtl
loope
scas
test
fisubrl
int3
icebp
aaa
ficomps
cmp
or
or
lret
hlt
daa
cmp
or
inc
sbb
lret
cmp
jecxz
and
out
jl
cmpsl
push
pop
push
xor
lcall
dec
call
stos
rcll
jp
adc
lret
or
je
sub
rorb
inc
mov
sub
fcmove
sbb
and
add
sti
jl
ja
pop
jnp
lods
lock
leave
mov
imul
jb
fcmovnu
adc
test
adc
or
cltd
lea
xor
cmpsl
cmp
xor
jo
inc
pop
add
xchg
ja
int3
dec
jns
jecxz
repz
jp
inc
mov
lods
shl
mov
mov
fs
jbe
mov
incb
and
in
sti
rorb
dec
movsl
mov
outsb
ja,pn
or
mov
pop
es
and
xchg
sbb
adcb
scas
dec
inc
imul
xchg
inc
push
mov
jb
nop
mov
inc
jecxz
inc
scas
fisubs
jle
pop
bound
popl
data16
sbb
mov
mov
fnstenv
adc
mov
mov
orb
das
push
dec
jnp
cmc
scas
je
cmp
mov
repz
shll
mov
sbb
xchg
inc
add
add
xchg
bound
enter
lret
push
mov
loop
lds
cltd
push
adc
in
fisubs
pop
icebp
pop
loope
sbb
pop
jbe
lea
xchg
in
cli
cld
fimuls
sarl
push
roll
test
lock
push
add
idiv
pop
fisttps
scas
push
pop
xor
in
push
fdivrs
dec
add
or
mov
xor
scas
loope
les
mov
data16
fcmovnu
add
mov
and
lds
jnp
or
dec
subl
jb
call
sarb
mov
xchg
sbbb
pusha
mov
xor
mov
sub
or
jg
mov
sub
es
dec
push
push
test
pop
insb
call
mov
mov
jae
and
inc
jle
ret
jns
jae
add
dec
fisubs
lods
in
daa
sub
mov
adc
sub
cmp
pop
pop
mov
xor
outsl
xor
mov
add
js
jmp
mov
js
push
pushl
insl
in
xchg
sbb
sar
ja
sarb
sbb
cmp
jne
sbb
enter
or
mov
mov
movsl
movsb
shll
imull
sbb
int
push
mov
xchg
add
jp
bound
or
xchg
jb
in
sub
enter
mov
inc
push
sbbl
mov
jle
xchg
test
test
mov
add
or
push
inc
cmp
cmc
push
notb
jecxz
sub
mov
daa
mov
popf
outsl
mov
sarl
push
jnp
add
orl
push
mov
adc
bound
sub
bound
shlb
addr16
or
fmulp
test
adc
std
in
pushf
fidivs
fsubrs
xor
adc
shl
push
push
or
insb
shrb
mov
shll
cmc
adc
pop
movsl
scas
xchg
into
outsl
dec
rol
fists
aam
repz
inc
pushl
inc
subb
xor
pop
insl
call
faddl
clc
adc
jmp
sub
js
pop
or
and
sbb
lret
xchg
leave
outsl
xorb
das
sti
mov
out
fwait
mov
ret
pop
insb
movsl
sbb
and
xchg
mov
push
sub
lods
test
inc
inc
cmp
sub
lahf
cmpsl
inc
push
inc
clc
addr16
call
sub
xchg
jns
add
shrb
jp
adcb
xchg
pop
test
mov
xor
frstor
xchg
sub
push
add
push
loop
jmp
pushf
dec
and
mov
and
insl
dec
jb
sarb
jae
loopne
cltd
out
sub
mov
push
jae
test
and
out
mov
xor
repnz
dec
or
pop
scas
mov
mov
bound
dec
sahf
or
push
leave
imul
or
ret
adc
jns
mov
cmp
enter
xchg
test
cmpsl
mov
bound
outsb
jae
xchg
add
int
mov
divl
cs
mov
cmc
mov
xor
xor
cmp
lods
and
stos
pop
js
push
sub
andb
sub
lods
lret
cmc
adcb
mov
lock
jnp
call
cmp
sub
jae
add
and
stos
pop
cmpsb
pop
std
dec
test
add
out
es
das
daa
test
push
or
cmp
adc
stos
push
fdiv
cs
cltd
pusha
cmpsb
test
fnsave
add
pop
inc
ja
sbb
insb
adc
pop
and
aam
shlb
fnsave
aam
and
jae
push
xchg
mov
dec
in
fcompl
mov
jb
mov
aaa
enter
lea
jecxz
dec
xor
sbb
push
cmpsl
icebp
pop
cmp
xchg
hlt
inc
xchg
xorb
xor
mov
cmpsb
andb
add
add
xor
in
cmp
lods
or
cmpsl
xor
call
adc
sbb
imul
xchg
sub
or
aad
or
xchg
push
lds
insb
push
arpl
inc
rcr
shrb
push
lock
lods
mov
stos
mov
jae
out
aam
add
leave
scas
dec
adc
add
lock
mov
nop
flds
lock
ds
out
in
jne
mov
inc
mov
lret
inc
or
xchg
pop
sbb
adc
inc
ret
push
lret
or
pushl
sub
js
bound
inc
jecxz
mov
flds
sub
std
jb
push
shrb
sbb
pop
push
int3
pop
dec
mov
jmp
bound
std
xchg
adc
pop
adc
cli
sahf
jle
js
pop
scas
in
jns
adc
mov
icebp
imul
mov
stos
movsb
outsb
xor
imul
push
add
lcall
and
xchg
stc
jp
and
cli
insb
xchg
cmp
jae
test
outsb
sub
clc
adc
fsts
jge
in
dec
and
popf
add
jp
dec
mov
repz
cmp
sbb
cmpsl
ja
cmc
stos
inc
sub
divps
mov
rcrl
xchg
pushf
and
add
inc
jb
xor
mov
add
daa
xchg
cltd
adc
push
sbb
movb
sti
lret
push
mov
insl
jge
adc
into
addr16
jbe
sub
lock
sub
jp
das
hlt
clc
jg
lds
inc
scas
jo
nop
adc
mov
sub
jmp
in
jge
add
loopne
push
lea
inc
push
insb
fidivs
inc
cmp
sahf
lahf
mov
push
rol
push
mov
jmp
popa
xor
cmc
test
mov
mov
mov
inc
rcrl
pop
jno
or
cmpsl
push
mov
mov
jbe
je
dec
jp
mov
push
cmp
xchg
int3
fld
mov
lcall
push
pop
push
mov
fldcw
into
fcmovnbe
adc
sub
push
cmp
jecxz
xor
mov
sbb
insw
cmp
jb
out
ficompl
in
or
imul
sub
imul
xchg
or
jbe
inc
and
loope
push
mov
rcll
or
lcall
or
es
popa
sub
pop
push
jne
andl
in
sub
mov
imul
adc
ds
fcompl
mov
pop
sahf
scas
movsl
int
mov
add
loope
enter
lret
pop
xlat
cmp
or
cltd
test
cmp
mov
mull
fs
ss
jecxz
pop
jae
das
mov
mov
mov
push
pop
sub
pusha
lods
enter
inc
lds
mov
pop
clc
adc
or
pop
mov
mov
push
notb
xlat
addr16
dec
das
cld
scas
arpl
xchg
test
lahf
push
fstl
ss
aas
dec
loop
mov
xchg
lcall
in
lea
adc
pop
jge
sbb
sub
push
mov
xchg
adc
sbb
nop
js
dec
or
jecxz
imul
and
movsl
jae
rorb
sahf
sbb
fildl
mov
and
dec
inc
lret
ret
cmc
dec
push
fistpll
das
and
andb
mov
ret
xor
jae
jg
mov
mov
pop
out
pushf
out
jp
pop
mov
imul
and
test
mov
test
testb
aad
pop
out
insl
stos
or
pop
xlat
cwtl
not
aas
and
sbb
cwtl
stos
test
leave
mov
inc
roll
orl
jle
sub
lret
sbb
mov
dec
lret
stos
xchg
jns
loopne
nop
or
pop
add
mov
xor
ds
xchg
jp
shrb
inc
jp
lods
add
jge
pop
dec
mov
hlt
aad
shr
dec
jecxz
in
push
jo
out
mov
mov
fstpl
xchg
jns
aaa
lock
shrb
xchg
mov
mov
mov
cmp
mov
xor
js
cmpl
jl
push
andl
aad
jno
pusha
sub
add
push
das
mov
fnstcw
outsb
inc
fimull
jo
leave
in
sub
cmp
sub
add
insb
jbe
std
lods
pop
inc
xchg
popa
jno
mov
call
pop
std
cmp
leave
sub
scas
mov
pop
iret
inc
sarb
lret
xchg
test
scas
popl
mov
loop
xor
dec
aas
push
dec
fs
loope
in
rorb
push
xlat
dec
ljmp
gs
or
xchg
adc
push
cmp
or
sub
add
xchg
or
out
imul
xlat
enter
ret
sub
into
pop
imul
aad
mov
push
jge
movsb
pop
jmp
icebp
inc
outsb
jo
or
mov
js
push
mov
pushf
sub
jns
aad
stc
xchg
aad
cmp
mov
jl
bound
lea
fucomip
pusha
xor
fimull
sti
orl
out
outsb
xor
imul
mov
add
fyl2x
int
mov
adc
push
daa
out
adcl
push
push
push
lcall
clc
aad
jo
ds
and
scas
inc
pop
pusha
jo
or
and
cltd
addr16
data16
fwait
jbe
fwait
inc
mov
xchg
inc
pop
imul
cmp
shll
addl
sub
repz
push
push
push
mov
ficoml
cmp
cmpsb
mov
jbe
icebp
dec
lahf
test
xor
scas
lods
add
data16
stc
or
mov
scas
pop
mov
and
addr16
jno
gs
jns
repz
loope
xorb
mov
xchg
push
repz
jbe
push
fwait
push
lret
inc
inc
push
or
les
int3
ja
ss
xor
xchg
xor
cs
inc
pop
xor
sbb
cmp
cmpb
sbb
test
sbb
pop
cmpsl
lods
sub
lcall
sub
adc
jne
cs
aad
les
outsb
xor
rorl
jno
lds
lods
sub
xchg
daa
movsl
outsl
lret
aad
pop
pop
js
jle
xchg
aam
repz
adc
add
xchg
mov
sar
test
adc
or
hlt
mov
pop
out
mov
push
mov
loopne
jae
xchg
xorb
decb
pop
shlb
pop
fs
stos
in
js
or
mov
fnstsw
xlat
cmp
and
push
rolb
sbb
mov
mov
pop
cmp
cmpsl
fsubrs
add
jl
adc
fldl
test
ret
sbb
dec
roll
jno
xchg
aam
pop
xchg
cs
movsb
loopne
aaa
movsl
mov
lcall
mov
stos
dec
mov
cmpsl
test
shl
inc
cwtl
in
insl
mov
mov
or
aam
lea
push
inc
ljmp
fwait
adc
jecxz
in
mulb
iret
mov
enter
shll
test
sub
les
mov
pop
lock
adc
push
inc
std
pop
and
or
test
ja
scas
cwtl
or
add
jne
jb
push
fistl
imul
out
jg
test
enter
mov
subb
push
inc
cld
roll
pop
pop
loopne
bnd
mov
imul
sbbl
mov
pop
sar
mov
xchg
cwtl
lcall
xchg
in
repnz
les
adc
dec
es
sbb
lret
shll
add
xor
ficompl
jae
xchg
mov
popf
inc
les
adc
adc
dec
pop
in
cli
ret
push
push
sbb
or
mov
push
xor
pop
lcall
cwtl
xchg
icebp
add
sbb
ds
les
mov
jbe
repnz
and
mov
cld
xchg
inc
mov
push
and
inc
jbe
in
push
fildll
ret
xchg
mov
and
or
dec
daa
jae
cltd
fiadds
std
sub
sti
aam
push
mov
cwtl
dec
inc
pop
sub
push
mov
scas
popa
loopne
loopne
add
test
enter
pop
std
lods
mov
cmpsl
ljmp
push
es
mov
and
fs
pop
popf
lods
jbe
cs
jbe
xchg
pop
mov
imul
dec
and
js
inc
cmp
add
pop
divb
arpl
pop
loop
mov
jns
mov
sub
repnz
enter
insl
sub
xor
adc
lahf
mov
shlb
pop
xchg
imul
ret
add
aad
xchg
cmp
jno
xchg
negl
mov
repz
loope
in
pop
cmp
jmp
mov
ja
bound
push
cltd
popf
lea
lahf
hlt
mov
lea
cltd
arpl
adc
mov
jg
pop
mov
hlt
jg
and
jge
jns
xchg
int
xor
int3
imull
loopne
pop
or
sahf
or
push
leave
sub
icebp
inc
fisubrs
dec
and
pop
stc
insb
pusha
lea
dec
jge
jae
adc
cmp
sub
outsb
icebp
mov
and
or
mov
outsl
inc
push
mov
fildl
shlb
sarb
mov
iret
fdivrl
xchg
ss
inc
ljmp
std
sbb
mull
into
inc
sub
imul
data16
adc
loopne
cltd
dec
jmp
and
andb
xchg
repz
mov
aam
test
xchg
roll
inc
and
sub
jecxz
and
cld
add
cmpsl
je
fs
cmp
scas
or
mov
test
cmp
dec
xchg
push
jge
fnstenv
push
push
in
sbb
sahf
sahf
fisubl
mov
mov
rcrl
mov
or
dec
in
lea
push
mov
arpl
mov
pop
mov
loopne
inc
aam
dec
out
mov
inc
push
sbb
dec
andb
outsb
mov
cltd
jmp
adc
movsb
iret
aam
mov
ss
jnp
sbb
push
mov
repnz
mov
insb
mov
and
insb
cld
jmp
imul
mov
shl
sbb
idivb
cmpsb
lods
jmp
push
jo
in
push
and
notb
sub
sub
popa
sub
test
aad
stos
xchg
jb
addr16
push
mov
jl
push
mull
sbb
or
in
pop
sub
fisttps
cmpsl
mov
divl
pop
fwait
leave
stc
dec
enter
in
lea
sub
mov
cmp
adc
hlt
inc
mov
scas
dec
fldcw
adc
or
sbb
jl
clc
call
push
xchg
pop
hlt
scas
movsl
hlt
repnz
pop
pop
jp
xchg
movl
cmp
pop
xorl
stos
int
pop
xor
sub
xchg
mov
ja
test
sbb
ds
and
cld
in
mov
cwtl
pop
loop
mov
shlb
call
aam
adc
mov
ret
jmp
dec
mov
mov
pop
nop
in
xor
mov
push
or
rorl
pop
scas
push
jno
repnz
xchg
mov
fsubs
mov
mov
xlat
out
and
lahf
cmp
jg
std
sbb
jle
mov
mov
pop
into
and
es
fdivl
sbb
mov
jne
xchg
dec
push
stc
movlps
jns
movsb
and
add
aad
cmp
int
cmp
jmp
roll
jp
aaa
inc
vpavgw
push
fcmovu
xor
mov
lret
or
adc
lds
mov
fadd
inc
pop
add
pop
cmp
sub
dec
movsl
fisttps
aam
into
ss
jno
ljmp
shrl
gs
jmp
mov
adc
mov
xchg
push
push
sbb
or
jae
mov
fistpl
push
pop
std
dec
pop
cmp
ljmp
dec
imul
dec
jle
mov
inc
shrl
mov
data16
int3
stos
jl
or
jno
or
mov
cmp
pop
xchg
lods
js
fnstenv
jno
and
xor
mov
mov
xchg
xlat
sub
push
push
repz
inc
dec
adc
sbb
and
adc
loope
adc
shll
mov
cmp
mov
repz
aas
imul
mov
xlat
out
jecxz
fwait
mov
pop
cmp
cltd
adcb
mov
jge
jb
lea
mov
lock
cs
mov
sbb
inc
push
push
or
test
ficoms
xchg
pop
mov
or
jecxz
ds
cmpsb
cmpl
shll
mov
add
jp
mov
inc
aaa
lock
sub
jo
or
dec
and
xchg
and
add
inc
call
xor
loope
daa
mov
mov
out
inc
pop
imul
daa
xchg
mov
and
outsb
jl
test
push
stc
int
outsl
lods
push
fisttps
cmp
ljmp
add
std
es
ljmp
jecxz
push
in
pop
imul
mov
dec
hlt
jno
sbbb
xor
dec
and
add
into
js
mov
addr16
daa
cmp
mov
aad
jp
mov
or
aam
jb
fstps
inc
fdivs
outsl
mov
iret
mov
flds
mov
mov
repz
repnz
pop
fwait
push
mov
rcrb
in
hlt
pop
iret
mov
jo
nop
ljmp
mov
in
daa
sbb
fs
pusha
sahf
xor
pop
lret
jge
cld
pop
xchg
xor
or
sbb
clc
orb
fildll
fyl2xp1
loop,pn
cli
push
cmpsl
sbb
and
fwait
pop
xchg
cs
and
xor
mov
arpl
push
cmp
aam
imul
leave
xchg
dec
ret
mov
adc
lret
ss
cmp
sub
loop
aas
loope
gs
in
add
aaa
cmp
cli
icebp
orl
adc
adc
shrb
adc
push
pushf
push
push
dec
sbb
jecxz
push
fs
xor
jae
sbb
mov
xchg
mov
mov
jmp
and
lods
andl
and
adc
mov
xchg
and
cmpsl
xor
imull
or
mov
nop
xchg
jp
mov
rcr
ret
push
mov
xor
adc
clc
cs
lock
repz
cmp
in
jl
insl
loope
push
cmp
pop
mov
rclb
mov
lods
fwait
aaa
mov
cwtl
dec
inc
adc
out
sbb
xchg
cmp
pop
push
add
fwait
ret
jle
lret
xor
fcos
cltd
sbb
fcmovbe
push
test
icebp
test
test
iret
rorb
add
cmpsb
jne
and
jb
or
pop
and
repnz
lock
xchg
dec
in
es
pop
call
outsl
mov
scas
cmc
bound
mov
mov
cmp
jmp
shlb
sbb
mov
addr16
rolb
call
cmp
jnp
xchg
cmp
inc
pop
sbb
divl
sbb
push
pop
add
xor
cmp
pop
cmp
test
iret
lahf
jp
ja
dec
dec
filds
test
cmpl
shl
inc
sub
xchg
int3
mov
fdivl
and
pop
and
mov
out
mov
or
sbb
mov
mov
push
mov
add
add
mov
rcll
jg
outsb
into
js
sub
dec
push
das
xchg
mov
ja
add
sub
leave
cs
mov
iret
lret
and
ljmp
cmp
mov
push
push
add
push
and
pop
xchg
push
rcr
iretw
sbb
cmpsl
lds
call
ss
adc
ret
subb
jl
lds
mov
mov
jb
jo
mov
repz
cltd
push
xchg
push
mov
xor
sbb
adc
sub
cmp
or
xchg
push
jecxz
test
outsl
and
mov
adc
xor
inc
jmp
fdivr
cmp
call
out
cmpsl
andb
out
adc
xchg
hlt
lahf
sbbl
mov
les
add
inc
loopne
les
and
adc
and
lahf
iret
ss
mov
lds
stos
push
cmc
lds
xorb
stos
jns
add
notl
or
std
in
mov
lods
insl
push
xchg
adc
lret
repz
xchg
sub
add
mov
jl
sbb
test
ret
mov
repz
or
or
push
xor
mov
jg
push
rcr
mov
pop
mov
and
divl
xchg
mov
cmp
sub
pop
imul
in
jg
clc
pop
jne
dec
jge,pt
mov
insb
sub
mov
dec
popf
mov
mov
shl
mov
call
sbb
lahf
add
pop
pusha
and
rcl
mov
jmp
cld
movsb
ss
xchg
repz
repnz
cmc
cwtl
scas
std
add
in
cmp
mov
es
push
sbb
pop
stos
fwait
ret
adc
clc
dec
sarl
data16
les
inc
push
lea
out
aas
mov
push
rclb
iret
fcomps
bound
and
in
mov
call
sahf
sbb
add
push
rcrl
cmc
les
jle
mov
push
xor
fimull
pusha
pusha
mov
mov
arpl
lcall
sub
rcrl
pop
out
mov
or
dec
sbb
add
out
pop
xor
cmpsl
arpl
insl
push
aam
pop
push
out
leave
pusha
adc
std
push
adc
cmp
stos
stos
xchg
inc
xchg
stc
jns
or
movsl
imul
xchg
pop
pushf
shrl
sbb
cmpsb
push
push
mov
mov
inc
push
test
fcom
les
xor
dec
gs
in
pop
in
jg
sbb
jl
or
shl
jb
out
mov
dec
inc
pop
push
in
jecxz
push
cld
jle
lds
or
sub
call
jmp
jmp
in
loope
daa
arpl
inc
or
sbb
out
pop
push
xlat
idivb
or
out
adc
pop
add
push
stos
mov
test
stos
jle
movsl
stos
rolb
xchg
cmp
sbb
and
dec
sub
cmp
clc
jbe
popf
out
mov
mov
and
xor
in
push
dec
cmpsb
add
sbb
cmp
jno
lcall
xchg
lret
sbb
dec
xchg
pop
pop
sub
mov
pop
incl
dec
inc
xor
xlat
push
push
push
fstp
sub
or
ret
adc
pop
pop
pop
pushf
aas
xchg
and
dec
mov
sbb
or
ljmp
mov
cmp
int3
orb
lods
xor
test
dec
xor
fiadds
add
pop
push
inc
pop
imul
sbb
shrb
push
xor
sub
cli
xchg
xor
movsl
jnp
addr16
mov
popf
mov
sahf
inc
push
xchg
and
sbb
into
fstl
subb
fcmovne
jo
sbb
cld
fbstp
bound
shrb
mov
mov
pop
or
leave
or
cli
addr16
jg
add
dec
adc
inc
add
data16
adc
gs
mov
mov
dec
mov
arpl
adc
test
mov
popa
fwait
lahf
push
rol
dec
push
xor
cmpsl
aam
jge
adc
inc
mov
push
test
out
pop
loop
aas
sub
adc
sub
stos
insb
adc
xlat
xchg
jp
pop
sub
push
testb
inc
mov
xchg
push
jl
test
lds
inc
pop
nop
mov
jnp
dec
jnp
sbb
fisubl
push
dec
mov
xor
aad
push
jp
movsl
ljmp
pop
dec
pop
mov
lods
or
jge
out
sti
push
lcall
repz
pop
pop
fisttps
inc
push
test
loope
dec
cmp
ds
mov
pop
fprem1
in
and
mov
lock
xchg
mov
bound
pop
arpl
xchg
orb
testb
xchg
jge
sub
cmpsb
xchg
rcrl
stc
xchg
and
mov
push
aam
mov
mov
adc
daa
cli
outsb
sub
sbb
out
orb
mov
mov
jmp
imul
rcll
iret
icebp
pop
out
pop
ja
push
lea
arpl
mov
shrl
pop
scas
jno
cmp
ret
inc
or
sti
imul
dec
ftst
push
pop
cmp
out
rclb
mov
lret
push
xor
loop
xor
lock
inc
add
adc
roll
xor
jno
fmuls
jg
mov
aas
int
sbb
mov
mov
add
dec
lods
cwtl
sbb
sub
int3
and
loopne
or
push
aas
mov
shll
sets
cmpsb
pushf
mov
adc
dec
and
into
mov
es
push
leave
sbb
mov
xor
mov
pusha
adc
inc
test
in
or
ja
xchg
frstor
pop
cmp
inc
sub
ja
adc
xchg
inc
movsb
or
popa
or
add
dec
pop
xor
cmp
jbe
loopne
inc
cmc
add
leave
fnstcw
and
mov
aam
push
pop
add
jb
dec
cltd
cmp
lock
pop
repz
mov
inc
xor
leave
fnstsw
add
lret
inc
mov
pop
aas
jbe
rcr
mov
in
in
jp
cld
inc
out
fisttpl
clc
jne
xchg
dec
enter
popf
pop
or
leave
in
and
aas
bnd
push
outsl
push
cmp
popf
dec
push
mov
add
cmp
imul
mov
enter
repnz
xchg
xor
push
out
mov
xor
sbb
arpl
scas
cli
sahf
aam
push
jbe
xor
lock
insl
sub
loope
dec
xchg
js
scas
xor
leave
call
dec
pop
pop
popl
out
lahf
fisttpl
out
lods
push
cld
xchg
and
mov
int
and
xchg
ret
loope
mov
and
idivl
notb
and
cmpsb
int3
inc
jo
push
add
adc
addr16
mov
push
pop
in
dec
ss
and
iret
sbb
fs
jae
imull
sub
sub
adc
mov
imul
mov
ss
das
dec
pop
mov
sbb
imull
xor
out
push
dec
mov
add
out
lock
inc
inc
cmc
mov
dec
sub
cmc
or
xor
in
xor
mov
sbb
or
cld
jnp
pop
cmpsb
sub
daa
pop
mov
xor
cmp
ret
xchg
ret
sarl
mov
arpl
popf
pop
mov
add
or
push
in
ljmp
lret
pop
in
inc
rolb
xchg
mov
mov
push
mov
movsl
stc
push
jno
fdecstp
cs
xchg
mov
out
or
pop
ss
add
pusha
outsl
int
xlat
and
ja
pop
movsb
cmp
clc
pop
jmp
push
mov
xor
imul
test
and
or
mov
testl
lock
xchg
icebp
push
inc
aaa
ret
les
adc
outsl
pop
dec
or
test
push
cmp
popf
in
cli
test
cmp
cld
out
mov
mov
pop
and
mov
sbb
fisubrl
stos
inc
pop
fs
push
int
pop
jbe
pop
cmp
xchg
fs
sub
xor
inc
mov
sti
out
mov
push
cmp
jns
repnz
lds
mov
int
iret
adc
jg
cmp
in
sub
shr
and
ficompl
repz
jecxz
or
je
push
push
push
cmp
or
mov
das
xor
dec
in
repz
lock
mov
xor
aad
jns
fildl
int
enter
ljmp
push
jecxz
imul
repz
dec
sub
xor
enter
xchg
push
popa
mov
pop
out
push
mov
cli
cmp
loopne
loopne
jge
divb
mov
rol
pop
and
sbb
push
pop
inc
in
sbb
or
in
dec
pop
lret
jo
fnsave
xor
adc
pushf
ja
or
addr16
stc
in
out
or
out
cmp
pushf
mov
dec
enter
shrb
push
imul
xor
lcall
pop
push
aaa
or
xchg
movsb
jns
cmpsb
hlt
aas
pop
adc
mov
clc
ret
mov
outsb
icebp
and
jnp
insl
or
xor
dec
jne
stos
dec
repz
add
pop
lcall
add
and
ljmp
xchg
xchg
xchg
dec
cli
or
xchg
xchg
sub
test
bound
pusha
add
popf
and
les
sub
fidivrl
adc
sub
pop
add
testb
pop
dec
aam
mov
or
mov
ss
popa
in
bnd
lods
out
cmp
xchg
and
pop
js
pop
clc
jbe
mov
call
mov
push
dec
movsb
orb
out
push
dec
push
cmp
clc
dec
cmpw
push
xchg
xorb
xchg
loope
or
das
inc
daa
in
les
pop
imul
not
sub
ja
enter
and
sbb
dec
je
aam
mov
stos
pop
cmp
add
and
or
addb
sub
cmpsl
int3
imul
sbb
pop
cmp
sbb
xchg
sahf
xor
mov
fisubs
stos
push
add
add
cmp
rclb
and
in
fidivrs
jle
jns
inc
icebp
loop
aaa
inc
inc
scas
cld
cmp
add
xchg
sti
jb
pop
jle
add
lret
mov
xchg
inc
fmuls
int3
and
mov
xor
and
ret
push
out
cmp
sti
sub
xchg
inc
mov
arpl
mov
lea
cmpb
lret
enter
inc
mov
mov
jns
add
sub
and
mov
js
ret
xchg
shll
ret
or
mov
xchg
mov
in
stos
mov
aas
sub
and
push
call
cmp
pop
les
and
sub
nop
rcrb
sbb
push
push
mov
push
cltd
push
sub
push
mov
adc
xchg
mov
lods
push
xor
cwtl
pop
insb
pop
or
cmpsb
mov
leave
int
cs
call
ret
dec
sub
int
add
adc
xchg
push
jecxz
xor
and
push
mov
lret
shll
fistps
aaa
sahf
cmpsb
sarb
mov
cmp
je
clc
or
out
cmpsl
xorb
and
enter
push
inc
or
xor
mov
stos
cli
nop
pop
rcl
insl
in
lahf
xchg
mov
push
sti
and
push
clc
mov
mov
and
mov
add
dec
es
js
and
and
test
ljmp
out
sbb
cmpsl
xor
test
or
xchg
or
mov
mov
xchg
out
dec
pop
add
pop
sub
pop
pop
loopne
dec
push
fidivs
jl
dec
sub
stos
call
mov
out
push
imul
inc
mov
xchg
repz
jae
and
sbb
rolw
cmp
add
hlt
xchg
arpl
jno
push
rcrl
sub
repz
mov
mov
orl
movsb
xor
cmp
fcmovu
mov
das
mov
xor
lret
push
push
mov
and
in
mov
sub
scas
pop
mov
and
mov
icebp
jg
lret
dec
lret
jmp
pop
lret
shlb
cmp
fbld
test
das
sub
sbb
cmp
mov
es
jns
and
jo
sub
ret
test
lods
adc
outsb
mov
and
int3
jmp
adc
mov
xchg
xor
push
sbb
lods
push
xor
aas
add
leave
add
xorl
adc
jno
cmpsl
leave
mov
test
push
adc
pop
loop
pusha
sti
ret
xor
mov
xchg
loop
sbb
dec
negb
daa
subb
daa
dec
pop
dec
pop
nop
inc
fs
and
adc
popl
int3
mov
lock
imul
lret
add
push
fsubrs
adc
pusha
jbe
mov
push
rcr
stc
cmpsl
sahf
push
popa
lahf
cmp
les
jbe
add
insl
or
sub
mov
fs
clc
aas
fsubr
stos
push
sub
mov
dec
xchg
arpl
dec
adc
sarl
push
daa
xchg
jbe
mov
and
jmp
bound
mov
cmp
jb
data16
jecxz
scas
sub
mov
in
lahf
mov
mov
aad
jecxz
push
fcoml
pop
lea
cld
mov
js
mov
std
int
inc
jp
cli
fwait
jae
pushf
imul
mov
scas
add
in
mov
xchg
cmp
adc
cwtl
push
and
scas
out
pop
and
cs
and
sub
inc
mov
pushf
mov
aam
push
adc
fwait
sbb
or
into
mov
fisubl
mov
jns
cmc
mov
sbb
pop
jmp
mov
cmp
xchg
or
pop
sahf
test
xor
dec
jne
and
xchg
or
and
les
arpl
fldl
lret
mov
cmp
jl
and
incb
mov
jmp
add
sbb
and
sahf
mov
les
jge
add
add
lcall
xchg
cmpsl
cmp
lcall
cmp
je
sbb
push
adc
inc
call
popa
daa
mov
lea
and
mov
push
pop
repnz
or
adc
mov
sub
ss
clc
push
xchg
repz
inc
aad
loopne
mov
cs
inc
mov
mov
xor
out
in
aam
ret
mov
add
roll
aas
push
jmp
cmp
dec
int
jl
xchg
cmp
hlt
ss
push
fisubrs
cs
js
shrl
arpl
orb
les
dec
pop
pop
jecxz
imul
and
mov
sbb
decl
add
pop
xor
jae
push
add
xor
sub
jbe
lock
mov
lahf
in
pop
fstpl
pop
lret
mov
push
xchg
outsb
clc
inc
arpl
insl
and
push
iret
es
push
cmpsb
lea
xchg
cli
xchg
and
addr16
xchg
sar
mov
icebp
shll
cwtl
icebp
and
ret
cs
xorl
xchg
pop
xor
push
inc
pop
and
add
xchg
xor
xor
mov
jne
and
or
outsb
in
stc
ret
push
jne
push
sarb
daa
adc
adc
lods
sub
and
div
sub
in
add
insb
xlat
in
sbb
ret
pop
pop
faddl
mov
int3
rolb
xor
jp
lahf
mov
shrl
cmp
inc
xchg
xlat
cmp
or
ss
out
movsb
gs
inc
test
dec
jne
and
rcrw
pop
aam
cwtl
xchg
pop
jns
mov
shrl
jecxz
out
decl
test
xchg
sub
jb
mov
repnz
and
sub
insl
sahf
mov
popa
xchg
lret
push
iret
es
mov
mov
jg
sahf
rolb
dec
pop
fdivs
test
fdecstp
xor
fdivrl
mov
int3
fcmove
aas
pop
in
mov
test
stos
dec
dec
dec
push
or
cmp
mov
jo
shlb
hlt
movsb
inc
add
jne
push
testb
pop
pop
and
pop
inc
dec
sub
aad
push
mov
jle
xchg
aas
jl
aad
shll
mov
jle
mov
inc
cmp
aad
mov
repz
lods
sub
pop
ret
call
sbb
dec
and
xlat
sbb
sbb
xchg
ja
imul
mov
push
cwtl
std
add
ds
sarb
sti
rcll
lahf
push
mov
sub
orl
in
sbb
cmpsb
dec
test
sbb
lcall
int
js
push
int3
jo
mov
shll
movsl
inc
cmpb
dec
out
jg
sbb
loop
outsb
mov
sub
int
insl
jnp
or
pop
mov
push
mov
movsb
pop
scas
dec
in
xchg
adcb
movsb
faddl
fcos
lret
popa
lods
pop
pop
jl
and
add
sub
in
movsl
insb
test
xchg
sti
push
dec
xchg
jns
cmp
add
pop
mov
push
ss
xlat
mov
and
ljmp
out
cwtl
into
or
push
sbb
or
push
outsl
enter
lock
jbe
jnp
adc
adc
cmp
sub
addr16
lret
mov
jp
mov
cmp
pop
sub
jns
imul
imul
adc
push
jmp
fwait
push
icebp
les
adc
add
popa
aas
sub
leave
lds
lods
pop
cmp
inc
ja
scas
inc
nop
mov
xchg
jae
mov
xchg
jbe
jbe
popa
pop
sahf
and
into
mov
dec
sbb
bswap
mulb
xchg
imulb
mov
dec
adc
prefetch
rcl
push
xor
inc
bound
sbb
gs
in
adc
or
dec
cld
in
into
dec
or
push
lahf
xor
iret
loopew
mov
push
addl
xor
xchg
inc
sbb
inc
or
clc
jnp
dec
xchg
in
inc
call
xchg
shlb
inc
in
pop
fmuls
in
push
xchg
int3
popa
pusha
push
xchg
mov
sbb
xchg
xchg
xor
mov
loope
outsb
jbe
dec
lods
loope
pushf
arpl
mov
icebp
adc
test
cs
push
sub
es
pop
mov
xor
lods
fcompl
gs
and
outsb
pop
pop
jmp
sub
mov
and
mov
and
fs
sbb
push
cld
pop
xor
iret
movsb
inc
adc
rolb
cld
pop
addl
aam
sbb
jle
test
adc
sub
cmp
outsb
mov
out
xchg
pop
jmp
lods
fs
xchg
stc
xchg
popl
jbe
iret
or
mov
faddp
add
sub
sub
arpl
arpl
sbb
lods
add
les
test
xchg
mov
gs
lcall
hlt
or
push
in
bound
aaa
sub
xchg
repnz
repz
pop
push
sbb
adc
jb
sarb
sbb
push
shlb
in
daa
mov
sbb
cmp
fs
inc
dec
push
jle
pop
fs
xor
ret
insl
or
push
mov
pop
pushf
and
xchg
sub
rclb
sbb
push
push
xlat
fstpt
rclb
mov
and
jne
pop
mov
mov
and
xlat
hlt
stc
fisubs
ret
int
push
xor
push
cmp
imul
or
dec
in
add
push
push
jnp
jl
push
movsb
or
aas
test
mov
cli
cmp
les
push
fidivs
pop
test
adc
mov
nop
cs
lahf
sti
popl
mov
pusha
add
inc
rclb
mov
xchg
and
popa
dec
jg
or
fildll
imul
sub
es
pop
or
lahf
ficoms
and
shlb
cmp
lahf
sbb
dec
ds
pop
sub
sub
arpl
hlt
xor
int3
fucompp
ss
fidivrs
mov
push
call
sub
ja
leave
test
popf
aaa
fldenv
jne
inc
pop
xchg
mov
addr16
mov
pop
inc
cmp
pop
pop
push
sub
jp
test
mov
fwait
inc
cmc
fs
add
and
imul
jmp
sub
dec
mov
mov
mov
outsb
mov
es
push
mov
jae
lcall
cmp
push
in
ds
push
sbb
pop
pop
pop
mov
lahf
js
inc
and
gs
sub
insb
sbb
adc
cmp
jle
add
sub
push
xor
dec
or
mov
adc
mov
dec
dec
inc
out
sub
or
mov
ror
xlat
addr16
imul
aaa
icebp
movsl
pop
pop
cwtl
or
or
push
push
inc
sub
scas
mov
hlt
js
test
cmc
cmp
push
inc
push
sbb
js
or
xor
push
or
das
iret
test
jge
ret
push
dec
fadd
sbbl
jle
popl
pmuludq
or
scas
iret
pusha
in
xor
aam
adc
mov
xchg
pop
fs
out
jg
mulb
mov
pop
scas
ficoml
fldt
push
in
cmp
adc
or
xchg
fidivrl
out
jp
js
addr16
mov
pushf
mov
jbe
sbb
fdivrs
jge
push
inc
das
addb
mov
out
pop
push
adc
pop
shl
xchg
insl
xchg
outsb
jnp
sti
clc
imul
in
cld
pop
pop
stos
ljmp
movsl
das
outsl
push
xchg
or
inc
jne
mov
popf
inc
scas
std
bound
test
clc
mov
jmp
push
xchg
adc
scas
aaa
les
sbbl
in
and
xor
outsl
nop
or
add
shlb
daa
pop
adc
xchg
rorb
iret
inc
and
ret
push
mov
outsl
rcrb
mov
inc
jg
sahf
or
add
mov
mov
xor
sahf
dec
adc
nop
addr16
addr16
addr16
dec
jno
pusha
xor
mov
mov
mov
jp
int3
and
xchg
out
xchg
lods
sahf
orb
rcrl
mov
cmc
inc
addr16
loop
stos
sbb
lret
sbb
mov
adc
sbb
jg
loope
pop
jnp
add
rclb
scas
dec
addr16
inc
add
mov
fs
xor
out
nop
cmc
ds
sarb
sbb
daa
cmpsb
cs
dec
mov
sti
mov
lcall
nop
ror
cli
jg
lahf
in
out
cli
idiv
imul
xor
test
or
testl
dec
adc
test
movsb
sub
repnz
xchg
sub
dec
mov
cmp
aas
mov
cs
cmp
mov
jge
push
ja
repnz
xchg
lods
xchg
jge
mov
out
pop
jmp
in
sbb
scas
ja
add
and
popa
cltd
mov
std
cmp
xor
aas
push
sub
sti
loope
sbb
xor
and
popf
js
repz
imul
in
sahf
aam
int3
mov
das
shrb
xchg
push
jae
and
pop
dec
inc
mov
mov
sub
mov
push
mov
stos
cltd
push
sbb
push
sbb
stos
sbb
inc
test
addb
fwait
leave
mov
iret
idivb
pop
jge
lahf
mov
add
adc
insb
jns
imul
pop
jecxz
jl
push
adc
pop
inc
movsl
shrb
jo
add
fwait
outsb
mov
xor
cli
dec
sub
xchg
inc
js
push
mov
cwtl
fs
and
loopne
sub
movsl
push
sbb
cltd
or
pop
mov
nop
clc
nop
mov
add
mov
pop
je
stos
push
adcl
dec
jb
pop
dec
xchg
insl
xchg
dec
movsb
xchg
subl
je
pop
lds
pop
scas
icebp
push
decb
jle
int
hlt
pop
std
jbe
add
vcvtps2pd
pop
push
sbb
sbb
mov
mov
xchg
clc
fcoml
or
mov
xor
aad
cld
fsts
push
jns
ja
pop
scas
loope
movsl
cmc
out
and
movsb
mov
cltd
mov
pop
mov
push
mov
cmc
xor
call
mov
jg
xor
fidivl
ror
outsl
lret
movsl
das
in
fsubrs
sub
sub
in
sbb
lods
iret
sbb
xor
push
sahf
sub
or
xlat
dec
data16
cmpsb
jae
divl
jae
and
das
iret
and
cmp
dec
pop
addb
mov
ret
das
ret
outsl
push
push
fsubrs
xchg
in
mov
outsb
mov
leave
stc
pushf
mov
enter
sti
sub
fwait
stc
sub
mov
pop
pop
lcall
sbb
clc
int3
xor
sub
in
push
int3
sub
repz
mov
lods
and
fstl
mov
mov
mov
adc
int3
loope
fmull
cld
daa
dec
adc
scas
push
xor
das
adc
jmp
rorb
cld
mov
pop
push
xor
lret
data16
mov
jecxz
dec
cmp
in
fwait
out
mov
push
jmp
ds
jl
and
jo
insb
push
push
xor
stc
lods
mov
xchg
jmp
jmp
aam
lret
fisttps
fistpl
pop
lock
add
in
shll
mov
mov
xchg
sbb
pop
mov
je
cmp
test
aad
pop
sub
test
mov
data16
das
out
jb
rolb
mov
pop
adc
sub
or
leave
pushf
sub
push
mov
cltd
in
fistps
movsl
sbb
dec
dec
or
fwait
loopne
icebp
ret
push
std
and
dec
xor
daa
movsb
dec
jae
shll
outsl
mov
adc
mov
test
movsl
adc
imul
and
shlb
and
inc
ds
mov
lods
hlt
xchg
cmp
jge
aaa
jmp
pop
outsb
cmpb
test
shr
in
in
jge
loopne,pt
xlat
mov
adc
in
or
rolb
out
jo
and
sahf
add
inc
xor
in
sub
es
dec
in
inc
push
pop
ret
lods
xor
lahf
jmp
pop
adc
push
stc
scas
push
jne
pop
sbb
pop
cmp
in
sar
ficoms
cmpl
mov
imul
sub
sub
mov
sub
call
mov
jle
or
inc
jnp
aam
dec
int
and
jne
pop
cmpl
fnstcw
mov
aaa
push
jnp
push
mov
push
jb
push
int
outsb
sbb
xchg
aam
imul
fcmovnu
push
outsb
and
popa
das
das
popa
stos
rcrb
mov
or
aas
adc
in
pusha
push
in
fdivl
xchg
push
mov
cs
pop
fs
sub
dec
aas
inc
push
jno
sub
and
movsl
pop
sub
std
sbb
jecxz
sbb
stos
aad
pop
adc
xor
sbb
repnz
inc
pop
or
jg
pop
cmc
movsl
mov
fwait
ja
xchg
and
shll
or
rcl
cmp
cmp
fisubrs
mov
pop
jae
out
pop
aaa
dec
jge
fwait
js
add
sbb
sub
mov
popf
mov
loop
les
mov
vmread
pusha
fldt
imul
push
rorl
inc
cld
outsb
pushf
jg
push
push
pop
scas
jbe
sarb
push
and
shll
xor
inc
arpl
test
vmread
leave
cld
or
mov
push
mov
adc
call
pushf
mov
xor
sbb
cmp
leave
mov
or
aas
jae
nop
imul
xchg
push
add
aas
sti
jno
and
sbb
mov
dec
mov
cwtl
shl
loope
lcall
ficomps
bound
stos
lods
xor
clc
jl
imul
addb
sbb
ljmp
aas
enter
cmp
or
sbb
lds
cmpsb
lds
cmp
fcomp
cmp
mov
and
icebp
and
mov
mov
cli
xchg
repz
fwait
mov
lret
jmp
pop
inc
out
push
movsb
or
out
loopne
push
rorl
in
cmpsb
pop
xor
adc
mov
repnz
adc
test
psubusb
inc
xchg
adc
xchg
or
cli
ficompl
mov
test
shlb
and
or
repz
dec
add
movl
dec
xchg
pop
icebp
push
clc
mov
fisttpll
mov
inc
mov
push
inc
add
mov
mov
adc
lock
sbb
mov
sub
or
mov
mov
ja
jae
out
push
lods
xor
icebp
pop
xchg
mov
jbe
and
outsb
movsl
arpl
jnp
fistpll
jbe
iret
std
adc
xchg
cmp
xor
push
repnz
iret
daa
push
adc
dec
sub
dec
das
or
int
jno
push
push
sub
lahf
fnsave
xlat
stos
ret
pop
xchg
xchg
lret
out
inc
das
xchg
inc
mov
ret
dec
cli
fcompl
jl
sbb
pop
mov
js
xchg
out
dec
outsb
mov
mov
les
mov
xorb
sub
repz
xor
and
mov
in
jp
dec
fldcw
sub
and
pop
imul
leave
inc
mov
in
mov
inc
cmc
or
popf
push
xchg
pop
jle
xchg
dec
insl
nop
xor
and
daa
push
outsl
jg
jnp
add
pushf
dec
adc
push
mov
mov
ja
sbb
add
add
cltd
pop
mov
mov
mov
imul
out
push
insb
jmp
add
or
adc
inc
and
add
fldt
mov
jecxz
sti
lahf
sbb
outsl
push
sub
into
and
push
rclb
rcr
ja
inc
push
sbb
movsb
mov
adc
push
jge
out
or
andb
adc
xchg
xor
cmc
nop
inc
orb
out
pop
js
jmp
xlat
xchg
arpl
cmp
in
scas
or
lds
sub
add
jg
or
lahf
mov
dec
adc
cmc
inc
mov
into
cmp
cmp
inc
sub
jp
inc
jne
stc
imul
adc
or
inc
roll
loope
cmpsb
cli
loop
out
jbe
dec
xor
add
pop
jnp
xchg
and
xor
mov
mov
aad
cmp
sahf
pop
movsb
fwait
jmp
push
dec
pushf
push
repz
jle
fst
pusha
xchg
sbb
outsl
sub
jns
mov
mov
mov
ror
je
push
lock
stos
sub
dec
pop
nop
pop
movlps
lret
pop
cmp
or
mov
pop
addr16
or
in
mov
jb
jp
adc
loopne
add
negl
jmp
add
mov
inc
les
std
lahf
or
inc
mov
dec
lss
add
pop
xchg
scas
jg
in
pop
mov
or
push
negl
adc
pushf
inc
xchg
testb
and
mov
cmpsl
fldt
movsb
rorl
out
mov
add
mov
out
jbe
mov
aam
imul
push
into
pop
add
sub
xchg
mov
shll
jmp
in
push
jbe
push
mov
sbb
mov
mov
loopne
les
test
divb
mov
add
pop
ljmp
pop
inc
sub
xor
pop
cmp
cltd
mov
xchg
and
popa
test
int3
pop
mov
jg
lods
jo
mov
or
fstpt
mov
int
adc
mov
inc
mov
repnz
push
push
push
aas
jae
leave
test
dec
insb
mov
int3
fnstsw
stos
lds
icebp
adc
xchg
sbb
fisubl
movb
insb
dec
cmp
jg
lods
sbb
scas
sti
or
inc
int3
xor
jae
pop
rcr
imul
hlt
mov
pop
jge
jecxz
clc
pop
scas
stos
add
mov
pop
adc
push
jae
dec
loop
sub
sbb
filds
leave
sbb
mov
addb
xchg
call
cltd
inc
adc
ja
xor
into
cmpsl
faddl
fsubrl
sbb
push
lret
pop
loope
jmp
incb
xchg
inc
cmp
lods
push
mov
or
lahf
dec
into
jns
pop
aad
insb
sbb
jnp
testl
mov
pop
leave
lock
or
add
push
clc
push
mov
mov
adc
mov
jecxz
cwtl
xchg
fs
stos
test
cmp
movsl
movsl
add
mov
adc
arpl
mov
pop
loop
add
add
je
add
imul
jecxz
xchg
mov
add
test
dec
lret
imul
mov
jnp
std
ret
out
pop
xchg
mov
out
mov
pop
jns
adc
pop
arpl
inc
dec
mov
pop
test
or
enter
out
sub
dec
mov
xor
popa
xchg
cmpsb
lcall
out
in
fistpl
nop
mov
and
pushl
sti
movsb
adc
sub
fwait
test
cmp
push
jno
or
jno
xchg
inc
cmpsl
xchg
and
lock
xchg
jne
jle
push
jmp
inc
xchg
ja
mov
adc
mulb
cs
daa
or
inc
add
fldt
leave
sti
or
lds
add
cmp
or
ss
lcall
mov
mov
xchg
sarb
cmp
push
xchg
add
ss
mov
jecxz
call
xchg
jae
cmpsl
sbb
movsb
pop
xchg
dec
mov
cmpsb
pop
jb
in
into
cmp
jmp
out
test
pop
push
clc
xchg
ficompl
icebp
fcmovbe
ret
stos
fdivs
dec
mov
dec
cmpsl
mov
push
mov
insb
xor
shll
fs
jecxz
dec
nop
adc
iret
dec
test
je
jns
movsb
cltd
xor
jmp
pop
dec
popa
scas
push
inc
out
lock
adc
cwtl
lretw
cwtl
mov
cmp
div
push
sub
stos
ror
negl
and
mov
movsb
into
jecxz
popl
rorb
mov
arpl
int3
jp
dec
ds
xchg
out
or
icebp
dec
mov
sbb
mov
in
push
inc
daa
xchg
pop
imul
lret
and
negb
movsb
xor
push
leave
test
pop
pop
adcb
pop
in
imul
dec
icebp
rcll
rcll
dec
push
repz
push
test
xor
enter
rcl
mov
xchg
mov
xor
data16
idivb
shll
ucomiss
add
shlb
testb
mov
pop
inc
out
das
mov
out
mov
and
leave
xchg
andb
sbb
mov
add
jg
int
stos
mov
xchg
popa
imul
jns
xor
scas
push
rcr
pop
mov
movsl
test
test
scas
rcl
aas
inc
mov
and
xchg
xor
mov
enter
push
sbb
icebp
adc
sbb
data16
lret
orl
in
xor
mov
idivb
xchg
out
push
mov
gs
or
stos
xchg
mov
inc
out
mov
lahf
gs
rclb
int
dec
movsl
lods
sbb
inc
fnstcw
lods
mov
fs
sti
jle,pt
lods
in
pop
xor
sbb
hlt
xlat
sti
sbb
or
jg
mov
stos
mov
mov
sub
inc
inc
adc
lcall
mov
or
mov
aam
push
out
daa
stc
cli
mov
out
scas
fldt
sbb
xchg
call
int
push
and
mov
cmp
ret
jbe
add
push
pop
mov
cmp
popf
sbb
dec
sub
jne
jg
shl
sub
movsb
ljmp
test
add
movsl
dec
pushf
cmp
aas
in
push
loopne
push
lods
mov
out
pop
jns
sar
jb
pop
rcll
movsb
adc
pop
pop
imul
jp,pn
and
inc
sbb
xor
xor
adc
out
test
mov
jmp
lds
sbb
outsl
push
rcr
jecxz
or
mov
shll
adc
out
or
lock
popa
fldcw
or
js
test
ret
adc
fadds
incl
add
push
shr
adc
sub
add
jns
call
pop
int
mov
mov
imul
mov
mov
rolb
lret
loope
std
lods
xor
les
jl
push
aad
xchg
test
dec
mov
push
mov
lods
push
push
mov
dec
sbb
xchg
inc
jecxz
push
aam
sahf
inc
leave
xchg
pop
sbb
icebp
ja
loopne
flds
mov
popa
push
xchg
jb
int3
lock
aaa
mov
inc
sub
fsubl
scas
ret
mov
lahf
clc
dec
test
sub
out
push
push
call
add
pop
cmp
aaa
jns
gs
jecxz
push
out
pop
ss
ljmp
dec
pop
xor
dec
push
mov
mov
lods
movsl
pop
loop
js
push
sbbb
adc
in
or
mov
jp
sbb
outsl
int3
push
xchg
mov
lcall
movsl
vphadddq
sub
pop
data16
xchg
add
dec
arpl
cmpl
ss
fcoms
and
popf
dec
aam
mov
mov
push
pop
adc
push
je
and
movsl
mov
jb
movb
rcll
dec
jle
decb
sbb
int3
sbb
pop
cwtl
loopne
or
fxch
addr16
dec
dec
push
sbb
roll
mov
iret
pop
sbb
dec
dec
fdivrl
and
test
or
mov
lock
pop
pop
push
sub
push
or
mov
mov
mov
dec
pop
into
idiv
rcll
push
or
cwtl
jno,pn
test
mov
xchg
cmp
lock
push
xor
mov
adc
add
fsubrs
in
scas
jno
sub
lods
pop
jl
push
mov
mov
xchg
iret
adc
je
add
mov
cmp
cmp
imul
imul
xor
cmp
fsubrp
mov
xchg
dec
outsb
movsl
xchg
popa
xchg
jmp
addl
leave
add
mov
cld
or
pop
mov
mov
addl
inc
nop
mov
movsb
dec
xor
push
jbe
mov
cmpsl
sbb
fmul
inc
push
cmpsb
pop
sarb
stc
inc
cmpl
lahf
iret
xchg
xor
ljmp
mov
int3
and
ror
push
stos
cmpps
popf
jmp
subb
push
gs
xorb
dec
sahf
mov
dec
std
adc
movsb
sahf
in
xchg
xchg
iret
pop
or
dec
stc
stos
sub
jl
xchg
call
push
mov
lea
shrb
pop
cmpsl
jmp
insb
leave
test
and
arpl
int3
jbe
xchg
shrb
inc
or
clc
cmp
jg
mov
sbbb
jae
adc
push
and
pusha
pop
xor
std
push
shrl
jge
push
jecxz
scas
mov
pop
add
jns
cmp
pop
mov
arpl
jae
mov
test
rorb
iret
adc
and
std
roll
push
movsb
or
lret
loope
pop
push
pushf
push
inc
lea
mov
fisubs
dec
and
movsl
push
lods
jnp
adc
and
out
xchg
andb
pop
pop
cmp
sub
lcall
sahf
adc
mov
and
outsb
jo
xor
sar
pop
mov
mov
vfmsub231pd
jmp
ret
adc
sub
mov
hlt
jmp
fwait
jle
cmp
xchg
adc
add
or
icebp
jae
out
popa
inc
sbb
sub
inc
or
iret
mov
in
push
and
add
pushf
cmp
dec
pop
cmp
push
clc
adc
and
pushf
in
cmp
cmc
aaa
fcos
lret
xchg
popw
pop
pop
push
daa
and
mov
ds
or
test
int
int
fcoms
cwtl
shlb
jne
sbb
mov
add
call
dec
inc
push
xor
aam
sub
out
and
mov
pop
sub
jmp
jns
dec
icebp
aas
imul
inc
adc
mov
sti
js
cwtl
loopne
ljmp
mov
inc
jnp
adcl
cmpsl
ret
enter
nop
inc
leave
movsb
ror
jbe
xchg
rol
pop
pop
rcrl
pop
sub
inc
push
sbb
and
sub
jnp
cmp
mov
mov
popf
dec
das
mov
fs
mov
sub
mov
dec
dec
shlb
cli
popl
mov
imul
push
push
fidivs
dec
jne
lods
add
loop
adc
das
mov
push
pop
sub
xor
sub
push
shll
lods
mov
dec
cmpsl
fwait
popa
sar
pop
sbb
jae
out
mov
add
xchg
pop
sub
lret
sub
xor
cltd
lock
je
mov
dec
fldcw
cmpsl
mul
cmp
jnp
adc
rclb
add
cmpsb
xor
jmp
jecxz
popf
sbb
dec
ret
and
xchg
jle
lods
mov
jbe
xlat
xchg
adc
lock
imul
xchg
fsubl
or
movsl
fisttpl
icebp
ds
inc
es
cmc
popf
shl
adc
cmp
scas
add
pusha
sbb
cmp
sub
mov
pop
dec
imul
xor
jno
push
push
cld
or
iretw
push
test
sbb
fucomp
std
push
aaa
add
cli
ljmp
xchg
jae
jg
ds
jnp
cmc
lds
mov
xor
jp
inc
clc
jl
or
xchg
sbb
in
add
insl
pop
and
cld
dec
push
ret
daa
sub
dec
jns
aaa
pop
mov
ds
push
data16
or
shlb
into
inc
addr16
xlat
bound
and
and
xchg
mov
xor
mov
dec
iret
push
inc
mov
and
daa
add
out
push
test
repz
add
mov
movsl
data16
pushf
or
ficompl
pop
push
in
fs
xchg
or
das
sti
shll
push
fadd
jmp
pop
dec
ljmp
sti
sub
mov
lods
imul
daa
mov
stos
test
clc
sub
test
mov
or
push
pop
lcall
outsl
jg
test
mov
adc
jmp
repnz
sub
or
out
test
mov
cmpsb
add
pop
mov
stos
mov
adc
push
or
test
js
xchg
dec
and
cmp
scas
mov
std
and
cwtl
push
jl
and
arpl
push
push
add
jae
inc
andb
fwait
xchg
ljmp
dec
push
leave
cmpsl
sub
xchg
pop
add
jecxz
je
xchg
in
xchg
add
push
cwtl
and
sahf
ud1
adc
xor
stos
dec
test
rcr
out
mov
jp
mov
mov
and
adc
jns
mov
jge
and
jnp
dec
lock
dec
mov
pop
and
adc
out
sbb
in
in
or
mov
pusha
out
clc
dec
lods
pop
movsl
cs
jge
gs
fistpll
rorl
push
and
push
inc
cmp
addr16
popf
adc
mov
cli
aas
mov
divl
and
out
lret
dec
dec
fstpl
aam
gs
pop
xchg
loop
nop
mull
push
jmp
sub
cmpsl
mov
add
mov
jp
enter
dec
jg
cmc
mov
icebp
and
dec
in
sub
adc
lock
pop
fistps
aad
and
xchg
inc
pop
sbb
dec
movntps
test
jmp
fnsave
push
sub
xchg
jne
jmp
sub
cmpsb
pop
sub
mov
or
sub
or
mov
mov
mov
movsb
and
std
sti
aaa
aaa
fwait
jge
pop
fdivrl
lret
and
and
or
mov
xorl
mov
or
stos
mov
mov
fsub
or
fs
xchg
loop
movsl
mov
cmp
int3
sbb
fildl
xor
push
inc
sbb
mov
cmp
xor
push
inc
imul
inc
adc
jb
imul
add
mov
int3
out
loopne
lret
aas
jmp
jp
cmp
mov
shlb
loopne
aaa
pop
jne
loop
xchg
cmp
cwtl
insl
aas
or
push
push
dec
jmp
std
je
nop
lods
mov
or
add
add
inc
sbb
mov
loopne
ljmp
aas
lods
sub
jmp
xchg
test
push
loop
xlat
aas
ljmp
sbb
push
xchg
mov
and
shr
mov
push
jecxz
cmp
sub
mov
push
out
mov
arpl
xor
mov
bound
dec
xor
gs
les
imull
lcall
cmp
insl
mov
push
adc
cltd
jge
pop
add
mov
or
call
nop
addr16
inc
mov
mov
add
in
push
mov
lea
movsb
aam
enter
ficomps
jge
ret
cmpsl
push
pop
ret
jno
inc
sbb
cli
lcall
cmp
in
lds
rcrl
iret
mov
add
mov
inc
inc
clc
add
rol
dec
adc
jg
pop
jo
cmp
in
mov
icebp
aad
adc
bound
ret
mov
sub
push
inc
lcall
sbb
xchg
cmp
pop
fisubl
sub
addr16
fs
mov
cmp
inc
jns
pop
int
jp,pt
and
dec
cld
andl
lea
fdivrp
out
fidivrs
sahf
inc
es
insb
xchg
and
or
dec
or
lcall
push
pop
lcall
fxch
and
lds
negl
adc
jae
push
mov
jp
cmp
out
jnp
dec
insl
push
mov
sub
push
dec
pop
pop
int
imul
adc
sub
mov
dec
ljmp
sub
sbb
cltd
stos
mov
outsb
mov
test
dec
aas
jno
scas
leave
cwtl
mov
or
pop
loope
mov
xchg
lods
push
adc
jecxz
hlt
int
pop
stos
or
movsl
loopne
push
stos
gs
outsl
push
mov
imul
mov
cmp
cltd
push
add
insb
int3
arpl
lcall
pop
insb
sti
fucom
xor
fisubs
ja
rcrb
jp
xlat
imull
mov
sahf
scas
mov
scas
cmp
popf
xor
adc
int
xchg
mov
mov
sub
inc
out
jo
pop
jg
inc
jns
popf
out
add
xchg
stc
push
inc
cs
adcl
xchg
ret
dec
dec
xor
jle
idivb
push
lock
xlat
adc
jecxz
dec
stos
fimuls
cwtl
inc
fists
jle
ds
popf
outsb
xor
jo
inc
jno
mov
enter
out
sub
test
push
cmp
inc
js
out
mov
test
xor
jg
adc
into
fcoml
movsb
mov
or
push
int3
adc
andl
mov
sbb
cmp
icebp
mov
decb
out
sar
aad
cmp
cmp
mov
jmp
dec
imul
pusha
test
leave
nop
mov
xchg
cwtl
adc
fnstcw
mov
inc
lcall
arpl
faddp
leave
dec
sahf
aas
lods
lods
loope
or
scas
push
mov
aas
ret
fwait
jmp
jl
mov
mov
xor
sbb
and
mov
adc
jmp
loop
mov
insl
sub
loope
inc
or
lret
insb
lods
inc
int3
cli
ret
mov
sub
pop
push
lcall
push
test
cmp
jae
cmp
inc
aas
jno
in
ror
mov
inc
imul
aad
mov
nop
push
mov
inc
repnz
cmp
mov
loop
lds
dec
fmulp
inc
dec
hlt
adc
push
add
je
or
or
pop
repz
xchg
xor
xlat
xlat
push
and
leave
mov
or
pop
push
sbb
adc
pop
faddl
pop
cmp
dec
scas
jae
mov
add
test
and
pushw
jo
xchg
sbb
mov
cmc
inc
clc
push
fstpt
fidivrs
rcr
xchg
js
insb
je
mov
mov
in
shrl
or
jns
pushf
inc
push
outsb
sbb
xor
out
ret
cmp
out
je
xorl
jb
mov
fcom
mov
mov
aam
fs
or
and
xchg
jb
mov
ret
push
rorb
add
scas
xor
dec
cmpsb
ja
pusha
cltd
push
ljmp
negl
lret
scas
stos
pop
mov
ja
aad
xor
pop
daa
sub
cmpsl
add
xchg
dec
mov
test
rol
adc
xchg
or
jmp
out
shrl
insl
add
outsb
jecxz
mov
mov
or
mov
cmp
inc
push
mov
add
mov
jmp
in
arpl
mov
dec
mov
xchg
mov
xchg
nop
or
adc
cmp
dec
enter
mov
hlt
jl
pop
push
jmp
sub
movb
dec
stos
adc
pop
mov
clc
xlat
sbb
and
mov
lea
jno
add
clc
out
push
enter
push
gs
lods
movsl
pop
pop
call
insl
pop
pop
lret
add
fdivp
pop
cmpsl
mov
pop
add
xor
sub
xchg
push
push
jnp
jg
int3
inc
out
sti
sti
ret
ss
mov
inc
pop
jg
icebp
xchg
arpl
dec
or
push
es
cmpsl
sarb
cwtl
add
mov
fisttpll
sti
or
fisttps
mov
aas
fwait
mov
fiaddl
dec
xchg
daa
mov
jnp
mov
xchg
mov
and
call
push
jno
jge
cmc
mov
and
adc
mov
clc
xchg
out
repz
gs
add
aad
repnz
xchg
jo
pop
inc
mov
repnz
push
fistps
cld
es
push
out
sbbb
shlb
mov
popa
fcomps
ds
pop
and
lcall
fisttpl
inc
clc
dec
cmp
xor
dec
or
mov
jns
lods
jno
fisubrl
sbb
lds
cltd
mov
pop
adc
and
xchg
mov
lcall
sub
ja
cmpsl
notb
push
sbb
sub
xor
dec
pop
fisttpll
outsl
movsb
cs
push
cmpsl
movsl
cmpl
sub
pop
sub
push
mov
sbb
cli
imul
mov
jge
xchg
pop
xor
test
out
fmuls
inc
mov
push
out
stc
aaa
cmpb
into
arpl
and
mov
push
mov
cld
mov
jbe
sbb
mov
inc
cmpsb
inc
jmp
repnz
ror
arpl
mov
push
or
lods
test
dec
loop
out
ret
or
sbb
mov
ja
rcl
xchg
fimull
mov
push
inc
push
jg
sbb
jbe
jb
lahf
iret
sub
dec
aam
mov
or
xor
stos
nopl
dec
xor
fisubrs
inc
fwait
popa
loop
movsb
jae
cs
bound
adc
cmpsb
adc
out
mov
ret
adc
mov
pop
icebp
xchg
dec
add
cmp
dec
into
fdivrs
ja
pop
xchg
mov
sbb
mov
js
and
push
stc
pop
adc
ret
add
and
insl
or
cwtl
jecxz
nop
fwait
int3
and
mov
pop
cmp
mov
aaa
push
or
jb
pop
outsl
cmp
les
das
or
out
pusha
adc
shll
xchg
push
mov
insl
sub
fldt
sbb
pop
fimull
mov
out
mov
push
xchg
push
loope
xor
loop
sbb
cs
jle
pop
mov
pop
and
callw
insl
in
lods
dec
fnstsw
stc
push
dec
leave
mov
or
scas
out
mov
sub
jmp
out
aad
icebp
sub
fdivrl
jecxz
mov
add
pop
xchg
shrl
adc
dec
ret
push
jecxz
sub
inc
add
je
test
lcall
fs
xor
sub
sbb
inc
out
mov
adc
cmp
test
leave
loopne
hlt
push
rorb
outsb
adc
inc
jle
cs
xlat
jecxz
xor
dec
mov
cmp
cmp
das
std
das
outsl
xor
loope
in
scas
sbb
lods
xchg
mov
stc
test
test
js
outsl
data16
mov
lods
mov
push
lds
shl
cmp
push
sub
dec
cmp
addr16
push
jbe
push
add
add
stos
imul
xor
push
stos
mov
jg
xchg
loope
iret
cmc
cwtl
add
inc
push
xchg
pop
in
mov
mov
xchg
dec
mov
add
jmp
mov
loop
mov
lahf
xchg
ds
sbb
fnstenv
adc
lods
sahf
sub
adc
cli
sarb
scas
cltd
enter
xor
dec
pushl
xchg
mov
xor
inc
inc
cwtl
roll
mov
inc
pop
subb
mov
jne
adc
sbb
loopne
ja
mov
nop
jp
int3
rorb
ljmp
insl
es
sbb
xchg
sub
sbb
sbb
clc
jno
int3
gs
idivl
mov
and
aam
enter
add
cwtl
cmpsl
pop
or
dec
sub
mov
dec
fldln2
lahf
lret
lret
add
dec
inc
xor
cmp
pushf
dec
das
iret
inc
xor
xorb
ret
jnp
or
jo
cmp
sti
mov
mov
out
sbb
pop
mov
mov
or
dec
dec
jb
cmp
pusha
mov
fstps
fildl
arpl
dec
inc
jl
and
icebp
cmp
mov
jns
out
inc
out
clc
andb
push
jns
inc
adc
cmpb
mov
jp
push
add
cmpsl
mov
cmpsl
aaa
faddl
push
daa
out
sbb
les
cmp
xchg
mov
or
rolb
and
xchg
cld
inc
icebp
xchg
dec
out
arpl
je
or
pop
push
nop
cmc
and
scas
push
out
pop
mov
inc
sub
lcall
dec
sar
arpl
or
inc
jnp
mov
cmp
xor
cmpl
mov
daa
cmp
jle
arpl
ja
jmp
cltd
and
cli
dec
dec
add
mov
shlb
jns
pop
and
or
push
sub
push
lahf
es
in
and
iret
add
aad
bound
ret
jae
cmp
aad
push
mov
cwtl
frstor
sub
add
pop
ja
inc
push
mov
pop
out
jno
test
adc
imul
adc
lahf
and
loopne
sub
lret
mov
icebp
roll
xor
inc
dec
or
lret
cmp
and
lahf
push
mov
adcl
xchg
mov
repz
xor
jns
out
dec
add
jge
test
sub
mov
pop
add
cli
jge
xor
ja
ja
sbb
adc
mov
or
popa
and
push
xchg
sub
xor
cld
enter
ss
fistl
xor
xchg
dec
scas
and
ret
dec
fwait
scas
push
dec
jl
and
cmp
mov
call
stos
cltd
mov
xor
hlt
or
stc
js
cmp
testb
test
rcll
adc
popa
lds
pop
fwait
or
mov
push
rorb
cmpsb
lods
in
ja
mov
and
mov
es
popf
lret
ds
fstpl
dec
push
lods
inc
gs
std
stc
aaa
mov
xor
nop
jl
scas
sbb
jl
scas
add
nop
lods
cmp
and
inc
out
lcall
sub
dec
ret
xchg
clc
inc
ljmp
fistpll
shll
and
mov
popa
cmp
mov
xor
mov
testb
xor
gs
mov
or
roll
cwtl
fwait
adc
popa
ja
mov
push
jno
push
pop
das
in
std
rclb
mov
sbb
lods
pop
jp
mov
orb
push
out
jo
rorl
xchg
inc
push
xchg
fwait
into
add
sub
dec
adc
outsl
dec
xor
xor
cmpl
rorb
testb
cmc
mov
or
lcall
mov
push
sbb
decb
cmp
mov
int3
fstps
fstps
mov
mov
jae
mov
ret
sbb
cmp
xor
ret
inc
xchg
inc
fcmovbe
cmp
insl
adcl
xchg
cmc
pushf
pop
rcll
mov
dec
and
nopl
mov
std
cmc
inc
mov
aas
test
dec
pop
push
add
ret
or
lcall
xor
outsb
pop
fstps
int3
loopne
mov
mov
nop
js
adc
push
cmp
mov
xchg
sbb
xorb
cmpsl
aam
jns
or
lods
xlat
mov
negl
ret
daa
mov
push
das
cltd
ret
mov
adc
jp
push
rcrb
or
sbb
or
jne
pop
lcall
movsl
push
iret
les
cmpsb
pop
cmp
mov
popa
or
inc
das
ret
mov
push
loope
movsb
cwtl
out
in
inc
mov
orb
mov
pop
mov
mov
ret
cwtl
and
push
lret
aad
cwtl
pop
jmp
icebp
mov
popa
imul
inc
clc
or
adc
adc
movsl
jge
xor
push
jge
dec
xchg
push
mov
and
gs
rorl
movb
pushf
repnz
movsl
sbb
rcrl
xor
inc
mov
icebp
sub
loopne
lret
push
pusha
fsubs
bound
mov
out
dec
inc
push
cmp
fdivrp
lcall
jno
push
mov
dec
inc
xor
mov
xchg
cmp
mov
shrb
xor
and
push
adc
ljmp
mov
loope
adc
xchg
add
or
fstpt
sbb
outsl
mov
stos
cltd
push
add
jle
int3
or
ja
xchg
inc
mov
ret
jb
shrb
pushf
ss
lcall
xor
stos
push
lds
mov
mov
dec
mov
mov
and
iret
inc
inc
pop
pop
arpl
cmpsb
push
dec
or
mov
std
pop
std
scas
cmp
in
aad
daa
cwtl
insl
mov
mov
mov
daa
or
jne
imul
and
or
out
jno
rolb
and
mov
xor
rcrl
mov
in
push
hlt
inc
inc
std
cmp
in
xlat
or
pop
and
mov
jg
xor
jno
xorl
and
shrl
es
repz
ficompl
or
adc
add
cmc
xchg
push
pop
icebp
add
mov
movsl
and
cmp
push
adc
rcll
sub
mov
mov
imul
les
jns
pop
jae
clc
imul
movsb
gs
sub
lds
es
sahf
push
mov
inc
in
cmpsl
pop
aad
xchg
loope
or
jb
outsb
xor
cltd
test
adc
jmp
add
mov
xorps
addr16
cli
mov
inc
roll
inc
gs
or
push
dec
andb
orb
xchg
cld
addr16
aam
cmpsl
popa
jge
aad
sbbb
ds
pop
fs
jnp
cmp
jnp
jecxz
push
shr
cltd
mov
mov
cmp
pop
adc
pop
xchg
adc
xlat
out
inc
scas
dec
push
mov
cmp
sti
jns
sbb
test
jns
add
cld
cmp
ficoms
or
push
adc
aad
xor
lods
push
repz
lods
mov
pop
stos
sti
and
jne
loopne
push
ror
icebp
dec
mov
int3
adc
jecxz
pop
outsb
and
push
lock
adcb
rclb
xchg
cli
mov
subb
mov
push
js
mov
out
dec
insl
iret
and
repz
mov
punpckhdq
dec
std
ret
or
add
jno
and
xor
and
in
jbe
mov
cmp
dec
out
iret
push
outsl
jmp
insb
sbb
loop
mov
mov
add
pop
js
lret
mov
in
cmpsb
cmc
test
aas
mov
xor
pop
xchg
scas
cmc
dec
popa
inc
js
setle
jp
mov
fildl
mov
jne
fst
jge
lret
cltd
sub
cmp
ret
push
dec
jae
mov
es
fwait
ret
cmc
push
out
push
outsl
sub
fisubrs
xor
movsl
ss
adc
mov
rcrb
dec
test
xor
movsbl
dec
mov
jecxz
add
ret
push
imul
push
adc
aas
mov
mov
adc
jnp
xor
sbb
ja
mov
push
push
sub
lock
pop
mov
stc
cmpsl
add
popa
jmp
test
or
scas
cmp
js
add
outsb
in
mov
dec
decb
xchg
popf
jo
pop
xor
sbb
je
sbbl
and
jp
pop
lret
cmp
pop
sbb
rclb
ficoms
sbb
cld
xchg
jmp
mov
inc
push
adc
mov
cmp
add
jno
pop
or
fists
jg
mov
cmp
sub
sbb
push
mov
repz
lods
mov
sub
pushf
insl
jp
mov
sbb
jg,pt
into
rclb
jle
lds
dec
int3
mov
jb
add
or
fwait
ljmp
pop
sub
repz
push
inc
xchg
sbb
ret
pop
and
push
inc
jmp
push
test
xchg
mov
lret
jae
or
movb
addr16
shlb
mov
dec
out
loopne
xor
mov
gs
ds
push
rcl
push
mov
sub
pushl
mov
stc
adc
jge
or
mov
inc
stc
dec
xor
iret
adc
jno
adc
xchg
add
dec
pop
aam
outsb
push
lcall
lock
xor
pop
xchg
push
movsl
fmull
dec
in
mov
arpl
push
pop
inc
stc
sub
adc
inc
repz
lds
std
sub
into
jge
or
push
xchg
cmp
jb
lret
aam
sbb
cltd
adc
or
loopne
outsb
dec
and
adc
mov
mov
xchg
out
stos
jno
dec
cli
fstpt
les
push
xchg
inc
pop
in
cs
jbe
fnstsw
mov
insl
int
jle
inc
add
fsts
xor
xchg
and
inc
icebp
lret
ja
scas
mov
dec
adc
test
scas
and
in
push
ss
repz
xchg
aam
mov
sbb
adc
lret
sar
cmp
arpl
ss
or
sub
lds
xchg
pop
stos
outsb
movsl
pop
sub
xchg
repnz
mov
fucomi
sbb
test
mov
or
imul
add
imul
push
aas
push
xchg
jne
push
shrd
cli
or
scas
dec
dec
sbb
jnp
or
into
adc
cwtl
push
dec
mov
push
notl
push
hlt
cmp
mov
xlat
push
inc
xchg
jne
jne
xor
dec
addr16
jns
popf
test
sbb
enter
adc
add
out
jbe
push
js
int
clc
jg
and
mov
push
in
push
paddb
adc
adc
ret
inc
pop
call
jnp
ss
or
into
jmp
outsb
ret
mov
fs
pop
mov
xchg
inc
loop
xchg
clc
iret
imul
xor
iret
or
test
mov
cmp
popf
mov
nop
xor
outsl
aaa
icebp
rcrl
movb
mov
outsl
ds
movsl
jl
insl
loop
mov
add
les
inc
or
adc
jmp
arpl
outsl
lcall
or
ja
pop
in
pop
dec
loop
push
inc
mov
bswap
mov
mov
cmp
fildll
cmc
pop
and
movb
repnz
mov
gs
sbb
ds
inc
mov
xor
sub
adc
mov
add
pop
add
enter
mov
cmp
xor
pop
add
outsl
out
inc
jb
iret
loopne
adc
clc
mov
js
cmp
xor
sub
inc
frstor
sbb
mov
movsb
pop
cmc
inc
mov
sbbb
and
dec
das
nop
cmc
in
sbb
icebp
and
daa
sahf
popf
out
sub
sub
cmp
mov
repnz
pop
popf
add
xchg
pop
or
cmpsl
rclb
adc
lahf
xchg
mov
mov
std
inc
mov
mov
push
repnz
scas
fsubs
int3
mov
adc
mov
les
pop
or
enter
add
xchg
jg
push
sub
rcrl
data16
lds
push
xchg
xchg
in
sub
scas
dec
xor
nop
mov
fcoms
rol
mov
inc
mov
cmpsl
add
roll
xor
fidivrs
xchg
bound
cmpb
inc
mov
shrl
pusha
jge
loopne
sahf
pop
dec
pop
fcoms
mov
out
lea
pop
sahf
shl
ret
mov
mov
or
outsl
push
sub
sbb
pop
xchg
mov
movsb
jo
and
jnp
sti
clc
out
ljmp
pop
jo
xor
hlt
push
int3
lahf
daa
adc
shr
push
push
mov
mov
aaa
dec
sarl
pop
jg
stc
ss
stos
cmpsl
rolb
ljmp
lret
jecxz
jecxz
insl
imul
pop
sahf
xchg
in
out
stc
lea
xchg
lock
xchg
push
xchg
sbb
lret
mov
aaa
fs
ss
pop
jae
mov
jae
fs
in
data16
addr16
mov
mov
cmp
mov
loop
in
xor
pushl
push
popf
xchg
push
mov
sahf
in
je
adc
push
mov
ffree
testb
pop
aaa
aas
lret
mov
pop
cmp
in
stos
xchg
ja
icebp
mov
xchg
sahf
movsb
and
xorb
mov
inc
iret
or
std
outsl
leave
and
inc
add
les
pop
and
ret
ret
dec
push
loope
bound
flds
adc
test
xor
dec
in
sbb
mov
mov
sub
pop
and
cmp
jo
jp
andl
mov
fdivr
fdivs
lock
lret
inc
orb
cmpsb
sbb
and
dec
jnp
lock
sarl
outsl
lods
jge
add
push
cmp
lds
popa
dec
mov
sarb
sahf
jno
jmp
je
pop
cmp
inc
mov
jo
or
jne
addr16
test
in
mov
test
sarb
mov
stc
dec
adc
inc
pop
mov
dec
sbb
mov
jo
pusha
jle
adc
lcall
xchg
and
push
mov
rolb
jle
mov
or
dec
xchg
push
xor
mov
daa
dec
sbb
rorl
mov
dec
jo
jle
inc
mov
and
xchg
scas
stc
and
mov
push
mov
and
or
and
push
adc
lods
in
mov
je
mov
jp
enter
xor
repnz
mov
aad
and
imul
pushf
sbb
ret
cltd
inc
add
inc
mov
inc
sbb
lcall
sub
leave
int
push
pushf
jmp
or
or
mov
mov
xchg
jo
adc
lea
jecxz
sub
nop
scas
fisubrl
popf
aad
cmp
fsts
xchg
movb
dec
jns
cltd
insb
jmp
add
adc
in
sbb
jae
leave
int3
jnp
scas
repnz
in
and
int
xor
shll
fwait
push
push
push
lahf
cld
jne
pop
test
in
mov
and
cs
sbb
mov
gs
pop
std
lcall
imul
clc
mov
cmp
arpl
jmp
jb
sbb
xchg
inc
ret
popf
mov
int
jae
dec
jle
fldcw
push
lds
cmp
jns
in
les
mov
leave
movsl
jb
and
dec
mov
clc
fildl
mov
inc
dec
mov
and
and
testb
push
mov
shl
jg
dec
cli
sub
sub
and
lcall
jno
dec
or
fs
sub
loop
pop
adc
lock
dec
sbb
jmp
mov
xchg
popa
xchg
fstpl
xor
loope
adc
int
pushf
mov
aas
mov
jle
adc
int
xor
or
jl
rorl
cmp
dec
mov
inc
inc
lods
jo
in
adc
fwait
addr16
fidivs
in
ret
sbb
inc
xchg
mov
sub
adc
jns
int3
out
ljmp
sub
jnp
inc
inc
push
daa
adc
in
aas
lret
sbb
mov
mov
aaa
fnstenv
pop
ret
adcl
out
insl
sarb
arpl
insl
push
xchg
repnz
cmp
mov
lea
out
int
xchg
xchg
popa
inc
push
lods
mov
or
es
out
imul
scas
jle
bound
imul
sahf
sbb
mov
ja
push
dec
mov
std
mov
or
jnp
push
into
mov
inc
xor
stc
and
pushf
repnz
mov
loopne
inc
xchg
or
xor
stc
sub
dec
pop
ljmp
dec
sbb
cmp
xchg
dec
cmc
mov
shll
jns
fs
icebp
or
cmp
je
adc
and
pop
jnp
enter
insb
cld
push
out
leave
mov
in
in
neg
jb
pop
xchg
stos
lods
pop
sub
mov
call
or
cli
loop
pop
mov
fidivs
xchg
cmp
pushf
xor
add
call
mov
mov
fsts
or
mov
enter
mov
call
arpl
pop
bound
cmp
adc
adc
sub
pop
in
insb
pushf
and
hlt
sub
and
aas
aas
xchg
add
lret
mov
sub
sub
cmp
popa
cmp
mov
es
mov
sub
mov
or
movsl
pop
imul
dec
jmp
pusha
ja
and
jne
push
cmp
cmp
jle
addr16
stc
lahf
out
movsl
insl
imul
xchg
push
add
add
dec
inc
movsl
or
iret
push
out
lahf
bndldx
adc
out
icebp
xor
sbb
xor
arpl
movsl
jae
out
mov
test
mov
pop
add
or
mov
ss
test
aaa
pop
mov
test
cwtl
test
mov
add
mov
shl
push
adc
add
jns
test
fisubl
lods
add
or
loopne
or
andl
sti
pop
xchg
pop
scas
imul
jp
pop
data16
mov
xchg
sbbb
out
jl
cmp
std
sahf
mov
cld
sbb
mov
jecxz
rcrb
push
jge
cld
add
dec
ja
fnstenv
popf
loopne
sbb
add
push
pop
sub
or
mov
adc
xchg
scas
jle
sub
insb
test
push
gs
in
mov
and
adc
mov
add
or
sti
pushf
fstpl
stos
in
and
sub
and
push
inc
jg
icebp
icebp
or
jnp
popa
scas
fwait
cmp
mov
shrl
lods
xchg
cltd
dec
or
xor
mov
adc
outsb
or
icebp
cltd
mov
lret
in
mov
pop
enter
mov
push
or
xor
rorb
aaa
xor
pop
adc
jmp
test
in
les
and
in
aad
test
sbb
or
insb
arpl
sub
lods
sbb
push
dec
sarl
mov
jle
daa
jbe
cmpsl
inc
sub
outsl
or
cwtl
jbe
movsl
mov
imul
test
push
fisttpll
sahf
aas
rcll
mov
loop
movsb
xor
add
std
mov
mov
cmpsl
stos
fmull
adc
mov
xchg
mov
sbb
test
inc
jne
xchg
add
xor
bound
mov
xchg
call
outsb
fwait
lret
stc
xchg
loopne
jl
cmp
rcrb
pop
je
mov
dec
xchg
jne
out
mov
push
outsb
testb
cwtl
loope
ljmp
cmp
icebp
std
add
imul
xchg
stos
inc
sbb
mov
mov
and
push
and
addr16
loopne
push
jecxz
inc
mov
cmp
insl
aas
push
push
in
in
cmpsb
push
mov
mov
stos
cmp
ljmp
movsl
fwait
dec
lret
jmp
jnp
add
outsl
add
jle
push
scas
loop
push
jne
mov
and
push
fadds
pop
add
mov
sub
add
rclb
sub
mov
int3
push
and
mov
leave
mov
mov
divb
mov
sbb
push
cmpsb
sarl
sbb
ja
ret
push
sbb
ljmp
push
stos
sub
bnd
and
jecxz
xchg
sar
pop
test
add
out
hlt
and
jmp
mov
repz
pushf
xchg
xor
pusha
ret
insb
mov
rolb
mov
movsl
shll
mov
cli
push
imull
cs
sbb
clc
lahf
cmp
xor
dec
fiadds
jg
rcrl
jne
push
jp
push
scas
movsb
dec
mov
js
mov
ja
jmp
fsubrs
out
push
clc
pop
cmp
mov
mov
jo
or
cltd
push
lret
push
xchg
or
xchg
pop
scas
push
enter
xor
addl
lock
mov
cmp
call
cmp
sbb
or
jle
pusha
push
ret
in
arpl
aaa
inc
inc
jecxz
outsl
mov
insl
dec
jle
dec
fimull
cmp
loop
out
sbb
jne
pop
push
mov
push
inc
cli
leave
jae
sub
jge
pushf
xor
dec
add
cmp
dec
dec
jns
mov
mov
push
xchg
lds
sarl
out
stos
adc
adc
xlat
push
add
inc
add
fcompl
clc
mov
dec
mov
shrl
xor
test
xor
lods
fisttpll
jmp
pop
pop
mov
and
dec
repz
fs
xchg
or
repz
movsb
pop
imul
lods
leave
mov
and
push
add
push
insb
lods
mov
jno
cmp
mov
adc
lahf
push
pop
jl
jp
das
mov
add
sar
gs
les
mov
in
in
mov
jmp
xchg
mov
adc
lock
cmp
and
cmp
in
mov
iret
sbb
xor
sub
and
inc
jl
rorb
mov
je
jbe
dec
int
call
push
js
push
sbb
popf
out
pop
in
xor
cmpsl
jmp
xchg
xchg
es
outsb
jnp
test
push
adc
rolb
daa
movsb
out
pop
cmpsb
mov
inc
push
or
lods
clc
jmp
in
mov
icebp
or
fsub
push
xor
add
jg
xor
sbb
ret
or
inc
or
dec
cmpsl
cmp
ucomiss
shrl
sbb
xorl
shll
jnp
pop
push
data16
sub
iret
sbb
dec
pop
pusha
cmc
cwtl
mov
pushf
lret
cmc
adc
movsl
ret
rcr
push
hlt
popf
aas
or
pop
fimull
push
mov
jae
int3
pop
cmpsb
lcall
pop
imul
jmp
sub
sub
in
call
and
cltd
fiaddl
mov
adc
shll
iret
and
dec
fistpl
faddl
test
cmp
xchg
dec
outsl
push
jecxz
xor
gs
in
jg
push
jmp
fists
add
pop
xchg
adc
aam
pop
imul
cmpsl
aam
cmp
es
daa
movsl
push
les
xor
push
aam
mov
nop
daa
lods
push
lock
or
iret
xchg
stos
inc
push
lds
add
mov
add
mov
lock
clc
rcrl
les
sub
and
pusha
imul
ret
push
in
xor
mov
mov
push
xchg
movsb
pop
ret
addl
inc
aaa
mov
enter
scas
adc
call
addr16
call
mov
int
out
out
cld
dec
lea
and
mov
cmp
fldl
test
add
lods
mov
js
jns
mov
push
inc
addr16
popa
jp
aaa
in
flds
enter
mov
mov
aad
sub
mov
cmp
add
test
jle
dec
iret
loopne
in
jl
xchg
popf
jno
lret
add
movsl
test
sahf
mov
mov
lcall
cmp
cmp
mov
mov
inc
dec
fdivrl
and
mov
push
into
xlat
lret
pop
mov
dec
push
repnz
push
loop
adc
adc
repz
inc
das
add
xchg
xor
jle
std
pop
outsb
in
inc
icebp
push
mov
je
scas
xchg
sbb
repnz
mov
and
push
notl
pmaxub
mov
test
test
mov
sub
loope
int
sub
shll
jae
jecxz
leave
sub
jne
mov
sbb
sahf
cmp
push
js
addr16
das
imul
mov
xor
mov
insl
mov
xchg
xor
lea
push
clc
stos
leave
mov
jne
lret
cmp
je
sti
cwtl
sub
cs
jno
popa
xor
xchg
xchg
or
into
fists
lcall
adc
xor
dec
addr16
jecxz
push
into
cmp
sub
into
outsb
push
jne
mov
int
jo
push
xchg
cli
mov
fstpt
push
push
dec
insb
push
xchg
sbb
inc
sub
in
push
push
inc
mov
int3
cmp
test
sbb
outsl
pop
sahf
mov
sub
xor
inc
push
adc
movsb
decb
pop
iret
xchg
mov
dec
aad
push
stos
jmp
sbb
sbb
addr16
push
mov
or
into
cmp
arpl
xchg
out
jae
ds
xor
adc
pop
push
xchg
add
inc
mov
cmpsl
repnz
imul
adc
aaa
ss
cld
add
insb
cmp
pop
lahf
das
xor
dec
arpl
neg
out
fs
pop
outsb
sbbb
pop
ja
out
and
je
xor
gs
push
call
xchg
dec
sub
outsb
pushf
adc
cltd
pop
or
pop
xchg
xchg
add
push
push
cmpb
imul
push
mov
jle
and
imul
sbb
inc
les
mov
and
or
stos
rclb
comiss
cwtl
test
or
lock
lods
dec
push
sbb
push
push
out
cli
and
sti
flds
and
jp
jg
pop
xchg
inc
jg
das
xchg
lods
testl
cmp
cwtl
mov
sbb
stc
fsub
in
dec
sub
mov
inc
inc
dec
cli
fistpll
out
inc
mov
adc
inc
push
mov
in
xorb
aad
xchg
mov
xchg
mov
sahf
jge
out
stos
test
lods
xchg
pop
lret
adc
or
dec
sbb
cld
imul
rclb
pushf
xor
add
inc
fidivrs
fsubr
jmp
test
adc
je
gs
or
mov
rorb
xchg
mov
lret
insb
push
inc
or
mov
push
mov
jmp
repnz
sub
or
cld
loopne
outsb
fimuls
mov
or
fwait
dec
int3
lock
pop
scas
xlat
mov
test
mov
aaa
mov
cmp
int3
lret
and
je
pop
jae
xchg
lock
cmp
cmp
dec
cmpsl
cmp
lods
push
add
or
and
popa
in
mov
xlat
dec
lods
test
pop
fadd
fisubrl
es
leave
mov
aad
fidivrs
enter
mov
test
ret
mul
icebp
jnp
jmp
pop
fstpt
jg
cmp
mov
mov
sbb
cmp
jb
dec
adc
test
cmp
in
mov
add
mov
mov
popf
cmp
test
and
xor
jp
scas
inc
sbbb
xchg
adc
xchg
dec
sbb
cmp
cld
and
cld
pop
fxch
stc
sahf
jnp
xor
pop
xchg
mul
push
xor
jno
add
lods
dec
xor
cmp
lret
pop
add
imul
inc
ljmp
mov
pop
mov
lods
mov
test
pop
push
mov
int3
xchg
cld
jmp
or
imul
repnz
test
div
push
daa
jp
bswap
inc
pop
mov
out
jge
sub
int
in
lret
gs
in
sub
fnstcw
mov
jp
ret
dec
mov
adc
dec
and
inc
or
scas
push
insb
icebp
sbb
dec
filds
mov
into
pop
mov
call
aaa
jno
xor
jnp
add
mov
test
call
push
lock
ds
jns
jno
shrl
pop
cmp
mov
mov
aas
je
cmpsl
mov
xor
aam
adc
bound
inc
mov
jne
fdivrs
inc
and
test
cmpsb
and
and
cmp
pop
cmp
mov
cli
mov
xchg
rcr
jnp
std
lods
aad
je
pusha
ret
stos
out
cli
sub
mov
push
cmp
ja
movsl
pop
into
sbb
lods
lcall
stos
aas
imul
popf
lods
push
testl
leave
push
movsb
testl
dec
and
adc
push
ficoml
nop
sar
sub
jb
mov
add
cmpsl
jne
loop
sbb
test
clc
test
inc
int
daa
fildll
mov
jg
sbb
pmulhw
mov
into
imull
mov
sarl
cmpsb
sub
aaa
cltd
push
adc
jmp
jge
mov
fcompl
gs
out
shl
jmp
mov
and
and
lret
outsb
pusha
dec
mov
test
and
or
fdiv
mov
cmp
popa
test
xlat
push
sbb
scas
push
push
mov
push
push
jg
add
adc
inc
je
enter
push
mov
lods
push
cmp
int3
jle
jp
cld
call
nop
inc
pop
push
and
fs
pop
pop
mov
sbb
mov
sbb
sar
mov
into
aas
cmc
mov
or
gs
mov
imul
cmp
stos
sarl
pop
fs
lods
jl
dec
sub
jmp
movsl
jmp
sbb
sarl
push
mov
ficompl
push
push
movsl
pop
cmpsl
add
cmp
cmp
mov
repnz
dec
xchg
mov
push
dec
push
xlat
push
ret
das
repz
or
add
pop
mov
inc
in
popa
sti
int3
dec
lods
into
test
ret
cli
daa
lcall
hlt
sbbb
cmp
scas
enter
cmp
pop
xchg
insb
fs
xchg
aam
ljmp
out
mov
movsl
shrb
dec
mov
sub
adc
and
ror
pop
dec
cmp
cmpsb
and
testb
insl
push
sub
aas
push
push
push
xor
sub
call
icebp
cmp
lret
rclb
roll
mov
stos
out
loop
fdecstp
addr16
pop
push
in
inc
cmpsl
in
push
mov
jne
or
movsl
add
outsb
mov
ljmp
repz
xchg
arpl
and
inc
cltd
loopne
cmp
int
pushf
and
loope
in
inc
dec
pop
inc
ret
jp
ficomps
mov
jne
outsb
cmp
sub
jle
mov
pop
push
pop
sub
test
sbb
mov
pop
mov
je
ret
int3
popa
sbb
aad
mov
mov
sbb
outsb
mov
jne
mov
mov
mov
out
mov
mov
xchg
and
lea
je
push
aaa
js
xlat
inc
push
push
jnp
insb
xchg
insl
test
adc
in
xchg
decl
adc
mov
stos
negl
jp
mov
repz
jl
out
xchg
inc
mov
push
filds
dec
enter
jl
xchg
sbb
je
out
mov
adc
add
push
cmpsl
imul
les
out
cmp
and
add
xlat
sub
call
adc
push
lret
daa
enter
rolb
jg
mov
les
lret
mov
and
sbb
fnstcw
mov
dec
addl
jl
mov
dec
lcall
stos
sahf
sahf
stos
dec
repnz
in
mov
ret
add
int
jl
pop
loop
test
cmc
inc
outsb
loopne
mov
jmp
xchg
push
adc
clc
cmpsl
jo
and
movsb
add
mov
das
dec
lock
fisubl
push
insb
or
xor
mov
enter
mov
pop
push
and
in
jb
jnp
jmp
mov
test
in
xchg
xchg
fwait
and
mov
cmpsl
mov
sbb
enter
jl
pop
dec
xor
or
cmp
jne
add
mov
sbb
popa
pop
repnz
mull
cmp
mov
jmp
lahf
push
add
add
hlt
icebp
cmp
rclb
sbb
add
cmpsb
loope
xor
decb
xor
and
jmp
and
adc
xchg
mov
js
mov
dec
insb
lods
push
int3
jbe
js
push
jmp
insl
add
push
call
insl
push
mov
and
out
sbb
fs
out
fidivl
lret
add
push
pop
movsb
enter
aam
fiadds
xchg
cmp
mov
push
pop
inc
pushf
test
dec
int3
sahf
fnstsw
xorl
je
frstor
pop
mov
into
sahf
xchg
push
negb
test
lock
data16
jno
jns
cmc
cwtl
sti
cmp
cvtpi2ps
popa
into
test
ret
test
insl
out
cmpsl
out
dec
aaa
pop
mov
aam
mov
cmpsb
cmpsb
push
mov
popa
xchg
pop
and
lods
ret
jp
les
cmp
scas
scas
and
shlb
add
mov
or
dec
or
jnp
add
cmp
cwtl
pushl
ss
ja
mov
or
inc
jecxz
adc
shrb
in
sahf
popf
mov
cltd
pushf
fmuls
dec
sub
sub
xchg
sbb
cmpsb
inc
push
imul
jmp
test
into
mov
xchg
inc
sbbl
or
adc
test
jb
rcl
xor
pop
call
pop
xchg
test
mov
repnz
and
fwait
addr16
jp
and
stos
pop
stc
pop
js
fiaddl
xor
cmpsl
test
ficompl
inc
dec
stos
cmp
orl
and
jmp
leave
add
sbb
inc
push
lcall
cmpsb
mov
jge
lock
xor
scas
iret
adc
dec
push
mov
pusha
sub
add
les
push
inc
dec
scas
std
js
in
cmp
mov
aam
jp
push
clc
dec
stos
xchg
mov
lahf
call
cmp
inc
cmp
jns
mov
add
or
nop
lret
push
mov
xor
push
cwtl
jl
mov
inc
sti
int
xor
mov
pushf
xorps
aaa
xorb
mov
test
cs
daa
outsb
ret
pusha
cmp
ds
adc
into
out
pop
lods
iret
aad
ss
mov
mov
rol
push
jl
inc
imul
leave
mov
in
sub
sub
lds
lods
fisttpll
xchg
pop
in
mov
jo
imul
pop
out
xor
in
mov
push
push
push
xor
ljmp
jnp
inc
adc
sub
inc
mov
dec
es
in
sub
sub
xor
push
loop
cs
pop
faddl
addl
scas
rcrb
pop
xchg
mov
push
outsb
out
stc
jne
inc
fldl
sub
insb
xor
jae
nop
loop
inc
and
xor
ret
hlt
dec
fmul
mov
add
push
out
dec
cmpsb
shlb
sbbb
adc
cmp
or
jae
pop
sarl
dec
ds
pop
clc
sub
ds
cmp
or
sarl
mov
xor
pop
hlt
inc
mov
lods
insl
fdivrl
sbb
push
ret
movsb
nop
cmpl
movsb
clc
mov
cmp
stc
in
pop
jne
into
ret
pop
or
add
sub
mov
pop
jp
insl
pop
les
and
rcrb
sub
pop
inc
xor
pop
add
xchg
dec
jp
push
fiadds
push
xor
test
mov
xchg
adc
and
call
push
jns
xor
bound
int3
xor
andb
jb
iret
sub
add
int3
xor
xchg
test
out
into
int
jp
and
xor
jecxz
lcall
jmp
ret
xor
inc
out
inc
push
mov
aad
inc
cmp
test
cmc
ss
out
dec
mov
jno
xor
sub
loopne
dec
sbb
lret
add
fwait
adc
or
mov
imul
loopne
cmpsl
adc
adc
stos
adc
jbe
add
pop
jl
lret
xlat
cwtl
push
jp
jbe
add
nop
mov
cli
movsw
int3
cwtl
idivl
filds
mov
fsubrs
cmp
push
mov
cs
sub
add
ret
push
jno
or
push
cmp
and
repnz
xor
fcompl
lea
push
or
xor
sbb
popf
jmp
in
je
fwait
xor
iret
out
fcmovnb
mov
nop
leave
and
or
fstp
test
adc
xchg
pop
xor
jne
push
inc
pusha
rclb
pushl
mov
pop
ret
daa
sti
and
sub
mov
cwtl
adc
cmp
movsb
ds
shrb
jne
enter
mov
ss
or
add
pushf
adc
inc
or
cmp
adc
and
sti
shlb
sub
push
mov
stc
aam
dec
pop
xor
xlat
mov
in
xorl
leave
pop
pusha
repnz
jecxz
roll
std
jge
pop
imul
xor
roll
movsl
lds
cmp
nop
fidivrs
dec
in
pop
lret
cwtl
test
cmp
pop
movsb
dec
dec
jmp
mov
mov
cld
fnstenv
stos
cltd
or
mov
sub
mov
pop
mov
sub
jl
mov
shl
pop
les
jl
push
out
ds
mov
sbb
nop
cmp
xor
jg
int3
cmp
fcmovbe
add
leave
test
jne
icebp
or
mov
jmp
pop
outsb
ret
cmp
jp
sub
dec
imul
cmp
xchg
xchg
push
sahf
xchg
jg
outsb
xor
adc
out
loope
dec
adc
sbb
test
sub
pop
jns
int3
push
stos
cmp
fldcw
mov
repnz
scas
out
mov
cmp
fmuls
or
aas
shll
mov
pusha
test
addl
subl
and
popa
leave
test
add
jae
dec
testl
cmp
dec
shl
fsts
adc
enter
pop
ficompl
adc
mov
cld
fidivs
ds
loope
add
jo
mov
shr
insl
sbb
xchg
popa
iret
es
pop
xlat
ret
pop
insb
or
imul
fisubrs
cs
or
sahf
cli
call
jae
mov
mov
fsubrs
insb
pop
les
outsb
in
xchg
and
test
and
nop
adc
in
out
mov
add
sub
and
gs
pusha
aad
jne
xchg
jl
adc
mov
dec
push
cltd
les
cltd
sti
lret
xlat
imul
adc
push
cmc
adc
addl
or
mov
push
fbstp
hlt
in
inc
xchg
push
lods
lcall
sub
daa
sbb
addl
jle
pop
loope
jle
fstpl
xlat
adc
cmpsl
mov
andl
xchg
sti
inc
in
pop
es
jno
mov
mov
mov
mov
mov
repnz
xlat
aas
jo
xor
mov
pushf
cmp
dec
push
push
dec
rcrl
bound
imul
cltd
cmp
xchg
push
push
aas
ds
inc
xor
xchg
push
fisubrs
stos
pop
mov
sbb
stc
cli
shrl
jns
add
add
movl
xchg
dec
dec
mov
imul
arpl
pop
sub
push
mov
xorb
adc
dec
stos
push
sub
je
rclb
and
adc
push
mov
fists
xchg
xorl
out
pop
lods
mov
ljmp
pop
mov
push
fs
mov
fst
mov
cwtl
popl
mov
dec
and
add
xor
out
rcrb
inc
lea
or
into
jnp
and
dec
fnsave
rcrb
sub
dec
xchg
movsb
daa
fnsave
mov
rcrl
mov
out
ljmp
cltd
imul
dec
test
sbb
xor
fmull
pop
sahf
dec
push
gs
or
aaa
cmpsb
pusha
mov
ja
nop
addr16
into
fdivrs
int
mov
jbe
in
inc
movsl
movsb
test
jo
mov
sbbb
and
jg
and
jmp
cmpsl
inc
and
and
icebp
pushf
xlat
xor
jae
xchg
stos
mov
push
out
sub
leave
addl
inc
sbb
pop
dec
mov
dec
inc
sbb
pushf
test
mov
sbb
fimull
scas
jge
push
or
xor
xorl
push
aaa
inc
shrl
in
rclb
sub
jbe
les
cmp
fistl
cmpl
pop
mov
add
gs
jnp
insb
rclb
add
sbb
pop
sar
dec
adc
imul
mov
outsl
jo
lahf
loopne
jp
aam
fistpll
je
lods
xor
mov
and
pop
lahf
sbb
or
repnz
adc
or
sub
gs
imul
shlb
dec
test
addr16
mov
pop
nop
xchg
fcmovnbe
ja
or
xlat
pop
mov
mov
fdivrp
xchg
pop
popf
xor
dec
out
aaa
aas
ret
in
inc
aaa
std
popa
test
mov
lret
push
aam
mov
adc
jl
data16
jbe
js
mov
mov
mov
sbb
sub
add
or
cmpsb
jecxz
js
push
rcll
ds
mov
idivb
pop
mov
fwait
jp
je
shll
loopne
aad
mov
mov
inc
arpl
stos
outsl
rolb
add
adc
sbb
fs
lret
sbb
xchg
dec
lds
sub
add
ja
leave
out
rcrl
dec
jae
jb
sub
std
or
add
inc
jo
ret
sub
mov
cmp
ljmp
pop
cmp
or
mov
xchg
mov
cmp
lret
pop
xor
adc
mov
or
popa
lods
shrl
sub
pop
cld
mov
sti
jle
rcl
insl
idiv
lds
pop
jmp
nop
lods
adc
jecxz
shrl
das
and
push
fwait
push
mov
and
stc
xchg
pop
sbb
and
lods
mov
mov
push
and
add
xchg
sbb
stos
neg
cmp
fstps
jns
and
mov
cmp
cs
pop
in
ffree
jle
cmp
cltd
pop
test
mov
lret
pop
iret
rclb
fdivr
test
jo
scas
dec
inc
adc
mov
inc
outsl
sti
es
or
push
je
repz
jmp
stos
adc
js
or
pop
mov
mov
jae
xor
and
push
rcrb
xlat
cmp
mov
int3
rcrb
jns
or
jno
mov
movsl
fiaddl
sbb
push
xchg
lret
push
or
sahf
push
subb
pop
jo
or
adc
pop
sub
jno
repnz
sarb
cmc
cmp
dec
sub
xor
and
adcb
cmp
stc
decb
je
xchg
xor
inc
adcl
in
xchg
push
sbb
push
insb
hlt
sarl
fs
das
cmp
jbe
jnp
cmpl
mov
push
mov
inc
push
int3
or
mov
and
cs
jp
sbb
inc
test
ds
mov
pop
stos
lret
jo
xor
inc
scas
mulb
repz
out
cmp
push
jecxz
in
dec
adc
push
push
sub
iret
xor
or
mov
xchg
dec
inc
adc
outsb
aad
pop
ret
mov
lds
pop
sub
inc
add
mov
adc
push
insl
leave
das
xchg
inc
ljmp
aam
lds
inc
jle
pusha
ds
jnp
jmp
arpl
lock
sub
int
jo
jecxz
add
mov
pop
push
shl
or
outsb
sti
lahf
adc
push
and
cmpsb
insl
jno
push
sbb
xchg
mov
stos
cmp
mov
add
outsb
cmpsb
in
je
stos
sti
ja
in
cmpsl
xchg
rcll
cltd
int3
sub
xchg
mov
pop
les
dec
in
and
jg
and
fdivrl
jae
xor
mov
sti
test
cmpsl
push
mov
lds
or
pop
cli
ret
xchg
dec
push
xchg
or
fidivl
jmp
jb
addr16
aad
in
pop
mov
rcrb
xor
imul
inc
mov
ja
mov
xchg
clc
lret
shrl
pusha
or
iret
mov
pop
xor
push
in
fists
sub
push
gs
movsl
loopne
mov
aaa
loope
xchg
popa
leave
ret
loop
mov
sub
dec
cmpsb
sti
stc
cli
pushf
popf
adc
xchg
and
addr16
fucomi
cmc
dec
add
jmp
or
aam
aas
push
lock
push
inc
push
das
cmpsb
sbb
in
stc
mov
xchg
push
cmp
dec
pop
scas
add
xchg
sbb
loop
int3
xchg
fidivs
xor
inc
jg
mov
jmp
negl
loop
xchg
xor
or
cltd
fcoms
push
dec
jmp
sub
mov
adc
in
push
jns
mov
sbb
xor
repz
pop
and
je
add
push
xor
adc
cmpb
jl
xchg
jne
inc
arpl
out
jg
xchg
xchg
call
scas
mov
sbb
dec
lcall
cld
ds
sub
jns
cwtl
and
push
aam
xchg
fsubs
sti
and
lea
jns
out
sti
arpl
sbb
inc
push
add
sub
cmc
push
sbb
adc
icebp
out
push
ds
dec
iret
sbb
dec
mov
pop
jbe
cmpsl
push
loop
lret
mov
sub
in
cwtl
lret
arpl
jb
mov
push
push
mov
lret
cmpsb
cs
dec
aaa
ljmp
stos
int
fistps
mov
js
cs
and
xor
cmpsl
ss
repnz
jmp
testl
mov
repnz
jo
mov
rorl
sub
dec
std
loopne
mov
mov
add
mov
out
push
orl
mov
pop
cmp
mov
lods
cmp
cmp
push
xchg
pop
mov
xchg
stos
sub
js
adcb
cld
and
and
xor
cli
add
in
jo
hlt
loop
cmp
scas
jle
cwtl
push
inc
insb
mov
jle
pusha
iret
enter
addl
xchg
cwtl
scas
insl
mov
pop
jno
leave
add
inc
cmp
in
cmovo
pop
xor
pop
pop
ljmp
call
sub
adc
out
push
jae
fcompl
mov
jb
pop
cmp
push
pop
jl
cwtl
mov
mov
js
scas
sub
leave
lds
cmp
push
xlat
sbb
adc
xor
push
scas
jmp
lods
orb
cmp
mov
mov
test
or
jb
sbb
push
xchg
adc
pop
sub
pop
adc
enter
lcall
aaa
out
push
push
leave
rcrl
jle
pop
daa
lods
fwait
pop
lahf
shll
loopne
xchg
lcall
sub
scas
loope
sbb
es
mov
aam
rclb
pop
idiv
call
and
sub
call
addr16
out
jbe
in
pop
rolb
mov
bound
mov
lock
ret
lret
push
movsl
or
subb
icebp
adc
and
push
aaa
into
stos
call
jo
xchg
cli
push
jnp
aas
add
pop
pop
inc
mov
mov
test
lahf
xchg
push
pop
cltd
movaps
mov
xchg
mov
xor
stos
jns
scas
push
dec
ficomps
push
or
fists
pop
mov
aad
leave
fiaddl
mov
pop
bound
out
jle
nop
push
adc
jb
jecxz
mov
adc
sub
dec
jl
cs
sbb
inc
mov
sub
jb
pop
add
es
repz
push
lock
inc
addl
add
jle
jae
sahf
fdivs
enter
cmp
in
repz
jo
cli
inc
pop
out
cmpb
fisttpll
in
jle
hlt
sbb
xchg
mov
xlat
jl
jns
jp
dec
lahf
in
jle
in
pop
mov
mov
cltd
out
fwait
mov
mov
fimull
out
cmpsl
push
cmp
mov
shl
fucomp
lahf
mov
pop
inc
std
xchg
or
arpl
lret
push
dec
mov
inc
mov
cld
hlt
loopne
pop
jl
cmp
push
mov
out
push
push
into
and
xor
imul
cmpsl
or
fstpt
pop
push
mov
dec
push
repnz
dec
mov
dec
xor
xchg
pop
mov
pop
dec
xlat
stos
mov
and
cli
sub
lds
xor
dec
jbe
add
sbb
lret
out
sbb
jb
idivb
sahf
pop
mov
xchg
ret
sahf
test
jmp
test
fnstsw
mov
and
in
inc
divl
rclb
inc
mov
mov
pop
les
cld
mov
fs
mov
and
pop
ja
lods
loop
inc
sub
out
das
clc
ds
and
push
ret
in
jb
int
mov
cs
std
mov
inc
cwtl
rcll
adc
xor
stc
sbb
mov
xchg
out
add
cmp
mov
push
cli
dec
pop
xor
xlat
into
mov
fstps
jg
ljmp
jg
sub
lock
js
sbb
stos
les
and
out
or
repnz
insb
xor
addb
mov
adc
xorb
fstl
test
add
cmc
ffreep
lahf
cmpsl
inc
ds
sub
add
stos
fisubrs
mov
dec
and
mov
add
je
adc
pop
js
sub
and
add
idivb
or
xlat
mov
and
sub
fistpl
aaa
add
andl
addb
xchg
add
jge
add
xor
jmp
in
outsb
iret
test
and
das
pop
into
add
adc
jl
xlat
mov
imul
mov
pop
test
xchg
mov
test
movsl
jge
pop
cmpsb
push
or
lcall
data16
push
outsb
ret
fwait
cmp
sbb
jno
and
push
stc
push
test
movsb
jb
lcall
imul
dec
and
lea
push
rorw
out
ss
mov
gs
xor
repz
lret
js
pop
sub
orb
add
push
lods
sbb
dec
das
jg
in
lcall
test
arpl
jo
lret
sarl
std
data16
sarl
fst
pop
push
sub
std
mov
stos
sbb
push
mov
jnp
push
dec
mov
test
lock
mov
adc
sub
pop
xor
arpl
mov
sub
adcl
sub
and
cmp
xor
testl
fidivl
fs
jb
jle
movsb
lods
lods
andl
mov
jae
xor
shll
xchg
or
dec
les
mov
inc
lahf
nop
sub
jmp
hlt
adc
mov
cmc
stc
jo
stos
mov
lock
pop
clc
xchg
or
sbb
idivb
aam
movsl
pop
out
xor
pop
mov
mov
mov
mov
inc
stos
adc
mov
adc
call
mov
movsb
adc
hlt
int3
adc
lcall
das
adc
add
lret
mov
rorl
sub
push
nop
es
push
pop
and
std
jne
insl
js
mov
cmpsb
dec
loop
popf
sub
test
outsl
pop
int
push
xchg
dec
outsl
jns
aam
out
popf
mov
cwtl
mov
leave
adc
nop
sub
and
cmp
sbbl
jbe
adc
adc
sub
in
das
mov
xor
mov
and
push
jae
sub
mov
pop
pop
fadd
jle
push
or
jp
hlt
loope
pop
adc
inc
faddl
mov
inc
or
jecxz
inc
sti
push
jae
cld
lock
xchg
movb
jle
xor
psrad
jae
popl
mov
push
nop
inc
adc
subb
fwait
and
adc
scas
rcr
dec
pusha
add
cmp
scas
push
xor
jbe
mov
lcall
fimull
aaa
pushf
pushf
adc
or
cld
ret
je
sub
fiadds
or
in
test
ds
ss
mov
mov
mov
mov
std
jl
cmp
cmp
sbb
mov
popf
dec
pop
pop
rol
mov
leave
scas
mov
rcll
aas
dec
std
stos
sub
hlt
shl
lods
shr
les
pop
push
push
iret
repz
fldcw
pop
in
cmc
call
hlt
int3
je
notb
and
mov
lret
cltd
fistpll
push
jns
xchg
add
scas
cltd
shlb
pop
repnz
push
movsl
aas
outsl
push
mov
addr16
in
lret
push
lds
outsb
clc
sahf
shll
fnstenv
pop
notl
mov
jge
pushf
push
loope
adc
cmpsl
mov
jb
sbb
pop
push
out
push
mov
or
inc
and
arpl
or
mov
jne
sub
or
ss
scas
xchg
cld
popa
dec
inc
ftst
jl
jne
add
lds
xchg
inc
lahf
or
sub
loope
call
sbb
scas
test
lods
out
fsubs
fwait
pop
arpl
inc
and
sarl
sbb
inc
shl
push
test
imul
sub
cmp
fwait
bound
dec
sbb
dec
js
div
sbb
je
push
and
pop
inc
inc
cmp
cmp
jo
mov
xchg
xlat
push
adcl
leave
jecxz
test
push
out
pop
dec
insb
roll
add
or
add
movsl
adc
std
stos
and
pop
int
ljmp
addr16
fidivrl
sbb
lahf
inc
push
imul
call
js
arpl
sahf
or
dec
int3
xor
inc
sub
and
or
ja
inc
mov
mov
movl
aas
jecxz
std
push
cli
inc
fst
bound
mov
repnz
pop
orl
lea
pop
xor
or
ds
imul
fsubl
fwait
and
shrl
mov
sub
jae
shlb
adc
inc
out
jnp
popf
mov
adcb
sbb
movsb
mov
in
das
out
sub
rcr
adc
andb
pop
test
imul
xor
loopne
cmp
sahf
ret
mov
ret
xor
data16
mov
cmp
lds
inc
sbb
les
inc
adc
outsb
inc
cmpsl
jge
popf
clc
fdivs
or
mov
aas
jecxz
not
dec
push
mov
mov
je
fnstsw
lods
inc
xchg
ljmp
call
dec
les
movsl
out
fildll
push
add
cmp
aaa
into
mov
adc
mov
mov
fldl
sahf
mov
and
cmp
mov
nop
xchg
shrb
data16
inc
cli
and
dec
fldenv
xor
xchg
shrl
jecxz
loopne
mov
mov
addr16
movsl
and
sbb
cmpsb
lret
aam
mov
lea
xchg
add
pop
dec
xor
or
gs
xor
outsl
fldt
push
out
mov
mov
iret
aad
push
fldl
sub
mov
sarl
inc
fdivrl
push
jmp
push
xchg
sahf
add
mov
and
in
jmp
add
fwait
mov
sbb
push
popa
cmp
xchg
outsb
inc
sub
mov
sub
push
jo
or
xchg
add
add
lds
ja
xchg
and
sub
mov
bound
sahf
xor
pop
fwait
in
mov
les
and
pop
push
movsb
insl
call
jno
sub
xchg
push
mov
gs
pusha
sarb
jno
test
adc
xchg
cmp
sbb
dec
jns
testb
std
test
fsubs
and
shll
dec
lock
std
or
push
stc
iret
adc
push
sbb
lods
ss
in
loopne
lods
adc
sarb
fstpt
or
mov
inc
out
sbb
insb
outsb
divl
pop
out
mov
adc
btr
inc
je
sti
in
xor
enter
mov
insl
sub
imul
jmp
negb
cmpb
cwtl
sbb
mov
pop
fistpl
subl
sub
xlat
hlt
fdivp
jmp
cmpsb
xor
or
pop
push
test
movsb
inc
or
addr16
cli
mov
ja
push
adc
sub
loop
adc
mov
push
xchg
and
pop
mov
cli
push
lret
adc
inc
stc
aas
dec
adc
push
inc
jnp
push
clc
ret
mov
xor
xor
ds
add
fcoml
cwtl
mov
pop
mov
je
fnsave
sarb
gs
jmp
sub
imul
lret
xchg
inc
jle
or
or
and
out
jecxz
add
xchg
xor
add
sbb
insl
ret
push
loopne
xchg
jmp
or
mov
add
ficoms
notl
sub
mov
xchg
sbb
out
orb
or
xor
mov
xchg
je
es
ljmp
add
jnp
js,pn
fiaddl
aad
jnp
push
dec
fidivrs
aam
dec
push
add
lcall
fmull
fdivl
inc
ss
mov
lods
push
mov
js
inc
inc
add
dec
mov
into
pop
out
push
mov
jl
xchg
pop
mulb
sbb
xchg
movsb
mov
push
dec
mov
cs
leave
or
nop
jg
mov
ljmp
js
mov
cmp
jmp
push
sbb
fstl
insl
add
in
lea
data16
es
mov
pushf
iret
in
out
lds
lods
icebp
cmp
mov
or
jb
add
adc
add
int
sub
in
loopne
pop
inc
pop
insb
mov
xchg
bound
jbe
mov
insb
insb
pop
dec
jmp
cmp
mov
inc
pop
out
add
in
rclb
mov
test
jb
inc
shrb
fdivrs
decl
mov
cmp
xor
int3
adc
fnstcw
push
sub
xchg
js
fwait
pop
dec
xor
jbe
cli
xchg
dec
mov
fsub
mov
call
cmc
mov
or
cmpsl
mov
and
and
xchg
pop
lret
xorb
xor
mov
adc
jecxz
enter
add
pop
inc
push
add
mov
sbb
mov
xor
mov
xchg
mov
adc
mov
mov
or
leave
lea
xchg
and
push
lcall
shlb
xor
mov
add
pop
push
iret
daa
sbb
or
pop
pop
aad
add
adc
cld
cmpsb
xlat
jmp
or
ret
rcrl
and
mov
inc
sub
xchg
aad
or
dec
inc
sub
mov
jae
inc
and
mov
ret
ds
test
fcmovne
cmpb
push
mov
loope
sub
xchg
add
dec
xchg
pop
jbe
loope
push
outsb
xchg
jne
and
pop
mov
aam
hlt
dec
xchg
push
xchg
xor
and
mov
popa
ret
fnsave
fcmovnu
pop
cli
mov
jne
lods
leave
sub
ficompl
sub
js
dec
or
ds
jne
mov
jge
insl
xchg
mov
test
mov
push
lock
loop
inc
add
scas
push
popf
dec
testb
scas
adc
leave
loope
out
add
mov
fmuls
sub
scas
out
test
out
test
sub
xor
scas
int3
je
loop
or
sbb
or
loope
je
insb
das
fiaddl
mov
cmp
add
pop
adc
mov
push
dec
je
push
fsubrl
int
lret
rcr
pop
ret
aad
jnp
sub
mov
mov
sub
jmp
push
scas
mov
ds
mov
frstor
popf
faddl
outsl
pop
xchg
fisubrl
daa
pop
sbb
push
jmp
in
mov
push
loopne
mov
mov
dec
loope
mov
nop
mov
adc
clc
aas
rcrl
mov
or
adc
xor
out
mov
testb
adc
sub
jo
les
pop
add
add
mov
aam
adc
sbb
call
sbb
jmp
test
enter
inc
mov
fldcw
scas
imul
cmp
sarl
pop
orb
push
mov
addl
stos
cld
pop
test
adc
jmp
insb
push
lahf
mov
leave
orb
cmp
sub
dec
adc
mov
fnsetpm(287
popa
out
adc
lcall
cmp
or
xor
sbb
loop
xor
push
xchg
cmpsl
add
dec
jl
and
add
dec
out
mov
ror
sbb
mov
jb
sbb
inc
push
cmc
inc
adc
pop
mov
xchg
mov
mov
cmp
lcall
jo
sbb
mov
in
sub
in
xchg
jl
in
es
cmp
mov
xchg
iret
mov
jmp
push
pushf
fstpl
cmp
mov
inc
jns
jbe
adc
jne
add
adc
and
xchg
push
mov
sub
push
inc
jns
jge
cmc
fistpl
jnp
push
cld
outsb
std
jbe
addr16
mov
fcmovb
shl
in
sub
std
adc
cmpl
repnz
in
adc
nop
outsl
fildll
pop
push
mov
out
test
mov
clc
out
leave
stc
sub
xchg
push
sbb
leave
dec
lcall
insb
out
xchg
sbb
lea
push
data16
imul
jne
mov
ss
or
fsubl
repnz
cmp
loope
ds
add
pop
push
pop
loop
loop
scas
push
cmc
add
shr
out
mov
nop
in
cmp
pop
rcrb
dec
sbb
push
pop
push
outsl
dec
cmp
add
sub
fidivs
popf
cmp
sub
int3
or
out
scas
inc
sti
fsts
dec
dec
mov
pop
jb
or
loopne
test
je
mov
mov
inc
add
jmp
hlt
pop
mov
bound
xorl
xchg
or
adc
scas
mov
pop
dec
imul
jnp
pop
xchg
fisubrl
jl
xchg
in
jno
ret
mov
sbb
inc
cltd
scas
stc
aam
mov
pop
pop
xor
mov
adc
sub
test
cs
mov
pop
std
xchg
ficomps
inc
mov
jmp
pop
add
std
and
fdivl
mov
adc
repnz
sbb
scas
es
mov
mov
hlt
mov
xor
jmp
sub
shlb
int3
mov
pop
jns
jae
mov
and
rclb
es
lahf
jns
stos
xchg
nop
sbb
outsb
roll
pop
mov
and
jl
xchg
mov
add
sbb
xchg
mov
icebp
adc
shrl
scas
dec
imul
dec
fstpl
fucomp
cs
xchg
aaa
gs
cmpsb
std
push
rcr
stc
icebp
fs
add
cmp
int3
aad
add
sbb
outsb
mov
mov
scas
or
dec
hlt
in
xor
mov
push
fidivs
aad
lea
or
pop
mov
fwait
mov
sbb
repz
jb
jle
pop
mov
rcrb
xchg
ljmp
sbb
jnp
lods
push
std
xchg
loopne
roll
jo
ffree
mov
or
dec
mov
sbb
add
movsb
test
jnp
or
or
nop
outsb
mov
ds
test
mov
dec
sub
scas
rcll
jp
fiaddl
shrl
fdivs
add
xchg
dec
mov
data16
mov
test
mov
imul
add
out
out
jo
imul
xor
and
add
and
cmp
jp
dec
push
stos
aam
fnstsw
sub
jno
pop
aas
cmc
loope
push
int
hlt
mov
lahf
xchg
push
aaa
negl
mov
or
jp
and
jbe
inc
repnz
repz
sahf
dec
fildll
pop
adc
inc
pushf
je
daa
jo
aaa
push
push
movsl
sahf
dec
adc
aad
jne
push
cmp
add
pop
in
bound
pop
dec
xor
push
lret
nop
loopne
cld
sahf
inc
push
test
push
bound
fildll
in
mull
sub
add
fildl
jne
andb
jecxz
popa
cmpsl
lahf
enter
mov
sub
jecxz
lret
xchg
aas
stos
loop
ret
addr16
sub
imul
lret
sub
test
adc
and
ret
inc
pop
stc
sub
dec
cmp
push
pop
test
in
sub
sbb
add
in
mov
add
xor
sub
incb
cs
push
jns
outsl
xchg
mov
or
add
sti
adc
xor
mov
ret
dec
add
imul
sub
aam
mov
jae
leave
pusha
ds
pop
adc
stos
xor
inc
jb
xchg
fs
repnz
mov
and
fiadds
mov
lret
jae
sub
inc
mov
inc
les
xor
pop
xchg
xlat
aad
mov
adc
jno
rclb
sbb
out
mov
scas
in
cmp
std
or
adc
cwtl
imul
lcall
cmc
cld
in
and
inc
fdivrl
sbb
and
gs
cmp
push
std
and
mov
ss
stc
lods
repz
push
imull
ja
xlat
inc
pop
out
gs
das
jecxz
push
xchg
xchg
imul
and
jns
sub
sbb
jge
adc
mov
sbb
push
stc
xor
aad
dec
add
jae
push
jb
fwait
xchg
sbb
in
fdivrs
mov
push
sbb
in
scas
cmp
jae
jp
and
cmp
xchg
mov
pop
rcrb
push
push
cmpl
sub
adc
popf
xor
add
insb
arpl
fisubrl
lea
and
sbb
aad
mov
rcll
pushf
cltd
or
inc
cli
pop
xor
inc
pop
adcl
jmp
aas
jge
mov
xchg
sub
lock
lahf
jecxz
sub
adcb
ret
aas
test
and
loopne
dec
shrb
add
add
pop
in
jp
push
lods
fimuls
movl
pushf
mov
mov
sarl
fisttpl
jbe
sahf
mov
dec
sbb
mov
jmp
add
jo
outsb
jmp
adc
aad
push
cli
popf
xchg
sbb
ror
decl
jo
aas
adc
repnz
dec
mov
es
push
sub
xchg
push
lret
mov
dec
sub
cwtl
jns
scas
inc
loopne
notl
out
jg
int
jo
ljmp
insl
std
inc
subl
lds
insl
leave
push
hlt
push
xor
and
dec
jge
lea
in
xchg
pop
mov
mov
ja
int
cmp
fsubrs
lret
in
pop
and
mov
lret
das
push
jbe
mov
aam
aas
jle
mov
lret
inc
inc
lcall
add
sahf
lret
test
dec
int
inc
movsl
nop
push
mov
popa
jo
pop
test
loopne
test
dec
xor
lock
push
dec
shrb
in
stc
cs
aas
sbb
fsubrl
xchg
fsubrs
mov
lods
int3
test
inc
sub
out
mov
dec
leave
sub
sub
mov
dec
xor
xor
out
jmp
jl
adc
sub
idiv
call
cmp
mov
push
scas
xchg
insl
imul
add
insb
mov
icebp
pop
imul
cmp
sub
jns
push
inc
xchg
inc
add
out
insl
add
out
mov
lahf
push
popa
xchg
dec
lret
lahf
cmpsl
mov
in
inc
adc
or
jo
xlat
cli
xor
xchg
psllw
pop
sub
mov
or
mov
cmp
xlat
sar
cmp
xor
test
int
imul
pushf
fdivs
add
jg
lds
push
fistpll
shlb
testb
push
pop
xor
loope
and
out
fcmovnb
in
scas
cmp
js
fcmovbe
adc
xchg
out
test
xchg
sub
addr16
inc
jno
and
sbb
xchg
mov
andb
lret
inc
pop
mov
xor
push
pushf
push
fcoml
out
push
test
or
incb
mov
add
test
or
ja
xchg
es
adc
cmp
sbb
test
jp
enter
call
push
repnz
jl
adc
pop
mov
imul
jbe
popf
jmp
inc
cmpsl
or
lods
call
mov
pop
cmp
cbtw
sbb
ss
adc
xor
push
cs
inc
xor
inc
clc
add
and
jg
roll
test
pusha
pop
push
jne
mov
ss
cmp
add
push
pop
and
lcall
pusha
mov
in
xor
shll
sbb
out
cltd
jne
mov
jmp
adc
lret
outsl
or
cmp
xchg
xorl
inc
cwtl
mov
pop
push
out
and
out
jns
adc
mov
jl
xchg
sub
push
inc
sub
les
call
not
lods
lds
xor
lcall
gs
xchg
mov
imul
push
mov
arpl
hlt
insl
push
and
cmp
dec
xchg
jae
sub
enter
ret
and
in
xchg
and
dec
xchg
xor
cmp
jl
xchg
aad
adc
inc
dec
lret
test
inc
mov
rcll
jne
lods
sub
jne
pusha
int3
xchg
inc
push
mov
xlat
dec
popf
retw
mov
cltd
cmp
imull
adc
xor
or
aad
lock
add
sub
lret
dec
pop
test
les
movsb
inc
or
xor
enter
jle
xchg
mov
mov
lds
push
and
cmp
push
out
pop
out
in
sbb
sarb
test
shll
or
dec
inc
outsb
int3
sbb
jge
lahf
in
push
out
adc
lahf
mov
mov
in
dec
dec
scas
dec
int
pop
adc
push
sub
scas
or
adc
push
pop
adc
or
mov
sbb
testl
jge
mov
aad
je
xor
dec
dec
sub
xchg
pop
add
sbb
xor
std
sub
jno
test
mov
ret
scas
inc
mov
mov
sbbb
ds
and
popa
fisttps
adc
mov
xchg
xor
cmp
push
fwait
mov
push
rcrl
push
lods
jae
sub
das
pop
pop
lahf
mov
mov
scas
jg
popf
xor
loope
mov
arpl
imul
cmpsl
mov
andb
stc
jecxz
inc
fwait
inc
mov
xchg
cmc
and
outsl
cmc
ds
out
cmc
cmp
cwtl
into
lea
pusha
pop
jl
out
sub
push
dec
mov
movsb
je
test
rcrb
sub
call
into
xchg
push
push
jb
xchg
add
push
xchg
shl
loopw
xchg
cld
int
and
xchg
lahf
pop
aam
xor
repz
xor
movsb
mov
pop
outsl
popa
and
ds
jns
mov
and
lods
mov
fsin
insb
pop
test
test
ljmp
pop
or
pop
scas
aas
repz
test
jmp
xchg
xchg
cmp
insb
push
inc
loopne
idivl
rorl
addr16
sbb
mov
jge
fcoms
repnz
pop
lret
jmp
arpl
xlat
in
or
jno
lods
xchg
in
fcmove
and
or
fwait
push
jl
jmp
outsl
testl
xchg
mov
popf
rep
cmp
icebp
enter
rcr
adc
adc
mov
xor
push
pop
add
push
loopne
adc
mov
xor
aad
mov
movsl
iret
sub
jb
sub
aas
mov
sub
mov
or
xchg
sub
push
sbb
movsb
popf
adc
pop
mov
dec
je
or
fisttps
bound
sbb
xchg
cmp
sub
mov
jecxz
rorb
and
cld
and
sub
adc
adc
insl
adc
rcll
test
mov
mov
scas
pop
stos
arpl
pop
cld
jae
sahf
arpl
fists
inc
mov
daa
jae
loop
out
fwait
push
insl
jbe
jns
mov
dec
mov
push
leave
dec
fldenv
xchg
stos
or
sub
add
push
sarb
jge
lock
dec
lods
sub
lds
pushf
sarb
xlat
sub
icebp
cmp
cmp
cltd
mov
push
add
dec
fstpt
cmpsl
mov
add
mov
clc
jl
in
push
and
sub
xor
xchg
rol
sbbl
js
movsb
mov
in
inc
cs
out
test
std
lods
push
in
test
ds
cmp
lods
add
lret
sbb
cmp
repnz
mov
in
js
lret
mov
fmuls
rol
and
repnz
and
outsb
push
mov
xchg
add
sbb
fidivrl
cmp
andnps
lods
rcll
sbb
rcll
sbb
movsl
mov
add
jo
mov
stos
push
fistl
shlb
mov
jbe
adc
lea
mov
data16
loope
mov
jmp
mov
pop
sbb
outsb
sub
or
insb
and
add
int
stc
outsl
inc
xor
sub
in
jb
aam
or
cli
bound
adc
sbb
ds
add
lcall
fisttpll
shrb
movzwl
std
aas
sbb
test
ljmp
std
or
jmp
pop
and
fs
cmp
outsl
xor
push
testb
test
xchg
sahf
jo
loope
pop
cmpsl
rclb
xor
or
dec
and
mov
cmp
adc
mov
outsb
xor
enter
mov
out
lea
js
int3
loopne
and
std
paddb
jns
nop
mov
sub
test
push
pop
xor
and
jmp
aam
ja
fildl
test
xchg
inc
push
jg
loop
adc
stc
setg
pop
pop
dec
push
popf
js
or
mov
and
sahf
cmp
mov
cltd
and
cli
orl
or
pop
stos
pop
mov
stos
arpl
pusha
in
fcom
xchg
dec
scas
mov
rcl
nop
dec
bt
lods
push
repz
cmpsl
lods
loop
push
jl
cmc
stos
xor
add
shrw
and
incl
sbb
jno
push
or
std
cmp
jmp
inc
imul
insb
and
dec
ja
xchg
sub
testb
sbb
nop
insl
push
fs
or
test
je
sub
cwtl
sti
ret
sub
sbb
mov
pop
incb
jbe
xchg
jne
mov
or
seta
lds
mov
pop
lock
xchg
in
leave
scas
and
sbb
xchg
adc
jmp
imul
mov
mov
inc
mov
in
filds
cltd
cmp
mov
in
idivl
sub
push
cmpsb
movsb
push
lods
jl
and
and
mov
cld
icebp
repz
nop
pop
scas
scas
jmp
xor
lock
arpl
inc
push
fbld
bound
push
ficompl
addr16
dec
int
test
xchg
cmpsl
adc
aam
add
push
mov
mov
lcall
pop
sub
pop
ds
cmp
in
scas
mov
inc
jecxz
dec
sub
lcall
xor
fwait
out
mov
sti
lret
sbb
repnz
test
mov
sub
mov
cmpsb
jae
or
push
pop
lret
pop
movsb
mov
lock
push
pop
sti
imul
add
popf
in
inc
mov
gs
xchg
pop
lcall
mov
insl
ret
xor
scas
andl
call
scas
mov
cmp
cmp
mov
scas
mov
inc
jg
js
out
xchg
das
xlat
xor
ljmp
cmp
sbb
push
inc
mov
mov
xor
imul
or
lods
pop
repz
sbb
jmp
mov
testb
fistps
or
fcompl
mov
icebp
adc
shl
scas
xor
push
test
int3
jmp
test
and
mov
int3
adc
cmpsb
cmpsl
aad
mov
inc
push
add
xor
fmulp
nop
out
sbb
dec
cmp
adc
or
inc
push
cmpsl
and
inc
pop
repnz
mov
punpckhdq
jae
cmp
loopne
or
insl
pop
sub
sbb
push
ja
lock
fildll
ret
movsb
pop
add
notl
or
push
cmp
and
or
add
adc
in
mov
sub
jp
push
stc
adc
test
stc
mov
jp
test
sub
std
int
xchg
aaa
cmp
and
fwait
pop
jmp
das
ret
adc
mov
out
cld
xchg
inc
mov
add
notl
ss
adc
jl
pop
mov
insl
loope
insb
pop
cltd
or
inc
and
push
xchg
and
mov
mov
stos
leave
add
popa
jecxz
sbb
test
jb
clc
sbb
out
cli
fstl
in
cli
pusha
add
mov
inc
jp
loopne
popf
sbb
mov
jno
mov
insl
dec
icebp
pop
push
das
daa
imul
xchg
cwtl
fisubs
adc
pop
mov
dec
adc
mov
pop
sti
ret
mov
push
ficoml
cmpsl
sub
fistps
leave
enter
jne
rolb
in
mov
mov
jo
inc
cmc
out
push
mov
add
jp
dec
fisubl
xor
fwait
mov
push
ds
sahf
and
xchg
jnp
ss
aas
repnz
jg
mov
stc
or
dec
sbb
jl
imull
test
dec
xor
in
sub
inc
add
inc
or
mov
xor
jae
sti
outsl
or
nop
jne
and
push
mov
jp
lcall
scas
mov
cmp
pop
push
andb
aam
xchg
sti
ljmp
pop
push
or
dec
std
loope
push
stc
jb
shlb
lahf
adc
push
sub
outsb
ds
push
pop
push
loope
sub
or
in
test
and
dec
dec
lods
and
adc
jne
mov
jge
mov
dec
stos
jo
scas
call
dec
mov
outsl
inc
out
jo
movsl
mov
movsb
mov
lock
subl
cli
mov
pop
cmp
fisubl
sub
pop
push
xchg
popa
mov
in
mov
jae
jle
adc
cmp
mov
cltd
int3
adc
dec
sar
pop
test
lds
xor
cwtl
repz
cmpb
add
and
sbb
repnz
inc
test
inc
cmp
mov
mov
std
sahf
jp
xchg
mov
inc
jnp
mov
xchg
aaa
xor
push
mov
rorb
ss
adcb
xor
jmp
sahf
add
xchg
sbb
pop
loope
cmp
lea
sub
rolb
cmp
push
scas
mov
jno
inc
pop
dec
popf
movsb
pop
mov
lods
lods
push
mov
mov
sub
popa
je
imulb
roll
dec
test
xchg
test
fsubp
lods
daa
mov
mov
inc
leave
and
aas
into
adc
sahf
jl
negb
sbb
cmp
xchg
add
xor
test
mov
cmp
xlat
fiadds
repnz
bound
in
jl
loope
vmwrite
and
es
aam
xchg
lds
mov
inc
add
js
or
scas
pop
loopne
xchg
mov
mov
push
push
push
xor
pop
inc
adc
sbb
mov
sub
and
movhps
xchg
push
enterw
call
add
or
lods
mov
cmc
stos
push
sahf
stos
adc
dec
lods
add
outsl
lock
mov
sub
pushf
aad
pusha
inc
inc
ds
mov
fucomi
and
jnp
jg
aam
stos
shl
jle
scas
aam
push
ljmp
mov
add
mov
push
mov
mov
testb
jmp
adc
lret
mov
loope
sbb
sub
sbb
xchg
or
les
cltd
fldt
add
shr
loop
loopne
add
shll
xchg
shrb
aam
mov
sub
outsb
or
repnz
mov
lock
popa
jno
rcll
xor
lods
inc
ja,pt
mov
insb
adc
sub
hlt
jle
sub
and
push
fldcw
ja
lcall
rcr
adc
not
pop
or
or
mov
movsl
nop
push
loop
outsl
test
xchg
loop
jecxz
cmpsb
daa
loopne
orb
dec
andb
mov
dec
xor
mov
sti
emms
loop
inc
sub
xchg
mov
inc
pusha
mov
cmp
std
mov
cs
adc
out
js
adc
pop
lods
dec
add
or
inc
inc
and
orl
cmp
sahf
cs
cltd
sbb
dec
sbb
mov
lods
sahf
fcoml
jnp
inc
or
mov
lcall
in
adc
loop
mov
sbb
ja
mov
out
outsl
xchg
addl
push
pop
insl
int
cmp
ss
mov
ljmp
xor
mov
push
inc
aad
outsl
pop
push
ror
enter
add
aas
pop
loop
jne
mov
icebp
aas
dec
pop
icebp
xor
or
push
js
rep
mov
ret
pop
pop
jmp
push
dec
and
mov
cmp
ret
mov
hlt
inc
push
or
sub
insl
inc
out
popa
aam
mov
daa
mov
lds
cmp
pop
jl
adc
arpl
cmp
cmp
loope
test
sub
stc
es
int
test
lock
pop
loop
push
clc
jo
pop
push
sbb
mov
dec
hlt
mov
xchg
mov
clc
inc
jb
mov
mov
mov
mov
mov
mov
mov
test
jnp
scas
movsb
mov
mov
fbstp
ret
pop
dec
orl
and
mov
xchg
adc
mov
loope
cmp
sbb
xchg
out
pop
aad
nop
jbe
mov
out
and
xchg
into
fwait
das
cltd
and
pop
mov
push
in
in
test
sarl
addr16
dec
lds
aad
add
leave
bound
repz
sub
add
aas
cwtl
shl
cltd
mov
pusha
dec
add
imul
mov
pop
dec
push
mov
idiv
pop
sbb
stc
push
push
sub
pop
fcoms
xchg
cmc
jbe
mov
addl
inc
in
in
and
loop
and
pop
fists
add
imul
sbb
or
jmp
rorl
pop
inc
dec
fdivl
mov
les
mov
repz
movsl
jb
leave
sbb
and
cmpsb
mov
mull
ret
mov
dec
adc
or
stc
inc
pusha
lcall
or
decb
inc
fdivrs
cmc
and
jne
outsb
sti
sub
pushf
rorl
cmp
sbb
add
nop
scas
pop
cmp
loope
adc
cmp
sbb
ret
xor
cld
xsha256
cmpsb
xchg
mov
mov
bound
sbbb
cmp
cs
imul
cmpsl
sbb
jno
or
push
sar
push
adc
mov
xchg
jns
lret
xchg
or
pop
adc
mov
rclb
adc
mov
and
push
fdivs
stc
addl
jmp
imul
add
mov
mov
lock
jecxz
sti
in
or
jecxz
cmovle
arpl
adcl
rclb
mov
movl
xor
xchg
jmp
jno
mov
fadds
mov
mov
mov
and
into
dec
dec
xor
sub
pop
fucom
fisubrs
sbb
mov
mov
outsl
cmp
mov
hlt
xlat
int3
sub
adc
inc
pop
mov
arpl
aad
mov
mov
testl
roll
ret
push
jmp
test
mov
bound
fistps
push
ret
dec
mov
xchg
cli
xlat
jo
fs
insl
stc
or
cmpsb
imul
push
mov
sub
fiaddl
mov
aad
mov
jg
je
mov
pop
cs
pop
aad
adc
jo
dec
clc
test
jo
movsb
test
cmp
mov
loop
jp
pop
adc
aas
and
inc
sbb
test
hlt
push
int
sbb
add
or
fdivr
inc
mov
pop
jle
fs
pusha
push
push
mov
cmp
mov
mov
adc
dec
fisttpll
xor
les
dec
fidivrs
push
lea
pusha
rolb
icebp
add
and
cld
pop
add
lock
inc
cmc
sub
fs
cli
push
or
sub
in
add
fucomi
icebp
arpl
faddl
inc
enter
pop
addl
dec
mov
xorb
popa
mov
sub
in
fdiv
sti
dec
test
outsl
sbb
dec
mov
jg
test
xchg
aad
fcomi
into
insl
mov
dec
mov
jmp
lock
leave
shrl
bound
sbb
dec
or
popa
lret
into
dec
movd
jne
das
pop
insl
push
mov
jecxz
or
jp
lea
lea
jl
sub
dec
push
loop
adc
loop
xor
sub
inc
out
js
sbb
push
divl
adc
test
lahf
fcom
push
sbb
out
xchg
bound
pushf
dec
fs
xchg
in
mov
rcll
call
cmpsb
cmp
cmpsl
movsb
and
mov
mov
cs
cmp
push
rolb
mov
or
bound
lahf
icebp
and
push
pcmpeqw
mov
mov
aam
pushf
and
fiaddl
and
ljmp
les
scas
out
cmp
jle
in
mov
cmpsl
pop
stos
mov
stos
test
aad
mov
imul
imul
or
sahf
shrl
out
pop
push
popf
push
cmpl
jnp
and
movl
nop
sub
and
cmp
data16
and
lahf
inc
dec
mov
mov
test
popf
inc
adc
loopne
sub
imul
sbbl
jp
inc
dec
ds
sub
add
out
out
popl
jg
shlb
jmp
jl
push
jns
pop
add
addr16
mov
cmpsl
mov
mov
sarl
inc
rorl
mov
xchg
jmp
lea
imul
inc
adc
jmp
mov
dec
mov
cmp
addr16
xor
mov
push
push
sbb
pop
mov
outsl
gs
stc
xor
jle
js
adc
orl
sub
jo
mov
jge
pop
test
add
and
sbb
jns
mov
sbb
stc
mov
cmp
cmpsl
sub
lret
mov
cmpsb
enter
mov
imul
cli
inc
movsl
sbb
sbb
dec
aaa
dec
mov
add
mov
adc
in
cld
sbb
insl
je
or
movsb
cmp
mov
popa
push
xor
rcrl
icebp
enter
cvtpi2ps
and
adc
mov
fs
dec
arpl
xor
out
push
dec
dec
or
inc
insb
iret
popa
sahf
push
mov
pop
cmpsl
or
icebp
or
sub
dec
or
push
lahf
std
js
push
insb
mov
jns
pop
int
repnz
cmp
pop
loope
cwtl
sahf
lret
jbe
push
popa
xor
mov
repnz
cld
mov
xchg
scas
lahf
fsubs
push
js
cmpsl
daa
fucomi
add
jb
push
mov
and
mov
dec
push
test
dec
gs
mov
xor
jp
ja
inc
pop
ja
pop
xchg
into
inc
sub
leave
mov
mov
dec
adc
xchg
pushf
cmp
rcrb
sti
popf
aad
insb
xchg
jp
dec
mov
or
cmpl
mov
mov
mov
pop
mov
cmp
lret
test
mov
jle
inc
dec
lock
sub
or
mov
xorb
or
test
popf
enter
pushf
add
aam
leave
call
sbb
cmc
mov
test
lods
fstl
ret
cmp
cmp
mov
pop
or
push
lahf
xor
ja
jg
push
movl
sub
fiadds
sub
cmp
gs
jbe
jle
stos
gs
adc
dec
inc
fisubrs
cmp
idiv
sti
jnp
movsl
orb
outsl
or
add
jns
xchg
or
xchg
cs
fldcw
dec
xchg
sbb
outsb
add
jmp
sub
sarl
leave
mov
imul
mov
push
cmp
call
adc
add
xor
or
sub
or
dec
xchg
jbe
push
or
orl
jae
dec
pop
push
je
push
dec
scas
dec
sub
add
dec
sahf
dec
int
fnsave
mov
adc
or
mov
push
outsl
andl
cmpsb
ss
imul
lock
adcb
repnz
mov
loop
mov
sbb
sub
push
inc
pop
fcmovbe
popf
push
cmp
cltd
in
mov
push
inc
test
mov
pop
testl
mov
jmp
dec
push
or
xchg
ds
dec
ljmp
xor
loopne
xor
repnz
mov
pop
push
cmp
sub
aad
jg
orl
xchg
sub
outsb
in
outsb
and
jno
xor
test
int
pop
sbb
mov
cmc
pop
add
pop
push
pop
xchg
cs
or
and
mov
andb
mov
aas
cwtl
mov
int3
inc
lcall
aad
inc
imul
rcrl
and
leave
out
jns
mov
lock
fcmove
mov
jmp
pop
or
push
data16
aam
adc
jge
out
xor
cmp
sbb
mov
dec
mov
insl
fwait
andb
mov
insl
into
mov
pop
pop
and
mov
out
pop
call
jbe
pop
jnp
mov
lcall
add
or
dec
loop
xorb
mov
mov
jnp
cmp
mov
scas
pop
sbb
iret
orb
mov
int3
lods
xchg
xlat
pop
js
test
fdivs
arpl
xor
jmp
in
clc
sub
jb
dec
xchg
test
add
and
inc
out
jp
leave
mov
popf
in
dec
aaa
adc
push
add
xor
lods
aaa
inc
and
js
jecxz
int
insl
sbb
or
pop
cld
cltd
cs
xchg
stc
nop
lods
pop
jmp
inc
sub
movsb
adc
inc
pop
push
repz
lret
cmp
sub
subl
mov
ret
stos
mov
jns
adc
lret
mov
jl
test
push
and
xor
jecxz
repz
pop
jecxz
dec
lahf
add
incb
cwtl
cmp
mov
dec
sub
adc
or
lock
lock
clc
subl
cmpb
fnstsw
push
push
pop
xor
dec
bound
mov
aas
cmp
sub
mov
mov
insb
jge
xor
stos
aad
loopne
push
mov
push
es
push
arpl
lods
push
mov
out
std
shlb
sbb
dec
aad
mov
out
cmc
lods
cmc
push
shl
fwait
cs
mov
jb
and
mov
ja
mov
cmp
jbe,pt
jmp
pop
push
xchg
ret
popf
nop
adc
xor
or
out
xor
dec
dec
push
loopne
inc
push
out
mov
decl
scas
sbb
push
loop
jo
jl
lock
jne
mov
xchg
and
or
mov
mov
call
sbb
xor
pusha
cmp
nop
sub
mov
int3
mov
lcall
jmp
lds
loop
pop
aas
inc
jno
aam
pop
je
test
and
jns
icebp
jbe
push
push
ficompl
cmc
ror
mov
nop
push
dec
and
xor
in
adc
lods
lods
jge
outsl
or
cmpsb
mov
sub
sub
dec
jnp
out
push
mul
cmpsl
cmp
sahf
xchg
arpl
push
push
push
fists
sbb
imul
call
cmc
nop
rcll
or
and
js
inc
inc
cmp
add
out
test
daa
push
jbe
hlt
and
cmp
sti
jge
mov
iret
orb
enter
gs
inc
sub
sbb
push
fistpl
ret
dec
xchg
rorl
cli
and
and
mov
pop
leave
dec
or
adc
out
add
and
nop
pop
loop
adc
movb
mov
stos
lret
xor
and
or
inc
adc
scas
adc
mov
add
mov
jbe
js
jns
sbb
imulb
ret
cmp
sbb
xchg
sti
js
negb
sarb
insb
in
jg
xor
inc
jns
shll
push
outsb
popf
add
stc
mov
arpl
or
bnd
dec
cmp
in
mov
push
stos
pushf
xchg
mov
pop
push
addl
or
aaa
rcrb
pop
pop
mov
mov
xadd
mov
add
dec
mov
adc
cmc
mov
and
mov
cmp
aaa
insb
pop
sub
adc
xchg
pop
jae
gs
inc
mov
pop
fwait
mov
enter
rorl
idivb
mov
jmp
call
les
les
hlt
out
in
movsb
fldl
mov
in
xor
xchg
and
xchg
outsb
add
add
aaa
xchg
orb
rcrb
push
or
jb
xchg
adc
repz
jno
adc
fcoms
xchg
dec
mov
inc
pop
js
and
xchg
cmp
xchg
or
sub
pop
ds
jbe
inc
fistpll
pop
ja
stos
xchg
filds
das
mov
add
sub
xchg
push
push
push
xchg
stos
mov
icebp
or
cmp
daa
sahf
cmpsb
loopne
leave
or
mov
cmp
dec
das
hlt
mov
pop
add
jae
adc
xor
dec
adcb
pushf
add
icebp
pop
insl
xor
mov
adc
push
jg
jns
pop
arpl
js
cltd
jmp
repz
shlb
daa
inc
popf
xchg
add
fists
jnp
outsl
mov
dec
insb
imul
xchg
push
out
subl
movsb
das
and
or
scas
ja
idivl
das
pop
scas
pushf
in
dec
jmp
dec
pop
pop
das
sbb
das
mov
push
sbb
dec
pop
je
cld
or
icebp
sbb
in
lock
sbbl
push
lret
and
sahf
mov
mov
popf
cmpsl
aam
out
sub
rolb
push
push
lret
dec
sub
xchg
bound
std
lea
decb
xor
in
pop
mov
mov
call
cmp
std
ds
sub
dec
mov
push
sbbl
inc
scas
ss
lahf
xor
mov
xor
dec
jne
daa
popa
cmpsl
iret
push
fmull
je
ret
mov
sub
dec
sar
dec
push
push
stos
cmp
jecxz
mov
outsl
cwtl
xor
out
cltd
cmc
lret
stc
je
pushf
icebp
jp
xor
xchg
jae
mov
jg
imul
fsts
xchg
xchg
lahf
out
jl
roll
je
ret
daa
test
das
sbb
cmp
inc
mov
ljmp
pop
sbbl
mov
pop
scas
xor
pop
lods
pop
ret
mov
xchg
cs
inc
lods
adc
xchg
jmp
aaa
les
in
mov
fdivrp
push
mov
xor
add
inc
lcall
mov
in
xor
mov
shl
test
and
psignw
jmp
add
fidivrl
sarb
cmpsb
xor
cmp
es
ss
sbb
xlat
hlt
andb
call
push
dec
popf
fs
cs
mov
dec
and
fs
enter
das
xchg
jno
stc
mov
ja
jecxz
clc
les
aaa
adc
cld
mov
mov
stc
xor
imul
out
jg
push
sbb
lcall
mov
push
push
adc
js
jno
adc
lret
pushf
aam
call
dec
push
imul
cli
ret
std
xchg
ja
xor
in
or
xchg
xor
mov
aas
xchg
dec
fwait
jecxz
sti
add
sti
and
sub
add
push
jns
xchg
mov
out
in
jmp
xchg
mov
iret
outsl
lock
mov
mov
gs
pusha
sub
test
decl
pop
mov
push
es
cli
pop
call
sub
cmc
sbb
popa
popa
mov
fnstsw
movsl
cli
dec
mov
das
xchg
fcmovne
scas
jns
scas
xor
mov
fs
lds
add
out
loope
movsb
jl
out
xchg
mov
jno
or
lret
mov
loop
jae
sub
es
sub
popa
jne
dec
sbb
and
xchg
mov
push
mov
mov
loope
sub
dec
clc
ds
mov
xchg
mov
push
sbb
sub
adc
dec
and
lcall
out
clc
pop
lcall
insb
pop
sbb
test
push
cs
add
pop
sbb
push
push
out
jmp
push
pop
mov
push
mov
inc
rorb
pop
sbb
mov
push
xor
repz
insl
push
or
xor
inc
int3
int3
jb
or
lock
sbb
sti
leave
push
in
push
mov
flds
ror
dec
inc
dec
stos
popf
or
pop
sub
jmp
dec
xchg
scas
in
push
loop
cmpsl
dec
outsl
add
xchg
mov
mov
jmp
sub
sub
sub
dec
ds
jb
sahf
into
add
addr16
add
shlb
dec
jae
outsb
xchg
inc
in
mov
sub
dec
sub
inc
and
mov
dec
fisubrl
outsl
mov
and
pop
mov
pop
test
pop
xchg
fsub
jae
pop
div
and
dec
pop
jle
inc
jne
or
popf
push
jmp
ret
push
inc
in
outsb
xor
sub
je
stc
jnp
repz
pop
jbe,pt
jge
rcll
adc
rolb
or
into
sub
cmpsl
inc
sbb
cmp
stos
sub
pop
adc
imul
jbe
bound
ja
xchg
jbe
mov
xor
pop
les
cmp
ljmp
pop
mov
adc
clts
lods
mov
testb
mov
punpckhdq
adc
push
mov
negl
shll
sbb
push
pusha
jecxz
mov
cmpsb
cli
adc
sbb
xchg
dec
ss
inc
inc
out
stos
ds
xchg
or
mov
mov
mov
leave
lea
mov
mov
lret
mov
pop
insl
pop
pop
cmc
arpl
icebp
es
addb
sbb
out
sbb
popa
movsb
mov
inc
lahf
mov
adc
jnp
in
pushf
enter
int3
mov
scas
cltd
sti
sbb
mov
pop
dec
ljmp
jmp
inc
scas
std
out
lock
outsb
xor
cmpsl
sub
cs
rclb
adc
sbb
dec
js,pn
repnz
xchg
loope
fld
inc
pop
ss
lock
bound
dec
arpl
jno
dec
jae
jne
das
mov
cmp
in
nop
bound
fadds
xchg
cli
outsl
pop
std
cwtl
ficomps
xchg
mov
inc
xchg
adcl
insb
fcomi
lea
mov
sti
jno
cmpsb
add
das
and
jp
clc
push
call
cwtl
outsb
fldl
repnz
add
jmp
jecxz
lret
jge
add
adc
fisttpl
fbld
dec
into
mov
aaa
aad
and
xchg
and
push
sub
mov
cmp
mov
pop
xor
xchg
shrb
adc
lcall
dec
or
xor
xlat
in
clc
xchg
push
shrl
bound
insb
repnz
mov
mov
sbb
pop
iret
mov
xlat
cmp
lcall
pop
pop
fstpl
add
mov
aam
sbb
sahf
dec
adc
inc
jmp
cmpsl
ret
jo
sub
mov
mov
sbb
dec
lds
cmc
cmp
push
and
xchg
mov
fildl
inc
mov
inc
cmpsl
xor
ret
movsl
ja
int3
or
lods
push
lea
in
and
dec
pusha
inc
cmp
cmp
push
and
sub
das
mov
and
adc
int
dec
mov
clc
pop
push
fmull
iret
sbb
imul
xchg
cltd
hlt
mov
and
sub
xor
dec
sub
sub
xor
inc
jle
push
scas
push
repnz
or
rclb
mov
ds
or
pop
loop
lock
sahf
jnp
mov
adcl
pop
pop
inc
add
jns
jle
sub
aam
shrl
sbb
add
ss
ret
sbb
mov
movsl
rolb
outsb
push
mov
cs
inc
jle
jnp
adc
js
in
aad
imul
xor
and
out
sub
fstps
pushf
sub
mov
pop
inc
rcl
orl
out
lcall
ds
add
into
xor
pop
call
jae
dec
pop
insl
scas
scas
adc
adc
fildl
xchg
inc
hlt
outsb
sub
push
push
mov
inc
mov
inc
das
and
mov
push
inc
popf
test
or
cmp
sahf
mov
pop
mov
fimuls
imul
sub
das
fsubr
movsl
mov
push
es
adc
aas
pop
pop
out
sbb
sarb
aad
outsb
ror
leave
lods
mov
jl
mov
sub
mov
add
ljmp
xlat
push
add
jae
pop
notl
decl
lds
push
push
and
roll
jo
cwtl
into
xchg
in
mov
add
fcom
pop
inc
insb
mov
outsb
cmp
divl
popa
mov
rclb
mov
aam
adc
mov
fnsave
jnp
push
lods
rcll
popa
cmc
xor
hlt
mov
std
rcll
sbb
lret
and
xchg
ja
fstl
inc
pop
jno
fs
es
mov
pop
jle
inc
pop
inc
dec
sbb
lea
sbb
cli
mov
sub
push
pop
jb
test
lcall
in
adc
mov
xchg
ret
cmp
dec
dec
pop
cmp
stc
sti
push
jbe
add
icebp
cmp
dec
fldl2t
insb
mov
jmp
sub
xor
sub
pop
push
stos
fdiv
je
aaa
mov
fcoms
or
ret
pop
out
adcb
jnp
lock
jnp
mov
cmp
adc
ljmp
addb
test
xor
mov
leave
scas
xor
aas
push
and
and
fcomps
cmpsb
call
push
adc
das
push
add
dec
pop
mov
data16
notb
xchg
sbb
dec
pop
xchg
mov
data16
or
stc
inc
iret
mov
nop
jle
jnp
push
or
out
movsb
xchg
xchg
mov
push
add
mov
inc
push
int3
jb
sahf
push
aam
push
jae
mov
mov
out
scas
cmc
nop
xor
sarl
xchg
jae
sbb
push
cmc
sbb
negb
cmpsl
adc
mov
int3
leave
jnp
ds
sbb
mov
adc
or
and
xchg
stc
dec
push
sti
ret
cmpb
or
push
lret
sbb
les
sub
or
cld
subl
orl
mov
aam
sub
pop
mov
hlt
ja
fldl
cmp
xchg
cmp
mov
mov
cmp
xchg
xchg
dec
mov
mov
and
mov
lods
dec
inc
popf
or
rorw
rcl
adc
mov
scas
cmp
fcmovu
jle
cmp
jnp
dec
mov
and
aaa
fildll
mov
fcmovne
cmc
iret
xor
popw
in
jge
ret
dec
mov
out
cmp
mov
jno
jmp
cli
cmc
mov
lods
shlb
xchg
pop
movsb
sbb
or
sbb
clc
addr16
jg
mov
mov
shll
xor
mov
xchg
mov
dec
adc
inc
xchg
les
xchg
push
jns
pop
pop
xor
leave
sbb
push
cmp
pushf
jge
dec
adc
aam
lahf
clc
pusha
mov
into
cmpsb
pop
orb
scas
inc
mov
int3
jb
push
jg
mov
xchg
cltd
in
gs
jae
jecxz
stc
dec
mov
outsl
add
das
adc
lods
jae
xchg
push
addl
push
or
mov
cli
sbb
adc
into
ret
push
lcall
push
pop
cmpsl
aam
test
repnz
fldenv
mov
fldl
insb
popa
or
gs
pop
enter
jnp
jle
popa
lret
dec
push
aam
mov
mov
es
imul
jecxz
cmp
flds
mov
pop
inc
mov
aad
insb
gs
hlt
addr16
mov
mov
rorl
cmpsl
scas
pusha
test
mov
jp
xchg
shlb
fs
xchg
loopne
lcall
pusha
cmc
les
dec
in
cltd
js
lahf
inc
jl
aad
js
jecxz
sahf
xchg
dec
or
fstps
out
inc
sub
sbb
lret
xchg
dec
lds
ficoms
sbb
sub
sub
xchg
aas
outsb
repnz
lock
pop
mov
or
mov
pop
mov
inc
lea
bswap
mov
push
div
pop
movsb
mov
cs
or
js
out
icebp
xor
inc
push
loop
testl
into
repz
adcb
popf
repnz
mov
bound
add
mov
mov
jb
insl
push
test
dec
in
pop
dec
push
push
mov
lds
add
fildl
lock
pop
add
mov
sbb
push
xor
arpl
fcomps
cmp
out
cmpl
clc
adc
mov
or
mov
mov
ds
jg
sahf
adc
add
cmp
out
jns
arpl
shrb
jp
pop
rorl
iret
or
mov
sbb
testb
cmc
call
pop
dec
inc
push
and
mov
sbb
push
cmp
sbb
ja
adc
inc
hlt
add
dec
out
xor
push
dec
mov
sub
push
jmp
xlat
icebp
fldcw
mov
adc
pop
test
jo
inc
stc
pop
stos
jne
lods
out
test
add
imul
mov
sub
mov
jg
leave
mov
cs
mov
cmpsb
ds
xchg
mov
sub
sbb
mov
mov
xor
bound
enter
or
repnz
jg
dec
or
imul
rclb
int
fcmovnbe
push
rcrl
and
add
xchg
add
sti
or
movsl
dec
xchg
push
pop
inc
hlt
mov
dec
sarb
dec
arpl
aas
xor
mov
mov
lahf
dec
inc
pop
hlt
xchg
xor
popf
xchg
add
insl
jge
fsubl
inc
mov
data16
aas
cmpsl
insb
xor
xchg
xor
das
test
sub
mov
ds
xchg
std
outsb
sahf
addr16
negb
js
lret
sbb
mov
pop
cld
gs
inc
and
pop
out
je
jg
xchg
sbb
lea
sti
push
ja
pushf
faddl
inc
ret
arpl
jae
test
jns
and
lcall
jl
xchg
sarl
add
aam
fs
jg
sub
mov
popa
cmp
pop
in
popa
test
push
repz
mov
cmp
inc
jl
rcll
lcall
push
sub
lahf
movsl
mov
push
mov
xchg
pop
sub
inc
pop
pop
pop
fs
sbb
fisttps
cmp
nop
jge
mov
es
mov
imulb
mov
jmp
ds
cs
dec
pop
pop
pop
lcall
pop
movsb
cmpsl
dec
lcall
rorb
into
xchg
xchg
dec
mov
movl
mov
jle
xor
mov
jbe
imul
push
rorb
dec
ss
ret
push
mov
mov
push
out
scas
mov
push
jae
and
pop
push
nop
test
mov
lahf
pop
xor
xor
sbb
nop
cmp
sti
ds
stos
pop
inc
jno
std
outsl
dec
mov
and
adc
add
popf
out
into
add
rorl
out
adc
in
iret
stos
push
cmpsl
sbb
mov
push
pop
cmp
cltd
xchg
cmp
mov
cmpsl
jns
stos
push
cmc
inc
mov
lods
imul
sbb
gs
int3
jne
and
jp
jmp
mov
inc
stc
push
xchg
test
loop
pop
sbb
ret
xor
pop
xchg
adc
jge
mov
adc
adc
adc
imul
pop
loop
movsb
loop
dec
jne
sbb
inc
lds
out
adc
jp
loope
insb
int3
lret
mov
mov
imul
loope
loope
bound
adc
xchg
adc
pop
jbe
cmp
test
ds
shll
aam
test
in
mov
mov
dec
test
push
jnp
xchg
mov
xor
std
and
loop
xchg
dec
sub
lahf
loope
jne
shrl
in
inc
adc
int3
mov
mov
adcl
shll
inc
and
push
in
add
inc
gs
pop
add
pop
or
xor
idivb
jge
ret
test
ss
fnstsw
jae
sbb
dec
inc
or
pusha
cmc
outsl
or
push
stos
dec
fistpll
dec
sub
jne
nop
fistpl
push
mulb
les
movsb
xor
dec
adc
dec
mov
pop
fwait
push
ss
fadd
jnp
cmp
movsl
cwtl
cmc
push
scas
leave
vmovss
subl
imul
mov
loope
mov
xchg
ds
popa
xor
jb
pop
sub
dec
out
xor
sub
imul
out
inc
into
lods
sarb
dec
push
or
dec
mov
jnp
testl
in
pop
ds
roll
leave
adc
dec
mov
jns
int3
inc
jae
fwait
test
daa
sub
pop
arpl
es
aam
pop
xor
mov
pop
in
shll
pushf
push
jo
or
xlat
dec
xor
rcrb
leave
push
daa
mov
in
mov
jle
daa
pop
fists
pop
and
loope
and
mov
jl
xchg
push
jmp
pop
or
out
sbb
sbb
scas
vmread
jl
pop
inc
push
out
push
mov
shr
push
loop
loope
push
imul
fistps
xchg
fidivl
mov
cmpsl
jnp
imul
dec
lea
dec
sahf
adc
outsb
add
fs
cmpsl
fidivrl
mov
xchg
aaa
pop
mov
fisttps
jp
pop
adc
bound
mov
cmpsb
and
mov
movsl
add
or
mov
lcall
addr16
dec
add
jl
jg
imul
xchg
inc
adc
xchg
push
rclb
mov
mov
pushf
inc
xchg
scas
pop
xchg
sub
jge
xlat
xchg
and
and
fdivrp
nop
jmp
subl
fimuls
js
gs
movsl
xor
mov
dec
popf
mov
jmp
cs
dec
in
add
add
pop
push
mov
lds
push
add
outsb
sub
push
stos
or
stc
pusha
aaa
cmp
arpl
jle
out
std
imull
mov
jl
adc
mov
fsubr
push
or
sbb
sbb
aad
divl
mov
daa
and
test
pop
jl
mov
mov
xchg
xor
xor
xor
inc
nop
mov
lods
ss
mov
incl
gs
adc
stc
out
fisubs
cmp
mov
mov
mov
sbb
mov
inc
nop
adc
and
rolb
mov
repnz
xor
cmp
lea
imul
xor
dec
sub
rcll
shl
setbe
inc
popa
sub
dec
imul
cmp
sub
ss
fisubs
jmp
lods
int3
lcall
sbb
mov
cli
mov
mov
rol
in
arpl
int3
fstp
rorb
pop
stc
sbb
xrelease
adc
cwtl
add
ret
jmp
push
jb
add
and
bound
adc
xchg
mov
jecxz
fsubr
loop
push
arpl
mov
ret
mov
mov
inc
sbb
sti
imul
and
pop
daa
cmc
test
loope
sub
gs
test
mov
dec
pop
in
mov
cld
mov
dec
fiaddl
loop
jecxz
jb
aad
shll
int
mov
push
add
pop
les
decl
lods
mov
cmp
xchg
add
ja
add
dec
fnstsw
pop
stc
and
pop
lahf
es
add
mov
inc
sbb
je
adc
std
addb
xchg
pushf
ljmp
jae
cmp
aad
fdivs
xchg
xchg
sbb
push
ljmp
shrl
push
adc
jbe
push
fcmovnb
and
jp
mov
les
jb
stos
xorb
insb
mov
out
mov
std
mov
xchg
or
jnp
dec
inc
lcall
mov
dec
mov
mov
notl
jns
jnp
ja
daa
call
jno
mov
mov
insl
fldcw
and
sub
in
hlt
lret
lods
xorl
xlat
pop
in
adc
loopne
jnp
push
adc
sub
mov
pop
into
and
out
sbb
pop
dec
xor
jl
icebp
js
adc
scas
inc
sub
and
movsb
cmp
jnp
fadds
jmp
xchg
mov
adc
inc
xor
pop
or
jle
jge
insl
xlat
cmpsb
jbe
rolb
pop
pop
lea
and
push
mov
aaa
xlat
es
jmp
fidivs
cwtl
sbb
sbb
loopne
push
or
sbb
jns
shrb
sbb
push
add
arpl
shl
jge
jae
cld
adc
mov
mov
int
shl
cmp
sub
mov
pop
leave
dec
test
xchg
fiadds
insb
lcall
sar
xor
stc
inc
cs
sub
add
in
ret
ss
mov
or
pop
push
clc
jns
rcrb
lods
xor
mov
movsl
loope
pop
sub
cmp
xchg
addr16
add
inc
testl
ljmp
cltd
clc
jg
ret
or
pop
cmp
dec
sbb
adc
or
or
jbe
addr16
fs
and
pop
arpl
orl
push
xchg
jne
ljmp
push
push
enter
push
xor
mov
sti
pop
jae
ja
imull
frstor
pop
sbb
mov
andb
cwtl
pushf
xchg
xor
lods
pop
jg
rcrb
fldt
inc
or
fists
stos
iret
out
xor
jp
mov
mov
jb
in
mov
pop
pop
imul
lods
shll
fdivrp
mov
sub
lahf
xor
pop
je
aas
adc
cmp
cs
pop
movntps
push
test
mov
sbbl
out
push
mov
das
imul
pop
xlat
imulb
add
pop
inc
idivb
bndldx
mov
pusha
les
jo
fsubl
mov
popa
ret
or
out
test
clc
lea
icebp
hlt
icebp
jne
cmpsb
scas
out
js
push
cmpb
inc
sub
inc
mov
or
pop
repnz
xchg
cmp
sbb
sbb
icebp
vshufps
jp
dec
pop
and
movsl
or
test
jmp
dec
mov
ja
je
xchg
add
call
fs
pop
and
cmpl
mov
lods
mov
pop
mov
push
test
add
mov
pop
aam
cltd
into
inc
mov
xchg
pop
loope
pushf
or
jmp
cli
stc
insb
xchg
pop
jae
adc
mov
cs
pop
mov
std
or
mov
divb
mov
push
btr
ret
leave
sub
jb
fldcw
lahf
ret
adc
sbb
aad
dec
cmpsl
mov
lods
adc
jl
lds
fcomi
jg
imul
aaa
movsb
iret
xor
repz
es
push
jmp
loop
je
sbb
outsb
mov
push
inc
cmp
pop
test
sbb
inc
enter
data16
dec
clc
push
jne
in
jae
sbbb
pop
mull
sbb
jno
cmpl
xlat
adc
loop
jno
int3
jg
xor
pop
adc
adc
push
out
and
push
cld
xor
pop
mov
cmp
cmp
jb
out
push
xchg
sub
mov
sbb
push
adc
pop
xchg
mov
jo
pop
cmp
push
pop
and
cld
or
and
fwait
imul
push
bound
shlb
sbb
mov
lea
sbb
leave
pop
add
daa
rep
stos
ss
fiadds
push
ja
in
and
mov
jl
jae
psubw
ljmp
das
mov
mov
lret
jge
and
std
add
pushf
orl
loope
or
push
jnp
adc
inc
push
fisubl
fisubs
mov
jg
sbb
mov
add
fwait
inc
mov
push
nop
icebp
sub
pop
or
push
or
cwtl
fwait
cmp
sbbb
lea
cmp
push
pop
sbb
lods
adc
jle
jp
push
jl
mov
dec
mov
outsl
rclb
testb
clc
aas
notb
fcmovu
mov
gs
pop
jg
mov
clc
jae
daa
dec
add
xor
xor
jb
lret
stc
and
inc
or
add
cmp
mov
pop
push
lods
int3
xor
imul
xor
jae
cs
push
pop
sbb
es
cmp
jecxz
fsubrl
mov
dec
pop
dec
dec
or
stc
imul
adc
insl
mov
ret
rcrl
pushf
sahf
fs
or
pushf
push
sbb
mov
dec
decl
add
ss
jbe
add
push
test
mov
sbb
or
push
pop
xor
fiadds
push
mov
fwait
jno
dec
dec
and
lea
bound
sub
pop
rcll
xchg
xchg
dec
inc
jb
push
je
mov
cmp
sti
lret
add
ret
xchg
scas
into
push
pop
add
mov
jns
loopne
shl
xlat
mov
popl
in
ficoml
movsl
sub
push
cs
dec
dec
movsb
addb
xchg
xchg
mov
stos
addr16
mov
mov
fidivrl
fidivrs
in
ret
lock
mov
sub
lret
aaa
push
jp
or
cmp
add
fcmovb
inc
repz
push
xchg
rcll
pop
add
scas
dec
lret
sbb
inc
dec
js
jmp
cmp
mov
ja
sbb
sbb
mov
hlt
outsl
lcall
fidivs
fsubl
dec
sub
aam
ficoml
xchg
int3
test
int3
leave
and
lods
push
das
add
fs
in
xor
sub
scas
das
push
dec
out
push
adc
cwtl
xchg
cmc
jge
test
mov
jp
sbb
dec
fidivl
fiaddl
inc
jle
jno
push
push
sub
ret
xchg
out
mov
shrl
inc
pop
adc
arpl
adc
ja
int
sbb
mov
mov
mov
orb
push
and
shrl
lods
mov
mov
push
or
decl
xor
push
out
or
mov
mov
cwtl
pusha
imulb
sahf
and
sbb
js
iret
push
bound
mov
les
adc
xchg
add
imul
and
mov
pop
sbb
inc
loop
add
ljmp
loop
or
mov
lcall
fidivrs
mov
or
mov
cwtl
inc
popa
lds
fwait
test
add
test
das
push
xor
pusha
fistpl
test
test
ljmp
sarl
inc
sub
in
push
jae
ja
in
dec
cvtps2pi
cmp
xor
cltd
add
std
test
mov
mov
out
fwait
sbb
lret
dec
mov
loope
lret
movsb
push
bound
add
jb
pop
movsl
cmp
sub
jnp
push
into
leave
outsb
dec
mov
test
sbb
mov
adc
aas
aad
insl
xor
aam
inc
and
cmp
sti
cmc
repnz
sbb
adc
mov
fisubs
inc
in
outsb
sub
mov
push
enter
mov
mov
insl
inc
xchg
jbe
jnp
push
scas
aam
xchg
hlt
mov
test
nop
dec
jp
movsl
aad
xchg
test
cmp
add
push
push
ljmp
and
push
clc
jmp
ja
mov
push
ja
xorl
pop
shr
dec
xchg
pusha
pop
leave
xchg
inc
pop
aas
jl
inc
mov
push
jecxz
jns
loop
inc
rolb
nop
jle
leave
hlt
mov
pop
cmpsb
pop
stc
inc
inc
ret
jecxz
shlb
add
push
das
outsb
jp
in
out
xor
or
outsb
sub
sbb
mov
cmp
sub
imul
xor
jae
lret
pop
gs
fldt
pop
mov
sub
sahf
pop
jne
push
lods
jmp
mov
das
fwait
aas
inc
fdivp
pop
int3
in
div
xor
dec
insb
aas
stos
push
add
dec
test
in
fldenv
dec
les
adc
stc
pop
sbb
add
push
or
or
push
out
mov
and
subb
mov
ss
out
mov
xchg
addr16
fs
aaa
mov
xchg
xor
push
into
fists
mov
negl
mov
push
sti
adc
sbb
push
sbb
jno
cmp
pushf
in
mov
insl
inc
iret
orl
cwtl
inc
cmp
cmpps
lret
sbb
mov
mov
add
gs
push
or
ds
and
push
ja
cld
adc
sahf
ds
sub
cltd
and
lds
popf
and
sti
orl
sub
aam
cmp
pause
adc
pop
idivl
movsl
xchg
nop
lret
leave
and
and
std
lret
mov
lret
inc
repz
outsb
sbb
dec
cmp
or
enter
cmp
out
push
mov
fimull
shll
push
scas
jae
imul
add
movsl
lret
cmp
push
dec
out
lcall
ret
lock
and
lahf
pop
adc
adc
xchg
test
insl
cld
jmp
lahf
mov
adc
pushf
lds
lcall
mov
pop
jp
sub
sbb
out
sbb
daa
jmp
mov
imul
sub
mov
scas
cmc
xor
pop
ljmp
bound
outsb
cmp
bound
pushf
loope
cs
adc
cmp
ret
push
jmp
mov
cmp
inc
inc
or
adcb
adc
inc
push
aam
and
sarb
xor
imul
cli
or
adc
sbb
data16
xor
out
dec
cmp
pop
aaa
add
dec
filds
stos
mov
jge
testl
cwtl
cmpl
dec
repnz
popf
add
add
push
or
ja
shrl
pop
nop
fadds
fbstp
fstps
and
cltd
mov
lret
rcl
scas
out
dec
gs
jne
sbb
pop
adc
dec
stc
push
or
add
dec
dec
or
jne
aad
push
les
cmpsl
int
inc
bound
or
mov
sub
sbb
lock
mov
insl
fdivs
bound
cmpb
into
jecxz
mulb
pop
xor
and
es
js
xor
or
rcr
stos
js
out
bound
mov
or
fidivs
jnp
mov
lret
adc
daa
mov
icebp
out
cmp
lret
aam
xchg
push
out
xor
rdpmc
fdivrl
lahf
and
sti
push
xor
mov
jmp
aaa
in
push
jno
jnp
lret
insb
push
ja
pshufw
in
aam
scas
sbb
test
std
mov
mov
ja
test
in
cmp
xchg
jmp
sbb
push
xorl
out
mov
bound
enter
loop
mov
movsb
sub
inc
pop
xchg
pop
ljmp
test
fcom
jmp
sub
clc
sbb
mov
mov
add
test
jge
fstps
mov
test
shr
rolb
arpl
stos
sbb
cwtl
push
cmpsl
push
jl
icebp
data16
mov
out
movsb
push
addb
mov
push
rcrb
sub
orps
mov
xor
data16
push
jecxz
add
cmp
pop
cmpb
daa
movsb
hlt
sub
shr
jae
jb
lds
popa
mov
arpl
loop
add
inc
push
scas
xchg
call
aam
test
push
add
sbb
sbb
pop
push
fdivrs
cld
sti
inc
xor
lcall
fisubl
dec
cmc
xchg
cld
sub
aad
push
icebp
and
outsb
xor
loop
mov
xchg
mov
test
cld
dec
data16
addr16
divb
out
jno
cs
mov
leave
jge
push
pop
mov
aaa
ss
push
mov
pushf
adc
lcall
loopne
stc
das
cmpsl
iret
cmp
sbb
sahf
pop
std
mov
jo
inc
insl
xchg
mov
mov
ja
jo
mov
dec
jbe
mov
lock
sub
les
or
jne
fdivrs
subl
cmpsl
sbb
mov
cwtl
imul
xchg
and
push
dec
std
lea
in
sub
push
adc
fdivrs
cmpl
cmp
movsl
sub
insb
test
push
lods
insb
adc
sub
sbb
sbb
shrl
push
dec
cmp
sub
inc
daa
pop
mov
decb
xchg
aaa
scas
mov
push
scas
cmc
mov
or
andb
leave
addb
and
jb
rolb
rolb
mov
lcall
inc
popl
icebp
imul
push
cmp
mov
mov
adc
out
and
iret
or
cmp
sbb
xchg
jnp
jmp
movsl
sbb
das
out
sbb
iret
adc
cmp
sub
je
pusha
cmp
jae
in
lods
sub
out
jmp
jns
mov
lock
inc
sub
pop
cmp
lret
fldl
inc
cmp
push
jle
mov
jno
inc
insb
rcrl
or
mov
inc
push
or
das
in
into
in
enter
out
cli
in
push
xchg
and
test
ds
pop
jge
aas
push
mov
adc
push
lods
sub
test
push
fildll
push
mov
xchg
imul
adc
jo
fnstsw
inc
cmp
xlat
pop
or
sbb
cs
rorb
icebp
popa
movsl
add
sbb
rol
and
jae
lcall
lahf
iret
push
test
xor
push
lret
mov
in
cmc
lock
xchg
ss
jecxz
sub
push
lods
ljmp
jle
mov
popw
xchg
sub
jae,pt
xchg
lret
stos
pushf
push
mov
xlat
push
sub
out
xorl
lahf
sbb
out
jl
push
inc
pop
cs
jb
mov
pop
dec
filds
int3
inc
inc
incl
popa
lahf
push
dec
out
cmp
test
es
mov
lret
jmp
sbb
and
mov
lods
jl
inc
int3
dec
inc
xor
lret
xchg
mov
add
fwait
movsb
loope
out
mov
stc
popa
enter
out
jb
insb
cmp
mov
add
mov
cmpsl
xor
sbb
ss
dec
pop
sub
jae
and
xor
push
gs
or
jg
add
pop
dec
xchg
outsb
fs
pop
imul
sbbb
add
stc
or
sbb
push
inc
jg
or
stc
int3
or
ljmp
cmpsl
push
push
in
pop
inc
pop
jne
iret
and
and
xchg
cmp
add
sbb
inc
or
pop
fbstp
xor
imul
jl
xchg
addr16
fistl
xchg
dec
cmp
pop
inc
in
lea
pop
xchg
adc
jge
or
and
mov
inc
data16
popa
repnz
push
pop
dec
inc
pop
jmp
clc
sub
sub
cmp
push
stc
pop
adc
xlat
push
lds
fcoml
rcrb
push
test
inc
mov
mov
xchg
cmp
addr16
cmp
mov
cltd
or
add
shrl
cmp
js
xchg
add
add
in
mov
jne
daa
aad
jnp
clc
cmovs
inc
imul
sbb
xchg
sub
push
bnd
icebp
insb
jle
inc
les
inc
and
pop
adc
dec
pop
inc
js
xchg
mull
xchg
jp
mov
rolb
jbe
pop
pop
dec
test
in
or
aaa
push
rorl
mov
ss
jle
call
sbb
adc
xchg
loope
lods
ret
dec
xchg
in
jb
and
mov
xchg
rcrl
icebp
cmp
xor
stc
lods
cmp
fxch
hlt
xorl
mov
fcompl
and
pop
adc
repz
loopnew
imulb
mov
or
mov
jmp
or
mov
adc
push
testl
test
mov
cmp
or
cmp
dec
dec
push
sub
sub
imul
dec
test
mov
cltd
dec
xchg
inc
add
sub
sbb
out
mov
pop
adcl
into
xchg
and
ja
mov
outsl
and
lds
ljmp
int3
fcmovbe
fistpll
decl
cltd
and
das
fisubrs
imul
jge
outsb
push
mov
lods
insb
xor
insl
loope
inc
cwtl
js
repnz
sub
lods
mov
sbb
movsb
xchg
cmp
sub
fistpl
fmuls
cmp
inc
cmp
lcall
sbb
je
add
inc
jmp
xor
lods
sub
cmpsl
mov
xor
xor
jne
xchg
mov
stos
mov
fstl
fistpl
ret
inc
sbb
pop
test
sub
repz
inc
mov
in
cmpb
or
add
out
sub
add
xor
rcrl
inc
aam
cmp
fisttpll
cltd
sub
lods
aad
xchg
in
in
cmp
xor
sbb
xor
aas
sbb
mov
out
out
shrl
cmpsl
and
push
std
inc
popf
fsub
test
adc
daa
int3
push
xchg
mov
cmp
cmpsl
clc
aad
enter
inc
mov
subl
mov
xor
lcall
dec
sbb
mov
add
mov
popf
dec
xchg
lea
ret
xchg
xchg
xchg
and
mov
iret
call
imul
mov
mov
decb
xchg
hlt
inc
pop
jmp
fimuls
push
repnz
xchg
daa
lahf
mov
std
call
or
lock
lock
sub
mov
psubw
add
cmp
in
mov
or
outsb
out
adc
adc
jo
sub
les
insl
ja
lcall
scas
cmp
inc
pop
xor
adcb
subb
push
shlb
pop
aad
jle
mov
addr16
std
mov
jl
scas
push
or
inc
or
push
lret
push
popf
mov
xchg
repnz
push
dec
fsts
cmp
std
jp
aad
pusha
sahf
xor
dec
ret
test
cmp
mov
in
pop
push
and
sar
aas
rolb
clc
movsl
call
dec
test
sarl
punpcklbw
int
cmpb
hlt
fwait
jle
cmp
fdivrs
sbb
lds
push
pop
cs
mov
lcall
cmpsb
mov
test
push
dec
lds
mov
adc
cmp
jns
hlt
sbb
cmpsb
loop
dec
das
mov
pop
sbb
jp
repnz
aas
mov
popa
or
icebp
mov
xor
mov
jp
pop
enter
loopne
xchg
mov
dec
inc
fcmove
mov
daa
xchg
inc
in
push
xor
lret
lea
dec
push
mov
and
inc
cmp
stos
repz
js
aad
pop
scas
pop
push
mov
and
push
mov
repnz
jo
dec
cmpsb
sub
cmp
dec
lahf
rorl
add
in
movl
cmp
mov
stos
in
roll
inc
lret
add
loop
and
xor
and
jge
out
icebp
popa
adc
pop
clc
push
add
cmpsl
sub
pop
ss
jl
nop
cmp
jb
sbb
push
add
sbb
loopne
icebp
popf
xchg
add
into
push
lret
xor
cltd
enter
loope
cmp
enter
xchg
int
mov
mov
out
sbbb
jl
xor
sbb
mov
outsb
sarl
stos
loope
mov
mov
jns
insb
mov
aaa
pop
call
sbb
inc
mov
and
mov
gs
pop
pop
and
out
rcrb
push
jle
push
push
xchg
mov
jnp
sbb
negb
scas
push
cwtl
lods
repnz
mov
ds
data16
sub
inc
lahf
push
xor
xchg
add
scas
mov
enter
addr16
mov
movsl
mov
push
mov
jge
and
ljmp
jo
push
jnp
fisubrs
scas
mov
out
nop
mov
or
cli
lds
cmc
out
fldcw
cmp
jg,pt
data16
mov
sub
inc
lret
std
cmp
and
xor
push
mov
xlat
lods
incl
mov
andl
negl
dec
pop
mov
mov
in
mov
call
lcall
cmpsb
sbbb
xchg
loopne
add
loop
into
bound
arpl
mov
jg
int3
imul
test
xchg
sub
ret
add
icebp
sbb
mov
out
pop
xor
xor
imul
pop
push
cmp
push
jbe
and
mov
int3
push
jno
xchg
or
and
test
movsl
aaa
mov
inc
sub
push
sub
aaa
int
or
fnstenv
icebp
mov
mov
mov
sbbl
aam
xor
mov
dec
mov
sub
pop
mov
stos
xchg
dec
xor
mov
mov
jo
test
sbb
aaa
pop
inc
lret
mov
or
sub
stos
adc
adc
or
ss
sarl
lcall
inc
fidivrs
outsb
mov
pop
popa
sti
ljmp
in
sub
or
xor
push
movsl
lods
pop
ret
out
fwait
js
sub
lock
mov
int3
lods
loopne
les
add
pop
in
lods
das
rep
push
cltd
into
ficoms
push
mov
cld
jmp
mov
fwait
leave
jge
mov
jmp
adc
je
cmc
xor
jle
mov
xchg
leave
jmp
test
in
pop
pop
and
mov
cmp
jne
daa
lahf
pop
fiaddl
ss
pop
outsl
or
sub
pop
xchg
mov
mov
mov
test
scas
sbb
dec
push
aaa
call
stos
add
dec
nop
cmp
mov
mov
mov
mov
repz
subb
shlb
mov
mov
div
sahf
mov
xor
addb
rep
shrb
fdivrs
add
in
out
xchg
pop
fstpt
inc
push
imul
insb
add
test
test
imull
mov
cmp
add
xlat
jns
in
mov
insl
call
pop
loopne
mov
push
pusha
andb
adcl
inc
gs
mov
fwait
scas
pop
mov
or
icebp
push
insb
mov
fidivs
test
pop
cli
addb
dec
lds
jp
push
inc
je
xchg
pop
cltd
push
mov
cmpsb
mov
fists
mov
test
xchg
jg
mov
inc
sub
enter
mov
mov
sbb
movsb
cmpsb
mov
repnz
leave
sbb
subb
inc
iret
insb
mov
cs
push
scas
and
pushf
insb
in
das
lahf
jecxz
cmpsl
jae
pop
xchg
aaa
cli
cmp
mov
push
push
pop
xchg
out
fs
jae
inc
push
daa
iret
test
or
aas
adcb
scas
jle
pop
push
add
gs
out
pop
mov
js
testb
test
jecxz
and
lock
ror
repnz
add
cmp
popa
pop
inc
movsl
or
cmc
cmpsb
enter
jb
dec
aas
dec
push
mov
and
jae
mov
mov
mov
pushf
mov
xor
lret
xchg
adc
sub
mov
xchg
push
jp
push
push
stos
push
dec
push
sarl
dec
mov
hlt
xchg
fldt
leave
mov
subl
daa
scas
rclb
popf
mov
push
push
leave
sub
sbb
aad
call
lcall
cwtl
push
icebp
stc
cwtl
xchg
adc
or
mov
scas
fnstcw
push
dec
mov
mov
jns
push
ret
jl
jecxz
or
fwait
rorl
scas
push
mov
xor
sub
test
cmp
cmp
loopne
mov
ret
sub
stos
test
push
jns
sbb
test
xlat
xor
adc
pop
insb
std
test
test
std
pop
push
jns
ds
jbe
push
mov
divb
mov
cmpsb
cmpsb
sbb
movsl
xchg
loopne
lret
xchg
outsb
jl
and
mov
inc
movsl
test
cmp
in
in
sbbb
mov
xchg
xchg
push
push
fstpl
fstpl
xor
gs
xchg
in
fwait
adc
addr16
in
imul
shll
or
shlb
add
xchg
mov
js
fdecstp
mov
arpl
push
out
pop
push
xchg
test
mov
xor
shlb
or
ja
sahf
mov
mov
cmp
xor
inc
sub
push
loopne
clc
ja
xor
adc
stc
orb
punpcklwd
lcall
daa
fwait
push
add
arpl
push
cld
mov
aam
in
sub
in
mov
out
mov
fwait
mov
push
pop
mov
scas
pop
dec
ror
or
call
push
decb
lcall
push
je
fimuls
push
cmpsl
xor
jnp
add
lea
je
push
jecxz
adc
repnz
scas
jge
bound
icebp
int
push
orl
xchg
xchg
xchg
jns
cs
sahf
adc
scas
push
or
pop
test
inc
pop
sub
inc
stc
mov
cwtl
xchg
dec
dec
pop
vpcmpeqd
daa
stos
or
inc
stc
das
int3
xchg
in
test
push
fdivrl
out
push
loopne
out
mov
loop
scas
imul
xchg
rorl
jmp
call
inc
mov
enter
jae
xchg
add
das
hlt
push
out
inc
insl
flds
subb
insb
test
js
jbe
xchg
rclb
push
add
sbb
sub
jg
sub
mov
fstpl
mov
pop
xor
add
rcrl
inc
cmp
pop
mov
cmp
rol
and
insb
fiadds
repz
rclb
mov
and
cmpsb
inc
test
xchg
in
xchg
out
dec
ss
cli
cs
aad
jge
leave
xlat
add
es
mov
mov
lods
mov
lret
mov
fists
popa
sti
push
iret
movsb
cmc
jno
aaa
xchg
push
test
aas
dec
cli
ss
ret
and
adcl
jp
lcall
xlat
pushf
loope
loopne
iret
fistpll
sub
sahf
es
insb
fcompl
cmpsl
dec
lods
shrd
push
mov
jl
sbb
js
lret
or
shll
sub
pop
xchg
cmp
jp
lret
xor
int
push
cwtl
stos
aas
imul
lods
xchg
xchg
dec
out
ja
sbb
xor
pop
add
arpl
in
lret
mov
mov
out
mov
and
dec
or
push
and
jb
flds
out
test
fwait
sub
cltd
movsl
mov
or
cmp
xchg
cmp
and
iret
mov
push
mov
rol
xor
pop
jo
jle
lcall
pop
mov
push
mov
ss
jg
dec
xlat
rcl
adcb
out
cmp
lea
cmpl
jecxz
xor
fidivs
mov
cltd
add
jno
out
jae
add
and
test
sbb
xor
das
push
flds
dec
mov
dec
pushf
mov
sub
cmpsl
call
dec
push
cld
and
insb
push
fldl
dec
pop
mov
adc
sbb
imul
in
mov
add
not
mov
leave
pop
clc
inc
xor
setle
lods
jno
cmp
push
int3
int
dec
add
sub
std
jo
jmp
shlb
in
xchg
mov
push
push
adc
fwait
push
jne
pop
push
test
outsb
ljmp
test
std
jecxz
xor
mov
sbb
out
jb
push
mov
xchg
adc
stos
xor
in
daa
cmp
iret
mov
mov
insb
lods
mov
cli
imul
dec
jle
sbb
sub
faddl
pushf
loope
les
xchg
ret
jge
fwait
pop
cmp
cmp
lea
lcall
scas
add
xchg
pop
jb
mov
movsl
mov
xor
pushf
mov
mov
mov
popf
push
popa
and
repnz
shr
or
lds
xchg
mov
sar
rorl
cmpsl
pop
mov
lret
scas
sbb
mov
inc
movsl
pop
out
push
stos
fs
push
xchg
andl
scas
aam
jns
cmp
ljmp
jmp
or
movsl
lods
cli
int3
mov
scas
ret
in
dec
repz
jmp
fs
jae
fsub
lods
aas
or
lds
mov
xchg
sbb
sahf
loop
loope
lret
mov
in
pushf
xchg
or
xchg
scas
sbbl
ret
in
cli
test
xchg
mov
call
ret
movsl
pop
ds
rorb
mov
mov
jo
rorb
and
rorb
push
fldcw
out
add
cld
xchg
repz
xchg
imul
cmp
adc
mov
stos
out
out
sub
movsb
fsub
pmullw
mov
sub
sbb
sbb
outsl
push
pusha
stos
popa
ss
lea
cltd
xchg
adc
pop
push
xchg
bound
xchg
jbe
int3
and
adc
adc
rol
mov
adc
rolb
in
jae
jae
pop
jnp
inc
mov
subb
outsl
cmpsb
dec
testb
shrb
push
push
or
mov
mov
ret
or
adc
sub
dec
mov
add
cltd
js
mov
add
nop
or
roll
outsl
fildl
loopne
sbb
xchg
pop
aam
stos
ss
mov
lret
popf
mov
insb
out
cli
into
sbb
sbb
stc
mov
or
xchg
xchg
shl
out
mov
aaa
sbb
lcall
and
jno
jae
push
jp
mov
fdivl
stos
or
inc
xor
outsl
adc
scas
inc
lock
inc
fsubrl
or
or
ficomps
out
daa
xchg
fildll
adc
xor
notl
inc
pop
outsl
or
scas
mov
xor
nop
int
inc
loope
pop
xchg
pop
bound
push
wbinvd
cmp
loope
inc
add
in
push
mov
enter
in
inc
gs
dec
sbb
cmp
pop
push
sub
call
insb
in
xstore-rng
cmpsl
add
js
dec
pushf
inc
adc
into
lods
int
lea
out
movsl
je
mov
xlat
mov
push
xchg
adc
xchg
push
pusha
out
movsl
outsb
push
arpl
mov
add
adc
popa
in
into
pop
mov
dec
mov
push
mov
mov
das
pop
jns
cld
mov
lods
pusha
xlat
stos
test
outsl
pop
cmpsl
aaa
lods
mov
pop
insl
insl
mov
shrb
ss
js
mov
in
push
sub
sub
push
movsb
mov
hlt
fmull
leave
sub
jg
cld
scas
mov
and
sbb
dec
rolb
xchg
sti
sub
jns
jge
pop
sar
inc
dec
dec
cmp
mov
sub
xchg
pop
or
push
filds
inc
ja,pt
subl
stc
sti
push
shrb
in
or
lahf
out
cli
aam
jbe
test
punpckhbw
mov
mov
call
ljmp
add
fistpll
xchg
sbb
or
xor
add
cwtl
jp
int3
lods
icebp
jge
stos
add
pop
outsl
add
fistl
sbb
mov
sbb
pop
sar
xchg
pop
hlt
sub
ds
stos
mov
sub
cmp
pusha
xchg
scas
call
imul
jbe
add
aad
in
and
fcomps
mov
aad
adc
dec
add
or
and
dec
insl
aaa
sub
lahf
push
mov
ficompl
shrl
mov
xchg
inc
xchg
push
ja
push
sbb
ljmp
and
hlt
inc
jne
cmpsb
push
inc
test
popf
and
popl
lods
pushf
call
dec
movsb
imulb
loope
mov
loope
mov
ret
add
in
test
por
popa
xchg
scas
in
js
push
ret
sub
or
sbb
stos
xchg
imul
fisubl
mov
push
das
mov
in
adc
jmp
roll
shll
in
je
in
daa
cmp
jge
mov
pop
push
loopne
push
add
mov
sbb
pop
clc
push
aaa
lds
pop
int3
adc
test
dec
jecxz
iret
push
mov
stc
mov
stos
arpl
fcoml
or
push
mov
mov
cmp
sub
jo
test
ret
popa
mov
adc
imul
arpl
je
lret
mov
fisubrl
mov
jb
into
mov
mov
push
mov
or
xchg
mov
inc
sbb
sub
mov
sti
adc
xor
aam
mov
mov
inc
sahf
mov
dec
fnstenv
std
enter
mov
sub
push
mov
aad
aas
xor
cmp
mov
jno
xor
mov
jno
mov
mov
aaa
xor
inc
mov
lcall
fimull
and
mov
aas
xchg
movsb
push
inc
hlt
ret
addr16
je
jnp
jno
xor
sbb
mov
xchg
sub
and
mov
sbb
insl
cmp
aas
sbb
std
add
sub
lret
push
push
sbb
push
mov
lahf
adc
sub
outsb
imul
jp
arpl
sbbl
test
pop
enter
icebp
inc
clc
fsubrl
pop
lret
add
lds
inc
push
or
hlt
pop
mov
fnstcw
sub
cltd
cmp
mov
sub
stc
negb
push
out
lods
or
cmp
int3
or
mov
stc
in
fidivs
rorb
adc
pop
hlt
out
test
imul
inc
fwait
cli
inc
sub
aad
out
cli
push
jecxz
lcall
push
cltd
mov
fsubrs
lods
adc
mov
loope
mov
mov
mov
mov
push
sub
mov
sbb
mov
cltd
lock
and
in
es
mov
orl
push
sbb
mov
mov
xchg
adc
inc
push
fstps
test
push
ret
pop
ret
and
outsb
push
xchg
pop
cmpsl
inc
jnp
shll
cmp
dec
mov
mov
mov
xchg
inc
mov
xchg
pop
rclb
adc
std
sti
test
insl
and
rcl
jns
push
inc
hlt
push
data16
pop
sbb
dec
popf
pop
int
in
jnp
inc
loopne
or
dec
bound
scas
sub
aaa
xchg
pop
andl
imul
ret
loopne
mov
push
mov
fdivs
lar
nop
jle
mov
addb
sbb
lret
xchg
insl
insl
js
cmp
mov
or
push
sub
pop
leave
sub
mov
rcll
or
mov
jg
ret
jb
adc
aas
daa
pop
pop
inc
cmp
test
jp
mov
stc
xor
loope
das
dec
in
xchg
addr16
shlb
mov
jnp
movsb
adc
inc
and
aas
mov
mov
std
push
push
lahf
adc
add
adc
xchg
dec
fbld
cli
cmp
out
clc
into
sbb
cmp
dec
out
sbb
sub
add
mov
mov
aad
add
stc
xchg
inc
add
pop
cmp
sbb
cmp
mov
mov
or
flds
into
ljmp
ficompl
hlt
add
mov
adc
jl
adc
adc
js
xor
and
repnz
les
int3
jle
test
xor
or
pop
xchg
sbbl
rorb
mov
insb
mov
pop
jge
arpl
adc
cmp
jg
lret
push
push
push
mov
push
ret
jmp
sbb
cmp
sub
inc
push
mov
out
xor
or
arpl
pop
jle
mov
inc
je
fisttpll
shr
push
inc
mov
out
imul
inc
pusha
sub
bound
cmp
mov
xchg
and
aas
data16
sub
xor
jmp
lock
cltd
pop
cmc
nop
adc
sub
mov
fidivrs
pushf
scas
mov
gs
ss
ljmp
xchg
shll
mov
fcom
push
into
stc
mov
orl
clc
jno
lods
push
mov
sti
js
mov
jnp
jle
jae
push
bound
in
fisttpll
xlat
mov
fmul
arpl
push
cmp
jb
pop
lea
dec
mov
std
outsb
aad
out
push
pop
sub
lods
outsb
or
fists
push
in
mov
stos
fs
pop
add
outsb
adc
lret
ds
pop
popf
or
lds
cs
jg
arpl
lds
mov
sub
shrb
or
aad
ror
pop
in
push
leave
xorl
out
jge
cs
jbe
jo
or
jno
in
lret
shll
and
loope
mov
pusha
daa
cmp
out
pusha
and
ljmp
mov
dec
test
cmp
pop
mov
arpl
aam
stos
sbb
mov
in
sbb
sub
xor
pop
lds
jb
jecxz
push
fsubrs
pop
das
mov
popa
push
jge
cltd
mov
xor
mov
cmp
or
add
fists
ljmp
xor
cli
push
push
jmp
or
adc
inc
cmp
orl
lret
add
shrb
mov
mov
pusha
lcall
jb
aas
dec
call
push
das
inc
adc
loop
xor
cs
icebp
cli
insb
cmp
cmc
mov
sbb
fdivl
mov
cmp
test
and
es
lahf
dec
ret
stc
mov
out
ficoms
mov
xor
fwait
or
sbb
repnz
das
inc
xchg
inc
xchg
sub
add
sahf
cwtl
dec
outsb
cmpsb
push
or
lret
mov
data16
push
pop
scas
repz
dec
adc
sbb
adc
je
rcr
dec
adc
out
push
push
cmp
mov
lods
loope
xchg
adc
movb
shrl
pop
fisttpl
cmpsb
es
or
pop
add
mov
push
loopne
xchg
pop
hlt
cli
pop
mov
stc
push
cwtl
fadds
fisubs
fidivl
or
inc
jg
mov
iret
ljmp
lret
mov
fucomp
push
cmc
sub
pop
and
xchg
dec
shlb
std
mov
ss
dec
pop
fs
pop
mov
fldl
or
mov
test
and
and
jns,pn
and
inc
or
sbb
pop
daa
cld
pop
lods
dec
add
je
jae
or
or
mov
inc
sti
push
imul
roll
mov
adc
sub
lea
sbb
aam
clc
sbb
fcompl
test
xor
dec
std
mov
dec
loopne
loopne
outsl
and
add
xorl
mov
xchg
int3
stos
outsb
jp
insl
mov
in
ljmp
stc
sub
cmp
or
scas
jnp
adc
mov
mov
lret
fcomps
mov
adc
sub
xchg
ret
mov
sbb
jno
fsubrl
mov
or
in
push
pop
cmp
push
lods
push
or
push
xorl
icebp
popf
push
mov
fisubrl
mov
rcrl
cmp
inc
rcl
pop
mov
push
gs
pop
sar
hlt
mov
pushf
or
xor
dec
lea
pop
insb
cwtl
fldcw
push
shlb
fistl
sub
add
iret
ds
add
repz
sub
sbb
adc
aad
loopne
stos
dec
mov
dec
sbb
fldenv
into
into
call
push
mul
stc
sub
mov
inc
loopne
lods
cmp
sub
jmp
and
jge
js
lea
xchg
xor
mov
jl
and
inc
cmp
scas
and
pop
or
and
pop
xor
mov
outsb
testl
movsb
jae
dec
repnz
out
jp
aas
jnp
xchg
cmp
xor
int
rcrl
ja
mov
and
xchg
scas
dec
sbb
mov
inc
ds
lret
popf
xchg
sub
sbb
ret
jle
cwtl
mov
insb
mov
pop
push
jge
inc
int
mov
faddl
cmpsb
lret
aaa
push
mov
push
xor
mov
leave
lret
mov
sbb
mov
mov
sbbb
jns
adcb
sub
mov
iret
les
aas
cmpsb
imulb
enter
sbb
xchg
sub
sub
and
hlt
mov
sub
dec
mov
jmp
cli
and
pusha
dec
or
mov
out
out
popf
ja
lock
pop
test
push
js
movsb
std
imul
shr
nop
adcl
dec
xchg
sbb
add
xor
mov
fldt
mov
rcr
gs
je
adcb
mov
lods
movsb
insb
sub
xor
popf
inc
dec
mov
lahf
sbb
cwtl
pop
dec
ds
sbb
loopne
cmp
iret
ds
jno
daa
lods
out
test
data16
mov
iret
mov
outsl
xor
mov
dec
lcall
pop
lods
lcall
ret
or
test
int
iret
cmp
inc
popf
inc
jne
andl
mov
jb
arpl
pop
loopne
xor
jge
sbb
mov
xchg
insl
xchg
mov
push
ja
fs
xchg
push
repz
dec
mov
push
gs
leave
cmpsl
cmp
leave
mov
mov
sub
repz
jle
or
idivl
xchg
cmpsl
les
shll
xor
fidivrs
mov
shlb
cmp
test
in
adc
adc
xchg
cwtl
lret
push
je
loope
add
push
xchg
sbb
and
cmp
push
push
sbb
mov
lods
dec
je
in
lahf
push
outsb
movsl
mov
jno
mov
and
int3
xlat
jb
pop
insl
jmp
push
sbb
push
adc
push
sub
outsl
es
pop
adc
lret
gs
fst
into
xor
mov
lcall
test
aad
add
mov
jb
ds
outsl
rep
jg
sbb
inc
or
je
adcl
sbb
push
mov
in
loope
xchg
add
lock
aam
je
jo
sti
mov
push
cmp
xor
sub
pop
fnstsw
out
or
mov
mov
dec
pusha
pop
lret
push
clc
adc
sbb
sub
and
insb
rolb
mov
sbb
or
mov
pop
ja
les
mov
mov
cmp
add
push
push
ja
mov
jmp
arpl
cmpsb
xlat
mov
test
movsb
fidivl
and
add
inc
and
je
test
out
insl
cmpsl
push
andb
ds
insl
fdivl
ret
xchg
and
in
loope
imul
cmp
jg
lahf
mov
push
jg
outsl
mov
ljmp
mov
sub
bsr
lret
xchg
daa
dec
mov
rorl
pusha
cmpsl
mov
inc
lods
clc
sbb
jno
leave
dec
mov
idivl
inc
add
nop
mov
mov
push
iret
adc
mov
cmc
popl
pop
inc
mov
mov
movsb
test
stos
cmp
jae
imul
push
in
dec
jl
stc
lret
adc
test
mov
flds
pop
leave
mov
dec
fs
and
cmp
test
mov
cltd
jge
pop
and
bound
loopne
jg
scas
hlt
mov
testb
pop
lcall
addb
rclb
les
xor
test
mov
cmp
dec
xor
mov
xchg
enter
jp
dec
stc
jmp
fnstcw
xchg
addr16
xor
fwait
push
les
aam
iretw
push
mov
inc
inc
ds
lret
ja
stc
in
lcall
mov
jbe
outsb
sbb
enter
push
or
out
ds
cli
lock
mov
addr16
inc
fstl
sbb
sub
pop
push
xchg
xchg
xor
ret
fbld
or
add
outsl
sarl
cmp
dec
int3
js
imul
pop
push
or
jo
add
xor
stos
mov
fisttpl
dec
ja
cmp
or
aaa
inc
dec
xor
shrb
out
js
mov
xlat
insb
loope
fidivrs
inc
jb
push
or
push
clc
je
lret
adc
add
and
not
push
xor
cli
pop
js
cli
xor
jne
fistpll
sahf
pop
mov
pop
inc
insl
xchg
ffree
lds
aam
sbb
or
push
fmuls
fldcw
push
sti
leave
sub
cli
stc
es
andb
fnstcw
dec
fstp
sbb
sbb
dec
mov
in
xchg
or
sarb
rol
clc
jns
pop
cli
aaa
jle
xchg
popf
or
gs
add
cmpsb
mov
mov
sbb
fcom
adc
jge
jp
xchg
js
dec
mov
nop
mov
adc
lods
shlb
dec
push
je
rcl
fs
mov
test
gs
cmpsb
jne
cltd
rolb
imul
mov
pushf
mov
lea
imul
mov
fiadds
add
pop
cmp
scas
into
xor
inc
xlat
fs
ljmp
add
ficoml
loopne
and
xor
testl
cmp
out
or
or
out
lret
fisubs
insb
test
cmpsb
jo
inc
xorl
mov
icebp
shll
inc
imul
cmp
mov
push
imul
pusha
or
std
gs
add
imul
or
dec
test
fiadds
and
out
cld
das
xor
popa
dec
int3
stos
sbb
in
adc
jmp
scas
jno
cwtl
mov
pop
cmp
dec
loope
sbb
mov
xchg
pop
dec
xchg
xor
cmpl
test
enter
ljmpw
lds
mov
loope
xor
jno
cmc
mov
pop
cmp
testl
and
ljmp
or
dec
int3
mov
sar
xchg
mov
mov
dec
adc
cmp
insb
add
dec
pop
inc
mov
mov
jb
pop
stc
push
sbb
dec
dec
adc
or
cmpsl
push
add
out
flds
adc
call
shll
and
xor
sbb
jae
lret
sub
lock
push
mov
sahf
xchg
or
sub
mov
fcompl
and
leave
stos
fldenv
cli
mov
and
jp
mov
imul
sub
and
pop
pop
icebp
fdivrl
daa
xchg
pop
lods
jb
and
inc
xchg
add
pop
test
ffreep
mov
inc
jnp
push
out
or
sbb
mov
sbb
mov
sbb
sub
inc
mov
movsb
icebp
sbb
dec
push
movsb
inc
movb
std
loopne
mov
adc
jns
inc
sub
lahf
aaa
subb
jle
dec
pop
dec
jle
shrl
mov
cltd
xchg
dec
sub
or
xorl
ljmp
pop
sub
movsb
popa
loope
mov
mov
in
jne
into
xor
outsl
movsl
stos
push
cmp
outsl
nop
dec
jmp
inc
push
pop
jae
mov
and
and
inc
or
jp
add
jb
ja
in
xchg
cmp
loop
xor
loopne
lods
push
jne
xlat
out
lcall
cmp
sahf
fsubrl
push
ljmp
cld
shrb
filds
adc
int3
aaa
xchg
lcall
sarb
jmp
sub
dec
scas
movsl
frstor
push
jge
clc
scas
shlb
adc
sbb
xchg
dec
cwtl
ja
ljmp
pop
imul
in
jae
les
icebp
imul
and
mov
cmp
gs
aad
lods
out
sar
int3
outsl
es
lds
fsubrl
mov
lods
xchg
into
call
adc
jbe
inc
xor
sub
outsl
xchg
push
les
pop
dec
xor
ret
sbb
xor
mov
jge
imul
mov
pop
xchg
loope
push
daa
xor
mov
xlat
push
sbb
add
inc
fisttpl
andb
push
adc
cmpsl
jne
scas
mov
dec
cs
scas
xchg
leave
dec
dec
imul
adc
bound
inc
lock
jg
mov
popa
push
xchg
sbb
jecxz
mov
sbb
mov
sub
paddb
lret
cld
mov
add
in
add
adc
outsb
xchg
add
cmpsl
ss
pop
and
jo
lcall
push
adc
scas
add
push
popf
sahf
pop
jne
mulb
lea
js
aam
cmp
sbb
out
je
mov
pop
lds
push
fwait
inc
clc
xor
dec
call
test
push
mov
mov
movsb
adc
push
sbb
rcr
push
jns
inc
mov
out
pop
sub
pop
ret
cmpsb
jp
nop
inc
mov
ret
pop
push
div
xchg
fwait
mov
xor
add
push
inc
add
sahf
push
and
cmc
pushl
ja
orb
cli
pop
and
mov
pushf
stos
dec
xchg
push
pop
mov
jg
in
and
pop
cwtl
inc
xchg
not
aam
push
adc
subb
outsb
bound
inc
aas
xor
inc
mov
pop
jne
add
or
inc
test
cmpsl
adc
aaa
jo
lahf
jle
cmp
popa
subb
pop
ficomps
or
inc
add
mov
inc
ja
fisubrl
inc
sub
xchg
aad
pop
sbb
bound
fmul
outsb
mov
mov
test
orps
push
imul
hlt
inc
popf
sbb
cmc
xlat
scas
jbe
aaa
mov
out
aaa
fsubrp
mov
and
pop
xor
out
lods
xchg
cmp
rcl
sar
sbb
push
mov
pop
inc
loop
inc
cmp
sbb
sub
mov
cmc
lahf
lea
pop
cld
adc
sbb
pop
adc
cmp
mov
lret
sbb
xchg
cli
adc
jmp
ljmp
cld
jb
loop
loopne
lahf
dec
jns
and
inc
pop
mov
jg
negb
pusha
sbb
push
shll
daa
cmp
and
out
sahf
std
lock
daa
fnsave
xor
cmpb
mov
mov
movsl
mov
xor
jnp
push
subb
jl
xchg
cmc
adc
dec
mov
or
fsubs
jmp
mov
mov
js
lods
sti
loop
fisttpl
out
ret
ja
mov
sbb
in
fisttps
sub
dec
cld
and
les
cmpsb
sbb
mulb
int
or
je
xchg
testl
push
jmp
inc
sbb
fldl
lea
into
pop
ss
jecxz
idivl
dec
lret
insb
test
jp
fldl
imul
mov
adc
xchg
mov
and
sbb
mov
cmpsb
mov
xlat
decb
stc
mov
pop
inc
outsb
jnp
loop
gs
fists
fildll
movb
ja
jecxz
lcall
jmp
jno
adc
mov
loopne
mov
in
pop
nop
sub
pop
push
cmp
ljmp
orl
lea
sbb
into
or
pop
sbb
movzwl
sahf
iret
in
shlb
jae
rorb
test
mov
addl
lock
push
mov
fistpl
gs
mov
mov
lods
xorb
push
sub
mov
stos
lcall
pop
mov
enter
sub
cmp
sbb
call
rolb
movsl
jecxz
xlat
aam
into
fcmovnu
jmp
cmp
adc
subb
push
inc
test
in
xor
mov
pushf
adc
sbb
aas
cld
dec
sarl
sti
notb
jp
cltd
shrl
cmpl
ret
scas
frstor
addb
push
shll
and
jo
fisttps
dec
xchg
stc
pop
and
mov
sarw
paddusb
les
jmp
pop
push
fwait
xchg
inc
push
xlat
mov
out
outsb
mov
rolb
nop
mov
fcoms
daa
dec
push
insb
orb
imul
shll
rep
sbb
movsb
push
pop
inc
or
gs
in
hlt
in
cmp
pop
in
repz
push
lret
add
jnp
push
jo
imul
adc
xlat
movsb
das
sysexit
or
dec
clc
xchg
mov
mov
dec
sbb
push
ljmpw
lock
and
movsl
icebp
ss
xor
ss
inc
scas
inc
pusha
repz
outsb
hlt
movsb
arpl
dec
cmp
and
mov
and
adc
xorl
xchg
mov
rorb
enter
adc
popa
jne
out
pop
mov
js
pop
sbbl
mov
lock
pushw
sub
and
mov
cmp
out
jno
or
loop
pop
sbb
mov
cmpsb
mov
xor
push
pop
movsb
imull
xchg
rcl
aaa
push
stos
scas
movsl
pop
pop
push
pushf
xchg
fistps
mov
jge
fdivrp
inc
out
ss
pop
into
mov
adc
popa
inc
out
mov
xor
mov
xchg
cs
inc
popa
ja
sbb
shlb
sahf
sbb
lcall
mov
lret
loop
push
es
inc
scas
bound
xchg
hlt
jb
adc
sbb
rep
addr16
popa
fisubl
xchg
sti
fdivl
push
inc
clc
fidivl
jne
dec
ret
adc
test
sub
xlat
jnp
mov
inc
mov
repz
cmp
adc
mov
and
repz
dec
test
add
fbld
cmpsl
into
jns
xor
xchg
stos
out
cltd
bound
stos
xlat
int
push
inc
cmp
mov
cmp
das
fadds
mov
adc
lds
fstps
cs
adc
daa
push
dec
aad
fcompp
add
adc
cmp
mov
mov
cmpl
pop
aas
das
sti
add
fstpt
jno
dec
mov
in
data16
cmp
loopne
xchg
ljmp
cli
add
dec
negl
sbb
mov
pop
xchg
adc
clc
cmp
mov
pop
mov
mov
je
and
xor
pop
inc
xor
inc
push
mov
mov
icebp
or
mov
cwtl
stc
imul
arpl
inc
sbb
xor
pop
xchg
repz
popa
add
scas
xchg
jnp
jbe
clc
dec
add
push
add
jo
and
fisubl
jb
and
cwtl
xor
jne
das
fnsave
add
pop
cmp
jecxz
fs
pop
aaa
inc
sbb
dec
cmp
sbb
dec
xor
out
fbld
sub
push
pop
in
in
cmp
add
pop
rorl
cltd
addr16
test
call
lea
pop
fdiv
shr
adc
cmp
or
shl
and
cmpsb
mov
leave
mov
enter
movsb
pop
adc
mov
lods
mov
mov
mov
dec
lret
and
lahf
ja
mov
jmp
dec
mov
sbb
xor
inc
xchg
inc
xor
mov
outsb
std
rcrl
pop
xchg
cmp
shl
pop
sub
rolb
iret
cld
sub
push
nop
insb
fwait
outsl
push
popa
arpl
pop
out
stc
loop
push
fmull
aas
imul
dec
sbb
incb
leave
mov
add
inc
sar
aam
cwtl
icebp
imul
xchg
cmc
jne
test
mov
imul
pop
push
xchg
mov
cmpsb
rorl
xchg
lods
into
dec
movsl
cmp
fisubrl
test
aam
or
es
xchg
mov
cltd
lret
sub
decl
pop
mov
insb
sbb
scas
bound
cmp
cmp
enter
addr16
das
sbb
xlat
in
divl
sbb
jnp
mov
or
adcb
loope
mov
ret
jne
dec
icebp
int
sub
movsb
bound
leave
je
ja
sti
stos
jle
sbb
outsl
adc
pop
or
inc
cmp
sub
sti
dec
sbb
aad
inc
push
mov
mov
adc
cmpl
int3
sub
sub
es
push
jae
gs
mov
ret
jo
sub
push
arpl
push
movsb
pop
mov
jl
into
xchg
xchg
mov
mov
stos
mov
sub
loopne
mov
flds
xchg
outsl
loop
xchg
mov
stc
out
pop
dec
xchg
adc
inc
enter
or
repz
roll
pop
lret
loop
jae
out
pop
inc
imul
fisttpll
or
mov
mov
data16
dec
call
neg
scas
xlat
or
xorps
sahf
push
cmp
inc
fldt
sbb
xchg
xor
inc
push
inc
mov
mov
jle
arpl
bound
dec
push
enter
dec
mov
and
jnp
add
es
pop
dec
ret
dec
sbb
mov
xor
and
mov
xchg
pop
ficompl
push
sub
and
adc
popa
mov
xchg
jle
lcall
adc
cmp
outsl
sar
push
add
mov
pop
jge
lea
or
jecxz
xor
pushf
xor
ss
arpl
mov
push
cmp
test
lods
mov
sti
jmp
pop
fcoms
fimull
or
or
into
lret
mov
pop
ja
lods
mov
cmc
stos
inc
in
sub
jg
int3
popf
jo
adc
sbbb
std
ficoml
sbb
adc
js
leave
lods
ss
aas
add
mov
adc
call
pop
sbb
or
xchg
push
dec
and
sub
clc
das
ds
jmp
and
inc
push
popa
repz
mov
fnstcw
out
test
insb
and
mov
jnp
repz
scas
data16
xchg
xchg
mov
push
fbstp
mov
roll
fsubrl
rclb
mov
pop
fbld
inc
sub
push
xor
je
mov
scas
jae
in
xor
scas
mov
mov
mov
enter
cld
pop
hlt
ret
add
adc
dec
aas
jbe
mov
and
fidivs
lahf
cmp
and
cltd
enter
ret
jo
push
jecxz
xchg
insl
xchg
hlt
mov
repnz
jecxz,pt
ja
hlt
cmp
fadds
in
lret
out
fdivs
pop
dec
push
mov
jmp
inc
inc
pop
clc
in
cmp
jo
clc
dec
lock
stos
movsb
ja
mov
sahf
jecxz
shlb
outsb
and
jle
dec
adc
enter
xor
and
sub
sarb
jno
popf
hlt
jns
jp
pusha
cli
jl
jae
lods
sbb
and
mov
out
roll
xor
lock
dec
gs
arpl
dec
lret
aam
stos
sbb
or
test
push
stos
sub
pop
xor
mov
mov
mov
inc
test
sahf
xor
es
outsl
insb
jbe
and
adc
std
mov
push
imul
mov
repz
pop
jno
mov
cld
mov
cmpsl
push
test
inc
pop
fldl
lock
shrb
mov
or
imul
and
insb
loop
xchg
insb
or
pop
aas
popf
jb
mov
and
mov
mov
inc
xor
push
add
push
arpl
les
orb
stos
cltd
mov
or
jns
push
pop
sbb
test
or
stos
js
inc
pop
cltd
jae
lret
fistl
push
pop
add
roll
bound
into
out
inc
inc
mov
sar
jmp
test
mov
imulb
dec
mov
jo
cmpsb
lcall
pop
scas
ret
and
int3
daa
dec
sub
addr16
xor
cmpsl
adc
mov
cs
pop
sbb
mov
test
cmp
in
sub
inc
or
movl
ss
inc
leave
jb
das
gs
cmp
and
dec
push
pusha
ja
push
sub
adc
pusha
clc
inc
sub
faddl
pop
pop
push
andb
push
pop
sub
outsb
imul
lock
mov
ljmp
out
sbb
add
icebp
movsl
dec
dec
loope
push
out
jmp
icebp
or
xchg
into
js
xchg
hlt
stos
jae
cltd
mulb
add
out
in
mov
mov
inc
loope
xchg
mov
stc
cmp
mulb
pop
mov
mov
or
imul
or
cmc
and
sbb
pop
mov
mov
repnz
in
jae
imul
pusha
add
pop
bswap
pop
inc
mov
outsb
bound
dec
stos
andl
clc
add
fdivl
push
inc
popa
jns
shlb
inc
dec
jns
movsl
mov
push
gs
ds
or
add
jl
and
psllq
clc
jnp
mov
popf
mov
or
insl
enter
lea
jmp
out
jne
movsb
adc
insb
push
cmpsb
jmp
rclb
hlt
sbb
or
mov
mov
inc
jg
add
xor
lock
xchg
jmp
enter
dec
xchg
cmpsl
cmp
xlat
test
inc
jne
push
int
les
jge
push
mov
adc
mov
cs
cmpsl
mov
insl
inc
push
sbb
into
out
fdivr
repnz
jo
imul
mov
xor
and
jno
push
sti
mov
loop
mov
xchg
jp
shll
inc
out
push
out
cltd
out
add
sbb
add
int
fmul
push
or
out
mov
mov
insb
test
out
inc
inc
dec
cwtl
mov
push
xor
jnp
mov
js
or
push
aam
mov
fs
hlt
sbb
incb
add
adc
loop
mov
test
xor
push
divl
lahf
add
fmull
adc
lcall
dec
xchg
enter
sub
and
pop
nop
xchg
sbbl
call
dec
rcl
sbb
test
enter
inc
sub
dec
sub
lret
mov
stos
xchg
roll
ror
test
lds
pop
loopne
mov
jg
test
pop
pusha
push
js
imul
idivb
adc
test
stos
loop
dec
fs
sub
cld
aas
pop
pop
fs
in
repz
loop
and
jmp
lods
outsl
je
aad
std
fdivs
jno
adc
inc
pop
push
inc
or
fistpl
imul
sbb
leave
xchg
lods
les
push
mov
iret
mov
xchg
lret
jne
sti
lret
mov
pop
inc
and
dec
pop
mulb
test
mov
in
pop
jp
cmp
clc
adc
adc
cmp
adc
xchg
gs
push
xchg
jno
jg
jae
xor
xchg
mov
out
and
imul
adc
cmc
lods
insl
sahf
and
test
inc
hlt
push
fisttpl
mov
cmpsl
shll
adc
shll
ss
jmp
fidivrs
pop
jle
mov
pop
loopne
mov
std
mov
mov
stos
mov
xchg
shlb
dec
jnp
js
rcrb
stos
out
outsl
dec
xor
lahf
int
das
js
out
loopne
mov
iret
arpl
sbb
pop
int3
mov
mov
mov
pop
leave
rcrl
mov
out
sbb
test
insb
js
imul
and
jno
or
push
out
cmp
insb
daa
shll
lret
shl
cmp
call
loopne
dec
fstpt
pop
jg
inc
inc
scas
jb
and
push
sub
movsl
sub
push
or
xor
inc
cmp
inc
sub
lods
pop
pop
sub
or
mov
xchg
jmp
lds
into
int
fisttpl
mov
push
add
pop
cmp
movsb
lcallw
fldcw
test
in
jo
mov
movsb
mov
pop
xchg
dec
and
sub
push
xor
add
fwait
adcb
loopne
adc
int
not
stc
fimull
push
xor
lea
or
xlat
hlt
enter
xor
xor
sbbl
loopew
shlb
push
ljmp
dec
daa
test
dec
fistps
scas
fmull
pop
mov
into
push
cmp
adc
sbbl
repnz
adc
cmp
inc
pop
dec
add
ret
add
sub
xor
mov
jb
jo
dec
jae
xor
jmp
mov
pop
mov
xor
in
shrl
push
add
cltd
cli
aad
stos
xor
or
mov
sbb
es
add
popa
aad
imul
xchg
add
mov
loope
jge
jo
mov
cld
jnp
push
jp
mov
jmp
push
loop
hlt
insb
enter
xchg
xor
ds
cli
dec
mov
push
lea
and
cmp
mov
cltd
cwtl
and
mov
jnp
add
push
pop
loop
or
lods
add
out
mov
inc
inc
loop
pop
fs
cmc
lret
ret
push
wbinvd
add
xchg
mov
decl
cmpsl
cmp
fnstsw
and
ja
cmpxchg
stc
adc
cmp
pop
pop
and
mov
lock
and
popw
jo
sub
ret
popf
jnp
idivl
lds
subl
xchg
pop
add
lret
lea
pop
in
dec
jmp
fnstsw
mov
mov
jecxz
pop
ret
dec
mov
push
stos
out
loope
push
cld
xchg
sub
mov
and
out
jae
ficoml
xchg
mov
dec
pushf
and
in
ss
ret
icebp
sub
xchg
push
xlat
inc
pusha
pop
add
out
dec
fdivr
pushf
jp
leave
dec
es
pusha
jg
inc
mov
sub
cmp
xchg
sub
add
imul
sub
out
fidivrl
add
inc
test
mov
push
jne
sbb
rcl
pop
or
fistl
push
dec
xchg
push
xorl
pop
pop
in
lock
mov
sahf
in
outsb
or
mov
xor
iret
imul
sbb
push
inc
pop
dec
jg
push
stos
cmc
lock
push
push
inc
adc
out
pop
jg
or
adc
mov
mov
push
add
cmc
xor
icebp
icebp
cli
cmpsb
add
jg
xor
push
inc
mov
lods
fistpl
jne
jg
fstps
mov
jbe
push
mov
mov
xor
xor
inc
inc
pop
pop
movsl
xor
inc
rclb
mov
inc
rcll
dec
cli
adc
push
push
pop
cmp
call
pop
and
imul
adc
add
mov
jo
lret
lods
call
fiadds
jns
jne
mov
imul
adc
xor
xchg
sbb
enter
inc
adc
mov
fadds
je
or
leave
andb
gs
and
call
or
aad
int
inc
fdivrp
daa
push
sbb
cmp
sti
adc
or
lret
lahf
push
pop
inc
mov
jbe
je
movl
imul
inc
sub
pushf
in
xchg
xor
jmp
sti
mov
and
bound
out
xlat
cmpsb
xchg
jle
sbb
fistpll
cmpsb
add
mov
enter
pop
push
pop
jl
andb
test
add
shr
gs
cmp
pop
in
jb
dec
xlat
cwtl
jle
and
push
jmp
aad
xchg
xor
or
xor
ja
sahf
pop
out
mov
push
pop
rcrb
int3
add
xchg
mov
dec
xor
mov
xlat
dec
cmp
fistps
icebp
mov
adc
sub
inc
je
lock
aam
inc
scas
jo
pop
pop
ret
fnstsw
stos
mov
out
lret
add
mov
test
and
lds
daa
add
repz
iret
push
jns
xor
dec
xchg
adc
movsb
addl
inc
mov
subl
lret
out
adcb
out
je
cmp
insb
out
das
dec
shl
fisttpl
movsl
add
decb
repnz
add
sbbl
xchg
shll
xchg
mov
je
arpl
xchg
xor
cli
aam
sub
enter
push
sahf
pop
out
jns
lock
cmp
or
xor
or
add
mov
dec
add
xchg
jge
dec
out
shrb
jge
fildll
sub
xor
xorb
jle
dec
jmp
mov
push
js
daa
ljmp
mov
push
popf
movsb
and
sti
add
lret
aam
mov
lret
push
xchg
insl
das
mov
push
inc
lahf
jne
dec
sbb
mov
dec
cmp
aad
and
mov
xchg
outsb
xchg
mov
sbb
inc
xchg
inc
int3
out
bound
sti
pop
jno
jo
pop
and
mov
jae
sub
in
dec
rcl
fistpl
pop
iret
sub
imul
aad
inc
aam
scas
int3
push
inc
dec
pop
adc
mov
rorb
clc
inc
test
jno
aaa
push
out
xor
jmp
or
outsl
repnz
test
imul
pop
nop
sbbb
adc
jecxz
into
mov
dec
outsl
outsb
rcrl
push
jns
scas
xchg
es
ljmp
adc
shlb
mov
ds
bound
outsl
or
mov
push
fdivrl
repz
pop
cwtl
dec
mov
mov
ret
dec
adc
scas
fcmovb
add
in
enter
mov
sbb
clc
notl
test
mov
mov
add
movsb
outsl
aas
out
jmp
cs
aaa
es
je
mov
sub
aas
in
pop
xor
imul
mov
mov
aaa
and
cmpb
xor
movsl
mov
push
xchg
push
jne
test
scas
inc
adcb
and
xchg
in
xor
inc
in
sti
dec
ss
mov
cmc
and
add
inc
adc
mov
jne
mov
in
jno
mov
aas
push
or
pop
fldl
push
or
bnd
and
incl
mov
sahf
or
xchg
jne
or
test
popf
push
sbb
cltd
mov
sub
insb
insl
ja
jp
arpl
inc
andb
test
jg
xor
and
mov
mov
or
xchg
push
sub
addr16
sbb
outsl
pop
xchg
out
add
jnp
mov
gs
sbb
imul
fiaddl
stos
inc
mov
repz
jl
sub
adc
jae
in
bnd
and
inc
inc
lahf
jae
xchg
mov
pushf
aad
lgs
xchg
icebp
dec
call
stos
insb
adc
rcll
ljmp
leave
dec
test
mov
add
call
lret
sti
dec
inc
enter
rorl
xor
or
xchg
sbb
cwtl
and
or
stos
lods
xchg
mov
mov
test
stos
mov
xor
enter
hlt
mov
lods
xor
push
cmp
mov
sbb
icebp
mov
mov
outsl
sbb
das
xchg
mov
pop
mov
lock
mov
lds
movsl
clc
clc
imul
pusha
test
inc
pop
int3
xor
lret
or
out
test
lods
sbb
pop
ljmp
push
mov
mov
inc
popf
jmp
fcmovb
cmpsb
arpl
fwait
xchg
push
add
lret
test
fsubl
push
xchg
out
jge
pop
dec
lods
movb
jno
jb
sbb
sub
dec
pop
test
mov
pop
loope
in
movsb
jbe
and
sahf
test
stc
ds
cmp
push
mov
mov
mov
adc
and
or
pushf
nop
adc
xchg
inc
data16
fistpl
loopne
dec
add
xor
push
pop
jne
adcl
sub
call
pop
inc
repz
into
push
lret
mov
cmp
push
mov
xchg
sub
out
push
push
lcall
push
or
xor
aam
frstpm(287
loop
inc
push
cmp
add
fldl
jne
mov
pop
cmp
add
stc
sub
mull
jb
inc
push
pop
jecxz
mov
mov
mov
mov
adc
scas
pop
cld
push
mov
lods
in
lds
xchg
scas
sbb
cwtl
mov
xor
inc
cmpsl
mov
xchg
test
fadds
jb
dec
fdivrp
mov
jge
ret
jecxz
push
pop
test
jbe
movsl
mov
sbb
mov
sub
in
xchg
cmp
jno
xor
mov
push
cmc
sub
xchg
and
out
cmpsb
iret
jo
clc
dec
xchg
mov
cmc
xor
and
xchg
call
inc
cmpsb
lret
lcall
cmpsl
out
stos
arpl
jmp
jmp
mov
dec
sahf
adc
cmp
sbb
xor
arpl
sbb
lods
jmp
stos
push
cmpsl
stc
imul
loopne
xor
sbb
push
movsl
mov
mov
sbb
icebp
aad
inc
dec
sub
pop
add
pop
inc
push
shll
mov
mov
mov
mov
xor
bnd
mov
negl
xor
mov
dec
pop
xor
inc
test
jbe
push
add
outsb
xor
xchg
cmp
cmpb
jmp
stos
add
adc
push
sti
xor
dec
xchg
lods
aas
ror
xlat
cmp
mov
movsl
or
inc
loope
push
add
sub
sbb
cmp
add
sub
lods
mov
jne
popf
repz
fstpl
add
sti
leave
in
in
pusha
push
fmulp
xor
aaa
push
stos
adc
hlt
pop
sub
mov
cmpsl
and
cmpsl
aas
fdivl
ret
dec
mov
dec
jmp
addr16
outsb
mov
rcrb
aas
and
je
dec
pop
sbb
in
mov
daa
and
std
std
in
fs
or
add
cmp
in
cli
sbb
push
mov
je
add
test
adc
ja
test
test
sbb
orb
jmp
ja
adc
lcall
in
mov
cld
stos
mov
jmp
and
fildl
lahf
lods
cmp
mov
int3
dec
cwtl
push
push
imul
ret
repnz
rcrb
pushf
xchg
popa
in
dec
cmp
sbb
sub
notl
daa
jae
xor
jmp
adc
bnd
and
faddl
adc
cltd
sarb
push
mov
stc
and
std
stos
xor
push
outsb
and
inc
or
and
cmp
mov
inc
pop
push
push
subb
or
enter
lds
sub
sub
in
mov
dec
sti
sub
push
pop
and
xor
mov
insl
movsb
arpl
sbbl
jae
lods
and
adc
sub
add
adc
jg
aas
xor
jnp
pop
or
add
jle
shll
sub
and
xchg
ret
lcall
hlt
mov
mov
movsb
mov
cmp
inc
add
repz
ja
mov
xchg
shll
add
push
cwtl
ja
push
dec
andb
jb
cmpsl
enter
in
cld
inc
iret
add
imul
pop
and
fmulp
xor
in
loop
jg
push
mov
push
adc
daa
nop
cmp
arpl
xlat
dec
sub
adc
aaa
lcall
push
push
rolb
dec
mov
mov
outsb
jns
pxor
std
and
ret
gs
insb
inc
xorb
sbb
push
jae
roll
mov
cld
cmp
push
inc
in
js
movsb
fs
test
leave
jo
cmpb
xorl
hlt
inc
lret
pop
sbb
addr16
mov
inc
aam
dec
outsb
leave
imul
loop
pop
fdivr
aaa
fadd
or
inc
movsl
repnz
cmp
cmpl
or
bound
mov
ja
and
cltd
jecxz
dec
aam
fwait
xlat
or
mov
sub
hlt
or
test
jecxz
cli
sbbb
jge
negb
sub
pushf
sub
nop
movsl
push
negb
inc
lcall
aaa
xor
mov
inc
pop
stos
jnp
mov
sub
dec
int
or
jmp
mov
cmp
pop
dec
pop
scas
std
xor
or
jbe
xchg
push
mov
xor
mov
mov
sub
mov
push
outsl
aam
xor
xchg
outsb
jg
lds
add
mulb
fs
mov
lcall
or
pop
das
xchg
std
out
xchg
lret
ss
rol
push
arpl
iret
push
call
lahf
xchg
add
inc
out
push
psadbw
lods
cld
push
in
push
push
cmpsb
xorb
add
je
xor
adc
xchg
mov
push
gs
xor
clc
fcmove
adc
rcll
push
and
jnp
inc
call
add
sub
pop
js
or
test
pop
inc
aam
push
in
push
push
sbb
push
mov
cmp
jno
and
call
jns
jg
mov
inc
mov
cwtl
popa
lods
cmpsl
mov
sbb
mov
rcll
xchg
outsb
in
sbb
enter
xor
inc
mov
add
xchg
mov
or
dec
pop
add
sbb
fwait
psrlw
xchg
aas
cs
push
jae
dec
es
mov
add
lds
sub
scas
mov
rorl
lds
loope
cmp
mov
outsl
mov
fbstp
push
out
arpl
sub
jns
shrb
addr16
addr16
xor
sbb
clc
sub
fstl
jns
repnz
xchg
inc
push
mov
mov
xchg
insl
out
and
or
push
test
inc
inc
in
cmp
pop
xchg
divl
xchg
xchg
jbe
cwtl
jmp
jae
jp
popf
or
movsb
or
in
mov
shrb
cmp
jecxz
pop
lret
dec
inc
loopne
cmp
jge
fdivs
ficoms
jge
bound
jae
mov
mov
lahf
jbe
jnp
xor
dec
cwtl
mov
rcrb
shlb
inc
mov
test
into
fists
add
mov
fwait
pop
ja
test
hlt
sti
cs
inc
jb
lret
leave
lea
aam
add
clc
sub
icebp
dec
mov
adc
dec
push
pusha
mov
push
cmpsl
cmc
hlt
lds
ja
mov
push
mov
std
inc
fidivrs
leave
pop
test
enter
or
loop
fcompp
sbb
sub
jg
aam
aaa
cs
fidivs
xor
xchg
into
jle
dec
pushf
xor
pop
pop
xor
addr16
shrl
jle
dec
sub
add
lods
xor
outsl
test
cmp
adc
bound
adc
jae
fcmovne
xor
xor
in
mov
mov
push
mov
add
bound
scas
mov
ss
repz
into
sbb
jle
imul
lds
jmp
adc
inc
and
pop
insb
call
ficomps
outsb
nop
fimuls
adc
jp
and
push
ret
adc
jl
jbe
and
test
dec
mov
inc
sbb
aaa
jle
mov
cmp
es
pop
add
jbe
test
aad
stos
ja
das
sti
pop
jne
cmp
xchg
dec
shlb
adc
push
add
sub
pop
xchg
adc
sbb
and
sbb
mov
adc
shl
or
stc
push
ljmp
insl
cltd
pop
mov
cwtl
pop
xchg
mov
sbb
adc
cwtl
pop
into
cmp
cmp
xor
movsb
inc
inc
in
mov
or
test
and
push
dec
sti
lock
je
adc
aad
fisubl
daa
pop
mov
add
aas
push
lahf
sub
sbb
dec
insb
scas
cmc
std
mov
push
aas
mov
xchg
xchg
in
scas
ljmp
roll
stc
mov
pop
xchg
adc
xchg
ficompl
or
cwtl
iret
dec
test
in
adc
aad
pop
imul
shll
xchg
sub
jae
sub
adcl
cltd
aas
push
jo
das
fidivrs
mov
sub
jecxz
lods
push
aaa
iret
inc
lods
imul
pushf
mov
test
jle
lret
add
pop
and
dec
test
jae
sahf
jp
add
cmp
mov
negl
sub
clc
and
push
push
data16
pusha
xorl
je
lret
and
int3
sbb
lods
out
inc
dec
xchg
pop
mov
mov
lret
jbe
and
sub
lret
fsin
out
jb
scas
out
or
aad
push
push
stc
mov
lods
lcall
test
bnd
xor
mov
jg
cmpsl
shrl
lds
xor
mov
outsl
gs
mov
jae
push
mov
pop
fildl
in
icebp
outsb
into
ds
in
lds
nop
sub
popa
lods
out
lods
jecxz
jne
data16
jle
mov
cmp
pop
sub
dec
fildl
shll
xor
sub
mov
stc
jo
pop
leave
pop
sub
ja
xor
jl
jg
popf
ljmp
in
cld
cli
outsl
test
iret
les
loopne
lcall
loopne
ret
dec
mov
xchg
mov
and
imul
fistl
daa
pop
or
fstpt
jmp
pop
xor
shrb
insl
loop
subl
add
cmpsl
mov
cmp
sbb
mov
or
cmp
js
xor
sahf
mov
out
cmp
fs
or
cmpsl
mov
mov
lock
ret
out
or
test
mov
fstl
and
fimuls
cltd
add
idivb
sbb
and
popa
xor
insl
mov
pop
cmpl
inc
hlt
mov
xchg
lret
int3
pop
pop
and
adc
call
xor
movsl
pop
adc
out
push
sahf
lcall
sbb
subl
lods
stos
scas
aam
stos
mov
mov
add
es
xor
push
and
aas
int3
xchg
dec
pop
cmp
add
test
xchg
insb
dec
addb
daa
sbb
xchg
mov
fbstp
xor
dec
ret
fmuls
and
push
dec
roll
or
fdivrs
subb
jp
jg
and
cli
arpl
xor
inc
in
mov
je
inc
sub
vpslld
sub
ret
or
lea
pop
test
sbb
cmpsl
outsb
js
mov
jb
icebp
jo
mov
push
std
mov
fcmovb
mov
loopne
pop
mov
pop
jae
in
aas
cmpsb
mov
stos
hlt
jo
jp
xchg
test
outsl
pop
push
jg
subb
popa
pop
add
out
xchg
enter
jge
pop
cmp
iret
add
ss
out
loopne
push
lahf
jno
stos
les
jo
cmpsb
lock
jle
mov
popa
cmpsl
inc
lea
ret
jno
shlb
jmp
jno
mov
adc
js
stos
jge
dec
mov
aam
insb
cmp
pop
xor
add
push
pusha
lcall
push
inc
fidivs
xchg
lods
sbb
push
in
mov
addr16
mov
mov
jge
mov
pop
push
xor
jg
insb
int3
xchg
push
les
or
xchg
inc
fsubrl
lods
paddb
es
aas
mov
mov
mov
cmp
xchg
ret
sub
daa
out
sbb
jb
rorl
adc
sub
sahf
pop
icebp
xchg
loope
stos
xchg
fmuls
or
lods
jo
jmp
mov
rorl
cmp
in
mov
cmp
aad
jge
lock
das
dec
xchg
jns
ss
rcrl
mov
jbe
mov
dec
inc
das
inc
testb
je
jae
mov
addr16
sub
jg
and
mov
scas
clc
or
loop
pop
out
icebp
sub
adcl
lods
pop
shrl
in
or
add
cli
divb
and
outsl
daa
js
xor
add
mov
adc
mov
pop
sarl
popa
mov
sbb
mov
jl
mov
push
jp
pushf
stos
fidivl
dec
mov
jge
adc
add
dec
xchg
in
scas
sarb
sub
jle
inc
sub
test
xor
fs
inc
mov
cwtl
shlb
leave
popa
cmp
sub
and
xor
test
or
cmp
and
jo
or
inc
ret
inc
movsb
movb
pop
sub
arpl
sbb
xchg
js
cmc
test
aam
aaa
add
loop
cmpsb
pop
pusha
lcall
jne
cmp
nop
repz
pop
sbb
mov
arpl
aaa
xor
or
shll
insb
out
pop
sbb
add
arpl
lods
test
aas
add
sub
mov
fldl
inc
pop
fnstcw
mov
cltd
lahf
rol
or
stos
ljmp
shl
cmp
sbb
stc
movsl
sbb
mov
popa
cmp
xor
mul
insl
dec
les
cmp
enter
and
imulb
test
data16
pop
pop
in
int3
mov
aaa
sub
add
std
and
push
bound
jno
pop
enter
loopne
adc
das
jne
inc
stc
push
cmpsb
outsl
jmp
xor
sbb
pop
cmp
out
ss
add
mov
mov
in
dec
xchg
out
pop
push
xchg
lods
sub
pop
jl
mov
cmp
test
mov
xor
out
jo
sbb
scas
fisubl
mov
mov
in
pop
mov
lds
pushf
mov
std
lret
or
xor
loopne
jge
mov
jmp
insl
bswap
mov
dec
fcmovnbe
mov
add
imul
mov
sbb
mov
or
jg
mov
fdiv
and
sbb
sti
cmp
mov
push
mov
mov
xchg
int3
add
in
mov
xchg
cltd
add
cs
in
iret
sbbb
js
loope
add
adc
inc
pop
cltd
das
mov
push
or
pop
add
cmc
mov
and
insb
pop
add
aad
mov
pop
or
xor
dec
inc
push
xchg
fimull
push
pop
inc
mov
js
sti
dec
adc
mov
pop
pcmpgtd
adc
xlat
dec
sbb
xchg
mov
sahf
lock
sub
daa
jno
dec
out
xchg
ret
pop
lock
xor
enter
out
andl
out
mov
leave
push
dec
aas
adc
push
lret
mov
ljmp
fisubrl
pop
fisttpl
cwtl
cwtl
add
arpl
popa
sbb
and
stos
in
mov
rclb
shl
xchg
bound
jns
das
movsb
cmc
mov
jb
ss
int
mov
je
push
sbb
jge
push
movsb
or
insb
jmp
in
xchg
in
or
sahf
out
xchg
sbb
nop
sub
xor
adc
sbb
mov
adc
or
rcl
das
push
insb
lcall
fcoml
xor
dec
insb
pop
jp
mov
jecxz
popa
aaa
repz
cmpsl
inc
dec
xchg
ss
inc
adcl
jo
mov
imul
pop
popa
outsl
mov
orb
pop
and
nopl
jnp
out
pop
lods
mov
in
or
popf
cs
insl
mov
mov
into
test
jg
ret
cmc
jge
mov
adc
outsl
mov
mov
adc
arpl
lods
test
mov
push
xor
repnz
cmp
repnz
mov
sbb
xchg
push
stos
fimull
sarl
dec
lret
cld
pushw
mov
xchg
add
test
add
inc
testb
pop
mov
loopne
cmpsl
aam
or
aas
inc
xchg
push
lcall
ficomps
lea
repnz
test
cmp
xchg
cmp
xchg
pop
xchg
xchg
sbb
dec
das
out
stos
sub
nop
scas
fmull
add
push
mov
andl
cmp
pop
icebp
sub
pop
int3
icebp
es
mov
les
mov
aam
xorb
addr16
or
in
out
fcoml
lea
clc
xchg
idiv
sbb
mov
push
int
out
mov
es
movsb
dec
out
and
andb
pop
out
inc
pusha
sub
jno
pop
xor
std
fstps
stos
insl
into
adc
sahf
jne
sbb
pusha
sub
push
jle
jne
jne
cld
insb
push
mov
loopne
leave
mov
cmp
pop
jb
out
popf
sbb
add
or
out
js,pt
out
mov
arpl
popf
fistpll
sar
stos
imul
int3
in
shrl
push
movsl
lods
xchg
ret
aaa
inc
and
cmp
jbe
ret
sub
sbb
xor
test
rcr
out
in
stos
jne
cmp
aaa
aas
dec
loop
lods
push
dec
dec
icebp
dec
xchg
push
pop
add
or
mov
jno
add
fidivl
xor
push
mov
jnp
sarb
test
sbb
pop
lds
sbb
jo
or
pop
mov
jno
sarl
pushf
add
fdivl
rol
int
cltd
stos
fsts
jmp
jge
outsl
inc
nop
jge
repnz
jo
jne
mov
push
in
dec
idivl
push
mov
xchg
push
jns
pop
mov
xor
pushw
xor
gs
rorl
out
in
aaa
std
out
add
lock
jl
jns
xchg
adc
movsb
lock
lds
pop
out
jae
mov
cld
scas
lret
xchg
adc
aaa
jo
push
or
sbb
ret
dec
lods
shlb
xor
mov
aam
dec
out
xchg
push
shll
push
int3
xchg
scas
dec
cwtl
sub
ja
dec
mov
xchg
push
arpl
inc
sub
adc
pop
adc
leave
and
sahf
jbe
les
jge
mov
or
stc
sbb
inc
or
adc
iret
rcr
insl
or
add
fildll
js
nop
sbb
mov
mov
mov
arpl
sub
cmp
mov
mov
pushf
fs
lcall
mov
mov
xchg
dec
and
stos
sti
ffreep
out
or
bound
outsl
in
sub
icebp
pop
jo
lcall
out
push
rcrl
or
shl
xchg
jb
popa
lock
stc
add
movsb
cmpsl
test
dec
std
lret
mov
mov
cmp
ret
push
sbb
add
xchg
fmuls
mov
pop
lret
pop
rorl
shlb
jg
bound
jno
cltd
sub
mov
les
lods
sbbb
inc
pop
mov
test
orb
xlat
push
out
sub
mov
fstpl
dec
adc
loop
cmp
loope
pop
push
mov
xor
cmp
push
and
push
outsb
mov
mov
lods
jecxz
mov
jg
mov
inc
movsb
push
dec
repz
pop
dec
inc
sub
push
inc
in
dec
cmc
pop
mov
subb
testb
insl
out
pop
icebp
loope
out
jmp
mov
dec
xchg
sub
and
add
lds
stos
mov
fwait
xchg
push
push
adc
mov
sub
data16
mov
xchg
jae
out
dec
xchg
mov
or
add
icebp
ret
int3
mov
into
insb
mov
pop
test
mov
mov
into
or
xchg
cld
loop
fsts
aad
adc
and
ret
cmpl
imul
enter
push
out
fisttpl
mov
adc
mov
ja
dec
sbb
lcall
insb
inc
js
leave
mov
movsb
add
shlb
pop
xor
mov
fdivrl
mov
cmp
inc
aam
repz
fs
sbb
dec
imul
into
out
inc
imul
mov
bound
xchg
fstpl
insb
test
dec
mov
rcrl
je
sbb
outsb
pop
cmp
push
cmp
xchg
inc
or
cmp
mov
insb
jmp
dec
xchg
scas
dec
loop
test
pusha
lods
sbb
inc
ficomps
and
icebp
xchg
sti
jno
iret
dec
push
adc
inc
cld
or
sub
push
mov
loope
mov
mov
cmp
rclb
jne
lea
lahf
xlat
xor
push
fcmovne
jg
mov
adc
scas
into
inc
outsl
ret
leave
outsl
ljmp
push
lods
cltd
cmp
or
xor
cmp
xor
and
lods
push
mov
mov
mov
mov
xchg
movsb
rorb
repz
mov
repz
dec
push
push
ds
inc
mov
bound
lock
pop
lahf
jecxz
adc
outsb
pop
sbb
mov
add
clc
lea
dec
adc
xchg
dec
jbe
pusha
mov
pop
leave
inc
jno
jmp
jmp
imul
push
xor
add
fisttpl
adc
push
cmp
xor
lock
mov
stos
xor
inc
scas
das
xchg
ljmp
add
lret
mov
iret
push
notl
pop
iret
sub
std
push
push
aaa
jle
push
cmc
cmp
adc
ljmp
pop
dec
push
cmpsb
cmp
add
and
jge
gs
movsl
sbb
dec
jmp
das
nop
xchg
adc
mov
imul
jno
xor
inc
xchg
cltd
aaa
sbb
fwait
je
cmpsl
dec
cmp
test
add
jo
sbb
jns
xchg
inc
dec
test
fs
pop
insb
gs
push
je
cmp
adc
dec
cltd
sbb
mov
push
push
stc
mov
xchg
sub
mov
fistps
and
les
lret
and
ljmp
adc
sbb
adc
cmc
jg
cmp
test
or
and
inc
imul
mov
fiadds
ss
sub
es
repnz
lret
aad
push
jbe
ret
aas
loop
adc
mov
inc
mov
mov
sub
ret
pop
clc
ret
inc
sbb
clc
out
inc
jmp
stos
dec
xor
or
cs
je
fmuls
add
imull
repz
ja
cwtl
cli
icebp
jmp
xor
adc
push
dec
imul
xchg
sub
subl
pop
dec
xor
jns
push
hlt
push
ret
test
push
sbb
xchg
lea
outsb
and
xchg
and
and
mov
mov
repz
dec
je
and
repnz
sub
jbe
cmp
in
dec
jb
hlt
pop
xchg
xor
addr16
pop
pop
adc
in
mov
add
test
lret
repnz
mov
cwtl
aam
outsb
or
repnz
mov
mov
push
jmp
std
mov
xlat
mov
push
test
ljmp
shl
mov
out
mov
sub
inc
or
lcall
push
bound
int
sarl
pop
imul
pushf
or
es
mov
testl
lock
adc
sub
or
mov
pop
std
pop
push
lock
in
xchg
adc
frstor
outsl
cmp
add
and
nop
dec
data16
imul
test
adc
pop
inc
sbb
lret
les
push
or
and
inc
mov
je
cmpsb
xor
add
cmpsb
loope
je
mov
sbbl
and
or
cmp
cmp
lea
into
ljmp
inc
lahf
lret
rcll
loop
cmpsb
mov
mov
movl
addb
popa
and
sbb
xor
pop
xchg
pop
andl
outsb
jge
stc
imul
stc
aad
out
sbb
lods
rcll
cmpb
xchg
nop
sarl
pop
pushf
nop
std
popf
ret
mov
outsb
xchg
loopne
outsl
and
xor
mov
pop
push
jbe
push
push
aam
jo
inc
sub
pusha
lods
ror
jnp
in
stc
sbb
add
pop
ja
dec
pushf
cwtl
insl
imul
pop
xor
inc
pushf
add
cltd
jp
mov
xchg
sbb
xchg
testb
xor
mov
data16
push
or
and
jl
inc
mov
sub
mov
test
xchg
mov
push
xor
aam
mov
xchg
mov
push
jb
jecxz
dec
dec
and
inc
add
stos
insl
sbb
push
adc
sub
dec
mov
dec
out
sub
xor
pop
jecxz
push
jb
push
shr
inc
sbb
nop
mov
loop
inc
fstl
test
add
pop
mov
sahf
in
insl
adc
shrl
mov
pop
jb
adc
imul
fs
or
pop
inc
push
cli
shlb
inc
daa
ljmp
push
pop
mov
stos
jmp
outsb
mov
arpl
and
jp
pop
pop
shlb
data16
dec
in
stos
mov
jo
push
movsb
call
xor
mov
push
add
outsb
xchg
cmpl
add
pop
pop
pop
push
sbbb
lods
out
ja
stc
or
pop
nop
insb
loopne
xorl
mov
jp
mov
jp
insl
fxtract
mov
cmp
sbb
inc
cmp
mov
loope
adc
jns
in
or
xchg
gs
stos
dec
xchg
cmp
or
add
push
mov
push
dec
loope
push
lcall
mov
cmp
mov
lret
sti
lret
lcall
ss
js
mov
jne
pop
rclb
xchg
adc
fdivl
mov
jge
cld
negb
add
repnz
fcmovbe
fldcw
sti
nop
mov
dec
pop
mov
imul
xchg
addr16
hlt
pop
xor
dec
xor
das
ja
cmp
lcall
shlb
add
jle
enter
mov
sub
fdivl
push
dec
rorb
pop
stos
ret
andl
xlat
add
std
aas
jp
addr16
sbb
and
pop
outsl
fcompl
push
outsl
xchg
jnp
push
fadds
insl
dec
jno
mov
lret
andb
push
mov
ljmp
cld
push
out
sbb
clc
pop
xorb
mov
dec
cmpl
xchg
xor
mov
inc
mov
xor
ds
or
jo
push
sbb
jg
test
jl
mov
push
lds
lods
js
sbb
pop
xchg
lea
aas
xor
jp
jl
ljmp
pop
negl
xchg
enterw
jnp
dec
insl
orb
loopne
cld
xchg
bound
aad
in
iret
cltd
and
fwait
pop
mov
repnz
fstps
lea
mov
stos
mov
cmp
testb
jb
mov
testl
fs
fldcw
sub
imul
cmp
mov
rorb
mov
push
push
mov
dec
pop
lds
aaa
adc
dec
enter
pop
xchg
cmpsl
je
lret
shl
out
push
addr16
sbb
stos
inc
dec
out
addr16
dec
cmpsl
insb
out
mov
dec
mov
je
push
loopne
popa
sub
push
cmp
adc
sub
adcl
mov
out
jnp
sub
inc
cwtl
add
imul
add
dec
dec
lea
dec
imul
data16
cli
adcl
popa
ret
push
sbbb
mov
push
inc
adc
sub
std
xor
es
lret
ret
lods
negb
aaa
cld
xor
or
jb
scas
pop
scas
insl
jmp
fldz
shl
jmp
repnz
jb
jmp
cmpsl
push
mov
fstpt
cmp
mov
sahf
add
out
xor
adc
pop
in
sbb
pushf
xor
mov
mov
mov
adcl
je
imul
aaa
push
dec
nop
jbe
jp
xor
adc
xor
loopne
mov
inc
lret
sub
jle
in
sub
pop
mov
cmp
insl
dec
fldenv
or
pusha
xchg
mov
jl
xchg
inc
push
cs
adc
jbe
and
add
out
ds
roll
das
mov
call
mov
push
push
dec
lds
fisubl
pop
mov
sbb
jne
clc
mov
sti
dec
arpl
mov
push
in
lret
push
push
cltd
scas
into
xor
lahf
xlat
fisubrs
arpl
mov
lret
inc
enter
ja
insb
imul
mov
sbb
push
jae
addr16
sbb
lods
lock
pop
adc
and
cltd
fisttpl
cmp
popf
mov
rcrb
adc
sti
push
inc
pop
and
ss
cmp
mov
dec
cwtl
sbb
loopne
fisttpll
pop
shlb
test
inc
stos
mov
jb
mov
mov
mov
jnp
imul
cmp
scas
push
xchg
pop
xor
fnstcw
out
ja
or
or
sub
and
rcr
test
add
mov
pop
jb
jns
mov
cld
fwait
sbb
inc
lret
ss
jecxz
pop
int
scas
or
pop
out
mov
cmpb
mov
in
xchg
in
insb
jge
ja
pop
xchg
lods
icebp
loopne
pop
jl
xorb
mov
inc
and
js
addr16
adc
enter
ret
sub
adcl
test
xchg
sub
dec
mov
data16
xchg
mov
inc
cmc
pop
pop
fildll
insl
and
loope
xchg
and
fcoms
xchg
les
lret
in
icebp
inc
sbb
xchg
jb
inc
and
sbb
mov
mov
adc
dec
lock
push
enter
sbb
adc
aam
or
std
inc
aaa
es
xlat
dec
scas
ja
lods
jae
xchg
jmp
out
jmp
loop
lds
push
jmp
pusha
lods
lcall
popa
mov
sbb
into
sbb
std
enter
pop
push
ljmp
pop
inc
fldl
xor
dec
mov
loope
sbb
pop
xchg
insl
push
mov
repz
test
out
outsb
lea
daa
sbbl
xchg
xlat
test
je
pop
fnstenv
jecxz
cmp
fucom
fcoml
mov
js
pop
ud2
dec
test
sub
out
leave
lds
pop
cli
lahf
dec
cmpsb
adc
dec
aam
mov
pop
or
fs
hlt
jns
cmp
repnz
es
adc
pop
icebp
xor
mov
aad
scas
pop
mov
lcall
cmp
jp
lods
hlt
jne
das
loope
mov
adc
inc
xor
insb
outsb
xor
sbb
stos
out
mov
pop
and
push
nop
movsb
mov
pop
mov
or
lds
out
insl
xchg
add
cmp
loope
pushl
cwtl
sub
cmovns
movsb
fwait
aam
mov
mov
jge
and
mov
xchg
out
add
adc
mov
fstpt
cmp
outsb
inc
push
xorb
jnp
loope
cwtl
lock
dec
mov
xchg
ds
outsb
shll
test
pop
push
adcb
sbb
push
lret
bound
lcall
push
shll
pop
jecxz
ja
es
aam
sbb
sub
xor
mov
ds
sub
aam
leave
movsb
inc
aam
xor
loope
push
scas
pop
jp
mov
xchg
test
cmp
inc
imul
lret
or
xchg
push
pop
jb
call
add
pop
aam
or
push
mov
icebp
dec
repnz
gs
nop
adc
sahf
sub
jmp
mov
adc
cwtl
pop
push
mov
mov
xchg
mov
pop
jg
adc
jl
out
sbb
stos
mov
into
cmp
in
in
mov
xorb
or
dec
cltd
push
jmp
clc
add
ljmp
sub
jecxz
pushf
adc
adc
and
push
cmp
xor
lcall
imul
sbb
int
imul
mov
jg
repnz
inc
xor
ret
mov
mov
mov
imul
lea
mov
jl
subb
jb
sub
mov
sbb
mov
pop
xor
push
pop
mov
xor
movsb
test
movsl
sti
rdpmc
lret
or
jnp
jnp
leave
push
xor
sub
and
scas
xor
in
xchg
ret
pop
insl
data16
fwait
aad
je
fsubl
pop
mov
xor
and
and
cmp
pop
inc
add
mov
cmp
imul
into
lds
xorb
or
pop
dec
outsl
xchg
stc
mov
lods
pusha
xchg
pusha
mov
mov
das
or
scas
push
cmp
mov
aam
mov
mov
ds
xchg
scas
dec
sahf
and
fs
xorb
adc
jns
mov
inc
cmp
loop
adc
mov
into
mov
shrl
and
pop
adc
pusha
mov
mov
insl
fcomps
inc
int
sub
jne
mov
rorl
pusha
mov
ret
xlat
inc
sbb
in
in
adc
mov
xchg
lcall
in
or
add
push
mov
lcall
mov
ljmp
daa
stos
jmp
mov
mov
out
mov
pop
mov
inc
sub
sub
mov
inc
cld
jmp
dec
mov
mov
xchg
add
daa
pop
int
adc
in
shll
sbb
inc
sub
inc
mov
sub
clc
sbb
rorb
cli
ja
lods
pop
or
xor
das
xchg
loop
or
pop
mov
test
gs
int3
jge
ret
xchg
scas
pop
sbb
pop
dec
cmp
add
pop
aam
test
lods
shl
or
addl
in
mov
push
cmp
or
outsb
cs
mov
fsts
inc
rorl
jne
jmp
and
sbb
push
sbb
icebp
and
lret
pop
pop
pop
mov
mov
mov
cs
mov
mov
cli
push
out
mulps
mov
loopne
mov
mov
sbb
sti
xchg
inc
stc
xchg
les
out
aad
jnp
icebp
push
loop
push
leave
das
mov
add
xchg
repnz
out
loope
jns
ds
adc
inc
sub
jo
scas
shl
inc
or
test
mov
cmp
mov
mov
inc
push
daa
pop
decb
ds
sub
orl
pop
movsl
pop
xchg
es
jecxz
jle
dec
adc
outsl
imul
jle
sub
iret
loope
jl
gs
in
shr
pushf
adc
cmpsb
sub
lock
out
inc
inc
xchg
mov
aad
adc
in
pop
jb
loopne
fs
loopne
das
dec
lret
pop
sbb
aam
adc
dec
sub
mov
stc
into
int
bnd
popf
push
aam
ficomps
xor
imul
iret
or
pop
out
outsl
mov
aam
add
jl
jbe
add
lods
dec
test
add
lcall
mov
icebp
pop
or
arpl
aaa
imul
or
cmp
int
or
out
movss
adc
cmp
jnp
mov
push
sbb
and
push
mov
cmp
lret
mov
jbe
call
fistpl
xor
roll
lods
jecxz
cs
pop
adc
fsts
mov
imul
xchg
in
js
popf
inc
mov
mov
sete
mov
sti
movsl
push
jne
pop
dec
ss
fimuls
dec
sbb
test
sub
adc
jnp
mov
cltd
in
imul
mov
cli
jnp
sbb
push
xchg
aas
or
sub
sbb
cwtl
jp
jecxz
hlt
cli
and
mov
fcompl
and
xchg
mov
rcrl
cmp
add
mov
or
mov
xchg
dec
insb
scas
fsub
push
sbb
pop
jae
mov
gs
in
pop
lret
fwait
repz
and
imul
cmp
nop
imul
adc
inc
popf
dec
dec
loope
jp
insl
jne
test
cmp
mov
gs
test
dec
xchg
loop
das
cmp
cli
sbbb
add
stc
fdivrs
push
mov
push
test
aaa
inc
push
push
test
jne
add
cmp
pop
jl
test
xor
int3
test
jmp
loop
fsubrs
mov
mov
jge
imull
rol
inc
cmp
push
or
stos
fisubrs
int
add
sbb
lock
jae
mov
movb
lods
ret
xchg
cltd
in
int
adc
sub
push
xchg
adc
dec
jle
mov
pop
loop
in
popf
dec
xor
and
mov
add
push
xchg
xor
mov
out
push
hlt
in
iret
cmp
outsb
das
xchg
insl
cwtl
add
adc
cmp
cs
push
mov
add
adc
addl
arpl
icebp
xor
repnz
lea
push
lret
or
in
or
mov
cli
addr16
sub
mov
or
inc
push
ret
insb
cli
pop
test
aas
scas
repz
xor
jne
mov
and
or
xorl
mov
hlt
popa
push
cltd
xlat
sub
daa
lahf
popf
fisubrl
push
rcl
pop
aas
scas
stc
mov
jae,pt
scas
xchg
out
inc
aaa
lret
mov
sbb
shll
in
pushw
test
pop
pop
idivb
jnp
push
and
notl
add
xor
fidivrs
inc
lret
gs
cli
scas
das
pop
fisttps
cmp
bound
mov
in
xchg
int
fwait
jecxz
mov
fimull
fcomps
jg
dec
leave
call
inc
mov
sub
xchg
adc
push
lcall
fadd
mov
inc
push
jne
in
sbb
sub
loop
jnp
and
std
pop
pushf
xlat
cmp
sub
mov
cmpl
add
fidivl
sub
lea
leave
sub
or
adc
inc
std
popa
imul
mov
rcl
scas
enter
inc
mov
add
add
or
shlb
aad
mov
xchg
jl
mov
insl
leave
das
mov
or
adc
es
rcrb
aad
mov
mov
cmp
lea
lock
outsb
mov
pop
xchg
cs
fistpll
notl
cmpsb
lods
and
movsb
xlat
sub
ret
mov
push
and
les
cmp
dec
cmpsb
jb
lock
hlt
cmp
mov
push
fldenv
add
cmp
jnp
iret
and
push
imul
fdivr
negb
pop
out
pusha
adc
je
ficoml
pushl
jo
int3
adc
xor
rolb
push
add
cli
in
pop
enter
mov
out
and
sub
mov
sub
sub
add
sub
cmp
cwtl
std
push
jp
jne
arpl
mov
add
fbstp
inc
and
and
mov
das
push
xchg
cmp
xchg
mov
cmpsb
mov
sub
in
roll
jge
cld
jno,pt
mov
addr16
into
fdivl
mov
jl
cld
mov
push
push
mov
mov
cltd
pop
push
xchg
cmp
and
inc
popf
pop
dec
add
shr
push
adc
sbb
outsb
adc
add
pushf
mov
or
jmp
pop
mov
sbb
mov
add
cmc
xchg
jg
insb
sub
push
dec
jecxz
in
decb
xchg
nop
push
leave
pushf
push
pop
mov
iret
repnz
call
nop
cmp
popf
push
or
jns
popf
xor
cmp
bound
cmp
dec
sahf
dec
pop
enter
loopne
cmpsb
xchg
lret
pop
xchg
push
popa
les
fidivl
inc
mov
je
je,pn
lea
inc
cltd
sub
xchg
stos
cmpsl
cltd
inc
xchg
pop
push
mov
pop
repz
jne
or
out
js
inc
dec
subb
icebp
push
dec
dec
fsubr
dec
sub
std
inc
mov
lods
pusha
jecxz
push
lock
xchg
dec
test
ret
xchg
xchg
push
int3
nop
hlt
dec
mov
orb
mov
mov
add
inc
adc
jecxz
push
imul
jno
std
cmpsb
mov
jns
pop
mov
xor
inc
or
add
inc
insl
jmp
xchg
pop
xchg
in
loop
jne
ja
xor
mov
inc
mov
push
or
repz
push
adc
inc
ret
orl
and
ret
lock
fiadds
stos
ret
pop
push
dec
icebp
je
in
xchg
add
sbb
mov
and
mov
push
cld
mov
sbbl
aam
pop
nop
movsb
repnz
dec
push
push
scas
aaa
cmp
mov
push
mov
cli
cwtl
cld
sub
pop
sahf
xchg
imul
popf
and
fnsave
fsubs
cmp
fmuls
out
out
push
dec
push
mov
shr
xchg
shrb
out
sub
int3
outsl
icebp
aaa
push
xchg
inc
jg
pop
push
push
fs
test
dec
adcb
aam
sub
push
fmuls
in
mov
cli
adc
pushf
jne
mov
or
mov
adc
rolb
sub
push
lahf
arpl
out
mov
movsb
mov
test
jg
push
int3
adc
adcb
mov
in
sub
push
add
xor
jo
jp
mov
push
int
jns
mov
sti
push
mov
push
outsl
iret
in
and
ret
jbe
add
aam
pop
pop
negl
divl
out
mov
sti
pop
cltd
data16
push
jbe
add
aam
mov
cmp
les
out
popa
xor
int
pop
inc
daa
cwtl
add
mov
addr16
out
push
fisttpll
scas
adcl
add
xchg
and
jae
lock
leave
push
int3
pop
dec
lret
jmp
repnz
in
mov
outsb
cmp
pop
dec
daa
push
or
jae
add
push
mov
cmp
inc
xchg
cmp
xor
dec
push
jb
lea
sbbb
lea
inc
sub
pop
lock
shrb
mov
fnsave
inc
ljmp
lea
jae
xchg
cli
xchg
push
in
pushf
jne
int
jle
jle
cmp
sbb
lods
pop
mov
adc
adc
mov
iret
xchg
push
sub
jno
fisttpl
shrb
mov
hlt
or
push
push
orb
leave
lahf
xchg
inc
loop
xchg
inc
jg
rcrl
out
lock
xor
sbb
into
mov
movsb
adc
xchg
loopne
sub
clc
andl
rolb
inc
cmp
outsl
aaa
or
sbb
adc
idivb
movsl
movd
and
push
in
lcall
sbb
mov
jns
xlat
lods
pop
jl
cli
pop
xor
mov
mov
push
inc
mov
add
jbe
aad
dec
es
cmp
and
adc
pop
mov
push
mov
mov
jge
mov
mov
push
or
sub
pop
test
add
mov
jl
push
sbb
cwtl
movsb
and
adc
sahf
cmp
mov
out
lret
adc
ss
sar
cwtl
imul
repz
inc
test
sub
inc
sub
fwait
pop
aad
dec
dec
pop
mov
test
mov
stos
adc
mov
dec
jo
inc
xchg
jb
sbb
push
push
in
cmp
clc
push
in
stos
scas
and
jle
mov
jne
insb
push
sub
jb
test
or
mov
test
sub
mov
jge
jae
neg
mov
iret
aas
cli
and
addr16
bound
push
inc
arpl
out
cs
lods
add
cmp
lret
push
aam
mov
imul
shlb
jg
repnz
inc
mov
in
popf
add
pushf
add
gs
xchg
aas
pop
cmpsl
in
cmp
xor
cli
filds
adc
inc
imul
popl
insl
xor
andl
clc
fisubrl
or
int3
push
xor
and
sub
pop
pop
cltd
scas
mov
test
fwait
mov
pop
mov
shll
pop
sub
jmp
inc
xchg
lods
xchg
jne
add
rorl
push
out
call
ret
imul
add
sahf
stos
movsb
sub
push
pop
inc
mov
dec
mov
and
adc
jbe
movsl
cmc
pop
stos
test
xor
pop
leave
loopne
lods
jmp
push
xor
sub
lods
test
mov
mov
ret
repz
and
xchg
push
mov
add
pop
xor
cmp
pop
cmp
adc
lret
inc
ss
xlat
sbb
pushf
mov
out
aad
in
sahf
fidivrs
negb
dec
pop
adc
xchg
pushw
dec
jp
sub
add
ss
mov
rorl
mov
pop
scas
mov
add
push
in
or
fidivs
loope
rcrl
mov
lea
xor
shrl
inc
aas
sub
cmc
outsb
js
ret
pop
xrelease
cmp
pop
mov
orb
mov
mov
testl
adc
dec
add
in
sbb
sbb
push
sbb
pop
stos
mov
mov
mov
rorb
mov
dec
lds
pushf
jne
inc
pop
bound
leave
test
cmpsb
ja
pop
cmp
loopne
and
out
fcmovbe
xor
xchg
push
imul
ss
icebp
fs
cltd
arpl
rcr
xor
sbb
adc
ja
sub
das
out
fildl
aas
xlat
movsl
cmp
adc
mov
jnp
mov
stos
pop
ss
je
add
adc
out
outsl
leave
pop
or
or
repnz
mov
les
sbb
outsl
movl
hlt
int3
cmp
xchg
pop
call
xor
ret
adc
mov
cs
leave
sub
or
mov
xor
jno
cmp
pop
mov
mov
xor
in
or
outsb
inc
rorl
sbb
mov
fs
insb
xchg
mov
scas
out
faddl
dec
adc
pop
fstl
dec
and
in
mov
movsb
adc
jp
jnp
inc
and
xor
mov
jbe
stos
push
sbb
aad
cmp
and
shrb
xchg
dec
add
addb
push
mov
mov
in
mov
ror
outsb
es
shll
imul
pop
pushf
pop
in
sbb
inc
je
pop
cmpb
sbb
jb
sub
xchg
in
sub
cmpsl
into
sarb
movhlps
dec
movsl
sbb
mov
ror
ja
dec
pop
nop
or
sti
cs
repz
daa
rcrl
xchg
ljmp
push
xchg
pop
xor
sbb
out
lods
and
inc
jp
outsb
aad
xor
pusha
in
mov
pusha
jmp
sbb
in
fistps
jns
xchg
sbb
sbb
icebp
mov
sti
xchg
fdivrs
mov
mov
jge
loop
jnp
insb
fsubrs
pusha
icebp
mov
mov
push
jl
pop
inc
pop
lcall
cmc
pop
adc
cmp
sbb
xor
inc
shll
xor
jne
in
push
out
inc
shll
aad
and
out
clc
push
int
xorb
cmp
adc
jne
stos
mov
mov
jge
pop
iret
jg
js
das
aaa
mov
mov
nop
outsb
aam
or
or
jbe
and
test
test
ret
and
es
or
push
push
mov
push
lcall
xor
inc
add
out
push
jbe
hlt
lea
outsl
mov
push
fiaddl
inc
adc
sub
cld
repz
lods
lock
cwtl
sbb
xor
out
xor
inc
sahf
jb
mov
cwtl
shlb
shll
aas
jp
in
pop
pop
addr16
insb
adc
sbb
ret
mov
mov
fisubl
jns
adc
xchg
arpl
pop
cld
jo,pt
or
lods
fbld
iret
push
and
scas
mov
mov
es
mov
test
sbb
in
dec
add
stc
pop
xor
fstp
lods
dec
adc
lods
lahf
lret
out
pop
sub
mov
stos
sbb
in
push
cld
je
sub
push
in
je
dec
aam
push
mov
sub
movsl
sbb
test
faddp
mov
sbb
xor
mov
or
mov
dec
mov
leave
pusha
mov
test
cli
cmp
xchg
cmpsb
mov
sti
jae
xchg
add
je
mov
and
adc
xchg
jle
or
jg
pop
mov
js
cmp
daa
outsl
cltd
repnz
cmp
push
mov
push
inc
sub
pop
dec
pop
dec
imul
inc
ret
mov
cmpsb
scas
push
pop
lcall
test
jae
imul
mov
sti
je
fisubrl
in
jno
vmovddup
mov
movsl
cmp
push
pop
pop
jb
xorl
std
xchg
mov
aas
mov
dec
je
pop
jmp
inc
cmp
pop
push
xchg
mov
loopne
sarb
jg
sbb
sarl
fistpl
ja
jns
mov
subb
mov
popa
dec
inc
rcl
xchg
pusha
mov
pop
out
movsb
cli
cmp
in
insl
cmp
mov
dec
xchg
ficompl
and
sub
jg
sbb
dec
fcompl
test
mov
lahf
shl
and
sbb
push
inc
mov
mov
cld
mov
aas
nop
insb
pop
mov
mov
pop
mov
sub
inc
stos
pop
add
frstor
mov
jle
rol
adc
sub
out
daa
or
dec
add
in
in
ret
mov
or
cltd
lds
mov
les
stos
xlat
mov
out
push
mov
sub
xor
mov
push
arpl
and
mov
push
jge
mov
imul
call
nop
int
sub
mov
cmp
dec
fst
iret
sbb
ja
stos
sbb
ss
aaa
cmp
and
sbb
pop
imul
xor
loopne
adc
mov
out
or
adc
mov
lcall
push
test
out
daa
push
jnp
push
dec
push
add
dec
xor
xor
mov
pop
out
ja
mov
fcoms
inc
cli
and
addr16
push
imul
aad
sub
adc
cmp
sub
push
outsb
mov
xchg
aam
aam
mov
xor
popa
popf
imul
or
mov
test
enter
cwtl
dec
rcrl
or
aam
xchg
cwtl
loop
fistl
jnp
mov
in
cmp
adc
adc
aam
cltd
pop
add
inc
stc
mov
inc
add
xchg
push
loop
test
popf
es
in
dec
mov
sbb
test
sti
push
sbb
insb
es
in
mov
loop
dec
daa
inc
aaa
stos
movsb
outsl
ficomps
jns
in
sbb
pop
push
cmp
in
xor
movsl
ret
cwtl
jne
cs
mov
sbb
negl
dec
js
sahf
jns
pushf
int
ds
fs
repnz
add
add
cmpl
push
push
stos
adc
or
outsb
mov
and
pop
dec
mov
cmp
xchg
les
out
xor
fnstsw
mov
std
pop
cmp
pop
popa
xchg
jbe
mov
test
fwait
push
lahf
jle
dec
gs
stos
lcall
jns
push
ja
mov
les
cltd
popa
sbb
push
scas
clc
popf
lock
bsr
mov
push
or
sub
ret
jecxz
stos
hlt
xchg
add
jl
xchg
add
pushf
xchg
jp
inc
push
xor
repnz
push
xor
or
and
loopne
push
push
mov
cmp
xchg
jmp
test
scas
sahf
and
lea
and
inc
pop
or
dec
xor
xchg
ja
outsl
add
dec
cmp
fwait
xchg
sahf
fsubr
inc
arpl
ljmp
inc
sbb
add
imul
scas
jb
int3
popa
jl
addr16
inc
sub
hlt
and
outsb
faddl
push
test
sub
outsl
into
xchg
dec
cs
mov
stos
mov
mov
sbb
leave
outsb
and
gs
jp
es
sub
loop
jl
dec
out
arpl
into
sbb
in
ss
in
stos
cwtl
xchg
mov
ret
inc
jge
ds
sub
repz
lods
sbb
adc
and
hlt
xor
sti
jmp
xor
push
in
xor
imul
or
sarl
cltd
std
or
mov
imul
mov
sbb
jecxz
outsb
push
dec
ds
jns
xorb
loope
mov
push
pop
pop
inc
repz
xchg
stos
insl
jo
mov
xchg
test
leave
enter
mov
pusha
fcmove
xchg
jns
cltd
pusha
icebp
sub
jb
sbb
adc
es
insl
or
imul
pop
in
or
pop
ret
in
jnp
fisttps
aad
cs
cs
mov
dec
insl
pop
pop
push
mov
mov
lods
mov
cmp
and
lods
dec
pusha
mov
xchg
add
ljmp
cmp
jle
aad
mov
jns,pt
mov
fwait
cltd
pop
xchg
xchg
mov
jae
inc
shlb
or
sub
pushf
mov
enter
mov
sbb
out
mov
cwtl
hlt
rorb
jnp
cmc
shl
or
adcl
lahf
shrl
mov
and
pop
pop
loopne
sub
push
push
ror
jno
pop
mov
push
add
in
hlt
aas
aam
jmp
and
lret
xor
sub
lea
mov
out
mov
push
rorl
pop
shrb
push
loopne
xchg
mov
lock
les
jae
jecxz
xchg
sarb
xchg
enter
jmp
mov
pusha
movsb
iret
movsb
push
xor
xchg
ja
dec
aas
frstor
test
xorb
push
loope
xlat
xor
insl
jo
repnz
imul
xlat
js
mov
pushl
stc
add
add
hlt
jmp
mov
push
int
add
outsl
sbb
outsb
or
xchg
inc
xlat
add
ja
test
sbb
xchg
xchg
sarl
mov
jl
das
test
aaa
mov
rcl
xchg
lds
outsl
sub
push
cs
xlat
jae
in
lret
mov
cwtl
movsb
sub
and
mov
dec
mov
in
lods
lock
and
pop
ljmp
inc
cwtl
mov
mov
sub
and
call
popa
cmp
cwtl
inc
inc
inc
sbb
bound
jbe
negl
xor
aas
jp
jmp
pop
sbb
jno
into
das
ds
jno
rcrb
imul
xchg
ds
add
push
stc
xchg
sub
notb
and
shr
sarl
jle
xchg
lock
ss
xchg
jecxz
mov
imul
mov
cmp
ja
ret
not
pop
je
loope
movsl
into
and
xor
push
int
mov
mov
adc
xchg
inc
mov
or
orb
les
nop
inc
sahf
jl
loopne
sbb
xchg
rorl
out
out
test
or
jle
sub
push
daa
mov
adc
pop
repnz
push
lods
lcall
mov
xchg
jge
sub
sbb
call
xor
pop
imul
insl
cmc
jg
jg
out
mov
xchg
xchg
repnz
stos
lret
mov
inc
push
pop
adc
not
push
jno
mov
aaa
mov
popl
sti
hlt
add
add
testb
loop
cwtl
fstpt
sub
fidivrl
fdivl
pop
push
leave
mov
or
push
push
xor
inc
int
stos
ret
lods
lcall
dec
dec
btr
xchg
lock
sbb
mov
pushf
call
das
lea
sub
dec
cs
cmp
jle
xchg
bound
shrb
mov
jp
cltd
mov
inc
xchg
cmp
or
leave
sbb
adc
mov
cmp
xor
inc
mov
outsl
push
je
sahf
sbbb
push
outsl
cmpl
test
loopne
mov
push
push
dec
jmp
jo
or
mov
push
ljmp
insb
push
arpl
xor
push
and
repz
jecxz
mov
loopne
xchg
leave
and
call
xchg
mov
mov
xor
movsl
jns
add
std
or
aas
int
adc
fsubrs
inc
jg
cmp
test
push
imul
in
aas
sub
and
jmp
push
jnp
aas
xor
loop
scas
hlt
cmp
mov
sub
mov
mov
xchg
enter
out
fldt
cmp
adc
aas
push
mov
insb
inc
cmp
mov
xor
mov
bound
push
stos
daa
into
xchg
mov
pop
jmp
xor
rcrb
xchg
mov
pop
add
xor
dec
out
xor
adcl
xchg
push
int
gs
aam
cltd
andb
les
das
int
xchg
mov
insb
shlb
push
and
adc
push
inc
jne
pop
notb
pop
shr
cmp
mov
mov
int3
fs
loop
mov
cmp
jecxz
std
adc
sbb
xor
pop
dec
jo
jo
pop
movsb
dec
pop
int3
adcb
popa
fidivs
test
hlt
stc
pop
lret
dec
cli
xchg
cwtl
lahf
aad
fisubs
xchg
xchg
jne
repz
sbb
jecxz
xlat
mov
hlt
loopne
mov
gs
into
shll
xor
ret
push
ljmp
inc
jl
adc
xchg
icebp
scas
imul
dec
not
mov
lds
scas
dec
rolb
int
cs
test
fisubl
cmpsl
xor
into
lcall
mov
dec
mov
jb
imul
xor
movsb
pop
xor
repz
shlb
loop
hlt
pop
lea
mov
fdivrs
ret
lcall
loope
adc
or
pop
sti
cltd
cs
mov
test
xor
mov
dec
mov
fwait
dec
jmp
outsb
or
mov
cmp
or
pop
xor
cmp
test
inc
std
rorl
inc
mov
mov
mov
or
scas
clc
sub
mov
mov
rcrl
mov
jge
mov
scas
pop
mov
es
push
sti
int3
sub
and
xorb
lock
mov
and
std
jp
mov
or
dec
mov
mov
call
mov
cmpl
lret
mov
add
jg
xlat
data16
imul
mov
mov
arpl
out
movsb
lcall
mov
mov
popf
js
aad
mov
subl
popa
test
inc
sbb
push
or
pop
inc
cmpb
sbb
addb
mov
sub
popf
adc
mov
ret
aam
cld
fbld
inc
arpl
in
xor
mov
ret
jns
inc
and
sub
shll
pop
xlat
iret
popf
pop
jns
mov
lock
or
fldenv
add
jne
sbb
cmp
push
lods
std
pop
and
xor
add
sub
push
jl
xchg
cmp
outsb
mov
jle
es
stos
into
popf
hlt
xor
mov
pop
in
hlt
lcall
mov
in
loope
or
xor
xchg
mov
das
in
pop
test
push
ret
fs
ret
mov
cli
jae
stos
push
enter
add
mov
or
int
push
or
or
pushf
int3
push
mov
xchg
sti
xor
in
jmp
das
adc
sbb
nop
sbb
repz
fwait
in
test
xchg
inc
es
jle
mov
call
add
jns
jno
fcomi
push
inc
nop
pop
inc
scas
jnp
xchg
mov
jl
inc
mov
je
imul
mov
ret
sbb
ljmp
push
scas
into
push
sar
jns
fiaddl
in
and
scas
stos
push
push
cmp
push
dec
and
leave
pop
cltd
lock
mov
sbb
xchg
or
mov
out
jle
add
frstor
adc
les
jns
je
pop
xchg
je
cmc
inc
inc
or
push
pusha
lods
in
arpl
pop
jp
je
xchg
sub
or
orb
and
lcall
jecxz
add
cld
call
pop
sbb
add
xchg
sbb
push
iret
mov
dec
ret
mov
push
jmp
std
push
cmp
fs
int3
and
jp
pop
psubusw
xchg
ljmp
pop
mov
mov
ret
outsb
push
ret
jae
mov
jnp
pusha
pop
mov
and
cmp
add
mov
js
sti
cmpsl
dec
lret
adc
mov
mov
jno
add
js
xchg
repnz
push
scas
xchg
cmpsb
jo
push
and
cld
fwait
mov
xchg
lods
lret
mov
lock
and
arpl
popa
in
dec
xor
xchg
insb
lds
xrstor
subb
insl
pop
add
inc
adc
push
xchg
ficoms
xchg
mov
in
mov
outsb
lds
in
jge
inc
nop
push
xchg
cmpsl
enter
or
xchg
jecxz
cmpsl
call
fldcw
xor
jo
repnz
sbb
and
dec
cwtl
dec
sbbl
sarb
hlt
xor
mov
inc
dec
out
push
mov
cs
adc
fdivrs
pop
cmp
ret
mov
jge
xlat
sub
jbe
fdivrp
and
loop
popa
pop
fiaddl
iret
adc
add
add
testl
add
mov
aam
push
addb
mov
ret
sarb
xchg
push
les
leave
lret
push
inc
mov
adc
xorb
mov
push
xchg
sbb
arpl
loope
xor
loope
loop
movsl
push
in
dec
js
or
gs
leave
and
xchg
push
inc
movswl
repz
mov
aaa
in
mov
ficoml
sub
add
mov
mov
ljmp
dec
mov
mov
inc
and
mov
xor
xor
loope
bound
adc
pushf
or
mov
ficomps
sub
out
and
cmp
es
aad
xchg
clc
xchg
push
mov
jecxz
incl
sbb
lahf
arpl
cmp
out
add
into
cli
mov
sbb
bound
cmp
or
shlb
mov
add
mov
xor
js
jge
dec
outsb
loopne
adc
jg
mov
lahf
imul
xchg
rcrl
ljmp
jge
mov
das
test
aad
test
bnd
out
xchg
stos
test
jno
jle
sbb
jae
fwait
pop
cld
sti
out
pop
ljmp
popa
xchg
leave
mov
ret
push
incb
inc
mov
inc
fwait
test
sbb
inc
daa
popa
rolb
inc
mov
pop
mov
pushf
mov
xor
leave
mov
pop
test
inc
cmpsb
xchg
lods
aad
shll
and
push
outsb
xlat
push
xor
push
negl
or
scas
sub
sarb
jl
aaa
cmp
arpl
pop
mov
cmp
mov
out
repz
cltd
mov
mov
leave
lock
scas
fwait
xor
cmp
iret
dec
cmc
jg
dec
mov
sub
scas
icebp
pop
decb
jne
sti
push
data16
jl
sub
movsb
rorb
aaa
ret
lcall
aas
cmp
adcb
jmp
mov
push
cmc
mov
dec
jmp
dec
repz
cmp
in
adc
aam
insb
jg
xor
xlat
jge
and
push
pop
push
mov
xor
inc
cwtl
shl
rcrl
cli
push
das
adc
movsb
outsb
xchg
fs
sub
lcall
lret
pop
ficompl
lds
sbb
push
dec
ret
shlb
pop
mov
in
test
or
add
push
subl
inc
leave
inc
mov
outsl
sbb
int3
pusha
add
mov
insb
fcmovb
pop
jnp
mov
jno
cmpsb
or
xor
sub
adc
cmpsb
sbb
fmull
cltd
daa
ds
imul
xchg
shll
loop
xchg
jge
xchg
int3
gs
ret
sbb
xbegin
mov
add
rcr
and
or
xor
xor
dec
pop
xor
cmp
and
aad
jg
cmp
push
sbb
nop
sbbl
inc
push
fs
mov
mov
pop
std
cmp
mov
pusha
jge
or
popf
cmp
inc
mov
cmp
jb
and
jnp
xor
cmpsl
mov
daa
adc
jle
clc
ret
in
arpl
pop
jmp
les
sub
mov
add
mov
sbb
outsb
jns
in
pop
loopne
adc
cli
inc
cld
filds
addr16
out
test
mov
ficoml
adc
sbb
mov
or
test
pop
inc
ret
jecxz
jns
movsl
mov
test
mov
push
es
jnp
dec
and
sbb
push
rorb
out
push
sub
sub
xchg
sahf
outsl
fadd
into
cmp
das
outsb
leave
mov
adc
scas
lods
jp
ficoms
inc
mov
dec
pop
xchg
in
jae
call
scas
sbb
xchg
ret
ss
in
mov
mov
into
push
fistps
cmp
jbe
popf
aad
dec
insl
imul
lods
rcrb
fcoml
ds
std
movsl
push
dec
adc
addr16
iret
ss
xor
inc
fsubrs
mov
mov
push
push
xor
enter
insl
mov
arpl
pushf
arpl
sbb
clc
mov
popa
repnz
lcall
adc
fdiv
in
cmp
adc
das
sub
pop
add
pop
leave
in
or
push
add
fs
fld
orl
rclb
xchg
and
lcall
xlat
in
sub
divl
and
adc
mov
imul
sar
mov
pop
fwait
loope
fidivs
mov
pusha
push
pop
xchg
sub
cmpsb
lret
jmp
sub
sub
addr16
xorl
arpl
xor
adc
dec
pop
in
jo
dec
cmp
xchg
cmpsl
xor
mov
or
out
sbb
jge
add
jl
add
ljmp
loopne
jae
jno
cwtl
push
data16
or
mov
dec
lock
gs
mov
int
jns
and
sub
movsl
out
xchg
xchg
out
lret
je
cmp
mov
sub
inc
mov
xor
jnp
and
jle
hlt
jg
stc
lock
inc
jl
pop
movsb
xor
xor
push
fucomip
or
jo
jmp
or
jo
or
mov
dec
xchg
inc
ss
aas
push
mov
adc
mov
inc
add
fnstenv
push
les
je
insl
rcr
inc
xchg
scas
mov
fwait
adc
sbb
xor
sub
leave
sub
in
call
insb
jecxz
mov
pop
popa
bound
enter
mov
je
cmp
stc
mov
or
sub
movsb
mov
mul
push
mov
lods
inc
xchg
aam
fildl
sbb
addr16
std
add
int3
pop
mov
mov
fsubr
loope
daa
pop
mov
orb
jp
pop
lea
test
cmp
loope
jno
test
lret
add
xchg
adc
jbe
imul
xor
sbb
dec
inc
adc
sbb
jge
and
mov
scas
add
bound
in
in
or
xchg
pop
cmp
mov
cmp
sub
adc
xchg
pop
sbb
adc
call
dec
push
add
repz
xor
push
push
mov
inc
aaa
sbbb
lret
dec
xchg
pop
test
mov
insb
jae
test
call
in
xor
js
or
cmp
data16
mov
or
arpl
in
pop
mov
pushf
repz
fldl
cs
shrl
inc
js
inc
test
mov
adc
in
push
jns
lcall
addr16
jnp
pop
mov
je
jno
out
xor
inc
adc
push
loop
stc
aad
call
jne
pop
xchg
xchg
mov
daa
or
shrl
sbbl
xor
hlt
or
add
jp
adc
jae
mov
out
jbe
in
sbb
adc
pop
ss
inc
orps
pop
lret
cmpl
sub
pop
mov
ret
adc
in
lods
insb
fidivl
dec
pop
adcb
call
fstpl
pop
out
dec
fs
jnp
sub
ss
jecxz
in
bound
xchg
loopne
sub
dec
add
mov
push
js
movsb
andb
into
pop
pushf
push
add
inc
out
ljmp
dec
sbb
dec
test
test
jb
leave
add
ret
test
dec
rcrl
out
jg
push
and
mov
push
push
fisttps
pop
dec
popf
cmp
jae
outsl
sbb
pop
enter
scas
inc
cmc
jbe
cmp
aad
xchg
sahf
jp
adc
xor
out
jns
flds
loop
pop
stos
fsubr
mov
mov
dec
jb
setg
mov
pop
and
jmp
sahf
lcall
sub
push
insl
and
inc
jno
adc
mov
ljmp
mov
mov
lahf
into
fistps
jo
test
and
scas
rolb
mov
and
inc
loopne
push
push
dec
push
rcll
push
push
mov
cli
sbb
push
pop
jbe
pusha
shlb
jmp
call
je
in
sahf
mov
xchg
in
push
pop
push
sbb
pop
cwtl
jge
dec
sub
rolb
loop
sbb
pop
mov
and
xchg
pop
xchg
push
cmp
mov
scas
mov
push
inc
adc
lea
lock
daa
pop
mov
dec
jnp
outsb
jge
mov
aam
movsl
cmpsl
testb
inc
mov
in
mov
pop
mov
mov
cmpsb
in
pop
push
inc
push
dec
fwait
mov
sub
adc
fisubrl
repz
cmpsb
aad
dec
mov
sub
push
jnp
mov
stc
push
sbb
mov
jo
dec
js
arpl
xchg
addb
xor
out
mov
and
mov
cmp
inc
rol
and
pusha
mov
mov
mov
push
loopne
rcrl
xchg
xor
fidivrl
add
js
pushf
in
push
ljmp
icebp
loop
pop
arpl
call
test
xor
mov
fisubrl
xchg
adcb
repz
lahf
push
adc
lcall
sbb
nop
orl
dec
inc
je
push
fistpll
mov
push
xlat
and
sbb
jns
or
nop
into
pushf
not
stc
add
in
xorb
out
popa
cld
cmp
xchg
jecxz
lods
dec
cmc
dec
cmpsb
arpl
leave
xlat
pop
in
jg
int3
add
lret
fs
mov
cmp
js
cltd
mov
js
sbb
push
cmc
pop
mov
lods
mov
in
pop
jnp
xchg
cmp
call
pop
jo
mov
cs
mov
hlt
xor
arpl
outsl
fbld
fstps
lret
inc
lcall
lahf
cmp
mov
sahf
jl
je
jno
lahf
ds
movsb
cwtl
out
xchg
fdivrs
cmp
fsubl
sar
mov
dec
inc
shl
leave
and
jo
lahf
xchg
and
in
push
dec
inc
sub
shrl
jae
aad
xor
mov
xor
sti
not
iret
scas
inc
outsl
jne
xor
jmp
ret
scas
sti
xchg
js
cmp
mov
dec
out
and
push
jp
icebp
mov
jp
and
lret
test
jge
into
popa
cmp
ds
xchg
ja
jmp
out
js
cmp
push
pop
mov
ret
xchg
mov
movsl
mov
shrl
jecxz
test
add
in
mov
sbb
pop
fldlg2
mov
out
and
loop
xchg
sbb
push
jns
pop
push
fdiv
push
std
js
aad
leave
sub
dec
pop
lea
movsb
hlt
shlb
popf
pop
mov
inc
rolb
push
xchg
test
sahf
mov
scas
push
lods
test
int3
sbb
out
or
xchg
inc
movsl
out
push
or
fcompl
mov
jg
test
int
cs
sahf
mov
dec
xchg
aas
pusha
sub
xchg
das
dec
lcall
ja
out
enter
jecxz
push
fiaddl
out
push
jb
xchg
mov
out
insl
mov
lock
mov
pop
jne
popf
into
adc
dec
fdivrl
lods
inc
call
iret
jo
out
negl
clc
mov
sbb
or
aas
xchg
fwait
out
jg
sahf
lret
sbb
adc
out
in
cmp
nop
cmpl
test
xchg
sahf
cs
fcoml
fwait
pop
mov
jnp
les
add
inc
out
icebp
push
fidivl
iret
jl
popf
jo
sbb
mov
add
xor
mov
mov
xchg
rolb
lock
sub
or
cmpb
pushw
cli
frstor
dec
sti
push
rcll
hlt
and
mov
popf
loopne
mov
jmp
add
xchg
cmp
outsl
push
or
lcall
repnz
stos
and
cld
mov
push
out
xorl
cmp
clc
cli
jae
pop
imul
push
sbb
push
popa
or
push
sub
shll
push
gs
lahf
rcl
mov
je
adc
sbbb
dec
dec
jge
cmp
dec
pop
repz
test
push
jae
ret
clc
add
or
je
loopne
xor
adc
mov
sahf
xchg
jecxz
add
clc
fcoml
jb
lods
mov
lock
mov
test
mov
mov
cmp
xchg
xlat
popa
loope
jge
mul
cmpsl
sub
jl
jle
andb
std
mov
mov
inc
enter
xor
add
mov
mov
imul
xchg
lahf
sub
outsl
lcall
pop
cmp
mov
mov
ret
jmp
sbb
insl
enter
push
or
mov
cmc
add
or
shl
sbb
testl
sti
out
dec
adc
inc
jo
sub
loop
call
push
or
jb
mov
mov
xor
and
out
in
jmp
dec
je
aad
mov
xchg
add
icebp
insb
inc
imul
gs
daa
lret
dec
in
cwtl
ljmp
pop
out
fistpl
lret
mov
jmp
pop
sti
outsl
les
aas
push
push
push
imull
or
dec
sahf
jge
dec
ja
cmpsb
outsb
and
xchg
add
aad
push
jmp
ret
mov
fnsave
int3
mov
mov
add
inc
xchg
or
add
jb
mov
cld
mov
test
xlat
sysexit
iret
nop
sub
sbb
addl
fs
fbstp
sub
push
fmuls
xchg
icebp
cwtl
xchg
adc
lcall
mov
test
lret
inc
outsb
adc
cpuid
sub
xor
outsl
dec
movsl
out
ret
adc
loop
fucomi
lahf
movsb
stos
and
xchg
rcr
or
lret
jbe
mov
test
aam
sub
aad
sub
adcl
aam
add
inc
push
mov
and
jg
cmp
jge
push
and
inc
xor
mov
sbb
mov
jnp
aam
add
addr16
aam
pop
movsl
fnstenv
fstpt
cs
fiadds
sbb
cmp
aam
fdivs
push
movsb
dec
mov
xor
or
iret
inc
test
in
std
and
popf
jb
jbe
pushf
fldt
and
add
dec
pop
pop
rclb
or
and
test
sbb
sahf
rclb
and
adc
push
adc
lcall
and
into
sbb
inc
imul
sbb
xor
lret
mov
repz
and
in
and
pop
adc
mov
neg
test
clc
jb
add
std
push
or
push
out
xchg
out
cmp
push
lcall
cwtl
mov
sbb
dec
and
popa
cwtl
fsubs
addb
fstpt
mov
dec
pop
jns
out
imul
out
sti
sub
enter
cmpsb
movsl
cltd
ret
ret
aaa
or
mov
push
test
jbe
xlat
gs
mov
mov
mov
jp
push
adc
mov
cmp
gs
or
pop
insb
or
lods
iret
mov
cmp
lock
leave
stos
mov
out
cmc
mov
sbb
pop
push
xor
inc
pop
add
gs
or
or
test
incl
and
out
push
pusha
xor
mov
stc
mov
inc
fisubrl
xchg
dec
dec
lods
rep
xchg
adc
jne
lret
cld
adc
stos
stos
pop
xchg
and
pop
mov
ficompl
xchg
divb
sbb
aad
test
mov
into
push
mov
call
enter
or
xlat
xchg
lcall
fneni(8087
mov
sbb
mov
subl
das
jmp
or
or
out
nop
ss
sub
mov
jns
xchg
movhlps
popf
insl
add
bnd
fs
sbb
fldl2e
fisttpl
xchg
pop
in
jnp
test
mov
mov
sti
cmp
mov
xorb
mov
adc
ficoms
mov
loop
xor
out
jbe
xchg
cmpsl
enter
loopne
adc
xchg
add
fisubrl
mov
pop
push
jge
sti
cmp
xor
mov
or
cmp
cmpsl
push
pop
inc
movsl
in
pop
lock
cmpsl
sahf
cld
mov
cmp
or
fnstcw
call
and
or
xor
mov
pop
ret
dec
mov
cmp
movsl
mov
add
dec
scas
divl
mov
and
xchg
pop
xchg
je
mov
push
cwtl
mov
leave
jge
out
mov
push
lahf
out
fistpl
mov
jnp
mov
or
or
movsb
shlb
lock
out
and
icebp
nop
jb
xor
and
mov
loopne
push
xor
rcll
adc
addr16
bnd
inc
sarb
jmp
loop
mov
cmpsl
lcall
gs
jnp
sbb
jmp
or
inc
inc
push
lock
push
xor
xchg
call
sar
cli
scas
or
pop
leave
sarl
jmp
movsl
pop
xlat
xchg
push
cmp
in
sub
in
dec
nop
fdivrs
in
mov
jmp
pop
int
lods
mov
fs
popf
sub
dec
and
xor
in
loope
push
jg
fcomp
out
inc
clc
cmp
out
xor
xchg
or
mov
xlat
aaa
mov
sti
mov
sub
mov
nop
add
std
sub
movsl
mov
sbb
pop
xchg
adc
adc
divps
add
leave
lds
dec
notl
pcmpgtd
inc
cs
js
daa
imul
cmp
aas
shlb
sbb
fnsave
ljmp
jo
jle
adc
dec
xchg
test
xchg
jmp
into
add
nop
in
or
clc
sub
idivb
icebp
mov
jg
inc
pop
pusha
or
inc
ss
into
pop
xor
or
pop
andl
lret
add
pop
lea
fildll
push
icebp
js
lcall
lahf
lock
push
test
and
xchg
pop
pop
out
xor
daa
pop
sbb
adc
nop
imul
or
inc
insl
clc
mov
sahf
add
cmpsl
push
mov
in
jne
or
mov
xchg
or
loopne
js
stc
loope
pushl
std
out
movsb
mov
insb
test
sarl
xchg
add
aas
mov
repz
jb
subl
dec
pusha
leave
add
add
pop
imul
push
subb
fcmovu
movsl
pop
lock
movsb
pop
mov
add
sbb
psubd
xchg
mov
jecxz
cmp
das
add
xchg
cmp
data16
push
jmp
or
shlb
pop
jmp
int
cmp
dec
inc
lock
pop
xchg
mov
cmpsb
shll
clc
mov
iret
dec
setns
fsubr
mov
test
lea
sub
stos
lods
ja
xchg
xchg
add
dec
inc
popa
lods
xor
jmp
js
fdivrl
xchg
mov
cmp
xor
inc
movsb
add
es
repnz
add
mov
sub
divl
push
cmp
add
add
scas
lea
xor
mov
jmp
sbb
cmpsl
dec
mov
call
repz
nop
inc
xchg
popf
cmpb
cmpsb
mov
and
stc
xor
inc
add
push
jg
sbb
test
add
jo
pushf
mov
push
jne
stos
xor
cmp
outsb
add
mov
out
jno
mov
out
scas
mov
gs
loopne
scas
clc
cmpsb
mov
adc
or
dec
jbe
jns
push
dec
arpl
push
fnop
inc
insb
pop
movsl
sbb
jmp
mov
cmpsl
insl
adc
jg,pn
out
xchg
incl
cmp
jo
bound
dec
les
faddl
push
pop
inc
jae
or
cmp
sti
xchg
divb
and
pop
outsl
aaa
push
and
sub
xor
jb
mov
mov
push
test
sub
rorl
data16
pop
add
rol
xor
mov
call
std
sub
mov
es
js
pop
out
or
rolb
les
imul
dec
cltd
hlt
xchg
xchg
dec
pop
inc
idivb
cmp
dec
in
xor
xlat
mov
mov
sub
cs
mov
mov
scas
leave
xlat
popa
dec
imul
insl
sarl
int
or
cmp
jge
jge
xor
loopne
cmp
or
mov
xor
dec
repnz
stc
cmc
out
xor
sub
pop
xchg
pop
and
pop
loopne,pt
lret
lock
pop
xchg
mov
xor
lret
push
fidivs
mov
inc
and
les
stos
leave
fisubl
lret
fcmove
xor
arpl
fbstp
outsl
cltd
cmp
pop
mov
in
popf
inc
jmp
xchg
inc
fsubrp
dec
fisubs
cmpsb
pop
jae
push
xor
hlt
leave
inc
mov
jo
dec
add
push
imul
cmp
add
daa
xchg
wbinvd
lods
fdivs
jmp
rcll
mov
rcll
push
test
test
hlt
icebp
test
out
or
xor
mov
xor
subl
mov
and
pop
test
sti
sahf
cmp
and
or
mov
ja
pop
or
ror
or
movsl
jb
fisubrl
push
int
sub
mov
lcall
les
out
mov
pushf
stc
in
addr16
mov
or
sub
lahf
stos
add
shl
leave
lods
mov
call
pop
push
std
sbb
sub
shlb
mov
push
daa
rcrl
movsb
call
enter
inc
add
cmp
xchg
cmp
push
pop
stos
popl
rcrl
out
subl
and
iret
add
into
xor
pusha
mov
mov
pop
imul
pop
loop
dec
int3
jo
mov
push
cmp
mov
add
pop
loop
adc
pop
cmp
insl
lock
dec
jno
xchg
xor
xchg
arpl
xchg
leave
inc
scas
fildll
mov
std
clc
adcl
lahf
je
xorb
iret
add
movsl
hlt
cli
sbb
jle
jp
xchg
ret
pop
mov
ret
fistpl
mov
sub
and
jmp
push
jno
and
fwait
loop
ja
xchg
in
sub
cs
add
pop
xor
push
bnd
fdivr
xor
popf
insl
push
pop
xchg
fildl
sub
xlat
sahf
loop
adc
or
mov
xor
addr16
adc
mov
or
inc
mov
ss
clc
xor
jne
dec
dec
mov
fildll
popf
movsl
call
add
into
adc
push
in
cmp
or
icebp
mov
aad
stos
inc
imul
mov
mov
loop
dec
mov
dec
fldenv
add
jae
mov
xlat
xor
pusha
push
das
rclb
jo
imul
mov
movsl
lods
pushf
cmp
mov
ror
mov
mov
fisubs
cmpl
aad
push
xchg
xor
add
xchg
rcrl
sub
daa
ljmp
adc
test
addr16
push
pop
or
push
push
outsb
mov
push
mov
mov
push
pop
jae
les
adc
push
mov
test
mov
imul
dec
ret
jne
add
lea
dec
xchg
jb
jns
clc
cmp
into
mov
mov
stc
add
je
into
or
pop
jae
clc
ss
pop
addr16
dec
push
sub
add
jg
fimuls
jo
push
cmp
stos
movsb
in
test
std
aaa
ja
daa
sub
popf
shll
or
jae
decb
js
add
insl
out
dec
scas
adc
mov
loop
push
xor
sub
lock
bnd
cmpsb
mov
hlt
xchg
or
scas
dec
fisubs
and
xor
mov
addb
sbb
dec
inc
cmp
sbb
lahf
push
je
out
cmpsb
mov
lds
xorb
mov
iret
mov
pusha
mov
xchg
div
jle
ficompl
mov
rorl
push
ds
cmp
mov
or
jg
xchg
inc
mov
cmp
imul
xor
cpuid
sahf
push
loop
sub
push
mov
cwtl
in
call
xchg
in
sub
jl
in
or
nop
iret
or
mov
bound
and
inc
dec
or
ja
outsl
arpl
std
ret
sahf
ret
clc
push
int3
push
add
xchg
daa
sbb
data16
shlb
addr16
lahf
shrb
push
cmp
jae
filds
xchg
dec
test
xor
sti
sar
movsl
and
lcall
xchg
push
push
inc
imul
ss
cltd
mov
cltd
fisttpl
or
movsb
and
out
jnp
push
or
es
sbb
mov
xor
sub
or
dec
mov
data16
sub
fsubr
test
das
test
sub
mov
mov
mov
insb
pushf
adc
mov
fs
fwait
sahf
mov
jge
test
xchg
xchg
addb
lds
andb
test
int
adc
pop
push
push
xchg
xchg
fs
rcr
jmp
leave
xor
xchg
adc
fsubr
push
inc
or
jecxz
jno
jl
jge
mov
out
mov
lea
cmpsb
mov
aas
push
inc
mov
sbb
push
push
sub
int3
mov
jns
imul
andl
imul
mov
sahf
cmp
sbb
dec
push
push
fists
mov
cwtl
outsb
orl
outsb
insl
call
fiaddl
push
xor
clc
push
es
xor
lods
cwtl
lea
in
test
sahf
mov
inc
cmp
jg
xor
icebp
cmc
push
inc
pop
cmp
andl
or
scas
mov
pop
aad
ja
aam
mov
loopne
pop
push
xchg
repnz
scas
add
dec
int3
add
push
rclb
mov
sbb
stos
or
mov
dec
in
mov
push
cmpsb
iret
jecxz
loop
stc
ljmp
pop
out
xchg
icebp
mov
mov
adc
int
cmp
pop
out
popa
pop
andb
movsb
inc
fstl
ds
lock
stc
push
stos
mov
addb
adc
jbe
les
push
ljmp
mov
dec
dec
fisttps
fldcw
arpl
mov
cmp
in
jl
cmp
test
inc
jg
loope
iret
rcrl
cmpsb
or
data16
lock
mov
xchg
insb
sti
stc
shlb
arpl
lret
jg
fnstcw
int
inc
push
and
cmpb
jns
xor
lock
ret
cmp
out
mov
pop
pop
mov
jnp
cli
adc
sbbb
aad
push
loop
leave
cmpsb
mov
sub
add
punpcklbw
repnz
daa
stos
cltd
mov
and
mov
xchg
shrb
push
hlt
xchg
stos
xor
add
lcall
jbe
cli
mov
or
xlat
out
mov
mov
imul
loope
addr16
jo
jno
push
aad
mov
or
or
stos
mul
or
loope
mov
xor
mov
xchg
call
lods
pop
and
mov
cltd
enter
xor
or
pop
aaa
or
add
lods
insl
in
sar
in
push
out
adc
sti
xchg
inc
adc
jmp
insb
data16
add
arpl
dec
sub
sbb
mov
sbb
imul
out
movsb
jg
adc
pop
pusha
jl
sbb
and
pusha
xchg
mov
jg
add
cmp
shlb
mov
pop
enter
mov
or
iret
int3
add
inc
fcmovne
and
add
scas
mov
rcr
inc
jl
jge
mov
push
cwtl
jns
rcrb
push
sbb
imul
pop
stos
adc
aam
dec
inc
shlb
pop
push
jl
insb
jp
test
insl
stos
fimuls
fbstp
hlt
daa
out
or
les
push
out
cmp
shl
and
shl
addr16
sub
movsb
add
inc
jnp
fs
sub
lcall
sub
call
jns
int
xor
mov
pop
or
pop
inc
aad
inc
push
or
inc
stos
xor
lret
jge
test
or
imul
mov
cmp
xor
jp
in
mov
movd
out
cs
arpl
mov
pop
inc
adc
pop
xchg
mov
push
rcll
imul
sbb
cmp
pop
stc
sbb
rcrl
jno
cltd
xchg
cmp
inc
popf
sub
jl
jo
jmp
test
jne
lock
xor
sbb
mov
push
in
ret
cli
in
or
clc
movsl
aad
mov
icebp
inc
repnz
inc
mov
mov
mov
pop
test
das
xlat
mov
pop
sub
out
mov
xchg
test
scas
fst
sbb
movsl
push
dec
jmp
mov
je
push
add
xor
gs
jns
test
cli
lahf
shrl
adc
xor
xor
popf
sbb
lock
stc
movsb
pop
arpl
paddq
int3
push
dec
push
fldlg2
divb
stc
xor
fsubp
addr16
inc
sub
loopne
mov
ss
leave
sub
out
dec
out
sub
adc
push
das
pop
inc
and
push
icebp
dec
jns
cmp
push
into
sbb
xor
xchg
scas
dec
daa
insb
aam
mov
cmp
push
testl
imul
xchg
mov
outsl
xchg
ljmp
add
sub
sub
xchg
mov
inc
xchg
les
dec
iret
daa
stos
data16
sti
cmp
or
ss
push
sarb
and
out
jnp
or
std
lahf
sbbb
subl
xor
inc
fbstp
mov
xchg
rorb
or
push
je
insl
test
es
ds
xchg
xchg
repz
xor
jno
loope
mov
lock
pop
ljmp
push
leave
jge
or
add
add
dec
fwait
adc
aad
xchg
enter
and
push
fidivl
lods
movsb
or
iret
in
push
aad
int3
into
and
lret
clc
pop
loopne
inc
stc
cld
mov
jg
dec
mov
cmp
bound
cmp
je,pt
rcrl
mov
sub
clc
loope
insl
lret
mov
scas
fcmove
js
fdivrp
mov
mov
mov
pop
pop
lea
jae
leave
loopne
clc
sarl
and
jnp
enter
out
jnp
loopne
adcl
dec
aad
sti
inc
addr16
jnp
movsl
ret
stc
repnz
loop
jp
adcb
mov
lds
or
int3
or
xor
cltd
andb
adc
lock
shrb
cs
sbb
loop
xor
mulb
sub
mov
loop
popf
jnp
dec
enter
rcrl
sti
fs
xchg
addb
cwtl
fs
cmp
sbb
inc
mov
test
shl
rcrl
and
jns
push
shlb
in
popa
push
bound
insb
mov
pop
xor
jecxz
jae
mov
lret
imul
mov
cmpsb
mov
in
cmp
scas
inc
adc
sysexit
repnz
cmp
movsl
mov
jb
xchg
cmp
clc
jb
fstpl
ficoml
fwait
sub
les
jmp
adc
lods
mov
inc
mov
hlt
sbb
rcrl
je
jp
xchg
sbb
jp
jecxz
xor
test
cmp
dec
iret
xor
jo
xlat
jle
into
sbb
mov
insl
cld
std
mov
cmp
pusha
rcll
shrb
mov
sbb
mov
outsl
sub
push
push
stc
xchg
clc
and
out
pop
fadds
xchg
mov
das
xor
lods
jg
sbb
gs
xor
and
and
jp
pop
push
sti
ljmp
rcll
sahf
mov
mov
push
pop
and
in
mov
push
shrl
sbb
add
lcall
outsl
cmp
mov
lds
sbb
dec
pusha
pop
sub
sbb
cwtl
ja
cmpsb
int
lods
xor
push
inc
xchg
and
dec
ret
pushf
lds
fwait
pop
push
test
xchg
sbb
push
cmp
loope
imul
sbb
or
cmp
pop
or
les
je
xchg
in
icebp
xor
cwtl
pushf
jns
cmp
pop
xor
pusha
mov
dec
daa
movsb
into
mov
sub
pusha
jbe
add
jne
xchg
stc
xchg
clc
js
popf
sub
xchg
or
and
aaa
push
aam
pop
xchg
mov
in
movsb
gs
ret
dec
xchg
negl
dec
pusha
lods
aaa
shrl
fildll
hlt
lock
mov
adc
pop
repnz
mov
pusha
cwtl
xor
cmp
into
out
daa
mov
xor
imul
add
outsl
sub
sub
daa
cmc
es
int3
sbb
loope
outsb
repz
pop
jle
fs
xchg
and
sbb
sarl
sub
mov
fcmovne
jle
mov
dec
in
inc
cmp
in
stc
inc
and
je
inc
push
dec
or
sub
mov
adc
push
les
loopne
stos
or
ljmp
mov
int
pop
loopne
xor
out
push
lods
fdivl
test
dec
addb
cmpsl
jecxz
std
std
pop
cmp
mov
out
ja
cmp
in
adc
inc
lods
fnstsw
subl
push
pop
jb
dec
push
or
test
cmp
sub
addl
jecxz
or
add
sub
mov
cmp
pop
mov
sbb
out
in
mov
lret
ljmpw
inc
push
inc
adc
jne
and
inc
les
sub
jb
daa
sbb
and
orb
or
mov
gs
out
es
es
xchg
out
clc
sub
xor
pop
xor
mov
out
lcall
es
inc
push
cmpsl
pop
xchg
xor
mov
jb
push
fcoml
cmc
cmp
dec
jl
cmp
out
js
mov
ret
aaa
inc
hlt
loop
outsb
mov
mov
sbb
dec
pusha
or
imul
xor
mov
inc
fstpt
enter
and
xchg
pop
dec
fdivs
sahf
add
jb
adc
loope
leave
aam
mov
sarl
clc
fistpl
push
cmp
mov
xor
movsl
iret
sub
lahf
add
adc
dec
mov
mov
imulb
or
outsl
leave
adc
jmp
xor
xor
stos
sub
icebp
pop
mov
mov
in
int
out
xor
add
add
fdivl
sub
sbb
cmpb
lods
xchg
and
xchg
loopne
out
jae
dec
out
in
xchg
push
and
testb
xor
out
aam
cmp
popf
ret
cmp
sbb
fidivrs
adc
pop
fidivrl
nop
frstor
xchg
in
pop
jae
dec
icebp
sub
inc
popa
and
sarl
or
mov
xchg
jecxz
pop
aad
inc
adc
pop
xchg
xchg
out
inc
adc
adc
pop
mov
xchg
jnp
add
push
xchg
xchg
push
data16
jb
lods
adcb
arpl
lcall
test
leave
mov
std
mov
jmp
mov
leave
sub
loop
pushf
repz
fdivs
and
sbb
fcmovu
rorl
jns
xchg
outsl
dec
adc
leave
pusha
roll
xchg
cmc
xchg
sub
scas
push
lret
pop
test
pop
jo
xlat
dec
and
or
cmpsl
cmp
adc
or
fcmovb
or
mov
mov
lret
inc
in
fistps
out
loopne
pop
mov
jl
ret
push
adc
fistpll
ret
rclb
mov
gs
movsb
pop
cmp
mov
add
leave
ret
or
xchg
sub
and
or
jmp
sub
es
jmp
jmp
ret
xchg
repnz
hlt
sbb
lods
hlt
pop
fcomp
test
mov
or
popf
rcrl
add
shl
cmp
lods
mov
lcall
rcrb
shlb
cmp
jp
ret
hlt
push
pop
add
and
inc
cmp
dec
in
inc
xchg
push
add
push
ss
fnstsw
test
xchg
loopne
push
out
cmp
mov
das
enter
mov
jbe
xchg
pop
mov
nop
adc
into
add
mov
imul
ret
popf
fcoml
push
adc
jp
and
push
mov
gs
ljmp
xchg
dec
mov
shll
cltd
push
mov
push
rcrl
and
mov
call
outsb
xchg
cli
pop
stos
iret
push
cmp
add
pop
dec
xchg
scas
repz
outsb
xchg
test
out
or
mov
inc
mov
sub
cmpsl
add
std
jb
movsl
jp
cmp
int
stc
or
push
daa
cwtl
mov
popa
pop
aaa
cmpb
cmpsl
int3
jnp
push
andl
mov
pushf
xchg
mov
inc
xchg
enter
cmp
mov
loop
adc
cli
sub
mov
dec
lock
fidivrs
xchg
fcmovnbe
mov
or
fcoml
push
std
xchg
push
or
cmc
in
ljmp
mov
cltd
mov
imul
and
cmc
pop
clc
sub
jnp
les
xchg
mov
cmp
movb
jbe
out
jb
fcompl
push
or
div
pop
sarb
mov
bound
sbb
fbld
pusha
push
inc
int3
std
dec
cli
mov
insb
xorl
dec
inc
popa
in
sub
loop
repnz
inc
mov
pop
inc
inc
mov
sbb
pop
inc
pop
mov
adc
mov
or
adc
daa
stos
jmp
xor
pop
sti
jb
sti
or
xchg
fidivl
push
cld
leave
inc
sbb
lods
int3
cwtl
push
inc
es
xlat
lea
xchg
lds
mov
and
lods
mov
push
adc
mov
scas
add
mov
mov
repnz
or
fstpl
push
sarb
and
stc
pusha
aas
shl
inc
fwait
xchg
fdivr
mov
aaa
icebp
fcompl
lods
push
add
inc
mov
xor
cmc
repnz
fisubrs
add
jne
push
test
sbb
xchg
insb
stc
fsubrp
movsb
movsl
xchg
sub
frstor
jbe
inc
inc
and
mov
adc
add
xlat
call
dec
mov
shrb
insl
stos
popf
rorl
mov
fistpl
add
mov
xor
xor
fstp
decl
push
xchg
sub
imul
arpl
data16
mov
fidivrl
inc
and
inc
sbbl
xor
pop
or
fildl
cmp
dec
je
pop
mov
std
lret
dec
jb
in
std
lahf
pop
sub
inc
dec
sub
mov
pushf
pushl
jle
loopne
incl
push
ja
fimull
pop
mov
ss
lods
popa
add
decb
in
pop
ret
sti
inc
sub
adc
cmpb
test
xchg
lcall
lret
int
adc
sub
rorl
adc
xor
fistpl
inc
and
mov
mov
dec
pop
pop
cmp
xlat
ret
sbb
mov
push
dec
pop
aas
xor
xchg
pop
mov
lcall
add
add
xor
ja
jecxz
jbe
in
jbe
push
addl
sub
sub
push
sbb
xchg
nop
xor
pusha
dec
frstor
imul
inc
cmp
sti
popa
rcrl
cwtl
fmuls
adc
test
xlat
adc
add
jae
push
cmp
dec
arpl
sub
ds
punpckldq
sbb
mov
ret
jmp
mov
negl
sub
aas
or
jae
jmp
sbb
push
mov
icebp
and
inc
insb
sti
cmp
in
adc
push
cmp
or
dec
or
add
add
insl
popf
pop
out
in
xlat
cli
inc
sbb
rep
popa
inc
xor
mov
hlt
sti
out
lea
leave
adc
xchg
jo
lret
pop
cmpsb
xchg
in
inc
dec
faddl
pop
xor
push
xchg
inc
add
cmp
xlat
mov
lret
test
add
sbb
inc
test
adc
jecxz
mov
es
pop
out
jge
sbb
add
jns
int
add
mov
std
das
jg
scas
dec
pop
lcall
xor
pop
into
shl
sub
mov
insb
pop
add
pop
fdivr
mov
inc
jno
add
jp
mov
andl
sub
aas
xchg
fwait
add
cmpsl
lods
adc
jg
and
das
push
iret
sbb
test
xlat
mov
mov
cmc
fdivs
xchg
inc
test
into
push
stos
int3
scas
test
mov
push
xchg
push
mov
in
add
dec
xchg
jnp
shrl
lret
repnz
lods
inc
or
xor
cmp
add
mov
push
popa
pop
icebp
adc
jo
adc
jns
add
jae
aad
jmp
mov
cmpb
push
shrl
jo
stos
lock
xchg
cmp
mov
inc
int3
jae
jecxz
bound
pop
jl
xlat
mov
mov
popa
push
xchg
and
in
or
cmp
stos
jmp
jmp
cmc
ret
int
dec
push
aam
into
stos
xlat
shrl
insl
jbe
jae
fsubs
mov
push
fidivs
sub
iret
fwait
mov
cmp
loopne
and
aaa
jmp
fwait
into
and
clc
cwtl
mov
adc
imul
mov
lds
js
cmc
mov
sahf
daa
adc
or
push
xor
dec
int3
add
dec
pop
mov
cld
mov
mov
or
pop
test
sbb
jo
mov
xor
pusha
popf
adc
jb
xchg
cmpsl
pop
in
mov
cld
xchg
adc
movb
sub
ds
ja
insl
and
imul
push
imul
cmp
sahf
sahf
jb
mov
or
xchg
mov
popaw
xlat
or
jecxz
pop
iret
fsubrs
cmp
cltd
std
sbb
dec
xchg
mov
cltd
jbe
icebp
hlt
pop
arpl
pop
pop
inc
iret
jp
nop
mov
mov
dec
add
sti
mov
sub
cmp
xchg
sahf
jbe
fstpl
lcall
adc
insl
imul
jmp
ret
sub
fcompl
adc
push
arpl
or
out
mov
pop
inc
test
test
push
outsl
mov
rcll
adc
dec
out
dec
out
mov
dec
mov
lock
add
movsb
pop
cwtl
insb
mov
enter
sar
cs
xlat
out
out
es
lcall
sahf
mov
lcall
pop
push
cmp
jno
outsb
rcl
inc
movsl
std
xor
addr16
adc
adc
xchg
fmull
pop
xchg
scas
mov
cld
dec
ds
pop
daa
dec
adc
push
xchg
scas
test
cli
ds
sbb
mov
into
js
mov
hlt
xor
ja
ret
mov
pusha
adcb
aas
push
jp
xchg
frstor
cmpl
fstpl
xor
cmc
mov
ss
popl
pop
push
sbb
push
imul
and
jecxz
adc
pop
loop
out
push
neg
dec
iret
inc
push
add
xor
and
jecxz
xchg
push
jb
adc
popf
inc
or
out
scas
add
mov
mov
xchg
mov
dec
outsl
leave
scas
movsl
adcl
mov
outsl
cmp
les
sbb
rcl
sub
ret
pop
pop
repnz
xchg
push
addl
ss
decb
inc
or
pop
cmp
inc
or
inc
xchg
dec
out
sbb
js
testl
scas
sub
sub
pop
repnz
movb
nop
test
sahf
adc
fs
fcomps
js
shrl
negb
inc
sbb
pop
inc
add
add
jne
sbb
aas
aaa
mov
into
inc
imul
test
fists
ror
push
enter
cmp
pushf
pop
fcomps
inc
das
imul
ficomps
xchg
stos
adc
jle
pop
cmp
mov
xchg
inc
and
bound
imul
add
sbb
dec
les
imul
mov
and
sub
cmc
ja
mov
je
rcrl
imul
mov
mov
movsl
movsl
dec
xchg
lock
ljmp
out
adc
sbb
lods
sub
fldpi
aas
aas
mov
insl
and
lds
xlat
movl
sarb
jecxz
xor
inc
mov
nop
arpl
shll
sub
cli
icebp
shrl
xchg
dec
push
mov
jno
mov
imul
jae
je
jne
inc
xchg
push
push
hlt
inc
xchg
in
les
cmc
inc
xchg
push
cmp
out
in
insl
stos
cmp
sbb
xchg
cmovo
cli
push
test
add
test
test
pop
pop
nop
or
inc
inc
inc
inc
outsb
pop
ja
push
lret
pop
sub
into
mov
mov
inc
xchg
xchg
orl
sub
subl
aam
stos
out
sub
fs
cmp
xchg
les
pop
mov
cs
je
pop
test
rcrl
stc
jl
pop
cmpsb
push
mov
ds
hlt
dec
lods
addr16
jae
jge
les
andl
adc
popf
xor
aaa
sti
jg
or
fwait
mov
mov
fwait
lret
push
pop
cs
mov
popf
mov
push
inc
fmuls
jle
xchg
inc
dec
in
dec
fldl
and
mov
xor
or
dec
cld
or
dec
xor
jo
movsb
sub
andl
jnp
ja
in
sbb
pop
fld
ljmp
lcall
sbb
mov
cmp
inc
xchg
popa
or
sbbl
jp
sbb
dec
in
inc
jbe
pop
test
ja
mov
ljmp
dec
pushf
inc
mov
dec
aas
adc
sbb
jge
addl
sbb
call
lahf
push
cwtl
orb
cmp
dec
sahf
dec
hlt
pop
mov
xor
mov
jae
mov
test
or
outsb
mov
mov
ret
mov
sahf
or
jo
or
bound
stos
decl
adc
sub
jge
add
add
sub
xchg
ds
inc
dec
stos
js
test
popa
sbb
xorb
test
enter
rcrl
pop
ret
mov
sub
and
cmc
cltd
mov
sub
loop
rcrl
nop
inc
push
add
xchg
dec
leave
jne
ljmp
push
push
inc
sub
icebp
or
cmc
add
pop
idivl
cmpsl
leave
loop
addr16
hlt
sbb
cld
jmp
ja
xchg
sub
cmp
inc
popf
loope
rcl
ss
mov
xlat
jp
repz
cmpsb
jne
push
loop
dec
shll
std
lahf
mov
inc
fcompl
sub
inc
insl
push
nop
lea
cli
mov
repz
mov
adc
fwait
xor
clc
pusha
jns
mov
pop
ja
push
in
mov
adc
add
push
repnz
push
jmp
stc
mov
or
fwait
cmp
sub
ja
notb
je
fs
ja
push
out
xor
dec
inc
inc
ljmp
sbbl
jmp
test
xchg
out
loope
pop
loopne
repnz
mov
pushl
dec
mov
adc
sbb
or
mov
jmp
fldt
in
jns
fisubrl
int
cmp
mov
ret
or
stos
sbb
or
arpl
xchg
xchg
pop
or
and
push
cmp
adc
adcb
adc
mov
ds
pop
repnz
sbb
mov
dec
andl
sbb
daa
jnp
add
mov
into
sub
lds
repnz
std
mov
iret
stc
jmp
inc
inc
adc
xor
xchg
mov
inc
jae
and
loopne
mov
push
fwait
add
jle
cmp
and
mov
lock
enter
call
in
test
add
adc
mov
cld
insl
imul
or
and
ret
cmp
sarl
xor
movsl
push
stos
mov
push
push
mov
sub
scas
adc
push
push
fcompl
mov
jbe
js
int3
pop
arpl
dec
loope
mov
outsb
or
cmp
jl
sub
addr16
lds
push
cs
xchg
adc
sbb
push
mov
sbb
ds
outsl
ss
cmp
lea
addr16
rolb
cltd
xor
mov
pop
ficoms
cmpsl
mov
jo,pn
iret
mov
or
sarl
and
xor
mov
movsl
jnp
lds
insb
outsl
aas
jmp
js
and
jbe
jno
mov
mov
add
fbld
xlat
sti
loop
outsl
pusha
sbbl
dec
stc
bound
aam
sti
mov
out
cmp
push
or
loopne
shrb
adc
jg
jg
dec
inc
jne
mov
push
idivl
and
dec
jl
hlt
mov
lahf
add
mov
pop
mov
es
adcl
add
cmp
in
stc
add
fldcw
or
xchg
sbb
dec
jg
sbb
mov
jmp
hlt
out
movsl
push
rorl
ds
scas
xchg
xchg
inc
inc
and
sbb
call
push
cmp
ds
jne
cmpsl
cmpl
xor
aas
inc
xchg
test
sbb
mov
or
je
ret
jmp
mov
in
xchg
mov
pop
mov
jle
popa
insb
mov
shrb
mov
inc
adc
es
push
setnp
xchg
fwait
dec
xor
pusha
inc
and
outsb
mov
push
sbbb
sbb
jne
dec
rsm
into
xchg
rcl
inc
and
and
inc
adc
cmpl
ret
mov
loopne
or
sub
mov
and
or
test
mov
imul
jmp
in
loopne
jbe
xor
ret
aaa
stos
ret
jns
or
es
sbb
call
repz
or
loopne
fcompp
arpl
xlat
dec
leave
test
repnz
pop
js
adc
inc
loope
cmp
lahf
cld
lahf
mov
sbb
and
mov
pushf
jmp
sbb
mov
fmul
push
je
xchg
ja
outsb
sbb
push
mov
xchg
push
mov
pop
push
pop
inc
shl
mov
cs
shll
dec
mov
sti
jle
adc
sub
cld
mulb
jg
ljmp
in
mov
push
das
xchg
fiadds
jmp
das
add
cmc
in
shll
std
push
lock
xchg
cmp
or
das
leave
pop
xchg
std
pop
fidivrs
mov
or
test
pop
mov
mov
repz
incl
rep
or
push
and
leave
hlt
sub
sub
sbb
mov
pop
xchg
add
daa
decl
ss
decb
sarb
xchg
stos
cmpsl
dec
inc
sar
push
jecxz
test
mov
cli
add
jg
lret
ror
insl
mov
push
ljmp
mov
pop
xorl
mov
cmp
push
cmp
pop
mov
cmp
cmp
ja
fiaddl
fcoml
inc
fwait
jp
push
add
adc
jnp
sub
mov
pop
mov
adc
and
ret
push
pusha
jns
mov
test
jns
sbb
aam
sub
cmpsb
iret
pushf
or
mov
push
pop
xchg
add
sbb
xchg
shll
orps
pop
jp
push
push
xor
sub
lods
pop
repnz
in
xor
inc
or
in
das
ja
xchg
or
push
or
and
aas
mov
loope
or
add
insl
mov
mov
in
push
std
mov
scas
hlt
mov
xchg
push
lds
ds
popf
cmp
lock
cwtl
mov
and
icebp
jnp
sbb
popf
mov
loop
xlat
into
aaa
call
add
outsb
jb
aas
sub
movsl
and
andl
stos
test
or
xor
adc
inc
mov
xchg
loopne
fdivl
rcrb
mov
adc
into
mov
mov
addr16
in
mov
scas
add
push
mov
and
stc
xor
jo
scas
rolb
inc
sub
das
inc
xchg
lahf
mov
jne
and
insb
xor
add
mov
and
imul
pushf
mov
stos
cmpsl
mov
xor
test
in
add
push
pop
shlb
lock
add
iret
mov
inc
push
mov
push
ret
and
or
inc
aas
xchg
pop
loope
jl
dec
pop
push
push
popf
sbb
and
push
enter
pop
aam
jnp
mov
xchg
mov
aaa
cmp
mov
outsb
pop
inc
push
mov
fcompl
jle
fsubs
inc
pop
pop
sub
jl
xor
pop
pop
rcr
fs
dec
pop
es
jmp
je
cmp
add
icebp
popa
stc
mov
add
fcoml
xlat
in
dec
jbe
out
sub
xchg
orb
sbb
lret
nop
fistl
adc
mov
pop
jecxz
dec
je
call
test
decb
add
pushf
add
mov
fs
push
or
xchg
stos
call
xchg
sub
daa
jnp
test
push
push
pusha
mov
sub
xor
push
cmpsl
sub
jecxz
inc
and
icebp
and
sbb
adc
aaa
push
or
insl
ret
daa
popf
in
sub
iret
xor
mov
pop
shl
or
cmpsb
sbb
mov
mov
dec
jbe
push
cs
xchg
and
fimuls
call
xlat
mov
xchg
jb
scas
in
mov
cmp
inc
push
popa
pop
or
out
inc
sbb
mov
sarl
mov
push
cs
push
inc
faddl
xchg
mov
test
mov
pop
cmpsl
out
xor
icebp
daa
les
jp
mov
xorb
xorb
cmp
jp
push
or
cmp
push
push
jnp
cmp
aad
dec
mov
movsb
and
out
add
pop
test
aam
push
outsb
push
pushl
fldcw
ja
fsubrs
aaa
pop
repz
ljmp
dec
jge
stos
add
clc
xor
push
pop
add
fmul
pop
in
xor
rcrl
arpl
pinsrw
ljmp
subb
mov
xchg
rcr
lret
lods
jmp
push
mov
aaa
adc
pushf
test
xchg
push
dec
scas
imul
hlt
cmp
push
pop
cltd
push
popa
mov
xchg
data16
repz
xchg
xor
mov
mov
stc
orl
add
push
pop
and
outsl
add
inc
mov
lea
outsb
fisttpl
sahf
xor
std
pop
iret
push
lahf
push
mov
inc
jbe
pusha
hlt
adc
dec
lret
scas
sbb
adc
shll
incb
jp
jns
movsb
scas
jb
test
xorb
xchg
cmp
xchg
mov
ret
and
add
js
mov
push
jne
call
xchg
push
insb
dec
sub
aaa
mov
adc
xchg
iret
jne
dec
ljmp
js
xchg
leave
cmp
mov
nop
popa
ja
lahf
sub
lock
lock
push
sbb
in
cmc
cld
jp
mov
xor
pop
mov
mov
jmp
jp
fldcw
xlat
test
adc
pop
mov
stc
gs
shr
mov
sub
jbe
scas
mov
cmpsl
popa
xchg
rcrl
aaa
cmp
popf
adc
jo
push
in
and
cltd
ror
xchg
mov
add
pusha
testb
mov
aad
and
lcall
push
movsl
adc
insb
cmp
outsb
out
or
mov
fimuls
jbe
xchg
jbe
enter
pushf
pop
out
dec
lret
jge
mov
scas
dec
and
ffreep
jge
in
out
jnp
out
pop
jge
dec
mov
lods
pop
out
mov
rcll
bound
mov
jmp
xchg
jnp
cli
imul
xchg
push
mov
inc
ret
cmp
out
jb
mov
cmp
adc
pop
jae
or
lea
loope
adc
movsb
mov
iret
add
mov
adc
aas
aas
push
incb
or
mov
push
push
seta
and
sub
cmc
adc
cltd
int
sub
inc
outsb
movsb
arpl
ljmp
jl
xorl
mov
imul
cltd
jmp
call
push
add
push
sub
jns
pop
daa
pop
gs
dec
mov
ljmp
ja
enter
cld
xor
aas
repz
xchg
repnz
popa
sub
scas
imul
mov
xchg
cmpsl
inc
cmp
pop
cmp
ss
and
xchg
scas
lods
sbb
hlt
data16
sub
sub
daa
pusha
lahf
inc
xor
or
push
sub
adc
push
add
inc
xlat
lods
push
and
add
pushl
pop
aad
mov
clc
jmp
in
pop
xor
ret
repnz
rolb
pop
ret
sbb
movsl
pushf
add
adc
jno
lock
and
push
sub
inc
dec
sub
and
js
sahf
int3
cwtl
xor
add
or
and
jnp
xchg
pop
mov
and
orl
xor
mov
test
jb
or
mov
int3
xor
mov
mov
mov
negl
jle
clc
add
push
add
or
std
xchg
out
nop
add
imul
insl
inc
outsl
cmovs
ljmp
and
xchg
cmp
shrb
pop
pop
mov
iret
lock
and
in
stos
stos
int
outsb
repnz
xor
out
outsb
aam
mov
inc
fcomi
pop
enter
and
xchg
sbbl
xlat
xchg
call
sub
push
adc
cmp
and
cmp
xchg
lcall
fisubrl
fmuls
inc
adc
icebp
adc
push
jae
inc
call
add
popa
dec
pop
into
cmp
xchg
pop
and
iret
fbstp
mov
xorl
test
mov
or
loop
sbb
lock
and
cmp
movsb
jle
xor
add
ficomps
addb
jge
out
inc
ja
inc
lods
xor
sbb
sub
fwait
lea
call
xchg
and
mov
mov
cwtl
lock
sbb
lock
mov
jne
mov
sarl
cli
mov
out
in
add
push
jmp
aaa
sbb
pop
fbld
imul
call
les
xlat
dec
jbe
adc
jp
repnz
mov
rorb
xlat
bound
mov
jg
aam
mov
mov
jp
cmp
addr16
mov
sti
iret
and
pop
jg
sbb
jo
fwait
das
and
cli
addr16
sub
inc
test
inc
test
loopne,pt
pop
inc
mov
sahf
rcrb
mov
cmp
fcoms
hlt
mov
stos
cmc
xor
lea
jg
addr16
mov
mov
loopne
in
fistpll
sbb
shlb
pop
push
jle
ljmp
or
mov
test
shlb
push
xor
pop
cwtl
pop
sbb
loopne
in
gs
mov
mov
mov
cli
pop
ret
out
test
adc
sub
and
scas
mov
push
or
repz
mov
mov
mov
fnstcw
pushf
fwait
xchg
sbb
pop
stc
mov
xlat
hlt
addr16
sbb
stos
push
cs
sub
mov
int3
and
test
ja
cli
hlt
mov
mov
or
daa
xchg
sbb
in
ficoml
fstps
andb
scas
fwait
pop
inc
push
sub
sti
dec
sub
out
push
dec
and
push
push
sub
fcompl
dec
push
push
addb
imul
push
lea
clc
push
iret
jl
add
dec
and
jle
into
jl
rcrl
es
rcrb
ja
fucomi
loope
sub
lock
and
push
xlat
sbb
push
adc
lret
hlt
mov
add
push
push
aad
add
inc
mov
add
sahf
push
imulb
pop
ja
and
xchg
mov
enter
cltd
dec
fldcw
or
das
pop
insb
rclb
push
lcall
int3
sti
push
dec
jg
mov
mov
sahf
push
xchg
inc
or
fld
lcall
jns
mov
or
mov
in
pop
pop
mov
enter
mov
adc
test
imul
inc
lea
call
cmp
and
mov
aas
in
mov
inc
adc
mov
jmp
test
jp
xor
daa
push
cmp
cmpsb
push
inc
xchg
mov
stc
pop
aas
enter
add
loop
int
xchg
les
jge
fcoml
mov
cmp
loopne
ret
sub
enter
jge
add
stos
inc
testl
into
je
sub
xor
mov
mov
rcl
stc
shrb
ret
pop
ret
movsl
sahf
pop
xor
and
clc
add
dec
mov
mov
iret
les
xchg
sub
dec
ret
idivb
enter
xchg
loopne
imul
sti
xchg
int
or
jb
cmp
xor
jae
movsb
add
pop
push
dec
inc
lahf
enter
xchg
int
push
xchg
imul
add
rcrb
out
dec
xchg
xchg
mov
dec
inc
pop
dec
fwait
adc
pop
sub
mov
addr16
sarl
jp
cmp
mov
xor
cmp
xchg
mov
imul
sub
fsubs
test
jg
push
jmp
popa
push
jnp
ljmp
push
pop
aas
adc
push
insb
arpl
in
cli
or
mov
fnstenv
js
cmpsl
loop
js
arpl
arpl
insb
xor
dec
pop
jne
popa
push
ds
jns
cmp
es
adc
fwait
repnz
dec
jnp
cmp
mov
sbb
mov
pop
cltd
ret
mov
sub
and
sub
ds
dec
push
push
out
sbb
cmp
fdivl
imul
jge
outsb
jns
mov
push
xor
shll
jecxz
jno
aas
stos
cmp
test
sub
add
stc
inc
icebp
or
or
mov
adc
push
or
xchg
fsubs
dec
push
push
jo
pop
or
call
mov
pop
xchg
sbb
in
ret
stos
jne
out
mov
das
dec
imul
xor
cld
movsb
out
lds
push
popw
stos
push
xor
cmp
pop
cmpsb
scas
enter
and
inc
mov
mov
sbb
inc
inc
pushf
jg
mov
movsb
notb
pushf
iret
inc
cmp
rclb
test
fwait
cltd
or
dec
repz
lock
insl
and
fimull
xor
and
insb
fs
cmc
push
lea
mov
fiadds
or
fwait
negl
add
ds
adc
stos
sub
cmp
fidivrs
mov
aam
sahf
loope
dec
leave
adcb
lea
cmp
loope
test
ds
mov
call
addr16
mov
dec
push
jae
cmpsl
imul
imul
mov
mov
clc
es
xchg
add
sub
or
push
pop
sbb
mov
dec
ja
pop
add
or
aam
int3
jmp
ss
and
and
and
jae
fadd
aaa
mov
popa
adc
cwtl
out
out
push
data16
sti
rcr
inc
mov
sarl
fidivrs
xor
mov
shll
cmp
iret
in
loopne
xlat
bound
push
in
movsb
subb
jbe
inc
mov
add
cmp
add
sub
xor
xlat
pusha
loop
lahf
testl
mov
adc
add
es
jnp
xor
xor
cmp
orb
lods
xchg
lock
push
push
ja
ret
pop
mov
add
sbb
push
in
fcomps
out
daa
jns
inc
jo
iret
aaa
test
nop
push
lea
dec
mov
dec
mov
cmp
jbe
sbb
faddp
lods
cld
xchg
inc
and
xor
insb
and
xor
inc
cli
shld
aaa
test
pop
in
push
fdiv
pop
mov
mov
shlb
mov
and
pushf
mov
fs
sti
adc
push
sbb
outsb
out
or
dec
pop
or
adc
adc
testb
mov
sub
leave
mov
push
adcb
dec
push
and
add
mov
inc
test
jmp
cmpw
daa
int
outsl
cmpsb
sbb
movsb
sar
and
xor
pushl
xchg
or
or
outsb
jmp
push
sub
inc
scas
ret
fidivl
and
aad
js
sbb
cmp
jle
out
xchg
rclb
jg
push
lea
push
pop
and
in
popl
arpl
xchg
inc
pusha
xchg
iret
jno
leave
and
stos
push
push
xchg
cli
aaa
inc
insb
jmp
test
mov
jae
cmp
mov
daa
mov
hlt
insb
movsb
jg
mov
xchg
cmp
cmpsb
das
cmp
sti
push
lcall
push
jnp
xchg
rolb
enter
lods
sub
or
out
inc
sub
test
int
cwtl
in
in
sub
mov
xchg
je
jg
sub
fists
cli
mov
push
arpl
push
mov
xchg
sbb
repnz
dec
cltd
sbb
lret
incb
push
cmpsl
subb
gs
dec
orb
cltd
fidivl
call
aas
push
pushl
fdivr
negb
and
sub
xor
imul
push
shrb
flds
std
xchg
dec
fdecstp
mov
mov
cli
out
leave
xchg
lods
xchg
and
imul
fimull
mov
sub
scas
out
das
mov
push
and
test
and
mov
dec
sahf
icebp
bound
rclb
lret
bound
scas
cmp
fbld
in
nop
jp
mov
and
enter
jae
push
sbb
sarb
cld
cmpsb
frstor
in
lds
and
mov
pop
mov
call
je
and
cmp
bound
mov
dec
ret
sub
mov
mov
lcall
test
push
cs
shlb
sbb
dec
pop
cmp
test
mov
insb
adc
stc
outsl
mov
out
lahf
sbb
inc
push
jne
dec
pop
add
add
mov
aam
jp
and
inc
add
lcall
inc
or
cmp
cs
xlat
rcll
pop
add
sub
cmp
xchg
sbb
mov
and
add
sar
mov
xlat
push
cmp
adc
les
into
enter
xchg
cmp
sub
sub
cmp
push
cwtl
xchg
imul
fildl
cli
dec
or
mov
mov
cwtl
inc
icebp
sbb
or
outsb
in
stos
xor
imul
ret
and
push
daa
dec
gs
add
xor
or
mov
cli
jecxz
and
or
and
jb
sub
or
cltd
bound
jg
cwtl
push
lods
insl
jle
pop
call
enter
xchg
roll
cmp
dec
popf
cmp
cmp
push
jge
popl
xor
lcallw
test
repz
dec
or
push
lahf
cmovbe
orb
or
test
popf
xor
jle
lcall
inc
imul
andl
push
fdivrp
lds
or
enter
aas
lcall
pop
sbb
and
fildl
push
into
or
dec
test
je
xchg
test
xor
jae
mov
testl
out
dec
inc
aam
leave
std
cmp
ljmp
push
add
mov
jns
sub
mov
pop
call
xchg
orl
test
jo
in
cmp
scas
xor
daa
in
pop
jnp
in
test
pop
imul
movsl
insb
or
mov
adc
lea
jb
sub
sbb
sub
xchg
and
int
ror
cmp
jmp
lock
mov
or
sbbl
and
lea
in
aaa
out
xchg
rcr
mov
or
xor
cmp
je
mov
pop
mov
pop
push
outsb
sarb
clc
cld
and
pushf
sub
sbb
lret
outsl
mov
add
mov
fnstsw
push
outsl
pop
mov
mov
das
xchg
nop
xchg
xor
sub
dec
loope
test
jno
pop
outsl
mov
mov
fmul
push
iret
jle
ja
jge
xor
xor
icebp
push
ss
jns,pt
jb
jbe
fidivl
cmpsb
ds
insb
mov
lds
ret
jl
xor
in
jg
test
mov
dec
enter
pop
sub
outsb
js
movsb
sbb
xchg
xchg
xor
xchg
outsb
mov
popa
leave
addr16
pop
loop
xor
sbb
test
push
stos
sar
push
icebp
pop
sbb
pop
cld
pop
jle
ret
dec
adc
scas
xor
adc
dec
cmc
dec
add
push
std
sbbb
fs
gs
sahf
outsl
cs
icebp
ror
faddp
test
pop
mov
imul
add
xchg
cmp
shl
gs
pop
das
or
xchg
mov
cli
cmpsb
dec
add
loope
dec
inc
cmp
and
in
lds
mov
pop
flds
mov
mov
mov
push
outsl
out
mul
fisttps
loope
pop
sbb
adc
jb
jae
mov
jl
iret
pusha
jle
and
hlt
xor
mov
mov
mov
push
mov
repnz
mov
xchg
lahf
test
sahf
aam
cli
stc
test
xor
dec
lret
repnz
lea
xchg
jge
pop
ss
sbb
imul
xchg
test
add
xor
dec
scas
lods
pusha
mov
jmp
ljmp
inc
xchg
sbb
cmpsl
and
outsb
ret
mov
pop
dec
dec
add
push
and
ljmp
out
mov
dec
scas
inc
test
in
mov
cmp
xchg
fisubs
adc
add
out
xor
addl
testb
xorb
clc
mov
jns
lret
rorl
xchg
mov
sub
xor
ljmp
xor
addb
and
mov
pop
repz
sarb
mov
push
cmp
pop
imull
arpl
inc
or
push
ret
std
pusha
pop
sub
sbb
mov
es
mov
xchg
or
std
call
sub
nop
dec
hlt
mov
cmpsb
lods
aam
loope
ret
and
cmc
push
jl
add
add
in
mov
xchg
push
pop
dec
hlt
sbb
stos
xchg
out
xor
lds
or
lock
fsubp
and
ficoml
fsubrp
std
jecxz
mov
mov
int
out
lret
aam
js
addb
inc
inc
fdivl
andb
lahf
pusha
int
iret
in
inc
stos
xchg
cmp
xlat
jno
pop
dec
ja
js
jno
test
pop
ss
fisubl
mov
pop
xor
jle
mov
mov
lea
push
add
shr
pushf
loopne
repz
in
gs
mov
scas
pop
push
xchg
push
ret
mov
jge
popa
inc
sub
popa
push
xor
in
lock
dec
cmp
mov
cmp
and
out
arpl
pop
aad
pop
push
mov
push
into
pop
loope
add
enter
xchg
mov
mov
in
mov
cwtl
out
pop
dec
or
jle
out
pop
inc
and
in
lds
cmc
fdivrs
inc
sbb
mov
test
cmpsb
add
loop
icebp
fldcw
les
ja
hlt
addl
jl
cs
cli
lds
jecxz
pop
push
jmp
cli
sub
mov
or
pop
jbe
sub
imul
popf
push
fucomi
loop
adc
scas
std
mov
add
ljmp
sahf
xchg
xor
xchg
rcrl
mov
lcall
pop
sbbb
int
add
pop
test
stos
push
and
stc
addr16
adc
push
repnz
sub
movsl
int3
push
ja
imul
mov
outsl
in
movsb
loopne
fs
addr16
fs
xchg
xor
aaa
enter
mov
iret
push
loope
push
and
shl
fsubrl
repnz
sbb
dec
jp
loop
mov
call
shll
movsb
in
pop
pop
mov
test
in
push
lret
loope
in
shll
sub
movsb
add
popf
jno
sub
xor
mov
int
incb
push
adc
cmp
nop
pop
stos
lret
outsl
cmp
fldenv
dec
xchg
inc
push
push
adc
or
cmp
lret
mov
out
xchg
add
jge
leave
int
xlat
stos
adc
jno
lret
ret
test
sbb
test
sub
dec
fistps
cmpl
js
xchg
stos
xor
jae
cmp
fdivs
sbb
in
ret
sub
rorb
jbe
call
adc
cs
test
sbb
popf
call
inc
popa
inc
pop
pop
das
in
lock
cmc
jecxz
xadd
movsb
add
mov
dec
or
scas
imul
es
cs
adc
sub
ja
xchg
inc
fcoml
sub
test
mov
inc
in
aas
fidivrl
test
push
cmpsl
cmp
xchg
or
push
pop
xor
sbb
xchg
or
add
push
xchg
adc
add
pop
fiaddl
inc
int3
lock
xchg
fnstcw
popf
int3
adc
mov
jg
dec
je
imul
addb
in
xor
xchg
mov
sbb
in
mov
add
cmc
mov
cwtl
xchg
mov
int3
mov
xor
mov
pop
lds
icebp
mov
mov
mov
add
imul
sub
jno
adc
subl
inc
dec
outsl
enter
dec
push
xchg
iret
fwait
lods
xlat
sub
stos
xchg
andb
ficoms
es
subl
and
and
aas
sub
mov
hlt
shrb
push
pop
dec
inc
cmpsb
xchg
stos
loope
mov
push
dec
lods
xchg
push
movsl
jns
pop
push
cmp
shll
xor
and
sub
outsb
pop
xchg
push
out
push
mov
mov
push
sbb
aas
arpl
lret
test
xor
mov
sub
sbb
push
pop
loopne
rolb
mov
imul
jo
dec
pushf
and
xchg
inc
repnz
adc
cmpsb
push
aas
je
adc
push
mov
sub
dec
xor
push
test
jne
xor
and
mov
imul
int3
mov
cld
push
cmp
test
pop
ret
imul
aaa
in
sbb
andl
xchg
aam
cmp
xor
jne,pt
sbb
adc
out
jmp
mov
add
movb
mov
in
incl
in
lods
cli
rol
mov
jp
push
push
mov
mov
jmp
idivb
xchg
xor
push
pop
mov
jb
xor
jne
or
push
in
jbe
movl
sti
sbb
sbbl
push
xchg
inc
mov
xchg
xor
es
or
adcb
push
loop
fs
push
popf
mov
xor
loop
cmpl
pop
push
sarl
and
fdivrl
leave
sbb
rorl
jne
les
jg
hlt
fldcw
push
orl
ror
sub
jecxz
dec
and
fimuls
cld
or
jae
sbb
mov
jo
mov
orl
outsl
daa
mov
pusha
ror
add
aad
sahf
mov
lods
ljmp
sbb
aad
dec
mov
adc
and
rorb
dec
aad
cld
adc
iret
loop
fwait
iret
int3
mov
mov
and
out
cs
xor
popa
inc
les
ja
ss
lret
leave
int3
repnz
sub
sarl
mov
or
and
xchg
int
pop
and
jp
enter
or
or
cmpsl
jno
xchg
in
mov
cwtl
mov
xchg
popa
sti
mov
push
aaa
aas
data16
loopne
ljmp
push
fnstenv
imul
ret
cmp
in
addr16
cs
roll
rcrl
in
fs
aaa
sbb
into
mov
je
add
adc
or
mov
push
xchg
or
and
sbb
jecxz
scas
loope
xchg
mov
xor
pop
adc
push
iret
push
outsb
mov
test
lcall
adc
push
inc
fnstcw
jp
aas
dec
inc
push
fimuls
jbe
adc
jns
in
aas
movsb
push
sbb
jns
out
out
sarb
in
scas
and
rorb
mov
mov
sbb
outsb
mov
pop
xchg
add
loopne
mov
xchg
je
das
clc
loope
adc
into
inc
cmc
mov
inc
lcall
std
xorb
jp
pusha
adc
mov
loop
outsb
mov
fiadds
out
leave
jb
pop
jne
cmpsb
and
xchg
lock
jl
xchg
fdivr
or
test
shll
shl
sub
mov
addl
jge
mov
sub
sbbl
dec
mov
sub
ds
xor
in
or
push
and
jl
insb
mov
and
arpl
fldenv
lods
jecxz
add
add
stos
ljmp
cmp
stos
lods
add
imul
ss
repz
xor
loop
loope
jl
xchg
pop
notb
sbb
in
shll
mov
nop
lods
imul
adc
fidivrs
std
sbb
mov
movsb
and
jmp
ja
test
incl
cmp
dec
push
cmc
imul
arpl
in
dec
dec
sub
rcrb
mov
sbb
adc
jge
sub
add
arpl
xor
insl
push
adcb
push
fstl
rol
mov
stc
or
cmp
jmp
jbe
lea
xchg
pop
add
hlt
sti
dec
pop
mov
int
xchg
and
ficompl
test
hlt
jp
dec
cmc
mov
jl
fiaddl
movsb
inc
out
pop
inc
add
lahf
cmpsl
jne
lock
in
les
dec
sub
ret
jb
movd
in
and
ret
dec
mov
nop
inc
push
push
jo
cmp
or
popf
jbe
dec
sbb
jl
daa
das
xor
cmpsl
jbe
je
subl
insb
fsubs
mov
gs
call
add
fsubl
nop
orl
or
addl
mov
jle
push
lahf
cwtl
pop
jmp
lods
and
xor
mov
add
jnp
call
sub
je
add
addr16
mov
ret
lret
cmp
out
sbb
dec
scas
mov
aam
pop
mov
mov
mov
cli
testb
filds
adc
mov
lret
test
lahf
mov
aas
dec
pop
adc
xor
addl
push
rorl
lcall
gs
rcrb
add
fadds
pop
xlat
cmpl
outsb
popf
dec
fisttps
sub
mov
arpl
cmp
inc
popf
repnz
popf
ljmp
in
inc
add
inc
sbb
mov
add
idivb
push
push
dec
or
xchg
xchg
ds
mov
mov
das
mov
mov
or
cmpb
aas
loope
jb
dec
int
bound
jb
repz
jne
nop
dec
mov
pop
sub
clc
and
jns
mov
mov
mov
aam
mov
test
cmp
pop
arpl
adcb
cld
arpl
sbb
xor
pop
push
loopne
inc
add
mov
scas
inc
sbb
adc
sbb
aas
and
mov
add
sti
jb
fistps
cmp
lock
lahf
adc
roll
loopne
leave
hlt
cmp
dec
xor
jle
push
dec
jmp
popa
mov
push
add
dec
ljmp
inc
imul
sub
movsb
rcrb
shrb
jg
fmull
xor
iret
pop
int
cmp
insb
add
mov
dec
lds
int3
mov
loop
xlat
jmp
incb
add
pop
cmp
adc
loopne
mov
es
and
mov
sbb
jecxz
lock
lahf
xchg
sti
lea
cwtl
cld
add
mov
pop
hlt
sub
mov
inc
in
lret
subl
cld
adc
xor
jle
cs
mov
mov
push
mov
lahf
les
mov
test
cmpsl
cmc
call
inc
movsl
add
jnp
mov
cli
lcall
ret
cmc
adc
pushf
mov
and
aaa
sub
sub
push
out
jmp
mov
or
lcall
and
jo
xchg
outsb
lods
mov
in
aas
jne
sub
xchg
aas
xabort
pop
inc
lcall
bound
call
add
dec
insl
jno
sbb
aaa
scas
test
ds
ljmp
in
enter
int3
mov
inc
cli
lahf
push
push
or
pushf
cmc
and
pop
mov
sbb
dec
in
aam
in
jo
movsl
sub
pop
lret
cwtl
outsb
es
scas
imul
in
mov
insw
and
xor
imul
mov
stc
inc
mov
shll
dec
aad
mov
jns
mov
popa
and
loop
scas
push
in
pop
jecxz
add
lret
fdiv
jbe
pop
adc
adc
dec
add
dec
je
jge
test
sbb
rcr
xor
adc
fcomip
lea
jo
cmc
jbe
shll
pop
movsb
or
cmp
in
std
test
xor
aas
nopl
rcr
ficoms
stc
xchg
sub
xchg
scas
jmp
and
jmp
dec
pop
jbe
xchg
xchg
cmpsb
sub
je
pop
gs
addl
and
pop
cmpsb
mov
mov
lret
faddl
add
jne
rorb
mov
mov
mov
mov
push
lock
in
das
int
mov
push
adc
sbb
mov
dec
push
jle
stc
lret
xchg
mov
push
mov
pop
pop
rol
pop
cmp
int3
fdivp
or
shrl
add
into
mov
cs
test
arpl
cmp
dec
mov
in
mov
jmp
xor
mov
pop
jge
je
mov
clc
jp
fnsave
dec
mov
movsb
sub
fstps
rclb
cmp
popa
mov
push
lock
scas
dec
jp
adcl
mov
jb
mov
inc
mov
inc
icebp
cltd
scas
pop
or
roll
xchg
and
stc
xchg
lock
es
pop
push
sbb
bound
movsb
cmp
and
inc
clc
mov
adc
xorl
sbb
cmp
jbe
pop
or
cs
lock
sti
and
xchg
mov
addr16
andl
push
xchg
jne
mov
xchg
or
adc
rorb
mov
loope
xor
xor
gs
mov
sbb
mov
mov
ds
cld
lock
sti
incb
lods
outsb
ficompl
out
lock
and
int3
or
pop
push
jno
jmp
stos
repnz
mul
or
mov
loopne
ja
into
xchg
sbb
pop
pushf
cli
dec
fstpl
sub
push
shlb
jmp
dec
adc
mov
test
push
push
jo
xor
fisttpll
sub
pop
push
ja
mov
sbb
and
mov
clc
call
add
dec
and
xchg
mov
sti
lret
mov
sub
lret
rorb
cld
push
sbb
push
rolb
inc
dec
sbb
inc
addb
push
mov
pop
imul
loope
xor
lock
dec
or
roll
int3
fcoms
mov
xchg
test
mov
pop
push
insl
test
dec
iret
push
sbb
cmp
sbb
pop
add
insb
addl
sahf
inc
sub
or
mov
ds
push
dec
push
adc
xchg
insb
frstor
sub
push
es
fnstsw
dec
mov
and
lds
dec
aam
repnz
mov
mov
sti
dec
mov
dec
in
cmp
cs
push
loopne
inc
inc
dec
lahf
jb
sub
cmp
test
fldt
stc
out
out
scas
push
cmc
xchg
pop
lea
rcll
mov
nop
and
les
or
mov
pop
scas
jl
hlt
iret
arpl
push
ss
cmp
lds
iret
xor
filds
outsb
sub
xor
loop
es
fsts
aas
adc
mov
mov
add
nop
jmp
lret
leave
cltd
xchg
dec
loopne
das
adc
mov
and
mov
mov
lods
leave
pop
ror
daa
fsts
and
call
push
xchg
fmuls
sbb
push
iret
fs
xor
dec
out
jmp
mov
push
xor
push
cmp
fstl
jg
mov
xchg
inc
mov
xor
jecxz
fs
loopne
mov
pusha
lds
xchg
cmp
inc
addb
push
xor
jne
push
sub
push
sahf
mov
adc
roll
shlb
stos
sbb
push
mov
lret
or
mov
sbb
mov
out
inc
mov
loopne
sbb
leave
loopne
xchg
push
pop
cmpsb
and
pop
pushf
xchg
sub
pop
jmp
rorl
mov
dec
sub
stos
jg
cwtl
imul
cmc
cltd
pop
out
in
std
movsl
addr16
ljmp
sub
jno
push
dec
pop
jbe
cltd
xchg
test
jnp
ja
std
add
shl
mov
pop
xchg
or
jne
jns
mov
dec
lods
in
out
imul
lods
imul
sbb
dec
jp
idivb
ljmp
pusha
shld
and
test
mov
push
and
sbb
xchg
movsl
mov
xor
or
xor
push
icebp
sub
lds
inc
int3
ret
cmc
jg
add
in
rorl
enter
mov
mov
and
cmp
dec
fiaddl
in
sahf
int3
xchg
arpl
cmp
pop
rcrl
xor
dec
mov
scas
xor
xchg
jno
dec
test
inc
ret
or
mov
mov
ds
mull
test
mov
cld
insl
leave
mov
jle
imul
pop
inc
dec
lea
ret
dec
test
xchg
lcall
push
movsl
sub
cmp
daa
sti
cmp
sbb
rclb
out
sti
shl
and
mov
enter
dec
pusha
jo
shll
xchg
or
mov
ljmp
jle
pop
movsl
out
ljmp
jb
mov
mov
jbe
inc
fdivl
xor
add
xor
jmp
mov
cmpsb
lcall
scas
xchg
lret
icebp
add
or
movsb
clc
inc
mov
cld
stos
jbe
cmc
add
xchg
inc
repnz
dec
sbb
sbb
cmp
aaa
inc
mov
xlat
outsb
ss
push
and
scas
jmp
push
js
xchg
and
in
mov
jge
loop
test
pop
or
fwait
add
sbb
jge
lret
idivb
xchg
loope
xlat
dec
lret
mov
movsl
in
scas
fwait
pop
fsubrs
sub
fsts
add
jmp
icebp
mov
mov
sbb
jp
sub
shl
fs
pop
add
stc
push
jmp
loopne
call
test
fcomps
lahf
xorb
push
add
mov
jmp
mov
call
cwtl
inc
lock
mov
sub
pop
inc
push
and
jnp
mov
pop
pop
inc
and
ja
xor
fimuls
cs
jp
insb
dec
xor
jno
js
pop
mov
gs
in
jo
out
push
lret
inc
or
mov
inc
movsl
int3
cmc
or
sti
sub
sbb
cmpsb
pop
push
test
fadds
test
in
test
inc
sub
xchg
outsl
scas
dec
movsb
cmp
cmp
jecxz
imul
jns
test
mov
dec
repz
mov
xchg
xchg
adc
push
mov
sub
xor
les
adcb
dec
inc
shrb
in
loope
xor
in
lret
add
cmpsl
out
gs
sahf
cmp
push
sbb
icebp
test
neg
or
movsb
out
or
aam
xchg
adc
je
mov
fistps
xor
push
adc
popf
mov
rol
mov
xor
shrb
mov
sbbb
stos
andl
stos
lret
imul
push
cs
mov
xor
or
stos
mov
or
mov
popa
ret
mov
and
loope
out
sbb
enter
and
ja
cmp
push
mov
jmp
sbb
fstl
or
pushf
jp
mov
inc
mov
icebp
or
cltd
dec
add
mov
adc
add
test
in
icebp
rorb
testl
in
loopne
ds
inc
mov
aas
scas
es
adc
mov
fsubp
pusha
arpl
sub
mov
in
rol
mov
xor
mov
xchg
jno
xchg
mov
movsb
roll
inc
jg
or
je
inc
ret
popa
dec
call
lds
pop
ret
hlt
xor
dec
adc
pushf
pop
fiadds
js
jg
in
pop
enter
iretw
mov
push
in
mov
repz
add
imul
mov
int
les
aas
xchg
mov
sbb
pop
jbe
fmul
aad
dec
jbe
inc
dec
inc
or
sbb
push
stos
pushf
and
jb
and
into
rcrl
jbe
and
jne
in
clc
sti
lea
mov
or
dec
mov
pop
repz
fs
lods
xchg
loope
stos
iret
add
hlt
cmpsl
xlat
cmp
push
xor
orb
fdivr
xchg
xchg
or
roll
popf
dec
lret
xchg
sar
push
mov
mov
test
cwtl
lret
jle
and
xor
pop
iret
mov
gs
sub
jle
jns
xchg
lret
cmp
mov
pop
incl
out
imul
test
mov
jb
jg
mov
xor
ret
scas
push
in
adc
mov
mov
xor
repnz
lret
push
mov
sbb
jle
xchg
xor
mov
adcl
imul
cli
shrl
push
push
mov
pushf
mov
mov
repz
mov
xchg
jge
mov
stos
cmp
test
adc
andl
sbb
mov
mov
mov
jns
fld
add
fistl
sbb
inc
mov
and
mov
iret
sbb
in
or
push
jmp
add
dec
in
xor
cltd
insl
adc
lods
stc
mov
ret
adc
imul
lcall
cwtl
into
mov
clc
movsb
dec
rolb
push
sub
xchg
ret
dec
add
or
iret
or
hlt
iret
push
sbb
rorl
jb
mov
call
cltd
jnp
mov
lds
test
cmp
fnstcw
cmp
test
pop
pusha
inc
movsb
sbb
fsub
inc
das
sub
lcall
addr16
lock
push
cmp
lds
lea
rcrb
jle
arpl
xchg
mov
inc
fwait
mov
xor
mov
push
sub
fs
sub
or
sbb
cmp
xor
jno
fcom
mov
orl
imul
mov
popa
adc
jae
cmpsb
push
sbb
jg
mov
repz
xchg
in
data16
xchg
mov
ret
cmp
dec
repnz
loope
push
mov
or
outsl
xor
jae
lock
inc
jnp
mov
and
pop
adc
add
jmp
sbb
mov
push
cmc
inc
fstps
adc
rcrl
dec
push
lods
addr16
sbb
xchg
adc
cwtl
or
mov
test
pop
repz
add
insl
push
out
mov
rorb
sqrtps
test
add
sub
inc
flds
mov
das
xchg
scas
lods
in
adc
aam
or
pusha
loop
daa
adc
and
ss
sub
cmpsb
roll
sub
cmpl
loop
pop
js
pop
mov
and
and
cmovae
popf
mov
adc
pop
je
adc
fcmovne
xchg
xchg
xor
mov
adc
mov
fadd
add
aaa
pop
mov
dec
dec
rcrb
push
clc
push
pop
push
leave
ds
adc
xor
or
sbb
fs
es
cli
inc
test
jle
fnstcw
dec
in
xchg
inc
add
mov
push
jp
loopne
jb
test
popf
cmp
mov
lea
xchg
dec
mov
jecxz
cmp
add
and
pop
mov
fxam
xlat
outsl
add
sub
dec
jle
and
xor
jns
cmp
dec
cwtl
out
xor
shl
mov
dec
mov
mov
push
fstpt
jle
nop
add
sbb
lret
mov
sub
out
loope
out
dec
into
pop
xlat
out
jno
lods
sti
lret
lret
cli
movsl
imul
lret
dec
cmp
aad
dec
push
repz
xchg
arpl
pop
lcall
pop
retw
out
sbb
stos
notb
or
mov
into
mov
leave
push
test
or
popf
sahf
xchg
cmp
sub
pop
jne
jecxz
xchg
imul
lds
xchg
cltd
cmpsl
inc
mov
orl
nop
push
ret
add
clc
inc
add
enter
mov
pop
insb
push
rclb
std
add
leave
mov
mov
in
mov
mov
ds
es
movsl
out
test
fwait
jl
test
lods
push
int
adc
mov
jle
ror
loopne
in
inc
jmp
add
icebp
mov
cmp
cmp
inc
into
add
ficomps
lock
ret
repz
mov
daa
xor
insb
jae
cmp
mov
pop
and
push
adc
xchg
je
stc
fmul
cmp
pop
cbtw
scas
cltd
mov
jns
cmp
inc
mov
xlat
in
je
dec
jg
or
inc
xchg
jbe
loope
pusha
mov
mov
jmp
sbb
test
adc
daa
fs
lods
mov
jmp
xchg
pop
dec
push
jl
bound
push
fs
in
jmp
aad
pop
test
dec
aam
jnp
pushf
mov
test
in
xor
in
in
push
push
pop
sub
cmp
mov
jo
xor
mov
jno
cmpsb
mov
push
dec
into
daa
ret
push
mov
jno
mov
int
test
testl
and
dec
js
out
and
cmp
out
add
out
frstor
fdivs
lods
leave
orl
pusha
sub
test
push
xchg
push
sti
or
and
movswl
out
addr16
inc
adc
pop
ret
test
jg
push
mov
xor
adc
dec
roll
and
data16
and
shlb
push
out
mov
mov
dec
and
jp
jnp
adc
loopne
xchg
push
pop
push
fwait
sarl
push
inc
cmpb
mov
adc
sbb
dec
outsl
cs
pusha
call
lcall
out
test
int
and
popf
into
scas
xchg
int3
outsl
mov
jmp
sahf
fsubrl
sti
imul
xchg
mov
dec
or
fisubl
rorb
jg
loopne
add
jle
aaa
stos
cmpsl
xchg
fldenv
mov
out
iret
sahf
add
jae
pop
fucomp
mov
addr16
ror
lods
sub
adc
adc
sub
mov
jle
mov
jne
jne
js
loopne
cmp
pop
mov
dec
shll
loop
jle
pop
mov
jge
data16
sbb
inc
and
sbb
jns
or
stc
inc
ret
lods
pop
cmp
test
inc
xchg
push
xor
ljmp
mov
je
mov
inc
mov
fildll
push
cmp
sti
push
test
std
out
rclb
decl
inc
sbb
sbbl
and
or
inc
jmp
in
sbb
in
in
and
jne
shll
ss
and
pop
stos
cmp
push
add
notl
push
cmp
inc
in
mov
and
inc
lds
loopne
imul
in
cmpsb
xor
push
imul
inc
push
push
sbb
mov
mov
sbb
xchg
jecxz
mov
fwait
aaa
hlt
bt
orl
mov
and
mov
fmulp
insb
mov
xor
clc
cmpb
mull
shll
insb
push
jg
loop
fisubl
mov
rcr
and
dec
push
push
lahf
aam
scas
jmp
jle
in
out
cli
lock
jle
dec
and
scas
loope
fimull
add
pop
inc
jb
jo
data16
inc
sub
add
mov
cmp
cmp
arpl
or
loopne
mov
icebp
inc
ljmp
adc
adc
pop
pop
push
icebp
sbbb
inc
xor
push
and
mov
imul
xchg
pop
clc
aam
je
or
jb
xor
and
pop
mov
adc
lret
fcompl
ret
cld
push
inc
fs
xchg
jo
repz
cmc
mov
out
lea
push
imul
pop
and
mov
out
cmpsl
mov
add
push
lods
aad
jle
fsts
stos
stc
lea
call
mov
push
push
inc
mov
cli
mov
cmp
out
mov
ret
push
imul
pop
adc
jo
sub
mov
int
cmpsb
ljmp
push
shlb
mov
cmp
mov
ret
sbb
out
lret
rclb
push
movsl
arpl
rcr
mov
bound
lods
and
shll
fcmovu
outsb
push
in
test
xlat
loope
adc
xchg
lods
outsl
loope
lds
nop
and
lret
push
push
cmpsl
add
or
jge
fnstcw
pop
addl
xlat
xchg
pusha
mov
push
fsub
push
mov
and
xor
testl
lods
pop
sub
and
xlat
xor
lods
push
movsl
lret
jne
xchg
mov
loopne
cmp
mov
sahf
sbb
arpl
mov
mov
mov
test
scas
xor
jbe
push
fmuls
nop
and
xor
jns
scas
mov
or
data16
psubusw
lcall
cmpsb
push
rolb
xchg
sbb
add
loop
pop
mov
push
jmp
popf
pop
or
xchg
subb
aad
dec
outsb
out
xchg
cwtl
sbb
ja
bound
das
in
fisubrs
fldcw
mov
sbb
bound
and
lods
or
adc
cs
jecxz
mov
popf
or
into
mov
jmp
cmpsb
adc
add
mov
dec
push
or
xor
cli
sub
aam
mov
cmp
sbb
and
pop
and
xor
xlat
pop
pushf
sarb
icebp
xchg
push
imul
cmpb
push
xrelease
mov
adc
add
aam
inc
lret
out
cli
and
sti
fdivrs
jle
std
lds
scas
in
pusha
or
stos
lods
mov
xlat
movsl
inc
jb
mov
je
add
pop
push
add
or
shr
jno
fldl
push
dec
push
js
xchg
enter
popa
push
subb
xchg
cmpsb
dec
or
add
fwait
fwait
cltd
push
aaa
add
xor
or
xchg
dec
push
jl
pmaddwd
or
mov
jne
lock
ret
xchg
jo
cli
xchg
lret
jns
notl
dec
jno
pop
push
fcompl
shl
adc
jae
push
int
cmpsl
pushf
xor
aad
lds
dec
sbb
or
movsl
xor
push
mov
and
ja
jp
add
clc
dec
out
xchg
lods
push
xchg
cwtl
cld
or
inc
iret
sbb
cmp
data16
xchg
fwait
aas
jmp
mov
mov
cmc
or
adc
mov
pop
cmp
fiadds
out
fwait
dec
xor
in
scas
out
hlt
inc
insb
rorl
imul
mov
sbb
hlt
jae
scas
loop
xor
popa
lds
push
cmp
jp
cmc
stos
pop
scas
jmp
push
shrl
gs
flds
das
adc
fsub
inc
jmp
jg
sahf
nop
repz
xchg
dec
loope
lds
dec
aas
ds
mov
enter
ficoml
stc
fistl
icebp
stos
nop
lret
lods
and
lea
fcmovne
pop
inc
sbb
stos
into
xchg
ret
add
xchg
jp
mov
mov
fnstcw
fldt
xor
cmp
adc
adc
outsb
dec
push
xchg
lods
xor
mov
mov
mov
ss
cmpsl
xchg
arpl
loop
cmc
pushf
call
lcall
pop
lcall
pushf
cmp
mov
xchg
ltr
add
and
cmp
pop
arpl
sbb
lcall
sbb
push
sbb
dec
roll
push
fistpll
jp
adc
dec
or
lock
cmp
adc
adc
adc
jecxz
cmp
pop
xor
cmc
pop
icebp
fadds
cmp
lods
sti
rol
sbbb
gs
ljmp
scas
sbb
dec
pop
push
loopne
adc
jae
inc
cmovp
lods
mov
insl
mov
xor
and
outsb
xor
push
or
mov
sbb
sbb
xor
add
add
sub
adc
xchg
leave
pop
pop
in
xchg
jge
icebp
jb
xchg
and
stc
les
sqrtps
lods
push
rcrb
test
shl
mov
mov
mov
cmp
pop
push
xor
and
inc
lcall
xor
inc
pop
or
sub
test
xchg
outsb
dec
dec
aad
jae
mov
push
in
adc
mov
xchg
mov
dec
stc
pop
int3
shll
je
jns
adc
dec
xchg
cwtl
out
dec
sbb
inc
push
fistpl
add
xor
cmp
stos
inc
sbb
rcrb
inc
push
mov
adc
mov
xchg
push
pop
lret
sub
repnz
insb
add
call
aam
sub
jmp
add
jge
jns
xchg
adc
add
and
subl
cmp
pop
cmpsb
adc
push
mov
push
xor
std
ljmp
add
cld
and
lds
icebp
repnz
add
aad
sbb
dec
insl
nop
ja
mov
jno
xchg
je
aas
jo
mov
lock
in
stc
into
jne
or
incl
test
inc
leave
push
insl
mov
pop
mov
mov
mov
mov
xchg
push
or
std
insl
lret
leave
outsb
sbb
orl
push
les
inc
pop
inc
mov
imul
aas
clc
add
xchg
cmpsl
stc
xor
rcrb
sahf
movsl
and
daa
dec
call
pop
cmp
call
test
cld
push
dec
insb
adc
in
sbb
push
out
jnp
jmp
stos
mov
and
jns
and
push
pop
cmc
add
and
call
cld
out
fstpt
fwait
mov
das
mov
push
inc
jge
in
in
inc
adc
ret
dec
push
jbe
dec
fpatan
cmpsb
dec
ds
imul
mov
fsts
mov
into
aam
add
jns
sahf
adc
sbb
push
pusha
pushf
mov
mov
fiaddl
or
sbb
mov
ret
push
fldenv
inc
dec
insl
push
mov
test
ja
out
iret
stc
fnsave
cmp
push
adc
jae
mov
mov
sbb
dec
sub
fcmovne
jbe
push
fstps
lret
lret
cmp
popf
pop
adc
inc
xchg
xchg
repnz
es
in
jns
push
push
sbb
daa
sarb
cmp
lret
xor
hlt
filds
mov
enter
loopne
xchg
adc
xor
mov
negb
outsl
push
insl
popf
in
cmpb
add
in
into
mov
lods
inc
in
push
sbb
test
mov
pop
mov
enter
push
lret
mov
inc
mulb
popf
or
fbstp
cmp
jae
leave
fdivs
mov
dec
cmp
jno
cwtl
das
imul
iret
add
into
pop
xchg
cmp
cld
adc
mov
addr16
cmp
push
pop
mov
clc
jecxz
jno
scas
adc
add
mov
inc
les
pop
bound
mov
jns
lock
xchg
es
cmc
sbb
leave
sub
push
push
cmp
lods
add
xchg
mov
enter
jns
cmp
sbb
jecxz
aam
hlt
fisttps
jg
cmp
mov
stos
xor
push
push
data16
sub
or
push
jo
fwait
cmc
xchg
inc
aaa
mov
mov
jecxz
addr16
mov
repz
push
mov
cmc
popa
sti
push
jl
arpl
adc
xchg
pop
test
and
ljmp
jnp
sbb
adc
sbb
sahf
in
mov
add
ficompl
jl
xchg
imul
pop
inc
fnstsw
insl
push
jbe
push
mov
add
imul
xor
outsb
xor
into
mov
and
ret
push
jns
mov
aam
add
add
cltd
pop
insb
add
sti
xor
pop
in
dec
fmull
and
icebp
jae
or
dec
loop
movsb
mov
jp
pop
aad
adc
push
adc
icebp
jno
aaa
dec
movsl
and
lods
push
scas
outsl
icebp
inc
lcall
xchg
arpl
enter
test
pop
loope
dec
cld
mov
xor
lret
inc
adc
movsb
xorb
loopne
mov
rorb
stos
fs
jno
add
cmpsb
leave
ljmp
outsl
add
mov
insb
lcall
test
call
dec
or
xchg
imul
mov
mov
add
xchg
popa
push
loop
sbb
popf
scas
pop
cs
xor
movb
cmpsl
cmp
mov
cmpsb
iret
ret
pusha
mov
dec
or
pop
int3
sbb
fldenv
add
adc
test
fadds
adc
fucomi
shll
pop
xlat
popa
mov
cmpsl
pop
jne
data16
outsb
lock
in
sbb
rcl
dec
sbbb
push
icebp
sub
aaa
sbb
adc
xlat
call
sub
orl
mov
sbb
add
nop
in
cwtl
lock
adc
or
cltd
pop
mov
gs
mov
divl
pop
insb
xlat
add
scas
pop
sbb
in
xchg
fsubrl
inc
sar
popa
imul
and
jns
call
sbb
mov
popa
xchg
add
ljmp
pop
cmp
insl
mov
mov
xchg
imul
pop
sbb
and
cmp
add
outsl
pop
push
xor
mov
xor
jns
hlt
mov
lahf
adc
push
cmp
rol
xchg
out
sub
je
movd
jno
or
mov
outsb
dec
out
pop
movsl
push
push
mov
in
jae
repz
sbb
dec
lds
leave
dec
push
inc
jge
fdiv
adc
inc
push
dec
mov
dec
cmp
dec
orl
fdivrs
cmp
adc
fs
push
mov
add
add
pushf
rcrb
or
dec
lods
ja
push
xchg
jmp
sbb
shll
mov
push
in
roll
mov
dec
mov
sbb
sbb
mov
fwait
pop
and
test
jle
test
ret
sub
jo
mov
push
or
add
jp
std
repz
push
stos
mov
pop
xor
and
dec
fcomps
iret
add
scas
popa
cwtl
arpl
lods
sbb
cmpb
fcos
sub
call
addr16
test
dec
ret
jne
mov
in
cli
sbb
test
in
xorl
add
clc
cli
mov
adc
addr16
push
xchg
fsubrs
pop
dec
ds
sub
fadds
or
inc
adc
fstl
das
and
std
dec
sti
push
sub
xchg
jge
pop
mov
dec
push
cmp
cmp
mov
test
mov
das
dec
jecxz
movsl
ret
jg
inc
lds
imul
je
arpl
jecxz
addb
cmp
cmp
sub
insl
imulb
cld
ljmp
push
nop
jmp
int3
adc
inc
dec
and
imul
test
pop
rclb
sub
mov
jle
sti
and
push
xchg
repz
dec
push
mov
sbb
mov
lock
loopne
mov
decl
mov
aad
cmp
sbb
cli
nop
lods
addr16
cmp
xchg
shrl
push
mov
sahf
enter
gs
das
mov
sub
psubsb
enter
test
ja
xchg
pop
outsl
push
sar
jp
dec
adc
lahf
iret
jns
cltd
mov
aad
xor
aam
out
push
sbb
roll
push
jnp
fs
pop
mov
call
movsw
outsb
cs
test
lods
loop
filds
jbe
fbstp
call
and
mov
jl
gs
xchg
mov
push
aam
ss
adc
pop
fmuls
pop
xchg
popa
dec
inc
lahf
and
mov
test
xor
mov
adc
outsb
je
outsb
out
sbbl
in
push
jnp
packuswb
mov
pop
mov
mov
sub
in
out
hlt
pop
out
ret
shll
xor
into
adc
dec
push
mov
popf
adc
mov
push
sub
and
je
hlt
fidivl
insb
in
iret
lret
or
cmpsb
push
rcrl
repnz
pop
fcomp
repz
pop
movl
inc
pop
push
insl
push
inc
xorb
pop
inc
in
ffreep
dec
jge
lods
mov
mov
imul
cmpsb
xchg
std
or
jae
mov
lods
pop
fsts
sahf
xlat
es
daa
arpl
lcall
shlb
push
sti
push
shlb
mov
nop
mov
mov
and
sahf
jae
inc
jecxz
or
test
jp
ljmp
mov
inc
push
cmp
cltd
cmp
shl
int3
mov
movsb
rorb
ss
in
xor
fstl
xchg
xchg
dec
fsubs
jo
inc
loopne
loope
adc
setp
out
cmp
lods
xlat
sbb
dec
lea
jnp
test
nop
sub
outsb
mov
add
int3
dec
popa
sub
xchg
imul
fld
test
je
dec
mov
rcr
rcll
scas
js
pop
cmc
daa
out
xchg
into
pushf
lea
and
inc
cmc
jl
std
adc
mov
push
adc
or
popf
sti
scas
push
out
mov
xchg
mov
mov
xchg
xchg
pop
mov
lds
add
jmp
push
roll
test
inc
cmpsb
add
sbb
push
cmpsl
bound
clc
jl
lock
ljmp
fsubrs
out
push
xlat
dec
adc
add
mov
pop
or
movsl
mov
jp
mov
das
xchg
mov
mov
aam
xchg
push
dec
popa
aam
inc
xor
jge
fs
lods
xchg
insl
sbb
out
jp
sub
pop
xchg
jl
push
cltd
test
xor
mov
dec
fstpl
lret
mov
or
lock
sbb
fisttps
fsubrs
dec
lock
lcall
stos
sub
mov
xchg
xchg
mov
mov
push
adc
sub
mov
mov
pop
fwait
out
mov
or
cmpsl
out
xchg
sub
xchg
cmp
and
lea
pop
test
bound
sahf
or
sti
push
fcomp
pushf
xchg
cmp
mov
aad
and
push
jmp
addl
popf
popa
test
xchg
or
std
xchg
mov
fstps
aas
addb
ror
enter
add
inc
sub
jo
in
rol
popa
scas
flds
jae
xor
mov
sub
insb
pusha
outsl
cs
cmpsb
adc
and
test
cmpsl
mov
adc
xlat
mov
cmp
sub
sbb
clc
push
jb
and
arpl
sub
adc
movsb
mov
xchg
cmp
add
xchg
out
adc
test
sub
shl
ret
fdivl
stos
repnz
sub
arpl
bound
add
jge
dec
std
addr16
movsb
mov
fldl
stc
or
mov
pop
jecxz
add
mov
scas
lahf
xchg
fistpl
movhps
jecxz
cmp
adc
setge
pushf
mov
push
js
int
cmp
data16
jle
add
js,pt
inc
mov
mov
cmpsb
stos
mov
insb
or
adc
mov
push
jnp
lahf
xor
cwtl
fs
add
clc
pop
shll
mov
xchg
sar
jbe
mov
ror
and
mov
ss
mov
aaa
outsb
push
push
pop
dec
cmp
inc
adc
into
cltd
mov
xchg
sub
hlt
outsl
add
push
test
push
je
jle
mov
pop
pusha
into
sub
jle
pop
sbb
cmp
mov
add
sub
ljmp
ds
stos
or
mov
popf
xchg
jb
and
sub
mov
fisttps
fwait
sti
mov
fmul
ss
inc
pusha
inc
out
cmp
jb
div
gs
ljmp
sub
data16
cmp
or
add
xchg
adc
fmull
xchg
mov
lret
sti
sub
repz
pusha
mov
cmp
mov
sahf
sbb
xchg
movsb
rcrb
shrb
dec
stc
push
lcall
divb
push
rorl
fisubs
lret
and
and
mov
fstl
cmpl
cmp
out
cli
mov
mov
into
xchg
lea
jb
cmp
push
push
xchg
sbb
xor
neg
int3
xchg
xor
jnp
int
scas
dec
in
xchg
je
ljmp
test
ss
sti
adc
ja
xchg
aaa
and
out
fisttpll
dec
cmp
stos
lea
push
dec
daa
jno
dec
mov
cmp
mov
mov
es
xchg
orl
sub
daa
lock
movsb
sarb
f2xm1
sub
adc
xchg
sbb
ret
loopne
inc
je
inc
pushf
rcr
in
cmpsb
out
pusha
imul
int3
lds
mov
push
ljmp
fiaddl
push
insl
aad
sub
adc
aam
mov
cmpsl
or
inc
add
incl
push
push
lds
addb
stc
xchg
sbb
lret
cmp
in
lcall
test
subb
hlt
push
mov
lods
push
aaa
lock
jecxz
mov
xchg
pop
lahf
sub
test
cltd
shlb
jg
divl
jns
push
rorl
in
out
lret
ja
jl
out
jecxz
pop
lods
sti
mov
imul
movsl
out
mov
xchg
lahf
mov
push
inc
in
stos
popf
xchg
mov
cmp
ret
dec
inc
test
xchg
stc
sub
addr16
out
sahf
clc
pop
pop
push
fimuls
rol
incl
nop
das
adc
pop
mov
jle
or
pop
mov
pusha
mov
jle
mov
ja
movsl
mov
sub
mov
ficompl
dec
pop
xorb
lcall
arpl
jae
xor
adc
stos
jmp
xor
sub
xchg
mov
and
pop
xor
in
inc
mov
std
pusha
pop
test
xor
add
cmc
pop
shlb
mov
add
mov
jne
push
js
push
jp
xor
pop
bound
ds
mov
dec
mov
xor
sub
mov
add
mov
ja
outsl
repz
adc
mov
stos
mov
jns,pt
loope
popl
add
leave
int3
cli
mov
movsb
fisttps
fisubl
and
and
add
das
push
mov
pushf
add
pop
fstps
xchg
add
pushf
call
pop
ret
shl
jmp
scas
xchg
mov
rolb
push
pop
adc
xchg
fs
xchg
iret
aaa
and
mov
andb
fisttpl
nop
mov
push
lea
jbe
xor
in
xor
xor
or
add
stos
int
repnz
mov
shrb
fistps
in
jae
idivb
fidivrs
cmp
daa
mov
jo
in
test
pushf
mov
push
lods
jg
jg
sbb
and
sub
dec
pusha
mov
pop
out
enter
jne
lcall
lock
nop
mov
pusha
into
xchg
add
cli
out
mov
or
add
aad
cwtl
jle
jl,pt
les
xchg
repz
popa
mov
es
movsl
lods
ret
sbb
adc
aam
adc
cs
setne
clc
in
mov
leave
ror
lahf
cwtl
loope
xchg
sbb
adc
jns
cmp
scas
mov
xchg
jo
push
outsb
xchg
ret
mov
pop
cmpsb
int
cmp
sub
nop
scas
inc
fxch
subl
imul
and
jle
cmpsb
ficoms
mov
stc
sbb
push
shlb
test
imul
cmp
pop
fs
pop
push
mov
shrl
lret
rcl
fldt
es
pop
push
orb
cmp
dec
ficoml
cwtl
je
das
dec
lds
inc
js
call
movsb
jp
jl
lea
mov
mul
mov
mov
cmpsl
lahf
stos
fstps
jne
jge
cmp
stos
pop
mov
push
fidivs
mov
out
clc
xlat
lock
fnstsw
lcall
cmp
jbe
js
mov
je
push
stc
dec
mov
iret
mov
cld
inc
mov
jmp
pushf
xchg
data16
lcall
sub
cmp
ds
out
xchg
pop
xchg
daa
jp
mov
mov
data16
sahf
aaa
adc
add
sahf
call
rolb
sti
push
mov
xchg
mov
hlt
cmp
imul
mov
iret
rcrl
jle
xor
xchg
adc
cmp
fisubrl
mov
adc
cmp
xchg
out
movsb
dec
inc
iret
sbb
xchg
sbb
negb
in
icebp
mov
sbb
cmp
setae
sahf
pop
sbb
sub
movsb
insl
jno
cmc
mov
sar
outsl
enter
aad
xor
outsb
and
scas
push
bound
mov
dec
mov
leave
mov
adc
push
arpl
in
ficomps
call
mov
xor
ficomps
imul
nop
aam
xchg
sub
popa
sbb
fwait
add
inc
mov
lds
test
pop
dec
push
nop
add
cmp
jmp
sbb
mov
push
jmp
ficoml
ja
push
xchg
clc
icebp
mov
pop
inc
adc
push
and
decl
jge
xor
dec
xor
sub
jp
lcall
fs
sub
push
sbb
fwait
rol
testb
xchg
loope
movsb
test
hlt
lret
fwait
lds
push
xchg
dec
into
nop
fcompl
mov
outsb
loope
mov
add
xor
pop
std
imulb
mov
pop
xor
cmc
pop
dec
mov
pop
jbe
fimuls
loope
cmp
cmp
mov
fucomp
add
or
fstpt
xor
call
and
aas
repz
jne
mov
aam
adc
cmpsl
pop
mov
ss
lods
cmpsb
adc
jmp
mov
shrl
cmp
popf
or
or
in
and
xor
sahf
loop
ljmp
mov
or
popa
test
cmp
xchg
jbe
xlat
into
addl
dec
cwtl
ja
out
adc
sub
mov
cmp
data16
sub
or
pop
push
jmp
push
jo
cmc
aam
fnstcw
subl
cmp
mov
pop
push
and
mov
jns
cmp
push
or
pop
aas
test
ljmp
out
inc
or
adc
xchg
pop
sbb
pop
int3
push
sub
cmpsl
pop
aad
add
mov
inc
fwait
mov
and
xlat
stos
in
in
movups
push
sub
roll
sub
shr
add
pop
sub
and
push
arpl
jnp
rcrb
sbb
push
push
paddb
bound
or
repnz
ret
push
iret
jmp
jns
cltd
add
lods
jns
sbb
enterw
repz
into
daa
cli
lods
xchg
fdivrl
lahf
ret
lcall
sbb
inc
and
sbb
call
jg
mov
addl
addr16
mov
dec
lcall
mov
or
into
dec
add
push
mov
bound
cmp
or
mov
cld
daa
mov
sub
or
int
push
dec
popa
fistps
jo
cmp
insb
imul
mov
shrb
cmp
cli
aad
push
mov
rcl
scas
aam
hlt
jg
mov
mov
adc
mov
or
test
and
shlb
imul
cmp
push
pop
fs
mov
mov
or
fucomip
mov
in
repnz
or
jge
cs
xchg
daa
mov
dec
pop
push
roll
xlat
cmp
push
cmc
les
jle
in
xchg
ret
cltd
fisubrs
popa
hlt
popa
popa
mov
sub
add
ja
das
xchg
push
cmp
mov
adc
pop
insb
adc
int3
jp
lcall
lret
inc
stos
sbb
xchg
mov
xchg
fadds
outsb
xlat
inc
dec
loopne
xchg
mov
mov
lods
ja
subb
js
lds
test
mov
fmull
test
fcomps
sahf
jbe
or
or
lods
test
sbb
pushf
daa
in
pusha
push
repz
mov
xchg
cmp
xchg
pop
mov
testb
jp
push
sbb
mov
xchg
lahf
mov
mov
ss
test
push
xor
hlt
add
pushf
jge
pop
cmpsl
cmpsb
ds
jb
insb
lcall
cli
or
pushf
jmp
bound
icebp
daa
lret
mov
ds
xor
test
dec
mov
xor
mov
mov
mov
mov
cmp
xchg
xchg
add
push
out
and
iret
iret
pushf
pop
fwait
cld
pop
sbb
mov
xchg
pushf
or
mov
mov
loop
cmc
into
xor
push
push
jmp
iret
or
dec
jne
pop
inc
and
in
mov
sub
pop
mov
and
pop
pop
in
iret
ja
dec
pop
iret
push
xchg
shlb
jbe
dec
inc
fistpll
dec
xor
push
lret
cmp
pop
sahf
inc
hlt
dec
add
adc
sub
xchg
arpl
sti
insb
loopne
incl
mov
sub
inc
add
pop
mov
loopne
mov
fildl
sahf
adc
sbb
xor
mov
mov
dec
fldt
cli
add
js
jbe
pop
xor
shlb
xor
mov
jns
push
pop
nop
xchg
ljmp
push
push
mov
pop
testl
jle
xchg
jle
sbb
xchg
push
gs
xchg
adc
jo
mov
int
push
mov
clc
imul
mov
mov
fidivrl
mov
enter
sbb
popa
lods
cmp
jno
mov
mov
push
inc
dec
gs
out
push
xlat
pop
and
mov
testl
jmp
jmp
lds
cmp
push
jns
mov
xchg
sub
xchg
scas
shll
cld
rolb
pop
dec
push
push
andb
popf
movsb
mov
fcoml
frstor
xchg
cli
mov
xlat
mov
in
mov
sbb
sbb
xor
jmp
rorb
stos
jns
sbb
mov
add
xor
stos
out
or
jle
xor
nop
imul
and
mov
sbb
dec
cmp
clc
add
mov
jne
dec
add
xor
xchg
aaa
adc
sbb
or
mov
sarl
dec
mov
jnp
aaa
jnp
test
arpl
pop
mov
jo
xor
mov
jbe
sti
or
xor
mov
aam
test
sbb
fimull
pop
sbb
call
and
mov
sbb
jl
add
pop
sbb
sub
js
xchg
call
push
stos
mov
shr
dec
mov
push
or
mov
stc
fldenv
pop
loop
in
nop
lds
stos
lea
push
mov
fcomip
fwait
mov
xor
pop
push
and
or
sahf
pop
into
cmovnp
inc
idivb
pop
popf
or
outsb
sub
dec
fnsave
and
es
mov
inc
push
loope
ss
and
repnz
repnz
mov
ret
adc
pop
test
clc
movsl
aas
adc
mov
jo
mov
lds
or
insb
pop
add
jl
push
lret
adc
rcll
jg
stc
cmp
xor
rcr
adc
stos
mov
xchg
je
mov
int
je
lods
push
cmpsb
lds
std
cmpsl
pop
sub
repz
add
das
mov
jbe
mov
inc
sbb
jae
or
int
es
inc
jg
outsb
je
fnstenv
xchg
enter
sti
adcl
loope
es
int3
mov
out
push
push
sub
xchg
jg
leave
inc
int3
mov
mov
jl
insl
bound
bound
sar
fsub
or
in
lcall
push
inc
out
into
xchg
sub
cwtl
jno
pushl
mov
out
movsw
ret
in
xchg
je
fdivrl
vpsrlq
jmp
lea
pop
sahf
cmp
sbb
mov
xorb
cmp
mov
push
xlat
mov
scas
mov
aam
push
push
sub
or
and
inc
out
lds
test
jge
insb
jae
pop
xchg
ja
push
shll
icebp
sti
mov
xchg
pop
out
test
mov
lahf
or
or
mov
pop
mov
out
xchg
test
adc
ret
repz
xor
mov
enter
add
mov
and
cmp
dec
sbb
rcl
push
sbb
pop
jle
mov
fcompl
xchg
rorl
xchg
je
inc
push
jb
mov
or
mov
imul
jp
jne
add
adc
sbb
adc
mov
aam
loope
out
mov
xlat
mov
daa
out
loope
nop
dec
add
pop
mov
lret
pop
pushf
gs
sbb
das
mov
je
jbe
addr16
push
adc
pop
xor
fadd
dec
into
mov
and
or
test
gs
aad
cmpsb
sbb
ret
out
xor
int3
sub
in
sahf
incl
jne
and
inc
jp
add
leave
gs
cmp
bound
fstl
and
push
add
in
popa
mov
ret
push
fsave
sub
fidivl
and
outsb
jp
jmp
js
je
add
or
dec
stos
sahf
fwait
dec
inc
lods
mov
rorb
popf
mov
outsl
jne
pop
scas
adc
xchg
push
in
shll
bt
or
lret
and
insb
test
into
pop
stc
sub
in
push
xchg
popf
cmpsl
mov
sub
repz
leave
jle
push
orb
jmp
inc
fs
fstpt
shrl
and
cmpsb
cs
jp
push
pop
and
inc
pushf
mov
test
or
or
jle
addr16
cwtl
movsl
sbb
pop
push
push
fldenv
dec
mov
add
ljmp
dec
ficomps
and
push
jp
xlat
push
adc
inc
repnz
aad
cmp
cmpsb
add
popf
addr16
es
sub
daa
mov
int3
cmp
mov
cmp
or
cmp
daa
scas
inc
daa
sub
push
add
inc
test
add
pop
fistpl
push
movsb
psadbw
adc
mov
push
aas
les
notb
shlb
xor
xlat
cmp
daa
xchg
bound
mov
push
xor
sbb
div
inc
cmp
mov
pop
sub
cltd
lods
jns
inc
outsb
jge
mov
or
clc
ljmp
mov
dec
aaa
arpl
fstpl
and
sbb
xor
adc
sub
xchg
pop
jecxz
stc
adc
or
push
inc
aam
mov
mov
xchg
inc
push
fldcw
pop
in
and
insb
adc
xor
divb
push
sub
and
ss
dec
cld
jmp
sub
jae
adc
popa
clc
jno
cli
mov
mov
cmc
xchg
in
cmp
mov
push
pop
loop
icebp
and
adc
mov
popf
add
mov
mov
xor
pushf
inc
outsl
mov
js
hlt
fidivl
cwtl
imul
aas
int3
call
mov
lods
leave
xor
add
or
cmp
and
jmp
inc
mov
enter
mov
popf
jle
outsb
sbb
daa
stos
adc
repz
dec
loope
in
ficompl
ljmp
inc
shll
xor
leave
push
in
outsl
movsl
cld
in
pop
push
mov
inc
mov
mov
je
push
push
pop
ljmp
cmc
aad
fcmovb
cld
pop
inc
in
lock
icebp
lea
jmp
mov
push
and
dec
or
xchg
pop
stc
push
cmpsb
adc
xchg
push
dec
cs
mov
cmp
mov
mov
hlt
jg
addr16
repz
pop
sbb
movb
jnp
mov
and
adc
xchg
mov
cmp
daa
push
add
repz
cli
hlt
mov
cmpl
add
mov
das
inc
sbb
pop
jns
popa
and
cmp
mov
inc
jne
aas
idivl
adc
xchg
and
pop
test
and
in
xor
cmp
push
jle
jae
pop
jmp
inc
pop
pop
mov
push
out
dec
imul
jno
stc
mov
sbb
xchg
lcall
xchg
and
cmpsl
js
aas
lds
xchg
stos
dec
ljmp
mov
repz
lret
mov
mov
lahf
hlt
mov
dec
loope
pop
push
add
mov
lahf
popf
mov
xor
fisubrl
push
mov
fwait
vmread
cli
lods
adc
sti
jns
and
outsl
fisubs
mov
addb
add
orl
pushf
mov
and
pop
cs
pop
popa
xor
jl
mov
adc
ds
cmpsl
jnp
inc
addl
fcoml
push
outsb
icebp
lcall
in
aad
mov
aam
pop
cs
xchg
fcoml
and
lcall
imul
jae
add
or
push
aas
out
push
lahf
xor
leave
mov
repz
jl
and
xor
ljmp
fistl
push
jl
sbb
dec
push
in
aas
loop
fsubrp
fsubl
pop
jl
and
add
subb
jne
mov
mov
push
or
flds
fs
pop
shll
or
out
jno
sar
or
nop
repnz
or
ds
fimuls
dec
adc
arpl
mov
adc
mov
and
jmp
imul
cmp
and
pop
sbb
xchg
out
mov
cmp
iret
insl
pop
cmc
test
ja
out
fstps
mov
mov
test
fstl
add
jnp
out
or
imul
adc
std
adc
lcall
jnp
aaa
sbb
pop
imul
dec
fdivl
das
jno
leave
daa
xchg
jo
leave
and
scas
std
subl
sub
pop
dec
mov
testl
ret
test
loope
mov
movsb
sti
in
inc
push
add
pop
dec
sub
fmuls
mov
xor
into
stc
addr16
xchg
cs
inc
call
mov
mov
fwait
pop
mov
adc
adc
aaa
adc
es
pop
adc
pop
fsubr
fs
push
mov
inc
and
iret
aaa
pop
les
pop
leave
adc
int3
pop
in
scas
std
stos
dec
fisubs
jmp
in
sahf
fnsave
inc
out
and
dec
stos
cmpsb
mov
cmp
add
test
mov
inc
xor
mov
jle
xor
dec
cs
xchg
mov
rcll
push
and
mov
jb
stos
cmp
sbb
insl
loope
push
xchg
cld
fldcw
cmp
inc
clc
cltd
icebp
ficoml
push
psrlq
and
out
push
fs
in
or
inc
cmp
fcom
clc
cmp
es
xor
loop
xchg
popa
hlt
fs
mov
sbb
mov
hlt
mov
mov
push
enter
and
mov
stos
fisubl
adc
test
fldenv
les
stc
ret
mov
dec
adc
dec
aad
adc
iret
and
jg
jmp
pop
and
adc
jbe
xor
es
loop
repz
ret
jbe
xchg
xchg
add
aad
scas
repnz
sarl
sbb
mov
stc
hlt
xchg
xchg
and
dec
inc
pop
and
and
cli
and
mov
test
mov
dec
mov
dec
or
and
rolb
jb
sub
dec
popa
and
outsl
mov
dec
cmp
sub
add
cmp
in
sub
mov
imul
aaa
ja
stos
cmp
inc
and
insl
ficomps
sbb
fnstsw
out
stos
repnz
enter
sahf
or
adc
jnp
sahf
lea
dec
fldenv
mov
aam
push
jle
sub
adc
out
dec
adc
cli
xchg
xchg
push
popf
mov
xorb
xchg
mov
enter
pop
lret
cmp
js
pop
or
cmp
or
filds
out
std
pop
mov
mov
loopne
mov
movsb
outsb
stos
out
sbb
adc
mov
xor
scas
leave
shrb
pop
xchg
jl
jmp
mov
fwait
inc
rcrb
dec
and
stc
int
addr16
pop
lock
mov
xchg
add
stc
jl
ss
add
lcall
xchg
pusha
das
dec
addr16
jae
jmp
mov
add
pop
dec
ja
cmpsb
jmp
cltd
mov
xor
imul
sbb
fistl
sbb
cmpsb
sar
mov
inc
outsb
call
add
push
adc
jbe
ret
or
sbb
out
adc
adc
add
lea
cs
lret
hlt
addr16
rorl
fadds
lcall
sub
insb
jae
repnz
jo
out
push
std
pop
lock
pop
add
les
inc
daa
jns
mov
addl
mov
fcmovnb
movsb
sub
inc
std
mov
shll
test
mov
ljmp
fstp
aaa
mov
jns
popf
jge
test
adc
sti
mov
sub
out
mov
jns
push
mov
mov
sbb
sbb
mov
fsubrl
pushf
dec
or
insb
sbb
cwtl
in
pop
push
lea
negl
fistl
inc
push
sub
std
or
fsubrl
loope
enter
loopne
push
and
jmp
push
je
shlb
or
pop
and
bound
and
leave
push
notb
fdivrs
cmp
sti
stos
add
repz
arpl
cmp
dec
jl
mov
sub
sub
push
rclb
int3
push
mov
xor
adc
add
adc
add
mov
rolb
sahf
jno
sub
pop
scas
dec
popf
fucom
fsubl
push
testl
sbb
pushf
sub
lds
out
loope
xchg
mov
jmp
fwait
cwtl
cmp
dec
nop
cmp
adc
fimull
fcmove
xor
outsb
push
dec
sub
add
xor
jne
cmpsl
mov
push
fisubrs
enter
sbb
sbb
cmpsb
xchg
insl
push
mov
adc
xchg
mov
les
jbe
repnz
into
fsubr
aaa
mov
imull
test
fldenv
rcll
fwait
js
out
or
lods
fwait
std
xlat
sqrtps
xchg
pop
lret
jmp
or
fcmove
mov
cld
loopne
iret
adc
data16
outsb
sbb
sbb
insb
enter
fs
dec
xor
mov
mov
ljmp
loopne
pop
jg
push
jg
xchg
mov
push
jns
dec
or
adc
cmp
stc
pop
dec
addl
sub
push
mov
test
xchg
dec
cmc
push
pop
fsubr
addb
mov
cmpsl
stc
dec
cmpsb
cmp
sub
mov
xchg
lcall
outsl
popa
push
sub
jne
mov
repnz
dec
test
stc
jg
mov
push
cmp
popa
mov
addb
sbb
repz
mov
cmp
xor
test
pop
sub
mov
and
xchg
outsb
enter
aas
pop
jle
aas
mov
insl
inc
test
jae
xor
lahf
mov
or
lea
aad
gs
rorb
dec
and
lock
push
xor
shlb
mov
fwait
dec
outsb
ss
lods
push
add
test
decb
outsb
sub
fistps
cmp
and
fldenv
mov
fldcw
stos
pop
icebp
add
out
mull
cld
mov
fs
movsb
add
sahf
inc
pop
xchg
sbbb
es
sbb
push
into
or
outsl
mov
movsb
xchg
jns
inc
adc
sbb
cmc
stos
mov
fisubl
add
mov
add
int
dec
sti
imul
cmpsb
daa
test
xchg
push
mov
jb
and
lds
sbb
inc
fwait
fwait
ret
xor
pop
imul
fmull
int3
in
out
popa
iret
aam
andb
hlt
or
xor
inc
sbb
cmovl
cmp
sar
push
jae
pop
ljmp
pop
jle
mov
or
das
int
xchg
cs
mov
xchg
adc
mov
pushf
aad
movzbl
cmp
fstpt
and
inc
aad
mov
jmp
daa
pop
test
dec
shll
cs
rorb
jle
sub
cli
sbb
xchg
icebp
cmp
popf
sbb
jae
lds
sti
add
jg
inc
cli
loop
inc
jbe
cltd
add
ret
mov
scas
stos
mov
das
adc
inc
or
inc
in
into
out
push
sbb
dec
popf
jmp
xor
sub
jno
lods
jo,pt
jns
fidivs
fwait
lret
hlt
and
mov
cmc
xor
fisttps
cmp
mov
mov
cmp
mov
sub
push
sbb
sbb
cmpsl
rorb
cmpsb
xchg
fs
mulb
mov
mov
addr16
fstpl
ss
imul
pop
cmpsb
movsl
mov
mov
aaa
push
ja
push
addr16
jl
loope
jb
cld
ss
push
stos
pop
loop
popa
ror
jmp
push
clc
mov
dec
push
int3
add
xchg
sbb
pop
jg
jmp
out
lock
lret
neg
push
aam
sbb
sub
cwtl
rcrb
rcrb
insb
pop
mov
inc
sub
pop
fsubs
into
in
out
cmp
add
push
ret
in
test
adc
ss
popa
cmp
loopne
fxam
push
mov
xchg
inc
push
inc
lea
sti
mov
and
xchg
orl
adc
stc
icebp
cmc
sbb
cmp
pop
cwtl
and
jns
mov
jecxz
xor
mov
inc
int3
xchg
imul
xor
jge
cld
cmp
mov
jnp
lods
cmc
outsb
sub
push
jl
sbb
jbe
out
inc
cmc
push
ret
xchg
jl
or
gs
les
mov
subb
or
rorl
lahf
inc
mov
adc
popa
pop
mov
mov
sahf
icebp
loop
arpl
shll
sub
js
jg
mov
inc
xor
jo
mov
movsb
rorl
mov
xlat
xchg
push
xchg
popf
add
and
inc
pop
add
repnz
add
mov
cli
cmp
outsl
int3
into
leave
out
push
daa
mov
push
jp
vpsubusw
es
rorb
sbb
repnz
xchg
and
inc
fcom
xchg
fcmovne
fwait
mov
push
rcrl
cmpsb
mov
push
jp
fisttpll
dec
pushl
hlt
mov
sbb
fiaddl
mov
pop
imul
or
mov
sarb
push
lods
fs
add
mov
divl
or
popa
fadd
movswl
repnz
pop
push
jae
mov
push
es
jmp
dec
xchg
movsl
cmp
adc
cmp
scas
in
mov
lahf
addb
aaa
cltd
xor
cwtl
vaddps
dec
rorb
mov
nop
stos
cmpsl
ret
data16
out
repnz
pop
popf
imulb
rol
xchg
outsb
jle
fsubrs
inc
or
loopne
xor
sbb
call
push
mov
add
subb
pop
into
sahf
loopne
sub
jp
lret
stc
cmp
stc
aad
jbe
or
mov
xor
js
sub
test
xchg
hlt
jns
and
lcall
into
imul
push
icebp
xchg
stc
pop
xlat
gs
mov
stos
pop
imul
xchg
out
mov
cmp
imul
and
lret
jne,pn
jl
xorb
jecxz
cmc
mov
jl
adc
dec
mov
cld
cmpsb
sbb
lock
addr16
push
add
inc
out
add
xor
test
or
shll
mov
cmp
jnp
inc
ljmp
lahf
ficomps
outsb
mov
enter
xchg
popf
insb
jbe
xor
hlt
icebp
iret
cmp
mov
add
cwtl
loopne
push
test
scas
jbe
insb
sub
shrl
popf
jmp
fsts
fidivs
ret
insb
das
xor
lahf
and
mov
fimull
xor
jmp
xor
aas
and
jg
and
test
mov
sub
dec
ficomps
addr16
loopne
jb
add
xchg
mov
in
fiadds
inc
xlat
not
lods
imul
mov
insb
dec
xchg
xchg
and
out
shrl
cmp
xchg
jo
jmp
adc
adc
xor
cmp
push
sahf
and
cmpsl
shlb
pop
push
and
jl
adc
iret
sub
dec
lahf
fisttps
cmpsl
cmp
pop
aas
dec
aas
xchg
cmp
stos
jge
adc
popa
divl
sbb
jle
nop
js
mov
lahf
add
loope
pop
sti
cmpsl
es
jle
or
stc
into
jl
inc
es
lea
aad
mov
fcomp
adc
adc
pop
scas
push
stos
aad
ljmp
mov
xlat
mov
cmp
mov
sub
sub
add
divl
dec
out
es
outsl
push
cmp
sub
adc
fmul
xor
xchg
pop
and
testl
jl,pt
jno
and
push
mov
cwtl
jbe
inc
jb
in
shll
dec
and
jmp
dec
fcmovu
mov
pop
insl
dec
inc
add
lods
add
cmp
jo
fnstcw
or
and
mov
add
sub
pop
adc
nop
fcomip
dec
and
mov
imul
aam
xchg
or
mov
fnsave
lret
std
inc
xor
lahf
loopne
jb
add
outsl
or
aam
jnp
jb
sbb
ds
cli
int
mov
mov
fisttpl
imul
pop
stc
sub
in
int
loope,pt
cmpl
xor
xor
pop
loop
jb
sbb
mov
and
sahf
insb
lods
call
dec
or
sbb
push
rclb
movsb
xor
add
dec
cmp
movsb
cmpsl
mov
movsb
cmp
ss
out
mov
into
push
inc
test
cmp
mov
inc
mov
in
mov
jecxz
push
pop
sub
into
dec
adc
mov
xor
stc
xchg
xor
mov
sbb
pop
jnp
xchg
mov
mov
sub
pop
sub
add
mov
cmp
push
dec
movsl
in
mov
scas
arpl
xchg
in
stc
push
out
xchg
jae
into
or
clc
lods
pop
lods
push
or
jb
sbb
jb
repnz
push
stos
xchg
adc
mov
push
push
popf
inc
sbb
inc
push
icebp
jl
ret
int
ds
xor
mov
pushf
pop
dec
iret
sbb
bound
test
hlt
adc
lds
jp
hlt
mov
xchg
or
mov
xor
inc
popa
push
imul
and
jnp
rcrb
shr
inc
mov
int
add
stc
dec
stos
inc
sbb
and
mov
xchg
std
pop
sahf
shlb
sub
push
jae
ror
pusha
imul
repz
insb
test
js
sbb
out
push
push
pop
dec
addr16
es
sti
daa
lods
mov
je
mov
out
cmpsb
mov
shlb
dec
sbb
sbb
test
addr16
push
mov
out
push
std
push
dec
pushf
jmp
push
inc
out
icebp
dec
out
aam
mull
jp
subl
pop
cli
cmp
lret
adc
scas
dec
lret
outsl
adc
stos
das
cmp
dec
add
push
loopne
stos
push
inc
jmp
outsb
xor
pushf
push
xor
mov
mov
xchg
shrb
push
les
and
push
out
scas
cmp
push
insl
xchg
in
lods
outsl
push
aaa
gs
xchg
cmpsl
scas
aam
testl
pusha
pop
leave
mov
mov
and
scas
mov
test
cltd
push
repnz
dec
sbb
lret
mov
adc
test
js
dec
push
xor
adc
jl
xchg
jg
sbb
jns
js
xchg
mov
aaa
mov
dec
add
mov
shrl
pushf
xchg
stos
jno
lods
subb
and
mov
outsl
mov
idivb
fucompp
jns
insb
out
loop
mov
cltd
sub
mov
mov
and
jae
js
inc
or
movsl
mov
sub
mov
mov
lret
call
pop
gs
pop
pop
and
movsl
loopne
mov
mov
inc
mov
mov
jmp
inc
jnp
sub
cmp
jmp
enter
out
lods
stos
mulb
inc
mov
div
push
in
cmpsl
jno
add
xlat
dec
xchg
mov
mov
or
jg
xchg
add
mov
test
rcrl
xchg
pop
push
std
cmp
pop
lcall
cmpsl
fildll
mov
repnz
lock
and
outsb
cmpsb
sbb
jnp
xor
mov
xchg
test
xor
push
ficoml
jp
adc
xchg
xor
in
out
cli
pushf
and
xor
add
aas
outsb
andl
add
sbb
jmp
lea
nop
sub
mov
add
scas
nop
fisubrs
cmpsl
mov
out
sbb
sub
outsb
xor
cmp
sbb
dec
mov
mov
jne
jae
mov
addr16
sub
and
stc
jle
mov
ss
xor
adc
jecxz
push
jmp
lods
add
push
xor
imul
mov
jns
and
mov
inc
leave
sbb
cltd
sahf
push
mov
pop
mov
hlt
jno
mov
fucomp
mov
push
call
pop
adc
push
pop
cmp
pusha
push
sbb
rcrb
xor
and
mov
pcmpeqd
sar
jmp
inc
pop
dec
xor
push
je
sub
jg
stc
out
sub
xor
movsl
adc
or
lods
mov
cmp
nop
sbb
ss
add
pop
adc
xor
scas
inc
sahf
cmpsb
dec
pop
and
in
push
sub
push
push
push
cmp
fidivs
inc
mov
sbb
add
orb
inc
les
in
test
adc
data16
add
lods
fs
movsb
jbe
xor
mov
cmc
addb
jmp
aad
rcrb
or
cmpsl
push
mov
sbb
sbb
inc
arpl
mov
pop
roll
ficompl
xorl
sti
mov
mov
mov
sub
adc
add
cltd
inc
adc
bound
cmpsb
and
xchg
mulb
dec
aad
or
adc
cmp
adc
sub
mov
mov
cmp
mov
add
mov
insb
ljmp
imul
xchg
sbb
inc
add
rclb
dec
add
xor
scas
scas
push
int3
jnp
adc
cmc
incl
jecxz
test
sbb
shrl
cmc
xor
xor
mov
std
add
out
inc
dec
cld
aad
inc
loopne
repnz
js
jnp
adc
dec
mov
imull
push
inc
fmuls
inc
fists
mov
or
popf
mov
inc
sbb
cmp
inc
cmc
ljmp
scas
dec
sbb
or
addb
mov
lods
int3
jg
iret
adc
test
scas
movsb
gs
jno
pop
xchg
ficomps
ja
repnz
out
lods
ljmp
test
push
adc
or
mov
pop
hlt
sbb
and
inc
pop
mov
lock
jns
push
ja
into
inc
pop
mov
ret
out
push
stc
fsubrs
pop
cmpsb
loop
shlb
int3
cltd
mov
adc
popf
inc
sahf
mov
mov
cwtl
scas
test
int3
push
adc
inc
sbb
adc
aad
mov
jle
into
in
add
sbb
pop
cli
cmpsb
cltd
sbb
jge
mov
rorb
jge
std
push
sub
mov
push
mov
js
xchg
mov
or
mov
inc
scas
scas
mov
xor
out
ss
pop
push
fisubrs
and
stos
faddl
xchg
jp
testl
in
repnz
push
jae
sar
mov
jbe
adc
subb
adc
xchg
or
cld
sub
xor
test
sub
lahf
rcr
test
sbb
pop
xchg
jl
inc
pop
mov
in
and
xchg
mov
mov
add
addl
xchg
ds
inc
xchg
int3
adc
in
push
add
lock
hlt
mov
inc
fstpl
stos
xor
and
into
daa
mov
icebp
mov
out
lret
jle
or
xorl
fwait
stos
pusha
cs
scas
int3
imul
out
data16
lahf
test
and
call
push
add
scas
std
popl
dec
fsubr
js
iret
stos
gs
rcr
cmp
adc
mov
pop
inc
jnp
ds
imul
or
sub
and
insl
mov
jnp
adc
int3
jmp
inc
jmp
sti
movsb
xlat
cmp
dec
or
dec
pop
pop
outsb
into
fcompl
aad
adc
inc
xor
addr16
popa
jns
adc
mov
stos
shl
sahf
mov
loopne
subl
jnp
mov
je
push
dec
xchg
pop
xchg
push
daa
sbb
cmp
aad
cmp
add
xchg
pushf
xor
imull
and
push
movb
ljmp
pop
adc
daa
mov
movsl
adc
mov
rcrl
cs
ja
add
add
cwtl
in
iret
mov
ror
inc
lock
cwtl
sub
std
mov
adc
cmp
outsl
popf
pop
or
js
cmp
ret
fwait
sub
out
mov
cwtl
stos
xchg
fmuls
xchg
es
jb
pop
leave
lods
test
xchg
jnp
and
push
mov
pop
adc
inc
insl
fldt
cs
imul
adc
jp
or
int3
test
xlat
fldl
in
push
inc
xchg
push
sub
mov
xor
dec
and
push
aad
sbb
mov
pop
sarb
fs
sbb
sti
mov
and
in
mov
xchg
daa
out
insb
mov
xchg
inc
cmp
mov
jl
pop
xchg
xchg
sbb
mov
repz
and
pop
or
pop
or
and
push
aad
jle
sti
ja
push
js
outsl
push
inc
inc
int3
fisubs
dec
mov
push
pop
inc
xchg
lock
in
xlat
js
ja
mov
sub
dec
jle
lds
pop
jecxz
or
outsl
push
sbb
out
xchg
imulb
out
cmp
dec
dec
pop
in
mov
subl
mov
cmp
jmp
xor
push
pop
clc
mov
sub
leave
test
dec
pop
add
cmp
inc
fucomip
cmpsb
xchg
add
add
and
addr16
ljmp
xchg
lcall
inc
outsb
rcrl
mov
xchg
lahf
into
push
sbb
push
or
push
add
mov
sti
inc
adc
dec
jo
es
stos
xor
inc
daa
aas
add
mov
push
cli
inc
or
xchg
mov
ret
pop
mov
mov
daa
jmp
push
dec
loope
arpl
ja
roll
jae
test
push
test
pop
clc
scas
mov
mov
mov
mov
xchg
sarb
sub
enter
and
cmp
mov
mov
add
test
gs
jnp
jnp
in
sbb
mov
push
popa
jb
cmp
adc
inc
bound
iret
in
mov
sub
adc
pop
push
pop
cmp
xlat
rcll
dec
call
sub
mov
dec
jecxz
dec
mov
pop
popf
insb
in
fidivrl
movsl
xchg
insb
arpl
out
into
mov
clc
push
push
sub
bound
and
insl
adc
lcall
mov
xchg
jae
mov
insb
inc
test
mov
rolb
arpl
nop
jecxz
int3
jmp
fdivs
sub
int
or
repnz
xor
call
mov
add
in
pushf
mov
mov
cmp
ja
pop
std
xchg
fadd
outsl
push
sbb
insb
xchg
cmc
push
jmp
mov
int3
jmp
mov
insl
cmpl
sbb
cld
xchg
lahf
mov
test
hlt
imul
sahf
lret
mov
jnp
and
add
dec
or
bound
in
and
ret
jecxz
cmpsb
or
in
call
sub
jo
stos
xor
jno
mov
insb
adc
xlat
nop
adc
in
sbb
sub
std
stos
lea
fcomps
ror
pop
fcos
add
jg
ret
inc
insb
fmull
in
lock
push
jl
or
and
lret
inc
mov
sbb
mov
pop
adcl
mov
xchg
sub
roll
imul
push
nop
aaa
sbb
shrb
pop
ja
inc
into
cmp
iret
push
mov
pushf
scas
lret
pop
loopne
pushf
std
xchg
rol
jl
gs
repnz
mov
cmpb
ret
mov
dec
lods
popa
rcr
or
ljmp
daa
mov
fildll
fsubl
int3
add
pop
fdivrs
fcmovbe
test
jmp
in
arpl
out
lret
dec
pop
fsubp
cmp
cmp
lcall
mov
jl
xlat
sbb
movsl
add
popa
popa
lahf
inc
mov
pop
jl
fiaddl
out
repz
popf
les
push
mov
test
push
add
add
insb
outsl
push
iret
movsl
pop
pop
imul
mov
loopne
add
cmpsb
dec
push
or
xchg
xor
inc
pop
or
mov
push
stos
jnp
movsl
leave
push
push
cmpsl
push
mov
push
cmp
mov
lcall
aas
dec
lret
pop
je
or
xchg
das
insb
cmp
mov
ret
or
inc
xchg
sbb
imul
lods
pop
loope
jl
iret
jo
iret
jmp
fs
mov
inc
lods
adc
sahf
push
sub
les
add
std
sbb
das
pop
aad
push
add
xchg
addr16
mov
fs
push
hlt
ficoml
mov
in
inc
loop
addr16
notb
fcoms
push
push
push
xchg
sub
mov
outsb
jbe
stc
js
hlt
mov
imul
idivl
inc
stos
cmp
or
sarb
adc
outsb
sbb
sahf
fdiv
sub
daa
jae
mov
or
cmp
scas
rorl
lods
mov
jecxz
dec
mov
adc
aas
inc
add
shrl
test
out
jge
fcomp
sub
cmp
ss
addr16
mov
push
aas
mov
bswap
xchg
jp
inc
pop
fisubrl
sbb
nop
jecxz
ret
cld
lods
jp
mov
jl
fwait
pop
cli
or
push
test
imul
je
test
testl
or
pushf
test
push
sarb
sarb
filds
push
adc
dec
out
cltd
mov
jmp
mov
shl
out
hlt
orb
jbe
xlat
add
pop
jne
imul
adc
xchg
add
adc
pop
fisubs
in
cmp
enter
cmp
jbe
sub
add
mov
lret
or
pusha
xor
shll
push
and
sub
dec
div
loop
and
call
adc
shlb
dec
repnz
or
add
sub
dec
scas
shlb
pop
adc
leave
test
jno
js
adc
outsl
cwtl
mov
rcpps
aas
or
pusha
sbb
mov
xchg
ret
iret
test
xchg
sbb
sub
or
pop
sub
mov
xchg
lret
inc
lock
add
jnp
pop
xchg
cmp
push
pminub
and
push
or
ror
fnstsw
lret
int3
into
ja
cmc
jo
scas
clc
mov
jae
pop
inc
adc
fwait
xor
adc
sbb
sbb
rclb
xor
lea
movsl
mov
mov
dec
repz
and
mov
hlt
jp
jg
and
sbb
xchg
testl
inc
jns
loopne
enter
jecxz
test
add
call
sahf
jo
lods
ror
mov
lret
outsl
loope
fcoms
das
into
push
lret
push
sbb
aam
sub
xor
ds
adc
adc
enter
test
es
mov
repz
pop
std
xor
push
mov
dec
in
nop
xchg
lock
mov
xchg
inc
push
push
sti
test
mov
push
sub
sahf
pop
adc
loop
cmc
push
cmp
test
push
pop
xor
xor
sarl
loope
xor
pop
sbb
mov
cmp
mov
cmp
push
inc
repz
rol
mov
sbb
sarb
jb
fwait
xor
sbb
insb
icebp
leave
jl
sbb
mov
mov
xchg
add
outsl
je
or
mov
stos
cmp
imul
sbb
push
sbb
inc
jmp
push
fildl
loop
dec
les
jne
inc
mov
js
mov
mov
push
dec
jo
pop
test
mov
hlt
push
les
jne
pop
sbb
jecxz
cli
in
pop
mov
add
fisubrl
lea
hlt
mov
or
pop
cld
aad
lock
notb
jbe
jae
cs
cmp
notl
add
xchg
ljmp
les
xchg
add
xchg
adc
sbb
repnz
xchg
das
aad
jmp
lods
xchg
or
jge
andl
inc
pop
fistpll
push
lock
inc
mov
lret
xchg
ss
push
pop
out
jnp
xor
enter
cli
mov
dec
lods
negb
jl
lds
pop
mov
gs
rcl
test
push
jbe
and
sub
push
jecxz
out
pop
out
std
cwtl
jg
aaa
jb
sub
and
jecxz
pop
xor
jge
xor
dec
mov
jl
xor
sub
insl
cmp
and
imul
orl
push
jge
push
repnz
mov
fcomp
insb
inc
mov
or
mov
pop
leave
mov
sbb
fldenv
xchg
cmp
push
sub
add
loop
arpl
mov
ret
sub
xchg
jo
test
jns
dec
ror
bound
or
mov
ret
sbb
jecxz
push
push
mov
push
out
adc
outsl
pop
pop
add
inc
fcoms
out
insb
cli
xchg
push
les
lock
sub
mov
push
push
mov
cld
jbe
bound
sub
pop
mov
cmc
in
lock
insb
clc
mov
cmpsb
jle
cmc
mov
cwtl
pusha
lods
mov
aad
inc
adc
addr16
xchg
and
ffreep
fcomps
rcrb
inc
mov
add
fbld
gs
aam
adcb
jb
lcall
lahf
fstps
mov
sub
add
pop
aaa
cmp
dec
or
outsb
scas
mov
es
test
sub
in
pop
test
add
xchg
fldt
fildll
jle
decb
or
pop
in
mov
pop
sbb
mov
sbb
gs
cwtl
je
jl
mov
jmp
fcompl
movsb
arpl
fdivs
jbe
mov
bound
stc
aaa
mov
xchg
cltd
aaa
aad
mov
sbb
shll
add
stc
or
out
scas
adc
movups
inc
jmp
jl
in
cmc
imul
pop
icebp
mov
jae
shl
push
cmp
int3
ja
sub
ficomps
push
imul
or
or
bound
lcall
push
stos
sub
daa
jno
lcall
js
inc
lahf
mov
data16
cvtpi2ps
addb
adc
sbb
into
shll
sbb
jle
mov
and
or
cs
paddusw
mov
dec
rcrl
jmp
pop
dec
and
dec
pop
jbe
pop
ds
sbbl
pop
andl
andb
sub
xchg
jge
pop
subb
imul
adc
sahf
xchg
test
scas
ret
fwait
aad
or
push
dec
loopne
inc
mov
aam
add
lock
cli
push
sub
dec
sbbl
xor
jns
in
dec
and
jo
shll
or
push
mov
or
jb
cmp
jb
shrb
inc
decl
xorb
stos
pop
scas
push
push
decl
mov
and
into
insb
mov
push
loopne
dec
std
icebp
pop
xchg
push
inc
mov
dec
dec
out
or
sub
jae
and
add
pop
in
dec
jge
mov
popa
enter
pop
fisubl
jmp
clc
int3
jl
loope
rorb
popa
fwait
and
cmpsb
mov
in
xchg
pop
ror
sarb
addr16
mov
clc
inc
shrl
gs
in
xlat
leave
jp
dec
cmpsb
nop
test
xchg
cs
push
mov
shll
out
out
xor
repz
dec
lret
rol
test
jp
dec
pusha
jge
and
adc
lods
inc
movsl
std
ss
or
cmpsl
adc
xchg
daa
dec
lcall
adc
jns
mov
mov
arpl
mov
adc
xor
aaa
inc
std
sub
adc
andl
xchg
lahf
cmp
or
push
xchg
add
std
das
push
rcrl
sub
pop
into
stos
cwtl
lcall
scas
or
into
arpl
shl
jmp
scas
xchg
lock
add
cmp
stos
hlt
push
and
rcr
loop
add
push
insl
insb
out
gs
faddl
ret
jle
cmpsl
insb
ret
addr16
ret
jle
aad
sbb
int3
hlt
ret
es
rcr
inc
adc
inc
mov
jno
daa
leave
jge
xchg
xchg
sub
loop
cmp
movsl
mov
mov
popf
push
mov
pop
jbe
mov
xor
xchg
mov
rcrl
popa
pusha
ret
xchg
xchg
fisttpl
fbstp
and
lds
lret
nop
lds
in
push
xchg
sti
ret
mov
leave
xchg
cmp
je
pop
popa
cmpsl
ret
dec
inc
xlat
cmp
add
ret
and
aam
mov
loope
in
repz
cld
or
xor
sbb
aad
mov
in
push
push
rolb
shrb
mov
xor
scas
movsl
and
cltd
inc
lods
sahf
dec
adc
push
aas
cmpsl
adc
stos
sub
cmpsl
ss
cmc
add
in
mov
pop
cmpsl
fisttps
ss
lock
fcom
divb
add
push
xchg
inc
jo
ret
sbb
cmp
arpl
int
arpl
data16
sbb
dec
dec
ja
jbe
imul
xor
imul
es
repnz
adc
and
imul
pop
adc
add
cmp
xor
and
jo
or
iret
dec
and
loop
fidivs
out
adc
in
mov
mov
scas
out
pop
inc
dec
andl
mov
out
aad
jns
pop
adc
icebp
mov
sub
mov
mov
xlat
inc
sbb
pop
stos
nop
imul
enter
pop
outsl
xor
adc
jg
mov
imul
fs
push
insl
push
mov
insb
fs
imull
and
in
cmpsb
sahf
push
and
rcrb
push
cmpsb
mov
xchg
add
cmpsb
mov
outsl
addr16
imul
mov
popa
cmp
push
pop
popa
daa
cmp
out
xchg
nop
out
sbb
popa
adc
mov
movsl
sbb
stos
add
adc
pop
addr16
int3
push
rorl
icebp
popa
jmp
add
or
lret
roll
mov
push
mov
aad
push
xor
xor
mov
movsl
or
repz
mov
jne
test
mov
dec
xor
sahf
jne
cmc
std
pop
out
xchg
and
aam
dec
mov
adcb
icebp
scas
int3
or
inc
sbb
sub
out
test
push
ja
pop
inc
icebp
push
add
add
ffreep
sub
dec
push
scas
movsl
test
jo
mov
or
xchg
dec
pop
fstl
mov
pop
lds
leave
out
or
fwait
idivb
cmp
pop
sbb
iret
aas
es
jmp
or
xchg
xchg
cld
mov
cli
iret
xchg
push
aaa
mov
dec
mov
cltd
pop
jns
in
imul
repnz
cmpps
repnz
das
fimuls
push
adc
lock
decl
scas
dec
aas
insl
cwtl
jae
aaa
mov
xchg
mov
pop
or
fldl
faddp
and
int
enter
mov
loopne
leave
outsb
negl
loope
push
jne
dec
daa
ss
push
mov
out
push
xchg
jbe
mov
or
fcomi
ss
dec
popa
xor
mov
pusha
push
mov
bound
repnz
stos
xor
pop
jmp
int
mov
clc
mov
jb
xchg
lahf
pop
shlb
add
cwtl
int
insb
cmpsl
xchg
xor
cmp
inc
sub
pop
add
outsl
dec
out
and
and
mov
cmp
in
sti
jle
adc
fcmove
lahf
outsl
int3
xchg
lret
out
std
popa
imul
clc
mov
lret
jno
push
repnz
inc
and
std
or
adc
xor
mov
mov
fdivl
mov
mov
aad
loop
dec
ds
jecxz
xchg
loop
push
inc
sahf
mov
enter
dec
cmp
in
notl
xchg
lahf
test
xchg
jae
adc
test
mov
push
shlb
add
test
ja
test
pop
push
dec
sbb
dec
sub
xchg
dec
mov
enter
int3
inc
shll
pushf
pusha
into
out
loopne
mov
cmp
repnz
popf
jb
dec
inc
pop
shlb
adc
insl
das
pop
fucomp
dec
stc
out
fildll
dec
lcall
cmp
mov
adc
xchg
sahf
mov
popa
push
cmpsb
push
xor
jns
sbb
popf
mov
jno
cld
int
pushf
jnp
xor
push
push
mov
and
fwait
pop
adc
repz
cmp
jb
mov
cltd
xor
or
int3
mov
aaa
fistpl
rcll
inc
iret
jl
int
movsb
xchg
add
xor
cmp
fidivrl
and
pop
lret
mov
mov
mov
pop
fadd
push
mov
arpl
ds
mov
scas
inc
popf
or
insb
sahf
shr
jmp
dec
add
movsb
sbb
mov
arpl
jns
xor
nop
add
xchg
fstl
adc
mov
fcmovnbe
data16
cli
push
and
and
dec
lods
std
push
xchg
push
and
add
sub
into
mov
lcall
and
mov
enter
das
hlt
xor
sub
push
scas
add
fistpll
aam
push
or
dec
repnz
push
xor
ljmp
int3
fadd
out
filds
inc
cmp
pop
lods
das
js
or
or
sub
addr16
dec
ds
test
jb
mov
pushf
pop
pop
push
ss
fdivs
jae
mov
std
inc
mov
sub
ljmp
jno
push
jne
jo
shl
cmp
std
sbb
pop
addb
je
not
jp
xlat
in
es
jne
or
addr16
loop
mov
shl
pop
data16
lcall
cld
lods
fisttps
adc
adc
pop
scas
dec
or
sub
ja
xchg
xorb
xor
and
clc
pusha
and
icebp
jnp
inc
jl
jo
sub
in
jg
mov
cmp
shrl
fildl
mov
dec
cmc
packsswb
mov
out
mov
sbb
cltd
jae
into
daa
icebp
or
fldl
adc
and
cmp
cwtl
mov
or
ror
shll
roll
adc
aaa
fsubr
jbe
xchg
cld
test
outsl
lock
fisttps
jl
pop
cmc
mov
out
in
pushf
arpl
jnp
xor
popa
push
cmp
mov
pop
dec
jbe
jecxz
mov
cwtl
or
and
arpl
pop
stos
jle
and
xchg
rcl
jb
rorl
jp
mov
xor
xchg
cld
movsl
sbb
xchg
and
jb
mov
leave
cmp
add
push
jne
lods
xchg
fidivrs
ficoml
xor
inc
xchg
cmp
jnp
jmp
xchg
dec
dec
ss
cmp
mov
rolb
pushw
and
push
outsb
or
mov
lret
cmp
and
sub
lock
outsl
aad
push
mov
outsl
xchg
jae
cmc
adcl
mov
scas
hlt
jnp
add
cmp
pop
pushf
stc
lahf
lret
push
imul
js
pop
arpl
icebp
jl
sub
mov
lret
fadds
repnz
mov
dec
rcrl
repz
jle
lock
xor
or
mov
loop
xlat
sub
or
xchg
movsb
jb
mov
das
push
lods
and
cmp
ret
jmp
stos
int
mov
scas
outsl
rcrl
arpl
pop
inc
scas
scas
into
inc
adc
xor
adc
jne
test
cmp
pushf
mov
jne
pop
mov
lcall
jb
mov
dec
push
out
lods
pop
push
lahf
add
mov
or
aam
mov
pop
movsb
in
inc
pop
xchg
addr16
es
fildl
mov
ljmp
loopne
fiadds
dec
insb
sbb
xchg
inc
mov
push
mov
push
je
rcpps
aas
add
jl
jle
fsubrl
or
sbb
sbb
push
push
cld
sbb
pusha
add
mov
adc
jg
lea
fs
ret
lods
pop
mov
mov
leave
mov
in
push
pusha
aas
inc
incl
cmp
ret
add
jge
pop
dec
pop
popa
jb
sbb
ds
cmpsb
insb
ja
lds
fildl
adc
or
std
rolb
aad
cwtl
sti
sub
push
lret
enter
cwtl
add
push
dec
cmpsl
pop
sub
mov
sbb
lods
addr16
mov
in
xor
mov
scas
push
dec
scas
testl
pusha
pop
je
sub
lds
or
push
mov
adc
insb
sub
inc
cmp
add
and
jl
sbb
add
popa
xlat
pop
movsl
mov
int3
shlb
push
dec
fwait
repz
jne
xchg
cli
cmp
das
sbb
add
in
dec
inc
mov
sahf
mov
xlat
cltd
into
jo
cmpsl
outsl
xchg
sbb
mov
es
lret
orl
mov
pop
sbb
mov
mov
xlat
xor
stos
scas
idiv
ss
dec
stos
jns
dec
jg
nop
push
ljmp
jae
sti
dec
in
repz
iret
aas
dec
pop
mov
cmp
and
mov
in
adc
jecxz
mull
cwtl
cmp
divb
or
popa
mov
add
mov
negl
add
or
mov
xor
mov
call
pusha
xlat
lds
call
fldl
xor
stos
sti
xor
cmp
scas
test
insl
icebp
dec
popf
sbb
shrl
mov
push
push
out
adc
xchg
lods
mov
xor
scas
xchg
push
ljmp
stos
pop
push
mov
adc
ss
outsb
repnz
adc
adc
into
dec
pop
dec
sbb
mulb
cmp
cli
out
mov
jl
nop
push
and
ss
int
and
adc
fadd
mov
and
icebp
inc
mov
call
loope
in
sbb
inc
pusha
jno
add
int
pop
inc
shr
aam
cld
and
jbe
pop
imul
dec
and
add
xchg
adc
in
loopne
dec
push
call
adc
and
sbbb
orl
jne
mov
inc
das
lods
in
pop
loope
test
lcall
ljmp
lods
push
insl
inc
xchg
add
popf
mov
mov
lods
mov
mov
in
loope
call
out
sbb
push
pusha
lds
push
shlb
rcrb
xor
pop
inc
mov
cmp
popa
inc
stc
leave
mov
sub
test
sub
xor
ds
test
clc
into
sub
clc
movl
jnp
int
stos
mov
jns
shll
push
hlt
or
cltd
cmovns
xchg
mov
xchg
lock
jo
adc
in
jb
jge
dec
movsb
ret
fisubrs
subb
sub
je
popa
xchg
sbb
clc
jo
stc
adc
iret
aaa
mov
fcmovnu
pop
dec
inc
aas
cmp
andl
fisubrs
nop
xor
lcall
arpl
ljmp
dec
fdivl
pop
push
mov
jl
imul
adc
and
shlb
int
xlat
adc
sub
mov
fisttpl
fistl
movsb
xor
jmp
jl
sbb
test
movsb
pop
add
pop
push
adcb
push
mov
aaa
inc
outsb
negb
mov
sahf
lods
sub
sbbl
jb
fistpl
inc
or
shl
jl
fldenv
popa
movsl
dec
dec
and
enter
mov
jnp
adc
mov
xchg
mov
leave
push
or
mov
dec
mov
shll
nop
aas
mov
nop
imul
cmp
cmp
cmp
pop
shl
test
je
and
clc
mov
sub
mov
fstpl
hlt
mov
xchg
popf
hlt
out
mov
xchg
mov
jle
das
lahf
fisubrl
push
rorl
lcall
push
enter
lea
bound
outsb
fsubr
test
pop
jecxz
mov
repnz
sbb
mov
je
jbe
push
test
cwtl
push
xlat
ret
leave
les
leave
and
push
add
pop
mov
mov
ret
mov
and
out
xlat
cmp
ss
inc
sub
mov
lret
push
shll
push
push
mov
loop
test
outsl
jg
adc
iret
and
movsb
sahf
inc
ss
inc
mov
aaa
fcomps
mov
cwtl
jae
add
or
call
in
repz
ljmp
icebp
mov
lea
outsb
pushf
jmp
xchg
idivb
and
jg
mov
es
and
push
ficoml
dec
and
pop
rcrl
sbb
push
lods
jecxz
frstor
jns
push
adc
add
push
outsl
fsubrp
jecxz
adc
loop
les
out
je
xchg
mov
push
fsub
jne
loope
cltd
sti
push
mov
sub
push
mov
pop
fimuls
jnp
mov
pop
push
popf
sbb
cmp
jmp
add
dec
jmp
and
lock
enter
dec
push
dec
cltd
inc
sub
shlb
mov
pop
mov
adc
push
mov
mov
jbe
fiaddl
xor
mov
or
repz
mov
pop
xchg
movsl
xor
xor
cwtl
and
mov
pusha
inc
sbb
mov
adc
ficomps
sbb
mov
push
movsl
subl
je
add
loope
sahf
cmc
and
dec
or
fisttps
scas
inc
or
scas
sub
out
es
and
mov
mov
and
xor
xor
mov
inc
push
xchg
mov
mov
adc
imul
push
jbe
pop
sub
mov
test
add
push
lock
aaa
pop
jl
outsl
pop
imul
das
or
sbb
jae
mov
pop
pop
rorb
sub
xor
add
push
xchg
je
xor
outsl
dec
mov
mov
mov
popa
pop
pop
xchg
rcrl
adc
and
test
push
outsl
cmp
inc
movsb
fldenv
fsubl
inc
pushf
mov
cs
clc
sub
movl
in
pop
out
cli
pop
inc
mov
jae
je
jecxz
xorl
inc
scas
lret
mov
jno
ret
mov
test
xor
inc
bnd
stos
outsl
mov
inc
push
or
paddusb
sti
mov
stc
jmp
in
jmp
mov
sbb
testl
cmp
mov
add
pop
scas
mov
dec
sub
xchg
bound
filds
popa
fldcw
orb
push
xor
test
jmp
sahf
faddl
stos
ss
icebp
and
and
out
cmpsl
stos
repz
ds
push
loope
jle
clc
sub
into
mov
mov
add
test
mov
jecxz
mov
popa
ja
leave
and
call
repz
xchg
adc
lds
add
jmp
fsts
out
jmp
push
in
push
test
xchg
fadd
mov
xchg
out
dec
sub
ljmp
inc
mov
xchg
int
mov
push
lret
add
mov
and
sbb
and
mov
dec
jp
pop
nop
insb
popf
clc
std
cmp
jmp
addr16
cli
jno
cli
cmp
fldenv
imul
push
je
fsubr
mov
jae
insb
scas
fdivl
jecxz
int3
or
xchg
xor
add
xchg
dec
add
cmp
std
lahf
aas
das
add
imul
mov
xor
or
pop
das
adc
shrl
movsl
rol
or
icebp
test
sub
fs
sti
mov
fistl
inc
sbb
jns
pop
and
cmp
push
jecxz
cmpsb
mov
or
sbb
pop
push
js
fdivrl
imul
scas
push
fsubr
or
dec
sub
pop
in
insl
push
insl
pop
icebp
ss
cmc
ss
aas
sar
add
loopne
lahf
cmp
movl
rcrl
fwait
dec
sub
xchg
int3
pop
and
mov
jno
outsl
sub
xor
nop
das
cmpsl
test
push
adc
in
sub
enter
nop
lcall
out
cs
dec
out
inc
sbb
push
dec
mov
fimull
pop
loop
push
cwtl
pop
cli
push
ja
aaa
jbe
cmc
sbb
dec
test
sub
push
and
out
or
mov
adc
or
jae
mov
jno
add
sub
mov
push
ja
repnz
cltd
cli
pop
test
test
test
and
jl
sub
pop
into
mov
dec
call
sbb
jecxz
out
mov
lret
push
sub
and
mov
cld
rcr
push
add
adc
pop
pop
dec
es
pushf
sub
dec
xchg
push
loope
pushf
test
sub
pop
xor
rorb
test
dec
jne
enter
rcll
jle
jle
das
lcall
int3
push
pushf
inc
cmp
pop
enter
pop
jle
mov
xchg
and
cld
add
mov
cs
out
lret
fcoml
xor
adc
pop
call
xchg
dec
jnp
mov
test
push
data16
cld
pusha
pop
inc
outsb
ret
dec
outsb
sub
jle
cmp
add
aas
fld
adc
test
pop
xor
and
and
aam
sar
sub
pop
jmp
popa
imul
and
shlb
lahf
gs
test
jmp
mov
jae
aam
inc
xor
xor
add
push
in
std
sti
loope
fistl
inc
sbb
cmp
adc
mov
repnz
xor
xchg
mov
ret
and
sbb
mov
mov
mov
jns
cltd
inc
subb
and
xor
faddl
ret
cltd
andb
mov
jmp
pop
out
jbe
call
stos
test
or
mov
in
inc
pop
mov
lods
int3
mov
fnstenv
test
push
ret
jo
jns
xor
cmp
shlb
in
jmp
jg
fsubs
test
insb
mov
cwtl
movsb
pop
std
adc
cld
xor
or
mov
sbb
or
or
out
mov
cs
mov
scas
jge
cli
aad
insl
jp
mov
sub
arpl
in
int3
mov
dec
lea
cmpsl
and
xchg
sarb
dec
xor
pop
out
mov
sarb
cmp
push
jnp
adc
xor
push
lods
imul
mov
push
insb
int3
and
idivl
bound
js
mov
loope
push
push
lahf
aas
and
mov
jo
mov
mov
inc
pop
lods
adc
jns
and
aaa
mov
fildll
fistpll
and
jb
or
lods
sub
mov
adc
fidivrl
mov
xor
lea
loope
push
aam
xchg
dec
rep
and
and
mov
mov
pop
data16
sub
xchg
mov
sub
test
xchg
or
inc
pop
test
imul
dec
dec
jb
int
jnp
jbe,pn
imull
adc
test
lods
inc
ds
add
insl
fisubl
push
iret
jl
mov
xchg
add
mov
lret
mov
je
out
adc
ds
leave
push
and
in
lret
rcrl
jae
pop
aad
insb
sbb
push
fisubl
lods
outsl
cld
rolb
and
pop
sub
xchg
mov
jp
or
dec
into
les
hlt
icebp
sbb
daa
sbb
addr16
rcrl
int3
les
lret
or
or
cmp
stos
pop
sbb
pop
inc
mov
mov
gs
xor
adc
xor
mov
les
xor
xchg
mov
add
les
jns
sbb
dec
pop
shl
sbb
dec
js
cmp
adc
add
lds
xlat
inc
les
incb
nop
pop
jp
pop
jmp
xor
lret
outsl
cmp
fcompl
mov
jb
lcall
fdivrs
and
and
cmp
out
push
inc
pop
add
push
dec
mov
frstor
leave
call
sub
jb
inc
movsl
push
fidivs
cwtl
jo
loope
push
push
loopne
test
sbb
rcll
pop
frndint
ss
insl
gs
cmpl
stc
dec
push
sbb
cmpsb
nop
mov
push
xor
data16
push
cmpsl
scas
jge
adc
aam
sub
mov
enter
test
jp
and
pop
dec
pop
lret
xchg
orb
cmp
pop
icebp
fucomi
shlb
into
in
dec
movsl
xor
testb
sbb
fdivrs
jae
jne
ljmp
jecxz
dec
mov
icebp
adc
fstp
add
mov
cmp
xchg
add
es
imul
push
xor
out
xchg
daa
stc
lea
fxch
cmp
add
test
ss
xchg
mov
jmp
or
dec
out
enter
push
dec
in
mov
out
xchg
inc
ss
adc
add
pop
xchg
je
mull
lods
dec
cltd
push
mov
cmp
push
int
dec
lods
ss
punpckhwd
mov
cwtl
add
cwtl
daa
ffreep
ror
jmp
add
dec
outsb
pop
xchg
dec
pop
rcrb
sub
mov
xchg
and
xor
add
mov
scas
aad
inc
and
int
inc
or
outsb
push
ja
gs
push
int
mov
jle
aas
adc
xchg
pop
dec
loope
clc
adc
mov
push
pop
sub
and
sbb
dec
enter
clc
or
xlat
push
iret
inc
xor
inc
aam
rcl
ror
mov
adc
adc
jb
sahf
outsl
decb
arpl
lret
jmp
adc
shlb
mov
int
and
sub
das
fs
adc
insl
sbb
hlt
or
cltd
push
cmp
frstor
dec
xchg
mov
scas
push
dec
leave
mov
repnz
scas
insb
adc
arpl
pop
movsb
cmp
scas
pop
mov
scas
cmpsb
or
sti
sahf
or
fcmovb
mov
pop
xchg
cmp
adc
dec
lret
mov
test
sbb
sub
lret
out
sbbl
adc
jns
dec
jnp
jecxz
daa
lods
cwtl
lock
and
jns
xorl
mov
dec
inc
std
and
mov
icebp
divb
inc
xchg
jp
outsl
jae
subl
sub
into
jl
iret
icebp
add
nop
out
adc
dec
mov
dec
pop
int
popa
lahf
xchg
add
mov
repz
push
ss
dec
and
inc
sbb
movb
es
outsw
or
pushl
cmp
push
pop
or
imul
jge
ljmp
sub
ficoml
cmp
ja
ljmp
inc
cmp
add
imul
mov
out
loopne
fs
test
out
in
icebp
jae
dec
jnp
in
jns
insl
xorb
inc
out
sti
scas
mov
cltd
push
xor
jg
mov
aas
rolb
dec
div
test
imull
cli
dec
stos
movsl
inc
fcom
ret
inc
cli
xor
mov
mov
mov
popf
or
std
sbb
and
imul
sbb
ficoml
pusha
in
dec
push
or
sahf
pop
lds
mov
mov
cmc
mov
push
arpl
ss
cmp
mov
aas
push
pop
fcmovb
das
pop
dec
mov
add
popf
pusha
mov
or
mov
lods
lret
cld
mov
jno
pop
pop
dec
loop
pusha
out
inc
loop
or
pop
dec
xlat
cld
je
jmp
sbb
subb
arpl
pop
movsb
bnd
push
cwtl
out
sarb
mov
loope
xor
shr
stos
lahf
xlat
dec
sbbb
push
sbb
adc
mov
lret
adc
jne
adc
nop
push
cwtl
adc
out
cltd
pop
idiv
cmpsb
scas
mov
loop
not
fs
jo
fists
mov
fimuls
fldl
mov
fcoms
mov
inc
lods
ljmp
dec
fisttpll
mov
out
iret
int3
aaa
cmpsl
pop
mov
dec
dec
int
mov
mov
pop
add
jb
mov
es
aaa
dec
mov
xor
daa
lret
xchg
xchg
std
bnd
cmp
imul
jnp
adc
jno
ficoml
pop
nop
sub
lock
jne
sbb
jbe
pushf
cmp
dec
shrb
out
insl
inc
xchg
push
dec
test
cltd
xor
rclb
push
sbb
fisttpl
imul
cld
xchg
jns
mov
cltd
lcall
into
jl
bound
lret
rcll
sub
inc
imul
cs
push
inc
pop
jnp
cld
ljmp
sub
mov
js
push
mull
or
bound
push
cmp
ret
xor
aas
test
mov
mov
add
xor
lods
lods
sbb
pop
imul
sub
sbb
iret
test
adc
sub
push
jno
dec
lock
call
daa
pop
mov
add
fsubrl
jnp
cmp
pop
lret
mov
and
jns
jnp
cmp
adc
arpl
arpl
jg
adc
xchg
sahf
mov
fsubl
xor
lock
sbb
jge
imul
jne
dec
loopne
mov
mov
pop
enter
xchg
loope
dec
mov
jae
stos
xor
neg
jns
testb
mov
pop
mov
mov
shll
das
mov
adc
dec
test
jp
mov
jbe
adcl
add
sbbb
ja
fldenv
cs
scas
xchg
js
push
lcall
pusha
stc
lahf
push
outsl
ret
jl
lea
stos
insl
insl
sub
or
xor
mov
inc
jbe
pop
hlt
int3
jb
pop
mov
mov
jmp
pushf
sbb
fs
jp
repz
jge
pop
ret
add
clc
mov
daa
insb
stc
mov
cld
sbb
loope
jg
sahf
js
pop
push
mov
pop
sbb
push
mov
stos
jmp
les
or
xchg
imulb
insb
cwtl
mov
cmp
mov
fidivs
ret
es
rolb
push
dec
mov
cmp
and
mov
out
daa
pushl
xchg
repnz
push
cmpsb
test
cmpsb
add
mov
mov
mov
or
push
pop
and
sarl
lcall
insb
in
mov
rcr
das
cmpsl
psubusw
sub
ret
mov
sub
loop
pusha
jmp
and
adc
gs
mov
add
fsts
scas
out
pop
out
cmp
sbb
stos
fwait
loopne
push
cmp
je
sbb
int
pop
sbb
test
sbb
cmpsl
and
and
fucomp
cmpsb
mov
cmpsl
fisubl
outsb
or
sar
push
push
imul
jne
mov
mov
sbbb
dec
loop
push
push
insb
call
dec
frstpm(287
mov
or
pop
xor
out
add
fidivl
cmp
sbb
lret
fsts
xchg
push
pop
mov
aam
mov
fimull
rorb
inc
and
xlat
ror
cs
jp
cmc
cmp
push
mov
popa
pop
icebp
mov
dec
ljmp
pop
sbb
sbb
sub
loopne
jbe
popa
inc
lret
mov
pop
mov
loope
int
sbbl
adc
mov
dec
sub
mov
jb
push
add
shll
xchg
repnz
add
xchg
stos
fucomi
leave
test
xor
repnz
fisubs
lea
mov
mov
daa
xor
sub
mov
sub
jg
jp
es
mov
pop
dec
loope
movsb
pop
scas
aas
dec
movsl
xchg
cmc
mov
xcrypt-ctr
cmpsl
add
out
shrl
jno
sar
jnp
mov
xchg
sbb
pop
lods
clc
test
nop
jne
sbb
sahf
add
test
popf
stos
add
jge
scas
push
inc
out
ficomps
push
pop
into
push
out
and
popf
cmc
xor
mov
fwait
inc
pop
repnz
and
lods
xchg
in
inc
xchg
push
pop
push
out
mov
push
addb
repz
imul
jl
fisubrs
pop
aam
fidivl
ret
sbb
fs
inc
mov
leave
add
push
ret
pushf
cmpl
push
ficoml
xor
pop
jge
pop
mov
fdivs
scas
ret
jg
sbb
sub
mov
cmpsb
ret
fldcw
add
jecxz
in
stos
lea
mov
movnti
fiaddl
sarl
int3
cwtl
nop
outsb
mov
and
push
sbb
dec
vcmpps
add
cmpsb
cmp
pop
add
fwait
imulb
push
dec
push
mov
push
shll
inc
hlt
fistps
mov
mov
ja
bound
jmp
dec
mov
shl
jg
int3
sub
sub
sti
ss
pop
sub
adc
jecxz
rol
xchg
ds
lods
aas
adc
stc
aas
mov
nop
adc
idivl
xchg
sbb
outsl
test
xchg
popf
mov
fwait
jne
scas
ret
adc
push
pop
sub
iret
cmpsb
xor
xor
mov
jbe
out
sub
mov
xchg
sbb
mov
shrb
dec
mov
inc
or
mov
or
loopw
adc
sub
add
jb
ljmp
xor
in
lcall
test
add
pushf
pop
arpl
pop
fdivrl
bound
aaa
mov
mov
xchg
xchg
sub
das
notl
or
in
push
loopne
mov
jnp
xor
jns
inc
mov
cli
dec
mov
mov
pusha
negb
sbb
ja
push
dec
xor
test
out
jae
and
sbb
gs
stos
lahf
xchg
xchg
pop
sbbb
fwait
lds
dec
cmpsb
pop
cli
mov
mov
or
mov
sbb
rol
js
mov
push
movsb
pop
fadds
outsl
add
xor
pop
rcrb
pop
dec
dec
into
xchg
xchg
imul
and
test
dec
xchg
pop
adc
or
jle
int
imul
dec
push
lahf
jle
lahf
push
imul
clc
push
sahf
loop
scas
icebp
jg
or
xor
sti
pop
cmp
inc
es
jns
push
mov
popf
dec
repnz
sbb
pop
push
and
fistpll
and
mov
mov
sub
aam
repnz
mov
aam
decl
loop
jns
inc
push
test
adc
inc
jmp
ds
idiv
xchg
outsb
das
test
dec
sub
mov
pop
cwtl
mov
leave
or
mov
or
cmp
mov
popf
pop
mov
add
or
dec
mov
mov
xor
dec
test
fsub
pop
test
pop
bound
xchg
push
lock
int
leave
out
imul
enter
mov
daa
lods
out
wrmsr
repnz
mov
idiv
xchg
mov
stos
xchg
inc
stc
cmpsl
mov
sti
in
aas
push
imull
xor
xchg
or
inc
shl
enter
push
fwait
or
test
shl
push
mov
pop
and
jmp
jbe
mov
and
mov
dec
xor
cmp
sub
sub
mov
pushf
out
mov
das
fwait
das
cmc
call
inc
mov
sarl
ljmp
mov
out
fisttps
outsb
adc
mov
sbb
sub
js
push
jmp
xchg
loop
cwtl
in
ljmp
sbb
aam
daa
inc
jne
adc
dec
aas
and
insb
mov
xor
gs
inc
inc
xor
xchg
xlat
loopne
fadds
adc
into
xlat
mov
hlt
inc
xchg
cmp
adc
pop
and
jno
dec
bound
sub
test
and
loop
call
mov
adc
jns
scas
jmp
add
mov
xchg
aam
push
lahf
addr16
lock
in
dec
mov
xchg
ret
imulb
or
sti
pop
or
cmp
xchg
mov
xor
sahf
ret
inc
inc
adc
lods
popa
cmc
dec
or
sbb
jns
stos
sbb
out
mov
mov
sbb
int
xchg
ja
popf
pushf
adc
push
mov
popf
repz
mov
aaa
xor
jp
mov
mov
sub
dec
stos
push
sbb
push
xchg
testb
mov
and
mov
push
push
add
adc
js
mov
mov
fisubs
cmp
dec
xor
lea
test
aam
xchg
pop
je
aad
jno
pop
int3
sbb
leave
cmp
outsl
lods
imul
cli
bound
scas
and
add
jbe
sti
add
jmp
test
fs
inc
mov
fnstcw
stos
cmp
inc
shlb
mov
ds
fdivp
cmpsl
or
or
loop
fisttps
pop
adc
mov
push
xchg
int
fisttpll
xchg
pop
in
xlat
and
cmp
lods
mov
add
cmp
test
inc
cmpsl
decb
lock
loopne
inc
inc
sub
in
add
or
dec
jne
movsb
mov
push
jno
mov
jl
arpl
test
ja
enter
fisubs
push
mov
inc
outsl
lret
popa
in
adc
sbb
mov
push
xchg
adc
push
lcall
clc
aas
mov
cs
mov
inc
add
rcr
decl
sub
pop
js
pop
pop
int
push
pop
jb
lods
dec
hlt
inc
cmpsb
sub
ljmp
test
iret
mov
cmp
dec
sbb
jns
xchg
sti
or
shrb
jbe
sub
loope
cs
les
inc
mov
pop
jge
cli
fidivrl
stos
out
testl
add
xor
inc
adc
mov
data16
push
or
ja
mov
inc
shll
ljmp
iret
fldt
dec
push
shrb
mov
xor
sub
cwtl
jae
insb
or
dec
mov
pop
scas
loop
ret
addr16
outsb
mov
jge
shl
jle
loope
pop
or
test
pop
iret
pop
loope
lret
call
mov
pop
mov
inc
add
mov
dec
push
inc
ds
pop
pop
test
mov
ficomps
inc
in
sbb
adc
loopne
in
bound
cmpsl
insb
idivb
pop
push
jp
xchg
lock
add
cmc
push
xor
sub
mov
adc
fldcw
fsubl
popa
dec
scas
in
jecxz
jbe
mov
stos
xchg
outsb
imul
or
ljmp
inc
add
fsubrp
mov
pop
jg
push
adc
rcr
fstl
cmp
cwtl
in
outsl
scas
pop
movsb
add
mov
mov
cmc
adc
ljmp
lea
xor
jb
pusha
sub
cmpsb
xor
jmp
add
sub
aad
xchg
out
jae
adc
nop
dec
mov
pop
ret
mov
adc
fs
mov
sub
mov
stos
xor
pop
addb
and
push
pop
std
dec
lret
push
mov
jae
xchg
xor
daa
cmp
shl
or
loop
aaa
push
aam
dec
sbb
pop
cwtl
inc
inc
popa
add
sub
clc
cmpsl
adc
mov
jg
int3
std
adc
mov
mov
in
lret
ficoms
jae
xor
push
rcrb
rol
enter
cwtl
push
push
cmp
adc
sbb
cmpb
int3
pop
iret
in
and
xchg
xchg
movb
in
and
inc
fwait
scas
xchg
test
mov
mov
in
sbb
shr
mov
mov
fildl
lret
out
or
and
jmp
dec
add
stc
cmpsl
iret
cmp
mov
sub
data16
outsb
sub
xor
aam
xchg
jmp
xchg
pop
adc
add
ret
imul
lods
cld
lea
push
mov
fstpt
xor
xchg
cli
rorl
jecxz
aas
fdivs
jmp
mov
loopne
adc
retw
sbb
pushf
push
sbb
mov
fdivs
fnstenv
mov
mov
imul
call
jmp
ljmp
pusha
dec
mov
leave
xchg
xor
ja
jno
mov
xor
and
mov
stos
mov
lods
mov
insb
inc
fcomip
add
into
cmp
dec
dec
xchg
fisubrs
les
inc
testb
daa
add
xchg
and
jmp
or
fwait
adc
rcrb
aam
aas
fistpl
stos
aad
cwtl
pop
mov
sbb
sbb
stos
andl
adc
xor
cmp
movaps
test
sbb
xchg
test
push
fwait
and
xchg
inc
aaa
sub
xor
dec
es
pop
pop
jge
push
pop
scas
iret
out
aas
mov
or
mov
push
cmpsb
xor
repz
scas
sbb
fiaddl
lods
shll
and
outsb
mov
nop
push
test
loope
std
ss
jmp
in
inc
or
std
bound
xchg
rcrb
push
jns
in
aaa
iret
repnz
xor
fildl
clc
mov
adc
je
push
sbb
push
xchg
jp
xor
mov
xor
push
xor
aam
mov
jae
outsb
or
cld
xchg
call
jg
xchg
push
mov
mov
and
sub
add
shlb
sti
adc
and
cmc
std
xchg
sti
pop
mov
sub
lcall
dec
daa
pop
sub
mov
int
testb
cltd
jns
xor
pop
or
mul
mov
fwait
pop
cmp
fistpll
bound
inc
jg
mov
push
push
idiv
aad
push
and
xchg
out
cwtl
shlb
arpl
or
fadds
scas
les
inc
flds
sbb
mov
add
adc
mov
sahf
mov
inc
jmp
loope
adc
mov
jnp
pop
cli
mov
lret
cltd
sahf
sarb
xchg
stos
mov
movsb
push
fwait
and
insl
sbb
arpl
clc
pop
mov
aaa
sbb
jns
pop
adc
movsb
jb
sub
lret
fildll
das
imul
out
xlat
not
sbb
inc
lret
mov
add
or
sti
mov
fnstcw
xchg
lcall
sbb
inc
fmul
repnz
in
repnz
dec
cltd
outsb
fs
sub
xlat
dec
xchg
bound
aas
fwait
mov
jle
fdiv
fidivs
jb
add
insl
cltd
fmuls
xchg
lret
sbb
imull
cmpsb
adc
jo
loope
pop
xchg
std
mov
rcrb
fdivl
dec
je
mov
cmp
sub
push
or
push
xlat
push
cmp
cli
insl
popf
in
enter
rorb
and
mov
stc
mov
push
add
icebp
jg
xchg
aam
arpl
out
or
push
js
int3
loopne
inc
leave
das
imul
aam
scas
ds
add
add
sub
cs
out
shll
mov
sahf
out
and
mov
inc
push
mov
std
pop
cmpsl
add
das
xchg
cmpsb
pusha
lret
mov
sbb
sub
xor
pusha
in
cmp
or
sti
jne
jl
and
and
fmuls
mov
mov
mov
mov
mov
and
int3
sbb
ds
push
xchg
pop
clc
jp
movsb
sub
jne
sti
inc
loopne
inc
pop
xor
lock
mov
cmp
lds
gs
push
dec
mov
ret
push
xchg
mov
cmc
sub
push
aam
xor
out
mov
rcrl
loopne
lock
lahf
push
inc
cmp
jge
imul
fs
iret
in
rol
sub
inc
push
jle
push
js
cli
push
mov
ficomps
mov
push
sbb
push
aas
in
mov
add
stc
jno
adc
sbb
dec
cmp
xchg
pop
mov
sbb
xchg
movsl
insl
mov
test
stc
add
and
mov
or
and
faddl
xor
or
out
fs
mov
aad
lcall
xlat
lock
push
test
push
fs
fnsave
jle
cmp
or
flds
in
push
mov
mov
inc
mov
imul
fcoms
sbb
lret
rclb
in
xchg
and
xor
push
scas
push
mov
aad
enter
mov
mov
mov
addr16
sahf
ds
sbb
pop
pop
dec
aam
out
mov
scas
xchg
and
shrb
jno
lret
movl
arpl
add
add
sahf
call
inc
ret
jb
shlb
fdivrl
ficompl
mov
jl
sub
xchg
icebp
jecxz
dec
mov
gs
gs
negl
mov
pop
mov
adc
sub
push
sub
add
mov
rolb
scas
das
cmp
jp
add
out
icebp
xor
mov
mov
stos
xlat
pop
or
addr16
add
jl
or
jno
push
or
fnstcw
dec
xor
daa
ljmp
scas
out
sub
addl
fdivs
sbb
adc
xor
pushf
fsubrs
daa
nop
sub
mov
pop
lods
sub
fs
std
inc
lret
aad
sar
jb
test
sbb
push
pop
xchg
cwtl
fistpll
cli
dec
cmp
aad
mov
inc
dec
hlt
and
test
and
in
xchg
aaa
mov
mov
xchg
pop
ljmp
call
sub
sti
stc
int3
les
adc
inc
sbb
aam
roll
mov
cmp
rolb
ret
add
push
adc
add
cvtps2pi
and
jnp
push
repz
das
into
jle
xlat
and
cli
cmp
lret
pop
imull
jge
gs
or
sbb
xor
leave
subl
pop
loopne
push
leave
fdivs
dec
imul
xchg
mov
inc
xor
mov
insl
cmp
sbb
addl
dec
shlb
xor
repz
test
push
fists
inc
xchg
iret
jne
xor
std
push
mov
test
pop
test
aaa
add
int3
add
dec
stos
sbbb
jg
into
in
adcl
mov
xor
inc
mov
pop
cmp
int
mov
lret
jae
pop
es
lods
inc
fs
adc
fdivrs
fnstsw
cmp
ficoml
cmpsb
push
repnz
and
popa
mull
xor
addl
xor
mov
imul
aaa
cmpsb
xchg
hlt
mov
ret
lcall
fistps
pushf
pop
loope
jno
std
jne
xor
push
cmp
negl
xchg
cmpsb
repnz
jle
and
out
pusha
lock
xchg
lods
mov
outsb
movsb
movsl
or
les
pop
jmp
test
sub
or
push
mov
xor
incl
pusha
mov
test
fsub
pop
or
mov
add
mov
lcall
fldcw
shll
gs
adc
fwait
xor
sbb
jge
or
lret
xor
scas
or
ja
stos
mov
xor
idivl
loope
xor
cmp
dec
adc
and
add
outsb
fcoml
and
les
pop
rolb
mov
sub
add
jne
test
and
sub
faddp
in
jb
stos
push
sbb
xchg
out
dec
cwtl
aam
pop
icebp
out
jp
loop
mov
ret
cmc
xchg
sti
inc
test
div
movsb
imul
cld
add
es
nop
adc
cmp
aaa
out
xor
push
push
sub
rcr
push
push
mov
jb
cmp
lds
ja
movsl
aad
ficompl
mov
dec
loopne
push
fdivrs
cmp
out
or
xchg
dec
jb
cmp
mov
insl
dec
add
dec
scas
jg
enter
mov
fiadds
ljmp
lret
out
cld
stos
js
movsb
add
filds
push
hlt
pop
jmp
inc
dec
and
ja
xchg
dec
insb
jno
lea
and
stc
sub
mov
cld
jge
sub
stos
cmc
add
xchg
xor
dec
mov
lea
sub
xchg
add
test
sub
ret
cmpsb
fwait
push
sti
test
aas
pop
aad
mov
cld
jne
add
push
cmpsb
cmp
outsl
sub
or
push
gs
dec
xorb
sub
rolb
repz
out
sub
jl
daa
in
adc
subb
subl
pop
xor
xchg
push
push
outsl
xlat
fisttpl
int
add
imul
xchg
cmp
push
pop
rcl
es
sub
fwait
incb
lea
add
jo
mov
mov
loope
ljmp
js
pop
inc
dec
lret
addl
jbe
mov
mov
jbe
sbb
test
xor
pushf
movsl
sbb
add
jb
mov
outsl
inc
subb
mov
cmc
int3
push
lods
add
mov
pop
call
inc
sbb
adc
iret
jnp
cmpsl
lea
add
push
mov
push
mov
mov
fwait
sahf
dec
dec
pop
rcrb
inc
sbb
or
pop
cld
loope
push
adc
into
repz
push
sti
push
xchg
inc
ret
push
in
pushf
or
mov
sbb
outsl
dec
ret
lahf
sbb
push
dec
xlat
mov
sahf
xchg
adc
xor
inc
inc
fscale
out
arpl
pushf
fcoml
and
notb
out
lods
ret
int
jno
or
jl
test
lcall
fs
jl
jns
stos
sub
mov
sub
add
mov
test
mov
inc
jle
and
pop
pop
cltd
jno
das
xchg
in
fdiv
mov
mov
xor
ret
and
roll
push
inc
gs
mov
dec
or
int3
jbe,pn
mov
jns
pop
jns
sub
jno
psraw
iret
popf
mov
pushf
stos
push
movsb
inc
jg
lods
sahf
mov
adc
jbe
mov
xor
jne
add
or
inc
loope
cld
jnp
js
shlb
add
jmp
and
and
mov
fistps
fwait
inc
movsl
jmp
xlat
dec
push
insl
shlb
cmp
mov
and
mov
sbb
pop
mov
sub
in
or
outsl
mov
pop
popf
cmp
shll
or
aam
das
repnz
sti
es
addr16
add
mov
cs
xor
xor
sbb
inc
or
in
mov
xchg
rorl
dec
sub
rorl
dec
mov
xchg
jb
adc
sti
jno
sbb
cmp
pop
add
frstor
sbb
push
aaa
imul
ficoms
cmp
mov
pop
iret
in
pop
push
or
ficomps
xor
xchg
pop
jecxz
mov
movl
scas
aad
and
cli
mov
fcomp
js
movsb
sub
pop
int3
cltd
xor
inc
out
addr16
and
xor
int
inc
sub
addr16
mov
imul
mov
or
ja
push
jg
imul
leave
or
aas
in
pop
jae
test
adc
pop
pop
cmpsb
lret
imulb
dec
and
cld
dec
sti
xor
cmp
rorb
pop
cmpl
pushf
fldt
pcmpgtb
das
insl
jno
xchg
pop
adc
mov
jg
fisubrl
jmp
pop
loopne
and
sub
jns
dec
ljmp
out
in
out
push
or
pop
ja
hlt
pop
sub
loop
pop
fstp
cmp
mov
enter
push
xchg
jne
imul
jge
cmp
scas
fildll
pop
icebp
and
cltd
dec
stos
mov
and
lds
adc
dec
movsl
cli
mov
mov
orl
cwtl
mov
dec
enter
inc
pop
mov
push
xor
lret
and
or
dec
jnp
jb
cmpb
imull
mov
ds
inc
adc
fmul
dec
or
mov
xchg
or
in
jp
lcall
sbb
mov
mov
sub
dec
in
mov
jne
inc
inc
mov
mov
and
movsb
mov
sub
shr
xchg
fisubrs
rclb
cmp
xlat
xor
fcom
push
mov
or
lods
adc
push
out
pop
and
xchg
fstpt
mov
mov
mov
icebp
push
mov
jo
sub
jbe
lock
mov
bound
dec
add
push
cmp
sbb
fwait
lret
xor
repnz
push
pop
inc
mov
into
lods
jae
mov
xor
sbb
jle
cmp
out
xor
sbb
sahf
scas
push
cmpsb
loope
js
cmc
push
jno
jecxz
test
addb
xor
clc
pop
test
and
mov
lea
int
xchg
inc
mov
mov
sub
jmp
xlat
daa
mov
movsb
imul
bound
std
push
fld
out
hlt
sbb
cmp
add
out
in
loope
mov
adc
enter
test
jb
adc
push
testb
es
in
icebp
sub
sahf
into
xor
xor
sbb
lret
mov
xchg
inc
in
leave
jmp
push
out
inc
clc
in
mov
dec
cmp
adc
aas
sbb
xor
push
jbe
mov
push
mov
into
outsb
sbb
out
je
enter
int3
pop
movsl
jecxz
xchg
fwait
mov
pop
or
mov
sub
add
fbld
addr16
adc
mov
les
sub
pop
lret
mov
mov
nop
fistpl
ffreep
int3
fisubrs
repz
push
or
push
inc
nop
in
psllq
xor
mov
and
cmpl
sub
lret
mov
repnz
inc
sbb
shlb
sbb
roll
cwtl
stos
sahf
aaa
mov
xchg
and
mov
call
push
sti
fdivl
or
sub
add
sbbb
pop
outsl
ror
int
fs
jle
jge
in
pop
mov
mov
xchg
xchg
out
out
aam
inc
insl
and
dec
outsb
fcompp
adc
and
jbe
or
or
scas
gs
xchg
daa
inc
sub
rcll
lea
xorb
jg
jge
fisttps
out
pusha
inc
pop
jp
lock
xchg
add
bswap
add
lret
jae
or
add
sbb
xchg
cmp
fimuls
and
jle
jl
or
xchg
cwtl
mov
pop
or
orb
in
outsl
test
aam
cmp
and
ss
das
les
add
shrb
push
repnz
out
into
imul
pushf
xchg
fwait
repnz
out
call
aad
pop
jns
ds
popf
rorl
mov
test
outsl
idivb
orb
and
jge
and
shlb
mov
inc
cmp
in
jne
push
js
flds
push
dec
in
test
out
in
xor
push
push
pop
lds
fimuls
mov
push
jne
jns
push
fimuls
pop
push
sbb
sbb
xor
xor
test
lcall
sarl
outsb
pusha
add
sti
repz
jno
dec
xor
push
sar
push
loope
cmpsb
push
shlb
arpl
mov
fildll
lds
pop
imul
and
mov
outsb
std
fwait
addr16
out
std
lods
mov
sarl
xor
in
fildl
fnsave
cmp
imul
sub
ret
icebp
or
out
fwait
add
out
pop
ja
dec
mov
sbb
push
aaa
inc
scas
jg
xor
sub
inc
push
ss
lock
out
mov
or
jne
loopne
fs
mov
pusha
loopne
mov
xchg
fbstp
sbbl
add
dec
sbb
pushl
mov
movsb
and
dec
into
or
mov
lock
mov
xchg
test
mov
dec
fisttps
mov
sbbb
or
sti
loop
nop
inc
pushf
divb
test
lahf
adc
pop
loop
xchg
cltd
xor
jb
and
icebp
imul
loopne
sub
mov
je
pop
dec
hlt
push
aam
sbb
mov
and
sbb
inc
mov
and
iret
incl
inc
push
and
lret
sbb
push
fcoml
test
lcall
xor
push
or
popa
cwtl
or
pop
repz
jmp
xor
jae
add
fists
jle
jnp
divl
and
pop
fsubr
or
hlt
add
out
shrb
addr16
dec
dec
mov
jns
push
pop
mov
jg
sub
sti
fistps
stos
stos
test
xchg
iret
pop
add
aad
add
lcall
add
cld
xor
mov
cli
pushf
pop
lds
jp
mov
addr16
divb
mov
sub
ljmp
adc
outsb
xor
sti
cli
subb
sbb
pop
dec
movsb
es
mov
sbb
jnp
adc
test
jne
jg
ds
ja
xchg
push
mov
mov
cld
cmp
pop
xor
adcl
jae
mov
adc
adc
lods
icebp
ljmp
mov
jno
fdivl
inc
and
int
fidivs
push
ja
mov
enter
dec
pop
nop
xor
mov
popf
scas
cmp
mov
xchg
out
lcall
xlat
sbb
push
sub
or
pop
gs
mov
ja
mov
ds
mov
jae
loope
mov
adc
adc
sar
add
jae
mov
adc
mov
inc
pop
aaa
fnstsw
pop
add
and
dec
in
mov
xchg
mov
sbb
int3
mov
sub
out
in
lret
repz
cli
movl
pop
nop
out
jecxz
cmp
xor
fadds
push
aas
sbb
enter
dec
stos
bound
call
add
nop
mov
sub
pop
ljmp
xchg
sub
adc
jne
sti
in
xchg
sbb
mov
cmp
cli
testb
sbb
mov
mov
mov
xlat
or
fisttpll
incb
sub
fcomi
icebp
orb
push
loop
jp
mov
xchg
enter
hlt
cwtl
inc
push
xlat
push
pop
repz
sub
pop
jo
aad
stos
dec
ficoml
mov
cmpb
fcmovnb
mov
fsubs
and
mov
ds
inc
push
push
je
movsb
mov
adc
stos
loopne
in
xchg
sbb
add
mov
mov
cltd
jecxz
dec
pop
stos
mov
inc
sbb
decb
aam
push
jge
sbb
push
cwtl
pop
subl
pop
inc
xor
sbb
xor
bound
in
mov
push
leave
aaa
stos
adc
sub
and
ficompl
cmpl
jno
add
push
stc
faddp
int
aaa
decl
fists
arpl
lods
data16
jle
aad
adc
push
test
into
out
xor
pop
pop
cmp
iret
mov
loope
scas
lock
xchg
jg
pop
xchg
mov
in
pop
les
test
and
dec
jbe
stos
pop
push
cli
mov
add
and
adc
sub
sbb
ret
sub
push
sub
add
idivb
loopne
sbb
dec
xchg
xchg
ret
sbb
scas
dec
xor
push
mov
xchg
push
sbb
push
fcoml
movsl
aam
movsl
xchg
push
jb,pt
jecxz
push
push
adc
ds
xor
mov
xor
imul
shlb
push
aas
jecxz
mov
das
mov
adc
pop
arpl
sub
mov
jo
std
addb
and
adc
push
outsb
mov
xchg
push
xchg
push
jo
dec
mov
mov
mov
jae
adc
inc
std
add
adc
cs
std
add
in
imul
mov
xchg
jmp
pop
mov
leave
std
pop
loopne
push
not
daa
call
repz
mov
lahf
scas
push
cs
pop
push
ljmp
jp
nop
sbb
test
inc
adc
inc
adc
fwait
bound
clc
xor
test
es
dec
and
mov
pop
stc
sbb
jl
pusha
das
fwait
hlt
sub
push
adc
lahf
test
xchg
push
jb
bound
stos
cwtl
shrb
xchg
pop
fs
in
loop
xchg
sbb
xlat
jne
ljmp
pop
sar
mov
jne
fdiv
xlat
cwtl
xor
adc
mov
pop
mov
jbe
nop
push
call
jbe
adc
lods
sub
push
sbb
das
loope
mov
cmc
push
push
or
xor
xchg
stos
lsl
adc
xchg
lret
aam
cmp
push
mov
ss
xor
lods
incb
mov
ret
cmpsl
push
dec
adc
or
imul
daa
lock
adc
in
mov
orl
xor
mov
mov
mov
fnstsw
sub
addl
pop
add
scas
sti
push
adc
iret
push
jno
mov
cmpl
ret
ds
push
icebp
fcmovne
lahf
cmpsl
push
pushf
pop
jp
cmp
int3
cli
cmp
leave
inc
jb
adc
add
lods
adc
imul
lret
and
enter
sub
cmp
sub
jp
mov
pop
jo
adc
sbb
adc
scas
xor
test
xor
enter
jae
int
gs
sub
leave
cld
jle
lods
xor
in
cltd
dec
aas
popa
cwtl
lretw
mov
push
cli
idivb
mov
cmc
in
adc
mov
cmp
ja
mov
test
inc
cmc
jge
cmpb
int
call
test
xlat
xchg
out
dec
xchg
inc
fs
mov
popf
jl
xchg
inc
mov
jbe
dec
outsl
cmc
adc
fld
outsl
cmpl
jmp
jb
pop
dec
icebp
push
aas
fwait
jl
push
int
divb
scas
sarl
stos
or
std
add
mov
mov
xchg
jno
aas
ret
jo
jns
jecxz
jecxz
push
jne
push
cmp
popa
stc
sbb
popf
clc
js
bswap
cli
mov
insl
mov
sbb
pop
jl
mov
cmp
mov
mov
xchg
add
testl
mov
cld
jnp
or
or
std
jecxz
xor
loop
mov
add
cmpsl
push
mov
out
or
xor
push
push
shll
sbb
ffree
je
scas
inc
lods
push
repnz
push
jg
repnz
repz
ss
add
in
and
data16
cmpsb
push
mov
mov
xor
add
outsb
mov
mov
es
push
divb
jbe
ret
pop
mov
mov
push
shlb
fwait
xchg
imul
cmp
movsb
jb
into
mov
fiadds
cld
daa
dec
jae
enter
fsubrs
mov
mov
or
or
rep
jae
les
rclb
jbe
mov
xchg
xchg
loop
add
or
fwait
scas
fwait
pop
and
pushf
adc
sti
jecxz
rcrl
shl
push
sahf
mov
movsl
sahf
cs
dec
sub
lods
adc
enter
inc
leave
setge
and
int3
fwait
or
les
cmp
inc
sti
xor
and
stc
push
loopne
jns
test
outsl
jbe
das
mov
jl
lods
imul
xchg
cld
sbb
fisubs
jb
int
clc
lret
nop
add
adc
sbb
sahf
mov
fisttps
out
inc
inc
ss
mov
test
rolb
xchg
outsb
shlb
outsl
mov
cmpsb
ss
and
dec
enter
cmpsb
lret
sub
mov
jne
add
push
cmp
sbb
sub
cmpsb
bound
mov
test
xchg
push
decb
cmpsl
and
mov
adc
shrl
cwtl
sahf
add
cmp
out
jmp
pop
es
cltd
rcr
xchg
js
mov
arpl
and
cwtl
mov
fcmovu
in
fmuls
push
icebp
sub
rcrb
movsb
xchg
xor
xchg
xchg
dec
pop
test
pmuludq
sbb
adc
sar
jle
aad
ljmp
and
push
inc
adc
push
sbb
pop
xchg
lock
imul
lea
jl
adc
test
fcomi
add
xchg
xchg
inc
aas
ret
inc
fnstcw
jns
xchg
pop
rcrl
aaa
mov
movsb
subl
sahf
test
mov
jg
stc
adc
test
inc
enter
jge
out
cmc
fmul
push
mov
mov
cmp
inc
add
cs
pop
enter
ljmp
aam
es
aam
in
pop
aad
or
sbb
loope
arpl
ja
and
repnz
add
mov
xchg
pushf
xchg
push
test
fistpll
dec
add
sub
or
push
push
sbb
out
scas
adc
mov
das
fldenv
or
test
mov
popa
cld
push
stos
add
mov
lods
loopne
add
ret
pop
or
mov
jp
xor
dec
out
cmp
fs
mov
push
push
das
mov
and
jmp
fdivrp
mov
divb
mov
push
mov
shr
push
ret
mov
andb
sub
pushf
insl
xor
test
and
push
xchg
mov
mov
imul
cld
pop
and
inc
adc
test
test
pop
clc
cmpsl
mov
cwtl
jl
out
andl
mov
or
outsl
mov
das
insl
test
xor
fs
icebp
sbb
aaa
push
inc
fst
ljmp
lret
filds
xor
out
xor
cmpsb
pop
add
test
sbb
jno
aas
push
adc
imul
sbb
fsubs
icebp
pop
jge
popa
popf
popa
mov
cmpsl
mov
fildl
pop
sbb
xor
nop
add
cmp
mov
je
push
and
jnp
enter
addl
mov
test
lods
test
inc
pop
nop
cmp
shl
mov
lret
fisubl
shrb
inc
xchg
mov
push
and
aaa
fisttps
xchg
jne
jbe
cltd
xchg
call
loopne
xchg
lret
pop
ret
imul
js
inc
pop
add
mov
mov
jno
mov
sbb
pop
test
jl
xchg
int3
rcrb
cmpsl
rcr
rolb
mov
fmul
cmp
ficoml
dec
sbb
xor
mov
str
aas
ljmp
inc
or
insl
pop
xchg
xor
inc
sahf
xor
jns
inc
sub
pop
test
sub
je
fwait
mov
pop
icebp
pop
and
inc
mov
lds
mov
sub
sti
insl
adc
mov
dec
push
gs
sub
lods
sub
or
sbb
adc
pop
mov
movsb
orb
add
push
xor
push
jne
cmp
call
mov
ret
lea
dec
xlat
shlb
lods
roll
sahf
xchg
xchg
mov
aam
push
shrl
mov
add
sti
test
int3
add
jp
out
mov
cmc
fstl
mov
ja
jl
dec
xlat
ja
ljmp
xor
jge
pop
jmp
adc
add
orb
push
mov
fldt
add
sti
jg
jg
rcr
dec
lods
xor
roll
xchg
push
iret
cmp
pop
jns
dec
mov
lods
jae
aaa
xchg
lock
call
adcb
xchg
insl
adc
sbb
inc
adcb
lahf
xchg
movsl
hlt
pusha
arpl
sbb
cmp
sub
push
push
xchg
dec
aaa
cmp
incb
movsb
jbe
ljmp
stos
cmp
in
adc
daa
nop
pop
scas
cmp
decb
lds
dec
int3
sub
sub
call
jmp
out
jbe,pt
aad
or
cmp
test
adc
and
xor
dec
jns
pushf
xor
push
mov
aad
pminsw
aad
in
sbb
push
sbb
daa
test
enter
out
cmp
or
in
pop
add
mov
mov
mov
sbb
or
and
lret
and
jno
mov
push
and
pop
and
xor
xchg
shrb
xor
das
jnp
into
xor
imul
into
jbe
iret
cmc
add
pushf
in
cs
test
cli
ss
in
call
pushf
popf
out
cmp
sahf
out
jle
fcomps
or
mov
push
mov
inc
or
pop
insb
sbb
push
mov
popf
outsl
or
sahf
sbbl
jae
in
sbb
fisubrl
test
daa
ret
or
cld
or
mov
cmp
or
pop
out
adc
ljmp
dec
ja
add
sub
inc
pop
fdivl
xchg
es
rorl
fsubrl
mov
xchg
stos
cld
xchg
jmp
xchg
outsb
jb
shlb
test
in
incl
insb
cs
fstps
pop
lret
test
mov
sub
pusha
scas
je
dec
je
incl
dec
cmpsb
add
sub
jp
repnz
pop
loop
mov
ret
in
fstpt
inc
bound
in
add
or
fisubrs
shl
imul
sub
inc
movsl
jae
popa
adc
adc
sarl
fstl
cmpsb
adc
xchg
ret
sbb
push
push
sbb
mov
xor
fwait
lret
cld
lds
subb
inc
jns
push
outsl
aas
mov
add
or
fldcw
cwtl
jg
cmc
jnp
sub
adc
adc
aam
rclb
repz
mov
adc
cmpsl
mov
or
sbb
lock
add
xchg
shll
cmp
loope
jbe
outsl
adc
adc
rclb
or
jo
fcmovnu
mov
push
lahf
dec
cmp
mov
mov
mov
fs
addr16
mov
sahf
sub
cli
cmp
cmp
int
push
lcall
pop
add
es
imul
repz
adc
lret
cmpsl
xchg
add
fimuls
xor
test
aas
in
call
pop
fs
ds
shr
mov
dec
nop
jo
out
adc
cld
je
xchg
mov
inc
test
push
add
xor
mov
sbb
xchg
std
ret
jmp
mul
inc
mov
icebp
bound
bnd
or
dec
addb
and
out
fmull
mov
inc
aam
daa
mov
mov
lea
cltd
les
and
dec
ss
mov
jmp
push
aaa
popl
aaa
bound
orl
inc
cmp
jl
dec
fists
xchg
dec
mov
push
cmc
ds
leave
in
int3
mov
xlat
lds
cltd
xor
push
out
xor
aam
aas
xor
test
inc
mov
sbb
clc
inc
aad
cld
dec
cmp
clc
out
repz
push
das
xor
cmp
test
lods
lret
or
xorb
out
test
cltd
imul
push
push
mov
pop
sub
adc
fiaddl
mov
sbb
add
xchg
ds
fstl
stos
ret
das
cmp
aas
dec
loopne
enter
outsl
imul
in
mov
inc
mov
in
inc
out
jge
cli
cltd
jle
test
jno
setb
cmp
cmp
cmc
hlt
mov
jo
lret
dec
fstps
xchg
repnz
hlt
xor
lock
sbb
sub
mov
xor
out
shl
inc
bound
in
shll
push
addr16
test
sub
repz
hlt
out
push
dec
cwtl
cs
leave
test
push
pop
and
arpl
pop
scas
inc
sti
push
cltd
lcall
inc
lret
icebp
inc
in
pshufw
fs
mov
in
es
dec
pop
inc
pop
shlb
inc
loope
shll
loopne
movsb
push
cld
adc
ljmp
idiv
fdivrs
mov
mov
ljmp
xchg
enter
adc
cwtl
scas
mov
out
adc
push
xchg
cld
in
cmpsl
adc
test
adcl
shll
jne
out
fistpl
shlb
sbb
fs
sub
lcall
pop
std
push
cld
pop
xor
mov
cltd
test
enter
sub
addr16
xlat
nop
and
faddp
fsubrs
push
bnd
loop
xor
or
fisubrs
les
xor
stos
in
mov
call
adc
and
mov
sbb
cltd
and
imul
mov
mov
ret
mov
cmpl
nop
cmp
in
loope
jge
sub
xlat
add
lcall
in
imul
xchg
adc
cmp
ret
mov
iret
jb
lahf
out
pop
dec
sub
push
mov
std
lret
adc
mov
add
push
mov
out
or
push
mov
xor
hlt
addb
pop
jge
insb
test
add
and
push
push
loop
loop
fsubrl
popa
mov
loopne
jae
ret
push
push
movsl
mov
int
lods
cmpb
xchg
cmpsl
mov
pop
mov
jmp
xchg
add
adc
arpl
mov
vpminub
push
push
add
lret
jle
sub
cmpsl
nop
pop
xchg
adc
outsb
pop
sbb
push
pop
js
push
fimull
repnz
jbe
lods
xchg
pop
xchg
mov
cmp
add
mov
cmp
jne
or
push
outsb
mov
pop
jo
cltd
mov
insl
fsubr
arpl
popf
xor
xor
pop
mov
dec
xchg
cmp
lock
hlt
int3
xchg
pushf
call
aam
adc
testb
add
mov
pop
cmp
xchg
adc
cld
test
push
xor
out
negl
sub
out
xor
repz
mov
add
insb
je
inc
add
icebp
lods
or
jnp,pn
or
cmpsb
ficomps
leave
pusha
pop
inc
mov
ret
push
inc
repz
push
sbb
ljmp
fldt
jecxz
push
inc
add
ds
inc
lock
outsl
fs
es
or
xchg
push
push
cs
jbe
aaa
repnz
sbbl
out
shlb
mov
xor
jb
aaa
xchg
or
idivb
and
mov
xorb
and
inc
call
pop
pop
cmc
mov
mov
dec
push
clc
dec
push
dec
into
mov
pushf
fwait
mov
adc
mov
fimull
fdivp
push
aad
test
rclb
in
xor
dec
inc
mov
jmp
les
xchg
sub
xchg
mov
mov
fs
xchg
add
aam
sbb
sarb
push
xchg
scas
movsl
in
pop
addr16
cwtl
sbb
xchg
cmp
xor
inc
bound
inc
pop
pop
cli
pusha
fwait
in
insl
mov
addr16
lcall
xor
mov
pop
in
adc
jp
rcr
scas
fdiv
lret
xor
add
dec
sbb
fwait
and
icebp
pop
pushl
popa
inc
ficomps
fidivrs
mov
stos
dec
call
stc
sbb
adc
call
outsb
sbb
enter
sub
aas
outsl
add
pop
lds
ffree
push
cmp
fcom
sub
fs
mov
inc
xchg
inc
cmp
roll
cmpsb
xchg
sub
pop
jp
mov
lret
inc
decl
cmp
in
jmp
iret
mov
push
cli
or
mov
aaa
out
cmp
pusha
fisubs
mov
xchg
push
in
lock
sub
jb
dec
popa
push
popf
ds
inc
leave
lea
mul
cmp
cmp
aam
cltd
inc
dec
push
insb
scas
mov
leave
or
std
sti
xor
stos
stos
xchg
fsubs
jno
popf
add
jg
mov
cli
nop
lret
fwait
nop
sbb
mov
aas
jp
and
imul
dec
in
dec
mov
jnp
ljmp
fs
lret
xor
out
popf
jg
sub
or
shrb
dec
stos
dec
xchg
ficoml
inc
insl
mov
dec
cwtl
xchg
aam
out
out
xchg
fistl
repnz
jge
shll
test
mov
jo
repnz
xor
or
dec
xor
popa
lds
in
sub
cld
push
sub
ds
sarl
fcmovb
sub
sbb
and
imul
mov
pop
stos
sarb
jmp
cld
sbb
int3
mov
in
leave
xchg
pop
sahf
std
adc
mov
push
cmp
insl
clc
push
mov
push
pop
add
xor
lcall
movsl
in
push
inc
or
ds
mov
xlat
nop
loope
inc
sub
repz
dec
jg
cmp
fldl
fsubr
int3
out
inc
sub
add
div
bound
std
and
mov
cmc
into
sbb
jnp
lahf
and
sbb
jae
cmpsb
out
push
out
jl
jae
jp
in
xchg
cmpsl
jnp
aaa
pop
xchg
xchg
ja
push
jle
je
jge
mov
mov
das
dec
mov
cmp
test
inc
dec
stc
inc
mov
mov
or
or
ret
jle
sbb
xchg
jb
in
mov
test
shlb
jbe
sbb
in
ds
outsl
loope
dec
jmp
repz
dec
pop
mov
cltd
mov
repz
dec
popa
jle
lahf
jl
fildll
rcl
or
clc
lods
int
jg
and
cltd
cmp
cmp
scas
out
sub
jnp
xor
ds
stos
pop
cmpsb
outsb
mov
xchg
outsl
push
jbe
pusha
addr16
push
xor
mov
jmp
es
ljmp
rorl
inc
inc
lods
lock
fldl
out
loop
and
jno
sbbb
adc
mov
testl
bound
lds
ljmp
sbbb
iret
shrb
inc
outsl
enter
rcr
icebp
adc
in
lcall
pop
out
mov
adcl
mov
arpl
push
popa
mov
xchg
stos
pusha
jge
cli
and
or
pop
add
gs
push
cmp
rol
test
pop
add
in
sub
dec
insb
sbb
pop
push
pop
adc
stc
out
jne
scas
push
and
in
sbb
int
adc
gs
ja
ficompl
xlat
int
xchg
cmp
inc
es
cmp
inc
outsl
popf
mov
and
in
xlat
xchg
mov
sub
jnp
lret
lock
adc
inc
addr16
cld
xlat
lea
je
test
aaa
mov
in
ror
push
adc
mov
pop
sahf
mov
sub
pop
test
pop
in
enter
repnz
mov
push
cmpsb
lea
mov
sub
cli
in
push
push
out
loope
mov
ret
in
addr16
push
das
sub
imul
jno
inc
dec
out
ficomps
pop
out
shl
jle
fmuls
pop
lock
movsb
fwait
and
test
and
lret
out
lods
mov
xchg
or
sub
pop
mov
add
repnz
inc
sub
jb
gs
jne,pt
loopne
adc
nop
adc
adc
or
mov
sub
divl
insb
dec
mov
ljmp
mov
lock
mov
cli
mov
std
mov
mov
push
jl
movsl
and
mov
push
lret
xor
pushf
leave
je
mov
leave
outsl
adc
test
xchg
sahf
push
addb
loope
mov
jge
scas
pop
jg
inc
push
imul
xor
nop
xor
pushf
scas
jp
jae
mov
scas
fs
mov
cld
out
xchg
cwtl
pop
add
sarl
cmp
adc
in
and
mov
repnz
xchg
lods
xchg
mov
adc
cmp
inc
sub
movsb
cli
insb
out
push
pop
fmuls
mov
and
add
xchg
gs
jle
pop
jbe
cmpsb
or
xlat
inc
inc
into
hlt
xor
xchg
leave
cmp
dec
mov
inc
mov
mov
ss
add
adc
mov
add
adc
or
xchg
or
outsl
jbe
hlt
xor
cs
sbb
dec
sbb
addr16
aad
test
pop
jae
lods
loop
jb
stos
jle
dec
or
inc
push
cmp
inc
jb
std
pop
das
inc
or
mov
loope
sub
loopne
mov
stc
in
ss
jno
and
lods
ja
out
out
xorl
or
out
test
es
imul
push
xor
in
push
and
sub
scas
aam
notb
dec
pop
mov
lahf
jae
inc
fcmovnu
xchg
repz
mov
pusha
aad
jmp
jecxz
xchg
ljmp
xchg
and
loop
xchg
pop
pop
mov
and
add
pop
sub
xchg
fbld
mov
adc
sub
adc
sub
xor
mov
or
negl
cs
adcb
and
pop
pop
jecxz
jle
inc
pop
pop
inc
lds
sahf
push
xor
jb
out
push
es
fnsave
popa
adc
iret
cli
cmovae
fs
into
lcall
cmp
lcall
pop
enter
scas
sbb
sub
out
lods
cmp
add
out
mov
pop
in
out
pop
cltd
pop
xor
add
sbb
cmp
add
jecxz
jmp
jl
rorl
stc
add
fistl
idivl
xlat
ror
aam
push
dec
mov
jmp
sbb
call
jnp
pop
push
jg
xor
and
dec
fists
sbbb
mov
shrb
adcl
mov
out
movl
clc
dec
fs
mov
shr
testb
dec
lods
dec
das
aaa
fstps
pop
mov
or
clc
hlt
cmp
and
in
add
fchs
fiaddl
and
mov
mov
mov
mov
mov
add
sub
lret
js
sub
cmp
rcr
sti
push
adc
or
and
adc
cwtl
cs
lea
lods
out
sti
scas
xchg
mov
sbb
add
jne
rclb
daa
lcall
cmp
sub
push
stc
add
mov
pop
xor
jno
xor
xchg
inc
mov
sub
lcall
push
lods
and
sub
ret
roll
gs
sbb
xor
mov
push
fsubs
icebp
push
out
xor
inc
mov
xchg
lock
xchg
and
jecxz
inc
icebp
xor
xor
and
mov
mov
pop
mov
inc
test
xor
jp
leave
bound
pop
sbb
rcrl
idivl
push
push
push
xlat
mov
loopne
imul
lds
in
inc
aaa
pushf
jle
dec
jmp
cmpsb
cmc
lret
in
sbb
xor
andb
pushf
and
sub
mov
xor
sub
es
or
repnz
jno
fucomi
scas
pop
pushl
mov
mov
filds
cmp
xor
cmp
fdivp
pop
in
packsswb
insl
fnstsw
clc
jp
sbb
mov
cmp
into
lods
mov
test
orb
mov
nop
and
fdivs
pop
sbb
sbb
add
test
cmp
sub
int
ljmp
test
or
ja
inc
jmp
fs
dec
lret
xchg
aad
add
jle
iret
cmp
push
mov
scas
into
clc
popw
mov
jbe
ret
outsl
add
xor
xor
xchg
fdivrp
in
das
sbb
push
in
xlat
pop
mov
out
inc
idivb
sub
or
cmpsb
jge
daa
mov
push
dec
sub
mov
or
dec
pop
mov
imul
push
lods
cwtl
xlat
push
jecxz
scas
xchg
fs
lret
int
imul
js
cld
or
data16
or
sbb
and
and
ret
insb
mov
mov
sbb
cmpsb
in
fdivs
mov
outsb
jecxz
mov
push
mov
lea
rcrl
jbe
fnstcw
jg
push
ja
adc
aaa
push
mov
rorl
pop
shr
mov
js
pop
fdivrp
sub
xchg
jno
xor
les
xor
push
imul
push
shl
repnz
pop
sbb
mov
fldt
adc
mov
add
xchg
movsb
mov
es
lahf
aad
sbb
inc
pushf
lods
lahf
lahf
push
or
testl
cmc
divb
lcall
popf
movsl
jp
xchg
rclb
int
or
pop
or
insl
loope
jb
sub
fdivr
xor
xchg
jl
inc
out
jno
lret
jmp
lock
dec
jecxz
xlat
xchg
adc
xchg
gs
mov
push
and
mov
push
repz
movl
sbb
xor
addl
or
inc
xchg
add
in
mov
sbb
dec
aad
es
fcmovnu
or
out
dec
lret
xchg
jp
dec
add
jl
fbstp
sbb
into
lds
xlat
ss
cmc
jl
lahf
inc
xor
arpl
xchg
insb
out
or
push
jmp
bound
cli
dec
sbb
daa
mov
jg
add
mov
out
push
mov
ljmp
xor
or
out
icebp
fidivs
shll
jb
es
or
sarl
nop
icebp
xor
arpl
inc
ljmp
sub
daa
cmp
in
notl
mov
mov
inc
or
mov
call
cmp
divb
sbb
inc
mov
cld
into
mov
clc
xor
mov
add
std
push
rorb
and
pusha
add
adc
mov
sarl
sub
mov
ds
stos
add
hlt
or
and
push
aas
data16
lods
add
clc
sbbl
inc
xlat
testl
mov
cmpsl
hlt
and
out
sub
and
push
into
xchg
mov
loope
lcall
pusha
popa
lea
mov
push
sahf
mov
pusha
shll
sub
or
push
xor
cmp
sub
pop
ds
jb
or
cmpsl
cmp
in
cmpsb
cmpsb
sub
cmp
je
mov
lods
cmc
into
iret
aad
fmuls
lret
arpl
out
out
mov
insb
dec
into
xchg
outsb
insl
test
cmpsb
fdiv
out
push
mov
add
add
int3
lahf
jmp
pop
xchg
lcall
loope
dec
sub
xchg
pop
pop
mov
jb
mov
sti
test
mov
inc
inc
add
sbb
pop
and
scas
inc
mov
dec
ljmp
incb
and
mov
in
enter
push
dec
xchg
sar
or
push
cltd
push
mov
jno
sahf
movsb
mov
cltd
push
mov
xor
xor
add
mov
add
sbb
jae
xchg
dec
mov
iret
xchg
xor
dec
cltd
dec
jns
pop
inc
scas
dec
pop
sub
icebp
adc
data16
inc
pop
jo
aaa
iret
shll
or
mov
sub
out
cmp
enter
into
cmp
daa
push
rclb
pop
mov
push
lcall
xchg
sub
jg
lret
xchg
fwait
movsb
push
jp
fcmove
sbb
xchg
jmp
lret
ret
or
cld
jns
outsb
mov
push
xor
mov
fisubs
addb
fs
ret
cmc
dec
test
sub
rcrl
imul
xchg
xchg
jno
faddl
dec
out
or
adc
dec
cli
pop
stos
pop
lret
roll
and
test
pop
push
mov
ljmp
clc
or
mov
cmp
cmc
pop
and
pop
xchg
mov
arpl
mov
mov
xchg
jnp
push
pop
jl
jns
out
cld
sbbl
mov
addl
mov
jnp
and
loop
lods
fwait
leave
or
push
xchg
data16
addb
xchg
adc
lret
shrl
push
dec
add
mov
addr16
movl
movsl
and
popf
bound
sarl
xor
adc
push
dec
in
xchg
lock
sbb
xor
mov
sbbl
shl
data16
pop
add
ficoml
nop
lods
mov
or
add
sbb
adc
xor
mov
xor
scas
push
aam
cmp
in
dec
in
mov
in
stc
pop
imul
cmpsl
jne
inc
out
mov
lcall
xchg
xor
sbb
mov
push
xor
mov
out
jge
nop
jno
push
aas
int
or
mov
pop
in
xchg
inc
in
push
sbb
arpl
fildl
jmp
and
gs
push
js
cmp
jb
int3
mov
test
shlb
jp
aad
push
mov
stos
mov
in
shrl
jle
push
lahf
mov
pop
sub
adcb
ja
inc
inc
in
jo
or
and
addr16
jae
adc
popa
notb
adc
and
cmc
ret
cmpsb
push
rolb
mov
jl
and
add
pop
out
xchg
ja
sti
push
mov
or
inc
xlat
inc
lcall
sub
popw
mov
and
rorl
mov
mov
mov
pop
stos
gs
imul
in
xor
mov
test
dec
mov
cmp
pop
gs
push
add
orl
mov
aam
mov
nop
cli
leave
js
mov
call
imul
das
jg
test
and
push
add
out
or
fs
lcall
lods
jmp
iret
sub
mov
into
ret
dec
aam
out
fbstp
in
mov
cmp
add
test
xchg
lcall
dec
outsb
mov
jo
cli
inc
or
mov
insl
push
or
xlat
lods
jg
mov
imul
pushf
mov
sub
inc
jne
or
and
pop
sbb
out
add
sbb
adc
loopne
out
insb
dec
pop
ficomps
pusha
inc
sahf
xlat
sbbb
test
pushf
add
icebp
sub
loop
fldl
pop
jecxz
ja
mov
sub
cmp
xchg
pop
es
sbb
cmp
es
mov
pop
insb
icebp
cmp
mov
push
icebp
jb
cli
imul
sub
lds
mov
xor
lret
loop
cmp
sti
inc
addr16
mov
adcl
mov
push
out
out
pop
cmp
pop
into
sbb
cmp
mov
ret
movsb
cli
jbe
cltd
ret
fnsave
xor
xchg
gs
cmp
push
std
push
mov
lahf
sub
cmp
jmp
imul
mov
xor
jle
sbb
push
insb
daa
xchg
pop
sub
lds
and
call
hlt
mov
in
test
in
cli
cmpsl
jo
cwtl
jb
xor
dec
fiadds
push
stos
lock
iret
notb
sahf
pop
popf
loope
xor
adc
jp
fistl
mov
jmp
or
sbb
adc
fsubp
scas
shlb
or
xchg
imul
aad
adc
in
cmp
adc
out
das
and
push
mov
mov
lcall
jg
push
xchg
pop
lahf
mov
dec
sub
inc
mov
jae
or
xor
ljmp
shl
push
jo
cmp
faddl
lods
fidivrs
cmp
cmp
jae
aaa
lds
aam
xor
sub
push
outsb
bound
pop
pop
sbb
or
loope
pop
cmc
mov
in
pop
add
test
pop
in
das
push
jo
arpl
fwait
mov
sub
cmpb
faddl
adc
inc
flds
sbb
lock
loope
add
xchg
out
push
or
pop
and
test
xchg
shlb
std
push
int
into
cwtl
flds
xchg
xchg
jl
cmp
orl
xor
mov
adc
mov
xor
mov
bound
jae
adc
jae
cmpl
sbb
cltd
popa
dec
addr16
mov
mov
sub
lahf
test
push
int
and
movsl
push
cmpb
dec
mov
fisttps
adc
and
lock
or
mov
loopne
lcall
sbb
enter
mov
cmpsl
lret
dec
push
imul
mov
movb
ljmp
xor
setl
adc
jb
ds
adc
cmp
push
jno
lock
sti
dec
call
nop
pop
or
mov
mov
sbb
xchg
mov
andb
cmp
adc
int3
xchg
push
pop
mov
xor
xchg
mov
add
push
sbb
push
push
movsl
aam
arpl
shl
pop
into
sahf
push
test
lcall
pop
es
mov
jae
xchg
xchg
xchg
cwtl
adc
test
jmp
and
rorl
negb
pop
sbb
pusha
cmpsb
call
xchg
in
cmpsl
fstps
in
and
add
mov
mov
cmp
add
mov
std
sti
adc
mov
jp
xchg
mov
inc
scas
push
push
adc
add
mov
sub
out
inc
inc
rcrl
cwtl
dec
cld
pop
add
xchg
sub
sahf
pusha
cmp
mov
push
dec
mov
shlb
push
jb
ss
cmc
or
fidivrs
sbb
fisubrs
clc
cmp
iret
or
dec
out
lret
cmp
mov
mov
dec
jbe
dec
fbld
aaa
inc
int
xor
push
dec
sbb
inc
cmp
sub
push
or
or
dec
sub
add
aaa
add
ss
nop
jge
push
cmp
mov
das
enter
sub
stos
iret
stc
mov
xchg
inc
dec
sahf
or
ret
jl
or
mov
mov
inc
in
fcompl
mov
adc
incl
cli
mov
in
je
push
mov
jb
nop
popf
sbb
mov
out
sub
mov
mov
shll
jmp
jne
lcall
cs
xchg
loop
rolb
scas
jne
pop
loopne
loopne
pusha
repz
sub
sbb
or
loope
data16
in
pop
pusha
inc
mov
inc
xorl
clc
fbstp
daa
and
rclb
lea
or
lahf
sbb
push
jmp
pushf
stos
jl
xor
cltd
mov
pushf
in
fdivl
imul
xor
jmp
adc
dec
mov
fiadds
hlt
in
jmp
repz
cld
mov
push
and
xchg
mov
xor
mov
aam
push
dec
inc
sahf
xchg
es
daa
push
and
adc
mov
repnz
and
dec
stc
loope
notb
mov
test
std
loop
add
and
das
loope
les
test
jp
dec
imul
aas
xchg
js
jl
or
cli
push
fldcw
mov
dec
sub
mov
test
jle
sbb
push
js
push
sahf
int
icebp
push
jae
rolb
xor
aad
jne
test
mov
in
rcl
pusha
cmpsb
inc
jne
pushf
gs
or
gs
in
adc
pop
jle
adc
leave
incl
cmp
fistpl
pop
cmp
jno
pop
dec
sub
pusha
mov
aad
cmc
pop
cmpsb
lret
filds
clc
mov
dec
xchg
dec
fcmovbe
jae
pop
out
nop
dec
xchg
push
icebp
pop
sub
test
sbb
shll
les
add
out
leave
adc
dec
arpl
data16
fadd
dec
xor
cmp
jl
adc
sub
out
testl
aaa
dec
push
mov
jo
sub
dec
mov
nop
int3
inc
das
orl
sub
jnp
dec
jnp
ret
stos
lret
dec
xchg
push
stc
or
cmc
rorl
cmp
cmp
dec
jo
xchg
js
in
push
jno
xchg
in
and
in
push
sbb
stos
jae
mov
push
or
orb
xchg
sub
mov
mov
inc
xlat
dec
push
jl
mov
mov
leave
aad
pop
or
mov
out
andb
aad
jb
and
adc
iret
fildll
add
mov
inc
push
jns
fistps
push
enter
xchg
lahf
pop
mov
imulb
ret
outsb
lret
xchg
int
ss
ret
fadd
in
imul
rolb
sub
jae
dec
push
add
pop
mov
xor
push
iret
xor
pushf
out
jae
gs
xchg
mov
pop
movb
in
mov
shr
rol
xchg
out
push
ror
test
inc
repnz
ds
ljmp
outsl
xchg
sbb
pushf
and
test
arpl
div
pop
sub
sti
adc
addr16
and
cmp
out
push
std
jnp
icebp
fs
jns
dec
mov
xchg
mov
cltd
push
aaa
jns
push
mov
or
in
xchg
inc
fnstenv
movsl
sti
xchg
insb
mov
arpl
xchg
adc
add
push
jbe
fsubrl
xchg
xchg
mov
inc
sti
mov
mov
push
jg
push
jg
shll
add
ret
xor
addr16
dec
mov
push
and
and
mov
sarl
sub
cmpsl
mov
push
insb
ret
pop
test
mov
xor
popf
dec
inc
adc
js
mov
push
mov
mov
cwtl
push
shll
add
add
ret
fwait
mov
cld
pop
fwait
lock
mov
lds
pop
inc
imul
sub
iret
sub
inc
and
shll
sub
add
mov
dec
insb
add
push
jae
and
dec
or
stc
add
cmpsl
lods
in
lea
push
xlat
dec
in
sbb
in
test
push
data16
and
in
push
pop
inc
mov
icebp
addr16
insb
aas
xchg
mov
dec
or
inc
pop
mov
adc
mov
jae
mov
cli
notb
inc
hlt
insb
daa
aad
push
adc
sub
mov
add
out
or
in
int3
add
sub
fidivl
mov
inc
ja
test
std
pop
push
lods
push
mov
andb
xlat
push
cmp
bound
cmp
add
cmp
ret
mov
pusha
stc
nop
jns
ret
insb
aad
adc
out
jg
inc
pop
pop
hlt
ljmp
icebp
cmpsl
ja
fidivl
pop
jge
cmpsl
mov
pusha
ss
inc
xchg
test
pop
pop
xchg
jle
mov
mov
add
ljmp
fstl
xor
pop
rclb
and
pop
and
mov
fdivs
jnp
in
punpcklwd
cwtl
or
dec
push
out
data16
sti
cmp
dec
je
lret
test
jne
pusha
test
popa
aas
movsb
into
adcl
aaa
insl
or
dec
jae
push
rcll
std
jbe
nop
dec
push
cmc
xchg
rorb
push
xchg
cmp
jmp
jnp
out
sbb
pop
in
cld
dec
dec
ror
pop
mov
add
shrb
cmp
repnz
jp
leave
repnz
inc
push
in
pop
sbb
movsl
push
adc
push
push
push
aad
and
leave
pusha
sbb
fnstenv
fcompl
inc
sbb
arpl
sub
lock
stos
add
xor
dec
out
call
jle
mov
or
pop
les
int
sub
out
xorb
jo
mov
dec
sti
leave
adc
sti
sbb
cmc
outsb
ret
iret
mov
sbb
mov
pusha
lds
fs
jae
inc
mov
ret
int3
mov
push
add
mov
xor
cmp
sbb
mov
dec
adc
nop
pop
fsub
xor
ficoms
push
leave
out
mov
or
shlb
lods
cltd
int3
pop
mov
pop
xchg
mov
pop
cs
daa
lahf
mov
jno
cmp
inc
outsb
sbbb
scas
cmc
stos
scas
jecxz
or
adc
aad
push
daa
mov
adc
add
mov
ja
or
adc
mov
insb
or
dec
and
pop
dec
push
roll
or
mov
fisubs
movsb
jbe
int
lcall
dec
imul
scas
fiadds
fcomp
shll
sbb
sti
add
into
xor
cmp
aaa
arpl
mov
jbe
mov
sub
lock
sub
in
ret
and
cmp
stc
xchg
ret
out
push
push
outsl
adc
pop
test
sub
dec
cmp
pop
out
in
lea
lods
xchg
cmpb
loope
mov
sub
fcoms
jmp
dec
mov
and
lods
iret
sub
test
cmc
cmp
jae
ljmp
xchg
mov
adc
pop
xchg
sbbb
insl
mov
ljmp
mulb
cmp
movsb
sub
notl
scas
or
xor
mov
psubsb
lods
sub
dec
popa
clc
mov
adc
jb
jmp
pop
or
jmp
clc
adc
dec
cmp
mov
or
lahf
cld
jmp
lods
movsl
sub
dec
mov
pop
lret
pop
and
mov
and
shlb
add
jge
lods
shlb
jmp
and
xchg
nop
push
jp
dec
in
jl
test
or
shrb
mov
pop
and
adc
lcall
push
repnz
shlb
mov
lods
dec
int
dec
mov
cmp
cli
lods
jge
pop
enter
cmp
adc
lds
pop
xchg
mov
out
out
or
in
scas
scas
jge
inc
ficomps
push
mov
cwtl
sub
pusha
aad
nop
leave
adc
add
dec
xchg
push
lods
push
movsl
mov
xchg
pop
and
mov
push
xchg
ret
repz
daa
sbb
cmp
adc
xchg
push
insb
iret
mov
sub
faddl
pop
subb
mov
and
sub
mov
out
loope
mov
pop
in
inc
inc
pop
aaa
dec
movsb
js
jb
and
mov
ljmp
repz
mov
push
mov
into
mov
jg
jno
popa
inc
pusha
cmpsl
ljmp
inc
les
lret
xchg
test
xchg
and
ffree
fwait
nop
adc
dec
lea
push
xchg
mov
enter
xchg
cmp
jmp
stos
mov
or
add
cmp
test
roll
and
mov
sub
pop
sub
out
xchg
and
clc
mov
mov
decl
push
push
push
nop
clc
mov
mov
pop
int
mov
pusha
push
inc
out
mov
vpsadbw
jmp
lods
sbb
mov
dec
add
loop
mov
sarb
movsl
mov
rcrb
mov
in
lret
or
sbb
mov
es
adc
cmp
call
pusha
jns
dec
xor
lods
imul
and
and
insb
js
mov
pop
mov
push
pop
xor
jl
dec
jecxz
jbe
cmp
outsl
cltd
mov
mov
insl
xor
add
out
jmp
fbld
xlat
mov
test
push
iret
adc
inc
cmp
int
outsl
rcr
hlt
xchg
sbb
dec
xchg
cltd
movsb
jnp
fsubs
fxch
hlt
mov
cmpsl
mov
shlb
in
xchg
and
lods
pop
lret
xor
sbb
and
push
cmc
sarl
gs
jo
gs
push
mov
ftst
out
out
sub
push
adc
int3
loopne
fs
sbb
and
push
and
outsl
xchg
jmp
cmp
in
outsb
popf
insl
loope
shll
adc
mov
mov
sub
ljmp
aad
mov
jae
cld
jg
test
imul
xchg
je
xchg
xchg
sub
fwait
icebp
scas
jle
loope
loope
sti
dec
movsl
mov
outsl
xchg
push
sub
es
and
sti
scas
lock
dec
test
call
mov
jns
dec
lret
inc
sub
add
adc
xor
cmp
insb
mov
in
pop
addr16
out
insl
in
andb
popa
ds
jmp
scas
dec
out
loope
inc
cmp
adc
mov
pop
xchg
mov
push
and
cltd
out
movsl
mov
push
sbb
jecxz
negb
std
loope
fwait
inc
and
ja
icebp
push
mov
ror
mov
lahf
jle
into
insb
add
lock
jecxz
mov
int
fldl
sti
insb
mov
test
scas
dec
fcmovnb
or
test
cmp
pop
inc
outsl
out
xor
hlt
inc
push
pop
pop
mov
inc
dec
in
add
xchg
push
jl
push
mov
xor
sahf
mov
int
std
pop
int3
outsl
loop
inc
in
xchg
dec
into
out
pop
xor
aam
jp
in
stos
push
je
in
popa
sbb
pushf
cwtl
lret
sbb
push
adc
cli
aaa
push
jns
in
pop
add
lock
lds
mov
sbbb
mov
and
xlat
scas
and
cs
fstpl
test
stos
sub
or
in
into
adc
test
andl
dec
test
jle
movsb
mov
push
dec
jbe
pop
jo
mov
xchg
cmpsl
test
cltd
mov
add
aad
pop
lods
int
mov
push
aad
scas
insl
pop
rcl
sub
data16
call
pop
mov
fwait
inc
out
dec
xor
jnp
cs
cmp
cmp
push
pop
ds
testl
pop
cmp
push
fists
xchg
dec
pop
and
pop
and
gs
data16
stos
mov
push
mov
sub
fimuls
dec
fcomip
jne
cmpsl
loop
mov
ljmp
and
inc
in
jno
das
sub
popa
jp
in
mov
add
inc
sub
addr16
stc
pop
mov
inc
scas
push
imul
nop
sarl
mov
pop
in
mov
mov
lret
test
lods
dec
pop
xchg
pushf
xor
pop
ret
popaw
inc
cmpsb
shl
jno
or
adc
sahf
aam
addr16
mov
punpckhdq
rclb
loopne
add
jmp
shr
movsb
mov
bound
xchg
inc
or
mov
sahf
fwait
aam
jae
sbb
xchg
cld
inc
xchg
pop
or
lods
dec
ds
hlt
ja
add
lret
lcall
mov
push
mov
lea
xchg
push
data16
mov
pop
enter
sub
out
inc
sub
xor
or
ret
cli
arpl
in
push
aas
or
mov
lcall
int
int
sub
xor
pop
inc
mov
jns
loopne
jb
cmp
push
push
stos
adc
loope
into
nop
push
xchg
jecxz
dec
call
add
stc
adc
push
mov
xor
imul
fisubl
xchg
rcll
mov
xchg
mov
cmpsl
inc
addr16
mov
and
inc
pushf
and
mov
cmpxchg
adc
mov
mov
hlt
cs
mov
pop
insl
cmpsb
movsl
mov
cmp
popf
addr16
xor
xor
je
ret
dec
jbe
mov
pusha
ds
add
and
sbb
test
int3
sbb
xchg
ds
push
inc
adc
cmp
loop
fsubrs
add
mov
pop
xchg
mov
mov
lods
js
adc
pop
mov
out
cmpsl
sbb
add
xchg
fisttpll
ja
fstpl
dec
mov
into
push
push
js
jo
dec
iret
sub
inc
stc
push
jle
int
shl
mov
test
jmp
nop
stos
mov
les
pop
push
shll
dec
mov
dec
sbb
and
or
xchg
dec
cs
push
stc
jne
adc
mov
ror
cmp
shlb
ret
fwait
jg
pop
dec
push
lahf
testb
ja
mov
incw
and
je
imul
adc
outsb
inc
jbe
ret
or
je
jno
aam
sub
test
sbb
jge
add
add
inc
xor
pop
jnp
lods
cwtl
mov
push
je
in
push
repnz
addps
mov
fmuls
lcall
mov
aam
jg
cld
push
and
insb
movsl
mov
call
push
push
mov
inc
sub
jle
ss
pop
pop
pushf
sbb
lds
adc
fs
xchg
pusha
cs
mov
or
inc
mov
inc
jmp
sbb
mov
cmp
icebp
aam
loope
fimull
sub
dec
cwtl
mov
dec
mov
jge
cld
jecxz
mov
pushf
mov
adc
xchg
data16
stos
test
roll
mov
dec
push
push
mov
xorb
aaa
jne
mov
push
xor
inc
loope
cmp
inc
mov
cmp
lock
gs
mov
jo
lods
es
push
addr16
dec
push
xchg
aad
ja
loop
or
ljmp
jo
pop
or
jmp
push
pop
and
call
popf
inc
int
xor
ds
cmp
dec
cli
jae
adc
dec
ret
mov
adc
xor
and
inc
cmpsb
je
jle
mov
xchg
dec
cld
cmp
test
inc
lret
cld
jg
mov
and
inc
cmp
jo
sub
add
mov
lret
in
fdivrl
pop
negb
push
xchg
sub
inc
cmpsb
cmp
mov
xchg
sbb
adc
dec
pushf
sub
movsb
test
data16
int
pop
stc
and
xor
dec
aas
add
mov
jnp
and
jnp
xor
pop
dec
loop
dec
stc
adc
or
dec
mov
xor
sub
or
or
fsubl
andl
inc
mov
divl
lds
adc
mov
or
ljmp
in
push
push
push
adc
sub
in
xor
fmuls
daa
jecxz
mov
push
push
jnp
xchg
ret
arpl
dec
pop
popa
sbb
pop
repnz
mov
jmp
adc
repnz
push
mov
mov
orl
add
push
mov
mov
xlat
cmp
xchg
stos
dec
cmp
fstl
scas
jae
lds
rolb
das
cmp
push
inc
lret
xchg
mov
or
mov
and
jg
bound
pushf
sbb
add
addr16
mov
outsb
dec
or
and
jecxz
add
cwtl
ficoml
outsb
add
loop
push
imul
cmpsb
add
xor
xchg
in
ljmp
or
cmpsl
imul
mov
inc
test
popf
lea
pop
pop
xchg
fisubrs
rcrl
add
shlb
pop
mov
dec
xorb
je
mov
xor
ret
mov
pop
inc
adc
jne
inc
and
insb
dec
cld
add
and
push
pop
mov
xor
stc
scas
out
ret
jae
scas
scas
in
scas
sbb
testl
ret
sbb
cltd
decb
xor
mul
sbb
inc
and
push
push
or
lcall
imul
ss
push
call
sub
sarl
out
jle
repz
in
push
and
inc
pop
rcll
sub
test
outsb
push
cs
or
daa
or
xor
mov
push
mov
inc
mov
test
cmpsb
fldt
pop
pop
mov
call
mov
enter
cli
insl
shl
out
jge
in
inc
and
pop
scas
push
insl
sub
es
in
push
or
add
inc
xchg
dec
aaa
cmp
xor
test
scas
inc
adc
push
test
inc
stos
dec
nop
iret
jae,pt
inc
fdiv
jge
addr16
loope
enter
ret
or
cmp
popf
repz
fstl
inc
jns
loopne
aaa
xchg
add
enter
sbb
sbb
jno
mov
nop
xor
lahf
test
loopne
daa
clc
xchg
push
jno
mov
push
sub
push
adc
mov
stos
xchg
fldcw
bsr
dec
pop
push
outsl
in
lea
mov
es
gs
jno
scas
insl
xchg
or
jnp
lods
add
stos
jns
mov
loope
push
sbb
cmp
mov
and
push
loop
rcrb
in
sub
ja
repz
xor
loop
aam
cmpl
into
cmc
mov
pop
int3
rolb
fcompl
shll
divl
or
lret
mov
pusha
fistl
stos
cli
inc
jns
das
cmp
push
scas
sub
ljmp
xor
push
pushf
jge
clc
push
rcll
push
add
shll
cmpsl
test
daa
repz
stos
jno
sbb
ss
in
cmp
movsb
incb
scas
push
xchg
dec
fidivs
xchg
mov
ja
frstor
jb
mov
mov
aas
jb
pop
sbb
jae
dec
and
into
cmp
pop
xorl
jo
rcrb
cltd
loope
cli
fsubrs
fs
lds
jp
sub
fs
jo
sbb
mov
cmpsl
xchg
cs
out
adc
f2xm1
mov
fwait
sub
lret
cmp
aas
cmp
lret
es
xchg
aaa
fldl
mov
add
cmpb
mov
fstl
ja
iret
mov
or
cmp
cmpsb
popf
fdivrl
aas
mov
jecxz
push
fildl
cmp
and
aas
jno
es
mov
cmp
jl
sahf
push
seta
aas
jge
frstor
mov
xchg
sbb
xchg
or
adc
dec
fstpt
cmpsb
jp
ljmp
xchg
in
inc
fcompl
xchg
fcoml
rolb
mov
pop
push
hlt
lahf
andl
lahf
xor
nop
std
pop
into
mov
pop
inc
loopne
fst
nop
pop
or
or
mov
pop
lahf
in
fistpl
mov
lods
mov
pop
subb
mov
jae
pop
xor
das
or
das
or
iret
and
lret
pop
cltd
insb
mov
push
sbb
add
fs
lahf
push
push
pop
js
xchg
mov
je
xor
cld
jmp
cmp
add
add
jb
jnp
loopne
nop
hlt
jne
xor
out
pop
iret
add
mov
jmp
add
outsl
and
cwtl
cmp
jmp
repnz
imul
pop
dec
xor
inc
add
mov
inc
jbe
aam
sbb
in
cmp
in
pushl
addr16
lea
psrad
push
xor
int
aad
js
inc
mov
mov
jl
mov
adc
in
int
fdiv
cwtl
addr16
dec
pusha
mov
pop
pop
fbstp
push
adc
xor
cmp
or
lods
dec
mov
and
or
xchg
mov
inc
loopne
jo
rclb
test
in
addr16
jnp
jb
test
push
xchg
or
mov
pop
addr16
es
push
repz
xor
iret
ss
jge
cmp
sbb
pop
lcall
leave
stos
pop
add
fsubs
sub
pop
push
xchg
cli
mov
adcb
xchg
in
mov
pop
jae
es
push
mov
inc
popf
dec
add
jb
sub
js
lcall
dec
push
cmpsl
mov
pop
in
and
jae
push
dec
scas
sbbl
mov
mov
out
lcall
ret
mov
repz
jno
push
jb
movsb
xor
test
stc
push
fcoml
je
out
out
popa
bound
mov
xchg
pop
mov
and
loopne
cmpsl
mov
mov
pusha
test
jbe
dec
insb
clc
jl
mov
mov
out
je
jl
mov
and
pop
fsubl
pusha
or
ja
pop
and
mov
jmp
vmread
jo
shlb
sub
mov
jecxz
add
mov
or
jle
outsb
push
or
push
xchg
mov
lods
and
aad
dec
mov
out
ja
xchg
shll
mov
stos
idiv
in
test
insl
cld
test
cld
ja
aaa
notl
mov
pop
outsl
test
mov
add
sub
push
xor
dec
add
cmp
sub
pushf
inc
cld
test
dec
int
add
cld
cmp
lds
dec
or
adc
lret
outsb
das
loope
mov
push
inc
inc
movsl
mov
and
mov
xchg
addr16
xlat
ss
mov
add
pop
sbb
and
popa
test
mov
movsl
cmp
xor
mov
push
cmpsl
xorb
or
filds
xor
jmp
jecxz
loopne
cltd
imul
inc
imul
sub
mov
aas
inc
xor
nop
outsl
popa
push
incl
jno
mov
mov
inc
into
pusha
xor
dec
jecxz
test
js
or
aam
push
xchg
je
lods
mov
int3
loope
push
movsl
dec
fistpl
scas
jle
into
in
popa
xor
xchg
jb
mov
pop
push
add
ret
push
mov
aaa
xchg
mov
xchg
cld
daa
inc
mov
imul
leave
pop
sub
sub
iret
mov
mov
and
jg
adc
dec
pushf
out
imul
inc
std
jmp
outsl
jle
pop
xchg
inc
pop
nop
mov
cmp
fadds
into
mov
lods
cs
jb
pop
cmp
fisubrl
into
cwtl
sbb
or
inc
outsb
or
arpl
in
retw
test
push
lret
add
repz
shlb
call
enter
out
cmpsb
iret
or
aam
xchg
out
in
and
mov
out
push
shlb
jnp
imul
mov
in
cmp
ficomps
inc
mov
inc
xor
insl
cmpsb
aas
fldt
pop
imul
subl
pop
pop
test
out
lret
mov
pusha
lcall
sbbl
adc
push
pop
mov
inc
pusha
cmpsl
daa
cli
stc
adc
out
mov
rdpmc
loopne
aam
xor
push
enter
insb
in
jle
and
imul
sbb
jns
jno
mov
sub
fdivr
rcrb
mov
add
out
dec
dec
shl
popa
fmuls
mov
cmp
imull
sbb
xchg
in
mov
out
insl
jb
push
push
push
push
push
mov
scas
imul
div
sbb
pop
push
addb
dec
sub
xchg
dec
and
jecxz
arpl
and
sbb
or
das
push
loope
sbb
xchg
sub
cmpsl
nop
mov
aad
lea
cmp
mov
mov
push
fisubrs
mov
xchg
fsubrs
add
mov
inc
test
loopne
shlb
in
out
jmp
and
push
mov
iret
push
inc
ret
add
sbb
pop
or
bswap
and
add
std
mov
imul
clc
icebp
pop
test
xor
adc
xor
mov
icebp
jne
and
lods
fdivs
push
in
flds
addr16
aaa
adc
ss
dec
or
aas
sbb
pop
stc
maskmovq
divl
push
mov
test
dec
cs
mov
je
jae
cmpb
and
fmul
mov
out
cmc
inc
fldenv
insb
pop
and
enter
in
push
xchg
ret
lcall
rcll
in
adc
aaa
and
mov
and
and
hlt
push
lds
xor
push
inc
paddq
ja
add
lods
negb
dec
cmpsl
cpuid
xchg
xor
cltd
adcl
mov
cmp
adc
scas
adc
add
mov
insl
stos
cmpsb
inc
gs
cs
cmc
movsb
jno
mov
dec
push
ljmp
test
xchg
jecxz
lcall
addr16
movsb
aad
fdivrp
lea
insl
xor
fldenv
jmp
xchg
leave
int3
aas
andb
pop
insl
inc
push
loop
repnz
push
mov
fcom
and
jbe
mov
mov
shrl
arpl
push
icebp
cmp
push
add
mov
inc
jp
shlb
push
mov
push
sbb
mov
dec
inc
cli
or
add
sub
xchg
xchg
in
cmpsl
jmp
and
repnz
loopne
pop
pop
outsl
in
xor
adcb
adc
jne
mov
dec
inc
dec
data16
or
sbb
xchg
in
xor
push
jmp
inc
cs
rcrb
ljmp
lock
mov
sbb
leave
fwait
mov
int
cwtl
inc
push
adc
fwait
push
jecxz
add
inc
xor
or
push
sbbb
mov
pop
jle
lods
dec
xor
add
cwtl
js
mov
xchg
or
pusha
dec
mov
xchg
inc
loop
incl
icebp
or
out
call
fsubrs
mov
adc
dec
fwait
scas
loop
orb
jo
jns
scas
daa
cwtl
dec
inc
lock
imul
xchg
push
cwtl
mov
cwtl
mov
xor
sti
test
jns
pop
adc
adc
mov
dec
inc
stos
sbb
scas
shll
cmp
mov
dec
je
mov
fstps
ret
sub
mov
cmp
mov
imul
scas
or
xchg
enter
std
xchg
or
xor
adc
xchg
mov
push
dec
push
daa
pop
in
jmp
imull
jp,pt
cwtl
mov
mov
cmpsl
or
mov
cmpsb
inc
ficompl
sar
or
adc
lds
lret
pusha
setbe
insl
popa
xchg
xor
jo
in
dec
push
and
scas
jmp
inc
aam
test
push
mov
shrb
mov
or
imul
inc
pop
popf
dec
gs
cmp
mov
cmc
xor
rclb
cmpl
subl
call
add
and
or
mov
add
pop
out
fstl
rol
adc
pop
add
idivb
ljmp
pusha
dec
adc
arpl
cltd
jne
popa
outsb
jmp
pop
mov
in
jge
mov
fdivs
popa
les
jno
ret
push
outsb
sbb
sbb
cmp
adc
xchg
ss
jns
enter
clc
in
pop
pop
sub
inc
fwait
mov
pop
mov
and
cmc
movsb
mov
fistpl
loope
sbb
insl
pop
jge
ds
stos
jb
pusha
jae
jae
mov
pop
sti
inc
jge
xchg
push
mov
call
adc
xor
aam
or
xor
ja
or
pushf
call
fimuls
xchg
or
push
add
sbb
push
mov
sbb
ljmp
and
stos
mov
mov
cltd
out
mov
out
test
mov
dec
sub
fdivrs
rcr
sbb
loopne
ds
andl
js
daa
loop
and
data16
repnz
adcl
xchg
inc
cmpsb
enter
adc
movl
sbb
adc
jne
dec
jbe
push
das
sub
inc
test
cld
add
stc
adc
imul
jle
mov
out
dec
pop
icebp
dec
cmpsb
adc
push
ret
shrb
out
jmp
xor
or
loope
insl
lret
fucom
mov
aam
inc
jg
lret
mov
dec
in
aad
jle
fs
push
xchg
ljmp
push
loop
int
inc
jmp
pop
mov
cmp
and
inc
cwtl
sub
add
adc
mov
ja
repnz
jp
cmpsl
ret
add
insl
xorb
test
loope
imul
mov
leave
mov
mov
movsl
sbb
dec
dec
xchg
dec
mov
ret
xchg
inc
push
ds
add
mov
add
cmp
sbb
mov
sub
inc
dec
sar
std
cli
cltd
cmp
mov
insl
vpmovmskb
popf
jg
mov
imul
ljmp
pusha
outsl
jge
sbb
ffree
or
mov
cmpsl
push
mov
mov
sbb
mov
pop
sub
sub
dec
push
push
xchg
push
pop
adc
inc
adc
adc
add
xchg
mov
and
mov
shrb
inc
pop
xchg
sar
ret
fbstp
cmp
les
std
jnp
dec
ljmpw
jae
loop
fscale
mov
aaa
jp
or
sbb
adc
pushf
nop
push
test
sbb
loopne
dec
divb
jae
pusha
fcom
jp
inc
imul
imul
repnz
xchg
mov
loop
call
insl
outsl
push
sbb
out
add
sbb
push
pop
cs
jnp
bnd
pushf
push
add
iret
xor
lcall
repz
sbb
and
push
xchg
cs
dec
dec
movl
xor
pop
in
cmp
adc
add
xchg
loope
pop
mov
iret
inc
jl
cmp
xlat
mov
stos
or
xchg
cmpsb
fistpl
aad
inc
sub
loop
fimull
fisubl
push
pop
addl
add
in
lock
lods
jp
jl
push
sub
leave
sub
lea
aam
jmp
shll
fyl2x
movsb
push
ds
cmp
jb
in
aam
test
push
add
and
push
ss
push
lods
fs
mov
bound
mov
sub
mov
mov
add
mov
dec
pop
fistpll
insb
hlt
inc
mov
ljmp
rclb
add
insb
add
mov
addr16
dec
call
sar
dec
addr16
mov
pop
pusha
mov
stos
push
dec
iret
inc
jecxz
push
test
mov
sub
std
cmp
or
xor
cmpsl
outsl
mov
es
pop
jo
fimuls
mov
int3
bound
cwtl
in
rol
es
fstpl
leave
lock
stos
sbb
jnp
pop
inc
push
mov
and
lds
or
notb
mov
sbb
xor
jg
sbb
aas
xlat
pop
xchg
popa
cmp
jo
xchg
dec
shlb
in
jmp
pop
mov
int3
fmull
ror
add
sub
add
mov
mov
filds
nop
fldl
mov
dec
fldcw
es
shr
rol
out
int3
enter
cmp
std
inc
cmp
leave
cltd
xor
clc
scas
dec
addb
lods
adc
or
xor
sahf
pop
fwait
ja
dec
cmp
int
mov
mov
cmpsb
dec
nop
mov
mov
cmc
fwait
dec
fstl
push
pop
std
xor
pop
or
pop
ljmp
out
jecxz
mov
popa
mov
jg
mov
in
cs
mov
adc
hlt
xchg
cltd
movsb
add
xchg
sub
cmp
mov
add
test
lea
cs
stos
inc
pop
jo
mov
pop
bound
shr
xchg
lock
jg
leave
aad
pop
repnz
sar
xchg
xchg
push
cwtl
mov
xchg
xor
lret
scas
pop
pop
dec
push
les
pop
shll
mov
stc
les
xor
xor
shll
out
mov
jle
popf
aam
mov
mov
add
add
push
gs
or
aam
mov
ficoms
push
jle
cmp
sub
pop
stc
out
pop
cmp
sub
mov
and
mov
scas
stc
add
push
lds
pop
xor
jns
pop
in
loop
xor
lods
inc
outsl
loop
mov
int
mov
mov
iret
fnsave
xchg
test
pushf
addr16
fwait
cmc
cs
je
inc
pop
cmc
aad
roll
incb
jmp
outsl
imul
inc
mov
add
data16
aad
cmp
mov
pop
pop
cmp
mov
cmp
mov
in
mov
mov
aaa
add
aaa
shll
sbb
or
out
mov
data16
scas
in
ss
cmp
out
mov
popf
repz
push
pop
es
je
cmp
cmpl
cmp
call
stos
int
pop
push
ret
lcall
xchg
xchg
mov
arpl
push
jge
insb
sbb
rorl
imul
pop
lods
scas
and
mov
inc
mov
or
divl
push
enter
dec
mov
pmulhuw
mov
sub
push
xchg
pop
repz
out
jno
xchg
xchg
sbb
ja
push
cmpsl
xchg
into
xchg
jmp
jmp
xor
mov
cmc
cmp
push
push
les
jne
or
add
pop
leave
inc
cmp
mov
imul
into
xchg
and
or
lock
and
mov
sub
stc
and
out
jo
insb
nop
cmp
sbb
addr16
or
aas
mov
xor
dec
inc
mov
dec
fiaddl
cltd
cli
push
xor
sub
shrb
sub
xor
loop
dec
subb
jbe
sub
sub
test
mov
js
insb
mov
add
lcall
dec
pop
add
js
xor
xlat
nop
mov
dec
inc
add
fimull
jmp
test
sbb
sub
pop
int
iret
lods
cltd
scas
cmp
cwtl
push
les
insb
and
cmp
or
add
pop
stos
adc
push
mov
inc
orb
test
push
and
jae
cmp
cmp
push
lods
inc
or
pop
loope
mov
pop
mov
sbb
shrb
mov
clc
out
pop
es
in
popf
mov
dec
sub
dec
mov
jo
inc
mov
sbb
rcll
out
mov
lods
dec
lock
jl
jmp
jne
xor
xor
or
enter
mov
pop
and
test
cltd
aam
push
dec
mov
shr
aad
push
or
sbbl
inc
int3
mov
mov
xchg
das
leave
scas
push
shl
mov
push
xor
out
es
in
inc
jnp
dec
sbb
mov
xchg
shl
push
and
mov
ja
jnp
push
add
test
mov
inc
mov
inc
push
adc
and
cs
orb
cwtl
jle
lahf
mov
and
cmp
sti
inc
and
jmp
test
enter
sbbb
mov
inc
jmp
pop
pusha
push
sbb
dec
negl
sbb
mov
dec
daa
ret
andl
movsl
mov
test
adc
or
fwait
xor
adc
xor
jmp
sub
jne
cmpsl
or
xor
xchg
aam
mov
xor
mov
pop
sbb
rcrl
popa
pusha
or
push
out
fdecstp
fwait
jne
mov
test
insl
inc
inc
xchg
ljmp
push
ljmp
mov
sub
jg
inc
xor
push
xor
lods
aas
cmp
in
ret
mov
mov
pop
mov
gs
adc
insl
mov
pop
ljmp
adc
lods
mov
es
jmp
stos
xchg
and
sub
pop
or
push
add
add
fcoml
dec
cmp
cli
inc
mov
repz
imul
insl
cmp
mull
stos
repnz
das
and
sub
pop
loope
std
aas
imul
movsb
mov
test
les
push
cmpsb
cmpsl
outsb
loop
imul
lock
mov
inc
shll
mov
add
or
sub
mov
lcall
mov
dec
movsb
scas
cmp
and
sub
and
sub
jge
test
lods
dec
js
icebp
ljmp
loop
cli
push
push
xchg
mov
or
rcrl
lret
aas
and
fsubrl
inc
sub
xor
push
jmp
sahf
icebp
test
cmc
xchg
test
cmp
sub
cmpl
fcomip
shr
loope
iret
js
in
fiaddl
pop
mov
mov
pop
lahf
push
mov
dec
int3
push
xchg
xor
mov
stos
mov
fcoml
shl
test
dec
cltd
push
lock
dec
cmp
sbb
and
pop
ror
jl
loopne
dec
and
sbb
push
sahf
push
ret
inc
xchg
loope
ret
jmp
jmp
add
sbbl
or
jmp
out
push
loopne
pop
shl
xchg
das
jns
ljmp
shlb
sub
std
movsl
adc
cld
push
mov
sbb
adc
cmpsb
cmpsl
imul
sarl
lock
fs
xor
enter
lcall
and
pop
into
mov
rorl
in
or
or
leave
sti
arpl
mov
loopne
inc
pop
arpl
jp
jne
jno
clc
push
insb
sub
jae
cwtl
add
sbbb
in
push
adc
or
ja
pop
or
mull
mov
fiadds
push
inc
jge
mov
enter
mov
cld
lahf
mov
aad
sbb
jne
push
scas
nop
jge
and
push
jb
adcb
add
enter
cmp
out
jb
mov
ja
arpl
jecxz
sub
pusha
out
pop
sbb
xor
xlat
call
cmp
xor
sahf
push
adc
stos
pop
test
sbb
aam
subl
pushf
and
cli
fdivs
inc
add
xchg
cmc
mov
xor
jmp
jg
xor
adc
mov
rol
mov
jns
mov
orl
or
push
shl
mov
aam
out
aaa
jne
insb
cmpsb
sarb
sub
lahf
repnz
sub
xor
mulb
xor
or
in
in
in
dec
mov
ljmp
int
jecxz
pop
ffreep
ret
sbb
enter
outsl
mov
js
in
jne
nop
sbb
cld
mov
jb
sbb
insb
sub
adc
or
int3
int3
mov
fdivl
sbb
jl
mov
add
fnstcw
pop
arpl
push
push
mov
xchg
loop
fwait
xchg
xchg
bound
xchg
or
pusha
jp
mov
js
test
enter
mov
stos
imul
jae
and
movsl
push
push
cmpsl
add
sub
lret
sbb
adc
dec
mov
jge
imul
mov
jmp
xchg
and
add
push
mov
inc
outsl
fcomp
xchg
jg
pusha
sahf
dec
add
cs
shr
jne
mov
dec
insl
ficompl
jb
decb
lret
rolb
test
push
repnz
pop
mov
ljmp
outsb
adc
jnp
pop
repz
leave
pushf
pop
pop
inc
dec
lahf
xchg
jmp
ffree
subb
divb
jmp
mov
xor
add
lahf
repz
mov
pop
int
fwait
std
outsb
mov
std
call
push
clc
adc
mov
mov
push
push
int3
jo
fnsave
push
test
lret
pop
stc
ds
adc
loope
cmp
pop
add
mov
icebp
dec
cs
std
inc
stos
leave
loopne
sbb
roll
jnp
mov
lret
add
adcl
jae
xor
push
mov
sbbb
add
mov
sbb
push
jae
ja
movl
adc
out
js
jg
movsb
mov
notl
xor
jno
jg
cmp
add
mov
inc
test
adc
fsubrs
aaa
leave
dec
pop
int3
cmp
mov
cmp
popf
lods
push
dec
fidivrl
filds
fildl
mov
andb
mov
test
addl
jne
inc
mov
push
test
xor
jge
pop
mov
inc
pop
inc
testl
mov
aaa
xor
cmp
imul
add
enter
mov
xchg
mov
push
mov
mov
mov
enter
ja
jge
lret
xor
insl
add
aaa
ljmp
cvtpi2ps
aaa
push
and
mov
in
mov
movsb
add
dec
fstl
cmp
rolb
push
sbbb
loopne
adc
add
inc
push
adc
movsb
je
ds
mov
in
jge
stos
lret
mov
or
aas
shrl
pop
popf
cs
fcompl
inc
idiv
pop
mov
int
pop
adc
loop
jb
xor
jecxz
and
pop
cmp
sbb
jecxz
hlt
test
push
pop
cld
aas
jbe
cmp
add
popa
inc
jle
outsl
mov
ret
add
aas
xor
rolb
add
call
mov
icebp
ret
loop
xor
jae
imul
mov
xor
mov
inc
pop
jmp
das
loop
lea
jno
xchg
mov
test
push
bound
mov
push
fsts
jb
cmp
in
sbb
mov
ljmp
lcall
inc
stc
call
inc
sbb
pop
loop
and
cmpsl
stos
shr
movsb
push
pop
xchg
jmp
shl
cmp
data16
pop
push
and
jp
fwait
or
xchg
pop
inc
inc
fadds
xchg
adc
popf
mov
std
jge
cmp
std
adc
ja
or
adc
cmpsl
mov
add
and
add
add
xchg
inc
shl
adc
jae
push
xchg
sbb
inc
cmp
fs
es
fimuls
and
jo
sahf
add
rolb
cmpsb
lahf
gs
fwait
xchg
cmp
int
call
movsb
fucom
adcb
or
jnp
je
lods
sub
iret
in
lret
add
and
xchg
adc
ljmp
xchg
pop
into
sub
inc
es
mov
mov
dec
popa
hlt
gs
shlb
xchg
mov
pop
mov
aam
mov
mov
arpl
push
fidivs
push
aam
and
sbb
insl
jecxz
les
pop
daa
mov
xchg
lcall
push
pushf
pushf
mov
test
mov
jmp
jecxz
sub
je
sti
and
rolb
int3
mov
popf
mov
aaa
mov
xchg
push
jecxz
mov
enter
ljmp
pop
dec
das
dec
mov
push
xchg
ret
cld
add
sub
ss
sbb
pop
jmp
xor
stos
ljmp
mov
jg
es
popf
fldl
sub
jb
pop
xor
mov
mov
das
ja
addb
mov
xor
mov
and
xchg
je
mov
sarl
sub
aad
cwtl
fsubp
jbe
adc
loope
int
je
cmpsl
subl
out
imul
or
je
test
nop
gs
adc
out
jns,pn
out
test
pusha
cmp
inc
push
adc
out
repz
aaa
inc
pop
out
xorb
xor
mov
xor
sub
jae
mov
enter
lods
daa
jo
ret
and
outsl
push
xlat
dec
ss
cmp
fcmovbe
xor
test
jl
ds
incl
inc
movsl
inc
into
jmp
or
repz
fsts
sbb
inc
xor
mov
sub
xor
or
fisubl
ljmp
push
jns
or
mov
mov
stos
xchg
inc
je
push
cmp
mov
loopne
add
mov
push
jns
das
add
lea
xlat
shlb
test
push
mov
sbb
out
enter
out
and
jbe
insl
sbb
sahf
mov
out
sbb
sahf
rcrb
jg
fmuls
jnp
imul
arpl
rcrl
mov
call
jno
clc
pop
sti
mov
dec
jb
mov
inc
mov
arpl
or
xchg
pusha
repz
jno
lock
or
pop
or
pusha
xchg
lods
test
jp
bound
rorl
mov
in
dec
sbb
pop
andl
outsl
cmpsl
jge
lret
repz
and
fwait
mov
mov
xor
sbb
xchg
lock
jge
int
mov
mov
aas
xor
aaa
lods
lret
shrl
adc
sbb
push
sahf
das
cs
fwait
or
std
popf
dec
dec
xor
fldcw
cmp
mov
jle
sahf
mov
popf
arpl
lods
fnsave
int
mov
add
mov
xor
cmp
repnz
incl
xchg
subb
adcl
inc
in
in
rcrb
or
or
stc
rcll
push
add
add
int
dec
addr16
and
mov
add
sbb
mov
hlt
in
adc
sub
sbb
lock
cwtl
fsubs
and
mov
test
or
in
mov
jg
fs
mov
data16
jb
or
loop
outsb
inc
push
dec
dec
sbb
pop
test
push
dec
push
sbb
daa
xchg
sbb
pop
adc
shrb
jmp
scas
shlb
ds
pop
roll
sbb
add
add
fcoml
mov
and
loop
push
or
mov
adc
jle
aaa
je
jae
push
test
sub
push
lods
pop
or
mov
push
pop
clc
jae
or
push
leave
or
xchg
sub
ret
shrl
movsl
xor
sbb
enter
icebp
lods
push
shl
in
jp
pop
out
or
push
aaa
sub
addr16
cmp
insl
mov
and
dec
sbb
pop
dec
test
cmp
mov
pop
or
pop
and
cwtl
mov
xor
xor
mov
mov
bound
imul
sub
xlat
fs
mov
xchg
jp
inc
clc
mov
inc
test
pop
mov
mov
out
idiv
jmp
mov
adc
dec
leave
sbbb
mov
or
pop
jle
stos
test
jmp
jmp
sbb
pop
out
dec
lea
pop
mov
test
mov
sbb
mov
imul
xchg
fimull
je
fildl
scas
andl
mov
pop
lods
push
or
pop
and
shrl
push
rorl
cltd
in
and
popa
add
mov
fcoms
mov
lahf
push
cmpsl
test
stc
imul
xchg
fbld
nop
loopne
das
jle
shlb
mov
jb
aam
cli
dec
and
jl
js
xchg
xchg
test
inc
xlat
pop
jbe
mov
shlb
sbb
jg
divl
push
sbb
dec
rcrl
push
rcrb
shrb
cwtd
lret
adc
cmp
add
dec
mov
mov
jo
jb
out
xchg
les
ret
loopne
adc
jl
ficomps
cmpsl
iret
push
sub
mov
popf
xchg
add
ds
pop
mov
and
aad
std
ljmp
adc
cmpsl
dec
and
out
mov
cmp
sbb
mov
das
leave
push
mov
or
shrb
inc
daa
cmpl
fildl
movsb
xor
insb
sub
les
std
add
cli
jl
clc
data16
pop
xchg
data16
mov
inc
add
fcmovne
xchg
arpl
addr16
mov
adc
cmp
ret
iret
rcrb
imul
jne
xor
mov
dec
adc
xchg
into
scas
pop
sarl
sti
mov
adc
aas
outsl
fdivrl
xchg
add
das
in
rorl
xor
sub
cmpsb
cwtl
enter
pop
out
add
sub
daa
fistpl
or
cmp
mov
fidivs
aam
rclb
and
pop
loop
insb
pushf
push
lods
add
xchg
dec
or
inc
jl
cmp
xchg
xchg
gs
loopne
add
stc
lea
mov
ret
fistpll
push
mov
push
bound
push
arpl
cmpsl
push
cmp
sub
ljmp
sbb
addr16
mov
loopne
pop
pusha
adc
pop
push
in
sub
inc
add
lret
push
pop
mov
adc
sbb
aaa
or
pop
enter
xor
mov
push
cmpsl
jmp
or
mov
dec
outsl
xchg
sbb
sub
orl
and
dec
test
in
out
mov
out
enter
dec
gs
inc
cmp
stos
xchg
xor
rolb
dec
xchg
or
pop
pop
or
mov
mov
xor
push
imul
or
test
mov
xor
shlb
cli
sub
xor
dec
insl
int3
mov
pushf
add
loope
jae
lock
test
mov
jae
xchg
inc
adc
pop
adc
jmp
je
outsb
pop
lods
add
lcall
aas
xlat
dec
sub
sbb
or
je
xchg
fs
pcmpeqd
shl
sub
fisubrs
cli
movsb
push
push
mov
fstp
mov
add
sbb
in
inc
repz
out
sbb
xchg
lods
pushf
pop
insl
in
inc
test
cmp
jl
push
clc
inc
subb
jno
ss
sbb
movl
loope
and
inc
sbbb
adc
cmp
push
mov
ja
sbb
sarl
stos
adc
adc
gs
std
xchg
cltd
fs
icebp
sbb
out
pop
js
aam
call
xrelease
pushf
cmp
mov
sub
fs
insb
push
adc
outsb
enter
pop
in
mov
jbe
repz
jl
inc
fs
xor
dec
pop
rcr
dec
pop
inc
lods
add
xor
sbb
push
jae
movsl
mov
dec
mov
divb
shrl
sbb
scas
ss
repz
inc
insl
xchg
repnz
in
xlat
ja
add
cmp
or
lret
test
push
loop,pn
cmp
push
cmp
jl
sbb
stos
adc
stos
xchg
xor
je
pop
cli
xlat
outsl
mov
and
lahf
pop
stos
iret
xchg
adcl
push
scas
pop
xchg
andb
imull
stos
sahf
sub
push
xor
jecxz
sbb
adc
pop
jmp
jg
cmpsl
jg
std
dec
scas
into
sbb
push
mov
mov
cld
test
in
daa
lods
sahf
mov
pushl
insb
adc
nop
dec
and
xchg
out
inc
in
and
loopne
push
scas
mov
sti
mov
jnp
cli
mov
icebp
push
pop
jno
add
ss
lret
or
add
pop
lea
jp
cli
and
pop
mov
cmc
pushf
mov
arpl
inc
std
xchg
add
pop
filds
testl
add
cmpl
aam
in
mov
js
data16
pushf
cmp
adc
or
insl
pop
lds
xchg
and
xor
enter
xchg
das
ja
mov
jp,pt
stos
int3
mull
xchg
xor
push
dec
adc
loope
adc
or
cmp
in
xor
aad
xchg
dec
jge
push
mov
mov
adc
add
imul
xlat
mov
push
imul
rcrl
fmul
sti
cs
dec
xor
rorl
sti
fchs
sahf
sub
sbb
nop
xor
add
mov
mov
push
repz
mov
adc
add
and
loope
in
scas
xor
xor
outsl
push
outsl
mov
mov
bnd
in
lret
in
fucom
sahf
push
cmp
jl
mov
outsl
fwait
insl
pop
adc
jl
or
shll
cltd
pushf
mov
sahf
or
push
mov
mov
ds
sbb
aad
sub
add
push
or
pop
mov
icebp
fdiv
xor
int
dec
or
add
cmpb
jne
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
