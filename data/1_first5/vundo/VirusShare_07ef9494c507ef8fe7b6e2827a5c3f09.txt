push
push
inc
andl
rcll
rclb
int
lds
xchg
push
xor
push
jmp
pushf
lahf
out
inc
jno
push
xor
les
ret
xchg
aam
jbe
push
inc
mov
adc
mov
cltd
pop
stos
add
mov
scas
xor
jle
test
xchg
pop
int3
push
xchg
adc
aam
scas
adc
popa
xorl
fs
add
nop
cmp
jl
pop
cltd
sbb
inc
dec
cld
jg
add
fisubrl
loop
sbb
adc
push
mov
adc
aaa
sahf
jns
mov
add
inc
mov
sbb
xchg
leave
enter
and
mov
ret
cmp
adc
mov
mov
xor
push
push
repz
cmp
lcall
int
iret
xchg
into
push
xchg
lock
sarl
cmpsb
jbe
mov
aad
inc
insb
or
in
das
ss
xor
add
jecxz
mov
adc
inc
adc
out
fistpll
jne
cmp
add
fdivrl
mov
xor
loopne
div
out
sbb
adc
push
stc
cmp
out
mov
sbb
stos
adc
dec
shll
loope
xchg
jne
cmp
adc
hlt
call
ret
sub
imul
cmpsl
sbb
call
dec
mov
and
incb
das
es
dec
xchg
stc
adc
and
sar
call
cmp
shl
jae
lods
je
pop
clc
sti
imul
jne
inc
out
mov
jne
std
cli
sbb
repz
pop
and
nop
cmp
jbe
jbe
xor
pop
cwtl
jmp
dec
cld
jge
jne
push
hlt
push
xchg
loopne
daa
dec
lahf
xchg
or
aas
adc
mov
dec
iret
push
mov
sbb
xchg
outsb
xchg
aad
xchg
ljmp
xchg
movsb
pop
das
lret
int3
push
loop
insb
outsl
div
rol
adc
cmp
mov
bound
pop
cmp
loopne
push
xchg
into
cmp
call
mov
sti
je
fldt
sub
jnp
in
fcompl
loope
xor
in
adc
cli
hlt
jns
push
es
mov
jo
pushl
adc
jb
aam
jle
sbb
int
std
jno
jmp
clc
stos
orb
daa
jbe
loopne
or
scas
adc
imul
fucomip
test
push
sbb
xor
test
push
clc
sub
movsl
aam
push
stc
cmp
loopne
xchg
pop
xchg
xchg
std
jmp
inc
mov
add
jne
push
scas
push
icebp
std
sti
mov
mov
push
inc
mov
cmp
in
out
pop
fsubrs
movsl
push
jmp
mov
aas
mov
call
mov
push
pop
not
mov
idiv
imul
dec
cmp
pop
int3
setbe
jno
xor
cmpsb
inc
test
jmp
clc
dec
cmpsb
je
icebp
adc
out
fistpll
popa
xorb
xlat
xor
or
aam
sbb
stc
cld
divb
nop
cmp
je
jl
xchg
cld
mov
bound
cmp
inc
lahf
aas
jg
inc
add
inc
dec
test
sti
std
cli
mov
sbb
je
mov
push
mov
push
dec
test
fdivrp
mov
imul
sbb
mov
and
out
and
cmp
gs
cmp
cli
out
fistpll
out
div
rol
xor
fwait
mov
mov
cmpsb
loop
popf
jmp
test
mov
cmpsb
add
lret
cmpsl
dec
imul
add
or
into
dec
lahf
aas
jg
dec
pop
xchg
hlt
imul
pop
test
jbe
mov
inc
test
adc
xor
jmp
loopne
jle
dec
sbb
jge
das
xor
push
jno
fisttpl
and
xchg
jge
aas
inc
andl
out
sahf
mov
adc
push
adc
sbb
lret
pop
std
daa
mov
pop
aam
or
insl
popf
popf
loop
push
push
push
and
scas
dec
dec
fidivl
cmpsl
js
das
in
cmp
pop
fsubrs
mov
xchg
dec
mov
daa
into
call
jecxz
sub
lar
js
and
shlb
sub
push
retw
cmpsl
inc
jbe
lock
cmp
jne
jp
mov
add
cld
jg
add
jo
ja
ror
or
mov
xchg
les
aas
mov
or
sbb
data16
mov
mov
mov
lea
icebp
rol
cmp
mov
scas
cmp
sub
inc
jmp
in
jns
mov
or
pop
les
cmp
adc
lret
mov
imulb
insl
push
scas
adc
mov
insb
das
aaa
xor
push
mov
pop
sbb
push
enter
fistps
push
out
mov
into
push
aad
mov
test
cmp
out
mov
int
out
leave
dec
scas
imul
add
gs
ds
pop
push
sub
test
shlb
xor
int3
in
pusha
imul
jo
fildl
push
cld
dec
push
negb
xor
xchg
add
push
fs
jbe
lret
add
mov
mov
xchg
cmp
fs
clc
xlat
repnz
rolb
mov
daa
mov
test
rcrb
cmpsl
or
clc
out
shll
je
or
sbb
movsl
enter
and
cs
enter
adc
cmp
roll
jle
push
dec
xor
in
repz
or
push
xchg
lock
jb
scas
xlat
xchg
pop
push
stos
mov
push
pusha
aam
adc
xor
xlat
loopne
jle
dec
sbb
jge
adc
cs
sbb
mov
andl
jl
cmp
adc
mov
pop
pop
std
daa
mov
pop
lret
bound
lahf
out
inc
jnp
xor
dec
scas
push
cmp
cmp
out
pop
fsubrs
add
jo
jmp
or
xor
dec
jg
push
xchg
jo
fiaddl
ret
jle
clc
dec
and
test
xchg
jg
ret
add
nop
cmp
jl
pop
cltd
sbb
inc
adc
dec
adc
cs
out
icebp
add
mov
adc
mov
notb
xor
sbb
aaa
lahf
jnp
xorb
mov
sbb
aam
movsb
pop
cs
sub
rol
jl
add
add
mov
outsb
sbb
popf
mov
add
in
mov
js
or
pop
cld
cli
hlt
call
inc
ljmp
ret
xor
xor
pop
mov
sub
mov
test
outsb
push
mov
inc
xchg
repz
loopne
enter
outsb
sub
adc
sbb
ljmp
pop
mov
pop
push
mov
inc
mov
imul
ret
shrl
push
das
aaa
xor
push
mov
movsb
je
imull
out
and
push
dec
lods
test
imul
mov
test
jg
jb
mov
jge
adc
dec
sbb
sbb
mov
andl
push
inc
mov
je
push
cmc
xor
shlb
daa
fdivrl
movsl
aam
push
stc
aam
stc
sti
imul
ss
cmp
loop
sahf
lcall
rorb
dec
lahf
aas
jg
scas
dec
dec
fnstenv
insb
sbb
cmp
hlt
call
xchg
fmuls
cltd
pop
stos
add
jo
in
fsub
xchg
hlt
mov
adc
push
or
cmpsb
mov
and
adc
pop
into
or
jnp
out
adc
push
repnz
subb
outsl
or
repnz
nop
xchg
sub
fs
out
movsl
je
test
or
js
insl
or
daa
dec
popf
sub
test
sti
repnz
xlat
rcrl
notb
jl
xchg
cld
sti
jg
mov
and
cmc
mov
push
popa
mov
inc
mov
jp
outsl
and
mov
aas
andl
movsl
sbb
xor
ds
dec
push
mov
cmpsl
dec
pop
std
push
int3
and
movsb
cmpsb
jo
iret
xor
iret
push
mov
sbb
lahf
and
add
scas
push
popa
inc
rep
xchg
movsl
add
mov
sub
div
rol
cmp
mov
bound
pop
cmp
loopne
lret
aaa
shl
mov
das
cmpsl
or
je
pop
add
insb
imul
xor
pop
test
jbe
mov
fcompl
loope
adc
xor
fdivp
push
fisubs
adc
jp
notb
sbb
ficomps
cwtl
imul
jl
movl
les
repnz
shll
mov
pop
jns
or
xchg
mov
or
lods
add
xor
in
fcmovne
inc
lahf
aas
jg
and
sub
sub
mov
enter
lods
cmpsl
jg
mov
sbb
dec
dec
test
adc
ds
pop
stos
jbe
sbb
pop
inc
inc
adc
pusha
adc
inc
and
incb
das
es
dec
mov
push
negl
jl
xor
xorb
sahf
cmp
pusha
inc
adc
jno
cmp
jne
jp
mov
outsb
xchg
repz
jmp
dec
stc
je
cs
out
icebp
add
mov
jnp
push
cli
std
sti
mov
mov
stc
and
inc
xchg
xor
shl
pop
mov
sbb
data16
cs
jae
call
ret
dec
frstor
xchg
add
sbb
rol
inc
fs
imul
fcomip
push
mov
mov
mov
xchg
outsl
add
addr16
imul
test
push
arpl
jb
scas
xlat
xchg
pop
push
stos
mov
jae
test
mov
add
cmp
mov
aad
inc
outsb
or
sahf
cmp
jno
fidivrl
ror
popa
sahf
cltd
cwtl
imul
jge
into
not
mov
add
mov
mov
dec
inc
jne
ja
stc
cmp
jecxz
cwtl
xchg
testb
repz
sub
movsl
pop
addr16
pop
or
push
mov
inc
mov
xchg
dec
mov
mov
adc
dec
xor
mov
add
mov
fiaddl
mov
jg
ds
jae
cmp
fstl
and
lods
adc
fstp
and
xchg
sub
fs
out
mov
mov
or
lods
daa
push
sbb
jmp
dec
std
jge
or
loopne
mov
test
sub
adc
inc
push
int3
arpl
stc
mov
enter
loope
rep
xchg
movsb
pop
das
lret
int
in
jb
lea
cmp
mov
fsubrs
orb
inc
loopne
lret
movsl
dec
call
dec
pusha
aaa
mov
daa
inc
sbb
add
lods
test
push
cmp
sub
js
or
push
xchg
xchg
dec
lahf
aas
cs
arpl
push
mov
jg
ja
mov
cmc
fmull
sub
lcall
loopne
aaa
loop
push
inc
xchg
aad
enter
loope
jns
push
es
mov
mov
cli
and
cli
push
or
dec
jl
movb
lock
icebp
push
jg
adc
mov
icebp
sub
push
test
rcrb
add
movsl
nop
movsb
outsl
sbb
mov
push
dec
stos
inc
je
ds
pop
stos
add
cmp
into
mov
push
pop
or
jl
pop
or
in
clc
sub
mov
addl
movsb
cmpsb
stc
clc
dec
and
nop
xchg
sub
fs
out
mov
mov
or
lods
daa
push
sbb
jmp
dec
std
push
sub
push
mov
data16
mov
je
mov
push
and
inc
xchg
xor
and
pop
mov
scas
adc
xchg
jne
add
lds
rol
cmp
mov
scas
cmp
sub
push
iret
int
inc
xor
je
jmp
stos
adc
out
fistpll
aam
fistpll
add
fnsave
aam
loope
xor
xlat
loopne
jle
inc
xchg
sti
decl
or
mov
outsl
and
sub
sahf
cltd
cwtl
imul
iret
js
mov
add
mov
mov
dec
inc
jne
ja
stc
cmp
jecxz
and
dec
fcompl
out
inc
jae
adc
andb
test
int3
scas
divb
inc
mov
mov
mov
push
inc
mov
cmp
dec
setbe
jno
fimuls
mov
fstp
and
pushf
dec
ja
mov
dec
fwait
mov
in
scas
mov
cwtl
xchg
hlt
xchg
jle
cwtl
jmp
dec
stc
je
cs
out
icebp
add
mov
mov
fiadds
arpl
adc
pusha
call
jge
aaa
pop
jb
scas
leave
enter
sub
out
nop
inc
cmp
mov
mov
lcall
adc
adc
jmp
scas
push
push
push
xchg
lock
jb
scas
xlat
xchg
pop
outsl
out
test
and
inc
push
sbb
xor
add
incl
roll
leave
sbbb
mov
sub
sub
and
or
push
shr
xchg
sub
pusha
pop
out
lock
std
xor
ret
lahf
out
inc
jae
pop
and
dec
inc
int3
fwait
je
out
jbe
push
inc
mov
stos
add
add
ja
dec
outsb
xor
jle
test
xchg
pop
int3
push
xchg
adc
aam
pop
adc
cmp
daa
cmpsb
lret
lock
sti
inc
xchg
mov
mov
movsb
test
loopne
ret
jp
je
jle
cltd
jmp
sbb
int
outsb
arpl
cmp
cmp
test
rcrb
sbbb
int3
inc
inc
fcmovb
xchg
aaa
sahf
js
pop
jl
push
repz
movsb
lret
in
lret
sbb
adc
push
sti
jnp
call
iret
mov
rol
cmp
mov
mov
daa
xor
or
jne
adc
cli
cmp
mov
sbb
inc
sbb
jbe
or
sti
jns
push
nop
jne
lahf
aas
cmp
adc
xchg
popa
mov
cmpsl
dec
scas
push
icebp
pop
mov
mov
fs
xchg
sti
imul
stc
js
mov
jecxz
cmp
cli
mov
fisubrs
sbb
jge
movsl
add
adc
mov
pushl
xor
add
incl
roll
movsl
adc
movsb
push
testl
push
icebp
fistpl
push
inc
mov
push
std
in
adc
call
cmp
inc
adc
push
clc
cmp
jmp
mov
loop
popf
popf
jecxz
push
pop
je
pop
jno
xchg
push
testl
std
sti
idivl
xor
inc
mov
fwait
pop
mov
outsl
or
fs
mov
jnp
call
idiv
imul
es
daa
iret
jmp
stos
add
and
dec
mov
push
jle
stc
sti
imul
and
ja
xchg
sbb
pop
mov
and
xchg
aas
jg
and
nop
xchg
cmp
push
cmc
push
xlat
xor
daa
iret
stc
outsb
push
hlt
std
sti
cwtl
xchg
hlt
xchg
jle
cwtl
jmp
jbe
fucomip
cmp
and
shll
mov
test
xor
fistpll
decl
sub
repnz
cmpsl
pop
sti
stos
and
vmread
out
lods
pushf
pop
mov
adc
orb
sub
shlb
clc
lods
push
sarb
in
mov
roll
mov
aaa
xchg
repz
lret
aaa
shrb
cli
sti
cmpb
xor
clc
sarl
inc
push
ja
mov
add
loop
pop
pop
cmpsb
mov
xchg
or
or
or
testl
pop
stc
cli
hlt
call
push
sti
out
mov
pop
pop
sbb
fnsave
cld
inc
andl
in
cltd
xchg
sub
pusha
pop
out
lock
std
xor
ret
lahf
out
and
das
push
xor
sahf
gs
mov
das
scas
test
sub
xor
js
mov
test
fildl
jmp
fcoml
jbe
push
out
push
jg
jp
jl
movsl
and
movsb
scas
xchg
stos
mov
rclb
in
shlb
sbb
jae
xor
push
lcall
pop
int3
seta
jne
int
or
mov
and
lods
fstp
and
pop
jl
mov
rclb
push
retw
cmpsl
inc
mov
pop
cwtl
jecxz
inc
xchg
and
scas
mov
mov
adc
cmp
adc
test
cmp
pusha
rcll
mov
xchg
fdivs
imul
dec
xlat
push
mov
or
push
int3
cmpsl
jmp
insl
sbb
data16
test
leave
enter
sub
in
hlt
stos
orl
daa
mov
fsubrs
sbb
sub
out
inc
loopne
enter
popa
aaa
push
and
xchg
aas
jbe
lods
adc
xchg
icebp
popa
pop
les
jmp
icebp
das
pop
push
mov
pop
mov
imul
test
add
inc
sub
es
and
shrl
movsl
jl
add
cmp
pop
mov
xchg
adc
ret
adc
push
and
out
inc
pop
mov
ss
add
mov
sub
sahf
cltd
cwtl
imul
ret
sub
sub
push
inc
jns
jnp
dec
dec
test
adc
cmp
xchg
push
xor
push
jmp
cmp
loop
popf
popf
mov
roll
jne
pop
je
imull
das
divb
inc
mov
xchg
dec
test
cmc
int
mov
movsb
xchg
ret
aas
push
shlb
les
pushl
arpl
jno
pusha
std
test
mov
mov
pop
adc
out
fistpll
lods
jbe
clc
mov
int3
jmp
xchg
arpl
cld
or
iret
test
in
xchg
push
or
stos
add
icebp
or
outsw
and
xor
fistpl
inc
add
bound
sbb
adc
jg
popf
or
aam
mov
aaa
sahf
jns
mov
and
int3
and
ret
and
jp
icebp
jns
in
fists
shl
xchg
movsl
add
lods
adcb
sub
cli
gs
mov
les
inc
loopne
lret
aaa
shrl
dec
mov
push
xchg
lock
fsubl
stc
js
mov
jecxz
pop
push
sbb
push
mov
das
xor
pop
hlt
sub
int
ret
les
pushf
js
lock
fisttpll
push
shll
mov
pop
jns
or
insl
pushf
sahf
in
dec
fs
imul
mov
lods
insl
jb
inc
arpl
in
adc
push
ds
pop
adc
mov
lock
les
into
jmp
fdivl
xchg
adc
fiaddl
repnz
cs
adc
shl
jae
push
fs
jne
xchg
sbbb
std
lods
je
adc
hlt
call
inc
jl
dec
lds
stc
sti
imul
xor
sbb
inc
dec
cld
jg
adc
hlt
call
movsl
data16
mov
mov
dec
test
or
aam
mov
dec
pop
inc
cwtl
mov
mov
sbb
jbe
xorb
movsb
jle
lahf
dec
lods
addl
mov
adc
xor
xchg
repnz
xor
push
std
call
sar
add
fs
iret
mov
and
aas
xchg
stc
aad
adc
or
and
incb
jns
mov
sbb
inc
inc
mov
adc
arpl
aam
fdivrl
dec
loopne
daa
dec
lahf
pushf
fbld
shrl
outsb
pop
fsubs
sbb
mov
in
pop
scas
adc
cld
pop
adc
cld
inc
andl
les
repnz
dec
sti
rcrb
mov
aaa
push
stc
cmp
loop
inc
imul
inc
out
or
lock
xchg
cld
jae
adc
adc
add
inc
sub
jle
cmc
jo
shlb
loopne
inc
add
add
call
mov
jno
shll
daa
dec
lahf
insb
out
jbe
push
inc
mov
leave
roll
push
repz
push
cmp
leave
ljmp
adc
inc
and
stc
dec
cmp
pop
mov
push
add
or
sahf
mov
cs
dec
mov
repnz
std
cli
popa
inc
dec
cltd
push
bnd
push
mov
jle
popa
idivl
loopne
rolb
cli
movsl
je
jle
lcall
mov
xor
movntps
push
mov
sbb
xchg
outsb
xchg
aad
xchg
ljmp
xchg
movsb
pop
das
lret
adc
fdivrs
mov
rol
cmp
mov
jnp
add
arpl
inc
shl
lret
enter
sub
adc
dec
pop
xchg
cmc
push
movsl
dec
adc
adc
fbld
shr
push
dec
push
cmpsb
or
fwait
xor
sub
and
loope
leave
mov
push
int3
jle
into
xchg
jmp
mov
std
test
ret
pop
dec
inc
test
cltd
js
cmp
std
sti
mov
adc
cmp
push
call
or
daa
jg
adc
std
sti
testl
insb
sahf
lcall
test
dec
lahf
aas
jg
sub
fistpll
jb
lods
insl
jae
inc
insb
in
dec
mov
addr16
adc
or
cmp
roll
lret
daa
into
jmp
insb
mov
std
test
mov
cld
out
adc
out
jns
cmpsb
xchg
stos
cmpsl
cmc
fcoms
hlt
call
xchg
sub
push
jl
out
mov
call
sbb
ljmp
daa
dec
push
jp
lods
xchg
subl
push
lods
push
sarb
jle
cltd
jmp
sbb
dec
aam
cmc
test
sub
in
mov
mov
test
pop
add
mov
lret
aad
popf
and
pop
sub
jns
mov
or
es
rep
xchg
movsb
jne
stc
ljmp
push
fisttps
aas
jg
scas
or
movsb
mov
dec
inc
sub
add
stos
orl
xor
std
sti
not
sbb
fsubrs
orl
std
mov
lods
movsb
nop
push
dec
xor
in
repz
or
push
xchg
aam
adc
repnz
xchg
sti
sub
scas
jbe
jg
jmp
mov
loope
xor
std
dec
hlt
call
adc
mov
insb
das
aaa
cmpsl
adc
and
inc
cli
and
sbb
imul
roll
and
jbe
jg
pushl
in
mov
mov
notl
call
dec
inc
jne
adc
push
idiv
std
mov
jmp
pushf
lahf
mov
fwait
or
or
cs
jp
icebp
js
imul
fucomip
sub
adc
mov
out
outsl
and
scas
shll
mov
xchg
dec
mov
mov
adc
dec
xor
mov
add
mov
fiaddl
add
cmp
and
xorb
bnd
in
mov
ss
cmp
adc
fs
pop
cwtl
jmp
dec
cld
jle
add
inc
movsl
stos
cmp
lds
mov
mov
push
mov
push
dec
test
ficoms
in
push
sbb
out
lods
pop
out
push
jmp
dec
fcmovb
xchg
cmc
dec
int3
push
loop
insb
outsl
div
shrb
pop
mov
lods
push
out
xor
xor
cld
aas
xchg
test
mov
mov
cmpsl
dec
imul
cwtl
cmp
dec
scas
push
dec
int3
dec
add
mov
push
adc
mov
imulb
insl
push
scas
adc
hlt
out
insb
push
cltd
leave
sbb
push
jno
add
hlt
pop
ljmp
mov
mov
lods
mov
rcl
imul
fistpll
decl
je
loop
mov
or
lock
cmp
jle
outsb
push
xchg
fnsave
push
xor
push
rolb
cmc
inc
ret
xlat
clc
push
lock
xchg
and
scas
dec
dec
fistpll
mov
divb
inc
mov
xchg
dec
test
leave
ljmp
mov
es
in
pusha
add
cmp
pop
int3
adc
seta
jne
int
or
iret
xchg
xchg
xchg
int
pop
es
xorb
leave
or
mov
in
scas
mov
xchg
mov
mov
sub
rcll
outsl
push
or
cmp
popf
or
push
mov
adc
imul
pop
jl
out
shl
xchg
adc
mov
outsb
dec
enter
repnz
ljmp
sti
or
fstps
adc
orl
adc
xor
ljmp
ljmp
push
ja
mov
dec
jg
popa
add
addb
lock
fdivp
push
fisubs
icebp
xor
push
mov
pop
sbb
int3
jle
pushf
xchg
sub
outsb
pextrw
dec
lahf
aas
push
or
out
lods
and
jb
or
push
shll
cld
out
push
cmc
test
ljmp
push
or
jl
stc
adc
out
fistpll
test
stc
std
cli
hlt
mov
dec
inc
dec
xor
push
mov
sub
out
push
loopne
and
jnp
cmc
std
adc
call
mov
mov
xchg
stos
sahf
daa
pop
adc
sbb
pusha
adc
inc
lods
jno
add
mov
xor
sbb
cld
data16
std
sti
push
out
mov
adc
fadds
pop
mov
movsl
dec
and
fwait
aas
jg
scas
adc
mov
pop
je
xlat
sub
repnz
cli
hlt
stc
cmpsb
cmpsb
leave
or
ja
rcll
aam
push
icebp
std
sti
imul
test
jle
cwtl
jmp
dec
jp
push
clc
mov
or
daa
iret
nop
mov
test
xchg
out
daa
or
cmpsl
mov
xchg
sbb
jnp
cmpsl
pop
sti
stos
and
mov
cmovbe
inc
rep
xchg
movsb
pop
das
lret
int
in
jb
lea
cmp
mov
mov
cmp
inc
loopne
lret
push
or
rorl
add
mov
xchg
lock
fsubl
stc
js
mov
jecxz
cmp
xor
mov
das
xor
pop
jb
mov
xchg
aas
mov
sbb
inc
mov
jbe
jg
call
or
out
sahf
sub
roll
cmp
mov
inc
jne
lds
cmp
repnz
fcompl
out
inc
jae
mov
xchg
dec
jns
cltd
lcall
push
ds
pop
scas
or
pusha
adc
inc
and
int3
loopne
stc
jp
rolb
adc
pop
or
popa
xorl
add
jnp
jge
scas
mov
xchg
xchg
mov
xlat
fstps
dec
stc
je
cs
out
icebp
add
mov
popf
or
aam
mov
icebp
incl
xor
cmp
addr16
call
clc
add
fld1
sbb
xchg
sub
repz
sub
out
xor
xor
cld
sub
mov
mov
incb
cwtl
fstpl
lcall
lahf
aas
jmp
std
sti
jbe
and
cmpb
sbb
lds
repnz
mov
inc
int3
dec
pop
push
cmp
sbb
lds
repz
fistpll
aam
pop
cld
cli
hlt
call
pop
sahf
sub
push
mov
mov
adc
sub
jmp
add
cmp
nop
adc
xor
ljmp
jle
jecxz
add
cmp
sbb
adc
ret
les
into
xchg
add
mov
fwait
loopne
insb
dec
push
jbe
movsb
xlat
fidivrs
or
insb
sahf
fwait
out
xor
stos
adc
and
hlt
sub
xlat
cltd
lcall
gs
cmp
push
add
jmp
or
popa
adc
push
or
test
xchg
adc
fadds
pop
out
jns
dec
and
test
jnp
add
sbb
dec
and
cs
inc
pop
addb
lods
or
jne
test
mov
flds
in
sub
mov
hlt
and
mov
cli
movsl
mov
insl
adc
mov
js
and
push
icebp
std
sti
negl
sub
dec
fldl
mov
dec
inc
fcmovb
xchg
aaa
sahf
js
mov
and
rep
xchg
movsb
adc
out
dec
inc
fiaddl
cs
mov
mov
sbb
and
inc
loopne
lret
mov
push
and
xchg
aas
je
xchg
xchg
lock
sarb
xor
cmp
lret
mov
in
and
mov
cwtl
in
sub
in
das
xor
add
in
mov
int
bnd
in
shlb
pop
nop
mov
cmc
add
mov
lods
shll
mov
sbb
das
and
shl
imul
xchg
and
scas
dec
push
sub
push
std
sub
jbe
push
inc
mov
adc
mov
lods
inc
and
in
fistpll
jle
aas
cmp
incl
cmpb
lret
cli
aad
cmpsl
into
jmp
jmp
mov
xor
stos
movsl
jp
and
clc
sbb
add
adc
sti
fildl
push
mov
decl
lods
fstp
and
pushf
xor
pop
xor
xchg
repz
mov
divb
nop
adc
adc
clc
mov
and
cmpsl
cwtl
fiaddl
lock
inc
insl
filds
icebp
sub
incl
cmpsl
cmpsl
xchg
cli
pop
rcr
fisubrl
loop
sbb
adc
mov
adc
ja
jns
mov
sbb
fdiv
sub
icebp
ret
cmp
cmpsl
repnz
lock
fsts
or
xchg
mov
or
jp
add
dec
imul
lahf
shll
pop
test
ja
mov
and
movsb
popaw
add
ljmp
xchg
pop
int
stos
mov
movsb
inc
test
out
mov
je
adc
cld
pop
adc
cld
inc
andl
fcomip
mov
test
adc
push
push
faddl
lods
jl
fs
clc
js,pt
jle
lock
jp
gs
aam
or
shlb
fsincos
std
adc
fbstp
xchg
ret
lcall
and
shl
imul
xchg
and
scas
dec
dec
fistpll
mov
divb
inc
mov
xchg
dec
test
jns
push
out
mov
dec
mov
and
stc
dec
push
mov
pop
int3
seta
jne
int
or
iret
xchg
xchg
xchg
int
pop
es
xorb
leave
or
mov
clc
hlt
call
inc
out
jg
enter
or
jg
mov
outsl
rorb
inc
mov
jp
insl
sbb
leave
pop
dec
fistl
mov
push
repz
std
mov
andb
fstps
call
mov
sub
addr16
push
loope
repz
push
stc
std
cwtl
pop
pop
stc
prefetch
or
and
pop
stc
mov
sbb
loopne
sub
loop
adc
call
fdivrs
loope
nop
or
repnz
shl
gs
mov
and
mov
mov
mov
inc
jo
jnp
scas
and
daa
ds
mov
pusha
pushf
fwait
dec
fistl
adc
lret
aaa
rcrb
push
jmp
dec
mov
sti
je
fldt
sub
jnp
in
fcompl
loope
xor
mov
fwait
xor
adc
sbb
js
leave
sub
sahf
cltd
cwtl
imul
adc
xor
add
rorl
jne
out
lods
and
cmp
xchg
lds
pop
sti
cmp
repnz
fcompl
out
inc
jae
adc
andb
mov
gs
insl
jb
inc
arpl
in
push
ds
mov
loope
push
add
mov
or
cli
std
sti
mov
aam
sti
push
stc
arpl
test
es
arpl
add
jo
add
sti
je
loopne
lods
lods
jno
aam
popf
lcall
out
clc
daa
add
repz
pushl
in
cmpsl
inc
jbe
shlb
std
sti
mov
movsl
je
jle
cltd
jmp
scas
lock
dec
jne
addr16
sub
loopne
cwtl
push
decb
lock
adc
jmp
insl
sbb
data16
test
leave
enter
sub
in
fs
iret
and
push
daa
cmp
test
add
rorl
les
pop
pop
sbb
adc
insl
addr16
movsb
mov
add
cli
iret
stos
cmp
add
ljmp
mov
cmpsb
dec
mov
cmpl
push
cld
pop
adc
mov
std
test
adc
jle
add
daa
dec
inc
adc
stos
sub
inc
cmp
sti
iret
push
shlb
mov
dec
mov
lahf
aam
push
stc
cmp
loopne
xchg
mov
jle
lock
jp
cld
jb
adc
test
scas
divb
inc
mov
add
cmp
cmp
ffreep
in
hlt
loope
add
adc
inc
and
mov
jae
pop
push
bnd
jb
mov
out
cmpsb
mov
push
cmc
std
sti
jmp
and
js
and
fisubs
pop
pop
dec
rclb
xor
jge
jp
adc
incl
cmpsl
movsb
add
sbb
int3
xchg
mov
mov
cmpsb
movsb
pop
lahf
sbb
repz
stos
cs
push
gs
sbbb
dec
lahf
jb
in
scas
mov
xchg
xchg
mov
arpl
cli
je
jg
popf
jne
aam
inc
test
push
xor
sub
mov
ja
aad
lods
lods
mov
movsb
add
icebp
lds
jne
push
icebp
xor
aas
sub
or
test
jge
mov
mov
rol
pop
je
movsl
sbb
outsl
jle
popf
dec
mov
xor
push
jle
mov
cmpsl
mov
mov
dec
shl
lcall
xorl
lahf
pushw
clc
mov
cli
mov
js
xor
rol
xor
call
sbb
and
mov
dec
jp
cmp
adc
les
fistpll
call
test
inc
add
inc
lahf
aas
jg
ja
mov
jl
hlt
xor
pop
cmpsb
loopne
ss
lret
sbb
jb
ja
jle
jp
pushl
jg
daa
xchg
jns
scas
js
divb
push
push
push
dec
mov
out
mov
jle
jno
jge
jo
and
and
rep
adc
cld
pop
adc
sarl
push
jbe
je
jg
andl
imull
aam
adc
pop
mov
inc
outsb
push
loope
clc
outsl
scas
cltd
clc
and
lods
xchg
test
fidivrl
out
inc
and
inc
or
stc
cld
aaa
into
mov
jbe
out
lods
scas
jbe
popa
jge
jg
sub
cs
jo
jnp
pop
or
movsb
mov
stc
stc
adc
imul
fbstp
hlt
and
int3
adc
jo
inc
mov
sbb
and
inc
fidivrl
adc
imul
fistpll
shll
mov
jl
cmpsl
jne
cmpsb
stos
mov
adc
pop
or
xchg
adc
shr
cs
repz
jne
push
jo
mov
test
adc
add
lds
cmp
and
and
mov
gs
stos
sarb
xchg
cmp
pop
cwtl
jmp
dec
cld
jle
adc
push
or
cltd
enter
or
test
inc
mov
or
movsb
mov
adc
sbb
pop
inc
jae
flds
cwtl
inc
mov
movsb
in
or
push
stos
mov
rep
xchg
adc
leave
fcoms
adc
lret
stc
imul
loop
or
sbb
hlt
sub
icebp
ret
pop
notl
std
sti
idivl
mov
cmp
rol
aas
out
mov
mov
inc
pop
xchg
adc
lods
push
cmc
cmp
call
mov
sti
mov
xchg
mov
fs
push
cmp
pusha
sti
std
sti
sbb
fmuls
cmpsb
loope
xor
fdivp
push
adc
fisubrs
sbb
jge
cs
sbb
pop
gs
jl
sti
jle
xchg
pop
sub
cmp
push
or
or
into
shll
mov
or
data16
fwait
jo
push
inc
xor
adc
inc
lret
push
std
sub
jbe
adc
push
inc
mov
ljmp
aam
mov
pop
inc
movsl
fs
jmp
int
xchg
sbb
test
enter
es
subb
push
fs
pop
idiv
hlt
call
inc
adc
jno
cmp
adc
outsb
stc
fsubrs
dec
cld
scas
adc
push
xchg
dec
push
xchg
rorl
inc
mov
inc
cli
inc
mov
out
add
lcall
inc
xchg
cmp
push
stc
es
iret
insb
inc
adc
add
xlat
pushf
jl
hlt
cmpsl
adc
movsb
lret
in
lret
sbb
adc
xchg
std
lods
scas
je
pop
sti
imul
iret
mov
aam
cmpsl
push
cmc
std
cli
fcmovnbe
adc
cmc
add
jl
cmc
adc
imul
filds
pusha
je
repz
cmpsb
dec
insb
jecxz
cmp
arpl
and
ja
mov
sbb
cmpsb
loope
xor
aam
inc
gs
daa
lds
movsb
inc
icebp
nop
add
cmc
adc
orb
lods
lods
jp
stos
mov
addl
mov
mov
and
mov
xor
out
scas
jb
mov
jp
outsl
sbb
mov
leave
cwtl
out
sub
aam
int3
cmp
ss
addr16
cld
call
or
xor
or
jecxz
into
aam
shll
mov
push
fnstcw
loop
pushf
lahf
out
mov
test
int
ret
dec
aad
xchg
push
adc
sti
xor
push
cmpsl
movsl
aam
pop
cmp
scas
cli
and
aas
xlat
ds
pop
stos
scas
adc
das
es
daa
iret
jmp
jo
push
push
fildll
iret
push
adc
fildl
push
decl
xchg
test
cmc
jns
daa
cmpsb
lret
lock
sti
inc
dec
push
or
std
stos
push
in
mov
sbb
cmpsb
mov
dec
dec
lahf
aas
jg
cli
movsl
jne
jp
daa
xor
pop
cwtl
jmp
dec
cld
cmpsb
jl
outsl
and
adc
jecxz
xor
repnz
out
fistpll
jmp
sub
repnz
cmpsl
pop
int3
dec
inc
fcmovb
xchg
push
cli
std
sti
aas
mov
or
sbb
push
cli
adc
hlt
call
add
out
das
xchg
sbb
psubw
repz
insb
outsl
je
aam
adc
hlt
hlt
fcmovnbe
adc
adc
dec
jbe
jg
pushl
mov
adc
cmpsl
dec
imul
add
jns
dec
inc
add
mov
jl
es
xor
aad
inc
imul
mov
rclb
fucompp
mov
and
adc
sub
jl
movb
enter
and
cwtl
pop
xchg
popf
mov
push
shlb
cmpsl
xchg
aad
negl
insl
popf
popf
jecxz
push
cmp
push
jecxz
pop
push
sub
outsb
je
sbb
ja
sbb
add
or
into
mov
push
pop
or
xchg
adc
and
js
and
dec
xchg
enter
movsb
mov
outsb
mov
sbb
divb
nop
cmp
je
jl
xchg
cld
insl
adc
mov
js
ljmp
mov
in
lods
je
inc
mov
jge
or
mov
out
movsb
mov
in
push
sbb
loopne
sub
leave
pop
divl
cmp
test
stos
xor
jle
fsubrs
orb
pusha
xchg
lret
cmpsl
dec
imul
add
addr16
jo
adc
sub
sbb
and
aad
inc
outsb
or
cltd
aaa
jbe
add
imul
std
inc
ja
fstps
imul
jle
into
xchg
add
iret
jne
in
mov
idivl
mov
and
std
xor
ret
lahf
out
inc
jae
pop
and
dec
inc
mov
adc
jnp
push
or
pop
js
xor
std
cli
pop
sub
push
out
mov
inc
lods
push
clc
pusha
imul
movsb
push
repnz
cli
hlt
dec
jecxz
sub
lar
add
hlt
cmp
lea
mov
arpl
pop
leave
push
cmc
dec
jge
leave
insb
les
xor
xor
dec
andl
jmp
adcl
imul
jle
add
add
push
sub
xchg
sbb
in
lret
aad
popf
and
pop
stc
adc
mov
sysenter
xchg
out
shl
xchg
movsl
add
lods
adcb
sub
cli
xchg
sbb
mov
mov
int
mov
lret
aaa
shrl
adc
dec
sub
xchg
xchg
lock
push
fsubr
mov
ja
mov
call
push
roll
inc
adc
cli
xchg
add
movsb
outsb
cld
sub
or
sahf
cmp
jno
dec
out
mov
add
lods
xchg
lds
mov
pop
sbb
imul
cmp
and
mov
jns
repz
sub
cmp
mov
jp
sarb
cmc
dec
jle
enter
mov
clc
cmp
ljmp
mov
and
fs
movsl
nop
imul
sub
xor
insl
jb
inc
adc
mov
xor
subb
insl
sbb
daa
dec
lret
ret
aas
push
shlb
movsl
fs
jmp
std
cli
pop
jmp
int3
loopne
loopne
daa
dec
lahf
or
xchg
adc
fadds
pop
out
jns
dec
jl
sti
pop
or
add
mov
cmc
dec
jge
dec
outsl
sub
xor
push
jge
push
mov
movsb
cmpsl
ret
std
jp
outsb
jo
inc
test
pop
mov
push
out
std
sti
bound
xchg
mov
mov
in
lods
mov
xchg
daa
dec
lcall
std
sti
testl
jle
cwtl
jmp
dec
stc
je
cs
out
ficomps
and
aas
mov
test
xchg
orb
jecxz
push
jae
popf
or
push
mov
adc
imul
fmuls
in
sbb
addr16
mov
test
or
jnp
add
pop
adc
test
aam
into
push
jno
jg
pop
jne
pop
test
pushl
push
xor
jne
sahf
pop
sbb
pop
inc
sahf
adcb
std
repnz
rcrb
push
repz
stc
std
cli
enter
push
mov
add
es
mov
mov
dec
xor
jmp
cmp
add
lock
jae
test
cmpsb
adc
mov
imulb
insl
push
scas
adc
mov
adc
imul
fildll
scas
test
pop
push
add
pop
mov
jge
aas
inc
adcl
adc
into
sub
cmp
mov
push
aam
mov
fwait
test
mov
out
inc
jno
sbb
scas
dec
dec
adc
fidivl
cmpsl
js
das
in
outsl
std
clc
adc
fisubl
pop
test
inc
inc
pusha
adc
inc
es
in
arpl
jno
pusha
std
test
mov
negl
jl
xor
xorb
cmp
mov
lret
or
lcall
jmp
dec
incl
mov
lock
jo
ja
shlb
pushl
inc
xchg
xor
and
sbb
ret
fadds
and
mov
aam
sub
hlt
push
mov
mov
mov
ja
xor
pop
xchg
jp
out
filds
adc
test
ja
rcr
mov
in
nop
daa
test
shlb
or
in
das
xor
add
icebp
sbb
jbe
mov
loope
subb
cmc
rorb
jno
imull
push
stc
std
sbb
in
xor
std
inc
jbe
jg
lcall
clc
cmp
ljmp
adc
out
inc
jbe
add
mov
orb
daa
movsb
xchg
inc
cs
dec
test
push
adc
movsl
push
stc
mov
mov
jne
in
adc
or
jo
jge
jnp
ljmp
sub
sbb
in
aaa
dec
lahf
aam
xchg
pop
int3
push
xchg
adc
pop
add
jns
daa
cmpsb
lret
lock
sti
inc
xchg
mov
mov
out
stos
mov
movsl
je
jle
adc
cld
sbb
xchg
dec
jne
addr16
adc
repnz
sbb
cmp
push
out
sbb
lock
roll
stos
xchg
add
stos
lods
jbe
adc
decl
add
hlt
call
dec
and
pop
or
lock
mov
ret
cmp
fistl
xchg
inc
gs
je
in
je
push
inc
loopne
adc
enter
dec
push
xchg
xor
mov
inc
test
jge
sarl
inc
push
ja
mov
jmp
mov
pop
movsb
jg
xor
add
push
or
or
and
nop
add
hlt
pop
lcall
pusha
aad
and
ja
or
test
test
jbe
mov
lcall
and
and
shl
imul
xchg
and
scas
dec
dec
adc
cmp
outsl
jbe
push
inc
mov
or
mov
pusha
adc
inc
das
fmulp
sub
xchg
pop
int3
setbe
cmc
pop
jmp
sti
inc
insl
pop
jl
cli
lods
lods
cmp
and
and
das
test
cltd
inc
and
into
sbb
pop
sbb
loope
shlb
sbb
add
icebp
adc
jg
popf
loopne
bound
mov
xchg
inc
out
sub
pop
notb
xor
adc
sbb
xor
out
sbb
lock
movsb
imul
fld1
sbb
sub
div
rol
aas
out
mov
mov
inc
shl
lret
adc
dec
add
or
add
mov
rcll
rorb
jo
fisttpll
xchg
clc
jae
lds
mov
mov
jbe
mov
aad
inc
jp
roll
outsl
mov
adc
adc
jnp
icebp
sbb
jbe
mov
loope
push
or
out
lods
and
jb
or
push
shll
mov
add
rcll
pop
pop
out
inc
jb
adc
dec
dec
fistl
jae
test
inc
xchg
fmuls
add
push
mov
daa
into
jmp
enter
ss
pop
aaa
lcall
imull
pop
or
popa
xorl
pop
and
nop
cmp
inc
repz
push
je
xchg
jle
cwtl
ljmp
xchg
outsl
add
js
ljmp
mov
movsb
scas
add
lods
adc
mov
pop
dec
sbbl
xor
nop
push
push
movsb
adc
imul
fbld
and
add
test
scas
adc
xchg
jne
popa
cmp
data16
jb
ljmp
jecxz
gs
mov
ss
push
je
in
out
jl
sti
std
adc
lock
mov
cmpsl
dec
imul
call
mov
mov
cmp
js
lret
mov
xchg
jno
jg
jp
enter
sbb
adc
pop
outsl
adc
sub
adc
stos
push
in
je
adc
inc
imul
mov
leave
orb
daa
cmpsb
lcall
sub
jno
cmp
jg
into
decl
add
es
jl
scas
stos
cmpsb
icebp
scas
jg
scas
cmpsl
js
adc
hlt
call
xchg
sub
add
push
mov
jne
out
lods
and
rcrb
jae
sub
shll
mov
push
hlt
cmp
stc
cmp
jmp
or
adc
dec
jbe
jg
jmp
and
and
stc
ljmp
xchg
and
sbb
xor
pushl
inc
mov
sbb
add
jmp
stos
cli
stos
xchg
adc
mov
mov
adc
dec
aaa
out
test
jle
xchg
das
adc
frstor
dec
mov
push
negl
jl
add
lahf
pop
xchg
sub
stc
cli
hlt
call
and
int3
dec
or
std
stos
lahf
push
jmp
sbb
dec
test
adc
jno
cmp
jne
jp
mov
out
out
jo
and
cld
std
cli
hlt
push
loop
fsts
xor
test
sub
mov
rcrb
cmpsl
or
clc
out
shll
aam
mov
sbb
sbb
shl
xchg
mov
out
loop
in
ss
ret
cmp
mov
jbe
clc
loopne
aaa
adc
subb
xchg
mov
fwait
rcrb
inc
fsubs
fistpll
aam
adc
stos
mov
movsl
dec
adc
je,pn
popa
add
ljmp
dec
mov
aaa
xor
stos
test
mov
rorb
jno
imull
cmp
int
pop
sar
push
loope
clc
int3
mov
or
insb
sahf
fwait
out
xor
stos
adc
dec
fnstenv
mov
mov
mov
adc
stos
add
adc
lods
pop
inc
inc
pusha
adc
inc
es
in
arpl
jno
pusha
std
test
mov
cmp
movsl
int3
jmp
adc
xorb
sahf
cmpsl
inc
jbe
lock
adc
fstps
pop
push
andl
lods
std
ret
mov
and
adc
sahf
jns
mov
or
push
push
mov
test
lds
ds
lea
icebp
rol
cmp
mov
scas
cmp
mov
shll
jp
fdivrl
sbb
icebp
popa
clc
lods
rorl
push
movsl
adc
mov
add
fstl
in
jmp
mov
sub
std
sti
notl
xchg
dec
movsl
adc
or
fidivrs
inc
test
adc
adc
cld
or
cmc
imul
fistpll
movsl
hlt
pop
pop
sbb
enter
fistps
add
lahf
insb
xchg
cld
add
popl
mov
loope
jge
ljmp
sti
call
jmp
pop
out
lock
std
lods
outsb
push
dec
cmp
std
cltd
xchg
icebp
push
xchg
mov
aaa
je
cs
dec
test
push
adc
mov
cwtl
pop
scas
or
xchg
popa
mov
add
push
pop
xchg
push
lods
jo
fiaddl
jae
or
lea
je
jge
scas
mov
xchg
xchg
hlt
xchg
jle
cwtl
jmp
dec
stc
je
cs
out
icebp
add
mov
popf
or
aam
mov
adc
aaa
sahf
jns
mov
mov
mov
mov
pop
cs
dec
sarb
out
div
rol
cmp
mov
test
jnp
and
adc
xor
inc
jns
mov
push
xchg
icebp
popa
pop
jns
hlt
lock
iret
lahf
add
add
out
add
ljmp
mov
ret
out
xorl
lcall
arpl
in
cmp
movb
loop
mov
loop
push
jg
adc
mov
icebp
sub
mov
jnp
std
cli
mov
pop
sbb
lods
cmpsb
add
adc
cmpsb
mov
jne
push
outsb
ret
cli
cs
lahf
aas
les
jg
cmp
push
adc
das
add
shl
adc
rclb
jg
or
pop
jge
add
jae
inc
in
mov
add
std
pop
cmc
mov
int3
scas
divb
inc
mov
mov
mov
push
inc
mov
sahf
xchg
dec
in
lods
iret
push
adc
adc
and
js
and
dec
lods
enter
ja
dec
or
mov
in
lods
mov
andb
fstps
mov
or
daa
push
sbb
mov
jle
xor
jnp
sbb
or
mov
pop
fsubs
lds
mov
dec
xlat
push
mov
or
mov
jns
mov
push
sbb
out
lods
pop
out
push
jmp
jns
fwait
jb
sub
div
adc
shl
gs
adc
mov
lcall
adc
imul
scas
push
adc
arpl
aam
fdivrl
and
or
pop
pop
and
fwait
mov
pop
out
or
fwait
jle
add
cmp
aad
inc
test
xchg
mov
push
mov
int
push
or
ds
jp
into
jae,pt
imul
or
fistl
xlat
sbb
cli
push
or
dec
jl
movb
lock
icebp
push
jg
adc
push
lret
mov
loop
pushf
lahf
adc
in
dec
fs
movsl
nop
imul
sub
jbe
push
inc
mov
sbb
add
imul
adc
push
pop
xchg
xor
sub
int
lock
add
jno
lds
aam
add
inc
mov
std
adc
nop
xchg
sub
fs
out
mov
orb
mov
rcll
cli
movsl
cld
int
div
out
fbstp
jle
cwtl
jmp
dec
jp
push
push
gs
insl
add
daa
dec
rclb
sub
sti
scas
test
pop
mov
jp
mov
or
adc
dec
arpl
mov
imul
cmpl
mov
sbb
cmp
adc
out
dec
enter
cs
loope
cmpl
fldcw
xchg
fwait
gs
movsb
dec
add
dec
imul
adc
lock
popa
pop
mov
pop
addb
dec
cmc
in
aas
popaw
add
ljmp
adc
xor
stos
test
mov
jnp
pop
or
xor
mov
jne
in
mov
idivl
mov
inc
adc
push
clc
cmp
ljmp
jae
adc
pop
cmp
dec
inc
mov
adc
push
cmp
push
mov
lods
push
lock
std
add
ja
adc
aas
shll
xor
sbb
int3
push
repnz
std
sti
pop
xchg
xor
add
jp
sbb
pop
pop
xor
xchg
add
push
mov
pop
stc
sti
imul
inc
xchg
test
std
cli
hlt
lahf
xor
inc
xchg
pop
pop
imul
sti
std
adc
out
fistpll
fstps
push
jl
into
inc
lahf
aas
jg
test
sub
jl
sti
jle
push
mov
dec
push
sub
shl
popf
fistpl
jno
jle
jle
mov
test
jmp
or
cmpsl
add
mov
rol
cmp
mov
shlb
test
pop
icebp
adcb
les
add
or
push
xchg
lock
jb
scas
xlat
xchg
test
popf
cmp
es
xor
xlat
loopne
jle
dec
sbb
adc
jge
cs
sbb
mov
andl
mov
cmc
lock
ja
adc
mov
push
sbb
iret
push
shll
mov
pop
clc
lret
fldt
jnp
cmpsb
inc
and
or
in
dec
push
push
add
pop
add
out
inc
js
cmp
aad
cld
cmp
aas
daa
xchg
icebp
dec
dec
fidivl
movsb
jg
xor
inc
mov
fsts
les
pop
mov
leave
ljmp
mov
es
in
pusha
imul
jo
fildl
push
cld
dec
push
negb
xor
xchg
add
push
fs
push
cs
test
xor
in
scas
mov
xchg
cmp
fs
scas
jno
aas
jg
dec
cld
jle
add
add
push
sub
inc
and
sbb
dec
lahf
xchg
xor
sbb
xor
and
pop
cld
cld
adc
movsb
lret
in
lret
sbb
adc
sbb
jnp
hlt
std
divb
rol
cmp
mov
xchg
dec
cmp
test
adc
pop
jg
inc
loopne
lret
aaa
shrb
cmc
ljmp
sbb
arpl
stos
ljmp
jg
hlt
std
addr16
xchg
hlt
aaa
pop
mov
movsb
push
ljmp
sbb
cmp
push
leave
mov
push
out
fists
cmp
add
aaa
sub
mov
fimull
add
sbb
dec
cmp
jmp
xchg
ss
mov
jg
and
or
in
mov
testl
iret
push
shll
sub
mov
mov
cli
mov
sbb
mov
mov
xor
shlb
mov
inc
pop
hlt
sub
xlat
cltd
lcall
push
ds
pop
scas
or
pusha
adc
inc
and
int3
loopne
loop
xlat
es
xchg
jo
fiaddl
repz
sub
mov
adc
arpl
ficoml
xor
push
cmp
jge
scas
mov
xchg
xchg
mov
xlat
xchg
sbb
cwtl
jmp
dec
stc
je
cs
out
icebp
add
mov
popf
je
stos
lods
les
nop
inc
and
inc
pop
push
shrb
push
arpl
aam
int3
inc
inc
fcmovb
xchg
aaa
sahf
js
fwait
xchg
in
mov
mov
je
lods
push
in
aam
div
rol
cmp
mov
sub
inc
in
fstpl
lcall
mov
lock
sbb
jg
popa
add
ljmp
push
daa
lds
xorl
lcall
arpl
in
cmp
movb
adc
lock
xlat
mov
xor
add
pop
jns
adc
or
insb
sahf
lcall
shrb
stc
sub
repnz
push
sbb
arpl
in
push
ds
pop
stos
add
mov
sub
es
lahf
das
jo
push
std
adc
out
fistpll
jle
imul
pushf
cmp
imul
push
xor
bound
cli
std
cli
xlat
enter
scas
pop
dec
int3
dec
shrl
lods
inc
roll
push
jnp
out
mov
and
and
repnz
scas
mov
xchg
mov
test
jle
cwtl
jle
dec
rclb
fsubs
fsts
xor
test
mov
dec
push
mov
xchg
dec
iret
shlb
in
test
cmp
sub
aas
es
rep
xchg
movsb
movsl
jb
mov
ds
sub
cmp
mov
rol
xor
inc
nop
insb
fcoms
hlt
std
loopne
rclb
in
sbb
pop
test
loopne
les
adc
mov
pushl
in
lock
push
cli
das
dec
lahf
aas
xchg
xchg
lock
sarb
sbb
repz
jae
sbb
and
sti
jno
sti
inc
push
sbb
std
xor
sti
movsb
pop
loop
jno
dec
out
mov
mov
in
push
fidivrl
inc
xorb
fdivrs
cmpsl
inc
test
int3
or
cmp
std
sti
sbb
scas
jmp
mov
push
shll
pop
mov
lahf
fidivrs
or
insb
sahf
fwait
out
xor
stos
lods
je
adc
adc
andb
pop
subl
sti
std
adc
stos
inc
je
movsl
adc
ds
pop
test
pop
jl
int
daa
dec
lahf
mov
out
bnd
out
fistpll
jb
lock
mov
or
in
sub
jns
js
mov
push
push
mov
mov
in
int3
jnp
pop
push
dec
pushf
insl
add
push
imul
sahf
add
dec
fistl
js
and
mov
sti
inc
xchg
mov
mov
out
stos
mov
push
cli
movsl
adc
jne
jnp
pop
sbb
xchg
dec
jne
adc
pushw
aad
cmp
dec
push
mov
pop
dec
sbbl
xor
mov
lods
pop
push
mov
repnz
aad
addr16
sub
or
xchg
xchg
into
cmp
call
aad
mov
and
and
add
cli
cmc
push
fwait
in
inc
outsb
or
sahf
cmp
jno
dec
out
mov
pop
adc
lcall
arpl
in
cmp
movb
loop
mov
movsb
icebp
push
jg
adc
mov
icebp
sub
mov
push
mov
call
test
int
out
leave
dec
jbe
sbb
popf
in
push
les
push
dec
lods
dec
push
xlat
mov
adc
aam
pop
stos
add
adc
lods
pop
inc
inc
pusha
adc
inc
es
in
arpl
sahf
xchg
dec
into
inc
lahf
aas
jg
int3
seta
je
lret
ja
movsb
jb
fistl
or
lea
or
js
call
out
test
sub
mov
mov
sbb
pop
cwtl
jmp
dec
jnp
adc
mov
lock
jo
ja
shlb
adc
aam
mov
xchg
in
cmp
lcall
inc
xchg
ss
xor
out
mov
add
adc
rep
xchg
cmpsb
add
add
mov
repnz
aad
sub
out
xor
xor
cld
aas
xchg
xchg
enter
outsb
sub
adc
dec
adc
dec
add
scas
xorl
lods
pop
pop
cmpsb
loopne
aaa
loop
fucomp
shrl
mov
jle
xlat
dec
inc
push
cmp
ljmp
add
lock
sti
call
push
push
hlt
std
cli
hlt
jl
xchg
roll
xchg
sti
ja
out
sahf
push
inc
jl
mov
cmp
fwait
loopne
adc
scas
jge
in
cmp
inc
adc
leave
push
jbe
lcall
stc
cmp
out
mov
clc
sub
and
scas
dec
dec
shll
in
out
mov
pop
movsb
lods
add
mov
in
out
pop
fsubrs
add
push
jno
or
shll
mov
xor
mov
add
mov
push
idiv
std
sti
sbb
lcall
out
std
cli
hlt
outsl
fs
cmpsl
sub
mov
fs
out
mov
divb
nop
cmp
je
jl
mov
insl
or
pop
imul
adc
inc
and
cmc
test
sub
subps
jge
dec
lahf
aas
jg
push
mov
lods
mov
add
add
mov
movsb
mov
pop
das
lret
int3
push
loop
insb
outsl
div
rol
cmp
mov
mov
divl
test
pop
icebp
adcb
les
clc
fistl
dec
adc
push
nop
repnz
xchg
sti
sub
push
daa
jp
jo
fcompl
loope
xor
mov
fwait
xor
cs
sbb
mov
lahf
enter
and
or
ud2
mov
cmp
sti
scas
inc
sub
scas
cmc
adc
call
clc
cs
rcl
jnp
inc
andl
rcrl
test
xchg
jns
sub
arpl
pop
je
mov
lcall
xchg
pop
jns
or
insl
pushf
sahf
in
jne
sub
cld
aaa
into
mov
test
orl
inc
mov
xchg
dec
test
stos
mov
adc
mov
mov
es
in
pusha
imul
test
stc
add
mov
dec
adc
daa
pop
mov
sbb
sbb
aam
pop
scas
mov
sub
or
daa
insb
mov
push
retw
out
test
xor
push
lods
adc
call
jne
jge
idivl
dec
jnp
push
fidivrl
mov
insb
stc
jo
stos
xchg
or
daa
cltd
enter
or
xlat
push
mov
or
mov
je
aam
adc
dec
mov
fs
dec
sbb
push
and
jle
cli
std
sti
testl
repnz
jne
dec
mov
sbb
adc
pop
je
add
in
mov
mov
cmpsl
dec
imul
cwtl
cmp
dec
sbb
clc
xorb
mov
dec
jg
popa
add
ljmp
push
daa
lds
lahf
push
icebp
nop
add
cmc
adc
orb
movb
bound
mov
mov
xor
aas
out
repnz
xor
jp
or
mov
adc
dec
out
jge
pushf
iret
sub
bound
fidivrl
repnz
cmpsl
push
std
lcall
xchg
daa
es
js
xchg
ljmp
fistpll
sub
sahf
mov
idiv
std
mov
in
cmp
jae
insl
lds
inc
in
adc
imul
fsubrs
pop
jl
aas
in
mov
xorb
lret
cli
sbb
pop
test
mov
xor
inc
and
pop
in
lods
test
std
push
aaa
ret
fidivl
pop
fldl
mov
cmp
movsl
cmpsl
jl
repz
xchg
jmp
jno
arpl
jle
call
fiadds
lret
fldt
rcrb
inc
mov
sbb
xlat
ss
shlb
push
fs
fisubrl
test
dec
mov
mov
cmp
jp
xlat
jne
and
je
jle
lcall
jp
pop
add
cmp
push
sub
jmp
lcall
cmpsl
or
clc
out
shll
jmp
mov
push
sbb
loopne
and
aas
mov
lods
push
repz
out
out
lret
shlb
aad
jg
lods
test
cmpsl
enter
inc
andl
cmp
lea
adc
sbb
jg
ljmp
orl
adc
xor
test
aam
or
adc
arpl
xor
pop
mov
mov
mov
std
loopne
daa
dec
lahf
sub
inc
outsb
lods
adc
imul
fistpll
adc
jnp
icebp
dec
mov
add
insl
push
adc
dec
ja
fstps
imul
add
fistpll
andl
lock
icebp
jge
je
push
xor
sbb
ds
pushf
lahf
out
inc
js
cmp
aad
movsb
add
jno
inc
mov
fsts
mov
cmp
or
shll
xor
iret
push
sti
dec
decb
push
lock
mov
lock
add
jle
ljmp
xchg
xchg
int
pop
es
xorb
fwait
jnp
scas
scas
or
jne
jno
adc
mov
mov
pop
out
cmp
add
or
std
in
scas
mov
xchg
mov
test
je
repnz
mov
ja
pop
or
std
cli
add
pop
loopne
daa
dec
lahf
adc
mov
adc
ja
jns
mov
hlt
call
ss
xchg
enter
icebp
rep
xchg
mov
fcomi
cmp
and
popf
xchg
mov
test
out
mov
xor
sti
movsl
dec
call
decb
outsl
and
pop
fs
push
cmp
lret
mov
dec
xchg
in
outsl
or
xchg
dec
cld
fcmovne
inc
xor
pop
sbb
leave
je
add
adc
or
in
cltd
xchg
jno
mov
push
xor
push
jmp
pushf
lahf
out
shlb
inc
js
cmp
aad
movsb
add
fst
nop
lods
outsl
jbe
push
inc
mov
adc
mov
or
ja
adc
aas
shll
xor
adc
cs
int3
mull
xor
arpl
std
cli
rcll
sti
mov
insl
sbb
daa
dec
xor
fidivrs
js
and
shlb
push
cmpsb
xchg
int3
mulb
mov
cmpsb
leave
or
ja
rcll
cli
movsl
je
lods
jo
add
ds
cwtl
jmp
dec
cld
jle
add
jns
mov
daa
dec
lahf
pusha
shll
sti
and
daa
mov
test
rcrb
cmpsl
push
gs
test
adc
or
inc
mov
jg
cmp
push
stos
mov
add
sbb
in
sbb
adc
imul
fbld
and
rep
xchg
movsb
push
sub
ret
add
mov
in
js
push
repz
sub
hlt
sub
jne
adc
cmp
lahf
test
andl
dec
popa
clc
fstpt
mov
adc
adc
inc
cwtl
cmp
dec
ficompl
and
aas
push
ja
mov
icebp
xchg
clc
lret
mov
sub
fstl
in
jmp
lods
shrb
sub
movsl
test
mov
xchg
out
js
or
add
dec
push
mov
data16
hlt
or
es
pop
scas
mov
inc
jo
jecxz
ljmp
pop
test
lahf
push
icebp
nop
add
sub
cld
sti
imul
pop
loopne
xchg
or
lods
sub
in
sub
dec
lahf
aas
dec
jl
movb
cmpsl
cld
cmp
adc
mov
mov
dec
sbb
nop
mov
adc
xor
pop
stc
nop
xor
adc
or
mov
int
arpl
push
idiv
std
and
jb
lods
jle
cli
std
cli
hlt
add
xor
or
xchg
and
stc
xchg
xor
sbb
and
aas
push
shll
mov
sub
ss
imul
xor
jnp
pop
enter
xor
add
xchg
daa
push
rorb
sub
mov
adc
mov
jbe
imul
fists
ljmp
gs
add
xlat
xor
pop
mov
and
out
fidivrl
je
aad
adc
call
sbb
cmp
jnp
adc
aas
scas
lods
or
pop
push
mov
mov
pop
jnp
inc
mov
ja
jecxz
aaa
add
jle
out
shlb
mov
inc
fcmovb
adc
xchg
ss
jge
fwait
inc
lods
pushf
pop
mov
mov
out
lret
shlb
xchg
adc
in
mov
push
stos
lea
xchg
push
cwtl
fstpl
lcall
mov
adc
adc
clc
jae
lds
mov
pop
push
mov
pop
mov
imul
jl
sub
and
inc
cli
and
pop
int
hlt
call
or
pop
nop
mov
dec
or
out
lods
and
jb
or
push
shll
mov
or
data16
fwait
jo
push
inc
xor
adc
and
fwait
repnz
push
inc
mov
dec
pop
in
ret
aam
jle
repz
ja
xchg
inc
and
je
repz
bound
inc
mov
cmp
mov
repnz
dec
setbe
jno
fimuls
js
and
mov
gs
stos
sarb
mov
adc
andb
fsts
lcall
add
in
js
ljmp
mov
xchg
shll
ss
adc
outsb
xchg
aad
xchg
ljmp
xchg
movsb
test
xchg
int
in
in
mov
sti
lcall
cmp
jmp
dec
inc
xchg
add
jg
call
repnz
sti
not
sbb
fsubrs
orl
pop
call
cs
dec
lea
cltd
push
jmp
out
lock
sarl
cmpsb
jbe
test
add
call
dec
mov
aaa
cmpsb
rcrl
or
jno
push
jg
inc
jge
outsl
filds
mov
jg
or
add
fidivs
dec
ja
xchg
xor
pop
sbb
leave
je
addr16
dec
and
push
idiv
std
ret
mov
cld
push
enter
push
or
sbb
and
adc
push
clc
cmp
jmp
pop
mov
repnz
inc
inc
cs
dec
test
push
adc
mov
adc
sub
sub
rcr
test
in
cmp
xor
push
stc
jp
pop
sbb
adc
dec
jno
arpl
add
jo
add
cmp
call
dec
fimuls
adc
push
imul
mov
mov
in
scas
mov
xchg
cmp
inc
test
pop
jge
idivl
cltd
jmp
mov
mov
sub
test
pop
adc
es
aas
jb
mov
ja
sub
mov
add
inc
js
dec
into
mov
test
adc
mov
cmp
push
jg
add
outsl
test
xor
sbb
ss
jge
fwait
inc
lods
pushf
pop
mov
mov
out
lret
ror
ss
ret
cmp
mov
add
xor
ds
sub
dec
idivl
mov
fwait
rcrb
push
nop
repnz
xchg
xor
push
ja
mov
es
jo
pop
outsl
in
jmp
mov
outsb
or
lcall
nop
add
hlt
pop
lcall
pusha
aad
and
ja
or
fcomi
jnp
add
js
sbb
xor
mov
push
jbe
fs
aam
adc
cmpsb
test
xor
decl
jecxz
cltd
xchg
icebp
push
imulb
lock
xchg
and
scas
dec
dec
fistpll
mov
divb
add
clc
mov
pop
jl
test
mov
mov
jl
adc
push
shlb
movsl
fs
jmp
int
xchg
sbb
test
enter
es
adcb
mov
out
adc
mov
cmp
int
jl
dec
lds
inc
dec
hlt
outsl
inc
and
cmc
test
sub
xacquire
int3
inc
mov
xor
sbb
xor
and
aas
shl
rcll
hlt
call
loopne
daa
dec
lahf
fwait
jb
sub
shl
fidivl
icebp
aam
push
sti
std
cli
hlt
in
fs
iret
push
cwtl
fs
cmp
mov
and
std
cmp
dec
sbb
std
mov
dec
jp
add
dec
imul
sub
push
jb
push
xchg
lock
fbld
out
frstor
pushl
pop
cmpsb
loopne
aaa
loop
push
imul
or
inc
test
adc
inc
or
mov
adc
jnp
lock
out
test
lcall
push
enter
mov
push
aam
andl
out
sahf
mov
push
sbb
sbb
scas
add
mov
or
mov
clc
cmp
mov
insl
sahf
mov
jecxz
push
pop
je
pop
jno
xchg
clc
mov
adc
mov
jnp,pn
call
std
cli
jp
cmp
and
imull
adc
fsubrl
icebp
pop
stos
add
ja
adc
aas
rorl
sbb
jb
add
testl
mov
jp
adc
cli
sbb
lods
iret
xchg
ret
jno
fimuls
js
and
mov
gs
stos
sarb
xchg
cmp
pop
adc
cwtl
jmp
dec
jp
push
or
cltd
enter
test
lds
push
mov
sbb
cmp
push
dec
push
inc
pushl
into
inc
lahf
aas
jg
mov
pop
jbe
xorb
js
fstpt
int3
ret
add
dec
and
hlt
pop
xchg
xor
cmp
mov
mov
jg
decl
dec
scas
add
bound
std
mov
dec
jp
add
add
insl
loopne
xor
es
lock
jb
add
out
mov
roll
aad
inc
push
sbb
xor
cmp
rcr
or
and
push
sbb
push
inc
mov
push
sbb
lret
pop
std
daa
mov
pop
lret
bound
lahf
out
sarb
mov
loop
outsb
jle
jl
mov
inc
pop
mov
add
lret
push
std
xchg
les
mov
and
pop
out
aad
pop
movb
dec
mov
and
stc
dec
cmp
pop
int3
setbe
jno
fisttps
add
test
enter
es
xorb
adc
out
mov
sub
jmp
push
jge
idivl
push
inc
dec
hlt
outsl
inc
and
cmc
test
sub
repnz
cmpsl
pop
sti
stos
imul
std
sti
ss
dec
cmp
js
mov
mov
das
pop
test
pop
jl
out
shll
daa
outsb
dec
enter
sub
hlt
hlt
fcmovnbe
adc
cmc
add
xchg
xchg
into
cmp
dec
imul
mov
and
and
lahf
cmp
std
lods
lahf
dec
xlat
and
add
call
push
mov
les
mov
xor
pop
fdivr
adcl
pop
sbb
ficoml
sub
enter
jg
and
or
out
sahf
mov
je
push
idiv
std
ds
or
adc
push
cld
std
cmpsl
xchg
aad
push
jno
call
pop
sti
cmp
and
pop
cmp
incl
push
jl
sub
shr
xchg
imulb
mov
leave
cltd
test
add
pop
stos
add
jl
hlt
lea
mov
add
gs
insl
add
daa
dec
sub
daa
into
jmp
fsubrl
and
ljmp
dec
ret
test
aas
mov
movsl
cmpsb
stos
adc
inc
xlat
push
mov
aad
sub
cs
sub
cmp
std
in
scas
adc
mov
jle
cwtl
ljmp
sbb
fs
push
pushf
push
dec
fiadds
arpl
jns
mov
or
cmp
add
out
dec
enter
cs
loope
imul
mov
mov
or
add
dec
push
xor
int3
push
xchg
lock
sarl
cmpsb
jbe
mov
aad
inc
insb
or
in
das
ss
xor
add
jecxz
mov
adc
adc
and
or
imull
cmp
int
fisubl
mov
js
inc
repnz
lahf
out
inc
ja
add
dec
lods
insl
adc
popa
pop
push
inc
xchg
fmuls
add
push
test
mov
mov
fstp
xor
test
out
mov
movsb
mov
mov
jnp
pop
int
xchg
sbb
mov
mov
clc
sub
pop
cmp
movsl
int3
jmp
cmp
cli
arpl
adc
jbe
jg
lcall
mov
call
add
cld
ds
movsb
jbe
jne
mov
fisttpll
jmp
push
es
jg
or
add
imul
jle
add
inc
movsl
stos
adc
clc
imul
lahf
or
push
mov
sbb
xor
sti
test
cmp
sub
test
inc
sbb
test
leave
enter
jne
adc
call
sbb
sub
cli
gs
aam
stc
sti
imul
ss
mov
mov
test
test
jp
add
dec
imul
lahf
ss
sti
into
sti
jle
popa
testb
cmp
scas
outsb
fnstcw
dec
mov
in
and
sbb
nop
and
cld
fistpl
js
cld
pop
ficomps
cwtl
imul
jl
movl
cltd
fcoml
imul
push
push
cmp
movsb
movsb
xlat
dec
mov
push
test
movsb
cmpsb
fidivrs
or
insb
sahf
fwait
out
xor
stos
adc
dec
fnstenv
mov
mov
mov
pop
stos
add
sub
push
shll
mov
and
int3
test
es
push
jo
fiaddl
repz
sub
mov
popa
xorl
clc
lds
popf
sub
mov
nop
cmp
jl
pop
cltd
sbb
inc
ds
mov
in
cmp
test
les
mov
scas
mov
ja
push
cli
jle
add
inc
cmp
sub
test
rcrb
arpl
mov
loop
cmp
mov
xchg
movsb
pop
das
lret
int3
fcompl
cmp
xor
cmpsl
inc
test
cmp
mov
idivb
adc
xchg
lods
jl
lret
mov
enter
popa
aaa
push
and
xchg
aas
jbe
jo
pop
test
jne
mov
jmp
lods
pop
pop
cmpsb
loope
adc
lret
sbb
jb
ja
int
out
mov
iret
lods
push
outsb
lods
cmpsb
test
mov
push
sbb
jbe
mov
lahf
push
add
rorl
je
jecxz
mov
mov
push
shll
mov
inc
inc
inc
std
push
mov
jmp
xchg
and
sub
sub
mov
enter
lods
lret
in
stc
fs
pop
and
movsb
cltd
xchg
mov
lods
adc
out
fistpll
mov
es
in
arpl
jno
dec
jg
aaa
je
xchg
adc
fadds
pop
out
jns
aam
adc
dec
and
pop
inc
jbe
xor
cmp
ljmp
retw
movsb
add
repnz
orb
movsb
adc
cltd
out
sub
daa
push
sbb
jmp
aam
push
icebp
inc
in
pop
push
andl
das
int
adc
dec
mov
mov
cmp
dec
lods
add
hlt
xchg
sbb
in
lret
aad
popf
and
pop
stc
mov
mov
ljmp
mov
scas
adc
xchg
jne
xlat
clc
cs
std
lods
out
div
rol
movsl
jbe
fwait
sub
adc
xlat
mov
ret
test
mov
inc
shl
lret
mov
mov
push
cld
std
cli
hlt
cwtl
cmp
pusha
sti
mov
int3
inc
mov
pop
mov
pop
push
mov
jmp
ret
shll
cmp
adc
fwait
xor
scas
push
fdivrl
xor
iret
into
ret
ret
push
adc
sub
pop
pop
sbb
xor
ljmp
jl
mov
shlb
mov
repnz
stos
sub
inc
cmp
xor
xor
cli
cli
hlt
call
inc
repnz
mov
and
les
or
xchg
mov
push
inc
xchg
fmuls
add
push
daa
into
jmp
xchg
pop
ret
jb
mov
out
cmp
xchg
ja
cmp
and
sbb
xorb
sbbb
pop
imul
lcall
das
push
mov
jle
js
jns
jno
gs
add
out
jle
mov
mov
and
jmp
mov
push
mov
xchg
ds
outsl
out
mov
lcall
xorl
lahf
mov
test
scas
adc
xchg
jne
add
hlt
pop
xchg
xor
aaa
adcl
adc
xchg
lret
mov
scas
cmpsb
mov
mov
fistpll
sbb
cmpsb
loope
xor
aam
and
push
inc
push
mov
loop
ljmp
or
add
ret
add
sbb
int3
jle
int
jge
push
sbb
rcrb
sbb
and
push
stc
cmp
loopne
xchg
lds
mov
adc
imul
out
mov
icebp
sub
std
mov
sbb
and
push
adc
and
scas
dec
dec
roll
xor
push
inc
mov
in
hlt
loope
add
adc
inc
and
rcr
int3
setbe
adc
rcll
jnp
jecxz
mov
push
sbb
subl
add
neg
add
or
mov
je
xor
in
scas
mov
xchg
mov
test
jle
cwtl
jmp
dec
jp
push
or
cltd
enter
or
xlat
push
sub
mov
aaa
sahf
jns
mov
pop
fsub
dec
jb
arpl
sahf
test
repnz
jmp
loope
cmpl
fldcw
xchg
fwait
gs
je
mov
call
mov
xorl
aam
adc
in
nop
daa
test
sub
or
in
das
xor
add
icebp
sbb
jbe
mov
loope
jp
in
jecxz
xlat
xor
int3
dec
push
rcll
xor
xor
inc
das
xchg
shlb
and
sti
xor
push
inc
mov
or
sbb
cmp
push
adc
ret
sbb
or
push
sbb
jmp
clc
dec
and
ss
shlb
push
fs
out
mov
icebp
or
xor
jecxz
mov
xchg
jp
push
sarb
jmp
dec
jp
push
or
lods
fwait
pushf
and
sub
orps
and
sub
cmp
mov
je
aam
push
cli
test
std
inc
repnz
lret
lock
mov
mov
ss
andl
add
or
mulb
sub
xor
xor
outsl
fisttps
je
add
push
sbb
sub
aam
cmp
mov
mov
int
mov
lret
aaa
shrl
mov
jecxz
test
jbe
adc
test
pop
pop
cmpsb
loope
xor
fdivp
push
xor
test
mov
add
notb
testb
inc
int
inc
andl
enter
int
lds
xchg
push
xor
sbb
ds
push
stc
cmp
loop
popf
popf
jecxz
push
cmp
push
jecxz
pop
push
sub
outsb
je
pop
push
lcall
stos
add
mov
scas
adc
add
push
imull
sbb
sub
int
or
iret
xchg
xchg
xchg
int
xchg
cli
mov
pop
je
push
push
pop
sub
lea
movsl
shlb
movsb
fwait
push
add
movsl
cmpsb
cmp
pusha
call
pop
add
jmp
mov
sub
mov
or
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
pop
clc
shr
das
ss
movsb
or
push
das
cmp
jmp
sbb
inc
out
aam
jb
inc
jns
jmp
pop
insb
xor
xchg
pop
add
and
pushf
jmp
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
jmp
into
out
cld
test
or
jmp
add
addl
jle
sub
mov
sbb
xlat
les
cs
pop
gs
dec
loope
fildl
hlt
sbb
fidivrs
push
push
mov
jmp
mov
lea
nop
mov
xor
jmp
lret
test
cmpsw
push
std
repnz
rolb
ds
in
mov
mov
test
xor
push
push
mov
jmp
and
sbb
pop
add
add
push
and
add
or
fstps
fwait
cmp
pop
push
mov
jmp
add
push
dec
dec
outsl
jl
pop
mov
es
mov
jmp
mov
pop
lods
jne
jnp
icebp
sub
pop
jmp
push
inc
sub
pop
jmp
enter
aaa
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
fadd
inc
jns
pop
jmp
insb
xor
xchg
pop
add
jmp
and
pushf
jmp
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
div
fs
int
xchg
ror
into
out
cld
test
or
add
shr
xor
sub
mov
sbb
xlat
add
jmp
test
cmp
dec
loope
hlt
sbb
jae
inc
aad
add
aad
fstpt
mov
jmp
push
mov
and
inc
push
nop
sub
jmp
mov
lret
test
cmpsw
pop
jmp
push
std
repnz
sar
lahf
in
mov
les
add
cmp
je
jmp
push
xchg
test
xor
jmp
imul
stos
or
push
and
fstps
fwait
cmp
jbe
in
add
push
dec
jmp
dec
outsl
jl
pop
mov
es
mov
mov
push
push
test
je
lea
dec
test
not
cld
pop
pop
mov
jmp
or
jmp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
jmp
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
add
push
push
jmp
cmp
xchg
pop
add
and
pushf
movsl
jp
insb
enter
jmp
sub
xor
pop
jmp
push
dec
jmp
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
mov
sbb
xlat
jmp
lods
jmp
loop
xor
cmp
dec
loope
jmp
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
mov
jmp
test
cmpsw
push
std
repnz
sar
lahf
in
mov
call
jmp
dec
mov
test
xor
imul
add
push
jmp
movb
fstps
mov
jmp
stos
fwait
cmp
jbe
in
add
sub
jmp
push
dec
dec
outsl
jl
pop
mov
add
add
push
mov
jmp
add
xlat
jmp
cmpb
pop
pop
jmp
inc
sub
mov
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
lds
dec
jmp
sub
daa
aam
jb
inc
jns
pop
jmp
insb
xor
xchg
pop
add
and
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
xor
push
push
xchg
inc
cld
pop
pop
xor
jmp
sbb
pop
fs
xchg
ror
into
push
jmp
or
add
addl
jle
sub
mov
push
cmp
add
sub
jmp
sbb
pop
push
jmp
xor
mov
jmp
gs
dec
loope
hlt
sbb
add
jmp
fidivrs
js
mov
jmp
mov
lea
nop
mov
rol
jmp
mov
rcll
test
inc
rclb
jmp
stc
ds
in
mov
mov
test
sbb
add
test
add
sbb
cli
stos
or
push
and
fstps
ja
jmp
dec
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
popa
xchg
popf
jmp
adc
loopne
pop
aas
or
jmp
push
xor
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
jmp
xor
xchg
pop
add
and
pushf
dec
jne
push
push
cmp
lea
test
mov
test
dec
mov
test
mov
xor
inc
cld
pop
pop
mov
jmp
xor
shr
aaa
mov
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
sub
cmc
jmp
mov
sbb
xlat
les
jmp
cs
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
add
jmp
test
data16
cmpsl
push
std
repnz
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
jmp
and
fstps
xchg
stos
fwait
cmp
jbe
in
jmp
add
push
dec
dec
outsl
jl
sub
es
mov
cmpb
jnp
icebp
push
inc
jmp
sub
scas
dec
fsub
mov
inc
je
pop
add
jmp
pop
aas
or
push
clc
shll
aaa
movsb
or
das
cmp
loopne
aam
pop
jmp
lds
dec
sub
daa
aam
jb
inc
jns
pop
insb
sub
jmp
xor
xchg
pop
add
and
xor
xchg
shr
lea
cmp
cld
pop
pop
ret
