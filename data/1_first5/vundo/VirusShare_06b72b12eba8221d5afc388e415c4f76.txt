push
xchg
sub
or
inc
mov
push
mov
push
xchg
jmp
sub
mov
shr
shl
and
mov
sub
nop
nop
nop
nop
nop
nop
mov
mov
jmp
and
mov
mov
mov
jmp
add
add
add
nop
mov
xor
mov
mov
mov
jmp
add
add
xor
mov
xor
sub
xor
mov
sub
push
pop
push
mov
push
mov
call
push
pop
shr
and
rol
ror
mov
mov
mov
andl
mov
jmp
push
xchg
xor
nop
and
nop
mov
addr16
lea
jmp
and
and
sbb
and
push
and
and
sbb
push
sbb
and
or
add
aas
add
add
add
call
xchg
call
push
pop
push
nop
call
xchg
jmp
and
shl
pop
jmp
jne
jmp
add
add
add
call
mov
call
push
pop
push
push
pop
call
xchg
jmp
movb
mov
incl
mov
jmp
add
add
add
push
xchg
and
and
rol
dec
ror
mov
push
push
pop
push
jmp
sbb
sbb
subl
push
jmp
daa
and
and
sbb
es
sbb
sbb
clc
pushl
and
sub
sub
shr
push
mov
add
push
and
mov
xor
add
pop
shr
or
xor
xor
or
dec
test
jne
pop
pop
call
nop
jmp
and
xchg
sub
xchg
mov
xchg
andl
xchg
jmp
add
add
add
add
loopne
inc
or
mov
add
test
pop
jmp
and
sbb
and
and
pop
and
xorl
jmp
add
add
push
mov
xor
nop
inc
mov
call
nop
jmp
add
add
push
nop
and
or
or
xor
mov
jmp
push
jmp
sbb
and
sbb
subl
pushl
and
mov
mov
xor
sub
push
mov
sub
shl
xor
ror
xor
and
rol
mov
mov
add
and
dec
test
jne
pop
pop
call
mov
test
jmp
and
and
pop
and
sbb
sbb
sbb
and
jne
sub
xchg
ret
jmp
sbb
sbb
sbb
jmp
and
and
and
push
sbb
sbb
sbb
push
sbb
and
and
sub
add
add
push
dec
sub
mov
ror
dec
pop
add
push
jmp
sub
and
push
sbb
es
and
incl
nop
push
xchg
call
xchg
xor
and
and
and
add
and
add
or
rol
or
mov
jmp
call
mov
dec
and
and
add
add
pop
xor
nop
mov
nop
sub
shl
sub
or
mov
mov
jmp
mov
mov
jmp
jmp
add
add
jmp
mov
xchg
jmp
add
add
and
or
inc
xor
mov
sub
mov
push
nop
push
xchg
push
xchg
call
xchg
jmp
push
mov
cmpl
xchg
push
jmp
sbb
daa
and
push
sbb
and
sbb
and
and
and
pop
and
sbb
sbb
and
pop
sbb
and
push
jmp
and
sbb
sbb
sbb
push
pop
and
and
and
pop
pop
pop
sbb
and
jmp
and
shl
mov
add
pop
call
nop
dec
xor
mov
rol
xor
mov
mov
xchg
mov
push
pop
mov
xchg
mov
xchg
ret
jmp
push
sub
sbb
sbb
and
sub
add
add
add
xchg
add
sub
mov
or
mov
mov
shr
sub
or
and
xor
mov
jmp
test
jmp
sbb
sbb
sub
and
sbb
es
and
daa
sbb
pop
pop
push
pop
daa
sbb
sbb
and
sbb
sbb
and
sbb
daa
push
sbb
and
adc
add
daa
and
sbb
push
pop
sub
sbb
and
pop
jmp
sbb
sbb
and
sbb
push
sub
sbb
sbb
test
push
add
jmp
test
jmp
and
sbb
sbb
daa
and
sbb
sbb
sbb
test
add
add
jmp
and
daa
sbb
add
pushl
xchg
call
mov
jmp
lea
jmp
and
and
sbb
sbb
call
xchg
test
jmp
sbb
and
and
es
push
and
sbb
daa
and
sbb
test
inc
sub
and
ror
ror
mov
sub
xor
or
pop
ret
jmp
and
pop
sbb
sbb
and
and
sbb
sbb
add
add
add
mov
jmp
and
sbb
sbb
sbb
and
and
sbb
cmp
mov
je
jmp
push
nop
push
jmp
and
xorl
jmp
add
mov
shl
sub
rol
dec
mov
sub
mov
movl
addr16
andl
mov
jmp
test
jmp
push
pop
and
sbb
add
add
mov
xchg
movl
mov
mov
add
shr
mov
jmp
add
add
add
push
xchg
add
dec
and
mov
jmp
andl
xchg
call
nop
push
jmp
push
and
sbb
sbb
xorl
push
jmp
and
es
sbb
daa
and
push
addl
push
jmp
sbb
and
sbb
add
sar
call
inc
and
inc
add
rol
add
shl
mov
xor
dec
test
jne
pop
pushl
sub
pop
call
xchg
jmp
mov
push
nop
push
xchg
jmp
jmp
inc
mov
jmp
add
test
loop
nop
add
xchg
jmp
xor
dec
xor
xor
mov
add
xchg
movzwl
jmp
sbb
and
and
sbb
sbb
jmp
pop
sbb
and
add
or
or
xor
pop
cmp
addr16
mov
jmp
and
and
sbb
and
inc
in
jmp
daa
push
and
push
push
sbb
sbb
lea
jmp
sbb
push
and
sbb
push
sbb
and
sbb
pop
pop
sbb
and
sbb
jmp
mov
jmp
and
push
and
and
sbb
pop
daa
daa
push
daa
sbb
sbb
sub
es
sbb
sbb
and
int
in
push
and
rol
shr
pop
add
add
jmp
cmp
mov
jne
push
mov
xor
nop
mov
jmp
and
pop
and
sbb
and
call
inc
ror
inc
inc
add
mov
shr
sub
add
or
and
pop
jmp
mov
mov
add
xchg
add
xchg
add
nop
test
jmp
and
and
sbb
sbb
and
sub
mov
jmp
es
sbb
and
and
and
and
sbb
and
mov
add
enter
or
mov
jmp
je
push
xchg
push
jmp
pop
sbb
and
and
sbb
sbb
and
es
sub
mov
jmp
out
mov
call
nop
mov
rol
add
xor
or
pop
pushl
xchg
push
jmp
sbb
sbb
daa
sbb
and
xorl
jmp
lea
jmp
sbb
and
sbb
sbb
and
sbb
mov
jmp
and
es
sbb
and
sub
ljmp
inc
and
rol
mov
movzbl
jmp
and
sbb
and
sbb
and
sbb
sub
and
sub
inc
xchg
jmp
inc
xchg
push
xchg
mov
xchg
mov
mov
lea
jmp
sbb
and
pop
sbb
and
sbb
sbb
sbb
sbb
call
addr16
test
jmp
and
and
pop
push
sbb
sbb
sbb
and
sbb
adc
add
pop
add
add
es
and
and
and
and
and
sbb
and
sub
sbb
sbb
and
and
sbb
sbb
or
add
jmp
shr
inc
dec
and
mov
and
add
add
mov
or
sub
add
mov
mov
xchg
jmp
ror
or
mov
mov
and
shl
sub
ror
pop
rol
shl
shl
xor
and
mov
xor
push
pop
push
xchg
pushl
xor
add
sub
pop
jmp
nop
jmp
sbb
pop
pop
and
pop
sbb
and
and
and
pushl
xchg
nop
jmp
daa
and
sbb
sbb
and
sbb
and
and
pop
sbb
pop
and
daa
and
aad
and
dec
or
ror
pop
sub
dec
pop
pushl
mov
ret
jmp
sbb
sub
sbb
sbb
daa
sbb
sbb
and
pop
and
pop
and
and
and
and
add
add
mov
addr16
andl
xchg
add
mov
mov
nop
test
jmp
sbb
sbb
and
and
and
and
sbb
sbb
sbb
lahf
add
add
add
je
adc
sbb
and
add
add
rolb
cmp
adc
pop
xor
pop
ret
jmp
sbb
sbb
pop
and
sub
sbb
es
and
sbb
pop
sub
daa
add
add
add
cmc
mov
call
nop
movl
addr16
push
jmp
sbb
xorl
pushl
mov
call
nop
or
shr
or
pop
ret
jmp
sbb
and
sbb
daa
and
sbb
add
add
add
leave
add
xor
mov
add
mov
and
or
mov
add
add
xor
mov
rep
jmp
daa
sbb
sub
sbb
and
sbb
sbb
ror
rol
and
add
pushl
shr
rol
ror
pop
or
add
mov
sub
nop
add
xchg
jmp
or
mov
shr
jmp
and
sbb
and
sbb
sbb
sbb
rclb
nop
mov
xchg
ret
jmp
and
and
pop
sbb
and
and
and
es
and
push
and
add
add
call
push
pop
test
jmp
and
sbb
and
push
push
sbb
sbb
sbb
sbb
and
sbb
sbb
push
je
call
xchg
test
jmp
sbb
sbb
and
push
pop
sbb
es
and
pop
sbb
push
and
test
addr16
pop
es
and
sbb
sbb
and
subl
xor
mov
jmp
mov
dec
add
shl
mov
mov
add
xchg
mov
xchg
xor
inc
inc
mov
jmp
ror
jmp
es
and
sbb
and
pop
call
mov
rol
jmp
and
sbb
sbb
sub
sbb
sbb
sbb
sbb
sbb
and
daa
es
pop
and
sbb
push
daa
sbb
push
popl
shr
rol
or
mov
and
pop
add
xchg
dec
jmp
and
sbb
pop
and
and
jne
call
mov
jmp
ret
jmp
daa
daa
and
es
and
daa
sbb
sbb
sbb
and
sbb
fucomi
or
add
mov
xchg
mov
ror
ror
and
mov
movsbl
jmp
pop
es
sbb
sbb
push
and
ret
or
and
sbb
and
sbb
xor
nop
incl
addr16
shr
mov
mov
xchg
test
jmp
sbb
and
pop
sbb
pop
daa
daa
sbb
jmp
cmpl
xchg
je
push
mov
inc
or
and
mov
sub
push
pop
shr
jmp
sub
and
sbb
and
sbb
sbb
and
and
sbb
sbb
sbb
and
and
sbb
sbb
nop
nop
nop
nop
nop
lea
jmp
daa
and
and
and
and
push
es
and
daa
daa
sbb
push
add
mov
nop
movzwl
jmp
push
sbb
and
sbb
sbb
sbb
and
and
sbb
ret
mov
mov
and
xchg
jmp
xor
and
dec
rol
mov
xor
or
xor
xor
sub
mov
rep
jmp
push
sbb
and
and
and
sbb
and
es
and
and
sbb
sbb
add
lock
imul
rol
xor
mov
add
mov
shl
inc
mov
add
addr16
mov
addr16
sub
add
sub
sub
mov
mov
movzwl
jmp
pop
and
push
and
and
sbb
es
and
sbb
sbb
add
add
jmp
sbb
push
daa
and
sbb
push
and
jmp
cmpb
xchg
mov
jmp
and
sbb
and
daa
sbb
and
sbb
sub
sbb
les
add
push
jmp
daa
sbb
es
sbb
es
and
add
add
jmp
and
sbb
pop
and
subl
push
and
sub
dec
or
add
mov
mov
or
dec
test
jne
pop
pushl
dec
pop
call
mov
test
jmp
sbb
and
daa
and
sbb
and
sbb
sbb
add
add
loopne
sbb
xorb
cld
jmp
mov
jmp
pop
sbb
daa
and
and
sbb
and
and
and
pop
sbb
sbb
and
es
jne
and
or
shr
add
mov
cmp
nop
je
jmp
lea
jmp
sbb
and
sub
es
sbb
and
sbb
push
and
and
push
lock
incl
add
movzwl
jmp
and
and
sbb
sbb
and
sub
sbb
pop
daa
sbb
inc
cld
xchg
add
nop
cmp
xchg
mov
jmp
sbb
and
pop
and
sbb
sbb
pop
daa
pop
sbb
and
sbb
pop
push
and
jl
jmp
je
movb
nop
jmp
movb
push
pop
leave
jmp
pop
push
sbb
pop
sbb
sub
daa
pop
sbb
and
sbb
and
pop
and
sbb
and
add
je
or
mov
push
popl
movl
mov
call
push
pop
or
add
or
and
add
add
jmp
inc
add
xor
mov
inc
mov
jmp
inc
xchg
inc
xchg
mov
nop
rol
shl
mov
ror
xor
pop
leave
jmp
and
sbb
push
sbb
and
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ret
jmp
daa
sbb
pop
sbb
sub
and
pop
pop
and
and
add
add
add
inc
cld
addr16
add
sub
mov
cmp
xchg
jl
jmp
movsl
mov
cmp
jne
and
xchg
add
xchg
add
mov
add
nop
jmp
sbb
ror
mov
xor
and
add
call
xchg
call
mov
jmp
xor
mov
jmp
shl
or
dec
mov
mov
jmp
pushl
ror
or
mov
inc
rol
pop
inc
xchg
jmp
dec
nop
lea
jmp
and
sbb
and
daa
and
and
sub
jg
xor
xor
ror
rol
mov
pushl
mov
sub
pop
jmp
mov
ljmp
test
jmp
and
sbb
sub
sbb
inc
and
jmp
sbb
sbb
and
sbb
sbb
daa
and
sbb
sbb
push
sbb
es
je
add
dec
and
sub
mov
sub
mov
mov
xchg
jmp
pushl
or
inc
mov
rol
pop
pushl
shl
add
inc
sub
pop
add
addr16
mov
mov
shr
mov
add
mov
cltd
jmp
and
sbb
sub
sbb
es
daa
and
sbb
jmp
push
mov
call
xchg
test
jmp
and
and
pop
and
sbb
sub
sbb
push
pop
and
daa
daa
pop
sbb
sbb
and
and
es
and
sbb
pop
and
and
sbb
sbb
sbb
and
and
test
add
push
jmp
and
and
inc
xor
dec
mov
call
mov
jmp
movzwl
jmp
and
and
sbb
and
mov
xchg
add
mov
and
sub
pop
add
and
pop
leave
jmp
and
pop
sbb
and
sbb
sbb
and
jmp
sbb
and
sbb
and
sbb
add
add
add
decl
jmp
sbb
sbb
and
and
sbb
and
sbb
sbb
daa
sbb
sbb
nop
nop
nop
nop
jne
add
mov
cmpl
addr16
jne
xor
shr
and
dec
sub
pop
or
mov
and
mov
mov
mov
add
xchg
jmp
sbb
ret
and
pop
lea
jmp
sbb
sbb
sub
and
and
sbb
sbb
sbb
push
jmp
push
and
and
and
and
xorl
push
nop
push
mov
call
mov
call
nop
jmp
xor
xor
and
pop
push
popl
rol
and
pop
leave
jmp
sbb
and
sub
sbb
sbb
and
sbb
push
and
pop
pop
and
sbb
and
push
sbb
sbb
es
push
pop
sbb
sbb
and
add
add
add
call
shr
jmp
and
and
sbb
pop
pop
push
sar
jmp
sbb
and
sbb
daa
sbb
sbb
pop
sub
shr
sbb
sbb
and
sbb
jge
jmp
sbb
and
sbb
and
sbb
sbb
and
or
jmp
daa
daa
sbb
and
and
and
mov
add
add
test
jmp
sbb
daa
sbb
and
sbb
es
pushl
inc
sub
xor
ror
and
pop
sub
shl
xor
dec
and
pop
shr
pop
push
popl
mov
shr
pop
leave
jmp
and
and
and
sub
sbb
ret
jmp
pop
and
sbb
sbb
push
es
and
sbb
and
sbb
add
add
add
mov
shlb
and
movzbl
jmp
sbb
daa
pop
and
and
sbb
pop
jae
lcall
shr
mov
mov
addr16
jmp
rolb
arpl
inc
and
push
pop
xor
xchg
inc
xchg
and
mov
mov
and
mov
and
push
pop
inc
xchg
inc
mov
shr
jmp
and
sbb
and
and
and
sbb
pop
daa
and
and
sbb
sbb
pop
sbb
sbb
es
sbb
push
cld
mov
sub
xchg
decl
jmp
sbb
sbb
push
pop
sbb
add
decl
test
add
test
jmp
and
sbb
and
sbb
test
add
xor
or
shl
xor
rol
mov
or
ror
or
ror
mov
sub
addr16
mov
xchg
nop
nop
nop
nop
nop
incl
push
pop
dec
mov
mov
jmp
and
and
sbb
sbb
pop
and
sbb
and
jne
jmp
mov
nop
mov
mov
jmp
jmp
and
pop
ror
inc
or
mov
mov
mov
sub
xchg
decl
jmp
and
and
es
and
and
push
daa
sbb
and
jne
jmp
pop
pop
add
push
jmp
imul
adc
and
sbb
sbb
es
and
es
sbb
jne
jmp
and
test
jmp
sbb
and
sbb
sbb
and
mov
jmp
sbb
sbb
and
sbb
push
es
and
pop
sbb
nop
nop
nop
nop
jle
mov
sub
or
mov
mov
add
xchg
add
xchg
dec
jmp
sbb
and
pop
push
sbb
and
jne
jmp
mov
add
add
lea
jmp
pop
sub
sbb
and
and
sbb
sbb
sbb
nop
nop
nop
nop
nop
call
nop
test
jmp
and
and
sbb
push
and
pop
and
and
and
sbb
jmp
test
jmp
sbb
and
sbb
sbb
sbb
sub
sbb
sbb
pop
sbb
sbb
and
and
and
es
and
sbb
and
jle
ror
jmp
and
sub
sub
cmp
add
xchg
nop
nop
nop
nop
nop
dec
jmp
sbb
and
and
and
daa
jne
push
jmp
sbb
and
sbb
and
xorl
pushl
mov
call
xchg
shr
mov
xor
sub
xor
mov
mov
nop
jmp
je
rol
sub
add
dec
mov
sub
mov
sub
mov
mov
nop
incl
xchg
dec
mov
mov
jmp
and
and
and
sbb
sub
and
daa
sub
sbb
mov
call
jmp
sub
xchg
jmp
dec
nop
dec
mov
shr
mov
inc
xor
mov
jmp
push
sbb
out
decl
mov
mov
and
rol
sub
sub
mov
inc
mov
pushl
mov
shl
inc
add
dec
pop
jmp
movzbl
jmp
sbb
sbb
pop
and
sub
sbb
and
and
loopne
jmp
sbb
and
sbb
and
daa
daa
and
and
add
mov
incl
mov
lea
jmp
push
and
and
sbb
and
and
and
and
and
and
sbb
daa
es
daa
pop
dec
add
inc
ror
add
mov
call
nop
cmp
mov
jmp
xor
sbb
sbb
sbb
and
and
pop
and
sbb
and
daa
sbb
and
clc
mov
jmp
jb
inc
xchg
cmp
mov
jb
jmp
xor
fstl
leave
call
mov
or
mov
inc
shr
mov
mov
xchg
jmp
inc
mov
cmp
mov
jae
inc
addr16
inc
xchg
test
jmp
and
and
and
and
and
je
and
add
add
mov
nop
nop
nop
nop
nop
inc
and
or
inc
mov
sub
push
pop
mov
addr16
incl
mov
dec
xchg
mov
jmp
sbb
push
sbb
sbb
sbb
push
and
pop
and
and
push
and
and
test
je
or
jo
shr
sbb
sbb
sbb
sbb
sbb
je
or
add
rol
ror
mov
or
and
or
mov
jmp
lahf
sub
inc
nop
jmp
mov
sub
or
mov
inc
ror
mov
add
add
mov
mov
xchg
incl
xchg
jmp
add
jno
ret
sub
nop
jmp
jmp
leave
in
incl
nop
mov
nop
xor
mov
cmpl
mov
jmp
adc
mov
jle
xor
mov
sub
mov
shr
jmp
sbb
sbb
sbb
sbb
pop
and
and
pop
es
sbb
daa
sbb
sbb
and
and
sbb
sbb
sbb
and
sbb
sbb
and
sbb
and
out
je
shr
xor
mov
xor
ror
add
add
pop
sub
xchg
sub
or
shr
add
and
pop
and
and
mov
mov
ror
shl
shl
shl
pop
ret
jmp
sbb
and
and
sbb
and
and
add
add
lea
jmp
and
and
and
sbb
sbb
sbb
mov
mov
mov
jmp
sbb
pop
and
and
sbb
and
jmp
pop
shr
xor
mov
and
xchg
cmp
push
pop
jne
nop
nop
nop
nop
nop
and
push
pop
add
mov
add
push
pop
nop
nop
nop
nop
nop
add
mov
mov
ror
xor
mov
mov
add
inc
xchg
inc
push
pop
nop
nop
nop
nop
nop
decl
jmp
push
daa
sbb
es
sbb
daa
pop
jne
add
mov
cmpl
mov
jne
call
mov
add
rol
mov
test
jmp
push
sbb
and
sbb
sbb
and
push
sbb
es
nop
nop
nop
nop
nop
pushl
nop
pushl
mov
call
xchg
call
xchg
call
nop
call
mov
pushl
push
pop
push
mov
nop
nop
nop
nop
nop
call
xchg
and
add
or
sub
rol
mov
nop
nop
nop
nop
nop
push
jmp
pop
addl
call
push
pop
nop
nop
nop
nop
nop
push
jmp
sub
push
sbb
push
daa
addl
mov
xchg
call
xchg
mov
xchg
nop
nop
nop
nop
nop
add
sub
and
sub
mov
mov
sub
xor
xor
mov
add
addr16
test
jmp
sbb
daa
and
sbb
es
daa
and
and
and
and
je
inc
sub
inc
add
inc
mov
add
push
pop
jmp
nop
nop
nop
nop
nop
xor
add
xor
rol
or
mov
add
mov
push
push
pop
call
addr16
cmp
mov
mov
jmp
es
sbb
sbb
sbb
sbb
and
sbb
sbb
pop
sbb
and
je
xor
sub
and
mov
mov
test
jmp
and
and
and
and
sbb
daa
sbb
sbb
daa
daa
and
sbb
and
pop
and
nop
nop
nop
jne
nop
nop
nop
nop
nop
shr
or
or
mov
pushl
and
shl
rol
xor
sub
pop
inc
or
ror
inc
mov
add
nop
nop
nop
nop
nop
nop
add
addr16
jmp
jns
nop
nop
nop
nop
nop
movzwl
jmp
and
sbb
and
daa
and
adc
dec
and
mov
add
mov
add
xchg
push
nop
pushl
push
pop
call
nop
nop
nop
nop
nop
nop
mov
xchg
add
mov
add
addr16
nop
nop
nop
nop
nop
sub
and
mov
xor
mov
test
jmp
pop
pop
and
sbb
push
daa
jne
add
mov
cmpl
mov
jne
call
mov
mov
addr16
nop
nop
nop
nop
nop
sub
mov
sub
add
mov
push
sub
shl
pop
add
mov
nop
cmp
xchg
jne
nop
nop
nop
nop
nop
add
dec
mov
add
nop
rol
and
and
add
add
pop
mov
mov
pushl
rol
and
pop
add
mov
nop
nop
nop
nop
nop
shr
rol
pop
sub
inc
shr
and
or
pop
leave
jmp
and
sbb
and
push
pop
and
jmp
pop
sbb
sbb
daa
sbb
sbb
push
pop
and
daa
and
add
add
add
add
out
add
clc
xor
add
add
add
add
add
add
into
xor
add
xor
add
add
add
add
add
add
add
or
add
add
add
add
ss
add
inc
inc
add
add
add
into
inc
add
loope
add
add
add
cli
inc
add
push
inc
add
sbb
add
add
add
inc
add
add
add
pop
inc
add
add
add
popl
insl
insl
imul
add
outsl
inc
insb
outsl
jae
add
dec
dec
dec
cs
insb
add
je
jb
arpl
jae
addb
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
stos
add
outsb
jae
popa
je
dec
gs
popa
add
mov
jo
je
push
popa
addr16
add
mov
fs
arpl
inc
add
inc
push
xor
cs
insb
add
or
push
gs
arpl
imul
add
add
arpl
inc
inc
dec
xor
cs
insb
add
add
imul
js
add
insl
fs
xor
cs
insb
add
clc
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
inc
inc
push
inc
push
dec
xor
cs
insb
jbe
sahf
and
and
in
js
fcomps
mov
lock
loopne
into
ret
scas
mov
pop
into
adc
or
pop
sahf
jmp
sub
mov
push
gs
into
ret
test
mov
iret
adc
mov
add
add
cmp
xor
cmp
cmp
ds
aas
and
dec
aas
dec
aas
data16
in
xor
xor
jg
dec
cmp
out
cmp
cmp
xor
add
outsb
xor
cmpsb
cmp
ss
ss
cmp
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jp
stos
cmp
add
add
xor
xor
xor
xor
sti
xor
xor
xor
xor
add
add
popf
loope
incl
