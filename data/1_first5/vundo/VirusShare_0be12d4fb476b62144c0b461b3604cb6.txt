add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
lds
add
js
add
mov
add
js
add
bound
add
add
push
sub
add
add
js
add
sbb
sub
add
add
add
add
add
outsb
add
xchg
add
das
add
jl
add
jl
add
jl
add
jl
add
jl
add
add
add
mov
add
js
add
bound
add
add
push
sub
add
add
sbb
add
add
jl
add
jl
add
inc
outsl
add
jl
add
fisubrs
add
aas
add
jl
add
add
add
jl
add
jl
add
jl
add
jmp
add
std
add
js
add
and
add
add
add
aas
cmp
add
add
add
inc
add
cmp
inc
add
arpl
ja
imul
jne
outsb
add
imul
cmp
dec
add
inc
add
add
add
add
outsl
add
je
jb
outsl
add
add
popa
add
add
add
jne
jb
jae
outsl
add
jae
add
push
add
push
add
and
push
imul
jb
je
arpl
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
movl
call
push
pushl
call
push
mov
pushl
call
mov
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
push
pushl
call
mov
push
push
call
push
push
push
mov
call
lea
push
push
push
call
add
mov
mov
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
push
push
push
call
pushl
pushl
pushl
call
add
pop
pop
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
push
pushl
call
lea
push
call
pop
push
lea
push
push
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
push
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
call
mov
xor
push
push
mov
push
push
mov
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
ret
mov
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
push
movl
movl
mov
movl
call
ret
push
mov
sub
pushl
call
pushl
movl
movl
movl
pushl
movl
movl
movl
movl
movl
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
push
lea
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
cmpl
push
mov
je
cmp
je
lea
push
push
call
call
mov
xor
xor
call
mov
xor
call
movzwl
mov
mov
mov
movzwl
xor
movzwl
xor
lea
push
call
mov
xor
pop
xor
test
jne
mov
not
mov
pop
mov
or
mov
leave
ret
push
mov
sub
orl
mov
inc
mov
pushl
pushl
pushl
push
push
call
add
mov
cmp
jbe
andl
cmpl
jne
call
push
push
push
pushl
call
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
push
call
mov
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
call
mov
add
cmp
jb
mov
leave
ret
add
add
fdivl
orb
jo
gs
add
add
add
add
add
add
add
add
add
add
je
add
add
xchg
inc
add
add
add
add
cmp
fadds
sbb
filds
arpl
jae,pn
push
arpl
je
cmpsb
dec
add
outsb
jae
jb
inc
aaa
add
mov
ret
mov
adc
mov
lea
inc
testb
cs
rcrl
adc
clc
add
dec
pop
push
adc
jge
out
mov
lea
decl
mov
gs
inc
rolb
jbe
cmpl
add
adc
xor
push
push
call
cmp
add
lea
adc
adc
mov
lea
add
adc
mov
clc
inc
roll
add
scas
clc
incl
cmp
add
add
push
lock
add
add
add
add
add
add
dec
scas
add
clc
add
add
push
imul
shlb
outsl
imul
arpl
outsl
inc
repnz
inc
push
popa
add
inc
push
popa
gs
pushf
pop
add
add
gs
addr16
push
dec
jb
or
imul
arpl
add
add
add
jl
in
inc
pop
testb
add
movsl
xlat
mov
cltd
imulb
mov
sbb
mov
lret
ret
mov
loopne
add
sti
add
or
daa
in
adc
les
stc
jge
fdivrp
enter
scas
out
adc
out
inc
push
cld
jmp
cs
shlb
xchg
testb
fstp
into
xchg
pusha
push
mov
inc
in
pop
pop
adc
aam
pop
cmpsl
fidivl
es
js
scas
jmp
mov
popa
dec
and
mov
add
flds
pop
jo
cld
cmp
daa
mov
and
ja
mov
mov
int3
sbb
aas
popa
inc
jnp
out
cli
adc
loopne
enter
xchg
mov
movsl
jbe
mov
cli
push
mov
lahf
pop
pop
xchg
xchg
insb
inc
adc
mov
pop
ds
mov
xchg
hlt
cmp
jge
int
lds
inc
sti
fstps
push
push
jp
dec
in
pop
mov
ficomps
add
cli
fldt
popf
sub
and
cmp
sahf
add
addr16
dec
setns
lods
mov
add
es
insl
inc
and
scas
push
jge
je
stos
and
cmc
and
inc
add
sub
xor
push
jnp
mov
jmp
jge
adcb
push
push
and
out
cmp
cld
repnz
movsl
jp
out
aas
push
aaa
psubusw
pop
mov
pop
repz
int3
xor
clc
sub
test
lahf
ljmp
repz
add
pusha
mov
les
outsl
inc
pop
cmpsb
mov
fwait
sbb
adc
push
in
aam
fisubl
enter
cs
jo
je
mov
mov
cltd
xchg
divb
adc
out
ja
sbb
mov
push
cmpsl
xor
sbb
jle
and
mov
popa
flds
int
repnz
pop
jns
lcall
sar
cmp
call
sbb
jnp
xchg
jg
or
push
jns
lea
lock
push
mov
mov
shll
mov
sub
jmp
enter
mov
push
mov
shld
dec
ss
rcrl
sbb
ljmp
mov
mov
stos
cmp
mov
andb
mov
pmaxsw
jle
test
cli
xchg
lods
xchg
das
jno
sbb
dec
mov
fisubrl
jnp
in
xchg
rclb
das
xor
test
pusha
sub
int3
push
enter
mov
dec
mov
stos
mov
sbbb
add
movsl
mov
sbb
aam
pop
or
sbb
stc
pop
and
and
xor
leave
in
push
pop
push
dec
cmc
notl
mov
jb
bt
mov
pmullw
aam
xchg
and
and
jmp
and
mov
arpl
aas
cmp
mov
lock
test
mov
xor
sbb
mov
js
mov
fnstsw
add
out
jl
xchg
cmpsl
lret
out
dec
rclb
movsl
fisubs
stos
add
xchg
aas
stos
fbstp
loop
pop
cli
sbb
or
jne
cmc
rorl
loope
mov
mov
test
jnp
nop
fpatan
mov
outsb
jle
mov
aaa
mov
gs
xchg
xor
shrl
push
add
repz
cmpsl
xchg
fisubs
imul
cli
push
lcall
mov
mov
xchg
stos
xor
mov
psrlq
or
out
jbe
sub
pushf
insl
cmpsb
pusha
mov
lock
data16
pop
add
dec
inc
sbb
testb
sbb
sbb
stos
jmp
xchg
mov
sub
cmpsb
and
in
stos
mov
outsl
sbb
out
data16
ret
push
or
jmp
and
dec
mov
push
xor
cmp
clc
dec
je
and
fists
pop
into
push
or
lds
xchg
cmp
pop
dec
mov
mov
fiadds
aaa
je
int
cmpsb
jecxz
cwtl
arpl
lcall
mov
xchg
jb
ss
popa
xor
testb
test
stos
stos
scas
cmp
fists
cmp
orl
int
jae
add
insl
dec
pop
jb
rclb
setnp
arpl
sub
repnz
lret
outsl
dec
ss
ds
or
mov
je
add
jo
cmp
cmp
out
lods
adc
mov
iret
or
lds
xchg
mov
movsl
sbb
mov
test
sub
cmpb
cmpb
push
lds
jle
mov
test
ret
jge
cmp
iret
xchg
out
inc
movsl
adc
imulb
adc
outsl
pop
loopne
or
lods
dec
cmp
inc
mov
jbe
in
insl
sahf
das
cltd
jp
outsb
sub
insl
or
xchg
stos
sbb
out
data16
push
cmp
adc
pop
and
jp
mov
cld
xchg
adc
cmp
or
cwtl
xor
inc
dec
ljmp
push
xor
push
aas
inc
pushf
lods
fcom
outsb
in
inc
aam
cmp
or
movl
and
sbb
cltd
push
mov
cmp
aaa
cmpxchg
jg
movsl
mov
or
faddp
fcoms
repz
or
and
out
mov
inc
push
mov
test
xchg
pusha
add
dec
xor
sub
xchg
ret
iret
movsl
sbb
jbe
in
xchg
lods
mov
repnz
repz
lahf
jcxz
cmp
dec
sub
mov
fildll
fdivrl
cs
add
mov
and
cmp
ss
inc
dec
xor
jge
arpl
mov
or
mov
and
orb
int3
imulb
push
dec
mov
mov
sti
dec
pusha
xlat
loope
cld
and
push
addr16
sub
aas
inc
pop
mov
pop
rorl
mov
sub
arpl
pushf
jle
cmp
jge
movsl
mov
insb
jmp
lods
mov
lret
gs
push
out
inc
subb
mov
push
sahf
cmp
cmp
add
ja
mov
popa
xlat
or
xor
dec
pop
repz
fnstsw
sub
push
mov
arpl
popf
in
mov
push
mov
push
mov
jns
dec
fldl
pop
add
addl
add
arpl
sbb
jno
or
mov
mov
mov
mov
push
adc
sbb
pushf
test
dec
hlt
lods
mov
xor
jae
daa
sbb
and
sub
adc
outsb
mov
xchg
iret
sbb
mov
outsl
and
subl
outsl
dec
inc
mov
lahf
add
nop
mov
arpl
xor
leave
mov
nop
dec
xchg
aas
sbb
mov
sbb
hlt
xchg
lds
dec
push
pop
iret
dec
pop
test
mov
popf
mov
jmp
cmpsl
out
mov
pop
lcall
jo
dec
pushf
adc
jbe
cs
fstps
fstl
xchg
push
cld
repnz
mov
mov
inc
cli
push
xchg
addr16
pushf
ja
dec
into
sub
fdiv
cmp
icebp
and
shrl
mov
ret
adc
std
lock
lahf
loope
daa
sub
fcmovu
sbb
push
lret
dec
add
mov
and
adc
and
test
mov
sbb
xchg
mov
test
mov
mov
lretw
out
pop
idivb
idiv
jp
xchg
call
iret
out
stc
cli
xor
pop
xor
lock
pop
jbe
aad
jns
xlat
fidivrl
xchg
fmul
rorl
and
scas
mov
and
mov
mov
push
jmp
das
subb
xorl
push
repz
sub
enter
in
ret
pop
data16
xchg
lods
push
sar
xchg
popf
mov
add
pushf
addr16
adc
ljmp
filds
sub
lahf
add
jne
and
cltd
add
enter
js
or
inc
arpl
push
es
insl
mov
mull
sub
inc
roll
inc
mov
mov
xor
cmp
cmp
bound
jmp
arpl
jle
lock
popf
sub
adc
mov
xor
adc
daa
sti
dec
jmp
enter
out
aam
popf
lret
mov
inc
out
in
aam
imul
or
push
fiadds
sbb
mov
lret
lcall
sarb
addr16
out
arpl
fs
push
addr16
int3
hlt
and
pusha
es
mov
testl
add
std
jbe
or
cld
cmc
add
cmp
out
outsl
dec
fwait
sbb
mov
pop
es
sahf
jge
insl
mov
adc
sub
scas
out
pop
sub
loope
push
mov
push
xchg
fisttpl
into
mov
sub
pop
sub
adc
pop
xchg
movsb
adc
sarl
sub
add
inc
daa
push
insl
inc
outsb
iret
sub
adc
je
imull
into
xor
test
sub
in
lcall
jns
xor
push
stos
cmpsb
clc
std
in
ss
pop
lods
idivb
movsb
test
sbb
dec
jnp
fistl
ss
cmp
xchg
mov
sbb
idiv
out
adc
push
xchg
xlat
sub
shll
push
xchg
pop
dec
add
js
je
and
enter
dec
rcr
xor
xchg
pop
enter
in
sbb
mov
js
sbb
jno
aas
sub
xchg
dec
xor
jno
std
cmp
popa
cmp
sub
addr16
mov
inc
jne
add
and
add
popa
mov
xchg
or
mov
or
cltd
add
fwait
add
jb
mov
mov
aaa
int
ds
pusha
mov
aam
sti
adc
shrw
pop
push
std
daa
fincstp
sub
outsl
dec
lods
push
into
mull
add
stos
scas
mov
leave
enter
push
push
icebp
fldenv
xlat
insl
outsl
test
sahf
cmp
sbb
in
in
mov
mov
subb
push
arpl
add
movsb
fdivs
iret
out
sub
fnsave
outsl
out
sti
hlt
arpl
test
popf
lock
les
push
out
xor
pop
decl
sti
jo
rclb
pop
push
sbb
mov
sbb
imul
scas
mov
repz
xor
push
adc
in
and
mov
xor
sub
scas
sti
add
cld
idiv
fildl
push
mov
repnz
mov
mov
push
mov
inc
into
push
fs
jbe
mov
loopne
outsl
mov
mov
ljmp
pop
push
icebp
outsl
cmp
sbb
out
and
dec
add
mov
daa
inc
add
out
or
add
lcall
sub
jae
pop
add
subl
sbb
or
and
aam
sbb
mov
outsl
inc
cmp
popa
jl
mov
lea
test
outsl
mov
repnz
mov
push
push
stos
in
std
lret
xor
adc
arpl
mov
insl
or
mov
xchg
and
test
sub
pop
jns
cmp
push
sub
or
push
dec
mov
and
lret
cmp
push
outsl
mov
dec
iret
pop
ja
leave
nop
imul
rcrl
mov
idivl
pop
scas
jp
sbb
adc
or
notl
dec
fcmove
lahf
jae
cmpb
xor
xor
test
push
jae
fcomps
xchg
pop
fildll
jmp
inc
sub
pop
mov
rcrl
int3
pop
inc
lods
or
and
xor
or
in
leave
cmp
push
sbb
push
lds
cld
mov
jnp
scas
shll
std
cmp
cli
adc
mov
push
out
xchg
jae
mov
push
stos
scas
stc
outsl
in
out
and
push
out
xchg
or
cmpsb
dec
sbb
fisttps
cmp
nop
test
push
dec
sbb
mov
pop
mov
mov
shrl
push
pop
dec
fwait
cmpsb
mov
cwtl
ss
add
or
pop
jbe
mov
lahf
cmp
ss
and
stc
fisttpl
fidivs
notl
push
add
xchg
das
cs
mov
roll
dec
mov
dec
lret
test
add
mov
aam
notl
pusha
push
test
sbb
gs
dec
mov
cmp
mul
rol
jnp
andl
dec
cs
outsl
aaa
cmp
jmp
jns
mov
adc
into
add
cmpb
adc
in
push
fistpll
sahf
rolb
add
std
leave
and
rolb
test
out
push
jp
pop
adc
jb
ja
adc
jmp
sbb
int3
data16
pushl
jno
jge
fs
dec
jecxz
in
loopne
mov
dec
data16
jmp
mov
pop
xor
fsub
fucomip
ret
pop
mov
pop
and
xchg
sub
jo
push
xchg
mov
sub
xchg
in
xchg
int3
ja
cltd
in
jg
xchg
mov
pop
shrb
lahf
sub
inc
mov
lods
pop
dec
jo
int3
or
pushf
and
stos
mov
push
ficoms
jle
scas
sbb
iret
dec
daa
popa
or
shll
jp
xor
push
inc
add
jle
xor
enter
lea
cmp
xor
adc
lcall
bound
nop
aam
es
daa
outsl
scas
leave
mov
loop
daa
adc
mov
jnp
cli
popf
lds
icebp
out
loop
and
add
mov
add
xchg
xor
subb
nop
ds
popa
imul
xor
data16
pop
dec
lds
sbb
mov
fistpl
repz
fisttps
into
inc
cs
into
movsl
push
daa
jns
aam
push
shl
pop
mov
adc
or
ja
xor
sub
mov
jns
sub
adc
stos
xor
mov
rcrb
dec
pop
cvtpi2ps
pop
xchg
xchg
leave
jp
add
mov
lret
xchg
fs
mov
jmp
cmp
fucompp
dec
sbb
or
cmp
aaa
push
mov
dec
fbstp
and
add
cld
jge
dec
sbb
mov
xor
inc
sub
aam
in
cmpsb
in
sub
sbb
sbb
aas
scas
in
xchg
xlat
cld
adc
cmp
and
stos
les
outsb
outsb
push
daa
push
jge
push
or
dec
dec
mov
clc
mov
fists
xchg
scas
mov
xchg
lock
mov
inc
or
dec
push
jb
add
je
stc
cli
cli
ret
add
clc
daa
mov
daa
xchg
adc
aad
inc
int3
cmpsb
xlat
inc
jnp
lock
inc
movb
adc
out
push
and
xchg
mov
xchg
ror
mov
xchg
out
xchg
dec
lods
je
add
push
repnz
test
test
sbb
inc
xor
lahf
lret
das
fiaddl
xor
cmpsl
push
das
inc
into
mov
shl
in
mov
xchg
test
int3
mov
sbb
test
ret
inc
push
adc
add
and
pop
pop
jle
xor
mov
mov
icebp
or
xor
hlt
add
mov
hlt
into
jo
lds
mov
add
cltd
setb
push
sbb
dec
sahf
fdiv
loopne
mov
mov
mov
jle
cmpsl
push
jae
jl
sti
pop
add
inc
mov
adc
and
jecxz
aaa
call
cs
test
push
or
lret
mov
xchg
pop
add
push
cmp
test
std
inc
push
bound
pmaxsw
idivb
sub
pop
pop
adc
pop
pushl
fstps
mov
shll
movsl
and
fidivs
addb
jb
ret
lods
loopne
add
push
push
shrb
inc
jg
pop
sub
push
push
rcrl
adc
jno
add
xchg
loope
popa
sahf
and
lret
jnp
jne
push
xor
sub
je
xor
dec
adc
sarl
movsb
push
add
mov
xchg
stos
or
stos
lods
ja
js
mov
stc
ljmp
sahf
ss
mov
xor
cmpsl
push
jns
sbb
xchg
sti
jecxz
push
arpl
mov
test
push
mov
insb
inc
and
jmp
out
gs
int
pop
shll
and
and
fiadds
test
fs
add
rolb
addr16
jg
lods
mov
fisttpll
mov
mov
lock
in
add
out
addr16
movsb
jne
mov
not
fwait
xor
sbb
or
cwtl
adc
xchg
ffreep
jne
xor
sub
adc
fisttpll
ret
jmp
gs
pop
lret
test
jmp
gs
mov
outsl
movl
fnstcw
lods
sub
xor
mov
fcmovnb
lods
stos
adc
outsb
imul
enter
rolb
xor
mov
push
lret
pop
sarl
lcall
pop
daa
jecxz
repnz
mov
movsb
movsb
dec
xchg
fbld
mov
sbbb
adcb
int
int
push
mov
lret
pushf
mov
divl
dec
xchg
lock
cmp
adc
mov
out
nop
mov
jmp
push
mov
arpl
xor
in
pop
clc
sti
cltd
nop
and
and
repz
insl
out
xchg
cmp
cmp
adcl
mov
stos
outsb
rclb
je
or
xorb
outsb
or
in
mov
loop
add
add
add
or
jl
in
push
add
add
add
test
add
add
fadds
add
add
add
add
and
add
add
add
add
add
add
add
add
dec
push
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
pop
lock
inc
add
add
pop
and
and
outsl
and
les
outsl
dec
xor
add
add
add
pop
add
add
aam
or
add
or
add
add
add
cmpsb
sbb
sbb
mov
xor
add
and
jb
push
dec
inc
js
imul
outsb
or
cld
stc
xor
sti
mov
dec
inc
in
jmp
fdivr
or
decl
dec
jmp
ret
add
adc
leave
dec
mov
mov
mov
mov
dec
in
add
adc
sbb
add
adc
movsb
push
inc
cld
stos
aam
rolb
adc
loopne
mov
mov
lea
pop
add
jmp
std
pop
std
je
push
xor
movsl
fwait
rcll
or
call
loopne
lock
push
adc
loopne
add
dec
jne
sarb
jo
test
add
push
add
js
and
je
add
add
add
add
xchg
sbb
sbb
push
add
cmp
cmp
out
add
sbb
jae
outsl
gs
insl
insl
add
inc
je
add
movsl
outsb
daa
inc
inc
outsl
gs
imul
jae
insb
je
aad
insb
imul
inc
push
jne
gs
jae
jnp
add
jae
loopne
insb
add
add
add
add
je
add
add
mov
jge
out
das
addr16
idivl
mov
xchg
mov
jg
mov
cmp
dec
clc
stc
je
les
inc
lods
dec
jle
or
adc
loope
mov
aas
jle
push
fwait
pusha
rol
cli
add
and
aad
js
sub
stos
dec
inc
pop
pop
dec
inc
jecxz
fcoms
stos
andl
pop
imul
cmp
cmpsl
inc
daa
stos
pop
mov
mov
jb
mov
setno
push
mov
cmpb
shrl
xor
jecxz
fld
and
ret
out
nop
shlb
pop
sub
mov
pushl
mov
mov
pop
add
imul
push
jne
jo
fwait
in
les
addr16
mov
adc
data16
cli
sti
bound
mov
pop
sbb
adc
push
sub
push
pop
hlt
arpl
pop
outsb
test
and
push
jns
mov
push
sub
mov
fildll
xor
out
mov
or
ficoms
inc
int3
push
cmpsb
lods
xchg
repz
hlt
add
jne
mov
in
movsb
popa
in
cltd
push
pop
dec
flds
lock
sarb
add
out
dec
xchg
mov
test
cmp
add
fbstp
lds
add
pop
adc
push
popf
test
mov
cmp
out
aad
jmp
push
outsl
loopne
movsb
mov
out
jg
cmp
dec
or
and
loopne
cwtl
mov
pop
mov
leave
mov
and
test
shl
mov
popa
ja
pop
jge
xor
repnz
mov
test
ljmp
push
xlat
pop
test
sbb
shlb
add
sub
sub
roll
pop
arpl
cmp
scas
movsb
inc
cwtl
fimull
push
mov
mov
repnz
mov
repz
aaa
cltd
adc
jb
aaa
icebp
xchg
jb
or
fdivrs
push
and
or
mov
fsubr
addr16
inc
mov
popa
mov
das
stos
and
in
add
pop
inc
fsubs
inc
add
int3
adcl
xor
mov
lods
jge
es
test
test
jmp
sub
xchg
pop
das
jae
xchg
mov
imul
idivl
and
sub
add
xchg
mov
push
mov
mov
jns
cli
mov
mov
xor
inc
scas
imul
es
push
in
inc
or
test
mov
fildll
lock
xchg
jmp
loope
cld
cld
xorb
js
out
adc
out
scas
xchg
pop
jbe
ds
push
hlt
push
fnsave
adc
or
inc
pusha
outsl
jp
pop
inc
jae
jae
cli
xchg
mov
scas
mov
mov
cmp
jns
xchg
xor
xor
mov
mov
fcoml
aas
fcmove
mov
out
test
leave
mov
push
mov
int
dec
push
outsl
pop
je
rorb
xor
ljmp
mov
loopne
jbe
cmc
popa
push
stos
sbb
dec
outsb
mov
jmp
sarl
cli
sub
call
iret
bound
xor
rclb
xchg
mov
cltd
push
sub
xchg
fwait
scas
dec
adc
add
adc
clc
mov
sbb
pop
movsb
lods
stos
jo
mov
xchg
adc
divb
or
out
jmp
push
popa
jp
xchg
lret
mov
insl
test
test
popf
scas
les
inc
scas
xor
daa
mov
pop
mov
jecxz
xor
fildl
jl
out
ret
push
aaa
jl
jmp
lods
test
mov
lds
dec
es
jg
cwtl
add
scas
inc
nop
pop
dec
insb
sti
arpl
imul
push
sub
repz
push
or
adc
aas
fisubrl
jbe
insl
divb
ljmp
icebp
nop
hlt
cmpsb
lods
sub
sbb
cmp
jb
pop
adc
lret
mov
stos
cmp
mov
mov
jle
pop
mov
sbb
jge
add
push
and
in
int
mov
daa
fadd
out
push
push
ds
js
loopne
jmp
test
push
push
sbb
jmp
jns
dec
sarb
sbb
nop
das
xorl
xlat
xchg
inc
dec
xor
repnz
cs
dec
mov
shlb
push
lock
and
negl
sub
or
mov
and
push
inc
xchg
cltd
mov
xor
into
sbb
cwtl
negl
icebp
push
pop
push
jb
bound
pop
inc
or
fwait
sub
les
pop
jmp
adc
aam
arpl
in
pop
jmp
hlt
scas
and
hlt
sahf
mov
outsl
mov
adc
cli
xchg
mov
lahf
call
lods
scas
and
stc
push
lahf
stos
popf
pop
bound
movsb
ja
fistl
xor
push
outsb
cltd
or
das
test
sti
push
idivw
sti
mov
jnp
call
mov
sub
jecxz
scas
push
leave
pop
xchg
add
es
mov
mov
icebp
mov
pop
mov
dec
add
sub
or
jg
pop
inc
icebp
pop
and
cmp
cs
sbb
or
ret
push
jle
aas
scas
arpl
jbe
cld
pusha
mov
and
repz
xrelease
jmp
sub
insl
mov
cli
popf
jae
xor
js
fdivrp
push
fisubl
mov
out
outsl
shlb
int
xor
inc
inc
add
insb
adcl
adc
out
adc
mov
pop
push
punpckhwd
nop
fs
jbe
cmp
mov
mov
pop
sub
cmpsl
cmpsl
push
das
adc
movsl
int3
inc
or
mov
aam
push
dec
dec
pop
dec
cmp
jb
push
idiv
test
push
addl
mov
enter
sub
mov
movsl
jnp
jle
add
push
mov
xchg
inc
push
sub
outsl
adc
insb
cmp
jne
inc
sahf
or
pushf
aam
mov
fwait
sbb
and
int3
push
dec
mov
pop
js
pop
pushl
pop
pop
stos
inc
sub
cmpsb
std
mov
push
push
lret
dec
and
into
xor
dec
cmp
inc
fs
into
jns
divl
cmp
dec
xchg
adcb
xchg
jnp
test
ss
in
fs
test
xchg
mov
lods
jbe
mov
mov
rol
lret
and
jecxz
lret
adc
loopne
in
lret
sub
mov
aaa
jecxz
and
push
sub
sahf
mov
rol
outsl
lcall
xor
pop
push
xor
mov
mov
xchg
bound
lahf
test
adc
es
xchg
dec
outsb
lret
xlat
dec
nop
sub
xor
int
push
adc
push
push
push
dec
add
ja
andb
and
repnz
dec
out
xor
testl
cmp
sbb
mov
sahf
and
cmpsb
in
lock
js
mov
mov
push
pop
cmp
push
std
das
mov
cmpsl
mov
adc
mov
xor
repnz
sbb
cwtl
ds
add
pop
call
call
push
inc
push
test
inc
lcall
cmc
dec
add
pop
test
mov
cld
mov
fildl
xchg
pop
mov
arpl
pushf
xorb
test
ror
jp
nop
shrl
addr16
mov
imul
bound
push
rorl
jecxz
lock
dec
outsl
cmp
add
cwtl
pop
and
pop
pop
sub
push
cmp
stos
and
sar
sbb
dec
dec
sbb
enter
dec
je
jns
popf
push
movsl
out
movsb
cs
loop
call
inc
xchg
test
dec
int
xor
xchg
cld
or
iret
stos
in
mov
cmpsb
ljmp
xor
hlt
ljmp
xchg
inc
aas
out
out
xchg
mov
lock
cmp
iret
adc
mov
les
add
shl
mov
int
xor
add
mov
cld
lds
pop
outsl
mov
stos
mov
enter
pop
subl
iret
int3
sub
cmp
xor
ss
jae
lcall
lret
pop
sub
lods
std
shlb
jae
add
pop
loope
or
lret
pop
xor
fisubs
mov
xchg
dec
test
lret
mov
aad
jg
dec
jp
dec
out
xchg
mov
repnz
xchg
or
xchg
pushf
mov
sbb
test
dec
mov
cmpsl
dec
xor
gs
inc
or
xor
aas
and
xor
lods
pushf
and
jge
imul
xchg
add
add
test
ss
xor
mov
lcall
jmp
jle
jecxz,pt
mov
rorl
sub
xor
shll
lcall
and
pop
dec
cmp
dec
jno
clc
push
sbb
push
mov
stos
out
mov
inc
xlat
icebp
jne
xchg
test
lahf
mov
and
test
mov
adc
ret
out
stos
push
scas
lods
sbb
inc
pop
cmp
idivb
cmp
enter
imul
cmp
dec
push
mov
push
fdivl
cli
sbb
mov
scas
fistps
fidivrs
mov
dec
mov
xchg
fdivl
and
jmp
mov
dec
fstl
mov
mov
mov
push
push
ja
push
jns
adc
in
or
fwait
les
out
ja
data16
in
inc
sbb
sub
jnp
mov
push
push
mov
xchg
mov
not
rcrb
dec
cmpsb
xor
jae
cmp
sti
jb
sbb
or
icebp
pop
cmp
sbb
dec
jbe
mov
lret
mov
sub
push
push
adc
sbb
sbb
nop
adc
lcall
mov
adc
cmp
movsl
andb
sub
nop
cmc
das
bound
fcoms
xor
sbb
cltd
ds
jl
lea
scas
jbe
leave
jl
cs
mov
sbb
mov
lret
jnp
sbb
jmp
adc
shlb
pusha
inc
aam
adc
dec
and
clc
daa
clc
sti
lret
push
push
mov
and
loopne
add
sub
ja
fcomi
xor
cld
sarl
mov
pop
dec
mov
jle
or
sbb
xor
repnz
gs
dec
out
jecxz
add
in
bound
jnp
das
push
cmp
push
cs
fwait
inc
mov
cmp
or
jmp
adc
push
cmp
cmpsl
gs
pop
push
sub
xchg
and
test
call
dec
stc
jno
jecxz
popf
add
sahf
xor
mov
or
orb
fwait
stos
ret
stos
mov
repz
pop
cmc
adc
mov
dec
mov
mov
adc
add
pop
ljmp
insb
lcall
mov
inc
or
jne
ja
xchg
sub
cli
push
pushf
addr16
orb
fsubs
pop
xor
ja
stos
shrb
lods
xchg
cmp
jnp
mov
adc
ds
mov
aam
shll
and
push
stos
out
fdivl
ja
std
xor
mov
push
insb
mov
out
lods
fbld
xor
sbb
mov
pavgw
cmp
sbb
lret
mov
push
xor
fadds
pusha
insl
jmp
fnstenv
add
jns
jb
xchg
sbb
aam
cmp
xchg
test
adc
mov
or
xchg
cmp
loopne
in
nop
dec
ret
pop
mull
jle
imul
fs
adcb
mov
lods
imul
in
sbb
push
and
push
push
sarb
clc
and
add
dec
mov
sub
insl
fildll
xchg
ja
cwtl
pushf
fnstcw
test
fwait
sub
jns
insl
ror
in
push
loope
or
mov
jb
pop
testl
mov
fsubp
mov
lcall
iret
in
xchg
imull
xor
mov
clc
push
push
int3
je
mov
out
cmp
lret
insl
mov
jb
or
jns
mov
push
pushf
cltd
out
mov
or
add
test
loope
jl
pusha
or
pop
xlat
sbb
jb
out
mov
ja
jmp
cltd
loopne
lahf
mov
fs
aad
int
push
mov
imul
iret
fbld
and
data16
sar
add
xchg
mov
repz
fmuls
mov
stc
xchg
jnp
xor
push
mov
sbb
or
adc
and
xlat
mov
push
rcrb
xchg
xlat
lods
int
mov
div
lahf
loop
sahf
jle
int
mov
jge
and
xor
sbb
enter
mov
or
xor
adc
in
dec
add
lods
sub
ds
imul
shll
sbb
out
and
ja
xorl
xchg
xchg
inc
or
mov
sub
xor
sub
ja
and
push
scas
dec
outsb
pushf
orb
inc
dec
jl
hlt
stos
mov
sub
mov
inc
sbb
mov
int3
pop
dec
xor
ds
dec
sbbb
sub
mov
stos
lds
cmp
mov
mov
sbb
xchg
xchg
xor
dec
mov
enter
mov
xor
es
icebp
pop
dec
jp
loopne
mov
jae
insl
lods
push
mov
scas
repz
clc
enter
lret
stos
jge
add
and
dec
lea
shrb
pop
add
mov
in
cmp
mov
dec
aas
sbb
inc
and
stos
int3
movsl
lahf
inc
movsl
insl
sub
jo
or
or
dec
jnp
loope
out
outsb
ret
adc
std
or
data16
filds
data16
dec
push
lcall
cld
cmp
sbb
mov
decb
or
xor
cmpsb
imul
mov
mov
mov
pop
and
movsb
std
pop
mov
xchg
adc
jns
mov
add
cmc
cmp
inc
mov
sub
rcrb
push
divl
cmp
je
insl
test
cmp
jo
push
in
jp
mov
cli
and
xchg
je
lods
xchg
outsb
cmp
mov
sbb
dec
push
adc
mov
jmp
xchg
es
iret
pop
insl
jns
ja
dec
mov
cmc
lret
sub
neg
nop
add
out
andl
leave
es
cmp
imul
dec
cmpsl
mov
test
cmp
xlat
pusha
ja
loopne
scas
ds
mov
pusha
imul
sbb
int3
add
mov
mov
and
cmp
mov
lret
repnz
mov
movups
inc
fisubrl
gs
pop
fmull
shlb
jge
pop
and
daa
sub
inc
loope
ror
mov
outsl
mov
call
fldenv
sbb
push
pop
ja
lahf
and
fnstsw
add
rolb
cmp
ljmp
sahf
push
es
sbb
daa
test
jne
cmovo
mov
btc
pop
cmpsl
pusha
xor
shlb
aas
pushf
jo
cmp
mov
fs
test
test
cmp
test
or
mov
insb
sbb
pop
inc
push
pop
jnp
jb
add
out
mov
in
pushf
mov
xchg
sub
test
add
add
loopne
iret
in
jmp
pop
lahf
pop
mov
pop
movsb
leave
test
jg
jge
xor
push
add
and
adc
adc
inc
pop
decb
repz
xor
jbe
in
cmp
clc
mov
adc
xchg
lds
fistpll
call
ss
fsubrp
cmpsl
mov
add
xor
lret
in
sub
test
into
sbb
jmp
cmc
test
inc
repnz
sub
pushf
lahf
in
testb
xor
push
inc
push
sub
push
mov
movsb
aam
mov
pop
fnstsw
stc
out
insb
cmp
mov
pop
push
fwait
jns
xchg
and
shll
jbe
pop
sub
xchg
or
inc
inc
lahf
sahf
in
jg
ds
cmp
mov
mov
je
ss
ss
mov
push
int3
xchg
fidivs
xchg
push
dec
sub
cmp
lea
ror
lcall
lret
sbb
rclb
leave
adc
push
test
adc
mov
rcll
fimull
inc
mov
jge
call
push
jmp
mov
daa
sti
lahf
add
xor
int3
cmpsb
cli
add
push
jle
das
or
daa
adc
push
repz
in
push
jg
adc
xorb
ds
inc
lods
pop
jo
ds
loopne
iret
pop
mov
adc
mov
jb
outsl
addb
shll
inc
jne
loopne
mov
xor
loope
outsl
outsb
jle
lea
shld
leave
xor
or
mov
sub
subb
sbb
push
iret
push
inc
push
je
jno
sub
or
pusha
add
mov
je
js
sbb
dec
or
scas
testb
xor
imul
lahf
mov
mov
and
dec
jle
dec
sub
fdivrs
fcom
mov
rol
lock
ljmp
jae
imul
or
mov
out
fs
bound
and
pop
and
sti
mov
mov
mov
out
push
or
add
pop
fidivs
pop
pop
ds
dec
dec
aas
pop
mov
arpl
xorb
xor
popa
sub
mov
mov
or
hlt
inc
rorl
aam
test
imul
fdivr
push
adc
es
sub
mov
xchg
arpl
fnstcw
add
pop
lods
cmpl
push
in
jl
rorb
xor
out
gs
call
mov
xchg
inc
fwait
jo
aam
lcall
leave
out
mov
push
outsb
sar
cs
or
popf
dec
adc
movsb
xchg
jmp
xchg
fs
inc
test
push
add
mov
and
xchg
fwait
add
add
push
add
add
add
imul
add
add
add
add
or
add
add
or
in
in
add
in
inc
add
add
addb
stos
stos
push
pop
ja
js
js
js
js
int3
int3
int3
int3
int3
int3
int3
int3
nop
add
iret
add
add
mov
outsb
add
mov
add
add
add
adc
repz
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
popl
add
add
add
and
gs
arpl
pop
and
ja
dec
add
push
arpl
mov
xor
cvtdq2ps
iret
mov
push
fisttps
lea
adc
mov
jne
pushl
std
adc
pop
jmp
clc
push
test
add
cvtps2pi
add
mov
mov
push
ret
add
push
add
call
orl
adc
add
add
adc
push
incl
call
out
adc
add
sar
jo
adc
out
add
add
push
pushl
adc
pop
add
mov
enter
mov
pop
add
jne
pushl
push
add
add
pop
add
iret
arpl
add
add
add
add
add
add
add
add
inc
je
inc
jns
inc
dec
scas
inc
inc
gs
gs
jo
sbb
fs
imul
je
pop
insb
push
insb
je
dec
arpl
fs
js
push
gs
jb
addr16
dec
gs
push
pop
pop
push
jbe
cs
arpl
js
xor
add
add
scas
ret
filds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
lahf
insb
fs
repnz
mov
jecxz
arpl
lret
fcom
jge
sbb
addr16
lods
out
fdivs
inc
sbb
push
add
lcall
push
mov
pop
push
mov
rcll
insb
aaa
cld
clc
repnz
mov
ss
out
insb
pop
imulb
jg
cld
data16
or
shrb
push
cmp
jp
xchg
mov
and
ljmp
out
int3
das
sub
xor
cmp
jns
and
sbb
lret
ds
fwait
movb
xchg
fisubs
mov
sub
orb
scas
leave
sbbb
ja
das
ljmp
mov
xlat
xor
xchg
push
gs
inc
cmp
pop
cs
rorl
fwait
cmp
scas
ja
leave
mov
mov
add
lret
dec
dec
or
out
and
inc
sti
repnz
xlat
cmp
cld
inc
mov
cmp
and
pop
jnp
outsl
add
insb
mov
test
repnz
ficoms
test
fsubp
xor
push
rcll
scas
xor
jl
push
sub
data16
mov
xor
pop
xchg
and
dec
xor
sbb
or
aam
data16
es
lea
nop
jo
xor
dec
pop
das
cmpsb
push
sbb
in
sahf
jmp
mov
test
inc
mov
mov
pop
lea
out
ret
mov
mov
ja
xchg
js
add
adc
dec
push
js
bsr
cs
retw
nop
jmp
ret
es
cmp
enter
push
push
addr16
daa
outsb
add
xchg
fs
fnstsw
xor
push
inc
bound
add
cli
cli
jge
enter
je
nop
aaa
fisttpll
push
pop
pop
pop
lret
mov
sub
lret
sarl
and
popf
dec
xchg
add
rolb
and
xchg
clc
adc
loope
jmp
dec
fadds
and
and
mov
mov
rorl
sbb
imul
jno
lret
cwtl
xor
scas
inc
jle
push
jbe
aaa
mov
mov
ljmp
rol
out
pop
ljmp
cltd
lret
add
xorb
nop
push
jp
repz
adc
adc
and
mov
adcb
fwait
sbbl
mov
add
sbb
out
xor
movsb
xchg
sbb
dec
jo
xchg
pop
inc
or
push
mov
stc
movl
jp
push
pop
shrl
call
mov
out
push
jmp
cmp
push
jge
pop
mov
jmp
addr16
jg
dec
xchg
shll
or
lret
rolb
push
adc
adc
imull
daa
sahf
push
cmpsb
dec
andl
jg
sahf
jecxz
jns
insl
fadds
repnz
jnp
fs
cs
dec
lahf
mov
into
add
xchg
ljmp
andb
mov
orb
mov
xor
mov
jns
repnz
test
sbb
adc
icebp
dec
inc
sbb
mov
sub
pop
mov
daa
mov
sbb
in
mov
jo
outsb
or
cs
sarl
mov
pop
inc
enter
cltd
popa
adc
add
pop
xor
mov
aad
sbb
jns
scas
rclb
insb
data16
jecxz
dec
xor
inc
aad
mov
xlat
cli
das
gs
std
cld
pop
call
fldcw
sbb
ja
in
pushf
xchg
push
mov
leave
gs
inc
mov
adc
sub
cmp
cmp
fbstp
add
test
add
mov
dec
subl
push
into
jmp
push
stc
enter
sti
mov
leave
lea
and
ds
dec
out
test
inc
push
sti
ja
loopne
popa
iret
xor
cmpsl
lcall
in
push
fsubrs
mov
sar
jl
pop
adc
lods
dec
insb
rolb
fcmovb
loop
mov
pop
je
sar
add
push
pop
jae
mov
fbld
xor
xchg
dec
push
hlt
sbb
aam
rcl
icebp
xor
jg
movsb
cmpsl
aas
sub
fnsave
popa
leave
jl
lea
pop
popf
pop
mov
adc
pop
sub
push
loope
pop
jmp
sub
push
test
rolb
push
repnz
stc
fldl
sub
mov
popf
jmp
lret
cmp
pop
mov
add
pop
jp
aad
sbb
adc
jnp
dec
daa
jno
cmp
lcall
js
mov
jae
push
out
icebp
xchg
arpl
test
out
dec
and
push
inc
subl
rcrl
cmpsb
or
es
dec
test
aad
mov
test
inc
or
inc
jg
int3
orb
stos
cmc
pushw
in
mov
or
inc
dec
add
imul
xor
sub
inc
mov
inc
or
ljmp
sti
mov
out
cwtl
inc
cwtl
testl
iret
or
and
sbb
cli
jecxz
repnz
idivl
push
jg
stos
cmpsb
mov
dec
adc
out
das
inc
es
int3
pop
jp
mov
jbe
outsb
and
ss
ficoml
rorl
cmp
sbb
pop
or
push
shl
dec
xchg
aas
mov
sbb
mov
mov
mov
push
add
inc
ljmp
or
test
sbb
popa
lahf
bnd
mov
icebp
mov
mov
push
cmp
imul
sbb
in
inc
cmpsl
dec
daa
popa
jl
mov
lods
mov
dec
mov
jge
into
jae
mov
in
add
loope
mov
xor
add
xor
sbb
inc
fsubrl
xchg
clc
test
stos
pop
cmp
bound
repz
add
add
les
mov
ja
pop
cmpsb
pop
mov
mov
leave
mov
dec
xchg
ds
xchg
je
shlb
mov
dec
push
mov
orb
rclb
jecxz
insl
lods
sub
jne
sub
and
out
cld
xchg
decl
mov
jle
xchg
jns
filds
cmpsb
mov
sub
or
adc
iret
mov
jle
faddp
xchg
loopne
lea
jecxz
mov
lods
out
mov
dec
dec
imul
icebp
sti
addb
add
mov
insb
sbb
jp
inc
dec
in
pop
scas
mov
fld
xchg
in
ret
rcrb
nop
mov
push
fcmovnb
enter
or
jp,pt
iret
inc
call
jp
xchg
pop
xlat
cmp
ret
adc
insb
lret
mov
and
lods
and
sbb
pop
fdivrs
psubq
inc
fadds
int3
adc
cmp
dec
mov
adc
pop
mov
push
sbb
jb
mov
outsl
xchg
popa
aad
mov
or
idivl
jnp
daa
sbb
fmull
insl
cs
inc
in
bound
bound
cmp
or
push
jo
repz
jae
xor
dec
mov
mov
test
sbb
out
lods
fcmovnb
sbbb
imul
add
sub
iret
or
js
lods
stos
popa
fimuls
push
rcll
fnsave
xor
gs
xor
xor
testb
js
popa
mov
jnp
adc
orl
mov
icebp
cmpsb
mov
push
cmpb
adc
bound
xchg
pushf
xor
xlat
mov
fdivrl
jle
push
fdivr
mov
adc
insb
lea
xor
lcall
mov
int
sub
pop
or
in
cli
mov
in
and
or
xorb
inc
cmp
sarb
icebp
ret
cmp
orb
mov
mov
stos
pop
sub
insb
jae
jl
popa
dec
or
jge
add
test
jns
jb
add
clc
std
and
sub
bound
xchg
xor
aaa
jnp
cmp
xor
jp
xchg
push
fcomps
mov
mov
pop
bound
in
xchg
int
pop
jle
mov
lea
pop
or
aad
fldcw
pop
sub
andb
mov
fcomps
push
je
or
dec
xor
in
ja
inc
notb
test
push
loop
fdivrl
cmp
daa
sbb
es
mov
dec
scas
or
cmpsb
ret
and
daa
or
movsb
and
aad
in
mov
popf
push
clc
lret
add
leave
xor
fwait
or
aas
sbb
sti
dec
jne
sahf
shr
test
mov
insb
popf
pop
xchg
inc
push
sbb
add
femms
and
sbb
std
iret
mov
dec
sbb
in
pusha
call
push
add
lds
mov
dec
cmp
mov
jae
arpl
std
add
and
and
push
in
jmp
lds
and
outsl
inc
mov
in
iret
mov
pop
test
inc
fisubrl
or
push
mov
inc
lods
int3
cmp
aas
xchg
pop
add
mov
jmp
inc
push
pusha
cmp
sbb
loope
pop
or
mov
fmuls
js
mov
fimuls
out
stc
movsb
xorl
cwtl
dec
or
and
mov
lret
xor
fwait
add
ret
mov
mov
dec
dec
ror
pop
int3
pop
cmpsl
mov
push
repnz
xchg
cli
push
sub
gs
es
pop
mov
sub
and
jle
lods
popa
xchg
xor
leave
cwtl
mov
add
jbe
or
push
cli
lods
xchg
stos
jb
xchg
mov
pop
pop
or
pop
stc
insb
pushf
push
std
xor
out
sub
lcall
in
stos
dec
mov
cmp
movsb
xor
push
push
mov
jno
add
add
mov
adc
xor
fistps
insl
leave
incb
out
dec
dec
cmp
or
stos
cmp
pop
add
inc
ds
cmp
pop
lds
sub
mov
or
adc
inc
jo
cmpb
pop
xchg
outsl
dec
test
adc
rcl
daa
dec
jl
loopne
pop
mov
pop
dec
ret
fnstsw
jo
mov
pop
call
lock
lods
jecxz
pop
fdivrl
or
clc
fcoms
sahf
push
stos
sub
mov
cltd
imul
mov
dec
mov
cltd
rclb
fdivrl
adc
jge
or
nop
stos
adc
shr
pusha
cmp
daa
xor
js
mov
stc
das
fistpll
test
add
es
xchg
push
mov
sbb
sub
hlt
adc
or
push
mulb
pop
or
jnp
insb
cmp
mov
lea
add
inc
mov
push
dec
sub
dec
adc
inc
xlat
cli
test
jg
adc
and
xorb
jmp
push
xchg
fstpl
cmc
ds
loope
inc
jns
call
ret
out
add
icebp
and
pop
out
sbb
and
or
cmp
inc
pusha
mov
jg
dec
aad
cmp
shl
pop
int
push
sbb
repnz
leave
sbb
xchg
les
xor
fnstcw
sbbl
sub
xor
adc
xor
fucomip
jns
pop
mov
in
pop
inc
adc
dec
mov
fwait
stc
inc
call
sbb
jecxz
orb
stos
stos
cltd
mov
ds
rolb
daa
lods
fcmovb
outsl
push
cwtl
stos
lret
out
leave
push
nop
iret
pop
jp
and
aaa
mov
sub
into
test
or
into
adcl
mov
cmp
push
dec
pop
xchg
lcall
testl
inc
jae
lcall
movsl
inc
sub
xchg
js
dec
add
add
xor
pushf
int3
inc
jno
xor
pop
shrl
mov
pusha
ss
cmp
dec
int3
pop
bound
push
add
lods
popf
ficomps
adc
lahf
scas
enter
jb
aam
insb
xchg
push
mov
jl
and
inc
dec
xchg
pop
adc
int3
pop
jge
lods
cli
cwtl
add
cli
nop
mov
pushf
mov
dec
mov
push
imul
int
sub
mov
std
gs
inc
add
add
or
xchg
add
cmpsb
in
in
jle
jmp
lods
cltd
or
dec
fstps
scas
inc
xchg
xor
jmpw
inc
jb
inc
push
push
test
mov
fbstp
cwtl
pop
mov
addr16
fcoml
add
sbb
rolb
sub
cmpxchg8b
int3
adc
mov
aas
xchg
mov
sbb
push
test
fst
rorb
push
push
lds
pusha
aad
mov
dec
push
and
enter
cmp
cli
add
fwait
lret
hlt
popf
repnz
jne
push
mov
inc
dec
or
add
push
ret
shl
sub
out
popa
aad
repnz
sbb
ljmp
mov
imul
mov
dec
push
add
add
sbb
addl
xchg
cmp
test
jmp
sbb
jns
pop
inc
inc
pop
inc
call
sub
sub
xchg
cmp
jnp
cltd
cltd
and
jl
push
or
sub
lret
sub
or
pusha
push
sbb
or
subb
add
push
lock
sbb
mov
sti
or
sub
sbb
push
and
xor
jl
test
push
adc
or
push
cmpl
dec
inc
push
lahf
js
fstl
xchg
rcll
sbb
lds
shll
mov
repz
sbb
jbe
add
and
movl
push
fs
test
cs
mov
mulb
pop
mov
lods
mov
or
jge
mov
pushf
jmp
adc
xor
xor
sbb
sbb
ljmp
es
out
je
push
call
sti
mov
sahf
push
mov
sub
lret
movsb
outsl
ljmp
dec
inc
nop
fnstenv
rolb
jns
ja
sub
dec
pop
popf
mov
pusha
test
lret
sub
mov
addr16
push
xor
jns
test
out
pop
and
test
inc
popf
cld
jg
je
adc
dec
loop
lret
fistpl
stc
mov
lret
push
out
jno
sub
jg
sbbb
repz
in
enter
adc
scas
and
push
aaa
mov
add
sub
jmp
lods
shl
jae
and
cltd
into
mov
xor
lds
and
repnz
pop
pop
out
mov
or
out
dec
movsl
in
jle
or
mov
mov
add
aad
fcmovne
dec
mov
sub
scas
mov
out
cmp
es
jl
push
lods
xchg
mov
push
cmpsl
fs
sbb
ficomps
adc
je
in
jl
push
mov
jae
xor
mull
int
inc
push
not
and
adc
lds
add
push
lods
pop
repnz
push
push
adc
cmp
pop
inc
push
mov
cmpb
xchg
pop
dec
mov
lds
outsl
xor
xchg
push
cmp
mov
jle
rclb
mov
mov
icebp
pop
sub
cmc
xchg
dec
sbb
push
jecxz
push
rcr
sbb
mov
sbbb
or
push
clc
mov
popa
and
fsubrp
jno
xor
sub
add
add
jmp
loope
cld
pusha
cmpsl
popa
aas
pop
jno
imul
mov
aaa
call
mov
adc
addr16
adc
out
jge
cmc
adcl
das
sub
jnp
dec
jae
mov
mov
stos
cmc
xor
in
subb
push
fldz
push
stos
je
fimuls
ss
scas
sbb
das
fimull
mov
hlt
pop
push
dec
jg
dec
inc
jae
xchg
xorb
or
sub
xlat
fsubrs
xchg
aam
into
data16
cmpsb
sub
pushf
mov
bnd
sub
lods
inc
movb
stc
lock
mov
or
fsubrl
add
sub
popf
test
daa
ret
sbb
xchg
adc
mov
jo
je
cltd
out
jle
adc
imull
lahf
ljmp
pop
cmc
xchg
xchg
and
cli
sub
jns
fdivp
add
inc
adc
mov
lcall
aad
mov
jo
mov
call
xchg
cltd
out
adc
movsl
pop
ret
je
cmp
ja
ret
push
mov
stos
dec
mov
cmpsb
jp
add
das
out
xlat
lock
pop
push
mov
repz
mov
scas
push
aad
popa
xchg
clc
das
lods
cmp
lcall
jno
mov
lret
and
popf
jb
mov
push
inc
jnp
xor
sub
leave
scas
lahf
push
iret
or
xchg
mov
pushf
bound
repnz
pusha
popa
mov
push
jmp
xor
mov
xchg
pop
jnp
dec
mov
jmp
cmp
popf
bound
mov
loopne
push
jl
dec
sbb
push
pop
mov
add
inc
adc
cmc
push
dec
xchg
push
jecxz
mov
add
mov
jge
ds
mov
lods
jge
dec
lock
jmp
mov
push
dec
xchg
jle
mov
push
jmp
fwait
lea
insb
jmp
fdivs
lods
push
or
stc
lret
jo
mov
daa
es
pop
mov
jne
aaa
mov
ljmp
cwtl
aam
pop
dec
rep
xchg
mov
push
fdivs
je
pusha
mov
into
sti
dec
push
mov
sarl
pop
add
push
mov
rcrl
imul
aam
add
into
insb
push
test
mov
mov
popa
add
add
add
popl
add
add
add
add
add
add
aas
xor
add
add
add
add
add
add
ret
filds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
jae
jb
jo
add
mov
add
dec
push
add
add
add
add
add
add
dec
or
and
cmp
add
add
add
add
mov
subb
add
sub
clc
add
add
popa
and
ja
jae
inc
jae
dec
xor
and
add
add
bswap
push
fstpt
inc
adc
xor
push
push
mov
pop
mov
sub
test
test
call
adc
sbbl
or
mov
jno
inc
repz
lcall
push
call
mov
jge
push
push
add
add
call
adc
adc
je
push
dec
rorb
push
and
call
push
incl
or
push
add
push
add
test
les
cld
clc
enter
inc
clc
adc
push
add
add
inc
add
adc
add
insb
add
add
add
mov
add
add
add
push
add
add
inc
inc
add
outsb
gs
adc
push
popa
inc
inc
add
popa
je
inc
outsb
gs
inc
dec
push
gs
inc
gs
add
popa
dec
insb
imul
gs
insb
gs
add
inc
outsl
jb
xor
jb
call
add
loope
add
add
add
in
add
addl
add
les
in
pop
ret
and
push
rcll
xchg
in
fs
gs
push
rep
lret
and
xor
adc
add
stos
in
int3
test
inc
and
jmp
mov
pop
adc
rclb
cmpsl
fildl
inc
xchg
test
jp
mov
pop
hlt
jmp
inc
inc
push
mov
testl
or
loopne
cmp
push
push
insb
xor
test
mov
mov
fisubrl
fbstp
pop
pop
ljmp
cmc
fistps
xchg
jae
sbb
adc
and
dec
sbb
icebp
mov
in
push
pop
loope
scas
pop
scas
sub
xor
sbb
popf
stos
jnp
mov
enter
mov
cltd
sbb
cmc
ficoms
sbb
pop
push
jnp
mov
outsl
sub
jp
fadd
test
dec
mov
outsl
mov
push
add
mov
sub
lcall
fiaddl
loopne
xchg
and
popa
aaa
pusha
hlt
popf
popf
sub
std
dec
int
pop
add
jae
push
sub
mov
mov
jns
and
push
cli
mov
add
inc
jmp
jnp
and
movsl
pop
jb
cmp
test
inc
jne
sub
into
pop
call
push
lds
sbb
outsl
nop
mov
ljmp
xchg
rolb
jmp
arpl
lret
iret
pop
jo
pop
aas
mov
and
leave
loope
adc
loop
insb
xor
and
fsub
nop
iret
mov
push
xchg
adcb
out
xor
rclb
push
lods
popf
std
stos
adc
fadd
adc
idivl
add
movsl
repz
dec
iret
sahf
pop
call
nop
loopne
ja
mov
sbb
ret
iret
das
inc
add
inc
push
adc
jnp
pop
dec
scas
mov
popf
xchg
push
jbe
jns
popa
rcr
fdivrl
stc
inc
inc
mov
ljmp
inc
push
sti
and
rcrb
les
and
jbe
jnp
jge
pop
adc
pop
pop
repz
sub
sbb
adc
sarl
add
loopne
push
add
stos
add
adc
xchg
lods
test
jns
cmp
xchg
ret
sahf
mov
fdivrl
inc
cmp
enter
sub
cmp
inc
imul
adc
outsb
ret
xor
sbb
sbb
hlt
pop
inc
lret
in
cmp
mov
and
inc
test
ja
orb
repnz
jne
push
movsl
mov
repnz
dec
xchg
push
fdivrs
push
fiaddl
xchg
inc
aam
adc
jmp
adc
imul
sub
push
std
repnz
pop
jae
rol
mov
les
nop
cs
jp
dec
cld
xchg
jl
adc
mov
fisubrl
test
jo
lahf
pop
cltd
loopne
add
fmull
je
push
xor
cld
fisubrl
iret
rorl
scas
ret
pop
mov
pushf
cli
mov
lock
or
add
mov
add
mov
lahf
cltd
sti
sbb
jp
out
lret
mov
fdivr
push
out
and
jne
popf
mov
aaa
test
cmp
hlt
lock
std
cmp
aad
jbe
mov
push
push
test
icebp
push
lcall
mov
mov
mov
lods
mov
imul
cmp
es
rorb
mov
sbbl
fisubrl
out
add
sahf
sub
lods
sarl
int3
icebp
push
test
into
lock
xchg
mov
stos
ret
mov
cmpl
sbb
out
pushf
addr16
xlat
cmp
jne
notl
orl
nop
sti
rclb
js
out
sbb
push
aam
ret
push
add
loop
bound
adc
call
cwtl
sahf
fisttpl
add
push
sub
mov
and
or
mov
or
jle
sbb
sub
sahf
leave
je
aaa
fnstsw
mov
pop
in
stos
mov
add
pop
jg
test
in
xor
xor
jno
fnstcw
xchg
adc
xchg
cmpsb
sahf
add
sub
rolb
add
test
stos
sbb
int3
popa
jne
adc
insl
rcrl
addr16
mov
stc
data16
mov
dec
daa
cmpsl
out
fimull
jbe
testl
mov
shlb
mov
xor
mov
add
and
fcmovbe
arpl
leave
xchg
cmp
sahf
fisubrl
cmp
xor
stos
lcall
mov
mov
sub
daa
pushf
gs
sbb
in
mov
mov
jl
jne
mov
mov
mov
std
movswl
out
mov
or
imul
andb
aaa
push
mov
cmp
dec
jge,pt
sbb
push
into
lea
inc
lret
mov
mov
push
xor
adc
in
xor
in
bswap
jae
and
aad
scas
aas
std
ret
fidivrl
mov
xor
pusha
dec
or
out
stos
mov
int
dec
lahf
xchg
leave
stos
mov
jl
ficomps
cmpsb
fnclex
repz
fisubrl
cltd
sbb
dec
lcall
aam
adc
jmp
insl
fdivr
in
xor
mov
stos
ror
mov
insb
push
fbstp
inc
int
sarl
sahf
shll
aad
xchg
fsubl
int
movsb
sub
outsl
rclb
out
sbbl
cltd
sbb
xor
jg
xchg
aad
cmpsl
cmp
not
jl
ja
mov
dec
push
push
xor
and
adc
ret
sbb
dec
and
fwait
mov
inc
cmpsl
arpl
or
xlat
sbb
incb
fcomps
sbb
sbb
dec
clc
dec
sti
pop
pop
jge
lock
cmp
je
int3
jge
jno
add
cmc
add
mov
sub
push
cltd
push
push
lahf
inc
nop
ret
clc
xlat
pusha
testl
int3
push
dec
mov
int
imul
xor
push
lret
cs
sbb
and
mul
sar
scas
inc
in
sub
jle
push
out
push
or
jecxz
jle
mov
dec
jne
loope
test
mov
pop
cmc
sub
sub
mov
rcll
ds
push
jo
leave
fnsave
int3
insl
adc
fwait
mov
data16
xchg
push
mov
or
or
scas
repz
incl
lret
lods
fnsave
xor
sbb
movsl
dec
jle
mov
jg
dec
cmp
jg
dec
cwtl
mov
es
inc
pushf
pop
jmp
mov
cli
cmp
sbb
jnp
jne
test
xchg
inc
std
mov
inc
add
lahf
adc
lret
dec
imul
inc
lock
xchg
out
dec
and
leave
dec
and
push
insb
outsl
lods
in
jmp
sub
xchg
adc
mov
inc
call
jne
inc
mov
movsl
dec
ret
jae
je
sbb
loop
mov
into
and
cs
sub
movsb
fisubrs
pushl
xchg
push
lds
push
adc
jle
sbb
mov
insl
jmp
into
pop
sahf
ds
mov
icebp
out
fwait
nop
popf
fsts
fdivrl
xor
sub
and
xchg
add
jns
outsl
das
addr16
fdiv
inc
mov
clc
aaa
insb
mov
cmp
pop
ss
or
subl
jb
fsubrl
das
gs
in
mov
mov
dec
dec
xchg
jp
pop
jbe
mov
jle
popa
fld
sbb
aas
and
xorl
sti
xor
into
or
insl
pop
push
inc
pop
data16
push
sbb
cmp
addr16
inc
sbb
jno
sub
rol
xchg
add
outsb
add
rcl
enter
scas
in
daa
jbe
add
in
xchg
clc
das
dec
xchg
and
int3
inc
mov
dec
scas
lea
sbb
dec
mov
inc
xor
inc
xor
xchg
push
xlat
xchg
or
add
ficompl
in
sbb
pop
xchg
inc
and
orb
out
lea
mov
shrb
repz
push
jae
loopne
es
out
adcl
imul
repz
sar
sbb
fldcw
sub
pop
in
cmp
ljmp
ficomps
mov
gs
repz
mov
adc
nop
lods
inc
pushf
pop
sbb
jbe
stos
xlat
push
loope
je
int
hlt
js
filds
in
outsb
fstl
sub
or
mov
or
push
cmp
pop
push
inc
mov
imul
pop
xchg
test
cmp
cld
shrl
je
adc
adc
cwtl
sarl
ss
xor
and
push
popl
std
jo
rol
cltd
scas
js
ret
jge
push
fadd
subb
ljmp
dec
xor
cmp
fistpll
add
xor
jg
jmp
mov
xchg
subl
call
adc
lcall
movsl
cmp
inc
xchg
mov
lcall
mov
shll
sbb
adc
pop
adc
cmp
adc
pop
jne
jle
adc
sub
movsb
pop
pop
push
stos
sti
push
pop
pop
push
adc
and
pop
ss
popf
cmp
sbb
fdivrl
cmovl
aam
xchg
addr16
mov
xchg
ss
mov
test
push
movsb
push
xor
scas
push
dec
sub
mov
bound
mov
mov
cwtl
or
jnp
daa
xchg
push
lods
push
dec
dec
xor
mov
ds
loope
fs
scas
ret
lea
insb
push
adcb
push
jo
dec
or
push
lock
cmpsl
pop
cmc
into
test
push
fs
sahf
jmp
or
sbb
jno
inc
out
xlat
fcmovnbe
shl
repz
movsb
dec
repnz
pop
push
pop
pop
int
ret
mov
lods
fcmovbe
jno
loopne
push
push
push
push
dec
int3
fidivrs
shll
push
xor
push
std
scas
sub
lock
cmp
ret
jb
pushf
call
mov
push
sbb
fidivl
lea
cmp
stos
std
push
dec
mov
cmp
jne
inc
and
push
sbb
push
or
rcrb
outsb
dec
enter
imul
sub
rclb
dec
or
shlb
es
push
ljmp
into
mov
pop
mov
in
push
xor
std
nop
xchg
cld
add
sub
lds
mov
adc
sub
or
cltd
push
ficoml
add
dec
popa
push
xchg
mov
icebp
into
dec
fs
ret
sub
jnp
mov
hlt
mov
and
cmc
in
stc
sub
adc
dec
lods
cmp
sub
lahf
test
sbb
mov
push
adc
and
out
mov
add
ficompl
lds
sahf
movsb
mov
std
inc
in
jp
fadds
push
mov
leave
sbb
lds
loope
outsl
mov
shl
sahf
inc
fwait
push
outsl
jno
cmp
pop
xorb
cmp
xchg
inc
cmp
not
xchg
bound
push
bound
xor
push
jge
dec
sbb
insl
pop
movsl
out
fdivr
dec
addr16
rcr
sbbl
push
inc
fsubp
inc
pop
ljmp
mov
loope
dec
sahf
mov
and
jbe
fsubrl
add
xor
push
mov
mov
sti
push
xchg
push
scas
cmpsl
pop
cli
loopne
call
cmp
and
fsubrs
ret
lods
shr
inc
adc
maxps
xchg
lret
lods
nop
icebp
mov
pop
out
xor
cmp
test
pushf
pushf
sahf
dec
mov
loope
jmp
std
push
ret
mov
dec
mov
mov
xchg
push
adc
arpl
stos
pop
or
in
fs
mov
push
xor
loopne
mov
mov
fadd
mov
pop
sub
mov
arpl
pop
xorb
addr16
rolb
nop
in
xchg
mov
inc
xchg
xor
push
cmc
dec
xor
cmpsb
stc
in
or
dec
aam
and
or
mov
jno
pusha
xchg
hlt
pop
pop
cmp
xchg
ds
pop
xlat
imul
or
jae
mov
jne
jo
sbb
repnz
xchg
rcrb
dec
data16
vcvtsd2ss
or
sbb
or
mov
test
sbb
mov
xchg
int3
push
out
out
ret
repnz
push
xchg
mov
fst
in
repz
sub
mov
in
aam
jbe
out
in
fiadds
pusha
pop
jns
lea
aas
mov
pop
test
lock
loope
aas
in
cli
stos
inc
mov
loope
lds
and
and
clc
pop
mov
mov
out
negl
loope
and
fs
jbe
pop
stos
or
sbb
pop
out
push
out
sbb
jl
fidivrs
lock
push
sub
dec
fldenv
mov
int
adc
pop
xchg
out
jp
rolb
ret
pop
lret
jl
test
sbb
mov
ja
loopne
mov
adcb
jle
ljmp
lods
int
push
push
mov
sbb
int
jno
ret
dec
ds
lahf
mov
mov
push
shll
mov
jbe,pt
ljmp
push
sub
stc
loop
sbb
xchg
adc
push
jg
fcoms
lods
icebp
jl
imul
out
push
sbb
inc
xor
cmpsl
out
mov
sarb
and
cli
jp
adc
xor
icebp
or
decb
xchg
scas
mov
out
into
call
out
cmpsb
pop
jg
in
sub
clc
push
into
mov
inc
inc
pop
mov
fucompp
and
cmp
or
pop
push
push
pushf
test
and
cmp
adc
repnz
sub
cmp
ljmp
xor
xchg
cmp
dec
mov
push
std
std
test
ja
sbb
cmc
stos
jno
negl
or
or
mov
sub
sub
loope
sbb
in
inc
stc
lods
mov
stos
stc
mov
xor
mov
fwait
shlb
out
sbb
mov
imul
xlat
dec
jnp
lcall
loop
lcall
stc
test
rcrl
scas
cmpl
out
sbb
movsb
pop
fs
mov
ljmp
cltd
ret
sub
dec
das
sub
cmp
pop
lods
or
lcall
xchg
xchg
inc
push
jns
call
jge
cltd
mov
xor
mov
or
jecxz
test
or
rorl
outsb
jns
test
stos
sub
ljmp
xor
popa
fisttps
mov
aas
sti
loopne
cmp
iret
inc
cmpsb
cli
xor
movl
jb
jmp
insb
aas
in
push
xchg
mov
cwtl
xor
xchg
lcall
or
inc
adc
add
mov
xchg
int
add
fsts
inc
adc
xor
mov
xchg
adc
mov
adc
es
clc
rcl
xor
out
mov
push
jp
std
ss
cmp
int3
pop
movsb
sbb
mov
push
sub
jp
dec
xor
pop
dec
loope
test
adc
out
rcll
dec
fs
sbb
cmp
push
sbb
xchg
lock
stos
push
ss
lcall
jmp
test
loope
data16
sbb
cmc
into
popf
inc
lret
jno
stos
hlt
into
cmp
sub
sahf
scas
fs
lahf
pop
cltd
push
movl
sbb
add
cmp
in
push
jecxz
outsb
lahf
fdiv
hlt
movb
daa
out
pushf
add
fimull
mov
mov
movsb
pop
xor
sbb
adc
mov
enter
xor
xchg
stos
ss
imul
testb
and
xor
popa
adc
or
xchg
jne
inc
pushf
mov
and
in
and
sahf
popf
sti
sbb
icebp
rcll
mov
sarb
push
inc
ja
es
daa
jno
mov
test
jg
hlt
lret
add
stc
cmpsl
popl
sbb
sbb
pushf
iret
mov
pop
sbb
fidivrl
stos
xchg
shrl
int
mov
ret
in
or
jge
push
add
sbb
pop
sub
inc
sub
mov
test
test
push
xchg
clc
movsb
mov
add
push
cmpsl
xor
sub
aaa
test
les
test
dec
pop
pop
fstps
cmp
lret
sub
sub
icebp
cmp
test
popf
jb
jl
jno
mov
cli
bswap
ret
add
and
lods
aad
icebp
ret
push
sbb
add
and
jbe
sar
xor
bound
mov
pop
cmp
ja
mov
xchg
adc
add
jmp
stc
jmp
adc
cmp
out
sahf
push
add
push
popa
loopne
jge
xor
jns
icebp
int
mov
lahf
xor
sbb
out
or
pop
sub
sub
xchg
lods
and
or
call
cmp
mov
imul
inc
mov
test
out
scas
adc
dec
in
mov
mov
mov
outsl
cmpl
das
loopne
jmp
jnp
jmp
mov
cmpl
and
call
push
inc
fdivs
jg
mov
arpl
pop
shlb
mov
popf
ret
ljmp
stos
aas
xor
addr16
inc
jbe
push
ficompl
fbstp
ret
sbb
pop
xchg
mov
sub
cmpsb
xchg
xor
cmp
dec
adc
cltd
and
mov
cmp
push
lcall
cli
cmpsb
cwtl
dec
inc
sub
or
adc
cmp
xchg
xor
loop
test
dec
cmp
fucomp
push
cmpsb
jnp
pop
and
push
int3
mov
push
lods
ljmp
fisttpll
pop
mov
xor
bound
sbb
cmp
cmp
lret
lret
dec
pop
push
insl
aaa
rorl
push
loop
loop
cmpsl
dec
cwtl
dec
mov
pop
or
and
fisubrs
xchg
mov
addr16
push
pop
iret
add
shlb
mov
enter
push
and
adc
ret
addb
data16
mov
mov
lds
dec
and
xchg
cmpsl
adc
movsb
aam
ja
xlat
lods
sub
sbb
add
roll
sbb
add
jno
add
add
loope
add
add
add
add
add
add
add
add
add
add
add
or
add
add
cwtl
add
sub
mov
sub
add
adc
xor
or
add
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
inc
add
or
or
adc
add
adc
add
jbe
add
add
add
add
add
add
add
add
out
and
add
arpl
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jecxz
cmp
js
add
outsb
pop
push
push
add
add
add
push
flds
fld
sahf
mov
mov
push
or
add
sbbl
cld
sub
xchg
mov
adc
push
test
push
add
dec
cld
xchg
pop
inc
fs
push
test
mov
push
jae
sarb
lea
add
add
add
leavew
add
jmp
add
in
pop
add
mov
pushl
push
add
mov
loope
jmp
cmpsb
jmp
sbb
dec
push
lock
movb
inc
lock
fiadds
incl
adc
call
add
lret
cmp
repz
incl
lea
adc
push
jne
imul
pop
add
inc
sbb
add
add
sbb
pop
sbb
sbb
sbb
sbb
stos
sbb
pop
sbb
add
add
je
jae
inc
outsb
dec
insb
add
imul
insl
gs
loopne
insl
insl
outsl
js
add
jo
insb
jae
xor
fs
insb
inc
jns
popa
add
add
outsl
jbe
fs
inc
insb
gs
popa
push
add
add
add
add
cmpsb
push
push
ret
add
add
add
xchg
add
xchg
cmp
xor
es
pop
jge
pushf
cmc
cmp
arpl
in
ret
push
sub
in
dec
shlb
inc
mov
inc
cmc
mov
ss
bound
and
or
mov
mov
pushf
push
addl
and
mov
jo
or
xchg
int
and
or
pop
cmp
inc
jnp
xchg
or
mov
sbb
imul
fiaddl
shll
fnstsw
in
out
cmp
imul
or
dec
inc
ds
inc
sub
bound
sub
cmp
sbb
xor
sub
imul
in
lds
jne
or
dec
lock
pop
push
gs
nop
sub
pop
mov
test
xor
lahf
adc
xchg
mov
push
jb
rcll
call
ja
cmpsl
faddl
pop
shlb
clc
mov
loop
subb
sub
pop
push
mov
jle
adc
rolb
cmpsl
stc
icebp
inc
cmp
dec
popa
mov
push
push
mov
lods
push
call
push
sub
mov
popf
cmp
int3
cmp
lods
stc
inc
mov
push
cmp
sbb
arpl
push
int3
dec
xchg
mov
addr16
in
cmp
mov
cmc
xchg
jb
in
arpl
sub
cltd
xor
dec
and
test
fdivr
sbb
mov
shrb
dec
sti
sbb
jle
sahf
jae
cmpsb
arpl
push
arpl
adc
dec
mov
mov
roll
jp
pop
mov
fs
lret
cmp
std
jg
cmp
xchg
adc
and
jo
dec
outsl
fcomps
inc
mov
push
xor
mov
cmp
and
movsb
cmp
jnp
gs
xchg
mov
cs
cli
mov
cmpsb
push
xor
arpl
fildll
sub
mov
into
mov
inc
lahf
idivb
jp
in
pop
cld
jmp
js
mov
sub
dec
inc
cmpsl
test
das
ret
mov
mov
outsl
mov
aaa
fsubl
push
add
pop
repnz
fucompp
outsl
sub
mov
mov
xchg
inc
push
xchg
test
pop
add
jns
ret
mov
adc
pop
and
or
xlat
test
dec
dec
push
out
and
cmp
enter
and
inc
loope
mov
and
leave
cmpsl
jnp
mov
pop
cmp
adc
cmpsl
in
adc
xor
daa
push
in
mov
sub
cltd
cmp
jmp
fs
and
xor
push
pop
cltd
in
mov
mov
mov
into
sbb
gs
push
shlb
lret
mov
popa
call
xchg
pop
push
int3
fcomps
sub
cmp
lds
or
add
inc
scas
adc
jl
bnd
sub
and
into
pop
inc
scas
pop
push
jg
mov
cli
mov
fwait
add
repnz
pushf
es
call
pop
adc
cmp
mov
nop
int3
ja
fwait
data16
out
push
jle
and
sub
shll
in
lahf
mov
aaa
std
nop
push
xchg
and
cmp
sahf
sahf
scas
mov
jne
xor
fsubrl
scas
cmp
int
es
filds
dec
orb
push
or
mov
aaa
sub
movsl
mov
fsubr
and
push
jmp
call
stc
in
sbb
sbb
sub
les
push
mov
adcb
adc
test
push
mov
lock
cmp
clc
pop
ret
psrad
orl
lahf
pop
shlb
mov
adc
fistps
xchg
cmp
insb
xor
int
loop
inc
mov
loope
pushf
mov
mov
sub
mov
jp
es
arpl
and
mov
stc
dec
mov
aas
arpl
dec
addl
fmull
clc
icebp
push
orl
ljmp
sbb
lahf
mov
mov
xchg
test
adcl
mov
or
xchg
call
and
sarl
mov
and
icebp
subl
mov
push
in
jge
push
pop
or
mov
call
lea
inc
fmull
push
ljmp
test
test
inc
jmp
inc
ret
mov
mov
cmpsl
pop
hlt
icebp
jae
lds
pop
lahf
pop
xor
adc
adc
dec
sti
aad
out
pusha
xor
mov
pushf
sub
mov
nop
sbb
pushf
push
enter
jae
je
adc
sbb
and
or
push
loope
or
stc
loop
out
xor
punpckldq
xchg
and
in
dec
popf
test
stc
fstpt
pop
xchg
xor
into
insb
pusha
and
jle
fimuls
lcall
xchg
pop
loopne
int3
or
bound
xchg
dec
inc
adc
dec
sub
out
jae
stos
or
or
fstpt
into
mov
rolb
loopne
dec
mov
ret
repz
mov
rcll
sub
icebp
in
stos
in
sbb
loopne
adc
xor
cmpsb
add
nop
ret
push
cmp
icebp
jp
mov
les
mov
fs
pusha
in
scas
stos
mov
sub
in
cs
pop
dec
popf
mov
dec
add
mov
clc
jle
out
xchg
dec
mov
push
addr16
jmp
cmp
sbb
movsb
mov
movsl
push
movsl
ret
add
mov
cs
lods
xchg
pop
add
stos
in
fwait
push
in
int3
std
push
or
xchg
cmp
mov
or
les
xchg
popa
mov
ja
pop
push
inc
pop
leave
loope
call
popa
jb
rcrl
mov
imul
xchg
clc
fs
add
cmpsb
dec
mov
mov
int3
mov
mov
in
or
cmp
jns
scas
je
add
rcll
ds
inc
cmp
jae
ror
cmc
fxch
movsl
pop
inc
sub
in
scas
imul
sbb
xchg
or
push
cmp
out
insl
ror
xchg
subb
inc
xrelease
inc
stos
das
ret
add
test
pop
jle
xchg
enter
insb
lahf
fisubl
sbb
sahf
add
int3
add
rorb
push
hlt
add
pop
and
leave
dec
xor
add
xchg
xor
not
outsb
je
push
add
shll
and
or
push
mov
rcrl
rorl
mov
stos
xchg
mov
lcall
xor
and
rcr
adc
cmp
lret
and
shll
insl
imul
inc
sub
sub
std
push
lea
mov
or
adc
jmp
sbb
pop
sbb
movsb
cld
xor
mov
push
mov
pop
andl
pop
lahf
lds
std
andb
lcall
lret
cwtl
call
cld
jne
rclb
push
jnp
popa
sbb
in
imul
in
out
jnp
jo
aam
test
mov
mov
cmp
stos
add
testl
aaa
gs
out
or
jmp
test
xchg
insl
les
pop
inc
xor
cmpsb
std
cmpsl
repnz
xchg
je
jmp
shll
mov
fwait
repz
test
adc
cmpsb
and
adc
sub
lods
push
scas
cmpsl
in
ja
push
sbb
mov
pop
or
cli
addl
fsubrp
add
sbb
mov
pop
nop
jp
movsb
lock
xchg
add
addr16
mov
out
jmp
enter
dec
mov
aas
cmp
cmp
push
out
xor
std
sub
dec
mov
call
incb
mov
jl
test
dec
lods
xor
orb
testb
push
ljmp
ret
xchg
stos
xorl
rcrb
fadds
dec
sub
repnz
pusha
je
jbe
icebp
in
test
out
jns
jge
xlat
cmp
insl
in
jo
pop
xor
jae
mov
js
rcll
dec
shrl
lahf
dec
aad
jbe
sub
mov
test
cmc
inc
inc
cmp
neg
pop
popa
adc
ljmp
inc
loopne
pop
stos
idivl
call
movsl
out
test
push
push
push
or
pcmpgtb
je
push
hlt
lock
lcall
bound
mov
mov
sbb
pusha
mov
mov
orb
jb
andb
fstpl
ret
mov
push
add
mov
pop
out
outsl
in
adc
xchg
ret
mov
mov
xchg
push
or
mov
dec
inc
gs
loopne
or
or
push
andb
mov
aad
xchg
testb
outsb
fsubrs
dec
cmpsb
push
andl
leave
pop
test
rcl
jg
mov
mov
dec
xchg
or
push
or
mov
sub
mov
xor
cwtl
cltd
movl
sub
aad
inc
pushf
inc
cmc
std
xor
pop
mov
aas
daa
sbb
aas
pop
cmpsb
mov
cmp
je
jmp
xor
cmp
loope
fwait
sbb
movsl
rcll
repnz
push
pop
lret
xorps
sub
xor
enter
add
push
aad
jbe
adc
cli
int
mov
cwtl
sbb
leave
roll
scas
push
das
and
jg
pusha
cmp
cwtl
pop
sbb
ss
mov
pop
ss
les
divl
lcall
fistps
push
sarb
std
mov
mov
out
mov
leave
push
pop
or
mov
mov
mov
and
jp
sbb
add
push
xchg
mov
das
push
mov
es
fldt
enter
cmp
cmp
pop
push
shlb
mov
add
jmp
inc
xor
dec
sahf
adcl
aad
fimuls
cmpsb
pop
push
stos
mov
std
or
push
mov
push
lea
adc
xor
xchg
stos
push
ja
or
jns
xchg
outsl
lret
js
enter
mov
or
dec
cmp
dec
inc
iret
xlat
jmp
add
pop
sub
sbb
mov
mov
aad
dec
cmp
andb
call
popf
test
xchg
leave
vprotq
pop
xchg
jmp
mov
jno
repnz
push
add
mov
ret
cld
push
cwtl
mov
jl
int
mov
mov
lods
add
leave
aas
decl
fcoml
in
fnsave
inc
sbb
push
mov
xchg
dec
pop
enter
test
mov
aad
push
cmpsb
ret
leave
xor
mov
cmp
addl
cltd
les
mov
sub
or
xor
cmpl
out
cmp
sub
stos
dec
mov
pop
loop
sub
mov
mov
jb
xchg
subb
lret
fisttpll
pop
sbb
ret
or
je
ljmp
xor
dec
xchg
stc
sub
jmp
loopne
pop
filds
ftst
mov
lahf
xchg
test
cmp
pop
cltd
subl
call
inc
call
bound
mov
loop
cmpsl
mov
andb
inc
pop
pop
shll
mov
inc
mov
fs
aam
ja
pop
dec
imul
jbe
xorl
xchg
pop
fstpt
xchg
aaa
mov
inc
sub
out
mov
fs
stos
jb
in
cmp
dec
pop
jae
inc
sti
outsl
cmpsl
push
movsl
movsl
insl
xchg
rcrb
rcl
shl
xchg
daa
sub
jne
xchg
loopne
in
fs
xlat
jmp
jns
jb
pop
leave
cmpb
sbbb
mov
jns
xor
shlb
push
pop
cmp
sbb
adc
fcompl
push
xchg
dec
mov
or
inc
in
in
dec
inc
fsubs
adc
cwtl
fdivrp
iret
lcall
mov
inc
push
fdivs
lods
out
mov
push
lods
push
or
pop
adc
cmp
addb
xchg
jecxz
mov
out
arpl
nop
cli
inc
sub
adc
sbb
inc
sub
or
xchg
jl
and
xchg
push
shr
in
in
stos
arpl
mov
mov
outsl
cmp
pop
repnz
mov
fldcw
mov
inc
xor
adc
pop
outsl
cltd
movsb
daa
cmp
xor
addr16
adcb
xor
loope
cmpsb
fwait
aas
add
int3
fiadds
pop
in
xchg
mov
mov
sbb
xor
mov
daa
inc
cmp
repz
pop
cmpsl
cmp
push
mov
hlt
xchg
mov
pop
int
pop
jno
mov
mov
cwtl
push
ret
jmp
popa
pop
xor
pop
and
cmpsl
pushf
dec
sub
mov
mov
push
call
pop
inc
push
popa
cmp
sti
sbbl
int
inc
mov
and
add
xor
jns
ljmp
jp
jmp
fldl
shrb
inc
mov
xchg
sahf
mov
fidivrl
pop
pusha
repnz
idivl
adc
int3
xchg
mov
lret
movsb
pop
lret
dec
cltd
mov
movsb
xor
out
aad
mov
mov
cltd
sbb
mul
pop
xchg
push
mov
push
jne
leave
int3
or
ss
mov
xor
cmc
into
xchg
repnz
and
add
mov
pop
pushf
mov
xorl
push
dec
test
jb
add
arpl
mov
push
dec
fwait
xor
xchg
stos
jo
mov
mov
xor
scas
imul
cmpl
lods
je
mov
ficoms
pop
jno
and
xchg
mov
sahf
jge
enter
mov
mov
push
outsb
mov
int
out
push
jne
ljmp
inc
inc
popa
pop
test
or
xlat
xchg
aad
mov
xor
test
gs
js
lea
scas
jns
cmp
rclb
pop
inc
lods
push
pushf
mov
inc
fisttps
into
xor
sarl
jecxz
cs
xchg
idivb
mov
sbb
cmpsb
pop
sbb
push
gs
dec
cmc
dec
push
out
adc
inc
and
xor
stos
adc
out
xchg
outsb
pop
rolb
xchg
jno
sub
jle
dec
inc
push
or
inc
push
cmp
jo
mull
adc
sub
mov
push
lods
imul
adc
insl
hlt
inc
inc
xlat
fiaddl
fcmovnb
sub
in
sub
leave
cs
or
or
addr16
sub
mov
cs
jbe
and
mov
dec
nop
imul
movsb
std
or
roll
aas
int
mov
clc
jg
int3
xchg
sub
insb
pushf
insl
stos
fstps
jae
aas
sbbl
cmp
mov
xor
pop
sub
clc
enter
je
js
hlt
xchg
lods
pushf
mov
mov
sbbb
push
rorb
jg
or
jbe
cmp
movl
jp
add
mov
push
cmpb
xlat
adc
and
lods
sahf
into
mov
push
sbb
clc
das
sub
mov
test
xchg
xor
outsb
add
jno
or
insb
xchg
push
addl
outsl
sub
out
mov
out
nop
dec
hlt
and
jle
inc
enter
push
into
fisubrs
push
adc
push
fwait
hlt
xchg
nop
mov
insl
cmpsb
sbb
aas
cmc
mov
sbb
pop
dec
adc
xchg
sarb
sub
or
inc
ja
xor
push
jg
pop
dec
popf
sbb
xchg
and
pop
insb
xor
clc
and
fs
into
cmpsb
jecxz
movsb
pop
xor
daa
flds
enter
ja
cmpsb
xchg
inc
xor
adc
movsl
lea
das
subl
push
sub
in
sti
mov
push
out
dec
sbb
or
pop
bound
fisubl
mov
push
aad
sub
pop
inc
dec
adc
mov
outsl
into
scas
repz
mov
sub
lods
fucomip
xor
loope
lea
daa
add
rcrb
adc
stos
test
push
mov
ret
inc
fbld
inc
repz
arpl
or
xor
ss
inc
adc
sub
fldt
jle
movsl
cmp
jl
les
jp
push
mov
xor
mov
lret
ljmp
je
mov
push
push
push
lock
sbb
addr16
clc
mov
mov
mov
pop
mov
mov
sahf
popa
outsl
popf
cmpl
fdivs
sbb
fwait
arpl
mov
fdivrp
pusha
fnstsw
lods
scas
and
and
or
scas
ret
jbe
sbb
jae
and
xchg
adc
sub
pop
adc
xlat
lcall
push
xchg
out
jmp
mov
cmc
push
xlat
std
stc
dec
cmpsl
push
jg
xor
inc
dec
push
out
ss
xchg
xchg
div
push
push
lcall
or
xchg
mov
sub
mov
ljmp
push
sbb
adc
movsb
mov
sub
nop
jmp
cs
insl
and
nop
dec
mov
stc
inc
pop
add
add
push
jne
adc
test
in
pop
push
fcoml
dec
imul
xchg
lods
mov
out
rcrb
popa
jbe
pop
adc
dec
cli
xchg
dec
das
jne
xchg
dec
lods
mov
clc
xchg
hlt
add
fiaddl
mov
nop
cmp
jnp
push
iret
mov
mov
jne
lret
add
mov
idivb
dec
addr16
lods
imul
xchg
mov
sbb
ja
adc
xchg
out
dec
mov
mov
mov
xchg
imul
xor
sbb
push
out
pop
hlt
mov
aad
sbb
pushf
xor
test
popa
mov
xchg
xor
data16
sub
mov
sub
push
add
pop
xor
mov
add
add
add
add
add
add
add
jb
add
add
add
add
loop
add
add
add
add
add
add
push
push
ret
add
add
add
xchg
add
add
add
add
add
add
idiv
stos
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
mov
and
add
sbb
add
add
add
add
test
add
add
add
mov
add
add
add
add
add
add
add
cmp
add
add
add
inc
ret
add
add
add
stos
mov
and
insb
add
add
outsl
outsl
jne
outsb
add
inc
pop
add
push
leave
mov
or
clc
add
sahf
iret
or
push
roll
jae
ret
mov
incl
std
stos
std
call
decl
push
push
lea
ret
or
pop
divl
mov
pop
in
add
push
hlt
add
sar
add
mov
add
push
add
daa
add
decl
ljmp
ljmp
incl
loopne
jmp
test
lcall
add
call
jge
push
adc
mov
incl
std
xchg
call
mov
ret
lea
jne
add
adc
movl
add
add
add
jb
add
add
add
add
loop
add
add
outsl
je
imul
add
dec
add
gs
push
js
add
jae
add
add
dec
inc
fs
push
add
js
jne
popa
add
cmp
insb
gs
gs
and
push
add
xchg
jnp
add
add
add
add
jmp
add
add
add
add
fwait
and
inc
dec
jmp
scas
ror
push
sub
fisubrl
fdivrs
mov
dec
movsl
fcomip
mov
sti
cmp
sub
push
inc
dec
xor
or
shll
in
icebp
cld
push
jbe
mov
ret
mov
scas
push
stos
mov
inc
mov
mov
dec
cmpsb
test
lret
loop
adc
fld
lahf
sbb
mov
out
adc
stos
add
xor
xchg
fstl
mov
push
mov
xor
lock
sub
mov
xchg
ja
inc
cmp
fnstsw
push
sub
test
fwait
jno
arpl
loopne
into
sbb
stos
push
fs
ficoml
pop
movsl
push
fsubrs
scas
adc
out
dec
int3
dec
mov
clc
adc
cltd
or
lock
push
sub
mov
fisubs
imul
ja
or
add
adc
push
push
and
test
push
push
test
cmp
scas
mov
dec
or
iret
fldl
or
or
cli
and
js
test
in
aas
mov
ret
adc
test
sti
cmp
in
rorl
addl
xchg
push
sub
mov
test
jnp
push
mov
in
xor
jbe
iret
xlat
lock
mov
mov
cld
loop
mov
repz
out
fsubs
jo
test
inc
push
mov
in
and
enter
stc
sbb
sub
aas
or
loop
mov
mov
addl
ja
aad
aam
lcall
push
ret
js
inc
sub
cmp
sbb
out
mov
push
into
mov
inc
xchg
stc
mov
add
jnp
pop
cmpsb
cwtl
daa
xchg
fcomps
cmp
dec
pop
jmp
dec
jae
fwait
inc
cmp
ret
push
push
adc
mov
inc
mov
lea
dec
sti
jns
fcom
mov
out
cmp
xor
inc
out
pushf
in
insl
add
push
jb
or
push
pop
mov
test
cmp
lock
or
xor
lock
inc
loopne
popf
pushf
sahf
add
add
call
rep
cwtl
enter
push
dec
xchg
push
out
pop
daa
push
and
inc
dec
fidivrs
dec
add
adc
jmp
jb
cwtl
aas
out
je
inc
push
bound
js
mov
jne
lcall
dec
mov
es
adc
mov
loopne
test
pop
sub
ds
das
mov
in
or
fstl
into
and
ds
pop
in
add
test
mov
xorl
pusha
pop
jmp
in
insb
movsb
sub
aam
rcl
ljmp
mov
sbb
sub
pop
mov
sbb
sahf
pop
pop
dec
negb
cli
js
popa
lret
inc
adc
and
cmp
in
scas
pop
inc
xchg
jnp
outsl
call
aas
icebp
xorl
inc
movsl
sbb
xchg
xor
test
aam
mov
cld
mov
xchg
stos
cmp
addl
inc
cmp
xor
sub
cmp
aaa
jb
aam
lods
pop
pop
movups
adcb
int
int
in
or
cmp
pop
out
push
pushf
xor
imul
popa
pop
and
movsb
inc
dec
push
mov
sbbb
push
push
jmp
sbb
cmc
sbb
popf
mov
imul
sbb
mov
cmp
cmp
fdivrl
xchg
in
mov
pop
dec
push
cmc
jo
cmpsb
lret
insl
insb
inc
pushf
sub
shl
loop
test
cs
xor
push
push
ljmp
rdtsc
add
daa
sbb
test
pop
sahf
mov
xchg
lock
inc
xchg
js
into
adcb
mov
sbb
jbe
sar
das
insl
xchg
and
and
mov
cmp
lds
imul
xorb
fisubrl
outsl
stc
in
es
add
mov
loope
mov
jbe
cmp
cmp
mov
mov
hlt
sbb
in
xchg
push
dec
sub
stc
jbe
inc
and
je
add
mov
adc
inc
incb
filds
push
scas
add
jecxz
aaa
sub
pop
cs
js
int
stc
xchg
pusha
cmp
xchg
inc
addl
push
mov
mov
mov
std
jns
xchg
inc
xchg
lock
shl
out
dec
lahf
xor
inc
xchg
test
mov
jmp
lcall
icebp
es
or
jge
dec
jmp
pop
ret
or
test
mov
sahf
sub
ljmp
out
inc
movsb
cli
pop
js
scas
lret
pop
and
movsb
cmpsl
out
inc
les
lds
mov
ret
jmp
push
outsl
rorl
xchg
dec
or
icebp
inc
jecxz
dec
loop
out
insl
jb
mov
xlat
test
dec
jbe
sti
shrl
adc
movsb
les
adc
lea
scas
and
jge
stos
push
dec
pop
scas
and
orl
jge
lret
rcrb
jbe
fiaddl
xchg
fldcw
jge
and
out
hlt
popa
mov
movsl
repnz
movsb
in
and
mov
insl
dec
jmp
in
stc
sti
xchg
pop
mov
pop
or
push
insb
imul
pusha
insl
adc
cmp
cmp
push
jl
lahf
push
cmc
repz
out
frstor
lods
sub
mov
jecxz
icebp
mov
imul
inc
ds
push
aaa
out
fwait
lds
lods
sti
es
movsb
call
in
mov
scas
clc
sbb
std
rcrb
sbb
mov
add
jmp
cwtl
fs
iret
pop
mov
sbb
add
faddp
out
insl
leave
fsub
pushf
fcompl
push
movsl
push
cmpsl
push
cli
test
or
sahf
pop
test
sbb
dec
in
addl
or
mov
leave
sysenter
scas
jae
int
cld
fcompp
cs
push
inc
mov
push
sbb
adc
or
js
insl
cwtl
push
push
push
pop
sarb
mov
cmp
xchg
xchg
cmc
push
adc
pushf
jmp
lcall
dec
push
rorb
stos
movsb
iret
jbe
push
xor
sbb
arpl
lcall
cmovno
mov
ljmp
jns
inc
movsb
scas
inc
jo
mov
shrl
out
cmp
lret
mov
repz
fstpl
mov
adc
dec
or
push
fptan
repz
ja
test
and
negl
jae
pop
repnz
pop
pusha
loopne
js
movsb
pop
frstor
fld
les
sti
xor
jnp
fs
addb
jns
enter
pop
inc
cmp
push
jne
cs
ljmp
rolb
ja
sbb
insl
pop
scas
loope
jge
xor
cmp
cli
repnz
ret
lcall
js
adc
dec
sub
out
cmp
lods
pop
in
mov
je
cli
ret
xchg
outsl
xor
gs
pop
popf
sub
or
in
cmpsb
cmp
sub
test
cmp
push
sti
lret
inc
in
sub
mov
mov
std
add
dec
aam
mov
xor
imul
xchg
enter
aam
cltd
jbe
fsubl
aas
addr16
adc
enter
sbb
idivb
add
es
sub
daa
pushf
inc
xchg
je
movl
sbb
scas
xor
push
jne
cmpsb
adc
loopne
pop
in
mov
jo
fwait
and
icebp
and
mov
mov
popf
fstl
fsts
sbb
mov
lret
push
adc
test
xlat
jg
loope
push
rorb
sbb
adc
or
add
scas
cltd
mov
ja
sbb
aad
cmp
inc
lds
int
mov
icebp
pop
outsb
push
loop
push
sbb
dec
cmpsl
imul
test
cmp
cltd
ret
lcall
jno
dec
fs
mov
push
ja
sbb
sbbb
xor
xchg
testl
xchg
fcmovu
xchg
xchg
popa
adc
sub
out
lret
xchg
cwtl
cltd
jmp
adcb
shl
and
ja
icebp
jmp
fbld
mov
pusha
inc
repz
lds
pop
leave
enter
xchg
jl
cmp
leave
mov
sbb
adc
nop
xchg
mov
notl
pop
in
je
jge
push
adcb
jb
pop
gs
sub
push
cmpb
mov
dec
int3
jns
into
lahf
add
inc
xor
andb
mov
xor
dec
je
and
sub
cs
inc
mov
insl
incl
fmul
rol
pop
sbb
test
cmp
rcrl
movl
and
dec
arpl
mov
call
or
mov
inc
nop
mov
ss
mov
jae
mov
cmpsb
push
js
into
mov
pop
mov
les
mov
inc
ds
push
cmp
push
loope
push
js
imul
push
inc
daa
jl
xchg
pop
cmpsb
cs
bswap
mov
in
int
jge
arpl
je
addb
push
loope
add
aam
sub
sbbb
sub
icebp
test
out
scas
rorb
sbb
lcall
es
mov
mov
sbb
aam
jl
xlat
arpl
xor
sbb
pushf
rcrl
iret
jns
std
loop
and
push
out
inc
stos
scas
xor
jnp
jae
mov
pop
mov
xor
push
out
add
cmp
fsubrs
xchg
scas
and
mov
jno
xor
scas
pop
in
sbb
mulb
push
es
popf
and
lret
dec
cmp
pop
adc
xchg
sbb
movsl
addr16
jo
call
out
cmpsl
mov
dec
mov
addr16
or
test
lret
sbb
push
push
and
and
pop
dec
aam
icebp
dec
ss
xchg
mov
add
mov
imul
clc
adc
adcl
ja
xor
out
or
xor
movsl
jmp
lods
jb
xor
mov
jg
andl
ss
push
add
andb
std
push
dec
pop
mull
xchg
popf
adc
fldl
or
test
sbb
dec
decb
movsb
hlt
lea
data16
lret
shrl
mov
or
loope
xchg
shrl
pop
dec
fwait
mov
mov
mov
sbb
dec
scas
mov
xlat
cli
adc
inc
aam
cmp
jle
cmp
xor
xchg
push
fidivrl
or
or
sbb
xchg
lahf
and
fists
aam
adc
sbb
es
aam
xor
jno
sub
int
in
out
sub
popf
mov
pop
enter
dec
or
push
xchg
dec
inc
jno
adc
inc
aas
ret
cld
lcall
mov
push
push
adc
mov
dec
dec
js
leave
shlb
cmc
fcmovbe
lock
sub
sub
jl
ficomps
sti
add
mov
xchg
js
xchg
icebp
pop
test
stos
jmp
and
cwtl
outsb
xor
pop
cld
mov
push
push
mov
dec
xor
popl
pop
push
aad
jae
in
repnz
pop
and
mov
jno
and
mov
fs
rcl
dec
push
imul
jnp
out
int
shlb
into
pop
push
pusha
and
sub
inc
add
inc
xchg
cmp
or
sbb
add
loop
cmc
xchg
mov
es
syscall
sbb
sbb
mov
cld
int3
fbld
xchg
aam
popf
cmp
inc
push
dec
scas
out
xchg
push
cmp
mov
stos
rcrl
jne
adc
sbb
or
mov
pop
enter
jmp
add
xchg
mov
inc
loopne
mov
push
mov
xchg
dec
mov
mov
pushf
add
xor
xor
hlt
mov
imul
jns
pusha
scas
sbb
push
or
rcrb
stc
sbb
ret
adc
push
mov
jns
push
or
cmp
pop
dec
sahf
mov
mov
fsubrp
mov
push
cld
xchg
mov
fnsave
repnz
scas
xor
int
test
pop
cmp
and
cmp
orb
and
jo
fs
sub
xchg
sahf
pop
mov
xchg
leave
push
or
jecxz
imul
adc
inc
in
mov
sub
scas
cmp
hlt
xor
repnz
sub
dec
inc
arpl
jb
sti
jae
push
mov
fildl
dec
sbb
lahf
cltd
mov
mov
fnstcw
andb
jb
or
out
mov
out
mov
nop
out
scas
cmp
mov
jl
mov
or
jb
pushf
in
adc
loop
pop
imul
btc
jle
inc
roll
adc
push
hlt
cmpsl
push
pop
lcall
iret
test
aam
imul
loop
test
mov
xlat
push
dec
cs
push
adc
push
dec
arpl
jns
addl
add
adc
push
push
sbb
test
pusha
inc
ret
jle
pushf
in
adc
ficomps
adc
hlt
mov
sahf
movsb
dec
mov
shll
mov
clc
je
inc
subl
loop
sub
lahf
inc
xchg
das
mov
fdivl
and
stc
test
sbb
cmp
xchg
fcmovnb
pop
and
xlat
call
jg
mov
cmp
or
sub
dec
sbb
cld
outsb
incl
pop
mov
ret
and
addb
addr16
cltd
cmpsb
push
xchg
cmpsl
push
mov
jo
sti
lock
mov
outsl
mov
push
testb
push
and
test
and
pushf
cmp
jp
cmp
inc
jo
fwait
ja
cld
call
or
jge
adc
xlat
rorl
or
xchg
cmc
scas
gs
mov
cmp
sbb
ficompl
out
adc
cld
mov
insb
repz
and
xchg
inc
outsl
test
jne
sub
stos
aam
sub
les
out
sbb
aaa
or
outsb
mov
or
out
lret
xchg
mov
jo
dec
adc
addr16
cli
adc
push
fmuls
mov
and
lock
push
push
pop
inc
xor
les
mov
adc
fwait
movq
movsl
xchg
adc
test
mov
push
sub
xchg
lret
jmp
bound
mov
ror
push
and
sbb
das
in
mov
fnstsw
jp
xlat
cmp
dec
mov
push
mov
lods
push
push
and
xor
push
dec
dec
out
decb
sub
push
lds
pop
push
add
es
xchg
xchg
mov
or
fisttpl
pushf
and
dec
ljmp
adc
pop
scas
pop
and
js
testl
test
adc
addr16
sbb
stos
xor
ljmp
inc
mov
or
ds
inc
call
aad
push
push
mov
fucomi
mov
in
mov
xor
dec
scas
popf
adcl
sbb
outsl
jae
push
aam
cmp
test
out
sbb
or
adc
pop
adc
enter
jae
cmp
xchg
mov
xchg
js
sbb
sti
mov
inc
and
pop
lret
dec
jl
fistps
add
jmp
lcall
ret
and
int
into
cld
loop
stos
jmp
mov
xchg
cmp
push
xchg
jo
or
dec
mov
jp
cmp
in
sbb
fwait
das
push
lea
mov
push
aam
mov
mov
jecxz
out
shrb
int
adc
jle
int3
insb
std
sahf
and
and
sub
test
sbb
inc
pop
arpl
lock
jl
movsl
stos
inc
or
bound
fisubl
outsl
lret
pop
ss
or
add
push
and
pushf
xchg
and
arpl
jmp
push
bound
test
cmp
pop
rolb
mov
jbe
sub
icebp
pop
ret
mov
push
cmpb
sbb
push
jecxz
mov
arpl
dec
imul
lods
and
mov
inc
aad
sub
mov
test
pop
or
nop
mov
mov
jnp
pop
push
cmp
pop
jae
pop
xchg
pop
cmp
pusha
orl
js
mov
or
cmp
sub
lods
inc
xor
lods
push
push
pop
in
loopne
jl
sbb
mov
stos
paddd
dec
cs
inc
pop
jle
fcoms
subl
mov
push
aad
xor
xlat
fcoml
test
mov
jne
in
mov
scas
jae
mov
and
in
ficoml
mov
lds
stos
ja
lahf
int
cmpsb
paddd
and
popa
jnp
or
sub
roll
push
movb
enter
repz
dec
iret
sbbl
loope
cmp
sub
fdivl
fst
lcall
jecxz
out
pop
rolb
and
pop
mov
rclb
jo
or
test
into
or
or
bound
mov
lea
cltd
mov
pop
sub
outsl
mov
xor
aam
sarl
ficoms
inc
cs
or
imull
mov
les
cwtl
aam
push
cmp
mov
in
push
arpl
or
sub
enter
insb
pop
iret
mov
xor
ret
dec
aaa
lret
lock
adc
pop
sbb
iret
repnz
les
imul
dec
sub
add
negl
leave
dec
mov
sub
cmp
xchg
movsl
outsl
dec
adc
fcoml
pop
mov
mov
fstps
and
add
jne
cmc
mov
push
ja
and
adcl
clc
xchg
adc
jo
jno
test
sbb
rcl
pop
aaa
dec
je
sbb
loope
push
bound
add
sub
or
jge
sbb
fwait
pop
add
dec
mov
sub
leave
jno
or
stc
mov
sub
in
mov
mov
mov
jno
jo
out
fwait
jecxz
push
std
mov
jo
faddl
std
mov
insb
mov
cmp
sbb
stos
in
add
add
add
add
mov
add
add
add
add
add
add
add
add
lret
xchg
jnp
add
add
add
add
add
add
add
fwait
bound
add
add
add
add
jo
jo
mov
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
add
mov
add
adc
adc
add
popl
insl
adc
addb
add
add
add
adc
add
mov
or
add
add
inc
jb
add
add
add
sbb
sbb
sbb
push
sbb
sbb
ds
dec
jb
push
jb
outsl
outsb
dec
dec
jo
enter
enter
jecxz
out
inc
fidivl
dec
pop
add
ds
clc
xor
add
add
in
add
mov
mov
push
pushl
push
cld
jmp
add
lock
pushf
inc
imul
pop
leave
mov
or
xor
add
add
movsl
inc
mov
fcompl
jmp
in
push
incl
add
pushl
add
add
sar
cmp
test
incl
adc
test
je
rorb
and
cmp
aad
mov
clc
push
or
lcall
aaa
decl
xor
push
push
decl
add
push
pop
pop
push
adc
sbb
add
add
add
xor
movb
sbb
xor
dec
sbb
sbb
ja
add
gs
outsl
add
je
add
gs
gs
outsb
add
gs
dec
in
imul
je
xor
push
js
gs
jns
outsl
add
inc
je
add
leave
push
inc
divl
add
add
add
test
add
add
add
cmpsb
adc
xchg
add
mov
movsb
imul
aad
adc
jbe
mov
jmp
push
push
pushl
push
popf
fsubrp
bound
pop
das
out
into
pop
arpl
adc
into
bound
mov
push
sarb
out
sbbb
and
out
add
and
push
stc
cmpsb
ret
pop
cli
sbb
subb
test
mov
jb
les
arpl
jmp
shlb
jg
mov
jg
fistps
fsts
shlb
lret
and
gs
push
out
aad
cmpsb
mov
or
jne
cmp
aam
imulb
or
ja
or
shlb
aaa
push
sub
bound
xchg
aas
test
jl
loop
stos
mov
xor
test
cmp
out
jne
outsb
sbb
aam
addr16
test
mov
mov
mov
cmpsl
and
mov
cmp
in
jmp
ljmp
aas
xchg
in
inc
loopne
shlb
push
sub
int3
ja
mov
mov
cli
sbb
lcall
cld
lret
das
xchg
mov
xchg
add
push
sbb
out
rorl
sbb
xor
jbe
sub
mov
mov
lods
cmc
adc
dec
in
in
and
mov
ljmp
adc
inc
ds
sub
sub
rep
cmc
mov
sbb
out
lcall
ss
test
imul
add
mov
out
inc
push
pop
mov
pushf
add
bound
push
jmp
into
add
shl
pop
mov
cwtl
inc
jo
xor
sahf
aam
xlat
flds
arpl
scas
mov
pusha
push
test
enter
or
and
and
adcb
roll
xchg
inc
and
add
fldt
xorl
cmc
jle
out
fbstp
jge
pop
loope
test
lahf
xor
scas
movsl
rcrb
insb
lods
fists
and
roll
adc
bound
movl
incb
pushf
mov
pop
cmpsb
addr16
aad
rcrb
xchg
pop
aad
mov
ret
ficoml
int
jecxz
lds
and
mov
and
inc
and
scas
jmp
mov
flds
lret
pop
movd
mov
loop
add
sub
popl
and
mov
neg
mov
xor
pop
xor
add
mov
es
pusha
popf
sbb
pop
sub
cmc
inc
add
mov
xchg
and
pop
insl
aas
mov
addr16
addb
hlt
inc
shll
test
stos
rorl
fwait
outsb
shlb
leave
jns
test
push
movsl
dec
adc
imul
push
pop
popf
rcr
adc
std
xchg
outsb
insl
jbe
mov
ja
mov
rclb
adc
out
fldcw
dec
or
in
fcmove
xlat
sbb
int
shrb
pop
push
cmp
stos
xor
xchg
jae
xor
mov
cmp
sbb
dec
pop
fldpi
insl
fwait
gs
mov
and
pop
pop
xlat
push
rcrl
inc
sbb
jecxz
lods
aam
scas
lock
jno
lcall
in
sbb
push
inc
jp
mov
movsl
sub
adc
sbb
movsl
pusha
adc
mov
mov
in
jp
aas
or
insl
adc
lea
test
jle
repz
mov
ljmp
orl
pop
add
adc
sub
outsb
mov
sbb
inc
cmp
je
adc
adc
mov
loope
dec
insl
jo
fwait
sarb
inc
sub
push
jmp
jmp
into
dec
pop
adc
popa
lcall
sahf
dec
dec
sbb
gs
fwait
shll
jmp
dec
xchg
enter
rorl
cld
pop
aaa
dec
fdivs
mov
rcr
ljmp
mov
divb
mov
nop
mov
adcl
pop
aas
stos
arpl
add
mov
call
cmp
fistl
jo
jp
lret
adc
nop
sub
jo
add
cmp
scas
pop
call
jmp
shlb
xor
scas
cwtl
sbb
mov
imul
bound
push
test
shll
mov
fdivl
sbb
pop
xchg
mov
cwtl
dec
shrl
pop
loope
das
or
fs
test
icebp
popa
aad
jg
mov
and
js
in
shrl
cmpsb
sbbl
bound
icebp
inc
lods
repnz
jb
imul
gs
lcall
add
xor
ficoml
pop
push
bound
add
clc
rcll
cwtl
scas
pusha
xor
out
add
xchg
in
jae
push
arpl
ret
add
cmpsl
test
into
daa
fs
mov
and
inc
xchg
jnp
scas
test
pusha
imul
ja
into
or
xor
cmp
xor
xchg
push
jp
std
fdivrl
lcall
test
xchg
xor
or
aas
mov
test
outsb
pop
push
rcr
js
aad
push
sarl
mov
xchg
ret
add
test
fwait
iret
gs
fmuls
fimuls
xchg
pop
or
ret
or
or
sti
sahf
insl
f2xm1
sti
or
mov
push
or
testl
flds
inc
push
cmpl
push
xchg
mov
and
sub
sub
popa
pusha
out
jno
repnz
pusha
adc
sbb
xor
enter
add
scas
xchg
add
inc
fmull
add
cmp
lret
fcompl
cli
dec
fsts
scas
dec
outsb
cmp
jmp
icebp
and
push
repnz
sub
xor
jl
dec
stos
mov
mov
mov
mull
dec
push
std
and
movsb
jbe
insb
jle
fadds
dec
rcrb
out
mov
sti
or
dec
push
imul
inc
aaa
dec
sub
cmp
xor
adc
lea
inc
lods
cmp
sbb
negb
lcall
xor
add
add
mov
mov
dec
lret
stos
mov
stos
test
sub
in
sub
sbb
mov
outsl
ljmp
mov
jg
rorb
dec
in
js
or
add
arpl
mov
js
movsb
mov
outsb
dec
icebp
and
and
lds
ror
jno
inc
sub
xchg
inc
fstl
shlb
and
or
mov
fwait
inc
cmp
xchg
cwtl
and
sub
xor
mov
add
cli
int
push
mov
iret
and
sti
imul
stos
fsincos
cmp
fsts
rolb
jmp
mov
jmp
shrb
mov
sar
inc
mov
and
jge
popa
dec
jbe
inc
jne
or
dec
scas
push
mov
mov
addl
dec
inc
jns
mov
xchg
subb
xlat
mov
or
fsubs
sub
lods
lea
in
repz
jge
sub
xchg
pusha
cltd
push
int3
mov
sarb
jl
inc
xchg
loop
stc
or
pop
fsubrs
xlat
sub
lods
mov
pop
leave
xchg
sub
dec
jecxz
repz
fldl
jle
and
out
dec
mov
stc
xchg
bound
push
push
add
xorl
rclb
aaa
mov
xchg
iret
or
les
mov
sbb
stc
inc
pop
pop
lock
add
push
xchg
adc
movsl
mov
or
xor
dec
aaa
push
lcall
ds
cmp
xchg
shrb
dec
and
popf
xchg
push
lcall
and
dec
imul
add
sbb
rcll
pusha
inc
insl
fcoml
mov
test
mov
enter
adc
xor
loop
mov
lea
loop
pop
sti
sbb
adc
hlt
xor
xlat
out
in
out
inc
andl
ds
or
xor
adc
or
outsl
jne
sahf
dec
fists
mov
in
inc
sbb
xlat
xor
addb
adc
scas
test
stos
mov
insb
sti
test
cwtl
mov
sti
and
mov
test
sahf
loop
aam
push
add
fidivrl
outsl
adc
loopne
int
sub
xchg
pop
jo
mov
aaa
mov
sahf
das
pop
xor
dec
sub
jno
xor
mov
mov
mov
dec
push
xor
lcall
mov
popa
jg
test
dec
mov
pop
push
cld
sub
cmp
hlt
fistps
stc
iret
or
adc
cwtl
sub
or
mov
rclb
xchg
adc
clc
dec
or
loopne
sub
mov
inc
std
scas
adc
daa
mov
xchg
in
jnp
pop
mov
int3
fcoms
mov
push
jno
jg
idivb
into
stos
call
lret
fiaddl
inc
sbb
dec
jl
out
icebp
hlt
ret
or
push
arpl
sub
pop
imul
aad
cltd
push
ja
sub
fsub
test
inc
pop
and
cwtl
push
jns
push
inc
sti
add
or
xchg
stos
mov
push
dec
or
decl
jp
mov
cmp
or
sarb
xor
xor
or
xchg
inc
pop
adc
inc
arpl
popf
sbb
and
lock
in
ret
mov
or
inc
std
pop
inc
add
xorb
sub
dec
out
out
ret
imul
xlat
xor
aam
xchg
pop
out
push
outsl
sbb
call
loopne
rcrb
cmp
aaa
test
fldenv
xor
jbe
cmp
mov
adc
mov
js
mov
ja
into
jge
xchg
cmpsl
sub
add
mov
pop
les
mov
int
cmp
sarl
adc
lods
lcall
dec
sub
lods
push
and
push
mov
loope
xor
mov
in
leave
adc
test
cwtl
stos
adc
sub
cmc
lret
mul
mov
jb
inc
sti
sub
push
inc
les
xor
jecxz
and
jle
mov
jl
mov
stos
movsb
ret
pop
push
icebp
lock
xchg
xchg
jecxz
xchg
pop
cmp
shl
int
jl
cmpb
js
out
sbb
sbb
sub
adc
in
pop
xchg
sbb
ja
fcomps
sahf
mov
jae
and
pop
xchg
sub
push
dec
aas
push
jmp
dec
cmp
popa
jmp
nop
mov
shll
orl
test
cli
inc
pop
jne
mov
shll
or
sub
aaa
inc
cmpsl
lret
push
mov
pop
mov
mov
repz
les
and
mov
adc
fidivrl
addr16
xchg
jle
mov
xchg
push
inc
mov
adc
mov
pusha
and
xchg
cmp
sahf
dec
mov
jbe
push
out
movsb
sub
pop
sbb
push
mov
vmovsd
adc
std
dec
push
ljmp
cmpb
jp
stos
push
lret
fsts
and
test
push
and
and
lahf
mov
fwait
mov
xchg
nop
sub
int
stos
mov
inc
in
rcrl
mov
and
push
pop
inc
bnd
rorb
dec
stc
push
je
add
mov
ja
cwtl
dec
lea
mov
stos
jb
add
mov
xlat
dec
inc
lret
mov
pop
loope
dec
inc
fiaddl
xlat
mov
test
bt
xchg
mov
lahf
faddp
mov
popf
jg
add
cmc
sub
fiadds
and
jbe
pop
and
add
pop
inc
or
outsl
xchg
and
pop
jp
and
sahf
cmp
pop
int3
stos
mov
scas
bound
cmc
mov
push
mov
stos
ja
pop
add
pushf
test
out
push
xchg
popf
loopne
hlt
or
jbe
pusha
cmc
push
mov
sbb
movsb
lods
jmp
inc
xlat
ret
mov
fidivrs
ret
addr16
mov
xor
pusha
mov
lahf
adc
dec
and
test
cmp
inc
outsl
cltd
rol
dec
xchg
mov
xchg
push
and
stc
jb
popa
das
gs
adc
enter
cmp
mov
xor
in
jl
push
repnz
scas
out
mov
cmp
push
icebp
jae
mov
andb
push
test
clc
lahf
leave
arpl
outsl
test
jmp
pusha
in
imul
mov
daa
sar
pop
dec
xchg
ret
xlat
push
int3
lods
and
jmp
int3
int3
ljmp
push
xchg
jno
aad
mov
dec
pop
sbb
es
lcall
inc
enter
pop
movsb
rorl
push
into
lcall
inc
pop
movsb
jmp
xor
adc
mov
jmp
mov
pop
inc
shl
into
dec
jle
stc
xchg
hlt
pop
scas
mov
pop
or
cmpsb
mov
repnz
or
out
sbb
xchg
fcompl
idivb
cmp
ror
mov
stos
shll
sarl
xor
fsubrl
sti
imul
push
fimull
pop
cld
mov
dec
xor
js
int3
rol
stos
mov
and
mov
imul
or
pop
mov
addb
cmp
sti
or
push
ret
pop
mov
in
cmp
inc
push
lock
sub
scas
push
sub
push
out
add
outsl
fstp
out
lret
mov
das
stos
inc
inc
xor
cmpsb
loop
jae
cli
mov
ret
inc
pop
dec
lret
cli
push
leave
jmp
fwait
push
or
fprem
aaa
mov
or
pushf
nop
mov
in
fcmove
bound
mov
push
aas
cmc
mov
push
rcrw
cmp
dec
or
lahf
lods
pop
je
cmp
push
jge
mov
mov
jno
sbb
push
das
push
jnp
sub
sbbl
push
dec
and
insl
xchg
jg
lea
sbb
xchg
dec
push
xchg
inc
push
mov
std
mov
mov
stc
or
cmp
rcl
xorb
ret
ljmp
dec
xchg
push
adc
pop
jg
mov
cli
sub
repnz
add
dec
movsl
shrb
outsl
fidivl
add
add
call
mov
dec
leave
jae
jp
icebp
ljmp
int
add
dec
mov
in
aad
popa
enter
lret
shlb
xor
xchg
ficoml
adc
mov
and
test
sahf
cltd
out
mov
cld
loop
addr16
movsl
jl
jne
pxor
movsl
shl
loope
xor
ret
cmp
pop
dec
push
outsb
lret
ds
push
ss
cltd
add
adc
mov
add
rorl
add
xor
andl
inc
popf
jns
mov
flds
sub
fcoml
arpl
dec
pop
mov
mov
mov
add
dec
bound
gs
push
fidivrl
fcoml
in
jno
xor
test
loop
ljmp
sbb
jmp
bound
scas
int
jb
xchg
push
shlb
adc
testl
cmpsl
popa
stc
add
repz
pop
dec
adc
imulb
pop
push
sarb
push
jns
adc
test
imul
out
xchg
pop
arpl
xchg
cmc
test
mov
mov
out
dec
xlat
sub
ret
add
orb
cmpsb
mov
lods
scas
sub
cmp
mov
loope
popf
xchg
mov
test
mov
ret
sti
imul
jge
push
lret
hlt
xor
scas
mov
jbe
into
sahf
clc
push
pop
xchg
push
or
fs
mov
dec
mov
in
aaa
mov
mov
dec
testl
sub
fwait
xchg
mov
lea
pop
es
scas
nop
std
roll
hlt
cs
loopne
lcall
add
mov
mov
orb
add
jne
xor
adc
jl
cmp
and
mov
enter
add
clc
xchg
and
loopne
mov
or
out
int
mov
fisubrl
loope
mov
fisttpll
bnd
fs
jbe
inc
cmp
push
hlt
jno
test
cli
mov
pop
imul
dec
mov
js
stc
add
sub
add
ds
adc
add
int3
sub
bound
add
cmpl
mov
xor
fsubrp
das
sbb
xor
loop
or
or
pop
add
fnstcw
in
fildll
jp
pop
imul
sbb
js
in
je
addb
sub
pushf
int3
xchg
lock
and
add
fucomip
in
dec
add
lds
jecxz
mov
pop
daa
cmp
out
push
add
icebp
data16
xlat
js
push
punpcklbw
filds
push
out
or
mov
mov
jb
or
shlb
repnz
and
xor
insl
shll
fdivrs
inc
push
cmp
in
cmp
out
sarl
jg
jns
jne
mov
scas
mov
cmpsl
rcl
sub
clc
jae
fs
in
dec
out
adc
jae
shl
or
and
mov
mov
mov
xor
or
mov
and
ret
sbb
lds
mov
mov
mov
inc
popf
dec
adc
imul
popa
sub
outsl
enter
gs
hlt
movsb
xchg
call
int
mov
loop
or
movsl
out
mov
add
add
add
add
add
add
xor
pusha
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
in
add
add
stos
stos
add
ja
mov
add
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
push
outsb
jne
or
add
add
add
xchg
inc
add
add
add
adc
add
add
add
add
mov
add
add
cmpsb
xor
add
add
add
add
add
and
gs
push
jae
inc
imul
add
shufps
jmp
mov
enter
or
pop
push
lea
mov
or
incl
ja
incl
clc
add
cld
or
or
push
push
rolb
push
add
call
dec
insb
push
push
rorb
mov
add
mov
add
daa
add
add
adc
add
adc
add
xor
call
add
decb
cld
test
std
std
mov
decl
add
enter
add
push
cmp
clc
scas
cmp
pushl
lret
mov
lret
adc
lock
add
call
adc
add
add
add
add
add
add
add
add
add
xchg
add
add
inc
gs
jae
inc
inc
inc
inc
outsl
outsl
push
outsl
test
insb
gs
insl
inc
jns
and
gs
je
arpl
jno
gs
cs
outsl
inc
ss
insb
jge
add
outsl
imul
je
je
je
insb
push
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
adc
rol
xor
data16
aad
xor
lock
shlb
icebp
lods
push
pusha
push
test
dec
outsl
sbb
aam
stc
push
and
pop
pop
push
gs
xor
push
sbb
mov
push
mov
jmp
sahf
nop
push
ss
call
cld
jne
add
xchg
pop
ds
sahf
enter
mov
pop
add
cmp
push
xor
push
ret
mov
add
pop
fnstenv
xchg
mov
ss
mov
je
or
out
incb
dec
popa
cmp
xchg
addr16
std
xchg
sti
out
inc
fwait
clc
cmp
js
mov
mov
cmpsb
jl
adc
lret
cwtl
jle
inc
mov
add
std
js
mov
mov
push
jmp
test
out
mov
fldlg2
arpl
pop
mov
cmp
inc
gs
fsubl
loop
lds
out
jle
arpl
aaa
sub
mov
divl
cltd
aam
mov
jbe
cmp
push
test
and
cmc
lea
cld
pop
aad
inc
xor
adc
push
pop
pusha
xchg
sub
add
test
dec
lods
push
out
lcall
lds
and
sarl
add
xor
pop
xchg
in
lods
cmc
sbb
lock
pop
pop
adc
jp
push
into
sub
cwtl
push
or
fcmovu
aaa
mov
pop
cmp
xor
or
lea
clc
xchg
mov
push
mov
fistl
pop
cmp
test
push
shll
cmp
xchg
mov
add
xchg
mov
adc
inc
and
cmpsb
push
bound
xchg
or
nop
hlt
into
cmpsb
xor
loop
add
adc
ret
pushf
and
cmp
cli
sub
insb
and
addr16
repnz
mov
jbe
jle
mov
aam
stos
jmp
push
xchg
pop
push
fisubrs
test
pop
jnp
add
adc
dec
daa
movsl
mov
push
sbb
ljmp
xchg
jmp
or
cltd
push
divl
in
and
mov
xor
nop
out
inc
dec
daa
aam
inc
test
andb
sub
push
jp
mov
lcall
cmp
fcoms
mov
cmp
xchg
inc
add
divl
loopne
push
mov
mov
add
jge
adc
xor
mov
icebp
xlat
cmc
fs
add
dec
pop
pop
mov
mov
and
aaa
sbb
jmp
dec
mov
inc
aad
test
jo
inc
out
icebp
sarb
es
sbb
pushf
mov
xchg
or
sub
mov
xor
out
addl
sub
jb
js
fdivs
pop
lods
dec
cmp
dec
ficompl
dec
lret
imull
jmp
repz
les
cltd
outsl
rorb
sub
inc
pop
inc
sahf
or
mov
mov
cld
out
imulb
jbe
pop
out
cmpsb
xor
addr16
mov
rcrb
pop
push
popf
notl
rorl
and
cmp
mov
sub
inc
push
mov
push
inc
push
sub
fisubrs
or
nop
fsubl
rcrl
test
fs
fsubl
sarb
mov
mov
fildl
jnp
data16
mov
lds
or
test
sbb
jecxz
cmpsl
adc
int
rorl
mov
testl
adc
mov
cmp
sbb
adc
sti
adc
xchg
mov
pop
or
cwtl
or
cmp
rcll
jne
pop
add
inc
push
pop
loope
sub
in
scas
add
xchg
ret
ss
inc
adc
xchg
ret
cmp
sbb
js
and
lea
fcoml
mov
mov
call
add
push
push
mov
sbb
lcall
std
cmpsb
sub
in
mov
mov
mov
je
ds
push
mov
mov
xorl
adc
xor
add
lea
fucomp
insl
scas
sub
push
mov
call
xlat
iret
sub
or
or
adc
mov
fcoms
sbb
ljmp
push
sahf
add
push
out
or
mov
dec
andb
repz
lods
sub
xchg
jecxz
shrl
push
insl
jmp
shr
test
fucompp
addr16
movsb
cmp
aaa
inc
shrb
clc
cmp
jns
sbb
inc
xchg
dec
jo
popa
lods
ja
call
aad
xchg
and
jnp
pop
in
cs
divl
jne
xchg
jge
test
nop
ss
push
push
bound
or
es
outsb
jecxz
mov
aad
mov
lcall
faddl
mov
sbb
outsb
pop
enter
int
pop
xchg
movsl
cmc
lcall
jecxz
test
jnp
mov
stc
adc
pop
shrb
jae
cmp
aad
xorb
xchg
ret
iret
inc
add
stos
insl
mov
movsl
rol
or
mov
cmc
in
bound
add
xchg
push
push
nop
pop
sbb
mov
outsb
clc
jb
mov
cmpsb
mov
ss
filds
xchg
pop
imul
pop
xor
inc
inc
and
rorb
stos
test
imul
mov
adc
jge
sar
test
les
mov
cltd
lods
nop
jne
cmp
mov
pusha
dec
inc
xchg
add
push
mov
mov
xchg
sbb
das
adc
nop
cltd
sarl
pop
addr16
mov
scas
xchg
cmc
and
cmp
testb
mov
xor
ds
fisttps
gs
jnp
arpl
push
mov
xor
inc
dec
ret
out
outsb
xchg
dec
enter
jbe
push
cmpsl
cmp
out
xor
popa
filds
xchg
dec
test
adc
mov
inc
push
push
aam
jbe
jb
dec
inc
adc
repnz
clc
int3
inc
or
jmp
push
sub
ror
adc
pop
daa
mov
repnz
jns
lods
daa
lods
mov
mov
dec
cmpsl
push
ljmp
push
fxtract
sbb
add
sbb
popf
outsb
nop
xlat
in
inc
cmp
or
pop
loope
mov
mov
push
out
lret
dec
sub
pop
xor
orb
jle
shr
lcall
shrb
cmp
jg
mov
out
jle
inc
jno
in
jnp
push
fsubr
test
hlt
mov
lret
movzwl
adc
jecxz
mov
pop
xchg
or
xchg
dec
jmp
stc
popa
mov
jbe
leave
in
jae
inc
and
scas
push
cmp
cs
pop
push
and
dec
sbb
jle
adc
in
clc
push
sbb
cmc
adc
lret
add
add
pop
test
sub
loope
loope
scas
mov
pop
mov
mov
jl
xor
js
cmp
test
pop
dec
xor
xchg
dec
lock
push
jecxz
jae
jge
mov
les
mov
add
rcll
mov
cltd
lret
sub
in
inc
push
mov
dec
adc
lds
lahf
imul
das
pop
or
fnstsw
fimull
into
stc
add
jl
cmpb
lock
pop
mov
and
mov
jp
jecxz
nop
or
mov
xchg
shl
out
xor
popf
or
into
daa
dec
cmpsb
test
fsub
inc
pop
mov
rcl
mov
push
fmuls
pop
mov
pop
mov
pusha
ss
mov
popf
repz
mov
push
jle
add
mov
ds
xchg
and
test
push
mov
xchg
sub
hlt
out
sbb
fadds
cmp
adc
push
gs
lea
or
mov
dec
sar
cli
lock
fimuls
pop
xor
outsl
pop
dec
xorb
in
pop
xchg
dec
cltd
jnp
sbb
shld
sbb
or
jg
mov
fldl
mov
pop
loopne
inc
dec
adc
push
adc
aaa
xchg
loopne
test
mov
lock
or
xchg
addb
es
mov
enter
std
movsl
test
sub
mov
push
imul
sub
jp
xchg
add
pop
pop
fsubrs
cmp
xchg
js
arpl
jne
pop
daa
cltd
inc
in
fucomi
popa
and
pushf
push
pop
pushf
lret
sub
add
jle
sbb
sahf
sahf
mov
mov
jp
inc
repnz
addr16
xchg
les
sub
clc
mov
sub
add
sub
mov
mov
aaa
xchg
call
pop
mov
mov
popf
dec
rcrb
loop
sub
lahf
push
movsl
nop
xor
or
sbb
dec
jb
int3
xchg
divl
fcmovnb
sbb
jns
jg
and
push
outsl
add
shlb
adc
test
pop
testl
sub
mov
test
cmpsl
fcoml
adc
jne
gs
popf
jl
std
mov
aad
jmp
in
in
sbb
cmp
mov
or
mov
jo
mov
dec
mov
push
sub
inc
push
cwtl
push
int3
cmp
fdivrs
lcall
mov
gs
popa
ret
jmp
loope
mov
lea
push
pushf
out
pop
push
movl
rclb
mov
add
pop
xchg
cmpxchg
pusha
cmp
hlt
cmc
sbb
aad
push
push
aaa
sahf
lcall
lret
mov
repnz
test
les
stos
and
mov
add
jmp
push
sti
mov
mov
add
das
dec
popa
push
and
ffreep
adc
push
out
cs
call
and
push
mov
inc
mov
mov
sbb
add
sbb
lods
xchg
dec
pop
push
jecxz
xchg
cmc
push
sbb
sbb
mov
jp
dec
out
push
mov
xor
fmuls
addr16
mov
loopne
xor
xchg
jmp
dec
ds
int3
mov
or
arpl
loopne
pop
or
ret
xor
sub
sbb
jmp
lahf
hlt
sub
mov
mov
xor
rcrb
pop
je
sub
push
lcall
repz
jne
loope
add
push
xchg
imul
or
in
mov
out
das
push
mov
or
faddp
dec
xor
mov
mov
loope
sbb
clc
sahf
popf
icebp
push
in
test
xchg
mov
fisttpll
shll
lahf
xchg
out
in
push
push
outsl
inc
adc
add
outsb
mov
mov
ja
aam
inc
push
fcompl
cmp
stos
mov
mov
decl
fldcw
iret
ds
lcall
repz
mov
jmp
lods
mov
mov
pushl
scas
cmp
out
sbbl
lcall
rep
out
ds
lea
test
xchg
pop
mov
hlt
mov
shr
add
xchg
cmp
aas
lods
xchg
lds
in
xor
fwait
sarl
dec
clc
shrl
jle
dec
adc
lret
push
sub
outsl
loop
cltd
lret
mov
fdivl
inc
push
mov
xchg
or
sti
push
jge
mov
cmp
fidivl
push
pop
xchg
movsb
pushf
mov
mov
adc
les
in
jns
xor
cmp
add
imull
xor
push
into
rolb
pop
es
popf
out
shll
jne
xchg
fisttpll
mov
xchg
outsb
arpl
gs
cmp
mov
xchg
mov
or
into
ja
mov
dec
mov
push
and
and
aaa
fsubrs
daa
inc
add
lcall
inc
mov
mov
ljmp
mov
jo
leave
pop
repz
sub
out
popf
ror
push
bnd
bound
clc
ret
imul
pop
sbb
incl
imulb
in
hlt
inc
sbb
negb
cmp
push
cli
cltd
movsb
add
maskmovq
divl
movsb
xchg
aad
pop
sbb
es
cld
sbb
pop
outsb
clc
inc
pusha
loop
insb
icebp
push
imul
mov
stos
adcb
mov
cmp
cmp
cli
xor
jle
or
jmp
jmp
scas
push
mov
cli
std
pusha
mov
jnp
ljmpw
mov
cmpsb
shrl
add
lret
popf
scas
adc
pusha
mov
jae
jb
movsl
imul
xchg
jb
call
cmp
leave
movsl
and
sub
sbb
pop
jnp
sti
xor
sbb
pop
pusha
sbb
jne
mov
aad
xchg
jo
mov
std
jno
inc
rcrl
aad
jnp
add
hlt
xchg
cld
mov
movsl
or
and
adc
test
lcall
dec
inc
test
cltd
or
fistl
shr
xor
jmp
popf
or
pusha
lds
xor
or
pop
scas
and
xor
les
push
sub
mov
pop
push
out
jnp
add
sarl
sub
int
loopne
ja
sti
jge
xchg
adc
mov
addr16
or
xor
dec
stc
clc
nop
lret
popf
and
ss
push
pop
inc
jge
addr16
add
xor
sbb
aad
mov
dec
jbe
data16
lret
fs
jle
push
incb
loope
out
loop
test
dec
je
mov
inc
adc
pop
or
stos
enter
int3
inc
mov
push
in
lahf
and
or
fisubrl
std
test
notb
icebp
pusha
enter
ret
and
jo
into
adc
rcr
inc
scas
xor
jge
push
ss
adc
cmp
ss
out
xor
dec
sub
add
mov
insl
into
rclb
lds
mov
xchg
jge
mov
pop
dec
mov
imul
mov
push
js
repnz
xorl
scas
fisubs
andl
test
jns
fldcw
leave
adc
or
das
add
and
mov
imul
mov
ss
mov
jno
sbb
scas
xchg
sbb
jnp
in
sahf
adc
xchg
cmp
mov
mov
dec
ljmp
xchg
cmpsb
cmp
std
mov
adc
les
mov
inc
cmc
cli
sub
inc
outsb
jno
nop
mov
jecxz
popf
mov
cmp
test
pop
cmc
push
sub
es
fdivs
shll
jae
test
jecxz
fisubs
int3
imul
xor
int3
pop
fcmovnbe
jp
or
rclb
jbe
pushf
jno
in
mov
jno
ret
lds
fsubr
test
lcall
pop
jb
pop
inc
push
orb
pop
push
pop
mov
mov
std
mov
ljmp
pusha
int
rorb
inc
rorb
in
or
sti
pop
pop
outsl
inc
push
fmul
push
push
sahf
dec
adc
pop
cmp
mov
or
and
jl
js
inc
insb
lods
or
sbbl
cmpsl
lcall
lahf
rclb
add
int
loop
or
xor
mov
or
pushl
sub
inc
or
popf
xor
xor
fcmovne
movsb
nop
das
xchg
xor
mov
sub
lods
or
pop
jmp
imul
cs
dec
outsb
inc
mov
call
or
push
ja
rorb
scas
inc
sti
shrb
pop
lock
aaa
push
jg
fistpll
push
aam
xchg
cmpsb
pop
andl
addr16
xchg
out
mov
fcmovnbe
fdivr
jae
xchg
std
and
jnp
push
pop
stos
push
pop
data16
mov
and
fs
int
dec
mov
xor
xor
dec
sbb
push
add
push
imul
inc
mov
cli
in
or
add
in
outsl
or
out
mov
mov
pop
push
test
iret
rolb
aad
sub
inc
sbb
xchg
jb
jp
aad
jmp
mov
aaa
andb
mov
push
mov
or
jae
cmpsl
outsl
adc
jnp
test
push
inc
enter
jbe
ds
imul
sbb
cmp
adc
sub
push
or
adc
int3
inc
mov
sbb
cltd
popf
sahf
inc
and
test
mov
pusha
das
adc
inc
pop
xor
jno
pop
add
mov
jg
inc
test
sub
imul
out
out
mov
cmp
mov
sbbl
inc
imul
add
int3
lcall
xor
sbb
mov
xor
inc
lds
aam
fstpt
jns
adc
call
sbb
rolb
inc
leave
repnz
out
jmp
fnstcw
jp
sub
push
stos
push
mov
mov
in
stos
ret
fwait
out
xchg
cmc
xchg
fwait
push
jecxz
or
cmp
fiadds
inc
rol
or
mov
mov
fwait
mov
sub
mov
fstpt
sub
push
jb
insl
int
sbb
fisubl
int
andb
mov
jb
mov
mov
orb
mov
daa
fs
out
cli
jo
cmpsl
and
loop
sarb
xchg
jle
cmp
sub
into
xchg
out
hlt
ficoml
in
dec
iret
jbe
lock
fcoms
aaa
adc
ss
popa
jae
add
es
xor
mov
es
or
cmp
add
dec
adc
sar
lret
stos
aam
mov
leave
lods
adc
sub
jae
xor
inc
gs
jne
mov
push
imul
xchg
inc
mov
test
lret
rcrl
jge
push
hlt
mov
xchg
pop
mov
sbb
inc
jbe
sub
and
aaa
sbb
jno
jl
jo
dec
aaa
mov
pop
or
mov
inc
movsl
subb
add
add
add
add
add
rolb
add
add
add
inc
push
loopne
add
add
add
data16
add
add
add
jo
add
add
add
add
add
add
add
add
push
add
ljmp
stos
add
ja
mov
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
lock
add
add
inc
aam
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
mov
aam
add
add
xchg
aam
add
add
jl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
fcom
add
loopne
add
in
aam
add
aad
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
js
add
cwtl
aad
add
aad
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
jo
add
js
add
mov
add
pushf
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
fadds
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
fadds
add
fadds
add
fadds
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
flds
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
add
in
add
in
flds
add
flds
add
flds
add
add
pop
fiaddl
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
fiaddl
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
