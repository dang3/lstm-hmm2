add
or
or
xor
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
push
xchg
xor
xchg
inc
push
pop
call
nop
jmp
nop
nop
nop
nop
push
xchg
or
mov
sub
addr16
jmp
call
xchg
lea
nop
nop
nop
nop
nop
nop
nop
push
nop
push
mov
pushl
mov
pushl
nop
call
push
pop
leave
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
nop
pushl
xchg
call
mov
jmp
push
mov
push
mov
push
mov
push
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
andl
xchg
push
xchg
xor
mov
and
push
pop
jmp
add
or
mov
test
nop
nop
nop
nop
nop
jne
xor
push
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
call
mov
rol
pop
jmp
addr16
nop
nop
nop
nop
nop
xor
xchg
jmp
push
xchg
call
addr16
xor
inc
or
or
pop
pushl
mov
jmp
mov
nop
movl
push
pop
add
rol
mov
xor
mov
shr
nop
nop
nop
nop
nop
nop
nop
nop
add
xchg
and
mov
mov
cld
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
addr16
and
mov
mov
sub
nop
jmp
mov
addr16
jmp
xor
mov
mov
xchg
mov
mov
jmp
sub
add
pop
jmp
add
push
pop
jmp
nop
push
xchg
ror
dec
mov
sub
mov
and
mov
mov
addr16
andl
mov
push
mov
add
xchg
nop
nop
nop
nop
nop
or
add
and
xor
shr
mov
xor
shr
add
sub
mov
push
mov
push
mov
xor
add
sub
mov
mov
mov
jmp
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
mov
addr16
call
xchg
jmp
nop
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
sub
shr
xor
rol
pop
mov
addr16
mov
nop
mov
xchg
jmp
nop
nop
nop
nop
nop
pushl
nop
nop
nop
nop
nop
nop
add
shr
pop
mov
xchg
mov
nop
mov
nop
xor
mov
test
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
push
mov
cmpl
push
pop
jmp
inc
or
or
mov
pop
mov
xchg
mov
mov
mov
addr16
jmp
add
mov
jmp
push
mov
dec
xor
and
mov
sub
addr16
jmp
nop
push
mov
and
dec
and
xor
mov
push
mov
jmp
nop
nop
nop
nop
nop
push
mov
push
xchg
jmp
xor
sub
sub
ror
and
mov
test
nop
nop
nop
nop
nop
nop
jne
jmp
push
nop
nop
nop
nop
jne
pushl
nop
nop
nop
nop
nop
dec
add
or
sub
inc
pop
jmp
lea
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
jne
sub
mov
xor
mov
shl
mov
movzbl
nop
nop
nop
nop
inc
xchg
mov
mov
jmp
mov
cld
jmp
nop
nop
push
mov
shr
mov
and
mov
sub
xchg
pushl
xor
pop
push
mov
push
mov
push
addr16
push
push
pop
jmp
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
addr16
test
nop
nop
nop
nop
nop
jne
mov
inc
rol
mov
rol
mov
and
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
xor
dec
push
shr
and
add
dec
sub
rol
mov
and
or
dec
test
jne
pop
pop
call
jmp
add
push
pop
add
xchg
add
nop
test
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
sub
rol
xor
xor
mov
mov
xchg
andl
mov
jmp
movl
addr16
push
xchg
pushl
xchg
call
push
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cld
mov
xchg
mov
xchg
xor
sub
xor
mov
test
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
push
popl
call
xchg
push
sub
add
or
pop
add
pushl
xor
pop
mov
xor
and
add
jmp
push
xchg
call
xchg
xor
xor
add
mov
jmp
jne
shl
add
rol
add
or
pop
mov
xor
or
and
add
pop
xor
dec
dec
sub
pop
and
inc
xor
ror
pop
call
addr16
jmp
je
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
nop
push
mov
push
xchg
jmp
rep
nop
nop
nop
nop
nop
nop
pushl
sub
mov
pop
ror
inc
mov
lea
nop
nop
nop
nop
sub
xchg
xor
mov
shr
add
dec
mov
call
mov
cmpl
push
pop
je
jmp
rol
nop
nop
nop
nop
nop
nop
xor
xchg
incl
mov
or
mov
jmp
nop
nop
nop
nop
nop
jne
xor
mov
jmp
push
cld
call
xchg
jmp
cmpb
mov
je
cmpb
nop
je
push
mov
mov
and
pop
add
jmp
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
sub
cld
jmp
nop
add
add
dec
add
nop
nop
nop
nop
inc
nop
push
nop
mov
xchg
mov
mov
lea
nop
nop
nop
nop
call
cld
test
nop
nop
nop
nop
nop
jmp
add
xchg
mov
push
pop
test
nop
nop
nop
nop
je
mov
nop
shr
mov
mov
movsbl
nop
nop
nop
nop
nop
nop
nop
nop
jmp
push
xchg
pushl
mov
push
mov
call
xchg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shr
and
mov
mov
shr
rol
add
or
mov
add
xchg
movzwl
nop
nop
nop
nop
nop
nop
nop
push
mov
rol
add
pop
cmp
xchg
jmp
jmp
sub
xor
mov
pusha
nop
nop
nop
nop
nop
nop
nop
sub
mov
mov
push
nop
call
xchg
add
addr16
push
popl
jmp
je
call
cld
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
call
push
pop
test
nop
nop
nop
nop
nop
nop
nop
je
push
mov
xor
mov
jmp
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
push
mov
movl
mov
push
inc
dec
xor
xor
push
mov
mov
rol
pop
dec
and
ror
dec
test
jne
pop
pushl
mov
and
pop
call
jmp
call
xchg
sub
and
xor
or
pop
call
nop
push
xchg
sub
xor
shl
mov
sub
shr
pop
xor
and
mov
mov
xor
xchg
rorl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
mov
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
and
or
sub
add
rol
pop
xor
or
or
shl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shr
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
add
sub
mov
jmp
movb
cld
movl
xchg
call
push
pop
popa
nop
nop
nop
nop
jmp
xchg
jmp
cmp
cld
jne
xor
nop
cmpl
push
pop
setne
nop
nop
nop
nop
nop
nop
nop
nop
jmp
mov
cld
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
jne
shl
rol
mov
cmp
xchg
je
jmp
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
pusha
nop
nop
nop
nop
nop
nop
nop
nop
call
push
pop
popa
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
call
xchg
dec
cld
lea
nop
nop
nop
nop
jmp
leave
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
movl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
nop
nop
nop
nop
nop
nop
nop
leave
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
incl
xchg
add
sub
xor
or
mov
cmp
xchg
jl
xor
mov
jmp
loopne
pop
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
add
xor
mov
or
mov
and
mov
jmp
jbe
lea
nop
nop
nop
nop
nop
nop
jmp
jmp
jne
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
xor
inc
mov
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cld
add
xchg
shr
xor
or
add
add
pop
add
pop
xor
dec
ror
pop
leave
nop
nop
nop
nop
nop
jmp
cmp
cld
jne
add
or
xor
mov
and
mov
add
mov
jmp
jns
in
inc
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
add
mov
mov
sub
xchg
mov
mov
mov
cld
jmp
add
addr16
add
mov
inc
mov
jmp
insb
pop
stos
and
mov
and
mov
mov
mov
addr16
add
mov
add
mov
mov
mov
sub
add
inc
mov
sub
and
sub
ror
mov
mov
mov
inc
dec
mov
shl
mov
jmp
shr
inc
xchg
dec
nop
nop
nop
nop
nop
nop
nop
jne
add
xchg
cmpl
xchg
jmp
push
int
rep
nop
nop
nop
nop
nop
nop
nop
nop
and
or
sub
or
inc
mov
add
xchg
movzwl
nop
nop
nop
nop
nop
nop
incl
nop
add
nop
cmp
mov
jl
jmp
dec
mov
add
movb
push
pop
incl
mov
jmp
jne
add
pop
push
dec
add
sub
mov
pop
add
add
add
mov
mov
mov
mov
add
cld
shr
pop
jmp
mov
mov
or
mov
ror
ror
add
mov
ror
mov
pushl
shl
dec
mov
pop
andl
push
pop
pushl
and
pop
jmp
jmp
shr
and
and
xor
xor
mov
movzbl
nop
nop
nop
nop
incl
mov
xor
cld
inc
mov
xor
inc
ror
ror
mov
and
xchg
jmp
stos
dec
es
popl
ror
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
xchg
inc
mov
shr
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
test
nop
nop
nop
nop
je
sub
and
mov
jmp
mov
and
cld
or
sub
or
shr
or
mov
add
nop
cltd
nop
nop
nop
nop
nop
nop
nop
and
xchg
add
push
pop
jmp
mov
mov
out
in
and
add
mov
sub
xchg
mov
xchg
incl
xchg
dec
xchg
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
in
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
shr
nop
nop
nop
nop
nop
nop
nop
nop
jmp
sbb
push
jne
jmp
jmp
or
adc
nop
lea
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
jle
mov
xchg
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
add
or
dec
mov
jmp
xor
clc
addr16
mov
mov
jmp
call
cld
test
nop
nop
nop
nop
nop
nop
jne
cmp
xchg
jmp
mov
sbb
sub
xchg
sub
mov
decl
nop
nop
nop
nop
nop
nop
jmp
outsb
push
cli
jne
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
nop
test
nop
nop
nop
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
and
or
mov
sub
sub
mov
sub
addr16
add
mov
mov
xchg
incl
cld
dec
mov
mov
nop
nop
nop
nop
jne
jmp
loop
loope
test
pushl
ret
and
and
mov
mov
addr16
sub
mov
decl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
test
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
sub
mov
sub
shr
mov
add
xchg
jmp
cmp
jmp
sub
addr16
jmp
jmp
mov
add
nop
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
jmp
ficompl
inc
dec
push
pop
dec
xchg
shr
rol
xor
add
inc
mov
movzbl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shl
nop
nop
nop
nop
nop
nop
nop
nop
add
xchg
jmp
ss
add
rclb
nop
nop
mov
nop
nop
nop
nop
jle
rorl
nop
nop
nop
nop
nop
nop
nop
nop
add
shl
shl
mov
xor
mov
add
addr16
dec
nop
nop
nop
nop
nop
jmp
fwait
es
pop
jmp
sbb
scas
jne
push
addr16
pushl
xchg
jmp
frstor
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shr
add
inc
mov
call
push
pop
cmp
xchg
jb
inc
mov
cmp
xchg
jb
inc
mov
nop
nop
nop
nop
nop
cmp
push
pop
jae
inc
xchg
inc
push
pop
jmp
mov
lock
jmp
rorb
call
addr16
test
nop
nop
nop
nop
nop
nop
nop
nop
je
jmp
mov
movsb
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
xor
and
xor
mov
or
mov
add
sub
and
shr
mov
sub
xchg
mov
cld
incl
xchg
dec
cld
mov
nop
nop
nop
nop
jmp
jg
rorb
pop
and
and
shr
shl
mov
nop
nop
nop
nop
nop
call
xchg
shr
dec
or
mov
mov
nop
jmp
xor
jne
mov
cld
xor
xchg
inc
xchg
jmp
nop
nop
nop
nop
nop
add
mov
and
and
mov
shl
and
mov
mov
mov
incl
push
pop
incl
mov
mov
xchg
xor
mov
cmpl
nop
je
jmp
or
jmp
orl
cld
inc
shr
ror
xor
and
mov
inc
mov
pushl
dec
pop
nop
nop
nop
nop
nop
rep
nop
nop
nop
nop
nop
nop
nop
pushl
nop
call
xchg
pushl
xchg
call
nop
jmp
rorb
add
sub
mov
or
rol
pop
sub
xchg
or
mov
shl
pop
leave
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
pushl
or
add
dec
shl
xor
pop
inc
inc
mov
add
mov
sub
nop
jmp
and
sub
or
mov
mov
jmp
shr
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
nop
nop
nop
nop
nop
mov
push
pop
shl
mov
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
mov
and
xchg
cmp
mov
nop
nop
nop
nop
nop
jne
nop
nop
nop
nop
nop
and
mov
add
xchg
add
push
pop
add
push
pop
nop
nop
nop
nop
nop
pushl
or
add
or
ror
mov
pop
addl
xchg
decl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
add
addr16
cmpl
xchg
jne
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
rol
ror
or
sub
pop
nop
nop
nop
nop
nop
mov
nop
mov
xchg
mov
mov
mov
shr
or
xor
inc
mov
push
xchg
nop
nop
nop
nop
nop
call
push
pop
rol
pop
push
xchg
mov
cld
call
xchg
mov
xchg
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
je
ror
or
xor
mov
shr
and
add
lea
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
and
mov
add
addr16
nop
nop
nop
nop
nop
push
xchg
nop
nop
nop
nop
nop
call
cld
cmp
addr16
mov
nop
nop
nop
nop
je
xor
and
mov
xor
mov
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
or
add
mov
inc
or
and
add
ror
mov
add
mov
add
xchg
jmp
jns
movzwl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
ror
mov
add
mov
add
cld
push
mov
pushl
nop
call
cld
nop
nop
nop
nop
nop
mov
nop
add
mov
add
push
pop
nop
nop
nop
nop
nop
inc
sub
xor
shl
mov
mov
test
nop
nop
nop
nop
nop
nop
nop
jne
nop
nop
nop
nop
nop
add
mov
cmpl
xchg
jne
pushl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shl
pop
nop
nop
nop
nop
nop
mov
mov
sub
dec
sub
mov
pushl
or
rol
pop
mov
push
pop
cmp
push
pop
jne
pushl
mov
pop
add
addr16
nop
nop
nop
nop
nop
or
add
pop
mov
xchg
pushl
mov
mov
and
mov
mov
pop
add
mov
mov
sub
pop
ror
dec
pop
xor
sub
rol
xor
mov
mov
or
add
shl
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
enter
idiv
xchg
jo
fbld
dec
inc
or
sbbb
hlt
mov
mov
lods
ds
mov
pop
or
shrb
sub
jb
loop
fcmovb
aam
pop
lods
sub
mov
shr
cmpsl
add
mov
sbb
sub
lock
xorl
mov
mov
neg
mov
xchg
loop
inc
sti
aam
sarb
int3
jmp
and
mov
inc
xchg
idivl
jp
lods
mov
stc
testl
sub
pop
lock
sbb
bound
inc
xchg
push
sub
scas
add
fcom
fs
pop
lock
loope
js
dec
mov
mov
in
adc
sarb
shll
rclb
sub
addb
pop
into
adc
inc
mov
popf
notl
fstpt
sub
insl
xchg
leave
ret
inc
mov
inc
or
sbb
iret
and
mov
fnstenv
xchg
fimuls
dec
movsb
jmp
mov
push
fwait
andl
xor
pop
cmp
cld
xor
lret
out
mov
fcmovne
sub
jmp
inc
inc
pop
icebp
or
out
icebp
loop
xor
lds
xchg
xor
xlat
loopne
and
test
xchg
cmpsl
mov
stc
shrl
adc
loope
clc
xor
adc
jecxz
add
adc
push
xor
push
jmp
ficompl
add
jne
lret
pop
inc
test
into
adc
xchg
jae
fstpt
fcmovnu
sbb
pop
xor
enter
sub
jo
int3
adc
push
arpl
mov
cmpsl
loop
pusha
ret
rcrb
and
data16
dec
push
pop
adc
mov
cmpsb
insb
test
mov
stos
dec
cltd
mov
mov
adc
pusha
mov
pop
adc
push
and
xchg
fidivs
je
mov
outsb
arpl
sbb
inc
add
sub
xchg
pushf
sbb
inc
and
int
add
jge
and
lret
roll
add
xlat
movsb
fadd
xchg
mov
cld
sbb
arpl
pop
mov
push
jno
sti
xchg
stos
xchg
jae
or
mov
shr
cmc
sarl
dec
xchg
ss
loopne
leave
lret
leave
popf
gs
xchg
jae
jae
imul
movsl
std
cltd
pop
sub
xchg
mov
outsb
pop
into
arpl
xchg
loop
sahf
add
xchg
cs
mov
es
in
lods
mov
jge
or
leave
jnp
sbb
xor
mov
int
mov
push
js
addr16
mov
add
insl
nop
lods
fmull
inc
mov
in
insl
les
stc
imull
test
mov
ror
dec
mov
xor
xorb
fnsave
and
dec
jno
fsubrl
mov
push
sub
dec
fs
shlb
mov
jmp
scas
cmp
push
dec
or
dec
push
mov
sahf
loopne
insl
inc
cmp
pop
push
add
sbb
enter
xchg
cmp
cmc
inc
pop
lret
aad
cmc
or
pop
mov
ds
das
push
add
rcl
xchg
imul
or
lock
js
inc
rorl
and
cmp
push
aaa
das
push
clc
mov
sbbb
loop
xorl
sbb
pop
icebp
insb
cmp
push
mov
xor
pushf
out
cmpb
jle
pop
rorb
ret
mov
sbbl
jns
lcall
or
jmp
inc
mov
mov
xor
ljmp
ret
scas
sti
int
jmp
negl
into
insb
loop
add
cmp
xchg
ret
push
stos
adc
sbb
push
pop
adc
dec
cld
repnz
daa
outsl
cmp
lret
aas
fisubrs
jecxz
int3
out
lcall
jg
aad
push
xchg
clc
jae
ret
mov
jbe
push
mov
mov
add
pushf
rolb
inc
xchg
movsl
jno
add
xor
lods
popl
jo
ret
sbb
or
or
ss
and
cmp
or
mov
in
sub
pop
addl
xlat
daa
into
insl
insb
cs
in
das
repz
xchg
ret
sub
pusha
addl
stos
into
cmp
dec
pop
fucom
in
cli
loopne
push
stos
sbb
mov
dec
pop
das
adc
sub
pop
dec
fmull
lds
jl
xor
das
mov
sub
jae
pop
mov
lods
pushl
in
in
push
xchg
movsb
or
and
or
adc
fidivrl
nop
sbb
pop
add
add
adc
mov
inc
in
and
rcr
xchg
adc
fs
xor
cmp
mov
pop
fmull
mov
cmp
or
inc
imul
xor
mov
xor
cli
int
jno
movsl
push
cld
jp
scas
repnz
sbb
jns
push
add
addr16
jle
cs
xor
jp
iret
xchg
pop
aas
or
xor
mov
cmpsb
loop
xor
add
popa
jl
dec
mov
mov
inc
add
sahf
and
lds
loopne
pop
xor
sub
aaa
adc
adc
mov
mov
mov
push
pop
repnz
jecxz
cmp
or
movsl
fistpl
adc
notb
adc
adc
push
sub
jge
clc
addr16
sub
shlb
imul
sub
sbb
pop
lock
loope
insl
adc
ja
hlt
mov
sub
xchg
out
dec
test
pop
ficompl
dec
stc
cmpsl
mov
pop
push
mov
inc
test
jp
jmp
mov
mov
fwait
imul
out
scas
xchg
es
mov
ljmp
mov
mov
pop
jecxz
int
push
mov
mov
xchg
mov
mov
mov
fisubrs
lds
inc
add
int3
add
push
cmp
mov
scas
adc
mov
lret
pop
push
loopne
bound
mov
dec
jae
fiaddl
jle
mov
inc
mov
or
sbb
pop
add
call
push
xlat
jmp
pop
loop
jbe
aas
add
aad
arpl
add
adc
leave
je
lret
shlb
mov
xor
mov
fdivs
xchg
or
shlb
and
bnd
or
sub
sbb
mov
mov
hlt
adcb
push
mov
ja
push
adc
xchg
sbb
push
ds
adc
cmp
popf
jge
bound
and
jb
repz
rcll
test
dec
sbb
ss
sub
popf
ret
shll
mov
xor
dec
and
jns
ret
vcvtsi2sd
int3
fstps
ret
mov
add
dec
inc
mov
nop
pop
lret
pop
jecxz
ficompl
lahf
lock
mov
insb
and
lret
push
mov
add
imul
mov
and
cmp
add
push
subb
lret
fstps
adc
pop
scas
std
fs
std
es
adc
outsl
mov
mov
mov
sub
cmp
fimull
sub
mov
mov
xchg
ja
int3
dec
xor
inc
mov
xchg
adc
jmp
imul
mov
add
les
jmp
mov
pop
lock
shll
lods
popa
or
and
xor
push
insl
mov
add
inc
sbb
push
xchg
test
push
sub
in
cmpsb
adc
push
frstor
pop
int3
sub
out
sbb
xchg
mov
int3
lahf
ss
gs
je
cmp
mov
rorb
adc
adc
adc
cmp
nop
shl
pop
mov
dec
and
pop
push
movsb
leave
xor
or
pop
out
aam
pop
movsl
mov
pop
dec
inc
sub
jb
cmp
dec
xchg
mov
xchg
in
push
mov
or
add
pop
cmp
dec
mov
push
cmp
stc
inc
out
or
or
movsl
nop
mov
gs
icebp
ja
scas
dec
in
pop
pop
lods
cmp
sub
stos
adc
outsb
mov
dec
outsb
popf
mov
mov
add
jnp
add
insl
mov
repz
mov
xchg
push
ret
lret
or
pop
xchg
js
add
or
push
cmpsb
jl
test
adc
jl
mov
loop
gs
or
pushf
pusha
or
xor
xchg
dec
fistl
add
jmp
or
and
xchg
dec
mov
test
lock
add
std
andb
or
sub
pop
cltd
repnz
dec
push
cmp
pop
lahf
popa
inc
repz
std
cwtl
xor
jne
mov
add
mov
insl
enter
mov
shlb
push
sti
arpl
adc
pushf
mov
into
faddl
mov
or
flds
aaa
mov
or
mov
add
sub
out
dec
mov
push
call
cltd
xor
iret
es
mov
sub
repz
mov
jle
fadds
nopl
rolb
pop
jecxz
xor
inc
cli
imul
push
xchg
int
or
dec
inc
cmp
std
addl
jnp
mov
inc
inc
xlat
movsl
loope
imul
dec
cmc
add
out
test
inc
add
mov
adc
cwtl
pop
mov
jno
movsl
pop
div
std
and
sbb
cmpsb
addb
insl
out
out
push
call
pushf
inc
xchg
pop
loop
in
mov
push
push
ret
sub
push
movsl
outsl
pop
mov
dec
cmp
mov
rcrl
into
pcmpeqd
push
rclb
les
rcrl
adc
ss
test
lods
mov
data16
clc
pop
lret
nop
pop
dec
inc
lds
in
jnp
in
fidivrs
test
add
subl
dec
xchg
jl
xchg
ds
popf
shrl
out
jg
mov
mov
les
fwait
xor
mov
hlt
inc
inc
xor
pop
jp
mov
inc
idivl
das
or
xchg
inc
pop
push
std
xchg
pop
sahf
cmpl
lea
call
rorb
xchg
loop
jl
cli
add
or
pop
xchg
sti
or
cwtl
data16
test
cvtdq2ps
mov
scas
scas
ret
ficoml
inc
rclb
popf
movsl
sub
mov
cmp
push
fisubrl
sbb
test
int3
es
mov
or
and
adc
xchg
mov
sbb
push
xchg
out
idiv
pop
decl
and
mov
test
cmp
fdivrp
xchg
pushf
clc
or
out
pop
test
cmp
jbe
cmp
xor
cmpsl
push
jle
jle
pop
in
mov
es
mov
pop
std
loope
pop
add
cmp
cmp
mov
fnsave
push
fwait
aaa
mov
out
jle
pop
mov
mov
test
and
iret
and
cmp
adc
xchg
imul
push
push
out
dec
mov
test
lahf
ljmp
pop
or
lcall
in
jl
lret
xchg
jnp
xlat
cmp
xor
out
inc
jge
dec
sahf
pop
cltd
dec
mov
and
lea
pop
sbb
add
inc
loop
lock
lcall
les
push
es
andl
fiaddl
pop
mov
shrb
sub
inc
adc
sub
cmp
xor
insb
rcll
hlt
ffree
dec
xchg
mov
fdivrl
mov
mov
adc
jae
push
daa
sbb
dec
sub
jns
lret
mov
loopne
int
push
dec
mov
in
xchg
dec
sub
sahf
imul
in
movsl
je
push
ret
std
push
dec
test
inc
xchg
icebp
jecxz
mov
mov
cmp
sbb
inc
adc
test
jmp
icebp
sbb
les
mov
scas
rclb
pop
cmp
movsl
or
sbb
jg
mov
daa
das
in
pushf
mov
dec
pop
cmp
pop
popa
xor
mov
mov
mov
stos
popf
mov
aam
shlb
adc
inc
cltd
popf
movsl
aas
adc
cmp
xlat
test
xchg
outsb
arpl
jp
test
mov
popa
icebp
loope
xchg
ljmp
jo
inc
mov
mov
call
sbb
ss
hlt
push
cmp
outsl
ja
xchg
push
pop
ret
sub
outsl
mov
repnz
xorl
mov
adc
mov
xor
mov
xor
add
les
fcomp
ret
mov
inc
jl
in
xor
insb
fadds
push
iret
sub
in
mov
ss
xlat
sti
movsl
lea
sbb
shll
in
xchg
add
rcrb
mov
inc
add
jl
push
vpshufhw
xor
jecxz
xchg
pop
cmp
adc
aad
add
loopne
sti
mov
je
sarl
loopne
loopne
and
loop
mov
lock
enter
mov
adc
jg
mov
xchg
push
xchg
or
push
mov
pop
mov
into
sti
xor
mov
in
call
add
jp
arpl
xchg
push
dec
adc
mov
popa
xchg
or
insb
jae
shrl
out
jbe
stos
and
mov
in
sbb
xor
cmp
xor
xchg
mov
xchg
mov
sbb
fcoml
outsb
push
repnz
into
movsb
scas
fstpl
test
mov
dec
inc
xor
popf
loope
daa
mov
out
pop
add
or
cmp
cli
js
rol
and
bnd
dec
pusha
adcl
xor
xor
scas
push
push
test
mov
mov
std
decl
cs
sub
xchg
sub
test
cmpsl
hlt
mov
out
sbb
mov
pop
or
rcrl
pop
push
ret
pop
sbb
cltd
mov
mov
sbb
testb
mov
inc
cmpsl
sbb
fistpl
scas
adc
cli
fcoms
sub
incb
sub
mov
mov
je
out
ljmp
loopne
jl
mov
inc
dec
and
dec
fbld
mov
insb
popa
ret
xor
dec
dec
rcrl
pop
test
or
addl
lret
jecxz
out
sbb
cld
je
insl
ret
test
sub
pop
dec
adc
es
adc
cwtl
imul
push
mov
mov
jle
mov
pop
fiaddl
test
or
mov
mov
pop
mov
xlat
jle
push
jle
stos
aam
pop
insb
pop
out
push
lods
stos
push
into
pushf
mov
xchg
dec
xchg
out
in
mov
hlt
ja
xchg
xchg
addl
adc
mov
or
pushf
sbb
xchg
mov
int
fidivl
movsb
lret
ja
out
icebp
and
adc
rol
movsl
das
sbb
sahf
popa
je
xor
pushf
repnz
and
scas
push
sti
ret
mov
adc
int
cmp
ret
adc
lret
out
rcl
or
leave
out
push
fwait
push
fildl
out
and
mov
pop
jno
mov
loope
xchg
xchg
shl
push
cmpsl
xchg
mov
fnstenv
xor
test
rcr
inc
sti
enter
inc
push
cld
dec
out
data16
mov
pop
xor
sbb
and
mov
inc
push
push
int
mov
stc
push
inc
fisubrl
xor
mov
hlt
and
lea
fwait
jns
aam
jns
pop
inc
cwtl
rol
jp
ss
cmpsb
mov
jp
pushw
in
and
jge
sub
adc
jg
enter
scas
cltd
adc
sbb
jb
mov
inc
je
jmp
ficompl
lea
std
repnz
inc
insl
mov
iret
cwtl
mov
inc
outsl
cmpsl
lock
call
lret
pop
jecxz
es
fidivrs
push
cmp
mov
or
jp
xchg
adc
adc
cmp
lea
sub
enter
sub
mov
gs
or
xchg
in
sub
fadd
jns
fmul
cmpsl
inc
xchg
sti
mov
addr16
mov
mov
es
pop
add
push
mov
clc
xchg
mov
popf
sbb
out
add
stos
es
push
ret
inc
pop
mov
inc
xchg
fisttps
add
cli
push
ret
lock
cmp
inc
enter
mov
data16
xchg
mov
jmp
mov
add
js
out
push
aaa
lret
add
aam
data16
insb
pop
outsl
aas
cltd
movsl
fisttpll
movsb
ret
pop
cmp
icebp
cmpsb
lods
in
fbld
xlat
sbb
add
push
mov
jno
mov
imul
das
mov
xchg
sahf
cmc
fimull
in
xor
or
addr16
mov
jo
arpl
aad
sub
mov
mov
sbbb
insl
test
stc
dec
sub
addr16
mov
dec
add
inc
inc
inc
rol
stos
or
loopne
loop
dec
loopne
xchg
repnz
xchg
leave
sub
mov
push
in
out
jae
in
iret
dec
push
jl
movsb
pop
pop
les
mov
sub
dec
es
xchg
push
adc
pop
xchg
and
adc
adc
leave
cli
arpl
push
pop
xchg
fadds
jge
lds
in
nop
xchg
push
loop
mov
push
add
cmp
fs
cmpsl
xchg
pop
sarl
mov
mov
addr16
jnp
pop
imul
nop
cmp
std
aas
lret
xor
sub
orps
je
sub
mov
mov
inc
mov
jnp
adc
popa
push
push
lret
out
xor
xor
and
inc
sbb
out
js
repz
mov
or
daa
sarl
pop
jbe
cs
sbb
pop
insb
gs
sahf
loope
nop
dec
or
add
add
popa
mov
mov
cmp
adc
or
test
shlb
dec
pop
mov
hlt
sbb
cltd
add
push
insb
mov
adc
ljmp
loopne
pop
andb
sub
loopne
pop
pushf
cmpsb
sub
mov
enter
push
lds
aaa
jmp
mov
daa
jp
mov
pop
xchg
or
cmp
mov
push
lock
loop
aaa
lret
leave
out
push
adc
add
fisttpll
mov
push
pop
xchg
outsl
test
icebp
cltd
pushf
sub
jno
jns
xchg
outsb
adc
fwait
xor
push
mov
loopne
pop
int
mov
jecxz
cmpsl
test
fwait
aas
rcrl
insl
imul
movsb
decb
xor
rorl
ljmp
outsb
inc
push
mov
stc
in
sbb
dec
mov
dec
mov
mov
jmpw
fwait
cmp
fwait
mov
loop
nop
jecxz
mov
mov
roll
jno
outsb
data16
andb
ljmp
rcr
rcl
movsl
dec
adc
xchg
cli
fildl
nop
inc
push
and
adc
inc
inc
es
out
dec
in
inc
rcl
mov
pop
lods
mov
jb
aam
push
and
dec
imul
mul
jnp
pop
jns
repnz
stc
dec
outsl
data16
mov
mov
lods
and
sbb
shl
push
lahf
out
sub
fldenv
and
jnp
rolb
cmp
jle
dec
addr16
loop
daa
pop
in
popl
filds
and
sub
das
call
and
aaa
xor
mov
gs
divb
std
xchg
push
jae
xchg
ret
and
sbb
pop
mov
scas
lods
sbb
inc
outsb
data16
inc
push
inc
jae
add
insb
movsl
sub
jecxz
push
xor
dec
mov
jge
inc
loop
or
xor
arpl
push
push
or
fstp
outsb
out
jns
push
mov
ljmp
aad
aam
cmp
xor
imul
inc
mov
mov
lods
dec
and
incl
pop
dec
push
dec
test
pushf
mov
sbb
xchg
scas
aam
aas
cmc
out
cs
xor
or
inc
hlt
xor
adc
popf
enter
in
shlb
push
pop
jo
into
sub
adc
and
or
lret
pop
sub
inc
mov
inc
sbb
imul
je
add
insb
test
scas
call
push
pop
push
mov
cmp
lock
stos
pop
mov
arpl
jo
sbb
lea
adc
add
in
js
out
mov
sbb
mov
mov
jbe
mov
and
pop
std
adc
mov
lock
xchg
adc
add
lahf
es
or
out
loope
inc
popa
or
mov
dec
leave
push
outsl
cld
sub
stc
adc
hlt
flds
mov
in
rcl
or
sub
adc
push
enter
xchg
push
mov
xor
jne
orb
ret
or
push
adc
inc
das
add
dec
mov
sbb
shll
pop
adc
mov
pop
in
jp
push
out
ss
cs
pop
inc
push
sub
inc
sub
adc
call
movsl
xchg
dec
das
test
add
dec
jns
repnz
sbb
jp
arpl
or
pop
xchg
nop
mov
mov
aam
inc
add
mov
mov
test
pop
flds
xchg
sbb
xchg
movsb
push
das
mov
loop
fsub
push
mov
xchg
cwtl
cmp
mov
xchg
hlt
ficoml
xor
inc
scas
pop
pop
lret
sti
cwtl
jae
call
lds
icebp
aas
xchg
inc
push
rcrl
fisttps
push
push
fucomp
lds
bound
push
sub
xchg
notb
push
test
sub
pop
aaa
gs
lock
fidivs
insl
adc
sub
xor
sbb
hlt
cmpsb
cli
adc
adc
xchg
lahf
cwtl
inc
mov
bound
clc
inc
and
jmp
outsl
ret
jne
insb
rol
or
test
ljmp
sbb
outsb
dec
in
jo
cld
clc
ss
stos
jge
cld
repnz
lds
adc
sub
pop
jae
test
fwait
jmp
out
mov
cmc
adc
idivl
adc
mov
cmp
mov
mov
rorl
cmp
sbb
mov
icebp
das
sub
add
jb
ss
cwtl
mov
xchg
dec
xchg
inc
ret
jg
pusha
and
fs
xor
or
mov
and
pusha
mov
and
adc
xchg
adc
push
pushf
lods
xchg
test
cmp
xchg
xchg
iret
inc
push
insl
or
lahf
inc
adc
add
xchg
int3
test
pop
push
jl
mov
negl
lea
mov
xchg
jb
xor
andl
cwtl
lcall
sub
ja
xor
orl
in
xchg
into
js
je
popf
rorb
test
adc
ret
int3
test
ffreep
xor
jl
lcall
xor
aaa
outsl
divps
mov
ljmp
pop
pop
dec
mov
les
iret
mov
lret
jg
lods
mov
popf
sahf
add
add
cmp
popf
leave
cmc
out
into
jg
pushf
jg
adc
dec
adc
in
sti
in
not
call
scas
dec
xchg
pusha
daa
cmp
add
fwait
jae
push
incl
repz
fwait
adc
inc
lcall
cs
out
addl
jns
mov
jne
clc
add
mov
into
jbe
incl
hlt
lcall
mov
or
cmp
data16
push
jmp
gs
sub
or
cli
nop
int
inc
jl
pop
sub
inc
in
xchg
sti
xchg
mov
mov
shl
jae
mov
cmp
cs
ds
sbb
cmp
jg
mov
sbb
daa
mov
fdivr
push
es
out
or
pop
xchg
les
fiaddl
push
lea
push
inc
outsl
jo
cli
mov
negb
mov
xchg
sahf
test
xlat
mov
jmp
mov
push
inc
rorl
out
lahf
sbb
loopne
movsb
xchg
xchg
scas
loope
inc
jae
lahf
inc
int
jae
je
scas
enter
add
popa
inc
test
lret
fldcw
cwtl
ret
rorl
pop
fwait
stos
out
in
or
pusha
pop
das
lock
push
ds
xor
sbb
sub
add
mov
mov
div
mov
in
mov
shrl
xchg
push
xchg
jbe
into
ret
cmp
mov
and
adc
add
push
icebp
imul
push
dec
imul
inc
mov
lods
adc
lods
fs
lret
dec
mov
push
mull
bound
cmpsl
add
pop
cmpsb
gs
dec
add
clc
or
and
pop
mov
mov
test
xor
fucomi
mov
dec
cmp
sub
xor
pop
divl
das
jne
imul
mov
sar
sbb
inc
xchg
shlb
jp
adc
stc
test
popf
popa
clc
data16
les
add
in
es
bound
mov
loop
scas
stc
outsb
loop
cmp
mov
rcr
or
dec
scas
xlat
pop
mov
sub
hlt
sarl
lock
xchg
in
mov
mov
insb
rol
lret
addr16
nop
test
stc
lods
les
inc
push
into
in
mov
jecxz
cwtl
out
repz
out
adc
mov
pop
nop
mov
in
adc
adcb
cmp
pop
lods
nop
rep
pop
gs
xor
mov
arpl
pop
imull
inc
xlat
ja
fwait
and
enter
push
mov
xchg
xor
mov
sub
xchg
lods
xor
mov
iret
xchg
xchg
inc
addb
clc
sbbb
sub
inc
xchg
loop
xchg
push
mov
sbb
mov
inc
push
fmull
mov
out
and
loope
mov
add
fwait
cmp
es
xchg
test
nop
or
jne
ljmp
sbb
and
ret
pop
mov
mov
add
ja
jg
sub
sub
push
cmp
insl
cmp
push
cmp
jg
movsl
or
xor
out
in
jne
punpcklbw
outsb
hlt
and
sbb
sbb
in
stos
xor
sti
icebp
dec
mov
stos
fchs
add
sub
ds
daa
jns
fiadds
outsl
xlat
inc
adc
pusha
adc
adcb
jne
cwtl
leave
inc
pop
pop
sbb
ljmp
fs
and
rcrb
mov
xor
popf
out
cld
dec
ss
loope
mov
enter
into
shr
dec
jb
mov
out
add
inc
and
test
xchg
aas
xor
lea
push
cmp
jne
dec
jae
cmpsl
xor
jmp
inc
call
pop
out
mull
cmpsl
sub
shll
xchg
cmp
mov
fisubl
std
out
inc
pop
jg
push
mov
mov
add
outsl
sub
jne
cmp
sub
inc
or
inc
jo
xlat
pop
fldenv
aam
add
stos
dec
inc
inc
sbb
push
dec
xor
jns
xchg
lahf
inc
push
push
xchg
inc
cmpsl
jbe
xchg
push
sub
lahf
xor
ret
testl
fs
in
outsb
lods
notl
mov
fsubs
inc
push
mov
jbe
loope
mov
test
outsb
bound
je
jne
movsb
push
enter
faddl
dec
out
rcrb
or
push
sub
dec
mov
inc
sbbb
or
mov
dec
push
dec
or
adc
fadds
lret
movsl
pushf
and
push
adc
notl
adc
je
in
cmp
pop
idivb
nop
lcall
daa
in
push
clc
shlb
cli
and
into
sbb
in
push
push
int
inc
jle
das
push
mov
xlat
dec
sarb
jne
lods
xor
mov
adc
movsl
lds
ja
cmp
pushf
cmpsb
shll
mov
in
repz
adc
lea
xlat
or
stos
test
popa
sar
sbb
fistl
enter
inc
cmp
sahf
lods
mov
out
xchg
imul
inc
bound
pop
cli
cld
xor
xor
ja
adc
cmp
dec
sub
xor
dec
js
mov
pop
scas
lds
orl
push
xchg
out
in
cmp
fst
and
mov
jle
sbb
test
or
or
into
mov
push
push
popf
jecxz
adc
sbb
sbb
mov
aas
xor
in
or
xchg
mov
mov
mov
or
pusha
xchg
mov
movb
addl
popa
mov
jl
lods
adc
cwtl
jnp
mov
xchg
icebp
pop
bnd
repnz
orb
jns
pop
add
mov
in
xor
jmp
out
push
xor
xchg
push
loop
or
lea
in
gs
aaa
ja
mov
cmp
icebp
hlt
pop
stc
dec
push
sub
test
sub
cmp
lahf
mov
add
push
es
mov
mov
jl
aaa
adc
sub
adcb
xchg
inc
and
cmpsb
int
jg
sub
pusha
jno
and
pop
test
or
inc
test
mov
xor
js
pop
xor
cmpl
inc
sub
xchg
loopne
mov
repz
adc
adc
push
testb
out
or
add
imul
mov
mov
mov
imul
mov
pop
mov
sub
push
push
movsb
in
bswap
ret
iret
mov
loope
outsb
add
rcrb
cmpsl
mov
xchg
sub
insb
xchg
cmpsb
pushf
push
push
jne
enter
xchg
jne
mov
mov
xchg
ss
into
xchg
push
jbe
pop
mov
lret
cmp
jmp
inc
or
cmc
fldl
aas
sub
imul
fstpl
jecxz
popf
insl
fucomip
mov
lods
iret
insb
mov
fst
in
in
mov
test
incb
mov
add
sbb
data16
loopne
leave
jbe
mov
xlat
xchg
mov
sub
mov
pop
aas
adc
outsl
subl
lods
mov
pop
rorb
loop
js
xlat
stos
or
js
mov
mov
add
add
cld
jne
and
iret
xchg
mov
push
loopne
les
js
inc
bnd
dec
xchg
xorb
movsb
mov
into
cmp
push
fdivl
push
mov
mov
mov
xchg
leave
fcomi
ds
xchg
fistl
lock
mov
jecxz
std
loopne
aam
cmp
int3
mov
adc
rorl
add
and
icebp
imul
mov
sub
dec
jb
xor
lock
jnp
cwtl
inc
rcrl
out
pop
mov
mov
fiadds
into
cli
das
jno
mov
into
push
adc
xchg
movsl
inc
sub
cmc
shrb
pop
push
dec
enter
test
push
push
inc
sub
icebp
jge
insl
mov
pop
testl
adc
mov
mov
addr16
cmpl
xchg
pop
data16
mov
js
imul
push
hlt
cmp
lods
adc
icebp
dec
pop
pushf
and
shll
mov
lock
dec
xchg
test
pop
jecxz
arpl
jl
and
roll
ljmp
jmp
cli
enter
out
fildll
cmp
lods
xchg
xchg
inc
and
inc
jmp
and
add
add
std
adcb
shlb
pop
inc
dec
mov
sbb
xchg
mov
outsl
std
mov
pushf
xorb
pop
jg
pand
xchg
decb
add
or
repnz
xchg
sarl
test
mov
push
and
mov
push
push
out
xor
pop
ret
scas
test
shl
js
or
jne
mov
push
mov
arpl
pop
outsl
icebp
push
xor
mov
pop
in
inc
mov
insb
dec
xchg
lret
jbe
stos
insl
xor
iret
aaa
inc
mov
stc
jno
shlb
inc
fstl
sub
fsubs
fisttps
or
sbb
call
stos
pop
nop
sbbl
sbb
pop
cmpsb
cld
sub
adc
mov
add
dec
mov
movsb
test
xchg
mov
int
nop
jle
jae
in
fs
adc
outsl
jg
sbb
jmp
roll
jmp
stc
scas
inc
insb
jmp
in
push
jo
fcoml
push
jl
loopne
movsl
sbb
in
test
mov
jo
dec
stos
jecxz
xchg
mov
sub
and
outsb
jg
xlat
or
pop
leave
jo
pusha
daa
ss
cmp
cmp
mov
or
inc
pop
jo
orl
enter
sbbb
push
and
dec
aas
fadd
push
popf
out
into
mov
sti
setno
cmp
ljmp
cmp
jns
pushf
stc
and
je
and
jg
mov
adc
in
xchg
test
push
and
xchg
not
cmp
mov
clc
hlt
sbb
inc
popa
sahf
sub
jae
xor
xchg
inc
dec
and
cmpsl
xchg
cwtl
cli
cmp
mov
scas
jp
stos
fcoms
mov
dec
adc
mov
imul
pop
push
daa
into
xorl
in
inc
inc
pushf
fnsave
fidivrl
in
int3
iret
testb
shlb
mov
repnz
push
pop
enter
xchg
jp
repnz
scas
mov
cmpsb
cltd
and
cmp
push
movsb
fcmovbe
mov
mov
sti
nop
test
jnp
in
icebp
xchg
xor
add
lret
dec
mov
pop
ficoms
mov
sub
sahf
ret
add
adc
inc
insb
nop
movsb
outsb
mov
sbb
sbb
sub
in
iret
call
pop
ds
int3
fldl2e
add
aam
mov
sbb
call
shl
outsb
imul
cmp
mov
add
insl
sti
xor
pop
lds
and
push
mov
inc
or
shrl
xor
cltd
test
and
mov
xlat
xor
fwait
lret
jne
inc
dec
dec
insb
and
ds
jle
fs
xlat
repz
mov
stos
and
test
xor
push
cmp
inc
mov
insb
dec
xchg
push
push
jne
test
sbb
mov
push
sub
cmp
test
sub
fldt
icebp
adc
into
popa
pop
jns
cmp
push
ret
addr16
and
arpl
or
js
ret
sarb
or
jns
push
dec
inc
cmpl
push
xchg
loopne
scas
test
fwait
addr16
cmp
lret
jbe
mov
es
dec
test
out
cld
xchg
xchg
jle
aad
clc
mov
cmp
shll
movsl
loop
jle
jb
and
dec
insb
sbbb
test
mov
mov
and
scas
ss
stc
stos
das
xor
iret
lods
inc
cmp
gs
inc
push
pop
jmp
lods
arpl
adcl
movsb
cwtl
xchg
mov
jmp
mov
es
xchg
sbb
out
mov
inc
pop
cwtl
das
mul
pop
shrb
lahf
jb
imul
mov
lock
mov
popa
sti
inc
mov
mov
addr16
mov
xchg
fcmovnu
add
imul
jecxz
inc
loopne
mov
out
stos
bound
push
jae
mov
clc
mov
stos
push
sub
scas
xchg
pop
sub
adc
outsb
inc
fsub
call
mov
mov
fsubrl
loop
jge
cwtl
bound
pushf
lret
push
scas
into
repnz
dec
sbb
cmc
out
test
fisubrl
sub
sahf
inc
and
stc
jns
or
test
pusha
bound
outsb
out
ret
fsubrp
jl
movsl
jnp
xchg
sbb
jb
cld
xor
cmp
cs
mov
shlb
sti
jnp
xchg
cltd
xor
xor
shlb
push
shll
pushf
add
in
fucomp
fbstp
sbb
sbb
cmp
bound
pop
sbb
leave
add
push
pop
or
sbb
fwait
scas
fldl
in
mov
dec
imul
call
pop
pop
jge
repz
pop
fnstenv
imull
or
adc
mov
lahf
inc
fdivrs
outsb
xchg
sbb
loop
adc
popa
popa
sub
mov
outsl
and
mov
cmp
std
inc
mov
or
mov
jne
leave
add
jno
inc
gs
pop
fistl
scas
ljmp
out
sub
ds
cmp
dec
mov
mov
cwtl
repnz
aas
loope
nop
repnz
xor
out
mov
push
adc
inc
jp
adc
sbb
mov
jns
movsb
cmp
leave
xor
outsb
stc
repz
and
mov
ja
rolb
xor
mov
aad
and
xchg
lcall
das
xor
inc
sub
sub
andl
push
movsb
xor
test
mov
sub
or
mov
fiaddl
clc
mov
int
push
jle
lock
xchg
lods
adc
aaa
sub
pop
sbb
and
movups
test
push
jle
repz
jle
repz
pop
aas
mov
jge
xor
and
push
xor
push
test
xchg
cld
and
jbe
and
std
stc
push
mov
mov
mov
mov
sbbl
leave
test
negb
fistl
mov
pop
nop
sbb
add
pop
imul
sbb
mov
cmp
movsl
loope
add
mov
jno
mov
popf
jl
mov
or
insl
jecxz
in
lds
mov
pop
sub
je
pusha
inc
mov
and
mov
inc
imul
push
cltd
stos
lods
in
xor
stos
pushf
adc
push
inc
sub
testl
mov
and
add
inc
sub
mov
ljmp
add
jecxz
xor
xlat
aad
jecxz
mov
fstps
xor
xor
out
jno
test
lods
repnz
dec
xor
out
ss
sbbl
dec
test
jae
test
mov
fwait
test
mov
and
push
inc
notb
xor
mov
adc
fidivrl
pop
lahf
outsb
lcall
or
dec
fadd
mov
insl
xor
popf
xchg
inc
fsubs
scas
add
xor
lret
sti
mov
xor
adc
cmp
sbb
adc
rcrb
sbbb
sub
mov
shrl
pop
jg
lds
jo
loope
in
ja
mov
std
push
test
data16
sbb
mov
push
push
pusha
and
adc
xor
sub
mov
pop
push
push
cwtl
mov
in
mov
and
pushf
inc
sbb
pop
sbb
mov
mov
xor
jmp
fdivrl
dec
pusha
pusha
imul
sahf
add
push
out
in
test
lods
xor
testl
ret
push
rolb
fldcw
sti
fnsave
adc
pop
dec
inc
aam
jae
gs
cs
stc
fsts
mov
or
mov
push
insl
clc
jmp
rorb
lahf
dec
mov
int
rcrl
out
and
jbe
or
repnz
xchg
pop
push
pop
mov
adc
lds
jns
xchg
mov
ja
adc
data16
mov
mov
imul
addl
mulb
imul
dec
cmp
cltd
adc
std
xchg
inc
aad
sti
scas
pop
mov
sbb
mov
out
inc
xchg
loop
iret
out
outsb
push
test
pop
add
jl
sbb
mov
loopne
subb
jnp
rcrl
insl
push
stos
clc
and
add
stc
int3
cmpsl
jae
sar
daa
call
jne
and
push
mov
test
lcall
scas
jnp
ret
imul
fdivrl
leave
or
xor
lds
or
dec
mov
and
dec
pusha
mov
or
adc
xor
dec
je
mov
mov
lock
stc
inc
repnz
mov
mov
out
sti
or
pop
cmpl
push
pop
into
jne
adc
dec
sbb
jl
arpl
filds
mov
fmul
inc
xor
mov
lret
push
out
dec
sub
mov
pop
xor
add
ds
rcrl
les
cmp
pop
dec
stos
scas
and
aas
rol
cmpsb
mov
push
mov
inc
add
mov
cmp
jae
push
out
or
jl
je
movsl
sub
inc
imul
data16
shll
mov
cmp
jb
and
xor
mov
out
stos
cs
and
int3
inc
jl
in
insl
pop
pop
pop
sbb
pop
jo
lret
lods
jp
sbb
rorl
adc
repz
movups
int
fildl
rclb
gs
sub
test
das
jp
jae
fistps
movsb
ss
inc
and
mov
mov
ret
mov
xchg
mov
jno
std
aad
xchg
outsl
daa
es
mov
or
lock
in
call
scas
xchg
in
xchg
inc
cmc
in
sub
outsb
insl
mov
enter
push
mov
push
daa
xor
andl
jle
cmp
sti
mov
mov
push
jmp
movsb
adc
test
adc
arpl
daa
hlt
into
xor
sub
mov
xlat
push
push
idivb
out
inc
mov
clc
adc
les
sub
adc
test
xchg
lods
jmp
test
lods
pop
mov
add
mov
aas
cmp
fisubrl
out
cld
mov
jg
cmc
mov
add
ds
sbb
and
sbb
adc
and
pop
or
jo
mov
push
sbb
inc
xlat
or
xchg
xchg
mov
in
call
aam
adc
aas
nop
rcrl
test
add
cmpsb
sbb
push
aad
ss
pop
cmp
and
or
out
loope
jg
sub
lea
sbb
sub
inc
jae
cwtl
jp
pop
aad
pop
ja
jl
xor
sub
cmpsl
int
pushf
popa
fsubs
loop
jne
fdivl
negb
aam
test
dec
dec
nop
movq
dec
jmp
lods
add
insl
sbb
data16
jb
fwait
mov
mov
pop
pushf
sbb
in
xchg
arpl
sub
jl
add
cmp
xor
and
aam
or
jbe
xor
inc
jo
call
outsl
cmp
jmp
outsb
cmp
pop
jl
scas
leave
sub
mov
pusha
jb
and
pushf
push
sbb
and
push
pop
pusha
out
cli
mov
stos
add
sbb
push
into
out
in
jmp
loop
addb
aaa
adc
push
les
rcll
mov
aaa
jae
inc
lods
mov
ror
roll
pop
push
xchg
and
inc
cmp
sbb
mov
pushf
sbb
sbb
mov
ljmp
stos
leave
mov
pop
pop
andb
lds
int3
xchg
out
inc
sbb
std
dec
std
sahf
mov
popf
cmpsl
mov
aam
test
xor
fnstsw
sub
fs
xchg
push
rcrl
repz
aam
insl
jge
std
dec
out
hlt
icebp
sub
adc
push
sub
div
push
insb
imul
push
aad
sub
adc
divb
mov
inc
loop
lahf
in
insb
movb
test
in
cmp
arpl
leave
or
or
int
pop
int3
add
inc
in
std
cld
imul
mov
daa
or
cmp
sub
inc
fnstenv
adc
add
mov
rorb
cmpsb
jmp
dec
and
adc
cmp
push
xchg
jb
adc
add
loope
push
xchg
ret
int
dec
sub
dec
push
or
sub
insb
in
out
das
cltd
js
pushf
xor
loope
xor
aas
shl
and
insb
mov
xor
inc
cli
clc
dec
jmp
icebp
sbb
shlb
pop
pop
fs
in
sti
sbb
insl
insl
test
xor
mov
ret
repnz
pop
cli
icebp
popa
cli
adc
aaa
pushfw
jae
xchg
mov
xor
ds
push
outsl
loop
dec
sub
ds
fiadds
sub
repz
pop
lcall
mov
sbb
cmc
aam
in
pop
push
jmp
pop
mov
lods
sub
ret
shl
adc
sbb
add
clc
jmp
xor
jmp
mov
cmp
outsb
mov
dec
rcrb
rclb
mov
cmp
bound
push
stc
mov
in
and
out
pop
mov
ds
fs
fbld
daa
sarl
incb
nop
ss
cmp
mov
ret
or
movsb
dec
lods
repnz
pop
clc
inc
pusha
sub
sub
mov
push
test
jl
xor
insb
repz
mov
jmp
sarl
nop
pop
jecxz
cld
dec
fcmovnb
in
je
inc
pop
fistpl
fldcw
xor
stos
mov
jmp
mov
leave
lods
pop
test
fdivr
aam
pop
test
xlat
mov
xor
loopne
subb
loope
xchg
and
add
dec
les
cmp
mov
or
hlt
into
push
ficoml
fildll
mov
incb
les
cmp
leave
lahf
mov
jae
outsb
ret
sub
xor
test
cwtl
push
lahf
gs
testl
je
xchg
aas
push
cmp
ss
or
xchg
push
add
push
push
xlat
test
pusha
xchg
dec
mov
mov
in
jns
aad
lret
mov
arpl
mov
sbb
testb
xchg
jge
lea
mov
mov
lds
divb
lret
mov
sbb
add
daa
xchg
rcrb
inc
cltd
jmp
mov
push
test
and
popf
lret
aam
jo
jle
lcall
push
clc
jno
add
fcomps
adc
push
jnp
shlb
and
and
pop
add
push
lret
clc
or
fsubrl
aas
cltd
mov
repz
popf
cmp
cltd
outsl
sahf
cmp
jmp
ds
stos
lock
fs
fmull
cwtl
adc
or
sbb
or
and
adc
es
cli
pop
in
std
xor
clc
sub
jecxz
data16
jp
addl
cmpsb
push
into
push
std
mov
cwtl
xlat
adc
lods
push
idivl
xor
movsb
aam
mov
mov
inc
stc
ja
dec
mov
or
mov
pop
and
js
mov
lret
pop
jmp
repnz
xchg
ds
mov
outsl
sbb
inc
scas
push
js
add
push
jo
stos
mov
inc
and
test
lcall
mov
mov
cmp
jge
fbstp
push
push
iret
and
aad
dec
stc
loope
stos
inc
sarl
mov
and
dec
jae
repz
sarb
imul
popa
or
push
in
imul
pop
testl
sub
xor
das
sub
pop
or
adc
sbb
jg
hlt
repz
into
add
std
adc
hlt
xchg
push
mov
push
xor
inc
push
or
sub
mov
sub
icebp
rcrb
xor
cmp
cmp
mov
aad
dec
cmp
jne
jno
movsb
xor
xor
add
std
ds
lods
mov
outsl
jnp
inc
xor
and
rcrb
sahf
andl
in
xlat
fstps
mov
int
idivl
cmp
cmp
ficoml
mov
xlat
or
lds
and
testb
stos
mov
pop
xlat
jae
and
icebp
inc
arpl
pusha
mov
inc
xchg
sti
and
lods
mov
roll
inc
bound
jl
fistl
popa
repnz
int3
cmc
adc
icebp
call
lret
into
sub
sbb
outsb
shlb
int3
and
aas
adc
and
lcall
rorb
aaa
insl
inc
inc
imul
or
stc
negl
sbb
les
push
mov
or
fsubrs
inc
shlb
sbb
data16
out
adc
push
xchg
sbb
push
push
nop
jnp
cmp
repz
ret
pop
movsb
icebp
jb
fwait
cmp
add
rol
adc
ficompl
test
sub
jns
jb
xchg
mov
or
aaa
int3
lahf
sbb
lret
xlat
mul
adc
test
xor
popf
sbb
pushf
inc
stc
push
or
mov
sbb
lahf
loopne
or
bnd
ret
test
popf
aaa
je
jge
xchg
adc
in
jns
test
data16
jbe
lock
push
pusha
cmc
int
aam
repnz
repnz
jne
dec
out
adc
inc
insl
lcall
ljmp
aas
ja
outsb
jle
int3
fnstcw
jmp
aam
pop
cmpsl
mov
cmpsl
adc
add
adc
xchg
stos
fisubs
add
in
or
enter
jnp
int
outsl
sub
and
mov
dec
movsl
call
out
cmp
in
xchg
mov
or
pusha
pop
cmp
aad
pop
or
push
in
fbld
dec
arpl
sar
fs
inc
adc
xorl
cld
leave
xor
sti
out
xchg
xchg
loopne
inc
repz
icebp
mov
movsl
adc
ret
aas
test
into
mov
out
int
mov
lcall
xchg
imul
and
iret
push
jl
cli
push
sub
jno
adc
std
ss
lahf
inc
imul
mov
and
xchg
movsb
fldcw
sub
jle
jns
mov
mov
pop
xchg
jne
or
ror
or
pop
or
and
mov
push
lods
loopne
xchg
and
and
sub
cmp
mov
xchg
scas
repnz
xor
stos
inc
inc
inc
int3
enter
cs
imul
sbb
cltd
xorb
xchg
pop
add
rclb
ret
and
insb
sbb
mov
cwtl
fcomps
pop
jno
xor
sbb
addb
sar
movsb
ljmp
pop
jne
mov
add
clc
sub
pop
jg
inc
fisttpll
sar
rorl
in
sub
xchg
clc
pop
leave
leave
mov
jge
add
mov
sbb
jl
inc
mov
leave
rorl
xchg
adc
push
cmp
dec
mov
out
aad
cmpsl
stos
imul
push
pop
or
cmpsb
fstl
orl
aaa
lods
shll
popa
and
shrl
mov
cwtl
push
push
fisttpl
aad
inc
jbe
rclb
mov
mov
cmpsl
xchg
push
enter
addr16
lret
push
adc
gs
imul
sbb
ror
js
xchg
stos
in
push
or
pushf
std
icebp
subl
jl
or
adc
mov
fisttps
adcl
mov
pop
mov
push
pop
lcall
pop
sbb
mov
in
out
imulb
mov
mov
stos
mov
jbe
lret
xchg
mov
stos
pop
loope
stos
sub
push
ret
sub
adc
mov
sub
jo
fcmovb
sub
loope
pop
or
pop
mov
fwait
aaa
add
xchg
daa
dec
or
or
pop
call
mov
sahf
jmp
push
mov
add
xor
mov
pop
dec
or
and
stos
out
pop
imul
xlat
cmp
pusha
in
in
sub
dec
dec
int
jl
sbb
jg
mov
ja
enter
addl
iret
mov
pushf
or
lcall
test
cmp
cmp
add
std
fstp
dec
mov
repnz
jae
xchg
sub
popf
sub
mov
push
sub
and
in
inc
and
and
dec
jns
mov
addr16
out
xor
dec
sub
leave
pop
pop
and
pop
fcoms
or
xor
iret
lea
les
jb
movb
arpl
arpl
pop
jbe
dec
mov
fsubs
icebp
scas
mov
cmp
pop
out
xor
incl
test
adc
cld
pop
inc
mov
jno
jnp
jmp
add
sub
pop
and
shll
fisttps
inc
pushf
into
and
cmp
iret
sahf
leave
popa
add
call
jne
scas
adc
pop
inc
jl
push
cltd
mov
insl
xchg
cli
imul
push
xchg
add
jno
enter
jle
aam
and
scas
push
xchg
sbb
test
xchg
cli
out
xchg
xchg
push
pop
shlb
mov
mov
data16
cmovle
sbb
mov
jns
out
test
mov
fst
push
inc
sub
dec
pop
cli
clc
pop
mov
jne
int3
bswap
jae
add
adc
scas
stos
pop
and
xchg
inc
mov
pop
inc
or
lea
ret
or
pop
lock
or
stc
xchg
filds
sub
pusha
xchg
dec
dec
lcall
push
cmp
adc
and
xor
inc
dec
popa
push
addr16
mov
dec
mov
ret
sub
adc
push
pop
mov
sahf
test
out
dec
pushf
lret
and
cmp
cmpsb
and
mov
ret
push
or
lahf
fcmove
push
or
ss
test
es
inc
fildll
lret
pop
cmp
jb
mov
fwait
mov
dec
cmp
fdivrs
pusha
hlt
cmc
sub
test
ror
mov
mov
jge
call
std
enter
push
cwtl
cmpsb
mov
popa
fwait
inc
xchg
jecxz
test
fmull
test
lods
fwait
push
andb
add
outsb
ss
sbb
repz
mov
pop
loope
not
or
add
and
shr
movsb
shlb
mov
cmp
repnz
xchg
mov
push
jge
and
adc
jnp
imul
add
pop
add
clc
ds
das
and
shlb
clc
sbb
inc
out
xor
mov
icebp
xor
and
pop
or
and
mov
into
cmp
push
hlt
mov
pop
mov
cmp
push
mov
data16
fwait
mov
ret
and
pop
aam
pop
in
aaa
outsb
mov
lcall
mov
popa
ja
sbb
lcall
add
jp
dec
dec
scas
je
push
pop
pop
push
jne
testb
cmpsl
imul
iret
xchg
mov
and
insl
dec
xchg
xlat
inc
mov
dec
push
pop
and
mov
test
push
cmp
bound
loope
adc
mov
mov
les
pop
mov
xchg
divb
mov
ds
adc
fmuls
lods
mov
add
pop
xor
or
clc
repnz
daa
sahf
and
jmp
into
xchg
iret
scas
std
xor
push
xchg
pop
nop
dec
mov
xchg
xor
loop
repz
iret
adc
subb
mov
cmpsl
or
mov
xorb
aad
pop
fdivrs
jmp
loope
xchg
xchg
push
jbe
jno
xchg
in
xchg
and
mov
jmp
ja
int3
add
sbb
bound
mov
std
jmp
aas
pop
lods
gs
ror
xchg
insl
lret
mov
negb
call
adc
aad
mov
outsb
js
incb
cwtl
in
cld
pop
mov
decl
imul
add
jo
je
mov
mov
and
mov
add
xor
push
out
sub
mov
sarb
xchg
js
cmp
and
int3
jmp
sub
jp
popf
fstpt
jl
add
mov
and
js
sbb
ljmp
cld
cwtl
mov
jns
cmpl
xchg
shll
cmc
fs
mov
scas
imul
mov
lods
js
loop
je
mov
call
enter
sub
aam
xor
stos
cs
add
cmp
in
movsb
jbe
dec
xor
mov
or
repnz
and
mov
and
lods
stc
inc
xchg
shrl
sub
xlat
icebp
scas
adc
std
aad
jg
lahf
and
sub
gs
sbbl
fwait
add
xchg
cld
sbb
sub
and
lods
mov
cmp
cli
fdivl
pop
xchg
decl
xorl
roll
jb
and
stos
inc
mov
xchg
add
aad
int3
or
mov
cmpsb
sub
or
aad
jns
call
in
loopne
mov
fistpll
loopne
dec
jg
cwtl
bound
lahf
mov
aad
ds
fiadds
mov
daa
les
adc
stos
scas
pop
ret
rep
xor
daa
mov
test
sahf
jo
adc
flds
iret
pop
cmpsl
inc
je
mov
mov
out
push
mov
dec
rorb
xorl
pusha
imul
fdivr
int
or
xchg
dec
push
test
stos
ljmp
inc
lods
clc
jecxz
int3
call
jle
sti
push
push
call
xor
orb
cmp
fmulp
mov
jnp
cltd
pop
lds
and
test
mov
sub
add
addl
lods
gs
inc
icebp
or
jg
rol
adc
lods
sub
stos
cmpsl
sbb
in
rorb
lods
ret
aaa
fisubrl
push
sti
cwtl
in
insb
mov
jp
and
push
repnz
adc
inc
jecxz
pusha
lds
imul
fmuls
ret
lods
mov
jg
sub
inc
xor
negl
sbb
dec
aad
out
jne
fsub
cmp
cmp
or
mov
test
sbb
pop
inc
jmp
xor
cmp
shlb
jg
dec
aaa
or
xchg
sbb
cld
movsb
xchg
dec
shrb
movsb
xchg
or
cmp
das
outsb
push
pop
sub
xchg
mov
iret
jg
mov
movsl
mov
shrl
dec
dec
sub
sbb
lock
mov
lds
sbb
lea
add
adc
test
inc
jns
dec
dec
insl
add
xlat
pop
cmp
jge
fldln2
mov
mov
xchg
jl
ja
add
mov
das
in
test
movsl
inc
inc
js
mov
pop
outsl
xchg
rclb
ret
adc
xchg
call
xor
cmpsb
daa
in
pop
mov
mov
xchg
jb
or
andl
mov
xchg
adc
jno
or
cwtl
cmpsb
pop
sub
jo
dec
add
inc
inc
mov
pop
xor
incb
dec
adc
in
movsb
scas
push
lahf
adc
int3
out
movsb
mov
sbb
pop
testb
mov
sub
mov
cmpsb
fwait
xor
ljmp
sub
lahf
lock
sub
shrb
dec
jl
dec
adc
xchg
out
adc
call
lahf
jbe
xor
cmc
inc
cmp
jmp
cmp
or
add
cmpsb
dec
ds
inc
fnstenv
mov
fstpt
pop
jle
jnp
roll
scas
add
sbbl
pop
in
push
fucomp
cmp
out
iret
xor
repnz
orw
mov
loope
mov
nop
pop
cmp
movntq
pop
cmc
popf
jbe
sti
push
out
in
pop
lahf
adc
mov
adc
movsl
mov
push
xchg
cmp
cmp
inc
mov
mov
in
jp
mov
sub
fnsave
in
shrb
js
cmc
xchg
sbb
and
jae
xchg
pop
leave
fldl
dec
scas
mov
movsl
mov
jns
mov
xchg
stos
aaa
jl
repnz
sbb
mov
rol
mov
pop
mov
stos
adc
movsl
or
neg
out
out
ss
dec
xchg
je
push
es
inc
pop
xchg
xor
sub
xor
divl
add
push
cmp
dec
fs
and
in
iret
ss
lea
sub
dec
jmp
imul
push
addr16
roll
cmpsl
mov
xchg
jno
sub
mov
mov
push
push
push
int3
popa
imul
jno
mov
stos
ja
in
lret
mov
nop
sub
sbb
xor
push
repz
pop
js
dec
int3
repz
adc
std
sub
inc
popf
loopne
mov
lcall
js
pushf
sub
les
inc
pop
loopne
jb
sti
ja
roll
and
pusha
mov
mov
faddl
xlat
sbb
aas
loop
lds
pop
and
in
mov
pushf
ret
inc
cmpsl
pop
ss
cmp
pop
int
loopne
popf
jecxz
in
int
das
sahf
out
rcrb
inc
repnz
sub
flds
pop
mov
lds
mov
pushf
mov
fimuls
mov
call
sbb
repz
fsubl
add
sub
dec
xlat
loope
inc
hlt
jnp
sbb
sahf
add
jecxz
inc
movsb
faddl
call
and
popa
outsb
mov
jae
nop
xchg
jg
push
jl
jp
adc
test
cmp
sbb
gs
mov
adc
decb
mov
and
loopne
pop
loopne
add
subb
out
xor
insl
insl
adc
mov
jg
ret
mov
push
cmp
inc
lret
test
aad
mov
lock
mov
push
push
out
aad
notl
pop
int
mov
mov
in
or
adc
inc
jge
daa
sbb
push
inc
push
push
pop
mov
adcb
sub
into
nop
dec
stc
std
push
shr
mov
mov
cmp
sbb
cwtl
mov
jae
adc
or
mov
out
pop
push
dec
ss
cmp
mov
jmp
out
sub
imul
sti
adc
push
sub
push
cltd
or
inc
aas
sub
std
in
imul
icebp
jge
repnz
test
push
inc
call
or
ret
add
fwait
inc
xorl
push
int
les
mov
xchg
cmp
aam
addr16
xor
dec
jmp
mov
shrb
pop
jmp
cmpsb
mov
sub
cmp
dec
add
roll
int
jae
aas
iret
pop
add
pop
fwait
aas
jo
les
int
mov
pop
add
jmp
fcmovnu
jl
xor
kmovd
jb
pop
fistl
mov
and
xchg
sbbl
xor
inc
xchg
inc
push
scas
dec
icebp
pop
xor
add
and
mov
sub
xor
lcall
shlb
adc
or
jge
push
jb
cld
pop
mov
jge
xor
inc
outsl
ret
and
mov
push
push
cmp
sahf
push
or
das
loopne
cmc
in
dec
daa
jno
cld
rolb
inc
popa
mov
xor
mov
dec
movsl
push
mov
sub
into
fldenv
mov
xchg
vmovshdup
insl
add
outsb
inc
jb
fucomi
int3
inc
int
div
outsb
ds
or
mov
xchg
add
in
enter
cmpl
test
or
fwait
jae
adc
jb
add
or
mov
push
lret
adc
ficomps
movsl
out
add
add
scas
ds
or
cmp
push
mov
jge
jge
orb
out
jle
insb
sbb
lahf
mov
or
sub
xchg
mov
xchg
push
iret
leave
jnp
sarl
ret
stos
test
mov
mov
mov
xor
xor
stos
andl
into
clc
orps
enter
cmp
push
cltd
hlt
loop
adc
jmp
mov
ljmp
jo
push
mov
sub
mov
jg
leave
add
mov
jg
movsb
testb
xchg
sahf
adc
call
dec
mov
ret
xor
mov
outsl
out
sub
cmp
in
shl
cmp
and
inc
sub
out
pop
xchg
aaa
cmp
inc
push
cmp
mov
nop
or
aas
imul
jbe
sub
xchg
or
cwtl
mov
aad
mov
mov
leave
adc
sarb
pop
add
out
stc
inc
aas
stos
les
enter
pop
pusha
out
sub
cld
and
xor
lock
xchg
push
mov
sbb
cmc
push
push
lahf
leave
mov
pop
fists
scas
mov
stos
loop
xchg
aam
cwtl
fldt
lock
filds
xor
idivb
add
inc
and
jnp
test
add
or
cmpsb
call
cmp
sub
mov
jecxz
popf
xor
add
data16
stos
jo
and
push
imul
cli
inc
dec
xrelease
inc
cmpsb
mov
xchg
inc
iret
inc
dec
fcomi
mov
data16
inc
jnp
fadds
or
jns
adc
add
rolb
stos
fdivrs
jmp
mov
jo
mov
dec
mov
mull
divl
sub
pop
mov
or
fs
pop
adc
push
xor
sbb
shrb
xchg
mov
sbb
aas
test
mov
mov
and
inc
adc
lret
insl
pop
aaa
dec
addl
cli
aad
adc
scas
mov
mov
mov
and
cmp
addl
hlt
jmp
out
adc
addr16
push
in
cmp
mov
xchg
dec
push
clc
mov
add
pop
push
lahf
sahf
mov
mov
adc
and
jne
and
sti
push
pop
adc
xchg
push
lahf
jb
outsl
push
lret
cli
test
adc
inc
mov
std
incb
ss
cmp
lret
bswap
jge
xchg
cmc
movsb
icebp
inc
push
mov
cmpsb
adc
nop
sbb
inc
out
and
sub
push
xor
hlt
inc
cmp
jns
mov
incl
pop
inc
mov
pop
and
pop
pop
sbb
stos
insb
sahf
pop
mov
cwtl
xor
add
divb
mov
mov
add
sarl
cmp
incl
jne
aam
lcall
test
cmp
stc
shl
cmp
sub
scas
and
shll
jmp
mov
fstp
inc
bound
xchg
xchg
ret
pop
jg
push
ret
xor
add
je
filds
push
test
ret
sub
and
in
inc
sbb
inc
sub
pusha
test
xor
jmp
pop
jmp
sahf
push
iret
xor
and
or
fucomi
andl
sub
test
dec
popa
mov
aam
out
ffree
pop
in
xor
imul
pop
jnp
push
cli
and
js
imul
mov
cld
xor
ljmp
cli
or
push
xchg
xlat
adc
and
stc
pop
pop
das
adc
shlb
sbb
aam
inc
xchg
pop
or
xor
push
fcoms
adcb
nop
js
je
push
add
in
out
leave
ficoms
or
mov
clc
add
out
mov
or
loopne
add
dec
movsl
jecxz
jle
iret
cwtl
stos
jmp
mov
cld
inc
imul
push
scas
into
jp
xchg
push
aam
call
cltd
into
mov
xchg
pusha
add
mov
or
insb
mov
inc
sbb
movsb
mov
pop
mov
sub
stos
cmp
pop
jns
jge
inc
test
xor
or
xchg
filds
mov
push
jmp
ret
sbbl
ret
fbld
call
jne
popl
sahf
mov
add
fnsave
jge
addl
shlb
or
fimuls
mov
pop
lods
jo
popf
cmc
shll
aas
outsl
push
imull
pop
inc
je
loopne
adc
cwtl
adc
shrb
dec
mov
scas
addr16
repnz
popf
outsl
stc
into
repnz
es
lods
ficomps
pop
add
in
fmul
push
adc
aad
adcl
and
popf
push
clc
addr16
lods
aaa
dec
mov
fpatan
aam
and
add
addb
mov
sub
or
mov
jb
lods
pop
and
fists
imul
fsubp
lea
xchg
push
jmp
addr16
fwait
or
lret
cmp
aaa
popa
xor
enter
xchg
rcrl
idivb
ret
jbe
xchg
ret
cmpl
and
and
rcl
mov
test
dec
or
rcrb
add
sahf
std
movsl
cmp
jae
subl
scas
xchg
lock
mov
dec
mov
cmpb
jns
gs
repnz
cmc
cmp
sub
push
aam
jb
lods
adc
add
and
pop
mov
in
pop
mov
mov
stc
scas
sub
jg
stos
inc
aas
sarb
nop
iret
pop
push
jae
mov
insb
les
movsl
xchg
xchg
fsub
push
and
scas
and
adc
pop
insb
pop
cmp
lret
fldl
or
mov
xor
sahf
mov
xor
pop
jbe
js
les
out
mov
sbb
or
sarl
shll
jmp
xor
jno
cmp
lret
inc
xor
test
aaa
cwtl
stos
or
and
fstpl
pop
and
addb
sub
push
call
in
adc
mov
cmp
mov
daa
pop
outsb
std
rcrl
sti
outsb
or
pop
pop
mov
out
lods
lods
popf
sub
jb
sti
scas
sub
bound
dec
cmp
in
mov
add
sbb
push
test
push
inc
mov
cmp
scas
and
popa
rolb
inc
stos
mov
int3
cmp
js
push
pop
xor
sub
lods
shrb
scas
enter
test
rcrl
or
push
adc
pop
faddl
bound
inc
mov
add
push
push
cmp
nop
daa
fstl
test
add
sub
xchg
js
inc
mov
lock
jne
mov
mov
call
shll
push
push
mov
cltd
inc
stos
cmp
sbb
add
add
jmp
pop
xchg
lahf
subl
sti
jae
test
jno
out
in
popa
jns
sarb
dec
imulb
hlt
sbb
dec
pop
daa
mov
test
or
jnp
xchg
sbb
pop
pop
cld
mov
xchg
mov
dec
fnstenv
lods
andl
xorl
popf
inc
push
stos
jge
jno
mov
dec
xor
shlb
insl
pop
cmpsb
in
adc
iret
mov
or
fldt
shll
and
pop
sub
scas
fnstsw
xor
mov
jg
sbb
leave
insl
sahf
ja
jp
mov
and
push
pusha
or
xchg
pop
inc
jl
mov
inc
mov
mov
inc
arpl
pop
xor
dec
outsl
flds
and
add
mov
arpl
pop
dec
aam
sbb
into
push
popa
stos
int
pop
jp
pop
pop
mov
push
outsl
jo
xchg
fs
push
xor
push
add
ss
adc
stos
push
pop
cmpsb
and
xor
adc
pop
ds
daa
loope
lods
pop
cmp
mov
daa
jle
out
imul
jge
insb
call
stos
out
outsb
jbe
xchg
push
js
mov
dec
lds
js
sub
mov
scas
xor
jnp
jg
insb
test
hlt
mull
add
lods
push
dec
jecxz
mov
mov
test
fstpt
fdivrs
and
sbb
sahf
pusha
fwait
cmp
inc
xchg
int
notb
call
fldenv
rorl
lret
jp
dec
cli
popa
adc
push
cmp
leave
adc
ds
lahf
call
cmpsl
push
aaa
xchg
fisubs
cmp
sbb
add
cmp
in
pop
mov
sub
jmp
in
outsl
leave
pop
push
sub
ret
faddl
in
mov
mov
jbe
cmp
add
cmp
and
or
out
out
test
mov
mov
inc
stos
mov
cwtl
add
clc
mov
dec
into
jmp
jne
or
sub
inc
cmp
fdivr
add
pop
jne
xchg
ficompl
pop
add
stc
mov
and
mov
ss
stos
mov
jp
cmc
sarl
pop
jp
jl
nop
iret
scas
shrl
inc
das
sbb
add
aas
cmp
mov
inc
mov
loopne
fistl
cmp
sbb
fdivrs
jae
mov
pop
cmp
add
inc
pop
jmp
mov
or
sbbl
add
aas
inc
add
aas
ja
push
jb
imul
push
mov
lret
adc
pop
xchg
mov
loope
ret
adc
push
fsubrs
or
sbb
push
lea
xor
mov
mov
xchg
xor
imul
push
iret
pop
adc
jae
pop
mov
jl
js
std
stc
dec
and
add
shrb
dec
cli
cmp
pop
pushl
mov
xchg
cli
imul
mov
imul
in
sbb
sbb
fucomi
leave
inc
pop
rolw
add
imul
mov
pop
dec
or
adc
xchg
push
das
repnz
xor
mov
mov
sub
into
lods
and
js
cmp
out
cmc
imul
lods
and
xchg
mov
dec
inc
mov
push
add
inc
jmp
ffreep
sbb
daa
sub
lds
stos
sahf
push
pop
les
xorb
dec
or
cmp
ja
mov
add
mov
push
icebp
mov
in
insl
test
pop
push
pop
cmp
lcall
mov
push
mov
or
xchg
hlt
popf
test
inc
out
test
xor
test
cmp
jae
das
iret
add
imulb
push
aaa
ret
or
lret
inc
pop
or
mov
adc
and
or
jle
cmp
lea
in
test
jbe
xlat
cmp
pop
add
js
pop
frstor
jno
jnp
sub
shl
sub
sub
faddl
xlat
arpl
xor
popa
xchg
in
inc
js
icebp
bound
sbb
add
dec
aad
addr16
jecxz
test
insb
int
inc
pop
cltd
mov
jnp
xchg
and
xchg
or
ret
stc
inc
lea
incl
adc
mov
pop
and
shl
inc
shrl
outsl
test
in
push
mov
lcall
outsb
aam
xor
bound
call
loop
mov
aad
aas
mov
adc
mov
lret
aad
fmull
shlb
into
test
outsl
jbe
mov
push
or
jb
sbb
pop
dec
shrl
mov
lds
lods
rcrl
sbbl
jae
jne
aaa
in
pop
jp
rolb
outsl
addr16
lods
fnstcw
mov
mov
lcall
scas
call
mov
into
mov
lahf
xchg
les
mov
xchg
jb
out
mov
jl
arpl
add
adc
lcall
dec
xor
addb
test
sub
cld
test
xchg
adc
stc
xor
or
add
lods
sbb
insl
cld
push
iret
iret
aam
adc
pushf
in
push
int3
addr16
xor
iret
imull
jle
das
add
mov
lods
fadds
repz
in
les
inc
bound
inc
out
pop
fwait
es
inc
push
dec
fsubrs
int3
lock
cld
mov
enter
jb
fmuls
push
subl
xchg
cpuid
inc
arpl
jle
add
gs
mov
fldcw
cmp
scas
mov
jge
push
pop
fwait
imul
push
mov
jecxz
jnp
lods
xlat
in
mov
lahf
dec
fsubr
in
sub
idivb
jo
mov
xlat
out
je
jae
sbb
sbb
addl
stos
sbb
ds
icebp
mov
mov
dec
adc
sbbl
das
mov
arpl
xor
push
fnstenv
dec
outsb
sbb
std
add
sub
sahf
or
js
lcall
mov
loopne
mov
cmp
das
clc
pop
and
sbb
out
mov
sti
xchg
imul
mov
jge
cwtl
cwtl
mov
andb
dec
or
pop
aas
push
sub
push
int3
test
js
addr16
scas
or
adc
sub
xchg
pop
ret
sub
xchg
sub
icebp
popf
test
scas
adc
hlt
and
jle
dec
pushf
popl
jmp
sahf
pop
pop
adc
je
cmpsl
rcrb
inc
rcrl
or
sbb
cmp
cmpsb
sahf
xchg
push
and
or
scas
les
xchg
pusha
test
xlat
cld
lret
call
cmp
add
add
mov
fcmovne
lods
pop
loop
xor
mov
inc
sti
mov
cmp
push
das
repnz
jae
cli
enter
sbb
mov
in
mov
fstpt
jnp
out
sub
fldenv
stos
scas
clc
sbb
add
rorb
or
shrb
or
push
or
ret
jne
and
mov
out
call
ret
es
cmp
fbstp
test
lahf
sub
jbe
lods
stos
push
push
hlt
dec
cmpsl
stos
sub
cmp
adc
lret
mov
push
enter
mov
fdivs
mov
out
add
or
jb
adc
push
call
test
push
test
mov
call
push
stos
xchg
mov
outsl
ret
jg
xchg
fbld
add
cmpsb
rorl
lds
icebp
hlt
test
adc
arpl
xchg
dec
sub
int3
sbb
adc
inc
pop
push
pop
mov
jmp
test
sub
inc
push
adc
icebp
add
sub
scas
adc
out
bound
fidivs
lods
test
mov
sarb
mov
popa
xor
push
fistl
xchg
jbe
and
and
dec
xor
stos
xchg
mov
je
or
push
adc
or
into
lret
out
mov
xor
shlb
test
repz
push
xchg
jb
pop
mov
xchg
pop
scas
cli
lea
mov
and
aas
je
dec
int3
sbb
stc
mov
pop
adc
sahf
pushw
aad
cmc
std
add
lods
aad
in
shl
daa
jns
sub
out
int3
call
bound
cmp
lret
int
dec
dec
jnp
push
sub
xor
jno
cmc
mov
loopne
cmp
xlat
xor
sbb
jmp
lods
aas
xchg
inc
or
stos
movsb
rorl
mov
iret
jmp
out
jmp
dec
xchg
hlt
out
pcmpgtw
xor
int3
pop
mov
pop
lahf
and
scas
icebp
cmpb
and
int
stos
mov
xor
cmp
and
and
xor
aam
dec
mov
or
cmp
push
jbe
dec
push
leave
cmp
rcr
cmp
and
hlt
push
jno
or
mov
and
std
shlb
mov
js
push
or
rep
or
pop
cmp
push
add
cmc
mov
inc
sbb
les
mov
fidivrs
inc
insb
lret
lds
fs
nop
sahf
fmull
xchg
dec
cmc
adc
sub
dec
inc
xorb
fisubl
dec
mov
cmp
push
and
xor
int
lahf
fnstsw
imul
aas
outsl
mov
out
pop
outsb
fdivrs
mov
push
stos
pop
addl
jge
sub
mov
sub
data16
push
push
mov
adc
or
test
mov
xor
xor
hlt
lret
sti
out
popa
pop
dec
js
inc
test
pop
mov
mov
in
pop
jge
lods
rol
adc
mov
popf
in
mov
xchg
in
dec
mov
jb
inc
mov
out
cmpsb
jo
inc
inc
mov
xchg
or
dec
or
subl
js
fldl2t
add
or
push
outsl
stos
mov
sub
pop
es
orb
test
adc
out
cwtl
ret
cmp
push
mov
sarb
out
pop
ds
mov
stc
pop
sbb
fimull
xor
add
mov
push
sub
push
stos
xor
into
add
sahf
sarb
cmp
jecxz
repnz
cmpsl
push
stos
popa
pop
adc
xor
mov
sub
andl
mov
mov
fcmovbe
dec
dec
adc
popf
addr16
out
filds
cmp
addr16
sub
cmp
sub
in
cmp
push
jae
mov
mov
outsl
xchg
lret
dec
sub
in
push
out
cmpsl
or
divl
jne
into
add
shr
xchg
scas
jns
fisttpl
xchg
adcl
lret
pop
mov
cli
xchg
cwtl
lret
xor
addr16
mov
jl
scas
pop
mov
aad
dec
jns
je
scas
sbb
addr16
jl
dec
imul
add
nop
or
push
mov
rcll
lea
add
jns
mov
dec
adc
adc
pop
subb
mov
sub
cli
mov
stos
ss
add
pop
or
hlt
ja
push
in
stc
and
daa
mov
sub
and
sbb
jge
mov
pop
mov
outsb
mov
mov
mov
pusha
mov
fsubl
leave
jmp
pop
pop
xchg
aad
jbe
or
add
in
jmp
repnz
or
or
or
std
cmp
pop
outsb
incl
fimull
test
jns
sub
fwait
pop
loopne
jo
aam
iret
jno
lods
pop
pop
lret
mov
rcl
cmpb
test
pop
jb
iret
xor
push
pop
int
add
ds
insl
shll
add
add
or
es
mov
test
ljmp
lret
xchg
pusha
andl
in
pushf
ret
jbe
jmp
mov
fsincos
out
mov
push
mov
les
cmc
or
rcll
sub
pop
dec
pop
cmc
fmul
push
fwait
pop
sbbb
stc
test
xor
repz
push
cmp
sbb
movsl
mov
sbb
ret
addr16
jnp
outsl
mov
mov
cmp
orb
lea
cld
fwait
and
mov
stos
jecxz
add
mov
inc
adc
shlb
popf
xchg
fisubs
xchg
inc
data16
aaa
jb
cld
clc
js
cmp
xchg
sbb
mov
xor
and
test
push
xor
mov
inc
pop
pop
inc
jns
mov
cwtl
push
xchg
int3
mov
sarl
fisttpl
sbb
out
in
adc
loop
add
sub
push
mov
jecxz
loop
movsl
paddq
fisttps
test
xor
xchg
sbb
pop
jae
mov
jbe
ljmp
cmp
sbb
rcr
faddp
inc
loop
cmp
push
mov
out
mov
arpl
dec
mov
int
xchg
fidivrs
sbb
mov
cwtl
ds
clc
jecxz
in
and
subl
jbe
adc
lret
sbb
push
sarl
out
lret
xor
mov
out
dec
xchg
and
mov
int
mov
int
icebp
xor
es
in
cmpsl
ja
fdivp
lods
mov
inc
pop
adc
cmp
add
sahf
movsl
and
ficomps
cmp
sub
comiss
scas
jns
and
repz
xchg
subb
into
pushf
iret
out
push
xchg
add
sub
mov
loop
fdivr
daa
cmp
mov
jecxz
push
addr16
leave
or
stos
xchg
sbb
or
mov
aam
inc
ja
push
push
aas
xchg
repnz
pop
sahf
lods
jmp
add
add
sbb
jmp
push
lret
sub
icebp
bound
sbb
dec
aaa
scas
dec
xor
pop
inc
aad
je
xor
iret
push
fcom
popa
in
hlt
scas
pop
out
push
xchg
lret
mov
enter
je
mov
out
dec
ljmp
xlat
lods
cmp
incb
push
sbb
xor
popa
sbb
add
movsb
jns
lods
inc
mov
jl
test
gs
dec
jbe
mov
cmpsb
add
lret
cli
iret
cmp
movsl
ficomps
cmp
jae
push
pop
mov
pushf
scas
mov
xchg
cs
sbb
mov
jns
mov
xchg
mov
pmuludq
inc
inc
jnp
and
js
loop
loope
mov
roll
pushf
insb
xchg
mov
sub
jno
cltd
cmp
incl
pushf
adc
ret
cmp
mov
subl
fcompl
nop
inc
das
inc
sub
pop
jno
cmp
insl
adc
jle
cltd
cmpsb
add
inc
xor
out
xor
jb
xor
mov
aam
rcrl
mov
dec
sub
cmp
xchg
dec
cmp
shll
notb
fdivrl
out
shrl
jbe
cwtl
sub
cmc
sti
lods
dec
arpl
jle
inc
and
sbbb
out
jecxz
scas
push
popa
sub
add
mov
add
xorl
out
jl
arpl
mov
lds
dec
mov
imul
ficoml
xchg
es
lret
push
mov
out
lea
inc
daa
leave
cmp
pop
in
jmp
in
mov
sub
pop
and
mov
sub
jg
dec
pop
sub
rclb
mov
xchg
jmp
je
aad
imul
aad
sbb
pmullw
push
mov
lahf
sarl
aam
imul
lea
mov
xchg
or
xchg
pop
mov
jno
add
lods
adc
leave
bound
mov
sub
out
mov
mov
inc
filds
push
add
fwait
bound
jmp
and
int
data16
ljmp
and
push
mov
adc
fbld
stos
jge
cmp
js,pt
and
sub
jmp
dec
daa
xor
dec
cltd
jo
fs
and
mov
sub
out
ret
ja
imul
mov
ljmp
pushf
mov
test
add
popa
dec
movsl
hlt
sbbb
cmp
add
sbb
xor
call
cli
stos
fcoms
pop
inc
mov
jmp
fwait
stos
jle
mov
dec
pop
scas
dec
movsl
imul
jnp
mov
adc
xor
mov
dec
sub
sbb
jp
adc
lcall
mov
cmc
inc
mov
jns
imul
pop
lahf
xchg
xchg
shll
sbb
pop
test
fs
mov
mov
test
mov
sbb
inc
adc
jae
xor
gs
sub
fcoms
cltd
inc
xor
in
xor
or
inc
pop
inc
push
leave
xchg
les
out
jnp
out
or
mov
scas
clc
pop
sarb
mov
leave
lds
clc
push
pop
inc
dec
jecxz
das
loopne
fwait
sti
roll
push
insb
dec
jns
sub
inc
jo
cwtl
add
lahf
jne
cmp
dec
mov
out
call
cmp
stos
int3
and
sbb
add
sbb
and
nop
fsubrl
cmpsb
pop
push
and
sbb
xchg
rcl
cwtl
fwait
xchg
loop
mov
roll
cmpsb
adc
stos
mov
aad
lock
push
cmp
call
iret
sub
lods
scas
jp
cmp
mov
enter
fildll
inc
lahf
out
fs
sbb
scas
repnz
mov
bound
xor
iret
pop
cmp
and
mov
xor
test
div
aam
pop
push
push
mov
or
jnp
dec
pop
loopne
mov
mov
aad
shlb
pop
in
add
repnz
lods
mov
lods
outsl
push
cld
jns
mov
mov
pop
outsl
sbb
fabs
rorl
addl
push
mov
jne
cmp
xchg
ret
sub
inc
jne
xorl
fbld
pop
aaa
pop
dec
dec
mov
fsqrt
mov
dec
jmp
xchg
outsb
cmp
add
inc
cmp
mov
pushf
mov
cmpsb
add
pusha
imul
mov
add
jle
sbb
cmp
cli
cwtl
pop
scas
mov
rorb
sbb
mov
out
mov
push
shll
and
lods
icebp
push
jl
enter
mov
out
mov
sbb
mov
test
push
cmp
fst
aam
and
sarb
ljmp
push
icebp
push
ss
fmul
and
xchg
pop
andb
mov
pop
dec
out
add
ret
dec
cmpsb
ljmp
sarl
mov
inc
ret
test
cltd
leave
call
push
nop
daa
testl
inc
xor
xor
das
daa
add
fst
lds
mov
add
push
mov
repnz
inc
shrl
adc
mov
ljmp
lock
rcr
or
leave
jns
inc
add
jno
int3
cmp
test
cli
movsl
stc
packssdw
mov
ret
lods
repz
xor
and
fcoms
pop
sub
std
lahf
dec
shr
setp
out
mov
movsl
add
xor
jecxz
pop
push
sub
shrb
shl
cmp
shl
cmc
jl
mov
ja
aad
or
xlat
aaa
sbb
arpl
xor
out
std
push
xor
cmp
mov
inc
in
lods
mov
outsb
mov
lea
adc
cmp
aas
lcall
cltd
dec
loopne
jp
and
adc
lret
fwait
push
shll
inc
repz
sub
iret
adc
push
or
mov
xchg
ret
inc
rorl
push
cmp
mov
xchg
jle
mov
adc
fwait
xor
in
iret
sahf
insl
loop
pop
loop
jne
xchg
xlat
cmp
adc
imul
pop
and
or
add
es
fwait
cli
or
loopne
adc
add
test
mov
adc
push
and
fwait
insb
lret
jae
je
mov
aam
jbe
sub
push
mov
push
mov
mov
xor
dec
js
in
mov
pop
dec
sub
jle
adc
cmpsb
pop
movsl
ss
adc
mov
push
pop
popa
lds
lods
mov
outsl
dec
or
sbb
mov
nop
push
jns
push
pop
dec
pop
fistl
out
gs
test
stc
stos
repz
mov
or
xchg
push
imul
imul
push
push
fdivs
pop
pop
add
jne
movsb
xor
push
cmp
adc
outsb
pushf
adc
inc
pop
daa
pop
mov
sub
ja
jp
adc
sub
cmp
push
xchg
cmp
adc
mov
clc
dec
imul
imul
inc
icebp
ds
push
sub
add
dec
shlb
jbe
dec
mov
leave
test
ret
add
push
adc
inc
sbb
inc
lcall
lcall
int3
push
popa
mov
inc
shrl
cmp
sub
sub
mov
gs
mov
and
cs
rorl
shrb
add
mov
out
subl
stos
jnp
das
andl
inc
add
int
pop
icebp
scas
lcall
ja
jle
xor
xor
scas
push
cmp
rcr
lock
mov
sub
cmp
cmpsl
and
pop
or
negb
mov
push
and
jge
orb
mov
pushf
cmp
das
dec
pop
cs
mov
fsub
xor
lds
dec
sub
mov
push
xchg
xchg
xor
or
ret
pop
xor
mov
repz
out
je
xlat
iret
fsts
stos
adc
daa
mov
jle
test
mov
rcrl
mov
cmp
lock
xchg
shr
mov
dec
or
icebp
fisttpll
mov
lods
clc
mov
xchg
andl
add
sub
movsl
jbe
aad
pop
repz
add
and
sahf
sti
add
jecxz
xor
in
je
xchg
and
xor
xor
stc
and
jne
sbb
xor
xchg
es
xor
add
add
fistpll
rolb
imul
addr16
mov
adc
daa
call
push
jne
icebp
push
xor
xchg
mov
rclb
repz
add
and
dec
cmpsb
inc
ljmp
outsb
hlt
icebp
loope
stos
jbe
sarb
out
push
dec
mov
cmpsb
fsubs
inc
add
mov
cli
push
stos
sbb
lds
aaa
pop
ret
cltd
push
ljmp
lcall
addr16
xchg
out
pop
lods
fdivl
insl
test
fcmovbe
ret
ret
jb
fucomp
nop
xor
lcall
out
inc
jne
and
jl
xchg
out
push
push
adc
movsl
repz
stos
test
mov
loop
and
fists
les
pop
mov
and
or
and
inc
ror
pop
imul
or
adc
push
scas
daa
lods
inc
mov
scas
push
rcl
push
cmpsb
cmp
inc
xchg
aad
movsl
xor
mov
push
jnp
gs
sti
fimuls
adc
hlt
insb
ds
fbstp
pop
arpl
jg
xor
addl
cmp
add
xchg
mov
xor
mov
jo
mov
adcb
mov
lcall
es
dec
sbb
in
addr16
neg
inc
cmp
fnstcw
in
aam
push
dec
punpcklbw
stos
std
xor
popa
jae
popa
or
fistl
xchg
sub
mov
scas
shrb
addr16
lcall
jae
enter
sub
jmp
dec
fmuls
xchg
mov
pusha
push
pop
hlt
inc
mov
popf
data16
push
pop
inc
sbb
push
cmp
pop
pop
jo
nop
push
in
loope
lods
sub
push
xchg
jno
hlt
test
bound
ds
nop
xor
ja
test
mov
mov
scas
xor
aad
stos
mov
sub
popl
lock
adc
out
fchs
mov
bnd
das
xor
rcrb
push
aam
and
lock
mov
call
movsb
and
push
inc
xchg
and
inc
clc
mov
int
or
int3
cltd
ret
mov
outsb
push
aaa
imul
cmp
aas
pop
sti
scas
sbb
lea
pop
push
or
lods
pop
mov
fisubrs
mov
or
repz
lahf
pop
dec
pop
fmul
scas
lock
jne
mov
sub
dec
jno
pop
dec
xchg
push
js
in
shlb
ja
lock
adc
xor
cmp
cmpl
xlat
lea
or
aam
inc
dec
jno
subl
fldl2e
dec
shll
mov
test
loopne
xchg
scas
scas
out
rol
mov
push
jl
lds
mov
push
adc
jge
xchg
icebp
add
out
adc
cmp
test
pop
sub
cmc
push
movsb
fstl
jmp
push
shll
mulb
push
inc
cmp
sbb
jae
in
iret
adc
ss
push
jmp
ja
mov
int
movsl
sub
rcl
imul
aam
sti
and
dec
loop
adc
mov
pop
je
repz
lock
jg
lods
mov
enter
movsl
pusha
pop
xchg
xchg
cltd
push
lcall
push
cmp
gs
fists
lds
lcall
cmp
call
add
xlat
dec
int
js
arpl
add
sbbl
inc
push
and
je
mov
orb
mov
mov
sub
dec
sub
cmpl
in
dec
enter
dec
int
bound
pop
mov
xchg
xchg
daa
insl
rorb
sub
sbb
lea
int3
ljmp
cmp
push
mov
dec
sub
lock
rcrl
mov
out
xor
cmp
add
push
adc
fistpl
dec
xchg
fs
jns
adc
dec
sbb
sub
outsb
dec
push
xor
push
pusha
inc
adc
jno
repnz
jns
lds
fidivrl
xor
flds
jb
inc
stc
bound
loop
inc
out
pop
scas
imul
push
fisttpll
xor
jle
iret
fstps
cmpsl
aam
inc
int3
rorb
fs
arpl
outsb
add
repnz
and
clc
gs
in
les
inc
or
jae
inc
shlb
out
mov
jmp
xchg
pop
sbb
lret
and
mov
jnp
inc
enter
jge
inc
ficoml
or
nop
dec
ret
ds
leave
out
aam
inc
cmp
and
add
sbb
xchg
xor
sbb
sub
movsb
gs
adc
xor
mov
sub
push
stos
xchg
jnp
outsl
leave
add
or
faddl
jno
sub
scas
out
ficoml
xor
mov
ljmp
into
or
pop
xor
out
popf
test
jmp
mov
sbb
mov
jmp
loopne
int
sub
inc
jecxz
or
push
jmp
xor
inc
mov
ds
pop
repnz
cmp
shlb
fdivrs
mov
mov
test
les
das
inc
fistpll
pop
rolb
mov
stc
imul
les
loopne
cmp
shr
test
popf
and
test
data16
mov
add
push
rcll
rorl
je
ljmp
and
jle
jmp
inc
dec
sub
dec
in
loope
ret
fcmovnbe
repnz
dec
mov
sbb
mov
or
xchg
push
xchg
shll
fwait
mov
out
shll
loope
jecxz
cwtl
or
adc
xchg
ds
adc
lcall
inc
jnp
dec
insb
mov
movsl
xchg
mov
and
lcall
rcr
fisubs
jns
push
pop
inc
leave
and
shlb
ss
insl
sub
aad
subb
ret
push
or
add
icebp
mov
lods
or
test
or
xor
dec
fisubs
ficoms
mov
fsubl
fwait
mov
mov
pop
mov
iret
stos
dec
add
aaa
int3
cmpsl
or
fwait
sbb
iret
cmp
es
jle
dec
sub
lea
push
ja
sti
pop
rorb
in
mov
or
addr16
fs
cmp
xchg
sbbl
push
push
daa
mov
push
clc
inc
add
data16
out
adc
pop
aaa
mov
inc
xchg
test
mov
sub
lcall
mov
inc
ljmp
and
test
adc
pop
mov
stos
scas
xor
jns
dec
adc
les
mov
sub
xchg
sbb
dec
pop
out
out
inc
das
and
mov
mov
pop
cmp
insl
or
insl
dec
jno
mov
jg
rcll
es
mov
adc
negb
add
push
jae
iret
mov
add
mov
subl
les
push
sbb
in
dec
jp
and
ror
push
in
inc
pop
roll
mov
mov
addr16
inc
fistl
jmp
add
add
mov
sub
test
divb
leave
pop
cmc
imul
fsts
in
xor
in
mov
jge
push
sti
cmpsl
jge
jb
jns
xchg
jne
scas
push
popa
cmpsb
lret
hlt
stos
repnz
pop
cld
nop
cld
mov
or
dec
add
inc
and
imull
push
mov
pop
cmp
mov
mov
sbb
inc
sbb
ss
repnz
xchg
rol
or
sbb
sbb
shr
in
mov
cmp
repnz
jmp
loope
xor
lds
popf
lea
cmp
jle
xor
in
and
lcall
int
pop
sti
imul
in
aas
and
xor
outsl
xchg
lea
test
std
pop
jle
jge
pop
xor
mov
sbb
popa
lock
add
loopne
enter
xchg
mov
xor
mov
pop
je
sti
add
inc
movsb
pop
sahf
jg
add
gs
fnstenv
aaa
and
sti
insl
and
es
dec
mov
sub
loop
pop
lods
mov
gs
push
mov
push
lock
mov
jge
rcrb
call
out
ljmp
push
scas
cmpsb
int
xchg
jo
loop
lcall
aas
int3
loop
cmp
inc
leave
xlat
xor
shl
scas
cmpsb
pop
out
jo
test
xor
jno
xchg
test
jg
sub
sub
in
pop
inc
repz
and
jg
rolb
popa
xchg
push
sahf
into
jle
jmp
lahf
and
pop
push
stc
stc
enter
pop
bound
lcall
push
out
negb
addr16
xor
xor
jo
stos
lcall
mov
stos
and
stos
fwait
scas
mov
loope
into
sbb
inc
mov
jns
outsb
in
mov
lock
hlt
or
cmp
cmpb
mov
push
stc
inc
pop
push
pushf
iret
loop
faddp
movsb
cmp
leave
dec
loopne
and
ret
jae
jne
or
cli
mov
dec
adc
lds
cmp
sub
sahf
add
push
dec
push
jle
stc
in
aas
stos
int3
inc
mov
mov
jnp
jne
and
sbb
in
lds
xchg
sbb
scas
ds
pop
out
arpl
fdivrl
inc
pop
cld
test
xor
adc
mov
pushf
push
inc
test
mov
mov
push
sub
mov
in
ret
mov
adc
mov
mov
mov
and
and
inc
add
cmp
jnp
mov
push
sub
jge
stos
and
popa
jecxz
ret
loopne
fwait
push
scas
arpl
sti
rcr
dec
fdivl
or
lods
fcmovb
cmp
push
out
mov
ret
iret
pushf
cmc
aad
int
pop
repnz
pop
push
add
bnd
add
push
cmp
ja
movsl
jnp
xor
lds
ja
mov
push
inc
in
rcll
mov
xchg
std
push
mov
xchg
in
fdivrl
out
and
mov
icebp
cld
arpl
insb
bound
mov
pop
inc
xor
fstpt
cmp
cmp
sbb
sbb
loopne
cli
stos
dec
mov
es
jmp
sbb
mov
out
les
lret
xchg
ficompl
xchg
outsb
stos
cmp
inc
dec
cs
adc
jbe
cli
jbe
imull
das
and
inc
pop
ja
lea
or
pop
dec
or
clc
inc
xchg
out
and
dec
das
jnp
int
cld
gs
test
sub
js
xor
das
jo
pushf
dec
and
push
push
stos
shll
pop
mov
clc
popa
aaa
cmc
mov
sub
sbb
imul
movaps
repz
in
sti
les
std
cmpsb
dec
add
pop
jmp
dec
aas
dec
shll
aad
ret
test
int3
sahf
mov
jp
inc
arpl
cmp
ret
test
in
fdivl
push
sub
scas
insl
int
std
mov
xorb
cltd
clc
or
mov
cmpl
pop
add
pop
push
shlb
jae
repz
sub
ja
xchg
out
pop
clc
ret
je
sahf
stc
sti
pushf
scas
or
repnz
sbb
jno
jo
iret
sub
popa
loopne
je
enter
cmpsl
mov
mov
jns
pushf
and
jp
jmp
inc
in
dec
cmpsb
xchg
cmp
push
jns
in
aaa
fldl
cmp
mov
and
adc
and
dec
repnz
dec
dec
xchg
adc
sub
into
ret
pop
gs
lods
sub
jns
and
and
cwtl
xchg
push
fldl
pop
mov
dec
aad
lret
lds
pop
sub
jbe
out
shll
xor
xchg
decb
mov
sbb
dec
roll
adc
push
xchg
cmp
hlt
in
jl
dec
popf
jnp
push
dec
out
jbe,pt
inc
pushf
pop
push
xchg
cwtl
cmp
or
out
and
jns
xor
sbb
je
add
mulb
std
jb
pop
xchg
mov
in
sbb
pop
fwait
loop
sbb
jmp
fisubrs
cwtl
xlat
xlat
mov
pop
movsb
xor
fdivs
rcrl
arpl
xor
mov
ss
sbb
lods
push
inc
lea
aas
sub
pop
les
test
iret
mov
mov
pop
int3
divb
or
lods
shlb
xlat
push
add
inc
add
rolb
xchg
fwait
jae
inc
incb
mov
and
leave
int3
mov
xchg
mov
int
jo
jmp
rcl
cmp
sbb
mov
lret
call
ret
adc
enter
push
xchg
or
repnz
lock
xor
and
lds
stos
mov
adc
jbe
loope
pop
or
sti
dec
lock
inc
shll
lods
stos
dec
lds
pop
inc
mov
dec
addr16
cli
frstor
in
mov
mov
stos
mov
pop
adc
push
sub
sub
negb
mov
sti
cltd
xor
lock
add
fdivl
or
fsts
xchg
push
hlt
push
js
in
push
add
sysret
es
mov
fadds
dec
rorb
in
clc
clc
mov
adc
clc
mov
add
add
sbbl
dec
push
pusha
das
cltd
xchg
mov
pop
xor
lods
and
lcall
push
stc
inc
adc
jnp
shll
cwtl
mov
rorb
mov
sbb
test
or
cwtl
ficoms
pop
pop
aad
mov
sbb
shr
pop
inc
ret
xchg
clc
add
or
mov
insl
out
or
adc
fdivrs
inc
mov
jmp
jp
cmpsl
push
push
jnp
insb
jmp
sbb
test
out
andb
popf
call
pop
mulb
in
fstps
pop
push
ja
sti
leave
nop
sub
aaa
test
jmp
bound
cs
sbb
sbb
dec
out
lds
lock
inc
test
addr16
loopne
lds
mov
mov
popa
sbb
pushf
xchg
jnp
cmp
movsl
stos
cs
lretw
lahf
pop
rol
sub
mov
iret
loop
xchg
loope
cmc
and
dec
jns
pop
cmp
xchg
data16
popf
in
mov
adc
xor
dec
inc
pop
mov
mov
pop
repz
popf
xchg
and
int
lock
repz
inc
stos
dec
xchg
in
push
fwait
and
sub
popa
dec
sub
add
mov
xchg
sbb
jecxz
jnp
adc
cwtl
cmp
punpckhbw
sub
loope
mov
sbb
pop
jmp
dec
cmp
push
std
cmc
cltd
mov
call
into
inc
testl
outsl
cmpsl
sub
pop
addr16
push
xor
add
leave
push
repnz
cmpsl
mov
xchg
xchg
pop
arpl
push
and
popa
cwtl
mov
xor
mov
inc
scas
pushf
jl
outsb
test
fcompl
mov
je
rcrl
icebp
mov
into
stos
test
shlb
jne
icebp
dec
sbb
movsb
lds
dec
adc
dec
xor
cmp
dec
mov
leave
shlb
cmp
jle
cmp
mov
jle
cmp
xchg
and
or
and
xchg
xchg
or
test
pop
divb
cmp
adc
and
sbb
dec
stos
fdivrl
add
pop
sub
push
xchg
xchg
dec
sbb
scas
ja
lcall
mov
mov
mov
sti
pushl
repnz
xlat
inc
mov
fstp
movsb
pushf
cmp
mov
dec
mov
cmp
mov
mov
lcall
inc
push
fwait
outsl
aad
iret
cltd
cs
popa
shlb
insb
jecxz
and
sub
stos
sub
insb
popf
add
push
movsl
push
sbb
adc
iret
adc
dec
pop
cld
in
pop
jecxz
adc
inc
mov
mov
jmp
inc
jecxz
ret
xor
sub
and
decl
es
push
xchg
xchg
js
leave
rcr
push
imulb
mov
mov
sti
lret
push
pop
cs
adc
sahf
or
mov
sbbl
fldcw
mov
pop
je
add
jb
popf
mov
push
imul
mov
bound
fsubrl
mov
sub
push
testl
scas
xor
arpl
jg
sub
pop
or
cmpsb
popf
pop
out
or
add
cli
data16
negl
inc
sti
sub
inc
cmpsl
sahf
push
mov
mov
addl
int
cmc
adc
test
in
leave
sbb
std
push
jg
sub
sub
sarb
and
jl
pushf
mov
xchg
sub
aaa
jp
roll
mov
mov
push
xor
mov
push
dec
fcomps
sti
jno
pop
push
inc
and
sub
pop
lea
cmp
stos
fwait
pop
cs
xlat
mov
pop
fstps
movl
js
arpl
push
inc
push
push
ss
popf
pop
cmpsl
jno
movsl
fidivrl
mov
es
cltd
inc
loope
ss
push
inc
nop
pop
cmpsl
or
in
sbb
je
mov
test
pop
push
cli
inc
inc
adc
or
fdivrl
jle
and
push
pop
jmp
xor
sbb
jne
sub
addb
fiaddl
popa
fst
push
js
xorb
ds
xor
cwtl
fistpl
sbbb
test
or
sarl
test
jno
adc
pop
or
add
xlat
lock
fidivl
iret
add
sbb
addr16
rcr
inc
mov
fidivrs
jle
and
add
sbb
je
sbb
fcmovnu
mov
shlb
mov
mov
push
push
stc
or
mov
hlt
hlt
arpl
pusha
in
push
sbb
rorb
or
add
cs
inc
arpl
adc
inc
out
mov
pop
push
out
mov
push
imul
mov
cld
dec
push
add
lock
test
inc
sbb
out
xchg
cmc
sbbl
xchg
inc
aaa
movsb
lret
js
cmp
pop
mov
sub
lret
call
dec
outsl
aaa
mov
idivl
in
jle
stos
jmp
nop
jmp
and
dec
fnstcw
int3
push
sbb
nop
cmp
jmp
jo
das
jmp
scas
cmp
dec
mov
push
outsl
jecxz
adc
dec
pop
loopne
aad
ficompl
adc
enter
add
jb
or
pop
adc
push
xchg
loop
jecxz
and
jbe
xchg
shlb
dec
add
lea
cs
in
or
xor
jp
ret
pop
xlat
movsl
and
ss
rorl
shl
icebp
mov
xor
or
push
push
dec
add
mov
cmpsl
adc
mov
mov
aam
cmp
pop
mov
xchg
mov
sub
lcall
addb
jo
jns
or
fdivrs
aas
adc
test
lds
repz
mov
mov
push
cmp
std
shll
das
leave
mov
inc
jl
int3
mov
sub
jecxz
or
adc
xor
push
sbb
pop
push
lods
push
push
sbb
fimuls
mov
out
mov
or
rorb
mov
xor
mov
pop
fidivs
stc
popa
stos
aaa
cli
pop
mov
mov
sar
xchg
cmc
rolb
mov
inc
xlat
sub
xor
xchg
gs
loope
imul
mov
cmp
inc
cltd
imul
cmp
insl
push
leave
cmp
pop
sti
mov
or
mov
inc
cmp
mov
dec
jo
sti
mov
iret
fidivl
inc
add
mov
in
pushf
les
int3
pop
std
sahf
sub
test
std
or
mov
jae
fwait
stc
rcrb
ror
es
mov
push
inc
hlt
or
mov
push
cmp
jno
cmp
sub
mov
xchg
adcl
mov
pop
mov
fcom
lock
jb
test
push
add
ljmp
push
xchg
cmp
test
mov
shl
clc
xchg
sbb
xchg
fdiv
gs
cs
fldcw
in
stos
xchg
adc
in
repz
jecxz
out
fsubrs
ret
sbb
xchg
cmpsl
cmp
loopne
cs
test
scas
xchg
movsl
into
insl
popl
mov
lcall
xchg
popf
jo
xor
cmpsl
push
ds
mov
imul
mov
xchg
jmp
mov
xor
or
mov
pop
pop
test
push
xor
lea
shl
inc
mov
imul
fmuls
push
inc
call
adc
add
add
fsubr
sahf
lock
dec
add
mov
lcall
addb
pop
pop
adc
stos
pusha
insb
jp
je
xor
cmc
xlat
fistpl
xchg
daa
dec
jecxz
icebp
mov
or
mov
cmp
cmp
imul
adc
scas
mov
xchg
push
in
lret
fwait
inc
ficoms
mov
rcrl
movhps
dec
xchg
imul
int
add
nop
and
cltd
xor
pop
push
int
popf
sbb
pop
xchg
jbe
outsb
mov
aam
les
jg
stc
inc
pop
mov
in
stc
lahf
repnz
cmp
cmp
and
out
mov
aam
and
test
xlat
repnz
mov
testb
add
fcompl
xor
outsb
xchg
stos
xchg
leave
dec
ret
mov
dec
xchg
fwait
mov
pop
xchg
push
cwtl
or
or
jmp
aad
inc
stos
loope
fsubr
add
pusha
mov
ja
pop
jp
mov
shll
movsb
mov
outsb
and
cmpsb
icebp
shrl
das
addr16
fs
movsb
mov
and
scas
cmp
cltd
mov
xlat
and
insl
out
push
ds
sar
movsl
sbb
xchg
scas
dec
mov
mov
test
aaa
out
dec
shrl
sbb
pop
in
push
add
sub
ljmp
movsl
jmp
or
pop
test
ret
mov
mov
aas
xlat
inc
mov
jne
dec
pop
sahf
mov
imul
movsb
sub
in
pop
cmp
insl
aam
push
fsubrs
negl
push
popa
call
ret
and
loope
xchg
dec
add
xlat
adc
xchg
pop
pop
ds
mov
js
stos
shll
push
and
mov
jno
js
push
xchg
insb
addr16
lds
test
lret
cmp
dec
out
xchg
sarl
sahf
cmpsl
sub
dec
or
dec
and
mov
addl
idiv
jno
add
xlat
movsl
and
out
or
mov
sti
push
das
adc
mov
inc
mov
push
cmp
es
mov
xchg
fst
shlb
xchg
pop
mov
and
sbb
add
and
out
frstor
add
push
mov
hlt
clc
inc
adc
mov
mov
xchg
in
mov
test
and
not
fisubl
cmpsl
and
mov
push
jb
mov
add
out
fimull
clc
leave
jle
sbb
push
pop
gs
pop
je
rcrl
sub
sbb
xchg
sarb
jae
loop
push
push
addr16
lcall
shl
rcrl
je
test
xchg
sahf
jno
inc
jb
jg
icebp
adc
mov
jge
dec
mov
bound
fnstsw
jo
stos
cmpsb
push
pop
sbb
mov
sbb
sub
testl
setg
dec
daa
lods
add
add
scas
push
repnz
mov
sbb
daa
push
lret
adc
xchg
mov
movsl
in
repz
inc
stos
xor
cltd
cmpl
sbb
in
dec
insb
loop
inc
mov
pop
mov
add
fs
push
les
fldl
fdivrs
stos
jmp
cmp
jno
jae
fdivrs
mov
jecxz
pop
rcl
sahf
inc
sub
insb
mov
dec
rclb
aas
popaw
and
pop
dec
iret
mov
mov
std
pop
and
adc
xchg
lret
jge
lret
dec
icebp
das
shrb
cld
cltd
fnstsw
lret
test
lock
mov
push
add
inc
jl
enter
jno
xor
arpl
jo
push
mov
or
gs
push
shlb
imul
pushl
dec
push
shll
icebp
pop
int3
cmp
rcl
movsl
int3
mov
jnp
lcall
push
jo
stos
sahf
cmpsb
mov
fisubl
lods
lret
add
test
ds
pop
adc
jae
mov
cmpsb
add
xlat
push
lods
push
xor
push
xor
popf
xchg
and
rcrb
sbb
cmp
jns
add
js
in
arpl
dec
push
adc
rorb
jnp
outsl
out
sub
into
ds
pop
fldenv
or
pop
push
sbbl
imul
cmp
add
xor
push
pop
xor
inc
loopne
dec
mov
push
dec
loopne
mov
jae
insb
not
push
jmp
sub
mov
ja
sub
bound
sbbb
inc
cmpl
fldcw
imul
xor
xor
cmp
mov
jmp
push
sub
clc
or
outsl
insl
push
jecxz
aaa
push
loopne
lret
add
in
inc
in
xchg
mov
mov
sub
and
cltd
add
pop
cld
dec
stc
int3
dec
xchg
nop
in
pop
jns
fwait
add
xlat
xchg
cli
lea
sub
lods
repnz
fidivrl
xor
iret
adc
xor
xchg
pop
push
sbb
imull
pop
and
ja
push
stos
fistpl
jns
xor
sub
inc
out
out
xchg
cli
scas
sub
mov
add
mov
pop
iret
jnp
adc
and
ss
pop
jno
or
mov
push
sub
ss
dec
sub
mov
jmp
cli
push
enter
and
inc
aad
faddl
es
push
sbb
jge
lea
outsb
fldenv
or
fidivrl
out
cwtl
mov
movsl
nop
clc
fs
pop
and
ljmp
jnp
xor
mov
adc
mov
lret
pop
mov
mov
xorl
add
shlb
testl
xor
cli
jmp
pop
loop
ret
sbb
push
jbe
sti
call
popf
lods
lret
jno
lods
repz
xchg
push
lock
mov
and
addr16
cmp
jge
ss
or
adc
sub
call
pop
mov
mov
push
je
repnz
mov
push
push
ds
int
adc
inc
out
xchg
lret
loope
mov
inc
frstor
jb
enter
data16
jae
add
fiadds
movsb
ljmp
xchg
xor
adc
fcomps
inc
mov
lahf
fdivs
xlat
outsb
movsb
or
hlt
cmp
xchg
dec
mov
arpl
adc
mov
mov
test
imul
aad
or
jle
adc
xchg
xchg
adc
pop
mov
mov
cwtl
sub
insb
or
xlat
mov
dec
sbb
dec
mov
js
fisttps
js
push
mov
mov
data16
pop
adc
test
insb
mov
xchg
shrb
adc
add
dec
mov
pop
fldcw
lock
mov
ret
and
dec
dec
mov
mov
addr16
lods
or
lds
daa
sbb
mov
jb
and
icebp
cmp
dec
or
push
jbe
push
out
xchg
int
mov
out
mov
or
or
or
repz
jle
xlat
mov
icebp
mov
imul
imul
push
loopne
or
test
and
inc
pop
and
ja
das
or
mov
rcrl
fidivrs
lea
pop
stos
fisttpl
pop
sub
cwtl
mov
shlb
lahf
sub
fwait
push
cmp
mov
mov
cs
pushf
jp
lret
sti
adc
int
xchg
out
cmpsl
out
mov
in
pop
xchg
push
mov
jg
xchg
mov
pop
mov
pop
aas
aam
hlt
int3
hlt
cmp
jg
loopne
adc
jl
int3
mov
repz
lock
add
aad
clc
xchg
pop
test
gs
and
dec
scas
jp
movsb
xor
push
mov
and
jae
clc
mov
cwtl
js
div
mov
loope
cltd
lods
aad
subb
xchg
insb
inc
adc
xor
dec
test
in
fbld
jns
idivl
popf
ror
sbb
sahf
add
push
pushf
sti
aaa
sub
outsl
mov
jb
pop
sub
mov
mov
pop
jb
adc
stc
inc
add
inc
sbb
pop
test
bswap
loop
ret
icebp
adc
insl
mov
jb
xor
xchg
cli
mov
leave
sub
int
dec
add
imul
es
pop
adc
pushf
pop
addl
loopne
mov
out
call
mov
repnz
bound
cmp
jo
jge
cmc
repnz
dec
out
mov
into
cmpsb
je
scas
rcrb
fdivrl
fsts
push
push
mov
jp
xchg
mov
hlt
inc
loopne
mov
repz
lahf
push
inc
cli
lock
jbe
lea
mov
jl
xor
scas
mov
and
shlb
xor
daa
imul
popf
frstor
fldcw
jbe
adc
arpl
je,pt
sub
into
adc
pushf
xchg
notl
lret
out
push
mov
mov
pop
xor
fmul
iret
xchg
insl
inc
and
xor
dec
sarl
jb
or
hlt
add
scas
lcall
push
mov
mov
jge
cmp
cltd
jnp
loope
xor
jns
cltd
aas
sbb
sbb
loop,pt
dec
inc
imul
sbb
mov
add
pusha
imul
leave
push
idivl
movl
pop
leave
inc
push
mov
loop
push
mov
addr16
pusha
aad
mov
xor
xchg
or
add
push
pushf
movsl
mov
out
bound
mov
mov
test
scas
xor
pop
inc
cmc
pop
push
lods
sbb
scas
repnz
rcl
mov
inc
inc
addr16
dec
mov
cmc
push
xchg
sarl
sbbl
in
mov
adc
adc
inc
sti
jle
push
repnz
mov
xor
jns
inc
aad
xlat
repnz
fdivs
cvtdq2ps
jns
add
push
mov
mov
loope
xchg
lret
cmc
pop
nop
jne
mov
sbb
sub
xchg
xchg
in
aaa
mov
push
pushf
mov
out
mov
stos
sahf
jno
pop
in
repnz
in
sarl
pop
or
imul
aaa
xchg
stc
movsl
inc
cmp
dec
mov
lcall
sbb
mov
jmp
pmullw
jo
adc
sub
in
push
jecxz
mov
pusha
out
cmc
mov
ret
in
adc
scas
notb
or
les
stc
sub
into
jo
fucomip
sub
lods
ret
js
aam
cmp
aaa
inc
inc
jae
pushf
lret
popa
adc
repz
and
out
sti
pop
es
jmp
jbe
outsb
out
pop
cmc
bound
push
rolb
mov
push
outsb
inc
jnp
push
stc
push
shll
mov
cli
aam
outsb
insl
cmpsl
ljmp
andps
add
push
aad
addr16
pop
jmp
push
jmp
mov
jns
dec
subb
test
test
mov
nop
fwait
jnp
mov
sub
pushf
mov
pop
js
cmp
cld
test
shll
repz
add
mov
cmc
in
lcall
add
repz
mov
sti
fs
add
shll
sub
and
pop
adc
dec
add
jmp
cmp
mov
xlat
shl
test
mov
shrb
mov
mov
andl
jle
xlat
inc
lods
js
insl
add
out
loope
cmp
jnp
and
mov
daa
dec
xchg
lret
xor
popa
lods
popf
aas
insb
cmpb
xchg
push
sahf
jb
xor
lahf
cmp
notb
test
ss
fcompl
enter
xchg
addb
push
mov
ljmp
clc
pushf
iret
lods
ret
dec
pushf
mov
lods
gs
jl
leave
push
lahf
push
adc
int3
jne
js
mov
lock
scas
mov
inc
aas
movl
mov
aad
into
sub
roll
mov
aas
jg
dec
mov
rcrb
jge
jg
and
adc
cmp
add
sbb
cmp
sub
add
imul
outsb
mov
pop
xrstors
push
int
xchg
arpl
and
notl
cmc
test
sub
pop
or
daa
ret
insl
adc
push
sbb
dec
inc
push
mov
sub
icebp
hlt
jge
xor
pop
std
stos
imul
sub
jnp
adc
loopne
data16
pop
hlt
add
jbe
sbb
adc
jb
test
out
testl
aaa
cwtl
fstpt
jne
cvtpi2ps
xor
xor
dec
ret
inc
cli
cmp
lods
shll
jnp
adc
aam
es
divl
lahf
sbbl
jg
jns
sub
pop
lcall
flds
stc
sahf
popa
inc
jbe
jae
movl
mov
push
pop
pop
aad
inc
popf
enter
push
imul
rclb
mov
and
mov
xchg
mov
lds
in
jae
push
dec
fdivrs
cmpsl
xor
das
or
popa
popf
jne
lock
cmp
pop
mov
mov
fcoml
scas
fst
jne
mov
adc
inc
push
outsl
add
xlat
mov
push
lea
leave
test
push
ja
cltd
mov
jb
cmovne
sbb
inc
fimull
sbb
mov
ficomps
addr16
fwait
xor
pop
imul
pop
inc
adc
lods
jo,pn
fwait
jb
mov
jae
into
loopne
hlt
scas
mov
adc
decl
sub
jne
into
dec
dec
mov
test
jne
fwait
add
aam
ffreep
enter
dec
addr16
pop
movsb
mov
fdivrl
push
dec
xchg
aam
push
insl
or
enter
js
cmp
jb
sbb
std
aaa
sti
test
xchg
pop
lret
sbb
xor
aaa
fmull
js
xlat
lods
ds
ficomps
gs
jg
jecxz
add
jno
push
outsl
sbb
push
xchg
mov
dec
lahf
stos
es
or
push
das
loop
xor
push
push
jnp
rol
mov
cmpsb
xor
dec
mov
popf
repz
xor
adc
addr16
pop
mov
ljmp
sub
mov
and
daa
gs
popf
iret
ds
fidivs
loope
pop
vprotb
or
sub
rcrb
cltd
scas
orb
xchg
and
jo
adc
test
repz
fbstp
dec
xchg
xor
or
or
or
ds
cs
loope
ss
loope
icebp
fldcw
and
cli
jns
lcall
das
popf
rorb
popf
xchg
mov
arpl
fcompp
jge
in
mov
fsubp
jnp
loope
push
mov
mov
addr16
adc
adc
orb
push
mov
inc
stos
adc
pop
xor
aaa
sbb
dec
in
leave
jae
data16
cmp
mov
pop
mov
iret
std
movsl
jmp
xor
out
je
mov
mov
cmpsb
or
adc
and
addr16
push
js
das
test
fadds
jp
icebp
lds
in
fwait
fwait
scas
mov
sti
ret
pop
rcrl
pop
add
in
insw
out
loop
mov
mov
lods
xchg
out
fcoms
mov
shr
fimuls
loop
fiaddl
lea
jb
sub
xchg
in
ffreep
add
push
pop
jnp
addr16
rolb
jbe
test
add
fisubl
add
jbe
mov
not
xchg
mov
sub
aas
movsl
aas
fwait
cmpsl
mov
lcall
or
dec
les
xchg
cmpsb
in
dec
xchg
xchg
shrl
adc
adc
mov
into
mov
das
popf
xchg
dec
in
push
pop
mov
cmpb
pop
addr16
dec
lds
xchg
cmp
jg
jle
and
js
mov
in
xor
cmp
popf
in
mov
and
mov
fwait
pop
lods
jno
pusha
xorl
pusha
dec
sbb
mov
fwait
stc
and
mov
sub
cld
xchg
aad
movsb
jmp
cs
cmp
leave
cmp
sbb
or
scas
sbb
jge
jb
pushf
add
bound
xor
out
jbe
cmp
rcrb
aaa
adc
adc
daa
xor
stc
sub
mov
cmp
inc
add
pop
mov
stos
push
mov
mov
mov
mov
or
fcompl
mov
or
xchg
or
loopne
mov
push
pop
gs
ret
dec
xor
and
pop
push
mov
ficomps
imul
sbb
movsl
enter
inc
in
repz
cmpsl
or
in
mov
daa
push
mov
push
push
push
nop
ja
and
mov
push
xchg
and
and
mov
dec
mov
add
xchg
insl
cld
sub
fbld
fimuls
cmovne
sahf
jno
into
cs
sub
push
jge
adc
fcomip
inc
or
std
out
stos
sbb
sbb
shll
cmp
loope
jge
cmp
xchg
jns
mov
mov
mov
mov
dec
mov
add
inc
jb
xorl
cwtl
les
int
lahf
sbb
xor
repnz
ret
push
ljmp
add
dec
test
cmp
add
mov
pusha
push
int
mov
xor
push
add
mov
cmp
inc
leave
fcmovne
xlat
lret
cs
dec
mov
cli
mov
aaa
mov
ret
sub
popa
ljmp
dec
sub
push
dec
ds
mov
enter
lret
add
adc
loopne
mov
mov
push
setae
dec
lds
mov
mov
addl
add
or
sbb
loop
sub
scas
cld
stc
scas
in
xchg
sbb
mov
push
std
mov
jbe
xlat
movl
insb
xor
jns
inc
push
jecxz
fs
rcrl
fisubrs
loope
in
and
pusha
jge
add
xor
xorl
mov
lods
push
stc
popf
push
test
outsl
dec
cwtl
or
push
add
imul
and
or
cltd
insb
dec
jo
sbb
aam
jg
xchg
sahf
cmp
xchg
stos
or
cli
fidivl
jae
and
mov
lods
lcall
fldt
cltd
scas
call
push
int3
xchg
ret
pop
adc
aad
mov
inc
dec
sbb
mov
fldt
test
jne
cs
shll
xchg
cmp
cmpl
mov
push
loopne
adc
cmpb
xorb
aam
mov
out
or
leave
sub
push
shl
xor
mov
lods
int
jge
cmpsl
and
dec
adc
xchg
lea
ja
fsubrl
cmp
or
pop
sbb
jbe
ss
sbb
iret
bound
mov
js
ret
fadd
and
decl
sbb
test
in
xorl
fbstp
int
jae
std
movsl
mov
push
mov
dec
loope
lret
adc
ja
jecxz
sbb
jmp
lcall
mov
jge
mov
repnz
inc
cmpb
rcrb
lea
scas
or
push
fwait
aas
mov
inc
pop
inc
fcoms
arpl
inc
hlt
push
stos
leave
add
imul
ljmp
mov
jecxz
stc
pop
call
cltd
mov
mov
cmp
pop
inc
fld
scas
rclb
mov
aam
out
mov
or
dec
cs
out
add
sub
dec
shll
xchg
nop
mov
xor
and
call
push
adc
repz
notb
push
in
mov
sbb
cld
and
pop
sbbl
jns
sbb
in
aaa
fnstcw
rclb
test
push
int
pusha
mov
push
or
xlat
add
xchg
jbe
pop
adc
lahf
leave
pushf
pop
cmovl
stc
ja
sbb
push
iret
pushl
aas
xchg
daa
repz
xor
push
adc
sub
push
xchg
int
push
enter
in
pop
ds
jl
cs
inc
xchg
call
push
int
scas
jns
mov
inc
and
icebp
arpl
pop
xor
ljmp
aad
jmp
je
inc
pop
and
jmp
in
mov
in
inc
sbb
sbb
cli
popf
jo
xor
push
cmp
cmpsb
push
push
mov
xchg
pusha
test
pop
iret
pop
shrl
iret
popa
stos
roll
jno
popf
ljmp
cmpsb
aaa
xchg
daa
push
aam
xchg
sub
pop
ja
sub
push
and
pop
js
jns
mov
ret
push
movsb
js
imul
adc
or
addl
fwait
sub
dec
mov
lahf
inc
xchg
loop
arpl
div
xchg
pop
mov
frstor
mov
pop
mov
inc
subl
hlt
lahf
enter
pop
mov
loope
and
dec
out
jae
shll
add
popa
sbb
jmp
cli
and
or
jns
pop
inc
pop
xor
and
orl
mov
mov
les
mov
outsb
enter
pop
fs
xorl
mov
push
aad
cmp
in
dec
jg
xchg
pop
rorl
jb
push
push
into
pop
icebp
popf
notl
out
mov
fisttpl
ja
test
test
mov
out
push
adc
sbb
inc
sub
addl
and
cld
mov
iret
outsl
iret
in
roll
sti
jnp
xor
xlat
sbb
push
xor
xor
sbbl
lea
lea
pusha
out
sbb
or
cmp
adc
dec
cmp
sub
add
lods
repnz
and
mov
ret
test
jecxz
rcrl
mov
andb
aam
sub
dec
faddl
fdivrl
or
roll
cmp
xchg
mov
jecxz
ficoms
and
adc
jg
mov
mov
cmpl
and
je
lahf
mov
lahf
lret
call
outsl
insl
fmuls
xchg
xchg
cwtl
outsb
jecxz
dec
mov
mov
sti
cli
loope
xchg
ds
xchg
jg
cmp
sti
data16
and
mov
bound
sahf
push
inc
jo
sti
out
out
adc
xchg
lock
dec
or
data16
nop
add
push
popa
push
sbb
repnz
sbb
rep
inc
xchg
aam
jns
nop
popf
xor
pop
or
xchg
in
sbb
mov
ret
stc
into
jge
mov
xor
out
icebp
mov
pop
int3
jl
jecxz
rcrb
mov
fs
lret
mov
sbbb
mov
mov
sti
mov
and
addr16
xchg
xchg
pop
add
shrb
or
mov
push
jo
mov
add
push
test
popa
push
mov
cwtl
aas
cmpsb
sbb
icebp
dec
cmpsl
xor
shll
dec
adc
mov
xor
mov
sub
mov
or
test
mov
jecxz
mov
outsl
fs
ret
loope
out
adc
shr
lds
imul
fwait
add
loope
mov
insb
jne
sbb
or
sbb
sub
mov
orl
andl
pop
imulb
cmp
rol
inc
and
pop
dec
test
out
inc
not
or
cwtl
inc
fisubs
mov
idivb
mov
and
iret
add
lods
shl
push
pop
mov
jae
xchg
sar
sahf
dec
cmp
gs
icebp
mov
mov
es
loopnew
mov
decb
inc
cmp
in
inc
popa
mov
cmc
jl
mov
pop
addb
mov
das
sub
ss
data16
dec
pop
inc
insb
mov
cwtl
out
aas
and
adc
shl
lea
mov
neg
push
lahf
xchg
out
cmpsb
cmp
pop
sbb
sub
xlat
scas
push
mov
mov
dec
ja
push
popf
dec
js
loope
je
cli
testl
out
pop
lea
roll
mov
sub
add
les
add
pusha
xor
push
rcr
or
dec
loop
out
xor
out
cmp
jae
test
aaa
arpl
test
scas
mov
adc
cmpl
dec
pop
std
popa
je
scas
add
cmp
test
mov
test
mov
int3
lods
dec
add
sbb
cwtl
jne
mov
jne
xchg
mov
or
mov
out
sbb
push
pand
mov
xchg
std
shr
cmpsl
inc
cltd
dec
aas
mov
xchg
aas
and
dec
sbb
jns
nop
dec
and
sbb
arpl
aas
sbb
popf
push
mov
and
push
jmp
cmp
clc
mov
popa
inc
repz
ficomps
mov
lods
cmp
iret
or
dec
es
inc
mov
sti
test
mov
sub
dec
cmpb
test
loope
jno
repz
outsb
mov
out
dec
sti
xor
xchg
incl
sub
sub
pop
inc
cmp
sbb
pop
sbb
jnp
xor
repz
out
or
ja
fsubrs
int3
or
mov
scas
pop
xchg
js
int
xor
and
pop
pop
and
and
or
scas
ficompl
xor
sbb
aaa
sbb
insl
sbb
or
mov
xorl
jne
pop
loopne
lods
mov
lahf
es
or
in
pop
cmp
scas
subb
and
rcll
lahf
push
mov
mov
sbb
adc
loope
sub
xchg
mov
mov
mov
push
lods
push
xor
add
cmp
push
ret
test
or
loopne
mov
pop
or
in
push
popf
dec
movsb
mov
les
imul
lahf
in
icebp
cmp
sbb
add
movb
test
std
rorb
xor
jb
mov
push
adc
dec
fsubl
addl
inc
fmulp
mov
lcall
mov
pop
pop
mov
cmp
inc
mov
jg
pop
pop
lods
std
add
cmp
sub
jno
test
dec
dec
mov
mov
loop
fiaddl
sub
fstpl
jle
lock
ja
and
aaa
jle
mov
jl
dec
int3
dec
add
xor
push
pop
pop
testb
repz
inc
in
and
xor
jbe
push
adc
cmc
in
mov
icebp
shr
add
pop
mov
andl
jb
mov
cltd
jnp
roll
loopne
dec
shl
cltd
loopne
outsl
leave
mul
xor
adc
mov
enter
ret
push
mov
cmpsb
adc
mov
mov
mov
in
iret
repnz
inc
jb
dec
xchg
mov
out
mov
lock
lods
sub
rclb
xlat
dec
movsl
add
test
push
je
sub
cmc
push
or
outsl
rorb
sub
mov
js
int3
push
adc
xchg
inc
or
xchg
mov
cmpsb
and
arpl
mov
inc
xor
daa
pushf
stos
mov
js
clc
jg
adc
pop
mov
test
jp
mov
arpl
mov
xor
or
cmpsl
or
jns
pop
shll
sbb
mov
jne
xor
into
jns
loope
ja
fwait
sub
cmp
xorb
sbb
decb
push
lcall
jno
iret
sbb
jp
adcl
in
dec
add
add
jge
dec
imul
adc
arpl
pop
rcr
add
rolb
out
inc
adc
enter
jbe
push
and
sbb
sbb
sub
icebp
iret
push
add
mov
push
sbb
pop
lds
mov
cmpl
incb
mov
xor
insb
enter
sbb
mov
mov
dec
mov
mov
cltd
leave
mov
dec
enter
scas
inc
xorb
mov
addr16
cmp
ljmp
inc
cmp
mov
mov
bound
inc
cmp
push
pusha
daa
lret
jnp
sub
mov
push
pop
and
mov
iret
test
mov
aas
subl
lods
or
sbb
mov
out
xor
mov
iret
pop
lret
or
add
mov
inc
lock
js
adc
arpl
test
imul
adc
push
rorl
movsb
sub
inc
shl
mov
or
mov
lods
hlt
lahf
lahf
repz
je
movsb
dec
fldln2
fistps
cmp
xorl
jg
dec
lds
adc
mov
dec
iret
leave
jmp
inc
mov
repnz
inc
push
mov
pushf
or
mov
push
jae
xor
in
fcoml
repnz
cmp
jmp
popf
lock
mov
add
add
clc
fsubr
pop
movsb
inc
add
aad
adc
sub
cmpsb
push
out
mov
cmp
ljmp
jae
sub
adc
enter
pop
js
fs
notl
mov
out
mov
jmp
ficoml
enter
jg
inc
xchg
pop
push
shrl
jl
push
dec
cmp
arpl
fldcw
faddl
push
xchg
clc
pushf
test
mov
jmp
cmp
push
dec
cmc
popa
adc
stc
mov
sub
je
jno
clc
jo
push
adc
fldcw
mov
les
dec
ret
inc
insl
xchg
mov
or
test
cld
sub
jnp
adcb
in
pop
dec
je
mov
enter
aad
aam
enter
ficomps
popf
arpl
in
mov
cmc
fs
xchg
ss
jg
mov
mov
orl
icebp
dec
pop
dec
dec
aaa
jmp
add
sub
inc
sbb
inc
dec
mov
jge
fwait
data16
fwait
mov
or
xchg
int
sbb
adc
inc
jg
pop
sub
and
cld
ret
icebp
outsl
les
inc
dec
pop
mov
outsb
and
inc
jno
pop
sub
test
outsb
ret
pop
and
outsb
add
mov
xorl
insl
adc
seta
push
and
mov
insb
xchg
inc
mov
push
dec
mov
or
out
shrl
cmc
add
mov
or
and
out
mov
mov
xlat
mov
sub
sub
cmp
push
sub
mov
pop
xorb
sbb
stos
pop
loope
int3
pop
sahf
mulb
loop
in
int3
mov
push
adc
sbb
adc
push
or
ret
mov
cmp
stc
test
lds
sub
js
and
inc
sbb
out
pop
shr
mov
sub
sar
stos
out
addr16
out
jp
xchg
or
gs
sbb
scas
lcall
enter
testl
xchg
mov
pop
jno
pcmpgtw
dec
xchg
xor
mov
jmp
or
sti
imul
adc
and
test
adc
xor
fstpt
add
adc
jmp
mov
mov
clc
lock
xlat
mov
ror
adc
cmp
leave
push
lea
jne
bnd
lret
and
setns
in
mov
sbb
mov
cltd
adc
fidivs
adc
or
add
adc
mov
sti
jae
lahf
push
cmp
inc
or
mov
add
jmp
sbb
ds
lret
mov
popa
icebp
add
imul
divl
fistl
xchg
les
xor
js
repnz
adc
jle
mov
ficoms
arpl
and
sbb
lret
jo
inc
cld
lcall
stc
cmp
fdivs
lock
clc
andb
mov
push
xor
ss
dec
pop
fcoml
mov
lret
jne
cli
out
call
xchg
xchg
xchg
push
cmp
leave
ljmp
jl
sahf
jmp
and
jmp
push
or
xlat
ljmp
or
rcrb
sub
mov
mov
cmpb
pop
popa
add
cmp
mov
fists
outsl
push
push
add
sub
cltd
ss
mov
scas
repz
jge
dec
ljmp
insb
pop
lock
iret
xlat
or
shl
sub
and
push
cmp
fs
mulb
inc
addr16
inc
stc
xchg
inc
in
pop
lds
in
xor
inc
mov
addr16
mov
addr16
shll
mov
push
shrb
and
aad
movl
fidivs
lods
jle
ljmp
adc
sub
or
add
xlat
insb
in
mov
bound
imul
adc
inc
or
fcoms
pop
mov
ja
pop
out
mov
xchg
out
cmpsb
adc
int
subb
mov
shrb
f2xm1
mov
outsb
push
cli
inc
fisubrl
xchg
sbb
mov
fsubrl
jnp
or
cmp
stc
pop
mov
push
rcll
icebp
lock
xchg
pop
adc
mov
aam
push
inc
orb
pop
xchg
push
in
cmpsb
xchg
aaa
mov
call
nop
add
sub
add
das
cmp
into
sbb
jnp
xor
add
je
sbb
loopne
sahf
dec
hlt
test
mov
inc
mov
icebp
push
aas
xchg
mov
jmp
fdiv
mov
dec
jne
xor
xlat
test
movsb
add
mov
ds
sub
mov
aad
pop
aas
ret
push
orb
pop
push
mov
das
iret
mov
bound
cmc
cli
mov
sahf
push
jge
mov
dec
test
enter
addb
shrb
outsl
pop
jecxz
mov
xor
cld
repz
push
mov
shll
aad
push
jb
dec
jnp
sbb
dec
cmpsl
inc
mov
lahf
daa
testb
lea
sub
shll
mov
cs
push
pop
pop
add
enter
bound
fidivrs
or
sbb
aad
sbb
repnz
mov
push
push
cmc
lods
in
js
inc
fcmove
cld
jo
fbld
mov
adc
shll
adc
pop
pop
cmp
adc
cmp
xchg
nop
popa
xor
inc
push
mov
popa
and
adc
pusha
sub
loope
fstpt
push
and
insl
lea
xor
lods
bound
test
jmp
ss
leave
das
or
outsb
fldenv
jae
adc
cmc
lock
mov
sbb
mov
andb
enter
sbb
loopne
mov
in
push
dec
sub
pop
jl
mov
subb
es
lock
test
es
push
and
push
dec
nop
mov
ror
jbe,pn
rorb
dec
push
or
push
sti
fistpl
push
push
sbb
push
dec
lahf
scas
pop
and
icebp
mov
sarb
cmp
jbe
andb
jb
jno
jnp
fisubrs
mov
in
xchg
dec
cli
cmp
adc
je
xchg
sub
in
int3
bound
js
xor
sbb
out
mov
xor
imul
pushf
jle
out
pavgw
dec
jnp
sbb
out
pusha
jns
scas
add
test
push
xchg
aam
sahf
out
mov
add
scas
adc
push
xor
shll
and
dec
aam
or
ds
xor
iret
mov
push
pop
pusha
lahf
cltd
pop
jae
shr
dec
ljmp
add
add
fs
or
stc
inc
mov
mov
pop
icebp
cld
jle
mov
clc
cld
xchg
jne
xchg
imul
idivl
inc
add
cs
in
mov
xchg
or
xchg
or
stc
aam
jae
adc
push
cld
mov
add
mov
cmp
jb
dec
callw
pop
inc
fwait
sbb
inc
insb
out
pop
jbe
sbbb
shrl
lods
push
decb
jmp
xor
mov
push
je
xchg
fs
enter
repz
sub
pop
pop
ds
bound
in
dec
faddl
jg
stc
pop
cmpsb
pop
jne
xchg
mov
mov
iret
shlb
xchg
es
pop
mov
cltd
mov
add
scas
test
fwait
sbb
std
xchg
cwtl
push
jns
adc
ficompl
cmp
cltd
pop
popa
loopne
dec
enter
cmp
divb
sub
sbb
dec
andb
data16
stos
mov
xchg
in
xchg
xor
sbb
pop
sti
lods
add
xor
lcall
negb
ret
adc
std
cli
nop
sub
jecxz
push
outsl
outsb
xchg
sub
push
dec
sbb
test
cmpsb
or
jno
and
in
iret
les
adc
ud2
addr16
cmp
mov
dec
inc
pusha
or
add
adc
pop
inc
mov
add
clc
mov
ret
sub
mov
aam
mov
rorb
pop
jecxz
lcall
stos
in
push
mov
iret
lods
xchg
icebp
jl
repnz
jl
imul
xor
jge
mov
push
xor
imul
mov
cltd
push
mov
das
popa
cltd
or
aas
push
cwtl
xor
repz
jo
js
inc
adcl
test
or
pop
call
nop
lds
aaa
add
stc
lahf
out
adc
pusha
arpl
test
lods
jo
into
push
aad
push
rorb
xchg
dec
xor
push
shl
mov
jmp
ja
add
test
sbb
popa
in
mov
popf
ljmp
mov
hlt
sub
test
lcall
sub
lahf
or
dec
xlat
dec
call
sub
lea
jns
inc
xchg
adc
je
leave
inc
dec
push
mov
sarb
gs
lods
and
dec
pop
xchg
test
adc
mov
test
mov
dec
push
push
add
and
or
mov
xor
sbb
sub
xchg
sub
pop
push
outsl
in
xchg
dec
cmp
bound
loopne
and
dec
data16
pop
scas
push
bound
movsb
test
lea
lock
sub
cld
push
and
sbb
fsubrp
insl
fcomi
xchg
inc
mov
sbb
xchg
push
sbb
js
stos
mov
push
out
mov
mov
stos
mov
daa
sub
dec
dec
pop
sbb
push
sbb
or
xor
in
ror
scas
xor
sbb
add
addb
out
shlb
ljmp
push
push
pop
and
fs
lret
leave
and
jecxz
outsb
repz
mov
cmp
mov
fmuls
fimull
add
in
mov
mov
leave
les
fdivrs
test
sub
and
hlt
shrb
popf
push
mov
enter
cmp
movsb
int3
out
mov
rcll
or
ret
and
js
cli
add
leave
mov
into
mov
or
cld
sub
int3
mov
xor
fists
out
rcr
cmp
lcall
das
jns
arpl
pop
dec
xor
adc
xlat
sbb
test
inc
clc
or
xlat
pop
jmp
cli
mov
cmpb
stos
enter
pop
add
test
add
sbb
fucom
adc
xor
hlt
mov
int3
mov
repnz
xchg
sbb
int3
inc
cmp
adc
lret
hlt
dec
and
mov
sub
imul
pop
lock
out
les
ljmp
sub
test
out
mov
sti
fwait
fs
pushf
sbb
or
push
mov
dec
mov
inc
adc
dec
rcll
std
repz
scas
mov
sbb
in
in
test
pop
mov
xchg
das
push
xchg
outsl
cld
stc
sahf
js
cmp
or
mov
jle
inc
mov
mov
jp
cld
cmpsb
add
inc
fchs
mov
movsl
lahf
pop
adcl
sbb
xor
cld
stos
js
adc
push
es
rolb
shll
stos
xor
imul
leave
and
cmp
ja
enter
mov
in
nop
fcoms
sarl
and
xchg
xor
ds
jg
test
pandn
jge
mov
inc
xchg
pop
mov
pushf
dec
int
add
adc
sbb
addr16
jne
adc
out
mov
hlt
out
icebp
push
aad
daa
addb
es
pop
xor
or
mov
mov
rolb
sbb
lahf
icebp
test
fwait
dec
out
xor
stos
insb
and
adc
aad
jno
mov
into
jle
cmp
rcl
xchg
push
pusha
adc
out
scas
call
call
xchg
cmp
fildll
loop
outsb
lds
inc
test
cmp
mov
scas
add
or
mov
out
and
sahf
cmp
stos
ret
mov
sbb
push
and
aad
jne
sarl
ret
xorb
cwtl
adc
orb
pop
adc
stos
ds
ret
mov
mov
push
inc
movl
je
jl
call
add
decl
jnp
inc
sub
adc
mov
sub
xchg
imul
ret
sbb
push
sbb
mov
es
das
lods
jge
jle
jo
mov
insb
sbb
orb
and
pop
inc
mov
insl
push
mov
repnz
xchg
es
cmpsl
xchg
or
jns
shlb
xor
fnstcw
pop
sbb
imul
inc
enter
xchg
js
push
jge
leave
pop
jl
sbb
xor
sahf
lret
sbb
pop
mov
mov
leave
ret
leave
mov
sarb
fsts
movsb
pop
push
jp
daa
lods
push
lds
jae
test
mov
cmp
rclb
addb
sub
mov
lret
cmpsl
loop
xchg
pop
test
aas
js
stos
int3
ds
mov
mov
jno
in
xchg
fistps
lds
adc
cmpl
or
movl
shlb
pushf
es
fldt
jge
sbb
mov
add
jl
pushf
adc
negl
fildl
push
scas
ror
ds
and
sarb
jno
cmp
mov
xorb
int
jge
jmp
popf
cmpsl
cmp
repnz
inc
xchg
stos
adc
out
stos
lret
and
mov
add
loopne
arpl
xchg
mov
push
push
xchg
aas
cmp
xor
hlt
jle
adc
cs
iret
cmc
lock
rcrb
sub
cs
lret
icebp
cmpsb
pop
lret
outsb
pusha
addr16
orl
and
xlat
mov
testb
into
test
adc
inc
xor
lea
or
push
lret
dec
movsl
clc
fstpl
push
cli
inc
mov
in
xor
adc
test
cmc
aam
mov
cmp
psubq
xlat
sbb
cmovb
cmp
scas
jae
inc
mov
or
cli
pop
mov
dec
add
jns
mov
mov
test
mov
arpl
sub
lds
les
shrb
jno
aaa
and
jge
gs
imul
fs
hlt
clc
adc
add
mov
push
test
adc
mov
sub
test
scas
xlat
xchg
shll
cmp
cld
xchg
outsl
and
xor
fs
add
das
enter
lret
xchg
mov
scas
scas
lret
int
sarl
jnp
mov
pop
stos
call
test
or
jae
cmp
jl
pop
pusha
adc
out
jge
mov
mov
and
fs
xor
repnz
adc
sbb
xchg
leave
and
das
mov
adc
mov
and
sahf
in
cltd
enter
scas
pop
sti
dec
ja
dec
orb
imul
inc
mov
test
ficoms
loopne
xchg
es
cmp
add
cmp
divb
xor
pop
addr16
cmp
nop
sub
xchg
cli
repz
js
cwtl
data16
mov
pop
insl
mov
xchg
pop
jg
out
mov
sub
mov
jecxz
pop
xor
push
out
imul
xor
sub
adc
bound
mov
loope
xchg
and
loope
sbb
enter
push
sbb
subb
jge
pop
imul
repnz
cltd
lock
adc
inc
std
mov
jge
pop
stos
and
push
sub
arpl
mov
dec
lcall
icebp
adc
xor
mov
rcll
dec
stos
cmp
lea
stc
add
sbb
stos
sub
data16
cmpsl
cwtl
lahf
movzbl
adc
shll
mov
inc
and
stos
xchg
jg
add
xchg
push
test
pop
inc
out
cmp
push
je
pop
jnp
jns
in
sub
clc
push
push
ds
add
mov
pop
sahf
sbb
mov
scas
insb
jecxz
aas
scas
repnz
pop
test
mov
std
add
cmp
and
lret
aas
test
xor
adc
leave
jno
xor
xchg
mov
jge
push
aad
or
sub
push
out
pop
pop
fistps
repz
xchg
jno
jmp
mov
repz
cld
loopne
and
leave
xor
inc
cmp
cmc
out
out
call
stc
push
cmpsb
dec
pop
xchg
popa
xor
into
loopne
into
xor
and
bound
jecxz
mov
xor
lods
sbb
cmp
mov
inc
pop
and
inc
cmp
scas
imul
pushf
out
and
aas
xor
fmull
std
clc
jecxz
xchg
pop
cltd
jno
std
mulb
jae
and
repz
loop
adc
add
cmp
add
xchg
sahf
push
or
lods
adc
mov
outsb
inc
mov
sub
sub
jg
xchg
sbb
aas
test
notl
insl
loopne
cmp
mov
movsl
outsl
jo
ret
push
sbb
loope
nop
daa
mov
push
or
jne
sahf
sbb
ljmp
pop
ss
cmp
leave
fmuls
inc
fcmovbe
rolb
cmpsl
xchg
mov
push
jo
cmp
fsubrl
pop
das
int
imul
mov
sbb
icebp
out
ret
mov
add
dec
sub
pop
mov
subl
and
aas
leave
jle
add
aad
test
xor
outsl
cmp
and
pop
aam
mov
cmp
mov
mov
enter
repz
jns
and
mov
sti
jecxz
mov
imul
and
inc
dec
mov
jae
mulb
jl
adc
push
inc
lods
out
sbb
add
rol
xchg
and
popa
sbbb
insb
sub
stos
fnstcw
mov
xchg
es
imul
hlt
mov
mov
and
imul
pop
in
add
imul
push
and
rcr
fiadds
mov
jbe
inc
addr16
mov
cmpsb
rcrl
cmp
notl
daa
into
adcb
test
cmc
lahf
fdivl
icebp
aas
jle
xchg
jnp
lahf
fwait
mov
lds
cmp
add
dec
hlt
fidivl
into
inc
std
add
loopne
inc
dec
push
cmp
push
fisubl
inc
mov
jo
jl
sub
fdivr
mov
out
sbb
and
mov
jle
fs
dec
insb
or
and
pop
pop
mov
test
cmp
lods
xor
mov
shl
data16
inc
add
fwait
or
pop
inc
ds
cmp
fadds
xor
stos
mov
mov
xlat
lods
sbb
in
or
idiv
in
push
mov
in
ljmp
inc
sbb
jns
scas
cmp
cmp
dec
lods
xor
pop
xor
jnp
loope
nop
rcr
cmp
sub
jbe
ljmp
ja
mov
push
jge
push
and
pushl
inc
inc
jl
je
adc
repnz
push
pushf
push
xchg
inc
cltd
pop
xchg
cmpsl
push
cltd
cli
sbb
divl
mov
mov
xchg
dec
mov
push
inc
mov
pop
mov
inc
dec
test
jp
dec
scas
mov
mov
pop
enter
dec
xchg
sbb
fcmovne
pop
dec
xchg
dec
repz
call
cmpsb
shrl
jg
and
mov
inc
push
stos
add
push
stos
dec
in
add
dec
xchg
adc
jmp
xlat
mov
jnp
mov
xchg
cld
popa
jbe
mov
push
dec
cli
js
dec
call
mov
pop
cmp
pop
xor
sub
dec
push
pop
push
sub
jg
mov
pop
dec
rclb
in
jo
cld
xor
std
sbb
push
loope
pop
sbb
add
jne
jbe
sub
scas
std
mov
scas
pop
xor
jo
shll
push
iret
adc
mov
aas
jl
adc
jle
jge
pop
loopne
test
mov
imul
icebp
mov
mov
sub
mov
or
fs
insb
push
ror
sub
push
mov
cmp
mov
mov
fistl
jo
and
js
out
mov
push
jns
dec
jp
and
add
ss
mov
sub
push
inc
or
mov
push
insb
push
insb
jo
out
jno
dec
lock
mov
nop
mov
in
cmp
repnz
push
cwtl
jnp
test
or
test
int3
ss
xor
mov
aaa
imul
xchg
mov
cmp
pusha
or
add
addr16
mov
ficoms
inc
push
mov
cmp
add
jmp
cmc
orl
popa
sti
sbb
out
cmpsl
inc
dec
sbb
rcr
xchg
mov
sahf
shll
mov
pop
fsubrs
mov
lds
imul
and
mov
adc
repz
ret
push
mov
mov
movsl
mov
dec
in
fstpt
mov
mov
inc
cmp
jl
inc
dec
in
in
mov
sbb
loop
xchg
dec
lret
lret
mov
cmp
adc
lds
xor
out
lret
push
jmp
jle
or
adc
lahf
jno
mov
or
dec
inc
stos
iret
xor
mov
cmpsl
adc
and
fwait
cmp
mov
scas
std
test
and
or
mov
adc
xchg
dec
xchg
lea
dec
cwtl
movsb
mov
rcrl
mov
out
mov
inc
pop
sbb
test
mov
inc
out
add
mov
fidivrl
mov
faddl
pusha
add
sub
inc
xor
int3
push
cmc
ret
ficomps
shrb
push
cmovle
inc
pop
add
adc
ret
arpl
mov
loop
popa
pop
ret
sub
sbb
push
cli
mov
mov
lds
or
pop
sub
dec
mov
loopne
or
and
ljmp
lcall
mov
scas
mov
and
mov
mov
mov
bound
mov
push
out
mov
aaa
je
or
ret
in
insb
jg
mov
movsl
out
mov
fstpl
dec
cmp
or
rcrb
jns
push
adc
mov
jmp
mov
fs
jg
adc
stos
icebp
mov
add
shl
sub
test
nop
std
lahf
test
sbb
mov
aaa
repz
scas
dec
mov
inc
outsl
sbbl
out
ss
out
sub
dec
inc
lea
icebp
lds
stc
xlat
cmp
fsts
pop
pop
sub
ljmp
shlb
sbb
dec
in
rol
sbb
push
cs
fsubrl
sbb
lock
pop
lret
and
xor
stos
cmp
leave
es
cmp
jecxz
adc
ja
aad
enter
fstl
push
push
pop
or
add
or
pop
clc
jbe
mov
shlb
test
in
in
std
out
lret
lea
sub
inc
mov
addr16
lea
bound
cmp
rcl
nop
mov
mov
jmp
outsl
ja
add
mov
aad
mov
addr16
push
push
scas
xchg
dec
jmp
mov
sub
fs
xor
mov
fmull
xor
ret
xor
mov
orb
jns
pop
in
xchg
leave
mov
or
mov
cmp
in
push
loopne
jo
notl
in
add
pop
cs
test
sub
jl
add
xor
dec
cltd
jno
inc
idiv
pop
sub
in
jp
sti
fnstcw
or
mov
mov
ret
scas
sub
cmp
fiaddl
flds
std
xor
cs
mov
add
adc
and
subl
fistl
xor
arpl
push
mov
std
ret
das
sub
sub
es
mov
mov
loope
mov
jecxz
roll
inc
bound
insl
sub
mov
arpl
jno
mov
scas
lock
and
jae
add
ss
fstpt
push
jne
outsl
idivl
xchg
ds
ja
inc
push
aam
mov
sub
cmpsl
hlt
hlt
xchg
loopne
cmc
xchg
adc
aad
xchg
dec
sub
in
cs
dec
test
dec
or
push
sbb
pop
push
adc
jb
divl
mov
cmp
mov
in
stos
inc
mov
adc
nop
xchg
arpl
mov
mov
jg
divl
inc
icebp
push
adc
test
cmp
imul
lds
fistpl
icebp
pop
pushf
out
aam
ss
push
adc
jno
pop
mov
mov
pop
sub
pop
dec
mov
aam
out
mov
int3
jge
mov
pop
sbb
dec
xchg
cmp
dec
cmc
xchg
inc
jno
or
lcall
xchg
and
mov
roll
sbb
add
sti
push
xor
out
or
roll
jmp
mov
adc
inc
jl
dec
or
or
or
adc
arpl
shlb
pop
stos
jne
out
xbegin
jne
mov
push
inc
pop
or
lahf
mov
sti
leave
xchg
mov
xchg
das
es
or
sbb
stos
jle
xor
xor
es
inc
push
vcvtsd2ss
lds
and
fistpl
or
mov
xor
xchg
push
xor
mov
movsb
pop
mov
xchg
mov
xor
mov
adc
js
lds
sahf
push
and
fdivrp
xchg
xor
lret
pop
mov
sbb
pop
cmp
adc
cmp
push
mov
fdivrs
les
sub
add
inc
daa
out
aas
dec
bound
ds
sbb
sub
scas
add
mov
loope
idiv
mov
xor
adc
pop
xchg
mov
sti
cmpsb
imul
jae
nop
add
jge
lds
cmp
pushl
dec
stc
dec
icebp
xchg
sub
adc
inc
sbb
push
and
mov
adc
mov
xor
das
fistps
test
sub
dec
jl
jmp
cmp
scas
dec
mov
ljmp
add
sbb
mov
sahf
imul
pop
mov
ret
int
aad
mov
testl
dec
xchg
mov
into
adc
loop
xor
sbb
test
or
mov
icebp
bndstx
es
sub
push
je
sbb
imul
dec
into
je
mov
cmp
dec
call
cmp
dec
outsb
fsubl
sahf
push
insl
test
cmpsl
sbbl
stos
in
and
add
inc
lock
cmp
add
push
sub
in
insl
or
pop
sbb
push
pop
sbb
enter
cmp
mov
inc
jmp
mov
dec
ss
mov
icebp
push
clc
ss
sbb
dec
push
cmpsb
mov
les
xor
insl
and
ret
xor
jmp
push
and
movsb
sahf
sti
lcall
dec
inc
inc
and
lcall
test
mov
fldcw
inc
in
xor
xor
push
shlb
mov
adc
sbb
adc
iret
inc
mov
push
ja
repz
adc
in
sarl
arpl
pusha
sub
subb
movsl
pop
fidivs
push
mov
cmpsb
xchg
cli
jmp
cmp
xor
xlat
adc
int
add
mov
fs
test
std
pop
add
dec
dec
daa
xchg
fiaddl
aam
insb
mov
fsubs
cmp
addr16
or
lods
icebp
in
jge
push
mov
imul
xchg
lret
mov
pop
push
fcoml
call
push
loope
imul
or
insb
icebp
cld
sub
cmpsb
sub
rorb
push
jg
dec
les
and
mov
pop
cmpsb
lods
sbb
mov
and
jg
cli
iret
xor
stos
mov
cmp
insl
sarb
pusha
ss
fwait
out
imul
jge
ret
outsl
mov
xor
pushf
push
imul
and
jb
ja
mov
mov
movsl
popf
lret
xchg
dec
sahf
subl
push
sub
dec
pop
test
sub
ret
cmp
xadd
adcl
sbb
sub
add
mov
es
lret
sbbl
inc
sbb
inc
xor
pusha
fcoms
cmpsl
adc
or
xorb
movsl
mov
cmp
mov
js
out
mov
shr
jbe
imul
hlt
repz
and
test
push
pop
sub
adc
ljmp
or
shlb
test
jbe
addr16
xor
xchg
pop
div
xchg
add
pop
pop
xor
test
cmp
jge
xchg
and
xchg
aas
push
sbb
es
ret
pop
out
or
mov
repnz
pop
lcall
inc
mov
mov
adc
push
add
lsl
push
and
out
addr16
mov
pop
pop
inc
jge
in
xchg
loop
dec
loopne
js
mov
jl
cmpb
in
inc
jle
js
mov
jae
cld
push
movsl
add
les
sbb
shlb
inc
out
mov
in
lods
push
add
outsb
push
jno
xor
adc
or
nop
lret
and
popf
fmuls
xor
pop
push
stc
push
ftst
dec
dec
dec
lret
jbe
cld
pop
cli
mov
pop
sub
sahf
mov
cmc
fstps
lods
scas
pusha
in
mov
fwait
repnz
sub
xchg
daa
or
mov
clc
aam
pop
jp
aam
push
lcall
shlb
imul
mov
push
and
cmc
insl
add
inc
popf
and
dec
paddb
sbb
mov
mov
xchg
dec
jb
iret
mov
xchg
mov
lea
cmp
icebp
fisttps
xor
jg
es
test
push
and
cmp
xchg
push
lret
in
xchg
cmc
out
lcall
ja
fidivrl
cmp
push
je
mov
xchg
xchg
jl
daa
push
pop
out
lock
sbb
lahf
xor
bound
cmpsl
cli
clc
and
jmp
mov
je
lods
sti
shl
jns
jg
or
fnstcw
cmp
ds
xor
cmp
enter
outsl
cmc
clc
or
mov
mov
mov
fisubl
cmpsl
fistps
rcrl
orb
push
cmp
loope
cmp
mulb
test
pushf
pusha
jne
outsb
mov
addr16
sbb
pop
mov
xchg
fnstenv
mov
sbb
pop
aad
test
clc
gs
fistl
fcmovnb
push
int
imull
incb
xlat
mov
decb
mov
ss
jmp
pop
or
push
leave
pop
jge
inc
push
popf
sbb
xlat
xor
cmp
mov
shr
loop
test
pop
xchg
cld
push
hlt
je
cmp
xorb
popa
ja
sbb
addr16
mov
mov
int3
cmpsb
inc
sbbl
add
mov
stc
fisttpll
mov
clc
push
jle
mov
cmp
push
jl
push
xchg
pop
sbb
int
pop
dec
mov
repz
cltd
mov
cmpsl
jns
fs
lcall
cmp
mov
jne
loop
sbb
movsb
lds
inc
sbb
sub
in
cmp
mov
push
jle
cmp
mov
xor
push
lret
imul
and
sub
mov
pop
in
ret
xchg
jmp
jle
icebp
jns
cwtd
xchg
pop
scas
stos
sahf
mov
and
int3
mov
jo
lahf
out
inc
icebp
mov
push
sub
ror
adc
lock
cld
stos
xor
xchg
dec
in
jmp
sbb
fcmovu
leave
adcl
shrb
push
jl
push
fldt
lods
cmp
repz
push
add
icebp
les
inc
mov
shlb
shl
popa
mov
add
lret
adc
ljmp
outsb
jl
push
push
pop
xchg
das
addl
sub
push
test
roll
push
jge
xorl
in
adc
xorl
stos
or
icebp
dec
cbtw
mov
pop
daa
dec
ret
lods
push
or
loope
or
fisttpl
xchg
pop
mov
and
xchg
stc
enter
insl
mov
aam
xor
mov
lods
std
loopne
lahf
ds
mov
jb
leave
push
icebp
lock
shlb
xor
add
mov
divl
das
out
mov
and
jmp
roll
and
or
adc
popf
lret
andb
fistpll
lcall
lods
dec
pop
xchg
pusha
fs
insb
sbb
cmp
mov
xchg
and
xor
insl
movsl
outsb
adc
push
jbe
flds
mov
out
fadd
push
xlat
mov
jmp
jns
mov
lods
dec
fwait
and
ja
in
mov
frstor
ret
jl
popf
adc
sub
in
js
xlat
fimuls
stos
cmp
ja
sub
or
mov
sbb
dec
imul
jo
outsl
xor
push
dec
rolb
lock
sbb
jbe
aas
insb
and
jmp
mov
xchg
mov
or
cmp
and
fs
add
cwtl
inc
aaa
fimuls
nop
sarb
adc
es
stc
push
mov
inc
sarb
cmpsl
sbb
push
cmp
xor
hlt
mov
push
or
out
shrl
or
sub
push
push
mov
push
in
iret
dec
and
scas
ljmp
aas
data16
mov
cmp
xchg
lret
shrd
sbb
jae
adc
rorl
inc
and
xorl
inc
ds
mov
sbb
in
jle
xor
xor
js
repnz
push
neg
cmpsb
or
xor
cmp
lds
dec
add
addb
fists
mov
sbb
scas
push
adc
lret
mov
out
ret
dec
out
sbbl
int
movsb
dec
cmp
mov
stos
jne
out
lods
adc
and
jg
sbbl
lcall
jbe
pop
mov
dec
xchg
sub
aas
sarb
mov
mov
jle
xlat
pop
add
stos
call
mov
or
popf
imul
add
shrl
inc
dec
gs
inc
pop
test
push
mov
pop
sbb
mov
mov
sahf
mov
insb
add
ljmp
push
bound
mov
adc
push
sbb
pop
sbb
inc
into
int3
sarb
movsb
and
cwtl
psubsb
aaa
in
mov
imul
adc
sub
popa
and
mov
and
mov
movsb
jle
push
cwtl
outsl
cmp
mov
xor
imul
outsb
imul
or
inc
stos
mov
dec
arpl
cs
repnz
shll
dec
mov
fbstp
mov
adc
or
cld
pop
cmp
mov
inc
pop
pop
cld
shlb
push
dec
leave
push
cltd
outsl
xor
push
leave
sbb
jecxz
icebp
mov
push
lahf
addr16
mov
in
or
in
sub
imul
pushf
dec
clc
ss
jg
addr16
in
lods
push
in
or
sbb
jno
pop
fbstp
cmp
sub
pop
mov
cmpsl
inc
loopne
popa
lahf
das
adc
loope
faddl
loopne
cltd
add
adc
sub
mov
add
mov
addr16
sub
adc
dec
push
adc
add
cmpl
scas
mov
dec
out
jnp
cmc
fs
sub
aaa
jbe
mov
inc
sbb
loope
aaa
ja
lcall
insl
xchg
inc
xchg
xor
inc
cmp
adc
xchg
sub
sbb
push
inc
mov
inc
xor
xchg
lret
mov
and
cld
mov
arpl
into
cs
ja
or
ja
dec
mov
scas
xchg
jmp
pop
ja
enter
mov
cmpsl
inc
xor
out
int3
ret
gs
ja
ja
and
stos
mov
push
sub
cs
shll
cmp
daa
arpl
sarb
adc
fwait
push
adc
adcl
mov
and
pop
mov
pop
mov
fisttpll
mov
xchg
addb
pop
add
int
dec
repnz
push
and
and
ds
sub
inc
jl
mov
bound
adcl
sahf
cmp
fnstenv
push
inc
lods
es
leave
push
fmull
loop
aad
sbb
or
movsb
push
aaa
xchg
add
test
jb
loope
and
cmp
in
cmp
mov
sub
jno
mov
jmp
pop
sahf
adc
out
or
xor
icebp
loop
arpl
sbb
dec
mov
enter
and
pusha
loop
or
inc
test
jp
xorl
push
xor
sarl
orl
inc
shll
fimull
jae
cs
jb
mov
xchg
ja
sbb
xchg
es
sbb
cmpsb
aaa
inc
nop
mov
cwtl
daa
popa
sub
testb
mov
and
pop
sbb
daa
aas
inc
test
push
repnz
or
push
punpcklwd
sub
xorb
hlt
mov
pop
sbb
inc
adc
pop
and
add
rcll
jae
dec
lods
or
daa
rorl
cmp
add
jecxz
pop
shll
movsl
jecxz
lret
xor
adc
aad
add
std
pop
adc
inc
sub
sub
cld
fistpl
mov
xchg
out
out
dec
inc
outsb
bound
mov
repnz
xor
arpl
xor
and
popa
sti
cmpsb
ja
imul
hlt
divb
repz
sbb
loope
xchg
test
dec
push
sbb
test
rcrl
out
jl
ljmp
dec
fwait
mov
jae
or
outsl
mov
mov
mov
xor
cwtl
sbb
pop
mov
jmp
pop
ficoms
sbb
lret
sub
mov
subl
jnp
or
push
mov
ret
xchg
outsl
fsubrs
xchg
push
cli
push
sub
xorb
mov
roll
repz
ja
inc
bnd
or
xchg
add
sub
cmc
xchg
sbb
ss
cmova
pop
js
sbb
test
int3
mov
pop
xlat
or
mov
mov
xor
mov
pop
jl
lods
mov
mov
clc
into
cmp
int
out
cmpsl
sub
and
popf
jecxz
pop
mov
loopne
xchg
jg
fisttps
insl
aam
mov
test
nop
pusha
pop
repnz
lahf
xor
or
and
inc
mov
fdiv
test
inc
jno
call
or
cli
daa
mov
rcrl
ret
je
mov
fdivs
adc
jnp
sbb
jmp
int3
das
xchg
ja
push
mov
xchg
shll
mov
repz
das
cmp
jp
cli
mov
popa
lret
push
subb
jb
test
scas
jle
push
mov
or
and
inc
in
movb
aam
stos
jns
stos
sub
dec
leave
mov
xor
pop
popf
sbb
scas
adc
jne
and
ljmp
pop
and
mov
popa
or
lret
mov
sbb
push
cwtl
cli
pushl
adc
ret
and
out
push
xchg
test
mov
enter
and
arpl
fsubp
aas
rcl
stc
lods
sub
xchg
or
shll
mov
mov
sbb
fdivl
adc
mov
adc
lahf
les
cli
jne
cli
sub
sub
imul
pop
sahf
add
adc
adc
inc
xchg
movsl
ficoms
or
cmp
and
pop
sbb
mov
dec
mov
push
add
and
call
or
in
xor
add
sbb
jne
orl
inc
fistpll
xchg
sbb
xchg
lahf
jae
sbb
add
enter
mov
mov
fidivrs
inc
dec
adc
frstor
shl
mov
xor
jns
aad
fcmovnb
ret
les
dec
cmp
sub
cs
sub
inc
cmp
pop
dec
in
mov
icebp
pop
lcall
inc
fildl
adc
cmp
mov
mov
add
jecxz
push
loop
movsl
lahf
inc
cmp
jb
cmp
rclb
inc
rclb
xchg
dec
cmc
xchg
inc
push
mov
mov
jno
mov
in
in
test
popf
push
std
fdivrs
mov
jne
out
add
lret
mov
sbb
imul
xchg
lods
sub
or
inc
mov
stos
lds
les
mov
inc
das
and
fnsave
out
icebp
repnz
clc
xor
mov
push
adc
sbb
xor
jge
scas
adc
in
mov
pusha
mov
add
sti
gs
pop
inc
jo
xlat
push
es
and
stos
mov
std
jnp
jle
repnz
ja
test
and
adc
imul
aam
push
inc
addl
fwait
mov
and
out
test
addr16
sbb
in
push
or
cmp
sub
sahf
dec
mov
dec
push
clc
adc
ret
jp
loope
fcom
push
pop
cltd
mov
rcrb
shlb
push
jb
test
xor
scas
mov
xchg
and
xor
sub
pop
repz
push
dec
sbb
ror
das
lods
jbe
pop
std
xchg
cli
xchg
insb
testl
dec
add
and
dec
ss
adc
aam
dec
popl
mov
je
rcll
iret
popf
into
add
shrl
subb
stos
sbb
mov
pop
fdivrs
icebp
cmp
mov
inc
sti
xchg
lds
sub
fistps
inc
es
sbb
sbb
movsl
mov
jle
leave
enter
cli
jmp
jmp
inc
adc
mov
insl
ja
or
sub
adc
xchg
mov
jae
filds
out
xor
jns
cmp
int
sarb
mov
xchg
adc
leave
jge
fisubl
jmp
cwtl
xor
sti
lret
xchg
push
xchg
int
jne
add
add
loope
adc
xchg
sbb
pop
jo
mov
imul
lea
pop
and
jbe
xchg
js
into
sbb
lcall
jne
rorl
jmp
popa
outsb
pop
jne
repz
mov
dec
inc
pop
hlt
xor
xor
mov
fucom
push
dec
mov
insl
lahf
ret
out
xor
inc
cmp
xchg
ja
pop
out
ret
mov
cmp
sbb
in
add
dec
sub
pusha
clc
mov
int
and
aam
inc
icebp
dec
outsl
or
loopne
hlt
xchg
and
mov
dec
mov
sbbl
testb
mov
xchg
inc
xor
adc
cmpsl
sarl
add
insb
inc
pop
ret
and
xor
jge
in
xchg
pop
scas
outsb
jl
cmpl
mov
ret
jo
xor
ds
stos
lret
xor
jg
pop
cltd
ljmp
xchg
jns
sub
push
cmp
mov
or
adcl
fisubs
movsb
in
cmp
in
sbb
and
sub
add
scas
inc
int
dec
cmp
ffreep
das
cld
push
add
add
or
fidivrs
mov
out
pop
in
scas
pop
iret
rcrl
mov
sub
pusha
inc
test
aad
mov
testb
cmc
add
or
adc
sub
out
cmp
clc
sub
call
clc
push
aam
sahf
stos
xchg
fisttpll
push
daa
mov
xchg
mov
cmp
xchg
mov
inc
xlat
add
mov
ret
jae
lock
lds
aam
inc
mov
pop
xchg
lret
mov
mov
jne
xchg
outsl
scas
sbb
hlt
rcll
gs
ficoms
lret
inc
add
mov
xchg
pop
fstps
std
cmp
mov
bound
mov
push
jl
mov
and
dec
mov
jecxz
stos
jmp
int3
adc
gs
mov
es
in
fcmovnu
and
loop
pushf
xchg
in
sbb
dec
push
xorl
aas
dec
adc
inc
and
test
jo
dec
bound
or
dec
enter
adc
xor
adcl
adc
repz
stos
daa
ret
add
cs
loopne
dec
imul
cmpsb
mov
pushf
push
sbb
jo
add
daa
scas
mov
inc
push
fists
sti
adc
xorl
push
aas
adc
pop
push
popf
cld
jno
mov
cmp
mov
mov
xchg
pop
pop
cmp
scas
lea
push
outsl
roll
scas
leave
test
and
mov
jmp
and
jle
jl
imul
shrb
rcll
jle
xchg
imul
sbb
fld
sub
scas
repz
int
mov
push
ds
mov
jl
jmp
push
loopne
mov
test
into
and
movsl
popf
pop
test
jmp
cmp
andl
bound
lahf
dec
sti
data16
xchg
loop
enter
out
test
orb
pop
adc
add
fdivl
sub
or
ljmp
adc
dec
cmpsb
inc
cwtl
dec
rol
sub
dec
std
dec
adc
pop
popa
out
mov
push
arpl
sar
insb
mov
pop
or
sub
jp
mov
cmpps
adc
or
cmc
sub
cmpsl
xlat
mov
cli
stos
sub
mov
leave
jp
mov
xor
testl
aad
jne
or
jo
lds
xchg
sub
ljmp
in
push
in
icebp
dec
aas
es
mov
pop
pop
stos
or
jl
rorl
xor
or
jp
into
cld
mov
mov
mov
stos
add
pop
xor
xchg
add
and
lcall
push
jp
add
add
adc
xor
mov
pusha
sub
call
inc
lods
cwtl
inc
or
adc
addb
jmp
repnz
adc
sub
pop
jno
je
or
dec
mov
fildll
push
mov
mov
dec
jmp
mov
jne
push
inc
pushf
jae
jmp
or
or
jecxz
dec
icebp
and
test
int3
pop
dec
movsb
leave
fs
dec
xchg
inc
imul
xchg
or
sbb
ret
mov
pop
push
xor
rorl
loopne
mov
add
pushf
ljmp
pop
adc
fistps
clc
mov
mov
add
cmp
dec
bound
push
test
movsl
dec
or
cwtl
xor
xor
xchg
call
icebp
add
mov
js
sbb
adc
xor
xor
mov
int3
or
ljmp
shlb
movsl
pop
xchg
push
repz
cmpsb
mov
pop
out
dec
imul
push
popa
outsb
arpl
adc
mov
pop
ret
aam
xchg
ds
cmp
xor
sub
imul
imul
xchg
imul
daa
push
add
xor
outsl
mov
add
cmp
jb
dec
mov
dec
fimuls
inc
sbb
or
ja
sbb
in
sub
out
and
or
movzbl
push
sub
pushf
sub
fstps
sahf
dec
arpl
xchg
cmc
push
mov
rorl
in
xchg
push
popa
jno
lock
cmpsb
repnz
adc
sub
jae
push
lock
cmovg
ret
pop
cmp
icebp
or
insb
jl
sub
add
sti
sub
or
mov
sahf
jb
inc
std
push
lahf
xor
ljmp
jecxz
aas
mov
push
xchg
into
cmp
mov
xchg
pop
push
cld
in
call
fxch
sti
sbb
xor
mov
fistpl
aad
into
imul
add
mov
xor
jns
push
cmpsl
dec
or
outsb
pop
sbb
mov
push
stos
popf
nop
repz
add
scas
xchg
cwtl
mov
sbb
and
pop
imul
adc
jns
push
or
pushf
inc
pusha
cmp
cmpsb
stos
mov
adc
push
popa
pop
movsl
jle
lret
das
pop
add
push
repz
shl
pushf
out
popf
loopne
jae
shl
mov
sub
and
cmp
inc
mov
ret
jae
out
xchg
push
xchg
idivl
ret
out
sbb
ds
push
sbb
cs
and
int
push
inc
out
aam
gs
push
cltd
gs
lahf
sub
xlat
lock
sub
cmpsb
or
xchg
mov
adc
xchg
dec
sbb
mov
push
and
fs
cmp
int3
sti
lods
inc
filds
inc
enter
mov
into
aad
testl
sub
mov
andb
cs
into
mov
cli
mov
pushf
mov
xchg
mov
sbb
jmp
and
sbbl
shll
mov
xchg
inc
outsb
push
inc
pop
in
test
lret
and
test
loop
push
or
mov
aam
in
pop
rolb
lds
adc
jbe
pop
jecxz
adc
std
jmp
and
jp
push
adc
pop
in
enter
loope
adc
mov
sbb
imul
add
outsl
rcl
cmpl
push
xor
mov
add
xchg
call
pop
sahf
shr
mov
jmp
jge
pop
test
jg
cmc
mov
das
test
xor
fnstcw
jle
jae
movsl
xor
mov
adc
adc
adc
push
mov
xor
xlat
daa
add
movsb
stos
add
out
test
add
xchg
aas
sub
test
jae
cmpsb
lock
adc
scas
jp
dec
dec
lea
leave
lods
arpl
xchg
pop
xor
xchg
pop
add
xchg
and
sub
int
jl
push
scas
sbb
in
cmpsl
push
and
test
xchg
inc
outsb
cld
xchg
jp
or
stos
sub
stos
or
xchg
adc
ljmp
inc
add
mov
shlw
and
cmp
js
jmp
and
pop
outsl
inc
daa
pop
inc
adc
loop
mov
insl
rol
pop
inc
mov
xor
dec
and
aad
aas
adc
jle
in
xchg
loope
out
dec
cmp
fsubs
out
scas
enter
aad
jns
xchg
adc
push
daa
aam
mov
pusha
fcompl
pop
dec
popa
pop
mov
leave
nop
inc
xchg
insl
outsl
push
push
inc
lret
rcll
mov
sar
inc
in
xor
mov
sub
jns
mov
push
repz
negl
mov
push
xor
cmpsb
push
in
dec
cmp
jmp
jg
mov
push
out
cs
mov
jg
jae
test
lods
ret
jl
push
cmp
sub
repz
enter
xor
sbb
sbb
ret
cli
iret
xor
dec
and
and
xchg
ds
jg
imul
push
or
test
lret
xor
icebp
aam
or
xchg
pop
lds
call
lock
mov
fisubs
cmp
ljmp
jo
pop
je
out
shl
cmp
cltd
mov
or
ret
loop
pushaw
sub
and
xchg
jp
inc
dec
jne
mov
xchg
and
enter
jns
and
and
pop
sbb
mov
cmp
cli
test
jae
cld
jb
aaa
xor
jae
sahf
sbb
mov
ja
mov
inc
in
in
push
movsb
xchg
imul
daa
int3
loop
nop
repz
popa
jns
dec
pushf
mov
cmpsl
inc
int
mov
jmp
bswap
popf
clc
fucom
ljmp
adc
sbb
cmpsl
pop
jmp
iret
jnp
inc
and
adc
shll
push
out
cmp
inc
inc
aaa
mov
arpl
jp
hlt
testb
out
cmc
test
int
les
dec
cltd
movsb
dec
cmpl
xchg
xchg
xor
shlb
clc
and
icebp
lods
data16
or
subl
jnp
inc
mov
push
mov
pop
adc
aad
xchg
cmpsl
push
test
xorl
mov
fwait
sbb
outsb
push
mov
cld
popf
push
clc
push
arpl
lahf
scas
int
in
jp
dec
xchg
dec
cmp
mov
pop
hlt
lahf
push
mov
sbb
cmp
hlt
xor
jne
add
mov
sahf
pop
adc
xchg
mov
ret
int3
jmp
shlb
clc
xlat
cmp
push
adc
add
test
and
add
mov
mov
add
push
pop
fs
push
xor
jb
test
stos
sti
out
lds
add
mov
cltd
int3
lds
mov
push
mov
movsl
xchg
imul
test
push
test
jo
mov
cltd
jo
inc
enter
ds
adc
xchg
rolw
out
xchg
jecxz
aas
aad
jae
mov
xchg
cltd
dec
or
mov
pop
push
int
scas
mov
stos
enter
js
int
pop
lcall
or
test
or
inc
ret
add
test
inc
dec
mov
insb
mov
test
test
repz
sbb
int3
idiv
enter
clc
cmp
inc
push
and
push
pop
push
leave
push
sti
pop
loope
mov
push
jmp
mov
and
xchg
hlt
outsb
inc
adc
in
lret
inc
mov
xor
sbb
shlb
imul
mov
and
test
bound
mov
jp
ret
or
xor
iret
mov
fs
idivl
push
inc
outsl
mov
dec
pop
push
jg
xor
and
iret
mov
jl
lahf
sub
lock
or
inc
cmpsl
xchg
jmp
mov
xchg
sbb
cmpsl
inc
dec
in
pop
jbe
jle
mov
xor
mov
add
or
mov
psubw
movl
mov
adc
add
lgs
ss
pop
fstsw
sub
in
fmul
xchg
adc
movl
add
lret
xor
jns
lods
mov
adc
or
push
les
dec
mov
sbb
dec
test
out
inc
out
push
pushf
ret
dec
mov
lods
push
stos
jp
jb
xchg
cmp
adc
jbe
sub
push
push
mov
in
xchg
mov
fiadds
iret
fimuls
pop
std
mov
jbe
loope
fs
fcompl
xor
inc
xchg
pop
scas
jp
inc
stos
adc
jle
into
and
ret
movsb
mov
inc
pop
mov
dec
mov
shlb
sbb
cld
mov
inc
cmp
in
xorl
aas
aas
xor
scas
adc
inc
sub
popl
ds
fstl
sbb
mov
inc
add
xchg
add
add
test
rclb
stos
cld
js
cmp
adc
dec
xchg
popa
stos
pushf
mov
dec
or
cli
outsb
int3
inc
movsl
mov
dec
out
sub
or
mov
movsb
cmc
cli
lods
adc
in
xorb
mov
scas
hlt
sub
mov
ret
add
xchg
push
sub
mov
xor
adc
ror
aam
or
gs
ret
stos
fldenv
jge
pop
mov
imul
or
test
or
adc
popa
jne
hlt
sub
push
mov
movsb
cld
addr16
xor
xchg
or
pop
xchg
mov
lods
ret
clc
lock
push
shl
je
shufps
xchg
jle
xor
push
mov
jno
lret
mov
mov
mov
stos
pop
lahf
jo
sar
xchg
push
inc
insb
out
dec
and
pop
ss
loope
ret
jp
lods
inc
add
sbb
jo
mov
hlt
fistl
xor
add
inc
mov
jb
jle
out
mov
lods
or
dec
fsubrl
inc
pop
mov
fldt
or
mov
fmulp
test
fldl
insb
out
xchg
subl
repnz
or
jns
mov
notl
inc
ret
mov
mov
cmp
cmp
sahf
icebp
imul
push
mov
aad
repz
pusha
orb
test
cmp
cs
cld
jle
dec
inc
jno
imul
mov
sbb
mov
aad
dec
fnstcw
xor
xor
outsb
or
sub
push
jno
imul
enter
sub
repnz
lock
push
pop
cmpsb
xchg
cld
sub
push
mov
xchg
mov
adc
push
imul
mov
jnp
adc
xor
movsl
or
popa
popa
cld
pop
sub
dec
mov
adc
mov
sbb
pop
jnp
push
or
lods
stc
rorl
shll
jmp
xchg
ds
repnz
nop
mov
xchg
ss
sbb
and
lahf
les
shl
push
test
adc
mov
sarb
clc
cmp
pushf
xor
jmp
mov
popa
mov
mov
roll
popf
adc
fsubrp
into
test
cld
adcl
sbb
icebp
into
stos
aam
mov
fs
bound
xor
push
outsb
push
sbb
add
add
dec
jmp
add
xchg
push
enter
subb
mov
sbb
rcrb
loope
mov
xor
cwtl
leave
cmp
leave
xor
lahf
movsl
je
pop
pop
inc
popf
mov
add
loope
fcoml
adc
mov
push
ret
sub
pop
inc
in
sbbb
mov
cltd
add
jmp
push
fistpll
inc
push
or
jo
das
nop
adc
xchg
or
mov
mov
jnp
push
in
and
push
out
lock
rolb
arpl
in
adc
bound
in
add
fdivr
add
pop
mov
dec
addb
shll
jae
mov
jecxz
lods
mov
repnz
out
jl
cltd
push
rcrb
sub
mov
lret
cld
and
push
xchg
movsl
pop
hlt
cmpsb
xor
outsb
lahf
sbb
ret
mov
das
shll
add
cmp
sub
movsl
jmp
out
cwtl
mov
aas
ja
int
out
fucomi
sub
pop
hlt
fstl
scas
pop
shll
xchg
fiadds
arpl
jle
mov
cmpsl
cwtl
roll
repz
movsb
or
mov
sahf
insb
sti
imul
and
push
add
push
adc
push
insb
dec
jb
sub
ljmp
insl
or
test
pusha
push
inc
lods
in
addr16
push
out
dec
movsb
mov
fcoms
scas
into
cmp
repz
push
sub
stos
sub
adc
jmp
push
ja
dec
aad
mov
mov
adc
jno
jge
ret
push
lods
add
sbb
push
xchg
push
xchg
inc
dec
addr16
fisubrl
or
test
loop
andb
sub
push
inc
mov
test
scas
or
addr16
mov
xor
mov
addr16
test
xchg
ret
or
xchg
mov
mov
in
call
cwtl
into
repz
xchg
cwtl
xchg
rcl
xchg
push
mov
push
pop
lods
ret
pop
mov
or
aam
sub
or
outsl
push
shl
mov
sbb
dec
mov
les
mov
ja
ret
push
cmp
mov
mov
and
pop
inc
sbbl
inc
aas
cmpsb
cmp
clc
push
push
loop
sbbb
in
outsl
add
out
pop
add
movsl
out
sbb
rcll
int
into
insb
dec
inc
pop
in
jnp
dec
mov
mov
pusha
push
mov
xor
inc
pop
and
push
in
sbb
les
insb
cmp
xchg
cmpsb
ret
rol
xor
push
pusha
out
iret
sahf
mov
pop
movsl
xor
test
jle
mov
aam
cmpsb
fdivs
jecxz
xor
addr16
add
cmpsl
xor
adc
je
xchg
sub
scas
add
pop
ret
cmc
sub
fistl
mov
adc
ret
mov
mov
inc
or
aaa
jno
mov
cltd
std
mov
jmp
mov
mov
jp
fucomip
enter
mov
cltd
or
leave
std
push
addr16
fdivr
mov
mov
ljmp
or
rcll
sahf
ljmp
add
or
cmp
insb
aas
mov
push
test
push
lcall
and
jbe
mov
shll
jae
rclb
mov
pushf
or
lea
jo
rcll
and
mov
sub
jl
mov
inc
sahf
daa
jp
or
add
lock
iret
xor
sbb
pop
xchg
in
or
xor
sub
mov
stos
and
rol
fstpt
shll
nop
push
cmpsl
cltd
stc
gs
inc
push
data16
jo
inc
mov
cmp
ja
shll
or
sub
add
push
inc
mov
sahf
xor
add
test
sub
gs
in
adc
xor
mov
sub
mov
bound
xchg
xor
sub
mov
orb
or
add
movsl
in
inc
xor
cmp
lods
mov
stos
ljmp
adc
pop
popa
imul
and
andl
sahf
adc
inc
or
pushf
sbb
mov
cmp
pop
cs
das
adc
out
mov
sahf
fisttpll
cmp
aam
xchg
es
inc
mov
cmp
ljmp
das
mov
xchg
mov
pop
ret
jnp
int
sbb
popa
icebp
xchg
pushf
fbld
out
repnz
popa
xor
sub
imul
arpl
pop
jbe
out
push
mov
xor
test
out
adc
stc
hlt
insl
daa
fadds
mov
nop
ffreep
aam
in
pop
xor
pop
adc
nop
sbb
dec
das
orl
push
push
push
popa
or
mov
inc
scas
insl
mov
aas
and
sbb
shll
xor
and
decl
mov
sbb
mov
inc
xlat
mov
or
lcall
mov
cld
dec
sbb
fwait
cmc
add
nop
inc
int3
lret
dec
inc
shl
push
shll
push
push
xchg
jl
movsb
stos
in
sbbl
test
mov
repnz
xchg
adc
rcrb
mov
inc
int
push
jae
xor
sahf
pushf
cmp
cmp
bound
imul
shlb
add
clc
pop
or
in
cltd
sub
int
iret
je
jle
rorl
jp
sbb
iret
inc
cltd
sbb
pushl
mov
xchg
mov
mov
inc
ret
outsb
fcoms
push
or
push
push
pop
out
or
shrb
mov
outsl
outsb
test
cmp
mov
mov
out
cli
xor
sub
jg
fsubs
mov
sarl
pop
flds
jnp
jle
lds
adc
sti
ret
out
push
hlt
push
push
xchg
xor
inc
rcll
push
pop
xchg
lock
inc
int
dec
dec
lods
icebp
jns
out
repz
mov
mov
pop
pop
and
mov
jae
mov
pop
adc
imul
mov
pop
sarb
jp
testb
out
ret
xor
dec
loope
fisubs
and
and
push
fimull
test
stos
pushf
nop
in
scas
cmpsb
push
cltd
or
ljmp
cmp
lea
xor
push
jnp
xor
fcompl
cmp
inc
das
pop
xchg
jno
inc
bound
cmp
add
xchg
mov
dec
add
aaa
vcvtpd2psy
addb
and
push
push
xchg
jae
repnz
xchg
xor
in
ret
negb
scas
pushf
loopne
pop
jmp
mov
aad
fdivl
aam
pop
and
sbb
xor
fiaddl
xor
test
dec
mov
test
mov
or
cmp
mov
dec
fidivrl
lea
jnp
pop
shl
loope
xchg
jno
xchg
das
cld
fimuls
pop
mov
pop
pop
loop
movsb
and
cwtl
add
jo
lods
cmc
xor
insb
lea
cli
mov
push
in
in
xor
stc
addr16
inc
cltd
xchg
inc
enter
add
shlb
add
sbb
imul
dec
mov
stos
cmpxchg
ds
mov
cs
test
sbb
call
cs
pop
or
dec
fwait
pop
cmp
pushf
lcall
je
out
adc
je
push
das
mov
push
push
push
mov
movsb
sub
popf
lods
mov
xchg
iret
inc
fidivl
xor
push
testb
xchg
xor
pop
sub
std
push
adc
addr16
or
int3
push
cmp
push
mov
call
adc
pop
lods
dec
enter
int3
dec
in
jle
int3
adc
sub
inc
movsl
cmp
add
push
cltd
adc
icebp
ja
sbb
imul
mov
xchg
test
cmc
inc
mov
sarb
inc
ret
mov
mov
rolb
jp
adc
mov
shlb
sub
int3
sub
test
icebp
movsb
jae
cld
pcmpeqw
sub
mov
jmp
stos
sbb
push
push
xchg
jmp
divb
push
adc
loop
mov
lcall
push
push
jecxz
sub
cwtl
cmpb
jno
add
rep
test
sarb
and
mov
mov
popf
xchg
shlb
ljmp
pop
cli
test
push
fimull
add
sub
mov
dec
test
xor
ljmp
aam
mov
dec
mov
fnstcw
stos
test
cmp
dec
push
jl
mov
das
jb
out
cmp
mov
enter
mov
cmp
scas
inc
adc
lret
lret
imul
or
adc
insl
xchg
or
xchg
add
jne
jb
aaa
mov
orl
adc
inc
xchg
cs
inc
mov
pop
cmp
cmp
sbb
and
scas
inc
cmp
mov
dec
arpl
push
xchg
fs
lock
lds
pop
adc
ret
xor
mov
ja
add
jns
cwtl
push
rclb
jne
sbb
sbb
leave
xor
test
std
adc
xchg
dec
rolb
jno
adc
xor
mov
int3
or
nop
or
test
pop
cmc
ljmp
adc
sti
test
sub
jbe
or
mov
in
in
jnp
fucomip
shrl
cmpsb
inc
adc
mov
xchg
xor
sub
mov
in
mov
shll
fistl
mov
test
mov
sbb
in
aad
int
and
sahf
inc
sub
mov
repz
jmp
jp
sbb
in
push
fidivrs
icebp
pop
inc
push
add
cmpsl
in
fcomip
dec
in
movsl
mov
dec
lods
mov
jg
inc
ret
aas
jl
jae
or
repnz
aas
and
xchg
scas
jae
rorl
xchg
movsb
jecxz,pt
adc
mov
mov
pop
fstps
jmp
cmp
fbld
add
je
pop
sbb
push
jg
notl
inc
xchg
pop
iret
insb
test
dec
test
or
xchg
inc
call
add
dec
and
lods
int3
push
cmp
jp
stc
mov
pushf
cmp
jne
insb
aad
jge
aaa
andb
in
jne
sbb
mov
out
push
notl
iret
nop
push
mov
xchg
arpl
xor
jbe
inc
add
push
add
sub
pushf
jbe
mov
add
popf
push
addb
andl
cmp
pop
in
sahf
int3
xor
ret
icebp
pop
popf
xlat
xchg
mov
sbb
mov
fidivs
lds
ss
outsl
jne
adc
push
fwait
jge
lods
in
test
repz
adc
xor
std
clc
int
or
fcmovnu
out
sub
pop
enter
mov
rolb
hlt
and
scas
stos
add
push
test
mov
inc
push
fstps
call
out
popf
inc
out
std
loopne
outsl
jl
stos
faddp
mov
fidivrs
xchg
push
and
mov
adc
and
lods
xor
xchg
movsl
testb
mov
aas
testb
js
push
adc
push
and
cmp
cmp
nop
inc
cmp
ret
add
icebp
mov
or
adcb
jl
xor
pop
adc
fdivrp
out
jne
mov
jle
mov
xlat
popf
sbb
les
repnz
pop
aam
aad
data16
dec
std
gs
sbbb
mov
fmull
stc
imul
jecxz
popf
int3
jno
sbb
cltd
push
add
fdivrs
rorl
andb
pop
repnz
xchg
jmp
cs
add
mov
dec
aad
cmpl
xchg
insb
inc
push
movsb
pop
iret
aas
or
and
dec
push
shll
nop
adc
jle
and
adc
fisttpl
sbb
mov
scas
or
dec
adc
or
js
sub
and
adc
or
int
sti
push
loop
cmp
cld
movsb
inc
rclb
and
ret
pop
lods
lea
sub
in
pop
lods
pop
faddl
inc
insb
adc
gs
stos
mov
aad
cmpsl
stc
mov
sbb
dec
xchg
adc
inc
jne
out
loopne
je
imul
fadds
add
mov
push
lcall
enter
jae
pop
gs
insb
rolb
pop
cwtl
subl
xchg
mov
loopne
add
sbb
lahf
imul
inc
mov
mov
ret
lahf
mov
push
sahf
loop
xchg
pop
cmpl
inc
outsb
mov
xor
ret
dec
movsb
push
pop
ret
jg
bound
xchg
insl
dec
jo
lret
iret
pop
incl
adc
jge
pop
dec
loope
push
sub
lds
and
js
scas
jo
add
or
xor
sbb
dec
jb
cmpsb
das
mov
adc
pop
popa
mov
lock
xchg
popa
and
push
bound
cs
and
femms
xchg
popf
add
jno
cli
sub
ja
dec
lahf
in
jns
or
movsb
movsb
cmp
jmp
mov
cmp
pop
jge
push
aad
jno
enter
push
popf
mov
mov
int3
fsubl
mov
mov
in
fcmovnu
xor
xchg
jmp
lds
mov
adc
sbb
xor
scas
inc
aad
dec
ror
in
adc
sarb
clc
mov
cwtl
jecxz
push
pop
in
dec
and
das
mov
jecxz
out
stos
sub
push
and
fidivl
call
stos
call
lret
sbbl
orl
cmpsb
fadds
inc
das
lret
lret
insl
inc
lock
mov
ja
test
clc
mov
cmpsl
push
popf
push
cmp
mov
out
lods
dec
in
dec
mov
xor
ja
ret
adc
std
daa
jmp
fiadds
pop
sti
pop
sbb
subl
cmp
mov
cmpsb
or
rcr
add
punpckhdq
mov
push
jbe
sub
xor
movsl
data16
outsb
jne
push
test
xlat
das
fsubrl
incb
fs
adc
cmpsb
jg
dec
ds
mov
sbb
inc
notb
add
xor
enter
jp
test
xchg
or
push
jg
pusha
xor
mov
jl
jge
dec
icebp
sub
pushf
and
xor
add
add
shrb
idivl
in
dec
jb
lods
mov
mov
and
jmp
gs
cmp
lds
mov
jge
daa
jb
imul
cli
int3
cmpsl
pop
data16
adcl
repnz
test
cmp
mov
inc
sbb
fisubrs
stos
lock
pop
mov
or
bt
into
orb
lcall
pop
add
mov
mov
sub
push
adc
push
test
push
xor
mov
loope
mov
cmp
and
lret
rolb
and
mov
jmp
cmp
mov
test
cmp
das
adc
cld
jle
jns
xchg
ret
rclb
enter
test
int
jmp
and
pushf
jns,pt
sbb
cld
cld
jge
std
fcomp
mov
xor
and
cmpsl
inc
fldenv
roll
repz
insl
jno
push
jns
daa
adc
xchg
je
cmp
and
inc
popf
std
cmp
fwait
enter
and
jbe
stos
lahf
fs
mov
sub
adc
fidivs
inc
pop
mov
daa
enter
pop
mov
mov
lahf
pop
xor
fbld
push
stos
lret
out
cmp
add
mov
fidivrl
insl
sub
mov
pusha
out
int
cmp
mov
stos
add
mov
push
les
jne
data16
add
ljmp
cltd
jl
inc
and
addr16
loopne
xor
sbb
ja
push
sahf
add
addr16
cwtl
std
mov
bnd
push
loope
fcmovne
pop
xchg
jl
push
fidivrl
dec
and
fiadds
lea
in
cmp
adc
mov
movsl
adc
decl
xchg
dec
je
dec
sub
addr16
jb
sbb
dec
jp
and
sahf
sub
into
pop
xor
mov
push
in
jns
int
cmpsl
dec
push
jno
lock
mov
pop
pop
out
add
cmp
jp
test
ljmp
lock
pop
jae
dec
in
push
adc
loope
push
dec
daa
rep
sub
std
out
imul
jl
lds
adc
cmp
loopne
and
mov
mov
add
push
pop
in
and
movsl
lock
dec
test
popf
test
mov
bound
lds
cmpsl
lret
loope
pop
movl
xor
out
std
sub
pop
push
or
shll
pop
nop
or
mov
test
ret
mov
cmp
mov
inc
fcos
cmp
sub
add
cltd
push
cmpsl
pop
cmp
push
mov
lock
lcall
shlb
jns
xor
lahf
lcall
cld
push
notl
sti
push
fucomip
scas
pop
pusha
iret
orl
add
push
test
in
cmp
lds
aad
call
cmp
lock
fnstenv
loop
or
cs
imul
xor
and
cmp
xor
push
roll
cmp
mov
mov
js
test
or
stc
lds
ljmp
cmp
rolb
call
sti
mov
adc
push
out
cli
dec
and
cmp
sub
sub
sbb
scas
mov
xchg
adc
and
not
mov
inc
insb
xorl
cld
cmpsb
sbbl
ljmp
addr16
js
das
fisubrs
add
cld
or
scas
test
stos
mov
mov
dec
sub
ja
mov
xor
das
call
pop
adc
inc
push
jns
pop
add
adc
mov
mov
add
xlat
jecxz
cltd
hlt
insl
jle
add
xchg
xchg
das
and
daa
push
dec
mov
enter
mov
add
and
sub
movzwl
data16
std
sbb
mov
lds
dec
aad
xorl
mov
pop
lcall
inc
scas
subb
gs
popf
inc
out
rcll
fcmovu
adc
loope
fimuls
repnz
sub
push
mov
or
movsl
or
fisubl
add
lods
push
popa
lock
or
std
and
mov
aaa
and
fadds
in
fimuls
pop
mov
nop
mov
inc
rclb
push
adc
jnp
out
ss
adc
ljmp
stos
sbb
sbbb
jg
mov
filds
push
pop
leave
inc
faddl
in
fwait
adc
nop
ret
js
pop
aas
jns,pt
jge
pop
ss
out
cld
sbb
shlb
gs
std
popf
imul
adc
fimull
xor
pop
sub
xchg
in
movsl
xor
push
cmpsl
fidivs
pushf
das
add
jb
mov
add
call
xchg
mov
or
mov
xchg
cmp
cmp
jp
fadd
sub
jl
jmp
loop
insl
lcall
int3
scas
push
push
ret
sbb
mov
lahf
or
and
sub
mov
addb
mov
stc
mov
gs
popa
jle
insl
push
rclb
pop
jecxz
es
fwait
cmp
sbb
scas
mov
pop
cmc
shlb
fistl
and
and
loope
jg
aad
adc
lcall
cwtl
xchg
mov
scas
sti
inc
cmp
stc
nop
xor
jns
pusha
mov
push
out
cmc
xchg
pop
or
in
std
and
int
or
push
cs
subb
mov
sbb
jmp
inc
jle
scas
nop
icebp
mov
pop
popa
out
in
gs
icebp
jecxz
shlb
movsl
icebp
push
loop
test
loope
inc
sub
add
dec
loope
loopne
sub
out
inc
stc
jmp
mov
int
popf
rcrb
mov
cmpl
cwtl
adc
push
dec
jno
cmp
inc
loope
jo
rclb
outsl
or
mov
xchg
mov
enter
pushf
mov
dec
sbb
cs
xchg
fadd
data16
xor
mov
stc
outsl
filds
and
movsb
sub
mov
je
repz
outsl
clc
cmc
xchg
clc
xor
jg
loope
lret
fcmovne
or
xchg
sub
aas
clc
aaa
or
shlb
xchg
cwtl
sub
xchg
pop
add
cli
dec
inc
out
push
pop
scas
in
loop
pop
push
js
loopne
cmp
mov
andb
out
sub
lcall
data16
mov
cmp
add
and
xchg
sbb
insl
jne
dec
xor
xchg
jns
pop
arpl
xchg
jl
xor
loopne
outsb
sarb
aaa
inc
std
jno
mov
ds
mov
adc
mov
xchg
popf
test
jmp
leave
jmp
mov
push
imul
add
sub
ljmp
pop
and
and
out
dec
mov
jbe
mov
divb
das
daa
aam
mov
push
out
sbb
push
movsl
pop
mov
loope
das
int
aam
pop
add
add
jo
cmp
xchg
lock
idiv
js
xchg
pop
xlat
xor
xchg
push
dec
pop
movsb
pop
mov
sbb
movsl
rclb
test
and
mov
ror
pop
cmp
mov
pop
jg
push
push
push
das
loope
jnp
and
sub
pop
stos
pop
stc
cmp
loopw
cmp
dec
pushf
push
sub
pop
jecxz
test
push
jp
ja
divl
out
pop
popf
mov
pop
ret
xchg
sub
push
loop
push
pop
push
push
dec
jge
repnz
push
dec
mov
pop
orb
popa
inc
cld
iret
cmc
addr16
and
sub
out
mov
ds
mov
inc
arpl
outsl
cmpsb
mov
add
lock
fisttps
xchg
popa
ret
aam
loopne
cli
sbb
push
xor
inc
jb
xor
mov
fimuls
rep
in
pop
push
xchg
dec
pop
mov
mov
push
xchg
popf
enter
pop
loopne
nop
mov
jo
mov
adc
movsl
mov
lods
mov
hlt
in
inc
and
jle
pop
and
lret
dec
insl
les
arpl
inc
mov
jg
dec
jecxz
jb
inc
jnp
mov
in
add
inc
jns
test
push
adc
push
xor
and
movsb
clc
les
jecxz
out
xor
fmuls
add
or
xor
addb
lods
mov
jg,pt
int3
mov
cwtl
outsl
mov
js
xor
mov
push
in
jmp
jl
clc
into
scas
pushf
daa
pop
mov
in
mov
adc
dec
pop
xchg
push
stos
sbb
cli
pop
mov
push
cmp
in
jae
aam
lret
push
das
pop
mov
sbb
xchg
push
and
sub
mov
fiaddl
mov
dec
jb
mov
repz
aad
push
dec
addl
cmpsl
pop
aaa
call
xor
push
mov
adc
push
shrb
xor
jecxz
sub
out
lret
data16
jp
xorb
sub
sub
shrb
and
sbbl
and
pop
jb
rol
in
pop
sub
push
clc
inc
jecxz
mov
sub
inc
inc
inc
cmp
sbb
push
pusha
pop
inc
lahf
add
push
data16
xlat
in
mov
ret
xlat
fdiv
lods
push
fcoml
pushl
and
test
sub
je
popl
lods
jl
add
dec
out
aam
sbb
cld
out
jmp
fdivrl
mov
xorl
jmp
loopne
sbbl
xchg
push
pop
xor
or
addr16
fwait
ljmp
scas
push
sti
adc
fucomi
mov
pextrw
mov
fnsave
icebp
movsl
jp
sbb
and
mov
and
pop
pop
and
mov
cwtl
mov
pop
lahf
stc
dec
push
outsl
gs
inc
xchg
sahf
xchg
adc
hlt
lahf
outsb
mov
lds
movsl
push
xchg
pop
mov
imul
scas
shr
aas
cltd
into
push
sub
icebp
add
mov
jno
sub
je
testl
movsl
inc
pop
push
mov
mov
nop
dec
xor
add
and
bound
mov
add
ret
ss
call
leave
gs
inc
sbb
jne
jmp
xchg
mov
xchg
pop
ljmp
jo
mov
jge
cmp
sbb
push
fbstp
mov
pinsrw
addl
loopne
jno
mov
cmp
fwait
stc
movsb
adc
in
fs
xchg
cmpb
or
or
push
mov
xor
ror
sahf
cwtl
mov
loopne
pop
insb
out
sbb
sub
add
xor
mov
mov
cs
scas
mov
arpl
push
test
dec
aad
xchg
sub
loop
cmp
shlb
inc
sarb
jnp
adc
mov
pop
mov
in
and
dec
push
pop
add
imul
sbb
clc
mov
jmp
das
les
adc
lcall
add
jbe
test
pop
cmp
cld
push
mov
movsl
lea
test
stos
inc
repnz
in
adc
lcall
or
push
lods
push
xor
test
repnz
cmp
out
gs
or
dec
lret
and
inc
push
cmp
in
pop
push
ljmp
faddl
fcmove
jns
mov
adc
or
sarb
ds
mov
jg
jo
add
mov
mov
or
pop
push
div
add
push
adc
xor
sub
insb
sbb
mov
add
or
add
inc
std
outsl
cwtl
shll
aam
repnz
xor
cmc
xchg
pop
and
std
inc
cli
test
test
mov
sahf
movl
xchg
jl
jmp
int3
mov
jl
mov
mov
out
dec
hlt
adcb
outsb
add
mov
mov
sub
add
mov
mov
pop
jg
pusha
or
dec
cld
insb
scas
in
cmc
mov
rol
cmp
jle
xchg
mov
add
mov
push
sub
shl
mov
jb
fs
push
notb
das
push
add
cltd
sub
lods
fwait
repnz
or
movsl
mov
arpl
push
adc
pusha
es
fistps
ret
fcompl
insb
jp
jle
data16
or
repz
pop
xchg
loopne
cmp
and
push
xor
flds
cs
lret
sbb
das
mov
mov
popf
js
jge
mov
push
mov
insl
mov
pushf
lea
clc
popf
fstps
cmp
cmp
lds
out
aas
out
jne
lods
aad
es
cli
xorb
test
sarl
xchg
lds
add
cli
adc
add
leave
push
push
xchg
scas
jmp
cmc
stos
lock
stc
mov
mov
repz
push
xchg
outsl
pop
or
mov
popf
dec
and
jle
andl
xchg
arpl
xor
es
sbb
push
rcr
add
imul
aaa
mov
ss
cwtl
jbe
jl
nop
outsl
insl
jnp
cmp
adc
sub
push
pop
push
add
and
add
cmp
gs
test
inc
and
sub
outsl
stc
loopne
push
cmpsl
and
jge
scas
pop
adcb
lahf
xchg
push
daa
sub
sub
imul
cmp
jno
dec
and
adcb
ds
aaa
push
mov
cwtl
in
loop
and
lcall
pop
mov
movsl
loope
mov
mov
inc
adc
adc
inc
scas
mov
ret
movsl
mov
push
lcall
outsb
adcl
das
cli
inc
inc
add
xor
pop
bound
adc
arpl
sbb
stos
adc
push
and
push
cmp
movsb
ret
jns
sub
mov
mov
or
ret
andl
push
shrb
lcall
adc
xor
test
pop
inc
jne
xor
fwait
pop
sub
mov
fnstsw
mov
and
imul
in
push
sbb
jl
mov
inc
cs
xchg
inc
mov
mov
and
cmp
pop
lea
push
or
inc
cmp
mov
push
enter
orl
adc
sbb
rcr
push
test
push
sahf
mov
mov
in
enter
sbb
push
mov
push
mov
ss
pop
test
mov
movsl
push
and
frstor
mov
cmpsb
dec
rcrb
sub
xor
pop
push
mov
aad
cmp
lods
inc
rcll
mulb
jp
ja
in
mov
pop
xlat
dec
mov
cmp
fidivl
inc
xlat
outsb
pop
sti
out
cmp
jle
rorb
lcall
test
push
stos
pop
sub
pop
insl
lock
xchg
and
cmp
lods
movsb
aad
sub
mov
movsb
mov
cmc
inc
adc
cmp
sub
push
adc
dec
in
dec
mov
pop
mov
mov
mov
pop
and
pop
mov
and
sbbb
sbb
insb
aam
pop
push
std
shrl
inc
add
adc
dec
inc
scas
and
xchg
ss
pop
testl
jecxz
xchg
jl
pushf
sbb
pop
fisubrl
mov
inc
shlb
fidivrl
enter
jecxz
cmp
push
lret
inc
in
sub
lahf
stc
push
pop
jbe
adc
xor
lea
mov
xor
cmpsl
jae
mov
push
loop
mov
aam
push
insl
movsl
lcall
aas
xchg
pop
push
cmpsb
dec
hlt
std
mov
adc
inc
jo
adc
aas
popf
icebp
lock
jmp
std
lea
fsubs
nop
push
cmp
cmpb
or
cltd
inc
sarb
call
mov
and
cwtl
lcall
mov
add
outsb
sbb
popf
mov
jb
sahf
xlat
add
cld
mov
cltd
imul
fidivs
mov
ja
jg
pop
xchg
repnz
popf
push
inc
int3
jle
inc
and
mov
stos
fadd
dec
sub
push
fmulp
mov
dec
movsl
orl
sub
mov
mov
xor
inc
mov
jbe
adc
push
cld
xor
inc
data16
testb
clc
and
test
xchg
jg
inc
pop
xchg
out
mov
mov
mov
lea
push
repz
cmpsl
sub
icebp
ret
pop
rclb
or
sbb
fisubrs
lods
cmp
dec
xor
mov
mov
mov
pop
cli
push
out
jmp
mov
jmp
mov
push
pop
and
stos
mov
pop
insl
gs
jmp
adc
enter
or
adc
fwait
pop
inc
mov
pop
dec
filds
inc
ficoml
popf
adc
movl
pushf
mov
xchg
cmp
in
jg
push
or
cmpb
add
ljmp
add
xchg
dec
add
and
icebp
xlat
jg
test
ret
xor
mov
arpl
ficoml
mov
lods
popa
and
enter
jmp
jecxz
lods
das
shlb
push
mov
mov
repz
pop
jne
imul
jo
aam
negl
out
adc
bound
lods
int3
rorb
int3
mov
cmc
sbb
jge
pop
dec
or
sub
in
jmp
xor
icebp
mov
push
popl
popa
and
push
sub
popa
jbe
lea
lcall
pop
in
sbb
jo
jp
jo
jno
jb
lret
mov
add
inc
lock
adc
lret
inc
push
sub
repnz
mov
mov
popa
push
gs
pop
inc
rcll
jns
nopl
sbb
lds
repz
sahf
xor
call
lds
mov
inc
mov
or
into
push
xchg
adc
outsl
inc
push
insl
mulb
and
call
lds
aam
sub
adc
outsl
test
lcall
push
out
dec
addr16
test
cli
mov
aas
jbe
sbb
repnz
cmp
mov
iret
scas
fs
fnstcw
ret
in
aad
inc
fsub
mov
cld
fstps
sub
inc
or
es
inc
or
push
lock
mov
mov
sbb
sbb
sub
dec
cmpsl
mov
lods
cli
lret
or
push
enter
bound
jne
sub
and
rclb
subl
iret
mov
add
dec
repz
adc
inc
xchg
inc
jae
fstpt
out
mov
jne
xor
mov
pop
nop
leave
enter
subl
mov
ficoml
cmp
lret
clc
pop
dec
repnz
pop
repz
jne
pop
imul
pop
dec
mov
jo
or
jmp
aas
out
mov
jb
jb
arpl
mov
imul
ret
inc
imul
cmp
jb
mov
pop
adc
cmp
add
push
shlb
xor
test
xchg
sbb
xchg
icebp
enter
xchg
dec
dec
push
sub
repz
adc
out
mov
jmp
les
xor
jl
mov
inc
ret
and
inc
and
pushl
cli
pop
fldl
adc
and
mov
xorb
sub
ja
test
popa
or
orl
rclb
adc
cmp
shl
fsubl
inc
jb
adc
fsubrl
adc
jns
and
sti
inc
mov
mov
insb
ss
ror
jg
xor
sbb
out
icebp
push
and
sub
push
idivl
xchg
pop
sbb
jne
jge
sahf
push
push
std
mov
rol
push
mov
dec
mov
and
pop
adcl
subl
xchg
mov
cmp
add
adc
rclb
out
cmp
push
in
adc
or
pusha
popf
pop
daa
jno
cmp
dec
mov
jl
or
inc
js
mov
enter
or
pop
mov
inc
jp
decb
adc
and
mov
adc
mov
inc
pop
push
inc
fisubrs
lock
pop
add
push
cmp
cli
dec
outsl
cltd
fistl
js
jb
mov
xor
and
jb
rcr
lock
es
pushf
fsts
jmp
mov
ds
mov
cmp
sbb
jle
mov
jp
outsb
add
cmp
fisttpll
imull
push
out
cli
jo
dec
adc
ja
xor
imul
and
xchg
fst
aaa
sub
scas
xor
enter
stc
pop
cmpsb
cmp
or
cmpb
stos
pop
dec
outsb
dec
pushf
sti
mov
and
ret
cld
idiv
mov
adc
inc
cwtl
sub
jne
loop
movsl
push
xor
fwait
jp
pop
out
iret
out
movsl
orl
lea
sub
push
jle
dec
xchg
cwtl
imul
je
mov
inc
mov
pop
jle
outsl
test
ficompl
loopne
sti
pop
push
lcall
cs
or
mov
movups
cmp
popf
jg
cli
xchg
jp
sbb
cmp
stos
adc
cmpb
inc
outsl
addb
stc
addl
jecxz
sbb
dec
frstor
cmpb
scas
push
pop
popf
je
and
jno
adc
jns
out
ja
push
mov
cmp
jmp
cld
inc
lcall
ret
jecxz
add
inc
aad
int3
push
jge
into
mov
movsb
das
pop
imul
add
sbb
adc
out
inc
sub
push
dec
adc
outsl
cmp
or
sar
mov
mov
shrd
push
divb
clc
adc
xor
push
and
and
jmp
lahf
mov
outsb
mov
mov
xor
test
jle
dec
mov
ss
out
test
or
sub
ret
lods
inc
add
int3
mov
popa
sarl
test
sbb
lods
xlat
dec
scas
jle
jb
out
mov
aam
sub
aam
into
or
ja
jg
mov
adc
int
xchg
ljmp
js
insb
pusha
push
mov
inc
lods
push
addr16
push
add
mov
push
subl
decb
or
xchg
pop
aas
das
clc
sbb
mov
xchg
nop
xorb
pop
or
dec
data16
daa
inc
add
or
or
pusha
push
sub
stc
hlt
cmp
or
sub
sahf
ret
ljmp
pop
jno
jp
aam
pop
stc
cmpsb
hlt
and
loop
stos
cmp
fwait
sbb
pushf
inc
das
mov
xor
pop
or
fstl
inc
in
cmpsb
or
xchg
repnz
cmp
sub
out
and
jne
xor
scas
mov
mov
pop
dec
outsb
mov
lock
xchg
sbb
push
mov
push
pop
cltd
cli
adc
mov
xchg
sti
xchg
mov
add
push
add
cwtl
mov
jmp
xchg
cs
ds
sbb
pop
sbb
cmp
pop
dec
out
xchg
sbb
cs
push
hlt
cmc
jne
test
ljmp
mov
dec
scas
sub
add
or
into
fiadds
dec
adc
push
push
cmp
xor
insb
call
dec
mov
fiaddl
inc
aad
dec
push
lahf
es
inc
push
insb
lahf
fnstenv
in
add
mov
fcompl
imul
pop
dec
mov
ja
arpl
and
adc
mov
fisubrl
jecxz
popf
daa
and
movsb
mov
add
in
outsl
ds
fs
in
loopne
xchg
sarb
popf
icebp
cmpsl
es
scas
fs
aas
mov
repnz
mov
ficoms
xor
out
cli
mov
fists
inc
sahf
mov
int3
mov
and
mov
jle
xchg
mov
and
lret
jp
mov
sti
mov
roll
jmp
and
add
jge
mov
in
lret
sbb
xor
xchg
in
cs
cmc
mov
ret
push
mov
push
lret
pop
dec
jbe
sbb
and
jns
add
in
fistpl
mov
addb
fldenv
sti
lods
adc
mov
sarl
scas
and
gs
fs
jns
jl
int
mov
hlt
sbb
fwait
cmp
enter
aam
rolb
adc
push
lret
iret
dec
loope
xchg
outsb
add
or
sub
rcll
pop
sahf
daa
fdivrs
dec
cltd
push
sub
push
sub
dec
fs
inc
xor
xlat
jg
aas
hlt
std
in
lcall
lahf
mov
js
sub
mov
sbb
aaa
ret
adc
push
and
lahf
mov
sti
push
and
jl
cmp
out
dec
and
and
filds
mov
js
das
jmp
add
shrb
xchg
cmpb
test
cli
in
jecxz
pop
jae
ja
out
pusha
outsb
push
dec
sahf
pop
stc
mul
sahf
mov
add
push
fidivrs
jo
ljmp
das
outsb
cmp
orb
dec
and
xor
add
lret
push
lret
cmpsl
jg
ja
dec
dec
cmpsl
iret
jb
xchg
lcall
bound
aam
or
loop
in
imul
pop
inc
mov
inc
in
mov
lret
mov
lds
sub
in
test
int
xlat
fidivs
push
in
fidivl
jg
jo
jnp
push
ret
mov
xchg
push
jg
loope
iret
pop
inc
movsb
mov
cmpsb
mov
imul
lock
jns
jmp
mulb
addr16
mov
push
outsb
jp
or
pop
mov
inc
inc
xor
adc
ljmp
imul
push
mov
add
inc
ret
inc
divl
adc
inc
xlat
jo
mov
xor
xchg
lahf
jp
shl
rcrl
cmp
outsl
sub
xchg
mov
notb
fldenv
pop
jbe
ret
rorl
xor
sub
les
sub
cmpsb
xchg
lds
in
add
inc
xchg
sub
xor
movsb
mov
mov
popa
sbb
mov
mov
mov
cmp
dec
adc
push
mov
xor
mov
insb
push
popl
push
mov
mov
ss
dec
leave
push
jae
movsl
inc
and
pop
cwtl
fs
push
lock
mov
inc
add
dec
mov
loope
mov
add
test
lock
xchg
inc
repnz
adc
fcmovb
cltd
fiadds
xchg
fsts
lods
jp
sbb
sbb
xor
lret
fdivl
out
push
out
xchg
inc
mov
cltd
pop
xor
cmpsb
cmp
in
orb
mov
mov
or
or
mov
scas
bound
or
orb
mov
andl
dec
pop
scas
xlat
loopne
inc
add
sbb
pop
or
add
fsubs
imul
pop
das
pop
lcall
pop
loop
mov
movsb
or
dec
cmp
add
mov
lds
push
mov
mov
daa
pop
aas
push
mov
xor
arpl
jp
sahf
loop
xor
add
lods
push
or
ret
xchg
xchg
inc
jl
scas
and
lods
adc
mov
fiaddl
aam
push
fisttpl
leave
xor
mov
cmp
mov
shrl
sbb
push
adc
lea
icebp
sub
scas
adc
sti
xor
fidivs
add
test
jecxz
or
dec
sub
pop
clc
add
movsb
cltd
int3
dec
imul
out
inc
add
sbb
pop
cmc
dec
xchg
scas
or
push
cmpsl
mulb
jns
push
cli
out
cld
push
insl
lods
mov
jnp
orb
js
cmc
cld
cld
push
fcomi
gs
cmp
lea
or
and
and
int3
pop
adc
fcoms
pushf
mov
push
shll
lret
mov
fs
stos
jb
pop
pop
cmc
push
repz
int
or
fsubrs
sub
lea
icebp
test
xchg
mov
out
inc
push
mov
cmpsb
adcb
leave
test
outsl
sahf
jns
les
cmp
sti
test
insl
lock
mov
inc
in
sbb
outsl
sbbl
popa
or
mov
pushl
jge
add
cli
stos
push
cltd
lea
mov
fldl
insb
add
pop
adc
mov
ja
idivb
fsubrs
cld
sbb
jmp
push
sbb
push
add
xor
xor
or
xchg
mov
mov
aas
sub
push
pop
popf
xor
sahf
add
dec
adc
mov
pop
dec
int
test
add
std
jg
adc
rcrb
lods
dec
mov
int3
fndisi(8087
sub
xor
pop
dec
mov
fsubrs
jae
sub
mov
sbb
xor
xchg
fsub
sub
addr16
ficomps
xor
fdivl
add
inc
cmp
or
loopne
inc
cmp
mov
inc
loope
adc
push
ljmp
loop
push
outsb
stos
xor
mov
xchg
xor
fxtract
in
dec
enter
cmpsb
lret
jle
sbb
pop
push
mov
jge
sbb
shrb
push
sti
adc
and
pop
popf
hlt
xchg
out
jae
imul
xor
nop
mov
or
test
leave
dec
dec
push
aas
sbb
imul
mov
sub
mov
xchg
inc
dec
std
jno
xchg
arpl
je
test
mov
sbb
push
mov
lcall
repz
add
push
xchg
push
je
push
cmp
mov
insl
leave
mov
lcall
jno
jl
out
dec
repz
mov
sub
ficompl
std
cmp
mov
inc
test
mov
lds
or
or
mov
pushf
clc
jl
push
sub
addb
mov
cmpsl
sahf
dec
and
mov
push
jno
aaa
movsb
mov
aaa
hlt
clc
add
pop
inc
pop
push
insl
fdivrl
mov
aam
add
rorb
jne
andb
mov
sub
nop
mov
lcall
jp
cmp
sahf
pushl
stos
cltd
add
mov
fisttps
dec
repz
ja
xchg
ficompl
fcomi
shll
jl
xchg
addl
addr16
fmulp
pop
pushf
test
adc
fwait
jo
xchg
jbe
inc
aam
mov
mov
outsb
cwtl
push
mov
xor
cltd
int3
fdivs
pushf
mov
rorl
push
push
int
push
cltd
xchg
and
mov
int
mov
sbb
lret
push
adc
cmp
fisubl
inc
out
push
aam
in
mov
lret
xchg
scas
pop
xor
shrl
ret
push
push
movsl
and
pop
repz
inc
jmp
cltd
int3
sti
addr16
dec
sti
pop
add
push
mov
sbb
dec
hlt
xchg
dec
movsl
push
pop
stos
pop
mov
insb
xor
mov
push
push
ljmp
in
pop
dec
mov
and
jle
push
mov
mov
fs
fstpl
push
xor
sub
inc
adc
push
jne
popa
jbe
test
inc
dec
enter
pop
clc
jle
rcrl
inc
cld
mov
sub
jae
out
sbb
divl
add
and
fbld
add
inc
leave
in
inc
in
mov
xchg
mov
nop
loope
in
loop
adc
pop
jae
mov
mov
push
mov
aaa
sub
iret
adc
mov
push
outsl
cltd
inc
jae
jle
ljmp
shrb
cmpsl
inc
aaa
insb
lahf
push
and
pop
xchg
sub
cmp
stos
sbb
lds
and
mov
or
mov
addr16
mov
aad
vpavgb
rcll
test
sub
adc
push
lods
fnstsw
dec
fstpl
push
pop
and
mov
cmp
xchg
dec
imul
jge
pop
jg
fstl
and
repz
add
in
xchg
movsl
out
xchg
add
ljmp
test
mov
cli
inc
sub
insl
mov
xchg
cmc
cmp
mov
shll
daa
ljmp
mov
pop
xlat
nop
jecxz
jg
pop
dec
dec
pop
mov
int
cld
push
jge
xchg
cmp
mov
xchg
ret
push
and
sub
push
mov
test
push
jbe
pop
xor
mov
sub
inc
and
pop
outsl
push
outsb
imul
mov
clc
mov
addr16
call
cmp
out
xor
pop
or
push
pop
fildl
jb
inc
test
dec
xor
andb
ss
andb
dec
lds
mov
push
mov
out
ret
inc
imul
mov
mov
xchg
decb
lahf
dec
pusha
cmpsl
iret
and
add
pusha
outsb
pop
jne
and
sahf
std
cmp
sti
jnp
sbb
pop
notb
adc
dec
subb
incl
ds
lods
mov
dec
mov
inc
arpl
icebp
mov
jo
int3
ret
iret
ret
jl
mov
xor
dec
xchg
arpl
int
in
addl
rclb
xchg
xchg
pop
mov
arpl
das
je
mov
or
push
jg
test
in
cmp
andl
add
sbb
dec
xor
les
enter
mov
lea
lock
mov
enter
in
push
out
pop
sub
cmp
ret
popf
js
mov
nop
inc
fistpl
sub
lea
dec
es
sub
jb
xor
sbb
jne
dec
cmp
push
popa
rsqrtps
jne
add
lds
push
hlt
xorb
mov
jmp
movsl
add
mov
xchg
stos
mov
xchg
sub
push
incb
in
cmp
outsl
xchg
adc
xorl
lock
xor
leave
mov
adc
leave
pop
or
push
imul
ficoms
lods
cmp
fadds
mov
fs
push
mov
fadds
gs
xchg
cli
jle
add
inc
mov
inc
jp
lahf
mov
lods
in
dec
in
and
mov
inc
jg
add
movsw
and
jge
push
cmpsb
sti
push
lds
or
fcmovb
adc
adc
lds
add
out
xchg
repnz
ljmp
or
lock
inc
jo
sahf
or
mov
inc
or
fimull
in
mov
out
in
and
jp
cltd
shlb
mov
push
ss
jp
repnz
dec
inc
or
icebp
fisttpll
fcoms
xor
repz
fucomi
sbb
xchg
in
dec
xlat
aad
xor
into
inc
int3
and
loopne
lahf
or
add
or
int
pop
sub
mov
inc
mov
mov
std
inc
lds
mov
aam
add
daa
aas
push
rclb
enter
mov
or
jl
sub
inc
add
pusha
lretw
dec
cmc
inc
push
icebp
push
repz
leave
jmp
leave
inc
sub
cmp
loope
sbb
sbb
jmp
fs
bswap
movlps
pop
out
ljmp
sbb
mov
nop
mov
push
dec
sbb
pop
sti
sub
outsl
outsb
xor
roll
leave
pop
xchg
out
xchg
add
or
mov
fdiv
repz
push
pop
mov
mov
ret
imul
sbb
mov
adc
sbb
xchg
movsl
adc
sbb
outsb
jnp
cld
pop
sbb
sub
mov
or
lret
mov
out
dec
dec
lahf
cld
or
push
xchg
xor
mov
mov
jp
and
fidivrl
cmp
xchg
inc
xor
add
mov
push
fsubrs
push
lods
xor
jnp
dec
xor
jo
scas
jecxz
jnp
pop
dec
sbb
rclb
cmc
mov
iret
and
pop
popl
dec
imulb
mov
fldenv
dec
cli
inc
push
aas
subb
and
cmp
push
mov
mov
ficoml
jne
push
int3
shll
btr
insl
inc
cwtl
push
xor
inc
cmp
cmp
cltd
into
leave
xor
jle
leave
or
dec
pop
aaa
inc
xlat
mov
mov
sub
mov
inc
jne
xchg
dec
or
insb
repz
repz
mov
and
pop
dec
mov
mov
mov
cmp
dec
enter
ror
rcrb
cmpsb
test
mov
mov
cwtl
imul
into
cmp
xor
stos
push
lret
cmp
lods
out
add
inc
int
sub
insl
mov
shrb
pop
mov
clc
inc
dec
jne
stos
aaa
or
or
pushl
jp
mov
aad
or
mov
mov
clc
add
inc
ja
ret
out
ljmp
mov
push
inc
aad
es
mov
lcall
pop
hlt
push
out
cmc
cmpsb
or
push
jmp
jo
outsl
movsl
divl
jns
inc
adc
or
push
fidivl
fldenv
mov
fistpl
imul
fcoms
in
test
and
ror
movb
icebp
push
dec
data16
add
sub
shll
shll
pop
inc
cmp
test
xchg
dec
inc
insb
popf
stc
popa
pop
fstps
jmp
and
push
xchg
je
ss
xchg
inc
testl
xchg
repz
je
cmpsl
adc
insl
adc
fldl
sub
jno
out
fistpl
push
test
xchg
add
jl
mov
sbb
xlat
repnz
outsl
inc
push
repz
icebp
add
xorl
cli
adc
addr16
lret
into
dec
shll
lretw
movsl
inc
mov
mov
and
int
int
mov
shll
sub
mov
pop
jmp
les
test
mov
jge
les
mov
xchg
mov
test
xor
dec
mov
fdivrl
fadds
inc
ljmp
cld
add
dec
test
mov
out
movsl
test
adc
jl
mov
adc
xchg
insb
out
clc
mov
addl
or
mov
sub
xor
jmp
outsl
push
push
or
inc
out
push
adc
cmp
mov
ficoml
sub
js
or
inc
test
push
cmp
out
adc
add
or
cmpsl
jb
movsb
fldcw
jne
add
cmc
sbb
dec
mov
cli
sub
movsl
pop
mov
out
xchg
out
test
cmpsl
mov
popa
sub
mov
cmova
pop
addr16
inc
lods
sbb
sbb
adc
pop
stos
pop
push
or
lcall
xchg
stos
jecxz
pop
jl
loope
push
gs
xor
push
cwtl
or
xorb
cwtl
dec
pop
pop
mov
pop
cmpb
adc
add
bnd
dec
es
sub
lahf
fs
lods
inc
jmp
outsl
subb
mov
mov
inc
pop
std
aam
and
dec
aaa
jp
in
xchg
imul
jns
shll
aam
cmp
ret
jg
sbb
cmp
push
pusha
cmp
jo
popa
push
cmp
adc
pop
rorb
dec
iret
sti
inc
fwait
in
out
ret
jg
sahf
mov
cmp
push
std
inc
dec
imul
and
in
push
rolb
sbb
in
lock
out
jbe
lcall
cld
ja
into
loop
repz
pop
lcall
gs
jb
lea
call
push
jns
pop
cmpsl
adc
or
imul
insb
pop
out
sbb
decb
mov
stc
xchg
and
jl
enter
lret
xchg
add
in
sbb
dec
sub
popa
xchg
shl
cvtps2pi
adc
rcl
jmp
xchg
and
shr
shlb
mov
xchg
sub
inc
inc
out
jb
xor
or
add
push
shll
xor
js
push
inc
xor
push
ss
push
adc
pop
mov
clc
mov
mov
pusha
xchg
inc
and
call
std
test
jg
mov
imul
sub
jle
sub
lods
adc
jmp
jge
add
popf
mov
jae
and
cmp
es
xchg
ljmp
inc
mov
pop
add
fmull
jecxz
in
mov
into
xchg
orl
pop
and
xchg
scas
aaa
cmp
sbb
mov
ret
pop
outsb
cmp
hlt
jne
or
ljmp
ja
or
sbb
mov
dec
ds
ja
sub
xchg
mov
inc
aas
jl
lods
lret
jg
and
mov
test
imul
ljmp
jne
fcomip
lods
ficompl
lret
or
ret
pop
adc
stos
test
mov
test
and
inc
cld
sbb
pop
insl
es
sbb
fwait
jae
dec
fucomi
pop
mov
jecxz
and
push
cmp
lock
dec
clc
push
enter
mov
push
addr16
in
enter
xorl
int3
cmp
and
jl
aad
outsb
clc
push
pop
shrl
jle
xchg
outsl
js
mov
bound
push
fildll
push
pop
cmc
jl
fcoms
ja
test
sahf
loope
test
push
sahf
xchg
jp
push
mov
enter
aaa
loope
mov
xchg
imulb
push
dec
inc
repnz
inc
jae
loop
xor
nop
jnp
filds
mov
adc
pop
fisttpll
push
aaa
xchg
cmp
mov
mov
cltd
shlb
jecxz
sahf
push
gs
pop
or
cmp
mov
and
into
xor
sti
dec
int
hlt
insl
bound
sbb
cmp
add
outsl
repz
cmp
cltd
mov
inc
shlb
scas
jge
mov
pop
sbb
and
test
mov
cmp
push
add
push
shrb
std
pop
outsl
sbb
pop
cmpl
xor
push
add
cmpsb
push
adc
dec
ja
jb
mov
sbb
and
test
xchg
cmp
add
dec
pop
or
mov
negb
fdivrl
dec
xchg
adc
push
pop
or
jmp
or
movsl
fldenv
lea
mov
or
lods
inc
scas
inc
imul
aaa
movsb
pop
mov
daa
jl
cmp
jno
mov
call
lcall
icebp
outsb
fisubl
jmp
cmp
outsb
dec
into
xchg
ret
and
addr16
mov
fldl
sbb
mov
in
add
aam
push
jno
rcrl
xchg
push
int3
insl
push
pop
pop
outsl
and
dec
push
insl
les
mov
mov
pop
repnz
movsb
pop
loope
adc
jg
pop
push
adc
out
cltd
jns
insl
orl
jae
loope
out
mov
xchg
mov
xchg
xor
cmp
sub
test
pop
inc
pop
scas
or
jno
pop
dec
add
outsl
jge
pop
ja
lcall
push
sub
push
mov
insb
and
sub
aad
and
fs
insb
cltd
sarl
fildl
dec
adc
movsl
mov
mov
xor
out
xchg
scas
jo
rorl
outsl
int3
sbb
cli
or
sbb
jb
mov
fisttpl
les
mov
dec
jp
adcb
bound
and
jmp
pop
mov
call
push
xor
sub
mov
mov
scas
test
mov
ret
push
xchg
fcmovnu
arpl
mov
addr16
xchg
push
jle
lret
shll
loope
cmp
fildll
pop
in
sub
dec
inc
outsl
push
sub
xor
push
jne
jne
mov
test
stos
int
in
clc
das
mov
sarb
jp
sbb
std
outsl
call
cmp
and
lahf
das
pusha
inc
push
addr16
fsubs
pop
mov
pop
lret
int
ljmp
outsl
lret
cmp
pop
ljmp
int
xor
fsts
mov
ljmp
and
sar
fs
jae
add
cmp
sarb
inc
inc
cmp
cmpsl
test
jge
std
fmull
or
cmp
orb
adc
dec
cmpb
jp
insb
arpl
push
push
loope
jl
cwtl
fstpt
pop
cmp
push
ds
sub
sbb
and
fldt
aam
clc
call
push
mov
mov
in
mov
das
pop
sbb
adc
add
jb
clc
sub
push
jge
imul
push
imul
popf
mov
dec
dec
mov
xor
jmp
push
mov
xchg
out
jne
out
enter
push
cmp
out
push
pushf
mov
push
adc
std
ja
or
jbe
lock
lods
repz
cli
cmp
gs
loope
sub
int
push
mulb
jns
sub
mov
shll
adc
pop
pop
push
xchg
push
into
not
clc
pmaddwd
cmp
or
popa
fcoml
mov
mov
or
adc
pop
pop
outsb
jg
insl
in
mov
adc
inc
sbb
push
push
xchg
sbb
jb
xchg
inc
pushf
inc
ss
xor
push
xchg
xchg
insb
jle
inc
mov
aad
movsl
inc
sbb
push
xor
sub
xlat
jae
cld
push
mov
push
xchg
or
jo
inc
sarl
push
pop
hlt
sub
mov
or
imul
incl
xchg
pushf
lock
or
xchg
pop
ljmp
xor
icebp
fadd
jecxz
pop
lea
adc
pop
xor
xor
add
inc
mov
push
adc
cmp
inc
lcall
sub
loop
inc
in
sbb
notl
dec
nop
inc
mov
mov
test
sbb
jne
sbb
out
xchg
push
fisttpl
outsb
mov
inc
add
jecxz
or
outsb
mov
aad
fwait
jno
fdivrl
add
push
call
pop
loopne
sub
mov
rorl
cmc
inc
js
add
leave
aad
popf
adc
ret
sbb
inc
xchg
sub
add
inc
outsb
test
inc
mov
lret
add
lahf
lods
and
out
push
and
mov
sbb
add
jmp
add
popf
icebp
mov
cmp
imul
cld
lods
sub
scas
sti
push
mov
ja
popa
fstpl
imul
dec
lods
aad
testl
repnz
incl
mov
sbb
hlt
pop
and
pop
aam
cwtl
dec
add
arpl
cmp
rol
adc
inc
xor
push
lcall
adc
xor
pop
push
insb
pop
std
sub
lcall
fisubl
movsb
jmp
mov
sarl
pop
inc
push
and
push
push
int3
into
andl
jo
jbe
aam
lret
and
mov
clc
sub
movsb
aam
icebp
andl
popa
aas
add
pop
jecxz
jnp
push
or
add
pop
ljmp
int
loopne
mov
fbstp
push
iret
cmp
or
lcall
sub
add
aam
push
mov
and
lods
gs
sub
xchg
cmp
inc
adc
sahf
in
aam
out
push
jne
sub
call
ret
adc
cmp
and
aam
jno
xor
mov
js
addr16
mov
push
dec
out
lret
xchg
xor
aam
push
add
pop
test
enter
push
mov
sub
adc
push
or
jecxz
inc
mov
add
je
dec
mov
lcall
add
decb
outsb
or
stc
pop
xor
dec
and
sub
js,pt
shr
scas
mov
sub
pushf
lock
push
mov
jle
mov
xor
outsb
xchg
lcall
aas
xchg
in
std
aaa
in
fdivr
and
pop
sahf
cmp
aad
and
xchg
xor
jp
jo
xchg
int3
jo
adc
adc
or
and
nop
pop
mov
dec
in
std
dec
sbb
test
add
mov
les
jo
test
dec
jb
mov
mov
or
repz
idivb
mov
cli
jmp
add
imul
loop
push
ror
cmp
stos
std
fcmovne
sbb
push
cmc
call
push
jno
fstl
lock
mov
cmpsb
outsl
push
xorl
scas
cld
cld
mov
mov
adcb
mov
or
cmc
add
pop
mov
xor
cltd
adc
out
mov
iret
ljmp
dec
dec
push
and
outsb
stos
inc
push
fisubs
mov
hlt
out
in
ja
and
cld
jle
xchg
rcrl
outsl
mov
je
lds
loop
push
jmp
les
or
sti
scas
dec
sbb
dec
call
xchg
push
ret
adc
inc
sti
mov
lods
mov
mov
shll
pop
pusha
pop
pop
lret
push
sub
mov
sub
lods
lret
sbb
push
aam
pop
pop
jns
sub
or
std
dec
cltd
rcrb
push
jmp
test
scas
test
test
mov
dec
adc
sbb
loop
ja
sti
pop
mov
movsb
jo
inc
pop
scas
and
adc
xor
and
adc
int3
mov
add
dec
sti
jns
add
sbb
sbb
inc
sbb
outsb
or
push
jo
jge
es
test
push
out
push
call
inc
jg
out
aam
je
rcll
pushf
jg
mov
xchg
insl
ret
cmp
mov
push
or
mov
ja
fcmovbe
std
cwtl
enter
ret
sbb
inc
cli
pop
or
leave
call
cmp
jnp
loopne
in
pop
lea
xchg
cli
dec
sbb
push
mov
out
bound
cltd
mov
gs
fldt
sbb
pop
inc
push
test
outsb
sub
inc
movb
in
xchg
icebp
pushf
in
push
test
xchg
sarb
and
jno
imul
jl
pop
inc
jne
mov
mov
imul
cmp
pushf
cmp
rcrb
sbb
inc
mov
push
inc
mov
iret
xor
int
sub
xor
icebp
lock
inc
shlb
push
fwait
add
cmp
movsb
adc
out
and
adc
xlat
add
push
mov
xor
subl
xchg
pop
cmp
jl
mov
jge
cwtl
mov
out
or
sub
xor
push
mov
icebp
xchg
push
dec
cmpsb
scas
daa
push
dec
or
lahf
or
sub
ds
jo
aad
not
sbb
es
adc
int
xadd
aad
mov
stos
mov
mov
enter
add
std
jecxz
adc
cmp
mov
inc
ficompl
inc
lret
js
sub
bound
js
cmc
iret
daa
fwait
or
xor
sub
daa
or
mov
mov
aaa
or
sarl
aad
lock
ret
bound
aam
inc
push
and
gs
das
sbb
orl
mov
push
jae
dec
clc
jg
pop
and
push
rcll
stos
addr16
sbb
lret
xchg
stos
call
lods
lds
bnd
or
adcl
jecxz
add
push
sti
or
outsl
scas
or
call
addr16
inc
jl
jg
dec
stos
mov
mov
mov
mov
je
mov
shlb
mov
lret
bound
pop
mov
popa
sub
push
inc
cmp
pop
or
mov
dec
ss
push
sahf
sbb
pshufw
fdivrp
xchg
outsl
scas
lds
orb
xchg
cmp
shlb
mov
cmp
bound
pusha
lea
xchg
sub
xor
setno
hlt
decl
and
mov
outsb
dec
push
push
sub
mov
mov
pop
scas
push
and
adc
xor
mov
cltd
lret
cmp
fistl
cmp
add
sti
mov
xor
aam
iret
stos
lods
int
pop
int3
push
sbb
jb
xchg
lock
dec
mov
addr16
daa
cmc
and
cmp
mov
cmp
test
and
popa
pop
fdivs
mov
out
in
sbb
movsb
sub
cmp
add
mov
jnp
or
or
inc
cmpsl
mov
pop
jle
cmpsl
fcom
repnz
jg
xchg
aas
xchg
std
push
scas
rol
mov
into
scas
je
push
icebp
push
cwtl
pushf
mov
adc
dec
repz
mov
enter
jb
lret
je
dec
bound
add
mov
xchg
jns
lcall
scas
popf
mov
xchg
aaa
cmpsl
leave
cmp
jmp
add
pusha
add
xchg
xor
jmp
sub
in
or
fisubrl
xor
shrb
dec
scas
imul
inc
mov
fstpl
mov
adc
test
es
sub
mov
cmp
sarl
mov
outsb
mov
xchg
jbe
cs
lret
test
mov
dec
adc
xchg
mov
leave
mov
pop
xor
sahf
pop
ss
test
loopne
adc
les
add
jbe
andw
mov
sub
sbb
ret
xlat
mov
mov
xchg
push
aad
pop
ljmp
or
in
das
jmp
and
inc
notb
movsb
cmp
dec
out
test
cmp
xchg
mov
gs
sbb
addr16
popa
cli
xchg
add
in
pop
xor
pop
add
repz
hlt
xor
les
dec
xchg
decb
dec
xchg
mov
inc
loope
jne
loope
xchg
test
lcall
jg,pn
out
loope
ja
into
sub
inc
xlat
or
ds
pop
inc
fisttps
and
cs
dec
cli
pop
and
xchg
ja
lcall
pop
loop
cmpsb
pop
inc
or
lods
movsb
pop
cmpb
push
mov
fnsave
and
push
xlat
or
outsl
mov
sbb
test
popa
jg
mov
fsts
mov
xlat
ss
aaa
lock
mov
or
mov
and
and
inc
mov
ss
test
adc
push
lds
icebp
push
xor
mov
mov
ljmp
push
inc
dec
lcall
add
inc
out
sahf
idiv
gs
add
repnz
inc
sub
xchg
gs
add
cmc
rolb
in
xor
and
lock
sbb
jae
cmpsl
cmp
out
pop
jno
cmpsb
roll
push
lcall
pusha
aaa
xor
movsl
ds
xchg
jmp
shlb
xor
lea
lods
dec
icebp
adc
int3
stc
shlb
pop
into
lcall
test
lea
cmp
test
inc
cmpsb
and
jge
mov
aad
sub
sub
rolb
xlat
in
in
sti
cmp
jge
mov
lds
aam
loop
outsb
hlt
inc
rcrl
mov
jle
inc
inc
scas
in
test
mov
jbe
inc
pop
and
ja
scas
daa
les
out
jle
cwtl
mov
xchg
out
stc
das
and
pop
cmp
mov
xchg
adc
xor
add
sti
push
mov
sbb
pop
mov
rcll
in
xor
jb
push
adc
mov
mov
push
sub
adc
and
adc
and
mov
shll
xchg
shll
and
pop
xor
xorl
leave
scas
dec
xor
lods
loop
jnp
or
cmpsb
lea
sbb
es
mov
lret
and
jl
insl
xchg
das
out
int
ss
int
stos
push
push
pop
std
xchg
and
fcompl
sarl
push
sbb
add
repnz
xchg
mov
push
xor
pop
ret
je
lods
inc
ds
inc
insb
or
repnz
sbbb
adc
ret
cmp
out
inc
inc
or
and
inc
js
push
inc
outsb
enter
aam
loope
ucomiss
ljmp
shl
out
adc
and
sub
mov
dec
out
fimuls
jmp
mov
xchg
xchg
int3
test
xchg
mov
push
dec
loope
loope
jns
cmp
je
cs
rcrb
mov
jmp
lcall
into
sbb
xchg
xchg
ficoml
mov
outsb
xchg
das
jbe
out
sbb
icebp
and
cmp
insl
fsubs
mov
cmpsb
sub
pop
scas
xor
xor
pushf
mov
test
in
dec
cmc
add
inc
movntq
cmp
mov
sub
pop
xor
insl
adc
outsl
sub
pop
jns
lahf
cmp
mov
pop
xchg
stos
mov
or
push
xor
adc
mov
in
nop
and
scas
js
andl
lods
mov
stos
les
rol
mov
jns
xchg
push
pushf
add
mov
data16
dec
push
sbb
ret
xor
test
stc
repz
arpl
pushf
out
sahf
js
test
aam
mov
clc
stc
fmul
test
adc
xchg
test
mov
lret
xor
inc
adc
jle
test
adc
fcmovbe
shrb
fdecstp
aaa
jo
lods
cmpsl
cmp
push
les
cli
or
sbb
roll
insb
sub
sti
sbb
mov
adc
cld
cmp
jbe
stos
dec
or
xchg
sbb
lcall
jmp
fucom
cli
icebp
mov
mov
repnz
data16
int3
test
cmp
scas
adc
lods
daa
dec
dec
out
fsubr
push
fmulp
jbe
enter
dec
xchg
out
lds
add
pop
cmp
imul
das
mov
cwtl
negb
cld
and
lods
cli
add
aad
dec
jmp
mov
push
xor
enter
xor
insb
insb
out
inc
fadds
mov
loop
dec
xor
mov
add
push
repnz
mov
jnp
pop
ljmp
jae
sub
movsl
outsl
mov
inc
scas
sub
adcb
or
clc
out
int3
xor
xchg
jecxz
inc
ds
clc
jns
out
scas
sbb
in
or
mov
push
xchg
rcr
imul
in
or
cmp
sarb
in
and
out
movsb
jg
push
mov
xlat
lret
out
sti
lahf
jb
mov
xchg
mov
sbb
in
inc
mov
mov
test
not
pop
sbb
add
into
push
inc
pusha
dec
testb
xchg
or
leave
sbb
push
sub
aad
mov
test
repz
ss
sub
sbb
std
sub
insb
add
lds
push
or
inc
les
pop
lret
inc
xor
cld
mov
sti
ss
cmp
mov
lods
pop
repnz
dec
int3
fistpl
icebp
cltd
xchg
push
ds
inc
jae
jp
push
in
sbb
fs
enter
xor
insb
cmpsb
and
and
fiadds
rorb
jl
lret
ds
test
aam
stos
or
and
fwait
xor
mov
mov
in
pop
sarb
repnz
in
push
iret
pop
or
inc
sub
mov
sbb
cs
imul
sbb
cltd
movsb
jp
fmull
mov
sbb
bound
std
push
mov
mov
sbb
inc
fwait
cmp
mov
imul
fidivrl
sbb
sahf
jb
xor
jae
repnz
xor
fistl
lods
pop
push
jle
ds
inc
dec
sbb
fwait
dec
into
gs
jns
sub
inc
mov
cmp
inc
sub
js
int3
and
imulb
jo
movsl
ja
mov
sub
inc
xchg
pusha
push
rcl
lea
in
cmpsb
jge
lahf
jne
testb
jb
or
sahf
cwtl
or
ret
imull
mov
or
add
call
push
test
adc
rcrb
or
xor
mov
jmp
addr16
ljmp
repz
push
adc
into
dec
and
in
rcrb
push
xor
mov
xchg
popf
repnz
nop
icebp
cmp
fwait
cltd
cmpsl
imul
loope
scas
adc
int
repnz
push
adc
mov
call
loopne
mov
and
xchg
test
xchg
pop
js
xor
dec
dec
cltd
lahf
sub
ret
inc
ret
xor
mov
sub
pop
ds
push
loope
insb
cmp
shll
mov
rcr
mov
xorl
mov
pop
fnstenv
das
mov
stos
pop
cli
adc
sbb
icebp
jl
stos
jne
add
mov
scas
clc
int3
arpl
adc
lods
outsb
mov
mov
movsl
add
cli
lds
fcoms
scas
inc
ja
rolb
pushf
pop
sar
lahf
cmp
mov
stos
shlb
clc
jo
push
fwait
push
adc
pop
and
ret
mov
std
and
out
lahf
cmp
imul
adc
lret
jmp
out
cmpsl
mov
cmp
in
xchg
push
cwtl
jl
add
inc
fists
mov
mov
mov
dec
enter
cmpb
inc
mov
insb
cmp
mov
xor
outsb
adcb
cmpsl
shl
hlt
mov
test
test
in
pop
or
xor
outsl
adc
mov
push
sub
mov
into
aas
cs
jg
enter
shrb
mov
xchg
adc
mov
jns
jg
ret
mov
fisttpl
inc
out
adc
add
test
xlat
sub
mulb
ds
inc
cmpsb
xchg
xchg
and
mov
outsb
xor
rclb
add
mov
inc
sahf
lds
sbb
pusha
imul
or
sahf
or
mov
pop
ret
cmpsb
pop
filds
fwait
imul
push
lea
rcrb
xor
inc
push
std
cmp
cld
enter
data16
adc
jmp
stc
inc
xchg
add
fwait
pop
jecxz
enter
cmp
.byte
fwait
in
arpl
bound
pushf
pop
inc
xchg
loop
sarl
mov
sub
pop
call
mov
inc
lret
bound
push
mov
jecxz
mov
mov
pop
nop
and
orl
pop
and
cmp
enter
aad
sarb
inc
xor
mov
dec
dec
xchg
daa
scas
inc
lds
jmp
lahf
xchg
loope
xchg
stc
push
xchg
jmp
xor
fildll
and
pop
cwtl
jb
icebp
daa
jnp
popa
mov
clc
adc
adc
sahf
lahf
xchg
lret
cmp
cmovl
scas
adc
stc
movsb
int
xorb
js
jl
and
in
cs
mov
jmp
mov
fisttps
jb
leave
lcall
lock
inc
incb
repnz
xchg
pop
cmc
out
cmp
or
cmp
stos
shll
mov
imul
mov
pushf
xchg
mov
jg
xor
jno
mov
cmp
and
or
fadd
xchg
rclb
scas
stos
xor
push
push
dec
push
lds
mov
stos
jmp
mov
push
add
mov
leave
xchg
xchg
adc
xchg
jbe
fs
into
xchg
dec
popa
xchg
fisttps
or
movsb
stos
pop
jns
out
xchg
xor
iret
or
rcrl
adc
inc
test
push
inc
jne
jne,pn
iret
psubusb
inc
push
into
lods
pop
mov
jb,pn
xchg
and
in
dec
xchg
call
inc
outsb
mov
insb
in
insl
adc
jno
mov
push
scas
pop
subb
lahf
mov
mov
dec
mov
push
cltd
in
jmp
in
xchg
mov
xchg
and
inc
cmpsl
or
jg
cs
mov
je
add
mov
subl
pusha
jno
hlt
inc
cmp
fdivs
ficompl
xchg
rol
rorb
sub
in
mov
lret
das
jno
add
inc
hlt
inc
ds
mov
jl
mov
arpl
clc
or
mov
jle
cmp
ss
cmp
movsl
inc
aas
shl
enter
test
push
push
fwait
mov
or
sub
xor
push
pop
mov
jge
xchg
cmp
and
mov
xchg
ds
mov
or
shrl
push
push
or
push
xchg
lods
fiaddl
push
xor
adc
sbbl
pushf
loop
jne
sub
mov
dec
pop
cs
int
mov
mov
and
and
or
mov
sarb
pop
xchg
adc
pop
inc
out
xchg
outsl
pushf
cltd
xchg
cmp
icebp
insl
nop
into
rcrb
inc
dec
lods
das
and
shll
bound
xor
fildll
into
fsubrs
cld
jl
ja
push
jle
and
push
mov
mov
ljmp
or
mov
call
cs
test
jle
adc
andl
mov
and
pop
add
lret
insl
repz
lods
mov
ret
std
or
jbe
ror
insb
das
or
aas
loopne
mov
xchg
mov
sub
filds
cmp
sub
insl
int3
or
enter
cmpsl
pushf
rcl
push
cli
jmp
jb
mov
pushf
inc
pop
bound
cmp
or
push
push
and
in
test
mov
sbb
lret
stos
cmc
inc
xor
jb
cli
xchg
push
in
daa
test
fcmovnb
xchg
and
int
icebp
push
mov
rcl
xchg
in
xor
or
cmp
mov
sbb
push
push
sub
mov
neg
adc
and
fisubs
cwtl
rcrl
scas
imul
les
sbbl
add
cmp
xchg
xor
push
adc
out
shrl
mov
jnp
cmp
cmpsb
sub
insl
mov
fdivrl
sti
sbb
shlb
pop
cwtl
xchg
and
add
inc
adc
aam
sbb
or
sbb
xlat
test
jle
mov
pop
or
cli
orl
or
dec
dec
sbb
pop
adc
dec
into
fistl
aad
xor
jmp
inc
sbb
push
inc
sarb
push
stos
and
out
push
dec
push
adc
jg
push
push
sub
inc
in
mov
pushf
out
inc
add
and
lcall
subb
js
push
shrb
and
loopne
xor
int
push
pop
jae
insb
out
pop
insl
pop
adc
inc
and
add
imul
loope
pusha
xchg
repnz
pop
lcall
int
xchg
dec
cmp
or
inc
cmpsb
fcmove
push
mov
push
clc
ret
movsb
adc
and
shrl
ss
push
ficoms
or
jo,pn
fdivrs
int3
sbb
push
sbb
fstpt
pop
mov
sysenter
lahf
movsl
dec
push
or
adc
subb
jmp
xchg
loopne
push
test
mov
xor
push
jne
or
xor
stc
and
rclb
lret
xchg
jnp
jmp
sub
shll
pushf
test
cmpsl
jg
ja
xor
mov
inc
fdivrs
movsb
jge
das
aas
cli
repnz
mov
add
fistps
je
jmp
sbbb
xchg
lret
jle
sbb
fadds
shlb
cmp
pushf
pop
sub
sahf
stc
roll
gs
pop
jns
cli
das
mov
sub
arpl
movsl
mov
ret
xchg
lods
mov
mov
sub
mov
scas
xlat
insb
call
push
pop
jecxz
jle
cmp
dec
jae
stc
sbb
xor
repnz
xlat
int
push
adc
mov
pushf
test
lahf
pop
js
addr16
sbb
pop
lods
ja
icebp
xor
idivl
out
lret
add
leave
jno
scas
dec
sti
mov
lahf
mov
pop
stc
fstpt
cmp
rcll
pop
pushf
cmp
loopne
adcl
mov
lods
xchg
xchg
mov
jne
shrb
lret
lcall
cmp
cld
sahf
test
fmuls
mov
mov
subl
and
mov
int3
sbb
dec
ret
cltd
inc
mov
repz
stos
dec
add
add
lock
aaa
insb
fcomps
rol
ja
dec
daa
mov
mov
inc
in
jnp
cs
popa
cmp
fisttpl
repz
icebp
int3
jns
lahf
xchg
or
or
jb
movsb
cs
mov
fbstp
cmc
scas
push
xchg
pop
xchg
aas
test
js
cmpsl
mov
sbb
test
pop
into
xchg
sub
aad
jo
leave
mov
rorl
pushf
popa
clc
sbb
lahf
outsl
sub
ds
cmc
data16
lret
mov
xchg
test
xor
decl
mov
pop
call
mov
lcall
lods
or
rolb
or
mov
mov
add
int
mov
aaa
sbb
sub
and
ret
dec
dec
mov
cld
dec
mov
jns
lea
call
jbe
imul
call
fsubs
push
call
xor
lret
nop
or
inc
jae
push
bound
shlb
push
jne
push
xchg
pop
lods
xchg
adc
in
mov
fidivl
mov
xor
hlt
movsl
insb
clc
std
add
add
fdivs
cmp
mov
cmpsl
aas
mov
pop
ja
jo
ljmp
and
inc
sbb
pop
mov
sub
push
mov
jecxz
mov
imul
mov
movsl
push
push
loop
or
sahf
gs
ljmp
rclb
insl
sti
jp
mov
fwait
pop
pop
add
sbb
push
or
into
mov
popa
dec
insb
mov
sti
in
adc
pop
rclb
mov
mov
mov
lcall
add
ficoms
imul
sbb
je
decl
int3
clc
icebp
and
push
sub
lods
lret
into
dec
stc
mov
add
sbb
xor
sti
push
shr
mov
out
ret
push
movsl
test
mov
inc
xchg
xor
leave
popl
dec
inc
xor
popf
sub
scas
cmp
pop
dec
iret
adc
daa
xlat
xchg
std
push
ror
cmp
inc
ds
mov
fidivs
mov
sahf
es
sbb
insl
push
arpl
adc
push
lret
jo
outsb
and
test
jnp
push
out
out
xor
cmp
enter
movsl
cmp
inc
dec
icebp
aad
cs
jno
rcrl
xor
sahf
outsb
cli
rcrb
push
xchg
daa
dec
or
aam
ss
sub
lock
jecxz
rol
lds
andl
mov
jns
pop
jb
mov
cmc
dec
mov
fsubl
mov
jae
popf
sub
sbb
or
stos
add
fnstsw
pop
cwtl
pop
cmp
int3
jmp
jge
jle
ljmp
outsb
or
scas
loopne
jnp
dec
shll
sub
mov
mov
xor
in
test
cwtl
shlb
push
popf
sub
pop
sub
je
out
mov
push
and
jecxz
dec
mov
stos
ja
popf
cwtl
push
pop
in
fistpll
and
lahf
sbb
lcall
ljmp
xor
dec
inc
xorl
lock
int3
inc
mov
inc
cld
and
sub
xlat
cmp
xchg
mov
negl
sbb
add
aas
ds
push
cs
jp
dec
in
mov
sub
stos
inc
inc
xor
pop
fstps
sbb
mov
int
xchg
or
int3
push
xor
or
test
xchg
test
dec
lret
sub
push
addr16
inc
jae
ret
loope
sub
and
push
mov
sbb
jge
loop
mov
sti
cmp
add
add
out
daa
aam
inc
aaa
cmpsb
and
sbb
push
and
outsl
jno
call
xchg
xor
pop
sarl
das
fwait
ljmp
rclb
cmp
hlt
or
or
sub
mov
into
dec
pushf
rolb
std
mov
push
lods
xor
xor
andb
roll
push
cmp
mov
out
mov
clc
jle
out
in
decl
mov
pusha
cmp
push
mov
call
adc
movsl
aas
lds
xor
mov
pop
inc
int3
cwtl
arpl
shr
hlt
pop
add
lret
outsb
jecxz
ja
cmp
push
pop
leave
xchg
jp
lahf
mov
xor
imul
loopne
mov
popa
jle
xor
ret
test
pop
test
or
adc
call
push
leave
cmp
xor
clc
or
fnstenv
dec
aas
out
stc
sarl
jle
ficoms
adc
adc
sti
stos
jl
dec
out
addr16
repz
adc
cmp
mov
repz
jp
roll
loope
out
dec
inc
mov
add
insl
mov
testl
push
cmp
mov
xchg
push
lds
jns
loopne
inc
data16
dec
lret
adc
sub
jne
shlb
popa
sbb
in
lret
mov
sub
out
lds
jmp
cmc
lret
fidivs
es
pop
mov
addl
and
mov
and
xor
ret
popa
movsl
pop
ror
in
lea
scas
xor
shll
push
sub
adc
lret
push
fildll
pushf
cs
fs
mulb
test
xor
lock
push
je
inc
fisubs
fiadds
lret
movsl
xchg
or
int
push
jmp
pop
mov
push
rcrb
xchg
pop
xor
mov
lret
divl
lods
inc
inc
fwait
lcall
push
inc
clts
adc
leave
sahf
pop
cli
shlb
int
sbb
cmp
sub
push
adc
lds
rcl
mov
jmp
js
pop
jno
movsb
pop
mov
ficomps
mov
cmp
pop
xor
add
addr16
xor
rorl
sarl
and
cmc
jge
jl
push
cmp
pop
sub
xchg
push
shl
mov
add
aaa
mov
push
aam
ds
lea
xchg
fwait
push
inc
cmp
aam
hlt
jo
js
adc
pop
int3
shll
mov
push
and
xor
daa
xchg
idivb
js
cmp
in
test
sub
or
and
mov
hlt
cmp
loopne
mov
aas
scas
xchg
push
rolb
pop
pop
ljmp
inc
jg
out
ficompl
je
add
pop
cmp
testl
sub
jl
addl
push
lret
ja
cmpsl
lcall
add
mov
dec
lods
pop
int
dec
popf
cmp
mov
jbe
add
mov
scas
jae
inc
mov
and
or
fisubrs
mov
bound
out
xchg
std
shrb
xchg
insl
add
data16
mov
scas
mov
push
jno
clc
xchg
iret
scas
inc
imul
dec
in
xor
lret
cwtl
stos
adc
fstl
mov
in
mov
daa
movsl
sub
daa
comiss
jne
imul
pop
mov
mov
sub
loopne
out
aaa
xchg
jmp
lcall
sbb
ret
push
cmp
test
adc
mov
xchg
and
sbb
xchg
int3
add
cmp
iret
cld
xchg
jp
pop
dec
sahf
inc
mov
fdivl
or
ljmp
aaa
dec
sub
sub
fcoml
fwait
daa
dec
jp
into
push
mov
cs
jnp
test
jo
into
lds
lahf
xor
xchg
adc
jae
jecxz
pop
mov
fcomip
adc
adc
and
fsubl
jle
xor
xor
sbb
rclb
adc
icebp
sbb
cmp
imul
hlt
push
popf
scas
xchg
fisubrl
mov
andb
je
jmp
and
test
dec
xchg
shrl
cwtl
cli
shll
xchg
dec
mov
xor
lret
xchg
sbb
jle
xchg
dec
mov
xchg
mov
jno
and
es
test
test
cli
aam
mov
pop
sti
bound
pop
xor
out
mov
push
lahf
lahf
pushf
mov
cmp
ja
and
push
mov
sar
inc
jle
loopne
and
pop
sub
push
jnp
out
fnsave
popa
cmpsl
push
pushf
xchg
cmpsl
into
add
outsl
stc
add
xchg
push
scas
sbb
mov
sahf
das
adc
dec
scas
pop
xor
xor
arpl
imul
fists
xorl
stc
jmp
movsl
imul
testb
push
pop
cmp
dec
mov
adc
mov
dec
pop
mov
inc
imul
pop
leave
sarl
mov
pop
gs
icebp
fstl
popf
or
push
or
jae
inc
aam
jnp
bound
stos
leave
pop
dec
je
int3
cltd
fsub
repnz
and
push
movsb
inc
jo
push
roll
adc
lods
bound
arpl
lea
lret
lock
es
popf
inc
mov
insb
fnstcw
in
js
icebp
inc
fstp
pop
les
cltd
xor
and
scas
lods
cld
cmp
in
lret
sub
sti
dec
sti
dec
in
add
lahf
xchg
pusha
movsb
ret
push
loop
mov
dec
outsl
imul
jae
jbe
roll
adc
push
cmpsb
scas
or
mov
data16
mov
cmp
mov
nop
mov
cmp
xor
mov
push
sub
fs
lret
jno
adc
inc
inc
xchg
adc
adc
cs
cmc
fmuls
inc
adc
push
out
mov
sub
inc
lahf
test
mov
xchg
sub
ret
jo
mov
mov
mov
dec
adc
imul
int3
mov
int3
mov
out
stos
pop
cmp
out
xchg
pop
xor
adc
clc
aad
lea
sbb
push
push
mov
cmc
sbb
pmullw
mov
push
xchg
cmpxchg
ret
cmc
mov
xor
jo
std
dec
cmc
push
das
stos
inc
or
int3
sub
fs
clc
or
xchg
out
adc
pop
inc
ds
jmp
inc
stos
push
cmp
lods
adc
movsb
cld
out
jmp
div
testl
scas
jg
jb
adcl
adc
add
mov
adc
add
pushf
adc
xchg
fwait
shrl
and
push
push
cmpb
xchg
push
outsl
mov
shlb
aad
fcomip
out
dec
jb
xchg
imul
jl
and
dec
inc
push
cltd
push
fldenv
sbb
fwait
loop
stos
cmp
out
cli
or
ds
cmp
mov
std
les
mov
or
mov
aaa
ror
mov
pop
jo
jo
lahf
into
stc
ja
inc
shll
js
mov
mov
icebp
mov
push
mov
fidivs
daa
jne
pop
lret
in
dec
outsl
dec
lret
add
jg
mov
test
xor
pop
xchg
add
decl
idivl
lods
and
cli
ss
shll
jmp
outsl
lahf
jbe
sub
dec
cmp
mov
sub
mov
arpl
cmp
add
mov
and
and
outsl
and
and
push
add
pop
mov
sbb
or
jl
subb
gs
aam
cmp
js
sarl
cli
adc
sub
iret
cmpsl
pop
pushf
int3
sbb
jp
mov
xor
inc
xlat
addr16
vplzcntq
xorl
ds
jecxz
test
sub
psubsw
lock
pop
lcall
addr16
push
and
ret
aam
in
repnz
mov
loope
push
mov
rorb
mov
leave
sub
add
push
cmp
ljmp
jnp
pop
test
jl
and
scas
mov
jmp
mov
mov
lods
ss
out
loopne
cmpsl
and
subb
or
in
pop
dec
fldt
fbld
icebp
xchg
sbb
out
inc
or
xchg
xchg
pusha
or
dec
cli
out
orl
dec
mov
mov
movsb
pop
jmp
push
xor
pop
push
into
loope
das
iret
jnp
pop
and
cs
imul
test
jl
repz
out
lds
es
cmp
shlb
pop
movsb
inc
arpl
popf
pop
js
sbb
ljmp
aaa
ret
lret
or
sub
loopne,pn
mov
jno
and
sbb
outsb
xor
sbb
leave
sbb
sahf
js
jl
dec
mov
jecxz
arpl
aam
pop
pop
mov
in
push
or
xor
data16
jnp
xor
pop
repnz
lret
fs
ret
dec
rcrb
leave
jg
nop
fsubs
pop
into
loop
test
cmp
sub
adc
xchg
xchg
lea
outsb
jno
sub
jmp
js
xchg
pop
cmp
nop
pop
dec
imul
cmp
bnd
cmc
inc
jbe
cmpsl
out
xchg
sub
lcall
test
popf
add
sbb
xor
scas
aam
lahf
pop
mov
repz
xlat
sbb
or
pop
into
pop
gs
scas
add
pop
cmp
popf
aam
pop
push
or
jmp
cmp
call
arpl
pop
or
leave
fcoml
jle
inc
out
nop
xor
push
stc
call
jae
outsb
xlat
sbb
jg
mov
adc
pop
cmpsl
jbe
stos
fsubrs
jbe
fdivrp
sti
data16
and
cmpsb
aam
xchg
out
dec
roll
jb
fucomi
push
bound
pop
out
arpl
mov
xor
and
mov
outsb
cmpsb
cmc
push
loope
xchg
cmpl
lahf
or
xchg
loope
inc
movsb
test
xchg
fdivr
cmp
lds
pop
sub
outsb
mov
mov
call
inc
dec
cmpsb
stc
lret
sub
dec
pop
aas
stos
iret
xor
stc
jecxz
mov
bound
std
dec
ss
xlat
and
or
sub
imul
xchg
movsb
sub
mov
push
mov
cmpsl
sbb
jmp
je
xor
nop
hlt
pop
pop
lock
mov
and
int
notb
dec
aas
sbb
call
sbb
inc
fsts
enter
inc
mov
mov
cmp
aas
push
inc
jp
pushf
ud0
add
xchg
inc
movsb
loopne
cmp
lret
xorb
cwtl
adc
jnp
andl
cmp
mov
and
repnz
stos
xchg
test
push
xchg
pop
daa
loop
aaa
push
fbstp
loope
in
xor
ja
dec
cli
jge,pt
sub
es
insb
push
jbe
pop
mov
push
xor
mov
jbe
loop
adc
addb
test
or
lock
mov
lret
imul
mov
addb
jl
ret
scas
lea
add
addr16
leave
daa
icebp
cmpsl
mov
cmp
std
xchg
gs
daa
mov
arpl
or
test
jns
xchg
cmova
adc
sub
loop
push
insl
adc
mov
addr16
dec
mov
insb
cmp
or
sub
scas
mov
test
fisttps
notl
dec
sahf
aad
inc
push
inc
or
scas
lcall
push
cmp
mov
int
stos
and
stos
cmp
pop
lcall
es
push
aam
sbb
in
mov
jno
lret
xchg
imul
push
mov
sub
mov
call
std
xor
int3
rorb
in
or
push
pop
push
add
stos
jne
insl
movsl
add
mov
push
cmpsb
inc
dec
imul
das
adc
push
fs
out
das
daa
add
ljmp
lods
fcompl
sbb
pop
stos
mov
aaa
fstpl
lret
adc
jmp
jno,pn
pop
cmp
mov
jl
cmp
xor
adc
or
xor
repz
stos
jae
dec
out
adc
cmpsl
lahf
je
pop
jmp
adc
cmpb
or
push
sbb
cld
in
repz
int
pavgb
aam
mov
call
mov
sti
or
nop
call
sbb
dec
daa
cwtl
mov
lds
and
cwtl
dec
outsb
ud1
push
sub
push
and
jo
js
jae
mov
cmp
data16
imul
jmp
pushf
mov
sbb
and
dec
or
add
fiaddl
lret
notl
dec
jno
fbstp
out
jnp
mov
movsb
push
test
or
ja
dec
dec
ss
lret
inc
popf
mov
incl
xchg
mov
sub
sub
test
xor
in
in
cmp
and
jae
fcoml
jmp
mov
outsl
pop
lcall
pop
into
je
into
fcoml
inc
repnz
test
adc
enter
push
aam
out
xchg
xchg
out
insb
divb
rcl
leave
ljmp
mov
stos
mov
xchg
insl
inc
jbe
inc
loop
inc
les
lret
and
mov
hlt
rcll
xor
cmp
sub
imul
aaa
fbld
add
fnstenv
xlat
stos
aaa
addl
and
clc
adc
inc
das
sbb
lret
nop
aaa
xor
movsl
testb
xchg
std
dec
push
xchg
and
jmp
pop
sti
mov
stc
dec
je
xchg
cltd
inc
je
sub
sub
cmpsl
and
cs
add
ljmp
mov
sbb
andl
jnp
jmp
outsl
xchg
cwtl
xor
sub
xlat
out
dec
push
inc
neg
pusha
xor
decl
outsb
imul
adc
push
fnstcw
sub
cmp
lahf
rcrl
sbb
lds
pusha
dec
xor
sbb
imul
inc
and
fdiv
mov
inc
fs
sti
xorb
scas
cmp
outsb
cld
loop
dec
pop
sbb
xlat
dec
sub
loopne
mov
fisubrs
mov
mov
xchg
rol
push
jns
or
das
push
pop
cmpsl
add
dec
jmp
ret
mov
pop
pop
pop
pop
cmp
stos
xor
cmp
sti
mov
pop
pop
sarl
pop
stc
and
and
rclb
jp
ss
adc
rcl
sub
mov
and
dec
leave
cld
push
inc
faddl
push
adc
outsb
or
mov
scas
xchg
xor
sub
mov
js
mov
in
mov
fs
dec
out
sub
shl
cmpsb
pop
inc
out
gs
sub
out
jbe
bound
arpl
sub
sbbl
adc
cmp
mov
rcll
push
pop
sbb
xchg
xor
xlat
aas
or
testb
fcoml
cs
sarl
add
or
push
in
push
push
xor
cmp
cmp
jge
mov
mov
add
addr16
push
dec
xor
push
sub
xchg
pop
jno
mov
xchg
leave
lods
les
ljmp
mov
or
cmp
jl
shll
push
xlat
aad
cmc
call
push
and
inc
das
and
andl
xchg
sbb
push
insb
aam
jbe
xchg
jb
fadd
xchg
icebp
stc
jnp
xor
pop
and
push
ret
movsb
inc
jg
cwtl
jae
fildl
cwtl
inc
mov
ror
into
or
fldcw
lret
je
mov
pop
in
sbb
sub
bound
testl
mov
and
sbb
movsl
ljmp
mov
fsubrs
lock
pusha
xchg
loopne
aad
fstpt
xchg
cs
or
xchg
stos
xchg
inc
or
out
sbb
cld
add
add
mov
sbb
xchg
divl
jns
scas
jo
dec
int
les
scas
hlt
in
mov
xorl
mov
sub
jnp
out
movsb
aaa
pop
orb
jne
popfw
loopne
sar
xchg
mov
int3
out
pop
loop
ljmp
fisttpll
in
mov
cmp
dec
test
std
incb
or
push
cli
mov
xor
insl
push
and
inc
icebp
jbe
std
gs
inc
cmp
mov
scas
cmp
pop
push
or
sti
rorb
pop
mov
test
sub
in
add
push
cmp
xlat
mov
or
and
push
rcr
cmp
adc
hlt
jae
aad
and
pop
sub
sbb
pop
sbb
push
test
xorps
mov
lds
pop
mov
aam
jp
jle
rcl
mov
cmp
pushf
mov
inc
xchg
call
pop
push
or
cld
sbb
and
es
adc
sbb
push
idivb
xchg
lea
xchg
jp
push
and
push
addb
call
add
ficomps
insb
cli
cmpsl
decb
jno
inc
gs
lea
fdivrl
adc
or
es
outsl
add
js
filds
jp
push
mov
ds
popa
or
inc
nop
aam
das
outsl
jns
sarb
sbb
stc
jp
loopne
sub
loop
loop
adc
out
mov
or
mov
jl
mov
xchg
pushf
stos
fsubp
or
pop
ja
cmp
mov
push
and
mov
sbb
fprem1
inc
fstl
loop
mov
fs
roll
out
sbb
jns
xchg
and
inc
mov
add
and
clc
pop
dec
test
adc
or
dec
fisubrs
sub
lods
loop
popf
push
lret
cmp
push
cmp
ljmp
ja
adc
dec
lock
ret
adc
icebp
das
outsl
xor
jns
or
sbb
inc
xor
enter
or
dec
mov
jecxz
pop
pushl
cld
dec
jle
xor
pop
push
and
sbb
movsb
add
pop
and
stos
push
loope
scas
pop
xor
push
lret
mov
sub
sbb
jmp
mov
movsl
insl
pop
xchg
sub
jnp
mov
dec
fstp
sbb
mov
out
mov
sub
leave
push
jmp
xchg
jae
mov
mov
rep
sti
push
sarl
dec
hlt
aam
es
lcall
xchg
fldenv
push
jmp
ficoms
fiadds
dec
rclb
mov
xchg
jns
inc
or
addl
rcrl
xor
xchg
cli
dec
std
sub
imul
movsb
mov
popf
lds
inc
pop
insb
shrl
mov
xchg
test
xor
push
into
or
bnd
dec
sbb
imul
insb
or
xor
push
idiv
dec
lock
cmpsb
jns
int
pop
mov
add
jp
test
popf
imul
mul
lcall
test
mov
mov
out
out
push
adc
lock
shrl
test
popa
or
jns
imul
xchg
lea
xor
sub
sub
cli
imul
cmp
scas
jp
inc
jecxz
push
adc
jbe
push
cmpsb
push
mov
in
push
cmpsl
cmp
pop
clc
lret
jmp
dec
xor
call
icebp
and
clc
imul
fsubrs
jmp
adc
cmp
out
adc
xor
shlb
jp
mov
add
icebp
cmpsl
push
jge
leave
stc
inc
mov
pop
xchg
jge
insb
test
repnz
sub
pop
fbld
insb
cmp
jae
mov
mov
mov
dec
and
loope
cwtl
or
sbb
aad
jae
mov
testb
cli
insb
movsb
inc
aam
pop
call
push
test
aas
out
pusha
pop
or
cli
dec
mov
pop
mov
push
mov
adc
push
dec
shlb
add
jmp
in
mov
push
mov
sbb
add
dec
mov
subb
lods
shrb
pop
psrad
inc
addb
data16
icebp
cld
push
inc
dec
ficoml
incb
pop
js
mov
nop
mov
mov
orl
loop
sbb
enter
leave
add
popf
mov
fsubrs
jae
adc
xor
pop
mov
xchg
push
pop
jb
mov
imul
jecxz
push
movsb
lret
xchg
xchg
push
bound
lcall
and
inc
shll
push
and
or
adc
dec
jle
gs
push
rclb
int
mov
mov
pop
aam
dec
pop
addb
adc
ljmp
add
lcall
in
iret
cmp
pusha
nop
mov
fistpl
cli
mov
adc
pop
fnsetpm(287
xlat
movsb
mov
push
leave
sti
or
cs
push
or
xchg
mov
xor
and
nop
or
mov
ljmp
add
add
scas
aas
std
cmc
popa
xor
test
loopne
enter
rcl
mov
fiadds
pop
inc
or
mov
pop
outsl
push
ss
lret
jp
push
xchg
add
inc
sti
inc
push
outsb
push
ja
std
fcmovnb
and
add
adc
in
jo
addr16
mov
fwait
fwait
loopne
dec
sub
lret
xchg
shlb
xchg
into
insl
pop
fwait
cmpsb
int
cmp
es
rcl
ja
xchg
sub
out
add
sub
mov
je
and
lock
aaa
ror
sub
movsl
push
test
in
add
scas
cld
mov
clc
cs
in
ljmp
xchg
sub
xor
mov
jne
clc
cwtl
mov
shll
cltd
shlb
lods
outsb
cmpsl
inc
dec
out
add
inc
sbb
jno
mov
jmp
push
mov
push
mov
xor
aam
dec
dec
push
pop
add
mov
pop
leave
leave
lret
mov
dec
mov
jae
cmp
je
inc
stc
data16
cmp
loopne
xor
ja
es
push
jg
arpl
sub
inc
jns
popl
int3
pop
cli
push
add
testb
mov
pusha
ja
fptan
xchg
or
std
push
jl
pop
xor
jg
mov
fadd
lds
out
into
or
jp
mov
adc
cmp
add
inc
mov
mov
cmp
test
or
pop
cli
daa
mov
mov
sub
pushl
inc
push
leave
pop
leave
nop
mov
jns
sbb
push
stos
pop
test
shr
or
xor
mov
pop
jno
pop
or
sub
repnz
cmp
cwtl
shrd
inc
divb
popf
sbb
cmp
je
cmpsb
lret
mov
in
sub
push
push
xor
repz
dec
fnsave
xor
dec
add
in
inc
mov
aaa
cmpsb
xchg
adc
es
pushf
pop
mov
mov
jno
push
in
shrl
adc
out
mov
cmpb
icebp
add
jle
sbb
outsl
add
jno
jno
jg
dec
push
insb
clc
mov
adc
mov
loopne
mov
xor
ds
add
ret
dec
popf
push
dec
push
hlt
and
lea
fsubr
aas
popa
xchg
mov
ret
loop
jne
repnz
push
push
adc
cwtl
js
or
std
out
in
in
inc
mov
mov
sahf
out
inc
jne
test
or
push
inc
cmp
ja
dec
mov
push
pop
push
les
ja
mov
les
lahf
filds
pop
shl
pop
mov
xchg
add
push
xchg
push
add
bound
leave
out
cmp
sahf
sahf
push
and
mov
sub
pop
imul
mov
ljmp
js
dec
ljmp
rolb
lods
adc
lds
ficompl
test
sbb
test
fdivrs
dec
repnz
cwtl
mov
push
lret
leave
lds
pop
into
sti
adc
insb
push
rorl
mov
pop
cmp
xlat
pushf
xchg
xor
or
xchg
jno
lods
or
in
sbb
jnp
into
jle
inc
lret
mov
mov
push
mov
cld
sub
inc
movsb
leave
ljmp
push
adcb
loop
push
fbstp
stos
into
mov
daa
or
jnp
xchg
divl
cmp
sub
daa
icebp
insl
and
imul
aaa
push
daa
notl
imul
loopne
jp
jb
jo
fstpt
out
push
xor
aam
mov
popf
in
sub
pop
pop
cmp
test
xlat
xor
jb
cld
nop
jle
fstpt
adc
mov
and
add
loope
xchg
cmp
push
inc
sbb
stc
ficomps
cwtl
comiss
out
cltd
mov
adc
jmp
cmp
add
cmpsb
enter
add
ret
mov
mov
pop
xlat
repz
fidivrl
enter
sbb
push
lock
orb
and
push
cmpb
sbb
jae
xchg
pop
sub
addr16
insl
iret
aad
xchg
mov
outsb
popf
scas
dec
adc
jnp
xor
test
testb
pop
inc
pop
outsl
in
or
aad
mov
fimuls
jmp
cmp
mov
flds
push
js
mov
push
sub
xchg
xchg
pop
cmp
leave
inc
or
in
push
push
inc
cltd
dec
jp
add
pusha
fs
jecxz
sub
xchg
cmp
je
dec
inc
dec
aaa
popa
mov
jnp
sbb
push
mov
ds
xor
in
push
test
xchg
fiaddl
adc
out
divb
add
xlat
and
ret
inc
test
scas
or
and
je
call
sbb
sbb
stc
jle
mov
repz
fwait
mov
leave
dec
push
in
movss
fcoml
inc
jl
mov
popa
adc
inc
lret
shl
xchg
sub
push
cld
and
aas
mov
inc
sti
cltd
stc
js
jae
jne
test
mov
push
push
sti
shr
dec
pavgb
ja
mul
push
fsubrs
loop
and
loope
cmp
fiaddl
cli
ljmp
mov
cmp
aaa
push
pop
add
mov
sub
iret
xchg
jle
jb
aad
dec
cmp
xor
xchg
lea
push
insl
fdecstp
cmp
popa
inc
add
das
dec
scas
test
pop
cld
dec
ljmp
xor
outsl
pop
addr16
mov
push
flds
fcomps
sbb
push
movsl
lret
xchg
xchg
xchg
dec
lea
mov
inc
adc
mov
sub
jmp
add
push
packsswb
fldt
adc
sti
test
sti
icebp
loope
mov
xchg
mov
popf
xor
ss
dec
enter
outsb
sub
cmc
cltd
push
test
test
sar
xchg
and
push
test
push
flds
movsb
imulb
inc
dec
mov
cmp
arpl
add
or
insl
dec
mov
mov
imul
xchg
loopne
out
inc
pop
out
cwtl
or
pop
xor
scas
xchg
or
ds
push
or
loop
fwait
mov
ficoms
jl
pop
ds
scas
adc
cwtl
icebp
mov
test
or
push
roll
ja
mov
inc
aad
scas
lret
in
incb
test
imul
ja
pop
and
dec
push
lret
aam
cmp
jecxz
xor
fs
push
aaa
cld
mov
jp
pusha
pop
cmpl
dec
mov
sbb
mov
xor
adc
ja
imul
stos
test
pushf
nop
inc
popf
pop
es
xchg
or
lahf
das
and
in
leave
push
jno
ss
test
jge
jmp
or
das
lds
std
ss
adc
push
in
cmp
or
add
pop
or
or
and
mov
shlb
push
imul
mov
sub
js
sbb
xchg
subl
daa
adc
frstor
stc
cmp
in
xor
cmpsl
sbb
repnz
shll
push
movsb
jbe
mov
push
mov
mov
std
sarb
jb
sahf
sub
sub
cld
es
and
in
pop
lcall
insb
mov
or
mov
mov
fldz
push
inc
test
iret
sub
mov
sub
xchg
fmuls
adc
fs
stos
sbb
pop
enter
jnp
dec
cmp
cmp
addr16
loopne
push
pop
xchg
push
ja
jbe
shrb
mov
icebp
lgs
mov
loopne
aas
fnstcw
imul
mov
pop
in
loop
leave
fistpll
mov
xor
fnstcw
push
idiv
mov
addl
mov
bound
push
sub
lds
mov
mov
inc
test
xor
adc
cs
mov
fsubrl
jg
push
xor
lds
add
aad
mov
and
les
scas
jg
inc
aad
lds
or
push
movsb
push
add
push
dec
or
in
arpl
xor
push
inc
je
jmp
ss
movsb
push
bound
adc
adc
enter
mov
jnp
inc
cwtl
cmp
call
repz
add
pcmpeqw
mov
test
shlb
bt
stc
mov
push
mov
insl
mov
popa
dec
outsl
jbe
insb
into
int3
fmull
fildll
mov
out
cmp
sbb
pop
ficompl
mov
clc
pop
cli
out
push
add
loop
push
jbe
cs
int3
dec
xor
jns
xchg
pop
cli
imul
sub
cltd
es
jns
cmp
nop
sti
mov
or
and
dec
inc
test
pop
jne
aaa
add
adc
popf
push
lret
mov
or
sbb
xchg
mov
fs
lret
test
jle
push
test
in
test
aad
xor
sbb
mov
ret
shl
sub
mov
roll
adc
dec
sub
sub
xchg
push
dec
imul
add
jo
loopne
mov
stos
ret
inc
callw
cmc
xor
lds
mov
add
jbe
imul
cmp
push
andb
sbb
mov
addb
push
or
cs
push
in
pop
sub
or
xchg
mov
dec
cmp
enter
je
add
inc
out
stos
scas
ss
cld
int3
enter
sub
dec
add
imul
ja
mov
rcll
lret
cmp
xor
jge
inc
loope
daa
rep
cmp
mov
xchg
add
or
int3
scas
dec
nop
dec
cmpsb
in
jne
clc
fistpl
ret
push
mov
testb
loope
cli
mov
mov
push
sub
push
test
test
dec
cmpsl
xchg
outsl
dec
test
mov
mov
dec
insl
pop
lret
mov
jle
push
push
les
bound
adc
jb
stos
fists
mov
scas
hlt
jle
cwtl
fs
or
ljmp
or
sahf
test
insl
or
addr16
dec
addl
dec
lock
les
mov
fs
icebp
cmp
pop
mov
sarl
pop
ret
gs
cmp
pop
cs
scas
fisttps
push
push
dec
add
cmp
repnz
sti
cltd
cmc
push
jle
and
nopl
cmc
mov
add
jnp
popf
and
cwtl
sub
sahf
lcall
lahf
or
test
sub
pop
lret
mov
push
cmp
and
shlb
or
call
aam
xchg
dec
or
clc
fisubrl
mov
ret
or
mov
aas
or
scas
test
into
in
or
loopne
test
out
shll
dec
adc
stc
push
movb
decb
flds
in
lds
mov
mov
jbe
cmpsb
gs
sbb
adc
les
mov
fadds
fstps
jge
in
add
es
rolb
xor
pushf
jns
jle
stos
dec
stc
xcrypt-ecb
cmpsl
jns
in
sti
pop
mov
test
hlt
in
jno
dec
mov
testl
jg
test
ss
cmp
icebp
xchg
cmp
push
mov
scas
push
mov
movl
inc
ss
xlat
xchg
jle
popa
inc
add
call
in
mov
ss
sbb
shlb
pusha
jle
add
jb
xchg
clc
sahf
test
imul
xchg
inc
cmp
ds
push
dec
push
mov
aaa
hlt
xchg
pop
dec
cmpsl
add
inc
sahf
shl
loopne
mov
rorb
adc
push
dec
or
insl
rcpps
inc
fistps
dec
das
xor
das
stos
and
mov
or
xchg
xor
cmc
in
mov
jbe
adc
repz
sub
mov
lock
pop
sahf
sbb
cmp
rclb
add
dec
stos
pop
lret
dec
mov
aas
pop
cltd
xchg
repz
ds
stos
inc
jp
outsl
popf
out
inc
xor
test
je
cmpsb
or
jecxz
js
xor
cmp
jecxz
inc
aad
jmp
mov
rorl
fisubl
and
test
push
fsubrp
or
lock
xor
jmp
loopne
sti
mov
shl
dec
ljmp
jb
mov
popa
sub
test
xchg
out
test
mov
fidivl
push
loope
push
rorb
test
and
cmp
roll
mov
inc
or
add
add
xor
cmp
adc
add
cmp
lods
xbegin
fwait
xchg
pop
xchg
adc
lock
pop
jmp
jmp
aam
loopne
sbb
rorl
clc
cmp
inc
testl
addr16
bound
icebp
pop
roll
adc
popa
das
sahf
push
movsb
out
loope
pop
jbe
fdivs
add
xchg
sbb
aam
xchg
mov
dec
mov
dec
nop
push
dec
cld
or
outsb
mov
xor
fidivs
push
and
or
sti
mov
stos
lea
xchg
rol
lret
xchg
fs
and
test
int3
rep
lahf
stc
push
sub
or
popf
pop
cltd
jmp
pop
add
add
mov
cmp
andl
xchg
sbb
mov
lock
stos
push
push
add
lcall
mov
int3
subl
sub
stos
push
adc
cmpsb
mov
aam
pop
sub
add
push
or
or
push
or
shrl
xchg
mov
and
jno
jg
movsb
jecxz
jnp
and
sbb
sub
xchg
ret
inc
inc
data16
push
pop
loope
mov
add
and
orl
mov
or
cld
mov
es
fwait
popa
jmp
mov
and
aaa
mov
popf
mov
adc
in
inc
loop
ret
sbb
inc
lret
sub
xorb
mov
insb
call
jb
stos
jns
aad
xchg
das
roll
and
push
mov
stc
jecxz
stc
push
and
mov
icebp
push
pop
xchg
fwait
stc
imul
cmp
pop
jmp
cwtl
mulps
adc
jmp
clc
or
mulb
sub
jmp
cld
or
cmp
aad
aas
inc
bound
and
lcall
js
push
fcoml
mov
shl
dec
ret
and
mov
outsb
sbb
jmp
js
pop
pusha
xor
jge
bound
mov
or
test
jle
dec
pop
xchg
push
push
cli
out
rcrl
adc
or
jg
lahf
js
nop
cltd
adc
mov
inc
jo
cld
xchg
dec
cmp
and
hlt
mov
out
jb
insl
push
xchg
lock
dec
jno
test
out
out
cmp
mov
jmp
scas
dec
out
mov
jle
and
xor
sbb
add
fildl
inc
xlat
push
jb
mov
mov
sbb
cmp
pop
mov
or
out
lahf
push
push
inc
mov
xchg
sub
sahf
movsb
cmp
loopne
adc
int3
adc
dec
ljmp
cmp
or
leave
pop
bound
adc
pushf
test
adc
in
clc
push
lds
movsl
aas
add
movsl
mov
mov
rcrb
ret
pop
sbb
stos
repz
cmp
add
push
pop
repz
jo
nop
mov
into
std
mov
or
hlt
dec
gs
fildll
or
pop
div
inc
xchg
pop
inc
icebp
push
push
pop
test
xchg
in
std
inc
in
repnz
jne
rcl
mov
mov
data16
ret
cmp
les
xor
rol
sub
ljmp
loope
push
gs
mov
sbb
lahf
mov
add
or
mov
push
dec
loope
inc
pop
jbe
jne
les
test
hlt
mov
cli
shlb
dec
fidivs
inc
out
mov
cmc
add
das
je
ds
cmp
mov
inc
mov
iret
pop
cmpsb
pop
inc
movq
mov
push
cmp
data16
ret
gs
adc
dec
sub
mov
cs
adc
in
mov
std
js
arpl
fldt
enter
xchg
xchg
lret
outsb
inc
push
inc
sbbl
inc
inc
pop
push
popa
and
cmp
mov
pop
arpl
lods
xlat
sub
lock
jge
jl
xchg
push
es
inc
lret
mov
test
and
sbb
pop
repz
xor
jae
sub
shll
push
mov
jmp
dec
dec
inc
and
fiadds
and
sbb
loopne
in
fistpl
xchg
pop
test
out
sbb
outsb
gs
roll
iret
cmc
cmp
xchg
inc
mov
or
out
mov
mov
shll
pop
jl
jne
lock
sub
in
js
add
lods
xor
movsl
imull
sbb
mov
sahf
push
mov
movsb
xor
mov
ret
sub
and
jne
inc
add
sub
jno
sbb
in
push
push
xlat
aas
jg
fcompl
jle
jae
xchg
xor
movsl
add
push
sbb
add
pop
add
jge
sbb
popa
dec
inc
pop
lahf
push
jle
into
jmp
test
adc
iret
mov
scas
fistl
clc
ljmp
lret
out
ffreep
or
clc
imul
mov
dec
push
jnp
jae
push
es
and
call
repz
cmp
cmp
cwtl
mov
push
jo
cli
in
jg
hlt
and
inc
pop
adc
xor
sbb
sti
mov
jae
fcmovu
rcl
cmp
xor
jge
gs
inc
das
mov
sbb
sbb
push
gs
push
lock
dec
mov
repz
or
pop
pop
inc
jge
in
and
lcall
iret
mov
aad
lock
adc
mov
jnp
adc
sbb
jb
push
inc
push
or
cli
inc
pop
jb
int
fwait
stos
xchg
lcall
xchg
mov
fs
pop
adc
lods
mov
mov
push
adc
cmpsb
inc
inc
jb
js
mov
stos
pop
movsl
xchg
push
andb
popf
and
cs
add
adc
pop
cmc
dec
cmpsb
pop
pop
push
repnz
sbb
call
sbb
mov
call
lock
sbb
jmp
cmp
and
subl
jns
test
mov
xlat
jae
jl
mov
stc
scas
jb
jb
jecxz
sahf
inc
sub
fadd
jge
arpl
sub
mov
or
push
pop
mov
jmp
fdivl
lds
inc
lret
pushf
mov
out
clc
dec
sub
mov
dec
mov
jle
lods
rorl
es
xor
dec
push
adc
jmp
ja
cmc
fs
pop
sub
cwtl
pop
divb
jmp
push
test
ficoml
xor
mov
shrb
sbb
push
pop
dec
add
lods
sub
les
cmp
scas
sahf
out
mov
or
inc
jbe
lcall
sahf
push
and
inc
ljmp
cs
imul
pop
ds
dec
bound
pusha
cmpsb
push
jno
pushf
ja
icebp
aas
xor
sbb
mov
test
and
pop
mov
fdivrl
dec
in
mov
mov
data16
adc
into
dec
fwait
cmp
stos
outsb
enter
fmul
mov
pop
popa
xchg
mov
cmpsl
mull
push
aaa
scas
in
adc
sbb
shlb
xchg
mov
push
mov
sarl
xchg
xor
sbb
pop
in
inc
mov
jmp
pop
lock
and
pop
shlb
mov
mov
xchg
ss
cwtl
dec
inc
adc
ljmp
test
or
or
or
mov
jg
jnp
sbb
or
inc
pushf
inc
test
sub
inc
push
aas
daa
scas
std
je
push
xchg
mov
sub
xlat
shlb
out
push
loope
and
and
fildl
xor
repz
pop
out
inc
or
rcl
cmpsl
sahf
and
das
mov
dec
cwtl
lret
popf
pusha
jno
jb
data16
cmp
mov
sahf
ljmp
cmpb
pop
xchg
pushf
clc
rcrb
test
out
int
arpl
mov
test
pusha
out
imul
fisttps
push
adc
fistpll
out
out
out
push
cmpsl
cmpl
lea
xor
in
xchg
push
lock
mov
jo
dec
cwtl
das
pop
push
popf
out
mov
adc
movsb
iret
mov
and
add
jb
adc
popa
lock
inc
pusha
rcrl
pop
xchg
xchg
pushf
loope
mov
cmc
xchg
mov
out
negl
mov
jecxz
lret
jl
mov
mov
aas
xor
ds
shlb
mov
jns
popl
push
add
ss
pop
mov
mov
xchg
call
jbe
mov
jg
jns
jle
push
insb
push
clc
icebp
insb
push
pop
movsl
mov
mov
add
clc
in
cli
lods
mov
fildl
push
xchg
mov
add
or
stos
mov
aaa
out
iret
mov
fcmovb
div
jl
pop
popf
or
out
add
mov
push
jp
repz
sbb
sti
jne,pt
inc
sbb
bound
es
mov
xor
or
sarl
mov
fwait
rclb
rcrl
mov
cld
mov
sti
in
mov
pushf
sub
das
data16
fbstp
lcall
pusha
mov
ret
lods
and
add
pop
fidivrs
icebp
sub
das
adc
ret
and
imulb
arpl
fwait
lds
pop
jmp
mov
jmp
pop
scas
push
mov
adc
mov
scas
xchg
cmpsl
jge
mov
sbb
xchg
in
and
jb
xchg
fsts
jnp
test
sub
cs
popa
push
mov
popl
movsb
popf
pop
mov
add
sti
icebp
xchg
js,pt
loopne
jmp
dec
mov
jne
and
pop
inc
dec
testb
gs
stos
cli
mov
mov
cmp
scas
dec
lds
insl
xor
mov
push
push
cld
inc
push
pop
pop
cli
insl
xor
sub
mov
out
arpl
cwtl
or
pop
sbb
les
mov
add
jne
mov
loopne
ret
push
inc
fistps
push
sti
je
nop
out
je
ja
or
lcall
adc
enter
xor
mov
int
call
not
pop
mov
loopne
les
test
shl
popa
xchg
dec
lret
mov
xor
jne
div
xlat
and
mov
push
cwtl
or
push
es
cmp
inc
cmc
and
xor
xchg
dec
cmp
pop
mov
in
lods
in
sub
lock
push
out
adc
cwtl
je
adc
mov
shl
xchg
adc
mov
pusha
inc
push
lret
loopne
in
out
pop
mov
xchg
inc
add
xchg
push
inc
into
xor
aas
ret
out
mov
call
sbb
out
pop
jecxz
mov
adc
xchg
arpl
jecxz
sub
stc
or
pop
push
cld
andb
stc
cmc
mov
dec
jecxz
lcall
xor
inc
adcb
lods
aaa
lret
or
inc
movlps
adc
loopne
mov
xorl
xor
pop
sti
pop
fwait
jb
xchg
sbb
push
push
inc
add
xor
gs
leave
xchg
push
mov
loopne
inc
fwait
cli
ds
jmp
in
sub
mov
adc
or
cld
lcall
bound
inc
in
adc
cs
cmpsl
sub
sub
sub
out
or
push
adcb
fistps
popf
xor
in
pop
scas
insl
movsb
and
xlat
pop
mov
xor
stos
hlt
iret
stc
add
xlat
xor
pop
pop
aaa
stos
addr16
lret
enter
outsl
mov
insb
pop
xor
sahf
lcall
aad
or
pop
lock
jmp
pop
sbbb
scas
int3
roll
aas
in
ljmp
popf
lock
mov
loopne
mov
push
arpl
adc
mov
adc
add
lcall
cmp
mov
jle
lods
mov
leave
mov
cmc
jo,pt
sbb
push
push
int
mov
xchg
insb
mov
aad
and
mov
cmp
out
xor
jmp
dec
xchg
mov
outsb
rol
in
xor
lds
cs
push
inc
sbb
mov
lods
ss
ds
addr16
arpl
inc
lret
jle
dec
mov
and
aad
jp
jae
pop
mov
push
lcall
insl
jae
jne
jecxz
add
pop
loopne
lods
ficompl
jmp
inc
sbb
xor
cmp
mov
test
movsl
push
call
mov
lds
lods
call
xor
insb
inc
push
mov
lcall
adc
cli
jnp
out
pop
pop
xor
or
xchg
and
ss
das
jae
cltd
idivb
test
add
pushf
fwait
xlat
shr
jb
or
inc
fdivs
jp
stc
std
sbb
lahf
fdivrs
inc
inc
fcomip
aaa
ds
je
test
out
ljmp
cwtl
jmp
rclb
hlt
jae
ja
pushf
lret
roll
cmp
jbe
push
mov
fbld
cmp
mov
xlat
aaa
push
mov
ja
das
mov
add
daa
sbb
inc
in
adc
sbb
data16
insl
pop
sbb
subb
sub
xchg
dec
or
sub
in
std
lock
out
ret
pop
fmuls
mov
cwtl
and
out
dec
and
xchg
loope
xchg
sarl
xchg
jnp
repz
jnp
add
jbe
dec
mov
mov
pop
scas
xor
in
cltd
sbbl
out
insb
jmp
push
lahf
xor
xchg
rorl
mov
adc
inc
loope
sbb
cli
or
shlb
ja
shlb
mov
mov
repnz
xorl
mov
les
enter
fidivl
cwtl
hlt
and
or
and
xchg
out
ds
cmp
mov
aam
push
xchg
loop
enter
imul
add
test
js
sbb
bound
std
ljmp
lods
pop
pop
or
call
into
out
clc
or
cld
imul
fwait
pop
xchg
call
or
dec
ljmp
movb
mov
cmc
rcll
push
xor
adc
mov
imul
shr
sahf
ror
fistl
xor
imul
test
jecxz
dec
or
push
mov
lock
mov
add
aad
mov
mov
pushf
jle
jp
lock
iret
test
mov
push
mov
sbb
lods
aam
mov
jl
stos
inc
fstl
mov
mov
pop
test
xchg
inc
iret
pop
dec
cld
rcrb
fcomp
sbb
scas
and
mov
pop
sbb
mov
mov
xchg
rcll
xchg
stos
mov
fsubr
test
lock
sbb
loopne
repz
shl
ds
roll
and
jnp
sub
fldt
fldt
mov
cmpsb
cmp
scas
out
add
xchg
rorl
sti
mov
push
lcall
inc
adc
lods
mov
outsb
xor
push
std
popf
leave
lock
aam
xchg
ja
inc
jg
mov
lahf
jecxz
add
jg
adc
jge
outsl
push
lock
fwait
aam
dec
xchg
out
pushf
pop
xor
push
mov
jp
inc
xchg
ds
out
mov
mov
xor
or
xor
loope
sbbl
rcrl
mov
inc
gs
mov
mov
sbbb
jb
fcmovnu
and
sbb
push
xor
out
sub
sub
jl
push
adc
pop
test
lret
xchg
stc
lahf
mov
insl
ss
out
rclb
ret
cmp
fisubrl
cli
pop
mov
push
xchg
cmpl
inc
cmp
popf
mov
pop
outsl
dec
push
and
jbe
jge
addr16
xor
sbbb
mov
xor
sbb
in
lahf
shlb
scas
adc
outsb
adc
mov
mov
pop
out
aaa
stc
pop
and
xor
popa
das
cmpsb
push
popf
jbe
out
hlt
push
sub
push
jae
test
das
sub
inc
iret
and
mov
cwtl
jae
aaa
push
lods
arpl
pop
cmp
xchg
jo
in
adc
adc
sbbl
pop
outsb
daa
dec
mov
xchg
test
xor
mov
jl
rcr
mov
dec
dec
fwait
loop
jae
bnd
sbb
int
jg
jle
hlt
pushl
sbb
arpl
jne
mov
movsl
xchg
cmp
mov
dec
fwait
loopne
inc
inc
push
adc
push
jb
std
inc
pop
ds
mov
sub
and
stos
push
jge
daa
sub
and
push
xchg
out
cltd
mov
subl
xor
push
mov
mov
jmp
xor
xor
and
xchg
inc
xchg
test
jbe
mov
sub
pop
mov
mov
mov
test
into
push
mov
pop
push
mov
or
pop
inc
ljmp
and
dec
test
cmp
adc
mov
rcr
mov
and
test
xchg
lret
nop
push
enter
push
or
inc
sub
loope
fbstp
cmp
outsl
mov
xorb
sbbb
nopl
cmp
mov
movsl
outsb
push
mov
out
pop
and
adc
scas
mov
fsubl
movsl
push
adc
push
lods
sub
repnz
push
pop
inc
data16
jmp
fstpt
aad
sub
mov
lret
mov
mov
clc
lods
push
in
js
dec
fisttpl
in
pop
mov
int3
loop
les
and
mov
pop
sbb
in
out
aas
cmpsl
sub
vpsrad
jge
lds
mov
ret
sbb
fstpl
add
shrb
or
pop
push
jae
inc
or
sbb
mov
mov
or
inc
dec
test
imulb
into
aam
movsl
xchg
and
push
insb
fisttpll
pop
clc
mov
push
gs
cmp
push
aaa
or
sub
jle
std
in
add
sbb
sub
xchg
mov
mov
pushf
xchg
in
dec
les
outsl
sub
inc
push
sbb
mov
rolb
push
xchg
aaa
cltd
test
cmp
enter
jp
adc
jmp
jmp
pop
jmp
out
mov
jns
pop
test
in
dec
pusha
mov
pop
push
mov
push
xchg
fsubrp
lods
jbe
insl
addb
inc
jl
lods
jo
mov
push
lods
dec
dec
adcb
jne
pop
mov
push
int
arpl
in
in
xor
xchg
or
xchg
dec
pop
mov
insl
xor
fnstcw
xchg
insl
push
jo
gs
arpl
ss
push
fistpl
or
jg
cli
testb
call
push
jmp
xchg
lahf
xchg
lret
das
sbb
orb
sbb
ss
sbbb
roll
adc
sub
add
dec
xor
push
xor
ss
fnsave
xor
lods
cmpb
cltd
push
cmp
stc
outsl
gs
xor
jb
bound
stc
jp
inc
push
or
cli
mov
pop
das
xorl
and
adc
adc
or
sbb
fdivrs
ds
or
stos
dec
adc
or
sbb
ror
ret
aas
push
sti
fnstcw
sub
cmpsl
and
fstl
adc
and
push
rorb
stos
sbb
jg
add
jns
mov
enter
xchg
dec
lods
pop
cmc
incb
cmp
stc
in
xchg
xor
add
cmc
rol
pop
pop
es
jns
roll
sub
jnp
add
and
leave
inc
cli
lret
js
mov
push
xchg
pop
mov
fadds
daa
dec
cs
loop
push
mov
pop
dec
inc
mov
or
lods
mov
mov
pop
test
cmp
fucomi
pop
mov
pop
mov
add
mov
dec
arpl
lret
movsl
cmp
mov
mov
sbb
lods
and
xchg
sahf
repz
cmpsl
dec
call
mov
jo
loop
jae
movsl
or
out
and
lret
iret
or
jne
mov
lret
cmp
push
dec
scas
mov
orl
mov
mov
stos
sbb
xor
mov
jl
mov
adc
cmp
decb
outsb
sahf
jp
sbb
int
cmpsl
xchg
test
loopne
push
pop
mov
jp
es
aas
cmp
push
je
sbb
int3
scas
push
fnsave
push
mov
mov
add
mov
sbb
dec
mov
mov
xor
and
xor
mov
and
daa
mov
mov
jb
fwait
and
gs
xchg
rclb
cmp
fwait
outsb
dec
cmp
imul
jmp
lret
push
cmp
insl
and
int3
mov
jl
mov
stc
outsb
and
push
mov
fwait
shll
dec
mov
mov
cltd
dec
fsubrs
xchg
stc
cmp
lret
pop
push
sti
and
xor
push
jg
sbb
xchg
mov
xor
jae
movsl
mulb
in
fimuls
pop
pop
push
gs
in
push
in
xor
mov
int
inc
mov
pop
mov
pop
add
ljmp
loope
jbe
jno
and
gs
leave
cmp
out
mov
aad
mov
clc
hlt
ds
fcompl
dec
mov
push
aaa
mov
shrl
dec
movl
pusha
adc
cmp
mov
sub
cltd
push
xor
xchg
push
shlb
cmp
xchg
sarb
out
jg
mov
xor
fcmove
or
stos
xchg
or
pop
cmpsb
mov
sbb
ficompl
xchg
jmp
add
pop
push
pusha
xchg
outsl
jb
jmp
outsb
push
mov
int3
fldenv
lods
inc
insb
xor
sub
cmpl
ficoms
and
xchg
dec
daa
xor
leave
sub
inc
adc
push
sub
push
add
outsl
sub
pop
push
xchg
iret
push
inc
pop
dec
rolb
xchg
push
lds
inc
or
enter
pop
vaddsubpd
xchg
hlt
jle
sbb
paddq
out
and
sti
xor
inc
xlat
out
loopne
adc
inc
aas
out
addl
aam
sbb
int3
inc
fisubrs
push
xor
sbb
jmp
inc
pcmpeqd
lret
daa
cmpsl
push
cmp
or
ds
insb
les
inc
xchg
repnz
outsb
inc
pop
push
adc
jns
and
inc
or
jmp
ja
inc
mov
movsl
push
dec
inc
sbb
adc
xchg
xchg
mov
loope
std
call
aas
das
loopne
ret
shll
cmp
jl
push
adc
or
dec
sbb
lret
fcompl
or
jo
inc
jge
jae
js
dec
daa
cmp
clc
adc
in
popf
mov
xchg
mov
stc
out
mov
ljmp
add
mov
into
ret
out
ret
push
je,pn
xchg
mov
xchg
jle
xchg
and
dec
pop
and
and
addps
js
insl
or
test
adcb
mov
in
in
sub
ljmp
aad
insl
push
js
je
in
cmp
stc
xchg
xchg
pop
movsl
mov
jl
mov
out
cmc
and
cmp
sub
mov
push
popa
mov
pop
mov
inc
pinsrw
cli
or
scas
ret
push
clc
pop
adc
fidivrs
push
fsubs
pop
jae,pt
lcall
or
shl
aad
fwait
dec
push
pop
push
ds
push
xor
add
fdivrs
arpl
mov
add
adc
cmp
sub
out
jmp
xchg
out
les
cmp
repnz
int3
and
enter
pop
adc
dec
mov
sbb
rorb
adc
jbe
rcll
mov
ja
insb
sbb
and
jnp
sahf
push
and
dec
sar
add
or
xchg
pop
rcrl
mov
shl
add
xor
orb
loop
add
and
adc
lret
adc
add
sub
mov
inc
push
cmovnp
lock
xlat
addl
cmp
out
sbb
gs
iret
pusha
fs
cmpsl
scas
imul
mov
aaa
sub
pop
push
mov
hlt
jns
ret
test
cmp
dec
push
subl
pusha
ret
testl
test
ds
sahf
rclb
rcll
sbb
out
lahf
loopne
xchg
jecxz
xchg
push
adc
mov
js
push
mov
test
out
fs
in
frstor
icebp
loop
in
cmp
lret
push
mov
dec
sub
and
sti
call
jge
js
sub
jae
fwait
xor
mov
and
repnz
inc
and
test
push
iret
sbb
dec
sub
popf
icebp
lahf
cmpsb
sbb
aam
mov
in
loop
lods
in
jp
lret
inc
mov
mov
inc
inc
xchg
addr16
cltd
mov
or
dec
dec
das
sbb
sbb
adc
decl
aad
ret
jno
pusha
inc
out
punpcklbw
push
push
stc
rolb
enter
nop
pop
add
stos
push
jbe
mov
wrmsr
test
or
sbb
shr
xchg
add
and
sahf
popa
cs
dec
mov
lcall
aas
xlat
into
jb
mov
test
jmp
sub
fisubl
fstps
push
jmp
cltd
icebp
cmpsl
in
push
std
pop
pusha
inc
inc
sbb
jge
jle
repnz
test
add
jno
out
pop
mov
pop
stc
test
xchg
adc
push
jno
stos
test
cli
push
leave
mov
lds
jge
lods
jmp
int
jg
fistps
andb
pop
cltd
add
inc
cmc
jb
adc
mov
xchg
jnp
mov
and
xor
outsb
shl
mov
rcll
push
fwait
inc
sbb
xlat
jecxz
pop
or
cli
inc
leave
push
lret
mov
stos
push
push
adc
in
mov
mov
push
test
mov
add
add
push
fwait
lds
in
mov
pop
jle
or
inc
jmp
fucomi
in
dec
ss
xchg
insl
test
and
lret
jo
sbb
add
sti
xor
out
mov
aas
xchg
imul
out
mov
jle
push
hlt
in
enter
mov
add
or
push
scas
mov
sarl
std
and
mov
insl
adc
icebp
test
xchg
mov
cltd
icebp
lret
sbb
adc
xlat
add
ret
jno
push
mov
xchg
clc
loope
inc
in
mov
test
mov
pop
xchg
and
movsl
repz
pop
sahf
jecxz
mov
adc
sub
sbb
cmpsb
dec
sub
dec
je
xchg
jbe
fsubl
xor
xor
adc
inc
mov
xor
in
adc
out
inc
or
mov
mov
cmpsb
and
sbb
jo
jbe
add
popa
pop
inc
fs
or
call
iret
ret
jge
inc
mov
in
cmp
jmp
xchg
push
dec
pop
mov
push
cli
pop
sbb
clc
ss
pop
into
push
jle
mov
or
call
out
daa
lahf
sti
aam
inc
dec
dec
jns
dec
sbb
ljmp
cmp
stc
mulb
jns
test
jge
sub
jb
aas
push
lret
setnp
xor
rcr
mov
mov
orl
fimuls
or
inc
out
orl
cmp
mov
and
sub
enter
xor
xlat
jbe
imul
das
fs
push
lret
aam
out
push
dec
fs
testb
pop
and
gs
fstpl
test
scas
test
js
insl
icebp
add
sbb
in
lahf
push
rcrb
jl
jns
sbb
stc
lods
sub
ds
push
lods
divb
xchg
fwait
clc
or
outsl
ja
enter
scas
xchg
sbbl
lret
aaa
dec
push
and
dec
mov
pop
andl
int
mov
cld
xchg
or
fimuls
jg
adc
nop
dec
xor
lcall
mov
jbe
pop
mov
jne
stc
sub
inc
out
inc
xor
add
cmp
xchg
push
je
mov
mov
add
mov
fldcw
popf
sub
cmc
dec
int
mov
enter
add
adc
pop
pop
aad
add
test
scas
aam
or
push
dec
jg
xor
int3
jb
mov
mov
push
jmp
pop
and
or
movsl
xor
mov
sub
ret
inc
jns
dec
cmpb
mov
mov
sbb
push
mov
xchg
mov
push
push
das
je
mov
mov
das
and
pop
aas
aas
and
sbb
pop
and
cmp
mov
pop
xchg
stos
imul
xchg
cmc
mov
jne
dec
fistpl
shll
testl
adc
pop
repnz
aaa
cld
sub
pop
cmp
xchg
pop
push
cmp
in
cmc
pop
push
mov
mov
mov
adc
in
fisubrs
in
in
sbb
test
loope
ss
cmc
lcall
push
pop
add
data16
inc
mov
outsb
shrb
mov
push
ljmp
add
loop
push
mov
fwait
pushf
inc
push
movsl
add
leave
xchg
sahf
addl
xchg
test
xor
fldcw
stc
xchg
adc
cli
hlt
data16
cmpsb
dec
stos
repz
sbb
fwait
out
shll
or
mov
clc
pop
ds
inc
adc
mov
lcall
aad
lahf
xchg
fwait
in
addb
rcll
outsl
aaa
xor
loop
decb
and
inc
inc
es
inc
repnz
jnp
mov
push
nop
pop
push
dec
lock
lods
xchg
sub
scas
xchg
mov
sbb
clc
imul
cmpsl
xor
mov
mov
jmp
cmpsb
xor
jg
ret
out
mov
pop
fldl
add
or
sbb
enter
push
popf
xchg
add
test
pop
sbb
imul
cmp
and
sub
imul
mov
mov
es
pop
into
pop
lock
mov
imul
add
cmc
bound
adc
or
add
out
rcrl
or
test
and
inc
sub
mov
iret
fwait
test
dec
mov
jnp
enter
add
xchg
andl
xchg
loop
dec
dec
div
xor
jne
mov
popf
jmp
loop
and
add
test
xlat
cs
pop
dec
popa
sbb
push
dec
pop
imul
js
mov
cmp
xchg
in
jb
mov
adc
cmp
ret
lds
subl
stos
add
sbbb
ss
cmp
inc
dec
inc
mov
xchg
sub
mov
cli
mov
xlat
loope
stos
mov
jmp
mov
mov
shll
imul
or
add
cmp
std
inc
push
mov
or
stc
cltd
std
xchg
xor
mov
xlat
push
imul
or
jae
jno
paddw
loope
dec
inc
push
lock
movsl
das
call
mov
les
inc
sub
push
fidivrl
lds
lods
xor
enter
jno
inc
shl
stc
add
push
adc
pop
mov
xor
loopne
dec
jle
mov
sbb
sub
add
lcall
jne
jge
mov
push
out
xchg
cmpsb
sbb
mov
ffree
add
adc
mov
inc
arpl
test
inc
cmp
nop
scas
daa
scas
dec
imul
mov
outsl
into
icebp
idivl
mov
jge
mov
lock
insl
sbb
jecxz
and
inc
imul
xchg
and
pop
enter
inc
out
ja
rcrb
pop
jp,pn
mov
mov
in
aas
xor
sbb
test
cmpsl
mov
enter
jb
cmpsl
push
std
outsb
add
sbb
pop
sbb
mov
or
insb
mov
scas
mov
cmp
xchg
addr16
mov
stc
sbb
fdivrl
sbb
lods
jmp
jns
sub
push
in
pop
mov
insb
push
cmpb
sub
inc
mov
arpl
mov
pop
std
divl
lahf
xor
dec
jne
mov
mov
adc
int3
xor
jb
outsl
in
cmp
sub
pop
ret
mov
push
addr16
and
or
sbb
outsl
xchg
fistps
stc
sbb
xchg
mov
lea
scas
xchg
clc
dec
pop
xchg
cmp
cmpsb
mov
out
push
fistl
dec
fs
lret
cs
dec
lahf
aaa
out
popa
js
test
mov
pop
sub
xor
add
dec
push
dec
mov
insl
clc
aaa
jbe
or
insl
push
or
sbb
test
xor
xchg
lds
sbb
leave
rcrl
int3
lret
dec
leave
sub
mov
popf
push
stos
aam
lock
and
dec
popf
insb
icebp
int3
and
lea
dec
push
fxch
out
aam
sub
test
jle
push
test
cmp
and
mov
stc
lea
inc
jp
js
sub
shlb
aaa
mov
mov
inc
xor
dec
mov
jle
push
sbb
ja
push
pushf
nop
mov
adc
lock
mov
fnstsw
and
xchg
sub
xchg
push
mov
sti
pop
loop
fbld
test
push
and
pop
mov
mov
fisttps
jmp
sub
xor
push
stc
sub
xor
jmp
outsb
pusha
test
call
ret
mov
inc
add
out
rep
cmp
pop
push
es
add
add
add
and
sbb
jl
pop
or
push
cmpsl
lret
dec
adc
cmp
insb
fidivs
out
cmp
fs
add
call
push
ret
mov
jmp
aas
sub
test
in
and
jbe
rolb
mov
sub
push
inc
int3
adc
pop
ss
test
push
and
mov
cs
and
out
sbb
sbb
jl
inc
shr
data16
inc
jbe
push
rorb
lock
js
pushf
or
loopne
jecxz
lret
imul
popf
adc
xor
data16
adc
xchg
addr16
sbb
fidivs
lea
mov
fmuls
jnp
loop
popa
fwait
addr16
je
sub
xor
mov
pop
sub
mov
dec
pop
fisubs
jp
in
and
mov
sbb
push
xor
rolb
stos
lret
sbb
insl
xlat
out
out
push
fwait
add
out
in
in
pop
inc
pop
popa
mov
aad
inc
adc
jp
and
push
jecxz
imul
pop
mov
addl
mov
arpl
inc
mov
jecxz
xor
sub
cwtl
fdivrs
xor
lea
rcll
lahf
mul
cmp
lcall
rol
xor
or
jp
add
adc
xor
jecxz
loope
lock
or
arpl
out
push
adc
jecxz
jnp
in
mov
jg
pop
repnz
aam
mov
int3
jnp
mov
mov
push
inc
add
out
push
orb
lds
inc
pop
cmp
outsb
outsb
adc
cmovns
jg
mov
add
mov
mov
cltd
adc
mov
enter
scas
jno
lods
xchg
outsl
lods
sbbb
fbstp
sarl
cmp
push
sub
push
pop
and
jne
mov
test
es
jg
fsubl
cmp
xchg
jl
test
gs
addl
jb
js
addb
data16
and
mov
push
mov
jg
pusha
fidivs
andl
aad
push
fisttpl
scas
popf
fcmovnbe
pusha
clc
push
xchg
inc
insb
mov
and
push
add
scas
xchg
movsl
invd
mov
in
stc
fsubl
sub
lea
mov
jb
ds
and
pop
mov
movsb
cmpsl
arpl
pop
stc
stos
addl
in
shl
mov
icebp
cmp
mov
iret
sbb
cld
xor
hlt
fwait
and
pop
in
iret
lret
cwtl
pop
loop
stos
outsb
imul
icebp
mov
rcrl
lret
sub
fscale
jmp
cmp
xchg
jbe
std
mov
js
add
shrl
movb
enter
push
push
jl
mov
dec
fsubs
setb
push
insb
enter
mov
test
test
pusha
or
cmp
or
sub
shll
jmp
loop
out
add
sbb
neg
cmp
xchg
adc
inc
dec
test
pop
cmpsl
sub
out
test
popa
xchg
ds
fsubrl
mov
stos
mov
push
push
push
aam
xchg
leave
test
gs
aad
out
addr16
cli
xchg
add
sub
jae
or
mov
hlt
lret
lahf
sub
je
jmp
cmp
mov
stos
inc
popa
xlat
xchg
rolb
sahf
cs
add
rorl
or
mov
outsb
in
ja
mov
pop
mov
pop
sub
jno
inc
xchg
lret
sub
push
out
xor
xor
ja
addr16
ret
mov
add
dec
popa
mov
jno
adc
movsl
push
imul
add
addl
xlat
push
push
and
sub
je
xchg
subb
insb
mov
mov
lret
pop
pop
rcr
cli
xchg
inc
adc
ljmp
jecxz
pop
inc
xor
mov
adc
mov
movsb
mov
outsb
call
cwtl
les
and
insb
hlt
xchg
repnz
scas
xchg
out
push
das
sub
mov
adc
stc
pop
lods
or
pop
imul
sbb
push
fwait
je
or
cmp
add
mov
jp
pop
xchg
inc
mov
mov
xchg
nop
xor
lret
daa
fstpl
ja
es
test
pop
dec
aad
ret
inc
add
xor
pushf
rcrl
and
jae
inc
or
mov
loop
or
push
push
and
lods
mov
leave
jle
jmp
pop
pop
cmpb
xchg
repz
xor
add
test
idiv
sub
frndint
gs
cmc
gs
dec
jp
ss
xor
fdiv
sbb
std
dec
dec
pop
out
jae
stos
and
icebp
outsb
ja
mov
mov
inc
sahf
cmp
inc
push
and
cli
push
call
xor
call
test
lret
fidivrs
xchg
shll
ss
ds
jl
lahf
js
les
mov
mov
ss
cmp
mov
pop
mov
dec
cmp
cmp
int
pop
push
int
ficompl
push
sbb
lds
push
dec
pop
lds
adc
test
jle
cmp
pop
xor
mov
ret
sti
sbb
jg
pop
arpl
popl
push
cmpb
cmpsb
push
sub
out
stos
adc
mov
add
dec
lret
xor
and
fucom
mov
lock
stos
add
cmp
inc
repz
mov
xor
gs
add
jns
sbb
imull
shrb
mov
aas
jge
cli
jge
jnp
in
sub
das
cld
fwait
aad
repz
jno
mov
dec
pop
pop
lcall
dec
movsl
push
or
add
out
ret
fcomi
pop
pop
outsb
mov
xchg
iret
gs
jbe
and
pop
lret
aam
sahf
repnz
dec
test
sbbl
cmp
push
jl
sub
jmp
push
testl
das
xor
add
lods
push
add
add
mov
push
adc
out
mov
xchg
cmpsl
cmp
mov
jno
fbstp
push
popf
out
insl
les
mov
add
lods
or
aad
clc
out
add
hlt
xchg
frstor
mov
pop
dec
add
jp
adc
movsb
mov
hlt
loope
lahf
addr16
and
pop
xchg
rclb
pop
sbb
sarl
divl
lret
sbb
mov
add
add
stc
xor
push
subb
pop
jecxz
or
xor
jns
push
lock
sbb
and
aaa
divb
xchg
clc
sub
popa
fmuls
add
pop
push
rcll
and
bound
jge
lea
xchg
test
mov
lea
arpl
xor
inc
pop
or
adc
in
push
movsb
stos
dec
test
ss
cmpsb
enter
push
sbb
push
mov
sub
push
cmpsl
popf
lods
fmuls
divb
outsb
jnp
test
or
das
addr16
jns
mov
rcrb
cs
shr
xchg
lock
ret
mov
pop
jns
dec
aad
inc
sbb
push
or
cld
mov
cmp
lds
and
pop
sbb
jne
dec
mov
sub
or
cmp
fcompl
int3
in
jge
push
bound
inc
mov
mov
push
les
mov
pop
lock
cmpsb
jle
cli
sbb
out
sbb
mov
adc
test
adc
cmp
inc
divl
push
out
push
adc
mov
mov
mov
daa
mov
int3
fsubl
insb
cmp
pushf
push
inc
pop
rcll
sbb
stos
lcall
cmpl
lods
sub
sub
into
adc
adc
repnz
mov
mov
repz
test
loope
aas
jb
pop
out
stos
add
or
add
mov
jmp
mov
je
aaa
inc
test
movb
out
pop
sub
fmull
inc
es
out
and
cli
in
shlb
or
dec
fmull
lret
cmp
scas
jg
lds
xchg
rcr
adc
aad
inc
mov
out
clc
ljmp
cltd
xchg
jge
cmpsb
cmc
imul
mov
xor
xor
test
imul
push
xor
sbbl
sahf
lods
cmp
adc
or
xchg
cmp
push
std
push
add
xor
stc
xchg
or
push
cmp
int3
or
xor
jge
movsb
push
js
sub
dec
in
mov
aad
xchg
dec
daa
push
mov
mov
and
add
add
loope
popa
fisttps
jecxz
pop
in
fsub
mov
call
lea
ja
lock
push
hlt
xor
dec
shll
or
jae
sarl
sbb
fstl
cmp
repz
jns
addr16
jbe
loop
test
inc
subb
dec
lret
cli
sub
gs
pop
jb
fistl
std
stc
adc
xchg
cwtl
enter
sbb
inc
mov
push
xor
in
adc
leave
mov
cmp
jo
imul
scas
je
je
ficomps
mov
xor
stc
and
daa
inc
mov
add
bound
and
xchg
lahf
mov
or
or
mov
ljmp
xchg
enter
loope
fsubrp
mov
dec
ret
mov
pop
fcmovne
push
mov
sub
lahf
adc
jnp
int
sbb
into
les
addr16
insl
and
loop
mov
ljmp
adc
in
pop
lret
jecxz
movsl
sub
adcl
movsb
pop
loope
xchg
and
ds
mov
repz
pop
mov
jge
mov
out
push
push
lahf
out
inc
test
xchg
pop
cmpsb
jb
or
test
push
mov
pop
inc
dec
push
jg
inc
and
xchg
cmp
ja
test
jmp
fwait
sbb
mov
mov
push
shll
aas
fisttpl
popf
jno
and
int
jecxz
pop
xchg
stos
test
fptan
shrb
cmp
sub
xor
mov
and
cmp
aam
cmp
jmp
lcall
mov
lds
aad
and
fwait
xor
xchg
insl
pop
rcll
add
inc
cmp
sbb
mov
mov
dec
bound
push
je
pop
test
psrlq
adc
shlb
mov
pop
pop
daa
mov
mov
cmp
in
xor
pop
ljmp
lock
and
push
xchg
push
loopne
and
ds
push
dec
push
test
dec
in
fdivrl
out
cmp
cmp
pop
aas
stos
fidivl
in
movsb
loop
push
adc
scas
out
add
and
icebp
fimuls
mov
fcoml
outsb
fldt
shll
dec
mov
lea
mov
cmp
in
pop
xchg
lret
inc
pop
sbb
mov
lds
js
pop
adc
cmpsb
mov
and
cmpsb
and
pop
out
dec
sub
sbb
lahf
or
xorb
and
dec
sbb
stos
pop
call
and
add
push
shll
in
pushf
call
inc
mov
cmp
push
xchg
jae
mov
ljmp
pop
lock
and
push
popf
arpl
push
pop
arpl
es
push
push
faddl
add
lock
loopne
dec
xor
into
mov
imul
add
mov
push
inc
fistl
mov
or
inc
jno
test
fildll
pop
jno
fs
gs
imul
mov
cld
pop
in
imul
das
adc
mov
mov
cmp
inc
fcmovne
das
jbe
outsb
adc
mov
xchg
mov
stos
jo
add
out
out
mov
xchg
xlat
adc
in
mov
lods
popa
fldcw
mov
mov
sub
cli
sub
aaa
mov
decl
data16
imul
pop
mov
enter
out
sub
or
sub
jmp
pushf
jae
scas
hlt
cltd
or
inc
pop
jle
add
dec
cmpsb
popa
ja
dec
mov
push
aam
xchg
xor
incl
sbb
gs
lret
sbb
idivl
sub
sbb
mov
adc
push
jge
dec
add
cwtl
in
imul
ljmp
inc
mov
mov
sar
sti
cs
jmp
sub
cmp
imul
loopne
xlat
jae
sbb
adcl
fistpl
mov
insb
xor
mov
testl
xorb
lods
sbb
jecxz
je
push
mov
push
and
fwait
out
xor
inc
or
scas
cmp
out
inc
dec
aas
push
push
jg
stos
gs
cld
lret
rcl
adc
mov
out
dec
and
sub
call
sbb
push
cmc
hlt
dec
mov
icebp
js
fstps
lea
test
aam
push
movb
aam
cltd
and
jp
std
icebp
lods
and
jecxz
test
std
insl
dec
inc
xchg
push
loope
add
jge
in
enter
ljmp
xchg
pop
imul
inc
loop
enter
dec
dec
xchg
xchg
jmp
jo
aaa
fwait
bound
xchg
xorl
sbb
pop
pop
xor
mov
imul
xchg
stos
cld
sbb
dec
jno
add
loop
xor
xor
incl
mov
stos
mov
lret
inc
push
daa
out
in
dec
scas
push
inc
imul
xor
loop
cmpb
mov
mov
adc
fsubs
imul
insl
loop
shrb
pop
pop
ret
adc
arpl
jb
push
lods
mov
push
pop
pusha
push
mov
mov
sbbl
cmp
pop
pop
pop
xchg
pop
jmp
push
out
and
sahf
cmp
int
xor
shlb
push
or
mov
xor
lret
inc
fcmovb
pushf
mov
js
jno
inc
xchg
adc
xchg
jns
jo
mov
mov
jns
in
push
cli
add
xchg
push
loop
xlat
scas
jo
xor
and
add
mov
inc
adc
jle
or
das
data16
adc
push
mov
popf
les
pop
mov
xchg
xchg
sub
dec
push
add
bound
popf
pop
mov
pusha
pop
ficoms
pop
pop
mov
notb
xchg
pop
clc
mov
mov
pop
lret
sbb
pop
leave
sub
jle
lcall
repnz
mov
imul
xchg
shll
push
push
hlt
mov
fiadds
das
jp
aad
das
cwtl
or
ja
mov
mov
imul
and
adc
pop
add
push
dec
and
mov
stos
pop
sub
sub
mov
insb
jg
jno
mov
sub
push
setno
push
mulb
xchg
dec
push
daa
stc
daa
mov
cmpsl
dec
test
into
push
pusha
imul
loopne
arpl
and
testb
push
popf
sbb
cmp
outsb
pop
add
inc
aas
mov
out
sbb
stos
jns
loop
pop
mov
and
fldl
leave
xor
enter
dec
leave
aaa
ret
dec
dec
lret
sbb
push
cmp
and
dec
div
mov
int
sbb
push
stos
xlat
sbbb
clc
test
inc
sub
mov
fwait
loopne
fdiv
lea
xchg
push
in
movsl
sub
aam
mov
add
aas
push
add
pop
lods
sbbl
pop
pop
add
xor
divl
lea
xor
ja
leave
into
fwait
xchg
push
out
imul
lcall
int3
cmp
xchg
adc
fisttpl
sti
inc
cmp
loop
jns
call
adc
stc
add
sbb
loop
jbe,pn
and
lret
fcoml
push
pop
in
mov
orb
rcrl
es
cld
mov
je
pop
xchg
cld
aas
add
cmp
fsubs
jns
or
push
push
push
jae
sbb
cli
dec
adc
adc
cmp
lds
movsl
pushf
insl
movsb
pop
in
inc
or
push
mov
shlb
ja
push
scas
and
ja
adc
inc
cmp
rol
jne
inc
jmp
movsl
push
dec
popaw
cmp
stc
je
or
test
mov
outsl
imul
add
push
mov
adc
cmc
loop
pop
mov
xor
stos
loope
xchg
jge
cmp
es
fcmovb
lock
fsubrl
dec
arpl
jge
jnp
xchg
sarl
jno
xchg
movsl
aam
in
sbb
inc
inc
data16
sbb
bound
and
subl
test
cmpsl
cmpsb
dec
cmp
pop
inc
in
jle
ds
aaa
icebp
mov
outsb
lock
lock
scas
lret
sub
xchg
sub
rol
sahf
lods
cld
cmp
shrl
add
push
loop
stos
inc
sahf
pop
inc
jl
inc
ds
shrb
and
call
fwait
in
push
loop
sub
repz
loope
pop
cmpsb
jo
mov
arpl
pop
xchg
shll
add
xor
outsb
shll
andb
and
fs
jecxz
nop
push
ret
xchg
call
push
cmp
dec
call
or
sbb
push
xchg
push
xchg
push
rcrl
fisubrs
cmpsl
fidivl
loopne
mov
add
fsubrp
leave
mov
push
dec
adc
jge
xor
and
jle
es
add
fs
inc
push
dec
mov
dec
out
test
and
pop
leave
mov
fwait
push
loopne
enter
push
dec
rcrl
xlat
movsb
sahf
push
and
xchg
out
ljmp
shl
and
cmc
cmp
pop
sub
ss
mov
fwait
mov
adc
cmpsl
jbe
out
xchg
pushf
fwait
jns
dec
andb
js
push
push
sbb
popf
ffreep
nop
out
add
push
jle
sbb
jno
and
sub
mov
stos
aad
sbb
in
cmpsl
add
enter
loop
addr16
movsl
dec
and
sbbb
jmp
cmp
jo
pop
pop
addr16
test
les
aad
adc
and
xchg
push
in
int3
adc
andb
cmp
je
test
mov
ficoml
dec
adc
push
in
in
mov
fisubs
dec
shl
cmpsl
shl
imul
int
ss
add
mov
sub
xor
jb
pop
sbb
in
repz
test
std
push
loope
xchg
jns
fmul
loop
adc
dec
movsb
es
aad
and
jb
testb
xor
dec
push
xchg
addr16
push
les
adc
ljmp
testl
fnstenv
js
dec
es
xchg
in
adc
outsl
dec
jg
in
loopne
mov
lods
dec
ret
addr16
or
and
or
pop
insl
jmp
sbb
popa
cwtl
or
sti
notl
aas
neg
bound
xor
mov
pop
sub
aam
adc
inc
dec
gs
test
jge
push
and
arpl
or
and
xor
inc
pop
add
xor
cmp
pushf
xchg
mov
mov
shrb
dec
call
jo
imul
push
mov
jb
push
add
roll
sbb
push
xor
gs
cwtl
pop
mov
popf
fwait
lea
daa
popa
xchg
daa
cmp
and
adcb
shr
jle
sti
lods
outsb
mov
shlb
pop
and
loopne
xchg
sbb
in
clc
dec
ds
cmp
sarl
clc
repz
xlat
ljmp
shrb
xchg
push
outsl
gs
push
jae
sub
aas
jle
xchg
aam
imul
mov
mov
stc
leave
sti
test
inc
dec
xor
test
insb
in
js
xlat
testl
cmp
test
mov
pop
xor
bnd
dec
je
shrb
xchg
lret
dec
push
mov
aam
lcall
sub
cs
mov
dec
jle
sub
pop
int3
cltd
das
bound
pop
lret
andl
jle
mov
daa
cmp
cmpsl
pop
add
pop
push
jns
cmpsb
jge
adc
shll
out
popf
jmp
fwait
scas
xchg
push
sbb
xor
fisubl
sti
sahf
adc
and
adc
add
jns
cmp
cmp
adc
in
jle
enter
jbe
call
orl
addr16
sub
and
fcoms
repz
xor
mov
ffreep
xchg
dec
in
push
or
cmp
and
mov
loope
mov
popf
or
dec
inc
jl
fnstcw
das
call
xor
int3
nop
daa
adc
arpl
decl
cltd
test
out
and
and
inc
mov
inc
jg
cmp
fs
icebp
arpl
add
ret
ror
aam
pop
xor
aaa
fmull
mov
mov
mov
inc
ret
mov
hlt
mov
xor
inc
jbe
loope
and
addl
adc
cld
adc
in
pop
stos
sub
icebp
sub
push
rcll
clc
and
dec
fwait
pushf
and
sbb
or
sbbb
mov
mov
lret
stc
push
xchg
ret
mov
cmpl
xchg
int3
push
mov
fnstsw
pop
add
push
xlat
or
inc
sbb
inc
jg
xchg
repnz
adc
pop
mov
clc
fldenv
out
movl
sbb
dec
dec
jl
in
fisubrs
adc
cmp
or
fwait
and
sbb
xchg
push
mov
lcall
fnstenv
push
xchg
out
push
adc
xor
sbb
sub
test
sub
rcll
xor
and
call
out
xchg
inc
mov
xchg
mov
fwait
lret
rep
push
insb
inc
mov
nop
into
enter
movsb
icebp
pop
stos
dec
cmp
and
jecxz
mov
popa
pop
call
pushf
add
xorb
push
sub
test
cld
sbb
xchg
lds
mov
rclb
int
sbb
cmp
inc
test
loopne
sub
out
jp
sub
and
xchg
jae
cmp
sbb
push
jnp
les
fisubl
cmp
push
fnstsw
xor
es
jge
lods
inc
jl
push
daa
xchg
mov
or
xor
jecxz
push
dec
loop
mov
inc
and
xor
xchg
imul
sub
fiaddl
outsl
dec
and
sbb
mov
mov
int3
pusha
inc
jnp
dec
fcoml
pop
fdivrs
adc
arpl
push
mov
scas
stos
adc
cltd
cmpsb
and
jbe
mov
fisttpl
add
mov
adc
sub
push
lock
addr16
add
les
mov
mov
daa
daa
inc
fwait
push
jle
out
imul
ret
loope
inc
xchg
sti
xor
aas
aaa
dec
or
xchg
dec
test
iret
sbb
cmp
push
insl
test
jns
xor
fwait
hlt
stos
outsb
js
push
inc
adc
mov
push
mov
dec
test
jl
jae
sbb
cwtl
push
out
adc
mov
aam
add
add
xchg
and
stos
mov
mov
insl
es
jne
sbb
cmp
sub
orl
insl
aad
nop
mov
daa
adc
mov
mov
fisttpll
dec
xor
mov
jns
dec
lds
inc
cmp
rcr
daa
dec
fldenv
je
es
lret
outsb
das
pop
int
push
inc
and
into
adc
out
andb
inc
and
pop
imul
test
mov
arpl
into
cmp
xor
cmp
lret
imul
jne
jg
into
arpl
add
cmp
sbb
pop
fildl
lock
cltd
pop
insl
movsl
dec
jbe
cli
lcall
ljmp
xor
cmp
lahf
in
outsl
fdiv
jle
sbb
add
adcl
dec
std
xor
outsl
add
adc
fnstcw
mov
jmp
cmp
mov
inc
pop
mov
push
cmp
aas
jl
ficompl
std
adc
outsb
daa
jns
add
jb
mov
dec
pushf
cmp
sub
xchg
pusha
sbb
adc
inc
fcmovb
ss
mov
test
in
mov
push
insl
cmp
mov
pop
fimull
cmp
cmp
xchg
outsl
mov
jp
inc
jge
in
mov
inc
icebp
lret
lods
das
or
jae
xchg
stos
xlat
out
push
popa
cltd
cli
push
push
pusha
rol
inc
mov
add
popa
pop
xchg
xrelease
mov
es
shll
xlat
lret
jp
test
aaa
lret
cmp
add
in
xchg
ljmp
stc
push
mov
testl
or
popa
mov
sub
sub
mov
and
imul
and
and
pop
push
xchg
sbb
mov
jp
ret
rolb
dec
fs
aas
push
stos
xor
cmc
popf
sbb
and
popa
cmp
movsl
xor
lock
mov
incl
daa
and
push
cmp
shll
mov
inc
add
xor
mov
clc
fcomi
add
add
add
stos
adc
jo
in
mov
jle
or
es
int3
mov
mov
lcall
loopne
mov
and
push
add
popf
dec
dec
sub
inc
and
inc
push
bnd
add
icebp
lock
popf
loop
pop
sti
push
inc
xlat
dec
mov
scas
cmp
dec
cmp
dec
push
push
push
and
jle
push
dec
jae
mov
push
fildll
mov
pop
sbb
mov
or
es
jo
sub
subb
aam
xchg
sub
adc
addb
rorb
call
cli
or
call
or
sbb
inc
cltd
call
call
add
hlt
icebp
jecxz
aaa
sub
stc
out
add
mov
pop
scas
movsb
adc
out
mov
lcall
ret
jle
testl
jg
loopne
loope
sbb
push
into
dec
and
repnz
adc
or
stos
leave
mov
loopne
mov
jae
xchg
loope
inc
shlb
dec
mov
pop
nop
adc
arpl
cmp
xchg
dec
mov
push
jmp
or
dec
add
loop
lahf
lret
lret
outsb
mulb
imul
bound
inc
jb
nop
inc
jne
stos
imul
lea
daa
or
push
jnp
jmp
pop
add
dec
stc
dec
pop
jecxz
repnz
dec
push
iret
les
xchg
out
push
xchg
ljmp
repz
insb
fs
data16
mov
rcl
bound
add
push
mov
mov
fldl
xchg
push
into
inc
cmp
xor
adc
ret
insb
je
xor
push
inc
out
dec
sub
push
das
test
xchg
jg
scas
mov
lds
or
je
mov
fs
ljmp
std
outsb
out
loope
cmp
ds
insb
imul
arpl
or
jmp
mov
sbb
xchg
or
mov
sub
jecxz
mov
xor
xchg
ret
rep
rolb
pop
xchg
lcall
les
notl
and
outsb
xor
fs
movsb
jb
in
in
repnz
popa
fsubs
cli
cli
ss
cmc
mov
mov
dec
out
pop
pop
lret
or
pusha
dec
jecxz
imul
test
aas
stos
pop
adc
imul
cmc
lret
mov
sub
kmovw
pushf
xor
sbbb
add
pop
addl
push
pop
mov
sahf
stos
mov
adc
inc
fbstp
or
iret
in
adc
sub
inc
lds
jbe
jo
push
jne
mov
push
sahf
fs
scas
sbb
mov
or
mov
jmp
pop
pushf
pop
mov
subb
jno
dec
add
xor
int
xor
jg
mov
inc
popf
or
adc
cmp
inc
or
cmovg
and
pushf
mov
mov
sbbb
sahf
and
es
mov
ljmp
mov
js
je
pop
pop
mov
scas
pop
or
out
test
ficompl
xchg
lcall
aam
int3
inc
inc
cli
mov
sar
mov
dec
xor
push
lret
push
sti
arpl
mov
mov
jg
fcmovne
iret
mov
arpl
jbe
into
jge
mov
dec
xor
insb
dec
mov
cs
xchg
mov
xchg
sub
xchg
call
cmp
adc
mov
cwtl
test
and
imul
sub
mov
mov
jnp
or
dec
test
sbb
loope
xor
jo
repz
cltd
sbb
jmp
xor
mov
lret
mov
ljmp
pop
cld
pop
call
sub
mov
push
insb
into
jmp
fsubr
scas
cmp
mov
rclb
pop
loopne
movsl
sub
aam
cltd
data16
test
push
int3
mov
xor
pop
test
sub
xchg
jne
pop
pusha
stos
cwtl
push
ret
ficomps
mov
icebp
push
adc
dec
inc
popa
mov
mov
mov
lret
dec
sub
stc
jns
shll
mov
fsubrl
adc
cld
jle
lods
insb
inc
test
cwtl
inc
mov
mov
add
push
call
lret
mov
push
outsl
push
adc
arpl
insb
call
divb
repz
mov
pop
cmp
cltd
ds
push
fsubs
dec
xchg
inc
adcb
int
or
sub
adc
in
mov
push
ret
pop
add
push
shlb
les
jns
xor
mov
mov
xchg
sahf
sti
cli
or
xchg
frstor
fists
jae
sub
dec
insl
cltd
jl
jl
dec
add
dec
mov
xor
xor
mov
bound
outsl
sub
xchg
stos
sbb
pop
mov
xor
add
pushl
cmpsb
out
lods
popf
xchg
mov
dec
stos
pop
or
pop
add
and
jge
dec
or
repz
out
ficoml
lret
out
jnp
pop
repnz
lcall
loopne
faddl
icebp
fnstsw
aad
aaa
inc
jo
dec
push
mov
fisttpl
repnz
shll
sbb
ret
outsl
fxam
sbb
int
ficoms
xchg
sarb
les
or
test
mov
in
pop
shll
cmp
pop
cld
adc
ror
mov
inc
pop
pop
fwait
popf
out
or
push
inc
jle
or
adc
test
pop
xchg
nop
sub
notl
jno
add
mov
push
mov
sub
push
mov
sbb
cmp
imul
arpl
in
xchg
out
inc
push
and
iret
mov
popf
jns
xchg
lods
bound
cmpsb
ret
or
out
mov
jl
out
jns
js
xchg
sbb
out
pop
sub
sbb
mov
xor
sti
add
flds
fs
ljmp
sub
ds
shll
dec
xor
pushf
mov
leave
push
or
push
inc
cs
and
jge
imul
movsb
xchg
fdivs
xor
adc
hlt
loope
mov
add
lahf
add
stos
inc
or
jnp
mov
add
inc
jbe
stc
inc
arpl
xchg
push
mov
pop
test
jge
ss
add
sub
arpl
mov
lods
mov
and
add
pop
sbb
cmc
popf
jnp
into
lock
test
into
sti
sub
fistps
add
dec
push
maskmovq
testl
and
cli
xchg
and
pop
inc
mov
ljmp
push
nop
add
mov
lock
mov
jmp
dec
ret
data16
fiadds
repnz
mov
xchg
xor
xchg
lret
adc
jnp
jno
cltd
and
mov
out
rorb
add
add
cmp
fs
add
dec
xor
loopne
xchg
or
ret
pusha
add
jg
xor
push
push
mov
and
out
outsl
mov
aaa
cmp
stc
xorl
loop
cmp
lcall
sbb
ret
aam
mov
cltd
ret
ret
inc
fsubrl
xor
lods
mov
lock
test
filds
jge
mov
xor
fnstcw
and
xchg
dec
cwtl
cwtl
aaa
out
lds
testl
mov
sarl
jecxz
push
jno,pn
jne
ss
popa
fs
push
pop
adcb
push
dec
pause
push
sbb
xor
xchg
jge
movsb
mov
int3
leave
out
inc
or
inc
out
and
aam
xor
clc
addr16
movsb
sub
lods
test
mov
fdivrs
mov
pusha
mov
mov
pop
jp
xor
hlt
pop
add
jle
in
mull
fwait
inc
je
pushf
mov
fstpt
pop
mulb
pop
push
pop
imul
mov
xchg
in
xor
in
mov
nop
pop
leave
rcrl
fnsave
mov
ljmp
and
in
adc
push
adc
out
out
divb
div
enter
lods
cmc
jge
clc
aam
mov
jp
lcall
sbb
icebp
andb
fdiv
pop
add
mov
mov
addr16
out
pop
roll
mov
cmp
push
sbbl
mov
push
mov
aas
xchg
pop
sub
insb
stos
jge
popf
mov
call
sub
pop
dec
mov
test
or
lret
and
xor
push
cli
mov
mov
fdivrl
bound
ror
clc
cltd
cwtl
mov
stos
lods
popf
push
xchg
leave
icebp
loopne
mov
fwait
decl
jb
add
bound
push
mov
stos
pop
popa
adc
addr16
mov
mov
fmull
push
pusha
mov
xchg
andb
rolb
cmc
fwait
mov
xchg
sub
iret
adc
jecxz
mov
add
loopne
pop
lods
adc
mov
jge
sahf
popf
leave
xor
adc
in
xchg
mov
or
popa
in
mov
inc
push
aad
dec
mov
jne
xor
lods
sbb
or
scas
dec
push
pop
cmp
mov
popf
mov
jl
xor
daa
movl
sbbb
pusha
lods
pop
xchg
stos
ja
xorb
inc
jmp
xor
mov
push
fiadds
ss
test
pop
and
test
jno
test
daa
shlb
cld
cld
insl
sub
push
jae
call
dec
out
cli
bound
test
sub
subb
out
divb
add
add
sahf
adc
add
sbb
jg
push
inc
ret
jb
mov
mov
mov
mov
jb
xor
nop
sti
push
push
mov
mulb
icebp
push
cmp
sti
xor
mov
pusha
xor
adc
mov
addr16
arpl
push
int3
push
sbb
jl
push
adc
les
xor
sti
lods
mov
rcrb
iret
lods
aam
and
shll
out
inc
xor
popa
dec
xor
bound
aam
jbe
jnp
call
outsb
jl
imul
shlb
loope
inc
adc
outsb
inc
shll
pop
pop
fadds
sub
out
mov
in
pop
aam
ja
dec
xlat
or
sub
fsubl
int
insl
repnz
nop
sbb
ds
pushf
xor
mov
scas
mov
je
xor
dec
lcall
pushl
fwait
mov
lahf
pop
cs
push
dec
fmul
das
mov
ljmp
out
mov
jae
xor
mov
inc
mov
fildll
and
push
jg
int
xchg
cmc
pop
rolb
stos
add
xor
inc
ja
test
pop
outsb
test
scas
popa
imul
sti
dec
mov
adc
aas
cmpsb
rclb
adc
xchg
fwait
pop
cmp
cmp
in
mov
and
inc
inc
or
mov
adc
jns
stos
mov
mov
int
xor
int3
pushf
xchg
insl
ds
sub
dec
xchg
mov
ljmp
push
incb
daa
aas
test
insl
push
fnstcw
cli
jle
push
xor
push
dec
dec
add
cmpsb
loopne
aas
mov
es
ljmp
xchg
inc
xorb
in
or
sub
jl
pop
cmpsb
mov
jo
xchg
or
sub
insb
pop
dec
movsl
les
rcrb
mov
lret
lods
fdiv
mov
cmp
jg
mov
loop
aaa
pop
jg
pop
dec
pop
iret
fldt
mov
bound
icebp
and
mov
jb
in
test
in
mov
pop
or
pushw
cmc
push
rol
cltd
add
sarb
mov
mov
adc
dec
lcall
in
loop
mov
adc
ss
push
add
pop
xorl
push
clc
xlat
into
aas
sub
pop
inc
adc
sub
mov
mov
dec
pushf
lock
adc
loope
mov
sbb
mov
scas
jns
push
cmp
sarl
cmpsb
xor
out
leave
jns
mov
xchg
ds
push
lcall
out
loope
fwait
xor
cld
lock
popa
mov
xor
negb
mov
int3
pop
std
mov
dec
insb
ret
shlb
mov
xor
bswap
je
in
je
sub
add
lock
push
pop
call
push
mov
mov
inc
dec
rorl
sbb
mov
xchg
test
jecxz
dec
orb
adc
aaa
test
sbb
push
inc
push
pusha
push
js
mov
popa
and
mov
add
and
repz
lcall
cmp
in
inc
mov
loopne
inc
sbb
jp
mov
ss
pop
insb
push
mov
popf
xchg
push
into
dec
iret
data16
dec
jb
mov
js
add
sbb
xchg
mov
call
adcb
decb
js
stos
jle
xchg
cmp
jmp
jg
cli
addb
hlt
xchg
inc
lds
sbb
pop
test
push
xor
addr16
sbb
push
pop
out
scas
js
dec
pop
mov
mov
or
mov
xor
mov
ljmpw
xor
popf
ss
cmc
insb
mov
cmpsb
scas
cmpsb
sahf
adc
iret
xchg
notb
push
iret
mov
cmc
xor
loope
ret
es
es
push
leave
pop
insl
lret
jne
sub
jbe
es
test
sbb
push
lcall
scas
or
pop
repz
fcmovne
cmp
push
adc
data16
sbb
gs
adc
and
aas
cmpb
fnstcw
fs
mov
inc
stos
call
xchg
xor
out
clc
hlt
scas
jecxz
enter
test
mov
inc
add
dec
sbb
or
mov
cmpsl
pop
out
movsb
cmp
cld
jp
push
lods
shr
dec
enter
fmul
push
sbb
popa
sti
push
jge
cwtl
mov
jno
cmp
in
das
push
mov
and
cmpsb
fsubl
pusha
mov
sbb
aaa
sti
sbb
push
fs
pop
fwait
dec
call
adc
stc
mov
adc
mov
mov
lahf
movsl
adc
add
cli
and
pusha
shr
adc
or
cli
inc
int
not
in
push
fisubl
in
movsb
lret
push
mull
nop
jle
mov
add
fdivl
std
movsb
xchg
xchg
sti
nop
add
pop
aam
dec
scas
adc
jb
int3
dec
aam
ljmp
mov
xchg
add
sub
push
dec
mov
test
sbb
sysret
and
repnz
xor
mov
in
mov
loope
das
xchg
fsubs
nop
xor
cmpsb
pusha
mov
push
shrl
add
outsb
out
xor
push
push
lret
cmpsl
add
and
call
and
jbe
push
mov
lea
loopne
or
ljmp
jb
push
int
xor
mov
notl
push
dec
jbe
xor
sub
lahf
mov
outsl
mov
and
push
mov
frstor
mov
imul
sbb
icebp
outsl
les
mov
outsb
addb
int3
scas
int3
xor
int3
int
xchg
mov
jno
cs
lds
movsb
insb
xchg
pop
les
hlt
jb
sbb
mov
mov
inc
faddl
cwtl
scas
jle
and
in
adc
ja
fidivs
mov
in
inc
xchg
mov
fidivrl
xchg
push
call
mov
sub
orl
dec
sbb
pop
addr16
xor
xchg
adc
sub
nop
loopne
outsl
add
hlt
nop
mov
add
jge
or
stc
or
mov
xor
xchg
lock
in
jmp
imul
test
call
pop
push
dec
sbb
int3
mov
rolb
mov
scas
lea
jecxz
mov
mov
and
and
stos
andl
mov
ljmp
test
orl
aad
outsl
movsb
sbb
cwtl
or
roll
mov
outsl
adc
jg
lds
clc
add
fidivs
xchg
test
or
mov
adc
repz
sub
jmp
ss
mov
push
jnp
pushf
pop
daa
cmc
jmp
mov
mov
hlt
adc
fs
adc
in
cmp
aaa
or
mov
add
cmp
gs
orl
mov
push
sbb
clc
mov
mov
movsl
in
push
dec
repnz
loopne
dec
pushf
lock
iret
push
loope
test
and
ja
add
dec
cld
jmp
add
cmpsl
jns
lret
inc
ret
imul
jae
cmp
ss
loop
push
mov
adc
pop
mov
ds
mov
gs
inc
test
pop
rcrb
mov
jo
inc
in
xor
loop
and
enter
sub
dec
insl
add
pop
or
mov
lea
dec
inc
xor
cmp
push
pop
mov
out
xchg
xor
push
add
mov
divb
inc
mov
inc
lock
or
scas
test
xchg
or
add
sbb
les
jnp
leave
xchg
pusha
and
push
int
repz
imul
and
shlb
push
adc
dec
inc
xchg
repnz
outsb
mov
jge
je
int3
inc
mov
popf
insl
aas
jo
or
jae
and
mov
pushf
ljmp
movsb
mov
xchg
fdivl
jp
lods
xchg
xchg
sbb
notl
inc
pop
mov
je
imul
inc
mov
mov
aas
cmp
sub
lods
jecxz
into
xor
shrb
idivb
rcll
fadds
pop
popf
add
pop
cli
fs
sahf
push
mov
or
sub
mov
mov
and
enter
movsb
mov
fists
sub
rol
push
pop
sub
int3
ret
mov
insl
fidivrs
leave
add
mov
xchg
and
jle
cli
fistpll
mov
hlt
in
xchg
push
rcll
mov
adc
sbb
imul
insb
push
test
sbb
mov
mov
gs
xor
popa
pusha
enter
mov
push
push
mov
mov
sti
xchg
mov
sti
inc
in
adc
push
dec
pop
mov
jno
das
jae
js
mov
lds
in
je
test
nop
rcrb
add
jne
push
xor
push
fdivr
pop
mov
es
mov
jle
jge
push
aas
xchg
hlt
dec
mov
loope
movsb
xchg
dec
subl
test
inc
rol
in
sub
push
mov
add
cmpsl
jns
sub
arpl
xor
push
ljmp
rclb
dec
test
or
sti
push
inc
loope
gs
loope
iret
sub
or
jb
dec
test
ja
fimull
into
nop
test
xchg
xor
xchg
dec
xchg
lret
pop
mov
movsb
aaa
faddl
xor
mov
stos
cmp
xor
jae
pop
inc
push
bound
fsubs
test
sbb
push
pop
mov
popa
mov
stos
cmc
cltd
leave
cli
push
cmp
add
addl
insl
jb
shlb
mov
cmp
xchg
fucomi
xchg
sbb
jb
push
sti
and
mov
fdivs
test
pop
addr16
mov
xlat
cs
mov
fidivrs
or
jae
lods
push
or
and
add
imul
jne
adc
pop
xchg
idivb
fisubs
mov
ret
repz
jecxz
dec
jb
add
and
sub
fidivrs
addr16
push
insb
shr
sbb
lock
push
sbb
cmp
cmp
frstpm(287
dec
fisubs
and
neg
jmp
pop
sbb
imul
shlb
jns
seta
push
jmp
mov
jb
xchg
dec
push
sbb
jp
push
add
mov
enter
dec
and
xchg
into
jae
mov
add
pop
jg
dec
pop
sub
jb
lret
sub
cmp
hlt
repnz
sbb
dec
pop
aam
sti
xor
push
popf
js
adc
pop
or
add
addr16
cmpsl
into
lock
add
stos
inc
lahf
movsb
cmc
fdivp
daa
and
jp
movsl
int
out
mov
xchg
jge
push
dec
outsb
pop
aad
push
xchg
in
cmp
push
mov
daa
stos
adc
dec
hlt
cli
lret
mov
and
cmp
and
int
xorl
jp
jecxz
adc
xchg
jecxz
nop
cmp
lock
fidivrl
les
xlat
fnstcw
nop
jl
push
and
and
push
xor
faddl
sub
cwtl
adc
fnsave
insl
stos
fdivrl
ret
mov
mov
mov
dec
inc
faddl
test
inc
mov
repz
and
stos
mov
adc
sbb
mov
lods
addl
loope
pop
gs
pusha
sbb
icebp
insb
push
cli
push
bnd
test
aad
xchg
xor
stc
pop
sub
adc
dec
fiadds
pop
lahf
shlb
movsl
jmp
inc
adcl
sub
mov
mov
clc
jbe
sub
push
lods
xchg
into
cmp
je
xchg
pop
loope
lret
es
adc
sahf
add
aas
std
test
das
and
jnp
xor
jmp
imul
call
push
in
outsl
jns
sub
out
push
negb
push
stos
test
outsl
outsl
mov
xor
sarl
push
imul
repnz
push
jbe
sbb
mov
mov
sub
ficoms
push
mov
and
out
addb
int3
xchg
mov
in
divb
arpl
xchg
xor
loopne
addr16
sbb
ljmp
xchg
dec
cmc
pop
add
mov
stos
scas
and
xchg
lahf
out
mov
cmp
pop
lcall
mov
add
xchg
in
test
mov
jle
cli
xchg
insl
xor
test
mov
pop
andb
test
or
sbb
sub
movsb
push
mov
mov
xor
es
out
xor
add
mov
mov
outsl
and
xchg
insl
insl
scas
fimull
cltd
adc
pop
inc
sbb
xchg
adc
xchg
xor
lods
mov
dec
movsl
push
push
xchg
ret
fst
mov
fs
int3
imul
dec
dec
sub
xchg
xchg
or
pop
xlat
icebp
clc
out
jne
jns
int
pop
or
dec
push
cmp
cs
sub
mov
lahf
add
xchg
mov
movsb
pop
xor
ficoml
cmc
repz
call
sbb
in
stos
mov
and
xchg
add
push
push
rolb
jmp
ficomps
sub
pop
mov
or
shl
add
insb
data16
fsubp
jl
sbb
loop
inc
jecxz
sbb
pop
adc
xor
punpckldq
ficoms
out
test
adc
or
out
push
add
andl
mov
repnz
cltd
aaa
insb
xchg
in
push
mov
test
jecxz
outsl
xor
cwtl
outsb
movsb
xorb
mov
movsb
mov
stos
push
mov
out
stos
popf
fsub
mov
pop
mov
cmpsl
fs
sbb
mov
lods
xchg
loope
hlt
in
or
mov
out
mov
mov
pop
orb
popa
add
dec
sbb
xor
push
mov
or
sti
fisubs
ss
cmp
pusha
lahf
jge
in
cmp
fistps
jp
outsl
faddl
mov
jle
cmp
clc
pop
addl
jg
or
ds
mov
out
daa
sub
insb
dec
mov
push
mov
lods
dec
imul
and
xchg
xchg
pop
xorb
pop
adc
inc
cmp
fadds
dec
sub
jle
cmp
das
cmp
pop
mov
add
stos
or
mov
lret
jb
mov
dec
insl
mov
scas
hlt
push
clc
sbb
and
data16
aad
cmp
ds
xchg
rolb
movsl
pop
mov
mov
lcall
mov
dec
xor
mov
aad
std
mov
arpl
mov
ljmp
xor
popf
mov
sbb
push
sub
mov
and
adc
call
paddq
inc
push
xchg
shlb
fdivl
addr16
fs
int
pop
in
aas
sbb
shlb
xor
dec
jp
mov
jl
insb
dec
fwait
cwtl
push
mov
pushf
aam
jge
push
into
push
outsl
cld
pushf
pop
jecxz
fs
cmc
inc
outsl
pop
imul
sub
xor
or
inc
push
xchg
ljmp
jl
les
fldcw
adc
cld
dec
imul
push
cmp
andl
jmp
imul
shrl
pop
daa
jnp
jns
inc
lret
mov
jecxz
shlb
movsl
cmpsb
xchg
jnp
insl
pop
daa
xchg
and
inc
mov
add
arpl
fsubr
jno
fcoml
lods
je
mov
xor
sub
inc
dec
mov
dec
mov
mov
sbb
jne
out
ret
adc
cmpb
shll
ds
push
adc
divl
or
ja
ljmp
push
stos
js
sahf
pop
cmp
xchg
push
mov
mov
push
push
popf
daa
out
imulb
jnp
pushl
lret
gs
ljmp
lds
clc
xchg
add
ja
push
sub
xchg
out
push
xchg
adcb
bound
icebp
or
pop
xchg
adc
jae
cmp
add
xchg
out
pop
and
sbb
inc
mov
andb
int3
lods
loop
push
dec
les
mov
cmc
loope
out
ds
jle
mov
adc
fimuls
stos
imul
or
std
and
cmpsl
sub
es
push
insl
cmp
into
mov
icebp
cmc
push
adc
sbb
push
cli
mov
inc
leave
cltd
rcll
inc
movsb
enter
ret
mov
mov
jle
dec
mov
jle
push
ret
mov
arpl
int3
cmpsl
sub
xchg
lods
les
shrl
cmp
ret
int
das
sahf
jmp
sub
cmp
adc
jno
jge
fucomi
ds
call
xchg
mov
fwait
ss
inc
add
pand
add
pop
inc
fcmovb
mov
inc
insb
mov
mov
or
enter
sub
inc
mov
pop
or
add
xor
mov
mov
fildll
sub
lock
add
fldenv
shll
or
cld
sbb
rcrb
in
xor
mov
outsl
lds
xchg
data16
jns
loope
adc
imul
xor
mov
mov
fstl
dec
nop
bound
fildl
ror
rcl
notb
in
sbb
imul
movsb
mov
sbb
inc
jbe
mov
movsb
mov
dec
orl
lret
jae
stos
xor
test
loope
or
sub
lock
sub
loope
cmpb
data16
daa
repnz
jno
push
mov
add
mov
je
fisttpl
mov
adc
into
dec
cmc
fwait
test
sub
xchg
mov
jne
cmp
popf
pop
xor
mov
jg
sub
xchg
out
xchg
xor
cld
shrb
mov
in
xchg
ja
mov
lret
xor
add
popf
dec
xchg
scas
fcmovb
leave
jno
imull
pop
shll
int3
push
sub
push
jo
aas
dec
bound
jbe
lods
xor
xor
decl
mov
int3
dec
jnp
lahf
or
into
or
add
ficomps
add
push
daa
out
jge
add
rorb
aad
sar
pop
pop
dec
xor
and
mov
xchg
jb
shlb
push
xorl
repz
adc
jo
shll
test
sub
xchg
imul
adc
sub
es
add
addb
addr16
push
inc
movsb
insl
push
or
xchg
adc
mov
mov
sub
push
stos
stos
add
or
mov
loopne
ret
ds
roll
inc
shrl
mov
dec
sub
stos
xor
pop
inc
int
ds
call
inc
jecxz
out
ljmp
hlt
jg
inc
sub
bound
xor
cmpsb
jo
es
rcrb
or
aas
mov
xor
push
outsb
inc
sbb
cs
scas
jns
repnz
es
sbb
cs
push
cmp
adc
fs
cmpsb
ret
mov
mov
ficompl
and
xchg
fisttps
cmpsl
push
xchg
add
std
xchg
cmpsl
test
pop
ret
mov
in
jp
out
adc
mov
xor
faddl
aas
and
icebp
sub
call
dec
adc
mov
test
adc
pop
push
add
xchg
dec
pop
or
xor
cmp
movsb
and
sbb
ljmp
aaa
pop
xchg
in
test
lahf
pop
push
les
adc
outsb
stos
mov
call
and
add
ss
sti
xlat
adc
xor
push
or
int3
xor
fisubrs
dec
inc
cmp
adc
popa
pusha
sub
jno
cmp
into
hlt
mov
jae
or
cmp
xchg
adc
out
or
aaa
aad
dec
pop
adc
push
lea
cltd
cmp
dec
mov
xor
mov
les
sbb
sub
clc
jbe
inc
cltd
aaa
push
stos
add
mov
cmpsb
jne
out
cwtl
data16
push
xor
mov
and
sti
xchg
inc
jg
adc
js
roll
xchg
daa
or
or
hlt
xor
sbb
cltd
pop
pop
mov
and
pop
nop
fs
ffree
mov
adc
jge
fwait
xchg
cmp
mov
inc
and
jmp
mov
mov
mov
push
or
pusha
je
int3
inc
fcmovb
mov
jbe
inc
xor
mov
pusha
jle
or
pop
shlb
mov
cmp
bound
xor
pushf
sub
jns
out
aaa
shrb
hlt
in
cmp
jmp
inc
into
xchg
adc
pop
daa
out
int
jmp
xor
int3
cmpsl
cld
aad
dec
orl
pop
pop
addr16
sahf
sbb
rorb
les
push
add
xor
les
xchg
inc
mov
hlt
and
aaa
pop
popa
aaa
aas
or
fidivs
push
push
add
popf
stos
adc
sahf
or
popa
mov
shrb
sti
cmpb
inc
ds
cmp
sub
mov
pop
jo
push
ret
add
fisubrl
stc
mov
xchg
jne
fisubrs
push
out
aaa
dec
push
shrb
test
inc
pop
stos
stc
push
lock
sbb
push
loope
out
cmpsl
mov
ret
or
out
or
add
pop
mov
mov
fldcw
popf
and
pop
and
xchg
shll
call
outsl
pusha
int
lods
inc
cmp
adc
xchg
mov
xlat
inc
push
adc
sbb
cli
inc
and
cmpsb
adc
sub
rclb
xchg
je
inc
cs
sbb
pop
xor
mov
cmp
in
aaa
push
jp
jp
fdiv
imul
inc
push
loop
mov
cmpsb
cmpsl
cmp
fucomi
xchg
int
lahf
xor
fdivl
sbb
test
test
xchg
mov
jno
adc
shrb
add
jno
mov
shlb
sub
rclb
xor
andl
xorb
inc
and
add
push
adc
jp
mov
and
sti
call
pusha
and
sub
daa
or
or
je
cmp
sub
sub
pop
jge
pop
add
inc
jmp
repz
leave
push
aaa
add
fstpt
into
and
pop
inc
insl
dec
sbbb
stos
cmpsl
jo
inc
divl
push
jb
pop
in
xchg
and
iret
clc
sub
xchg
mov
popa
into
cmp
or
insl
loopne
mov
cmpsb
mov
js
rcrb
shlb
mov
xlat
out
xor
push
popa
mov
cmpsb
iret
popa
ljmp
sbb
mov
rol
lods
stos
mov
cmp
scas
and
in
scas
sbb
int3
incl
push
das
ss
and
mov
cs
aaa
test
lock
out
cmp
arpl
inc
pop
inc
movsl
loopne
outsl
repnz
jne
xor
push
pop
je
addl
fldt
outsb
push
test
mov
push
push
xchg
shrl
cs
pop
xor
aam
shll
sbb
or
pop
ja
dec
push
push
cmp
std
loop
movsl
jge
jmp
fwait
enter
sbb
jg
in
test
and
sbb
cld
mov
push
es
xchg
out
add
fdivl
add
fildll
jb
lcall
cld
icebp
les
jecxz
push
xchg
jo
jmp
inc
popf
and
mov
jp
fnstsw
push
daa
ja
popl
das
mov
sarl
sti
stos
sahf
jp
inc
std
mulb
clc
mov
inc
push
out
in
dec
cmp
stos
jmp
stos
cmc
xchg
mov
ucomiss
stos
push
test
mov
push
xchg
push
pop
repz
add
dec
popf
push
in
ljmp
mov
test
adc
sahf
xor
lods
push
ss
xchg
andl
or
das
lahf
jge
data16
push
xchg
inc
int3
mov
scas
inc
testl
rcr
cmp
push
mov
xchg
xchg
mov
jo
xchg
xor
sti
push
rorl
fwait
aam
icebp
add
cli
mov
pop
jmp
insl
inc
ss
fsubrs
hlt
cvtpi2ps
fdivl
inc
or
fildl
push
ret
scas
imul
test
cmp
jbe
adc
cmp
sub
adc
jg
pop
xor
jmp
cmp
lret
xchg
xchg
mov
sub
pop
mov
lods
and
jg
adc
push
hlt
lods
jle
roll
and
test
sti
pop
ja
mov
addr16
pop
fs
scas
les
sbb
jns
pusha
sbb
leave
mov
mov
cmp
cmpsl
shrl
xchg
pop
pop
cmc
pop
push
cmp
ljmp
xor
xchg
into
xchg
ds
push
les
xlat
add
sahf
imul
rolb
ss
popa
xor
pop
jbe
imul
cwtl
pusha
ss
std
mov
push
mov
js
sti
cli
jmp
sbbl
ds
cmpsb
sub
test
and
idivl
std
out
fisubs
loope
clc
shlb
push
cmp
stc
cs
insl
shlb
dec
add
pop
div
push
adc
sub
mov
pop
sti
cmpsb
loope
adc
push
sbb
and
mov
pop
mov
jns
cmp
push
sub
aas
enter
shlb
adc
jb
sub
jae
xchg
sub
inc
lcall
lds
out
pop
loop
jp
inc
mov
cmp
cmp
out
jg
cmpsl
sub
rcll
xchg
sub
cli
sbb
jl
iret
in
hlt
icebp
cwtl
repz
scas
mov
ljmp
adc
aad
stc
int3
es
gs
cmp
pop
jge
xor
in
popf
push
cwtl
shrb
aas
jecxz
mov
loop
cmp
add
jnp
rolb
or
cmp
xchg
cmpb
xchg
gs
mov
xor
fsubp
cld
out
mov
and
sbb
mov
sub
imul
cwtl
imul
data16
sub
sbb
int
test
cmp
rcr
xchg
mov
outsl
cmpsb
das
addb
sub
sub
fildll
ffree
push
popa
insl
mov
dec
bound
in
adc
test
pop
movsl
and
inc
pushw
inc
fs
mov
mov
notl
mov
cmp
pop
xor
enter
dec
mov
fcoms
scas
data16
cmp
aaa
ljmp
mov
call
jge
movl
popa
pushw
jle
stos
movd
inc
lock
movsl
sub
mov
or
ljmp
add
mov
cltd
cmp
push
mov
cmp
mov
pop
add
insl
mov
sahf
loope
fimuls
int3
cltd
inc
fldl
jg
icebp
mov
cs
mov
jno
imul
jns
mov
out
or
lods
xchg
sub
fld
das
mov
push
cmpsb
cmpsb
xor
cmpsb
sub
dec
lods
mov
cmpb
mov
xchg
mov
or
jbe
cmpsl
sub
pusha
std
adc
cmp
stc
stc
nop
add
mov
fdiv
jge
out
rolb
in
xor
lahf
mov
xchg
insb
xor
test
into
xor
mov
and
mov
mov
mov
movsl
lcall
or
inc
mov
push
push
push
inc
out
xchg
test
xchg
push
jl
scas
aam
insl
in
rolb
in
call
cmp
imul
jge
pop
adc
dec
sarb
jge
out
into
repz
mov
xlat
push
mov
push
addb
aas
popf
jge
mov
push
jp
add
cmp
ret
fdivrs
sub
fcmovne
pop
int3
push
ss
jb
cmc
notb
pop
addb
mov
add
mov
and
mov
std
jne
in
shll
into
enter
pop
xchg
lods
in
sub
loopne
mov
cmp
dec
mov
adc
fisttps
flds
insl
sub
shlb
xchg
fstpl
inc
inc
push
mov
ss
mov
fsubrl
pop
and
loopne
sbb
ds
add
mov
or
imul
xor
pop
jge
fdivr
xor
lock
lcall
adc
iret
cmp
pop
stos
jb
xor
cmc
outsb
mov
out
or
pop
pop
mov
adc
cltd
mov
mov
mov
jo
xor
jno
repz
and
add
out
mov
call
enter
mov
call
addr16
mov
mov
hlt
jns
mov
lock
popa
rcl
add
inc
repz
stos
test
fdecstp
andl
repnz
std
pusha
add
pop
into
or
mov
sbb
stos
add
loopne
outsl
push
mov
mov
sbb
jmp
in
inc
dec
push
rolb
lret
notl
add
xor
push
dec
jns
sbb
scas
jnp
jl
inc
in
and
mov
xor
cwtl
pop
inc
mov
dec
insl
mov
push
adc
arpl
arpl
adc
pop
shlb
int
outsl
pusha
cmpb
inc
dec
mov
jno
out
call
fsubrs
mov
sub
out
mov
xchg
addl
xchg
ret
mov
leave
das
lods
jbe
out
inc
adc
roll
xor
add
sub
push
jne
xor
xchg
and
inc
dec
inc
out
call
fdivr
mov
add
jbe
dec
push
xchg
jle
andb
dec
sub
stos
jg
cltd
push
mov
movsb
addb
clc
cmp
cltd
push
mov
xchg
imul
mov
movl
int
or
xor
adc
lds
jl
cmpsl
imul
pop
mov
xchg
push
add
ja
cmp
scas
mov
push
inc
xchg
das
and
test
or
push
jnp
sub
aad
lret
imul
rol
mov
xchg
push
jns
fildll
and
mov
data16
loope
pop
dec
repnz
pop
add
es
add
ss
xchg
clc
mov
mov
push
or
insb
push
mov
leave
jecxz
lcall
out
lods
sub
orb
mov
movsb
scas
sti
mov
lea
mov
sbb
nop
mov
loope
mov
dec
dec
xchg
or
xor
lds
cmpsb
movsl
cs
loopne
pop
push
sbb
inc
pop
and
mov
jne
cmp
js
add
cmpsb
popa
sub
in
pop
xor
gs
dec
mov
jno
aam
pop
xchg
dec
js
frstor
inc
div
call
lock
notb
hlt
sub
out
imul
adc
rolb
out
xchg
popl
jg
loopne
fisttpll
adc
lock
imulb
jle
jnp
jb
movsb
sbb
dec
mov
cltd
xlat
mov
xchg
clc
testb
pop
in
jb
cmc
test
jg
jb
repz
dec
repz
in
xor
push
jbe
mov
lds
and
mov
cld
jae
cmpl
xchg
mov
icebp
sti
les
jno
aaa
cmp
popf
mov
pop
pop
sbb
push
push
push
cmp
lods
popa
or
rcrl
push
cmc
rolb
pop
push
push
mov
adc
repz
cs
ds
shl
cs
pop
in
mov
stos
lock
push
mov
stos
rcrl
mov
push
sbb
sub
cld
je
imulb
pop
sti
int
daa
int
leave
pop
lds
stc
in
cld
popf
iret
mov
hlt
jne
scas
movsl
push
mov
fsub
xor
push
mov
shrb
jcxz
and
testb
outsl
shr
add
fiadds
jp
mov
test
sub
daa
in
imul
mov
into
out
jns
mov
inc
cmp
cwtl
push
dec
mov
and
jae
and
mov
and
mov
clc
es
inc
daa
sub
jge
jnp
jnp
outsl
lahf
cld
dec
es
jo
jle
jb
push
imul
mov
stc
ja
rcll
mov
mov
jo
cltd
cmp
push
dec
inc
imul
outsl
sub
fsub
or
and
pop
inc
mov
movsl
and
mov
adc
mov
mov
push
adc
imul
inc
dec
mov
xlat
or
inc
sub
mov
cli
sub
xor
ja
jae
pop
adc
inc
outsl
fbstp
das
lret
inc
test
orb
pop
mov
std
jge
cmp
jae
movsb
dec
ret
mov
loop
ja
clc
push
lods
outsl
lea
xor
inc
ss
dec
int
sbb
cmpsb
outsb
xchg
mov
rolb
loop
sub
jle
shlb
cld
mov
hlt
lock
mov
pop
dec
test
mov
idivb
xchg
sbb
push
sbb
or
mov
loope
pop
xchg
subb
lahf
cmpl
je
mov
pusha
dec
popf
andb
xor
xorb
inc
xor
adc
sbb
in
arpl
jg
mov
aas
jbe
adc
inc
jns
imul
dec
movsl
js
call
jge
f2xm1
sbb
inc
outsb
orb
mov
pop
imul
das
mov
sub
pop
sti
es
sub
add
adc
stos
lcall
mov
imul
xchg
push
jp
mov
stos
icebp
arpl
ljmp
mov
sub
jno
scas
pop
jg
inc
mov
out
dec
push
dec
cwtl
subb
push
jo
cmp
pop
je
inc
andl
pop
sub
mov
std
iret
cwtl
outsl
shlb
adc
rclb
sbb
fcoml
sub
jno
dec
insl
or
push
add
in
cmp
pop
mov
xchg
adc
call
idivb
popl
xlat
xchg
dec
fisttpl
arpl
or
cmp
outsb
rcrl
cld
mov
jl
push
enter
dec
lcall
xchg
xchg
mov
in
xchg
dec
sub
pushf
lea
insl
popf
std
fdivrl
and
sti
rolb
fdivrl
bound
pop
dec
jl
in
int3
mov
jle
je
mov
dec
jns
mov
stos
push
fistps
insb
cmp
mov
ret
push
mov
fadds
mov
and
jae
jae
mov
and
loope
popa
mov
jg
add
fwait
dec
add
or
or
popa
push
fstps
aam
shlb
dec
div
mov
int
mov
sub
xor
sahf
jmp
cmpb
and
mov
mov
lahf
int
hlt
ret
negl
outsb
pop
dec
xchg
xor
pop
push
iret
das
sub
je
and
sbb
popa
mov
cmpsb
add
inc
add
insb
ss
add
ret
mov
stos
insl
sahf
out
mov
cmp
cmpsb
ffree
notb
cmp
add
fildl
adc
jb
fstl
cli
icebp
mul
sbb
cld
pop
and
stos
push
xchg
into
test
subl
and
sti
insb
push
pop
add
icebp
imul
xchg
outsl
cmp
cmpsb
inc
test
and
inc
cmp
mov
stos
nop
cwtl
test
sub
and
jmp
scas
cmpsb
jns
loop
and
jo
fdivs
push
lods
inc
mov
dec
pop
cs
xchg
loope
adc
mov
aaa
inc
fistpll
sahf
inc
sahf
cmp
pop
mov
shrb
rclb
fsubs
push
dec
jle
or
inc
rcll
push
dec
jo
push
insl
sbb
lcall
fwait
xchg
out
adcl
pop
ds
outsl
leave
popa
mov
ja
sbb
les
and
sbb
mov
push
aaa
iret
or
lahf
mov
out
xchg
into
push
ret
add
sbb
and
push
gs
das
in
pusha
out
aad
repz
add
cmc
xlat
sahf
out
cmc
push
pushf
xor
xchg
dec
sub
dec
sbb
pop
dec
xor
pop
scas
mov
lret
je
mov
sti
mov
cmp
cwtl
push
inc
icebp
les
adc
enter
arpl
rorb
pushf
pop
lea
out
mov
push
stos
aam
sti
cli
mov
leave
mov
popf
jbe
cltd
xor
mov
add
adc
lock
and
loopne
adc
xlat
jbe
fcompl
pop
mov
xor
fsubrs
dec
inc
mov
mov
jle
cld
jle
inc
cmp
push
mov
jbe
or
cs
or
int3
sub
imul
and
jl
cld
xor
rcll
test
or
inc
enter
frstor
add
stos
jbe
sbb
testl
shrb
push
sbb
lahf
lcall
lea
pusha
push
je
dec
out
aam
jle
imul
sahf
dec
push
fsubr
out
stos
fs
hlt
repnz
pop
xchg
jecxz
lock
mov
insl
add
xchg
or
dec
jne,pt
push
fcoms
repz
xchg
push
daa
xchg
pop
imul
dec
imul
inc
mov
mov
push
stos
loop
dec
push
jg
sub
add
cltd
aad
adc
dec
hlt
sbb
mov
xchg
scas
xor
repnz
jns
or
lds
xchg
cwtl
cmp
mov
fistps
pop
iret
jb
pop
adc
pop
pusha
iret
jae
or
jmp
mov
jnp
je
movsl
and
shlb
jp
jbe
dec
dec
pop
xchg
mov
mov
imul
lret
insl
decb
xchg
cmp
sub
mov
in
imul
push
clc
and
and
ss
xlat
pop
sahf
push
xchg
push
and
lret
fiaddl
lock
jns
adc
pusha
xchg
and
mov
sub
adc
cmc
lret
cmc
clc
loope
xor
mov
pusha
scas
fs
xor
loope
sbb
mov
leave
pushf
or
sbb
ret
out
gs
in
add
sbb
cmp
scas
cltd
je
push
jg
data16
daa
stc
pop
fstl
int
add
push
pop
push
out
xchg
insb
adc
push
scas
xchg
pop
jecxz
jl
in
lds
mov
in
ss
dec
dec
xchg
push
idivb
jl
lret
jmp
orl
inc
cmpb
outsl
or
inc
and
push
jb
sbb
jns
add
fcmove
cwtl
adc
fnsave
test
test
push
sarl
jno
ss
mov
jne
adc
inc
arpl
pop
dec
fimuls
xor
pop
or
push
xchg
dec
inc
frstor
outsl
push
js
bound
repz
xlat
push
cld
popf
int3
mov
stos
inc
push
lods
mov
ret
xor
dec
mov
push
scas
xor
dec
sahf
ret
xchg
out
lcall
sub
sub
ja
pop
push
or
aam
fdivrl
loop
push
xor
iret
jno
push
mov
cmp
mov
jae
les
inc
aad
and
fdivs
mov
cmpsl
mov
movsl
call
push
fs
gs
mov
sbb
rol
mov
es
inc
inc
leave
cmpsb
push
roll
xor
sub
sub
cmpsl
jb
data16
push
mov
xlat
jne
fwait
jg
mov
iret
mov
xchg
sub
insb
pushf
inc
cmp
jecxz
or
or
fstps
fisubrs
ret
bnd
push
add
xlat
pop
push
push
and
xor
repz
mov
xchg
mov
dec
fsubl
out
lcall
jmp
in
jle
fstpl
mov
xlat
aad
inc
sbb
xor
fcoms
push
push
sahf
inc
xchg
xor
xlat
mov
scas
push
jnp
jbe
insb
xchg
enter
mov
sbb
dec
loopne
xchg
cli
xor
push
push
mov
cmp
mov
aas
jne
hlt
cmpsl
repnz
and
int
out
rcl
in
and
pop
sti
out
scas
std
movsb
das
push
mov
incl
xchg
iret
addr16
jns
mov
cmp
stos
pop
sbb
test
mov
loop
mov
or
jl
push
inc
xor
jge
leave
inc
test
inc
loope
in
xor
cmp
and
xor
dec
pop
xchg
xor
test
xor
inc
test
cmp
test
jnp
ret
jns
stos
stos
insb
adc
xor
dec
loopne
mov
sahf
push
lret
andb
stos
mov
ds
cmp
popa
pop
or
push
out
sub
lea
aas
pop
rcrl
mov
mov
rorl
pop
inc
pop
add
call
std
loop
dec
pop
and
bound
hlt
enter
arpl
addb
and
sbb
dec
aas
inc
sahf
aaa
sti
ljmp
push
pop
daa
push
jo
pop
rcll
mov
jmp
and
xchg
popw
sub
push
call
add
lcall
jnp
cmp
lret
xchg
jae
mov
iret
shlb
inc
cwtl
add
push
rcll
jge
aam
repnz
dec
and
jg
xchg
icebp
loop
jnp
inc
sub
scas
dec
jecxz
stos
xor
dec
pop
inc
pop
mov
aad
push
pop
shrl
xlat
add
pop
jb
loope
imulb
jno
jns
mov
fbld
je
xchg
orl
iret
nop
mov
pop
add
push
pusha
rcl
insl
es
jno
pop
jae
loope
inc
push
mov
pop
jbe
lods
and
sub
sbb
xchg
ss
cmpl
push
insb
js
jl
push
lea
sti
xchg
inc
dec
xor
test
les
loope
mov
pop
adc
inc
test
addr16
adc
int3
mov
mov
sub
lret
jnp
dec
jns
in
or
dec
inc
adc
cltd
push
inc
pop
cmp
lea
fistpll
es
push
test
or
outsb
cli
xor
cwtl
push
mov
dec
mov
sbb
adc
jb
inc
pop
mov
stos
pop
mov
inc
in
shll
lods
xchg
lret
mov
jae
orl
faddl
or
test
mov
fisubrs
pop
add
test
stos
mov
mov
fnsave
and
ret
ja
inc
mov
xorl
mov
mov
ljmp
loope
jmp
lret
mov
dec
mov
xchg
sahf
scas
jl
xchg
jbe
repnz
imul
outsb
aad
xor
pop
mov
xor
jae
xor
lret
sub
mov
mov
addl
adc
ficomps
sbb
leave
sbb
fwait
pusha
mov
fs
fsubr
stc
xchg
pop
out
dec
inc
out
jecxz
stos
test
fcoms
scas
push
dec
stc
pop
xchg
movsl
scas
out
jns
into
aas
dec
pop
sub
or
jno
pop
mov
int3
jne
addb
jg
sbb
stc
mov
addr16
xchg
sub
out
popf
adc
addl
in
mov
test
push
ret
or
loopne
cmc
cwtl
pop
test
push
lahf
imul
adc
mull
mov
sahf
sbb
out
test
mov
pushf
mov
cltd
in
mov
add
xchg
loopne
scas
dec
jg
xor
inc
out
sbb
outsb
mov
and
adc
out
mov
pop
or
int
test
push
test
adc
aam
in
add
inc
jns
xor
cmp
in
xchg
mov
rorl
mov
cmp
cwtl
pop
aaa
jo
xor
jae
inc
popa
add
repz
fstpl
jnp
loop
adcl
mov
clc
repnz
push
fldenv
mov
pop
insl
fsubr
in
sahf
dec
sub
imull
cmp
fld1
dec
and
dec
jl
sbb
xor
popa
imul
and
imul
loope
inc
jbe
add
icebp
push
ret
nop
hlt
xchg
sti
int3
mov
mov
xchg
fcmovbe
xorb
loopne
xchg
lds
mov
sarb
fcomps
out
lret
mov
push
jmp
fistpll
pop
ret
jecxz
and
dec
push
addr16
push
data16
cmp
sub
pop
xor
sub
jne
je
sbb
fsubrp
mov
lock
cmp
inc
cmp
leave
lods
or
and
or
movsl
or
lahf
lahf
inc
subb
sub
jg
mov
and
fs
dec
jb
mov
mov
cwtl
icebp
fiaddl
or
pop
jge
xchg
jb
dec
xor
jae
or
gs
pop
cli
pop
mov
mov
jmp
std
dec
jbe
fwait
mov
imull
ret
cltd
repz
int
mov
sbb
sahf
xchg
into
mov
stos
cmp
xchg
push
and
sbb
cmp
adc
lret
jb
shll
mov
sbb
aam
ljmp
aaa
leave
sub
dec
xchg
loop
aad
scas
or
adc
out
adc
mov
jp
pusha
pop
dec
jo
mov
stc
sub
into
mov
pop
lret
mov
mov
in
push
aam
add
and
mov
xchg
pop
jge
xchg
scas
lods
inc
popf
loopne
scas
mov
ret
fisttpll
xchg
fisubs
mov
lods
data16
add
rol
adc
outsl
ret
cld
or
hlt
std
sub
repz
adc
cld
aaa
jl
out
mov
lock
das
sbb
cld
decb
jae
pop
aam
cli
pop
and
mov
cli
pushf
sbbb
dec
rclb
mov
inc
xlat
push
ss
out
inc
out
mov
stos
rol
fidivl
rol
jmp
push
or
stos
cmp
hlt
arpl
movsb
sbb
xchg
jae
roll
inc
enter
in
cmp
enter
jns
xchg
sub
out
inc
ds
xlat
and
stos
adc
scas
mov
xchg
fcomip
mov
sbb
repz
mov
ljmp
sarb
out
dec
addr16
dec
scas
mov
test
movsl
int3
cmc
pop
mov
mov
loopne
sbb
xor
je
ret
push
or
push
stos
adc
sub
pop
shrl
dec
lds
cmp
ret
ss
repnz
sub
outsb
ja
pop
and
pop
scas
add
int
jge
mov
xor
pop
dec
mov
test
iret
push
sub
adc
je
pop
mov
je
out
pop
in
sub
mov
xorb
xchg
jp
dec
sbb
mov
cmp
mov
lret
mov
popa
lret
jl
in
push
out
adc
cmpsl
fnstenv
lea
push
int3
loop
pop
mov
popa
outsb
dec
js
or
xchg
dec
cmp
loop
out
enter
xchg
dec
out
push
clc
jle
mov
fwait
jge
pop
cmp
ret
cmovne
jno
adc
mov
inc
or
xchg
nop
xchg
push
mov
jb
sub
add
push
mov
push
arpl
dec
mov
xchg
sbb
out
repz
dec
cli
cmp
movsb
shrl
xchg
dec
cmp
sub
aad
push
mov
pop
cmp
adcb
int3
mov
push
xchg
xor
and
jne
sub
addr16
cltd
or
add
adc
pushf
add
jle
ljmp
into
nop
gs
push
clc
jle
fwait
lret
or
sbb
push
add
enter
scas
push
jnp
int
daa
pop
mov
add
jno
mov
por
addb
xchg
mov
push
or
and
jge
sub
orl
test
mov
adc
cmp
pop
das
bound
arpl
push
repnz
dec
sub
fcomi
ret
dec
adcb
jno
mov
iret
jbe
icebp
data16
push
sbb
stos
inc
out
ficomps
aaa
test
add
push
xor
decl
je
out
add
pop
sahf
and
les
xchg
inc
sbbb
scas
xor
xor
pop
mov
cmovbe
jle
mov
les
mov
and
adc
mov
mov
xchg
in
or
and
xchg
xchg
and
rorb
xchg
shl
adc
sub
jae
and
push
sub
and
lret
cmp
dec
nop
jmp
mov
mov
loop
push
fwait
cmp
mov
add
out
sub
push
testl
stc
or
cmp
loop
test
cmp
stos
push
or
pop
dec
test
jb
loopne
mov
xor
dec
fnsave
rcll
scas
xor
lea
mov
sub
jle
push
adc
roll
push
iret
rcr
das
inc
sbbb
pop
sub
subl
rcr
cmp
inc
aaa
xchg
dec
stos
xchg
adcb
nop
mov
arpl
mov
push
inc
inc
xchg
mov
pop
leave
mov
lret
pushf
mov
jnp
cmp
xor
dec
out
sbb
pop
adc
xchg
xor
sbb
jbe
add
icebp
cwtl
inc
add
dec
push
or
nop
sbb
ret
call
mov
mov
shlb
mov
stos
dec
insb
xchg
cmp
fnstenv
fimull
jecxz
xchg
andl
in
pop
cmp
cli
inc
notl
pop
std
inc
inc
rclb
xchg
push
jo
sbb
inc
sbb
rclb
push
and
andl
mov
cmc
mov
je
hlt
jl
cwtl
gs
testb
add
or
data16
inc
dec
pop
adc
xor
shll
push
arpl
and
psrlq
sbb
dec
cmp
xchg
sub
fistpl
xor
lock
mov
sub
into
ljmp
pop
xchg
insb
lret
hlt
mov
fs
or
out
lret
cmp
mov
loope
adc
mov
inc
sarb
cmp
fidivrl
test
sbb
daa
and
stos
test
cld
cltd
mov
sbb
pusha
pushf
mov
mov
dec
cmp
or
dec
add
andl
sub
cmp
sub
dec
leave
dec
push
xor
add
pop
xchg
je
clc
repnz
push
fs
mov
bnd
popf
sub
cmpsb
xor
int3
addr16
cmpsl
xor
cmp
icebp
lret
add
and
jbe
pusha
mov
jbe
mov
lcall
rolb
xchg
or
bound
adc
lret
filds
mov
cmp
adc
outsl
dec
mov
lea
outsl
add
push
dec
add
aaa
lock
sub
mov
mov
push
sbb
cmpsl
mov
js
aad
rcl
movsl
subl
inc
cld
test
lock
xor
mov
aad
cmp
imul
xchg
fwait
mov
movsl
fstl
sub
ds
inc
push
add
or
enter
sub
pop
jge
in
sbb
adc
jnp
push
add
xchg
push
mov
xchg
enter
sub
sarb
lret
mov
lahf
test
sbb
jns
arpl
xchg
ret
lret
inc
je
mov
jae
inc
movhps
pop
jmp
filds
aaa
adc
jno
sbbl
jmp
lahf
jmp
sbb
jo
ds
push
xchg
pushf
mov
leave
push
jg
add
inc
popaw
dec
xchg
jp
mov
mov
xchg
mov
or
jl
push
push
dec
sbb
ret
pop
dec
dec
into
lea
adcb
mov
test
sbb
xchg
cld
out
js
scas
pop
rcrb
pop
adc
out
iret
inc
or
cmp
sub
cmc
and
sbb
mov
mov
pop
dec
adc
roll
call
loopne
insw
rorl
enter
out
dec
mov
xor
loope
push
fstl
dec
cmpsl
pushf
dec
sahf
mov
or
rcl
pop
movsb
enter
ljmp
icebp
xor
shll
sub
shlb
decb
rorl
sbb
stos
stos
scas
sbb
mov
cwtl
out
movsb
pop
jmp
pop
rcrl
xchg
dec
mov
xor
in
cmpsb
push
adc
pop
and
add
cmp
ret
andl
jmp
shr
cmp
push
movsb
or
xchg
pop
mov
xor
mov
mov
xlat
push
lods
jl
push
cmc
mov
int3
cltd
out
pop
add
stos
jno
or
cmc
dec
push
add
adc
shrb
lods
movsl
fidivrs
mov
dec
push
push
add
and
mov
sbb
out
jnp
sub
andb
adc
mov
imul
mov
out
and
mov
inc
add
in
dec
or
gs
sbb
jle
sbbl
inc
out
jmp
dec
leave
lcall
in
push
shrl
fdivr
fstpl
test
pop
push
nop
mov
out
cmpb
icebp
call
sbb
repz
xchg
sub
xchg
inc
inc
inc
imul
mov
xchg
sbb
mov
mov
sahf
test
push
add
ss
int3
jne
or
mov
dec
fcoml
jo
or
sbb
mov
mov
and
jl
mov
faddl
jmp
aaa
mov
insb
pusha
in
cld
dec
fbld
dec
lds
jne
popa
and
and
xor
test
pop
mul
test
hlt
ds
bound
mov
cli
fisubl
jae
pop
sub
rcr
sbbb
mov
cld
out
orb
cmp
jne
scas
xchg
ret
jb
sbb
enter
ja
ret
sub
loop
je
mov
cmpsl
xor
cmpsl
or
lahf
loopne
xor
leave
add
movsb
add
test
jno
xchg
pop
popf
daa
decl
add
jo
lods
pop
sbb
push
cmp
pop
push
popa
push
inc
repnz
imul
out
or
iret
sti
leave
or
scas
push
iret
xor
repnz
jmp
pop
mov
jbe
xor
clc
popf
lcall
addr16
das
jbe
push
mov
stos
adc
sbb
mov
push
and
stos
test
repz
shrb
xorb
stc
xor
or
rclb
push
cmp
pop
ret
jae
clc
loop
cmpsl
hlt
hlt
popa
mov
mov
mov
test
mov
test
jge
insb
mov
out
lcall
sbbl
int3
mov
or
mov
xchg
push
imul
lea
call
jge
adc
insl
mov
sub
adc
lahf
addb
cmp
mov
out
popa
jb
out
xor
out
inc
push
inc
mov
mov
outsl
test
sub
sub
xchg
sbb
adc
push
ficoms
sub
dec
cli
xchg
imul
push
mov
inc
mov
push
icebp
jecxz
push
jo
sub
jne
lods
jg
sub
push
fistpll
enter
adc
jl
mov
mov
push
jae
mov
addr16
repz
mov
add
push
decl
int3
push
pop
xchg
std
into
rorl
pop
aad
pusha
jl
ret
or
mov
push
andl
loop
and
imul
movsl
or
adc
or
push
subb
mov
xchg
js
lret
dec
xor
pop
cmp
bound
aaa
movsb
orb
test
scas
push
or
sbb
aaa
cmp
int3
jl
jns
xor
out
pushf
or
dec
imul
xor
mov
out
mov
add
xchg
imul
jae
xor
pop
xchg
push
mov
out
and
and
lds
mov
subb
hlt
rol
arpl
sub
repnz
adc
xor
imul
pusha
add
jge
jmp
cs
inc
rcll
jl
mov
aaa
xchg
imul
loope
pop
mov
push
pop
cli
push
or
not
orl
lods
xchg
ljmp
jae
clc
sahf
loop
pusha
ss
pop
pop
cmc
dec
mov
repz
mov
jge
or
lock
pop
pop
mov
arpl
xor
mov
arpl
jmp
add
and
push
idivl
jno
sbb
sub
add
addr16
sub
cmpsb
stos
sub
ja
js
add
sbb
cmpsl
imul
sub
adc
add
pusha
outsb
jge
gs
jl
dec
push
sarb
inc
pop
push
andb
sub
imul
mov
and
cmc
mov
mov
lea
sbb
cmpb
xorl
mov
call
repz
cmp
ret
arpl
or
dec
sbb
push
outsb
xchg
scas
addr16
loope
push
int3
jmp
xorl
addb
add
lret
aas
cwtl
adc
pop
clc
push
mov
imul
lret
cmp
insl
add
add
xchg
ljmp
pop
into
lock
xchg
add
adc
lods
fadds
inc
or
ss
jne
xor
pop
and
mov
daa
in
into
imul
xor
pop
lock
and
jg
loope
lcall
outsl
fcmovnb
push
or
mov
outsb
push
out
mov
out
out
or
clc
mov
es
jns
cmp
jo
push
xor
scas
insb
dec
pushf
mov
repz
cwtl
bound
dec
sub
dec
xchg
lahf
inc
in
ss
lock
leave
pop
inc
popa
aaa
or
mov
jmp
es
scas
push
idiv
pop
sub
pop
mov
arpl
pop
fdivs
cmpb
jns
shlb
mov
mov
fwait
sub
sub
xchg
leave
std
pop
mov
jg
mov
pushf
lods
xchg
inc
adc
xlat
fistps
add
ja
ret
mov
repz
push
add
dec
inc
or
int
dec
adc
jcxz
add
shl
jle
repnz
out
cmpsb
testb
cld
push
or
and
ds
xchg
scas
fists
in
in
mov
popf
mov
pushf
push
ljmp
xor
jns
in
pop
pop
sub
inc
mov
mull
int
and
add
mov
xchg
add
or
out
sub
sarl
out
inc
data16
or
adc
cmp
fildll
rol
popa
fidivrl
cmp
push
add
imul
dec
jle
mov
sub
or
adc
lret
mov
jae
xchg
out
jp
aad
inc
rorl
fs
and
or
add
ss
cmp
mov
ror
xchg
mov
mov
or
ret
jle
adc
jmp
fnstsw
ds
xchg
push
mov
and
je
cmp
add
popl
jae
cmp
and
in
fsubl
jne
icebp
mov
pop
scas
mov
xlat
mov
fcomp
aaa
nop
mov
js
and
inc
and
sub
lock
dec
mov
scas
iret
scas
pop
sbb
mov
push
sbb
mov
cmc
nop
and
push
fwait
rcl
iret
mov
mov
sbb
xchg
xor
fsubl
rcl
ja
sub
mov
xchg
in
sub
sbb
xchg
mov
ret
ds
push
mov
lret
mov
popl
aaa
arpl
jmp
in
loop
lods
cmc
sbb
xor
scas
sub
lcall
in
bnd
mov
mov
or
outsb
loope
popa
xchg
out
xchg
xchg
ljmp
mov
incl
lods
out
or
xchg
hlt
and
loope
mov
push
in
loopne
cmp
divl
mov
inc
fcomi
lahf
test
pop
cli
div
jb
stos
sbb
mov
add
dec
sub
leave
leave
mov
push
sbb
dec
mov
xor
arpl
jl
xor
xor
adc
in
out
ffree
xlat
mov
cmp
push
lret
pop
addr16
leave
mov
fsubr
jbe
sbb
cmp
sub
cmp
inc
mov
pop
int
out
std
xor
add
lcall
vpaddsb
xlat
in
pop
jnp
cltd
test
repnz
neg
sbb
xchg
pop
sahf
bound
ss
lcall
mov
adc
cld
push
mov
outsl
jp
shll
jl
in
push
mov
in
xor
repz
lcall
inc
xchg
psubusb
dec
mov
fcmovnbe
sub
arpl
aad
jmp
mov
cmp
and
inc
sarb
xchg
mov
xor
stos
mov
dec
mov
add
stos
xchg
aaa
push
fldt
jge
js
mov
sub
int
hlt
gs
enter
out
pop
mov
out
sbb
xor
xor
mov
out
sub
ror
mov
cli
dec
loop
popf
jp
adc
loope
dec
js
insb
mov
xchg
pop
stos
xor
ret
cmp
mov
and
push
rorb
xchg
lcall
int3
mov
jbe
push
hlt
shlb
xchg
push
and
leave
int3
popa
sbb
adc
cmp
jns
push
lahf
call
or
lods
cwtl
mov
orb
sbbb
and
out
stos
in
in
adc
or
repnz
sbb
push
shr
cmc
inc
push
imull
fldt
data16
mov
nop
sti
adc
jg
insw
push
data16
scas
pop
xor
inc
stos
rorl
movsl
cmp
pop
dec
int3
sub
mov
jns
fidivs
xor
loope
test
xchg
mov
push
lret
pushf
pop
mov
shl
push
int3
sub
outsl
outsl
sbbb
ret
ret
retw
push
fs
js
and
xchg
int
mov
add
push
pop
or
jns
test
imul
mov
xchg
lret
inc
jmp
fmull
dec
xchg
ljmp
mov
das
jge
xchg
icebp
pusha
enter
mov
fwait
adc
jmp
jp
out
lret
adc
add
inc
cmpsb
adc
xlat
mov
pop
push
test
dec
xor
mov
daa
lret
mov
inc
ja
pop
and
addr16
sbb
fwait
sbb
push
push
inc
xchg
jns
push
and
icebp
inc
dec
push
xchg
xor
cmpsl
pop
imul
inc
push
movsb
sahf
test
std
mov
push
add
dec
mov
push
mov
push
sub
out
les
adc
sar
push
pop
testb
cli
sbbl
sub
push
pushf
shrl
adc
sub
mov
popa
cltd
movsl
arpl
pusha
stos
imul
mov
aas
sbb
push
das
cmp
in
or
int
jecxz
xchg
sub
aam
nop
or
dec
cmp
clc
xchg
jnp
into
scas
ret
nop
je
xchg
add
bound
sbb
pop
int3
pop
xor
stos
orl
inc
das
cmp
jmp
daa
je
cmpsl
push
xchg
xor
mov
inc
jbe
sbb
movsb
adc
pusha
xlat
in
xor
dec
jmp
rolb
xor
in
stc
fldcw
pop
xchg
lea
pop
dec
pop
lods
pop
cmpsl
fsubl
loop
push
xor
push
adc
push
push
cmpsl
es
rcrl
repnz
pop
xchg
int3
jp
inc
clc
aaa
mov
pop
jo
in
bts
or
dec
cwtl
xor
cs
xor
out
in
adc
lret
outsl
dec
shll
pusha
push
jo
sub
xchg
mov
cwtl
ret
insb
mov
popa
movsl
aam
push
mov
repz
xor
add
clc
mov
adc
cmpsb
movsl
fcmovne
mov
xchg
add
ljmp
pop
orb
movsb
push
and
or
arpl
pop
sar
add
jbe
mov
mov
ret
cld
or
xor
fisubrl
mov
insl
insb
mov
icebp
arpl
into
pop
inc
ljmp
push
insb
test
mov
mov
mov
adc
imul
push
sbbl
shrd
xchg
scas
into
push
daa
inc
add
jg
fucom
or
cltd
in
lds
sbb
mov
loopne
gs
fidivrs
pop
mov
pcmpeqb
clc
pop
inc
sbbb
cmpsb
in
adc
jae
mov
ss
cli
adc
ficomps
mov
stos
xor
rcrb
push
mov
push
pop
stos
leave
vmwrite
popa
je
popa
fwait
lahf
into
test
xchg
in
mov
out
dec
ds
lret
cmpsl
out
push
xchg
inc
aam
ljmp
sbb
pop
icebp
or
iret
adc
or
push
shrb
xchg
rcrb
movsb
push
cmpb
int
pop
mov
jmp
push
sub
insb
mov
nop
cmp
in
aas
scas
dec
cmp
sbb
jno
pop
xor
lahf
lret
sub
push
outsl
inc
lret
xor
inc
push
sarl
in
lcall
mov
adc
aad
aam
mov
add
dec
mov
pop
lcall
aam
jo
ss
push
out
adc
jp
lret
imul
test
outsl
dec
gs
mov
mov
mov
mov
sbb
mov
shlb
pop
pop
out
mov
pop
mov
lods
fisubrl
lcall
leave
sbb
mov
shll
insb
gs
int
inc
js
pop
repnz
in
mov
addl
je
jecxz
jnp
inc
rcrb
sub
pop
adc
pop
jle
imul
out
push
je
pop
add
and
add
mov
lcall
mov
lret
push
test
fstpt
xor
je
vpsubq
jg
mov
xor
aas
testb
leave
lcall
and
push
out
mov
test
sbb
xchg
pop
jecxz
or
sub
enter
testb
xchg
aam
and
cltd
cmc
add
jo
mov
pop
cli
sub
push
xchg
jecxz
pop
fildll
out
jl
test
ret
pushf
lea
loop
jno
jo
mov
test
fists
or
mov
mov
fwait
mov
xchg
inc
cli
out
in
ljmp
push
clc
sbb
push
and
test
and
lods
sbb
mov
dec
ja
shlb
mov
sbb
addr16
pop
cmp
dec
mov
add
jno
push
push
add
mov
mov
pop
jmp
push
in
xchg
and
pop
push
in
xor
jle
cs
dec
in
imul
fwait
and
loopne
nop
ja
or
sub
mov
cmc
in
clts
repz
int
stos
in
push
push
cli
adc
xlat
adc
les
xchg
insl
ljmp
cmpsl
jo
in
ljmp
dec
nop
repz
jae
mov
lea
adc
fistps
mov
lcall
in
jno
mov
inc
bound
xchg
mov
xchg
push
xchg
imul
stc
xchg
adc
xor
push
shlb
mov
enter
jle
push
jnp
mov
js
inc
fwait
sbb
sub
loope
fdivr
or
cwtl
out
jne
cmp
pop
inc
jne,pt
fsubrl
fcomp
data16
sub
pusha
xor
dec
sbb
fildl
dec
sbbl
xor
insb
negb
mov
cli
dec
jno
xchg
fucomp
leave
je
out
arpl
test
inc
insb
sbb
adc
aas
push
jo
jbe
xchg
lods
fcmovb
bnd
jbe
pop
jmp
jg
jmp
sub
fisubrl
lock
cmp
cli
inc
xchg
rolb
out
hlt
ret
shl
pushf
pop
out
hlt
push
or
leave
scas
ret
push
repnz
push
push
cmp
mov
xchg
cmp
outsb
jne
push
or
movl
inc
adc
mov
sbb
mov
mov
jo
mov
decb
daa
sbbb
test
sub
out
daa
js
jg
mov
lahf
outsb
test
ja
pushf
sbb
and
sub
cmp
pop
hlt
push
rcrb
sar
sahf
shl
cmp
pop
cmp
xor
sub
pushf
imul
outsl
adc
scas
adc
sbb
pop
jp
cwtl
xor
lds
mov
lock
add
mov
lcall
mov
and
fnstenv
int3
mov
push
inc
xchg
stc
mov
mov
mov
push
mov
or
cli
push
hlt
sti
sbb
cltd
lcall
push
das
out
mov
cmp
imul
sbb
fs
lcall
pop
add
loope
mov
adc
push
ja
aas
pop
cmc
push
in
hlt
sbb
adc
pop
xor
loop
imul
jecxz
xchg
sti
push
mov
mov
jbe
xchg
cwtl
xlat
lods
adc
popf
xchg
stos
test
push
mov
mov
and
xchg
int
pop
stc
xchg
in
pop
enter
fimull
add
fcom
shrb
ja
lock
ret
and
xor
shll
pop
pop
mov
pop
xchg
inc
jp
loope
movsb
loop
jmp
mov
hlt
jmp
push
js
sub
and
popa
inc
mov
fstpt
imul
xor
cwtl
and
inc
testb
push
cmp
mov
lret
test
in
out
shr
inc
pusha
insb
mov
in
push
inc
aam
inc
insl
mov
aad
jg
clc
repnz
cmp
test
jno
inc
jecxz
rorb
and
dec
add
jmp
enter
xchg
pop
xchg
js
cmp
xchg
and
mov
arpl
cmp
incl
push
lret
mov
mov
cmp
and
jae
add
insl
cs
dec
pop
stc
ljmp
shr
sbb
fsub
movsb
adc
mov
xchg
mov
cltd
xchg
sbb
outsb
jne
pop
ret
dec
jmp
mov
mov
scas
jno
xchg
pop
add
in
jae
lods
lock
icebp
rolb
movsb
and
movsb
mov
push
sub
in
xor
cltd
sti
xchg
pop
xchg
loopne
insl
push
add
in
dec
scas
jne
aas
lret
ja
mov
pushf
sub
les
and
adc
out
mov
push
xchg
mov
push
xchg
in
fidivs
jne
pop
loope
jmp
add
inc
stos
push
adc
ss
das
cld
pop
mov
inc
pop
mov
imul
mov
pop
push
jg
pop
flds
cltd
das
pop
ja
outsl
sub
pusha
call
or
cwtl
repz
inc
lret
stc
jmp
aas
idivl
pop
mov
add
es
adc
gs
jle
fisttpll
leave
lret
mov
and
dec
dec
js
dec
mov
out
mov
fsts
sub
push
movsl
fs
cmp
popa
mov
mov
add
and
jne
jmp
mov
add
push
and
lds
fldt
loop
vfrczps
xchg
jecxz
xor
fimuls
and
out
icebp
imul
add
dec
data16
xlat
push
fdivrl
loop
ret
sub
bound
fadd
insl
xor
push
rcr
das
insb
data16
or
test
cmp
adc
aam
or
ficoms
sub
stos
mov
iret
pop
jae
xor
sbb
ficompl
cmp
aas
lret
cmp
rcrl
adc
cmp
aam
adc
mov
cmp
inc
mov
sarb
push
lcall
int
dec
add
add
cmpsb
adc
pusha
jle
test
adc
mov
jge
loopne
and
pop
mov
imul
xchg
repnz
or
xor
inc
lods
hlt
mov
cmp
cmp
adcb
mov
jb
movsb
cmpsb
insl
das
std
sub
or
pop
inc
mov
orl
dec
sbb
outsb
in
insb
inc
xchg
pop
cmp
cmp
xlat
int3
mov
dec
or
in
lea
out
out
inc
add
xor
fs
mov
jmp
cmp
pop
fisttpll
jne
mov
insl
and
sub
inc
jo
push
sti
pop
out
mov
or
cmp
mov
js
fs
xor
adc
dec
pop
decb
pop
lea
daa
or
sbb
xchg
mov
mov
hlt
inc
dec
imul
push
sub
popa
fildll
dec
push
sub
cmp
xor
jno
or
ret
cmpb
fidivl
popa
and
shlb
hlt
pop
pop
fs
push
repz
cs
sti
push
xchg
or
stos
popf
lcall
aas
and
and
mov
bound
iret
xchg
xchg
cmp
cmp
or
ret
scas
dec
daa
xchg
repnz
shlb
imul
pushf
test
insb
adc
cwtl
and
scas
adcl
nop
jae
ror
mov
jns
ror
lret
lock
dec
punpckhbw
leave
dec
xor
inc
cwtl
enter
test
cltd
cmpl
jns
sarb
inc
lcall
xlat
mov
dec
add
sub
imul
xlat
ja
mov
pop
mov
popf
or
xchg
xor
test
cmp
outsb
ret
sub
cmp
jl
sub
stos
or
inc
push
test
xchg
int3
or
sub
push
add
stc
outsl
aas
dec
inc
loope
sahf
lock
jp
mov
iret
les
ret
dec
fists
lods
jno
mov
jg
pop
cmp
icebp
pop
je
sbb
pushf
clc
fdivr
cmpsl
xchg
mov
mov
mov
cmc
aam
mov
push
adc
and
adc
mov
insb
jae
popa
jp
push
call
movsl
jno
xchg
sub
sbb
insl
and
mov
jbe
jmp
xlat
addb
lock
movsb
arpl
push
jo
aaa
lea
sub
cmpsl
and
insl
push
aam
movsl
cli
jl
and
mov
cwtl
or
inc
dec
fsubrp
pop
sbb
lret
in
jo
mov
ss
stos
or
mov
mov
fsts
push
fld
stos
jge
fstl
fldt
xchg
push
sarb
xchg
jmp
movsl
or
xor
stos
popf
inc
cmpsl
lods
xchg
sub
popa
xchg
mov
adc
das
sub
fiadds
or
inc
push
js
enter
jge
into
xchg
push
add
xor
mov
mov
insb
dec
cmp
lods
or
xor
pop
lret
xchg
pop
pop
outsl
mov
add
data16
sbb
jge
fisubrl
xchg
or
inc
push
dec
jo
mov
sbb
cltd
cltd
aad
xor
cmpsb
mov
movsb
dec
lods
fcoml
cli
mov
or
stos
mov
mov
dec
popa
jmp
jo
loopne
add
lahf
mov
cmp
add
mov
cmovno
stos
fsubs
dec
cmpsb
inc
push
mov
dec
adc
add
pop
mov
adc
pushf
cmp
lods
fcomip
in
xchg
stc
cs
add
or
xchg
pusha
adc
movb
bound
mov
hlt
daa
push
jbe
sub
push
mov
jae
push
aad
lods
sbb
insl
mov
clc
adc
cmp
xor
jns
dec
sbb
mov
fwait
sbb
mov
sahf
sbb
xchg
inc
mov
inc
jge
inc
iret
call
inc
icebp
cmp
in
jns
push
pop
lret
idiv
xchg
dec
or
lea
out
lahf
pop
xchg
lods
inc
loopne
stc
jb
push
add
stc
popa
xchg
or
sti
mov
aad
flds
jae
pop
pop
enter
sub
in
mov
sbb
scas
repz
cmp
pop
ljmp
jae
jae,pt
dec
mov
xchg
fiaddl
dec
mov
imul
pop
out
into
xchg
mov
xlat
push
fimull
lret
rolb
cmp
inc
add
xchg
jl
push
jecxz
outsl
add
mov
push
fs
adc
fildll
sub
xor
aam
mov
inc
ljmp
mov
out
pop
push
or
leave
pushf
rcrb
enter
xchg
xchg
lcall
sub
imul
adc
mov
sbb
sbb
pop
test
mov
sub
dec
fidivs
and
xchg
stos
push
mov
movsl
pop
jo
movsb
cmp
rcr
shlb
sbb
in
test
xchg
pop
push
or
addl
mov
test
pop
jl
iret
test
mov
std
movsl
dec
cmp
pop
jo
inc
and
push
cmp
mov
cwtl
inc
adc
imulb
push
fdivrs
imul
and
out
in
ljmp
stos
mov
or
in
repz
fistpl
inc
and
je
lds
mov
xchg
sbb
push
inc
jmp
sti
jmp
or
push
mov
mov
fbld
out
pop
rolb
push
pop
mov
icebp
rorl
popf
andb
pop
dec
lods
pop
lods
jle
fcompl
push
mov
mov
addr16
xchg
inc
lods
xchg
shrl
popf
sub
jns
addr16
repnz
mov
inc
das
inc
rorb
adc
insl
popa
xor
in
aaa
mov
rolb
or
scas
insl
addl
leave
sti
mov
dec
loope
add
jnp
and
lcall
ja
aad
cmp
sub
stos
ja
xchg
loop
jg
xchg
jmp
popa
push
cmpsb
loope
test
es
push
jns
sbb
les
mov
dec
or
add
add
icebp
movsb
rol
insl
inc
xorl
mov
or
or
lock
pushl
loopne
xor
jp
popf
adc
imul
jge
cmp
mov
addb
rcll
pop
mov
add
rcl
lcall
mov
aad
shlb
xchg
push
and
popf
in
pusha
rcrb
movhps
sbb
int3
xor
das
outsb
xor
jns
inc
bound
push
aam
cmc
jecxz
mov
xchg
or
sahf
sbb
jo
mov
aaa
add
aas
cwtl
cwtl
scas
daa
push
mov
push
pusha
dec
cld
popl
and
test
cmpsb
xlat
ds
jmp
fs
mov
or
clc
add
mov
int
insb
push
push
ds
xor
loopne
pusha
add
imul
sbb
movb
scas
mov
mov
add
mov
pop
sbbb
les
ja
mov
lock
cmp
sub
inc
mov
pop
mov
add
fcomi
or
mov
push
test
mov
add
jnp
fdivp
je
pop
imul
fstl
inc
repnz
xchg
js
shlb
data16
and
push
cld
js
imul
aas
cmp
cmc
cltd
lret
xor
fists
sbb
inc
out
iret
cltd
mov
pushf
out
bnd
jnp
jns
leave
clc
lahf
or
add
push
pop
or
sbb
sti
iret
jl
lret
xorb
mov
sub
std
aam
dec
mov
xchg
mov
inc
xor
sbb
jno
hlt
out
xor
repnz
cmpsl
xchg
repz
or
adc
clc
aas
xor
jle
adc
mov
add
mov
shll
fdivrs
mov
adc
test
add
movsb
mov
out
and
xor
push
inc
xor
std
jle
fwait
into
mov
and
pop
repz
inc
pop
lods
pusha
and
jl
stos
fistpl
out
mov
iret
ja
adc
mov
stc
mov
xchg
mov
fsubrl
mov
or
sahf
movsb
cltd
push
out
sahf
lds
in
subb
mov
pop
movsb
jae
mov
cmp
es
ja
dec
leave
push
subb
mov
sub
mov
sbb
jecxz
es
mov
or
and
loop
aad
mov
adc
adcb
and
jg
pop
xchg
lahf
and
pop
adc
lods
lds
shll
loopne
neg
dec
jnp
fsubrp
into
mov
je
adc
jae
repnz
mov
add
and
jo
push
subl
fnstcw
xchg
repnz
or
ja
and
int3
rolb
pop
pop
negb
pop
int3
dec
insl
outsb
xchg
mov
fistl
mov
and
ljmp
adc
ret
int
xchg
jle
loop
mov
int3
outsb
mov
xchg
stos
lret
xchg
add
ljmp
mov
adc
out
adc
xchg
dec
outsl
popa
cmp
xor
adc
pop
push
rcrl
sub
and
cmc
dec
clc
sbb
pop
repz
andb
cmpb
out
xchg
xlat
jg
pusha
test
sbb
imul
jg
push
push
add
jg
jnp
mov
jb
cmp
pusha
pushf
mov
push
jae
xor
jge
cmp
out
xchg
add
adc
xor
adc
mov
dec
jl
inc
test
insb
inc
xor
sbb
pop
aad
jbe
mov
add
loope
ja
inc
lds
mov
push
cmpsb
xchg
mov
lcall
shl
xor
push
negb
popf
cmpsb
jge
fildll
cli
lret
sbb
and
push
or
aas
mov
mov
pop
jmp
xor
icebp
mov
xchg
fisttpll
imul
gs
loope
ret
inc
cmp
fmul
push
cltd
push
mulb
es
sbb
mov
mov
xorl
cwtl
jno
clc
in
addb
insl
cmpsl
ret
mov
jb
in
mov
inc
sub
mov
iret
test
sbb
push
cld
repz
or
test
xor
jnp
jp
sbb
imul
out
out
ficoml
pop
addr16
inc
out
cmp
test
inc
scas
push
scas
dec
pusha
jno
and
ljmp
call
fmuls
daa
les
scas
xor
xor
lods
sub
mov
hlt
popa
ljmp
insb
movb
mov
das
bound
roll
lahf
mov
inc
mov
ret
jp
xchg
inc
jb
out
movsb
subb
cmpsb
sbb
mov
sub
subb
mov
mov
testb
mov
pop
popf
sub
mov
push
gs
mov
in
stos
xchg
sbb
push
xchg
cmp
sub
jle
cld
push
icebp
das
mov
aaa
push
lods
or
adc
pop
cmp
outsl
lahf
cmpb
xchg
loopne
ficompl
lds
dec
jge
mov
push
scas
and
adc
int3
mov
sti
addl
hlt
pop
sti
mov
push
and
insb
scas
sahf
add
loope
rcll
jno
in
popa
lahf
pause
adc
or
pushf
into
mov
data16
js
and
xchg
popa
sub
icebp
sbb
cli
xorb
or
aam
adc
xor
or
dec
and
xchg
mov
dec
mov
mov
and
xchg
push
scas
mov
leave
push
mov
cmc
ret
imul
dec
jg
jno
or
aad
sbb
sbb
inc
dec
adc
loope
sub
xchg
inc
fcoms
fsub
mov
insb
push
adc
xchg
lock
outsb
out
sub
push
sub
sti
mov
mov
test
jbe
pushf
xor
mov
test
pop
movsl
cltd
inc
lods
push
lret
push
sbb
es
loop
ds
fimull
lret
inc
addl
out
inc
dec
mov
sub
test
enter
pop
cmp
mov
fnsave
jmp
cmp
cmp
in
lods
cmp
inc
sbb
enter
jnp
fsts
pop
fsubrl
and
mov
outsl
jmp
and
inc
cmp
cmpsl
sbb
jnp
lods
mov
lea
sub
shl
pop
incl
xor
fidivs
repnz
loope
hlt
or
mov
sbb
lods
jne
mov
repz
pop
loope
jne
add
clc
and
movsl
add
jg
cmp
hlt
out
cmc
cmp
leave
ja
mov
and
sbb
mov
call
arpl
mov
ds
enter
or
shrl
popf
bound
jo
sbb
insb
pop
je
adc
mov
fbld
push
and
adc
inc
jno
je
cltd
or
addr16
sub
push
fildl
inc
mov
push
pop
jl
sub
repz
fwait
jmp
sbb
inc
or
sbb
cwtl
sti
cmp
sub
mov
scas
mov
xchg
imul
push
aad
leave
pop
xchg
dec
jnp
inc
xchg
cmc
pop
call
hlt
pop
insb
push
push
lods
dec
inc
movl
add
sbb
pushf
lcall
gs
sub
es
pop
mov
loopne
cmp
das
popa
or
xorb
and
mov
xchg
pop
fdivs
stc
test
cmp
movsl
addr16
ret
fndisi(8087
gs
fldl
fmulp
inc
shll
pop
fwait
dec
cmc
popa
xchg
mov
fs
mov
add
push
xchg
imul
adc
adc
adc
dec
jge
adc
in
mov
lock
push
dec
mov
mov
leave
fdivrl
mov
mov
push
call
fidivl
mov
lods
cmp
test
roll
mov
jmp
mov
loop
mov
pop
lcall
add
addr16
jb
shll
bound
fldt
test
data16
fs
or
ljmp
and
lea
jecxz
xchg
incl
xchg
xor
in
lret
stc
mov
lea
mov
mov
jge
sbb
orl
or
push
loop
pusha
add
nop
lahf
adc
and
jo
mov
ja
sbb
inc
xlat
mov
std
jmp
or
stos
mov
loop
or
xor
lea
inc
mov
mov
push
loop
lret
lock
movb
xor
mov
out
out
dec
pop
fists
jg
push
lret
mov
ljmp
sub
popf
xor
xlat
ljmp
ds
and
pop
scas
addr16
inc
add
loope
je
fcmovnbe
mov
xlat
or
xchg
mov
or
stos
gs
pusha
scas
cltd
mov
inc
and
dec
in
dec
sub
es
cmp
ret
mov
mov
stc
leave
in
in
icebp
leave
mov
push
mov
adc
arpl
cmp
add
pushf
inc
aad
dec
add
cli
cmp
cmp
pop
mov
mov
lods
jle
push
mov
int
in
jmp
in
mov
sbb
movsl
cmpl
add
sbb
pop
andb
cmp
test
not
notb
sahf
xor
cmp
cltd
pop
repnz
jbe
lea
lret
outsl
imul
rcrl
cs
rcrl
stc
loop
xchg
cs
xor
mov
movl
in
jecxz
and
sti
fistl
jge
addl
jle
and
mov
lods
sub
loope
sub
cmc
mov
push
popa
scas
mov
push
mov
xor
sub
lcall
and
xor
in
mov
jns
xchg
sub
mov
sub
shrl
mov
icebp
inc
sbb
pusha
std
push
aam
stos
jae
imul
stos
add
xchg
cmp
sub
out
adc
out
lock
or
mov
push
not
loop
int3
pusha
pop
ss
mov
jg
dec
inc
sbb
inc
icebp
pushf
test
dec
mov
sub
lods
dec
and
pop
pmaxsw
mov
ret
sub
add
mov
sbb
xchg
mov
out
xchg
repz
jbe
jno
imul
sbb
popl
bound
sub
sub
adc
inc
jb
pop
push
hlt
or
inc
ljmp
cld
rcll
mov
xchg
fwait
cld
mul
leave
xadd
adc
iret
push
jbe
sbb
push
mov
arpl
aam
ficomps
dec
fcoms
mov
sub
mov
xchg
stos
xor
pop
fadds
xchg
push
daa
cmc
xchg
mov
xlat
movsl
pushf
ja
jmp
es
push
in
jmp
and
loopne
test
iret
jae
pushf
pusha
cmp
lea
add
in
stos
dec
push
or
xor
pusha
fwait
imul
ss
cmpl
sub
out
std
cmp
add
in
fisubrl
push
insb
cmpsl
add
shrb
in
cli
aam
or
push
jge
or
xchg
inc
clc
pop
bound
lahf
leave
xor
rcll
int3
int3
pop
out
out
ret
inc
and
push
mov
clc
cmc
jle
xchg
les
mov
inc
mov
pop
les
push
out
mov
and
add
xor
mov
add
popf
cmc
jge
xchg
sti
push
jae
daa
adc
cmc
push
and
push
inc
stos
pop
fmuls
cmp
lahf
sbb
ret
sbb
mov
dec
cmp
insb
cmp
cltd
rcl
mov
sbbl
and
shll
or
outsb
lods
movb
xchg
push
pop
and
aam
jno
or
sti
mov
inc
ljmp
pop
ret
fistpl
mov
xchg
loop
xlat
pop
cmp
mov
loope
fs
mov
cmpsb
lods
pop
int
testl
out
lods
jle,pn
dec
inc
add
repnz
sbb
outsl
rcr
and
incl
adc
or
pop
push
mov
mov
jg
mov
xchg
inc
jbe
not
lahf
xchg
add
mov
push
jmp
in
lods
in
ret
outsl
ret
hlt
fld
and
sbb
fsubrs
js
lret
or
dec
loope
sub
and
xchg
notb
out
mov
push
jbe
cmp
fsub
cmp
std
pop
jae
sahf
pop
enter
pop
in
xor
pusha
ret
in
ret
cltd
add
loop
fadds
aas
or
frstor
bound
repnz
div
pop
inc
jl
cmc
ja
mov
aad
into
out
jmp
xchg
jo
cwtl
xchg
mov
cmpsl
cmp
int
in
outsl
jmp
icebp
add
xchg
and
xorl
ret
int3
mov
cltd
cli
sub
iret
and
leave
pop
lock
das
mov
jmp
push
filds
icebp
jno
push
loope
or
xchg
cmc
xchg
cs
pop
sbb
push
pop
mov
push
lock
lock
xchg
sbb
adc
jb
sbb
mov
sbb
cs
dec
out
xor
push
adc
in
lea
fcmove
ja
pusha
add
mov
pushf
in
mov
mov
sub
push
mov
test
adc
orl
mov
add
add
mov
dec
jbe
mov
push
icebp
xor
test
fsubl
mov
mov
pop
je
jg
not
outsl
lcall
or
stos
push
ret
mov
rcrl
stos
dec
fdivrs
push
cmp
or
in
xor
mov
jmp
mov
idivb
int3
jb
ficomps
ss
mov
popf
add
pop
sub
test
fadd
fldenv
in
cmp
inc
clc
aas
cmpsb
adc
lock
repz
scas
shrl
enter
jno
pop
sahf
call
cltd
in
dec
push
and
cmp
mov
mov
pushf
ss
cmp
enter
xchg
jecxz
fildl
dec
xchg
fwait
aaa
in
jg
push
sub
gs
testb
cli
mov
push
xchg
push
insb
fstl
mov
lcall
xor
subl
pusha
sub
sbb
push
push
sarl
in
jmp
dec
mov
lcall
out
inc
mov
pop
inc
jbe
pop
sub
sbb
mov
jmp
negl
dec
mov
rcl
cmpsb
shll
mov
std
icebp
add
xor
lods
xchg
bound
das
rclb
jb
lds
ret
inc
out
add
push
stc
mov
and
cltd
push
sbb
subl
loopne
dec
cmp
cmp
adc
mov
mov
push
lods
add
xchg
divl
inc
push
push
pop
push
jecxz
ret
into
addr16
and
mov
fisttpl
push
repz
int3
arpl
movsl
ret
mov
inc
mov
sub
sub
andb
pop
sarb
sbb
leave
int
pop
cmc
pop
int3
adc
xor
int3
test
cs
dec
push
dec
pop
mov
adcl
inc
push
cmpb
sub
cmpsb
imul
mov
fidivrs
dec
xor
lock
ss
cmp
jp
iret
aam
out
out
sub
fcmovu
sti
fldcw
push
js
pop
xchg
movsl
outsl
sahf
jecxz
sti
shll
mov
popf
add
sbb
stos
add
xchg
lods
push
cmp
add
mov
mov
xor
push
pop
inc
in
xchg
jne
out
push
lds
leave
roll
inc
sbb
xchg
sbbb
inc
dec
lret
xor
inc
jge
jg
push
jo
xchg
idivl
inc
pop
test
je
jmp
pop
xchg
js
fnstenv
jae
mov
mov
lods
jp
sub
jb
sahf
and
mov
sub
xchg
mov
bound
and
leave
shll
dec
aam
pop
push
mov
testb
loope
popf
add
pop
ljmp
push
daa
ja
cld
cmpsb
push
xor
jmp
mov
movsb
rep
out
cltd
lcall
adc
cwtl
and
sbb
jae
aam
loop
and
cmpsl
push
add
dec
push
cmovg
loope
cmp
mov
pop
sar
sub
adc
sbb
or
loop
push
mov
loope
pusha
fisttps
push
sbb
in
fwait
dec
mov
loop
cs
fwait
shl
pop
rcr
adc
test
ds
mov
sbb
stos
mov
subb
xchg
sub
arpl
mov
insb
push
jg
arpl
stos
out
pop
or
jnp
lahf
cmpsb
daa
loop
xchg
fistps
fisubrs
pop
or
or
xchg
aam
jbe
cs
push
sub
cmp
mov
push
lret
pop
fs
xchg
jne
shrl
pop
xchg
or
jp
aaa
mov
pop
jp
sbb
lret
mov
and
dec
je
mov
sbb
fistl
inc
pop
adc
jbe
in
sub
out
jl
jo
cmp
mov
sbb
jns
stos
pop
clc
or
xchg
dec
fnstsw
mov
push
dec
sbb
fstps
test
adc
xchg
jo
sbb
shlb
fwait
ret
jnp
in
xor
xchg
pop
jmp
cltd
lds
pop
lcall
mov
dec
adc
dec
testb
iret
or
xchg
int
test
test
ss
dec
lock
inc
fidivs
sbb
les
push
jnp
mov
test
jecxz
arpl
mov
movsl
and
inc
jle
imul
ja
xor
mov
xor
mov
sbb
xchg
and
push
in
movsl
sahf
out
xchg
idivl
xchg
adc
mov
cmpl
jns
jle
test
inc
sbb
sbb
icebp
mov
lock
nop
lea
test
pop
fstp
ret
icebp
fldt
aad
add
jno
fstpt
test
aaa
cmpsb
sbb
push
aas
mov
ficoml
scas
pop
inc
jne
ja
and
mov
inc
add
and
jmp
insb
inc
pushf
jo
and
cmp
mov
pop
mov
fcomp
les
out
push
shl
pop
fwait
xor
popf
mov
cld
lock
lock
push
xchg
xchg
xchg
push
sub
push
addr16
fdivr
push
test
cmc
or
mul
push
mov
mov
dec
aam
out
enter
xor
jl
cmpsb
dec
and
cmpsb
adc
fsubrs
mov
xlat
or
fstp
mov
mov
pop
out
pop
mov
xchg
jg
data16
xor
imul
sbb
push
jmp
fisttps
push
mov
add
sti
mov
mov
aad
inc
push
sub
divl
adc
jne
fiaddl
testb
dec
push
loopne
ja
push
push
and
sti
repnz
hlt
mov
inc
jno
mov
mov
add
inc
fmulp
mov
test
xor
idivl
dec
xchg
pop
clc
jp
mov
ja
pushf
out
mov
and
lods
sbb
jne
and
nop
lods
dec
add
stos
imul
imul
ret
cwtl
sub
cmp
enter
xlat
fisttpll
xor
movsl
or
cmp
sub
push
jge
mov
into
into
jb
adc
mov
jp
repnz
repnz
int
pop
cld
popf
or
inc
pop
in
sbb
mov
sahf
sarb
adc
adc
aad
pushf
mov
aas
push
mov
xor
dec
lock
ficoml
scas
mov
enter
popa
nop
pop
sti
xor
adc
sub
enter
mov
sub
icebp
aad
into
clc
or
jmp
aaa
leave
cmp
xor
pusha
xor
loopne
jno
pop
or
iret
shr
shlb
push
mov
sub
or
pop
xchg
rol
inc
cmpsl
inc
pop
fcomip
sub
out
cmp
inc
sar
js
leave
jl
repz
and
repnz
cli
rclb
lds
sbb
ss
sub
push
shl
jno
int3
push
fucomi
testl
movsb
jne
addr16
sub
push
stc
inc
mov
push
arpl
jge
sub
mov
push
in
es
jo
pop
pop
jmp
ds
jo
sub
cmp
imul
loop
movsb
mov
xchg
lods
aas
iret
sub
mov
ss
testb
push
aaa
aam
or
dec
sbb
sbb
fwait
pop
mov
cmpsb
pop
or
sbb
fwait
jmp
rorl
fcmovu
jns
dec
leave
push
inc
sbb
push
daa
xchg
sub
test
mov
pop
or
js
add
pop
loop
mov
ljmp
lods
pop
xchg
inc
out
xchg
fnstsw
filds
mov
shrb
les
mov
lock
pop
adc
std
xchg
sub
adc
mov
push
test
test
lcall
mov
push
shlb
bnd
daa
add
sbb
dec
sbb
inc
std
in
or
sbb
jnp
lcall
or
mov
or
adc
popl
insb
xchg
in
loopne
js
mov
xchg
inc
out
inc
lea
cmpsl
aam
add
repnz
cmp
and
cmp
sub
jne
mov
or
or
shll
mov
mov
inc
push
lods
mov
adc
lods
mov
aad
rcrl
xchg
jns
popa
jl
stos
or
or
pcmpgtb
and
das
insb
adc
cwtl
cli
pop
adc
pop
sbb
addr16
ljmp
loop
sarl
or
mov
mov
orl
jecxz
pop
inc
push
cwtl
mov
test
jge
adc
add
cmp
mov
iret
jge
jnp
dec
pop
cmpsb
dec
push
jne
inc
incl
lods
mov
mov
mov
cmpsl
mov
xor
or
sub
outsb
cmp
add
xchg
jo
jne
outsl
addr16
mov
xor
dec
dec
pop
inc
shrb
fcmovnb
mov
add
movsb
fs
inc
idivb
cs
sahf
cmc
pusha
push
nop
pushf
faddp
movsb
pop
push
cmp
adc
cmp
leave
cmpsl
sub
jo
sahf
ret
test
jno
out
rclb
or
jne
je
inc
mov
stos
adcl
add
ja
out
mov
dec
mov
and
add
or
add
fiadds
pop
add
and
sarl
shlb
pop
push
adc
push
ss
loopne
scas
jl
push
mov
fimuls
pushf
fs
inc
xor
xor
les
ss
ret
sbb
dec
dec
sub
adc
ds
daa
sub
mov
sbb
insl
sbb
sbb
outsl
add
or
sbb
dec
add
add
jmp
jbe
mov
cmpsb
cmp
dec
sub
out
push
or
addb
outsb
cmp
fiadds
mov
dec
mov
jle
decb
adc
cmc
jge
aad
jg
mov
xchg
and
test
shlw
mov
and
popf
stc
aam
rorb
sbb
movsl
or
je
stos
add
ret
out
sbb
clc
cmp
push
imul
inc
cs
rclb
push
cmpsb
std
std
adc
shll
sbbb
inc
in
mov
in
fildl
movsb
insl
hlt
adc
pop
loope
mov
xchg
or
jl
shlb
enter
test
xchg
shr
loopne
add
add
dec
xchg
pushw
jmp
lock
mov
out
jbe
pavgw
aaa
or
adc
inc
push
jge
jp
push
nop
seto
push
lahf
sahf
andb
push
push
dec
int
fisubs
xchg
jmp
inc
adc
lret
push
stc
adc
xchg
cmpl
pop
sbb
faddl
insb
into
push
cmp
xor
mov
mov
and
popa
add
cmp
adc
mov
and
sbb
push
mov
jb
das
add
cmp
dec
xor
ss
dec
cmpsb
nop
lret
xchg
push
jg
sbb
pop
add
arpl
cli
into
push
dec
dec
or
outsb
icebp
or
ret
and
pusha
mulb
pusha
sub
outsb
fwait
push
test
mov
sbb
cmp
lock
or
sarl
lds
insl
sbb
lods
adc
mov
dec
lret
loope
test
shlb
sub
cld
mov
xor
clc
fs
outsl
movsl
inc
in
out
outsl
mov
in
cmp
xchg
mov
shl
scas
scas
out
fs
ss
dec
aas
loopne
movsb
xor
les
xchg
inc
add
lods
clc
sub
repz
sbb
jge
xchg
loope
fisubrs
add
sub
cltd
fnsave
mov
pushf
and
idiv
push
imul
imul
mov
scas
adc
ret
rolb
aas
daa
push
loop
lods
xor
in
jno
fbstp
sarb
pop
ficompl
mov
call
lods
jne
rcrl
mov
scas
icebp
and
xchg
and
adc
arpl
iret
test
mov
xlat
divl
xchg
xchg
in
mov
dec
mov
xchg
shr
mov
arpl
cld
push
mov
cwtl
add
sub
and
dec
aad
dec
mov
ret
pop
bound
cmpsl
inc
fadd
pop
inc
jo
xor
mov
movsl
mov
and
pop
inc
xlat
adc
inc
mov
dec
sub
ja
add
orl
push
pop
mov
shlb
cmp
jp
js
in
mov
cmc
pop
sbb
aaa
pop
test
sub
rorb
js
jno
stos
int
dec
and
sub
ficomps
xor
in
into
sub
jno
shll
idiv
loop
je
jbe
add
sub
mov
add
xchg
pop
inc
pop
jns
push
dec
jbe
pop
lock
cwtl
cli
fs
fwait
push
mov
imul
push
cs
jg
gs
mov
aam
dec
hlt
or
xor
sbb
sub
aaa
fstps
nop
arpl
push
scas
jg
lds
push
mov
push
sub
sub
sbb
imul
iret
in
in
xchg
mov
mov
jbe
addb
mov
aad
mov
shlb
jmp
mov
dec
mov
pop
dec
mov
mov
fistps
jne
aaa
cli
ja
xor
push
aas
inc
lcall
outsb
adc
mov
lea
adc
xor
push
or
xor
mov
mov
mov
sbb
es
inc
imul
dec
jecxz
inc
icebp
push
pop
push
test
xchg
addr16
add
out
pushf
jge
cs
cmp
test
lret
push
aam
notb
out
mov
jnp
xchg
jnp
cmp
jmp
in
push
sbb
cmp
inc
push
adc
movzbl
divb
sub
outsl
xchg
sarb
insl
add
lcall
hlt
sub
fisubrs
and
dec
cmp
loop
push
adc
cltd
mov
mov
ljmp
xchg
lock
xchg
or
pop
xor
push
je
mov
fistpll
ret
loopne
rcll
test
popf
fsubs
lret
out
aaa
xchg
mov
jne
test
aaa
test
jl
imul
mov
roll
cs
jp
fidivrs
mov
sbb
mov
outsl
int
ret
data16
ficoms
rcrb
and
cmpsl
add
cmc
cmp
inc
mov
adc
aas
xchg
mov
mov
fs
pop
dec
lods
push
andl
fstps
mov
testl
sub
inc
aam
addl
xor
and
sbb
jnp
imul
mov
cmp
insl
inc
mov
pop
push
inc
std
dec
xor
lock
aas
push
or
gs
mov
sub
pusha
int
inc
outsb
cmp
shrl
bswap
dec
rcrb
out
dec
es
jle
add
shrl
push
jp
shlb
pop
sbb
cmp
or
cmp
dec
push
mov
out
rorl
mov
mov
mov
js
incb
lret
into
out
jbe
mov
and
push
pop
mov
fistpll
adc
add
xchg
bound
inc
ror
les
rsm
mov
adc
ds
jbe
push
daa
sbb
pushf
mulb
dec
push
mov
push
loope
sahf
adc
xchg
mov
xor
inc
add
push
imull
mov
out
push
scas
xchg
push
popa
andb
movsl
sub
jns
out
sahf
pop
aas
cli
cpuid
aad
sbb
pop
push
add
in
inc
movsl
std
jmp
inc
push
hlt
cmp
mov
cmp
das
or
jmp
stos
cmpb
fstpt
aam
testb
in
insb
movsb
sub
mov
adc
jecxz
push
pop
xor
lds
and
inc
outsb
mov
pop
inc
iret
push
stos
cmp
inc
push
aad
dec
in
aaa
imul
mov
addr16
aam
aam
cmpl
movnti
push
loopne
push
sbb
ja
add
cltd
aam
and
add
cmp
and
mov
imulb
outsl
jmp
stos
lock
popf
sub
outsb
and
sbb
pop
dec
decb
jge
mov
rcrl
stos
mov
adc
jl
fs
mov
cli
jne
pop
int3
and
xchg
test
pop
dec
fucomp
fsubs
inc
or
es
lock
movsb
mov
cmpsb
xchg
dec
call
and
mov
sub
mov
in
roll
mov
push
cld
add
arpl
shrb
pop
and
pusha
xchg
lret
ret
dec
and
push
imul
inc
mov
dec
mov
pusha
outsb
or
fstpl
cmc
lods
xor
andl
pusha
sub
push
xchg
add
test
xchg
jns
add
adc
adc
outsb
add
sbb
pop
sub
pop
xorl
xchg
outsl
pop
aas
in
sahf
dec
pop
in
or
in
xchg
test
arpl
out
dec
and
jbe
xchg
xor
iret
stc
sub
jecxz
daa
das
push
mov
lahf
pop
push
sbb
test
cmpsb
out
shl
sbb
xchg
pop
sbb
fsubs
negb
and
lret
xor
rclb
sbb
inc
in
push
fwait
dec
cwtl
xchg
repz
es
mov
icebp
fists
dec
jge
nopl
lea
xlat
jecxz
out
dec
mov
int3
or
inc
inc
jnp
pop
pop
xchg
jg
mov
and
lret
or
adc
push
int
in
cli
popf
out
fdivrl
pushf
movsb
xchg
push
scas
or
mov
lods
cmp
scas
outsb
loopne
mov
pop
and
rorl
push
or
adc
cld
repz
jg
std
xor
insl
inc
gs
sbbl
hlt
add
and
or
rep
inc
ret
adc
push
dec
sbb
fidivl
mov
or
mov
fmul
cmp
nop
fistps
xor
cmp
mov
dec
lea
dec
inc
adc
cmp
xchg
push
pop
fimuls
xchg
pop
inc
xchg
aam
pop
mov
lds
adcl
mov
aaa
sti
or
nop
add
test
sub
and
lret
fwait
mov
cmpsb
jl
fdivr
jnp
xor
xlat
sub
xchg
ljmp
sub
cmp
or
cltd
jl
add
xor
inc
xor
push
or
push
shll
sbb
mov
sbb
or
pop
arpl
jnp
xchg
adc
in
inc
call
outsl
xchg
or
cmp
jo
push
sub
icebp
mov
lods
adc
fcmovne
push
fbld
enter
or
push
adc
mov
cmpsb
ss
in
jno
or
enter
mov
int
pop
xor
mulb
insb
mov
xchg
jp
fisubrl
sbb
cmp
xchg
arpl
ss
push
insl
adc
nop
xchg
bound
inc
adcb
subb
std
ljmp
in
cwtl
cmp
sahf
mov
inc
cmp
xchg
fld
push
pop
outsb
dec
aam
xchg
insl
cld
mov
cld
in
dec
loop
shlb
mov
aas
jl
ret
cmp
daa
outsb
inc
ds
mov
xchg
ja
les
lock
inc
add
enter
lods
ja
adc
cs
out
loopne
lods
ret
xchg
leave
bound
adc
mov
ret
nop
mov
mov
loop
out
lock
xchg
bound
ss
fcoms
fucom
testl
pop
push
add
cld
fildll
mov
int3
loopne
out
pop
test
sub
cltd
xor
sub
scas
inc
xlat
inc
mov
int
ffreep
das
popa
push
mov
xchg
test
sub
xor
sub
xchg
imul
jb
out
pop
push
mov
pushf
dec
cmp
loopne
xchg
fs
subb
addr16
or
js
std
xchg
and
or
or
xor
icebp
inc
pop
mov
roll
mov
das
int
cmp
pop
fcmovnbe
add
nop
sub
inc
mov
adc
dec
stc
dec
aam
jl
jp
dec
and
lds
nop
scas
xor
pushf
dec
aad
lock
and
mov
push
or
xor
or
stc
mov
jne
pop
push
mov
or
mov
xor
add
mov
aam
mov
cmp
mov
jb
adc
lds
mov
pop
xor
dec
xor
out
insb
in
movsb
imul
cs
mov
cwtl
push
inc
cmc
sub
mov
mov
fwait
cmpl
mov
repnz
mov
scas
lea
shll
cmp
fldcw
sbb
cltd
rcr
repnz
addr16
les
push
add
insb
inc
adc
int
add
and
jne
fsubrs
ficomps
cmp
sbb
fdivrs
notb
mov
or
imul
sbbb
fstl
dec
push
mov
add
cmp
sub
cmp
fwait
subb
add
das
pop
ficompl
flds
jbe
cltd
sarl
xor
icebp
ja
clc
dec
ljmp
lahf
pop
rclb
jbe
es
adc
lock
mov
sbb
and
hlt
mov
cmc
dec
pop
imul
or
notl
dec
push
fistpl
int3
insl
negl
jle
dec
dec
data16
lcall
mov
pop
xor
imul
inc
fldl
xor
xchg
cli
and
cmp
scas
lcall
and
movl
fs
xor
cs
dec
xchg
int
popa
ja
mov
pusha
xchg
pop
lret
adc
inc
roll
push
jge
fmuls
fimuls
mov
mov
add
mov
jl
pop
stos
xchg
lret
xchg
jnp
pop
addr16
jns
ds
std
lds
enter
mov
clc
das
imul
fdivrs
mov
fadds
iret
popf
dec
idivl
call
lods
dec
dec
xor
mov
push
add
xlat
mov
cmpsb
xor
in
jbe
fs
cmp
add
push
push
in
mov
subb
jg
clc
hlt
adc
aaa
cld
fsubrs
int3
sbb
rclb
sub
data16
scas
out
lahf
jne
dec
fstpt
lock
in
pop
or
and
cli
add
or
inc
lcall
outsl
fsubrl
mov
inc
push
pushf
repnz
and
nop
mov
jmp
out
enter
xchg
pop
push
mov
inc
dec
mov
lea
sarb
inc
sbb
mov
inc
jb
pop
jne
jnp
mov
enter
pop
mov
pusha
call
sub
mov
push
dec
mov
xor
imul
inc
dec
fbld
fldl
or
push
rcrl
popa
test
dec
jg
cld
pop
pop
dec
add
xchg
test
arpl
in
sub
test
mov
cwtl
orl
push
in
rclb
mov
insb
or
fwait
lock
adc
push
adc
sub
loope
rcr
aam
mov
push
or
pop
jmp
jnp
arpl
jecxz,pn
movsl
and
sahf
adcl
in
int3
rol
das
aas
xchg
ds
xor
sbb
jnp
cli
jno
push
cltd
test
mov
and
jecxz
push
addl
stc
push
dec
inc
mov
movsb
cltd
dec
jge
gs
bound
push
hlt
inc
fcomps
bnd
xor
popa
mov
adc
sbb
mov
movsb
push
outsl
jnp
sbb
xchg
fisttps
movsb
mov
les
cmp
enter
aad
mov
push
icebp
jne
and
int3
and
idiv
lcall
xor
push
or
mov
mov
jecxz
stos
cld
sbb
add
insl
jns
jno
out
push
loopne
test
dec
sub
clc
xchg
das
sub
inc
and
jne
mov
cwtl
xchg
push
xor
xor
pop
xchg
xor
jnp
xchg
faddp
jns
ret
mov
sbb
mov
repz
adc
cmpsl
mov
test
inc
jg
xor
fsincos
add
je
jmp
or
pop
ja
mov
scas
das
movsl
dec
aad
mov
fildll
and
mov
daa
inc
cmp
mov
in
icebp
xchg
mov
push
lods
push
popa
jb,pn
mov
loope
xchg
xor
push
mov
mov
jae
or
cltd
hlt
inc
cmpsl
push
lods
insb
roll
lret
nop
jae
mov
sahf
pop
xor
mov
outsl
push
fcomps
inc
mov
ds
sub
cli
push
sbb
xlat
adc
cmc
pop
pop
jbe
inc
inc
and
jb
daa
sub
sbb
loopne
xor
pop
inc
xchg
add
push
inc
mov
test
add
ds
roll
roll
sub
cmp
inc
or
cltd
push
ljmp
xor
mov
iret
scas
push
sbb
lock
outsb
adc
dec
lahf
dec
out
and
imulb
push
or
jl
dec
daa
out
not
add
scas
fcomi
cmp
cmp
jnp
fdivrp
int
das
sub
pop
sub
xor
sub
cmpsb
jp
call
pop
aaa
xchg
rorb
cs
pop
xchg
jnp
pop
push
shl
imul
mov
movsl
cmpsl
aas
sbb
cmpl
rcl
jecxz
adc
and
mov
jge
jge
mov
mov
dec
mov
jb
push
mov
jb
add
cmp
jno
push
and
jecxz
xor
xchg
pop
cmpsl
data16
jl
out
fwait
jb
and
fwait
clc
fwait
push
test
sbb
shlb
test
mov
jnp
adc
pop
sub
mov
loopne
popf
dec
imul
les
fcmovu
loopne
jno
std
add
push
cmc
mov
jnp
enter
jo
add
cs
cmp
xor
scas
add
mov
aas
clc
push
mov
pop
jns
or
scas
ret
cld
push
jno
out
data16
sti
clc
adc
push
repnz
mov
popl
sub
adc
pop
decb
xchg
sub
pushf
mov
add
cmpsl
pop
imul
xchg
iret
imul
lods
jl
jbe
rol
xor
mov
data16
add
jno
push
outsl
inc
mov
imul
pop
leave
repz
imul
pop
roll
repnz
pop
mov
adc
mov
loope
inc
shlb
out
enter
push
or
xor
stos
inc
lock
push
push
cld
and
js
das
in
sarb
sub
mov
cwtl
rolb
jl
cmp
movq
pop
mov
mov
loop
loop
adc
inc
es
mov
enter
mov
test
pop
cmp
add
fistps
movd
shrb
sarb
lods
test
sub
aaa
adc
mov
ret
insl
and
jno
push
rolb
xor
mov
cmc
xchg
popf
out
andl
lret
xchg
fmuls
scas
out
ljmp
mov
and
sbb
outsl
cli
add
inc
repz
es
jle
sub
add
sbb
jle
xor
push
fmuls
xlat
xor
ja
into
mov
cmp
pop
pop
push
cli
ret
adc
sbb
mov
pop
nop
add
adc
push
xchg
mov
or
pop
fstp
shr
sub
pop
ljmp
cwtl
mul
mov
pop
jb
inc
mov
movsl
push
into
mov
inc
add
jmp
lret
mov
dec
ret
fimuls
ljmp
fsts
nop
cmp
data16
test
inc
xor
cmp
movsb
out
ror
lods
dec
int3
outsl
sub
sub
mov
xchg
stos
xchg
sbb
jmp
mov
mov
bound
xchg
push
rcrb
ja
scas
pop
adc
add
mov
cmc
jb
xchg
adc
mov
mov
lret
cmp
jecxz
insl
cld
iret
push
pusha
mov
push
xor
inc
add
add
jge
aam
jb
cli
xchg
scas
xchg
adc
nop
dec
cmp
clc
lret
push
andb
lahf
rcll
mov
push
mov
sub
stos
iret
inc
or
stc
loop
xor
int
ss
xor
or
ret
xchg
xchg
rcrl
mov
cs
idivb
stos
stos
and
mov
addr16
jecxz
pop
andl
adc
xlat
ret
pop
in
pop
jnp
mov
dec
into
in
in
mov
enter
mov
pop
mov
into
ljmp
and
mov
jno
imul
jmp
lock
jl
dec
push
fdivs
jnp
decb
xlat
repz
inc
sbb
and
or
mov
adc
pop
mov
pop
push
or
push
jecxz
stos
les
cltd
or
cwtl
popf
mov
pushf
dec
cmp
add
mov
adc
or
jo
lock
push
test
or
push
fxch
mov
dec
fisubl
pop
or
xchg
add
data16
ret
loope
aad
push
into
push
lret
lock
mov
into
adc
cwtl
std
sbb
js
jnp
pop
xchg
das
mov
imulb
adc
push
inc
test
xchg
dec
push
inc
pusha
loope
adc
mov
sub
in
and
scas
push
cmp
imul
cs
insb
enter
js
xor
pop
adc
sub
je
jb
jmp
sahf
cmpl
ficoms
loop
inc
xchg
dec
add
push
and
mov
mov
je
cwtl
cmp
test
push
dec
clc
pop
and
jl
divb
clc
out
and
out
mov
mov
cmp
dec
xor
sub
sbbb
mov
in
imulb
cmpsl
loope
int3
adc
and
dec
dec
mov
testl
test
fdivrl
repz
mov
arpl
ss
pop
fs
inc
sbb
out
cmpsl
mov
inc
sarl
xchg
mov
int3
xor
roll
xor
xor
xchg
cmp
lods
push
mov
das
cmpb
push
adc
idivl
jb,pn
mov
pusha
aaa
sub
mov
adc
and
lods
and
cmp
mov
inc
inc
int
out
sarb
jl
jns
and
insb
adc
add
shlb
pop
sbb
push
stc
mov
xor
mov
mov
out
dec
in
fisttpl
push
out
xor
ret
dec
fucomp
add
hlt
push
daa
or
add
dec
bswap
leave
mov
pop
inc
pop
xchg
bound
jp
fcoms
pop
pop
test
push
jbe
and
aaa
sub
neg
push
int
xchg
out
out
mov
lcall
mov
aad
push
sti
jp
xchg
jno
inc
dec
scas
xor
ljmp
mov
or
jbe
jle,pt
pusha
pop
mov
popa
stc
les
mov
rol
shlb
push
xor
or
add
adc
adc
jne
aam
mov
or
sub
aam
dec
mov
lret
repz
addl
repz
inc
jg
cmpl
jbe
pop
repnz
enter
movsl
gs
jge
mov
stos
rclb
roll
fucomp
jnp
cwtl
sub
sbb
jb
loop
adc
sarl
les
std
inc
lds
bound
mov
jl
adc
mov
mov
enter
sbb
test
mov
scas
ficomps
insb
push
inc
mov
out
pop
fildll
mov
lock
jb
ja
loop
xchg
pusha
mov
sti
and
std
andb
fdivrs
jmp
sbb
movsl
push
mov
push
loop
mov
and
int
push
mov
push
mov
sti
js
jns
clc
adc
lea
repz
hlt
test
lret
mov
sub
test
cmpsl
xchg
xchg
gs
mov
stc
stos
sti
and
in
xchg
sub
pop
mov
xor
cmp
mov
loopne
sub
mov
ror
dec
xchg
pop
mov
loope
pusha
mov
xor
cmp
out
sbb
or
jmp
jno
jb
ljmp
add
xor
lock
cmpsl
dec
and
xorl
adc
dec
adc
loope
insb
pop
fiaddl
subl
lcall
mov
dec
lock
push
push
das
jae
dec
cmp
mov
movsl
fstpl
daa
rorb
out
pop
adc
pop
rcr
out
mov
test
fadds
dec
pop
aad
iret
jns
sub
aam
xor
mov
push
divl
call
add
cmp
mov
xchg
ja
cmp
dec
or
jb
cmpsb
mov
test
call
cmp
push
cmp
mov
sbb
icebp
shr
sub
in
jno
fs
fnstcw
in
pop
adc
lds
jne
xchg
push
pop
in
mov
adc
lcall
int3
sub
lods
sti
push
jnp
jns
inc
dec
out
mov
or
fs
scas
and
jmp
out
fs
in
nop
inc
push
das
xor
addr16
adc
mov
imul
sub
push
inc
mov
jecxz
push
jge
mov
stos
sbb
int
jae
je
jbe
adc
inc
cltd
outsl
mov
jmp
dec
cmp
loopne
xchg
inc
cmpsb
mov
arpl
xchg
lods
lock
les
dec
iret
adc
fsubl
es
fiaddl
push
shrl
test
addr16
push
lods
cmc
das
sub
push
bound
mov
mov
popa
mov
or
lods
jp
jb
repz
into
xchg
sbb
outsl
pop
imul
or
fidivl
sbb
add
push
sti
jbe
mov
dec
sbb
adc
mov
test
jno
jle
arpl
pop
xchg
dec
test
mov
inc
mov
mov
push
mov
loopne
jge
andl
out
push
test
push
pop
xchg
jg
fcoms
rolb
add
jg
mov
subl
dec
inc
adc
les
and
dec
xchg
je
scas
in
or
sbb
fdivl
fdivrl
mov
imul
or
fs
mov
imul
push
inc
push
push
bound
and
pop
sub
adc
pop
aaa
cwtl
add
dec
xor
andl
in
jl
nop
hlt
push
mov
mov
xchg
cmp
xor
mov
and
dec
movsl
lahf
cmp
rcrb
in
xor
shlb
sbb
jl
jle
popa
jp
ss
and
mov
dec
mov
xchg
das
xorb
xor
jb
js
xor
pushf
pop
inc
inc
in
dec
lods
jmp
in
je
addr16
jg
adc
inc
jg
dec
mov
push
push
pop
lds
je
pop
xchg
lret
mov
leave
movsb
arpl
inc
mov
xchg
mov
xchg
cmp
out
and
movsb
lock
adcb
sbb
mov
push
out
xchg
xchg
xor
bound
bound
adc
mov
loop
adcb
fistps
sbb
jp
sbb
pop
lcall
mov
inc
xchg
fstps
fcoms
inc
xchg
insb
loop
cmpsb
jne
rcrb
mov
test
push
mov
fwait
mov
iret
rolb
aaa
or
hlt
push
inc
idivb
dec
iret
scas
fistpl
cwtl
fsubr
je
inc
in
lds
jne
imul
aad
jae
daa
mov
addr16
inc
push
sub
jns
inc
and
out
int
or
ja
int3
in
je
mov
movsb
pop
daa
pop
je
test
stos
cmpl
jl
nop
xor
sbb
mov
pop
dec
je
into
inc
inc
fsubs
sbb
in
jns
in
pop
clc
sub
fcoml
push
stos
jle
in
iret
xchg
xor
shl
int3
jle
sarb
arpl
pop
pop
adcl
sub
xchg
push
xchg
out
aad
fwait
adc
xlat
ja
loopne
add
stos
ja
xor
mov
fmulp
inc
mov
iret
test
mov
ret
ds
push
pop
in
push
push
adc
fs
and
mov
andl
pusha
push
mov
jbe
subb
ret
inc
xchg
iret
cmc
pop
cltd
pop
inc
mov
sar
rorb
mov
mov
xchg
add
mov
sahf
in
ficoml
test
mov
pop
in
or
mov
pop
in
xor
aam
icebp
mov
and
mov
cmpsb
mov
mov
ja
inc
jno
and
sets
push
sbb
or
xor
xor
cli
loopne
es
and
push
pop
out
pop
fisttpl
cmpsb
mov
pop
fs
cmpb
in
and
call
cmc
jbe
inc
adc
aad
fisttpll
scas
cmp
lods
dec
mov
xchg
jp
lcall
xlat
test
test
cwtl
push
rcrb
pop
xchg
lods
bnd
jo
lock
aad
sub
inc
mov
pop
sub
push
pushf
mov
shrb
mov
sbb
pop
insl
fistpl
clc
xlat
orl
pop
rcr
in
dec
jl
loope
test
rorb
jge
pop
pushf
scas
nop
out
insl
mov
cmpsb
push
ret
lea
ja
jp
outsb
adc
fistpl
out
xchg
push
scas
mov
pop
loopne
xchg
xchg
mov
mov
mov
xchg
in
cmc
jmp
cld
loopne
addr16
cs
shl
pushf
std
cli
incb
pop
inc
sbb
sub
add
popf
cmp
adc
push
iret
insl
cmp
mov
or
idivl
xchg
adc
out
test
adc
out
enter
arpl
xlat
std
cmc
cltd
push
in
repz
lds
adc
popa
jbe
push
sbb
mov
mov
jecxz
insl
mov
jecxz
dec
add
jno
add
das
jp
pop
inc
lods
enter
lahf
lea
fwait
shrl
das
lea
lds
scas
sub
pop
sbb
lcall
ss
inc
sbb
or
fiaddl
sub
and
leave
out
popf
dec
mov
sahf
push
adc
xlat
sub
ret
mov
xchg
adc
jae
jnp
std
sub
mov
push
mov
cs
enter
or
push
inc
push
ret
daa
xlat
pusha
addr16
rcrl
push
xchg
shlb
pop
sti
mov
sbb
pop
inc
mov
xchg
int
mov
js
cmpsb
aad
addr16
jno
or
add
or
add
sar
adc
outsl
fldt
test
sbb
stos
jp
daa
inc
adc
inc
mov
jl
jae
mov
fnstcw
insl
mov
inc
jno
push
sub
and
enter
mov
inc
mov
jg
pusha
test
xor
stos
shll
mov
dec
je
jecxz
sbb
aas
inc
ss
ds
loop
stos
pushf
out
stc
sbb
ljmp
test
aas
xchg
mov
out
call
xor
add
xor
insl
dec
add
push
sbb
test
std
add
movsl
int
ret
sub
jbe
jle
scas
or
incb
into
xor
popf
push
pop
sub
xchg
insb
in
clc
push
dec
dec
jp
fs
pop
nop
add
loop
xor
test
gs
cmpsl
add
push
cmpl
movsb
push
enter
adc
les
or
out
add
and
push
repz
movsb
leave
inc
or
cltd
xor
dec
leave
jbe
and
lret
dec
std
pushf
call
sub
jb
xlat
cmp
lahf
adc
adc
negl
adc
cmp
fwait
ljmp
mov
jnp
xchg
mov
xor
jl
dec
ljmp
aaa
push
xor
push
mov
mov
push
adc
sbb
mov
mov
xchg
xor
inc
pop
inc
lret
inc
jae
xor
aaa
inc
shr
xor
xor
iret
scas
dec
push
cmpsb
inc
leave
jbe
scas
mov
repnz
rcl
pop
pushf
cmp
negl
jl
cmp
int3
cmp
cmpsl
or
xchg
rcrl
fs
leave
ret
daa
push
pop
mov
or
aas
insb
leave
add
xchg
jbe
leave
cmpsb
cmp
sub
sahf
mov
xchg
push
add
cmp
jnp
add
in
enter
enter
or
sub
lock
shlb
popa
xchg
cmp
loopne
dec
ret
fstpl
push
xor
fs
mov
decb
dec
mov
pmaxsw
imul
mov
div
fstpt
sbb
push
pusha
mov
fisttpl
dec
cmc
mov
icebp
xchg
mov
in
lock
les
dec
divl
lret
fisubs
push
jp
and
in
aas
sub
and
mov
stos
test
mulb
int3
repnz
or
sbb
dec
inc
loope
shll
movsb
repnz
outsl
mov
xchg
iret
xchg
lahf
rcl
push
push
and
mov
adc
cmpb
scas
in
sbb
adc
mov
pop
cmp
cltd
mov
divb
xor
movb
jno
in
cmpsb
jmp
out
shrl
icebp
jo
or
test
sub
mov
cmp
out
mov
inc
adc
icebp
loopne
inc
mov
cld
mov
cmp
pop
xor
jns
jbe
push
sbb
test
add
mov
mov
loop
push
shr
jg
mov
repnz
outsl
push
fs
hlt
test
cmp
jno
cmp
or
repz
xchg
jo
mov
lock
adc
cmpsb
xchg
in
xor
sahf
or
xchg
ja
adc
test
out
addr16
jmp
push
clc
or
lcall
jbe
hlt
xchg
cmp
pushf
jae
popf
and
pop
add
das
mov
xchg
xchg
sbb
sub
jecxz
fiadds
xchg
mov
dec
mov
pop
sahf
movsb
test
jae
lcall
call
adc
or
dec
dec
inc
jbe
inc
push
movsb
repnz
out
mov
aad
std
jl
loopne
imul
sbb
loopne
repz
adc
mov
mov
mov
rorl
js
shlb
filds
mov
and
je
fidivrs
fidivrs
std
cmc
ja
popa
sub
sbb
pop
add
mov
jno
inc
pop
icebp
jmp
rcll
test
push
cmp
push
daa
and
cmp
rorl
sbb
sub
sbb
pop
or
xchg
adc
mov
pop
and
adc
jle
lods
in
faddp
fs
adc
in
jle
flds
jp
mov
sbb
mov
mov
and
xchg
push
notb
stc
xorb
fwait
cmp
mov
test
push
data16
mov
ja
pusha
lods
inc
int
or
add
jecxz
imul
cmp
aad
cmp
test
je
push
pop
pop
test
sbb
sub
cmpb
mov
and
or
dec
jecxz
xor
cs
pop
push
lahf
inc
pop
sbb
pop
or
xchg
inc
sbb
add
insb
mov
loope
or
sbb
add
int
outsb
mov
sbb
xor
jle
xor
cmp
pop
cmp
adc
cmp
and
mov
sub
fistps
js
ret
xlat
rcrl
sub
jae
ret
cmpsl
or
xchg
loope
fwait
test
mov
cmp
sbb
sbb
cmpl
xchg
decl
mov
adc
fisubrs
loope
add
jb
push
fistpl
dec
jge
lret
inc
jns
ljmp
add
add
cmp
aas
aad
jge
sub
call
inc
rclb
daa
add
repz
pop
lahf
pop
lret
jae
xor
push
movsl
mov
lds
data16
in
rolb
inc
mov
sub
mov
and
jmp
and
in
and
fldcw
push
arpl
xchg
lret
mov
data16
cmp
je
cmp
xor
push
hlt
sub
mov
adc
xchg
bound
popf
cmp
sbb
aad
xchg
hlt
or
and
xchg
sarl
xor
sbb
sbb
outsl
jne
mov
fnsave
inc
arpl
ljmp
std
sbb
lock
fiadds
outsl
xchg
add
jo
adc
fwait
pop
xchg
rorb
test
aad
cs
dec
int3
adc
or
jb
xchg
add
jg
jb
ficompl
je
cltd
xchg
add
bnd
adc
pop
dec
test
sub
push
popa
ret
loop
xchg
pop
xchg
iret
daa
pop
cltd
std
jp
cmp
mov
test
pop
dec
xchg
xchg
mov
imull
pop
sub
lcall
pop
add
xlat
test
fistpll
test
hlt
add
ja
je
inc
jg
xchg
cmp
call
lea
push
fidivrs
out
or
popf
xchg
in
fs
xchg
mov
je
leave
movsb
or
jmp
mov
cmp
dec
xchg
inc
aas
loop
xchg
xor
push
sub
std
or
aam
shl
enter
push
mov
push
dec
xchg
dec
adc
push
jnp
mov
orl
xchg
cli
dec
std
xchg
ret
sysenter
sub
push
shlb
cmpb
out
mov
mov
into
pushl
fs
ret
mov
int3
orb
inc
loopne
sti
inc
pop
pop
int
pop
lea
out
fmulp
in
xchg
pop
sub
hlt
lods
jae
les
test
and
std
popf
ret
out
les
dec
xor
lods
cmp
inc
nop
loope
dec
ljmp
aam
fildl
lret
inc
dec
test
adc
or
jnp
push
inc
pop
jbe
in
add
lods
shrb
pop
jb
fyl2x
clc
xor
jg
nop
push
jp
insb
pushf
mov
je
add
sarl
or
cmpsl
leave
pop
pop
shr
jne
cwtl
shrb
xor
xor
shrb
xchg
sbb
call
sbb
stos
jnp
jge
std
push
inc
lahf
jge
stos
and
and
int3
ret
faddl
ret
pop
loope
int
inc
sbb
cli
pushl
mov
js
mov
xchg
lahf
outsb
jo
test
and
mov
sub
andb
jle
in
loop
cld
dec
pop
ds
roll
test
bound
xor
and
inc
roll
subb
repnz
pop
xchg
mov
push
loopne
into
test
inc
sub
es
js
or
movsl
sbb
mov
mov
adc
fbld
xor
xor
fdiv
sahf
and
daa
or
adc
pop
inc
pop
or
hlt
loop
mov
pop
xchg
cmp
push
cmp
or
les
jbe
push
or
mov
pop
inc
lahf
xor
sub
push
mov
repz
into
stos
dec
dec
pusha
popf
xchg
xchg
adc
jne
mov
mov
int
iret
xchg
addr16
lcall
jle
rcr
push
not
es
es
dec
push
popa
hlt
addr16
loop
mov
mov
testb
inc
popf
push
fnsave
push
stos
sub
aaa
mov
loopne
xchg
adc
rcrb
jmp
xor
lret
pop
jno
sahf
sbb
add
pop
stos
sub
in
xchg
int
repz
cmp
xor
or
pop
dec
push
leave
adc
jbe
mov
dec
mov
popf
jge
mov
mov
mov
lock
sub
jns
or
lcall
imul
popa
ret
sub
cmp
rcl
jecxz
pop
imul
jl
pop
jno
outsl
nop
mov
je
arpl
mov
aam
sub
dec
leave
sbb
lods
shr
xchg
insl
insb
out
leave
sub
mov
stos
into
rcr
jae
xor
gs
xchg
jno
push
jne
enter
movsb
js
lahf
ds
bound
push
sti
adc
hlt
inc
adc
add
fdivl
xchg
or
cltd
sub
scas
imul
pop
xchg
xchg
fdivl
jne
add
push
dec
jbe
out
popf
or
imul
push
sub
pop
push
jmp
rcrb
pop
sbb
pop
pop
mov
add
sub
inc
sbb
test
mov
fistl
cmpsl
add
pushf
xchg
sub
mov
dec
push
xor
sbb
lods
imul
cmc
push
in
cmp
sbb
sub
cmp
stos
pop
movsl
imull
dec
jg
cmp
xorb
push
aam
popf
lods
jne
mov
mov
shufps
xchg
fwait
pop
int
mov
in
pop
jbe
dec
repz
xchg
jecxz
enter
dec
xchg
jae
out
out
lock
popa
leave
loope
rorl
or
imul
pop
stos
xlat
mov
fiaddl
mov
mov
mov
mov
cmp
jb
pop
mov
out
mov
jg
shll
icebp
dec
cmp
arpl
push
sbb
nop
push
outsl
bound
out
scas
neg
outsb
outsl
jl
mov
popf
mov
jecxz
repz
adc
pop
fnstsw
pop
lea
mov
sbb
decb
repnz
lea
out
mov
pop
xor
push
incl
lret
mov
notb
xor
ret
rcr
cld
cs
lahf
pop
and
mov
add
jbe
jg
sbb
adc
jnp
es
sbb
inc
ret
imul
mov
push
sahf
and
mov
pushf
movsb
inc
jnp
orb
mov
sub
out
int
cmp
mov
lahf
or
bound
xchg
adc
dec
sbb
adc
jne
jae
decb
pop
test
addr16
mov
shl
cmpsl
adc
sub
pop
pop
repnz
push
xchg
mov
mov
cwtl
cmp
jg
pop
add
outsl
movsl
mov
push
pop
and
or
sub
aam
sbb
and
lcall
xchg
fsubrl
sub
xchg
push
push
je
lret
cmp
sbb
call
sub
arpl
mov
test
or
rcrl
or
xor
mov
aad
add
lods
adc
clc
int
divl
sar
cli
dec
inc
mov
loop
xor
insl
cmc
push
test
mov
movsl
mov
cld
mov
out
inc
into
sbb
add
ja
lcall
aam
xchg
inc
mov
in
sbb
xchg
mov
xor
push
lods
sahf
movsl
ss
pop
jmp
mov
inc
fsubl
ds
mov
aaa
call
pop
lds
pop
sbb
test
gs
into
push
aad
adc
call
sub
int3
outsl
xor
sbb
xor
lret
icebp
cld
push
inc
jno,pn
mov
movl
jecxz
jbe
cld
aad
inc
pop
xchg
imul
addr16
push
push
imul
pop
test
fisubl
lcall
int3
out
push
jge
cmp
ljmp
add
cs
sub
jl
pop
mov
adc
inc
cmp
adc
cli
adc
pop
dec
jle
adc
mov
xor
cli
mov
push
and
cmp
mov
fucom
add
xchg
in
roll
push
jno
push
lret
dec
in
mov
inc
es
jl
clc
and
push
lcall
clc
sbb
test
lcall
rorb
sbb
push
das
mov
adc
mov
cmp
loop
mov
or
mov
pop
mov
sarb
mov
stos
dec
lods
push
jnp
mov
sbb
lods
jnp
and
and
and
add
adc
sti
loopne
lret
enter
lock
mov
mov
daa
xorl
xchg
pop
movsb
cmp
ret
and
push
movsb
sub
nop
mov
inc
fisubs
adc
xchg
inc
xchg
in
and
insb
je
stos
xchg
enter
and
jns
das
sahf
fwait
test
iret
pusha
push
fldl
in
add
fwait
push
inc
push
test
nop
enter
jle
pop
sub
mov
xchg
xchg
js
rcrb
ds
shll
sbb
push
or
push
add
sahf
xchg
movsb
mov
in
adc
stos
xor
mov
fadds
push
movsb
lock
lock
testl
pop
mov
lcall
popf
imul
mov
rcrb
mov
push
sbbb
sbb
mov
sbbb
mov
cwtl
rorb
js
adc
outsl
mov
outsl
add
sbb
sbb
pop
or
outsl
or
xchg
movb
xchg
js
and
out
jnp
loopne
sub
add
pop
lods
pop
or
jmp
test
push
mov
sbb
jmpw
push
xor
jp
out
dec
mov
or
cs
dec
lret
sub
lahf
mov
sahf
mov
xor
sub
rcll
lock
loopne
fs
push
dec
dec
in
stos
jmp
jecxz
inc
jo
js
inc
sahf
mov
adc
jbe
das
pusha
xchg
dec
push
fcmovnu
cmpsl
lret
dec
clc
pop
jle
xchg
xor
imull
mov
xchg
ljmp
lods
lcall
push
xchg
inc
xchg
inc
inc
jae
in
data16
sub
int3
sub
xor
cmp
jne
dec
dec
add
in
jae
adc
insb
insb
rolb
and
dec
sub
loopne
ret
or
scas
lds
fwait
es
mov
add
lret
cltd
push
sbb
lock
push
jbe
inc
jnp
xchg
mov
sbb
subl
rorb
cmp
and
add
add
jmp
roll
jp
sub
ds
pop
mov
jp
scas
cmp
pop
ljmp
lds
aad
sbb
imul
mov
aad
mov
push
mov
fwait
popa
popa
sub
mov
fisubs
sub
aas
into
xor
fcomps
lds
cmp
lahf
loop
inc
sbb
push
fidivrl
mov
push
lahf
stos
in
pop
mov
into
add
mov
leave
dec
jle
inc
jmp
mov
mov
mov
arpl
repz
or
mov
popa
pop
pop
or
enter
out
shr
pusha
int
sbb
psubsw
mov
sti
inc
pop
pop
sahf
mov
insl
xor
fisttpl
mov
rcll
jbe
dec
xor
and
sbb
enter
fnstenv
push
inc
in
mov
pop
das
and
cmp
or
lods
jns
lahf
mov
pop
lea
dec
jl
pushf
push
lcall
fsub
push
movsb
gs
sub
mov
ljmp
je
ja
lahf
jnp
xor
sub
aas
cld
mov
push
fsubr
add
lds
pop
pop
mov
in
xor
in
outsb
popa
test
pop
sbb
fsts
repnz
aam
cwtl
dec
jl
or
push
mov
and
and
fisttpl
xchg
lret
mov
js
loop
sbb
imul
mov
popa
inc
jecxz
xlat
imul
cmp
adc
dec
pop
jl
adc
push
lock
push
fldl
cmp
and
addr16
sbb
sub
sbb
popa
fxch
or
aam
test
mov
into
mov
test
rclb
daa
clc
or
jnp
adc
adc
cmp
gs
sbb
out
int
dec
enter
mull
hlt
imul
cld
inc
sbb
cmp
ljmp
sbb
cmp
stc
fists
loop
push
xchg
adc
mov
add
sbb
add
sti
fs
pop
push
adc
cmp
mov
sbb
mov
xchg
mov
mov
cmp
xchg
data16
push
add
testb
add
or
push
hlt
cmp
lea
lock
enter
cmpsb
push
lret
in
dec
insl
test
ds
xchg
outsb
test
nop
test
cmp
dec
test
in
fs
adc
pop
data16
add
loop
sbb
cmp
aas
stos
adc
ret
push
mov
jo
and
add
dec
sbb
sub
mov
sub
mov
xor
cmpsb
and
and
mov
xlat
lcall
xchg
in
pop
stos
out
mov
xlat
idiv
cmpsb
dec
mov
inc
inc
inc
mov
pop
fxam
pop
icebp
out
push
lods
push
icebp
fnstcw
lcall
fnstenv
sub
into
subb
inc
fstpl
jg
inc
ret
sbb
lahf
push
push
shlb
push
xchg
into
pop
and
out
daa
cmp
gs
jo
push
jge
pop
sti
jbe
es
ja
int
rorb
jecxz
xchg
ja
jns
push
sbb
and
xor
lcall
ss
jl
fs
jmp
mov
scas
icebp
movlps
outsl
mov
scas
and
fistps
test
aas
int3
xchg
ret
xchg
loope
mov
pop
cmp
movsl
dec
add
mov
sub
popf
into
test
std
out
repnz
shlb
lods
mov
fldcw
push
mov
aam
js
pop
pop
push
test
repz
jbe
pop
sbb
dec
adcl
shrb
pusha
jb
pop
aam
js
scas
rclb
cli
push
loop
lods
test
xchg
test
inc
xor
dec
xor
inc
shll
daa
inc
and
jmp
add
jo
sbb
ljmp
aad
out
adc
mov
and
mov
jmp
fidivrs
cmp
cmpsl
pop
add
sub
mov
fcomps
out
jg
je
adc
scas
mov
cmp
and
dec
add
mov
pop
call
sub
in
addl
adc
add
lahf
jbe
gs
xchg
jo
dec
in
push
lods
ret
icebp
and
pop
lods
or
lock
movsb
mov
dec
mulb
int
repnz
int
cmpsb
fldt
jp
movups
adc
popa
rolb
outsl
jae
faddl
arpl
aam
pop
or
mov
jno
push
mov
cli
js
adcl
mov
adc
push
mov
imul
jge
icebp
lahf
or
cmp
mov
and
negl
lret
or
movsl
xchg
in
dec
aaa
movsb
sbb
sbb
or
dec
fucomi
jmp
pop
js
roll
ljmp
xchg
jbe
sti
pop
fsubrs
sarb
pop
cmpsl
sbb
pushf
rcrb
ret
mov
leave
or
dec
mov
add
pop
sub
jmp
out
aam
fmuls
cmp
inc
movsb
xchg
hlt
fcomps
stos
sub
hlt
mov
adc
jmp
jbe
in
and
sub
out
pop
xor
and
dec
mov
pushf
cmp
adc
jge
lods
or
push
xchg
adc
mov
push
inc
xchg
mov
sub
dec
imul
lods
jle
test
push
mov
jle
in
int3
dec
not
sub
dec
mov
aas
jle
in
idivb
sbb
fistpll
jp
leave
pushf
push
and
jle
lods
dec
or
jno
jbe
xor
lcall
lcall
xchg
sbb
pop
inc
or
ss
ss
inc
mov
in
xchg
xor
icebp
inc
fmul
daa
mov
scas
inc
pop
pop
mov
push
pop
xor
dec
sub
sub
mov
cmp
xor
hlt
movsl
dec
lcall
lret
sbb
sub
rcrb
pop
movb
es
jmp
mov
repnz
adc
add
add
in
test
add
xor
mov
dec
and
mov
call
xor
pop
stos
cmp
loope
adc
or
sbb
sub
dec
inc
ss
rol
ficoml
add
stos
sbb
sub
mov
lahf
enter
jle
lcall
push
adc
and
seta
fstpl
xchg
cmp
out
cwtl
sti
aas
out
lods
loope
outsb
stos
sub
mov
mov
cmp
gs
mov
aaa
cld
adc
push
jl
inc
push
xchg
mov
xchg
sbb
jle
in
fisubrs
sbb
out
lods
or
mov
pop
cmp
mov
arpl
or
neg
cld
mov
push
imul
cli
ret
stos
add
push
mov
mov
dec
xchg
shrl
push
mov
imul
jge
int3
xor
jmp
stos
dec
cmc
leave
jo
mov
mov
mov
mov
mov
push
icebp
adc
pusha
xchg
mov
lret
push
cmp
jecxz
cmpsl
leave
sbb
in
loop
inc
sti
pop
sahf
cld
mov
fisttpll
into
outsl
les
jp
mov
test
push
dec
jmp
sub
cld
adc
ss
push
stc
ljmp
sahf
and
and
fnsave
mov
mov
ret
inc
push
notb
push
rclb
loope
test
repz
sbb
jg
xor
dec
hlt
push
jge
insl
mov
mov
cmp
jb
into
add
jge
push
mov
xchg
in
fisubs
fidivrs
ficompl
mov
inc
aas
or
lcall
outsl
hlt
in
pusha
mov
inc
shr
ja
lds
lock
movsb
incl
jae
ds
popf
jmp
pop
inc
dec
pushf
jns
jecxz
faddl
inc
bound
sbb
fwait
mov
or
inc
jp
test
cmpsl
xorb
mov
mov
sub
xchg
sbb
and
xlat
sbb
pop
ret
aas
or
push
add
xor
dec
push
sub
cmp
sbb
pushf
push
push
sub
fs
xor
repnz
ret
jp
loopne
dec
mov
mov
push
shr
jb
dec
shlb
rcrl
and
jmp
mov
aam
out
mov
mov
in
xchg
and
xchg
pop
cmp
mov
inc
dec
dec
es
sbb
jecxz
push
repnz
push
mov
in
cmp
in
insl
out
loop
sahf
and
icebp
push
mov
popf
pop
jecxz
and
mov
mov
xchg
jnp
pop
cmp
sti
insl
mov
adc
lahf
pop
aam
ret
inc
out
gs
sbb
push
icebp
xchg
pop
push
repnz
pushf
and
cmp
xchg
mov
xchg
cmpl
sub
push
inc
outsl
cld
je,pt
pop
dec
mov
jge
cltd
add
in
bound
jbe
adcb
je
or
mov
pop
push
jle
or
mov
out
cwtl
stc
pop
enter
dec
mov
inc
rcr
pop
add
fidivrs
and
add
outsl
shr
dec
jo
mov
sahf
xchg
add
pop
jge
jbe
push
push
ss
jg
pop
stos
imul
dec
repz
test
ret
test
pop
fimuls
sti
jmp
or
sbb
xor
lods
mov
pop
jnp
jbe
pop
fwait
add
pusha
repz
mov
shrl
ja
pmaxsw
out
xchg
in
mov
bound
xchg
pop
dec
in
in
mov
and
mov
imul
pop
cwtl
leave
jbe
pop
add
and
aad
push
push
push
inc
fcoml
sbb
inc
cmc
aas
das
roll
adc
js
cmp
out
iret
arpl
xchg
mov
jb
add
mov
inc
cmpsl
mov
scas
das
xchg
clc
ja
dec
loop
xlat
mov
mov
xchg
loopne
mov
popf
xchg
and
in
mov
mov
sbb
imul
shll
xlat
cltd
std
repnz
fisubs
test
in
push
rcrb
push
dec
and
jnp
daa
icebp
xchg
inc
inc
add
push
pusha
dec
ret
or
pop
add
enter
jmp
outsl
and
pop
cmpsl
cmp
mov
loopne
sti
stos
js,pn
cmp
adc
lcall
test
inc
les
or
cld
xor
add
or
jne
leave
inc
mov
fiaddl
mov
arpl
xchg
loop
cmp
cmpsb
and
adc
or
loopne
movsb
jecxz
push
jle
int
dec
scas
mov
inc
push
sub
xchg
pop
aam
movsl
mov
lcall
mov
shlb
jecxz
cmp
fisubs
sub
mov
imul
cmp
out
or
sbb
add
pop
sbb
push
shl
xchg
aaa
cwtl
or
mov
and
inc
fimull
enter
ret
call
and
ljmp
out
aaa
cld
in
jo
ljmp
xor
xlat
jecxz
pop
inc
push
push
cld
sbb
rolb
test
cmp
push
xchg
imul
arpl
inc
mov
shll
in
sti
xor
in
sarl
out
test
mov
push
pop
dec
and
sbb
lock
push
add
mov
mov
roll
int3
pushf
and
and
scas
test
dec
mov
push
cmp
adc
mov
push
gs
test
sub
push
mov
ret
in
insb
jno
lahf
xor
int3
xchg
ss
push
jbe
add
jge
jle
sub
fcomi
sub
les
pop
andb
xchg
enter
mov
lret
cltd
push
or
shlb
sub
add
js
pop
mov
test
pushf
insl
mov
daa
jne
shrl
cmp
xchg
lret
aaa
les
adc
insl
bound
sub
pushf
int
sti
and
mov
popa
or
addr16
push
fs
lods
mov
dec
pop
lds
cld
cltd
lea
fisttpll
testb
pushf
sub
les
out
add
pop
pop
push
in
int3
mov
leave
into
dec
push
jle
popa
stc
mov
pusha
sbb
jb
fcoml
les
push
xchg
mov
aas
insl
cld
sti
subl
jmp
icebp
lea
out
inc
fistpl
loop
mov
mov
mov
xchg
xor
cmp
fmull
jnp
sub
add
das
lods
pop
mov
jg
jecxz
cmpsb
cmp
jge
sub
xchg
add
pusha
push
fldl
inc
mov
xor
sub
jle
sbb
in
insl
jbe
enter
mov
pop
mov
push
icebp
ltr
jge
sbb
scas
pop
dec
jge
repnz
in
stos
mov
out
ffree
dec
mov
push
inc
in
xorl
xchg
jb
mov
stc
sbb
mov
mov
iret
jno
cmp
jge
or
lea
sub
out
add
dec
dec
jmp
sub
enter
fsubrl
dec
nop
aaa
push
xchg
cmp
jmp
movsb
or
cltd
sbb
jo
shl
inc
pop
push
insl
out
bound
add
push
out
xor
shr
add
cmp
jnp
pop
lods
cmp
mov
mov
mov
xchg
addr16
cld
sarb
test
sti
mov
mov
cmpsl
testl
aad
scas
lret
mov
mov
jo
cltd
jecxz
xchg
test
xchg
or
add
adc
lret
stc
adc
mov
mov
sbb
into
adc
and
das
adc
or
add
push
or
lea
adc
cmp
sbb
mov
xor
out
hlt
fimull
cmp
std
lods
sbb
sbb
lea
movsl
sub
mov
cmpsl
inc
imul
fdivp
push
pop
xchg
push
xlat
mov
sub
or
icebp
dec
mov
xchg
mov
dec
sub
add
jp
xchg
popf
call
les
or
int3
out
xor
cltd
pop
mov
jle
inc
mov
mov
push
dec
or
inc
mov
popf
out
cltd
leave
add
ficoms
test
inc
jle
orb
push
in
decb
xchg
jl
sub
dec
jmp
and
fdiv
and
pop
jno
cmc
mov
fxch
xor
xchg
ss
pushf
lea
pushf
repnz
fbstp
lcall
js
adc
mov
lret
inc
fldl
icebp
jne
ja
jne
push
mov
aam
mov
xchg
mov
sarb
std
fimull
js
cmpb
push
lock
jle
lods
pop
testl
fwait
add
int
lock
dec
stc
push
cld
aaa
add
push
mov
out
xor
sbb
jnp
shll
lods
xor
aaa
test
push
sbb
dec
loopne
out
stos
sbb
pop
dec
cmp
outsb
pop
jl
pushf
mov
cli
rcll
movsb
test
inc
sbb
or
mov
sarb
inc
pop
addr16
push
frstpm(287
sarl
stc
outsl
int
and
cmp
xor
lcall
call
mov
sub
push
mov
or
loope
mov
jmp
insb
push
inc
dec
in
xchg
jg
and
je
rcrb
loopne
aaa
movsb
outsl
mov
or
inc
lahf
pop
imul
imul
jge
inc
daa
sbbl
in
sbb
dec
icebp
jae
jno
test
pop
ds
xor
fdiv
xor
fidivrl
stos
out
mov
jecxz
repnz
int
sbb
dec
add
inc
dec
mov
inc
dec
call
sub
inc
push
pop
mov
mov
cmp
and
fs
mov
adc
stos
fucomp
fldenv
mov
sbb
adc
xor
pushf
mov
les
inc
imul
xor
or
out
cmp
cmpsb
pushf
ss
cs
mov
lcall
xchg
shr
int
test
scas
sbb
bound
mov
pop
jl
pushf
ret
mov
cmp
mov
test
and
jmp
mov
and
test
mov
mov
int3
lds
lds
jp
cltd
pop
pushf
ljmp
icebp
out
cli
xchg
inc
push
out
inc
push
aaa
loope
into
cmc
shlb
ret
fadds
or
int
pop
imul
shlb
stos
dec
daa
pop
inc
mov
push
dec
pop
xchg
gs
mov
repnz
xchg
or
scas
xor
push
fcmovu
and
in
xchg
dec
ljmp
fidivrl
cmp
pop
cmp
sbb
jp
bound
mov
mov
iret
fdivl
pop
jecxz
and
daa
sbb
das
sahf
fidivl
test
into
daa
pop
movsl
fwait
in
std
ss
sub
insb
sbb
mov
jge
imul
imul
adc
inc
fstl
cmp
and
lahf
test
xor
mov
push
insl
add
repz
jb
xor
das
sbb
sub
test
mov
xchg
fcoml
xlat
and
push
repz
sbb
jo
inc
jb
dec
pusha
push
rcll
jecxz
pushf
inc
sub
and
xchg
sbb
sbb
sbb
mov
mov
bound
pop
add
mov
jge
add
out
inc
ret
adc
add
push
pop
dec
add
notb
cli
fsub
mov
pop
mov
cli
mov
insb
in
lods
add
lea
stc
dec
std
subb
sbb
push
cld
loope
cmp
clc
mov
cld
xchg
and
jg
shlb
or
jno
dec
sub
fcoms
jo
inc
data16
shlb
cmp
jle
ret
repz
scas
rcrb
dec
daa
pop
ret
ljmp
pop
xchg
ret
push
cmpsb
sbb
push
stos
cmpsb
xor
pop
xor
ja
loopne
inc
xchg
mov
shl
mov
pop
lds
or
inc
into
mov
jo
and
push
jp
or
push
fdivs
sub
jecxz
pushf
mov
adc
xchg
push
inc
and
cmp
push
out
fistpll
lret
sarl
add
pop
push
mov
mov
out
sub
lret
lods
js
aaa
fcmovnbe
pushl
scas
insb
loop
int3
inc
jmp
or
in
pop
push
lods
and
mov
sarb
test
xchg
mov
outsl
fwait
leave
cmp
push
add
xor
mov
xabort
push
test
stos
sub
push
mov
pusha
mov
xchg
xlat
sti
clc
nop
es
cmp
and
pop
push
mov
xor
in
fldt
inc
cmpsl
arpl
sub
sub
mov
cmpsl
les
arpl
jnp
lret
push
mov
jnp
jno
dec
jae
testb
inc
jns
scas
xor
cmpsl
sbb
orb
push
and
dec
pop
ret
mov
adc
push
in
in
adc
xchg
pop
data16
loop
imul
es
rcrl
or
and
mov
int3
fcomps
in
push
lahf
xchg
or
add
cmp
xor
andb
cmpsl
pop
addb
loopne
push
dec
out
xchg
clc
roll
jl
out
inc
adc
xchg
xchg
mov
cld
sti
pop
in
dec
lods
xchg
add
pop
popa
mov
sub
push
pop
add
movsb
jecxz
mov
testb
pop
inc
mov
sahf
bswap
push
ret
jns
repz
test
jg
imul
fdivs
cli
in
dec
aad
popf
rcrb
push
mov
aaa
sub
gs
out
xor
adc
push
push
xor
or
dec
scas
cli
leave
outsl
sbb
int3
dec
lret
outsl
stos
cmpsb
cltd
mulb
rcrb
out
aad
pop
push
icebp
popa
fsts
pop
mov
shll
adc
pop
or
mov
mov
scas
inc
bound
ja
push
jbe
hlt
jp
das
dec
stos
test
lret
xchg
sub
push
push
call
inc
jl
rcr
arpl
fcoms
out
shlb
push
imul
lods
rclb
movsb
div
aas
mov
pusha
jge
test
cmc
mov
adc
mov
iret
mov
cs
or
ds
loope
sub
mov
in
xchg
inc
or
pop
pop
add
inc
movsl
mov
or
jnp
push
clc
dec
aaa
psubd
insl
test
push
aaa
mov
jmp
aas
call
inc
mov
xor
cld
scas
out
add
mov
cmp
aaa
out
lock
into
jbe
negb
jb
fdivrs
inc
and
mov
sub
cmpsl
push
fdivr
in
fdiv
scas
push
or
lea
dec
xchg
dec
mov
jge
loop
adc
adc
dec
xchg
and
mov
or
cmp
repnz
je
pop
js
adc
seta
mov
xchg
jnp
into
fwait
clc
jne
insb
xchg
out
or
mov
ja
lret
stos
lret
add
insb
fisttps
sub
pop
out
mov
ficoms
cmp
jl
pop
scas
or
mov
call
sbb
das
push
xchg
loop
inc
xor
sahf
fcomi
pop
cmp
shll
or
push
stos
mov
jbe
xor
xor
cs
negb
ds
lods
jecxz
out
xor
nop
cmp
lea
push
shlb
dec
icebp
add
mov
xchg
stos
stos
cmc
jnp
pop
mov
cmpsl
or
inc
bound
test
loop
or
aaa
adc
and
ljmp
sbb
push
ja
jecxz
aas
lods
sub
out
adcb
pop
push
mov
jecxz
lahf
lret
je
sbb
sbb
mov
es
sbb
push
stos
jecxz
adc
aas
loopne
notb
mov
es
pop
in
outsl
sahf
sti
cmpsl
outsb
fadd
aad
pop
fisttpll
cmp
sub
lret
xlat
movsb
xchg
push
pop
mov
inc
sbb
push
shl
dec
imul
mov
mov
outsl
add
cmpsl
or
push
xchg
or
xchg
pop
mov
aam
decl
or
es
loope
shlb
or
jge
popa
dec
or
mov
dec
das
xor
cmp
inc
adc
sub
add
aad
cmp
loop
pop
cs
push
inc
push
mov
mov
icebp
or
fidivl
sub
mov
hlt
cmp
and
lods
dec
aaa
aad
insb
out
xor
repz
xchg
cltd
stc
fildl
add
loopne
xchg
xor
dec
lods
fstl
xor
mov
inc
aad
mov
dec
jnp
push
std
push
sub
sbb
mov
adc
pop
in
arpl
ja
aad
popf
jecxz
jecxz
or
data16
sub
aam
sbb
xchg
int
mov
sbb
insb
cmp
lods
sbb
jl
in
mov
ds
and
popa
shl
stos
nop
fistpll
sti
jmp
pop
jl
push
rcr
rclb
int
gs
push
mov
xchg
fmull
sti
shlb
and
mov
inc
out
ficomps
scas
mov
xchg
cs
jno
movsb
dec
or
xor
repnz
cld
fmull
adc
rcll
hlt
pusha
sub
lock
flds
popf
dec
push
js
in
subb
sbb
jne
jo
mov
cmp
mov
insb
mov
cmpsl
notl
out
mov
aaa
jae
rol
test
push
inc
into
out
adc
cmp
sbb
imul
lods
sbb
adc
imul
add
inc
add
aad
adc
cld
lcall
out
ja
xor
jno
lods
fdivrs
adc
loop
pop
sub
xchg
mov
dec
inc
mov
fwait
fsubs
mov
push
cmp
inc
repz
mov
push
test
sbb
dec
mov
lret
shrl
arpl
ror
jmp
adc
pop
gs
xor
pop
enter
scas
push
leave
push
mov
xchg
popf
push
hlt
mov
mov
mov
stos
push
addl
sbb
dec
in
data16
push
data16
mov
dec
mov
mov
aam
add
adc
pop
sub
cmp
out
es
out
pop
push
iret
out
mov
pop
jnp
faddl
jo,pn
push
xchg
mov
addl
cmpxchg
out
sub
pusha
mov
adc
int3
push
loopne
stos
cmp
adc
xor
outsl
mov
insb
fmul
xor
xchg
pop
adc
mov
je
sbb
push
loopne
sub
ret
inc
mov
xchg
jb
and
and
jns
sub
test
mov
or
inc
sbb
pop
in
leave
icebp
dec
rcr
mov
adc
push
int
pop
pop
push
and
mov
pop
mov
mov
js
movsl
sub
ss
repz
arpl
inc
test
incb
in
xchg
dec
push
loopne
sub
dec
fnsave
cmc
inc
dec
ljmp
filds
mov
enter
push
out
inc
adc
daa
xchg
test
cmpsb
ret
push
hlt
pop
adc
mov
popf
mov
add
mov
addr16
mov
add
outsb
lret
lods
xchg
dec
aam
fmuls
pop
mov
aad
insb
imul
hlt
mov
or
rolb
fiadds
xor
push
sbb
pop
push
add
in
mov
jg
sub
int3
or
jnp
push
ds
and
dec
loope
mov
movsl
xor
fadds
int
adc
cmp
mov
mov
add
inc
int
or
jbe
shl
vphaddbd
cmp
cmp
leave
sub
push
aad
and
pusha
lock
andb
or
int
ja
shll
inc
mov
test
fistl
push
out
dec
add
xchg
sahf
add
and
or
cltd
inc
pop
dec
outsl
cmp
fisubs
insl
stc
in
sub
arpl
enter
or
adc
test
mov
aam
call
rclb
push
sub
cld
outsl
push
inc
fsub
adc
popf
cmpsb
scas
ja
push
int
push
inc
sub
rcrl
ss
movsb
jle
sub
or
dec
lock
adc
and
mov
repnz
ljmp
mov
in
adc
jl
testb
test
fiadds
pop
daa
xor
xchg
pop
xlat
inc
xor
dec
xchg
xchg
call
xor
andl
cwtl
push
jg
mov
pop
push
cld
ljmp
pop
xchg
test
fstpt
mov
stos
dec
inc
jl
mov
and
aad
nop
inc
mov
fstpt
test
popa
jns
add
loope
inc
mov
lock
adc
cmp
push
std
cmp
in
mov
add
stos
cli
push
pushf
mov
sbb
push
lods
xchg
push
mov
lahf
sub
push
jmp
pop
jmp
out
sbb
movsl
and
cltd
or
adcl
in
das
gs
jle
push
fs
sub
add
pop
jno
xor
insl
jmp
movb
call
dec
stc
jge
xchg
jmp
xchg
add
and
mov
mov
bound
xchg
and
dec
xlat
les
push
pop
jb
ds
add
push
push
push
mov
jo
cmp
sub
cmc
orw
mov
cvttps2pi
ss
sbb
sbb
xchg
shlb
add
sbb
addl
lcall
into
test
movb
orl
push
or
imull
shrb
jge
sbb
fnsave
out
mov
fidivrl
jl
cmp
jne
leave
mov
mov
xchg
xchg
test
adc
add
gs
mov
fnstsw
sub
fsubrl
push
int
xlat
ja
xchg
out
or
out
and
repnz
sarl
xor
test
pop
add
add
push
xlat
out
add
outsl
out
jns
jb
dec
or
mov
inc
cmp
jns
out
dec
mov
add
rcll
inc
nop
mov
mov
stc
cmp
mov
push
push
roll
mov
aas
cmpsl
pop
push
pop
or
jl
xor
mov
push
cltd
in
testb
pop
imul
mov
push
jbe
mov
bound
dec
add
jmp
push
adc
sbb
cwtl
pop
mov
bound
mov
pop
ret
scas
pushf
or
lret
pop
rorb
or
aam
loope
mov
aam
sub
xchg
add
adc
mov
insb
push
in
daa
cmp
jmp
push
or
sbb
xorb
mov
jmp
inc
xor
in
dec
jbe
fistps
xchg
sbb
daa
lock
jle
lds
fiaddl
lcall
xchg
insb
repz
or
or
jp
xchg
or
imul
ja
sbb
shlb
push
aaa
cwtl
pop
or
mov
ja
xor
pop
insb
fsubrp
xchg
mull
ret
mov
adc
mov
imul
pop
mov
xchg
imul
shrl
mov
jnp
add
add
sbb
dec
iret
mov
shll
dec
loope
clc
call
outsl
addb
pop
sbb
or
negb
daa
mov
xor
and
adc
shlb
inc
test
xor
enter
inc
xchg
jge
out
lds
mov
popa
test
orl
or
or
jo
or
test
out
pusha
fisttpll
out
pop
pop
jbe
repnz
pushf
mov
icebp
sbb
aad
cmc
popf
aad
pop
in
push
jnp
pop
fildll
into
mov
mov
or
mov
mov
pop
movsl
roll
cmpsb
jae
insb
imul
ja
cli
sbb
or
inc
test
je
dec
scas
test
stos
ret
fisttps
inc
cltd
ficoms
xchg
ja
and
push
dec
pop
jg
movsl
int3
push
fcoml
sub
cltd
sahf
jl
adc
out
lahf
sbb
xlat
jmp
push
jo
mov
ljmp
jae
cld
push
lock
insl
xor
mov
jo
shrb
pop
add
jbe
or
and
lds
das
arpl
fadds
xor
movsb
ret
cld
xchg
test
inc
mov
cmp
mov
jne
xchg
lcall
stc
and
or
insb
stos
stos
hlt
dec
pop
inc
jp
jl
xchg
stos
fnsave
push
repz
push
add
imul
ficoms
jecxz
xor
pop
cs
and
jl
rorl
push
add
idivl
add
inc
popf
xor
dec
mov
push
sub
test
xchg
and
repnz
je
push
sbb
jne
push
mov
in
out
sub
xchg
loope
push
fsub
sub
dec
adc
cmpsl
mov
sbb
inc
mov
ds
xchg
xchg
lcall
iret
call
inc
fstpt
popf
dec
sub
popa
int
icebp
sahf
add
addr16
lds
cltd
fbld
mov
jmp
push
push
out
cmp
ljmp
lods
lret
pop
jb
in
ljmp
jae
jnp
push
dec
rorb
push
scas
mov
je,pn
mov
insl
jns
scas
nop
je
dec
sub
mov
mov
mov
mov
xor
sahf
fnstsw
push
pop
xor
aam
jmp
inc
stos
jg
cmp
sub
sbb
out
jge
or
hlt
pop
out
mov
push
stos
jns
mov
fs
stc
sbb
cmp
ret
stos
clc
stos
fidivs
or
cld
inc
or
cmpsb
pop
adc
push
adc
mov
cmp
adc
js
sub
fmul
out
pop
mov
jbe
mov
lods
repnz
cmpsb
pusha
aaa
iret
jne
lea
popa
rcr
pusha
mov
or
aad
faddp
push
std
in
cmp
loopne
aad
xchg
or
jecxz
mov
dec
fsubs
into
mov
mov
hlt
xchg
mov
and
mov
scas
fbstp
mov
and
mov
adc
lods
cmp
std
in
stos
add
adc
mov
xchg
les
fxch
ficompl
mov
xor
xchg
xlat
add
inc
push
stc
hlt
lcall
mov
fnstenv
jns
pop
sbb
in
pop
dec
sbb
and
arpl
repz
test
mov
jb
inc
repnz
mov
push
xchg
out
jmp
inc
popf
stc
ja
testl
iret
xchg
repz
xchg
repnz
pop
xor
mov
mov
ja
sbb
pop
mov
sub
cmpsl
mov
lret
pop
mov
jg
mov
gs
push
mov
stos
daa
pop
out
scas
jp
es
push
jo
pusha
sti
pusha
call
out
jne
jle
lcall
cmp
out
insl
and
jo
push
lret
enter
cmp
inc
rclb
cmp
and
sub
pushf
adc
mov
nop
stos
adc
int3
imul
jo
jle
lock
out
jb
mov
mov
jecxz
dec
das
ljmp
enter
xor
idiv
adc
lahf
inc
sub
cmp
outsl
jnp
test
nop
sti
shlb
adc
aas
lock
clc
shlb
mov
mov
imul
int3
pop
cld
xor
dec
fstpt
lahf
add
lea
test
sub
jmp
push
jg
neg
in
ja
add
ja
dec
lods
inc
mov
jp
lcall
dec
int3
pop
or
and
int
fcomps
mov
test
movsb
fimull
adc
sub
mov
sbb
cmp
mov
cmpsb
in
mov
adc
dec
adc
rclb
or
xor
iret
and
push
ss
stc
inc
stos
andb
scas
dec
and
dec
dec
fs
xlat
jnp
int
bound
mov
sub
popa
push
jnp
inc
cmc
andl
xchg
or
out
dec
cmpsb
fwait
mov
mov
popa
lods
adc
mov
and
dec
aaa
push
add
dec
dec
mov
xor
out
lock
cli
clc
jns
fnstenv
pop
pushf
add
sub
sub
sar
dec
call
dec
in
mov
shrb
adc
int3
loope
sbb
mov
add
arpl
sbb
mov
jp
rcrl
test
sub
adc
ss
in
push
xchg
mov
test
jmp
pop
and
mov
loope
mov
jle
add
push
cmpl
add
jp
cmp
out
push
jno
setge
pop
jo
insb
loope
mov
and
test
sbb
push
aaa
jl
adc
je
mov
ds
mov
add
jmp
jae
jnp
jb
xchg
test
imul
cmpb
adc
mov
pusha
add
int3
call
jmp
gs
out
ret
jno
and
xor
pop
add
sti
out
mov
jl
sbb
into
jle
shlb
sbb
fdivrl
mov
mov
ljmp
add
fstp
test
mov
mov
inc
cmc
jl
or
inc
jbe
repz
add
mov
jmp
push
mov
sub
xor
xchg
add
ret
orb
les
test
and
add
mov
icebp
int3
daa
add
pop
fisttpll
xchg
mov
or
push
mov
movsb
pop
jno
movsb
adc
sbb
insb
jecxz
insb
loopne
andl
loope
imul
xor
jmp
or
cltd
lcall
dec
jp
test
stc
ss
push
mov
imul
aas
mov
pusha
and
loop
push
adc
mov
add
fs
cmp
mov
loope
push
push
mov
mov
cmp
popf
adc
dec
adc
jne
add
and
bound
frstor
or
mov
cwtl
aas
test
imul
sahf
fistl
adc
jne
sbbl
xchg
movb
and
mov
loopne
aas
mul
fdivrl
mov
add
lcall
ror
or
int
sti
enter
sub
rcrl
sub
inc
fnstenv
pop
fisubl
and
mov
mov
ret
or
rolb
xchg
sbb
sub
lock
rcl
jmp
mov
mov
sub
cmp
or
jl
decl
xlat
cmpsb
ficompl
fdivr
add
stos
fwait
lret
repnz
outsl
jmp
dec
pop
adc
pop
sbb
sbb
aad
inc
add
in
or
cmp
pop
adc
ja
pusha
jae
and
xor
sbb
std
gs
xchg
or
dec
inc
pop
sbb
and
ret
add
pop
adc
js
adc
push
inc
in
sub
insb
setp
movsl
dec
xchg
jp
outsb
jmp
fsubrs
in
lods
push
pop
rcll
iret
jae
push
mov
mov
loope
adc
jno
imul
rorb
aas
push
xor
in
and
out
sbb
or
lods
pop
out
mov
mov
das
push
jl
loopne
out
das
inc
fs
imul
adc
aam
sti
push
in
sub
aaa
mov
or
jo
loopne
jnp
mov
sub
imul
xor
outsb
push
bound
jge
sahf
in
push
xchg
arpl
stc
pop
inc
mov
cli
lock
in
dec
jno
jle
sbb
pop
push
leave
push
dec
fs
ljmp
cmp
jno
mov
stos
dec
dec
pop
imul
cmp
sub
sbb
mov
mov
jmp
repz
ret
test
dec
push
fwait
dec
test
dec
shll
and
out
mov
and
add
pushf
cld
fcmovu
mov
push
sub
and
mov
loop
pop
xor
out
das
lea
rolb
fsubrl
leave
push
fbld
sbb
sbb
test
stos
sbb
fnstcw
jecxz
add
cwtl
and
lods
jg
arpl
pop
mov
cmp
xchg
stos
lcall
cld
xchg
push
jge
sub
hlt
push
rorl
and
test
insl
iret
mov
lods
dec
int3
cmp
xor
movsb
enter
or
enter
fmull
dec
inc
fbstp
jecxz
add
nop
lods
arpl
loop
adc
push
aas
sbb
inc
xor
out
aas
pop
iret
stos
cmc
mov
xor
sbb
fcom
imul
xlat
sbb
je
andl
cli
fisttps
sub
es
push
cmp
jno
ds
sbbl
push
mov
mov
js
mov
pop
test
stos
jno
cltd
stos
sbb
lea
mov
and
jnp
fnstcw
out
imul
in
dec
stos
mov
lea
je
mov
jle
xor
out
mov
add
lea
dec
adc
fbld
cmpsb
or
sub
call
out
subl
add
sub
fidivs
or
mov
mov
mov
into
or
lods
enter
xchg
xor
ret
and
outsl
dec
push
xorl
lret
movups
mov
mov
pop
mov
cmp
jp
xchg
ja
scas
stc
enter
push
and
mov
enter
inc
fs
adc
lret
xor
cmpsl
ret
push
sub
push
js
add
inc
fildll
leave
dec
sbb
into
and
jns
fsts
xlat
ds
cmc
dec
mov
cmp
lods
es
push
jno
std
mov
leave
jmp
repnz
push
hlt
in
dec
cs
rcl
pop
lods
pushf
xor
add
mov
or
pop
inc
test
js
mov
adc
jae
test
jg
jmp
adc
lret
ljmp
cld
jge
rcll
ss
fwait
stos
pop
or
adc
xchg
cmp
or
iret
and
test
mov
push
insl
sub
std
xlat
aaa
nop
stc
test
icebp
loopne
scas
aaa
data16
int3
fwait
add
adc
dec
cmc
int
jecxz
inc
sbb
fmull
and
ljmp
movsl
or
imul
es
xor
nop
or
jbe
and
cmp
add
mov
shl
jp
mov
lods
movsb
sbbb
pop
mov
and
sti
fld
mov
mov
out
push
sarb
pushf
mov
pop
xchg
mov
lret
mov
mov
leave
out
pusha
lahf
or
pusha
in
xlat
lods
add
sub
stos
lock
sbb
inc
fistpl
or
add
dec
in
arpl
adc
mov
mov
std
mov
paddq
mov
xor
jo
sub
dec
imul
stos
test
in
in
adc
in
mov
push
xchg
mov
sar
add
mov
jg
cltd
aam
jp,pn
ret
or
mov
xor
lea
arpl
and
or
in
out
into
mov
fcmove
or
adc
mov
je
push
sub
enter
loope
and
ja
shll
pop
in
cmp
out
cld
loopne
pop
loope
repnz
pop
pop
adc
pushf
xorb
push
out
mov
outsb
or
fwait
bound
subl
daa
pop
sbb
or
adc
jae
ljmp
imul
mov
outsb
xlat
add
icebp
jae
mov
jmp
inc
dec
mov
outsb
es
jge
xchg
insl
jecxz
js
cld
test
xchg
lret
dec
xchg
dec
lcall
mov
mov
push
iret
sub
xchg
or
jne
mov
or
inc
fnstcw
push
sbb
faddl
xchg
jbe
inc
aaa
je
xor
mov
add
mov
pop
scas
int3
mov
fistpll
pop
xorb
scas
int3
xor
ret
dec
sarl
es
sub
or
mov
inc
iret
mov
inc
je
call
xor
jp
add
sub
testl
sbbl
fildl
std
scas
cli
xor
cmpsl
lds
mov
or
sub
fisttpll
in
or
sub
out
or
xchg
inc
push
mov
jne
dec
test
xor
xchg
jno
cmp
xchg
ret
cmpsl
adc
ljmp
movq
flds
and
shr
aam
cmp
fbld
test
lods
xor
fwait
add
in
mov
movsl
mov
pop
push
or
pop
mov
sub
adc
jnp
in
dec
push
mov
cmp
pop
faddl
rclb
xor
xchg
pop
add
mov
inc
add
insl
loope
cltd
adc
fists
and
insb
pop
adc
jae
lods
js
es
pop
jae
adc
mov
inc
inc
lock
push
in
push
adc
mov
add
xchg
pop
mov
push
xchg
rcr
add
or
inc
ljmp
dec
movsl
mov
jnp
stos
addb
mov
xchg
or
out
jo
dec
ds
outsl
popa
sub
or
xchg
shll
cmp
test
jo
cmp
sbb
outsl
dec
hlt
fwait
out
addr16
sbb
jbe
mov
ficompl
mov
sbb
inc
dec
mov
dec
and
scas
jge
pop
inc
or
mov
cld
cmpsl
cmc
jo
xchg
in
mov
cmpsb
xchg
ja
cmp
fmull
sub
loope
ret
cli
dec
hlt
jmp
cs
in
mov
orl
push
pop
fsubrs
cmp
push
cmp
pusha
xor
or
movsl
cmp
ja
in
push
movsb
lret
push
sub
sub
push
lds
movsl
mov
enter
jae
xchg
outsb
pop
sbb
in
and
dec
aam
add
cmp
and
repnz
call
clc
pop
enter
rcrb
cmp
in
xor
shl
cmp
and
shll
outsl
sbb
mov
lock
fldcw
cmp
rcr
and
mov
in
fisubrs
aad
jle
push
xchg
jge
movl
push
mov
pop
out
cmpsl
in
sbb
insb
xor
jle
dec
mov
mov
test
and
icebp
jbe
jo
dec
imul
fnstsw
fildll
aad
inc
mov
cmp
notb
mov
mov
mov
addb
shl
pop
nop
out
imul
pop
imul
test
es
pusha
stos
out
ds
inc
clc
aas
subb
scas
ss
aaa
xchg
jbe
les
and
jb
push
ljmp
xchg
push
popa
insb
popf
mov
cmp
xlat
push
jne
fcmovb
mov
mov
pop
mov
repz
add
dec
dec
clc
add
lds
fimuls
jae
movb
enter
enter
gs
cli
scas
push
xchg
sbb
cmp
lahf
aad
xchg
aad
fcoml
pop
sub
rcrb
pop
sti
adc
mov
in
or
aad
std
rorb
js
frstor
fcmovnb
jp
enter
push
stc
dec
mov
xchg
pop
hlt
or
filds
dec
lods
dec
mov
pusha
lds
clc
leave
mulb
xchg
jnp
ret
jecxz
cmp
loop
jle
push
xchg
xchg
jmp
push
push
clc
dec
sbbl
pop
xor
xchg
xor
inc
cmp
mov
pop
mov
int
jg
popf
jo
adc
in
pop
aaa
fisubs
mov
jle
inc
and
daa
test
cmp
jbe
inc
add
mov
mov
not
int
outsl
mov
sub
adc
push
ds
js
adc
in
xchg
sbb
sub
add
fiaddl
into
imul
mov
cmp
pop
cmp
xchg
cs
int
sub
mov
mov
movsl
mov
cmc
adc
data16
mov
mov
mov
lea
pusha
jne
insb
cwtl
xchg
pop
add
aas
mov
xchg
mov
in
lea
xchg
mov
lock
cmpsb
xchg
mov
vpmacsswd
test
imul
nop
mov
je
inc
add
jne
push
scas
test
lock
xor
xchg
imulb
nop
sub
cmc
stos
inc
or
xor
popa
pushf
and
push
lock
inc
pop
loopne
nop
ljmp
loop
lahf
in
mov
imull
sub
jecxz
jbe
jbe
push
lret
std
in
mov
or
pop
ret
data16
or
jns
mov
inc
cmpsl
jne
cltd
cmp
aaa
xchg
jp
fidivl
push
sub
add
pop
xlat
scas
push
inc
jge
int
push
fwait
push
sub
ficomps
popf
jno
cmpl
lods
arpl
test
jp
cmp
jae
sbb
clc
cmc
cld
leave
fisubs
jmp
fstp
into
stos
lret
lds
inc
scas
std
scas
mov
push
cltd
insl
test
cmp
pop
lock
insl
rcrb
mov
cmpsb
xor
fildll
pop
sbb
push
ss
inc
pop
ret
dec
sbbb
or
outsb
jg
negl
jnp
sti
mov
call
xor
enter
out
jbe
and
iret
les
out
in
lahf
loop
sahf
stos
in
fistps
cwtl
and
rcll
cmp
lods
push
xchg
ret
leave
cmp
xchg
into
lods
mov
dec
xchg
cmp
mov
out
pusha
in
jo
arpl
test
xchg
adc
xlat
xchg
or
push
mov
sahf
mov
nop
cmp
push
mov
ror
mov
in
sbb
cmp
pushf
add
adc
repnz
mov
mov
mov
pop
cmp
push
jecxz
iret
pop
lret
daa
inc
das
xchg
icebp
or
cmpsb
insl
popf
movsb
std
shr
mov
lea
jbe
mov
xlat
movsb
mov
and
and
pop
jmp
xchg
or
dec
xlat
je
jg
int3
xor
hlt
cmp
flds
inc
sbb
pop
and
lret
test
in
or
out
jecxz
or
add
sub
test
fdivrp
sbb
shll
pop
sub
ds
shll
call
shll
or
sub
movl
jmp
int3
jl
xchg
jecxz
mov
pop
sti
cltd
out
xchg
sbb
test
mov
and
shlb
cmc
clc
pop
dec
jle
xchg
pop
scas
adc
sbb
pop
pop
inc
mul
inc
mov
out
jp
ds
arpl
dec
and
test
push
xchg
mov
cwtl
fidivl
ds
cmpb
rcpps
sub
sti
jne
or
or
daa
jle
pushf
jmp
sub
xchg
test
or
movsl
hlt
sub
andl
cmp
sub
xor
movsb
sahf
push
imul
out
or
jns
push
sti
inc
sub
mov
jl
sti
or
sub
pop
adc
bound
bound
fstpt
mov
aaa
ja
mov
jp
push
or
jge
and
xchg
mov
jg
add
movsb
or
and
lret
aas
lcall
adc
xchg
dec
das
jns
ljmp
rclb
mov
and
lods
dec
cli
aad
sbb
sbbb
mov
pop
imul
dec
mov
or
adc
jne
cli
jge
dec
jp
mov
cvtps2pd
out
andb
add
adc
outsl
ficoms
fstps
pop
sbb
mov
leave
sub
jmp
int
cmp
push
sub
daa
pusha
dec
or
fisttps
add
pop
pop
add
scas
and
aam
ret
lahf
mov
push
scas
and
daa
imul
nop
xchg
fildl
dec
clc
pop
cld
stc
cwtl
cmc
shll
aad
nop
sbb
xchg
adc
pop
test
fidivrl
sahf
or
jns
pop
mull
dec
dec
call
mov
mov
pop
jl
mov
int3
inc
movsl
push
mov
mov
and
es
dec
stos
movsl
inc
hlt
test
movsb
imul
dec
aaa
lds
mov
xchg
pop
les
rclb
mov
out
dec
pusha
clc
pusha
xlat
scas
jae
mov
jo
rcrl
dec
and
arpl
dec
jne
xchg
lcall
sarb
insl
and
nop
imul
xchg
add
sbb
mov
cmp
sub
push
jmp
in
adcb
xor
and
pop
xchg
les
xlat
adc
mul
xadd
and
mov
lea
repnz
mov
flds
cltd
gs
out
and
push
mov
sti
mov
jp
jb
fisubrl
add
fwait
push
aas
rcl
or
cmpsb
insl
pop
mov
add
outsl
ja
sbbl
jnp
jno
jle
scas
mov
insb
ret
push
push
cmc
fidivrs
pop
and
int3
cli
sub
cmp
fnstenv
or
ss
or
testl
xchg
push
gs
nop
xchg
in
iret
mov
andb
es
aaa
cltd
jo
insl
cs
xchg
sbb
pushf
adc
cmp
pop
push
xchg
sbb
or
enter
lahf
scas
push
leave
pop
mov
mov
inc
mov
push
sub
jge
adc
xchg
push
frstor
popa
mov
jbe
fistpll
jmp
push
and
and
sub
push
jbe
mov
ret
mov
cmpsb
add
jmp
jmp
lcall
fwait
dec
cmp
fstp
cmpb
pop
aad
cld
fsts
mov
popa
push
fsubs
adc
cmp
jmp
hlt
or
ja
int
in
outsl
ds
das
xchg
mov
cmp
pop
xchg
pop
in
cmp
adcb
xchg
ficompl
or
jo
cmp
adc
xchg
nop
aam
cwtl
add
add
pop
push
push
push
in
or
inc
mov
push
fdivrl
and
pop
jp
mov
xor
sub
dec
adc
lock
pop
divb
mov
nop
mov
or
pop
xchg
mov
add
and
mov
jle
insl
out
dec
loop
lret
cmp
jmp
sub
mov
dec
push
and
add
negb
lods
and
push
in
and
pop
jp
cmp
dec
lods
push
dec
mov
cmp
ljmp
inc
or
xchg
pop
test
adc
inc
lret
popa
jl
int
jecxz
jbe
sahf
aas
jne
in
aaa
jb
mov
push
shrl
int
push
jne
mov
sbb
aam
hlt
aam
inc
testb
jb
lcall
push
divl
testb
fsubp
sub
mov
cmp
cmc
fsubl
sbb
push
xchg
sarl
repnz
ret
add
repz
inc
testl
pop
xchg
repz
movsl
pop
mov
and
or
pop
and
inc
push
mov
add
inc
aaa
push
mov
jg
int
cwtl
pop
int
cmp
inc
outsb
push
or
mov
lret
das
cltd
fcom
popa
aas
es
int3
imul
sbb
mov
pusha
cmpl
test
sub
jns
push
push
cld
mov
iret
shll
cli
xchg
rcll
aam
andb
add
dec
leave
jmp
pusha
dec
pushf
xchg
pusha
lods
xor
sbb
imul
scas
mov
sub
out
fcompl
les
pusha
adc
inc
sub
into
push
cli
sbb
out
test
xchg
js
xchg
push
lock
arpl
add
ret
loope
outsb
mov
lret
or
mulb
fwait
jg
pop
mov
pop
imull
xor
lock
dec
mov
push
inc
lods
out
loopne
ja
push
adc
mov
aam
pop
inc
jl
xchg
lods
xchg
xor
in
jb
lcall
fisubl
cli
das
sbb
lcall
adc
std
add
adc
pop
shll
pop
jnp
jl
stc
adc
xchg
mov
mov
addr16
sbb
mov
lret
mov
and
cld
dec
or
cmp
cwtl
xchg
fwait
lods
lret
mov
jb
or
add
repz
lods
inc
xchg
dec
mov
jge
jl
iret
jmp
xor
addr16
jg
gs
xlat
sub
mov
scas
or
or
or
outsb
lahf
addr16
xor
movsl
ss
call
pop
repnz
xlat
sub
jb
data16
xor
fmul
lods
fnstsw
test
xchg
addr16
fiaddl
sti
sahf
xor
and
mov
jo
adc
add
mov
pop
pop
rcr
mov
out
mov
dec
adc
jbe
scas
inc
dec
clc
pmulhw
sti
jle
int3
dec
xchg
mov
jle
jns
and
add
mov
xor
mov
cmp
and
fmul
mov
mov
pop
xor
xchg
push
addr16
shrb
int
xor
xchg
sub
xchg
sub
nop
aad
xor
pop
jae
xor
jb
cmp
roll
mov
or
jno
add
push
ret
adc
je
sbb
test
loop
das
mov
adcb
cld
xchg
mov
xchg
mov
insb
icebp
xchg
pop
sbb
sub
xor
xor
rorl
mov
inc
mov
mov
xchg
adc
loopne
stos
jns
jmp
xorb
pusha
je
rcrl
push
xor
insb
test
mov
add
xchg
mov
xlat
ret
fwait
leave
jne
loopne
dec
xor
add
mov
into
shrb
ficoml
pusha
xchg
ss
fwait
daa
test
jge
loop
lret
pop
and
pop
mov
repz
pop
mov
mov
sub
addl
es
loopne
add
xor
xor
pop
sub
xchg
pop
jecxz
push
jl
xor
sarb
movsb
xor
cltd
xchg
shll
sti
sub
push
lods
sub
cmp
pop
pusha
rep
add
in
popf
dec
bound
xlat
or
and
mov
xchg
cmpsl
notl
mov
xchg
fadds
std
mov
ss
add
enter
sub
and
movsb
ret
jp
mov
out
ja
ja
add
mov
outsl
popf
jne
not
jne
dec
adc
xchg
xchg
test
cli
sbb
pop
sbb
xchg
test
or
adcb
cmp
lahf
cmp
xor
jae
add
sahf
and
xor
clc
sbb
dec
push
and
nop
cld
add
push
outsl
and
or
inc
push
outsb
sub
jp
pop
push
dec
pop
pop
pushf
js
and
icebp
inc
sub
jg
mov
lret
xchg
xor
mov
adc
icebp
jno
mov
mov
xchg
bound
test
popf
push
jge
pop
outsb
repz
and
jne
scas
test
add
testb
shrl
and
cmp
aaa
int
orl
cmp
and
dec
push
dec
lock
push
jge
add
cs
gs
push
push
gs
push
and
cmc
and
aad
pop
mov
jae
stc
inc
shrl
mov
lds
popl
sbbb
jnp
add
push
imul
fildl
mov
out
das
push
je
cs
pushf
faddl
shll
adcb
jb
test
orl
jne
pop
jb
gs
in
pop
and
leave
lret
push
xor
in
jmp
and
aaa
mov
pop
sub
push
or
enter
add
dec
repnz
fisttps
jns
loope
mov
xor
outsl
int3
push
cmpsb
stos
xlat
outsl
dec
in
and
rclb
insl
adc
aad
shll
xor
fdivs
iret
sti
stos
scas
add
fisttpll
sbbb
or
cli
jb
adc
sbb
in
cmpsb
jg
jno
icebp
inc
mov
cltd
arpl
lods
in
and
and
int
mov
mov
add
fidivl
repnz
sbb
jb
adc
loop
out
jno
int3
call
push
mov
jb
mov
mov
stos
in
std
sub
fdivs
divl
dec
jp
xor
xor
les
inc
pusha
scas
mov
mov
xor
andl
adc
mov
adc
mov
hlt
xchg
daa
sti
pop
sub
pop
insb
imul
ret
aaa
test
add
dec
inc
push
mov
mov
mov
mov
xchg
add
fbstp
scas
jle
xor
in
dec
add
dec
add
cmp
mov
adc
xlat
cli
movsb
push
dec
xor
ljmp
ja
daa
pop
les
and
stos
mov
clc
shll
aam
ds
adc
jp
mov
adc
xor
dec
scas
mov
popa
adc
or
inc
imul
jnp
dec
sub
icebp
fsin
ja
mov
sub
jne
jo
lcall
imul
mov
dec
hlt
je
inc
test
ja
out
test
cs
cld
sbb
mov
call
sub
mov
imulb
std
cmp
stos
fwait
sarl
cmpsl
and
test
out
sysenter
pushf
add
test
add
or
ficoml
jo
clc
dec
mov
out
jle
imul
shl
and
inc
xchg
mov
xchg
jmp
scas
icebp
xchg
fwait
insl
mov
mov
jl
add
mov
pop
inc
inc
dec
and
lods
add
aad
lea
adc
cltd
inc
cmpsl
shr
fdivrl
pop
adc
fdivl
outsb
jo
int
mov
and
imul
mov
xor
adc
jmp
rcll
pusha
cwtl
shl
ret
ljmp
push
sbb
pop
lahf
adc
mov
icebp
mov
add
xor
arpl
je
push
aas
adc
ljmp
inc
rolb
inc
adc
adc
xorl
jmp
adc
xchg
push
daa
and
rol
inc
jnp
or
cmp
aam
mov
std
jg
insb
imul
cmpsl
mov
mov
mov
dec
xchg
xor
stos
or
xor
mov
loope
mov
stc
dec
xchg
aad
adc
mov
sub
cld
pushf
aad
xchg
faddp
pop
jo
js
shr
sub
ret
icebp
repz
add
repnz
fisttpll
and
cmpb
ret
fiadds
jmp
hlt
call
test
movsb
xchg
icebp
xor
sbb
jle
stos
addr16
jl
pusha
jne
std
leave
adc
int3
xlat
pop
dec
sbb
loop
ss
mov
pop
pusha
xor
movq
out
push
jle
sbb
cld
lea
ja
sti
and
jecxz
outsb
data16
mov
jmp
inc
pushf
clc
inc
hlt
cld
dec
push
inc
adc
inc
je
adc
inc
scas
jge
sbbb
push
fbstp
cmp
push
int3
aas
sub
xchg
mov
and
adc
in
xor
lret
std
or
mov
mov
push
insb
push
stc
pop
pop
cmp
int3
out
pushf
addl
dec
add
inc
jecxz
movb
outsb
mov
fmuls
adc
mov
hlt
mov
lcall
out
shll
mov
and
jo
xchg
lcall
out
out
dec
or
jp
jge
jle
mov
pop
xlat
mov
in
push
inc
daa
into
mov
push
or
fdivr
mov
pusha
mov
mov
push
cwtl
fisubrl
fwait
movsb
mov
bound
ja
adc
sub
jo
roll
xlat
sub
cmpsl
mov
push
in
mov
aaa
xchg
jno
cwtl
mov
push
mov
dec
add
or
mov
push
loope
int
ret
jg
adc
js
push
adc
mov
mov
pop
mov
adc
nop
mov
mov
inc
cwtl
jne
adc
hlt
pop
popa
or
mov
dec
sbb
pop
mov
lods
roll
add
mov
loope
outsb
sbb
pop
dec
cmc
ss
sahf
push
movsl
sub
jne
decb
adc
adcb
mov
sub
push
xchg
sahf
add
mov
and
iret
sarl
pop
out
repz
and
mov
cmp
add
lret
jns
xlat
inc
iret
fbstp
sbb
mov
push
xchg
xchg
inc
lahf
push
cmp
xor
cmpsb
pushf
imul
sbb
lret
add
jecxz
test
mov
cmp
lret
mov
cmp
test
jle
cmp
lcall
push
outsb
lret
xor
stos
in
inc
out
mov
hlt
ja
push
jecxz
sub
lret
outsl
lcall
sbb
xor
into
xchg
or
es
enter
inc
leave
mov
ret
push
dec
movsb
repnz
push
into
std
xchg
dec
je
cmp
lods
negb
push
daa
mov
mov
adc
ljmp
fdivrp
out
outsl
push
mov
or
mov
loop
cmp
in
rorb
fs
les
sub
push
ljmp
ret
mov
inc
jnp
jno
mov
pop
into
lea
nop
xor
inc
clc
cltd
jb
test
in
push
inc
das
das
fs
mov
scas
loopne
jg
sbb
fnstenv
pop
and
out
jecxz
push
ret
in
dec
sbb
or
adc
mov
adc
addr16
pop
in
mov
in
cmp
sbb
add
mov
lds
cmpsb
fistpl
inc
int3
ret
js
pop
das
and
inc
mov
pop
sahf
inc
ja
aaa
push
mov
inc
loopne
xabort
cltd
data16
shll
test
xor
jmp
sub
stos
fdivl
lea
cld
jge
jo
movsl
mov
mov
aam
mov
cltd
test
in
xor
in
inc
mov
pop
push
jns
rolb
stos
out
mov
aam
jae
lcall
pop
test
jge
lea
rolb
enter
cmp
pop
sbb
mov
scas
test
cs
pop
les
sbb
sub
in
ret
cmp
push
popa
jne
leave
stc
hlt
push
aaa
rorl
or
or
and
dec
fwait
rolb
outsl
or
mov
sub
adcl
mov
ret
adc
rcrb
ja
mov
dec
dec
jbe
sbb
addr16
pop
lcall
test
test
ficomps
clc
stc
andb
mov
mov
jecxz
loopne
sbb
shl
jg
out
loope
pop
imul
iret
fldenv
icebp
adc
and
jecxz
and
clc
mov
mov
out
lods
fisttpl
and
jle
lcall
sbb
in
or
lods
mov
push
mov
inc
cmpsb
shll
cmp
mov
jecxz
cwtl
xor
xor
cmp
push
fnstenv
xchg
push
xlat
icebp
xchg
mov
push
ds
outsl
jge
xchg
pop
push
inc
push
aam
cmp
mov
fwait
cmp
loop
push
bound
add
popf
nop
jne
fmuls
mov
push
pop
fwait
jnp
fwait
push
or
adc
pop
or
pop
adc
sub
add
fldl
or
leave
ljmp
stc
in
arpl
popf
sahf
add
fnclex
or
mov
dec
and
ficompl
arpl
lcall
sub
inc
add
jnp
loop
adc
in
pop
pop
pop
stc
or
mov
jne
inc
inc
and
stos
xlat
popf
fprem
mov
pop
mov
jb
clc
jbe
or
mov
push
xor
call
test
testb
ret
jp
inc
std
repnz
xor
and
push
pop
test
rcll
cmpb
cmp
cld
sti
mov
orl
rorb
into
enter
mov
pop
nop
xchg
sub
push
stc
or
std
or
push
into
inc
push
loopne
pop
out
mov
std
and
add
or
or
scas
jg
add
cld
inc
push
fsub
push
int3
cmp
jo
lcall
mov
int3
ficomps
dec
rcll
iret
or
push
shlb
xchg
push
test
inc
rorl
shrl
dec
mov
jge
jne
jo
dec
lea
inc
lods
ljmp
mov
cmp
inc
xchg
and
pusha
jo
fwait
int3
test
jb
lret
cli
test
adc
sahf
scas
flds
dec
cmp
stos
xor
clc
out
mov
sbb
stos
sub
mov
das
dec
and
lods
std
jnp
push
insl
push
lret
mov
mov
jb
rorl
addr16
in
repz
jo
sub
sarl
sub
or
stos
aas
outsb
lret
xchg
mov
mov
inc
or
orb
call
rcrb
cmpsl
mov
fcmovne
dec
push
add
cmpsl
push
adc
jb
test
stos
pop
mov
cwtl
pop
sub
notb
push
add
pop
popf
sub
cmpsl
verr
lea
fstps
lahf
xchg
mov
int3
fs
jp
sub
addr16
sbb
mov
xchg
push
mov
add
cwtl
iret
xlat
fs
mov
pop
mov
xchg
decl
sub
mov
ss
bound
pusha
inc
cmpsb
xor
cld
xchg
fwait
push
and
pop
fldl
jecxz
ret
push
stos
inc
in
cmc
cmp
in
sbb
ret
push
cld
cmp
cmpsl
fs
out
push
xor
or
inc
inc
insl
stos
jg
sarb
jecxz
sbb
icebp
jnp
pop
fdivr
rorl
pop
ret
mov
dec
pushf
mov
sbb
mov
sub
lahf
sbb
mov
pop
popf
popf
icebp
jae
inc
inc
aaa
and
scas
jge
cld
ret
movsl
rorl
jbe
add
mov
lret
rolb
jnp
mov
pop
jmp
sahf
sti
mov
out
and
dec
mov
and
xchg
sbb
xchg
punpckhdq
test
and
shlb
test
out
mov
and
jae
mov
in
mov
int3
popf
pushf
adc
popf
int3
sahf
or
shl
fsubr
int3
mov
out
es
ljmp
fscale
repz
repz
lahf
rcr
xchg
fcompl
aad
mov
mov
out
push
mov
inc
mov
adc
fcmove
jns
jb
cmp
or
jle
lahf
insl
jae
jb
jbe
outsb
mov
call
mov
mov
push
stos
jmp
int3
and
xor
adc
ret
mov
sbb
pusha
mov
in
adc
test
jae
xor
xor
lods
push
push
and
xor
das
sub
xor
dec
mov
and
fstpt
push
test
stc
mov
adc
enter
inc
mov
aaa
daa
lock
pcmpgtb
sti
rolb
sub
jp
inc
dec
movl
fisubs
inc
leave
pushf
push
lea
test
xor
mov
inc
sahf
test
xchg
lds
mov
pop
xchg
pop
out
cltd
call
mov
xchg
push
lahf
xchg
pop
les
cmp
xchg
imul
push
jecxz
cmpsl
lret
mov
sahf
jb
and
push
mov
fwait
stc
int3
pusha
cmpsl
aaa
adc
nop
sbb
aad
inc
lea
roll
mov
scas
cli
loopne
lods
xchg
xorb
es
movsl
sti
jle
xchg
lcall
pop
jg
add
jmp
roll
stc
lods
xchg
sub
add
adc
mov
mov
add
ficoml
aam
jne
pop
shl
stc
and
or
cmp
call
ja
adc
adc
pusha
pop
sub
lahf
test
ja,pt
sub
lahf
fidivrs
and
cld
repz
jg
int3
dec
xchg
repz
add
mov
pop
jno
lds
inc
or
pushf
jb
test
xorb
mov
mov
mov
dec
jne
xchg
test
jg
cmp
mov
dec
call
or
xchg
push
fisubrl
push
negl
push
in
cvttps2pi
enter
mov
mov
inc
pop
rep
mov
xchg
addb
push
mov
insl
dec
adc
sub
xor
ljmp
int
sti
out
mov
adc
mov
push
add
lret
jno
jo
daa
enter
add
mov
cmp
js
sub
dec
sub
out
mov
rorb
enter
aas
fs
ret
aam
leave
mov
fcomps
sbb
aam
pop
pop
mov
add
data16
loopne
mull
sub
sbb
pop
paddsw
test
jmp
add
push
icebp
popa
popf
dec
jns
fstl
xchg
lret
sarb
push
testb
fnstsw
out
lds
out
mov
popf
ljmp
jns
push
jno
cmp
sbb
sbb
push
inc
icebp
mov
adc
push
push
xchg
cltd
shll
inc
jecxz
push
mov
mov
sbb
sub
add
and
adc
sahf
sbb
cs
xchg
cmc
push
jge
or
pusha
or
dec
lret
push
pop
cwtl
mov
ret
push
es
lds
pop
scas
mov
stc
cmp
enter
cltd
dec
aaa
sub
orb
adc
inc
divl
and
add
pop
fidivrs
cli
gs
push
out
lock
mov
add
sbb
add
test
jb
test
push
popf
mov
mov
or
flds
imul
stos
mov
cmp
jge
loope
cmpsl
ficoms
push
cmpsl
ret
adc
and
cmc
divl
push
in
dec
sub
daa
xor
in
and
fmull
insb
jne
shl
negl
adc
cmpsl
adc
fdivrl
ja
jle
int
mov
ret
std
shl
enter
push
cmc
sub
mov
xchg
subl
shrb
loope
xchg
dec
sbb
inc
ds
mov
xchg
push
push
cmp
fcompl
jae
mov
lret
xchg
push
fwait
push
cmpsl
in
lret
gs
cmp
andb
mov
imul
cmp
pop
mov
xor
or
scas
inc
fbstp
inc
jge
pusha
fsubrs
and
xchg
lods
cltd
jb
mov
jnp
adc
adc
stos
ds
punpcklwd
test
xchg
mov
jl
dec
mov
inc
dec
xor
cmp
jae
mov
sub
mov
cmpsl
jae
xchg
pusha
cmp
xchg
adc
pop
mov
mov
mov
or
xchg
decl
je
enter
mov
aaa
lret
insb
movsl
add
sub
stos
xor
in
mov
jae,pt
aad
push
push
std
xchg
movsl
mov
xchg
lods
loopne
push
or
in
flds
movsl
ret
sbb
insl
cltd
sar
adc
sub
fwait
xchg
dec
mov
out
adc
jmp
stc
pop
test
mov
inc
dec
movsl
lock
push
sti
les
mov
fisubs
cltd
sahf
and
adc
sbb
xchg
add
mov
loopne
jl
outsl
into
divl
dec
pop
lret
lcall
add
gs
cmp
fstps
mov
xchg
or
out
into
mov
cs
subl
je
jmp
or
imul
mov
mov
cs
or
psadbw
inc
lret
adc
adc
pop
xlat
int
mov
push
jno
nop
movsl
cmp
jne
daa
jge
bound
loope
pop
and
roll
int3
xorb
mov
in
pop
scas
push
push
gs
inc
lret
dec
repnz
jae
pushf
cwtl
jnp
xor
subb
xchg
inc
pop
xchg
xchg
jnp
or
sub
js
subl
mov
jb
adc
mov
add
dec
cmpsb
xchg
xor
push
rcr
push
dec
repnz
push
push
mov
cltd
mov
mov
in
sub
movsl
push
jge
cmc
push
cld
sahf
cmp
mov
xchg
rclb
gs
popa
mov
dec
pushl
fmuls
movsl
cwtl
pop
adc
push
iret
scas
adc
add
lods
push
and
add
push
or
es
jp
add
ret
leave
adc
loop
mov
push
fiaddl
lods
pop
call
jno
in
movsl
mov
ds
adc
sbb
xor
mov
push
sbb
dec
jmp
mov
xor
stos
mov
into
xchg
mov
negb
popf
push
cmc
adc
in
lock
jo
inc
sub
mov
out
sub
lods
ret
cmc
in
sbb
repnz
mov
addr16
out
mov
fstpt
adc
bound
and
and
mov
add
or
xchg
pushf
jge
pushf
xor
jge
and
aaa
lds
sbb
divl
daa
push
inc
and
mov
push
cld
leave
pop
mov
mov
lods
ja
push
ret
push
lahf
iret
outsl
xor
or
sbb
lods
pop
xor
or
pop
aam
xchg
xor
test
ljmp
jno
inc
xchg
mov
in
in
dec
ds
mov
sbb
into
movsb
loop
popa
sub
cmpsb
add
pop
sub
dec
ffreep
mov
add
fnsave
jg
jo
dec
leave
pop
dec
adc
xlat
movsb
and
push
xchg
std
scas
xor
out
add
add
push
add
inc
into
dec
xchg
cmpl
dec
iret
fdivs
cld
fucomp
les
iret
xor
loopne
fisttps
sub
add
dec
pushf
out
adc
bound
leave
mov
fidivrl
and
mov
repz
hlt
out
arpl
ljmp
sbb
inc
mull
test
sbb
cmp
mov
mov
fsubs
fcmovnu
popa
or
sti
icebp
inc
into
gs
loope
dec
or
cld
pop
xor
ss
pop
jg
int3
cmp
lahf
dec
cmpsl
aad
or
mov
mov
push
aam
mov
sub
rorb
lret
pop
nop
std
fistl
lods
sbbb
in
mov
mov
jg
std
xor
pop
jne
loopne
lahf
in
ss
add
pop
pop
lods
and
sub
fdivs
push
out
inc
imul
nop
pop
push
xor
pop
push
adc
mov
mov
sarl
arpl
popa
movsl
fidivrl
inc
outsb
loop
cwtl
push
inc
fimuls
cmp
xchg
jns
gs
ljmp
pop
xchg
rcrb
in
cmpsl
icebp
push
mov
add
cmp
cmp
decb
jnp
xchg
add
mov
rolb
pop
and
ss
popf
cmp
cs
add
scas
bound
mov
push
in
push
das
ss
jb
loope
sbb
sbb
pushf
xchg
fistps
mov
pushf
and
add
xchg
mov
lock
stc
push
jmp
test
inc
movsl
inc
dec
in
sub
js
jl
imul
je
sbb
lret
mov
popf
popf
leave
imul
cmp
sbb
push
std
jmp
push
int
stos
in
bound
lea
adc
mov
cmpsl
ret
not
stos
pop
into
stos
orb
jae
sub
rclb
lock
imul
sub
add
pop
enter
cmp
xchg
jb
sbb
jo
jae
sbb
idiv
adc
fsubrl
jne
mov
adc
adc
insl
popf
addr16
xchg
push
inc
mov
lods
ljmp
cmp
outsb
mov
aaa
xlat
push
out
shl
iret
or
imulb
adc
pop
jp
xchg
adc
add
xor
out
mov
xchg
popf
pop
adc
insl
pop
test
xor
xchg
std
and
sub
imul
sbb
cmc
pop
sub
sub
popa
adc
adc
mov
lods
pop
outsl
fwait
scas
lret
cmc
cmp
fimull
into
notl
in
adcb
gs
pop
aas
mov
xchg
imulb
mov
imul
icebp
mov
aam
mov
fsub
mov
xlat
jo
test
fcoml
je
flds
pop
mov
subl
ds
js
fsubr
jle
add
mov
push
mov
pop
divb
int3
gs
or
or
sar
mov
pop
jp
inc
sub
leave
movsl
test
mov
addr16
adc
mov
bound
fcompl
mov
pextrw
push
mov
xchg
dec
outsb
cwtl
data16
stos
xor
out
adc
or
popf
mov
push
ljmp
imul
mov
xor
sub
push
in
out
and
push
repz
push
push
icebp
lock
and
js
dec
dec
test
and
jmp
and
xchg
pop
push
iret
into
adc
mov
icebp
arpl
xchg
jp
ljmp
mov
dec
loope
inc
jge
mov
jnp
push
cld
jne
in
test
pop
inc
imul
jae
popl
sbb
mov
add
push
mov
jb
jp
push
cmp
in
lock
xchg
fs
mov
xor
call
fs
pop
fisubs
jno
fistpll
sub
out
pop
and
mov
neg
push
mov
jle
sbb
in
mov
and
mov
pop
push
jp
jnp
cltd
mov
lds
push
jns
jl
xor
mov
aam
lods
fwait
ljmp
sub
arpl
pop
fmulp
jge
xchg
push
scas
scas
lahf
bound
jb
xchg
fwait
mov
xchg
inc
and
clc
jl
fbstp
push
flds
int
repz
push
pop
rolb
imul
mov
ret
jecxz
aaa
xchg
adc
das
push
mov
daa
mov
or
mov
cmp
out
arpl
xchg
lds
add
jmp
cmp
jbe
shlb
test
je
pop
rcr
push
xor
ret
pop
inc
lock
lahf
jmp
xlat
xor
push
stos
jmp
and
mov
mov
orb
mov
test
adc
fidivrl
cmp
dec
inc
movsl
outsl
cmp
std
cmpsb
cmpsl
fimuls
adc
inc
mov
std
xlat
jp
ret
ret
les
movsb
xchg
jbe
adc
imul
xor
ja
ret
sub
fsubrl
xchg
mov
mov
jbe
sbb
test
lret
mov
test
inc
bound
mov
dec
pop
cltd
pushf
addr16
xchg
sub
out
and
xchg
inc
dec
sbb
push
or
mov
arpl
lret
jb
out
jnp
adc
xor
xor
mov
push
popf
mov
push
out
add
push
outsb
dec
mov
stc
dec
sbbl
xor
add
fwait
cwtl
xchg
and
mov
pop
mov
and
xor
sbb
pusha
out
mov
pop
cmp
out
stos
outsl
call
pushf
push
sub
jle
icebp
jnp
mov
imul
jp
lcall
ss
loope
loop
cmp
hlt
inc
push
fistpll
pop
mov
adc
cmpl
and
sbb
adc
and
cmp
adc
mov
test
das
jmp
sub
add
inc
scas
sub
jmp
xchg
enter
das
std
push
fidivs
fs
fst
add
dec
adc
pop
out
pop
mulb
xchg
mov
xor
lods
aad
test
xchg
bound
scas
pusha
ja
repnz
cmp
dec
out
jns
sub
push
inc
das
scas
cmp
dec
repnz
outsl
push
push
pop
jp
int3
fnstenv
pop
and
push
mov
dec
jbe
shlb
cltd
daa
mov
daa
and
scas
into
es
xchg
inc
sub
lods
addr16
fldcw
test
ljmp
and
jae
iret
scas
xchg
rorb
jo
xchg
sub
loopne
pop
mov
or
hlt
arpl
cs
bnd
js
pand
in
and
leave
lret
lret
add
or
repz
test
pop
scas
or
pop
lock
sarb
cltd
icebp
dec
daa
fistps
xchg
mov
fs
stc
orb
cltd
xchg
pop
mov
sub
dec
into
pop
inc
mov
loopne
mov
mov
fs
shll
fwait
dec
pushf
frstor
ljmp
out
out
in
lds
frstor
fwait
or
pop
xor
cmp
xchg
imul
push
push
leave
xchg
lods
cmp
push
cs
inc
xchg
stos
stos
mov
stos
jmp
mov
inc
aaa
rolb
cmp
mov
movsl
and
fimull
insl
mov
adc
adc
or
pusha
xchg
les
xchg
adc
fnstcw
les
sbb
in
adc
cmp
ja
aas
leave
cld
xor
hlt
out
sbb
cmp
lea
jg
mov
inc
stos
addps
push
dec
lods
jbe
fdivr
je
mov
jae
mov
fnsave
inc
imul
in
dec
mov
adc
cli
into
mov
icebp
mov
pop
jne
fs
fmull
mov
jb
jns
xchg
addl
or
or
roll
lods
jb
jl
mov
cli
sbb
mov
pop
sbb
loope
and
aaa
cmp
int
lret
call
fistpll
cmpl
xor
cmp
pop
je
inc
cli
popf
gs
xor
out
xor
cmp
js
add
sbb
mov
les
int
into
push
lahf
pop
mov
loop
test
out
lcall
dec
in
repnz
mov
dec
fstpl
and
cmpsl
shrl
xchg
imul
insl
inc
push
push
xor
push
sub
inc
shll
ds
mov
xor
and
cmp
push
push
rcll
adc
ljmp
lahf
repz
pop
insb
insl
lods
sub
adc
add
jl
arpl
hlt
mov
mov
mov
xor
xchg
sub
int3
stos
lods
push
negb
cmp
dec
pop
aam
and
or
cs
cmp
loope
addr16
adc
dec
mov
popa
push
bound
mov
xor
push
or
into
xchg
ds
mov
cs
movb
scas
mov
jne
sbb
push
lods
adc
lds
sarl
push
je
jl
dec
es
jno
xlat
xchg
das
in
or
or
pop
sbb
sbb
pop
xchg
cmc
adc
adc
push
stos
add
movsb
int3
loope
enter
jmp
cmpsl
mov
mov
mov
pop
outsb
xor
push
rcr
ret
push
inc
dec
daa
rolb
test
shlb
push
dec
and
movsb
xchg
into
divl
lock
out
pop
and
xchg
test
cmp
inc
cmp
lock
jg
dec
pop
cmp
jl
adc
adc
sbb
dec
mov
mov
cmp
pushf
loop
xlat
xchg
inc
lret
mov
and
rcrl
push
lds
fistpl
mov
mov
dec
sahf
in
lret
pop
shlb
iret
les
mov
inc
rorl
pop
repz
dec
add
dec
sbb
rcr
push
sub
loopne
iret
clc
lea
stos
xchg
pop
mov
mov
out
xor
push
jb
fistps
xor
dec
mov
fstp
push
xchg
ljmp
push
sub
das
lret
arpl
lea
and
lahf
lds
rorl
out
insl
adcl
mov
fiadds
inc
fistpll
sbb
imul
fdivl
or
ja
int
cli
aas
cmc
mov
fcmovu
sahf
int
dec
ja
or
fwait
mov
jb
pop
lret
push
rcrw
mov
mov
hlt
push
stos
outsl
push
ret
out
pusha
push
mov
push
je
inc
xor
cmp
fsubrs
xorb
fs
jge
mov
cli
jl
inc
ja
jmp
mov
mov
aaa
in
mov
lret
and
inc
add
ficomps
sub
xor
repnz
stos
pusha
sub
fstpl
sbb
jns
add
dec
sti
test
in
ljmp
mov
shll
cs
cmp
cld
repnz
pop
lret
adc
push
mov
pcmpgtb
mov
pop
jo
sub
push
sub
mov
pop
mov
nop
and
lods
movsl
xchg
stos
and
dec
pop
outsb
inc
pop
mov
out
lea
cmpsb
lds
sbb
rcr
add
xchg
adc
push
scas
push
inc
adc
xchg
test
mov
stc
or
sub
and
xchg
rcrb
insb
es
sbb
push
push
daa
aas
push
outsb
out
adc
divb
xor
out
adc
daa
icebp
cli
or
fsubl
dec
add
lea
shr
ret
cmp
mov
jne
cld
loopne
std
sbb
and
mov
popa
cmp
hlt
and
xchg
inc
mov
cmp
fnstsw
jb
push
out
insb
and
xchg
movsl
pop
mov
push
les
push
sti
pop
lahf
inc
push
pop
jne
inc
out
xchg
add
fdivp
mov
add
add
sub
sbb
fisubrl
scas
fidivrl
daa
movsl
ja
lret
cmp
jnp
nop
rcl
mov
inc
outsl
loope
fldl
mov
and
in
adc
les
je
ss
cmpsb
jno
dec
xlat
loopne
add
movsl
mov
xchg
cmp
data16
cmp
adc
ljmp
lea
mov
ja
scas
popa
loop
clc
lods
add
sub
into
push
inc
mov
into
in
ss
popl
pop
dec
push
add
sub
shl
jns
mov
push
xor
cwtl
sbb
inc
xchg
orps
sub
inc
xchg
insl
and
je
and
dec
in
sub
scas
stc
adc
outsl
xchg
cmpsl
sub
aas
out
ss
stc
jnp
cltd
test
fwait
mov
iret
mov
jb
mov
nop
loopne
pop
gs
pop
jecxz
mov
test
push
or
xchg
push
pop
push
ucomiss
xchg
xchg
mov
aad
mov
movsl
cmp
mov
push
fidivrs
shl
pusha
lahf
dec
mov
jb
bound
inc
js
lods
scas
jnp
mov
mov
pop
testb
inc
sub
dec
cli
xchg
js
test
push
clc
mov
test
movsl
cmc
lods
xlat
ja
gs
jle
mov
and
inc
shlb
das
mul
testl
cmp
cmp
pop
out
sub
bound
stos
cmc
and
mov
out
jno
ds
lcall
rorb
mov
outsl
insl
xor
dec
sbb
cmp
sbb
icebp
les
hlt
ljmp
shl
xchg
ds
ljmp
push
xor
scas
into
popf
dec
cld
inc
sbb
xchg
inc
movsb
shll
lods
push
mov
mov
loop
mov
in
test
inc
or
out
push
and
lahf
jg
addr16
cmp
cmp
push
rcl
daa
push
adc
shl
movsl
xchg
loop
add
fcomps
fdivr
inc
ret
punpckldq
lds
cli
es
jae
lds
ss
test
mov
insl
mov
mov
xchg
mov
sub
outsl
adc
gs
test
testl
sub
test
xor
push
mov
cmp
add
push
hlt
inc
and
push
adc
mov
lea
inc
sub
loop
inc
mov
jno
sub
add
adcb
dec
cmp
dec
and
js
imul
imul
mov
je
lcall
lds
movsb
adc
pop
daa
jp
xor
pop
push
cmp
repz
gs
add
sub
stc
xchg
xchg
jle
xchg
and
enter
or
fsubp
ret
mov
mov
scas
push
push
popf
cmp
jno
mov
or
inc
faddl
imul
dec
roll
scas
lret
aad
shlb
mov
jge
dec
sahf
mov
mov
pop
mov
out
mov
mov
sbb
in
lods
xchg
out
push
jecxz
xor
xor
sbb
dec
dec
out
mov
dec
sbb
or
and
and
adc
addr16
imul
inc
pop
sbb
lcall
gs
int
loop
cld
aam
sub
sbb
pop
nop
push
push
inc
xor
mov
xor
adc
fsts
xchg
jle
lods
sub
xchg
push
xor
sbb
lcall
mov
in
pop
and
enter
ja
arpl
push
push
xor
pop
xchg
loopne
lea
push
sub
movsl
out
addr16
pop
in
mov
inc
test
dec
fcmovnu
stc
imull
test
mov
inc
or
mov
mov
mov
cmp
divl
mov
dec
jnp
mov
xchg
loope
in
sbb
xchg
test
addr16
int3
cmp
mov
imul
std
hlt
xchg
sub
sar
shll
push
mov
out
pop
pop
mov
ret
xchg
test
subl
mov
or
cld
and
in
scas
push
dec
sbb
sahf
pop
push
push
sub
loop
stos
adc
out
aas
loop
lcall
outsl
mov
test
lahf
mov
add
test
js
inc
or
jae
sub
xor
add
arpl
imul
nop
out
inc
aad
xchg
push
dec
mov
jg
xor
aad
xchg
rcrl
daa
push
addr16
addl
outsb
mov
in
xchg
push
sbb
push
stc
mov
fistpll
in
mov
cmp
outsb
dec
mov
popf
xchg
mov
mov
mov
xchg
push
dec
cmp
mov
or
imul
push
mov
test
pop
and
mov
push
inc
dec
nop
xchg
jbe
stc
fsubs
inc
dec
mov
mov
mov
push
mov
loop
lock
leave
cmp
jns
test
fcmovnbe
adc
jno
test
mov
stc
mov
push
xchg
push
fldenv
cmp
divl
int3
jl
add
sbb
and
xor
xchg
stos
jge
mov
out
sub
push
movsl
sub
pushf
jbe
sbb
nop
test
jg
scas
sbbl
adc
push
push
inc
push
mov
mov
xor
add
int
fs
js
in
sub
xchg
xor
sub
add
imul
dec
adc
mov
push
mov
negl
mov
or
adc
repz
mov
mov
adc
push
lret
mov
sbb
aas
add
mov
loopne
sbb
push
jo
sbb
mov
push
cli
popf
ljmp
enter
xchg
xchg
scas
nop
outsl
clc
out
pop
sbb
mov
out
gs
sub
movl
jo
popa
call
jbe
fwait
sahf
hlt
fs
or
xor
daa
lock
mov
divl
rolb
mov
out
mov
xchg
push
push
insb
cmp
pop
jg
sbb
sbbl
andl
bnd
and
mov
mov
jl
push
les
mov
cmp
mov
imul
push
pop
lahf
push
icebp
adc
push
jge
push
adc
fldt
cmp
mov
int3
scas
iret
cs
mov
dec
arpl
push
ja
fdivrs
pop
xchg
jp
bnd
push
pop
pop
rep
mov
inc
sbb
dec
imul
sbbl
loop
stc
sub
out
out
push
arpl
retw
test
cmpsl
or
sbbb
pop
jg
mov
xorb
lods
xor
int3
sub
ds
imul
sti
int3
jnp
pop
mov
mov
mov
mov
lret
mov
or
sbbb
xchg
stc
add
std
mov
out
add
stc
iret
pop
loopne
dec
imull
and
adc
loope
lock
cmp
dec
mov
mov
and
out
inc
cmp
fists
pop
and
in
xchg
movsb
lcall
push
jnp
pop
cwtl
inc
scas
push
je
stos
adc
xchg
in
stos
pop
jb
push
mov
icebp
add
and
inc
arpl
cmpsb
popf
ja
pop
sub
shlb
out
ja
jl
mov
dec
adc
inc
xchg
xchg
js
cmp
inc
dec
xor
jno
push
push
add
enter
mov
mov
pop
and
fcmovnbe
inc
sbb
mov
and
xor
mov
xor
outsb
cmp
rcrb
xor
pop
xchg
xchg
out
or
sbb
jb
or
notl
in
pop
in
ss
sub
popa
or
mov
add
inc
fwait
jae
sti
sbb
aaa
rorl
sub
or
mov
lret
add
dec
pop
xor
xchg
push
incl
fidivrl
xchg
cmc
decl
jecxz
pop
adc
testb
xchg
stos
repz
pop
into
out
subl
xchg
cli
sub
pop
and
enterw
mov
add
gs
shl
pop
pop
or
pop
test
subb
mov
in
aam
dec
sahf
push
and
and
test
std
xor
dec
popa
or
mov
bound
sbb
sbb
sbb
adc
or
dec
add
inc
out
xor
push
int
dec
imul
aas
js
faddl
gs
sbb
pop
xchg
stc
adc
xchg
xchg
sbb
pushf
adc
push
iret
jae
fsubrp
fs
push
mov
pushf
add
lret
bound
sbb
in
xor
push
jo
jecxz
fcoml
cmp
mov
sub
fisttpl
pop
shll
frstor
sub
cmp
fidivs
xor
test
xor
aas
mov
adc
pop
adc
jbe
push
notl
push
push
jmp
in
xchg
and
gs
xchg
mov
mov
fwait
cmpb
adc
dec
shrl
mov
shl
outsb
mov
insb
aaa
ds
jg
imul
jle
and
int3
mov
mov
sub
mov
in
pop
xchg
lahf
mov
mov
adc
or
scas
in
cli
cmc
fwait
jns
aam
in
xor
popf
sbb
clc
xchg
fwait
dec
xchg
xlat
inc
daa
xchg
fstl
fisubrl
mov
mov
push
cmp
mov
scas
mov
nop
mov
push
repnz
dec
jnp
pop
inc
loopne
stos
jne
test
repnz
mov
sbb
or
mov
adc
jb
xor
or
sub
dec
jno
cmp
jecxz
mov
leave
aas
mov
push
mov
rcll
mov
aad
mov
add
fisttpl
imul
xchg
sbb
jne
stos
dec
aaa
cmp
imul
jecxz
clc
mov
ja
lods
xchg
fdivrs
int3
push
fisubrl
sarl
cld
inc
popa
cs
jne
sbb
stos
outsb
jnp
mov
mov
fmulp
jge
push
push
daa
stos
mov
data16
sub
sub
push
or
stos
push
or
aam
shr
jnp
mov
insl
std
ret
sbb
sub
add
mov
cli
ljmp
jo
inc
lods
xchg
xchg
adc
into
add
dec
and
ss
sub
mov
loop
fists
push
mov
push
sbb
cld
sbb
in
and
outsl
sbb
sarl
cmp
adc
and
xlat
adc
rolb
int3
inc
push
shlb
dec
cmp
call
adc
nop
jne
std
dec
fbld
fpatan
pop
mov
lods
shlb
mov
adc
popf
or
into
push
insl
je
cmc
pop
int
call
std
add
sbbl
dec
into
and
push
pop
xchg
push
test
jb
rolb
mov
and
je
pop
mov
mov
or
les
insl
add
js
adcl
sub
notl
xor
sahf
and
xlat
and
cltd
pop
pop
aad
sub
add
mov
test
data16
adc
fstl
xor
cmovp
fiaddl
scas
cld
xchg
cmp
xchg
rolb
add
inc
pop
icebp
jl
pop
push
lea
lret
popa
test
scas
rclb
popa
adc
loopne
faddl
lds
ljmp
ds
or
lock
dec
xchg
xchg
inc
imul
adc
loopne
scas
mov
xchg
negb
in
mov
push
cmp
xchg
sub
dec
mov
sub
add
les
outsl
jb
push
pop
sub
outsb
mov
cmp
ljmp
sbb
mov
insl
imul
xchg
je
jo
mov
lods
cli
cmp
or
fwait
in
or
andb
cwtl
pop
fs
inc
shrb
testb
leave
lea
xor
fidivrs
add
push
or
addl
adc
lea
lcall
add
mov
dec
dec
hlt
sub
ficompl
cs
stos
jmp
dec
mov
add
cmp
jb
popa
repnz
inc
call
popa
pop
popf
cmp
daa
and
adc
test
sahf
test
push
dec
fcoms
lds
les
movsb
pusha
orl
push
xchg
ret
int3
fsubrs
into
imul
out
add
xor
jmp
push
cld
mov
out
je
lahf
mov
pusha
xor
sahf
aas
cwtl
pop
lret
or
pop
cmp
daa
repz
jbe
mov
sub
adc
repnz
xchg
xchg
xchg
cmp
inc
inc
sarb
dec
xor
in
mov
adc
mov
add
mov
cmp
pusha
out
clc
lds
loop
pop
jle
gs
dec
sti
jp
addr16
pop
mov
orb
jnp
xorl
icebp
and
or
mov
xor
mov
and
jns
mov
loope
jecxz
dec
mov
cmpsl
and
xchg
and
in
outsl
xchg
lret
pop
sbb
and
adc
mov
jae
sbb
xchg
cld
ljmp
into
stos
fwait
sbb
sub
sbb
inc
scas
test
inc
mov
adc
xchg
in
sarb
pop
loopne
cmpsl
xchg
mov
repz
mov
pop
iret
xor
cmp
add
cwtl
nop
repz
cli
adc
mov
fimull
ror
mov
or
mov
add
cmp
push
insl
aad
jmp
sub
cmp
push
cs
xchg
cwtl
pop
sahf
nop
cli
mov
roll
repz
add
test
mov
pushf
into
negl
gs
int
or
xor
popa
arpl
jp
sbbl
dec
stos
sbb
inc
mov
xor
dec
cli
sub
or
jbe
lds
mov
fs
sbb
nop
fists
cmp
and
orl
test
or
fsubr
jnp
cmpsb
mov
ss
mov
iret
xor
into
mov
aas
lahf
orl
setg
out
loopne
inc
xor
pop
test
xlat
cmp
ret
and
xchg
add
icebp
shlb
icebp
fists
loop
je
jmp
movsb
rcpps
cli
push
jne
mov
xchg
icebp
cmpsb
or
fs
fwait
adc
xchg
data16
mov
pop
mov
xor
cmp
cmp
addr16
push
mov
addr16
out
mov
leave
scas
and
test
dec
inc
cmpsl
push
add
jns
xor
je
icebp
and
lea
fsubr
pop
sbbl
dec
sbb
lcall
mov
sub
or
xlat
dec
or
std
dec
daa
mov
repz
fcoms
fwait
es
fcompl
repz
enter
add
or
test
das
push
inc
mov
push
mov
mov
dec
jecxz
cwtl
inc
mov
into
xlat
add
outsl
mov
adc
push
lahf
mov
bound
repz
loop
outsb
cmpl
rclb
xor
push
int3
add
aaa
loopne
cwtl
xor
dec
jmp
sbb
xor
push
rol
pop
std
or
fdivrs
dec
imul
mov
js
adc
cwtl
lock
lea
push
fldcw
sub
test
sahf
xchg
pusha
inc
sub
addr16
incb
dec
push
xchg
stos
and
int
jg
setns
fmuls
cmp
pop
or
enter
enter
or
mov
fsts
sbb
sbb
cld
xchg
xchg
push
xor
jle
movsb
mov
fcomi
mov
xchg
pop
std
or
jmp
jno
push
fmul
sahf
arpl
mov
xor
mov
ret
loop
cld
push
mov
les
mov
inc
xlat
sbbb
pop
jmp
jno
fs
pop
jno
scas
comiss
adc
insl
ret
loopne
and
dec
bound
shr
jnp
aad
jmp
pop
ljmp
outsl
into
dec
adc
aam
mov
jge
mov
xor
imul
push
cli
xor
and
aas
sbb
leave
xchg
xchg
int3
pop
inc
xchg
loopne
mov
ss
repnz
nop
add
jb
add
inc
lahf
push
xchg
dec
push
xor
mov
inc
xchg
xchg
sbb
or
fisubl
rclb
and
mov
mov
mov
stos
in
adc
sbb
mov
xor
dec
mov
xchg
and
adc
sbb
test
inc
shl
aaa
jge
xor
mov
sbb
push
ds
divb
push
mov
ja
scas
pop
ret
popf
aad
sub
js
adc
sbb
in
mov
negb
xlat
insb
sbb
and
xchg
and
cmp
sub
push
sbb
pop
mov
xchg
jecxz
and
dec
xchg
daa
jb
shl
inc
stos
mov
shll
movsb
push
push
dec
mov
out
gs
xchg
stos
xchg
sub
xchg
jnp
mov
jb
movsl
insl
add
das
mov
mov
inc
cmp
mov
cmpsl
add
inc
subl
dec
cwtl
out
push
movl
call
jno
and
int
lds
andl
inc
data16
fs
xchg
fdivrl
mov
push
mov
inc
jmp
inc
push
mov
push
daa
push
mov
in
loopne
push
xchg
sar
js
jb
or
jg
dec
pop
aam
xchg
adc
icebp
das
ljmp
xlat
movsl
incl
mov
jmp
push
push
xchg
and
cmc
sti
test
inc
add
or
jae
push
cmpsl
or
mov
push
push
or
shlb
repnz
jnp
sarl
andb
bound
fstpt
or
icebp
sub
ficoms
pop
test
cmp
mov
loopne
bound
sub
std
nop
imul
sub
pop
call
lret
shrl
mov
pop
xor
inc
push
sbb
inc
xchg
sbb
cmp
iret
push
mov
roll
add
out
or
pop
sbb
or
mov
lea
call
pop
xor
dec
dec
lods
pop
repz
mov
es
dec
add
test
cli
jge
push
pop
les
push
fstl
jl
add
aam
mov
jnp
data16
cmpsl
mov
ss
nop
enter
cmp
je
lahf
mov
mov
lahf
fistl
dec
push
imul
jle
shl
test
shlb
mov
popa
mov
ds
mov
cmpsb
mov
imulb
lods
push
mov
mov
ljmp
sub
mov
in
sbb
or
push
inc
cmp
sbb
dec
cwtl
and
push
adc
test
jl
aam
das
or
fldt
mov
loop
xor
xor
outsl
hlt
in
cli
addb
mov
xlat
sub
out
ret
faddl
lods
and
and
dec
add
jb
dec
out
test
mov
movsb
or
lods
dec
into
push
xor
jnp
push
xchg
dec
xchg
jmp
push
test
pop
jmp
xchg
mov
sub
adc
push
adc
fbstp
push
adc
xor
push
aam
into
pushf
cmp
test
jle
xchg
jno
movsl
fisttps
jno
dec
inc
sti
dec
filds
add
aam
xlat
test
fidivrl
inc
repz
dec
xor
loope
xchg
arpl
mov
jne
mov
or
cmpsl
mov
pop
push
lea
dec
call
loop
call
popa
shrl
add
lods
mov
push
dec
lahf
dec
mov
mov
push
cmp
mov
mov
jl
in
adc
daa
pop
mov
cmp
aaa
push
mov
jmp
cmpps
test
cli
mov
pop
lds
mov
les
in
int3
cmp
add
in
popa
imul
movsl
xchg
sahf
mov
cld
out
mov
cmpsl
cld
jb
imul
mov
and
decb
pusha
cli
mov
fsubp
dec
leave
fsubrs
lahf
or
jne
imul
mov
scas
adc
and
xchg
xor
push
lods
jne
add
inc
sti
int3
xchg
or
mov
rcrl
jl
jns
fsubl
push
cwtl
dec
test
inc
lret
ja
sbb
pop
dec
or
shlb
movb
push
clc
and
pop
out
mov
xor
xlat
push
lods
adc
or
lods
or
sub
mov
cli
int
adc
arpl
loope
inc
leave
sub
outsl
push
mov
leave
lods
or
xchg
stos
movsl
das
iret
fnstsw
inc
sbb
jnp
mov
inc
div
cmpsb
xlat
ret
sbb
enter
bound
cmpb
shll
xchg
lods
mov
dec
mov
ss
dec
std
mov
insl
rorb
sbb
add
outsb
mov
pop
pop
lods
push
andl
outsl
popa
sub
rorb
cmc
lret
ljmp
inc
jp
hlt
xchg
lock
dec
xchg
sti
dec
xchg
fadd
test
push
shl
pop
pop
les
fisttpll
test
mov
push
inc
mov
rep
imul
div
stos
test
mov
pop
xchg
jle
sub
data16
out
test
icebp
mov
mov
out
mov
test
clc
rorl
sbb
test
push
getsec
and
popa
mov
jmp
dec
mov
sub
aam
jmp
push
or
stos
mov
rcl
cltd
sbb
repnz
lcall
data16
xor
ror
mov
ja
bnd
sub
fidivl
inc
sti
insl
loop
sub
and
lret
dec
insb
ljmp
data16
jg
cmp
frstor
mov
ja
test
cwtl
dec
daa
lea
add
leave
popa
lahf
xchg
and
push
push
lods
mov
and
xchg
and
hlt
test
add
mov
cmp
subl
jle
adc
jb
xor
push
imul
ja
fisttps
mov
push
ss
mov
jmp
sub
xchg
bnd
aam
pop
lret
fnop
jns
pop
mov
or
fcompl
lock
sub
pop
mov
sahf
ror
cmp
mov
inc
sub
push
lret
add
cltd
add
mov
addb
mov
iret
icebp
mov
ret
lock
xchg
mov
mov
sub
movsl
popf
jmp
mov
mov
repz
rcrb
enter
sbb
es
mov
in
sub
cmpsl
loopne
xchg
push
xchg
mov
inc
aas
popf
stos
push
fadds
pop
cs
stos
jecxz
aas
inc
push
subl
nop
xor
mov
pop
call
lret
pop
push
cmp
sub
leave
xlat
add
pop
gs
ja
xchg
jp
lock
shlb
pop
mov
icebp
rol
and
aam
mov
mov
sub
adc
jns
imul
int
les
or
mov
adc
jne
push
gs
sbb
mov
mov
dec
jp
data16
jl
lret
pop
push
push
dec
mov
dec
mov
popa
js
iret
rorb
pop
lock
es
pop
jmp
out
mov
push
in
je
repnz
lahf
xchg
lahf
xchg
fsubs
mov
mov
xor
pop
popa
cwtl
scas
cmp
mov
int
or
clc
sbb
test
mov
imul
cmp
dec
add
and
sub
xor
sub
jno
imul
push
and
aaa
mov
mov
mov
rol
das
ljmp
jo
mov
call
inc
rcl
and
jg
and
sub
pop
inc
sbb
pushf
pushf
add
and
pop
gs
iret
ffree
xor
sbb
insl
push
mov
pop
cmp
and
rcrl
fwait
sub
rcr
cmp
hlt
cmc
mov
mov
sbb
mov
test
sub
in
xchg
pushf
es
jno
sub
push
movsb
fsubrl
jl
pop
mull
dec
dec
pushf
rolb
adc
sbbl
jbe
sar
dec
sahf
shlb
mov
push
fiaddl
mov
in
xchg
fidivs
call
jnp
mov
inc
cmc
fcoms
adcl
aaa
lcall
repnz
mov
mov
jmp
int
pop
cmc
sub
xchg
sub
mov
pop
aad
andb
or
sbb
fwait
out
or
push
adc
jg
xor
fisttps
rclb
add
arpl
lret
stos
mov
jl
cmc
jl
int
out
sbb
sbb
pushf
dec
xchg
push
dec
lds
aas
xchg
xchg
outsb
scas
hlt
push
sbbl
mov
xchg
lock
jns
inc
iret
outsl
and
inc
jge
jg
imul
jnp
push
clc
sub
and
cmp
test
dec
mov
and
sahf
ficompl
int3
mov
insl
hlt
enter
aaa
xchg
pop
stos
push
scas
jp
inc
popf
icebp
mov
or
mov
clc
lcall
or
aam
pop
shl
data16
cmp
mov
flds
inc
fucomip
mov
testl
mov
es
mov
daa
mov
push
cmpsb
mov
push
int3
mov
int
test
pop
aad
mov
fisubrs
into
movsl
int
enter
push
les
loopne
sub
adc
sbbb
mov
inc
cmp
mov
test
pop
sub
inc
data16
adc
insl
inc
clc
cs
sbb
das
sub
xlat
fimull
movb
in
or
clc
sarl
daa
pop
lock
pop
dec
enter
sti
bound
test
mov
pop
rcr
inc
pop
lcall
jecxz
add
out
jno
cmp
cs
xor
pusha
pop
dec
xchg
mov
div
xor
ss
in
scas
pop
mov
pop
sbb
cmpl
xor
lcall
lock
mov
into
inc
adc
je
mov
repz
inc
test
fwait
rcl
movzwl
negb
sub
lock
mov
out
test
xor
clc
pop
pop
cmp
inc
lods
jg
jecxz
stos
in
jne
push
inc
xlat
cs
jecxz
mov
adc
and
fwait
mov
mov
jae
ds
lods
scas
fs
inc
movsl
popf
xchg
sub
adc
adcl
pop
aas
mov
lock
outsl
or
leave
daa
popf
negl
and
sub
in
ds
and
mov
dec
sub
pop
or
push
mov
cld
pop
daa
js
xchg
jecxz
jnp
lcall
mov
out
mov
inc
add
shll
dec
out
es
dec
jmp
shrb
scas
jl,pn
lods
cli
push
and
jle
lods
xchg
pop
movl
xor
int3
lock
mov
pop
inc
jmp
fnop
cmpsl
hlt
cmpsl
mov
xchg
mov
mov
loop
push
cmpsb
lods
inc
or
lock
fwait
rorb
pop
fists
aas
ds
inc
cwtl
idivl
add
sti
xor
jne
rcll
in
sti
in
mov
add
pop
adc
lods
xor
jmp
in
sub
shrb
repnz
data16
lret
cli
add
aas
mov
int
out
mov
dec
lcall
scas
push
pop
stc
cli
cli
shl
sub
sti
ds
sbb
mov
stos
aaa
push
sbb
xchg
int
mov
cmp
ss
push
jg
lret
pushf
sbb
pop
dec
fsubrl
aas
lods
cmp
repz
mov
jge
bound
outsb
std
add
sub
mov
arpl
mov
xchg
inc
stos
cmc
fsubr
in
mov
adc
imul
jae
loopne
mov
mov
dec
jae
lcall
inc
enter
mov
pop
or
sbb
outsb
aas
mov
push
je
pop
loope
cmpsl
js
push
push
push
js
dec
add
pop
or
cli
xchg
lods
cmp
call
rorb
hlt
jmp
out
xorl
and
sbb
into
es
mov
or
pop
fs
call
ret
mov
cwtl
arpl
jne
pop
mov
out
mov
push
push
mov
and
dec
xchg
movsl
out
loopne
dec
aas
lcall
dec
les
divb
push
dec
mov
sbb
xchg
push
cltd
inc
mov
faddl
xor
lahf
les
dec
jb
aad
fmuls
mov
js
movsl
leave
hlt
dec
jb
mov
scas
ljmp
add
lods
lahf
repnz
sub
std
sahf
and
jecxz
nop
daa
sub
fdivr
lods
adc
jg
mov
inc
inc
into
jle
push
in
into
mov
imul
push
pop
dec
loopne
mov
jne
in
test
adc
mov
ret
ret
mov
lea
and
aad
loop
sbb
inc
mov
and
out
and
push
dec
xchg
mov
sub
mov
inc
xor
push
xchg
mov
push
sbb
lock
aaa
aas
aaa
cmp
icebp
icebp
push
mov
cmpsb
pop
mov
cmp
fldt
jp
or
dec
bound
jp
jno
out
jo
das
clc
push
aas
scas
aad
push
mov
adc
mov
sub
xchg
into
test
fnstenv
pop
and
xchg
test
sarl
shrb
lcall
sub
xchg
inc
xchg
lcall
jmp
cld
inc
xor
iret
enter
xchg
popf
mov
sti
mov
or
cli
call
jnp
cmp
testb
xchg
mov
pop
jnp
das
sbb
and
in
adc
movsl
dec
inc
adc
mov
sub
lock
pop
mov
sub
sbb
push
nop
adc
clc
push
idivl
cmp
call
sbb
std
daa
inc
dec
mov
icebp
adc
mov
mov
xorl
sahf
cmpsb
out
inc
pop
add
jno
cmp
add
ret
aam
stos
push
outsl
pushw
pop
dec
xchg
jae
lods
and
mov
jg
and
sub
popf
mov
sub
and
es
jnp
fldl
aam
adc
aaa
test
pop
aad
mov
loopne
push
mov
cli
mov
sub
adc
cmc
aaa
loop
jp
xchg
push
fbld
mull
rclb
gs
inc
adc
push
mov
in
shrb
sub
or
jl
mov
sub
cmc
or
lcall
xchg
dec
or
sub
sub
mov
and
and
fsubrs
lret
inc
sbbl
xchg
rorb
mov
xor
push
int3
ds
cwtl
testb
sahf
fbstp
out
cmpsb
std
sarb
pop
mov
mov
out
test
shll
jbe
lock
std
repz
cld
pushl
scas
xchg
call
sbb
dec
div
mov
lcall
dec
pop
inc
sbb
pop
mov
int3
add
lds
xchg
bound
data16
loope
test
mov
add
inc
cs
int3
jecxz
aas
enter
push
adc
lret
shrb
mov
outsl
push
mov
stos
mulb
push
mov
dec
aad
test
mov
dec
xchg
add
jl
fwait
cmp
out
scas
inc
es
inc
add
xor
and
cld
add
enter
arpl
test
or
inc
jl
mov
js
in
or
pop
mov
xchg
pop
daa
call
out
jecxz
xor
dec
jb
push
arpl
imul
xor
lret
sub
aas
clc
pop
jmp
dec
mov
or
aam
stos
test
pop
adc
popf
pop
inc
sbb
adc
xor
push
popf
sub
jae
and
shlb
xchg
xchg
or
pop
popa
xchg
jo
mov
inc
pop
cltd
jge
flds
dec
cmp
icebp
scas
mov
out
or
lock
push
bound
push
dec
xchg
sub
repnz
dec
fwait
cwtl
cli
fldenv
sub
mov
xor
xchg
loopne
mov
cmp
pop
in
mov
stc
popf
jle
iret
andl
mov
cmp
hlt
pop
xor
aaa
lcall
jl
sub
mov
in
mov
fcoms
push
test
jmp
jae
cltd
sbb
push
out
mov
addr16
mov
push
push
jne
jge
add
jbe
jo
mov
scas
lods
jp
in
and
cwtl
pop
icebp
jo
movsb
jg
jl
mov
lret
inc
lcall
inc
nop
out
dec
sub
mov
and
ss
xchg
mov
jns
lock
lret
scas
push
pop
test
dec
cmp
imul
test
and
inc
jge
bound
call
nop
loop
int3
pop
pop
enter
or
add
call
fbld
cmp
jge
test
jle
dec
shll
cmp
aaa
cmp
jns
pop
xchg
imul
shr
jp
lret
cmpl
sub
rclb
ret
subl
out
pop
sahf
je
cld
jo
pop
lahf
push
stc
movsl
add
stc
icebp
mov
jmp
jae
add
mov
test
mov
lcall
and
or
js
jle
xor
mov
adc
rcrb
shl
mov
call
add
into
jg
shrl
xchg
outsl
mov
push
and
push
fidivrs
std
test
jg
sbb
xchg
mov
or
pop
pop
pop
sbb
aaa
jl
unpckhps
out
scas
cli
fs
mov
lret
pop
pushf
bound
popa
loopne
arpl
mov
sub
cmpsl
andl
jg
andb
push
negl
andb
and
mov
out
ficoms
dec
pop
mov
lret
mov
jle
xor
push
insl
insb
sarb
or
outsb
push
ss
cmpb
push
or
jb
enter
adc
mov
movsb
or
adc
xor
hlt
mov
ss
mov
fildll
jae
aam
fstps
xor
les
cmp
mov
dec
and
mov
sub
scas
test
jle
call
mov
popa
lcall
mov
jge
push
xlat
ret
les
inc
xchg
outsl
sbb
dec
adc
pop
adc
inc
sbb
inc
outsl
sbb
jne
fistps
test
mov
jno
pop
adcl
js
jmp
xor
das
xor
fcmovnb
ficoms
xchg
cmpsb
inc
leave
sbb
lods
or
inc
sti
sti
inc
adc
addr16
aad
sti
leave
or
in
push
xor
sti
mov
cmp
jb
ja
jnp
cli
dec
mov
inc
and
or
mov
not
cmp
jecxz
incb
mov
push
es
jp
mov
das
stc
jns
ds
lret
cmp
mov
ss
ret
iret
pop
xchg
mov
cmp
dec
jmp
enter
movsl
divb
or
jnp
imul
cmpsb
xchg
subl
lods
add
dec
pop
inc
adc
pop
xchg
std
push
xchg
xchg
clc
push
push
imul
and
fnsave
loopne
mov
out
cmc
das
aad
flds
jmp
jmp
addr16
nop
rcl
fdivr
xchg
fdivrl
dec
outsb
ss
pop
shr
scas
xchg
jno
leave
in
sbb
jp
mov
enter
xchg
and
cmpsb
xlat
shll
jo
inc
hlt
test
push
jle
je
in
js
scas
js
andb
shlb
movsl
pop
ljmp
push
xchg
mov
add
out
popf
jecxz
scas
or
bound
jecxz
and
pushf
nop
dec
in
push
push
incb
push
jge
adc
cmpsl
sahf
sbb
fldt
mov
ret
ds
cli
jecxz
adc
das
jecxz
shl
push
mov
movsb
gs
shll
sahf
xor
in
or
mov
into
int3
ret
cmc
daa
mov
insb
repnz
push
mov
mov
dec
clc
popf
xor
fidivrs
push
mov
xor
mov
sarl
xchg
fisubl
cmp
mov
in
pop
fwait
xchg
mov
dec
loope
fwait
inc
push
cwtl
inc
xchg
dec
cmp
mov
dec
xchg
stc
pop
adc
mov
mov
scas
hlt
xchg
lret
std
ds
mov
pop
sarl
xchg
and
adc
xchg
stos
jo
push
int3
adc
mov
push
or
mov
data16
pop
sahf
frstor
test
push
jae
pop
mov
stos
xchg
outsb
mov
or
xchg
pop
pop
sti
push
pop
rcrb
loope
mov
sbb
cmp
jbe
fmull
insb
adc
adc
adcb
push
in
shl
xlat
push
inc
mov
cmpsl
loopne
int3
or
xor
inc
push
icebp
jmp
pop
test
rcrb
cmp
pop
dec
dec
or
ret
pop
jle
inc
lds
leave
mov
adcb
mov
xor
in
add
std
sub
icebp
mov
stos
movl
mov
aad
mov
in
js
xor
jae
paddusw
push
aad
add
xchg
ret
fsubrs
cmp
and
xchg
fidivrl
ja
sub
xchg
push
loop
imul
add
and
dec
cmp
adc
icebp
pushf
outsl
cmp
enter
test
add
movsb
pop
inc
movsb
lods
or
mov
pmaxub
sbb
ja
xchg
aam
loope
or
shlb
cmp
daa
inc
adc
add
jmp
push
sub
hlt
jl
movsb
ds
fs
push
pop
jg
inc
xchg
movlps
negb
pop
push
fcmovnu
xor
fwait
dec
insl
and
jbe
xchg
dec
cmp
pop
sub
rcll
ljmp
das
mov
js
mov
jo
scas
test
clc
insl
xor
int
mov
push
and
fs
mov
sbb
outsb
das
mov
push
xchg
xchg
xor
rcrl
push
xlat
shl
in
out
mov
ja
mov
je
mov
push
je
test
je
jl
sub
int3
pminub
or
dec
mov
sub
sbb
daa
push
or
xor
push
mov
jnp
idivl
cmp
mov
inc
je
pop
repnz
adc
cmp
pop
rorl
bound
aam
nop
int
outsl
inc
fistps
mov
adc
xor
ret
jle
sub
lock
mov
dec
aad
mov
xorl
fbstp
adc
pop
jg
add
stos
mov
test
push
sub
lock
cmovno
xchg
sub
cli
mov
and
mov
fnstenv
dec
dec
add
movsl
sahf
jne
ja
xchg
popa
lret
aas
xlat
int
or
cmp
cmp
xchg
std
dec
lret
and
push
pop
nop
cmc
mov
enter
mov
lret
das
sbb
jbe
and
int
filds
cmovp
pop
add
jne
add
add
popa
push
out
jle
jle
cmp
fprem1
in
cmc
mov
mov
fwait
mov
js
xchg
repz
mov
paddusb
in
push
add
push
out
rcrl
bound
popf
push
mov
pop
or
fnstsw
and
clc
or
insb
ret
test
push
scas
push
aas
cmp
leave
or
jno
inc
jne
jl
shrd
sbb
mov
pop
sti
ja
jne
mov
mov
nop
cwtl
in
inc
pop
adc
sbb
mov
or
sub
sub
int3
insb
xchg
cmpsw
dec
or
lods
inc
sarb
jbe
arpl
xchg
pop
stos
jl
ss
test
cmc
sub
loopne
jo
mov
nop
daa
push
dec
ds
xchg
inc
mov
mov
xorl
jmp
fldenv
mov
jmp
adc
adc
pop
jle
adc
pop
incl
lahf
cs
icebp
je
jo
push
cs
je
inc
jg
pop
mov
mov
out
movsl
or
jecxz
jle
xor
ss
and
mov
inc
jmp
push
js
pop
les
outsb
mov
or
lea
jg
je
mov
call
fimuls
add
mov
cmp
ljmp
dec
jg
ret
push
loop
fdivrl
add
dec
cltd
rorb
pop
mov
lds
xchg
jnp
inc
pop
jne
call
repz
filds
aam
fs
jbe
push
fisttps
or
movsb
mov
mov
and
js
sbb
stos
loope
xchg
imul
push
and
mov
in
add
sub
lret
mov
xchg
stos
push
add
or
lcall
jns
loop
adc
xchg
cmp
notl
fs
or
pop
jl
aad
sub
mov
test
and
testb
mov
aas
nop
lods
mov
xlat
or
mov
mov
insl
pop
int3
xor
cmc
shl
in
mov
addb
sbb
mov
mov
and
push
popa
jae
insb
mov
dec
test
mov
scas
xchg
popa
insl
cmp
pop
mov
fidivl
das
push
call
cmp
xchg
and
test
rcrb
cltd
jge
adc
jmp
jl
rcr
bnd
xchg
dec
fadd
sbb
outsl
aad
sbb
push
pop
cmp
mov
sti
sahf
sahf
cmp
add
push
lcall
mov
jb
lret
mov
mov
cmpsl
sbb
mov
cmp
sub
and
shrb
mov
mov
push
jge
leave
fistl
mov
aaa
pop
mov
cmc
mov
xor
push
hlt
mov
mov
jmp
fcmovbe
notb
pmuludq
les
sahf
into
push
xchg
scas
aam
hlt
ljmp
xlat
insl
js
jmp
call
inc
sub
mov
xchg
jb
dec
jns
shrl
lds
sbb
kmovw
push
and
cmc
mov
and
shrb
mov
xchg
mov
ss
mov
mov
xor
insb
mov
xchg
shrl
repnz
cmp
jo
mov
imul
repnz
minps
dec
addr16
mov
ret
mov
rcrl
xchg
mov
in
inc
movsl
xchg
fs
or
and
loope
pusha
outsl
mov
mov
fisttpl
mov
movsb
cmp
outsl
enter
lcall
add
jnp
das
das
aam
push
lret
jno
fidivrl
loopne
test
and
call
xchg
mov
xor
lods
pop
dec
mov
inc
pushf
in
movsb
fwait
xchg
mov
gs
clc
xor
loope
int3
sub
paddsb
lcall
push
sub
or
and
cld
lcall
add
xor
stos
imul
lahf
addb
mov
jmp
test
out
xor
das
das
js
arpl
xchg
clc
sub
std
mov
enter
inc
jmp
xor
cltd
jl
jb
sbb
stc
cmp
dec
push
int
jns
stc
cmp
clc
dec
pop
leave
js
sub
inc
xchg
cmpb
fdivr
data16
lret
movsl
mov
outsl
leave
hlt
xchg
mov
mov
icebp
add
in
mov
rclb
aas
jp
stos
mov
mov
sti
push
sahf
in
in
or
insb
push
push
pop
adc
rol
adc
xor
scas
mov
shlb
xchg
dec
cmpsl
aaa
outsb
adc
mov
cmpsl
lock
cmpsb
mov
xchg
stos
jg
add
mov
fxch
sahf
and
subl
pop
lock
inc
movsb
into
ret
or
fs
fs
scas
ds
xchg
pusha
push
sbbb
es
icebp
inc
jnp
into
ret
push
jmp
inc
jno
push
and
xchg
xchg
add
inc
loope
roll
fs
std
dec
jns
cmpsb
lods
xchg
adc
inc
arpl
mov
add
cltd
jne
sarl
xchg
scas
cmp
insb
jnp
mov
lock
repz
rcl
and
adc
lcall
mov
jl
jmp
mov
xor
add
and
fbstp
and
dec
js
pushf
popf
xlat
or
inc
cmpsl
lods
fimull
js
jg
mov
scas
dec
pusha
out
es
sbb
loop
ljmp
stc
sbb
bound
ss
hlt
lock
gs
enter
data16
xchg
mov
cmp
mov
sahf
xchg
mov
mov
leave
inc
in
stc
in
dec
sarl
faddl
stos
pop
fldt
aad
movb
xchg
in
scas
cmp
ret
push
mov
dec
sub
push
mov
loopne
inc
xchg
loop
xchg
ret
insb
in
jge
ljmp
push
pop
clc
andl
nop
rolb
jns
sbb
rclb
movsl
add
aad
and
stc
out
or
push
xlat
test
and
sahf
add
and
add
clc
mov
sub
dec
xchg
cld
into
and
or
aam
inc
js
lahf
or
mov
sub
mov
push
dec
mov
daa
pop
iret
add
dec
mov
insl
cs
lret
popa
jne
jns
pop
push
rclb
jnp
lcall
mov
ds
hlt
call
addr16
cmpsb
sub
movsl
lahf
push
inc
into
lcall
iret
test
adc
imul
fld1
fwait
clc
lods
outsb
jno
insl
push
dec
adc
dec
xor
jno
adcl
insl
mov
mov
gs
hlt
cltd
cltd
daa
inc
lds
enter
xchg
mov
adc
int3
imul
push
mov
inc
gs
inc
out
ja
imul
sub
cmp
and
or
movsl
loopne
lods
in
cmp
sar
cltd
dec
testl
xchg
js
bound
mov
scas
cmpsl
fstps
cmp
add
mov
add
push
inc
loopne
insb
add
lcall
cmpsl
int3
jo
es
and
imul
push
lock
cli
fimull
mov
es
add
lds
fcoms
test
lret
xadd
and
bnd
stos
insl
popf
pushw
mov
stos
mov
inc
jo
add
jge
leave
std
and
mov
test
negb
jecxz
mov
dec
ljmp
and
mov
std
mov
jbe
dec
cmpsl
jle
cmp
xor
orb
add
ja
jno
rcll
lret
lea
push
jae
in
push
push
outsl
push
fldenv
mov
out
add
mov
and
into
aad
push
loope
ret
push
jecxz
andb
shr
nopl
or
add
repz
or
into
cwtl
js
rorl
mov
stos
xor
pop
jno
cmpsl
jmp
jge
pop
mov
mov
xlat
mov
fs
cmp
enter
inc
sbb
add
aad
pop
int3
lcall
fsubr
dec
ficomps
lahf
xor
jo
add
fdivrl
xchg
pop
fidivrl
dec
clc
dec
push
aam
xchg
mov
mov
cltd
cmc
jo
xchg
fwait
insl
sbb
jecxz
sahf
cmpsl
sbb
enter
fdiv
jnp
xor
std
and
push
roll
orl
pop
into
negb
jl
repz
int
mov
inc
aaa
jmp
rorb
xchg
xchg
in
in
movl
cld
mov
pop
loop
or
pushf
scas
stc
frstor
gs
pop
clc
je
or
movsl
out
insl
int3
stos
fmul
clc
mov
mov
sbb
rolb
xchg
adc
mov
clc
mov
xlat
mov
mov
xchg
sbb
repnz
pop
dec
xor
inc
fildl
stos
xor
test
mov
call
sub
jo
mov
sarb
mov
aas
pop
in
add
jp
mov
mov
and
movsb
add
mov
sti
insl
inc
je
sti
repz
adc
jmp
jbe
or
call
and
lock
xchg
int3
push
ljmp
imul
movsb
xchg
scas
add
pop
cmp
sbb
mov
pop
or
imul
pop
daa
sti
pop
dec
cmp
adc
push
pop
push
push
dec
push
and
sbb
fst
insl
stos
push
jmp
and
andb
mov
sti
mov
pushf
xor
int3
inc
enter
and
in
test
pop
outsb
adc
ja
adc
mov
add
lret
inc
cmc
fs
xlat
adc
or
data16
mov
adc
cmp
pop
add
mov
sbbb
push
push
add
pop
xlat
shl
jmp
jbe
xor
dec
mov
xor
test
repnz
push
sbb
in
shll
mov
outsl
mov
sbb
idiv
les
mov
mov
jecxz
repz
fwait
cld
shrl
add
ljmp
inc
xlat
push
shlb
inc
pop
cmp
and
jmp
mov
iret
insb
add
push
mov
lea
jmp
es
or
clc
lds
scas
inc
addl
out
cld
xchg
adcl
mov
dec
movsb
lahf
adc
dec
xchg
cli
test
jmp
xor
fcmovu
mov
adc
mov
add
movl
xlat
sbb
sub
cltd
test
in
cmpsl
sbb
test
mov
cld
in
arpl
scas
test
pop
repz
shll
cmp
cmp
outsb
and
sub
pop
sub
dec
leave
movb
sub
data16
mov
arpl
das
subl
pushf
push
cmpsb
jbe
lock
popa
loope
movsb
pop
adcl
cmp
je
xor
testb
mov
clc
aas
pusha
shr
int3
fistl
cmp
push
mov
xchg
pop
sub
push
movl
cmp
or
out
cs
pushf
pop
xchg
out
sub
add
scas
inc
or
leave
push
mov
fwait
push
jns
mov
mov
mov
jne
stos
xor
shll
sbbl
js
cmp
mov
lods
sub
sub
sahf
ljmp
scas
sub
inc
fldt
push
dec
cld
mov
pop
jmp
mov
popa
jb
xchg
mov
add
and
cmpsb
addb
jne
test
add
mov
cmp
test
lds
mov
xor
add
and
mov
xor
fldcw
fwait
andl
mov
leave
pop
mov
xchg
popf
insl
imul
inc
push
clc
xor
stc
ljmp
push
loope
icebp
mov
sarl
push
xchg
cmc
dec
dec
mov
push
out
outsl
in
push
test
andl
mov
jnp
mov
aas
push
or
or
popf
cmpsb
jbe
adc
xchg
das
out
inc
mov
add
inc
insb
dec
ror
xchg
pop
into
out
add
fidivrs
or
enter
mov
in
sbb
push
mov
fmuls
shlb
inc
das
icebp
mov
js
mov
aas
jge
rolb
jmp
push
jb
jecxz
mov
mov
cmp
loopne
cmpb
cwtl
subl
clc
jb
and
aad
test
mov
push
dec
sbb
add
loopne
jg
xchg
inc
iret
clc
stc
ret
jg
sqrtps
pop
lret
mov
mov
push
cld
inc
out
data16
cs
loopne
scas
sbb
inc
jg
mov
aas
push
stos
jmp
cli
gs
inc
data16
idivb
push
arpl
jmp
pop
adc
add
je
lds
fidivrs
dec
jge
push
adc
pusha
es
mov
pushf
in
mov
xchg
jge
xchg
cwtl
mov
fucom
and
out
hlt
adc
aas
mov
mov
lods
shrb
scas
jg
cmc
sbb
sub
sbb
bound
test
pop
mov
enter
xor
je
in
pop
repz
js
fidivrs
orl
sar
pushl
fisttps
mov
sarb
inc
stos
cmp
pop
mov
pop
pop
jae
mov
or
iret
dec
insl
wrmsr
cmc
add
sbb
lea
in
mov
in
lods
fsubl
pop
and
push
sub
fldenv
call
inc
mov
stos
add
enter
adc
mov
sub
sti
adc
clc
stos
xchg
jmp
jmp
mov
ror
loope
out
add
movsb
xchg
fs
push
in
or
subl
or
iret
cltd
mov
mov
pop
and
pop
daa
call
mov
jae
inc
clc
scas
and
sub
fwait
cli
sbbb
mov
inc
sub
xchg
mov
fcmovnbe
mov
iret
sub
inc
cltd
sti
and
sbb
push
jl
add
sarl
sbb
lock
fsubrs
fucomip
cmpsl
or
out
mov
shrl
sbb
ds
std
popf
xor
pop
jb
jmp
outsl
sub
outsb
jg
lcall
mov
es
adc
test
fucom
jnp
mov
mov
fnstenv
sub
stos
mov
and
imul
addr16
scas
push
and
arpl
cltd
mov
insb
mov
push
xchg
sub
inc
mov
in
ret
ds
jo
loopne
mov
lret
lret
std
fisubl
icebp
ret
es
stc
insb
cmp
rcr
xor
pop
xchg
pop
shrb
stc
xchg
pop
xchg
sub
imul
loop
jno
jns
rcll
aaa
push
push
add
ss
cmp
aad
cmp
add
jmp
xor
int
int3
cli
or
sti
or
mov
popa
cs
mov
adc
dec
dec
ss
sub
sbb
mulb
cmp
jmp
or
inc
fisubs
sub
mov
pop
fadds
cwtl
rclb
inc
fiaddl
aam
push
jae
mov
cli
cwtl
sarl
les
fisttps
or
and
jle
iret
and
cld
pop
xchg
adc
xor
es
call
sahf
and
imul
jae
nop
push
mov
push
aaa
dec
icebp
std
and
das
jge
andb
lret
scas
adc
xor
or
ljmp
sbb
fisubs
dec
popl
adc
pop
test
mov
popl
int
jnp
inc
sub
arpl
cmp
shrl
jns
mov
ret
mov
sub
pop
inc
rol
or
daa
fdiv
push
jae
call
mov
das
push
cmp
cmp
jp
cs
jae
shr
adc
mov
mov
mov
fxch
stos
andl
fdecstp
push
jle
cltd
insb
xchg
add
pop
out
and
mov
ja
es
rclb
pop
lods
push
mov
aas
mov
push
push
or
adc
mov
ret
clc
jno
xchg
dec
or
add
daa
mov
in
xchg
sbb
sub
lret
lods
sub
mov
dec
fildll
pop
xchg
inc
add
dec
scas
cwtl
pushf
xor
mov
fisubs
inc
sbbb
xor
or
insb
ss
rcrl
mov
pushl
scas
inc
inc
inc
adc
cltd
lods
sbb
sub
movsl
pop
scas
or
insl
sbb
sbb
lods
in
adc
adc
movsl
in
and
or
sub
cmpsb
imul
cmp
jne
test
lock
lea
push
and
push
movsb
movb
std
rcr
mov
leave
sub
popf
xor
ss
dec
jb
pusha
push
sub
arpl
shrb
inc
or
mov
or
outsb
mov
hlt
adc
jnp
and
inc
insb
xchg
mov
lods
es
push
jae
call
out
add
fimuls
repz
xchg
stos
or
lods
mov
inc
ss
scas
dec
orb
stos
push
mov
mov
ror
into
dec
scas
inc
xchg
repz
out
fstp
adcl
cmp
push
dec
ret
bound
pop
mov
sbb
ret
mov
cwtl
std
dec
xorl
fwait
in
pop
ja
mov
stos
pop
lea
add
xor
push
add
outsb
xor
and
xchg
lcall
lcall
or
or
push
dec
xchg
jmp
xor
or
push
outsl
stc
aad
imul
int3
dec
sbb
out
sub
pop
ret
pushf
jbe
loop
jo
and
push
add
lods
or
pushf
test
stc
jnp
lea
clc
inc
lea
mov
fiadds
pop
lock
ljmp
mov
lahf
daa
pop
mov
imul
xchg
dec
ds
nop
sub
sahf
and
fstl
cmp
inc
mov
pop
sarl
in
jecxz
arpl
insb
in
out
nop
ret
fnstenv
pop
ret
push
js
inc
fimull
bnd
add
mov
and
lret
pop
lret
cmpl
fcoms
push
cld
dec
fldlg2
and
cmp
test
add
and
cmp
loope
cmp
jno
pop
lcall
pop
sbb
movsl
test
inc
jmp
xorl
cmp
dec
movsl
mov
addb
jae
inc
and
sub
mov
push
pop
add
jmp
xor
imul
push
sahf
sbb
cmp
jg
lahf
stc
dec
push
arpl
mov
cmp
movsl
pushl
dec
icebp
aad
hlt
jl
push
aad
mov
bound
or
out
lret
fucomp
sti
outsl
fdivrs
jno
clc
outsl
loope
xorb
and
lahf
ret
insl
mov
stos
cmpsb
mov
nop
jge
adc
pop
mov
push
xchg
shrl
je
and
dec
ja
mov
dec
outsl
jecxz
sbb
fsubrs
push
mov
jnp
aaa
sbb
jne
adc
int3
xchg
sub
add
mov
sub
fcoms
stos
shl
cmp
push
gs
xchg
mov
lea
and
jb
xchg
fwait
add
or
out
rol
sub
inc
ds
sub
inc
mov
cltd
push
aam
sbb
int3
and
add
adc
in
int3
cltd
test
adc
pop
pop
xor
bound
iret
jo
cli
or
xchg
test
jnp
in
jecxz
xchg
cmp
ret
pushf
sbb
jne,pt
insb
xchg
xchg
pop
xchg
movsl
jnp
mov
shrl
pop
cmp
fwait
and
in
fstps
sub
sub
sub
and
sub
mov
inc
sub
stos
mov
sub
inc
shll
sti
push
or
ss
test
mov
jle
push
gs
inc
in
push
inc
xor
hlt
jno
std
cs
add
or
imul
out
cli
cmp
nop
stos
es
repz
outsl
mov
mov
ffree
cltd
test
xchg
inc
add
xor
add
cs
push
and
lret
pop
push
xchg
inc
addr16
push
lahf
call
cmc
push
xor
or
mov
fstpl
sbb
out
lret
push
mov
fwait
xor
cld
xchg
jle
addr16
test
int3
mov
movsb
loopne
bound
hlt
push
inc
loope
and
cmp
and
pop
mov
sbb
test
lea
lods
mov
dec
mov
fsubrs
mov
cld
add
jne
inc
js,pt
cmp
fcmovnbe
add
loop
push
cmpsb
out
push
js
jae
inc
push
pop
xchg
pop
lcall
xor
scas
outsl
fwait
inc
xchg
lahf
sarb
arpl
mov
shlb
mov
ljmp
fidivrl
aam
mov
cltd
jnp
sub
int3
push
inc
mov
sbb
jl
add
int
ds
lcall
push
push
out
out
fs
sub
imul
je
lahf
lods
loope
mov
out
loop
pop
fcompl
sbb
mov
data16
iret
pop
or
mov
xor
push
mov
mov
or
cld
pop
out
jmp
cmc
xor
pop
fcmovbe
insb
jne
mov
mov
in
jns
sbb
dec
lds
sub
je
xchg
loop
cmc
pushf
push
outsl
adc
subl
pop
pop
adc
jle
mov
pop
cmp
pop
jp
int3
cmp
stc
sub
cmp
xor
out
or
cmp
jno
ljmp
jge
pop
popa
dec
push
sbb
int3
push
nop
enter
arpl
mov
std
or
rorl
or
pushf
andl
leave
in
subb
cmp
inc
pop
pop
mov
pusha
stc
incl
jecxz
or
fdiv
inc
push
arpl
mov
sub
mov
ja
add
lcall
and
test
insb
inc
data16
insb
sbb
mov
add
push
adc
loope
in
xchg
jnp
cmc
arpl
add
inc
jecxz
push
cmp
popf
div
jns
or
xlat
lock
ret
cltd
mov
inc
mov
jp
js
cmpsl
insl
push
cwtl
sub
addb
xorl
fwait
pusha
ljmp
jp
lods
in
jo
jbe
sbb
fnstsw
stc
mov
inc
sbb
push
push
inc
add
ja
gs
enter
nop
and
mov
loopne
jnp
adc
mov
jge
pop
add
xor
pusha
aaa
leave
popa
dec
cs
xor
mov
les
insl
aaa
out
js
test
pop
lock
jbe
outsb
add
pop
cmp
mov
test
push
lods
xchg
jmp
int3
test
and
xlat
fwait
pop
hlt
addr16
imul
rcll
cmpl
movswl
subl
xchg
jmp
lret
pop
sbb
andb
aaa
push
subl
add
mov
mov
cmpb
fimuls
sub
push
add
mov
cld
inc
sbb
sub
xchg
imul
cmpsl
lds
jge
inc
sahf
cli
cmp
or
and
adc
loop
mov
jmp
notb
cmp
stos
out
mov
dec
fsubrs
pop
dec
cwtl
fadds
pusha
orl
scas
stos
rcl
add
dec
cltd
shl
mov
cmpl
xor
cmp
lods
sbb
arpl
shrl
or
lea
stos
les
orl
ficompl
and
xor
adc
rorl
inc
repnz
movsl
addb
cmp
ja
ss
xchg
lret
stos
imul
sahf
pushl
aad
shll
test
dec
dec
aad
hlt
lcall
xchg
pusha
pop
jns
cs
insl
mov
bound
in
mov
cli
cmpsb
add
loope
mov
adc
icebp
shll
sbb
adc
push
fldt
outsl
xchg
outsb
div
arpl
aaa
fsubl
xchg
mov
cmp
das
mov
stos
jl
lret
inc
xchg
sub
inc
popf
add
idiv
stos
lret
and
loope
cmp
out
push
mov
test
push
dec
or
adc
jg,pn
popa
adc
push
xor
jnp
ja
xor
push
in
std
push
ja
test
xchg
sbb
xchg
mov
xchg
mov
imul
mov
daa
fs
sahf
mov
push
jo
popa
sbb
mov
mov
js
jg
mov
sbb
aam
out
repnz
ds
test
jmp
dec
mov
jns
insl
jp,pn
lock
ja
jge
test
mov
xlat
dec
inc
cmp
mov
pop
aaa
or
and
dec
leave
xor
stos
push
dec
mov
arpl
test
imul
or
or
xchg
xchg
xchg
fisubrs
mov
ljmpw
add
int
mov
stos
inc
xchg
imul
mov
jp
sub
mov
xchg
jne
sub
sarb
push
mov
idivb
mov
mov
lods
stos
popa
xchg
je
push
mov
pop
push
cmpsb
and
pop
xchg
inc
and
inc
lock
jnp
call
jecxz
and
or
leave
insl
cld
in
ljmp
sub
sub
punpcklwd
and
mov
fcoml
leave
stos
nop
cmp
mov
stc
pushf
inc
xchg
xchg
jmp
mov
or
mov
jecxz
outsb
shr
ljmp
dec
or
xor
clc
hlt
xchg
dec
cmc
bound
sub
int
loopne
mov
imull
inc
push
dec
push
xchg
rol
loop
and
push
mov
fldenv
sbb
jno
loop
movsl
pop
pop
inc
shlb
add
adc
xor
aam
gs
and
and
loope
sti
mov
xor
loope
mov
mov
jns
es
mov
pop
adc
sbb
inc
leave
cmp
leave
stos
test
mov
push
mov
bound
inc
and
or
or
outsl
adc
shrb
idiv
out
jbe
dec
fistl
mov
add
test
sahf
js
das
aad
sarb
out
mov
fnsave
shrl
lods
cwtl
inc
faddp
stc
loopne
add
test
sbb
out
push
mov
inc
inc
decb
sbb
or
shlb
clc
jge
adc
daa
stos
test
inc
mov
clc
mov
mov
subl
ja
call
jp
imul
rclb
mov
iret
sub
inc
xlat
ss
cs
push
xchg
pop
jmp
sub
ds
push
and
mov
dec
push
bnd
fmull
sub
clc
inc
mov
es
aad
sub
fimull
mov
mov
pop
jbe
int3
jno
ds
pop
mul
in
xchg
or
lret
cmpl
movsl
xchg
jge
call
pop
loope
insb
xor
cmp
shrb
mov
xor
sbb
leave
xor
insl
xor
and
mov
mov
lods
mov
push
ss
push
push
sti
push
sbb
sub
lahf
and
fcoml
je
or
in
lods
and
ret
out
xor
lret
jecxz
xor
fcomps
mov
int3
add
add
push
mov
pusha
mov
in
ds
pop
cmp
push
sbb
popf
sbb
outsb
cmpsl
sub
sub
rclb
mov
es
lds
pop
outsb
call
stc
into
pop
sub
jl
dec
cmpsb
sbb
faddl
lcall
jp
pop
test
inc
js
xchg
aas
addr16
xchg
mov
shr
push
xchg
inc
popa
popf
pop
adc
in
mov
ret
outsb
call
stos
sub
inc
xor
jg
mov
pop
jns
in
in
mov
fisubrl
mov
fxch
xor
xor
xor
dec
push
xchg
xor
movsb
sub
push
or
pause
lret
or
xor
jbe
jmp
lcall
in
rorl
movsl
pop
out
sbbl
mov
and
mov
psubd
fsubs
mov
or
add
fisubs
adc
or
test
push
push
sbb
jp
inc
cmp
div
mov
loop
adc
lcall
pop
faddl
push
icebp
jnp
cmpsb
mov
and
repnz
jg
dec
movsw
mov
push
lock
shlb
or
sub
xchg
in
icebp
pop
daa
movsl
fildl
outsl
jno
mov
into
xchg
loop,pt
mov
adc
ja
xchg
outsl
in
pop
dec
xchg
push
js
call
and
aam
xor
arpl
pop
daa
scas
pushf
pop
push
fadds
in
rclb
aas
ret
jo
sub
pop
bnd
andl
scas
ret
scas
fiadds
xchg
mov
mov
add
push
int
add
push
cmp
sub
aaa
adc
or
aad
sahf
jge
imul
mov
mov
loope
in
dec
jmp
jle
pop
ficoms
fwait
jne
jo
lret
fbld
sbb
je
or
icebp
scas
jo
out
fstpt
push
sub
pop
pop
lret
cli
push
cmpsl
sbb
jae
xlat
mov
pop
rol
inc
cmp
mov
xor
mov
jno
xlat
xor
aas
arpl
test
inc
push
and
outsl
jne
popf
std
mov
inc
sbb
or
lea
add
jno
dec
mov
bnd
push
mov
les
sub
sub
lods
mov
outsb
pop
mov
cli
call
jge
jns
cmc
push
lock
out
rcl
inc
or
add
outsl
out
stos
xchg
push
rorl
sbbb
push
cmp
jecxz
aas
movsb
cmpsl
aas
xchg
add
cld
loop
mov
mov
push
stc
or
add
les
out
sbb
int3
sub
in
les
das
cmc
push
scas
xor
cmpsl
outsb
lret
xor
je
cli
test
mov
int3
inc
mov
sub
add
cmp
mov
pop
sbb
sbb
mov
mov
aad
push
jp
cmp
pop
hlt
sbb
out
clc
add
sahf
mov
pop
lret
mov
xchg
jae
fisubl
sbb
push
in
dec
pop
xchg
xchg
xchg
arpl
lea
in
mov
jb
bound
pop
std
mov
push
dec
jle
js
dec
leave
jg
jae
clc
jp
shl
push
outsl
push
out
aad
and
aad
cli
sbb
dec
jge
lcall
insl
cwtl
mov
add
mov
int3
xchg
mov
addr16
inc
xchg
test
dec
sub
xchg
pop
out
mov
mov
push
ror
xchg
dec
dec
xlat
es
xchg
idivl
mov
push
jmp
and
mov
stos
mov
ret
inc
sbb
mov
mov
mov
aam
dec
jbe
aam
pop
push
pop
push
and
push
and
dec
leave
lods
push
inc
and
ds
ljmp
addr16
jmp
out
aam
in
push
pop
add
stos
dec
adc
mov
xchg
shl
cmp
mov
jno
add
clc
in
imul
xchg
loop
gs
mov
and
fisubl
outsb
or
movsb
rcrl
aad
mov
aad
lcall
imul
xchg
sti
mov
sbb
sbb
mov
sbb
pop
mov
sbb
loope
fwait
ja
fnsave
mov
stc
add
cmp
push
inc
inc
push
mov
in
shlb
shlb
xchg
jmp
pop
aas
jae
rolb
jne
insl
pop
and
loopne
mov
andl
jne
push
out
add
push
push
push
cmpb
out
dec
stos
mov
push
shr
lcall
sti
pushf
aaa
scas
idiv
and
mov
sub
inc
subl
cmc
aad
pushf
push
jge
daa
ss
icebp
call
hlt
into
daa
xchg
push
xchg
sub
out
push
cmp
push
xor
loope
mov
sub
std
adc
jle
js
add
inc
and
dec
cmc
mov
rcll
jp
out
out
inc
pop
add
xor
push
xchg
sub
scas
jns
pop
pop
or
jb
mov
push
out
fdivrs
ret
je
ss
jno
aaa
adc
xchg
sti
clc
icebp
add
int3
jmp
jg
fs
pop
idiv
jle
mov
push
push
inc
mov
iret
mov
into
mov
fdivrs
cwtl
pop
mov
loopne
inc
fucomip
daa
dec
lret
jns
out
mov
scas
pop
movsl
fstl
push
in
jp
stos
push
loope
and
jmp
push
mov
push
clc
dec
pop
bound
movsb
fstps
fisubrs
jge
aaa
test
ret
mov
or
insb
and
inc
lahf
shlb
shll
jo
int
cli
mov
pop
mov
out
outsl
out
testl
popw
rorb
jno
lahf
cmc
push
inc
aad
mov
dec
xor
sbb
push
cmp
shrl
and
lea
sub
rcrb
cli
test
jne
out
cmovs
push
or
int
arpl
xor
jns
sbb
sub
sbb
in
sbb
dec
popa
je
cwtl
cmpsl
sarl
movsb
mov
jo
xchg
push
cli
mov
lcall
dec
cmpl
das
sub
and
fwait
cwtl
xor
aad
fcmovb
test
fbstp
aad
ja
insb
aaa
dec
cwtl
into
in
push
lcall
and
dec
fs
mov
mov
aam
mov
out
lds
ss
add
xchg
add
outsb
push
mov
in
mov
pop
stos
sti
push
bound
out
imul
cmc
out
mov
lock
push
lods
and
sbb
push
jb
xor
iret
jnp
ret
adc
and
pop
push
inc
loop
inc
scas
es
mov
test
stos
jle
xchg
std
jmp
sahf
sub
roll
push
imulb
ja
add
push
mov
testb
int
js
arpl
fnstcw
mov
lods
mov
pop
sti
add
push
sub
xchg
cmp
loop
push
fsubl
add
dec
insl
es
popa
dec
push
cmp
dec
adc
enter
fdivl
cmp
push
stc
shrl
aam
or
int
pop
dec
int3
pop
and
cmc
aam
or
xlat
mov
aas
movsb
add
mov
ss
lods
in
nop
mov
or
add
ficompl
fs
mov
in
inc
dec
sti
jg
sahf
mov
pop
add
push
inc
or
aam
mov
es
ret
mov
test
pop
cmp
scas
adc
in
arpl
push
jge
lea
jns
test
add
mov
add
mov
movl
outsb
sahf
shlb
xchg
test
adc
test
pop
mov
mov
or
repnz
xchg
mov
shl
cmc
loope
and
lahf
jno
or
jae
xchg
fisubs
dec
test
movsl
xchg
test
lret
xor
inc
test
xchg
cmp
push
not
cmp
arpl
out
xchg
stos
loop
jb
imul
movsl
sub
or
daa
popa
pop
dec
fmul
mull
xchg
mov
das
adc
xor
mov
xor
rcrb
in
lret
mov
lret
cmpb
nop
mov
adc
xor
shll
push
or
data16
inc
push
and
mov
jge
push
testl
xor
fsts
inc
mov
vrsqrtps
xchg
arpl
clc
jl
bound
mov
and
cld
fadds
pop
dec
mov
lret
mov
lock
pop
dec
cmc
cltd
mov
and
dec
sarl
cmpsb
rorb
repnz
lods
dec
scas
insb
mov
push
and
xchg
sbb
je
adc
adc
sub
sbb
clc
movsb
pop
adc
or
movsb
das
push
xor
or
stc
subb
lea
aam
or
sarb
or
outsl
add
bound
or
sbb
push
push
mov
lahf
in
fdivrl
push
jbe
and
lock
cmpsl
xchg
mov
addl
push
std
and
subl
int
push
out
cs
arpl
xor
inc
adc
push
add
inc
jg
xor
add
outsl
mov
out
sbb
lahf
sub
enter
mov
outsb
fdivrs
rclb
scas
out
fdivr
enter
fnsave
lea
sar
stos
mov
pop
inc
push
flds
insb
lea
mov
mov
shll
rcll
es
jge
lods
das
xlat
lret
push
in
cs
test
push
push
cld
sarb
bound
out
ds
sarb
mov
add
cmpsl
flds
sbb
ja
add
mov
and
rcl
stos
repnz
mov
in
mov
xchg
dec
addl
rorl
bound
aas
fld
push
push
out
adc
jg
jmp
inc
iret
xchg
test
xchg
in
xchg
pop
and
add
push
xchg
xlat
mov
pop
jbe
aad
aad
dec
sub
stos
jno
inc
or
or
out
inc
ret
stos
lahf
adc
int
call
subb
pop
rclb
lock
mov
cli
and
pop
jecxz
movsb
cmp
clc
mov
bound
and
lret
pop
popf
pop
push
add
adc
sbb
inc
mov
cmpsb
sarb
dec
jp
push
add
sub
pop
jg
js
mov
mov
loop
mov
cmc
sbb
or
or
sub
add
mov
pop
push
aad
ja
rolb
inc
add
pop
push
pop
mov
std
int3
lea
push
mov
std
mov
ss
mov
xor
pop
mov
je
mov
mov
push
jmp
movsl
adc
jg
aad
shrl
and
fcoml
repnz
dec
inc
sbb
adc
add
loopne
mov
lock
and
cmp
sbb
iret
sub
test
dec
xchg
or
sbb
mov
in
pop
dec
xchg
fcmovnb
mov
pop
xchg
fs
mov
ret
into
in
arpl
outsb
cld
rolb
cmp
sbb
mov
sbb
scas
mov
rcl
cmp
cmp
dec
dec
xor
add
sbb
adc
inc
lret
ss
stos
ss
push
xor
je
sbb
insb
fcoml
es
add
je
aad
scas
mov
mov
adc
push
pop
std
clc
xor
jge
mov
and
xor
stc
es
enter
cwtl
enter
mov
mov
dec
jne
push
xlat
daa
sbb
or
jnp
pushf
jb
sar
sub
icebp
movsb
mov
fisubrl
or
push
pop
cltd
sub
xchg
xor
je
jno
fcoml
dec
dec
xor
test
sbbl
sbb
loope
das
sub
stc
lds
sub
mov
in
subb
ja
insl
jns
outsl
fildll
clc
xchg
sub
push
xchg
pop
enter
es
hlt
push
push
fdiv
adc
clc
mov
push
add
bound
dec
inc
add
adc
mov
out
mov
std
pop
gs
das
push
pop
rorb
dec
push
and
xor
in
dec
dec
imul
outsb
stos
push
js
arpl
sub
andb
jge
rcrl
inc
dec
nop
add
lcall
jo
mov
dec
or
scas
sub
rclb
cld
inc
out
inc
xor
mov
loope
rol
cmp
xor
mov
cltd
icebp
mov
adc
aad
push
mov
dec
sub
ja
test
xor
jno
jo
incb
push
roll
jb
aam
sahf
pop
mov
jl
push
cmp
sbbl
xor
sub
sbb
sub
inc
add
or
xor
in
add
cmpsb
lahf
stos
sbb
add
out
sbb
movsl
dec
loope,pn
ljmp
stc
cmp
inc
shll
negl
mov
mov
mov
imul
scas
xchg
lcall
sti
mov
in
rcl
and
push
imul
and
inc
push
imul
push
push
jge
xlat
cmp
jecxz
out
mov
test
jbe
aaa
setae
ficoml
jg
sbb
popl
int3
push
add
pop
cmp
add
les
jmp
flds
jecxz
or
popf
cmp
sbb
mov
mov
ss
out
insb
mov
stos
stos
lods
sahf
dec
ss
rorb
xchg
cwtl
push
movsl
les
pop
sbb
jle
sub
push
push
sub
jg
mov
jge
xor
aaa
pop
lock
stos
scas
xor
xchg
lret
dec
in
jne
sub
aam
test
pusha
jbe
sub
cltd
fisttps
jmp
cli
mov
jnp
cmp
fs
xor
leave
cld
sub
rorl
insb
arpl
lock
stc
or
or
aam
lods
or
cld
enter
and
pop
cld
ja
js
repnz
xchg
lcall
je
xor
mov
imul
mov
insl
mov
sub
adc
rcrb
pop
test
dec
lret
jno
lret
push
roll
add
xor
jnp
xor
shr
inc
or
rorl
outsb
xor
imull
hlt
andl
call
stc
pop
cmp
es
xor
mov
and
sbb
cmc
fsubp
sbb
xor
jle
pop
sbb
testb
jge
cmp
je
movsb
add
dec
pop
imul
xlat
sub
sub
xchg
inc
das
dec
mov
and
int3
ljmp
fwait
xchg
and
push
rclb
sbb
dec
jo
xchg
xchg
push
dec
inc
or
sub
mov
fucomi
out
lcall
jne
push
mov
jecxz
inc
mov
cld
jae
sub
ror
aas
nop
adc
mov
xchg
sbb
icebp
test
push
hlt
dec
cmpsb
jg
daa
ds
clc
cmp
cmpsl
cmp
fimull
mov
push
stos
enter
adc
ret
mov
sub
aaa
sbb
in
mov
mov
and
mov
pop
out
add
adc
xchg
pop
pusha
inc
je
rorb
dec
mov
int3
cmp
sbb
push
mov
test
pop
or
sub
pop
or
es
les
leave
pop
mov
add
test
ljmp
add
pop
rclb
pop
pop
fimuls
addb
dec
xlat
cwtl
iret
jo
movsb
aas
sub
xchg
lcall
cmp
fwait
shll
add
sub
or
jnp
aad
cmp
pop
jge
adc
push
push
out
movsb
adc
bound
loop
push
inc
jmp
push
fucom
movsb
sbb
pushl
ja
imul
and
or
and
mov
mov
aad
push
pop
xchg
dec
fnstenv
arpl
clc
shrl
sbb
inc
and
stos
int
dec
ret
ds
mov
lods
mov
or
arpl
inc
inc
mov
fwait
mov
insl
outsb
stc
shlb
xchg
fsubrp
out
cmp
sahf
jnp
or
inc
adc
pop
mov
sti
pushf
loopne
push
shll
cltd
cmpsb
mov
nop
pop
sarb
xchg
std
jmp
push
adc
pop
adc
rclb
push
in
sub
dec
stc
xlat
add
in
clc
and
ljmp
cmpsb
mov
cmp
dec
daa
ja
xor
movl
outsl
mov
pusha
out
cld
std
mov
xchg
mov
shrl
mov
adc
add
cld
fcompl
pop
adcl
nop
xchg
lds
shll
fs
pop
pop
js
push
rcl
pushf
push
or
pushf
mov
sbb
sub
push
dec
cmp
inc
cmp
sbb
sahf
sub
mul
sti
insl
mov
mov
mov
gs
mov
les
mov
sahf
daa
mov
negl
inc
fcmovnu
mov
lcall
jnp
jg
jno
movsb
pop
iret
pop
sub
or
jae
scas
mov
sti
xchg
call
lret
ret
cmp
lea
lcall
and
sti
mov
cmp
out
sbb
inc
mov
add
mov
xchg
add
test
dec
xchg
fdivp
jmp
push
popf
lcall
xor
loopne
imul
xlat
and
ficompl
stc
popa
movb
imul
mov
sub
add
cltd
xchg
add
or
xchg
icebp
and
mov
cmp
in
add
adc
mov
add
mov
aam
add
or
jb
hlt
out
mov
ja
cmp
js
inc
les
pop
adc
daa
add
cld
push
js
ret
xchg
repz
xor
shlb
adc
mov
nop
mov
adc
in
jmp
lret
inc
sbb
pop
mov
cmp
scas
bound
stos
xchg
and
cmpsb
cmpsb
out
fiaddl
and
push
jmp
iret
rcll
push
mov
sub
pop
jl
test
mov
cmp
into
cmp
push
lahf
sbb
shlb
inc
insb
sbb
lret
fsts
jl
and
adc
test
pop
lods
mov
popa
hlt
fists
aas
ja
push
out
mov
adc
sbb
lea
cmp
cli
adc
mov
cmp
movsb
call
xor
dec
pop
outsl
push
dec
outsb
outsl
jg
adc
mov
or
lea
gs
inc
inc
push
cld
mov
mov
aad
mov
out
lcall
cmpsb
inc
jg
push
xor
daa
jns
cwtl
ljmp
xchg
xor
mov
push
sbb
data16
add
in
js
cmc
jnp
mov
add
ljmp
andb
and
cmc
loop
movsb
iret
into
js
inc
and
fsubs
mov
sub
stos
sub
sub
push
aas
or
insl
dec
lret
stos
sub
cld
mov
cmovp
pop
fs
mov
jbe
jae
testl
pop
icebp
in
or
addr16
jl
stos
jge
lea
enter
mov
popf
jae
pusha
cmpsb
scas
push
aaa
jle
push
xor
and
jecxz
xchg
push
mov
shll
xchg
mov
mov
xchg
cwtl
out
add
mov
mov
int3
pop
mov
sbb
test
pusha
in
nop
lock
jb
ja
mov
fcomp
jp
les
pop
aam
push
stos
loope
cwtl
loop
lock
je
daa
xor
lahf
mulb
pop
or
xorb
and
and
data16
push
test
in
idivl
test
push
or
les
rclb
test
int
adc
inc
cs
dec
cwtl
jns
fcoms
outsl
mov
frstor
lcall
mov
pop
ja
nop
aad
mov
loopne
stos
jae
mov
insb
mov
adc
lods
adc
js
and
push
js
adc
fcmove
lret
repnz
imul
jo
inc
ret
xchg
xchg
fstpl
rcrb
insl
bnd
xor
punpcklwd
xor
pushf
hlt
mov
push
or
xor
xor
movsb
cmpl
addr16
jbe
xchg
push
adc
int
clc
jge
ljmp
je
mov
inc
pop
jl
cmc
xchg
jne
mov
dec
ss
insb
std
and
inc
adcb
jp
mov
jno
fs
xchg
jnp
push
stos
in
push
jo
mov
in
pop
stos
sub
das
cmp
or
int3
mov
xchg
jbe
cld
cmp
dec
vpmulhw
or
test
push
mov
nop
cwtl
jge
aas
cmp
lea
sub
outsb
inc
stos
sti
std
lret
adc
push
mov
sub
xchg
pop
sub
jne
lcall
mov
or
push
clc
sbb
pop
call
arpl
test
mov
out
neg
cmc
xchg
mov
repz
mov
inc
dec
nop
jnp
push
fsubs
cmp
xor
in
sbb
sahf
ret
mov
mov
stos
inc
rcll
js
stos
add
nop
bound
dec
adc
int
icebp
dec
pop
push
mov
movsl
aam
add
jo
or
cmp
out
fs
std
adc
rcrl
push
add
movsl
pop
scas
sti
gs
jae
xchg
push
pushf
adc
xchg
pusha
int3
lea
sbb
add
dec
stos
mov
je
fdivl
cmc
push
push
cli
mov
and
xor
or
sti
adc
insb
adc
test
cmp
in
xchg
stos
ljmp
cmp
xchg
mov
inc
sub
mov
cld
pushf
xor
mov
ficoms
in
xchg
mov
push
std
enter
fcmovnb
jnp
test
andl
add
mov
jecxz
fldcw
jnp
frstor
call
sbb
push
push
iret
out
movsl
and
mov
xchg
push
adc
xchg
and
fdiv
or
mov
sub
nop
loopne
pop
pop
dec
sahf
sbb
push
jns
mov
push
dec
mov
rclb
pop
inc
adc
pop
jp
neg
arpl
mov
inc
adc
in
add
cs
aas
mov
push
pop
hlt
push
mov
scas
outsb
mov
je
fucomp
inc
mov
pop
pushf
jle
sbb
pop
dec
stc
test
loopne
in
arpl
repnz
push
xchg
add
sahf
out
test
arpl
call
cltd
rcll
int
cltd
stos
inc
pop
dec
pop
dec
shl
push
insl
mov
jl
and
or
or
into
arpl
xadd
mov
fs
das
mov
daa
pop
inc
push
ja
adc
stos
pop
fldt
popf
sbb
mov
imul
and
add
out
sub
push
leave
mov
addl
mov
imul
push
aad
xchg
xchg
xor
outsl
jno
push
rcl
movsb
je
dec
dec
lods
add
imul
aad
arpl
jg
mov
lahf
mov
jmp
sbb
sbb
or
push
inc
dec
push
xor
imul
sub
out
mov
loope
sahf
push
jp
cltd
aaa
mov
sbb
or
rolb
int3
sbbb
std
cs
adc
mov
xchg
outsb
add
in
loopne
cmp
sarb
aad
mov
mov
push
popf
and
test
outsl
js
sbb
mov
call
out
das
mov
push
mov
fldt
add
add
sub
jb
int3
dec
sub
outsb
rorl
xchg
pop
mov
jb
jmp
lcall
out
xchg
mov
mov
mov
int
sbb
iret
push
out
mov
and
or
pop
addl
in
cwtl
push
inc
inc
mov
nop
sti
cs
jno
pop
fs
or
outsb
jg
push
inc
loopne
int3
dec
roll
sub
pop
inc
add
mov
sbb
dec
cmc
inc
negl
fisttpll
or
outsb
inc
jp
push
notl
add
clc
jbe
cmpsl
inc
push
sub
jmp
inc
scas
adc
lcall
cwtl
dec
adc
jecxz
mov
loop
mov
mov
cmp
pop
sbb
sti
pop
pop
and
jecxz
add
fsts
fisubl
mov
loope
push
xor
adc
testl
cmp
out
adc
xchg
lods
jns
ret
mov
xchg
jae
rol
pop
or
pushl
mov
outsb
push
cmp
add
jo
jne
add
sarb
push
push
sbb
and
jecxz
jmp
loope
pop
pusha
popw
mov
lods
jmp
lea
adc
xchg
iret
add
mov
lret
add
inc
push
cld
in
pop
lods
insb
pop
and
inc
not
repnz
push
daa
push
mov
push
data16
pop
push
fs
add
lods
das
pop
movsl
shlb
nop
roll
test
cmpsl
sub
fsts
movb
nop
adc
push
inc
push
xor
push
aam
fisttps
dec
mov
xchg
popa
icebp
push
and
or
nop/reserved
pop
cmp
idivb
fidivrs
scas
pop
mov
xor
hlt
jp
rcrb
mov
mov
pop
pop
jmp
inc
jo
mov
sahf
mov
fldenv
ljmp
subb
jne
rorb
mov
jl
popa
sub
push
mov
pushf
stos
test
fdivs
outsb
sbbl
sub
push
sahf
dec
lret
mov
add
repnz
adc
dec
icebp
rorb
and
in
add
nop
aad
jecxz
mov
mov
dec
cld
dec
test
mov
fstpl
bound
adc
fisubrl
inc
add
push
pop
jnp
cmpsb
push
push
jg
inc
ret
mov
or
lahf
lock
sub
fs
loopne
mov
adc
pusha
sbb
and
mov
sahf
push
cli
push
ficoms
adcl
sub
inc
cmp
push
popf
mov
inc
faddl
push
dec
add
subl
mov
push
dec
mov
hlt
lock
sti
fwait
xlat
bound
add
int
test
mov
adc
loop
jae
add
lahf
xor
mov
test
scas
jg
shrl
dec
inc
aam
call
testb
fimull
cmp
xchg
sub
pop
push
sub
ss
dec
setp
cltd
shll
lcall
push
cmp
out
jne
mov
andl
lret
jl
push
jo
imul
loope
mov
cmc
cld
adc
in
pop
push
sub
das
mov
popf
jmp
mov
out
inc
xchg
push
xchg
loop
sbb
dec
sub
adc
mov
enter
jecxz
mov
inc
adc
mov
lcall
jmp
int
daa
mov
cmpsl
mulb
repz
idivl
push
stc
out
cmp
or
jb
mov
pusha
bound
sarl
mov
or
jecxz
pop
pop
jae
mov
mov
gs
aad
jns
aad
scas
push
insb
push
cmpsl
or
mov
or
insl
fmuls
fnsave
push
and
pop
loope,pt
stos
dec
jno
popf
insl
lcall
mov
mov
pop
cmp
icebp
mov
pop
popf
mov
loope
lock
or
mov
leave
mov
jnp
or
xchg
rcrb
push
pop
mov
and
xchg
dec
cmp
cmpsb
lcall
add
je
repz
cmpsb
das
aaa
ss
and
pop
sub
lock
in
test
aas
imul
gs
fisttpl
pop
xchg
sub
pop
pop
lcall
popf
jg
inc
pushf
mov
test
loope
adc
sub
mov
sub
and
pop
frstor
pop
cltd
push
data16
mov
inc
add
fdivl
xchg
mov
movsb
cltd
pushf
inc
inc
mov
and
add
dec
les
je
mov
jae
xor
insb
jmp
test
inc
ja
lret
enter
loopne
bound
or
jg
jmp
aas
dec
fiaddl
rorb
and
mov
data16
dec
add
loope
sbb
push
js
bound
jl
mov
or
aas
mov
xchg
lret
mov
out
push
xchg
lds
mov
push
outsl
and
sub
mov
in
push
jnp
test
ret
jbe
mov
sbb
pop
dec
into
jg
shll
add
loop
cwtl
add
xor
xchg
dec
pop
test
dec
addr16
cmp
jp
sbb
inc
dec
and
fidivs
fcmovnbe
adc
ds
add
addl
ret
fwait
inc
xorl
push
sub
add
inc
push
push
aad
adc
sbb
mov
xchg
jns
repnz
mov
add
xchg
dec
push
mov
sbb
jbe
inc
pop
push
mov
imul
mov
cmpb
iret
or
scas
daa
cmp
jns
in
mov
cmp
cs
cli
cmc
fisubrl
push
wbinvd
lods
jp
stc
inc
shrl
mov
dec
xor
mov
outsl
jl
and
fs
and
clc
lret
jecxz
arpl
popa
mov
mov
xchg
adcb
mov
ljmp
lret
call
inc
adc
xchg
outsb
mov
inc
ret
pop
sub
mov
pushf
int
pop
mov
mov
loope
in
mov
push
popa
js
push
fs
cmp
pop
xor
les
jecxz
pusha
mov
gs
cmp
sti
repz
popa
add
sbb
incl
adc
dec
mov
inc
bound
mov
inc
mov
les
pop
hlt
or
stos
cmpsb
gs
push
dec
jecxz
std
sbb
scas
pop
iret
add
mov
sub
push
roll
push
lods
test
pop
bound
inc
mov
inc
jae
sti
fnstsw
mov
push
cmpb
mov
into
dec
pusha
jmp
jo
lods
cmp
mov
mov
mov
pusha
into
dec
incl
mov
insl
or
out
push
xchg
mov
aam
mov
dec
cs
or
stos
mul
pop
jno
test
pop
mov
gs
sahf
dec
sbb
inc
addb
adc
or
sbb
les
lcall
lods
xchg
jnp
adc
loop
sahf
mov
xchg
add
inc
out
mov
jne
rcrl
and
push
adc
sbb
mov
pushf
lret
rcrl
repnz
push
lret
push
ret
cli
push
push
bound
sbb
decl
in
mov
arpl
ficompl
test
xlat
out
and
js
ds
in
lods
int
mov
lcall
add
push
lock
xor
cli
cs
xor
testl
jbe
pop
rorl
push
or
push
cwtl
xor
stc
lret
rcrl
push
fdivrp
das
and
std
fdivr
xchg
pushf
inc
xchg
data16
lds
jno
mov
addr16
and
dec
repz
lahf
cmpsl
pop
ss
cmp
jge,pn
push
ljmp
push
push
je
jle
push
inc
or
and
adc
add
jb,pn
aam
push
addr16
repz
mov
xchg
dec
hlt
shrl
sub
fsubrl
shrl
pushf
sub
push
repnz
gs
dec
ret
ja
mov
scas
mov
add
sub
sub
in
pop
pop
xchg
mov
jecxz
xchg
mov
lea
lret
shlb
je
hlt
movsb
push
dec
cmp
notl
ja
xorl
dec
out
jmp
push
adc
pop
adc
insl
pushf
add
rclb
sub
pop
cmpsb
fwait
test
scas
xchg
mov
dec
cmovbe
push
cmp
in
imul
or
push
mov
lods
push
or
mov
mov
xchg
push
inc
js
aad
lea
and
fnstsw
cmp
cmp
sbb
std
jmp
mov
sbb
sbb
je
push
jle
xchg
movsb
cs
lahf
clc
imul
jae
shl
mov
adc
outsl
aad
mov
xor
aas
lods
int
ret
fld
arpl
dec
mov
dec
mov
fs
notb
lret
jae
xor
repz
jg
cltd
cmpsl
scas
sbb
nop
cmp
adc
popa
cs
jge
sub
pop
scas
cltd
mov
add
mov
jo
jmp
sbb
jge
cmc
outsb
enter
ret
sahf
leave
adc
cmp
and
aaa
xchg
sbb
add
adc
mov
scas
mov
ror
jb
cmpsb
mov
or
scas
rclb
cmp
and
sub
push
dec
clc
ss
es
xor
out
pop
arpl
jne
xchg
movsl
xor
popa
push
inc
fucomp
dec
or
sub
lock
adc
mov
xchg
mov
sbb
sbb
sbb
jae
mov
inc
cmp
incb
inc
or
and
xchg
stos
xor
int3
push
dec
ds
cmpsl
ljmp
inc
sub
in
cwtl
jb
pop
and
mov
mov
mov
mov
aad
xor
int3
ret
push
data16
xor
mov
mov
push
xor
pop
cmc
stos
adc
mov
or
xchg
xchg
imul
mov
jo
popf
and
in
stos
cmpsl
xchg
aaa
xchg
ret
lock
subb
lds
repnz
clc
shll
pop
add
dec
and
push
fimull
mov
add
lahf
jg
push
and
add
fcoml
adc
sub
or
cmp
dec
pop
mov
in
pop
inc
jbe
xor
add
dec
mov
and
imul
pop
scas
in
into
inc
cltd
sahf
mov
ja
test
movsb
dec
mov
mull
out
mov
jno
xor
or
cmp
mov
sub
xchg
adc
mov
adc
stc
imul
mov
jmp
rcrl
push
jbe
xchg
pushf
cmp
mov
ficoms
inc
xor
int3
dec
cmp
mov
addr16
dec
outsl
mov
cmc
out
mov
add
sarl
sarb
cs
cmc
clc
daa
fs
inc
shr
dec
aas
insb
push
pop
sub
jge
and
cmp
es
xor
movzbl
icebp
clc
scas
xorl
dec
pop
inc
jg
pop
test
fiaddl
add
insl
xor
sbb
sub
adc
imul
lea
jmp
lcall
nop
lcall
pop
push
sbb
pop
loope
sbb
lcall
cmpsl
dec
jle
adcb
jl
std
orl
pop
jne
sbbl
fnstcw
stos
xor
lods
dec
xchg
jo
loope
pop
aaa
mov
scas
fnstcw
cli
mov
roll
jl
adc
push
mov
addr16
inc
div
mov
cmp
jmp
cwtl
add
rclb
push
xchg
jne
insl
mov
iret
pop
jb
lahf
xchg
xor
jb
ret
sbb
or
xchg
mov
leave
repnz
scas
push
test
mov
fwait
js
imul
sbb
add
hlt
shr
aam
bswap
adc
add
popa
add
xchg
je
inc
sbbb
push
add
sti
ret
int
sub
gs
pop
je
out
push
sub
and
sti
out
aam
aam
sbb
leave
rol
sbb
cld
in
std
sub
or
divb
inc
lds
jp
bound
sbb
ds
and
leave
jl
mov
jae
loope
test
mov
pop
and
cmc
cli
fnstenv
and
lret
xchg
imul
aaa
andb
enter
adc
jle
fisubs
inc
and
jo
loope
in
adc
sahf
in
push
push
and
push
jno
out
cmp
sbb
mov
int3
pop
inc
or
insb
cli
daa
xor
jmp
cld
std
movsl
ljmp
movsb
dec
iret
ret
int3
pop
adc
call
jmp
test
dec
jne
xor
mov
xor
sub
std
scas
mov
dec
xor
inc
sti
fdivrp
dec
sbb
bound
fbld
pop
mulb
push
sub
fadd
cmp
pop
pop
mov
and
mov
mov
dec
les
daa
int
movsl
xchg
xlat
movsb
je
adc
add
repz
fcoml
add
call
mov
gs
sarb
xchg
adc
jbe
in
cmp
xchg
in
hlt
xchg
jp
mov
rcrb
jnp
or
mov
mov
movsl
cmp
fdivrl
dec
roll
xchg
mov
jmp
dec
jl
lods
icebp
mov
sar
adc
fdivl
nop
scas
test
lea
dec
mov
inc
mov
shlb
outsl
jg
aad
push
sbb
sbb
add
add
push
jge
cs
test
out
jl
pushf
addr16
adc
jnp
xchg
out
or
dec
xor
hlt
js
sbb
js
les
test
out
in
movsl
mov
push
call
sub
les
cmp
lea
pushf
jle
xchg
data16
jle
dec
mov
adc
aad
pop
inc
notb
and
add
fsubrl
repz
mov
cli
push
pop
fldl
mov
cmp
mov
dec
mov
and
mov
mov
mov
or
in
pop
test
and
aad
xchg
clc
or
hlt
cli
adc
cmpsb
lret
call
idivb
negl
xchg
pop
mov
rorl
push
aas
mov
aam
xchg
in
lahf
aas
mov
lock
dec
adc
inc
cs
mov
jae
sub
out
cmp
fwait
mov
lret
xchg
inc
or
push
js
insb
pop
and
mov
lea
pop
inc
scas
sub
mov
jmp
push
mov
xlat
lahf
xchg
test
fwait
and
push
outsl
xchg
adc
mov
fiadds
adc
test
pop
adc
xorl
mov
cli
mov
xor
ret
xor
clc
xorb
pushf
mov
jbe
stos
cmp
icebp
outsl
out
or
push
adc
inc
je
xor
les
call
adc
scas
and
add
mov
lcall
pop
xor
mov
std
into
scas
pushf
cmp
xchg
xchg
jge
adc
arpl
xor
mov
adc
scas
and
cmpsb
sbb
adc
pop
mov
push
mov
mov
inc
dec
xchg
ret
mov
lret
stc
je
sbb
push
repz
outsb
xchg
inc
sub
mov
cmp
sbb
stos
ss
data16
stc
jp
xchg
jecxz
inc
ret
adc
int3
ljmp
add
add
jno
add
mov
dec
icebp
into
popf
test
test
sti
in
stos
popa
jg
mov
and
pop
pop
ficoml
shr
mov
lds
stos
or
fildl
and
adc
add
jo
jno
out
popf
cmc
jmp
jge
popf
cs
and
mov
jmp
mov
fucomi
je
jp
sub
pop
leave
adc
imul
xchg
dec
test
xor
sbb
push
ja
js
dec
sahf
ss
add
inc
push
in
jnp
leave
subl
pusha
aam
ret
xchg
fldenv
call
add
and
push
movsl
and
pop
loopne
add
lods
jo
out
jbe
adc
xor
test
cld
pop
hlt
mov
and
adc
lea
popw
icebp
les
mov
jge
or
inc
dec
and
ss
jno
jg
push
insb
inc
daa
dec
add
das
pushf
mov
push
add
xchg
shll
jmp
add
mov
mov
dec
xor
out
pop
cld
lahf
ja
rolw
sbb
push
icebp
inc
bound
mov
xchg
repz
xchg
push
xchg
ds
push
push
data16
jbe
adc
cmp
xor
xchg
pop
cmpsb
mov
sti
inc
and
out
jns
push
jns
int
out
fisubs
vcvtdq2ps
adc
mov
mov
mov
movsl
int
xor
add
cmp
ret
xchg
fidivs
in
sub
repz
dec
pushf
fdivs
out
rcrl
cwtl
out
imul
lods
lcall
clc
scas
addr16
repnz
add
xchg
popf
addr16
mov
xchg
fbld
add
inc
jl
cmp
mov
dec
in
xchg
cwtl
cmpsl
int
sbb
sbb
mov
cmpsl
repz
mov
pop
sbb
jmp
scas
and
daa
in
in
pop
pop
inc
lret
lea
stos
rclb
loope
inc
orl
int3
adc
notl
in
mov
outsb
lahf
scas
and
xchg
cmc
aad
pushf
test
out
xchg
inc
sub
mul
es
dec
inc
push
rcll
js
pop
add
dec
adc
movsb
popf
jnp
call
xlat
xor
cmc
nop
loopne
ljmp
mov
testb
adc
cmpsb
mov
push
mov
nop
out
sbb
xchg
ret
adc
mov
lret
fwait
icebp
imul
test
xchg
in
jns
and
lahf
cld
cli
dec
idivl
add
js
mov
adc
jbe
cwtl
add
lods
mov
cld
shlb
mov
pop
loop
adc
sti
fdivr
mov
jge
dec
repnz
lods
xbegin
and
nop
push
hlt
and
popa
xchg
mov
cmp
pop
lahf
loopne
dec
ret
adc
lret
shlb
icebp
jmp
aas
pop
jbe
popf
into
rorl
clc
std
and
mov
ret
pop
mov
pusha
inc
inc
sbb
paddusw
xchg
and
push
inc
nop
jmp
cmp
mov
cwtl
insl
dec
inc
stc
sarl
jne
data16
sbb
mov
mov
mov
or
imul
xchg
push
mov
dec
cs
fisubs
test
adc
dec
insl
nop
cli
push
xor
cltd
lods
clc
mov
js
pop
js
inc
stc
jbe
das
adc
flds
or
xchg
dec
leave
pop
push
mov
adc
pop
ljmp
jle
sub
adc
mov
mov
inc
lahf
imul
jns
mov
fidivrl
and
push
in
inc
pop
popf
out
push
jp
xchg
jnp
out
sub
mov
jno
push
sbb
push
rol
push
add
ret
cmpsb
push
leave
dec
in
and
xchg
std
cwtl
sbb
xorb
ss
push
pop
movsl
jno
and
xor
adc
ret
add
fnsetpm(287
cmp
add
in
outsl
cmp
mov
pop
test
or
lods
mov
out
sbb
repnz
dec
adc
lea
mov
xor
insl
addl
pushf
incl
jbe
ds
cli
into
and
rorl
aam
xchg
in
xchg
jp
jg
add
add
mov
mov
inc
cmpsl
test
inc
sbb
sub
xchg
xchg
xchg
inc
cli
mov
adc
dec
dec
xchg
xor
or
push
and
dec
xchg
cmp
pop
fmuls
lret
adc
mov
xor
sub
cmp
fidivrl
fisubl
sub
mov
inc
out
or
xor
addr16
mov
mov
sub
jae
jg
and
fldl
imul
scas
inc
adc
enter
subl
pop
adc
jnp
les
jns
ret
mov
push
mov
movsl
aam
jae
inc
out
mov
cltd
jne
xor
adc
jecxz
aad
xchg
adc
das
pop
mov
out
xchg
fdivr
adc
adc
sub
mov
jo
adc
xor
and
mov
pusha
nop
pop
jle
and
push
pusha
mov
push
das
jo
add
jns
mov
rorb
aaa
dec
gs
xchg
nop
inc
push
dec
arpl
sub
or
and
or
call
adc
sub
add
loop
xor
icebp
mov
ss
das
adc
xchg
add
jmp
stos
or
push
jo
and
ja
in
lcall
jb
repnz
aaa
aam
adc
or
out
cmp
push
cmpsl
das
xor
rclb
jnp
je
fisubrs
fmull
sbb
mov
sahf
adc
imul
mov
adc
out
loopne
sub
pop
bound
push
jae
sbb
or
lret
pop
or
pop
jo
cmpsl
xor
xor
mov
ss
imul
pushf
push
mov
xchg
and
je,pn
mov
push
lahf
dec
adc
das
push
cmp
push
ror
test
stos
fdivr
and
mov
gs
pop
fnstenv
out
stos
and
mov
mov
xorb
lods
out
push
lahf
inc
xchg
push
or
mov
iret
push
mov
jno
dec
gs
pop
ljmp
cmp
stos
insb
and
or
mov
cld
push
sub
adc
jb
rcll
jmp
xor
addl
pusha
and
add
add
pop
cmc
cmp
out
clc
into
sbb
sbb
fdivp
addl
adc
push
jae
clc
mov
push
lahf
jbe
cmp
ja
or
lds
imul
adc
filds
adc
aaa
out
test
ret
insl
cld
ljmp
leave
or
sarl
cs
and
xchg
sbb
mov
inc
sub
push
jnp
sub
mov
pop
test
sub
outsl
call
insb
sub
add
cmpsb
lahf
add
lcall
lods
sub
inc
imull
sbb
arpl
std
cmp
fsubrs
push
fdivrl
lret
jmp
repnz
pusha
mov
pop
fstpl
aam
lods
jb
xor
xchg
jp
mov
mov
sbb
adc
pop
mov
adc
out
imul
cmp
sbb
fdivrs
adcl
shrl
push
shrb
sub
pop
and
xor
in
hlt
inc
leave
mull
and
push
mov
lock
cld
mov
xchg
xor
cmp
nop
cmpsb
inc
jns
inc
lods
xchg
add
adc
and
stos
jmp
das
and
xor
cmp
dec
and
sub
sbb
inc
adc
ret
test
or
jnp
cmpsb
clc
add
stc
mov
or
cmp
dec
out
mov
mov
xor
sbb
xchg
sar
leave
cmp
xor
sbb
cld
pop
rcr
fistps
adc
jp
push
loopne
xchg
sub
mov
lock
cmp
pcmpgtw
jne
sbb
jns
clc
stos
adc
rcrl
dec
cmc
std
mov
pushf
mov
arpl
cmp
loop
repz
lds
popa
sbb
cmpb
ds
out
lods
inc
mov
pop
mov
fistl
mov
and
or
mov
lods
inc
lods
rclb
xor
adc
icebp
xchg
inc
xchg
ja
sarb
cmp
lret
or
filds
adc
test
lds
pop
and
fmuls
push
adc
sti
mov
mov
and
or
mov
or
xlat
aas
lcall
rcl
popf
push
pusha
sub
xor
xor
inc
aam
into
add
fstpt
lods
mov
test
mov
push
sbb
int
js
jl
sub
das
lods
pushf
cmp
mov
mov
sbb
ja
sahf
adc
je,pt
adc
lods
aad
push
pushf
mov
jno
test
sub
stos
pushf
jmp
popa
mov
shr
dec
aas
outsb
jae
outsb
push
xchg
jb
adc
sub
mov
stc
les
clc
ds
sub
loope
or
mov
ror
push
add
jns
int
xchg
cmp
stos
je
dec
outsb
in
fcomp
mov
xchg
aaa
lods
mov
sbb
sbb
mov
adc
sub
fldt
leave
cmp
pop
rclb
neg
jecxz
popf
mov
cmp
out
arpl
xor
dec
inc
fs
push
sub
push
cld
dec
bound
pushf
cmp
aas
dec
int
add
hlt
idiv
mov
shll
mov
inc
push
or
lcall
adc
fadds
adc
je
and
adc
mov
outsl
stos
test
or
sub
dec
fsubl
pushf
mov
mov
jo
add
mov
outsl
pop
bound
je
in
mov
cmp
push
bound
adc
inc
and
fistps
imul
fwait
out
call
scas
outsb
jg
xor
push
repz
addr16
data16
xchg
addr16
inc
call
jl
adcb
dec
xchg
pop
pop
pop
or
popf
ss
sarl
xchg
std
imul
jns
out
sub
cli
ficoml
out
sbb
mov
mov
out
shll
mov
and
lds
aas
jns
jle
add
or
pushf
in
mov
fcomps
into
mov
push
leave
sbb
push
adc
mov
mov
and
adc
pop
push
pop
out
sbbl
ja
adc
jno
mov
mov
idiv
fs
and
and
jnp
cli
fwait
xor
push
xchg
jecxz
subb
das
mov
mov
es
or
and
push
push
pop
ss
or
imul
mov
cmp
cmp
arpl
jne
or
and
sub
jne
xor
jg
js
push
movsl
movsb
jecxz
cmpl
fiadds
repnz
je
sbb
bound
mov
sbb
fmuls
and
push
xor
xor
jl
inc
inc
cmp
or
gs
outsl
jge
xchg
mov
sti
sti
mov
lods
dec
ror
pop
shl
pushf
lods
pusha
inc
mov
rcrl
fmuls
pop
addr16
ljmp
jnp
sbb
or
loope
jo
orb
in
mov
les
fcomps
sbb
out
leave
fstps
xor
lcall
pop
sub
rorl
push
adc
mov
cmpsb
sahf
loop
mov
add
rorl
mov
fdivs
ss
bound
scas
xlat
shlb
xchg
push
push
jl
and
jecxz
test
cmp
push
ljmp
js
sub
pushf
cmp
push
fs
mov
addb
mov
jb
out
nop
push
adcl
dec
mov
pushf
lock
inc
mov
in
fstpt
pop
push
out
movsl
ja
pusha
loope
xchg
mov
push
filds
or
add
addr16
and
shrb
fwait
inc
mov
ds
push
add
mov
mov
jo
psubq
into
mov
inc
sti
es
and
cld
in
and
jecxz
jg
jecxz
push
stc
lock
push
cli
mov
mov
fdivrl
ret
pop
cwtl
sti
lret
mov
and
test
mov
mov
hlt
clc
push
sbb
or
push
sub
std
mov
arpl
push
aam
cmpsb
adc
dec
cltd
mov
add
mov
inc
daa
sbb
bound
add
jnp
test
insl
sub
and
sub
out
or
ret
xor
jb
movsb
int3
lods
or
cwtl
nop
std
jmp
divl
in
out
cmp
fnstsw
shrl
and
jns
mov
jnp
dec
int3
out
psrlq
mov
clc
aad
cmp
std
mov
jno
jl
mov
in
stos
arpl
popa
gs
sbb
cltd
pop
cmp
dec
lret
fwait
out
add
jg
scas
subl
rcll
dec
sub
inc
dec
int
sbb
les
pop
pop
sbb
jecxz
sbb
pushf
add
mov
movups
xchg
stc
cltd
add
jnp
imul
call
lret
or
mov
push
lahf
or
stos
sahf
xor
pop
sar
cmc
sbb
push
mov
in
sub
shlb
ljmp
jecxz
out
ss
stc
mov
testl
pop
jge
sti
aaa
ljmp
sti
aaa
push
data16
test
sbb
insb
imul
push
xchg
adc
ja
mov
stc
cmp
lods
lcall
jae
dec
pop
mov
fstpt
or
out
fisubrs
push
pop
or
dec
jle
mov
mov
adc
mov
repz
inc
andb
mov
popf
out
jge
repnz
pop
cwtl
xorl
jnp
inc
ljmp
cld
lods
rclb
fs
jnp
jmp
mul
jo
daa
imul
imul
lock
jecxz
mov
ja
jmp
shlb
in
arpl
out
jo
addr16
sub
ljmp
shrb
sbb
test
addr16
fstpt
cmp
push
lret
in
loope
jp
stos
xchg
dec
lods
xor
ljmp
sbb
in
std
sub
int
roll
mov
mov
jle
ret
pop
subb
cltd
in
in
fidivrl
sahf
enter
in
mov
add
js
jecxz
push
pop
jp
das
cmp
mov
pusha
mov
lcall
gs
push
mov
and
jo
pop
push
in
test
out
sub
adc
adc
into
pushf
pop
xchg
jl
or
push
pop
inc
sbb
dec
sbb
mov
pop
adc
out
movsb
cmpsl
cmp
cltd
popf
in
xchg
xor
push
xchg
nop
or
popa
loope
dec
or
dec
in
cltd
or
ret
add
push
fs
jmp
pop
leave
outsl
sub
inc
push
sbb
mov
mov
and
out
add
orb
jno
repnz
inc
adc
add
int3
xchg
mov
das
mov
and
add
cmp
in
and
mov
mov
imul
push
addr16
cmp
popf
cs
rclb
push
xor
sbb
sbb
pop
xchg
mov
movsb
add
push
dec
add
iret
jnp
rolb
testb
imull
mov
inc
pusha
outsl
jns
popa
aas
jmp
ret
adc
add
mov
jg
mov
fcoms
dec
sbb
test
ljmp
pushf
adc
pop
cmp
cli
inc
ljmp
or
test
inc
push
test
and
outsb
push
sub
test
sbb
test
xchg
roll
out
pop
sbb
adc
test
mov
cltd
push
fidivrl
enter
mov
mov
lahf
hlt
push
push
lcall
mov
jmp
nop
pop
sub
xor
ja
and
add
add
xchg
filds
out
out
pusha
aas
or
cmpsl
jg
subl
sbb
jo
pusha
jmp
jbe
xlat
inc
aad
in
out
adc
das
es
dec
outsb
arpl
dec
push
push
mov
fwait
lahf
mov
jae
divl
seta
sbb
fcompl
inc
xorb
cltd
xor
push
inc
push
jne
ficomps
inc
push
jbe
dec
jne
pop
pushf
aas
push
jae
mov
insl
cmp
aad
cmp
int3
or
sbb
loopne
fdivrl
and
jmp
pop
pop
roll
push
lock
mul
ja
and
insb
cmp
hlt
dec
mov
mov
psrlq
push
jae
dec
mov
dec
addl
popl
push
popa
cmp
jg
fisubl
shlb
leave
mov
out
std
and
push
hlt
push
mov
sub
pop
insl
lret
xchg
xor
jnp
push
add
mov
add
inc
shrl
jno
lahf
les
sub
sbb
or
das
in
sub
xchg
adc
outsb
inc
enter
sahf
imul
adc
inc
lcall
repnz
adc
fidivrs
xlat
gs
enter
jecxz
pushw
inc
pop
inc
jbe
push
std
test
bound
scas
pop
push
pop
jge
mov
and
xor
fwait
jge
dec
push
test
movsb
mov
mov
inc
sbb
out
lret
pusha
clc
push
sub
clc
mov
test
movsb
into
sbb
fs
fildl
inc
push
popf
insb
xor
mov
mov
xor
or
imul
dec
cmp
roll
inc
cmp
sbb
jge
leave
mov
pop
inc
pop
pusha
sbb
and
jno
std
dec
es
aam
pop
in
and
shrl
mov
lahf
das
gs
into
pop
idivl
shlb
mov
pop
mov
push
cmp
stos
push
rcr
xor
sub
add
mov
and
inc
xchg
sahf
pop
arpl
mov
mov
xchg
lahf
imul
mov
sbb
lea
ljmp
cmp
lods
mov
push
inc
sahf
pop
das
int
pop
jb
stos
mov
jo
xchg
enter
fmuls
cmp
stos
jne
mov
xchg
xchg
xchg
xor
dec
xor
outsl
mov
and
inc
jmp
jg
divb
xchg
in
xor
test
mov
cli
dec
jl
pop
aas
mov
push
loop
lods
in
push
inc
outsl
push
orl
repz
dec
and
jb
sbb
inc
in
sarl
push
xchg
or
cmp
jne
cmpsl
mov
enter
lret
in
or
sbb
mov
mov
sub
divl
pop
adc
and
jl
lea
fsubs
int3
adc
in
sbb
cmpsl
fs
dec
loope
cmpsl
clc
test
mov
mov
mov
jne
js
mov
popf
mov
mov
shll
push
fsts
xchg
popf
jge
inc
test
pop
push
push
adc
push
pop
inc
add
out
mov
inc
inc
mov
and
gs
adc
and
jo
ss
sarb
lcall
fdivrs
jae
push
in
pop
mov
and
add
negb
adc
mov
lods
inc
ds
iret
lss
in
insb
inc
pop
and
adc
pop
mov
fwait
sbb
sbb
lcall
xlat
insl
iret
ss
adc
xchg
hlt
clc
push
sarl
push
xchg
out
pop
hlt
mov
sub
sbb
push
fcmove
add
jl
repz
sbb
leave
dec
xor
xor
bound
xorb
pop
mov
pusha
or
add
les
popl
test
test
and
inc
cmpsl
std
or
mov
add
push
cmc
xchg
jb
dec
sbb
les
testb
lods
dec
dec
lds
pop
jmp
xor
pop
sub
sbb
sub
sti
pop
mov
roll
xchg
xchg
in
shrb
cwtl
jle
aam
or
jbe
jge
in
ljmp
notl
push
repz
movsb
insb
sub
movsb
cmpsl
mov
push
dec
dec
xchg
ja
fwait
lcall
cmp
mov
arpl
int
pop
iret
or
dec
je
xchg
pop
sbb
fwait
test
inc
push
fsubs
sti
arpl
imul
mov
push
dec
cmp
pop
iret
fcoml
pop
or
jne
sub
adc
push
fwait
cli
pop
or
sub
pop
jne
or
sub
addr16
aad
xor
add
daa
ss
pop
fs
and
jo
call
std
xchg
xchg
lea
xor
imulb
gs
lahf
je
iret
lods
jno
push
xlat
inc
dec
dec
out
jmp
sub
cli
xchg
mov
sub
sub
inc
cld
mov
in
sbb
inc
jecxz
js
ljmp
ss
mov
jg
rcrl
mov
jl
stos
outsl
dec
ret
pop
xlat
test
or
jmp
aaa
cmp
sbb
ljmp
and
mov
outsb
das
xchg
dec
clc
sub
adc
add
xlat
jl
ficompl
cmp
adc
mov
sahf
lahf
fbstp
stos
sbb
push
jae
or
dec
lahf
cli
mov
mov
sbb
cld
ret
cmp
sbb
ss
xor
lret
mov
movsb
dec
pop
stos
jge
mov
into
mov
punpckhdq
sbb
loopne
call
hlt
out
xchg
jo
stos
mov
daa
test
out
mov
iret
ret
add
nop
sub
idiv
xor
loope
popa
mov
adc
mov
sbb
xchg
jl
and
pusha
dec
aad
fldenv
push
sbb
cmp
adc
pop
xor
sbb
call
fwait
aas
mov
daa
ljmp
out
xor
mov
int
push
aam
pop
push
daa
cltd
xchg
adc
dec
jno
aam
ljmp
sti
movb
push
inc
inc
fcomps
xchg
sbb
and
ja
jnp
out
stos
out
jge
or
pop
sub
or
xchg
pop
or
cmpsl
andl
sbb
test
das
push
pushf
push
lahf
stos
lods
push
xchg
mov
cmc
fldt
flds
fs
inc
xchg
aad
or
cmc
loop
cmpsl
cld
add
xchg
in
jl
cs
mov
fisttpll
out
stos
subb
cmp
je
cmp
imul
add
jne
repnz
add
ret
enter
xor
add
outsl
mov
push
jb
mov
fstpt
mov
test
add
data16
pop
stc
sub
int
or
xchg
hlt
cmp
stc
inc
cmp
sahf
xchg
xorl
shlb
shrb
fwait
shll
cs
lods
adc
clc
sbb
xor
push
stos
das
push
mov
cmp
pop
xor
movsb
pmulhuw
mov
pop
push
divl
outsl
faddl
inc
mov
incb
insb
fldl
je
lods
mov
lds
add
cmp
mov
sub
fstpt
lahf
mov
fwait
or
jge
dec
lods
sbb
jp
jmp
mov
cmpb
lret
out
out
cmpsl
ja
sub
fisubrs
out
inc
imul
test
leave
je
les
inc
fucomip
mov
jns
iret
ficomps
sti
mov
iret
pushw
pop
push
stos
cltd
arpl
pop
loop
cmp
arpl
jg
adc
mov
jbe
push
pop
sub
mov
xchg
mov
dec
lcall
xchg
pop
int
or
or
cmpsl
subl
cmpsb
dec
or
push
xor
enter
inc
sub
push
mov
adc
aas
push
mov
insb
cmp
mov
pop
mov
insl
test
pop
mov
pop
lods
mov
mov
loop
adc
pop
pop
shlb
popf
inc
popa
pushf
mov
rolb
insb
pop
lcall
jmp
or
loopne
roll
jo
ficompl
lret
pop
push
mov
movups
mov
jbe
xchg
xchg
cltd
sub
jg
xchg
mov
lret
fsts
addl
mov
test
enter
out
loopne
fwait
jne
inc
shl
js
inc
push
sub
push
or
or
mov
in
push
sbb
pop
ret
push
push
push
add
pop
andl
test
push
jae
xor
jo
popa
lret
loop
mov
dec
jp
int3
push
hlt
popa
mov
ss
into
nop
lods
inc
mov
mov
or
test
div
scas
pushf
jno
inc
jp
mov
fdivrl
pop
fbstp
add
out
loopne
mov
in
sub
cmpsb
mov
out
shlb
jb
daa
addr16
jnp
repnz
inc
int3
or
push
adc
mov
dec
movaps
cli
jge
sub
loopne
mov
jg
or
jb
cld
fstpt
mov
test
add
mov
movsb
rolb
mov
add
pcmpgtd
rolb
scas
jg
xchg
push
xchg
push
adc
mov
fdivl
mov
inc
cmp
data16
and
cmp
ds
jl
lods
jl
sub
fmul
fsts
pushf
dec
inc
in
inc
stos
jbe
divl
xchg
fisttps
int
push
dec
dec
jns
scas
and
test
test
inc
dec
push
push
loopne
aas
cmp
mov
mov
cmpb
cmpsl
in
jne
aam
insb
add
sahf
out
sysret
xor
xchg
pop
aaa
inc
inc
or
rcrb
dec
push
js
in
out
cmpl
jne
mov
pushf
push
orl
aam
loope
lret
mov
cmpl
pop
leave
test
pop
lds
cmp
push
xor
loopne
mov
push
inc
mov
sub
out
mov
cltd
jns
int
ljmp
pop
ds
leave
mov
pop
xchg
je
icebp
sub
outsl
inc
mov
adc
jno
cwtl
scas
jae
add
pop
mov
adc
push
imul
pusha
or
push
sbb
push
ficompl
bound
bswap
jo
push
nop
aam
xchg
pusha
xchg
pop
cld
or
push
cmpsb
pop
inc
lcall
loop
cmp
mov
adc
movsb
jnp
je
out
or
filds
js
xchg
xlat
in
fwait
in
les
sbb
es
rcl
add
pop
cmpsb
shrb
std
sarl
push
filds
fs
jno
frstor
and
call
inc
mov
mov
or
sub
xor
dec
fildl
xchg
incb
orl
lds
addb
cld
and
mov
ficompl
test
xlat
aas
or
divb
pop
or
shrl
ret
lret
rclb
and
stos
or
and
mov
mov
mov
xor
jge
jecxz
pusha
add
xchg
std
cld
adc
fsubrs
int
movsb
jns
jge
add
add
mov
test
sub
cs
and
mov
clc
ret
sbb
xchg
jmp
jle
mov
xor
sahf
push
pcmpeqw
scas
fwait
or
or
fisubrl
loop
movsb
and
sti
inc
leave
int
ss
icebp
push
inc
dec
or
and
fstpt
test
stos
mov
lret
pusha
or
and
or
cmc
inc
cmp
push
mov
ds
lods
mov
int
mov
adc
sbb
or
jl
jo
xchg
xchg
loope
std
popa
popa
scas
stos
dec
scas
or
xor
mov
inc
repz
and
in
cwtl
jmp
mov
dec
fwait
cmp
das
inc
jnp
mov
jge
test
mov
jp
movsb
mov
xchg
mov
push
mov
jb
inc
daa
stos
icebp
mov
cmp
mov
imul
xchg
imul
push
cmc
pop
inc
jg
fdivr
dec
in
inc
xor
decl
popf
std
in
les
dec
jb
pop
scas
aaa
pop
lock
fsts
mov
mov
daa
mov
adc
mov
cmpsb
pushl
js
or
or
jmp
and
pop
jge
icebp
cmpb
inc
rclb
nop
lret
adcb
or
fistpl
in
mov
int
fistpll
pop
lods
cmp
sbb
adc
push
jle
sub
pop
mov
test
xor
jecxz
test
vunpcklpd
mov
mov
sbb
aas
lock
mov
in
insb
lcall
or
jge
lahf
add
lods
xchg
pop
jb
stos
fisubrl
mov
lods
sahf
xor
adc
add
sub
lcall
pop
orb
out
cmp
pop
icebp
jl
test
mov
sahf
pop
sub
push
leave
lods
lods
mov
mov
icebp
lds
stc
inc
push
in
cld
pop
movsl
in
stos
pushf
mov
push
insb
mov
scas
dec
adc
jbe
cwtl
dec
mov
jp
jmp
and
jno
dec
push
xor
inc
out
mov
add
test
lock
push
sbb
aas
sahf
adcl
sbb
rorl
jae
cs
ret
stos
fbstp
cmp
mov
ret
mov
jecxz
xlat
adc
pop
lret
add
out
insl
or
inc
and
imul
in
jae
dec
xlat
jmp
test
divl
ljmp
sub
fisubrl
repz
mov
out
insl
sahf
imul
pop
leave
jge
xchg
xor
dec
cmc
sub
addr16
sbb
adc
add
xchg
pop
enter
adc
stos
lret
out
ja
push
sub
cmp
hlt
xor
fsubs
cwtl
sahf
je
dec
adc
or
sub
dec
mov
ret
and
xorl
scas
adc
es
sti
adc
mov
shll
push
inc
out
or
test
inc
insl
add
pop
xchg
pop
fcmovbe
test
lret
es
jg
shlb
sub
jmp
sub
push
adc
into
pop
mov
sbb
or
push
lea
lahf
imul
scas
xchg
xchg
xchg
int
adc
repnz
cmp
iret
jns
jnp
dec
add
sbb
sbb
shlb
pop
mov
xchg
xorb
pop
jb
ret
shll
bound
fimuls
lods
rorl
pop
or
mov
cmp
fs
pop
popa
leave
divb
cmp
sub
loope
lcall
in
fidivrl
lea
sbb
xor
mov
adc
xchg
out
dec
jmp
std
test
and
icebp
pop
inc
aad
test
movsb
lret
xor
loopne
scas
add
fistpll
push
mov
fisubl
das
lds
clc
sub
pop
and
jg
fdiv
adc
dec
test
and
xchg
pop
cmp
cwtl
mov
fistpl
fcompl
cmpsb
mov
std
jp
aad
or
lods
imul
std
push
push
adc
and
sbb
inc
add
and
jno
adc
push
mov
addr16
cli
pop
sbbb
sub
mov
mov
sti
es
and
xor
pop
xrelease
insb
pop
movb
adcb
bound
loope
xchg
jnp
les
lret
les
test
call
adc
imul
lock
stc
xchg
mov
lds
das
ja
call
out
into
xchg
xchg
mov
jno
mov
test
test
jnp
fbld
cmp
pop
xor
adc
ljmp
ret
ds
inc
int3
xchg
imulb
and
popf
xchg
sbb
mov
xor
mov
lcall
mov
dec
pop
push
in
add
sahf
ja
dec
cld
mov
scas
add
inc
sub
cmpsl
mov
pop
imul
mov
inc
pop
mov
xchg
or
pop
lret
fwait
or
fcoml
cmpsb
adc
inc
add
lds
dec
dec
cli
fistps
into
and
xor
rcrl
push
and
cmp
push
pop
or
sub
mov
adc
in
cmc
jmp
mov
aaa
paddusb
mov
xor
and
lcall
push
sti
out
add
xchg
lret
icebp
inc
enter
das
lods
or
cs
mov
pushf
adc
jecxz
inc
xor
pop
or
mov
dec
stos
scas
push
jno
mov
sbb
loope
or
lea
mov
lods
xchg
mov
loop
lock
fmuls
mov
or
js
shll
enter
imul
out
sbb
lods
out
clc
daa
mov
mov
xchg
mov
push
mov
cmp
rcrb
je
lret
pop
sahf
lret
jae
loop
sahf
in
sub
pop
or
in
clc
inc
push
inc
sbb
fisttps
scas
mov
test
into
sbb
fcoml
in
sub
push
jmp
mov
nop
mov
lock
mov
push
add
outsb
and
cmc
fwait
push
pop
pop
fldenv
jae
cs
push
scas
jecxz
dec
fiadds
ret
out
mov
mov
ret
test
dec
cmp
dec
fs
ja
mov
fucomip
clc
mov
aas
adc
out
mov
movsl
lods
sbb
mov
jo
ret
nop
cmp
xchg
jp
nop
inc
cwtl
insl
into
mov
jno
xchg
adc
mov
rclb
in
inc
sbb
xlat
mull
outsl
je
add
cmp
mov
lcall
clc
push
sub
jns
addr16
or
sarb
sub
mov
xchg
daa
mov
test
adc
shrl
mov
out
loope
cmc
push
mov
push
in
pop
dec
add
pushf
and
and
pop
push
mov
push
mov
and
das
mov
adc
or
aas
jecxz
xchg
movsb
or
insl
dec
or
out
adc
cld
sbb
ss
add
fsts
pusha
lcall
out
or
movsb
sbbb
das
shrb
adc
jl
mov
adc
jo
adc
das
xor
mov
push
test
or
xor
or
in
popa
cli
out
jecxz
arpl
cmp
inc
ja
rcr
imul
pop
ja
dec
loope
pop
mov
mov
dec
pop
in
sti
jo
mov
xchg
daa
cwtl
mov
rorl
or
sbb
and
jg
dec
inc
dec
cmp
jbe
cmp
dec
mov
sahf
and
mov
aad
lret
je
rcrl
or
mov
aad
scas
dec
and
sarb
inc
xchg
dec
out
test
out
pop
iret
and
xchg
movsl
pop
lds
and
test
pushf
data16
mov
leave
mov
flds
es
lret
daa
shlb
fstpl
mov
fisttpl
or
mov
and
scas
or
psllw
shlb
mov
mov
fistl
fists
lods
ds
inc
je
jmp
pushf
fstpt
jecxz
lret
rcl
mov
jae
aaa
imul
addr16
xor
add
mov
imul
push
mov
dec
imul
and
push
jb
call
add
add
mov
cmpsl
jg
fimuls
or
stos
sub
jmp
out
jo
add
stos
not
mov
sbb
xchg
das
fadds
add
xchg
xor
dec
sbb
int
mov
int
and
mov
xchg
test
cmp
jnp
dec
cwtl
jecxz
stos
repz
clc
sub
and
lods
pop
xor
jp
push
outsl
and
add
inc
and
pop
leave
fwait
movsb
xchg
jno
mov
inc
sarl
sub
push
scas
jle
cltd
xchg
push
mov
mov
inc
jmp
adc
cmp
ret
sbb
push
addr16
rcll
in
jp
mov
fs
fcompl
mov
stos
mov
push
and
fstenv
mov
aad
lock
mov
loope
insb
mov
pop
adc
xchg
jge
outsl
mov
lcall
mov
filds
push
adc
filds
xchg
pop
and
push
in
jecxz
lahf
adc
lret
mov
mov
mov
mov
push
push
pop
test
mov
arpl
adc
jns
sub
jg
data16
mov
iret
jmp
push
sbb
bound
out
fistps
inc
lret
out
stc
or
loopne
out
inc
pop
or
enter
cmc
fdivrl
adc
lcall
fwait
and
push
imul
insb
push
pusha
test
pop
mov
or
std
sub
insl
inc
adc
iret
pop
movsl
fs
scas
hlt
dec
aam
inc
sub
pop
jmp
push
mov
shl
inc
pop
mov
inc
ljmp
stc
lods
mov
lret
dec
iret
push
xor
les
outsb
xor
repnz
adc
xchg
scas
mov
xchg
push
push
jge
mov
insl
cmpsl
lds
xchg
and
in
mov
pop
fmuls
lds
push
and
pop
ja
xor
jg
scas
out
lcall
cmp
dec
push
lret
xchg
cmp
repz
subl
je
loope
push
or
cmp
aad
stos
pop
dec
int
sbb
cmpsb
setl
mov
or
rorl
out
cmc
xchg
jmp
dec
sbbb
in
push
scas
test
and
fildl
ffree
add
mov
pop
and
cwtl
cmp
ret
out
or
out
pusha
or
out
jnp
add
push
add
xchg
and
and
popa
mov
sbb
jnp
lds
rcl
xchg
mov
inc
mov
xor
jns
jg
cmp
inc
and
push
cs
xchg
rorl
adc
push
xlat
jbe
xor
jle
out
mov
shll
sbb
sahf
mov
jg
pop
mov
cmp
insb
scas
adc
pop
aaa
jb
jg
or
add
es
jnp
pop
imul
iret
add
mov
xor
inc
inc
lahf
popa
push
leave
pop
cmpl
jae
xchg
aas
repz
cld
leave
sti
in
jo
call
sub
repz
lret
lods
dec
es
inc
sub
aam
imul
add
into
fs
inc
stos
loope
sbb
cmp
mov
cmpsl
and
mov
jae
xchg
cmpsl
mov
aaa
xchg
rcrb
sbb
std
dec
dec
xchg
dec
idiv
aad
ret
ficoms
xchg
outsl
into
dec
or
adc
shl
imul
or
push
or
movsb
add
cmp
ret
push
mov
pop
sbb
mov
pop
add
aad
popf
dec
addr16
jecxz,pt
push
xchg
push
fidivrl
cli
dec
fsubl
sbb
call
cmp
push
cmpsb
mov
repnz
into
mov
in
jnp
add
test
mov
int3
jno
xchg
loopne
xor
out
pop
add
aas
push
mov
sbb
cmp
mov
js
imul
ror
pop
pop
in
push
mov
in
pushf
roll
call
jl
fsubrl
mov
clc
or
push
or
inc
lret
dec
inc
add
xchg
jle
pop
fisubs
cwtl
addb
rcrb
iret
mov
sub
rorl
mov
jae
fbld
pop
push
hlt
inc
push
mov
add
push
dec
push
repz
and
stos
adcl
cli
adc
test
push
jbe
jne
mov
ljmp
lea
sub
xchg
and
pop
pop
push
ja
enter
loope
inc
jge
push
je
push
jnp
mov
in
dec
mov
cmp
jg
lea
push
cwtl
cmp
adc
scas
push
enter
xor
lret
inc
pop
out
adc
mov
in
push
dec
aad
jle
pusha
pop
xlat
loopw
jecxz
push
out
adc
stos
adc
push
adc
mov
xchg
lahf
mov
inc
sarb
jno
dec
sbb
ror
xlat
movb
loope
mov
mov
mov
jecxz
push
filds
jbe
push
bound
mov
hlt
in
pop
push
stos
insl
popa
or
inc
pop
fsubl
xor
add
loope
cmpsb
scas
test
out
pop
insb
incl
or
popa
pop
daa
xchg
je
mov
sbb
pusha
fmull
std
xchg
in
adc
testl
inc
sub
dec
push
daa
push
fisubs
imul
mov
shrl
mov
xor
jl
xchg
sbb
gs
lahf
lock
loopne
in
notb
and
adc
roll
adc
jo
iret
mov
icebp
add
das
test
and
test
mov
and
xlat
fs
cmp
aas
mov
push
push
push
fists
jl
xor
mov
sbb
ror
add
leave
ja
gs
xor
xchg
mov
test
clc
stc
jmp
das
call
pop
pushl
mov
leave
mov
pop
xchg
nop
pushf
pop
inc
adc
or
and
sub
mov
daa
xchg
ja
fbstp
dec
call
xor
jne
adc
test
imul
ret
xchg
int
in
mov
in
sub
sbb
repz
or
add
cld
es
fnstcw
dec
es
push
pop
cmpsl
fistps
pop
or
mov
jmp
imul
and
xor
mov
push
push
pop
insl
xchg
sub
fucomip
push
jmp
pusha
das
push
dec
outsl
sub
fcmovnb
lcall
gs
sub
lea
call
mov
pop
out
pop
out
outsb
loop
popa
xor
cmpsl
aas
popf
out
xchg
or
and
cmpsb
fdivs
mov
and
lds
imul
or
dec
and
cmp
ja
dec
daa
aam
xor
int3
mov
in
mov
jge
movsb
push
pop
hlt
dec
div
cmp
dec
pop
daa
dec
xlat
bound
jge
cli
loope
iret
outsl
ret
pop
inc
sbb
dec
std
push
mov
aas
mov
dec
adc
ja
mov
fidivrl
test
pop
push
in
js
mov
pop
sti
mov
mov
idiv
stos
sbb
and
or
inc
cmc
jb
imull
mov
insl
sbbl
loope
js
divl
fsubrl
cmpsb
adc
sub
xchg
xchg
pop
lret
mov
inc
pop
addb
pop
or
lahf
outsb
dec
cld
pop
mov
pusha
mov
mov
sbb
mov
shlb
pop
sbb
dec
pop
mov
loopne
adcl
cs
lods
dec
mov
push
add
inc
add
and
jle
fldenv
xchg
lahf
push
xchg
je
mul
mov
and
add
aad
imul
jne
push
sbb
aas
in
rcll
mov
inc
loopne
popa
insl
push
hlt
adc
iret
add
and
scas
out
pushl
arpl
sub
cmp
xor
mov
mov
xor
pushf
cmpsb
imul
pop
stos
mov
negb
stos
rep
arpl
adc
pop
add
mov
add
and
clc
mov
cmp
push
test
ds
push
mov
push
adc
rclb
cli
negl
in
insl
pop
inc
lods
inc
xor
call
call
daa
fs
es
sub
mov
fstpt
inc
xchg
xor
push
iret
push
insb
pop
loop
cmpsl
repz
sub
pop
out
cmp
ret
into
or
xchg
std
push
pop
je
std
mov
jo
cmc
xchg
pop
shlb
inc
dec
xor
xchg
fcomps
in
inc
jb
jg
cli
add
sbb
add
cmpsb
jae
popf
test
cmp
mov
inc
jmp
push
jnp
loope
cmp
movsb
mov
mov
and
fmul
lock
mov
fwait
xchg
std
mov
dec
flds
mov
push
sbb
cmpl
aaa
in
into
repnz
ficoms
add
mov
mov
mov
aaa
lahf
sbb
mov
test
push
jns
jb
ds
inc
sbb
xchg
jbe
mov
push
dec
sbb
hlt
rcrb
dec
jno
xor
stos
xchg
fwait
out
xchg
mov
cmc
mov
stos
push
jmp
adc
into
inc
lds
in
dec
ftst
jb
fstps
insb
or
scas
incl
sbb
push
mov
pop
movsb
cltd
xchg
not
xor
test
popa
cbtw
push
jmp
addl
add
mov
cmc
daa
push
jns
montmul
cmpsb
inc
aam
mov
jne
popa
mov
push
mov
xchg
leave
rcll
stos
inc
mov
cmp
mov
push
ss
dec
jbe
jl
les
cmp
fstpl
test
stos
pushf
pop
or
shlb
jp
mov
xlat
hlt
xchg
push
mov
ss
cld
mov
sahf
test
adc
dec
daa
adc
loope
mov
dec
loop
addr16
push
lods
sbb
cmpsb
popf
push
push
into
mov
jle
inc
cwtl
and
adc
icebp
jbe
mov
jge
loope
adc
int3
fstl
and
or
dec
je
pop
test
push
jge
lock
sub
inc
xor
data16
loopne
xchg
repnz
sbb
or
call
lea
pop
adc
out
dec
pusha
dec
addr16
sbb
ficoms
and
jae
movsb
mov
movsl
rorl
repz
jge
jl
dec
fdivp
rcll
sub
dec
test
push
ret
mov
les
adc
je
mov
xor
jnp
push
cmp
sub
gs
dec
dec
mov
in
sub
lret
stos
lcall
xlat
int3
addr16
ficoms
cli
push
cmp
pop
jne
insl
dec
add
in
in
lds
sbb
inc
pop
aad
aaa
into
mov
pushf
mov
mov
sbb
nop
adcl
ds
dec
pop
cs
sti
pop
aaa
jb
jb
orl
xchg
sub
ds
subb
adc
lret
add
mov
pushf
mov
filds
pop
rcrb
repnz
xor
ja
stos
aas
push
xor
loopne
rorl
fsubrs
sub
mov
sub
lcall
cmp
pop
out
or
xchg
jnp
decl
inc
stos
sbb
dec
mov
fcomps
fnstsw
nop
adc
pop
mov
lds
push
sbb
adc
or
popa
fld
sbb
sub
mov
test
sbb
xchg
xchg
sbb
imul
sbb
sub
outsl
stos
mov
mov
mov
out
ret
add
outsl
and
or
dec
or
shlb
xorl
or
arpl
je
ss
cmp
lea
jecxz
out
add
dec
push
mov
shrl
lock
mov
mov
fucomi
inc
xchg
jp
out
fiadds
in
xor
ss
push
gs
fstps
rolb
inc
lret
sahf
lahf
inc
lcall
xor
in
mov
sub
xchg
movsl
jb
loopne,pn
sub
xor
nop
int
or
pushf
lret
pop
rcl
adc
xchg
test
nop
push
arpl
mov
stc
adc
mov
int
mov
jmp
push
push
add
adcl
lcall
sbb
mov
lods
adc
lcall
dec
out
and
in
push
inc
movsl
mov
aaa
adc
dec
push
xor
out
push
sub
nop
dec
dec
aad
xchg
lea
inc
adc
push
fsubl
repnz
divl
pop
aaa
push
and
pop
imul
xor
in
push
mov
test
dec
ja
sahf
andb
mov
push
push
pop
lret
xchg
lret
cltd
test
mov
dec
lods
jbe
xchg
hlt
jns
mov
xor
adc
pop
pusha
and
popf
test
add
mov
popf
push
fadds
inc
mov
sub
cmp
jl
js
ret
mov
lock
xor
mov
sub
pop
adcl
jno
std
nop
or
daa
lds
ljmp
jo
mov
ret
xor
mov
and
adcl
cmp
jb
jp
inc
fwait
add
dec
lret
xchg
out
jl
clc
les
push
jb
das
sti
cmp
mov
popa
test
add
mov
ljmp
mov
jbe
mov
sahf
sub
aaa
mov
inc
add
xor
jle
xor
inc
jne
push
and
pushf
cmpsl
adc
fmuls
loopne,pt
ret
test
sbb
jge
push
lods
and
pop
mov
test
pusha
dec
jle
cmp
sub
aad
imul
sbb
rorl
jmp
jno
dec
hlt
or
cld
add
adc
cmp
es
mov
inc
push
push
cltd
lea
mov
sub
mov
fcomip
push
dec
dec
adc
cmp
arpl
push
sub
cmp
movsb
lret
out
es
or
lds
in
movsb
or
fdivrl
mov
orb
jmp
enter
sub
and
sbb
sub
xchg
cmp
xchg
cwtl
call
xor
fiaddl
and
loope
shrl
sbb
jbe
xor
or
inc
lock
faddl
cmp
enter
inc
xchg
ret
xor
or
mov
test
aas
cli
cmp
sub
xlat
lret
sub
push
jb
cltd
push
add
test
pop
add
ljmp
test
adc
or
push
cmp
aam
sub
dec
loopne
cmp
fcomi
inc
jnp
mov
mov
sarb
push
inc
jno
in
mov
pusha
push
out
stos
jnp
ret
cmp
std
xor
ret
icebp
sub
push
js
add
les
stos
pop
xchg
adc
rolb
dec
mov
inc
stc
pop
sub
push
xchg
push
sub
jmp
adc
call
aad
nop
pop
xchg
notl
push
add
lds
mov
pop
xorl
cltd
lahf
push
call
mov
add
out
adc
or
shr
mov
enter
jns
insl
jb
stos
mulb
jp
mov
sub
iret
movsb
push
cmc
sub
adc
call
xchg
jge
mov
or
ss
push
popf
cmp
add
lock
stos
pop
and
fldl
std
xlat
dec
cltd
loop
mov
cmpsl
xor
cmp
pop
and
cwtl
and
repnz
push
test
outsb
imul
cmp
or
pop
jp
sbb
leave
push
push
hlt
enter
jl
nop
push
mov
pop
inc
dec
lds
mov
shlb
cmp
fsubrl
jo
mov
push
jnp
cmp
arpl
in
mov
xor
or
repz
xchg
push
mov
push
xor
xor
pop
repz
pop
xchg
mov
imul
xchg
jecxz
push
cli
leave
loop
xlat
or
aas
mov
loope
mov
push
push
lock
xor
adc
lea
sbb
test
aad
arpl
cld
aaa
in
mov
inc
add
roll
gs
shrb
xchg
and
inc
test
pusha
leave
vpcmov
xchg
add
cmp
xchg
xchg
stos
cmpl
mov
mov
cmp
mov
test
ss
repz
arpl
lods
sub
push
push
jno
add
push
cmc
and
leave
out
xchg
and
mov
pop
xchg
aad
and
add
mov
decl
movsl
test
bound
insb
xchg
cmc
push
gs
xor
mov
mov
and
cmpb
out
in
jl
inc
mov
pinsrw
mov
test
hlt
xor
out
adc
mov
and
ret
lahf
ret
pop
mov
adc
xchg
push
mov
sbb
stos
stc
mov
enter
das
dec
xor
mov
call
mov
leave
or
mov
jae
aad
out
xor
out
cmp
add
xchg
push
cmp
sub
fxam
add
sub
sbb
clc
or
les
shll
push
pop
pop
and
rolb
mov
adc
sahf
jg
or
sbb
adc
mov
cmp
mov
std
xor
aam
icebp
pop
sbb
xor
xchg
popf
pop
jae
fwait
dec
dec
push
sbb
cmc
in
and
aad
add
add
into
fdivp
addb
mov
and
mov
mov
ret
cmp
mov
jg
dec
add
xchg
lds
cmpsb
jns
push
lods
jbe
js
mov
out
ja
cwtl
test
icebp
shrl
ja
push
stc
loop
lahf
lret
jl
sub
out
jg
pop
sbb
push
lds
ds
std
fstpl
jno
push
lahf
add
insl
mov
lods
idiv
adc
dec
and
lods
dec
dec
das
dec
jno
bound
nop
rcl
in
enter
rcr
xchg
jnp
dec
and
mov
lock
sbb
adc
dec
mov
xchg
jmp
pop
movsb
cld
pusha
jl
or
inc
inc
outsl
cmpsl
and
jnp
jge
out
das
and
jmp
stc
jbe
sbb
ss
repz
add
push
popf
lds
jns
insb
orb
faddp
mov
dec
outsl
out
or
repnz
dec
cmpsl
sbb
fs
iret
lds
mov
sbb
sub
adc
sahf
or
xchg
cmp
pop
ljmp
es
and
mov
pop
movsb
sub
pop
fdecstp
mov
mov
dec
mov
rclb
pop
add
jns
inc
mov
aaa
adc
sbb
scas
inc
pushf
fstl
jb
int3
jmp
adc
xor
std
std
adc
mov
std
mov
stos
sbb
outsb
and
cmp
jo
mov
xchg
jle
aas
pusha
adc
in
pop
sbb
iret
mov
sahf
hlt
mov
adc
outsl
pop
sub
loopne
xor
xchg
mov
lret
jns
jbe
lcall
jnp
adc
imul
popa
stos
jle
xchg
sbb
ret
jbe
or
rclb
lock
xor
jo
push
push
mov
mov
push
sbb
dec
mov
cmc
fsubrs
mov
mov
sbb
mov
cmp
dec
shrb
shrl
xor
aad
sbb
add
jne
test
out
xchg
sub
add
push
mov
out
fldl
jb
cli
ja
xchg
neg
rol
pop
insb
je
xchg
ret
shrb
xor
inc
xor
cmp
fldt
idivb
add
enter
mov
ja
insl
out
std
jo
or
pop
adc
jnp
test
or
mov
sub
push
std
rorl
lret
cmp
adc
cmp
jecxz
jnp
sarl
xchg
jne
addb
out
aas
sbb
stc
in
fistpl
int
dec
daa
xor
add
ficoms
xor
testl
test
inc
es
out
sbbl
lret
testb
mov
iret
loopne
xchg
add
push
rclb
loop
adc
push
mov
push
fnsave
pop
mov
data16
xor
sarb
dec
pushf
mov
push
inc
and
add
inc
cwtl
pop
push
gs
pop
in
stos
cmp
inc
cmpl
sub
icebp
stos
push
or
outsb
lahf
insb
addl
popa
dec
test
push
out
arpl
std
adc
add
mov
adc
int
dec
ss
push
je
jle
bound
xchg
std
push
movsb
mov
xchg
pop
dec
and
test
int
loope
arpl
fwait
xchg
mov
popa
mov
je
and
mov
in
roll
lahf
js
int
push
not
xor
xchg
adc
scas
push
mov
mov
fisubs
in
lds
mov
push
leave
ss
mov
insb
pop
or
add
pop
sbbb
mov
pop
sahf
sub
out
fsubrp
kxorw
mov
stc
scas
nop
xchg
fldl2e
mov
and
dec
or
mov
int
je
test
pop
jo
inc
xchg
mov
test
lret
aaa
popf
mov
ret
jne
cld
xchg
xor
cmpsl
outsb
das
ret
or
cmpsb
test
mov
mov
sbb
cmp
adc
test
data16
cmp
push
and
dec
es
repnz
test
imul
and
inc
xor
mov
inc
pop
pusha
push
lods
and
ja
lret
aam
add
mov
and
pusha
loopne
mov
rcrl
push
push
jle
pop
or
or
hlt
adcl
pop
ret
or
int3
jge
fs
test
call
or
jg
lahf
dec
jle
sub
insl
sti
mov
in
or
sbb
mov
or
int
and
bound
xor
sbb
in
cmp
jns
in
pop
add
hlt
js
or
inc
mov
cmp
and
mov
lahf
loope
inc
fs
or
mov
aam
mov
insb
jp
pusha
jae
or
jl
jns
shrl
sub
xor
aam
jnp
inc
mov
dec
lock
adc
movsb
jmp
cli
lahf
pop
fldl
pusha
cmc
add
repnz
lds
ds
add
je
dec
ficoms
jbe
pushf
inc
imul
sub
mov
push
xchg
push
movsl
inc
outsb
mov
dec
pop
paddusb
xor
push
movsl
js
sub
jg
sbb
mov
xchg
into
xchg
dec
sub
adcb
push
cmp
test
xor
mov
nop
fisttpl
xor
adc
in
xchg
fdivs
in
les
hlt
cli
into
adc
pop
and
mov
lods
mov
es
xor
loope
push
push
outsb
rorl
out
xor
outsb
or
or
insb
and
inc
inc
xor
pop
cmp
and
and
leave
xor
push
mov
stos
jle
cmp
and
mov
xchg
rclb
cmovg
sti
notb
test
cmp
jae
sti
loopne
sarb
cmc
leave
add
push
push
fisubrl
mov
cmp
fisttpl
sub
sub
cmp
mov
in
adc
stos
pop
imul
stc
sbb
xor
mov
enter
push
mov
repz
imul
fisubs
and
or
xlat
fnsave
or
stos
aam
insb
std
add
lret
and
aam
fs
je
cli
jge
ss
imul
sub
jbe
mov
rcl
call
mov
shr
pushf
mov
sarb
mov
fildll
sub
pusha
and
adc
ljmp
jg
jo
sbb
push
pop
cmovnp
mov
daa
adc
ja
mov
dec
in
aad
inc
add
rcll
push
mov
loope
lds
scas
dec
pop
mov
xchg
insl
add
push
out
test
mov
lock
mov
negl
mov
loopne
es
jb
adc
xchg
mov
lcall
out
cs
mov
mov
out
mov
or
pop
jp
push
xchg
xchg
sahf
push
push
int3
jns
cmp
popf
jg
std
sub
jns
cmpsb
data16
mov
lea
lahf
and
cmp
sarl
jge
and
xchg
mov
int3
mov
push
aaa
call
pop
xor
sbb
cld
mov
mov
icebp
cld
popa
lds
mov
mov
push
mov
mov
and
fwait
lods
int
dec
inc
or
test
add
mov
in
cmp
arpl
cmp
jle
fdivrl
xor
ja
in
xchg
push
and
scas
or
orl
mov
xorb
sub
shlb
shl
ljmp
cmp
adc
sbb
jmp
loope
cmpl
push
ret
adc
pop
or
imul
fmul
addr16
jp
inc
in
fcomi
jle
xchg
pushf
dec
cmp
xor
test
adc
mov
and
es
enter
cld
ficomps
pop
test
mov
jecxz
popl
lock
or
je
enter
popf
out
mov
inc
push
xchg
adc
mov
dec
daa
xlat
cmp
std
jbe
xchg
out
adc
adc
mov
addl
nop
shrb
push
mov
push
insl
lock
sbb
pop
rcrl
rcll
push
test
fidivrl
addr16
ss
test
jno
test
add
pop
pop
int
xor
adc
push
lret
cmc
xlat
sbb
orb
lods
push
sub
jmp
pop
sub
add
push
inc
test
adcl
icebp
rcrb
jecxz
lds
dec
add
mov
cltd
mov
fldl
xchg
xlat
or
jb
and
filds
pop
mov
mov
enter
mov
lret
sbb
insb
repz
pop
nop
xlat
sub
adc
sub
mov
or
inc
or
dec
lcall
pusha
mov
push
repnz
mov
mov
sbbb
fcmovne
sbb
sbb
scas
leave
lods
add
int
je
jmp
imulb
adc
sub
jecxz
mov
iret
fdivs
loop
dec
jns
jmp
or
and
inc
mov
and
test
outsb
mul
scas
notl
mov
out
notl
push
idivb
sbb
in
jnp
sbb
mov
out
adc
scas
jmp
repz
bound
push
arpl
decl
add
into
lcall
jge
inc
movswl
jg
aaa
lds
orl
mov
in
in
cmc
jecxz
sbb
addb
test
andb
jg
xchg
mov
xchg
cwtl
add
add
lea
fcoml
xchg
fnstsw
insl
imul
dec
stc
lock
mov
add
sub
ja
lret
xor
jecxz
sti
pop
leave
pop
or
pop
jmp
dec
xchg
mov
push
divb
cmc
add
test
push
in
sbb
or
sub
cmp
and
push
jnp
jge
inc
cli
sahf
or
sbb
je
push
jp
xchg
fildll
out
add
xor
inc
push
jns
fsts
lea
pusha
in
fldl
xor
dec
shl
mov
mov
rolb
pop
pop
loopne
mov
mov
push
pop
test
and
stc
bound
cmpsl
xlat
mov
dec
or
je
pop
into
psrlw
dec
lods
nop
and
pop
xchg
jns
stos
push
aad
jg
dec
popa
sub
xchg
in
adcb
testb
pop
fisubrs
fldcw
cwtl
xchg
hlt
jp
mov
nop
push
loop
and
adc
jg
fucomi
pop
imul
movsl
and
inc
dec
mov
push
pushf
cmp
dec
mov
movsb
sbb
aad
pop
inc
push
ret
jg
orb
dec
jecxz
dec
adc
mov
push
pop
test
pop
mov
sbb
in
into
outsb
nop
mov
sub
jns
idiv
mov
in
sahf
imul
bound
notb
in
push
jmp
insl
fists
mov
xchg
aas
stos
test
mov
adc
sbb
lahf
pop
cmp
outsl
cmc
lea
cmp
xor
data16
jae
movsl
rolb
pop
dec
mov
int3
dec
cmp
mov
in
jp
dec
test
rcr
mov
ja
pop
insb
fdivrl
test
mov
and
lret
mov
mov
or
jg
inc
xchg
arpl
jp
fs
sbb
loope
add
push
scas
test
mov
mov
sub
pop
lret
sbb
jmp
insl
lret
ljmp
iret
push
lods
jge
jbe
xor
aaa
inc
pop
xchg
adcl
adc
test
jle
dec
daa
aas
aam
sub
mov
xchg
lock
inc
mov
lods
xchg
imul
cmp
xchg
mov
pop
inc
test
fwait
or
add
pop
xchg
sbb
add
ljmp
mov
add
scas
xchg
dec
aad
inc
push
cmp
sbb
dec
mov
pop
and
push
add
fisubs
jne
mov
xchg
test
or
xchg
push
mov
push
clc
mov
sub
mov
fcoms
fsts
dec
cmp
cwtl
test
in
push
out
push
pop
scas
push
push
shr
inc
cs
inc
rorl
xor
adc
mov
sub
out
mov
fs
popf
loop
push
lods
jnp
inc
ret
mov
out
mov
fcmovu
leave
push
popf
test
stc
xchg
push
sub
xor
nop
mov
inc
sbb
mov
insb
lock
repz
test
es
inc
je
push
dec
mov
mov
xchg
ds
adc
in
mov
mov
push
inc
lcall
nop
neg
pop
lret
push
out
dec
test
rcrl
roll
shl
inc
add
shl
pop
pop
in
mov
sbb
sahf
movsl
pop
cmp
inc
cmp
and
push
or
sbb
xchg
loopne
jecxz
insl
inc
inc
loop
fldenv
xor
sub
mov
addr16
das
pop
popf
int
inc
cltd
cmc
andl
jle
ds
sub
fidivl
sub
jmp
mov
push
jmp
cs
and
clc
and
cmc
bound
mov
insb
or
shrl
sarl
xchg
xchg
cmp
xor
adc
or
jnp
loop,pt
sub
fs
fisttps
outsb
dec
mov
addl
cli
loopne
outsb
sbb
dec
lahf
lahf
cld
aad
mov
insl
fdivl
or
roll
mov
or
bnd
mov
sbb
daa
push
and
je
mov
and
ss
test
inc
lcall
cmc
mov
imul
mov
lea
mov
arpl
faddl
out
push
scas
lods
out
lret
cmpsb
movsl
mov
fiadds
xorb
aaa
sbb
cmp
fadd
fmul
imull
arpl
cmp
js
mov
add
mov
sahf
in
inc
bound
pop
mov
inc
add
mov
push
lret
fwait
lods
shrb
cmpsb
idivb
decb
ljmp
add
cwtl
rcll
loop
mov
mov
ret
ret
lds
lods
jns
dec
dec
inc
push
push
mov
jmp
pop
mov
mov
shrl
or
jle
imul
gs
inc
aam
mov
imul
cwtl
dec
les
call
pop
and
dec
mov
ds
dec
mov
push
int3
inc
sbb
dec
jns
sub
xor
sahf
inc
outsl
dec
addr16
xchg
aas
xor
mov
mov
jnp
and
adc
dec
jo
and
adcb
test
mov
xchg
mov
repz
test
loop
pop
or
and
ficompl
pop
std
xor
fisubrs
mov
dec
cs
ror
out
mov
and
dec
or
mov
out
or
mov
daa
int3
sysret
inc
popf
xchg
mov
testl
dec
dec
push
std
add
jecxz
mov
adc
fsts
stos
cmc
jno
mov
xchg
jne
cmp
sbb
cmp
mov
in
rclb
scas
mov
test
xchg
mov
sti
stos
sbb
dec
add
or
mov
pop
lods
push
mov
mov
push
mov
data16
call
fdivs
dec
in
dec
xlat
push
push
ds
or
pop
cmp
and
sub
push
fs
sahf
pop
push
in
xor
cmp
imull
jbe
mov
lret
test
fwait
sbb
jbe
inc
jnp
mov
inc
mov
adc
iret
pop
repz
ret
bound
fcoms
leave
dec
jecxz
scas
test
xchg
push
xchg
xchg
sbb
lods
inc
movsl
clc
xchg
mov
out
repnz
push
and
insb
icebp
push
test
push
jbe
lods
cmp
adc
cmp
dec
or
mov
xchg
sub
push
out
sti
imul
jmp
fwait
loope
lock
xor
in
sbb
ljmp
xor
lahf
fstpt
ficomps
stos
pop
xchg
scas
pop
mov
test
push
fwait
and
cmpsl
aad
xchg
js
mov
pop
mov
jmp
sbb
adc
lock
lret
lret
shlb
add
jge
pusha
mov
addr16
repz
loope
das
outsb
lret
loopne
ret
divl
lret
cltd
ret
or
outsb
inc
mov
sbb
pop
mov
lahf
into
adc
rcll
push
sbb
xchg
mov
aam
add
movsl
cmpsl
xchg
xchg
dec
inc
cmp
ljmp
or
mov
mov
lds
ret
sar
push
xchg
pop
scas
or
sbb
jg
lahf
inc
jle
in
jmp
mov
sahf
int
ror
pop
jo
imul
adc
jne
sbb
mov
lcall
aas
push
lret
insb
adc
add
cli
fistps
add
test
pushf
mov
and
and
addb
adcb
andb
lea
xor
dec
movsl
adc
adc
push
fs
sbb
xchg
or
lret
out
popf
test
mov
ds
add
cmpsb
push
lods
stc
iret
ss
cmc
inc
mov
push
fidivs
mov
jnp
js
push
movsb
pop
xor
cmp
sub
jnp
shrl
xchg
hlt
dec
iret
lds
rorl
sbb
mov
xchg
pop
push
pop
rol
sahf
jo
into
xor
sarb
gs
pop
xorb
pop
imul
daa
fisttpll
push
xchg
outsb
inc
imul
fcmove
pop
ja
mov
les
pop
aad
add
inc
int
adc
jecxz
inc
sbb
insb
roll
xchg
out
jb
insb
mov
sbb
mov
push
shlb
je
jne
jge
insb
mov
push
xor
fmull
out
outsl
sub
inc
cwtl
aaa
lds
int
clc
movsl
iret
push
cmp
pusha
rclb
in
scas
sbb
mov
mov
ficoms
data16
xor
xchg
mov
test
mov
add
mov
dec
call
push
cwtl
scas
xchg
test
cmc
mov
mov
test
mov
out
std
pop
push
dec
sbb
and
sbb
sbb
scas
or
pop
xlat
lahf
push
fchs
lods
dec
lret
push
cld
outsb
pop
sub
in
ds
push
adc
or
cmpsb
lcall
repnz
mov
ret
mov
jo
mov
rcll
jae
sub
repnz
mov
mov
sub
pop
sub
inc
mov
sub
mov
mov
lcall
xchg
or
mov
xchg
imul
dec
push
arpl
push
pusha
cmp
inc
add
add
ret
push
inc
in
icebp
add
test
addl
loop
aaa
pop
and
mov
dec
mov
dec
mov
add
stc
mov
push
rcll
dec
push
inc
subb
aam
ljmp
aam
rorb
xor
push
xchg
loop
add
iret
push
mov
out
scas
mov
adc
lea
lock
dec
push
sbb
mov
aas
push
sarb
test
push
int3
dec
jns
sbb
mov
lock
aam
mov
loop
pop
loope
adc
inc
dec
aam
xor
push
mov
xor
xor
leave
adc
xchg
push
mov
cmp
lret
fmull
xlat
out
aas
inc
dec
loope
jp
stos
sub
push
mov
inc
out
jbe,pt
cmp
xchg
mov
dec
dec
xchg
pop
pop
cld
or
mov
out
test
sbb
imul
mov
jmp
mov
lahf
insl
cwtl
pop
sbb
popf
popa
add
jmp
outsl
sbb
call
in
dec
sub
xor
bound
enter
inc
es
out
push
and
pop
cmc
data16
xor
je
out
imul
imul
sti
rorb
test
aaa
or
cmpsb
push
add
rcll
dec
into
fstpl
xor
pop
imull
push
add
jne
js
push
shll
xchg
xchg
push
stos
sub
push
js
adc
adc
in
pop
mov
frstor
cwtl
test
outsl
cmp
outsb
iret
gs
bound
icebp
pop
gs
jb
push
push
fwait
jo
sbb
test
jecxz
mov
sbbb
sub
adc
push
mov
xchg
cmc
jnp
fwait
je
push
mov
cmp
ror
nop
shrl
push
push
pusha
push
mov
cmc
or
test
mov
add
or
xor
cmp
ljmp
loopne
inc
jl
pop
jle
cmp
rcrl
add
lcall
popa
jno
cmp
add
loopne
pop
push
jp
test
inc
mov
or
push
pop
sbb
ds
sbb
add
pusha
sarb
sbb
sub
pop
addl
jmp
jae
nop
icebp
dec
xchg
and
in
in
mov
push
dec
mov
pop
sub
sub
cli
and
mov
mov
fisubrs
lock
ficompl
pop
pop
jbe
adc
mov
xchg
mov
push
inc
stc
inc
movsl
cmpsb
mov
mov
insb
xor
icebp
push
repnz
sbb
xor
scas
stc
lea
xchg
jge
test
and
clc
fnstsw
xchg
movsl
popf
repnz
ja
call
adc
add
jg
add
mov
sbb
js
scas
xor
cmp
push
jle
inc
inc
imul
sub
xchg
and
rcrl
aam
fadds
mov
mov
enter
stc
and
xor
daa
in
sbb
nop
xor
test
jge
es
fsubrl
xor
mov
mov
sub
lods
test
aam
popf
and
mov
add
or
sbb
std
pop
sbbl
movsl
jge
inc
notl
xor
jno
sbb
aaa
xlat
mov
adc
gs
mov
call
xor
aas
icebp
pop
fs
dec
jae
xor
mov
push
jo
mov
cld
sahf
sbb
or
add
ss
test
sarl
int3
mov
aaa
xor
cmp
push
inc
mov
loop
arpl
adc
leave
mov
out
ds
pop
pop
xlat
xchg
inc
dec
jecxz
lds
inc
cmp
xchg
test
out
jmp
xor
in
enter
pop
pop
inc
das
stos
dec
cmc
ss
jbe
mov
cli
mov
int3
icebp
or
leave
sbb
repnz
shll
repz
xchg
inc
shr
iret
rcrb
sub
imul
xchg
pop
dec
mov
out
dec
pop
or
lea
xchg
scas
push
cli
and
mov
ret
inc
sub
xchg
jp
push
mov
sub
flds
xchg
fcompl
movsl
adc
jno
leave
push
fmul
iret
repnz
fldln2
ss
les
lock
popa
push
xor
push
pop
mov
inc
out
cs
push
addl
jno
pusha
push
into
pop
push
xor
imul
loope
lahf
jae
rorl
adc
xchg
push
jne
lea
push
sahf
xchg
ficoml
pusha
jmp
xchg
insl
lods
pop
fsubl
outsl
push
ss
xchg
lds
mov
aas
fists
or
or
int3
add
jl
imul
nop
push
dec
js
push
aad
fcomi
std
stos
and
pop
lret
add
pop
adc
push
loope
jl
mov
loopne
cmpsb
or
jns
cmp
adc
movsb
stos
cmp
sub
out
shl
pusha
clc
or
enter
push
or
rep
inc
repnz
jae
fs
sbb
fwait
mov
sub
adc
sbb
push
sub
mov
ja
das
test
pusha
aas
cmp
inc
pop
cmpsl
loope
jp
mov
xchg
push
pop
call
pop
std
cmc
jae
mull
xchg
aas
int
es
cli
mov
mov
loope
sub
mov
mov
mov
mov
pop
fidivrs
xchg
push
adc
jmp
iret
rorl
ljmp
push
push
clc
scas
xor
fs
sub
xlat
and
pop
into
xchg
je
inc
jmp
mov
test
xorl
xchg
mov
and
mov
aas
aas
repz
xchg
sub
cld
test
hlt
das
add
jle
stos
roll
xchg
adc
jne,pt
cmovb
ret
std
cmp
sub
jne
mov
mov
stos
clc
pop
orl
pop
push
cmp
movsl
xchg
mov
pop
xchg
outsb
stc
and
lahf
out
stc
in
cmpsl
ja
or
dec
scas
push
mov
xor
bound
dec
sbb
jb
movsb
xor
add
repnz
cmc
fcompl
xchg
out
aaa
push
add
pop
mov
jmp
shll
xlat
add
cmp
adc
xchg
in
out
addl
push
mov
scas
sub
xor
subl
popa
rcll
mov
jnp
lret
les
pop
add
and
pop
cmp
mov
cmp
imul
and
xor
cltd
ficomps
and
neg
addr16
add
ret
jmp
cmc
xchg
xor
and
inc
jp
mov
dec
sbb
aad
jnp
mov
ds
rorl
lea
mov
out
aas
xchg
cmp
add
sbb
shll
nop
xor
es
lcall
push
je
or
roll
fldt
mov
xchg
movsb
xchg
mul
sub
mov
gs
xchg
jle
xchg
fsubs
imul
push
orl
push
out
int3
adc
call
jp
push
cmp
popa
ret
lret
sub
nop
dec
push
je
imul
sti
sbb
or
lahf
mov
or
or
or
aaa
rolb
push
pop
fs
or
mov
cmp
push
pop
sub
test
sbb
xor
jle
cmp
mov
lods
aas
popl
lods
call
aaa
cmp
xor
outsl
nop
rcrl
cmp
inc
sbbl
sbb
movsb
shlb
out
lock
jg
pushf
dec
inc
jmp
imul
jnp
fwait
aad
fmuls
js
movsl
jns
hlt
add
lods
mov
rol
xchg
sbb
cli
ds
push
xor
push
shll
fnsave
hlt
stos
cld
add
out
adc
or
inc
mov
lock
cmp
xor
neg
mov
add
sbb
mov
dec
shrl
jo
ret
add
aad
ss
leave
shrb
inc
ret
sub
sub
jg
daa
loopne
xchg
or
pop
xchg
sahf
es
sub
loope
sarb
xor
andl
in
cltd
frstor
mov
inc
jmp
dec
mov
lea
adc
mov
inc
pop
jg
mov
popl
add
sbb
aaa
repnz
mov
xlat
cmc
adc
push
dec
inc
or
push
pop
add
cmp
je
jnp
adc
cmp
dec
inc
and
dec
dec
cmp
and
scas
movsb
cmp
sbbb
gs
cs
mov
push
pop
fsubs
mov
xor
xor
push
cli
imul
sarb
jmp
and
out
rclb
adc
stos
pandn
sti
out
jbe
sub
push
pusha
inc
mov
shl
jecxz
aam
fisttps
push
stos
dec
aam
flds
aad
fisubrs
sub
push
outsb
daa
jmp
mov
fdivrl
pop
pop
or
test
cld
mov
das
stc
lret
daa
rolb
or
icebp
pop
push
in
sbbl
or
aas
mov
cmp
sahf
fcmovnu
adc
pop
je
sbb
lahf
inc
add
sub
mov
pop
loopne
daa
inc
xchg
jne
mov
dec
jp
and
in
fstps
cmp
sahf
dec
fsubs
nop
xor
mov
aam
adc
out
mov
or
icebp
out
or
lods
push
dec
jo
sarl
pop
add
mov
adc
movsl
add
push
add
dec
mov
lods
adc
push
inc
cmp
cmpsl
out
les
leave
in
addr16
xor
stc
mov
xchg
cmc
lods
adc
mov
imul
testb
scas
sbb
or
fs
je
inc
fldcw
lds
mov
fwait
int
mov
mov
subb
mov
in
test
mov
rorb
jle
xchg
lret
mov
into
in
mov
andb
add
ret
imul
lods
mov
or
cmc
ljmp
cmp
aas
lea
xor
loop
pusha
mov
jle
cli
es
les
xor
pop
mov
sbb
cltd
add
inc
addl
pop
xchg
jle
stc
mov
hlt
in
sbb
inc
jb
sub
ds
ret
subb
jb
push
aas
or
push
jne
cmp
push
daa
jmp
cmp
out
shrl
or
movsb
jmp
dec
mov
xchg
out
jnp
imul
cld
ljmp
mov
jp
mov
dec
das
imul
and
inc
pop
cmc
cld
xor
adcl
mov
aam
dec
jge
add
outsb
or
imul
add
pop
pop
aas
pop
icebp
lret
testb
icebp
xor
push
decb
lea
push
add
mov
loopne
xchg
jle
pushf
dec
mov
movsl
mov
cld
sti
insb
repnz
je
dec
ja
inc
repnz
push
xlat
xchg
cmpsb
xchg
jl
mov
pop
ficomps
cld
inc
pop
or
dec
pop
dec
je
cmp
sahf
lret
rolb
push
pusha
xor
shr
int3
pop
pop
mov
push
aas
or
fcompl
cltd
ret
into
cmp
popl
cmc
outsl
mov
mov
mov
mov
sbb
add
std
mov
and
sub
push
mov
fsubrs
sub
cmp
in
pop
pop
pusha
cmp
in
repnz
and
sub
adc
stos
jl
jo
jle
pusha
cmp
shrl
push
jg
std
ljmp
mov
fxch
dec
enter
dec
cmp
fnstenv
mov
or
mov
pushl
lea
rcrb
cwtl
xchg
gs
out
xchg
test
push
inc
clc
inc
inc
and
cbtw
push
add
lret
lcall
dec
push
mov
daa
enter
pop
test
add
ljmp
push
mov
dec
inc
ss
and
inc
pop
push
sti
push
shrb
jmp
pop
push
mov
lahf
ret
and
test
dec
aam
sti
adc
adc
adc
mov
mov
jne
imul
iret
sbb
adc
and
mov
push
sbb
aas
cmc
cmp
push
fistpl
fiadds
and
mov
test
dec
loop
fdivr
jmp
addr16
add
gs
jns
fstpt
and
mov
xchg
mov
popf
push
adc
inc
pop
or
sbb
push
in
mov
adc
pop
sti
push
mov
push
adc
addr16
fcmove
cmp
mov
adc
xor
add
vpaddsw
in
or
mov
sub
outsl
mov
out
sub
cld
imul
push
shrb
xchg
pushf
out
sub
adc
adc
scas
addl
cs
mov
cmp
push
fdivrl
lcall
icebp
in
add
mov
mov
out
imul
outsl
mov
cs
dec
popf
xor
das
jle
or
mov
icebp
adc
mov
mov
sbb
mov
test
adc
xor
mov
dec
xlat
nop
sub
add
mov
sbb
mov
mov
aaa
mov
cli
push
fs
mov
lret
lret
cmpsl
out
mov
cwtl
push
es
push
xchg
scas
stos
sbb
cs
add
and
sbb
xchg
repz
lds
mov
arpl
lret
mov
dec
cmp
mov
outsl
mov
das
enter
clc
fistpl
ljmp
push
push
cmpsb
jmp
call
push
fldt
ret
mov
push
or
fmul
movsl
lea
sub
cmpsb
mov
movsl
enter
cmc
js
pop
add
and
nop
ficompl
mov
adc
movsb
sub
push
xchg
lret
jl
divl
sbb
aam
mov
mov
and
icebp
rorb
cmpsb
bound
mov
ds
sub
dec
stos
cmpsl
xor
popa
jb
pop
push
pop
xchg
mov
mov
and
mov
push
fistpl
mov
int3
jb
pusha
mov
ja
ret
lahf
sbb
jno
add
xor
lcall
jae
jbe
lahf
cmp
jae
or
shlb
lds
jg
pop
xor
mov
punpcklwd
mov
xor
or
cli
xchg
jb
and
xchg
jae
mov
push
dec
or
mov
or
and
lret
test
pop
insl
sbb
mov
cmp
int3
cwtl
outsl
fwait
outsl
repz
jo
push
addr16
sub
hlt
enter
mov
xor
pop
dec
ja
pop
pop
mov
sbb
mull
or
mov
jl
in
jb
add
pop
stc
mov
mov
testb
das
push
test
or
jecxz
sub
nop
aaa
inc
aaa
mov
sbb
mov
insl
pop
aad
and
aas
fwait
inc
and
cmp
jmp
in
js
mov
inc
cs
or
cld
push
enter
xor
dec
jecxz
inc
xchg
loopne
jno
mov
addb
mov
scas
mov
sub
repz
scas
jbe
pop
sti
fidivrs
mov
rcrb
test
std
dec
int
lcall
daa
bound
adcb
lock
repnz
push
and
dec
mov
outsb
push
arpl
cmpsb
xchg
dec
mov
dec
jo
lahf
les
popa
in
inc
jbe
jns
arpl
adc
rorl
rcll
inc
adc
aad
jno
cwtl
orl
fwait
sbb
lcall
xchg
cwtl
sti
xchg
or
jno
push
mov
mov
leave
daa
clc
pop
cmp
mov
ljmpw
xlat
and
mov
in
jae
xchg
mov
pushl
lods
and
jne
xchg
sub
sbb
pop
jle
mov
mov
inc
adc
mov
add
push
fwait
mov
push
loope
popa
je
sub
dec
xchg
push
dec
stos
sbb
xor
nop
cltd
scas
or
cmp
inc
sub
scas
mov
fadd
lds
ret
push
lcall
mov
movsbl
in
push
imul
pop
dec
in
sahf
and
outsb
inc
jge
sarb
inc
stos
out
ja
lea
lds
dec
push
add
mov
mov
or
adc
in
mov
cli
mov
loopne
enter
js
cli
into
push
push
mov
mov
mov
fs
mov
fstp
cmpsl
push
jle
push
jg
sbb
inc
icebp
jp
mov
dec
or
scas
add
shrb
das
jg
sbb
mov
mov
out
in
jne
sub
add
xchg
test
push
sbb
lock
into
jne
jl
fcomp
outsb
cmp
sub
mov
and
sahf
jg
jne
cmp
fwait
xor
jmp
add
inc
std
in
mov
pop
xor
leave
mov
jl
rolb
ljmp
mov
cmp
mov
pop
mov
push
sub
cmc
out
push
add
mov
mov
test
bound
or
or
enter
sbb
call
pushf
movsb
scas
cli
jp
inc
movsb
cli
aam
xchg
clc
add
dec
xchg
jnp
mov
xor
and
decl
gs
sub
mov
repz
fildll
mov
pop
adc
sbb
mov
cmpsb
divps
in
arpl
repz
fimull
mov
pop
xchg
mov
mov
jg
dec
loopne
pop
mov
dec
sub
add
scas
cmp
sub
pop
inc
out
push
dec
add
popa
shrl
inc
dec
inc
jecxz
int
dec
jg
cmove
cmp
mov
fisttpl
mov
jno
out
pop
les
cli
jl
mov
or
mov
cmp
testl
popa
jecxz
outsw
pop
repz
addb
mov
nop
inc
or
mov
sub
mov
and
sub
scas
cltd
stc
add
pop
inc
mov
cli
repnz
xchg
pop
xor
sub
ja
cmp
testb
xchg
out
call
adc
push
sub
in
sub
test
inc
mov
pop
enter
cld
dec
rcrl
cmp
lds
out
mov
out
aam
mov
dec
int
cmp
push
sarl
push
mov
je
test
sub
xor
sbb
cli
mov
ret
inc
mov
aam
adc
idiv
jl
int3
insb
dec
in
fstpl
and
xchg
or
out
out
or
movsl
popf
push
mov
or
jne
inc
cs
jbe
jb
push
xor
xchg
lret
loopne
loope
movsl
mov
stos
xchg
inc
in
dec
and
into
or
xchg
cmp
cld
jmp
ds
and
sub
and
jnp
push
fdivl
jmp
and
repnz
xchg
pop
lea
je
arpl
jns
test
pop
mov
xchg
pusha
gs
jg
push
cmp
push
cs
lock
insl
mov
sarb
into
and
bnd
mov
mov
fisubl
cmp
cmpsl
add
scas
push
push
je
lods
dec
sbb
sub
loope
stc
repz
jmp
out
sbb
mov
fsubl
das
adc
je
fwait
and
movsb
ja
push
je
sbb
xchg
aad
test
mov
shll
icebp
sti
andb
sub
sbb
std
mov
mov
sbb
call
push
hlt
or
dec
dec
decl
call
xchg
xor
jecxz
mov
adc
fnsave
sbb
scas
dec
dec
insb
mov
push
add
aad
adc
sub
rcl
andb
fistl
inc
orl
sub
jmp
pop
mov
pushf
in
cld
push
movsl
mov
addl
imul
mov
xchg
sbb
movsl
cltd
cmp
les
mulb
jg
push
cmp
sub
stos
xor
shll
sbb
into
mov
and
les
dec
push
ucomiss
insl
mov
mov
xor
je
xchg
or
mov
dec
or
cs
inc
xor
shlb
scas
scas
sti
out
jecxz
js
lahf
lret
mov
push
mov
insb
or
imul
jle
jae
divl
mov
cld
add
stos
sub
scas
or
ret
xlat
lods
lea
jg
pushf
sahf
mov
imul
xchg
pop
pusha
outsb
rorl
jae
cmp
cld
movsb
call
sar
pushf
pusha
arpl
jb
addr16
in
mov
jbe
or
cltd
rep
aaa
repz
xor
sbb
xchg
mov
push
cltd
xlat
mov
jle
lods
jmp
ja
mov
xor
shrb
adc
fdivs
jg
dec
or
inc
lods
xchg
dec
scas
push
jnp
sbb
lret
stos
lahf
fisubs
divps
xor
es
xchg
push
inc
addr16
scas
jg
mov
ljmp
iret
adc
mov
test
rorb
mov
mov
or
dec
mov
daa
fs
and
cmp
lcall
insl
adc
int3
mov
push
cmp
pushf
add
je
pop
test
ret
xor
test
mov
aaa
push
pop
mov
cmp
xchg
dec
xchg
shrb
or
jge
xor
pop
cld
repnz
add
inc
mov
sub
mov
mov
pop
or
test
xchg
lds
jmp
call
mov
push
aam
dec
push
inc
pop
xor
xchg
jno
loopne
fdivp
or
imul
xchg
stos
test
test
ss
std
xchg
cmpsb
test
je
xor
sub
cmc
cmp
push
dec
in
push
cmp
lret
in
push
insb
push
fisttps
sar
adc
sbb
xor
cwtl
xlat
imul
sbb
test
ret
iret
lret
mov
gs
push
jge
or
pusha
rcrb
mov
xchg
pop
movsl
mov
ljmp
adc
adc
sbb
mov
pop
fbld
mov
test
push
lds
push
sub
adc
shrl
das
out
mov
orl
fsubs
out
cltd
cwtl
push
les
gs
xchg
icebp
mov
xchg
std
pushf
push
jb
push
sahf
inc
data16
out
je
outsl
in
dec
int3
sti
stos
xlat
sbb
fsubrl
jno
pop
dec
fidivrl
add
cmp
mov
enter
xchg
insb
daa
push
shlb
insl
jg
mov
andl
in
jnp
inc
xchg
pop
cmp
movhps
sub
mov
sbb
add
mov
pop
xchg
pop
xor
in
imul
andl
lds
pop
testl
jae
cmp
lds
pop
jbe
and
jnp
scas
fcoml
sub
lds
es
hlt
stos
mov
or
jmp
shrl
xor
sub
repnz
je
xchg
add
dec
and
aaa
jle,pn
xor
nopl
sti
push
dec
mov
shll
mov
jae
aam
fistpll
pusha
mov
insb
jp
xchg
in
add
push
sub
inc
adc
xor
in
imul
hlt
lret
jmp
aas
fisubl
or
stc
out
push
jno
cmp
cmpsl
popf
adc
push
xchg
inc
cmpsb
sbb
loop
sub
xchg
sbb
test
js
filds
dec
add
test
into
clc
lret
and
ds
xchg
adc
push
rolb
sti
mov
fwait
inc
cld
add
push
adc
mov
xchg
imul
mov
sub
sbb
aas
fs
int3
loop
dec
adc
sub
sbb
gs
dec
and
iret
or
cli
stos
ret
idiv
push
adc
decl
mov
lret
imul
ljmp
rorb
iret
cs
lock
mov
xchg
push
sbb
test
xor
mov
rcrb
popa
out
lret
imul
adc
and
rolb
rclb
popa
cwtl
cmp
test
mov
jge
ds
sub
or
jge
or
icebp
insb
dec
mov
pop
and
popa
push
or
das
cmpsb
xor
lea
mov
sub
dec
loop
cwtl
stos
lcall
mov
adc
inc
push
jnp
push
hlt
cld
adc
push
lds
jb
in
mov
and
aas
sbb
js
cmp
into
sahf
hlt
sub
pop
inc
or
dec
jae
rorl
call
jecxz
ficoml
les
sahf
or
mov
test
pop
push
adcl
testl
pushf
fwait
lret
xor
push
aam
inc
fisttpll
cmp
xchg
pop
mov
xchg
sbb
sti
pop
mov
test
xchg
add
mov
sahf
hlt
cmp
adc
pop
dec
lods
ss
mov
dec
cltd
in
clc
jp
rcll
jg
sbb
int
xor
lret
in
xor
and
loopne
bound
ja
loopne
xor
dec
push
inc
mov
xchg
jae
pop
jge
lods
repnz
jmp
aam
out
xlat
lds
or
xor
sbb
mov
jno
or
jbe
mov
push
and
sti
adc
pop
jmp
mov
dec
mov
insl
or
inc
fisubrs
cmpsl
push
nop
cld
and
dec
or
push
fdivp
mov
push
dec
in
pop
xchg
stc
push
mov
into
je
jge
loopne
jecxz
pop
mov
test
and
xor
pusha
clc
jl
andb
mov
pop
sahf
imul
add
dec
ljmp
or
push
inc
add
xor
sub
outsl
add
fistl
rclb
xchg
mov
inc
aad
mov
js
pop
int3
lahf
mov
jg
out
js
aas
popa
lea
movsl
repnz
shrb
pop
jmp
pop
in
jae
push
jno
cwtl
les
xor
add
lret
jmp
xchg
in
insb
jo
hlt
scas
add
out
pop
clc
mov
bound
xchg
adc
fnsave
es
sbb
or
adc
jge
push
mov
mov
inc
mov
dec
addr16
dec
pop
les
push
sbb
inc
mov
push
jmp
or
mov
pop
sub
shlb
adc
pop
pop
push
push
movsb
movl
jg
ret
mov
dec
in
aam
mov
pop
lahf
push
push
movsb
and
lock
cltd
jns
mov
mov
jp
push
xchg
jb
repz
je
mov
shrl
push
sbb
xor
aas
add
aam
inc
adc
icebp
mov
dec
fcomp
nop
aad
mov
enter
loop
pop
xchg
add
arpl
stos
and
push
mov
je
xchg
cmp
cmp
aam
leave
into
lods
jp
loop
in
fildll
sahf
lahf
and
sub
adc
sub
mov
or
loopne
cmp
jnp
push
insb
push
movsb
inc
imull
dec
cmp
cld
mov
out
mov
aam
mov
nop
int
cmp
jecxz
fsubp
push
out
jbe
jb
xor
push
dec
cmc
pop
cwtl
or
jg
sbbl
sbb
push
movsb
cmp
ljmp
lds
and
mov
mov
hlt
or
inc
pop
out
push
jmp
xor
mov
lahf
jne
movsl
loop
dec
ret
jmp
mov
out
inc
jge
loop
test
lock
imul
or
test
test
cld
aad
push
loopne
sub
add
mov
or
xchg
and
mov
int3
pop
pop
test
xor
pop
or
test
push
adc
dec
cltd
fnstsw
sarb
ljmp
adc
sub
xlat
sub
inc
jp
push
mull
dec
les
adc
pop
bound
jge
jg
inc
lock
movsl
push
test
int
sbb
stos
repz
rorl
outsb
mov
cltd
loope
out
pop
popf
popf
jle
in
or
movsl
mov
sub
out
cwtl
js
xor
mov
rorl
mov
mov
mov
adc
inc
les
cmp
inc
ljmp
decl
aad
push
pop
pusha
or
lock
insl
scas
mov
push
jge
pxor
outsl
jns
adc
movsb
addb
xchg
sahf
mov
push
xor
push
cmc
xor
insl
call
ljmp
icebp
mov
rcll
pop
xlat
shrb
jg
ret
lcall
pop
or
inc
jge
xor
je
cmpsl
mul
mov
adc
cmp
pop
les
mul
int3
push
jle
jno
or
add
mov
sahf
cmp
or
push
dec
out
dec
lock
sub
mov
insb
shlb
lret
out
dec
out
push
popa
push
out
aad
adc
dec
cmp
aas
out
enter
out
mov
jp
xchg
mov
lods
int3
dec
sbb
stos
xchg
popf
shll
xor
fistl
cmp
xchg
addr16
pop
inc
xchg
arpl
inc
push
mov
jns
pop
push
jo
mov
mov
int3
and
fsubrl
mov
fildl
dec
or
inc
in
test
xchg
lods
loop
rcrl
push
mov
xor
addr16
cmp
sahf
das
nop
mov
aam
inc
add
in
imul
fyl2xp1
dec
iret
aad
push
inc
ds
push
hlt
jge
jne
fdivl
jno
add
push
jne
fcmovnbe
xchg
xor
mov
inc
jl
mov
and
in
jne
cmpsl
filds
aaa
std
adc
call
gs
pusha
dec
out
pop
mov
push
jne
gs
ja
sub
stos
dec
cmp
inc
pop
fcmovb
clc
loopne
negb
into
cli
jecxz
lcall
out
cmp
aad
stos
ret
lods
push
faddl
or
ljmp
xlat
lods
lods
divl
adc
ret
and
xor
jg
popf
sahf
and
dec
inc
in
push
jmp
pop
push
xchg
jbe
in
dec
js
xlat
mov
dec
aaa
ja
sbb
cmc
push
pop
stos
sbb
out
sub
mov
and
stc
ds
outsb
pop
js
mov
in
mov
out
and
sub
mov
stos
mov
lds
sbb
fldenv
push
test
sbb
in
jge
popa
rcr
adc
movsl
mov
mov
ss
mov
cmp
sti
scas
idivl
lds
mov
push
mov
idiv
jbe
pop
mov
scas
std
cmp
sub
icebp
jbe
sub
in
xchg
mov
jge
gs
repnz
jg
lea
test
imul
loopne
mov
inc
iret
cmc
and
cli
mov
iret
scas
arpl
sahf
dec
mov
adc
stc
lods
push
xchg
cltd
int3
iret
cmp
fildll
test
ss
aas
out
lock
cmovge
cmc
inc
out
fiadds
cmp
into
push
fildll
xchg
repz
inc
mov
in
popa
popa
std
and
push
jb
loopne
subb
pop
dec
ja
inc
enter
pusha
call
adc
cs
bound
enter
aad
mov
dec
lahf
loop
push
or
pop
add
cmp
lea
push
add
repnz
or
iret
inc
in
or
mov
mov
test
subb
push
sbb
ja
sbb
inc
cwtl
pop
bound
and
imul
lods
data16
aas
out
cmp
push
xchg
sub
jmp
sbb
das
movsl
pop
bound
stos
adc
daa
mov
mov
notb
sbbl
add
out
inc
jnp
xor
arpl
xor
xor
stc
mov
pop
decl
scas
ficoml
pop
mov
dec
call
into
push
out
jl
in
test
inc
jbe
push
icebp
cld
pop
dec
inc
icebp
xor
sbb
add
dec
fistps
movsb
pop
cmp
out
roll
int3
push
mov
xor
xorb
sub
push
incl
addr16
out
xchg
mov
inc
pop
aaa
add
jle
filds
std
mov
and
es
stos
push
jae
xchg
push
fsubr
sarl
sbb
sub
xchg
cmp
lods
pop
mov
ss
ret
adc
adc
inc
cmp
dec
test
addr16
add
mov
lods
arpl
outsb
mov
sbb
jp
pop
insb
popf
push
xchg
cli
adc
aam
cmp
sar
add
and
mov
call
stc
sbb
loopne
lods
test
cmpsl
repz
pop
aam
mov
andb
rolb
stos
adc
cmp
pusha
sarb
xor
cmpsl
int
mov
adc
popa
adc
mov
in
das
xor
addr16
fisubrl
adc
adc
into
je
lock
lock
lcall
imul
dec
mov
mov
mov
cltd
pop
shlb
and
sbb
bound
rcrb
in
push
push
repz
aad
add
xor
popa
shll
bound
mov
push
pop
mov
cmp
int
mov
nop
pop
and
and
inc
out
cmpsb
int3
xchg
fadd
dec
divb
sub
iret
jmp
hlt
outsb
xchg
and
pop
adc
aam
call
mov
test
cmp
push
inc
ret
repz
push
cmp
and
mov
jmp
ljmp
lret
add
pop
fidivrl
cmc
xor
xchg
adc
imul
ss
stos
jno
fsub
popa
or
mov
pop
mov
daa
jecxz
add
jmp
popa
jns
pop
inc
imul
jge
in
movsb
test
scas
loopne
adc
out
xor
pop
cltd
cwtl
stos
or
test
jp
rcr
mov
leave
xchg
hlt
push
push
clc
sub
out
and
pop
popa
cs
jmp
popf
repz
jmp
mov
out
test
xlat
cmp
mov
mov
mov
bound
jnp
fwait
cltd
mov
mov
and
in
adc
sub
pop
movsb
ret
insb
mov
jmp
mov
xor
flds
outsb
pop
mov
xor
test
ja
lods
dec
das
dec
repnz
shr
xchg
sbb
cmp
sub
jg
fs
inc
icebp
popa
lea
lahf
scas
nop
mov
imul
mov
lret
imull
xor
xor
mov
xchg
pop
xchg
mov
xor
insl
mov
lahf
inc
sub
cmpsb
mov
mov
adc
dec
and
or
bound
test
add
xchg
push
cmpb
addr16
mov
cmp
mov
sub
sbb
leave
ret
jae
and
and
mov
in
cld
sbb
adc
gs
mov
cmpsl
shrb
jg
inc
inc
adc
test
or
out
sti
or
loop
jae
stc
or
mov
sub
xchg
icebp
inc
sub
sbb
mov
jae
pop
sub
mov
insb
fldt
movsl
adc
ret
arpl
in
out
adc
push
inc
or
outsl
add
lods
sub
pop
jecxz
outsl
jg
pop
jge
addl
rolb
xchg
pop
sub
mov
sbb
popf
mov
pop
mov
jnp
rcrb
sbb
inc
and
sahf
push
enter
push
inc
out
or
ljmp
stc
sub
jae
clc
mov
push
mov
adc
hlt
mov
ret
test
aad
mov
add
and
mov
fs
dec
fidivrs
addr16
inc
add
sti
jle
push
jae
fwait
ds
mov
pop
arpl
xchg
push
lods
int3
imul
or
and
cmp
and
dec
adc
and
dec
sti
mov
xor
lea
mov
cli
cli
dec
popa
pushf
dec
add
je
push
mov
or
xchg
popf
xchg
jg
adc
sub
subb
push
outsb
mov
mov
xor
imul
aas
test
adc
gs
arpl
hlt
jne
test
pusha
fs
pop
ljmp
popa
inc
xchg
clc
pop
or
inc
jmp
mov
cmp
xor
sbb
lods
xchg
and
stos
push
cmp
leave
jge
sub
sbb
aad
jp
jmp
inc
repz
mov
dec
add
mov
aam
mov
inc
add
adc
test
cmp
out
cwtl
sbb
jl
setp
push
mov
push
and
jle
int3
in
mov
inc
stos
sbb
cmp
sub
outsb
jbe
xor
cmpsl
xorl
jns
popa
out
mov
cmp
data16
mov
dec
or
dec
mov
add
sub
in
pop
mov
leave
jge
push
or
push
push
pop
aam
jnp
andl
sbb
push
push
mov
dec
cmp
adc
mov
cld
jecxz
iret
and
aaa
fbld
jle
add
shr
mov
and
dec
repz
or
push
les
adc
loopne
aad
neg
add
or
call
pop
scas
in
and
fwait
or
inc
jecxz
xor
call
cmc
pusha
stc
mov
pop
movsl
mov
fwait
leave
imul
data16
pushf
loopne
sbb
dec
push
xchg
add
pusha
test
cmp
sub
mov
mov
push
subb
mov
mov
loope
jb
data16
inc
out
xchg
outsb
lods
mov
rcll
and
shrb
pop
push
pushf
lock
adc
xor
cmp
scas
popl
jge
mov
dec
jp
inc
ja
into
out
imul
fwait
clc
sar
loop
mov
lcall
mov
pop
lahf
xor
rorb
insb
rcll
dec
mov
mov
cmpsb
or
adc
and
cmp
je
nop
inc
pusha
mov
sbb
sbb
dec
lret
inc
daa
aad
lcall
ss
push
adc
addr16
lods
into
outsl
nopl
std
pop
mov
mov
or
xor
cmp
mov
add
or
xchg
adc
ror
jno
mov
sbb
dec
push
cs
fstps
addr16
mov
ds
fildl
dec
push
push
pop
or
jp
jmp
jne
fcomps
stc
or
lret
sbb
mov
out
cmp
inc
mov
and
push
adc
mov
mov
into
xlat
mov
mov
test
aaa
xor
aas
mov
or
out
ret
shlb
jnp
mov
std
fnstcw
sub
xchg
mov
xor
mov
js
pop
sub
jecxz
dec
or
aaa
js
stc
and
jbe
sbb
inc
sti
lret
int3
lret
sub
mov
pop
cmp
or
sub
out
xchg
jecxz
pop
iret
shrb
jno
adc
movsl
xor
add
sub
mov
imulb
and
insb
bound
cs
repz
pop
add
xor
out
int
addl
xor
or
test
pop
push
sarb
or
popa
xor
in
cwtl
sub
das
sub
nop
jg
sbb
sbb
daa
pop
gs
push
add
mov
jbe
push
sbb
stc
pop
aas
sub
xchg
rolb
or
sub
push
sbb
pop
bound
and
push
popf
mov
sub
loop
out
arpl
lret
es
ret
daa
rcrl
popa
imul
insl
jl
push
int
lds
xor
loope
mov
lds
clc
cmp
sbb
inc
sub
icebp
mov
mov
mov
nop
xchg
les
icebp
f2xm1
imul
fldenv
fcoml
mov
jo
dec
cmp
jnp
push
dec
es
loopne
das
inc
filds
add
aad
and
mov
lea
add
shlb
push
sub
mov
int
sti
movsl
cmp
sub
add
and
stos
push
pop
lret
gs
add
adc
cs
inc
cmp
xchg
push
imul
or
out
push
mov
mov
sbb
test
test
call
push
dec
test
mov
aas
push
cmp
sbb
sti
dec
iret
or
into
shr
xlat
aas
xchg
outsb
push
je
loope
roll
movsl
repz
mov
jno
pop
jno
adc
and
jbe
xor
lcall
loop
mov
addr16
mov
sub
cs
leave
cmp
adc
mov
loope
test
or
scas
and
in
out
fimull
pop
add
loope
xchg
repnz
adc
fsubrs
jg
push
jnp
ret
sti
xor
in
jecxz
test
hlt
or
clc
mov
cmp
clc
adc
aaa
inc
cmp
inc
mov
push
mov
mov
stos
lcall
das
pop
ds
cmp
loop
mov
not
mov
mov
add
inc
pop
inc
dec
adcl
imul
cltd
xchg
mov
cmp
pusha
cli
mov
test
test
mov
xchg
leave
fsubrs
mov
cli
loope
iret
add
divl
lods
sub
push
fs
mov
jno
mov
or
ret
or
shrb
and
sbb
and
decl
fs
arpl
dec
jbe
push
or
stos
fcoml
fcmove
push
or
imul
sub
shr
fsubs
pop
mov
inc
ret
ffree
fwait
cltd
and
cmp
ffreep
push
lcall
das
pop
mov
mov
mov
leave
out
fisubl
iret
movsl
insb
pop
out
xchg
sbb
dec
and
fadds
daa
jp
imul
mov
faddp
mov
jo
add
aam
mov
cmp
ds
addl
pop
iret
leave
push
mov
int
cmp
jle
adc
mov
jae
mov
dec
cmp
ret
out
ftst
out
int
lods
xorl
icebp
xchg
iret
repnz
sub
out
ret
mov
sub
pop
and
movl
sub
insl
divb
scas
mov
mov
cmp
push
mov
mov
xor
push
xchg
sarl
dec
hlt
jns
cld
cmp
cwtl
ljmp
icebp
out
in
xchg
js
sbb
ret
cmpsb
or
xor
out
inc
mov
jnp
and
dec
push
dec
mov
add
lock
mov
pop
aas
stos
cmp
rclb
push
orb
sub
jl
push
sub
mov
mov
out
xchg
loope
pop
jge
enter
jle
inc
and
hlt
fmulp
push
push
cmp
inc
xor
shlb
dec
movsb
pop
testb
xor
xor
dec
lds
dec
mov
jno
outsb
iret
sbb
mov
fdivl
mov
mov
mov
or
out
scas
mov
xor
xor
ss
mov
lret
je
popa
xchg
mov
js
mov
xchg
rclb
scas
pop
push
cld
push
not
sbb
outsb
outsb
xchg
loop
pop
andl
testb
xchg
pop
mov
mov
pop
lret
in
ljmp
mov
les
idivb
adc
popa
cld
mov
subl
add
add
sbbl
adc
adcb
push
in
mov
xor
insl
xchg
push
arpl
jmp
push
test
or
mov
xchg
lahf
mov
mov
enter
pop
pop
lret
xor
pop
enter
fdivs
add
or
adc
stos
icebp
xchg
ljmp
sarb
aam
int
xchg
rcll
addb
fldt
jnp
xchg
arpl
popf
ja
dec
jne
in
adc
popa
sbb
push
stos
fsubl
mov
stc
jae
lcall
vpsubb
pop
pop
sub
cmpsl
cmp
ja
rcrb
mov
ljmp
shr
jb
das
push
jg
test
adcl
push
es
adcl
inc
aad
out
popa
xor
xor
insl
xor
testl
pop
xor
out
das
or
mov
pop
and
mov
xor
jp
inc
cmp
sub
xchg
add
sarb
ds
sub
fwait
mov
je
mov
push
rcrb
push
sbb
inc
cmpsl
mov
jecxz
xor
jecxz
hlt
push
mov
cmpsl
mov
movsb
sbb
in
divl
pop
pop
pushf
rolb
xor
add
pop
inc
inc
nop
scas
dec
std
dec
addr16
sub
js
test
into
fcmovbe
pusha
xchg
out
test
aaa
je
jmp
fisubrl
int3
sti
bound
cmp
ss
cmp
pusha
movl
popa
mov
daa
or
sbb
jg
pushf
xor
inc
fistpl
push
pop
jo
sub
movsl
sbb
mov
add
inc
push
cmc
fldenv
inc
lahf
xchg
lahf
mov
xor
jo
push
addr16
push
jnp
out
rcrb
rol
leave
adc
sub
sti
adc
ret
stc
repz
dec
cli
lret
popf
shl
mov
pop
mov
sbb
cmp
imul
adc
data16
imul
cmpsl
or
in
inc
add
dec
mov
ret
cmpsb
xchg
shl
mov
adc
mov
sahf
adc
fsubr
xchg
mov
test
pop
or
push
icebp
or
ficoml
add
pop
mov
ljmp
sbb
rcr
loope
shl
push
sbb
fwait
out
or
in
test
movhps
fdivrs
stos
mov
xor
xchg
shrb
aam
add
sbb
out
scas
dec
push
stos
jge
mov
adc
xor
adc
nop
lds
dec
fistl
dec
lahf
iret
call
enter
out
lods
mov
lds
push
int
push
push
mov
jp
mov
cmp
fnstenv
mov
rcll
outsl
addr16
sub
aaa
aaa
imul
or
sbb
mov
pop
imul
adc
and
dec
inc
sub
xchg
push
bound
fnstenv
mov
mov
aad
xor
sub
push
repnz
fcomp
add
or
mov
cltd
xchg
adc
faddl
in
lds
test
add
aaa
scas
mov
push
lods
rcr
add
movsb
fimuls
ret
jb
loop
in
mov
push
sbb
jp
movsb
mov
push
movsb
mov
xor
cltd
dec
cmp
xor
sti
loopne
ret
inc
xchg
arpl
lods
push
mov
in
push
push
or
movsl
and
int
repz
cwtl
or
pop
addr16
jg
sbb
inc
int3
or
sbb
push
js
std
jp
sub
inc
call
out
sub
stc
ja
sbb
neg
sbb
push
jns
and
dec
aad
leave
xchg
nop
testb
rcrl
sbb
xchg
js
lcall
arpl
iret
aaa
mov
mov
inc
jnp
push
add
jno
xchg
pop
daa
out
inc
pop
cmpsb
pop
into
mov
sarl
sbb
int3
into
stos
leave
xchg
sub
sbb
andl
pop
and
adc
enter
cld
jo
pushf
dec
pop
xchg
and
xorl
sbb
scas
xchg
adc
clc
pop
or
mov
add
dec
in
jo
gs
jg
aam
xchg
stc
int
pop
outsl
mov
addr16
lret
mov
pop
push
sarl
xor
aam
cltd
popf
sbb
adc
pop
mov
jle
dec
xchg
call
xor
lret
jle
sti
mov
loop
jle
jae
enter
mov
test
icebp
xor
push
mov
mov
sbb
xchg
xor
fnstenv
out
xchg
sbb
inc
sbbb
gs
push
loope
inc
and
push
jne
jecxz
dec
push
mov
jne
es
pop
enter
scas
pusha
mov
cmp
in
sbb
dec
jmp
or
fdivs
rolb
xchg
jecxz
inc
adc
enter
inc
int
arpl
xchg
mov
lret
and
dec
aam
push
test
movsb
add
push
mov
mov
mov
add
into
or
sbbl
xlat
lds
addps
rorb
sub
inc
add
xor
xchg
jbe
or
cmpsb
mov
data16
xor
jl
mov
pop
popf
or
push
cld
adc
cmp
adc
adcl
jg
bound
leave
xchg
pop
xchg
in
add
jmp
int
and
dec
jle
aad
dec
xor
push
mov
arpl
scas
sbb
mov
outsl
mov
xor
mov
fnstenv
mov
xchg
pop
gs
jmp
mov
lahf
cmp
testb
outsb
jl
xlat
stos
lea
imul
adc
ja
xchg
lea
dec
xor
repz
adc
lret
add
addr16
andb
test
push
pop
adc
or
cmp
popa
adc
in
les
xchg
sbb
or
rcrl
clc
push
adc
mov
inc
into
xchg
arpl
cli
jg
dec
sbb
aaa
mov
int
mov
cli
mov
aam
sti
lods
or
inc
inc
popf
mov
loopne
adc
push
fimuls
out
lods
sbb
fld1
lahf
rcr
hlt
cld
insb
in
mov
xorl
jecxz
in
outsl
and
push
je
add
das
mov
cs
aaa
stos
mov
lods
mov
dec
dec
call
mov
add
pop
scas
fistpl
jl
test
or
es
popa
mov
push
xchg
sbb
popf
call
loop
insl
mov
xor
in
pop
inc
popf
mov
repnz
jle
or
pop
push
icebp
xchg
pop
pop
andb
jne
add
jo
imul
dec
ret
jnp
loop
daa
jmp
insl
adc
dec
and
pop
cmp
or
cmpsb
sbb
jo
ret
dec
push
inc
int
mov
test
pop
xchg
xchg
lret
cld
rcl
lds
cmpsl
sbb
aas
ljmp
sub
xchg
scas
xchg
xchg
cmp
enter
arpl
jae
imul
out
out
cli
outsw
in
test
mov
jo
scas
inc
mov
push
fldl
fdivrs
stos
mov
cmp
fildll
and
fsubl
out
cmpsl
out
sahf
loop
cld
fcompl
mov
adc
jbe
and
nop
bnd
out
in
es
dec
push
mov
sbb
mov
dec
mov
sub
xor
fistpl
cmpsb
xchg
pop
idivl
push
adc
pop
out
mov
les
mov
mov
cmpsb
xchg
xlat
fidivrs
push
add
loopne
xchg
roll
loopne
lods
cld
sub
cmp
out
jge
pop
xchg
push
outsb
or
decl
jmp
int
mov
pushf
sbb
sbb
and
pop
jnp
mov
icebp
fcoml
inc
inc
cmp
sbb
inc
loopne
lret
out
lret
xor
mov
call
xor
and
dec
sahf
cld
xchg
jno
das
fisubrs
mov
sub
cmc
das
and
rcrb
popa
fisttpl
jmp
loope
inc
imull
popl
adc
fistpll
mov
mov
or
cs
mov
shrl
jbe
bound
mov
pop
lret
pop
fisubrl
nop
xchg
aaa
or
push
mov
mov
and
rorb
pop
clc
cmpsb
stos
inc
in
outsl
outsb
fisttps
out
ret
addr16
inc
insb
lahf
and
pop
out
jno
cmp
xor
es
sbb
jge
sbb
cmc
inc
and
cmp
fwait
ds
xor
mov
jo
jg
pushf
sub
cmp
cmc
push
mov
out
inc
mov
sub
jle
fcmovbe
aad
fmull
lock
fcomps
pusha
cli
orb
fisubrl
fidivrl
shll
and
inc
mov
iret
pop
test
adc
xchg
xor
popa
lret
pop
add
dec
mov
adc
mov
ljmp
pop
fwait
lret
mov
add
hlt
lret
sbb
inc
jmp
push
inc
xchg
sub
cmp
cltd
push
sbb
mov
mov
andb
sub
jnp
fidivs
rol
lds
loope
or
cwtl
xchg
jb
std
push
mov
pushf
mov
outsb
and
or
jl
in
mov
cli
jg
pop
push
pop
push
lock
out
jne
sub
xlat
jb
sbb
adc
cmp
ret
pop
clc
or
pop
inc
nop
stc
pop
popf
jae
jg
int
and
fstp
cld
cmp
sub
mov
pop
pop
jns
mov
inc
jae
mov
stos
xlat
loopne
dec
mov
lret
syscall
aam
adc
mov
push
cmpsb
movsl
cmp
ja
sub
push
stc
std
or
sete
sub
cmc
mov
add
and
sbb
lods
adc
mov
loopne
push
std
aas
dec
pop
dec
nop
enter
negl
sub
aaa
sbb
push
imul
xor
mov
pop
adc
dec
lcall
add
sub
jno
pusha
sahf
fisubrs
scas
jp
push
and
sub
or
sub
pop
pushf
sbb
shll
jns
inc
mov
mov
int
in
sub
insb
popa
sbb
fs
xchg
mov
adc
dec
cmp
pop
shrb
or
xchg
jle
out
out
or
jg
js
mov
pop
loopne
fiadds
dec
pop
sub
cmpsl
sbb
cmp
pop
repnz
inc
jnp
mov
cmp
lahf
xor
push
sub
fists
cmp
jle
out
stc
aad
in
loopne
mov
mov
jecxz
cs
sbbl
xchg
ret
movsb
test
push
loop
mov
push
adcb
xchg
push
sbb
and
mov
lcall
sbb
xchg
fmull
sbb
shl
fs
xchg
push
pop
repz
fisubrl
jae
movsb
bound
not
clc
xor
and
stos
sub
sbb
lods
insb
push
in
xchg
mov
push
loope
cmp
xchg
xlat
stos
out
imul
jb
jae
pop
dec
jno
lcall
lahf
popa
adc
or
jg
sahf
and
xchg
add
test
pop
xchg
add
adc
sbb
outsb
xchg
gs
js
aaa
inc
or
shl
sahf
lds
add
cltd
popa
lahf
js
repz
cmc
sbb
pop
fisttpl
jnp
jno
repz
pop
inc
and
nop
adc
dec
and
loope
test
sub
jge
popf
jne
mov
std
fisubs
stc
mov
pushf
mov
bound
movsb
fmuls
jno
lea
push
and
pop
fwait
out
jmp
cwtl
push
stos
subb
addl
mov
int
pop
xchg
cmp
shl
call
out
push
ds
call
pop
insb
xchg
mov
jmp
jmp
call
sub
sbb
ds
mov
nop
dec
xchg
or
pop
clc
cmp
lahf
loop
inc
adc
adcl
and
js
iret
mov
mov
xlat
insb
xor
repnz
mov
pop
stc
xor
imul
stc
js
adc
cmp
mov
aaa
into
add
daa
fs
js
inc
outsb
sub
pop
pop
shll
out
and
cmpsb
push
test
adc
push
and
mov
jecxz
fdivrl
xor
mov
xchg
pop
xchg
cld
and
repnz
and
mov
jmp
lods
dec
cmpsl
or
xor
negb
sub
jmp
lods
mov
pop
adc
ds
enter
inc
ss
outsl
or
sub
add
xorl
lahf
sti
mov
xchg
mov
push
and
leave
jg
fsubr
std
divb
add
dec
mov
out
test
arpl
test
out
mov
ret
cmp
lret
jne
push
rolb
leave
pop
or
sbb
sbb
dec
push
cmp
inc
test
mov
call
sub
xchg
inc
jp
fidivrs
adc
mov
xchg
adc
mov
push
loope
cmp
push
repnz
lahf
xchg
in
push
lods
fs
xchg
out
stos
xchg
imul
pop
sub
fisttpll
loop
inc
push
inc
fidivrl
add
daa
mov
mov
dec
dec
in
adc
adcb
push
push
xor
adc
cmpsb
push
cmp
jo
mov
in
arpl
lret
add
adc
jp
cmp
xchg
xchg
mov
negb
lahf
xor
pusha
pushf
adc
add
js
lcall
and
lods
orb
icebp
inc
sub
in
out
xlat
jmp
push
movsl
xchg
mov
sub
cmp
push
test
in
lods
cmp
mov
and
inc
mov
lds
push
lods
add
mov
fiadds
push
jg
aas
aam
fwait
movsl
outsl
mov
mov
or
push
jge
pop
mov
popa
sub
movhps
jmp
mov
push
cmpsl
stos
dec
divl
xorl
cltd
pop
test
test
pop
mov
fidivrs
hlt
inc
add
ret
push
dec
daa
mov
stos
xchg
insb
outsl
mov
pop
cli
cs
movsb
push
outsb
mov
or
or
push
cmpsb
pusha
leave
cmp
mulb
and
xchg
mov
test
dec
pusha
cmpsl
xor
bound
mov
rcrl
stc
dec
or
add
inc
push
std
daa
icebp
push
pop
and
stc
faddp
pop
popf
sbb
mov
dec
test
insl
aaa
stos
data16
mov
out
rolb
scas
mov
or
pop
xchg
and
je
cmp
inc
mov
push
mov
xchg
or
sbb
cmp
fwait
addr16
add
xor
push
repz
xchg
adc
dec
pop
pusha
mov
push
pop
cmpsl
scas
mov
dec
mov
dec
or
lods
fisttpll
gs
xor
mov
dec
cmp
sbb
pop
es
aas
cmp
push
inc
in
mov
mov
dec
test
popa
and
sti
mov
adc
dec
add
cmp
stos
cmp
in
jbe
pop
mov
jl
je
jbe
xchg
or
cmp
mov
das
out
push
pop
adc
daa
lock
dec
push
mov
dec
sahf
in
push
repnz
sbb
bnd
mov
jmp
and
add
lahf
or
sub
aam
fsubrs
js
iret
xchg
ss
sbb
push
mov
loop
and
jecxz
insb
mov
in
dec
je
add
add
lods
icebp
fistpl
sub
cwtl
push
and
ficoms
mov
push
aad
pextrw
pushf
fdivrp
aam
mov
aas
lea
sarb
iret
jmp
add
push
or
gs
mov
mov
loopne
adcb
dec
push
je
push
and
imul
divb
ret
xlat
mov
jge
icebp
mov
scas
sub
out
cmpl
test
dec
jo
fwait
mov
int
stos
pop
cmp
jnp
loopne
incb
and
inc
mov
pop
clc
sbb
cmp
jbe
sti
jecxz
outsb
rolb
xchg
cltd
lret
nop
or
sar
and
or
daa
aam
pop
xchg
ficoms
adc
jns
rcrl
pop
aad
pop
sub
adc
inc
push
movsb
inc
pop
jmp
dec
xchg
add
aaa
aaa
mov
out
fs
fucomi
in
add
clc
nop
dec
clc
fnsave
in
jmp
sbb
dec
stos
jge
stos
jnp
int3
aam
inc
cmp
out
leavew
in
sub
mov
orb
mov
incb
sbb
pop
adc
or
or
fimull
pop
movsl
scas
faddl
push
jecxz
xchg
test
insb
jae
push
xor
jae
das
and
fmull
mov
mulb
rol
pop
imul
ffreep
jno
fs
ds
mov
lods
stc
adc
mov
lea
aaa
sti
pop
xlat
mov
stos
adc
pop
nop
ret
sti
sub
in
test
ljmp
mov
jnp
pop
js
mov
mov
into
xchg
sbb
js
and
push
ret
sbbb
outsb
fsubs
push
sbb
pop
mov
xchg
add
movsl
loopne
add
popa
imul
push
mov
aam
push
push
stos
sbbl
pop
dec
test
or
xor
mov
loope
pop
stc
xchg
out
inc
imulb
or
cmpl
into
dec
mov
adc
lock
adc
fldl
push
pop
js
cmp
or
pop
mov
and
stos
jno
push
cmc
jo,pn
popa
xchg
mov
dec
aad
dec
pop
dec
inc
test
cwtl
pop
pop
dec
xor
mov
mov
scas
test
jg
xchg
cmpsb
jns
je
pop
inc
push
outsl
jp
cwtl
fsubs
sbb
adc
test
mov
jmp
rclb
call
adcb
or
or
fmull
jne
fisttpl
sub
bound
pop
scas
xchg
decl
dec
xor
in
ljmp
shll
mov
daa
sub
xchg
pop
adc
mov
pop
lcall
sti
cmp
lahf
daa
outsl
cmpsb
cs
mov
call
stc
sub
pop
dec
inc
test
and
insb
push
sahf
push
loopne
insl
adc
inc
testb
inc
icebp
insb
cmpl
sbb
or
add
push
shlb
ficoml
sub
xorb
cmp
xor
xchg
add
sar
test
or
popa
movsb
mov
das
xor
lret
jo
add
in
test
xor
cld
jnp
mov
ret
cmp
pop
xor
sti
stc
jae
push
inc
push
stos
pushf
adc
sub
mull
in
add
xchg
dec
or
cmc
mov
add
jl
pop
lea
mov
test
scas
lds
int
or
mov
xchg
popf
shr
mov
adc
pop
inc
push
addr16
cmp
mov
leave
shrl
imul
jne
insb
xchg
mov
jmp
pop
ja
xlat
pop
inc
loop
popf
repz
sub
shl
cmpsl
push
outsl
aam
push
mov
inc
sahf
outsb
lea
sbb
pop
push
mov
adc
sahf
jbe
movsb
in
dec
fcomp
das
aas
jle
and
repz
xchg
daa
mov
dec
cmp
loop
cmp
ret
movb
xchg
mov
xlat
mov
orb
inc
push
adc
rcrb
sub
jp
lret
jne
ret
ja
fwait
movsb
shlb
cmp
popf
push
ret
js
xor
add
testl
sbb
xlat
mov
inc
push
and
cmp
loopne
mov
fcompl
inc
outsl
sbb
into
mov
xor
daa
inc
popf
fwait
mov
cmp
movsl
fs
lret
les
std
cmp
or
testl
or
icebp
lret
loopne
sub
pop
mov
shll
xor
add
or
mov
and
cltd
sbb
clc
popf
daa
outsb
push
stc
or
adc
popa
push
fwait
out
pop
cmp
cmpl
pop
movsb
outsl
cmp
sub
sbb
out
add
push
sbb
inc
sbb
rclb
xchg
xorl
dec
mov
mov
add
jne
jae
xchg
ss
fisttpll
add
pushf
push
rorb
mov
jg
pcmpgtb
test
jecxz
fwait
ljmp
mov
stc
mov
loopne
mov
or
lea
adc
js
aam
xchg
je
loope
jbe
popf
pop
popf
xor
and
int3
aam
mov
jbe
mov
rolb
lret
loope
xchg
sub
pop
aam
dec
dec
scas
or
sub
mov
ja
inc
xchg
mov
and
xchg
xchg
enter
xchg
fnstsw
sbb
cmp
jl
push
mov
les
imul
imul
mov
sbb
push
sub
xchg
int
cmpsl
shlb
jnp
adc
aad
out
cmpsb
push
jge
xlat
push
rcrb
cmpsl
out
and
mov
outsl
mov
inc
mov
mov
dec
movl
popf
pop
vmwrite
mov
movsl
rol
mov
push
leave
int3
test
xor
jo
stos
aad
push
dec
pop
in
or
pusha
mov
cmp
nop
insl
lods
pushf
sub
adc
mov
cld
fidivl
jl
push
mov
lods
cmp
xlat
sub
sub
sti
and
mov
pop
lock
lcall
add
cwtl
int3
fsubr
add
aaa
cmp
aas
add
loope
bound
mov
cli
lcall
xor
sub
imulb
pop
add
mov
sbb
xor
mov
test
mov
xor
push
jnp
cli
insl
arpl
loopne
pushl
std
xchg
adc
lods
inc
and
bound
int
popf
out
xor
dec
lea
mov
fstpt
xchg
jns
xor
xchg
les
movsl
mov
cs
dec
lahf
cmp
sub
push
addr16
sbb
jnp
aam
pop
add
mov
mov
sbb
repz
cmpb
inc
dec
pop
adc
pushf
cwtl
mov
scas
popf
sbb
inc
mov
mov
push
sbb
pop
lods
ja
dec
frstor
test
inc
nop
push
test
and
dec
mov
pop
fisubrl
or
sti
and
pop
add
add
addr16
jmp
rcrb
fwait
sbb
cltd
sbb
or
and
sub
insl
push
subb
pop
mov
out
ss
adc
cmp
repnz
fisubl
sahf
cwtl
xchg
sbb
add
in
or
js
sub
xor
jg
fstpl
stc
add
imul
jnp
mov
pop
push
out
dec
cmovae
xchg
aam
adc
add
pop
out
outsb
ljmp
data16
and
lret
cmp
sbb
mov
adc
dec
cmp
das
sbb
out
pop
fdivl
mov
adc
jle
fs
xor
loop
xchg
push
push
out
pop
shll
shl
xor
mov
orl
and
jb
inc
lcall
rol
mov
loope
ja
mov
lods
movq
xor
ds
mov
lcall
mov
sarl
xchg
test
cmp
repz
rolb
add
mov
rcl
mov
jle
mov
out
push
adc
pop
jns
int3
popf
sbb
movsl
cmpsb
ret
xchg
cmp
ficoms
inc
cld
push
jecxz
xchg
mov
iret
aas
rcrl
mov
dec
gs
clc
mov
sti
aaa
jae
fstpt
pop
daa
aaa
ret
add
cmpl
aaa
in
ret
gs
sbbb
push
pop
aas
cltd
add
mov
enter
xlat
mov
cmp
mov
add
loopne
add
loopne
push
push
sub
lahf
mov
lods
test
add
jnp
add
or
xlat
mov
mov
call
or
cltd
icebp
rcrb
cltd
stos
and
addb
lret
addb
jne
subb
sbbb
lcall
dec
out
orl
cmp
or
cmp
push
rorl
jbe
mov
jne
jl
jl
jo
lret
cmp
push
and
insb
inc
hlt
lock
gs
pop
xchg
ret
fcomps
mov
cmp
pusha
andl
jnp
jl
cli
fdivrs
xchg
sbb
lret
scas
mov
incl
xchg
xor
call
adc
mov
jl
dec
push
lahf
xor
xor
stos
mov
mov
or
mov
xor
rol
es
push
dec
xor
mov
jbe
xorl
jno
cmc
out
sbb
adc
mov
mov
movzwl
pop
mov
loop
sbb
sahf
xor
pop
or
push
push
fnstsw
ds
fdivp
dec
in
mov
push
mov
lea
mov
dec
int
sbb
sbb
and
movsl
sub
mov
ss
cld
fld
inc
pop
jb
inc
loopne
pop
aam
sbb
jae
mov
xchg
xlat
pop
cmpsl
mov
sbb
cld
hlt
bound
int3
jp
cmpsl
dec
mov
mov
add
mov
in
mov
movsb
cmp
xchg
leave
int
pop
adc
xor
fisttpl
fcom
and
fistpl
mov
push
aam
xlat
inc
cmp
ss
imul
jg
xor
sbb
cmpsb
insl
sbb
sub
jecxz
mov
test
mov
push
mov
clc
xchg
sbb
in
cs
ds
repnz
jl
add
inc
mov
enter
out
repz
aaa
jp
mov
pop
cmp
imul
subb
jle
ss
sarb
test
jne
out
and
repz
xor
arpl
adc
imul
lahf
mov
jg
push
rcrl
fiaddl
pop
insb
mov
or
mov
adc
xchg
out
imulw
daa
sbb
jle
lcall
mov
repz
cmp
inc
push
and
inc
cmp
enter
shrl
push
mov
mov
mov
jo
xorl
cmc
or
push
clc
lret
dec
addr16
cmp
mov
or
mov
imul
test
xor
ss
enter
fcoms
leave
pop
xor
mov
loope
sub
ficoml
ja
xor
sub
cmc
mov
js
and
orb
fwait
aam
adc
xchg
into
je
clc
shll
test
mov
pop
inc
and
sbb
xchg
xchg
and
adc
add
mov
in
test
sub
pop
push
mov
sbb
imul
out
inc
sbbb
inc
outsb
dec
jnp
loop
xchg
push
mov
cmp
xchg
aas
jae
cmp
daa
out
mov
adc
lods
int
jmp
xchg
add
orl
inc
xchg
mov
arpl
imul
mov
addb
shr
popa
ret
add
mov
pop
daa
mov
push
mov
stc
lret
ja
lret
or
clc
cs
pop
cmp
mov
pop
dec
test
shll
jno
dec
out
movsl
cmp
mov
pop
dec
pop
mov
and
lods
inc
incl
ret
pop
mov
cmp
idiv
mov
jne
test
sub
addr16
cmpsl
cmp
cmpsb
pop
nop
dec
lea
xor
cmp
outsb
xor
mov
cli
cmp
cmpsb
sbb
xchg
mov
inc
rcrb
mov
cmpsl
ss
rclb
jmp
insb
pop
push
test
popw
lret
mov
ficomps
ficoml
jl
sub
sub
jmp
pop
fsubs
xadd
cld
gs
repz
adc
jno
in
jbe
jo
lds
add
cmp
out
addb
sti
enter
push
xchg
ja
rcrb
daa
xorb
dec
sbb
stc
jbe
jl
leave
loop
xchg
and
fidivrl
mov
jge
ljmp
lcall
jnp
cmp
push
jp
adc
cmpsl
jb
dec
lret
ret
fisttpl
lods
je
lret
adc
in
movsb
vcomiss
inc
pop
lcall
mov
jmp
mov
fidivs
pop
lahf
fwait
xchg
iret
sbb
sarl
pop
jb
vpcmpgtd
add
inc
outsl
push
fsubr
ficompl
int
pop
stc
stc
push
xchg
xchg
xor
int
and
pop
ss
xor
mov
dec
adc
push
or
lahf
aad
loop
sub
lret
mov
mov
or
inc
imul
out
repz
sbb
mov
rol
in
mov
movsb
and
jb
jns
ss
nop
pop
sarb
jo
or
xor
push
dec
push
outsb
jmp
xor
test
idivl
test
das
jmp
out
aam
pop
rclb
out
pop
in
andb
lret
cmp
mov
pop
jae
cmp
jecxz
jg
iret
js
es
jo
orl
cs
mov
jmp
adcl
xlat
push
dec
test
out
xor
mov
iret
jl
jle
or
divl
lret
call
push
les
jne
pop
nop
popf
cmp
out
dec
inc
test
shl
mov
mov
loop
and
pop
loop
andb
cmpsb
jl
lea
gs
hlt
inc
int
pop
cmc
hlt
pop
cmc
flds
mov
adc
stos
dec
test
fwait
idiv
sub
mov
xor
mov
sub
push
mov
cmpsl
adc
pop
ljmp
popa
push
sbb
push
push
sbb
dec
inc
fistpll
add
inc
mov
ds
jo
dec
or
cmpsl
lock
aaa
xor
push
fsubr
out
imul
xchg
es
mov
js
stos
dec
dec
jge
mov
mov
divb
mov
xor
loope
out
and
fldt
mov
jbe
fucomip
stos
jmp
add
add
xchg
adc
add
cmpl
je
jno
int3
or
sub
imul
imul
inc
pop
aas
pop
mov
gs
lret
sub
lcall
dec
mov
dec
gs
pop
popf
mov
mov
sub
mov
cltd
les
testl
xor
push
sbb
data16
aad
jp
xlat
adc
xor
mov
push
sub
idivb
push
mov
or
stc
es
enter
adc
pop
push
sbb
inc
mov
push
and
push
arpl
pop
mov
shll
es
push
xorb
xchg
into
in
repz
pushf
cmp
scas
add
insb
fdivrl
arpl
rcrb
mov
ret
and
jns
adc
out
and
push
ljmp
mov
ss
xchg
xchg
adc
dec
icebp
shrb
insb
pop
jno
push
addl
fisubrl
sti
add
dec
push
es
rolb
jp
das
adc
jns
out
and
pop
testb
shlb
push
or
stc
xchg
cmc
xchg
out
in
int
stos
sub
add
inc
adc
mov
push
insl
push
inc
mov
sti
ljmp
daa
mov
fisubrl
pop
pop
clc
inc
lret
and
aas
mov
mov
jl
repz
push
gs
lock
jecxz
cld
stos
mov
add
dec
ror
imul
adc
ud1
push
xchg
adc
push
pop
pop
or
add
push
mov
dec
out
out
cmp
push
pop
rolb
push
ror
or
data16
cmp
mov
aas
insl
jnp
rcrl
inc
sbb
jno
mov
add
jno
mov
dec
dec
aaa
icebp
jp
mov
mov
xor
in
and
imul
int3
sub
sti
sub
aam
xchg
shl
sbb
loopne
inc
sbb
into
cmp
outsb
add
fldcw
jmp
test
mov
mov
xchg
fadd
pop
fld1
shlb
loope
out
imulb
mov
mov
cmpsb
scas
xchg
xchg
lcall
push
mov
test
insb
enter
inc
and
imul
lret
adc
sbb
fidivs
scas
int
lahf
aam
in
add
cmp
push
dec
jg
and
js
jno
sub
insb
pop
inc
jge
pop
inc
dec
cmp
sub
cmp
inc
dec
push
dec
inc
dec
popa
outsb
arpl
jne
jbe
dec
data16
sub
push
sub
and
pop
push
arpl
bound
daa
xor
jne
jns
popa
dec
inc
jge
arpl
pop
pop
xor
outsb
sub
dec
popa
insl
cmp
jno
and
push
sub
pop
jne
jae
pop
dec
and
jle
js
jle
inc
inc
dec
dec
and
arpl
jg
jp
push
jns
xor
je
js
push
das
imul
daa
and
dec
adc
xor
jnp
inc
jle
push
daa
outsb
inc
jns
jp
push
bound
sub
inc
pop
and
dec
dec
push
dec
adc
outsb
das
pop
jg
sub
inc
pop
jno
popa
push
xor
push
and
imul
jno
pusha
sub
push
inc
and
sub
xor
ja
jg
js
xor
ds
push
and
bound
popa
push
push
jno
pop
pop
push
sub
sub
dec
inc
dec
xor
pop
push
and
jo
inc
sub
dec
cmp
cmp
aaa
inc
andb
insl
pop
push
xor
add
shrl
xor
sub
dec
push
and
pop
inc
addr16
push
push
js
push
dec
and
dec
cmp
aaa
xor
xor
xor
cmp
xor
xor
cmp
xor
inc
cmp
aaa
xor
inc
xor
inc
inc
inc
inc
inc
xor
xor
xor
inc
inc
cmp
xor
xor
inc
inc
inc
inc
inc
inc
