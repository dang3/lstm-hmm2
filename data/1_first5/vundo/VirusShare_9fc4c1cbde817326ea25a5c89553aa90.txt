add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
js
je
jb
popa
add
add
add
add
sub
add
add
push
add
outsb
add
add
jae
and
push
add
add
add
jb
add
add
add
add
add
sub
dec
add
and
push
add
jb
imul
add
inc
add
outsb
add
add
insb
add
add
popa
add
add
add
add
imul
add
jo
pop
add
imul
outsl
add
dec
add
je
jb
imul
add
push
add
add
add
add
arpl
outsl
add
and
push
add
jp
add
add
push
add
add
insl
add
insb
add
add
arpl
outsl
add
and
push
add
jp
add
add
add
jne
inc
add
jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
add
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
call
mov
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pusha
sti
jo
inc
fists
xchg
sahf
pop
into
jb
sbb
shrb
mov
pop
nop
punpcklbw
jo
inc
fists
and
adc
rclb
mov
pop
nop
vmwrite
sub
dec
mov
sbb
rorl
test
mov
insl
imul
pop
scas
inc
mov
stos
jae
xor
sbb
dec
data16
or
test
mov
pop
loopne
inc
loope
sub
stos
in
xor
stos
xor
sbb
cmp
cs
lock
inc
lahf
xchg
mov
jecxz
mov
mov
aam
jle
jg
pop
pop
mov
int3
dec
roll
jmp
mov
je
fildll
adc
imul
cmc
mov
mov
or
nop
jae
sub
adc
and
scas
dec
pop
loopne
loopne
ss
mov
mov
jg
addb
stos
scas
pop
fcomip
xor
sbb
mov
push
jecxz
xor
gs
stos
push
iret
aaa
mov
or
fcomps
jae
add
cmp
and
sbb
dec
ljmp
mov
mov
mov
imul
ud1
test
dec
in
xor
add
inc
mov
rorb
das
idivb
jl
mov
sub
cmp
add
lock
rcrb
mov
pop
nop
punpcklbw
jo
inc
fists
and
adc
rcrb
mov
pop
nop
punpcklbw
pop
mov
dec
fdivs
and
into
jecxz
inc
mov
popf
dec
or
cli
popa
clc
cmp
or
das
fwait
std
dec
or
xchg
mov
aas
repnz
outsb
nop
sbb
lcall
mov
inc
clc
cwtl
test
hlt
xchg
es
dec
int3
insb
loop
int
jnp
nop
test
jo
xchg
push
sub
push
pop
daa
fiadds
xor
jns
int
mov
fcmovnbe
jmp
ret
mov
mov
xor
add
ljmp
xchg
sbb
jno
shlb
sahf
icebp
inc
cmc
bnd
sbb
xchg
daa
loop
aaa
fisttpll
repz
outsl
sub
movsb
aad
iret
adc
and
dec
lret
icebp
loope
xchg
aad
leave
andb
into
push
jg
movsb
gs
sub
push
imul
or
push
imul
test
lock
mov
add
fs
lock
clc
shrl
push
pop
lock
fcmovbe
mov
test
jae
inc
test
fidivrs
cmp
fidivs
cmp
xchg
popl
inc
lcall
mov
insl
mull
sarb
ja
mov
and
les
mov
cli
fiadds
call
orb
in
test
pop
or
outsl
enter
xchg
sub
sbb
pop
rorl
rcrb
xchg
das
sti
outsl
mov
movsb
lock
mov
iret
mov
push
sbb
pusha
push
xchg
mov
ss
or
and
fs
stc
mov
pop
dec
mov
jbe
fs
push
pop
jle
and
or
xchg
xchg
mov
scas
inc
cmp
movsb
hlt
cmp
testb
pop
js
lock
fwait
xor
and
repz
dec
cmp
cltd
jbe
mov
inc
push
xchg
jno
sbb
or
pop
or
or
fsubl
inc
int3
add
sub
cwtl
aam
pop
aad
inc
cmp
ret
xchg
push
sbb
inc
arpl
dec
lea
aaa
rcrl
es
enter
cs
mov
pop
ret
add
pop
arpl
insl
filds
sbb
imul
xchg
mov
push
pop
dec
sbb
and
push
push
movsb
lret
push
mov
sbb
aam
insb
fld
aas
pop
sbb
faddp
jb
fwait
sub
fisubs
test
xor
sti
fsubl
xchg
inc
adc
mov
pop
test
adc
ds
mov
or
xor
or
dec
data16
inc
sti
inc
jg
and
scas
sbb
enter
negl
sub
mov
jmp
mov
sbb
out
jns
outsb
sub
sbb
leave
lds
mov
add
mov
out
es
adc
stos
dec
outsb
divl
push
cmp
or
lret
add
push
xchg
mov
lock
data16
jecxz
stos
leave
mov
int3
cmp
cmova
mov
jl
xor
mov
loopne
fsubs
jecxz
jge
int3
orb
cmp
pop
xchg
sbb
loopne
arpl
jmp
aas
xchg
dec
int3
scas
dec
bndstx
add
dec
cld
imul
push
aaa
and
or
mov
dec
je
sbb
dec
jp
data16
ja
addb
roll
mov
fs
or
lret
lret
std
iret
sub
jl
enter
ret
int3
xor
xchg
jno
xchg
pop
lret
cli
ja
imul
push
repnz
daa
xor
rcr
dec
xchg
add
cmp
iret
rclb
packssdw
cltd
sbb
pop
out
je
notl
js
dec
push
ss
test
mov
sarb
loopne
pusha
pop
xchg
popf
clc
jno
outsl
dec
mov
adc
mov
or
fsubrs
ds
or
mov
sbb
imul
popa
sub
jb
or
or
and
push
push
enter
add
mov
lret
stc
mov
js
sub
ja
and
imul
popl
or
mov
lock
aad
sbb
sbb
pop
pop
mov
xchg
inc
outsb
pop
pop
xor
mov
xor
mov
sbb
dec
loopne
js
nop
rol
pop
dec
fstpt
int3
pop
das
stos
mov
mov
jne
inc
fs
or
inc
jo
ret
inc
fisubs
xlat
movsl
mov
in
icebp
imul
outsl
pop
mov
jae
test
clc
push
cmp
repz
pop
aam
ret
and
es
mov
cs
xor
xchg
sub
sub
adc
rorl
xchg
inc
cmp
out
or
mov
jmp
sub
add
mov
push
xchg
cmp
scas
adc
sbb
sbb
push
adc
xchg
mov
ret
nop
hlt
xlat
or
pusha
xor
mov
cmp
mov
roll
daa
push
pop
mov
in
out
mov
mov
in
adc
or
daa
in
repnz
pop
bound
or
js
xor
dec
jge
cmp
dec
mov
repnz
pop
lds
data16
pushf
adc
dec
mov
inc
xlat
icebp
pop
out
scas
sbb
sbb
in
adc
xchg
cmpsl
push
pop
xor
pop
ja
loope
xor
mov
pop
jecxz
jns
movsb
push
push
cmp
xchg
xor
ljmp
mov
aaa
push
fidivl
xchg
xlat
add
xchg
fwait
insb
mov
push
pop
dec
sub
cmp
jne
sub
cmp
lods
xor
outsl
push
ljmp
hlt
insl
loop
or
hlt
mov
call
jno
cmp
xor
ret
adc
sbb
fildl
and
mov
sahf
lret
mov
cld
es
add
fldcw
xor
lods
and
je
lds
shrb
sbb
sbb
fcmovnb
push
adc
movl
adc
add
ljmp
pop
mov
push
popa
cwtl
out
jge
mov
mov
aaa
mov
push
lods
push
dec
movhps
pop
in
mov
cmp
pushf
fdivp
jp
xor
popa
cltd
or
mov
add
imul
aad
cs
inc
push
ss
in
fs
push
cltd
xchg
cwtl
mov
add
or
lods
repnz
ljmp
push
addr16
xchg
icebp
imulb
sbb
push
repz
mov
insb
pop
test
dec
mov
pop
adc
add
insb
loop
std
popa
sbbb
inc
loop
inc
imul
xor
imul
imul
xchg
movsb
into
mov
push
cltd
xchg
jae
scas
jne
ret
xor
and
dec
sub
stos
or
lahf
inc
shrb
cld
popa
jge
jmp
adc
inc
js
rorl
mov
mov
sbb
cmp
lods
mov
mov
or
test
mov
popl
sarb
mov
lcall
mulb
mov
push
or
or
adc
daa
ficoms
push
xchg
cmpsl
mov
ljmp
pop
push
sub
lcall
fsubrs
push
jns
push
sub
test
adc
push
xchg
js
add
data16
or
test
leave
sub
loop
xor
cmpsb
pop
lock
lret
imul
sub
mov
call
hlt
mov
pusha
leave
adc
jae
jp
movsb
pushf
add
mov
adc
aas
jge
push
jae
int3
xchg
mov
or
sbb
and
pop
cltd
lret
jmp
fidivl
add
pop
pusha
in
outsb
aam
enter
sub
mov
and
mov
push
sbbl
inc
mov
hlt
sbb
loopne
pop
sub
push
inc
cmc
cmp
mov
nop
sti
mov
sbb
xchg
mov
xchg
push
jo
addr16
push
test
push
lahf
sbb
jb
xor
leave
or
adc
sub
mov
popf
mov
jb
push
movsb
mov
xor
lea
mov
test
mov
sub
ss
clc
xchg
cmp
inc
sahf
mov
movsl
jbe
js
imul
mov
sbb
pop
test
cmpsl
push
icebp
xchg
cmp
mov
lret
jbe
setle
addr16
jmp
add
iret
dec
xchg
test
jb
jb
je
and
dec
or
gs
mov
push
ds
inc
mov
hlt
cld
sub
cmpsl
push
dec
cwtl
aad
add
cmp
jge
scas
std
test
in
jl
inc
jp
out
rolb
pop
gs
jle
cld
cltd
lret
cli
loop
gs
xchg
xchg
adc
add
mov
nop
stos
push
je
dec
ret
es
imul
mov
pop
in
loope
xchg
data16
add
testl
addr16
test
inc
add
pushf
aas
jp
ss
insb
cmp
cmp
popa
mov
loop
and
mov
pusha
push
fdivr
push
je
jns
std
inc
mov
icebp
xchg
pop
jecxz
call
add
xchg
in
push
jb
or
hlt
push
sub
mov
ret
ds
mov
repnz
adc
fcoml
jno
dec
mov
sbb
in
or
xor
mov
mov
cmc
sbb
fsubr
aam
pop
pusha
sbb
mov
mov
loopne
out
sub
test
test
or
cmpsb
xchg
xchg
ljmp
and
adc
mov
mov
sbb
xchg
imul
add
cmpsl
mov
adc
jp
fdivl
jne
int
mov
loopne
dec
and
xor
mov
lret
addr16
pop
xlat
loopne
mov
mov
adc
fadds
jl
jo
lret
ljmp
adc
inc
in
enter
jbe
pop
aad
xor
call
push
and
jecxz
inc
xor
out
mov
out
or
pop
mov
cltd
cli
xchg
test
bound
loop
jmp
adc
pushl
ds
in
mov
daa
xor
cmc
aas
xchg
jae
mov
xchg
mov
pop
mov
scas
in
inc
popa
mov
cld
jb
sub
dec
or
xor
inc
push
data16
stc
pop
jns
mov
hlt
adc
push
mov
adc
and
incb
mov
and
leave
es
shl
cmp
pop
inc
aam
clc
cmpsl
fmull
decb
cmp
popa
sbb
hlt
xchg
inc
test
cmpb
bound
inc
xchg
fwait
inc
xchg
shl
and
dec
sbb
addr16
inc
nop
loope
aam
cmpsb
jae
xor
fcomip
dec
call
xor
sub
push
push
data16
jg
call
cmpsl
sbb
sub
les
out
sub
rolb
add
push
in
xchg
push
push
push
xlat
or
mov
cmp
cmp
inc
jno
adcb
push
add
rcrl
outsl
xor
popf
add
lds
inc
xor
ret
nop
and
mov
inc
xchg
pop
dec
xchg
sbbb
jb
enter
jno
push
xchg
enter
out
ja
inc
fs
pop
clc
xchg
loope
je
push
sub
dec
inc
add
movsl
repnz
sbb
bound
mov
pop
sahf
imulb
push
fimull
and
push
fwait
xor
in
xor
mov
das
es
push
cmp
adc
dec
jns
loop,pt
sub
jge
aas
push
lea
fiaddl
cltd
in
stos
inc
mov
test
sub
mov
inc
xor
push
insl
movb
inc
push
enter
xchg
add
jg
stos
outsl
mov
inc
sbb
mov
rol
into
add
xor
pop
push
jne
fsubrp
xchg
or
bound
push
lods
or
ficomps
push
adc
jl
and
popa
enter
jg
xchg
das
mov
push
movsl
or
pop
test
sbb
dec
into
lahf
movsb
pop
adc
xchg
fwait
jge
mov
incb
stc
xor
jp
std
ss
mov
popf
xlat
repz
scas
jp
repnz
inc
push
adc
sti
fimull
repnz
sti
mov
inc
fsubs
dec
lahf
or
clc
push
inc
and
lea
pop
inc
lds
aam
mov
and
add
in
sub
insb
aas
out
call
in
les
cmpsl
xlat
popf
aaa
cmp
inc
in
inc
gs
iret
clc
or
xchg
jns
or
in
inc
xchg
xchg
adc
fs
stos
pop
in
mov
shrl
push
out
outsl
hlt
loopnew
jbe
lret
and
ljmp
add
es
mov
pushf
xchg
das
ljmp
lea
sbb
inc
push
jge
or
mov
loop
xchg
sub
mov
sub
std
es
xchg
jns
mov
xor
sti
xor
insb
mov
fsubl
leave
xor
jo
sarb
lcall
cs
shlb
jbe
mov
cmp
push
cmp
stc
mov
inc
sbb
pop
ljmp
lret
sub
movl
push
sub
mov
mov
jae
hlt
stos
addr16
add
scas
adc
jns
cmp
sbb
xor
ds
subl
jae
popf
or
movsb
mov
loopne
clc
pop
lods
data16
adc
js
inc
dec
push
jo
mov
push
and
stc
testb
inc
cmp
pop
inc
in
cmc
pop
lret
enter
mov
mov
jbe
jl
ret
out
mov
lods
ja
xchg
cmc
push
xchg
or
mov
cmpsl
push
and
jae
popa
andb
imul
xor
leave
adc
mov
mov
adc
les
adc
out
sbb
es
out
das
xchg
sbb
dec
int3
push
push
pop
and
ret
sbb
je
dec
pusha
lret
push
popa
mov
push
daa
mov
mov
xor
add
test
pop
pop
imul
xchg
and
jmp
mov
shrl
and
popa
mov
sub
push
enter
out
adc
idivb
push
fwait
xchg
xor
jmp
ss
iret
jne
cli
or
or
inc
arpl
outsb
dec
leave
ret
scas
dec
cmpsl
std
cmp
mov
daa
adc
icebp
out
adcb
push
pop
mov
int3
cltd
out
dec
ror
push
clc
out
aam
mov
cmp
jnp
mov
jno
imul
xor
push
cs
incl
cs
push
and
sub
sub
insl
cld
mov
pop
fnstsw
shrl
mov
daa
stos
test
jmp
push
movsl
js
cmpsl
inc
jmp
cs
dec
insb
das
push
in
jmp
cmp
mov
push
call
in
scas
jo
mov
call
ret
stc
les
sub
push
xchg
and
inc
movsb
and
dec
out
dec
mov
outsl
roll
dec
call
or
incb
xchg
lret
stos
push
mov
and
call
scas
stc
dec
lcall
fisttps
or
mov
push
test
sahf
or
gs
imul
repz
sbb
jmp
sub
jns
ljmp
inc
add
aad
add
lods
or
das
shl
jp
xchg
sub
icebp
mov
mov
or
cmp
ja
addb
mov
jl
je
roll
cmp
dec
aam
out
pop
lods
pop
test
imul
inc
adc
dec
dec
les
icebp
add
mov
lods
pop
and
add
adcb
mov
sbb
pop
stos
cli
scas
jnp
xor
lcall
aad
aas
or
popf
push
imul
in
shll
cmpsl
mov
adcl
mov
int
int
out
add
and
pop
xor
pusha
movsb
mov
jno
xchg
inc
add
mov
fistps
add
fstpl
test
ja
sub
and
arpl
repnz
icebp
pop
and
add
leave
ffreep
es
and
clc
xor
fs
xchg
sub
inc
cmp
lret
mov
aaa
dec
loope
sbb
lahf
jle
fimuls
xchg
leave
push
int
enter
jmp
js
out
sbb
jb
jns
xor
push
lock
outsb
in
adc
sub
xor
pop
in
mov
daa
ss
and
aad
mov
inc
mov
rcrb
adc
cmc
cmp
movsb
jecxz
jmp
cmp
jnp
int3
idivb
xchg
jae
aaa
leave
repnz
cs
xchg
sahf
jnp
iret
imul
mov
fsubs
imul
xchg
sahf
test
xlat
or
movb
push
push
int3
add
push
movsb
popf
mov
shll
loope
cmc
sbb
push
xchg
movsl
and
cmp
mov
sub
mov
inc
fistl
cld
out
or
ficoml
adc
movsb
sbb
fs
dec
fsubr
repz
movsl
inc
popa
fsubrs
outsl
xchg
push
jb
mov
int
adc
push
dec
mov
pop
fwait
bts
lahf
dec
xchg
ljmp
mov
mov
out
cmp
xor
les
cmp
xor
pop
loope
mov
test
push
xor
sarb
xor
pop
les
add
mov
into
mov
push
jne
fs
push
in
je
gs
pop
pop
or
mov
add
addr16
pop
jmp
je
aad
aad
xor
push
jecxz
mov
and
mov
roll
cmp
inc
inc
daa
sbb
mov
pop
mov
or
enter
icebp
cmp
cmp
xchg
dec
cs
dec
adc
xchg
mov
cwtl
cltd
pop
inc
and
and
mov
xchg
push
shrl
sub
xor
fs
pusha
or
mov
loope
dec
stc
gs
mov
push
fldl
test
ljmp
stos
cli
leave
outsl
sub
clc
aaa
push
in
jge
stos
ljmp
into
test
in
dec
movsb
pop
push
dec
jnp
clc
sub
cmc
ljmp
sar
mov
ret
repz
negl
xor
aam
es
std
jecxz
and
mov
icebp
xchg
jns
dec
stos
aaa
and
leave
mov
fnstsw
das
lea
xor
pop
ljmp
ret
push
iret
xor
sahf
xchg
cmp
incb
mov
sbb
je
fsincos
sahf
inc
repz
aas
arpl
jmp
mov
jmp
cmp
fisubrs
xchg
pop
aaa
rorb
and
pop
test
dec
xchg
mov
and
aad
xchg
xor
dec
or
lods
sti
lahf
and
and
push
loope
scas
jnp
cmp
jg
lret
push
hlt
mov
mov
or
aad
addr16
test
jge
ja
sti
push
pop
pushf
jbe
int
pop
mov
push
cmpsb
inc
mov
pop
jae
icebp
jmp
loopne
or
mov
jmp
sub
dec
mov
das
cmp
loop
mov
lods
mov
lods
mov
inc
iret
movsl
or
pop
inc
mov
das
xchg
pop
mov
sub
repz
mov
or
cmp
push
subl
mov
enter
pop
dec
popf
mov
fnstsw
cmpsl
js
fidivrl
add
jmp
add
hlt
stos
pop
xchg
testl
push
leave
sbb
dec
repz
pop
aas
hlt
push
sub
mov
cwtl
sub
into
mov
inc
cmp
add
test
pop
outsl
ss
cmp
sbb
jb
mov
add
out
dec
lds
movsl
jecxz
int
sbb
xchg
xlat
rorl
xorl
sti
add
and
call
mov
jb
cmp
mov
mov
insl
cmc
pop
and
push
fbstp
dec
or
lahf
js
data16
cwtl
sub
xor
in
aad
int
sub
movsl
bound
insl
fwait
mov
cmpsl
adc
pop
fistpl
ficompl
jmp
jle
fwait
mov
ja
pop
pop
loope
sub
and
jecxz
bound
dec
sbb
pop
adcl
cld
mov
mov
mov
lret
int3
lret
add
push
mov
push
inc
mov
mov
scas
pop
mov
popf
sub
iret
imull
mov
xchg
lods
dec
pop
lea
xchg
push
xor
fistl
cmpl
aaa
into
cld
dec
sub
lds
pop
int
lcall
inc
sbb
xchg
or
inc
ret
mov
test
xchg
cmp
cmp
repz
inc
push
mov
sub
iret
and
adc
rcrb
mov
pop
nop
punpcklbw
jo
inc
fists
and
adc
rcrb
mov
pop
nop
punpcklbw
jo
inc
push
lret
and
adc
rcrb
mov
push
xchg
jmp
sbb
inc
cmp
and
nop
dec
pop
orb
push
sarb
xlat
inc
cmp
outsl
ja
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
or
frstor
xor
fistpll
and
insl
inc
or
popa
cmp
int
mov
rorl
leave
add
pop
inc
insl
xor
jg
pop
popa
sub
arpl
xor
imul
pushl
xor
adc
or
inc
and
pop
sub
lods
mov
inc
rcrl
ficoml
xchg
and
jle
mov
xchg
shlb
insl
int
push
and
xor
out
std
push
outsb
insb
push
jl
divl
int
mov
fisttpll
mov
fisubs
mov
sahf
ret
dec
adc
pop
xor
test
xchg
stc
and
scas
ds
rorl
add
iret
lock
shlb
jle
pushf
and
dec
pop
call
and
je
add
push
or
jle
or
mov
pop
cmp
push
lods
in
xor
lds
popa
das
jb
fcmovu
int
hlt
mov
and
lods
push
movsb
dec
mov
je
or
jno
call
mov
cwtl
scas
mov
fadds
and
inc
imul
inc
adc
int3
movsb
hlt
mov
sahf
rclb
adc
movsb
cmp
and
dec
jg
jge
sbb
in
int
ffree
mov
mov
loope
icebp
mov
and
jge
or
jno
or
mov
rorl
mov
and
jge
or
jno
or
jno
push
push
mov
js
and
mov
push
bound
outsb
mov
jbe
jp
mov
dec
cli
mov
mov
cltd
mov
and
ja
fs
inc
test
lock
inc
jno
int
mov
jns
push
addr16
mov
inc
push
bound
paddsb
xor
xchg
jne
es
pusha
jns
add
aas
addb
push
xchg
sbb
and
mov
mov
das
movsb
xchg
add
pop
fldcw
loop
sub
aad
jns
sub
push
inc
out
les
ret
std
insl
insb
enter
sub
fldln2
dec
in
andb
jp
sbb
push
and
lahf
pop
rolb
in
push
popf
dec
xchg
and
push
sbb
mov
inc
jb
cli
data16
push
fadd
daa
jo
lahf
enter
sub
mov
in
push
test
sbbb
outsb
jne
nop
xchg
stos
popa
xor
mov
dec
mov
rolb
insb
fcmovnu
xor
or
mov
add
push
mov
mov
in
mov
xor
pop
divl
xchg
push
mov
insb
fildl
cmpsb
sbb
outsl
ss
xor
cmp
into
mov
xor
pop
push
enter
or
aam
outsl
sbb
nop
addl
jo
mov
repz
jmp
and
adc
fsts
mov
mov
mov
xor
jecxz
adc
bound
mov
pop
cmp
jp
sti
je
das
add
xor
dec
jg
mov
out
mov
jmp
cmp
pop
cmp
daa
aad
jns
mov
ret
xor
fs
push
or
aaa
das
lret
jp
add
out
call
shrl
mov
xchg
cmpsb
xchg
push
sti
in
jnp
push
in
and
push
add
xor
outsl
xchg
stos
xchg
push
or
push
frstor
rcrl
mov
incb
fbld
mov
lret
ja
xchg
in
mov
jb
rclb
push
fistpl
cld
pop
fidivrs
std
fwait
mov
jge
lods
push
jnp
negl
leave
push
paddusw
adc
inc
pusha
cmp
cmp
sub
cwtl
cld
jp
add
push
sti
and
incb
add
push
dec
jle
dec
cmc
mov
push
andb
ja
ret
cmc
int
push
cs
and
dec
push
out
call
andb
rol
mov
jbe
stc
jg
jbe
pop
cmp
sub
mov
movsb
insl
inc
out
pop
hlt
js
mov
lcall
lods
and
jne
mov
ficompl
ljmp
out
dec
sub
notb
cltd
lods
sbb
and
insl
out
mov
test
jbe
mov
es
jne
jb
repz
rep
enter
int3
in
cmp
dec
mov
movsl
idivb
jo
mov
cs
cmp
fwait
sbb
leave
mov
dec
cmpb
sub
jge
cwtl
lock
arpl
movsb
les
ret
xor
and
mov
aam
inc
xor
stc
aas
cwtl
leave
dec
arpl
test
push
test
or
daa
xchg
out
loop
cltd
inc
lahf
push
test
add
ja
stos
jp
ja
jmp
rorb
and
mov
ss
xor
jae
or
adc
sti
cmpsl
lahf
mov
cmp
repnz
mov
mov
cmc
mov
add
inc
faddl
push
in
mov
push
lret
or
cmp
popa
out
pop
je
cmpsb
inc
outsb
jnp
mov
rol
xchg
pop
and
xchg
mov
mov
mov
fistps
mov
incb
pop
jnp
lods
jbe
ljmp
jb
test
sub
stc
jecxz
jo
sub
stc
movsb
mov
add
mov
out
pop
lret
inc
lret
clc
es
cmp
mov
jb
stos
test
xchg
fs
xchg
push
xchg
pop
hlt
loopne
lcall
or
cmp
sar
mov
rcll
inc
fwait
in
jg
mov
dec
insl
xchg
cmc
stos
inc
jns
and
xor
fcomi
stos
mov
cmp
loop
repnz
xchg
or
dec
popa
dec
popa
lea
mov
jne
data16
int3
loopne
xlat
pop
sub
mov
adc
sub
add
mov
cmp
call
aad
dec
jnp
cwtl
ds
ds
aaa
pop
xor
lcall
xchg
adc
cmc
movsb
loop
mov
fwait
sub
lret
mov
cltd
inc
repnz
cld
adc
dec
mov
xor
cmp
sahf
cmp
aad
movsl
cmp
and
adc
dec
xor
jae
inc
adc
cmp
xchg
loope
aam
pop
inc
ljmp
mov
int
push
ss
out
out
xorb
cmc
cmpsl
or
rcr
push
lock
fildl
push
imul
loopne
fs
std
and
sub
cmp
mov
inc
add
stos
inc
out
aad
ljmp
sub
add
mov
ss
arpl
add
in
scas
and
call
lcall
mov
lea
inc
lret
sbb
mov
dec
pop
xor
dec
test
mov
pop
xchg
dec
jae
add
pop
push
xchg
mov
xor
push
fcmovu
cli
inc
in
div
dec
sub
es
dec
sbb
dec
in
or
ret
and
test
fdiv
rep
fsubs
dec
popa
inc
int
loop
lds
and
mov
daa
push
cmp
in
stos
std
xchg
stos
sahf
pushf
dec
fld
mov
inc
icebp
out
mov
inc
xorb
aaa
lds
aad
or
movsl
into
mov
xchg
mov
add
fidivrl
sub
mov
stos
dec
push
nop
xchg
shrl
cmp
mov
push
xchg
jge
and
aaa
pop
mov
mov
and
stc
jbe
adc
cmc
fabs
out
xchg
push
rcll
jne
dec
jp
test
ret
xchg
rcl
push
rorl
jno
stos
adc
cmpsb
jne
mov
or
xor
mov
or
cli
adc
jbe
in
daa
lods
bnd
sbb
insl
jno
mov
icebp
jmp
pop
sarl
lods
inc
cmp
push
jno
test
flds
lock
mov
xchg
jecxz
cli
sbb
cltd
loop
cmp
mov
rorb
insb
cmpb
jmp
cmp
jg
pop
fstpl
mov
and
jg
sub
in
add
in
negb
mov
or
mov
lods
jg
mov
addr16
es
insl
lcall
pop
push
push
jle
pop
sbb
js
pop
inc
xlat
stos
xchg
shl
daa
push
fwait
in
test
fdiv
test
popf
and
scas
jae
or
add
push
loop
lock
sub
in
ja
lret
rclb
inc
les
aaa
push
aas
pop
pushf
xchg
jge
lahf
aad
push
in
xor
pop
and
ret
sub
lahf
pop
dec
mov
xchg
xor
mov
add
pop
sub
addl
xchg
push
add
in
loop
aad
insb
pushf
push
int
adc
dec
xchg
fidivrl
popf
in
stc
outsb
jne
dec
cmc
aad
repz
movsb
mov
int
mov
add
jl
xchg
jmp
adc
stos
cli
test
adc
call
jns
inc
into
out
dec
in
xlat
cmp
shrl
ficoms
dec
xchg
xchg
test
dec
push
adc
xchg
add
mov
ficompl
shr
push
pop
mov
or
adc
xchg
mov
out
imul
insb
push
mov
cmp
clc
scas
mov
inc
or
lar
in
adc
push
xchg
xor
sub
daa
ret
addr16
lock
gs
sub
popf
in
fucomp
movsl
mov
mov
dec
push
lock
ret
scas
mov
and
test
xchg
sbb
fwait
stos
cwtl
inc
jg
dec
leave
in
rcrl
shl
into
stos
or
movsb
cmp
mov
cmpsb
hlt
fiadds
in
mov
aad
push
mov
dec
in
jge
sti
adc
jb
xlat
add
mov
cmp
or
outsb
fdiv
dec
dec
inc
or
ljmp
jb
pop
xchg
push
es
dec
nop
stos
test
jno
aad
shrl
sub
stc
jbe
inc
test
mov
mov
fwait
hlt
inc
pop
fcompl
imul
xor
dec
or
adc
mov
rcll
lret
sbb
loope
mov
ja
cmp
pop
mov
jp
lods
push
add
fs
lods
cmpsl
adc
xchg
fiaddl
inc
xchg
hlt
insl
cmpsl
jl
mov
js
mov
out
xchg
leave
ss
pop
cld
insb
popf
jmp
inc
mov
fildll
stos
stos
test
jo
icebp
rcr
fwait
or
dec
mov
aam
push
jbe
aas
jbe
aaa
pop
or
cmp
sarb
cmp
ret
ja
mov
or
mov
aam
lock
das
xchg
mov
std
adc
std
dec
mov
sub
or
mov
sub
mov
mov
xor
and
cmp
pop
pushf
dec
xchg
sub
mov
outsl
leave
xor
xlat
sub
sub
fcompl
ljmp
mov
cmpsb
lock
dec
out
imul
xor
dec
imul
popf
cmp
in
shl
lea
rcrl
jg
cld
jbe
push
jle
adc
rol
test
pushf
ja
mov
cmp
stos
call
mov
pop
pop
jno
lret
mov
lock
pop
mov
aam
aas
cltd
fxch
pop
outsl
pop
mov
stos
fsubrl
mov
jg
push
in
mov
mov
es
add
xor
iret
jb
xor
mov
pop
inc
and
or
out
rcll
or
jecxz,pn
out
notb
adc
loope
fldenv
or
lds
mov
inc
pushl
pop
xlat
insl
inc
cwtl
adc
les
fstps
pop
ret
bound
jbe
mov
mov
mov
jnp
cmp
sbb
daa
fwait
stos
ja
out
mov
and
loopne
arpl
sub
out
fs
xchg
and
inc
dec
mov
fnsave
pushf
sub
mov
xlat
ss
push
and
jbe
jmp
push
addr16
imulb
dec
or
clc
int
or
das
popf
divl
push
test
in
out
inc
in
and
inc
and
inc
mov
addr16
push
leave
in
bound
nop
or
sbb
sti
adc
leave
cld
jge
sbb
inc
enter
loopne
sbb
mov
fs
push
mov
mov
lret
jg
out
pop
mov
jns
mov
inc
iret
pop
rorl
ret
inc
sbbl
enter
jbe
fimull
int
gs
sarl
jg
inc
xchg
jae
mov
cmp
cld
adc
or
push
test
fs
paddb
outsl
inc
pop
fcoms
test
push
xchg
pop
mov
xorl
cwtl
popa
rcrb
out
sahf
sbb
cmp
xchg
arpl
cmc
fistpl
push
dec
jae
scas
fsubrs
push
incb
lcall
scas
loope
push
out
xchg
fidivl
mov
fcmovnu
std
aas
push
lea
mov
cmp
icebp
sub
mov
or
inc
mov
ret
push
adc
dec
dec
out
pop
push
movsb
pop
mov
ret
xchg
sbb
xorb
imul
fcompl
mov
push
shrl
mov
add
repnz
adc
outsb
jg
loope
push
dec
insl
imul
mov
cmp
lret
ljmp
mov
into
lods
insb
push
dec
inc
inc
or
sbbl
push
testb
roll
push
cwtl
dec
je
repz
cwtl
xor
dec
inc
sub
or
jge
sub
movsl
fistps
cmp
les
lea
adc
aaa
sbb
sub
loope
and
jbe
into
cmc
push
aad
ret
push
and
fnstcw
adc
daa
les
test
mov
xchg
push
dec
sbb
insb
mov
stos
inc
push
push
cmp
cmp
jo
ljmp
or
mov
stc
scas
mov
pop
xlat
or
aad
inc
mov
movsl
insl
xchg
incb
pop
aam
cld
jae
pop
lcall
xor
sbb
sti
loope
jg
mov
leave
repnz
push
jmp
mov
gs
out
popa
push
stos
add
hlt
jbe
and
mov
es
fidivl
sub
je
test
fldt
scas
pushf
aad
out
jbe
inc
int
inc
jl
adc
mov
js
push
out
add
mov
push
adcl
movsl
pushf
rcr
add
add
loopne
hlt
jo
dec
popa
test
xchg
hlt
movsb
and
xor
mov
dec
xchg
cmp
mov
mov
imul
push
xor
add
lret
mov
xchg
stc
push
pop
xchg
hlt
pop
loop
or
cmp
xchg
xchg
or
or
cmp
out
aas
inc
je
ffreep
js
outsb
adc
lods
in
scas
xlat
push
frndint
cmp
pop
ret
outsb
das
icebp
jb
ja
dec
mov
mov
sti
sub
cltd
into
jle
dec
ljmp
icebp
jno
push
das
cli
mov
fidivs
lret
stos
js
ja
jmp
fisttpll
arpl
xor
outsl
jle
test
cmpsl
bound
inc
push
inc
stc
jne
pop
jmp
or
out
aam
ja
scas
fistpll
pop
jmp
repnz
mov
add
rcrl
or
inc
push
frstor
sub
push
pop
stos
mov
shlb
cltd
jp
ss
sub
in
add
or
or
jb
rcr
adc
xchg
scas
push
xchg
movsb
test
stos
xchg
out
fisubrs
xchg
test
xchg
fcoml
jae
and
mov
dec
dec
jp
das
mov
adc
sbb
dec
cmp
mov
lcall
sbb
and
rcr
mov
mov
or
xchg
jae
push
ja
or
shrb
pop
test
gs
loop
call
inc
add
push
cmp
jle
add
xchg
cmp
adc
xchg
mov
dec
bound
repz
imul
stos
mov
scas
inc
jge
in
call
push
jno
test
adc
insl
xchg
jle
sub
inc
mov
lahf
jp
das
in
xchg
adc
lahf
jle
pop
adc
idiv
cmp
adc
movsb
nop
loop
mov
and
test
scas
mov
cltd
lret
aaa
lds
mov
int
arpl
pop
jmp
fwait
cmp
div
xchg
ret
aaa
push
lcall
shlb
adc
dec
lods
mov
andb
repnz
dec
inc
mov
jbe
test
ret
orl
repz
add
sahf
dec
or
mov
xchg
fs
xlat
jecxz
out
dec
sbb
push
sbb
bound
les
xchg
sarl
fcomps
adc
xor
add
add
mov
xchg
sub
ss
dec
pop
pop
insb
pop
and
mov
ds
push
int3
popl
add
cltd
cld
push
jecxz
or
push
clc
push
or
inc
rcl
push
lds
add
inc
mov
sub
push
int3
fldt
xchg
adc
xlat
cld
inc
jb
sahf
or
pop
dec
nop
arpl
mov
jbe
jmp
stos
adc
mov
fmul
sub
cmp
push
xchg
and
pop
sbb
cmp
lods
push
in
lcall
lea
lret
push
pop
mov
movsl
outsl
jecxz
rcl
fmul
test
sbb
test
push
sarb
mov
inc
pop
mov
mov
push
jmp
test
icebp
inc
dec
out
add
fistps
xor
jns
pop
xchg
subl
cld
push
pop
test
jl
test
sti
pop
test
lret
sahf
adc
ljmp
jmp
inc
dec
sbb
shlb
push
fistps
cmp
xor
sbb
xor
mov
and
rcrb
pushf
jbe
hlt
jle
cmpsb
loope
jnp
and
cmp
jbe
push
jae
std
mov
sub
or
push
mov
pop
cmp
xchg
sbb
inc
pop
adcb
lock
aas
add
xchg
sub
jge
or
or
inc
inc
push
mov
iret
lcall
lea
xchg
and
xor
ds
or
lcall
cld
insb
adc
jmp
lea
js
xchg
jae
mov
aam
jbe
push
sub
cmp
movsb
cmp
fsub
xor
mulb
jl
sahf
cmpsl
js
fptan
xor
loopne
sarb
stos
xchg
hlt
dec
rorb
arpl
fisttpll
jnp
adc
out
inc
out
mov
lret
mov
aaa
mov
in
or
xchg
outsb
and
pop
shrl
inc
scas
sbb
std
rorb
push
ja
cli
adc
stos
and
cli
aad
pushf
insl
mov
inc
out
mov
test
stos
sub
shr
pop
jg
stos
sub
xchg
out
test
aad
push
sub
mov
sub
cld
scas
arpl
xor
push
test
in
addr16
xchg
cmp
and
leave
lods
nop
lea
movsl
test
mov
lock
stos
test
insb
fsubrs
mov
ss
arpl
inc
out
push
fsubp
mov
adc
lds
repnz
into
pop
test
inc
mov
xorl
add
or
out
cmp
adc
ja
push
iret
pop
adc
inc
clc
xor
cld
jno
mov
sub
adc
mov
movsl
sti
lods
add
inc
inc
fs
out
dec
jg
sbb
sub
test
int3
and
std
xor
pop
fdivrl
pop
dec
test
stos
add
mov
and
mov
shr
cs
mov
aas
scas
cmpsb
sbb
ds
int
test
dec
cs
sarb
jecxz
cli
arpl
pushf
std
mov
pop
dec
add
mov
adc
dec
js
cmp
mov
mov
xlat
mov
es
dec
lds
add
or
pop
mov
pop
pusha
in
jecxz
sbb
mov
imul
sar
adc
lea
sahf
or
in
inc
lds
and
pop
popa
es
addr16
fdivs
push
dec
gs
scas
aad
mov
rclb
add
xor
clc
push
rcrl
mov
nop
popa
data16
cmp
imul
jnp
jp
or
xchg
sahf
or
lret
inc
mov
fdivrs
mov
cltd
push
lcall
or
sbb
pop
rep
sarl
adc
mov
fildl
sub
repnz
lahf
adc
fildl
or
aad
xorb
mov
pop
adc
fwait
std
insl
enter
mov
pop
cmp
adc
dec
cs
push
cmp
or
and
xchg
jns
scas
cmp
pop
ret
xlat
mov
jnp
sbb
jle
popf
in
mov
leave
adc
arpl
aaa
jg
aam
loop
dec
add
sbb
out
insb
cmp
jno
lods
push
mov
jbe,pt
or
pop
cmp
cmp
faddl
popf
push
divb
pop
push
lods
push
pop
icebp
push
push
stc
ret
sahf
inc
pop
fistpll
std
popf
sub
xchg
xor
add
pop
xchg
xchg
fs
dec
into
wrmsr
sub
push
mov
sbb
or
dec
inc
lret
mov
dec
xchg
mov
push
in
aaa
es
lcall
and
movsl
mov
mov
add
jp
mov
mov
sti
cmp
jge
fdivs
jb
rcl
outsb
repz
inc
scas
arpl
mov
or
mov
jp
fistps
rorb
insb
cs
ds
loopne
jle
mov
inc
add
shll
and
xor
pop
adc
add
mov
insb
stc
push
push
jg
aas
pop
fists
lret
aam
jge
and
mov
cmpsb
rorl
daa
pop
mov
and
sbb
aam
xor
fisubrs
mov
xchg
dec
jns
cwtl
xor
testl
pop
or
loop
push
adc
stc
ret
adc
xchg
jne
pop
popf
lahf
loopne
pop
jl
inc
mov
mov
or
jg
cs
add
adcb
inc
mov
inc
dec
push
jecxz
outsb
nop
and
mov
jg
mov
add
in
cmc
pop
push
cs
pusha
cmp
mov
in
xor
add
inc
xor
js
jecxz
jne
dec
pop
and
add
pop
jns
sub
mov
sbb
out
mov
rorl
mov
and
jge
or
jno
or
mov
rorl
mov
and
jge
or
jno
or
mov
push
rcrl
add
pop
shrl
jns
or
cltd
cmp
jmp
rcrl
dec
out
testl
push
mov
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
push
pushf
inc
mov
lods
sbb
ja
push
xchg
inc
in
xlat
mov
out
xchg
pop
xchg
insb
cmpsl
insb
push
pushf
inc
mov
lods
pop
faddl
int3
aaa
cld
daa
mov
sbb
or
cmp
xchg
cmpsl
insb
push
pushf
inc
mov
lods
pop
faddl
int3
aaa
cld
daa
in
xlat
sbb
das
test
inc
lcall
in
stc
sbb
sbb
rolb
add
adc
and
sbb
addr16
xchg
cmp
and
fcompl
and
je
and
repz
bound
push
les
scas
mov
dec
mov
xchg
push
add
leave
das
xlat
sbb
or
aaa
mov
addr16
inc
cltd
add
pop
int3
leave
hlt
dec
or
loopne
repz
shrl
or
jae
inc
pop
mov
lods
es
jecxz
sbb
ret
outsb
sub
jne
mov
add
inc
enter
xchg
shrl
jl
xchg
or
lods
pop
faddl
int3
aaa
cld
daa
in
xlat
sbb
or
cmp
sub
pop
xchg
cmpsl
sub
pushf
cs
adc
add
jnp
dec
mov
xchg
insb
ret
adc
repnz
or
push
repz
loopne
hlt
add
push
lahf
imul
jns
jle
pop
mov
fcmovb
sbb
fistps
fldenv
pop
out
pop
int3
aaa
cld
daa
in
xlat
sbb
or
cmp
sub
pop
xchg
cmpsl
insb
push
pushf
inc
mov
lods
pop
faddl
int3
aaa
cld
daa
in
xlat
sbb
or
cmp
sub
pop
xchg
cmpsl
insb
push
pushf
loop
int3
roll
int
stc
arpl
xor
xor
insl
call
xor
pop
rclb
aad
cmp
sub
lods
fistpl
cmp
dec
je
aam
push
fcmovu
loopne
out
cwtl
aad
pop
hlt
push
test
lcall
pop
inc
enter
jle
cs
pop
out
ror
inc
inc
mull
inc
in
or
arpl
xor
nop
mov
mov
inc
inc
xor
fstps
mov
nop
fbld
fisubl
popa
fs
fwait
inc
dec
add
in
popf
inc
sub
cmp
cmp
dec
iret
jbe
popf
jmp
cld
loop
sbb
test
aad
fs
mov
and
inc
sti
arpl
lock
loope
in
sbb
pop
inc
sub
in
ret
pop
lahf
push
adc
icebp
or
pop
leave
fimull
es
lock
insl
cs
ss
in
ss
cs
add
dec
in
add
lds
fstsw
pop
stc
notl
rcl
dec
xchg
aad
jbe
mov
xor
mov
into
inc
fcmovb
shll
mov
insl
js
xchg
dec
push
pusha
pusha
outsl
rcl
flds
jle
ja
sbb
aaa
adc
js
es
cltd
movsb
daa
xor
call
cltd
ja
pop
push
adc
sbb
jmp
mov
into
xchg
adc
lret
aad
movsl
xchg
int
xchg
aad
mov
xor
aad
push
cmp
test
cmp
dec
pop
jp
push
imul
cmc
divps
outsb
xchg
and
shll
jmp
sub
or
das
jo
mov
movntq
xorb
or
jne
mov
lahf
push
popf
fisttpl
repz
add
jnp
mov
fiadds
dec
sbb
in
adc
into
shlb
in
push
jge
add
pop
fwait
insl
xchg
inc
push
fcmovbe
pop
mov
mov
lahf
and
ljmp
jl
gs
jmp
dec
or
jle
in
mov
xlat
xor
xor
les
add
andb
inc
sti
xchg
push
loop
and
xchg
sbb
rep
movsl
paddusw
andl
sub
push
iret
jmp
std
mov
ss
sbb
pop
sbb
test
les
push
or
jg
lcall
and
xchg
cs
js
xchg
cli
les
and
adc
repnz
in
push
sbb
inc
testb
mov
inc
mov
xchg
cmp
fldenv
loopne
add
mov
ret
imul
in
inc
iret
outsb
fwait
jmp
push
cmp
std
fldt
dec
cld
jne
ja
pusha
xchg
mov
adc
insb
lock
adc
mov
mov
or
sub
test
int
cltd
iret
sub
test
aam
out
cltd
out
sbb
dec
out
fwait
jecxz
add
add
mov
xrstor
cmp
mov
es
pop
inc
adc
stos
add
sub
stos
jae
rorl
cmp
shll
addr16
int3
stc
sbb
testl
push
or
sahf
cmp
ds
test
xchg
mov
inc
movsl
push
in
cmpsb
out
add
mov
push
rclb
rcll
jno
out
push
das
mov
cmp
orb
ficoms
or
rcl
mov
sahf
xor
dec
cltd
scas
xchg
push
mov
jg
or
out
insl
sub
movsl
xchg
insl
jecxz
push
in
mov
jp
xchg
outsl
pop
bound
dec
test
sahf
sbb
bswap
mov
add
xchg
pop
xchg
adc
jl
jle
adc
aad
mov
loop
cmp
dec
enter
pop
mov
pop
mov
jl
fcomps
or
push
add
pop
jbe
and
lods
mov
jg
daa
test
lea
xor
dec
or
xor
lret
xchg
push
mov
inc
aas
popf
jg
cmp
fisubl
jp
and
cmpsb
jl
mov
mov
pop
add
add
xor
clc
ja
jle
pusha
cs
xchg
pop
aas
mov
mov
or
subl
or
and
sbbb
inc
push
stc
rcrl
imul
cltd
sub
mov
push
pop
mov
fldpi
test
push
jle
sub
sbb
stc
and
xor
xlat
inc
dec
addb
stos
push
push
sti
cmp
loop
addr16
sahf
andl
popa
lret
xor
mov
orl
dec
jl
xor
test
or
dec
fs
mov
aaa
mov
ret
aad
lock
mov
xchg
mov
cld
sahf
xchg
mov
ret
pop
lock
ss
push
lock
insl
sub
push
test
repz
mov
fisttpl
ds
sti
jecxz
adc
dec
push
fs
repnz
nop
xor
scas
xchg
daa
pop
aad
inc
sti
popa
bound
sub
das
mov
mov
enter
loop
cld
shll
fisubrl
jle
cwtl
pop
cmpsl
inc
orl
adc
jecxz
popf
ds
sahf
and
aaa
aas
pop
xchg
in
add
nop
xchg
in
fldenv
cwtl
cmpsl
xchg
jbe
sahf
xchg
adc
xor
push
popf
xchg
icebp
in
push
pop
dec
data16
sbb
aas
mov
or
jl
mov
fdivrl
js
mov
xlat
roll
pop
jmp
push
jbe
shrb
jle
or
mulb
leave
stc
mov
jge
movsl
in
pop
inc
jge
push
push
lods
call
mov
inc
pop
movsl
mov
cmp
and
xchg
xlat
push
sbb
das
arpl
xchg
jle
pop
iret
leave
in
add
ss
xor
xchg
mov
fdiv
mov
mov
jnp
inc
fwait
aad
dec
ret
lret
jmp
cmpsb
in
js
in
in
cmp
or
loopne
cmc
xchg
fucomp
testl
in
jl
sahf
ljmp
in
shll
les
les
add
inc
mov
inc
icebp
rol
js
das
mov
out
adcl
sub
jge
dec
fnstsw
pushf
mov
std
int
jno
xchg
mov
mov
cwtl
pop
dec
jbe
xor
les
mov
mov
andb
popa
push
mov
inc
lret
add
sahf
sub
inc
push
lock
sbb
jo
sarb
iret
mov
add
mov
mov
pop
adc
lock
out
and
decl
aam
gs
jbe
sbb
out
dec
pushf
or
sbb
fwait
cmp
imul
call
or
pushf
scas
scas
dec
arpl
jmp
xchg
rcl
aas
mov
lret
mov
cmpsb
dec
xor
rcrl
cmp
pop
jno
inc
push
aam
lret
jg
add
cmp
pop
xchg
es
lahf
movsb
rorb
sub
push
in
dec
or
outsl
dec
int3
imul
inc
xorl
xchg
cmp
jmp
into
add
sbb
adc
jecxz
sub
jae
and
pop
xchg
cltd
or
aam
jg
icebp
jne
inc
or
loopne
cli
icebp
push
jp
in
jge
clc
movsl
push
push
jbe
dec
add
cmp
out
push
lea
out
das
or
lods
movl
inc
inc
sti
pushf
fsub
or
cs
add
jno
cld
pop
dec
sbb
push
mov
jbe
push
scas
push
or
stc
scas
sub
and
data16
dec
ret
andl
cmp
lahf
iret
xchg
scas
push
lods
lret
and
cltd
orb
inc
lock
xchg
and
mov
ds
cmp
push
mov
push
leave
int3
fsubrs
ja
jge
insl
mov
fcomps
sbb
xchg
or
in
hlt
cmc
mov
or
mov
outsb
fstl
adc
pop
lret
xchg
or
repnz
leave
mov
arpl
test
out
in
mov
sub
iret
dec
out
pop
cmp
sti
push
and
stos
push
dec
sahf
call
repz
add
push
jecxz
iret
aad
and
mov
int
mov
inc
dec
jne
mov
push
jecxz
cmp
test
test
insb
aam
xor
imull
js
xchg
mov
leave
jnp
jg
cmp
std
repz
dec
mov
and
lcall
xor
divb
mov
movsb
pop
fsubs
lock
je
cmp
sarb
cs
sbb
cmp
pop
dec
mov
and
scas
nop
mov
insl
or
cmp
lods
xorl
mov
xor
stc
lock
stos
sbb
repnz
addr16
pop
enter
pop
add
sub
dec
lcall
mov
cltd
mov
stc
loop
push
imul
cmp
pop
pop
xlat
pop
repnz
push
mov
jecxz
xor
xor
jae,pn
and
dec
inc
mov
sahf
ret
std
adc
dec
jae
mov
jl
cmc
lock
mov
xchg
pop
jnp
lahf
lds
in
jbe
xchg
mov
xchg
insl
sbb
fidivrl
mov
mov
popa
xchg
bound
mov
test
dec
push
jmp
jo
mov
mov
push
std
aam
push
outsl
js
dec
sbb
clc
repnz
dec
and
fwait
xlat
or
pop
xor
mov
sub
imul
lea
out
lea
mov
sti
pushf
gs
sti
sbb
xor
into
hlt
ljmp
arpl
jg
pushf
mov
pop
cmp
in
sub
dec
fsubrl
sbb
mov
adc
push
and
and
pop
push
and
pop
dec
sub
cmp
and
js
mov
and
pushf
in
mov
mov
out
popf
push
mov
dec
rolb
cli
mov
out
or
fidivrs
and
add
sbb
sbb
inc
repz
or
stc
imul
or
add
fidivl
mov
mov
add
mov
fsubl
dec
fidivl
cli
rorl
dec
ss
std
lcall
mov
das
lea
out
or
dec
and
js
pop
jle
pop
ds
push
sbb
test
pop
push
xchg
in
lods
cmp
fidivrl
jno
hlt
mov
test
clc
out
xor
add
sub
sbb
insb
andps
cld
pop
mov
pop
dec
adc
out
test
push
cli
divl
push
mov
imul
adc
mov
fiadds
push
jmp
subl
cld
aad
jmp
cmp
inc
scas
outsb
dec
and
iret
xchg
cmpsl
data16
inc
mov
mov
rcl
lock
stos
in
repnz
ljmp
jnp
aam
push
cltd
aaa
sarb
xor
sub
fcomip
adc
imul
pop
test
les
mov
rcrb
aaa
shl
mov
pop
inc
cli
mov
inc
mov
jle
push
mov
stc
ljmp
outsl
mov
push
sub
pop
stos
inc
mov
cmp
movsb
mov
or
add
inc
push
out
add
jmp
and
add
sbb
mov
push
fcoml
mulb
fists
jg
pop
pop
mov
clc
pop
push
add
xor
test
cmp
push
mov
inc
fbstp
jle
jne
rorb
inc
test
aam
mov
cmp
adc
call
fcoms
ds
repz
mov
and
adc
sub
mov
ret
mov
mov
add
pop
sbb
add
mov
fmul
ljmp
popa
dec
pop
mov
jle
and
push
dec
les
pop
addr16
pop
sub
jb
sbb
sahf
daa
sub
dec
and
iret
add
inc
xchg
and
or
mov
repnz
push
xlat
xchg
and
jne
push
pop
aas
jecxz
iret
xchg
xchg
into
in
adc
pop
and
adc
jnp
xor
cmp
addr16
lds
ret
or
mov
add
jne
xchg
cmp
sbb
sahf
sbb
mov
pop
jo
push
mov
leave
cs
mov
mov
pop
iret
mov
shll
mov
imul
enter
pop
test
in
stos
pop
repnz
inc
rcr
adc
cs
scas
pushf
cltd
inc
adc
dec
and
xor
stos
test
mov
push
aam
mov
ss
and
mov
das
add
xchg
xchg
jns
and
fisubrl
daa
ret
data16
test
in
jl
js
in
and
cli
repnz
mov
lods
js
std
fdiv
mov
xor
add
add
pop
jo
xor
pop
sbb
cmp
addr16
cltd
iret
jle
aam
cmpsb
inc
jge
xlat
adc
inc
es
push
or
add
fwait
ja
pop
push
inc
pusha
dec
test
shll
arpl
jne
inc
call
nop
sub
pop
pop
xor
mov
push
push
jmp
aaa
shrb
cmp
pop
dec
ficompl
xchg
mov
loope
testl
push
jb
ss
divl
int
or
lahf
add
out
je
pop
inc
fdivr
aad
out
ret
push
test
adc
gs
pop
cmp
push
cmp
mov
into
cmpsb
insb
or
lcall
mov
movsb
cmp
jge
insl
stos
mov
enter
and
xchg
fisubrl
ret
fstpt
sbb
mov
outsl
rcrl
xlat
mov
adc
int3
test
ljmp
ret
inc
loopne
hlt
aas
repz
sub
inc
sti
mov
push
je
stos
faddl
in
xchg
mov
out
xor
pop
enter
inc
stc
pop
dec
push
loop
jne
mov
addr16
or
mov
jbe
adc
dec
jae
pop
jno
decb
sub
ljmp
and
pusha
cwtl
cwtl
sahf
xor
and
imul
cmp
aas
lahf
or
mov
ss
out
mov
mov
das
repz
fwait
in
movsl
scas
xor
cs
pop
push
movsl
pusha
orl
int3
pop
push
push
mov
or
xchg
fnstcw
inc
cmpsb
dec
cld
mov
shlb
cmp
sub
std
adc
jecxz
dec
fst
shl
pushf
sub
jp
movb
imul
bound
pop
lcall
push
pushf
xor
sti
inc
add
cmp
icebp
xor
fprem1
sub
jbe
inc
mov
jno
jmp
inc
aas
fs
adc
mov
dec
ja
jle
inc
push
jo
or
subl
push
jo
fstl
filds
mov
mov
mov
adc
aad
pop
dec
mov
popa
jnp
cltd
mov
out
cs
jmp
fiaddl
inc
cltd
xor
fiadds
adc
xor
flds
into
inc
jge
cmc
push
jns
fstpl
fisubs
fldl
mov
cmp
test
adc
js
ret
cmp
fadds
or
xorl
sbb
ret
sahf
sub
lret
repnz
movsl
fisttpl
les
jbe
jmp
fidivl
and
push
andl
mov
fstpt
mov
decl
adc
inc
xor
and
adc
xor
jle
mov
jmp
fs
xchg
jno
sbb
mov
pop
jnp
lcall
test
enter
mov
adc
push
dec
inc
or
pop
cmpsb
adc
jb
jp
push
and
push
daa
sub
sub
adc
mov
mov
jle
sbb
cmp
or
divl
sbb
cmp
jb
xchg
xor
enter
sub
scas
imul
add
mov
jle
insb
mov
jno
sbb
dec
fstps
mov
sub
jmp
pop
out
cld
jno
add
cmp
xchg
jo
pop
jl
cli
icebp
int3
inc
push
xchg
adc
sarl
ret
xchg
sti
sbb
lds
xchg
xlat
repz
test
repnz
pop
lea
hlt
and
loope
out
inc
push
push
and
and
and
inc
jmp
mov
pop
jp
pop
pop
mov
dec
rcrl
push
pop
xor
in
push
sbb
pop
dec
std
cltd
mov
jae
iret
rorl
dec
jns
cmp
icebp
loop
push
fsubr
inc
or
mov
scas
sti
mov
pop
sti
aad
fcmovnb
pop
popa
xchg
mov
push
push
push
pop
out
dec
push
or
loopne
in
inc
add
pop
mov
lds
subl
pop
dec
lods
mov
fidivl
adc
loop
leave
jb
ret
addb
inc
fsubr
rcll
aad
js
stos
ja
fs
jp
mov
imul
popf
mov
cmp
std
ss
sub
mov
sbb
push
cmp
xchg
popa
inc
dec
subb
fwait
lods
fldcw
fnstcw
outsb
dec
push
mov
and
dec
pushf
iret
pushf
cmpsb
add
sbb
lea
mov
sub
mov
aam
pusha
outsb
inc
sbb
les
movsl
pop
mov
cld
xor
and
xor
push
and
or
lret
dec
xor
lahf
xchg
inc
daa
pop
pop
cmp
mov
push
arpl
in
inc
mov
push
cs
and
hlt
repz
sbb
in
mov
pop
sub
and
inc
pop
andb
or
jp
or
inc
lods
rcrl
and
sbb
push
aaa
shll
mov
bnd
ds
fs
cmp
imul
cmp
subb
push
dec
push
xor
mov
xchg
stos
pop
lret
push
loope
ja
mov
xlat
adc
xchg
mov
jbe
inc
xor
es
daa
pop
sbb
insb
pop
push
jbe
test
push
mull
shr
dec
scas
push
pop
outsb
cmp
adc
jnp
and
push
arpl
adc
xor
pop
pop
mov
push
push
cltd
jae
fsubl
and
int
stos
adc
mov
and
cmpsb
xchg
stos
lds
dec
mov
or
add
test
lret
lret
xor
outsb
push
aam
dec
ss
into
xchg
popf
movsb
stos
and
xor
mov
ret
and
jmp
stc
push
int
out
mov
inc
adc
pop
punpcklbw
sbb
pop
loop
xchg
insb
push
jl
dec
sub
inc
insb
jge
adc
jg
cmc
add
loope
mov
dec
aam
hlt
sbb
mov
xor
into
jo
sub
cs
xor
js
or
lret
lock
mov
fsubl
sbb
or
js
in
sub
push
mov
mov
mov
imul
arpl
mov
push
inc
clc
outsb
mov
jle
inc
or
lret
lds
sub
bound
inc
jne
push
xchg
dec
repnz
in
lods
adc
fsubr
in
or
dec
mov
fstps
in
ret
popa
inc
jnp
lods
loopne
push
xchg
cmp
bound
dec
mov
outsl
pop
imul
fsubl
cld
or
cwtl
sbb
mov
movsb
leave
shrl
aad
inc
imul
dec
rclb
fisttpll
out
xor
push
sbb
cmp
int
std
mov
scas
push
xor
fdivrs
int
push
xlat
lods
loope
fildl
add
xlat
loop
mov
das
in
mov
add
lcall
and
cmpsl
in
pop
daa
mov
fcoms
xor
pop
sub
sub
mov
fildl
add
arpl
in
push
jnp
add
jge
test
lods
js
pcmpeqd
jmp
push
inc
xchg
aad
mov
ss
movsb
lcall
into
xorb
rolb
xlat
adc
or
faddl
dec
pusha
xchg
lea
popf
sub
out
insb
imul
cmpsl
push
xlat
xor
jne
outsb
jbe
addl
scas
dec
aam
push
lds
in
movsl
and
cmp
jnp
test
fs
addl
push
jno
popa
shlb
leave
out
or
xor
loope
xorb
push
insl
sub
xchg
adc
sbb
sub
stc
mov
faddl
int3
aaa
cld
daa
in
xlat
sbb
or
cmp
sub
pop
xchg
cmpsl
insb
push
pushf
inc
mov
lods
pop
faddl
int3
aaa
cld
daa
in
xlat
sbb
or
cmp
sub
pop
xchg
cmpsl
insb
push
pushf
inc
mov
lods
pop
faddl
int3
aaa
cld
daa
in
xlat
sbb
or
cmp
sub
pop
xchg
cmpsl
insb
push
pushf
inc
mov
lods
pop
faddl
int3
aaa
cld
daa
sub
sbb
cmpsb
pop
cmp
pop
loopne
btr
pop
xchg
jns
pushf
fcoms
add
jp
or
mov
xchg
push
in
aam
les
cmp
and
adc
add
je
fs
test
int3
in
movsb
js
push
sbbb
push
movsb
fcoms
mov
movsb
js
mov
cmp
aaa
in
aam
mov
cmp
add
push
popf
jae
mov
inc
pusha
xchg
loop
stos
hlt
mov
data16
leave
sub
lea
fwait
fs
sar
insl
pop
or
outsl
push
push
sub
fs
xor
adc
test
cld
fistl
xor
lds
imul
cmc
or
imul
jno
pop
enter
inc
jne
fwait
lock
push
inc
inc
mov
pop
jnp
jns
out
rol
imul
les
lods
out
adc
hlt
dec
imul
sbb
and
jmp
mov
sbb
call
pop
xor
or
out
sub
mov
adc
push
cwtl
push
jb
cmp
ss
dec
js
xor
mov
fcoms
push
sbb
adc
inc
shll
les
insb
mov
lea
sbb
aaa
aam
sub
call
push
mov
sahf
pop
lahf
fs
fs
push
test
mov
xchg
push
in
aam
les
xor
and
adc
add
je
fs
push
test
mov
xchg
push
in
aam
les
xor
loopne
mov
adc
les
inc
xor
xor
outsb
add
xchg
test
sub
in
int3
xlat
xor
cmp
in
loopne
xchg
lds
mov
insb
jb
cwtl
sbb
icebp
loop
out
das
sub
sahf
in
xor
add
push
dec
out
adc
loope
mov
sub
rcrl
ja
loopne
rcll
xchg
jge
mov
test
js
ret
hlt
lret
scas
sub
lcall
lret
fistps
aaa
xchg
cmpsb
xlat
adc
ret
enter
mov
scas
popf
scas
test
inc
xchg
mov
fwait
add
scas
lods
ds
mov
xchg
cs
pop
adc
push
mov
mov
ds
sti
jo
jp
push
faddp
push
jb
adc
cltd
ret
add
imull
pop
fsubl
je
test
mov
add
loopne
mov
cmp
lcall
pop
xor
leave
hlt
fwait
add
lea
in
mul
pop
or
lret
dec
loope
or
cs
adc
xchg
mov
add
out
call
xlat
shrb
sbb
add
dec
repnz
stos
inc
int
mov
jb
mov
cmpsb
jae
push
jle
shr
and
enter
into
movsb
outsb
imulb
iret
add
mov
es
lea
dec
mov
aad
adc
or
sub
push
sahf
pop
push
inc
dec
insb
jno
and
fistpll
ljmp
xchg
xchg
cmp
loope
xchg
fiadds
in
test
xor
test
jo
inc
les
push
bound
and
clc
fs
adc
pop
repz
loop
movsb
sti
push
mov
mov
push
sbb
lods
idivb
push
adcl
pop
nop
pushf
sahf
mov
and
shlb
jne
add
inc
pop
fcmovnb
movsl
xchg
mov
leave
out
xor
push
cli
fsubrl
loop
mov
int3
stos
out
lret
and
shrb
adc
cld
pusha
clc
movsl
mov
mov
lret
repz
jle
pop
cmpsb
dec
ss
out
aad
adc
jmp
lock
loopne
into
ret
jg
clc
lcall
cltd
and
clc
repnz
dec
cmpb
repnz
sarb
stos
iret
push
addr16
in
les
dec
cmp
cli
add
mov
jl
pop
xchg
mov
test
inc
xchg
stos
adcl
xchg
mov
adc
fildl
aam
push
mov
mov
daa
out
or
movsl
push
push
xor
insl
mov
lock
cld
into
and
into
enter
add
int3
cld
push
inc
jnp
daa
mov
jns
and
and
or
andb
sbb
mov
fsubrl
lods
ss
push
fcompp
clc
fistpl
fs
popa
enter
insl
ffree
push
insl
and
xchg
mov
sarl
in
out
xor
xchg
push
insl
movsb
xchg
rol
ss
cmp
lahf
sub
add
jbe
mov
and
xchg
fistpll
mov
aam
cli
pop
push
cmp
jne
push
jbe
push
add
cmp
pop
loopne
rolb
in
xor
add
xchg
mov
mov
cmp
cmp
mov
pop
sbb
adc
jo
insl
call
scas
out
sbb
in
xchg
imul
mov
scas
jp
push
inc
sub
mov
in
jnp
shl
push
iret
adc
mov
inc
push
mov
pop
and
inc
mov
pop
pop
cli
and
cmp
fs
or
scas
fists
xchg
pushf
xlat
pop
jl
adc
lahf
js
adc
aas
xchg
xchg
adc
lahf
mov
or
or
nop
mov
mov
or
inc
mov
mov
add
sarl
mov
bnd
movsl
lods
bound
mov
dec
ljmp
loop
mov
ds
push
adc
stc
outsb
hlt
xchg
pop
add
and
sar
mov
repnz
jp
cmpsl
pop
fdecstp
mov
fdivs
daa
or
stos
adc
mov
sbb
jg
jnp
out
fildll
clc
pusha
mov
scas
dec
icebp
mov
lret
jle
subb
jb
outsl
fildll
test
enterw
mov
orb
flds
sub
iret
mov
mov
nop
lcall
xor
push
orl
jnp
adc
loope
inc
mov
or
mov
fs
and
jle
mov
repz
enter
dec
cmpw
and
jnp
popl
repz
lret
lock
lret
jbe
aas
xorb
in
aad
mov
mov
jo
fisttpll
je
je
insb
jbe
dec
rorl
mov
push
out
out
or
jge
scas
pop
sub
cs
sub
mov
mov
sti
xor
xchg
and
clc
xor
pushf
mov
out
sti
sahf
push
clc
loopne
push
fs
inc
mov
mov
push
ds
or
aam
mov
cli
sbb
fstl
and
sbb
or
stc
aas
sbb
das
push
dec
fwait
pop
xor
jo
mov
mov
jp
into
fucomip
cmp
into
cmpsl
aad
dec
js
xor
jmp
jae
std
jnp
xorl
jl
lahf
out
scas
add
nop
jp
push
insb
stos
in
aaa
pop
pop
call
movsl
test
cmpsl
jecxz
xchg
out
sbb
in
mov
xor
cltd
adc
push
jg
int3
sub
adc
sub
adc
mov
mov
adcl
rclb
jmp
mov
pusha
fsubp
push
mov
js
rcll
sbb
pop
data16
mov
repz
call
or
lock
jae
sub
data16
lods
dec
popa
arpl
and
jmp
pop
test
inc
fildl
add
cltd
pop
loop
adc
xchg
mov
fidivs
push
out
jle
in
mov
dec
popa
mov
xchg
repz
cmp
mov
jno
addb
xor
dec
rol
out
fwait
mov
int3
mov
push
icebp
mov
xor
leave
jecxz
sub
sub
loope
adc
jmp
jmp
mov
stos
dec
movsb
orb
bswap
sub
mov
or
push
orb
xchg
scas
pop
inc
xchg
jnp
aaa
pushf
cmp
mov
rcrb
mov
cmp
ja
lahf
mov
jns
add
dec
pop
ficompl
push
push
daa
and
pop
pop
xchg
add
pushf
mov
cwtl
pushf
jns
imul
pushl
rolb
fcmovne
inc
add
outsb
int3
and
mov
insb
movsl
sbb
inc
sub
pop
std
movsl
mov
repnz
mov
mov
add
dec
cmp
adc
fsubrp
out
imulb
and
das
xchg
aad
jmp
mov
dec
mov
lods
inc
test
inc
jae
mov
ret
and
pop
mov
repz
out
pop
xchg
popa
push
int
in
cmc
and
rcl
test
and
aam
gs
pop
mov
jge
pop
repz
sbb
adc
and
subb
je
push
negb
cli
loop
inc
cwtl
jp
outsl
xchg
lods
movsl
dec
out
mov
cmpsl
stc
xor
push
cmpsb
ret
jne
mov
dec
cmp
cltd
xor
int3
test
cld
add
sub
pop
cmp
mov
shrb
shr
movsl
sbb
xor
mov
fcomps
sub
inc
fsubrl
outsl
pop
xchg
push
popl
repz
lret
cmp
ljmp
mov
jmp
inc
mov
mov
mov
lds
xor
cmp
xchg
push
mov
cmp
lret
or
repnz
push
cmp
mov
adc
cs
sbb
dec
mov
sub
les
dec
or
sub
pop
mov
pushf
mov
mov
out
mov
loope
repz
cmp
int3
enter
imul
jno
rcrb
out
in
inc
lds
mov
lret
mov
inc
dec
cmp
int
push
cmp
and
add
xor
ss
shll
lcall
jno
adc
rorl
xor
pop
xchg
mov
outsl
jle
divb
in
das
fdivs
pop
add
sbb
jns
add
sub
dec
adc
sbb
pop
pop
xchg
dec
xchg
adc
call
jae
fists
ficoml
cmp
push
inc
lods
xchg
ja
adcb
mov
jns
mov
clc
cli
mov
add
and
mov
test
cmp
mov
or
into
sub
sbb
popa
xchg
sbb
lods
pusha
jae
cltd
jg
jg
in
sbb
in
or
push
inc
mov
push
or
stos
push
or
and
add
es
xor
repz
stos
pop
xor
jb
add
cmp
push
repnz
dec
js
cmp
or
jge
mov
out
jns
in
lcall
add
dec
daa
jae
ss
test
rorl
mov
sbb
iret
fwait
scas
mov
into
and
adcl
xchg
mov
and
add
sbb
sti
or
xlat
sub
gs
insb
test
test
xor
sbb
jns
pop
js,pn
inc
pop
jne
sahf
lret
inc
jl
lock
mov
fwait
stos
loopne
mov
cmpsl
add
jae
rcll
lods
pop
sbb
pop
bound
sub
push
fmul
fldl
xchg
dec
sarl
or
ljmp
push
dec
lock
stc
jb
jmp
add
cmp
mov
sbbb
in
pop
hlt
mov
jp
mov
sub
and
test
imul
aad
mov
add
dec
xchg
repz
sbb
fdivr
sbb
in
mov
rdmsr
inc
int3
inc
jge
push
xor
push
jp
pop
int3
mov
sar
lcall
out
jp
jp
in
push
pop
and
test
fwait
in
pop
add
xchg
mov
jmp
pop
dec
and
stos
dec
sti
popa
pop
push
push
and
icebp
shrl
aad
cld
hlt
fcompl
es
jl
or
add
pop
fwait
jne
push
sub
adc
inc
dec
mov
in
mov
adc
lods
adc
scas
inc
add
pushf
mov
cwtl
pop
xor
dec
in
xor
sbb
xchg
cmp
popa
cmc
and
loop
scas
or
leave
jecxz
mov
scas
and
sbb
and
push
bound
xchg
rcl
add
popa
pop
into
or
cmp
ret
push
scas
cmp
movsb
jno
push
jmp
fs
pop
fistl
mov
cmp
mov
mov
jae
sub
ss
cmp
mov
movsl
mov
lock
pop
sbb
and
scas
lcall
stos
mov
sbb
pop
out
add
fsub
lock
mov
andb
idivl
xchg
pop
std
jb
jmp
pop
sub
sub
jle
push
and
jb
jl
pop
inc
and
jge
or
daa
pop
ret
adcb
ficomps
push
dec
mov
inc
mov
in
cs
rol
add
aad
mov
sbb
inc
scas
flds
fnstcw
cmp
in
and
mov
shll
pop
out
pop
mov
out
mov
daa
xchg
imul
adc
outsl
add
mov
mov
gs
pop
outsl
or
loope
cmp
mov
icebp
add
sarl
xchg
xlat
in
js
add
cmp
mov
rcl
add
bound
nop
aas
sbb
shll
fcomp
cmp
and
in
push
xor
dec
push
xor
out
test
inc
xchg
inc
ret
dec
icebp
push
lahf
cld
movsb
stos
add
xchg
push
add
jp
repz
inc
call
mov
outsl
stc
icebp
or
ja
jbe
mov
mov
mov
and
push
push
into
and
test
or
jge
es
adc
sub
push
cmp
add
dec
xlat
push
jg
clc
cmp
idiv
fs
int3
les
pop
or
mov
adc
xor
push
notb
aam
push
xchg
shrl
cmpsl
push
iret
dec
enter
add
stc
in
in
addr16
stos
mov
cmp
jbe
cmp
adc
mov
push
xchg
fstl
xchg
ljmp
mov
cld
out
lods
xchg
ror
sbb
cmc
cmp
inc
mov
jo
pop
add
enter
jns
inc
pop
aad
mov
inc
mov
inc
mov
fdivrl
fisttpl
mov
bnd
push
and
inc
fstpt
adc
add
dec
je
mov
jp
push
lods
dec
jge
pop
stos
fcomps
test
xor
sub
add
loop
or
mov
test
lock
adc
dec
pusha
dec
repnz
mov
jne
mov
mov
xor
into
mov
insb
and
xor
fwait
outsb
aad
or
movsb
nop
dec
cmc
in
insb
and
adc
pop
sarl
lret
push
cmpsb
jbe
rcrl
mov
push
test
jb
or
cmp
add
icebp
ja
fidivl
fwait
lods
cld
xor
ja
push
sub
imul
mov
test
leave
and
and
mov
sbbb
rclb
in
xor
dec
jno
dec
lods
xor
out
push
flds
cmc
subl
jecxz
add
je
andb
jae
outsb
scas
fstpl
fprem
in
pushf
sahf
sbb
out
cmpsb
xor
or
fmull
test
push
cmpsb
jo
dec
sub
inc
lret
fstpl
ficomps
mov
int
inc
bound
lahf
lock
mov
xchg
movsb
or
jg
movsl
add
cmpsl
mov
sbb
xor
sarl
jnp
imul
pop
jmp
jecxz
shr
inc
jo
pop
cmc
loopne
and
fadds
push
pop
out
mov
dec
fstps
lock
add
dec
push
dec
pop
xcrypt-ctr
cmpsl
sbb
mov
inc
aas
push
and
or
and
movsb
fsubrs
cmp
ljmp
test
push
dec
loopne
pusha
and
dec
or
or
insl
inc
enter
ficomps
inc
movsb
outsb
push
je
out
dec
adc
mov
add
pop
jmp
gs
jnp
mov
pop
shll
jno
xor
xchg
repz
add
ljmp
leave
jne
sahf
pop
sub
xor
jg
clc
jg
mov
pop
hlt
sbb
dec
xor
lods
add
jmp
in
out
addr16
addr16
mov
jne
fwait
pop
xchg
add
bnd
jno
sbb
idiv
jmp
mov
int
jge
nop
mov
jns
cmpsl
in
cwtl
push
aad
add
into
mov
push
fwait
sbb
cltd
lock
adc
push
out
xchg
repz
mov
cmp
ds
lock
mov
jo
pop
lea
dec
mov
clc
sbb
mov
testl
push
xor
lock
push
pop
ret
sbb
movsb
lahf
test
mov
dec
jns
mov
mov
mov
cmp
fs
in
cld
fcmovu
sub
rcl
add
nop
push
adc
divl
pop
outsb
subb
pop
sub
ljmp
jne
cltd
sub
add
and
or
ficomps
sub
out
bound
mov
push
jle
xor
mov
push
dec
inc
mov
mov
xchg
inc
jg
push
repz
sub
push
cmp
je
cmp
fbstp
shrl
in
adc
mov
add
inc
sub
inc
mov
es
dec
push
jno
xor
fsubrp
scas
sbb
or
mov
cmp
mov
mov
shll
fs
mov
push
xchg
idivl
mov
fsubs
fucomp
ds
ja
cs
mov
js
stos
pushf
adc
push
jne
dec
nop
fisubrl
sahf
cmc
lcall
mov
xor
dec
inc
jae
push
add
lock
fnstsw
jle
and
inc
push
push
sbb
cs
sbb
lcall
loop
fisttpl
stos
pop
outsl
xchg
into
sti
xor
fdivrp
gs
pop
int
stos
lds
cmp
scas
pop
mov
fmuls
lcall
in
dec
je
mov
subb
ss
dec
roll
and
lock
lea
incl
lods
into
add
add
movsl
xor
cmp
mov
jge
xchg
out
push
jp
sub
movsl
pop
iret
mov
das
cmpsl
cwtl
inc
sbb
mov
lret
hlt
pusha
es
ss
mov
dec
popa
into
jmp
pusha
and
stc
dec
jbe
cs
sub
int3
mov
seta
push
loope
sbb
icebp
arpl
pop
leave
movsb
popf
push
xor
push
pop
jle
inc
jae
dec
push
and
inc
mov
test
pushf
aaa
rcrl
xorb
mov
scas
ljmp
pusha
xchg
lods
sbb
sbb
mov
or
mov
push
mov
sbb
dec
jl
fninit
cwtl
and
into
andb
mov
aas
or
or
and
jg
gs
and
sub
xlat
scas
push
pop
int
add
mov
lret
pop
out
inc
arpl
mov
dec
mov
or
les
mov
pop
mov
lea
jmp
loopne
mov
xorb
mov
push
fcomps
inc
push
test
push
push
xchg
call
outsb
push
out
insl
xchg
cmp
subl
leave
push
sar
div
or
jo
fadds
sbb
mov
sbb
popa
aad
popa
mov
mov
scas
movsl
push
mov
push
jne
mov
jne
pop
inc
lret
mov
repnz
push
xchg
pop
outsb
or
test
push
adc
jecxz
xchg
fptan
push
jp
xchg
daa
jmp
xchg
das
rcrb
subb
mov
dec
jne
inc
jecxz
or
aaa
push
ja
cli
jp
scas
pop
lods
fiaddl
test
out
enter
cmp
test
mov
into
psubd
into
push
icebp
pop
inc
pushf
or
or
sti
ljmp
inc
sarb
jae
addl
das
cmp
loope
dec
push
jge
mov
aas
ss
add
int3
mov
and
push
sbb
inc
outsb
mov
mov
xchg
lahf
lods
jnp
mov
test
mov
insl
add
das
test
outsl
sub
outsb
lds
inc
js
scas
fnstsw
scas
loop
stos
psubq
les
sbb
mov
push
in
gs
jno
or
jb
add
sub
dec
ret
mov
mov
aam
scas
add
cmpsb
ret
inc
fs
add
mov
lea
roll
dec
mov
call
dec
adc
jae
mov
call
cmc
pusha
fldl
mov
jmp
shll
dec
push
test
mov
rorl
inc
jns
sub
gs
rorl
in
idiv
xor
lcall
xchg
and
jecxz
or
inc
jp
xlat
mov
xchg
dec
movsb
inc
repnz
in
or
pusha
sub
idivl
ret
fcmovbe
mov
and
mov
adc
xchg
data16
sub
add
sbb
and
jge
xchg
out
call
shl
mov
cmpl
in
int
mov
dec
add
outsl
mov
jo
mov
es
sarl
test
test
push
jp
frstor
add
arpl
mov
test
push
add
cmpsl
outsl
sub
lock
add
push
mov
and
adc
andb
clc
jb
inc
fadd
pop
sbb
add
push
arpl
jns
fcomps
sbb
je
fs
push
test
mov
xchg
push
in
aam
les
xor
and
adc
add
je
fs
push
test
mov
xchg
push
in
aam
les
xor
daa
nop
add
add
jne
pusha
xor
mov
popf
push
std
sbb
or
cmp
or
pushf
call
je
push
sub
mov
ds
insb
out
xlat
cmp
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
sahf
inc
aam
in
hlt
jno
push
out
test
xor
rcll
push
icebp
add
push
shll
xor
roll
push
aam
hlt
jno
add
dec
rcll
mov
add
adc
mov
inc
int
cld
popa
in
jno
add
xor
lea
xchg
add
sub
pop
cmc
push
les
mov
aam
test
lcall
and
mov
loope
cmpsb
jo
call
js
dec
pop
adc
jo
mov
imul
sub
stos
mov
loope
lock
mov
aam
lods
xchg
ss
mov
lods
mov
add
xor
adcl
adc
les
pusha
jg
mov
enter
repnz
fs
sub
adc
fstl
mov
add
fisubs
jno
je
scas
dec
adc
loope
aam
stos
pusha
jns
cmp
pop
adc
mov
ds
rcrb
add
les
push
in
jecxz
xchg
add
xor
dec
sarl
icebp
sbb
or
and
sub
addb
stc
push
cmpsb
inc
flds
lods
push
mov
push
and
les
aam
andl
aas
enter
inc
test
mov
popf
popa
out
addr16
push
aam
fildll
adc
xchg
adc
push
shll
icebp
add
adc
and
xor
les
push
in
hlt
jno
add
inc
rcll
je
add
adc
and
xor
les
inc
mov
les
fisubl
mov
popf
out
inc
jle
mov
aaa
insb
cmp
xchg
out
popa
pusha
repnz
add
mov
xor
dec
dec
dec
loop
mov
mov
cmp
inc
ret
xchg
test
mov
jo
and
cmpsl
idiv
sub
in
cld
push
repz
or
jge
dec
test
std
mov
push
ja
jmp
mov
repz
mov
ja
in
sbb
cmp
arpl
insb
jmp
enter
pop
cmp
aam
dec
cmp
adc
out
or
leave
xchg
inc
sub
sub
xor
call
enter
push
cmp
std
mov
fs
mov
lcall
fcoms
add
popa
pop
dec
jne
das
stc
sbb
test
pop
lret
repz
bnd
inc
stc
add
or
ret
shrb
push
je
push
sub
add
stos
inc
or
into
pushf
inc
imul
xchg
or
into
lods
pop
data16
fcomi
inc
cltd
mov
jno
insl
out
inc
mov
je
lret
ret
mov
dec
push
xor
repz
push
ds
popa
dec
mov
call
cmp
faddp
jbe
pop
and
xchg
mov
pop
cmp
nop
pop
cmp
inc
push
arpl
jle
xor
sub
bound
add
push
in
es
jne
iret
jmp
inc
xlat
lods
and
jo
ljmp
ss
movsl
and
jp
jle
xchg
shrb
sbb
xchg
push
push
fnsave
inc
int3
enter
out
and
inc
fimull
inc
popf
fwait
in
enter
or
int3
out
dec
out
std
pop
into
fcmovb
scas
movsl
xchg
imul
or
repz
jne
sbb
clc
sahf
or
adcl
cwtl
mov
js
adc
shrl
data16
jg
jb
adc
lea
lret
dec
push
outsb
rorl
enter
ss
jge
mov
jl
int3
push
pop
outsb
out
stos
sbb
fucomip
enter
pop
mov
stos
or
or
and
sub
mov
xchg
ds
jg
jp
daa
fcmovu
push
aam
jl
xor
leave
imull
dec
xchg
out
mov
mov
add
or
sarl
mov
rcll
xchg
jnp
shll
dec
and
leave
addr16
and
add
adc
scas
and
mov
hlt
leave
sub
mov
cmp
push
mov
xchg
sbb
outsl
fildl
in
iret
movsb
add
adc
loopne
or
xchg
cmpsb
jp
lahf
xchg
push
test
imul
inc
mov
or
rorl
mov
mov
iret
vpsubsb
int
cmp
aad
adc
rcrb
hlt
rcrl
call
push
inc
test
xor
pop
cmp
mov
push
adc
jo
imul
ret
lcall
inc
mov
lret
shlb
inc
faddp
jbe
xor
jp
pop
push
imul
adc
sbb
stos
ljmp
mov
inc
testb
pop
pop
js
xor
jno
lcall
incl
das
inc
sahf
and
lahf
push
or
lock
out
outsb
xchg
mov
dec
sub
dec
lret
cmp
lds
mov
in
jge
push
subl
push
mov
sbb
adc
pop
mov
clc
mov
shll
nop
in
icebp
cmp
push
lret
arpl
outsl
and
test
xor
or
xchg
jns
leave
xchg
sbb
shrb
mov
push
push
ss
push
call
movsl
inc
mov
xchg
sub
add
out
loope
and
xlat
jae
add
call
sbbl
xor
lret
scas
dec
jne
in
inc
popf
or
inc
pop
xchg
pop
aas
jae
adc
xor
pop
add
jg
push
rolb
sahf
xorl
sub
jle
inc
clc
aas
jo
stc
mov
into
ss
sti
cmp
jnp,pn
imul
or
jge
test
jb
push
xor
sbb
fsubl
cli
loope
test
sub
fs
push
and
loopne
add
cmp
addb
pop
mov
int3
push
sbb
push
rolb
inc
decl
das
or
lcall
cmp
movsl
cmpsl
xor
mov
jbe
notb
inc
aas
and
shlb
pop
mov
sti
fisttps
test
addb
inc
enter
cmc
leave
std
adc
push
andl
movsl
jle
ret
push
sub
popa
jo
push
or
jae
pop
xchg
mov
sahf
mov
push
das
outsb
xor
xor
cmpsb
push
or
xchg
pop
repz
mov
jno
and
out
sub
add
add
ja
push
mov
aas
push
addr16
fs
sbb
cmpsb
mov
xor
xchg
push
mov
fisttps
sti
insl
adc
ror
stos
movl
dec
shlb
cltd
and
fidivrl
jle
adc
fnstenv
roll
inc
incl
dec
inc
adc
fucomi
sub
lahf
sahf
int
jnp
push
or
adcb
imul
sub
sub
inc
jp
insb
insl
mov
push
movsl
dec
inc
pop
fimuls
fsubl
xchg
mov
aad
xor
outsl
add
jnp
and
inc
movsl
jmp
sbb
push
js
int3
mov
test
fistpll
mov
repz
push
cmp
data16
mov
les
adc
add
cmpsl
jp
and
push
into
xchg
jg
lods
push
movsl
adc
fimull
and
jo
insl
pop
inc
jle
xor
jge
lcall
jp
daa
ror
lds
mov
outsb
adcb
cmp
lds
bound
fucomp
int3
imul
out
push
jg
mov
in
sbb
and
sahf
fmull
adc
pop
subb
inc
ds
inc
in
lods
shlb
stos
notl
inc
add
daa
arpl
mov
add
fprem1
aad
inc
cmpsb
sub
out
push
mov
mov
mov
push
pop
icebp
in
sub
pop
and
push
pushf
fstps
movsb
pusha
mov
test
mov
push
dec
or
mov
inc
rclb
and
clc
mov
add
sbb
dec
adc
cs
fidivrs
icebp
mov
xchg
leave
neg
and
test
sbb
dec
sbb
insb
cmp
cmp
es
adc
lret
cmp
ret
or
or
jno
test
jl
push
xchg
imul
cld
lock
adc
movsb
sbb
orb
mov
dec
jecxz
je
push
xor
ds
rclb
dec
ret
stos
ljmp
push
pop
aas
jne
ljmp
mov
or
sub
and
and
je
add
ds
sub
or
rolb
push
aam
push
inc
scas
and
xchg
lret
lds
cmp
decb
push
ret
add
fcomps
mov
mov
xchg
scas
imul
push
lret
aas
adc
mov
jg
in
push
sub
test
nop
xor
sbb
dec
stos
dec
scas
cmc
dec
jae
mov
dec
inc
mov
lds
add
dec
out
xchg
mov
cmp
mov
inc
clc
lret
fisubl
sti
add
cld
mov
mov
aaa
imul
mov
cmp
cmp
mov
cmpsb
cmp
cmp
sub
xor
xchg
lret
pusha
es
adc
out
push
leave
and
xor
inc
rolb
mov
out
es
push
in
dec
cmpsl
inc
mov
xchg
iret
rcll
adc
jmp
xchg
or
fists
adc
jmp
jnp
xor
cmp
add
mov
lds
popf
call
gs
lods
pop
sbb
subb
cmp
or
or
notl
popf
mov
fiaddl
jns
ret
dec
movsb
xchg
pop
mov
pop
push
les
add
fbld
add
imul
jmp
pop
lock
leave
inc
fs
popa
xor
mov
lret
mov
adc
and
push
sbb
cld
mov
mov
pop
sbbl
mov
jmp
out
push
aad
fsubr
jb
mov
daa
imull
mov
pop
sbbb
insb
test
xchg
icebp
sbb
mov
test
andl
cs
jmp
jne
lahf
sarb
and
lret
cmpb
inc
out
pop
push
xchg
xor
mov
cmp
mov
or
outsl
pop
cmpsl
push
lods
fs
into
mov
fs
loop
sub
add
mov
pusha
sahf
notb
xor
test
push
dec
outsl
adc
pop
ret
push
cltd
sbb
call
rcrl
cs
inc
or
lret
xchg
mov
gs
and
jle
pop
repz
mov
aas
pop
aad
add
rcrl
lods
movsb
pop
adc
sub
jne
stc
mov
cli
negb
fdivl
mov
cmp
xchg
scas
loope
dec
lods
pop
inc
cmp
lock
pop
cmp
add
lret
dec
inc
or
scas
mov
sub
pop
lods
int
shrb
inc
dec
cli
jecxz
js
out
cmc
sbb
lret
mov
sub
and
mov
pop
dec
inc
add
loop
in
inc
repnz
mov
cmpsb
pop
les
movl
gs
lret
mov
dec
les
dec
pusha
xlat
ficomps
dec
and
inc
adc
faddl
adcb
fbld
push
jp
pop
sbb
add
sbb
cmp
inc
mov
outsl
mov
adc
dec
inc
add
stos
test
jmp
push
xor
cld
mov
test
loopne
imulb
cmp
or
mov
pop
out
out
pushf
lods
stc
jbe
in
xor
inc
cltd
add
mov
in
jnp
leave
in
fistpll
xchg
jnp
push
ficoml
xor
pop
loop
jmp
inc
lods
or
pop
cli
ja
lret
push
push
andl
sbb
push
sbb
mov
inc
xor
rorl
add
ss
jge
shrb
js
pop
and
jne
es
xchg
sbb
lods
ss
mov
push
sbb
inc
inc
pop
push
sub
call
inc
lods
je
jo
ds
mov
dec
push
filds
stc
scas
push
int
cmp
test
lods
jp
les
mov
sub
or
ret
add
or
int
out
push
es
imul
cmpsl
cmp
jl
fists
aas
mov
or
dec
inc
adcb
jo
pop
add
mov
popa
ds
fsubs
fmull
divb
pop
mov
pop
enter
sbb
mov
test
pop
pop
push
jbe
ficoml
ret
mov
stos
gs
cli
ja
adc
test
notl
lds
les
mov
cltd
gs
cmp
pop
mov
cmp
decb
outsl
call
push
mov
loop
push
pop
lea
cwtl
cltd
fcompl
sarb
sbb
cmp
insb
mov
fstps
cmpsb
pop
movsb
repz
jl
jmp
outsl
mov
subl
mov
push
dec
outsb
jecxz
push
xchg
mov
sbb
aam
je
mov
jecxz
fstp
jmp
mov
outsl
icebp
das
lcall
hlt
push
push
add
jb
push
repz
test
push
cli
xchg
mov
mov
adc
mov
and
xlat
sub
mov
inc
and
pop
adc
pop
push
ljmp
testl
mov
jl
and
cvtpi2ps
mov
cltd
add
cld
sbb
insb
cmpsb
bound
push
and
push
push
std
popa
inc
and
xor
stos
jne
iret
push
ljmp
or
clc
mov
gs
mov
push
xchg
add
movsl
inc
cld
inc
or
mov
mov
and
outsb
cmovno
into
cmp
inc
pop
movsb
sahf
mov
lds
fmulp
add
push
push
fisubl
xchg
xchg
repz
sub
inc
push
leave
add
mov
hlt
inc
sti
xor
lods
push
cltd
pop
loope
add
jmp
cs
leave
pop
shrl
gs
dec
rcrl
popf
test
xchg
push
pop
ds
loop
popf
xchg
out
insl
sbb
fwait
or
arpl
data16
mov
sbb
cmp
xchg
jno
ret
scas
and
mov
test
pushf
sub
xchg
add
ja
insb
test
mov
clc
loop
popa
mov
pop
mov
imul
jno
ret
lods
cld
shr
lds
dec
std
mov
inc
xchg
mov
jno
lods
xor
sub
sbb
fmuls
dec
inc
stos
fnstcw
testl
or
mov
jns
xor
mov
sbbl
aam
pop
mov
fsubrs
mov
inc
push
daa
and
or
mov
scas
push
divb
in
mov
repz
mov
mov
clc
add
ss
inc
xchg
and
xor
mov
jg
iret
jp,pn
cld
push
hlt
stos
insl
mov
jecxz
cmpsb
pop
aad
cmp
insb
adcb
push
pusha
pop
lds
cwtl
stos
pop
rcrb
add
sbb
fcos
mov
out
cmc
inc
push
jmp
mov
cmpb
mov
in
mov
mov
outsb
loopne
jno
pop
ja
mov
inc
call
andb
stos
push
out
inc
outsb
cs
sbb
ss
mov
or
movsl
or
neg
decb
jno
sbb
imul
xlat
sbb
je
mov
add
js
stos
mov
rorl
dec
jns
mov
orl
repnz
pop
movsl
movsl
adc
add
xor
nopl
mov
inc
cmc
in
gs
fildl
push
aaa
movb
hlt
pop
out
stc
jne
test
in
mov
sbb
xor
addr16
push
xchg
mov
jp
push
movsb
xchg
mov
mov
mov
out
imul
jg
sbb
icebp
dec
adc
fnsave
shrl
and
in
dec
in
mov
mov
and
enter
shll
dec
push
mov
push
jns
lret
push
jne
jno
mov
push
dec
push
or
sbb
dec
test
and
push
repz
popf
push
js
push
cld
pop
dec
repnz
adc
popa
int
daa
dec
lods
xor
jmp
lods
dec
pop
mov
xor
jo
adc
xor
ficomps
in
es
sbb
negl
in
sub
pop
xor
and
push
repz
and
push
push
push
cmp
ljmp
fwait
adcl
cmp
fistl
mov
stos
pop
sar
dec
inc
sub
roll
sub
js
loopne
dec
pop
out
bound
stos
push
repz
sub
cmpsb
xchg
loope
sub
mov
repz
jl
pop
sub
scas
or
sub
mov
outsl
fs
mov
fimuls
outsb
test
xor
repnz
sub
test
inc
lods
pop
shll
aas
add
in
scas
pop
imul
mov
and
pop
stc
mov
push
scas
sub
sub
repz
mov
cmp
mov
rclb
inc
add
push
dec
cwtl
adc
mov
sahf
test
cmc
in
xchg
mov
cli
push
std
mov
add
sahf
push
adc
fcompl
fisubl
pusha
nop
mov
mov
xor
int
mov
jmp
out
in
push
jne
es
aaa
stos
inc
jl
test
mov
mov
mov
fnstenv
push
pop
inc
out
out
jnp
pop
scas
scas
lret
stc
gs
imulb
inc
gs
bound
imul
adc
jge
pop
sbb
xchg
add
inc
mov
jl
repz
sahf
std
rolb
xchg
jle
and
xchg
bsf
ficompl
pop
int
outsl
add
inc
jb
and
pusha
sbb
mov
gs
mov
ret
and
pop
xchg
icebp
decl
pop
pusha
divb
xchg
aad
daa
inc
add
or
mov
cmp
mov
mov
cmpsl
lcall
rcr
push
int3
mov
dec
or
xlat
test
push
mov
repnz
fcmove
mov
rcrl
lcall
add
xchg
js
push
add
push
imul
inc
inc
mov
leave
dec
aas
loopne
jae
out
mov
adc
pop
stc
inc
add
xchg
dec
das
push
or
je
out
fcoml
pop
pushf
stos
push
jae
jne
jo
mov
fnstenv
inc
sub
mov
cli
sbb
mov
das
rcll
or
cmp
mov
lret
pop
loop
das
aam
cltd
sarl
add
mov
repz
add
xor
mov
fists
xor
fsubl
insl
jne
cld
leave
mov
pop
push
cmc
jecxz
mov
fstl
dec
pop
mov
sbb
fistps
stc
scas
adc
fs
and
cmp
je
scas
mov
das
add
pop
cmp
testb
subl
outsl
mov
push
dec
and
sbb
pop
loop
arpl
enter
push
fs
aad
mov
xor
or
imul
imul
sti
push
jne
sub
stc
cs
lret
xor
dec
mov
loopne
rcrl
scas
xor
imulb
jnp
pop
push
ljmp
popa
and
ljmp
fwait
xchg
je
inc
and
cmpsb
scas
push
mov
inc
push
daa
fidivl
pop
popf
and
mov
cmp
dec
pop
dec
adc
pop
pusha
dec
ljmp
fwait
and
pusha
jo
xchg
add
outsb
outsb
jbe
fiaddl
lock
xchg
lea
inc
andl
imul
fmull
push
sbbl
pushl
insb
cmp
repnz
jp
push
das
inc
add
and
sbb
stc
cmpsl
sub
fs
int
loope
mov
out
xchg
mov
clc
inc
faddl
ljmp
mov
cli
icebp
repz
fstl
shrb
jg
out
in
jno
ror
sbb
or
xchg
pop
cmp
push
inc
jmp
pop
mov
or
pop
jle
cmc
icebp
jl
xor
in
cmpsl
pop
xchg
outsb
fildll
xchg
addr16
lds
xchg
cmp
xchg
mov
addb
stc
stc
inc
sbb
in
mov
enter
push
jle
movsl
fwait
and
fcompl
cmp
pop
cltd
jbe
or
sahf
out
jo
movsl
mov
enter
push
and
jae
scas
xchg
ret
mov
arpl
push
imul
push
sbbb
mov
scas
mov
inc
popf
mov
or
dec
add
and
into
mov
sbb
aas
sahf
int3
divl
in
into
and
out
inc
fnstsw
mov
mov
mov
dec
aam
pop
cltd
xor
ror
shr
ss
mov
pop
pop
hlt
sub
inc
cmp
push
jae
dec
adc
jg
push
mov
push
push
cmpsl
stos
inc
enterw
add
sbb
xor
inc
fisttps
push
js
lock
cmp
sub
add
mov
pop
clc
daa
pop
jp
imull
cltd
std
pop
adc
xlat
add
push
or
aas
int
jl
push
xchg
jbe
jno
pop
add
int3
mov
xchg
add
mov
rcrl
out
pusha
sub
pop
es
sbb
xchg
or
mov
ficomps
cmpsl
out
and
mov
ret
xchg
andb
jmp
mov
sbb
insl
iret
subl
andb
dec
and
mov
jns
mov
add
xchg
or
mov
inc
sub
dec
adc
js
pop
lret
mov
fldcw
xchg
jns
outsl
dec
jbe
xlat
jbe
mov
sbb
lds
mov
lock
shrl
push
mov
imul
lret
fcmovnu
out
jg
sti
imul
push
std
pusha
hlt
jno
add
inc
rcll
je
add
adc
and
xor
les
push
in
hlt
jno
add
inc
rcll
je
add
adc
and
xor
les
push
in
hlt
jo
add
inc
rcll
je
add
adc
lock
loopne
shlb
jne
add
mov
loope
xchg
pushf
outsb
fistpl
dec
or
sbb
sub
cmp
xchg
ds
jo
mov
mov
shr
lock
lock
sbb
sub
cmp
dec
inc
pop
push
push
jp
mov
mov
add
loopne
lock
sbb
sub
cmp
dec
pop
pop
dec
push
jp
mov
stos
aad
mov
xorl
jns
push
push
mov
popa
incb
sbb
movsb
jnp
mov
lahf
in
mov
pop
xchg
push
jbe
lret
pop
scas
xchg
ljmp
push
mov
mov
inc
fildl
pop
call
xchg
sub
push
das
push
loope
and
mov
jp
lcall
lock
adc
cmp
insl
pusha
dec
nop
out
cmp
pop
rcrb
outsl
push
inc
rorb
xchg
lcall
cmp
icebp
lret
rclb
pusha
pop
lods
jmp
or
mov
test
pop
mov
pmulhw
jmp
jp
mov
pop
jp
fldl
xchg
mov
scas
pop
jp
movb
pop
sub
cmp
dec
inc
pop
push
push
jp
mov
mov
ljmp
adc
push
xor
sub
push
or
sbb
stos
cmc
ret
lods
fiaddl
outsl
js
adc
push
xor
adc
sbb
stc
lret
icebp
test
mov
mov
outsl
inc
sbb
inc
push
inc
push
sub
push
push
jp
mov
mov
shr
loopne
lock
sbb
sub
cmp
dec
inc
pop
push
push
jp
mov
mov
shr
loopne
lock
aas
xchg
mov
adc
fdivs
push
pmulhuw
push
xchg
daa
add
inc
xor
xor
insb
pushf
jb
int
ja
ss
adc
push
mov
fwait
add
icebp
test
stos
pop
shlb
stc
shlb
xchg
inc
inc
jmp
test
neg
int
jmp
or
js
jle
dec
xor
cmp
loopne
stos
mull
je
mov
arpl
adc
rol
adc
mov
inc
insb
and
or
mov
sub
repnz
pop
push
icebp
push
in
ja
push
repnz
adc
and
pop
std
sub
push
sub
pop
lahf
testl
mov
or
mov
mov
dec
in
sbb
dec
ljmp
or
sarl
pop
sbbb
mov
xor
jbe
out
push
push
pop
ljmp
cli
inc
test
cltd
push
repz
in
xchg
push
mov
cli
or
mov
test
push
cmpsb
dec
out
stc
xchg
inc
xor
sbb
xor
or
mov
cmpsb
aad
xor
orb
scas
nop
scas
sub
or
xchg
jg
push
loopne
push
push
stos
dec
cmp
inc
mov
dec
xorl
xchg
aas
inc
cmp
mov
outsb
xchg
cld
pop
xlat
inc
and
testl
push
push
mov
enter
push
push
mov
and
pop
add
data16
out
stos
fcmovnb
in
jbe
mov
fisubl
jbe
and
movb
cmpsl
or
xchg
bnd
xchg
add
adc
or
int
mov
pop
mov
imul
xchg
add
cltd
sub
shl
adc
les
pop
aad
mov
mov
out
and
inc
jb
mov
mov
rol
lods
cmp
pop
adc
aaa
sti
lock
icebp
xor
adc
xchg
add
enter
outsl
lea
and
and
sub
jge
add
pop
or
stos
pop
jmp
ret
cld
xchg
test
mov
cmpsb
xor
test
out
bound
iret
mov
out
cmp
pop
dec
fdivrl
das
scas
aad
sti
movsb
add
xor
push
arpl
cld
mov
cmc
jae
cwtl
popf
ljmp
mov
sub
mov
push
pavgb
lret
add
mov
cmpb
negb
cwtl
jns
test
fwait
out
icebp
cmc
add
out
xor
jbe
pop
xor
inc
popa
and
xchg
imul
lea
ficompl
cld
bound
loope
or
mov
jl
jns
imul
imul
sbb
popf
push
adc
cld
arpl
xchg
incl
insb
inc
mov
rorl
push
sbb
sbb
mov
je
inc
das
dec
enter
xchg
out
push
pusha
test
insl
sbb
and
orl
xchg
incb
mov
andb
pop
pushf
inc
jo
and
gs
shll
fdivrl
subb
aam
adc
dec
sub
and
je
mov
out
mov
or
imul
cmpsb
lods
loopne
jne
add
imul
mov
dec
or
dec
xor
lcall
fistpll
fsubs
and
fdivs
adcb
es
popf
mov
sub
xchg
das
or
cmp
xor
inc
sub
pop
repz
loopne
out
insl
dec
shr
int
adc
cli
addr16
pop
out
loopne
pop
push
xor
out
ja
out
jl
fstpl
cmpsl
xchg
mov
fnstcw
lods
and
nop
popa
fwait
out
pop
movsl
jae
xor
xor
int3
xchg
or
and
ja
pcmpgtb
repz
push
js
shlb
popa
and
pop
lret
jns
xchg
cli
jno
inc
xchg
push
jae
sbb
or
or
cmp
sbb
popf
rclb
xchg
xor
add
sub
push
or
jns
xchg
mov
xor
mov
xchg
pop
add
mov
or
push
jle
fstpt
pop
and
push
imul
inc
xor
inc
jno
idivl
mov
push
dec
pop
hlt
sub
adc
fdivl
and
pop
add
orl
repnz
subl
xchg
sbb
sbb
push
sbb
xchg
cltd
sahf
push
jle
add
ja
pop
lret
xchg
sub
or
fsubs
dec
test
out
icebp
test
cmp
test
iret
mov
outsb
push
out
sbb
dec
fstps
sub
and
lods
cmp
cmp
cmp
pop
fldcw
cmp
jnp
xchg
les
cmp
sub
lock
sbb
jno
pmuludq
pushl
inc
mov
icebp
adc
xor
mov
sub
testb
rcrb
insl
cwtl
movsl
cwtl
fbstp
and
inc
or
lret
std
pop
push
daa
push
mov
cmp
les
xchg
dec
dec
test
jno
addr16
and
aam
test
or
push
popl
call
decb
psubq
push
or
or
stos
xchg
pop
lods
es
cmp
popf
clc
inc
lcall
xchg
jnp
fsubrp
push
jns
movhps
cmp
adc
or
xor
xchg
xlat
bound
cmpsb
into
cmp
sti
jle
xchg
sarb
push
pop
mov
xlat
stc
cwtl
lods
adc
daa
pop
mov
lcall
fcoms
imul
movsb
arpl
das
or
stos
loopne
jle
sub
lea
jbe
addr16
out
push
or
mov
cmp
loopne
mov
jmp
outsb
test
jp
mov
in
testl
sub
cltd
cli
adc
cli
cmp
ficomps
push
xor
push
sub
pop
mov
pop
jne
jb
push
sbb
xchg
lods
imul
iret
pop
push
lock
fiaddl
push
les
mov
add
out
jecxz
sub
das
pop
push
sub
out
xor
rcrl
test
inc
cmp
add
mov
test
fsubl
mov
fcom
loop
loopne
mov
mov
xor
inc
ljmp
ljmp
out
sti
lods
or
or
adc
lret
fildll
dec
add
test
lahf
mov
lret
ficoml
or
in
sbbb
lret
lods
xchg
pop
pop
mov
push
inc
in
pop
mov
test
dec
pop
test
add
in
inc
cmpsl
cltd
test
add
cmp
daa
inc
gs
xchg
and
pop
cld
ficomps
aaa
adc
loopne
lahf
or
or
fldt
in
sahf
int
outsb
push
sub
daa
pop
cwtl
cmp
sti
mov
jecxz
or
sarb
sbb
and
repz
or
cmp
cmp
int3
and
cltd
and
or
in
xor
cmc
cwtl
cltd
mov
inc
mov
adcb
add
bnd
adc
sub
mov
data16
lret
imul
pop
dec
mov
repz
std
jae
ret
out
pop
cs
inc
fists
nop
fs
xor
and
dec
jae
cmp
jb
repz
xlat
in
add
mov
jne
aad
rcll
mov
push
cmp
aad
or
stos
jnp
test
pop
xlat
xor
adcb
lret
out
clc
mov
mov
int3
fisubl
mov
icebp
lcall
test
or
gs
add
in
inc
ret
cli
or
out
cs
cmp
dec
xchg
xchg
aam
xor
pop
sub
mov
xor
push
jg
adc
fwait
jnp
pop
in
std
pop
scas
loop
and
pop
icebp
pusha
outsb
cmpsb
scas
adc
insl
jne
mov
lock
cltd
or
or
movsl
scas
xchg
push
jmp
xor
push
push
mov
aad
cld
inc
mov
xor
xorl
test
sbb
pop
fmuls
fimuls
loopne
xchg
xor
gs
daa
fnstenv
int3
push
mov
add
aaa
add
dec
insb
into
lock
adc
jecxz
test
adc
xchg
mov
leave
xorb
in
pop
dec
xor
clc
sbb
insb
sub
cltd
std
dec
pop
mov
sub
rcll
insl
sti
add
jne
fs
lock
in
hlt
sub
cmp
jp
adc
mov
int
in
mov
mov
pop
fs
or
jo
mov
push
xor
popa
test
sbb
arpl
jnp
dec
or
jns
push
jge
xlat
sub
iret
add
ja
mov
test
and
mov
and
or
push
or
addl
xor
inc
push
adc
in
daa
push
jl
mov
xchg
mov
jle
xchg
aad
ret
ret
leave
leave
leave
mov
fnstenv
xchg
cmp
test
push
dec
inc
mov
pop
adc
or
insl
add
cmpsb
jp
dec
lret
mov
xchg
inc
add
jo
or
int3
sbb
sarb
or
clc
nop
nop
cmp
sbb
aaa
push
cwtl
lea
and
cwtl
addb
in
fcoms
lret
xor
cmpsb
adc
inc
jbe
pop
sub
adc
mov
mov
xor
call
popa
inc
pop
icebp
push
in
lds
clc
mov
mov
or
push
push
aam
or
ret
mov
ds
std
sub
xlat
js
outsl
bound
inc
fnstcw
cmp
ss
sbb
cmpsb
scas
xchg
xchg
push
dec
sub
inc
mov
test
xchg
rol
xchg
pop
cmp
push
mov
dec
lods
les
ja
stc
pop
sub
mov
xchg
mov
loopne
rcll
jo
pop
rcll
roll
sti
lds
rcrl
fnsave
loope
test
inc
rorb
pop
jmp
inc
dec
mov
test
fldenv
dec
mov
jmp
jnp
in
rolb
cwtl
movsb
push
sub
das
pusha
stos
loopne
mov
pcmpgtd
mov
outsb
sbb
and
cld
jge
stc
and
sbb
loopne
in
and
cmp
pop
xor
repnz
fs
mov
push
mov
xchg
loop
xor
inc
sbbl
loop
jbe
aam
xchg
mov
leave
jns
push
inc
jl
stos
lods
pusha
push
cs
repz
stos
pop
jo
or
mov
lret
inc
das
sbb
pop
ud0
inc
leave
in
rorb
loopne
lods
adcl
test
repz
xlat
fnstsw
or
ja
and
add
int
inc
cmp
mov
mov
and
test
enter
dec
lock
adc
fst
jmp
mov
enter
push
test
dec
hlt
lock
scas
adc
dec
or
insb
xchg
dec
iret
xchg
adc
xchg
orb
xor
or
sub
cmp
mov
aaa
or
mov
or
std
rorb
arpl
cmp
adcb
andb
bound
rcll
sbb
mov
leave
xor
or
xchg
dec
push
xchg
dec
lcall
adc
call
push
jecxz
push
lods
inc
in
or
cmpsb
or
and
repz
in
inc
xchg
or
mov
outsl
popa
pop
cmp
fisubl
bound
scas
lods
packsswb
sbb
inc
jo
cmp
adc
lcall
test
sahf
adc
cs
push
sbb
xchg
sti
int3
xor
iret
test
mov
mov
aad
ja
pop
daa
cli
ret
fs
sahf
xchg
sarl
mov
lahf
and
inc
fucomip
into
ss
dec
ljmp
ja
dec
dec
js
jae
mov
cmp
in
pop
ret
cwtl
stc
mov
bound
scas
inc
jecxz
pop
or
cli
pop
test
inc
lret
pop
dec
inc
jae
stc
rclb
mov
ret
sahf
inc
sbb
add
cmp
jno
pop
jnp
lock
push
mov
mov
cwtl
sarl
mov
mov
jle
pop
dec
mov
sub
mov
mov
icebp
xlat
ret
mov
cmp
pop
mov
or
dec
cwtl
test
loope
xor
cmpsb
sahf
cmpsb
sub
rorb
sbb
sub
mov
loopne
dec
xor
icebp
lods
xchg
adc
rcll
jecxz
mov
in
roll
rcl
xchg
pop
mov
mov
or
push
cmp
arpl
data16
and
dec
push
pop
lods
arpl
pop
mov
and
jb
or
test
mov
mov
jmp
or
fadds
leave
insb
out
push
and
mov
stc
sbb
cmp
sarl
inc
lea
stc
lods
xchg
jmp
push
push
dec
inc
xor
in
jno
jl
movsl
or
test
loopne
mov
fisttpll
loop
inc
es
aam
in
xor
mov
xor
or
sub
mov
pop
inc
iret
mov
pop
mov
or
sub
sahf
jns
lahf
or
push
dec
sahf
aas
jecxz
adc
sbb
or
shll
rcrb
add
data16
pop
inc
mov
jge
inc
sub
fsubrl
or
mov
mov
xchg
adc
push
gs
jle,pt
int
sbb
and
cmp
movsb
push
fidivrl
out
gs
pop
addr16
jbe
jl
cld
lods
ret
mov
add
mov
test
pop
xchg
fimull
mov
arpl
sub
inc
js
jbe
negl
nop
push
or
gs
xlat
pop
gs
int3
cmp
xor
sub
aas
or
mov
hlt
xchg
cld
stos
jne
fisubs
xlat
pop
test
xorl
in
mov
andb
mov
adc
jmp
pop
imul
dec
andb
into
decl
lahf
ljmp
stos
cmp
and
xlat
ds
jb
sbb
or
cltd
lret
jnp
dec
xchg
jg
pusha
push
or
pushf
adc
loopne
mov
pop
or
mov
lcall
test
sar
fisubl
sbb
adc
pop
mov
test
imul
mov
mov
addr16
pushf
js
adc
ud0
sbb
fimuls
sbb
mov
jno
js
imulb
insb
cli
mov
dec
dec
sub
sbb
cltd
pushl
or
inc
xor
ret
popa
iret
cmp
or
das
je
or
loop
push
adc
xor
dec
pop
test
xchg
jnp
mov
and
rorl
mov
sbb
adc
inc
cmp
cmc
pushf
sub
out
xchg
int
pushfw
imul
repz
in
mov
out
xchg
es
test
cld
jg
push
fdivrs
outsb
in
icebp
sbb
mov
dec
push
int3
cs
xchg
jg
insb
pop
push
dec
popf
inc
adc
inc
decl
inc
jp
push
xor
mov
jle
mov
add
push
add
aaa
pop
in
iret
sahf
out
xchg
xor
enter
jno
int
dec
mov
int
js
mov
pop
mov
push
xchg
fsubrs
cmpsb
iret
xor
outsl
fdivs
dec
push
or
in
pop
mov
mov
iret
dec
lock
fs
add
push
out
sbb
push
rclb
or
subl
or
ficompl
mov
or
xchg
fisubl
lea
cmpsb
test
push
mov
mov
sbb
lahf
pop
popf
xchg
mov
iret
dec
stos
loop
lds
xchg
mov
bound
outsl
dec
fnsave
xchg
jl
adcl
sub
sub
out
add
or
fdecstp
jmp
adc
test
das
cmp
ja
rcrl
cmp
or
pop
cmpsl
out
ret
xchg
xchg
test
test
xor
pop
mov
loope
lock
inc
jbe
pop
aas
fistpll
dec
or
xor
dec
inc
inc
pop
or
xor
or
loope
fwait
push
fsubrl
cmp
and
lods
sbb
out
test
pop
jae
jg
addr16
fistps
aas
sarl
ds
dec
sti
inc
adc
add
out
sahf
or
imul
pusha
test
or
pop
push
outsl
xor
sub
sti
mov
and
push
insb
push
pop
fdivrs
cmp
movsl
aas
xor
popf
or
sbb
mov
push
fsubrp
cs
js,pn
pop
sti
mov
push
xchg
call
fs
mov
aad
loope
out
dec
insl
fcompl
add
in
std
cmp
movsl
add
in
or
imul
ret
pop
push
jecxz
or
and
ljmp
inc
cmp
loope
inc
std
pop
inc
mov
cmpsb
push
incl
mov
mov
or
xlat
mov
loope
pop
pop
cmp
es
stos
push
shrb
fldt
adc
mov
mov
loop
mov
dec
xchg
sub
mov
stos
insl
push
lret
in
hlt
das
adc
es
push
jp
pop
and
mov
mov
mov
arpl
pusha
aaa
xor
cmp
xchg
xchg
roll
pop
aad
rcrb
jne
dec
call
jecxz
xor
push
xchg
cmp
sub
cmpsb
pop
repz
mov
int3
lds
ja
mov
xor
jl
sub
mov
jp
cmp
loop
shrl
xchg
ret
cmp
pop
sahf
push
subl
lock
loope
or
push
jo
aaa
movsb
lret
dec
push
shrl
push
inc
pop
int3
stos
and
daa
daa
femms
into
jae
xorb
adc
jl
mov
sub
pushl
daa
xchg
shl
or
cld
jnp
cwtl
mov
jae
mov
aad
cmp
repnz
frstor
and
out
mov
int
xchg
pop
int3
shll
inc
or
xor
sub
sahf
inc
xor
in
test
cmp
lea
mov
xchg
push
jl
jns
hlt
ret
mov
inc
inc
cwtl
jl
loopne
icebp
mov
lods
cwtl
insb
dec
jle
jle
cld
divl
add
push
test
ret
out
cwtl
jmp
cld
mov
sbb
cmc
int3
imul
bound
push
add
cli
adc
outsl
xlat
xor
cmp
mov
movsb
cwtl
or
sbb
mov
stos
mov
ret
ds
lcall
jbe
cmc
int
loope
lds
cmpl
adc
push
iret
inc
outsb
mov
adc
in
push
lds
or
sbb
ss
cmp
scas
int3
outsb
mov
rcll
xchg
pop
cli
mov
pop
stos
jo
mov
dec
fdivrs
push
cli
or
sub
sbb
mov
sub
mov
add
mov
inc
pop
push
sub
stc
and
mov
mov
jnp
mov
out
mov
and
lea
or
sbbb
mov
and
sub
jg
cmp
icebp
pushf
sbb
out
test
sbb
xchg
das
aad
lods
or
movsl
or
sbb
xchg
ret
stos
pop
adc
nop
mov
mov
int
inc
insl
shlb
mov
insl
jg
mov
ret
add
loopne
test
daa
cmc
jns
aaa
push
movsb
in
xor
pop
sub
lock
jnp
jmp
push
sub
sbb
lret
insb
mov
loop
jle
push
jecxz
cmp
fstpl
sti
insl
movsl
addr16
jnp
in
cmp
sub
and
xchg
lea
enter
cmp
aas
lcall
ds
test
in
sbb
leave
mov
sub
adc
sbb
mov
xchg
enter
inc
data16
fstpl
and
inc
or
xor
mov
in
pop
mov
enter
lock
js
lods
and
loopne
inc
std
fdivs
fcompl
sub
jb
adc
test
jo
mov
inc
xor
pop
mov
pusha
sahf
xor
sbb
mov
rolb
dec
fs
push
xchg
repnz
mov
xchg
xchg
xor
call
pop
mov
adc
shlb
sub
icebp
loopne
sub
cmp
dec
inc
pop
push
push
jp
mov
mov
shr
loopne
lock
sbb
sub
cmp
dec
inc
pop
push
push
jp
mov
mov
shr
loopne
lock
lcall
inc
pop
push
push
cli
jo
sbbb
lret
shr
loope
lock
sbb
sub
cmp
dec
inc
pop
push
push
jp
mov
mov
das
lcall
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
mov
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
clc
and
xor
add
adc
or
sbb
test
push
pop
test
cmp
sub
les
aam
and
xor
add
adc
fs
cwtl
inc
mov
push
xchg
cmp
sub
sbb
call
adc
fs
cwtl
inc
mov
dec
mov
loopne
xchg
cmp
popa
aam
and
imul
mov
xchg
jae
add
cmp
push
rorl
mov
mov
push
adc
pop
mov
bound
mov
adc
dec
in
cmpsb
test
sbb
pop
test
jl
es
cmpl
add
mov
dec
inc
int
cmp
mov
pop
clc
xor
mov
enter
gs
je
lret
mov
mov
mov
or
cmp
lret
pop
xorl
xlat
jns
pusha
jecxz
jnp
push
push
cmp
pop
les
aaa
in
xchg
adc
stc
cmp
cwtl
mov
shrl
xchg
fdiv
jnp
or
cmp
xor
add
adc
fs
cwtl
inc
mov
push
xchg
cmp
sub
sbb
or
sahf
insl
mov
or
je
or
or
or
sarb
js
mov
ss
sub
adc
xor
push
or
xadd
xchg
jno
bound
insb
lods
jno
fs
cwtl
inc
mov
push
xchg
cmp
sub
sbb
or
clc
and
xor
add
adc
fs
cwtl
inc
mov
push
xchg
cmp
sub
sbb
or
clc
and
jge
mov
push
push
lret
push
repz
outsl
add
adc
sbb
imul
in
push
adc
sbb
out
mov
sbb
jge
jge
pushf
roll
fldt
sbb
pop
inc
out
orb
roll
pop
rorl
das
arpl
lret
pop
mov
jl
iret
jmp
jge
xlat
rcrl
adc
push
fistpll
out
add
mov
sub
cmpsb
mov
insb
or
sub
push
xlat
inc
pop
out
cmp
jge
cmp
call
or
int3
call
lret
popa
std
adc
lods
xchg
inc
nopl
ret
xchg
lds
sarb
mov
sbb
fidivl
out
mov
jbe
popa
out
or
aam
aam
cltd
adc
xchg
in
es
push
mov
insb
data16
in
das
sarl
adc
loopne
push
lock
rorb
sar
xchg
ret
mov
stc
sbb
insl
es
in
aaa
jae
mov
test
jge
out
xchg
popf
divb
std
add
cmpsb
lcall
cmp
test
cs
sahf
mov
inc
xchg
sub
mov
shrl
loop
jno
xor
stos
fld
xchg
jle
fsubs
hlt
xchg
sti
xchg
adc
mov
inc
sbb
aam
xchg
cmpsb
stc
ret
test
data16
sub
mov
xor
dec
mov
dec
xchg
xor
fimuls
xchg
stc
inc
imul
mov
fidivrs
mov
popa
lods
push
sbb
lcall
outsl
fstps
push
out
pop
nop
mov
mov
lret
stos
roll
mov
mov
lahf
push
movsb
jb
pop
test
cmp
or
lret
adc
repnz
inc
int
dec
and
jl
dec
lods
jge
push
jbe
mov
sbb
arpl
jbe
add
rcll
pop
inc
push
cmp
pop
cs
enter
mov
sub
test
adc
pop
lahf
gs
rclb
or
in
cmp
mov
mov
leave
sti
add
mov
cltd
mov
mov
gs
test
rorb
mov
rcrl
fisttpl
lock
and
lods
sahf
mov
frstor
addr16
ret
aam
inc
jbe
arpl
scas
call
ret
fsubs
jge
sub
in
xchg
fwait
push
add
mulb
add
rcrl
mov
leave
mov
daa
sbb
jae
movsb
cmc
aaa
mov
test
dec
ja
sbb
add
mov
pop
xor
shll
mov
mov
sbb
sbb
push
sub
xor
push
stos
sub
mov
push
mov
or
add
push
lock
xchg
inc
or
out
cmp
test
inc
push
fdivl
daa
ror
mov
push
cli
jbe
daa
popa
test
shlb
cltd
arpl
rorb
xchg
mov
pop
sbb
adc
iret
or
sub
jl
cmpsl
push
and
ret
adc
popa
out
out
xchg
es
sbb
out
icebp
dec
mov
out
gs
sub
fildl
push
xchg
andb
xchg
mov
cmpsl
inc
jnp
lahf
add
out
push
subb
int
subb
insb
stos
and
ljmp
adc
incb
and
cmp
cmp
and
sub
and
loope
pop
mov
rolb
pusha
adc
jb
inc
pop
xchg
ss
rcr
scas
sub
push
xor
int3
fdivr
fisubrs
inc
decb
sub
cltd
insl
xlat
fwait
cwtl
sub
dec
add
lods
jp
addl
lcall
arpl
push
jp
in
xchg
les
fistpl
imul
cli
push
mov
xchg
lret
mov
xchg
inc
rorl
js
mov
mov
frstor
pusha
sub
das
cmp
mov
jecxz
mov
push
inc
mov
push
sbb
shll
enter
fs
aad
mov
and
cmc
loopne
fcomps
or
fdivrs
flds
cmpb
xor
inc
fdivrp
mov
and
cmp
mov
sti
rcll
xor
lods
pop
mov
mov
aad
ljmp
mov
add
adc
jns
jecxz
testb
push
mov
or
lret
pusha
rorl
pop
sub
int
aas
stos
xchg
fstpl
dec
jne
mov
pushf
dec
xor
jo
std
lea
bound
stos
inc
bound
xor
pop
mov
sbb
adcl
jae
inc
loopne
lea
mov
cmp
outsb
ss
or
sub
js
and
xor
add
xchg
std
mov
out
sbb
sub
mov
cmc
pop
insl
lahf
fmul
cli
ljmp
in
js
add
push
mov
pop
jno
mov
popf
jg
inc
dec
stos
push
loope
imul
das
lret
pop
insb
mov
inc
adc
dec
xchg
mov
mov
mov
testb
jbe
jo
das
xor
xchg
imul
mov
out
negb
pop
lods
cmc
jne
mov
pop
inc
fisubrs
lea
cs
pop
or
iret
push
xchg
aad
dec
push
test
xchg
in
dec
arpl
bound
or
dec
add
sbb
es
inc
aas
out
cs
lahf
in
jg
aam
je
pop
inc
pop
xchg
fadds
bound
ja
sbb
jnp
dec
jl
sub
fadd
mov
mov
xor
stos
and
and
mov
add
loop
nop
cmpsl
push
push
rolb
test
and
mov
ficoml
or
add
jb
adc
pop
cmp
pop
cmpsl
cmp
in
pop
es
pop
rcl
lret
fcomip
lock
mov
xchg
xor
outsb
mov
xchg
rolb
jmp
mov
aam
pop
mov
add
adc
lods
dec
adc
inc
rorl
mov
fimull
jle
cmpsl
jo
sarl
mov
stos
imull
push
pop
xchg
dec
int
push
push
jecxz
popf
stos
inc
push
loopne
fisttpll
ds
aas
iret
adc
scas
mov
je
adc
jle
js
add
adc
or
pusha
aad
jb
dec
cmp
into
shrb
push
arpl
out
pop
mov
adc
cmc
and
orb
rolb
mov
faddl
cs
jle
mov
ret
hlt
sbb
inc
mov
scas
mov
fnstenv
sub
mov
or
movsb
rorl
loope
inc
mov
push
jmp
aas
jb
adc
and
pusha
mov
push
mov
out
mov
mov
jno
into
xchg
pop
nop
mov
ds
aas
xor
insl
dec
jmp
pop
outsb
fld
pop
pushf
sbb
adc
mov
mov
push
test
xor
shr
je
pop
stc
dec
pushf
jae
add
stos
aas
loop
xchg
and
dec
repz
enter
shll
push
mov
add
ljmp
pop
jnp
cmp
mov
fnstsw
mov
fsts
sti
mov
lods
loope
shl
push
sbb
rolb
xchg
aas
or
jbe
sbb
pop
sub
adc
ret
je
cmpsl
xor
xchg
jecxz
jg
push
or
inc
xchg
or
out
lcall
insl
js
cmp
cld
std
add
jmp
dec
sbb
pusha
sbbl
stc
aaa
xchg
adc
mov
mov
mov
xchg
or
mov
inc
in
fsubrp
cmp
pop
cmc
test
jmp
inc
bound
faddl
mov
inc
push
mov
pop
cmp
mov
add
dec
inc
int3
gs
mov
push
out
pop
sbb
enter
dec
insl
push
fistl
add
add
fidivrl
into
ret
cmpsb
jp
mov
add
fidivl
sti
fisubrs
cmp
movsb
jo
fcomp
loopne
mov
icebp
loope
and
mov
mov
or
sub
lods
sub
mov
inc
add
mov
xchg
dec
lock
gs
mull
in
push
test
clc
cmp
mov
mov
loopne
ss
inc
dec
aam
int
pop
mov
mov
pop
in
test
js
or
cmpsb
loope
daa
adcl
push
cld
pop
xchg
sub
push
dec
cmp
mov
cmpsb
dec
mov
lds
out
xchg
push
pop
jae
mov
cmpsl
cli
mov
adcl
push
push
mov
fistpll
and
lods
lods
mov
cmpsl
pop
cmp
push
or
adc
inc
imul
movsl
popl
mov
les
lret
jp
lds
sbb
cld
les
scas
bnd
pusha
test
or
insl
xchg
lahf
lods
cmp
ja
stc
cmp
scas
add
popf
xchg
mov
pop
xlat
das
inc
cmp
ja
out
mov
test
rorl
add
fistps
cld
out
push
iret
aas
inc
insb
pop
faddl
xor
sti
hlt
lret
mov
roll
movsb
mov
in
pop
int
ljmp
lods
jp
je
stos
mov
push
loop
pusha
cld
inc
jb,pt
ljmp
iret
add
ljmp
fsts
xor
cli
xchg
subl
or
mov
and
sub
jmp
push
cmc
fwait
pop
ret
ror
hlt
push
test
jg
mov
xchg
int3
std
xlat
jl
sbb
into
in
pop
mov
jecxz
in
test
cmp
mov
cmc
imul
aaa
fsubrs
jge
pop
mov
jp
jle
or
rclb
shlb
jge
test
fidivs
es
ljmp
cmp
in
mov
pop
jns
lods
stos
or
mov
inc
rcr
aad
add
outsb
jg
mov
in
add
js
or
js
jnp
pop
jl
aas
xchg
pop
out
pop
hlt
in
mov
jl
test
or
mov
push
adc
pop
sbb
mov
sarb
and
data16
add
mov
jns
mov
cmp
cmpsl
and
dec
cmp
in
imul
mov
flds
sbb
mov
subb
jp
xchg
cmpsb
mov
call
or
imul
mov
in
sub
icebp
mov
repz
aas
jle
mov
subb
xchg
and
inc
repnz
xchg
and
loopne
cmpsl
push
jge
mov
jp
xchg
test
dec
jbe
lahf
jno
mov
fisttpl
negb
out
imul
out
out
js
rorb
sub
aaa
pusha
inc
push
pop
sub
sbb
mov
cmpsl
lcall
stos
in
cmpsb
sub
fstpl
mov
pop
mov
loope
sbbl
mov
fadds
sbb
enter
loope
sti
stc
or
cmp
push
test
push
aam
sub
cwtl
cltd
fwait
cs
xchg
pop
pop
movsb
sti
add
fs
jns
fmul
lret
das
adc
scas
pop
pop
xor
call
xchg
inc
push
adc
lahf
std
jl
jns
in
imul
cmp
xchg
fldt
fdivrp
call
subl
mov
pxor
jae
scas
repz
cmp
imul
aam
jl
mov
jae
cmp
xchg
or
push
cmp
adc
cmpsb
inc
addl
cmp
xor
sbb
adc
in
cmc
lea
mov
lcall
pop
int
test
lret
xor
je
arpl
cmp
jne
cli
push
pop
cmpsb
inc
lock
pop
xor
mov
pop
sar
and
jp
mov
adc
mov
pop
mov
xor
roll
cli
mov
repnz
mov
mov
inc
mov
jmp
mov
xor
mov
movb
jecxz
cmpsl
out
and
mov
sub
jnp
or
pop
sub
sbb
inc
dec
aas
pop
rclb
out
jns
lods
lret
fstpl
icebp
stos
test
add
dec
pop
pop
scas
jmp
repnz
or
mov
cmpsb
jle
outsl
fsubl
mov
xor
iret
daa
jl
mov
or
xchg
loopne
cmc
jle
ret
loope
dec
dec
mov
mov
popf
pushf
shll
movsl
loopne
loopne
and
out
cmp
inc
out
adc
xchg
pop
add
inc
adc
outsb
xor
jns
and
cwtl
or
jno
jb
fsts
faddl
mov
add
enter
xor
cmp
fisttps
pop
jl
adc
stos
mov
fdiv
pop
cmp
jge
test
fldt
jmp
test
or
mov
movsb
push
ds
mov
xor
hlt
sub
xor
leave
xchg
shr
shll
or
dec
cli
adc
rolb
add
das
mov
dec
mov
setno
dec
pop
inc
inc
add
cltd
ret
cwtl
push
xlat
pushf
push
mov
pop
jb
imul
and
inc
movb
lock
sub
pushf
jbe
adc
andb
xor
daa
push
int
and
xor
enter
pop
addr16
and
nop
push
test
sbb
dec
push
shll
inc
lea
ljmp
mov
test
pop
repnz
outsb
jle
and
cmp
and
adc
stos
pop
add
rorb
sbb
and
mov
pushf
jbe
adc
iret
repz
ret
lcall
in
cmp
stos
inc
mov
repz
popf
mov
idivb
icebp
xchg
sbbl
fs
rol
and
adcl
mov
std
dec
fs
jb
mov
scas
lea
pop
sahf
daa
insb
pop
mov
push
jbe
lods
cmp
xor
adc
sbb
cmp
add
in
dec
rclb
pop
outsl
sub
push
or
xor
mov
inc
pop
icebp
adcb
clc
in
es
xchg
adc
cwtl
loopne
push
push
into
mov
jg
sub
mov
dec
mov
xor
outsb
jb
or
in
sbb
in
scas
aad
sbb
push
xchg
out
push
stos
pop
fstp
out
ja,pn
push
inc
push
jnp
add
lret
out
push
xor
lret
leave
lds
loope
mov
xor
push
hlt
add
mov
push
or
jbe
sub
ret
jg
mov
pop
or
dec
into
lahf
sbb
int3
mov
pushf
add
push
in
mov
mov
mov
nop
jle
and
pop
scas
xor
push
xchg
movsb
sbb
fstpt
sub
and
aaa
push
inc
loop
jmp
sbb
adc
not
adc
js
and
jne
sub
mov
test
jmp
jno
sub
jb
xor
adc
mov
mov
cmp
mov
fcoms
pop
and
jg
jns
add
adc
lea
repnz
jge
add
movsb
cmp
mov
jge
or
xor
pop
imul
xchg
je
sub
paddb
push
pop
and
sbb
and
pop
and
iret
push
xor
dec
jmp
mov
cmpsl
push
aas
out
data16
push
xchg
jne
sar
inc
leave
add
ret
or
in
lods
ja
adc
fstpl
outsb
mov
cmp
fisubrs
adc
aad
pop
and
or
pop
testb
add
push
and
mov
mov
and
clc
sub
or
sarb
mov
mov
sub
daa
push
jmp
pop
jp
sbb
stos
sub
out
xor
xor
xor
cmp
pop
xchg
push
add
and
cltd
lods
mov
xchg
mov
cmpl
push
subl
dec
xchg
shll
or
mov
arpl
fidivs
sub
mov
push
add
add
xor
jae
arpl
dec
or
lods
push
cmp
inc
fscale
sub
mov
iret
add
add
adc
xchg
std
inc
xchg
popf
repnz
adc
scas
bound
sbb
push
sub
fdivrl
out
or
inc
cmp
push
cwtl
xor
and
adc
in
push
xlat
sub
push
inc
ret
mov
dec
fdivrs
jae
es
fisubrs
subb
test
mov
push
jg
mov
push
adc
jns
mov
dec
ret
outsl
inc
push
dec
fsubp
out
mov
mov
and
or
mov
insb
xlat
leave
dec
testb
mov
bound
mov
pop
push
push
orl
into
jnp
test
clc
and
pop
push
shll
inc
out
add
pop
and
xor
jl
xchg
clc
pop
inc
mov
sub
xchg
pop
fnstcw
adc
push
add
sbb
mov
fisubrl
out
cwtl
push
imulb
xchg
test
loopne
movsl
ds
add
test
scas
pop
mov
add
js
mov
lds
or
and
sub
push
pop
cwtl
push
in
inc
fnstsw
test
jecxz
push
push
sbb
std
xor
or
int3
add
fwait
cmp
adc
clc
call
jnp
ret
adc
xchg
lahf
rorl
or
aad
pop
insb
enter
stos
in
cmpsl
daa
xor
stos
fwait
or
vpsllw
sbb
xlat
jmp
shll
pop
mov
dec
call
pop
mov
lods
loop
or
fisubrl
hlt
pop
dec
jb
movsb
cmp
fistpll
xor
lahf
xchg
das
popf
popa
pop
mov
aaa
test
sub
nop
cmp
nop
ss
arpl
in
loopne
push
shl
jo
ds
ret
push
testb
arpl
cmpl
push
add
movsb
das
cmc
sub
les
outsl
mov
add
gs
cmp
push
sahf
ffree
cmp
jmp
imul
andl
inc
cmpsb
push
shlb
mov
cmp
mov
stc
and
das
jns
xlat
call
aaa
cmp
jp
rcrl
call
mov
scas
and
push
push
aas
sbb
mov
push
adc
scas
repnz
mov
adc
jns
add
scas
xchg
xchg
jae
xor
xor
mov
mov
dec
shrl
imul
call
mov
xchg
es
subl
negl
xchg
and
lods
and
test
jbe
icebp
jnp
jmp
push
sbb
push
vpackuswb
mov
add
mov
pop
mov
mov
shl
shrb
dec
subl
xchg
inc
mov
mov
sub
inc
cmpsb
fistps
les
mov
push
jmp
jb,pt
in
mov
cmp
sub
scas
push
cmp
dec
pop
cmpsb
outsb
add
fcompl
fidivs
fimull
push
loope
xchg
mov
shrl
cltd
in
add
out
xlat
rorl
mov
push
add
pop
sbb
jae
mov
fs
stos
lea
cmp
pop
xchg
jmp
fisttpll
mov
stos
sbb
cli
gs
ja
cmp
or
notb
stc
js
fisubrl
out
adc
add
xlat
jbe
roll
fdivp
sti
cmp
lds
mov
jns
lcall
mov
shlb
lahf
pop
dec
lret
repnz
inc
daa
cmpsb
rorb
xlat
and
imul
iret
push
dec
inc
pop
mov
adc
es
xlat
rol
xchg
cmp
pop
loop
xor
and
fidivrs
xchg
aam
lds
xchg
add
out
adc
stos
inc
arpl
push
push
inc
add
paddw
sbb
mov
sti
ds
data16
pop
sahf
das
mov
pop
cmc
ja
push
insb
jge
roll
jmp
sub
pop
mov
inc
jp
xchg
fwait
jne
mov
int
out
jnp
mov
lods
mov
sbb
ficoms
sub
mov
mov
add
jmp
fisttpl
imul
push
mov
popf
sahf
lahf
verr
xor
pop
scas
xchg
mov
cs
mov
adc
fs
cwtl
inc
mov
push
xchg
cmp
sub
sbb
or
clc
and
xor
add
adc
fs
cwtl
inc
mov
push
xchg
cmp
sub
sbb
or
clc
and
mov
test
adc
fs
push
jns
push
xchg
cmp
sub
sbb
or
clc
and
xor
add
adc
fs
sbb
xchg
jecxz
insb
mov
sub
notl
arpl
jae
dec
xchg
jo
add
xor
ja
inc
jecxz
repz
pop
mov
notl
arpl
jae
add
dec
addr16
ja
es
repz
out
aaa
xchg
pop
mov
notl
arpl
jae
add
xor
ja
es
xor
daa
int
rclb
xchg
and
mov
dec
sub
mov
mov
in
mov
jp
mov
xchg
mulb
sub
cmp
mov
sub
neg
xchg
fiaddl
out
loop
inc
negb
or
xchg
or
loop
addr16
daa
pop
adc
notl
and
divl
dec
cmp
mov
xchg
int
cmp
sub
addr16
insl
pop
test
or
xchg
xor
decb
mov
adc
cmp
lahf
pop
sbb
divl
xchg
andb
fimuls
push
xor
jg
jg
push
jbe
shlb
out
xorl
push
mov
notl
arpl
jae
add
xor
ja
inc
jecxz
repz
xorl
pop
mov
mov
stos
arpl
jp
gs
vmovaps
jnp
push
arpl
mov
push
lahf
jae
outsl
rcrl
dec
out
push
xor
mov
xchg
insb
in
inc
xchg
push
cmc
or
xchg
pop
fstps
movsb
adc
push
out
mov
xchg
xchg
xor
ja
inc
jecxz
repz
xorl
pop
mov
notl
arpl
jae
add
xor
ja
inc
jecxz
repz
xorl
pop
mov
repnz
test
arpl
js
frstor
je
fildll
or
jnp
jo
jae
push
sub
inc
push
movsb
lods
dec
cmp
adc
cmp
mov
dec
test
into
int
lods
and
pop
cwtl
jno
mov
pop
add
jl
hlt
dec
ds
clc
leave
jmp
ja
jae
lock
call
mov
mov
cmpsl
push
inc
push
shrb
jb
push
out
out
flds
adc
les
push
outsb
movsl
push
pop
dec
int3
iret
sub
scas
out
scas
and
xor
enter
leave
es
mov
jg
test
enter
mov
cmp
popa
sub
mov
imul
jo
mov
negl
jp
int
rcrl
cmpsl
stc
loop
test
add
pop
aas
les
std
and
add
push
or
push
push
xchg
jo
or
push
cltd
shlb
pushl
inc
stc
dec
ss
dec
xorb
call
cmp
pusha
jg
fisubrl
aaa
mov
mov
jge
mov
shr
inc
mov
jg
inc
xor
das
dec
inc
notb
stc
dec
sbb
int
add
cmp
sahf
xor
outsb
push
imul
dec
rorl
mov
mov
outsb
lods
aad
cmpl
pop
pusha
or
jp
xchg
xchg
pop
lods
jns
stos
add
pop
ljmp
sub
sbb
jbe
test
cmp
fldt
aam
pop
mov
mov
push
loope
jmp
inc
ret
fbld
jp
in
xlat
mov
cmp
jne
mov
aaa
inc
and
or
inc
pop
dec
dec
movsb
lret
jnp
out
rclb
push
lss
add
dec
clc
or
repz
xchg
inc
mov
das
sahf
fnstenv
add
cli
mov
pop
mov
sahf
iret
or
jb
sbb
sub
jle
ljmp
and
add
push
add
mov
aaa
in
sbb
mov
adc
test
mov
xchg
aas
das
xchg
loopne
jl
xchg
inc
mov
and
push
movsb
out
imul
mov
lret
fbstp
jo
pop
jns
adc
mov
dec
rorl
xchg
loope
and
arpl
mov
lahf
fisubl
xor
mov
add
pop
fwait
mov
jecxz
jp
or
stc
fcompl
sbb
enter
in
inc
push
loopne
shl
repnz
mov
jp
test
movsl
cmp
test
pushf
daa
sbb
jle
fbstp
mov
mov
cwtl
pushf
xchg
dec
xchg
cmovl
js
fcompl
jae
xor
fnsave
push
insl
popf
lods
lret
or
mov
xor
loope
add
das
cmp
inc
xor
mov
xchg
inc
xlat
clc
mov
mov
pop
add
or
inc
test
or
add
bound
jne
sub
sub
mov
out
mov
adc
je
stos
mov
sub
mov
fdivl
lods
fwait
jle
jecxz
push
lods
aaa
out
lods
mov
or
mov
cmovns
pop
aaa
shrb
mov
cltd
adc
jb
into
mov
sbb
out
jb
mov
or
idivb
dec
lret
xchg
mov
inc
test
mov
xor
sbb
stc
mov
xor
mov
ss
andl
ficoms
push
dec
inc
cmpsb
nop
scas
lock
pop
mov
xor
or
sub
mov
in
sbbl
mov
mov
cli
jno
dec
add
sbb
sub
into
aaa
repz
xor
movsb
dec
arpl
mov
jp
insl
jl
jne
outsl
mov
adcb
and
jno
jns
pop
roll
push
push
inc
jmp
fistps
scas
imul
and
movsl
dec
addr16
ja
outsb
jl
mov
push
adc
aad
push
aas
data16
mov
ficoml
add
mov
lcall
bound
pushf
fisttps
sub
pop
aam
insb
stc
cmpl
sbb
insl
jae
dec
int
cmpsl
mov
lds
mov
sub
sarb
call
add
inc
mov
pop
xchg
fwait
into
jnp
push
xor
repz
cmp
adc
adc
adc
js
cli
xchg
adc
repnz
out
cltd
push
cmp
xchg
mov
xchg
call
dec
mov
jo
dec
xor
std
pop
movsl
fidivl
xchg
and
xor
add
mov
jne
sub
mov
mov
mulb
aad
loop
popa
shrl
push
sti
fstl
adc
push
pop
mov
dec
stos
mov
pop
stos
and
push
mov
test
xor
inc
mov
lods
dec
insl
or
stos
xor
sbb
jnp
les
mov
and
or
leave
mov
int
cmp
push
mov
add
lods
jb
jmp
shrb
jnp
sub
testb
sub
arpl
dec
shlb
aad
loop
ret
or
pop
test
push
add
in
stc
inc
lret
inc
test
cmc
dec
in
or
bound
fstl
jge
imul
add
lret
mov
sbb
lret
pushf
fisubl
imul
loop
sar
mov
lret
popf
jge
fs
std
push
movsb
loop
mov
pop
push
jle
adc
aad
les
mov
push
push
mov
fisttpll
aad
imulb
xor
shrb
mov
jno
lea
das
mov
dec
push
in
mov
xchg
and
mov
loope
jne
shr
push
scas
cmp
mul
dec
clc
jg
rorl
js
sub
adc
pop
jb
rclb
ffreep
test
fcoms
addr16
imul
aad
je
je
or
nop
jle
test
xor
aam
xchg
sub
in
cmc
fcmovbe
jbe
sbb
xchg
xor
or
pop
shr
jns
cld
sbb
jno
jae
lret
pop
idivl
mov
sbb
adc
mov
mov
jg
imul
or
insl
out
imul
push
pop
popa
jg
stc
pop
jl
test
xchg
adc
clc
xor
and
push
cmp
jecxz
stos
out
rcr
call
aad
pop
mov
data16
push
into
icebp
fisubl
int3
fnstcw
fimuls
xor
mov
int3
adc
ret
fdecstp
ret
jb
pop
call
nop
lods
sub
pushf
sub
sti
cwtl
loope
lods
or
mov
cmp
jecxz
mov
ror
loope
pushf
ret
mov
sti
cmpsb
mov
lods
ljmp
or
hlt
insb
xor
ror
imul
dec
jge
aaa
xchg
or
sub
negl
dec
inc
cmp
jp
cmpsl
cmp
inc
aam
xchg
jle
xor
and
pop
cwtl
xor
outsl
test
sbb
sbb
mov
inc
jp
pop
in
ret
cmp
sbb
jns
mov
or
int
lods
mov
enter
aam
pop
push
stos
xlat
mull
xchg
cltd
or
fisttpll
rcll
inc
jne
fdivl
out
cmp
xchg
cmpl
add
mov
and
aad
inc
mov
cmpsl
or
xchg
stos
test
inc
push
rcll
in
add
add
or
xchg
loope
pop
dec
inc
fisubrl
orl
add
inc
fldenv
mov
scas
mov
pop
mov
adc
push
mov
push
pushf
push
jmp
dec
and
push
push
mov
xchg
inc
jne
pop
shr
aaa
sbb
cmp
dec
and
fcoml
ret
lods
lret
xor
ds
mov
add
or
pop
in
mov
jecxz
sarb
mov
into
jmp
mov
cmp
mov
shlb
dec
insb
xchg
fcmovb
xchg
popf
pop
mov
jnp
cwtl
mov
cmp
xchg
icebp
das
fwait
or
add
repz
mov
aas
push
pusha
sbb
mov
push
enter
add
iret
out
inc
push
xlat
mov
movsl
bound
fstpl
test
push
vcvtdq2ps
mov
add
and
and
mov
sbb
loopne
out
popf
scas
jns
ret
push
scas
in
or
leave
into
dec
iret
jmp
jl
dec
adc
xor
shlb
pop
aad
jecxz
in
in
xchg
lret
mov
out
and
insl
mov
testl
ja
cmp
mov
imul
mov
dec
inc
les
mov
in
dec
mov
mov
std
cmpsb
sub
push
out
and
xor
ja
rclb
loop
mov
fnstsw
je
outsb
sahf
xor
jp
hlt
imul
test
ds
push
sbb
sti
lret
lcall
lret
pop
or
rclb
push
test
cmp
pop
movsl
or
add
ss
clc
shll
pop
icebp
jnp
and
call
fsubl
pop
fcoml
mov
inc
xor
dec
pop
xlat
dec
jae
cmpsb
inc
loope
std
or
push
pop
xchg
xor
out
xchg
out
lret
adc
hlt
loop
jnp
mov
popa
push
popf
pop
pop
subl
mov
fcomi
push
xor
das
xor
add
cmp
pusha
jnp
sbb
shlb
sub
or
and
ficomps
dec
mov
fcmovnu
icebp
and
sub
inc
stos
add
jo
cmpsb
out
mov
nop
mov
mov
jg
dec
pop
inc
sbb
lret
sub
lret
aas
scas
pop
call
mov
and
push
cld
rcrb
mov
loopne
notl
mov
pop
push
test
sub
mov
lods
inc
rolb
add
jmp
fisubrs
mov
int
test
cwtl
pop
movsb
insl
das
in
cld
test
mov
sti
aaa
jb
cmp
add
addr16
xchg
cmp
sarl
dec
jbe
push
xchg
inc
insl
call
mov
push
stos
mov
aad
mov
gs
push
jae
jns
sub
mov
ljmp
ret
push
inc
sub
aaa
icebp
xor
imul
xor
in
push
roll
nop
push
push
out
stos
das
cmpb
pop
es
push
dec
inc
movsb
negb
mov
adc
mov
push
fldt
mov
vmread
or
mov
push
push
or
and
movb
scas
aam
rorb
movsb
fisubrl
icebp
mov
jb
aam
xchg
outsb
sar
xorl
xchg
pop
sbb
test
push
movsl
mov
call
cmpsl
sub
out
repnz
inc
test
insl
test
or
notb
and
pop
push
cmp
dec
jmp
out
cmp
lcall
xor
xor
xor
stc
sbb
test
imul
shrl
sarl
fmuls
arpl
xchg
not
cmp
cmp
testl
nop
cmp
and
loope
scas
push
sbb
nop
in
cmp
and
ss
je
lret
outsl
inc
xchg
ja
repz
xchg
inc
out
xchg
dec
mov
loopne
imul
push
fs
aam
pop
dec
sbb
js
mov
cmp
jbe
jmp
inc
lds
sub
sub
jno
roll
xchg
jno
mov
mov
out
insl
aam
jne
movsl
addr16
test
xor
sub
stos
mov
incl
icebp
xchg
and
scas
add
adc
das
mov
shll
aas
pop
xor
outsb
lds
ficompl
repz
mov
push
rcrl
inc
into
in
out
or
rolb
mov
imul
imul
pusha
clc
mov
dec
and
scas
dec
pop
fisttpll
add
sbb
xchg
ds
daa
pop
adc
xchg
rcr
icebp
gs
lods
sbb
push
popf
in
fistps
add
mov
pop
hlt
jne
int
pop
lods
sub
mov
or
das
push
aas
mov
sbb
adc
inc
fs
lcall
inc
stc
adc
adc
sub
inc
cwtl
enter
adc
or
mov
mov
movsl
add
addr16
outsl
ss
js
out
stc
xchg
rcrl
mov
sbb
test
scas
je
jbe
lock
or
sahf
adc
cmp
sbb
ret
popf
dec
inc
mov
cwtl
fists
inc
xchg
roll
xorl
fisubs
add
cltd
xor
div
push
xlat
cld
or
pusha
call
mov
xchg
lcall
push
adcb
in
jno
mov
fmull
xlat
lods
adc
leave
sub
jle
mov
pusha
or
push
loop
pusha
mov
out
or
andl
mov
fisubl
push
cmp
mov
roll
jno
fimull
fbstp
or
lahf
xchg
lretw
in
xchg
mov
repnz
or
out
fmul
repnz
push
das
push
outsl
push
push
and
dec
push
xchg
fst
sub
cmpw
imul
jb
iret
lods
push
mov
cmp
ljmp
sbb
lcall
loop
outsb
mov
subb
cmp
mov
xchg
or
push
push
ss
cmpsb
push
cltd
or
sub
mov
dec
xor
or
and
mov
adc
mov
xor
testb
xchg
jo
mov
sar
inc
js
mov
ds
and
sbb
jne
pop
inc
call
test
stc
icebp
adcl
cmpsl
jmp
dec
fildll
cmpsl
mov
or
nop
xor
and
add
imul
lods
add
and
pop
mov
sub
push
ror
daa
xchg
faddl
bound
es
sub
or
ss
out
jl
sub
jg
jge
sub
fwait
mov
fildl
mov
shl
and
cmpsb
divb
je
bound
cmp
daa
inc
sbb
sbb
xchg
and
stos
inc
lods
cld
jg
adc
dec
pop
fcompl
pop
in
rorb
xchg
sub
cltd
adc
popa
lret
jb
mov
stos
movhps
addr16
jne
testl
iret
pop
mov
adc
mov
orb
pushf
add
mov
xchg
aas
leave
pop
xchg
shr
jecxz
or
sahf
xor
add
jp
or
add
cwtl
push
test
xor
inc
cwtl
mov
push
push
ds
stos
xor
add
pushl
out
inc
push
mov
insl
into
mov
push
fs
adc
shlb
lcall
mov
cmp
xchg
dec
enter
xor
cmp
sarb
jnp
adc
mov
ss
adc
sub
push
jns
xchg
imul
lea
inc
xchg
sbb
sbbl
nop
dec
addr16
ss
mov
sarb
hlt
lret
inc
push
mov
in
pop
xor
std
mov
addr16
dec
cmp
sarl
pop
sub
iret
cmp
outsb
or
outsb
loope
xor
sbb
xlat
jecxz
inc
jge
inc
ret
mov
adc
mov
push
xor
insb
push
mov
lea
or
pop
rclb
inc
leave
mov
das
fisttpl
mov
mov
adc
adc
popl
leave
add
jb
jae
icebp
lds
fldenv
xchg
mov
fbstp
lds
hlt
scas
push
pop
faddl
pushf
cwtl
mov
or
adc
rorl
push
push
fdivr
ss
cmp
mov
mov
dec
idivl
jbe
cmp
lods
int3
and
cmp
sub
push
shll
add
mov
js
lcall
add
jle
sub
sbb
xor
out
leave
loope
insl
mov
iret
dec
mov
shr
in
jecxz
iret
ja
shlb
fidivl
or
and
sub
fsubs
in
mov
inc
and
cwtl
rol
sbbb
sub
inc
pop
cmp
sbb
push
inc
mov
aas
into
jnp
cmp
jne
cmpsb
push
push
and
push
dec
pushf
cwtl
std
outsl
inc
sbb
ja
or
clc
shl
xchg
icebp
sub
sbb
and
lods
dec
or
das
pushf
xor
out
or
sub
fs
addb
and
xchg
dec
xor
inc
rcrb
aad
pop
push
sbb
adc
lods
nop
test
mov
je
mov
mov
sarb
mov
cmc
or
in
push
idivl
push
punpcklbw
push
sbb
add
xchg
sbb
sbb
stc
adcl
jnp
in
jbe
or
add
sub
adc
push
push
mov
adc
adc
cmp
push
out
sbb
cli
mov
lods
xor
push
and
dec
dec
std
in
xchg
sahf
ret
sbb
xchg
adc
ret
ret
loopne
popa
ljmp
sbb
inc
sub
rcll
imul
xor
mov
inc
fwait
js
cmpl
aam
rclb
ja
lea
fucomi
or
in
dec
popf
mov
mov
mov
pushf
mov
add
into
sub
jl
sub
mov
clc
xchg
xchg
xchg
jne
mov
dec
dec
into
push
imul
data16
mulb
mov
mov
xor
push
xor
pop
inc
test
sbb
dec
stos
subl
mov
push
out
and
push
jg
and
dec
rcrl
add
mov
out
mov
add
add
mov
sbb
pop
rcll
enter
loope
mov
push
mov
cmp
mov
or
push
test
cli
testl
mov
dec
je
fcmovb
inc
jno
jp
into
pop
push
fsubrl
dec
push
cld
movsb
dec
push
mov
sahf
dec
push
or
lds
scas
mov
les
scas
leave
fwait
mov
fldcw
mov
jnp
jle
sub
push
xchg
es
xor
sub
jmp
push
dec
jg
leave
xor
sub
es
into
scas
cld
or
cld
iret
mov
stc
mov
xor
mov
cmp
lahf
push
lea
mov
lods
adc
adc
xor
outsb
or
pop
mov
fimuls
test
ss
cmc
aaa
in
adc
sbb
add
inc
xor
lods
push
nop
or
inc
jae
mov
sub
sahf
enter
rcrb
ss
faddl
pop
and
sbb
and
jle
stos
addr16
add
arpl
int3
mov
ficompl
lret
pop
lds
bound
sbbl
int
inc
jecxz
cld
push
js
cltd
leave
add
insl
mov
aaa
mov
push
sbb
aam
xlat
inc
xor
mov
inc
aaa
inc
test
mov
iret
mov
pop
aad
aam
inc
dec
and
lret
arpl
fbstp
inc
pop
inc
jecxz
cltd
jns
hlt
or
jle
out
shrl
sub
mov
js
insl
shll
aad
addl
adc
leave
jne
daa
sub
and
lret
outsl
or
out
addb
pop
and
xor
ds
cld
mov
push
lea
mov
or
insl
xchg
inc
sub
lcall
cmp
xor
into
movsb
cmp
mov
pop
test
pop
inc
sti
cmp
xorl
cli
mov
pop
enter
adc
sbb
push
xchg
sbb
push
jno
xor
inc
fcomps
push
add
mov
mull
and
popa
jnp
aam
xor
xchg
mov
lahf
sbb
inc
xor
xor
popa
test
pop
push
lods
sbb
imul
mov
and
scas
inc
push
pushf
shrb
dec
or
jo
xor
js
shl
jns
cs
or
sbb
dec
sub
mov
hlt
fnstcw
xor
adc
out
and
movb
out
cmp
sbb
inc
insl
das
test
lods
sbb
ds
mov
hlt
stos
pop
push
stos
sub
jg
mov
dec
jb
inc
dec
stc
dec
add
cld
jns
mov
or
jmp
sbb
and
or
ds
cmpsb
push
xchg
fstl
arpl
jae
add
xor
ja
inc
jecxz
repz
xorl
pop
mov
notl
arpl
jae
add
xor
ja
inc
jecxz
repz
xorl
pop
mov
notl
arpl
jae
add
xor
ja
inc
jecxz
repz
xorl
pop
mov
notb
arpl
jae
add
xor
ja
in
jecxz
test
mov
dec
push
mov
sub
movl
movl
movl
movl
call
mov
cmpl
jne
push
push
push
call
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
in
test
or
les
or
add
pop
push
add
add
add
add
add
addl
mov
add
add
add
add
add
add
addl
push
add
test
addl
add
or
add
add
add
addl
in
jns
add
or
add
add
movsb
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
test
addl
out
pop
add
add
add
push
add
add
mov
add
add
add
lods
add
add
add
add
mov
push
add
add
out
inc
add
add
add
and
sbb
dec
add
addl
inc
add
adc
add
add
or
add
add
add
add
add
dec
add
movsl
add
add
sub
jp
cmp
ljmp
add
add
xchg
addl
movb
add
add
add
add
mov
add
add
lret
add
addl
push
add
cltd
add
mov
addl
push
add
add
add
add
add
add
add
add
add
add
in
add
addl
sahf
add
add
addl
and
movb
add
add
add
mov
add
add
add
add
add
add
add
jp
rolb
inc
add
inc
add
add
add
add
mov
add
add
add
out
add
out
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
outsl
add
add
add
add
add
rolb
pop
add
addl
int3
add
add
and
sub
dec
add
add
inc
add
add
add
add
add
add
add
add
addl
stos
add
jae
or
add
add
add
add
test
addl
stos
add
add
addl
add
dec
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
cs
add
add
add
add
dec
or
insl
add
dec
repz
lret
add
and
orl
inc
fnsave
iret
mov
popf
or
xor
jge
test
pushf
ds
lods
push
add
sub
mov
mov
push
pushf
jnp
jg
xor
jecxz
xchg
imul
jns
sub
fldenv
aam
mov
repnz
std
jne
push
lahf
je
cs
daa
rcll
sub
mov
inc
pop
fimuls
jl
mov
dec
mov
xchg
add
xchg
lea
movsb
nop
pop
stc
sub
or
jbe
mov
aam
lods
or
incb
mov
subl
daa
aaa
cmc
movsb
mov
icebp
sub
addr16
or
mov
pushf
insl
enter
scas
adc
dec
rorl
outsl
arpl
mov
and
inc
inc
xor
js
mov
ret
sbb
insb
clc
andl
ret
jl
sbb
mov
and
adc
imul
pop
pop
mov
iret
push
enter
loope
jne
jns
je
cs
leave
stos
mov
jbe
call
push
fs
out
ror
std
stos
and
les
pop
stos
add
enter
pop
arpl
into
push
scas
pop
xor
push
mov
std
push
lock
leave
pop
add
popa
push
inc
call
jecxz
inc
mov
pop
xchg
lock
xchg
push
pop
or
or
xorl
aaa
inc
ret
dec
jns
pop
and
repz
mov
rorb
add
fdiv
mov
xchg
adc
aam
pop
sub
sub
lods
test
ja
cltd
xor
jge
mov
fisttps
pop
jmp
cmpsl
pushf
mov
sub
inc
adc
movsb
lods
popf
sbb
jno
xchg
jp
pop
rcr
fucomip
inc
loopne
and
xchg
inc
jge
js
pop
mov
roll
test
xor
dec
test
cmpsl
pop
call
shr
xchg
inc
push
xchg
fistl
icebp
xchg
shrb
ljmp
and
sbb
ja
jo
mov
push
in
adc
mov
add
lret
dec
pushf
cld
lcall
xchg
shrl
mov
aas
mov
movsb
xchg
imul
inc
and
xchg
inc
movsl
sub
pop
cmovae
mov
rcll
xor
or
push
jmp
ret
das
push
and
jl
clc
xchg
cmpsb
inc
jne
and
push
int3
dec
mov
fs
aad
xchg
jnp
push
fcompl
ret
add
add
add
add
rolb
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
repnz
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
repnz
fdiv
add
aam
add
int3
repnz
repnz
mov
repnz
lods
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
hlt
add
dec
hlt
add
push
hlt
add
pop
hlt
add
fs
add
insb
hlt
add
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
hlt
add
mov
hlt
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
testb
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
testb
mov
testb
lods
testb
movsb
testb
pushf
testb
xchg
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
testb
cld
testb
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
shl
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
clc
add
dec
clc
add
push
clc
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
clc
add
lods
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
