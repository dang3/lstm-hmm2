jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
jg
jne
push
dec
dec
pop
stc
or
sub
xor
add
add
add
add
push
pop
fiaddl
adc
and
clc
add
add
add
test
ret
add
add
add
pop
add
add
push
add
add
aas
add
add
xor
aad
sub
scas
add
add
and
and
mov
add
add
add
add
add
add
add
and
xor
clc
add
add
add
or
imul
add
add
add
add
xor
add
aaa
add
add
clc
add
add
push
add
add
add
dec
add
add
add
add
dec
add
or
aas
add
imul
clc
add
add
add
add
cmp
mov
and
add
clc
add
add
mov
or
adc
cmp
aaa
add
add
clc
add
add
add
add
add
add
push
add
add
add
add
add
movsl
add
add
add
addl
cwtl
add
add
add
pop
add
add
add
add
mov
add
add
add
add
add
add
jae
clc
add
stos
add
and
xor
clc
add
add
add
add
add
add
add
add
add
add
cmp
and
or
mov
add
or
adc
xchg
add
add
add
sub
mov
add
add
add
add
mov
add
add
add
add
add
add
or
mov
add
add
add
filds
pop
add
clc
add
add
add
das
add
add
clc
add
add
add
add
add
aad
verw
and
or
push
add
add
add
xor
clc
add
xor
aas
add
add
add
add
add
imul
inc
add
add
add
add
add
add
movl
xor
sub
cwtl
add
add
add
add
clc
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
cmp
xor
clc
add
addl
add
and
or
sahf
add
mov
add
add
push
add
add
add
and
xor
clc
add
push
add
add
add
add
fildl
push
add
xor
sbb
outsl
add
add
add
or
xor
push
add
or
cmp
xchg
add
or
test
xor
inc
add
add
add
add
add
add
add
mov
and
dec
add
add
add
add
add
insb
add
add
or
loopne
push
add
sbb
or
and
and
clc
add
push
add
add
add
sbb
stos
add
and
clc
add
add
add
clc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
and
adc
clc
add
sbb
outsl
add
add
add
add
sbb
dec
add
aas
add
add
add
gs
add
xchg
add
add
add
sub
mov
add
add
add
and
push
add
mov
add
add
add
add
mov
bound
and
xor
test
aaa
add
add
add
sub
fwait
popf
mov
push
push
test
jg
fdivrs
jno
push
and
or
mov
imul
gs
std
sbb
adc
test
repz
sbb
or
adc
cmp
pop
stc
repz
pop
mov
cmpsb
inc
sub
ret
pop
out
or
aam
xor
adc
cmp
pop
imull
and
ja
jns
jg
out
das
fs
xchg
sub
fcoml
adc
sbb
test
outsb
addb
loope
sbb
packssdw
shr
insb
out
lds
add
cmc
sbb
pop
jo
insb
mov
in
imul
cmp
pop
fisubrl
cmpsb
inc
mov
pop
subb
lahf
std
rcrb
das
xor
out
mov
or
mull
cli
mov
adc
mov
jmp
cwtl
mov
popf
xor
xlat
lods
clc
add
hlt
in
outsl
pop
sbb
test
jbe
imul
aam
pop
js
cmp
push
ds
push
ds
pop
js
xchg
lods
sbb
sbb
sbb
imul
addb
js
jbe
xor
and
in
cld
sub
mov
je
sub
pop
jecxz
mov
sub
push
and
popf
stc
xchg
mov
icebp
sbb
mov
jge
sti
sub
mov
cmpsb
popa
shrb
mov
xor
xchg
inc
cmpb
les
cmp
jle
call
mov
arpl
aad
cmc
inc
mov
out
faddl
out
mov
js
test
fiadds
add
int
adcb
aaa
ret
jl
sub
fmuls
ds
mov
mov
popf
pop
int3
ficoml
int
icebp
push
fldl
outsb
mov
loop
or
push
push
dec
xlat
cmp
and
ljmp
and
subl
push
adc
imulb
int
repnz
cmpsl
enter
xlat
xlat
push
add
popa
mov
sahf
js
pop
inc
in
in
fnstenv
sub
fists
xlat
xor
sub
mov
add
ret
sti
aas
stos
mov
adcb
add
je
mov
add
insb
sarl
sbb
mov
sbb
iret
pop
push
sti
clc
adc
xchg
stos
pop
negl
push
xor
scas
fcoml
ret
mov
in
lds
pop
lods
lods
xorl
jmp
mov
ljmp
ljmp
xor
hlt
popf
movsb
inc
lds
cmpb
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
xor
dec
xor
inc
inc
imul
scas
imul
out
xlat
iret
mov
xchg
popl
pop
push
dec
inc
aas
aaa
das
stos
pop
pop
scas
imul
icebp
xlat
iret
mov
xlat
popl
fcos
mov
or
xor
negl
ljmp
addl
repz
call
ja
or
and
adc
or
int3
hlt
in
pop
rclb
ljmp
cld
cmp
or
rcr
xor
mov
rclb
mov
mov
ds
xchg
add
das
jbe
bound
iret
imul
jp
bound
pop
xor
xchg
and
cmp
sbb
ds
rorb
in
or
mov
loop
cmp
mov
pop
mov
aam
bound
ret
lods
bound
inc
pop
aas
movsb
mov
dec
in
cmpsb
iret
xchg
js
mov
fisubl
jo
movsb
lcall
fisubrs
iret
fistpll
mov
pop
ficoml
outsl
xchg
pop
shll
dec
aas
aaa
imul
int
xchg
rorl
lahf
xchg
jmp
or
adc
imul
outsb
bound
mov
rcl
enter
out
sbb
test
pop
dec
adc
jns
imul
scas
mov
mov
mov
ljmp
and
pop
push
and
push
das
daa
pop
pop
sysret
push
out
out
xlat
iret
mov
xchg
popl
pop
push
dec
inc
aas
aaa
das
daa
pop
pop
sysret
push
out
out
xlat
iret
mov
xchg
popl
div
adc
scas
dec
xor
loope
jnp
rorl
or
mov
dec
cmp
cltd
mov
lahf
lahf
adc
mov
sub
outsl
jecxz
fimuls
and
popf
jbe
xchg
xor
mov
stos
stc
sub
mov
xlat
adc
jp
scas
imul
inc
out
iret
test
mov
pop
scas
cmp
movhps
daa
cs
jae
add
mov
xchg
adc
ss
mov
mov
lea
sti
shr
cmp
mov
std
mov
jge
cmpsb
imul
cmpsb
lahf
jns
push
cmp
xlat
cli
rcl
push
out
jmp
iret
loopne
push
lea
mov
call
je
sbb
test
shrb
in
jl
test
and
mov
cmp
xor
adcl
sub
iret
xchg
xor
adc
out
mov
push
les
or
int3
aaa
xor
xchg
js
hlt
mov
fs
and
push
psllw
add
mov
push
movsb
xchg
sbb
xchg
pop
data16
mov
cltd
popa
add
dec
and
orb
ja
popl
mov
xchg
mov
and
inc
cmp
xor
sahf
mov
push
scas
jae
fstl
jg
sub
mov
stos
inc
fnstcw
rorb
das
stos
sub
hlt
inc
xor
clc
int
inc
push
movsl
jg
inc
or
sub
jnp
mov
shlb
lcall
adc
mov
and
and
sbb
xor
aam
stc
fildl
mov
xor
ljmp
scas
sub
loope
xor
push
subl
mov
data16
and
pop
pop
gs
flds
mov
or
mov
mov
push
movsb
imul
fs
jle
leave
loop
dec
jp
int
jno
mov
imul
dec
xchg
jae
insb
sub
fisttpll
andb
dec
xor
lret
mov
aad
fsubrl
daa
jno
dec
jecxz
in
xor
ret
jnp
mov
fstl
pusha
jge
xchg
dec
pushf
fimuls
jmp
pushf
outsl
sbb
or
loope
orl
fs
leave
push
iret
jp
push
out
repz
icebp
pop
and
and
movsb
push
sub
push
gs
cmc
sub
sub
and
jo
frstor
adc
test
into
jo
adc
mov
ljmp
in
jg
pop
and
mov
sbb
repnz
pop
jb
loopne
push
imul
inc
ja
aad
sbb
jne
mov
sbb
mov
mov
pop
pusha
ret
and
mov
arpl
sub
test
in
shlb
push
mov
inc
fisubs
sbb
mov
mov
inc
push
fwait
outsb
outsl
fst
adc
or
pushf
sbb
insl
xor
lcall
push
pushf
shrl
cltd
and
jge
jge
data16
mov
mov
scas
dec
mov
stc
subl
test
jle
xchg
lods
xlat
ljmp
je
icebp
adc
cmc
push
aad
stc
sub
add
jns
out
orl
mov
fwait
dec
adc
repz
rcrb
or
gs
sahf
or
aaa
jmp
sub
push
cmp
and
xchg
cli
inc
sbb
in
adc
je
lahf
and
iret
push
loopne,pt
jns
imul
sbbb
xorb
sarl
aas
cwtl
push
out
push
fdivs
inc
cmp
add
and
test
jbe
nop
les
adc
addr16
jp
cmp
movb
inc
sarb
imul
xchg
int
out
daa
ljmp
xor
mov
mov
push
sahf
cmp
pop
fstl
sbb
lods
in
jbe
cld
inc
movsb
enter
push
pop
das
rcrb
or
mov
or
mov
loope
or
fists
rcl
outsb
sub
jg
addr16
cwtl
pop
outsl
jo
and
xchg
bound
pop
jg
ror
jb
jecxz
adc
inc
sub
push
inc
pop
imul
mov
mov
sub
mov
fadds
pop
xchg
sub
arpl
xor
mov
xchg
ret
sbb
adc
mov
mov
xchg
andb
cmp
int
mov
push
xor
mov
fadd
sbb
out
scas
xchg
in
cmpl
lret
in
xor
mov
in
adc
dec
inc
jle
outsl
xchg
ljmp
movsl
sbb
shrb
sub
ds
out
mov
sbb
pop
data16
mov
mov
xor
out
sbbb
call
nop
mov
negl
in
test
inc
and
sub
xor
or
sbb
popf
jo
outsl
pop
in
stos
jns
imul
sahf
xor
into
lahf
inc
in
pusha
imul
pushf
lock
cmp
mov
je
mov
cltd
icebp
mov
jbe
xchg
lcall
inc
mov
mov
dec
iret
push
jl
pop
pushf
es
lahf
cmp
push
dec
mov
arpl
push
dec
movsb
jmp
cmp
sub
insb
mov
int3
data16
js
mov
jge
mov
in
adc
test
fisubl
mov
popa
adc
jmp
xchg
or
loopne
jl
mov
pop
aad
jae
dec
sub
dec
lahf
orl
into
mov
cwtl
adc
sub
in
lock
leave
aas
jmp
jns
cs
jecxz
outsb
add
push
and
inc
jno
or
fbstp
pushw
sub
sti
sub
mov
mov
cmp
jne
mov
hlt
pop
sbb
jg
lahf
arpl
popf
jae
adc
popa
sbb
cmp
xchg
fwait
xor
add
mov
imul
mov
or
inc
imul
inc
dec
dec
or
popa
lret
mov
lret
adc
push
popa
inc
js
int
into
xor
add
mov
jae
enter
aaa
push
std
or
pop
fisttpll
mov
or
ljmp
push
std
and
shll
outsl
mov
dec
orb
xchg
adc
std
test
or
das
subl
add
push
or
inc
cmp
push
adc
adc
or
aaa
adc
push
mov
ljmp
pop
adc
or
inc
lods
xor
and
sub
data16
push
dec
adc
xchg
adc
push
push
dec
repz
cli
in
pop
or
pop
in
jno
loope
scas
mov
test
sub
or
enter
or
in
sub
and
xchg
jbe
lds
inc
mov
out
rorb
sahf
dec
and
jmp
add
and
testl
mov
sub
mov
pop
xchg
xorb
aam
dec
adc
mov
jl
loop
xchg
setae
jmp
dec
and
mov
out
or
in
xchg
xchg
ljmp
mov
cmp
xchg
push
add
xorb
bound
scas
faddp
stos
adc
add
push
icebp
lods
or
ljmp
pop
fldcw
inc
mov
dec
add
daa
dec
inc
mov
xchg
push
xchg
jge
xchg
daa
imul
movlps
sbb
leave
xor
cltd
bnd
in
jne
cmp
je
cmp
enter
ja
and
push
pop
sub
add
push
in
fisttpl
popa
popa
add
fiaddl
idivl
sbb
outsl
and
xor
movsb
leave
pushf
sti
imul
jno
xchg
xor
or
daa
movsl
xlat
imul
sub
inc
sti
fwait
and
cs
push
adc
lea
subl
mov
jns
and
or
sub
sub
outsb
cld
out
test
arpl
cmp
aas
and
jle
inc
std
in
sbb
fcmovu
mov
cmpsl
aas
cmc
in
xchg
ret
pop
mov
ss
inc
xchg
cwtl
adc
jb
aam
push
mov
or
cmp
ljmp
in
fnstsw
cmpsl
jne
lods
sub
nop
mull
out
sarb
add
stc
mov
fisubrl
jge
pushf
stos
add
cmp
add
push
aam
xchg
mov
clc
mov
pusha
sub
dec
push
loope
or
inc
xlat
lea
rclb
lret
repnz
dec
adc
mov
jl
pop
cwtl
mov
or
ret
mov
insb
jne
pop
das
push
add
nop
or
xor
mov
jl
ljmp
xchg
jp
sahf
adc
dec
xrelease
imulb
repz
mov
xorb
xchg
aad
repnz
mov
addr16
js
aas
lds
je
fstps
ret
fs
fs
mov
ljmp
push
out
bound
add
decb
sbb
ret
into
test
mov
gs
sub
stc
enter
sub
mov
push
cltd
inc
mov
xchg
mov
lcall
and
add
sbb
cmp
mov
or
pop
pop
fwait
or
push
mov
adc
adc
mov
les
icebp
adc
test
cmc
xor
sub
ret
int
push
pop
fucomip
cmp
out
loopne
sub
mov
or
dec
mov
adc
mov
shl
cmp
int
mov
popf
or
arpl
dec
jge
orl
pop
ficomps
outsl
push
adc
push
inc
fs
fidivrl
out
repz
arpl
adc
mov
inc
cmp
mov
loop
outsl
outsl
push
loope
rcr
mov
sub
rclb
mov
lcall
pop
push
call
arpl
inc
scas
xorl
adc
gs
cmc
inc
dec
fcoml
nop
add
cmp
inc
movzwl
cmp
repz
mov
jo
loop
movsb
sti
pop
in
mov
cmp
mov
mov
xor
imul
adcb
ja
adc
adc
dec
fcomi
xor
jl
adc
aaa
mov
xchg
mov
mov
inc
mov
cmpsl
lret
mov
xor
lock
adc
ljmp
cli
loopne
pop
ret
cmp
push
mov
sbb
test
inc
fucomi
mov
addr16
rcr
sbb
fadd
lock
xchg
xchg
xchg
ljmp
pop
dec
je
cltd
arpl
xor
xchg
mov
gs
adcl
imul
mov
lahf
xchg
mov
jae
andl
adcl
dec
jnp
inc
es
enter
dec
inc
insb
fisttpll
mov
xor
hlt
sbb
dec
sbb
xchg
push
ret
test
push
xchg
push
xchg
std
mov
push
fisubs
cld
cli
dec
push
push
cwtl
ficoml
sub
mov
jecxz
pop
mov
mov
insb
adc
je
rcll
sbb
psubusb
and
inc
and
mov
pop
dec
popf
dec
mov
or
mov
sar
aam
scas
jbe
mov
call
aad
xchg
es
pop
lret
lcall
jl
js
pop
int3
sbb
ret
hlt
loopne
int3
repz
jns
push
imulb
cmc
rorl
das
inc
fwait
mov
xchg
int3
adc
mov
mov
mov
or
cld
mov
pop
into
pusha
lds
and
mov
pushf
push
out
dec
mov
inc
inc
add
jno
push
lods
push
sbb
mov
xchg
in
dec
test
js
sbb
insb
aas
movsb
pop
pop
jno
je
add
cmpsb
sbb
fwait
dec
popl
jl
lret
jmp
mov
push
pop
orb
or
rcrl
pop
push
stos
push
icebp
inc
add
mov
xor
pusha
pop
sbb
cmp
inc
or
sbb
cmp
jnp
outsb
xchg
lret
push
adc
xchg
popf
and
push
pop
mov
pusha
call
push
call
out
mov
das
pop
outsb
inc
popa
and
movsb
and
cmpl
imull
pop
in
cmc
call
leave
push
cltd
lods
cmpsl
push
cld
mov
mov
xchg
sub
inc
stc
fmulp
out
in
sub
imul
enter
hlt
pop
and
shlb
dec
xchg
xchg
test
pusha
imul
xrelease
pop
xor
xchg
xchg
push
mov
subl
fldt
xchg
bound
push
fidivl
mov
call
leave
dec
popa
ret
test
mov
push
adc
xor
scas
dec
jo
scas
ljmp
pop
xchg
fs
rcrb
int3
and
xchg
push
leave
adc
sub
or
mov
outsb
lods
push
mov
push
push
dec
daa
or
or
fstps
or
call
int3
push
jbe
popf
xchg
mov
stos
fnstsw
jae
inc
into
out
test
sbb
lods
in
lcall
mov
das
xchg
in
jo
movsb
sti
add
aad
aad
sbb
jo
inc
add
adc
mov
xor
into
mov
sqrtps
stc
push
pop
mov
ret
jecxz,pt
aaa
bound
fs
pushf
out
add
in
add
es
sub
mov
or
jmp
jp
shll
clc
push
cli
mov
add
add
std
maxps
cmp
decl
dec
std
pop
mov
mov
insl
iret
scas
xor
jae
pushf
sub
push
pop
cmpsl
push
inc
adc
cmp
in
xchg
in
mov
push
xor
jge
push
mov
rcll
mov
add
cmpsb
xor
aad
inc
sar
call
pop
push
bnd
push
mov
call
loopne
mov
jmp
push
out
or
sbb
push
sbb
xchg
repz
xor
mov
jne
movsl
cmpl
in
mov
jge
mov
call
mov
jecxz
mov
insl
jo
mov
out
iret
es
adc
scas
mov
cmp
pusha
stos
test
lods
addb
adcb
xchg
pop
mulb
push
dec
lea
push
daa
dec
and
js
add
push
mov
imul
or
je
mov
sbb
xrelease
in
sub
push
rcrb
sub
out
subl
add
sarb
pop
dec
pop
dec
mov
xor
mov
push
fimull
rcrb
out
outsb
sbb
mov
sub
add
mov
sbb
clc
inc
xchg
adc
sbbl
pop
pop
lods
ss
das
mov
adc
les
lcall
je
fcmovnb
aas
into
hlt
inc
adc
mov
popf
sbb
mov
jb
in
or
push
imul
xor
sbb
and
mov
xchg
out
xlat
lds
add
pop
test
loope
lahf
std
cmp
movsl
aaa
pop
push
mov
cld
pushf
dec
mov
mov
lock
mov
xchg
and
xchg
pop
icebp
pop
mov
add
scas
mov
inc
inc
mov
imul
mov
jl
push
inc
mov
dec
add
lret
bound
add
in
jo
mov
outsb
xor
loopne
rorb
and
dec
stos
cmpsl
mov
and
jnp
or
in
push
jbe
push
nop
test
push
fisubs
repnz
lret
mov
sahf
insb
pop
imul
sub
jne
push
in
rorw
dec
push
inc
aas
mov
pop
out
hlt
cld
test
mov
and
xor
mov
inc
cltd
loope
rcrl
pusha
xor
sbb
arpl
jecxz
push
sbb
or
arpl
repz
jge
mov
push
push
ficomps
jmp
jo
push
xor
ds
xorps
mov
inc
push
stos
repz
dec
mov
nop
adcl
xorb
sub
add
sub
jge
out
pop
outsb
fildll
adc
aad
rcrb
xchg
bound
push
mov
fcomip
std
lcall
pop
pop
push
adc
mov
cld
cmp
movsb
pop
subb
pushf
jns
cltd
add
aaa
test
and
dec
mov
jmp
adc
and
sti
mov
xchg
ljmp
mov
dec
pop
addr16
sbbb
xchg
clc
cmp
cmp
int
cld
jecxz
dec
cli
push
roll
cmpsb
fadd
outsl
out
cmp
sbb
or
int
add
mov
enter
ret
pop
inc
mov
jns
flds
jbe
addl
jns,pn
call
mov
scas
ljmp
jmp
pop
pop
std
sarb
add
roll
inc
mov
xor
test
bound
pop
xchg
out
adc
sahf
adc
xchg
sbbb
lcall
in
pop
dec
sbb
adc
dec
fsub
xor
dec
jns
sbb
vpshaw
andl
aad
inc
dec
cmc
fcoms
sarb
fisttps
adc
fdiv
mov
push
sub
mov
fsubp
repnz
and
push
cmp
cmpsb
inc
push
jo
sbb
cli
aad
cwtl
add
pop
imul
jb
mov
jecxz
lods
adc
sarb
xchg
xor
call
mov
imul
outsb
pusha
addl
or
fidivs
add
mov
fs
bound
fs
sbb
pop
addl
mov
pushf
or
lcall
xlat
or
xchg
inc
les
sub
xor
repnz
popa
iret
pop
sbb
lret
mov
dec
or
imull
dec
fisubs
lea
lods
push
sbb
loop
adc
sbb
fucomp
ret
jle
jb
fnstcw
push
jmp
ja
or
push
test
das
push
mov
mov
mov
shll
mov
subl
and
or
mov
test
xchg
loope
cli
and
bound
aad
ficoms
xchg
or
stos
outsb
idivb
cmp
xor
mov
fiadds
sbb
stc
or
lock
test
rep
sub
idivb
xchg
mov
cltd
sbb
fwait
int
or
inc
jnp
mov
test
arpl
push
notb
jge
xchg
pop
add
lds
sub
or
or
pushf
xchg
mov
mov
xlat
ret
movsl
push
xorl
pop
js
addr16
fnstsw
sbbl
je
or
ret
dec
mov
xor
aas
mov
push
in
sub
enter
lret
push
inc
bound
and
xchg
and
sbb
and
xor
mov
lret
mov
add
push
cmp
and
testl
add
out
aaa
int3
out
mov
sbb
mov
lahf
pop
cmp
ds
std
push
inc
rcrb
cmc
cld
sub
or
mov
pop
pop
mov
add
jmp
xchg
popf
aam
ja
adc
fs
fstl
inc
aad
imul
pop
cmp
jbe
mov
sbb
mov
dec
arpl
adc
jge
lcall
test
pop
mov
pushf
mov
pop
xchg
xchg
jmp
or
sbb
push
test
imul
push
jle
sbb
fdivl
lods
mov
jecxz
jl
cmp
or
xor
or
lods
jecxz
rclb
test
and
mov
push
or
jg
jecxz
cmpsl
ss
dec
dec
sarl
addl
push
andl
xchg
roll
aam
repz
pushl
or
push
mov
pop
add
adc
xchg
or
nop
pop
ret
nop
add
icebp
mov
xor
jp
lods
xchg
sub
push
fsubl
jp
aam
loope
mov
faddp
js
cmp
loop
out
lods
bound
out
inc
xor
mov
xrelease
mov
and
sbb
xor
inc
add
scas
jb
fcmovnu
ss
stc
sar
dec
or
adc
ja
xor
leave
adc
testl
or
jb
inc
in
and
add
cmp
hlt
pop
mov
jecxz
cli
or
sarb
outsb
sub
lods
fldcw
cmp
push
inc
aas
aaa
das
daa
pop
pop
sysret
push
out
out
xlat
iret
mov
xchg
popl
pop
push
dec
inc
aas
aaa
das
daa
pop
pop
sysret
push
out
out
xlat
iret
mov
xchg
popl
dec
das
dec
inc
ds
sub
sti
das
out
out
xlat
lret
mov
mov
xchg
inc
xlat
push
addr16
aas
aaa
aas
daa
pop
xchg
popl
decl
adc
xlat
iret
mov
aas
daa
pop
pusha
push
xor
inc
adc
bound
imul
out
add
mov
cmpsb
repnz
xchg
ja
xor
inc
adc
bound
jb
inc
pop
sub
mov
xchg
mov
cmpsl
repnz
ret
ja
xor
inc
adc
bound
jb
inc
pop
push
mull
mov
movsl
mov
call
jnp
push
adc
xor
jbe
in
fmuls
ljmp
or
and
mov
bound
negl
sbb
xchg
dec
testb
cmp
and
pop
push
lods
repnz
mov
pop
div
mov
sbb
addr16
ret
addr16
ja
stos
inc
aaa
rorl
imull
pop
lods
out
and
push
das
jb
loop
or
enter
push
cwtl
bound
push
lahf
fucomip
das
sti
pop
sub
jb
pop
xchg
incb
mov
repnz
js
cmpsl
addr16
xlat
arpl
mov
or
dec
xchg
loop
mov
sub
xor
inc
adc
bound
jb
inc
pop
push
mull
xchg
mov
cmpsl
repnz
ret
add
and
add
adc
sbb
bound
lahf
fistl
mov
mov
repz
sub
push
and
adc
inc
ds
sub
movsl
jmp
mov
repz
xchg
cwtl
mov
xor
addr16
dec
daa
jb
inc
pop
push
mull
xchg
mov
cmpsl
repnz
ret
ja
xor
inc
adc
bound
jb
inc
pop
push
mull
xchg
mov
cmpsl
repnz
ret
ja
bound
out
adc
add
js
outsb
dec
les
sub
xchg
dec
mulb
vphaddbq
dec
negb
mov
cmp
cmp
cmp
cmpsb
fsub
pop
mov
dec
cltd
insl
cmp
sbb
pop
dec
jne
popa
inc
lock
or
mov
sbb
mov
mov
pop
push
shr
inc
and
and
das
lcall
ss
lret
cmp
and
xchg
lods
mov
xor
arpl
jl
pop
inc
popa
jmp
cmc
sbb
jbe
test
mov
jnp
mov
fbstp
dec
jle
mov
cmpsl
cs
aam
mov
adcb
jo
stc
pop
xchg
mov
inc
cltd
and
je
and
andb
popf
jo
ret
mov
jb
lds
add
pop
fstps
sub
test
and
ficomps
xor
push
pop
sbb
int
pusha
fs
add
bound
and
adc
push
mov
or
loop
out
pop
cmp
stos
icebp
ror
clc
sahf
push
xchg
mov
stos
jmp
cmp
nop
inc
ss
sub
sbb
jge
scas
push
in
xchg
cmpsl
test
cmp
addb
xor
test
test
gs
pop
in
pop
negl
xchg
fsubrs
or
pop
xchg
movsb
mov
mov
jge
fyl2x
out
mov
int3
lcall
mov
fwait
sbb
inc
inc
mov
mov
in
popf
jne
lret
icebp
mov
out
mov
lcall
push
daa
pop
je
in
clc
inc
fcoms
jb
icebp
test
mov
jbe
xchg
xchg
xchg
popf
sti
sahf
stos
inc
or
pop
add
scas
in
fcomi
ljmp
loop
xchg
add
ds
inc
inc
imul
push
dec
and
dec
std
int3
mov
clc
test
cwtl
in
add
mov
icebp
iret
repz
scas
cwtl
js
xchg
aas
stc
xchg
rcll
lock
test
je
pop
mov
fistpl
loop
xchg
loope
mov
mov
sub
sbb
fsubr
dec
add
sub
cmc
or
xor
hlt
out
inc
mov
mov
and
in
pop
dec
mov
dec
int
adc
mov
imul
fucom
pop
repz
int
incl
inc
or
iret
gs
cltd
outsl
jb
ss
test
and
btc
jle
loope
xchg
add
cmp
popa
mov
xor
mov
adc
xchg
fwait
cli
dec
cmc
movzbl
mov
and
push
inc
lret
sti
cmp
sbb
scas
or
dec
lds
sbb
fcomip
test
jae
mov
mov
cmpsb
daa
shll
stc
add
jbe
cli
dec
sbb
dec
xchg
mov
xchg
imul
rcr
cmc
push
lods
outsl
mov
stos
aaa
sub
pop
stos
fcmovnbe
sbb
lds
or
negb
lahf
lock
pop
jnp
pushf
mov
pop
pop
or
xlat
insl
aaa
xor
scas
push
test
mov
sub
mov
aas
mov
daa
cmp
imul
sarb
lods
add
mov
shl
out
loope
std
sub
jne
xchg
adc
cmp
jns
call
jmp
dec
mov
aaa
loopne
cwtl
xchg
lahf
out
sbb
dec
aaa
mov
push
sbb
aas
fnstcw
cmp
xchg
mov
mov
sub
pushf
xchg
jno
mov
jl
cmc
push
xchg
pop
push
rorl
in
and
cmp
sahf
jp
stos
lds
jmp
pop
sub
xor
inc
popa
add
je
jno
mov
popl
and
clc
insl
xchg
out
loopne
push
sbb
sbb
push
push
xor
add
jb
cld
ds
mov
push
repnz
mov
xor
aas
nop
push
pop
xchg
adc
mov
pop
adc
sbb
mov
sbb
test
cmp
fildl
mov
fwait
cmp
ljmp
pop
je
push
adc
jge
add
mov
dec
add
fidivl
test
cltd
sbb
dec
xchg
pop
jle
push
pop
idiv
push
pop
out
call
loope
or
sub
fadd
lret
sbb
dec
movsl
fidivrl
sahf
mov
mov
sub
ds
cmp
outsl
jmp
xor
mov
pop
mov
lods
inc
inc
ds
xchg
xchg
negb
inc
mov
mov
and
insl
sbb
loope
imul
pop
xchg
orb
dec
mov
dec
lahf
jl
xor
loop
into
lock
lock
ret
sbb
sbb
mov
xorb
lcall
fstpl
mov
mov
sar
repnz
jae
fists
and
adc
inc
addl
xchg
jl
scas
add
in
pop
jl
iret
out
xor
fs
orb
lock
mov
ljmp
andl
jne
mov
pop
jnp
test
jmp
popa
xlat
cltd
fcompl
jnp
mov
mov
lods
dec
les
popa
loop
cmp
add
test
xor
and
mov
adc
pop
jge
cmp
fnstcw
into
testb
push
sub
outsl
jl
sbb
jbe
lods
lds
jecxz
js
mov
mov
adc
pop
subb
adc
das
std
jmp
inc
xchg
inc
and
lcall
or
jae
add
mov
in
push
das
and
mov
insb
push
mov
mov
icebp
xchg
push
test
cmp
pop
repz
xchg
lret
loopne
pop
inc
jb
push
in
shll
inc
sub
mov
pop
lods
add
out
fsubrs
push
jns
cli
imul
in
bound
fstl
popa
lds
loope
iret
dec
push
hlt
pop
xlat
add
loopne
pop
ret
pop
xchg
mov
fsubp
xor
or
mov
pop
iret
cmp
push
repnz
fs
rolb
addr16
add
add
add
lods
stos
les
or
mov
rorl
or
and
mov
dec
mov
call
xchg
add
dec
jmp
inc
cmp
lahf
aad
or
jns
or
add
dec
stos
dec
nop
mov
outsb
jne
mov
in
push
faddp
sbb
pop
or
ljmp
mov
mov
int3
push
js
dec
sbb
xchg
mov
popf
jl
adc
hlt
xchg
ljmp
xchg
fldcw
ror
mov
and
adcb
adc
mov
mov
adc
push
roll
dec
jne
imul
xchg
fldcw
and
pop
out
outsb
mov
or
mov
mov
cld
mov
aam
mov
xchg
mov
idivl
push
mov
add
inc
in
movsl
fdivrl
inc
in
push
into
pop
mov
pop
push
inc
arpl
push
sbb
stos
ljmp
add
lret
in
ds
rcrb
xor
sbb
sbb
mov
lods
sbb
pop
cmpsl
movsl
roll
stc
jne
mov
xor
xlat
popa
int
push
cs
cli
mov
bound
jne
push
shlb
and
insb
cmpsb
pop
lret
push
inc
cmp
inc
ja
inc
xor
test
das
xchg
dec
mov
mov
lret
or
adc
xor
mov
xchg
push
pop
scas
inc
call
outsl
jne
push
push
sbb
nop
add
push
ljmp
sahf
add
sub
stc
dec
jmp
int
bound
insl
adc
lock
repnz
stc
xchg
sbb
arpl
stos
sub
mov
pop
jo
sub
adc
push
jae
lret
les
out
xor
or
hlt
shrl
jge
scas
jo
sub
pushf
add
inc
xorb
jp
cmpsb
add
push
or
inc
test
jo
mov
and
push
sub
adc
and
les
cltd
fsts
bnd
test
push
push
in
inc
scas
mov
fsubrs
inc
xchg
dec
out
xor
jge
and
xchg
pop
lcall
jo
pusha
sub
pop
inc
loop
pusha
add
cmpsb
stos
mov
call
ds
imulb
cmp
das
mov
pop
cmp
testb
jnp
jnp
sbb
fisttpll
lcall
cmpl
dec
clc
jns
cmc
jae
pop
mov
ljmp
stc
enter
movsl
mov
mov
mov
add
adc
jl
mov
decb
sub
fwait
mov
adc
push
imul
stos
testl
mov
and
fcoms
imul
adc
adc
cmpsb
sarb
idivl
add
icebp
loope
sbb
cmpsl
int
push
xor
testb
sarl
pop
add
movsb
movsb
ds
and
mov
push
sbb
push
loopne
mov
or
inc
fsubl
pop
xor
movsb
add
arpl
mov
jecxz
sahf
push
pop
mov
sub
roll
test
hlt
adc
imul
scas
ja
ja
xor
add
xor
shrl
pusha
je
push
push
jb
sub
or
mov
add
scas
adc
jge
mov
push
push
xchg
inc
rcrb
and
incl
mov
sbb
roll
test
mov
aaa
ja
push
xchg
call
push
mov
stc
sub
loopne
add
inc
xorps
pusha
add
mov
cmp
insb
mov
adc
repnz
cmc
scas
dec
scas
cld
mov
out
pop
fstpt
jle
ret
pop
cltd
push
out
cmc
aaa
xchg
mov
cmp
scas
pop
push
cmp
sahf
aam
insb
repz
in
push
js
push
push
cmpsb
cmp
lods
and
clc
add
fs
cs
out
pop
cmpsl
pop
movsl
cmp
push
clc
js
mov
out
mov
inc
scas
sbb
push
add
mov
movb
jns
adc
fsubr
jo
xchg
dec
sub
xor
int
pop
push
and
dec
outsl
sub
movsb
mov
jb
pusha
push
mov
jle
push
add
jmp
and
or
rcr
sbb
mul
sbb
dec
out
out
and
popf
stos
xchg
pop
jle
xlat
gs
pop
dec
std
in
xchg
int
add
fsubr
in
les
rclb
and
into
jne
stos
fiaddl
pop
shlb
cmpsl
in
mov
xor
inc
inc
adc
pop
int
mov
xchg
or
stos
sub
jmp
cltd
push
mov
dec
xchg
cwtl
xchg
mov
sbb
sub
cmpsb
jge
fcoml
mov
ss
xchg
push
lock
pushf
fcomps
mov
iret
subb
jno
sbb
xor
mov
enter
pop
inc
mov
testl
das
dec
pop
mov
jle
jg
pop
or
jno
imul
stos
pushf
leave
xor
mov
iret
sub
addl
xor
cmpsl
dec
hlt
xchg
cmp
mov
js
cld
mov
mov
paddsb
fsubl
cmp
flds
ficoms
mov
in
js
mov
ret
push
rorb
lea
frstor
jg
in
sub
cld
repz
sbb
and
mov
sti
jp
loopne
idivb
mov
and
inc
xor
jmp
push
adc
sub
push
dec
lahf
xor
ljmp
icebp
xor
cmc
pop
adc
mov
ret
lahf
sbb
popf
fxch
ja
cli
push
out
adc
shll
inc
mov
rcrl
mov
add
inc
push
or
loopne
and
sub
xor
sub
mov
int3
popa
ljmp
xchg
stc
cmp
inc
ficoms
push
jns
xchg
pop
inc
adc
lock
jmp
jns
sub
lcall
mov
inc
cltd
sbb
outsl
and
jae
sub
test
push
lret
inc
in
push
pushf
mov
test
or
arpl
sub
rclb
ret
popa
jne
addb
mov
jle
push
stos
push
mov
sub
mov
sub
mov
jbe
xor
pushf
and
hlt
lods
lret
into
cltd
outsl
ja
jecxz
test
repz
mov
mov
adc
testb
out
inc
out
cmpsb
pop
xchg
icebp
jle
cld
lds
bound
inc
fidivrl
adc
jne
xchg
std
xor
or
and
mov
shll
test
gs
fistpl
outsb
mov
pop
gs
aaa
lods
insl
cmpl
mov
cmp
hlt
xchg
lods
cmp
fldcw
sbb
sbbl
sahf
fs
daa
fwait
data16
fisubrl
lret
inc
mov
lods
imul
ret
rep
iret
jge
bound
bnd
and
aad
adc
jmp
xchg
mov
push
dec
and
lcall
fsubl
pushf
dec
push
xchg
cmp
dec
jge
or
popa
dec
rcrl
mov
jmp
mov
sarb
jb
aam
mov
xchg
xchg
fisubl
data16
in
xor
mov
add
sub
fwait
daa
int
scas
test
lcall
jb
aas
into
lods
mov
push
push
icebp
mov
jg
or
and
in
xchg
pop
inc
dec
out
xchg
ss
pop
push
jmp
arpl
movsl
jns
or
stc
and
mov
cwtl
and
cmp
mov
fs
popf
das
ljmp
or
xchg
fsubrs
mull
push
jle
inc
ljmp
push
cmpsl
push
sbb
das
push
or
push
push
xchg
adc
jecxz
enter
jecxz
sub
mov
sbb
mov
mov
adc
test
ljmp
imul
mov
shlb
in
out
xor
add
movsl
mov
movsl
jecxz
mov
xchg
pop
shll
or
insb
jo
mov
mov
dec
push
and
and
lods
adc
sbb
ljmp
push
rcl
mov
in
shlb
icebp
pop
enter
pusha
ljmp
xlat
jmp
and
ss
test
inc
repnz
in
mov
push
fwait
sub
add
cmp
or
sbb
std
mov
sti
outsl
lcall
lods
add
and
fsubrl
inc
mov
adc
push
lods
aad
dec
dec
add
scas
fnstcw
pop
or
sbb
xorb
bound
push
movsl
inc
mov
lahf
mov
aam
xorl
int3
loope
mov
push
jno
popaw
mov
and
call
mov
jp
out
add
jp
orl
xor
out
mov
mov
mov
push
add
mov
repnz
popa
or
in
inc
jmp
xor
repnz
and
jmp
xor
mov
lret
push
sarb
fcompl
jle
sbb
imul
adc
cmpsl
push
push
xor
out
sub
adc
fidivrs
cli
mov
xchg
or
cmp
and
pop
xchg
mov
data16
jns
sub
push
loope
movsb
lahf
xor
fstps
loope
pop
cmp
mov
repnz
loope
cmp
xchg
pop
pushf
or
popf
push
push
in
mov
pop
mov
mov
hlt
adc
ror
test
shlb
mov
push
dec
mov
leave
insl
arpl
pop
xchg
lods
fisubrs
subb
jns
adc
out
ret
cmp
mov
sti
addr16
out
cmpsl
cli
iret
xor
mov
shrl
cmp
fildll
fsts
or
fs
out
sbb
mov
or
mov
cmp
mov
add
and
negl
sbb
and
cmp
stos
insb
jle
jne
adc
iret
inc
ds
inc
xlat
lea
xor
rorb
pop
aaa
xchg
dec
and
imul
dec
insl
add
adc
dec
pop
pop
mov
dec
fsubr
add
pmullw
mov
dec
idivb
outsb
cwtl
js
jb
lea
in
mov
les
imul
and
dec
lret
ds
sub
cmpsl
and
push
xchg
cmp
lahf
repz
sbb
pop
push
mov
rorb
xchg
sub
lret
cmpsl
jb
int3
sbb
outsb
xor
sbb
cmp
cmpsl
mov
cmc
lcall
loop
test
cmc
fstl
push
inc
cmp
lahf
adc
cmp
cmp
sbb
out
adc
lods
xchg
js
dec
adc
ret
aad
xchg
es
xor
jge
jne
dec
add
insb
pop
ja
pop
pop
icebp
imul
aaa
movsb
icebp
sbb
lods
hlt
push
lods
clc
lahf
cmp
out
adc
inc
cmp
das
add
lahf
aad
cmp
popa
add
rorb
jle
mov
mov
jo
jecxz
pop
dec
sbb
adc
and
iret
jl
dec
lahf
jmp
lahf
xor
repnz
xlat
pop
scas
lret
lret
sbb
cmp
inc
push
outsb
jns
add
rolb
fidivrs
in
mov
mov
dec
mov
sub
out
rorb
pop
test
xchg
popf
insl
adcb
inc
jmp
cmpsl
xchg
int
shll
push
push
xchg
cmp
test
mov
xchg
test
cmp
mov
lea
pop
or
loopne
dec
ds
inc
aaa
push
pop
mov
inc
adc
stc
shlb
imul
xchg
mov
icebp
stos
sub
cmp
jmp
adc
add
sbb
int3
push
cmpsb
or
mov
aad
jmp
pop
repz
cmp
push
push
cld
mov
jmp
xlat
lret
popf
fisubrs
or
ja
sbb
mov
repz
or
adc
jecxz
test
pop
int3
mov
or
es
lds
insl
lods
or
leave
mov
xlat
mov
mov
pop
push
jmp
mov
std
ja
dec
sub
sub
cwtl
sbb
mov
adc
jne
or
imul
cmp
pop
fs
sub
dec
push
scas
sbb
fidivs
mov
fwait
add
ss
cld
pop
pop
testb
rorb
ret
push
jb
jne
push
pop
cmp
cli
addr16
shrb
sbb
dec
dec
add
push
mov
add
pushf
out
xlat
gs
cwtl
push
adc
dec
nop
shl
scas
das
mov
shlb
incb
outsl
pop
cmp
xchg
rolb
cmp
stc
in
dec
scas
push
mov
or
inc
sbb
mov
adc
jns
mov
push
lahf
ret
mov
inc
mov
popf
add
pop
cli
test
mov
shlb
fstpt
popa
popa
dec
shlb
mov
jp
stos
xchg
test
mov
imul
addr16
cmp
dec
repz
push
data16
jo
imul
sbb
das
jmp
sbb
dec
sub
jge
adc
mov
int3
and
adc
sbb
shrl
loop
sar
cwtl
idivb
jecxz
aas
js
inc
inc
xchg
and
jle
mov
es
dec
int
mov
mov
xchg
sbb
xchg
cmp
or
pop
shlb
jmp
xchg
dec
pusha
es
int
repz
imull
mov
inc
test
adc
movsb
in
cmp
adc
xor
icebp
jecxz
or
stos
lods
bound
rolb
cmpsb
imul
pop
lods
insl
rolb
fwait
pop
test
fcoml
test
sbbl
mov
scas
mov
in
ljmp
adc
shlb
adc
mov
sarl
sbb
sbb
sbb
inc
adc
stos
les
jo
cs
enter
fnstsw
mov
or
mov
in
aas
inc
xchg
mov
dec
les
jnp
jecxz
sbb
lods
lret
movsl
rcrl
sub
test
mov
mov
lahf
or
popf
push
sbb
mov
pop
xlat
call
xor
fidivl
clc
repnz
shrb
adc
out
and
cltd
pop
adc
push
xchg
pop
lea
add
test
adc
pop
xlat
and
dec
xchg
ljmp
push
fwait
xchg
mov
shrb
ljmp
out
js
jle
mov
adc
mov
dec
pop
fnstcw
inc
adc
bound
jb
inc
pop
push
mull
xchg
mov
cmpsl
repnz
ret
ja
xor
inc
adc
bound
jb
inc
pop
push
mull
xchg
mov
cmpsl
repnz
ret
ja
xor
inc
adc
bound
jb
inc
pop
push
mull
xchg
mov
cmpsl
repnz
ret
jbe
data16
inc
adc
bound
jb
inc
pop
push
mull
in
push
or
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
add
adc
and
xor
jb,pt
or
jb
cmp
cwtl
mov
ret
into
sar
repnz
repnz
add
adc
and
xor
dec
push
jle
outsb
pop
sahf
orb
fisubs
out
repnz
add
adc
and
xor
dec
push
jle
outsb
jb
orb
mov
lods
mov
dec
push
bound
pop
push
push
clc
dec
mov
pop
add
stc
std
stc
push
dec
fisubs
xchg
add
mov
jne
cwtl
clc
push
pop
sub
lcall
mov
div
cmpsb
cmc
add
pop
pushf
add
in
inc
movsb
les
cmp
cs
sysret
dec
aaa
scas
fs
inc
pop
push
subb
sahf
jle
insl
xor
and
cmpsb
xor
xchg
in
repnz
jp
push
fstl
aas
in
inc
mov
mov
xchg
xchg
int3
ret
sti
adc
pop
ss
pushf
into
cmp
call
in
inc
xlat
jmp
loop
iret
cmp
xchg
and
xor
dec
push
jle
outsb
jb
orb
faddp
into
sar
loop
mov
add
pop
arpl
xor
das
push
fcomip
mov
mov
nop
mov
jle
push
push
sbb
and
jle
outsb
pop
sti
out
loopne
mov
xchg
cmpsb
ja
push
push
inc
das
dec
pop
jo
push
jle
outsb
jb
orb
faddp
into
sar
loop
repnz
add
adc
and
xor
dec
push
jle
outsb
jb
orb
faddp
into
sar
loop
repnz
add
cmc
test
jp
js
adc
dec
iret
call
dec
mov
popa
sbb
repz
daa
dec
jl
fmuls
push
icebp
stc
out
fildl
mov
cmovns
inc
lods
testb
cld
lcall
rol
mov
and
sub
ja
mov
dec
cmp
gs
sbb
sti
sub
and
jbe
popa
sbb
jns
in
inc
or
mov
loop
hlt
xor
shrl
sub
adc
out
pop
cmp
mov
jns
les
push
jnp
mov
cli
jge
mov
popa
dec
push
pop
inc
es
call
stc
push
cmp
mov
push
sub
pop
dec
xor
shl
push
mov
nop
in
insl
stc
jns
filds
or
adc
cltd
jmp
push
add
sub
sbb
in
mov
dec
sahf
mov
outsl
addb
xor
insb
out
pop
das
push
xchg
jnp
fimull
or
xchg
add
jae
mov
sahf
mov
sub
mov
sub
sub
call
xor
aam
jmp
mov
sub
cmpsb
inc
gs
mov
and
arpl
test
xchg
in
jae
mov
cmpb
cmp
sub
dec
cmpsb
out
stos
push
sub
mov
imul
in
add
mov
mov
add
add
cmpl
adc
mov
mov
xor
push
pop
shrl
lcall
mov
sub
stos
inc
push
adc
xor
push
cmp
outsb
push
lods
jle
push
dec
lret
inc
adc
pop
jle
fnstenv
mov
jg
mov
pop
xchg
std
stc
lahf
in
repnz
dec
rcll
adc
test
mov
loope
xlat
pop
cs
inc
push
pushf
psubd
mov
pop
adc
mov
mov
jae
inc
movsb
incb
test
or
popa
sub
insl
aas
iret
rclb
movsl
mov
pop
push
push
sbb
lcall
adc
pop
ljmp
xor
shlb
mov
sub
or
in
out
icebp
inc
sbb
dec
sbb
in
mov
sub
sbb
scas
movsb
out
jb
sbb
fsubr
xor
and
or
or
outsb
out
ja
pop
and
push
xchg
sbb
popw
inc
dec
jp
js
cmp
sbb
sbb
js
dec
jns
add
lods
scas
in
lret
test
jb
testl
idivb
adc
or
jno
push
imul
dec
stc
call
ficomps
cmp
inc
jae
iret
out
mov
cmc
cli
cmp
pop
stc
and
mov
std
cmpsb
xchg
or
sub
mov
out
pop
inc
popf
sbb
inc
mov
mov
rclb
add
ljmp
loopne
and
sub
popfw
sbb
jmp
mov
aas
sub
jnp
jnp
sbb
inc
dec
dec
push
movsl
scas
xlat
sub
cmp
or
xchg
popa
popf
leave
jns
mov
dec
out
mov
push
sbb
jp
fsubl
pop
in
xchg
or
imul
pop
add
mov
mov
and
divl
loope
insl
aaa
cmp
mov
dec
mov
sub
sub
push
mov
or
shlb
add
mov
or
es
xor
xchg
dec
cmp
es
mov
mov
aad
and
outsb
lcall
lcall
sti
ljmp
loopne
shlb
cmp
mov
sti
dec
push
push
xchg
aas
jno
pushf
push
stos
cmp
or
dec
lcall
sub
in
in
jbe
test
push
mov
out
imul
push
mov
fnstenv
jge
js
shrb
int3
pop
roll
and
pop
bound
xor
push
int3
mov
sub
lret
aas
sub
shll
and
jp
push
cmp
and
and
js
call
rcrb
cmp
xor
inc
hlt
mov
cmp
mov
pop
jg
dec
ja
data16
inc
xchg
xor
lds
mov
dec
shll
mov
faddl
xor
xor
pop
or
pop
shl
mov
or
mov
push
dec
pop
fcompl
fs
test
sub
cli
pop
or
lret
ret
imul
in
iret
arpl
lds
xchg
pusha
pop
loop
sbb
imul
jmp
mov
jmp
lock
icebp
lock
xor
ds
dec
fbstp
inc
push
add
add
push
xor
mov
dec
add
mov
push
out
stc
xlat
mov
les
mov
jno
lcall
hlt
ret
inc
xor
xor
rdpmc
mov
mov
jo
push
lods
xchg
cmp
pop
rorb
jg
pop
cli
lds
sti
and
cmp
jmp
jg
mov
pop
andl
popa
add
insl
jmp
pop
and
rcl
cmc
or
dec
sub
fwait
neg
mov
push
or
lret
loop
popa
xchg
mov
inc
sub
mov
and
mov
add
push
lcall
xchg
xchg
cltd
pop
jbe
lock
bnd
adc
and
rcrl
dec
mov
ja
mov
pop
push
dec
jmp
and
minps
stc
mov
test
icebp
pop
ljmp
push
or
stos
inc
decb
ds
pop
jnp
call
loop
loop
inc
clc
loopne
testb
mov
or
clc
loope
lret
and
mov
nop
sbb
jns
cwtl
sub
hlt
dec
lahf
jl
add
jmp
iret
pop
mov
xor
sar
jecxz
bnd
cmp
pop
add
xor
in
push
test
outsb
xor
arpl
movsl
in
dec
out
arpl
cwtl
in
inc
aaa
xchg
std
fmulp
xor
dec
xchg
out
add
xor
pop
push
inc
xchg
and
popa
jecxz
es
mov
inc
lods
adc
or
xor
xor
xchg
call
aas
shr
mov
or
sbb
bound
das
pop
je
aas
or
ja
pop
jo
enter
xor
mov
std
cmp
cmpsb
ds
nop
repz
sbb
xchg
push
shll
lock
test
cs
loop
xor
into
xchg
sbb
aad
push
insl
ret
outsl
mov
mov
pop
mov
ja
adc
pop
or
inc
cmp
mov
loope
paddsb
fdivrs
jo
inc
jmp
jecxz
popa
out
hlt
cmp
sti
arpl
jmp
jmp
xchg
cmp
cltd
add
cmpsb
adc
data16
mov
ja
mov
cmp
sub
adc
mov
pop
xchg
in
sbb
xor
ret
mov
mov
inc
int3
clc
push
mov
pop
cmpb
divl
das
push
lds
push
stos
rcrl
scas
lahf
inc
icebp
xor
pop
or
loop
leave
out
xor
pop
xor
ret
and
sti
dec
aad
mov
lods
mov
lret
xchg
in
push
jnp
pop
push
cmpsb
and
inc
rcl
fidivs
adc
sub
scas
shrl
push
push
test
inc
ret
xor
iret
fsubl
fistpl
fisttpl
sbb
push
mov
mov
out
bound
jbe
lods
jbe
sbb
and
shlb
inc
lahf
or
cmp
mov
pop
cmp
in
xchg
rcr
lcall
or
sub
mov
xor
or
jno
jno
insb
ds
dec
mov
add
push
ss
add
sbb
jns
insb
adc
sbb
dec
xor
jbe
les
xchg
divb
mov
arpl
adc
cmpsl
nop
or
arpl
imul
dec
test
repz
outsl
cmp
xchg
in
mov
pop
enter
lods
and
inc
and
and
mov
fs
jle
test
mov
xchg
subl
xor
mov
inc
bound
out
jne
iret
dec
and
ret
pop
xchg
mov
xchg
sar
mov
fwait
addl
sbb
xor
push
ret
push
mov
inc
sub
and
in
cmp
lcall
int
mov
dec
into
cmp
out
mov
stc
subb
push
int3
cmp
pop
push
add
mov
cs
outsl
leave
lret
lret
lods
sti
or
and
testb
dec
shrl
inc
jns
sub
add
jns
loop
cltd
scas
mov
movsl
mov
pop
or
inc
sub
into
jnp
jecxz
jle
clc
fstl
jl
cmpsb
repnz
ret
lds
fcmovne
adc
or
mov
sbb
sbb
sahf
add
idivl
xorl
out
jmp
adc
push
hlt
mov
pop
ret
out
mov
lahf
iret
sub
and
and
push
insb
fbld
add
stos
dec
out
dec
iret
aaa
repnz
push
jne
adc
jl
mov
cmp
mov
mov
inc
repnz
test
jecxz
sub
pop
lock
jecxz
iret
cmc
adc
fwait
cld
add
sub
xor
cmp
sbbl
pop
and
push
outsb
stc
leave
dec
mov
dec
cmp
push
mov
or
dec
xchg
nop
movsl
mov
mov
enter
sahf
nop
xchg
jbe
outsl
in
mov
mov
pop
clc
shlb
and
sbb
mov
movsl
test
mov
jge
push
dec
mov
cmp
sub
iret
mov
movsl
jae
cltd
push
data16
xchg
arpl
mov
mov
xchg
outsb
repnz
inc
or
mov
add
scas
sbb
stos
xchg
xchg
frstor
rorl
es
pushf
loopne
push
das
out
ja
push
mov
ret
sbb
aaa
push
ja
imulb
mov
dec
out
jno
ja
lods
sbb
xor
or
ficoms
cmc
jl
ss
push
and
jl
sbb
pop
pop
adc
lret
or
mov
add
or
pusha
xor
ds
cwtl
jp
or
int
push
push
mov
sub
sbb
mov
sub
sub
imul
lcall
jp
sahf
xor
mov
out
aad
rcrb
pop
mov
add
dec
jp
cmc
push
xchg
push
lods
jns
xchg
out
jno
in
xor
adc
subb
jl
cmp
out
add
mov
dec
sub
xorb
in
test
jp
adcb
push
and
sbb
dec
gs
hlt
sub
in
daa
jp
xorl
push
mov
or
lods
out
fcomps
sti
ret
push
pusha
test
ret
insb
sub
jne
std
mov
insl
sbb
lods
or
inc
push
punpckhdq
icebp
xchg
adc
or
insl
mov
adc
add
pop
jo
mov
leave
mov
inc
cmp
daa
mov
test
sub
int3
insb
lods
add
aaa
inc
test
mov
pop
xor
imul
call
push
add
dec
pop
mov
jo
push
jle
and
mov
notb
and
sbb
cmc
int
xor
stos
xor
lret
push
cmp
lahf
ret
mov
aad
std
and
insl
cmp
arpl
aad
iret
pop
mov
xchg
and
mov
iret
add
stos
loope
cmpsb
adc
dec
push
dec
ret
test
add
loop
xchg
pop
or
jnp
movsl
pop
adc
in
int
mov
js
shll
jno
cwtl
add
aam
stos
xor
pop
call
es
stos
int
cmc
pop
dec
sahf
hlt
xchg
add
ljmp
push
jne
ljmp
and
and
dec
sbb
sub
icebp
push
daa
cmp
xchg
out
pop
cmp
jb
push
and
imul
xchg
jns
insl
mov
icebp
arpl
mov
fldl
je
push
fcoml
cmp
imul
into
adc
fidivrl
mov
pushf
cmp
lea
jne
inc
push
dec
aam
inc
fneni(8087
fcmovnbe
lahf
clc
loopne
ficoms
out
mov
addl
sbb
fcom
cmp
xor
mov
sbb
jge
ret
push
push
or
imul
mov
mov
movl
push
cwtl
insb
mov
lods
add
lret
insl
xor
xchg
xchg
stos
in
pop
fistpl
jbe
add
fimull
enter
pop
jmp
lahf
call
in
xor
xchg
xor
sbb
dec
cmpsb
ljmp
fsubp
cmpsl
loope
adc
enterw
jmp
dec
push
ds
mov
jb
fisubrs
test
or
movsl
jl
rorl
adc
pop
lret
mov
int3
adcb
addr16
je
inc
sti
dec
and
mov
pop
cmp
aam
mov
sbb
or
mov
sbb
bound
xchg
or
or
jmp
fwait
cmp
mov
movb
dec
and
push
sub
mov
pop
pop
int
xchg
push
scas
idivl
xor
xchg
ja
inc
fnstsw
je
fwait
or
lcall
bound
leave
arpl
cmovp
sbb
loopne
into
ss
and
and
add
loopne
test
cmp
rclb
xor
mov
dec
sbb
sub
lds
arpl
clc
aam
and
push
inc
adc
fcmovne
inc
inc
push
inc
lret
rclb
pop
push
int3
push
xor
sahf
pop
inc
mov
inc
mov
xchg
in
mov
mov
addr16
sbb
cld
scas
pushf
push
jg
mov
in
mov
js
pop
clc
lret
enter
je
mov
pop
xchg
or
inc
into
popa
jbe
testl
mov
mov
int3
in
fistpl
or
mov
hlt
and
aam
pop
mov
inc
arpl
jle
outsl
mov
and
sti
push
inc
mov
or
sbb
pop
push
xchg
and
and
aaa
arpl
mov
jge
std
sbb
inc
cltd
xor
stos
jle
adc
pop
xor
adc
cmp
cmp
mov
xchg
dec
adc
inc
fsubl
pop
js
push
and
mov
sahf
cli
ret
jmp
ds
out
filds
and
pop
or
loope
mov
xchg
sub
movsl
mov
adc
cmpsb
rorl
in
into
dec
call
into
mov
scas
cmpsb
imul
cmp
sbb
and
cmp
repnz
icebp
sarl
or
push
sbb
jmp
je
push
or
mov
pop
and
dec
add
nop
push
popa
mov
dec
dec
addr16
cwtl
xor
rorl
inc
dec
in
mov
push
xor
push
lock
pop
pop
loope
cmp
in
daa
lods
cmc
jb
lahf
rcrb
popf
pop
cmp
sub
mov
mov
inc
inc
ror
enter
cld
xor
push
xlat
test
loope
jb
pop
ficoms
jmp
push
adc
jb
repz
and
js
xchg
mov
cmp
stc
stos
dec
mov
dec
out
daa
pop
mov
add
movsl
loopne
push
fsubr
ss
cmp
lahf
jmp
adc
gs
ljmp
testb
mov
mov
js
orb
outsb
and
adc
and
mov
stos
mov
sbb
and
psubsw
jo
daa
sbb
mov
ret
dec
in
push
push
loopne
clc
mov
bound
jle
out
fisttps
sbb
mov
add
lahf
pop
inc
cmp
aaa
loop
mov
test
in
sub
push
dec
cmpsb
push
mov
xchg
in
out
mov
fwait
dec
mov
mov
cmp
pusha
push
bound
mov
sub
mov
cld
in
xchg
push
mov
leave
out
out
add
sub
fiaddl
and
lret
dec
xlat
adc
iret
sbb
cmp
xchg
scas
je
insl
rorb
inc
jo
js
int3
pop
cmp
fldcw
nop
push
sbb
or
shrl
sbb
ret
pop
lea
adc
jo
mov
sbb
add
adc
lcall
mov
mov
addr16
rorl
daa
inc
divl
stos
or
dec
iret
lret
out
in
pop
mov
inc
xchg
das
arpl
enter
or
or
sbb
cli
bound
jne
shll
lret
push
or
lods
cmpsl
call
mov
js
ret
push
mov
cmp
push
les
dec
cmpsl
nop
or
or
dec
test
imul
xchg
jge
mov
mov
inc
imul
hlt
imul
lds
mov
int3
mov
insb
ss
xorb
mov
in
add
mov
jbe
xchg
cmpb
add
mov
js
mov
hlt
dec
stos
ret
int
sahf
scas
mov
mov
fs
movsb
sahf
mov
and
andb
cmp
es
enter
jmp
addr16
test
push
or
ret
loop
int
cmp
test
aaa
faddp
mov
out
stc
push
lcall
cwtl
cwtl
rcl
mov
clc
por
cmp
push
adcw
mov
push
mov
lods
jmp
pop
data16
pop
aaa
push
cmp
fstps
dec
idivl
pushf
cmc
cmpsl
aam
adc
mov
fdivrl
mov
pop
ja
push
xor
enter
mov
xchg
lds
pushf
outsl
inc
mov
cmpsl
ljmp
das
gs
mov
gs
jmp
in
xchg
jmp
incb
popa
push
xor
dec
out
xchg
add
or
xor
mov
shl
sbb
dec
aam
das
pop
and
jnp
or
mov
mov
add
pop
sbb
std
pop
movsl
adc
imul
cmc
aaa
ds
sbb
leavew
in
mov
cmpsl
and
sbbl
jge
ficomps
xchg
xchg
mov
in
jae
movsb
subb
fsubrs
push
es
lods
clc
jns
push
xchg
sub
cmp
in
ss
lret
jno
and
jo
out
mov
in
push
xor
xchg
or
add
imul
cld
xchg
call
cmp
adc
cmpsb
inc
lret
jp
je
ret
ljmp
loope
jnp
dec
add
pop
and
cli
mov
inc
lds
iret
mov
push
fmul
adc
repnz
add
mov
mov
fs
cmp
xor
sbb
mov
ds
xchg
cmp
insb
cmp
shlb
mov
mov
xchg
xor
pushaw
mov
xchg
mov
push
out
xchg
mov
mov
push
xor
repnz
jne
out
arpl
loop
or
hlt
sti
xor
into
nop
dec
push
lcall
xor
sarl
inc
jo
into
sub
mov
jne
mov
hlt
xor
adc
mov
shlb
and
lret
outsl
mov
jne
lods
jg
and
xlat
stos
and
bnd
lock
and
mov
scas
push
int3
fstpl
pop
fs
pusha
mov
test
mov
push
xlat
sbb
or
andb
clc
jecxz
lret
mov
sub
fiadds
mov
xor
pop
inc
push
fadds
jb
mov
jl
nop
and
outsb
push
int3
es
mov
push
jmp
frstor
mov
inc
mov
sub
enter
add
mov
adc
mov
mov
cmpsb
imul
mov
add
dec
cwtl
sbb
sub
adc
mov
neg
outsb
xchg
sub
cmp
xchg
hlt
into
add
sti
test
jl
mov
cmp
mov
mov
pop
jmp
xlat
pop
fucomip
cmpl
pop
inc
dec
push
jle
outsb
jb
orb
faddp
into
sar
loop
repnz
add
adc
and
xor
dec
push
jle
outsb
jb
orb
faddp
into
sar
loop
repnz
add
adc
and
xor
dec
push
jle
outsb
jb
orb
faddp
into
sar
loop
repnz
add
adc
and
xor
dec
push
jle
outsb
mov
orb
test
sbb
pop
mov
add
jp
pop
mov
movsl
into
mov
push
popa
std
inc
lea
add
pop
loope
sarl
or
xchg
cmp
popa
in
pop
std
inc
lea
pushf
and
push
pop
daa
insl
dec
jge
or
fwait
cmp
inc
popf
xor
inc
out
arpl
cmp
adc
add
mov
add
adc
stos
add
push
sub
mov
movsl
cmpb
movsb
sbb
jle
mov
adc
popf
jle
lcall
pop
mov
pop
pop
iret
pop
out
fidivl
enter
js
mov
push
lds
loope
aad
shll
xchg
je
cmp
orl
popf
lods
push
out
ss
daa
fcomps
sub
repnz
int3
push
aad
pusha
mov
mov
pop
sbb
mov
movsl
push
push
movsb
adcb
xchg
push
mov
sub
xor
pop
into
fs
mov
shrl
rorl
cmp
leave
in
push
std
jge
or
mov
mov
mov
jb
inc
in
mov
hlt
mov
dec
enter
cmp
cmp
push
clc
js
mov
add
jno
jle
and
je
jb
sbbb
mov
sbb
or
push
std
inc
lea
popf
and
icebp
pop
loope
sarl
or
xchg
cmp
popa
in
push
std
inc
lea
popf
and
icebp
cmp
lock
add
fst
sbb
xor
mov
out
in
adc
cmp
mov
out
iret
in
outsl
mov
sbb
dec
int
ret
gs
mov
cmp
pop
lods
repnz
add
jne
sub
pusha
imul
das
jg
mov
or
shr
sarb
xchg
mov
sub
push
mov
lods
sbb
int3
subb
lods
cli
adcb
xor
cmp
cli
unpcklps
repnz
in
xchg
ret
hlt
mov
dec
pop
jne
lcall
mov
dec
lock
xchg
dec
xchg
adc
inc
aam
mov
lret
fwait
adc
testb
es
mov
loop
es
ret
jne
pop
cmp
lods
xor
and
xor
sub
or
xchg
jne
or
cmp
cltd
scas
or
test
clc
test
jns
int
bound
push
push
jne
dec
fldl
fld
adc
cmp
aad
mov
lea
unpcklps
sbb
sub
pop
adc
jae
mov
inc
jns
sub
sbb
rclb
into
inc
pop
cmpsl
ja
jns
xchg
imul
lret
es
pop
out
cli
add
mov
or
push
pop
dec
mov
xchg
pop
movsb
xchg
and
popa
data16
ret
mov
xor
inc
xor
int3
mov
out
xlat
cmpsb
shrb
addb
subl
loop
testl
popf
jbe
movsl
cli
pop
sub
cltd
jno
in
lahf
fwait
rcl
mov
dec
inc
add
insb
mov
stc
mov
xlat
mov
adc
shrb
sbb
pop
pop
or
in
push
cmp
add
push
mov
ja
sub
movsl
jbe
sub
jle
sub
add
xor
jns
cmp
dec
ret
dec
shl
sub
and
cmp
imul
ljmp
imulb
loopne
mov
fisubl
lods
xor
or
pushf
stos
insl
out
jo
icebp
cmp
pop
fcoms
ret
mov
add
push
ret
test
mov
push
pop
pusha
jge
mov
loopne
pushf
aam
inc
adc
popf
jbe
dec
sbb
rep
fists
negb
mov
rorl
push
mov
cmp
ret
pop
mov
lock
push
lret
icebp
mov
cld
push
jbe
ds
test
in
test
inc
sbb
leave
bnd
adc
mov
shl
loop
adc
mov
mov
or
adc
sbb
movsl
addr16
xchg
jle
mov
xchg
sub
imul
fcmovnu
pusha
loope
push
out
mov
mov
cwtl
mov
es
sti
fisubrl
dec
ljmp
xchg
jmp
rorl
rcrb
out
daa
movsb
andl
jb
push
bnd
xor
mov
stos
fsubl
mov
mov
adc
inc
mov
mov
inc
jmp
jne
jecxz
and
xchg
add
sub
aaa
xchg
cmp
data16
movsl
das
pop
in
mov
das
mov
divl
iret
sub
ljmp
add
sub
jecxz
shrb
mov
into
xchg
cld
out
sti
mov
lret
lock
jns
pop
sbb
jecxz
aam
fs
pop
push
mov
and
pusha
addb
int3
pop
dec
pop
and
push
mov
scas
bound
or
pushf
les
and
std
aad
pop
cmp
shl
roll
ss
adc
adc
and
in
mov
inc
loope
iret
sbb
jmp
jecxz
sub
pop
cmpsl
inc
adc
loopne
xor
and
mov
aam
stos
lds
ja
iret
pusha
data16
mov
sub
das
fcmovnb
jo
pusha
sarb
dec
cmp
inc
orb
scas
divb
mov
fs
fildl
lahf
pop
ja
add
push
dec
ret
add
pusha
out
or
push
dec
lcall
test
jae
je
pop
cwtl
sbb
das
int
rclb
lea
jp
int3
inc
icebp
mov
xor
lret
enter
jecxz
dec
xchg
cwtl
lock
push
mov
bnd
negb
into
or
and
push
inc
xlat
jae
jmp
xchg
out
pop
mov
cmp
ret
pop
or
popl
inc
movsl
fstl
adc
mov
mov
fcoms
mov
ret
mov
dec
xor
mov
xchg
add
orl
cmp
in
xlat
ret
idivb
xchg
cwtl
add
mov
fstpl
push
sub
push
xlat
pop
jno
in
add
cwtl
xor
aas
add
lret
addr16
xchg
xor
shlb
xchg
iret
mov
sbb
adc
mov
das
pop
sti
sub
mov
push
xor
scas
push
call
add
jo
in
std
cmc
or
lea
ret
negb
loope
int3
adc
jno
xor
imul
pop
ffree
cltd
dec
inc
push
loop
cld
out
xchg
lret
popa
out
test
jp
bound
loopne
jmp
mov
scas
fiaddl
mull
sub
push
mov
cmp
jo
mov
jo
rcll
into
dec
cltd
xor
jae
les
ret
call
popl
jg
lods
incl
popf
lcall
incb
stos
sub
mov
xchg
xchg
fistps
mov
cmpb
jae
std
or
iret
jbe
mov
jle
and
sub
iret
cli
std
lods
xor
mov
inc
invd
cli
jns
add
fnsave
sbb
lds
add
outsl
jle
and
nop
sti
inc
jle
push
filds
push
movsl
in
jmp
inc
or
fstpl
push
mov
stc
ja
mov
fsubrs
jo
adc
sub
aas
imul
sub
inc
cmp
dec
add
loop
shl
jp
repz
sub
das
pop
dec
push
into
rcrb
or
loopne
cli
xchg
pop
in
fidivrs
into
mov
sbb
in
adc
rcrb
pop
mov
sbb
push
sbb
test
ljmp
mov
shr
xchg
call
xlat
std
sub
mov
leave
addb
adc
push
adc
jle
mov
push
inc
pop
cmc
sbb
mov
cmp
test
cld
push
jbe
loopne
xor
xor
incl
mov
xlat
jnp
mov
or
mov
xchg
call
and
dec
jae
hlt
xor
mov
xchg
mov
int3
cmp
call
mov
lret
cmp
pop
mov
negb
insl
and
dec
lods
mov
xchg
cmp
cld
push
jbe
test
repnz
lcall
jno
hlt
test
inc
clc
push
and
cli
pushf
and
xchg
sarl
mov
mov
adc
xchg
aad
lret
dec
jmp
fs
pop
cmp
mov
testb
dec
sbb
insb
negl
push
test
xchg
pop
ror
lcall
pop
mov
cmpsl
pop
sub
cld
lock
push
push
into
addr16
xchg
jge
subb
fadd
lret
idivb
in
sbb
inc
rol
neg
stos
in
pop
stc
lods
je
insb
insb
es
mov
stos
dec
cmp
fldenv
add
lret
push
shrb
jne
rcl
push
mov
ret
lret
push
pop
xchg
sti
cwtl
faddl
scas
sub
jp
and
xor
imull
mov
xchg
arpl
dec
xchg
insl
add
repnz
xchg
pushf
nop
lock
clc
scas
aam
sub
popa
mov
inc
mov
inc
inc
or
adcl
xlat
out
mov
add
jne
nop
aas
pop
xchg
and
mov
sbb
xchg
imul
sbb
rolb
in
sub
f2xm1
xor
cli
add
test
xchg
pushf
cmpsl
sub
push
scas
dec
hlt
adc
js
dec
add
outsl
mov
and
imul
ss
sbb
push
cld
nop
lahf
mov
push
cmp
fdivrl
jge
xchg
fldl
data16
mov
orl
test
lret
mov
test
popa
cmp
jno
das
sub
mov
xchg
fsubrs
mov
leave
mov
and
sbb
mov
mov
imul
loope
popf
or
cli
negl
sahf
test
xchg
jp
push
aaa
test
sub
add
sti
out
int3
leave
aas
adc
pop
fistl
aad
push
or
mov
or
push
jmp
sbb
sub
ficomps
shrl
sti
mov
push
mov
lock
ja
rcrl
sarl
int
mov
pop
aaa
lea
stc
pop
inc
incl
rcll
in
add
subl
aas
lea
jmp
sbb
call
mov
push
sub
or
and
es
inc
dec
jne
add
das
cli
shll
mov
nop
ds
xor
mov
inc
outsb
out
scas
fdivrs
dec
xor
mov
mov
je
mov
pop
fwait
les
push
mov
mov
aad
inc
addr16
jmp
nop
mov
or
aam
sti
imul
inc
add
repnz
push
and
push
jae
and
sbb
pushf
dec
loopne
pop
or
data16
je
int
lds
aad
pushl
test
bt
lock
push
cs
repz
lahf
mov
cmpsb
cltd
cmp
xor
push
stos
mov
adc
or
lea
push
and
ret
mov
jle
les
push
xor
pop
out
idivb
hlt
pop
arpl
jne
jae
insb
add
test
and
mov
fwait
pusha
pop
ret
fidivrs
adc
dec
jecxz
repnz
in
push
xor
test
in
or
dec
bound
adc
out
loope
push
pop
int3
jo
mov
xchg
jbe
adc
cmp
cmc
jle
jne
add
cli
ret
aas
jge
cmp
push
dec
jb
shrl
in
and
sbb
cltd
nop
sbb
mov
inc
stos
push
ret
or
jae
push
rclb
or
push
mov
sub
push
ret
xchg
adc
aas
push
mov
lcall
inc
iret
lahf
xor
dec
xchg
mov
adc
push
shlb
aas
sub
jb
xlat
shl
dec
scas
and
shrb
pop
ret
push
push
push
shlb
jl
inc
jnp
enter
sbb
adc
and
pop
xor
mov
lcall
push
cmp
sbb
lahf
inc
out
adc
sub
xchg
inc
lcall
cmp
hlt
ret
pop
lcall
lea
gs
pusha
idivb
fwait
adc
adc
out
cmp
add
stos
inc
pop
dec
fwait
ret
gs
lock
ds
jle
pusha
into
lcall
adc
push
mov
dec
jne
cs
clc
sub
lea
js
push
lcall
mov
inc
xor
jo
ror
add
add
cmc
pop
sub
fmulp
ret
call
es
insb
fidivs
jecxz
inc
sub
mov
inc
mov
mov
and
mov
cmp
xchg
adc
adc
outsl
mov
dec
ret
sub
scas
add
mov
jbe
repz
push
sbb
pop
sbb
mov
insb
aas
jae
dec
xchg
and
pop
mov
jbe
xchg
push
ret
scas
leave
out
mov
cmp
clc
dec
pop
in
push
xchg
add
mov
or
fidivrl
test
jno
mov
roll
pushl
pop
push
mov
aam
jp
add
push
jecxz
loop
inc
adc
mov
test
inc
nop
xor
lahf
or
fdiv
sti
test
add
incl
mov
mov
arpl
cmc
js
cwtl
fstl
fdivl
out
or
push
push
or
mov
lret
repz
aad
sub
mov
inc
jle
mov
rorb
mov
push
movsl
xchg
jo
fldenv
iret
mov
inc
aad
ss
mov
jbe
mov
orl
xor
pop
sarb
xlat
mov
arpl
pushf
pop
add
and
ret
push
inc
sbbb
or
jle
mov
push
add
sbb
fadds
jo
pop
pop
test
sub
or
insl
aad
push
pop
mov
ss
pop
enterw
push
fwait
add
cltd
movsl
inc
mov
sub
popf
mov
fistps
mov
rcrl
xor
mov
in
lret
xchg
cmp
mov
arpl
sub
mov
sub
mov
clc
out
bswap
mov
cmp
push
scas
jno
movsb
mov
or
mov
pop
pop
in
lock
xchg
push
xor
ljmp
rcrb
sub
mov
fwait
pusha
pop
nop
arpl
mov
lret
addr16
gs
lret
mov
dec
add
adc
sub
cmp
sub
inc
mov
addr16
sbb
in
jecxz
sbb
jmp
dec
jl
mov
punpckhbw
mov
mov
xor
pop
inc
sahf
sbb
jl
mov
loop
ret
movsb
xor
lret
pop
xorb
dec
add
aaa
xor
xchg
mov
inc
adcl
loopne
mov
xchg
mov
jns
out
mov
and
loop
ficomps
xor
xchg
aad
push
xchg
stos
sub
adc
mov
xchg
out
lods
mov
testb
push
jno
adc
cwtl
fidivrl
adc
sbb
in
ficoml
rorb
sbb
pop
jg
or
fisubl
push
movsl
pop
stos
js
cwtl
and
frstor
loope
test
aad
xor
push
lret
jmp
out
je
lcall
popa
cmc
pop
xor
sarb
dec
insb
push
gs
shlb
scas
std
push
xlat
xor
adc
inc
xchg
cmp
mov
fistps
mov
in
shll
mov
gs
jle
lods
or
pop
mov
sti
lea
rol
pop
hlt
iret
push
push
inc
inc
inc
add
stc
dec
xor
inc
scas
and
sti
mov
ret
jne
dec
stos
add
dec
pop
mov
push
and
shl
out
lds
aas
mov
dec
jo
jge
dec
cmp
sahf
std
jp
sub
flds
inc
pusha
scas
lahf
icebp
fldl
jo
pop
xor
push
icebp
sahf
dec
into
mov
movsl
gs
aas
mov
adc
lahf
jmp
sbb
data16
cwtl
cmp
cmp
mov
inc
cmc
xchg
in
cmc
jnp
jno
ss
pop
push
cli
fstpt
nop
xchg
jmp
popa
mov
test
adc
push
pop
loop
or
dec
lea
push
int3
inc
lret
mov
scas
dec
mov
jne
addl
and
hlt
pop
sti
orb
dec
mov
neg
sbb
ja
js
jae
rolb
icebp
lods
mov
dec
mov
jecxz
inc
cmp
inc
mov
clc
clc
cmp
and
cltd
shrb
shlb
or
loopne
test
orb
jg
xchg
push
mov
jae
cmp
lahf
fimuls
stc
in
mov
mov
jp
shrb
lret
push
sbb
sub
clc
mov
and
push
int
fmuls
fisttps
jp
lock
test
cmp
inc
add
fbstp
or
adc
aaa
jbe
iret
fimuls
fsub
add
pushf
mov
sub
popf
pop
fsubs
enter
icebp
lcall
push
dec
stos
cmp
sub
xor
scas
add
test
jmp
jmp
adc
cmp
loopne
mov
xor
test
cmp
cmp
dec
sti
mov
xchg
std
outsb
jb
das
scas
push
mov
xor
push
adc
pop
sbb
test
jecxz
cmpsl
mov
xor
xchg
xor
push
test
pop
sub
mov
jp
fstl
pushf
cmp
pop
dec
pop
add
pop
xchg
test
fadds
fisubrl
in
mov
inc
rcrl
imul
or
mov
rorl
mov
in
sbb
add
mov
loopne
xchg
jp
shrl
push
mov
push
lret
in
adc
scas
mov
cmp
inc
mov
or
rcll
bnd
xchg
fwait
add
loope
or
lcall
dec
adc
lahf
mov
jmp
pop
je
push
jmp
sbb
xor
daa
movsb
inc
pop
mov
rolb
es
lods
mov
out
out
mov
loope
outsb
jae
xchg
mov
jge
ss
mov
je
rclb
adcl
loope
mov
sub
cli
iret
stos
sbb
jno
cmp
dec
cmp
aas
scas
mov
xchg
repnz
outsl
leave
ret
cmc
sbb
xor
sbb
fisttpll
sub
sub
arpl
hlt
add
aaa
inc
arpl
xlat
xchg
sub
mov
dec
lock
pop
and
int
subl
xchg
imul
rolb
sub
dec
mov
shl
push
in
and
and
cmp
data16
xchg
mov
sti
lods
jge
jbe
pop
loopne
dec
mov
or
inc
insb
lea
es
jecxz
mov
xlat
iret
mov
dec
add
nop
ja
iret
out
mov
sub
cli
add
stc
rcl
pop
dec
arpl
rorb
xlat
icebp
sub
adc
mov
mov
add
push
aam
movsb
push
sbb
mov
cmp
enter
or
in
pop
sub
int3
pop
and
inc
jne
shlb
xlat
lcall
jne
lds
daa
mov
mov
dec
and
clc
pop
adc
add
cwtl
adc
call
nop
xchg
rcl
popf
and
cmpsb
fmuls
arpl
cwtl
xchg
iret
andb
cmpsl
inc
dec
push
in
daa
repnz
lods
or
lret
cmp
inc
inc
movsb
subl
inc
dec
xchg
pop
call
cmpsl
pop
fsubp
loop
mov
adc
loopne
xchg
jp
out
cwtl
sar
sub
icebp
adc
arpl
in
ret
stos
sahf
data16
xchg
in
adc
pop
jmp
cmp
test
jne
ret
pop
int3
pusha
imul
adc
cwtl
out
add
add
pop
movsl
lahf
test
jmp
push
push
loope
mov
in
jns
outsl
sarl
insl
test
jns
jl
push
cwtl
in
mov
repz
cltd
add
les
jo
jecxz
outsl
mov
aad
xor
lods
ds
inc
lods
jle
scas
lods
shrb
repnz
mov
aad
pop
fdivp
lods
dec
mov
mov
fsts
sti
push
xchg
cmp
mov
and
shll
push
xchg
scas
jg
add
adcb
js
adc
stos
aas
or
push
dec
xor
xchg
call
lret
dec
pop
adc
xchg
fisubl
daa
xchg
ljmp
and
xchg
inc
pop
adc
addr16
mov
adc
push
inc
pop
out
js
call
pop
xchg
add
in
jno
or
and
jmp
adc
lock
inc
stc
dec
repz
push
loope
mov
lahf
sbbb
mov
in
push
dec
out
in
jnp
sbb
in
mov
mov
push
into
pop
mov
scas
push
xor
xor
out
cli
jmp
packsswb
stos
xchg
mov
mov
cmp
xchg
dec
mov
jl
xchg
scas
sub
jle
inc
je
xchg
fucomi
inc
push
popf
das
sbb
lea
out
cmp
dec
mov
sar
pusha
fbld
dec
sub
aad
dec
scas
push
fwait
jecxz
adc
lret
sbb
dec
stos
int3
mov
dec
and
popa
sbb
data16
mov
xchg
test
mov
and
in
inc
jns
jbe
sub
pop
dec
push
or
stos
subb
fadds
dec
dec
aam
adc
push
mov
add
js
push
cmc
push
imul
sub
push
push
test
loope
aam
rorl
cmp
popa
in
push
std
inc
lea
popf
and
icebp
pop
loope
sarl
or
xchg
cmp
popa
in
push
std
inc
lea
popf
and
cmc
pop
out
insl
leave
jge
or
xchg
cmp
gs
push
cld
dec
lea
mov
add
or
adc
lret
inc
push
std
ss
dec
adc
jns
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
dec
add
imul
xor
or
jo
mov
xchg
jmp
sti
mov
mov
add
imul
xor
inc
sbb
pusha
cmp
mov
nop
jmp
cmc
mov
mov
shrb
sbb
jae
arpl
adc
dec
xor
push
cmp
mov
add
hlt
movsb
notl
xor
imul
pop
mov
xchg
ljmp
frstor
mov
pop
jae
mov
adc
pusha
and
sbb
dec
jg
outsb
pop
lock
mov
pushf
cmpsl
jnp
adc
jnp
push
sti
sub
ror
jbe
mov
imul
fistps
hlt
inc
sbb
adc
cmc
inc
pusha
fisubrl
pop
add
je
fwait
push
and
mov
out
out
fwait
inc
hlt
addb
pushw
lret
jl
outsl
ljmp
rclb
mov
fadds
fsubs
and
push
cli
xchg
pop
stos
dec
into
call
mov
add
jnp
sbb
or
pusha
and
add
repz
or
cli
mov
bound
inc
andnps
jge
data16
adc
cwtl
movsb
lahf
aad
movsl
rcr
pushf
and
cmp
push
or
inc
sbb
sub
inc
mov
mov
mov
mov
rcr
xchg
test
add
adc
inc
adc
jae
push
sub
jo
sbb
jmp
sti
mov
rcrb
dec
add
imul
xor
inc
sbb
pusha
cmp
sbb
jmp
sti
mov
rcrb
dec
add
cmpsl
or
addr16
pop
mov
jmp
jb
mov
xor
clc
addr16
mov
imul
mull
out
es
shll
mov
out
or
sti
xor
mov
sbb
adc
push
loop
sub
mov
or
scas
xchg
jno
and
fbld
int
daa
mov
push
in
mov
sarl
or
sahf
cld
popf
rolb
mov
hlt
push
nop
sbb
mov
sub
xchg
mov
addr16
shll
cmc
mulb
sub
aad
imul
fisubrs
bound
jecxz
test
mov
test
mov
imul
sbb
jbe
dec
push
lods
sbb
mov
negb
xchg
pushf
loopne
push
stos
out
sarl
fbld
insl
lods
outsl
mov
ljmp
test
jo
sbb
popf
jae
mov
movb
fnstenv
mov
in
imul
inc
inc
fistl
ret
int3
movsb
pushf
inc
repz
int3
popf
lahf
or
fwait
mov
dec
mov
outsl
jecxz
fs
mov
outsl
mov
pop
sbb
je
pop
nop
stc
repnz
sub
test
imul
in
mov
das
pop
push
test
push
divl
addr16
inc
inc
mov
shll
jo
cwtl
xchg
sbb
sub
fmull
inc
rolb
lret
pop
mov
jle
adc
out
xchg
ljmp
imul
leave
mov
ret
cmp
js
and
jg
add
mov
add
rclb
pop
cwtl
lret
push
stos
pavgb
add
xor
and
addr16
sbb
ja
and
bound
in
aas
jmp
xor
jecxz
mul
push
jl
pop
or
aam
lea
ljmp
imul
test
adc
xor
jne
fdivs
add
es
and
inc
or
mov
repnz
adc
xchg
negl
xor
adc
mov
adc
scas
loope
das
mov
mov
cmpsl
dec
jle
cmp
jno
aad
iret
and
mov
xchg
movsb
popf
sti
jae
jp
movb
scas
add
cmpsl
sub
mov
pop
fisubrs
push
fistpl
xlat
fcmovnb
je
inc
leave
xlat
in
leave
mov
cwtl
int
dec
mov
sbb
cmpsb
aaa
mov
out
xchg
int
or
jnp
nop
xor
or
cmpsl
fmull
and
addr16
jmp
xor
cwtl
out
flds
mov
inc
pop
jno
icebp
add
iret
dec
sub
imul
rcrb
out
add
or
dec
dec
inc
inc
dec
dec
adc
outsb
repz
adc
inc
push
ljmp
sbb
sbb
clc
xor
jo
inc
movsb
add
mov
mov
bnd
clc
cmp
and
in
push
jmp
jae
and
rclb
jne
sub
aam
xchg
pop
lret
popf
inc
in
cmp
cwtl
pop
lods
push
dec
loop
push
push
loopne
maxps
cmpsb
addl
sbb
int3
cltd
movsb
jae
xor
mov
cld
test
insb
and
insb
sbb
test
fcmovb
sbb
test
xlat
adc
lds
inc
int
xchg
shlb
dec
aas
ljmp
push
int
roll
lods
and
loopne
inc
outsb
or
popf
imulb
int
dec
mov
leave
inc
mov
mov
data16
adc
mov
xchg
gs
jmp
or
dec
and
ljmp
pusha
jbe
inc
jnp
fiaddl
dec
add
aam
jae
std
rcrl
daa
or
jns
dec
sbb
ss
fmuls
jge
lock
aad
out
js
pushf
fcoml
xchg
cs
adc
outsl
popa
mov
aad
out
pop
push
sbb
stos
es
jl
testb
pushf
rorl
jmp
or
xchg
push
xchg
and
cwtl
call
sub
popf
repnz
out
sub
stos
push
add
push
dec
fidivrl
or
dec
xor
sub
jns,pt
ficomps
mov
mov
inc
xor
push
gs
out
cld
inc
push
adc
inc
pop
fldt
sbb
out
adc
rcrb
nop
cwtl
add
sbb
in
mov
dec
icebp
xor
dec
daa
cmp
xchg
popl
lahf
adc
cmpsl
cmp
fcomps
xchg
les
out
lret
js
push
and
in
dec
aam
sti
arpl
sub
shrl
outsl
cmp
mov
add
outsl
sub
or
cmp
bts
jle
or
jne
stos
and
mov
pop
pop
insl
decl
cmp
fcmovbe
pop
lea
cmp
test
gs
call
mov
sahf
lret
hlt
jl
sub
cmp
push
into
js
adc
leave
xchg
xchg
jne
or
jnp
dec
mov
ret
pop
aad
adc
mov
or
jbe
cmovno
cmp
jg
inc
mov
and
cld
test
jge
andl
inc
cmpsb
fs
xchg
leave
sahf
daa
add
in
lret
pop
inc
jmp
stos
adc
mov
or
sahf
test
cmc
inc
xor
push
mov
aas
ss
shlb
xchg
mov
add
cmp
je
xrelease
in
lods
jns
mov
sub
out
mov
push
js
sbb
inc
xor
jecxz
rclb
and
sahf
mov
jge
fucompp
cmp
inc
xor
adc
cmpl
mov
leave
dec
cwtl
jae
pushf
aas
pop
jns
adc
add
jae
inc
in
mov
and
adcl
xor
lock
xchg
nop
out
outsl
cmp
mov
into
imul
call
fstp
cltd
inc
js
and
jle
int3
mov
pop
inc
aaa
out
xlat
inc
jb
fldl
fdivs
enter
or
insl
mov
lods
sahf
mov
stc
mov
xchg
push
jb
mov
dec
push
js
cmp
cs
fwait
aad
mov
rorb
pop
push
and
xchg
sbb
sbb
iret
xor
pusha
pop
inc
mov
stc
std
xor
lret
mov
adc
cmp
ss
movsb
js
popf
sbb
xchg
or
idiv
cmp
pop
adc
mov
pop
imul
testl
sub
jle
in
sub
pusha
sbb
inc
jl
pusha
std
cmp
jo
lcall
cmp
movsl
cwtl
shrb
cmp
pop
mov
sbb
in
aas
outsb
ret
jnp
xchg
xchg
loopne
in
xor
cmp
repnz
push
mov
xchg
ret
jo
adc
push
xor
iret
mov
lret
inc
add
push
and
add
xchg
push
add
lcall
or
jae
adc
rcll
int3
cmp
aam
shrl
jmp
lods
and
or
dec
aad
stc
sti
or
mov
fisttps
mov
dec
mov
std
push
ret
and
cmp
fstl
orl
roll
cmp
cli
ljmp
bound
mov
pop
add
lock
loope
shll
loopne
add
daa
jns
mov
hlt
popa
ficomps
adcb
jg
fisttpl
pusha
fs
mov
int
cs
inc
cmc
push
jmp
movsb
pop
dec
into
xchg
repnz
lods
scas
imul
loopne
and
stos
mov
mov
shrb
mov
pop
mov
lahf
mov
call
ljmp
cmpsl
insb
push
fnstenv
xor
inc
mov
neg
stos
out
outsb
jnp
bndldx
dec
sarb
leave
jb
lahf
xchg
xor
xor
jle
push
cmpb
cmp
and
add
lret
jb
shrl
dec
xchg
loopne
testl
cmc
sahf
add
aaa
ss
insl
popf
jg
lret
fldl
std
ss
and
rcrb
cmp
arpl
pop
adcl
hlt
imull
mov
sbb
repz
or
jo
shlb
pop
inc
jo
outsb
aas
jne
adc
mov
test
push
sub
insb
sti
pop
loope
add
and
adc
cmp
mov
notb
mov
push
xchg
out
aad
xor
mov
mov
inc
cs
cmp
dec
push
jns
xchg
stos
dec
leave
and
gs
cmp
mov
add
addr16
in
mov
hlt
sahf
insb
loop
cmpsl
jg
or
cmp
xchg
fistps
push
sbb
inc
int3
jno
or
call
xor
adc
sarl
popa
movsb
dec
ffree
mov
movd
inc
xchg
xlat
dec
jg
das
fstps
push
cli
inc
ljmp
testl
jae
mov
lds
je
sbb
andb
jb
rolb
dec
jge
jmp
subb
daa
sbb
xor
pop
xlat
outsb
mov
cmp
sub
icebp
sub
mov
imul
arpl
aas
loope
stos
dec
mov
push
cmp
mov
test
hlt
push
arpl
sub
mov
repz
shlb
movlps
sti
les
cmp
and
lea
mov
push
data16
shlb
rol
adc
pop
sbb
call
inc
sub
ss
xchg
add
adc
xor
negl
dec
mov
fdivrs
pop
pop
pop
jnp
sbb
call
cs
mov
jle
es
popf
adc
inc
enter
repz
loopne
sub
xchg
xchg
push
pop
sub
adc
push
and
mov
fucomp
dec
insl
cld
and
or
jecxz
or
ret
pop
xor
mov
or
sahf
stc
adc
arpl
sub
and
or
lahf
out
addr16
fwait
test
lret
daa
sub
cwtl
out
mov
and
mov
pop
mov
in
cmp
mov
pop
aad
add
xchg
scas
mov
lods
or
adc
iret
push
shrb
bound
or
inc
sbb
push
testb
lods
mov
mov
inc
out
mov
out
dec
and
pop
mov
pop
fcomp
cmc
testl
xchg
outsb
and
cld
mov
mov
mov
push
testb
lds
fs
cmpsl
push
fstl
jo
and
mov
sub
inc
stos
jo
mov
xchg
xchg
pop
push
test
inc
or
mov
or
sub
rclb
sti
fistpll
sbb
fistpl
lock
clc
pop
push
subb
xchg
or
add
mov
push
add
push
test
or
scas
test
jae
cmp
repz
ficoml
and
movsb
cmpsl
in
call
jno
dec
push
sub
or
popa
cmp
test
push
out
cmp
ud2
inc
jbe
clc
stc
cmp
insb
cmc
jae
sub
shl
sub
push
sbb
jg
loopne
mov
fdivr
dec
fildl
jnp
stc
arpl
nop
xchg
adc
lcall
hlt
es
adc
or
jecxz
xchg
or
out
xchg
icebp
stos
xor
sbb
xor
cmc
mull
lds
lea
mov
push
into
test
aam
mov
out
or
add
mov
int
std
cmpsb
jae
xchg
pop
mov
loope
pop
aad
sub
sbb
lock
push
cwtl
jns
sub
xchg
xchg
mov
loopne
fwait
popa
out
dec
pop
ret
adc
shll
mov
js
jle
sti
push
jmp
mov
mov
xchg
loope
dec
push
scas
lret
sub
push
adc
lcall
inc
sbb
push
out
cwtl
movsb
test
fcomi
sti
pop
jecxz
pop
pop
rorl
jae
negb
or
lods
mov
inc
push
cmpsl
pusha
xor
and
scas
push
inc
addr16
sti
add
test
dec
adc
and
bound
aad
std
mov
fs
adc
mov
popa
sub
cmpsb
ret
pop
movsb
or
shrl
jne
dec
or
stos
fidivl
pop
jnp
hlt
lcall
test
pop
loopne
sbb
dec
mov
movsb
addb
xchg
fdivrl
jns
pop
sub
xor
mov
lret
loop
ds
add
ljmp
jne
dec
mov
dec
inc
and
and
rol
negl
outsl
insb
int3
stos
add
repz
and
inc
push
rorb
mov
les
add
decl
add
fistps
jbe
hlt
and
or
mov
cld
or
aam
hlt
xor
xor
and
subb
push
xchg
pop
popa
push
lea
mov
sbb
pop
int3
cmp
mov
cmp
popa
sbb
stc
loop
fs
or
in
mov
loope
jnp
test
icebp
add
push
in
jmp
jmp
mov
xor
pop
stos
and
dec
pop
adc
pop
adc
xchg
out
shrb
jle
sub
jecxz
mov
fwait
aam
push
ret
push
jp
cwtl
rol
pop
scas
sbb
dec
pop
test
rcrl
or
cmpsb
mov
ret
sti
mov
pop
rcrb
cmp
jae
mov
lret
rolb
mov
jp
js
add
xchg
popa
test
xlat
out
in
pop
or
fs
sbb
mov
cmp
sahf
push
jbe
jo
orb
pop
xor
push
pop
js
push
js
ficompl
jmp
clc
gs
lods
notl
test
jno
test
jge
vpxor
arpl
jp
push
lret
js
std
gs
mov
dec
lock
lea
das
cltd
adc
jle
jae
scas
and
addr16
outsb
add
aaa
test
lods
into
mov
hlt
sti
inc
xchg
mov
jne
cmp
cltd
jae
xchg
inc
cmp
std
mov
or
loop
pop
inc
and
ffree
dec
and
ljmp
inc
cmpsl
mov
sub
jl
stc
xor
inc
loope
fsubrl
add
movsl
mov
mov
test
mov
loope
sbb
pop
cs
adc
adc
in
hlt
or
fdivp
sti
js
std
jb
xchg
pushf
mov
jl
rcrl
ds
mov
arpl
push
mov
mov
xlat
mov
pop
pushf
dec
test
stos
pop
mov
inc
ret
dec
pop
mov
xor
negb
mov
into
sub
sub
lea
stos
fldl
dec
jbe
sbb
push
repnz
call
lcall
pushf
inc
xor
loopne
push
pop
ds
repz
xchg
sub
fadds
xchg
test
or
cmp
pop
rclb
sbbb
test
mov
dec
stc
in
or
push
stos
out
dec
cmpsb
inc
xchg
xor
jbe
popl
cmp
aam
stos
dec
das
stos
dec
xchg
mov
mov
fwait
cmp
jb
iret
scas
cmp
subl
cmp
xchg
sub
test
js
mov
scas
or
stc
mov
jns
movsl
data16
lahf
adc
adc
in
mov
sarb
jecxz
add
pop
add
pop
mov
out
adc
movl
adc
xor
mov
dec
decb
and
lods
sub
xchg
or
nop
inc
js
push
lret
enter
mov
testb
jo
and
hlt
push
out
cmpsl
sub
sbb
dec
stos
les
inc
or
and
jle
lods
dec
test
inc
aad
xchg
xor
enter
xchg
mov
sbb
cltd
xor
add
push
or
es
and
aam
adc
das
or
cmp
inc
mov
lcall
rorl
les
shlb
xor
push
mov
les
popf
xlat
mov
mov
cmpsb
pop
xchg
je
enter
pushf
xor
pop
gs
adcl
push
fmull
lds
adc
movsb
jge
mov
mov
jmp
and
dec
aaa
mov
testb
pop
in
aas
ljmp
jg
fdivs
xchg
xorb
and
push
imull
sub
xchg
andb
dec
add
inc
test
repnz
loope
faddl
cld
cmpsb
inc
shr
or
push
push
push
mov
int
into
dec
daa
rcl
push
jge
loopne
xor
inc
gs
sarl
rol
cmc
dec
stos
mov
sbb
cmp
inc
les
xor
adc
test
repnz
add
aad
adc
inc
mov
pop
push
mov
ficompl
xlat
xor
xor
pop
jge,pt
lods
ficoms
add
pop
jge
cwtl
push
sti
repnz
stc
jle
add
test
aas
imul
std
mov
inc
cmpsb
daa
or
adc
lcall
pop
or
insb
sbb
jns
test
lock
push
imul
sub
cmp
je
cs
push
lahf
mov
repz
aas
neg
cltd
pop
dec
outsb
adc
imul
sbb
jecxz
dec
sbb
mov
roll
cli
ret
xchg
sbb
test
clc
adc
xchg
or
mov
mov
movsl
aaa
add
lock
inc
jbe
jle
cmp
outsl
scas
addl
adc
or
sbb
in
arpl
add
repz
pop
or
test
sub
cmpb
inc
mov
sub
mov
inc
imul
loopne
mov
sub
inc
or
lock
or
popa
inc
sbb
lea
pop
imul
push
std
xchg
push
nop
std
inc
addr16
into
jl
imul
mov
cmpsl
adc
cwtl
pop
mov
sub
xchg
test
ss
adc
push
test
sbb
inc
pusha
mov
ds
es
pop
or
inc
and
daa
mov
fs
dec
mov
out
ja
mov
cmp
fnstsw
in
int
or
pop
dec
dec
aaa
xor
je
push
cs
mov
addr16
push
sbb
push
or
test
fdivrp
into
mov
lret
pusha
ret
mov
pop
das
lods
adc
adc
pop
mov
std
lods
enter
ja
or
mov
imul
sub
mov
nop
push
or
cmp
aas
cmpsb
repz
icebp
jmp
adc
sbb
xor
and
mov
jl
sbb
in
call
popa
aaa
popf
adc
mov
dec
pop
sub
dec
cli
ss
pop
push
inc
cmp
mov
out
pop
xor
ret
xor
sub
outsb
dec
outsb
das
mov
enter
jbe
js
outsl
fcmovu
mov
fwait
icebp
sbb
flds
mov
adc
pushf
out
inc
lahf
lods
inc
add
insb
out
gs
inc
lea
mov
int
push
mov
xchg
cmp
fcmovne
hlt
mov
cwtl
pop
pusha
xlat
les
es
inc
mov
clc
fs
ret
scas
repnz
int3
aam
dec
add
jne
add
clc
std
pushf
in
testl
xor
les
out
roll
jbe
jmp
jmp
mov
xor
jno
dec
jne
add
sbb
adc
outsl
pop
or
inc
repnz
les
sbb
and
or
push
popa
adc
mov
adc
and
hlt
inc
push
mov
clc
icebp
xchg
sbb
xlat
cmp
mov
scas
sbb
scas
and
push
jno
mov
repnz
adc
push
dec
stos
call
subl
adc
pop
inc
dec
xor
fcompl
mov
mov
inc
aas
jns
lods
clc
mov
mov
lock
in
imul
faddl
pop
mov
scas
push
cli
pop
pushf
popa
xchg
sub
in
sbb
push
and
in
lds
icebp
lods
sub
stc
shl
lret
data16
adc
cwtl
popa
and
test
jne
inc
dec
cmpsl
jmp
xor
bound
fwait
jnp
orb
or
pushf
xor
pop
ret
cmpsl
jl
pop
cmpsb
and
insb
xor
xor
out
dec
pop
insb
ljmp
xchg
in
lock
pop
loop
mov
das
dec
cmp
fadds
sahf
movsl
loop
inc
mov
mov
dec
sub
sub
aam
scas
cmc
cld
out
jne
out
xchg
shrb
pusha
sbb
loopne
bound
dec
pop
sbb
jmp
popa
and
or
push
sub
jo
sbb
jmp
sti
mov
rcrb
dec
add
imul
xor
inc
sbb
pusha
cmp
sbb
jmp
sti
mov
rcrb
dec
add
imul
xor
inc
sbb
pusha
cmp
sbb
jmp
sti
mov
rcrb
dec
add
adc
and
xor
inc
sbb
pusha
mov
cmp
sti
cld
dec
adc
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
pop
cmp
sbb
das
jle
push
or
dec
fdivrl
in
mov
lods
lret
pop
cmp
sbb
jnp
imul
dec
fdivrl
in
mov
jmp
fldt
jl
insb
or
or
cmp
sub
faddl
in
mov
ret
cmp
pop
jl
add
aad
xchg
mov
fwait
sub
xor
push
test
adc
imul
xchg
hlt
jecxz
or
ret
inc
and
dec
lret
add
lea
aaa
or
inc
std
jnp
sbb
sub
loopne
pop
jb
fdivrl
push
cld
sahf
sub
int3
sti
icebp
fcomp
and
lret
dec
sub
sbb
jp
jnp
mov
sbb
dec
mov
arpl
cltd
ljmp
xchg
testb
xchg
mov
lcall
xor
in
fisubrl
sarl
mov
push
mov
add
add
stc
into
sub
nop
cmp
sbb
jnp
imul
dec
fdivrl
in
mov
lods
lea
pop
add
sub
cs
xlat
test
in
xchg
mov
cmp
popa
sbb
add
dec
inc
inc
xor
dec
mov
int
out
xchg
loop
shrb
dec
pop
adc
jg
pop
or
cmp
sub
fdivrl
in
mov
lods
lret
pop
cmp
sbb
jnp
imul
dec
fdivrl
in
mov
lods
lret
pop
cmp
loope
inc
mov
add
inc
push
outsb
je
sbb
push
add
inc
rcrl
inc
iret
pushf
mov
mov
outsl
jne
mov
jl
dec
xchg
dec
test
loop
insb
ret
dec
shr
cmp
cmp
or
bound
jbe
lods
dec
mov
outsb
pop
and
mov
sub
jnp
lock
lock
lds
jp
into
pop
rclb
push
cmp
push
movsb
jo
loopne
dec
push
mov
subb
and
sub
lea
inc
push
test
fisubrs
arpl
out
mov
daa
add
sar
lret
sbb
add
gs
sahf
add
mov
or
or
jbe
js,pt
in
movl
sbb
lds
xor
int
sbb
imul
pop
pop
or
stc
mov
sbbb
push
mov
fs
jb
cmp
call
xchg
sarl
mov
arpl
add
mov
sbb
inc
push
cltd
mov
lods
sbb
push
and
daa
cmp
push
test
mov
push
outsl
out
mov
push
cmp
push
mov
fcmovbe
out
adc
mov
and
jmp
lods
and
int3
mov
jl
jp
cmpsl
jne
ja
or
pop
mov
repz
inc
lock
movsb
addb
mov
int3
lret
test
mov
xor
and
insb
or
jbe
mov
leave
jge
cwtl
outsb
jge
mov
jb
adc
add
add
shlb
jb
push
jnp
cld
mov
insb
lahf
xchg
xchg
shlb
and
cmp
pop
pop
jge
test
test
loopne
jl
outsb
cmp
xor
dec
insl
test
jne
lret
xor
aam
pushf
jb
scas
inc
aam
pop
and
and
pop
lods
out
sbb
or
or
shlb
cmpsl
xor
inc
xor
xchg
mov
and
roll
fwait
mov
outsl
lods
dec
enter
cmp
enter
popa
mov
or
mov
fs
jbe
mov
shl
pop
mov
inc
int
je
fisubs
filds
clts
mov
out
mov
mov
add
movsl
push
int3
in
pop
icebp
jns
or
rorb
and
faddl
add
ja
pop
pop
repz
cs
std
jnp
dec
mov
jle
fwait
mov
mov
sbb
enter
xchg
pop
cmp
rorl
icebp
js
sub
xor
or
pop
dec
into
aaa
js
push
jecxz
mov
mov
ds
int3
push
in
xchg
mov
aad
push
jb
mov
pop
pop
or
hlt
add
mov
cmp
push
pop
notb
pop
xor
adc
std
add
rcrl
lea
sahf
in
mov
jmp
rorl
push
stos
push
call
call
sub
xchg
ss
aas
add
adc
adc
cltd
mov
loop
xlat
xor
outsb
test
fdivl
gs
aas
int
aad
xor
inc
and
ficomps
sbb
repnz
mov
lods
xor
add
je
sub
push
scas
push
mov
adc
mov
addr16
pop
cmp
mov
mov
dec
shlb
mov
inc
dec
push
stos
xor
incb
shrb
xor
inc
cmp
jmp
js
repnz
push
fdiv
fsubl
nop
fstl
push
hlt
inc
and
inc
decb
push
pop
mov
dec
lds
mov
or
cmc
mov
and
aaa
das
out
xorl
mov
shll
ret
sub
out
adc
jmp
cwtl
fs
scas
xchg
pop
mov
aaa
and
das
out
push
and
scas
sub
push
imul
in
pop
in
arpl
inc
ss
fsubs
add
mov
push
jmp
repz
cmp
jg
mov
scas
mov
addr16
shll
rcrb
aaa
cmp
cmpsl
jo
imulb
mov
fidivrl
test
into
or
loop
mov
insb
and
sti
les
mov
shl
or
pop
jbe
xor
jecxz
cmp
popa
mov
into
mov
ds
sub
shrb
js
icebp
jns
call
fisubrs
je
leave
stc
and
push
out
das
mov
cmpsb
sub
mov
dec
inc
test
out
fsub
mov
ja
in
div
sarl
push
lods
push
sti
insl
add
movsb
dec
jmp
insl
insb
add
cmpsb
movsb
push
int
lahf
aas
jecxz
mul
cltd
test
cli
cltd
jae
xchg
pop
dec
cld
cmpsb
jg
cmp
mov
cltd
insb
js
add
sub
lret
or
sbb
in
stos
mov
push
pop
jnp
stos
addr16
mov
sbb
data16
out
lcall
cmc
cwtl
mov
sbb
cmpsl
inc
mov
jnp
pop
mov
das
xor
sbb
shrl
sbb
mov
jge
ds
fnstcw
jg
xchg
popf
in
mov
adc
mov
les
pop
cwtl
sub
and
mov
scas
addr16
xor
inc
push
push
fnsave
mov
test
push
mov
add
das
sbb
loopne
push
std
mov
and
mov
pop
pop
jo
adc
inc
loope
xlat
movsb
pop
loope
int3
jg
loop
mov
fistpll
bound
xor
ret
aad
xor
fisubs
add
sbb
jno
sub
push
gs
aam
scas
cs
push
inc
clc
or
push
incl
push
out
push
inc
dec
xchg
push
xchg
mov
insb
cld
add
js
cs
adc
jo
or
jg
and
pusha
bound
testb
call
int3
dec
lds
add
cmp
xlat
popf
xor
mov
daa
sub
outsb
repz
in
mov
aaa
mov
mov
sarl
movsb
lret
mov
xchg
rolb
ljmp
push
add
fcmove
cmpsl
inc
push
and
lods
and
jg
mov
mov
pop
loope,pt
add
mov
popf
xor
sarb
xchg
adc
cs
add
mov
je
stc
xor
mov
inc
lret
jae
bound
jb
cld
adc
or
xor
and
mov
cmc
sub
push
hlt
cvttps2pi
sti
cmp
cmp
shlb
dec
hlt
adc
int3
mov
mov
addl
in
mov
ficoml
push
pushf
cltd
jae,pn
or
lods
pop
jg
mov
mov
pop
lret
outsl
movsb
aam
sbb
movb
mov
mov
iret
xchg
inc
adc
mov
cmc
push
jo
call
push
in
mov
pop
mov
xchg
and
jo
pop
jns
enter
pushf
in
fsubrl
pop
jne
out
push
in
mov
inc
inc
adc
push
dec
add
test
stc
or
dec
xchg
mov
add
mov
jmp
aad
push
aad
sub
cmp
cmc
mov
sti
ret
lcall
mull
lahf
dec
lahf
or
sub
in
mov
cmp
repz
mov
pop
dec
adc
mov
pop
cltd
mov
push
fldt
addr16
adc
pop
ja
rcll
in
ss
stos
aad
sbb
xchg
popf
xchg
ljmp
push
jbe
sub
stc
add
inc
pop
js
aas
adc
sbb
mov
outsl
cmc
and
xor
pop
rcl
dec
inc
dec
movsl
pushf
stos
int3
push
loop
dec
aam
cmp
ficoml
cwtl
pop
aaa
scas
js
sbb
sub
repnz
or
add
out
in
movsb
jge
inc
int3
cmp
mov
mov
sahf
push
call
loope
push
fnsave
mov
popf
sub
pop
movsb
sub
cmp
fwait
cmp
orps
pop
xchg
bound
sub
mov
lods
mov
adcb
shr
push
xchg
ret
jmp
xchg
std
popa
cmpsl
mov
ret
insl
xchg
daa
daa
mov
push
ss
test
cltd
mov
mov
push
mov
sub
adc
adc
cmpsl
and
les
mov
imull
in
out
xor
mov
sub
jge
movsl
xchg
sahf
sub
dec
or
outsb
xor
jge
mov
nop
jbe
and
test
pop
subl
xlat
lahf
sub
cmp
mov
fists
add
push
clc
jg
movsl
rolb
pop
hlt
pop
iret
nop
ret
sub
adc
dec
daa
lock
leave
dec
adc
fcmovb
test
imul
push
dec
hlt
pop
repnz
add
adc
pop
cmp
movsb
das
or
fisubrs
mov
lods
ret
out
mov
pop
test
orl
xor
pop
lock
clc
cmp
sbb
lods
sub
inc
jnp
xchg
jmp
inc
mov
pop
leave
mov
gs
sbb
add
mov
and
test
dec
xor
sbb
add
sbb
mov
lret
jg
cmp
pushf
mull
adc
adc
jno
ret
cli
pusha
popf
jg
xchg
stc
cmp
adc
lret
imul
inc
mov
cmpsb
pop
imul
xor
mov
inc
jns
je
mov
inc
or
add
push
add
cmpsl
mov
lret
jle
jb
mov
add
sub
ss
jo
fadds
xchg
sahf
inc
xlat
push
jmp
jg
dec
push
xor
fisttps
test
xlat
mov
mov
xor
mov
push
add
lods
aam
shr
push
into
dec
pop
sub
icebp
cmp
add
pop
ja
sub
cld
cmpsl
pop
cmp
sbb
ret
jno
adc
cmp
outsl
dec
cld
mov
pop
outsl
jo
sub
mov
pop
adc
mov
aam
sub
fidivl
cli
ja
stos
shl
lret
inc
imul
dec
cmpsb
outsb
scas
xchg
mov
inc
ss
insl
xor
jns
and
stos
pop
sbb
or
and
pushf
mov
inc
mov
mov
outsb
loop
nop
popf
or
or
push
jle
fxam
bound
adc
pop
add
jp
or
inc
idivl
pop
sahf
in
outsl
mov
mov
sub
and
pop
mov
scas
movq
xor
pop
gs
cltd
sbb
repz
andb
xor
cs
push
push
cmp
pop
mov
rolb
addr16
les
sbb
sub
jge
and
xor
test
aam
pop
out
dec
int
mov
into
test
mov
adc
mov
outsb
movsb
test
xchg
jmp
cmpsl
test
mov
ds
cmp
aaa
sub
sbb
imul
int
lahf
or
aam
push
in
push
fadd
lret
jl
mov
push
mov
into
movsb
jne
scas
pop
sub
cmp
push
popa
xor
int
push
test
mov
testl
ficompl
sbb
add
ret
ljmp
pop
cmpsb
sub
add
xchg
into
mov
or
mov
push
sub
xlat
sub
and
sbb
sbb
xor
xlat
and
stos
stos
cltd
mov
daa
push
adc
adc
adc
mov
jbe
inc
add
or
lret
pop
mov
sbb
test
dec
loope
lcall
mov
mov
js
stos
and
add
inc
mov
push
jecxz
fimuls
mov
push
popf
jno
and
lods
sub
testb
mov
and
mov
add
cld
subl
lods
jnp
jo
pop
adc
imul
ret
imul
or
fstpt
aam
je
rorb
js
xor
xlat
cmp
and
jge
stos
fstps
inc
loopne
cmc
in
inc
test
push
add
insl
imul
jge
stos
je
pop
pop
nop
sbb
mov
mov
mov
add
bound
in
and
push
loop
aas
bound
add
addr16
mov
sbb
clc
dec
and
mov
sub
cmc
movsl
cmc
or
xchg
out
arpl
xchg
jnp
add
ja
stos
push
mov
and
out
repz
xchg
jno
inc
and
out
cmc
sub
and
jmp
xor
daa
in
int
rolb
jmp
mov
fs
sub
dec
mov
mov
lahf
into
bound
mov
in
mov
jno
fisubrl
cmp
add
push
mov
rcrl
mov
in
lret
xor
mov
mov
adcb
add
dec
xlat
mov
clc
cld
into
or
xlat
cmp
adc
adc
out
and
pop
pop
imul
bound
in
and
ret
sbb
push
cwtl
iret
into
mov
mov
test
and
jne
push
enter
jae
insb
push
mov
ljmp
js
sbb
lds
repnz
cmp
aam
sub
xchg
xorl
jl
cltd
sbb
in
dec
pop
call
neg
out
mov
inc
aam
push
scas
adc
lret
movsl
pop
jb
stc
call
daa
xchg
rolb
sub
mov
and
cmp
ds
loopne
test
inc
in
jl
pop
sbb
pop
int
jle
inc
inc
fstl
cmp
aad
aad
negl
clc
fdivs
dec
sub
adc
ja
inc
jp
in
sub
xor
xor
stos
dec
ffree
xchg
or
push
scas
jl
and
out
movsb
jae
jno
cs
mov
rorb
adc
out
jg
lds
jg
ljmp
or
xor
out
push
daa
pop
add
std
outsl
outsb
andb
lds
cmp
sbb
sbb
pop
pop
and
add
cli
js
and
mov
cmp
jge
fistl
pop
push
or
add
sbb
pop
jl
jmp
and
lret
mov
mov
mov
sub
aad
bnd
inc
pop
sbb
dec
int
popf
out
adc
sti
movsl
fidivl
push
sub
xchg
or
clc
xor
aaa
xchg
and
add
jle
aaa
xchg
dec
test
dec
inc
mov
outsl
push
xor
push
movsb
mov
sub
in
cmc
popw
add
sbb
sub
test
xor
pop
popa
pop
push
in
data16
mov
ficomps
jbe
fmuls
mov
cmp
je
pop
lods
enter
inc
inc
sarl
lret
subl
add
int3
jnp
jno
or
cmp
jb
movsb
inc
jp
outsb
mov
lods
pop
aas
push
lods
sbb
or
int
nop
orl
test
xor
daa
xchg
add
idivl
bound
stos
out
popa
mov
out
subl
dec
pusha
add
add
mov
xchg
xlat
jbe
dec
idivl
mov
push
out
loopne
dec
cli
lds
pop
orb
mov
adc
cmp
adc
or
push
jne
aas
mov
scas
mov
jle
lea
cmp
call
icebp
pop
lahf
aam
ret
mov
xchg
outsl
cld
addl
aas
insb
cmc
outsb
lock
jle
setns
and
mov
imul
loop
pop
lcall
ret
aad
mov
add
mov
dec
xorb
lret
cld
xchg
sub
sbb
ror
or
mov
pop
cmp
iret
pop
cmpsb
jmp
cmp
lock
test
bound
sbb
fistpll
mov
and
loopne
je
push
push
jp
icebp
lahf
and
pop
imul
lcall
mov
and
or
cli
data16
push
dec
adc
shll
or
out
cmpsl
add
into
mov
pushf
add
repnz
inc
rol
in
in
dec
fnstcw
out
jae
imulb
test
sarl
dec
mov
iret
outsb
mov
outsb
test
mov
xchg
ret
clc
cmc
fcompl
loope
mov
in
fildl
lahf
mov
mov
leave
popf
jb
push
out
fwait
ljmp
xchg
addr16
jmp
fistps
in
shll
lods
xchg
xor
push
data16
ret
adc
inc
lahf
clc
jns
dec
or
jb
jmp
sub
add
and
jle
jns
xlat
push
bound
iret
dec
add
enter
fstps
lret
jbe
cmpsb
bnd
adc
cmc
movsl
fisttps
mov
daa
lahf
imull
aaa
stos
or
sbb
loop
mov
out
stos
sub
repnz
push
jecxz
cmpsb
leave
xor
sub
mov
insl
and
repnz
nop
cmc
mov
mov
test
divb
sub
es
ret
fcompp
or
pop
jb
inc
dec
and
in
add
adc
sahf
jmp
mov
inc
push
dec
lcall
lock
jle
xor
xchg
mov
lea
jno
push
pop
mov
pop
cmp
pop
xorl
sub
dec
xorl
inc
mov
mov
out
loope
xchg
cmpsb
sub
push
stos
push
lods
xor
xchg
test
xor
fildl
das
lea
pop
test
xor
ror
ret
xchg
sub
fwait
xchg
test
lahf
test
adc
into
mov
push
and
mov
lcall
nop
out
xor
mov
xor
loop
and
fnstcw
or
adc
cwtl
add
dec
sub
cli
sbb
stos
sbb
lods
or
imul
add
push
arpl
sbb
fcomps
cmpsl
inc
insl
xlat
stos
mov
sub
ret
jb
jmp
xlat
or
imul
jne
hlt
mov
sub
fs
sahf
jmp
push
sbb
shr
mov
popf
test
test
jns
faddl
je
sbb
sbb
or
jae
jle
xor
cmp
jmp
movsl
pop
test
inc
jb
push
xchg
ret
repz
add
jo
fistps
ficoms
pop
mov
inc
jnp
inc
stos
lcall
sbb
das
aaa
test
outsb
cmpsb
xor
les
push
push
xor
sbb
out
outsb
sub
and
clc
mov
mov
jno
ja
push
mov
sub
pop
cmc
push
pusha
jno
pop
mov
nop
pushf
arpl
jno
in
pop
mov
inc
mov
inc
mov
xchg
xor
sub
ljmp
lds
inc
pop
pop
mov
repnz
xchg
inc
pop
adc
xchg
xorl
lods
inc
xor
sub
add
mov
test
test
jno
jnp
fxch
gs
dec
cli
insl
sbb
xchg
imul
nop
stc
dec
jecxz
or
leave
out
je
sbb
rcll
or
stos
ljmp
movsl
int3
movsb
inc
or
test
je
movb
outsb
mov
fists
lods
dec
movsb
push
push
jle
push
adc
sbb
mov
mov
sbb
cmp
rcrl
fistpll
inc
mov
arpl
jbe
jbe
dec
xchg
aas
add
jecxz
mov
sbb
popf
les
xchg
addr16
lret
scas
aad
pusha
sub
xor
lock
aad
adc
adc
push
mov
mov
push
or
jmp
je
mov
inc
jp
scas
data16
inc
add
out
nop
popa
push
pushf
mov
lods
arpl
inc
mov
xchg
sbb
dec
test
cwtl
mov
sbb
push
int
sub
mov
fidivs
call
and
outsl
mov
into
frstor
cmp
dec
or
cmp
dec
push
adc
add
fmul
test
out
in
push
or
arpl
pop
repz
adc
shll
xchg
aam
out
push
mov
xchg
or
outsl
sub
daa
jg
jmp
ss
adc
lret
lea
scas
mov
cmp
pusha
jp
jl
stos
sti
test
lea
cmp
js
adc
xchg
fists
out
push
cld
mov
movsl
sarl
and
movsb
insl
xorb
dec
mov
adc
sub
insb
or
or
cmp
sub
fdivrl
in
mov
lods
lret
pop
cmp
sbb
jnp
imul
dec
fdivrl
in
mov
lods
lret
pop
aas
int3
sub
sbb
jnp
imul
dec
fdivrl
in
mov
lods
lret
pop
cmp
sbb
jnp
jmp
fldt
faddl
push
fwait
in
cld
in
jae
adc
and
xor
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
push
pop
inc
dec
je
fs
adc
or
cwtl
fsubs
hlt
clc
in
xchg
cwtl
test
xor
dec
sbb
push
xor
and
aam
les
aam
test
in
pop
mov
out
mov
or
cmp
mov
out
pushf
pushf
sub
loopne
clc
test
pop
or
je
or
jmp
loop
sub
inc
test
rcrl
add
push
mov
xchg
cmp
test
aaa
jno
sbb
in
fsubs
pop
stc
stos
add
pop
add
inc
fnstcw
pop
les
cmp
adc
jl
cwtl
and
mov
push
lret
mov
xlat
aad
les
repnz
inc
movsb
and
push
std
stc
xchg
call
sub
inc
lahf
hlt
pop
mov
je
inc
test
stos
into
fnstenv
jmp
in
test
dec
adc
out
ror
call
xlat
dec
mov
cmpsl
test
je
fs
xor
subb
fcomps
cmp
call
xchg
ss
add
sbb
jnp
push
inc
jbe
js
mov
subl
sbb
dec
push
js
sbb
popa
insb
rorl
mov
xchg
mov
in
sti
jmp
fstp
in
cmp
sub
adc
sbb
xor
and
aam
enter
call
mov
movsb
test
pop
inc
dec
je
fs
xor
and
aam
enter
call
mov
movsb
test
pop
loop
mov
movsb
das
fcmovnbe
push
fimull
xchg
sbb
cld
fisubs
mov
mov
lahf
add
push
dec
xor
mov
cmc
xchg
push
xchg
mov
and
mov
dec
cwtl
add
nop
sbb
dec
pop
loopne
mov
inc
mov
xor
loop
out
in
adcl
gs
or
mov
jmp
pop
inc
push
and
pusha
xor
push
mov
add
out
hlt
jo
lahf
xchg
push
lods
fsts
pop
leave
dec
movsl
fsubp
mov
stos
int
lock
jge
pusha
cmp
jp
jne
xor
in
fsubr
sar
dec
cwtl
add
aam
in
push
cmp
data16
push
mov
adc
arpl
inc
mov
adc
sbb
outsl
loope
out
movsb
or
push
pop
mov
sahf
add
or
std
jno
fildll
mov
sbb
rorb
dec
pusha
cwtl
loop
adcb
pop
stos
enter
sbb
xor
in
jge
xchg
mov
and
mov
push
mov
into
in
xchg
aas
push
pop
jno
xor
push
test
jecxz
mov
std
popf
jp
dec
call
xchg
add
addr16
mov
and
cwtl
mov
in
dec
ret
push
ljmp
not
sahf
out
pop
sub
rolb
out
pop
daa
addb
nop
cmp
sbb
pushf
adc
cwtl
xor
cld
cwtl
or
fidivrs
hlt
fidivrs
cs
repz
adc
je
mov
push
jae
adc
lret
xor
out
test
adc
mov
pop
adc
gs
push
or
lock
sub
add
out
and
push
adcl
mov
notl
add
nop
xchg
mov
mov
idivl
ret
push
or
ss
cld
cmp
pop
pusha
pop
int
sbb
sbb
cli
push
xchg
add
push
xchg
sub
gs
out
adc
stc
fdivl
out
aam
sub
aaa
xchg
ss
pop
push
pop
cmc
pop
cwtl
sbb
arpl
adc
repnz
push
std
dec
push
jb
fmuls
push
stc
arpl
mov
pop
loopne
jbe
mov
mov
fisttps
or
addl
cmp
jbe
add
ret
les
fs
dec
fwait
cmp
mov
sbb
push
push
movsl
lret
mov
sub
sbb
dec
testl
movsl
add
inc
jg
loope
push
jno
mov
mov
mov
xor
cli
dec
push
jmp
dec
lcall
adc
or
push
pushf
mov
cmc
leave
pop
adc
jno
lret
push
push
push
or
lds
int
jo
cwtl
test
aam
xor
adc
ljmp
es
rorl
mov
jno
mov
iret
movsb
or
xor
loopne
or
mov
in
outsl
mov
adcl
pop
ljmp
test
lret
cwtl
and
mov
aam
xchg
push
mov
pop
fdivrs
xchg
dec
bound
xchg
lea
fldl
push
inc
addr16
or
rcll
aad
mov
cmp
out
or
ret
dec
cltd
daa
sti
push
sbb
fists
mov
inc
push
mov
mov
pop
jmp
jmp
test
icebp
xor
jl
std
xor
jge
inc
aas
cmp
or
in
lret
sbb
mov
jecxz
test
dec
lock
push
and
sub
cld
in
or
int
ror
inc
jno
inc
rorl
push
jbe
shll
inc
push
iret
adc
scas
into
nop
mov
jae
push
and
call
sbb
insb
and
adcb
enter
popf
sbb
adc
incl
and
and
call
out
sahf
xor
mov
jle
cmp
xor
xchg
fistpl
imul
mov
mov
cmpb
push
cmpsb
mov
mov
js
push
pop
loop
mov
add
into
scas
push
daa
scas
push
outsl
add
ss
jo
pushf
out
push
arpl
and
xchg
std
push
loopne
mov
sbb
adc
jb
jmp
mov
jg
mov
test
lret
mov
ret
sub
lds
mov
aad
or
into
loop
sub
repnz
sbbb
stos
test
add
lcall
mov
fbstp
cld
cmp
or
imull
xchg
mov
push
sbb
cmp
xor
sbb
adc
ljmp
pop
push
repz
mov
movsb
and
push
fcomp
leave
jnp
jno
and
mov
dec
mov
or
xchg
je
dec
adcl
adc
mov
mov
xchg
dec
and
mov
jg
fs
xor
es
dec
xchg
call
lea
cmc
xchg
push
imul
insl
rclw
and
or
out
mov
push
je
add
xchg
inc
push
sub
nop
mov
add
test
xor
and
adc
inc
mov
jno
fmull
mov
inc
mov
or
mov
add
push
xchg
shlb
movsb
and
pop
stc
adc
cmp
popf
loopne
fwait
in
sbbb
stos
adc
xchg
adc
mov
xor
jae
mov
test
fistl
stc
jle
aam
or
mov
mov
lcall
cltd
mov
push
jle
fdivl
pop
outsl
push
sbb
out
push
sub
pop
fisubrs
or
rcll
add
pushf
sbb
xor
cmpsb
and
cmpsb
pop
sbb
rcll
mov
bound
leave
sub
fnsave
xor
roll
out
sahf
jno
mov
aaa
jge
test
mov
repz
sub
add
je
dec
xor
repnz
cmp
push
cli
adc
inc
into
aad
mov
in
jl
mov
dec
stc
les
jnp
icebp
pop
dec
push
push
lods
pushf
sbb
xchg
jnp
popa
aas
js
test
in
loopne
dec
inc
fdivs
dec
lods
lret
pusha
sub
test
cwtl
in
dec
push
in
sub
cmp
adc
clc
mov
jmp
lret
jecxz
add
sarb
pop
test
pop
jnp
leave
mov
addb
cmp
sahf
loopne
inc
imulb
les
push
inc
cs
stos
ds
gs
xchg
lods
jb
gs
inc
lcall
repz
sbb
mov
jo
mov
clc
pop
push
sbbb
arpl
das
lret
pop
mov
out
nop
test
adc
loope
nop
jg
push
push
imul
es
and
pop
outsb
leave
sahf
xor
outsb
mov
loope
cmpl
sub
arpl
jns
cmp
int
lods
push
rcrl
cltd
bound
adc
stc
jmp
sub
push
add
dec
pop
adc
add
cwtl
push
sub
pop
add
jl
sbb
inc
sti
push
jp
push
lcall
test
test
icebp
ds
push
sbb
jecxz
push
hlt
xchg
add
dec
cld
pop
popa
je
jmp
cld
rorl
mov
subl
loop
lods
fwait
loope
ret
pop
mov
test
push
cmp
je
aas
lds
xchg
data16
sbb
mov
sub
pushf
xchg
mov
add
stos
push
les
cmc
xlat
in
push
cmp
sub
sub
iret
pop
decb
xor
aad
cld
enter
jb
adc
pop
mov
pop
dec
ret
enter
aaa
iret
cmp
les
xor
stc
jno
das
and
cmp
mov
push
mov
or
pop
and
sbb
cmp
pop
xor
test
test
in
in
jecxz
dec
pop
mov
pop
dec
add
push
sahf
arpl
les
lock
dec
push
inc
insb
pop
dec
lret
iret
push
repz
cwtl
xor
divl
jne
or
shll
jb
fs
iret
sub
and
pop
cmp
lds
movsl
and
mov
xor
scas
cmp
nop
dec
popa
pop
lret
jl
push
inc
mov
rcr
push
push
fsubr
lret
sub
dec
into
jne
push
inc
icebp
mov
xchg
jo
loope
jg
js
pop
mov
test
in
pop
fsubrl
lcall
xor
into
mov
dec
repnz
aas
add
lock
pushl
mov
xor
pop
test
xchg
es
lea
mov
or
bound
aam
lods
dec
add
cltd
fst
cmp
jmp
popf
hlt
divb
pop
ljmp
sub
xchg
cmpsl
push
fdivr
push
jb
imul
clc
bound
lea
in
mov
dec
cs
or
jns
pop
pop
clc
push
xchg
stc
cld
mov
adc
jmp
dec
in
inc
ss
repz
jle
jne
and
or
shl
test
bound
into
or
mov
mov
jle
xchg
jns
add
pop
or
push
daa
andl
push
sbb
xor
movsb
fdivrl
mov
xor
jg
dec
cmp
and
jl
jecxz
iret
pop
and
dec
xor
lock
jl
cmpl
push
inc
xchg
notl
push
add
jbe
popf
adc
jo
pop
insb
outsb
lcall
adc
cmova
popf
inc
push
scas
dec
xor
hlt
xor
push
imul
fdivrs
rcrl
dec
sbb
jp
push
push
xchg
add
sbb
adc
adc
mov
sub
inc
pop
in
sbb
jne
test
adc
inc
and
jno
xlat
xchg
test
ljmpw
loope
jg
test
rcl
mov
xchg
mov
in
xorl
mov
pop
xchg
ret
fwait
repnz
inc
int
mov
into
bound
addl
loope
daa
adc
andl
xchg
fwait
scas
movsb
inc
mov
cmp
sbb
lret
mov
mov
mov
jno
mov
outsl
aad
sub
mul
aam
out
dec
push
xor
negb
cld
fucomi
aad
aaa
out
imul
add
xchg
insb
inc
outsb
rorl
testl
mul
int3
jp
and
int
cmc
jb
into
push
xchg
adc
cltd
add
pop
shll
lret
and
cmp
jbe
call
sbb
jne
loop
adc
clc
mov
orb
jb
inc
mov
inc
mov
cmc
cli
lahf
xlat
mov
stos
add
je
inc
sbb
push
push
mov
add
pop
sub
jecxz
outsb
and
xor
and
fbld
sub
fucom
cmc
jp
push
inc
dec
loope,pt
fisttps
mov
pop
fisttps
in
test
pop
aaa
cmp
orb
xchg
shl
sbb
mov
jo
mov
sti
pop
addb
mov
xor
test
pop
ljmp
es
push
xchg
cmp
sbb
cwtl
adc
fwait
mov
dec
mov
pop
and
int
mov
sub
dec
jae
fildl
xchg
or
jo
fs
adc
jl
sbb
ficoml
or
xchg
cli
push
int3
jl
sub
imul
sbbl
sub
div
int3
ja
out
pushf
shl
mov
and
fstps
sbb
pop
call
cmp
pop
sub
or
cli
mov
mov
jecxz
lret
xchg
orb
mov
pop
push
sub
out
fs
mov
sub
sub
mov
pushf
cmc
inc
jmp
and
aam
enter
sbb
and
jmp
xor
addr16
jp
adc
cmpsl
jo
pop
je
mov
aad
or
movsb
aas
mov
ss
mov
loop
imul
sbbl
adc
loope
pop
add
clc
dec
mov
repnz
inc
and
cmpsb
push
pop
fs
push
rcrl
bound
mov
xchg
ret
invd
shl
das
jl
sbb
dec
and
fstp
std
fwait
adc
jae
or
aad
mov
add
ds
mov
mov
mov
sub
jno
xlat
and
repz
aad
lods
sub
les
xchg
and
push
movsb
xchg
fisttpl
sbb
xor
pop
shl
pop
add
push
int3
fs
lret
push
scas
push
inc
add
insb
and
ja
pop
fs
aas
out
pop
push
mov
push
inc
add
lods
sbb
inc
setne
popf
pop
out
push
inc
mov
in
pop
xchg
jbe
test
imul
adc
ljmp
pop
popf
pop
mov
or
dec
inc
divb
push
xchg
xor
outsl
xor
adc
mov
add
js
pop
inc
xor
or
int3
pop
xchg
insl
adc
mov
or
fdiv
or
dec
enter
inc
sbb
push
aas
xor
leave
inc
mov
adc
scas
inc
rclb
loop
int
vpmaxub
sub
test
push
test
sti
xchg
lcall
insb
repnz
adc
mov
jmp
push
ffreep
orl
cmp
jmp
push
jge
aaa
sub
rdtsc
adc
cs
mov
jge
jp
inc
cld
das
incl
imul
into
inc
out
orb
pushf
sbb
xchg
es
jne
movsb
push
xor
call
inc
sbb
std
push
pop
xchg
jg
aad
fstpt
sarl
fmull
loopne
xchg
arpl
imul
test
push
into
jbe
fadds
out
bswap
xor
stos
fs
xchg
aam
mov
sbb
inc
mov
lret
xchg
mov
loopne
xchg
shlb
adc
inc
fwait
push
scas
sbb
jecxz
lods
movsl
xor
notb
pop
negl
jno
cltd
mov
add
jne
push
ud1
pop
pop
addl
push
lea
mov
dec
loopne
or
add
mov
imul
add
imull
xchg
and
in
jb,pt
scas
fsubrs
les
add
xor
sbb
mov
popf
rcr
and
add
adc
jb
mov
mov
dec
jp
pop
and
pop
mov
add
mov
mov
mov
cmp
mov
data16
push
enter
pop
pushf
mov
jp
sti
cltd
xchg
mov
and
cmp
mov
lret
aaa
sbb
lods
out
scas
loopne
addr16
lock
sbb
out
sub
test
insl
popf
dec
dec
in
jecxz
jl
pop
xchg
mov
xor
inc
jl
adc
dec
xor
xchg
jl
ja
mov
jge
mov
nop
sbb
outsb
jnp
push
mov
add
pop
lds
fsubl
mov
stos
test
dec
xchg
bound
sbb
and
out
imul
inc
sbb
fbld
and
mov
andb
ljmp
xchg
adc
cmp
jle
stc
js
loope
movsl
out
rep
xchg
or
shr
aas
fcmovne
es
vprotq
xchg
std
imul
push
leave
pusha
stos
xor
xchg
cmp
inc
ljmp
sti
sbb
nop
adc
lods
xchg
xor
push
jae
ja
stos
fdivs
in
xchg
arpl
in
dec
pop
dec
sub
out
mov
jnp
add
mov
jb
mov
ja
sub
cwtl
xchg
shlb
cmp
xor
lock
daa
sbb
inc
jg
popf
push
stos
fcmovnbe
or
icebp
jb
aaa
into
mulb
push
daa
mov
sbb
mov
loope
mov
add
xchg
out
push
aam
inc
push
jp
mov
mov
push
loopne
frstor
pop
or
sbb
push
xorb
rorb
xchg
cmp
arpl
sbb
jo
inc
lds
jg
movsb
jg
jg,pt
sub
adc
ja
lea
lds
mov
gs
testb
or
int
sbb
inc
fdivl
lret
popa
mov
jge
adc
sub
push
xchg
fnstenv
decl
clc
pop
ret
jl
imul
stc
divb
ret
out
jecxz
mov
div
int3
dec
aam
aam
mov
or
fisttpl
inc
push
dec
jp
stos
mov
int3
push
xor
push
out
xor
lcall
push
or
pop
mov
sti
stos
inc
cmp
sbb
aaa
xchg
cwtl
xchg
xor
in
push
leave
sub
stc
jle
iret
clc
mov
or
xor
and
imul
mov
mov
addr16
jo
in
test
rolb
lahf
imul
cmp
sub
jb
sti
push
sub
mov
filds
push
test
sbb
iret
jecxz
inc
movl
sub
add
jnp
stc
adc
adc
lods
jmp
cwtl
cmc
xchg
push
int
cmc
adc
or
inc
sbb
push
mov
xlat
lea
cltd
cmp
mov
mov
mov
sub
test
mov
icebp
psllw
mov
cs
sahf
mov
lods
das
dec
mov
iret
daa
inc
pop
outsb
fwait
pop
pop
jp
adc
ficomps
aas
or
sub
xchg
push
cld
push
mov
mov
add
xor
mov
sub
xchg
push
mov
pop
add
mov
call
push
mov
icebp
pop
jl
push
popa
orl
fwait
popa
nop
out
or
fdivp
stc
shlb
mov
dec
add
adc
xor
mov
aad
or
mov
sahf
lahf
add
filds
jo
ljmp
mov
or
push
test
pusha
loop
pop
mov
lret
mov
je
mov
fstpt
push
movsb
and
lods
addr16
mov
mov
dec
scas
mov
cmc
xchg
gs
mov
rclb
mov
xchg
rorl
hlt
inc
pop
call
stos
mov
in
faddl
mov
ret
sub
cmp
daa
fisttps
aam
push
mov
test
xchg
gs
ret
insb
daa
pop
or
jnp
stc
daa
daa
xor
aad
imul
enter
out
cmp
inc
das
repnz
orb
xchg
pop
clc
cmp
push
in
cs
or
test
cmp
stos
pop
cld
pop
xorb
add
push
add
push
sbbl
scas
fdivs
sub
mov
es
cmp
rorl
adc
nop
out
sub
or
mull
add
mov
ficomps
mov
lret
int3
mov
fdivp
push
xor
ja
xor
or
mov
inc
jge
sbb
mov
addr16
inc
adc
stos
cmp
jo
movsb
js
pop
or
repz
sbb
outsl
pushf
int3
clc
push
and
pop
imul
sub
enter
jg
pop
cmpsb
fsubr
mov
mov
sub
push
aad
inc
lods
mov
xor
and
dec
sbb
and
jge
mov
shll
cmp
int3
pop
dec
rcl
adc
int
cmpl
int3
jne
sub
xchg
push
movsl
idiv
lcall
xor
and
pop
pop
add
cmp
icebp
incb
xor
or
adc
xchg
xlat
and
push
inc
pop
shrl
repnz
lock
addr16
icebp
js
mov
adc
je
gs
mov
ret
rcrl
loopne
mov
mov
fwait
mov
cli
dec
aas
lcall
pop
or
es
mov
in
stos
ja
outsb
adc
mov
test
jb
addb
or
call
mov
test
jp
mov
fwait
cmp
fsubrs
jmp
xor
aad
out
sbb
or
mov
jno
jg
and
ljmp
inc
shr
push
int3
movsb
ljmp
fwait
addr16
jns
stc
orl
pop
inc
jns
inc
xor
mov
leave
mov
stc
sbb
pop
sahf
cmpsb
adc
aas
push
pop
mov
inc
cld
jmp
lcall
jl
jb
testl
loopne
xor
inc
xchg
mov
sbb
movsl
adc
xchg
clc
xchg
repnz
int
dec
xor
dec
cmc
and
dec
sbb
push
dec
pusha
pop
cli
imul
dec
std
xchg
xchg
and
movsl
iret
xor
ljmp
cmp
cmp
fldt
fs
xor
and
aam
enter
call
mov
movsb
test
pop
inc
dec
je
fs
xor
and
aam
enter
call
mov
movsb
test
pop
je
adc
fs
xor
in
aam
enter
call
mov
dec
test
pop
sbb
js
push
xor
movsb
sub
fdivrs
bound
in
jecxz
or
dec
inc
pop
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
pop
imul
mov
movsb
sbb
data16
add
adc
or
and
test
movsl
fs
push
xchg
push
test
jne
add
hlt
xor
add
adc
and
aaa
xchg
xchg
movsl
je
fs
lea
lods
insl
mov
cmp
neg
mov
and
adc
fsubl
push
in
sub
sbb
or
push
and
sub
sbb
mov
mov
lds
gs
ret
cmp
jle
insb
or
sub
sbb
and
rol
adc
cmp
enter
sub
mov
dec
adcb
subb
mov
or
jp
inc
test
hlt
add
inc
mov
fildl
pop
mov
movsl
lods
stos
gs
add
aad
xor
cltd
sub
jno
and
cmp
leave
sub
movsl
fwait
push
sub
and
cmp
hlt
xor
pop
test
inc
mov
xchg
movsb
bound
and
or
sbb
sub
lea
je
add
icebp
xor
cmpb
cwtl
pop
mov
popa
fwait
dec
jmp
je
or
push
test
les
jno
jnp
dec
nop
jo
insl
aad
mov
es
aad
mov
sub
loopew
aad
sarl
adc
in
adc
add
xor
and
push
xchg
inc
movsl
je
fs
xchg
push
test
jne
add
hlt
xor
add
xor
and
push
xchg
inc
movsl
je
fs
xchg
xchg
add
orb
fwait
sub
dec
jle
iret
pop
and
vcvttss2si
inc
and
xchg
movsl
pop
lret
cltd
and
leave
add
jle
jbe
mov
sbb
in
add
inc
xchg
xlat
mov
movsb
scas
dec
sub
mov
cmp
dec
test
mov
movsl
and
adc
lret
outsl
xor
inc
adc
mov
ror
add
lret
pop
and
call
or
loope
dec
or
imul
imul
fcomps
xorl
mov
inc
mov
je
ja
out
dec
mov
xchg
insl
mov
jb
dec
das
popa
ret
scas
and
pminub
mov
sbb
mov
push
cmp
and
pop
xlat
shll
pop
xchg
mov
jb
xor
in
in
movsb
gs
xchg
ds
mov
fucom
data16
xchg
xchg
mov
add
sub
mov
adc
cmovne
pop
push
push
sbb
mov
lea
fstps
rorl
mov
sub
ds
incl
repnz
xchg
jmp
in
mov
jnp
mov
int3
popf
imul
imul
leave
inc
jp
es
aad
out
hlt
hlt
jge
pop
fadd
jae
xchg
frstor
push
jnp
stos
lods
mov
inc
mov
sub
sbb
sbb
das
rclb
cli
xor
lcall
jnp
lcall
popf
aad
fldt
inc
popa
add
ljmp
shr
xor
cmp
outsl
sub
mov
cmpsb
add
fistpl
int
hlt
xlat
ss
cltd
mov
dec
rcrl
fcmovbe
sub
stos
xor
or
or
imul
jns
push
push
cltd
or
mov
icebp
dec
lret
inc
xor
push
cmp
cmpsb
sub
in
notb
or
inc
loop
xchg
pushf
jno
stc
hlt
mov
adc
and
push
sub
enter
or
xchg
scas
push
fwait
test
and
pop
imul
inc
mov
adc
loopne
dec
xchg
in
add
ds
jp
jg
fnstsw
imul
sbb
jmp
leave
into
test
fistps
push
daa
cli
cmp
adc
addr16
pop
aaa
fldt
pop
rol
mov
pop
dec
pop
dec
test
leave
or
clc
jbe
fistps
bound
jno
sbb
fsubrs
add
aad
nop
jge
imulb
je
movb
xor
das
jnp
xchg
push
dec
xor
ja
and
lds
mov
mov
mov
in
lock
ja
jg
add
xchg
xchg
and
int
sahf
or
mov
mov
ja
inc
mov
mov
je
das
mov
inc
push
rorb
movsl
lods
fildl
std
imul
adc
mov
jge
adcb
int
lcall
add
jb
push
pop
jbe
fcomi
mov
or
leave
or
or
notb
gs
and
push
push
into
and
bswap
and
sub
and
mov
cmp
or
mov
dec
lods
outsl
adc
addr16
outsl
ss
push
sub
adc
jb
repz
icebp
mov
pop
xor
cmp
push
in
sbb
test
lods
addr16
jecxz
cld
mulb
subb
dec
pop
xchg
loop
fdivrs
mov
sub
pop
jg
dec
xchg
cli
pop
fiaddl
mov
lea
mov
aaa
mov
enter
sbb
insl
add
adc
dec
push
lea
mov
popf
add
xor
or
xchg
fidivrl
lret
cmpsl
in
in
cmp
jmp
mov
add
pushf
fs
es
cs
movsl
popl
fstps
and
cmp
lock
sbb
dec
das
xchg
cmp
cmc
mull
jae
mov
mov
out
pushf
out
push
lea
loop
xchg
mov
inc
cwtl
iret
and
jbe
sbb
xchg
filds
xchg
fstpl
leave
cwtl
push
sbb
mov
jge
push
mov
xor
lahf
bound
mov
cmp
pop
xchg
nop
jmp
popa
fimuls
xor
jge
add
jge
mulps
mov
mov
cmp
iret
pop
xchg
jns
stc
inc
inc
insb
fsubr
mov
out
mov
sbb
adc
jns
in
sbb
jp
adc
outsl
mov
dec
nop
jne
xchg
jp
inc
test
mov
xor
pop
leave
inc
clc
stos
jno
fwait
pop
or
pop
bound
pusha
fwait
das
pushf
jnp
scas
loopne
sbb
pop
lods
dec
cmpsl
roll
add
orl
jmp
fwait
pushf
out
add
cltd
enter
push
adc
mov
outsb
or
movsl
lods
idivl
xchg
xchg
ja
sarl
shrb
les
jae
jmp
inc
pushl
push
mov
inc
ljmp
cmp
mov
loop
pop
sbb
or
mov
aas
mov
test
aas
rclb
xor
or
mov
sti
jmp
loope
fmull
jb
ret
mov
xchg
ds
cmp
es
pop
pop
into
mov
cltd
mov
push
mov
out
dec
popa
jno
push
cmp
sub
mov
enter
std
arpl
adc
cmp
shr
scas
and
dec
into
jmp
sbb
inc
outsl
jns
inc
fbstp
mov
fsub
enter
lret
std
push
movsb
fnsave
fwait
rcrl
insl
inc
rcl
inc
gs
jge
sub
jecxz
jmp
negl
xchg
rcl
ljmp
out
mov
iret
dec
push
inc
adc
dec
mov
sbb
iret
mov
mov
je
inc
jg
xchg
loopne
test
adc
adc
and
push
adc
dec
pop
mov
mov
jp
aad
cwtl
inc
test
dec
xlat
and
mov
push
lea
mov
mov
loope
sahf
fsubs
movl
outsb
dec
shll
sub
dec
sbb
pop
xchg
cmc
mov
fwait
repnz
mov
test
cmpsl
sbb
adc
loope
mov
pop
mov
mov
dec
sub
stos
fnstenv
xchg
mov
push
neg
mov
out
and
lods
mov
xchg
mov
pop
xorl
sub
push
movsl
cmp
add
stc
aad
cwtl
jp
push
cs
xlat
loope
je
movsb
fimull
pop
inc
aaa
dec
dec
int
mov
ja
xchg
leave
jo
or
std
dec
rolb
xor
mov
gs
mov
push
xchg
push
jno
mov
ljmp
movsl
cmpsb
aad
push
sub
icebp
jle
sbb
add
pop
and
or
or
jp
mov
andl
sub
movsl
scas
or
fcompl
push
cmc
jmp
push
pop
jb
mov
lahf
cmpsb
leave
mov
fnstsw
std
inc
sbb
push
aam
fistps
leave
pop
cltd
test
inc
mov
sbb
in
add
shl
sbb
fcompl
push
pop
sarb
aas
mov
mov
dec
jne
std
xchg
stos
push
mov
pop
mov
je
mov
and
inc
incb
cmp
repz
jno
and
fiadds
sub
mov
shrb
imul
ret
push
or
cli
mov
insb
scas
push
add
clc
xchg
das
dec
and
dec
test
xor
icebp
cmpl
out
stos
cmp
mov
xchg
sub
out
mov
cmp
mov
sbb
jnp
cmpsl
dec
loopne
dec
and
sti
adc
jo
sbb
inc
add
lcall
lidtl
mov
jnp
lret
scas
jl
shlb
test
mov
xchg
sub
jecxz
xchg
or
xchg
xchg
add
loopne
addl
sbb
xor
xor
stc
jge
adc
cltd
outsl
es
xchg
ret
and
and
jg
mov
test
scas
in
mov
arpl
call
popa
aaa
push
enter
aaa
pushf
mov
scas
sub
sub
cmpsl
sub
gs
movsb
cbtw
cltd
iret
or
das
pop
fnstenv
inc
sti
jo
shrb
std
movsb
js
shll
lret
add
lret
leave
cmpsl
dec
lds
repz
ret
add
mov
vpandn
or
dec
lcall
sti
push
jecxz
loope
xlat
add
mov
xor
lret
imul
ljmp
hlt
or
push
sbb
xor
in
cmp
idiv
test
cmp
sub
dec
shrb
inc
mov
out
test
inc
xor
push
arpl
ret
adc
hlt
push
pop
mov
pushf
pop
lea
xchg
clc
pushf
popf
pop
xchg
cmp
rorb
cmp
cltd
out
inc
push
popa
inc
cmp
push
aaa
pusha
shll
nop
shrb
push
cmpl
icebp
fisttpll
packsswb
jno
xchg
mov
sub
jl
sbb
push
leave
inc
dec
fcom
cmp
imul
inc
insl
sbb
xchg
jns
sahf
cltd
jle
sub
mov
inc
inc
in
cmpsb
test
scas
xor
xchg
adc
jnp
xor
cmp
push
shl
mov
rcl
mov
inc
cld
inc
js
loopne
fistpll
or
dec
int3
test
mov
push
jge
sarb
int3
mov
repz
lret
and
ret
ret
loope
jne
dec
aam
push
mov
pushf
sub
adc
jmp
sbb
insl
dec
and
inc
mov
mov
les
xor
xchg
sahf
push
cmp
mov
push
scas
test
int
test
jbe
push
sahf
xchg
ljmp
popf
mov
fwait
int
add
shrb
cmp
addr16
sub
mov
jmp
bound
or
loopne
pop
sbb
test
icebp
push
or
inc
dec
ret
repnz
mov
fisttpl
into
adc
ret
jmp
out
out
sbb
mov
push
cmp
lea
negb
xchg
inc
or
xchg
dec
xor
and
mov
xor
xchg
fadd
lods
cmc
dec
add
fstps
in
add
mov
pop
aam
push
mov
xchg
jle
lods
pop
aad
arpl
and
cmp
xchg
cltd
fs
cmp
leave
int3
pop
push
inc
pop
pop
or
xchg
adc
shll
pusha
outsb
ret
ljmp
movsl
out
push
adc
mov
in
lods
ret
popf
or
add
push
ret
cmpsb
mov
sbb
fwait
cwtl
mov
mov
push
jp
enter
imul
out
hlt
add
dec
test
add
or
mov
das
rolb
jg,pn
inc
es
adc
scas
push
std
lods
fimull
pushl
sub
or
or
inc
cmpsl
mov
and
push
mov
sub
sbb
pop
ss
out
sub
sub
inc
inc
lcall
in
loop
ss
aas
fnstcw
jp
out
cmpl
sub
std
cmpsb
ds
mov
xor
jns
xchg
je
xlat
jl
icebp
repnz
aaa
xor
xchg
rcll
add
jbe
imul
pop
mov
push
arpl
std
mov
push
hlt
in
sub
sahf
and
jns
jbe
imul
push
or
jge
aad
decb
push
sub
dec
popa
push
push
inc
xor
xchg
in
push
push
sub
inc
add
add
mov
outsb
sub
mov
xor
mov
cltd
pop
pushf
test
in
or
jnp
dec
sbb
xor
movsl
cltd
jp
xchg
movsb
cmpsl
inc
leave
lock
jge
pop
outsl
push
sti
mov
push
rorl
in
lret
popf
jg
mov
or
addl
shlb
sub
pop
jmp
imul
in
lahf
add
fldl
inc
sbb
cmp
mov
mov
pop
sub
ficoml
divl
fbstp
xor
fsubs
and
mov
cmpsb
js
jecxz
mov
sbb
orb
cmovb
mov
ja
int
sbb
jb
loopnew
shll
frstpm(287
mov
add
fwait
and
jle
cs
inc
sub
mulb
sbb
int3
ret
push
aad
cmp
sub
repz
pop
jno
dec
out
jae
out
cmp
pop
cmp
mov
iret
rcl
fbstp
adc
mov
mov
xor
pop
jl
lea
mov
cmp
sbb
xor
sbb
iret
das
es
jge
outsl
in
jg
aaa
aas
stos
sbb
cmp
shlb
dec
adc
and
arpl
leave
ja
call
mov
adc
xchg
lahf
aad
out
shr
frstor
cmpsb
lcall
dec
mov
dec
mov
dec
dec
or
movsb
in
sub
and
and
push
and
out
cmp
clc
movsb
xor
mov
cmp
xchg
pop
enter
mov
push
sub
int3
std
or
das
dec
sahf
xlat
scas
and
pusha
pop
insl
cmp
pop
xor
add
cmp
xor
jno
cmp
pop
push
iret
js
mov
inc
xor
cmp
clc
popa
sbb
ret
or
loopne
xor
scas
pop
and
hlt
lahf
add
pop
cli
sub
or
add
and
rcrl
sub
lock
jmp
aas
lret
fdivl
xchg
sub
mov
and
bound
fldl
pop
shrl
mov
popf
mov
stos
imul
fnstcw
js
push
lahf
std
xchg
or
jp
shl
ljmp
je
adc
jg
mov
cli
xor
icebp
dec
sbb
jo
inc
lods
add
push
adc
push
call
cmp
or
ds
hlt
dec
rolb
ja
cmc
outsb
pop
inc
mov
add
repz
lock
push
xorl
or
mov
dec
dec
pushf
push
push
xor
sub
pop
clc
jmp
inc
dec
insb
enter
rclb
sub
movsb
push
loop
notb
dec
enter
cmpsl
data16
loopne
lock
rcrl
mov
enter
mov
pop
inc
xor
sarl
pop
into
push
das
in
add
jb
inc
mov
or
notb
movsl
pop
mov
and
lods
dec
cmp
in
sub
cmp
jo
xchg
cmpsl
pop
mov
sub
movsb
fsubl
lea
xchg
ds
xchg
and
loopne
fmull
daa
das
testb
mov
inc
adc
cli
pop
cwtl
movsb
int
sub
xchg
pusha
fcomi
xor
jno
dec
mov
mov
fadds
lcall
je
sub
push
femms
movsl
or
fdivrl
inc
das
fnstcw
and
jmp
push
mov
inc
nop
xor
gs
outsb
lahf
mov
mov
push
ret
fcoml
xor
mov
sbb
testb
fdiv
in
mov
xchg
dec
xor
addr16
add
fwait
rclb
bound
popa
inc
fs
push
fidivrl
xor
lods
mov
movsb
xor
jge
lods
in
lods
pop
stos
mov
mov
mov
add
jg
jmp
test
xchg
pop
push
adc
or
add
cmc
out
lcall
and
add
adc
or
adc
add
roll
jecxz
aam
pop
aaa
rclb
das
mov
out
sbb
sub
imulb
nop
leave
shlb
adc
js
sub
std
adc
pop
mov
jmp
adcb
push
incl
cmp
ret
mov
cmp
jb
notl
insl
sub
cmpsb
and
cmc
jne
xor
push
dec
push
adc
cld
xchg
jno
push
sahf
call
testl
je
xchg
add
pop
xor
sbb
mov
add
pop
xor
mulb
push
popa
dec
push
je
test
lock
call
mov
insl
es
cmovae
les
xchg
pop
mov
test
repz
mov
mov
outsl
aaa
lcall
lds
add
push
mov
cmc
sbb
ret
ficoml
fs
imul
stos
xor
or
xlat
in
or
fcmove
fistps
xor
push
and
push
clc
enter
mov
mov
push
pop
fisubrl
jno
cld
mov
add
in
xor
shr
cli
es
or
mov
cmp
decb
or
mov
aad
or
or
jo
hlt
adc
inc
xchg
adc
push
out
sub
push
rorb
sub
outsb
out
xor
hlt
mov
xchg
mov
inc
enter
xor
pop
out
call
inc
mov
dec
out
pop
sbb
xchg
jo
nop
cmpsl
xor
bound
mov
sub
xor
test
aas
popa
or
adc
push
sub
stc
pop
cmc
mov
push
sbb
or
loop
pop
dec
and
addr16
or
adc
mov
pop
mov
or
xchg
call
call
xor
lahf
mov
daa
sbb
sbbb
dec
aas
dec
jmp
std
pop
jne
jo
mov
mov
lahf
jp
or
push
xchg
push
iret
fisubrl
cli
mov
and
ss
mov
pop
ljmp
dec
push
inc
adc
xchg
enter
adc
les
data16
bnd
pop
cwtl
sahf
add
cli
stos
int
ret
add
movsl
push
xchg
cmp
jmp
insl
movsl
cs
popa
mov
dec
flds
shl
sbb
inc
push
dec
jg
loop
out
cli
les
ret
int
js
jecxz
out
push
pop
mov
jne
xchg
gs
data16
ficoms
cli
or
cmpsb
movsl
roll
jns
adc
push
push
test
and
icebp
mov
mov
mov
lahf
cmc
stos
push
or
cmp
out
cwtl
enter
insb
cmpsl
lmsw
and
adc
dec
pusha
pushf
jmp
shr
cmp
das
jo
push
push
and
stos
filds
int3
pop
loop
xor
add
xchg
add
inc
hlt
repnz
lret
mov
in
dec
inc
jmp
sub
mov
jge
cmpsl
test
out
cmpsb
cwtl
cltd
stos
cmp
push
ret
xor
add
lahf
adc
jecxz
loop
loope
ret
sbb
add
fwait
xor
dec
dec
addl
xor
outsl
pop
cmp
js
mov
insl
or
add
cmpb
push
int3
push
cmp
pushf
sub
fmuls
dec
push
dec
cmp
enter
js
sub
or
jmp
inc
cmpb
inc
js
roll
dec
sbb
sub
pop
xor
sbb
sub
stos
cmpsl
aas
or
xor
cmp
leave
aad
lcall
xchg
dec
lods
stos
mov
nop
shr
lret
mov
pop
je
jp
cmc
lods
mov
dec
lahf
mov
movsb
dec
sti
sub
stc
sub
lock
inc
mov
lret
sbb
push
push
jmp
lcall
fmull
lods
mov
stos
fidivl
aaa
sbb
int
cmp
fidivs
bound
jmp
add
in
mov
pop
push
mov
cmp
push
sti
inc
mov
push
iret
add
shr
inc
enter
sbb
mov
jmp
push
pop
xchg
push
popa
dec
lea
xchg
stos
cmp
jbe
cmpsl
sahf
adc
push
out
mov
pop
mov
scas
cmpsb
mov
pop
lods
ja
imul
rorl
mov
or
leave
loope
jo
fldt
iret
sub
aas
sub
xor
push
cmp
jle
cmpsb
jl
sbb
xorl
bound
inc
out
outsl
inc
iret
or
inc
das
in
fwait
jo
xchg
faddl
pushl
mov
fcompl
not
push
arpl
adc
jge
xchg
fsts
xchg
ss
jns
dec
popf
out
cmpsb
or
aam
les
adc
add
xor
and
push
xchg
inc
movsl
je
fs
xchg
push
test
jne
add
hlt
xor
add
xor
and
push
xchg
inc
movsl
je
fs
xchg
push
test
jne
add
hlt
xor
add
xor
and
movsl
jne
fs
popa
test
jne
add
hlt
mov
cmp
scas
dec
xor
push
repnz
fwait
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
