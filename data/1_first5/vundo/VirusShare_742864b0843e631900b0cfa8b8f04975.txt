jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
dec
imul
sbb
ljmp
push
add
or
add
add
push
add
mov
je
adc
fadds
addb
jb
jne
cmp
add
mov
pop
add
and
into
add
add
adc
arpl
jbe
mov
les
jne
sub
popl
mov
push
add
add
add
add
mov
add
add
call
add
jne
mov
das
add
add
js
les
jbe
addb
jno
sub
lret
add
add
push
add
mov
and
adc
adc
add
mov
js
iret
add
je
mov
imul
add
add
add
imul
add
mov
jne
incb
test
add
les
push
add
add
add
add
push
add
mov
and
push
add
add
aas
add
or
add
inc
add
add
add
jbe
testb
add
std
add
add
add
add
add
add
add
mov
add
add
movsb
add
add
push
add
jne
mov
sub
outsb
add
add
repz
add
aad
xor
mov
mov
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
adc
jp
mov
add
add
add
add
jge
lcall
add
popl
aad
jno
imul
popl
mov
add
add
add
add
add
add
cmp
mov
add
add
add
add
pop
add
add
add
add
jne
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
cltd
add
add
add
popl
dec
add
jbe
mov
pusha
add
add
add
sub
add
add
add
add
add
add
add
add
call
add
add
mov
push
add
fiadds
inc
add
add
inc
add
jne
mov
sbb
daa
add
add
add
add
add
add
add
add
add
popl
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
push
add
add
add
add
add
daa
add
add
in
arpl
call
add
add
add
daa
add
add
add
add
add
xor
mov
addb
add
add
cmp
add
and
arpl
mov
mov
mov
add
add
add
pop
add
add
adc
lret
add
add
xor
add
add
add
add
add
jbe
pusha
add
sbb
into
add
mov
enter
bound
mov
add
jge
cltd
add
add
call
add
add
incb
push
add
mov
add
jne
aam
push
add
push
add
sbb
dec
fstpl
xchg
and
sbb
xchg
sub
stos
mov
sahf
ljmp
jbe
and
mov
dec
enter
jb
mov
in
xor
pop
pop
pop
ss
push
mov
aaa
pop
push
inc
cmpsl
daa
femms
push
insl
cmpb
inc
mov
push
scas
dec
test
push
push
sbb
cs
js
inc
lahf
jmp
scas
push
loopne
cli
cmpsl
loopne
push
dec
xor
inc
ss
dec
mov
add
jecxz
in
out
pop
jle
mov
pop
stc
inc
push
add
push
mov
insb
mov
cmpsb
lret
scas
inc
push
add
mov
mov
nop
scas
inc
pop
fwait
mov
mov
add
adc
fadds
push
inc
jae
push
rolb
pop
ret
daa
push
jae
mov
mov
movsl
divb
js
jb
lcall
mov
mov
jnp
mov
sahf
fst
add
in
fsubs
inc
push
bound
mov
jmp
lea
lahf
popf
addl
test
sbb
insl
xor
xor
xchg
jne
enter
hlt
in
sub
in
es
daa
imul
push
stc
ret
push
mov
xchg
xor
loope
sbb
pop
xchg
push
xchg
jmp
pop
inc
xor
push
push
mov
js
push
leave
cmp
xchg
inc
cmp
cmpsb
and
je
popf
gs
dec
pop
mov
pop
into
mov
pop
aad
scas
push
xor
mov
clc
ljmp
xor
jb
adc
jne,pt
stos
adc
in
in
add
mov
fcomps
inc
push
mov
add
in
popf
push
cmp
inc
imul
jno
es
ja
ret
loopne
sub
mov
fs
jle
icebp
arpl
cmp
adc
cmpsb
jecxz
push
cltd
test
mov
push
iret
hlt
dec
and
jb
dec
andb
xlat
popa
cmp
cmc
das
test
inc
movsl
mov
mov
daa
subb
mov
iret
mov
jge
xchg
mov
shlb
inc
sbb
rcr
lods
push
loop
mov
nop
popa
sahf
mov
mov
in
jl
xchg
shrl
xchg
jnp
or
xchg
xchg
fisubrl
jle
jmp
sub
pushf
lock
pop
push
into
fnstsw
push
cwtl
stc
pmullw
push
xchg
fstps
dec
loop
lcall
test
mov
faddp
dec
imull
in
jmp
mov
jne
enter
gs
add
and
fcmovnb
adc
add
mov
sub
adc
xor
int
loop
stos
lods
rcll
add
xor
jmp
mov
add
mov
and
inc
mov
cmp
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
add
in
insl
cmp
add
and
popf
fldl
mov
popf
lret
lods
jmp
jmp
sbb
insl
cmp
or
jnp
imul
std
stos
lea
mov
or
and
push
add
jno
js
mov
into
pushf
stos
lods
lcall
or
jge
sub
mov
sub
ds
adc
add
mov
fdiv
call
inc
or
mov
xlat
pop
shl
mov
icebp
mov
arpl
stos
push
stos
or
sahf
sub
xor
insl
fs
dec
test
add
dec
adc
add
jb
adc
pop
add
and
sbb
loop
sub
aas
xchg
fmul
mov
add
lahf
xor
jno
or
les
mov
sub
or
stos
jle
popf
inc
std
sti
enter
pop
jmp
cmp
loopne
popa
in
test
out
lcall
or
lods
sti
jle
pop
sbb
sub
xor
bound
xchg
xor
ret
sbb
sti
sub
adc
arpl
pop
push
lods
repnz
repz
mov
cwtl
fsincos
cli
xchg
aad
sub
cs
pop
dec
pop
cmc
loop
ljmp
clc
movsb
fcoms
outsb
outsb
sbb
aaa
sbb
imul
fisttpll
fistpl
jmp
sbb
insl
cmp
or
jnp
imul
fisttpll
fistpl
jmp
sbb
cmp
jl
out
and
add
aas
cmovo
test
cmpsl
nop
inc
cmp
dec
out
ja
mov
sub
cld
adc
lock
test
mov
jecxz
sub
int
and
mov
loop
add
dec
adc
shrl
icebp
js
mov
push
les
xchg
and
lods
mov
push
mov
adc
mov
xor
cwtl
aas
aam
pop
gs
pop
adc
gs
out
inc
mov
aad
cmpsb
cmp
gs
lock
in
idivl
jb
jge
mov
mov
push
hlt
push
sub
push
sarl
xor
or
std
je
scas
setns
pop
jne
push
stos
neg
push
negb
divb
mov
test
scas
mov
cwtl
shll
xchg
add
and
xor
fwait
sub
and
ljmp
sub
nop
rcrb
arpl
imul
fidivl
inc
jb
xor
pop
push
ljmp
mov
xor
mov
and
xorl
add
mov
cli
or
movsb
cmpsl
cmp
dec
insl
aad
sub
rcll
pop
pop
sub
cmc
pop
not
rolb
inc
mov
insl
repnz
adc
push
sub
test
jo
cmp
test
in
cli
pop
push
subb
sahf
dec
faddp
popf
jbe
rorb
or
xchg
into
jecxz
adc
daa
mov
sbb
adc
and
lds
jl
popa
mov
xchg
je
lock
jno
out
xchg
fldcw
cmp
xor
mov
inc
push
stos
add
xchg
push
fdiv
or
negl
bound
sahf
enter
xor
inc
push
fdivl
stc
cmpsb
mov
lock
fwait
jns
jne
lds
fsubrl
dec
push
cmp
mov
mov
pop
fdivrs
inc
faddl
repnz
mov
ss
jmp
rorl
popf
cmpsl
daa
push
xor
push
pop
push
push
int
cwtl
das
mov
or
dec
mov
std
mov
mov
pop
and
jge
pop
pop
add
cmp
sbb
fs
and
or
fstps
jecxz
pop
cmpl
sarl
cs
sahf
icebp
das
int3
xchg
jge
imul
sub
dec
sarl
jp
push
add
lret
jmp
and
stos
push
cmp
add
outsb
jae
pop
dec
pop
jle
sbb
in
sub
cld
and
rclb
mov
jbe
imul
mov
inc
iret
insb
and
xchg
push
lods
inc
push
add
popf
sarl
outsb
add
pop
sub
fiadds
ss
mov
stos
xchg
xor
movsl
aas
adc
fs
lret
mov
sbb
loopne
pop
scas
aad
xchg
les
jecxz
inc
flds
pop
xchg
jb
insl
out
push
dec
dec
and
dec
dec
sti
outsb
insb
mov
sub
rclb
gs
and
stc
in
movl
push
xor
cmpl
out
inc
dec
sbb
pop
cmp
adc
jecxz
xor
mov
or
test
xor
sarl
lock
push
loope
xor
adc
sbb
in
test
mov
push
imul
inc
inc
xchg
mov
jae
jne
pop
ds
iret
pop
cmpl
decb
pop
xchg
push
std
ret
mov
sarb
fwait
or
movsl
xchg
mov
shlb
rolb
lahf
jmp
add
mov
iret
pop
mov
cltd
fsubs
fidivs
pop
inc
fistpl
mov
cltd
mov
je
insl
je
leave
xchg
ds
jns
adc
inc
push
fidivs
into
mov
ret
push
outsl
loopne
pop
jne
loope
test
les
dec
sahf
es
mov
add
adc
dec
adc
outsl
xor
jno
dec
dec
cmp
mov
adc
sub
push
enter
xchg
mov
ljmp
pop
fisubl
movsl
dec
xchg
mov
adc
daa
or
shl
outsb
inc
xor
push
lods
push
push
cmp
inc
add
jp
or
pop
adcl
mov
data16
dec
add
inc
mov
stos
pop
lods
pop
movsb
daa
cli
adc
jnp
lds
sbb
sbb
rol
mov
into
arpl
add
neg
jo
xchg
sti
aaa
or
aad
dec
lods
or
or
push
dec
dec
shll
and
cmp
inc
pop
sub
adc
inc
mov
pop
mov
les
ds
es
test
mov
mov
loopne
mov
and
xlat
pop
xchg
mov
in
loop
ret
push
loope
dec
cmp
jbe
push
stos
xor
nop
lock
rcrl
jmp
jmp
xor
ss
cwtl
rcr
or
cltd
xchg
jo
mov
jmp
mov
adc
cs
adc
in
and
mov
loopne
mov
sbb
jle
inc
scas
cmp
shl
lret
xor
fdivp
mov
in
inc
dec
rolb
xchg
xchg
shrb
sub
insl
mov
scas
popf
cli
int
in
pop
popf
xchg
inc
js
decb
loop
cmp
call
xlat
sarl
call
mov
enter
push
adc
push
jae
repz
xorl
enter
out
jo
add
mov
ss
repz
cmc
rclb
test
out
inc
jnp
cmp
shlb
xchg
adcb
ljmp
push
fdivrl
testl
mov
jl
outsb
daa
pop
mov
dec
push
mov
push
jge
daa
inc
or
xchg
pop
or
movsl
inc
lret
std
inc
mov
testb
and
hlt
cmp
and
inc
push
dec
sub
pop
xor
pop
iret
and
daa
push
shll
cmpsl
xchg
lahf
test
xor
fstl
leave
jmp
fdivr
cmpsb
cmp
and
je
ror
sub
sbb
adc
fcmovnbe
mov
mov
call
outsl
push
cmp
movsb
add
addr16
imul
mov
or
jmp
mov
push
insb
sub
and
jns
sbb
mov
shll
mov
sub
ljmp
rolb
cs
mov
add
push
inc
addr16
pop
inc
imul
adcl
cs
xorb
adc
push
adc
pop
cs
stos
nop
int3
je
popa
sbb
aad
sbb
in
mov
out
cmp
lahf
loopne
mov
cltd
loope
xchg
cs
xchg
popf
aas
pop
orb
mov
fiadds
inc
mov
shrb
and
jae
adc
int3
sbb
xchg
in
dec
mov
or
jae
lds
outsb
pop
pop
repnz
sbb
das
sbb
mov
xchg
dec
and
out
mov
inc
push
mov
inc
dec
insl
pop
insb
fwait
scas
jae
xchg
mov
pop
lds
dec
inc
dec
imul
in
cmp
mov
mov
push
xor
add
mov
sbb
ds
popa
push
inc
cmp
ret
rcr
jnp
outsl
mov
sub
add
stos
mov
mov
add
cmp
in
imul
nop
dec
test
lahf
xchg
add
aas
popa
xchg
or
enter
mov
push
mov
mov
xchg
push
mov
adc
fwait
lods
mov
push
fisubl
push
fucomip
cmpsl
add
data16
push
mov
add
push
and
lock
push
and
icebp
fnstsw
mov
mov
hlt
int
mov
cmp
repnz
aad
cmc
arpl
inc
fistl
dec
pop
sub
add
inc
icebp
insl
sbb
sbb
dec
icebp
iret
roll
call
dec
cmp
in
addr16
mov
inc
pop
and
into
dec
adc
out
mulb
out
test
xor
xlat
bound
mov
mov
and
mov
xchg
movsb
mov
rep
lock
mov
outsl
or
out
inc
lret
jbe
pop
and
out
sub
repz
adc
mov
push
out
test
mov
adc
mov
fimull
jge
push
sub
call
lret
inc
pop
xor
mov
outsb
fwait
test
lock
or
mov
sub
mov
and
sar
ret
fs
fs
in
xchg
push
mov
test
add
and
cmp
jge
dec
xchg
rol
adc
dec
cmpsl
mov
pop
out
or
ret
pop
bound
jnp
sbb
test
lahf
sub
push
cmp
xlat
cmc
popa
repz
cmc
mov
aaa
mov
fs
shll
into
sub
mov
sub
lahf
xor
mov
sbb
cld
adc
nop
out
pop
sub
subb
xor
xchg
cltd
idivb
outsb
pop
aaa
insl
in
js
insl
adc
xchg
xchg
lea
sbb
daa
jo
jg
jne
push
sbb
add
mov
hlt
js
jns
jnp
mov
mov
lahf
imul
sti
cmpsb
jmp
mov
and
movsb
add
in
popa
sbb
lret
scas
jns
pop
into
test
push
stos
in
adc
and
out
movsl
dec
mov
fiadds
cwtl
jns
mov
sub
int
daa
jae
sbb
lcall
lahf
mov
rorl
rorb
fadd
orb
test
ficompl
add
insb
cmc
xor
dec
xchg
sti
test
lret
enter
or
sti
sub
addr16
cmp
sbb
std
cmpsl
ret
xchg
rcrb
cmp
adc
pop
das
out
loop
out
fsts
inc
inc
push
push
ds
shlb
push
test
shr
cs
sbb
inc
pop
ds
fildll
and
std
dec
ds
sub
aad
lods
inc
xor
xchg
call
test
xchg
outsl
ljmp
stos
xor
addr16
add
leave
pop
aam
adc
in
jo
loop
loope
mov
je
mov
cmp
jno
and
int3
aam
jecxz
aas
mov
xor
push
pop
sub
mov
lcall
mov
or
mov
add
push
dec
push
bndstx
inc
mov
or
add
and
mov
dec
aam
jbe
rorb
xor
testl
mov
dec
or
mov
shld
cmc
cmp
sbb
pop
push
pop
sahf
loop
mov
mov
lods
adc
mov
mov
mov
out
scas
jp
dec
js
cvtps2pd
or
mov
dec
push
fstps
sbb
xor
xchg
push
es
push
dec
pop
repz
out
push
mov
notb
add
dec
movsl
mov
jl
lock
ret
mov
xchg
aaa
ret
jecxz
cmc
add
mov
adc
mov
lock
cld
sub
pop
out
scas
outsl
jnp
insb
cmpsb
add
aam
pop
cli
push
mov
xor
jns
cmp
and
sub
mov
cmc
outsl
sbb
movb
mov
cmp
jg
cmp
jmp
adc
leave
lret
fldenv
sbbl
fists
test
push
fsubrl
fdivrl
dec
push
and
jne
repz
cmpps
mov
stos
dec
aas
aam
outsb
cmpsb
xor
push
arpl
xor
movsb
es
lret
movsb
lds
push
lahf
arpl
add
jo
imulb
mov
mov
push
add
pop
shlb
push
xlat
push
inc
and
pop
negb
mov
movsl
mov
xor
inc
dec
mov
jbe
sub
ss
mov
mov
lret
sbb
mov
daa
cmp
push
imul
jp
cli
pushf
add
shl
add
mov
loope
in
inc
mov
jns
in
xchg
in
test
lds
xchg
jmp
adc
mov
fwait
int
ja
push
mov
es
mov
jns
add
scas
pushf
jo
xchg
out
cmp
xor
sub
mov
push
inc
pop
and
roll
clc
addb
push
and
scas
jmp
xchg
sub
insb
in
mov
int3
cmpsb
jge
es
imul
inc
cs
loope
add
cmp
ret
fdivl
pop
or
mov
cli
xor
jmp
test
enter
push
mov
nop
xor
loopne
pop
insl
cmc
add
outsl
mov
cwtl
cmpb
sarb
xchg
push
jnp
mov
lret
ljmp
pop
push
inc
mov
mov
dec
adc
and
in
cmpsl
loopne
hlt
or
cs
enter
add
insb
movsb
dec
inc
adc
jmp
test
dec
xchg
fiadds
mov
lods
or
pop
adc
sbb
shrl
fs
les
cmp
sbb
sbb
aaa
pop
xlat
pop
xchg
sbb
insl
hlt
in
movb
push
fs
int3
mov
xlat
in
jb
sub
es
outsb
mov
xchg
push
js
jecxz
inc
push
enter
adc
fdivs
fiaddl
addr16
and
cli
lret
jp
ret
in
jb
lods
cltd
in
pop
in
xor
pop
rcr
adcb
jb
cwtl
mov
aad
add
daa
int3
sbb
loop
test
outsb
add
and
or
xchg
imul
jge
push
xchg
mov
scas
pop
cmpsb
outsl
les
xchg
notl
push
jmp
leave
push
inc
test
xor
leave
mov
nop
sti
or
fdivrl
das
xlat
mov
movsl
test
pop
mov
xchg
mov
lcall
or
out
repz
xlat
outsb
mov
add
mov
test
pop
sub
aam
dec
js
out
fsubs
sar
loopne
fs
in
in
stos
aaa
fadds
mov
pop
lods
fidivs
mov
in
sub
xor
pop
add
jl
push
pop
out
shll
aaa
pop
scas
pop
and
jmp
out
inc
or
mov
mov
or
sub
stos
dec
int3
in
enter
and
lods
mov
mov
iret
and
dec
push
daa
ss
pop
data16
sti
adc
lsl
nop
or
cwtl
push
push
mov
cltd
fidivs
fwait
jb
jns
xlat
push
fucom
cmpsl
sti
fndisi(8087
nop
test
mov
pop
adc
mov
pop
stc
fucomi
mov
jbe
repz
xchg
cs
stos
mov
loop
outsb
xchg
rclb
in
lods
lcall
jno
insl
enter
dec
shrb
pop
jge
mov
pusha
bound
inc
cmpsl
cltd
pop
sub
bound
xchg
xchg
add
xchg
leave
xchg
inc
outsl
test
into
test
dec
mov
js
into
jae
ror
shrl
mov
mov
ret
jecxz
fmull
ljmp
push
or
jmp
arpl
inc
jp
rcr
test
push
aad
mov
loopne
cltd
or
fldenv
mov
mov
test
xor
cmp
pop
adc
or
and
les
cmpsl
sub
or
push
push
xor
jg
mov
fisttpll
jo
mov
cwtl
movd
mov
enter
fdivrs
sub
pushl
rcrl
pop
mov
push
aad
sub
sarb
cmpsb
or
xchg
rcl
mov
pop
rclb
mov
fnstenv
cs
roll
rolb
and
js
push
in
loope
cwtl
in
jge
rorl
mov
mov
in
fcomip
pop
enter
data16
pusha
jno
aas
repz
rol
hlt
test
test
stc
sbb
xor
outsb
or
push
push
into
mov
and
call
cltd
or
aas
addb
iret
push
sbb
dec
xchg
ljmp
push
adcb
and
push
jne
mov
pop
mov
cs
cmp
aaa
sub
ret
xchg
js
addr16
jae
arpl
popa
jne
adc
je
adc
in
mov
sub
fstl
nop
loope
inc
and
shr
arpl
push
jecxz
mov
xor
popf
mov
call
inc
testl
ds
int3
pusha
mov
jl
sahf
fldcw
in
cs
shl
fisttpl
or
mov
jp
push
orb
int3
and
xlat
sbbb
js
out
jge
sbb
ret
jecxz
jno
bound
mov
das
mov
fwait
xlat
mov
jmp
test
pushf
cwtl
repnz
jg
lret
mov
fisubl
test
add
push
dec
nop
mov
ficoml
out
jge
xlat
pop
sahf
ret
lock
in
add
daa
pop
jns
movsb
push
or
cli
jno
test
sbb
out
cmc
into
enter
push
lea
sbb
dec
xlat
out
sbb
mov
push
mov
push
jns
out
scas
cli
inc
popf
gs
push
sub
pop
dec
aam
cwtl
ds
inc
mov
mov
pop
test
in
sub
int3
push
decb
jb
data16
mov
cltd
nop
mov
push
call
jae
mov
mov
ret
ss
mov
push
mov
pop
test
or
mov
sbb
movsb
mov
push
nop
shlb
aad
mov
movsl
loopne
xor
fnstsw
out
fs
int3
jecxz
shll
loopne
fwait
out
outsb
adcl
mov
int
scas
cmpsl
mov
cmp
insl
lret
loop
dec
cmp
shrl
je
jl
cltd
test
inc
into
pop
daa
into
addb
mov
sbb
xor
and
shlb
lret
push
push
mull
rorb
pop
adc
dec
hlt
shll
sbb
add
xchg
and
jae
andb
pop
sbb
xchg
inc
imul
lods
pop
popf
lock
mov
adc
cmp
dec
out
mov
jae
inc
addr16
hlt
push
mov
push
cmpb
loop
and
cli
xor
adcb
ret
dec
mov
mov
maxps
lea
imul
sahf
push
dec
inc
or
push
inc
and
or
dec
sub
enter
mov
push
daa
clc
aaa
push
push
std
adc
dec
lea
lahf
mov
cld
int
mov
int3
iret
mov
lcall
loope
test
add
loope
mov
mov
bound
mov
ljmp
sub
movhps
mov
xchg
divb
pop
es
fnstsw
out
es
cmp
into
mov
fidivl
push
lahf
push
fnstenv
enter
dec
scas
sbb
jb
outsl
lock
lcall
fstpl
xor
mov
ficompl
mov
out
or
push
xchg
mov
lret
mov
or
packuswb
add
mov
bnd
pop
inc
ljmp
cmpsl
adc
imul
rorl
add
mov
and
dec
inc
pop
push
leave
call
hlt
loopne
movsb
mov
das
aas
jecxz
clc
cmpsb
out
movsb
xchg
cltd
xchg
xchg
adc
pop
adc
inc
xor
sub
adc
push
inc
std
out
jmp
sti
and
popa
xchg
divb
loope
xchg
popa
add
popa
in
push
xor
mov
push
pushf
out
neg
testl
pop
jl
push
jmp
cmp
sbb
xchg
orl
test
ljmp
fildll
sarb
loopne
out
mov
lret
cltd
into
push
inc
mov
push
iret
push
pop
add
pop
mov
cltd
sub
push
cmp
mov
dec
mov
sub
shlb
mov
pop
mov
leave
sbb
out
out
lods
lock
lods
fistpll
sbb
les
jmp
icebp
add
or
shll
push
push
mov
std
jnp
testb
fisttps
fsubl
movsb
mov
gs
stc
mov
in
clc
fldl
pop
adc
push
cmpsl
pop
enter
test
push
lea
insb
addr16
in
cmp
cmp
cmp
cld
inc
add
lret
inc
imul
fimuls
pop
adc
addr16
hlt
xchg
loop
add
or
jo
faddl
pop
scas
mov
mov
jb
outsb
ja
xchg
mov
lret
or
popa
sub
jnp
imul
fisttpll
fistpl
jmp
sbb
insl
cmp
or
jnp
imul
fisttpll
fistpl
jmp
sbb
jge
jge
or
sbb
jnp
imul
fisttpll
fildl
push
sbb
in
push
sub
jnp
imul
and
inc
mov
adc
adc
orb
mov
jle
pop
ret
fiadds
into
adc
and
xor
bound
xchg
jle
outsb
mov
ret
loop,pt
repnz
into
jb
and
xor
and
xchg
jle
outsb
mov
ret
loop,pt
repnz
shlb
pop
in
cmp
pop
orb
int
jecxz
add
aad
sbb
adc
ss
mov
test
mov
aam
adc
inc
mov
sub
loopne
jae
imul
xor
cmpsb
fcmovb
xorb
pop
add
rcrb
jmp
ds
pop
xchg
fistpl
dec
adc
outsb
out
mov
ret
push
rol
insl
inc
or
jae
enter
out
mov
bound
insl
adc
push
dec
movsl
ret
add
jno
xor
frstor
adc
scas
pop
popf
mov
insl
cmp
mov
mov
pop
rcll
adc
xor
xchg
mov
orb
mov
push
sarb
loop
repnz
into
adc
and
xor
bound
xchg
sbb
or
jb
inc
rcrb
outsl
mov
popf
dec
xorb
and
pusha
cli
xor
cmp
mov
bound
mov
inc
stos
pop
sti
and
cmp
pop
scas
and
lret
sub
pop
lret
push
ret
loop,pt
repnz
into
adc
and
xor
bound
xchg
jle
outsb
mov
ret
loop,pt
repnz
into
adc
and
xor
bound
fcmovnb
adc
les
lock
cmp
cmp
and
bound
aas
or
fsubl
lock
jg
mov
sub
sbb
fwait
pop
push
cmpsl
ss
mov
adc
add
jo
mov
adc
pop
lahf
nop
in
pop
push
or
sarl
push
fisubl
cmp
push
xchg
in
jmp
call
sub
lret
mov
in
in
fs
scas
addr16
mov
xlat
xchg
cmp
aaa
xor
cmp
sahf
mov
lock
sub
mov
jp
mov
jnp
outsl
popf
in
pop
push
in
sub
aas
add
sarb
mov
xor
pop
xchg
clc
push
sbb
imulb
sbb
aaa
idivl
jg
rol
cmp
addr16
push
test
call
daa
ror
ffreep
push
pop
sahf
push
pxor
pop
push
data16
out
adc
int
xchg
push
lds
aad
cmp
mov
into
jns
xchg
testl
pop
sub
fdivs
push
fwait
sbb
jge
sub
scas
pop
or
ds
iret
enter
lea
sub
aad
xor
pushf
jne
pop
fisubl
push
cmp
and
outsl
dec
hlt
pop
lahf
es
flds
mov
stos
add
es
dec
push
mov
clc
repz
bound
adc
cld
icebp
stc
lock
popa
mov
fdivp
loope
movsb
cmp
mov
xchg
inc
iret
fwait
lock
sub
and
add
loop
decb
inc
cmc
test
insl
ss
or
jae
and
lock
mov
sbb
mov
pop
stos
pop
lock
jne
call
mov
mov
hlt
ds
dec
mov
jp
movsl
or
mov
sbb
xor
sub
add
mov
and
mov
xor
lock
mov
outsb
adc
push
sbb
push
jle
push
jbe
add
xor
xchg
in
jge
in
leave
cmp
cmpsl
pop
enter
mov
jg
lods
adc
stos
arpl
cmc
xchg
jne
and
pop
aam
jp
or
push
sar
lods
or
pop
inc
pop
ret
dec
fdivrl
scas
fiaddl
aas
in
std
faddl
in
adc
shl
in
jp
les
cmp
xchg
cli
dec
lds
inc
mov
lock
push
pop
ds
push
sub
cmpsb
lahf
xchg
je
std
xor
mov
frstor
inc
mov
xor
dec
mov
stc
pushl
jg
pop
mov
jle
adc
jne
imul
xor
sarl
lea
and
lret
and
dec
adc
lret
int
push
pop
jae
imul
lds
push
pop
adc
mov
xor
stc
rcrl
es
or
shrl
sbb
cli
jnp
pop
adc
inc
push
cmc
lods
sub
mov
shll
jg
clc
lcall
xchg
mov
pop
pushf
arpl
push
std
add
jns
cmpsl
adc
ret
dec
lret
imul
insl
imul
aad
test
sar
cmp
test
mov
icebp
push
or
fwait
sub
loop
dec
fdivl
cmp
lds
sahf
inc
jmp
pop
test
mov
push
addr16
mov
adc
xchg
cmp
mov
lahf
outsl
lods
adc
sbb
jo
push
lea
xor
mov
popf
popa
dec
sub
or
xchg
cmp
loopne
in
jne
jns
mov
setp
cmpsb
xor
movsl
mov
test
adc
lcall
pop
addr16
movhps
rcrb
cli
inc
popa
ss
cmpsb
jge
nop
jno
dec
inc
shlb
pop
add
pop
inc
sub
jle
mov
mov
js
daa
das
in
jge
out
arpl
inc
arpl
pushf
inc
stos
test
int
cmpsb
dec
or
mov
lds
aad
xchg
hlt
bound
and
pop
scas
addr16
dec
mov
mov
enter
scas
fimull
mov
out
jle
push
sub
ja
in
ret
movhps
ss
and
push
cmp
out
rcr
fcoms
jo
sbb
inc
mov
xchg
imul
clc
call
mov
in
mov
and
xchg
cmp
dec
daa
addb
cmp
adc
shll
in
pop
fsubs
movsl
xor
fstpl
inc
mov
add
xlat
jb
out
dec
cmp
mov
test
mov
mov
loopne
bound
xchg
imul
das
ret
mov
into
insb
test
push
fidivs
arpl
imul
nop
in
pop
cltd
adc
movsb
add
sbb
pusha
sub
jg
shrb
sarl
mov
lahf
or
sub
jge
jb
mov
mov
fimull
out
jae
outsb
sub
adc
push
and
add
fcoml
push
inc
mov
into
pop
js
jne
inc
xchg
movsb
or
dec
dec
loope
cwtl
adc
xor
fnstcw
jns
xchg
loop
adc
push
jo
movsl
test
es
push
cld
lahf
notl
mov
out
sub
or
ss
fldt
push
push
std
hlt
imul
dec
sbb
mov
imul
mov
adc
dec
push
pushf
push
repnz
pop
loop
out
pop
icebp
jns
popf
out
leave
vcvtsi2sdl
add
mov
sub
loop
jno
shld
lahf
int
pop
jo
fldl
js
jg
imull
decl
adc
neg
jo
loope
jbe
lret
xor
and
and
enter
dec
push
pop
jae
add
xchg
xor
jge
cmpsb
test
dec
stc
jp
xchg
sbb
lret
addr16
inc
pop
mov
add
pushf
fcompl
lcall
ret
xchg
mov
dec
xor
sub
fwait
push
clc
jae
inc
xor
jp
rcll
adc
and
pop
fldcw
andb
psadbw
cltd
in
sarb
sbb
sbb
les
cmc
andl
scas
movsl
inc
pop
ret
push
mov
lahf
mov
jmp
push
sub
ljmp
pop
cmpb
orl
adc
adc
cltd
popa
jg
jmp
fwait
jne
mov
cmpsl
stos
daa
dec
rorb
in
in
inc
aaa
sub
inc
inc
mulb
sub
lret
jecxz
xchg
testl
call
gs
adc
es
imul
xchg
push
cmp
sbb
hlt
js
icebp
add
add
dec
pop
add
sahf
mov
addr16
jg
stc
popf
mov
in
mov
cltd
rcr
mov
and
dec
xchg
xchg
out
jl
mov
in
enter
xchg
jecxz
cmp
xchg
mov
in
push
dec
push
shl
fisubrl
jmp
sahf
push
mov
jb
into
dec
shr
dec
jo
scas
imul
ja
popf
adc
int3
in
rcr
cltd
push
sub
mov
aad
nop
sbb
jg
mov
dec
aaa
sub
jns
int3
jnp
dec
mov
jb
in
clc
or
dec
xchg
dec
pop
push
stos
pop
cmp
mov
mov
dec
mov
add
lds
inc
mov
fscale
sbb
subl
xlat
jge
insb
jg
cmp
dec
shll
movsb
in
cmp
mov
mov
lods
mov
cmp
pusha
jns
and
mov
xor
subl
xor
push
mov
jmp
sbb
rclb
std
and
js
fisttpll
repz
in
outsl
sbb
add
pop
stc
adc
mov
pop
xor
ss
fsubrs
test
aaa
jmp
arpl
fstpt
pop
or
push
out
xor
ds
jg
xchg
or
enter
jmp
xlat
add
iret
aaa
adc
lea
mov
add
or
not
movsl
fimuls
mov
push
loop
xchg
lret
std
and
add
in
pusha
test
push
dec
mov
shll
add
inc
jp
fwait
outsl
jle
jnp
cld
jecxz
jl
jge
jge
add
sub
sub
aaa
in
sbb
ret
ficompl
imull
pop
bnd
xor
imulb
popf
stc
mov
cs
dec
stc
sub
xchg
and
push
jns
push
scas
pushf
bound
pop
push
push
sbb
push
daa
pusha
cs
loopne
pop
movsb
test
jae
dec
popa
inc
xor
addl
push
insb
sub
shlb
clc
fcompl
rcl
stc
pop
and
push
and
push
mov
xchg
xchg
adc
leave
dec
xor
dec
and
mov
call
pusha
mov
pushf
insl
aam
daa
mov
xchg
into
lds
outsb
and
jecxz
loop
jecxz
sti
in
mov
jno
stc
pusha
cmp
jo
sub
lea
aad
pop
sbb
loope
push
mov
push
sti
dec
push
in
hlt
repz
out
scas
inc
jns
mov
jg
iret
andl
push
aad
push
insl
cwtl
in
mov
cmp
out
xlat
fcoms
xor
xor
inc
cmpsl
jmp
pushf
ljmp
mov
iret
xchg
loop
lea
ret
jne
xchg
rcl
xor
jno
js
push
xchg
jne
sub
or
or
dec
and
ds
push
std
cmp
filds
test
sub
pushf
in
cmpsb
or
xchg
movsb
enter
std
fbstp
xlat
cmpsl
xchg
ror
cmpsb
in
inc
movsb
jmp
stos
mov
scas
ss
or
jle
repnz
or
inc
scas
mov
movsl
adc
loop
popf
imul
std
mov
xchg
clc
shrb
fidivrl
jp
loopne
add
or
cmp
fstl
stc
scas
adc
jmp
aas
cmpsb
les
xor
sub
fmulp
pop
mov
mov
mov
fidivrs
shrl
movsb
jp
jnp
push
mov
mov
jne
test
sarl
mov
and
mov
xchg
hlt
lds
lret
ja
or
filds
pop
add
pop
das
add
adc
jl
sub
mov
mov
push
or
jle
push
out
sub
je
inc
movsb
and
decb
insl
pop
cmp
shlb
jge
fildll
pushf
popf
or
mov
jmp
fldt
adc
jl
fidivl
jbe
push
push
fcomi
pop
inc
mov
hlt
cmp
leave
insl
sbb
lea
xchg
fwait
inc
scas
mov
shll
mov
lret
add
aad
fisubrl
sbb
cmp
jle
es
lods
mov
xor
fidivl
xchg
fildll
arpl
xor
out
imul
or
movsb
cmpsb
pop
clc
push
push
popa
call
fdivp
rolb
scas
rcrb
and
test
mov
dec
sbb
mov
mov
and
mov
or
add
or
das
or
lret
fwait
mov
jo
adc
cld
cltd
mov
lock
orb
out
adc
jmp
shrb
in
lret
pop
add
rcrb
outsl
les
aaa
mov
fisttpl
xchg
mov
sub
outsl
mov
ret
out
imul
call
idivb
in
ret
or
cld
ljmp
in
push
frstor
pop
sub
stos
adc
jb
and
movsb
jl
or
nop
out
sbb
and
pop
popl
in
in
idivb
mov
lds
test
pop
out
cmp
ret
cmp
in
jbe
push
mov
out
sahf
adc
outsl
add
inc
unpckhps
xor
mov
mov
insl
in
jl
int3
xlat
sbb
ja
fld
hlt
rcr
push
fucomp
pop
mov
dec
mov
dec
dec
movsb
jg
mov
jle
push
push
sbb
adc
outsl
imul
insb
xchg
ja
cmp
add
dec
dec
sub
push
mov
mov
cmp
jmp
push
lock
add
mov
cmp
push
std
aas
jge
scas
dec
mov
sub
lcall
sbb
inc
fdivrs
or
das
push
es
push
and
inc
imul
xor
loope
xchg
mov
aaa
mov
idivl
cmp
leave
pop
mov
mov
nop
push
and
mov
dec
aas
sub
pushf
sbb
sub
das
dec
sbb
repnz
insb
daa
sbb
xor
xchg
pop
push
mov
rorb
nop
mov
call
gs
fwait
xor
push
pusha
jmp
cmpb
in
pop
xchg
test
adc
mov
aas
xchg
aaa
aam
mov
movsl
and
xor
in
mov
into
lret
xor
addr16
xchg
lds
cmc
inc
pop
dec
inc
sub
in
std
cs
cmp
icebp
push
push
les
push
daa
mov
int
xchg
pop
jp
lds
xor
data16
call
lods
popa
cltd
les
repz
jp
push
push
call
loope
adc
mov
bswap
lcall
leave
out
jecxz
outsb
pushf
fbstp
out
test
cmpb
pop
fwait
das
imul
xor
sbb
xchg
loop
in
loop
mov
push
xchg
mov
cmp
divb
inc
aaa
pusha
imul
aam
xchg
test
rcl
mov
inc
sub
mov
mov
mov
daa
dec
lcall
mov
ss
inc
fs
stos
pushf
lret
dec
fimuls
jge
jnp
jp
and
fidivl
dec
gs
and
sub
xchg
sbb
test
les
out
rcrb
mov
push
xchg
add
sbbb
pop
push
pop
add
xchg
cwtl
add
push
ja
outsl
test
pop
mov
pushf
dec
and
decl
je
das
iret
cmpb
imul
lock
pop
fcmovu
ret
pusha
test
sbb
mov
mov
lds
sbbl
jbe
sbb
push
scas
cmc
cmp
push
xchg
fwait
int3
cmpsb
or
jo
icebp
cltd
adc
sbb
lock
mov
imul
add
or
out
das
mov
popa
gs
add
sbb
pop
xchg
xor
mov
nopl
dec
outsl
in
daa
inc
fidivrs
or
imul
hlt
dec
sbb
adc
dec
push
into
fmul
ret
mov
push
add
sub
lock
pop
fisubl
mov
enter
jg
and
mov
xor
jno
mov
mov
sub
adcl
dec
cmp
xor
pusha
add
or
repz
mov
mov
dec
mov
pop
or
push
into
in
mov
mov
fs
test
adc
mov
daa
loope
out
mov
gs
gs
sbb
aas
cmp
xchg
jnp
adc
dec
add
loope
into
fdivr
fnstsw
in
pusha
repnz
adc
cltd
mov
gs
sub
pop
movsl
jg
out
aam
mov
or
or
lret
jae
jmp
jns
lods
adc
or
sahf
xor
push
inc
inc
pop
push
arpl
and
enter
xchg
shll
insl
lcall
sbb
adc
arpl
aas
sti
sub
adc
enter
lret
fmulp
lcall
push
sub
pop
in
mov
aas
dec
or
clc
jo
mov
sbb
out
or
sarb
mov
scas
ss
push
pop
and
cli
scas
pop
cmp
jo
sub
jge
adc
dec
or
pushf
pop
sbb
loope
test
pop
rolb
and
lock
loop
lds
ficoms
mov
into
stc
insb
lahf
or
nop
pop
std
repz
movsb
fdivrl
or
sarb
mov
mov
repz
push
add
jmp
sar
pop
lahf
pop
xorl
cltd
lret
scas
mov
fists
fbld
scas
fsub
lock
in
pop
xchg
dec
clc
add
test
pop
jns
xor
jne
cmp
jp
mov
mov
mov
sbb
idiv
test
js
int3
clc
pop
bound
movb
jbe
fidivs
in
mov
fcoms
dec
mov
jl
dec
fs
mov
inc
cmp
mov
push
mov
movsb
mov
roll
sub
icebp
or
and
test
or
movsb
cli
leave
scas
sbb
and
sbb
inc
loope
sbb
jnp
out
jge
fisubrl
out
ret
fwait
mov
sub
sbb
clc
inc
add
pop
mov
imul
push
jp
and
imulb
das
mov
dec
jmp
enter
std
in
jmp
inc
mov
push
dec
pop
std
mov
cld
je
lret
repnz
test
frstor
or
into
cwtl
inc
data16
ljmp
or
aaa
xor
enter
stc
in
loop
ljmp
xor
imul
mov
inc
es
addr16
pop
lock
add
pushf
mov
jo
cmp
or
int3
test
xor
or
add
repz
aam
fsubr
cs
lods
and
arpl
dec
scas
leave
and
pusha
lods
cwtl
in
or
mov
popa
iret
adc
lahf
push
stos
sbb
vpsubusw
adc
xchg
sti
cmc
sysret
mov
add
inc
cmp
ja
icebp
rolb
add
shlb
mov
inc
jmp
arpl
cmpsl
mov
iret
and
mov
movsl
mov
adc
inc
orl
jmp
out
jmp
test
clc
int
mov
addr16
scas
sub
inc
jmp
sti
jns
aam
ds
sub
enter
mov
xor
pop
xor
cmpsl
int
insl
adc
test
stos
notl
mov
stos
daa
add
fdivs
idiv
push
stc
mov
pop
jmp
fisubrs
pop
jge
add
or
jmp
xchg
js
lea
mov
in
lret
jecxz
pop
inc
setns
fnstcw
call
xor
mov
jecxz
and
aad
mov
fwait
das
or
iret
cmc
xchg
and
fs
push
and
sti
sbb
push
sbb
mov
cmpsb
inc
inc
ljmp
push
aaa
inc
mov
repnz
lcall
mov
pop
in
sbb
jns
and
fidivrl
mov
das
dec
faddl
mov
aam
jl
int
pop
notl
ja
sub
adc
ret
ret
pop
lock
aam
sbb
aaa
enter
in
push
shrb
movsb
mov
cli
clflush
jno
push
sub
mov
bound
xor
dec
enter
xor
aas
jae
sub
out
or
jo
inc
cmpsb
aas
lcall
movsb
icebp
adcl
icebp
dec
in
sub
jns
mov
in
in
jecxz
rcrl
in
xchg
aas
add
cmp
jo
dec
jg
or
das
roll
inc
cmp
incb
es
xor
mov
and
rcrb
xor
inc
xor
xchg
mov
inc
dec
mov
icebp
xor
imul
popf
inc
pushl
mov
in
cs
jge
cmc
enter
subb
or
repnz
scas
dec
xchg
adcl
movzwl
add
jp
das
xchg
cs
std
adc
aaa
mov
jmp
xor
push
pop
jg
mov
or
jno
jg
dec
xor
pop
pop
cmp
sub
mov
cmp
sub
test
xor
imul
mov
repz
add
test
aaa
jg
enter
gs
andl
mov
pop
in
or
sub
and
cltd
cli
and
add
repnz
sub
inc
aaa
out
sub
lock
negl
dec
mov
cltd
fcomps
xor
mov
and
push
mov
popf
insb
dec
or
and
bound
clc
cmp
popa
outsl
xchg
cwtl
push
aas
fnsave
push
outsb
fbld
cwtl
icebp
clc
repnz
jge
ss
mov
out
cmp
std
mov
aaa
ret
sbb
inc
std
stos
andl
sti
rcll
push
sbb
and
and
out
repnz
mull
mov
jp
dec
je
test
std
jg
sub
jnp
fistl
adc
daa
and
xchg
jmp
jns
push
pusha
js
out
xchg
aas
xchg
inc
mov
stos
scas
ljmp
mov
ret
loop,pt
repnz
into
adc
and
xor
bound
xchg
jle
outsb
mov
ret
loop,pt
repnz
into
adc
and
xor
bound
adc
outsb
mov
ret
loop,pt
repnz
out
xor
bound
xchg
jle
outsb
mov
ret
loop,pt
repnz
into
mov
jmp
popf
push
lea
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
mov
mov
aam
lock
xlat
out
xchg
jge
shll
push
jno
popa
je
add
adc
in
hlt
std
les
mov
test
xchg
xor
jo
add
popa
xor
add
adc
in
hlt
add
pop
aam
movsb
xorl
xor
push
sbb
push
add
in
adcb
loope
or
adc
dec
inc
mov
xor
popa
in
push
popl
pop
in
pop
mov
aad
sub
pop
popa
dec
pop
mov
fsts
xchg
inc
std
push
mov
cmp
call
in
xchg
mov
flds
and
popa
and
pop
cltd
sti
jge
insl
sbb
cmc
je
insl
rorb
loope
cs
rol
push
and
mov
popa
fs
cli
inc
xor
mov
sbb
or
jnp
ret
mov
addr16
popa
jno
add
cmp
nop
lds
push
outsl
or
add
cmc
push
cld
rclb
adc
in
hlt
xchg
les
mov
test
mull
addr16
xor
imul
inc
push
fmuls
stc
xchg
sahf
lret
cmc
movsl
loope
in
or
je
cmp
dec
cmovge
xchg
cld
movsl
les
cwtl
roll
and
adc
jns
or
pop
cmp
jp
mov
xor
shlb
roll
je
inc
add
popa
xor
add
adc
in
hlt
xchg
les
mov
test
xchg
xor
adc
jno
popa
xor
add
adc
in
loope
ss
add
pop
sbb
jb
test
cmp
sahf
fldt
xchg
jecxz
jecxz
shrl
lret
lret
add
sub
or
stos
arpl
fwait
pop
xchg
lcall
mov
mov
cmp
jno
mov
dec
cmp
imul
push
sti
adc
inc
pop
out
sarb
cmc
loop
sti
and
jo
cltd
xchg
fwait
mov
fadd
daa
cmp
dec
pop
daa
xchg
jle
inc
addr16
jp
sub
repz
cmp
not
mov
scas
push
jb
pand
inc
push
fimuls
nop
les
sub
out
mov
jae
dec
aas
pop
push
sbb
or
pop
dec
adc
mov
cwtl
jg
out
scas
mov
jno
icebp
gs
loope
pop
cmp
out
jle
dec
xchg
ret
xchg
cmp
inc
inc
xor
es
jmp
shlb
jne
xor
sbb
mov
imul
add
in
cmc
pop
xadd
xchg
sub
dec
adc
pop
aaa
adc
add
and
arpl
mov
in
cli
cmp
iret
bound
test
jnp
dec
xor
dec
je
jl
adc
and
mov
rcl
mov
add
sahf
arpl
mov
push
sbb
push
adc
pop
inc
mov
negb
rorb
pop
rcl
add
mov
data16
scas
push
arpl
adc
jecxz
cld
dec
sahf
test
or
push
inc
jmp
outsl
push
add
rolb
xor
into
fsubrs
flds
lret
xor
sub
bnd
scas
stc
out
pop
aad
sbb
pop
mov
faddl
xchg
inc
into
sbb
add
shrb
jl
dec
test
add
lods
loope
test
icebp
pop
push
test
push
mov
out
dec
sbb
mov
imul
aad
mov
int
mov
pop
cs
jge
xchg
repnz
cli
mov
jae
mov
shr
out
in
in
push
jp
xchg
push
sbb
jne
inc
cmp
xchg
pop
pop
loop
push
push
scas
cli
loopne
jmp
inc
pop
xchg
sub
adc
js
loopne
rorl
dec
jp
repnz
inc
jne
stos
out
lock
push
xlat
fstpl
mov
fucomi
nop
mov
jp
mov
sbb
adc
lret
rclb
dec
mov
inc
sbbl
jle
add
jnp
xchg
out
jge
notl
mov
xbegin
insb
cmpsl
sub
lret
jbe
xchg
loopne
cmp
push
lret
add
clc
mov
adc
roll
sub
dec
sti
xchg
shlb
and
sub
push
je
inc
xor
xchg
stc
insl
es
xchg
shl
test
add
push
scas
dec
inc
xchg
inc
xor
cld
xor
inc
in
add
lcall
mov
jge
inc
das
loopne
movsb
sahf
fstps
adc
pop
ficoms
mov
in
xchg
outsb
push
inc
or
and
shll
sbb
dec
mov
cmpsl
jbe
mov
or
adc
jbe
subb
rcll
sub
in
inc
inc
neg
xchg
repnz
sub
les
loop
xlat
xchg
mov
inc
or
add
movsl
das
imul
pusha
mov
jle
pop
or
dec
jns
xchg
xor
or
xor
mov
mov
and
sysret
sub
sub
sbb
jecxz
xchg
lock
lods
xchg
jmp
sub
bound
sub
jno
dec
and
pop
addr16
mov
les
fidivrs
pop
jmp
sub
push
push
ja
cmp
lret
adc
dec
sub
nop
adc
mov
ss
sub
mov
hlt
inc
rorl
test
dec
pop
mov
mov
jge
mov
inc
xchg
adc
je
adc
mov
stc
jb
xchg
fidivrs
xchg
cmpsl
cmp
andl
mov
cs
adc
sbb
sub
inc
add
stos
jne
xchg
test
or
mov
addb
dec
sub
pop
test
insl
fwait
add
dec
cwtl
movsl
and
call
hlt
repz
jo
clc
xchg
insb
push
or
jl
push
adc
jae
adc
jge
sbb
adc
adc
nop
xlat
call
adc
cli
pop
into
mov
stos
nop
inc
sub
cld
aaa
mov
andl
loopne
jge
adc
push
fstpl
fmul
jo
ds
outsl
xchg
les
mov
mov
xchg
shrb
fnsave
mov
mov
mov
adc
push
dec
xchg
mov
inc
mov
sub
pusha
jne
add
push
jo
xchg
xchg
sub
dec
pop
cmp
lcall
add
lret
ljmp
outsl
scas
sbb
pop
sub
jae
pop
xchg
ficomps
xor
xchg
mov
mov
push
add
push
mov
pop
gs
loop
lcall
ds
inc
loope
jb
jp
adc
sbb
adc
mov
fwait
das
dec
jne
pop
push
xchg
mov
neg
and
xor
adc
in
out
mov
in
xchg
add
xor
daa
mov
inc
inc
lahf
dec
call
mov
or
mov
fdivr
mov
daa
sub
push
aam
xchg
test
xor
pop
cld
push
lea
xchg
repz
push
scas
ss
aad
aad
punpckhwd
out
inc
cmp
flds
fwait
xchg
rol
aaa
mov
sahf
in
test
pop
mov
dec
test
xor
sub
ret
stos
xor
repz
repnz
mov
push
into
mov
jg
and
mov
xor
jge
ret
dec
in
cmpsb
pop
jns
gs
cmp
jmp
cmc
out
aad
out
inc
sbb
bsf
je
adc
dec
stos
pop
pop
sub
cmp
repz
adc
adc
cmp
fmuls
insb
jb
adc
inc
mov
mov
sbb
cmp
mov
inc
push
les
call
push
inc
mov
push
pop
dec
mov
jle
push
adc
mov
and
call
lahf
sub
loopne
lcall
and
test
fdivr
pop
inc
bound
xchg
es
mov
mov
dec
outsb
sub
scas
cmpsl
lea
test
jmp
xchg
in
jmp
sub
fildl
jo
in
dec
inc
insl
aaa
mov
and
xor
inc
sub
stos
std
inc
insb
inc
inc
mov
dec
lcall
add
or
push
vmovshdup
push
inc
mov
adc
icebp
in
les
lret
add
in
daa
cltd
pop
mov
add
and
lods
loope
mov
fbstp
dec
aad
mov
lcall
mov
sbb
stos
dec
sbb
mov
or
fs
add
xchg
leave
test
xlat
and
mov
imul
in
mov
pop
das
inc
xor
cmp
jae
mov
push
push
fsub
pop
icebp
adc
cs
mov
loop
mov
jp
pop
clc
inc
lahf
xchg
dec
add
mov
popa
in
pop
test
popa
sub
push
jns
sbb
divb
sub
jne
jae
push
push
mov
test
dec
cltd
pop
xor
push
movsl
and
mov
adc
mov
cltd
fisubs
jp
mov
mov
imull
xor
cmp
push
xor
out
sarl
jecxz
inc
xor
cmovnp
in
in
pop
rclb
jp
sub
testb
dec
add
enter
sbb
pop
push
clc
arpl
sub
sbb
lret
jne
jmp
lock
mov
mov
dec
mov
cmp
leave
mov
inc
cs
push
xor
movsl
icebp
popf
mov
fistl
arpl
fnstcw
test
popa
in
pop
mov
outsl
or
mov
pop
jg
dec
sbb
adc
aam
xor
adc
adc
xchg
xor
decl
jg
mov
sbb
jge
add
jns
mov
mov
movsl
das
mov
pop
cmp
and
iret
inc
push
push
inc
fwait
lock
roll
js
test
xchg
sbb
pop
cs
in
mov
cmpsb
xchg
jp
jl
sbb
push
jne
repnz
icebp
and
mov
rcll
jl
jno
lret
xchg
repnz
outsl
cmp
push
pop
add
inc
sbb
jl
inc
mov
pop
daa
clc
jecxz
cmpsl
jo
out
es
cmp
adc
in
in
xor
fs
xor
lock
push
ds
mov
dec
nop
or
hlt
cld
stos
jge
push
mov
adc
sarl
loope
xor
ljmp
fnstsw
dec
pop
push
inc
adc
pminsw
insl
clc
out
xchg
cmpsb
add
ljmp
dec
fldenv
pushf
or
leave
js
std
cmp
shlb
mov
inc
loope
and
add
bnd
xchg
loop
sahf
sub
pop
inc
push
push
xor
mov
rcl
add
inc
xchg
push
push
mov
xchg
inc
into
push
repz
push
adc
cwtl
data16
adc
lods
mov
push
or
sbb
insb
cmpsl
andl
imul
daa
lods
in
insb
ror
xor
je
mov
rcrl
cmp
push
pop
or
add
js
cmp
sbb
mov
mov
fwait
pop
and
push
mov
add
in
iret
jp
imul
loopne
mov
dec
test
test
dec
loope
pop
fwait
lret
push
mov
jae
test
je
test
add
stos
pop
lcall
adc
in
pushl
stos
std
cs
cmp
dec
or
icebp
push
or
lods
mov
pop
xchg
dec
pop
cmc
xchg
ljmp
add
xchg
aaa
inc
lcall
mov
inc
mov
stc
scas
loop
iret
test
sub
lcall
jo
mov
mov
xchg
lea
cmpsl
sub
gs
js
dec
inc
mov
or
icebp
push
cmp
adc
loop
divb
pusha
mov
out
adc
mov
outsb
adc
inc
and
cli
loopne
fs
jle
out
es
jnp
int3
dec
xor
sub
ss
sub
daa
popf
icebp
sti
push
imul
mov
lea
popf
sti
inc
imul
adc
adc
lock
scas
sti
les
inc
jae
int
pop
fstpl
fbld
mov
mov
test
in
pop
cmc
pop
rorb
ss
xor
out
xchg
add
and
repnz
adc
inc
xor
mov
les
jae
pop
in
arpl
pop
popf
fbld
sbb
sbb
adc
and
out
adc
es
idivl
xchg
and
jg
inc
cs
inc
sub
cmpsl
into
test
test
jp
enter
xor
movsl
in
insb
push
js
mov
pop
sbb
mov
int3
int
mov
and
xor
std
add
or
lds
or
sbb
add
sbb
xor
shr
cmp
or
xlat
cmc
dec
mov
sub
movntq
out
jae
mov
movsb
mov
sbb
aam
test
dec
clc
sbb
sti
lahf
sbb
xchg
or
sub
shlb
sub
fwait
into
outsl
mov
mov
idiv
out
js
jg
cmp
xor
inc
adc
ja
push
imul
pop
pop
inc
jecxz
push
push
cmpsb
mov
mov
xlat
mov
dec
out
ret
shr
push
lret
pop
rcrb
and
and
add
xchg
loop
pop
mov
test
test
sti
das
loop
call
sbb
adc
pop
jmp
mov
and
fwait
les
sbb
sarb
imul
mov
std
lock
test
inc
pushf
hlt
lock
push
inc
cmpsb
rclb
insl
xchg
cmove
add
sbb
jge
xchg
mov
frstor
aaa
addr16
outsl
mov
and
movsb
test
xchg
jecxz
enter
inc
inc
pusha
sti
prefetchw
je
scas
int3
pop
mov
jl
rorb
data16
sar
popa
cmpsb
in
cmp
push
xchg
je
test
fadds
pusha
jne
adc
adc
lret
pop
mov
mov
mov
xchg
mov
pop
lock
dec
ja
mov
dec
stc
jge
sahf
popa
arpl
outsb
jmp
adc
sbb
mov
negl
pushf
xor
mov
lret
divb
inc
mov
adc
fsubs
inc
sbb
sbbl
mov
and
jb
cmpsb
inc
stos
lcall
das
jne
cmp
mov
std
xchg
pop
ds
and
mov
sub
jae
xchg
and
inc
fmuls
push
cmp
sub
movsl
dec
es
jmp
or
xchg
popl
xchg
or
fdiv
es
xor
cld
ret
in
inc
or
sub
xchg
sub
pop
xor
ret
dec
lret
arpl
pop
loope
inc
dec
and
dec
mov
outsl
hlt
mov
scas
jecxz
ret
aas
jmp
dec
cmpsb
lods
jo
dec
aad
ds
mov
mov
gs
aas
mov
or
dec
dec
xlat
or
fwait
jmp
shr
or
jmp
test
push
mov
push
xlat
enter
ljmp
sub
or
stos
mov
jecxz
lods
lods
dec
cmc
push
push
popa
bound
jmp
push
lods
outsl
jp
cld
mov
scas
adc
sbb
mov
rcr
push
mov
jmp
mov
inc
xor
leave
pop
push
js
aaa
imul
mov
mov
sbb
sbb
jmp
cmpsl
hlt
sahf
adc
or
cld
fwait
jno
fwait
test
outsb
lahf
iret
sub
mov
pop
add
xor
adc
pushf
lea
aas
inc
lea
xchg
mov
popf
outsb
mov
mov
adc
inc
xchg
fs
mov
push
addb
icebp
jp
stc
ficoml
push
movsb
adc
push
jmp
dec
cmp
cmp
jns
test
fwait
sti
or
sahf
push
mov
xchg
out
push
gs
lea
and
std
mov
jnp
stos
xchg
mov
fcoml
cmp
repz
add
cmc
jo
aaa
sbb
push
mov
pop
cmp
cltd
cmp
and
fsubrs
movsl
iret
js
mov
mov
sbb
xchg
imul
pushf
pop
repz
mov
or
xchg
movsb
dec
xor
out
pushf
sub
inc
mov
xchg
movsl
imul
mov
call
lds
push
push
call
sub
jmp
lods
xlat
shrb
push
sub
fwait
into
dec
jne
ror
fildll
ds
scas
jns
loop
aas
dec
lock
pop
jb
pusha
sub
jl
ja
mov
sbb
out
add
xorb
jo
cmp
jns
aam
jmp
jmp
adc
push
testl
jnp
cmp
shrb
pushf
loopne
nop
insl
out
inc
inc
pop
or
jecxz
push
sbb
movsb
call
in
loop
xchg
je
loope
adc
adc
jg
test
daa
cs
push
add
mov
sti
sub
fisttpll
sub
mov
mov
lret
push
mov
add
push
mov
sub
or
push
sbb
ds
pop
in
out
push
xor
push
test
mov
mov
and
or
mov
jmp
fists
imul
std
xor
imul
int3
cmp
mov
xor
jnp
sbb
in
mov
dec
sbb
scas
lret
pop
sbbb
sahf
mov
sbb
pushf
mov
mov
cmp
pop
xchg
xchg
sub
push
adc
jmp
jg
or
jo
jmp
call
out
sub
push
add
mov
and
dec
rolb
xchg
or
jne
xchg
inc
mov
testl
cltd
lds
sarb
ret
orl
sub
sbb
mov
mov
decl
cli
sub
loop
dec
insl
push
andl
ss
and
in
or
pushf
or
xchg
repz
in
pop
fcom
jl
dec
rorb
add
xlat
out
mov
cmp
jge
insb
xchg
add
mov
push
lods
and
loopne
push
xchg
jp
sbb
mov
xor
and
push
in
inc
stos
ljmp
adc
jbe
outsl
pop
pop
das
xchg
movsl
push
addr16
mov
into
adc
andb
xchg
pop
sahf
adc
jo
idivl
sbb
sti
pop
mov
and
inc
inc
fidivl
sbbl
imul
mov
shl
inc
fcompl
out
push
in
sub
and
dec
xchg
pop
mov
frstor
and
push
add
inc
lds
push
int3
push
ljmp
pusha
fcmove
in
sub
or
mov
orb
aaa
popa
mov
sub
das
cmp
add
pop
xor
and
ficoml
or
pop
cmp
jmp
push
jge
add
scas
cmp
mov
pop
jmp
dec
sbb
add
ret
flds
cmp
add
lock
pop
mov
sbb
push
inc
popf
jge
adc
enter
in
adc
jp
xor
aaa
roll
fs
in
mov
adc
mov
int3
ja
and
xchg
nopl
sbb
fistps
lods
rcl
dec
xor
mov
fildll
rol
pop
add
cmp
cmp
mov
pop
sbb
jbe
mov
pop
inc
add
pop
jb
jne
push
cld
jb
into
addr16
mov
call
xor
jne
mulb
mov
mov
pop
call
and
jecxz
daa
test
popa
xor
shrl
outsl
lods
mov
ljmp
bound
push
mov
sub
movsb
sbb
inc
int3
pop
fwait
stos
and
mov
shll
data16
mov
mov
std
cmp
daa
jb
fdivp
into
jecxz
popf
ret
pop
push
cmc
lods
jle
adc
push
idivl
cli
mov
jecxz
push
shll
and
fs
stc
mov
fnstenv
insb
sub
lea
push
rol
std
testl
imul
jg
dec
xchg
xchg
out
jle
stos
fnstcw
add
adc
fbld
incb
test
icebp
pop
scas
push
jp
mov
mov
push
flds
dec
mov
lret
adc
sbb
cli
mov
nop
jno
xchg
pop
mov
and
adc
cmp
aas
sbb
xor
jnp
rcl
jmp
cmp
jnp
ret
jg,pn
mov
add
divl
test
sub
xchg
fsubs
mov
test
sbb
loope
push
xorb
xchg
jl
inc
mov
movsb
sub
fs
jmp
mov
stos
pushf
movsl
jmp
arpl
in
and
iret
inc
inc
push
rol
xchg
dec
mov
dec
fsub
inc
dec
sbb
lcall
mov
fnstenv
push
mov
roll
mov
movsb
pop
cmpsb
shl
jb
je
lock
xor
imul
cwtl
sub
imul
cmp
and
xor
jne
sub
pop
iret
fistps
addb
sarl
mov
lods
pop
mov
popf
int3
cwtl
imul
dec
sub
test
cmp
mov
lret
mov
fistl
sub
std
jge
out
stc
push
lret
pop
dec
lea
out
ds
xor
lds
add
jg
jge
cmp
pop
mov
mov
push
xor
in
xor
mov
xor
adcl
push
movb
pmulhuw
xor
jle
xor
repz
fdivrl
jecxz
and
ds
inc
shrl
fcmovnb
arpl
stc
in
pop
xor
stos
xchg
mov
inc
inc
sub
sbb
cli
movb
inc
add
mov
lds
add
xchg
mov
add
fs
lret
aad
dec
jnp
sbb
dec
insl
out
xchg
lret
xor
sahf
jae
rorb
mov
cmpsb
rcrb
imul
pop
hlt
lds
mov
test
xchg
xor
adc
jno
popa
xor
add
adc
in
hlt
xchg
les
mov
test
xchg
xor
adc
jno
popa
xor
add
adc
loopne
hlt
icebp
les
mov
test
xchg
xor
loope
add
jno
push
add
adc
in
hlt
lret
les
xor
add
imul
mov
lods
jmp
jmp
mov
fwait
cmp
cs
lcall
cmp
dec
leave
pop
stc
imul
sbb
sub
jns
imul
fldenv
enter
jmp
fwait
cmp
dec
fstpt
imul
leave
pop
int3
pop
fstps
mov
or
push
mov
xchg
pusha
loop
push
call
scas
inc
push
push
inc
dec
adc
scas
and
fdiv
adc
not
ds
lret
dec
pop
test
xor
inc
ds
pop
mov
xchg
scas
imul
push
shll
ret
fwait
pop
mov
ss
daa
pop
pushf
xchg
test
pop
inc
pop
jp
jmp
mov
xor
fisubl
subl
pop
scas
push
fisttpl
popa
bound
decl
cmpsb
inc
imul
hlt
adcl
sbb
push
imul
and
mov
ret
jecxz
mov
dec
rol
cs
imul
fimull
sub
jns
imul
mov
dec
leave
pop
stc
imul
jl
push
jg
outsl
mov
push
lods
in
scas
jmp
dec
in
dec
pop
or
xor
pop
into
push
xchg
cmp
sub
jmp
out
les
pop
cs
adcl
or
jg
dec
ficomps
imul
mov
dec
leave
pop
stc
imul
sbb
sub
jns
imul
mov
dec
leave
pop
stc
imul
sbb
push
jns
mov
fadd
mov
mov
clc
aas
push
loope
leave
andl
faddl
shll
stc
imul
stc
pop
dec
push
dec
subb
sbb
pushf
in
leave
or
or
fs
dec
pop
sbb
and
cmp
mov
mov
into
out
das
jle
xchg
aam
push
adc
insl
cwtl
jno
xor
sti
pop
stos
mov
xchg
fwait
in
enter
inc
in
cmc
cmp
cmp
out
je
sahf
jl
js
in
adc
sar
ss
mov
jecxz
mov
dec
add
fisttpll
imul
mov
add
xor
add
fsubs
aam
imull
rcrb
rcr
add
in
mov
mov
jne
mov
mov
xchg
fucomip
dec
push
lods
pusha
push
sbb
pop
sahf
cmpb
test
xor
dec
jge
adc
pop
push
mov
iret
lahf
pop
dec
fdivl
jne
adc
xorb
push
mov
enter
cmp
loope
push
mov
insb
jae
orb
sbb
xchg
cmp
jg
pop
add
xor
jns
fcompl
jb
cmp
cmp
dec
rcrl
int
cmc
sbb
jo
arpl
stos
xchg
fstl
rcrb
dec
fnstcw
or
int
movsb
aaa
popf
in
das
mov
scas
lods
dec
cmpsb
aam
sbb
daa
adc
adc
cmpsl
pusha
and
shlb
xor
or
xor
dec
pop
in
rcl
lock
or
loope
mov
test
dec
sub
mov
inc
xchg
cmpl
xchg
sub
shrb
loope
cld
lock
gs
lret
sub
popf
fcmovnb
adc
pop
sbb
call
popa
sub
inc
mov
cmc
sbb
rcrb
cmp
inc
xchg
mov
pop
push
out
imul
fisttps
jno
ds
out
and
xor
or
les
jne
lds
div
in
jno
addb
pop
sub
add
popa
cmp
jnp
testb
lret
test
and
xchg
int3
mov
add
lcall
ret
or
scas
les
jmp
adc
orw
cmp
repz
in
jp
push
inc
out
inc
ljmp
mov
jmp
into
or
mov
mov
xor
insb
or
in
or
mov
push
insl
std
push
mov
cmp
cmpsl
lea
test
or
mov
mov
in
sbb
dec
xlat
das
adc
leave
mov
mov
ljmp
cmc
fwait
mov
fadd
lret
push
int
adc
sbb
dec
bound
mov
jnp
inc
jmp
lods
arpl
daa
stc
mov
sub
add
in
dec
aaa
popa
lahf
enter
jns
rol
mov
pop
inc
fimull
faddl
sub
cs
push
stos
mov
movsb
inc
sbb
adc
shrb
mov
mov
iret
sarl
add
pop
push
sbb
icebp
into
adc
mov
es
in
int3
outsl
pop
push
push
pop
popf
mov
cmpsb
lods
jg
cwtl
cwtl
cld
mov
xor
int3
mov
jb
rcrb
and
xchg
rorb
test
repnz
jae
mov
mov
push
mov
mov
xchg
mov
sub
cmp
loopne
xor
dec
mov
dec
mov
pop
ret
sbb
dec
mov
inc
cmp
or
push
sbb
or
inc
and
adc
push
dec
mov
mov
and
push
xchg
add
and
mov
mov
push
push
data16
xchg
or
fcoml
aad
mov
xchg
xchg
xchg
fnop
js
sti
fimuls
repnz
insb
adc
dec
bound
inc
push
insl
push
add
push
add
stos
cmp
mov
out
mov
dec
gs
enter
movsl
das
rorb
in
add
lret
bound
in
leave
cmpsl
mov
sbb
movsb
lods
mov
jb
sub
jnp
and
leave
sbb
dec
inc
out
mov
sub
push
scas
pop
mov
push
sub
repnz
dec
xchg
pop
roll
shrl
out
xor
mov
sub
sbb
jne
lcall
xchg
add
dec
lcall
es
dec
test
mov
movsb
and
cmp
jmp
mov
sub
pop
mov
cmp
inc
pusha
lock
mov
xor
daa
pop
push
aas
negl
gs
icebp
inc
sbb
xor
xor
and
add
ret
hlt
and
adc
data16
push
stos
push
sub
test
xchg
addr16
lea
and
mov
call
pop
fisttps
pop
or
outsl
aad
je
repz
in
push
adc
clc
inc
push
fidivrl
scas
mov
iret
ret
inc
jecxz
repnz
mov
jle
loope
sbb
add
cmp
sub
mov
movsb
aaa
call
fwait
scas
fisubrl
fcompl
push
xor
mov
or
mov
mov
rolb
add
mov
lret
div
mov
push
sub
adc
out
shll
pop
adc
into
push
push
dec
int
inc
fmul
xchg
xor
outsl
mov
jb
sbb
add
pop
iret
mov
jp
xor
sub
push
or
jle
push
xchg
inc
cmp
and
and
mov
das
fcos
jbe
int3
repz
sub
fcmovb
push
jle
hlt
cmp
ljmp
mov
cmp
cmp
mov
bound
xor
adc
inc
iret
lock
rorl
call
pop
inc
icebp
or
insb
cmpsb
add
adc
pusha
sti
lods
pop
test
pop
inc
adc
test
push
lret
into
int
das
dec
inc
sub
ud2
xor
loopne
dec
fldenv
sbb
xchg
push
xchg
sub
push
addb
je
add
imulb
cmp
mov
cmp
jae
pushf
stc
mov
icebp
in
add
mov
cmp
mov
mov
mov
push
repnz
lret
sub
push
leave
js
addl
xor
ds
insl
jne,pt
scas
leave
ret
adc
dec
or
dec
mov
loop
jecxz
cmp
nop
xor
mov
ds
push
sub
loop
pushf
scas
insb
sbb
xchg
sub
ret
sub
mov
mov
push
andb
stos
mov
fnstsw
jnp
mov
add
cmpsb
les
mov
inc
mov
addr16
sbb
jg
std
faddl
loope
mov
test
insb
adc
lods
xchg
sbb
mov
int
aad
sti
aas
loop
mov
mov
imul
ret
insb
pusha
push
cmc
fsubl
call
add
and
lahf
or
sub
xchg
sarb
adc
out
imul
mov
das
pop
sahf
jno
negb
push
lahf
xor
popl
jae
add
test
mov
xor
ds
addr16
es
bnd
jmp
jp
xchg
jmp
xor
jp
hlt
cli
ret
adc
and
xchg
xor
int
dec
inc
xchg
mov
movsl
push
adc
sub
sbb
nop
xchg
cmp
addl
cmp
sbb
mov
daa
xchg
mov
mov
push
aaa
loope
loop
fmull
scas
stos
and
mov
imul
mov
xchg
lahf
jb
cmp
insl
lahf
dec
ret
icebp
hlt
mov
xor
ficomps
dec
repnz
and
mov
fnsave
fs
sbb
mov
inc
mov
push
aad
movsl
xchg
dec
cmp
iret
jne
ja
jno
mov
test
in
cmp
or
fwait
mulb
cmp
sub
movsl
fldt
mov
cmp
cmovno
jae
cmp
cmp
or
add
js
adc
or
pop
aas
push
arpl
jb
outsb
cmp
push
imul
inc
fildll
fistl
inc
movsb
pop
jge
inc
ret
sub
cmp
sub
stos
les
in
xchg
sbb
cli
jmp
mov
outsb
jbe
xchg
push
aam
pop
outsb
jge
cmpsl
xchg
push
mov
stos
add
dec
and
sub
loopne
dec
ds
test
loopne
dec
and
dec
and
gs
fisubrs
jecxz
stos
out
ret
cmp
jno
pop
popa
mov
jno
jne
push
xor
jle
icebp
jae
pop
or
notb
cmp
jns
or
in
mov
mov
sub
dec
cmpsl
push
in
mov
pop
xor
inc
lods
cmpb
xchg
outsb
dec
lret
es
jecxz
cmp
add
pop
repnz
jns
loope
sub
cmp
out
call
mov
ds
adc
lock
lods
push
dec
rcrb
int3
sbb
adc
mov
xor
loope
inc
or
pop
dec
xchg
or
daa
jne
pop
dec
or
fdivp
adc
push
flds
xchg
jle
cmp
fucomp
dec
push
int3
scas
lret
shr
dec
mov
outsl
jg
xchg
lds
lahf
dec
orb
ss
dec
mov
int3
adc
data16
push
sti
aaa
dec
sub
lahf
mov
loop
dec
in
daa
mov
bound
and
mov
sbb
xor
fistl
jo
jo
shrb
icebp
out
dec
jp
loopne
jmp
shll
jl
xor
inc
jge
shll
dec
sahf
xor
xor
dec
repz
js
in
adc
xchg
or
sub
push
incb
cltd
or
fsts
fmulp
or
out
popa
shrl
int3
jp
popf
sub
mov
popf
add
orb
imul
push
pop
jb
jmp
test
add
inc
in
insb
popw
jae
bound
cmc
insb
push
mov
sub
inc
cltd
sbb
push
int3
cmc
adc
cmp
std
popa
sub
out
push
daa
mov
xor
adc
cmc
jo
inc
push
mov
adc
push
or
repz
mov
leave
out
test
lock
adc
adc
setg
inc
leave
mov
xor
loop
shll
jmp
inc
adc
and
sti
les
xor
js
push
sub
leave
jne
pop
or
pop
into
dec
imul
pop
adc
test
testl
loope
out
add
inc
bound
test
jne
in
inc
lds
pop
loope
xchg
push
mov
int3
push
sub
ret
lret
outsb
sbb
out
enter
flds
mov
or
call
push
sbbb
clc
popl
mov
sub
sbb
dec
aas
mov
lock
inc
inc
rcrb
in
test
inc
push
enter
cmp
icebp
fsubs
or
mov
popa
dec
call
cli
or
mov
sbb
in
mov
xor
lret
incl
mov
stc
mov
aas
or
je
push
movsb
pop
sub
outsl
push
xor
test
jno
mov
popf
stos
ds
sub
or
shll
mov
jmp
pop
dec
inc
ja
mov
clc
sahf
test
mov
jno
in
testb
adc
jge
popf
cmc
dec
ljmp
outsl
cmp
je
js
push
rorl
test
inc
jno
sub
mov
ds
scas
pop
sbb
mov
fs
adc
test
xchg
loop
ds
in
dec
pop
mov
stos
xchg
enter
adc
test
pop
pop
xor
fwait
xchg
jo
or
push
sub
mov
lret
mov
jp
cmc
xchg
repnz
imul
movsb
add
loopne
cmp
inc
pop
adc
jno
ja
mov
sub
mov
and
shrl
sub
xor
cmp
jb
pop
add
sub
add
aaa
jno
cmp
loopne
ficoms
mov
inc
sub
xchg
pop
mov
nop
dec
sub
inc
jecxz
mov
fldt
mov
js
movsb
pop
jno
in
mov
popa
test
je
stc
out
mov
enter
lcall
xchg
or
push
dec
dec
outsb
lds
out
inc
imul
outsb
mov
lea
leave
adc
xchg
xchg
or
sbb
inc
mov
scas
and
xor
out
mov
xchg
aam
inc
ss
jg
std
push
ja
ljmp
scas
ljmp
dec
jb
adc
inc
lods
int
jl
adc
mov
sub
dec
je
cmp
xchg
orb
lods
jb
pop
fcoms
pusha
in
scas
dec
push
push
mov
mov
cmp
cmp
sbb
jmp
jne
dec
idivl
inc
cmp
aad
mov
ss
data16
das
sbb
pusha
scas
xchg
sbbl
push
cmp
jnp
xchg
aaa
out
movsl
rcr
cmp
addl
push
sub
pop
xchg
adc
sub
add
in
aas
flds
std
mov
add
into
dec
in
jns
dec
mov
sbb
or
xchg
xor
out
fdivr
mov
xlat
or
fbstp
jmp
xchg
mov
ljmp
push
lds
cmp
inc
pop
or
inc
popa
sbb
jno
add
fstpl
dec
daa
inc
fwait
xor
test
inc
mov
fldcw
jl
scas
mov
and
push
hlt
mov
hlt
hlt
leave
addr16
repnz
jns
lods
hlt
es
xchg
cmpsb
adc
and
xchg
ret
inc
fldt
xor
fwait
addl
cltd
sub
inc
xchg
fsubr
dec
arpl
jno
cmp
lods
dec
test
jo
or
les
ja
xchg
mov
stc
repnz
sub
data16
push
xor
xor
cmp
pop
in
lret
pop
outsl
mov
in
shlb
mov
xlat
sbb
popf
xchg
mov
pushf
mov
call
mov
inc
xchg
fsubrs
cmp
pop
out
jp
ret
negb
movsl
ja
adc
arpl
pushf
pop
xchg
mov
jmp
sub
pushf
sbb
sub
cmp
pop
pop
and
movb
sub
cs
leave
stos
and
loope
test
jnp
push
dec
inc
enter
jno
cmp
xor
mov
and
ret
movsb
sbb
jge
shr
or
test
sahf
inc
and
push
fs
daa
dec
add
add
dec
ljmp
lcall
lock
iret
ja
into
xor
xor
adcl
sub
inc
xchg
pop
adc
rol
lods
pushf
jo
call
dec
push
loopne
fcompl
dec
mov
mov
insl
lock
out
mov
add
shll
ret
pop
lods
fwait
mov
jl
call
xchg
xchg
mov
in
loope
ret
test
in
lds
sahf
xchg
je
mov
test
xor
mov
lock
or
out
js
cs
js
test
aam
inc
mov
pushf
pop
lods
push
pop
or
xchg
jno
xchg
push
lods
cmpsl
fsubl
xor
mov
lret
test
sub
lahf
mov
add
pop
fcomps
jnp
push
jns
imul
xchg
pop
mov
mov
add
mov
adc
xchg
pop
iret
cmpl
jp
aam
es
xor
hlt
inc
inc
outsb
dec
fadds
dec
cltd
call
bound
clc
xchg
lods
mov
pop
mov
divl
dec
mov
sbb
icebp
mov
lods
mov
testl
enter
lcall
jmp
sbb
in
add
lock
repz
andl
addb
push
xchg
xchg
jnp
mov
imul
mov
mov
ficoms
rorl
sbb
adc
movsb
push
mov
fiadds
movsl
jge
dec
jg
ret
mov
sti
dec
cs
adcl
mov
mov
add
dec
inc
dec
fwait
shl
in
mov
je
jae
xor
aas
xchg
jmp
outsb
push
dec
jg
loope
or
inc
inc
lods
jmp
mov
lret
mov
and
xorb
test
hlt
dec
movsb
sub
fidivl
xchg
lea
out
jne
add
push
jbe
mov
daa
mov
push
jg
shrl
rolb
hlt
movsl
and
or
push
push
mov
int
lret
mov
xor
inc
lret
loop
jne
cmp
jno
add
flds
sub
jne
popf
dec
mov
inc
inc
cmp
in
push
mov
stos
loop
jno
in
les
dec
rcrl
or
inc
int
sub
cmp
daa
mov
into
push
adc
push
push
jae
or
jno
ljmp
stc
cmp
js
xor
pop
dec
and
mov
mov
dec
jmp
leave
jnp
leave
or
out
cmpsl
cld
mov
xor
and
adcl
sbb
add
cmp
cmpl
hlt
int
xor
adc
push
mov
fstpl
cmp
int3
arpl
repz
pop
je
fcompl
push
outsl
mov
pop
outsb
or
pop
fwait
mov
stc
stc
jp
sti
inc
cmp
dec
add
ja
ficomps
clc
outsb
cs
pop
cmpsb
add
hlt
pop
xchg
dec
push
jl
add
jb
addr16
mov
stos
push
ljmp
dec
push
mov
out
dec
fidivl
lods
mov
jge
ss
rclb
pop
mov
mov
sahf
cmc
mov
cwtl
daa
in
addr16
test
push
push
mov
mov
scas
jp
mov
insb
stos
ljmp
int3
mov
pop
loopne
push
xchg
dec
fwait
jp
fadds
icebp
pop
push
ror
mov
movsl
xor
aad
and
test
das
mov
cwtl
inc
pushf
daa
jns
dec
push
mov
inc
out
cld
xor
jno
jo
ds
push
inc
jo
adc
cmpl
fiaddl
xor
add
mov
popa
mov
xor
xchg
ret
jo
xor
lds
fistl
dec
dec
pop
xchg
jl
jl
dec
pop
sbb
cmp
cmp
sbb
dec
mov
in
dec
xchg
or
cld
jmp
pusha
testb
lret
or
fwait
cwtl
cmpsb
mov
cmp
lahf
cld
sbb
sbb
lea
rorb
sbb
push
xchg
addb
fmuls
or
lahf
dec
cmp
dec
outsl
pop
loope
cli
mov
out
xor
aas
into
pop
pop
push
mov
sub
mov
push
fistl
lock
outsb
iret
gs
jge
xor
movsl
call
jp
push
fnstcw
jle
push
repz
jge
push
sub
ja
xchg
mov
fcomip
push
xchg
ret
inc
xor
ljmp
add
cmc
mov
mov
pusha
pop
lds
fld
sbb
imul
sub
add
movsl
lea
adc
fld
xlat
cmc
jp
movsl
loop
inc
aas
sahf
lods
add
cltd
dec
mul
add
les
add
fnstsw
and
aas
adc
mov
popa
pop
dec
int3
rcll
ja
das
pop
dec
sub
outsb
ffree
sub
dec
jecxz
cld
and
xor
mov
add
movsb
call
xchg
loop
xor
int3
adcb
mov
dec
dec
mov
and
xor
pop
sbb
aaa
loope
test
mov
cmp
dec
inc
inc
ret
fprem1
idivl
lock
push
sarl
cmp
loope
push
and
test
lahf
pop
fcoml
mov
inc
xchg
fadd
out
adcl
repz
inc
lds
mov
jnp
repz
rclb
dec
or
push
popa
inc
lcall
xlat
dec
cmp
rcll
push
out
nop
loopne
cmpsb
xor
subb
test
movsl
pop
xor
imul
cltd
inc
pop
scas
xchg
push
mov
xlat
push
call
and
out
cmp
stos
sbb
cmp
dec
mov
fdivs
mov
popa
test
cmp
cwtl
fwait
push
stos
sub
jns
imul
mov
dec
leave
pop
stc
imul
sbb
sub
jns
imul
mov
dec
leave
pop
stc
imul
sbb
sub
jns
imul
mov
dec
leave
pop
clc
imul
sbb
sub
stc
jmp
sti
or
adc
test
movsb
add
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xor
pop
mov
sti
dec
lret
ja
lods
test
and
sbb
or
dec
cwtl
dec
jg
js
js
pop
mov
cli
cmp
or
sbb
lods
sbb
or
pop
cwtl
dec
jno
popa
stos
push
lcall
adc
bswap
call
jg
xchg
cmp
add
ss
and
add
adc
xor
fdiv
inc
pop
andb
mov
out
ljmp
and
pop
aad
in
pop
adc
out
xor
sbb
stos
js
add
dec
data16
and
add
or
cmp
sub
test
push
and
pop
xchg
rcr
or
rcrb
sub
nop
aad
faddl
enter
mov
push
adc
xchg
clc
add
loopne
pop
aas
fucom
fmuls
add
mov
stos
mov
js
pop
and
adcb
xor
cmp
cs
outsl
fprem1
push
pop
cwtl
mov
mov
dec
mov
cli
and
or
add
icebp
cmp
sub
sbb
or
pop
orl
fstpt
dec
mov
jne
pushf
dec
clc
xor
push
fsubrl
push
rcrb
pop
mov
pop
in
pop
clc
pop
lea
pop
int
lret
cld
clc
aas
cwtl
push
add
dec
stc
sub
enter
ficompl
lret
clc
sub
sbb
or
pop
cwtl
dec
push
lcall
or
sbb
call
sbb
or
pop
cwtl
dec
push
cmc
xor
imul
out
ds
mov
push
xchg
cmp
push
loop
or
call
je
xchg
sub
inc
xchg
aas
inc
cmp
pushf
and
jmp
inc
test
cmpsb
scas
cmp
mov
push
lret
sahf
cmp
push
cli
repz
cli
nop
lods
or
xchg
cmp
jne
xor
xchg
loope
andl
fisttps
jnp
dec
test
mov
andb
and
pop
adc
jns
and
cmpsl
cs
aad
mov
xchg
idivb
adc
and
pop
dec
dec
out
in
adc
cli
jge
adc
loop
fcomps
cmp
hlt
dec
nop
into
sbb
popa
fnstcw
cmp
hlt
cs
sub
mov
jmp
shlb
adc
inc
inc
cmp
dec
loopne
test
lds
scas
xchg
les
les
cwtl
sub
adc
add
outsl
mov
adc
jecxz
jnp
mov
dec
jb
mov
cmc
or
and
dec
mov
push
inc
gs
mov
ljmp
loopne
ljmp
aam
add
dec
popf
sub
rcr
out
or
dec
fidivrl
xor
notl
outsb
cli
iret
jo
sbb
into
popf
mov
mov
jnp
add
mov
mov
inc
das
stos
xchg
mov
lds
dec
push
inc
fldcw
mov
out
mov
inc
push
add
clc
dec
dec
lcall
xchg
andl
mov
imul
push
xor
jae
cmp
xchg
ffree
scas
std
out
or
popf
lahf
movsb
js
adc
ja
lcall
cmp
adc
mov
push
and
push
push
int3
mov
push
pop
adc
mov
outsl
push
iret
sub
push
mov
mov
dec
mov
scas
cmp
or
popf
test
rcll
xchg
xchg
lock
mov
pop
push
push
fdivl
push
mov
ja
out
mov
sbb
xor
push
ja
push
mov
xchg
jb
add
jns
fdivs
pop
inc
out
shlb
movsb
pop
lcall
add
or
mov
cmc
jp
sub
adc
lea
and
dec
clc
fmull
dec
xlat
in
dec
xchg
lea
js
mov
xchg
das
lods
xchg
xchg
mov
shl
mov
ja
xchg
inc
pop
dec
xchg
or
imul
sbb
cltd
imul
in
add
data16
or
add
and
mov
adc
jb
je
inc
dec
push
mov
mov
add
loope
xchg
xorl
dec
adc
cmp
int
mov
adc
dec
icebp
fcoml
stos
pop
lods
das
pop
imul
leave
jp
xchg
fstpt
int
inc
mov
cli
mov
dec
jne
xor
sub
lahf
xchg
push
std
and
mov
cmp
in
sbb
xor
imul
enter
push
xchg
scas
daa
daa
neg
fisubs
hlt
out
arpl
arpl
shrb
jae
addr16
enter
mov
xor
pop
outsb
test
jmp
in
add
test
iret
or
mov
stos
testb
xchg
xchg
sbb
call
clc
mov
repz
test
lcall
daa
mov
add
jnp
cmp
inc
aas
push
jo
fidivrl
dec
cli
mov
xor
cmc
nop
inc
clc
push
mov
xchg
lods
arpl
push
mov
mov
push
mov
dec
stos
daa
mov
into
in
movsb
cmp
cs
inc
jns
add
xor
adc
leave
fdivs
dec
pop
jle
and
pop
cmp
push
dec
push
adc
xchg
push
pop
addr16
mov
aad
pop
aad
sub
inc
outsb
iret
bound
dec
into
dec
scas
fisttps
or
lock
dec
cs
aad
int3
imulb
fwait
inc
push
inc
out
xchg
xor
out
mov
push
sbb
pop
cld
jbe,pn
sbb
vmaxss
mov
lahf
insl
sar
jno
in
jbe
scas
pop
or
fs
pop
mov
adc
xchg
push
jp
and
popa
xchg
mov
out
pusha
inc
aad
adc
fs
imul
test
fsubs
movb
fldl
jg
mov
jmp
push
cwtl
into
adc
rolb
xor
movsb
into
dec
scas
and
mov
adcl
push
jl
adc
shl
in
push
test
adc
lds
ret
inc
loop
push
pushf
inc
dec
imul
aam
es
jno
or
add
out
lret
and
push
add
hlt
mov
mov
add
xchg
push
adc
dec
sbbl
xlat
dec
and
stos
andb
push
fwait
movsb
adc
push
jge
sbb
sbb
and
mov
mov
cltd
push
hlt
and
call
cmp
out
in
or
mov
xchg
loopne
sub
aam
mov
shll
jge
jge
mov
cmp
push
push
out
enter
jbe
cmp
jbe
daa
cli
cmpsl
sbb
ret
mov
adc
repnz
pop
mov
mov
mov
scas
lahf
insl
js
jae
add
out
jl
popa
pop
jle
sub
jno
ss
sti
cmp
pop
dec
mov
mov
aad
push
popl
push
jecxz
bound
mov
sbb
push
insb
lret
push
in
sahf
sbb
xor
inc
out
adc
xchg
repz
in
or
cltd
mov
mov
mov
mov
push
outsb
pushw
xchg
in
loopne
jo
mov
sub
in
inc
pop
or
sbb
sub
dec
xchg
mov
in
mov
jae
and
aas
pop
pop
call
fildll
cmp
imul
ficoms
pop
cwtl
adc
out
pushf
or
sbb
push
in
sbb
iret
sbb
cvttps2pi
push
dec
lahf
andb
lds
xchg
rcrb
loop
xor
iret
enter
enter
iret
lret
shll
sti
in
jp
iret
les
mov
cld
lods
cld
or
xor
xchg
xor
sub
pop
std
lret
sbb
sbb
add
fwait
cmp
push
outsb
cmp
ss
adc
mov
push
or
jne
add
push
jae
je
jmp
dec
dec
cld
cltd
iret
push
popa
repnz
cltd
lahf
popf
sbb
sbb
adc
pop
rcl
insl
inc
ljmp
cmpsl
lea
mov
dec
test
outsb
mov
call
add
enter
mov
insb
addr16
mov
popf
push
fstp
xchg
loope
adc
xchg
sbb
jecxz
rclb
loop
out
mov
xchg
imul
xchg
inc
adc
cmpsl
or
jle
mov
sub
inc
movsl
shll
sub
mov
sbb
pop
icebp
mov
jmp
iret
rcrb
adc
repnz
xchg
in
out
ret
jae
dec
outsb
jns
adc
aad
and
mov
fists
mov
and
lahf
mov
mov
ss
scas
test
dec
insb
push
dec
mov
mov
loopne
mov
xor
push
or
mov
in
notl
mov
mov
dec
in
xor
pop
aaa
or
stc
sbbb
dec
dec
mov
lock
pusha
mov
pop
or
adc
mov
sbb
or
out
add
xchg
adc
call
pushf
aam
push
mov
sbb
fwait
ja
rol
cmp
dec
faddp
dec
xor
xchg
xchg
outsl
sub
decb
test
lret
ja
add
xor
push
imul
jl
jl
in
out
in
outsl
dec
shrb
movsb
iret
test
mov
loopne,pn
mov
fnstenv
pop
pop
shrb
and
and
push
scas
mov
and
movb
xchg
or
mov
es
inc
inc
or
jl
repz
pop
pop
and
or
cli
loopne
popf
or
movsl
xor
popa
adc
fs
sbb
test
sub
mov
mov
jl
dec
inc
push
fcmovb
mov
sti
xchg
push
push
loopne
cli
inc
mov
lret
sbb
push
xchg
int
int
inc
xor
xchg
pop
pushf
dec
mov
loope
clc
in
imul
aas
sub
xchg
movsb
or
jp
xchg
inc
out
jo
daa
bound
sub
jecxz
sti
dec
jo
push
xchg
sbbl
lcall
lods
arpl
pop
jg
popl
add
adc
adcb
add
pusha
mov
xchg
jmp
out
jbe
addr16
sub
sbb
out
cmpl
jecxz
roll
cmpsl
out
jne
mov
ds
sub
jo
decl
add
jle
into
out
jg
push
test
fs
lods
push
jae
mov
out
aam
jno
add
into
icebp
inc
jge
leave
adc
mov
adc
enter
fdivr
push
lea
outsl
lea
mov
xor
dec
leave
repnz
das
and
movsb
mov
rcrb
sub
sbb
mov
hlt
orb
lock
faddp
popf
ja
push
dec
out
xor
aam
test
sub
dec
jne
mov
and
mov
inc
adc
inc
stc
fldcw
and
mov
dec
inc
movsb
mov
in
addr16
inc
daa
sahf
fidivrl
jg
inc
jne
pop
cmp
aam
cli
inc
mov
arpl
ficomps
les
scas
sbb
xor
test
and
nop
adc
repz
mov
xchg
insl
and
dec
icebp
pop
lret
aad
mov
in
add
out
and
repnz
loope
pop
mull
jl
fs
mov
cmpsb
loope
push
lret
mov
xchg
mov
lods
and
and
xchg
cwtl
dec
scas
cmpsl
mov
ljmp
mov
push
nop
mov
lods
insb
cltd
pop
add
mov
repnz
dec
mov
aaa
ror
xor
out
rolb
insl
inc
notl
mov
ret
add
cli
mov
cmp
mov
push
jle
imul
cs
lcall
data16
popa
xor
lds
mov
xor
inc
stc
xchg
icebp
aad
pop
sbb
icebp
jecxz
ja
fdiv
cmc
cli
js
cmp
daa
inc
sub
lret
mov
push
scas
pusha
add
out
mov
dec
lcall
cmp
mov
addr16
gs
add
fsubrs
inc
jae
out
adc
xor
add
mov
jp
cmp
mov
mov
push
cmp
inc
pop
xchg
pop
cmpsl
out
pop
jae
xor
cld
jp
and
cmp
mov
push
push
ss
mov
cmp
inc
daa
cmp
or
xor
movl
or
js
or
jl
cmc
mov
test
pusha
lret
mov
ret
out
testl
mov
xlat
lds
mov
leave
jae
jb
lcall
loope
or
xchg
inc
push
sti
mov
movsb
inc
jne
jae
xchg
and
filds
sbb
push
repz
xor
and
xor
into
outsb
dec
dec
ds
clc
hlt
lock
cmp
test
iret
in
loopne
push
test
test
outsl
xchg
sbb
das
lods
divb
mov
or
gs
stos
movsl
repnz
test
mov
sbb
xchg
scas
jo
enter
pop
inc
daa
loopne
mov
mov
std
mov
mov
fistps
cli
push
aas
call
xchg
cmp
jb
jae
nop
sub
mov
xchg
and
out
add
xlat
in
popa
fldl
and
xchg
sub
mov
rorl
xchg
sub
mov
xchg
sub
inc
jo
add
xchg
pusha
inc
rolb
jge
nop
push
lcall
push
ss
aam
inc
dec
icebp
sahf
mov
test
add
addr16
ds
mov
inc
mov
xor
cmp
repnz
aas
xor
xchg
mov
mov
cmpsl
push
rclb
jae
inc
or
jl
aam
jle
loope
pop
jg
cmp
and
pop
cmp
pop
mov
xchg
sbb
int
sahf
adc
jne
sub
in
stos
inc
sarl
roll
mov
push
in
mov
je
test
dec
inc
lcall
mov
push
lods
push
inc
mov
xor
int3
or
or
rorb
mov
pop
mov
mov
in
push
rcrl
xchg
les
adc
insl
movsl
lods
pop
out
push
mov
aam
inc
imul
xchg
cltd
rorl
xor
dec
sub
mov
xchg
les
jns
ret
out
sub
pop
mov
jns
push
sar
shll
sbb
aam
jne
push
addr16
mov
or
call
cwtl
ret
loop
dec
jmp
xchg
push
leave
jnp
mov
cmp
mov
or
arpl
insb
daa
cltd
mov
mov
inc
dec
cli
cltd
dec
jmp
inc
icebp
xchg
fs
daa
gs
mov
into
xchg
xor
jnp
dec
outsl
nop
mov
aas
or
cmp
bound
lods
mov
aad
clc
sbb
mov
push
insb
sub
xchg
cli
jge
bound
cwtl
lret
test
and
bound
fstl
ret
jne
push
shlb
test
push
ror
cmp
loop
fwait
pusha
push
sub
mov
enter
addr16
testb
addl
xchg
inc
pushf
inc
aaa
dec
stc
mov
jle
pop
popf
int
and
out
sub
xor
hlt
mov
stc
jge
xor
sbb
pushf
and
pop
hlt
pop
es
stos
add
pop
into
dec
push
lods
es
nop
frstor
and
xchg
adc
out
fiaddl
enter
inc
mov
sbb
in
sti
and
cmpb
cmp
mov
fisubrs
sarb
mov
insb
cltd
hlt
add
push
sahf
push
mov
pop
outsl
div
xchg
aad
mov
xor
adc
jae
dec
sbb
out
insl
scas
and
mov
xchg
lret
addr16
fs
inc
enter
xor
jl
sbb
mov
sub
sti
xchg
movsb
orps
ljmp
scas
mov
arpl
int
adcb
int
sub
pop
fwait
jns
push
inc
nop
ficoms
hlt
add
or
or
add
decl
jge
dec
xor
pop
lret
je
out
jnp
push
sub
mov
sbb
mov
adc
std
insb
dec
es
fidivrl
mov
je
xchg
xor
mov
mov
xchg
add
andb
icebp
das
idiv
jbe
inc
push
sti
mov
mov
lahf
dec
or
adc
daa
test
in
jl
out
xor
mov
mov
mov
aad
je
pop
mov
aad
cmp
popa
sbb
xchg
xchg
cmp
fs
or
hlt
mov
xor
inc
xlat
cmp
nop
inc
sub
aaa
push
sub
fdivl
pop
xor
mov
rorb
loopne
push
adc
nop
mov
insb
cmc
mov
insl
jle
cli
shlb
sub
repz
clc
fnstcw
sbb
jg
push
pop
pop
lret
push
in
daa
dec
insb
sub
es
inc
xor
mov
pop
mov
sub
test
inc
gs
jb
lds
push
lahf
mov
sub
sarb
fldz
or
mov
mov
imul
mov
pop
les
ficoml
sub
out
jmp
pushl
hlt
fsts
or
pusha
sbb
hlt
faddp
out
pushw
jno
dec
ret
fdivrp
lds
stc
ja,pt
in
mov
cmp
mov
pop
jge
subb
or
enter
bound
mov
mov
xor
add
in
insb
fsubrp
pop
cs
mov
cmp
add
xor
leave
push
xor
testb
xchg
pop
mov
push
fstpt
mov
mov
fadds
or
lret
adc
adc
lods
pop
aas
add
and
push
cld
loope
mov
mov
aam
mov
push
jne
xor
je
fisubl
or
mov
sbb
mov
and
dec
lods
pop
add
mov
xor
enter
inc
mov
sub
inc
push
inc
in
push
pushf
cld
mov
dec
dec
inc
outsb
nop
loope
outsl
cmp
sbb
js
cwtl
and
addr16
pop
or
mov
mov
adc
mov
pop
add
pushf
and
vmwrite
mov
mov
xchg
pop
test
adc
out
andb
movsl
enter
jb
jb
push
les
mov
int3
push
jns
mov
pop
lods
jne
mov
mov
mov
mov
xchg
icebp
add
or
sbb
loopne
mov
andb
or
push
mov
out
push
push
xchg
sub
lds
dec
or
mov
je
lods
into
jge
fadds
sbb
mov
mov
and
fwait
int
rcll
addr16
movsl
outsl
sub
leave
pop
test
xor
movsb
cmp
adc
mov
fstpt
sub
push
inc
mov
add
add
ja
fwait
lret
lahf
insb
add
xor
inc
mov
mov
lock
into
xchg
xchg
dec
cmp
ficoml
sbb
add
cmp
imul
xor
xor
cmpsb
frstor
stc
sbb
dec
mov
sub
lock
movsl
xor
addl
xrelease
jnp
xchg
and
in
xchg
xor
adc
and
inc
adc
jmp
cmp
negb
adc
cmpsb
jb
iret
out
push
mov
xchg
outsb
sarb
sbb
push
ret
test
sub
sbb
add
mov
mov
xchg
cmp
or
aas
in
jne
sub
sub
sti
inc
mov
repnz
mov
cmp
and
pop
pushf
dec
lods
mov
pop
mov
mov
dec
mov
cmpsb
xor
add
test
mov
jmp
dec
sbb
pop
cmp
or
test
jl
out
mov
fstpl
mov
arpl
mov
ret
stc
and
scas
or
push
cmpsl
sub
xchg
mov
aas
lods
inc
mov
loope
jo
xchg
push
sbb
aas
es
out
mov
mov
lcall
mov
mov
sbb
xor
cs
jb
rcrl
mov
les
inc
and
add
xchg
and
push
fistl
shll
icebp
movsb
or
out
adc
adc
xor
jnp
adc
add
neg
and
jmp
aad
int
and
sub
or
sub
jmp
and
jl
mov
pop
in
sbb
add
xor
sub
add
mov
jo
dec
and
push
jge
out
push
pop
ljmp
cmp
push
dec
andb
or
lods
rorl
jb
vandnps
adc
xor
jle
cs
jle
jns
pushf
rcrl
adc
mov
test
fimuls
sub
mov
push
sbbb
aas
stc
dec
test
and
adc
repz
cmp
xor
mov
es
or
call
mov
inc
and
pop
lret
popa
add
sbb
adc
in
push
gs
ja
or
or
test
jl
les
xchg
je
cwtl
and
sbb
arpl
out
or
adc
push
addr16
stos
mov
or
dec
mov
rorb
lea
push
jnp
push
sbb
repnz
push
adc
call
js
xchg
call
dec
push
mov
movsl
pop
pop
sar
loopne
and
pusha
add
sub
dec
pop
dec
lahf
inc
or
jp,pn
je
test
imul
mov
ret
sbb
stos
out
pop
mov
push
sbb
jge
sbb
mov
in
push
mov
sbb
scas
add
or
jecxz
add
adc
mov
cmp
stc
das
inc
test
dec
dec
scas
jmp
imul
lcall
or
sbb
call
sbb
or
pop
cwtl
dec
push
lcall
or
sbb
call
sbb
or
pop
cwtl
dec
push
lcall
or
sbb
call
sbb
or
pop
test
stos
jle
pop
mov
cli
cmp
mov
cwtl
or
cmp
andb
jge
repnz
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
or
sbb
sub
cmp
pop
aaa
out
bnd
mov
inc
test
mov
add
ss
es
sbb
sub
cmp
dec
xchg
pop
or
js
cwtl
push
cwtl
data16
mov
enter
call
inc
add
xor
in
stos
inc
mov
xchg
mov
adc
mov
scas
es
ja
sub
pop
or
push
push
arpl
and
mov
jae
js
pop
out
push
lods
test
xchg
pop
jp
imul
in
jae
push
push
push
inc
jbe
pop
enter
pop
stos
not
in
fucomi
jle
mov
fdivrl
addr16
nop
sti
xor
push
call
push
or
loope
sbb
mov
pop
out
xchg
dec
jns
add
inc
lcall
clc
jne
ret
xchg
movsl
movsl
fsubs
mov
ret
and
add
dec
data16
pop
pop
daa
call
jnp
out
fdivl
divb
ja
adc
jle
pop
mov
call
add
sub
in
pop
xchg
dec
xchg
popa
es
rolb
sarb
sar
ss
dec
test
dec
mov
enter
jmp
mov
hlt
add
add
bswap
jns
jb
ja
inc
addr16
jns
inc
xchg
dec
ret
and
pop
mov
fsubrs
lret
std
adc
inc
mov
sahf
push
pushf
dec
insl
xorb
push
test
repnz
xchg
js
mov
inc
test
mov
push
call
sbb
sub
cmp
dec
xchg
pop
xchg
js
mov
inc
test
mov
push
call
aaa
adc
subps
mov
pop
xor
cmpsl
adc
jle
push
or
ss
subb
jb
lds
or
cmp
int
into
mov
stc
or
add
sbb
inc
jge
outsl
adc
aaa
cmpl
icebp
rcll
mov
dec
loopne
or
dec
xchg
mov
aam
scas
push
inc
stc
roll
ja
xor
enter
mov
inc
daa
push
xchg
or
jae
fbld
int
nop
outsb
push
xlat
mov
add
aas
popl
or
xchg
xchg
mov
movsb
and
leave
jb
mov
test
pop
cmp
mov
push
mov
push
icebp
sub
out
cld
pop
sbb
lret
pop
xchg
pusha
sbb
xor
sarb
mov
jne
ljmp
sbb
push
test
cmpsl
pop
add
lret
add
das
fisubl
popa
push
wrmsr
cmc
dec
xchg
mov
push
and
test
push
jl
push
repnz
pusha
outsl
mov
inc
mov
sti
out
cltd
lods
jmp
fdivrs
leave
sarb
lods
xorl
jo
xor
cld
cltd
je
sbb
sbb
nop
pop
push
dec
popa
in
iret
mov
sbb
add
push
adc
xor
or
pop
shrb
mov
sbb
inc
xor
lock
hlt
pop
pop
out
sub
adc
dec
scas
inc
in
popa
jno
jmp
xlat
add
pop
adc
mov
jne
add
mov
daa
retw
repz
arpl
flds
dec
xor
repz
into
push
jno
or
test
nop
inc
adc
dec
out
jno
loope
xor
arpl
sbb
out
xchg
popf
je
mov
dec
scas
sub
fnstsw
js
sahf
xchg
mov
sti
lcall
or
mov
roll
jle
mov
or
cmp
mov
shr
mov
inc
int3
inc
mov
out
dec
stos
cli
add
adc
push
fnsave
xchg
movl
and
xchg
add
cmp
xchg
je
cmp
sub
mov
aas
or
inc
pop
inc
pop
sbb
and
sbb
or
popa
adc
or
shrl
inc
xchg
sub
dec
imul
arpl
add
mov
nop
scas
jl,pt
mov
xlat
mov
icebp
imul
pushf
push
sbb
mov
xor
fsub
movsl
inc
push
cmpxchg
movb
popf
add
into
mov
dec
testl
xchg
mov
ja
xchg
loop
gs
dec
daa
shrl
jg
dec
push
sbb
or
adc
jns
rcrb
xor
cmp
lret
stc
ja
xchg
sbb
dec
or
popf
adc
aad
lret
pop
aas
xor
jl
out
aam
mov
xor
xor
hlt
mov
inc
cld
in
push
jecxz
pop
fdivr
je
lods
dec
ret
sbb
sahf
movsb
pop
es
xchg
in
hlt
sub
xor
repnz
pusha
pushf
repz
sub
outsl
rcll
mov
ja
into
inc
inc
inc
jmp
into
loop
scas
insl
pop
or
orb
adc
lret
dec
sub
xlat
fisttpl
jne
and
mov
push
lret
test
mov
add
clc
jl
mov
adc
sbb
mov
or
stos
or
and
dec
jg
inc
test
rcrl
scas
ret
mov
push
cmp
xchg
pop
movsl
xchg
inc
pushf
icebp
ljmp
push
mov
es
add
push
pop
fmull
lret
aaa
adc
mov
mov
jge
push
push
mov
cmp
popa
lret
cwtl
cltd
int
inc
inc
loopne
inc
dec
xchg
movsl
adc
clc
nop
inc
xchg
pop
cmpsb
mov
inc
sbb
lret
std
push
imul
cmp
and
mov
jae
adc
jne
pop
jecxz
xor
addr16
mov
push
fs
scas
add
mov
lcall
cmp
and
lods
stc
outsl
push
in
pusha
test
sub
cltd
mov
notl
pop
mov
pop
insb
cmpsl
fdivrp
push
insl
push
clc
jno
pop
dec
imul
test
imul
pop
add
shll
mov
mov
or
clc
ret
inc
jmp
sub
ret
pushf
xchg
ret
and
aaa
push
adc
pop
jne
call
dec
fisubl
xor
push
cmp
xchg
cli
popa
or
mov
repnz
push
fsubl
push
or
stos
mov
insl
cld
cmpsl
or
push
mov
xchg
add
sub
cs
imul
pop
mov
mov
icebp
cmp
dec
in
cld
mov
jecxz
jne
mov
sbbl
into
adc
mov
mov
nop
test
lds
ljmp
or
push
jb
cmc
dec
stc
mov
jg
les
mov
jle
mov
imul
add
fstpl
daa
mov
scas
xor
adc
add
je
xor
xor
and
push
por
inc
push
leave
sbb
ret
dec
lcall
sbb
lret
aam
dec
clc
xchg
push
lods
hlt
test
popf
sbb
push
xor
stos
call
ljmp
push
xor
add
inc
pusha
adc
xchg
cld
jne
lahf
cmpsl
mov
jo
inc
push
fwait
xor
icebp
xchg
pop
pop
test
sub
adc
jns
les
mov
out
pop
movsb
lret
ret
xor
xchg
jp
xor
sbb
pop
cwtl
and
xchg
pop
sub
test
xor
add
outsl
cli
cwtl
outsl
imul
xor
pop
cmp
iret
stos
test
push
dec
and
push
jl
inc
push
shr
in
lret
mov
movsb
fwait
xor
in
dec
stc
push
lds
mov
in
fildl
sarb
insb
push
cltd
cmpsl
inc
xor
and
adc
fwait
out
xchg
inc
pop
inc
mov
out
mov
and
mov
sahf
adc
add
pop
jne
inc
aaa
adc
ret
push
call
rcll
or
repnz
push
cltd
pop
cmp
lahf
push
dec
add
push
adc
in
jl
mov
push
sbb
fmuls
call
ret
test
jecxz
push
push
out
adc
popa
mov
aam
inc
scas
xor
sbb
mov
daa
push
out
mov
sbb
ljmp
xlat
sbb
scas
out
mov
clc
sub
mov
pusha
bound
scas
out
push
pop
in
inc
adc
cmpsl
stc
ds
and
imul
sub
cmp
or
add
cld
sti
jecxz
dec
scas
das
test
jecxz
testl
and
jo
scas
fbstp
add
pusha
test
fists
xor
pop
push
ljmp
sbbb
lcall
mov
and
sub
out
pop
add
ficoms
dec
inc
mov
mov
ds
adc
mov
sbb
out
sbb
out
cmpsl
or
in
lods
into
lea
pop
and
add
pop
mov
enter
and
push
mov
jne
cmc
mov
sub
jnp
gs
mov
inc
scas
aas
in
pop
adc
cli
insl
jno
mov
call
xchg
sub
jl
sub
aad
stos
or
pop
mov
testl
lret
jbe
mov
and
mov
data16
mov
enter
shll
and
hlt
pop
push
lcall
xchg
or
ret
insb
cld
leave
ss
lcall
xchg
pop
stos
sahf
mov
leave
adc
cmp
pop
jmp
xor
test
sar
lds
cmp
lods
sbb
cli
mov
repnz
ljmp
enter
jbe
jo
int
dec
cmp
cltd
jmp
and
jg
outsl
out
stc
faddl
add
inc
or
mov
scas
and
sbb
sbb
sbb
loopne
in
movsl
lea
bound
push
sub
gs
inc
adc
mov
aad
xlat
and
stos
call
jb
and
mov
xchg
dec
in
in
cmpsl
rol
sbb
jmp
in
mov
push
clc
pop
lret
cmp
adc
in
push
sub
aam
je
enter
adc
ljmp
push
cltd
add
cmp
call
push
sub
cmp
mov
sub
adc
repnz
jmp
jle
xchg
jno
pop
and
xor
movsl
sahf
bound
leave
iret
xchg
mov
lock
scas
push
leave
popf
pushf
adc
xchg
mov
pop
jecxz
iret
mov
mov
int3
repz
mov
ss
sti
sbb
jge
lods
ret
idivb
push
popf
jle
in
cmpsb
push
pop
pop
shll
das
sbb
clc
jl
sbb
sbb
push
sahf
dec
addr16
and
es
int3
fistpl
ds
push
repz
testb
xor
imul
xchg
ljmp
stos
jmp
adc
insl
push
clc
xor
xor
sti
cmp
ja
rclb
push
mov
insb
xchg
cmpsb
pop
imul
pushf
jle
lcall
mov
push
cs
pop
sti
test
sbbb
inc
push
gs
xor
scas
mov
push
arpl
mov
or
mov
push
movsl
inc
sbb
movnti
jle
dec
sub
mov
dec
mov
add
sbb
pop
popf
aaa
pop
mov
xor
lea
jl
shrb
pop
push
cs
clc
ljmp
shlb
popf
movsb
ljmp
push
popf
cmp
push
cmp
ds
or
pop
push
jb
ljmp
mov
addr16
add
into
or
push
shlb
mov
repnz
jl
cmp
xchg
nop
lods
xor
mov
outsl
stos
ljmp
and
ljmp
es
push
mov
fucompp
mov
adc
andb
enter
dec
push
popf
call
jl
adc
ret
dec
lds
call
bound
loop
and
add
xchg
xchg
inc
push
enter
dec
adc
sub
jmp
dec
sbb
pop
cmp
or
call
mov
sub
mov
mov
lds
ds
lret
aam
xchg
cmc
movsl
jmp
scas
or
lea
cmp
and
xchg
jle
xor
and
out
cwtl
mov
add
inc
dec
add
shlb
lea
adc
dec
push
add
mov
push
sub
mov
leave
cmpsb
rorb
shlb
and
or
lods
push
jns
ss
int3
jle
int3
sti
push
inc
lods
mov
les
dec
inc
lods
jnp
ja
sarb
out
rcrl
dec
cltd
cmpsl
ret
cmp
adc
sub
ret
test
out
scas
aaa
pop
popf
in
push
loop
out
pop
leave
stos
nop
jp
mov
cmp
push
ss
inc
pop
push
hlt
dec
loope
aad
or
add
rcll
lea
mov
or
cli
cmp
mov
sbb
mov
fmull
pop
and
or
xor
cmp
mov
lock
mov
xchg
push
mov
inc
mov
fwait
mov
mov
dec
inc
adc
or
cmp
dec
inc
mov
sbb
xchg
mov
stc
fwait
cmpsb
xchg
add
dec
negb
movsb
hlt
adc
mov
test
inc
stos
cltd
xchg
ds
fiaddl
shl
dec
mov
mov
test
je
out
push
stos
jecxz
pop
roll
sti
sbb
iret
test
cmp
ja
lahf
repnz
mov
xlat
sub
mov
jno
in
arpl
or
jmp
in
mov
or
xor
xchg
call
sti
xor
lret
add
pop
adc
cld
ret
inc
xlat
test
cmp
sub
cmc
pop
mov
sbb
inc
adc
cmp
out
outsl
loopne
cmp
mov
jbe
ret
cli
or
xor
mov
int
xor
jno
and
sti
fs
ja
xchg
sti
mov
cmpsb
in
cmp
add
pop
or
hlt
in
sbb
sti
scas
mul
inc
int
adc
fidivrl
gs
push
mov
xchg
es
rorb
sti
sbb
enter
cmp
jg
mov
pop
or
out
mov
xor
cwtl
stos
cmc
fidivrl
cmp
push
call
push
rorb
jecxz
subl
xchg
dec
idiv
arpl
cmp
pop
aas
lcall
lods
cmp
nop/reserved
sub
aad
or
add
fisubrs
cwtl
notl
inc
enter
mov
arpl
xor
inc
lcall
pop
dec
shrl
sub
cwtl
jl
fisubl
outsb
adc
fldcw
xor
adc
cmp
or
pushf
fs
sbb
sahf
dec
lahf
mov
lods
lcall
adc
cmp
test
push
rorl
and
mov
sub
data16
pushf
sbb
lahf
sbb
test
and
stos
or
or
mov
sbb
shrl
addl
outsb
fsub
sbbl
push
ret
popf
inc
fdiv
insl
enter
xchg
jo
inc
mov
pop
testb
mul
sub
mov
jbe
push
sub
mov
add
and
iret
add
js
mov
pop
mov
test
mov
and
push
fs
repz
cmp
push
cld
std
xchg
jl
repnz
adc
std
adc
insl
rclb
subl
es
loope
or
fisttpll
out
inc
sub
pop
fdivs
push
into
xor
repz
in
mov
or
fisubrs
inc
push
mov
xchg
fs
test
frstor
test
lods
outsl
adc
jmp
cld
pop
jmp
fisttpll
popf
inc
push
push
xchg
push
lods
pusha
mov
fisubl
out
push
push
cmc
sahf
aam
sub
dec
stos
lret
add
iret
data16
mov
xchg
push
adc
shlb
add
sbb
and
mov
add
xchg
jnp
jmp
ds
out
mov
shlb
mov
ficomps
bnd
pop
pusha
hlt
insl
jns
add
aas
stc
stos
cwtl
sub
test
insb
add
addl
clc
mov
jae
pop
mov
bound
add
mov
adc
cwtl
cmp
pop
pop
and
xchg
inc
outsb
and
inc
pop
in
rolb
stos
icebp
pop
popf
mov
xchg
mov
fisttpl
gs
call
and
std
test
test
into
dec
mov
push
push
shlb
mov
jg
test
jo
mov
inc
pop
and
push
iret
jne
fiaddl
pop
xchg
xor
sahf
icebp
mov
and
enter
ret
cmp
jg
add
jmp
aad
rorl
loopne
cmc
test
cmpb
xchg
or
and
test
cmp
movsl
lea
fwait
decl
sbb
lret
out
add
adcl
push
mov
enter
stc
fs
mov
ja
push
int
ja
icebp
mov
neg
push
push
jmp
adc
mov
adcl
mov
pushw
xchg
adc
fcmovnbe
inc
jge
or
mov
xor
mov
xor
fdivrs
movsb
shlb
cli
test
sub
loop
rcll
or
inc
sub
scas
mov
cltd
sbb
jle
and
adc
push
lock
or
sbbl
test
call
js
fldl
and
sbb
dec
mov
idiv
inc
push
mov
mov
push
or
sahf
enter
sahf
not
xor
pop
cs
aam
mov
out
xor
cmp
loope
jae
push
iret
jno
add
pop
cmp
call
sbb
out
icebp
fs
jno
dec
lods
sti
movsb
loop
cli
xchg
cli
inc
int
jg
pop
out
arpl
or
bound
mov
pop
repz
mov
mov
and
or
pop
xchg
mov
dec
dec
imul
test
aam
fwait
sahf
xchg
dec
in
sti
scas
cmpsl
pushf
xor
clc
inc
xchg
int3
mov
ljmp
sarl
sbb
lret
adc
inc
jmp
dec
into
mov
fildl
cmpsb
cmp
cld
jmp
bound
test
inc
fsubrl
sahf
sub
lea
push
pop
rcrl
jp
cmp
mov
mov
pop
in
enter
add
cmpsb
ljmp
jbe
in
daa
insl
or
test
out
lods
mov
gs
jmp
sub
sbb
cld
gs
imul
adc
pop
sub
loopne,pn
xchg
push
test
faddp
mov
mov
arpl
and
jge
sbb
js
fmuls
test
fstl
ljmp
jg
addb
mov
pop
int
enter
dec
loop
mov
loopne
inc
mov
jle
inc
enter
push
jp
js
jb
cs
xchg
jnp
imull
cmp
adc
std
xchg
rcrb
out
test
or
bound
mov
or
lret
pop
push
dec
inc
repz
mov
fnsave
jmp
lods
cmp
pop
jmp
subl
xor
jl
nop
les
xchg
insb
push
in
jmp
movsb
mov
xor
inc
jae
in
mov
sub
lcall
aad
mov
add
cmpsb
add
aam
add
pop
sub
leave
pop
mov
xchg
jp
jae
sbb
nop
sarb
or
mov
setbe
pop
out
xchg
jbe
out
add
into
or
pop
xchg
test
lock
adc
dec
repz
test
les
cli
aad
nop
cmpsb
xor
js
mov
cmp
out
outsl
mov
and
cwtl
jnp
mov
push
mov
daa
jo
jp
and
sbb
mov
inc
cld
cmpsb
push
inc
push
lcall
out
mov
call
outsl
xchg
std
data16
rorb
repnz
xchg
adc
movsb
outsb
jne
scas
loop
jmp
dec
jne
adc
mov
pop
adc
or
nop
mov
js
inc
dec
ja
dec
cli
jge
push
pop
pusha
mov
mov
dec
ret
test
loopne
push
aas
clc
and
outsb
je
inc
jecxz
mov
aam
test
scas
sbb
mov
sub
pushf
push
lret
sti
cld
jne
cmp
inc
cld
aad
loop
mov
xor
xchg
push
imul
pop
xor
inc
or
hlt
xchg
push
movsl
icebp
movsb
ret
stos
jb
in
pop
popa
pop
mov
dec
fisttpl
cmc
imul
mov
mov
mov
cmp
aaa
pop
out
jo
or
sbb
stc
mov
stc
mov
sahf
loop
sti
mov
mov
push
rorl
pusha
dec
addb
mov
mov
push
jnp
xor
out
push
dec
jp
xchg
adc
shr
fwait
add
insl
stos
rol
icebp
pavgb
ja
mov
and
dec
or
idiv
cli
add
in
cmp
jnp
dec
mulb
in
psubsb
jecxz
imul
fwait
sub
pusha
inc
aas
jne
pushf
cmpsl
ds
stos
divl
test
ret
push
mov
mov
pushf
in
inc
inc
sub
fbstp
cmp
mov
lock
insb
add
mov
jnp
lret
sbb
les
movsl
repnz
emms
out
lcall
pop
fisubrl
lods
mov
test
rcl
mov
dec
inc
inc
int
jge
loope
or
lret
outsb
pop
fwait
push
or
xchg
fisubs
call
cs
sti
lahf
mov
es
and
jnp
scas
xchg
or
adc
jns
adc
dec
and
fnsave
ret
int3
pop
jle
outsl
jbe
popa
push
adc
out
test
sbb
cltd
pop
js
mov
imul
push
jb
aam
in
xor
and
pop
xchg
js
mov
inc
test
mov
push
call
sbb
sub
cmp
dec
xchg
pop
xchg
js
mov
inc
test
mov
push
call
sbb
dec
xchg
pop
cs
mov
enterw
call
sbb
sub
cmp
dec
xchg
pop
xchg
ss
cmpsb
ja
addr16
add
adc
leave
pop
fsts
in
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
data16
jbe
inc
mov
inc
cmpsb
push
testl
cmpsb
pop
mov
xchg
imul
mov
push
stos
fildl
sti
push
lahf
out
testb
cmp
sub
mov
xchg
imul
xchg
inc
mov
roll
jecxz
icebp
out
aad
stos
inc
pop
cmpsb
adc
aas
repz
add
xlat
adc
inc
fidivrs
int3
out
adc
add
sarl
dec
aas
pop
sub
mov
xchg
adc
fwait
std
add
mov
sti
fldcw
jmp
sbb
jae
cmp
aam
cmp
xchg
ss
jle
inc
mov
hlt
lods
push
inc
loopne
enter
sbb
aam
dec
repnz
xchg
lds
sub
push
clc
add
and
orl
cmc
cmp
mov
into
add
push
xchg
je
inc
test
mov
push
out
hlt
inc
ret
stos
xchg
cmc
pop
dec
pop
sub
incl
push
les
cli
push
mov
cmp
aam
jae
stos
ret
jns
insl
stos
mov
inc
mov
ss
push
sti
push
repnz
notb
and
xor
popa
xchg
push
fwait
add
das
fidivrs
into
flds
xchg
adc
out
xchg
or
aas
scas
dec
cmpsl
ds
in
rolb
add
adc
and
cmp
jle
inc
flds
pop
sub
sbb
pop
add
cmp
push
ss
push
sti
push
jmp
sbb
or
cmp
sub
jnp
imul
mov
push
stos
lret
push
sti
push
jmp
sbb
or
cmp
sub
jnp
imul
cwtl
fstpt
test
pop
jle
mov
loopne
sbb
in
in
out
imul
fwait
jb
fimuls
mov
push
lods
jmp
sahf
insb
add
sbbl
fcomps
inc
pop
sbb
push
adc
clc
jno
fwait
adc
push
pop
xlat
frstor
ss
and
jo
xchg
or
dec
in
dec
imul
enter
push
mov
pop
dec
xchg
and
imul
cmp
pop
inc
ja
lahf
mov
jbe
hlt
mov
mov
xchg
push
xor
adc
push
mov
mov
adc
jmp
jne
sbb
xchg
fisttpll
mov
mov
lea
mov
arpl
sub
test
inc
fnsave
xchg
jnp
ljmp
rclb
cmc
cmp
shll
popa
iret
loope
sbb
dec
adc
out
test
iret
inc
sti
push
outsb
fisttpl
adc
lret
jbe
test
inc
out
test
mov
rorl
jmp
push
xchg
xor
mov
fwait
ret
xchg
pop
push
sbb
fistps
sub
pop
fstpl
fsubs
mov
in
mov
pop
lods
dec
cld
mov
jns,pt
or
push
mov
cmp
push
sub
push
sbb
jns
mov
iret
pop
call
fdivl
out
fstpl
push
int3
jae
add
gs
mov
mov
dec
add
or
push
pop
ret
pop
and
xchg
add
sbb
popf
sbb
mov
test
js
int
xchg
cmpsl
mov
loopnew
jecxz
push
cltd
insl
sbb
divl
xor
dec
fidivs
out
std
mov
imul
sub
xchg
sahf
jp
mov
jl
xor
jbe
jno
dec
cmpl
stos
mov
idivl
scas
int3
pop
push
fmul
push
mov
lret
sti
mov
cmpsl
stos
jbe
adc
cmp
jg
mov
adc
xor
pop
lahf
lea
mov
fldl
sub
and
test
push
or
jl
outsl
jb
movsb
jne
insb
mov
or
or
fisttps
xor
mov
adc
out
ret
jl
xchg
jecxz
mov
ret
loopne
dec
jnp
repz
mov
adc
scas
rolb
xchg
popf
xor
and
lret
lods
pop
rcll
iret
in
fwait
push
shrb
pop
or
mov
and
inc
mov
enter
mov
push
cwtl
cli
xor
push
mov
hlt
fstpt
pusha
mov
jp
movsb
sub
insl
add
mov
sbb
cmp
negb
push
lock
insl
data16
scas
dec
mov
jmp
dec
sar
and
fdivr
arpl
inc
pop
mov
or
sahf
push
jmp
add
lock
or
lss
gs
or
sbb
icebp
lods
aad
icebp
lods
push
push
stc
push
fldt
aaa
lret
fs
divps
out
fimull
dec
jp
pop
shll
push
mov
loop
xlat
loop
cli
sbb
negb
adc
mov
pop
out
je
sbb
insl
jb
iret
add
inc
adc
rcl
sahf
add
or
xor
fucom
xchg
in
sub
fcmovnu
mov
sbb
test
aaa
and
je
call
mov
lds
adc
repnz
sti
inc
sbb
test
add
leave
movsl
clc
mov
xor
lret
out
mov
add
loopne
fisttps
cmp
or
cltd
test
int
xor
repnz
push
int
add
xor
jecxz
dec
inc
popf
rol
and
outsl
pop
das
imul
xor
mov
mov
cmp
lret
mov
je
or
cs
pop
push
stos
lds
sub
xor
out
fildll
cwtl
xor
cwtl
add
xchg
mov
xchg
pushl
rcl
leave
dec
dec
int
fildll
std
add
aas
imulb
jae
cwtl
btc
icebp
push
pop
jmp
mov
inc
mov
add
inc
aaa
out
int
loopne
mov
mov
and
in
jno
mov
scas
ret
dec
jge
pop
ret
das
push
shlb
pop
adc
push
and
sub
aas
jg
stos
sbb
cmp
jecxz
lea
jnp
sub
arpl
inc
out
cmp
outsb
out
daa
xlat
cltd
jns
push
insl
inc
mov
decl
xchg
into
cmp
movl
movsl
movb
in
mov
jb
repz
pop
cmp
mov
imul
adc
outsl
sahf
xchg
fcompl
inc
pop
outsb
movsl
mov
adc
cmp
icebp
and
notb
jle
iret
pushf
cld
or
push
adc
add
rclb
inc
inc
test
icebp
add
ljmp
add
lahf
mov
idiv
dec
je
sti
cmpsb
in
imul
test
arpl
sub
in
aad
xor
dec
push
xchg
cmp
mov
out
pop
pop
nop
mov
lahf
xchg
lcall
cld
imul
dec
sub
adc
les
xchg
dec
pop
mov
dec
mov
xor
xor
jmp
repz
cmp
and
stos
xlat
sti
mov
mov
or
and
jg
mov
add
fwait
popa
std
repz
cli
ret
jbe
stos
mov
fists
lock
out
das
lock
jae
test
cmpsl
sub
jg
outsb
and
push
bound
push
addr16
cwtl
add
dec
sbb
add
out
inc
fcmovb
outsb
add
andl
sahf
pop
imul
pop
fisttps
call
sbb
jmp
lret
insb
cmp
sub
mov
les
push
clc
dec
call
test
sarb
lods
mov
sub
and
xchg
pop
rol
aam
mov
jno
sub
jge
test
in
mov
test
insl
fisubs
and
rcl
nop
ficoml
dec
ds
outsb
and
or
ror
mov
pushf
and
mov
and
xor
push
jmp
lret
mov
mov
inc
daa
mov
out
stos
dec
stc
sbb
mov
jle
in
pop
fidivrs
push
add
sti
cli
clc
xchg
sahf
jb
add
or
lret
jecxz
pop
and
add
jnp
out
not
gs
pusha
jg
dec
xor
adc
lret
ds
fnstcw
dec
mov
inc
faddl
adc
rcll
inc
push
jb
mov
aad
jp
mov
push
shll
movsl
fcompl
push
pushf
xor
add
jmp
push
sub
push
movsl
mov
sahf
cmp
add
repnz
and
es
cmp
jmp
and
je
stos
jae
iret
sbbl
in
sub
lock
mov
sub
insl
fcomps
mov
or
out
ja
fistps
iret
and
cmpsl
lret
jno
cmpsl
xor
or
cmp
mov
mov
add
add
jo
dec
xchg
lcall
inc
xchg
mov
push
aad
imul
mov
scas
push
dec
xchg
sarl
push
shrl
jg
and
dec
pop
in
xor
sahf
aad
into
xchg
out
sub
pusha
mov
lods
fucom
lret
jnp
push
pop
xor
adc
jnp
rcrl
inc
inc
push
or
pop
push
add
sti
fstpl
pusha
es
sub
sub
push
es
aas
mov
loopne
cli
in
sbbl
mov
ljmp
mov
inc
mov
push
add
cmp
push
cwtl
out
xchg
jle
sbb
cld
loop
es
lea
test
shlb
movsl
sub
cmc
cltd
loopne
mov
repz
push
sar
enter
and
clc
lock
ret
out
adc
pop
dec
push
sub
dec
data16
adc
xor
jl
add
pop
inc
xor
lret
xchg
sbb
or
xor
jbe
jp
loopne
sti
pop
int
fs
jge
mov
jge
xchg
and
inc
sbb
mov
pop
xchg
stos
or
mov
lret
ret
xchg
dec
cmp
dec
inc
insl
add
adcb
fnstenv
iret
sub
fnstcw
loopne
cmp
xchg
ja
cmp
outsl
loope
mov
das
imul
pop
xor
mov
mov
jge
mov
xchg
lods
dec
mov
repnz
pop
cmp
cwtl
inc
or
jge
out
fmulp
daa
push
pop
push
cmp
sub
pop
add
xor
push
adc
cltd
mov
imul
leave
inc
js
enter
xchg
in
pop
mov
cmp
stc
xchg
loop
stos
mov
adc
mov
decl
mov
mov
popa
cmpsl
movb
test
pop
xorb
and
data16
and
out
pop
xor
and
lea
and
cmp
ljmp
dec
fwait
outsl
mov
lea
imul
testl
movsb
mov
stos
das
lods
notl
dec
movsb
icebp
mov
adc
sti
mov
mov
adc
repz
or
rcrb
movsl
test
pop
inc
mov
cld
cltd
cmc
inc
loope
int3
xor
cld
fmul
hlt
pop
idiv
push
popaw
jbe
inc
push
pop
scas
imul
sarl
in
push
or
in
loopne
cwtl
lret
loopne
push
nop
or
stos
stc
repnz
mov
push
and
cld
or
xchg
imul
hlt
sbb
and
cltd
jae
xchg
ffreep
sub
nop
mov
mov
ret
sti
dec
popf
ffree
pop
push
cltd
aad
add
cld
test
or
negl
les
hlt
lock
add
imul
rcl
std
push
mov
subl
jne
aas
cmp
xchg
sub
mov
sub
mov
paddw
ret
add
xchg
cmp
cmpsb
js
inc
jbe
mov
mov
nop
leave
mov
inc
movb
lahf
push
dec
pop
add
lcall
imul
add
or
lods
loopne
jg
aad
xchg
inc
dec
lds
fdivl
test
mov
les
ret
arpl
lods
xlat
leave
mov
lds
outsl
adc
jmp
movsl
test
jecxz
sbb
js
pop
mov
fs
xchg
mov
outsl
adc
push
mov
dec
sarb
mov
adc
adc
aam
inc
out
sarl
orl
mov
das
das
loop
test
xchg
ljmp
mov
sarl
mov
and
lods
xchg
hlt
mov
std
inc
dec
popl
out
aad
xchg
xchg
xor
cmpsb
das
stos
lods
push
inc
cmc
mov
sub
and
cld
imul
pusha
push
icebp
push
mov
push
mov
lahf
les
stos
sti
js
sub
xor
xor
inc
outsb
adc
mov
call
popf
aaa
push
inc
bound
mov
test
xchg
nop
push
sbb
mov
jmp
cmpsb
add
popf
repnz
shrl
xchg
mov
es
aas
adc
adc
stos
fcoml
push
add
mov
insl
sti
arpl
sbb
push
mov
sub
pop
and
add
push
pop
lret
sbb
clc
or
xor
xchg
mov
imul
imul
fbstp
sub
sarl
add
cmp
roll
xchg
push
add
int3
test
xor
dec
int3
mov
jmp
dec
dec
xchg
ror
mov
rcl
notl
mov
pop
loope
inc
out
iret
push
jns
xchg
int3
inc
add
adcb
mov
sub
or
icebp
popf
pop
xchg
lods
fsub
rcl
stc
lahf
fsubrs
push
mov
cltd
insb
repz
mov
push
rcr
shlb
add
push
clc
push
stos
out
das
xlat
jp
out
push
sbb
inc
je
pop
lock
pop
lods
addr16
icebp
in
pop
pop
lahf
push
and
xchg
push
xchg
dec
xchg
xchg
lahf
out
andb
pop
out
clc
inc
or
movsb
inc
dec
jb
insb
in
sbb
xchg
pop
sub
ret
pop
les
imul
dec
cmpl
andl
cld
out
rorl
cmp
adc
or
int
adc
movsl
pop
mov
adc
jmp
jmp
int3
xor
cmp
rcll
inc
ret
ret
in
cmp
enter
out
sub
xor
addr16
push
inc
lahf
add
or
or
mov
sub
inc
sahf
cli
popf
cltd
movsl
mov
jecxz
imul
orb
push
hlt
out
push
aam
int
pop
cli
rcrb
lcall
xor
sub
push
cmp
and
das
bound
sub
aaa
jle
cmp
loope
js
and
add
mov
mov
jl
jp
std
fstl
sbb
mov
xchg
xchg
movsl
xor
mov
pop
add
mov
cltd
fsub
out
adc
jl
cmp
test
mov
shll
pop
test
pop
sub
sub
loop
inc
aaa
adc
adc
call
or
cmpsb
cmp
pusha
hlt
adc
in
pop
sub
shrb
jmp
mov
mov
jmp
leave
add
or
xchg
pop
popa
dec
test
mov
dec
sub
mov
mov
subl
jns
mov
jbe
pop
cs
or
sub
lret
mov
ficoml
mov
xor
jge
movsl
cwtl
fcmovbe
shl
sbb
sti
popa
or
and
or
pcmpeqb
ds
push
xchg
and
sub
cmpsb
daa
and
cltd
lret
xor
addb
or
iret
popa
mov
mov
mov
sbb
pop
flds
or
or
std
mov
das
insl
out
xchg
mov
stos
lods
xchg
mov
nop
push
in
pop
sbbb
stos
push
sub
sub
sub
sub
mov
mov
stc
add
lods
adc
test
jns
das
fcompp
fcmovnbe
lods
es
out
fndisi(8087
add
add
daa
aam
add
dec
in
and
mov
cltd
dec
fimull
xlat
mov
shrb
dec
pop
cmpsb
in
fwait
rclb
into
mov
out
lods
xor
xchg
cmp
outsb
xchg
call
cli
xchg
mov
fistl
aam
xchg
jns
xor
push
inc
fsubl
jg
repz
adc
repnz
ret
pop
loopne
movsl
dec
enter
mov
push
cmp
insl
rol
test
loopne
push
push
adc
das
mov
scas
mov
test
mov
jae
fidivrs
jge
repnz
cmpsb
jo
jae
xlat
fnstenv
addl
jg
pusha
out
movsb
inc
mov
movsb
negl
inc
dec
pop
adc
fistl
push
sti
dec
jo
mov
and
sub
sub
mov
orb
push
bound
dec
mov
int
mov
mov
jns
in
int3
in
xor
pop
stos
pushf
nop
cmp
cs
mov
fbstp
mov
mov
movsl
stos
inc
jb
stos
sub
in
jmp
and
lock
push
push
mov
lret
push
subb
sub
dec
sub
jmp
and
pop
mov
xor
push
pop
ss
shll
hlt
push
mov
faddl
shrb
sub
lret
fsubr
or
push
cmp
mov
sbb
push
js
pop
jmp
popf
out
inc
cltd
or
rcr
mov
out
xchg
xchg
fstps
xor
shl
in
mov
inc
and
fcompl
cltd
negb
frstor
add
push
call
cmpb
daa
scas
or
or
js
and
lods
xchg
adcb
sar
mov
enter
pop
imul
push
dec
les
decb
movsb
mov
push
int3
xchg
popf
int
iret
add
sti
xchg
cmp
mov
gs
cmpsl
popa
pop
push
aas
xor
lods
or
jo
mov
cltd
lret
push
pop
dec
push
jl
or
cltd
fisttpll
xlat
testl
leave
stos
jb
mov
int3
mov
push
out
sbbl
sub
dec
gs
jnp
shll
test
sbb
cs
call
ja
xor
pop
cmpsl
inc
sbb
cmp
mov
pop
push
inc
and
in
push
and
shrl
pop
adc
pop
jle
scas
mov
out
pushf
or
xor
and
sub
mov
xchg
mov
fimull
out
adc
or
mov
js
fldenvs
push
and
pop
dec
arpl
fs
leave
pop
pop
repnz
cmpxchg
lods
ljmp
shlb
mov
bound
and
mov
jge
movsb
inc
and
mov
jbe
rcrb
popa
enter
cmp
push
adc
orl
xchg
bt
jns
adc
das
in
pusha
sub
int3
mov
adc
les
aaa
jp
cmp
out
addr16
sbb
cmc
shll
fldt
imul
xchg
or
sbb
subb
stc
mov
dec
fisubrl
shlb
push
cmpl
outsl
adc
fmuls
cltd
out
and
shrb
push
add
rcrb
ret
daa
inc
sahf
out
ljmp
test
inc
out
sub
add
mov
bnd
adc
sbb
fiaddl
inc
mov
mov
out
mov
int3
popf
gs
arpl
adc
pop
imul
aaa
xor
mull
push
stos
adc
pushf
xchg
les
add
mov
push
add
addr16
mov
mov
sbb
call
xor
cld
jbe
lret
mov
out
add
fwait
jp
or
inc
add
ja
pushf
jge
sbb
mov
sub
neg
xor
dec
pop
sbb
loop
cmpsb
or
add
cmpsb
dec
mov
shrb
jecxz
fisttps
xlat
add
in
shrl
loopne
and
mov
in
repnz
lret
arpl
mov
cmpsl
add
cltd
sbb
add
and
ljmp
rcr
in
dec
int
fsubrl
jo
push
sbb
daa
lock
cmp
in
add
in
jmp
and
push
aad
sub
jge
cmpsb
and
jecxz
jns
iret
fucomi
jbe
loopne
inc
push
addr16
push
jns
jl
xor
lds
test
fwait
or
cmp
in
dec
mov
and
rcrl
mov
adc
xor
cmp
push
push
cld
inc
push
push
loope
push
lahf
test
into
pop
aas
data16
data16
dec
cmp
jecxz,pn
mov
sub
popl
jae
imul
sub
out
in
inc
inc
fbstp
adc
cmp
sbb
fucom
push
test
sahf
cli
cli
sbb
and
fnstsw
loop
pop
add
xchg
es
stc
mov
ret
lds
repz
jbe
dec
out
lcall
add
jge
xor
leave
popf
lret
rcrb
neg
sub
ss
xchg
mov
pop
lods
xorb
push
cmpsl
jnp
push
and
cmpsb
xor
cld
cwtl
mov
pop
cli
pop
les
hlt
mov
and
jp
jmp
mov
jb
movsb
sti
lahf
sub
sub
dec
xchg
fisubl
bound
mov
add
mov
xor
test
in
orb
in
mov
test
ljmp
add
cs
inc
icebp
mov
sbbl
push
cmp
mov
jg
leave
jbe
subl
mov
sti
gs
push
inc
sbb
xchg
push
fiadds
popa
subb
xor
or
aad
push
mov
test
adc
jae,pt
call
pop
or
test
xchg
dec
dec
add
movsl
in
test
xlat
dec
mov
push
jmp
decl
cmp
and
es
push
bound
push
dec
push
mov
or
or
test
mov
mov
test
pop
mov
test
ljmp
or
lods
rol
dec
imul
and
inc
mov
ss
push
sti
push
jmp
sbb
or
cmp
sub
jnp
imul
mov
push
stos
lret
push
sti
push
jmp
sbb
or
cmp
sub
jnp
imul
mov
mov
ss
push
sti
xchg
jmp
sbb
or
cmp
das
cmpsb
pop
mov
xchg
outsl
data16
jbe
inc
mov
ss
push
sti
push
sub
sbb
mov
rol
xor
add
adc
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
xor
xchg
mov
in
mov
lds
push
add
jae
push
gs
jne
test
mov
ret
add
adc
inc
gs
jne
and
ret
loop
repnz
ret
and
ja
add
sbb
bound
cmp
aam
test
imul
loope
mov
addr16
fisubrs
out
adc
xchg
push
not
rorl
sar
pop
dec
sbb
jmp
lahf
push
lea
dec
out
stos
cmp
in
mov
cld
repz
out
js
dec
adc
bound
fdivl
pop
mov
test
mov
rcr
in
and
hlt
cmc
add
cli
xor
push
and
push
lcall
rcrl
dec
or
cli
aam
and
or
inc
inc
push
lds
lds
das
sbb
lods
clc
pop
jp
push
rclb
add
adc
fstl
inc
ja
lahf
pop
push
sub
push
pop
std
or
mov
ret
and
xor
bound
mov
test
cli
out
leave
mov
nop
mov
dec
inc
andb
jbe
push
add
cmp
adc
sbb
ret
icebp
shl
fcmovu
xchg
stos
jo
pop
pusha
jp
ja
sub
add
add
aam
pushf
jne
leave
mov
mov
in
cmc
and
adc
inc
gs
jne
test
mov
ret
cmc
and
adc
inc
gs
jne
test
pop
xchg
mov
cmp
gs
loop
jle
dec
mov
and
or
push
dec
daa
icebp
cltd
xor
dec
jbe
add
cmp
fsubl
hlt
dec
fdivr
and
cmp
popf
sub
xor
fisttps
push
lds
jns
or
cwtl
sub
cli
aam
xchg
loopne
gs
mov
cli
jnp
push
mov
addr16
xchg
outsl
lcall
adc
nop
ss
dec
das
into
jnp
clc
divl
jecxz,pn
add
mov
pop
or
outsl
xor
scas
xor
ja
cmp
pop
cmp
cmp
js
xor
cmp
fs
mov
das
sbbb
mov
inc
xor
dec
lcall
pop
mov
mov
fistpl
xlat
inc
sbb
stos
flds
push
push
lahf
xor
inc
mov
idivl
dec
inc
adcb
and
cmp
pop
adc
lock
aad
shrl
arpl
scas
cmc
pop
aaa
movsb
stc
lods
xor
mov
cmc
popf
push
in
mov
and
add
mov
cmp
js
sub
or
fistps
into
push
xchg
nop
xchg
stos
add
outsb
addl
lahf
xlat
out
lret
sub
das
cmp
jg
movzwl
or
xchg
mov
cli
ret
xlat
sub
int
insb
mov
pop
sub
pop
mov
or
sti
fistpll
dec
mov
pusha
xor
and
xor
aad
push
sub
sbb
cmc
dec
fcoms
shll
push
repz
adc
sub
idivb
insb
cmpsb
dec
scas
sahf
loopne
xchg
push
or
cli
das
pop
inc
mov
lods
and
inc
xchg
in
out
sub
mov
inc
outsb
sbb
int
cmc
or
cs
xor
cld
insb
or
pop
inc
popf
ja
sub
pop
mov
inc
icebp
je
adc
pop
pop
and
sub
lods
xor
loop
sbb
cmp
je
and
fwait
push
xchg
rcll
jns
sub
and
inc
mov
shll
filds
or
insb
lock
test
lcall
mov
mov
inc
pushf
in
dec
lock
xor
mov
icebp
nop
mov
in
xchg
add
push
mov
movsbl
or
pusha
sub
push
test
sub
mov
rcrb
fisubs
and
cltd
popf
arpl
pop
xlat
push
add
sub
sbb
mov
xorb
mov
lahf
fs
test
stos
lock
cmpsb
sahf
loop
pop
pop
icebp
adcb
cmpsl
cmc
jmp
pop
jecxz
stos
add
popa
mov
inc
stc
dec
mov
cmp
or
in
int3
mov
div
cmpsb
shll
and
pop
dec
gs
sbb
push
sbb
lret
shr
loopne
add
jae
pop
lahf
mov
es
mov
jo
fdivrl
add
jg
lods
lret
cltd
push
mov
stos
mov
outsl
push
dec
lret
lcall
cmp
arpl
ja
rorl
and
jnp
jmp
scas
adc
sbb
fsubr
add
cltd
scas
mov
cs
mov
aaa
xor
jecxz
je
xchg
mov
stc
or
add
lahf
aaa
std
ret
mov
pusha
aaa
pushf
ret
dec
xchg
out
mov
sub
ljmp
icebp
shrl
jmp
arpl
jns
cltd
push
xor
nop
cmp
lahf
xchg
or
lock
cwtl
scas
ret
hlt
jns
push
movsb
or
push
mov
iret
push
insl
mov
pop
and
movsb
inc
in
pop
mov
xchg
aas
xchg
test
push
dec
adc
popl
xor
imul
sub
cmp
pop
ja
dec
das
fidivrl
mov
ds
push
or
xor
jmp
cld
mov
xchg
popf
fwait
les
dec
mov
dec
xchg
mov
int
push
cmp
or
sub
and
cld
mov
adcb
xchg
pop
cmpsl
rolb
enter
aam
mov
cmpsb
movsb
nop
into
xchg
divl
cmpsl
es
jae
push
xlat
mov
sbb
add
int
cmp
ror
bound
lret
sub
fisttps
sub
mov
fistpl
pop
test
mov
xorl
add
mov
pop
jb
inc
sbb
stos
jl
js
loop
mov
or
cmp
outsb
push
scas
xor
enter
mov
adc
push
shlb
sbb
and
xor
rorb
pop
and
lods
out
pop
scas
stos
pop
jnp,pn
out
jl
imul
outsl
pop
adcb
dec
mov
aas
or
push
cmp
fcoml
fnstsw
mov
int
jle
cmp
push
ret
sbb
pop
sarb
cmpsl
call
movsb
popf
movsb
in
iret
jnp
cltd
jecxz
test
fsubrs
lea
cmp
jo
xchg
dec
ret
adc
mull
in
jnp
mov
fwait
push
push
jnp
xor
inc
loopne
into
imul
jl
loopne
outsb
dec
test
mov
fldcw
pop
pop
les
sub
mov
aam
adc
ds
in
push
in
xchg
inc
add
movl
mov
cmp
cmc
out
xchg
bound
lock
call
or
jo
outsb
xchg
enter
sti
xchg
addb
and
jns
jne
out
enter
or
int
dec
cs
faddl
sbb
jmp
out
or
leave
fisubrs
negb
fiaddl
jmp
popf
and
addr16
je
or
add
aad
lret
or
std
out
out
mov
in
xchg
sub
pop
out
test
mov
sub
jg
hlt
fdivl
lret
and
push
mov
les
outsl
add
pushf
or
movsl
adcb
push
stos
pop
outsl
pop
lret
mov
fmuls
push
sub
adc
mov
and
bound
lcall
push
cli
mov
fstl
cmpsb
fisttps
xchg
add
push
lcall
add
call
pop
lret
dec
add
push
push
cld
push
add
nop
pop
pushf
pop
mov
flds
mov
xlat
int
cli
jae
mov
mov
jle
lock
loop
or
es
mov
aad
std
dec
sbb
sbb
push
jle
or
add
jb
adc
leave
mov
pop
adc
xchg
pop
jo
js
mov
ret
or
pop
and
cmpsb
mov
add
pop
xor
fcmovnb
sub
push
and
mov
adc
mov
icebp
xor
mov
pop
push
jo
jle
jg
cmp
dec
push
in
add
mov
sub
and
jo
jge
lcall
or
call
mov
adc
andl
rol
loope
ds
fsubrl
sub
call
or
push
add
mov
popf
jle
inc
xor
pop
sbb
add
cmp
push
addb
cmp
ljmp
sub
xor
adc
insb
ds
sbb
in
adc
iret
aam
fs
pop
pop
test
dec
xchg
and
xchg
sbb
and
lret
cld
or
add
push
jle
sahf
or
sti
mov
test
push
pop
sbb
cld
and
pop
xchg
dec
mov
orb
add
movb
sbb
jae
pop
dec
add
push
enter
and
in
fistl
andb
imul
dec
dec
add
push
dec
xor
rorb
movsb
xor
test
subl
hlt
xchg
push
arpl
scas
push
lcall
mov
sub
and
fwait
dec
sub
sub
inc
mov
inc
push
push
mov
test
sbb
test
xchg
add
or
dec
pop
dec
sub
cmp
std
sub
in
test
dec
mull
out
lret
or
or
sahf
mov
inc
in
arpl
loop
and
mov
dec
aam
sbb
shr
inc
stos
xor
das
cmpsb
sbb
subl
imul
xchg
call
test
repnz
daa
adc
fidivl
cmp
aaa
leave
movsb
mov
sbb
mov
iret
orb
sbb
cmc
cmp
call
mov
or
jle
int3
jae
subl
test
mov
dec
int3
push
sbb
sti
and
int3
mov
dec
test
lods
rcrb
cmpsb
out
incb
outsl
lret
rorl
test
mov
movsl
ds
add
jnp
and
dec
add
mov
movl
sub
mov
inc
mov
outsl
sub
int3
pushf
add
out
shl
add
aas
aaa
jbe
pop
jecxz
cs
and
sub
push
fldenv
stos
jnp
push
daa
cli
scas
add
pop
xchg
jl
ljmp
adc
pusha
xchg
inc
arpl
bnd
pop
sbb
scas
adcl
fcmovne
or
aam
jmp
adc
mov
push
out
aas
jae
push
iret
mov
addr16
js
and
mov
fidivs
jle
jp
and
xlat
je
outsl
movsl
xor
cwtl
fdivrs
outsb
lahf
in
dec
sahf
mov
pushf
cwtl
xor
mov
rcrl
inc
or
inc
adc
aam
push
movsl
cmp
or
pop
imul
pop
mov
push
jp
scas
sbb
push
adc
ret
mov
cmp
xchg
adc
pop
xchg
test
xchg
and
mov
fidivrs
pop
daa
jecxz
stos
leave
inc
or
jo
and
and
aad
push
xchg
inc
pop
sub
mov
push
jle
pop
arpl
cld
imul
jmp
mov
pusha
data16
clc
or
cmp
insl
adc
out
push
frstor
fcmovnu
lret
ss
xor
add
cmp
jmp
imul
into
cmpsb
aam
inc
adc
mov
outsb
push
sub
in
in
mov
ja
jns
add
push
fwait
sbb
and
mov
push
pusha
scas
inc
sbb
pop
in
jg
xchg
outsl
mov
push
xlat
inc
add
push
mov
adc
mov
enter
pop
cmpsl
pop
stos
xchg
je
iret
loop
push
add
insb
negb
repnz
lods
fwait
mov
jmp
cmp
outsl
ss
fisubrl
icebp
cmp
cmpsl
ljmp
aaa
in
ljmp
sbb
in
ret
sbb
ret
in
push
mov
fmuls
xor
mov
stos
jns
and
and
fildl
push
and
std
cmp
mov
aas
xchg
push
daa
sub
aam
ja
push
rcrb
cld
test
sbb
test
aam
and
dec
sbb
std
and
sahf
leave
mov
in
testl
lods
xor
add
movsb
jno
cmpsb
ljmp
push
pop
into
fwait
xchg
and
arpl
gs
mov
xchg
mov
jno
sti
les
inc
pushf
xorl
into
into
jle
addr16
mov
scas
fwait
jb
inc
hlt
ja
insb
and
or
lret
adc
mov
mov
sbb
pop
mov
mov
dec
jle
aam
pushf
jle
data16
push
addr16
ret
pop
iret
not
jle
cli
repnz
outsl
xor
xlat
pusha
cld
aad
loope
popf
xchg
test
std
cmp
or
nop
hlt
mov
sti
and
adc
aas
in
push
lret
mov
mov
mov
pop
test
negb
and
movsl
mov
pop
inc
lahf
inc
jmp
aas
or
lds
frstor
pushf
push
inc
sarl
adc
movsl
stos
cmp
adc
hlt
or
pop
int
jae
mov
aam
adc
cld
nop
scas
ja
imul
hlt
mov
por
jl
daa
pop
pop
cwtl
out
jns
jecxz
xchg
fwait
ljmp
aad
roll
hlt
clc
orl
sub
xchg
and
clc
bound
out
mov
fsubrl
imul
xchg
pop
jns
jecxz
mov
dec
sub
outsl
dec
xchg
mov
les
pop
jle
sub
xchg
cltd
add
push
cmpsl
dec
xchg
out
inc
push
mov
cmp
rorl
pop
mov
add
flds
xor
or
insl
ds
and
push
fcoml
fs
xchg
scas
mov
lcall
adcb
push
and
xor
xor
mov
cmp
in
push
das
mov
fstpt
shlb
sbb
inc
ljmp
add
and
xchg
mov
mov
xlat
cltd
sbbl
mov
xor
fwait
jno
sarl
mov
cli
or
inc
xor
insl
cltd
adc
mov
dec
cmpl
jno
sub
jle
fwait
push
add
cmpsb
mov
sbb
sti
fwait
dec
mov
inc
jb
jg
mov
cmp
jmp
mov
ja
mov
sbb
cmp
aas
mov
jo
mov
into
arpl
xor
mov
sub
rorl
js
cltd
sub
fisubrs
roll
adc
dec
inc
pop
sbb
or
hlt
xchg
outsl
push
lock
inc
mov
sub
push
loopne
xor
in
das
ljmp
mov
movsl
mov
add
fdiv
test
pop
pop
dec
jecxz
sbb
in
mov
dec
callw
arpl
sub
mov
shlb
dec
lods
cltd
adc
mov
push
out
cli
xor
cmp
fadds
rorb
pop
xchg
pop
pop
mov
lahf
incb
popa
addl
mov
pop
addb
and
pop
xor
daa
mov
jns
push
shlb
dec
movsl
dec
mov
scas
sub
shll
jae
mov
cmp
out
xchg
lahf
pushf
jmp
cmpsl
jp
add
xor
cmpsl
sarl
rol
jbe
xchg
mov
add
repnz
outsl
xchg
cltd
and
jmp
or
and
push
xchg
inc
dec
dec
or
loope
inc
cs
mov
and
mov
lcall
sarb
xor
jle
jmp
or
dec
ljmp
xchg
mov
push
in
in
in
adc
ret
popa
test
testl
scas
out
arpl
push
mov
scas
xchg
xchg
sub
lret
push
jp
jns
sbbb
cmp
mov
jmp
push
inc
js
cmp
scas
and
xchg
mov
loop
jecxz
dec
inc
jl
and
ja
js
les
outsl
cld
outsb
cltd
repnz
aaa
lods
lret
pop
bound
xor
in
xor
mov
xor
clc
cltd
sbb
lods
xor
sbb
loop
adc
and
push
lahf
addl
addb
dec
jl
int3
nop
push
inc
xlat
cwtl
mov
cmp
dec
xor
ljmp
sbb
cwtl
shll
lea
lds
and
inc
ss
mov
pop
movsl
push
test
mov
std
test
or
mov
ljmp
jg
and
loopne
fmul
push
aas
jnp
mov
and
jns
fisubrs
outsb
dec
sbb
jl
lret
insl
push
cltd
test
lock
push
sub
xchg
xchg
repnz
add
rorl
xchg
f2xm1
add
xchg
inc
pushf
lahf
pop
cmp
cmp
or
xchg
or
les
cmp
xchg
insb
jo
mov
push
aas
sahf
pushf
je
jbe
insl
inc
xchg
and
push
idivl
int3
add
jmp
loope
int3
fcomps
push
push
iret
push
mov
out
clts
sbbb
lods
inc
cmp
popf
ret
xchg
inc
ret
loop
orl
sub
gs
push
mov
nop
int
add
outsl
pusha
cld
jl
cmpsl
insb
ja
test
loopne
stos
mov
cmpsl
cmpsb
in
roll
hlt
push
mov
inc
daa
mov
mov
xorps
sar
dec
test
orl
imul
cwtl
push
pop
outsl
or
cli
jb
pushf
cs
sti
ja
dec
fdivrl
sti
xchg
push
mov
jne
jp
sub
scas
sub
insb
test
jnp
pop
enter
in
xor
jmp
add
sbb
addr16
adc
cmpl
aas
js
loopne
mov
ret
jg
mov
imul
push
jb
imul
cmpsb
jae
shl
adcl
int
adc
dec
loop
loop
sub
out
sahf
jecxz
or
adc
push
xor
inc
sbb
jl
out
stos
sbb
adc
or
mov
sub
cmp
jg
shlb
pop
cli
pop
push
mov
pop
xor
mov
fnstenv
xor
mov
pop
mov
sbb
test
andl
sahf
cld
jbe
gs
popf
cs
js
sbb
jmp
stos
and
dec
mov
and
adc
xor
and
imul
out
cmp
mov
popf
add
sahf
icebp
dec
loope
fs
lcall
nop
jp
repz
add
inc
aam
js
roll
rcll
repnz
dec
fwait
jle
xor
and
jbe
jno
mov
add
pop
xchg
jmp
push
dec
sub
lahf
fistl
sahf
dec
and
lahf
push
mov
push
and
or
sub
js
sub
push
les
sub
push
push
sbb
or
and
imul
jp
cmpsb
inc
lahf
pop
and
enter
sbb
fwait
jp
std
and
filds
clc
popa
insl
lock
xor
nop
push
inc
push
lds
xchg
add
aad
adc
xchg
in
dec
nop
inc
xor
pop
fldl
repz
push
pusha
xchg
mov
mov
scas
hlt
pushf
pop
xchg
xor
push
pop
add
sbb
je,pt
ret
flds
sbb
mov
aad
or
rclb
sub
daa
push
rorb
ljmp
lods
orl
add
push
je
pop
test
ret
insl
roll
add
test
or
or
mov
xlat
shrb
loope
xchg
push
add
add
push
jo
in
jns
aam
add
out
jno
jecxz
fisubl
mov
gs
jmp
fldt
pop
sub
ljmp
pop
sbb
addr16
pop
mov
cmp
inc
aaa
pop
push
jp
icebp
xlat
push
push
dec
daa
fs
jg
push
sub
je
and
sub
movsb
std
push
push
stos
add
rcll
popa
mov
mov
push
jp
pop
out
or
pop
mov
divb
pushf
popa
pop
dec
push
mov
xchg
xlat
movsb
or
xchg
rorl
enter
push
lock
in
mov
fwait
jnp
sti
xor
push
scas
dec
hlt
sub
inc
jo
repz
out
pop
mov
ja
add
or
cld
push
sbb
mov
mov
sarl
fdivrs
sub
dec
cmp
rcr
inc
jge
cmpsb
jecxz
repnz
jb
push
mov
jmp
add
pop
jmp
out
jns
push
call
mov
pushl
jmp
in
mov
sbb
adc
jae
push
jmp
mov
inc
mov
xchg
and
and
xchg
sub
xor
fbstp
cmpb
fnstsw
xor
insb
daa
lods
ret
out
imul
out
loopne
cmp
jecxz
and
stc
icebp
out
fistpll
fldl
xor
inc
cli
jecxz
mov
sbb
out
sub
push
adc
stos
mov
jp
dec
lods
lods
loopne
add
adc
imul
iret
adc
dec
pop
xchg
adc
pop
test
push
out
mov
or
cmp
or
mov
outsl
sarl
pop
lahf
loope
dec
pop
dec
nop
add
inc
int
push
enter
fldcw
hlt
xor
fs
pop
inc
push
lock
in
and
sbb
sbb
and
cmpsb
cltd
icebp
mov
cmp
xchg
cwtl
jb
subl
dec
jle
fdivp
jge
and
add
mov
or
ss
or
xchg
clc
cmp
adcl
repnz
in
cmc
and
adc
inc
gs
jne
test
mov
ret
cmc
and
adc
inc
gs
jne
xorl
mov
and
adc
and
jb
inc
insb
push
xchg
mov
inc
xchg
cmc
loop
repnz
shlb
test
adc
cmp
lods
or
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
