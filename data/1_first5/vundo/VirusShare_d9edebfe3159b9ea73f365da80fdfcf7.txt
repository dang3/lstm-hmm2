pusha
call
mov
push
pop
add
popa
jmp
les
cs
iret
pop
gs
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
fstps
cmpsl
jmp
push
std
repnz
sar
idivb
lahf
in
jmp
mov
mov
test
xor
imul
stos
or
push
and
jmp
fstps
fwait
cmp
jbe
in
add
push
dec
push
jmp
andl
add
cmp
jne
jnp
icebp
push
inc
sub
scas
dec
fsub
mov
inc
je
adc
loopne
pop
aas
or
xlat
jmp
push
push
clc
shll
aaa
movsb
or
push
das
cmp
jmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
xchg
pop
add
and
jmp
jp
mov
sub
pop
shlb
repnz
adc
div
fs
xchg
ror
into
out
cld
test
or
add
addl
jle
push
jmp
push
xlat
les
xor
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
inc
lcall
cmpsl
push
std
repnz
jmp
sar
lahf
in
mov
mov
test
xor
imul
stos
or
push
and
pop
jmp
jmp
cmp
jbe
aaa
ja
dec
add
push
dec
dec
outsl
jl
pop
mov
es
mov
cmpb
jnp
icebp
push
inc
sub
mov
scas
dec
jmp
fsub
mov
inc
je
jmp
adc
loopne
pop
aas
or
sub
pop
clc
shll
aaa
movsb
or
push
das
cmp
sbb
inc
out
aam
in
jb
inc
jns
pop
insb
xor
xchg
pop
add
mov
xor
jmp
jmp
jp
jmp
mov
inc
pop
xor
shlb
int3
adc
div
fs
xchg
shr
jecxz
into
out
cld
test
or
add
addl
jle
sub
ror
add
jmp
push
xlat
les
xor
cmp
dec
loope
hlt
sbb
fidivrs
js
mov
and
inc
push
nop
mov
fisttpl
lret
test
cmpsw
push
std
repnz
dec
jne
ret
push
mov
sub
push
push
xor
mov
mov
mov
add
sub
and
lea
add
xor
and
or
push
jmp
addr16
mov
cmpb
and
add
add
inc
and
sub
dec
jne
mov
mov
pop
mov
jmp
cwtl
icebp
push
inc
sub
and
or
add
mov
scas
dec
fsub
mov
add
add
xor
leave
ret
push
mov
sub
push
push
xor
mov
mov
mov
and
or
dec
push
jmp
sbb
sub
imul
xchg
ror
into
out
pop
jmp
cld
test
or
jmp
call
xor
and
dec
jne
mov
mov
pop
mov
jmp
cmp
xor
sub
mov
or
jmp
sbb
xlat
les
sub
leave
ret
push
mov
sub
push
push
jmp
cmp
sbb
inc
out
aam
add
xor
mov
mov
mov
or
xor
shl
or
add
sub
xor
sub
dec
and
sub
add
or
sub
add
shl
and
or
or
dec
jne
mov
mov
mov
jmp
setl
cmp
jmp
movsl
jp
mov
inc
pop
xor
rolb
dec
hlt
leave
ret
push
mov
sub
sub
jmp
iret
pop
gs
dec
loope
xchg
jmp
hlt
sbb
fidivrs
add
xor
mov
mov
mov
xor
lea
and
sub
sub
or
push
jmp
push
nop
mov
lret
test
or
jmp
shll
std
repnz
sar
les
sarl
cmpsb
iret
xor
xor
or
add
xor
shr
shl
ror
xor
sub
sub
sub
or
or
sub
or
dec
jne
mov
mov
mov
jmp
stos
or
pop
xchg
or
jmp
sahf
jg
les
int3
jmp
dec
mov
jmp
xchg
stos
fwait
cmp
jbe
in
add
cld
leave
ret
call
mov
bound
dec
dec
aaa
adc
aam
mov
jns
lahf
fwait
ja
shr
xchg
xchg
sub
mov
jns
xor
notl
call
inc
mov
les
pop
pop
dec
pushf
mov
fstp
sub
sti
sub
in
push
nop
lds
mov
pop
repnz
and
lahf
pop
adc
dec
mov
inc
and
test
adc
shrb
shrb
lods
mov
es
sbb
stos
mov
shll
push
lods
pop
cwtl
and
sbb
cmp
std
and
jecxz
ret
roll
cltd
inc
inc
lret
jne
push
xchg
fwait
mov
mov
fsubl
dec
pop
jae
data16
dec
clc
das
dec
mov
mov
movsl
mov
mov
mov
and
cmp
xchg
divl
sahf
rolb
dec
inc
inc
sahf
mov
pusha
mov
into
ss
cli
and
xor
fwait
arpl
push
xchg
jl
xchg
jl
jl
inc
jl
mov
int
mov
lea
add
je
mov
mov
mov
lds
fbstp
lods
mov
jbe
subl
mov
and
push
popa
sar
dec
adc
push
insb
mov
mov
dec
xchg
adc
fisttpll
outsb
ja
add
movsb
loopne
ficoms
in
inc
mov
rorl
or
jo
xchg
and
scas
jbe
xchg
ljmp
test
dec
arpl
inc
inc
cmp
cmp
in
loop
push
dec
mov
sbb
jge
push
sarb
jae
mov
add
mov
out
xor
pop
push
and
int3
leave
fiaddl
pop
mov
and
push
xchg
cmpsb
popa
adc
or
ret
lods
push
call
dec
iret
es
pop
lds
repz
pop
xlat
inc
mov
and
adc
hlt
and
nop
cmp
xchg
and
mov
roll
mov
aaa
xor
shll
jecxz
or
arpl
push
inc
cwtl
imul
aam
adc
movsb
mov
dec
les
dec
xchg
xchg
xchg
pop
adc
sbb
sbb
movsl
movsb
adc
pop
xchg
xchg
jnp
movsb
mov
les
cli
jp
inc
aaa
adc
and
lods
jle
and
jbe
adc
push
mov
stos
decl
std
cmp
andl
sub
icebp
shr
xchg
sub
cmp
scas
cmp
aam
push
mov
scas
xchg
pop
je
divb
rclb
frstor
dec
mov
dec
mov
adc
xchg
pop
in
fistpl
cld
sbb
movsb
mov
test
out
es
adc
sbbb
or
xchg
leave
pop
mull
sbb
inc
mov
in
inc
aaa
sub
ja
mov
adc
mov
dec
mov
lret
cmp
xchg
popa
rcll
lea
pop
shr
cli
sub
jno
cltd
adc
mov
mov
sub
lock
sar
jge
xchg
jmp
xchg
xchg
adc
adc
cmpsl
popa
pop
or
lret
pop
fwait
adc
imul
jecxz
sti
das
aaa
inc
rolb
addr16
inc
bound
sub
frstor
outsl
jns
lahf
sub
sub
hlt
lds
push
xor
push
lahf
adc
dec
xchg
test
shll
inc
dec
adc
xor
mov
mov
or
insl
lds
rcr
movsb
sti
es
imul
dec
dec
push
sub
repnz
push
mov
inc
je
aas
enter
jl
add
push
mov
inc
mov
add
test
outsb
push
inc
repz
push
cltd
xchg
icebp
or
adc
test
stc
jb
imul
fs
orl
aam
fwait
adc
and
sub
mov
movsb
arpl
dec
inc
push
inc
pop
jle
xchg
and
and
shlb
inc
mov
mov
mov
loop
int
cmp
mov
cmp
xchg
jg
mov
sub
subl
cmp
push
mov
dec
add
mov
fistpl
ret
and
jmp
es
sub
arpl
push
inc
shl
dec
fistl
lds
sub
leave
cmpsb
mov
les
sub
add
fnsave
cmp
xchg
and
scas
repz
loopne
mov
sub
sbbl
daa
and
jmp
xchg
and
mov
fisubs
adc
aaa
dec
stos
std
cmp
pop
dec
mov
gs
aad
pop
inc
stos
lods
add
xor
jle
jge
dec
cs
int
test
push
jp
in
sbbl
lods
int
fsubrl
jecxz
outsb
lds
dec
out
addl
lret
adc
lods
icebp
test
sub
adc
loope
xor
jmp
inc
and
rorb
sbb
shll
mov
cmpsb
test
lcall
faddl
mov
fnsave
mov
in
add
adc
cmp
bound
mov
imul
fcmovb
in
gs
push
into
orb
dec
js
leave
mov
mov
mov
sub
mov
fdivrl
push
xchg
lock
shl
cld
xchg
dec
jb
add
sub
mov
push
mov
pop
scas
jp
pop
je
std
push
adc
sbb
sbbl
adc
push
xor
lahf
nop
or
adc
fucomp
imul
dec
ret
lcall
lahf
repz
in
mov
adc
sub
inc
mov
lahf
adc
stos
lret
cwtl
lods
push
push
loop
in
xor
in
out
cmp
scas
mov
movsl
inc
lcall
and
lods
xchg
shll
mov
insb
cmpsl
mov
jecxz
jbe
sbb
cli
pop
add
jmp
daa
stc
fmul
adc
jne
dec
paddsw
inc
pop
ss
fisubl
add
and
mov
xchg
and
movsb
jb
loopne
mov
sub
sub
mov
push
cmp
fs
push
mov
adc
mov
les
mov
stos
and
addr16
inc
mov
push
mov
rol
dec
cmpsl
fistl
clc
xor
nop
or
sahf
aad
push
sbb
xor
sarl
dec
push
jnp
arpl
mov
mov
mov
aas
xchg
pusha
es
xchg
pop
je
and
pop
dec
xchg
jnp
ja
pop
das
mov
repnz
sbb
mov
adc
movsb
inc
sahf
sub
lock
cmpsl
dec
lea
stc
jo
popf
xlat
jecxz
jb
dec
jae
pop
mov
adc
cwtl
jno
sub
mov
cmp
popa
jnp
dec
jne
cwtl
add
cmp
xchg
shll
movsb
pop
imul
mov
je
cmp
jge
mov
imul
mov
addr16
jb
cs
or
pop
sbb
scas
cmp
mov
mov
js
mov
mov
xor
xor
lea
test
in
mov
bnd
push
frstor
sbb
cmp
cmp
movsb
mov
push
jo
xor
rorl
adc
fnsave
dec
jg
pop
sub
push
test
cmp
outsb
dec
pop
mov
sbb
loop
mov
push
pop
out
loopne
or
xchg
cs
xchg
subb
jmp
and
adc
dec
lods
mov
fisttpll
cmp
lods
push
dec
shrl
mov
sub
xchg
and
das
mov
and
mov
mov
sub
roll
sub
xchg
std
push
adc
push
lods
repnz
sub
std
imul
scas
inc
repz
mov
inc
push
adc
mov
push
sbbb
and
push
ret
scas
mov
inc
pop
popa
mov
adc
sbb
aad
jne
xlat
xor
jne
lcall
push
push
pop
clc
cmp
and
xchg
mov
sbb
cmp
sub
mov
fnsave
test
test
mov
add
mov
mov
clc
lods
inc
adc
fcmovb
out
popa
stos
sbb
adc
fisttpll
or
mov
scas
xor
jg
repz
shll
ljmp
pusha
dec
mov
fldl
mov
cmpsb
aad
and
inc
rolb
push
lods
mov
xor
pop
push
dec
adc
cltd
inc
divb
push
dec
adc
cmp
mov
xchg
sti
loopne
dec
mov
inc
dec
mov
cmc
movsb
inc
mov
jecxz
int3
mov
pop
adc
push
stos
push
mov
or
or
and
xlat
push
xchg
shrl
repz
jo
xchg
popa
push
fldl
sbb
enter
cmc
cmpsb
mov
cmpsb
xor
int3
out
sahf
jo
shll
xlat
ds
push
stos
dec
mov
aam
push
fldl
jne
dec
add
push
push
xchg
jmp
aad
dec
adc
mov
inc
adc
and
dec
pusha
pusha
addr16
xchg
mov
fucomip
xlat
xchg
pop
pusha
mov
mov
inc
aaa
adc
jl
ljmp
push
js
pop
jbe
inc
les
mov
inc
mov
add
loopne
push
divl
push
cmpsb
lret
adc
dec
lahf
mov
fstp
lahf
pusha
pop
les
pop
dec
in
arpl
push
inc
mov
outsl
xchg
mov
mov
es
inc
xchg
daa
mov
mov
or
cld
sbb
in
or
aam
inc
pop
loope
test
je,pn
push
cmpsb
mov
jmp
lds
inc
pop
dec
daa
fs
sub
lods
cmp
aam
push
mov
notb
pop
imull
inc
aad
leave
in
enter
pop
mov
inc
cmpsb
mov
cmpb
and
sarl
fs
add
jle
inc
mov
daa
cwtl
mov
fsubrl
js
fnstcw
rol
out
rolb
cmp
and
fisubrs
adc
sub
test
iret
mov
es
sub
adc
int3
stos
aad
outsb
sub
push
data16
rclb
cs
adc
sub
xchg
int
mov
scas
lcall
aad
xor
into
pushf
lods
loopne
xchg
pop
dec
shrl
movsl
inc
push
ret
jmp
nop
push
or
cmpsl
inc
jno
inc
test
stc
add
decl
fcoms
movsb
test
dec
adc
pop
mov
mov
sahf
inc
bswap
xchg
lods
mov
or
mov
fwait
mov
fisttpll
call
push
fs
jle
dec
cmp
mov
jae
fmull
pop
pusha
mov
es
xchg
imul
jmp
jne
addr16
push
je
and
jno
ss
imul
and
sub
outsb
rcl
adcb
pop
stos
pop
addr16
pushf
stos
das
fstpl
in
lock
mov
xor
xchg
xchg
jnp
push
mov
or
add
mov
xchg
out
cmpb
xchg
and
fildll
pop
adc
jmp
push
mov
pop
xchg
cs
mov
scas
imul
jecxz
stos
aad
dec
gs
jnp
enter
pop
insb
jp
add
cltd
inc
inc
cltd
jne
xchg
rorl
xchg
cltd
sub
nop
mov
dec
mov
rolb
lcall
nop
pusha
xchg
mov
shl
mov
xchg
imul
and
sub
push
iret
inc
xchg
pop
je
popf
sub
adc
aaa
xor
shll
lea
adc
fsubp
mov
repz
pop
mov
into
stc
in
pop
test
cmp
sahf
sbb
jne
aad
fs
jo
hlt
mov
pop
fs
dec
sbb
sub
cli
mov
insb
outsb
push
inc
arpl
es
sbb
mov
inc
mov
cmpsb
add
pushf
pop
sbb
je
rcrl
xchg
or
pop
cmp
fsubrl
mov
lea
dec
pop
cli
cmp
data16
aas
movsb
sub
lods
xchg
push
pop
das
cmp
sub
je
imul
xchg
and
xchg
rcrl
inc
lods
in
icebp
adc
insl
mov
outsb
push
scas
andl
jne
and
adc
mov
dec
mov
mov
lcall
addr16
in
es
mov
out
and
adc
stos
push
icebp
pusha
insl
mov
mov
mov
into
dec
mov
es
inc
outsl
sub
dec
lock
mov
xor
lahf
add
cmp
inc
or
mov
cmp
push
mov
lcall
movsb
mov
dec
popa
mov
dec
adc
push
js
xchg
je
test
push
and
dec
in
je
fs
scas
sub
fcmovnbe
out
je
push
xchg
je
xchg
xchg
xlat
xor
test
mov
pusha
outsb
inc
mov
hlt
test
mov
dec
mov
popa
push
inc
es
jg
mov
xor
mov
push
inc
adc
dec
ds
jno
push
or
fldenv
push
das
shlb
xor
insl
inc
mov
dec
mov
sbb
mov
mov
xchg
shll
das
loopne
add
jo
jb
dec
ret
jb
imul
stos
ja
scas
sbb
push
rcr
movsb
xlat
mov
fdivs
xchg
sub
add
out
xchg
imul
shll
cltd
push
push
dec
push
mov
or
and
jb
subl
adc
fcompl
sub
mov
fldl
jno
jp
bound
cmp
jl
jecxz
cli
jae
stos
pop
popf
fwait
shll
pop
clc
das
dec
test
cmpsb
sbb
ds
in
je
and
call
mov
jg
hlt
aam
mov
xor
add
dec
lret
xchg
jno
xor
mov
sub
lods
aas
sub
cmp
inc
lahf
mov
pop
shrl
data16
mov
fsubrp
dec
outsb
pop
daa
lods
dec
push
push
adc
shrl
pushf
sti
lret
inc
adc
add
pop
and
push
adc
or
aaa
mov
call
sbb
loopne
and
ficomps
sub
ficomps
mov
daa
mov
mov
ss
sbbl
es
ljmp
push
dec
xchg
shll
inc
jns
bound
mov
pop
sbbl
loop
sub
push
xchg
or
dec
arpl
push
inc
cli
cmp
fildl
cld
adc
movsb
mov
inc
fidivrs
inc
lretw
lds
xchg
push
outsb
push
notl
fisttpl
fnstcw
sub
mov
jg
shlb
adc
pusha
les
dec
mov
lods
ss
cs
mov
popa
insl
fnstenv
leave
rorb
dec
cs
xchg
sbb
mov
or
mov
mov
push
scas
sbb
sub
adc
push
fstpl
subb
je
xor
lods
test
sub
dec
inc
jb
int
rcr
jp
xchg
cmp
mov
mov
jg
inc
aaa
adc
in
adc
test
int3
aad
xor
jl
sub
dec
adc
or
int
dec
popa
outsl
lock
bound
cmc
dec
xchg
cltd
pusha
stos
inc
stc
ljmp
aaa
dec
xor
dec
fwait
scas
mov
rcrl
cmc
dec
xchg
adc
or
inc
push
or
inc
les
call
test
fisubs
mov
adc
push
insb
rorl
fcmovnbe
jg
mov
mov
orb
fldl
shll
loopne
jnp
and
lods
add
push
imul
pusha
adc
movsb
mov
aaa
shlb
or
movsl
cmp
jge
shll
test
cmpb
cmp
sub
inc
xchg
stos
push
jmp
pop
pusha
mov
mov
lcall
bound
je
mov
xchg
mov
std
push
enter
push
cmpb
mov
jle
push
in
mov
mov
add
xorl
inc
orb
aam
lods
mov
mov
mov
cmp
fsubrl
mov
push
mov
dec
gs
mov
jo
scas
mov
jmp
ljmp
inc
mov
mov
pop
enter
push
sar
mov
mov
pop
mov
dec
cmpsl
or
ljmp
sbb
test
jg
subl
mov
std
jbe
pop
and
mov
dec
lock
adc
adc
and
sbb
insb
dec
push
repz
dec
and
push
fisttpll
call
out
les
cmp
and
pushf
push
cmp
dec
shl
les
fstpt
insl
mov
scas
and
and
sti
or
cld
push
cmp
inc
aaa
sub
rorb
push
inc
mov
lret
push
je
shrl
adc
jg
out
es
adc
scas
mov
scas
jp
mov
dec
sarl
inc
mov
insl
sbb
xlat
leave
sub
pop
mov
xchg
push
cmp
cmpsb
cwtd
mov
lret
and
push
inc
jae
dec
arpl
adc
push
sub
sbb
sbb
or
ret
xchg
gs
fmuls
mov
pusha
cltd
mov
cmp
ror
sbb
mov
es
dec
jno
mov
movsl
fwait
adc
pop
sub
fwait
divl
dec
adc
int
mov
push
ja
push
dec
sahf
outsl
dec
sub
fists
ja
inc
aaa
out
std
rolb
xchg
jns
mov
xchg
leave
pop
mov
and
gs
out
outsb
aaa
sub
icebp
das
xor
ljmp
outsb
mov
jae
pop
or
mov
popf
outsb
mov
adc
lret
iret
dec
imul
jne
push
dec
fsts
aad
mov
test
inc
pop
adc
jnp
filds
leave
mov
mov
out
xchg
or
sbb
jbe
mov
je
cmp
or
sti
pop
cld
sub
inc
mov
js
dec
bound
inc
cwtl
daa
push
mov
sbb
dec
xchg
fwait
pop
xor
shrl
pusha
xor
mov
mov
sbb
pop
andl
adcl
adc
mov
inc
nop
fsubl
push
jge
jo
xor
inc
jecxz
sahf
pop
popf
jp
mov
dec
stos
movsl
push
lods
mov
inc
adc
sub
mov
mov
and
into
add
es
inc
aaa
sub
in
shr
test
push
push
and
dec
inc
rcrb
xchg
fiadds
aaa
rcrb
loop
mov
push
arpl
cmp
js
mov
rorb
cs
mov
js
incb
xchg
push
mov
test
fwait
adc
cmpsb
fwait
adc
lea
push
es
outsb
jecxz
mov
sub
jp
movsb
mov
adc
xchg
adc
fdivrl
jecxz
mov
dec
inc
jg
jle
repz
fwait
shl
adc
rorl
dec
jmp
sbb
sub
sahf
inc
nop
ret
gs
roll
call
xor
and
push
sbb
adc
mov
ja
in
jle
push
shl
iret
xchg
xchg
push
es
xchg
out
les
adc
and
sar
arpl
inc
je
and
adc
push
and
dec
imul
adc
das
mov
mov
add
daa
pop
je
xchg
bound
mov
inc
test
js
push
popf
popa
outsb
inc
sub
pop
rolb
and
shrl
and
add
inc
mov
or
xchg
mov
leave
mov
sbb
aas
mov
int3
dec
jnp
xor
mov
mov
or
mov
insb
shll
inc
mov
es
push
insb
stos
in
lret
inc
outsb
push
inc
xor
cmp
xor
jae
push
xor
out
shlb
lret
push
arpl
push
inc
mov
adc
cld
lods
cmpsl
std
pop
frstor
aas
mov
cmp
cmp
push
mov
push
sub
mov
xchg
and
sti
and
sub
sub
jmp
scas
sbb
test
jge
mov
push
push
pop
fwait
adc
andb
mov
cltd
rclb
mov
int
repz
cmpsl
imul
pop
js
mov
leave
pop
loopne
inc
inc
iret
clc
xchg
in
sbb
sahf
mov
andb
mov
lcall
xchg
test
jl
aaa
sub
stos
xor
cs
fiaddl
pop
cwtl
popa
sub
lcall
mov
shll
xor
sub
cmp
push
jnp
dec
pop
fwait
adc
dec
lods
sub
scas
and
fsubs
xor
fstl
pushf
mov
pop
inc
sbb
mov
sti
shlb
pusha
imul
daa
inc
xchg
rcr
push
enter
out
cli
stc
lods
cli
adc
jmp
mov
dec
xchg
repz
loopne
or
pop
cmp
aaa
xchg
aad
inc
in
mov
mov
mov
or
push
shll
xchg
jo
shll
xchg
fsubs
xchg
stc
cmp
cmpsl
xor
jle
xchg
lahf
sbb
or
aam
js
inc
aaa
sub
push
scas
cmp
push
mov
push
je
rcrl
pop
xchg
popa
xor
mov
sbb
mov
mov
test
jp
je
cwtl
cmpsb
fwait
adc
pop
dec
fistpl
addr16
fcompl
addb
repnz
dec
in
leave
push
jo
js
push
xchg
adc
mov
mov
jbe
inc
pop
fcmovnbe
andl
test
dec
push
vpaddb
out
lahf
addb
subb
xor
rcll
ds
addb
loop
push
push
push
out
andb
sub
or
push
in
xchg
pop
sbb
lret
mov
movsb
mov
or
mov
cmp
lahf
add
sub
daa
inc
xor
movsb
arpl
aad
jb
cmpsl
push
mov
sbb
out
nop
lock
mov
add
mov
xchg
ror
dec
adc
dec
jmp
scas
je
js
shll
int3
sbb
hlt
cmp
sub
jne
jl
lods
movsl
mov
out
ret
cmc
cmc
sbb
or
jmp
stc
dec
push
test
mov
cs
and
jnp
dec
fwait
adc
cmpsl
movsb
mov
lea
xchg
test
inc
xchg
ret
int3
dec
jecxz
insb
xor
js
mov
jo
stos
outsl
push
mov
xor
and
mov
cs
popa
rcll
daa
sbb
and
bound
cmc
fisttps
xor
mov
es
push
xchg
sub
popa
imul
xor
cmp
movsb
mov
push
fsubs
or
xchg
inc
mov
push
inc
je
loope
lret
test
mov
mov
js
or
jle
dec
or
imul
sti
es
scas
xor
fidivl
fcmovbe
mov
jbe
rol
cmp
frstor
mov
ja
repnz
lds
mov
jg
test
out
nop
sbb
enter
sbb
adc
mov
pop
sbb
sub
std
test
sub
lret
and
dec
je
mov
gs
sti
push
int
loopne
push
mov
aas
mov
shlb
or
sbbl
xlat
xor
fldenv
adc
into
jbe
fidivrl
fwait
cmp
inc
in
rorl
adc
xor
xchg
loop
out
das
mov
sbb
cld
in
and
lods
jb
and
xchg
rcrl
inc
mov
mov
mov
mov
pushf
cmpsl
sbb
mov
and
push
popa
shlb
mov
xchg
cli
clc
push
stc
dec
popf
xchg
shll
dec
mov
mov
aam
idiv
into
or
hlt
inc
inc
fsubrl
adc
clc
lret
fisubrs
fbstp
test
aaa
adc
inc
and
and
out
bound
mov
sti
dec
xchg
xchg
subl
and
mov
fdivrs
int
jns
sbb
mov
sub
mov
ljmp
ret
shr
loopne
es
gs
insl
mov
aam
test
mov
cmp
enter
jp
cmp
lcall
mov
jmp
pop
in
sub
mov
mov
cs
pop
sbb
in
dec
mov
es
sbb
loopne
pop
subl
cmpsb
icebp
shr
pop
dec
orb
repz
jl
mov
and
out
dec
cwtl
mov
lret
sbb
xchg
rcrl
pop
pop
ficoms
sbb
sbb
repnz
mov
ljmp
aam
addr16
push
lahf
dec
stos
int3
mov
xor
scas
mov
sub
dec
push
movsl
mov
lock
shlb
mov
rolb
jg
hlt
cmp
push
lret
xchg
jno
xor
cmpsb
fwait
mov
dec
mov
add
sub
aas
inc
cmp
push
je
rcll
jmp
js
cmp
aaa
xor
test
aad
ror
popa
sbb
subl
sti
test
sbb
cs
sahf
repz
xor
dec
add
push
xlat
movsb
mov
shll
mov
inc
insb
jbe
cmp
imul
sbb
fimuls
movsb
mov
das
inc
inc
aaa
sbb
mov
jg
push
movsl
movl
loop
xor
scas
mov
in
and
push
stc
jo
push
sbb
jg
adc
imul
jbe
mov
int
sbb
shr
inc
mov
mov
pop
sub
push
fidivs
shll
cld
or
add
inc
loop
add
pop
je
xlat
outsl
xchg
test
add
sbb
mov
xlat
outsb
sarl
or
addr16
sbb
addb
xchg
sbb
cli
xchg
cmp
mov
add
in
push
jmp
ds
pop
cltd
dec
xorb
dec
sbb
mov
inc
push
dec
mov
jne
push
es
push
push
iret
push
mov
hlt
add
jle
imul
scas
jmp
in
mov
adc
mov
jge
ficomps
lcall
inc
loopne
mov
lret
xchg
rorl
adc
fldl
pop
fstpt
scas
dec
pop
das
test
dec
mov
xor
repz
testl
aaa
xlat
clc
das
mov
mov
pop
mov
loopne
and
movsb
mov
mov
dec
bound
inc
cld
or
mov
enter
push
cli
add
inc
aaa
ret
adcl
mov
xchg
enter
jns
mov
sbb
fidivrl
je
rclb
js
xor
adc
imulb
mov
sub
dec
cmc
ret
inc
inc
push
mov
inc
lods
stc
sub
cmpsl
in
daa
dec
lods
sbb
inc
pop
ljmp
pop
lcall
inc
rclb
mov
pop
outsb
cmp
jo
adc
cmp
dec
mov
adc
jno,pt
push
jp
pusha
mov
mov
daa
dec
in
cmpsl
scas
ja
dec
fidivs
inc
lods
dec
cmp
cltd
addb
xchg
mov
loopne
jecxz
aam
lods
inc
aaa
cli
sub
dec
scas
pushf
jp
inc
push
dec
jnp
imul
dec
xchg
pop
sbb
or
out
sbb
ret
mov
push
es
je
orl
xor
sub
pop
push
dec
adc
mov
mov
and
ret
aad
ficoml
out
jne
cwtl
inc
inc
xchg
rolb
ljmp
je
jno
inc
dec
xchg
pop
dec
stc
mov
pop
adc
push
pop
mov
jne
xchg
je
out
pop
addr16
fwait
add
and
mov
xchg
test
inc
clc
rclb
aas
fwait
cli
mov
xchg
lret
push
flds
xlat
ja
cmc
dec
pushf
adc
fucom
fstpt
lret
sbb
adc
stos
lods
mov
pop
mov
call
sbb
das
inc
movsl
xorl
mov
dec
cmc
leave
add
imulb
and
loopne
xor
mov
rcll
jns
ret
xchg
mov
fldl
add
xorl
push
xor
popl
or
or
je
cmp
xchg
rol
jp
dec
rol
mov
or
leave
fistpl
cmpsl
fstl
std
daa
or
aaa
adc
add
dec
push
inc
je
es
push
push
jae
adc
inc
arpl
in
rolb
mov
rorl
xchg
leave
pop
cmc
xor
pop
dec
mov
mov
bnd
mov
movsb
pop
aas
adc
mov
or
xor
fadd
dec
adc
adc
sub
bound
je
gs
push
push
xor
mov
out
sub
loope
mov
fidivrs
jbe
icebp
pop
scas
xor
movsb
movsb
mov
int
mov
repz
test
sbb
fnstenv
mov
call
imul
imul
mov
jbe
and
mov
or
xchg
sti
stos
test
inc
jle
jmp
dec
mov
in
push
sbb
jae
test
fistl
into
adc
sbb
mov
outsb
add
rcll
inc
jnp
xorb
pop
repz
cmpb
push
dec
mov
mov
and
out
sbb
mov
nop
shlb
je
xchg
pop
dec
mov
sarb
das
dec
mov
imul
sbb
mov
movsb
mov
mov
jo
outsb
shrl
and
dec
mov
push
pop
je
inc
cwtl
jo
xor
sti
loopne
ret
add
mov
fldcw
jno
data16
xchg
popf
dec
decb
and
popf
fwait
dec
fsubp
dec
ficompl
adc
movsb
adc
cmc
aad
dec
jae
xchg
sbb
inc
inc
pusha
or
mov
daa
mov
add
pop
rorl
cwtl
js
cmp
dec
mov
sub
test
mov
inc
js
adc
lcall
mov
dec
mov
sub
out
and
sub
dec
loop
adc
es
inc
mov
in
fadds
call
out
push
pusha
mov
cmp
jns
pop
ret
adcb
dec
mov
fstpt
jnp
dec
mov
dec
addr16
jge
mov
xor
jge
icebp
adc
push
into
je
aaa
sub
jecxz
adc
int3
test
mov
mov
xor
out
and
inc
sub
pop
xorb
mov
jae
in
dec
push
nop
dec
xor
mov
mov
mov
mov
mov
scas
pop
rcl
and
xchg
sbb
lret
sti
ret
mov
mov
mov
mov
xchg
push
xchg
inc
faddl
dec
push
dec
jl
adc
add
inc
mov
jle
push
aad
fninit
or
call
in
ret
cmp
movsb
mov
push
fsubs
or
cld
pop
cmp
mov
xchg
push
subb
fdivl
fdivrp
aad
mov
das
lods
push
in
aaa
icebp
popa
scas
jne
hlt
sti
xchg
xchg
arpl
dec
std
fisubs
xchg
js
add
inc
into
sbb
dec
les
push
and
jp
mov
mov
add
sub
mov
sub
ss
std
jo
cli
push
test
call
dec
jmp
ret
dec
jbe
in
push
and
cwtl
out
rcr
pop
or
jmp
mov
repz
ds
mov
les
cmp
push
shlb
sub
and
scas
mov
clc
push
sub
rorb
fdivr
fsubl
mul
cmp
adc
in
mov
out
mov
stc
enter
mov
fstpl
imul
jg
inc
push
jl
sub
sbb
pop
mov
orl
xchg
movsb
mov
in
dec
inc
aaa
sub
int3
imul
jl
aad
mov
fs
sahf
dec
js
or
stc
push
daa
mov
jle
roll
push
or
in
sbb
xor
scas
inc
mov
adc
jbe
mov
jl
popa
bound
dec
xor
or
and
mov
and
addr16
inc
je
xor
pop
jns
xchg
push
loope
jmp
sub
call
sub
xor
lock
clc
mov
dec
inc
aaa
sub
adc
sub
std
mov
pop
je
ret
pop
jns
mov
inc
in
mov
mov
adc
dec
inc
jecxz
inc
ss
js
mov
lods
mov
lds
cmp
add
out
xchg
je
hlt
or
mov
std
fnstenv
xorl
rcl
dec
mov
popa
xlat
dec
mov
es
inc
dec
out
fs
dec
jle
inc
push
lcall
inc
inc
aaa
sbb
mov
mov
mov
inc
add
and
cld
mov
bound
pop
je
loopne
mov
xchg
out
dec
mov
xchg
gs
icebp
xchg
pop
pop
shlb
add
sub
shlb
push
nop
add
mov
jle
jns
pop
rcr
test
mov
shll
pusha
mov
es
test
sub
jl
push
int3
gs
sub
fldl
jb
sbb
ss
dec
sbb
sub
inc
dec
imul
stos
shlb
pop
jae
jg
cmp
sbbb
in
test
fidivs
mov
ja
sbb
cwtl
or
sub
dec
imul
loop
dec
mov
dec
mov
repnz
sbb
fldcw
mov
mov
movsb
lea
sub
inc
push
inc
in
scas
sti
xor
inc
inc
mov
lcall
dec
xor
cmp
xchg
std
clc
mov
add
push
test
xchg
je
push
popf
shll
and
mov
add
fs
jo
push
not
ficompl
xor
into
arpl
push
pop
out
scas
sub
mov
adc
mov
cmc
test
mov
push
data16
mov
pop
out
es
inc
into
pop
cmp
cmc
scas
repz
lods
outsb
and
mov
fsubs
add
cli
lods
in
ljmp
inc
loop
fldl
fwait
adc
jl
cpuid
dec
dec
popf
testb
inc
ljmp
dec
mov
xchg
and
mov
ja
mov
push
aad
jp
xchg
mov
psubw
fcmovnu
insb
xor
dec
arpl
push
int3
xor
outsb
mov
xlat
mov
adc
mov
enter
daa
into
arpl
mov
mov
bound
xchg
int3
orb
and
dec
xchg
push
dec
dec
mov
inc
lea
fcmovne
inc
data16
pop
fwait
adc
lret
adc
scas
mov
sub
das
insb
sar
mov
mov
fs
sahf
loopne
not
aad
leave
arpl
repnz
jno
dec
dec
xchg
xchg
mov
les
sarl
jns
and
xchg
nop
clc
repz
jge
arpl
in
int
ss
jo
cmp
sahf
popa
insl
ljmp
jo
and
and
addr16
push
mov
and
mov
inc
je
or
mov
arpl
adcb
sti
cmp
inc
mov
inc
jne
aad
fs
add
clc
xchg
pop
test
int
mov
pop
mov
mov
mov
outsl
test
sbb
test
fstpt
rcrb
mov
and
mov
jns
popf
lcall
or
mov
and
adc
pop
sbb
or
aam
movsb
mov
or
push
cmp
push
push
pusha
or
jl
scas
lret
fildll
inc
aaa
sub
icebp
iret
aaa
cmpb
lahf
leave
cmp
out
adc
ficompl
xchg
negb
mov
mov
push
sbb
push
sbbb
mov
jbe
je
mov
fistps
es
pop
xor
mov
pop
fwait
inc
push
push
adc
or
sub
in
push
dec
lcall
fbstp
aam
insb
pop
fbstp
gs
stos
repz
jle
dec
shl
mov
and
adc
jle
daa
test
iret
inc
mov
sub
jmp
mov
jp
xchg
pop
je
and
cmpsl
push
dec
out
mov
or
mov
sahf
dec
push
mov
ret
ret
mov
call
shll
mov
shl
xor
jo
cld
fistpl
loop
add
out
inc
mov
inc
cs
pop
sub
pop
test
or
gs
xlat
adc
shrl
add
decl
sub
popa
insb
lret
push
insb
lret
jle
xchg
and
shlb
inc
mov
test
xor
outsl
lock
in
shll
das
sbb
add
aas
sbb
decl
std
insb
mov
push
aas
push
inc
rorb
popf
mov
mov
dec
adc
gs
jns
sub
mov
inc
lds
subl
mov
test
sub
dec
in
ja
mov
sub
inc
psrlw
sti
jle
pop
pop
je
clc
test
xor
in
sub
les
jecxz
int3
dec
jle
mov
sbb
lock
aad
rcrl
mov
aad
sbb
mov
ffree
mov
add
mov
enter
es
inc
das
gs
bound
inc
roll
cmc
push
pmullw
jle
rcll
int
popa
ficoml
cmp
sahf
popa
insb
imul
xchg
pop
je
and
push
aad
ficomps
push
es
fsubl
mov
cmc
imul
popa
mov
enter
dec
roll
cmp
dec
mov
rorb
pop
mov
add
sahf
mov
testl
es
enter
jnp
add
es
dec
adc
lcall
adc
dec
ljmp
loopne
and
movsl
inc
dec
adc
insl
popf
mov
mov
or
dec
pop
pusha
mov
xchg
and
jle
mov
lods
mov
xchg
and
xchg
adc
push
mov
aam
test
or
je
daa
pop
je
ss
cld
mov
shll
pop
xchg
inc
enter
mov
mov
xchg
rcll
inc
push
lock
mov
iret
inc
mov
sub
mov
xchg
jmp
mov
add
imul
xlat
sahf
push
es
inc
iret
inc
mov
sub
sub
mov
loopne
xor
xor
jl
lahf
adc
mov
outsb
push
and
test
into
arpl
xlat
xor
add
pop
sub
mov
mov
pop
inc
bound
sub
popa
xchg
add
not
and
xchg
xor
pop
test
test
movsb
sub
pop
xchg
fistpll
lods
fwait
sahf
add
pusha
sti
aad
add
dec
rcll
mov
ds
lret
fadds
int3
cmp
lret
in
push
dec
push
dec
xchg
test
nop
and
inc
sub
mov
fbld
shlb
adc
data16
xor
int3
dec
xor
mov
es
mov
loope
push
mov
dec
test
sub
mov
fs
xchg
stos
or
arpl
jp
cmpsb
jbe
insb
fldlg2
dec
or
xchg
inc
je
and
adc
gs
loope
mov
mov
inc
pop
mov
sub
xchg
and
adc
mov
mov
sahf
mov
sbb
stos
mov
mov
lcall
jnp
cmp
out
jbe
test
pop
test
adc
xor
pop
push
mov
pop
leave
mov
inc
xchg
imulb
sarl
fwait
and
adc
push
dec
mov
fsubr
mov
mov
and
jbe
inc
sbb
lcall
sub
test
inc
push
dec
pop
flds
mov
shlb
fmuls
mov
icebp
imul
fs
std
fsubrp
out
dec
or
adc
dec
inc
dec
adc
dec
iret
jecxz
lcall
xor
cmpsb
cld
in
imul
in
jnp
dec
pop
mov
roll
sub
and
in
test
adc
das
jns
inc
cld
or
cwtl
xor
cmp
add
xor
add
inc
icebp
mov
mov
test
pop
jae
dec
mov
dec
pushf
and
jns
dec
cmp
inc
mov
inc
adc
jmp
dec
inc
push
sahf
lods
movsl
mov
sub
and
cmc
out
cmp
aaa
cli
and
popa
sub
push
negb
ja
mov
pop
fwait
adc
loop
ss
sbb
in
dec
inc
sub
mov
jns
jnp
loopne
je
pop
dec
sbb
dec
mov
es
scas
xor
cmpsb
push
imul
and
andb
je
adcl
int
lods
adc
mov
lods
pop
test
lea
xchg
lods
movsl
mov
cs
fnstenv
mov
lds
je
enter
lahf
dec
jae,pn
mov
rcrl
push
addr16
ja
push
adc
scas
pop
outsl
sub
leave
ret
mov
movsb
insl
cmpsl
and
inc
enter
in
mov
out
xor
into
dec
icebp
inc
stos
into
sbb
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
mov
jbe
sbb
and
out
inc
popa
outsb
xchg
push
mov
hlt
mov
pop
dec
mov
int3
xchg
mov
or
mov
insl
sub
pop
add
xlat
movsb
fistps
adc
scas
fldt
cmpb
arpl
insl
xchg
add
or
ret
xor
lock
pushf
lods
nop
stos
in
xlat
pop
sbb
loope
sbb
jno
inc
ss
sbb
xor
int
jb
and
push
jae
push
aaa
cmpsb
jne
es
sti
sbb
mov
cwtl
mov
int
ret
insb
imul
mov
xchg
jo
loope
sahf
std
push
mov
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
popf
jecxz
icebp
sahf
in
jbe
fwait
push
inc
in
fwait
in
fisubs
inc
stc
xor
push
in
pop
outsl
repnz
sarb
lret
mov
movsb
mov
pop
sahf
lds
nop
rolb
xor
cmp
mov
sbb
test
xchg
pop
cmc
add
pop
stos
mov
ljmp
loopne
push
imul
or
mov
enter
cmp
xor
xor
push
dec
loopne
fidivrs
add
pop
add
sbb
xchg
push
pop
fwait
xchg
push
stos
lret
or
sbb
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
adc
sbb
stos
into
sbb
xchg
push
pop
fwait
xchg
push
xorb
cwtl
jne
mov
pusha
xor
add
stos
into
sbb
xchg
push
xchg
pop
xchg
std
in
fidivl
xchg
fwait
out
out
test
addb
stos
into
sbb
xchg
push
add
mov
out
repnz
sbb
push
cld
mov
enter
aas
in
aam
xchg
xchg
pop
inc
stos
into
sbb
xchg
push
pop
mov
xchg
inc
stos
into
sbb
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
pop
fwait
xchg
push
repz
cltd
loopw
cmp
xchg
addl
loop
mov
push
jnp
pop
add
pop
fcoms
jbe
ss
aad
popa
jnp
out
rcrb
lea
fiaddl
cmp
push
fisubrs
neg
popf
cld
dec
pop
stos
sub
inc
rolb
jle
adc
imul
call
lahf
pop
rcrl
inc
test
or
push
loope
cmp
push
mov
fildl
outsb
mov
fs
pop
aaa
xor
test
mov
test
jnp
mov
out
add
push
mov
xor
jecxz
les
and
cmp
lahf
cmp
int
clc
sub
test
ja
in
cmp
fisttpll
shl
repz
xor
mov
mov
cmp
psubd
mov
mov
xor
clc
adc
sub
push
inc
aam
push
rclb
fwait
mov
test
mov
repz
push
enter
add
out
orl
jp
jl
lods
or
mov
add
push
add
js
clc
nop
xchg
sub
mov
pop
dec
push
jae
negl
mov
adc
lds
dec
inc
imul
insl
xchg
out
fldt
sahf
or
inc
jo
adc
out
mov
sub
test
aad
popf
push
push
ljmp
divb
cs
push
cmp
cmp
stos
syscall
mov
pop
inc
scas
push
adc
fs
mov
cmp
pop
xchg
sbb
cmc
popa
fwait
inc
cmpsb
leave
xchg
xchg
jo
je
popf
cmp
add
mov
and
popf
sti
mov
imull
scas
mov
fimuls
sbb
mov
outsl
adc
mul
or
sbb
out
xchg
mov
dec
and
mov
sbb
or
cmp
test
push
iret
mov
cld
xor
cmpsb
aam
inc
push
mov
mov
ds
cmp
jne
jl
pop
pop
or
cs
push
pop
dec
loope
mov
stos
mov
mov
filds
ljmp
in
mov
and
push
sbb
das
ret
shrl
rol
loope
jge
mov
mov
cmp
mov
lcall
lock
jle
dec
lret
and
pop
jbe
test
popf
jge
push
jnp
and
cmp
addr16
imul
ljmp
movsb
or
push
ja
push
rolb
out
lods
or
add
xor
dec
mov
nop
xchg
xchg
jns
lahf
or
icebp
fidivrs
ss
notl
loop
cmpsb
pop
ret
pop
cmp
mov
insl
movsl
and
push
mov
jno
outsb
out
gs
pop
ljmp
loope
sbb
jns
or
icebp
sbb
add
rol
cli
push
movsb
or
xor
mov
pop
jp
jae
mov
into
jbe
adc
out
inc
lret
sub
mov
mov
jp
mov
pop
outsl
jno
xchg
xor
jno
mov
outsl
or
aaa
pop
in
sub
mov
push
nop
lret
jbe
fcoml
lds
dec
scas
call
pop
sub
add
jle
mov
push
fidivs
mov
pop
mov
xlat
jo
dec
sbb
mov
cmpsl
cmc
lods
mov
pop
imul
jb
icebp
insb
aas
pop
fs
stc
push
inc
aad
xor
sbb
cmp
orl
xor
adc
jno
add
dec
fdivrl
and
dec
dec
fiadds
xor
lds
ss
pop
push
cmp
and
push
dec
das
sub
jp
sbb
clc
sub
sbbl
add
mov
jg
ds
sbb
es
or
insb
mov
jecxz
shr
in
or
dec
mov
jnp
cmp
xchg
xlat
fcoms
jl
lea
and
imul
sbb
testl
in
jne
dec
rcr
rolb
cmp
movsb
fs
inc
and
test
aas
nop
shrl
and
sub
lods
out
bound
cld
inc
pop
sbb
xchg
jecxz
xor
inc
into
xchg
pop
pushf
mov
ljmp
xor
das
dec
test
cltd
mov
mov
push
sahf
sub
mov
mov
ja
sub
and
mov
mov
xor
sbb
idivb
sbb
jg
mov
shrb
mov
pop
and
add
stos
xchg
shr
mov
xlat
xlat
adc
icebp
mov
cwtl
dec
je
and
inc
inc
jl
pop
sub
push
dec
out
sbb
notb
cmpsl
jge
jbe
mov
push
shrb
test
pop
les
pop
xor
lods
push
sub
cwtl
test
xor
in
fisubrs
push
jne
jae
fdivrs
lahf
es
ds
mov
sbb
outsl
ret
or
push
or
aad
out
and
dec
dec
pop
xor
jo
stos
jbe
sbb
sub
mov
in
out
cs
mov
pop
mov
jb
mov
cs
xor
rcl
iret
cmpsb
dec
mov
popf
xchg
xchg
push
insl
das
mov
mov
jecxz
icebp
into
mov
mov
xor
andl
rep
fimuls
aad
pop
mov
push
and
test
test
hlt
cmp
pop
xchg
into
stos
rorb
and
cmpsb
ds
jns
in
pop
push
add
mov
rclb
imul
jp
inc
inc
cs
outsl
shrl
outsl
mov
mov
dec
loop
sarl
jecxz
cmp
and
mov
push
add
outsl
push
and
lea
aam
add
xchg
fwait
pop
es
jmp
mov
repz
cmp
cmp
dec
in
add
xchg
aam
cltd
test
insb
stos
inc
mov
in
push
and
mov
mov
dec
mov
mov
and
dec
jae
dec
mov
xchg
fwait
rcll
fadds
subb
ljmp
mov
notl
push
push
xchg
xchg
jo
add
pop
add
jle
sarb
test
sbb
pop
add
push
adc
pop
lods
push
cmpsl
adc
sbb
ss
pop
pop
push
movsb
inc
or
fmulp
pop
insl
adc
imul
pushl
clc
mov
fnop
das
xchg
jno
into
in
add
jo
lds
decb
xchg
dec
lahf
iret
xchg
arpl
cwtl
cs
push
pop
outsb
movsb
pop
movsl
movsl
mov
xor
and
dec
fsub
xor
add
jb
mov
subl
mov
loop
popf
clc
out
movsl
int3
aam
dec
xchg
stos
mov
mov
stos
cmp
decl
fldcw
rep
and
bound
idiv
xor
xor
js
aas
jnp
jno
cmp
lahf
call
shlb
cmp
xor
pop
and
xor
jo
aad
in
out
addl
fs
arpl
jbe
gs
and
push
jg
jl
adc
in
stos
scas
pop
push
sub
or
dec
out
icebp
ret
inc
out
cmc
xchg
outsb
inc
xchg
cwtl
mov
xchg
fwait
pop
dec
sbb
xor
shrb
popa
mov
mov
jg
and
in
adc
lcall
daa
dec
ficoms
out
jae
dec
push
hlt
int
sub
push
in
and
pop
push
and
or
test
push
xor
lds
in
push
lock
pop
lret
jecxz
add
push
pusha
xchg
mov
adc
xchg
test
test
mov
and
mov
push
fnsave
data16
aas
bound
jno
mov
inc
mov
pop
cmp
xor
in
jb
jp
mov
mov
dec
jb
or
call
lahf
js
jnp
out
rcrl
mov
negb
stc
pop
loope
lret
sub
push
pushf
test
xor
pop
stos
std
mov
test
jno
mov
fisttps
insb
jl
repnz
add
push
sbb
in
pop
mov
sub
adc
sub
and
pop
stos
cmp
cmpsb
push
pop
or
mov
les
push
jg
loopne
fbstp
mov
inc
xchg
push
lds
pop
ja
xchg
icebp
sbb
sbb
lcall
push
pop
cmp
mov
hlt
mov
inc
insb
cld
test
les
fs
mov
mov
sub
lahf
push
jne
and
xlat
imul
jmp
inc
and
je
in
push
or
pop
test
pop
cmp
xor
mov
push
loope
push
aam
mov
xor
fsubrl
mov
pop
add
sub
lods
mov
mov
std
dec
std
pushf
lea
xlat
mov
jmp
pop
stc
pop
pusha
lock
adc
dec
sahf
sbb
jne
or
push
or
out
push
xchg
ret
xor
icebp
fwait
pushf
and
stc
aam
and
lret
fidivrl
femms
rclb
mov
xchg
sbbb
test
cmpb
aad
sub
pop
lahf
adc
sbb
jecxz
out
hlt
add
aaa
and
cmpsl
outsl
lea
inc
mov
add
cmp
scas
aaa
sbb
or
out
ljmp
lcall
add
daa
sub
rcl
or
imul
or
and
cltd
push
addr16
sub
and
aam
pop
inc
sbb
and
in
inc
fbld
test
sbb
jg
out
lds
fmuls
ret
inc
push
cmp
mov
jle
cmp
xchg
xor
lock
jmp
roll
dec
rcr
sub
mov
jmp
add
mov
into
push
push
in
out
negl
sbbl
sub
movsl
and
push
and
hlt
imul
lcall
jmp
push
aaa
ret
xor
cmc
js
mov
iret
xchg
stc
xchg
dec
shll
insb
lds
popf
mov
cwtl
xchg
jge
dec
jb
leave
jnp
xor
jne
sub
out
fnsave
movsb
fimull
or
xlat
cmc
mov
mov
stos
popa
ds
cmp
mov
xchg
pop
scas
clc
es
xor
in
sub
mov
nop
jae
jl
jnp
pushf
fldt
aad
xor
xor
jbe
fs
pushf
movsl
int3
cltd
mov
cmp
jmp
mov
shlb
jmp
sub
or
lret
push
pushf
push
mov
sbb
cmp
fs
jge
and
dec
pushf
jbe
stc
xor
push
jecxz
jnp
shl
mov
dec
sbb
jb
add
lods
jnp
adc
push
stos
or
pop
mov
das
mov
push
add
cmp
add
jno
out
out
loope
cmp
inc
sbb
push
mov
and
test
jnp
aad
icebp
pop
or
les
cmp
pop
adc
add
test
test
xor
inc
pop
sbb
scas
lods
push
mov
cmp
jns
fs
sub
cmpsl
das
inc
pop
mov
xchg
out
negb
cmp
loopne
lods
loope
outsl
cmpsb
dec
adc
iret
mov
lods
mov
or
es
lret
pop
jmp
cwtl
fistpl
jo
jbe
sahf
jne
xchg
mov
repnz
outsb
js
push
jo
call
cmp
popf
dec
pop
aad
shr
test
sub
pop
dec
push
cli
xor
rcl
add
jno
sbb
not
ficoms
jmp
push
mov
nop
add
jmp
inc
or
into
fiadds
push
js
loope
and
ds
fcmovbe
ds
loopne
fsts
sub
xor
xor
sbb
mov
shrb
and
lcall
stc
aad
gs
pusha
adc
fdivs
xor
pusha
add
ror
xor
pop
cmp
jg
cmp
fwait
and
jae
lds
xlat
sarb
scas
rcr
inc
add
js
clc
fs
adc
lcall
lcall
or
push
mov
movsl
stc
cwtl
fsubl
cmpl
lea
fcomip
je
cmp
push
mov
xchg
jbe
push
mov
fstpt
sbb
pushf
adc
xor
fsubp
xchg
andl
sbb
sbb
push
jns
dec
imul
stos
das
out
dec
mov
idivb
push
xor
mov
push
pop
sbb
pop
lcall
clc
adc
add
pop
lock
loopne
dec
cli
xor
xlat
sahf
fisubl
cltd
iret
dec
push
lods
push
test
aam
paddsb
xor
push
mov
cltd
xor
int
popa
pop
movsb
inc
shrb
shl
aam
lahf
lock
dec
out
mov
inc
push
jae
jle
mov
mov
pusha
inc
xchg
sbb
outsl
rclb
out
mov
int
sarb
sbb
clc
inc
lret
jecxz
jmp
jle
fcmovne
sub
cmp
push
cld
loop
xchg
push
push
sub
jb
mov
stos
push
mov
test
idiv
stc
mov
adc
or
out
push
xor
aad
scas
and
or
mov
fdivr
mov
jp
pop
adc
inc
push
mov
dec
out
cmpsl
jb
stc
outsl
or
frstor
loop
jnp
ficoms
cli
and
inc
test
mov
pop
add
repz
push
enter
cmpsb
push
std
cmpsb
xor
popa
sub
clc
push
mov
rcrb
sub
or
out
outsl
arpl
test
pop
std
jne
push
lahf
movsl
sub
fld
and
push
jne
inc
inc
add
gs
cmpl
cmp
jae
push
lods
or
cmp
into
lea
int
daa
pop
add
and
and
aad
sbb
push
ret
add
loop
mov
iret
or
repnz
jge
clc
and
shll
icebp
jmp
ret
in
call
rcl
inc
les
jp
setbe
xor
fildl
add
mov
fimuls
mov
sbb
jns
out
adc
sbb
xchg
xchg
int
std
mov
in
inc
fsubs
dec
shr
sbb
addb
push
mov
out
stos
rorb
aam
sbb
xchg
test
icebp
repnz
push
jge
int
add
pop
mov
scas
pop
jbe
mov
std
loop
lods
push
inc
sub
test
jo
jp
fstp
cltd
sbb
dec
ja
lahf
adc
jne
and
adc
cld
add
mov
fstpt
addr16
nop
and
jae
aad
inc
test
push
bound
iret
jbe
xchg
icebp
push
dec
lods
mov
icebp
arpl
lds
xor
add
mov
adc
leave
push
pop
fidivs
rcr
fld
xchg
mov
out
mov
icebp
mov
imul
test
stos
cmp
test
fucom
popf
dec
fwait
push
cmp
mov
es
push
add
cmp
pushf
ds
mov
rorl
mov
cmp
push
stos
mov
cmc
adc
out
clc
push
iret
dec
pop
sbb
xor
jns
mov
sub
xlat
push
push
aad
adc
ret
das
scas
adc
push
test
sbbl
cmc
pop
popf
xor
fstpl
xor
fwait
adcb
xor
xchg
mov
sub
xor
imul
pop
inc
push
fisubrs
fwait
xchg
mov
inc
inc
push
adc
in
jge
cltd
cmp
fnstenv
popa
pusha
push
ja
pop
mov
mov
fsubs
mov
arpl
and
js
test
cmp
mov
add
sbb
sub
test
iret
add
gs
dec
xchg
jbe,pt
aad
xchg
sbb
add
mov
push
fstps
cmp
jo
adc
faddl
gs
cmpsb
and
jge
and
mov
sahf
sub
inc
in
mov
pop
in
push
xor
fisubrl
stos
lock
out
xor
cmp
sub
mov
loop
push
xchg
push
sub
lret
inc
jmp
stos
cmp
cmovl
mov
sbbb
sbb
cwtl
sbb
loope
sbb
jg
stos
outsb
dec
leave
addr16
cltd
into
sbb
repnz
int3
mov
xor
shll
sbb
test
jne
inc
jne
test
jge
int3
stc
out
pushf
jbe
mov
mov
or
lret
mov
xor
test
ret
xchg
test
mov
int3
mov
repnz
jbe
mov
xor
sub
mov
adc
lock
jl
dec
cmpsl
repnz
jge
scas
xchg
pop
jne
mov
aad
iret
pop
mov
xchg
lods
cs
ljmp
jo
adc
push
inc
xor
inc
into
add
lret
aas
pop
fiadds
out
and
stc
out
jge
adc
and
scas
sub
inc
jge
sbb
push
xchg
in
xchg
jecxz
xor
popf
rclb
mov
loop
inc
adc
inc
loope
cmp
add
jno
int
mov
sub
jnp
mov
adc
in
mov
sub
or
inc
lock
sti
cmpsl
sbb
shlb
daa
adc
lock
xchg
mov
jl
adcl
test
mov
sbb
xor
mov
push
xor
adc
sti
pop
stc
xchg
popf
jnp
mov
loope
jno
cmp
pop
aad
mov
mov
mov
cmp
cli
jns
pop
mov
int3
push
jmp
mov
jecxz
lcall
inc
cmp
enter
lret
enter
stc
push
adc
or
xor
mov
sub
inc
dec
addl
sub
pusha
cmpsb
push
or
orb
fs
mov
lcall
or
jg
lock
and
ret
test
sbb
inc
imul
xchg
mov
sbb
cmp
inc
mov
pop
add
ljmp
push
test
int
jmp
stc
fisubrs
addr16
xchg
cmp
jge
mov
subl
mov
es
incl
shrl
or
dec
inc
cmp
aaa
jne
cld
pop
dec
xor
cwtl
cmp
rcrl
inc
outsb
and
ljmp
mov
roll
sahf
push
lret
xor
xor
cld
jae
or
xchg
xchg
ja
cld
pop
cmp
push
sbbb
mov
in
sbb
loop
es
idivb
loopne
in
loop
dec
or
push
insl
jbe
fnstsw
pop
js
cmp
mov
es
imul
sbb
popf
xchg
fstpt
fsin
fs
lods
xchg
and
mov
iret
dec
push
cmp
sahf
jl
or
cli
adc
sbb
rclb
add
and
jecxz
jg
outsl
jp
pop
push
shl
jmp
xor
mov
cld
pusha
imul
and
cwtl
mov
into
fildll
mov
mov
and
je
inc
fmuls
lods
pop
in
pop
insl
add
prefetcht2
fists
ret
sarl
pop
inc
incl
movsb
and
and
ljmp
sbb
mov
mov
adc
mov
mov
push
jo
jb
shlb
sub
sahf
xorl
dec
loop
ja
mov
mov
jae
cmp
push
cmc
out
inc
push
out
ret
xor
jbe
dec
rclb
jnp
inc
pop
int
lcall
sha1nexte
sbb
sub
and
push
push
test
fstps
lods
movsl
gs
mov
pop
pop
sub
stos
mov
nop
cmp
jb
mov
adc
jnp
repnz
inc
push
mov
cs
dec
cmp
and
mov
add
dec
pushf
faddl
jl
icebp
das
test
adc
push
jae
jno
aad
fwait
lock
into
sub
mov
popa
xchg
inc
adc
movsl
sub
aam
cltd
fldenv
push
push
imul
lea
pop
sbb
mov
xchg
test
jnp
lods
mov
or
mov
mov
sbb
adc
sahf
dec
movsb
icebp
lret
in
insl
lret
shl
xorl
arpl
xchg
xor
addr16
testl
std
das
adc
gs
adc
xchg
ror
insb
mov
je
leave
xor
mov
sbb
xor
sahf
add
lcall
pusha
nop
sbb
mov
ss
adc
inc
test
xor
cli
ds
and
and
push
sub
into
scas
sbb
fiaddl
rorl
xchg
push
jmp
shrl
test
inc
xchg
push
in
cmc
divl
ret
and
mov
adc
sahf
mov
ljmp
testb
sbb
je
out
mov
test
inc
add
xchg
test
imul
fidivrl
sahf
lock
pop
imul
or
mov
rorl
mov
push
xchg
inc
aam
or
js
in
arpl
ror
or
movsl
pushf
lret
ja
ja
mov
insb
pop
pushf
sbb
lcall
in
jnp
mov
jge
or
setp
jns
mov
stos
and
int3
cpuid
call
xor
jo
xor
jmp
jb
addr16
push
shll
fstpl
add
pop
test
adcb
ds
mov
push
fs
cmp
outsb
xor
cld
test
cli
mov
or
into
enter
dec
add
enter
aas
jmp
push
jmp
and
and
xlat
ds
dec
andps
mov
mov
scas
push
lea
aaa
loopne
int3
scas
outsb
xchg
mov
sbb
sbb
xchg
lret
test
mov
and
ss
add
scas
sub
xor
and
mov
sub
and
xchg
jmp
mov
pop
cmp
imul
adc
adc
push
jl
test
mov
lock
jmp
jne
adc
mov
pop
movsl
cld
adc
into
aaa
ss
mov
sbb
cmpsl
sub
mov
mov
sbb
dec
push
add
push
mov
or
shlb
enter
mov
out
pop
inc
popa
in
test
sub
fstps
inc
fidivl
loope
out
jge
and
mov
sarl
jo
inc
imulb
sbb
xor
sbb
mov
aaa
and
fisttps
mov
stc
test
fcmovnu
sbb
sub
jg,pn
push
fcompl
gs
xchg
mov
dec
int3
xor
pop
repz
loop
fdivl
jmp
jo
icebp
aad
jmp
adc
shrl
and
lret
mov
lds
popa
and
mov
cmc
sbb
mov
lock
int
or
cli
enter
repnz
pop
add
push
out
adc
pop
mov
jge
add
outsl
out
push
movsl
mov
mov
dec
inc
adc
lds
test
jp
stc
test
inc
cmp
lcall
dec
outsb
xlat
rorb
mov
mov
stos
rolb
ljmp
mov
push
enter
xlat
cmpsb
insb
mov
dec
or
out
pop
adc
popf
repnz
mov
out
mov
addr16
cmp
test
cld
mov
cmpsl
pop
mov
in
add
push
xor
inc
xor
shrl
xlat
fwait
xchg
enter
sbb
test
fisubrl
or
out
gs
les
stos
mov
icebp
je
xlat
adc
push
and
test
clc
pusha
in
imul
in
xchg
data16
mov
dec
add
mov
pop
lcall
pop
inc
sub
and
incb
jns
push
sti
pop
mov
aas
in
test
mov
cmpsl
pop
or
stos
sbb
shl
and
cltd
fs
into
movsb
pusha
mov
pop
cltd
cmp
lock
rcll
push
pusha
dec
jae
mov
jl
xor
jmp
shlb
daa
add
icebp
fdiv
push
sub
ret
xor
in
mov
lret
mov
and
mov
pop
pop
jg
jb
push
mov
sbb
insl
es
add
fsubr
pop
pop
es
push
data16
inc
push
out
adc
pslld
cmp
es
test
mov
shr
mov
out
out
sbb
es
fisttpl
push
repnz
and
ja
mov
jle
outsw
mov
and
cltd
sbb
and
mov
cmpsl
add
push
ja
daa
jno
rcll
and
jae
cld
pusha
push
ret
rcrl
aam
pop
ret
sbb
mov
push
sti
fidivrs
cmp
test
lods
outsb
push
out
repnz
dec
jbe
jb
test
fdivr
inc
jo
outsl
popf
mov
clc
cmc
jno
cmpsb
lea
xor
sub
pop
das
sbb
daa
mulb
jne
mov
lea
add
icebp
icebp
mov
dec
clc
pop
daa
repz
loopew
cli
and
fsubl
ljmp
push
cli
fildll
add
test
call
es
in
leave
fwait
sti
shrl
jnp
mov
ljmp
cmp
mov
dec
arpl
push
and
cltd
lods
cmc
mov
lds
mov
pop
adc
or
daa
loopne
mov
subb
push
sbb
shlb
sahf
ficompl
and
mov
pop
and
movl
cltd
sub
push
out
mov
adc
daa
adc
ret
mov
mov
imull
pop
dec
shrl
xchg
scas
add
sub
out
rolb
cmc
xchg
cli
and
movsl
pusha
xor
cmp
inc
and
stos
pop
mov
dec
push
add
mov
lods
cmpsb
push
add
pop
ret
xchg
lcall
fwait
push
in
mov
inc
xor
xchg
add
mov
ret
xor
dec
xchg
mov
daa
ret
mov
fwait
mov
pop
out
pushf
popa
cmp
fbstp
ss
pop
push
xchg
jg
sbbl
out
inc
icebp
aad
or
imul
adc
adc
call
mov
adc
push
jns
xchg
dec
cmp
bound
call
xchg
jno
cli
cmpb
add
scas
std
jmp
sub
pop
dec
lahf
inc
or
jmp
andl
rcrl
inc
gs
push
dec
xor
push
xchg
pop
invd
test
outsl
das
push
test
sarl
inc
inc
loop
stc
and
enter
sub
js
out
pop
fs
ja
jno
nop
jne
xor
push
add
pop
test
fwait
out
in
mov
ret
push
aas
inc
cmpsl
xchg
pop
push
bound
in
xchg
push
mov
scas
jmp
int3
cmpsl
stos
xchg
addb
stos
inc
daa
aas
je
mull
mov
mov
repnz
je
push
aas
jg
pop
push
jmp
insb
cmpl
pop
mov
jno
rcl
subl
xlat
inc
push
es
pop
mov
mov
and
jbe
push
lds
pop
int
stc
mov
in
mov
pop
fstpl
xor
inc
stos
lock
outsb
sahf
out
rcll
daa
sub
xchg
or
mov
fbstp
xor
fstl
sub
gs
je
outsb
add
arpl
mov
adc
cwtl
cmpsl
cli
add
neg
xor
add
sbb
outsl
cmp
scas
cs
xchg
xchg
dec
dec
jecxz
mov
das
cmp
in
mov
lock
sti
cld
jb
enter
in
fsub
insb
ficoms
sbb
dec
movsl
nop
push
cs
out
mov
inc
scas
loope
aam
call
jl
mov
dec
mov
adc
xor
push
in
xchg
xor
daa
repnz
imul
ljmp
dec
jne
mov
in
mov
mov
push
xchg
xor
pop
mov
aaa
data16
push
call
xchg
insb
ss
popa
sub
lcall
pop
dec
xchg
arpl
in
pop
cltd
dec
pop
pop
add
in
lods
cmp
shlb
enter
push
out
sbb
mov
loope
lcall
shlb
loopne
xor
or
mov
jbe
jbe
mov
js
sti
mov
fcomp
push
int3
or
lret
push
das
mov
mov
push
imul
jb
push
push
cli
push
push
inc
cmpsl
dec
sub
jp
repnz
cmpsb
cmpb
jnp
pop
subb
bound
dec
cs
sub
inc
pop
mov
lock
repz
pusha
getsec
sub
pop
inc
mov
mov
inc
aas
pop
fisubl
jle
imul
leave
cmp
add
dec
or
adc
jl
test
loope
loop
imul
aas
xor
xor
mov
pop
xor
push
and
or
cmp
dec
call
dec
dec
fucomip
sti
loop
subb
shlb
sti
inc
mov
jle
push
xchg
or
loop
xchg
push
arpl
add
mov
ss
into
jo
xchg
dec
fidivrs
fsubl
xor
arpl
jbe
dec
mov
pop
mov
pop
sahf
sbb
cmc
xchg
xchg
rorb
loope
sbb
pop
std
dec
lret
dec
stos
cmp
ja
xchg
push
mov
iret
pop
xchg
sahf
cmpl
fwait
mov
in
xchg
in
mov
add
adc
mov
movsb
sub
sbb
push
cltd
lock
or
clc
call
adc
mov
mov
std
cmp
add
mov
sbb
jae
out
adc
mov
and
mov
das
add
push
sbb
cmp
add
jle
mov
aam
dec
xor
into
mov
pop
dec
add
insb
aaa
lret
adc
add
shl
mov
fists
clc
dec
hlt
imulb
sbbb
lods
pop
leave
insb
pop
hlt
jmp
sbb
in
nop
mov
adc
ljmp
pop
aam
mov
or
cmc
mov
scas
lret
mov
mov
jmp
cmp
outsb
mov
sub
sahf
lock
jb
jne
movsb
cmpsb
insl
rorb
dec
aaa
out
lock
and
jecxz
leave
inc
fisttps
frstor
xor
out
fisubrl
mov
sbb
pop
out
jecxz
mov
scas
jg
pop
xchg
adc
ret
ret
insl
pop
sbb
mov
dec
sahf
insl
pop
add
subb
lea
divl
in
ret
rcrl
or
jae
mov
test
leave
or
pop
in
mov
xor
add
nop
cli
jp
fsubs
clc
inc
in
sub
cmpl
jge
cmp
int
jns
ret
inc
sub
lret
loopne
add
sub
cmp
jno
test
decb
add
add
add
or
js
pop
outsb
ds
xor
das
xor
mov
add
mov
mov
nop
loope
cmp
push
mov
in
adc
aaa
arpl
dec
add
push
mov
neg
pusha
scas
jp
xchg
out
popf
xor
bound
into
repnz
xchg
fisttps
inc
lea
sub
cmpsl
out
cmpsb
test
les
or
es
adc
es
xor
test
adcb
pop
cld
shll
adc
je
xchg
push
mov
xchg
mov
ja
pop
icebp
pop
outsl
mov
mov
movsb
mov
add
in
mov
mov
fwait
iret
cmp
sbb
mov
pop
push
jo
sahf
mov
xchg
jmp
repz
imul
inc
or
sbb
xor
dec
lret
movsl
add
mov
add
add
mov
ret
fimull
cmp
xor
call
and
push
sbb
xor
idivl
xchg
add
lahf
sahf
adc
or
or
scas
out
mov
dec
outsb
dec
push
fisubrl
mov
pop
es
xor
pushf
stos
jno
fimull
add
lock
sbb
mov
addr16
stos
or
data16
addb
inc
inc
mov
outsb
jbe
int
lret
popf
fcmovne
out
call
aaa
sbb
dec
call
loopne
pop
sbb
ret
cmpl
pop
out
xor
mov
inc
insl
add
mov
xchg
out
pop
pop
ret
stos
pop
fwait
jecxz
out
jmp
pop
inc
mov
rorb
inc
in
xor
in
mov
repnz
sbb
jbe
lahf
es
mov
inc
jo
out
out
shll
test
fscale
fsubp
pop
dec
repnz
and
push
dec
pop
jecxz
sub
mov
pop
adc
rcll
dec
push
ret
enter
bound
pop
data16
sbb
sub
scas
in
insw
fs
sub
leave
push
jb
scas
xor
sahf
dec
adc
jmp
ljmp
jne
jle
cli
mov
outsl
inc
cmp
and
sbb
jo
repz
in
es
push
into
sar
mov
dec
or
mov
cmpsb
out
adc
mov
jge
adc
call
orl
andl
and
aam
outsl
pop
popf
sub
push
and
rol
dec
and
lcall
popa
jo
pop
xchg
cld
xchg
sbb
mov
push
push
outsl
push
mov
and
dec
cmp
xchg
insb
pop
and
in
leave
push
pop
imul
push
and
scas
in
arpl
mov
in
push
inc
out
mov
push
addl
hlt
insb
inc
jb
in
push
jmp
dec
lcall
std
cmpsb
ja
mov
jbe
mov
dec
xchg
ret
insb
lea
mov
dec
lds
inc
dec
pop
invd
push
dec
adc
mov
repz
xor
loop
dec
int3
imul
push
pop
and
cld
sub
in
sub
adc
inc
adc
sub
push
xchg
adc
mov
sub
xor
popa
mov
fnstenv
cmc
shll
dec
add
stc
jbe
add
outsl
and
ja
test
sub
std
dec
and
loope
jg
push
arpl
shrb
jmp
mov
inc
sbb
mov
xor
pop
push
push
mov
es
ficomps
xchg
add
and
fistl
ret
mov
add
jo
xor
and
mov
ja
addr16
pavgw
mov
push
xchg
pop
sbbl
aam
cmp
repnz
sub
movsb
xchg
jbe
mov
sub
notl
xor
xchg
les
push
lcall
jne
enter
aam
test
cld
ret
insl
dec
test
aas
sub
pushf
les
push
adc
addl
loopne
mov
shrb
sbb
jne
test
out
jecxz
jp
or
inc
stos
shrl
xor
jp
ret
pop
jb
orb
sub
pop
push
adc
adc
inc
imul
cmp
push
mov
lahf
jnp
outsb
daa
add
mov
push
mov
int3
and
add
out
outsl
xchg
add
popf
fldt
ljmp
cltd
add
lods
xor
xchg
add
dec
test
xor
push
sub
enter
sbb
pop
inc
mov
push
pop
mov
inc
jne
sarb
inc
push
cmc
mov
jge
shrb
in
sub
cmp
adc
inc
cmp
push
dec
dec
add
lea
pop
adc
jne
pop
adc
lods
mov
mov
jecxz
call
xchg
iret
mov
mov
jmp
paddb
iret
in
mov
jmp
aam
cmp
jp
push
mov
icebp
mov
sub
jno
lods
dec
mov
xchg
add
dec
hlt
mov
fcoml
notl
and
enter
fnstsw
popf
fs
aam
mov
repz
mov
or
in
iret
add
and
adc
test
sti
pop
dec
add
test
aaa
or
xor
nop
mov
push
mov
dec
testb
negl
mov
mov
dec
insw
or
mov
std
or
loop
sbb
jne
xchg
scas
jmp
xchg
pop
ljmp
sar
jnp
pop
pop
sbb
sbb
les
ret
mov
js,pn
stos
cmp
jb
addr16
push
xor
cmp
mov
cmp
add
mov
out
add
mov
inc
stos
imull
mov
sahf
mov
mov
push
jg
mov
mov
pop
dec
pop
hlt
les
mov
test
outsb
jge
jp
and
mov
add
into
push
fwait
jl
or
loopne
insb
sbb
cmp
mov
pop
leave
insl
push
jb
xchg
popa
enter
mov
bnd
pop
mov
add
les
lahf
cld
dec
cmp
fst
adcl
in
or
mov
mov
mov
mov
imul
push
and
add
sbb
in
jg
imulb
or
in
pop
sbbl
int
fists
sub
in
imul
dec
lods
test
inc
std
or
add
jl
lahf
pop
xor
mov
jle
push
lods
stc
mov
int3
mov
fisubrs
dec
push
fdivl
sar
cld
inc
jl
dec
repnz
dec
outsb
add
subb
dec
mov
cwtl
pop
and
js
movsl
sbb
sub
jno
test
sub
mov
ds
shrl
pop
stc
push
or
subb
lods
jb
in
mov
sbb
pop
mov
enter
mov
daa
fiaddl
cmp
sbb
outsl
and
les
xor
mov
data16
shlb
mov
imul
sarl
jmp
cwtl
xchg
sub
inc
subl
dec
in
jns
cmpsb
mov
leave
popf
je
insl
mov
adc
call
jmp
mov
stos
enter
add
jmp
pusha
jne
dec
stos
mov
addr16
shrl
jmp
inc
adc
push
lea
in
mov
xchg
pop
inc
mov
out
js
push
cmc
mov
lcall
push
and
lret
adc
movsb
jae
leave
stc
int
fildll
mov
lea
dec
or
sbbl
xor
movsb
mov
das
cmc
outsl
loope
mov
int3
std
mov
enter
and
aas
aaa
loopne
nop
inc
mov
jecxz
pop
adc
shl
sub
iret
lock
and
fsubl
nop
in
decl
test
inc
mov
and
push
push
jo
neg
cltd
push
rclb
adc
sbb
cmc
mov
or
mov
xchg
pop
cmp
andl
dec
mov
in
icebp
fwait
adc
andb
xor
addr16
cli
push
or
fdivrs
aas
push
xor
inc
sub
mov
push
cmpsb
dec
mov
rcrb
inc
xor
shrl
lods
sub
fs
int
les
js
mov
and
enter
cmp
add
cmp
cmp
in
movsb
inc
pop
out
ds
xor
push
sbb
dec
popf
in
pop
add
and
lock
testl
inc
fisttpl
sarb
loop
inc
fistpll
stos
mov
pop
stc
and
and
pop
pop
mov
dec
idiv
out
jg
cmp
xor
cmp
loop
inc
fdivrl
jno
lds
popa
call
pop
mov
insl
dec
int
xor
ljmp
int
clc
ret
es
es
ret
add
aad
push
cs
popa
mov
inc
cwtl
adc
loopne
add
daa
cltd
out
mov
in
js
lock
cmpsb
adc
aad
lret
stc
ret
and
ds
mov
cld
mov
mov
je
inc
imul
jne
push
adc
inc
inc
push
adc
pop
xlat
stos
nop
jb
xchg
mov
mov
adc
xor
stc
out
nop
adc
push
inc
mov
sub
dec
mov
and
jge
sub
push
xchg
lret
inc
push
pop
jl
in
arpl
inc
leave
add
add
out
push
mov
xchg
xchg
jp
add
push
xlat
jo
mov
and
lds
sbb
jp
negb
pop
adc
test
jbe
dec
mov
movsl
add
mov
xlat
out
lret
aam
add
imul
sbb
enter
jo
in
xchg
adcl
and
arpl
into
add
cmpsl
repz
scas
jmp
cmp
dec
push
rorl
aas
out
daa
jbe
dec
or
lock
test
mov
sbb
gs
dec
insb
std
test
add
jmp
mov
lret
dec
dec
and
mov
cmpsl
mov
pop
mov
pop
cltd
mov
rol
pop
mov
jne
and
or
jp
lret
sbb
div
js
mov
add
leave
fdivrl
pop
jnp
jl
mov
fs
fsubl
add
xor
jle
cmp
lret
sahf
xchg
mov
adc
insl
subb
xorb
mov
pop
bound
inc
adc
int3
and
adc
pop
xchg
pop
inc
xchg
adc
movsb
xor
fcoml
scas
dec
mov
xchg
cmpsb
leave
stos
sub
inc
push
xor
xchg
jae
pop
push
jb
test
rdpmc
es
jl
mov
add
pop
daa
cmp
jg
mov
add
fisubs
out
notl
je
andb
push
mov
pop
out
push
adc
int
arpl
fnstenv
sub
mov
mov
shrb
jb
fiadds
bnd
cmp
mov
sub
rclb
mov
mov
lret
push
jl
and
sub
jp
push
add
push
jmp
in
xorb
fstpl
aam
push
push
and
mov
push
sub
out
mov
sub
stos
fildll
jb
mov
adc
xor
mov
sbb
mov
repnz
shl
mov
fistps
jmp
roll
or
ja
mov
cmp
xchg
and
xor
std
xor
imul
jle
lods
cmpsb
out
pop
jbe
pop
ljmp
loopne
ret
or
pushw
shl
pop
mov
lods
cwtl
stos
ret
push
imul
add
decl
lock
mov
mov
jns
fists
addr16
and
in
movb
mov
or
and
add
int
mov
pcmpeqb
xchg
adc
adc
les
ret
das
and
push
mov
dec
lret
inc
inc
push
mov
sbb
mov
xor
les
inc
and
movsb
xchg
mov
ss
adc
dec
int
filds
jno
jne
add
mov
fidivrl
push
cwtl
test
xor
in
es
js
xchg
iret
adc
hlt
cmp
insb
lret
imul
xlat
fwait
call
cmp
cltd
mov
jnp
popf
inc
outsl
ljmp
pop
fildll
inc
repz
ja
jmp
insb
fcmove
xor
scas
fsubrs
cmpsl
jns
cmpsl
mov
lret
xor
bound
or
lret
das
int3
jg
aas
mov
lcall
loop
jg
iret
loopne
fidivs
arpl
mov
xchg
sub
cmp
ljmp
loopne
mov
jmp
adc
aas
fnstsw
rolb
ljmp
mov
push
or
xchg
dec
fdivrp
sub
dec
insl
sub
xchg
mov
jno
add
les
fcmovbe
imul
mov
or
negb
mov
clc
out
sub
ds
icebp
test
scas
xor
sbb
adcl
arpl
test
fcmovnu
and
sbb
sti
mov
xor
das
cltd
lock
xchg
mov
cld
jmp
jae
imul
jp
or
mov
cmp
inc
cs
fucomi
stc
and
loope
stos
ds
inc
lahf
add
cmp
insl
pushf
xchg
xor
adc
sbb
subl
leave
repnz
jmp
pop
push
fcoms
jo
outsb
cmp
xchg
aam
xchg
hlt
jns
sub
sahf
stc
pusha
cmpsb
pop
jae
xchg
mov
jmp
sti
jo
and
test
mov
adc
dec
repz
sbb
add
push
nop
sbb
and
insb
add
adc
sub
insl
mov
dec
call
cltd
cwtl
or
gs
rorb
in
aam
dec
inc
inc
cmp
push
sti
cmp
sahf
sbb
iret
mov
iret
push
fs
ficoms
jle
test
xor
cli
test
cli
imul
cltd
insl
jecxz
jmp
int
arpl
cwtl
or
xchg
inc
pop
popa
adc
inc
dec
aam
pop
ficoms
push
mov
data16
or
mov
jno
nop
jnp
arpl
fdivr
rolb
push
xchg
inc
push
lahf
jno
mov
fwait
dec
push
cld
jbe
xchg
mov
sahf
mov
xchg
fs
xchg
lret
scas
cld
js
aad
bound
subb
sbb
into
fs
jecxz
movsb
jns
jne
orb
scas
push
adc
mov
roll
cmp
jb
lea
lcall
push
push
je
pusha
jg
mov
int3
xor
cmp
jl
int3
out
aaa
adc
jns
add
mov
or
inc
jae
inc
inc
dec
lods
cs
fisttps
xor
sub
mov
ficoml
lahf
mov
jl
add
xchg
and
iret
movsb
sub
xchg
negb
into
aaa
outsl
and
sbb
push
das
add
pop
fcomi
push
sahf
mov
pop
rolb
mov
pop
jb
sub
fcoml
mov
imull
das
dec
xchg
jo
jnp
cld
inc
bound
adc
jo
cmpsl
mov
nop
call
push
leave
pop
dec
inc
adc
scas
mov
jmp
leave
std
inc
addb
cmp
dec
xor
cmp
shll
dec
cmpsl
mov
les
cld
std
dec
xor
repnz
popf
dec
dec
icebp
nop
call
ljmp
or
popf
fdiv
test
add
inc
mov
fcmovnb
jne
ret
or
inc
cmpsb
mov
sub
pop
repz
aam
mov
inc
fnstsw
shl
out
or
mov
outsl
stos
mov
adcb
call
jno
cli
cmp
loope
punpckhwd
push
aaa
add
and
aam
dec
pop
mov
setae
xchg
shll
pop
daa
xlat
pop
jae
push
xchg
cmp
cmpsb
sbb
int
sub
xor
jne
fwait
std
dec
mov
cmp
and
mov
dec
xchg
mul
jl
or
jmp
mov
inc
pop
rcrl
rorl
or
lret
push
dec
jns
out
enter
subb
clc
jbe
pop
jp
ljmp
mov
test
test
sbb
xor
add
pop
sarb
pop
or
fsts
push
push
stos
cmpsb
add
repz
les
cmp
cs
fldl
sti
cmp
rcrb
loope
aad
push
enter
jmp
cmp
cmp
ret
push
in
push
push
mov
or
flds
ret
pop
js
jge
mov
adcb
mov
push
mov
jns
stos
mov
cmpsl
arpl
xor
mov
jae
ret
xchg
jb
add
mov
in
cmp
push
fsubl
stc
add
jecxz
xor
mov
fstps
sub
outsb
ficoms
sbb
cli
icebp
mov
adc
jmp
fstps
fstpl
scas
adc
adc
jge
idivb
pop
jle
lahf
cmp
xchg
jbe
lods
dec
xor
pop
push
xor
mov
nop
enter
push
push
adc
daa
mov
xor
test
mov
pusha
movsb
and
xchg
inc
mov
imulb
clc
jo
lock
push
ss
out
push
jno
jns
mov
dec
cmp
mov
push
popa
cmc
mov
loop
jnp
push
mov
inc
shl
shrb
add
push
das
or
aad
sub
mov
pop
jg
stc
imul
es
pop
inc
fucom
dec
clc
lcall
mov
je
dec
mov
lcall
hlt
mov
das
out
xchg
jno
or
daa
push
jo
sbb
lret
ucomiss
stos
stos
ret
pop
sbb
int3
fsubrl
mov
out
mov
or
dec
ret
xchg
addr16
xor
nop
jno
std
gs
dec
rorb
mov
loop
cmpsl
call
mov
pop
in
enter
bound
aaa
jmp
adc
push
mov
jge
stos
leave
adc
add
mov
pop
xchg
adc
cmp
cmp
sbb
mov
cmp
lcall
push
sub
loopne
into
lods
dec
adc
cs
add
and
xor
out
ds
arpl
or
mov
rcll
nop
sub
mov
in
sarl
and
sub
xorb
hlt
ljmp
jo
sbb
loop
inc
cmp
ljmp
popf
and
jge
jp
fmul
xchg
hlt
jle
lea
push
dec
cmc
inc
xchg
mov
mov
leave
dec
fcomps
cld
fnstenv
pop
int
fildll
xchg
mov
rcrl
sbb
test
mov
mov
lea
and
arpl
gs
out
cmp
ss
mov
mov
or
xchg
mov
mov
xlat
dec
xchg
mov
movsl
and
and
sbb
xchg
push
in
jb
out
jo
or
add
mov
sbb
cmp
test
insb
pop
aad
push
mov
ret
bound
push
pop
enter
add
outsl
sbb
ret
mov
pop
sbb
lock
push
xor
push
xor
rorl
mov
mov
mov
iret
fwait
jne
jg
jmp
sahf
sti
adc
cwtl
andb
sti
inc
pop
xchg
jbe
and
aas
and
in
repz
jno
pop
and
scas
pop
pop
rcr
shll
lds
xlat
and
enter
dec
leave
roll
int
sbb
and
push
xchg
loope
add
xchg
jns
adc
mov
mov
jnp
das
gs
test
or
and
ret
jmp
mov
pop
pop
jmp
loopne
xor
xchg
jle
adc
sub
movsl
sbb
test
pop
xchg
adc
dec
xchg
mov
jle
ret
dec
sbb
mov
clc
xchg
xor
pusha
sti
rcr
test
fmulp
push
cmp
fidivrl
iret
in
lods
jnp
xchg
xchg
xchg
stos
dec
xchg
iret
xor
insb
jns
fsubl
mov
and
push
push
scas
xchg
stos
adc
ret
cmp
stos
inc
scas
or
mov
in
scas
push
subb
pushl
insb
xchg
inc
mov
mov
fidivl
push
aas
mov
les
out
sub
or
mov
notl
cmp
mov
lods
lea
xor
dec
gs
pop
push
fs
aad
in
and
shlb
cmp
mov
jbe
sub
jbe
push
ljmp
rcrl
arpl
xchg
addr16
push
ja
sub
adc
jb
loop,pn
or
push
mov
movsb
data16
cmc
pop
push
mov
sub
push
mov
mov
pop
or
cwtl
mov
add
add
bound
aas
or
mov
fldpi
mov
data16
add
mov
mov
ja
sub
rorb
stc
add
cmc
mov
in
pop
inc
movsb
inc
add
cmp
jbe
int3
sub
sti
push
adc
sub
loop
cmp
stc
popa
iret
pop
push
inc
jbe
pop
jns
test
hlt
outsb
mov
daa
ja
or
test
inc
cmpsl
adc
dec
sub
adc
sbb
pusha
or
lahf
repnz
mov
pop
inc
add
gs
in
xchg
mov
mov
loope
scas
push
setg
insl
jne
or
dec
enter
inc
add
arpl
xor
adc
sub
stc
es
ds
sub
je
and
sbb
jo
scas
dec
repz
lcall
adc
mov
into
jno
mov
sbb
idivl
cli
data16
pand
mov
mov
push
jae
lock
pop
mov
in
xchg
xchg
jle
cmp
pop
sti
sbb
add
out
push
pop
mov
mov
mov
add
adc
lret
roll
mov
adc
push
idivb
cmpl
sbb
cltd
add
out
lahf
pushf
and
stos
fadds
push
sti
js
mov
insb
movsb
nop
mov
jnp
imul
and
push
xlat
das
fdivs
sub
jo
mov
in
xor
test
push
jle
loopne
stos
fcomps
xor
xor
test
or
mov
or
insl
push
fdivl
or
dec
sbb
mov
addl
movsl
inc
inc
aam
out
xor
push
stos
pop
inc
mov
loop
inc
lods
clc
flds
mov
pop
add
push
lock
out
mov
mov
rcll
sub
js
test
dec
xor
ljmp
movsb
fsubs
xchg
fnstenv
pusha
inc
jecxz
aam
gs
pop
fcomip
outsb
cmp
xor
mov
mov
xor
ljmp
std
les
adc
sbbb
pusha
hlt
push
ljmp
int3
inc
in
rol
out
iret
test
mov
out
jmp
jb
jo
insb
cmc
mov
out
int3
inc
fcmovbe
cmp
and
out
adc
imul
jg
test
mov
jae
repz
in
mov
inc
adc
mov
rcll
inc
and
dec
xchg
or
xchg
add
fdivrp
out
imul
enter
imulb
aaa
test
pop
jno
jno
xchg
inc
inc
or
pop
lea
pushf
iret
fnsave
lcall
cmp
ret
mov
stc
fs
fwait
addr16
xor
movsb
sub
bndstx
cs
dec
sub
push
cmp
add
pop
mov
jae
mov
cmp
dec
sub
fcom
xor
pop
add
imul
adc
sub
push
or
cltd
adc
shrb
test
out
inc
or
sbb
ss
pop
nop
inc
sbb
mov
out
pop
push
and
orl
imulb
call
fldenv
mov
subb
arpl
mov
and
or
push
mov
test
pop
xchg
dec
insl
mov
inc
pop
dec
xchg
xorb
aam
sbbb
iret
lret
adc
insb
jno
cwtl
in
pop
xor
jb
scas
sub
int3
inc
pop
mov
stc
shl
loopne
or
mov
xchg
adc
mov
cmp
pop
clc
mov
cli
inc
scas
sbb
outsl
sbb
sub
clc
repnz
outsl
xor
pusha
dec
xchg
jno
and
cltd
imul
fstl
outsb
push
mov
cld
and
push
and
fs
cmp
push
rcr
jne
lock
or
adc
lods
push
inc
out
and
add
cmp
jne
in
sbb
lock
xchg
fcomp
xchg
fsub
xchg
mov
movsl
xlat
imul
int3
movsl
adc
clc
xchg
mov
mov
cmp
push
scas
or
xchg
sbb
mov
sub
mov
mov
push
loop
je
fwait
sub
pop
ja
or
xor
ss
mov
pusha
filds
dec
stc
cwtl
out
fsubl
or
cmp
stos
mov
jge
xchg
arpl
lret
sub
movsl
insl
test
out
aaa
stc
mov
push
mov
nop
stos
filds
addl
loopne
popa
call
cmpl
or
mov
movsl
or
cmp
or
loope
outsl
fsts
dec
push
shlb
push
nop
or
cwtl
pop
pusha
imul
jmp
sahf
lcall
push
xlat
jno
jo
dec
jnp
mov
popa
sbb
push
out
inc
mov
inc
sub
into
or
sti
lea
xchg
mov
pop
push
test
data16
orl
and
in
jmp
call
popa
inc
les
aam
jae
incb
xchg
push
pushl
movsl
pop
dec
cmpsl
adc
inc
test
lods
sbb
ljmp
adc
arpl
xchg
sub
adc
xor
sub
dec
add
jl
popf
and
scas
jns
sub
jb
je
aad
lea
scas
rolb
shll
insl
mov
mov
gs
repnz
aaa
dec
fsts
mov
les
xor
push
fstcw
gs
xchg
scas
push
push
movsb
mov
add
or
xchg
jmp
mov
ret
inc
mov
shll
test
jp
or
pop
insb
cmpb
inc
test
or
cwtl
mov
in
pop
cwtl
adc
push
stos
in
or
sub
pop
outsl
ljmp
int3
test
shrb
js
je
xchg
dec
stos
pushf
aas
enter
sbb
add
mov
rclb
jb
or
mov
je
ret
fidivs
cmp
adcb
loopne,pn
dec
xchg
push
pusha
inc
enter
pop
mov
or
jge
je
add
jnp
mov
cmp
addr16
ss
imul
sbb
decb
mov
data16
lea
rcrl
sbb
aaa
aad
aad
dec
stos
rcrb
popf
out
lret
addl
cmp
stc
jp
ljmp
sbb
or
cmp
stc
jmp
pop
jns
scas
pop
js
add
stos
out
push
lea
daa
inc
pop
mov
pop
nop
leave
add
jge
scas
add
add
shl
lcall
add
fisubrs
or
imul
lds
xor
jo
push
mov
es
cmp
or
mov
pop
int
rcr
fiaddl
mov
addl
xor
cmp
mov
jmp
adc
ss
cmp
fcmovu
inc
pop
dec
mov
jge
and
lahf
test
sets
sub
sahf
sub
mov
lahf
mov
add
inc
lahf
pop
xchg
cs
mov
andb
das
std
cmpsb
cli
mov
and
pop
mov
clc
lock
or
popa
xor
sub
sub
fimull
pop
mov
out
int
popl
mov
cwtl
std
jo
mov
pop
shrb
movsl
and
dec
jae
pop
js
inc
push
mov
mov
mov
inc
mov
xor
faddl
cmp
clc
pop
inc
push
xchg
into
sarb
sbb
test
orb
in
sti
lds
js
addr16
mov
mov
pop
int
mulb
shrl
jb
into
mov
dec
sub
cmp
adc
call
cmp
nop
inc
inc
into
sub
clc
pop
jbe
lret
xchg
popf
insb
lods
fcomps
cmp
inc
mov
push
popa
sub
mov
movsl
lods
test
dec
stos
loopne
rorl
lret
ficomps
mov
sbb
cltd
mov
inc
rcll
dec
test
loop
movsl
gs
pop
mov
lea
jo
loope
stc
add
insb
movsl
in
jmp
in
mov
jmp
imul
bound
ds
adc
pop
or
mov
adc
cmc
ret
testl
pop
xor
add
test
sub
imul
in
fdivl
push
sub
pop
xchg
xlat
loop
jae
out
gs
int
out
fisubrs
push
loope
enter
xor
mov
mov
pop
jo
test
push
fdivrl
push
inc
sbb
xchg
mov
popa
push
mov
loop
pop
cld
adc
icebp
adc
je
mov
inc
out
hlt
cwtl
popl
shlb
lret
mov
cwtl
mov
loopne
sarb
in
shrb
cmp
popa
popf
jmp
lahf
mov
add
xchg
neg
pop
sbb
mov
xor
push
push
lds
sub
test
dec
mov
cmc
mov
jmp
popa
mov
inc
add
cmp
mov
xchg
cmp
outsb
gs
jge
push
sbb
movsb
in
int3
idivl
bnd
lret
xchg
adc
sbb
loop
mov
test
test
adc
mov
xlat
pop
inc
xchg
call
jae
je,pt
scas
fs
jl
cmp
pop
loope
dec
jg
aaa
sbb
daa
arpl
ljmp
jae
inc
movsb
sbb
in
push
xor
divb
mov
jb
shl
popa
dec
movsb
cmp
or
push
xchg
xor
in
jno
fsubrl
push
in
js
out
adc
sub
int3
sbb
bound
sbb
lcall
pop
push
sahf
xor
mov
cmpsb
loop
mov
in
lret
jne
jbe
or
and
add
movsb
adc
outsb
cwtl
lock
std
xchg
push
adc
xchg
shll
imul
int
and
pop
mov
lret
out
mov
ror
push
xchg
pop
fidivl
stos
push
xchg
mov
pop
push
push
jne
lods
popf
pop
sbb
dec
sub
test
add
pop
and
add
pop
add
mov
lret
lahf
int3
mov
movsl
and
gs
lret
adc
outsl
imul
dec
out
repz
cmpb
shl
ljmp
pop
cmc
pop
aad
hlt
sbb
inc
cmpsb
push
xorb
fdivl
das
iret
imull
insl
in
aad
inc
jl
vandnpd
mov
cmpl
push
cmpsl
push
ret
mov
fiaddl
in
mov
dec
call
pop
test
in
roll
rcl
xchg
imul
in
pop
test
dec
inc
jmp
push
push
dec
fcomps
sub
mov
and
ja
ss
test
inc
xchg
cwtl
adc
mov
fiadds
cmp
cmpsl
pusha
sub
dec
and
pusha
sub
fldl
addr16
ljmp
cmp
test
ljmp
and
xor
adc
and
sbb
jae
daa
push
lods
pushf
jp
mov
mov
xor
scas
in
xor
cli
out
popa
xchg
stc
in
stos
pop
cmp
jmp
fisubs
or
enter
and
mov
mov
in
sub
dec
mov
cmc
adc
dec
jo
int3
data16
imul
push
dec
scas
or
js
xchg
sub
pop
jge
pusha
cltd
int
push
xchg
dec
lahf
dec
iret
cmp
popa
hlt
fadds
xor
bound
mov
sbb
inc
aad
in
mov
cmc
shl
stc
add
les
stos
popf
mov
aam
loope
sub
cmp
add
cmc
jmp
add
jecxz
aad
jecxz
shll
ficoml
movsb
loop
xchg
adc
dec
aas
bsf
insl
add
repnz
mov
es
mov
mov
adc
push
pop
movsl
fs
and
xchg
stc
sub
fisubs
pop
jl
xlat
fstl
or
add
push
cmpsb
adc
pop
pop
les
clc
sub
jne
loope
xchg
sub
ss
mov
add
and
rcr
cmpsb
js
adc
pop
sahf
test
mov
mov
dec
cmp
xor
sbb
xor
popl
rcl
out
mov
and
mov
daa
scas
insl
rcrb
sahf
xor
cmpsl
sub
loopne
imul
ret
insb
xchg
and
mov
xor
cs
andb
xchg
shrb
mov
inc
int
rclb
imul
hlt
cs
mov
cmp
xchg
cmp
push
clc
ljmp
mov
cwtl
fisubs
cmpsl
xor
pop
adc
jg
fwait
stos
or
int
daa
aad
and
dec
push
idivb
repnz
push
pop
sbb
lods
adc
dec
cmp
or
popf
jb
aaa
push
dec
jg
sub
push
bound
sarl
sbb
pop
adc
rolb
pop
mov
sbb
push
loop
pop
test
sbb
popa
outsb
sub
int3
sar
rcrb
jb
push
pop
adc
push
cmp
imul
push
cmp
dec
push
jnp
inc
push
pushf
push
xchg
fs
push
fwait
mov
or
jb
push
into
inc
adc
push
fstpt
xchg
add
or
or
out
mov
pop
lods
jp
and
xor
mov
repz
stc
in
dec
cmc
addr16
loope
out
orl
je
pop
pop
negb
pop
push
outsl
imul
loop
jbe
out
sti
jp
push
pusha
lods
cmp
mov
call
shlb
mov
int3
pop
test
gs
jbe
sbb
clc
insl
addr16
cs
ljmp
xor
xor
jmp
sbb
pop
or
pop
stc
ljmp
in
sahf
or
imulb
sub
out
movl
imul
sahf
sub
or
and
in
sbb
loop
dec
sub
dec
outsb
loopne
xchg
scas
mov
inc
ret
outsl
ljmp
push
scas
je
cmpsw
xor
xor
dec
inc
pop
mov
cmpsl
sub
hlt
jbe
gs
cld
sbb
mov
lea
push
mov
cmp
in
jmp
pop
dec
fwait
jnp
xchg
imul
adc
insb
into
js
call
add
scas
aad
repnz
inc
mov
ja
mov
sub
mov
mov
pop
mov
ja
xlat
push
loope
xor
ret
mov
or
mov
cli
mov
pop
frstor
ja
dec
or
pop
and
popl
int3
in
scas
out
rcl
push
jecxz
and
dec
mov
ss
sub
jge
add
hlt
pop
xchg
jb
sti
cli
les
subb
jle
cmpsb
push
fidivrs
insb
cmpsb
push
js
push
insl
in
inc
mov
cmp
add
adc
adc
lods
jb
pushf
hlt
pop
xor
orl
pop
lcall
stos
pop
cli
jns
shlb
insl
notl
jg
jno
push
inc
push
int3
pop
enter
lret
jecxz
dec
test
daa
xor
cmp
push
loopne
push
outsb
movsb
push
add
pop
mov
xchg
fsubl
test
stc
addb
mov
aas
pop
andb
push
or
sub
lcall
rorl
pop
jo
fcmovnu
fbld
and
mov
leave
arpl
xchg
cmpb
or
dec
add
pop
das
and
sub
inc
aas
mov
jg
mov
or
popa
icebp
xchg
rorl
pop
mov
mov
dec
cmpxchg
into
notl
lahf
stc
jecxz
loopne
jb
hlt
pop
pop
idiv
push
pusha
movsb
jmp
mov
and
inc
jecxz
push
cmp
mov
pusha
fiaddl
mov
cmp
cld
push
xlat
shrb
cmpsl
mov
push
hlt
inc
lea
out
dec
stos
adc
test
mov
xchg
jle
frstor
je
push
push
scas
add
jno
daa
aaa
xchg
adc
fbld
mov
aad
iret
out
mov
jl
jecxz
mov
mov
pop
pop
lds
mov
xchg
clc
jge
nop
mov
sahf
outsb
test
cmp
xchg
ja
lods
or
inc
shl
mov
imul
arpl
lcall
imul
cltd
mov
cwtl
aas
outsl
in
cmp
lcall
cmp
cmc
adc
dec
mov
jae
aam
fldl
add
mov
mov
sti
sub
inc
add
out
ret
mov
mov
inc
add
fbld
pop
add
lahf
shll
and
xchg
jb
lcall
aaa
js
imul
mov
add
lahf
ja
mov
add
icebp
fmul
aam
xchg
lret
adc
or
divl
jo
fucomp
jl
mov
pop
lods
pushf
neg
mov
test
dec
xor
imul
push
popf
pop
adc
mov
insl
push
pop
sub
jnp
dec
shl
add
adc
sub
sub
ret
adc
mov
jl
push
iret
dec
fs
inc
push
mov
cmp
lock
push
push
lds
cmpsb
adc
jne
nop
lret
pop
sub
xor
stos
sbb
inc
ret
ror
pusha
xor
lcall
sbb
mov
lret
into
insl
shlb
lea
sahf
xchg
push
lret
adc
les
or
das
sbbb
aam
lods
ss
push
nop
cmp
jne
or
dec
aaa
aam
loop
enter
xor
lcall
in
jecxz
xchg
shll
ss
cwtl
stos
ljmp
inc
dec
and
xchg
xchg
sub
add
sar
xchg
aaa
pop
insb
mov
cmpsb
add
test
cmpsb
out
daa
loop
push
fs
bound
and
aas
daa
into
xor
mov
fdivs
or
sub
xor
xlat
stos
mov
lock
push
clc
icebp
addr16
mov
insl
mov
notl
in
xor
xchg
mov
push
cmp
cwtl
pop
and
daa
sbb
xchg
push
fwait
cmp
xor
dec
mov
lea
lahf
push
mov
inc
adc
repz
mov
movsb
push
push
dec
sbb
or
imul
pop
xor
int
lahf
xor
cmp
mov
add
js
out
sub
xorb
fmulp
mov
out
mov
mov
add
adc
mov
xor
ficomps
call
cmpsb
dec
mov
add
sti
jbe
cmpsb
sbb
mov
data16
add
jp
test
pop
push
sbb
int
xor
inc
test
cli
xor
xchg
sub
inc
or
stc
mov
or
mov
loop
mov
pop
into
jle
je
push
lahf
mov
pop
sub
dec
and
test
test
nop
inc
aam
sarl
andl
push
loope
adc
gs
xor
push
lods
jne
xchg
mov
add
xchg
sbb
out
or
jmp
aad
cld
lret
pop
test
sbb
xchg
add
and
shll
mov
jae
test
mov
gs
jae
inc
mov
sahf
sub
and
roll
mov
test
inc
push
inc
fs
mov
loope
add
pop
scas
or
cltd
mov
mov
inc
xchg
adc
jmp
mov
sbb
xor
loopne
call
xchg
stc
push
inc
pusha
adc
adc
and
inc
and
push
idivb
and
xor
inc
sub
pop
outsb
inc
adc
clc
xchg
or
jae
in
and
fldenv
fs
push
pop
pushf
iret
mov
int
cs
push
out
xchg
sub
adc
das
loopne
jne
out
addr16
arpl
adc
pop
sub
repnz
sub
insb
bound
ret
lds
rol
clc
mov
mov
cli
mov
test
popa
clc
adc
mov
ljmp
call
sbb
repz
mov
pusha
mov
in
lcall
stos
mov
mov
cmp
leave
cmp
cwtl
jns
and
cmpsl
mov
ret
xlat
das
mov
and
loop
adc
xor
push
and
mov
ds
mov
test
add
xor
scas
fsubr
jp
pop
insl
mov
xchg
outsl
cwtl
jnp
leave
imul
setnp
mov
inc
mov
adc
jge
fwait
pop
add
inc
lea
cmpsb
aam
jns
push
movsl
test
fwait
push
rorl
stos
sbb
xor
mov
cli
clc
add
leave
inc
push
xchg
push
popf
or
ret
test
sbb
cmpsl
fwait
test
mov
sbb
sbb
mov
jecxz
sub
sub
mov
imul
dec
scas
or
fidivl
orl
jns
xor
leave
inc
aaa
xchg
jb
xchg
push
subb
mov
dec
mov
mov
int3
fbld
imul
loopne
ljmp
sahf
cmp
aam
clc
clc
leave
cli
cld
inc
outsl
and
lret
push
lahf
pop
mov
test
hlt
cld
in
mov
fistps
ret
fistpl
and
pop
push
lods
mov
je
xchg
insb
mov
dec
and
addr16
push
and
int
mov
or
ficomps
xor
cwtl
mov
and
dec
fadds
ret
push
lcall
cmpsl
ret
mov
shlb
xchg
fs
test
in
negl
xchg
stos
aad
push
inc
adc
push
pop
test
cmp
das
mov
xor
mov
push
call
add
cmc
sbb
cmp
dec
into
fcmove
leave
test
loopne
iret
xor
clc
es
stos
fs
xor
dec
sbb
pop
adc
add
int
shll
jb
lahf
nop
cwtl
mov
mov
jnp
repz
mov
pop
cs
push
push
fxrstor
sahf
mov
jl
mov
fists
xor
and
sub
add
loope
cld
insl
xchg
xor
cmc
and
or
mov
sub
dec
mov
ss
push
mov
jl
jno
mov
out
test
and
inc
mov
inc
cmpsl
mov
mov
jp
sub
sub
pop
mov
sub
push
sahf
fcompl
inc
shll
xchg
mov
loope
jno
dec
mov
sbb
mov
insb
dec
ljmp
shr
cmp
dec
mov
xor
test
stos
in
mov
out
cwtl
popf
cltd
outsb
cmp
cmp
push
jge
add
sbb
ret
xor
xchg
jmp
pusha
rcll
fadds
mov
mov
pop
jnp
mov
jg
mov
push
mov
cmpsb
sahf
dec
stos
lds
ret
or
inc
dec
adc
mov
shl
std
fdivl
call
ret
sub
add
jnp
pop
test
ljmp
mov
fbld
mov
dec
addr16
lds
mov
xchg
cltd
leave
pop
cwtl
loop
xchg
dec
adcb
pop
fs
jns
cltd
test
push
xchg
sbb
enter
lods
movnti
stc
push
push
add
mov
inc
jno
push
or
scas
loop
repnz
lret
mov
xor
add
inc
xor
lcall
lods
inc
mov
test
outsb
roll
add
das
pushf
mov
push
lcall
pusha
adc
pop
imull
sub
mov
mov
cmp
lds
cvtdq2ps
mov
fisttpl
adc
jl
or
and
jle
jo
xor
ficomps
push
xchg
pop
lea
pop
mov
decl
xor
pop
push
cmp
das
and
not
cld
or
les
lods
aad
mov
imul
pop
loopne
fidivl
inc
mov
lcall
lods
mov
mov
fs
push
add
cmp
mov
in
pavgb
sbb
jl
stc
inc
sub
enter
into
mov
jmp
push
out
call
jnp
lret
cli
movsl
dec
sahf
dec
icebp
aam
mov
cmpsl
fists
or
lods
pop
mov
out
fisubrl
mov
aad
ljmp
sub
push
aam
fisttpl
shrb
outsb
push
pop
popf
es
popa
stos
push
xchg
idivl
loope
sbb
and
mov
ret
and
sbb
push
dec
and
fisttpll
dec
test
dec
jecxz
mov
popa
push
or
orl
sbb
lock
push
sbb
jno
sbb
ja
push
arpl
test
iret
pop
sbb
xor
call
ret
mov
nop
pop
adc
xchg
adc
test
xor
push
sub
mov
jns
xchg
sahf
call
lea
out
sub
mov
push
cmp
adc
mov
jnp
and
mov
stc
mov
mov
les
leave
icebp
sub
adc
ja
stos
or
inc
mov
fstl
mov
pop
push
insl
js
clc
js
out
jne
push
pop
fisttpll
inc
jns
mov
mov
sub
test
cmp
pop
pop
rcrl
sbb
push
daa
jne
jle
mov
xlat
xchg
cmpsb
mov
xor
mov
shrl
cli
out
fdivl
je
cmpsb
test
mov
push
push
dec
push
add
push
xor
mulb
outsb
mov
pusha
lahf
inc
outsl
mov
push
test
mov
shll
mov
ret
and
cli
sbb
inc
mov
jns
lret
leave
sbb
and
or
xchg
mov
loope
sub
movsb
push
fisubrl
jg
mov
lds
icebp
test
int3
xchg
scas
mov
movb
cs
cmc
jmp
sub
imul
sub
or
push
mov
pop
ds
pop
cmc
adc
test
push
inc
add
add
scas
sbb
sub
hlt
xor
daa
lret
outsl
sub
inc
aaa
sub
cmp
aad
enter
loop
ds
bound
das
aam
sub
dec
insb
pop
sahf
xchg
xor
push
les
xor
idivb
bound
push
fidivrl
aad
je
or
lahf
in
out
xlat
iret
xchg
bound
xchg
dec
hlt
outsb
add
dec
mov
cmp
mov
ficompl
mov
inc
mov
cs
test
test
inc
xor
add
loop
xchg
sub
shlb
js
fistpll
push
insb
mov
cmp
jnp
push
pop
jae
pop
xchg
push
inc
jl
cli
jb
notb
into
icebp
stos
daa
xchg
fs
adc
mov
push
scas
push
xor
or
fsts
jnp
pop
add
pop
xchg
add
sub
mov
mov
scas
and
push
pop
mov
push
mov
repnz
jmp
mov
sar
mov
std
fucomip
aad
test
jae
imul
fisubrs
sbb
add
icebp
lahf
dec
scas
lods
pusha
insl
stos
mov
push
adc
insl
mov
cwtl
enter
xor
cmp
imul
icebp
lds
and
xor
inc
mov
adc
and
inc
popf
addr16
jne
dec
mov
lcall
push
lea
pusha
das
clc
dec
and
scas
pop
popf
cli
adc
mov
popa
dec
lock
fcmove
mull
ffree
mov
leave
push
push
xchg
jnp
fs
les
aas
lods
pop
jge
movsb
cli
cmp
jnp
mov
lea
jne
aas
mov
adcl
shrb
jmp
jo
sbb
dec
pop
into
sbb
inc
push
cmpsb
pop
xchg
call
jae
mov
adc
insl
lret
icebp
pop
mov
std
mov
mov
fstpl
es
ja
and
inc
xchg
clc
test
aaa
imul
dec
adc
push
shll
sti
inc
lret
das
dec
mov
inc
out
ret
aad
jmp
daa
lods
scas
inc
mov
mov
pop
add
dec
fmull
sbb
dec
mov
mov
in
fildll
xchg
xchg
sbb
ret
cltd
dec
pop
cmp
andb
ja
jmp
cmp
xor
gs
aad
stos
cmp
and
loope
daa
cmpl
and
adc
or
out
daa
xchg
out
adc
mov
xchg
push
sbb
or
lock
push
inc
mov
or
scas
xor
insb
out
subb
add
xchg
inc
xchg
and
push
push
xchg
outsb
push
fisttps
push
in
mov
jl
and
pmaxsw
mov
inc
sahf
dec
xlat
jle
push
jge
and
roll
mov
push
mov
xor
and
das
fucomp
stc
fwait
adc
enter
data16
push
sub
les
sub
lods
mov
push
sahf
sub
out
or
cmpsb
cmp
jp
in
push
inc
jecxz
test
mov
loop
xchg
ror
dec
dec
push
lock
cmp
stos
insl
jmp
sbb
dec
insl
dec
lahf
push
into
pop
push
add
mov
push
insb
or
pop
fyl2x
repz
jmp
and
dec
sti
outsl
pop
cmc
rclb
jle
repnz
push
xor
mov
lods
mov
pop
hlt
xor
xchg
xor
mov
jp
push
and
jne
fs
sub
adc
jl
jle
cmp
sbb
jbe
add
xor
or
adc
sub
push
mov
lcall
mov
into
or
push
adc
and
cs
mov
aam
inc
movsb
lahf
xchg
fsubrl
sbb
push
mov
cmc
lods
out
xchg
mov
pop
ficompl
je
ljmp
mov
ret
cltd
mulb
pop
aaa
push
in
push
cmp
pop
mov
xor
mov
fdivs
mov
mov
adc
inc
adc
xchg
lret
out
icebp
dec
ja
jnp
lret
and
mov
dec
cmpsl
inc
outsl
test
je
add
pop
fs
lcall
mov
jns
push
repz
mov
daa
pop
loop
ret
xor
out
mov
into
repz
mov
lods
cmp
inc
testb
gs
dec
lods
xchg
cmp
pop
sbb
imul
pushw
add
adc
imul
loopne
addb
or
or
pushf
fcmovnb
mov
pop
jns
cmp
add
shrd
movsb
in
or
sbb
mov
rcll
mov
adc
lock
mull
xor
and
xchg
mov
sahf
fistpll
cwtl
es
jmp
cmp
pop
push
adc
jbe
push
insb
sub
push
jmp
in
fwait
dec
cmp
data16
mov
sahf
or
test
inc
push
mov
inc
movq
dec
aaa
jg
push
addr16
and
test
pusha
mov
out
sub
dec
rcrl
cmp
insl
aam
mov
fsubrl
js
jnp
push
cwtl
xor
sarb
shll
push
xchg
aad
data16
xor
pop
ret
sbb
mov
hlt
inc
mov
lret
jmp
sub
cwtl
lret
call
in
rcr
shrl
add
sub
lcall
lea
adcb
xchg
pop
jmp
mov
popa
mov
pusha
jecxz
push
jnp
sub
xchg
repnz
cmpb
js
pop
lea
shl
jl
rorl
pop
pop
jne
test
add
loopew
fstps
xchg
cld
int3
int
jae
scas
hlt
jmp
leave
imul
fwait
jmp
push
pop
xchg
ljmp
jge
cmpsl
xor
andl
subb
mov
jl
lahf
stc
xchg
cmp
push
push
mov
loopne
dec
repz
repnz
out
lods
mov
insl
add
cmp
mov
cmc
das
test
push
sarb
cmc
mov
mov
and
xchg
cmp
mov
inc
mov
sub
xchg
ja
pusha
scas
inc
cmp
addl
inc
push
scas
push
xchg
idivl
inc
aas
das
sub
in
mov
cmpsl
pop
adc
sub
inc
xor
movsb
pop
insl
xor
rorl
fs
sbb
repz
gs
lret
xor
and
out
movsl
cltd
mov
ljmp
pop
jbe
dec
popa
iret
or
pop
scas
sti
mov
dec
sub
lfs
faddl
mov
arpl
sub
push
imul
push
out
or
add
imul
cwtl
xchg
inc
add
jo
outsb
push
mov
je
adc
sbb
sub
test
fdivs
rol
dec
jecxz
push
push
movsl
or
orb
inc
add
pop
test
mov
mov
add
cmp
popf
out
add
rcrl
sbb
sbb
xchg
jo
push
jge
xor
test
test
ss
fcmovbe
cmc
inc
aam
nop
out
jge
push
and
sarl
jb
and
shlb
notb
xchg
xlat
imul
xchg
test
rcrl
xchg
adc
jo
dec
movsl
stc
test
and
pop
lods
xchg
dec
loopne
or
sbb
addr16
and
sbb
adc
mov
pop
sti
mov
cwtl
sub
mov
pop
sahf
sub
adc
cmp
xchg
icebp
out
jne
inc
dec
or
idivb
sbb
out
inc
or
add
dec
movsl
inc
insb
cmp
call
mov
out
pop
sbb
push
scas
dec
and
ss
adc
pusha
mov
xchg
dec
scas
and
xchg
les
in
mov
push
push
jle
subl
inc
push
sahf
adc
jecxz
adc
sub
jae
aas
shlb
cmp
pop
push
xchg
cmc
repz
xchg
mov
adc
push
fisubl
cwtl
js
incb
jecxz
aad
inc
mov
dec
loop
jo
pop
stos
ficompl
aaa
dec
stc
int3
stc
sbb
out
jl
idivl
add
adc
sbb
sub
decb
cs
in
data16
push
ja
pushl
cmp
sub
mov
out
sbb
and
adc
xchg
sub
dec
mov
sbb
icebp
pop
push
mov
mov
xchg
xchg
mov
mov
dec
and
push
jg
les
lea
sbb
mov
push
rcrl
je
mov
test
xor
or
inc
sub
push
adc
repnz
icebp
addl
inc
adc
loopne
std
sub
cmp
insb
inc
push
xlat
aaa
pop
dec
mov
testb
lods
addl
push
cmp
or
pop
add
jne
mov
xor
mov
ret
and
iret
stos
cld
aaa
imul
sarb
out
arpl
mov
cmpsb
repz
nop
and
clc
lods
inc
je
fstps
xor
and
mov
icebp
jns
lods
mov
pop
mov
mov
lcall
inc
pop
inc
adc
int
adc
sbb
cmp
stos
xor
loop
lcall
dec
and
cmpsb
lahf
fs
mov
movsl
jge
xchg
pop
mov
mov
js
push
or
cmc
or
dec
and
sbb
fimuls
jo
mov
iret
arpl
daa
idivl
dec
in
add
or
add
mov
faddp
cli
lods
sbb
jnp
push
lret
mov
push
call
lods
inc
das
mov
cmc
mov
pop
negb
adc
pop
push
dec
ret
stos
xchg
push
ljmp
aas
sbb
and
cmp
jns
das
inc
jno
aas
dec
cld
adc
daa
sbb
insl
out
jb
jmp
pop
add
mov
and
add
into
ljmp
cs
sub
pop
iret
mov
rol
xchg
loopne
int3
jle
inc
or
inc
sub
pop
loope
xchg
dec
jae
test
sbb
hlt
pop
cmp
imul
shll
ds
ja
aam
notl
add
sbb
imulb
mov
pop
les
xlat
lcall
push
mov
stos
call
ret
gs
lahf
rorl
sbb
inc
xchg
cmp
inc
inc
jle
fsubl
xchg
pop
xor
fisubl
cmp
lods
daa
jge
dec
jecxz
je
movsl
xchg
adc
out
pop
mov
out
sti
mov
xchg
mov
jle
xor
cmp
mov
jb
loopne
cmp
mov
clc
fldl2t
lcall
int3
add
sbb
pop
inc
sti
inc
stos
add
daa
xchg
mov
adc
adcb
cli
and
dec
popf
xorps
outsl
in
dec
out
fldenv
clc
movsb
push
jo
xlat
in
dec
shlb
stos
cmp
jae
shll
lcall
shrl
or
adc
xor
out
aam
jnp
mov
jmp
in
mov
mov
loop
daa
cltd
cltd
incl
inc
or
and
cmpsl
pusha
mov
xor
mov
mov
mov
maxps
inc
add
aam
jmp
xor
lcall
mov
xchg
mov
mov
dec
jnp
mov
std
shll
notb
xor
sarb
mov
sub
in
test
sub
pushf
jl
push
mov
push
mov
push
mov
inc
pop
stc
adc
dec
rcrl
out
aad
xor
sbb
cmp
lock
lods
ljmp
or
mov
pusha
lea
sbb
xor
lcall
aad
int3
enter
inc
mov
rorb
inc
inc
xor
fimull
mov
mov
mov
pushf
pop
xor
sbb
cmp
xchg
loop
xor
push
cmp
into
out
push
add
stos
nop
movsl
jno
movsl
sbb
in
fcompl
dec
mov
scas
xchg
dec
mov
cmpl
adc
push
cwtl
mov
call
jle
into
xchg
jmp
int3
sahf
xchg
es
inc
mov
cltd
xor
cmpsb
add
test
mov
fld
lea
xchg
xchg
jge
xor
out
sbb
jne
dec
inc
cwtl
mov
mov
mov
shr
sub
outsb
inc
jp
push
loopne
jecxz
add
roll
push
iret
imul
jl
test
fidivrl
and
add
imul
jle
jge
or
call
or
adc
mov
je
jno
fstps
adc
dec
int3
lcall
iret
or
push
push
fwait
pushl
lret
jecxz
pop
dec
imul
outsb
sub
mov
push
add
movsl
shll
pop
jne
pop
or
jns
int3
sahf
inc
mov
cmpsb
lret
dec
xor
in
jge
jl
xchg
sub
movsl
and
cmp
mov
fwait
lret
xor
loope
lahf
dec
inc
push
xor
mov
dec
dec
dec
imul
sbb
mov
xor
scas
in
pusha
mov
pop
jl
sub
fwait
aam
mov
outsb
mov
dec
scas
test
cmp
inc
sbb
push
imul
mulb
xor
in
sbb
mov
js
cmp
jns
fidivl
dec
push
les
cwtl
sbb
cmp
mov
mov
lods
mov
pop
push
pop
adc
lea
lods
fdivp
int
scas
add
das
nop
push
iret
scas
fmuls
jecxz
sarl
pop
cld
push
loope
adc
xor
lcall
das
mov
sub
pop
xchg
ja
pop
inc
leave
fisttpll
jl
xchg
add
dec
sub
inc
cmc
mov
fidivl
push
stos
scas
stos
fs
jg
stos
xchg
jg
sbb
sub
insb
lds
jecxz
mov
dec
or
or
push
popf
cltd
push
pop
jg
pop
outsb
jo
cmp
sbb
mov
cmp
inc
fcoml
adc
add
xchg
jmp
sar
mov
std
lods
push
sbb
or
cltd
xor
sub
cmc
dec
mov
loope
mov
dec
popw
xchg
in
push
out
or
pop
xchg
push
loop
fcmovnu
sarl
cmp
jp
lahf
or
popf
mov
pusha
or
cmp
loopne
mull
aad
test
mov
je
mov
sahf
scas
mov
repnz
xor
xchg
add
push
int
popa
cltd
fistpll
arpl
ljmp
mov
mov
cli
addl
jle
push
dec
cld
fdivrl
scas
ljmp
cmp
fs
cld
ss
call
jb
inc
in
arpl
inc
push
sub
je
and
cmpsl
fcomi
sbb
dec
or
out
and
inc
push
cmc
aas
cmp
shlb
iret
cmpsl
jbe
or
xchg
dec
cwtl
in
push
push
pop
inc
pop
pop
fwait
lcall
mov
sub
mov
pop
push
mov
adc
adc
or
nop
adc
arpl
and
cmp
mov
xor
fwait
and
jle
int
loop
or
pushf
in
dec
dec
mov
mov
push
stos
stos
xchg
loopne
incl
or
repnz
mov
xlat
mov
inc
cli
fstp
test
adc
lea
jmp
xor
aas
cwtl
and
add
andb
movsl
ds
sub
mov
inc
mov
ljmp
jae
subl
cld
jecxz
faddl
and
cmc
rolb
lret
push
mov
insl
cmp
jecxz
test
clc
sar
sbb
jl
pop
push
cwtl
sarl
in
push
pop
aad
and
imul
repnz
jecxz
aad
outsb
hlt
cld
es
jmp
sbb
inc
xchg
sbb
sub
xor
out
mov
lcall
movsl
xchg
aam
mov
nop
pop
jae
pusha
dec
xchg
stc
cmp
data16
fsubrp
xchg
ljmp
in
jo
dec
add
pop
insb
das
fdivr
out
push
std
xchg
fsubrl
mov
fnstsw
divb
sbb
push
push
ljmp
es
inc
cwtl
push
and
mov
int3
lea
pop
aam
ljmp
dec
rcr
repz
shl
inc
setae
test
sub
sbb
decb
sarb
std
outsl
imull
movsb
dec
xor
pop
cmp
inc
inc
jg
popf
sbb
ja
mov
push
test
mov
mov
xchg
adcb
lock
sbb
jp
xchg
lcall
popa
cmp
xchg
test
outsb
adcl
push
testl
cwtl
pop
das
std
xchg
mov
push
inc
arpl
jmp
push
vunpckhpd
rcrl
adcb
sub
fimull
movsl
xchg
mov
mov
jge
das
loope
fists
shll
dec
add
clc
mov
inc
aad
loop
inc
push
add
jnp
jmp
lahf
xchg
sbb
gs
mov
and
and
test
rorl
repnz
andb
mov
sbb
aam
nop
cmpsb
xchg
mov
lahf
jle
jnp
mov
fwait
sbb
cmp
inc
cmc
inc
in
fcos
fnstcw
or
incl
ret
push
mov
in
mov
fwait
cli
pop
add
fnstsw
and
insb
fwait
mov
lahf
and
fistps
lcall
sahf
jmp
xchg
mov
ret
add
int3
repz
jp
mov
clc
ja
daa
mov
sub
ja
mov
push
cwtl
sar
jle
rorb
fs
mov
push
mov
ret
test
rolb
jne
pop
pop
aaa
jae
sub
std
mov
scas
or
mov
sub
pop
in
adc
mov
mov
cltd
fwait
popf
je
roll
or
sarb
or
mov
xor
ljmp
mov
ljmp
mov
cli
dec
and
imul
dec
jns
shlb
call
out
inc
imul
mov
mov
and
in
mov
push
sti
or
push
fiadds
pop
add
lods
xchg
adc
mov
cmp
dec
cmpsb
pop
shrl
in
in
popf
aas
ljmp
cwtl
push
cmpsl
xlat
je
repz
in
scas
insb
mov
std
out
rorl
dec
js
cltd
cwtl
mov
mov
out
xchg
add
incb
lret
pop
cmp
icebp
xchg
scas
jne
xor
push
aas
jmp
and
add
inc
and
xlat
add
js
es
cmp
arpl
jge
call
inc
or
in
stos
pop
ljmp
imul
adc
mov
mov
mov
adc
clc
movsb
pop
pop
popf
mov
inc
loop
and
jmp
mov
notl
cmpsl
push
lahf
psubsb
rcll
adc
adc
bound
add
shll
adc
mov
jbe
mov
ret
into
dec
hlt
mov
dec
adc
insl
test
hlt
or
test
pushf
das
in
dec
pushf
jae
xor
out
pop
mov
adc
sbb
nop
pop
iret
jle
sbbb
sarl
hlt
add
das
or
je
or
mov
jns
loopew
push
pop
xor
xchg
push
jnp
mov
out
jl
pop
mov
sub
mov
mov
jle
lret
dec
xchg
popf
cvtps2pi
mov
mov
or
sarb
repnz
aaa
jl
js
jno
cmc
out
data16
pop
ja
jne
xchg
cmp
sarl
les
shll
or
mov
inc
adc
mov
mov
test
xlat
mov
fidivs
dec
movsl
cltd
adc
repnz
jmp
nop
push
dec
test
mov
sub
roll
mov
popf
inc
mov
sub
mov
and
push
jae
inc
cmp
add
cmp
js
mov
sar
adc
ret
mov
pop
mov
cmp
adc
mov
pop
call
jp
sahf
rcl
repnz
lret
js
aam
mov
cmp
cmp
add
add
push
mov
pop
popf
insl
adc
cmp
in
stos
adc
nop
mov
shlb
lea
out
repz
jmp
sbb
dec
mov
or
cmp
ret
cmp
loop
ret
xor
push
clc
ja
jge
jg
call
gs
inc
leave
pusha
mov
sub
mov
test
adc
sub
jno
imull
jnp
mov
movb
jb
scas
mov
ret
inc
mov
fiadds
and
je,pn
dec
adc
and
xor
pusha
inc
push
cld
iret
mov
addb
fmull
dec
mov
add
mov
add
xchg
js
xor
add
pop
or
pop
mov
fdivp
int
stc
lahf
jg
mov
in
xchg
mov
testb
mov
jno
les
or
in
sbb
sub
lret
sub
ret
das
add
lcall
lahf
lret
xor
les
insb
dec
mov
nop
lods
hlt
dec
pop
mov
dec
loopne
push
mov
out
jp
mov
scas
cmp
je
adc
test
jne
out
mov
jp
jae
push
jmp
je
fwait
cmp
mov
or
mov
test
cmp
in
repz
xor
xchg
sbbl
inc
call
inc
lahf
lock
lds
fsubl
pop
jge
data16
sub
insl
xchg
and
shll
jmp
sbb
lcall
mov
dec
and
xchg
pop
popf
push
xchg
ror
jecxz
mov
outsl
into
and
scas
imul
inc
aaa
inc
xchg
xor
jb
lock
push
imul
mov
mov
out
mov
repz
pop
and
mov
push
sub
and
sub
mov
test
sbbl
test
and
mov
xchg
adc
dec
jbe
jbe
pop
cmp
clc
pop
push
aaa
add
ljmp
mov
xlat
or
cmc
cld
jne
mov
mov
jmp
mov
rcrb
add
loope
xor
sti
pop
int3
jnp
mov
mov
mov
push
mov
in
aam
paddusw
imul
out
mov
popf
add
imul
jp
in
out
xchg
iret
xchg
lds
imul
and
stos
lods
add
or
mov
divb
push
and
cmp
ljmp
shl
aad
dec
push
cmp
int
add
mov
sub
jo
mov
cld
sbb
cmc
mov
movb
and
das
push
mov
xorb
pshufw
lret
rcll
or
push
jmp
pop
lods
push
lock
inc
xchg
xchg
aad
adc
mov
xorl
lret
out
ss
mov
lcall
add
dec
cmp
mov
and
mov
rclb
adc
mov
jmp
mov
adc
loop
xchg
jne
mov
mov
das
lea
inc
imul
test
mov
icebp
push
inc
out
push
int3
rcll
xor
sbb
jne
sbb
test
jbe
out
insl
popa
js
mov
pop
jnp
and
jo
iret
mov
sub
ljmp
adc
push
lcall
sbb
shll
mov
mov
sub
or
push
inc
add
je
sub
mov
bound
jb
pop
in
popf
ljmp
gs
cwtl
and
mov
dec
jb
in
jmp
mov
inc
pop
ss
mov
pop
cwtl
dec
mov
mov
push
aas
sbb
sbb
mov
push
or
ljmp
inc
inc
pusha
nop
mov
sbb
or
scas
ret
sbb
mov
jle
cmp
pop
mov
stc
and
fistpll
int3
add
mov
int
int
hlt
xchg
and
mov
inc
xchg
dec
jmp
xchg
lea
xor
sbb
mov
mov
and
daa
mov
mov
mov
mov
cmp
push
nop
mov
dec
xchg
push
bound
xchg
das
cmp
int3
cld
sub
int
mov
stos
cmpsb
push
dec
loope
not
std
dec
test
outsl
lock
lret
dec
ret
icebp
or
daa
aaa
daa
aas
cwtl
mov
jno
orl
data16
andl
inc
rcll
pop
fistpll
out
daa
pop
and
inc
jb
repz
outsb
xor
fadds
and
out
xchg
subb
out
in
inc
mov
mov
das
mov
fucomp
bound
aaa
dec
lods
pusha
pop
les
xlat
xchg
das
mov
mov
repnz
add
mov
add
dec
cmp
xchg
enter
jne
jmp
aam
shl
xor
mov
sub
sbb
loopne
jne,pt
shl
pop
cld
repnz
dec
aaa
sbb
outsb
pop
scas
inc
fists
call
cltd
push
sub
es
cli
or
cmpsl
repnz
jge
and
jmp
cs
mov
adc
daa
js
push
ja
bound
or
inc
popa
pop
push
and
mul
out
xchg
ss
js
testb
dec
out
xchg
ret
inc
inc
cli
pop
mov
jp
cmp
lret
enter
clc
cmp
sbb
cmp
sbb
dec
cmpb
shrl
push
sub
fsubrs
mov
push
pop
sub
sti
iret
adc
mov
sub
int
push
xor
xor
mov
ret
push
ja
jl
mov
mov
push
mov
ljmp
mov
out
cs
sbb
push
jo
push
rep
cmp
arpl
imul
fsubrs
and
int
adc
cltd
nop
ret
push
scas
aad
lahf
push
bound
push
jp
clc
test
inc
cwtl
jmp
rcrb
std
cmp
rclb
xor
mov
jns
push
xchg
mov
cmp
les
cld
mov
cmp
xchg
dec
jle
and
dec
fdivl
loop
in
push
and
adc
dec
and
push
jmp
xchg
lahf
xchg
int3
or
sarl
pop
hlt
mov
push
xchg
sbb
pop
jge
pop
xchg
mov
xor
sub
xchg
mov
push
mov
cmpsl
mov
push
cwtl
lret
mov
inc
xor
xchg
inc
sbb
pop
push
pop
cmp
sti
jmp
adc
leave
call
cmp
add
inc
inc
sub
rcll
test
jae
stos
fdivrl
sub
movb
rcrb
or
adc
bound
popa
dec
xchg
mov
test
pop
cmp
mov
repz
push
adc
mov
sbb
inc
sti
push
fisubrl
mov
inc
aad
xchg
les
push
aam
cmp
jmp
dec
movsb
mov
pop
out
dec
addr16
inc
and
or
xor
mov
xor
mov
sbb
sti
xor
es
dec
lock
mov
movsb
leave
jo
push
pop
xor
movsb
mov
stc
jo
dec
lods
movb
out
iret
aaa
push
xor
movsb
int
sbb
dec
imul
mov
int
sub
ret
iret
scas
fcos
lahf
push
aas
mov
pop
lods
lahf
push
inc
shl
pusha
cmovns
xor
inc
jb
mov
push
test
sub
mov
or
pusha
lock
test
lret
inc
dec
jns
popa
pop
test
mov
add
lcall
mov
mov
cmp
enter
fists
shr
mov
es
scas
aad
mov
cmpsl
enter
pusha
xor
push
jg
cltd
fsubs
add
fmull
and
push
cli
sub
into
imul
pop
stos
pop
mov
cmp
in
inc
mov
mov
sub
pop
xchg
shl
call
bound
sti
test
pop
imul
insb
jle
add
dec
jle
call
mov
jns
es
sub
leave
in
mov
sub
mov
mov
adc
pop
xchg
xchg
and
fidivs
push
ljmp
call
lea
inc
mov
in
cmc
sub
inc
ror
dec
int3
mov
mov
int
mov
inc
mov
jle,pt
pop
out
js
sbb
roll
jae
pop
jne
out
mov
jmp
mov
lahf
xchg
cmc
push
pop
xchg
test
mov
mov
cwtl
fs
lods
pop
xor
inc
in
dec
xor
or
adc
sbb
pusha
xchg
or
mov
imul
mull
pop
leave
xor
repz
and
mov
xor
xor
lahf
or
mov
fdivl
mov
push
jo
cmp
jecxz
xor
jnp
std
inc
sub
leave
cmp
lret
in
add
bound
ja
dec
jmp
int3
jns
andb
sarl
cmp
xchg
jae
mov
fmul
push
cmpsl
mov
mov
mov
lock
or
call
popa
clc
icebp
inc
lret
popf
xchg
jl
cld
outsl
xchg
mov
movsb
call
lock
es
xor
sbb
or
test
pop
mov
push
lds
mov
sahf
nop
xor
add
jmp
jp
movsl
sub
jge
and
and
sub
nop
shrb
cmp
fistpl
or
dec
push
insb
add
dec
lods
pop
sbb
shrb
lods
notl
mov
sub
cwtl
pop
je
ja
rclb
inc
scas
into
dec
sub
add
in
pop
mov
sbb
xor
fwait
aas
push
sbb
hlt
loopne
xor
push
cltd
lahf
jne
loop
ret
sbb
jnp
fs
call
add
insl
aas
mov
sub
xchg
nop
cmp
mov
negl
aas
push
stos
dec
data16
mov
int
sub
push
xor
inc
outsb
dec
cmp
adc
lds
push
adc
shrl
adc
cli
call
push
push
jecxz
or
out
jbe
data16
aad
aad
cmp
jle
xor
ss
push
rcl
daa
test
cmp
insb
iret
pop
xchg
xor
adc
sbb
add
into
in
outsl
in
idiv
rcrb
cltd
mov
jae
ficomps
addl
sti
int3
call
sbb
cmp
xor
rorb
mov
pop
pop
ss
in
push
pop
dec
push
fnstenv
mov
xor
add
in
xchg
sbb
bound
int
push
xor
mov
jmp
mov
sub
dec
faddp
cld
popl
push
add
inc
and
dec
pop
cwtl
test
shrl
sbb
pop
mov
dec
lcall
xor
mov
jle
mov
bound
out
lret
int3
inc
test
jb
jnp
dec
ja
out
xor
and
mov
jb
pop
in
scas
xor
jno
mov
aad
pop
into
pushf
pop
lds
leave
adc
loopne
xchg
loope
mov
roll
movsb
cmp
hlt
hlt
push
pusha
xchg
xor
inc
test
jae
fidivs
loopne
sub
mov
xor
hlt
xchg
popa
or
inc
xlat
and
pushf
mov
or
cmpsb
push
jl
adcl
data16
pop
or
movb
jl
dec
or
outsb
cmp
movsl
jnp
or
cmp
int
mov
sahf
fwait
jg
rorb
arpl
sub
js
out
mov
insl
enter
sahf
cmc
pop
mov
xor
cs
out
xchg
hlt
inc
cli
fstps
cmp
lret
mov
outsb
lahf
sbb
xor
push
dec
stc
xchg
out
mov
cmp
adcb
mov
mov
jg
dec
and
outsb
insb
inc
and
and
in
pop
jne
hlt
sub
sbb
lds
decb
mov
jecxz
inc
cmp
dec
sbb
add
ss
addr16
inc
sbb
pusha
inc
and
shlb
dec
jo
mov
fldenv
adc
adc
lcall
gs
jp
mov
pop
das
aas
jg
inc
cli
and
es
jae
push
pop
jo
push
and
jne
jns
es
add
and
cmp
sub
inc
test
pop
cli
inc
lcall
pop
pop
mov
jae
and
mov
jno
popf
popa
daa
pusha
pop
sub
push
pop
lea
stos
bound
mov
dec
mov
popa
jno
ficoms
xor
pop
cs
jbe
mov
pop
pop
dec
fwait
jge
mov
stos
lds
js
xchg
add
or
rorl
js
pushf
pusha
inc
cltd
inc
jns
mov
xor
or
negl
xor
mov
mov
push
mov
jb
lods
push
cmp
sub
adc
xchg
jmp
mov
mov
ss
sub
inc
jmp
ljmp
mov
stc
inc
sub
cmpsl
aas
cltd
mov
jge
loope
inc
loope
or
adc
lea
pushf
sub
fistpll
xchg
xor
fwait
aam
lods
adc
hlt
add
rcl
xor
fnstenv
jns
dec
inc
mov
cmp
add
cwtl
xor
fldenv
inc
out
sarb
xchg
imul
and
cmp
rolb
push
scas
xor
sub
adc
pop
add
outsl
outsb
test
sub
jbe
cwtl
loopne
jb
mov
loopne
jg
push
mov
cld
sub
int
ret
std
loope
jb
lcall
das
adcl
pop
lods
loope
add
fs
jle
icebp
jne
in
imul
jle
mov
add
scas
xchg
rorl
divb
mov
icebp
inc
and
mov
push
std
clc
and
pop
into
aad
sbb
imul
mov
xchg
or
rorl
ja
cli
pop
sbb
mov
or
inc
mov
add
dec
cltd
push
cmp
test
test
lock
mov
mov
pop
ss
xchg
negb
pop
or
sub
ss
rsm
js
lods
add
fnstcw
mov
add
das
push
jne
ja
hlt
jecxz
aam
out
xchg
rcrb
and
or
fsubr
fdivl
push
sub
aas
xor
pop
fs
sti
icebp
adc
adc
jmp
mov
xchg
out
loop
ret
xchg
sbb
test
ret
int3
sar
pop
dec
shl
push
rcll
and
adc
popa
arpl
push
out
je
lods
mov
mov
adc
jnp
add
add
cmp
orl
dec
mov
sti
aaa
xchg
dec
lea
xor
add
rolb
and
xor
pusha
sbb
ljmp
flds
or
cmp
insl
adc
push
nop
push
outsl
jp
std
enter
cmpsb
sbb
jns
out
ret
jp
and
or
mov
aas
add
add
adc
out
daa
outsb
jmp
stc
cld
mov
add
cmp
jecxz
cmpsb
aam
dec
lods
clc
pop
xchg
jo
cmp
ror
inc
test
pop
cmp
fimull
mov
mov
aad
mov
pop
mov
add
and
loopne
sbb
mov
test
jno
outsb
ret
call
pusha
insb
lods
jge
cli
ficoms
jns
loopne
dec
pop
fistpl
jg
out
hlt
cs
cmpsl
push
dec
and
jb
cli
fstpt
inc
ret
out
fimull
bound
aam
ja
inc
cmp
inc
fisttpll
add
mov
add
hlt
stos
pop
test
pop
into
and
movsb
mov
push
mov
mov
jno
push
or
inc
dec
jo
xor
cmp
sbb
pop
das
xor
dec
push
xchg
ljmp
xchg
repz
mov
xlat
lret
inc
dec
push
or
std
adc
inc
pusha
add
jp
sub
dec
pop
ret
sbb
push
inc
add
mov
jg
and
adc
pusha
xchg
hlt
cmc
xchg
stos
jp
cmp
scas
mov
adc
xchg
aas
jle
movsb
mov
pop
cmpsl
push
fldcw
test
fsubs
mov
pop
cwtl
mov
imul
dec
loopne
sbbb
jns
inc
rol
nop
fdiv
leave
cmpsb
sbb
lret
and
outsl
rcr
add
fstpt
pop
shr
push
dec
testb
xor
add
sub
outsl
lods
dec
cmpsl
addl
lret
repnz
adc
adc
xor
rcrb
ss
shr
jno
xchg
mov
cli
popf
pop
dec
mov
jb
dec
int3
jne
xchg
push
adc
lods
fidivs
or
push
addl
rcll
stc
std
rclb
repz
movsl
das
sub
fildll
adc
dec
cli
cmp
test
mov
sbb
cmp
mov
bound
inc
cltd
rcr
sbb
int
inc
and
leave
mov
fdivrs
or
mov
data16
sub
jne
xchg
inc
push
xchg
cmc
mov
ds
shll
push
dec
bound
dec
movsb
cmp
rcll
dec
pop
test
add
and
call
stos
dec
aad
jecxz
pop
in
pushf
jb
mov
iretw
icebp
imul
mov
and
push
pop
sub
lret
lret
int
mov
in
mov
fists
arpl
jmp
mov
jmp
lcall
cmpsl
lea
mov
dec
mov
icebp
out
dec
jl
imul
test
jl
cltd
mov
xlat
into
fidivl
and
mov
pop
inc
sarb
flds
popf
jne
addr16
or
inc
ficompl
stos
cld
jne
movsl
pop
xchg
adc
xor
xchg
push
sbb
jns
js
jb
movsl
daa
adc
add
jnp
or
test
add
out
aad
in
jge
data16
jne
adc
int
into
adc
lock
outsb
ret
mov
int3
mov
pop
ficoml
mov
enter
fsts
cmp
add
sbb
fbstp
cmp
inc
cmpsl
jnp
inc
repnz
mov
push
dec
push
imul
mov
cmc
jg
daa
xchg
push
cs
xlat
add
shl
std
cwtl
xchg
jmp
xor
dec
pushl
outsb
outsl
fldenv
adc
inc
orb
mov
jmp
loop
andl
in
sub
movsl
xchg
or
imul
insl
lods
inc
ss
rcr
cmp
test
ficomps
sub
jb
testl
pop
jg
loope
in
sbb
mov
inc
push
enter
push
jno
movsl
push
les
stc
inc
das
ds
enter
cmp
fs
mov
or
inc
push
imul
lret
lahf
flds
mov
adcl
movsb
sbb
or
sbb
adc
jmp
pop
adcb
call
lret
shl
mov
bts
imul
xor
xor
mov
fsubrl
mov
dec
jae
add
call
sbb
or
jo
push
sbbl
and
insl
outsb
jb
jmp
popa
sbb
mov
lods
xchg
push
jbe
mov
adc
add
or
push
push
cmp
jae
dec
in
cmp
mov
ss
ret
mov
sub
pop
call
icebp
jns
in
and
insl
push
ja
out
repz
and
cli
enter
mov
adc
or
jl
fsts
pop
loop
adc
adc
jge
adc
or
outsb
jns
push
stos
das
arpl
stos
inc
test
mov
jb
fwait
or
addr16
daa
adc
loopne
dec
pop
cmp
mov
cli
mov
xor
pop
es
dec
movsb
sub
adc
enter
lret
daa
pop
push
cmc
mov
mov
and
fdivl
xor
mov
cmp
lcall
push
jo
out
aaa
jns
pop
nop
test
jo
push
xor
jb
aad
add
fisubrl
mov
ret
cmp
sarb
pop
pop
arpl
in
jl
jne
insb
cmp
call
push
test
xchg
movb
mov
push
cld
in
cmpsb
xor
pop
ljmp
scas
test
or
xchg
and
bound
xchg
fstpt
mov
sub
movl
icebp
insb
jbe
dec
mov
xchg
pusha
xor
shl
xchg
shrb
jae
aaa
ret
mov
les
sub
lds
out
loopne
adc
cs
roll
ds
xorl
sub
or
lods
cmp
leave
rorb
aad
pop
adc
ljmp
movsb
jmp
imul
enter
mov
pop
or
aaa
insb
pushf
fsub
cmp
mov
call
js
jns
jmp
stos
aaa
lock
pop
pop
call
in
scas
mov
inc
pop
sbb
push
int
jl
inc
ret
loopne
movsb
adc
iret
push
das
daa
or
sub
add
jb
loope
mov
movups
stos
addr16
popf
out
nop
cmpsb
nop
in
shlb
notb
sub
lea
and
pop
ret
mov
dec
and
imul
adc
std
mov
lods
inc
push
mov
js
je
andb
movsl
stos
mov
pop
orl
sti
ss
and
mov
clc
ja
das
push
imul
popa
cmp
jae
lret
imull
cmp
shlb
pop
xchg
ljmp
mov
outsb
aam
and
das
repz
insb
fwait
pop
cmp
jmp
or
mov
imul
pushaw
fwait
popf
pusha
xor
sti
lock
adc
inc
loopne
add
inc
ja
xchg
ficoms
negl
insb
cli
nop
and
je
stos
jmp
test
in
jge
push
xor
cmp
fsts
dec
orb
les
mov
test
ljmp
rorl
sahf
add
and
in
sub
mov
and
inc
jecxz
jo
jne
mov
inc
mov
adc
xchg
in
mov
insl
lret
xor
out
adc
adcl
push
adc
jmp
cmpsb
popf
push
outsb
and
push
inc
and
ret
and
cwtl
jg
nop
imul
xchg
xlat
lock
cmpsb
pop
mov
in
push
test
fisubrs
jne
adc
cwtl
cmp
and
jnp
js
or
jmp
or
and
or
push
data16
sbb
leave
xor
outsl
sbb
lods
fadd
leave
sbbb
ja
arpl
scas
add
push
ret
mov
add
lcall
and
xchg
shlb
mov
inc
add
insb
push
add
cmp
add
mov
pop
jns
sbb
dec
roll
ficoml
rclb
sub
add
add
pop
dec
insb
xchg
dec
repnz
inc
cmp
cmp
pop
adc
clc
xchg
fsubrl
and
mov
popf
aaa
int
push
in
jae
jae
inc
add
sbb
sbb
and
in
je
imul
adc
jno
lock
lea
inc
xchg
pop
loop
test
pop
sub
xor
push
fs
movsb
adc
lods
mov
adc
in
aad
les
mov
dec
outsb
sbb
mov
jbe
lret
cld
loope
sbb
xor
xchg
test
sarl
fwait
inc
fists
sahf
inc
movsl
sub
pop
mov
push
push
mov
shll
adc
ljmp
jmp
pop
out
cmpsb
and
adc
xchg
xchg
int3
push
add
test
sbb
push
sbb
aad
dec
and
inc
and
inc
ljmp
push
xchg
fists
imull
inc
loop
movsl
scas
ljmp
xchg
enter
add
movsb
mov
mov
push
xor
sbb
and
or
das
mov
lea
xor
sarl
jp
fidivrs
cmp
jg
repnz
jge
xchg
mov
xor
lods
xchg
sahf
jnp
fisubrs
mov
icebp
xchg
push
mov
jmp
xchg
or
inc
push
or
jb
les
nop
insb
sub
rcl
dec
xchg
cs
sbb
leave
insl
jecxz
rorl
mov
mov
je
sbb
mov
jle
pop
aad
push
or
movsb
idivl
jo
jg
and
dec
fcoml
mov
xchg
inc
adc
and
jle
mov
mov
add
cmc
int3
decb
cmpsl
jns
push
maskmovq
out
or
addb
jb
imul
idiv
xor
js
jge
inc
into
jne
fadds
cmc
mov
cmp
sub
adc
das
push
test
sbb
iret
add
push
stos
test
insb
sub
jle
hlt
xlat
test
sbb
stos
aaa
out
cmp
fidivs
and
mov
xor
inc
jmp
push
pop
inc
pop
fldenv
scas
movl
js
mov
cld
jne
xor
cltd
or
dec
aaa
stc
roll
xchg
movsl
mov
addr16
or
xor
in
imul
mov
pop
mov
dec
rol
pusha
push
mov
jno
scas
repz
xor
jbe
pop
sbb
mov
in
lds
inc
aam
pop
ja
sub
push
pop
sub
fbld
bound
mov
mov
jne
psrld
and
into
mov
xchg
lcall
clc
push
sbb
or
imul
and
adc
and
aam
loope
stos
sti
fstl
adc
loope
or
pop
loop
lahf
jmp
jge
cmp
lret
jne
mov
fwait
inc
sbb
stc
xchg
lods
clc
notb
sub
jle
mov
mov
test
mov
xchg
sbb
fildll
jg
imul
inc
subb
aas
mov
jb
shll
pop
pop
mov
sbb
mov
sbb
add
xchg
arpl
es
cmpsl
fidivl
out
and
sub
outsb
mov
jp
cs
mov
pop
xchg
out
mov
pushf
ret
cmc
in
xor
das
sub
inc
es
mov
movsb
sbb
mov
add
movsb
cmp
scas
cltd
in
loopne
push
ret
or
decb
addr16
mov
loope
aam
insb
out
stos
je
fsts
add
movsl
sbb
push
aaa
les
inc
xchg
mov
xor
in
std
add
fwait
inc
pop
cs
and
xor
addb
cli
or
mov
jecxz
stc
lret
pop
or
cmp
movsb
sbb
pxor
mov
fs
inc
sbb
movsl
sbb
les
out
or
inc
sbb
lock
pusha
scas
fisubrl
mov
call
mov
push
pusha
mov
add
jle
push
shrb
test
dec
out
nop
daa
bound
loop
xor
adc
pop
sub
or
mov
faddl
jl
icebp
rcll
sub
xchg
adc
scas
dec
shl
ja
pop
cmpsb
mov
in
es
sbb
pop
xchg
mov
inc
add
pushl
and
add
adc
inc
and
dec
lods
lock
adc
jle
dec
adc
mov
sub
aaa
lret
push
sub
fs
shr
daa
pop
jmp
inc
sar
push
lcall
scas
push
cmp
test
mov
int
out
pop
loopne
jle
add
shlb
or
mov
cwtl
add
in
jne
push
sub
imul
xchg
fs
shlb
outsl
test
jl
push
clc
mov
mov
or
mov
push
or
mov
test
cmp
jne
mov
mov
xchg
xlat
pop
call
stos
sbb
jp
lahf
pop
aas
sub
mov
sbb
mov
jmp
sahf
es
sub
add
iret
negb
dec
mov
lea
push
mov
lcall
sbb
sub
les
cmp
testl
out
mov
loopnew
dec
insb
sub
in
mov
sbb
lea
fidivs
xor
popa
in
xor
out
inc
fs
fcoml
nop
push
je
out
js
arpl
ljmp
dec
popf
movsl
dec
pop
xchg
dec
not
pop
add
mov
lahf
idiv
jae
out
sbb
push
clc
sbb
mov
push
int3
or
add
jmp
sbb
test
pop
je
xor
cmpsb
jp
out
xchg
mov
adcl
cmpsb
add
sub
pop
scas
jecxz
push
and
dec
inc
push
jg
cwtl
pushl
dec
xchg
out
sbb
cmp
mov
and
jmp
dec
pop
jmp
mov
sbb
mov
add
or
ja
pop
cmp
inc
and
mov
ja
jmp
cs
jmp
insl
sarl
test
shlb
lods
xacquire
adc
jle
sub
iret
out
outsl
xchg
mov
push
adc
sbb
fsubr
dec
dec
xor
xchg
xor
cmpsb
enter
xchg
imul
dec
enter
shrl
or
test
inc
jmp
outsl
mov
and
stc
popa
cmp
loope
add
stos
iret
dec
test
fisubrl
dec
mov
cmp
xchg
and
fwait
out
lea
xorl
cmpsb
adc
out
push
add
mov
xchg
jl
fcomps
xor
popa
xchg
inc
sub
mov
pusha
pushf
pop
popa
dec
sahf
adc
sbb
dec
fstpl
lods
pop
aas
aaa
ds
sarb
pop
leave
dec
cmp
pop
jg
push
andl
pop
sub
or
rolb
sahf
cmpsl
imul
out
mov
int
fdivrl
mov
data16
fwait
push
test
mov
loop
dec
jl
rcl
sbb
mov
rcll
xor
xor
imul
pop
mov
mov
mov
sbb
movsl
mov
lret
adc
sub
pop
dec
adc
inc
bound
cmc
adc
xchg
mov
pusha
adcl
mov
pop
push
mov
test
jae
mov
xchg
enter
push
jo
pushf
jp
sahf
push
cmp
lock
test
arpl
xor
cmp
in
pop
fdiv
jo
mov
std
add
sub
sbb
int3
jnp
out
movsb
and
jb
gs
insl
mov
mov
and
test
push
inc
jmp
lods
loop
dec
jmp
bound
cmp
bound
pop
sbb
jle
cmc
lock
mov
push
pop
loop
add
outsb
sbb
sub
mov
repnz
cmp
jge
test
xchg
movsb
xchg
dec
jae
inc
jge
mov
sti
jl
mov
insl
test
inc
cs
js
jbe
mov
loop
cmc
or
push
jne
mov
clc
push
adc
xchg
jmp
addl
fists
ret
or
lods
aaa
jo
jae
inc
jb
jns
push
cmp
cmp
in
shll
pusha
pop
adcb
shrl
cmc
and
pop
aam
fdivs
push
pop
imul
jle
inc
and
push
pop
rcl
fimuls
ret
mov
lock
lret
rorb
incl
clc
fnsave
arpl
jg
inc
dec
mov
shrb
std
cld
pop
sbb
dec
add
dec
rorb
aaa
inc
ret
stos
push
cmpsb
test
dec
sti
jne
out
pop
addb
sub
push
and
sbb
test
add
push
xchg
xor
scas
sbbb
lea
stos
popf
sub
adc
roll
lret
cltd
mov
xchg
sub
cmc
add
add
jle
dec
dec
mov
dec
aaa
push
aaa
out
jge
fs
insl
lods
sti
jns,pn
daa
insl
push
push
mov
xchg
jnp
jge
adc
bound
lret
inc
sub
fisttps
xor
pusha
or
lret
mov
adc
idivb
sub
loop
gs
push
sub
inc
mov
ret
ror
push
mov
pusha
pop
jo
lds
loope
rcrl
inc
mov
arpl
ja
cmpl
js
std
sub
cltd
rolb
push
xchg
add
add
fidivs
push
inc
clc
mov
ljmp
call
mov
mov
sbb
test
and
rclb
mov
nop
pop
les
and
xor
ss
and
out
ret
add
adcb
inc
inc
cmp
xchg
fdiv
lods
add
iret
aam
fisubs
jmp
lahf
or
loop
scas
js
cmp
adc
into
xor
mov
cmc
inc
mov
or
sub
mov
lret
ds
push
jl
int
inc
fldl
pop
adcb
fisubl
jl
in
inc
fmul
push
cmovo
mov
in
gs
scas
or
fstpt
push
arpl
sbb
mov
push
xchg
mov
xchg
inc
es
sbb
and
jo
insl
push
cmp
aam
adc
call
push
int
mov
addr16
inc
jge
dec
add
push
dec
or
and
mov
lahf
add
mov
lock
sub
shlb
adc
pop
mov
mov
adc
movsl
sub
out
push
or
xchg
cmc
pop
cltd
sub
aam
lods
out
jne
fidivl
loopne
cmp
lahf
mov
test
or
rcll
insl
test
enter
and
push
pop
divb
mov
sub
iret
divl
jns
mov
mov
cmp
ljmp
ljmp
add
inc
lret
jnp
adc
xchg
pop
lret
clc
xchg
push
dec
mov
pop
xchg
je
xor
fcoms
mov
mov
push
repz
xchg
adc
sbb
mov
mov
sarl
testb
dec
inc
push
xchg
adc
dec
pop
adc
inc
pop
pop
mov
scas
xor
ret
jbe
or
or
mov
pop
arpl
repnz
cmc
xchg
jb
mov
pop
sbb
mov
jae
cmpsb
sarl
xor
lea
or
jmp
cmpsb
jp
fildl
push
arpl
out
negl
jle
insb
fsubl
ja
int
cli
sbb
clc
adc
pop
fdivrs
roll
cwtl
loop
movsl
sub
push
mov
inc
cvtps2pd
or
cltd
iret
add
bound
in
js
xchg
hlt
jnp
cli
xor
cmp
inc
pop
cli
jns
mov
call
inc
bound
adc
pushf
push
scas
rcrl
adc
push
push
mov
not
pop
inc
pop
in
mov
mov
mov
shlb
dec
outsl
fs
js
loop
pop
and
incl
aaa
stos
mov
cmp
mov
jge
leave
fs
cmp
sub
rol
mov
jmp
es
dec
hlt
sub
or
mov
enter
aad
sbb
xchg
sti
jl
cmpsb
dec
mov
add
mov
inc
stc
jl
pop
add
aad
mov
subl
mul
rorb
sbb
inc
orb
imul
cmp
lods
lahf
ret
sub
dec
loop
mov
imul
xor
xchg
and
rorb
and
adc
bound
mov
hlt
es
push
dec
js
movsl
cs
adc
jae
scas
inc
lahf
je
sub
push
and
adc
sbb
iret
push
jmp
inc
gs
sbb
lods
cwtl
jle
adc
inc
inc
lahf
push
inc
sbb
dec
icebp
pop
popa
xor
and
xchg
cmp
ret
jno
sub
lret
stos
aas
imul
inc
int
mov
mov
mov
xchg
addl
xchg
pop
push
cmp
cmpsb
fst
cmp
sub
and
cmp
aam
add
mov
sbb
out
push
cmpsb
lea
mov
scas
mov
mov
push
inc
popa
idivl
imul
or
lcall
sahf
adc
pushf
mov
mov
jp
pop
add
add
cs
sti
and
sub
xor
test
jnp
inc
int
sqrtps
add
and
ret
repz
les
clc
les
and
and
cmp
mov
ljmp
cmp
pop
outsl
ja
shrb
jle
cmp
repnz
xor
out
inc
adc
shlb
pop
jg
xchg
push
jno
pop
into
sub
push
xchg
daa
inc
and
loope
fsubr
cmp
dec
lods
xor
jno
lods
fwait
int
lret
jno
or
add
mov
mov
icebp
cmp
mov
enter
fbld
mov
push
adc
jmp
shll
push
xchg
fmuls
inc
jl
scas
rcl
mov
sar
mov
addr16
pop
push
cmp
in
ss
insl
sbb
mov
rclb
insb
push
dec
fisubl
sbbb
das
aaa
pop
mov
in
fucom
shll
xchg
and
clc
sub
add
loope
rol
pop
push
mov
in
mov
lcall
clc
jns
xchg
mov
mov
push
pop
pop
sti
inc
cwtl
jb
mov
mov
cmp
adc
xchg
jg
stc
shlb
xchg
incl
or
xor
adc
inc
dec
inc
sub
imul
jg
out
inc
mov
mov
jo
jns
es
mov
pop
add
jb
sbb
bound
adc
mov
adc
iret
cmpsl
sti
sti
xor
cmp
js
push
rcr
inc
test
and
aaa
ret
bound
je
imul
jo
and
pop
pop
mov
rcrl
adc
inc
cli
jp
leave
out
and
nop
jle
push
pop
and
jb
add
adc
jae
ret
cmp
lea
out
pop
rcl
pop
es
mov
inc
pop
jno
aad
out
add
lahf
or
pop
and
cmpsl
lock
ljmp
fists
in
jmp
jle
das
mov
pop
out
ss
mov
add
mov
push
adc
push
pop
jge
xchg
scas
call
push
xlat
or
add
add
mov
xor
push
push
push
movsl
mov
ds
xchg
add
xor
inc
fnstenv
or
sti
push
or
into
adcl
push
lods
incb
push
mov
inc
xchg
sub
jl
cmp
stos
imul
jne
rcr
adc
test
xor
jo
shr
or
sarb
pop
enter
out
cmpsb
mov
mov
lock
or
cmp
stos
push
clc
dec
jle
xor
push
mov
hlt
jne
jg
and
jg
xchg
loopne
adc
sbb
push
cmp
jmp
lock
jae
lahf
stos
bound
jae
fcompl
pop
imul
xor
gs
out
dec
scas
cmp
dec
mov
mov
mov
cmp
repz
call
fcomp
in
call
rclb
imul
aad
jne
fsub
test
inc
sbb
fs
decl
mov
dec
mov
inc
cli
psrlw
sbb
shrl
loope
push
addl
or
shlb
outsl
sbb
movsl
je
clc
gs
hlt
pop
adc
out
sub
mov
lret
fmul
mov
fninit
outsb
imull
imul
aad
std
adc
jmp
inc
mov
xchg
addr16
loopne
jmp
pop
jecxz
neg
cs
pop
cmp
mov
or
jae
mov
mov
loopne
cltd
pusha
adc
mov
jle
adc
insl
in
sub
adc
loop
repz
bound
out
subl
popf
adc
leave
jne
sub
push
add
shlb
xchg
ds
hlt
push
jne
out
adc
shlb
and
jne
or
call
movsl
jns
insl
jecxz
sub
stos
cli
and
in
mov
sbb
xchg
cmp
insb
cmp
jl
add
adc
roll
ret
sub
ret
iret
mov
cs
sbb
cld
aas
jb
shlb
push
pusha
jle
mov
mov
push
xchg
or
imul
test
push
xchg
mov
inc
jmp
mov
fisubrl
cwtl
push
js
out
test
mov
cmp
jae
ret
and
das
scas
aaa
dec
mov
push
adc
in
in
dec
fwait
push
mov
pop
fs
inc
nop
arpl
jl
add
fisttpll
push
ljmp
mov
test
popf
in
mov
imul
mov
jge
inc
inc
jp
inc
xor
pusha
int3
lahf
inc
test
xor
jne
ljmp
fimuls
fwait
mov
cmc
add
and
int3
nop
aaa
outsl
pop
in
xorl
insl
mov
cmpsb
fmull
inc
sbb
loopne
sbb
and
iret
fldl
popf
fadds
iret
or
in
add
pop
sbb
dec
mov
fs
int3
sti
or
mov
repz
lret
inc
stos
enter
mov
into
adc
mov
bswap
add
mov
sub
gs
sbb
pushl
pop
lcall
insl
loopne
je
mov
sbb
pop
loope
ret
pop
pop
nop
sahf
inc
jbe
gs
sub
dec
mov
pop
or
jle
testb
cwtl
nop
popa
pop
mov
xor
xor
ud0
aas
xchg
mov
fs
sarb
xor
mov
add
xor
jo
cmp
out
mov
stos
in
push
addb
mov
inc
xchg
jge
pop
icebp
push
int
dec
sbb
and
xchg
call
sub
xorb
ss
fcomp
ss
mov
lods
dec
inc
clc
push
mov
dec
stos
fstl
les
icebp
outsl
inc
or
ss
in
les
or
aaa
push
and
movsb
sahf
clc
les
fldl2t
xorb
cli
xor
jmp
aam
outsl
jbe
cmp
fisubs
sub
push
insl
leave
mov
cld
mov
push
stc
xlat
jns
cmp
pshufw
ss
mov
jp
in
lret
add
scas
sar
pop
push
push
sub
ljmp
push
and
inc
and
call
pop
sub
cmp
subb
dec
in
pop
or
ficoml
cmc
cmpsl
ds
rcr
xchg
add
jns
call
push
notb
mov
lret
or
cmp
cmp
fcoms
xor
ja
mov
lcall
fsubr
test
call
jp
cs
pop
outsl
xor
fimull
sub
lret
jns
pop
mov
ret
xchg
mov
mov
cmpsb
or
call
arpl
or
jl
imul
rcrl
xadd
xchg
adc
pop
icebp
jns
sub
loop
pop
xlat
dec
add
in
mov
in
loop
mov
push
xor
lods
sbb
gs
or
mov
jb
lock
xchg
sbb
fbld
into
pusha
cmp
shlb
dec
fwait
test
inc
andb
aas
stos
mov
sbb
pop
repnz
sbbl
icebp
cmp
push
lea
add
loopne
mov
adc
insb
ds
mov
ja
inc
cli
mov
or
inc
in
insb
xchg
cli
outsb
in
fwait
xlat
push
and
push
pop
imulb
jno
sub
push
dec
stos
push
das
mov
dec
xor
xor
mov
dec
in
push
outsl
aad
xor
mov
dec
imul
push
int
mov
aaa
rcll
jo
xor
cmp
xchg
dec
adc
arpl
and
inc
pop
std
jae
lods
fld
xor
rcl
push
mov
pop
push
nop
enter
jmp
fcmove
inc
sbb
lret
bound
fmuls
dec
pop
lahf
jg
xor
mov
xchg
leave
push
pop
jne
fst
adc
ss
pop
shll
fmuls
push
sbb
dec
lock
xor
sbb
enter
dec
aad
cli
mov
sbb
sub
or
xchg
xor
lods
outsl
lea
jge
ljmp
out
xor
in
cmp
jne
mov
xchg
push
stos
call
mov
test
pop
xorb
sti
outsb
jp
mov
in
loope
jg
cmpsl
in
dec
push
xchg
push
cmp
mov
jns
adcb
pop
mov
leave
loope
xchg
xchg
leave
sahf
mov
cmp
sub
push
rorb
dec
mov
iret
and
mov
add
xchg
test
mov
lcall
cwtl
loop
test
pop
test
xlat
adc
push
adc
fsts
push
xchg
mov
sub
bound
or
mov
inc
xor
cmpsl
sahf
adc
cs
lods
pop
leave
push
and
jecxz
jns
xor
pop
inc
fs
ffreep
subl
and
pop
cltd
push
fnstsw
mov
scas
inc
jns
ljmp
pop
mov
mov
sbb
leave
insl
cmpsl
rorl
inc
xor
sarb
stc
adc
inc
jle
cltd
in
pop
mov
and
movsb
and
test
mov
pop
sub
pop
lds
outsl
jg
insb
ss
imul
or
pusha
or
and
mov
insl
push
mov
roll
dec
dec
into
mov
or
or
cmp
adc
fcompl
mov
and
ret
loop
pop
jle
inc
mov
mov
push
test
fistpl
adc
mov
sbb
adc
cmp
outsb
outsb
add
dec
pop
fsubrl
pop
sub
lods
insl
mov
sbb
sahf
ljmp
mov
js
fldt
inc
lcall
push
sub
add
inc
popf
or
movb
mov
pop
mov
hlt
inc
dec
ret
jl
jnp
xor
adc
xor
sub
pop
cmp
sarl
mov
xchg
aas
push
xor
mov
sbb
imul
fimuls
lods
insl
pop
and
aam
test
jae
dec
pop
popf
inc
dec
push
jg
add
mov
and
lods
xchg
dec
es
addb
scas
aad
adc
xor
in
mov
cmp
jno
mov
sti
mov
dec
or
imul
mov
hlt
imul
popf
xchg
rolb
addr16
lret
mov
mov
movsb
arpl
jo,pn
aas
mov
hlt
cmp
mov
push
lods
loopne
mov
leave
mov
add
out
sub
push
dec
mov
addb
popf
pop
xor
mov
arpl
fidivrl
mov
addr16
popf
pop
into
sbb
jmp
mov
lret
push
inc
add
rclb
stos
sub
xorb
or
pop
mov
jo
mov
data16
lret
aam
xchg
adc
mov
sub
sbbb
testb
stc
mov
clc
call
xchg
test
leave
lret
addr16
push
pop
in
es
leave
stos
push
ds
pop
cmp
outsl
int3
or
dec
ffree
mov
sbb
xchg
cmp
push
shrb
pop
mov
es
fs
icebp
sub
mov
pop
enter
xor
mov
push
push
daa
inc
jp
xor
lret
jo
inc
ret
mov
repz
or
jecxz
hlt
adc
lds
mov
insl
out
mov
adc
out
push
rclb
adc
and
mov
loop
in
jae
jecxz
dec
insl
jo
das
adc
repz
pop
push
js
lret
xchg
and
out
outsb
xor
into
adc
leave
dec
into
cltd
std
push
inc
lea
xchg
lds
aam
mov
lds
into
iret
push
lcall
dec
pop
adc
and
repz
cld
fisttpl
inc
out
iret
add
push
cli
insl
repnz
daa
cli
or
bound
push
aaa
xor
jb
adc
mov
push
mov
pop
mov
ret
repnz
cmp
std
fldt
gs
jo
sbb
inc
cld
loop
pop
mov
adc
pop
inc
pop
outsl
jle
push
push
aam
fstpt
jae
bnd
jnp
and
jo
lods
es
int3
shl
and
add
push
and
add
cs
lret
pushf
or
jnp
shlb
stos
pop
add
pusha
adc
out
and
retw
mov
add
mov
insl
adc
aas
sbb
mov
cmc
lock
imul
sahf
out
xor
sub
fnsave
mov
add
lcall
jb
xor
mov
adc
jns
mov
aas
scas
xchg
adc
ja
sbb
outsb
in
shr
cmp
push
test
pinsrw
inc
nop
push
ret
call
stos
pop
and
std
xlat
adc
outsl
lcall
xchg
push
in
mov
jne
push
pop
xorl
mov
out
idiv
fbld
push
ror
cmp
xchg
fs
inc
cmp
mov
mov
mov
stos
mov
mov
std
cmp
rolb
mov
call
dec
mov
roll
movl
mov
cwtl
sub
shll
and
add
lods
xchg
das
sarb
pop
cwtl
adc
outsl
nop
jo
pop
and
lret
fisubrs
mov
push
mov
addl
test
sbb
adc
movsb
mov
pop
gs
repnz
icebp
dec
popa
mov
xor
psrlw
fnstsw
mov
je
mov
ret
xchg
sarb
subl
dec
pop
jb
call
sub
lahf
leave
nop
mov
sbb
lock
fdivr
rdtsc
pop
mov
cltd
inc
div
decb
lods
enter
push
jge
dec
cmp
and
dec
rcrl
nop
sbb
loope,pn
aad
adc
cmp
dec
mov
sub
sub
dec
stos
mov
mov
or
call
lret
shll
xor
sub
or
outsl
test
sub
add
xor
rorb
push
xchg
jbe
call
outsb
inc
enter
pop
and
out
int
mov
out
cmp
idivl
mov
out
sub
ficompl
test
loopne
push
movsl
pop
mov
jb
leave
fst
jecxz
stos
addr16
sub
xchg
mov
out
out
cld
mov
inc
push
mov
sub
shll
add
sbb
ljmp
shll
adc
imul
ss
adc
nop
pusha
fwait
jb
mov
xchg
movsb
jecxz
aas
xor
test
jnp
scas
adc
mov
pop
add
in
push
xchg
les
dec
push
into
faddl
xchg
cmpsb
fnstcw
adc
cmp
jge
pop
loop
in
add
xchg
cld
and
ror
sbb
fcmove
pop
inc
add
or
fs
mov
cmp
adc
mov
gs
es
pop
stos
jl
mov
bound
lret
rcrb
sahf
pushf
cmp
xchg
xchg
popf
cmp
sub
jno
test
add
add
iret
cmp
mov
arpl
adc
cltd
xchg
ja
jge
xchg
cmc
or
fsubrs
cli
cli
dec
inc
fstl
js
add
cmpsl
fwait
xchg
xchg
test
push
jns
mov
push
out
scas
push
test
fbstp
sbb
fisttps
cwtl
out
les
dec
mov
jmp
sbb
mov
push
es
push
icebp
mov
rclb
mov
or
cld
sbb
stos
pop
js
test
mov
cvtpi2ps
lock
adc
pusha
jecxz
repz
int3
or
pop
icebp
pop
jno
pop
repnz
dec
push
pop
sbb
xchg
cmp
inc
pop
mov
jecxz
lcall
jne
add
repnz
add
sbb
jae
add
and
and
or
lahf
xorl
aaa
mov
inc
jge
loop
loope
cld
sbb
mov
mov
mov
cwtl
ljmp
stos
dec
pushf
shll
test
out
fs
dec
or
pop
or
inc
shrb
cmp
aas
shl
aam
cmc
rorl
les
mov
mov
rcrl
lods
sub
jmp
push
xchg
lds
lret
frstor
cmp
xchg
rolb
bound
incb
push
movsb
ror
imull
fcoms
cli
xchg
push
mov
icebp
pusha
pop
addr16
data16
inc
mov
and
sub
push
cmp
adc
lret
ja
add
xchg
fcomi
xorb
aas
sub
fdivrl
xchg
jle
jae
inc
pop
fmul
movsb
out
js
cmpsl
jge
sub
call
or
jge
xlat
pushf
sbb
int
or
sbb
mov
sti
rorb
add
cli
dec
mov
xchg
test
fcompl
push
ds
xchg
mov
push
dec
fstp
cltd
push
add
cmpsb
fs
test
ret
and
mov
mov
aad
jmp
pop
int
insb
insl
and
dec
pop
and
cmpsl
in
mov
sbb
pop
sbb
shrb
insb
jle
mov
adc
dec
pop
sar
lods
in
push
xor
adc
repnz
add
dec
xchg
rcll
cmp
in
sbb
arpl
inc
fidivrs
cmpsb
mov
test
cmp
dec
mov
and
js
and
push
jge
add
std
dec
push
ret
mov
or
loopne
sub
lods
sub
inc
test
leave
mov
mov
pop
repnz
mov
pop
mov
lea
fwait
into
mov
bound
lea
inc
cwtl
divl
push
out
inc
int3
jae
push
mov
mov
mov
fiadds
jb
imul
dec
mov
inc
leave
andb
push
pop
lahf
sub
and
imul
push
outsl
scas
sub
pop
xchg
movsb
and
and
pop
and
imul
jno
lret
xchg
adc
jge
jae
inc
adc
and
sbb
xchg
inc
adc
cltd
sbb
lods
sbb
call
outsl
pop
adc
pop
mov
fxch
sub
aas
lods
xor
stc
cmp
fidivrl
xchg
les
jg
mov
std
sub
xchg
mov
loope
ja
sbb
cmc
loope
xchg
dec
or
mov
in
xor
pop
adc
popl
or
pop
dec
outsb
jmp
pop
pusha
lahf
insb
les
ds
inc
xchg
adc
scas
cmp
adc
add
sahf
les
jns
es
inc
into
loope
inc
iret
cmpsl
out
push
outsb
setno
jp
xor
sbb
sarb
sub
fwait
mov
mov
sti
push
test
repz
std
movsb
add
out
lret
imul
xchg
push
mov
pop
testl
sti
and
add
cltd
fwait
mov
mov
jb
sbb
push
nop
mov
pop
jo
into
aad
in
pop
xchg
dec
sbb
mov
movsl
jg
and
adc
mov
ret
hlt
pusha
jg
pmuludq
xlat
sbb
outsl
pusha
icebp
push
iret
outsl
adc
movsb
lods
js
pushf
xor
pop
ljmp
adc
test
mov
cli
gs
mov
loope
mov
cmpsb
cmp
dec
xchg
or
jmp
lock
sbb
or
add
stc
aad
adc
dec
sgdtl
enter
add
in
inc
mov
jp
sbb
dec
daa
add
je
sub
sbbb
lea
aam
fistpll
jge
stos
or
xchg
into
clc
jnp
dec
maxps
xchg
push
lret
rcll
lret
movsb
xchg
rorl
push
imul
repnz
andb
and
push
dec
lods
jns
mov
add
and
jmp
push
stos
leave
jmp
add
adc
cmp
mov
add
je
sarb
popf
adc
mov
mov
mov
inc
mov
int3
mov
loope
shl
push
cmp
stos
gs
loop
pop
pop
xor
loop
sbb
mov
fs
ljmp
or
push
insb
pop
out
sbb
jge
dec
mov
outsl
cmc
adc
add
cmpb
test
add
push
sbb
stos
xor
lret
xchg
push
lods
add
adc
xchg
add
clc
pusha
jmp
loopne
adc
push
mov
outsl
test
fistl
mov
mov
and
daa
pushf
sub
and
xchg
lret
xchg
cmp
stos
test
xchg
pop
cmp
jno
pop
std
fabs
scas
kmovd
cmpb
lods
test
nopl
imul
inc
les
out
testl
pop
xorl
movsb
outsl
sarl
lret
xchg
aas
sbb
mov
outsl
or
cmp
std
pop
adc
mov
icebp
mov
sub
push
cwtl
sti
scas
cmp
les
hlt
mov
jo
mov
fwait
pop
sti
mov
jo
mov
call
divb
in
aad
cwtl
xchg
test
push
into
shrb
out
insb
pop
inc
push
fmuls
push
sbb
mov
lods
ja
notl
into
out
aad
jne
test
fs
icebp
loopne
push
mov
mov
adc
lea
push
jns
xchg
cmp
push
into
inc
jp
cwtl
xchg
add
lahf
cmpsb
lods
int
adc
sub
mov
mov
inc
js
xchg
mov
and
in
ficompl
mov
and
dec
aam
movsb
xchg
push
push
subb
inc
pop
int3
mov
pop
sbb
mov
add
add
xor
mov
sbb
cmpb
pop
sbb
mov
dec
cmp
inc
mov
jns
dec
pop
push
pop
inc
sub
test
jp
fidivrs
add
push
iret
int3
icebp
in
push
or
and
push
loopne
mov
sbb
push
xor
dec
shlb
sub
imul
sbb
xor
fildll
jns
out
mov
hlt
rclb
cmp
cli
jecxz
add
int
mov
dec
push
leave
mov
test
insb
repz
mov
sub
in
mov
and
jb
filds
push
mov
jmp
ret
xor
mov
pop
cs
xchg
lret
clc
outsb
adc
lods
icebp
clc
pop
gs
push
sbb
mov
jl
das
in
sub
rcr
in
push
and
loopne
push
adc
and
jne
lea
stos
xchg
jns
cmp
popf
sub
mov
fnstenv
mov
cltd
loope
dec
or
mov
jns
pop
cs
repnz
push
shrb
xor
dec
sbbb
pop
addl
repz
and
cmp
out
gs
inc
lahf
inc
stc
ja
or
dec
icebp
or
adc
add
mov
xor
push
mov
jae
push
cmp
sbb
and
adc
jo
mov
jp
mov
jp
pop
scas
ljmp
mov
cmp
pop
dec
je
dec
or
dec
cld
test
rolb
push
out
pop
push
dec
pop
add
pop
int3
je
lods
mov
xor
xchg
inc
call
cmpsb
repnz
push
repz
mov
push
fidivrl
insl
arpl
jg
incl
and
popa
push
lahf
cmp
ja
fcoml
into
js
xor
enter
lods
outsb
pop
jns
mov
popa
sahf
cmp
ljmp
adc
outsb
stc
arpl
fidivl
inc
cmp
jo
pop
insl
jmp
hlt
mov
mov
test
in
mov
mov
jnp
fdivrs
sub
xor
push
and
cld
ja
xchg
or
lcall
test
pop
inc
fisttpll
popf
mov
loopne
pop
insb
push
cmp
cmpl
ret
mov
push
jne
inc
into
fs
push
inc
jl
push
shll
rorb
xchg
add
das
xlat
mov
mov
popa
jbe
insl
dec
dec
dec
jno
push
pop
movb
mov
xchg
movsb
scas
js
add
xchg
xor
add
pop
and
and
daa
aaa
scas
xchg
daa
mov
mov
jns
ret
pop
ss
stos
shrl
push
fwait
push
cwtl
mov
xchg
mov
cmp
jl
push
pop
xchg
jne
clc
sub
lea
jnp
lcall
inc
mov
mov
mov
lret
cmp
fistpl
decl
and
add
pop
pop
xchg
movsb
neg
dec
mov
in
sarl
in
push
addr16
fldenv
sbb
lds
mov
jns
cmp
add
sub
shlb
dec
aam
xchg
sub
add
jne
cmp
or
pusha
fstps
ret
in
pop
lret
mov
mov
outsb
shrb
sub
nop
iret
imul
jae
cmpsb
and
cld
xchg
jmp
mov
pop
lods
shll
cmp
cmp
jo
sub
jnp
xor
loop
fldl
ja
add
in
or
jecxz
iret
cmc
jne
sbb
mov
dec
mov
add
test
iret
sbb
dec
xchg
fisubrs
cld
mov
and
cmp
call
push
jbe
cwtl
ss
sbbb
xchg
jbe
sbb
inc
fisubrs
add
cli
cmp
xchg
hlt
sbb
jns
pop
daa
lock
push
stc
and
jg
outsl
cli
icebp
push
fucomi
jno
mov
xchg
mov
inc
data16
imul
push
jnp
jmp
std
lock
les
sub
add
int
int3
fxam
push
cmp
ds
jp
jecxz
cli
or
xor
adcl
or
addr16
push
aas
xchg
add
mov
mov
shrb
repz
aam
aas
xor
mov
push
cmp
ljmp
push
adc
push
decb
movsl
shlb
stos
jg
pop
in
adc
jno
lret
fmulp
add
sti
push
insl
into
and
pop
push
push
push
test
ret
sub
add
jp
pop
andb
mov
push
divps
ficoml
loop
repnz
mov
popf
popa
jne
xor
push
mov
mov
mov
push
pop
out
iret
inc
mov
hlt
or
sahf
dec
call
mov
xchg
gs
scas
rcl
sti
test
testl
xchg
inc
rclb
push
bswap
xor
mov
inc
mov
mov
in
scas
xor
adc
lods
fbld
cmpsb
jle
lods
fidivl
sti
jmp
aas
clc
into
jo
push
lods
dec
xchg
cli
lret
push
add
xchg
jecxz
jmp
imul
or
inc
fwait
xor
dec
mov
sub
pop
stos
inc
jbe
sub
cmpsb
sbb
fldl
push
mov
jge
repnz
and
outsb
jg
xor
outsb
cwtl
fstps
ret
repz
loopne
arpl
inc
push
xchg
push
ljmp
orb
ljmp
loop
test
inc
cmpsb
pop
xchg
sbb
push
cmc
movsl
leave
fildl
cmpsb
pop
sub
cmp
dec
int
mov
es
rcrb
push
xor
mov
stos
scas
popa
outsb
xchg
imul
cmp
nop
cwtl
insb
das
mov
int
mov
mov
sahf
cmp
xchg
or
mov
out
adc
negl
mov
sbb
pushf
testl
jge
pop
pslld
out
mov
pop
jae
mov
mov
inc
sarb
inc
push
movsb
jmp
pop
push
pop
add
js
aad
lahf
lea
push
out
mov
cmp
adc
sub
ljmp
shll
dec
push
jo
xchg
xor
mov
jnp
cmp
xor
shll
mov
jg
mov
loop
pop
imul
cmc
out
mov
push
fldcw
mov
mov
adc
jae
negl
inc
shrl
mov
pop
test
repz
pop
jl
pop
push
push
jno
cltd
nop
inc
jno
pmulhrsw
cmpsl
adc
test
cltd
pop
push
xor
icebp
ja
xchg
mov
push
xrelease
mov
loop
jmp
lret
ss
lea
jl
rcrb
outsl
jb
xchg
in
cltd
pop
push
mov
fidivrs
fstps
sbb
or
mov
xor
mov
fidivrs
adc
pop
call
mov
in
push
rol
xlat
pusha
test
hlt
mov
adc
mov
cwtl
and
inc
ljmp
lahf
loopne
push
pushf
out
clc
cmp
lret
loop
popa
iret
outsl
test
stc
insb
push
xor
gs
pusha
cmc
adc
push
loop
cld
dec
xor
cmp
sub
cmc
je
lahf
pop
dec
repnz
cld
das
mov
fcmovb
out
jbe
mov
test
xchg
sub
mov
push
sbb
int
shlb
jae
nop
lods
out
cltd
and
push
inc
pop
jge
in
int3
fstps
inc
mov
xchg
jmp
dec
ja
add
test
mov
xchg
iret
pop
lret
adc
jae
rcrl
fidivl
ljmp
add
sub
pop
scas
and
and
cmp
xchg
sbb
pushf
cmp
xchg
decl
xchg
sub
in
mov
mov
ret
scas
and
inc
mov
inc
addr16
enter
jno
callw
dec
push
std
inc
and
rolb
test
clc
aaa
popf
popa
aaa
inc
dec
adc
notb
ficoms
pop
into
aaa
fs
fdivs
or
pop
xchg
hlt
adc
pop
icebp
lods
inc
cltd
hlt
mov
sub
adc
stos
into
adc
jnp
stos
mov
mov
mov
xchg
jne
test
pop
sbb
pop
es
jo
pop
cmp
fcomp
aad
sub
insl
bnd
add
inc
mov
ficompl
pop
mov
fstps
loopne
leave
push
call
fwait
into
or
cmp
adc
int3
testl
inc
int3
call
xchg
je
xchg
popf
jns
scas
inc
push
lds
jge
lret
in
jae
repz
int
mov
divl
clc
je
ja
cmpsl
jg
pop
and
inc
js
jbe
or
mov
mov
pushf
cmp
fs
mov
add
push
rcl
xchg
jo
movsb
mov
lock
test
nop
int3
movsl
xchg
mov
data16
pop
pop
and
or
out
or
and
shlb
sub
xor
shrb
shl
jae
mov
es
and
nop
xchg
xor
mov
xor
or
push
or
and
int3
jmp
and
sbb
push
dec
pop
imul
inc
shlb
mov
push
popa
shlb
or
cltd
sbb
movl
test
mov
sbb
dec
fdivrl
and
fisubs
push
mov
daa
push
enter
out
addl
ja
scas
popf
loope
nop
jo
pop
imul
jecxz
rclb
xchg
xchg
inc
inc
mov
cmp
mov
roll
aaa
jl
popa
loopne
adc
lahf
xor
pop
in
mov
push
push
xorb
int
jae
inc
repz
sbb
popf
push
jle
mov
ret
mov
mov
inc
add
scas
or
ret
push
call
xchg
mov
outsl
jo
movsl
lar
pop
and
xor
adc
mov
dec
aad
movsb
aas
sbb
jno
leave
jle
jecxz
push
loop
inc
loop
dec
xchg
dec
sub
push
imul
es
xchg
mov
imul
sbb
sbb
mov
push
fbld
inc
jae
lds
in
cmpsl
sbb
pop
dec
arpl
test
aam
inc
adc
cmpsl
mov
jbe
xor
test
or
stos
add
test
lret
stos
pop
outsb
pop
repnz
out
mov
jg
lret
and
mov
cs
lock
imul
pop
pop
aad
or
sbb
and
daa
shl
ficoms
xchg
sahf
pop
insb
sahf
test
push
sub
add
fcmovnb
shll
xchg
dec
add
movsb
leave
cltd
cmpsb
mov
pop
leave
xlat
mov
cld
sbb
fbld
adc
push
push
leave
push
lock
inc
test
daa
in
dec
scas
mov
xchg
add
push
xchg
adc
pop
mov
stos
dec
xor
loopne
lea
test
push
push
arpl
rcrb
cmpsl
stc
cmp
push
pop
ret
push
in
add
mov
jecxz
mov
ficompl
out
dec
mov
sahf
arpl
jp
push
pop
adc
into
xchg
push
fsubl
in
in
rcrb
xchg
pop
xor
xor
push
adc
icebp
push
in
cwtl
add
jo
cli
sbb
insl
fistps
lock
imul
lock
add
mov
mov
test
ret
in
enter
sub
aam
add
ret
dec
ja
cmp
stc
fwait
pop
mull
jp
sub
shl
ficoml
jmp
iret
fs
or
xchg
add
jno
jb
test
mov
inc
fs
lea
cmp
insb
pop
js
fisubrl
pusha
in
outsb
or
gs
test
lods
sub
cld
pop
lods
les
mov
add
push
fstpl
sti
cmp
cwtl
cld
idivb
das
add
mov
add
ja
push
iret
repnz
in
out
fcomip
pop
test
adc
adc
jp
insb
dec
les
loope
adcl
repnz
sub
jge
push
icebp
sub
push
rcrl
or
repnz
mov
and
dec
inc
stc
loop
ror
jl
push
inc
and
mov
mov
add
jge
xchg
or
sub
cmp
and
dec
adc
add
ja
or
jnp
sbb
add
mov
xor
lret
mov
cmp
imul
sahf
ja
ja
orb
les
cld
sbb
fcompl
pop
and
shll
mov
lods
fcmovnu
jne
daa
adc
push
mov
push
add
dec
pop
es
inc
lcall
cmp
enter
pop
push
les
cmp
mov
es
pop
sbb
or
cmc
sub
outsl
out
jmp
push
rcrl
sub
scas
xlat
mov
shlb
punpckhbw
mov
cmp
in
aam
add
add
in
mov
nop
and
lcall
mov
lahf
repnz
mov
and
or
mov
pusha
add
movsl
mov
pop
orps
inc
xor
stc
mov
xor
rclb
sub
push
out
aad
sahf
xchg
xchg
and
mov
xchg
add
fisubl
cmp
xchg
sub
scas
add
mov
mov
mov
mov
bound
push
movsl
int
test
dec
aas
mov
sahf
mov
xchg
mov
loopne
shlb
int3
mov
mov
inc
cld
pmaxsw
idivl
loope
xchg
add
or
test
in
out
inc
fcmovne
add
movsbl
dec
push
rcrl
mov
xchg
out
mov
sbb
sbb
pop
aaa
or
push
andb
pop
inc
pop
fiaddl
popa
adc
lcall
adc
inc
mov
and
xor
std
adc
test
push
rclb
sbb
and
ss
aad
jg
cmpl
sub
xchg
fimuls
cwtl
jo
in
cmp
jne
and
lock
pop
pop
lahf
add
pop
adc
mov
or
add
aas
fstl
mov
sahf
loope
nop
mov
ret
loopne
xor
cld
and
enter
pop
mov
idivb
ja
cmp
clc
mov
cmc
cmp
fistpll
jle
mov
imul
shll
pop
inc
sbb
cmp
add
les
test
mov
dec
pop
bound
cmpsl
cmp
push
or
xchg
jge
and
xchg
push
in
push
nop
test
mov
cmp
lret
aaa
jns
and
add
ljmp
je
loop
movl
and
sub
mov
pop
dec
js
push
push
dec
adcb
jle
in
movsb
push
inc
cmp
mov
or
pop
out
push
mov
hlt
or
sub
pusha
sub
inc
xchg
mov
loopne
jmp
aam
adc
sbb
mov
inc
jnp
cmp
gs
jcxz
pop
sub
inc
mov
jno
scas
push
lcall
decl
in
call
sahf
test
out
push
adc
sub
insb
cwtl
and
pushf
popf
mov
notl
push
and
mov
lods
pop
int
mov
mov
mov
xchg
xchg
arpl
add
pop
sarb
cmp
or
addb
mov
and
dec
adc
add
add
pop
pop
scas
subb
jmp
jge
lret
out
mov
mov
push
lods
rorl
ret
push
jecxz
dec
loope
push
add
adc
xchg
ss
adc
mov
inc
insb
stos
dec
ret
rol
pop
lcall
inc
adc
inc
setle
mov
ret
test
adc
xor
mov
xor
sub
cwtl
sub
mov
add
dec
aam
mov
daa
mov
fcomp
bound
fwait
divl
inc
xor
pushf
mov
rcl
fcomip
inc
mov
mov
addr16
mov
shl
pop
push
mov
pop
mov
push
setbe
shlb
fsubrs
jno
fwait
lret
ret
mov
cmp
stos
add
repnz
cmp
jl
in
cltd
mov
cwtl
clc
bound
lds
and
cwtl
and
xchg
jge
pop
dec
xchg
orb
leave
sbb
and
dec
mov
stc
shrl
fnstsw
push
push
dec
xchg
cmpsb
cmp
jl
dec
cmp
out
pop
xorb
adc
aas
repnz
jle
fdiv
adcb
stos
pop
adc
sub
xchg
hlt
fidivrs
mov
aam
add
shl
cmp
mov
inc
fwait
and
test
sub
mov
fcom
ss
shr
cmp
mov
fnstenv
insb
add
loope
cmpsb
jle
pop
add
aad
pusha
adc
jbe
add
data16
out
dec
jge
cmp
aad
rcrl
sbb
stos
adc
add
adc
pop
mov
cmc
fcoms
inc
mov
mov
ficomps
shrb
sbbb
leave
das
sbb
int3
scas
call
lods
adcb
cmc
cmp
stc
jle
imulb
gs
mov
addr16
sbb
lret
dec
fists
fcomps
sub
pop
stos
xor
xlat
inc
mov
cmp
or
inc
ret
scas
ret
filds
insb
je
subl
and
out
mov
lds
inc
cmp
in
push
mov
push
cli
jle
pop
lds
stos
sbb
mov
lcall
rclb
xchg
mov
stc
imul
push
pusha
xchg
imull
cmp
scas
jb
push
cld
add
into
mov
cmp
rcll
push
fistps
std
fcomps
mov
jae
jmp
outsl
dec
cli
adc
popl
aas
data16
out
cltd
outsl
push
jnp
outsb
stos
mov
push
jo
pop
pop
and
sub
call
push
inc
jb
add
inc
out
cmp
jle
outsl
movsb
pop
orl
push
arpl
xchg
aam
fistps
jns
xchg
push
cmp
dec
into
pop
aaa
enter
scas
sarl
mov
push
ljmp
cld
add
imul
pop
push
mov
frstor
dec
cwtl
cmp
jnp
xchg
popa
sub
sarl
jae
scas
cmp
ret
icebp
imul
mov
adc
sbb
add
cmc
mov
mov
inc
push
adc
mov
push
fcomps
inc
data16
aam
sub
xchg
pop
rclb
cmp
jecxz
outsb
and
add
mov
inc
xor
in
sbb
and
sbb
inc
adc
push
sarl
test
cli
cld
jno
xchg
mov
mov
lahf
pop
lods
mov
xchg
adc
jb
mov
xchg
mov
arpl
arpl
rcll
adc
mov
xchg
dec
push
pop
push
sub
mov
pusha
test
stos
add
imul
lds
insl
or
cmp
rclb
js
sbb
adc
data16
xor
hlt
mov
dec
dec
imul
imul
fstpt
hlt
bswap
adc
sbb
mov
mov
pop
inc
and
cmc
ja
sti
xor
and
movsl
pusha
fcompl
push
and
or
dec
cs
insb
xchg
loop
mov
shl
pop
and
pop
xchg
ror
mov
loope
mov
adc
pop
jbe
push
jecxz
sbb
daa
xor
mov
dec
pop
popl
iret
pop
adc
int
pop
cwtl
cmpsl
js
inc
mov
jb
in
inc
xchg
push
int3
pop
mov
loop
jecxz
mov
cli
xchg
sti
repz
in
roll
cmpb
inc
arpl
outsl
push
mov
shll
movsl
mov
subb
jns
outsl
add
out
call
mov
lret
insb
shll
push
fxch
cmpsb
enter
xchg
int
repz
aaa
push
movsl
clc
pop
pop
push
xchg
sub
addl
addb
in
mov
scas
inc
stos
or
outsb
out
sub
push
mov
bound
sub
dec
dec
xchg
jbe
lret
or
sbb
dec
lahf
add
add
jecxz
adc
inc
inc
ret
test
icebp
les
out
hlt
push
and
or
dec
push
cmpl
insb
jae
lret
jge
mov
or
movl
ss
gs
out
loope
pop
pop
rolb
add
jno
stos
xor
jge
pop
stos
mov
roll
cmp
or
pop
cs
xchg
or
cmpsl
fwait
das
pusha
or
push
mov
pop
push
fs
repz
add
xor
mov
push
orb
mov
pop
int3
sbb
fnstenv
pop
aad
xchg
out
stos
adc
ja
mov
and
mov
mov
mov
or
push
lock
sahf
inc
inc
cmp
clc
iret
jp
push
pop
sbb
lret
cmp
lods
data16
test
cltd
jae
cmp
xor
pushf
out
stos
or
mov
insl
jmp
mov
addr16
adc
aaa
cmp
out
inc
rcrb
nop
inc
arpl
mov
jge
dec
mov
loope
in
or
pop
ds
pusha
pushf
adc
push
incl
pop
data16
sbb
jg
jae
notb
jns
lock
mov
cmpsb
jno
sahf
dec
xor
dec
and
shrl
jecxz
cwtl
mov
sub
fdivrl
jl
fcompl
mov
es
lock
inc
push
loop
cmpsb
cmp
cmp
inc
pushf
mov
ja
and
imul
test
cmp
mov
in
out
nop
test
xor
push
cmc
iret
or
xor
fdivr
pop
mov
inc
xor
dec
xchg
xchg
cmp
out
mov
cld
or
lret
test
lods
inc
into
mov
in
lods
cmp
negb
fisubl
ja
sbb
stos
mov
test
addr16
mov
xor
inc
push
outsb
inc
lods
sbb
cmp
inc
mov
les
mov
pop
int3
and
hlt
mov
sti
imul
repnz
jb
jge
loopne
nop
int
outsb
xlat
popf
cs
mov
add
prefetcht0
sub
sbb
jo
jg
aad
mulb
fisubrl
test
sbb
das
cmp
push
inc
sbb
mov
movb
xchg
in
adc
ss
jo
into
sbb
mov
xor
pop
fldcw
sti
arpl
inc
xchg
jge
xchg
or
mov
outsb
jl
jg
dec
cltd
out
shrb
push
pop
push
sarb
imul
aam
mov
mov
inc
push
lret
dec
adc
adc
mov
pop
icebp
ret
xor
add
cs
add
sbb
rorb
sbb
inc
cmp
outsl
jp
mov
jg
and
push
pop
add
out
inc
aam
mov
pop
mov
or
adc
imul
inc
add
lds
cmp
loope
jmp
dec
pusha
cmp
jl
xchg
loope
hlt
mov
or
dec
stos
push
push
mov
inc
call
cmc
jns
xchg
ret
pop
repz
mov
scas
adc
cmpsl
ljmp
sbb
mov
mov
mov
movsb
pop
mov
enter
je
mov
and
xlat
push
sbbb
or
lsl
pop
dec
out
pop
pop
cli
push
gs
fbstp
fisttps
mov
rorb
sbb
push
movsl
push
push
lcall
ljmp
dec
int
jge
xchg
mov
sub
push
or
mov
lret
es
popa
test
or
cmpsb
enter
xor
adc
in
shll
pop
pop
std
jo
push
push
jb
faddl
inc
pop
sub
push
sahf
fld
js
outsb
in
popf
fsubs
push
cld
mov
and
xor
mov
dec
cmc
out
and
xor
in
cmp
mov
mov
jne
sbb
push
sub
scas
sub
subl
push
pop
hlt
sub
ljmp
adc
xor
adc
stos
dec
xlat
test
les
inc
mov
dec
push
mov
lret
xchg
outsl
jg
pusha
stc
sbb
push
jmp
inc
ljmp
jle
push
xor
in
jle
jae
pop
cltd
or
and
or
push
ficoms
cmp
movsb
or
rclb
test
daa
stos
sub
adc
xor
test
mov
add
call
aas
lea
stc
adc
jp
adc
and
xchg
repz
orl
push
xchg
test
fistpll
jne
xchg
dec
mov
cmpsl
adc
addl
add
push
mov
aad
inc
ds
cmpsl
jmp
push
gs
fucom
or
and
sarl
cmp
cmp
jnp
je
cmp
and
lods
std
int
and
popf
out
pop
out
mov
and
jo
gs
gs
paddq
out
jge
mov
popf
clc
loop
pop
sub
aaa
jp
sbb
shrb
xchg
jp
popa
jne
rolb
or
pop
add
in
mov
leave
cmp
sbbb
je
jno
mov
sbb
popa
ja
mov
and
cmp
sbb
je
divl
xor
cli
mov
int
popl
and
inc
xor
jbe
push
ret
int
cmp
jo
loopne
mov
je
popf
dec
mov
je
fucomi
les
adc
mov
adc
cmpsb
ret
mov
repnz
and
pop
les
popf
rorl
pusha
inc
dec
test
adc
daa
rcrl
cmp
popf
jne
test
jmp
jp
xor
cld
fs
push
icebp
push
inc
pop
scas
mov
and
xorb
xchg
sarb
add
sbb
bswap
iret
cld
pop
dec
data16
int
adc
mov
or
fnsave
iret
in
movsl
divl
ret
unpckhps
jmp
or
add
add
sbb
stc
inc
and
xor
loope
test
fldt
xor
xchg
push
ljmp
add
jl
lods
daa
outsb
mov
cs
bound
xchg
scas
or
out
je
pop
orb
pop
add
addb
int
ljmp
jae
mov
les
stos
test
loopne
pusha
sub
add
and
push
popa
mov
adc
jg
cltd
nop
ret
and
push
mov
push
jmp
mov
outsb
add
pop
data16
fld
xchg
ss
inc
icebp
dec
jno
jge
repz
data16
dec
mov
mov
mov
jno
shll
jb
dec
inc
data16
arpl
lods
xchg
mov
inc
out
or
fidivl
roll
and
mov
movsl
pop
inc
and
data16
cmc
lods
adc
fmulp
sub
out
sbb
xor
cmpsl
or
fldl
sub
orb
and
insl
mov
fcom
imulb
mov
outsl
mov
lock
push
or
sub
mov
fs
mov
mov
xchg
push
xchg
int
jnp
mov
int3
sarl
gs
in
xorb
sub
stos
out
cmp
loope
add
ret
loopne
dec
push
shll
jo
jg
cs
lcall
jbe
xor
mov
cs
jbe
inc
sub
mov
mov
hlt
loope
enter
cmpsb
adc
sub
cmp
ljmp
insb
cmp
loopne
nop
ficoml
cs
sub
jnp
jno
mov
fsubs
adc
loope
rcrb
lcall
clc
xchg
jbe
stos
out
xchg
andb
pop
test
jno
mov
das
loop
or
jg
sbb
insl
xchg
and
adc
pop
cld
sbb
aaa
dec
add
stc
insl
xchg
scas
mov
fwait
clc
lcall
inc
xor
movsl
or
pop
js
add
sub
movsb
jmp
jnp
icebp
imul
lods
cmc
popa
sub
test
icebp
pop
jg
xlat
pushf
cld
jae
test
daa
cmp
pushf
jnp
xchg
daa
cmp
aam
sbb
outsl
clc
inc
inc
add
xchg
dec
mov
dec
mov
xchg
scas
fmuls
jns
insl
add
js
imul
push
in
inc
cld
stos
mov
out
adc
sub
push
inc
fwait
inc
pop
xchg
loope
xor
pop
mov
fcoms
push
cmpsl
testb
icebp
or
mov
iret
and
sbb
lret
mov
test
mov
xor
sub
fmul
jns
and
inc
or
nop
xchg
sahf
mov
cmp
js
into
adc
mov
cmp
ds
pop
mov
adc
int3
jle
outsb
pop
push
daa
mov
jne
lds
inc
lock
push
iret
pop
xchg
cld
sub
adc
and
scas
cmp
mov
jo
repz
xchg
mov
mov
pop
pushf
daa
pusha
mov
aam
xchg
jmp
ret
add
cmc
mov
sub
inc
mov
outsl
fmull
mov
cs
mov
bound
pandn
pop
sbb
cmpsl
sub
xor
cmp
add
mov
scas
lock
mov
arpl
sti
xchg
sub
pop
stos
lret
lods
leave
hlt
mov
scas
xchg
cltd
inc
iret
xchg
test
mov
mov
aam
and
outsb
jb
subl
or
gs
pop
and
mov
and
mov
test
adc
and
sahf
je
fs
pop
ss
fistpl
mov
push
pop
stos
aam
fst
call
mov
pop
xlat
in
pop
sahf
push
xor
int3
out
pop
jnp
js
ds
add
enter
push
sub
mov
mov
mov
jmp
sbb
int3
push
dec
sub
es
ror
mov
loopne
add
pop
fdivs
sbb
inc
add
shll
xchg
jae
cmp
mov
test
inc
std
lea
cmp
xchg
mov
adc
sbb
pusha
clc
push
enter
lods
cmp
adc
fidivrs
pusha
jle
mov
inc
das
aad
cwtl
mov
xlat
pusha
stos
decl
inc
mov
cmp
cmpsb
push
sbb
mov
sbb
lret
into
mov
getsec
push
jns
mov
sar
pop
xchg
mov
outsb
iret
clc
dec
sub
aas
outsl
and
add
cltd
mov
lret
pop
fisubl
pop
jns
lcall
and
push
test
and
add
pop
or
call
fcomps
int3
mov
mov
test
dec
je
int
in
frstor
or
subl
push
in
push
adc
fs
insl
jnp
sbb
xchg
dec
sahf
call
mov
scas
ss
pop
and
dec
lods
out
movsb
push
or
popf
stos
shll
faddl
pop
lock
dec
mov
insb
xor
int
pop
lea
shlb
xchg
mov
lret
scas
movsb
sbb
ror
cld
fcmovb
xor
fstl
in
push
fmuls
jnp
mov
xchg
cmp
cld
and
xor
std
jne
xor
xor
lock
cmp
iret
lds
xor
adc
jl
inc
daa
push
emms
mov
insb
out
push
cmp
aad
mov
icebp
dec
imul
and
aas
dec
jno
jmp
ja
iret
imul
movsb
fcoml
jmp
cmc
outsb
fimuls
fiadds
xchg
mov
cld
pushf
sbb
arpl
ror
imul
xor
idivl
lods
shll
ret
pop
xor
scas
add
ljmp
dec
incl
dec
push
sub
mov
xor
je
call
mov
fs
and
bound
or
pusha
mov
sbb
and
jo
imul
daa
out
and
mov
jo
clc
mov
pushf
inc
js
sub
in
adc
addb
loopne
loop
shlb
mov
mov
cmp
mov
ja
jae
popa
adc
inc
and
fidivs
scas
xlat
xor
cs
clc
cmp
adc
dec
outsb
scas
jp
jb
sub
pop
outsb
pop
data16
inc
inc
push
test
cmp
xchg
sbb
lods
mov
lds
inc
cmpsb
out
lds
out
fwait
jbe
cmp
mov
ss
or
popf
jp
xorb
inc
dec
int3
xchg
vmaxsd
mov
dec
insl
test
or
push
hlt
and
lds
sub
pop
mov
jge
dec
lret
mov
fdivrl
ljmp
pop
test
jmp
sahf
test
sbb
sub
inc
aaa
loope
dec
sti
in
int
test
dec
mov
popa
sub
lods
rcll
es
push
sahf
test
xchg
cmp
push
or
loop
into
dec
xchg
dec
daa
mov
insl
in
jmp
sbb
jns
jecxz
pushf
int
mov
dec
movsb
jae
and
xor
shl
fmuls
js
rorl
mov
xchg
sbb
inc
cmc
insb
pop
out
jbe
ljmp
inc
fsubrl
scas
test
pop
sub
lds
dec
mov
cmpsb
push
sti
adc
xchg
hlt
cmpsl
scas
pop
loop
and
mov
or
cltd
out
repz
fcompl
adc
in
lock
xor
shll
ja
lock
mov
and
add
in
add
inc
jno
gs
int
dec
movsl
pop
adc
pop
cmpsb
jge
add
pop
adc
xchg
test
and
dec
gs
lcall
inc
fucomip
outsl
loopne
fldl
inc
sub
inc
insl
jg
cs
inc
js
stos
in
adc
insb
push
pop
adc
inc
jmp
xchg
ds
xchg
mov
add
into
mov
mov
ret
mov
loopne
adc
jmp
out
mov
jmp
sub
push
sub
inc
icebp
in
xchg
mov
sub
test
loop
das
insl
or
push
aam
outsl
or
adc
inc
pushf
jnp
inc
rcl
test
push
sub
push
push
popa
pop
or
or
or
iret
mov
loop
add
push
cwtl
fcoms
out
cmpsl
mov
push
pop
add
sub
in
and
jno
outsb
insl
mov
fsub
lcall
mov
mov
fldcw
fistpll
pop
loop
aad
add
adc
sub
in
dec
adc
les
mov
dec
mov
mov
fs
xchg
sub
ja
push
lcall
sti
mov
cmp
adc
fistpl
mov
sub
push
add
fcomip
add
mov
fildl
call
repnz
dec
int3
rcpps
iret
loope
rcll
xor
pop
adcl
jmp
add
inc
ret
movb
sti
push
push
fs
fstpt
loope
mov
lds
or
sbb
rorl
push
inc
xlat
adc
xchg
jb
in
push
fadds
cltd
loope
xor
out
daa
add
call
cmc
mov
push
inc
repz
test
js
push
sub
add
inc
lock
jno
push
inc
in
push
mov
add
cmc
mov
adc
cli
mov
mov
push
push
je
inc
push
cmpsl
sbb
stos
mov
arpl
aam
xchg
dec
aam
or
push
negl
mov
shl
cmpsl
loopne
pop
in
fcomi
push
adc
inc
sub
subl
lea
mov
sub
arpl
or
mov
push
stc
xor
lret
sbb
lret
jmp
xchg
in
loopne
mov
push
mov
das
data16
inc
enter
and
xchg
or
test
or
push
jl
rol
jecxz
mov
ret
and
push
pop
inc
push
imul
and
jecxz
jecxz
adc
mov
sbbl
dec
insb
std
jbe
aam
jp
adc
movsw
xchg
sub
dec
jae
push
jbe
lret
fcompl
ret
ret
mov
jno
pop
fsts
jmp
and
sub
rolb
xchg
fidivl
iret
je
or
inc
sbb
adc
xchg
int
in
popa
push
inc
data16
test
mov
pop
faddl
scas
addr16
movsb
int3
xchg
mov
sahf
mov
mov
push
mov
enter
adc
jge
sti
in
dec
aad
out
mov
mov
je
sbb
out
fcmovb
dec
fisubl
jns
mov
push
and
jge
xchg
popa
sub
ja
pop
mov
dec
and
icebp
xor
aad
repz
dec
dec
push
sarl
adc
inc
mov
imul
lret
mov
fstpl
adc
cmp
push
xor
cltd
lcall
scas
push
pop
pop
lahf
jno
inc
aam
dec
negl
sti
std
dec
ss
jecxz
addr16
ret
mov
or
xor
push
mov
jns
fs
dec
mov
lret
arpl
fimull
adc
pusha
pop
dec
pop
push
pop
adc
jae
sbb
and
leave
bound
imul
sub
push
std
push
out
cmc
or
neg
push
inc
pusha
jmp
cmp
mov
cmp
int3
push
out
aas
bound
inc
push
adc
repnz
sub
mov
inc
adc
insb
ficoms
ror
inc
mov
std
mov
loopne
scas
sbb
clc
out
jne
pop
mov
adc
sahf
aam
mov
mov
jb
sbb
xor
lret
gs
sbb
pop
mov
push
shll
mov
mov
inc
push
movsb
pop
dec
fidivrl
fsubrs
out
mov
or
add
mov
sbb
fbstp
xchg
or
in
xor
and
lds
dec
lcall
ret
and
mov
jmp
mov
inc
jno
insl
mov
push
xchg
adc
or
shlb
cli
add
xchg
cmp
repnz
jle
inc
addr16
push
cmpsl
or
ret
cmp
and
daa
pop
sub
adc
fmul
aam
mov
mov
test
xor
dec
xchg
xchg
jle
lcall
dec
mov
negl
jbe
sbb
mov
push
push
lahf
xchg
lret
rorb
adc
incl
and
leave
or
or
mov
cmp
jp
push
adc
push
pop
pop
sbb
into
or
jb
dec
cs
mov
dec
mov
inc
pop
ja
fs
dec
sbb
cld
dec
movsl
push
xchg
fbld
fisubrs
xchg
adc
loopne
xchg
out
cmpsl
insb
jno
and
dec
or
cltd
sbb
and
push
push
cmp
lret
orb
and
adc
sbb
cwtl
les
add
xor
js
add
lods
adc
mov
scas
inc
jb
lds
cmpsl
ret
stc
cmc
subb
cmpsb
dec
adc
xchg
js
hlt
mov
xor
adc
and
jo
push
sub
es
movsb
out
dec
test
jecxz
test
pop
jo
sbb
out
imul
dec
cmp
repnz
in
out
scas
xchg
enter
xor
inc
adc
add
pushf
lock
adc
shrl
jp
xor
popa
es
scas
outsl
std
and
xchg
pushf
gs
jge
mov
push
cli
jp
lods
push
cmp
popf
movsl
pop
in
dec
jg
xchg
inc
fnstsw
cli
and
dec
add
sub
sti
cmc
cli
outsb
cmp
pushl
jbe
lret
std
sbb
fisubrl
subb
cmp
pop
sub
ljmp
je
xchg
rorl
sbb
cli
stc
inc
xor
cmp
mov
adc
adc
orl
xchg
rcr
imul
mov
outsb
out
mov
movl
push
xchg
jmp
faddl
out
xchg
xchg
jp
fwait
xchg
push
int3
and
adc
mov
sub
dec
rcrl
int3
jmp
shlb
mov
stos
std
jg
adc
fnstcw
js
movsl
sbb
add
xor
lret
cmp
lahf
push
dec
push
inc
mov
jo
inc
xchg
fidivrs
and
xor
mov
push
mov
jle
xlat
push
andl
andb
pop
adc
repz
shrl
mov
stos
mov
lds
xchg
add
sbb
sbb
enter
push
xchg
push
leave
mov
jecxz
mov
push
push
sub
fwait
cmp
pop
pop
imul
sub
push
pop
push
or
insb
popa
xchg
fs
in
pop
mov
stc
data16
mov
pop
lahf
push
push
inc
add
xchg
pop
inc
fists
sarl
mov
pop
inc
clc
mov
fsubs
jg
mov
test
or
loop
push
mov
add
negb
cmp
lcall
xchg
jbe
push
out
add
iret
cmpsl
or
fmuls
je
sub
push
sub
pop
pop
pushf
cltd
cmpsl
jg
jb
sub
enter
je
and
cltd
out
mov
popf
mov
inc
es
popa
ficoms
mov
jl
xor
mov
stos
xchg
inc
or
stos
pushf
and
mov
nop
dec
testl
mov
pushf
arpl
pusha
ljmp
fiaddl
mov
sti
imul
repz
xchg
xchg
mov
fiaddl
sahf
fnstsw
mov
scas
cmpsb
pop
cld
aaa
push
push
es
sub
push
pop
xchg
lahf
adc
sbb
sti
sub
or
cmp
pop
fdiv
inc
inc
iret
imul
xchg
in
out
xor
scas
in
and
enter
sbb
nop
loop
adcb
or
jl
pusha
or
nop
inc
movsb
sbb
xor
mov
cmp
adc
mov
sub
cmp
out
push
aad
xchg
adc
test
mov
fwait
rorl
mov
cltd
push
xor
xchg
xchg
xchg
sarb
aas
mov
xchg
mov
mov
scas
jp
jp
jbe
sub
aam
nop
fsincos
adc
divb
dec
lahf
negb
sbb
es
nop
mov
sbb
push
fwait
mov
mov
lea
pushf
ret
pop
mov
push
cmpsb
add
mov
push
or
loopne
dec
adc
test
ds
rcrb
jle
addr16
pop
insl
test
inc
pop
push
ja
mov
ret
adc
jg
inc
cli
arpl
sub
push
mov
aas
mov
sahf
bnd
and
mov
cmp
mov
mov
in
push
sahf
jo
pop
jne
imul
pop
cmpb
dec
push
cwtl
sahf
jns
pop
add
mov
add
jnp
fs
mov
or
sarl
int
std
xchg
out
js
mov
bound
insb
push
sub
mov
loopne
loop
rcrl
adc
leave
cmp
fimuls
and
jno
cmp
cmp
xor
jae
mov
adc
or
jecxz
popf
pop
and
ret
in
movsl
sahf
mov
mov
xchg
ss
orb
adc
xlat
sbbl
shlb
lods
mov
push
call
xchg
mov
xor
adcl
push
push
pop
movsl
nop
test
cmp
insl
nop
sahf
into
jle
dec
mov
popf
shll
in
and
pop
sub
push
jo
add
xor
into
lahf
sub
sbb
mov
inc
sbb
jb
mov
xor
jge
xor
insl
fdivrl
aad
out
sub
lods
cmpsl
out
in
inc
jp
dec
push
rclb
and
jb
addr16
push
push
popa
xchg
adcb
mov
sbb
sbb
sub
lock
push
cmp
xchg
mov
push
test
dec
jns
mov
jle
mov
mov
xchg
sub
nop
repz
shl
adc
cmpl
cltd
sahf
mov
outsb
fcoms
fdivrl
push
cmpsl
ret
cmp
bswap
shll
mov
es
loop
cmpsl
mov
pop
or
push
shlb
notl
push
pop
iret
mov
bnd
add
sbb
add
pop
cwtl
or
pop
or
cmpsb
sub
push
add
int3
insw
cli
jg
adc
push
ret
js
in
dec
and
inc
mov
movsb
xor
mov
das
jp
mull
stos
inc
mov
mov
dec
push
js
push
in
adc
icebp
mov
push
pop
sub
iret
cmp
push
out
inc
xchg
push
xchg
lock
xabort
hlt
sar
sub
fmul
jge
inc
add
add
icebp
push
ds
jecxz
adcb
mov
mov
rcll
xlat
les
pusha
imulb
sbb
mov
mov
mov
jmp
add
or
and
aas
jmp
pop
ljmp
inc
daa
mov
lea
mov
std
icebp
push
xor
hlt
stc
sti
sub
ret
cmpsb
xchg
mov
mov
popf
fisttpll
xor
out
dec
aas
aam
push
inc
inc
sbb
mov
aam
pop
jmp
dec
daa
shrl
jecxz
xor
sub
mov
and
popl
mov
cs
mov
enter
and
xchg
mov
scas
mov
mov
push
xchg
adc
pop
mov
mov
or
jge
lahf
aaa
out
cmp
xchg
cltd
sbb
or
leave
and
fwait
and
add
inc
bound
mov
mov
or
inc
popf
fs
fidivrs
push
or
push
paddusb
pop
xor
sbb
int
push
and
out
clc
push
pop
mov
inc
ljmp
hlt
aaa
js
push
inc
sbb
out
pop
cld
cltd
test
enter
lea
mov
jo
jne
cmp
shl
sahf
aam
pop
lods
stc
push
jmp
jno
fs
jmp
cltd
lods
dec
cmp
cli
jmp
lds
sbb
test
xchg
dec
or
mov
out
imul
adc
pop
jae
pusha
data16
push
int3
fwait
push
xor
and
test
sbb
jecxz
pushf
adc
ficoms
repz
fiaddl
push
push
and
es
add
pop
push
aas
outsl
pop
pop
jnp
adc
dec
lahf
clc
pop
les
xlat
outsl
mov
or
std
mov
mov
lock
jl,pt
jmp
jbe
out
cmp
cmp
add
sbb
push
xchg
aam
mov
and
sbb
ljmp
test
push
mov
out
fldcw
dec
inc
pop
test
bound
rorb
ret
loope
sub
gs
loop
jns
pop
xor
mov
and
inc
xchg
aad
cmp
cmpsl
sbb
mull
iret
xchg
stos
mov
push
ret
mov
and
xor
cmp
push
dec
insl
mov
aas
call
shrb
aaa
inc
mov
jne,pn
mov
leave
insb
ljmp
mov
cltd
sbb
jns
mov
mov
mov
pop
in
repnz
iret
and
and
dec
push
mov
addr16
jp
dec
jmp
push
movsb
test
ja
pop
cmp
inc
jmp
mov
mov
push
jo
rorl
in
int3
jb
and
shrl
mov
scas
dec
lods
pop
pop
mov
or
push
lret
imul
mov
lods
repz
fxch
das
iret
or
fidivs
add
inc
cld
jecxz
jp
dec
ret
shll
jg
stos
jo
lcall
adc
or
mov
dec
dec
pop
shld
jl
sub
sub
xchg
lods
pop
mov
xor
adc
scas
xchg
jg
jb
jne
sub
jle
cmp
dec
aam
add
dec
cmp
scas
and
push
mov
add
inc
test
insb
mov
or
and
or
rolb
add
jp
jno
sbb
adc
mov
scas
sbb
daa
lret
xchg
icebp
inc
jl
enter
xchg
xlat
mov
adc
icebp
pop
pop
push
dec
or
add
ljmp
insl
sub
mov
add
jbe
pop
or
insl
loop
mov
sub
insl
movsl
dec
inc
mov
xor
addr16
repnz
jae
push
repz
data16
fstps
int3
and
scas
adc
enter
mov
mov
mov
mov
cmpsb
inc
fmull
ret
add
mov
mov
mov
into
adc
mov
xchg
xchg
push
in
mov
ss
rcr
sahf
pop
dec
inc
vcvtpd2psx
les
or
inc
aad
and
out
lods
fnstenv
jecxz
cmp
and
or
dec
stc
sub
cmp
js
mov
jae
dec
xor
scas
fisubs
pop
dec
js
xor
push
and
and
adc
cmpsl
repnz
sub
and
les
dec
out
and
or
scas
ljmp
mov
push
mov
pop
jle
inc
xor
inc
ret
insb
mov
sbb
jmp
pop
mov
mov
mov
subl
lcall
out
jmp
or
add
std
xchg
lcall
xchg
fimull
lea
jmp
sub
jl
insl
sub
adc
push
int3
mov
xor
xchg
jnp
jge
aaa
test
jecxz
ss
pusha
dec
inc
popf
out
sub
mov
stc
lret
lret
and
mov
mov
pop
jmp
pop
dec
decb
decb
mov
ret
cwtl
into
adc
stc
addl
cld
nop
mov
addb
xchg
fs
aas
cmp
xchg
fstps
push
fwait
daa
out
xchg
pop
add
mov
adc
push
movsl
inc
and
andl
sub
in
pop
and
add
cmp
test
bound
in
mov
sbb
or
scas
lods
test
adc
pop
push
mov
mov
aas
in
cld
je
loope
rolb
pop
lock
sub
subb
ljmp
fsubrl
or
push
cmpsl
jb
sub
xchg
xchg
push
xor
repnz
hlt
sbb
sbb
dec
xchg
mov
fsubp
inc
pop
in
add
int3
xchg
mov
pushf
outsl
ffreep
lcall
add
fs
and
sahf
push
fistl
or
inc
push
fldl
adc
sbb
std
dec
int
inc
inc
fs
sub
xorb
dec
mov
xorl
insl
push
lds
shll
out
mov
sub
divb
sbbl
pusha
jg
lds
in
fbstp
insl
xchg
jns
out
or
and
cmp
incl
add
xlat
xor
add
test
fidivrl
nop
nop
sub
add
lahf
add
and
shll
jno
adc
pop
or
das
mov
push
es
js
icebp
out
mov
dec
or
hlt
push
rclb
stos
in
lock
jmp
int3
in
lcall
aam
loopne
xchg
out
mov
dec
pop
movsl
movsb
out
mov
and
movsl
ret
je
out
clc
mov
adc
jnp
xor
xchg
sbb
pop
dec
jl
sbb
cld
cwtl
sub
jo
pusha
cmpsb
xor
sub
push
cmpsb
aam
stos
push
inc
nop
imul
jge
xchg
shrl
pop
push
cmpb
cmp
out
xlat
jo
out
das
sub
xor
cmp
adc
add
int3
stc
bound
add
stc
xchg
xor
jle
dec
mov
mov
push
cmc
lcall
stc
fldcw
cltd
adc
mov
stc
punpckldq
pop
cmp
push
sbb
xchg
sbb
cmpsb
push
cwtl
mov
int
ficoms
pop
jbe
incl
inc
xrelease
inc
mov
and
jb
movsb
notl
fldl2t
cmp
out
pushf
pop
outsl
aaa
cwtl
fidivrl
mull
shrb
mov
pop
and
test
sbb
xor
sbb
loop
loope
ljmp
xor
imul
js
int
mov
xchg
inc
bound
sub
push
mov
push
mov
mov
xor
fwait
les
xchg
clc
mov
mov
jle
dec
dec
decl
add
jle
mov
repnz
es
dec
xor
js
leave
inc
in
sbb
xchg
mov
push
stos
icebp
cli
loope
pop
mov
jnp
add
jmp
enter
aaa
jnp
sub
push
outsl
test
loopne
pop
adc
pop
xchg
mov
in
scas
mov
mov
lahf
test
add
sub
stos
cmp
insl
arpl
fs
cmp
inc
loopne
decl
sub
in
aas
mov
jl
sbb
arpl
push
push
mov
mov
xor
pop
lret
jp
aam
mov
jmp
mov
subb
adc
into
daa
fisubl
cmp
adc
sbb
cmp
scas
mov
in
das
and
add
dec
mov
loop
pop
dec
jo
data16
leave
push
add
mov
imul
les
xchg
or
rolb
int3
addl
mov
jg
add
cld
jnp
cmp
sub
sbb
mov
dec
cltd
rcr
xchg
pop
dec
cltd
dec
in
xchg
adc
pop
pop
mov
cmp
scas
outsl
dec
insb
outsl
jae
loopne
and
push
mov
cmp
insb
pop
mov
cmpb
ret
dec
jnp
rcrb
adc
jmp
mov
jo
rcrb
cs
push
jns
rcrl
xor
aam
mov
loope
xor
jp
or
add
stc
addl
jp
in
mov
push
mov
mov
xor
mov
xlat
and
into
adc
sbb
cld
xchg
sub
sub
or
fisubl
mov
sub
push
gs
jecxz
jnp
dec
ret
test
out
mov
aam
mov
popf
test
jmp
movb
fwait
lods
mov
fldl
int
mov
repnz
jecxz
push
xor
daa
test
stos
cld
xor
fstpl
mov
loopne
fmuls
sbb
add
inc
lcall
gs
cld
and
sbb
lahf
cs
jbe
or
test
aad
dec
iret
add
jge
dec
sbb
addr16
out
sbb
test
jae
pop
clc
jb
and
xor
push
mov
or
mov
ljmp
push
stos
icebp
jg
sti
addr16
jle
adc
sub
insl
test
int3
xlat
mov
stc
bound
popa
sbb
lcall
pop
scas
mov
adc
fimuls
aaa
sub
out
mov
and
mov
lret
or
out
mov
scas
cmp
jecxz
xchg
movsl
ret
lods
xchg
mov
jbe
rcll
jmp
cmc
xlat
popf
mov
mov
adc
mov
mov
mov
int
sub
sub
cmpsb
xlat
addr16
pop
jmp
lahf
loope
pusha
inc
push
outsl
fidivrl
xor
in
adc
std
cmp
insl
jbe
arpl
jmp
aad
imul
mov
add
xor
or
cli
call
sbb
insl
mov
aad
add
sbb
lcall
push
lret
xor
pop
scas
mov
jmp
pop
into
jnp
pop
adc
xchg
jge
mov
mov
rcr
dec
fwait
dec
lcall
pop
lahf
fbld
gs
inc
insb
sbb
mov
in
or
xlat
cmpsb
xor
xchg
dec
jmp
and
frstor
mov
xchg
daa
cmp
sbb
xchg
lods
stos
sub
scas
sahf
mov
je
clc
sbb
mov
enter
int3
pop
mov
mov
out
cld
mov
pushf
idivb
lock
lds
inc
cmp
adc
addr16
cmp
les
push
inc
inc
fsubl
fwait
ret
xchg
cwtl
in
mov
insb
pop
into
cli
pop
jcxz
sub
mov
jg
mov
in
pop
stc
inc
lret
pop
stos
je
jmp
xchg
xchg
sbb
inc
xor
push
test
inc
sbb
pushf
cmp
call
pop
mov
in
jnp
fcompl
xchg
aad
push
push
cmc
jne
repnz
test
mov
nop
sbb
mov
aas
gs
hlt
mov
out
push
sbb
inc
inc
xchg
and
jge
movsl
stos
insb
jle
xchg
es
dec
mov
sub
pop
in
or
roll
mov
je
cmp
sbb
inc
jecxz
or
int
sar
mov
addr16
pop
sti
mov
push
mov
test
ret
adc
xchg
cmpsb
jg
jnp
sbb
rcrb
into
cmpsl
cli
sbb
scas
sbb
dec
ljmp
std
sarl
ret
std
xchg
dec
aad
out
mov
jae
shlb
sbb
xchg
push
stc
sub
mov
inc
cld
gs
inc
cwtl
add
jnp
fidivrl
test
pushf
data16
hlt
insl
mov
cs
mov
fisttps
mov
dec
or
add
mov
clc
f2xm1
outsb
cmp
lods
add
xchg
cld
test
and
xchg
cwtl
or
scas
aaa
ds
ja
fisttpll
inc
inc
fmuls
aas
jns
lods
add
addr16
stc
es
das
sub
popf
gs
push
stc
repnz
jl
fistpll
push
cwtl
adc
subl
mov
divl
push
mov
movsl
inc
daa
pop
mov
xchg
mov
dec
or
xchg
cmpsb
test
mov
mov
xor
das
inc
xchg
icebp
lahf
jns
test
add
push
and
mov
sbb
ret
inc
lds
and
xorl
popf
fdiv
xorl
lods
xchg
adc
pop
lods
lds
in
imul
test
movsb
sbb
or
call
out
sub
stos
xor
xchg
into
out
jecxz
jg
lcall
jo
pop
out
repz
scas
js
xlat
cs
pop
xchg
or
xor
jmp
push
daa
dec
adc
icebp
or
or
push
mov
dec
push
cmpsl
push
push
lret
enter
mov
hlt
lods
cmp
sbbb
pop
jno
fimuls
mov
xchg
add
test
dec
push
in
xchg
sahf
lcall
sbb
cmpsb
pop
icebp
sbb
ror
push
sahf
mov
cld
cld
fiaddl
dec
xor
push
movsb
and
hlt
ljmp
jge
in
repnz
mov
lret
xchg
mov
sub
test
les
js
popa
jnp
push
aaa
pop
adc
lret
cmp
sbb
jl
push
pusha
and
aam
fiadds
xchg
stos
pushf
subl
jl
fsubrs
notb
xchg
mov
push
sub
mov
lods
sbb
addr16
jp
incb
mov
into
sub
xchg
push
mov
stc
pop
fiadds
lods
cmp
xor
xchg
cs
hlt
pop
stos
stc
cmp
testl
sub
call
push
and
in
push
dec
xor
dec
sahf
cmp
lret
mov
jge
adc
xor
mov
lahf
lahf
out
xchg
popa
ja
mov
add
enter
xorl
hlt
and
jle
movsb
addr16
call
gs
xchg
inc
xor
mov
sub
cld
pop
inc
out
pop
push
movsl
adc
out
pop
pop
sub
test
cmp
jle
push
pop
aaa
dec
mov
jecxz
lret
stos
scas
test
and
aas
sbb
dec
add
in
and
mov
sbb
add
jle
stc
adc
xchg
add
sahf
xchg
cmp
popa
push
and
icebp
sar
sbb
xchg
xchg
sar
lods
cmp
mov
mov
xor
inc
mov
loop
inc
sbb
push
movsl
push
shrb
scas
pop
cwtl
mov
mov
xchg
inc
add
cld
mov
rol
stc
jbe
lretw
iret
sub
pushw
dec
dec
aam
mov
and
pcmpeqd
pop
arpl
pop
out
jne
jns
xchg
jns
push
nop
jns
in
lods
mov
pop
cwtl
loop
js
scas
popa
shlb
jne
into
mov
jg
adc
jno
testb
and
dec
jns
test
fninit
pop
les
popf
cwtl
xor
sub
jmp
inc
loope
cmpsl
outsl
cwtl
lcall
add
or
sub
fwait
cmp
xchg
test
sub
mov
pop
call
jge
int
sahf
xchg
lret
mov
push
mov
jp
stc
cmp
inc
jmp
pop
fcmovnbe
xchg
arpl
and
sahf
dec
or
loopne
inc
and
pop
gs
jg
jmp
aam
outsl
enter
push
fadd
ror
cmp
jmp
inc
pusha
jg
lods
xor
out
cmpsl
std
jbe
lods
fcompl
arpl
es
or
inc
push
rcrl
lods
or
adc
inc
std
lea
lret
dec
mov
imul
icebp
and
outsl
jbe
mov
mov
inc
push
movhlps
imul
fsubrs
test
in
push
rclb
sub
pop
gs
dec
lods
jne
imul
mov
lods
jne
cld
sarl
mov
int
dec
pop
mov
add
imul
lds
daa
das
cmp
xchg
and
pop
jnp
dec
adc
in
outsb
fisttpll
cmpsb
or
imul
adc
mov
xor
in
inc
ret
ja
dec
shr
push
adc
xchg
xor
xchg
out
ds
xlat
pop
int
leave
xchg
daa
lret
pop
into
and
sub
pop
addr16
rcr
jg
xchg
enter
lcall
in
loop
data16
or
and
push
fstps
cmc
inc
dec
insb
pop
inc
pusha
add
inc
push
cltd
push
pushf
and
jno
mov
subb
pop
lcall
push
movsl
mov
stc
sbb
fwait
xchg
faddl
jecxz
and
xchg
fbstp
fwait
inc
mov
push
inc
and
in
cltd
xchg
stos
mov
iret
outsb
dec
rcrl
jb
jnp
pop
push
ds
int3
sbb
sbb
sbb
or
iret
leave
pop
xor
jno
jno
shlb
pop
bound
sbb
out
sbb
scas
das
ss
mov
xchg
mov
popf
stos
test
mov
fildll
mov
pop
xor
shll
js
xchg
mov
stos
inc
inc
mov
xchg
fisubrl
push
outsb
xchg
lret
inc
push
pushf
fs
lea
adc
rclb
or
outsl
push
xchg
push
sbb
jns
scas
stos
mov
adc
arpl
xor
decb
dec
outsb
push
or
inc
test
je
test
mov
jmp
insl
cli
dec
add
xor
int3
aad
call
add
cmp
lea
push
dec
mov
push
xchg
leave
test
les
repz
push
or
les
add
mov
xor
sbb
sahf
ja
mov
movsl
popa
fld1
sbb
jbe
xlat
push
pop
cmpsb
inc
mov
dec
xchg
out
gs
inc
xchg
popf
fwait
sti
mov
xor
fisubrs
ljmp
dec
fisttpll
out
cltd
fadds
push
call
add
dec
jl
leave
cld
stos
xchg
cmp
imul
mov
movsl
in
xor
popf
xchg
sub
dec
inc
fbld
stos
dec
lcall
and
add
dec
lods
cwtl
lds
pop
push
cmpsl
pop
inc
fsubs
push
xor
xor
dec
test
jbe
js
aam
sbb
pop
dec
sbb
movhps
inc
and
pop
add
fstpl
andb
stc
xlat
xor
cmp
loope
and
insl
pushf
push
inc
scas
inc
add
mulb
mov
xor
or
cltd
cmpsb
xchg
mov
push
cld
hlt
sub
xchg
movsl
pop
pop
dec
es
dec
nopl
push
jecxz
jnp
sub
jo
push
pop
dec
inc
mov
push
cmp
xor
iret
sub
xchg
jmp
push
mov
mov
or
jge
sbb
cmp
push
push
jbe
pushf
les
push
mov
out
scas
outsl
int
push
xor
xor
movhps
add
fldenv
mov
rorb
js
call
xchg
pextrw
test
xchg
pusha
xchg
addr16
mov
stc
call
arpl
lds
add
cs
movsb
mov
mov
lcall
adc
mov
and
sbb
and
sbb
mov
loop
mov
xchg
cmp
mov
pop
rcl
add
sbb
cmp
fnstenv
insb
cmc
das
sbb
les
icebp
or
mov
cmp
pop
push
xchg
xchg
mov
enter
inc
xlat
push
daa
adc
push
jne
sahf
add
aad
pop
fdivrl
mov
push
mov
push
lds
lahf
or
sub
out
mov
or
lahf
and
adc
xchg
sbb
cltd
mov
push
in
enter
jmp
dec
push
lock
leave
cmp
xor
lahf
roll
stos
push
addr16
jge
ljmp
movsb
pop
and
push
mov
mov
jg
jecxz
inc
inc
or
pcmpeqd
push
push
test
arpl
or
sbb
decb
lret
push
mov
loope
jno
out
mov
jmp
sbb
imul
subl
dec
push
dec
je
fwait
aad
test
cltd
push
jb
test
sub
cmp
lea
adc
mov
push
aaa
xchg
fsubrs
jl
call
pop
lods
or
test
inc
cmp
mov
sbb
or
repz
pushf
fdivl
and
das
scas
push
ret
jb
and
popa
xchg
aas
fimull
mov
mov
pop
sub
pop
leave
jl
jp
or
fiadds
sub
xor
testl
cltd
adc
ja
push
jle
pop
cwtl
lcall
mov
jae
loop
mov
pop
fmul
cltd
icebp
jnp
sub
jp
fsubl
int3
pop
and
jno
pusha
cli
dec
stos
mov
push
es
inc
cmpsl
into
jle
mov
adc
mov
or
add
push
in
lea
mov
std
je
stc
cwtl
andb
push
arpl
xor
cmc
xor
and
repz
inc
xchg
mov
sbb
jo
clc
jecxz
inc
aaa
movsb
mov
lret
xor
loope
cs
leave
das
int
xor
adc
cmp
inc
sti
xchg
xchg
addr16
jl
mov
push
or
push
xor
xchg
dec
dec
lods
mov
push
jne
cmp
pusha
popa
cmp
cmpsb
sahf
jnp
push
add
xor
xchg
mov
test
jns
xor
ficoms
xchg
pop
movsl
das
lods
pusha
js
out
push
sub
mov
call
mov
push
ljmp
mov
ds
shlb
fwait
xor
dec
cmpsl
pop
jge
or
mov
ljmp
jle
arpl
adc
lods
mov
xchg
cli
adcl
ret
test
push
adc
cmp
mov
push
aam
push
ljmp
sub
in
mov
fstpl
mov
bnd
lahf
inc
or
insb
xor
movsl
call
sub
inc
out
lods
addr16
jne
pushf
mov
or
push
pushf
jno
repnz
rolb
test
aas
es
xor
mov
mov
adc
mov
mov
sahf
fwait
cmpsb
stos
push
pushl
jb
mov
repz
dec
repz
jbe
sti
cmp
xchg
mov
les
mov
and
popa
pop
ret
push
lds
cs
iret
or
in
cltd
les
mov
mov
jg
sarl
push
loope
call
ffree
xor
mov
or
repz
inc
sbb
fmul
imul
test
mov
cmp
loopne
cmpb
mov
mov
or
adc
push
daa
cwtl
mov
mov
push
pop
mov
or
loop
jp
cltd
jae
mov
sbb
xchg
sti
sahf
jb
jne
mov
cmpsb
lods
clc
int
mov
icebp
repz
or
jnp
test
adc
int3
xchg
scas
pop
sub
clc
sub
mov
xchg
adc
in
inc
mov
and
xor
in
stos
mov
js
xchg
mov
jle
adc
xchg
inc
movsl
mov
xchg
lock
fimull
lret
pop
out
fcoml
in
sbb
repnz
cmpsb
or
pop
sbb
xor
pop
pop
je
mov
jl
mov
adc
pop
or
std
inc
pop
nop
inc
test
xchg
popf
add
orl
scas
cmp
xor
in
and
das
shr
aad
push
sub
shrb
xchg
mov
es
aam
mov
js
dec
addb
mov
push
sbb
adc
or
xchg
loop
inc
push
mov
int3
add
cwtl
sbb
add
dec
dec
in
sub
ljmp
sbb
imul
sub
mov
jnp
ds
shlb
mov
sub
inc
enter
popf
mov
or
jle
jno
mov
shl
in
lcall
out
and
push
adc
aad
fcompl
fisttpll
jp
int3
das
sub
mov
xor
add
hlt
lea
in
subps
push
movsb
add
jg
mov
push
adc
decl
sbb
lret
pop
push
xchg
mov
popa
in
test
addr16
in
ror
clc
inc
cmp
jmp
sub
ljmp
push
imul
inc
out
dec
fisubl
lret
scas
test
out
repnz
int
xor
gs
mov
orb
or
pushf
inc
mov
test
loop
dec
das
mov
mov
es
mov
push
inc
lock
sbb
xor
shl
je
pop
pop
mov
mov
andl
lds
int3
adc
push
pop
push
push
cwtl
dec
jl
push
mov
mov
jmp
lock
cmp
mov
push
mov
dec
idivl
sub
jns
cmp
adc
sbb
cmpsl
xchg
outsb
insb
sti
xor
sub
sub
sub
or
xor
addr16
cli
jmp
es
xchg
dec
clc
or
mov
lcall
ljmp
fucomi
xor
cwtl
lock
pop
loop
adc
clc
and
movsl
mov
sbb
xor
aam
sarl
xor
pop
adc
cmp
pop
out
inc
adc
rorb
mov
inc
lret
xchg
dec
sbb
das
push
cmp
sbbl
xor
fcomi
scas
pop
mov
pop
loop
pop
repnz
outsl
out
lret
jb
dec
int3
nopl
add
xor
jg
adc
sub
in
adc
insl
xor
push
jo
scas
cmp
mov
xor
ret
fisubl
xchg
push
mov
mov
xchg
repz
cmc
adc
add
movsl
clc
sti
jne
xchg
mov
adc
inc
pop
jnp
sahf
mov
hlt
andb
sbb
stos
int
push
xchg
pop
cmpb
std
mov
inc
dec
ret
mov
imul
sahf
and
jb
aam
ds
movsb
loopne
out
jns
push
dec
inc
stos
dec
xor
cmp
xchg
and
in
xchg
jge
cmp
push
mov
pusha
roll
out
push
xlat
jl
push
sub
fs
imul
ret
in
pop
and
iret
dec
xor
mov
cmpsl
in
fcoml
mov
add
dec
jmp
mov
insl
bound
xchg
push
mov
sti
js
inc
movsl
xchg
mov
imul
dec
mov
out
dec
lcall
in
sub
rcll
cwtl
sbb
push
xchg
and
shr
insl
lea
or
jno
mov
xchg
add
mov
cmp
pusha
add
test
rol
ficompl
dec
inc
leave
dec
and
lds
fbstp
mov
xchg
xchg
and
mov
ds
mov
adc
icebp
js
out
add
push
jo
push
jb
sbb
jo
jmp
out
ret
jg
sti
dec
pop
lret
pop
mov
mov
inc
rorl
pop
jmp
das
xor
inc
adc
je
xor
inc
sti
cli
pop
pop
xlat
cmp
insl
sbb
insl
sub
sbb
sub
push
push
ret
or
mov
mov
notl
sbb
pushf
mov
sub
push
xchg
ret
fprem1
hlt
sub
add
sti
rsqrtps
out
adc
push
jnp
fwait
inc
and
mov
jp
and
int
out
and
or
popa
mov
sbb
inc
stos
push
adcl
hlt
xchg
jns
movsb
and
and
add
dec
push
fstpt
cmp
je
or
in
int
push
stc
cmp
movl
pop
jmp
inc
rcl
pop
add
aas
xchg
sub
xchg
adc
sub
pop
adc
add
xor
pop
sbbb
in
mov
pop
jns
lahf
jne
jae
cmpb
inc
sub
loope
loop
or
sub
nop
fildl
jae
rolb
and
test
daa
mov
rcrl
xchg
jge
cwtl
insl
cli
shr
test
and
outsl
andl
jg
push
outsb
rcr
jg
pop
iret
xchg
lret
push
pushf
dec
dec
mov
mov
pop
bnd
sahf
xor
fistl
leave
adc
outsb
pop
popf
daa
fsubl
pushf
mov
std
jle
gs
mov
sbb
repz
in
in
inc
jnp
test
andb
dec
out
xchg
mov
mov
lcall
popa
pop
in
icebp
mov
mov
test
in
test
push
pop
cmp
lcall
jg
pop
rcll
test
mov
jp
stos
mov
lret
fldcw
jno
fdiv
in
mov
stos
push
or
ret
iret
ds
into
stos
lods
jecxz
xor
addr16
mov
xchg
cmp
inc
adc
mov
xchg
fistps
orb
xor
iret
das
shl
loopne
adc
xchg
rcrl
in
mov
xchg
inc
sahf
jae
xchg
add
jne
jecxz
out
lahf
call
pushf
stos
add
sbb
lahf
xor
xchg
fwait
pop
sbb
sti
add
jne
sub
or
push
lods
lret
rorb
cmp
mov
mov
lds
xchg
adc
add
mov
stc
rclb
fwait
pop
sbb
jae
jno
or
jge
nop
mov
inc
cs
imulb
scas
jns
test
or
push
stos
in
mov
in
sub
add
cmp
cwtl
adc
les
jnp
dec
pmaxub
js
sub
mov
or
lock
adc
dec
jnp
int3
data16
das
cmc
aas
mov
inc
pop
testb
xor
mov
pusha
out
pop
cmc
inc
dec
outsl
adc
je
aam
pop
push
dec
dec
int
xor
jle
jmp
mov
adcl
mov
adc
push
push
xor
pop
adc
dec
les
insb
push
jo
shlb
xor
jnp
popf
fdivrs
decb
adc
cwtl
adc
inc
in
lods
xor
bound
fcomp
sub
pop
scas
pusha
popa
orb
dec
test
mov
add
jle
dec
pop
dec
dec
add
xchg
shrl
adc
aas
enter
sbb
mov
movsl
mov
aaa
and
out
xchg
inc
popf
and
scas
call
incl
add
jb
xlat
lds
in
mov
adc
cmpb
and
sti
fptan
xor
sbb
pop
aad
scas
mov
mov
bts
jno
push
mov
push
jp
call
ror
jbe
sar
rclb
rclb
jb
ret
gs
push
ror
stos
les
xor
mov
movb
int3
or
jg
push
pop
mov
int
sub
shr
jle
add
lret
add
and
mov
xchg
and
mov
cmc
decl
xor
test
jg
and
rorl
adc
shll
fwait
hlt
mov
lock
push
push
xchg
jp
jmp
std
xchg
fstl
mov
or
cmp
mov
sbb
xor
push
lea
out
dec
dec
aas
loope
sahf
inc
jl
cmpsb
xor
out
xchg
shll
mov
ret
push
add
cmp
sbb
sbbb
js
xchg
jnp
mov
sahf
mov
jg
div
inc
lea
mov
sbb
jno
mov
outsb
inc
mov
and
decb
mov
add
sbb
lahf
mov
je
jb
mov
or
clc
leave
jmp
pop
insb
xchg
mov
mov
adc
js
stc
nop
cmp
or
imul
inc
dec
out
mov
stos
mov
adc
adc
push
arpl
or
add
adc
enter
test
cld
adc
sub
mov
test
pushw
dec
ds
inc
mov
stos
adc
fstpt
and
clc
lods
cmp
inc
pop
xchg
in
inc
and
gs
jo
sbb
pop
mov
xor
sbb
push
push
dec
mov
inc
adc
mov
inc
lahf
mov
scas
hlt
fnstenv
push
mov
test
bound
jae
fcoml
ds
aas
push
mov
js
pxor
leave
push
sahf
mov
bound
ljmp
in
adc
into
scas
in
nop
mov
xchg
movsl
and
int3
inc
lahf
dec
sbb
inc
jae
aad
imul
in
jge
dec
add
jne
jge
mov
xor
push
cmp
ja
mov
jno
mov
ret
jmp
das
in
enter
cmp
xchg
das
movsb
xorb
pop
imul
mov
into
lods
popa
fistl
mov
rclb
pop
inc
xor
lods
cli
andb
sbb
mov
mov
enter
mov
std
push
sbb
mov
repnz
ret
pusha
push
push
imul
icebp
mov
jecxz
fmuls
or
fwait
and
sub
pop
sbb
xor
xor
pushf
jge
lret
call
into
fs
push
pop
fs
mov
ret
aaa
stc
into
iret
mov
scas
popf
xchg
push
mov
mov
imul
setbe
call
lcall
or
sub
inc
jb
mov
in
push
and
mov
push
jb
ja
jb
cld
out
jp
or
scas
xchg
insl
push
loope
or
out
mov
imul
lcall
sbb
xchg
sub
push
ds
shlb
dec
in
imul
fcompl
lret
pop
lret
dec
jbe
les
fwait
or
lcall
xlat
sub
daa
inc
test
jnp
xor
insb
lods
nop
jle
mov
push
dec
idivb
add
int
data16
push
test
mov
test
pop
dec
inc
mov
and
inc
lods
loope
rorb
out
push
and
push
xchg
dec
cli
xchg
adc
sub
adc
mov
jb
clc
adc
imul
ficompl
or
sub
xlat
ljmp
les
test
fldt
rcr
add
mov
sbb
ret
pop
mov
stos
insb
insb
mov
idivl
add
test
mov
rorb
xor
arpl
jo
fwait
out
inc
inc
xchg
out
js
pop
mov
insl
les
jmp
cmpsl
fisttpl
call
notb
add
cmpsl
inc
and
inc
cmp
outsb
dec
lods
inc
movsb
jecxz
push
ss
and
fdivrs
pop
leave
in
js
imul
inc
xchg
inc
stc
xor
sub
and
xchg
stos
mov
sbb
sbb
nop
out
adc
cs
fwait
dec
andb
insl
pop
push
xchg
popa
mov
mov
add
mov
push
xor
fisttpl
adc
inc
popl
pusha
repnz
mov
mov
push
sbb
dec
fisttps
imull
scas
ss
jne
inc
mov
xchg
loope
dec
cmpsl
sahf
add
rorl
dec
or
aad
mov
push
xor
and
mov
lods
out
ljmp
xor
les
and
outsb
aaa
jp
cmp
ljmp
dec
xor
mov
pusha
fisttpl
pop
mov
push
cmc
pop
pop
pop
mov
pop
or
push
jge
push
push
xchg
lds
aas
push
dec
stos
out
add
or
inc
fs
pop
call
mov
fbld
dec
enter
stos
add
dec
pop
push
sub
int
out
sub
adc
pop
adc
sub
out
repnz
aaa
fs
mov
mulb
test
xchg
push
mov
test
cmp
and
jge
cmp
movsl
lods
mov
xchg
sbb
js
push
mov
cmp
push
in
ja
add
mov
or
jmp
dec
pop
in
xchg
nop
jne
out
jo
rcr
in
dec
xchg
or
ja
out
pop
mov
imul
aam
test
cwtl
jg
xchg
mov
lcall
xchg
xorb
in
scas
outsb
dec
aad
mov
push
cmpsl
xor
aaa
xor
dec
das
lcall
repz
cmpsl
aad
test
inc
insb
xor
out
sbb
sbb
dec
xchg
sub
cmpsl
mov
sub
xor
jo
testl
insb
cmp
xchg
es
sub
out
add
sub
jmp
lods
daa
fstpl
scas
js
aas
cld
fdivr
jmp
scas
out
sbb
pop
and
popa
jo
push
sub
fwait
pop
aas
adc
inc
les
dec
push
test
xchg
mov
sub
in
sbb
or
in
xor
add
std
data16
push
cli
xchg
ret
jbe
inc
inc
mov
pop
jmp
xchg
fsubs
into
xchg
pop
cli
cmp
sbbb
mov
adc
sub
push
jbe
push
test
and
xlat
inc
lret
loop
ja
mov
cli
aaa
jno
mov
jmp
rcl
mov
hlt
jmp
and
dec
fldt
pop
sbb
mov
sub
je
jno
jmp
cmpsl
stos
sti
xchg
xor
dec
push
mov
lcall
xchg
add
and
scas
pop
sub
cmpsl
jbe
stos
mov
push
pop
test
outsb
mov
test
out
push
or
mov
adc
imul
loop
mov
jle
pop
sub
dec
and
popa
std
lods
test
and
jb
push
jne
mov
xor
cmp
push
push
into
lahf
add
orl
mov
stc
sub
mov
cltd
jb
cmp
scas
clc
or
sbb
hlt
sub
cli
inc
imul
pop
lret
push
push
mov
arpl
jmp
xchg
in
sub
sbb
cmp
xchg
leave
adc
push
mov
jne
arpl
fnstsw
std
sub
pop
jmp
cmpsb
mov
mov
xchg
sbb
xor
bound
mov
aad
and
jb
mov
imul
xchg
mov
add
daa
lods
inc
dec
adc
das
xchg
lcall
sub
mov
lret
and
pop
add
xchg
mov
jno
ret
jb
xor
fs
icebp
icebp
fwait
jecxz
rorl
sub
dec
or
ret
mov
andb
cmp
cmpsb
dec
pop
ds
cmp
daa
xchg
xlat
push
in
test
inc
fxch
xor
push
adcl
pop
push
lock
xor
inc
inc
pop
mov
jmp
loopne
in
scas
dec
lret
xchg
enter
push
add
cmp
cld
mov
jno
adc
inc
in
rorb
ljmp
int
cmp
mov
xor
mov
inc
jg
outsb
popa
inc
imul
cli
and
add
fisubrs
leave
sub
int3
or
jmp
xlat
pop
pop
test
fsubp
xchg
test
loop
cmp
mov
add
dec
mov
cltd
sbb
cs
mov
in
imul
xchg
sbb
mov
pop
cmp
mov
dec
push
push
aaa
pop
stc
lahf
inc
mov
mov
sti
mov
dec
fisubl
stos
ljmp
mov
testl
pop
sbb
xor
jle
adc
ljmp
mov
sar
sbb
xor
xor
mov
icebp
mov
jle
sbb
or
sub
jp
cmpb
push
push
jmp
push
push
cmpsb
and
imul
aas
xor
or
shrl
push
insb
xchg
into
mov
das
xor
addr16
test
push
lds
sub
sub
adcl
pushf
mov
repnz
imul
in
sbb
add
mov
adc
cmp
test
pop
or
xor
mov
fs
fs
mov
shrl
out
faddl
clc
out
ss
icebp
cwtl
test
std
pop
xchg
add
fs
pop
xchg
or
pop
or
sub
mov
or
push
push
sub
not
mov
jecxz
pop
addr16
mov
xchg
sbb
sbb
shrl
arpl
sbb
fnstsw
je
pop
in
out
iret
shll
test
shrb
or
es
mov
or
and
sbb
pop
dec
into
xchg
out
adc
mov
sub
icebp
gs
push
sbb
inc
jl
lock
and
and
pop
fdivp
in
inc
faddp
adc
mov
mov
ljmp
push
mov
icebp
pop
and
xor
movsl
sub
xchg
xor
mov
jae
arpl
sub
sti
adc
pop
cmp
sbb
mov
or
pop
hlt
mov
shlb
int
pop
es
mov
insb
popa
out
leave
adc
into
push
xor
jmp
dec
jle
pushf
lock
out
mov
adc
gs
xchg
aam
add
mov
push
inc
aas
jle
cmp
pop
push
dec
xchg
adc
bound
dec
lcall
jno
fadds
pop
aaa
in
test
dec
cli
inc
mov
jb
mov
fld1
enter
rcl
fsubp
cld
fisubrl
xchg
dec
das
imul
nop
les
fimuls
push
adc
or
int3
jge
daa
pop
inc
push
cli
add
pop
pop
xchg
ja
jne
fisttps
inc
cwtl
sub
jmp
xor
jle
pushf
pop
inc
movsb
jae
mov
jno
dec
cld
add
in
iret
movsl
mov
outsb
fstpl
mov
push
push
in
idivl
or
mov
stos
out
or
ret
adc
adc
mov
inc
fwait
mov
aas
rorb
out
xchg
mov
mov
push
mov
xchg
es
test
mov
inc
rcll
lods
cmpsb
les
xchg
mov
pop
enter
stos
call
push
stos
pop
pop
mov
add
mov
adc
adc
add
movsb
adc
mov
fisubs
je
dec
push
ss
xchg
pop
pop
pop
mul
lret
mov
cmc
mov
subb
or
mov
dec
dec
cld
ficoms
or
shrb
or
jae
adc
call
les
idiv
clc
pop
push
adc
xor
pop
pusha
iret
imul
sub
loopne
xor
push
cli
cmpb
and
pop
sub
adc
iret
sub
mov
sbb
sbb
fimull
lea
jge
mov
nop
pop
or
das
mov
push
push
push
in
stos
ljmp
mov
outsb
push
pop
popa
and
mov
jne
out
sahf
mov
rcrl
lods
cs
fildl
jne
add
cs
data16
add
std
fisttps
lods
andl
jne
and
stos
push
pop
aaa
mov
leave
and
idivb
shr
in
jge
xor
push
mov
cmp
adc
jmp
dec
sti
lds
push
add
popa
js
fidivrl
inc
rcl
out
imul
jns
sahf
out
or
lret
inc
sbb
jl
jbe
jmp
xchg
test
mov
test
imul
jmp
pop
mov
dec
jge
pop
sub
adc
xlat
mov
sub
lods
dec
cmpb
dec
fldl
xor
imul
icebp
pop
pop
icebp
outsl
adc
xor
subb
sbb
sbb
test
cmc
mov
push
mov
mov
gs
jle
mov
push
adc
icebp
subl
out
mov
je
fucom
mov
and
fistps
rcr
dec
sbb
adc
sub
aam
push
cmp
adc
test
inc
xchg
icebp
push
js
cmp
test
cmc
aas
or
push
shrb
adc
data16
inc
and
inc
push
in
lock
sti
insl
or
aad
inc
xchg
mov
cmp
imul
or
lds
jmp
ret
mov
incl
fs
sub
add
cli
test
jne
jecxz
adc
and
xchg
idivl
or
mov
cs
dec
jno
inc
popf
lcall
cld
push
cmpsb
cmc
xor
rcrb
pop
shlb
pop
push
daa
sbb
add
lahf
std
xchg
and
iret
lret
adc
lea
or
cli
mov
stos
add
xchg
jno
or
mov
das
inc
mov
dec
adcb
out
out
push
insb
inc
push
sbb
test
adc
dec
xchg
sarb
or
repnz
xor
xchg
cltd
mov
ret
mov
sub
cli
cld
movsl
or
hlt
das
sub
mov
rorb
dec
push
push
push
jnp
ret
ret
int3
push
lods
les
in
outsb
sbbb
sub
cmp
xchg
or
cmpsb
cmpb
cltd
mov
mov
pop
stc
xchg
leave
insl
aad
enter
mov
dec
lods
xchg
inc
scas
insl
lret
cwtl
stos
sub
iret
lods
push
aam
fwait
push
push
mov
leave
mov
shrl
cmp
inc
js
ret
lret
jns
jge
pop
rclb
iret
sbb
std
js
imul
out
jmp
stos
push
sbb
pop
rcrl
in
xchg
sub
push
popa
jl
sarl
adc
pop
enter
das
adc
xorb
sub
pop
adc
fildll
pop
adc
cmp
imul
outsb
cmp
scas
lahf
cmp
test
ja
shl
xchg
iret
lods
push
adc
addl
xor
ret
out
jae
inc
and
in
inc
mov
aam
cld
movsl
inc
mov
insl
and
sbb
loopne
sub
in
pop
add
and
mov
pop
sub
cmp
pop
mov
aas
enter
sbb
je
jge
and
scas
lcall
imul
andl
mov
add
cmpsl
adc
shrb
cmp
cmp
add
push
nop
mov
ficoms
daa
popf
mov
stos
cmp
sub
mov
das
pushf
cmp
iret
test
sbb
fdivrs
lcall
es
rorl
pop
bound
dec
inc
or
inc
push
xlat
lret
mov
scas
push
pop
call
outsb
fsubp
xlat
jmp
mov
stc
lret
negb
mov
sub
or
rclb
aad
popa
inc
jo
push
push
adc
inc
mov
call
adc
and
push
sarl
fimull
inc
sbb
stos
popa
mov
ja
push
mov
push
add
scas
jmp
sbbb
movsl
dec
cld
xchg
nop
fnstsw
xor
lock
faddl
lahf
push
mov
push
push
and
test
test
push
cmp
mul
std
stc
mov
inc
out
sbb
stos
sbb
iret
repz
in
imul
daa
fwait
aam
xor
fisubl
lock
cmc
nop
mov
rol
inc
ja
fwait
cltd
fnsave
fsubrs
add
mov
cmp
xor
sub
pop
dec
cmc
cmp
xor
and
mov
jp
fwait
pop
cli
js
ficompl
ret
cmp
andl
bound
mov
dec
loope
xchg
ret
jno
mov
mov
gs
fsts
out
inc
cli
and
jg
or
dec
add
fcomi
push
out
xlat
rcl
and
mov
jmp
insb
push
inc
sub
mov
push
je
push
push
jmp
mov
cmp
mov
or
pop
or
or
subl
aam
imul
addl
add
adc
fcomps
mov
ret
add
mov
popf
or
rcrl
sbb
and
ss
je
dec
xchg
hlt
ror
push
mov
mov
fstps
mov
outsb
ljmp
in
mov
xor
push
cmc
mov
rorb
push
cmp
and
pop
fisubrl
xchg
mov
loopne
arpl
out
insb
adc
cmp
push
sbb
mov
iret
arpl
test
dec
leave
sahf
decl
cmpsl
mov
mov
les
mov
or
xor
fcmovu
out
pop
ja
and
sti
ja
cli
shrb
jo
pop
arpl
mov
jbe
mov
js
push
sbb
roll
dec
and
mov
je
xchg
mov
add
out
inc
mov
mov
xor
out
pushf
pop
jo
into
ss
inc
adc
movsl
cltd
mov
jnp
mov
push
mov
mov
sub
fninit
xchg
loope
xor
add
fcoml
xchg
push
sar
mov
test
sbb
arpl
mov
xchg
scas
lods
add
jge
loop
xorl
xlat
call
pop
adc
pop
mov
dec
enter
dec
fsubl
cwtl
je
in
mov
add
mov
add
mov
data16
repz
and
push
pop
xchg
dec
pop
lock
leave
adc
or
mov
and
in
fldcw
int
mov
add
dec
mov
push
dec
and
into
push
jl
sub
or
loope
lcall
sbb
push
xor
jnp
push
mov
scas
clc
cmp
mov
inc
pop
pop
pop
ret
hlt
fs
cmp
xor
sti
jb
sti
sub
js
push
mov
cltd
ret
roll
mov
mov
je
mov
daa
clc
or
xor
jbe
lea
push
xchg
dec
dec
lds
sbb
inc
mov
cmp
jl
sub
mull
jb
mov
adc
orl
fwait
push
xchg
adc
repnz
mov
dec
jmp
cmp
pop
nop
scas
enter
addr16
mov
adc
adc
pop
dec
xchg
dec
cmp
jle
in
cmp
jl,pn
pxor
adc
fisubrl
xchg
xchg
stos
cltd
jle
add
cmp
std
or
mov
sub
sar
js
jno
clc
push
mov
shl
fsubrl
repz
cmp
jge
adc
push
mul
sahf
pop
sub
adc
mov
dec
shll
sub
stc
mov
jmp
addr16
lcall
insl
repz
fisttpll
jb
shrl
fwait
cltd
dec
mov
imul
addl
loopne
neg
xchg
inc
and
cmp
sbb
lret
scas
sbb
xchg
lock
cmpsb
push
gs
and
ja
orb
cmp
inc
fistpl
and
adc
jecxz
nop
push
movsl
dec
mov
cld
aam
push
sbb
lret
push
adc
inc
and
and
sbb
jnp
or
cmp
nop
xchg
outsb
and
mov
lahf
pushl
aam
cmp
mov
bound
jne
push
aad
inc
push
cmp
and
inc
inc
or
mov
add
mov
mov
rorl
fimull
cld
fmull
mov
inc
or
addr16
cmp
outsb
and
pop
loopne
mov
lret
daa
or
ror
rorb
inc
mov
push
add
fidivl
sbb
add
in
cmc
aam
inc
dec
nop
leave
sub
sub
clc
sub
add
das
push
mov
mov
mov
enter
movsb
enter
mov
inc
xor
add
cmpsb
in
stos
pop
sbb
sub
add
in
dec
lret
and
cmp
shll
addr16
shll
push
jo
push
and
jae
pushf
mov
in
jno
jle
cwtl
test
cmp
adcb
pop
lock
cmp
popf
cmp
sub
cmp
add
add
cmpsl
fdivs
dec
cld
loop
or
stos
and
loopne
std
mov
mov
adc
mov
es
or
outsb
ljmp
cld
cs
test
jbe
fs
das
shll
in
arpl
lea
mov
stc
gs
insl
sbb
sbb
ficomps
inc
mov
dec
sub
and
xor
ss
mov
das
pop
aaa
aam
ja
mov
shrl
sbb
lahf
cmp
hlt
mov
sub
add
lods
add
mov
dec
push
sub
out
and
inc
loope
push
inc
and
sbb
add
or
add
xchg
ljmp
sbb
xor
mov
xchg
imul
xlat
pop
mulb
pop
scas
mov
dec
pusha
xor
sarl
cmp
outsl
pop
and
add
arpl
mov
jbe
lods
bound
xor
mov
stos
adc
movsl
aad
push
pop
movl
and
mov
dec
jge
aas
stc
push
inc
ljmp
sti
les
xor
mov
sbb
idivl
mov
scas
mov
aaa
xor
xchg
push
push
cmp
rcrb
mov
jl
daa
lods
push
enter
mov
imul
dec
lret
mov
sbbl
std
pop
outsb
mov
push
in
icebp
lahf
clc
jmp
cmp
gs
movsl
repz
mov
clc
cld
inc
fwait
push
and
inc
xlat
dec
mov
daa
sar
leave
repz
jg
stos
xchg
stos
movsl
mov
xlat
adc
or
sub
inc
push
mov
in
push
lcall
iret
dec
push
adc
lahf
add
mov
sub
mov
adc
mov
mov
and
rclb
push
mov
pop
mov
cmc
fmul
ret
jbe
fwait
inc
iret
sbb
popf
add
insb
pop
inc
cs
pop
lahf
cltd
sub
inc
mov
int
jbe
mov
in
cmp
cmp
push
or
and
jl
out
fsts
add
mov
sbb
popa
xchg
sub
jecxz
jno
pop
rcrl
out
xchg
and
jae
mov
pushf
scas
xchg
arpl
xor
sbb
cltd
push
xchg
notb
enter
ljmp
and
call
les
addr16
push
sub
scas
clc
into
lods
ljmp
jnp
cltd
dec
lahf
js
pop
pop
push
call
xor
jno
and
inc
test
nop
dec
jo
outsb
aaa
and
inc
pop
shll
cmpsb
ret
in
movsl
sub
insb
cwtl
push
xchg
aaa
je
fwait
push
aad
dec
push
mov
mov
es
shlb
xchg
das
jmp
outsl
mov
stc
aas
int3
cltd
lea
xchg
popa
push
scas
out
aaa
ret
mov
pop
xchg
fildll
jp
jecxz
mov
test
dec
addr16
cmp
stos
out
push
cmp
mov
lock
push
movsb
and
adc
out
outsb
std
incb
xor
cmpsb
aas
jno
stos
lods
sbb
mov
inc
xchg
inc
push
lcall
push
shrb
test
ficompl
call
cmp
aas
cmc
cmp
cmp
or
lods
adc
xor
push
and
call
sbb
inc
add
jnp
mov
add
aaa
out
sbb
insb
leave
fwait
sub
lcall
xor
cmp
cmp
ds
push
aas
js
imul
pop
icebp
aas
mov
sub
ds
je
dec
jl
and
mov
xlat
sahf
push
or
daa
clc
push
jge
andl
fwait
push
jmp
mov
ret
or
mov
outsb
push
add
jo
xchg
dec
and
arpl
rorb
cmp
movsl
mov
mov
das
aaa
into
in
jl
ret
sti
js
insb
fdivl
add
icebp
cli
mov
and
out
mov
inc
dec
mov
popf
xor
idiv
stc
and
mov
push
jno
call
aas
xlat
es
stos
loop
nop
jmp
loope
inc
or
jmp
sti
into
or
cmc
test
dec
push
shl
pop
in
enter
push
add
add
pop
jae
dec
push
add
fildl
arpl
popf
popf
add
sbb
inc
pop
sbb
adc
dec
inc
xor
popf
std
or
ret
and
mov
jge
call
dec
out
lods
in
jmp
cmp
popf
pop
test
mov
add
xor
xor
sbb
addl
pop
inc
int3
mov
decb
pop
bound
push
or
mov
cmp
jnp
mov
add
and
xchg
hlt
dec
andl
sbbl
pop
push
aaa
inc
mov
sbb
outsb
in
movsb
sub
push
stos
fldcw
out
fimuls
mov
aas
inc
ret
mov
pushf
sbbl
add
je
rcrl
jno
mov
sbb
push
insb
dec
xor
sbb
lea
cmp
leave
daa
retw
or
rorb
push
xor
and
jecxz
pop
and
mov
ds
insl
mov
sti
push
xorl
jnp
jno
inc
or
sub
mov
fs
xchg
int
ror
xorl
clc
cltd
xor
jp
adc
enter
lds
daa
xor
mov
std
mov
inc
fucomi
adc
cli
fdivrs
adc
out
cmp
les
sbb
stos
jmp
mov
imul
xchg
pushf
push
pop
cmp
jge
and
add
mov
ds
lret
xchg
jbe
fwait
dec
shlb
dec
iret
sbbb
fs
push
mov
sub
je
and
lret
iret
or
and
mov
mov
dec
sub
aas
xlat
fwait
xchg
mov
std
dec
cmp
sti
rcll
lds
jbe
addr16
arpl
dec
push
loope
lcall
outsb
inc
mov
rorl
mov
inc
lcall
or
sarl
cs
pop
das
shll
dec
dec
lock
daa
inc
outsl
pop
push
shl
xor
dec
dec
fstpl
mov
push
add
dec
or
mov
fsubp
in
loopne
js
lods
fs
jmp
push
push
test
xor
push
out
adc
iret
sbb
inc
mov
iretw
adc
adc
mov
xchg
repnz
outsl
aaa
cmp
mov
cmp
dec
jae
aam
push
sbb
ja
cmpsl
les
call
les
dec
les
adc
testb
or
adc
rorb
and
cmp
pop
pop
and
dec
add
jb
dec
inc
jle
add
cmp
xchg
jg
test
pusha
int
call
aas
ja
and
push
fcoml
xlat
or
movsl
shrl
fimull
dec
dec
movsl
bound
movl
pop
or
test
fldcw
adc
adc
inc
jle
or
dec
repnz
fsubl
jns
cmc
mov
sbb
fstpt
and
pop
test
loope
insb
sub
inc
cmp
and
mov
rolb
les
xor
inc
lock
inc
loop
dec
outsb
mov
je
mov
fildll
sub
push
jno
mov
xor
mov
inc
loop
stos
out
ret
lcall
addl
lret
insl
ds
pusha
xchg
stc
shrb
movsb
popf
xchg
sub
inc
std
cmpsl
jb
out
fiaddl
test
incb
lcall
mov
inc
mov
repnz
inc
leave
fimull
mov
enter
push
dec
cli
movsb
pop
inc
cmp
in
sbb
inc
hlt
movsb
cld
push
lods
push
xchg
in
jbe
leave
sahf
fsubrs
xor
and
leave
push
and
jb
lds
mov
mov
and
pop
imul
aas
in
sbb
jg
mov
in
mov
jns
pop
outsl
movl
test
outsb
fnstenv
into
cltd
push
sub
cmpl
xchg
std
push
jae
sub
xor
mov
mov
xchg
xchg
sbb
jg
xor
xchg
pusha
mov
cli
mov
pop
ror
ret
int3
nop
loope
aam
movsb
mov
sub
xorl
in
lcall
xor
jne
push
andl
xor
test
inc
inc
sbb
cli
dec
sbb
dec
pop
cmp
mov
sbb
aam
sarl
sub
sub
jne,pt
push
divl
mov
xor
fadds
adc
fidivrs
ja
jno
jnp
pop
xchg
enter
adc
pushf
rclb
test
xor
arpl
cmp
pop
mov
sbb
fs
ja
dec
add
ljmp
pop
mov
hlt
jno
fisubrl
fwait
mov
push
and
pop
push
xor
in
sahf
jo
insl
cmpb
jge
movsb
test
adc
mov
push
adc
repz
sti
gs
add
pop
jbe
push
jae
pusha
and
push
and
mov
mov
push
int
mov
and
push
lea
cld
ljmp
fwait
data16
adc
sti
mov
insb
test
mov
std
aad
cmpsb
xor
call
pushf
cmp
inc
adc
scas
pop
or
les
aam
push
pushf
adc
out
rorb
sahf
sub
mov
pop
stos
test
xchg
mov
xlat
jle
push
test
pop
xchg
sub
cwtl
pushf
adc
dec
jnp
mov
xchg
sbb
out
sbb
push
push
cli
lret
out
dec
dec
push
adc
mulb
imul
divl
mov
sub
sbb
add
jns
jae
divb
jge
push
mov
cmp
jp
sahf
cmp
jmp
sbbl
mov
sub
je
movsb
jae
sbb
movsl
fucomp
stos
mov
sahf
insl
mov
sub
call
and
andl
fwait
into
mov
or
cmp
loop
jge
jne
out
lods
xchg
ja
lcall
jns
scas
pop
xchg
pop
pop
lret
rol
push
cmp
rcrb
shrl
cmpsl
or
fwait
popa
sub
and
cli
clc
mov
cld
push
cwtl
push
sbb
adc
adc
sub
jne
jnp
jns
lds
rcll
inc
dec
test
jbe
mov
pop
cmp
es
or
shl
sar
test
xchg
popf
hlt
push
or
loopne
enter
pop
push
iret
inc
cs
movsb
inc
inc
test
mov
loopne
addr16
mov
add
and
mov
loop
dec
mov
jo
lods
clc
jmp
pop
xor
into
outsl
cmp
mov
jmp
add
cwtl
mov
mov
pop
pop
pop
mov
sbb
sub
out
mov
sub
scas
out
int3
jbe
sub
hlt
sub
push
or
pop
push
daa
andl
stos
xchg
pop
jp
push
dec
pop
mov
paddsb
inc
lock
lods
fcomps
and
cltd
mov
call
jo
ret
testb
out
add
popfw
jl
push
xchg
cmpsl
aaa
inc
leave
icebp
fmuls
movsb
addr16
mov
and
dec
and
daa
rorb
push
sbb
sar
ja
cmpsb
cmpsl
iret
xor
js
cmp
dec
ficompl
pop
jo
mov
mov
in
dec
dec
pop
hlt
popf
adc
xchg
rol
bound
fxch
lea
dec
insl
popa
xor
sti
push
push
adc
ja
mov
movsb
in
sub
jl
inc
push
cld
jb
mov
pop
jge
nop
jle
add
jae
pop
les
daa
pop
dec
ss
andb
and
xchg
inc
jmp
or
pop
sub
inc
gs
ja
pusha
je
sub
push
iret
pop
flds
cmpsb
std
and
dec
adc
rcr
sahf
or
sub
add
xor
dec
movsb
and
aas
mov
jbe
test
and
and
and
movsl
ret
or
aam
insb
xor
dec
ret
incl
xor
out
xchg
cs
test
aaa
sbb
popa
and
stc
jge
jmp
jle
mov
inc
lahf
pop
pop
add
iret
sbb
mov
pop
clc
or
les
shrl
sbb
repz
pop
lcall
or
mov
mov
nop
cmpsl
call
sar
pop
xchg
scas
cltd
push
mov
shl
add
xlat
dec
fldl
lods
fs
mov
incb
ret
lods
movsl
inc
fisubl
cmpsb
push
lcall
push
lods
cmp
dec
jge
frstor
clc
and
das
ret
notl
inc
rcrl
add
out
sti
push
xor
mov
push
push
pop
test
adc
pop
call
mov
icebp
add
push
lods
out
or
inc
lods
push
into
loope
dec
cmpsb
xchg
mov
jge
daa
cmpl
jo
test
arpl
dec
cmc
ja
repz
adc
repnz
imul
repnz
loop
mov
mov
dec
nop
push
daa
pop
dec
and
inc
ficompl
sub
and
fiaddl
lods
dec
cmpsl
cs
mov
cmpsb
pop
stos
jbe
sbb
or
lds
push
outsl
push
and
in
sub
ror
jle
or
movsb
or
fcoms
add
jg
popa
pop
adc
out
jae
push
fsts
popw
sub
packuswb
dec
jae
pmulhuw
adc
xor
push
hlt
push
sbb
cmp
push
sbb
fisubl
decl
test
mov
sub
mov
or
xor
mov
mov
sub
mov
or
push
mov
bnd
daa
mov
mov
mov
mov
jp
xor
adc
fdivp
fists
or
adcb
arpl
ret
cmp
or
lret
mov
add
mov
xor
test
jg
or
ret
and
pop
je
in
out
lcall
mov
mov
not
insb
scas
mov
lds
sub
cld
inc
jno
in
pusha
inc
data16
or
lret
adc
jbe
mov
repnz
mov
lock
adc
mov
jb
pushl
add
sub
sub
cli
dec
int
xchg
add
push
shl
in
testb
xor
rcrb
sahf
stc
test
testb
inc
in
addr16
dec
std
push
mov
gs
push
adc
movsl
int
inc
enter
shl
push
out
inc
sbb
andb
repz
xor
out
mov
push
insl
fimull
dec
std
dec
lock
cld
gs
sbb
mov
adcl
push
cmpsl
test
push
xor
fdivp
fadds
jmp
lea
jae
sbb
jne
pop
jp
lea
repz
pop
or
gs
pop
nop
push
and
cmpsl
mov
and
rorl
cld
and
mov
or
shrb
jp
popa
jb
scas
add
seta
sub
lahf
xor
dec
and
mov
inc
andb
fwait
mov
mov
mov
shrb
ret
jbe
add
push
fsubrs
js
mov
adc
add
fldcw
adc
gs
jp
adcb
pop
sbb
xor
call
in
add
repz
ret
xchg
rolb
es
pop
add
sbb
rcl
and
cmpsl
mov
or
sub
sub
sbb
mov
out
frstor
mov
iret
add
imul
fldt
sbb
scas
dec
out
sub
arpl
mov
push
mov
sbb
push
in
mov
adc
mov
adc
lods
int
testl
cmp
pusha
jns
dec
push
cmp
and
or
sub
cmc
inc
cmp
jp
lret
pusha
daa
xor
pop
sarb
pop
xchg
adc
shr
ret
and
or
es
mov
cmp
jp
out
dec
sub
aam
aas
push
fxtract
popa
cmp
sbb
adc
shrb
xor
sub
pop
jl
pop
jae
xor
arpl
aam
shl
push
dec
pop
adc
sub
adcl
movsl
ficompl
stc
inc
or
dec
daa
sti
pop
fistpll
dec
mov
pop
and
rolb
adc
pop
js
mov
shrb
sbb
ror
pop
fisubl
jl
subb
aam
es
pop
or
or
or
mov
sub
jmp
pop
push
mov
sbb
sub
pusha
mov
icebp
addr16
and
pinsrw
add
stos
mov
pushf
sbb
mov
call
push
xlat
rcl
clc
lods
repz
int
cmpsb
mov
loop
out
pusha
sub
lods
cmp
mov
cmpsl
mov
lea
and
clc
icebp
xorl
jo
jae
inc
dec
ret
aad
sbb
jecxz
sub
push
mov
adc
inc
pushf
lods
cmp
sbb
push
cmpsb
jle
or
out
mul
xchg
cmc
push
js
sub
sbb
inc
sbb
jb
lods
mov
mov
mov
pop
mov
mov
cmp
out
hlt
bound
mov
sub
test
scas
xlat
cmpb
pop
mov
nop
ds
div
fcomip
enter
inc
mov
adc
jne
mov
roll
iret
enter
ja
jge
mov
pushf
and
mov
movsb
movsl
mov
pop
pop
sbbl
or
cld
outsl
jl
and
loopne
inc
mov
aam
dec
imul
ss
rcr
sbb
dec
dec
adc
imul
push
jmp
jnp
push
in
cmp
inc
jmp
jns
push
daa
sbb
xchg
push
push
jnp
mov
sahf
mov
clc
dec
lret
pop
es
push
xor
push
xor
subl
pop
sbbb
out
mov
mov
arpl
out
roll
out
pop
push
pop
pop
pushf
push
and
and
enter
in
ret
push
leave
pop
adc
inc
dec
arpl
test
insb
push
cmpsl
xor
std
xchg
fnstenv
je
adc
cmp
test
jp
adc
inc
mov
mov
loop
mov
add
bound
mov
adc
lcall
imul
mov
ljmp
inc
sub
cli
push
in
mov
push
mov
jmp
cld
movlps
push
fidivrl
nop
movsb
push
scas
push
push
out
push
pop
mov
pop
cmp
repz
xchg
jmp
jmp
lret
sub
loop
aam
mov
addb
sbb
dec
std
sub
pop
mov
jmp
imul
movsb
shrb
ret
or
push
daa
enter
test
push
mov
cmpsb
mov
xchg
cmc
jb
imul
jge
cmpb
add
gs
jbe
mov
and
add
and
pop
xchg
loope
xor
push
cmp
xor
sub
dec
pop
aad
fdivl
adc
fiaddl
inc
adc
xchg
enter
aam
mov
cmp
push
pop
rcrb
mov
mov
subl
inc
xor
adc
iret
jmp
daa
scas
mov
dec
call
dec
mov
pop
cltd
xor
std
aas
jecxz
in
aam
sbbb
push
insl
add
lret
push
icebp
jno
xchg
lcall
in
loop
inc
mov
sbb
mov
adc
pop
fidivl
out
pop
pushf
pop
pop
dec
iret
jle
les
test
jbe
or
jle
dec
loope
out
xchg
xchg
lcall
and
stos
xchg
sub
mov
jbe
lcall
xchg
sub
dec
jae
xchg
sahf
add
les
push
xor
call
ret
add
stc
les
add
xor
cmpsl
and
add
out
ficompl
in
bound
cmpsb
pop
cwtl
fisttps
popa
lcall
mov
fmuls
lds
js
out
mov
jnp
xchg
inc
punpckhwd
lret
ss
jmp
loop
rcr
mov
imul
insb
dec
dec
pop
sub
add
add
cmpsb
shl
adc
insl
push
and
fiaddl
clc
add
hlt
cmp
ss
add
xchg
push
rorb
rcrl
jns
jb
fsubrl
sub
arpl
nop
sti
cmp
inc
jo
pop
mov
mov
fmuls
mov
int
insb
clc
mull
mov
fdivs
or
cmp
cli
adc
scas
lea
pop
mov
repz
cmc
xchg
cmpsb
inc
fadds
push
hlt
ljmp
mov
mov
flds
clc
jg
and
jecxz
sbb
mov
call
inc
in
imul
pop
xchg
push
mov
clc
and
out
cmc
jbe
in
mov
cmp
cltd
aam
sbbb
push
sub
adc
cmpsb
inc
mov
dec
inc
cmpsb
add
inc
pop
cwtl
xchg
cmp
sub
pop
hlt
mov
sbb
cli
sbb
mov
ss
sub
test
mov
lods
push
fcomps
je
repnz
xchg
and
rol
mov
lret
stc
xlat
mov
rcl
mov
jne
ret
push
push
cmp
fwait
push
fildl
dec
mov
cmpsb
nop
jmp
and
inc
lock
test
sbb
add
cwtl
add
pop
pop
shr
push
call
sbb
lret
mov
mov
add
jbe
mov
or
daa
xor
mov
js
cmp
cmpb
ret
stos
or
inc
add
jne
and
jge
pop
cli
xchg
in
lock
push
fisubrl
test
orl
push
adc
inc
add
js
movsb
or
pop
dec
aad
pop
inc
stos
xor
jl
imul
ja
and
push
scas
test
lods
cwtl
rorl
in
cmp
leave
lods
in
jne
push
xor
mov
outsb
ja
push
mov
fldcw
and
sub
clc
mov
and
fldl2e
jp
adc
fstps
imul
xchg
mov
xor
xchg
inc
jmp
lods
sub
stos
sub
out
dec
out
xchg
jbe
or
lock
mov
jo
es
outsl
jmp
out
out
ss
inc
xor
lret
push
and
rclb
aas
ja
jae
add
push
mull
sbb
nop
sarl
add
loopne
xchg
leave
jle
push
xorb
hlt
in
insb
aad
aas
add
pop
push
sbb
out
sbb
lock
repnz
cld
pop
mov
or
pop
pop
add
lock
jb
sbbb
sahf
mov
cmp
inc
fwait
ljmp
and
scas
xchg
in
mov
out
mov
and
cmc
add
xor
aad
add
cmp
mov
rcll
inc
shll
movsb
ret
xchg
sbb
mov
loop
out
and
test
mov
sarl
out
daa
cmpsb
scas
jns
xor
cmp
push
fistpll
pusha
add
pmaddwd
mov
jg
pop
rol
adc
out
add
fsub
dec
inc
push
xchg
loope
ret
and
xchg
lahf
fpatan
cmp
mov
in
inc
repz
xchg
mov
inc
inc
lock
fists
jns
xchg
and
lret
mov
jmp
mov
hlt
pop
sbb
xchg
sbb
push
jnp,pn
pop
es
add
mul
ja
ss
mov
xchg
cmpsb
pop
das
insl
cmp
dec
push
add
cwtl
orl
sti
arpl
pop
ja
or
loope
and
loopne
call
ljmp
aas
xchg
shrb
jg
std
in
lods
testb
cs
push
push
jns
jp
mov
add
not
daa
dec
or
xor
sub
call
pop
lods
jb
aam
or
jg
notb
sbb
and
out
leave
movb
je
cwtl
stos
pusha
js
aas
jmp
or
mov
jb
push
in
mov
push
loope
lock
sti
push
cmp
xor
jb
pop
aas
ret
test
inc
in
mov
cmp
aam
pop
push
sbb
mov
nop
mov
icebp
sub
jg
ds
mov
jmp
lret
mov
inc
add
int
popf
cmpsb
sbb
jl
push
push
pusha
dec
lahf
idivl
insb
mov
push
ss
outsl
les
leave
xor
es
enter
sahf
mov
mov
dec
inc
add
ret
insb
sahf
add
or
pushf
popa
pop
adc
and
imul
sbb
data16
das
push
xor
sub
xor
jno
mov
pop
sahf
jae
lea
das
cs
sahf
es
add
sub
popa
mov
xor
lock
jmp
push
outsb
in
lret
ds
bound
pop
add
out
cmp
xchg
jne
lds
lods
test
cmpsb
lods
or
push
les
sub
adc
mov
lods
into
dec
jns
in
cmp
push
or
fwait
sub
xor
test
inc
pop
mov
lahf
loope
cli
add
fcomip
push
jno
mov
cmp
loop
add
scas
shll
xor
add
and
pop
gs
frstpm(287
fistpl
in
fisubl
lea
push
mov
fistpll
movsl
or
sub
fidivrl
push
pop
in
sub
lock
adc
xchg
int
daa
xor
cwtl
mov
xor
outsb
push
ja
xchg
pop
fistpll
xor
mov
in
inc
push
add
fstl
aas
repnz
push
sub
add
add
adc
jnp
cld
hlt
jnp
lock
iret
inc
or
repz
add
pushf
cmp
push
das
pushf
out
loopne
xchg
push
rolb
int
mov
int3
call
fucomp
faddp
outsl
sbb
ret
jl
outsb
jbe
push
movsl
ljmp
fisttpll
fsubl
iret
fs
push
add
les
sahf
dec
test
idivb
add
popl
mov
aas
ret
ja
add
sbb
xchg
jnp
dec
xor
xchg
xor
or
repnz
cmp
xlat
pop
sub
or
decb
mov
movsl
dec
add
pop
in
mov
gs
cmpsb
pop
xchg
stc
add
je
icebp
in
es
repnz
ss
loopne
dec
dec
jle
out
xchg
call
rolb
loope
aam
fistpll
arpl
mov
or
gs
pop
sti
push
int3
push
incl
aaa
jae
sbb
mov
pop
xchg
test
inc
sahf
data16
cmp
decb
mov
and
imul
loop
movsl
ljmp
loop
or
shll
aas
insl
mov
into
fs
decl
sub
inc
js
loopne
xchg
mov
lea
pushf
xchg
insl
in
mov
pushf
mul
lea
dec
filds
xchg
cmp
push
dec
iret
insl
fiaddl
outsb
add
or
imul
pop
sub
cmp
test
les
xor
leave
sahf
in
ljmp
or
sbbl
xchg
jecxz
dec
sub
inc
je
sarl
push
mov
mov
dec
mov
xchg
mov
jl
cmpsb
ret
inc
sti
mov
jne
inc
or
jb
inc
cmp
and
stc
in
pop
notb
sbb
mov
nop
lds
lods
jl
rclb
push
push
dec
dec
jecxz
add
add
mov
clc
mov
adc
lds
stos
fsubl
sub
dec
lret
push
popl
xchg
flds
movsl
add
and
dec
xchg
loope
push
ret
in
add
mov
mov
sti
mov
adc
mov
pop
mov
add
jbe
ss
mov
int
or
pop
addr16
ret
clc
in
ja
pop
cmp
mov
fwait
pop
fcmovnu
jbe
xor
popf
mov
sbb
fldz
sbb
mov
pop
cmpsl
sbb
lret
outsl
mov
mov
cld
xor
insb
push
mov
call
inc
repz
mov
fdivs
popa
pop
aaa
jne
scas
lret
push
ret
pushf
sbb
ftst
scas
nop
dec
test
iret
loope
pop
mov
mov
cmp
clc
jge
add
push
rcrb
xchg
fsubs
sbb
mov
push
add
ss
xchg
enter
mov
mov
sarl
xchg
inc
or
dec
insl
adc
xchg
xchg
jecxz
addl
ds
sbb
push
fwait
push
mov
jo
cmpsl
das
or
adc
outsb
push
stc
outsb
mov
sbb
pop
ja
jo
subb
mov
add
outsl
jmp
adc
int
aam
cmpsb
jno
ds
mov
mov
dec
arpl
jle
push
and
jbe
xchg
cmp
enter
aad
xchg
xchg
push
or
pop
sub
gs
mov
xchg
pop
cmpsl
sbb
xlat
cmp
dec
cli
out
mov
push
jo
or
jl
push
push
push
mov
add
and
rcrl
inc
hlt
scas
in
pop
mov
or
mov
test
and
inc
scas
mov
dec
rol
out
ds
testl
dec
test
sbb
je
outsb
leave
pop
dec
loopne
rcrb
push
shrl
jmp
aam
jno
pop
mov
out
test
and
clc
xchg
outsb
mov
jl
or
dec
add
pop
inc
jmp
push
bsr
sbb
adc
imul
mov
mov
int3
xchg
inc
xchg
lahf
sti
roll
enter
jbe
xchg
push
int3
loopne
dec
in
pop
push
push
arpl
sbb
sbb
xchg
push
xor
jo
sub
jns
shrl
stos
pushf
mov
loop
scas
les
mov
push
xchg
push
mov
cmpsl
mov
and
lret
hlt
cmp
lahf
mov
sub
push
or
sti
jo
out
xchg
push
icebp
divw
cmpsb
push
jns
and
sbb
and
xor
push
mov
repz
and
mov
fcomps
mov
or
les
dec
lcall
leave
push
jle
mov
lock
pop
add
sti
fisubl
lock
add
push
fistpl
and
add
inc
xor
fnstcw
cmpsb
xlat
sbb
jae
or
sub
leave
xchg
mov
orl
cwtl
xlat
mov
loop
push
jmp
les
push
push
or
jae
jge,pn
cmpl
push
mov
pop
sub
mov
ljmp
in
cmp
hlt
lods
cmp
fidivs
cmpsl
jmp
jle
and
ja
adcb
mov
mov
jl
lret
aad
and
dec
pop
pop
xchg
xchg
outsb
add
jp
add
xorb
int3
dec
and
dec
inc
hlt
or
add
mov
cmc
dec
mov
in
in
ret
cmp
sbb
or
sbb
mov
adc
mov
xor
cmp
jecxz
aad
xchg
sbb
mov
sub
ficompl
lea
ret
insb
jp
clc
push
test
xlat
in
rcr
xchg
lahf
add
pop
cmp
pop
mov
jne
in
adc
jb
fisubrl
clc
push
xor
jp
adc
ror
sub
mov
lds
xor
sbb
addr16
inc
fdivl
mov
and
imul
and
insb
or
pop
push
inc
push
unpckhps
scas
insb
pop
push
int3
xor
mov
loopne
mov
lss
pop
data16
cli
test
and
fistpl
sub
das
sub
imul
dec
pop
mov
xor
dec
stos
jae
sbb
push
sarl
jae
jg
jbe
mov
cltd
or
pusha
fstps
call
sbb
shll
mov
fwait
stos
push
push
inc
add
sbb
scas
or
jp
lods
xchg
scas
sbb
xchg
cmp
xchg
shrb
mov
sub
or
and
lahf
dec
and
je
inc
ret
cli
loop
and
and
sbb
stos
movsl
dec
cs
fistl
pushf
lahf
cmp
add
in
jnp
mov
push
lcall
call
adc
sub
fstl
cmpsb
push
xor
dec
cli
cmp
dec
sbb
xor
lock
mov
mov
scas
lds
pusha
cmp
add
cmp
iret
mov
aad
xchg
andl
ret
cltd
lods
lods
sub
leave
push
stc
clc
in
add
js
es
orb
add
out
fcomp
cli
sar
mov
push
fcompl
jg
and
adc
mov
adc
and
mov
test
push
add
int3
adcb
push
xor
sbb
out
cmpsb
cli
mov
lods
bound
jae
sub
sbb
enter
not
and
mov
nop
lea
xor
jne
iret
sub
les
push
cmp
pop
into
pop
xor
sub
mov
fistps
lea
cltd
lods
int3
jno
xor
movl
add
sub
push
or
pop
loop
push
ds
sub
and
mov
adc
or
push
fmul
frstor
pop
into
pop
mov
mov
sub
dec
mov
push
out
pop
scas
insl
data16
sbb
lret
ret
jle
and
push
paddusw
fistpll
cmpsb
inc
add
sub
sbb
jecxz
sbb
or
push
repz
cs
push
insb
imul
push
push
int
push
imul
enter
fiaddl
in
xchg
push
in
inc
cmp
push
ret
aaa
notb
nop
dec
xchg
cltd
hlt
xor
sub
popf
jecxz
shr
out
adc
push
out
and
mov
mov
sbb
rorl
pop
pop
int3
mov
jp
adc
imul
jge
and
dec
pop
rcr
adc
cmpsb
push
clc
test
faddl
xor
inc
or
aas
ja
cmp
cmp
or
addl
add
add
fldcw
sub
lahf
cltd
and
lcall
xchg
xor
fldcw
or
clc
or
inc
add
add
mov
and
xchg
les
sub
push
jne
in
call
adcb
adc
push
daa
scas
mov
xor
or
mov
inc
pop
push
mov
or
add
sub
shll
pop
mov
xchg
std
push
xor
cmc
stos
add
aam
or
cmp
stc
push
aas
bound
out
lea
into
adc
pusha
xchg
fs
or
mov
push
pop
jge
lods
xchg
pop
push
cmp
sbb
loope
std
push
sti
rcrl
and
mov
int3
cwtl
push
jp
xchg
in
int
in
mov
cmc
filds
das
adc
pop
repnz
xchg
and
sbb
jns
ja
fsqrt
cmpsl
cmp
cmp
movsb
or
mov
dec
or
bnd
cmp
pop
faddp
mov
and
cmpsb
and
fldl2e
icebp
inc
mov
jae
leave
bound
push
pop
repz
ljmp
and
mov
sub
loope
jp
inc
mov
lea
and
sarb
jl
jg
xchg
leave
cmc
jns
out
mov
cmc
or
push
inc
insb
push
jle
mov
hlt
aaa
xchg
or
das
push
jg
sbb
push
ficompl
mov
pop
pop
cmp
out
cs
xchg
sahf
lahf
stos
fs
cltd
rcr
addl
aad
push
pop
push
scas
ss
adc
mov
push
iret
mov
stos
fwait
ret
cmp
out
mov
faddl
in
enter
mov
aam
out
and
in
or
xchg
mov
push
mov
pop
shl
mov
pop
pop
rolb
test
cmp
pop
lahf
in
mov
jb
sub
pusha
in
mov
hlt
pop
xchg
cmp
inc
push
mov
pop
repz
fidivl
pop
adc
jle
jno
lds
rclb
lcall
push
push
movsl
dec
imul
fsubrp
popf
jle
fsubs
lcall
icebp
add
or
into
xor
mov
xor
jb
loopne
fsubs
push
sub
lahf
sahf
mov
int3
mov
incl
out
sbb
dec
sub
mov
sub
mov
stos
lret
je
punpckhwd
pop
lea
rorl
lea
into
stc
into
gs
adc
bound
rcll
hlt
stos
sbb
xchg
xlat
divl
inc
test
lea
push
xchg
push
xchg
negl
push
fiaddl
adc
sub
leave
mov
xor
jmp
cmp
bound
out
xchg
test
mov
ficoms
bnd
icebp
and
loop
push
call
hlt
dec
mov
push
inc
inc
sbb
sbb
and
mov
rorb
les
scas
sbb
sub
cmp
jecxz
test
mov
shlb
cmp
xor
mov
cld
fmull
test
or
loop
mov
ja
xchg
in
mov
sub
std
cmp
jb
xchg
add
scas
xchg
aad
jne
or
and
test
adc
jb
or
imull
xor
mov
popa
xor
dec
or
jae
push
or
lds
jge
leave
dec
stos
add
cmpsl
inc
and
cld
or
bound
jp
fs
pop
push
adc
ss
es
enter
add
sub
sub
cmpsl
bound
loop
xchg
mov
push
int
pop
or
aad
jge
fisubs
mov
aas
and
push
mov
leave
aad
pop
push
cmpsb
pop
int3
ja,pn
mov
mov
mov
dec
lods
mov
jge
addr16
sti
pop
mov
jne
push
sub
sbb
adc
fistpl
dec
push
seto
adc
sbb
cs
je
aam
sahf
movsl
icebp
jecxz,pn
xchg
sub
cwtl
add
mov
dec
xor
cs
jp
divl
loopne
orl
notb
push
mov
mov
push
inc
fsubrl
xchg
pop
andl
jge
sub
popf
lds
cmp
pop
sub
xchg
push
mov
inc
cmp
jmp
adcl
imul
inc
mov
jl
in
add
xor
pop
daa
or
inc
hlt
or
xor
and
xor
imul
int3
in
inc
jns
int
push
roll
lds
pop
mov
les
add
sar
push
mov
and
push
in
jecxz
dec
dec
dec
dec
pop
inc
xchg
and
or
inc
aas
repz
cmpsb
sub
inc
in
push
jno
cmpsb
sub
adc
inc
lcall
pop
mov
cmc
clc
incl
mov
mov
std
jo
shl
pop
fdivs
pop
mov
cmp
sarb
dec
repz
mov
dec
mov
fsts
dec
repnz
sbb
ret
test
push
jmp
or
push
lds
iret
push
out
cli
mov
popl
idivl
jns
and
and
call
jb
xor
dec
push
cs
outsl
int
jo
addl
imul
xor
xchg
jg
aad
outsl
sbb
test
cs
pop
or
or
jle
lock
insl
daa
and
adc
inc
ret
add
adc
jg
popa
inc
pop
popf
fwait
dec
sarl
outsb
hlt
mov
mov
xchg
adc
fists
cmc
xor
cli
sbb
dec
sub
lods
hlt
lock
adc
cs
push
xchg
in
push
fnstcw
pop
mov
pop
mov
xor
idivb
iret
fst
push
scas
mov
outsb
popa
xchg
mov
cmp
sub
jns
mov
jb
scas
icebp
test
cltd
add
int
lods
xchg
dec
pop
out
lahf
ljmp
pop
xlat
jmp
push
addr16
mov
pop
out
cmp
pop
mov
lahf
icebp
fwait
push
out
mov
jp
imul
imul
outsl
sub
xor
mov
pop
je
je
pusha
orl
mov
iret
or
adc
add
push
lea
stos
inc
pop
fwait
pop
push
sub
ret
xchg
ljmp
divl
xchg
sub
lock
or
adc
adc
jnp
loope
into
into
lds
test
sbb
mov
add
leave
add
sub
xchg
xchg
lahf
ja
lcall
push
push
push
dec
pop
ret
cmpl
sub
dec
cmpsb
pusha
hlt
mov
lea
cmp
outsw
popa
not
lods
fidivs
lods
sub
icebp
jne
popl
mov
ret
add
aas
out
repz
cmp
pusha
pop
popf
cmpsl
inc
push
sbb
and
push
and
shlb
cmp
movaps
cld
jmp
stc
sub
fstl
sub
cmp
sahf
fwait
and
mov
test
jmp
sbb
and
fs
jl
test
popl
hlt
lret
xchg
pop
stc
mov
ja
les
pushf
add
out
ret
xchg
pushl
addr16
xor
ds
sub
or
clc
or
push
and
out
stos
fldt
adc
aas
jle
cmp
cld
mov
into
icebp
rcrb
popa
mov
or
loope
das
ret
fidivl
lods
dec
xlat
rorl
sub
push
mov
add
fmuls
loopne
gs
dec
adc
test
divl
rcrb
out
cld
out
add
xchg
das
jne
mov
decl
ds
xchg
or
or
jbe
or
lods
imul
icebp
push
push
rorl
sbb
and
cwtl
mov
dec
aad
cmp
aam
xchg
pop
mov
inc
aam
in
and
inc
repz
outsb
dec
popa
out
xchg
jae
fcmovnb
divl
inc
arpl
cmpsl
dec
mov
and
adc
mov
cmp
ljmp
push
rclb
ljmp
cmc
jns
ljmp
adc
stos
or
mov
dec
mov
xor
mov
sub
adc
push
adc
xchg
clc
push
addr16
outsb
inc
lahf
lock
and
cltd
sti
jae
push
rcrl
shll
in
insb
dec
pop
pop
fsubrs
dec
push
enter
les
ljmp
ljmp
pop
dec
xlat
add
repnz
rorb
sbb
pop
jg
push
out
mov
dec
je
test
daa
fs
jo
mov
jmp
mov
pop
xchg
inc
mov
out
adc
jne
mov
div
ljmp
xchg
xorb
jbe
mov
mov
push
xchg
rolb
outsl
out
arpl
leave
push
sarl
ds
out
add
mov
cmpsb
ret
push
push
dec
in
cmp
xor
lods
out
xchg
push
test
je
stos
pop
sbb
pop
push
sub
cmp
xlat
push
rolb
mov
pop
fstl
xchg
stc
inc
movsl
pushf
loop
lcall
xor
mov
pop
loope
xchg
sub
cli
mov
jge
cmp
dec
mov
decb
out
hlt
pop
jecxz
adc
cli
addr16
repnz
iret
dec
mov
mov
mov
leave
andl
popa
into
xor
or
and
cld
movsl
pop
dec
ljmp
outsl
mov
in
fcom
pop
imul
dec
jns
lret
fadd
adc
inc
jno
dec
icebp
push
cmp
sub
push
cwtl
loop
and
xchg
mov
jle
in
adc
mov
mov
jl
cld
gs
mov
std
inc
jle
xor
incl
add
inc
pop
std
in
or
fnstenv
jp
outsb
push
mov
push
imul
push
scas
jo
lcall
out
ds
je
or
mov
add
icebp
ds
idiv
mov
out
ret
clc
or
jb
loop
mov
dec
and
aad
repnz
push
push
insb
aam
stos
lahf
and
lock
push
inc
ret
aas
mov
rolb
lods
outsl
cmc
les
xor
pop
lds
lcall
mulb
xor
test
clc
push
cmpsl
add
scas
mov
dec
ss
pop
cmp
cli
decl
mov
add
jle
sbb
ret
jl
inc
and
test
sbb
testb
shlb
inc
imul
jb
fcomps
jle
inc
push
pop
pop
pop
movsl
jb
ja
cli
push
scas
jo
insl
inc
xchg
popa
fwait
cmp
mov
xchg
jnp
add
ljmp
inc
push
ljmp
sub
or
in
stos
stos
push
mov
dec
insl
in
push
inc
cmpb
icebp
sub
aad
pusha
jg
cs
jo
imul
lock
jne
mov
jmp
in
jp
or
xchg
and
add
fdivr
inc
xor
ja
je
outsl
xchg
mov
sbb
lret
sub
push
xchg
scas
pop
jmp
jae
gs
cmp
mov
mov
hlt
lret
pop
inc
nop
push
xchg
sbb
xor
sbb
mov
sub
stos
loop
fisubrs
pushf
push
bound
pop
sub
mov
pop
inc
and
push
lret
addr16
cmpsb
xchg
ror
jecxz
jle
xor
fwait
scas
rol
bound
pop
cwtl
orl
jbe
out
popa
shll
ss
call
jbe
lcall
fsubrp
lret
pop
ret
xchg
pushf
and
js
pop
dec
lahf
shl
mov
or
leave
clc
adc
add
sub
je
xchg
scas
nop
out
outsl
in
xchg
imul
push
cltd
push
std
imulb
test
cltd
aas
xchg
div
testb
nop
enter
pusha
in
cltd
scas
fprem1
inc
mov
mulb
insb
or
lods
stos
arpl
sbb
bound
les
mov
inc
add
lret
loope
sbb
iret
pop
sti
cltd
negl
push
push
add
mov
inc
and
aad
xor
sbb
sbb
into
mov
jecxz
pop
pop
je
inc
mov
xor
fwait
movsb
inc
xor
cmp
dec
sub
lret
fldz
jle
jae
in
enterw
mov
aas
jmp
js
dec
fstpl
jmpw
mov
in
mov
jle
jbe
jge
inc
mov
call
push
xor
or
ret
adc
call
inc
fwait
sub
pop
mov
out
test
push
cmp
mov
icebp
in
push
icebp
sbb
std
shrl
xor
xchg
mov
mov
lds
xchg
iret
outsl
xchg
lret
repnz
test
sub
cltd
testl
repz
pop
sbb
pop
fxch
ljmp
xchg
ror
in
mov
mov
clc
and
mov
add
inc
ror
cld
and
sbb
imul
xlat
xor
rorl
scas
mov
push
push
lods
lea
ds
imul
and
mov
das
sub
sbb
mov
xchg
push
aaa
jnp
adc
mov
sbb
faddp
pop
sub
mov
test
push
xor
fisubl
jb
mov
iret
enter
arpl
ds
sub
add
in
mov
sub
push
lock
daa
fs
push
mov
in
cmp
in
sbb
in
decl
xor
xchg
iret
push
push
and
insl
rcll
adc
push
mov
mov
sbb
and
dec
push
dec
negl
mov
flds
cmpsb
pop
outsl
out
xor
cmp
bound
mov
data16
rorl
pop
pushf
adc
cli
xchg
jg
push
jne
movsb
push
out
and
lret
add
push
into
leave
leave
dec
rep
mov
push
push
mov
mov
mov
pushf
fnstenv
sbb
sub
pop
ja
imul
sbb
rcr
mov
cwtl
inc
imull
or
mov
lods
cmp
loop
pop
pop
adc
mov
and
adc
mov
hlt
push
lods
and
aaa
push
mov
and
jp
adc
jb
add
jle
mov
sub
jg
leave
pop
xor
mov
fdivp
mov
adc
das
das
mov
inc
xor
rcpps
aas
jns
fwait
sbb
ds
in
adc
sub
jno
push
push
cs
add
jnp
or
cmp
push
out
push
mov
sbb
je
fmull
and
popa
in
int
push
dec
std
aam
push
call
bound
insb
pop
sub
in
das
pop
lahf
adc
fimull
in
xchg
bound
pop
aad
mov
adcb
shl
and
mov
and
fwait
ret
inc
out
push
cmpsl
fdiv
xchg
jge
or
push
repz
insb
leave
imul
call
or
out
mov
cmp
dec
data16
ljmp
cmpsl
int3
addl
xor
xlat
sbb
repz
inc
mov
je
enter
mov
sbb
popf
stos
nop
arpl
lret
push
pop
jbe
sub
mov
cmp
dec
pop
sub
loope
pusha
in
repnz
mov
std
xorb
xchg
popa
lcall
into
adc
xchg
and
cmp
adc
xchg
fwait
insb
and
and
sahf
adc
pop
aas
mov
cmc
popa
pop
inc
mov
and
std
sub
cmp
jo
sub
mov
fidivrs
or
dec
fwait
xchg
imul
add
daa
ficoml
xchg
not
push
inc
xor
in
sbb
sub
jmp
dec
xchg
dec
xchg
xor
jbe
mov
cmp
cmc
aas
shrb
sarb
bound
icebp
lcall
sahf
pushf
sbb
arpl
repnz
loope
ud2
cmp
fistps
xchg
mov
andl
pop
imul
sbb
out
mov
rclb
shlb
imul
push
aam
scas
push
shll
jge
test
mov
fldcw
iret
icebp
outsl
ss
and
xchg
jge
inc
push
insl
sti
sub
insl
cmp
mov
call
xor
adc
inc
push
adc
jbe
jge
or
sub
jecxz
je
adc
add
dec
inc
and
mov
mov
add
out
mov
nop
mov
outsl
lret
repnz
sub
ret
imul
aam
jge
mov
scas
jb
leave
popl
lahf
movsb
push
call
sub
xor
add
mov
outsl
leave
or
mov
cmpsb
sub
xchg
dec
cmp
push
shlb
das
bound
fistpl
add
cmp
nop
jb
mov
mov
sub
lods
imul
xor
ja
idivb
push
and
stos
ret
mov
bound
pop
pop
and
inc
ret
jns
mov
push
pop
add
xchg
fwait
inc
es
repnz
cmc
inc
lcall
into
xorb
and
pusha
movsl
mov
sub
mov
cmp
clc
dec
icebp
jmp
out
mov
xlat
lcall
mov
xor
sbbl
cs
mov
sbb
xchg
les
xchg
sbb
cli
inc
cmc
mov
lods
or
mov
in
scas
mov
in
and
xchg
shll
aad
ret
lcall
pop
add
inc
ja
frstor
into
rorl
jmp
xchg
jbe
test
or
out
sub
or
cltd
insl
pop
mov
lret
enter
or
lods
or
fnstenv
mov
dec
xor
mov
push
xor
fwait
add
sarl
xor
movl
mov
dec
jnp
loop
sbb
iret
dec
inc
in
and
repnz
cmp
jl
mov
rorb
sbb
dec
stos
cmp
xchg
call
xchg
int
rolb
and
fisubl
push
adc
dec
int3
outsl
xchg
inc
js
test
xchg
jb
jno
sub
lahf
shll
mull
negb
mov
loop
dec
repnz
fdivrs
out
sbb
aam
dec
lcall
dec
or
push
xchg
and
push
enter
sbb
dec
push
dec
jmp
fwait
adc
scas
sub
out
dec
ret
cli
loope
cwtl
pop
jb
jo
mov
addr16
into
push
xchg
xchg
cmp
popf
xchg
xor
in
add
popf
mov
jbe
ret
cs
jge
cmc
decl
lods
test
std
mov
fcmovu
test
data16
jle
sbbl
pop
inc
inc
lahf
mov
rcrl
std
and
outsb
movsl
leave
pop
fsubrl
fbstp
enter
adc
push
mov
ljmp
scas
shlb
adc
lea
jne
enter
mov
sbb
imul
in
mov
in
hlt
cmp
jecxz
push
mov
mov
push
ja
idivl
es
mov
mov
jmp
imul
ret
mov
push
mov
loop
dec
outsl
stos
cld
cmp
bound
in
stos
lock
add
in
popf
in
fnsave
dec
adc
xor
xchg
out
or
aam
xor
stc
test
js
add
and
xchg
insl
lret
sar
pop
xchg
daa
sub
stos
shll
jnp
pop
mov
mov
ret
sbb
icebp
out
scas
stc
and
jp
mov
mov
sub
lcall
cmpsb
jns
packssdw
loopne
or
inc
add
imul
add
cmp
outsb
and
sbb
mov
insl
test
fmull
pop
push
loopne
pop
data16
idiv
mov
mov
lret
enter
sahf
cmp
lea
add
cmp
push
mov
nop
pop
shlb
sbb
push
dec
pop
mov
xchg
gs
xchg
add
cmc
mov
movsl
dec
and
mov
call
cltd
insl
inc
xchg
hlt
lds
cmp
or
xor
mov
or
inc
subb
inc
xor
and
ljmp
repz
jno
imul
jb
jle
mov
sti
pop
leave
mov
pop
mov
jns
daa
xor
push
jne
jne
fstpl
mov
mov
or
or
mov
xchg
push
stc
cmp
fldenv
sbb
test
in
hlt
hlt
cmp
pandn
adc
loope
dec
lret
lcall
add
push
fisttps
std
rcrl
mov
imul
dec
enter
push
and
insb
jo
movsb
shll
or
cmpsl
mov
iret
xchg
les
cmpsl
push
sub
fnsave
loopne
mov
dec
lods
mov
shlb
pop
or
cmp
js
push
mov
lock
cmp
mov
repnz
add
aam
ss
scas
sub
push
mov
std
xor
out
repnz
xchg
mov
sbb
xchg
std
push
cmp
sarl
cs
add
push
into
ret
dec
dec
xchg
int
push
jns
inc
aad
sub
enter
loopne
mov
aaa
sbb
push
mov
fadd
je
mov
mov
fistpll
dec
or
xchg
call
outsl
inc
ds
push
pop
test
or
les
cli
sub
dec
xor
xor
mov
pusha
mov
sti
mov
add
jbe
orb
sub
mov
sarl
cmp
aad
dec
or
add
pop
sub
arpl
mov
jl
pop
adc
pop
xchg
mov
test
jmp
lock
rcll
faddl
movsb
xchg
and
icebp
test
push
sub
cld
roll
lahf
and
jecxz
stc
xchg
mov
cli
jo
or
ja
mov
jae
ret
jns
inc
sbb
push
int
rcll
lods
and
pop
ret
mov
cltd
out
mov
pop
mov
push
notb
pop
push
nop
add
add
data16
push
int
hlt
sahf
fiadds
lahf
mov
aam
movsl
stos
mov
mov
push
ds
push
shl
add
mov
repnz
pop
adc
inc
cltd
add
or
pop
xor
pop
mov
push
push
cmc
decb
add
cmpsb
std
xor
jnp
ja
mov
or
insl
mov
jl
sbb
xor
add
fistpll
sti
in
inc
inc
mov
lds
pushf
adcl
sub
pusha
clc
sbb
xchg
mov
sub
sub
push
dec
dec
fmull
jne
out
pop
int
dec
insl
xor
in
test
dec
outsb
push
cmc
xlat
pop
pop
jae
xor
jbe
cwtl
negb
das
sbb
mov
lcall
ret
inc
mov
fucom
xor
enter
lea
ds
lret
and
je
daa
dec
push
or
in
xchg
jp
adc
cs
lods
add
out
fcmovnbe
lods
inc
rclb
clc
mov
pop
jge
mov
addl
sub
dec
mov
and
shll
fcomp
fwait
push
addr16
lea
mov
push
or
mov
insl
or
loope
stos
cli
ret
fs
mov
loop
scas
lret
loope
and
adcb
jne
loop
rorl
sbb
scas
xchg
popf
jge
mov
sbb
push
ret
inc
dec
inc
add
js
inc
fstp
aad
sbb
js
jecxz
lods
sti
add
ficomps
in
in
push
mov
jmp
mov
je
lret
mov
add
int
call
inc
movl
xor
iret
test
xchg
mov
xchg
jo
mov
xchg
out
add
inc
stos
inc
sbb
cmp
fistps
pop
xchg
aad
or
sbb
cmpsl
mov
ret
jno
stc
cmp
mov
std
gs
adc
lahf
inc
std
imul
push
cmp
mov
popf
sbb
jl
and
cmpb
cmpsb
xor
xchg
out
mov
sub
in
fstpt
loope
mov
mov
push
jmp
and
push
shl
mov
push
fisttpl
inc
and
repnz
pop
out
hlt
addl
and
fnstcw
pop
out
bound
dec
mov
fildl
orl
cli
stc
mov
insb
xor
adc
in
test
decl
in
cmpsl
test
mov
push
sbb
das
cltd
ficoms
test
movsbl
add
and
xor
pop
fimull
int
xor
mov
imul
mov
mov
movsb
and
daa
sub
cltd
mov
int3
push
stos
push
xchg
out
xchg
mov
dec
mov
ljmp
scas
scas
psllq
sti
nop
pop
xchg
roll
dec
add
lahf
cmp
jo
scas
push
cltd
jl
scas
add
mov
pop
addr16
inc
icebp
xchg
adc
imul
sbb
das
js
gs
sub
insl
xchg
bound
out
leave
ror
mov
pop
push
sub
ljmp
sub
mov
push
xchg
ljmp
test
fdiv
stos
jp
xor
adc
repnz
adc
je
fs
aad
data16
test
add
orl
int
call
loopne
lret
lahf
mov
jl
scas
inc
fisttpll
mov
test
xor
lahf
sti
fcomps
out
mov
add
jae
add
mov
mov
in
mov
fildl
sahf
pop
push
or
das
daa
pop
lods
je
mov
lods
fldt
scas
fisubrl
insb
add
das
jp
lret
push
cmp
lcall
push
adc
loopne
dec
push
xchg
lea
daa
pop
push
mov
jmp
xadd
icebp
insl
ss
pop
cld
push
mov
divl
sti
lea
inc
cmp
in
lcall
and
dec
iret
push
pop
gs
test
stos
popa
push
dec
mov
or
out
xor
adc
je
push
and
xchg
dec
pop
sub
adc
or
mov
je
in
or
mov
adc
arpl
mov
pop
or
fwait
sub
cmc
xchg
fnsave
flds
popa
int
inc
bnd
push
cmp
sub
lret
fdiv
dec
jo
xor
push
outsl
hlt
fcmovnbe
stos
imul
popa
mov
dec
in
or
mov
outsb
pop
in
push
ss
inc
lods
pusha
je
aas
cli
nop
out
cmpsl
push
enter
repz
andb
jle
dec
arpl
stc
mov
dec
stos
xchg
adc
xchg
add
add
stos
movsl
pop
add
sbb
add
sbb
push
push
lahf
imul
or
jp
xchg
and
pop
aam
andb
jnp
or
xor
adc
leave
push
or
push
movsl
mov
adc
sbb
mov
fsubl
xor
xchg
dec
xor
and
jl
ret
or
test
dec
imul
iret
in
jnp
ljmp
mov
frstor
std
test
xor
pop
lock
outsb
pop
stos
xor
adc
mov
jmp
cwtl
test
or
enter
mov
fisubrl
xchg
in
jmp
cmp
test
scas
dec
or
mov
pop
jbe
rcrb
cmpsl
les
rorl
sbb
subl
cmpsl
adc
imul
xchg
add
mov
jae
mov
dec
insb
pop
out
pop
js
ret
pop
lds
movsl
push
adc
or
nop
aas
adc
jge
mov
add
ljmp
sbb
mov
addr16
in
push
add
dec
or
mov
scas
pop
sbb
iret
sbb
mov
hlt
shll
test
mov
mov
rclb
repz
or
xchg
scas
add
bound
loope
sbbb
fwait
mov
lahf
pop
dec
inc
mov
sbb
jb
cmp
cmp
sbb
sbb
cmp
out
pushf
stos
insb
movsl
add
mov
in
sub
bound
or
mov
fmull
xchg
imul
leave
xor
sbb
push
dec
fisttps
push
cmpsb
push
into
mov
jecxz
fisttps
or
fstl
jmp
mov
dec
incb
into
aam
cli
addr16
insb
fwait
xchg
in
pop
add
mov
or
jae
inc
and
call
sub
xchg
addb
hlt
or
push
lds
jns
leave
out
xchg
sahf
imulb
in
mov
or
adc
push
std
and
shlb
mov
or
pop
es
fwait
ja
xlat
icebp
mov
mov
aaa
nop
add
aam
pop
fsubrs
clc
ja
inc
mov
aas
orl
and
mov
dec
popf
mov
sub
nop
jns
dec
aas
iret
jb
nop
jne
or
iret
mov
icebp
cwtl
call
mov
jp
ret
mov
xor
cmp
mov
out
adc
mov
and
mov
insl
and
xchg
andb
loopne
es
sub
or
adc
cld
jmp
lahf
jnp
jg
mov
and
xlat
mov
sbb
jecxz
daa
lods
shl
mov
jge
out
bound
lock
test
sbb
jns
sbb
out
scas
jg
call
fwait
mov
xchg
mov
popa
addb
sbb
sub
inc
mov
sbb
frstor
mov
loop
xchg
sahf
sbb
sahf
pop
cmp
or
jae
sub
jg
xor
dec
mov
rolb
imul
enter
cltd
arpl
adc
rol
xchg
imul
lret
lea
iret
or
xchg
cmp
or
imul
cmpl
push
push
and
add
jne
pop
pop
aam
mov
in
test
enter
or
and
ret
int
push
push
call
fwait
dec
mov
cwtl
pop
cmp
add
test
mov
cmp
add
aad
xchg
jb
dec
mov
jecxz
or
push
je,pn
mov
xchg
cmc
sub
in
lea
test
push
aam
cltd
pop
sub
push
dec
out
cmp
lret
sbb
mov
mov
and
es
jae
sbb
daa
outsl
lods
xchg
dec
lea
cltd
ss
iret
pushf
and
clc
adcb
int
push
push
push
push
ss
sub
ret
or
stc
mov
imul
cli
jno
fcmovnbe
in
sahf
lcall
mov
mov
sbb
mov
and
stos
mov
jmp
push
add
add
sahf
aad
jbe
in
jle
aaa
fists
jnp
push
sub
insl
mov
mov
mov
cltd
lock
xchg
test
push
mov
leave
pop
int
push
push
push
sbb
pop
or
lcall
add
shrb
outsb
out
or
mov
aad
jb
inc
call
pusha
mov
add
mov
je
push
push
xor
push
call
dec
push
xlat
xor
pop
iret
inc
inc
imul
dec
scas
movsb
add
loop
or
jns
cmp
loop
push
repz
xchg
push
cs
adc
xchg
push
jbe
or
push
cmp
pop
outsb
leave
std
adc
dec
lret
jno
mov
arpl
loopne
adc
shrl
orl
xchg
imul
gs
ljmp
jbe
dec
jl
ror
scas
fldcw
lret
push
dec
pop
fdivrs
cmc
shrb
loopne
pop
and
push
in
jmp
jl
mov
stos
sub
and
jbe
jp
inc
vpsubsb
push
rcl
imul
xchg
pop
inc
jg
sahf
xor
lcall
fmulp
push
adc
sub
fs
int3
adcl
pop
dec
xchg
aas
xor
mov
xor
or
dec
dec
adc
fsubrs
inc
rorb
sub
cmp
add
add
lock
xor
pop
mov
ljmp
ja
popf
into
sub
sub
arpl
xchg
hlt
popl
in
fcomps
mov
repz
xchg
adc
sbb
pop
cmpl
mov
xchg
inc
out
xor
cmpsb
fiadds
jne
int3
aaa
jle
js
adc
push
mov
push
cmp
leave
xor
les
aad
push
rolb
sbb
out
mov
pop
xchg
cmpsl
cs
loope
shll
outsb
pop
jae
mov
fcoml
test
xlat
jo
jne
arpl
in
adc
inc
fwait
test
or
test
adcb
pop
adc
pop
out
jae
fildl
adc
das
and
cmc
push
repnz
add
loop
add
fldl
pop
push
xchg
adc
xchg
sub
out
adc
movsl
xchg
or
jge
dec
lret
insl
cmpsb
inc
pop
adc
int
cmpsb
jle
dec
ret
clc
scas
sub
inc
inc
push
sbb
pop
mov
dec
das
mov
push
sahf
push
cmpsb
adc
dec
insb
jg
jno
push
push
ljmp
jle
imul
ret
ja
mov
cmp
xor
sahf
mov
jb
aam
mov
mov
ret
ret
shll
and
mov
adc
loope
fs
mov
xchg
pop
sbb
mov
pop
mov
lods
js
jmp
popf
fcomps
sub
daa
sbb
data16
xchg
xchg
push
mov
jne
xor
cs
add
jge
js
pop
mov
push
out
sti
in
loopne
nop
cmp
enter
fldt
inc
insl
mov
mov
and
push
add
sahf
and
xchg
clc
jg
out
insb
pushl
mov
shrb
sbb
inc
loop
xor
dec
je
lret
roll
scas
mov
pop
rclb
push
xchg
ret
xchg
fs
mov
add
movsl
xchg
mov
pop
push
int3
sahf
fdivr
arpl
jle
int3
xor
pop
mov
loop
dec
pop
fxch
push
mov
xor
push
lock
stos
shlb
jo
xor
xchg
gs
addl
loopne
add
aam
push
or
adc
testl
sub
dec
fistps
iret
xor
stos
cmpsl
jge
mov
pushf
push
push
mov
out
orl
out
pop
into
push
push
je
clc
insl
andb
jle
stos
jmp
les
inc
sub
insl
inc
insb
jne
and
rcll
mov
push
jg
xchg
jge
iret
ja
jmp
push
dec
and
je
faddl
jns
daa
jg
daa
mov
in
rclb
jbe
fbstp
sarb
cs
nop
mov
subl
lcall
sub
or
lea
fisttpll
and
pop
into
mov
mov
ret
sahf
leave
mov
cmpsl
add
mov
xor
xchg
cmpsb
inc
mov
xor
push
cmp
gs
lret
mov
inc
push
imul
add
add
xchg
sbb
aas
xchg
cmpb
add
push
fxch
pop
inc
and
stos
or
adc
test
inc
mov
pop
adc
movsb
aad
stc
sahf
in
rorl
adc
jl
jg
sbb
ret
stos
movsl
sbb
aam
ja
popa
push
dec
sbb
je
mov
sub
xor
jb
dec
pop
jecxz
repz
insb
mov
out
pop
or
ds
lret
cmp
xlat
int3
jns
popl
xchg
bound
int3
jg
pushf
cmp
adc
and
jb
xchg
fisubrl
in
sub
rorb
adc
aam
mov
scas
sti
in
ficomps
push
out
xor
push
sti
cmp
in
add
call
outsl
ficompl
repz
xchg
dec
mov
movsb
stos
mov
stos
mov
mov
data16
pop
jbe
cmp
ds
inc
inc
fimuls
jl
add
jmp
rorl
xchg
imul
sub
out
mov
mov
repz
insb
add
jmp
sti
mov
shrd
outsb
push
add
xor
cmp
push
into
outsl
testl
mov
call
sarl
pop
adc
lar
pop
in
push
pop
cmpsb
or
mov
mov
cmc
jecxz
add
dec
xchg
jns
cmp
add
out
shlb
stos
push
inc
jo
in
sbbb
inc
adc
test
lods
pop
adc
ljmp
cmpsb
pop
cmp
hlt
pop
imul
pop
add
into
mov
loopne
mov
and
jmp
push
cli
mov
jnp
cmpsl
fbstp
adc
jno
add
push
lret
jp
repz
mov
jb
incl
jl
das
icebp
push
xchg
adc
sbb
leave
repnz
daa
sbb
mov
mov
mov
pop
add
sub
mov
bound
rcrb
lock
shll
inc
inc
stos
jbe
js
aam
idivl
movd
sar
sarl
in
mov
push
je
inc
mov
xchg
lea
or
out
outsb
pop
cmpsb
xchg
cmp
cmp
pop
fadds
mov
lret
sbb
and
repnz
cld
mov
pushf
out
mov
stc
pop
sbb
cli
sbb
cld
lcall
imul
data16
pop
add
mov
xchg
push
leave
lds
push
cmp
jle
or
mov
fld
fs
inc
aaa
jae
jo
pop
adcb
mov
cmp
dec
loopne
push
inc
cltd
hlt
push
sbb
jmp
in
xchg
imul
push
imul
cltd
dec
mov
stos
push
push
dec
pushf
pmaddwd
push
sub
dec
mov
test
int3
mov
xorb
xchg
xchg
mov
jp
lcall
ud0
ds
in
cmp
orb
adc
mov
and
jge
faddl
insb
xchg
test
pop
sub
test
lret
mov
je
fucomp
int
sub
sub
mov
xor
fldl
fcoms
inc
stc
cmp
gs
sbb
or
and
push
jns
notb
mov
fsubr
pop
dec
sbb
out
dec
push
popa
push
push
mov
adc
sbb
jg
push
mov
std
ffree
pop
dec
cmpb
and
hlt
fwait
ja
loopne
mov
and
aam
mov
or
enter
out
jb
or
ficomps
mov
jmp
andb
shlb
int3
fldenv
ret
gs
shl
xor
push
dec
ljmp
sub
movsb
dec
idivb
call
ret
icebp
adc
es
mov
rolb
ror
mov
sub
stc
cmp
fistpl
mov
push
xchg
ja
and
or
ljmp
es
cmp
or
leave
and
stos
popa
sbb
scas
lds
cmp
lret
stc
fmuls
sbb
lcall
sti
rclb
add
mov
mov
and
jbe
sub
dec
pop
push
sbb
xchg
jbe
aam
jp
cli
lock
mov
loope
xor
cmc
decl
inc
mov
lock
add
cmp
ds
outsb
jg
sub
repz
cmp
stos
mov
cmpsl
les
and
jl
lea
cmp
lea
inc
push
mov
mov
adc
loop
into
outsl
mov
dec
add
xchg
xchg
pop
add
inc
in
bound
cs
cmp
daa
xor
xor
ja
mov
bound
pop
data16
or
or
test
xor
push
mov
adc
sub
fsub
outsl
jns
jl
sbb
loopne
ds
test
lcall
icebp
adc
imul
out
xchg
lcall
add
fldt
scas
sbb
insl
xchg
mov
dec
mov
fildll
std
les
xchg
xlat
jp
and
repz
cmp
pop
inc
jl
sub
incl
mov
lods
sahf
dec
daa
rcr
aam
jno
lahf
mov
int
lahf
mov
lret
addb
in
outsb
inc
add
adc
out
stos
push
push
daa
jp
inc
push
in
push
sbb
sub
xchg
jmp
in
inc
fisubs
movsl
stos
sti
and
sbb
test
out
mov
lcall
out
arpl
pop
enter
cltd
and
loope
mov
ret
push
cwtl
inc
and
cmp
mov
sub
add
test
xorb
dec
lods
jne
aas
mov
aad
mov
add
idiv
pop
dec
adc
int
mov
or
orb
stos
mov
push
cmpsl
jne
xchg
cmpsb
cwtl
add
std
push
es
sub
push
mov
inc
aas
sub
in
pop
add
dec
inc
mov
ja
add
add
mov
das
adc
sub
fsubl
nop
xor
dec
fistpll
lock
pop
enter
rcll
jbe
mov
pop
mov
mov
in
in
jecxz
pop
aaa
jecxz
dec
xor
xor
enter
xchg
scas
mov
addr16
jns
je
ret
xchg
pop
jb
fwait
inc
les
mov
test
ss
jns
ljmp
xlat
xchg
js
mov
aas
repz
push
jnp
in
push
xchg
push
ret
jecxz
test
or
xor
daa
stos
and
sarb
xor
pop
mov
pop
stos
pop
xlat
and
push
pop
incl
fwait
and
sbb
lcall
pop
push
lods
cli
push
sbb
cmp
jp
push
cmp
fsubr
loope
jge
in
cmpsb
subl
or
adc
mov
sub
mov
sar
push
iret
inc
jno
pop
gs
daa
test
lods
xor
pop
sbb
leave
xlat
imul
mov
lahf
in
daa
pop
sbb
idivl
sub
jb
jmp
sahf
mov
adc
and
push
sti
push
icebp
xlat
popf
mov
ret
and
shlb
dec
push
out
jle
lods
enter
jbe
cmp
add
int
push
mov
mov
leave
sti
xor
je
lea
mov
lcall
hlt
ret
pop
decl
xor
sbb
out
xor
xchg
xor
shrb
arpl
adc
xlat
pusha
jns
incl
and
sub
mov
test
loop
test
popf
loop
mov
mov
or
mov
adc
lods
push
dec
out
and
out
dec
jge
popf
lods
jl
mov
mov
jge
pop
sub
push
mov
lcall
mov
xchg
jb
icebp
sub
fwait
pushw
cmp
push
pop
mov
xchg
mov
cltd
mov
adc
jle
xchg
xchg
into
mov
lret
sbb
mov
lcall
jo
mov
lds
subl
test
xchg
dec
xchg
out
cltd
mov
fld
jle
out
pop
xor
ret
pop
mov
out
or
arpl
mov
clc
push
cmpsl
rcl
sbb
outsl
test
repnz
dec
dec
jp
das
loope
fsubs
test
push
hlt
cmp
mov
sub
sub
push
mov
insb
pop
push
dec
xchg
mov
sub
insb
and
push
cwtl
dec
stos
lcall
lcall
pushf
lds
movsb
sbb
dec
stc
cs
xor
ja
les
dec
add
ficoms
das
sarl
mov
inc
cli
xchg
inc
jge
mov
aam
sub
xchg
pop
jg
fstps
out
stos
cmp
sbb
inc
insl
shrb
adc
repnz
push
pop
xchg
dec
sbb
mov
outsl
adc
movsl
jecxz
pop
push
xchg
inc
outsb
sbb
nop
lods
loop
and
mov
scas
mov
pop
jns
mov
shll
jo
ja
aaa
push
push
insl
push
mov
pop
cmp
int3
sahf
sbb
in
inc
sti
jmp
loope
iret
xor
movsb
pop
mov
jne
ds
mov
or
adc
popf
fisubs
push
cmpsb
shl
xor
sbb
adc
mov
cmp
mov
jecxz
mov
mov
xchg
sub
addr16
into
data16
es
stos
and
sub
test
add
mov
xor
xor
xchg
fdivp
bound
jmp
sub
mov
js,pt
lret
pop
pushf
jp
lcall
int
mov
fwait
mov
lds
movsl
pusha
adc
rcl
sti
and
mov
cmp
dec
scas
cmp
push
pop
push
nop
dec
jecxz
mov
adc
push
mov
push
push
sbb
push
sarb
mov
cmpsl
inc
sbb
jge
popa
mov
lods
mov
mov
add
ret
mov
aas
xchg
pop
stos
in
inc
mov
in
lock
movsl
gs
xchg
test
pop
sbb
dec
rcll
dec
dec
jno
cmp
xlat
pop
dec
inc
sub
pop
stos
in
clc
test
xor
add
ret
test
dec
cmpsb
dec
sub
out
ss
and
mov
or
jb
ja
xchg
mov
xchg
fisubrs
jnp
mov
push
mov
add
cmp
fisttpl
dec
ljmp
adc
sti
add
sub
push
lods
fcompl
pusha
mov
xor
pop
lods
inc
mov
call
stc
sub
pushf
ucomiss
mov
fmull
cmpsb
mov
outsb
insl
xchg
or
in
daa
fsts
roll
dec
pop
bound
adc
je
popf
jp
pop
push
iret
pop
aad
jl
leave
fucompp
and
dec
jbe
push
dec
ds
lret
subl
mov
in
push
enter
mov
lahf
dec
xor
xchg
pop
xchg
fwait
orl
mov
cli
das
xor
mov
mov
dec
sub
jnp
cmp
pop
xchg
or
xchg
mov
dec
enter
clc
lds
inc
mov
jno
mov
mov
and
and
sub
pushw
repz
loopne
out
mov
sbb
stos
lahf
popf
push
xor
jnp
aas
pop
shlb
jp
push
xchg
imul
mov
mov
adc
add
inc
addr16
xchg
add
ret
xchg
push
mov
cwtl
out
mov
xchg
xchg
dec
sub
mov
xchg
loop
adc
jno
js
mov
dec
roll
out
pop
cmp
nop
or
negb
or
push
daa
jl
cli
ret
pop
mov
pop
xor
imul
sbb
cmpsl
dec
push
xchg
jnp
mov
rcll
push
fldenv
xor
ja
inc
mov
xchg
inc
fwait
ja
lock
movsl
dec
sub
daa
xchg
imul
inc
lcall
jne
shrl
loope
inc
pop
cmp
push
shrl
rol
orb
cmp
faddl
iret
into
je
lahf
pop
mov
das
push
pop
repz
and
insl
mov
cmp
pop
mov
movsl
loope
int
loope
lea
popf
mov
mul
mov
fstpt
cmp
aaa
fcmovnbe
xor
outsl
sti
fiaddl
xchg
sub
or
fs
or
dec
es
mov
fs
rcrb
subl
lds
lea
int
mov
loope
add
xlat
and
mov
cli
fisubrs
cmp
push
aam
into
shl
or
shlb
adc
push
adc
scas
jmp
stc
push
mov
mov
or
mov
mov
pushf
repnz
inc
sti
sar
clc
add
sub
sbb
outsb
adc
sbb
in
ja
enter
mov
mov
imul
jp
shrb
push
aas
subb
xor
mov
add
sbb
out
aaa
std
insl
mov
int
popf
xchg
stc
xor
mov
cli
jnp
push
add
std
mov
insb
pop
push
lret
and
js
testl
push
xor
dec
push
mov
sub
cmp
movsb
movsl
nop
in
mov
sub
mov
jg
lret
cmpsb
lret
rolb
xor
cmp
scas
out
sub
aas
cld
or
cmp
push
rcrl
vmovd
jo
loopne
ja
pop
mov
orl
jg
and
test
push
mov
mov
hlt
jnp
mov
daa
lret
movsl
xor
out
ret
shl
mov
xchg
cltd
xor
jmp
bnd
cmpsl
stc
inc
sbbl
call
mov
movsb
xor
fsubp
cmp
es
imull
xchg
loopne
lock
pushf
loop
int
mov
jle
inc
pop
test
outsb
dec
push
mov
xorl
pop
data16
out
leave
subl
gs
mov
mov
int
mov
pusha
fdivr
call
sub
test
mov
scas
and
xor
pop
jp
hlt
jg
sbb
in
cmp
cld
ljmp
sub
in
rcrb
jmp
mov
sbb
inc
lcall
adc
or
test
rorl
call
enter
inc
fnsave
in
mov
cmp
lcall
imul
sub
aam
dec
and
and
mov
sub
add
mov
ror
cmpsb
mov
mov
push
sbb
inc
stos
enter
pop
test
jecxz
scas
in
ss
push
xor
bnd
es
repnz
mov
fdivrs
test
lcall
dec
mov
dec
cwtl
shlb
sarl
rclb
cltd
push
mov
shll
pop
bound
sub
or
fcom
mov
aam
dec
out
push
pusha
xchg
pop
iret
mull
and
or
fistps
pop
inc
inc
sti
dec
mov
xchg
push
pop
xchg
rcrl
fs
jns
cmc
leave
ljmp
and
mov
ja
shrb
test
and
push
pop
sbbb
inc
fildl
xlat
xor
test
and
int
imul
inc
adc
xchg
jge
xchg
jmp
jnp
xchg
or
repz
xchg
std
jns
dec
popa
mov
ds
hlt
int3
push
ret
push
daa
mov
aam
mov
jmp
int
sub
scas
jle
or
add
xchg
inc
std
fwait
cmc
jae
add
inc
pop
fsubs
push
cltd
fiadds
xor
lahf
pop
xor
roll
jno
mov
sbb
stc
mov
sbb
enter
imul
clc
cltd
push
rolb
xchg
sub
fcmovbe
test
fs
stos
stos
mov
mov
iret
enter
jmp
mov
fildl
jo
dec
test
fildll
dec
fcmovu
ret
xor
ss
push
out
pop
fistpl
nop
jmp
mov
ret
or
xchg
or
dec
sbb
fcoms
fwait
js
push
dec
dec
aad
es
cmpsl
mov
xor
notl
cmp
test
and
sub
loope
jnp
pusha
push
enter
shl
ficomps
xor
jmp
sub
outsl
inc
sarl
xor
dec
int3
push
adc
lret
add
dec
mov
mov
push
ret
xchg
adc
sbbb
cmp
fiadds
pop
jns
data16
sub
mov
mov
sahf
fsubr
scas
sub
sbb
inc
sbb
js
scas
push
test
lods
bound
vcvttps2dq
or
sahf
xchg
into
cmc
pop
push
mov
push
xor
mov
inc
pop
dec
lcall
jle
test
in
push
xchg
cmpb
enter
movzbl
sub
push
lret
push
push
xor
cs
iret
mov
cmp
es
jge
jae
cld
mov
in
leave
in
icebp
into
cwtl
ja
insb
daa
arpl
mov
push
sbb
add
fistps
jmp
push
mov
adc
adc
test
fcomps
adc
sub
scas
push
and
mov
pushf
mov
push
mov
subb
outsb
divl
xchg
cs
ret
mov
jmp
mov
repz
xchg
clc
mov
or
and
inc
mov
dec
push
aaa
and
notl
cld
pop
mov
pop
cmp
sub
dec
sbb
sti
pop
punpckhbw
pop
mov
sub
sub
mov
sbb
rorl
repz
and
jl
cmpsl
pop
mov
push
test
lcall
das
das
push
dec
dec
shl
sub
xchg
sub
hlt
xor
repnz
lcall
pop
cmp
jmp
dec
inc
test
xchg
dec
arpl
pusha
jp
jne
pop
inc
inc
adc
push
cmp
vcomiss
aad
mov
ljmp
insl
ljmp
or
shl
mov
or
imul
je
mov
movsl
pusha
pop
adc
ret
cli
adc
out
popf
jp
and
popa
dec
add
adc
aam
inc
xchg
xchg
xor
cmp
sbb
out
mov
fwait
lods
sub
pop
les
pushf
sub
or
in
or
jo
dec
outsl
icebp
in
scas
dec
ja
out
push
xchg
cmpsl
gs
sbb
push
sti
outsl
or
pusha
pop
lcall
or
ss
icebp
imul
mov
test
mov
jecxz
push
lods
mov
fsubl
or
dec
in
jle
je
mov
add
outsb
rorb
cmp
adc
sbb
adc
into
lahf
sarl
mov
mov
and
out
aam
and
into
pop
add
jge
movsl
insb
rcl
addr16
mov
sub
imull
fisubrl
insb
mov
scas
sub
push
andl
fadds
loope
ss
lret
pop
pop
std
dec
mov
rol
in
push
and
scas
inc
push
mov
ret
adc
jmp
pop
add
pop
adc
add
and
sub
cwtl
in
cmpsl
fnsave
and
movsb
aam
rep
cltd
into
or
cld
mov
mov
push
movsl
cmpsl
push
pop
popf
in
std
sbb
fnop
imul
sbb
pop
dec
jg
sbb
lcall
jbe
pop
out
xor
push
push
inc
dec
inc
test
cmp
lea
pop
pushf
jg
daa
xlat
adc
pop
gs
out
cmp
and
popf
repnz
mov
inc
xchg
xchg
push
push
push
dec
call
adc
cmc
push
mov
cmp
jns
xchg
mov
xchg
movsb
imul
push
jno
ljmp
mov
lret
xor
mov
jns
cmp
jnp
lods
leave
fisubrs
into
pop
mov
and
enter
mov
cmp
push
pop
fwait
adc
shlb
fwait
push
inc
sub
jecxz
data16
inc
and
push
or
jne
xor
inc
sub
mov
or
mov
pop
aam
mov
dec
mov
lods
or
sti
mov
or
xlat
sub
jns
xchg
sub
push
hlt
cmp
xor
jle
adc
subb
inc
xor
lods
cmp
push
cwtl
mov
mov
lahf
cmp
add
imul
divl
push
ss
in
addl
shll
jb
les
pop
bound
int
addl
mov
jl
cmp
popa
adcb
mov
sbb
pusha
daa
pop
dec
mov
or
xchg
cmp
out
cltd
fdivl
push
push
mov
aas
cmp
add
negb
and
add
push
gs
push
add
adc
jnp
inc
push
and
test
push
lods
adc
jge
mov
rorb
cld
push
xor
push
inc
sbb
aam
sbb
and
push
cpuid
push
xchg
in
out
das
inc
xchg
out
xor
pop
push
and
les
cmp
inc
mov
sbb
fstl
jmp
jp
int
bound
and
adc
stc
mov
ret
sahf
ja
in
jmp
movsl
rcll
daa
or
loope
sub
mov
loopne
in
adc
or
xor
ja
inc
add
movsb
adc
push
ret
inc
mov
loope
push
mov
xor
arpl
push
jno
jb
adc
inc
jp
test
shr
mov
cmp
inc
dec
jecxz
push
aam
push
lcall
cmp
push
inc
jae
add
inc
push
test
loope
or
lahf
mov
out
mov
leave
or
xchg
imul
movsl
sbb
fwait
lret
cmp
sub
stos
cmp
cwtl
sbb
pop
fildl
cmp
cmp
push
nop
push
mov
jmp
jl
sbb
mov
lds
jne
test
inc
push
movsb
sbb
repnz
cld
ret
pusha
lret
loope
pop
push
xchg
adc
pusha
push
lea
outsl
popl
or
lods
adc
cld
mov
aaa
jecxz
and
jle
lock
push
orps
or
pop
pushf
sbb
icebp
leave
cmp
inc
or
mov
xchg
sub
jno
jp
or
mov
sub
insb
std
incb
push
jg
pop
cmc
push
pop
outsl
xchg
jmp
or
test
mov
cmp
pusha
inc
sub
out
push
repnz
push
xchg
lcall
in
out
out
jmp
es
aaa
cld
and
and
adc
addr16
xor
imul
mov
inc
jecxz
pop
xor
jecxz
sub
pop
js
into
push
shrl
rcl
into
test
cltd
inc
divb
daa
ret
mov
mov
xor
jg
mov
cmp
lods
jnp
cmp
mov
push
cltd
mov
leave
dec
pop
jmp
lock
sarl
cmp
ss
jns
imul
into
sub
test
and
fdivl
push
mov
test
icebp
xchg
cmp
ljmp
fisubl
cmp
adc
or
sysexit
cltd
rol
or
hlt
inc
leave
cmc
xchg
or
repz
loopne
fistpll
lahf
pushf
mov
dec
mov
mov
pop
adc
clc
mov
mov
stos
xor
into
fdivr
loopne
dec
les
lahf
and
xor
jg
xchg
cmp
inc
imul
sahf
popa
outsl
insb
push
mov
and
shrl
out
lds
lret
lock
cmpsb
imul
nop
adc
push
jns
ficoms
pusha
pop
imul
xor
rolb
cmpsl
mov
or
or
aad
xchg
dec
je
dec
inc
sbb
iret
lods
lahf
push
mov
add
xor
movsl
iret
enter
cmp
decb
adc
mov
adc
push
pop
pusha
push
push
fdivrp
daa
nop
xor
das
dec
es
push
scas
mov
jg
enter
out
xchg
dec
lahf
insb
repz
and
pop
pop
popa
dec
sub
inc
sub
into
scas
in
mov
lahf
lods
inc
out
lods
xchg
adc
cmp
fsubs
in
in
sub
cmp
or
in
incb
mov
adc
js
shr
ljmp
or
and
fxch
mov
push
jnp
rorl
adc
sbb
xchg
sbb
inc
out
faddl
stc
cmpsb
int
pop
add
jg
sti
mov
test
jmp
or
push
out
pop
mov
std
out
cli
push
jae
lret
inc
fucomi
jle
outsl
lods
cmp
popa
jae
cmp
pop
fcoml
sbb
dec
jnp
push
xchg
rcrl
pusha
pop
out
in
jg
loope
mov
or
pushf
jmp
xchg
or
pop
int
mov
es
imull
and
cwtl
xor
xor
xor
test
pop
add
mov
push
pop
nop
out
fisttpll
sbb
nop
int3
inc
popa
fsubrl
push
mov
and
imul
mov
and
ficoms
aaa
push
push
xor
push
inc
mov
inc
xchg
cld
dec
fimull
cmpsl
sbb
mov
mov
jno
shlb
inc
sbb
inc
sub
cs
sbb
xchg
add
xor
push
aad
fists
lea
aaa
pop
cmpps
out
fildll
movsl
pop
mov
fwait
xchg
jo
js
mov
hlt
iret
loope
jge
lret
xchg
fdivrs
jnp
jns
pop
jecxz
or
or
jle
adc
movb
out
js
cmp
repnz
mov
cltd
mov
adc
push
movsb
enter
inc
push
mov
or
push
or
notb
jb
pop
xchg
test
xchg
mov
jne
out
adc
mov
xchg
shlb
mov
in
jg
int3
in
push
push
add
in
inc
xchg
xor
mov
sub
push
inc
xchg
shlb
mov
jp
pop
ficompl
sbb
fnstenv
push
sbb
xchg
dec
and
sarb
ds
shll
mov
or
stc
jecxz
dec
and
fstps
pop
inc
xchg
or
mov
or
or
mov
cltd
push
mov
push
movsl
lret
sub
mov
scas
fists
dec
lret
pop
cmpsl
fbstp
push
int3
cmp
mov
lods
jecxz
xor
or
xchg
stc
jge
mov
enter
xorb
loopne
iret
dec
mov
lock
ds
test
pop
jae
test
loope
or
lcall
and
add
stc
int
and
dec
inc
jae
stos
repnz
call
cmpsb
xchg
push
das
inc
in
xchg
sbb
icebp
cli
idivb
je
dec
int
xor
push
js
mov
cltd
sbb
add
lds
push
cmp
mov
xor
ds
nop
arpl
inc
dec
in
and
jge
sbbb
cmp
add
iret
ljmp
std
movsb
sub
mov
pop
or
movsl
push
push
inc
in
cli
push
sahf
inc
leave
adc
ss
jnp
cmc
in
sbb
and
sbb
xor
mov
sbb
xchg
or
outsl
jb
xor
mov
mov
shrb
call
imul
push
outsl
and
pushf
push
xchg
jae
call
out
mov
and
test
pause
fdivrs
lret
xor
xor
xchg
test
lods
mov
push
insl
mov
repz
xchg
sub
pop
cltd
fisubrl
adc
dec
movsb
mov
pop
arpl
pushf
scas
fwait
mov
lods
sarl
testl
cmc
fisttpll
mov
dec
shll
popa
add
adc
scas
mov
dec
mov
icebp
imul
push
js
decl
sbb
jle
sub
push
dec
pop
ja
enter
in
sbb
insl
cmpsl
mov
mov
shll
or
xchg
cmp
lock
xor
push
ficoml
pop
sub
push
mov
sub
dec
cwtl
dec
repnz
sub
jge
cs
jge
xchg
int3
and
or
fcmovnu
out
std
sbb
jo
add
xchg
rorl
pop
sbb
loope
loop
loopne
out
inc
fucomi
jp,pt
pop
leave
jbe
jbe
fcoml
pop
dec
jns
lret
cmp
inc
dec
rorb
sbb
sbb
psllw
pop
pop
pcmpgtw
or
rcrl
or
sub
cmp
push
notb
mov
and
pop
pop
mov
testl
jge
push
ficoml
inc
lea
movlps
pop
push
ja
adc
or
push
std
dec
fildl
ret
push
jecxz
movsb
sarb
rcrl
lahf
das
jns
jbe
mull
push
cld
outsb
xchg
sarb
roll
cli
and
rorl
xor
loope
xchg
push
aaa
insb
and
push
and
sub
sub
adc
lods
adc
outsb
cmpsl
jmp
inc
in
xor
fwait
add
cmp
ret
push
popa
lods
cmp
add
cwtl
inc
lcall
xor
sti
xchg
push
mov
or
pusha
dec
mov
mov
mov
pop
mov
pop
push
cmp
mov
ret
lret
xchg
sub
les
test
inc
out
mov
inc
addr16
xchg
mov
cmp
call
add
pushf
sbb
xchg
sbb
cmpsb
add
mov
cmp
sbb
sub
sahf
insl
lret
and
add
xlat
xor
cmp
mov
sarb
ss
mov
sbb
scas
dec
mov
mov
in
adc
flds
inc
mov
lds
xor
add
notl
mov
inc
adc
sbb
out
outsb
jecxz
pop
jge
shll
mov
sahf
push
xchg
test
add
add
cli
pop
push
popa
test
ja
sub
sarb
mov
push
hlt
call
sub
out
outsb
dec
fs
je
out
fildl
in
jmp
jmp
cs
or
or
cmp
scas
mov
adc
mov
mov
xor
rolb
mov
lea
sbb
mov
mov
push
push
js
sub
or
insl
arpl
push
inc
pop
dec
xchg
sbb
mov
cmpsl
mov
mov
mov
dec
dec
rorb
imull
mov
push
adc
jnp
fidivs
pusha
mov
pop
out
rcrl
add
push
inc
mov
sub
cli
mov
loope
dec
dec
jns
dec
mov
mov
sbb
mov
hlt
bound
arpl
rcl
or
pop
mov
sub
mov
mov
ljmp
push
dec
pop
ds
ds
out
xor
dec
stc
lret
jle
das
rorb
pop
pop
filds
sbb
jecxz
mov
loop
sub
push
mov
aaa
cli
stos
lds
loope
sub
int
jg
add
aad
outsb
icebp
add
jno
aaa
xchg
ret
lcall
andl
push
cmp
mov
add
hlt
std
test
bound
ja
xor
jecxz
shll
fs
push
adc
fldt
pop
mov
cmp
daa
xlat
mov
dec
push
jo
mov
lret
or
mov
cmp
aam
dec
or
mov
jmp
jnp
xchg
mov
cmp
pop
jmp
pop
jns
pusha
xlat
scas
dec
mov
mov
sub
jno
sbb
xor
fdivl
testb
lods
and
mov
sub
loopne
xor
fwait
mov
xor
stos
sub
push
mov
bswap
jl
inc
mov
mov
aam
call
idivl
jbe
data16
lahf
repz
sub
inc
xchg
cmp
imul
xor
aam
addr16
xchg
into
jl
jo
and
sbb
mov
sub
push
xchg
ret
daa
lret
cmp
sbb
mov
jg
inc
mov
lock
xor
ljmp
mov
jno
xchg
sub
cld
add
push
xor
add
xor
fisttpl
cltd
push
dec
aaa
out
xlat
insb
add
aas
sbb
mov
or
in
subl
scas
cmp
add
sti
lea
popa
xchg
add
add
rclb
in
decl
popa
cmp
cmp
pusha
jns
push
adc
aam
lods
stos
sti
into
sarb
xchg
push
adcl
stc
leave
cmpb
mov
and
nop
test
jae
sub
cwtl
add
stc
ljmp
pushf
cmp
and
and
mov
notl
pop
xchg
test
sbb
cli
xchg
dec
adc
mov
cwtl
fcomps
xor
ljmp
jns
push
inc
jnp
mov
lds
mov
jbe
rclb
jo
stos
xchg
pop
gs
jg
pusha
data16
push
ljmp
jbe
pop
fs
jecxz
mov
lret
sbb
mov
ja
jecxz
in
lcall
int
pop
push
add
loopne
pusha
repz
lea
jae
mov
jno
movl
xor
jns
mov
insb
lea
jmp
rcrl
out
cmpsl
scas
idivl
sbb
mov
fs
sub
adc
pop
push
xor
lock
pop
ljmp
adc
xchg
push
mov
pusha
scas
mov
sub
mov
push
loope
loopne
push
and
test
mov
mov
icebp
mov
xchg
movsl
adc
fmulp
out
xchg
dec
dec
jno
fsub
jb
out
int
pusha
lcall
mov
fnstenv
pop
or
cmpb
je
fs
dec
shlb
leave
pusha
fsts
into
das
imul
xor
push
ud2
mov
out
mov
scas
mov
aaa
xor
xor
lods
sahf
jns
ss
bound
scas
pop
or
fstpl
test
xor
push
lret
or
iret
xchg
add
jne
into
lds
xchg
fidivrl
aas
adc
lds
add
fnsave
lock
sbb
jo
xchg
int
rcrl
jbe
cli
outsb
pop
pop
jno
popa
pop
in
test
xor
outsl
cmp
inc
sub
mov
test
xchg
ja
fucom
inc
js
xchg
repnz
jbe
mov
xor
and
adc
or
or
add
mov
fwait
sarb
sub
in
out
xchg
mov
jg
imul
inc
xlat
jecxz
fidivs
pop
inc
add
in
sbb
in
dec
push
cmp
sub
lret
sub
ret
xchg
inc
mov
or
sarl
fs
int3
stos
lret
fwait
cmp
jo
dec
add
and
sbb
test
mov
test
mov
ret
bound
inc
pop
fcmovb
pop
mov
icebp
push
mov
lret
aad
aam
addr16
sahf
mov
sbb
pop
add
cltd
push
outsb
xor
pusha
mov
into
add
xchg
mov
pop
clc
pop
imul
enter
pop
insb
fs
ljmp
cmpsl
ror
js
ftst
insl
out
stc
sub
cmp
xchg
and
mov
cmc
imulb
mov
test
imul
gs
add
and
inc
cmp
stos
mov
or
mov
loope
sbb
scas
repz
test
inc
sub
sahf
icebp
stc
pop
and
sti
mov
or
fs
xor
dec
pop
sbb
pop
jmp
sbb
inc
mov
sti
pop
or
xor
and
jnp
mov
cmp
cmp
jle
mov
mov
adc
out
dec
add
xlat
cmp
out
or
xor
jl
out
push
xchg
inc
dec
dec
imul
cli
dec
xchg
js
es
push
mov
add
lds
mov
les
or
int3
popf
mov
out
dec
fisubrl
sub
repnz
mov
mov
cmp
bound
sbb
sub
out
repz
mov
hlt
iret
inc
sbbl
xchg
adc
pop
dec
add
repz
cmp
push
add
or
mov
pop
outsl
mov
jp
hlt
xor
loop
out
or
xlat
mov
dec
out
loopne
ds
rcl
push
fisttpll
sub
rcl
adc
aad
in
shlb
xor
fstpl
and
cmp
push
mov
mov
pushf
lock
pop
outsb
adc
cmc
mov
or
jae
inc
movsb
and
iret
push
cmc
mov
outsl
aas
fsubp
sub
test
cvtpi2ps
adc
cwtl
add
iret
fcmovnb
das
aas
pusha
xchg
and
insb
dec
mov
es
push
out
in
pop
fucomp
roll
cmp
fildll
insb
mov
ret
xchg
call
jns
popf
or
int3
xchg
hlt
pop
cmp
sub
xchg
insw
scas
cli
sub
bound
xchg
notl
inc
and
sbb
dec
mov
leave
xchg
add
mov
xacquire
ss
rorb
sub
std
popf
add
jmp
adc
ja
add
xor
ds
inc
lods
sbbb
cmp
sub
adc
sub
int
shll
test
into
js
imul
shlb
sbb
mov
dec
push
jp
xor
test
add
push
shll
mov
mov
cmp
cld
xchg
popf
inc
loope
in
mov
add
adc
push
adc
sbb
sti
leave
push
mov
mov
adc
aaa
sbb
mov
add
push
push
ds
in
jbe
ja
fnstsw
imul
push
fdivs
xor
or
fwait
add
mov
mov
dec
loope
mov
dec
push
jmp
dec
cmp
stc
push
cmp
aam
mov
cli
leave
push
outsb
push
lret
in
mov
ficoms
mov
push
jo
cmp
testb
test
jmp
lahf
in
out
es
cli
xchg
xchg
jmp
mov
arpl
adc
and
mov
push
or
fwait
xor
dec
xchg
add
push
in
mov
sahf
inc
in
jne
xor
repz
int
cltd
fwait
outsl
inc
gs
push
les
jno
lcall
sub
ret
lds
and
push
addb
mov
into
cmp
mov
rcl
pop
mov
leave
and
and
sbb
inc
push
test
sbb
dec
out
lods
pop
pop
pop
data16
call
jl
jecxz
shlb
scas
jbe
mov
repz
sbb
mov
pop
mov
jmp
clc
fistpll
outsb
mov
int3
call
mov
mov
int
push
es
adc
mov
cmp
negb
sub
add
cmc
repnz
add
call
repz
jno
stc
ja
inc
mov
inc
imul
add
cli
mov
xchg
jne
fidivrl
addl
push
int
cmpl
movsb
lock
mov
cli
push
mov
popf
clc
out
jns
loope
scas
push
insl
subl
pop
and
scas
scas
movsl
jge
out
fs
push
push
or
xor
mov
cmp
cmpb
mov
dec
xchg
jg
mov
xchg
adc
xchg
nop
movsb
inc
shl
mov
push
ds
out
sub
addb
aaa
xor
nop
inc
aaa
jb
jnp
subb
in
add
sub
mov
hlt
mov
mov
pop
pop
push
lock
icebp
imul
xchg
jne
sbb
push
mov
add
cltd
pushf
pop
les
push
push
cld
jbe
mov
xor
pop
mov
xor
leave
push
xchg
lahf
inc
mov
ja
lahf
test
and
mov
mov
cmpsl
push
ret
cwtl
arpl
test
in
sarl
xor
rorl
in
dec
mov
sub
or
inc
ja
push
out
push
sub
xchg
lahf
mov
inc
cmc
sbb
fsubrs
jno
dec
shlb
push
les
or
jge
es
fistpl
jp
jecxz
fnsave
or
mov
test
insb
jno
aas
inc
daa
pop
mov
jnp
xchg
sarb
xor
repnz
lea
stos
cwtl
les
adc
fcmovu
int3
cmc
std
xchg
inc
rcl
and
lahf
lods
sbb
fisttpl
shll
mov
sbb
repnz
pop
jg
xchg
jl
dec
ljmp
pop
push
sbb
pop
fdivs
mov
fs
add
jb
adc
je
jmp
pop
cmc
push
dec
dec
icebp
testb
rorb
mov
push
pop
jns
cld
mov
push
cmpsl
mov
mov
mov
add
push
shlb
xchg
loopne
ss
cmpsl
cmp
mov
outsb
jmp
mov
outsl
mov
iret
jns
xor
add
add
sbb
sub
call
aad
fdivrl
icebp
in
lcall
push
outsb
and
aad
subl
pusha
mov
ljmp
imul
fwait
push
xor
pop
lock
dec
cli
imul
sub
dec
xor
test
sub
cmc
cmc
fidivrs
and
lahf
loopne
enter
lret
fwait
test
fwait
add
mov
incl
cmp
jne
repz
mov
cmp
add
adc
test
xor
in
and
scas
inc
lahf
sahf
mov
mov
push
pop
and
loopne
and
js
aam
inc
and
cmp
aad
aas
repnz
shll
cmp
add
jns
out
inc
stc
aam
lcall
rcl
dec
orb
jl
test
jb
fst
pop
ret
dec
pop
arpl
dec
sbb
ss
dec
aas
subl
xor
sbb
dec
bnd
dec
mov
mov
mov
or
scas
mov
mov
packssdw
cmp
sahf
nop
push
int3
and
xchg
inc
jnp
mov
cmp
roll
in
mov
cmp
daa
mov
adc
xor
cmpsl
or
cmp
push
aas
push
lcall
dec
rol
mov
in
or
aas
mov
adc
ss
and
mov
jge
loop,pn
sbb
xchg
arpl
dec
jbe
xchg
push
pop
call
xchg
push
xchg
mov
inc
sarl
scas
mov
dec
push
push
lods
frstor
mov
out
pusha
xor
cmp
jmp
cmp
xchg
sbb
xor
mov
das
pop
sub
dec
js
sub
sbb
shrb
cmpsb
or
out
leave
mov
mov
jge
fiadds
mov
aaa
je
mov
pop
pop
jne
push
ds
rcl
test
fdivrl
into
sub
stc
jg
push
adc
xor
push
gs
or
fs
aas
lahf
loop
jg
pop
pop
pop
jns
xchg
jl
dec
jmp
js
or
sbb
lcall
push
sbb
mov
notl
movsb
sbb
sub
aaa
xchg
in
stc
jnp
ret
gs
cltd
test
or
push
xchg
push
jne
addr16
push
xor
dec
cmp
movsb
add
cmc
pop
fstp
pop
cmp
out
dec
push
jmp
les
stos
repz
jecxz
push
icebp
mov
dec
or
gs
popa
pop
rcl
imul
pand
loope
push
sub
push
loope
or
adc
pop
sbb
sbb
cmpsl
push
cmpsb
xchg
sbb
outsl
popf
scas
out
mov
out
mov
jne
push
ja
sbb
add
es
and
test
cltd
fbstp
inc
aaa
adc
jno
dec
pop
sub
enter
mov
jg
subl
jmp
jg
cmp
cs
jns
push
jp
andl
jg
fxtract
cmpsb
add
and
push
pop
stos
or
cli
fmull
scas
xor
xchg
out
pop
inc
popf
loop
popf
maxps
xchg
sbb
mov
xlat
scas
test
inc
ljmp
jmp
jo
lret
push
inc
lcall
ret
xchg
ljmp
call
jbe
cmpsb
ljmp
cld
or
sbb
sahf
subl
out
xchg
leave
push
add
aam
stos
inc
popa
sbb
pop
push
movsl
into
sub
add
push
shrb
push
notl
jecxz
ficomps
pop
mov
movsl
lret
mov
scas
sub
clc
push
and
sbb
xor
ljmp
pop
js
out
iret
js
mov
sbb
gs
cltd
xlat
push
imul
in
dec
cmp
jg
add
and
mov
scas
pop
testb
lock
dec
and
cltd
and
sbbb
adc
ret
mov
fmull
push
mov
jne
hlt
jp
adc
mov
mov
jecxz
xor
xor
arpl
insl
movsb
adc
xchg
shlb
mov
xor
and
mov
call
mov
adc
nop
xor
stc
insl
inc
not
cmp
addr16
rorl
xor
cs
enter
xor
mov
sub
ret
mov
ja
push
jae
mov
loope
mov
lahf
jae
cmpsb
and
daa
push
xchg
adc
fbstp
imul
mov
out
or
mov
fdivs
mov
mov
push
inc
and
mov
dec
lret
push
push
adcb
daa
xchg
sarl
lret
das
add
xchg
dec
jbe
fistpl
aam
adc
jge
xchg
and
sbb
cmp
in
daa
push
loop
lds
adc
repnz
cmp
push
mov
aam
pushf
lret
push
loope
adc
fstpt
and
out
jbe
dec
sbb
aaa
push
jg
add
clc
cmp
pop
adc
pop
mov
jmp
leave
loopne
sub
lock
dec
inc
sbb
aas
mov
cli
mov
jb
sub
sbb
mov
fists
xchg
aaa
sub
push
or
mov
repz
sbb
adc
sbb
mov
fcomps
repz
sub
mov
ret
adc
movsb
mov
sbb
cmp
jle
call
ss
jp
je
pop
test
ljmp
inc
cwtl
movsb
lcall
mov
mov
pop
je
adc
jmp
pop
clc
xchg
fdivl
lods
mov
data16
ds
sbb
daa
xchg
pop
arpl
icebp
sbbl
shrb
mov
add
pushf
rolb
data16
test
mov
fwait
pop
test
lds
andb
or
mov
js
push
lock
test
push
out
fsubrp
shll
pop
pop
adc
jl
or
lret
fimuls
imul
dec
ja
leave
sub
mov
sbb
sti
jbe
dec
addl
sbb
nop
adc
jbe
mov
loopne
inc
add
dec
addr16
xor
outsl
orl
rcrl
sbb
push
mov
out
add
lock
in
sbb
jbe
insb
mov
cmp
sbb
and
and
mov
jmpw
or
jnp
mov
dec
sub
xchg
xor
aam
add
lods
mov
mov
mov
jecxz
stos
xor
loop
mov
hlt
mov
cmp
jmp
orb
outsl
fiadds
cs
pop
xchg
addl
or
or
xchg
inc
and
lret
adc
dec
and
lcall
mov
pop
inc
icebp
ss
jge
or
scas
mov
or
mov
inc
and
mov
cmp
add
aas
imull
repz
or
loope
mov
test
icebp
aad
xor
cmpsl
lcall
jl
js
fwait
xchg
scas
pop
mov
sbbb
xchg
stc
ss
adc
push
dec
add
ds
sub
aas
push
pop
fnstenv
push
or
repnz
insl
and
and
or
ljmp
loopne
pop
xor
xchg
mov
xchg
cli
repz
add
adc
xlat
loope
inc
out
inc
add
rcrb
and
enter
inc
mov
sub
push
popa
or
gs
and
mov
cmp
cs
and
and
xlat
rorl
sbb
pop
sub
addr16
pop
fiadds
mov
inc
xor
aad
stos
mov
mov
sub
mov
mov
std
dec
cli
jnp
or
out
pop
mov
sub
mov
ss
push
inc
xlat
push
popa
lea
push
mov
shrb
push
cltd
inc
or
lret
or
nop
or
sbb
orb
incb
mov
pusha
mov
push
jle
movsl
jns
sti
mov
mov
mov
negl
lock
icebp
pop
mulb
fwait
mov
stos
pop
jae
xor
xchg
mov
pop
lock
xlat
iret
push
and
rol
mov
stc
push
popa
repz
out
cmp
fisubs
jle
ret
out
pop
mov
fwait
pop
jge
lcall
repz
iret
xlat
inc
aad
es
cwtl
and
push
mov
inc
int3
or
and
push
lock
int
cmpsl
out
lret
xor
jb
sbb
inc
or
bound
ljmp
or
add
add
das
pusha
int
int
xchg
inc
popa
rcrb
or
push
iret
loope
mov
mov
push
mov
sbb
cmp
push
push
out
movsl
outsb
mov
inc
push
fwait
out
addr16
insl
adc
pop
aad
mov
mov
push
fdivr
and
and
jmp
sub
mov
mov
mov
andl
cmovns
mov
aas
fcmovu
sbb
lods
push
inc
jle
sahf
pop
popa
cltd
loopne
filds
btc
xchg
xchg
outsl
mov
movsb
fwait
insb
mov
outsl
sub
fcompl
inc
sahf
imulb
ja
or
ret
xor
ljmp
clc
fdivr
pop
dec
mov
cmpsl
addb
repnz
pop
adc
fsubrl
outsb
cmpb
cmp
xchg
and
pop
pop
popa
add
jl
push
jo
or
or
jg
int3
push
fdivrs
mov
pop
cltd
push
mov
lea
sti
push
mov
xor
fbstp
cmc
jae
loop
pop
mov
cmp
mov
dec
dec
fsubs
cmp
insb
sub
pop
lea
daa
std
sub
movsb
or
mov
mov
add
and
mov
jae
xor
mov
das
out
jne
shr
cli
testl
inc
mov
inc
dec
out
xor
push
and
data16
mov
pop
out
fsub
mov
push
les
sahf
xchg
bound
sti
jmp
mov
inc
adc
stos
cmp
jmp
mov
push
jb
cli
enter
adc
les
adc
lahf
out
test
rorb
imul
sbb
mov
pop
cmp
loopne
mov
out
insb
fcmovu
xor
lcall
stos
shll
ljmp
aad
mov
adc
fnstenv
mov
sub
and
popf
mov
and
iret
jb
push
arpl
add
daa
notl
iret
js
mov
sub
movsl
iret
dec
icebp
xchg
ja
sbb
imul
sbb
iret
cmp
mov
or
imul
lcall
mov
xchg
pushf
scas
sbbl
sub
ret
pop
or
xchg
insl
rorb
mov
arpl
repnz
xor
stc
mov
xchg
pop
jg
xor
leave
sbb
test
mov
in
xor
push
xor
movsb
lds
pop
fidivl
pop
and
mov
clc
gs
iret
inc
js
negb
in
rclb
in
cmpsb
push
push
jno
mov
aam
dec
mov
jle
cmp
mov
pop
xchg
pop
dec
movsl
and
arpl
mov
dec
aaa
idivb
scas
xchg
pusha
shufps
adcb
sub
cld
mov
add
shl
loope
jmp
xchg
add
mov
rcrb
mov
push
scas
int
ret
and
scas
pop
hlt
mov
sbb
push
stos
mov
pop
popa
sti
enter
in
ficoms
ret
movsl
call
cmp
pop
adc
loope
mov
push
xchg
and
mov
or
adc
jns
xor
scas
outsb
push
gs
clc
add
pop
andl
push
jl
lea
dec
push
mov
hlt
cltd
pop
mov
mov
insb
mov
nop
jmp
iret
shr
sbb
sahf
pop
cwtl
mov
xchg
fwait
movsl
call
jmp
jnp
mov
and
mov
stos
loope
sbb
add
xchg
loop
mov
mov
in
es
jmp
or
push
loopne
js
push
sub
jb
xlat
out
sub
iret
and
jecxz
xlat
je
out
and
idivl
cmp
sbb
cltd
dec
roll
xlat
in
and
cmp
stos
pusha
std
mov
mov
push
inc
sub
or
cltd
cmc
in
fildl
inc
xchg
faddl
insl
lcall
idivb
cmp
outsb
mov
clc
sub
add
xor
aam
repz
or
out
mov
dec
mov
mov
es
stos
addr16
clc
sub
daa
pop
loopne
andb
cmp
incl
popa
adcl
popa
jg
loopne
clc
and
jge
push
es
cld
insb
push
jle
push
lahf
sub
push
cmp
dec
enter
jge
arpl
dec
ret
loope
or
jmpw
inc
repz
mov
roll
out
mov
je
or
andl
out
out
icebp
xor
push
fistpll
sub
ja
aam
add
popf
push
xchg
fists
std
adc
je
xchg
pop
add
sbbl
xor
int3
icebp
mulb
cmp
push
sbb
call
repz
jecxz
shlb
jg
test
xchg
add
mov
aas
inc
cmc
dec
les
mov
daa
mov
ss
mov
cwtl
or
inc
adc
sub
mov
int3
mov
dec
dec
inc
fnstsw
jne
pop
arpl
fs
xchg
aas
popf
insb
bnd
dec
in
bound
cli
repnz
add
stc
jp
push
xor
pop
mov
inc
lods
sbb
insb
jb
ror
lea
mov
push
lahf
icebp
js
mov
mul
pop
insl
xchg
cmp
push
stc
adc
sub
ret
pop
push
mov
cwtl
xchg
icebp
or
or
pop
pop
out
hlt
pmullw
cmp
mov
inc
shll
cmp
adc
fwait
add
xor
addr16
in
adc
into
rolb
sti
push
xor
jge
ss
test
cmc
xchg
xor
mov
xlat
jne
jne
mov
xchg
iret
xor
dec
rcrl
lahf
mov
pop
je
cmp
xor
rolb
pop
bound
mov
das
xor
cmp
add
dec
cwtl
sub
je
ret
adc
and
insb
test
aas
push
sbb
fstpl
rorb
lret
call
inc
or
aad
adc
jo
jno
xor
dec
jnp
dec
rorb
lret
int
lock
aam
dec
sbb
xlat
fdivr
pop
dec
push
fwait
das
rcrb
adc
push
mov
fbld
testb
add
mov
icebp
cmp
mov
jmp
mov
imul
iret
and
mov
sub
push
dec
pushf
dec
ds
mov
notl
jne
ds
adc
aaa
mov
jo
imul
into
pop
fcoml
dec
mov
adcb
push
xor
mov
repz
fwait
lods
and
sbbb
add
inc
push
pop
jp
mul
cld
mov
ud1
cmp
cmp
inc
aas
mov
jne
pop
jle
imul
jns
jo
lahf
pop
ds
mov
arpl
sub
out
pop
adc
iret
hlt
mov
mov
ja
hlt
push
mov
dec
cmp
repz
repnz
adc
stos
sub
lahf
inc
xchg
dec
cs
sbb
inc
daa
xor
movl
xor
adc
orl
aad
andl
push
cmp
jle
mov
xor
and
mov
jnp
jae
inc
xchg
in
mov
cmc
lahf
mov
xor
inc
jmp
dec
mov
cmp
int3
shll
push
sbb
jns
sahf
inc
pop
imul
or
in
fsubrl
lahf
incl
ret
mov
into
scas
lea
mov
xchg
push
sbb
aad
push
sbb
inc
leave
jge
or
icebp
jb
or
add
push
stos
sub
lods
mov
mov
fdivrs
push
test
das
dec
xor
xor
movsb
inc
mov
iret
dec
imul
mov
push
fildl
cwtl
ja
cmpsl
inc
bound
sbb
and
add
xchg
mov
jbe
adc
xlat
jmp
add
sbb
sbb
test
mov
cmc
jle
dec
add
mov
mov
adc
stos
jnp
mov
mov
lret
incb
xchg
gs
or
setg
repnz
ss
movsb
rolb
pop
insl
shlb
xchg
arpl
les
dec
rcll
test
inc
test
aaa
ficoml
clc
int3
or
lock
pop
dec
mov
ret
and
push
iret
imul
daa
jnp
push
cmp
mov
mov
dec
pop
fsubl
ret
movsl
sbb
test
dec
cmpsb
scas
pop
sbb
mov
stc
cmp
xchg
mov
mov
arpl
mov
dec
out
je
mov
sbb
loope
jo
scas
cmp
jmp
aaa
adc
dec
aas
lcall
lahf
sbb
xor
push
cmpsb
andb
add
movsb
in
xchg
data16
jne
imul
sbb
inc
sub
mov
inc
fnstenv
loop
out
pusha
push
xlat
lcall
push
sbb
lret
inc
push
enter
push
fsub
insl
push
jnp
mov
jecxz
mov
in
mov
and
cmc
cs
mov
mov
xor
or
inc
cmp
inc
js
dec
adc
aad
mov
hlt
adc
xchg
push
push
lea
add
cmp
shrl
ljmp
push
ret
mov
stos
lret
jecxz
int
je
and
push
push
sbb
fnstenv
loope
mov
xchg
fcoml
ror
push
fistpl
push
pushl
cmp
test
pcmpeqb
in
mov
xchg
sub
add
pushf
str
mov
mov
add
cli
popa
sbb
xchg
inc
push
cmpsl
outsb
cs
and
insl
add
clc
loop
push
add
sub
pop
into
lahf
ret
xor
scas
insb
cmpsb
lret
dec
test
lahf
add
shlb
fs
push
xchg
pop
mov
lret
and
pop
add
push
cmp
xchg
shrd
test
movsb
shrl
xchg
fcmovb
pop
cmp
and
mov
pushf
jae
mov
xorl
gs
rcll
jp
or
sbb
test
mov
sub
je
push
std
stos
lret
daa
sbb
imulb
xor
mov
adc
inc
jns
repz
ds
mov
dec
ljmp
mov
popa
aas
dec
push
popf
or
lds
dec
mov
sub
idivl
mov
inc
fisubl
jecxz
add
loope
data16
divl
std
jne
out
cmp
push
aad
je
push
dec
xchg
mov
in
mov
fstpl
or
pop
into
mov
cmp
or
xchg
dec
or
mov
fs
lds
mov
xchg
mov
adc
xor
pop
dec
sbb
hlt
mov
addr16
sub
sbb
sub
repnz
fbld
sub
ret
imul
clc
and
mov
std
test
xchg
xchg
push
aaa
xor
sbb
xlat
es
stc
jo
int3
jg
in
mov
pop
out
scas
fsubs
add
mov
mov
dec
stos
fisubs
and
mov
mov
jns
aam
add
inc
std
sbb
clc
mov
jmp
bound
xchg
lock
push
icebp
gs
sub
in
mov
scas
xchg
fnstcw
hlt
icebp
lahf
mov
int
imul
jns
out
pushf
lcall
lcall
imul
add
inc
jg
push
dec
mov
jns
call
or
pop
jge
fistps
fs
mov
or
add
mov
adc
push
push
inc
or
push
test
dec
iret
cld
ja
mov
fs
dec
mov
add
cmp
mov
icebp
lock
mov
aam
out
mov
jecxz
xor
rcrl
lods
insl
out
xlat
cmpsl
loope
stos
aaa
mov
dec
or
mov
or
fimuls
sarl
pusha
push
cs
fsub
test
dec
das
or
stc
pop
cmp
mov
and
lds
dec
pop
sub
movsb
xchg
je
or
and
xchg
sub
call
mov
push
fldl
push
adc
sbb
sbb
push
xchg
movsb
ret
sub
and
mov
sbbb
and
gs
cltd
imul
jo
arpl
stos
arpl
pusha
arpl
test
jns
mov
lcall
mov
and
dec
neg
xchg
pop
mov
hlt
imul
test
shr
es
std
ja
popf
sbb
cmp
das
out
add
adc
inc
add
xor
xor
push
and
out
pop
pop
jno
inc
movsl
dec
jne
in
adc
mov
repz
push
cmp
ret
test
out
push
mov
ret
stos
adc
jne
ret
push
stos
jne
sbbb
push
jle
mov
fs
dec
mov
inc
arpl
stc
out
mov
icebp
jnp
loope
jns
adc
xchg
cmc
dec
xor
sub
jmp
fsubl
loop
out
jmp
sub
std
repz
sbb
les
loop
and
xchg
pop
shlb
jnp
xor
mov
fwait
shrl
and
mov
popf
ds
and
adcb
add
in
adc
sub
sti
shrb
pop
xor
jmp
jb
out
mov
xchg
push
xor
enter
xchg
xlat
jns
scas
xchg
push
and
in
and
shl
jno
les
push
adc
cli
mov
push
cmpb
cmpb
dec
and
pop
pusha
xchg
test
das
in
es
pop
dec
in
and
out
adc
sbb
mov
mov
popa
mov
mov
fs
insb
sub
mov
movsb
mov
push
movsl
or
or
das
sti
xchg
fsubs
add
jno,pt
stc
es
mov
and
popf
les
mov
inc
mov
xchg
dec
push
sbb
dec
push
pop
mov
into
xchg
mov
std
dec
stc
aaa
cmp
jge
jp
push
addr16
mov
adc
scas
insb
imul
dec
mov
rcrl
xchg
pusha
sti
enter
in
test
sbb
ret
sub
pmaddwd
test
mov
sbbl
cmp
dec
rcll
pop
aam
or
ret
or
sub
mov
fcmovu
sbb
adc
loopne
mov
aas
shlb
xchg
xchg
ds
fsubp
mov
repz
sbb
jle
lcall
int3
add
out
sbb
dec
enter
or
cmp
mov
lret
js
pop
adc
dec
andl
jns
dec
jbe
icebp
jle
mov
push
lahf
add
flds
push
adcb
dec
cmp
insb
xor
out
rolb
repnz
ljmp
push
pusha
in
mov
fimuls
mov
movsl
shr
mov
adc
lods
mov
jbe
xlat
ds
ret
inc
out
sub
fstl
imulb
adc
push
data16
adc
pop
jg
pop
mov
rcrb
testb
movsl
sti
arpl
sub
pop
push
dec
jmp
mov
flds
cmp
in
push
mov
jo
inc
xchg
xor
int3
movsl
push
aas
inc
out
push
cmpsb
and
mov
into
push
les
clc
repz
jnp
adc
aaa
in
jne
jecxz
mov
cld
xor
rcll
pop
add
cmp
je
addr16
lds
inc
xor
jge
adc
and
hlt
or
fiadds
into
ss
inc
addr16
in
and
aaa
cmp
vcvtpd2dqy
adc
xchg
push
adc
js
mov
mov
adcl
dec
mov
in
ret
push
pop
xor
fstpt
pop
jl
fidivrs
popa
iret
scas
jmp
sarl
pop
int3
or
das
push
imul
adc
cmc
xor
inc
fnstenv
adc
ret
adc
pop
bound
dec
imul
addb
or
push
mov
loop
xchg
das
pop
arpl
mov
popa
popa
rorl
push
mov
sub
fdivs
cld
push
mov
jae
stos
mov
sub
ja
adc
lret
xchg
addr16
popa
pop
fcmovbe
or
cmp
or
dec
add
sub
mov
cmp
and
outsb
movsl
orps
dec
adc
negl
sarl
popf
movsb
pushf
bound
and
loopne
test
sbb
popf
mov
in
dec
pusha
out
bound
rcr
pop
jne
xor
pop
outsl
clc
fcmovnu
pop
adc
xor
cmp
jge
outsl
jle
es
jmp
lahf
dec
mov
adc
lret
jo
push
sbb
rcrb
or
movsl
and
xor
push
es
sbbl
dec
cld
out
into
sub
pop
cmp
sbb
mov
pushf
xchg
ror
pop
xor
rorb
push
push
mov
fistpl
sub
sub
push
lods
sbb
insl
push
sub
mov
insl
mov
jmp
in
repnz
dec
jbe
mov
adc
or
out
in
mov
imul
dec
lods
xchg
scas
mov
int
shll
or
push
and
test
jmp
or
cld
cld
cmp
loopne
mov
inc
insb
and
xchg
xchg
jp
mov
mov
mov
push
or
or
pop
es
jb
mov
nop
fidivrl
fwait
push
insb
jl
imul
pop
fnstcw
dec
lcall
mov
adc
cmpsb
lods
sahf
mov
ret
and
mov
mov
mov
shrl
fdivs
mov
ja
sarb
jb
pop
popf
cli
out
icebp
jne
je
dec
jns
hlt
mov
icebp
xor
je
mov
andb
pop
pop
in
xor
mov
dec
xor
jg
push
jg
insl
fnsave
jmp
mov
mov
movsl
mov
cltd
movsb
enter
sub
add
mov
cmc
xchg
out
mov
xor
mov
xchg
jp
mov
push
pop
cwtl
mov
jle
inc
mov
mov
cmp
dec
inc
jl
push
lock
sbb
mull
pop
mov
mov
dec
aaa
dec
aas
jb
je
test
movsl
fmul
jmp
adc
rcll
cmp
outsb
push
and
sbb
and
ja
rclb
int
adc
rolb
dec
xor
insb
or
hlt
jne
xor
movsb
sti
xlat
fcoms
cltd
cwtl
lock
ja
push
inc
xor
pop
shrl
in
in
dec
xor
jno
xchg
or
popf
inc
adc
pop
popa
cld
out
add
cld
jge
outsb
data16
cmp
enter
push
les
into
sub
push
sbb
lds
frstor
loopne
cmp
jnp
push
bound
lock
stc
pushf
adc
pextrw
cmc
subb
dec
jmp
adc
mov
jo
pushf
bound
dec
cmpxchg
sbb
jle
mov
sbb
je
sarb
sub
push
xor
shrl
mov
ja
jg
arpl
mov
pop
cmp
cmpsl
inc
rorl
mov
out
cld
sub
lods
dec
cmpl
jge
in
outsl
iret
xlat
jne
addr16
inc
sarl
jecxz
mov
or
xchg
adc
push
in
fdivs
xchg
mov
mov
ret
psadbw
mov
push
xchg
jl
cmp
add
or
and
adc
in
je
jb
outsl
jo
lcall
shlb
fwait
pushf
xor
and
test
sti
add
hlt
sbb
pop
movsb
lahf
movsl
push
jns
mov
inc
jb
pusha
in
in
xchg
xlat
out
sti
mov
icebp
out
cs
push
cmp
repnz
jp
enter
mov
push
insl
adc
sub
aad
mov
pop
lea
mov
lea
adc
imul
pop
add
mov
lock
jae
mov
ljmp
dec
insl
mov
push
test
test
cli
xor
divb
aad
mov
fidivs
ja
daa
scas
xchg
jmp
mov
aam
jbe
xchg
imul
cmp
leave
orl
scas
lds
popf
pop
and
jge
mov
mov
xor
aaa
icebp
add
jae
les
rclb
and
or
aas
int
icebp
shrb
jg
jno
cmp
enter
pop
dec
fidivrs
or
mov
xor
sbb
test
push
test
lret
cmp
pushf
in
pop
scas
testl
inc
cmp
mov
and
sbb
inc
mov
mov
and
fstps
push
loope
call
mov
xorl
clc
sbb
sub
sbb
add
popf
test
jne
std
inc
cmp
and
mov
xor
shld
jl
in
addb
ret
cli
mov
inc
fildll
push
sub
test
rol
sbb
stos
adc
jp
call
xchg
in
pusha
popa
pop
add
mov
mov
push
add
pop
adc
xchg
movsb
les
in
test
in
add
rcll
imul
les
es
cld
xor
jg
mov
out
jle
out
mov
mov
or
or
mov
xchg
xlat
cwtl
and
movsl
icebp
ja
xchg
mov
aaa
gs
jecxz
sub
adc
popf
dec
das
mov
js
or
jns
int3
push
mov
cltd
push
mov
pop
ljmp
push
lock
addb
dec
lahf
clc
pop
mov
push
lret
fsubs
enter
lods
cltd
pop
mov
jecxz
xor
stos
adc
movsb
fistl
sbb
icebp
sbb
out
dec
cwtl
push
ret
scas
xorl
fisttpl
pushf
lds
nop
push
in
adc
dec
rclb
arpl
push
fcomps
ljmp
jnp
push
loop
les
shlb
inc
mov
stos
loop
dec
das
stos
inc
and
mov
scas
rol
shrl
stc
fs
xlat
jl
cmpsb
mov
jns
inc
jo
stos
xor
scas
sahf
push
pusha
movsl
fnstsw
xchg
mov
sarl
aaa
adc
or
loope
jns
sub
les
sbb
and
sbb
mov
adc
dec
xor
or
cmp
mov
cli
out
jb
adc
repz
mov
mov
pop
and
call
or
das
pop
enter
add
adc
in
adc
mov
sahf
ret
rorl
xor
push
rcr
insl
or
xchg
mov
insl
xor
cmp
in
inc
bound
shrb
insb
dec
cmpsl
mov
repnz
cmp
cli
add
jno
mov
aad
roll
or
xchg
jg
lret
inc
lahf
push
mov
ds
xor
cmp
sub
int
aad
in
jmp
pop
xorl
scas
or
nop
lods
pop
sbb
ret
es
in
mov
xorb
sbb
dec
push
push
and
fsubrl
fists
adc
mov
mov
in
ljmp
pushf
test
icebp
dec
mov
ljmp
iret
in
cmp
push
sbb
and
add
sub
imul
scas
das
cmp
stc
push
jnp
mov
imul
cmpsl
push
xchg
dec
imul
aas
mov
shll
lock
add
sub
mov
int3
adc
adc
pop
fldl
or
add
cmp
test
fdivs
add
arpl
xor
fldt
cmp
mov
inc
clc
sub
leave
sub
inc
jge
addr16
test
out
loope
xchg
call
mov
lret
mov
stc
xorb
adc
inc
push
cmp
call
mov
push
fsubrp
dec
push
cld
cmp
insb
sar
push
enter
sub
push
shlb
ret
pop
repnz
sub
test
cld
add
ja
mov
mov
push
xlat
les
mov
movq
cld
movaps
pop
xor
mov
mov
ret
rcrb
nop
loopne
dec
push
dec
repz
and
aas
pop
in
es
scas
or
pop
mov
in
ljmp
push
add
arpl
xchg
sbb
mov
je
fcomps
cmp
add
mov
and
sub
out
adc
scas
xchg
mov
dec
lcall
into
mov
fmull
push
clc
mov
repz
test
insb
adc
ret
or
and
enter
xor
dec
mov
jae
dec
mulb
aam
in
clc
pop
and
xchg
in
xchg
not
dec
add
mov
out
lea
jno
mov
and
jle
out
addr16
les
sti
loopne
and
lea
test
out
outsl
xor
iret
dec
mov
out
lcall
stc
lcall
push
idiv
xchg
ret
push
mov
adc
lret
mov
and
inc
jmp
mov
cmp
mov
outsl
dec
adc
adc
icebp
mov
test
sbb
and
mov
and
into
mov
loopne
notb
dec
dec
pop
push
sbb
aam
cmpsb
push
daa
pop
mov
mov
sub
sbbb
mov
cld
inc
fwait
stos
jge
dec
sub
sbb
dec
pop
cs
and
lods
shrl
faddl
sub
cltd
insb
and
pop
sbb
pop
test
lods
in
push
sub
cs
jg
mov
out
pop
mov
pop
cmp
idiv
test
arpl
loopne
adc
mov
sbb
shrl
mov
mov
xchg
push
adc
mov
popf
push
fwait
add
lcall
test
mov
adc
hlt
jno
aam
jmp
outsl
aam
fcomp
ja
test
xor
gs
adc
adcl
mov
leave
push
leave
inc
mov
push
call
lea
mov
int3
js
aaa
pop
outsb
shl
xchg
push
dec
fisubrs
loopne
sahf
sbb
in
jecxz
adc
add
int
enter
pop
aaa
jmp
roll
pop
pop
mov
fsincos
scas
addl
lret
bnd
rol
stos
mov
mov
xchg
pop
je
mov
pop
andl
dec
push
fcom
mov
xor
out
jne
icebp
and
xchg
cli
xchg
cmp
push
xchg
jg
mov
fwait
push
sbb
xchg
xlat
leave
hlt
xor
ljmp
jmp
mov
loop
add
je
jnp
test
pop
push
cmp
dec
fsubl
int
lret
out
subb
mov
stos
pop
sub
cs
mov
ret
adc
test
jg
jnp
and
adc
shrb
cs
xchg
mov
popa
in
push
stos
jcxz
cmc
mov
pop
cs
testb
dec
push
loop
jmp
fisttps
mov
jo
aad
dec
adc
into
and
sbb
sub
shr
fdiv
lahf
cltd
or
aad
sub
mov
into
add
add
enter
cmpsl
test
cwtl
repz
insb
into
pop
lret
xchg
addr16
insb
mov
push
mov
cmp
roll
push
pushf
and
in
outsb
mov
push
add
je
pushf
lea
roll
and
sub
lcall
pop
sub
idivb
adc
mov
and
mov
jne
stc
enter
loope
or
sbb
mov
mull
push
mov
dec
sbb
sub
sbb
leave
cld
aaa
hlt
andl
lock
mov
mov
fcmove
jb
push
pop
mov
aaa
aas
dec
jp
cs
mov
scas
rorl
cmp
into
movsb
mov
adcl
push
lret
sahf
imul
and
loopne
sbb
push
addr16
jg
repz
hlt
in
aam
pop
pop
das
enter
jnp
sub
inc
ror
enter
arpl
and
xchg
loopne
movsl
xchg
lods
mov
xor
pop
sbb
out
into
and
fstps
mov
rorl
rorb
push
push
or
movsb
arpl
aad
test
test
dec
jno
mov
cltd
fidivrl
sbb
pop
inc
sub
add
and
cmp
fnstsw
xchg
xchg
dec
jmp
mov
das
inc
mov
cmp
push
ret
wbinvd
shll
sbb
enter
dec
add
cmp
mov
push
icebp
pop
mov
bound
fcmovnu
ficompl
loopne
mov
pusha
and
ds
insb
mov
fbld
and
and
xor
inc
push
xor
mov
sahf
mov
add
inc
sub
adc
incb
ljmp
aaa
dec
outsb
xor
aad
mov
xorl
les
loop
leave
pop
ret
push
dec
mov
cmpsb
or
shr
dec
jb
mov
out
cli
adc
xor
inc
and
cmpsb
jb
inc
stc
int
cmp
mov
pop
mov
lret
pop
inc
and
pop
push
cmp
lea
int3
adcb
in
repnz
or
rorb
dec
add
pop
fdivrs
cs
popl
outsl
mov
das
mov
clc
mul
mov
lods
or
push
repz
adc
icebp
cmp
popf
cltd
dec
outsl
rcrl
push
in
jbe
sub
cs
loopne
in
xchg
and
divl
aam
push
fisttpl
push
mov
pop
sub
and
lods
int
aam
ret
call
lds
arpl
rcrb
xor
jl
mov
pop
pop
jmp
test
sbb
iret
jb
add
push
sub
mov
mull
in
cmpsb
aas
lds
xchg
inc
ljmp
pop
mov
or
jp
shlb
mov
das
ds
pusha
dec
stos
fs
jle
push
jmp
test
aam
cmpsl
xor
pop
xchg
sbb
xor
jecxz
orl
bound
jp
sar
fstpt
pop
addl
rcrl
loop
das
mov
sar
cmp
pusha
aad
adc
or
cmp
xor
shl
iret
inc
in
push
and
push
mov
int
jno,pn
mov
repz
xchg
and
or
adc
mov
incl
lods
jo
filds
scas
scas
adc
test
test
inc
int3
mov
add
mov
out
dec
lahf
mov
mov
stc
daa
lds
lcall
fs
out
test
iret
roll
sbb
outsb
dec
popf
mov
dec
jmp
in
sub
mov
sub
dec
out
jne
adc
call
or
pop
add
mov
fisttps
shll
xchg
xchg
and
clc
in
mov
xchg
sbb
push
addb
or
jmp
or
lods
mov
mov
xor
cmp
or
sub
mov
pop
in
push
out
jae
mov
sbb
push
repnz
mov
mov
or
test
sarb
rcr
pusha
xchg
push
xchg
lahf
or
shlb
ss
test
fucomi
jl
cmc
adc
inc
dec
popa
aam
aas
loop
dec
rcrb
adcl
in
jb
and
and
mov
insl
jecxz
testl
mov
xlat
es
out
xor
sub
aas
dec
shll
in
mov
cmpsb
cld
mov
xor
dec
and
xor
jge
mov
pusha
adc
pushf
push
dec
addr16
push
fwait
or
cmp
int3
push
cmp
push
or
stos
outsb
xchg
repz
jmp
or
pop
xorb
les
outsb
jl
bound
shlb
shlb
adc
fwait
pop
cmpsb
xor
mov
or
aam
jo
or
div
jg
cli
enter
imul
mov
jno
mov
cmp
or
mov
test
sub
jbe
inc
pushf
test
sti
dec
add
and
xlat
pushf
data16
sub
xchg
add
or
in
mov
and
and
mov
ja
sub
out
and
std
add
sbb
loopne
or
adc
testb
jae
ficomps
mov
fdivr
sbb
popa
dec
push
popf
lods
mov
ret
int
pop
inc
adc
test
enter
ss
cwtl
jae
xchg
loope
xchg
jne
test
js
cltd
mov
call
inc
pop
and
dec
jo
inc
in
cwtl
inc
mov
sbb
mov
hlt
push
inc
fwait
pop
jle
inc
add
mov
push
push
pushf
mov
mov
inc
je
clc
jge
adc
or
lret
xor
push
and
lahf
cli
insl
dec
incb
dec
inc
mov
push
data16
push
sbb
cmpsl
cmp
leave
bound
push
sahf
xchg
inc
cmp
out
ljmp
mov
xchg
sbb
into
clc
cltd
jns
adc
sub
movsb
mov
push
ds
cmp
mov
fstl
sub
or
sub
mov
test
stos
lods
mov
in
mov
loop
ds
in
shl
xor
fldenv
cli
clc
mov
jb
pop
cmp
std
add
mulb
dec
mov
stos
push
jae
inc
bound
push
lods
xchg
loop
fdivrs
mov
inc
insb
cmp
adc
push
ss
pop
cmp
xchg
cwtl
add
sub
pop
mov
mov
inc
sub
or
cmpsl
add
xchg
xchg
inc
jns
in
pop
cli
pop
xlat
cmpsb
inc
les
orb
cmp
inc
int
mov
subb
dec
pop
lret
cmpsb
dec
cmp
push
push
pushf
ja
gs
mov
xor
cmc
lds
or
outsb
pop
sbb
add
data16
inc
fadds
pop
push
pop
pusha
movsb
sub
test
test
mov
or
push
fmuls
dec
cmp
mov
mov
pop
insl
sbb
fninit
cmp
dec
xchg
cmp
cmp
push
dec
mov
pop
notb
xorl
inc
jmp
fistpll
loop
sub
add
cmp
sbb
xor
stc
jb
cwtl
orb
adc
xor
cmc
sbb
sub
stos
outsl
insb
sbb
ret
hlt
add
sbb
add
pop
mov
push
icebp
in
add
call
rorb
or
lods
ret
push
xorb
mov
out
jge
jle
mov
popf
test
popa
pusha
xchg
mov
repnz
int3
mov
ret
cmp
add
cmc
imul
adc
xchg
dec
cmpsb
daa
inc
std
xor
xlat
fcomp
cltd
xchg
aad
mov
lahf
cmp
into
cmp
xchg
cli
or
mov
inc
outsl
or
sub
out
imul
movsl
test
cwtl
add
mov
imul
jo
test
in
in
test
cmp
insb
and
dec
sbb
and
dec
or
sar
ja
add
or
in
scas
dec
loopne
xchg
into
shlb
int3
scas
cmpsl
repnz
int
jbe
dec
out
pop
cmp
fadds
mov
xchg
pop
inc
jp
andl
rcrl
mov
stos
jle
shlb
add
repnz
xor
arpl
and
les
fists
mov
popf
pop
lods
xchg
in
nop
and
rorl
cld
push
fmuls
cmp
push
loope
push
js
mov
mov
leave
inc
inc
inc
mov
mov
pusha
jns
cmp
cmpsb
xchg
loop
pop
xchg
loope
mov
sahf
and
inc
push
int3
mov
xchg
nop
mov
scas
aas
xchg
loope
jp
or
ret
sub
gs
dec
pop
or
or
sub
fs
push
arpl
xor
mov
pop
aam
stos
sub
test
adc
cmp
xchg
mov
cmp
or
add
fisttps
fs
fistpl
into
les
imul
test
and
push
shr
aad
push
mov
jb
dec
or
pop
aam
cwtl
iret
adc
mov
js
mov
cmc
adc
xor
sub
test
sub
testl
push
mov
lock
dec
iret
pop
out
cli
inc
lock
mov
sbb
inc
pop
and
fst
shlb
xchg
xchg
rolb
xchg
movsl
inc
jb
xchg
fildl
mov
cmp
inc
scas
push
in
mov
mov
ss
pop
xchg
enter
push
mov
fsubl
mov
ds
out
cmp
mull
adc
mov
push
stc
xchg
outsb
mov
std
inc
sub
push
out
jle
inc
sbb
jb
pusha
jno
sbb
iret
or
cmp
mov
mov
sti
dec
test
adc
adc
sbb
subl
xchg
and
loope
fs
inc
jae
mov
outsb
fisubl
lds
std
adc
cmp
sub
cmp
mov
sbb
addr16
inc
xor
shll
pop
dec
xchg
adc
test
insb
and
aas
dec
loopne
jnp
pop
jbe
test
cmp
mov
mov
sbbb
mov
daa
pop
ret
lods
out
jb
pushf
add
inc
lcall
mov
push
dec
adc
or
sbb
jp
or
popa
das
fstpl
cmpsl
cmp
and
dec
rcrw
pop
and
int
mov
shl
and
mov
xchg
lds
add
sbbb
xchg
icebp
pop
pushl
push
inc
popf
and
mov
mov
ror
mov
in
test
mov
imul
dec
jmp
adc
pop
scas
and
inc
inc
out
pop
push
xchg
push
fcmovbe
add
lds
jno
pop
es
out
pop
push
icebp
mov
std
mov
sahf
sub
dec
fstps
bound
es
ljmp
mov
adc
cmpsb
mov
pop
and
xor
mov
inc
stc
lret
push
es
sub
cmp
popl
and
jecxz
ret
leave
or
out
movsb
xor
movsb
aaa
fwait
subl
or
mov
jl
repz
sub
mov
imul
fwait
dec
mov
mov
enter
test
sahf
out
scas
iret
xor
pop
xchg
in
push
xor
and
push
loop
mov
stc
popf
jmp
push
int
mov
out
jb
scas
mov
out
jbe
ljmp
les
sti
cltd
sahf
push
cld
mov
sbb
cmpsb
cmp
out
or
ficomps
repnz
fnstsw
addl
mov
sahf
neg
or
xchg
cmpl
mov
std
mov
mov
mov
sbb
mov
jno
in
loopne
out
dec
fs
cli
ljmp
loop
prefetcht2
sub
xor
dec
popf
cld
or
nop
add
mov
push
push
test
cmp
mov
dec
cmp
adc
inc
mov
mov
inc
test
xor
and
pop
xchg
pop
fcompl
adc
imul
jnp
or
outsl
cltd
into
adc
adc
cmp
int3
imul
xchg
pop
aam
stos
stc
lods
and
repz
inc
pop
rclb
cld
add
xchg
xchg
jg
adc
daa
loope
or
fwait
dec
insl
jmp
cmp
mov
and
adc
xchg
cmc
inc
loope
int
jmp
and
inc
xor
or
mov
or
xchg
in
stos
aad
gs
mov
fwait
cmpsl
into
test
pop
imul
fisttps
pop
into
push
cltd
rcll
ljmp
in
dec
pop
ret
mov
call
mov
jns
mov
mov
enter
xor
mov
xchg
pop
test
gs
ja
std
inc
jmp
mov
mov
lods
push
jmp
repz
mov
xor
aam
sub
jne
cmp
add
int
pusha
push
mov
imul
sbb
test
or
out
test
fsub
dec
jle
cmp
cmpl
faddl
rorl
in
inc
inc
sub
cmp
xor
dec
adc
inc
and
cmp
cmc
jmp
mov
jl
mov
mov
and
outsl
and
enter
or
ja
jns
mov
mov
sbb
adc
lock
jge
cmpb
sahf
add
ficompl
push
movsl
xchg
mov
and
mov
dec
pop
aaa
jmp
ja
bound
dec
sub
or
push
sbb
pushf
enter
inc
push
jp
and
xchg
and
adc
mov
mov
mov
lods
jmp
pop
repz
sbb
add
scas
call
movsb
nop
out
loop
xchg
lahf
cmp
adc
mov
jg
xchg
outsb
into
loope
rorb
push
pop
mov
aad
stc
hlt
add
pusha
lds
not
cmp
iret
cld
daa
xchg
mov
cmp
mov
jnp
mull
dec
jl
sbb
lods
sbb
xor
call
jae
lods
cmp
push
mov
adc
lret
ljmp
mov
cmpsb
aas
push
jne
fisttpl
jecxz
das
jbe
int3
sub
js
mov
xchg
out
lock
add
xchg
inc
filds
mov
icebp
xor
cmp
xor
inc
push
data16
repz
fwait
jo
test
add
jbe
scas
idivb
xor
cmp
ds
adc
in
xor
xchg
xchg
and
xor
sub
or
addb
adc
jecxz
hlt
hlt
imul
pushf
dec
mov
push
mov
lds
dec
mov
mov
push
mov
lahf
dec
fistps
cmp
mov
test
test
add
iret
loop
imul
inc
pop
or
movb
and
lahf
roll
push
bound
in
mov
dec
mov
inc
xor
fcmovbe
shll
jecxz
rcll
mov
jecxz
in
or
cmpsb
cmp
add
sub
je
movsl
cmc
cwtl
sbb
dec
inc
rcr
sbb
test
out
pop
jns
inc
dec
test
lock
loope
movl
xlat
insl
hlt
fcoms
lea
jl
in
dec
in
and
xor
xor
mov
add
adc
push
cmp
les
std
push
add
stos
repnz
iret
xchg
adc
iret
sub
insw
repnz
mov
popa
rclb
sub
scas
or
inc
mov
pop
enter
stc
dec
dec
sahf
or
add
jo
dec
ds
mul
loopne
sti
stos
sbb
push
cmp
push
mov
adc
dec
inc
test
xor
cmp
xchg
les
cmp
xchg
pop
jno
loop
mov
push
jb
jae
sbb
lods
loopne
test
inc
inc
stos
nop
mov
and
aad
clc
mov
rorb
sub
jecxz
dec
add
mov
mov
fs
bound
fadds
sbb
fnsave
xchg
jbe
in
fsubr
lea
in
mov
mov
mov
pop
mov
in
fadds
sbb
and
pop
mov
mov
in
jbe
ret
out
pop
push
imul
popf
fucomi
mov
jge
dec
stos
push
adc
lea
mov
pop
jns
pushf
sti
cmp
ror
or
fsts
nop
jge
cmpsl
stos
inc
jbe
out
sub
in
rcll
lret
rcll
sub
inc
imull
daa
int3
lods
fiaddl
push
out
inc
in
add
add
cltd
inc
movsl
and
mov
bnd
mov
cmp
outsl
ret
adc
cmp
dec
xchg
add
mov
test
lahf
push
add
pop
jge
add
iret
popf
push
js
outsl
push
daa
aam
push
sbb
mov
cmpsl
ja
mov
lret
push
or
cwtl
and
jle
pop
jl
pop
aad
xchg
sub
stc
loope
enter
aam
jmp
fisubrs
mov
sub
xor
out
inc
mov
ja
push
loop
dec
add
jecxz
test
cmpsl
imul
or
mov
cs
out
add
or
xor
cmp
jns
leave
pop
es
daa
lods
testb
mov
mov
movl
xor
inc
int3
sti
add
lds
stos
addb
jp
movsb
fmulp
je
add
mov
inc
adc
shlb
icebp
into
fisubl
lahf
in
add
mov
adc
and
sub
xchg
dec
cwtl
dec
popf
jg
mov
mul
ret
fdivl
jg
test
xchg
repnz
pop
ret
jmp
add
hlt
push
pushf
sub
fucomp
xor
movsl
xchg
cmp
xor
and
mov
mov
imul
add
jb
sbb
fld
cmpsl
aaa
fildl
cwtl
dec
pop
cmp
pop
mov
xchg
ljmp
test
mov
add
cmp
pop
adc
out
int3
mov
pop
sbb
push
mov
movsl
adc
xor
mov
movsb
sbb
lock
sbbl
push
inc
cmp
incb
data16
sti
push
ds
cmc
push
sbb
scas
imul
pusha
xchg
mov
je
xchg
push
xchg
test
inc
pop
subb
aam
jmp
push
aam
sahf
inc
loope
stos
add
cmpsl
hlt
pop
stc
iret
lods
mulb
or
fsubrs
shll
insl
enter
test
sub
sub
inc
leave
xor
or
push
xchg
psrlq
adc
out
sbb
pop
dec
jge
popa
or
mov
inc
js
out
mov
cmp
mov
sbb
sti
std
movsb
outsb
mov
jne
cld
push
mov
gs
add
adc
pusha
jge
movsb
xchg
push
pop
inc
aas
xchg
idiv
cmp
push
test
mov
inc
int3
or
imul
sar
mov
cmp
dec
movsb
sbb
push
pextrw
daa
xor
mov
sahf
leave
xchg
xchg
repz
addl
stc
jns
mov
leave
icebp
mov
jl
js
lods
push
repnz
divb
insl
cmp
rcrl
movsb
lds
in
lods
cwtl
pop
test
push
xchg
arpl
sbb
push
outsl
mov
xchg
mov
mov
shll
jge
setne
mov
cmp
mov
arpl
adc
in
mov
loopne
pop
mov
js
xlat
ja
loop
xor
pushf
xchg
or
xor
jg
lcall
inc
inc
adc
mov
lea
popf
in
fistpl
dec
mov
enter
push
push
xchg
jle
xchg
hlt
pop
push
andl
xor
ret
enter
adc
or
dec
pushw
or
lock
imul
mov
lahf
xchg
pop
jecxz
insb
xor
pop
fadds
in
jle
enter
sarb
inc
repnz
mov
or
jb
int3
jmp
or
andb
orb
cmp
mov
xlat
nop
xor
adc
jg
cmp
mov
loope
cli
add
cwtl
stos
mov
unpcklps
cmpsl
ret
hlt
fstpt
into
sbb
pop
push
cmp
aam
daa
sbb
daa
orl
sub
adc
in
shlb
pop
adc
xor
xlat
inc
mov
sub
mov
add
jecxz
popa
std
and
flds
xlat
lods
jp
js
rolb
cltd
mov
mov
nop
outsb
arpl
out
pop
in
bound
sub
mov
out
xchg
out
repz
daa
movsb
fmulp
cld
fwait
bound
mov
push
out
mov
addr16
jne
mov
sub
imul
outsb
mov
js
mov
mov
sub
leave
jno
jl
sbb
xchg
push
xor
fwait
inc
pop
ficomps
loope
dec
push
cmp
mov
repz
stos
rorl
xchg
leave
fisttps
cmp
pusha
xchg
push
mov
push
add
jnp
int
fsubl
insb
mov
repnz
cmc
add
jmp
in
jmp
test
cmc
add
insb
ficompl
xor
popa
dec
movsl
and
inc
xor
or
std
subb
sbb
push
xchg
popf
sti
inc
sub
imul
pop
adc
loopne
sub
or
mov
lret
gs
add
push
mov
jecxz
out
cwtl
lods
fldpi
mov
into
push
push
mov
ss
sub
jmp
movsl
enter
out
jnp
movsb
data16
push
sub
inc
and
test
push
stos
sbb
cmpb
adc
adc
shlb
sbb
xor
in
adc
mov
std
and
xchg
fidivrl
int
push
fstps
fwait
repnz
fwait
or
pop
inc
fistpl
add
and
sarb
ret
push
inc
mov
daa
aam
movsb
adc
mov
push
int
inc
mov
inc
test
addr16
xorb
test
ja
jl
push
insb
and
shlb
loopne
dec
xchg
addr16
xor
fs
push
out
xchg
stos
mov
adc
inc
pop
test
filds
pushfw
inc
movsb
call
sbb
mov
xchg
in
cltd
push
push
dec
pop
cli
hlt
cmp
mov
ljmp
lea
cmc
stos
xor
sti
xor
mov
pop
ljmp
enter
or
push
ret
mov
inc
popf
pop
nop
shl
sbb
xor
lods
pop
add
mov
std
out
cmp
xor
icebp
test
sub
lods
and
jmp
test
mov
lods
xchg
add
or
add
aaa
rep
jmp
lcall
adc
mov
out
mov
out
and
int3
outsb
add
lock
lods
xor
pop
stc
sub
std
inc
orl
ret
sarl
xor
cmc
and
lret
stos
lods
sub
push
fistl
mov
jbe
orb
aad
adc
cmpsl
aad
imul
and
std
or
les
enter
mov
cmp
fstpl
jns
lret
or
scas
mov
xchg
repz
popa
lea
es
jns
fisubs
mov
dec
stos
sub
mov
lods
pop
cmpsl
push
addb
cmp
cltd
push
cmp
push
notl
or
test
sub
data16
insb
mov
fistps
imul
in
sbb
cli
or
lret
call
mov
mov
sbb
loop
sub
or
xlat
outsb
push
mov
sbb
aas
test
dec
add
mov
addr16
push
test
mov
cli
mov
imul
pfrsqrt
sbb
shlb
je
jns
in
cmp
and
gs
cmpsb
stos
lret
into
jne
cmpsb
xchg
jge
vcomiss
ja
and
mov
pop
js
int
insl
push
movsl
pop
sti
adc
dec
xor
mov
lods
pop
in
push
sub
rorb
stos
cmpsl
out
adc
add
jmp
cmpsl
jl
xchg
mov
jbe
push
jnp
xor
out
mov
jg
shl
leave
scas
mov
sarl
jno
into
fwait
aaa
divl
sub
out
push
fcompl
outsl
das
repz
jmp
cmp
shll
leave
jnp
mov
pop
ja
jne
data16
push
mov
scas
pop
cmp
loope
pop
or
repz
je
jb
out
in
mov
lret
out
mov
push
cwtl
xlat
in
fcompl
and
push
ffree
xchg
sti
dec
je
jo
xlat
in
es
sub
adc
iret
mov
dec
mov
inc
inc
in
cmp
loopne
ljmp
sub
xchg
movsl
or
movsl
call
ja
cmpl
xor
xchg
dec
pop
xchg
pop
adc
jb
mov
andl
push
ficomps
fsubrs
fisttpll
stos
or
dec
or
enter
cmpl
sbb
popf
mov
xchg
mov
mov
sbb
lock
les
in
push
leave
jl
sbb
inc
rcrb
test
jns
icebp
jmp
mov
fldcw
clc
ss
xorl
push
add
mov
mov
and
lds
xchg
lea
jne
xchg
in
stos
test
das
inc
js
shrl
mov
or
int3
jecxz
mov
sbb
clc
xchg
fsubrl
cmp
sahf
mov
mov
shlb
mov
std
xor
xlat
pop
inc
xor
dec
inc
test
and
and
cmpsl
sub
mov
cmp
and
call
pop
sub
xchg
je
cltd
add
clc
jbe
ds
add
hlt
sbbb
cmp
jb
sub
std
jne
cmp
shrb
mov
sbb
push
push
rcrl
add
loope
xor
aam
js
rcrb
xchg
rorb
push
fwait
call
xchg
test
pop
repnz
mov
mov
pushf
jae
int3
loop
or
add
inc
neg
inc
mov
pop
repnz
jno
pop
iret
pop
or
repz
out
xor
jbe
imul
pushf
test
lret
push
mov
scas
or
pusha
ficomps
dec
mov
xchg
xchg
dec
fisttpll
push
jmp
or
mov
fildll
xlat
loope
adc
mov
sub
lods
cmpsb
sub
push
int
xchg
cmpsl
or
mov
stos
das
push
ficoms
and
xchg
out
mov
scas
mov
cmp
popf
aaa
inc
popa
xchg
pop
in
ret
mov
incb
addl
xorb
mov
push
add
les
xor
enter
fnsave
sub
fdivrp
add
xor
jnp
insl
mov
cs
or
xchg
cmpsb
divb
shr
and
push
push
mov
adc
mov
les
or
dec
roll
adc
shll
mov
push
out
sti
pushf
sbbl
adc
cmp
shll
jo
dec
lret
add
scas
popf
adc
sbb
cli
adc
inc
jl
imul
aad
pop
sub
mov
rolb
pop
push
test
sub
pop
xor
push
mov
mov
and
pop
sbbl
push
les
cmp
addb
sub
dec
pushf
leave
dec
aas
sbb
mov
add
adc
pop
mov
fs
or
inc
lahf
leave
inc
add
ret
bound
push
sub
outsl
daa
pop
or
sub
jns
mov
xor
jbe
xor
mov
mov
out
int3
loope
mov
push
clc
inc
pop
stos
pop
mov
ds
dec
pop
add
addl
cmp
xchg
mov
push
sbb
push
jne
adcl
mov
push
gs
das
xlat
daa
scas
mov
loop
sbb
out
adc
ljmp
xor
scas
nop
mulb
inc
test
pop
pushl
dec
xchg
ds
add
addb
mov
fmulp
stos
inc
inc
pop
insb
in
data16
mov
in
lea
pop
cmp
or
rcrb
leave
imul
mov
inc
lret
jge
mov
ljmp
cwtl
addl
push
adc
inc
rorb
pusha
fs
stos
jle
lahf
movsb
lock
push
xchg
fildl
mov
inc
xchg
add
imulb
inc
mov
or
mov
jmp
cmp
push
mov
and
flds
jmp
xor
and
adc
pop
aad
sub
int3
adc
mov
ljmp
inc
rorl
xor
test
sarb
ret
push
push
enter
icebp
push
pop
fistpl
test
and
cmpl
sbb
gs
loopne
into
je
jp
add
dec
outsb
or
xchg
and
or
xor
inc
mov
dec
cmpsl
lods
dec
mov
test
stos
int
leave
xchg
sub
ja
subb
add
shll
stos
adcl
inc
cmpl
xchg
arpl
ljmp
inc
mov
push
out
ret
je
sub
aam
cmpsb
lcall
cs
adc
popa
into
out
xchg
jo
sahf
cmp
and
mov
repz
xor
pop
jne
xor
lcall
in
cmpsl
xor
sbb
mov
mov
mov
or
inc
std
adc
xchg
jae
push
or
outsl
es
push
jo
xor
adc
lret
dec
xchg
cmpsb
xor
loop
xchg
mov
xor
lret
sahf
pop
lds
and
fnsave
add
inc
cs
fistl
std
aad
cmp
sub
push
shlb
fdivrs
cltd
in
mov
in
push
stos
and
shr
insl
js
xor
push
sbb
xchg
sub
inc
mov
xchg
mov
lcall
repz
jnp
pop
dec
cmpsb
out
jle
push
icebp
mov
pop
js
ljmp
ret
or
pop
test
jae
nop
scas
push
arpl
pop
repnz
pop
xchg
or
loopne
call
xor
fdivr
or
bound
es
xor
pushf
imul
fists
or
aam
into
aam
negb
ja
cmc
iret
push
xchg
jne
add
xchg
push
stos
lret
addr16
sahf
std
push
sbb
and
shlb
lret
fsubp
xchg
sbb
clc
clc
stos
cmp
sti
imul
or
adc
inc
stos
pop
ss
xlat
aad
sbb
or
dec
mov
pop
or
inc
xor
jg
ja
xor
xor
xchg
dec
mov
xlat
mov
add
into
popf
out
data16
mov
mov
imul
mov
cmp
cmpsb
ds
fildl
bndstx
and
push
jge
in
ds
or
cli
pop
sbb
loope
sub
dec
jg
movsl
jo
and
pop
rolb
inc
shrb
add
and
add
cmpsb
mov
inc
add
mov
aad
rcrb
fdivrp
inc
out
int
test
into
clc
cmpsb
add
out
jecxz
es
leave
mov
in
pop
and
xor
inc
mov
xor
divb
jcxz
mov
ficomps
dec
lcall
popa
mov
xchg
add
xlat
adc
or
xor
jmp
push
sbb
fiadds
outsl
lret
inc
rclb
adc
aad
negb
leave
xor
mov
xor
adc
push
ret
push
mov
and
pop
in
hlt
mov
rol
pop
xchg
and
test
pop
fsubr
out
movsb
imul
mov
xor
jae
xlat
out
fsubl
mov
mov
inc
test
push
orb
sbb
scas
fwait
mov
and
imul
mov
insl
pop
mov
mov
movsl
jge
push
pop
popf
int
cmp
cli
xchg
fdivs
ds
lods
pop
pop
xchg
test
inc
stos
mov
jl
stc
decb
and
cmc
xor
jecxz
and
jp
pop
mov
cmp
dec
mov
jo
xorb
movsb
pop
add
mov
inc
aas
and
inc
xor
xor
and
mov
sub
push
mov
xchg
insb
mov
pop
or
ja
lock
daa
pop
jle
fnstsw
pop
jne
pop
mov
push
ja
inc
fiadds
cmp
and
xchg
and
mov
push
loop
movsb
lahf
aad
ficoms
hlt
sub
push
jl
test
rolb
in
mov
pushf
sbb
push
cmp
arpl
push
pop
int
insb
or
popa
insb
repnz
or
sbb
push
paddusw
mov
in
sub
fsubr
push
out
jp
pop
mov
lret
fsubrs
imul
cwtl
ret
push
and
loopne
test
ds
ja
push
test
nop
sbb
mov
in
sbb
xchg
dec
ds
lock
les
enter
dec
push
jle
lods
or
push
pop
addr16
pusha
imul
mov
sti
and
es
out
xor
mov
xchg
addr16
xor
outsb
sahf
rcrb
ljmp
jnp
in
dec
and
loope
cmc
ds
inc
push
xor
into
push
sbb
dec
push
mov
ficompl
sbb
mov
test
sub
push
fwait
insl
jmp
in
mov
enter
cmpsb
xlat
inc
lods
push
sarb
imul
lcall
inc
adc
inc
incb
in
mov
sbb
and
pop
cmp
dec
adc
hlt
mov
sbb
push
idiv
aad
jmp
mov
lret
and
fdivrl
adc
sahf
pop
loop
pop
es
add
cmp
and
xchg
addl
cs
iret
in
mov
sub
jmp
cmp
movsl
add
addr16
add
stos
in
bound
enter
dec
push
das
adc
mov
aad
outsl
adc
ret
test
lods
jmp
fwait
mov
xlat
xchg
jmp
sbb
xor
add
mov
int3
rcll
cmpsb
arpl
mov
pushf
mov
arpl
pusha
sbb
mov
mov
pop
popa
pop
inc
and
push
add
test
icebp
in
rcrl
jbe
push
lcall
or
xor
sub
mov
out
add
lock
aaa
pushf
mov
inc
lret
roll
leave
sbb
and
inc
jns
xchg
add
jns
sub
jecxz
jge
fisubs
outsb
xchg
xchg
pop
icebp
fstpt
imul
mov
stc
xorb
fstl
lock
cmp
xchg
adc
cwtl
in
ss
fsub
adcl
iret
sbb
cmp
push
decb
cmpb
xor
test
adc
pushf
push
adc
clc
mov
sbb
jecxz
xlat
sbb
mov
nop
fildl
push
cltd
gs
mov
fidivrl
xchg
dec
mov
fs
mov
inc
adc
cs
push
adcb
xchg
jbe
mov
pop
cli
in
jle
in
and
call
loope
popa
out
out
mov
call
enter
das
test
loop
outsl
pusha
xchg
imul
faddl
cmp
xor
push
lahf
into
out
xchg
pop
and
rorb
mov
dec
test
xchg
les
mov
mov
and
insl
push
shl
jb
xorl
xor
xchg
scas
fidivl
iret
sahf
xchg
mov
mov
data16
inc
push
xchg
rcrb
pop
movb
out
dec
imul
lds
rcrb
or
mov
inc
mov
inc
sbb
stc
pop
not
filds
into
test
mov
ja
daa
ljmp
stos
shrl
ret
stc
or
arpl
scas
add
cmpsl
dec
add
inc
xor
push
lret
cmp
jno
das
cmp
push
dec
loope
adc
or
push
ret
rcll
pop
cmp
or
cmp
fdivs
outsb
int
mov
daa
incb
mov
mov
xor
mov
aaa
xchg
loop
xchg
xchg
xchg
and
inc
dec
enter
movsb
lods
ud0
mov
mov
inc
mov
shll
imulb
mov
or
aaa
inc
jae
mov
push
icebp
test
dec
or
or
fcmovne
stos
cmpb
out
and
add
cmpsl
iret
lret
mov
mov
les
xor
lcall
cmc
std
fld
loope
or
pusha
nop
cmp
mov
pop
cli
cmpsb
adc
in
push
nop
mov
mov
fcmovu
shll
mov
rclb
mov
push
insb
cmpsb
hlt
or
aad
clc
mov
in
testl
stos
mov
arpl
scas
xor
addr16
or
jns
mov
pop
sub
sbb
daa
movsb
jmp
lods
push
mov
idiv
loope
mov
fldenv
jae
adc
sub
or
sti
add
jne
inc
clc
fistl
lock
js
or
in
sub
lock
ficompl
icebp
lea
cmp
mov
mov
repnz
dec
push
addr16
subl
loopne
jno
mov
iret
mov
jecxz
das
cwtl
roll
add
neg
cmpsb
shr
hlt
stos
pop
orb
pop
bnd
ja
cmp
and
ss
cwtl
jbe
add
outsl
jle
mov
pop
pop
cmp
cmpsl
cld
inc
test
adc
mov
mov
adc
dec
mov
sub
lock
pusha
lahf
push
xchg
popf
repnz
and
xchg
mull
push
out
mov
push
shl
pop
and
cmp
and
xchg
push
cli
sahf
addr16
jne
cli
out
ljmp
sub
int
sub
out
aaa
pop
cmpsb
dec
ja
pop
stos
push
jne
lret
jecxz
loop
lds
pop
popf
sbb
testl
ja
les
cmc
sbb
or
sbb
sbb
hlt
mov
adc
xor
xchg
sbb
push
shlb
cmpsl
and
xlat
roll
fpatan
push
arpl
mov
push
cmp
idiv
add
sbb
dec
daa
sub
jae
fnstenv
mov
ret
xchg
shrb
sub
dec
fsts
or
xor
in
int
dec
dec
jo
dec
clc
add
mov
mov
pushf
sub
movsb
sub
push
and
in
lock
icebp
scas
and
iret
jo
ret
xchg
imul
inc
xchg
ss
enter
out
rcrl
jae
ret
movsb
mov
aas
ret
rcrb
pusha
cmc
pop
lret
std
or
imul
dec
pop
add
dec
or
inc
push
scas
jmp
sbb
dec
shll
fwait
in
leave
sub
adcl
leave
loop
jae
jb
xor
nop
das
mov
push
xchg
into
outsl
xor
lods
jmp
jge
out
aam
jae
pop
jle
icebp
dec
push
or
jb
fiaddl
je
or
popa
fldt
cmp
jno
ja
adc
cmc
jb
sbb
mov
or
fstl
aam
pop
jnp
cwtl
cltd
dec
sbb
mov
push
adc
lock
mov
int3
subb
iret
add
and
sbb
iret
mov
loopne
sbb
xor
test
push
repz
xchg
test
inc
push
stc
sarl
mov
mov
adc
cmp
pusha
inc
popf
in
pop
mov
filds
loop
xchg
stc
jmp
jl
dec
pusha
insb
adc
jecxz
mov
pop
outsb
cmc
mov
push
cmc
sbb
dec
fcoms
or
fimuls
jge
mov
bound
xor
push
pop
sub
mov
jl
int3
mov
dec
outsl
push
lret
dec
imul
jb
cs
je
addr16
push
sahf
enter
xchg
mov
aad
mov
enter
mov
dec
jbe
inc
jae
sahf
movsl
xor
negl
cmp
push
loopne
in
mov
xlat
cmovbe
loop
dec
mov
into
mov
iret
xor
gs
push
aam
cmc
sahf
aaa
divl
xor
out
or
bound
cmp
push
sbb
inc
xchg
cmp
fldl2t
mov
sub
jb
mov
adc
daa
adc
mov
xchg
repnz
xchg
push
mov
ljmp
pop
mov
dec
fists
stos
xor
and
jmp
nop
fs
mov
loope
mov
shll
popa
movsl
push
stos
mov
mov
or
xor
imulb
stos
and
test
rep
js
xchg
lcall
sub
flds
mov
adc
xor
add
mov
pop
inc
or
and
jmp
pop
pop
mov
sbb
mov
outsl
out
cmpsl
cmp
or
push
je
test
mov
jge
xchg
xchg
mov
test
jp
dec
pop
pop
fs
repz
cs
push
adc
jae
repnz
cwtl
popa
xor
insb
aaa
test
ficoms
arpl
jne
dec
mov
rclb
fdivr
addr16
addl
iret
push
ds
or
aam
inc
movsl
mov
adc
adc
les
data16
jne
test
jmp
push
sub
inc
sahf
sbb
das
push
rcrl
nop
imul
mov
repz
jne
in
pop
pushf
cmp
std
mov
out
sub
lret
hlt
push
mov
mov
adc
cmc
jge
pop
mov
ds
stc
imul
inc
inc
lcall
push
addr16
and
mov
push
sub
push
test
inc
sti
xchg
xchg
inc
test
jecxz
sbb
adc
sbb
push
pop
and
add
cltd
cmp
jle
or
decl
mov
mov
loop
xor
addr16
add
mov
cltd
mov
hlt
xlat
xor
inc
and
movsl
daa
sbb
push
js
jmp
adc
fcmovnbe
xchg
mov
mov
out
dec
inc
xchg
pop
sahf
subb
into
cmp
movsb
push
hlt
xlat
je
xor
daa
xchg
aad
lods
lods
stos
push
add
inc
jp
rorb
and
add
dec
jno
mov
sub
aam
sub
int
sti
pusha
inc
jle,pn
add
mov
jg
insl
jp
stos
pop
add
xchg
in
xor
pop
jge
dec
and
push
or
mov
ljmp
and
pop
es
and
push
jmp
pop
mov
scas
cmc
dec
xchg
push
jb
int3
inc
fucomp
pop
mov
dec
pop
loopne
or
jge
xchg
inc
test
mov
gs
jp
test
cmp
mov
cmp
xchg
out
outsl
je
das
and
mov
xchg
sub
and
imul
dec
xchg
pop
mov
pop
in
xor
adc
push
ffree
lds
ljmp
lea
cli
or
mov
mulb
fs
or
cld
sbb
xor
mov
pop
lock
pusha
mov
pop
inc
std
stos
mov
sbb
pop
lret
sbb
xor
mov
mov
dec
jne
jno
push
mov
scas
inc
enter
mov
and
hlt
mov
call
ljmp
add
mov
iret
movsl
ja
mov
inc
or
add
maskmovq
testl
shlb
adc
sbb
cmp
subb
cmp
mov
sti
jo
xor
cmp
jne
jecxz
mov
out
add
inc
add
pop
adc
leave
push
icebp
test
insl
sub
js
jno
fwait
xor
add
mov
xor
dec
jne
xchg
into
mov
and
imulb
dec
mov
shrb
in
pop
lods
es
jecxz
call
mov
adc
cmc
cli
pushl
mov
addb
pop
gs
pop
push
test
push
push
rcll
ret
pushf
fisubrs
mov
sub
scas
jne
es
xchg
imulb
sbb
addr16
push
jns
xor
push
push
add
imul
push
pop
sub
sahf
test
stos
movsl
cmpsl
push
std
xchg
test
call
jmp
shlb
or
xor
test
pop
fcomps
mov
enter
jecxz
adc
aaa
push
jno
pop
movsb
mov
mov
dec
dec
aam
inc
add
and
or
cmp
mov
mov
inc
mov
or
mov
sub
adc
push
daa
push
inc
push
sbb
andl
push
mov
out
push
rolb
je
push
push
ss
mov
mov
fnsave
xchg
xor
mov
scas
repz
rcll
fldln2
popf
add
push
adc
sub
ja
sub
pop
pminub
jmp
sti
test
jo
or
fwait
push
je
lcall
aas
and
dec
frstor
loopne
cmp
stos
mov
lods
and
mov
mov
push
jns
fdivp
sbbl
adcb
sbb
fmull
inc
or
pop
pop
icebp
leave
popa
rcll
aam
mov
add
mov
ret
mov
mov
fwait
call
cltd
lahf
sbb
inc
and
cmp
pop
push
fistps
movsl
push
push
aad
fwait
dec
pop
or
jmp
sete
cmp
fdivs
pop
pushf
cmpsb
xchg
addr16
adc
jne
dec
test
sbb
push
cmpsl
mov
add
mov
lret
cmpsl
adc
mov
xor
outsl
sub
mov
pop
je
nopl
mov
in
jl
sub
lods
dec
mov
sub
out
outsb
ds
pop
test
add
rclb
xchg
imul
mov
scas
cltd
jg
scas
sbb
xchg
xchg
dec
mov
ret
lahf
in
pusha
shr
jp
cwtl
aas
add
es
fdivrl
fmull
inc
clc
cltd
jbe
sub
cmp
or
scas
cs
sub
and
xchg
adcb
xchg
push
hlt
lcall
ja
scas
cs
mov
pop
jl
push
ret
cmp
or
lea
mov
mov
outsl
jl
inc
xor
or
cmp
jge
sbb
test
push
imul
pop
xchg
popl
and
insb
aam
jecxz
aas
fwait
addl
cmp
lcall
lcall
xchg
js
xchg
lahf
push
xchg
lock
jecxz
out
repnz
loope
cli
psllq
fwait
incb
mov
cli
sbb
sbb
shl
or
add
cmpsb
enter
in
dec
sti
mov
into
scas
subl
add
mov
cmp
xchg
pop
loop
insl
dec
lds
xchg
inc
data16
add
xchg
cwtl
fisubs
mov
mov
or
xchg
test
inc
mov
test
lahf
jp
pusha
test
mov
cmpsl
mov
jge
adc
or
test
sbb
std
mov
popa
adc
sbbb
inc
mov
mov
adc
xchg
xchg
pusha
pop
and
aaa
fwait
mov
inc
and
sti
mov
xchg
inc
jne
jp
adc
pop
call
fidivrl
xchg
cs
sar
cmp
push
inc
mov
cmovs
mov
add
aas
cmpl
jo
in
add
pop
pop
and
sbb
push
std
test
push
mov
aam
xor
in
shll
es
stos
stos
enter
mov
add
xchg
cmp
int
mov
sti
les
fsub
cmp
push
sahf
inc
jbe
ret
data16
mov
test
stos
and
stc
dec
sahf
bound
cmpsb
jge
sub
adc
xchg
aaa
leave
xor
jge
gs
shl
lods
lock
sbbl
xor
daa
jle
enter
mov
xor
stos
movsb
mov
pop
dec
push
sbb
in
scas
out
call
pop
mov
ds
loope
mov
dec
es
dec
aas
mov
jge,pt
mov
dec
and
xor
out
jg
inc
mov
out
repz
dec
xchg
adc
out
push
jecxz
push
test
mov
xchg
sub
sbb
jno
insl
jge
loop
movsb
or
sbb
mov
adc
loopne
fldenv
jle
in
jae
arpl
fwait
push
mov
clc
sahf
cli
outsb
and
int
push
xor
ror
adc
scas
imul
or
cmpsl
lea
push
jle
jmp
jg
aad
dec
icebp
dec
dec
xor
adc
inc
jle
mov
lret
sbb
pop
int
mov
inc
jl
repz
mov
jno
cmp
mov
xchg
jmp
divb
mov
sbb
push
mov
or
jns
dec
push
lock
outsb
pop
and
outsb
push
data16
or
scas
inc
int3
insl
outsb
clc
push
ficoms
cltd
cmpsb
mov
inc
or
jmp
movsl
int
shlb
pushf
jnp
cmp
inc
xor
fisubl
stc
inc
lds
xor
rorb
jne
jne
popa
mov
lea
add
push
movsl
dec
sbb
or
cmpsb
xor
lds
outsb
jl
mov
push
and
push
shlb
or
gs
mov
test
dec
push
pop
mov
repz
cmp
dec
mov
ss
ret
out
pop
imul
rcll
scas
fsubrl
lods
lcall
ljmp
mov
gs
rorb
mov
je
xchg
push
f2xm1
or
ss
inc
push
repz
cmpsl
dec
jle
mov
jbe
jno
and
mov
rolb
mov
mov
rorl
mov
inc
mov
push
in
mov
sti
addb
adc
inc
aad
movsb
pop
lea
ljmp
mov
cmp
fsubrl
in
pop
lahf
aad
nop
dec
inc
mov
lcall
adc
lcall
push
push
mov
adc
ja
out
sub
pop
push
dec
pop
out
orl
mov
xchg
pop
les
in
pop
xchg
mov
inc
xor
jp
dec
mov
jbe
aas
push
xchg
sub
adc
jo
aad
or
adc
addl
inc
and
adc
mov
ret
fisubrl
popf
add
test
shl
mov
in
sub
sbb
push
andl
xchg
jp
das
xchg
or
lods
jbe
or
stc
mov
and
adc
popa
repz
lcall
mov
cmp
out
mov
sbb
cld
iret
fldt
mov
sbb
inc
mov
mov
mov
nop
mov
mov
addl
push
or
add
ds
pop
out
in
stos
addr16
jo
jae
sbbb
push
sbb
xor
stc
jmp
mov
mov
stc
mov
lcall
xor
mov
subb
xlat
pop
xchg
jno
sahf
mov
data16
iret
push
or
es
sbb
pop
adc
enter
repnz
push
lock
lret
push
mov
push
add
lods
xor
cmc
pop
add
mov
movsl
stos
es
xor
or
or
jmp
xor
in
add
scas
xor
cli
jmp
cld
mov
push
test
add
sbb
add
lods
jnp
outsl
leave
and
or
in
sbb
mov
push
test
and
pop
lock
or
jge
dec
mov
pop
repnz
mov
xor
int3
dec
sub
cmc
sub
in
test
cld
mov
pushf
add
popa
aaa
and
push
xchg
xor
aaa
jp
jmp
test
je
fdivr
inc
cmpsb
lds
aaa
sbb
cmp
data16
cwtl
faddl
repz
test
jnp
jb
mov
outsl
push
xorl
in
lods
outsl
pusha
lret
std
mov
add
lahf
or
pop
insl
iret
ret
mov
cmc
adc
sub
mov
and
cmp
inc
fwait
adcb
bound
adc
dec
vpcmpeqw
je
rorb
jno
mov
jecxz
or
nop
cmpsl
shlb
ret
inc
or
cwtl
mov
ficomps
or
fidivl
hlt
sahf
das
sbb
stos
mov
adc
test
popf
into
xlat
pop
ficomps
sub
hlt
out
rcr
out
fisttps
and
lcall
idivb
icebp
out
loope
inc
adc
rclb
xor
or
bound
mov
or
ret
and
fnstsw
dec
clc
mov
mov
mov
mov
adc
mov
bound
mov
mov
aaa
daa
sbb
in
jmp
adc
out
rcrb
inc
xchg
push
hlt
push
xchg
or
das
repnz
mov
clc
jge
mov
je
ficompl
cs
push
shrb
das
dec
mov
push
mov
xchg
push
jge
xor
xchg
inc
out
mov
mov
adc
xchg
int
stos
lahf
jmp
jmp
mov
fsubrl
pop
dec
dec
adc
jmp
bnd
hlt
dec
pop
xor
out
into
dec
ret
xorps
scas
inc
fnstcw
dec
ljmp
andb
sbb
mov
in
sub
adc
popl
inc
pop
pushf
lods
add
xlat
daa
mov
adc
push
repnz
cltd
std
adc
hlt
and
sbb
xchg
jo
cltd
push
test
inc
and
and
movsl
and
jl
fldcw
pop
sub
add
pushf
jmp
ficomps
mov
push
sub
mov
mov
sub
in
mov
mov
dec
mov
and
mov
es
out
inc
aam
mov
mov
inc
xchg
and
das
pusha
adc
loopne
mov
faddp
int
loopne
xor
push
inc
sub
push
clc
or
bound
movsb
jle
xor
lock
clc
xor
sbbb
fs
outsl
mov
mov
test
xchg
scas
sbb
sub
mov
xchg
stc
cmp
mov
test
xchg
mov
xchg
push
pop
add
xor
push
loop
cmp
dec
test
shr
fisttps
in
sti
movq
cmp
lret
je
sbb
mov
sbbl
add
push
in
test
lcall
int
adc
mov
push
movsl
arpl
icebp
aaa
inc
pop
pushf
and
rolb
stos
push
sub
and
clc
push
add
cwtl
int3
lahf
dec
jle
mov
and
jl
inc
shrl
xor
out
push
fcmovbe
cmpsb
lret
sub
aad
pop
adc
dec
adcb
ss
cmpsb
sub
dec
shr
or
jmp
adc
rcll
adcb
push
sbbb
mov
or
addl
and
ds
out
push
or
sbb
push
adc
mov
xchg
mov
xchg
cli
xor
dec
xchg
inc
out
repnz
cwtl
sbb
out
sbb
mov
je
add
ret
mov
and
lods
xchg
mov
pop
sbb
push
adc
nop
je
enter
sbb
loopne
push
inc
das
popf
in
in
and
pop
push
ss
out
add
or
sbb
das
jne
jnp
push
mov
fadds
lret
pop
outsl
xchg
mov
xchg
and
and
mov
push
add
ljmp
insb
int
enter
add
dec
push
push
add
sbb
add
test
jle
mov
or
insl
loopne
cli
xchg
data16
fdivp
mov
push
pop
shlb
js
add
es
push
cmp
dec
std
sahf
mov
rcrb
fcmovu
lcall
dec
cmp
js
aad
je
push
call
inc
push
int3
mov
jmp
addl
add
lret
cli
add
adc
cld
pop
and
mov
fs
add
popa
add
pusha
mov
ljmp
out
fstpl
mov
adc
fwait
pop
add
js
xchg
js
pop
xor
out
in
int3
mov
into
js
in
jns
test
push
push
data16
sub
jmp
mov
pop
or
loope
push
add
and
jmp
test
adcl
in
sbb
mov
xchg
sub
mov
xchg
jbe
fcmovne
inc
stos
cwtl
int3
mov
insl
mov
lods
sbb
jne
cmc
into
or
lods
push
aaa
lds
add
fwait
mov
mov
cmp
shrb
cwtl
xor
loopne
nop
adc
dec
lods
mov
and
jecxz
pop
cmp
outsl
jecxz
add
and
lcall
inc
arpl
hlt
js
inc
mov
mov
jl
mov
adc
mov
cmpb
push
out
and
adc
aas
and
outsb
in
adc
icebp
scas
icebp
js
lds
adc
or
sti
pop
aad
loopne
xchg
cmp
inc
orb
jne
fcmove
xor
xor
adc
cmp
js
into
rcr
call
leave
into
imulb
adc
lock
xchg
clc
lods
stc
sbb
cmp
sbb
xor
mov
ds
or
xchg
cmpsl
mov
pop
loop
mov
inc
jp
mov
test
dec
dec
in
int
adc
lret
int
mov
sub
push
outsb
push
push
dec
pop
xor
jle
push
cmpsb
aam
testb
movsl
lret
ja
jne
bound
cs
in
jge
imul
jnp
xor
insb
xor
sbb
xchg
into
pop
je
cmp
pushl
popa
inc
dec
in
sbb
xchg
movsl
pop
mov
pop
cltd
pop
loope
pop
mov
icebp
andl
xchg
cmpl
frstor
mov
cli
insb
adc
add
xchg
inc
push
lcall
pop
add
icebp
sub
outsl
push
out
stc
and
xchg
inc
push
rcll
aaa
jns
sub
lret
and
mov
mov
rolb
mull
mov
out
xchg
pop
push
inc
push
jle
sbb
xor
add
xchg
sub
jne
movsl
push
adc
dec
jp
rorl
repz
jbe
xchg
adc
cli
pop
ss
xor
or
or
ljmp
or
push
aas
cmc
lea
cld
fwait
aad
daa
mov
aaa
push
mov
lcall
xor
test
pop
xor
xor
pushf
insb
pop
hlt
xchg
dec
mov
add
fbld
and
ret
les
ljmp
mov
push
dec
fldcw
add
aaa
xor
ljmp
sbb
leave
mov
cmp
lcall
dec
pop
out
and
sbb
mov
stc
ds
inc
mov
pop
inc
cmc
rorl
cmpl
and
mov
cmc
xor
cld
sub
icebp
jecxz
hlt
lcall
mov
lods
leave
pop
js
adc
lds
adc
fmulp
lods
mov
mov
stos
in
mov
fs
or
pop
xchg
outsl
sub
adc
xor
in
xchg
fcoms
rol
fcmovu
add
jle
test
test
ljmp
cwtl
dec
sub
add
popa
xchg
outsb
nop
mov
into
and
fs
outsl
adc
std
sarl
mulb
or
and
mov
dec
pushf
pop
shl
dec
out
stos
cmpsb
loop
imull
fldcw
sub
test
xor
fwait
xor
scas
jne
push
mov
imul
ljmp
mov
orl
add
insb
push
and
dec
push
push
xchg
mov
imul
sbb
mov
and
xchg
fucomip
call
push
cmc
dec
inc
inc
cmc
add
stos
ja
negl
call
gs
jmp
jp
cwtl
xor
mov
push
mov
push
movsb
sarl
aas
ret
mov
roll
xor
mov
add
loopne
jp
in
clc
fisubrs
test
repz
jecxz
mov
mov
pop
fwait
pop
pop
insb
pop
sti
dec
xlat
aad
inc
sbb
mov
cwtl
sbb
jl
lcall
cs
and
aaa
cmpsb
cmpsb
loop
sahf
lds
fildll
scas
inc
test
ret
dec
xlat
cmpsl
push
clc
out
or
pop
js
add
and
xchg
push
mov
out
repnz
ror
dec
stc
andl
iret
sub
cmp
jle
lock
addr16
cli
cld
mov
and
fimuls
test
push
test
inc
ja
xchg
mov
or
cmpsb
jbe
xlat
subb
dec
adc
xor
sbb
mov
ficoms
sbb
mov
fwait
xchg
add
adc
or
pop
lods
or
sbb
inc
mov
dec
jns
mov
mov
dec
xchg
and
out
pop
in
dec
xor
fs
shlb
outsl
cs
test
daa
jecxz
xchg
imulb
data16
cmp
lahf
pop
pop
mov
addr16
pusha
adc
rclb
adc
mov
out
push
sbb
rclb
push
mov
fwait
mov
push
mov
and
or
cmp
dec
cmp
dec
and
jns
jmp
daa
clc
ja
dec
push
inc
daa
stc
lret
loop
outsb
cmp
stos
sub
cmp
in
popf
sbb
addr16
or
xchg
xor
mov
mov
xor
mov
dec
push
cmp
mov
or
fs
fcoms
push
cmc
jl
pop
mov
sahf
fidivs
dec
lret
adc
clc
jl
jb
sub
out
lock
lret
xlat
add
es
push
mov
xchg
jge
sub
and
mov
lods
test
xor
xor
decl
jae
mov
repnz
out
fbstp
gs
and
ljmp
popf
or
ljmp
mov
cli
sbb
pop
mov
adc
add
inc
enter
jmp
mov
mov
into
mov
push
mov
stos
je
jp,pn
stos
push
pop
ret
mov
xchg
xlat
mov
xlat
lods
push
push
and
add
dec
lea
adc
pop
and
in
les
call
pusha
push
and
cmp
mov
pop
test
bswap
aaa
fistpl
and
jg
jae
xchg
mov
add
mov
or
mov
orb
xor
ret
shrl
and
xchg
sub
xlat
loopne
lods
in
loope
testb
mov
pusha
adc
mov
or
leave
and
push
inc
add
loope
sahf
jno
int3
push
insl
cmc
pusha
sub
inc
mov
in
sahf
push
and
jbe
xchg
mov
pop
lods
add
lock
fwait
push
lea
xorl
sub
aam
inc
fldcw
mov
out
cs
mov
mov
jbe
faddl
mov
or
push
mov
cmp
mov
arpl
lahf
lock
mov
jmp
cmp
mov
in
adc
cmp
inc
icebp
lods
fcoms
pop
dec
and
mov
mov
xor
or
out
cmp
xor
xchg
hlt
adcl
mov
leave
push
in
cmp
pop
mov
in
mov
cmp
mov
and
jno
jns
mov
inc
push
int3
add
push
fisttpl
cmpsb
test
add
cmp
sub
notl
pop
mov
jle
lods
pop
jae
adc
push
fdivs
pushf
dec
fidivl
push
lahf
inc
stos
cmp
mov
movsb
sub
sti
add
or
repnz
std
sub
loopne
cwtl
mov
pushf
cltd
cmpsl
jg
or
addb
add
pop
nop
mov
pop
je
stc
jmp
pop
sub
int3
shlb
mov
mov
bound
out
inc
sbb
push
stos
pop
mov
mov
pop
cmp
fwait
movsb
xor
loop
cmp
lds
mov
sbb
mov
data16
imul
pop
jl
cmp
in
popf
mov
inc
jnp
jle
mov
out
jp
jg
xchg
repz
scas
sbb
fsubrl
aaa
xor
ja
jp
jnp
mov
mov
inc
xchg
jg
dec
push
negl
lock
rolb
lea
jmp
adc
push
sti
pop
movsl
dec
mov
mov
imull
jnp
adc
pop
outsb
pop
dec
cwtl
stos
pop
out
dec
movsl
out
sarl
filds
fmul
or
scas
fmuls
stos
cli
inc
sub
adc
pop
enter
dec
and
cmp
loope
sahf
mov
add
or
fldenv
jmp
push
shlb
cld
or
and
ljmp
or
mov
jmp
or
jg
and
cmp
mov
jle
out
inc
test
dec
pop
adc
test
add
jns
aas
sub
test
lahf
pop
fcomps
jecxz
push
pop
fwait
adc
sub
jmp
cmp
pop
add
adc
out
das
sbb
in
or
fsubrs
inc
stc
mov
xchg
cmp
or
int
cld
aas
bnd
inc
dec
out
sub
inc
push
jo
or
mov
sbb
out
repz
push
and
out
mov
daa
inc
jmp
out
insl
jae
or
insb
ljmp
aas
jne
int
ljmp
sbb
ret
es
idivl
xchg
push
cmpsb
pop
mov
mov
mov
xchg
iret
rolb
jne
or
arpl
pushf
rorb
mov
push
das
faddp
dec
sub
sbb
pusha
pop
loop
or
outsb
xor
loopne
lods
andl
inc
daa
mov
mov
mov
add
pushf
mov
mov
nop
xchg
into
add
pop
out
lds
add
inc
jb
xor
jbe
add
dec
std
dec
testl
fidivrs
leave
cmpsl
out
bound
or
jp
and
jb
jb
js
mov
ret
cmpsl
cld
test
lds
xor
and
das
ss
and
mov
cli
jge
adc
push
sbb
aad
sbb
add
inc
mov
fidivrl
xchg
addb
imul
inc
int
addr16
mulb
cwtl
mov
popf
lcall
cmp
repz
fcmovbe
loop
cltd
xor
pop
popf
out
add
sub
mov
xor
std
jns
jmp
pop
cmp
pop
lods
and
adc
mov
lcall
cltd
or
aam
repnz
and
xor
cmpsb
lea
mov
push
adc
or
inc
xchg
inc
mov
icebp
call
imull
fs
adc
jno
mov
mov
pop
adc
push
dec
xor
jne
fcomip
mov
xor
aaa
std
mov
sbbb
pop
cmpsl
lea
pop
xlat
das
push
push
adc
jns
rcll
testb
or
lods
fidivrl
push
pop
outsl
inc
xor
pop
lds
push
outsb
push
mov
sahf
mulb
and
repnz
jns
cmpsl
and
sarl
adc
test
repz
stos
pop
mov
sub
leave
mov
nop
push
lahf
inc
ss
mov
or
xchg
jns
popf
lcall
push
bound
inc
mov
jmp
sbb
or
imul
lret
vmovq
dec
sbb
jbe
lds
dec
incb
push
lcall
in
or
jnp
jo
pusha
sarb
sbb
cmp
scas
sbb
cwtl
xchg
sub
or
roll
aad
fistpl
cmp
xor
cmp
add
xor
adc
or
mov
adcl
std
mov
jns
ret
decb
hlt
push
cmp
push
jmp
shlb
sahf
mov
sub
dec
sahf
mov
icebp
fs
mov
es
mov
lret
lcall
hlt
ficoml
cmc
cmp
jno
mov
add
js
cmc
stos
aad
ret
pop
lods
add
pop
in
lds
mov
pop
out
flds
std
aam
cmp
pop
lret
pop
movsl
add
push
pop
mov
loope
adc
jb
sahf
sub
xor
xchg
cmpsl
xchg
pop
ja
mov
xchg
xorb
mov
dec
xchg
sbb
test
jb
negb
xor
bsr
out
sbb
mov
jns
in
or
or
rorb
ret
add
push
cmp
add
mov
not
addr16
xchg
adc
call
jmp
sti
push
jae
jecxz
pop
insb
xchg
dec
xchg
adc
mov
jo
fists
pop
fstps
out
cmovle
xchg
dec
cli
les
ljmp
and
or
out
push
fcmovb
mov
aam
cmpb
jge
sub
lea
push
sbb
push
loopne
je
addr16
xchg
int3
mov
pop
push
bound
ljmp
mov
pop
cmc
inc
or
cmp
adc
shlb
add
ss
mov
imul
inc
loope
test
addr16
mov
xchg
mov
rcrl
daa
out
xor
jmp
push
popa
mov
mov
test
push
jo
xchg
jl
dec
ss
and
and
imul
stos
repz
lahf
lds
and
xchg
outsl
jp
xchg
daa
aad
mov
jno
rcrl
add
int
mov
cmp
std
loopne
jae
shll
jl
mov
cmc
fstpl
mov
mov
imul
insb
inc
and
fwait
insl
push
lods
mov
and
jns
stos
fs
aaa
mov
xchg
setno
mov
ljmp
mov
loopw
lods
loop
pop
adc
push
jo
movsb
lods
xchg
mov
cmpsl
inc
add
push
inc
mov
fsts
in
data16
and
jns
aad
sub
ljmp
adc
and
inc
in
fcmovnu
inc
mov
dec
outsl
jnp
sub
cmp
ss
mov
ret
pop
popfw
adc
inc
fsubrs
add
test
jnp
stos
leave
push
insl
add
repz
and
loopne
mov
movsb
or
or
lret
je
mov
or
ja
mov
outsb
mov
pusha
out
shlb
sub
dec
and
ljmp
cmp
mov
cmc
xchg
mov
push
in
in
cs
data16
lods
stos
mov
xchg
cld
inc
icebp
mov
aaa
jne
cs
ret
mov
dec
fiadds
or
ljmp
into
fnstenv
sub
fldcw
insl
test
mov
jnp
xchg
scas
mov
hlt
aas
int3
add
mov
out
ret
mov
pop
or
aas
cmp
cmpsb
flds
fcoms
scas
push
fs
cmp
pop
sarb
mov
pusha
inc
xchg
cld
lds
cmp
and
xchg
and
dec
push
or
lods
iret
push
mov
sub
addb
repnz
jo
and
andb
lods
mov
sub
enter
and
add
cmpsl
out
lcall
cltd
movsb
out
or
or
and
packsswb
xor
fs
mov
inc
pop
mov
push
out
mov
shr
iret
jecxz
push
jb
lods
stos
mov
cmp
jns
jge
jbe
fisubl
xor
loope
fs
mov
mov
or
sub
pushw
jge
dec
ja
jecxz
out
popa
shlb
sbb
ja
xchg
imul
or
cmpl
in
out
push
mov
sbb
pop
aaa
mov
and
sbb
xorl
popa
adc
enter
adc
sbb
jg
inc
mov
jmp
fiaddl
ss
nop
rcl
faddl
push
sub
imull
dec
mov
or
test
or
mov
out
pusha
push
outsl
mov
fidivrs
mov
mov
idivb
ja
rorb
dec
fbld
faddl
mov
test
dec
cmp
lock
push
into
adc
out
test
cmp
xor
orl
adc
cmp
ja
adc
xchg
pop
std
pushf
add
mov
push
sub
test
cmp
test
xchg
mov
aaa
pop
stos
popf
pop
addb
fbstp
inc
pop
fdivs
jmp
xchg
out
int3
imul
divl
lods
push
inc
lahf
pusha
stos
movsb
jecxz
jl
test
es
imul
out
jns
js
mov
int
push
outsb
push
mov
inc
sub
push
rcll
js
loop
pop
ja
mov
pushf
or
rcll
iret
mov
es
pop
mov
push
mov
and
shrb
dec
sar
jae
and
arpl
popf
adc
push
cmc
pop
add
das
lds
dec
addr16
mov
int
pop
or
mov
shrl
mov
or
xchg
and
mov
inc
push
jle
mov
push
mov
mov
push
push
cmc
inc
inc
arpl
cli
push
sbb
lods
push
sti
data16
jnp
outsl
cmp
scas
cmp
lods
adc
mov
cmp
outsl
jle
cli
sbb
test
jns
pop
lea
cmp
or
cmp
aaa
add
call
cmp
dec
pop
imul
test
or
sbb
dec
jecxz
xchg
push
leave
lret
mov
fwait
mov
out
add
out
movsb
es
gs
mov
arpl
push
test
mov
lcall
int
xchg
dec
hlt
xor
inc
pop
imul
out
cmp
fmuls
push
call
jbe
jle
dec
pop
ds
movsb
sub
pop
in
orb
pop
mov
cld
xorb
ret
inc
pop
push
lea
enter
jecxz
cmp
notl
int
hlt
enter
push
mov
xchg
or
fldenv
mov
mov
in
xor
aad
out
fcoms
inc
jbe
movsb
test
xchg
xor
sbb
xchg
adc
bound
pop
cmp
push
mov
adcl
mov
adc
pop
add
xorl
inc
pop
adc
mov
es
int
mov
adc
jp
and
aam
push
dec
into
into
jecxz
and
mov
mov
nop
jle
aas
jb
stos
push
xor
mov
mov
or
push
push
adc
mov
aam
insl
in
and
dec
pop
pop
and
xchg
jbe
dec
xlat
std
aas
mov
test
pop
dec
pop
sahf
pushf
and
ret
lods
mov
cmp
jns
xchg
movsl
pop
mov
jmp
enter
mov
pop
pop
out
xor
test
jmp
sti
xchg
pop
and
xor
pop
add
xor
cmc
insb
outsb
push
mov
jae
jb
add
sbb
nop
cmp
in
cmpsb
mov
mov
push
sub
lock
fidivl
jae
mov
adc
jl
sub
jl
ljmp
out
add
cwtl
mov
push
sbb
scas
repz
dec
push
jno
and
cs
daa
jae
pop
stos
popa
cmp
jl
call
sbb
cs
push
outsb
adc
stc
clc
daa
add
ret
cmpsb
stos
enter
pop
dec
lahf
pop
and
outsb
cwtl
sbb
repz
mov
cmp
add
xor
cmp
xorps
add
inc
stos
and
icebp
fs
adc
popa
xchg
aad
xchg
ljmp
inc
jmp
int3
scas
js
jle
repz
add
jg
pop
sub
in
fsubl
hlt
mov
inc
test
cltd
xor
icebp
mov
mov
test
xchg
fs
and
ret
incb
or
rorb
inc
mov
push
cs
inc
stos
cmp
xchg
fucomp
fbld
mov
push
pop
mov
sbb
imul
je
rcrb
outsl
cmp
cmp
out
jo
pop
sub
mul
lock
jmp
pop
xchg
pextrw
pop
mov
mov
pop
out
lds
push
idivb
mov
inc
das
pop
sarb
cmpsb
in
push
mov
imul
ret
pop
clc
adc
roll
mov
popf
icebp
or
mov
sbbl
cmp
lock
jnp
in
sub
dec
pop
cmpsl
fisttpll
aam
lods
pushf
inc
jmp
in
inc
push
sbb
stos
mov
cmp
cmp
cmpsb
and
addr16
lahf
dec
adc
pop
jmp
xchg
push
dec
add
inc
out
mov
adc
mov
fcos
inc
sub
sbb
outsb
or
inc
in
das
jnp
mov
jne
scas
xadd
inc
jo
pushl
popa
stc
or
ret
adc
ret
fcompl
fwait
push
xchg
cli
ds
enter
mov
lret
mov
and
sbb
scas
lods
cmovbe
loopne
push
jbe
lds
mov
scas
les
movsl
mov
pop
test
test
mov
repz
mov
jge
push
repz
out
or
xchg
add
sub
gs
ljmp
add
test
and
inc
dec
fmuls
or
xchg
jge
loop
call
call
dec
or
neg
cld
lcall
mov
or
fisubl
test
mov
dec
pop
inc
in
adc
fsubp
ret
xchg
lock
jae
jmp
dec
push
mov
out
xchg
mov
xchg
ss
pop
and
add
andl
das
loope
dec
ret
popf
add
imul
icebp
imul
js
xchg
popf
in
mov
lret
lea
sub
sbb
movsb
add
xor
imul
adc
push
scas
nop
mov
daa
adc
jecxz
mov
das
popa
xchg
out
mov
daa
mov
adc
mov
pop
imul
pop
add
imul
pop
sub
fld
and
add
xchg
leave
addb
insl
aam
mov
sar
inc
lahf
aaa
mov
clc
adc
bound
dec
or
mov
mov
dec
loope
mov
test
lock
enter
in
cs
shl
push
mov
lea
pop
cmc
fs
fildl
hlt
inc
jo
sub
popf
push
or
mov
lods
xor
mov
orb
sbb
jle
xchg
psubw
sbb
adc
xchg
pop
loope
sub
lret
xor
out
xorl
sbb
mov
lods
pop
sbb
loop
mov
lret
aam
jns
arpl
idivl
aaa
jne
repz
call
nop
inc
cmp
cwtl
std
and
and
notb
push
std
lds
inc
jb
iret
std
hlt
mov
push
es
and
sub
jno
jl
jmp
mov
mov
pop
add
mov
pop
inc
gs
in
add
mov
sarb
xchg
addr16
loope
mov
push
xchg
mov
bound
aaa
adc
scas
lea
jl
xchg
mov
imul
xlat
mov
pushf
mov
adc
jmpw
test
std
and
mov
imul
in
int
arpl
icebp
xlat
mov
cmp
fsubl
ret
jecxz
mov
dec
mov
movsl
fsubrs
dec
adc
mov
loope
inc
mov
or
cld
sti
dec
into
cwtl
cmp
xchg
loope
das
xorb
sub
jnp
rorl
xchg
jg
int
push
stos
adc
cwtl
test
test
inc
insl
xor
adc
jmp
adc
mov
out
or
mov
lret
call
sbb
inc
xor
mov
stos
test
lret
icebp
lahf
sub
js
mov
orl
mov
pop
dec
ds
sbb
rclb
xor
cmp
jecxz
rep
pop
xor
mov
cmpb
adc
jae
add
xchg
add
nop
or
cs
rorb
xchg
test
out
gs
in
into
insb
cld
fstpt
ss
mov
loope
insb
mov
mov
sahf
cs
into
push
sahf
jb
pop
cmp
shlb
scas
mov
sbb
scas
mov
add
popf
jp
add
stos
add
insl
mov
divl
pop
inc
or
jl
ret
mov
pop
mov
and
jge
sahf
loopne
ret
ret
or
div
sbb
fisubs
pop
sub
pop
sub
push
fidivrl
jp
fcomps
orl
les
daa
inc
sbb
aaa
pop
cmpsl
xchg
adc
out
pusha
fdivr
push
pusha
lods
xor
pop
cmpsl
inc
push
jmp
cmp
mov
pop
dec
jne
or
sub
push
enter
repnz
mov
in
aam
lret
inc
hlt
iret
sub
cmc
mov
mov
mov
cs
popf
inc
stos
mov
adc
jecxz
in
lea
add
add
les
shlb
popa
adc
xchg
xor
mov
arpl
rolb
mov
fnstcw
dec
jmp
xchg
dec
mov
pand
mov
mov
add
inc
add
cmp
inc
or
xor
aad
mov
out
icebp
gs
out
movsb
push
test
mov
sub
push
and
add
mov
shrl
pop
xor
jp
movsl
push
lock
sub
int
jmp
sub
cmpsb
fldcw
mov
fdivrl
cmp
outsl
mov
jns
push
inc
subl
mov
int3
loop
dec
leave
xchg
nop
loop
push
jbe
insl
xorl
adc
cld
lcall
jbe
lock
xorb
or
jle
mov
sti
dec
cmp
mov
sbb
sbb
jl
push
cld
lret
cmpsb
call
cmp
xchg
test
cmp
jo
mov
jp
xor
ja
scas
jmp
jb
int3
mov
test
add
icebp
pushf
test
ret
aad
push
mov
add
dec
mov
jns
jle
xor
mov
leave
cwtl
popa
ljmp
lcall
xchg
push
insb
and
mov
adcl
mov
mov
mov
dec
sbb
adc
ljmp
scas
jnp
cmpsb
push
adcb
mov
mov
mov
mov
pop
mov
adc
mov
lret
add
inc
inc
jbe
push
add
ljmp
or
popa
push
pop
lods
lock
push
js
rcrl
mov
into
out
adc
mov
jnp
mov
test
push
mov
mov
stc
cltd
fiaddl
fdivrl
or
push
cld
aad
dec
data16
xchg
jmp
icebp
cmp
cmp
cmc
mov
inc
add
cmpsl
adc
addr16
mov
pop
inc
jbe
mov
cmpl
xchg
jae
jbe
or
sbb
aam
in
fistpl
jae
mov
inc
addr16
iret
push
and
push
cmc
cmp
mov
xor
and
or
dec
push
outsl
hlt
push
cwtl
call
aad
sbb
mov
es
dec
ret
and
inc
or
lds
out
sub
mov
sub
push
mov
call
pusha
sub
and
sub
fisubrl
and
jge
mov
hlt
hlt
or
and
call
imul
popf
sub
adc
sbb
pushf
mov
roll
inc
sbb
xchg
lods
mov
xchg
jae
pop
mov
popl
lcall
loope
pop
enter
fwait
ror
cmp
inc
les
dec
cmp
cltd
xor
dec
add
test
cwtl
adcb
xchg
jbe
jmp
mov
mov
fucomp
mov
iret
cltd
lahf
sbb
cld
mov
stos
mov
fbstp
xor
filds
adc
roll
mov
ja
mov
mov
push
pop
mov
xlat
movsl
xchg
inc
cmp
xchg
pop
sahf
and
ret
mov
call
and
sbb
fmul
and
movsl
jp
push
mov
int3
jbe
imul
cmc
rcr
cmp
sbb
pop
jge
hlt
sbb
fdivs
ds
add
mov
mov
mov
or
jge
aaa
jecxz
popf
fisttps
mov
sub
jnp
sub
mov
sub
shrb
push
mov
mov
data16
sub
mov
pop
mov
lock
in
push
pop
push
xchg
popa
mov
lea
mov
adc
adc
lahf
push
ret
out
sbb
xchg
adc
or
jge
imulb
inc
adc
imul
jl
mov
ret
mov
je
sub
add
mov
cli
sub
xchg
adcb
push
sbb
jns
sbb
fdecstp
sarl
mov
push
sub
nop
pop
imul
repz
push
mov
rclw
fadds
in
jge
jl,pt
