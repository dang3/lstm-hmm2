mov
cmp
ss
pop
inc
cmp
fisubrs
and
mov
les
and
negl
lahf
adc
sub
arpl
aaa
repnz
je
sbb
testb
out
ret
arpl
in
lret
xor
jne
in
push
jecxz
das
jge
sub
cmpsb
push
mov
jbe
aas
xchg
scas
sub
jb
pop
add
int3
aad
mov
mov
mov
dec
ret
mov
push
xchg
mov
iret
sahf
sub
jbe
shlb
dec
jns
mov
and
or
pop
xchg
inc
xor
pusha
cltd
adc
and
xor
lret
push
and
sbb
add
add
cwtl
sub
popa
mov
enter
pop
xor
dec
out
adc
sbb
mov
jmp
out
xchg
and
test
and
cltd
scas
bound
inc
adc
add
jnp
xor
sbb
xchg
les
xor
mov
push
sub
filds
gs
xchg
cmpsb
dec
and
mov
ljmp
mov
mov
scas
dec
jecxz
subb
inc
movsl
mov
inc
jbe
pop
int3
loop
imul
in
mov
int3
call
inc
mull
sub
push
dec
fs
cmp
pushf
rorl
test
cmp
insl
in
jno
mov
movnti
mov
adc
shrb
aas
jno
cmp
jb
sbb
xchg
out
pop
lcall
loopne
fs
lret
mov
jmp
or
test
push
out
test
cmp
or
and
adc
lock
dec
inc
inc
sbb
roll
sub
stc
mov
mov
in
jns
das
shl
popa
mov
add
xchg
mov
js
dec
or
mov
scas
xor
subl
or
mov
mov
xor
push
jg
push
mov
outsb
icebp
mov
out
pop
int
mov
mov
es
movsl
and
adc
iret
pop
adc
jns
aas
pop
adc
lahf
ficompl
push
daa
mov
loopne
pop
jmp
cmpsl
dec
inc
cmp
lods
rol
jb
and
cs
stc
xchg
cmp
adc
loop
push
sbb
push
call
cs
and
jmp
mov
cld
insl
adc
les
out
scas
xchg
and
cmc
cmpsb
mov
pop
aam
out
add
scas
add
dec
in
pop
adc
stos
jecxz
lahf
mov
imul
psrad
subb
pop
stc
add
ret
mov
mov
sub
jl
or
mov
iret
push
cmp
outsl
rolb
enter
and
mov
in
jge
inc
out
xchg
leave
aam
mov
pop
jl
cmpl
cwtl
inc
cmp
pop
or
cmp
sub
fwait
aam
xchg
pushf
and
mov
cmc
pop
jbe
mov
mov
call
leave
or
movsl
cmp
dec
shrb
loop
icebp
xchg
rcll
into
push
int
nop
iret
mov
cltd
mov
sbb
pop
out
sub
or
out
outsb
xor
xor
pusha
push
push
jns
or
sbb
mov
add
pushf
mov
das
mov
jecxz
adc
xorb
or
xor
aaa
pusha
lret
and
dec
xor
xor
push
mov
cmpsb
add
aam
pop
in
movsl
ja
pop
testl
pop
aaa
mov
icebp
pop
adc
dec
mov
out
loope
push
adc
mov
or
incb
dec
xor
mov
dec
imul
pop
scas
mov
ss
inc
push
xchg
xor
inc
cli
dec
dec
push
pop
sub
mov
fnsave
aas
adc
sbb
outsb
and
test
xchg
fs
cmp
mov
scas
ss
outsb
lahf
or
arpl
sub
daa
shlb
push
or
lock
js
or
sbb
insb
popa
gs
addr16
ds
mov
mov
bound
lock
js
or
hlt
lret
cli
aam
xchg
daa
sbbl
jnp
xor
les
mov
push
lods
and
das
stos
xchg
and
cmpsb
sub
mov
pop
push
sahf
or
lock
inc
adc
push
loope
mov
bound
test
hlt
repz
push
pop
outsb
outsb
aas
dec
jae
xor
lahf
repz
inc
int3
ljmp
stos
add
fadd
inc
shlb
sarb
ljmp
cmp
mov
shrb
xchg
rclb
mov
in
jmp
xor
leave
mov
xor
cltd
in
fsub
jl
out
fidivl
into
cld
sub
mov
sub
mov
push
jno
push
xor
std
lock
sarb
imul
pop
les
sub
daa
xchg
cmp
fimull
movb
lods
dec
sub
dec
mov
push
cli
sub
dec
test
repnz
sahf
mov
push
dec
jp
mov
lods
aam
ljmp
mov
lock
arpl
mov
push
jg
js
cmp
jle
cmp
pop
call
imul
sub
push
test
or
adc
sbb
ljmp
sahf
or
mov
shlb
shlb
out
out
mov
fiadds
test
jne
dec
aaa
leave
imul
out
jbe
adc
loop
test
add
mov
mov
add
fcomip
jmp
xchg
or
cmp
and
pop
sahf
loope
pop
cli
jge
add
insb
enter
push
jnp
loope
jb
cmp
pop
jnp
and
xchg
pop
popa
in
loope
lods
orb
repz
nop
outsb
rcrb
in
mov
lods
inc
iret
loope
subl
cli
jns
mov
pop
and
mov
xchg
xchg
sub
add
pop
mov
in
test
fcompl
pop
out
js
inc
xchg
inc
in
mov
popf
push
dec
in
mov
mov
lock
cmp
pop
aaa
xor
mov
out
hlt
fistl
stos
aad
cld
mov
cmp
sub
inc
xchg
mov
dec
push
jb
sub
pop
adc
sahf
fstps
iret
xorb
pop
es
mov
shlb
xchg
jge
inc
int
aam
sbbb
fcompl
push
adc
int3
mov
adc
mov
push
xlat
adc
jbe,pt
push
aaa
std
leave
jl
pop
fbld
cmpsb
idivb
mov
dec
adc
mov
mov
pop
sbb
xor
xchg
ljmp
xchg
inc
in
sbb
adc
cmp
sub
rorb
cltd
mov
lcall
cmpsb
xchg
sbb
pop
movsb
sbb
lds
loop
add
jb
adc
je
mov
out
or
bound
mov
dec
xchg
push
sbb
out
sub
mov
and
dec
pop
sub
aad
fdivrs
mov
popa
call
in
cmp
addr16
pop
adc
mov
dec
filds
cld
dec
jp
sbb
arpl
scas
lahf
test
sar
mov
and
mov
xchg
out
mov
mov
pop
push
mov
pop
cmpsl
pop
testl
cld
shll
push
in
sarb
xor
jns
leave
mov
jle
out
pop
push
jle
shl
jecxz
nop
aam
repnz
cmc
cltd
sbb
sub
pop
dec
jmp
arpl
add
imul
cmp
push
bound
rclb
cltd
dec
insb
inc
aas
int3
repz
mov
lss
adc
add
cmpsl
jle
pop
rorb
in
inc
ds
sub
icebp
aad
mov
gs
mov
cmp
mov
or
sub
pop
mov
mov
nop
add
sub
cs
fiaddl
dec
es
lds
pop
lret
mov
pop
sbb
out
pop
imul
jmp
push
data16
out
in
cwtl
into
pop
mov
test
fwait
popf
xorl
add
lret
jp
pop
dec
xor
cmpsb
adc
pop
lret
mov
call
mov
lea
sti
pushf
ret
icebp
or
mov
jle
aad
adc
mov
pop
cmp
push
outsl
cmp
insb
inc
push
adc
jnp
js
lea
sbbl
lea
test
stc
outsl
sub
enter
in
cmp
ljmp
mov
loop
xchg
gs
inc
or
xchg
and
or
sub
hlt
cmp
dec
lods
mov
xor
and
inc
cwtl
test
jecxz
mov
call
cmp
repnz
popa
xchg
test
cwtl
lods
mov
fldl
je
outsl
sub
sub
xlat
jle
inc
gs
js
jb
je
and
mov
rclb
dec
jg
movsl
cmp
repz
popa
sbb
xor
shll
inc
pop
xor
and
mov
mov
dec
push
sbbb
sbb
test
adc
push
pop
cmpsb
faddl
inc
jo
pop
inc
dec
jne
and
scas
cmc
push
imul
pop
xlat
sbb
das
jns
xor
ja
dec
mov
subl
aaa
pushf
cmp
jne
and
arpl
mov
stos
mov
and
cmp
sbb
popa
sti
outsw
jl
xchg
cwtl
add
dec
into
stc
in
xor
jns
adc
xchg
pop
jb
cmp
and
jle
lret
mov
or
adc
aad
out
jp
fsubrs
int
cmp
and
inc
enter
mov
cmp
cmp
xor
xor
test
stc
sub
bound
arpl
fwait
scas
out
xchg
insb
out
fdivrp
sub
xchg
or
cmp
data16
or
iret
inc
mov
enter
push
add
pop
mov
lds
stos
sbb
orl
push
mov
leave
rclb
mov
or
add
in
mov
sbb
mov
andl
mov
xchg
fsubp
clc
dec
cmp
gs
jbe
inc
stc
dec
and
fcoml
cmpsb
jnp
iret
js
jno
fidivs
test
add
push
int
sti
and
or
mov
outsl
ror
sti
cmc
pusha
inc
push
aas
or
mov
int3
rcrb
adc
pop
xor
push
sbb
popa
pusha
aad
mov
out
jo
add
sbb
push
cli
movd
and
ret
xor
sbb
imulb
mov
cmp
dec
cmpsb
sahf
add
insl
and
sbb
inc
inc
or
xchg
or
fisubrl
inc
fcmovu
loope
sbb
shl
pop
js
loop
inc
add
dec
adc
jge
adcb
ljmp
sbb
stos
daa
push
dec
fbstp
aaa
inc
rol
xor
xchg
dec
aas
mov
cs
pushf
iret
into
lods
pop
jmp
mov
push
cwtl
insl
mov
ljmp
xor
rcl
out
imul
dec
and
dec
mov
xchg
push
and
dec
xchg
adc
ret
pop
hlt
movsl
sub
sbb
stos
lds
adc
xlat
push
inc
lock
mov
jl
push
enter
ljmp
pop
sbbl
sub
int3
cmp
shlb
inc
sub
dec
push
fwait
mov
dec
mov
and
xor
loope
in
inc
cmp
shr
or
jns
fidivrs
jne
mov
xchg
in
loopne
inc
dec
mov
int3
cltd
inc
mov
mov
push
scas
add
lock
mov
mov
mov
sti
fidivrl
add
test
daa
lret
pop
xchg
cmpsb
push
pop
pop
insl
roll
sbb
repnz
shr
jge
and
pop
mov
add
sarl
mov
test
popa
outsb
jmp
pop
sbb
fs
jbe
pop
movl
inc
xor
rorb
xor
testl
sbb
ret
inc
mov
xchg
sub
jnp
push
repnz
xor
in
mov
test
ror
enter
mov
dec
jl
mov
or
mov
and
repz
fimull
adc
incb
lahf
data16
xchg
leave
add
and
rorl
mov
out
add
fists
cs
jmp
adc
mov
push
out
stos
push
and
testl
incb
fldl
xchg
mov
inc
mov
sahf
pop
fnstsw
add
sub
mov
cmp
or
and
xor
rcll
in
rorb
lret
sbb
mov
and
sbb
ficoms
xchg
int
cmpsl
imul
or
mov
pop
iret
or
imul
cwtl
mov
loope
out
mov
es
mov
or
data16
arpl
outsb
rcrb
inc
hlt
lds
insb
daa
stos
ficoms
add
sub
insb
lahf
adc
mov
and
jl
lods
dec
loop
popa
les
fidivs
xor
mov
sti
das
cmp
adc
cmp
call
int3
dec
icebp
gs
frstor
push
hlt
dec
mov
push
rorl
cmp
stos
lock
arpl
push
pop
fidivrs
and
ds
add
icebp
jg
xchg
pop
ja
dec
xor
mov
call
iret
or
add
cli
repnz
fs
cmp
jbe
xchg
into
pushfw
mov
add
ret
xor
cmpsb
jle
push
or
mov
sub
bound
sub
repz
fisubrs
testb
sub
pop
in
insl
push
pop
fildll
shll
xor
mov
and
aas
xchg
test
xchg
push
arpl
addr16
cmp
cmp
mov
sbb
jo
pop
cld
enter
lea
jbe
aaa
dec
test
fstpt
lods
xor
out
rclb
sub
nop
stos
and
fnstenv
cmc
push
out
cmp
jp
sbb
icebp
push
lods
cmc
mov
call
mov
xor
stos
push
mov
xor
inc
lock
popa
sahf
adc
mov
mov
inc
and
adc
jae
or
pusha
cltd
mov
adc
out
push
lea
push
imul
int3
dec
les
scas
test
xor
aam
and
or
pushf
inc
dec
movsl
and
test
sub
cmp
cmp
cmp
or
dec
fwait
and
inc
xor
sbb
cmpsb
mov
jne
dec
call
int
xchg
enter
xor
or
jl
jns
cmp
jge
in
stos
sub
pop
cmp
adc
mov
cmp
fbstp
in
cmp
rol
fsubl
mov
push
mov
dec
dec
jmp
pop
andb
test
imul
ss
imulb
int3
jge
into
push
out
icebp
notl
jnp
addr16
jnp
xlat
adc
inc
dec
or
mov
mov
repz
sub
aam
nop
sub
inc
out
clc
and
mov
sbb
mov
ret
jg
and
jp
loope
js
rep
or
lods
leave
nop
jle
jns
shl
jmp
xchg
mov
jno
aas
clc
mov
push
rclb
cmpsb
test
mov
mov
push
lahf
adc
fstpt
ror
dec
cmp
mov
pop
jle
mov
lds
iret
sahf
sbb
scas
push
enter
andl
loope
or
addr16
mov
pop
sarl
mov
mulb
test
aad
loopne
jns
cmc
int
fs
mov
stos
pop
shl
jnp
and
jmp
fmull
jbe
sarl
nop
in
shl
add
int
fisttpll
mov
pop
push
xchg
daa
mov
nop
push
lock
add
push
insb
cmp
into
inc
adc
push
rcll
popa
shl
xor
addb
xchg
scas
jge
mov
sbb
sarl
repz
int
mov
lds
loope
dec
arpl
fcoms
push
andl
bound
add
pop
mov
xor
cmp
add
psllw
push
repnz
mov
test
lret
push
dec
sbb
andl
mov
push
adc
dec
dec
push
cmp
movsl
data16
arpl
test
sub
jnp
push
out
pop
xchg
lds
repnz
push
clc
add
dec
aam
xchg
loop
popf
aam
leave
pop
jae
dec
mov
cltd
es
in
aaa
lock
lahf
imul
xchg
stos
in
xchg
notl
cltd
push
and
pusha
inc
stos
aaa
stc
push
or
lahf
xchg
das
mov
cmp
iret
jmp
mov
sub
int3
sub
fidivrl
outsl
and
sbb
adc
fbld
addr16
adc
inc
dec
popa
adc
mov
gs
les
fistps
stc
jg
int
mov
mov
add
xor
inc
aaa
loop
mov
mov
adc
in
cmp
mov
out
enter
cmp
mov
xchg
scas
movsl
xor
movsl
out
pop
pop
xchg
push
jns
jne
cmp
xchg
push
stos
int
shlb
adc
dec
dec
fidivrs
call
mov
lods
and
pop
iret
cmp
movsl
xor
xor
mov
fmull
mov
adc
cmp
inc
sub
test
sbb
test
mov
xor
fs
pop
in
pop
mov
test
adc
or
insb
inc
and
sbb
xchg
dec
and
xorb
insb
into
and
aam
arpl
push
sub
jecxz
mov
insl
leave
pushf
xchg
cmp
test
inc
pop
jnp
xchg
inc
bound
sub
mov
adc
loope
test
dec
clc
popa
and
adc
loope
pop
out
mov
add
mov
inc
data16
dec
ret
or
xchg
nop
jb
inc
je
cmpl
in
cmc
idivl
ret
sbbb
std
adc
push
std
inc
divl
add
dec
mulb
xchg
fdivl
jecxz
mov
mov
cmp
push
dec
fimull
mov
pop
jle
add
into
popa
push
js
and
in
scas
test
or
mov
nop
lret
mov
cmpsb
rclb
sbb
pop
adc
mov
aam
imul
fs
aaa
jl
hlt
pop
arpl
add
ja
cld
fbstp
xor
int3
or
mov
dec
xchg
arpl
lret
das
popl
push
or
pop
std
dec
sahf
cmc
nop
cpuid
dec
stos
push
fs
cmp
push
cs
mov
inc
fs
and
loop
cwtl
outsl
loope
icebp
cmc
jg
fists
or
mov
cmpsl
fwait
jae
xchg
cmpsl
mov
or
mov
dec
add
jle
das
pop
or
pop
add
loope
push
jp
fisttpll
inc
adc
stos
xchg
jmp
ret
sub
cmp
pusha
popa
iret
adc
mov
push
jne
ja
mov
scas
cmp
sbb
hlt
repnz
aaa
cmp
imul
imul
adc
out
jmp
mov
adc
dec
pop
cwtl
out
test
loope
ds
adc
dec
mov
popa
leave
out
mov
lahf
pop
fdivrl
inc
in
pop
jbe
test
push
ret
push
movl
or
adc
mov
cs
xor
xor
jo
repz
cli
cmp
dec
xchg
sti
jmp
or
pop
sub
mov
aas
xchg
cs
pop
fisubrl
lcall
loop
push
jge
cld
std
mov
lret
out
sub
push
pop
into
add
dec
adc
mov
daa
rorl
xchg
out
jo
inc
or
or
inc
mov
xorl
mov
pop
stc
mov
fsubl
cmpsl
fwait
adc
or
add
pop
mov
add
out
pop
pop
push
shll
cld
sbb
lcall
push
subl
cmpsl
inc
inc
and
mov
mov
insb
test
inc
pop
dec
xchg
movsb
imul
mov
and
or
and
lahf
add
nop
out
lods
out
idiv
dec
cld
inc
jnp
mov
arpl
mov
pop
and
push
aam
in
popf
stos
in
bound
add
cmpsb
xor
push
mov
mov
push
cli
mov
push
mov
fs
pop
xchg
jmp
loope
pop
mov
xlat
out
mov
lock
in
leave
or
mov
mov
insl
ret
fmul
js
fsubrs
mov
push
push
das
imul
out
or
mov
and
mov
mov
insb
sub
incb
addr16
adc
dec
lock
ret
xlat
pop
jo
lahf
lds
mov
aad
into
jg
jo
inc
rclb
xchg
aad
jbe
sbb
jle
mov
inc
cmpsb
stos
sub
jne
push
les
shl
sub
int3
add
pop
sub
jp
nop
stos
pusha
dec
xor
and
jo
cmp
cmp
cmp
test
and
test
daa
sbb
loopne
mov
xchg
hlt
push
inc
push
and
call
lret
jge
lahf
add
iret
daa
xor
pop
int
sub
jb
xchg
test
bound
xor
xor
movsl
jne
aaa
jns
push
imul
cmp
adc
js
jp
rorl
sub
inc
mov
outsl
and
lret
fdiv
mov
jbe
divb
clc
addr16
sbb
mov
notl
jnp
inc
mov
dec
insl
popf
rcrl
lods
cmp
repz
out
pusha
push
mov
lods
xor
pop
fdivrl
ja
pop
and
pop
xchg
mov
or
dec
pop
fimuls
nop
inc
int3
mov
xor
xor
cwtl
pop
stos
hlt
sbb
inc
ljmp
jbe
push
mov
and
xor
das
hlt
xor
cmp
into
insb
cmp
fs
mov
lock
mov
inc
mov
xchg
aaa
inc
int3
pop
int3
hlt
es
and
movsb
xchg
inc
out
rcll
sbb
movsl
lcall
lods
push
fisubrl
mov
sbb
and
inc
cwtl
pop
push
out
jb
insb
imul
xor
push
sbb
or
pushf
pop
pop
sub
cltd
out
jmp
fwait
jge
lock
mov
sbb
jmp
sbb
sbb
das
fidivs
repz
mov
icebp
push
mov
aam
inc
out
lods
xchg
xor
cmc
bound
outsb
into
xlat
icebp
cmp
add
lds
out
rolb
sub
cmc
mov
mov
clc
pushf
into
jne
test
pop
or
mov
xor
sub
mov
inc
sub
stos
sbb
jg
rcrl
es
stos
dec
gs
lea
in
pop
dec
push
xchg
bound
xchg
push
ja
rorb
les
in
xchg
xchg
lret
popl
sarl
imul
loopne
dec
xchg
cmpsb
push
fsubrs
sub
inc
lock
lods
fwait
xchg
and
and
cli
dec
adc
lret
dec
sti
fidivl
push
lods
mov
or
loop
xchg
jl
clc
dec
lock
je
imul
jnp
jnp
inc
decb
pop
cli
out
xchg
push
cmp
mov
mov
repz
sbb
and
push
push
dec
fstp
adc
enter
adc
xchg
jae
mov
mov
cmp
adc
shlb
mov
add
sbb
cmc
inc
or
out
adc
scas
xor
pop
xchg
dec
cs
cld
mov
das
repz
jge
in
lods
mov
add
fdivs
mov
sub
xor
and
jmp
int3
jns
dec
sbb
adc
mov
in
ss
cwtl
in
dec
cli
ja
mov
add
out
cmp
cs
jmp
pop
mov
data16
sub
in
int
sbb
mov
mov
bound
test
mov
mov
scas
mov
sti
xchg
and
xchg
inc
sbb
fiadds
lods
int3
mov
xcrypt-ecb
cmpsl
mov
push
or
or
outsl
push
stc
inc
and
mov
icebp
dec
dec
scas
aas
call
jno
popf
xchg
inc
aam
data16
or
shlb
xchg
hlt
fidivl
pop
adc
or
jp
add
push
leave
insb
cmp
imul
push
pop
call
leave
add
pop
stc
cmc
loop
sub
in
in
xchg
mov
in
inc
pop
pop
mov
jle
mov
pop
or
test
and
jnp
dec
cmpsb
xchg
pandn
push
leave
or
inc
shrl
int3
xchg
lds
mov
ja
ljmp
push
lock
pushf
pop
or
cmp
dec
movb
bound
mov
add
or
jmp
or
rcll
clc
popa
mov
ret
call
insl
sub
pop
pusha
aam
mov
sahf
in
out
es
cmp
jmp
jno
hlt
adc
movl
out
ret
mov
ja
xchg
jae
lret
lahf
das
nop
fnstcw
mov
pusha
xchg
scas
push
jp
cmp
jle
pop
test
lea
iret
clc
pop
pop
inc
loope
insl
xchg
jle
jp
out
jns
ficomps
push
daa
xor
xor
jge
dec
hlt
imul
ret
repz
insl
push
scas
shll
sub
mov
daa
mov
pop
cmp
pop
ljmp
push
outsl
push
bsf
loope
or
mov
into
iret
fmuls
out
pop
lret
js
sbb
cltd
mov
jnp
testl
mov
mov
and
jg
inc
mov
mov
add
int3
cmpl
and
rcll
add
xchg
mov
lcall
fadd
mul
dec
and
xchg
repnz
popf
push
sbb
ret
and
or
stos
and
mov
repnz
rol
xchg
sti
sbb
add
aam
lock
imul
pop
hlt
idivl
push
xchg
fnstsw
xchg
pop
dec
cmp
les
daa
clc
xorb
gs
rolb
jb
mov
xor
sbb
jns
lea
cmc
xlat
or
dec
imul
enter
mov
fisttpll
cld
push
cmp
push
mov
in
rorb
lods
cmp
pop
pop
or
aaa
loop
xor
xchg
stos
cvtdq2ps
cs
in
pop
mov
fistps
das
repz
dec
sbb
scas
sahf
sarl
push
mov
or
push
push
mov
mov
ret
andb
imul
push
inc
adc
popf
bt
jmp
or
mov
pop
push
mov
in
add
pop
inc
xchg
rclb
popa
cwtl
adc
push
outsb
aaa
jbe
sub
cmc
movsb
xchg
pop
sbbl
jne
shrb
fldl
cmp
or
cmp
sub
scas
mov
mov
inc
cmp
stc
push
or
cs
add
xchg
push
pop
pop
les
mov
cmc
sbb
mov
mov
cmp
cli
mov
hlt
jo
lods
push
scas
dec
xchg
mov
mov
outsb
pop
mov
movb
xor
mov
sbb
and
or
enter
fmul
adc
mov
rcrb
clc
push
mov
dec
in
inc
sbb
mov
xchg
test
cmpsl
sub
xchg
add
dec
aaa
lret
aam
dec
loope
in
das
sahf
pop
mov
inc
add
push
inc
xchg
add
jne
xchg
shlb
pop
bound
inc
mov
adc
stc
cmp
out
test
adc
daa
fistl
cli
mov
frstor
inc
scas
aaa
mov
mov
or
pusha
fiadds
push
pause
mov
in
lock
sub
and
outsb
mov
dec
ret
add
and
sbb
dec
shlb
in
out
daa
shl
repz
imul
insb
sahf
lods
iret
pushf
loope
fldl
xor
push
sti
push
mov
pop
mov
in
sbb
push
pop
sub
or
sarl
aas
pop
imul
add
cld
cmpb
adc
cmc
mov
sbb
leave
sbb
scas
cmp
pop
mov
xlat
xchg
pop
stc
mov
std
movsb
mov
imul
xchg
lret
dec
out
jae
jg
mov
shlb
sub
leave
inc
xchg
addr16
xchg
fistpll
dec
bound
push
push
mov
or
cmp
sub
mov
scas
cmp
or
ret
jecxz
jno
sub
mov
inc
call
jns
lret
and
mov
inc
cmp
sbb
push
movsl
cmp
cmp
jns
mov
fwait
scas
jmp
push
call
push
sti
xchg
push
movsl
jge
shr
movsb
aad
sub
pop
xor
xor
inc
pop
xchg
inc
xchg
and
cltd
mov
mov
orb
push
xor
cmpsb
dec
xor
sub
mov
dec
add
mov
je
in
dec
mov
sti
out
aad
cmp
rorl
popl
mov
jmp
mov
mov
push
movsb
xchg
je
jo
inc
jp
mov
ja
and
orw
outsb
push
dec
mov
loopne
dec
dec
dec
daa
in
adc
sub
addr16
movsb
mov
cmp
inc
fwait
mov
icebp
fistpll
push
inc
leave
push
xlat
icebp
test
loope
push
jno
mov
negl
outsw
hlt
and
sti
jb
add
jp
icebp
jp
mov
jno
and
rcr
int3
aad
stos
int
mov
into
enter
push
sub
es
sti
jae
loope
jnp
negb
adc
scas
adc
dec
or
shlb
mov
or
movsl
shlb
xlat
mov
hlt
cmpl
pop
jnp
cmpsb
push
sub
adc
mov
jne
pop
jo
xor
shrl
mov
mov
mov
rcll
jns
or
repnz
sbb
clc
insl
pop
or
cmp
movhps
lods
lds
mov
mov
xchg
xor
adc
cltd
les
inc
into
test
les
fidivs
daa
fwait
arpl
adcb
fs
test
push
mov
lahf
and
loopne
jmp
flds
or
cli
dec
pop
push
ret
push
ret
mov
sub
jg
sahf
jne
std
adc
mov
andb
push
xchg
pusha
push
cmp
fldt
rorb
mov
push
mov
add
cs
sub
xor
in
adcb
pop
fwait
xchg
stos
push
in
leave
imul
push
je
popf
insl
inc
inc
sbb
xchg
imul
inc
dec
xor
lret
mov
pushf
mov
int
nop
xchg
inc
imul
xchg
cltd
notb
aaa
jne
push
mov
enter
mov
ffree
mov
pop
mov
and
outsl
lock
dec
rol
stos
pop
loopne
xchg
push
xchg
sbb
xor
mov
cmp
push
add
jmp
cli
add
dec
arpl
sub
add
jae
inc
daa
orb
pmulhuw
jbe
jge
lret
mov
fidivs
in
enter
mov
xchg
mulb
pop
inc
add
out
push
mov
data16
out
addr16
pop
movb
and
int3
gs
push
xchg
pop
popf
movsb
lahf
cmp
movsb
mov
xor
outsb
jne
stos
cmpsl
rep
push
jmp
pop
or
jmp
lahf
roll
mov
mov
add
pop
adc
icebp
dec
jp
enter
fld
pop
incl
sahf
cmp
mov
loop
cmp
sbb
movsl
push
dec
arpl
mov
loop
xor
inc
push
frstor
shl
out
shll
in
jb
fs
jo
daa
inc
jb
mov
ficoms
rcll
push
jns
in
les
or
dec
hlt
sbb
or
inc
inc
lods
cmp
mov
lret
dec
lret
dec
mov
test
sub
cmp
shlb
mov
sahf
test
scas
cmp
jecxz
movsb
lea
stos
dec
ret
xchg
mov
xchg
xorl
add
stos
fstl
push
adc
dec
popf
push
pop
bound
test
or
cmpsb
into
fwait
arpl
les
cmp
xchg
jecxz
jge
jnp
mov
mov
loope
stos
notb
adc
popf
daa
daa
cmp
outsb
idivl
xor
enter
push
imul
jle
lods
sbb
test
outsl
fdivr
mov
jne
cmp
dec
jnp
pusha
mov
addr16
xor
rol
stos
sti
sub
dec
push
adc
lret
dec
and
jge
inc
lea
lret
push
inc
out
pop
xchg
push
icebp
pop
int
arpl
inc
sar
fistpll
ret
jle
sbb
mov
fs
cmp
add
aaa
xor
mov
mov
mov
mov
fwait
or
push
sub
leave
in
push
cmc
cmp
popa
pop
and
jb
incb
dec
lods
or
mov
pushf
mov
xchg
ret
sbb
push
xchg
aaa
out
into
popf
mov
add
xchg
mov
cmpsl
or
mov
enter
or
andb
jne
pop
jle
add
imul
lods
add
cmpsb
ss
imulb
pop
sti
jg
mov
in
inc
cmpsl
or
lahf
pop
sub
fs
cmp
enter
adc
movsb
sub
cmc
loop
jecxz
xchg
sbb
or
test
jb
pushf
outsl
cwtl
dec
js
dec
hlt
dec
insl
aaa
int3
adc
outsb
add
sub
or
mov
pushf
push
cmp
pushf
xor
mov
idivb
test
std
mov
jmp
popa
xchg
in
mov
push
mov
mov
fidivrl
pop
fstl
cwtl
jns
sahf
loope
add
xor
and
xchg
or
pop
xchg
jns
push
and
test
std
sub
cmp
dec
cmp
outsl
loopne
cmpsb
subl
rol
jle
jb
stc
jge
or
push
push
mov
pop
pop
rol
stc
push
pop
push
call
in
stos
mov
popa
xchg
mov
cli
mov
testb
ret
pop
pop
mov
ret
scas
mov
scas
fmull
shll
scas
stos
test
in
cmp
loope
ljmp
jge
repz
xor
adc
pop
imul
arpl
cmp
insl
scas
dec
stc
lods
icebp
xor
xor
idiv
call
negl
push
pop
push
mov
pop
sub
nop
push
add
pop
shl
push
and
pop
cmp
and
push
push
push
mov
pop
pop
pop
nop
call
jmp
cld
nop
jo
fcoml
js
aaa
jo
adc
xchg
in
scas
popa
mov
pop
ja
xchg
cmp
aam
hlt
jg
jp
and
lods
test
into
mov
jns,pt
lret
dec
dec
mov
mov
sub
les
push
and
cmc
jp
push
mov
pop
cmc
push
call
adc
push
mov
out
xchg
push
enter
sbb
jmp
fistpll
xor
lock
fwait
mov
mov
add
pop
push
add
mov
pop
sub
sar
test
push
push
add
pop
pop
jl
push
add
pop
clc
jns
or
inc
dec
lea
jmp
lahf
outsl
dec
add
xlat
insl
push
cmp
cltd
stos
lock
inc
mov
nop
mov
add
stc
jp
incb
sarb
jge
cmp
jmp
imul
or
add
call
jecxz
xor
or
push
or
out
into
in
lret
push
push
mov
fwait
sbb
jle
imul
lret
in
xor
fnstcw
mov
fs
lahf
inc
nop
popa
jp
ss
lods
inc
jmp
das
adc
iret
dec
push
mov
and
mov
popa
sbb
xchg
pop
outsb
push
fistpl
or
aas
lcall
lds
jnp
dec
or
mov
mov
adc
jnp
xor
and
and
mov
add
jae
dec
xchg
arpl
jae
dec
mov
inc
jmp
leave
testb
jns
ret
lea
loope
hlt
dec
mov
sub
arpl
fstpt
mov
popl
dec
push
sub
mov
and
adc
add
lret
shr
xchg
fistpll
lret
and
sbb
add
test
adc
lods
out
lds
rolb
sbb
xchg
addl
push
lods
std
testl
je
loop
jecxz
or
jns
dec
pusha
push
add
adc
ss
cli
xchg
push
pop
rclb
xchg
cmp
adc
xor
clc
jbe
lea
push
add
pop
test
cmp
jl
or
push
mov
add
pop
jne
jb
cmp
stc
jle
jbe
jae
and
jae
js
xor
nop
jmp
sbb
stos
pop
jp
shr
xor
test
inc
stc
push
dec
sti
call
pusha
fisubl
test
dec
mov
insb
dec
fwait
add
test
out
lea
push
in
hlt
mov
push
sbb
scas
jne
data16
pop
sbb
push
jl
push
push
stos
add
cmp
jno
lock
iret
pop
out
push
mov
xor
pop
jmp
mov
je
lahf
sahf
fistl
mov
cli
movsb
sbb
dec
fldl
jp
test
xor
sbb
mov
pop
xchg
dec
hlt
ret
jb
xor
add
adc
sub
xor
stos
xor
pop
inc
outsb
mull
push
push
push
push
pop
pop
stos
push
push
pop
pop
pop
pop
loop
jecxz
dec
mov
cmpsb
js
inc
sub
cmp
dec
sub
stc
dec
lret
movups
mov
cmpsl
push
pop
lahf
jg
loopne
adc
mov
pushf
inc
popa
test
jl
push
pop
cmpsl
mov
fadd
jge
scas
xchg
cmc
push
rorl
lock
pop
test
int
mov
test
inc
push
call
insb
lret
push
js
dec
ljmp
sub
es
lods
loopne
pop
and
loope
mov
out
rcrb
sbb
cmp
sub
popa
movq
xchg
adc
jp
es
push
push
xchg
jg
dec
ljmp
dec
mov
jecxz
cs
pop
add
pop
push
push
pop
add
pop
push
push
push
cmp
pop
pop
pop
push
call
mov
inc
and
int3
push
adc
fidivs
pop
pop
jge
or
xor
sbb
outsb
cmpb
stc
sub
divb
mov
gs
cs
int
insl
mov
popa
adc
lea
cltd
sahf
sub
pop
or
jecxz
mov
xor
push
adc
js
adc
inc
pushf
inc
inc
jp
clc
sbb
jo
mov
dec
subl
inc
pop
jno
cmpsl
insl
out
sub
mov
adcl
shl
mov
clc
pop
xlat
adc
push
dec
es
jo
inc
sub
test
inc
sbb
mov
fsubrs
lods
jmp
xchg
lods
ja
add
jbe
fsubl
ss
push
mov
sub
sub
cmc
call
mov
mov
push
jle
test
push
mov
cld
cli
xlat
outsl
gs
add
pop
dec
jne
jae
jnp
jg
push
inc
dec
pop
loop
jecxz
adc
and
push
cmp
popa
mov
xor
fmuls
mov
cmp
int3
and
fisubl
dec
lret
xor
mov
js
out
andb
pop
lcall
xchg
in
push
jb
ss
in
mov
stos
stos
rol
mov
pushf
addr16
or
xchg
aam
and
loopne
cmp
inc
cwtl
sbb
and
je
nop
movsb
dec
push
out
lahf
xchg
les
xchg
jns
adc
clc
popf
out
dec
in
mov
loopne
lods
mov
cltd
or
sub
ret
pop
sbb
xor
shr
dec
out
pop
and
xchg
adc
pusha
mov
mov
ret
in
out
cmpsb
cmp
popa
ja
inc
xchg
lret
loopne
jmp
mov
out
ss
movl
pop
pop
push
jle
sub
pop
jmp
sub
icebp
add
std
jnp
in
mov
insl
insl
std
mov
mov
je
arpl
add
add
add
les
ffreep
mov
mov
pop
xchg
fdiv
imul
movsl
loop
inc
popa
mov
aaa
lds
call
jno
xchg
ret
outsb
xor
pop
sbb
mov
dec
outsl
jo
movsl
mov
imul
std
sbb
pop
jno
shrb
jae
push
cmpsl
rcr
in
sahf
std
aad
lds
push
adc
jl
and
push
fldl
xor
cwtl
mov
pop
xor
dec
loope
shl
lret
push
loope
cwtl
cmp
jmp
adc
lock
ror
cmp
cld
lret
test
mov
dec
lock
into
sbb
jne
notb
and
push
dec
add
mov
cwtl
sarl
sbb
push
mov
popf
mov
pop
pop
xor
fnstcw
lock
fs
push
fs
leave
xchg
stos
pop
and
testb
sahf
adcl
sarl
in
in
enter
scas
and
pop
sbb
insl
jmp
xor
cltd
je
or
push
out
pop
fs
in
dec
cmp
sub
enter
daa
xchg
jns
das
enter
pop
rorl
inc
bound
test
dec
xor
lahf
hlt
mov
push
jmp
inc
es
inc
dec
daa
pop
push
das
adc
flds
loopne
imul
xor
fstl
shll
adc
jnp
sbb
or
repnz
scas
fisubs
inc
cli
mov
rcrb
stos
bound
mov
cmp
lds
jbe
outsb
dec
xchg
stos
lret
je
push
loopne
dec
leave
nop
outsb
test
xorl
or
adc
add
pop
jmp
cmpb
test
movl
jno
in
or
in
adc
mov
push
inc
cli
movsb
mov
loope
dec
xor
repnz
fstpt
into
sti
jns
pop
cmp
jnp
pop
xlat
movsl
repz
pushf
pop
dec
stc
and
push
test
xchg
push
or
mov
in
pop
jnp
xchg
repz
test
xor
jnp
mov
jg
fists
adcl
dec
cmp
in
fwait
sbb
ds
movntps
or
and
jle
int3
fwait
dec
mov
leave
ficoml
sbb
mov
dec
mov
ljmp
int
mov
push
xor
and
das
adc
adc
sub
lret
arpl
dec
jnp
jno
popf
or
pop
adc
push
ret
pop
mov
addr16
mov
aam
cmp
mov
out
xor
lret
fisubrl
in
adcl
add
loope
rclb
xchg
das
mov
mov
xchg
in
imull
mov
int3
fs
adc
sbb
js
add
clc
test
pop
leave
inc
pop
test
je
and
xchg
sub
cmp
lock
fs
push
loope
loopne
mov
cmpsl
sub
ret
lret
imul
enter
xlat
push
stos
sub
iret
sti
je
cmpsl
data16
pop
sub
fcmovnu
jle
inc
mov
cmp
cmp
in
ljmp
adc
sbb
xor
outsl
loopne
sahf
inc
stos
xchg
cltd
and
sbb
lock
lds
mov
lcall
in
roll
adc
movsb
mov
mov
ret
and
pop
cmc
sub
mov
ljmp
or
fs
fstl
popa
add
and
fs
shl
pop
pop
jno
pop
mov
mov
inc
mov
and
clc
loopne
loopne
and
dec
push
mov
outsl
push
pop
hlt
add
pop
cmpsl
sbb
lahf
mov
cltd
lods
sbb
lods
icebp
fisubl
fdivs
xchg
push
outsb
dec
sub
sub
inc
push
mov
les
orl
cs
inc
mov
ljmp
and
pop
mov
xor
sub
std
jecxz
enter
loope
rcll
cwtl
dec
inc
pop
mov
adcl
fdivr
ret
aas
scas
mov
pop
mov
cwtl
loope
jne
pop
xchg
or
in
sub
sbb
cmp
pop
icebp
out
loop
adc
adc
pop
push
fnstsw
into
lahf
pushf
pop
js
jne
cmpsl
in
and
mov
and
lahf
jge
mov
jns
hlt
inc
xabort
popf
stos
enter
btr
pop
and
xor
cli
lcall
fstpt
push
shrb
adc
cld
cmp
jne
shll
out
jge
stc
mov
xor
push
aaa
jmp
clc
adc
je
repnz
jg
add
sarl
mov
imul
push
inc
xchg
push
jmp
push
nop
jp
jmp
lret
and
sahf
xchg
jo
jbe
sbb
add
dec
dec
xchg
das
push
xlat
mov
mov
jmp
xchg
xchg
pop
ds
mov
test
add
jns
or
hlt
fstl
or
imul
dec
dec
es
cmp
movsb
add
pusha
push
ljmp
push
or
cmp
sub
decl
sbb
xor
cmpsb
es
xchg
push
or
subb
aad
je
xor
xchg
hlt
ljmp
mov
pop
push
dec
inc
pop
and
sub
fxch
mov
outsb
repz
stos
xchg
dec
push
outsl
pop
data16
mov
sti
push
cwtl
insl
dec
std
mov
push
or
dec
pop
jb
ds
int
mov
dec
fwait
inc
ja
pop
jne
int3
sub
jge
sar
pop
lcall
jecxz
call
rcrb
repz
push
lods
mov
add
fidivs
lret
aas
mov
push
repnz
int
stc
and
loopne
and
std
inc
or
mov
or
inc
aas
push
mov
push
pop
pushf
adc
cmc
mov
xor
xchg
mov
addl
push
jmp
sarb
inc
push
cmpsl
push
sar
mov
mov
stos
pop
sub
push
lds
sub
iret
xchg
sarb
jnp
xchg
sbb
xorl
xchg
adc
sbb
and
pop
out
test
cmp
pop
insl
rcrb
lea
push
test
sbb
call
aad
aad
xor
xchg
cmpb
ja
sbbl
and
adc
sub
mov
cs
ret
mov
loop
fcomps
imul
insl
push
scas
dec
mov
daa
cwtl
xchg
arpl
dec
mov
dec
dec
mov
or
mov
pop
pop
sahf
and
in
mov
xchg
inc
cmp
add
push
pop
push
or
ds
repz
mov
rorl
lods
fstpl
sub
addr16
inc
cmpb
xor
cmpsl
shl
insb
jp
jge
mov
cmp
adc
and
pop
loopne
push
testb
or
cmp
mov
push
lret
add
mov
xor
push
addr16
and
test
pop
popa
sbb
std
je
loop
popa
int3
insb
inc
cld
push
push
lods
fsts
fsubs
xlat
lods
add
aad
and
xchg
aas
addr16
push
jmp
shr
lahf
xchg
fdivrp
ds
mov
pop
fcoml
andb
rorb
int
mov
cmc
sbb
sbb
jg
cmp
aas
fiadds
ljmp
leave
lods
dec
mov
inc
enter
add
xchg
pushf
imul
xor
imul
jg
cmp
or
or
mov
shr
iret
mov
fdivp
arpl
js
and
xchg
xchg
negl
jns
push
add
fs
or
xchg
add
dec
adc
and
shll
gs
xchg
xchg
xchg
lods
cltd
cs
popa
loopne
jg
dec
cmp
incl
xor
xchg
push
jae
shlw
popa
loope
sub
jne
sbb
push
jno
stos
ds
mov
sbb
pop
sub
hlt
fs
and
rclb
sbb
ss
jp
mov
mov
icebp
jbe
mov
inc
push
pop
clc
mov
and
lds
imul
mov
lcall
iret
divb
hlt
out
cmpsl
xchg
jmp
cmp
and
cmpsb
xchg
orb
jecxz
cmp
rolb
repnz
push
shr
xor
pop
xor
mov
dec
sti
push
leave
dec
pop
mov
aam
test
scas
in
add
cwtl
enter
mov
xlat
pop
iret
push
xlat
mov
es
jo
sbb
jo
mov
push
mov
test
imul
hlt
orb
fdecstp
movsl
rolb
ss
shrb
and
xlat
insl
xlat
lcall
das
out
lret
insl
test
or
and
mov
popf
push
push
in
aas
movzbl
jno
pop
popa
fsubs
pcmpeqw
mov
jmp
sub
shr
shr
cwtl
imul
dec
xchg
adc
pop
push
in
loope
adc
ret
jbe
fmuls
cltd
add
ds
pop
push
icebp
in
fs
xchg
cmp
loopne
jle
loopne
sbb
pop
add
and
dec
mov
leave
lret
ds
shll
rcr
or
insb
loope
push
mov
jmp
or
mov
mov
mov
mov
mov
dec
sbb
hlt
pop
jp
inc
jecxz
loopne
mov
fimuls
sbb
sbb
je
aad
inc
popa
cmp
ljmp
in
mov
lcall
xchg
add
adc
popa
movsl
leave
push
or
cmovb
cmpsb
xchg
cmpsb
cmp
cld
repz
inc
call
jmp
push
popf
aad
dec
sahf
cmp
orb
jnp
lret
lods
in
test
mov
test
aaa
xor
mov
adc
jg
dec
mov
inc
xlat
sbb
jmp
jle
notl
lock
lods
stc
push
int
push
adc
dec
les
sub
xchg
cmp
repz
inc
mov
mov
add
iret
pop
jo
les
into
or
iret
filds
fadds
pop
ss
inc
popa
jle
jnp
ret
inc
aam
xchg
ljmp
les
fnstenv
mov
pop
out
test
cmpsb
mov
xor
dec
aas
fldl
mov
mov
mov
inc
push
out
xchg
lock
popf
mov
je
or
into
and
mov
sub
leave
xor
arpl
aad
out
xchg
clc
sub
sub
push
xor
xor
inc
jecxz
inc
cmpsl
bound
jp
add
and
test
cs
mov
pop
dec
sti
and
rclb
cli
mov
dec
aad
pushf
cli
ret
dec
out
push
pushf
jecxz
arpl
mov
shlb
or
rclb
pop
shrl
cli
push
pop
xchg
cs
push
sbb
arpl
or
or
xchg
xlat
push
push
inc
sahf
out
out
pop
mov
sub
push
mov
cmp
mov
leave
lcall
shrl
lretw
in
adc
cmpsb
das
inc
loope
cwtl
cmp
movsb
data16
push
adc
add
scas
outsl
inc
imul
fwait
jg
movsl
cmc
push
nop
pop
push
adc
cmp
xor
xchg
pop
dec
pop
mov
xchg
pop
sahf
inc
aaa
fs
mov
sub
mov
btr
sub
dec
lock
and
insl
push
scas
dec
mov
xor
lret
aaa
pop
ret
inc
leave
divl
jp
sub
aas
adc
sub
dec
sub
or
push
mov
popf
clc
and
or
js
es
stos
cwtl
fimuls
test
or
push
lret
add
push
mov
xchg
sbb
sti
cmpsb
adc
inc
movsb
sti
lret
mov
dec
sub
gs
addr16
pop
push
cmpsl
stos
pushf
fnstsw
xlat
stos
shrd
xrelease
sub
sub
inc
sub
pusha
pushf
fstpt
xchg
inc
add
cmpsl
push
mov
cmp
in
leave
mov
pop
hlt
pop
insl
ss
rcrb
jno
cs
in
ret
adc
pop
mov
jae
jp
cmp
stc
in
std
inc
jecxz
test
int
pop
xor
xchg
pop
push
pop
jb
jb
int3
bound
mov
mov
lods
mov
rcl
xchg
adc
pop
inc
mov
movsb
mov
lock
leave
push
arpl
bound
mov
sbb
call
cmc
xchg
and
push
inc
in
clc
aas
loopne
and
lahf
xor
loopne
xor
xchg
jecxz
or
loope
in
mov
outsl
cmp
incb
insb
inc
addr16
push
xchg
test
adc
int
das
cmp
lcall
mov
popa
fwait
sub
stos
out
dec
and
outsb
jl
mov
sbb
imul
mov
adc
dec
jmp
xchg
sbb
cltd
sub
xor
push
repz
js
cwtl
adc
mov
scas
fistpl
push
imull
es
and
add
xchg
and
leave
xor
adc
loope
xchg
xchg
jb
mov
sub
test
iret
ret
icebp
lds
lahf
outsl
push
lret
cmp
dec
lret
stos
jp
jnp
push
pusha
mov
movsl
fsubrp
mov
mov
adc
cmp
mov
cmp
push
movsl
inc
shrl
ja
push
dec
in
mulb
sahf
aad
or
xchg
pop
test
or
fwait
push
daa
div
or
dec
out
jne
hlt
movsb
cmp
mov
aad
int
inc
adc
cmpsl
inc
mov
mov
aam
mov
int
decl
fsubp
add
cmc
cld
sbb
and
gs
bound
lahf
mov
fcmove
mov
mov
call
mov
dec
or
pusha
jmp
aaa
inc
pop
divb
stos
fsubrl
pop
adc
lock
cmp
mov
xlat
pop
sbb
mov
gs
out
es
xlat
inc
mov
jbe
ja
lahf
dec
data16
xlat
movsb
cmp
cmc
in
add
pop
pop
inc
push
sub
xchg
or
dec
lcall
xchg
pcmpeqw
push
cmp
xadd
jbe
cld
loop
lret
jl
stc
xchg
jge
and
mov
push
lahf
jmp
lea
cmp
dec
add
es
pop
mov
jge
pushf
popf
xchg
cmc
pop
sbb
insl
push
pop
mov
or
push
imul
jne
mov
adc
iret
sarb
push
push
adc
push
rcrb
and
call
stos
insb
andb
inc
push
xchg
and
test
js
and
fstpl
mov
and
mov
xorl
inc
or
ds
lcall
int3
movsl
adc
sti
data16
mov
inc
cltd
mov
xor
xlat
or
je
insl
pop
imul
push
or
rol
mov
pop
sbb
out
daa
mov
xchg
add
sub
jno
cs
stos
orl
loope
sub
jns
cmp
ja
repnz
dec
pop
xor
aas
cmpsb
xchg
mov
sti
xor
bswap
pushl
push
sahf
jp
xchg
dec
shr
or
loop
mov
pop
xor
push
pop
nop
fdivs
jge
push
dec
bound
jmp
adc
sub
inc
adc
jne
jp
cmc
add
dec
sbb
jb
daa
clc
push
cmp
gs
lahf
lea
inc
inc
jo
or
fcomi
inc
arpl
pop
shr
mov
adc
jmp
stos
in
out
nop
cmp
sub
mov
jmp
mov
repnz
mul
pop
inc
pop
sub
cmp
mov
xlat
popf
pop
fsubrs
addl
mov
xor
fwait
lock
pushf
dec
and
xor
in
addr16
inc
ds
mov
pop
inc
mov
data16
cmpsb
arpl
xchg
sti
add
cmp
jne
xor
ljmp
jns
add
jle
bound
inc
push
enter
movsb
lods
in
lcall
arpl
iret
pop
mov
jb
mov
scas
adc
ss
jbe
retw
imul
adc
pop
lcall
stos
xor
pushf
inc
and
clc
sub
mov
dec
pop
mov
jmp
sbb
flds
int3
arpl
inc
inc
pop
imul
inc
dec
or
mov
pop
push
mov
mov
inc
js
lock
in
in
outsb
push
mov
es
std
or
dec
sbb
cmpsl
dec
lods
dec
fistpll
test
call
icebp
movsb
out
into
mov
mov
adc
dec
add
mov
pop
lret
into
lcall
subl
mov
cmp
call
lret
xor
push
int
xor
add
into
ss
orb
inc
nop
popa
movsb
pop
and
subb
iret
mov
movsb
bound
lods
lock
lods
xchg
pushf
lahf
xchg
push
xor
pop
push
jae
jle
inc
push
loopne
push
sbb
mov
imul
in
cli
int3
mov
sbb
lahf
jae
push
testl
jo
iret
cmpsl
push
xchg
sbb
ret
in
cmp
mov
out
cmp
ret
das
bound
xchg
ljmp
aaa
mov
aaa
push
daa
push
ret
and
pop
push
add
daa
insb
inc
fisubl
jne
push
mov
loopne
mov
popl
mov
adc
in
std
mov
and
mov
or
movsb
dec
inc
and
outsb
xchg
pop
xor
fmull
ficompl
and
xchg
jo
call
mov
cmp
test
loop
daa
lods
cmpsl
into
inc
dec
jmp
add
pushf
mov
out
mov
adc
pop
mov
xorl
mov
cmp
xor
push
popf
sarl
pop
or
inc
push
push
xchg
push
jp
and
mov
adc
sbb
nop
mov
js
sub
mov
push
mov
push
fbstp
xchg
xchg
nop
sbb
cmpsb
xor
xor
shl
mov
loopne
dec
test
in
jbe
fisubrl
int
mov
xlat
or
inc
and
repnz
test
clc
ljmp
or
inc
mov
mov
sbb
cs
pop
call
mov
mov
sarb
call
jae
mulb
into
call
xchg
imul
in
inc
in
mov
ss
sub
ret
cmpsl
mov
inc
xchg
aam
int3
icebp
cltd
sbb
sub
xchg
addl
cltd
or
mov
or
xchg
pop
adcl
scas
imul
ljmp
fcoml
leave
pop
lahf
movsl
pop
or
ret
mov
or
adc
cmp
movsb
or
jl
pop
arpl
ds
inc
ljmp
out
xchg
push
push
push
stc
mov
arpl
add
mov
sub
or
lods
sahf
ds
addl
dec
ds
push
ret
mov
les
pusha
cmp
ret
daa
stos
push
outsb
sub
dec
roll
inc
dec
xchg
les
add
cmp
iret
mov
push
ljmp
add
mov
adc
fldenv
add
mov
add
sub
sub
je
jo
fsts
inc
jns
push
and
jp
xchg
pop
pop
adc
cmp
xchg
mov
in
push
push
fwait
jno
sub
dec
lock
inc
iret
nop
jg
push
add
push
sub
xor
inc
adcb
daa
sub
scas
dec
mov
push
insl
lcall
mov
test
mov
dec
push
out
sub
mov
inc
lds
pusha
add
jmp
cld
xor
aaa
ds
iret
and
mov
fs
insb
inc
mov
xor
jnp
pop
stos
fwait
popa
data16
inc
pop
xor
jecxz
sti
sbb
fldenv
xor
sahf
adc
add
xchg
scas
movsb
mov
sub
sub
repnz
fucomip
sbb
popa
cli
mov
hlt
les
stc
sbb
pop
dec
aam
lods
js
test
xchg
data16
adc
sub
clc
gs
les
sbb
loop
sbb
ror
mov
sbb
mov
inc
fildl
mov
or
xchg
mov
sbb
std
add
sbb
and
mov
mov
sub
mov
shlb
sbb
adc
in
les
mov
cmp
pushf
into
into
popa
in
clc
sbb
mov
ja
ret
push
aad
pop
sub
xor
test
lock
push
or
fisttpl
mov
cltd
out
in
or
push
inc
dec
mov
int
test
sbb
jns
loope
pop
add
push
xor
mov
in
ds
cmp
in
test
adc
out
or
jbe
mov
enter
cmp
icebp
cmc
lret
pop
sbb
pop
hlt
rcrb
out
mov
aam
push
divl
push
pop
add
sbb
movzwl
into
insb
aad
aad
out
dec
push
jecxz
and
sub
cs
sub
nop
jns
ljmp
faddl
pop
movl
lea
arpl
call
in
pushf
cmp
inc
mov
gs
and
xchg
mov
mov
inc
inc
sbb
mov
and
inc
ret
and
fiadds
outsb
bound
and
jnp
pop
sarl
pop
rcl
inc
pushf
rclb
and
adcl
aas
pop
sbb
add
add
xchg
mov
rcrl
jae
aas
outsl
xor
iret
sbb
jae
or
xor
jbe
cmp
cld
sbb
jne
pop
and
push
or
add
cmpsl
adc
push
fidivrl
es
mov
rol
popa
andb
mov
mov
aaa
push
adc
sahf
adc
sbb
loop
pop
fistpl
out
lds
jae
jns
pop
mov
xchg
adc
xchg
add
inc
add
xlat
cli
shll
xchg
movsl
test
xor
pop
outsb
mov
rcl
mov
sbb
jg
ret
mov
mov
xor
bnd
popa
and
sbb
xchg
in
mov
test
cmp
push
mov
xchg
sahf
mov
pushf
orl
mov
pop
out
pusha
sbbl
stos
js
push
cmp
push
sub
int
cltd
sbb
xor
shll
es
jmp
lods
aad
mov
fisubl
iret
adc
leave
jns
jae
xchg
mov
push
fisubrl
lcall
jmp
jmp
pop
rcl
shr
lods
aaa
and
jl
roll
fldcw
idivl
gs
call
dec
cmpsb
or
or
int3
movswl
add
dec
jns
xor
push
sub
or
icebp
dec
mov
xchg
cmpl
in
add
test
incl
int
outsl
and
nop
loopne
je
jecxz
daa
adc
dec
xchg
xchg
test
mov
or
fiadds
jmp
and
aam
push
xchg
arpl
sbb
add
test
les
ud2
mov
repz
jmp
rolb
imul
mov
fwait
das
adc
std
mulb
sub
inc
jmp
inc
rorl
cltd
pop
fdivrl
std
scas
pop
std
repz
adc
repz
sahf
mov
and
sbb
int
sbb
adcb
mov
and
mov
int
cmp
test
xchg
mov
or
int3
push
xchg
in
adc
dec
ljmp
imul
sub
hlt
cli
test
shrl
adc
setns
int3
jmp
hlt
shlb
mov
popf
je
enter
sub
pop
std
adc
sub
mov
add
push
adc
ds
inc
sbb
sub
je
shr
sbb
push
or
test
xchg
jb
test
push
cmp
mov
add
xor
aam
sbb
fs
or
adc
test
xor
xor
mov
xchg
add
mov
push
cmpb
adc
mov
imul
jmp
xchg
add
in
dec
jmp
scas
or
mov
sbb
pushf
xchg
adc
dec
inc
mov
xor
repnz
ficoml
sbb
xchg
pop
push
repz
or
dec
enter
leave
push
cmp
and
dec
mov
mov
and
dec
mov
lods
inc
ret
dec
fisttps
mov
adc
jge
mov
mov
leave
dec
fwait
mov
mov
cltd
shll
sbb
insl
mov
push
fcompl
add
xorl
shr
cwtl
and
jg
es
pop
push
das
mov
sbb
mov
scas
fisubs
int3
rolb
lds
inc
nop
hlt
pop
js
test
or
xchg
push
sti
outsb
push
in
sub
xchg
cmp
adc
mov
sahf
call
lods
or
out
shlb
cwtl
clc
jnp
jae
push
jbe
jne
sbb
xor
sub
les
arpl
inc
push
jno,pt
jp
or
dec
jnp
pop
mov
jae
lods
mov
fs
jns
out
aad
add
je
jo
orl
mov
mov
in
incb
daa
daa
ljmp
lret
frstor
jecxz
mov
sub
pop
cmp
insb
jle
and
dec
out
adc
mov
push
test
fistpl
jns
mov
outsb
dec
pop
mov
repnz
jne
repnz
out
sbb
sub
mov
ret
jle
sahf
cwtl
pop
fcomps
pop
cmp
subb
add
and
push
and
inc
dec
adc
xchg
in
push
xorb
mov
cli
idivl
jmp
int3
cmp
repnz
stos
ljmp
xchg
mov
mov
inc
pop
xor
and
aas
imul
mov
jp
sub
or
insl
mov
pop
fnstsw
mov
mov
jb
addl
jo,pn
push
scas
in
jecxz
mov
dec
cmp
enter
pop
outsb
cmpsl
cmc
flds
cs
daa
pop
ret
test
ret
out
orl
inc
jae
mov
aas
ror
inc
sub
mov
push
scas
pop
jge
xchg
xchg
loope
sbbl
mov
arpl
mov
push
jge
pop
pop
inc
push
or
sbb
cmp
jns
fs
repnz
mov
mov
dec
dec
cmp
insb
and
xchg
fldt
fwait
inc
push
mov
ret
or
xchg
addr16
xchg
imul
jg
sti
mov
pushf
jle
shr
fistpl
sahf
push
roll
dec
inc
fbld
add
jmp
cmp
cmp
in
inc
sbb
js
sti
test
leave
out
loop
movsb
in
xor
mov
test
mov
push
in
cltd
jmp
das
fidivrs
pop
sbb
mov
mov
dec
xchg
lock
and
outsl
xchg
mov
scas
dec
addr16
popa
sbb
push
hlt
pop
hlt
rcrl
pop
fsubrl
mov
mov
mov
xchg
cmp
inc
xchg
jmp
jne
sbb
pop
shlb
push
jg
cmp
movsb
push
into
nop
or
xchg
cmp
out
cmp
xchg
sub
imul
jmp
outsb
xor
test
loop
or
mov
mov
lds
push
lds
lret
cli
ds
fwait
cwtl
popa
cwtl
call
fistps
sub
lds
inc
or
fcomps
call
push
xchg
sub
push
xlat
je
shll
pop
xlat
pop
nop
out
mov
mov
cmp
punpckldq
dec
pop
dec
xor
sub
dec
imul
cltd
mov
xlat
aam
jo
push
std
xor
leave
or
mov
movsb
inc
jle
adc
popf
popa
or
fmulp
inc
pop
xchg
lcall
pop
fwait
call
adc
sub
insl
fptan
call
ja
pop
out
adc
aad
mov
or
fdivs
aam
testb
xchg
movsl
pop
enter
es
lds
aaa
mov
sahf
xorb
and
pop
jg
stc
sti
nop
sti
loop
sbb
jae
insl
cmp
pop
cmp
mov
add
aaa
fwait
rorl
in
fdiv
or
das
gs
jp
add
pusha
xor
fwait
xlat
xchg
push
xchg
lock
adc
insb
aaa
mov
je
push
and
mov
xor
sbb
es
mov
add
call
push
shl
jno
push
sbb
bound
sub
mov
xorw
das
leave
mov
ja
or
mov
imul
subl
mov
push
inc
adcb
pop
test
lahf
addr16
xor
pop
call
call
xchg
cmpsb
dec
add
push
jae
push
lcall
xchg
fildl
rorb
sbb
mov
icebp
sbb
lock
cmc
ret
imul
mov
jb
stos
jg
jl
sub
adc
negl
pop
loope
pop
adc
xchg
sub
inc
ljmp
add
addr16
test
pop
iret
dec
and
sub
insb
cmp
mov
lods
adc
xchg
dec
enter
movsb
add
mov
add
fdivrl
adc
mov
aam
fwait
push
fnstcw
scas
pop
push
test
and
out
decl
lods
jno
add
pop
int
mov
loopne
cs
popf
xlat
jl
xor
dec
dec
pop
inc
mov
cmc
addr16
out
in
aas
push
repnz
mov
imul
cs
xchg
sub
fstpt
or
xchg
sbb
add
add
rcrl
imull
jns
xchg
add
xor
and
push
arpl
leave
pop
mov
pop
push
test
mov
lcall
loopne
movsl
jmp
mov
or
test
and
or
mov
inc
lcall
pop
xor
add
cmp
aad
jno
adc
shld
jne
inc
mov
mov
xor
xchg
add
stos
shl
cmp
and
inc
xchg
mov
iret
jmp
subb
mov
stos
inc
aas
xor
pop
jbe
divl
cmpb
adc
and
xchg
outsb
fs
pushf
mov
jmp
mov
sbb
jns
in
xor
pop
test
in
int
sbb
push
jmp
mov
inc
daa
jecxz
ljmp
aam
aad
jmp
repz
mov
sbb
mov
aam
ljmp
ljmp
or
inc
mov
in
push
push
inc
mov
mov
bound
ja
fldt
mov
add
mov
mov
loop
jl
adc
dec
push
sub
pop
aad
mov
sub
mov
mov
cmpb
dec
addr16
inc
dec
cmp
in
sbb
insb
sub
imul
sbb
cmpsb
andb
loope
dec
mov
test
dec
pop
jbe
inc
pop
vmovaps
mov
inc
adc
or
mov
aam
pop
ret
or
or
ficomps
mov
mov
lods
fidivs
orl
cmp
sub
cltd
adc
jle
test
int3
mov
imul
add
and
fldl
outsl
cmp
sub
ja
sub
sti
js
push
sbb
rorb
ficomps
mov
repnz
sbb
inc
pop
decb
aaa
stc
cmp
xor
xor
xor
jbe
cmpl
and
lods
outsb
mov
mov
aam
jmp
mov
pushf
pop
inc
lret
add
mov
push
mov
pop
out
add
lahf
xchg
dec
lret
jne
mov
inc
fs
dec
fisttps
in
push
mov
mov
lret
mov
movsl
subb
ret
roll
sysret
lret
and
inc
pop
mov
leave
arpl
hlt
repz
pop
fsubrp
sar
xchg
mov
cmc
lret
xor
int3
ret
or
dec
roll
sub
loop
mov
orl
sub
out
xchg
rcrl
in
aam
lds
jb
ss
push
notl
aad
ja
lcall
scas
outsl
mulb
nop
rcl
inc
popa
ja
push
add
mov
mov
popf
pop
sbb
scas
dec
mov
call
xor
adc
pop
mov
xchg
dec
pop
xor
dec
mov
jns
or
inc
or
les
loopne
sub
addr16
cmpsl
rorb
jne
sti
pop
push
inc
push
lods
in
je
push
pop
ljmp
dec
push
cmc
ss
cmpsl
push
sub
ljmp
mov
inc
xchg
cmp
inc
in
mov
loope
xorl
mov
cmp
xchg
call
ljmp
dec
ja
push
adc
dec
sub
xchg
nop
cmp
adc
xor
es
pop
pop
js
mov
lret
jecxz
iret
fdivs
or
mov
lods
or
jns
in
stos
dec
cmpsb
popa
sub
xchg
sbb
lods
dec
cwtl
lods
mov
mov
pop
pop
icebp
jbe
fs
add
ds
out
jge
add
lea
in
push
ror
outsb
push
ss
pop
enter
pop
sbb
fisttpll
xor
jne
cmpsl
push
jmp
stos
jp
dec
ja
test
es
sahf
aam
mov
or
add
xchg
mov
xor
xor
xchg
lock
enter
rolb
into
loop
mov
pop
ljmp
adc
inc
ljmp
xor
rcll
push
sbb
repz
add
fdivrl
not
cli
sbb
push
jp
les
and
adc
adc
sbb
filds
mov
adc
bound
add
fs
in
inc
mov
mov
lcall
jns
call
mov
xlat
add
div
mov
jge
jl
dec
in
and
cmpsb
add
jnp
dec
dec
test
cmp
lcall
addl
xchg
sbb
shrl
and
and
sbb
adc
je
outsb
shll
jecxz
cmp
mov
push
sarl
xchg
mov
mov
loop
xchg
pop
movsb
sub
loopne
fstpt
mov
push
inc
dec
repnz
and
mulps
test
or
xchg
lret
mov
and
shrl
mov
dec
mov
outsl
nop
push
int
enter
jl
repnz
mov
mov
mov
cmpb
pop
addr16
add
int3
gs
sahf
aaa
in
and
jo
js
cli
stc
or
loope
jns
mov
or
push
enter
in
inc
sti
or
jp
jb
xorb
in
pop
scas
or
mov
mov
je
xchg
fsubrs
xrelease
and
jo
cmp
in
mov
add
and
xchg
daa
mov
push
sysexit
mov
nop
pop
sub
stos
cmpl
dec
push
add
push
stc
repz
mov
dec
mov
sub
mov
out
add
fidivrl
pop
dec
or
je
mov
testl
xchg
je
je
mov
insb
push
adc
mov
insl
cltd
or
stc
test
stos
jno
or
cwtl
xor
sbb
add
mov
mov
in
fnstcw
popf
mov
adcl
nop
or
push
inc
rcrb
jecxz
loopne
jge
inc
push
xchg
data16
inc
ljmp
push
or
mov
adc
pop
and
jmp
mov
push
leave
imul
mov
clc
out
push
outsb
mov
and
pop
push
inc
push
xchg
adc
jecxz
sub
arpl
pop
mov
and
jbe
pop
pop
and
jmp
cld
pop
lahf
aas
xor
loopne
jb
sbb
je
scas
push
push
mov
sbb
int
lret
pop
fsubs
fsubrp
fidivrl
push
xchg
insb
mov
inc
jmp
popf
insl
xchg
call
or
mov
les
xor
pop
das
push
cmp
int3
js
leave
jp
in
adc
repnz
es
jns
mov
cld
test
dec
lds
jecxz
or
fsubl
pusha
add
rcll
ret
push
mov
in
ret
adc
mov
dec
hlt
pop
mov
cmc
xchg
pop
xchg
jp
push
xor
fwait
jne
pop
xor
push
iret
fildl
fwait
pop
addl
xor
inc
mov
stc
pop
outsl
jmp
aas
cmpb
push
fstl
mov
cmp
push
sbb
cld
aas
jg
je
loopne
push
sbb
xchg
sti
leave
mov
pop
sub
or
push
sbb
mov
mov
scas
or
rorb
scas
lock
stos
pop
fwait
mov
pop
or
stos
in
mov
cmp
cmp
add
lret
out
lods
fisubrl
mov
rolb
push
push
popf
je
into
xchg
push
in
scas
cmp
in
bound
shrb
popa
adc
sbb
jo
fstpl
jmp
fabs
aad
jle
jp
add
cld
orb
or
dec
push
scas
push
aas
enter
and
sbb
pop
in
pop
sub
or
loopne
and
fwait
xor
lea
jg
scas
pop
sbb
lret
outsl
lea
adc
pushf
sub
lret
and
leave
rclb
sub
daa
cmp
or
repnz
mov
ficoms
xchg
sbb
xor
aam
xor
jnp
or
mov
testb
loope
jnp
adc
sbb
hlt
arpl
push
imul
push
testl
jo
ljmp
jo
test
repz
xor
adc
lea
xchg
scas
xchg
icebp
gs
pop
leave
nop
popf
lds
arpl
mov
les
or
in
xor
lret
add
out
cmp
push
or
ffree
mov
pop
lahf
scas
lret
fcmovbe
fwait
sbb
mov
xchg
and
add
adc
push
push
inc
push
add
inc
mov
mov
mov
adc
pop
cmp
lret
test
sub
insb
jae
xchg
inc
lods
cli
jns
xchg
js
inc
in
mov
jp
in
pop
jecxz
out
test
inc
mov
sbb
cmp
jno
mov
test
push
jge
in
mov
jge
xchg
dec
jne
out
xor
loope
pop
add
movsl
aaa
inc
dec
inc
inc
jl
nop
xor
and
cmp
push
outsl
aad
je
mov
sbb
push
push
andb
mov
xor
xchg
mov
rcrb
add
fisttpll
add
inc
sbb
test
push
xchg
sub
scas
add
mov
mov
into
push
cmp
pop
lods
ja
sbb
ret
dec
idivb
mov
inc
xor
and
insb
sbb
mov
or
test
xchg
lcall
add
jp
das
mov
popa
xchg
fistpll
cmpsl
sbb
inc
mov
cli
pop
add
cmp
jno
push
repnz
sbb
call
jb
sub
mov
add
jecxz
sub
dec
shrb
add
add
lods
and
adc
cmpsb
popa
lret
sbb
mov
push
inc
out
aad
mov
lock
imul
mov
mov
icebp
lret
out
lret
movsb
lods
cmp
arpl
xchg
mov
push
cld
rolb
arpl
sbb
push
iret
fmull
ret
in
jo
inc
cmp
mov
inc
dec
outsl
iret
or
fiaddl
out
inc
js
mov
jmp
ret
imul
fidivrl
stc
sar
add
out
pop
add
out
jle
cmp
dec
mov
sbb
push
push
push
es
fcom
push
out
insb
pop
adc
movsb
jns
repz
enter
orl
cmp
add
dec
xchg
xorl
int3
and
outsb
mov
gs
fs
mov
cmp
scas
or
pusha
mov
insl
or
jne
mov
les
sbb
in
mov
popl
movsl
fst
aas
movsb
dec
mov
pop
jbe
push
shrb
js
adc
jo
and
cli
fimull
sbbl
mov
int
aam
scas
push
jmp
test
dec
icebp
push
fs
ror
ljmp
ret
inc
pusha
stos
mov
pusha
cld
pop
push
mov
out
or
lods
ds
scas
scas
into
outsb
pushl
xchg
loop
mov
mov
shrl
lret
ds
jg
outsb
adc
mov
pop
aam
mov
jmp
inc
mov
mov
cltd
add
leave
test
icebp
dec
xchg
ret
xchg
jns
jno
fidivs
and
hlt
and
iret
sub
in
pop
dec
fwait
aaa
in
add
pop
dec
inc
xchg
icebp
mov
das
and
mov
sbb
arpl
lock
rolb
ror
and
pop
iret
push
xchg
loopne
xchg
push
shl
dec
or
xchg
cmp
mov
loopne
or
xchg
fs
inc
lods
mov
push
xor
push
push
rol
cmc
aam
pop
mov
rcrl
fwait
cld
fistpll
scas
inc
out
jo
aad
adc
push
lret
test
push
imul
test
gs
jl
inc
add
aas
dec
and
lds
adc
in
pop
and
pop
xchg
shrl
push
mov
icebp
roll
mov
aaa
adc
rclb
dec
mov
nop
sub
mov
sbb
je
pop
and
ret
nop
fiadds
xchg
jno
jo
sbb
fistpll
dec
fdivrp
rorl
jmp
int3
cltd
xor
pop
fwait
cmp
cmp
aaa
outsb
lock
dec
lods
ret
fldt
in
mov
xor
sti
inc
jbe
outsl
and
push
push
out
push
pop
mov
sbb
aaa
and
in
cmpsb
into
xchg
out
imul
lea
test
call
cmp
stos
dec
out
xor
xlat
test
lds
sbb
inc
and
and
lcall
jle
pop
mov
adc
jl
in
adc
fcomps
lods
test
and
loopne
cltd
push
xchg
lret
sahf
xchg
out
aaa
ds
cmp
repz
loop
ret
dec
mov
cmpxchg
popa
cmp
sti
mov
in
shrb
jg
push
clc
xchg
stc
mov
out
sbb
pop
shrb
xor
or
mov
mov
in
cwtl
dec
cmp
clc
xor
rcl
mov
add
sahf
cwtl
imul
pop
popa
pop
mov
in
ss
cli
ror
rorl
aad
lret
jo
pushf
sub
mov
aam
lods
lret
jl
pop
xchg
add
das
mov
movsb
loop
xchg
cmp
into
pop
pop
push
jp
jo
jecxz
dec
iret
arpl
movsb
and
in
jle
pop
dec
sbb
fnstsw
cmp
out
jmp
cmp
xlat
inc
insl
cmpxchg
cli
mulb
leave
lcall
push
mov
inc
fistpll
adc
cmpsl
inc
test
push
push
pop
fiadds
inc
add
cmp
imul
lret
nop
or
outsb
dec
es
call
test
and
and
movsb
in
jmp
mov
xor
push
cmpsl
mov
mov
mov
mov
imul
negl
clc
xchg
xchg
sbb
and
sti
cs
sub
repz
mov
add
filds
xchg
andl
xor
int
mov
or
sahf
xchg
jp
pushw
add
xchg
inc
jg
pop
sub
imul
aas
sub
push
add
push
pusha
hlt
in
push
pop
les
cmp
pop
inc
mov
insl
daa
or
movsl
insl
test
sbb
pop
jno
ret
stos
jge
dec
cmpsl
xlat
pop
inc
mov
dec
and
lcall
std
test
int
push
mov
insb
out
ds
sti
mov
imul
sbb
jnp
out
test
fidivrs
and
xor
std
mov
mov
lret
adc
push
adcb
jl
test
aad
sub
faddl
jmp
dec
jecxz
sub
xor
dec
addr16
testb
inc
pop
cmp
add
xorl
jecxz
pop
leave
mov
bound
bnd
pop
mov
mov
lock
xchg
hlt
fmull
sti
push
sbb
sti
stc
stos
adc
push
mov
stc
sbb
xor
mov
ss
mov
dec
cmc
xor
cmpsb
push
loop
jbe
insb
mov
xor
xchg
adc
cmp
das
inc
stc
mov
pop
subb
cld
add
movsl
dec
push
xor
call
xchg
or
test
inc
cmpsb
dec
add
or
push
jmp
jns
inc
aaa
movsl
shll
cwtl
inc
rcll
mov
inc
cmp
jle
xchg
and
mov
mov
lds
sub
xchg
hlt
mov
aas
mov
test
jg
push
jne
jge
adc
lods
cmp
in
adcl
or
dec
rcr
sbb
lods
mov
shl
pop
sub
pop
iret
lret
movsb
cmpsl
daa
mov
clc
sub
adc
loopne
inc
inc
sub
sbb
push
icebp
push
arpl
cmp
xchg
mov
xchg
movl
sbb
xchg
sahf
fdivs
mov
xchg
lock
jb
mov
fwait
jo
adc
sbb
rol
rorb
jbe
leave
cmp
mov
or
add
cmp
or
push
stos
sahf
divb
shll
fistl
jne
jnp
dec
iret
sub
mov
in
add
imul
mov
xchg
movl
fisubs
mov
sbb
mov
cld
jge
out
and
adc
and
loopne
fimuls
int3
orl
scas
mov
movsb
push
dec
or
js
dec
test
mov
nop
ljmp
jno
inc
cmp
jg
test
movsl
or
cld
mov
fstl
xor
call
pop
sbb
movsb
xor
bound
mov
enter
sbb
sbb
push
out
out
lock
push
addw
pop
enter
add
cltd
mov
mov
ljmp
xchg
and
outsb
popa
mov
fidivs
les
jg
sub
adc
xchg
shll
jae
add
sub
mov
fnstenv
inc
adc
mov
jb
stc
shll
imul
insl
mov
jne
sbb
out
jle
sub
mov
fildl
iret
out
adc
xchg
mov
push
cltd
iret
mov
es
out
sti
into
mov
cmp
ljmp
mov
adc
adc
enter
and
cwtl
pop
or
stos
pop
fbstp
js
pop
movsl
mov
loope
and
test
jp
jge
adc
std
jl
jb
push
js
divl
cltd
js
add
push
mov
mov
in
xchg
ja
fistpl
push
sub
shl
mull
in
lret
lods
cmp
fmuls
xchg
sub
js
mov
popf
test
jg
cld
inc
push
mov
scas
ds
mov
jno
mov
nop
shrl
mov
dec
lods
push
sar
and
jge
xorl
sbb
lds
pop
or
daa
insl
mov
fisttpl
je
je
icebp
sub
dec
gs
and
xchg
iret
xlat
push
daa
lods
mov
stc
xor
adc
sbb
jl
out
das
gs
jbe
pop
mov
inc
ja
addr16
pop
std
xchg
push
insl
xorb
cli
add
out
push
push
xchg
mov
jecxz
pop
lea
add
sub
enter
clc
inc
jno
xchg
mov
and
mov
mov
fcompl
addr16
dec
add
xor
loopne
pop
sub
repnz
shrb
xchg
stos
sub
push
arpl
dec
mov
in
mov
daa
push
or
scas
mov
dec
cmpsl
xchg
pop
or
jbe
es
lcall
testb
push
xchg
dec
push
cmpsb
dec
inc
shl
repnz
testb
push
pushf
push
xchg
mov
sub
int3
cmp
iret
push
repnz
cmp
mov
cmpsl
pop
rcl
and
bound
sbb
daa
imul
popa
xlat
dec
fdiv
add
sbb
add
xchg
mov
cmp
mov
cmc
or
mov
fmull
mov
aad
or
cmp
cmp
scas
mov
sbb
std
jle
pop
jg
fs
jl
cmp
sub
fcoml
adc
in
push
es
xor
push
sbb
add
pop
mov
loop
add
pop
cld
data16
mov
lods
out
cmp
test
sbb
xchg
mov
xchg
jb,pt
xchg
in
lret
pop
or
mov
jge
inc
mov
scas
push
mov
push
sub
fstpl
dec
or
fdivs
jge
mov
mov
pop
pop
mov
adc
fcoml
addl
jmp
inc
dec
cmpsl
push
jb
jp
outsb
adc
sub
call
adcb
mov
out
dec
add
addr16
lret
fimuls
mov
jnp
or
xor
push
hlt
xor
or
cmc
adc
pop
lret
lahf
inc
mov
in
sbb
test
adcb
out
shlb
mov
mov
pop
shr
xchg
cmp
insl
adc
cmp
add
add
or
daa
pop
out
jbe
sbb
fistps
pop
add
inc
xchg
jnp
mov
jo
adc
lahf
jecxz
cmova
jp
popf
lcall
clc
ss
dec
jge
mov
fsubrs
out
imulb
cmpsb
add
aas
shrl
sub
int
sbb
mov
shll
dec
inc
mov
rclb
xor
mov
incb
xor
cli
stos
fwait
scas
stos
sbb
sbb
sub
test
insb
and
pop
pop
imul
in
push
mov
adc
dec
insl
icebp
int3
xchg
dec
adc
inc
jmp
and
popa
mov
jle
enter
fwait
xor
ljmp
out
dec
or
mov
fldenv
inc
and
movsb
xchg
push
dec
stc
mov
push
outsl
mov
es
mov
mov
aaa
es
mov
jmp
cmpsl
push
jne
into
sub
idivb
cmpsb
bnd
mov
repnz
xchg
mov
call
daa
mov
jo
repnz
jge
mov
mov
rcrb
popa
jmp
popf
mov
cmp
adc
jo
push
jle
iret
pop
sti
and
fs
mov
je
push
scas
out
in
inc
cmp
lret
or
in
js
hlt
dec
int
push
into
sbb
andb
lret
jmp
cltd
ja
fs
aaa
in
imul
lret
sbb
xor
pop
lds
fistps
add
add
je
loope
cmp
lods
pop
xor
xchg
orb
ss
stc
cmp
in
fisttpll
movsb
sbb
ret
mov
in
loopne
roll
sbb
sub
or
mov
jp
mov
xchg
sti
scas
sahf
cli
lods
cmp
dec
mov
dec
stc
repz
fs
cmpsb
loope
pop
rol
icebp
add
jl
mov
add
nop
pop
sub
nop
lods
or
mov
mov
rclb
push
dec
cs
push
push
push
cmp
pop
mov
notl
push
testb
inc
rolb
mov
in
push
movsb
adc
cld
push
int
and
jnp
and
lock
or
sbb
and
mov
push
insb
sti
inc
and
leave
xchg
inc
lcall
pushf
mov
test
and
pop
ja
add
adc
mov
test
sub
mov
mov
push
cli
loopne
test
inc
inc
shlb
or
push
push
arpl
sbb
or
xchg
jp
mov
call
sub
jb
cmp
mov
dec
inc
sbb
inc
inc
pop
or
jle
dec
inc
sahf
cmp
cmp
aas
cmpsb
push
xchg
adc
shll
xor
push
xor
push
cmpsl
sti
sar
out
mov
jo
pop
stos
imul
add
lcall
cld
scas
add
cmp
jmp
adc
ljmp
ret
sbb
or
pusha
int3
fdivrl
cmp
movsb
add
cmp
loopne
hlt
js
xchg
fdivl
pop
sub
sub
cmpsl
push
inc
push
movsw
push
and
mov
mov
xchg
and
push
xor
ljmp
sub
dec
jmp
mov
jbe
and
insb
push
out
ja
sbb
pop
shl
leave
mov
movsb
pop
stos
dec
adc
es
fsts
or
cli
push
or
mov
sbb
mov
cmp
movsb
push
dec
mov
fs
loope
push
repz
sti
xlat
sub
enter
jge
push
push
mov
ret
jge
xchg
rcr
sub
xchg
xor
int
cmpb
testl
mov
out
lret
das
pop
rcll
aam
xchg
cmc
loopne
mov
cld
lods
push
das
call
mov
lcall
dec
jno
fsubrl
sti
popf
fldt
cmpsl
xor
inc
cwtl
scas
push
in
call
insb
mov
sub
adc
sbb
push
adc
cmpsb
test
stos
insl
jle
fstl
and
mov
inc
cmc
lods
in
daa
inc
mov
shlb
std
mov
xchg
lahf
loopne
sbb
test
repnz
ss
or
push
sbb
and
inc
dec
mov
inc
mov
or
push
mov
jl
data16
lds
mov
lcall
outsb
xor
cmpsb
push
xlat
xor
out
stos
sub
inc
sbb
xor
xchg
ljmp
pop
push
cmp
loope
ja
notb
popf
push
imul
and
mov
adc
add
add
adc
aaa
je
imul
mov
mov
add
lret
push
jl
fcoms
andb
jnp
inc
mov
push
hlt
sub
movsl
sub
fptan
mov
mov
cmpsb
cmc
mov
fs
leave
pop
xchg
push
or
pop
mov
sahf
call
enter
add
or
sbbl
push
aad
clc
dec
or
jmp
pop
in
js
roll
jbe
dec
push
jae
mov
inc
push
enter
push
test
mov
mov
cmpsb
rcrl
sub
dec
shrb
aas
mov
sbb
xchg
gs
lea
inc
xchg
fcoms
pop
mov
mov
rcrl
clc
dec
iret
cmp
fwait
sub
sub
addr16
inc
shlb
push
xorb
or
cltd
outsb
cmp
mov
or
pop
pop
aas
enter
mov
rolb
insl
mov
cmp
ljmp
mov
pushl
xor
ret
lret
addl
push
scas
sbbl
pop
xchg
enter
iret
test
inc
ljmp
js
and
add
pop
and
aaa
cwtl
call
cmp
popf
cs
jmp
inc
mov
lahf
les
push
jl
dec
adc
aad
les
rclb
mov
push
adc
movsl
mulb
lock
cli
mov
sahf
inc
popa
xchg
lahf
icebp
repz
dec
aas
cmp
roll
add
push
call
push
dec
cs
leave
push
push
test
lods
adc
daa
or
add
or
repnz
push
cmp
pop
aaa
clc
stos
dec
mov
mov
jne
mov
gs
imul
jecxz
pop
sub
jp
xchg
sub
inc
fsubs
sub
popa
or
gs
xchg
add
fs
add
dec
in
mov
hlt
xchg
push
neg
popf
xchg
sbb
in
in
add
clc
les
or
and
repz
sbb
lods
or
outsl
cwtl
shlb
pop
int
lods
mov
mov
repz
iret
jl
mov
mov
sar
pop
mov
add
adcl
mov
dec
push
es
lret
repz
fnstcw
test
fnstsw
aam
sahf
test
sbb
rolb
dec
mov
push
cmp
fnstcw
iret
jne
addr16
repz
clc
inc
cmp
rdtsc
ja
lcall
stc
xchg
cmp
dec
add
movsl
or
cs
subb
sbb
das
cltd
add
notl
lock
stos
fwait
in
cmp
int3
fimull
js
xor
lahf
cld
inc
sbb
cmpb
insl
pop
clc
xchg
test
cli
mov
and
aas
lods
push
insl
dec
repz
popa
push
stos
inc
data16
push
into
scas
or
pusha
shrb
pop
addr16
jge
scas
shlb
mov
adc
inc
cmp
cmp
pop
add
daa
test
mov
jmp
test
xlat
dec
testl
cmp
inc
aas
and
mov
les
adc
sbb
push
mull
xchg
fs
andb
mov
movsb
bound
jno
icebp
in
and
stc
jecxz
sbb
and
mov
ret
xor
lods
push
iret
push
sub
mov
pop
lods
push
cmc
fidivrl
in
push
sub
dec
icebp
xor
mov
lret
jl
int3
aaa
test
pop
push
dec
sub
mov
cmp
dec
les
mov
cmp
insb
fstpl
mov
cmp
xorl
je
out
cld
loopne
dec
stos
and
jle
enter
push
out
in
or
push
dec
ds
rcll
jnp
pop
push
shll
je
addr16
and
push
nop
mov
mov
test
rcrl
mov
dec
and
mov
les
loop
jb
or
jmp
movsb
jns
push
xchg
fiaddl
xor
sarl
cmpsb
push
sbb
add
adc
insl
int
pop
sub
movsb
ja
push
jae
aad
addr16
cmc
mov
popa
fsubl
mov
xlat
add
sbb
mov
nop
push
in
shlb
xor
int
xchg
mov
mov
sbb
inc
ss
pop
mov
stos
xchg
rorl
loop
adc
aad
adc
push
in
bound
xlat
add
mov
pop
add
jae
or
sbb
or
cltd
push
aam
fisubrl
adc
int3
pop
mov
loope
enter
dec
or
int3
pop
enter
and
std
stc
lcall
aad
ret
push
popf
addb
and
fisttpll
iret
sbb
mov
add
jp
xchg
xchg
fwait
js
lcall
push
pop
xorb
xchg
mov
out
into
rorl
addr16
ficoms
push
inc
in
cmc
push
mov
mov
jmp
aaa
fidivrl
bswap
push
mov
sbb
mov
dec
out
andl
pop
clc
test
sbb
outsb
xor
pop
and
int
mov
mov
xchg
pop
or
mov
test
xor
aam
fsubrl
lods
dec
jle
stos
and
xchg
movsl
push
pushl
cmpsb
sub
mov
bound
shrl
jle
stos
out
mov
and
jb
push
jecxz
hlt
sub
jmp
fstpt
cmp
push
loop
js
adc
mov
cltd
fs
sub
jle
pop
jo
dec
xlat
mov
xor
xchg
mov
mov
and
imul
icebp
push
and
sub
loope
fdiv
jb
insl
xchg
rcrl
xrelease
stc
dec
out
xor
pop
jne
nop
lock
push
outsl
jo
ss
call
lods
gs
mov
or
lahf
pusha
filds
xor
cmp
aad
mov
pop
xor
loopne
dec
sub
pop
insl
ljmp
mov
jb
xchg
js
mov
aam
xchg
push
and
bound
jge
and
mov
pop
out
sbb
ucomiss
scas
and
jbe
mov
push
xchg
mov
or
push
or
leave
rolb
jle
push
das
pop
imul
pusha
inc
jne
jge
inc
movsl
stc
inc
arpl
dec
inc
test
xor
int
jbe
int3
mov
aad
xchg
dec
mov
sbb
addr16
push
push
cmpb
test
insb
dec
fsts
mov
xchg
iret
adc
cwtl
adc
and
std
lcall
sub
push
push
xchg
test
sub
mov
into
lea
pop
daa
push
add
test
cmp
mov
pop
cmc
xlat
ljmp
xchg
shlb
jne
sub
cs
cwtl
movsb
repnz
push
cmc
sbb
fwait
ss
jmp
movb
sbb
fistl
push
aaa
mov
adc
lea
mov
xchg
add
pop
or
inc
or
outsl
xor
fsub
sbb
mov
sub
add
movsl
loope
xor
out
jg
push
iret
lea
cmpsb
popa
sbb
std
push
fsts
jecxz
xchg
jno
iret
out
mov
mov
ljmp
push
fwait
or
dec
push
dec
scas
andl
add
adc
add
sub
mov
clc
sub
adc
cmp
jns
jno
shrb
pop
scas
jns
imul
outsb
sbb
in
outsb
mov
lea
or
jo
push
mov
jle
test
add
mov
shll
cmp
daa
mov
mov
iret
sub
aad
gs
jns
xor
pop
mov
call
inc
adc
inc
cltd
or
pop
imulb
xor
stos
clc
test
cld
lret
jmp
cmp
sbb
lcall
call
push
jl
fs
xor
mov
test
dec
int
loope
and
fwait
into
imul
xchg
repz
mov
inc
data16
mov
addr16
call
dec
test
mov
jecxz
lret
cltd
mov
fiadds
cld
push
divb
addr16
cmp
js
and
push
xchg
movsl
stos
lahf
jl
fdivl
inc
mov
cmp
in
xchg
sti
adc
push
push
fbstp
xchg
popf
fnstcw
in
idiv
lds
mov
lock
pusha
clc
int3
or
mov
xchg
adc
inc
push
and
mov
sahf
rcrb
xorb
test
imul
cld
cmp
icebp
rclb
push
or
je
push
mov
jl
enter
adc
mov
xor
test
xlat
lods
ret
outsb
insb
inc
scas
or
mov
sahf
cmp
jl
cli
fimuls
inc
mov
jp
or
and
push
and
mov
into
cld
inc
lods
ret
adc
jmp
xor
fcmovb
je
xchg
call
cmpsl
insb
mov
rcrb
pop
test
push
in
mov
lock
mov
scas
cmp
popf
and
stc
push
push
inc
loop
mov
inc
fs
call
fisubl
xchg
or
fnstenv
mov
and
pop
and
icebp
add
sti
cwtl
inc
jae
xor
cltd
xorl
rorl
lea
test
fwait
imul
dec
je
jae
cmp
lods
lret
nop
cmp
inc
in
bound
jnp
or
loopne
pop
pop
imul
fimuls
js
jmp
or
xchg
mov
bound
test
cmpsl
add
inc
sub
add
and
enter
xchg
inc
dec
imul
xchg
cli
js
movsl
mov
sbb
imul
fdivl
lea
push
sahf
imul
xchg
pushf
outsl
xchg
aam
mov
add
mull
pop
sbb
adc
and
or
daa
movsb
add
stc
dec
mov
addr16
addr16
pop
loop
mov
mov
ja
call
ljmp
lret
gs
and
mul
jo
stc
add
sahf
shlb
mov
dec
add
shll
mov
orl
xor
in
mov
shr
mov
out
popa
pop
std
test
inc
pop
mov
shl
adc
mov
pop
inc
into
push
jne
pop
rep
es
bound
jmp
lods
mov
orb
test
daa
popf
stc
xchg
sbb
dec
pop
clc
jmp
jns
cs
sub
scas
in
xlat
sub
cmp
mov
push
jnp
xchg
mov
and
jg
dec
mov
or
int3
adc
test
dec
dec
xchg
div
sbb
int3
dec
out
fucomp
pop
mov
jno
inc
jmp
mov
mov
add
lods
jge
lret
nop
xor
cltd
std
pop
mov
lret
faddl
arpl
sub
mov
cmc
int
and
rsqrtps
xor
sub
lahf
push
xchg
pop
sbb
int
xor
jecxz
xor
cmc
loopne
sub
pslld
xor
push
mov
xchg
mov
jno
cmpb
hlt
sbb
adc
iret
xor
jg
xor
dec
mov
fstl
cmp
loopne
inc
inc
xlat
hlt
test
pop
insl
mov
pop
lret
js
or
mov
stc
loopne,pt
ret
fs
add
outsb
test
mov
sbb
jne
push
daa
imul
add
add
push
sub
outsl
inc
enter
lock
add
out
jns
imul
xor
mov
sahf
mov
inc
inc
cmp
shll
mov
push
xchg
movsl
adc
imul
addr16
xchg
mov
pop
idiv
je
mov
mov
inc
cltd
push
and
shll
out
sbb
push
mov
or
sbb
ret
ja
pop
jae
dec
lcall
push
cmpsl
addr16
push
lcall
je
int
lods
mov
xchg
imul
mov
cmp
daa
mov
outsb
pusha
sbb
dec
mov
dec
hlt
fmull
xlat
scas
stos
icebp
mov
inc
loop
cld
inc
xor
xor
jp
inc
fucomip
je
adc
pop
jge
xchg
les
aam
pusha
xor
fildl
push
mov
in
xchg
add
cmp
insb
push
push
sub
test
mov
add
or
sub
mov
sbb
iret
xchg
adc
adc
jbe
mov
inc
mov
ud2
pop
movsb
or
add
sbb
mov
add
pop
or
xchg
in
idivl
jge
mov
mov
bound
imul
cmc
xchg
fcmovnbe
dec
pop
ret
xchg
cltd
icebp
xchg
repz
push
jecxz
cltd
pop
test
sub
push
mov
fisubrl
movsl
and
jne
roll
and
shrl
jno
jl
push
pop
dec
scas
and
cltd
in
subl
js
outsb
mov
adc
stos
clc
ret
cmc
mov
loop
shr
aaa
xor
pop
sbb
sbb
inc
cmp
push
push
xchg
es
rcl
mov
in
shlb
shll
mov
jg
ds
arpl
call
lret
cmpsl
ljmp
mov
ljmp
sbb
test
jge
sbb
add
xor
pop
adc
push
fldcw
push
pop
jp
mov
jno
movsl
add
mov
scas
fs
inc
mov
ljmp
jb
mov
fs
cmp
and
ficoms
jge
sar
jmp
lods
push
inc
aad
pop
jae
sti
xor
or
mov
push
jb
iret
or
js
or
dec
mov
mov
cld
outsb
sbb
sub
or
add
push
fninit
outsb
incb
jb
dec
shrb
ljmp
dec
jge
mov
insl
jnp
mov
pop
addb
cmp
lahf
xchg
js
mov
sbb
and
xchg
and
or
loop
push
pushf
popf
pop
mov
mov
xor
cltd
arpl
je
xor
int
mov
mov
fcmove
ss
jb
imul
in
lods
int3
mov
push
dec
sbb
xlat
packuswb
sbb
stos
jae
cmpl
in
adc
les
jl
push
rorb
bnd
movsl
push
int3
sbb
fidivs
lea
lods
scas
cmp
xchg
movsb
mov
adc
mov
in
push
subl
popa
pusha
jmp
aad
adc
xchg
das
mov
pop
sbb
adc
cli
mov
cmp
std
notb
adc
int3
jo
incb
shr
fidivs
sbb
cltd
sbb
iret
packsswb
das
stos
les
daa
xlat
add
cmp
jp
push
aas
dec
dec
sahf
mov
mov
int3
mov
test
fs
mov
dec
xlat
movsl
sub
add
or
cmp
and
cmp
dec
inc
rcll
mov
adc
dec
fiadds
pop
in
repnz
ss
cs
adc
pop
cltd
pop
dec
mov
sub
dec
test
or
fidivrl
dec
mov
add
adc
push
fwait
mov
push
push
dec
mov
mov
leave
pop
or
jae
cld
pusha
jo
rolb
call
and
lcall
mov
testb
mov
mov
dec
mov
loope
or
cmp
cmpsl
cwtl
aas
xlat
dec
xchg
dec
mov
lahf
jns
loop
push
in
incl
sub
stos
dec
popa
xchg
out
add
bound
inc
jge
inc
data16
adc
dec
and
jbe
wbinvd
jbe
push
mov
leave
js
mov
pop
ret
or
add
fsubrl
mov
mov
mov
out
mov
or
sub
mov
add
pop
stos
sbb
mov
sbb
cmpsb
in
dec
push
out
jns,pn
push
dec
mov
cmp
cld
dec
push
call
in
test
adc
clc
sbb
jnp
mov
sar
addr16
out
and
cwtl
fwait
jnp
mov
clc
insb
cwtl
faddl
or
push
pop
stos
rcl
pop
mov
fs
pop
sub
mov
leave
pop
or
add
or
pop
or
das
insb
fwait
arpl
fbld
inc
mov
dec
jnp
push
scas
inc
mov
lea
sub
mov
test
push
and
lods
lods
outsb
sti
mov
imul
mov
pushf
adc
lret
xchg
cmp
xlat
test
in
lret
ss
xchg
sub
ret
or
xchg
cmp
push
mov
test
inc
lret
mov
xchg
rcrl
inc
push
dec
add
rorl
add
insl
sub
outsl
cmpsb
out
add
inc
aam
push
adc
in
jecxz
cmpb
pop
xor
dec
mov
mov
lret
jge
daa
sbb
xor
dec
mov
sub
enter
fidivrs
or
pushf
les
fadd
dec
ror
pop
xchg
ss
fwait
add
ja
mov
rcr
mov
rorb
cmpb
sbb
cmp
jmp
or
imul
push
jne
pop
jg
pop
in
pusha
cwtl
inc
mov
jge
testl
rcll
test
adc
push
hlt
aam
mov
inc
jmp
addb
jge
jnp
inc
add
lods
pop
aas
sbb
jg
imul
cmp
cltd
aaa
orb
mov
jb
mov
inc
push
js
xlat
cs
lods
in
xor
orw
xorl
ret
push
jae
dec
pop
lds
pop
xchg
mov
push
xlat
ljmp
add
iret
test
sub
outsb
psrlw
hlt
cmp
dec
or
inc
fwait
mov
dec
outsb
cmp
xor
sbb
out
shl
xchg
das
push
xor
adc
popa
xor
cmp
lcall
out
in
pop
sbb
sarb
add
cmp
adc
sahf
lret
loopne
outsl
arpl
mov
cmp
cmp
mov
jmp
pop
pop
bound
pusha
mov
xchg
fwait
ss
jb
leave
xor
js,pt
mov
push
mov
cs
stos
insl
jle
xchg
mov
cmp
jle
repz
hlt
adc
insb
xor
mov
add
cwtl
out
lcall
imul
xchg
in
lahf
jne
ja
push
mov
xor
xor
negl
mov
add
push
push
out
testb
mov
adcb
mov
ret
sbbb
sub
jl
mov
xor
inc
movsl
test
mov
call
xchg
loope
leave
cmc
js
cltd
into
sub
out
cmp
clc
fwait
sbb
lods
mov
add
or
mov
and
mov
xchg
out
js
sbb
push
dec
subb
sar
gs
in
push
jns
sub
pop
pop
cld
mov
or
les
dec
lahf
repnz
lret
out
aas
dec
cld
jl
imul
int3
push
scas
leave
das
sbb
or
push
xchg
push
xchg
cli
xorb
nop
lods
pop
and
arpl
fdiv
sbb
ja
dec
in
insl
leave
jmp
icebp
and
loopne
lods
jns
dec
sbb
andb
addl
add
iret
cltd
xor
out
jle
mov
adc
jg
sub
xor
add
sbb
imulb
es
test
jae
adc
mov
jp
xchg
or
jge
xchg
or
add
std
pusha
jmp
mov
jle
mov
insb
xor
xor
out
int
lods
jp
pop
pop
addr16
fs
in
mov
sbb
push
out
sbb
in
mov
adc
sbb
movsl
movsl
mov
sbb
mov
loopne
sahf
jno
cmpsl
mov
cli
mov
lods
adc
mov
pop
mov
adc
sbb
lds
loop
into
fimull
mov
loopne
mov
push
jb
push
cld
push
jno
test
pop
scas
jmp
push
in
sbb
jle
pop
rolb
and
lods
shlb
jle
add
dec
out
push
daa
in
pop
scas
xchg
pop
outsb
call
xchg
jp
inc
shrb
jg
aas
pushf
out
je
sahf
lret
bound
imul
outsb
loop
lds
mov
jle
push
jge
push
mov
lcall
push
adc
xor
aad
test
lods
mov
fwait
xchg
test
ret
nop
add
gs
or
test
xor
scas
out
mov
pop
stos
add
hlt
fildl
fwait
imul
test
push
jo
mov
sti
jmp
jno
in
jnp
imul
and
loope
std
add
xchg
movsb
lret
mov
in
and
pop
xorb
bnd
sbb
jae
cmpsb
stos
add
je
iret
add
fdivrl
mov
sbb
inc
rcrb
lret
pop
jg
push
push
js
fnstsw
jg
mov
scas
jns
mov
push
or
push
xor
add
adc
imul
pop
mov
cmp
xchg
lret
ja
inc
js
in
mov
pop
in
mov
outsb
mov
push
inc
push
jae
and
fcompl
gs
dec
mov
push
subl
push
pusha
pop
rcrb
sbb
cmp
lret
cwtl
xor
rclb
mov
push
adc
push
mov
adc
je
lock
pop
dec
pop
test
imul
and
sbb
je
push
dec
inc
rclb
inc
dec
aam
pop
andb
mov
loope
add
enter
icebp
arpl
mov
add
aam
cwtl
mull
scas
or
jb
cmovae
pushf
adc
mov
out
dec
xchg
ret
and
push
ret
pop
fsubrp
inc
loopne
cltd
frstor
outsl
add
daa
clc
movsb
in
mov
mov
cwtl
or
mov
mov
cs
cmpsb
inc
add
push
or
fdivl
add
jg
test
mov
cmpsb
push
sbb
sbb
pop
fists
cs
sub
filds
push
imul
fsubl
push
out
mov
in
add
nop
mov
pushf
fidivl
xor
or
mov
pop
mov
cmp
fnsave
inc
out
shrl
fistl
shll
cld
aas
push
loop
or
adc
cwtl
sub
int
mov
orb
and
add
ret
cmpsb
cmc
and
dec
mov
call
mov
test
sti
ss
sub
pop
or
xor
and
movsl
mov
call
test
daa
mov
sub
and
rclb
outsl
iret
lds
fcom
lods
ja
dec
rcrl
adc
or
call
jo
cld
cli
hlt
sbb
lea
loope
shll
pop
dec
pop
in
dec
scas
mov
mov
mov
dec
cmp
or
inc
jecxz
mov
mov
rorl
dec
adc
out
xorb
addr16
xchg
std
loopne
xchg
jg
leave
add
enter
add
dec
or
and
pop
xor
dec
stos
pop
inc
aas
lods
inc
fldcw
or
xchg
add
insb
xorl
rorl
push
inc
lds
je
mov
add
cmp
popa
leave
mov
sub
gs
dec
gs
dec
test
fsubr
test
mov
pop
adcb
ds
div
mov
iret
cmp
sub
xchg
mov
push
jo
cs
stos
call
mov
in
daa
lcall
fidivs
sub
jle
mov
mov
cs
ljmp
stos
bound
mov
mov
jp
mov
stc
repz
inc
adc
xchg
imul
mov
push
inc
push
das
mov
and
push
gs
dec
pop
test
push
das
push
pop
or
and
test
stos
lds
pop
daa
xor
push
loop
push
jmp
push
into
enter
jo
push
inc
ja
in
push
popa
nop
stos
lcall
gs
cli
and
sbb
sar
dec
mov
mov
pop
outsl
mov
cwtl
sub
jl
pop
add
jb
sbb
or
js
cmp
adc
fsts
and
hlt
sti
les
lea
ja
lcall
pop
test
repz
pop
popa
adc
mov
or
and
dec
scas
cmpsl
push
xchg
mov
scas
test
xor
dec
jne
push
fldenv
es
pop
push
ret
mov
lret
dec
dec
dec
insb
or
jb
iret
sbb
not
jns
xchg
lods
insl
add
mov
in
fldcw
call
xor
push
dec
fmuls
xchg
inc
lret
add
stos
jno
mov
mov
sti
lahf
add
mov
jno
jmp
adc
adcl
xorl
aad
sub
pop
inc
fldenv
mov
out
ficoms
sbb
das
scas
fcompl
cmc
jle
mov
pop
or
sbb
pusha
dec
sbb
aaa
or
dec
je
jg
mov
mov
and
and
mov
xor
insb
pop
sbb
insl
mov
jmp
jno
pusha
lcall
adc
jp
dec
sarl
lods
loopne
inc
push
push
cmp
daa
movsl
or
sub
shrl
out
fs
cmp
test
or
repnz
les
icebp
inc
pop
and
sbb
ss
mov
pop
mov
sbb
popa
rorl
mov
pop
xchg
outsl
sbb
fisttps
jle
or
pop
popa
in
jecxz
data16
pop
shll
pmovmskb
xchg
inc
out
scas
dec
adc
cmp
cmp
adc
mov
movsl
dec
push
jg
in
xor
push
fs
cs
xor
mov
out
add
fs
jge
fsubp
dec
mov
mov
mulb
leave
xor
cmp
scas
pop
push
mov
pop
rolb
jnp
mov
push
jle
ljmp
out
mov
fdivs
xor
in
cmp
pop
rcrb
fmull
mov
cwtl
add
fmulp
loope
cmp
or
push
xchg
sub
ret
sbb
push
das
mov
imul
outsb
pop
subl
in
in
fwait
cs
add
mov
push
xchg
xchg
xor
xchg
pushf
orb
push
push
or
movsb
daa
adc
cmp
xchg
add
sub
xor
fdivr
loop
callw
mov
pop
scas
jl
je
fdivrl
repz
sub
xorb
and
xchg
pop
jo
popf
push
xchg
add
cmp
rclb
cmp
sub
rcrl
and
icebp
loop
stos
inc
addr16
leave
xor
and
jecxz
out
in
clc
outsl
aaa
decb
sub
enter
xchg
sahf
add
je
test
mov
adc
rcl
and
and
aad
sbbb
inc
fwait
push
enter
outsb
and
mov
cwtl
aam
fsubrp
jecxz
sti
push
leave
mov
jo
add
lods
rcrb
adc
nop
lahf
leave
jecxz
sbb
call
push
dec
lods
or
xchg
lods
push
movsl
or
stos
mov
or
loopne
mov
mov
sub
mov
cld
jo
adc
lods
mov
jmp
push
add
mov
adc
sub
pop
jno
pop
fdecstp
mov
sbb
jb
inc
inc
xchg
cmp
hlt
push
adc
lea
test
in
andb
insl
out
insl
xchg
lcall
inc
dec
cmp
push
sbb
lock
jecxz
jnp
shr
sbb
mov
xchg
cmpsb
fucomip
outsl
jne
mov
cltd
stos
loope
icebp
mov
xor
test
push
adc
loopne
cmp
sub
mov
mov
into
shl
ret
push
ljmp
mov
ret
lret
aam
xor
ss
mov
push
inc
pop
out
xchg
pop
notl
fdivrs
inc
leave
jb
mov
inc
stos
movsl
xchg
out
sub
inc
jnp
call
or
scas
ljmp
push
es
xchg
daa
cmp
ret
nop
xor
fisubs
cmc
mov
mov
sbb
mov
lods
aam
mov
push
mov
mov
push
test
dec
cwtl
fs
je
mov
notb
pushf
pusha
xchg
hlt
mov
add
adc
jecxz
mov
js
adc
divb
idivl
cltd
repz
ss
scas
pusha
inc
add
cwtl
lret
mov
adc
sbb
aad
fnsave
rcrb
jns
imul
xor
insl
hlt
add
dec
adc
xchg
out
stos
add
sbb
xchg
xor
and
or
push
sarb
roll
pop
ds
stc
jne
imul
cmp
insl
cs
xor
jno
jmp
arpl
xor
je
jmp
sbb
and
push
pop
mov
test
int
scas
xor
pop
push
ret
cmp
xchg
cmpsb
push
test
in
subl
pop
movsb
icebp
pop
das
jl
ja
push
insl
nop
push
jmp
sub
mov
icebp
int
push
push
lods
cmp
xchg
stos
fimuls
add
mov
mov
fildl
pop
push
or
outsl
push
xor
notb
idiv
pusha
shr
in
popa
jge
dec
xchg
ret
sti
xlat
rcll
and
pushf
aad
cmp
mov
aad
push
aas
out
jp
adc
lahf
mov
mov
mov
mov
setns
hlt
idiv
mov
jg
shll
or
fcomi
cs
or
pop
cltd
hlt
aad
aad
adc
sbb
xchg
push
imul
cmp
cli
imul
pop
std
mov
push
mov
jmp
aad
jae
adc
hlt
es
pop
sub
xor
test
cmp
dec
out
sub
xchg
jmp
cltd
mov
addr16
adc
sahf
enter
loopne
mov
adcb
stc
add
mov
test
pop
add
push
outsb
int3
adc
add
mov
lods
add
pop
test
sub
sub
mov
shrb
mov
cli
pop
pop
jecxz
int
shll
mov
or
in
cli
jno
rorb
aaa
dec
push
lods
cwtl
ret
test
jle
hlt
out
push
xchg
xor
push
jle
test
cmp
out
cltd
fidivs
and
sahf
loope
mov
and
jo
inc
mov
mov
push
push
insb
aad
daa
stos
xchg
adc
pushf
ja
push
rorl
sub
push
out
das
insb
pusha
lahf
popf
into
vaddps
inc
js
clc
jge
cld
sbb
add
pop
pop
je
sahf
pop
das
stos
aam
xor
or
mov
add
out
fwait
jno
pusha
inc
lock
add
pusha
xchg
dec
repz
repz
fs
outsb
gs
sbb
test
loope
fimuls
int
stos
divb
out
std
call
ret
cwtl
jg
pop
popf
sub
push
pop
xchg
mov
pmullw
sti
jle
enter
mul
and
stc
rorl
push
sahf
movsb
pop
dec
inc
ljmp
popf
mov
lahf
mov
or
lock
push
lret
mov
xor
addb
jecxz
mov
add
adc
test
xlat
mov
mov
ss
jno
inc
nop
jbe
jp
imul
mov
pop
xor
sbb
mov
loopne
xchg
mov
sub
inc
lret
jle
cltd
mov
xor
cltd
push
dec
roll
dec
sbb
incb
push
inc
arpl
push
jns
mov
dec
fldt
push
imul
sbb
loop
js
mov
fidivrl
enter
stos
ja
ja
adc
xchg
xlat
adc
xchg
cmc
fsubl
nop
inc
pop
jmp
jle
push
mov
xor
push
lea
mov
out
insb
iret
and
aas
mov
movsl
and
cmp
and
popa
sbb
inc
inc
xchg
jb
lret
out
sahf
or
or
xor
aaa
jb
mov
out
dec
xchg
add
pop
stos
cmp
pop
subl
iret
jmp
push
je
arpl
xor
cmc
lds
fdiv
arpl
lods
test
popf
dec
mov
cli
test
sub
in
push
test
insl
mov
cmp
int
push
dec
aad
enter
xor
bound
cmp
jecxz
push
mov
ja
cmc
xor
push
mov
pop
jb
inc
shrl
xor
or
jle
cltd
stos
mov
bound
mov
or
dec
ja
ficompl
pop
out
mov
pop
cs
loope
push
add
stos
dec
mov
rorl
adc
sti
lea
jg
lods
shlb
cmpsl
sbb
clc
shlb
outsl
xor
add
dec
fiaddl
popl
sahf
jns
sub
jp
sbb
and
mov
sbb
mov
add
cmp
mov
sbb
sti
mov
arpl
lcall
std
or
push
xchg
out
cmp
or
ljmp
adc
je
mov
inc
mov
sub
mov
cmp
lcall
cs
jno
sahf
inc
scas
lret
cmp
loopne
jl
cld
mov
test
lret
and
and
xor
repnz
and
mov
addb
jo
push
xor
jne
bound
repz
push
cmp
inc
or
jl
jmp
push
addl
add
jne
lret
aad
mov
sub
jmp
xlat
jae
lods
mov
ret
aam
inc
mov
data16
repz
dec
xor
cli
pop
loope
mov
dec
jnp
or
dec
sbb
shr
dec
push
xor
movsb
cmpsl
pop
shlb
lahf
in
das
cmpsl
popf
inc
sbb
xchg
or
inc
in
mov
repz
stos
add
pushf
push
mov
lret
push
mov
adc
jle
mov
dec
inc
pushf
mov
imul
aas
add
xchg
fs
insl
call
jnp
aas
sub
jmp
mov
gs
pop
add
mov
pop
jo
pop
cmp
sub
hlt
xor
add
jge
ljmp
push
insl
mov
test
rcrb
outsb
jo
jne
and
out
push
jne
mov
outsb
stos
lods
mov
popf
cmp
push
add
in
out
mov
int3
inc
lret
sub
and
xchg
bound
data16
test
ret
mov
inc
or
push
outsb
adc
sbb
cmp
call
cmc
or
mov
xchg
lods
and
imul
adc
das
aaa
data16
push
mov
xchg
outsl
jne
loop
xchg
adc
inc
mov
jo
bnd
mov
pop
dec
mov
cwtl
sbb
lcall
es
adc
xor
dec
scas
lcall
jge
stc
cmc
adc
xchg
cltd
jo
aas
shlb
stos
mov
and
sub
sbb
insl
pop
xlat
push
imul
sahf
inc
or
add
push
cmpsb
cmpsb
movsl
and
adc
mov
repnz
int3
jb
popf
inc
testl
sbb
stos
sub
jo
pop
sub
push
pushl
inc
dec
aam
aaa
cmp
imul
stc
cmp
shrl
adc
in
out
mov
in
jmp
shl
icebp
push
sbbl
add
and
mov
mov
push
mov
test
data16
repz
addr16
add
bound
xor
jle
jae
xchg
iret
fwait
loop
and
inc
stos
push
sub
cli
dec
dec
cmp
add
jg
push
aas
inc
out
and
icebp
cmc
jp
xor
dec
fcmovne
leave
xchg
jae
rorb
or
adc
test
fwait
shrl
mov
cmpsl
lcall
std
loop
fidivl
icebp
stc
cmpsl
lahf
lods
or
aam
jmp
add
out
pop
popf
mov
jo
wrmsr
jmp
fdivrl
jne
jl
cwtl
imul
pop
popl
fstpl
cmp
sahf
aaa
fwait
xchg
cmpsb
push
pop
das
or
mov
scas
fcmove
cmp
pop
xor
mul
jl
or
adc
imul
lcall
cli
sbb
cmp
mov
sbb
pop
push
mov
fstps
adc
loopne
lods
pusha
xchg
in
or
dec
and
mov
lret
add
and
xor
out
and
sbb
xor
pop
std
jae
mov
adc
in
or
imul
mov
addr16
adc
sub
pop
inc
cmpsb
lds
lahf
push
sub
repnz
imul
pop
dec
jle
enter
lds
xchg
inc
push
cmpsb
adc
sar
daa
adc
sbb
xor
mov
sti
mov
jbe
test
mov
pop
sarl
xor
rorb
sbb
das
sbb
ret
sbb
rcll
insl
popf
movsb
fwait
imul
and
stos
sub
popf
mov
call
jns
push
cmc
sub
and
int
fwait
fs
inc
repz
jnp
xchg
insb
es
jb
and
ljmp
in
push
xor
cmp
mov
mov
out
movsb
xchg
add
pop
arpl
lods
inc
cmp
mov
in
xlat
mov
into
sub
popa
xchg
jo
jle
and
idivb
jle
and
mov
mov
aaa
cltd
mov
lret
inc
inc
dec
imul
sub
cmp
xchg
and
outsb
lods
das
xor
or
loope
cmp
lret
divb
cmp
mov
xchg
jae
repz
notb
cmc
ret
outsb
adc
mov
or
loop
shr
push
shrb
and
stos
xchg
ret
push
mov
xchg
mov
das
cmp
fwait
pop
cltd
xor
adcl
out
pminub
leave
ljmp
popa
mov
divb
push
mov
push
cmp
js
cmp
and
scas
xchg
cwtl
mov
ss
inc
ss
sub
stos
mov
and
sub
nop
fistpl
inc
fstl
ljmp
mov
aaa
jecxz
loope
sub
into
shrb
mov
or
imul
mov
push
add
in
adc
ss
jnp
dec
pop
sub
add
or
mov
xorl
cmp
mov
fidivs
jle
scas
sub
neg
pop
scas
sub
xchg
sub
jb
xchg
repnz
movsb
sub
lods
xchg
xor
out
addr16
xor
dec
mov
xchg
adc
ret
pop
mov
xor
repnz
hlt
notl
in
mov
inc
arpl
mov
sahf
insl
iret
dec
cwtl
xchg
movsb
sub
jp
pop
dec
cmp
mov
mov
push
or
mov
jo
das
cwtl
pop
pop
mov
scas
xchg
mov
xor
sub
lock
scas
outsl
fldt
sub
aas
and
test
dec
faddl
pop
xchg
call
imul
mov
jmp
and
sbb
icebp
and
arpl
xchg
mov
pop
call
sbbb
jb
adc
lds
jns
out
pushf
sub
pop
and
mov
dec
push
push
dec
fstps
stc
lahf
pop
push
push
pop
pop
lods
movsl
dec
fdivrs
cltd
testb
dec
dec
xor
test
ds
mov
sbb
add
add
mov
mov
aad
test
pushf
sub
jge
fnstenv
sbb
in
cmp
aad
es
repnz
fnsave
sbb
addl
movsb
arpl
call
cmc
je
jle
adc
dec
and
aad
incb
inc
popa
rclb
les
scas
sbb
cltd
cli
in
jg
dec
sub
cmp
sub
mov
inc
and
aaa
adc
xchg
stos
inc
and
stc
vpmaxub
cmp
andb
push
pop
pop
jno
lret
and
jge
xchg
inc
xor
test
int3
push
jl
mov
xchg
add
and
popf
pop
fcoml
pop
or
and
negb
fisubs
aam
ret
mov
lods
add
pop
into
inc
and
pop
or
das
lock
loop
pushf
gs
sbb
aad
imul
mov
add
cltd
stos
push
enter
add
pop
clc
in
xchg
in
jp
mov
xchg
adc
pop
mov
fwait
imul
iret
push
jl
xchg
cmp
cmpsl
lods
pop
int3
jecxz
sbb
scas
fs
sbb
lea
mov
gs
sub
and
mov
sbb
lods
xor
adc
lea
in
sub
gs
adcl
push
adc
fldenv
or
jo
stos
xchg
cmp
sub
push
jge
jmp
mov
dec
cwtl
sub
int
test
hlt
pop
call
pop
roll
cltd
loopne
push
push
ret
mov
push
in
testl
or
sbb
xor
mov
add
jae
pop
test
ja
aam
imul
mov
scas
sub
mov
aaa
bnd
xor
mov
clc
jg
cmp
cmp
add
push
adc
lods
hlt
mov
pop
in
cmp
rorl
sbb
loop
mov
aas
je
mov
add
inc
nop
adc
test
iret
andb
movsl
cltd
testl
pop
dec
clc
sbb
orl
loop
lcall
outsl
out
mov
push
iret
or
inc
adc
pop
loop
sub
xchg
adc
cmp
or
pop
fiaddl
pop
cwtl
xor
js
iret
and
xor
dec
insb
cld
lock
rcrl
pop
mov
adc
mov
jl
inc
sti
mov
push
js
ja
icebp
loop
insb
mov
clc
aam
aam
jae
mov
xlat
out
xchg
or
fcmovnbe
subb
addr16
mov
pop
push
add
stos
lea
and
push
mov
pop
xlat
stos
or
gs
mov
mov
punpckhdq
jno
popf
add
out
inc
fwait
push
fs
repz
push
insl
ror
int3
enter
lods
push
pop
out
rorb
inc
imul
int3
outsl
and
and
ljmp
push
daa
fwait
inc
lret
push
sub
inc
test
insl
nop
xchg
xchg
mov
imulb
xchg
pop
add
loopne
xchg
push
xorl
sub
sahf
jp
rcl
and
bound
in
lret
ret
movswl
or
in
hlt
sub
pop
insl
sahf
and
mov
pop
inc
clc
popf
dec
loope
push
cltd
jge
xchg
out
int
xchg
xchg
leave
pushw
push
cmp
and
inc
cwtl
or
sahf
inc
int
test
popa
pop
mov
leave
lret
cld
and
dec
andl
in
ficoms
popa
xor
stos
and
dec
test
pop
aad
cwtl
add
cld
outsl
int
jmp
inc
add
rolb
xchg
mov
push
push
xchg
shll
and
aam
push
popa
inc
xor
arpl
push
cld
sti
notb
xor
adc
test
inc
pop
mov
jp
inc
jbe
daa
mov
mov
int
aas
in
loope
mov
adc
in
push
jp
pop
push
adc
std
shl
dec
xorl
add
push
and
ljmp
test
xor
arpl
lcall
dec
xor
les
adc
and
lcall
cmp
xlat
mov
ljmp
cmpsb
mov
pop
loopne
data16
adc
out
or
or
pop
lods
dec
cmp
pop
or
sub
ret
clc
push
and
jle
mov
sarl
mov
and
sbb
orb
inc
sub
mov
in
adc
inc
test
dec
sub
iret
cmp
sti
mov
orb
push
clc
mov
mov
jg
jb
pop
push
push
fadds
jecxz
ret
adc
cmp
ja
jl
jmp
in
sub
adc
mov
xlat
lahf
xchg
jp
fiadds
mov
sbb
out
in
cmp
dec
ret
mov
add
icebp
or
pop
mov
xchg
pop
jns
stc
ror
in
and
cmc
or
jge
mov
sbb
outsb
adc
add
lea
inc
inc
cmp
lods
mov
dec
adc
hlt
sbb
mov
icebp
and
test
xor
sub
roll
sub
loope
outsl
mov
fidivrs
jb
add
int
hlt
or
ss
and
stos
pop
jne
xchg
js
lods
js
push
xlat
jmp
test
imul
push
adc
call
test
add
mov
mov
sub
sbb
imul
and
xchg
pop
idiv
jae
iret
xchg
enter
xchg
mov
in
mov
cmp
jno
or
jb
js
jecxz
imul
dec
fistps
pop
xor
jbe
sub
add
mov
in
shl
lods
mov
test
fwait
mov
mov
fucomp
inc
addr16
xor
lret
lret
loop
adc
mov
add
and
xor
aas
mov
dec
mov
mov
inc
add
add
sahf
dec
add
mov
sub
add
test
mov
or
xor
sub
test
mov
out
clc
out
lock
jg
mov
lods
cmc
xor
daa
rorb
push
cmpsb
stos
gs
xor
dec
or
icebp
sub
repz
jg
mov
bound
push
aad
sahf
inc
mov
movsbl
nop
sbb
repz
inc
pop
in
ss
inc
lods
fcompl
popf
add
inc
cmp
in
xchg
test
pop
dec
lea
adcl
mov
out
add
iret
and
pop
mov
mov
cmp
scas
adc
ret
stos
xor
in
add
pop
out
push
mov
fbld
or
mov
xor
dec
cmp
jnp
push
outsl
rcll
and
stos
mov
mov
pop
cmp
notb
div
inc
mov
cmpsb
jg
ret
sbb
sbb
jns
flds
and
fdivr
jbe
mov
popa
pop
in
push
push
add
pop
loopne
or
inc
push
cwtl
or
dec
xchg
shr
push
decl
mov
cmp
inc
loop
lds
adcl
xlat
psubb
bswap
rcrb
call
xchg
add
dec
push
jno
enter
in
push
and
popa
popf
xchg
outsb
pusha
pop
in
pop
das
jg
lcall
lods
xor
ret
ret
jnp
add
sbb
jnp
sahf
lock
mov
cltd
sbb
shlb
jmp
in
cmpb
mov
pushf
cmpsl
shrl
ss
test
fstpl
pop
jo
stc
sahf
mov
mov
dec
push
lods
lahf
test
pop
and
jne
and
jbe
xchg
push
loopne
sbb
icebp
pop
arpl
or
xchg
lods
mov
notb
push
test
cmp
in
repz
or
mov
fdivp
mov
sub
lret
popa
sahf
jne
imul
div
push
loope
adc
push
add
add
cmp
nop
adc
jbe
xchg
dec
push
xchg
mov
loopne
inc
mov
leave
mov
dec
sahf
sti
leave
cmpl
stc
int
inc
cltd
cli
in
mov
xchg
iret
xchg
fcompl
adc
out
shlb
push
dec
sub
jmp
sarl
lods
aad
xor
jo
push
loopne
cmpsl
les
inc
incl
mov
ficomps
and
dec
sbb
je
iret
icebp
es
cmp
stos
test
pop
aad
add
jg
movsb
cmpsb
jg
lea
fbld
aad
dec
jb
inc
inc
cli
inc
sahf
stos
mov
add
stc
cli
dec
push
ss
je
enter
or
lcall
and
and
stos
add
outsl
rorl
mov
sahf
test
enter
inc
or
stos
xor
mov
inc
mov
mov
cmc
mov
psllq
outsl
xchg
dec
push
mov
or
sub
je
popf
push
xchg
sub
jno
cmpsl
sub
sub
jb
push
jnp
xchg
jmp
imul
fcomps
scas
neg
push
popf
push
movsb
sti
jmp
fnstenv
ds
xor
dec
filds
and
mov
push
jae
mov
sbb
push
shlb
imul
push
jge
call
mov
fildl
cmp
rcll
stos
lea
mov
fistl
fimull
push
pop
test
and
test
sbb
pop
sbb
push
loop
inc
push
adc
lcall
fnclex
aas
mov
jmp
popf
mov
lds
mov
xchg
jns
sbb
xor
je
jo
mov
cmp
filds
in
dec
lods
xchg
mov
popf
decl
stos
and
sbb
jae
repz
stos
and
cmp
stos
cmp
xchg
add
push
jecxz
shrl
ds
nop
stos
mov
shlb
cltd
ret
lock
push
call
jge
mov
cwtl
xchg
dec
xchg
adc
push
es
cs
std
in
rcrl
out
xchg
mov
mov
xchg
add
mov
cli
mov
movsb
shlb
pop
xchg
sti
mov
xlat
cli
jecxz
cmp
test
loopne
clc
stos
dec
mov
pop
add
sub
sub
leave
jbe
and
test
in
inc
sti
lret
out
dec
ds
xchg
fisubl
mov
pop
mov
mov
adc
jmp
and
and
sub
in
lret
mov
lods
pop
sbb
icebp
jae
out
shlb
into
pop
lret
mov
aam
xchg
xor
addb
push
jecxz
lret
xlat
pusha
fimuls
cs
pop
mov
test
cmp
adc
lret
xchg
adc
dec
stc
jnp
lds
inc
jmp
pop
lock
sysenter
in
dec
or
xchg
sub
sbb
sahf
cld
cli
scas
je
mov
ret
and
jo
dec
jge
sbb
mov
add
sbb
fwait
cmp
inc
jne
rcr
mov
jno
fs
in
mov
push
xchg
jo
rclb
cmp
rcl
insl
mov
testb
insl
push
pop
sub
gs
mov
jae
ja
sub
je
jge
gs
lds
pop
push
shrl
rcl
push
sahf
mov
jo
bound
ljmp
insl
das
mov
lea
or
es
sbbl
or
mov
lahf
es
mov
fwait
dec
fldl
sub
loope,pt
clc
dec
xchg
xchg
push
fsubrl
mov
lds
sub
mov
ja
pop
mov
cmp
jge
jp
jmp
pop
andb
push
test
inc
and
mov
dec
ret
lea
sbb
iret
jg
sbb
loop
movsl
mov
aaa
mov
sub
ljmp
sbb
adc
shll
pusha
and
popf
mov
repz
ror
loope
testl
sub
cltd
stc
shll
sti
aam
pusha
jo
and
out
jb
sbb
and
mov
loopne
jp
lock
fs
jp
lock
in
shl
lcall
xchg
sbb
xchg
mov
repnz
sbb
mov
xlat
movsl
mov
in
xchg
mov
and
insb
sbb
cli
in
int
mov
inc
mov
sub
popf
cmc
cmp
into
mov
adc
lcall
imul
add
incb
sbb
idivb
mov
and
popa
mov
cwtl
insl
sbb
stos
repnz
in
incl
push
dec
jno
jmp
adc
push
lock
xchg
movsl
out
gs
scas
xchg
xor
fs
push
xchg
sbb
ficoms
pushf
hlt
lds
mov
pop
mov
xchg
mov
jns
int
lods
inc
cwtl
lds
stos
outsl
push
out
sub
mov
test
push
sbb
pop
pop
jmp
push
test
or
aad
iret
pop
push
sub
ja
sti
cmovae
ret
mov
adc
mov
xchg
jb
add
testl
cli
cli
mov
roll
jae
insb
xor
mov
dec
pop
push
aaa
std
cld
in
gs
push
stos
ret
fistl
insl
push
out
mov
imul
int3
rcr
inc
mov
sub
mov
popf
jg
push
imulb
popa
div
xchg
test
mov
ljmp
push
sahf
call
in
mov
test
data16
out
adc
shll
js
pop
out
cmpsl
sub
sbb
cmp
sub
ljmp
mov
cmp
pop
fidivrl
mov
sbb
es
jge
sub
insb
adc
mov
in
sbb
cld
call
inc
dec
ficoml
or
into
clc
repz
scas
adc
aam
inc
insl
lods
xor
fcompl
pop
jne
xchg
jmp
push
cld
mov
or
fcmovnbe
test
sti
lods
mov
int
mov
dec
adc
cs
pushf
mov
pmulhuw
outsb
push
imul
lcall
push
adc
jp
jl
jp
aas
or
mov
sar
rcrl
adc
mov
xor
cmp
cmp
cmp
mov
insl
mov
push
sti
iret
jl
jo
lahf
sub
addr16
out
push
jo
aam
lcall
xchg
stos
outsl
js
nop
mov
sub
mov
ja
xor
or
add
adc
dec
sub
fiaddl
jns
cmp
jb
imul
iret
out
xchg
jmp
jno
enter
xlat
and
idivb
mov
push
rcrb
imul
inc
mov
xchg
clc
and
mov
mov
push
jbe
jl
test
mov
pop
loopne
shlb
xchg
lea
sub
push
mov
dec
fwait
out
stos
icebp
stos
mov
lcall
adc
push
inc
outsb
and
ljmp
ret
mov
push
sbb
iret
dec
jp
or
outsl
xchg
js
filds
cmp
sub
mov
adc
lods
fs
xor
and
ds
jnp
fisubrs
cmp
lahf
lods
cli
es
dec
imul
jge
inc
fidivrs
sub
popa
fists
fstpl
jne
xor
mov
js
push
mov
ret
add
push
push
pop
stos
or
xor
cmp
les
lock
and
or
popa
push
int
repz
pop
lahf
push
outsb
cwtl
aam
stc
stos
xor
xor
xor
lret
add
dec
loop
cwtl
push
mov
xchg
icebp
cld
xor
inc
inc
pop
mov
cmc
inc
mov
ret
mov
cmp
lds
pop
mov
jae
inc
sbb
sbb
fcoms
fs
push
ret
insl
push
push
shlb
enter
inc
rcrl
fdivl
mov
dec
sub
sahf
inc
sub
insb
sub
arpl
pop
push
dec
and
mov
ds
stos
adc
nop
or
dec
inc
or
ret
notl
jecxz
xor
jg
add
loope
and
xor
cmp
test
sbb
pop
les
popf
rorb
jae
stos
and
lds
and
out
or
nop
repz
sbb
jle
mov
dec
ret
cmpsb
adcb
cmp
and
jbe
mov
cmp
xchg
pop
and
cmp
push
mov
dec
loopne
adc
or
outsb
push
ljmp
pop
xchg
int3
pushf
or
push
xchg
xchg
push
cli
mov
scas
ljmp
xchg
sub
pop
insb
mov
js
xor
jno
in
push
and
mov
xor
dec
lret
js
dec
std
push
or
lahf
inc
and
jns
push
test
gs
mov
push
mov
in
adcl
test
enter
out
cmpsb
pusha
in
fmull
and
pusha
and
outsb
fimuls
mov
rolb
sbb
xor
push
ret
xor
push
pop
rcrl
xchg
jbe
inc
in
add
outsb
out
adc
pop
mov
pop
mov
or
int3
gs
xchg
lea
inc
je
push
decb
mov
imul
insb
loop
xchg
loopne
or
mov
sti
dec
daa
fbstp
inc
jb
out
push
add
out
mov
cmp
mov
and
cmpsb
das
rcll
scas
mov
imul
mov
cwtl
and
add
push
cmp
or
mov
insb
imull
std
push
xchg
out
std
cmp
xor
jbe
lret
stc
mov
insl
shll
out
outsl
test
inc
cltd
jl
cmc
xchg
out
addr16
fiaddl
aam
cli
xor
aam
pop
jnp
mov
dec
loopne
xchg
mov
xor
xchg
call
lret
aas
sar
jb
in
mov
push
in
xchg
push
in
add
mov
outsb
xchg
sbbl
push
int
mul
sbb
arpl
push
lock
jle
xchg
pop
lahf
jo
dec
outsl
inc
call
mov
cld
mov
pop
xchg
push
jle
cwtl
push
stos
popf
dec
mov
mov
ljmp
and
mov
test
dec
mov
aas
clc
jge
mov
xchg
inc
inc
les
addr16
jns
mov
xor
add
les
cmp
ljmp
and
out
dec
xchg
or
xor
cmp
mov
push
mov
mov
jne
in
and
insl
cmp
inc
mov
mov
pop
lea
scas
es
sbb
mov
pop
sub
jge
fidivrl
outsl
adc
or
rol
shl
shl
hlt
sti
enter
pop
rcr
jmp
cmp
aad
push
dec
pop
outsl
push
repz
test
push
adc
mov
cmpsb
mov
ret
mov
subl
xchg
call
xchg
pop
sub
mov
repz
pop
leave
repz
ja
test
pop
imul
xlat
test
sbb
pop
push
mov
insb
dec
pop
cmpsl
fdivrs
cmp
fwait
leave
or
rolb
add
das
mov
cmp
adc
lock
cmp
nop
js
mov
jp
lds
adc
mov
lret
cmpsl
scas
cltd
stos
jnp
jae
or
cmpb
mov
mov
mov
sti
jnp
mov
xor
scas
cld
sqrtps
stos
mov
push
int
jle
add
imul
ss
jno
push
ds
in
or
lods
mov
js
and
dec
mov
repnz
push
imul
mov
fidivl
dec
dec
out
jnp
in
sbb
adc
clc
lock
or
ficoms
and
mov
loope
xor
adcb
cmp
mov
hlt
pop
fidivs
jmp
test
cmp
sahf
les
push
mov
ret
or
inc
push
mov
xor
lods
push
fs
nop
mov
sub
xor
iret
pop
mov
push
lods
sub
gs
sub
call
and
stos
mov
fnsave
and
mulb
push
pop
dec
in
daa
jmp
call
add
out
jge
cli
mov
inc
ret
adcb
leave
add
sbb
dec
or
aas
in
cmpsb
test
rolb
and
sar
adc
adc
stc
leave
sub
popa
cmp
xchg
int
enter
jge
das
mov
cld
js
in
dec
enter
mov
in
jne
cld
outsb
xor
call
test
dec
cltd
cmpsb
xor
jo
pop
push
jl
stos
ret
bound
mov
xchg
dec
int3
mov
stos
orl
es
ljmp
xchg
mov
adcl
mov
mov
sub
xor
insl
inc
jae
pop
loop
roll
pusha
mov
repnz
and
movb
and
pop
iret
pop
mov
lcall
jl
sbb
rcll
xchg
enter
add
popa
fstl
inc
pop
mov
xor
jle
dec
call
mov
stc
cwtl
ja
mov
dec
test
push
cmp
xchg
int
daa
push
fisttpll
and
push
xor
fs
leave
and
inc
mov
js
scas
push
xor
adc
fs
out
cmpsl
mov
add
outsb
lods
stos
out
inc
dec
cmp
aaa
push
testl
rclb
inc
and
xchg
xor
cltd
push
aam
pop
dec
dec
fmuls
xor
adc
xchg
add
cmc
les
xchg
and
dec
mov
les
in
and
xchg
in
mov
iret
in
push
ds
or
inc
xlat
pop
mov
pop
mov
sbb
jmp
sbb
adc
in
bound
jge
mov
ds
push
in
dec
cmp
js
add
fldt
and
data16
dec
xchg
loope
popa
ficoms
mov
in
cmp
mov
cwtl
xor
xchg
cmpsl
mov
pop
xchg
cwtl
scas
fsubl
and
aam
test
jae
mov
jne
inc
inc
insl
test
fldt
pop
ja
pop
shrb
inc
cmc
jg
mov
lods
xchg
loope
mov
add
cmp
push
lret
inc
rcll
inc
dec
repnz
jg
jne
jge
dec
dec
push
in
and
sbb
pop
jg
xlat
bound
jbe
or
cmp
sbb
pop
test
mov
lahf
push
cld
roll
or
arpl
mov
scas
mov
iret
mov
push
cmp
divb
cmc
stos
movsl
outsl
in
xchg
push
pop
mov
mov
ror
sub
jg
bound
inc
ja
repz
lock
shr
rcrl
cli
mov
push
or
jecxz
jb
xor
sti
cs
jb
push
lret
adc
icebp
and
ljmp
xchg
iret
mov
add
mov
dec
jae
out
xchg
push
fldenv
jb
icebp
bound
adc
cli
scas
mov
cmp
jle
loopne
jne
mov
push
andb
sbb
sbb
xor
sahf
xor
scas
test
clc
es
and
shlb
test
cs
cltd
aam
sub
dec
jmp
pop
and
into
xor
popa
cmc
int3
or
push
mov
mov
push
out
xor
in
je
cwtl
jg
pop
les
insl
pop
or
jns
hlt
enter
inc
cli
xchg
aad
jg
xor
push
incb
add
call
cli
lahf
sbb
outsb
incl
mov
jns
data16
jl
jno
divl
pop
fdivrs
out
sub
push
jne
andb
xchg
pop
imul
xchg
outsl
adcb
pop
int
in
mov
adc
int
and
cmovae
mov
and
inc
fisubl
popa
jo
and
dec
mov
mov
mov
loop
jmp
and
pop
cmp
add
dec
outsb
adc
aam
push
data16
mov
pop
repz
xorl
fwait
sub
imull
mov
and
push
in
cmpsb
jecxz
scas
fimuls
in
pop
dec
push
mov
dec
sbb
call
hlt
or
sbb
les
test
je
sub
and
orb
ljmp
sbb
mov
mov
mov
mov
pop
out
or
xor
jo
pop
xchg
mov
test
pop
and
push
data16
iret
jmp
adc
cld
pop
adc
addr16
lret
mov
out
mov
call
cltd
mov
xor
pushf
and
dec
mov
in
dec
ret
sarb
mov
xor
sahf
and
mov
jg
mov
push
loopne
les
add
stc
pop
cld
push
shl
inc
lds
leave
fld
adc
hlt
imul
cwtl
sub
mov
adc
xor
or
or
add
ss
lcall
ja
pushf
fsts
mov
xor
sbb
sub
jle
stos
nop
mov
lret
lret
popf
inc
data16
cmp
sub
pop
mov
movsb
loope
loop
pop
mov
lret
mov
out
cmp
fwait
stos
pop
insl
and
adc
lock
int3
jl
test
mov
add
scas
outsl
out
and
aad
mov
jns
ja
dec
dec
mov
add
mov
push
and
inc
shl
ss
pop
testb
and
xlat
lahf
int3
insl
jmp
push
push
xor
lret
fwait
lret
aas
cmpsb
arpl
jb
out
pop
mov
sbb
mov
jo
sub
xlat
xor
mov
pop
jne
xor
in
mov
lds
push
jbe
push
testb
insl
xchg
or
cmp
sbb
sbb
adc
jl
inc
mov
and
jne
movsb
icebp
insb
aad
dec
adc
xchg
jbe
adc
hlt
xlat
in
loope
lret
sub
push
sbb
add
cmp
push
dec
mov
rorb
leave
add
dec
mov
loopne
les
or
cmpsl
arpl
push
inc
cli
pop
inc
push
jmp
xchg
std
mov
add
cmpsl
xorb
adc
pop
rcl
push
ljmp
inc
rolb
fsubs
pop
int
jno
sarl
aaa
dec
adc
pop
mov
in
mov
pushf
stc
jnp
add
or
push
mov
inc
imul
mov
fstpt
shrl
pusha
xor
xor
jg
pop
dec
sbb
push
loope
push
stos
call
test
inc
mov
jb
dec
shll
lcall
dec
dec
push
fisttpll
dec
dec
stos
xchg
in
cmpl
cwtl
rorb
loopne
push
push
push
jge
add
cs
xor
sub
sub
jns
xor
mov
inc
sbb
test
daa
cli
push
cmc
xor
dec
scas
in
je
jo
jne
cmp
sarl
fsubrp
xor
scas
enter
scas
add
rclb
adc
inc
shl
shl
mov
mov
dec
out
adc
jb
cmp
mov
jb
add
rcrl
daa
cmpb
xor
sub
and
out
pop
test
popf
xchg
jnp
add
xchg
dec
xor
sub
lods
cmp
inc
ds
push
push
adc
popa
int
add
mov
push
dec
in
pop
in
insb
xchg
lcall
xor
inc
bound
or
cmp
inc
cli
imul
push
inc
cmp
mov
sub
fstpt
cmpsb
ret
repz
icebp
iret
scas
xlat
loope
pop
jecxz
and
adc
test
mov
push
call
into
gs
mov
pop
out
popa
push
sbb
or
imul
pop
inc
dec
jae
jno
fcompl
cmp
push
and
into
sbb
lcall
pop
cmp
push
fcoml
repz
xchg
out
lods
mov
call
cmpsl
in
mov
int
xchg
inc
or
cltd
into
inc
dec
xor
xchg
xchg
cmc
mov
cmpsb
mov
add
pop
iret
or
mov
mov
pop
sub
mov
push
filds
test
pop
mov
adc
fists
js
mov
jns
fmulp
xor
insb
std
xchg
cwtl
clc
movsb
out
shl
shr
or
call
pop
subb
mov
lods
jno
cld
xchg
enter
ret
push
jns
lods
sti
adc
xor
shl
sbb
sub
adc
rcrb
lods
xor
out
nop
cmpsb
aaa
cmpsb
lods
sbb
mulb
pusha
ret
js
movsl
scas
xchg
mov
dec
scas
pusha
das
xchg
scas
xor
mov
outsl
push
push
mov
pop
pop
adc
dec
jl
jnp
xorb
sub
aas
imul
fildl
jbe
enter
cmp
xor
in
inc
imul
or
adc
cmp
pop
stc
jle
inc
jecxz
xlat
or
cs
sbb
repnz
movsl
je
pusha
or
icebp
inc
aad
ds
dec
cmp
inc
sbb
push
xor
hlt
addr16
cmpsl
xchg
sub
inc
add
sub
pop
and
popa
xchg
ret
jne
mov
dec
push
sub
pop
repnz
jmp
imul
insl
push
shl
enter
sti
mov
rorl
mov
lods
mov
rorb
xchg
in
into
lret
and
or
out
icebp
neg
inc
inc
ret
pop
and
and
add
dec
aad
push
jbe
lea
sub
inc
mov
aam
mov
adc
std
mov
aaa
push
lret
test
push
dec
data16
push
sbb
shr
push
les
stos
ret
xchg
jo
xor
in
cld
test
ret
fldl
jmp
pop
pop
mov
xchg
gs
lea
cmp
xor
test
loope
inc
pop
out
popa
aaa
ficoml
sub
loope
notb
repz
dec
push
scas
loopne
jmp
ret
jmp
mov
scas
outsb
scas
fimuls
lds
repnz
pop
cmp
cmpsl
push
cmp
cmpsb
or
adc
push
or
mov
loope
imul
and
mov
clc
push
test
loop
jno
and
sub
aad
jge
arpl
dec
mov
mov
or
arpl
mov
mov
pop
aad
inc
lods
mov
out
pop
testl
xchg
sti
jo
insl
pop
int3
jle
lret
test
or
jb
cmp
int3
clc
cmc
int3
pushf
out
push
push
push
mov
scas
js
inc
pop
mov
add
mov
add
ds
out
pop
test
ja
xchg
fwait
mov
jb
nop
cld
mov
jmp
imul
lods
push
std
into
sbb
iret
xchg
out
mov
push
xchg
addr16
sub
dec
test
or
fs
jbe
xchg
fs
dec
inc
cmpl
mov
mov
ss
loopne
or
dec
jo
pop
dec
xlat
pop
jne
push
xor
mov
cmp
push
jno
loopne
sub
lods
sbb
fcmove
push
or
inc
dec
inc
iret
into
scas
mov
cltd
adc
or
mov
imull
jbe
cld
test
jb
pop
jbe
repnz
cli
mov
out
mov
notb
mov
pushf
hlt
outsb
sub
shlb
sub
xor
adc
xchg
test
adc
xchg
inc
ret
fiadds
and
scas
sbb
inc
mov
adc
repz
push
xchg
push
mov
dec
int3
push
inc
in
in
cld
out
xchg
loope
mov
jae
fcoml
mov
and
push
ret
pop
popa
xchg
or
inc
call
mov
ja
insb
insl
insl
fcoms
xor
out
push
push
jp
mov
xchg
add
cwtl
rcrl
adc
loope
mov
xor
rcrl
jae
or
outsl
pop
test
push
jp
pop
push
int3
les
mov
call
and
jecxz
rcrl
faddl
pop
in
xchg
push
sub
gs
test
test
and
dec
inc
repz
icebp
mov
jne
sub
jmp
jns
mov
or
sti
mov
push
dec
jl
pusha
xor
fimull
cmpsb
mov
jecxz
add
jl
xchg
arpl
push
iret
inc
movsb
sub
mov
jmp
lret
loope
or
or
flds
mov
in
xor
les
and
xchg
sub
adc
in
cs
aam
filds
imul
xchg
ret
and
add
xor
ds
sbb
pop
int
fwait
add
ret
shr
aad
xchg
cmp
sub
mov
mov
or
mov
sbb
add
adc
mov
dec
inc
mov
inc
outsl
xor
aaa
lar
dec
test
rolb
pop
push
in
cmp
cmp
jmp
or
imul
pop
sub
sbb
je
clc
clc
xchg
outsb
std
lret
inc
icebp
cmp
dec
push
mov
aas
int
pop
pushf
xlat
push
stos
daa
sti
mov
pop
pusha
fucom
sbb
cmp
pop
or
std
ret
mov
in
popa
das
jo
bnd
dec
push
add
jl
pop
mov
add
lea
add
outsb
add
add
jecxz
cltd
pop
pusha
jnp
inc
and
js
pop
mov
pop
adc
ja
lock
je
cli
cmp
popa
imul
cltd
dec
aas
push
pop
aad
add
cmp
std
rorb
cmpsb
mov
xor
dec
fnstenv
fsubrl
stc
retw
inc
inc
add
pop
xor
aad
adc
xchg
roll
fs
mov
xor
loop
mov
lods
int
mov
or
dec
add
insl
mull
imul
shl
cmpsb
adc
fisubrl
mov
jle
pop
in
mov
or
nop
ret
enter
testb
or
push
popf
mov
cltd
cmc
std
ljmp
imul
jle
sti
ret
enter
movsb
cli
lock
fdivs
add
fists
push
loop
ljmp
mov
int3
inc
gs
xchg
lcall
sub
ljmp
jp
aam
test
dec
enter
jle
lock
inc
das
jge
cld
dec
outsl
into
test
pusha
sbb
popf
jb
cs
lods
xchg
xchg
mov
aas
inc
roll
mov
daa
das
xor
pusha
ljmp
mov
dec
out
lcall
pop
xchg
scas
jno
sub
jo
and
sub
mov
add
out
inc
out
bound
popa
je
outsb
lods
scas
jge
adc
sub
bound
aam
lret
lods
push
pop
sbbb
in
hlt
das
mov
jbe
cmpsl
fnstcw
in
out
push
imul
xor
pop
and
and
aam
sub
sbb
pop
in
mov
iret
aaa
dec
push
ja
xchg
arpl
and
fsubs
out
lock
inc
fimuls
outsl
loopne,pn
lds
cmp
lret
mov
cmp
cmp
mov
popa
jne
push
sub
push
das
stos
xlat
test
imul
mov
push
pop
cmp
lods
push
xchg
cmp
and
dec
sbb
mov
jbe
outsb
mov
movsl
in
mov
push
ljmp
std
cmp
test
sti
mov
inc
sub
push
and
lahf
inc
cmpsb
aad
mov
fdivrl
rorl
lods
and
sbb
push
pop
cmp
lret
inc
mov
loopne
ror
outsl
movsl
ret
jo
aas
push
pop
lock
cmpsb
or
aas
inc
loopne
cs
aad
mov
mov
out
sbb
push
add
mov
push
and
roll
adc
sbb
jmp
inc
cmc
mov
jae
adc
dec
jmp
loop
cmp
into
jns
stos
movsl
dec
mov
cwtl
loope
and
adc
lods
loop
js
loope
fstpl
add
mov
cltd
das
xlat
and
filds
aad
arpl
cmpsb
sbb
mov
mov
stc
inc
das
shll
jnp
arpl
sbb
mov
in
cmp
shr
rorl
xor
insb
mov
sub
ret
arpl
stos
add
mov
sub
dec
and
dec
hlt
mov
adc
int3
loop
or
xchg
jne
shl
rcr
mov
rcrl
out
outsb
xor
or
sub
mov
mov
pop
push
mov
mov
add
jo
jge
cld
scas
add
jns
xor
xor
loopne
xchg
repnz
jbe
mov
rcl
into
ja
scas
or
loop
arpl
xchg
roll
movsb
sbb
inc
out
in
pop
aad
push
loop
in
mov
sub
ja,pn
insb
lods
repnz
fadds
mov
insb
jmp
repz
pushf
loope
ja
aad
adc
divps
pop
fdivrs
ja
outsb
ret
xchg
xchg
fists
jge
lret
pop
fnstcw
fpatan
movsb
loopne
xchg
repnz
push
stc
lcall
cmp
loopne
adc
in
lahf
sarb
xadd
push
push
fisubrl
rorb
in
dec
push
daa
inc
mov
dec
idivb
sahf
push
xlat
dec
inc
xchg
dec
mov
mov
pop
push
cmpsl
pop
cmp
jl
insb
jp
push
adc
test
clc
out
cmc
outsl
mov
mov
xorb
mov
data16
lods
jecxz
xor
ss
jb
mov
lcall
cmc
cli
sti
loopne
xchg
mov
sub
pop
or
jne
dec
dec
lods
aad
sarb
jecxz
push
sub
icebp
iret
test
jl
fsubrl
add
mov
cli
add
aas
leave
xorps
lods
fs
jo
mov
nop
mov
test
ss
divb
test
pop
lock
and
sti
dec
cmp
inc
mov
xor
out
sub
pop
icebp
js
lcall
adc
adc
cmp
ja
add
cmp
push
and
sub
test
fs
stos
mov
jl
les
jbe
hlt
inc
ljmp
inc
daa
dec
push
sbbb
pop
dec
es
stos
popa
push
in
shll
fisubs
mov
cs
mov
pop
jb
loopne
clc
pop
mov
and
or
push
jp
sub
test
add
mov
faddl
js
fcomps
loop
fcomip
popf
int3
daa
mov
cmpsb
and
inc
sbb
sub
scas
push
xchg
dec
xchg
jecxz
aad
sbb
jmp
mov
lods
int3
jne
xor
or
dec
sub
mov
in
into
mov
imul
int3
cwtl
pop
lret
xor
inc
or
and
dec
jg
lds
in
pop
cmp
sbb
jne
cmp
xchg
arpl
inc
daa
push
xchg
xchg
cmc
stos
or
jno
sbb
xor
or
in
enter
xchg
mov
fdivr
mov
adc
push
pop
pusha
loop
cmp
fwait
mov
sbb
push
pop
cmp
adc
insb
fistps
imul
jmp
shll
dec
lods
int
cmp
leave
dec
and
fidivrl
cmp
lret
cmp
fwait
enter
aaa
sahf
cltd
test
sbb
testl
dec
push
cmp
insb
add
ss
xor
jae
les
and
or
mov
js
adc
in
jb
mov
pop
leave
xchg
lods
lock
xor
inc
mov
push
jno
arpl
mov
movsl
cmp
adc
pop
xchg
dec
adc
pop
fwait
ds
jnp
lahf
add
decb
bound
lods
and
imul
cmpl
sub
xchg
es
aam
frstor
sub
add
push
jno
das
xlat
push
pusha
daa
pop
sbb
xor
mov
imul
gs
lock
lock
iret
mov
pop
add
fadd
cmp
xchg
mov
es
outsb
push
xor
xor
pop
mov
mov
mov
cltd
aas
mov
call
and
add
cmp
and
mov
inc
sarb
inc
mov
imul
out
popa
mov
or
dec
cmpsb
sub
out
loopne
add
lret
sub
jp
jnp
add
mov
inc
pushf
mov
loopne
aaa
inc
loope
sti
lret
insb
mov
mov
push
cmpl
test
xchg
push
mov
push
int3
out
jl
mov
fcoms
repnz
mov
mov
pop
adc
icebp
jmp
shrb
jne
in
xchg
fsub
aas
dec
stos
imul
je
imul
jnp
push
mov
mov
scas
dec
push
mov
mov
mov
test
mov
and
adc
lods
in
push
mov
lret
xchg
roll
stos
in
xlat
in
imul
sbb
orb
in
xchg
divb
int
mov
push
mov
inc
outsl
cld
xchg
mov
dec
jno
lods
scas
insl
ffreep
mov
mov
and
xor
cmp
lds
mov
lret
test
adc
jbe
push
mov
pushl
ret
xor
cmp
cmpsl
push
pop
or
mov
shl
sbb
mov
jl
std
sbb
mov
loope
lods
orps
lret
lret
add
lret
arpl
jo
dec
or
and
mov
cmpsl
pop
jmp
outsb
cmp
push
mov
cli
jp
cmc
jnp
cltd
sbb
add
inc
ret
push
ret
sub
sbb
shlb
insb
push
mov
inc
das
dec
xchg
in
rcl
outsl
out
cld
jle
pop
sub
cltd
mov
sbb
mov
cli
or
clc
inc
inc
cmc
jmp
cs
dec
push
pusha
ja
dec
jo
fwait
inc
repnz
stos
test
pop
dec
mov
out
mov
ret
test
push
roll
js
or
add
mov
fistpl
xor
mov
cltd
and
aaa
in
adc
mov
xor
dec
xchg
pop
mov
add
cmp
cwtl
sub
adc
cmpsl
fisttpll
mov
cmpsl
ss
scas
mov
mov
xlat
test
and
lret
dec
adc
push
sbb
or
mul
mov
sbb
mov
cmp
addr16
jecxz
xchg
mov
pushf
sbb
repz
movsb
aaa
add
into
xor
lcall
pushf
push
or
xchg
or
cmp
ror
jecxz
inc
lock
dec
loopne
push
xor
movsb
leave
ret
sub
xchg
jmp
jbe
mov
loope
xor
dec
add
cmpsb
mov
and
clc
xchg
mov
lock
mov
inc
insl
cmp
lret
jp
stos
fdivrl
outsb
insb
popf
push
xorb
pusha
mov
inc
call
in
mov
std
loop
cmc
xor
sbb
rcrb
les
loope
lods
je
stc
cs
pop
enter
iret
inc
jl
cs
cmpsb
inc
sahf
and
das
ds
lahf
jae
outsb
pop
adc
loopne
push
rcl
outsl
pushf
ja
mov
inc
xchg
mov
arpl
cmp
push
scas
int3
sbbl
fmul
cs
sbb
stos
out
int3
rol
xchg
cs
lret
nop
dec
jae
cmp
mov
ds
cmp
stc
insl
mov
sbb
iret
mov
and
enter
mov
repnz
mov
or
call
and
add
scas
jecxz
mov
pop
or
mov
stos
push
int
xor
into
cmp
sbb
xor
mov
mov
add
mov
add
cltd
add
push
fs
mov
lods
call
mov
test
in
xor
sub
and
minps
sahf
inc
lret
adc
loope
pop
xchg
int
add
fmul
push
push
aam
jl
mov
js
inc
adc
ret
rorb
xchg
repnz
int3
xchg
lods
nop
fisttps
sbb
fsubrp
scas
mov
jp
into
daa
sub
cli
cmp
and
lds
cmpl
and
and
jno
xor
jno
ret
fwait
movsl
mov
sub
mov
notb
sub
push
push
sbb
xchg
xor
pushf
pop
add
add
ret
cmp
dec
cld
or
out
test
rorl
mov
or
sbb
dec
pop
xor
lret
jno
scas
add
lods
mov
in
jge
mov
sahf
xchg
imul
pop
addb
push
je
mov
add
shl
les
js
popf
rorb
movsb
xor
cmp
push
xchg
movsb
call
mov
mov
movsl
out
notl
add
les
iret
push
fwait
inc
add
push
cld
int3
repz
jl
out
dec
jns
sub
mov
and
insb
mov
xor
je
aam
sub
insb
sbb
push
pop
mov
cmp
inc
aas
imul
xchg
inc
in
pop
cmp
repnz
push
and
cmpl
push
lahf
fstl
push
insl
inc
test
fcoms
fs
or
sub
mov
sbb
xchg
mov
sub
inc
adc
lahf
call
into
cwtl
cltd
fdivl
arpl
outsb
aam
test
add
dec
sbb
out
shlb
icebp
mov
dec
dec
mov
pusha
pop
iret
les
sbb
das
in
lock
loopne
outsl
pop
mov
iret
sbb
out
dec
out
mov
addr16
jo
mov
pop
push
sbb
xchg
xor
sti
cmpb
push
adc
add
lods
jle
js
xor
lock
bound
pop
push
mov
mov
sbb
inc
mov
loopne,pt
mov
cld
xor
dec
mov
popf
jmp
push
enter
repnz
push
in
jg
and
pusha
sbb
sbb
mov
xor
ja
cld
push
jge
insb
or
or
imul
add
add
repnz
sbb
vcvtpd2dqy
inc
jmp
sub
and
imul
out
lret
ljmp
scas
mov
inc
cmpsb
xlat
cmp
gs
jecxz
push
dec
and
mov
fsubrp
cwtl
push
dec
lock
xchg
je
sbbb
enter
mov
stos
iret
cli
lods
pop
push
shlb
stos
cld
pop
stos
fnstenv
pushl
sub
jno
hlt
stos
cmp
scas
mov
xchg
inc
pop
adc
rorb
js
shlb
cmpsb
clc
js
repnz
imul
adc
ja
leave
push
mov
mov
sbb
dec
aaa
int
std
movsb
sbb
lcall
cwtl
jno
adc
xchg
jecxz
sbb
add
jns
xchg
loope
adc
rcll
cmp
in
mov
loopne
pusha
mov
aam
add
and
mov
cmc
jl
lahf
es
jbe
pop
sbb
out
mov
incl
icebp
vmovups
and
int3
idivb
insl
sbb
mov
xor
das
loopne
inc
jns
enter
fwait
rcll
jne
jnp
stc
fs
xchg
mov
fs
mov
mov
dec
insl
mov
scas
sub
adc
add
lds
divl
cltd
fwait
subl
cmc
roll
inc
int
loopne
dec
cmc
shlb
cmp
jae
xlat
jne
std
inc
xchg
popf
xor
cwtl
xchg
mov
stos
xchg
loope
mov
add
in
push
fistpl
xor
push
adcb
out
mov
mov
or
std
dec
inc
dec
push
cmc
mov
fwait
movsb
mov
pop
jmp
movsb
push
push
pop
pusha
mov
dec
aad
mov
jl
mov
or
lds
mov
out
jnp
inc
sub
xchg
xchg
movsl
inc
lods
popf
cwtl
stos
stos
inc
fisubrl
std
mov
sbb
iret
push
cltd
dec
mov
xlat
jnp
aad
lods
mov
daa
adc
add
cmp
pop
lret
ret
nop
push
or
jae
adc
inc
loope
pop
outsl
push
lods
test
mov
xchg
mov
sub
test
pusha
pop
sbb
sahf
sti
pop
lahf
gs
mov
cmp
sbbb
and
bound
or
scas
mov
xor
sub
and
add
fs
fisubrs
ret
ljmp
mov
in
and
jecxz
enter
mov
cli
mov
aaa
mov
xchg
test
adc
mov
in
jl
lods
mov
xchg
test
add
xchg
and
pop
jae
jmp
outsb
or
leave
cmpsb
and
jmp
pop
push
mov
pop
and
mov
or
jae
addr16
xchg
push
mov
dec
pop
mov
lock
or
orl
fstpt
push
sub
add
out
jnp
sbb
or
sub
insb
jl
mov
and
push
pop
pop
pop
pop
hlt
aas
adc
adc
popw
jmp
pop
xor
bound
push
test
push
into
cmpsb
and
pusha
xor
inc
add
lahf
sub
or
inc
pop
outsb
shl
outsb
inc
in
pop
dec
lods
repnz
pushf
loop
ficompl
out
push
dec
inc
or
jb
mov
sub
sbb
inc
mov
and
lods
pop
xchg
stos
cmp
dec
inc
in
into
in
leave
les
dec
cld
fchs
out
icebp
fisttps
push
flds
pushf
sub
sub
sub
movsb
xor
push
testb
popf
cs
push
mov
movsb
push
xchg
in
std
mov
repnz
adc
dec
mov
cwtl
inc
pusha
rcrl
push
ret
inc
aam
repnz
test
test
stos
fisttps
sub
adc
pop
dec
add
sbbl
pop
xor
jae
add
dec
push
pop
stos
repz
sub
push
ret
inc
cli
fistl
call
lods
pushf
shrb
hlt
das
es
mov
inc
ljmp
jp
jae
jae
je
sbb
mov
adc
or
pop
shlb
out
xor
lds
xchg
cld
pop
mov
xor
sti
test
cmp
getsec
xor
fwait
aaa
dec
pusha
imul
inc
je
jno
sub
mov
inc
mov
inc
mov
cltd
cwtl
xchg
and
stc
sbb
cld
sbb
fisubrl
mov
mov
inc
aas
nop
jmp
mov
mov
or
je,pn
jo
inc
das
mov
test
je
movsl
int
fwait
test
or
cwtl
movsl
cmpsl
shr
and
mov
lret
mov
push
add
dec
out
jno
mov
pop
mov
mov
movsl
mov
pusha
aad
bound
mov
add
call
or
int
cld
adc
fdivrl
jg
ficompl
jno
sbb
cmp
fiaddl
xor
mov
je
negb
mov
icebp
popa
dec
inc
inc
xchg
fdivl
mov
jae
jne
pop
lret
add
shr
sub
clc
rdmsr
clc
xor
jge
nop
and
inc
xchg
pop
adc
fnstsw
call
mov
dec
arpl
pusha
sti
jg
test
cld
movntps
test
imul
xor
dec
in
push
in
inc
mov
and
pop
adc
test
pop
inc
jne
mov
test
fsubp
jne
or
add
fistl
xchg
mov
push
jmp
clc
or
dec
outsb
or
dec
jge
or
mov
inc
jne
enter
xor
or
mov
mov
in
sahf
popa
jns
scas
es
sub
dec
outsl
jge
push
jb
pop
mov
xchg
fdivrl
in
lret
adc
mov
imul
into
xor
and
enter
inc
leave
lretw
xchg
loop
pushf
nop
mov
movsb
sub
sbb
jmp
bnd
ljmp
pop
jnp
adc
mov
mov
iret
sub
in
inc
fistpl
mov
mul
rorl
aaa
popf
sti
imul
lret
daa
adc
imul
out
insl
jb
out
test
and
rcll
ret
imul
jnp
jnp
push
dec
push
mov
std
cld
lods
test
loope
jg
sub
scas
mov
movsl
xor
jmp
pop
sub
bound
xlat
push
movsb
xlat
mov
negb
bound
data16
and
addb
cmp
pop
adc
mov
inc
pop
cmp
jle
inc
add
out
sub
cmp
pop
into
mov
cmp
pop
fistps
xchg
add
sbb
imul
addl
rep
mov
push
lds
add
push
and
mov
sbb
dec
popa
loope
cmp
cmp
repnz
push
mov
daa
lret
data16
mov
dec
fbstp
sbb
stos
xor
gs
test
or
mov
push
push
pushf
inc
add
pop
xchg
test
mov
pop
pop
cwtl
cmpsl
dec
movsl
outsb
mov
bound
pusha
sub
aad
ret
push
and
push
jl
jecxz
pushf
lods
fildll
and
dec
outsb
int3
jmp
lea
push
add
pop
adc
nop
pushf
aad
cld
push
jge
frstor
xchg
in
cmpsb
push
jp
xchg
imul
shl
jnp
pusha
mov
xchg
push
ja
mov
fldt
test
cwtl
stos
popf
insb
stos
sub
xchg
lods
jg
sbb
adcl
cmp
xor
ds
ret
sbb
dec
mov
cmpsb
jle
in
mov
insl
xlat
neg
mov
cmp
jne
jae
ss
xchg
imul
andb
mov
sub
mov
pop
stos
loopne
jae
movsl
test
ret
fcmovb
pop
inc
aaa
jno
sbb
dec
leave
dec
dec
mov
les
popa
push
push
test
in
push
jmp
mov
pop
xor
fildll
cmp
xor
inc
fiaddl
pop
mov
inc
mov
xor
icebp
bound
push
insb
arpl
lea
sbb
cs
imul
scas
mov
lahf
and
push
pop
hlt
push
sub
ss
sbb
test
adc
loopne
add
jb
lret
jo
in
jb
jns
jno
std
int
mov
adcb
mov
rorb
and
and
add
fwait
jb
sub
mov
push
add
mov
imul
xchg
cmp
iret
inc
fs
add
sbb
adcb
adc
fs
and
or
lret
mov
fsub
add
movsb
jl
mov
sub
out
fcmovbe
or
lods
mov
xor
into
add
adc
mov
mov
mov
xchg
sbb
dec
test
int
call
push
mov
push
dec
dec
stc
mov
test
lahf
cmp
xchg
iret
test
push
in
xchg
or
add
rcll
or
stos
jb
fistpll
xchg
aad
fcomi
leave
popf
out
gs
dec
sbb
call
jo
and
cltd
sbb
out
push
sub
mov
cmovo
inc
adc
xchg
inc
subb
add
mov
mov
push
stc
jne
jle
jmp
jae
jne,pn
jne
mov
test
pop
cltd
push
ss
pushf
push
mov
shl
testb
inc
push
mov
stos
fisttpll
dec
cmp
pop
and
add
cmp
test
enter
sub
popa
scas
aad
nop
notl
push
loope
lock
push
daa
lcall
adc
bound
cmp
fsubrs
push
push
popa
lods
sub
pop
loop
add
jbe
in
pop
or
jns
and
inc
mov
or
adc
je
push
mov
movsb
jge
dec
jecxz
jns
fldt
ret
push
mov
insl
sbbb
mov
repnz
ja
and
dec
cmp
and
xchg
dec
lock
push
push
xlat
adc
fnstcw
adc
push
subl
shrb
cmp
aad
dec
addr16
fnstcw
mov
pushf
ja
xor
fwait
jl
pop
dec
pop
push
test
mov
imul
ss
cmovs
lods
sub
je
jb
or
dec
js
mov
cwtl
lea
pop
dec
popa
sbb
in
or
mov
or
add
mov
popl
fcmovu
repnz
sub
adc
lret
push
dec
stc
lea
sbb
and
leave
movsl
cmpsl
ds
decl
xor
or
sub
out
push
inc
cs
mov
mov
push
pop
rep
cld
jle
cs
xlat
out
and
icebp
mov
cs
jo
adc
les
outsb
movsb
xor
jns
imul
stos
and
fwait
add
cmpsb
add
mov
aam
lret
ss
aas
sub
jae
aas
push
fwait
movsb
or
inc
fcmovne
and
sahf
push
adc
pop
adc
enter
lea
and
lods
push
out
pop
mov
jmp
and
es
push
rorl
les
pop
pop
fcomps
pusha
adc
mov
pop
cmp
in
out
hlt
ficomps
and
xchg
subl
shll
push
mov
fs
dec
in
pop
adc
push
and
lods
mov
hlt
jmp
jo
mov
fs
test
mov
xchg
xor
lret
insl
cltd
cmpsb
cvtps2pd
or
mov
cmp
push
xchg
mov
pop
jl
leave
rclb
jo
sar
ficoms
jecxz
test
pop
and
daa
and
jp
nop
imul
jns
adc
test
cmpsl
xchg
scas
addl
stos
outsb
and
lret
das
pop
xchg
dec
xchg
or
cmp
fisttpl
pop
xchg
in
imul
fsts
and
and
sti
mov
mov
out
hlt
data16
adc
inc
ret
push
ljmp
mov
and
sub
cmpsb
dec
adc
xchg
cmc
or
xor
mov
adc
push
xchg
or
adc
add
adc
cmp
fildl
or
adc
and
mov
adc
xchg
mov
fsubl
cltd
addl
mov
fwait
dec
ljmp
or
mov
insl
jmp
sbb
stc
sbb
adcb
dec
dec
jecxz
mov
popl
or
xor
test
xor
sti
push
nop
nop
adc
inc
xor
addb
mov
inc
cmp
mov
cmpsl
lahf
adc
aam
cmp
ja
add
mov
push
pop
cmp
int
mov
lea
daa
cmp
mov
mov
mov
xlat
in
mov
orl
stos
and
scas
sbb
pop
js
in
rorl
xorb
lea
js
sbb
or
xchg
inc
push
rcll
sahf
jl
hlt
mov
jae
outsl
sbb
push
xor
sarb
mov
cmp
xor
dec
scas
out
push
pop
jb,pt
mov
jecxz
movsb
scas
xchg
lods
fisubs
sub
and
outsb
lods
jns
in
into
dec
mov
pushf
je
and
mov
jo
movsb
fidivl
je
jmp
xchg
les
push
xchg
arpl
xchg
lock
push
adc
sub
push
mov
xor
sbb
inc
test
push
adcl
and
sbb
xchg
les
xor
in
lret
pop
sti
pop
aad
jo
push
fucomi
outsl
sub
jmp
jae
jge
adc
add
test
add
dec
cmpsl
pop
jl
jno
call
inc
fxch
mov
pop
fwait
in
pop
pop
mov
jb
jg
or
jne
add
sahf
inc
xor
add
std
cltd
in
fdivrs
add
ret
add
add
dec
push
arpl
mov
add
ss
daa
xchg
add
xchg
xchg
add
pop
sub
xchg
xchg
rcrl
and
scas
mov
int3
cmp
inc
int3
in
xchg
jo
inc
insl
lock
or
inc
adc
cmpsb
clc
dec
pusha
arpl
sti
cmp
or
lcall
pop
lret
sahf
cmp
push
aaa
sub
ficompl
je
jg
inc
jp
cmp
adc
test
insb
dec
adc
stc
push
test
mov
fdivrs
dec
dec
filds
pop
and
call
lcall
mov
cmp
sbb
repz
rorl
fsubrs
xor
ja
adc
les
adc
clc
xor
sbb
repz
sbb
or
xor
and
jae
lret
call
add
in
stos
or
add
sahf
bound
cmp
mov
std
and
in
jne
dec
inc
xor
out
icebp
out
add
inc
cmp
and
out
iret
lcall
xchg
pop
cmc
pop
jg
cli
insb
leave
lea
jae
jnp
pop
cli
cltd
mull
push
cwtl
and
xor
or
rorl
xor
cmp
add
xchg
xchg
and
and
xchg
push
mov
bound
bound
inc
sbb
sahf
add
xlat
lea
imul
notl
jmp
movsb
xlat
sub
int3
dec
sbb
add
jl
mov
jmp
fstpt
out
mov
shrl
test
gs
inc
adc
lds
insb
pop
mov
mov
mov
xchg
rclb
mov
out
mov
xchg
out
leave
mov
jno
xchg
data16
pop
aas
fs
fwait
jne
std
iret
test
add
xchg
adc
aad
dec
add
lea
fists
sbb
cmpsl
lds
test
or
aam
cmp
sub
dec
outsb
aas
and
cmp
sbb
mov
xchg
inc
movb
add
jmp
push
xlat
xchg
aaa
jmp
inc
cltd
mov
inc
out
pop
test
xor
pop
popa
mov
inc
mov
dec
popa
or
sub
cwtl
int3
ret
mov
fistl
dec
or
adc
mov
lods
in
popf
push
mov
inc
into
push
dec
pop
and
leave
insl
addr16
adc
imul
pop
popl
push
sahf
xchg
movsb
sbb
xchg
and
mov
nop
fisttpl
pop
stc
mov
push
push
mov
iret
cmp
push
aad
jle
in
lods
mov
add
xchg
push
mov
xchg
pop
fsubrl
push
xchg
push
dec
pop
std
mov
mov
iret
mov
pop
and
nop
movsl
jecxz
fidivl
cld
mov
ja
or
mov
fsubrp
mov
in
outsl
aaa
scas
stos
aas
cmpsb
jle
fmuls
sub
adc
cmp
jecxz
pop
das
mov
clc
in
adc
xlat
bound
sbb
jae
and
fwait
xor
ror
shlb
xchg
arpl
dec
cmpsb
int
iret
xchg
mov
mov
inc
push
repnz
ja
test
movsl
mov
cwtl
inc
dec
out
xor
sub
sub
imul
out
out
loopne
jp
sbb
cmp
add
mov
mov
mov
js
lret
mov
jg
jb
sub
pop
test
jg
enter
jnp
imul
pop
dec
fidivrl
pusha
xor
or
out
sbb
xchg
push
cmove
fiaddl
or
out
push
mov
insb
adc
pop
cmp
lahf
ret
dec
in
test
cmp
nop
jb
or
sub
xchg
or
jns
je
mov
out
xchg
or
push
or
mov
mov
test
jp
mov
xchg
mulb
in
cmp
sbb
fwait
dec
je
cmp
repz
shll
leave
sahf
fcmovb
imul
mov
test
test
pop
sub
gs
xchg
jg
mov
sar
xor
pop
push
imul
pop
add
add
or
mov
inc
mov
mov
mov
imull
cmp
cwtl
adc
push
push
inc
or
inc
hlt
xchg
jmp
sub
or
das
loop
add
jl
rcrb
imul
push
in
adc
gs
mov
adc
enter
loopne
dec
jmp
inc
bound
and
sub
inc
in
aad
pop
fnstsw
jecxz
enter
fs
nop
lock
add
rclb
pop
jmp
jl
sahf
into
jne
les
sbb
sub
ja
jmp
jl
rorl
mov
test
xchg
mov
mov
in
movl
mov
push
xchg
ljmp
push
fiaddl
iret
cs
and
popf
sbb
adc
push
adc
add
cmp
jo
test
dec
adc
lds
cmp
loope
shl
add
mull
inc
dec
mov
pop
mov
cli
out
shll
fadds
pop
cmpsl
and
pop
insl
mov
xor
push
xlat
add
jne
outsl
push
xchg
in
mov
dec
fwait
sbb
rcl
not
mov
stc
int3
ja
fdivl
jno
add
repnz
getsec
mov
mov
add
pop
sbb
fcompl
push
push
cwtl
dec
sbb
mov
push
push
xor
mov
push
xchg
push
inc
ret
sbb
cs
pop
dec
and
adc
jno
mov
add
inc
fnstcw
adc
xor
movsb
fucom
cmp
aam
stc
fadd
add
or
push
imul
jno
adc
sahf
pushf
cmp
das
xor
and
arpl
out
fbstp
cmpsl
or
sbb
fldenv
pushf
addl
test
dec
xchg
pop
leave
ret
or
ret
mov
dec
repz
shrl
cli
push
lods
xchg
cwtl
xor
push
rcr
pop
out
jo
stos
int
jg
pop
call
add
or
xchg
pop
cmpsb
in
ret
addl
jp
push
xor
out
xor
push
sub
xor
orl
arpl
mov
pushf
adc
inc
mov
mov
insl
out
leave
dec
adc
shl
jbe
mov
pop
pushf
adc
push
test
dec
sbb
mov
lahf
add
shlb
scas
in
clc
repz
jp
test
lea
into
push
jecxz
pop
inc
loop
pop
popf
stos
ror
loopne
aaa
icebp
sub
jmp
out
add
daa
cmp
sub
or
push
jp
mov
pop
jl
dec
add
mov
sub
stos
ljmp
insl
xor
iret
xchg
add
addr16
dec
and
xchg
add
lods
or
mov
mov
fldenv
fstl
rcrl
or
fs
dec
scas
xchg
stc
stos
in
xchg
inc
jne
enter
jmp
in
pop
dec
xor
xor
xor
pop
pop
pop
je
sti
gs
sub
popa
push
push
mov
aad
dec
out
lcall
dec
push
push
imul
outsl
mov
pop
lret
inc
or
push
pop
mov
mov
xchg
ljmp
adc
jge
dec
and
xchg
shlb
and
xor
enter
jo
mov
mov
sub
lods
fnstsw
sub
fisubl
xchg
stc
xchg
jp
pop
pop
inc
cltd
xchg
sar
jb
ret
and
sbb
jne
jnp,pn
cltd
push
add
add
popl
arpl
movsl
inc
sub
nop
cld
add
fdivrl
stc
popf
faddl
add
push
out
cmp
ljmp
int
mov
xor
mov
add
add
cmp
pop
sub
dec
arpl
call
popa
iret
scas
jp
sub
ficoml
xor
test
je
and
repz
mov
aad
shll
or
sbb
inc
subl
aas
pop
fucomip
mov
push
es
sahf
cmp
popl
inc
js
adc
cmp
in
rol
xchg
jns
loop
test
rolb
or
push
std
dec
sahf
inc
stc
dec
push
mov
dec
and
jl
or
push
push
lods
pusha
adc
jbe
push
cld
jno
jae
add
sbb
daa
test
xchg
fnstenv
pop
lds
push
ljmp
dec
rclb
jne
aam
stos
mov
out
push
mov
ret
push
fs
fisttpl
test
mov
je
sub
inc
lods
sarl
push
add
cmc
cli
cmp
out
xor
jge,pn
xchg
sti
inc
inc
addr16
test
outsb
sarb
ljmp
inc
mov
lcall
daa
adc
repnz
adc
aam
xor
aas
cltd
sti
mov
pop
mov
fldl
leave
loope
jo
cmp
arpl
loop
repnz
in
inc
sbb
xchg
jecxz
mov
rclb
das
cmp
nop
cs
lea
jno
cltd
jecxz
push
sbb
icebp
repnz
sub
cmpsl
pop
aaa
add
lds
jl
cld
pusha
push
add
ljmp
and
aam
or
stos
mov
cmp
mov
dec
inc
mov
sbb
imul
pusha
testl
jecxz
inc
or
xor
in
iret
push
icebp
cmp
push
int
clc
mov
sub
repz
dec
xlat
lret
fldl
icebp
loop
mov
pop
pop
add
fsubrp
xchg
dec
push
mov
lret
or
cmp
mov
xlat
fdivs
mov
dec
imul
insb
mov
sub
adc
xchg
adc
add
adc
sti
mov
jl
sbb
dec
in
mov
adc
cwtl
xor
test
add
pop
int3
aad
test
xchg
jge
aas
push
dec
cmpsl
mov
mov
sti
xchg
cmp
and
xlat
mov
mov
arpl
pop
popf
fmulp
icebp
pop
xor
fsub
rcrb
and
sub
push
cmp
into
test
push
xor
jmp
xchg
clc
inc
jns
jge
mov
hlt
repz
sahf
fwait
dec
lahf
push
std
and
lds
or
cmp
xchg
jg
and
mov
js
roll
rcr
mov
mov
adc
inc
test
pop
sarb
subb
outsb
dec
and
je
test
inc
sub
insl
les
pop
mov
out
push
cli
add
mov
jl
sbb
dec
cltd
es
mov
movsb
push
retw
jmp
sti
and
push
sbb
mov
out
and
cmp
xor
xchg
test
and
push
in
mov
add
mov
int3
sbb
lea
adc
aad
ret
lret
rclb
shll
data16
mov
dec
popa
mov
mov
ss
xor
lods
aam
xor
sub
popf
sbb
or
shlb
in
cmp
push
lcall
ret
dec
inc
neg
mov
mov
mov
adc
sti
nop
pop
sub
xchg
in
xchg
subb
sbbl
xchg
and
insl
cmp
incl
gs
jg
fistps
bound
dec
aas
lods
dec
add
jmp
in
pop
hlt
fnstsw
leave
sub
jmp
rorb
popa
cli
sbb
clc
adc
inc
jbe
mov
or
test
add
fldl2t
mov
mov
cmp
pop
add
out
fldl2t
xor
xchg
push
jne
add
cmp
sub
inc
dec
das
jl
cmc
movsl
mov
jle
mov
push
nop
aad
or
movl
or
xor
hlt
mov
stos
in
xlat
flds
sub
sub
iret
gs
push
mov
sub
inc
jbe
xchg
push
lods
sarb
cmp
cmp
addl
dec
out
in
ja
pop
sahf
das
cwtl
cmp
cmp
lods
enter
movsl
inc
inc
mov
ja
inc
aaa
pop
cmc
inc
pop
mov
and
or
sub
aam
pop
pushf
xchg
add
dec
inc
popf
rcrl
insl
inc
dec
cld
movsb
mov
push
cmpsb
add
xchg
and
cs
jno
sbb
and
jb
fwait
leave
add
xchg
imul
mov
aad
xchg
jbe
cmp
test
mov
imul
adc
leave
loopne
mov
mov
js
xchg
jae
lahf
mov
sub
adc
fnsave
stos
push
pop
mov
insb
or
adc
ficoms
cmp
out
lcall
test
pusha
xor
cmp
rcrb
std
addr16
pop
lds
and
and
cmp
pop
and
push
add
lea
paddsb
addr16
adc
js
jno
cltd
ret
jbe
or
fdivl
xchg
push
push
repz
out
fcom
pop
jp
jae
inc
fists
fwait
cmc
and
fistps
ret
mov
mov
mov
push
mov
push
mov
sbb
mov
cld
popf
lret
mov
test
pop
jmp
daa
mov
add
push
andb
xchg
jne
sub
xor
add
imul
add
fnstenv
and
jle
mov
cmp
jns
andb
das
ja
push
jecxz
mov
fs
push
xor
mov
ljmp
in
add
adc
pop
adc
gs
in
push
mov
fldl
push
aas
aam
sbb
cmc
dec
lea
shlb
enter
aad
inc
jb
imull
jp
and
adc
push
mov
mov
ficoms
sbb
stos
pop
push
je
xor
mov
push
xor
fidivrl
xor
mov
sub
mov
jae
mov
stc
sti
into
push
cmc
hlt
lret
mov
aas
sbb
mov
add
mov
std
rcll
push
mov
adc
aas
fwait
scas
mov
adc
mov
in
mov
inc
and
popa
mov
mov
cld
or
test
scas
adc
in
scas
enter
js
pcmpgtd
mov
out
or
cmp
cmp
divl
test
push
xor
sbb
cli
xchg
xchg
jmp
jp
data16
pop
dec
push
mov
mov
and
xor
dec
push
js
adc
idivl
hlt
push
mov
mov
or
sbb
dec
insl
inc
scas
jmp
outsb
xlat
add
in
or
aad
push
jno
lret
ja
and
lea
clc
xor
pop
inc
mov
mov
cmpl
pop
or
iret
mov
hlt
push
push
sub
or
sahf
adc
divl
xor
adc
fsubs
xchg
mov
in
pop
and
fiaddl
fildll
mov
inc
outsb
push
xor
popf
in
jecxz
xor
pusha
inc
dec
cli
fdivl
sub
ds
leave
pop
imul
and
xchg
jo
push
add
loope
cmp
push
testb
inc
push
test
mov
fwait
mov
add
jo
adc
mov
vpsllq
pop
not
jmp
arpl
cmp
sahf
push
jge
xlat
arpl
gs
aam
jp
jne
jb
adc
rol
test
je
scas
movsb
mov
mov
jae
out
or
iret
cmpsl
sbb
data16
fnsave
les
cmp
mov
mov
jnp
lock
fnsave
lock
lods
loop
popa
lret
ret
rcr
enter
sub
sbb
std
inc
dec
cmp
or
add
or
mov
mov
mov
pop
cmpl
int3
mov
icebp
jp
cli
int3
hlt
adc
mov
xchg
cmp
outsb
and
aad
movsl
popa
cmp
pop
mov
iret
lret
jmp
cmp
loope
mov
jp
lret
cltd
es
push
test
cmp
or
or
nop
int3
cmp
cmpsl
inc
insb
dec
xor
pop
lret
repnz
dec
nop
sbb
adc
loope
push
jecxz
sub
bound
sbbl
daa
mov
sub
icebp
cmp
jg
lea
dec
lcall
loope
mov
in
dec
mov
pop
cmp
pushf
int3
std
fidivrs
mov
outsl
jecxz
push
mov
inc
push
xor
adc
adc
fcomps
mov
lcall
dec
imul
iret
xor
mov
add
das
mov
pop
pop
push
ljmp
das
mov
aam
fisttpl
cmp
jno
mov
jl
and
inc
sbb
mov
and
mov
sub
cmp
jp
fiadds
pusha
pusha
dec
je
mov
jg
cwtl
adc
es
pop
out
idiv
shl
add
mov
push
adc
or
push
xchg
in
div
stc
scas
outsb
into
mov
shr
push
push
ret
xchg
fcmovu
xor
sub
mov
fwait
lock
sub
mov
sub
push
popf
mov
mov
add
inc
cmpsb
cmp
sub
mov
push
fstps
jo
mov
cld
repnz
and
mov
in
push
arpl
cmp
xchg
adcl
mov
sub
cld
stos
push
mov
dec
cmp
dec
pop
divl
jne
lahf
push
jp
cmc
adc
push
push
jbe
mov
popf
cmpsb
ret
cmp
hlt
mov
sub
jle
jno
mov
test
mov
pop
gs
inc
inc
lods
sbb
cmp
xchg
mov
fiadds
icebp
pop
addr16
adc
pop
into
fistl
mov
xor
inc
mov
jg
cmp
or
int3
mov
imul
lret
clc
pop
enter
das
xchg
xchg
mov
and
sub
loopew
push
xorl
rcrb
pop
dec
and
jno
lods
jge
call
adc
fwait
call
popf
inc
mov
mov
jmp
pop
mov
lock
imul
mov
pop
inc
out
jno
mov
xchg
push
adc
inc
ljmp
pop
ret
jg
cmp
or
mov
gs
repnz
enter
outsl
es
daa
out
loopne
int
inc
xlat
insl
push
jno
cmp
or
dec
push
ljmp
pusha
fildll
mov
jle
push
add
add
dec
fwait
mov
jle
sar
repz
aad
movsl
push
xchg
jl
std
cld
or
bound
pop
push
stos
das
or
adc
mov
fsubrl
cmp
xchg
jle
in
dec
adc
jae
mov
jbe
rorb
cli
push
add
xor
mov
and
mov
jnp
aas
stc
sar
or
pop
jmp
sbb
xor
call
jg
movsb
out
inc
sbb
subl
dec
xchg
stos
and
pop
in
jae
xchg
sbb
mov
rclb
out
lea
add
shll
xchg
mov
xchg
out
ret
sbb
or
cmp
dec
sbb
adc
mov
outsl
add
push
jg
fdivrl
shl
lea
ds
jns
je
xchg
xchg
and
inc
mov
inc
idivb
vpsubq
hlt
fwait
addr16
mov
jmp
mov
pop
jb
lcall
add
sub
inc
mov
movb
fdivl
jnp
xor
lds
arpl
jecxz
and
test
test
mov
lret
out
adc
int3
mov
push
xchg
nop
sbb
adc
mov
sub
call
push
sahf
jmp
mov
lods
xchg
mov
mov
fwait
sbbl
inc
les
dec
dec
inc
aam
cmpl
dec
pop
ds
sahf
jbe
xchg
js
mov
in
ficompl
movsb
pop
pop
jnp
cmp
mov
fdivrs
sbb
push
loopne
dec
mov
nop
mov
xor
jge
push
fldenv
push
pop
sbb
stos
mov
not
int3
mov
sub
rcrb
add
sub
daa
repnz
cmp
testl
in
movsl
mov
lcall
mov
out
in
adc
jbe
sbb
xlat
or
sub
jecxz
mov
xchg
and
ss
adc
mov
xchg
inc
mov
jle
cltd
fsubl
cmp
mov
adc
addb
cs
fcompl
gs
sti
jno
es
xor
push
or
outsb
sahf
dec
ss
xor
mov
test
ds
sbb
mov
sbb
xorl
mov
mov
lahf
xchg
call
les
arpl
add
push
lock
out
lret
push
or
dec
jl
add
popf
push
out
or
shll
stc
test
xor
mov
fadds
pop
xor
pop
daa
out
in
out
push
dec
test
movsb
outsl
adc
dec
test
push
xchg
mov
mov
ficomps
pop
xor
icebp
ja
inc
xchg
rorb
int3
loope
je
sahf
test
sahf
ret
jae
pop
adc
addr16
mov
dec
test
aaa
jbe
fwait
or
cmp
mov
imul
daa
pushf
pop
ret
outsl
fsts
adc
rcr
xor
aam
fldt
test
xchg
push
sub
or
insl
mov
and
dec
pop
iret
popf
pop
insb
movsb
push
jp
xor
push
or
push
pop
jmp
lretw
cwtl
addr16
mov
mov
stos
jp
sar
cmovae
or
xor
xchg
in
or
push
ds
inc
lret
cmc
push
pop
dec
push
dec
sub
jg
pop
sarb
cmp
addr16
sbb
adc
js
mov
int
mov
out
sbbl
je
loope
int
or
insb
or
icebp
cmp
test
cs
mov
test
push
nop
push
dec
loope
je
loopne
gs
dec
cmp
dec
fdivs
mov
xchg
iret
lcall
add
aad
push
inc
iret
xor
pushfw
add
pop
pop
scas
xor
sub
popf
add
dec
rclb
fldenv
aas
adc
fcmovnbe
int
pop
cmp
je
and
enter
sahf
imul
dec
add
insl
mov
loop
stos
out
push
lret
add
mov
js
aam
ds
cmp
fisubs
push
jno
sbb
sti
xlat
addb
xor
sbb
xchg
cmpl
pop
inc
push
inc
lret
ja
mov
imul
push
xor
sub
lods
rclb
add
out
jbe
icebp
lods
xor
fstpt
or
test
jl
dec
jns
jns
mov
xchg
pop
pop
int
mov
mov
jb
adc
push
push
pop
and
movsb
sahf
mov
push
inc
sbb
mov
fadds
loopne
scas
push
call
mov
insl
mov
pop
mov
add
mov
sub
xchg
repz
notl
push
in
leave
adc
sbb
mov
scas
lcall
cmpsl
shll
pop
mov
xchg
jbe
frstor
cmovp
lret
push
inc
stos
fcomps
xlat
jge
outsb
push
repnz
xchg
lret
sub
icebp
pop
lret
loop
dec
in
test
stos
int3
cmp
int3
loope
inc
cmp
mov
xchg
add
mov
xchg
or
ret
pop
mov
fldl
data16
mov
xlat
leave
insb
das
add
inc
dec
idivl
mov
xchg
mov
sti
adc
clc
lret
iret
lret
je
mov
int
cmc
mov
adc
pminub
scas
repz
pop
mov
hlt
jne
add
mov
ror
mov
scas
daa
imull
clc
xchg
into
dec
lds
xchg
mov
in
sub
jg
xchg
leave
cmp
push
imul
xchg
imul
jae
in
bound
fcompl
cmp
test
and
add
hlt
and
pop
sub
xchg
add
fistpl
stc
pop
sub
sub
loope
pop
cmpsl
jmp
mov
jae
push
jge
xlat
adc
loopne
pop
xlat
sub
pop
sbb
sub
xchg
jnp
test
ret
pop
fst
add
loop
mov
add
lahf
nop
fsubrs
ljmp
pop
xchg
mov
in
cld
sahf
sbb
fstl
scas
iret
outsb
and
aam
lea
jns
repz
mov
cltd
test
sarl
dec
cwtl
inc
insl
mov
loopne
adc
hlt
lret
add
scas
add
xlat
sbb
pop
sub
jmp
insb
push
xchg
hlt
daa
cmp
add
cmp
insb
jle
mov
fcmove
in
in
leave
lcall
inc
mov
push
sub
mov
mov
pop
shrl
or
pop
push
inc
cmp
inc
aam
cs
sbb
movl
add
sbb
sub
lea
cld
into
mov
push
jnp
mov
cmp
stc
inc
int
movl
mov
mov
sbb
je
cmpsl
jbe
push
xchg
pop
addr16
mov
lea
insb
mov
arpl
lds
push
ret
ret
sbb
dec
out
lock
cli
pushf
dec
js
popf
inc
pop
inc
or
adc
push
fsubs
out
sub
fdivrs
pop
jnp
ret
aas
enter
or
inc
jmp
pop
and
dec
mov
mulb
sbbb
mov
aas
dec
aad
or
test
inc
and
insl
hlt
adc
mov
scas
lods
in
push
je
and
push
ss
xchg
test
pop
mull
push
out
mov
mov
and
test
pop
mov
sbb
mov
cltd
sbb
cmpsl
add
outsb
push
dec
push
lods
loope
out
out
movsb
test
cltd
rep
and
cltd
outsb
sbb
ja
lret
imul
jg
xor
fwait
xchg
pop
xchg
add
cmpsl
inc
pusha
int3
jb
cmp
loope
movsl
in
xchg
xlat
or
push
test
mov
ss
inc
jae
and
shl
mov
movsb
add
lods
mov
enter
xor
pushf
clc
fisttpl
sbb
hlt
or
dec
imul
cmp
scas
pop
testl
jnp
xchg
aas
shll
int
pop
fs
cmp
pop
lods
outsl
popf
int
xor
xchg
jmp
in
push
mov
xlat
adc
sbb
jge
pop
loop
lock
pop
cltd
push
imul
jmp
pushl
inc
mov
leave
cmp
xchg
mov
fimull
mov
sarb
js
mov
mov
sub
je
mov
cmp
arpl
mov
mov
je
pusha
mul
jecxz
movsl
mov
pushf
inc
punpcklwd
dec
es
pop
inc
adc
ss
je
jge
std
dec
mov
inc
sub
mov
data16
push
cmp
pop
cltd
js
scas
inc
xchg
inc
stos
popf
dec
mov
mov
xchg
jl
mov
jo
cwtl
push
or
nop
sti
sarl
cmp
stc
mov
testb
fsubrp
mov
das
repnz
and
mov
repnz
iret
call
test
jg
xchg
mov
ljmp
push
jp
cmp
jecxz
mov
rcl
pop
lahf
lea
sti
and
jmp
aad
mov
jae
xlat
jge
rol
popf
pop
jge
cmovnp
das
mov
into
push
lcall
sbb
mov
in
movsb
sti
push
sub
jne
scas
and
inc
mov
lods
push
repz
fnstsw
ljmp
in
xchg
or
in
add
pop
and
sbb
push
sarl
pop
clc
loope
and
push
clc
jo
shrl
fcompl
fiaddl
mov
gs
add
or
fs
add
in
inc
shlb
push
lahf
mov
fwait
addb
es
push
jns
adc
inc
pop
adc
out
dec
jmp
and
mov
jp
pop
sub
dec
in
cmp
aas
jmp
jae
fwait
adc
out
lea
popa
push
cmp
dec
stc
fiaddl
pop
adc
dec
push
adc
call
adcl
js
adc
fs
xchg
mov
inc
stos
mov
pusha
jl
mov
xor
and
adc
mov
rcr
fidivrs
and
mov
stos
jge
aas
ficomps
push
mov
xchg
push
xlat
jo
lret
adc
pop
mov
jb
vmread
adc
and
pop
mov
movl
stos
jnp
cmc
sub
add
notl
xchg
jne
sbb
fldcw
call
dec
sub
mov
adc
ljmp
dec
rorl
ret
lret
pop
jnp
pop
and
jmp
jbe
sub
adc
hlt
mov
jle
and
dec
add
stos
mov
mov
sub
mov
sti
ficomps
pop
push
jmp
sub
pop
push
fldt
jp
cmp
adc
roll
push
dec
sbb
roll
add
mov
mov
add
stos
dec
and
add
iret
xor
xor
into
cmp
addr16
sarl
mov
push
pushf
inc
jns
lahf
testl
dec
bound
cmpsb
mov
sub
shlb
icebp
lcall
pop
cmp
xor
inc
nop
and
and
jae
sub
out
push
stc
pop
pop
leave
jne,pt
or
pop
push
push
addl
adc
pushl
mov
in
pusha
js
pop
mov
xchg
xor
ss
dec
bound
out
jo
mov
lock
jno
sti
pop
inc
or
popf
inc
lahf
mov
icebp
cmp
stos
rcrl
and
clc
push
test
and
cld
std
shlb
mov
shlb
outsb
or
xor
pop
push
int
jmp
xchg
jmp
cwtl
inc
lock
stc
scas
adc
inc
mov
sub
pop
pop
xchg
adc
into
cmpsb
pusha
cwtl
shll
shrb
push
jge
xchg
fnstcw
or
dec
push
scas
push
js
and
addr16
in
inc
stos
gs
cwtl
pusha
sbb
dec
and
sub
pop
sub
pop
and
bound
sbb
mov
aaa
adc
call
lods
ret
lock
mov
xor
xchg
push
lret
cmp
xchg
cmpl
cmp
mov
adc
add
js
or
jo
test
popf
inc
rorb
lcall
insl
mov
sarb
cmp
jnp
lea
mov
lcall
sbb
mov
push
stc
sub
sbbb
repz
dec
sub
lcall
arpl
cmp
sub
fs
clc
xor
xchg
ljmp
js
aaa
into
daa
icebp
nop
and
rcrl
scas
sti
into
or
inc
pop
rcl
push
outsl
adc
add
scas
xlat
mov
movb
mov
mov
nop
sub
cmp
fwait
dec
rcr
cmc
popa
in
rcrl
pop
jo
jne
les
cmpsb
jo
popf
pop
and
cmpb
mov
cs
lea
shrb
rcrb
jnp
mov
into
es
sbb
adc
push
sbb
or
cmp
cmp
rorb
popf
xchg
push
mov
sub
inc
out
fadds
stos
jne
jmp
repz
lods
xchg
aam
ret
mov
aad
and
icebp
push
xlat
rol
dec
pop
hlt
mov
movsl
rcrl
notb
call
adc
sti
subb
clc
mov
sub
out
pop
shlb
push
add
push
int3
sbb
ret
mov
mov
stos
sbbb
movsb
push
std
jecxz
mov
jle
xchg
mov
adc
push
and
jp
les
into
cld
pop
push
fcompl
sti
adc
mov
or
leave
mov
pop
pop
mov
bound
mov
std
adc
les
fistpll
fsts
pop
int
ljmp
xchg
dec
leave
cmpb
mov
pop
shlb
cld
int
pop
xlat
mov
mov
lahf
negl
out
xchg
int
test
neg
into
inc
movsl
mov
movsb
cs
add
pop
hlt
xchg
dec
xor
or
push
jo
popf
push
sub
out
xor
push
or
pop
cmp
and
fbld
test
inc
inc
in
out
sbb
insb
test
mov
stos
xchg
in
lock
mov
cmp
and
out
sar
gs
or
add
adcb
cmc
inc
imul
and
dec
lods
add
test
mov
stos
cmp
or
jmp
push
out
das
push
imul
push
loop
or
cwtl
flds
and
ljmp
aam
push
out
in
sub
icebp
data16
jo
loopne
mov
jnp
repz
movsl
out
jmp
cmpsl
aad
xor
cwtl
mov
stos
jge
push
orl
cmp
push
xorb
popa
add
jp
jg
mov
fs
shlb
loope
cmpsb
cld
mov
arpl
sbb
xchg
lods
call
aas
jp
adc
cmp
push
push
mov
adc
ds
xchg
cmpsl
sbb
inc
xchg
cwtl
pop
enter
mov
into
jmp
and
outsl
mov
and
mov
movsl
pushf
mov
mov
mov
rcrl
sub
shlb
sbb
shll
int
sahf
mov
and
sub
loop
je
mov
hlt
jp
push
or
lahf
cld
decl
pop
add
push
sbb
add
int
subb
outsl
jo
pop
sbb
xorb
xor
dec
ret
fisubs
jl
or
into
jo
dec
outsl
xor
adc
test
or
adc
jae
mov
daa
cwtl
movntps
cmp
push
sbb
ret
int3
pop
js
cmp
xor
mov
mov
scas
jge
cmp
ret
jns
jae
mov
mov
sub
mov
mov
inc
or
ds
mov
xchg
lea
inc
push
and
loop
out
icebp
dec
pop
sub
popa
int
mov
je
daa
xor
mov
cwtl
sub
in
js
in
ds
mov
insb
das
cmp
mov
jbe
dec
hlt
adc
sbb
pop
fbstp
cld
mov
add
dec
push
xor
mov
iret
inc
mov
pusha
cmp
and
cmpsl
pop
adc
sub
sti
mov
mov
out
sub
sahf
sbb
cmp
leave
jbe
sbb
adc
out
outsl
sub
jmp
xchg
imul
xor
sbb
cmp
decl
in
iret
dec
jne
lret
sbb
imul
dec
jae
jg
or
loope
mov
sub
insb
loope
lcall
lret
sti
pop
orb
iret
std
cmp
lock
jae
fsubs
push
ret
jecxz
cmp
shlb
xchg
clc
popa
pushf
mov
aam
and
dec
dec
bound
insb
push
cmp
and
lds
mov
pusha
fsubr
adc
in
pop
nop
mov
jae
xchg
out
iret
adc
out
xchg
insb
bound
jne
ljmp
xor
jmp
xlat
sbb
mov
sbb
test
cmp
lahf
cmp
sarl
mov
inc
cmpsb
shlb
xchg
sbbl
dec
mov
aaa
and
ret
stc
rcrb
dec
jp
rorl
sbb
inc
push
in
sbb
mov
cmc
popf
jnp
hlt
je
jmp
or
and
inc
cli
sbb
adc
xchg
insl
xchg
std
stos
sub
sub
loope
and
sahf
jecxz
mov
ljmp
sbb
sub
cmpsb
inc
pop
out
xchg
mov
mov
lahf
stc
je,pn
fwait
out
sbb
push
pop
lea
and
mov
push
cmpsb
ds
xor
clc
les
cwtl
into
dec
fcompl
or
test
mov
mov
mov
testb
add
mov
pop
test
add
push
sub
mov
popa
push
pop
push
shlb
or
push
pushl
fmulp
data16
fisubl
sti
into
es
xor
cmpsb
stc
fmull
data16
pop
loope
cmp
adc
pop
mov
xchg
xchg
iret
mov
sub
adc
cmp
mov
popw
dec
or
xchg
fisubrs
xchg
pop
out
mov
sbbl
fldenv
inc
xor
jg
dec
or
push
outsl
jne
inc
insl
sti
sbb
cltd
shrb
clc
imul
mov
pop
add
ret
xchg
pop
cmpl
fsubrs
add
jp
dec
and
addr16
movsl
mov
push
ljmp
lea
popf
inc
and
adc
inc
sub
repnz
mov
pop
inc
es
mov
hlt
cwtl
hlt
fcoms
scas
xchg
fs
dec
fisttpl
push
in
lahf
hlt
jg
lret
mov
out
test
push
add
ss
test
adc
add
mov
cs
cmp
inc
mov
shll
dec
fnsave
xchg
ds
call
scas
sarb
xorl
jmp
or
test
hlt
xor
imul
xorb
fsts
mov
and
xchg
mov
loope
mov
push
andb
mov
and
das
xchg
pop
sub
or
repnz
pop
outsl
mov
arpl
and
test
loope
inc
cli
adcl
cmp
xchg
stos
push
xchg
dec
sbb
shlb
pop
and
popa
enter
mov
jecxz
cli
stos
and
test
xchg
test
pusha
and
cltd
cli
mov
jmp
xchg
sahf
cmp
in
test
mov
pusha
shr
cltd
out
push
fisubrl
hlt
inc
xchg
sub
je
out
mov
out
lods
xchg
sahf
lret
and
jmp
hlt
aaa
and
sbb
xlat
push
inc
test
outsl
sarb
and
lcall
jo
mov
adc
out
arpl
fcmove
aaa
loopne
arpl
addr16
shrl
inc
loopne
fsubrl
inc
insl
enter
mov
loopne
jo,pn
addr16
jno
insl
mov
insl
movsb
pushf
jae
test
js
or
lea
test
fcmovnu
mov
pop
scas
fidivs
jg
rcll
adc
mov
ret
mov
xchg
fdivrs
inc
xchg
add
jns
cmpsb
cmpsl
mov
repz
stos
xor
pop
push
cltd
ja
rcrb
loop
xor
xchg
sbb
mov
nop
in
sbb
dec
ret
dec
pusha
ljmp
inc
pop
out
xor
sub
in
out
xor
jle
mov
mov
or
push
xchg
leave
xor
or
xlat
xchg
cmp
add
cmpsl
test
notb
sbb
les
fisttps
out
mov
and
stc
cltd
loope
xchg
add
inc
dec
add
in
push
scas
or
xchg
xor
jmp
cs
rclb
push
xchg
and
sahf
xor
sub
sub
or
adc
iret
dec
movsb
out
dec
jo
stos
loope
lret
xor
jmp
or
lods
cmp
and
test
imul
xchg
shlb
test
dec
pop
xchg
fwait
cli
ja
sub
into
lahf
icebp
xor
into
inc
mov
mov
mov
sbb
dec
dec
fst
notl
sub
xor
daa
pusha
fistl
rolb
sub
push
addr16
data16
outsb
fs
sahf
jne
rorb
popf
jle
cmp
jle
add
xor
sbb
and
test
push
adc
mov
iret
cmpb
hlt
and
sub
or
jae
push
jno
cmp
mov
push
clc
loop
push
xchg
cmpsl
inc
cmp
rolb
shl
mov
cld
sub
cltd
xchg
add
fdivs
push
test
outsl
xor
shll
push
pop
repnz
out
sbb
adc
dec
lock
insb
mov
inc
nop
daa
adc
inc
adc
sub
repnz
mov
sub
scas
cmp
and
mov
push
lcall
mov
jne
add
pushl
into
cld
xchg
sub
popa
gs
ljmp
incb
ljmp
outsl
pop
lods
aad
sbb
dec
dec
in
or
iret
mov
pop
mov
pop
rcrl
cmp
adc
fs
push
outsb
mov
jge
dec
das
stos
add
mov
fdivrl
hlt
xchg
hlt
scas
test
mov
sahf
nop
mov
std
or
iret
aad
push
push
es
push
jle
sbb
pushl
or
dec
dec
mov
icebp
fsubrs
xor
out
mov
fisubrl
push
cli
mov
scas
adc
or
sahf
sub
pop
pop
lret
and
mov
notl
adc
add
sbb
popf
popf
iret
and
xchg
arpl
comiss
add
xor
loope
jg
sub
xchg
js
pop
pop
pushf
inc
mov
loope
push
push
cs
cmp
subl
aaa
xchg
lock
data16
test
fucomip
mul
xchg
cmp
mov
repnz
mov
aas
jo
pushf
mov
or
loop
jmp
fwait
dec
mov
sbb
lcall
pop
cld
rcrb
test
clc
loope
mov
jecxz
jbe
sbb
sub
pop
jb
js
pop
mov
pop
sti
mov
inc
divb
test
sbb
adc
jbe
cld
dec
sbb
iret
xchg
mov
aaa
lods
imulb
into
sbb
mov
mov
test
push
xor
cmp
add
mov
repz
inc
ficomps
sub
nop
loopne
push
jmp
mov
sti
movsl
das
sbb
sti
push
sbb
or
push
jo
push
loop
add
adc
xor
aas
cld
inc
jbe
test
mov
dec
out
xchg
push
int3
dec
cmp
mov
std
xor
fcomi
ret
pop
inc
xor
push
fwait
lds
stos
fnstcw
xchg
lds
dec
dec
jp
and
add
inc
addr16
ds
sbb
stc
sub
aas
pop
dec
out
fcmovu
cmp
pop
sub
pop
orl
cmp
movsb
fisubl
inc
mov
cs
jbe
scas
sbb
mov
insl
aas
inc
adcl
mov
xor
lds
inc
lret
cmp
mov
pushf
call
inc
clc
mov
xchg
subl
movsl
dec
stos
push
mov
and
ss
push
cmp
mov
xchg
sub
add
sbb
lods
out
mov
andl
adc
xor
sub
in
icebp
dec
inc
stos
push
pop
cli
or
xor
testl
xchg
notb
mov
mov
push
or
inc
mov
xorb
fsubs
xchg
ret
xorb
xchg
inc
jmp
pop
ds
xchg
push
test
popf
shll
roll
xchg
mov
and
jg
and
mov
xor
inc
ja
in
mov
out
sub
cmp
xor
std
lret
idiv
mov
or
jb
cmpsl
cs
add
out
aam
cmp
shlb
pop
lahf
inc
pop
popa
mov
push
call
sti
in
push
or
xrelease
mov
ljmp
negb
jmp
xorb
xchg
iret
rcl
sub
jg
jl
fdivl
pop
and
lahf
nop
loopne
xor
push
lcall
je
clc
aas
sub
or
inc
push
mov
push
mov
fisubrl
inc
jmp
mov
cwtl
cmp
lock
loop
mov
fbstp
push
je
xlat
add
sbb
jns
mov
popf
jo
mov
inc
xor
mov
std
aaa
sub
pop
push
lcall
pop
fadd
insb
jge
ja
sub
pop
imul
and
cmp
or
mov
push
dec
sti
mov
insl
je
les
ss
test
clc
je
mov
add
push
jp
jp
and
push
imul
or
ret
adc
test
out
pop
pop
cli
lret
mov
adc
pop
xchg
mov
jmp
fcmove
pop
inc
shll
fldl
sbb
or
pusha
jbe
pop
jbe
and
jns
outsb
sub
imulb
mov
lds
pop
xchg
sbb
lahf
xor
pop
jb
pop
xchg
fistl
xchg
in
pop
push
lea
ret
stos
jg
lds
rcll
xlat
out
bswap
sub
lret
std
sub
or
cmp
push
xor
jne
divb
or
push
cmp
add
jl
dec
mov
fcompl
mov
add
leave
jbe
mov
push
pop
loope
dec
push
ret
jmp
out
scas
cmpsl
adc
xor
pushf
out
subl
pop
cmpsl
pop
adc
es
loopne
add
push
xor
inc
scas
jns
popa
outsl
xchg
mov
mov
movsl
mov
xchg
pop
push
mov
out
jb
test
xor
mov
lahf
sbb
lock
kmovw
das
pop
gs
pop
aam
pop
out
sbb
imul
jne
jne
ds
jecxz
sub
push
pop
push
mov
cmc
sub
pop
push
add
mov
jbe
std
sbb
pop
or
jbe
and
dec
std
daa
push
push
cmpb
adcl
or
lcall
and
icebp
add
ss
jmp
in
dec
jg
lods
sbb
push
xchg
call
xchg
inc
icebp
ret
loope
dec
out
in
cmp
divb
pop
lret
cli
int
push
adc
cmp
and
daa
cwtl
pushf
push
mov
addr16
xor
mov
pop
rcpps
xlat
and
add
popa
and
arpl
inc
jmp
arpl
cmpsl
sbb
add
inc
mov
adc
cmc
adc
mov
xchg
in
imul
fisubrs
xchg
inc
push
sub
adc
lcall
clc
cli
mov
jl
and
sub
call
into
aad
adc
cmp
sub
dec
insb
std
jmp
fnsave
sbb
cltd
pop
adc
rcrl
or
push
mov
mov
sub
pop
add
ss
add
test
add
lcall
or
movsl
pop
in
mov
xchg
rcr
adc
push
pop
add
jnp
clc
jb
push
jo
bt
mov
pop
insb
or
or
mov
imul
cmp
jecxz
jb
aam
cmp
outsl
pushf
imul
cmp
lods
sbb
pop
fmul
dec
xor
inc
pushf
stos
fdivrl
xchg
inc
jnp
lea
push
xchg
jne
enter
pusha
jmp
pop
sbb
jg
fmuls
sbb
clc
jge
daa
dec
mov
cmp
xchg
cmp
and
call
fisttps
mov
adc
sbb
dec
sub
fisttps
push
fdivl
fdivrl
mov
jle
pop
or
mov
cs
in
int3
outsl
movsb
sti
jmp
dec
lcall
fsts
sub
add
addr16
cmp
mov
xchg
outsl
outsl
pop
xchg
xchg
inc
mov
pop
imul
aad
aam
cmp
lods
sub
les
fidivl
mov
xchg
les
push
aaa
dec
mov
xlat
cmpl
imul
repnz
xchg
imul
mov
repnz
out
mov
adc
fsub
cmpsb
add
cmovs
ret
jne
imul
jae
and
xor
ret
xor
sbb
fildll
lret
add
xlat
mov
cmpsb
outsb
out
adc
cwtl
rolb
pop
out
jno
sub
arpl
pusha
mov
add
int
cmp
imul
shll
fwait
arpl
or
neg
js
sub
pop
jg
mov
jae
sar
rcrl
dec
subb
mov
lcall
adc
adc
mov
mov
cmpsl
inc
rcr
mov
int
icebp
lret
rorb
xlat
enter
xor
pop
mov
dec
cmpsl
xor
popf
add
or
inc
xlat
mov
mov
arpl
push
inc
adc
sbb
ficoml
lds
test
arpl
mov
call
push
xchg
mov
push
cld
sbbb
aam
orb
cmpsl
cmpsl
adc
adc
icebp
cwtl
fwait
xor
ret
jg
repnz
aas
cmc
cli
xlat
pop
mov
jbe
sub
bound
inc
imul
stos
aad
cmp
mov
sysenter
xor
mov
ret
xchg
adc
pop
andb
lods
leave
lret
fwait
cmc
das
je
insb
shr
orb
jbe
gs
mov
std
fldl
cmpsb
jmp
lcall
popf
popf
bound
icebp
mov
push
mov
sbb
fsubl
sahf
jns,pt
out
into
pop
gs
test
loopne
mov
js
sub
fwait
pop
cmp
push
add
imul
aam
loopne
cwtl
out
dec
xchg
mov
inc
lods
add
test
dec
jge
filds
popl
pop
adc
xor
fmuls
mov
sbb
mov
xor
rcrl
ret
cld
jle
lds
into
mov
outsb
mov
sbb
bound
pop
and
and
popa
fiadds
mov
jmp
xor
mov
jge
cmp
shll
pop
test
and
out
dec
xchg
or
mov
clc
add
xchg
data16
outsl
jecxz
dec
xchg
cld
sbb
rclb
stos
lods
or
lret
jo
fidivl
outsb
int
xchg
mov
stc
jns
lahf
cmp
pusha
cld
mov
mov
xchg
or
xor
clc
push
jae
or
insb
dec
inc
jg
mov
test
andl
int3
mulb
stc
sbb
nop
into
mov
out
and
pop
adc
shrl
mov
push
xor
in
aam
xor
aam
sub
movsb
stos
mull
mov
lods
pop
test
mov
fadd
push
push
jle
fistpll
lock
std
imull
mov
add
ret
int3
dec
cmp
testb
stos
xchg
je
jns
in
pop
inc
adc
loopne
out
xchg
mov
adcl
jle
mov
fimull
ja
fsubr
mov
fcomps
pop
cmpl
inc
add
rolb
add
js
mov
aam
or
imul
pop
xchg
xor
xchg
sahf
rcll
in
and
fdivs
lods
les
dec
in
int
lods
mov
add
add
add
inc
cmp
iret
daa
adc
inc
push
adc
repz
mov
pop
fsubs
inc
stc
jp
pusha
cmp
test
mov
arpl
arpl
push
mov
nop
cwtl
aad
pop
mov
leave
and
out
gs
pop
loopne
pop
or
mov
sti
lret
gs
xchg
outsb
pop
sti
cmpsb
sbb
lods
mov
or
dec
sub
push
xchg
rcr
aas
popf
pop
or
insl
pusha
or
push
lods
in
pushf
lret
or
in
xor
in
lret
xor
rorl
aad
sub
outsb
xchg
mov
inc
ret
sbb
fmul
lea
clc
jecxz
cmp
xor
adc
mov
popf
dec
add
lock
out
into
test
mov
sti
or
xchg
lea
movsbl
mov
dec
adc
jns
and
sbb
or
ss
lods
and
push
dec
mov
cld
inc
lods
repz
lock
mov
insl
inc
dec
and
mov
fdivp
lret
sbb
in
ja
call
jns
cmp
adc
pop
mov
cltd
aam
add
xchg
leave
cmp
jl
aad
jmp
push
std
movsl
sub
stos
test
mov
pop
ret
js
push
push
ret
jmp
cld
cmp
pop
mov
and
sub
ret
pop
movsb
mov
xchg
clc
repz
adcl
mull
jge
xchg
das
in
jmp
idiv
loope
lods
fdiv
add
aad
adc
loop
stos
stc
je
cmp
cmp
inc
xchg
pop
and
push
or
int
enter
xchg
push
leave
push
insl
cs
inc
int
test
and
ret
adc
xor
and
push
fs
cmp
pop
push
or
scas
lret
mov
test
rcr
ret
dec
cs
push
dec
sub
xchg
jnp
popa
add
jecxz
push
cmp
rcll
mov
push
mov
push
dec
sub
lret
test
mov
in
mov
adc
scas
leave
sub
arpl
std
enter
lret
fimuls
jns
adc
enter
lods
mov
mov
insl
pop
adc
xchg
or
dec
imul
mov
imul
push
int
lods
or
dec
sti
jno
mov
hlt
test
push
add
add
sbb
push
leave
xor
mov
aad
sbb
mov
xor
loopne
pop
mov
xchg
sbb
push
cs
cmp
pop
adc
xorb
into
cmp
cli
add
dec
mov
lcall
cli
push
and
outsl
shrb
test
dec
test
movsl
pop
scas
and
lds
jno
cmp
or
sar
jge
sti
mov
sub
fnstsw
pop
popa
clc
stos
xor
or
fisttpll
ss
sbb
stc
adc
cltd
aas
xor
in
pusha
xorl
pop
adc
jne
mov
cmp
inc
fisttpl
pop
xorb
mov
inc
scas
fsubl
mov
jbe
test
sub
test
and
push
movsl
and
ljmp
mov
lcall
movsl
lods
dec
pop
mov
into
xchg
or
aaa
or
cltd
jbe
ret
rclb
add
ror
push
cmc
in
jo
inc
in
stos
out
push
sub
adc
pop
scas
out
xchg
iret
mov
repz
inc
add
fcompl
xchg
lret
hlt
leave
mov
cmp
leave
aas
jo
or
adc
jmp
sub
ss
or
or
dec
pop
int
arpl
out
jbe
xchg
push
sub
data16
in
gs
mov
repnz
addr16
les
mov
xchg
ss
aas
ret
add
xor
out
inc
xchg
sbb
imulb
ja
mov
pop
in
and
jbe
lods
push
bnd
ret
adc
and
test
leave
pop
cli
int
jg
fimuls
adc
jge
add
cmpl
dec
sub
add
movsb
outsl
adc
call
mov
fidivrs
mov
inc
sbb
xchg
rclb
aaa
daa
jle
pop
mov
pop
adc
andps
fcompl
cwtl
mov
insb
test
pop
inc
cmpsl
popf
sub
mov
scas
stc
pop
test
je
call
fs
ss
jecxz
call
cli
jmp
cmc
lahf
cmp
out
add
lcall
mov
cwtl
pop
loopne
inc
cmc
rcr
jno
inc
mov
call
sbb
xor
rep
jbe
cmp
cmpb
xor
popa
xchg
testl
clc
or
stc
xor
aas
das
nop
add
mov
lock
xchg
mov
jno,pn
cmpsl
cmp
inc
clc
jmp
xor
cmc
movsb
in
xchg
stos
incb
out
dec
adc
data16
sbb
ss
cmp
adc
test
jmp
jbe
stos
xchg
cmpsl
outsb
das
mov
ljmp
lret
shll
pop
mov
xor
in
mov
aam
stos
rcrb
cltd
out
fisttps
mov
cwtl
mov
pop
add
and
out
add
mov
inc
enter
cmpb
adc
pop
ljmp
add
pop
mov
mov
das
mov
icebp
imul
sub
mov
mov
test
and
xor
xor
aaa
js
rcrl
mov
popf
sub
jge
mov
xor
sub
jp
or
adc
adc
out
outsb
out
cmpsb
lea
jae
test
or
or
dec
push
pushf
mov
sub
cld
pop
and
addr16
xchg
pop
xlat
cmp
lcall
push
cli
push
fs
das
outsl
out
xchg
lcall
mov
and
scas
mov
cmpb
hlt
loopne
xchg
lods
jle
mov
push
aam
dec
jbe
nop
mov
in
mov
mov
fwait
scas
out
movsb
cmp
sub
cmp
pop
xchg
jge
ret
xor
ja
in
rcrl
xorl
jmp
and
mov
or
mov
sbb
lock
inc
sahf
jle
cmp
mov
jns
inc
mov
lret
lret
mov
das
mov
push
sbb
or
or
negl
movsl
mov
jnp
ja
cltd
xor
fbld
pop
mov
ror
pop
adc
test
sar
leave
sti
adc
in
jge
adc
pop
or
imul
or
jnp
popa
ja
pop
call
dec
insb
pop
repnz
fldcw
shrb
fs
jle
scas
lret
xchg
sbb
push
xor
inc
xlat
pop
aas
push
and
mov
sub
mov
hlt
test
repnz
lahf
mov
cltd
fs
ficoms
sbb
js
sbb
pop
push
insl
cmpsl
loopne
or
lcall
cli
hlt
popf
adc
lret
aaa
xor
xor
jae
xorb
mov
inc
mov
out
adc
out
ss
pop
mov
or
add
lcall
mov
mov
cmp
scas
or
jp
or
sbb
dec
xchg
sbb
call
daa
xor
sub
add
jns
pop
jnp
movsl
cmp
pop
or
cmp
and
xlat
clc
movsb
pop
into
adc
gs
lret
mov
push
in
aam
mov
ds
push
popf
fcmovb
pop
das
jl
outsl
pushf
cmpl
in
sub
jle
push
pop
mov
lock
scas
punpcklwd
andb
xchg
aaa
lods
push
push
cmp
fs
fmuls
or
ret
les
sbb
popa
pop
arpl
xchg
jnp
and
jno
jp
add
shrb
and
push
out
hlt
rol
repz
dec
mov
icebp
lock
iret
xor
jne
xor
test
bound
repnz
mov
stos
cmp
cmpsl
xchg
mov
testl
cltd
shrb
dec
jns
pop
popa
lret
js
das
les
jbe
fwait
xor
addl
sbb
mov
cld
das
sub
push
xlat
xor
jo
into
push
pop
loope
in
scas
xor
jle
call
bswap
dec
in
pop
and
push
fwait
xor
inc
in
aad
cmp
jge
bound
cld
sub
cld
push
push
scas
aas
adc
push
not
call
in
lods
mov
adc
lret
loopne
add
jns
xor
fildll
loope
mov
call
test
int
push
test
xchg
mov
lods
inc
cmp
mov
inc
mov
enter
sub
cmpsb
stc
push
loopne
jnp
popa
sbb
out
push
dec
push
fwait
inc
movsb
inc
lret
and
into
dec
dec
push
inc
imul
outsb
jne
mov
sbb
out
xchg
pop
icebp
xchg
cmpsb
aas
sbb
push
insl
cmc
mov
mov
adc
xchg
mov
cltd
cltd
neg
push
add
jg
jmp
mov
call
adc
adc
stc
sub
lcall
jns
adc
gs
or
mov
call
sbb
lret
cli
aam
jp
loop
lret
lods
in
mov
test
divb
mov
lret
in
sub
lods
daa
xchg
inc
shrl
stc
pusha
add
sbb
pushf
inc
push
roll
icebp
xchg
inc
pop
jns
push
inc
outsb
push
sub
mov
dec
sbb
andb
push
cltd
je
jne
mulb
ja
mov
lods
jmp
inc
fisttpl
in
add
fldcw
mov
pop
add
mov
pop
jge
push
mov
xchg
and
or
cs
or
push
pushf
jmp
xchg
adc
xchg
sub
xchg
or
lods
xchg
and
jno
jmp
xchg
inc
xor
je
push
loop
push
test
dec
add
inc
push
cmp
cmp
mov
inc
sub
dec
mov
movsl
insl
mov
in
icebp
das
pop
push
xchg
pop
mov
ss
ret
jmp
cmpsb
fwait
jne
dec
and
pop
and
inc
sbb
cmp
pop
sarl
jmp
push
jb
out
test
pop
icebp
ss
cld
or
mov
nop
dec
fmuls
jl
rcl
pop
movsb
sub
xor
cmp
negb
testb
shlb
xchg
arpl
mov
mov
sbb
xchg
jns
orl
push
adc
and
mov
lea
pop
stc
push
sbb
add
int
jns
sub
cmp
andl
sbb
cmp
mov
xor
bound
fs
into
add
pop
sub
addl
jae
ds
jg
mov
push
jbe
or
out
and
jae
iret
pop
mov
mov
ds
inc
fs
aam
adcb
imul
push
fstps
pushf
outsl
cmc
adc
or
mov
push
xor
xchg
push
dec
gs
inc
mov
jbe
xlat
mov
test
lods
repz
mov
jno
mov
ds
pop
cmpsb
cmp
mov
inc
sub
aad
xor
fidivrl
add
cmp
stos
mov
mov
xlat
andl
cmp
add
or
pop
lahf
jp
movl
arpl
loope
adc
popa
mov
jp
imul
mov
in
jb
xorl
mov
fisubl
and
jmp
push
arpl
mov
ret
sar
jg
mov
fwait
movsl
sbb
test
je
rclb
adc
div
xchg
and
inc
dec
and
dec
pop
pop
mov
xchg
pop
xchg
aaa
mov
fldenv
ret
das
out
sarb
mov
and
aas
pop
xchg
movsl
in
sti
call
ja
enter
je
sahf
addr16
test
inc
call
cmp
jecxz
das
call
pop
and
cld
addr16
fs
xor
pop
cltd
xor
pop
jbe
stos
enter
and
mov
push
andl
out
xor
inc
insb
int
loop
jae
shlb
ja
mov
push
push
or
les
mov
and
inc
pop
pop
inc
call
and
test
hlt
cmp
or
imul
int3
insb
fsub
cld
pop
xchg
fsubrl
mov
into
arpl
imul
or
xor
stos
inc
push
add
push
clc
out
ret
stc
sbb
repz
out
pop
je
inc
les
pop
sbb
add
out
jmp
push
les
or
mov
mov
aad
cmp
and
adc
addl
push
pop
sbb
ret
dec
popf
loop
lahf
or
fwait
xchg
xor
xor
ljmp
sub
aas
jmp
repz
out
out
pop
or
scas
ret
mov
leave
test
mov
push
sbb
lcall
xchg
sbb
lods
fbld
repz
movsb
push
imul
lock
lds
jnp
pop
xchg
rcrl
fldt
adc
out
fisubl
aad
xchg
pop
mov
xchg
mov
xor
sti
adc
add
out
clc
push
stos
pop
jbe
pop
lock
pop
and
mov
push
pop
or
mov
mov
sbb
aad
out
stos
arpl
mov
mov
movsb
cltd
in
aam
fnstcw
jle
mov
loop
in
fcoml
add
out
out
fstpl
and
aam
ja
pushf
adc
pop
xchg
clc
cmpsb
xor
ret
mov
push
adc
lahf
imul
cwtl
iret
cltd
in
jl
mov
sub
push
cmpb
sti
pusha
xchg
mov
dec
pop
sbb
ret
imul
xor
mull
cltd
pop
movsb
or
dec
inc
mov
daa
mov
rolb
lcall
lahf
es
dec
dec
dec
loop
outsl
pop
or
mov
test
pop
fstpl
js
or
jo
xor
test
lds
mov
call
mov
xor
adc
das
sub
lds
aas
mov
cltd
and
sbb
mov
lods
push
add
adc
hlt
mov
mov
mov
dec
sbb
addb
scas
mov
cmpsb
divl
pop
cmpsb
and
addr16
adc
nop
xchg
ljmp
mov
fistpl
jge
and
sub
in
jecxz
dec
xchg
into
push
leave
stos
mov
out
pop
cmp
imul
xchg
cld
mov
inc
decb
scas
pop
or
jp
xor
cmp
ljmp
and
lea
sbb
push
ss
fadds
or
inc
adc
shl
inc
arpl
popf
xor
adc
popf
add
cmp
aam
xor
fs
mov
push
adc
std
push
cmp
and
les
mov
xor
aas
push
fdivrl
imul
pusha
sub
jmp
mov
and
ja
adc
sub
fnstcw
mov
andb
addr16
xlat
ljmp
push
loopne
test
mov
mov
xor
mov
jp
pushl
stc
jg
inc
fmuls
pop
jne
push
jmp
fistpl
add
lahf
es
mov
ror
les
pop
adc
sub
inc
mov
aas
das
push
jg
sar
ret
add
stos
pop
add
pushf
add
imul
hlt
or
push
jl
jns
or
mov
cmp
mov
xorb
jl
outsb
pop
xchg
popl
gs
out
call
stos
sub
adc
sbb
or
cmp
inc
lock
push
aaa
inc
fdivr
cmpl
cmp
push
test
sahf
lds
jmp
call
or
inc
ror
adc
call
lcall
pop
mov
lret
clc
ficompl
mov
fucom
cmp
mov
addr16
lock
aam
cmc
sub
test
data16
lods
insl
jno
xor
data16
cmpsl
orb
sub
mov
xor
mov
dec
jo
adc
mov
pop
ds
and
pop
dec
adc
mov
movsb
mov
imul
jl
aas
fadds
jae
inc
mov
lret
outsb
xlat
jge
push
mov
dec
push
aas
push
sbb
mov
shr
mov
jle
pop
xor
add
mov
fs
dec
sbb
out
shrd
mov
dec
out
mov
push
mov
and
ffreep
and
ret
pop
test
out
adc
nop
sti
das
add
aaa
cmp
cmp
pop
lods
icebp
lock
rclb
fisttps
add
mov
je
arpl
inc
inc
pusha
or
sbb
das
nop
pop
movsl
js
cmp
call
inc
inc
pop
mov
cmp
loop
scas
mov
out
sbb
and
loope
adc
cld
mov
adc
imul
fwait
sub
inc
pop
popa
pop
inc
test
nop
cmp
lret
mov
in
lods
into
lods
mov
ds
mov
mov
lds
aam
push
xor
test
loope
pushf
mov
mov
popf
pop
add
int3
hlt
lahf
daa
jmp
adc
and
xchg
rcrl
or
pushf
jmp
and
and
adc
add
fucomip
add
xor
fxch
xchg
mov
outsl
xchg
loopne
jp
mov
aam
out
fneni(8087
aam
dec
cli
setnp
in
mov
sbbb
leave
adc
orb
fwait
cmp
ds
mov
out
inc
ljmp
clc
shll
out
nop
outsb
fldt
xorb
and
ret
cmpsl
mov
mov
push
sbb
xchg
xchg
aaa
mov
lret
test
mov
cltd
add
sub
aam
pop
mov
dec
cwtl
jns
call
stos
or
inc
jg
adc
mov
outsb
cmp
inc
cmp
dec
jns
mov
xchg
rcrl
iret
lea
mov
shr
mov
push
test
cwtl
std
incb
enter
adc
xchg
outsb
mov
fst
ss
mov
fdivs
sti
push
cmpb
add
jns
and
push
push
outsl
stos
cmpsl
daa
fbld
sahf
je
and
loop
push
call
mov
mov
push
std
mov
dec
cmp
hlt
inc
add
xor
lods
test
pop
dec
inc
shrb
xchg
call
pop
inc
or
subl
cltd
loopne
sbb
in
mov
push
xchg
leave
jnp
sbb
test
dec
ljmp
xlat
push
rclb
adc
repz
or
shrl
adc
scas
cld
push
mov
inc
addl
push
xor
adc
cli
inc
cmpsl
xchg
outsl
mov
roll
rcrl
cmp
bound
xchg
mov
daa
test
sbb
fcmove
shll
shlb
outsb
mov
inc
mov
sbb
je
mov
int3
orl
mov
call
xor
push
xchg
pop
add
jae
insl
mov
xor
xor
push
in
stc
xchg
jmp
aas
dec
inc
in
ja
divb
cmp
inc
inc
mov
ret
mov
inc
cwtl
jg
jle
loop
mov
idivl
icebp
cmpsl
imul
mov
mov
lds
leave
into
jle
adc
pop
xor
push
and
in
adc
push
cmp
ds
inc
dec
rclb
xchg
push
push
adc
pop
sbb
cmp
jo
or
add
je
mov
std
out
mov
pop
ficompl
test
xchg
mov
mov
mov
dec
adcb
sub
repnz
movsb
xchg
or
xchg
mov
std
lcall
icebp
scas
xchg
arpl
inc
add
xlat
stos
sbbl
test
adc
or
adc
ds
dec
sbb
test
test
xor
out
jecxz
imul
popa
dec
mov
gs
sub
jo
cmp
dec
mov
or
outsb
jmp
mov
push
pop
mov
out
inc
cwtl
insl
sbb
push
repz
jo
xor
mov
cli
icebp
aas
mov
es
call
dec
lahf
xchg
lds
adc
enter
fwait
stc
xchg
cwtl
jge
mov
lahf
test
xchg
and
popf
add
ret
lret
rol
sbb
push
cli
ret
push
inc
cmc
outsl
aad
addl
xchg
imul
jecxz
mov
mov
dec
mov
push
push
cmpb
jl
push
sbb
insl
enter
dec
call
push
call
in
fnstsw
lods
es
cmc
cmc
mov
cwtl
cwtl
mov
testl
pop
pop
ds
xor
add
addr16
pop
add
fs
cmp
jmp
jl
and
es
ds
testl
mov
xchg
jecxz
pop
adc
inc
gs
pop
xchg
ds
shrl
sahf
in
hlt
push
push
out
mov
test
dec
aad
sbb
rcll
les
cmp
lahf
pop
lods
pushf
jecxz
fs
add
stc
adc
rolb
mov
test
cmpsl
or
daa
push
xor
sub
mov
ss
out
imul
push
aaa
js
dec
or
int3
scas
inc
adc
dec
cmc
pop
pusha
lods
mov
jne
iret
ss
std
pusha
push
jg
pushf
inc
fmul
ret
outsl
push
dec
adc
repz
pop
insl
insb
push
mov
jbe
push
fldcw
imul
mov
ret
sub
ss
cmpsb
mov
fisttpll
enter
mov
cmp
int3
pop
das
lahf
test
enter
mov
imul
dec
hlt
sbb
insl
cmc
inc
mov
xor
stos
or
aad
subb
shll
aas
aad
insb
les
mov
xchg
or
shl
es
js
mov
mov
dec
sub
mov
fisubrl
pop
push
and
and
inc
dec
ret
xchg
mov
jecxz
xchg
and
cs
js
ficoml
sub
add
test
std
xchg
jp
xchg
ret
in
sbbb
in
cld
mov
xchg
dec
das
mov
adc
movsl
and
fwait
xlat
data16
or
cmp
divl
push
or
nop
inc
fsts
push
shll
adc
inc
push
fucomi
pop
hlt
int
lcall
aad
shl
push
fldt
out
push
std
and
or
xchg
cltd
sbb
dec
stos
bnd
cli
pop
pop
lds
mov
clc
jae
das
arpl
push
inc
rorl
push
lea
mov
jns
sbbb
or
fidivrl
fldcw
aam
sub
nop
scas
jge
stos
push
mov
fadd
mov
loope
scas
xorl
lahf
dec
mov
mov
and
hlt
mov
or
mov
add
sbb
out
arpl
add
mov
stos
aaa
or
cmp
inc
cltd
jp
scas
lea
testl
lods
or
sub
dec
cld
mov
movsb
push
push
stc
mov
push
fs
and
cmpsl
aas
mov
add
out
xor
cmpsb
push
popa
nop
xchg
imul
xchg
daa
mov
jnp
dec
pop
cli
outsb
mov
or
es
enter
pop
dec
mov
aad
iret
fldl
clc
shlb
mov
jne,pn
dec
arpl
outsl
adc
adc
ljmp
mov
lahf
repz
push
xor
out
and
mov
sbb
inc
shrb
rcrl
shlb
ret
mov
loopne
xchg
jle
sbb
xchg
sbb
fistpl
or
lcall
or
repnz
imul
outsb
add
dec
jno
dec
push
and
out
arpl
jne
fistl
jecxz
push
ss
xchg
ljmp
sub
lcall
pop
pop
add
mov
insb
stos
jb
aad
mov
insl
sbb
push
fmuls
out
push
or
call
inc
mov
xor
push
enter
sub
dec
add
sbb
push
cld
movsb
jg
dec
pop
fmul
fdivp
xchg
pop
imul
lods
mov
fsubrl
xchg
xchg
fs
int3
pushf
push
adc
dec
jle
lock
aam
mov
jb
lock
pop
dec
push
jb
xor
push
inc
inc
push
mov
out
jbe
cmp
cmpsl
jmp
or
sbb
movsb
in
mov
cmp
xchg
mov
jecxz
dec
sbb
shlb
push
nop
lahf
call
pop
adc
movsl
subl
adc
push
xchg
lock
push
or
push
mov
and
and
dec
push
lods
mov
das
cltd
inc
lahf
shl
gs
xchg
rorb
andl
mov
mov
lret
xchg
movsb
jno
cld
sub
daa
pusha
fwait
lods
ret
loop
test
lahf
in
xor
lret
sub
movsb
xor
push
loope
pop
sar
rcr
mov
je
aad
gs
dec
outsl
xchg
std
inc
jmp
push
pop
fisubl
and
filds
sub
movsb
stos
mov
cmp
push
pop
xorb
xchg
rcl
aaa
cwtl
sbb
mov
data16
pop
cs
js
ss
scas
push
inc
xchg
pop
jne
sub
cli
fisubl
mov
inc
adc
popa
sbb
jb
xor
movsb
aad
mov
insl
mov
jmp
cwtl
enter
int
test
popl
and
cmp
dec
xchg
mov
and
andl
lcall
push
jne
cmpsb
xchg
bound
mull
test
pminsw
in
sbb
sahf
ja
dec
dec
ja
popf
aad
xor
clc
sub
mov
cmpsb
cld
push
dec
jg
mov
sub
push
pop
mov
pop
les
jmp
push
pop
arpl
mov
jbe
xchg
cmp
inc
sbb
sbb
insb
mov
out
loope
push
sub
fwait
inc
int
and
adc
ss
std
mov
jecxz
in
stos
cmp
jo
pop
aaa
aaa
xor
data16
roll
pop
jge
arpl
jecxz
hlt
lahf
xchg
mov
jge
pop
cmp
adc
mov
pop
sbb
lret
fisubrl
jbe
push
sub
sub
jle
leave
js
scas
inc
aas
cmp
and
push
mov
pop
cmpsl
push
jmp
js
sub
sahf
mov
dec
sahf
cwtl
and
push
push
notl
les
movsb
bound
lods
js
adc
out
fisttpl
mov
lods
xlat
pop
and
call
adc
aam
aam
push
loop
xchg
clc
decl
or
push
js
lock
int3
gs
lret
jmp
mov
mov
mov
jp
insl
andl
popf
cmp
dec
xor
mov
stos
push
nop
pop
push
imul
add
sahf
loop
cmp
sbb
mov
popl
mov
lret
and
ret
in
ljmp
test
xchg
sub
fdivrl
cli
dec
mov
push
sub
push
pusha
xor
popf
sbb
xor
shrd
and
and
dec
mov
dec
cltd
in
add
xchg
mull
imul
out
sarb
mov
pop
push
push
adc
fadd
in
cltd
pusha
cmp
cmp
dec
dec
push
add
pop
stc
neg
xlat
pop
popa
push
cmp
fsubrs
dec
mov
ret
mov
lcall
xor
lcall
vandnps
stos
inc
mov
mov
loop
jnp
mov
sub
outsb
mov
cmp
dec
repz
jno
add
pop
pop
movsb
stc
mov
sbb
sti
push
leave
mov
xchg
stos
push
mov
cmp
jl
sbb
stos
inc
mov
sub
or
mov
xchg
fxch
loope
or
aaa
jnp
cmp
jecxz
xchg
push
stc
adc
push
sub
push
adc
or
jp
xlat
clc
and
dec
aaa
shrb
mov
sbb
sbb
jmp
mov
loope
xchg
jne
in
mov
jbe
call
xchg
adcl
xlat
mulb
jo
adc
push
or
cld
lahf
adc
lock
sub
ss
es
mov
test
push
notb
mov
shll
xchg
popl
sub
sub
push
mov
push
mov
dec
lret
movsl
dec
lds
fstl
pop
xchg
mov
dec
sub
jbe
push
das
fdivl
neg
ret
mov
sbb
or
ss
pop
inc
das
icebp
lret
and
or
jb
xchg
mov
jnp
dec
mov
inc
fsubrs
cmp
cmc
js
push
outsl
fisubs
sbb
and
pusha
or
jns
test
shrd
or
lcall
es
loopne
jbe
push
mov
mov
test
push
shll
mov
ss
inc
ds
cmp
mov
jb
mov
push
and
jo
xchg
inc
test
cmpsl
adc
add
pop
jo
lret
jmp
ret
mov
adc
jbe
stos
in
xchg
mov
mov
mov
data16
jb
mov
sbb
dec
pop
sarb
addr16
jp
or
add
test
lock
jle
and
sub
jno
mov
in
push
test
and
push
jae
mov
jo
cmpl
pop
rorb
and
add
inc
pop
sbb
loopne
adcl
xor
pusha
adc
ss
outsl
gs
or
add
cltd
ss
repnz
stos
pop
gs
stc
mov
and
add
mov
mov
test
addr16
pop
push
xchg
pop
out
stos
or
paddb
add
or
mov
mov
push
jns
cmp
mov
mov
shll
into
mov
insb
aam
pusha
push
mov
cmp
in
inc
jbe
cltd
inc
enter
dec
lock
js
add
aas
out
out
movsb
and
adc
fs
inc
out
xchg
popa
adc
pushl
jo
xchg
lds
sub
das
lock
mov
insb
xchg
mov
loopne
pop
fcmovnb
jnp
xchg
insl
rolb
dec
inc
daa
mov
loopne,pt
les
sub
xor
dec
out
cld
or
loope
pop
dec
lock
ja
or
or
dec
lds
ret
jne
sbb
je
adc
lods
adc
add
int
pop
mov
mov
loop
into
xor
jae
push
or
cwtl
mov
jl
pop
std
inc
arpl
sbb
insl
jo
lahf
ss
pusha
pusha
fwait
push
outsb
and
loop
xchg
es
js,pn
or
mov
es
push
mov
adc
push
sahf
jge
jp
add
push
orb
xlat
mov
mov
popf
movsb
loop
ret
sub
mov
mov
enter
in
hlt
inc
sub
push
adc
dec
mov
mov
outsl
gs
scas
and
loop
icebp
outsb
pop
or
xchg
mov
movsb
je
and
pop
mov
dec
mov
xor
add
sbb
in
or
push
dec
or
rorb
cmc
push
in
enter
rclb
cmp
fbld
add
push
std
push
scas
icebp
clc
aaa
into
lret
xor
je
sub
xchg
repz
lods
stc
fdivr
cmp
outsb
cli
insb
xchg
test
mov
fwait
jb
xchg
aas
clc
jae
xor
outsb
jns
inc
stc
sbb
pop
loopne
xchg
mov
orb
test
out
xor
pop
jmp
sti
scas
pop
push
pop
shl
imul
fcoml
pop
xchg
push
or
into
xchg
push
or
push
jno
fidivrl
jbe
int
imul
les
jnp
ds
fidivl
dec
stos
insl
lret
clc
or
cmpsl
xchg
mov
ljmp
inc
dec
push
mov
outsb
out
mov
int3
stos
lds
sub
jo
popl
aam
jl
jnp
xchg
shl
ljmp
sub
push
xor
add
inc
mov
pop
shrb
cmpsl
divb
js
add
and
test
jecxz
sbbb
pop
mov
arpl
xchg
mov
mov
xor
mov
xchg
sbb
sub
xchg
sarb
inc
mov
cld
jo
xor
mov
bnd
adc
std
lods
imul
push
addl
pusha
sub
inc
scas
rorb
pop
out
test
dec
mov
shll
lea
and
inc
ja
mov
dec
mov
mov
mov
fdiv
imul
xchg
mov
mov
adc
push
dec
mov
jp
jecxz
dec
sub
insb
mov
sbb
movsb
pop
mov
pusha
jl
stos
dec
adc
jecxz
sbb
xchg
jl
push
cwtl
push
dec
arpl
inc
dec
out
ret
sbb
dec
popa
adc
int
dec
pusha
in
mov
pop
xorb
insl
daa
push
xchg
jg
jge
pop
je
sbb
cmpsb
mov
dec
pop
add
sub
sub
adc
test
addb
lds
push
loopne
jo
cmp
dec
inc
jmp
xchg
ljmp
clc
sbb
sub
xchg
adc
rorb
fwait
mov
add
jle
pop
outsl
push
lret
pop
sub
jle
pop
ret
data16
popf
icebp
and
mov
push
pop
add
aaa
aaa
push
xchg
push
mov
sbb
and
or
xchg
mov
adcb
mov
std
adc
adc
adc
shrb
das
out
and
rclb
lahf
in
xchg
pop
mov
out
mov
rcl
xchg
pushf
xchg
xor
sahf
or
add
popa
outsb
fneni(8087
mov
push
xchg
mov
cld
inc
hlt
xlat
and
ret
clc
aam
mov
int3
pop
fwait
push
loope
and
inc
das
add
or
shll
push
hlt
xchg
clc
dec
sbb
sahf
sub
inc
test
lds
fcomip
notb
loop
inc
mov
lahf
or
and
pusha
jne
jg
sub
movsb
lock
push
and
xor
add
fstpt
add
mov
lcall
pop
pop
mov
gs
rcr
inc
cli
test
arpl
dec
xor
clc
testl
inc
repnz
or
inc
pop
das
push
or
fsubrl
aad
mov
ret
cltd
cmovb
cmp
mov
sbb
ljmp
jae
add
repnz
aad
mov
push
push
mov
mov
shrl
mov
popa
push
or
rcrl
mov
inc
out
sti
xor
inc
je
ficoms
mov
sti
int3
ret
lahf
aas
fisttps
push
push
imul
pushf
xchg
inc
cs
fs
fildl
xchg
or
mov
inc
lcall
cmpsl
icebp
push
mov
inc
sub
push
push
push
fldt
fistps
xchg
mov
mov
out
out
cltd
dec
enter
pusha
cwtl
in
add
rcll
sub
fisubl
rclb
add
fistpll
fcmovnb
test
mov
loope
pop
mov
int
adc
inc
add
mov
push
sbb
aam
cmp
add
leave
test
or
js
ds
jb
lahf
mov
push
cmp
gs
dec
sbb
add
adc
mov
ljmp
add
cwtl
inc
stc
dec
mov
jnp
ja
lahf
jg
push
mov
popf
aad
inc
sbb
scas
jge
adc
dec
cltd
and
outsl
push
jp
xchg
sbb
mov
or
jno
add
cmp
inc
mov
jnp
icebp
add
and
int3
dec
stos
rcrb
inc
xchg
pop
jne
insb
jecxz
and
jno
inc
cmp
dec
in
mov
popf
mov
sub
andb
jmp
in
cmc
dec
icebp
adc
popf
jmp
pusha
ret
sub
jns
outsl
cmp
lret
mov
add
cmc
xor
push
mov
xor
std
loop
aam
add
sbb
xor
test
jnp
inc
pop
xor
repnz
jmp
in
jge
pop
daa
test
cmp
int3
fdivl
adc
and
cli
pop
jns
xor
pop
aaa
outsl
mov
adc
andl
pop
push
aam
mov
sbb
sbb
gs
mov
and
adc
data16
dec
out
inc
pop
xor
ss
mov
cmp
adc
pop
mov
std
outsl
subl
xor
mov
shll
sbb
mov
fiaddl
rcll
pop
adc
sub
pop
lods
call
into
call
pop
xchg
scas
mov
dec
mov
jmp
outsl
fbld
jo
and
xor
das
mov
and
ss
sbb
loope
inc
lods
push
incl
jmp
cmc
iret
inc
adc
cmpsb
add
cs
lret
cmp
leave
pushf
mov
loop
cld
inc
sub
ficoms
out
test
dec
stos
xchg
pop
pop
xchg
stos
out
dec
dec
das
mov
addb
xchg
inc
ljmp
xchg
and
jmp
test
jl
add
xchg
dec
sub
aam
xchg
xor
mov
cmp
mov
dec
jl
adcl
ret
add
dec
push
out
mov
decb
shlb
or
sub
sbb
sub
mov
mov
popa
push
cmpsl
mov
mov
pop
push
sbb
cld
xchg
sbb
mov
mov
push
mov
lds
repz
xor
xchg
out
rclb
addr16
xor
in
xchg
jge
cmp
loop
inc
jp
scas
test
test
inc
dec
pop
cltd
dec
push
adc
test
pop
xchg
shlb
outsl
fs
jle
cmpsl
sub
push
xchg
sbb
es
popf
cmova
sbb
push
fstps
fisubrl
pusha
test
rcrb
or
pop
lret
fisubrl
out
push
inc
xor
arpl
mov
mov
dec
cld
or
push
add
mov
xor
sub
jp
stos
inc
mov
xchg
sub
jne
sub
sti
cs
popf
icebp
xor
lods
push
insb
call
pop
xchg
cmpsb
addr16
jns
mov
sbb
jecxz
popa
lret
lock
adc
add
xor
testl
inc
cld
cltd
sbb
cmp
sub
mov
add
flds
subps
pop
inc
ret
cmpsb
jge
in
pusha
inc
xor
jne
cmc
scas
xchg
test
push
cmpsl
mov
add
outsb
cli
pop
mov
imul
cmp
jmp
jg
aas
aam
imul
xchg
mov
mov
jl
mov
cs
dec
aad
adc
ja
cmp
pushf
pop
cld
js
and
cmpsl
data16
mov
jecxz
sbb
mov
je
cmp
cwtl
ss
jmp
xlat
push
and
ljmp
sub
mov
icebp
mov
fildl
andb
cmp
add
outsl
xchg
scas
and
pop
outsl
sbb
sahf
push
sti
pushf
jno
or
cmp
sbb
aam
cld
sbb
jl
xchg
cltd
and
sahf
out
add
imul
fcomi
mov
jae
outsb
mov
mov
fwait
out
rcr
shll
mov
out
dec
jns
sbb
sbbl
test
ds
dec
mov
mov
dec
shll
adc
push
out
or
fimull
mov
pop
push
push
sub
pop
pop
negb
and
or
fidivs
in
call
aad
push
aaa
mov
pop
outsb
stc
mov
inc
push
xlat
pushf
aas
add
xchg
add
add
mov
push
pop
popf
pushf
jnp
sbb
fwait
out
mov
fldenv
dec
je
fcom
cmp
pop
nop
sub
cmpsl
inc
push
in
add
mov
imul
cmp
xor
cs
rcrl
mov
enter
push
pop
xchg
push
mov
add
jbe
xor
std
or
mov
sbb
repnz
ds
popf
repz
pop
adc
es
int3
push
sahf
lods
pop
test
stos
je
sbb
je
test
out
fsubl
xchg
cmp
mov
mov
bound
pushf
aam
stos
or
scas
lock
cltd
imul
jmp
pop
std
mov
xchg
and
dec
test
sub
fldcw
les
movsb
nop
fistpll
push
pusha
sbb
mov
sahf
jae
leave
icebp
cmpsb
pop
adc
outsl
addr16
mov
inc
outsb
repz
jecxz
stos
pop
ja
movsl
sahf
das
xlat
fisubrs
jne
leave
loop
cmpsl
cmpxchg
mov
jne
mov
subl
shlb
lods
ds
mov
loopne
mov
sbb
mov
add
movsl
cwtl
cmp
ret
ljmp
loop
shlb
es
sbb
sahf
cwtl
mov
icebp
adcl
mov
stos
js
push
enter
xor
lcall
pop
ffree
push
cwtl
aas
das
xchg
std
mov
jecxz
push
ds
or
test
mov
sub
jg
fstl
and
pop
inc
pop
adc
mov
jmp
inc
inc
xchg
cltd
ret
movsl
jno
pop
movsl
pop
jge,pt
or
inc
xchg
aas
jmp
in
out
jmp
imul
das
lret
js
scas
and
pop
sub
idivl
sbbl
stc
xchg
lahf
mov
aaa
inc
cmpsb
sarl
arpl
dec
adc
pop
xor
or
pop
mov
and
dec
sbb
mov
mov
dec
push
in
sub
vpunpcklwd
or
mov
popa
add
pop
sbb
mov
jp
sub
push
xchg
and
scas
mov
inc
add
jecxz
das
aaa
jmp
mov
jno
subl
push
dec
sbb
or
mov
fldenv
xchg
test
lret
cmp
push
mov
sub
pop
fldt
cvtpi2ps
leave
pop
sarl
nop
arpl
sub
fistpl
push
cmp
pushf
jg
jne
xor
mov
imul
fadds
cbtw
enter
sbb
aam
xor
xchg
pushf
loope
cli
enter
sub
dec
fidivrl
or
and
out
xlat
or
fldl
inc
iret
push
ret
cmc
dec
mov
das
mov
repnz
adc
inc
js
movsl
lea
aad
adc
push
jle
das
pop
cwtl
add
and
mov
iret
push
clc
pushf
scas
ja
xchg
in
dec
xchg
mov
jno
add
lret
fwait
mov
clc
int3
cmp
inc
mov
jae
push
roll
or
mov
fs
lret
mov
lcall
xor
test
pop
scas
fadd
pop
fnstsw
inc
sbb
and
jg
and
inc
clc
push
pusha
cmpsl
dec
in
xchg
mov
idiv
mov
arpl
cmp
push
and
or
pop
mov
les
out
mov
sti
out
movsb
out
push
mov
fstpl
push
mov
inc
dec
lret
jg
fnstcw
xchg
cli
jae
les
add
mov
inc
in
xchg
and
ret
mov
push
dec
sbb
jmp
lahf
test
rcrl
xor
fs
lods
scas
ror
xchg
add
xchg
dec
inc
jo
out
mov
aas
les
pop
mov
dec
lods
inc
add
int3
lock
xchg
aam
push
push
add
mov
push
test
adc
fmull
divl
or
ss
testb
ret
dec
inc
mov
jecxz
push
xchg
push
gs
push
jb
push
and
imul
inc
out
and
mov
pop
fcomps
repz
repz
cli
dec
insb
sarb
cli
dec
sbb
jnp
dec
inc
add
rorl
mov
xchg
and
fidivrs
pop
mov
adc
xor
xchg
mov
daa
jg
and
insl
or
enter
mov
mov
or
jle
pop
jl
sbb
cli
fdiv
je
insb
cmp
data16
mov
inc
loop
incl
into
lock
inc
push
push
inc
int3
adcb
dec
xor
lret
repnz
xor
and
scas
pop
outsb
jae
lods
push
fs
lret
scas
or
cmp
popa
dec
lret
sbb
imul
mul
out
jbe
std
push
int
stc
or
fs
paddq
popa
add
add
or
sbb
or
cmp
adc
rcll
and
leave
mov
hlt
push
jp
scas
adc
icebp
or
mov
xorb
outsb
ret
jns
outsb
leave
pop
scas
daa
data16
ja
es
mov
je
pop
notl
popa
shrb
pop
sar
into
daa
jmp
push
adc
in
xchg
int3
jg
fidivrs
cltd
push
sub
mov
mov
jbe
dec
or
fwait
sbb
popa
in
adc
fwait
arpl
cmp
or
xchg
jp
out
mov
mov
jne
push
or
mov
xchg
cmp
lret
fldenv
xchg
shl
arpl
das
mov
inc
aam
les
sbb
mov
push
scas
mov
fmuls
jge
ljmp
lds
or
cmpsl
dec
push
sahf
inc
push
or
and
sub
dec
pop
ss
and
dec
add
aam
mov
cli
mov
cmp
enter
or
popa
push
cmpl
mov
adc
cmp
out
data16
jge
sub
pop
outsl
fbld
or
mov
aaa
mov
mov
push
xor
pop
lcall
cmpb
push
pop
cwtl
outsb
mov
mov
xor
jge
in
in
shl
into
imul
int
fldt
inc
and
jb
mov
inc
mov
pop
jecxz,pt
mov
out
sbb
xchg
test
inc
mov
mov
idivl
stc
mov
pop
lods
adc
je
lcall
cli
fdiv
cmc
movsb
mov
aas
inc
sbb
and
sahf
dec
jmp
out
add
mov
call
jp
int
or
or
mov
test
jg
push
lahf
sbb
cmp
mov
ljmp
jo
pop
or
xchg
lcall
jb
or
mov
cmp
mov
enter
in
outsb
outsb
add
mov
push
int3
int
sbb
mov
xchg
inc
enter
push
ret
mov
mov
out
jle
rcrl
jg
or
stos
fimuls
imul
jmp
xlat
insb
es
test
enter
mov
les
mov
jmp
int
cmp
stc
insl
inc
add
fldcw
xchg
cmpsl
xchg
mov
js
xor
into
pop
inc
sbb
dec
or
sbb
dec
or
ljmp
or
sarb
jmp
adc
cmc
dec
xor
out
sub
xchg
push
inc
pop
imul
sub
mov
mov
sbb
cmp
aaa
dec
lret
pop
clc
push
jp
fcmovnbe
js
push
sbb
or
push
push
mov
movsl
or
or
mov
sub
ficoms
inc
inc
insb
add
push
mov
add
arpl
enter
movsb
pop
mov
push
sbb
leave
xor
pop
iret
test
repnz
or
add
and
sbb
cmp
add
test
add
rcrb
call
sti
enter
push
cmp
dec
js
rcll
shll
cmc
lret
pop
pusha
jo
jo
sbb
lea
mov
dec
imul
fstpt
jno
rcr
adc
insb
pop
push
pushf
xor
je
and
jmp
or
shlb
out
in
sbb
push
pop
cmp
lret
sub
outsl
jns
sub
test
or
fstps
stos
mov
dec
insl
fimull
insl
jecxz
inc
mov
inc
fldenv
adc
lods
mov
pusha
inc
add
jl
mov
fidivs
dec
in
cmpsb
subl
lahf
or
pop
iret
int3
dec
lods
mov
xor
rorb
cli
mov
push
jmp
xor
add
insl
stos
in
jae
dec
dec
rcrl
out
dec
fwait
jb
daa
and
pop
sbb
jl
mov
push
inc
push
mov
sub
out
xor
sbb
push
sar
fsubs
xchg
out
nop
dec
sub
mov
add
lds
dec
shlb
mov
aad
aas
sqrtps
xor
popa
jbe
mov
and
mov
inc
int
jg
push
add
mov
mov
outsb
jmp
in
cld
mov
mov
cmp
loop
cmpsb
cmpsl
insb
fstpl
test
out
rcll
bound
or
test
add
aam
mov
pop
fldenv
dec
or
and
push
pop
mov
mov
adc
scas
adc
xor
sub
pop
test
lods
jno
xchg
and
imul
aam
cmc
jg
dec
pop
movsb
aad
arpl
loop
repz
adc
rolb
lcall
cmp
sbb
lods
decl
cmp
fidivrl
out
jno
push
mov
xchg
adc
fs
inc
jp
movsl
mov
and
xorb
mov
add
pop
sub
jmp
or
xchg
aad
add
mov
jae
in
push
cmp
add
ljmp
negl
cmp
jne
adc
pop
outsl
fisubrs
push
mov
mov
xchg
loop
adc
mov
sub
or
ds
adc
call
inc
insl
js
fs
lret
enter
push
shrl
cld
fwait
lret
or
aas
nop
in
fwait
xor
aaa
jns
cmc
inc
jbe
dec
sbb
cmpsb
popa
mov
adc
or
or
mov
sbb
test
jecxz
xor
imul
cld
add
inc
add
sub
adc
inc
sbb
xor
rcrb
popf
leave
pop
xchg
mov
pop
xchg
fisttpl
or
or
xchg
fwait
sbb
or
add
js
xchg
jp
push
cmp
fcomps
cmpsb
jns
mov
push
sbb
ljmp
xor
mov
jno
das
cmpsl
or
mov
mov
lcall
lock
shl
pop
call
jle
mov
jae
scas
js
jb
adc
ficoml
cmp
scas
arpl
repnz
fimull
push
ljmp
mov
jg
mov
mov
pop
jg
mov
mov
jecxz
sbb
adc
sbb
insw
pushf
cltd
outsb
pop
popl
lds
aas
adc
sub
mov
add
mov
dec
mov
rcrb
in
out
jo
dec
loope
sahf
or
add
mov
sahf
mov
imul
lock
mov
iret
pop
sub
aam
xor
aas
pop
cs
lea
push
das
push
lods
fs
bound
cmp
repnz
out
outsb
addr16
mov
clc
add
data16
imulb
int3
stos
incb
fcoms
mov
mov
enter
int3
xor
xor
jp
add
sub
ljmp
mov
shl
int
jnp
dec
call
and
fdivrl
aam
shrl
xor
ret
cmc
pop
das
andl
je
fsubrl
call
push
lds
dec
mov
inc
insb
pop
cmp
aam
cwtl
loop
in
jae
xchg
cltd
dec
cld
mov
sti
sub
and
pop
ljmp
jbe
roll
dec
loopne
int
lock
gs
cmp
scas
and
mov
rclb
cs
dec
test
mov
jge
xor
pusha
pop
sbb
jne
mov
jg
test
push
test
or
sti
push
icebp
loop
stos
fs
mov
enter
push
push
and
js
xor
jae
xchg
or
enter
rcll
ficoml
mov
hlt
cli
push
addr16
lahf
dec
addr16
adcl
sbbb
xor
or
xchg
hlt
sbb
mov
adc
lds
push
loope
push
in
xchg
cmp
es
daa
push
sbb
enter
adc
mov
mov
and
addr16
popf
fmuls
ds
add
sub
push
fmulp
sti
push
push
sbb
imul
and
cmpsb
mov
mov
inc
pop
ljmp
lret
sbb
cmp
jae
imull
leave
test
inc
popf
sarl
and
test
fadds
dec
stos
xchg
aam
add
cmpl
xchg
icebp
mov
sub
lods
and
arpl
fldt
cli
inc
out
pusha
push
inc
pop
ljmp
cmp
subb
adc
ljmp
jle
push
pop
pop
test
shll
fimuls
stc
pop
jecxz
jo
jp
mov
les
pop
lret
pop
xchg
inc
inc
pop
push
or
repnz
inc
int
sbb
xlat
mov
xchg
addr16
aad
and
testl
into
xchg
jle
test
int
stc
lcall
dec
push
jmp
ficomps
sbb
dec
decl
pop
mov
insb
aas
jmp
xor
addr16
cli
or
jae
inc
ljmp
pop
mov
lcall
stos
aas
in
lret
sbb
cs
into
shrl
pop
out
mov
inc
mov
sbb
cwtl
aas
movsl
out
test
push
inc
push
lcall
xchg
aas
or
repz
add
std
xorl
cs
or
add
xor
xchg
jge
les
in
mov
xchg
sbb
rcll
arpl
aas
or
ds
jo
adc
dec
mov
adc
aas
call
mov
mov
jb
in
sahf
sar
out
or
mov
and
push
fwait
ret
lods
xchg
scas
inc
lret
jl
xor
cwtl
sti
sub
pop
push
cmpsl
xchg
sbb
aaa
out
movsb
mov
pop
sbb
ss
adc
inc
pop
push
notl
mov
mov
loope
loopne
cmc
xchg
adc
ja
pop
cmpsl
pop
inc
imul
xor
in
mov
sbb
fsts
dec
xchg
mov
mov
fsts
jecxz
jp
sub
std
iret
bound
data16
imul
push
jb
into
add
pop
fnstenv
jmp
xor
sub
push
sub
rclb
ljmp
mov
inc
in
mov
lods
sarl
push
jbe
pop
mov
mov
or
das
sbb
xchg
imul
roll
push
mov
adc
int
imul
aad
outsl
sub
pop
aam
mov
fimuls
inc
dec
jb
outsb
jp
add
xlat
insl
sbb
xchg
adc
mov
jge
lea
into
push
cwtl
sub
dec
pop
push
adc
xchg
jecxz
shr
call
insb
cmp
stc
dec
jl
repz
inc
sub
leave
lret
cmc
adc
mov
imul
and
sub
mov
add
cs
stos
xor
insb
rclb
mov
fldlg2
fistps
ret
test
roll
inc
in
inc
enter
mov
mov
pushf
push
mov
mov
lods
hlt
push
add
sub
cmp
xchg
clc
arpl
testl
roll
pop
ja
mov
xor
jne
imul
mov
dec
rolb
test
xor
mov
div
imul
je
stos
lock
out
rolb
incl
jns
and
fs
adcl
cmc
jp
in
dec
lods
adc
xchg
dec
xor
push
call
dec
icebp
rcr
xchg
mov
subps
std
fmull
push
stc
imul
stos
call
jo
aam
or
hlt
add
sbb
pop
or
decl
inc
out
or
mov
mov
lds
pop
mov
iret
into
mov
daa
shl
in
mov
jno
lods
xchg
jg
ljmp
mov
cli
sub
mov
fwait
jmp
ljmp
pop
xor
iret
pushf
push
inc
xor
rorb
xchg
pop
xchg
fsubrp
imul
jmp
and
fs
outsl
js
mov
in
loope
pop
sbb
xchg
stc
adc
sahf
and
adc
enter
adcl
call
add
insl
sbb
fwait
sti
sbb
loop
mull
xchg
fisubs
inc
ret
sbbb
movsb
xor
lret
imul
insl
mov
inc
repnz
subb
or
add
ljmp
test
aad
and
cltd
mov
pop
xchg
leave
sbb
jecxz
jo
jb
divb
in
mov
int3
into
cmp
and
je
inc
mov
out
test
ret
das
cltd
mov
push
sub
cmp
sbb
into
or
dec
push
xchg
dec
sub
adc
xchg
sbb
ja
notb
dec
outsb
lret
dec
outsb
pusha
cmc
mov
dec
adc
mov
bound
jno
hlt
popf
fwait
dec
ds
sub
inc
cs
or
cli
mov
mov
jae
mov
push
std
out
loopne
popf
data16
out
push
inc
adc
xor
inc
cmpsl
arpl
mov
enter
xor
xchg
mov
or
out
push
mov
sbb
xor
cmp
cwtl
add
mov
bound
inc
sti
jnp
adc
pop
mov
or
mov
int3
popf
pop
fcoms
sbb
imulb
in
push
mov
xor
lock
push
add
daa
popf
int3
std
fs
dec
mov
test
jge
and
xchg
pop
mov
pushf
pop
dec
aad
fildll
jb
test
add
push
push
iret
push
jp
cmp
add
mov
in
in
in
loopne
lahf
pusha
add
fdivl
cmp
aad
and
or
xchg
push
cmc
fwait
inc
mov
pop
mov
add
inc
push
lcall
mov
stc
mov
sub
pop
data16
jne
lcall
enter
cs
shlb
adc
push
pop
inc
call
dec
mov
imul
dec
cmp
mov
dec
jle
stos
xchg
mov
inc
loopne
pop
faddl
mov
xor
nop
mov
jecxz
fsubrp
pop
ret
ja
movsb
or
movsl
out
xlat
xchg
dec
jno
enter
push
test
out
insl
pop
xor
mov
out
xor
or
jmp
and
cmp
test
fcoml
sub
pop
push
pop
stc
int
xchg
dec
or
mov
and
outsb
jae
aaa
je
insb
sbb
les
inc
push
push
jmp
sar
jg
cwtl
rcrl
mov
mov
mov
imul
iret
dec
xor
mov
insb
push
bnd
jno
cmp
lret
xchg
xchg
pop
aam
mov
rorb
out
adc
mov
adc
mov
pop
jb
mov
dec
mov
ja
fstps
out
icebp
push
sbb
inc
ljmp
sbb
insl
jle
add
mov
cmc
jne
push
sbb
movsb
dec
or
lret
mov
scas
in
daa
in
pop
mov
xchg
pop
mov
das
repz
shrl
hlt
lcall
jnp
lcall
ret
mov
or
mov
ret
fisubs
and
pop
cs
je
push
mov
shlb
imul
jle
inc
jne
out
rclb
mov
hlt
jae
add
icebp
and
inc
call
add
xchg
jle
mov
pcmpeqw
ret
inc
call
jne
xor
sub
sbb
aad
fs
pusha
in
sahf
inc
jns
mov
cmp
dec
xchg
adc
rolb
mov
push
stc
int3
scas
scas
out
push
jo
or
popa
shrb
add
inc
pop
pop
push
cwtl
or
fs
icebp
add
jbe
scas
je
adc
into
jnp
jmp
je
add
mov
pushf
shl
movsl
setno
mov
inc
sub
stc
pop
inc
xor
xchg
mov
cli
repnz
or
testl
push
mov
inc
imul
arpl
adc
or
nop
push
je
mov
xchg
xor
ret
xchg
fstenv
int3
das
sub
lods
dec
add
aam
jg
dec
mov
jno
std
or
xor
pop
rcr
cli
in
sbb
mov
jg
scas
pop
xor
or
daa
scas
ret
insb
mov
mov
mov
push
pop
popa
out
clc
inc
loope
xor
jl
mov
cmp
or
enter
adc
push
mov
pushf
xchg
xchg
test
inc
ret
push
arpl
repnz
cmpl
iret
inc
scas
cmp
mov
mov
frstor
dec
sbb
pop
rcr
std
jns
ss
js
or
and
inc
cwtl
lods
pop
xchg
xor
add
push
int3
js
es
or
insb
fisubs
fadd
into
iret
xchg
mov
cmp
sub
and
movsb
rorb
jp
inc
ret
mov
fisubs
dec
divl
cmpsl
mov
mov
dec
jb
and
pop
mov
adc
aad
test
push
mov
addb
mov
rcl
jb
cmp
cmpsl
popa
shrb
inc
push
addr16
nop
lea
jnp
fstpl
idivb
jge
xor
ja
call
repz
out
mov
rorb
hlt
sahf
pop
lods
ds
sub
lods
adc
inc
dec
pop
test
mov
stc
insl
jecxz
or
push
pusha
inc
sahf
pusha
mov
adc
mov
test
loop
and
insb
scas
mov
sbb
outsb
cmc
push
mov
rcrb
sahf
mov
mov
inc
cmp
add
jmp
sbb
jecxz
xchg
xchg
out
sbb
std
sub
and
push
xor
enter
jge
pop
les
sub
loop
fimuls
fucomp
pop
push
lret
or
sbb
shlb
mov
movsl
pusha
add
and
dec
mov
stc
mov
add
jmp
pop
orl
in
push
insb
mov
test
pop
in
cwtl
mov
std
dec
cld
xor
adc
mov
adc
loopne
outsl
outsl
cmc
or
xchg
adc
fildll
or
in
sbb
arpl
and
jg
fldenv
stos
push
push
ljmp
mov
or
or
testl
pop
in
inc
sti
je
aad
fdivl
stos
jae
rclb
push
jb
imul
jb
mov
pop
push
test
sbbb
or
mov
mov
jmp
xorb
cwtl
mov
pop
ja
or
pop
adc
icebp
je
cmp
push
sub
sbb
jmp
aas
jg
push
repz
sub
loope
sbb
or
cli
mov
xchg
testl
lahf
xor
popa
push
push
add
mov
cmpb
shrl
dec
adc
inc
bound
pop
mov
ljmp
lret
bound
jmp
popa
in
sub
or
mov
aad
or
add
cmpsb
das
inc
daa
test
je
jbe
xlat
and
aad
and
aas
jno
and
xor
std
cmp
push
pop
fwait
jo
lea
push
int
pop
popf
dec
sub
push
jl
mov
out
xor
and
xor
mov
mov
cs
mov
adc
lret
push
mov
mov
dec
aad
sbb
xor
lds
add
xchg
testb
daa
ljmp
adc
xchg
dec
cmp
push
push
add
insl
in
ret
sub
aad
jno
inc
or
shrl
repnz
mov
movsl
adc
orl
mov
xor
or
dec
sbb
jp
jns
shlb
and
iret
jo
push
mov
push
ja
jmp
mov
arpl
jnp
sub
cmp
test
test
fisttps
push
or
add
insl
xlat
call
out
andl
push
clc
insl
jnp
nop
out
adc
out
push
jns
mov
insb
lcall
adc
dec
lret
push
sbb
orl
xor
cmp
dec
push
mov
cmpsl
push
jge
sbb
leave
std
sahf
fwait
popa
fwait
popf
cmpb
push
std
sub
mov
xchg
lods
push
dec
jne
out
lock
sarb
jle
shlb
fs
cwtl
hlt
bound
push
sarb
loopne
mov
xchg
leave
pop
in
mov
push
int3
add
push
mov
into
mov
subb
push
xchg
mov
jns
sub
sbb
jle
out
mov
adc
sbb
sub
sbb
pop
in
and
push
mov
fdivs
mov
sub
adc
sbb
ror
jmp
adc
jl
cwtl
mov
cld
sub
push
sbbl
test
fwait
test
jl
or
lods
mov
sub
xchg
out
test
shll
cmp
mov
arpl
fcmovnu
pop
pop
std
mov
lea
add
icebp
nop
add
jae
inc
dec
ljmp
add
push
fidivrl
jo
clc
inc
add
int
inc
xchg
mov
or
movl
rcr
cmpsb
adc
xor
movsb
inc
jge
loopne
leave
arpl
scas
push
fistpll
aaa
or
xor
lds
xchg
pop
pop
ja
mov
sub
aad
aad
js
cmpsb
rorl
insl
dec
and
or
arpl
and
enter
iret
icebp
aas
data16
fsubrs
lret
or
and
mov
fcmovnu
mov
sahf
popa
imul
gs
insb
test
pop
mov
es
orb
cmpb
adc
cmp
inc
inc
shlb
jmp
int
add
jmp
and
adc
inc
xlat
xor
dec
iret
pop
sbb
int
scas
pop
lret
enter
fsts
sbb
ds
jle
test
inc
lds
mov
sbb
dec
ret
inc
mov
cltd
sahf
mov
sbb
and
shlb
cmp
xchg
iret
push
std
jg
repz
loopne
cld
push
negl
stos
xchg
jno
outsl
dec
jl
push
mov
movl
xor
je
mov
sbbl
cltd
cmp
or
scas
out
pop
loopne
xor
mov
dec
popa
push
insl
pushf
fwait
cmp
cmp
cli
jns
xchg
insb
sub
add
pop
pop
or
xor
mov
hlt
mov
cmp
aaa
and
dec
cli
ds
push
jmp
in
fisubrl
adc
mov
dec
adc
jns
sbb
sbbb
ret
je
ficoml
jno
jge
sub
ret
mov
cmp
push
clc
mov
fstpl
popl
dec
jmp
mov
xchg
lret
xor
movsl
jp
stc
je
jle
mov
lcall
mov
inc
in
push
lea
lea
gs
mov
fistpl
lahf
mov
mov
shll
movsb
orb
or
call
stos
inc
test
stos
mov
jmp
sub
addb
jo
fldt
dec
inc
dec
sbb
lods
add
hlt
dec
in
mov
imull
outsb
jb
loope
loope
push
les
es
mov
mov
dec
xchg
sahf
jae
sahf
lods
mov
add
jmp
push
loop
pop
cmpsb
jo
ret
adc
loop
adc
stos
xchg
les
pop
dec
stc
outsl
sub
call
dec
push
ret
inc
test
imul
lret
adc
jbe
daa
or
dec
mov
jbe
jge
fmull
jb
int
push
lea
into
xor
mov
inc
add
ds
dec
shr
scas
insb
sti
dec
inc
inc
sti
aaa
sbb
mov
adc
cmpsb
call
jmp
xchg
mov
loope
std
mov
push
scas
sub
adc
xor
ljmp
push
xlat
xlat
xchg
hlt
fwait
adc
mov
inc
xchg
sub
test
icebp
jb
inc
cmp
cmp
stos
fiadds
leave
sub
sub
aam
pop
mov
or
jne
mov
cmc
test
and
in
pushf
push
mov
bound
aaa
rorb
mov
fcompl
imul
leave
jg
mov
adcl
pop
add
mov
lea
or
mov
stos
sbb
pop
xlat
movsl
sbb
pop
add
pop
push
js
mov
xchg
ror
inc
adc
sbb
fimull
stos
cltd
sbb
push
loop
divl
clc
xchg
int
imul
jle
cli
dec
movsl
cmp
cld
je
pop
inc
sub
iret
pop
pushaw
mov
adc
and
fnsave
into
imul
pushf
rcrl
hlt
add
ljmp
mov
sub
push
in
mov
les
out
push
test
sub
loope
or
mov
xlat
outsb
add
pop
add
adc
inc
sarl
in
scas
cli
add
popf
sbb
ret
rorl
in
fsubs
push
mov
clc
pop
push
movsl
loop
imul
ret
sbb
jo
xchg
and
pusha
sti
cmp
dec
stc
cmp
xor
adc
sbb
aad
lock
sbb
jae
push
outsl
mov
int
push
cmp
or
addr16
iret
xchg
pop
mov
mov
aaa
xor
movsl
and
fsubrl
and
sub
mov
in
fcompl
mov
jmp
xor
movsl
add
sub
andl
mov
mov
sub
enter
aad
idiv
call
dec
sub
dec
rep
adc
sbb
dec
insl
lods
mov
xchg
stc
test
mov
add
cmp
pusha
cmc
imul
jno
xor
ss
add
add
sub
inc
fsubl
mov
negl
call
xorl
ds
push
cmc
lret
sbb
enter
lea
mov
iret
mov
imul
or
je
in
sti
sub
xchg
mov
xchg
inc
dec
test
dec
xorl
lea
pop
xlat
cmp
cmpsl
call
outsl
inc
outsl
bound
sarl
jae
push
sarl
outsl
cltd
or
inc
fbld
fcmovne
pop
imul
jnp
dec
mov
loope
rcrb
mov
push
addr16
jg
lods
aaa
lcall
xchg
pushf
jne
push
repz
imul
pop
pop
inc
jle
sub
lret
sub
push
out
push
push
pusha
inc
mov
push
loop
push
loop
enter
ja
sub
ret
out
lods
subb
inc
aaa
push
jnp
mov
jmp
mov
cmpsb
test
push
mov
sarb
jo
pop
in
push
xchg
dec
mov
sub
test
sub
inc
mov
js
jp
push
insl
pop
mov
repz
mov
mov
ljmp
mov
fs
sub
sbb
add
sub
addb
push
repnz
rcrl
pop
fistl
std
orl
mov
xchg
push
jp
inc
sub
fnstcw
jecxz
pop
mov
xor
icebp
mov
lret
xor
inc
cli
add
sbb
adc
or
stos
mov
sbb
add
cmpsl
je
outsb
dec
pop
pop
ljmp
test
ret
sub
es
fwait
repz
or
push
xor
dec
stc
lods
pop
sbb
lds
xor
lret
int
jp
repz
inc
mov
notb
rcl
leave
xchg
mov
xor
cmpsl
gs
cmp
lods
testl
push
sbb
pop
mov
pusha
cld
test
mov
jmp
xor
inc
jmp
movb
or
js
sbb
mov
mov
das
or
call
and
mov
mov
mov
fwait
out
adc
xlat
fdivs
mov
imul
sbb
push
add
cld
rolb
inc
into
loop
subl
int3
lock
repnz
mov
aas
xor
add
scas
add
dec
cmp
mov
jno
sti
cwtl
jb
sbb
lds
out
lahf
cmp
imul
mov
or
xor
in
xchg
clc
repz
mov
fwait
mov
mov
out
outsb
out
in
mov
lds
jmp
in
stc
cmpl
sbb
movsb
mov
push
aad
xorl
data16
mov
dec
icebp
inc
mov
dec
out
jp
cltd
sub
cmp
xchg
test
roll
and
and
and
jns
jle
lods
sti
mov
in
add
fildll
aaa
inc
orb
mov
pop
xchg
out
data16
rorl
rolb
adc
add
xor
sub
jge
or
add
subl
push
pop
sub
sub
test
cmp
jno
cmp
orl
mov
arpl
shrb
adc
sub
or
popf
fmuls
pop
or
aam
inc
mov
mov
mov
fs
rcll
ret
dec
roll
mov
jnp
addr16
out
pop
sub
fsts
in
pop
out
pop
icebp
mov
scas
bound
push
shll
jmp
shr
inc
sbb
out
ja
dec
jbe,pt
sub
sub
into
sbb
add
out
stos
push
jle
xlat
cltd
mov
mov
jl
add
jns
in
adc
cmp
shll
test
xor
sub
pop
ja
sub
cmpsb
push
fs
dec
aad
frstor
out
aam
lods
or
scas
xchg
sub
outsl
je
ret
and
outsl
aad
popa
dec
pop
mov
jecxz
or
das
pop
mov
movsl
and
ljmp
fsubrl
js
scas
mov
push
lea
xlat
push
sarb
xor
mov
adc
sub
cwtl
aaa
in
mov
inc
fwait
xchg
int
gs
push
shrl
adc
add
les
adc
xchg
jo
dec
popa
inc
push
pop
std
movsb
sbb
xchg
fistps
jmp
add
test
pop
mov
hlt
sbb
test
cmp
xchg
push
arpl
inc
clc
lds
mov
xor
aas
call
pop
in
sub
and
jl
push
jo
jge
ljmp
inc
and
cmp
cmp
mov
cmpsb
sub
pop
pop
cmp
and
push
xor
test
jp
pop
inc
lock
cwtl
test
mov
stc
out
je
iret
rorl
outsl
test
shlb
stc
daa
lcall
mov
in
scas
outsl
dec
inc
jnp
xchg
push
jnp
add
xchg
shl
out
dec
loope
push
xor
pop
sbb
push
cmp
scas
das
xchg
movsl
xchg
int3
xchg
subl
in
push
mov
repnz
xchg
test
or
dec
xchg
jns
sub
dec
out
cmp
fcom
push
pushf
inc
aaa
jo
cmp
pop
ret
mov
out
sbb
mov
out
xchg
es
lds
and
stos
pop
and
cld
mov
clc
pop
fs
inc
arpl
and
add
jge
cmp
push
addr16
push
cmp
jns
in
in
movsl
ret
push
sub
adc
mov
sub
shrb
or
rcll
clc
pop
pop
cmp
pushf
mov
jl
rcl
fs
movsb
cmp
repnz
cmpsl
std
js
jmp
sahf
mov
repnz
mov
jns
mov
mov
sub
adc
inc
movsl
cmp
out
cmpl
push
lahf
into
jecxz
cmp
and
sahf
jg
mov
fmull
xchg
addr16
scas
ret
mov
pop
mov
and
fdivp
js
mov
out
cmp
pop
mov
scas
test
es
inc
sub
in
xchg
push
into
fwait
int3
imul
test
shll
nop
xor
aaa
in
cmc
cmp
adc
fstpl
push
dec
mov
cld
shlb
mov
icebp
xchg
mov
sar
sti
sub
inc
xor
stos
sahf
cld
mov
mov
mov
inc
sbb
test
and
pop
bound
stos
fwait
in
push
jmp
cs
lods
es
ja
mov
push
shll
inc
shlb
ret
jns
sahf
sbb
cmp
icebp
in
pushl
repnz
fnstcw
jbe
mov
lods
jo
rcll
mov
xor
pop
mov
shrl
lods
jnp
repnz
sbb
cmpsb
ret
inc
popa
push
call
mov
aas
push
insb
jmp
add
mov
add
scas
rcl
add
ss
lds
pop
call
push
test
xor
mull
and
push
xor
jns
add
sbb
adc
lahf
inc
pop
fnstsw
arpl
aas
cmpsb
imul
loopne
mov
inc
iret
xchg
push
and
push
push
jnp
loope
push
addb
jg
call
and
jbe
mov
daa
add
flds
mov
and
mov
sarb
push
xchg
in
in
cld
in
mov
dec
inc
jmp
adc
mov
pop
sbb
cld
sbb
stc
std
mov
ret
andb
in
inc
mov
icebp
push
inc
mov
xor
mov
and
js
jns
pop
mov
sbb
or
ret
pop
adc
cmpw
jmp
or
sbb
sub
push
sbb
mov
lret
or
js
ret
mov
cwtl
loopne
jle
mov
jae
in
pop
stos
sub
rorl
jge
pop
gs
out
pop
or
jecxz
mov
sub
stc
and
pushf
push
jb
cmp
dec
xchg
mov
jns
in
sbb
push
mov
xor
pop
cmp
or
xchg
out
je
sub
movsb
cltd
xor
icebp
dec
and
ret
or
pop
xchg
loopne
sbb
addr16
pop
inc
lods
mov
jae
into
and
sar
repnz
mov
pop
mov
int3
mov
mov
fistps
sub
adc
sti
or
aad
mov
adc
add
adc
or
dec
cmpsb
jbe
aas
fdivl
repz
insb
jle
orb
int3
mov
es
cli
adc
inc
jl
shlb
mov
xor
adc
fnstsw
bound
sbb
xor
push
outsl
xchg
jo
movsl
in
cmc
adc
push
sub
ds
idivl
int
lcall
shlb
xchg
scas
jns
mov
mov
push
add
mov
dec
out
push
add
adc
addr16
pushf
loope
jae
mov
xor
mov
xchg
in
stos
call
and
jb
je
cmp
sbb
inc
pop
adc
add
pop
or
inc
add
aaa
subb
add
mov
sbb
mov
popf
lods
jae
cld
and
ret
sub
xor
mov
pop
sbb
xchg
loop
pop
rolb
div
push
dec
std
xor
sub
adc
fnstsw
xor
jno
test
or
jp
lds
and
ds
aad
push
fstl
ljmp
adcb
cmp
add
adc
cmpsb
inc
xchg
fs
dec
repnz
ds
lds
xorb
les
sbb
mov
and
ret
shlb
cmp
and
test
lds
mov
mov
lds
ds
cwtl
scas
cltd
movsb
fxch
lahf
jno
mov
ret
sbb
dec
jbe
add
pop
roll
adc
movsb
test
call
aas
xor
and
adc
push
in
aam
leave
mov
mov
les
add
push
pop
xchg
mov
std
cmp
mov
imul
sbb
repnz
jns
clc
mov
mov
mulb
fldt
and
lret
shl
mov
les
pop
mov
or
xchg
jle
mov
cmp
xchg
cltd
mov
test
enter
or
stos
jecxz
sub
pop
stos
imul
cmp
sbbb
lea
lcall
push
das
mov
clc
fisubs
mov
mov
push
in
push
lcall
scas
or
jle
hlt
adc
pop
jp
inc
sbbl
ret
sub
nop
into
adc
mov
or
adc
sti
pop
sarb
add
pop
inc
loop
fists
and
fdivr
cmp
ficomps
jne
lods
mov
and
int3
js
stos
xor
sbb
jne
xchg
xchg
int
leave
fstpl
aas
xlat
push
or
push
data16
sub
out
pop
outsb
xchg
out
sbb
and
and
sbb
iret
mov
stc
jp
cmpsl
clc
adc
sahf
and
push
movsl
fwait
mov
adc
jb
cwtl
mov
scas
fstpt
imul
or
in
pop
movntps
xchg
arpl
stos
test
in
mov
imul
cmp
shlb
inc
mov
push
fcomps
pop
jmp
and
mov
xchg
int
xor
inc
leave
and
aam
pusha
lods
mov
test
sbb
shl
push
shr
jl
outsl
ss
mov
mov
out
pusha
mov
jae
push
orb
fs
in
sbb
test
jae
repz
fs
aaa
enter
and
and
push
mov
add
hlt
out
fsts
ret
idivb
mov
cld
daa
sbb
push
es
loope
movq
dec
icebp
test
or
repnz
or
xchg
fidivs
xchg
and
xchg
cld
in
adc
cld
hlt
test
fsubs
pop
outsb
imul
cmp
adc
scas
out
jbe
scas
nop
popa
andb
inc
sub
repz
shrl
ret
and
fucomi
xlat
cltd
jecxz
fnsave
mov
shrb
adc
pusha
iret
inc
ret
push
mov
push
inc
loopne
jo
mov
mov
fldl
jmp
popf
aaa
sub
xor
sbb
stos
sti
pop
test
lods
bound
push
movsl
or
sub
add
les
repz
adc
mov
dec
and
bound
shl
pop
int
push
adc
jecxz
inc
adc
in
ret
or
insb
jne
test
sahf
jbe
jae
fwait
out
dec
pop
cmp
dec
call
loop
push
push
sbb
movsbl
cmp
and
mov
sbb
xchg
shll
pop
sbb
jge
xchg
dec
adc
add
xor
jp
in
jne
jp
pop
ds
jo
inc
cli
jnp
or
enter
repnz
and
sbbl
fstl
pop
jmp
stos
sahf
inc
xor
mov
xchg
fiaddl
mov
fldl
pop
lods
call
fcompl
push
jne
sahf
mov
pop
sbb
fiaddl
cmp
sahf
mov
ja
cmp
inc
push
jbe
jo
push
push
cmpsl
jg
dec
iret
and
dec
add
jge
mov
das
or
icebp
push
icebp
mov
int3
or
sbb
lock
dec
pop
lea
shr
push
lret
bswap
testw
imul
jae
xor
push
cs
push
sbb
out
mov
test
pop
push
or
pop
mov
and
jae
ds
rol
sbb
jnp
adc
cmp
mov
or
iret
xchg
inc
mov
xrelease
lcall
jl
add
aaa
dec
mov
dec
inc
pop
pop
push
xor
cwtl
mov
rolb
mov
or
cmc
lds
fsub
nop
push
rclb
pop
in
das
add
jb
sub
mov
push
fimuls
cmpsb
scas
push
cmp
stos
sti
subb
shlb
and
xor
mov
test
push
pusha
inc
mov
mov
clc
mov
fisttpl
mov
sbb
lret
jg
inc
scas
xchg
xor
jmp
mov
lcall
clc
rol
cmpsb
inc
xchg
addr16
popf
in
add
ret
outsl
dec
adc
test
repnz
fisttpll
pop
scas
rolw
mov
test
pop
aam
pop
add
movsl
fwait
icebp
xchg
or
fwait
sub
mov
cmp
jge
mov
iret
stos
loop
cmpsb
or
mov
ja
push
test
shlb
int
and
or
xchg
stc
sub
shrb
xor
push
clc
lods
push
nop
push
lds
sub
dec
cmp
inc
jae
sub
pop
pop
fiaddl
lret
xorl
lds
pop
pop
xchg
xor
cmc
adc
fadd
data16
lret
aad
pushf
icebp
aam
add
adc
lea
mov
adc
xchg
add
mov
xor
fwait
sub
mov
in
mov
sahf
inc
mov
pop
and
addr16
jmp
hlt
or
insb
jle
stc
xor
xchg
sbb
int
pop
sbb
add
jp
mov
push
decb
add
add
xchg
mov
popa
xchg
mov
lods
jp
add
push
cli
pop
lock
rcl
lret
insb
push
pop
call
movsb
fwait
pop
mov
push
inc
andl
jbe
pop
jg
push
mov
outsl
pop
push
and
mov
lock
arpl
rep
into
cld
sub
icebp
mov
mov
ljmp
cmp
daa
lock
jmp
push
fsts
pop
inc
rclb
sbb
push
mov
aaa
inc
ja
ja
cwtl
repnz
or
es
dec
sub
cltd
sbb
std
cmp
push
pop
dec
out
add
xor
imul
add
pop
sbb
cli
int
ljmp
incb
jno
in
or
sub
fisttps
jl
repz
fldt
arpl
sbb
sarl
inc
mov
dec
xchg
cmp
iret
int
jp
cmp
cmp
fstl
fnsave
mov
f2xm1
mov
ss
pop
jnp
decl
and
stos
xor
loop
shr
mov
jmp
cmp
mov
push
push
cmp
or
fildl
movsl
cwtl
and
mov
sub
add
dec
push
les
std
mov
cs
test
fsubrs
call
nop
imul
sbb
in
xchg
ds
lds
adc
add
add
inc
mov
or
add
inc
inc
mov
nop
fcoml
int
pop
add
in
push
lahf
fimull
fsubrl
lods
int
out
xchg
int
pop
cmp
and
ja
in
pop
jns
lods
lea
sbb
in
cld
sets
push
add
sbb
sub
xchg
push
lds
dec
pushl
mov
dec
add
sub
mov
push
lods
cmpsl
mov
sub
xlat
decl
mov
sbb
sti
fsubs
mov
xorb
cmp
mov
mov
or
or
mov
rol
cmp
out
xchg
mov
cmpsb
and
add
repz
int3
mov
loope,pt
adc
or
mov
xorl
ret
cmp
mov
hlt
enter
mov
and
pop
pop
add
imul
push
pop
loopne
and
xchg
inc
movsl
imul
jmp
jmp
daa
ret
push
and
push
aad
andl
inc
pop
jecxz
fidivs
dec
shrd
fwait
iret
out
js
inc
inc
lret
loop
popa
dec
iret
fidivrl
dec
sbb
add
mov
xchg
xchg
mov
pop
mov
shl
pop
cmp
lods
fdivl
lret
outsb
into
daa
cltd
mov
push
and
xorb
inc
push
sbb
dec
gs
lods
or
dec
sbb
aam
pushf
loope
sub
mov
out
mov
xchg
mov
push
add
rolb
addb
mov
stos
pusha
cmp
repnz
push
leave
add
fisubrs
pop
mov
adc
scas
jecxz
inc
stos
xchg
cld
andl
test
mov
enter
mov
or
cwtl
outsb
inc
loop
cmp
mov
jnp
out
push
repnz
mov
mov
and
add
fbld
or
stos
dec
xor
mov
subb
clc
es
adc
xor
fst
ljmp
test
jle
aad
mov
fcmovnu
data16
cmc
adc
mov
mov
out
and
cmpsl
addr16
cmpsl
and
imul
jnp
jo
in
ficompl
xchg
xor
cmp
push
movsl
mov
into
inc
jle
lahf
int3
scas
mov
cs
sub
bound
mov
lds
ret
lds
ret
pop
cli
dec
popf
mov
pop
dec
sbb
les
lods
xor
mov
pop
mov
and
outsb
sbb
sti
xchg
mov
pop
pop
cwtl
mov
xorl
adc
in
ljmp
pop
loopne
or
sbb
push
push
dec
ss
mov
mov
pop
dec
cmpsb
scas
daa
adc
cwtl
pop
int
pop
sbb
xchg
ds
mov
loopne
mov
mov
sub
xchg
or
aas
adc
mov
pop
imul
mov
and
sarb
inc
sbb
cld
mov
jne
hlt
shll
and
push
iret
scas
fnstcw
jo
fwait
mov
das
pop
stos
fistpl
stos
je
push
inc
mov
in
shlb
outsl
aam
roll
jl
push
and
mov
jge
add
fmuls
repnz
cmpsb
xchg
mov
scas
adc
sbb
mov
push
xchg
enter
pushl
std
mov
or
dec
xchg
xlat
pop
jne
roll
rorl
mov
stc
push
enter
bound
cli
clc
cmp
sub
ja
xchg
push
and
ds
sbb
mov
xchg
add
call
push
or
sub
mov
pushl
xor
push
lods
inc
mov
sub
or
and
daa
or
sub
adcb
add
inc
jnp
fwait
in
adc
push
sbb
addr16
sbb
xor
mov
fisttpll
and
cwtl
loop
jp
es
mov
pushf
push
push
popf
sbbb
repz
cltd
mov
insl
xchg
sbb
lret
imul
je
out
cmp
mov
add
push
sti
fisubs
xchg
subb
out
jmp
cmp
add
xor
pop
imul
mov
jg
mov
or
cmp
mov
pop
mov
addl
pop
push
add
lret
js
fwait
mov
sbb
outsb
loope
test
sub
jne
and
rcrb
xor
mov
inc
scas
mov
sbb
sarb
ss
xor
clc
jnp
loopne
cmp
add
jne
push
mov
movsl
and
les
int
push
stos
xchg
in
jbe
fucomp
movb
je
and
daa
dec
add
dec
add
push
sbb
sub
cmp
push
outsl
cld
push
xchg
jecxz
insl
pop
dec
pop
mov
mov
sub
stos
mov
sbb
call
push
movsb
push
mov
add
bnd
push
fwait
bound
adc
xchg
adc
cmp
push
pop
jno
repz
addr16
sub
mov
jp
int3
out
sahf
xchg
xchg
add
push
pusha
imul
pop
cwtl
xchg
xchg
testb
mov
or
nop
mov
stos
pop
inc
pop
xchg
or
xor
add
push
dec
sbb
test
jle
push
and
mov
idivb
in
mov
fistpll
sub
ljmp
mov
cmp
adc
loope
out
pop
mov
mov
arpl
sub
sbb
adc
flds
outsb
xor
jge
xchg
mov
ljmp
mov
xchg
ljmp
repnz
orb
pop
push
xchg
cmp
arpl
inc
fldenv
push
pop
scas
scas
stos
inc
inc
push
shl
into
js
sbb
dec
into
add
sahf
or
fstpl
inc
dec
jne
and
or
push
mov
lret
int
enter
adc
leave
rolb
out
iret
sub
outsl
aam
out
or
roll
xchg
les
outsb
neg
mov
mov
xchg
mov
fwait
jne
add
mov
pusha
sub
inc
addb
sbb
les
mov
mov
fildll
lcall
sub
cwtl
stos
mov
adc
les
xchg
pop
ss
xchg
adc
aad
xor
stos
mov
and
inc
inc
int3
jge
lods
mov
lcall
pop
jbe
inc
arpl
clc
lret
loop
adc
fdivs
fimull
sub
pop
sahf
aad
jmp
flds
fnstenv
in
mov
stc
pop
mov
or
insb
mov
movl
or
pop
imul
push
in
mov
xchg
shrw
sbb
call
cmc
cli
mov
adc
pop
cld
xor
imul
cmp
add
push
mov
jnp
push
lods
xlat
and
sub
pushf
pop
clc
stc
into
test
jp
xor
and
test
pop
cmp
call
inc
lret
or
xor
cmpsl
out
into
or
xor
jbe
scas
xchg
out
push
in
imul
fdivrs
shl
mov
stc
and
jo
lcall
and
dec
xor
jno
outsl
add
dec
jmp
mov
add
and
enter
lea
jo
mov
pop
scas
cli
ja
ds
js
testl
addr16
fistps
and
and
pop
repnz
ret
lods
jmp
pushf
xor
push
in
imul
or
adc
cwtl
scas
add
push
sub
dec
hlt
sti
inc
out
sub
cmp
jl
ja
in
imull
sahf
xor
or
push
es
push
lret
in
adc
push
push
or
and
stos
pop
xor
xor
jae
and
cli
mov
xchg
ljmp
mov
data16
jno
and
ret
pop
pop
mov
mov
dec
fwait
and
xor
stc
push
jg
loop
mov
sahf
adc
pop
mov
xchg
xor
jl
imul
lock
in
rorl
mov
jmp
inc
int
call
fstpt
sub
movups
push
icebp
pop
icebp
neg
fmull
sbb
das
pop
je
pop
pushf
xchg
fsub
lret
gs
cmp
dec
stos
out
xchg
test
dec
jb
xor
pop
andl
lods
jp
sub
mov
inc
cmpsl
cwtl
fsubr
pop
sub
scas
adc
xchg
addr16
cwtl
outsb
les
fisubrl
push
mov
repnz
jnp
sbb
jl
jecxz
dec
lock
push
sub
sbb
imul
movsb
popa
mov
inc
or
jl
pop
fsubrp
or
fs
arpl
xchg
or
fnstsw
lods
push
dec
sbb
orl
sbb
ljmp
int
into
lahf
lret
and
fldenv
fcomi
or
pushf
jle
pushf
jle
xor
call
dec
mov
rolb
jno
das
addr16
iret
aam
popf
xor
lods
aas
xlat
push
ds
bound
stos
mov
sti
jns
sbb
dec
leave
and
and
jle
pusha
add
imul
cmc
repnz
je
dec
popf
cmpps
jnp
jl
jne
in
repz
and
fldcw
loope
mov
dec
push
lods
xchg
xlat
xor
jecxz
jg
aam
imul
cld
inc
and
rorl
and
sub
cmc
movsb
cmpsb
jnp
dec
insl
adc
adc
fnstsw
push
movsb
icebp
push
ja
js
movsl
jmp
sahf
lret
sbb
test
sub
inc
adc
divb
jmp
adc
imulb
mov
sbb
jbe
fisttpl
jecxz
jns
stos
sub
and
cmpsb
xchg
fcom
shrb
movsb
cli
xchg
arpl
mov
mov
pop
xlat
data16
sti
push
sub
cwtl
enter
add
pop
test
xchg
mov
mov
lret
movsl
test
ss
imul
out
adc
add
cli
push
xchg
add
pop
dec
push
pop
xor
jmp
popa
cli
xor
sbb
insl
into
cmc
stos
je
aam
mov
inc
jmp
and
ja
adc
leave
stc
cmc
cmpsl
jle
imul
out
ret
mov
mov
orl
out
cmpl
add
rorl
out
sbb
or
std
push
xor
dec
rclb
lods
push
les
in
mov
lcall
cli
pop
lahf
daa
ret
je
xchg
lcall
inc
cmp
sbb
pop
cmpsb
cmp
xchg
push
push
in
lock
pop
sub
dec
shl
push
sbb
rolb
lss
xor
jb
pop
in
jmp
insl
sbb
cmc
sbb
decb
es
pop
test
aam
fcmovb
std
add
mov
fwait
lods
mov
cmp
xchg
xorb
cwtl
iret
jne
adc
jnp
adc
pop
mov
add
xchg
mov
cmpsb
addr16
jl
arpl
scas
out
js
mov
add
adc
mov
jb
push
xchg
in
outsb
xor
cld
ror
les
iret
xchg
add
call
mov
xor
sub
inc
cli
push
test
cmp
lret
add
out
mov
jbe
jp
ljmp
mov
or
sbb
shl
cli
add
xchg
pop
outsl
sahf
pop
pop
mov
cmp
int3
clc
popf
nop
mov
paddusw
fwait
mov
or
adc
inc
add
push
popf
cmp
fidivs
adc
arpl
xchg
mov
les
lods
mov
sahf
aam
dec
jne
push
clc
call
sbb
rcrb
ljmp
inc
loop
test
jns
fwait
repnz
or
or
xor
pop
xchg
push
test
inc
dec
and
call
cmp
mov
jl
push
push
out
mov
out
mov
popa
cmp
jns
popa
sti
adc
xchg
loope
pusha
push
add
jge
jns
pop
subb
cmpsl
ret
mov
adc
movsb
or
dec
out
jo
xchg
jp
inc
pop
pop
jl
aam
popa
loope
add
pop
into
ret
pop
mov
jb
ret
out
inc
inc
fisttpll
jo
adc
sub
dec
xchg
mov
xor
sbb
xchg
and
mov
pusha
jle
dec
js
stc
addr16
fstpl
lock
scas
sub
cmpsb
hlt
fadds
jge
cmc
dec
mov
pop
pop
adcb
ds
or
cwtl
cmpsb
push
rcr
sti
jle
mov
push
stos
movsl
out
adc
insl
push
mov
mov
pop
fildl
adc
sbb
imulb
jp
ret
stc
add
add
inc
xlat
call
inc
xchg
movl
jne
in
cltd
sub
popf
mov
xor
fs
call
pop
inc
sub
mov
iret
sti
mov
mov
and
xchg
xchg
sub
adc
mov
enter
fst
jb
mov
xlat
or
je
pop
stc
push
mov
cltd
add
push
or
sub
cmc
add
testl
and
stos
ror
push
pop
mov
cmp
xchg
mov
sbb
mov
aaa
bound
ss
je
mov
xchg
fs
mov
xchg
jmp
or
pop
mov
sbb
in
push
and
xlat
pop
enter
inc
std
test
fs
pop
pop
sbb
movsb
and
aad
pop
or
test
sbbb
push
push
cwtl
dec
mov
hlt
xchg
and
pop
add
mov
test
inc
icebp
dec
roll
fcmovnb
cmp
loopne
add
test
or
ret
sub
jo
cmc
cmpsl
sub
xlat
or
in
cmp
jno
mov
sbb
dec
je
sub
jo
out
lds
sub
cmp
cmp
aam
pop
jo
mov
fwait
push
mov
andl
insl
jne
ret
push
loop
sub
mov
cmp
aaa
dec
sarb
fildl
mov
into
data16
xchg
jno
jg
sbb
fsubrs
add
push
dec
sub
mov
push
insb
adc
lret
test
mov
in
rclb
test
out
mov
fwait
sti
xor
mov
bound
mov
fdivrp
in
pop
cmp
sbb
dec
jge
dec
pop
xor
jb
sbb
into
and
adc
inc
push
test
hlt
xor
xor
cmp
jnp
and
push
insb
aam
repnz
dec
addb
push
andb
adc
in
ljmp
loop
jp
push
cmp
dec
mov
cmpsl
inc
jp
es
inc
sbb
xchg
and
or
jg
and
roll
add
adc
pop
adc
out
lahf
and
lock
sub
cld
add
add
cwtl
les
add
xor
lret
daa
and
sti
ret
push
mov
mov
enter
mov
aas
mov
iret
mov
mov
push
xchg
and
jbe
shrb
inc
rorb
dec
iret
or
adc
aad
push
mov
push
ret
adc
mov
scas
stos
rorb
push
sbbb
das
outsb
add
jae
or
adc
dec
adc
xor
or
jp
pop
insb
push
pop
es
dec
stos
mul
scas
nop
in
cmpsb
repz
xor
lahf
repz
daa
mov
in
cmp
loope
js
pop
dec
xor
inc
pop
fldl
mov
dec
xchg
je
nop
imul
mov
push
call
outsb
mov
adc
out
push
bound
mov
mov
outsl
cmc
xlat
push
push
stos
lods
and
sti
jmp
addr16
fadds
out
cmp
pusha
sub
cmc
jno
aad
push
daa
jecxz
lcall
and
xchg
jg
inc
add
inc
arpl
decb
ljmp
sub
push
repnz
lahf
push
lods
aad
jbe
jnp
inc
push
cwtl
and
loope
inc
adc
pop
fcompl
je
sahf
sub
push
add
in
repnz
cmp
xchg
ds
sub
call
sub
mov
cmp
mov
sbb
andb
add
cmp
fs
mov
popf
and
mov
xor
enter
add
data16
les
pop
pop
dec
xchg
and
fldt
je
ds
xchg
mov
mov
xor
sahf
jns
xchg
hlt
mov
jg
movsb
lcall
pop
rorb
inc
mov
xor
fldcw
mov
xorb
mov
scas
cmpsb
xchg
xchg
pop
outsb
or
xor
inc
stc
leave
adc
jg
xor
xor
loop
sub
sub
lea
add
jne
mov
cwtl
sti
lret
rcll
cmp
mov
jge
mov
addr16
inc
xlat
movsb
stos
pop
cmp
xor
sarl
shrb
aam
xor
out
out
or
add
xor
lods
jl
js
mov
jne
rcrb
xchg
adcb
das
icebp
gs
sub
and
and
stos
xor
data16
and
xor
movsb
adc
fildl
stc
push
aad
aam
subb
or
mov
jp
movsb
jl
mov
pop
pop
arpl
test
ret
add
add
push
ret
and
test
cmp
lcall
add
daa
inc
jo
mov
xor
les
aam
sbb
push
js
push
insl
fiadds
and
pop
adc
ret
sub
out
insl
xor
jo
adc
stos
jmp
lds
imulb
sub
xchg
adc
xchg
loop
push
subl
mov
sbb
test
add
dec
dec
mov
jge
adc
cmp
je
lea
mov
lods
xchg
cwtl
sti
lret
jmp
hlt
mov
cwtl
sbb
and
sbb
pop
and
push
rcrl
jns
test
sbb
dec
jae
adc
inc
lret
xor
sbb
cmc
dec
int
cmp
xchg
jmp
test
fidivrl
cld
cmp
or
das
out
or
dec
pop
inc
push
rcl
push
insl
mov
movsb
scas
out
push
or
adc
popa
into
xlat
pop
xor
or
imulb
pop
push
cmp
push
fstl
cmpsb
xor
inc
cmp
add
and
pop
jno
pop
cmp
mov
jns
rolb
inc
das
mov
fwait
and
sahf
pop
nop
data16
mov
sbb
dec
cmp
xchg
mov
gs
lods
clc
testb
add
or
mov
ljmp
and
xorl
notl
lahf
jo
insl
xor
test
data16
jg
scas
cmp
fs
xor
fcomps
pop
xchg
flds
call
xor
and
out
mov
out
int3
sbb
jo
and
push
dec
pop
sbb
aam
jecxz
jbe
icebp
xchg
mov
inc
pusha
je
ret
jle
add
imul
pop
clc
sbb
or
js
shrb
subl
inc
dec
cmp
mov
sbb
add
jecxz
cmpsb
pop
and
jne
movsb
pop
call
sbb
imul
pop
inc
imul
dec
and
lea
lret
stc
lds
mov
test
cltd
mov
mov
or
fsts
fsubrs
enter
fsubr
inc
and
mov
add
adc
movsl
jns
jnp
je
es
lods
fmuls
or
push
jbe
sub
outsb
hlt
loope
sbb
inc
jno
jge
stos
inc
dec
ret
jns
mov
jno
in
lcall
lea
mov
inc
xor
fwait
pop
loope
or
sbb
pop
dec
and
dec
dec
jnp
dec
inc
sbb
shl
aaa
cli
mov
fcmovbe
mov
iret
rol
or
and
push
pop
jo
cmpb
pop
dec
inc
pop
test
inc
and
int3
or
xor
xchg
push
inc
push
aaa
loope
add
cmp
cltd
insl
test
fsubrp
into
into
repz
push
push
sbb
jo
ss
or
xor
fcmovbe
ficoml
js
mov
inc
iret
jno
repnz
pop
xchg
addr16
dec
aad
mov
or
mov
fisubs
cmp
js
lcall
or
push
outsl
cli
lock
push
xorb
leave
ret
shlb
out
dec
in
inc
in
mull
and
pop
in
out
xor
sub
mov
xchg
enter
sub
cmp
insb
fnstcw
mov
jb
aas
fcompl
sarb
scas
gs
mov
jnp
xor
daa
inc
outsb
and
push
mov
stc
cmp
xchg
adc
pop
add
pop
push
fucom
repnz
inc
icebp
sbb
push
mov
loopne
pop
test
mov
or
in
clac
add
adc
sub
mov
mov
mov
and
jl
in
pop
int
inc
adc
enter
in
add
or
pusha
aas
popf
loopne
daa
jne
cmp
hlt
push
outsl
js
xchg
lahf
das
jle
mov
pusha
fildl
mov
aad
push
aas
cmpsb
jbe
bound
add
and
xchg
mov
xchg
pcmpgtd
cmp
cmpsb
add
xor
gs
fsub
mov
adc
pop
or
bound
rcr
jmp
ret
jmp
sbb
push
jne
iret
mov
add
or
loopne
popa
jne
hlt
sub
xchg
adc
fcomi
out
stos
push
sub
jno
xor
xor
add
outsb
jbe
movsb
cli
leave
xchg
push
xchg
jecxz
subl
mov
xchg
push
outsb
lods
fwait
pushf
cmpsb
and
sbb
pop
ret
out
sbb
dec
nop
pop
sarb
clc
movsb
or
fwait
enter
push
sbb
lret
and
mov
push
push
sbb
out
ljmp
cwtl
xorb
dec
daa
sbb
in
sub
shl
and
cmp
fsubrs
pop
ss
sti
nop
push
adcb
and
sub
data16
mov
mov
and
push
inc
xchg
pushf
fldcw
dec
fistps
out
ja
mov
mov
shlb
pop
out
stos
mov
dec
sub
mov
cmp
cmp
std
sbb
fmull
mov
out
inc
or
or
or
cmpb
xchg
pushf
imul
push
fcoml
add
lcall
popf
dec
clc
jg
dec
xlat
add
xor
mov
lret
xor
adc
test
lcall
imul
mov
les
cltd
jl
dec
dec
psubsb
aam
mov
pop
pusha
aaa
imul
loopne,pn
imul
and
cwtl
pop
push
and
push
fs
insb
daa
cmc
flds
lods
push
xor
popf
or
jmp
mov
fstpt
rolb
pcmpeqw
push
fcomps
cmp
pop
mov
mov
out
aas
arpl
add
mov
push
sbb
lret
sbb
mov
push
dec
xchg
orb
sbb
inc
test
xorb
jp
mov
or
jmp
les
mov
cmp
xchg
cmp
repz
pop
cwtd
inc
jb
ss
mov
stos
add
mov
call
sbb
xlat
push
xchg
ja
push
mov
push
mov
movsb
mov
das
xor
and
mov
xchg
sar
pop
lea
dec
cltd
jcxz
fbld
in
or
outsb
out
lds
adc
pop
in
push
ret
xchg
jmp
fdivrp
popf
dec
dec
in
jl
nop
and
bound
std
mov
inc
cmpsl
push
jo
pop
xchg
fs
xchg
je
das
pop
inc
xlat
test
repz
clc
xchg
mov
sbb
fisttps
stos
adcb
jno
adc
pop
aam
stos
jle
jl
sub
mov
ds
loopne
in
xchg
and
cmpsb
push
loope
jmp
sbb
ds
pop
stos
test
jge
mov
cli
xor
adc
bound
jnp
ret
dec
fdivrl
pushf
in
cmpsb
scas
sbb
inc
sbb
fs
hlt
out
adc
les
aad
mov
out
es
and
es
sbb
je
popf
std
imull
scas
in
jns
std
sarb
sub
inc
dec
push
sbb
int3
jne
inc
or
adc
inc
je
shl
or
inc
lods
mov
shll
inc
gs
stc
mov
fnsave
je
mov
in
jbe
outsl
xor
xlat
jo
add
xchg
mov
aaa
cmpb
lods
data16
test
pop
jae
mov
in
mov
stc
cmp
jp
sarb
cmp
cmp
fucomi
aam
adc
push
cli
push
mov
dec
fcoms
cltd
in
mov
mov
call
jl
out
les
sub
push
sub
fsubl
push
or
or
es
fdivrs
aas
add
cmp
leave
push
fdivrs
sub
dec
or
mov
mov
or
or
popa
or
test
js
jbe
aam
adcb
and
mov
jge
xchg
repnz
rol
int3
dec
bound
lea
or
cs
shlb
outsb
jbe
xchg
pop
pusha
fsubrp
push
mov
gs
and
out
sub
adc
shrb
mov
std
xor
push
outsl
push
jnp
pop
clc
sti
aad
int
jo
nop
cmp
inc
jne
aas
mov
inc
inc
push
sub
int
nop
shl
xchg
iret
outsb
adc
aaa
das
mov
mov
aas
in
adc
pusha
lret
aaa
jge
mov
dec
stc
fdiv
shr
inc
jns
ja
pop
lods
lds
outsl
pop
cmp
jle
addl
mov
icebp
daa
enter
ficomps
scas
add
sbbb
cmp
xchg
sbb
jmp
rorl
ret
mov
jne
inc
in
sub
sahf
inc
jg
ss
or
dec
shl
incl
cld
scas
fdivs
sub
dec
out
add
adc
notb
push
pop
mov
mov
mov
and
push
jbe
jle
jg
out
in
fisubrs
out
mov
lret
adc
push
cld
lods
push
or
pusha
stos
and
inc
add
xchg
dec
movsl
nop
cli
push
out
xor
xor
jecxz
add
and
push
repz
and
inc
push
sti
mov
lds
adc
pop
sbb
imul
lret
inc
movsl
test
or
dec
imul
pop
lret
inc
adc
sar
lea
mov
mov
cmpsb
jmp
insl
or
adc
mov
mov
xchg
roll
and
mov
dec
daa
bound
pop
push
ja
shrl
mov
push
dec
jo
pop
lahf
adc
mov
cltd
mov
mov
out
add
loopne
xchg
push
pop
add
xchg
in
xor
push
mov
sti
mov
roll
imul
loopne
push
fcmovnb
loop
and
aad
ret
add
push
lahf
ja
gs
mov
mov
jp
mov
mov
and
xchg
pop
pop
sbb
clc
inc
mov
call
cmp
jns
cmp
lds
out
ja
leave
inc
pop
ret
pop
cld
mov
fcmovb
jle
leave
fwait
mov
mov
xor
push
push
data16
add
jecxz
mov
xchg
cmp
out
or
clc
adc
mov
push
clc
das
cmp
push
mov
sbb
adc
lds
dec
and
mov
lock
inc
stc
mov
sbb
fiadds
adc
lahf
xor
js
cwtl
mov
fildl
cmp
jnp
test
gs
pop
adc
stos
movsl
enter
pop
sbb
xor
stos
movsl
mov
push
out
cmp
outsb
or
fdiv
and
adc
dec
shrb
xor
push
lahf
sti
int
cmp
push
jl
lock
mov
stc
jae
nop
jecxz
clc
rorb
or
pop
adc
gs
mov
js
mov
scas
lcall
or
push
push
mov
add
push
push
jge
dec
jb
inc
ficoml
cmpsl
pop
dec
enter
cmp
fnstenv
push
mov
and
xchg
mov
movl
js
cmp
test
scas
xchg
out
mov
repnz
in
xchg
popf
push
movsl
xchg
xchg
lods
xor
lock
mov
out
cmp
xor
inc
call
sub
push
insl
lods
aas
fistps
push
das
and
mov
scas
xor
dec
adc
or
mov
sahf
ss
std
or
cmpsb
loop
cwtl
mov
das
jp
sbb
es
push
lock
andl
jle
mov
test
dec
xor
push
out
mov
testl
test
push
or
cmp
jnp
ficompl
add
dec
out
enter
cmovg
fwait
mov
sub
push
inc
and
aam
aam
cld
popa
push
mov
stc
cltd
movsb
jmp
mov
cmp
testb
mov
pop
adc
imull
nop
lahf
shl
adc
sbb
push
adc
lods
push
pop
adc
js
test
or
and
sbb
push
pop
and
fcomip
test
xlat
sti
pop
pusha
stc
out
mov
jo
xor
clc
mov
rcll
mov
or
aas
inc
adc
in
mov
pop
stos
fildl
imul
hlt
jae
pop
ret
xchg
movsb
repz
lcall
mov
pusha
and
xchg
mov
push
cmpsl
test
jo
sub
mov
int
xchg
lahf
frstor
ss
test
loop
mov
lsl
lahf
insl
push
notl
dec
push
loope
ljmp
dec
add
seto
pop
out
js
es
adc
insb
out
js
in
insl
fiaddl
add
lods
fsubr
push
adc
and
cmp
loopne
insb
les
out
xchg
popa
pop
imul
out
jo
mov
pop
xrelease
inc
mov
adc
mov
pop
dec
lods
and
inc
push
stc
stos
inc
and
pop
dec
jo
xor
aas
fisttpll
mov
in
add
inc
cmpl
test
jg,pn
xchg
mov
mov
js
mov
ljmp
aam
inc
gs
jbe
mov
bnd
inc
pop
push
inc
xchg
sbb
lret
pop
loope
push
push
insl
in
mov
adc
movsl
mov
out
fldcw
mov
mov
pop
jg
inc
jbe
pop
mov
pop
fcoml
lds
fimuls
ret
iret
cmpsb
cwtl
cltd
inc
inc
jbe
and
test
ljmp
sub
mov
jnp
cmp
pop
add
pop
pop
mov
xchg
xchg
aas
stos
cmpsb
or
lcall
mov
or
adc
push
inc
pop
fidivrl
mov
loopne
add
inc
mov
aaa
inc
outsb
test
pop
nop
outsl
dec
stos
lock
shll
fstpt
call
sub
in
jg
fwait
jp
pusha
adc
loope
xor
imull
iret
test
loopne
jp
sarl
test
sub
and
or
loop
test
lahf
popl
idivb
lret
cmp
add
out
aaa
idivl
divb
jo
test
je
sbb
jl
test
iret
cmp
pop
xor
and
lods
cmc
push
notl
push
mov
jle
loope
aam
mov
cmpsb
or
lds
pusha
test
dec
add
lret
mov
test
pop
test
lds
dec
andl
aad
int3
loope
pop
add
inc
int3
ds
push
std
andl
daa
mov
or
inc
lahf
mov
cmp
sub
xor
and
mov
out
adc
jg
aaa
and
adc
fildl
and
gs
idivb
and
mov
mov
dec
movsl
mov
mov
xchg
inc
clc
test
imul
dec
fidivrl
mov
or
js
gs
iret
pop
pushf
dec
inc
ss
popa
mov
stos
nop
inc
push
popa
or
jnp
mov
shrl
ss
or
add
adc
inc
xor
pop
outsb
xor
mov
scas
out
aaa
mov
stc
ds
insl
dec
addr16
enter
cmp
enter
add
push
sbb
cld
mov
lods
sbb
int
mov
adc
gs
fcmovnu
test
scas
adc
stos
xchg
js
dec
enter
adc
in
fwait
mov
subl
push
scas
sbb
repz
insb
mov
cmp
add
sub
lock
inc
aad
daa
xchg
or
add
outsb
jno
mov
mov
mov
mov
adc
test
pushf
ja
out
rorl
aad
aad
inc
test
repnz
dec
loop
mov
cmp
xor
inc
inc
cli
stos
addb
scas
push
cmp
loopne
test
scas
fldl
lahf
in
jl
insb
adc
stos
push
push
cmpsb
ret
pop
xchg
shrl
leave
roll
fs
sbb
or
mov
mov
add
es
icebp
sub
or
inc
and
pushl
stos
ljmp
mov
gs
out
data16
cmpsl
enter
xchg
cmp
scas
pushf
pop
push
ss
jae
jmp
xchg
dec
inc
sub
loope
xchg
xchg
jne
jbe
push
or
pop
sarl
cwtl
fscale
mov
mov
cmp
sti
xchg
sti
sbb
sub
push
stos
inc
mov
xorl
aas
sbb
jmp
iret
mov
pop
scas
leave
add
sub
pop
fs
and
cmp
addr16
mov
mov
nop
shr
dec
sub
adc
mov
or
jl
test
pop
out
fsts
add
adc
sti
imul
in
fs
andb
sbb
or
cltd
adc
out
or
lret
cmp
xor
jmp
mov
jb
ds
insl
jge
enter
call
ror
fs
popa
loope
fdivp
and
test
or
cwtl
loope
dec
add
pop
add
inc
xor
add
pop
pop
pushf
idiv
cmp
adc
insl
pop
jecxz
lds
ljmp
adc
pop
adcl
or
push
xor
iret
inc
xchg
and
call
cwtl
dec
mov
cmp
loop
xchg
sbb
in
lea
cmc
loopne
mov
repz
adc
scas
xchg
add
inc
std
xlat
fstl
adc
into
imul
hlt
dec
adc
xchg
pop
add
or
sub
xchg
sbb
dec
sbb
cli
xchg
js
add
cmc
inc
push
fwait
mov
sahf
dec
out
jb
sarb
test
xchg
mov
xor
iret
cli
pop
je
repnz
push
adc
scas
adc
mov
scas
shrb
flds
pop
push
mov
ds
fcoml
lock
mov
ret
mov
inc
data16
jns
test
or
push
push
lcall
dec
es
ficomps
dec
cmp
outsb
inc
xchg
add
mov
pop
testb
je
cli
int
push
xchg
dec
add
xor
es
push
mov
cwtl
xchg
rcrl
inc
aam
add
adc
dec
test
ja
sub
jecxz
adc
aas
mov
mov
js
inc
imul
dec
sbb
in
push
out
xor
imull
or
sbb
jmp
mov
adc
fld1
outsl
or
and
pop
cmpps
pop
mov
popa
pop
pop
int3
and
jp
lods
xlat
xlat
xchg
xchg
cs
stos
mov
sbb
iret
movsb
add
test
int3
xor
rcll
push
lods
jnp
inc
sti
ss
sbb
or
mov
out
add
mov
dec
cmp
sbb
out
rcrb
dec
pop
ds
fildl
repz
dec
push
and
cltd
push
punpckhdq
mov
sbbb
out
pop
test
lds
loopne
cli
sahf
xor
inc
data16
lock
in
mov
xchg
jne
ljmp
aad
lea
push
loope
cli
jp
and
shll
cmp
test
addr16
ljmp
mov
lods
insl
test
xor
sub
xor
xchg
add
mov
jns
test
js
pop
shll
and
or
jmp
outsb
shrb
cs
into
add
movsl
cmp
sbb
test
insb
push
das
mov
jo
lcall
mov
inc
sbb
pop
dec
dec
out
stc
lcall
inc
pop
or
mov
repnz
out
xchg
mov
stos
sbb
gs
mov
movsb
bound
add
jmp
mov
and
jo
cmp
popa
ret
shl
scas
sub
outsl
or
mov
xor
cli
addb
loop
mov
inc
inc
push
mov
dec
ss
or
cmp
xor
cmpsw
sbb
jl
jle
test
cmp
shll
mov
xchg
out
pop
pop
add
movsb
aas
mov
and
sub
xor
jo
dec
xchg
jl
cli
push
into
ds
mov
popf
push
jp
sti
xor
jecxz
sub
lcall
test
iret
jbe
pop
mov
cltd
outsl
sub
enter
add
mov
mov
xor
xor
adc
repnz
enter
mov
loopne
cmp
lahf
push
inc
sbb
adc
dec
in
xor
jge
jp
inc
jbe
cs
or
xchg
jl
shlb
mov
dec
xchg
jg
xor
push
cmpsl
push
xor
shll
xchg
les
aaa
enter
test
add
pop
push
stos
add
or
push
push
cmp
stos
xchg
pop
lock
cmc
addl
add
and
fwait
sub
aad
in
loop
pop
sub
mov
and
push
dec
fisttpll
jle
pusha
fidivl
ret
out
sbb
sub
out
xchg
loope
aad
xorb
cmp
sub
sub
jp
stos
leave
test
ja
mov
adc
pop
call
sub
push
cmp
mov
jnp
mov
js
xchg
enter
push
aad
adc
push
mov
push
aas
scas
xchg
loop
adc
add
push
repnz
sub
sbb
pusha
cltd
aam
sbb
xor
dec
pop
in
fstpt
imulb
sub
add
xor
shrl
in
xchg
jns
pop
cmp
jae
addr16
push
jne
enter
and
mov
lahf
aam
enter
add
addb
jle
test
cmovno
pushf
mov
enter
pop
leave
mov
addr16
push
insb
dec
mov
sbb
ret
bnd
add
sbb
cld
sahf
daa
cld
outsl
jl
into
pushf
push
inc
jb
in
lcall
loope
mov
sbb
fdivl
in
andb
rep
add
test
xor
cmp
idivb
xchg
or
inc
mov
dec
filds
sbb
leave
loope
clc
test
fadds
jnp
fnsave
dec
xchg
jecxz
mov
rorb
xchg
jae
pop
jge
mov
inc
jns
dec
mov
movsb
or
dec
dec
xchg
int3
adc
jl
mov
cmc
add
divb
dec
adc
subl
aad
add
lret
jne
sub
lods
cli
shll
cmpsb
dec
jl
xor
sahf
sub
jbe
dec
mov
and
mov
pop
inc
mov
mov
into
mov
repz
mov
mov
je
sub
in
cmp
xor
or
icebp
mov
jl
mov
xor
mov
in
rclb
sub
lods
mov
aas
jae
pusha
pusha
inc
stos
movsl
outsl
aaa
mov
or
ret
sbb
fwait
outsl
or
jo
pop
or
jl
add
fcompl
lahf
and
push
jl
push
cmp
push
aam
pop
mull
mov
cmp
ljmp
push
ds
lods
push
call
sub
push
cmp
mov
xchg
fdivrl
xchg
repnz
mov
sbb
mov
aad
leave
ja
adc
imul
add
in
mov
jecxz
movb
jg
or
adc
pop
jae
cmc
data16
add
out
out
cmp
sbb
mov
cli
lock
mov
dec
sub
mov
add
add
repnz
stos
clc
push
das
jp
xor
movsb
sbb
and
jo
xchg
test
aam
cmpsb
xor
add
jne
lahf
push
sub
insb
fs
imul
cltd
popf
mov
push
xchg
mov
pop
mov
add
inc
mov
dec
mov
in
les
mov
lcall
add
arpl
push
mov
mov
movsl
lods
xchg
inc
add
pop
and
popf
add
or
cmc
mov
pop
sti
jno
test
out
adc
es
mov
jbe
push
add
push
cwtl
pop
adc
call
sub
cmpsb
inc
pop
add
jno
imul
adc
icebp
test
in
xchg
inc
aam
int
stos
add
adc
cmpsl
push
xchg
mov
mov
sub
sbb
gs
lea
push
xchg
out
dec
in
std
out
call
mov
cmpsb
mov
stos
inc
jns
in
sbb
jnp
call
jne
push
jne
roll
mov
and
push
sbb
decb
xor
ljmp
imul
mov
push
xlat
ds
in
mov
xor
fadd
rcll
rcrb
mul
jp
pop
jp
adc
aaa
loop
pop
xchg
lret
sbb
mov
popf
aam
mov
subl
lds
shrl
sbb
push
scas
mov
lods
jbe
sbb
cmp
add
addr16
jno
xchg
mov
ret
dec
int3
sti
jmp
xor
jae
mov
or
adcb
scas
add
pop
dec
mov
and
add
mov
dec
shlb
adc
adc
adc
sub
mov
subb
std
in
call
insl
mov
imul
xor
mov
mov
cld
cli
cmp
movsl
mov
arpl
stos
lods
lock
mov
mov
mov
mov
or
pusha
outsb
push
add
mov
or
dec
sub
scas
test
js
dec
jb
sbb
add
mov
shlb
sbb
mov
push
mov
xorb
ds
mov
mov
hlt
mov
enter
icebp
ds
fwait
push
pop
push
shll
fs
leave
pop
push
and
dec
add
rcrb
shlb
jmp
sahf
cmp
add
fbstp
xchg
jae
xor
lods
je
jo
mov
arpl
cld
jp
shrl
es
push
cs
xchg
andl
push
not
fnsave
scas
or
inc
sysenter
mov
cmp
aaa
jg
sbb
jmp
push
cmp
and
xlat
test
imul
outsl
popa
push
fcos
dec
lds
rol
sbb
js
push
dec
push
inc
add
ss
int
int3
mov
imul
mov
cmp
or
pop
pushf
rcll
outsb
loop
es
push
push
jno
cmp
sarb
pop
mov
or
addl
icebp
adc
into
push
scas
arpl
movsb
push
xchg
mov
aaa
jp
stc
flds
inc
bound
mov
add
lahf
cltd
xor
aas
adc
push
lock
out
ret
dec
cmp
adc
or
adc
cs
flds
adc
test
lret
push
and
in
jnp
xchg
ljmp
fcoms
inc
mov
and
xchg
mov
out
xchg
aas
nop
adc
or
gs
cmp
int3
dec
ja
cmpsw
jo
stc
jne
subl
fadd
mov
or
xor
sub
stos
sbb
lock
xchg
xchg
lcall
xor
xchg
push
xlat
push
mov
pop
cld
lret
loop
xchg
mov
dec
xchg
mov
dec
ss
xor
pop
mov
decb
cwtl
pop
push
mov
es
mov
mov
jo
lock
cmpsb
pop
popf
test
lods
xor
pop
pop
pop
xor
insl
hlt
mov
aad
bound
pop
int
add
mov
iret
push
std
mov
loope
pop
test
push
inc
addl
xor
mov
pop
frstor
and
sub
xchg
xor
lcall
mov
mov
test
push
out
jae
es
pop
enter
add
sub
mov
loopne
cld
sarb
scas
stos
and
imull
mov
pop
iret
and
loope
cmpsb
xor
pop
lods
pop
sub
cli
mov
out
cli
xchg
or
or
mov
pop
inc
mov
push
xchg
js
jno
rcr
dec
lret
stos
mov
fsubrl
xchg
dec
out
es
pop
push
pop
aaa
test
mov
int
sub
je
test
sbb
sbb
xchg
sbb
or
jecxz
pop
fs
inc
stc
jbe
hlt
xchg
adc
out
inc
into
inc
data16
in
adc
inc
movsl
push
shll
fildll
push
ljmp
frstor
shl
int3
mov
inc
pop
imul
lods
pop
shlb
icebp
ljmp
jmp
and
jg
jo
mov
pop
test
adc
aad
fistpl
jns
popa
pushf
aad
jge
lods
push
sbb
addl
leave
xor
or
xor
xchg
pop
mov
push
aaa
mov
sub
mov
lods
je
fnsave
mov
ja
shrb
pop
lock
jmp
ret
push
push
inc
xlat
add
xor
push
decb
lahf
insb
inc
bound
xor
mov
add
std
testb
sub
fnstcw
stc
imul
out
push
scas
push
inc
loop
pop
push
jns
mov
movsb
in
sub
mov
mov
jo
aaa
imul
pusha
and
arpl
fisttpll
cmpsb
lsl
or
jecxz
orl
pop
daa
jae
and
std
in
rclb
adc
pop
cwtl
mov
xor
mov
mov
icebp
pop
jmp
jno
fists
dec
and
gs
data16
stos
insl
in
aam
scas
cmc
sbb
pop
imul
pop
add
popa
cmpsb
hlt
sarl
addr16
sub
or
jae
loope
lret
lods
lahf
push
mov
cs
push
push
in
ss
aad
jns
dec
sbbb
mov
out
xchg
add
leave
inc
sahf
jl
je
mov
rep
nop
lret
fcoms
pusha
push
repnz
xor
dec
inc
repz
das
push
cmp
jg
inc
roll
sub
aam
mov
orl
sbb
mov
mov
arpl
icebp
test
cld
push
jnp
dec
sbb
mov
xchg
xchg
mov
inc
gs
mov
dec
jo
and
movsb
in
inc
push
sti
push
aaa
push
xor
jo
jnp
or
and
ss
in
jnp
call
sbb
scas
clc
xchg
cli
push
jp
sub
lcall
xchg
dec
xchg
mov
sbb
jmp
aaa
icebp
loope
dec
out
lret
hlt
or
mov
addl
iret
xor
stc
cmp
mov
push
mov
cmp
mov
hlt
lds
std
test
add
sbb
or
and
fnstcw
stos
rcll
imul
das
mov
rcll
test
sahf
and
add
or
bswap
pop
jle
xchg
lods
add
lcall
sub
fnstcw
cld
xchg
push
pop
sub
scas
and
pop
fs
int
out
add
xor
iret
ds
add
fists
mov
mov
sbb
and
pop
daa
xor
xchg
jno
pop
xchg
jmp
xchg
outsl
idivl
mov
insl
sub
lods
xor
xor
mov
mov
xor
lods
pop
lock
xchg
cmp
dec
push
and
cmp
push
fnstenv
dec
mov
xchg
enter
cltd
cwtl
add
lret
inc
push
call
insb
sbb
outsl
pop
lds
lea
aas
xor
into
mov
mov
push
cmpb
push
ffreep
mov
test
mov
pop
push
cwtl
adc
repnz
xchg
cltd
lahf
fwait
jmp
in
fucomp
add
in
cwtl
cmp
andb
inc
pusha
sub
fwait
subl
out
aas
lock
sarb
int3
mov
mov
pop
push
addl
sub
repz
or
imul
xchg
clc
mov
and
scas
cmpb
psubw
push
inc
push
and
pop
push
lods
dec
out
imul
push
mov
fcomi
sub
sub
mov
mov
out
shl
xchg
movsb
and
in
mov
cs
sub
divb
repz
clc
xchg
incb
xchg
or
cmpl
sti
insb
in
inc
popa
imul
aaa
lcall
insb
sub
pop
mov
fisttpll
mov
adc
fiaddl
push
pop
adc
xor
arpl
adc
idivb
pop
test
dec
xor
lahf
stc
pop
inc
pusha
mov
shl
idivl
sbb
cs
sbb
pop
lods
inc
sub
aaa
sub
bound
ds
xor
flds
mov
jns
mov
imul
cmpb
xorl
out
icebp
lds
sub
pusha
mov
in
inc
out
xchg
out
push
add
cmp
das
scas
dec
mov
adc
xchg
test
rcrb
adcl
dec
insl
mov
std
lret
std
jge
mov
cmpsl
jb
lret
mov
fwait
mov
push
loopne
addr16
jo
mov
out
dec
fsubl
ffree
mov
pop
xchg
mov
inc
sbb
arpl
jb
fsubs
cmp
jno
mov
dec
cmp
or
mov
mov
out
pop
dec
pop
repz
and
and
arpl
mov
mov
add
xchg
loopne
sbb
daa
inc
xchg
sbb
lret
jle
dec
in
addr16
xchg
bndmov
add
and
jecxz
sub
sub
nop
mov
push
adc
sub
add
movsb
jnp
lock
adc
imul
mov
pop
pop
orb
or
ficompl
push
or
mov
mov
aas
mov
insl
or
mov
gs
scas
fadds
lds
xchg
adc
adc
neg
cmc
add
pop
inc
incb
pop
xlat
and
or
add
repnz
cltd
cmpsl
inc
xchg
mov
dec
xchg
fists
inc
push
mov
into
push
push
mov
es
xchg
std
xor
jns
jecxz
into
pop
jnp
mov
jne
push
pop
addr16
mov
sahf
mov
mov
pop
push
outsb
leave
mov
pop
or
arpl
cmpsb
mov
das
xchg
adc
mov
jne
push
cmp
pusha
les
fcoms
sbb
int3
cli
ficoml
sbb
push
mov
xchg
and
push
push
enter
or
sti
push
lret
or
push
movsl
mov
testl
push
bound
movsb
push
lock
out
xor
mov
sbb
add
jne
cmp
push
and
imul
sbb
cmp
lock
popa
xor
dec
xorl
fs
arpl
lods
int
ss
jo
nop
ret
mov
loope
cld
cmpsb
sbb
mov
adc
rcll
scas
or
mov
pop
adc
js
inc
jo
dec
sub
jp
mov
aad
xchg
dec
dec
cmp
aam
jge
push
dec
dec
dec
pop
dec
mov
push
push
inc
addr16
loope
xchg
pop
xor
lea
sub
in
jmp
aas
xlat
sub
inc
shl
jbe
pushf
mov
mov
aaa
push
dec
adc
fbstp
inc
jle
out
adc
xchg
in
mov
jg
mov
adc
lret
mov
daa
arpl
sbb
mov
shll
lea
push
xchg
and
lcall
ds
add
pop
sti
mov
push
and
cld
inc
int3
and
mov
mov
hlt
shll
clc
lcall
cmpl
jp
lods
xor
push
lcall
rol
cld
sbb
jae
push
sbb
pop
mov
inc
xor
dec
inc
ss
in
popa
pop
sti
mov
dec
xchg
dec
mov
pop
aad
bound
or
xchg
or
daa
jns
cltd
inc
outsl
jg
push
call
add
mov
rcll
out
bound
ficompl
scas
sub
add
out
jbe
js
test
in
cli
mov
xchg
xor
push
popa
mov
cwtl
fidivrl
xchg
mov
sbb
xchg
add
cli
push
call
imul
addl
rcl
in
mov
test
loope
jge
push
jo
movsb
fldt
mov
in
sbb
dec
adc
enter
add
cwtl
lods
stc
adc
movsb
inc
jmp
jb
hlt
inc
ja
test
loope
mov
mov
or
pop
pop
sbb
cmp
cmp
adc
cltd
adc
sub
faddl
in
test
and
pop
fsubs
das
push
mov
jb
push
ffreep
xchg
sar
cli
mov
or
xor
into
in
push
xor
cmp
sahf
cltd
fstpl
mov
inc
mov
in
aaa
sarb
or
fwait
dec
adc
out
rolb
incl
call
out
xor
push
mov
xchg
add
pop
or
pop
outsb
ret
aaa
rcl
add
in
and
adc
cmp
movsb
adc
jbe
mov
cltd
sbb
ror
jge
push
xchg
sti
lret
incl
xor
js
sub
sti
jle
xchg
or
std
stos
in
xor
sbb
divb
mov
mov
lock
sbb
dec
movsl
push
js
dec
movsb
aad
jbe
gs
sub
into
push
pop
decl
cmp
imulb
push
cmp
xchg
aad
sbb
movsb
push
in
and
in
jp
pop
sub
rol
ljmp
idivl
xchg
scas
push
outsl
test
inc
push
sbb
mov
jecxz
fwait
push
test
cmp
cmpsl
fnstcw
data16
insl
and
push
xor
sub
jns
cli
xchg
loope
test
cmpsb
shrb
cld
pop
push
fisubl
mov
adc
sbb
inc
mov
sub
loope
push
or
mov
inc
dec
pop
std
stc
scas
cs
inc
xor
jo
fsub
pop
xchg
bound
pop
pop
jnp
negl
xchg
pop
and
shlb
loop
xchg
test
int
sub
xchg
inc
pusha
push
add
pushl
lcall
orb
or
pop
enter
cmp
or
or
pop
xchg
aam
mov
stc
daa
pop
in
shll
mov
mov
jnp
xchg
cmpsb
sbb
adc
cmpsb
push
sub
scas
repz
jge
push
pop
sbb
imul
fsubrs
xlat
lea
mov
sub
mov
push
pop
repz
popf
push
icebp
jnp
sbb
pop
jmp
mov
dec
jo
and
ss
xor
stc
clc
lret
xlat
les
std
push
fmul
aaa
cmp
xchg
int3
out
jl
lods
xor
pop
and
js
jecxz
das
iret
insb
jge
mov
dec
mov
mov
ja
and
mov
pop
mov
mov
fcomps
sbb
mov
xchg
stos
xchg
test
fmul
sbb
jmp
gs
out
shll
rcr
xchg
or
scas
sbb
add
testb
frstor
add
inc
sbb
sahf
mov
or
mov
jl
dec
mov
pushf
xor
addb
cmpsl
jne
cmp
pop
popf
stos
jmp
ja
sbb
dec
cmpsl
push
out
xchg
cwtl
xchg
movsb
pop
or
xchg
inc
dec
mov
std
mov
enter
int3
dec
dec
xchg
cs
testb
sub
mov
dec
cmp
xchg
ret
rcl
cs
sub
mov
leave
ret
mov
push
lcall
xor
pushf
repz
imul
nopl
mov
insl
daa
cwtl
icebp
inc
negb
lcall
cmpsb
dec
jle
push
data16
mov
lret
push
cmp
jb
push
bswap
std
adc
iret
fistl
push
test
adc
xchg
jbe
xor
fwait
scas
in
insb
sahf
popf
mov
in
push
aas
mov
add
inc
pop
mov
push
mov
clc
fwait
inc
test
orb
data16
test
xor
imul
int
dec
or
sub
mov
sub
int
mov
sahf
xchg
test
add
loop
icebp
pop
testl
mov
cmpb
rcll
cmp
push
pop
cltd
xor
rcl
fsubrs
cld
rep
dec
repz
xor
std
pop
hlt
push
xchg
lock
adc
sub
pop
pop
xchg
mov
out
stc
cli
xor
lret
fdivrp
xorb
pop
xchg
popf
sbb
push
inc
jbe
jecxz
sub
imul
clc
shlb
push
adc
bound
enter
xchg
test
adc
or
aas
adc
xor
ret
lcall
cli
push
lock
xchg
cmp
xchg
mov
adc
pop
repnz
mov
roll
sub
dec
push
inc
push
sbb
or
push
xchg
sbb
pushf
insb
repnz
jbe
icebp
int3
push
filds
pop
dec
pop
insl
ja
fistps
jecxz
xor
popa
add
leave
adc
sbb
push
es
dec
push
mov
out
jb
dec
jb
lret
xor
jle
push
xor
outsl
adc
jnp
inc
cwtl
sub
mov
mov
lock
cmpsl
lock
cmpsb
inc
les
andl
adc
out
leave
inc
xchg
stos
mov
out
or
les
mov
out
loope
push
and
mov
or
push
jbe
sub
pop
add
cmp
sti
xor
cld
roll
int
or
inc
add
loopne
rcll
loopne
sub
pop
mov
xchg
xorl
add
das
les
cs
rorl
add
jno
mov
xlat
xchg
lods
in
stos
jl
push
lock
xor
cmc
imul
xor
lret
clc
vpcmpgtw
in
mov
dec
cs
test
inc
icebp
pop
pmaxub
out
imul
or
lret
pop
mov
mov
xchg
in
pop
in
and
xlat
je
sbb
inc
cmpl
mov
add
xchg
nop
div
adc
dec
aad
dec
movsb
fisttpll
cli
add
and
push
call
mov
fidivs
dec
imul
mov
push
in
loope
adc
xchg
jmp
or
mov
mov
rcr
add
push
in
decb
pusha
adc
dec
pop
cwtl
icebp
mov
mov
add
dec
test
popa
icebp
mov
jmp
scas
xchg
push
jge
outsb
pop
sbb
or
mov
add
inc
sub
aas
xor
mov
fistl
aad
imul
sub
testb
test
int
mov
pushf
popf
ss
cmpsb
mov
movsl
add
out
pop
leave
shll
dec
xchg
pop
inc
outsl
aas
inc
std
xor
inc
cltd
enter
sub
daa
out
dec
addb
pop
mov
pop
js
icebp
jmp
inc
out
imul
jnp
lret
popf
jecxz,pt
or
nop
push
sbb
lahf
mov
cmp
mov
and
enter
aaa
mov
sub
jb
clc
or
movsb
sar
in
jmp
insl
nop
or
adc
scas
stos
adc
pop
jb
inc
push
pop
loope
shll
fsubrp
iret
xor
adc
mov
iret
jg
movsb
cmp
gs
jo
xchg
xor
fidivrs
addl
jg
fistpl
sub
pop
pushf
mov
mov
outsl
aas
dec
in
jle
jp
insb
pop
push
mov
loopne
mov
mov
andb
ljmp
lods
pop
inc
xchg
cmpsl
push
repz
andl
or
mov
sbb
rorb
xchg
and
xor
es
leave
jae
pop
mov
pop
push
cltd
iret
lods
push
out
lret
lret
shl
adc
popf
scas
cmp
dec
cmp
ds
mov
mov
or
aad
and
adcl
mov
sbb
repz
lcall
cmp
and
push
cmpsl
inc
add
jne
stc
mov
push
enter
mov
push
sub
mov
dec
adc
jle
xchg
and
jg
cmp
xchg
mov
xchg
out
jp
repz
xchg
inc
in
jo
mov
mov
aaa
mov
sbb
adc
or
mov
rclb
mov
jns
mov
mov
out
and
mov
popf
and
adc
cs
hlt
mov
dec
test
fldenv
std
sti
inc
or
and
mov
lcall
mov
popa
cld
cmovb
push
and
in
data16
jo
fildll
int3
push
mulb
in
xor
pop
pop
movsl
loopne
js
cmp
mov
cmc
jg
js
inc
xchg
loop
mov
scas
sbb
dec
sar
cmovnp
mov
jl
rcrl
fldcw
imul
mov
mov
inc
popa
or
mov
sub
xor
mov
sub
adc
push
push
hlt
rorb
and
addb
das
out
xchg
xchg
stos
out
iret
add
xchg
test
int3
push
inc
outsb
cmp
or
mov
sbb
stos
lcall
jl
pop
arpl
jecxz
jp
push
test
dec
jns
test
or
rcrl
test
inc
xchg
mov
popa
ds
addr16
fsts
and
xchg
push
je
xchg
lcall
mov
je
testb
xor
loop
pusha
dec
xchg
mov
mov
ror
xchg
jp
adcb
sbb
cmp
dec
dec
lds
jp
je
jmp
inc
mov
jne
and
sub
xchg
sbb
js
dec
push
add
lods
mov
mov
lods
mov
movsl
dec
pop
shrb
fwait
jg
lea
aas
mov
mov
es
adc
xchg
out
inc
repz
jg
mov
ljmp
js
inc
pop
jb
arpl
test
cmp
ror
mov
cs
daa
insb
cld
test
cmp
jecxz
clc
inc
mov
jno
clc
mov
into
sbb
les
xchg
add
and
mov
out
adc
rcl
and
dec
jecxz
es
scas
clc
gs
test
mov
lcall
add
xor
mov
mov
adc
sbb
pop
or
inc
xor
les
jne
ss
mov
ret
jmp
testb
pop
jg
inc
rcrl
shl
mov
inc
jecxz
idivb
rcrl
mov
addr16
jge
fiaddl
cltd
and
cmp
sub
jecxz
arpl
test
xchg
sub
clc
js
loop
addr16
pop
ja
mov
fs
mov
xor
aam
jge
cli
lds
adc
das
cmp
adc
in
inc
not
add
xchg
xor
imul
movsb
movsb
push
fs
sbb
ljmp
call
jns
leave
mov
inc
pushfw
mov
mov
dec
aas
das
adc
orb
addr16
adc
xchg
repz
in
movsl
jp
adc
out
mov
jns
mov
and
xchg
call
dec
jmp
imul
jmp
aaa
mov
jp
dec
pop
jne
jbe
push
ret
dec
mov
ss
test
sti
stos
add
les
repnz
sub
aam
mov
push
push
movsl
or
dec
and
in
xchg
dec
mov
inc
into
cmp
icebp
push
sahf
cmc
xchg
aaa
add
inc
int
xchg
rolb
dec
int3
stos
xchg
fcoms
dec
dec
dec
jmp
sbb
call
xor
push
test
ja
pop
mov
push
popf
mov
jnp
and
push
push
into
xchg
pop
cmc
scas
jp
pop
xorl
es
add
arpl
add
lahf
pop
dec
adc
add
pusha
dec
rdpmc
inc
xchg
pop
sub
xor
or
or
cmp
addr16
xchg
call
and
fisttpl
notl
mov
dec
out
fcompl
ljmp
pop
sbb
push
mov
js
sti
mov
jmp
mov
adc
jne
add
cmpsl
dec
inc
repz
ficoms
pop
adc
fidivrl
mov
arpl
cmc
jmp
rcll
sbb
add
sbb
jae
and
rcll
fidivs
and
add
ds
push
cmpb
pop
sub
sarb
mov
adc
vmovups
je
inc
jb
xlat
inc
sub
jecxz
ljmp
shlb
mov
mov
pop
jge
loopne
xor
jo
xchg
shr
cmp
sub
adc
sbb
addl
sqrtps
pop
out
jmp
in
rclb
shl
test
mov
sub
cmovp
mov
add
dec
or
mov
dec
and
stos
push
and
add
and
jne
idivb
rorl
out
add
dec
push
les
dec
push
or
jl
and
dec
mov
mov
inc
jns
lret
pushf
push
jmp
cwtl
bound
cmpsb
cltd
jbe
xchg
enter
mov
sub
and
testl
gs
cmp
add
inc
mov
mov
sub
mov
xchg
cmpsb
lcall
cmpb
xor
mov
icebp
in
std
mov
jae
dec
cld
stc
pop
mov
adc
aaa
and
xchg
sti
ds
ficompl
inc
sbb
dec
sub
cwtl
aam
fidivs
ret
inc
sbb
inc
mov
lock
fadd
cmc
adc
insb
aad
addl
xor
cmp
jnp
mov
dec
test
inc
adc
test
shrb
repnz
mov
in
fs
std
sbb
scas
cmp
dec
push
test
dec
fs
push
and
dec
fldenv
sbb
pop
pop
or
inc
popa
cmpsw
subl
testl
jb
jmp
ret
or
ja
loope
cmpsl
pop
pop
push
imul
stos
or
jp
adc
jne
cwtl
fstpl
fwait
data16
sub
inc
pop
mov
cmpsl
nop
fldcw
or
xor
cmc
sbb
insb
js
xor
enter
pop
mov
lods
pop
sbb
xchg
mov
mov
mov
cmp
js
jo
bound
xchg
xlat
adc
mov
and
sbbl
jle
in
add
gs
push
push
cmp
cwtl
push
sbb
orb
mov
push
in
dec
sbb
insl
cmp
sbb
mov
roll
xor
fidivs
popf
mov
rcrl
sub
sub
sub
pusha
stc
icebp
and
dec
stos
dec
push
or
fsubrl
pushf
mov
repz
in
test
add
cmp
push
rcrl
jns
mov
push
sbb
cmp
jb
shl
mov
ss
jmp
arpl
fcomip
aas
inc
sti
mov
push
cmc
sub
dec
cmp
or
xchg
es
in
lret
add
lods
lret
jno
shrb
fdiv
mov
cmp
dec
cwtl
mov
ret
sti
and
push
aas
pop
dec
outsb
pushf
jl
int
pusha
add
rclb
inc
ret
dec
adc
adc
add
insl
xor
mov
mov
imul
into
loop
js
or
pop
pusha
xor
fneni(8087
ljmp
or
cmpsl
icebp
xor
lret
in
popf
push
sarl
mov
or
push
mov
xchg
daa
or
das
rcl
in
sti
rcl
inc
inc
xchg
test
std
stos
mov
adc
sbb
jno
cmc
sub
fstl
adc
aaa
mov
je
xor
jle
mov
stos
lahf
xchg
into
dec
imul
sar
scas
mov
stos
mov
push
ds
xchg
xchg
add
fists
and
mov
xchg
enter
jns
sub
addr16
add
bound
xchg
mov
cmc
pop
pop
es
add
add
loope
or
sub
pop
lcall
aad
xchg
sti
cmpsb
adc
orb
dec
das
clc
add
ljmp
dec
xchg
cmp
cmc
aam
push
mov
scas
fwait
lret
mov
outsl
addb
xchg
push
mov
mov
xor
pusha
incl
leave
sbb
mov
std
inc
cmp
aad
mov
jl
ja
adc
leave
repz
push
xchg
cltd
movsl
and
mov
dec
push
jb
clc
cmc
add
add
shll
inc
out
lods
pop
sub
mov
repnz
pop
or
hlt
mov
xor
adc
hlt
cmp
adc
mov
pop
les
cmp
pop
jmp
loop
insl
mov
inc
adc
mov
dec
in
clc
dec
fldt
push
sub
pusha
les
ret
test
lods
movsl
lods
iret
rorb
or
jle
cmp
sbb
adc
mov
dec
xor
pop
sub
ret
ja
inc
mov
or
cmpsb
jae
popf
mov
xlat
fwait
dec
repnz
xchg
pop
or
cmp
std
arpl
jge
xchg
push
mov
inc
aaa
jle
ficoms
adc
mov
pop
loop
lea
pop
push
mov
loope
out
fdivrl
sbb
imul
mov
imul
insb
and
mov
imul
std
into
mov
enter
jmpw
push
mov
popf
xchg
sub
push
jg
and
stc
orb
dec
fisubrs
push
adcb
pop
js
sbb
sub
arpl
inc
cs
out
dec
mov
sub
jae
cmp
jo
test
push
mov
jl
mov
loope
stos
push
add
dec
out
outsl
mov
inc
mov
les
push
mov
add
inc
lea
mov
cmp
or
jae
lds
xchg
stc
pop
das
mov
push
xchg
push
lcall
lret
movsb
cld
mov
repnz
std
int
xchg
cltd
imul
pop
loopne
xlat
jecxz
subb
dec
lret
xchg
inc
divb
lahf
mov
pop
sub
out
sbb
add
xchg
dec
xor
and
scas
icebp
fnsave
into
pushf
mov
adc
xchg
shrl
pop
mov
popa
pop
xor
insl
push
je
shr
sub
pop
ror
js
leave
lods
jb
jle
cs
ret
out
iret
mov
add
cs
xchg
test
cld
mov
xchg
jb
and
outsb
jecxz
or
add
cmc
pop
hlt
rolb
add
cmp
or
mov
dec
sbbb
add
jnp
jne
loope
mov
sub
aam
addr16
jno
add
mov
inc
dec
sbb
loope
inc
popa
mov
bound
nop
inc
mov
hlt
movsl
cwtl
add
push
pop
mov
cmc
push
shlb
pop
pop
dec
frstor
sub
jle
add
enter
and
je
aam
stos
scas
dec
out
mov
and
pop
sub
fninit
xchg
mov
mov
shl
or
imul
test
div
cmp
and
mov
notb
sbb
jb
fbld
fdivs
mov
mov
push
inc
sbb
push
mov
lock
mov
or
add
jns
test
inc
pop
adc
call
add
cmpsl
andl
adc
test
ret
fiaddl
pop
lea
push
sub
xchg
int3
jge
push
mov
mov
pop
fildl
fmull
pop
fldenv
cli
aam
push
xchg
ret
sti
cmp
cmpsb
loopne
push
ja
push
mov
sbb
jmp
inc
stos
or
push
ret
and
inc
jnp
xor
push
inc
inc
fcoml
mov
mov
pop
or
jno
sti
or
push
nop
dec
scas
and
or
int3
out
sub
cmp
or
push
imul
js
push
outsb
fidivl
sahf
jmp
dec
cmp
sbb
call
fmull
test
jmp
xchg
mov
mov
push
popf
xchg
lahf
jmp
aad
fsubrl
mov
popf
mov
cmpsb
dec
cli
stc
push
jg
mov
sti
sub
hlt
push
ficoms
lret
data16
mov
js
das
jge
movsb
push
sub
mov
sub
loopne
cmp
jb
and
mov
xchg
adc
push
cmpl
into
lods
andl
sbbb
stc
call
inc
mov
sbb
fwait
stos
and
outsl
adc
or
mov
and
aam
jecxz
sub
pop
cmp
mov
out
mov
popf
test
ss
jbe
pop
push
sahf
lret
mov
jno
xor
in
sbb
pop
incl
inc
jle
adc
lods
and
adc
outsb
in
imul
leave
dec
loopne
mov
dec
scas
adc
addr16
imul
lods
and
rep
stos
test
sub
jp
sub
jge
int3
pop
lods
movsb
fidivs
pusha
insl
outsl
or
mov
mov
test
fwait
adc
pusha
inc
jl
aaa
stc
jecxz
inc
mov
outsl
mov
in
movsb
sbb
xchg
repnz
imul
loope
xchg
mov
add
and
adc
adc
ret
cmpb
xor
test
push
insb
call
in
push
xor
cmp
popf
inc
movsl
pop
ds
aad
xchg
adc
mov
mov
dec
push
push
sti
lahf
sub
pop
and
mov
push
push
mov
out
je
push
fcomp
mov
std
lods
lods
fiaddl
xor
out
stos
mov
push
mov
and
adc
in
jae
mov
sahf
jmp
pusha
add
rcrb
or
scas
sbb
mov
fisubrs
sub
mov
xor
sbb
leave
xor
mov
mov
inc
leave
nop
add
repz
das
adc
pop
jo
mov
push
or
cmp
or
fisubl
fwait
roll
lea
sbb
adc
mov
out
mov
push
outsl
stos
leave
push
mov
and
cmp
sti
push
xchg
cmpsb
cmp
icebp
pop
test
push
or
push
add
fwait
dec
pop
jns
push
and
call
pop
adcb
pop
dec
sahf
shrl
out
or
pop
call
mov
roll
jno
xchg
adc
xchg
in
mov
fdivs
jecxz
push
sbb
push
call
sub
lcall
scas
lret
pop
push
into
call
addb
int
push
stos
loopne
add
inc
inc
out
sub
imul
jecxz
nop
lock
pop
test
stos
push
rcr
aas
std
lcall
pop
pop
pop
outsb
add
dec
bound
cld
insl
push
and
loop
dec
stos
dec
dec
sbb
lret
notl
add
fdivrl
or
movsl
mov
sbb
or
imul
or
jae
xor
lods
ret
sbb
lods
notb
dec
jbe
in
add
arpl
xor
dec
int3
dec
jo
push
add
jno
xor
mov
mov
sahf
loope
sub
in
cli
imul
fs
cmp
mov
jmp
fisubs
sti
xor
xchg
repnz
arpl
lret
fsub
add
and
daa
push
jg
sub
push
je
add
cltd
xor
adc
xchg
std
jecxz
mov
dec
or
hlt
insb
and
shll
iret
jnp
fisubrs
es
pop
cmpsl
iret
jne
fiadds
lock
rcrb
lds
andl
pusha
dec
rcll
loope
cld
lock
lret
shll
xchg
loop
xlat
push
and
jbe
xchg
in
dec
popf
and
add
jmp
scas
test
jns
sub
add
inc
add
add
add
dec
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
