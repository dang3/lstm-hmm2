jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
in
sbb
push
test
adc
inc
cld
icebp
and
mov
push
add
add
add
pop
add
add
cmp
stc
add
add
or
mov
add
add
add
mov
add
add
verw
add
lock
add
mov
add
pop
add
inc
add
add
add
add
add
aad
test
leave
add
xchg
test
inc
add
add
dec
add
add
add
add
add
cmp
inc
add
and
inc
add
push
test
mov
xlat
add
add
add
and
jl
test
dec
add
add
sub
or
dec
add
add
add
add
add
add
pop
add
add
add
add
sub
inc
add
and
and
mov
add
add
add
add
push
add
test
dec
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
xchg
push
add
add
add
add
dec
add
movl
mov
push
add
add
movl
dec
add
fwait
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addl
insb
add
add
add
add
add
add
add
pop
add
add
mov
push
add
dec
add
mov
or
out
add
add
add
add
or
dec
add
push
add
add
add
sbb
filds
push
add
dec
add
add
xchg
arpl
test
jmp
add
add
add
add
add
dec
add
add
lea
jnp
or
adc
xchg
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
inc
add
add
test
inc
add
popf
add
add
dec
add
movl
cltd
add
xchg
and
add
dec
add
add
add
add
add
lods
add
xor
add
push
add
add
add
and
sub
test
push
add
enter
aad
push
add
add
add
and
cwtl
add
add
add
into
add
add
add
add
and
push
add
add
add
add
dec
add
add
add
cmp
das
add
sub
and
add
add
sub
add
add
dec
add
add
add
lods
add
add
cmpsb
add
add
dec
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
pop
add
rolb
cwtl
add
add
add
add
into
add
add
add
add
add
pop
add
add
add
add
test
push
add
add
add
add
aad
sub
popf
add
sub
dec
add
add
in
push
out
pop
mov
in
mov
jb
int
inc
dec
out
push
iret
data16
push
mov
cmp
aad
jns
and
icebp
mov
mov
mov
hlt
test
pop
xchg
dec
scas
shll
xchg
pop
mov
hlt
enter
fldcw
aaa
sarb
mov
mov
decl
notb
icebp
cwtl
xor
cmp
fildll
mov
mov
xor
aas
pop
data16
push
clc
cmp
xchg
push
fsub
cmovno
mov
clc
xchg
inc
mov
xor
imul
mov
pop
push
add
ret
lods
push
int3
movsb
test
jne
jp
pop
jbe
inc
push
push
mov
adc
and
adc
sub
lds
and
mov
fisttpll
in
stc
cli
xor
jb
add
mov
movsb
shll
cmp
sar
jns
rcll
dec
dec
xor
dec
lock
inc
sub
movsl
out
cwtl
stos
inc
stc
dec
xor
mov
mov
push
mov
mov
dec
cmpsl
shrb
adc
cmc
push
mov
pop
mov
cmp
and
jp
loope
cld
aam
sbb
mov
mov
push
lock
hlt
cwtl
test
in
aas
mov
sbb
push
inc
adc
jae
cltd
aas
push
rclb
lock
flds
add
sbb
divb
inc
test
xchg
and
rcr
dec
dec
push
sub
jae
lahf
insl
inc
jp
movsl
into
rcpps
in
jnp
fdivs
ljmp
lea
mov
rorl
xchg
cmovbe
or
sub
xchg
jmp
cld
mov
push
jo
push
mov
mov
subl
sbb
popf
dec
nop
aam
add
into
adc
leave
push
enter
sub
inc
push
jne
mov
aad
pusha
push
mov
pop
das
mov
push
es
ret
mov
jbe
adc
add
inc
into
notb
sub
mov
cs
dec
aaa
loope
div
and
in
lcall
cwtl
insb
mov
jb
jmp
jmp
sub
pusha
dec
mov
sbb
loop
bound
xchg
cwtl
dec
in
sub
dec
aam
add
cwtl
fnstsw
and
fadd
inc
xchg
inc
cmp
add
inc
jae
lods
xor
and
loopne
pop
in
dec
cs
lahf
scas
cmp
and
xor
dec
dec
cltd
inc
ds
mov
dec
xchg
ja
fs
jl
loop
scas
popf
add
addr16
je
mov
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
mov
jbe
inc
cs
in
outsb
pop
sbb
or
sahf
out
idivb
cmpsb
iret
xor
xchg
xchg
push
pushw
jbe
inc
cs
pop
es
ss
outsb
push
sahf
out
xchg
ffreep
scas
fisubs
out
xchg
push
pushw
jbe
inc
cs
pop
es
ss
outsb
push
sahf
dec
mov
fbld
cmpsl
hlt
adcl
aad
outsb
aad
fcompl
pop
js
mov
call
popa
pop
cmp
dec
xor
test
hlt
add
push
jmp
jno
out
and
shll
pop
not
push
fwait
pcmpgtb
mov
cmp
out
inc
sbb
sahf
sbb
or
push
push
sub
push
jbe
jns
pop
fnstenv
cmc
push
mov
push
pop
daa
bound
sahf
mov
mov
inc
xchg
int3
popf
dec
out
jns
sbb
xchg
mov
cmp
jle
outsb
xchg
negb
sti
mov
lea
adc
out
push
mov
xchg
popa
xchg
pop
test
and
stos
mov
jno
xchg
out
xchg
inc
pushw
jbe
inc
cs
pop
es
ss
outsb
push
sahf
out
idivb
cmpsb
into
mov
xchg
ljmp
dec
jbe
das
pusha
aas
sbb
dec
or
cmpl
scas
lret
movl
je
inc
data16
outsb
sub
jno
push
int3
sahf
jecxz
cmpsl
lret
mov
scas
jecxz
push
cs
xor
es
ss
outsb
push
sahf
out
idivb
cmpsb
into
mov
xchg
xchg
push
pushw
jbe
inc
cs
pop
es
ss
outsb
push
sahf
out
idivb
cmpsb
into
mov
xchg
xchg
push
or
mov
jl
sub
mov
and
sbb
xchg
mov
xchg
adc
outsl
adc
pop
ret
sub
mov
mov
cmp
enter
xchg
pop
inc
push
cli
in
dec
jmp
andl
ja
inc
adc
sbb
ud0
in
repz
inc
mov
lret
sar
sub
cmp
sbb
outsb
pop
popf
in
xor
lret
or
sub
cmp
notl
sub
rorl
mov
adc
subl
div
repnz
jno
adcb
scas
and
mov
sbb
mov
jns
jnp
and
fiaddl
orl
popa
xchg
mov
addr16
icebp
loop
jo
rcll
push
movsb
popa
scas
and
push
out
push
ljmp
adc
cmpsb
cmp
es
aas
mov
xor
insl
or
popf
bound
dec
popa
jo
jns
dec
jae
xchg
pop
mov
outsl
mov
push
fcompl
xchg
push
mov
dec
sbb
in
icebp
lcall
push
adc
shl
push
stc
fsubrs
jmp
sub
fsub
fdiv
ds
push
cmpsl
rcll
push
and
outsl
push
push
mov
push
push
pop
pusha
bound
or
outsb
mov
aaa
cmp
lea
repnz
and
pop
les
stos
jnp
cmc
jle
daa
xchg
add
mov
sub
add
mov
lcall
push
adc
lea
ja
sarl
or
xor
outsb
and
jge
rol
insb
jae
call
ret
pop
fs
inc
inc
or
sub
popa
adc
dec
psrad
addr16
jl
mov
cmp
shrb
mov
lods
jne
pop
in
dec
mov
orb
inc
adc
cmp
xor
out
lods
push
test
cld
jg
mov
das
xor
loop
aas
int3
pop
xor
mov
inc
cmp
xor
fisubs
lods
push
loope
cltd
sub
popa
popf
into
sbb
sbb
mov
lods
mov
leave
jle
clc
mov
push
sbb
cmp
aaa
out
push
inc
repnz
daa
dec
rcrb
push
and
push
pop
test
sub
and
in
fisubl
or
ss
test
movl
fs
daa
pop
cli
cld
out
add
xchg
out
pop
cmp
cmp
push
pop
push
mov
sahf
fs
aaa
repnz
dec
push
dec
incl
sbb
sbb
outsb
jbe
stos
adc
cmpsb
mov
cwtl
cmp
loope
lea
inc
cmpsb
jo
inc
pop
rorb
mov
lahf
and
add
cmp
test
punpcklwd
loopne
outsb
xor
sub
stos
push
mov
hlt
mov
pop
sbb
push
and
cmp
push
adcb
push
andb
icebp
mull
cmp
push
jae
pop
cmp
jg
shrb
push
mov
pop
xchg
imul
fdivrs
fbstp
adc
push
push
das
xor
cmp
xchg
ds
int3
push
lods
pop
pop
aas
mov
lahf
cmp
out
fdivl
push
and
clc
mov
xchg
pop
jbe
data16
nop
or
outsl
pop
mul
cmp
sub
push
xchg
dec
fnstenv
mov
mov
es
and
mov
cmp
pushf
inc
pop
dec
mov
xchg
xchg
mov
lret
xchg
jae
js
mov
punpcklwd
jae,pn
jae
sbb
ljmp
dec
sbb
or
stos
mov
push
fldt
ret
jp
inc
int3
imul
test
mov
add
or
mov
xchg
add
movsb
dec
pop
sub
inc
stos
mov
push
stos
cmp
cmp
xchg
rorb
insl
dec
jle
ss
inc
out
mov
mov
mov
mov
or
jge
int
xchg
int3
adc
aam
jnp
add
cli
add
mov
cmp
shrb
call
inc
pop
push
les
lds
mov
jle
aad
mov
int
enter
lret
int3
mov
imul
jle
cmc
dec
cmpl
sub
mov
das
popf
inc
lret
insb
je
bound
cmp
and
mov
dec
sub
in
sbb
stc
push
loope
pop
sbb
call
clc
ret
inc
aam
jp
inc
dec
ja
pusha
push
or
sub
xor
jecxz
sub
pushf
xchg
mov
mov
nop
fstp
ljmp
inc
repnz
aas
bound
jnp
xor
fadds
pop
ret
rcrb
sub
jle
pop
mov
test
iret
out
push
mov
out
push
push
xorl
in
pop
dec
mov
push
push
inc
pop
scas
lock
and
add
cmc
rcrb
and
loopne
int
dec
es
fcompl
lods
in
movsl
mov
xor
jl
sub
loop
loop
jnp
lret
outsb
push
pop
das
ljmp
lock
ds
adc
adc
xor
imul
loopne
hlt
fidivrs
lock
jno
cli
pop
xor
fcmovnb
ljmp
xchg
xchg
sub
leave
or
jl
mov
scas
std
dec
cmc
lock
repz
fistl
rclb
daa
inc
fmull
dec
gs
cmpsl
stos
mov
pop
push
rolb
sub
and
mov
lcall
adc
fstps
rclb
cmc
mov
jecxz
lahf
imul
stos
stos
and
testl
aam
scas
test
adc
fsubrs
jmp
imul
cmc
outsb
lret
xor
js
cmp
or
sti
mov
lds
dec
hlt
adc
pop
lods
push
insl
jae
inc
lods
scas
xchg
mov
mov
sub
jg
into
xor
push
cld
hlt
fistps
cmp
mov
or
ret
in
xorl
push
xchg
out
push
loopne
pop
cmp
jb
lahf
pop
cmp
xor
mov
ja
dec
push
push
jne
fimuls
fistps
xchg
xchg
mov
xor
xor
pop
lods
ja
arpl
cltd
cs
xor
lret
xchg
lahf
xor
mov
ds
mov
xor
pop
xchg
out
stos
jcxz
jl
es
repz
popw
mov
xchg
je
push
mov
and
arpl
shrb
loope
das
xor
popa
insb
in
jnp
and
lret
sbb
mov
lea
imul
leave
loop
xchg
sbb
cmp
cmp
sahf
test
sbb
fisubl
lahf
add
or
push
inc
inc
lcall
xor
lcall
js
mov
es
mov
and
in
and
mov
mov
jge
xor
jno
add
data16
in
dec
or
addr16
inc
or
clc
aas
jnp
sub
ss
leave
movsl
in
jns
orl
xchg
in
adc
push
out
fnsave
pop
ret
inc
ret
sbb
push
xor
jp
mov
test
ss
sub
xor
gs
out
xchg
inc
enter
inc
adc
jp
loop
cmpsb
into
sti
ret
clc
ret
push
sbbb
sbb
ss
idivb
fimuls
sub
fnclex
and
inc
mov
push
aad
fsubrp
repz
shlb
mov
pop
or
fs
lret
icebp
cmp
jns
repnz
sub
or
stos
jne
push
ds
inc
adc
addr16
ljmp
rcrl
inc
jp
fcoms
jg
ss
xor
int3
pop
pusha
dec
lret
xchg
pop
rcll
cmpl
lret
inc
outsb
jmp
xor
in
inc
pop
adc
sti
je
mov
xlat
adc
bound
dec
add
adc
pop
xor
cltd
jb
pop
scas
cmpsl
dec
test
rorl
pop
out
sbb
enter
mov
int3
fcmovnb
jmp
and
leave
shrl
push
rcrb
outsl
inc
mov
into
xchg
cmpsw
shl
ret
or
sub
aam
cli
imul
push
mov
jnp
inc
mov
imul
pushf
xor
out
aad
push
cmp
and
inc
jl
scas
cmp
ss
jne
or
dec
mov
insb
xchg
pop
inc
push
out
out
lahf
ds
dec
ljmp
ret
ss
lock
mov
xor
xchg
cmp
js
dec
xor
jge
and
jl
sti
insl
outsl
popf
scas
and
jb
mov
leave
inc
push
lret
int3
push
mov
cmp
cmpw
sub
pusha
jns
lock
mov
push
sub
add
adc
stc
orl
and
push
cmpsb
rclb
or
pop
cmp
sub
test
loop
mov
add
ror
push
js
xor
pop
inc
pop
adc
cmp
inc
dec
xor
jmp
ret
sbb
push
imul
pop
push
mov
stos
fstps
add
pop
popf
xor
cmp
mov
enter
mov
daa
dec
ds
mov
stc
repz
dec
sbb
mov
ljmp
out
add
xchg
and
xchg
ret
loopne
mov
out
ss
push
dec
inc
imul
and
pop
enter
dec
push
jl
cli
inc
xor
vmovdqu
cmp
aas
jl
nop
jmp
arpl
jmp
inc
push
add
in
in
xchg
mov
dec
inc
jns
and
sbb
and
out
jbe
jnp
jo
divl
mov
sbb
lods
imul
sub
xchg
popa
pop
lcall
ljmp
pop
mov
xor
stos
jge
loopne
mulps
inc
mov
mov
rol
and
sbb
fildll
stc
xor
icebp
pop
ret
xchg
hlt
mov
ror
mov
cli
pop
sbb
nop
inc
xchg
add
or
push
xorb
fists
adc
out
pop
roll
mov
addl
shl
jp
jae
sbb
adc
push
sub
or
or
mov
subb
test
outsb
add
inc
mov
xor
sub
in
andb
push
loop
iret
xchg
mov
pushf
outsb
add
xor
cmpl
push
int
mov
sarb
inc
test
sbb
lds
sub
jae
cmp
mov
push
or
loope
pop
mov
and
jg
lea
xchg
mov
or
or
lods
xor
sbbb
int3
cmpsl
bound
or
outsb
inc
cwtl
xchg
mov
loop
daa
push
mov
xor
or
stos
pushf
pop
pop
or
add
lock
mov
dec
aaa
mov
enter
es
push
cmp
je
fdivrl
aaa
jg
adc
or
int3
sub
sbb
out
push
mov
push
sub
bound
das
jmp
pop
xlat
add
sub
pop
xchg
mov
mov
adc
jb
rorl
leave
mov
cmp
mov
adc
mov
mov
nop
insb
in
cmp
xchg
adc
movsb
nop
roll
mov
jge
inc
push
sar
push
pop
mov
cmpsl
jl
or
ja
add
ja
mov
add
addr16
je
sub
add
or
repz
mov
xchg
push
sbb
add
xchg
test
imul
mov
shlb
scas
cmc
leave
pop
divb
cmpsb
or
xchg
xor
sbb
out
jge
jle
sub
push
cmc
pop
lock
jb
xchg
mov
daa
adc
push
adc
idivl
pop
mov
movsl
or
jbe
or
cmp
sbb
packuswb
push
mov
push
cmc
shlb
push
cmp
loop
add
mov
cmp
push
call
and
iret
fistl
inc
dec
mov
jne
aas
adc
lds
mov
jmp
int
jge
nop
sub
add
jb
jns
or
lret
sub
mov
mov
jno
dec
out
jle
mov
xchg
pop
inc
movl
outsb
gs
jmp
add
jo
dec
insl
loop
mov
sar
mov
and
mov
mov
or
imull
test
data16
lret
sub
xchg
adc
das
andb
adc
mov
adc
dec
sti
data16
scas
out
daa
ds
rcrl
fisubrl
or
test
js
mov
mov
jae
addr16
rcrl
jae
inc
jge
push
mov
in
mov
test
cmp
push
mov
xor
idivl
cmp
cli
cmp
mov
clc
dec
jp
xor
cmp
mov
addl
in
mov
ret
dec
inc
ds
movsb
rorl
fildl
shll
pop
loope
sub
enter
ss
sub
lock
adc
cmp
aas
sub
mov
cld
outsl
addr16
and
mov
int3
stos
sti
xchg
out
iret
jbe
adc
or
sub
add
add
add
out
inc
mov
push
jecxz
jb
outsb
in
jmp
jg
xchg
push
xor
xchg
daa
mov
lock
arpl
push
and
xchg
loop
cmp
push
movsb
xlat
add
aad
sbb
clc
push
jb
mov
xor
outsl
insb
mov
add
cmp
in
adc
dec
or
test
sub
rcrb
pushf
xor
mov
sub
stc
lahf
jno
hlt
add
out
and
xor
cmp
cwtl
faddl
push
enter
sqrtps
sub
or
lds
jmp
cmp
insl
mov
lods
fsubr
xor
mov
pop
cltd
xchg
leave
mov
pop
jl
out
xchg
mov
dec
sub
movsb
mov
sub
mov
push
aas
push
cmc
int
outsl
lahf
xchg
cmovs
nop
sbb
mov
cmp
fidivrl
push
imul
mov
mov
call
inc
cwtl
dec
and
adc
lds
sbb
adc
outsb
sub
inc
sub
xor
mov
mov
push
out
mov
int
push
push
pushf
mov
std
mov
rolb
inc
out
push
jbe
mov
jae
sbbb
je
mov
imul
divl
shl
xchg
cmpsb
cmc
imul
ljmpw
adc
roll
mov
jns
pop
and
mov
lods
sbb
mov
repnz
lock
mov
mov
scas
scas
jl
sti
xchg
xor
mov
sbb
mov
add
enter
jae
mov
ud2
aaa
push
test
mov
mov
outsb
mov
jg
mov
pop
and
mull
cmp
stos
dec
add
arpl
xchg
sub
out
push
cmpsl
inc
sahf
xor
adc
arpl
nop
fcoml
jbe
and
mov
fistps
fbstp
insl
outsl
pop
sub
out
adc
add
negb
imul
cmc
test
jg
inc
shl
popa
fdivp
aaa
push
and
lods
popf
fmuls
xchg
mov
cmp
mov
sbb
sub
imul
mov
sbb
push
or
inc
mov
adc
shll
mov
xlat
pop
or
mov
jo
cmpsl
fcoml
clc
das
call
push
xor
hlt
add
into
xor
cld
das
lahf
sub
pop
inc
ljmp
gs
ja
and
and
lcall
fstpt
jmp
sahf
jb
mov
pop
gs
stos
dec
andb
icebp
mov
sub
mov
xchg
xchg
fisttps
in
pop
and
and
out
mov
jb
iret
xor
or
adc
rcrb
xchg
add
cmc
mov
jmp
aam
cmp
shl
jne
js
mov
fnstenv
lret
add
cmp
cmp
fwait
ljmp
jbe
mov
jbe
lret
pusha
aad
pop
fwait
enter
inc
lds
pop
adc
cmpsb
add
pusha
test
subl
hlt
fimuls
add
cmc
shl
jae
or
jb
lcall
add
mov
push
outsl
push
xor
insb
outsb
push
cmp
push
push
pop
pop
repz
cltd
cmp
std
call
iret
dec
adc
fsubrs
data16
pop
cmp
sub
mov
pop
xchg
jmp
mov
mov
xchg
mov
and
push
in
adc
mov
gs
push
xchg
test
out
jbe
out
sbb
cmp
and
mov
and
dec
or
adc
mov
sbb
pop
dec
mov
push
cmp
add
sarb
push
loop
popa
jne
mov
mov
mov
add
adc
and
notb
add
and
in
lods
je
aad
repz
lret
outsb
cltd
jb
loop
fbstp
cmp
dec
xchg
sub
scas
push
dec
daa
pop
cmpsb
push
mov
sub
lods
fnstenv
loop
inc
ret
int
and
cmp
xchg
cltd
and
xor
cmp
dec
jbe
and
jne
ret
cmp
jb
mov
cmp
push
jge
ret
inc
pop
repz
pushf
dec
or
test
adc
jp
adc
jno
clc
add
jae
and
cmp
xchg
jae
insb
add
rcrb
xchg
pop
test
or
adc
and
push
lret
mov
loopne
mov
xchg
push
xor
mov
or
es
push
cli
sub
fwait
daa
push
mov
xchg
in
fisttps
adc
daa
add
daa
push
mov
pop
fiaddl
aam
xchg
icebp
lahf
xchg
mov
xor
stc
mov
push
cli
xchg
and
lret
nop
incb
movsb
jmp
mov
fs
mov
out
std
and
nop
adc
add
sub
inc
inc
hlt
pop
jl
enter
adc
xor
add
mov
sub
addr16
inc
sbb
push
pop
sub
xchg
mov
sbb
push
jae
ja
data16
out
outsl
or
outsl
hlt
int
fadd
mov
dec
cs
add
fld
push
not
lcall
ret
arpl
fsub
idivl
lods
mov
andl
cltd
mov
mov
push
push
adc
add
xor
outsl
mov
mul
push
jne
xchg
cmp
call
icebp
jecxz
sbb
enter
cmc
adc
cmc
test
dec
mov
pop
jb
pushw
iret
scas
bound
in
ja
es
jmp
xor
mov
xor
jmp
fidivrs
shrb
mov
out
cmp
push
and
ss
inc
cmp
mov
xchg
jp,pn
mov
mov
and
xor
sbb
mov
adc
in
mov
mov
testb
adc
cld
sub
lahf
out
and
addr16
cmp
cmp
fiadds
mov
std
jp
xor
in
leave
shl
or
lea
push
shll
mov
fcoml
icebp
dec
dec
rolb
pop
or
cmp
jge
lea
das
in
loop
jne
lahf
sub
mov
adcl
sub
inc
cmp
mov
insb
mov
mov
mov
xchg
test
push
in
jmp
ret
ds
lret
xor
leave
mov
rolb
jb
aas
and
sbb
sub
fdivl
cmp
pop
xor
jbe
bnd
aam
pop
xchg
ja
push
lods
xchg
push
mov
les
movsb
lcall
les
mov
sahf
mov
jmp
das
push
xchg
mov
out
inc
and
stos
cmpsl
jns
jmp
popf
bound
cmp
and
stos
jecxz
xor
sbb
mov
inc
pop
test
pusha
sbb
sbb
add
cmp
ret
cmpsl
or
sbb
mov
in
sbb
add
leave
mov
pop
fcoml
enter
adc
je
inc
dec
adc
add
aas
pand
inc
cs
pop
es
ss
outsb
push
sahf
out
idivb
cmpsb
into
mov
xchg
xchg
push
pushw
jbe
inc
cs
pop
es
ss
outsb
push
sahf
out
idivb
cmpsb
into
mov
xchg
xchg
push
pushw
idivb
cs
pop
es
mov
push
outsb
push
sahf
mov
mov
cmpsb
into
mov
xchg
xchg
pop
pcmpeqd
inc
cs
pop
es
ss
outsb
push
sahf
out
pop
adc
scas
mov
add
imul
xchg
cmpsb
mov
push
pop
push
pop
es
ss
inc
inc
push
pop
data16
xchg
mov
mov
xlat
out
div
push
pop
push
pop
push
daa
ss
inc
inc
push
push
data16
xchg
mov
mov
xlat
out
div
push
cmp
dec
push
push
sbb
cs
sbb
xchg
pop
xchg
push
insl
in
adc
sbb
inc
out
daa
gs
int
inc
jmp
ss
push
mov
dec
in
aas
push
sub
jmp
push
mov
mov
mov
mov
sbb
fistpl
loopne
jbe
jl
fldenv
pop
mul
inc
fbld
mov
ret
js
xchg
shlb
mov
push
sahf
cmpsl
push
xor
add
adc
pop
cwtd
je
jns
loop
int3
jno
dec
jge
out
mull
fstpt
adc
add
ret
pop
aam
sub
jb
clc
jl
fisubs
jae
jp
push
mov
fadds
mov
mov
xlat
out
div
push
pop
push
pop
es
ss
inc
inc
push
push
data16
shr
inc
ret
loope
icebp
stos
test
xchg
addl
jle
dec
pop
pop
and
aas
cs
and
test
in
mulb
mov
mull
adc
addr16
pop
and
add
adc
jbe
out
xlat
repnz
shll
xlat
out
div
push
pop
push
pop
es
ss
inc
inc
push
push
data16
xchg
mov
mov
xlat
out
div
push
pop
push
pop
es
ss
inc
inc
push
push
data16
xchg
xchg
data16
sub
jle
ss
lea
jmp
xchg
jp
mov
adc
loopne
ret
fistpll
jecxz
rcr
and
dec
mov
bound
jnp
in
fwait
je
xchg
jnp
xchg
adc
sbb
imul
popf
or
pmaxub
orb
lahf
sbb
dec
insl
mov
je
mov
mov
push
addr16
nop
dec
pushf
push
adcb
push
sub
add
mov
loop
cld
sti
inc
and
ror
lea
stc
repnz
dec
lods
test
aad
push
cmovle
cmp
xor
xchg
or
lret
fisubl
add
jp
scas
inc
mov
jbe
nop
loop
sbb
rorb
addl
push
and
pop
jmp
mov
sbb
cmp
dec
cmp
mov
filds
dec
xlat
iret
jecxz
push
fstps
sub
mov
das
sbbl
add
adc
ljmp
cmp
mov
fnclex
sbb
cmpsl
imul
aad
jg
sub
test
inc
repnz
jae
mov
mov
dec
ja
cmpsl
ja
jl
out
in
sub
and
es
pop
xchg
xor
iret
bound
jne
dec
in
mov
mov
cli
mov
adcl
rclb
jmp
cmpsb
sar
mov
dec
or
cld
in
and
xor
sbb
outsb
cmp
fs
xlat
adc
mov
mov
jnp
cmp
fistl
icebp
gs
inc
add
push
shlb
inc
jg
mov
mov
jp
push
jl
aaa
call
mov
sbb
mov
xor
jno
xchg
out
int
mov
fiadds
sbb
xor
ljmp
imul
jo
icebp
add
pusha
stc
inc
add
or
push
push
js
pop
call
nop
cltd
lods
mov
testb
jmp
inc
xchg
lods
rcll
and
pop
mov
xor
and
dec
xchg
mov
mov
pop
mulb
ljmp
jb
test
pop
add
dec
cmc
ss
xor
sahf
or
fadds
mov
out
and
xchg
adc
push
xor
mov
xchg
xlat
sub
flds
xor
das
mov
push
popa
mov
insl
push
adc
loopne
out
test
mov
jb
pop
icebp
jns
js
cmp
jge
add
pop
rclb
xor
movsb
cli
ret
or
rolb
cmpsl
pop
mov
push
scas
test
cmp
xor
xor
rorl
sbb
mov
jl
nop
shll
imul
mov
pop
xor
out
mov
std
xchg
or
mov
insl
xlat
mov
sbb
cmp
pop
jno
bound
mov
js
sbb
add
jbe
sub
aad
clc
jae
mov
pushf
jb
xchg
push
fisttps
mov
fdiv
inc
loop
mov
cmp
stc
push
or
sbbb
dec
aam
adc
sbb
sub
cmpl
add
mov
loop
int3
pop
ret
sub
repnz
add
lea
out
mov
jae
adc
lock
inc
jl
in
js
lret
test
dec
leave
add
and
pop
inc
mov
hlt
xor
in
sub
test
and
xor
fldenv
or
test
sub
pop
push
inc
inc
mov
xorb
push
das
or
adc
aad
movsl
aas
pushf
ffreep
pop
repnz
repz
push
pop
or
cld
test
popf
mov
and
into
jmp
mov
cmp
pop
push
fldln2
sti
std
pushl
jbe
sbb
mov
iret
nop
fwait
mov
adc
push
out
jnp
mov
pop
or
pop
les
jnp
and
ds
adc
jp
inc
jmp
xchg
sbb
adc
imull
cld
push
push
sub
fcompl
mov
sbb
sbb
in
cli
adc
cli
int
cmp
leave
cs
xchg
test
call
addr16
push
add
out
cltd
sbb
jl
scas
insl
push
out
xor
and
jb
mov
pop
dec
idivb
xchg
movsb
test
inc
mov
fs
iret
movsb
push
loopne
cmpl
jge
xchg
mov
jg
popf
sub
lahf
cmp
lock
mov
insb
mov
test
test
sub
jl
xchg
add
or
popa
xor
aam
out
push
lock
and
mov
fsubrl
sbb
adc
cmpsb
test
push
into
xor
push
lret
jp
cs
mov
aaa
jae
mov
sar
iret
iret
cmp
jecxz
out
jbe
mov
cmp
in
pop
cltd
xor
scas
fists
xchg
sbb
loop
lahf
clc
sti
clc
fildl
out
add
add
mov
lcall
xchg
das
ss
adc
inc
sub
xchg
cli
addl
or
push
dec
rcll
pop
jg
and
pop
jle
loopne
xchg
stos
xor
and
ret
and
cli
and
scas
xor
mov
xorb
sbb
jno
mov
call
sbb
stos
lods
sub
popa
lcall
imul
push
fs
dec
out
or
jmp
rorb
pop
iret
loopne
mov
outsl
scas
cmp
cmp
loope
jp
mov
rcrb
mov
das
pop
mulb
insb
out
dec
add
fwait
hlt
lods
dec
pop
aad
stos
mov
mov
cld
or
pop
int3
jo
subl
xchg
fsubrl
xchg
vcmpps
sub
and
call
rol
adc
mov
xchg
pop
lahf
lret
int3
xorb
popf
and
fstps
add
jns
fwait
iret
popf
xchg
xor
arpl
push
sub
cmp
out
inc
mov
shll
testb
mov
ja
mov
adc
lods
jbe
mov
in
inc
lock
into
loop
aam
xchg
lods
pop
mov
subl
mov
add
mov
pop
sbb
inc
js
stos
mov
mov
adc
outsb
insb
jl
jns
outsl
in
cmp
jle
mov
rolb
and
sbbb
dec
stos
fldcw
xor
pop
mov
cmp
add
mov
push
fstpt
inc
mov
add
call
enter
insb
jle
xchg
movsl
in
mov
dec
pusha
sub
adcl
inc
lods
jg
jb
popf
sti
lods
in
adc
in
cmp
or
mov
xor
into
adc
pop
frstor
cmp
cmpsl
or
adc
test
mov
xchg
fwait
lods
addr16
out
jb
mov
sbb
cmp
testl
sbb
and
fcoms
and
sub
sti
add
ficompl
adc
scas
push
or
and
push
std
xchg
mov
xchg
dec
movsl
add
mov
int
mov
jle
adc
ret
adc
push
inc
es
fwait
je
inc
lods
adc
or
xor
fwait
xchg
cs
pop
xor
int3
repz
jg
clc
xchg
push
outsl
sbb
mov
sub
cld
adc
and
xor
or
or
adc
inc
lcall
sbb
mov
js
loopne
sub
outsb
xor
std
mov
xchg
gs
xchg
loope
mov
inc
inc
mov
mov
std
and
mov
and
jmp
sub
aaa
loopne
or
jecxz
ret
ss
xchg
push
sarb
iret
ret
pop
adcl
fsubl
lahf
sahf
mov
mov
das
adc
xchg
aad
mov
dec
jae
adc
inc
aad
pop
pop
fmuls
sbb
jl,pn
pop
sub
mov
cmc
cwtl
dec
jmp
mov
icebp
jge
ja
cmpsb
mov
aas
push
hlt
xlat
push
cmp
mov
mov
test
loopne
mov
sub
push
sbb
pop
shlb
arpl
hlt
aam
inc
mov
ret
pop
aam
pop
adc
fcoms
or
push
or
int3
test
repz
cli
enter
push
dec
daa
dec
push
fnstenv
dec
pop
jno
fs
dec
inc
fst
xchg
andb
adc
ja
scas
inc
out
dec
mov
test
stos
mov
loop
mov
sar
and
xchg
rcrl
sub
or
inc
cmpsb
dec
push
xchg
jns
ficompl
xchg
pop
dec
icebp
inc
xchg
rclb
jecxz
test
pop
ret
popf
test
daa
je
mov
jbe
iret
mov
sub
into
pop
cmp
xchg
mov
jg
int
jno
flds
push
jnp
mov
ret
repnz
fidivrl
enter
xchg
mov
dec
mov
xchg
int3
outsb
scas
adc
mov
inc
sub
inc
popa
jbe
fists
xor
jbe
add
sbb
js
test
cmp
cmp
mov
or
and
or
adc
adc
out
inc
xchg
cwtl
mov
es
arpl
enter
idivl
mov
dec
ret
inc
mov
aam
push
xchg
outsl
add
scas
outsb
adc
xor
or
adc
xor
cld
xchg
mov
test
in
outsl
jge
xchg
add
xchg
or
mov
jns
xor
mov
jmp
fwait
mov
push
mov
jg
sub
es
add
testl
sbb
call
enter
pop
sub
sbb
iret
pop
mov
sub
imul
push
loop
jb
mov
pop
jbe
push
cmp
xlat
sti
pusha
test
mov
jno
xchg
and
push
mov
fildl
hlt
in
cld
je
jg
push
pusha
dec
out
and
xchg
dec
xor
pop
push
mov
or
sbbl
xchg
and
lea
xor
stc
pop
xor
mov
frstor
push
or
lcall
call
dec
inc
push
addr16
insl
push
add
push
ss
sarb
mov
push
dec
inc
cmp
sbb
iret
mov
mov
sbb
dec
and
insl
and
mov
jp
or
or
pop
xchg
xor
cwtl
ret
pop
adc
push
in
ret
into
xor
das
ret
iret
and
sbb
je
adc
into
or
daa
and
add
ljmp
sub
xor
bound
aas
mov
inc
pop
and
dec
lea
shll
xor
repz
mov
add
xchg
sub
andl
cli
leave
dec
and
ficompl
mov
cwtl
cmc
fwait
daa
push
dec
int
xor
fisttpll
ljmp
sbb
lods
fstl
mov
testl
inc
jnp
mov
outsb
push
xorl
xchg
pop
jnp
in
mov
aam
inc
addr16
repz
xchg
out
or
daa
mov
adc
lds
test
jge
popf
lods
or
mov
jmp
pop
cmp
rcl
mov
shlb
aam
push
outsl
push
xor
insb
lcall
clc
pop
adc
adc
mov
cmpb
in
lock
dec
sbb
mov
ds
roll
mov
repz
bound
movsl
in
out
mov
dec
jo
popa
into
fisttpll
pop
lock
mov
xor
imul
out
icebp
add
rorl
mov
xor
shrl
jo
jb
pusha
rclb
insb
aad
dec
and
int
adc
es
pop
lds
lock
std
imul
insl
pop
fistpl
notb
test
incb
nop
dec
int3
adc
test
inc
loope
jmp
lahf
adc
xor
adcl
jle
emms
scas
inc
dec
and
or
cmp
popa
mov
enter
shl
mov
ret
fwait
popf
in
nop
or
imul
ret
jbe
dec
xor
sbb
push
or
mov
jecxz
rclb
push
in
ljmp
sub
fdiv
ret
xlat
and
into
push
addr16
mov
fisubrs
xchg
lods
and
pop
sub
add
mov
sahf
stos
or
dec
stos
xlat
and
scas
insb
jae
dec
cmpsl
in
test
in
mov
lea
sub
mov
int
sub
sbb
pop
je
je
ret
call
mov
pusha
and
fildll
jb
js
es
mov
sahf
sub
bound
lock
imul
test
repnz
mov
sub
mov
stos
lcall
das
mov
cltd
adc
iret
adcb
mov
cmpsb
or
fisubs
sub
push
jle
and
add
sub
cmp
sub
jne
push
cs
push
outsl
fistl
push
ror
mov
mov
mov
cmpsb
fdivl
push
ja
pop
popf
xchg
cltd
gs
cmp
into
cli
pop
loopne
cmp
add
movsl
int3
cmp
and
enter
and
jne,pt
add
testl
icebp
mov
mov
loop
jno
outsl
or
cmpsl
or
jecxz
or
mov
nop
fcmovb
mov
mov
shl
pop
cmp
push
subl
dec
mov
mov
pop
outsb
hlt
jnp
inc
add
enter
dec
cmpl
int
or
jae
mov
push
hlt
das
jns
cmpb
adc
mov
ror
inc
adc
movsl
movsb
stc
sahf
xor
stos
mov
pop
cmp
roll
jg
nop
jnp
adcl
or
lahf
mov
mov
stos
adc
ljmp
fidivs
shll
jno
loope
cmp
adc
push
jg
cmp
not
mov
jbe
push
mov
inc
outsl
stos
mov
cmc
and
adc
mov
adc
outsl
lods
inc
mov
push
cwtl
jne
pop
mov
inc
and
cmp
cmp
or
mull
sbb
dec
out
mov
lods
fnsave
xor
jecxz
xchg
jge
faddl
aam
cld
sbb
icebp
pop
adc
cli
outsb
arpl
push
leave
dec
jge
int3
mov
dec
mov
jne
cmc
sub
xchg
dec
fcomip
aam
shrb
jns
out
sti
pop
mov
jg
pop
subb
loop
lock
jmp
adc
push
mov
and
mov
xchg
push
adc
gs
mov
sahf
fidivl
fisubrl
jb
ss
stc
push
bound
jp
push
push
jns
pop
pushf
das
dec
sub
frstor
lods
adc
or
sub
inc
cld
bound
pusha
jbe
jns
jmp
and
insl
rclb
cmp
test
mov
pop
sub
pusha
js
jnp
pop
scas
xchg
cmp
leave
add
out
dec
dec
add
int3
insl
outsb
fnstcw
cmp
mov
xchg
cmp
jbe
sbb
jl
mov
cmp
hlt
call
call
adc
fxch
add
ljmp
orl
inc
jmp
jle
mov
pop
xchg
scas
jo
mov
insb
push
push
mov
inc
jb
aaa
daa
sahf
mov
sub
push
xchg
movsb
xchg
mov
jmp
dec
jp
cli
xchg
cmp
pop
mov
bound
std
mov
aad
js
xchg
mov
adc
cmp
out
add
cs
sbb
dec
movsl
adc
call
lea
jg
add
sahf
pop
in
mov
mov
in
ljmp
fcoml
loopne
xchg
push
outsb
arpl
cli
jnp
and
inc
and
push
mov
cli
xchg
or
out
ds
and
mov
dec
sbb
fnstcw
add
in
inc
push
jbe
lock
dec
sbb
xchg
ja
cld
pop
sub
rorb
cmp
lea
fs
push
hlt
sub
aaa
mov
ret
xchg
inc
mov
cs
inc
test
loope
adc
cltd
and
jne
mov
test
in
dec
addl
je
shl
in
jmp
pop
in
jne
mov
add
in
mov
mov
movb
out
int
and
jno
lods
mov
mov
push
movsl
cmovb
movsb
xor
popf
xchg
lcall
mov
mov
into
sub
sub
icebp
in
mov
and
sub
push
es
push
and
jge
push
add
mov
push
mov
mov
cmp
js,pt
xchg
divb
lret
mov
xchg
fnsave
into
mov
inc
roll
mov
xchg
or
adc
sub
loope
gs
popf
ss
shll
cmp
shlb
leave
mov
incl
mov
mov
inc
sbb
mov
dec
fisubrs
pop
sbb
popa
mov
mov
xchg
push
mov
daa
lea
rolb
popa
lods
lods
mov
and
fucom
add
es
adcb
outsl
cwtl
lcall
push
lods
int3
jecxz
push
out
inc
addl
data16
xchg
icebp
addl
inc
imul
xor
cs
stc
and
loopne
or
cwtl
jl
and
outsb
jp
xchg
xchg
mov
movsl
adc
and
pop
and
sub
inc
sti
es
mov
push
test
dec
jle
data16
andb
sbb
aam
xor
loopne
fcmovb
ret
ds
sub
xchg
out
push
insb
xor
xor
aam
repnz
dec
mov
mov
pop
aad
mov
sub
cmpsb
out
fsubrl
adcl
pcmpeqd
push
adc
in
adc
adc
lods
inc
test
repnz
js
pop
sub
cmc
clc
std
mov
aam
adcb
mov
pop
dec
je
jns
pop
mov
sarb
cltd
inc
iret
cmp
mov
push
mov
or
insl
sbb
cmp
arpl
js
aam
mov
xchg
into
sahf
jmp
mov
cmpsb
sbb
push
pop
push
lea
mov
popf
pop
and
fs
pop
test
cmp
pop
stos
repz
loop
mov
mov
jp
lret
int3
sbb
push
push
xlat
mov
mov
jne
in
pop
idivl
std
inc
call
repz
ss
bound
nop
push
mov
mov
dec
add
loope
cmpsb
test
mov
jae
sub
push
fcoms
or
sub
jb
scas
cmpsb
sub
movsl
mov
icebp
sbb
cwtl
sub
dec
push
insl
orl
call
inc
enter
add
es
insb
shrl
xchg
cmp
inc
mov
testl
jb
insb
xchg
test
mov
into
or
jmp
jp
in
add
andb
jmp
push
or
adcb
into
push
xchg
sbb
and
std
repnz
adc
pop
add
mov
add
add
jne
sub
cld
cmp
insl
ljmp
movsb
xchg
sbb
and
inc
dec
jne
inc
lock
lahf
inc
fiaddl
mov
jmp
adc
loope
lds
jb
xchg
je
aad
dec
add
int
add
sub
xchg
fcompl
mov
sbb
jle
jae
sahf
mov
stos
push
push
add
add
pop
andl
in
out
mov
and
and
popa
int
gs
jle
push
scas
xchg
cmp
push
inc
pop
xor
jmp
outsl
cmp
adc
outsl
jne
jns
fiaddl
inc
cmp
movsb
imul
sahf
or
cwtl
inc
les
stos
add
xchg
dec
cwtl
ja
and
add
cmpsl
mov
in
jp
pushf
mov
hlt
jl
bound
sub
mov
pop
fwait
jg
stc
lcall
xchg
adcl
push
and
rcrl
rcrb
mov
sub
out
fcomps
cwtl
push
xor
mov
repz
sti
xor
pop
outsb
jbe
cld
dec
jbe
push
push
pop
std
xlat
clc
mov
imul
test
adc
jne
popa
add
and
jo
jecxz
push
fstpl
mov
jb
lahf
xor
xchg
fimull
lds
push
mov
stos
arpl
xor
imul
gs
sahf
pusha
repz
push
lret
mov
out
pop
cld
clc
cmc
adc
sbb
aas
push
pop
push
lea
stos
stos
test
mov
hlt
push
sub
adc
and
lret
enter
pop
sbb
inc
and
dec
sbb
sub
jne
xchg
xchg
jg
jb
bound
sub
dec
pop
mov
push
fisttpl
lret
mov
xchg
cmp
xlat
out
div
push
pop
push
pop
es
ss
inc
inc
push
push
data16
xchg
mov
mov
xlat
out
div
push
pop
push
pop
es
ss
inc
inc
push
push
data16
xchg
mov
mov
xlat
out
div
push
pop
push
push
es
ss
inc
inc
push
push
data16
xchg
mov
mov
push
out
testb
clc
push
mov
xor
fisubrs
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
xor
mov
jne
mov
xchg
enter
push
xor
aaa
push
daa
jno
jno
xor
mov
shll
jecxz
jbe
and
inc
inc
push
popa
es
push
jno
cwtl
testb
fdivs
icebp
xchg
jbe
inc
jle
dec
sub
jp,pt
jae
jno
mov
mov
and
ljmp
mov
inc
ret
outsb
neg
mov
shrl
fs
fs
data16
adc
inc
jge
scas
mov
out
es
add
add
sti
push
push
push
jbe
sbb
mov
popa
fwait
jno
cmpb
push
mov
cmpsb
push
sahf
lock
into
ret
mov
arpl
shll
sbb
sub
push
lret
ds
add
and
push
ss
jle
out
scas
jno
out
dec
into
ds
shrl
jbe
bound
mov
popa
push
jno
dec
testb
mov
cmpsb
loope
call
cmp
inc
pop
ss
es
jno
in
div
lahf
les
mov
lods
repz
repnz
jge
push
add
xor
adc
out
lcall
lods
cmc
shl
loope
mov
adc
xor
inc
push
cmp
in
std
mov
mov
mov
loope
icebp
xchg
jbe
and
inc
inc
ss
es
push
jno
xor
mov
shll
xchg
jbe
and
inc
inc
ss
es
push
jno
xor
ret
inc
aad
ret
jb
ljmp
xorl
mov
mov
adc
and
add
xor
push
push
or
add
cli
rcl
hlt
add
orl
scas
adc
or
into
mov
icebp
jl
bound
arpl
and
out
dec
std
xchg
es
aaa
fwait
rclb
pop
daa
or
sbbl
sahf
pusha
aam
ds
jno
ljmp
dec
cli
and
cli
xor
dec
lea
sub
fcompl
mov
mov
ja
nop
pop
push
push
stc
xchg
inc
insb
ret
rcrl
js
mov
pop
cmp
or
ds
xchg
into
pop
test
xchg
xorl
loope
out
lods
addr16
push
imull
mov
xor
fwait
add
in
dec
xchg
idiv
inc
push
inc
test
or
or
and
scas
fildll
or
mov
sub
fsubrl
ret
nop
xchg
fs
insl
cmp
sbb
fs
mov
addl
fildll
xor
call
or
pop
cwtl
dec
cmp
popa
xor
cld
cli
sbbl
fcom
mov
mov
inc
pop
lock
std
mov
xor
inc
jmp
inc
iret
add
cmp
lock
jge
push
cmp
clc
and
dec
icebp
push
fists
dec
pop
or
insl
mov
outsl
mov
imul
js
sbb
or
lds
out
dec
push
jecxz
xor
arpl
mov
cli
bound
das
sti
pop
mov
jae
ds
cpuid
pushf
sbb
test
movsl
frstor
adc
sub
mov
adc
jl
adc
pop
and
lock
mov
mov
lret
and
sbb
add
mov
ret
fs
dec
mov
pusha
loop
test
xchg
jge
shlb
or
push
lock
pop
daa
sub
push
test
lds
sbb
insl
les
sbb
rorl
pop
dec
sti
push
in
pusha
add
add
pop
out
or
or
ljmp
jecxz
jle
mov
dec
inc
lret
out
outsl
cmp
cmp
fmull
call
mov
sub
pushf
sbbb
adc
sti
or
adc
mov
std
or
in
stc
stos
add
sbb
ss
js,pt
add
push
ljmp
dec
in
add
push
push
cltd
pop
shlb
out
xchg
dec
dec
aaa
sbb
adc
lahf
pop
mov
sub
jg
call
xchg
pop
xor
mov
mov
lret
jg
push
sar
mov
jne
xchg
pop
inc
mov
jbe
in
enter
xchg
inc
call
jp
aaa
and
and
xor
inc
call
ret
cmc
cwtl
cld
jb
mov
fmull
push
push
hlt
mov
js
into
das
imul
cs
clc
std
aad
cltd
not
bound
inc
dec
inc
fimull
int3
push
xor
lret
fdivrs
add
test
outsb
jb
stos
decb
scas
push
pop
sub
cmp
sub
ja
cmpsb
adc
mov
popf
rcrb
xchg
mov
jnp
repz
or
test
mov
mov
shll
mov
ljmp
loop
jnp
mov
out
popf
cmp
and
jmp
jle
rolb
xlat
or
or
dec
rolb
jge
insb
or
imul
rolb
dec
imul
stos
rcr
cli
xchg
out
daa
lock
ja
cmp
jbe
aad
jle
insb
mov
adc
lret
sahf
pop
ds
jp
mov
hlt
or
jge
adc
cmp
pop
push
sbb
daa
out
mov
jae
int3
jno
std
and
dec
dec
xchg
fsubrs
mov
faddl
lea
aas
outsb
pusha
pop
sub
cmpl
fcmovnu
cwtl
loop
shll
loope
xchg
lea
add
test
jnp
shll
adc
push
sub
or
jl
adc
dec
stc
in
push
pop
dec
outsl
xor
stc
push
push
push
xor
scas
ds
or
inc
lods
ds
ljmp
outsb
mov
sub
in
popf
mov
in
gs
lea
mov
les
push
clc
pop
outsl
dec
adcb
clc
inc
push
subb
stos
pop
nop
int
into
or
cltd
ret
rorb
fidivs
into
bound
jno
dec
mov
sub
push
and
cmc
jp
sub
mov
jns
dec
adc
and
or
add
xchg
nop
lods
inc
push
push
pop
push
add
mov
leave
mov
adc
lods
pop
gs
add
cltd
iret
fwait
addl
mov
sub
mov
xchg
js
out
daa
mov
inc
jge
pop
jbe
push
push
loop
xchg
in
xor
mov
pop
pusha
pop
mov
movsl
push
loope
cmpsl
lahf
sbb
nop
inc
fimull
or
add
mov
pushf
adc
cmp
mov
lcall
dec
ficoms
and
add
sub
jmp
sti
in
or
sub
lods
repnz
loope
add
xchg
mov
roll
into
aaa
mov
ja
fdivrl
rcrl
mov
fiaddl
les
arpl
repnz
pop
adc
stos
adc
adc
add
add
add
inc
aaa
hlt
shlb
data16
pop
scas
lcall
xchg
add
jle
cwtl
clc
addr16
add
and
pop
lea
adc
nop
scas
lret
loope
notl
mov
jo
jb
sbb
iret
pop
jl
xor
inc
inc
mov
pop
iret
es
inc
ja
push
jnp
cmpsl
xor
hlt
mov
xor
mov
movsl
fdivrs
test
pop
faddl
fcoml
test
out
aaa
adc
dec
add
mov
jns
cmp
addr16
and
repnz
jb
mov
daa
cmp
push
mov
or
mov
in
test
adc
and
xor
or
add
scas
xor
mov
outsb
adc
leave
and
arpl
xlat
sti
sbb
pop
lods
jno
ljmp
lcall
mov
jp
xor
mov
mov
mov
clc
xchg
or
mov
ja
bound
dec
faddl
clc
les
imul
out
cmp
int3
inc
dec
cmc
iret
and
daa
mov
dec
push
decl
shl
int
ljmp
in
mov
add
stc
push
data16
es
insl
ficompl
sarl
add
ss
ja
clc
arpl
andl
mov
push
fwait
jb
xchg
daa
or
mov
mov
jnp
pop
ret
jmp
sbb
sub
mov
enter
sbb
mov
mov
ds
test
sti
xchg
add
popf
decb
pop
mov
pop
cmpl
adc
mov
cmpsl
pop
lcall
xor
cmpsb
cmp
imul
add
cmpsl
mov
or
fsubl
mov
mov
jne
test
xchg
pop
sbb
or
xchg
mov
push
mov
fcmovnbe
add
subl
ds
int3
cmpsb
call
mov
pmulhuw
stc
sbb
pavgb
pop
push
dec
or
aam
push
nop
jp
mov
pusha
fsubs
ficompl
adc
and
lcall
push
sti
mov
cld
inc
subl
fnstsw
stos
add
sub
add
jnp
adc
dec
fs
add
repnz
addr16
fildl
push
jno
add
out
inc
in
ljmp
sar
test
xchg
aam
cmpsl
mov
aad
ficoms
adc
dec
rorl
out
dec
xlat
push
cwtl
add
repz
cmp
sub
test
mov
out
pop
push
adc
aad
jecxz
pushl
ds
testl
pop
add
fwait
sbb
xor
test
jb
sbbb
jae
add
fs
and
fs
in
jle
pop
pop
rolb
and
jno
sub
mov
pop
cmp
fiaddl
jge
xchg
loope
inc
aaa
lahf
repnz
pusha
imul
sub
dec
inc
out
add
insl
adc
movsl
adcl
addr16
jle
in
inc
movsb
sub
adc
inc
adc
xorb
shr
arpl
pop
pop
scas
popf
mov
insb
xchg
sub
stc
jge
pop
ret
pop
das
dec
cmp
jle
popf
jo
mov
ret
popf
xchg
jp
add
jbe
clc
fnstsw
icebp
or
mov
adc
pop
dec
adc
xor
or
pop
dec
sbb
ficoms
das
movsl
sbb
dec
leave
sbb
mov
mov
leave
add
mov
jge
adc
or
test
xor
notl
pop
into
movsl
sahf
add
or
mov
fs
xchg
loop
or
push
sub
aam
bound
sbb
dec
test
dec
sbb
pop
mov
arpl
out
push
jmp
adc
xor
or
xchg
clc
sub
jmp
ljmp
push
pop
push
push
cmpsl
fldt
into
mov
imul
dec
mov
sbb
push
xor
test
sti
loopne
test
sub
mov
and
sbb
pushf
mov
mov
divb
and
lahf
sbb
cmpl
dec
fs
pusha
loope
push
xchg
push
xchg
fldl
mov
fisttpll
in
xchg
scas
enter
xor
mov
add
stc
jl
test
xchg
in
mov
bound
cs
test
les
xchg
fwait
and
add
mov
aaa
mov
or
sti
in
add
push
pop
shrd
and
mov
fs
jnp
mov
sbb
push
pop
pop
jo
pusha
sahf
push
test
mov
scas
scas
aad
sbb
lds
pop
mov
sbb
ret
lret
in
and
clc
mov
sti
aam
enter
sbb
add
stos
arpl
int3
nop
jg
jecxz
stos
pop
inc
xchg
mov
xor
int
loop
loope
jo
dec
adc
add
rol
dec
push
xchg
bound
fsubs
sbb
jp
test
out
cmc
rclb
mov
nop
mov
sarl
pushf
fists
lods
ds
add
enter
mov
xor
mov
mov
xor
inc
pop
mov
ss
sub
sbbb
dec
pop
cmp
mov
mov
xlat
jbe
mov
dec
jl
fimull
test
cli
aaa
sub
sbb
mov
sbb
mov
ss
sbb
sbb
jae
movsb
in
mov
inc
sbb
jno
xchg
cli
fstpt
les
loope
jecxz
cmp
popa
mov
dec
and
loopne
iret
lcall
fldenv
ds
lret
popa
inc
int3
mov
adc
cmp
mov
pusha
adc
or
inc
xchg
pop
out
mov
fdivs
sar
mov
sbb
lret
sbb
movsb
fstpt
gs
hlt
cmp
inc
mov
repz
stos
xor
sbb
add
mov
stc
enter
pcmpgtd
mov
push
je
mov
jl
imul
std
push
pusha
outsl
pop
shll
hlt
xchg
rclb
pop
icebp
add
cmp
pop
mov
add
inc
test
ja
cltd
mov
test
cmp
cwtl
call
pop
add
dec
jne
frstor
aas
cmc
ja
ss
push
mov
sbb
jbe
bound
shlb
aas
xchg
cmp
mov
cmc
xchg
hlt
rolb
jae
cld
in
test
xlat
xor
xor
jg
add
cmp
mov
ja
add
sbb
bound
push
leave
enter
cmp
rolb
lods
push
cs
jl
sbb
xor
hlt
imul
mov
clc
push
in
xor
adc
lock
push
xlat
imul
fmuls
dec
test
push
mov
out
jg
mov
in
and
fnstsw
shll
push
mov
jmp
sub
jnp
push
scas
or
push
repz
pop
jb
dec
add
add
mov
loopne
jle
cmpsb
in
in
cmpb
fcoms
ljmp
cmp
sub
repz
shll
xor
sbb
dec
ret
sub
push
cltd
and
xor
pandn
mov
in
mov
jl
xchg
mov
pop
ret
out
xor
call
inc
xchg
movsb
jnp
aaa
xor
mov
gs
cli
inc
xor
mov
add
rcr
pop
push
jbe
hlt
jge
js
fistps
mov
mov
or
insl
mov
push
inc
mov
mov
or
xchg
push
sahf
inc
aas
popf
adc
jae
shlb
flds
lcall
aas
xor
icebp
push
ja
leave
inc
imul
xchg
stos
sbb
daa
mov
aam
push
xor
inc
loop
inc
loopne
outsb
sbb
dec
je
adc
popf
out
jecxz
test
mov
mov
das
mov
lret
repz
fisubrl
loope
jbe
cmp
filds
xchg
notb
das
or
jp
mov
int
jecxz
pop
mov
xlat
mov
push
pushf
pushf
mov
cmpsb
add
shr
mov
cmp
call
lahf
addl
xchg
scas
mov
mov
out
in
ljmp
fbstp
and
insl
scas
andb
jle
xlat
aam
popl
pop
in
out
sub
cmp
pop
loopne
mov
mov
sub
dec
cli
imul
pop
inc
idiv
push
jle
lret
sahf
xlat
mov
cmp
mov
js
jge
jno
xor
add
xlat
jo
push
push
jmp
mov
dec
ds
aas
pop
lds
mov
ret
mov
inc
clc
aaa
mov
adc
lret
shl
xor
xor
out
push
insb
andl
das
dec
cmpsb
clc
ljmp
pusha
add
decb
adc
mov
sub
jb
add
sbb
pop
xchg
mov
call
cli
sub
rorb
mov
adc
and
stos
outsl
or
and
insl
out
mov
popa
mov
mov
sarb
cmp
push
inc
xchg
inc
pop
or
jl
adc
js
in
cmp
fidivs
xor
sbb
imul
sti
dec
push
inc
insl
push
clc
mov
mov
adc
fwait
or
sbb
or
pop
test
mov
pop
lret
fstpt
clc
fst
xchg
jp
dec
mov
je
mov
lret
in
test
and
jo
das
out
cli
jge
or
fcos
cltd
push
sub
push
xor
fs
std
mov
and
push
lret
movsb
notb
movsl
shl
jmp
aaa
push
scas
cmp
add
shlb
mov
or
and
in
insb
popa
pop
in
cmpsl
cwtl
inc
xchg
jae
imul
scas
in
inc
push
pusha
sbb
pusha
es
add
xor
in
and
cmp
repnz
add
and
jbe
xor
jmp
or
push
call
stc
bound
pusha
push
push
js
aam
adc
jl
mov
sub
xchg
mov
loop
dec
les
jns
into
ss
pop
jnp
fwait
mov
fcmovb
dec
and
adc
addl
js
insl
mov
std
xor
xor
push
pop
fsubl
pop
ds
jg
xlat
mov
jle
and
cltd
scas
push
mov
stc
int3
lahf
cltd
mov
es
cmp
jl
fs
ds
jb
cmp
out
xor
mov
std
xor
es
les
ljmp
jne
scas
add
dec
sub
ljmp
xor
sbb
les
cmp
das
ja
add
jno
mov
mov
jae
ss
int3
ja
std
fidivrl
das
fistpll
or
lcall
add
daa
inc
cmp
js
int
pop
test
mov
mov
push
inc
ja
jo
decl
insb
loop
mov
std
aaa
clc
xor
mov
jns
jmp
jno
scas
adc
jmp
xchg
pop
lret
daa
adc
pop
cmc
push
xor
push
add
cmp
pop
cmc
and
mov
sub
nop
ja
inc
jae
xor
hlt
adc
inc
sub
incl
xchg
adc
bnd
dec
mov
addr16
mov
ret
fst
fwait
ret
lret
sti
inc
movsb
xchg
daa
mov
jns
and
xorl
mov
push
inc
push
insl
and
inc
mov
sub
pop
scas
dec
pop
loopne
out
inc
mov
sub
sub
cmp
mov
mov
test
orl
dec
insl
cmpsl
aas
jno
adc
or
xor
mov
imul
leave
mov
sbb
add
in
jle
jmp
je
addr16
dec
cmp
sbb
pop
stos
cmp
pop
test
mov
sub
mov
lahf
mov
sbb
jnp
loope
xor
mov
lods
es
adc
inc
lods
js,pt
jle
dec
test
scas
gs
mov
mov
sub
aad
pop
fisubs
arpl
xor
loope
push
iret
mov
mov
test
add
mov
sbb
out
fistl
ret
jnp
das
sub
shrl
and
jl
mov
popa
adc
addr16
sbb
xchg
stos
inc
or
xor
jmp
subl
ret
mov
and
adc
cmpsb
stos
jl
pop
sahf
sub
clc
and
adc
andb
cld
rcrb
push
adc
adc
je
sahf
push
std
cmp
movl
shrl
pop
and
mov
cmc
lods
mov
push
xchg
lea
in
out
lret
sbb
jg
xor
ds
jno
mov
cmp
jae
dec
adc
jmp
xchg
fisttpll
insl
push
mov
mov
mov
cld
jge
xor
outsb
xchg
mov
pop
jecxz
fadd
cmpsl
dec
jecxz
inc
mov
mov
xor
push
or
jl
pop
aad
repnz
add
mov
outsb
xor
sti
pop
sub
testl
jns
out
ret
push
sub
loopne
fldl
sub
les
xchg
stos
cli
sub
popf
or
push
xchg
push
xchg
mov
mov
push
cmp
and
mov
jbe
lock
ss
or
rcll
lcall
inc
pop
faddl
iret
dec
ds
ljmp
cli
call
cltd
les
pop
dec
jnp
add
aaa
push
testb
testb
bound
inc
popf
flds
fstpl
jmp
sti
mov
or
fwait
sub
mov
push
mov
xor
or
mov
and
dec
in
pop
and
mov
ja
jae
shll
loopne
movsb
jo
adc
mov
sub
and
pop
mov
mov
pop
mul
pop
ds
das
mov
or
fwait
adc
orl
out
daa
push
out
pop
mov
sti
add
insl
jnp
mov
stos
outsb
push
es
in
int
je
pop
test
sbb
fsubrl
sub
test
dec
lret
in
test
insb
cmpsb
std
and
inc
and
lahf
ss
xor
mov
rcrl
mov
scas
mov
jg
pop
xor
dec
push
cmp
cmp
sub
mov
ret
imull
cltd
xchg
call
lcall
mov
dec
ja
negl
xchg
dec
mov
leave
xor
mov
clc
outsb
fldl
icebp
test
jnp
jo
cwtl
clc
jns
mov
add
xchg
pop
iret
lock
and
pop
dec
sbb
in
lahf
sub
or
pop
and
sbb
shr
push
dec
adc
jmp
or
mov
pop
mov
cmp
loope
aas
sahf
dec
and
cli
daa
push
and
inc
pop
ljmp
xchg
in
push
xchg
pop
xchg
xchg
sub
in
lock
inc
xor
sbb
cltd
pusha
out
mov
shll
xchg
jbe
and
inc
inc
ss
es
push
jno
xor
mov
shll
xchg
jbe
and
inc
inc
ss
es
push
jno
xor
mov
shll
xchg
jbe
and
inc
inc
ss
es
push
jae
xor
mov
ret
mov
cmpsb
popa
xchg
jno
jbe
int3
mov
xor
mov
mov
push
rolb
ja
addr16
pop
mov
or
lods
daa
mov
xchg
in
xchg
mov
mov
xor
addr16
aaa
dec
daa
sub
lods
popf
xchg
out
xlat
addb
out
mov
mov
inc
sub
in
lahf
rolb
xchg
jecxz
sti
fnstsw
sub
push
dec
adc
imul
push
or
nop
scas
hlt
pop
test
push
rclb
xchg
mov
sub
push
loop
cmp
mov
mov
lea
fstpt
mov
pop
push
test
pop
jno
fidivrs
inc
inc
aas
jmp
andl
out
xchg
ret
or
das
sub
call
mov
mov
jae
sbb
in
xchg
mov
cmpsl
mov
pop
cli
cwtl
jmp
cmp
inc
lods
testl
cld
dec
fsubrl
xorb
daa
call
or
ret
aad
jb
test
in
aam
mov
movsb
pop
or
adc
ja
addr16
rep
jg
aaa
xchg
sbb
sbbl
cmpsl
mov
jg
cmp
js
imul
xlat
jmp
clc
xchg
stc
xor
sub
fimuls
jl
insb
push
cmp
bound
and
mov
xchg
jmp
call
call
mov
jnp
jp
pop
xor
inc
or
jge
dec
daa
pop
xlat
lods
mov
xchg
in
xchg
mov
cmpsl
fstl
inc
cmp
pop
insl
pop
jge
dec
daa
pop
xlat
lods
mov
xchg
in
xchg
mov
cmpsl
fstl
loope
mov
cmpsl
xor
hlt
imul
mov
dec
mov
aas
ret
popa
push
js
mov
pop
pop
imul
or
loope
daa
adc
push
cs
xlat
mov
push
scas
sub
test
xchg
xchg
daa
call
jle
pop
sahf
sarl
outsb
inc
out
sub
lods
gs
nop
xchg
mov
cmp
jecxz
jg
ds
insb
addr16
and
roll
pop
outsl
and
cmpb
sbb
and
xor
adc
scas
in
mov
pop
ss
pushf
addl
push
cltd
outsl
and
lea
cld
inc
adcl
mov
fwait
dec
orl
mov
cltd
mov
sbb
mov
lcall
xor
push
xor
sub
out
lcall
xchg
push
push
or
xor
dec
loop
inc
jmp
and
push
sbb
outsl
ret
in
loope
insl
adc
test
adc
rcr
pusha
call
pop
inc
push
mov
subl
mov
fmuls
orl
ds
mov
sub
cmp
mov
dec
clc
xlat
aas
push
sbb
bts
pop
xchg
and
xor
jg
sarb
lock
push
jne
outsb
ds
in
divl
int
pop
mov
ds
adc
push
xor
and
add
xor
push
jl
add
mov
fnsave
daa
inc
dec
xchg
out
and
rcrl
fmuls
mov
ljmp
push
fists
xor
jmp
jo
xor
jmp
ss
xor
jg
fucomip
jbe
jp
int3
insl
popa
lea
add
or
sbb
into
fwait
in
sbbl
stc
sub
jge
aad
mov
aam
icebp
movsl
popf
and
push
icebp
fsts
xor
lret
stos
std
aaa
stc
rorl
inc
addl
push
and
cld
inc
out
mov
pop
xor
sub
out
mov
fstl
out
dec
in
pushf
push
add
fistpl
dec
into
out
popf
scas
ljmp
xor
ret
jp
repnz
cmp
in
xchg
or
pop
sti
pop
push
sub
loop
in
shlb
xchg
fnsave
pop
pop
adc
jl
out
sti
syscall
and
frstor
arpl
loopne,pt
pop
pop
shlb
push
dec
scas
sub
scas
sub
in
aam
rol
int
xchg
add
and
mov
es
pusha
push
sbb
ret
sbb
jae
out
enter
mov
movsb
ljmp
lock
jns
popf
sbb
xchg
pusha
mov
aas
notb
cwtl
in
test
js
mov
mov
scas
in
jmp
addb
mov
jno
sub
and
stos
sub
mov
push
pop
ret
mov
movsl
cwtl
pop
daa
jge
nop
lcall
inc
jle
lds
fsubr
cld
pop
ljmp
rcrl
dec
repnz
add
mov
inc
iret
fldl
sahf
dec
adc
adcl
xor
jecxz
lds
insb
lret
mov
add
dec
adc
mov
jnp
adc
cmp
int3
push
shll
push
push
add
icebp
in
in
dec
int3
jb
mov
lahf
stc
sub
dec
flds
sti
adc
and
pop
shlb
adc
adc
mov
test
mov
test
pop
cmc
sub
push
or
mov
pop
xchg
add
cmpl
xor
cmpsb
stc
mov
es
cmp
icebp
or
mov
cmpl
push
addr16
je
sahf
mov
aas
mov
mov
movsl
mov
cmpl
fisttpl
sub
dec
stos
cmc
and
shrb
xor
pop
arpl
shlb
js
sarl
sbb
mov
hlt
rorb
lea
fidivl
pop
mov
scas
xor
arpl
fbld
add
xchg
and
push
mov
lods
sbbb
popf
mov
lcall
mov
addl
cwtl
push
std
fdiv
jle
pop
push
and
loopne
rcrl
popf
pushf
call
lret
or
push
enter
pop
sub
mov
mov
out
inc
fdivrs
movsl
and
sub
rcrb
popa
sbb
jno
mov
mov
pop
mov
fwait
aam
mov
pop
xor
cmc
enter
cwtl
test
lret
and
dec
dec
inc
insl
outsb
popf
in
mov
and
add
jne
and
lds
enter
int3
pop
pop
les
mov
adc
mov
andl
rcll
ljmp
lds
in
xchg
jecxz
mov
rolb
mov
loope
mov
rcrb
clc
stos
sub
add
or
dec
in
sahf
push
dec
xor
in
inc
mov
xor
aas
jns
add
jg
xchg
xchg
xor
add
mov
pop
mov
mov
push
cmp
mov
inc
cwtl
xchg
xchg
cltd
nop
mov
and
jo
mov
push
dec
push
out
jno
imul
or
inc
arpl
in
mov
lods
inc
imul
into
and
out
mov
push
dec
inc
in
sub
xchg
int3
or
lcall
in
inc
bnd
xor
mov
inc
cmpsb
cmc
push
mov
xlat
mov
push
into
es
sahf
pop
pop
xor
aas
movsb
stc
pop
enter
inc
jmp
daa
imul
ljmp
sub
lock
add
mov
in
inc
out
mov
push
or
mov
cmpsl
sahf
divb
mov
leave
cmpsb
mov
cmpsb
hlt
push
xchg
mov
pop
fmulp
push
out
test
movsb
xchg
mov
pop
push
sti
pop
and
mov
add
out
fcmovbe
cmc
iret
add
pop
sub
or
andl
sbb
lods
fsts
pop
pusha
pop
repz
into
loopne
dec
mov
mov
cmp
int3
mov
mov
adc
lds
leave
outsb
inc
lds
mov
mov
pop
fldt
and
push
pop
jns
ljmp
cld
testb
dec
std
insb
insl
or
and
repz
pop
les
push
fdivr
push
lods
and
add
sarl
mov
stos
decb
sub
push
push
mov
popa
fs
sub
jge
mov
dec
test
lcall
ss
mov
lcall
sub
and
pop
loopne
and
js
sti
cs
jno
arpl
shlb
pusha
cwtl
lea
in
out
repnz
pop
outsl
inc
add
pop
idivl
in
aam
roll
rcrb
or
mov
jecxz
inc
jne
fmul
outsl
push
dec
pushl
inc
push
add
fdivrl
adc
cmp
jne
popa
sarl
mov
jne
add
or
push
xchg
ds
lahf
stc
inc
and
xor
dec
fidivl
pop
xor
out
pop
sbb
sahf
and
jne
pop
lcall
lret
bound
aam
outsl
add
jl
add
xchg
xchg
add
jmp
mov
cmp
xchg
sub
mov
push
fsubrl
push
aad
pop
jne
push
stc
cmpsl
jmp
addl
shl
bound
je
cli
sub
push
pop
mov
xor
xor
and
add
dec
dec
rcl
mov
test
lret
je
jmp
push
addr16
or
fadds
out
cld
mov
fldl
and
mov
adc
push
in
imul
adc
ret
aad
sahf
incl
add
sbb
jl
xor
test
hlt
in
jne
or
cmp
and
cmpsl
xor
hlt
dec
pop
jno
jl
xchg
int
mov
jle
les
hlt
adc
jmp
fsubr
mov
dec
sub
decb
repz
add
jle
lret
jae
push
sbbl
jne
jbe
out
fsts
loope
dec
leave
lea
rorl
lea
popa
sub
push
lods
inc
addr16
push
mov
andl
push
and
sbb
mov
mov
bnd
cmpsl
sub
ljmp
arpl
ljmp
sub
mov
ljmp
mov
out
stc
shlb
nop
mov
and
xchg
int
aaa
pop
loope
outsb
mov
into
xlat
jnp
ljmp
mov
mov
stc
shll
mov
jecxz
push
into
push
clc
bound
fisubrl
loopne
xchg
out
jnp
test
ja
ret
iret
mov
and
xchg
out
aad
loope
std
outsl
xchg
mov
and
xorl
ret
sbb
js
mov
push
dec
popf
aam
mov
aas
and
cmp
sub
push
push
lods
fidivrs
lret
push
jae
mov
pop
add
push
jle
xchg
test
int3
push
mov
add
xchg
sahf
cli
mov
adc
rolb
xchg
sbb
scas
mov
fxtract
jns
lock
adc
jnp
and
xor
jmp
in
mov
or
fldl
out
pusha
icebp
out
push
outsl
out
sbb
in
push
sub
jnp,pt
xchg
jp
popf
dec
sub
pop
adc
mov
mov
mov
adc
mov
lods
fistl
jb
push
or
push
cmp
mov
bound
inc
bound
xor
test
int3
mov
mov
test
fimull
sahf
arpl
push
mov
out
add
adc
notl
cld
scas
jb
push
mov
mov
mov
mov
shlb
add
inc
test
jge
lea
mov
mov
scas
inc
ja
cmp
cli
cmp
and
filds
and
mov
jmp
and
popf
push
popa
xor
lock
cmp
mov
add
cmp
ret
push
add
and
mov
cmp
ss
out
push
mov
pusha
or
aam
loop
ds
inc
pop
ror
mov
cmp
adc
mov
cli
fbstp
leave
mov
js
xchg
jns
fistpl
lret
cmp
add
pushf
xor
jmp
scas
aad
hlt
jg
adc
and
pop
jbe
cli
inc
mov
gs
push
daa
mov
add
pusha
lock
or
out
into
push
xchg
int3
mov
mov
ror
push
mov
cmp
test
and
ret
ret
jo
mov
adc
lret
adc
pop
xchg
cli
fnstsw
in
pop
ret
cwtl
dec
lods
push
mov
dec
add
sbb
jmp
mov
pop
sarl
fwait
clc
bound
cmc
xchg
popa
aam
shrl
or
jecxz
lahf
mov
arpl
out
mov
mov
jno
xchg
add
hlt
out
jbe
xchg
xor
pop
and
shrb
repz
cmp
int
sub
arpl
adc
mov
cltd
sub
sub
aam
jp
sarb
insb
add
mov
sub
lahf
mov
xor
ja
movsl
pop
in
call
mov
bound
imul
repz
in
sub
xchg
shl
test
or
lea
daa
sub
xor
aaa
in
pop
sahf
dec
mov
jle
pop
filds
mov
inc
lock
je
cmp
cwtl
aas
jne
or
iret
mov
mov
scas
and
ret
cmp
cmp
push
jbe
and
sub
inc
jnp
add
daa
xchg
mov
lahf
pop
cltd
adc
scas
and
jle
pop
mov
mov
mov
scas
pop
sbb
fildll
pop
mov
ss
inc
mov
pop
cmp
aaa
icebp
pop
mov
movsb
dec
jle
lock
inc
addr16
add
sub
js
mulb
pop
into
mov
sub
mov
xchg
push
int
and
les
sub
jne
fidivrl
inc
mov
cld
cmc
push
dec
data16
mov
xor
xlat
mov
cmp
cmp
call
es
cmp
repz
adc
gs
xor
mul
leave
mov
sub
inc
shl
push
gs
mov
push
push
mov
mov
mov
outsb
jb
jns
cmp
pop
imul
mov
js
pop
adc
movsb
xor
inc
shll
dec
sar
mov
fstl
mov
dec
dec
mov
adc
cmp
out
adc
or
es
and
dec
jae
dec
stos
mov
sbbb
jg
inc
jl
lcall
mov
fldenv
and
fs
mov
aas
or
sub
jecxz
pop
mov
and
clc
and
mov
push
movsl
adc
inc
fwait
stos
cli
enter
repnz
movl
repz
aam
adc
pop
mov
mov
test
lea
clc
mov
sbb
sbb
cld
push
insb
das
dec
shrb
cmp
testl
mov
or
add
and
test
notl
pop
pop
je
jns
dec
mov
inc
inc
dec
mov
mov
mov
and
fldcw
popf
popf
and
into
sarl
mov
inc
push
inc
fcomps
out
stos
shrl
lret
xchg
mov
push
cmpsl
push
push
fistpll
push
test
sub
jne
ds
test
xchg
jne
out
jg
jl
arpl
pop
xchg
jbe
lret
cwtl
xchg
xchg
mov
sahf
mov
and
rcrb
cld
es
ljmp
inc
pusha
mov
popa
es
fcomps
roll
jmp
xchg
aad
cmp
stos
cmp
or
loope
mov
and
mov
lods
insl
push
cltd
mov
push
lret
xchg
andl
aas
sbb
jnp
push
xchg
test
jmp
icebp
es
sbbb
add
subl
cmp
lods
sbb
cs
loop
aam
inc
dec
pop
or
add
sbb
hlt
inc
in
in
pop
jl
cmc
shlb
dec
std
inc
push
dec
scas
aaa
test
into
out
imul
sub
fdivrp
sarl
mov
dec
cli
pop
in
cmpsb
mov
movsb
adc
fprem1
ss
int
pushf
pushf
or
xchg
add
std
les
movsl
gs
add
xor
mov
xor
xor
adc
imul
adc
add
mov
movsb
imul
sub
sub
sar
stc
out
leave
sahf
push
in
push
outsb
outsb
jl
lods
mov
jnp
or
cwtl
daa
or
cmp
push
movsb
inc
scas
or
cltd
stos
fdivr
mov
rcrl
sub
cmp
data16
testb
sahf
mov
and
add
stc
pusha
cmp
sub
insl
sbb
and
std
pop
adc
cmp
sbb
popf
pop
mov
in
lcall
rcrb
pop
dec
ret
jge
rcrb
sahf
push
sbb
je
mov
loop
inc
or
mov
xchg
push
xchg
xor
hlt
test
test
ficoml
dec
js
xor
xor
inc
push
mov
mov
inc
lcall
push
fwait
insl
loop
das
cmp
pop
cld
push
outsl
adc
jne
cmp
pop
in
jl
je
repz
dec
and
xchg
rorl
outsl
push
inc
aad
push
lock
push
sub
adc
mov
xor
stc
addb
jb
inc
test
insl
loope
rcrb
scas
pushf
fisubrl
and
push
fldcw
xor
rorl
in
out
sbb
incl
mov
outsb
push
mov
stc
add
bound
mov
mov
scas
add
sub
inc
push
scas
pop
xchg
das
add
inc
xchg
sub
dec
jb
cmp
lds
or
inc
sbb
dec
jne
les
subb
mov
ret
stc
cli
dec
sub
and
add
lcall
jle
push
push
push
fdivrl
xchg
cmp
fst
push
push
sahf
sbb
adc
pushf
jne
fdivl
push
add
xor
insl
inc
mov
inc
fldl
and
stos
xchg
pushl
movsl
sbb
xchg
stc
cmc
mov
push
aad
rclb
push
orb
xor
adc
or
lret
scas
test
add
scas
lods
fiaddl
out
adc
xlat
test
xchg
in
mov
pop
jmp
mov
xor
pop
fxch
lret
xchg
dec
push
xchg
outsb
sti
ja
cmp
out
ja
mov
pop
scas
fistps
or
cmpsb
je
ret
je
xchg
ljmp
inc
xor
xorl
ret
jge
and
xor
cltd
xlat
cmp
aas
mov
popa
sti
rcll
fidivrs
shlb
imul
flds
jnp
xchg
out
inc
inc
sti
xchg
add
pop
mov
pop
pop
and
aaa
fsts
pop
nop
cmpsl
adc
mov
push
jg
jbe
scas
ss
sahf
je
sbb
xchg
fsubrp
sub
sub
les
gs
arpl
shll
lret
fwait
into
aas
icebp
xchg
ljmp
repnz
sbb
shlb
rep
stos
mov
pop
dec
dec
jne
nop
shll
shrl
es
in
cmc
arpl
add
mov
loopne
adc
repz
xchg
or
sub
cmp
movsl
add
cmpsw
xor
lock
lods
push
rclb
dec
jne
adc
xchg
jae
jg
imul
sub
lock
out
lcall
or
or
nop
shrl
and
pop
mov
orl
sub
pop
and
daa
mov
push
cmp
sahf
frstor
jl
shll
in
addl
outsb
fwait
mov
cwtl
jp
mov
push
sti
add
popf
mov
sbbb
fisttpl
mov
cmp
cld
repnz
jae
movsb
xor
sbb
loopne
push
xorl
cmpsl
xchg
mov
and
fnstenv
mov
icebp
inc
outsl
aam
sub
outsb
pop
adcb
lods
rep
rol
dec
add
dec
idivb
jge
dec
insb
aam
leave
sub
outsb
mov
xlat
cmp
cwtl
xor
and
call
jecxz
dec
orb
sbb
and
dec
out
jle
sub
in
es
divb
mov
sub
shrl
jl
cwtl
push
out
sbb
add
aas
ss
fcmovnbe
sbb
xchg
rorl
out
pop
shl
mov
in
mov
jg
into
sbb
and
mov
and
sbb
jnp
pop
adc
cmp
jg
jmp
push
clc
loop
jl
cmp
arpl
sbb
mov
ret
xchg
lock
pop
sbb
fdivr
gs
cld
adc
les
xchg
ret
pushf
push
sub
mov
sbb
ljmp
sbb
and
sub
cltd
pop
pop
adc
and
in
mov
sbb
mov
test
nop
inc
cmpsl
sub
sub
les
das
inc
dec
loop
xchg
test
cmp
in
mov
lea
mov
sbb
xor
ds
aas
std
and
fnstsw
insb
fimull
fstps
ds
popf
out
fs
mov
sahf
push
aad
cltd
add
jg
fwait
jmp
sbb
into
int
push
test
and
cmpsl
fwait
icebp
repnz
xor
and
xchg
sarb
pop
xor
xorb
mov
xchg
and
ds
jge
cmc
or
movsb
cmp
jae
popa
fdivr
gs
arpl
pcmpgtw
add
mov
insb
nop
lret
sbb
mov
xchg
hlt
push
hlt
add
dec
mov
pop
scas
stos
push
adc
push
mov
jnp
pop
mov
into
adc
fldenv
mov
xor
mov
push
popa
jg
ss
jb
movl
xor
and
mov
mov
cld
nop
mov
or
hlt
iret
lea
sbb
mov
push
push
aas
outsl
repz
mov
adc
and
mov
cmp
ret
arpl
jnp
js
add
xchg
push
xor
mov
icebp
sub
push
mov
jne
mov
add
mov
ds
int
mov
mov
dec
fstpl
mov
pop
dec
push
xor
sbb
aaa
dec
daa
pop
xlat
lods
mov
xchg
in
xchg
mov
cmpsl
fstl
inc
cmp
pop
insl
pop
jge
dec
daa
pop
xlat
lods
mov
xchg
in
xchg
mov
cmpsl
fstl
ja
pop
jne
sbb
aaa
dec
out
xlat
jne
mov
xchg
in
xchg
std
mov
dec
fldl
sbb
pop
insl
pop
jge
int
pop
xlat
push
cmp
pop
out
loopne
lar
pop
and
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
call
std
fsubr
mov
repnz
lods
imul
dec
insl
pop
outsl
sub
sbb
enter
test
mov
lods
push
pop
pop
insl
sub
fisttpll
cmp
clc
int
in
hlt
test
mov
mov
mov
cmp
arpl
jno
pushf
fstpl
cmpsw
jb
push
arpl
adc
push
movb
cmp
rcrl
addb
aaa
jne
adc
aaa
jo
aam
cmc
movsl
mov
cmpsl
insl
jg
cmp
cmp
xchg
dec
mov
lret
push
inc
leave
movl
rcr
sub
sbb
or
sarb
push
cwtl
or
cmpsl
xchg
js
cmp
lock
inc
mov
add
jno
in
adc
cmp
insl
js
mov
rcl
rolb
sub
andl
and
pop
cmp
jge
dec
imul
sbb
enter
test
mov
mov
inc
js
dec
fs
je
add
sbb
mov
sahf
in
int
xlat
jecxz
rcrl
sbb
add
cmp
mov
stos
lea
mov
sbb
sub
or
fildll
bound
jb
pushf
clc
test
pushf
mov
lea
pop
js
dec
jge
insl
sub
sbb
enter
test
mov
lods
push
jge
insl
sub
sbb
push
fsubl
add
inc
cmc
dec
leave
sbb
cmpsl
push
inc
std
jo
sti
movsl
iret
insb
mov
fists
jl
mov
leave
cmp
addl
lea
arpl
jg
lods
test
sar
popa
pop
jmp
mov
adc
jnp
fst
or
lahf
push
cmp
or
or
std
movsl
jnp
cld
mov
add
pop
cmc
and
fdivl
xchg
das
dec
push
imul
mov
dec
hlt
test
xor
or
mov
int3
aaa
push
test
mov
out
pusha
mov
mov
cmp
in
fmul
int3
icebp
xchg
adc
outsb
cmp
mov
cmc
adc
cli
adcl
sbb
pop
and
cld
in
lea
xor
xlat
push
cmp
leave
aaa
cmpsl
push
out
push
lods
jl
jmp
je
fdivrl
orb
lahf
push
or
cmpsb
adcb
stos
push
xchg
lock
xor
xor
add
add
repz
dec
sbb
hlt
scas
xorl
jecxz
repnz
or
andl
mov
push
enter
fadd
loop
daa
mov
out
out
scas
or
shrl
mov
dec
jne
je
ljmp
lahf
lods
lcall
fwait
mov
wrmsr
xor
sbb
jge
mov
mulb
rolb
sbb
add
inc
pop
daa
mov
and
sbb
xor
pop
push
and
cli
lcall
dec
lods
and
adc
out
jmp
cmc
int3
add
imul
aas
xchg
icebp
std
jns
repz
push
leave
cmp
mov
pop
cli
dec
push
in
or
and
inc
jg
xchg
imul
cmpb
cmp
jp
fcmove
adc
insb
mov
add
addr16
loope
inc
insl
sbb
mov
enter
shlb
cmpsb
fisttpl
jb
xor
mov
shlb
ret
not
inc
loope
nop
jne
and
lcall
mov
cmpsl
cmpsb
loopne
push
cmpsb
cmc
mov
arpl
test
lods
lea
jns
push
cmp
cmovbe
push
xchg
aad
xchg
push
addr16
shl
mov
push
hlt
mov
lods
lret
jnp
es
adc
jl
mov
mov
scas
mov
push
and
push
inc
mov
push
loope
and
jmp
fildl
pop
outsb
xor
xlat
in
roll
mov
ret
and
fldt
mov
xchg
sub
clc
jl
pop
or
inc
bound
mov
sbb
mov
mov
test
in
rcl
mov
shll
push
nop
testb
dec
sbb
out
outsl
xchg
popa
or
cmp
mov
jmp
push
cmpl
inc
bound
inc
shlb
ds
push
mov
mov
pop
repnz
shll
mov
fcoml
fistpl
cmp
and
shll
decb
lods
pop
stos
inc
lret
push
xchg
xor
xor
fimull
cs
mov
push
wbinvd
push
in
sub
inc
pop
push
jecxz
mov
stos
or
fwait
xchg
subps
fcmovne
and
adc
sbb
jmp
cmp
inc
scas
popf
sbb
lds
mov
ds
stos
adc
mov
xchg
clc
scas
or
jmp
das
adc
fadds
test
or
ljmp
mov
lcall
das
cwtl
add
rcll
push
mov
shll
pop
jp
cmpsb
les
mov
xor
inc
lea
inc
dec
call
push
jo
dec
leave
popf
stos
or
jno
push
das
cmc
sub
std
push
stos
and
out
or
sbb
fnsave
push
add
iret
dec
flds
ss
into
pop
mov
pop
adc
push
or
lock
in
pushf
and
hlt
mov
mov
inc
cmp
dec
sbb
cmpsl
xchg
movsl
and
inc
cmp
rolb
jl
rcrl
bound
mov
or
mov
inc
mov
add
push
testb
mov
out
lock
fistpl
push
jmp
inc
insl
jae
shrb
xchg
out
pusha
mov
ret
mov
or
dec
mov
shrb
mov
icebp
xchg
jb
pusha
push
int3
adc
aam
xor
lret
sarl
dec
outsb
call
mov
das
pop
xchg
sub
inc
inc
jg
jnp
clc
decb
mov
cmpsb
inc
leave
sbb
dec
iret
and
lret
cld
sbb
lea
xor
cmpsb
outsl
int
cwtl
lcall
scas
cli
xor
sti
jmp
xchg
push
stos
rolw
pop
push
add
sub
push
ret
pop
outsl
aaa
ret
scas
pop
push
add
mov
sahf
push
xor
iret
fimuls
test
gs
cmp
gs
mov
cli
pop
imul
mov
xchg
push
cltd
mov
inc
pop
cmp
inc
movsl
inc
dec
bound
in
std
lods
bound
mov
xchg
add
sub
pop
sti
mov
mov
adc
jbe
shlb
aam
and
in
cld
push
sbb
syscall
ret
fdivrl
mov
cmpsl
hlt
cwtl
ja
push
mov
pop
je
adc
xlat
shrl
mov
sbb
hlt
lret
sbb
mov
and
adc
mov
push
mov
movsb
mov
pop
int
adc
xor
insl
dec
sbb
into
jbe
dec
jp
sti
daa
leave
fwait
push
xlat
sbb
cmp
in
cltd
inc
xlat
mov
imul
arpl
xlat
and
shll
sbb
mov
jae
and
out
icebp
ret
bound
mov
jbe
xor
imul
mov
cmpsl
mov
adc
mov
mov
jecxz
push
outsb
mov
test
pop
ss
dec
or
push
sbb
in
cmp
dec
repz
push
mov
cltd
mov
xor
jae
and
add
std
in
add
sbb
jno
cmpl
add
lea
xor
cmp
jl
cmp
outsl
dec
int3
xchg
subl
lahf
aad
pop
aad
je
mov
dec
and
repnz
pop
lret
addr16
cmc
mov
data16
cmp
sub
pop
cmp
add
push
push
insb
insl
fwait
js
cltd
push
fmull
iret
cmp
push
xchg
jmp
xchg
and
sbb
les
shrb
mov
add
mov
pop
mov
adc
arpl
cld
dec
xchg
mov
popa
pop
mov
fcmove
xchg
sbb
xchg
adc
inc
loopne
xlat
xor
shll
clc
mov
shl
in
jmp
add
je
sbb
int3
in
arpl
fsubrs
pop
xchg
loopne
adc
repnz
aad
and
add
gs
lahf
sub
mov
dec
add
xchg
and
add
sub
push
in
ds
dec
sysenter
sbb
or
lods
and
aad
out
xor
fisttpl
push
jns
lods
mov
jl
ret
jno
sub
and
mov
cmpsb
cmp
and
or
push
xchg
repz
add
cmpsl
inc
rol
std
fldcw
jno
xor
jbe
adc
jmp
jnp
out
ret
pop
or
test
aas
fwait
push
cmp
fstpl
jns
out
daa
jl
adc
lcall
addl
or
cltd
imul
inc
in
push
fmuls
cld
xor
cmp
sbb
sbb
push
les
and
sti
push
xor
mull
xchg
es
mov
jae
inc
xlat
insl
in
and
and
mov
stc
jae
stos
jae
cmp
ss
lds
ud2
adcl
jg
scas
ds
out
inc
cli
std
fisttpll
xor
fimull
cmp
add
cmp
cmp
inc
xchg
icebp
rorb
dec
mov
lds
andl
and
arpl
sbb
cld
bound
cld
cmpsb
enter
fisttpl
loopne
push
push
sbb
mov
cmp
jle
sbb
push
mov
loope
insb
lahf
xchg
and
xchg
int3
loop
mov
sub
xor
sbb
clc
cmp
pop
push
int3
xlat
adc
jno
jo
in
lds
cmpsb
fcomi
jno
movsl
sahf
mov
and
dec
mov
stc
subl
mov
mov
shr
sahf
sahf
and
cmc
loope
sbb
sarl
add
push
adc
mov
pop
int
divb
out
int3
push
cmp
jb
inc
inc
ret
cmpsb
push
fs
pop
stos
pop
push
sub
frstor
ret
sbb
push
add
insb
pop
xchg
add
mov
xchg
cmp
enter
or
push
cmovnp
out
adc
repnz
dec
inc
xchg
pop
sbb
popa
push
leave
add
push
mov
adc
pusha
das
xchg
or
fsubl
fmul
or
mov
nop
sbb
push
adc
dec
int
test
mov
sbb
test
lock
in
stos
xor
jnp
cld
ds
mov
mov
inc
insb
add
or
cmpsl
dec
inc
mov
sub
push
xchg
adcb
add
and
or
jg
ja
out
sbb
nop
aad
je
jb
cli
bound
sarb
cmpsb
xchg
in
fsubr
mov
push
mov
rorl
pop
cmp
xor
aam
test
dec
aam
sub
rcll
in
inc
testb
ss
movsl
xchg
cmpb
mov
ss
fbstp
ret
pop
mov
and
je
sbb
ljmp
inc
adc
out
and
xchg
out
popf
cs
lret
jp
dec
aam
and
aas
out
aam
out
in
push
push
cmc
js
or
jl
icebp
dec
je
out
dec
jg
loop
mov
bound
pop
push
or
or
int
or
push
icebp
stc
repnz
jg
lods
jnp
lcall
jg
movsb
scas
xor
cltd
fists
loopne
js
sti
or
xor
pop
movsb
rcrl
adc
cmpl
adc
outsl
movsb
adc
dec
inc
jge
lahf
insl
mov
scas
arpl
xchg
dec
pop
leave
push
or
mov
xor
pop
outsl
sub
test
or
sub
aam
jecxz
ret
mov
inc
dec
out
cmp
out
mov
inc
leave
popa
push
sub
sbb
das
lahf
push
data16
cmp
outsl
icebp
add
sarl
mov
shrb
cmp
pop
dec
call
sbb
cmp
jae
jg
push
ret
jecxz
xchg
jo
push
lcall
add
or
loope
lods
lret
pop
shl
icebp
lret
mov
in
push
mov
aam
lcall
js
push
cmp
cwtl
push
jne
imul
in
or
dec
or
icebp
xchg
and
fists
movsl
xor
movsl
ljmp
loope
and
xchg
ljmp
ljmp
inc
sub
pop
jmp
enter
or
inc
aaa
out
pusha
fimull
pushf
xor
adc
in
lret
arpl
fbstp
pop
xchg
stc
lret
in
push
jnp
xor
sbb
out
dec
adc
lea
mov
jecxz
lock
or
xor
negb
out
mov
xchg
scas
mov
roll
addr16
fiadds
pop
ljmp
loopne
cmpsl
cs
cld
xor
mov
fnstenv
mov
lds
mov
add
mov
les
in
dec
xchg
dec
pop
mov
mov
out
lret
jbe
sub
call
inc
sub
test
outsb
xlat
xor
pop
cmc
andb
loope
inc
dec
xchg
pop
popf
jl
ret
call
or
adc
sarb
js
dec
addb
sahf
cmpsb
xor
pop
pop
aad
jns
and
push
pop
mov
mov
les
out
clc
leave
and
or
ret
pop
adc
xor
mov
insl
xchg
adc
mov
cmpsb
in
fmull
popa
xchg
or
je
mov
mov
jl
dec
lods
popa
outsb
fiadds
sahf
xor
std
outsb
dec
insl
pop
cmp
xchg
push
rcl
std
cld
xor
mov
xchg
sbb
int
mov
call
push
out
icebp
and
mov
push
push
pop
sub
or
lret
loop
pop
jg
fwait
into
xchg
js
pop
xchg
mov
mov
outsl
ja
testb
pop
sub
jnp
mov
iret
ss
xchg
insl
or
jle
lock
lcall
dec
popf
aam
jnp
adc
sbb
add
cmp
shl
les
push
iret
icebp
xchg
lods
jecxz
xchg
movsb
jo
mov
lods
movsl
xor
jmp
jo
hlt
adc
inc
test
lret
or
pushf
std
xchg
xchg
das
mov
iret
sbb
adc
jmp
xor
ss
adc
stos
dec
ja
cmp
inc
repz
and
xchg
in
push
scas
out
lods
pusha
pop
add
fists
mov
inc
pop
arpl
pop
mov
mov
inc
movsb
scas
test
in
call
into
pop
and
pop
movsb
jl
add
mov
les
push
dec
icebp
jl
fldcw
xor
sbb
inc
dec
push
pop
xchg
push
leave
div
test
in
pop
lcall
addr16
dec
mov
xlat
push
or
aam
dec
pop
jb
or
mov
pushw
repz
mov
aad
and
xchg
es
xchg
mov
out
orl
dec
std
fmul
in
aam
stc
ret
pop
cmpsl
jno
and
sbb
lcall
js
dec
mov
xor
cltd
orl
dec
sbb
mov
inc
xchg
xchg
lea
ja
testb
data16
sbb
hlt
leave
jmp
test
idivl
pop
push
jmp
loope
mov
ja
pop
in
jg
adc
inc
dec
xor
les
pop
adc
leave
sbb
inc
push
popa
jecxz
daa
mov
sbb
add
dec
cmp
out
pushf
lahf
pusha
lret
mov
sub
inc
mov
xor
cmp
or
scas
cmp
pop
push
loope
imul
imul
and
sub
adc
dec
or
data16
cmp
xor
ljmp
xchg
into
in
nop
or
adc
ljmp
sar
fistps
push
pop
sub
cmp
pop
dec
add
loope
arpl
xchg
pop
mov
cltd
movb
cmc
imul
xchg
cs
cwtl
bswap
push
xlat
adc
cmp
mov
dec
inc
inc
dec
inc
adcl
insb
ljmp
dec
push
mov
inc
daa
outsb
sahf
mov
clc
test
or
and
xor
ret
xor
out
dec
fiadds
xor
sbb
mov
test
mov
jg
xchg
lods
pop
imul
mov
jae
add
fcmovu
mov
jae
lcall
xchg
cmp
and
xchg
daa
dec
pop
out
jg
fbstp
inc
incl
cmpsb
cmc
pop
es
mov
inc
jle
sub
and
mov
ror
sbb
xor
arpl
jae
and
pusha
add
imul
push
insb
pop
adc
mov
daa
pop
dec
cmpsb
jge
aam
scas
fnsave
stc
or
sbb
shll
or
stos
mov
mov
call
push
sbb
cmp
sub
test
adc
fld
subl
imul
cwtl
sub
jecxz
aam
xchg
xor
xchg
popa
sbb
idiv
mov
push
out
je
push
or
mov
pop
sarl
insl
lods
test
mov
adc
ror
or
and
pop
xchg
lods
jmp
ds
mov
or
add
or
fnstenv
and
mov
jl
or
lret
fisttpll
dec
adc
inc
push
fwait
xchg
insl
ficoms
imul
loope
ror
dec
xchg
pop
cmp
nop
es
sub
fisttps
push
push
xlat
mov
push
ss
jb
xor
jge
push
stos
xchg
sbb
out
mov
sub
mov
mov
mov
dec
inc
outsl
loop
mov
jecxz
inc
jle
or
jb
xchg
pushf
lea
repz
push
dec
push
fiaddl
adcb
cmp
mov
mov
sbb
dec
xchg
push
xchg
add
bound
cwtl
pop
inc
and
pop
negb
jne
sub
dec
leave
push
lret
nop
int
test
fmul
int3
ljmp
loop
cmp
lods
loope
mov
les
enter
adc
jns
push
lret
cmpsl
fwait
mov
push
xchg
xlat
leave
mov
sub
inc
lahf
imul
and
mov
repz
jg
fstps
das
mov
jle
mov
mov
xchg
pop
insb
push
aam
mov
xchg
jns
cltd
adc
jne
push
push
sbb
lret
dec
lret
stos
icebp
lcall
out
dec
loopne
add
mov
dec
mov
or
enter
xchg
pop
sbb
bound
mov
push
cmpsl
cmp
jne
mov
cli
mov
mov
fisubs
es
add
xor
ret
out
mov
mov
shl
xor
sbb
mov
cmp
popf
mov
mov
xchg
es
ja
ljmp
aam
out
popf
cli
jb
dec
imul
cmpsb
ret
xlat
stos
sbb
or
push
sub
hlt
xor
aam
imul
mov
xor
pushf
cmp
dec
std
stos
std
xchg
and
xor
mov
rclb
mov
leave
movsb
in
ror
inc
mov
stos
cmp
cmp
adc
pop
popf
cld
sahf
lret
aas
or
xor
iret
xor
ljmp
pop
out
pop
cmp
mov
sub
jmp
pop
sub
adc
ja
mov
jo
pop
mov
push
add
mov
inc
or
daa
subb
repnz
or
jp
loopne
jnp
or
icebp
lods
sbb
inc
dec
test
mov
dec
loopne
xchg
rolb
xchg
jmp
or
imulb
iret
repz
andb
repnz
dec
out
dec
fldenv
mov
inc
add
push
push
enter
mov
outsl
lcall
push
out
or
lods
or
and
outsl
xor
xchg
aam
lret
pushf
fwait
xor
adc
jecxz
lock
mov
ficomps
arpl
mov
push
cmp
adc
popa
sbb
dec
pop
mov
es
xor
daa
loopne
lods
jno
stc
mov
outsl
data16
outsl
jne
movsb
pop
jecxz
lock
sub
cli
cld
rolb
xlat
inc
lods
inc
or
inc
sub
into
stos
jns
fwait
daa
cmp
rcrb
push
push
nop
cs
outsl
xchg
jl
cwtl
xchg
sub
dec
rcrb
inc
gs
nop
xor
hlt
push
inc
push
out
add
push
xor
adc
pop
dec
test
sbb
or
cmp
addr16
stos
test
inc
push
je
arpl
mov
movsb
cmp
sbb
mov
dec
xchg
es
jbe
lret
push
in
and
repnz
mov
dec
sub
rcr
and
aam
int
adc
sub
roll
out
jecxz
push
mov
shll
mov
or
adc
mov
in
lds
and
dec
test
fiaddl
imul
aam
lret
xchg
jnp
popf
lcall
pushf
and
mov
jae
sub
push
jl
ret
aam
sahf
outsl
out
add
sbb
sub
dec
hlt
sbb
inc
dec
fisubrl
inc
pop
loope
pushf
test
ret
inc
mov
add
orb
dec
cwtl
jecxz
aad
push
scas
jne
bound
clc
xchg
xlat
push
or
repz
rcrb
push
push
fs
repz
fldenv
fs
movsb
arpl
jecxz
repz
inc
in
cmpsl
adc
call
cmp
fs
and
cmpsl
std
pop
fimuls
mov
inc
div
mov
mov
pop
mov
inc
sahf
cmp
stc
add
and
nop
outsl
int
adc
in
test
mov
lods
push
jge
insl
sub
sbb
enter
test
mov
lods
push
jge
insl
sub
sbb
enter
test
mov
lods
imul
insb
sub
sbb
enter
test
mov
lods
xchg
pop
xchg
loop
pop
sbb
mov
lock
push
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
pusha
dec
sub
or
sbb
inc
and
fstpl
mov
mov
sub
jp
push
pop
sub
dec
mov
stos
fdivr
in
dec
cld
cli
jmp
fisubrl
inc
add
arpl
pop
es
xchg
decb
test
add
sub
or
les
roll
push
xchg
push
call
push
pop
rclb
lds
dec
cmpsl
sbb
sub
jl
out
stos
roll
and
xchg
inc
in
mov
inc
mov
sub
push
pop
enter
imul
pop
push
popa
mov
xchg
add
lods
or
mov
pop
or
or
pop
dec
mov
lcall
sbb
leave
aad
inc
xchg
jle
sub
stos
imul
push
and
mov
mov
xor
fidivl
xchg
movl
push
mov
adc
jl
scas
lret
pop
sub
sbb
sbb
sub
and
xor
in
xchg
repnz
mov
mov
jg
outsb
sbb
push
pop
jge
inc
daa
pop
into
mov
in
xchg
jmp
scas
sarb
and
or
push
or
push
ss
femms
mov
mov
lahf
cld
cltd
pushf
stos
lret
lret
dec
sbb
or
add
push
pop
sub
cmp
int3
stos
fcompl
mov
pushf
fisubrl
pop
sbb
jp
push
pop
sub
cmp
int3
stos
fcompl
mov
pushf
fisubrl
dec
inc
jmp
jle
xchg
icebp
popf
test
test
cmp
lds
push
lds
fisubs
loope
imul
xor
aaa
sub
pop
orl
pop
xchg
xor
jp
cltd
add
adc
and
mov
adc
mov
popa
out
lahf
sub
lea
fstps
cmpsb
jl
dec
insl
dec
mov
push
adc
jbe
xchg
shrb
dec
lret
dec
shrl
add
cmpsb
sub
mov
mov
ja
cmp
stos
loopne
inc
shl
popf
xchg
xor
lret
or
fidivl
add
mov
mov
fwait
xor
pop
xchg
sbb
sub
lcall
insb
lock
inc
addr16
cld
dec
jae
xor
sti
rcl
dec
daa
repz
les
and
enter
fbstp
xchg
lods
shrb
mov
iret
fisubrs
sbb
lahf
cwtl
xchg
pushf
sti
push
fwait
cwtl
nop
xor
das
ja
mov
mov
popf
lret
ljmp
movsb
and
xchg
daa
pusha
repz
in
mov
mov
fsubp
fisttpl
js
mov
xchg
pusha
lods
insl
sub
pop
add
jge
cld
or
stc
jle
lret
inc
inc
inc
jmp
imul
scas
loopne
sub
lock
sub
add
add
shll
test
shrl
or
aam
pop
mov
mov
mov
test
mov
cmp
and
hlt
or
aam
jmp
sar
adc
inc
xor
add
dec
and
cmp
test
pop
push
jne
in
inc
testb
scas
gs
decb
ss
and
inc
pop
cs
push
push
repnz
mov
mov
cmpsb
ffreep
mov
negb
push
sbb
fisttpl
sub
movsb
mov
sbbl
stos
fs
daa
movsb
xchg
or
mov
xor
int3
mov
cwtl
adc
cld
xor
or
jmp
xchg
lea
stos
mov
xchg
aas
jg
and
pop
push
iret
stos
or
in
into
pop
pop
cmp
in
adc
dec
or
sbb
inc
std
and
test
mov
negb
fstl
addb
fcmovnu
xchg
test
push
xor
pop
aaa
pop
icebp
je
pop
cmc
dec
xchg
fwait
aam
xor
inc
mov
mov
aas
arpl
fimull
xchg
mov
cmpsl
cmp
stc
test
rolb
xor
dec
addr16
mov
dec
outsl
xor
lds
pop
xor
push
mov
pop
and
xorl
fdivr
mov
cmp
or
inc
cmp
and
shrb
xchg
xor
cmc
pop
inc
sbb
and
mov
jne
push
lds
and
and
loopne
or
mov
pop
das
inc
mov
push
mov
in
mov
push
inc
xchg
fcmove
scas
or
in
int3
pcmpgtw
cmp
jl
test
dec
out
mov
les
fs
xchg
ljmp
jge
push
mov
lcall
arpl
popf
xor
adc
mov
pop
fcompl
ljmp
imul
pushf
lds
xor
fmuls
dec
jp
mov
lea
mov
push
push
je
pop
fstl
sbbb
fwait
add
ficomps
dec
or
xlat
push
fwait
and
stos
cmp
test
daa
cmpsb
jb
test
mov
lret
add
sti
cmp
call
cltd
nop
fdivrl
adc
jmp
js
add
cltd
into
int
imul
cs
or
fsubs
pop
sub
sbb
sbbb
pop
inc
lods
stos
lret
mov
inc
add
into
xchg
movsb
ja
push
fstpl
repz
sbb
out
in
mov
call
xorb
rolb
les
push
loopne
fsubr
and
add
lods
xchg
and
and
pop
lods
or
xchg
mov
movsl
cmpsb
inc
repnz
out
ret
stos
lret
mov
mov
jge
rolb
sar
neg
dec
xchg
jno
pavgw
xor
push
sarb
stos
in
or
bound
loopne
xchg
outsb
jb,pn
lret
add
mov
push
lock
loopne
lock
dec
subl
lods
adc
dec
pop
mov
hlt
mov
push
sbb
test
pop
xchg
pushf
xor
scas
mov
jo
cmp
cmpsb
outsl
add
lods
pop
dec
mulps
pop
arpl
push
loopne
rcl
inc
dec
shll
sarb
imul
sub
insb
lds
jo
add
aad
and
cmp
cmp
mov
or
inc
test
imul
lret
mov
xor
js
shll
aad
cmp
xchg
data16
cli
dec
fisttpll
outsb
push
sub
shlb
fsts
sub
out
sub
xor
lret
pop
or
sarb
dec
mov
stc
mov
push
lret
and
mov
int
test
pop
cmpsb
or
mov
xor
dec
dec
pushf
xor
push
xor
push
popf
mov
pop
aas
scas
cmp
mov
sarl
sahf
repz
xchg
aaa
dec
outsb
xor
inc
mov
insb
push
and
ret
cmp
adc
mov
clc
and
pop
sbb
inc
or
popf
outsb
arpl
cli
mov
xchg
add
movsl
adc
pop
mov
fstps
or
push
mov
repz
stos
sbb
fs
inc
dec
jmp
xchg
xchg
cmp
or
test
out
pop
inc
fistpll
daa
icebp
adc
mov
jmp
xchg
mov
sbb
nop
jecxz
adc
ret
iret
addb
mov
clc
addr16
xchg
jb
pop
pop
sub
aad
filds
aaa
out
mov
adc
push
dec
xor
arpl
into
test
rol
add
decb
int
enter
inc
push
negl
outsl
pop
in
sub
pop
mulb
fistpll
pop
test
adc
jmp
push
sub
lcall
jg
or
jecxz
xlat
add
mov
xchg
add
imul
ficompl
inc
push
rcll
dec
and
add
inc
add
lock
adc
inc
aam
jb
and
dec
movsl
int3
cmpl
gs
push
iret
inc
hlt
ds
jle
add
adc
mov
dec
lods
mov
cmp
in
mov
addl
adc
mov
or
lds
sub
imul
int
or
test
fstpl
ffree
pop
idivl
hlt
or
test
incl
xlat
aaa
test
add
or
mov
loope
imul
fs
mov
push
mov
repz
std
cmc
mov
orl
adc
adc
xor
in
pop
jns
ret
jg
shl
xchg
sbb
jno
adc
daa
add
or
push
stc
lret
mov
or
mov
nop
push
mov
aas
push
push
addr16
mov
mov
cmp
jp
imul
mov
or
arpl
xchg
xor
add
xlat
dec
and
mov
xor
dec
fldenv
fiaddl
or
add
cwtl
jmp
popf
stos
xchg
jle
push
stos
jmp
rcl
scas
and
sub
xor
cmp
add
idiv
cmpsb
pop
sbb
xchg
pop
cmp
xor
test
dec
clc
push
repz
cmp
xchg
and
sarl
cli
test
lret
jmp
and
out
dec
fwait
lcall
clc
movsl
jg
icebp
sub
shl
xchg
xchg
push
inc
in
add
or
jo
xchg
arpl
xor
or
xorb
outsl
mov
add
mov
shlb
fcmovne
shrl
int
sub
ret
adc
gs
lahf
imul
cmp
pusha
cmpsb
mov
sbb
push
ret
cmpsb
mov
movsl
movsb
pop
dec
cmpsl
stos
mov
fsubrl
fidivrs
jge
jne
pop
imul
adc
jecxz
inc
jmp
negl
and
arpl
sbb
imul
shlb
addr16
sbb
daa
cltd
or
sub
inc
sub
xor
repnz
cmpsb
loope
push
out
je
scas
mov
dec
lods
mov
shll
je
adc
pop
mov
and
xor
add
lcall
pop
in
push
cs
add
fndisi(8087
adc
leave
je
inc
in
loope
sub
data16
push
push
push
mov
mov
jle
sub
sbb
rsqrtps
pop
adc
out
insb
sbb
ss
cmp
and
mov
push
stos
add
xchg
mov
outsl
mov
xchg
ja,pn
roll
mull
mov
fildll
sbb
xchg
pop
xor
popf
mov
push
sbb
sub
xorb
dec
dec
shrb
lods
inc
and
xor
xchg
lahf
inc
xor
jmp
nop
pop
and
xlat
push
ror
pusha
loopne
fiadds
pop
ss
mov
inc
mov
loope
or
daa
mov
fcomps
js
mov
les
cmp
das
jbe
xchg
jl
push
scas
sbbb
fwait
adc
sub
add
mov
andl
mov
iret
sbb
jmp
ljmp
testl
cli
fst
cmp
ss
push
movsl
int3
testb
aas
push
mov
flds
fidivl
xchg
cmp
mov
dec
das
mov
loope
cmpsl
movsl
lea
cwtl
popa
fstps
cmpl
stos
pusha
sbb
adc
adc
fwait
and
or
dec
hlt
xchg
mov
imul
fldenv
add
int
std
jmp
sbb
in
imul
jb
xchg
push
xchg
adc
int
icebp
sahf
insl
xchg
mov
adc
mov
jb
shlb
sbb
jecxz
and
dec
mov
in
push
popa
pop
mov
or
imul
ja
or
mulb
mov
xor
iret
mov
incl
add
pop
fnsave
mov
push
and
test
test
cmpsb
add
and
push
push
gs
stc
adc
daa
adc
loope
fs
les
jg
dec
in
push
fstpt
shrb
sarb
add
jl
and
rolb
in
push
fcmovnb
inc
sbb
sub
testb
adc
int3
repnz
mov
add
lcall
ja
cmp
xchg
jns
in
jge
push
cmpsb
adc
and
push
fwait
test
cmpl
inc
mov
sarb
dec
fcoml
hlt
lea
or
loop
dec
rorb
push
mov
dec
sub
lret
adc
jbe
icebp
inc
cmp
imul
adc
pop
inc
aas
sbb
inc
in
jbe
adc
add
dec
call
jb
jmp
cmpsb
lret
or
mov
push
xchg
lock
pop
rcll
je
dec
hlt
and
shrb
push
xor
dec
int
pop
test
add
dec
cmp
and
mov
lcall
inc
insb
xchg
sarb
or
test
lret
sub
xchg
jp
les
ret
sbb
xchg
cli
mov
in
iret
repnz
call
sub
mov
mov
lods
mov
nop
sub
mov
push
test
add
mov
rol
push
and
push
inc
mov
add
pop
mov
mov
ret
add
data16
fldcw
and
push
pop
sarl
je
mov
fstl
aaa
das
out
dec
pushf
lods
dec
hlt
xchg
xlat
push
rorl
add
pusha
adc
leave
pop
inc
push
xchg
shlb
push
jb
xor
adc
jo
in
fsubrs
mov
repz
push
jo
adc
dec
cmpb
lock
out
les
and
cwtl
out
and
adc
fsts
fstpt
jle
ror
sbb
iret
inc
mov
mov
mov
mov
pop
sarb
jmp
loope
daa
scas
and
outsl
sbb
mov
mov
lock
fpatan
mov
into
jg
call
or
or
in
push
loopne
push
jg
jns
mov
flds
add
and
movb
repnz
add
inc
pop
jae
ds
xchg
movsl
mov
mov
pop
mov
dec
test
mov
das
bound
jb
out
lock
pop
jno
das
sub
out
mov
repnz
cmc
push
sub
xor
data16
mov
adcl
xchg
lahf
imul
dec
fstl
push
add
mov
inc
or
jecxz
aaa
xchg
test
cmc
mov
mov
add
push
dec
insl
in
jo
and
outsl
test
fimuls
incb
sbb
cmpl
aaa
cmc
call
xchg
out
jb
fldt
js
push
sub
jnp
and
mov
lret
scas
sub
out
inc
movsb
int3
lret
mov
sub
in
xlat
int3
xor
xchg
sub
add
xchg
test
mov
movsl
mov
jmp
push
or
fwait
inc
lret
std
add
adc
pusha
lahf
and
mull
or
adc
cwtl
cwtl
outsl
pushf
fisubl
pop
mov
arpl
mov
movsl
aad
pop
dec
nop
cmpl
push
xchg
imul
sbb
jae
aam
mov
inc
pop
mov
pop
adc
pop
pushf
push
and
scas
in
popw
mov
addr16
sub
mov
mov
ss
orl
sti
jno
sbb
cmp
xlat
aad
sub
pop
movsb
ds
call
fsubs
jae
aam
inc
sahf
mov
mov
ljmp
ret
add
loopne
sbb
dec
xchg
roll
aas
call
xor
push
mov
jnp
les
mov
xor
sti
shrd
xchg
movsl
or
mov
loopne
mov
das
sbb
fisubs
or
into
fistpl
xchg
xchg
cli
shlb
clc
in
push
xchg
push
outsl
and
enter
jne
mov
pusha
les
sbb
xchg
mov
jns
scas
cs
adc
rorl
out
loopne
addb
es
and
and
mov
hlt
lds
mov
imul
push
pop
add
jecxz
mov
dec
cmpsl
lgs
mov
mov
fbld
sub
push
cmp
push
fcompl
and
std
insb
rorl
cli
fcoml
xchg
in
out
loop
xlat
or
jo
lret
cmp
push
popf
lahf
mov
cmp
push
imul
lds
out
scas
mov
dec
adc
nop
push
jecxz
push
add
jne
sbb
jno
push
dec
xchg
aaa
inc
mov
pop
jle
pop
sbb
out
sar
dec
clc
pusha
out
test
mov
enter
push
push
lock
add
xor
mov
jecxz
fnstsw
out
lods
cmp
rorb
pusha
pop
fwait
mov
push
les
scas
push
int
arpl
inc
mov
outsl
mov
xor
outsb
sub
cmp
stos
insl
cmp
mov
and
lret
movsb
stos
test
sbb
sub
std
das
push
sub
ffreep
imul
loop
pop
pop
loope
push
jmp
mov
nopl
or
and
testl
and
sub
lahf
add
push
call
or
dec
jno
and
dec
stos
jge
inc
in
inc
push
ret
and
dec
xor
in
adc
call
mov
dec
dec
sub
gs
and
jg
leave
lods
mov
or
into
fsts
andb
cmp
inc
xor
mov
dec
fldl
loopne
lret
roll
inc
add
pop
pusha
ret
push
xchg
ret
jne
adc
movsb
addb
sbb
pop
add
pusha
filds
adc
test
into
pop
mov
clc
cmpsl
insb
inc
push
pop
hlt
jb
sub
in
mov
push
pop
mov
cwtl
in
fnstsw
sarl
jecxz
ret
adc
xorb
xor
mov
ja
xor
mov
sarl
inc
add
pop
mov
lods
mov
jb
dec
cwtl
dec
lahf
add
ret
lcall
in
mov
into
add
aaa
pop
adc
pop
sbb
sbb
cmpsb
call
adc
jg
jmp
lods
iret
je
rcl
cltd
mov
mov
pop
lret
mov
rolb
pop
mov
sbb
push
push
add
pop
or
es
push
jns
and
pop
jns
fldenv
mov
pop
dec
test
fnsave
sub
rcrl
and
mov
out
mov
push
dec
pop
adc
dec
movsl
clc
xor
call
pop
pop
sahf
ss
inc
push
inc
mov
mov
sub
xchg
xor
fcomps
adc
or
int3
sahf
and
js
negl
mov
push
mov
push
repz
jle
dec
mov
outsl
repnz
pop
ds
ror
stos
cmpsl
stc
sbbl
or
mov
or
mov
lahf
mov
addr16
aam
mov
pop
jne
jl
pop
fisubrl
adc
fldt
notl
jp
lea
mov
xchg
xor
xor
add
repz
inc
or
faddl
inc
scas
into
rorb
xchg
orl
mov
sbb
cmp
fmuls
xchg
pop
mov
lea
lock
shrb
int
test
cli
shll
negl
pop
inc
fnstenv
add
movsb
popf
cwtl
push
int3
fbld
lods
sub
push
addl
adc
pop
movsl
je
std
push
mov
mov
mov
imul
popf
and
push
loope
and
and
push
stos
xor
mov
out
mov
lret
rsm
mov
sub
mov
or
or
leave
xchg
add
mov
roll
out
jmp
jmp
bound
popa
insl
mov
fcoms
adc
push
ja
jno
imul
out
stos
lods
outsb
push
and
mov
in
mov
cmp
sbb
test
daa
mov
lock
xor
xchg
leave
movsb
fwait
shll
push
add
pushf
xor
add
mov
sahf
push
inc
cli
subl
jmp
inc
shll
enter
mov
xor
cwtl
mov
mov
imul
jae
add
out
cmp
push
out
inc
xor
jp
jae
pop
sti
cmpsl
je
sub
inc
xor
fimull
push
nop
add
popa
js
dec
push
lret
mov
cmp
in
test
mov
outsl
pop
xchg
inc
lcall
dec
push
insl
out
repnz
or
sbb
xor
clc
xchg
push
push
les
mov
dec
clc
test
dec
rclb
mov
xor
jb
iret
sahf
sti
cwtl
sbb
mov
inc
aaa
cs
add
sbb
adc
push
mov
xor
jecxz
clc
push
out
mov
hlt
jne
pop
repz
pushf
xor
jg
fildll
pop
call
lods
push
ret
mov
popa
into
test
cld
shll
insl
cmpsl
test
push
mov
ret
fldenv
int3
andl
mov
mov
fcmovnb
aam
inc
jb
push
xlat
xor
jecxz
cmp
cli
fldl
es
xor
adc
xchg
les
aad
jge
inc
xor
push
insl
dec
pop
xchg
enter
xchg
andl
adc
les
sbb
ret
jmp
mov
mov
das
dec
aam
dec
sub
or
xchg
loopne
jae
pop
adcl
test
push
imul
and
and
push
int
and
xor
mov
jns
outsl
test
lahf
push
repz
and
iret
sahf
fcmovnbe
pop
stc
adc
popa
add
mov
stos
push
fdivrl
fs
pop
into
mov
stc
mov
stos
nop
mov
mov
imul
in
movsl
mov
popa
pop
add
and
addr16
leave
mov
pop
and
mov
les
pop
mov
jp
push
pop
sub
cmp
int3
stos
fcompl
mov
pushf
fisubrl
pop
sbb
jp
push
pop
sub
cmp
int3
stos
fcompl
mov
pushf
fisubrl
pop
sbb
jp
push
pop
sub
cmp
int3
stos
fcompl
mov
pushf
fisubrl
push
pop
sub
or
push
fisubrl
cld
inc
int3
push
jbe
in
mov
and
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
pop
cli
pop
ljmp
xor
mov
pop
cmpsb
dec
xlat
cmp
sub
sbb
or
cli
pop
ljmp
inc
stos
ja
addr16
jp
push
pop
cmpsl
dec
pop
push
sub
sbb
or
cli
pop
ljmp
inc
stos
ja
mov
dec
fldt
cmpsl
sub
outsb
test
xorb
mov
aaa
mov
lret
int3
scas
jl
lahf
add
cltd
dec
pop
ds
data16
xchg
jecxz
pop
test
fmuls
mov
lcall
dec
pop
sub
jecxz
sbb
inc
cli
movntq
mov
int3
fdivl
cmp
xchg
sub
out
add
xchg
mov
mov
mov
daa
popf
jo
push
stos
bnd
test
xchg
dec
fmulp
stos
sub
xchg
je
rorb
call
mov
inc
push
xor
hlt
lock
xor
cmp
cmpsl
sbb
hlt
ljmp
mov
xchg
addr16
shrb
dec
mov
dec
jns
sbb
pop
ljmp
inc
stos
ja
mov
push
pop
cmpsl
dec
xlat
cmp
sub
sbb
arpl
jae
pop
fimull
push
fbstp
ficoms
aas
fistpll
jns
dec
xchg
arpl
push
mov
add
psllq
adc
push
test
gs
pop
mov
sbb
mov
pop
cmpsl
dec
xlat
cmp
sub
sbb
or
cli
pop
ljmp
inc
stos
ja
mov
push
pop
cmpsl
dec
xlat
cmp
sub
sbb
or
cli
and
test
mov
dec
scas
push
in
mov
mov
jnp
std
fidivs
jl
or
jmp
lea
cmpsl
jp
ljmp
imul
sub
jle
sub
gs
push
fs
cmp
inc
fstp
das
jns
cmp
cmp
daa
sahf
cld
push
stos
sbb
pop
fisubs
and
sub
mov
pop
pop
pop
mov
xor
xchg
dec
in
jae
jno
and
insl
mov
push
mov
mov
adc
out
xchg
clc
dec
mov
jp,pn
inc
dec
sub
sub
js
shr
dec
cwtl
mov
dec
inc
dec
mov
cwtl
jae
jmp
xor
xchg
lock
aaa
shl
leave
jbe
cmp
xor
ret
movsl
add
mov
into
movsl
mov
clc
inc
pop
mov
mov
ljmp
adc
lods
popa
xor
adc
and
add
jg
push
mov
mov
imul
adcb
scas
and
pop
and
mov
push
loopne
inc
cmpsl
xchg
inc
mov
push
sbb
lods
repz
outsb
lods
push
fmulp
ret
pop
test
push
mov
pop
cmp
ret
pop
sub
mov
ror
icebp
jl
call
ds
pop
add
fchs
mov
mov
rcrl
mov
push
popf
pop
push
mov
icebp
xchg
jae
stc
imul
mov
jno
je
jge
out
rcr
xchg
mov
jb
mov
out
leave
dec
mov
idivb
add
arpl
mov
test
mov
adc
nop
or
in
xor
push
xchg
mov
mov
aas
xor
xor
lahf
or
seta
aas
pushf
sbb
dec
mov
inc
add
sbb
lret
add
mov
es
jle
pop
movsl
xor
lret
cmp
sbb
gs
aad
cwtl
insb
and
into
pop
xor
shll
lret
enter
or
imul
push
mov
lock
mov
aaa
or
push
push
pop
mov
sbb
and
pop
adc
sti
cmc
pop
or
xchg
mov
mov
lock
mov
jmp
and
jae
or
xchg
sti
mov
in
aaa
outsb
xor
andb
mov
inc
xchg
aad
leave
jns
lret
stos
jmp
sbb
iret
cmpsb
int
xchg
ja
sbb
xchg
outsb
and
cmp
cmp
scas
pop
mov
sbb
call
scas
adc
push
daa
dec
jnp
add
hlt
cli
ret
inc
rcrl
add
es
pop
aaa
xor
xchg
jb
imul
sti
idivl
mov
dec
and
popf
adc
xor
xor
sub
call
je
and
in
ret
sbb
aam
out
sub
fimuls
dec
adc
sub
xchg
pop
xchg
leave
jns
addr16
cli
in
push
mov
subl
mov
mov
mov
xchg
pop
add
cmpsl
pop
ljmp
xor
xchg
mov
sbbl
sub
cli
out
or
les
lods
scas
ret
dec
mov
inc
adc
add
pop
aas
test
cltd
mov
aam
popa
pushf
loopne
inc
adc
push
inc
aad
outsb
push
movsb
es
mov
cmp
xchg
lods
test
sbb
cmpsb
out
add
pop
divl
or
ret
cmp
mull
dec
pop
inc
or
mov
pop
fsubl
insb
fwait
mov
fnstcw
in
sbb
sti
je
fisttpll
aam
pop
int
mov
mov
addr16
cwtl
dec
dec
out
sbb
jecxz
das
sub
cmp
dec
enter
js
rclb
add
or
js
jbe
mov
out
xchg
jne
pop
cmc
mov
mov
int
or
icebp
bound
push
mov
sbb
test
cmp
mov
jmp
push
fsubrs
mov
mov
cltd
add
cli
idiv
cmp
xchg
mov
aad
xchg
lcall
xor
idivb
xchg
enter
sbb
aaa
mov
mov
pop
and
cld
ror
sub
icebp
cmp
inc
dec
js
outsl
shlb
lret
jnp
cmpsl
jecxz
mov
sti
push
jnp
int3
push
test
call
push
movsb
rcll
xor
sbb
lret
jnp
sub
jp
int
fcomip
test
mov
or
mov
mov
std
fdivp
or
pop
popf
mov
lahf
test
push
dec
add
and
xchg
pop
cwtl
rorl
push
stc
sub
pop
ja
fisttpll
push
popf
pop
popa
mov
std
mov
cmp
sub
icebp
call
mov
jecxz
mov
jae
mov
push
jge
add
push
ja
roll
mov
mov
push
je
mov
insl
mov
add
xchg
cltd
push
sub
adc
aam
icebp
jp
mov
ret
hlt
dec
test
daa
and
cmp
inc
in
add
jle
dec
inc
aaa
fs
xor
mov
mov
mov
push
xchg
cld
cs
xchg
xchg
call
pop
inc
sar
in
jb
and
mov
sarl
sahf
ret
dec
es
and
dec
popf
shrl
dec
fisttpl
or
xchg
test
sti
stc
inc
push
push
andb
inc
push
jnp
nop
loope
aad
fwait
loop
xchg
cmpsb
lret
popa
jmp
mov
push
pop
mov
cltd
or
or
das
stos
mov
pop
test
cwtl
xor
sub
add
xor
lods
ffree
cmc
test
mov
ljmp
xorl
dec
out
push
nop
cwtl
ficoms
sbb
loop
into
push
jne
stos
dec
es
fbld
xchg
inc
testb
js
mov
arpl
jmp
or
int
and
fistpll
out
in
js
add
jmp
je
loop
fimuls
mov
cmpsl
roll
mov
jmp
sahf
test
fcomi
mov
jno
jnp
push
cmc
dec
sub
xchg
es
in
or
dec
inc
push
jg
test
cmp
repz
inc
pop
inc
scas
pop
pop
sarb
xor
mov
enter
dec
dec
into
xchg
sbb
push
mov
jne
jbe
lea
imul
loope
idivl
adc
daa
popf
adc
mov
jns
dec
cmp
outsb
hlt
jns
mov
clc
loope
repnz
pop
je
ss
out
mov
jae
pop
pop
popa
inc
jecxz
push
test
pop
cmpsb
jns
xchg
pop
out
mov
push
or
lret
into
clc
andl
insl
adc
jmp
ss
pop
out
pop
popf
adc
cmp
daa
dec
cwtl
mov
dec
or
cmpsb
faddl
jnp
xchg
pop
jno
in
insl
xchg
fsubrs
aas
lods
testl
mov
jp
js
mov
lods
pop
rolb
jns
fcom
hlt
pop
arpl
and
mov
mov
subl
or
mulb
sbb
test
push
mov
lret
sbb
push
fldl
or
inc
fbld
lcall
push
test
jecxz
cmpsb
or
ljmp
lcall
mov
lret
and
mov
les
sub
fbstp
insb
call
mov
stos
jmp
in
xchg
pop
inc
adc
je
push
push
mov
inc
xchg
dec
jecxz
jb
sbb
enter
aaa
jg
jp
mov
mov
pop
and
scas
movsl
decb
jnp
pushf
fdiv
cs
les
and
out
inc
in
xor
testl
movsl
jbe
lods
push
les
andl
fldl
shll
dec
sbbl
jge
mov
mov
cmc
mov
cmp
decl
or
xor
lcall
mov
stos
mov
or
push
and
das
dec
dec
jb
mov
add
jnp
mov
test
clc
add
test
nop
rcrl
sbbb
fs
hlt
xor
sbb
sub
leave
push
js
jne
add
popa
into
mov
inc
inc
nop
cmpsl
imul
out
pusha
inc
mov
push
outsl
and
scas
call
xchg
les
repz
xchg
lds
fs
add
sub
mov
cmp
div
pushf
add
or
dec
push
in
es
movsb
aaa
and
dec
aaa
icebp
aam
cld
and
fdivl
xchg
and
stos
pop
jb
and
ret
negb
or
add
cmp
fcoms
in
cltd
adc
enter
cld
xchg
out
sub
shr
sbb
jmp
scas
or
mov
push
jecxz
rcl
push
jae
hlt
sbb
gs
mov
xchg
mov
iret
xchg
in
add
ja
les
fisubrs
push
popf
xchg
aas
repnz
dec
pop
and
jp
decl
lret
sbb
mul
and
fsubp
pop
popf
shll
clc
cmp
or
mov
lret
dec
out
aad
dec
or
mov
cmp
jle
test
jp
fidivl
andb
fdivs
popf
dec
push
xlat
cmp
out
shrl
cmc
ret
loop
or
jle
cmovp
insb
jnp
mov
lcall
and
jbe
aaa
ret
push
jecxz
rcrl
aas
jnp
in
nop
and
or
sub
movsb
loope
xchg
sbb
shll
or
insl
sbb
enter
push
cli
mov
aaa
or
das
shl
jns
and
adc
cmp
xchg
cmp
cli
xchg
adc
mov
das
addr16
inc
insl
sbb
das
sub
or
out
popa
pusha
fstpl
jecxz
jo
xlat
rclb
test
mov
mov
lret
adc
xchg
ljmp
cmp
sbb
mov
fidivrs
cmpl
lret
ss
mov
pop
scas
xor
nop
cs
test
leave
push
js
icebp
adc
xchg
jnp
ja
push
cmp
roll
aad
push
dec
or
pop
aam
repnz
lock
sbb
xchg
mov
fs
rcrl
inc
movsb
shl
cld
jl
bnd
adcl
sbb
js
cmp
lea
mov
cli
movsl
subb
lock
and
jecxz
xorb
cmp
dec
ja
into
cwtl
jns
jns
jbe,pt
xor
xchg
lds
test
mov
loopne
jno
js
sbb
jl
mov
push
jl
lahf
sub
mov
mov
xchg
dec
xchg
lods
pop
and
sub
xchg
xchg
test
add
iret
jl
popl
mov
ss
pop
mov
scas
ficoms
movsl
cltd
inc
int3
mov
pop
sub
lret
push
xchg
push
pop
mov
std
pop
jne
sub
mov
enter
jg
mov
into
stc
fcomps
and
mov
js
jge
add
popa
and
mov
aad
orl
mov
imull
and
jns
leave
cmp
sub
in
or
ljmp
pop
or
xchg
stos
pop
push
mov
inc
rorl
fcmovbe
lcall
popl
lcall
sub
adc
mov
jmp
mov
and
test
mov
adc
or
xor
fcomip
mov
lret
movsb
cs
push
jg
in
lcall
scas
push
loope
icebp
lret
lods
xor
xor
inc
rcrl
out
dec
mov
xchg
mov
ss
shl
adc
out
and
loop
rcll
cli
aam
lret
roll
sub
ret
repz
sbb
sub
and
mov
xchg
mov
and
test
outsl
sbb
xor
lret
ss
xchg
pop
and
mov
mov
push
xor
xchg
or
sahf
adc
mov
loop
ljmp
aad
inc
cs
repnz
ret
jg
push
mov
dec
and
pushf
sbb
roll
and
mov
aaa
mov
loop
dec
aas
jns
out
lods
mov
mov
sbb
scas
rcl
adc
stos
pop
rolb
sti
out
lds
shrl
loope
or
xor
movsl
pop
xor
cmpb
jo
int3
sbb
inc
inc
into
or
std
or
pop
dec
add
inc
fs
xchg
xor
sbb
jp
jecxz
jp
cld
inc
adc
push
pop
inc
les
mov
jecxz
fcomip
sub
push
aad
sbb
mov
outsl
daa
lods
pop
xchg
cmp
push
out
out
jo
or
cmpsb
xor
mov
cmpb
das
mov
out
xchg
test
outsb
inc
mov
and
shll
jno
stc
mov
jae
repz
mov
sub
mov
jbe
sarl
lods
mov
test
ficomps
add
push
sahf
pusha
cmp
jp
pop
aas
push
jno
push
xchg
test
nop
push
imul
mov
mov
cli
lahf
dec
or
jbe
mov
loop
cwtl
shl
xor
xchg
adc
lds
dec
xor
test
scas
scas
aam
loopne
pop
xchg
loope
mov
mov
xchg
imul
xor
sbbb
xchg
inc
xor
paddusw
adc
xchg
inc
mov
and
movsl
xchg
test
cmp
xchg
mov
mov
call
cwtl
stos
push
outsb
test
stos
movsl
mov
clc
sub
test
pop
popa
mov
and
adc
and
jns
mov
aad
push
enter
scas
test
dec
fdiv
in
pop
push
or
inc
cmc
ret
fwait
mov
rorl
movswl
cmc
cld
shr
ret
jno
mov
push
cmpl
sbb
pusha
sti
and
mov
stos
cwtl
push
or
cld
ret
inc
cmpsb
dec
ret
adc
fbld
ffree
nop
add
sub
ss
push
ljmp
push
mov
xor
aam
incb
and
or
cmpsb
aas
pop
hlt
pop
divl
dec
rorl
sub
negb
fsubs
popa
sbb
jno
push
adc
push
mov
movsl
or
imul
fimull
and
pop
int
adc
pop
call
mov
mov
in
daa
sti
xor
insl
imul
jb
mov
jno
popf
mov
dec
test
cltd
negl
or
xor
cmc
push
add
in
adc
adc
hlt
cmpsl
jg
mov
push
pop
cmp
fisttps
jae
dec
mov
push
sub
cmp
aaa
test
cmp
or
aam
xlat
sbb
mov
adc
jp
mov
jno
mov
sbb
and
mov
call
jmp
mov
xchg
lds
cli
daa
addr16
pop
xor
mov
mov
pusha
imul
and
cmpsl
loope
shlb
call
cmc
cli
xlat
xor
shrb
orb
enter
xchg
mov
bound
pushl
movsb
clc
cmp
mov
scas
mov
cs
mov
stos
pop
in
shlb
sub
and
sbb
das
testl
hlt
xchg
xor
xchg
rcr
int
cwtl
fcomps
fwait
outsb
sarb
add
inc
sarb
xchg
jge
lods
les
jmp
outsl
jo
int3
pop
aam
data16
jge
pop
sbb
jg
dec
xchg
and
xchg
inc
dec
mov
mov
jb
in
inc
in
out
push
push
in
jns
in
aas
je
popa
mov
mov
dec
adc
sbb
lret
pop
rorb
or
mov
mov
cmpl
mov
push
lret
aas
int3
push
sub
pop
out
scas
cmp
cmp
int3
loopne
mov
xorl
mov
or
mov
mov
dec
stos
cmp
insl
test
jg
es
stc
lret
add
icebp
fistpll
insl
xchg
jg
loope
mov
add
jp
sub
fucom
and
xor
in
push
loop
xchg
popf
cwtl
push
and
cmc
cli
push
push
xor
xor
mov
dec
push
outsl
inc
dec
popl
and
push
add
gs
mov
mov
mov
inc
mov
mov
jl
adc
cli
sahf
inc
mov
js
pop
pop
arpl
cmp
jmp
inc
gs
cli
and
mov
adc
push
jg
pop
addr16
aaa
add
fadd
adc
dec
aaa
lahf
lods
cwtl
daa
inc
bnd
sub
scas
fstpl
jns
lret
or
cmpsl
pop
pusha
sarb
push
dec
fsubrl
iret
or
pop
scas
arpl
test
test
fisubrl
xchg
add
mov
ja
pushf
ja
cmp
xor
into
lahf
fdivrs
repnz
in
or
leave
mov
sahf
pop
test
push
ljmp
push
mov
sub
or
das
inc
sub
aas
cmpb
xchg
mov
in
and
xor
movsb
add
mov
pop
adc
inc
cmp
out
inc
jb
mulb
fiaddl
test
dec
or
ljmp
scas
jnp
mov
xor
xor
xchg
cmp
xchg
jl
ror
bound
jp
adcb
scas
aaa
and
ds
scas
push
and
lds
sub
jle
inc
lods
jl
push
int3
xchg
movsb
push
add
add
test
daa
pop
aaa
mov
xchg
movsl
jle
in
sbbl
rcll
nop
xchg
out
repnz
adc
inc
popa
add
push
sti
stc
xor
shll
cmp
or
out
inc
testb
add
mov
aad
sbbb
xchg
lds
jecxz
rorb
aad
pop
pop
scas
inc
xchg
fimull
push
inc
inc
aam
jno
xor
jno
fmuls
inc
jg
out
pop
shr
jmp
js
mov
pushf
add
mov
rorl
test
mov
mov
add
push
inc
sbb
stos
stos
lahf
mov
push
xorl
ds
dec
fcomip
in
sub
and
mov
xor
call
dec
stos
ds
repz
addr16
lcall
inc
lds
stc
lock
xchg
xchg
inc
adc
fildl
inc
mulb
outsb
xchg
in
or
popa
sti
ret
ss
ljmp
test
xchg
jp
push
jno
add
sbb
mov
addr16
sahf
icebp
push
subl
jae
jo
in
inc
push
jb
pop
and
xadd
imul
fwait
std
push
xor
out
cmp
and
cltd
push
xor
aam
xchg
xchg
push
or
mov
pop
push
or
xchg
jle
nop
inc
andl
adc
inc
pop
jnp
das
add
daa
dec
inc
stos
xchg
shlb
sub
mov
lret
jnp
mov
stos
int
or
and
push
in
pushf
out
inc
sub
decb
out
outsl
pop
icebp
ds
iret
lcall
mov
lods
and
adc
mov
cmpsl
xchg
mov
cmp
lahf
pmulhuw
or
loop
cmp
or
and
ljmp
and
mov
pop
fisubl
inc
and
out
lds
imul
rcr
or
cld
ret
push
les
xchg
mov
in
push
sarl
stos
imul
pop
mov
int
in
mov
jbe
ljmp
lods
mov
repz
jge
mov
in
inc
sbb
enter
loopne
ja
inc
aam
push
sti
lods
pop
xor
pop
xlat
sbb
push
add
mov
mov
iret
movsl
cli
aam
adc
xchg
jle
addb
test
xchg
mov
hlt
adc
mov
push
movsl
fwait
std
mov
repz
adc
push
lret
subb
mov
sarb
inc
repz
pop
jnp
les
dec
clc
fisubs
pop
stc
cmp
lock
aad
bound
dec
mov
outsl
lahf
pop
lea
dec
lods
gs
iret
xchg
xchg
cmp
jmp
orl
xchg
cmp
xor
push
cmpsb
xor
aam
fcmovu
xor
fisttpl
in
jo
fstps
lcall
xchg
cli
icebp
mov
in
les
mov
std
mov
dec
loop
orb
and
adc
push
and
lock
inc
sbb
fisubrs
add
cmpb
xchg
fidivs
cli
and
movsb
mov
fldcw
lret
inc
stos
ja
mov
push
pop
cmpsl
dec
xlat
cmp
sub
sbb
or
cli
pop
ljmp
inc
stos
ja
mov
push
pop
cmpsl
dec
xlat
cmp
sub
sbb
or
cli
xchg
mov
daa
lret
inc
stos
ja
out
xchg
jp
push
pop
cmpsl
dec
xlat
cmp
sub
sbb
or
cli
pop
ljmp
inc
stos
ja
mov
rcrb
mov
xchg
xchg
cmc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
test
dec
mov
ret
aad
stos
sbb
icebp
mov
jne
inc
jae
push
and
xor
adc
jecxz
repz
shll
adcl
imul
and
add
xor
mov
std
sti
test
arpl
push
and
xor
add
jno
ja
cmpsl
aad
adcl
xchg
push
push
call
fidivrs
inc
cld
and
jmp
mov
sub
mov
cmp
pushf
mov
mov
mov
stos
lds
les
jae
enter
arpl
sarb
aam
jecxz
repz
mov
addl
xchg
push
mov
aaa
mov
pusha
xor
adc
mov
inc
inc
and
mov
push
push
pusha
sahf
pusha
sbb
or
mov
add
in
dec
inc
add
insb
xchg
popf
xor
cmp
out
add
rol
mov
shll
subl
popf
inc
dec
outsl
inc
pop
sub
add
jecxz
pushf
subl
hlt
aam
and
adc
fs
pop
jno
push
jp
movsl
jge
xorb
loope
ljmp
and
cmp
insb
push
xor
push
pusha
xchg
nop
adc
out
mov
test
jne
inc
inc
push
push
and
add
repz
shll
adcl
inc
inc
push
push
and
add
movsl
insl
mov
aam
dec
iret
mov
test
test
sbb
cmc
push
fldl
fiaddl
dec
dec
out
jg
jp
dec
jno
push
das
rcl
stos
rcrb
lock
hlt
mov
mov
aas
cmp
inc
jo
lcall
int
js
mov
clc
aam
fnstsw
pushl
mov
xchg
aaa
adc
inc
leave
xchg
clc
gs
pop
in
pop
and
mov
xor
dec
rcll
adc
int
mov
stc
jne
xor
iret
pushf
mov
scas
push
dec
jmp
js
pop
in
xchg
add
in
call
lock
lret
jo
int
and
es
xor
inc
test
cmp
xor
aam
push
dec
push
es
mov
les
jnp
inc
sbb
ljmp
dec
pop
outsl
push
popa
outsl
or
rcrl
sub
pop
rcll
xchg
push
or
sahf
es
shrl
cmp
es
lahf
dec
je
data16
pop
mov
mov
frstor
jle
fbstp
sti
addr16
mov
fcmovne
lds
cmp
outsl
pop
lods
call
icebp
lahf
xchg
sub
cmpsb
cmp
sbb
push
add
ljmp
and
xchg
cmpsl
add
xchg
cmp
hlt
sub
dec
sub
xchg
idivb
push
addr16
into
sub
add
out
mov
test
mov
add
into
clc
cli
xchg
popf
xchg
pop
je
mov
fwait
subb
das
test
inc
lret
pop
cmpsb
lods
jae
stos
dec
cmp
arpl
sub
arpl
add
adc
xchg
popl
mov
pop
repz
xchg
into
fcoms
fsubrl
nop
and
mov
sub
leave
aas
repz
sbb
jno
cltd
in
or
cmp
repnz
cwtl
jg
sub
dec
pushf
call
pop
dec
cld
arpl
jno
clc
les
or
mov
inc
mov
add
add
mov
sbb
scas
xchg
xchg
mov
leave
shrb
cmp
sbb
dec
inc
popf
in
pop
xchg
jne
sbb
insb
cmc
sub
mov
mov
mov
dec
push
fwait
xchg
rolb
jbe
out
dec
pop
into
sahf
enter
jne
jbe
es
rorl
and
pusha
add
jnp
pushf
mov
cld
repnz
jge
push
sub
or
mov
movsb
jb
cmpl
xchg
pop
pop
pushf
add
and
repz
imul
mov
test
cmp
or
mov
std
inc
jg
push
cmp
movb
xchg
jg
adc
or
lcall
ljmp
cs
jb
imul
stos
push
lcall
lret
or
cli
leave
adc
adc
and
loopne
popl
sub
adc
fwait
sbb
and
sub
pop
mov
lock
in
lods
sarb
inc
lds
xchg
adc
scas
mov
mov
and
push
popa
out
jmp
sbb
jmp
add
jnp
es
xchg
out
sub
jg
mov
push
aam
dec
cmp
mov
ret
mov
xchg
rcl
gs
dec
adc
mov
xchg
bound
sti
mov
outsb
xchg
inc
xor
int3
test
in
mov
pusha
adc
int3
cli
std
lcall
or
test
test
adcb
inc
rcrb
lea
mov
call
jbe
ja
mov
loope
or
sbb
sbb
ljmp
jae
outsl
xor
sub
push
rep
ficoms
outsb
inc
scas
sbb
stos
adc
popa
inc
movsb
sbb
test
xor
sbb
adc
outsb
test
cmp
mov
or
sub
push
inc
test
or
loopne
or
add
out
int3
inc
in
scas
xchg
jb,pn
mov
aad
inc
cmpsl
rorb
loope
mov
push
jbe
cmpsb
repz
pop
jmp
outsb
mov
and
insb
and
mov
pop
popa
fisubrl
adc
jne
mov
stc
popf
cmp
test
xor
cld
cwtl
mov
in
xchg
inc
aam
dec
aad
push
repnz
xchg
pop
lds
pop
idivb
mov
loope
pop
sub
je
data16
stos
leave
dec
add
into
mov
xlat
cmp
jo
out
inc
push
ret
mov
xor
or
out
fdivs
nop
sub
push
and
stos
push
fiaddl
icebp
sub
jnp
int3
mov
pop
xchg
std
insl
mov
pop
sbb
mov
mov
push
daa
lock
sbb
stc
popa
nop
fcmovu
and
fbstp
mov
in
jg
cmpsb
sbb
inc
shrl
aas
ja
lcall
jae
loope
jmp
pop
inc
mov
fsubl
xchg
and
dec
and
std
sub
push
jmp
jmp
push
mov
imull
mov
loope
pusha
cmp
aas
int3
es
out
lds
cs
call
shll
ljmp
mov
outsb
inc
lea
or
or
int
scas
sbb
push
out
sbb
mov
fimull
fdivrp
push
add
xchg
jmp
mov
pop
mov
nop
mov
add
mov
cli
pop
lods
push
sbb
movd
mov
movsl
jge
outsb
movsl
xchg
inc
mov
jne
and
js
rcll
xchg
pop
jmp
lds
in
pop
mov
icebp
jne,pn
adc
or
or
xchg
sub
push
scas
inc
dec
sbb
push
mov
cwtl
add
out
daa
roll
pop
pop
ds
dec
or
jb
dec
in
dec
sub
stc
pop
popa
mov
or
add
test
mov
mov
xchg
inc
lcall
stos
lahf
lret
icebp
push
dec
stos
add
cmpsl
fwait
repnz
data16
jp
jmp
add
in
daa
mov
xor
add
stos
lahf
pop
adc
pop
nop
ds
fsts
jb
mov
lods
pop
and
stos
mov
push
add
xchg
inc
push
pop
in
enter
fidivrl
rorb
mov
das
cmpsb
int
out
add
fisubs
ds
stos
dec
mov
js
sbb
add
shrb
mov
adc
movsl
int
loopne
nop
addr16
pushf
or
add
pushf
or
out
sub
enter
frstor
cmpsl
std
data16
pusha
andb
or
jnp
lods
mov
xor
shrl
adcl
mov
test
jo
jns
in
daa
aad
cmp
mov
lcall
loopne
pop
scas
mov
dec
and
pop
repnz
xchg
int
mov
adc
adc
jmp
mov
cmpsl
cld
in
cli
xor
ret
push
mov
in
mov
mov
or
mov
int
mov
pop
in
mov
jb
fsubrs
or
into
pop
mul
call
push
stc
nop
add
lahf
daa
scas
out
and
and
repz
lcall
scas
sbb
pop
fs
cld
xchg
push
mov
add
adc
push
jp
sbb
jo
test
push
aad
xchg
xchg
int3
icebp
mov
sub
mov
jp
punpckldq
push
icebp
shlb
fdivrs
pop
fwait
in
jp
rclb
das
je
imul
popa
inc
pop
loopne
or
sahf
lds
cmp
pop
shr
sti
js
mov
push
inc
out
sbb
negb
outsl
stos
pop
movsb
imul
call
adc
jbe
hlt
jle
cltd
or
aad
mov
mov
and
adc
and
ja
mov
mov
push
bound
dec
out
movsb
jno
xchg
push
sbb
popa
mov
sbb
push
rclb
push
dec
mov
shl
sahf
outsb
mov
aam
jmp
mov
movsb
xchg
loop
ret
roll
lret
mov
shlb
mov
mov
inc
sub
shrb
in
jg
rorl
adc
scas
push
sbb
decb
push
cmp
xchg
repnz
imul
popf
cmp
mov
push
fwait
inc
mov
daa
cld
sbb
push
cld
pop
and
clc
int
mov
lea
test
negl
in
sbb
enter
mov
jb
mov
sti
xchg
cmc
out
pop
popa
cmp
shlb
pop
adc
dec
out
cld
lret
xor
dec
or
mov
pop
js
inc
nop
mov
ficompl
or
xchg
std
test
jno
in
xchg
imul
mov
inc
cmp
ljmp
mov
add
andl
jl
xor
jle
xchg
push
pop
push
push
rcr
push
add
or
jge
xchg
xchg
adc
mov
repz
scas
adcb
xor
push
push
ficoms
loope
add
iret
sub
mov
fmull
push
sbb
add
add
pop
dec
sbb
bnd
pop
dec
dec
shll
lea
outsl
cwtl
mov
jg
fucom
fiaddl
insl
jae
add
pusha
icebp
ds
cwtl
cmp
add
push
add
je
mov
sbb
mov
cli
hlt
push
mov
mov
enterw
lret
inc
sub
shrb
cmpsb
mov
inc
out
test
in
or
jae
addr16
cltd
idivb
push
lahf
add
into
out
pop
jo
mov
repnz
pop
lret
popf
loopne
pop
in
je
aam
mov
aas
cmp
scas
sub
ljmp
push
cwtl
push
ret
daa
sbb
inc
xor
pop
inc
out
xor
aaa
movsb
sub
or
mov
or
xchg
bound
mov
fwait
pop
hlt
mov
fs
movl
cs
jo
and
shlb
xchg
icebp
cmp
aaa
cltd
test
jbe
adc
xchg
sub
insl
and
out
addl
jmp
dec
test
push
mov
addr16
in
clc
pop
das
push
cld
dec
or
add
int3
test
mov
xchg
or
inc
subl
fmuls
jl
fwait
jb
mov
mov
xor
dec
adc
es
lods
and
lret
pop
inc
dec
syscall
or
ds
sbbl
inc
je
jge
int3
fcoms
loop
sti
mov
and
inc
xor
ficomps
or
cmp
fdiv
add
add
push
xor
sbb
sub
inc
mov
or
add
xchg
dec
sbb
fisubl
sbbl
popa
or
lret
mov
inc
test
mov
or
lea
xor
dec
and
push
mov
lea
push
adc
data16
jecxz
xlat
dec
cli
test
aam
sarl
xchg
jae
ljmp
inc
xor
dec
push
imul
clc
mov
icebp
loope
mov
xchg
sub
mov
clc
movntps
orb
insb
add
cli
cld
pop
jae
mov
lds
xor
imul
mov
out
jg
push
xor
fsubl
and
int
loopne
inc
and
ror
adc
lret
insl
mov
sahf
scas
push
mov
xor
sub
scas
test
add
push
xchg
sbb
push
std
daa
adc
cmc
inc
sub
aam
xchg
mov
rcrl
cltd
cmp
js
popa
stc
mov
dec
lahf
mov
fsub
mov
jnp
aam
movsb
inc
fistpll
mov
test
cmp
ret
sub
xor
pushf
insl
xchg
repz
push
loopne
shl
mov
sbb
inc
and
sbb
push
loop
arpl
inc
loopne
sar
lods
popa
dec
mov
inc
shll
xor
push
pop
stos
andb
hlt
pop
out
cs
jne
lea
mov
out
scas
shlb
les
mov
xchg
leave
or
mov
pop
fs
mov
decl
xchg
mov
in
rorl
in
mov
jle
xchg
or
into
sub
lcall
andb
test
inc
inc
fiaddl
stos
mov
int3
xchg
call
and
inc
hlt
xor
cmp
scas
jl
sub
insl
insl
mov
sub
and
sub
sarb
mov
js
rcrl
into
sahf
dec
pushf
xchg
cmp
add
xor
inc
mov
push
in
jo
cltd
pop
cmpsl
cmp
aaa
xlat
or
mov
sbb
lds
add
aaa
inc
adc
nop
pop
mov
pop
jbe
xchg
add
mov
cmp
ror
sarl
adc
jp
fisubs
push
cmp
and
in
mov
xchg
ror
stos
mov
iret
imul
xor
loopne
inc
xor
mov
and
pop
es
sar
je
sub
push
lretw
aam
pmaddwd
jecxz
push
faddl
imul
mov
push
xchg
ljmp
lods
loopne
dec
mov
cltd
aam
outsl
dec
fwait
pusha
pop
and
jo
xchg
pop
inc
cwtl
gs
fs
xor
movsl
or
dec
add
sbb
mov
aas
mov
jns
repnz
orb
cwtl
sub
adc
mov
push
push
and
pop
inc
jmp
lds
cli
adc
inc
jle
cli
icebp
call
add
lret
rorl
imul
mov
lods
fs
or
and
dec
push
les
or
ds
pop
xchg
jno
ret
pop
daa
addr16
cltd
in
jne
push
xchg
push
popa
js
jecxz
inc
aad
idivl
mov
mov
adc
inc
fstps
insl
loope
inc
or
push
sub
add
sbb
imull
stc
or
sub
insl
mov
push
ja
mov
jmp
stc
jmp
jb
xchg
lds
adc
push
sub
jecxz
lock
int
inc
mov
adc
jmp
push
rorb
movsl
pop
lock
bound
insl
xchg
in
roll
dec
xor
push
je
xlat
pop
pop
lods
das
lods
lret
cmp
aas
or
movsl
push
and
outsb
mov
hlt
stos
fdivs
arpl
and
lret
push
push
or
jmp
ret
icebp
jnp
sbb
mov
mov
mov
jmp
cmp
inc
das
test
repnz
cmp
lods
in
push
pop
fcmovnu
out
mov
mov
mov
fnstcw
xor
xor
fnsave
mov
adc
add
loop
pop
inc
sti
addr16
jae
nop
lahf
aam
and
in
fst
stc
notb
ds
rcrb
dec
out
mov
pop
jmp
or
jae
mov
sub
or
cld
sub
sbb
dec
sub
dec
imul
push
xor
clc
xchg
push
mov
repz
xor
sbb
sub
dec
jno
out
xchg
insl
lds
cmp
xor
aad
outsl
xchg
jmp
cmpsl
imul
or
sub
mov
incl
fidivrl
mov
test
aam
or
inc
in
shrb
jmp
jno
sub
add
jp
dec
add
repz
dec
mov
xchg
and
lea
dec
mov
xor
push
sahf
subl
push
mov
dec
pusha
stos
dec
push
arpl
mov
inc
adc
adc
dec
ret
jg
out
cltd
mov
ds
out
mov
jbe
dec
xor
fisttpll
jge
jg
jecxz
adc
fsts
aad
pop
fimuls
and
fs
pop
xchg
leave
fsub
ss
cmp
pop
das
mov
xor
int3
cli
adc
inc
repnz
jmp
insl
repnz
and
inc
sub
repnz
mul
mov
lods
ljmp
loop
inc
fisttps
add
mov
xchg
inc
and
rcr
stc
les
insb
popa
pop
lret
insb
mov
pop
push
repz
xchg
cld
jae
in
fcoml
and
xlat
std
lret
or
into
inc
mov
aaa
cmp
std
inc
pop
jo
lret
pusha
jnp
pop
aad
imul
push
rolb
push
sub
pop
jno
cmpsb
iret
test
jb
addb
mov
mov
pop
dec
xor
inc
sub
push
or
mov
repnz
getsec
cmp
cwtl
and
sarb
vmwrite
push
inc
inc
test
and
jns
or
mov
jp
sti
scas
mov
and
ret
imul
pop
xchg
cmp
clc
or
inc
imull
imul
sbb
xor
mov
jg
mov
push
repz
and
mov
sbb
in
cmp
out
pop
jle
mov
addb
rcrb
mov
mov
adc
adc
hlt
lret
incl
repnz
mov
mov
sub
ret
mov
jbe
call
pop
aas
push
test
push
daa
and
pop
jp
ja
pop
jmp
xor
outsb
adc
jecxz
or
imul
mov
sahf
xor
and
insl
xchg
xor
sbb
cmp
adc
fsts
int3
add
inc
sarl
jae
fs
dec
out
or
mov
xor
shll
lcall
sarl
call
movsb
mov
jmp
xchg
sub
push
sti
sbb
and
cmp
dec
xor
fwait
push
xorl
mov
clc
mov
js
insb
adc
sub
sar
das
fwait
add
jle
and
insb
mov
xor
test
xor
scas
aaa
jp
enter
std
push
je
or
rolb
ret
cmp
movsb
mov
and
inc
cmp
adc
rcr
stos
aaa
insb
bound
loope
and
test
xor
shl
ret
movsl
pop
stos
ja
push
dec
inc
add
loopne
push
sbb
cmp
mov
ja
repz
jmp
or
pop
mov
push
sub
insl
push
push
push
dec
mov
loope
shlb
test
and
shlb
bound
xchg
pop
push
mov
loope
lret
sub
sub
dec
gs
out
data16
add
xor
lcall
dec
gs
xor
les
cmp
pop
jle
aam
lock
jle
lds
cmp
dec
dec
movsl
push
lcall
clc
in
fldt
aaa
cmpb
call
xor
inc
lds
sbb
sub
in
icebp
or
and
push
inc
movsb
mov
mov
fstpt
movsl
hlt
cs
cmp
popa
dec
jns
xchg
jg
xlat
lcall
out
test
ret
or
jp
ja
mov
outsb
sub
inc
test
cltd
adc
xlat
jb
or
dec
xchg
ficoms
sub
sbb
shll
or
sub
loop
push
and
in
mov
jg
inc
aad
pusha
stos
sub
dec
lock
inc
movsl
stc
inc
ss
imul
jno
lds
push
fsubl
adc
xor
mov
xor
insl
and
je
cld
int3
mov
pop
xor
jle
insb
push
mov
fldenv
lahf
decl
inc
incb
jecxz
mov
or
jge
insl
roll
pop
push
jmp
aam
call
jle
xchg
addr16
pop
xlat
adc
mov
cld
cmpsl
imul
leave
insb
fisubs
dec
add
lcall
jl
sbb
leave
cli
xchg
cld
mov
mov
lock
lahf
mov
in
mov
fwait
mov
inc
or
inc
push
jnp
xor
movl
test
inc
mov
jge
sbb
mov
inc
imul
cltd
mov
insb
mov
aad
add
hlt
daa
faddl
cmpb
and
xchg
sbb
xorl
mov
hlt
pop
xchg
inc
pop
in
daa
jns
xchg
sbb
and
mov
inc
imul
sub
jno
sbb
scas
dec
gs
mov
xor
insb
setns
decb
pop
mov
shrl
leave
cmp
mov
push
push
jb
dec
out
mov
pop
sub
sub
out
loopne
jp
fdiv
xchg
loop
aad
sub
leave
shll
adcl
inc
inc
push
push
and
add
repz
shll
adcl
inc
inc
push
push
and
add
std
aad
aad
movsb
mov
xchg
xchg
popa
bound
dec
inc
push
pop
and
or
pop
dec
daa
std
xchg
movsl
mov
adc
inc
push
and
pop
mov
imul
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
