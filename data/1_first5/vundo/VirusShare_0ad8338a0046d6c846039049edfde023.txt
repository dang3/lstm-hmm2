add
jne
mov
call
movl
mov
pop
pop
ret
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
inc
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
mov
call
pushl
mov
call
push
push
pushl
call
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
xor
xor
test
jle
push
lea
push
mov
cmp
je
inc
add
cmp
jl
pop
pop
cmp
jl
xor
jmp
test
jle
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
inc
xor
test
mov
jle
lea
mov
inc
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
xor
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
pushl
pushl
jne
push
pushl
call
jmp
dec
push
call
pop
ret
int3
int3
int3
int3
int3
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
movzwl
movl
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
push
call
mov
push
push
push
pushl
call
mov
push
call
mov
push
mov
call
neg
sbb
inc
push
push
push
pushl
call
push
decl
mov
add
mov
insl
add
add
add
adc
mov
add
add
cs
push
or
add
add
add
jb
add
add
add
sbb
sbb
sub
clc
sbb
add
jne
dec
pop
je
jb
outsl
inc
dec
and
sbb
mov
inc
roll
out
xor
add
add
in
inc
mov
xor
add
cmp
mov
outsb
push
sub
test
test
std
call
incl
lock
clc
push
pushf
adc
xor
sub
cmp
add
add
push
jmp
icebp
jmp
pop
js
jge
push
push
add
call
add
lret
ds
adc
decl
adc
test
je
rolb
sar
incl
push
add
push
push
jne
test
add
lret
in
mov
movsl
test
stc
push
clc
push
add
sbb
adc
xor
add
add
insb
add
add
add
mov
sbb
sbb
sbb
push
sbb
add
inc
outsb
outsb
add
adc
popa
outsl
inc
add
popa
imul
insb
pop
aaa
mov
jae
outsl
imul
jae
cmp
gs
add
add
inc
je
add
add
sbb
inc
xor
add
add
out
push
push
mov
add
les
test
pop
add
sahf
pop
lock
inc
cltd
mov
pop
movsl
jge
mov
mov
jmp
cmp
inc
dec
jge
jae
in
adc
sbb
pop
mov
push
push
xor
push
shl
cwtl
out
cmp
pusha
xchg
shrb
mov
cmp
sbb
pusha
jp
scas
pop
das
cmp
mov
insl
in
bound
fmull
jge
cli
insb
outsl
sbb
sub
inc
out
mov
mov
bound
cmp
aam
jno
and
jle
ret
cs
notb
push
xchg
push
pop
xlat
imul
push
jnp
out
imulb
sahf
add
and
shrl
jne
adc
js
sub
or
out
sub
stos
pop
jecxz
insb
push
pop
bound
out
push
push
ret
inc
cs
int3
adc
lea
sbbb
jns
lret
xchg
hlt
mov
fstp
dec
popf
lret
fisttps
int3
pusha
and
cld
mov
adc
sbb
mov
in
and
push
xor
pop
lods
lret
stc
dec
movsb
dec
mov
inc
pop
iret
dec
call
ja,pt
mov
loopne
cs
lret
rcrl
inc
mov
lods
push
xchg
popa
outsb
inc
xchg
lea
decl
sarl
jb
out
test
lret
pop
in
mov
mov
in
aam
jbe
xor
jns
iret
stos
fwait
ja
mov
cli
jmp
in
mov
adc
out
mov
jno
xchg
pop
xor
xchg
xchg
int
xor
pusha
cltd
pusha
cmp
xchg
xchg
pop
and
stos
add
dec
inc
mov
sub
insb
outsl
sub
push
lea
cli
mov
push
xchg
enter
push
xor
xchg
lret
cmpsl
jle
sub
dec
mov
mov
mov
cmp
or
lret
psllq
sub
aas
loopne
push
cld
icebp
jae
sbb
jg
loop
jne
shll
mov
loopne
out
jp
xlat
cmp
mov
jnp
mov
mov
testb
data16
out
or
test
jp
jb
pop
mov
shll
imul
inc
testl
clc
loop
push
mov
out
inc
out
lods
inc
cld
xchg
cmc
pop
jmp
mov
shr
dec
add
js
sbb
cmp
mov
lahf
call
jp
lahf
mov
stos
xor
sub
lahf
or
pop
daa
aas
sbb
std
test
pop
xchg
sbb
in
inc
cs
std
clc
mov
pop
repnz
jbe
and
arpl
fnsave
insl
fcompl
iret
push
call
xor
outsl
lock
outsl
add
dec
shll
lahf
rolb
scas
adc
daa
dec
adc
inc
aam
pop
mov
fdivr
rcrb
lahf
push
sub
icebp
out
pusha
pop
dec
test
mov
outsl
out
xor
adc
lds
cmp
adc
mov
sarl
xlat
sbb
and
dec
rcll
dec
adc
add
inc
xchg
gs
add
xor
xchg
adc
push
mov
std
in
bnd
sahf
cmpl
cmp
into
pop
push
loop
mov
or
fs
jecxz
iret
gs
cmp
arpl
xchg
std
adc
jecxz
jle
sbb
add
filds
mov
xacquire
adc
push
std
jp
mov
pop
adc
jns
mov
sbb
mov
gs
xor
sub
xor
or
jp
loope
dec
insb
out
xor
dec
insl
shll
pop
jo
pop
out
rcll
std
pop
jmp
pop
shlb
pop
xchg
out
xchg
stc
mov
mov
push
fcoms
pop
push
lea
jo
notl
scas
sbb
lea
das
inc
cs
add
sub
imul
or
jb
mov
orl
mov
pop
stc
mov
pop
rolb
pop
pushf
or
xchg
dec
fwait
iret
rclb
mull
mov
inc
mov
and
jmp
cmp
in
popf
je
cwtl
adc
fstpl
jb
into
jp
in
jmp
fbld
inc
sahf
hlt
cmp
or
mov
jp
aam
cmp
sub
imul
popa
mov
xchg
sub
push
jae
fstpl
pop
daa
inc
xorl
xchg
adc
pop
inc
rorl
in
mov
std
adc
xor
xchg
inc
mov
in
repnz
sub
mov
dec
push
out
inc
jp
cmpsl
fsubrs
mov
push
mov
mov
movsl
hlt
insl
sub
mov
lods
cmp
jmp
cli
sub
cmp
sub
push
sbb
mov
xor
jb
inc
sub
lds
call
or
mov
aam
mov
add
mov
cmpsl
popf
lahf
ds
push
cld
xor
lods
or
sti
sbb
lods
and
shlb
sahf
ljmp
clc
push
add
push
push
xor
add
shlb
out
pop
pop
in
dec
test
and
in
dec
and
adc
mov
data16
add
std
dec
mov
cmpsl
popl
xchg
mov
inc
je
arpl
out
jp
mov
movsl
std
pop
movb
loop
vpcmpeqb
insb
push
jecxz
std
inc
hlt
xchg
inc
jo
and
cmpb
repz
imulb
sahf
fcompl
add
mov
mov
and
lret
xlat
jo
push
jge
inc
adcl
xchg
inc
pop
fcompl
pop
aad
mov
hlt
jae
xchg
out
sti
sub
push
aad
xchg
lret
leave
scas
pop
add
adc
jnp
cli
ret
sbb
cmp
sub
loope
adc
out
cwtl
mov
jg
xor
dec
data16
test
rol
xchg
outsb
test
stos
out
mov
sub
xor
and
jo
dec
out
sub
out
xor
loopne
aas
add
addb
adc
sub
dec
pop
sti
mov
or
jmp
xor
xchg
push
pop
ret
lds
xchg
shl
mov
jmp
repnz
daa
inc
ds
int
fsubr
pop
in
jg
fldenv
les
mov
push
pop
cmp
mov
xlat
out
xor
enter
sbb
outsb
dec
into
fucomp
subb
rcl
movl
cmp
dec
rep
xchg
mov
ss
xlat
xor
mov
inc
fimuls
inc
out
or
and
lea
lea
add
sbb
imul
leave
out
xor
stc
fcompl
cmpsl
and
in
nop
scas
rcll
inc
pusha
add
or
mov
int
repnz
ja
inc
fidivrl
out
call
jns
shr
stos
fisubrl
negb
jle
imul
xchg
mov
push
iret
scas
clc
ja
call
jle
aaa
push
stc
xchg
add
popa
stos
cmp
jnp
js
inc
sbb
jecxz
rcrl
sbb
subl
jl
stos
push
xchg
int3
cmpsl
clc
and
repz
test
pop
je
movsb
dec
mov
xchg
mov
push
ret
lds
inc
jle
out
les
test
fidivs
imul
fwait
scas
icebp
fistps
push
fcmovnbe
mov
sahf
sub
mov
sbb
imul
int
and
sbb
fwait
rcr
xchg
inc
imul
jnp
cmp
inc
mov
or
mov
push
adc
xchg
inc
pop
dec
sarl
addl
jnp
cmp
or
add
cmpsl
enter
aad
dec
ds
xchg
loop
sbb
loopne
stc
jb
lahf
cs
pop
or
mov
lock
push
xchg
repz
stos
inc
out
lret
mov
add
aaa
in
mov
mov
sbb
push
jnp
sbb
jnp
jg
adc
adc
sarl
push
dec
jnp
iret
test
inc
lea
mov
cmp
push
std
lock
xor
sub
or
adc
out
cmp
mov
dec
mov
xchg
test
icebp
jb
jns
or
add
sbb
insl
fimuls
dec
sub
repnz
adc
dec
and
or
xor
push
mov
xchg
or
dec
cmp
rorl
loopne
xor
bound
xchg
cld
jmp
xor
into
xor
add
push
fists
inc
cmp
inc
testb
pop
test
sub
cmpsl
loop
aaa
lret
fiadds
out
or
adc
push
inc
xchg
outsb
pop
pop
mov
cmp
es
mov
fbld
pop
push
movsb
or
les
test
mov
jae
out
push
das
dec
cltd
jae
pusha
and
test
insb
mov
dec
setle
pusha
popf
mov
imul
mov
or
adc
xor
dec
adcl
mov
sbb
xlat
pop
add
imul
into
mov
push
inc
adc
andb
test
fs
adc
popf
dec
leave
push
inc
fwait
orb
jle
in
icebp
xchg
cmp
or
dec
push
fwait
pop
loopne
pop
fimuls
push
outsb
fbstp
xor
mov
icebp
pop
loope
push
mov
fnstcw
lea
push
mov
jno
dec
sub
movsb
add
jo
hlt
movsb
mov
or
cmp
cmp
pop
cmc
int
rcr
fs
xchg
push
sub
popa
inc
cmpsb
or
and
mov
xchg
fnstcw
fdivs
mov
sub
mov
aad
sub
fiaddl
xchg
lock
mov
call
jecxz
aad
mov
mov
cmpsb
icebp
add
push
jae
push
adc
mov
js
push
adc
mov
cltd
cmp
frstor
flds
aas
sub
mov
xor
push
jecxz
in
dec
popa
sti
mov
fcomip
dec
gs
xchg
lock
inc
add
xor
add
add
sar
xchg
push
cli
mov
test
add
les
int
jecxz
fsubrl
mov
cs
repz
icebp
out
outsb
js
lods
pop
jp
xor
mov
cs
xchg
jo
and
pop
jo
jb
mov
sub
inc
test
mov
mov
cwtl
shrb
lds
push
or
icebp
push
outsb
out
out
pushf
daa
add
and
push
adc
mov
insl
fidivrl
rorl
xchg
cmpl
jnp
push
call
xchg
test
addr16
insb
shr
test
xor
cwtl
push
mov
lock
jecxz
sub
inc
cld
or
or
jge
cmc
xchg
pushf
inc
sbb
or
sti
or
dec
jo
mov
and
jg
sub
mov
adc
add
dec
cmp
insb
lcall
incl
enter
call
sbb
loope
loopne
in
sbb
stos
ds
xchg
cmpsl
sub
cmp
add
stc
sbb
or
ja
or
icebp
sub
std
out
das
xor
sbb
and
gs
data16
stc
and
int3
adc
jno
rcrb
jmp
iret
and
xchg
sbb
cli
into
sub
sbb
daa
outsl
and
roll
dec
fcmovnb
test
mov
sbb
outsb
lret
es
in
and
movsl
inc
out
mov
or
cmc
fistpll
sbb
lods
xchg
out
mov
mov
push
xchg
adc
or
sbb
adcb
mov
cmpsb
sar
in
pop
jbe
test
xor
push
xor
mov
pop
lods
sbb
pop
cmp
in
lock
push
push
bswap
mov
dec
and
push
mov
fldl
mov
push
out
or
je
push
xchg
jecxz
pop
jl
pop
lods
pop
lods
mov
pop
loopne
pop
subl
jbe
xor
mov
jo
mov
add
inc
es
inc
fdiv
int3
in
lods
fbstp
pop
stos
mov
js
ja
mov
jl
stos
pmaxub
data16
testl
loopne
add
int
lods
fldl
jo
cmpsb
stos
ret
leave
cmp
in
adc
sbb
xor
lods
out
mov
je
or
jg
jg
jns
pop
das
jb
in
adc
cli
or
mov
dec
sarb
cltd
imul
icebp
cmpsb
xchg
cmp
xor
xlat
lds
lock
xchg
inc
test
cli
scas
xchg
jne
stc
xchg
lea
cltd
sahf
data16
lea
add
adc
loope
lock
movsb
pop
outsl
xchg
stos
insl
aas
ljmp
cmpsw
jae
xchg
mov
push
sbb
mov
dec
shr
jl
jp
pop
test
lock
mov
mov
inc
push
push
stos
shr
mov
scas
push
mov
cld
test
dec
rcl
mov
mov
lods
pop
mov
es
pop
fidivrs
std
adc
mov
push
adc
or
out
fcom
adc
xor
jnp
rcrb
cmp
mov
xchg
pop
dec
mov
dec
lret
icebp
add
rclb
jl
add
imul
insb
call
push
jg
inc
cld
cli
sarb
adc
xchg
dec
mov
test
jno
and
repnz
shrw
nop
dec
les
mov
aam
pop
jae
mov
sub
push
xor
stc
gs
inc
mov
xchg
add
pop
xorb
cmpsw
leave
pop
lahf
ja
mov
xchg
push
jecxz
add
call
das
sbb
cli
sub
and
cmpsl
jecxz
pop
sahf
leave
adc
jne
push
shll
xor
imul
push
pushf
loope
adc
push
or
test
notb
jmp
dec
sub
int3
dec
push
jo
stc
add
pop
inc
daa
sbb
add
xor
push
lahf
mov
out
and
pop
popf
jno
stos
cs
cmp
test
and
andl
mov
pop
dec
cmp
sub
clc
repnz
popf
js
clc
mov
in
popf
out
inc
sub
dec
and
inc
arpl
scas
es
mov
movsb
jp
push
push
cmp
ds
jbe
inc
pop
icebp
push
fisttpl
inc
rcrb
jo
push
fstl
iret
mov
dec
out
out
dec
loop
rol
cli
mov
sbb
inc
jae
cld
outsl
and
adc
sub
fbld
cs
cli
pop
rolb
mov
inc
sbb
jnp
xchg
xchg
jl
pop
into
pop
mov
fistpl
mov
adc
xchg
xlat
pop
les
enter
popf
or
jmp
mov
sub
mov
jns
xor
sarl
or
sbb
xchg
mov
pop
mov
lret
mov
xchg
inc
dec
shl
add
jge
lcall
dec
lcall
inc
jo
push
loope
outsb
out
push
movsb
jno
push
mov
sub
sub
jp
jg
loopne
mov
sub
loope
or
lcall
mov
mov
xchg
xlat
lock
int
mov
inc
call
cmc
inc
fs
into
inc
test
stos
cltd
sbb
pop
dec
out
jae
pop
pop
pop
lods
mov
mov
mov
rclb
stc
adc
mov
mov
mov
dec
aam
test
das
sysexit
inc
fcomp
leave
rcrl
mov
dec
sarb
insl
pop
je
iret
cmp
jbe
add
mov
ret
cld
inc
push
pop
sbb
and
movhps
cltd
outsl
or
test
inc
in
mov
xchg
mov
andl
jmp
sub
fs
push
aaa
rcrb
decl
out
add
scas
dec
gs
mov
push
lea
lods
je
cli
incb
inc
mov
xchg
je
call
mov
lods
stc
pop
ss
jl
jmp
lret
int3
cmpb
mov
jmp
and
bound
ja
sbb
mov
ds
les
ds
aaa
fildl
adc
fmull
loope
add
cltd
fdivrl
icebp
ret
pop
xor
or
outsb
mov
fists
adc
aam
in
jl
dec
lret
sbb
lods
mov
ljmp
inc
leave
mov
out
xor
inc
test
loop
std
ficomps
mov
xcrypt-ctr
cmpsl
sbb
and
pop
stc
leave
loope
popl
mov
and
jl
mov
stos
jnp
jmp
xor
in
mov
cmpsb
ja
imul
ds
ds
or
leave
sbb
or
push
pop
insb
sub
inc
jns
in
in
sbb
push
in
or
addl
dec
adc
scas
xor
pop
cld
out
xor
adc
sbb
mov
jp
sbb
ljmp
cmp
inc
ja
jns
or
dec
iret
and
popl
sti
cmp
mov
dec
mov
xor
inc
push
xchg
cld
pop
pop
dec
or
adc
sbb
ret
nop
mov
iret
movsl
pop
dec
or
aam
ficompl
inc
insl
das
mov
jge
test
sub
es
cmp
push
xchg
ja
cltd
dec
int
hlt
cmpsb
ss
test
scas
movsl
aaa
jmp
les
cs
es
mov
xchg
in
rclb
pop
in
pop
cmp
mov
mov
lods
jle
fs
cmp
hlt
pop
cld
mov
dec
addr16
jle,pt
xchg
gs
cld
call
ds
arpl
mov
hlt
hlt
lret
or
dec
push
cmpsl
and
ret
push
or
outsb
pop
lret
mov
je
mov
insl
lret
dec
mov
cmp
sahf
inc
ret
sbb
cmp
add
add
add
into
into
jle
out
out
add
add
adc
add
pop
push
add
add
add
add
add
or
add
add
xchg
mov
xor
add
add
add
add
add
add
ds
add
stos
stos
add
ja
mov
roll
push
mov
sub
push
push
lea
push
push
push
pushl
call
cmpl
je
mov
cmp
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
pushl
call
mov
push
push
call
mov
call
push
push
push
mov
call
lea
push
push
push
call
add
push
pushl
call
mov
mov
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
push
call
pushl
pushl
pushl
call
mov
add
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pushl
call
mov
pop
jmp
lea
push
pushl
call
xor
mov
push
push
push
push
pushl
call
pushl
mov
pushl
pushl
push
push
call
lea
push
call
pop
push
lea
push
push
push
push
call
push
lea
push
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
xor
pop
pop
leave
ret
nop
add
aad
add
add
outsb
add
mov
add
add
add
adc
push
add
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
aaa
gs
arpl
pop
and
ja
dec
add
push
xchg
mov
xor
cvtdq2ps
cmp
mov
push
lds
lea
adc
mov
ljmp
std
adc
pop
push
mov
add
getsec
popa
movl
push
add
decl
orl
adc
add
loopne
cld
mov
test
adc
adc
add
sar
test
adc
out
add
add
push
incl
push
push
push
aad
pop
add
mov
enter
mov
inc
add
jne
pushl
push
add
add
pop
add
aad
add
add
add
add
add
add
add
add
add
add
push
inc
je
inc
jns
inc
dec
mov
inc
gs
gs
jo
sbb
fs
jno
inc
insl
jb
gs
insb
movsl
insb
je
dec
arpl
rolb
push
js
push
gs
jb
addr16
dec
gs
push
inc
pop
push
jbe
cs
arpl
js
xor
add
add
mov
add
add
add
add
lds
add
add
add
add
add
add
push
push
add
add
add
jae
or
pop
adc
ret
mov
repnz
and
decb
stos
fwait
adc
xor
dec
pop
fists
cmp
mov
imul
fs
push
add
arpl
out
inc
dec
imul
sbb
mov
xlat
sarb
jg
mov
xor
fstps
pop
loop
pop
jp
jmp
int
repz
pop
cmp
cmp
jbe
aas
aam
cmp
and
sub
pop
loopne
fwait
xchg
fidivrs
std
stc
mov
adcl
ja
sub
cmpsl
sbb
cmp
jle
into
sub
inc
into
push
push
fsubl
popf
ret
push
out
push
and
lods
fsubrl
xlat
sub
mov
push
lret
push
lahf
cmpsb
iret
cld
xor
les
push
jbe
fmulp
shll
das
imul
cmp
test
cmp
addr16
mov
or
fstpl
ret
or
sahf
mull
mov
and
clc
mov
xor
out
or
sbb
push
dec
xchg
xchg
dec
dec
test
arpl
sub
push
test
push
nopl
mov
mov
mov
ljmp
adc
int3
lahf
xor
lret
cmpb
mov
xchg
jmp
stos
rolb
add
jmp
vucomisd
dec
loope
fistpl
cltd
out
out
mov
mov
dec
jge
sub
popa
mov
flds
mov
push
test
xchg
adc
mov
pop
js
adc
int
cmpsb
cltd
inc
inc
jl
insb
xor
sbb
xchg
popa
shrb
jbe
loop
mov
push
mov
and
cs
lea
inc
mov
xchg
mov
add
lahf
pop
inc
xlat
mull
xchg
loope
xchg
sbb
shll
out
xchg
nop
lret
fs
pop
jge
addr16
and
rorl
cmpsl
xchg
push
cmc
sub
jl
sbb
jmp
adc
inc
out
jo
fsubs
int
in
insl
pop
scas
cmp
gs
mov
lods
and
dec
fistpll
jae
data16
inc
pop
xchg
mov
cwtl
dec
int
stos
and
int
and
faddl
xlat
pushf
fsubs
jns
pop
lods
sub
ret
adc
or
stos
call
outsb
mov
hlt
les
dec
cld
lds
xor
inc
jmp
pop
inc
lahf
xchg
push
sbb
imul
aaa
cmp
push
data16
sahf
cwtl
xchg
outsb
pop
or
cmpsl
fisubs
cmp
adc
cmpsb
push
inc
and
sbb
and
das
xor
out
or
lcall
lahf
or
add
ret
dec
hlt
imul
mov
bound
pusha
jo
mov
out
inc
mov
adc
sub
out
jno
movl
bound
sbb
scas
or
push
pushf
adc
pop
mov
sub
push
fdivs
lret
dec
jb
dec
jl
dec
mov
sub
xchg
arpl
push
stos
mov
ret
lret
pop
adc
rorl
pop
jl
mov
mov
enter
jg
cmp
adc
push
in
fisubs
cmpsb
icebp
lret
jbe
xchg
xor
xlat
outsb
es
push
lret
stc
inc
loope
mov
je
in
mov
insl
lock
jmp
xor
rcrl
and
and
xchg
inc
fimuls
jle
dec
jg
mov
mov
pop
pop
jge
xor
mov
call
hlt
jb
das
sbb
sti
cli
xchg
daa
jg
sub
sti
jle
sub
cmp
xor
mov
inc
cmpsl
pop
xchg
stc
cmpl
adc
adc
mov
sbb
adc
and
loop
cmp
dec
add
and
rcll
movsl
mov
in
mov
pop
dec
mov
fcoms
lock
mov
aas
daa
adc
popf
jp
adc
and
scas
ret
out
sbbl
jecxz
xlat
push
push
inc
arpl
jo
jo
es
mov
xchg
fs
cmpsl
arpl
xchg
dec
or
cmp
movsb
dec
inc
mov
or
add
clc
adc
movd
xor
nop
jecxz
jno
data16
sahf
inc
sub
jae
jo
pop
push
fnstcw
push
sbb
fildll
dec
fdivrs
popf
scas
faddl
push
cmp
adc
pop
sbb
dec
xor
sub
insb
push
and
je
insl
xor
sbb
xor
mov
jo
int
dec
or
sbb
sbb
jbe
xor
jbe
cmpsb
pop
imul
pop
pop
bound
or
fcmovb
add
lret
jae
xchg
test
in
addb
nop
test
mov
int3
adcl
sub
lods
cmp
dec
movsb
mov
dec
mov
cmp
mov
shrl
inc
jge
and
cmp
xor
test
xchg
inc
adc
adc
jg
lea
mov
xor
inc
jnp
in
hlt
mov
xchg
add
int
loope
xlat
dec
mov
cmp
jg
and
xchg
ja
adc
lcall
cld
lea
mov
mov
xchg
xchg
jmp
or
jo
lods
sbb
pop
gs
arpl
cld
add
or
pop
les
out
iret
ret
push
ret
xor
clc
cmpsb
mov
aad
movsl
mov
cli
stc
mov
in
xchg
or
faddl
fidivrl
out
icebp
cmp
cwtl
stos
popa
add
xor
inc
xchg
and
sub
xor
rclb
pop
stos
jns
xchg
jecxz
out
arpl
sbbb
mov
dec
sbb
fsubl
xchg
jne
xchg
ds
mov
push
dec
xchg
push
lods
jmp
xchg
and
push
mov
and
adcl
in
lahf
fs
rolb
insb
cs
mov
mov
cli
mov
sti
shl
testb
bound
cmpsb
inc
mov
ja
jp
rorl
mov
mov
sar
and
and
shll
mov
pop
shll
cmp
sti
or
cmpsb
loope
and
aas
pop
in
test
loop
add
xor
nop
lods
lods
adc
repnz
pop
sub
fs
loopne
pop
jno
and
roll
fmul
lods
sub
pop
rcrl
push
lods
fs
rol
and
jmp
stos
lret
adc
es
and
add
sub
cltd
bndstx
inc
and
xchg
ret
push
inc
jg
outsb
rorb
add
ret
cld
mov
inc
aaa
lods
pop
dec
dec
dec
fld
add
rolb
pop
sarl
add
imul
xlat
icebp
cmp
sahf
gs
add
out
xlat
int
sub
lea
mov
pop
outsl
rcrb
movsl
stos
adc
xchg
jge
xchg
inc
or
sbbl
xchg
call
cmp
cwtl
je
subb
xor
dec
shr
lods
jp
mov
rcrl
out
or
mov
push
xlat
dec
and
inc
andb
shlb
pushf
sbb
test
pop
out
jmp
sbb
push
xor
push
out
cld
mov
xchg
pop
xor
or
mov
sbb
or
lock
mov
hlt
fsubp
mov
imul
fdivrs
lret
adc
or
ja
sbb
mov
rcll
and
lret
mov
loopne
dec
jecxz
dec
inc
dec
mov
and
dec
dec
pop
les
js
les
push
and
in
addr16
jecxz
pop
lcall
enter
adc
xchg
mov
xchg
into
fs
test
str
and
jno,pn
push
push
adc
stos
inc
mov
mov
add
dec
pop
dec
ret
popl
call
enter
in
inc
jne
inc
loope
mov
cmp
mov
cmp
lea
int
xor
push
and
out
cmovbe
jbe
fbld
scas
adc
adc
sub
outsb
sbb
mov
or
xor
and
pusha
and
daa
pop
repz
jp
iret
popa
push
popa
sbbl
adc
adc
pop
and
push
push
popf
or
mov
mov
lahf
nop
scas
cltd
adc
and
push
sarb
inc
rolb
fcmovu
ja
push
daa
leave
adc
xor
cmp
mov
mov
test
in
ret
icebp
sbb
xchg
push
adc
cmp
test
fcomp
mov
std
xchg
pusha
test
dec
sbb
jb
jb
ror
jne
jo
out
sar
rcrb
data16
pop
mov
sbbl
fisttps
pop
jne
je
ret
dec
in
icebp
jb
xchg
dec
or
ja
add
cld
mov
leave
mov
pop
and
insb
dec
xor
fldcw
jmp
dec
pop
xchg
inc
cmc
xchg
test
dec
sub
stos
jmp
or
lock
add
rclb
fstl
sbb
jg
rcrl
ja
fwait
mov
fsubl
push
mov
hlt
cwtl
fs
pop
outsl
mov
cmpsl
pop
xchg
hlt
pop
je
cltd
loope
or
scas
scas
jg
sti
adc
cwtl
ja
cmp
out
mov
cmpb
jno
je
or
and
pushf
xchg
loopne
push
push
lock
fstl
sti
cmp
loop
jmp
xor
adc
es
or
out
and
pop
inc
or
int3
cltd
jle
or
xor
cmp
scas
gs
adcb
and
dec
adc
jp
push
pop
jl
xor
adc
in
xchg
and
add
orb
sub
je
out
xor
or
jl,pn
and
jno
arpl
sbbb
jae
insl
hlt
inc
lret
repz
push
pusha
push
in
inc
adcb
fwait
inc
es
or
xor
adc
movsl
jnp
xorb
outsl
mov
data16
inc
adc
sbb
sti
dec
push
add
push
pop
xor
int3
xchg
add
mov
jg
inc
in
lods
out
iret
out
addl
fcoml
mov
cmp
inc
and
push
inc
mov
movsbl
in
xchg
xchg
and
ja
xchg
sub
push
iret
adc
mov
adc
cmp
fcoml
das
dec
out
data16
cli
imulb
loop
addr16
fs
setbe
imul
adc
pop
mov
pop
or
or
cmpsb
arpl
or
jp
shlb
in
or
iret
and
imulb
jge
lea
mov
xchg
ljmp
lods
stc
jns
mov
enter
fucomip
adcb
sub
mov
add
add
scas
fucom
inc
negl
sbb
xchg
testl
out
xor
sub
mov
int
or
xchg
testl
pop
dec
add
and
lcall
sar
sbb
xchg
jae
mov
ljmp
mov
xor
cmp
icebp
mov
lds
mov
or
rorb
faddl
mov
jl
lods
push
mov
cmp
mov
fs
shll
aad
test
dec
sbb
add
mov
mov
jg
push
pop
rcrb
xchg
mov
pop
stos
and
sar
fidivs
adc
xchg
ds
xchg
mov
pop
idivb
push
outsb
rorl
pop
test
jp
dec
push
imul
cmc
inc
pop
push
bound
jge
das
notl
mov
mov
int
or
xor
pop
imul
jne
pop
gs
cli
clc
adc
int3
adc
or
dec
mov
cwtl
adc
or
mov
fmuls
sub
xchg
ret
jecxz
dec
mov
push
fistps
fcoms
mov
iret
and
std
out
leave
and
fildll
adc
jg
jno
dec
and
in
clc
shrb
pop
ret
xor
inc
push
push
xorl
sub
push
mov
js
push
fwait
idivb
in
dec
lods
rcr
cmp
mov
mov
movsb
subb
add
fincstp
cmpsl
jnp
mov
aas
stc
shll
lods
xchg
addr16
shlb
xor
mov
pop
stos
cld
jo
popa
outsb
mov
sub
in
mov
and
dec
mov
pop
sti
xchg
sti
fucomi
mov
inc
cmp
push
pop
imulb
cmp
cmp
out
push
pusha
fidivrs
inc
mov
push
addl
mov
jbe
inc
inc
insl
aam
push
add
sbb
jne
add
arpl
dec
int
jecxz
pushf
repnz
adc
ljmp
int
pop
inc
stos
add
mov
ljmp
dec
dec
imul
fisubrs
shr
mov
int3
dec
dec
xor
push
jg
cmp
mov
mov
outsl
mov
xchg
test
subl
dec
push
ret
jl
out
add
insl
mov
shrb
aaa
imul
pop
je
lods
lahf
iret
pusha
out
in
add
cwtl
push
pusha
addl
mov
sub
add
add
jge
repnz
cmp
xchg
aad
jns
sbb
jnp
out
test
push
push
dec
ror
dec
pop
xchg
and
gs
iret
movsl
andl
and
sbb
outsb
int
scas
sub
cmp
sti
std
loope
test
xchg
and
shll
mov
xchg
sahf
aas
mov
fildl
mov
cmp
add
gs
xchg
arpl
fidivl
pop
jae
pop
mov
fucom
orb
sbb
ret
add
inc
cmpsb
sub
sub
int
inc
or
leave
adc
inc
xlat
mov
or
and
sbb
loop
mov
test
jecxz
add
pushf
incl
lea
mov
cmc
jp
idiv
mov
les
lods
dec
ljmp
loope
adc
lahf
nop
inc
in
and
inc
adc
pop
aam
cmp
icebp
and
out
mov
mov
fwait
cltd
cs
inc
mov
ret
mov
sub
sub
ja
loopne
add
clc
xchg
out
rcr
adc
neg
cmp
sub
xchg
lods
mov
ret
adc
xchg
roll
stc
add
inc
xor
add
dec
add
xchg
pusha
add
cwtl
outsb
inc
cmp
hlt
add
loope
xchg
std
cld
sbb
cmc
lcall
dec
mov
lock
jle
out
fists
icebp
mov
mov
dec
fsubrs
es
and
sub
pop
js
and
push
in
mov
les
push
add
hlt
sub
pop
sahf
adc
iret
sub
dec
iret
popf
pusha
shrl
push
mov
sub
aas
enter
xor
push
dec
stc
lock
xor
push
jne
pop
pop
popf
dec
cmpsb
dec
shlb
add
lea
pop
mov
jne
out
push
xor
mov
jmp
inc
ds
inc
inc
shll
adc
cmpsb
or
fsubrl
push
dec
das
push
or
clc
inc
cmpl
andb
inc
or
mov
push
and
insb
add
xor
insl
fstpl
lret
adc
mov
out
les
stos
cmp
imul
loopne
fldcw
repz
cmp
cwtl
sbb
sub
lahf
or
test
sahf
movsb
pop
sub
dec
sbb
pop
or
inc
aad
xor
adc
cli
sub
mov
cmp
les
fdivrl
jo
fmuls
and
push
testl
vhsubpd
mov
pop
xchg
or
daa
popf
int3
cmp
push
insb
adc
leave
in
mov
mov
push
into
pop
rorb
shrb
bsf
pop
add
fsubr
inc
fcomp
aaa
cmpsl
push
sub
dec
pop
mov
fidivrs
lahf
xchg
test
pop
inc
jmp
sub
add
and
ss
pop
xor
test
int3
in
enter
arpl
adc
das
dec
pop
gs
ds
fyl2x
scas
aas
cmp
std
aam
sbb
inc
xor
out
stc
popa
cltd
xchg
dec
outsl
das
xchg
es
pushf
fsubrl
pusha
imul
scas
lock
pop
lods
xchg
cmpsb
inc
outsb
fwait
lcall
jmp
add
jno
rcrl
nop
pushf
mov
pop
int
and
xor
or
dec
lahf
ljmp
mov
or
adc
add
mov
sub
fidivrl
popf
popf
jae
lea
test
pop
adc
push
movsb
jmp
lods
push
cmpsb
sbb
and
mov
adc
pop
iret
mov
arpl
lahf
adc
and
lock
push
mov
fimull
vpmacsswd
adc
mov
pop
inc
or
or
add
bound
in
xor
jg
mov
not
daa
loope
jl
rclb
in
and
test
cli
fildl
lods
xchg
pop
inc
lods
inc
mov
gs
or
pop
rcl
loop
lahf
bound
jne
pushf
push
dec
movsb
mov
out
outsb
into
cmp
sbb
xor
xchg
xor
push
cmp
shrb
or
movsl
jae
dec
and
jl
push
cmc
mov
push
mov
test
outsl
jecxz
enter
rcrl
xchg
sti
xor
xchg
pop
dec
gs
jns
sbb
dec
and
lahf
mov
jmp
dec
pop
pop
mov
push
xor
sbb
dec
fidivrs
cmpsl
jl
sti
fcmovne
jge
aad
rclb
ds
or
pop
gs
xor
dec
mov
and
imul
mov
sbb
inc
push
mov
aaa
mov
inc
sbb
xchg
cli
inc
cmp
fistpll
and
mov
pusha
xchg
and
rcrl
mov
or
stos
push
lods
lods
cli
adc
pushf
arpl
dec
call
xchg
jmp
insl
in
fwait
add
rolb
arpl
sbb
test
xchg
and
or
add
add
xchg
push
and
add
add
movb
add
add
add
mov
add
add
add
add
lds
add
add
add
add
add
add
push
push
add
add
add
add
in
add
add
add
add
stos
stos
add
add
mov
incl
cmpl
mov
je
cmp
je
push
push
call
mov
xor
xor
call
mov
xor
call
mov
mov
push
mov
call
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
or
mov
ret
add
add
add
add
and
and
gs
loopne
add
add
add
adc
pop
add
add
add
stos
add
add
add
add
add
mov
lcall
push
or
xor
and
out
jb
push
jb
push
jb
outsb
inc
dec
inc
add
gs
add
fisubrl
sub
inc
mov
lcall
jmp
fsubr
or
incl
in
add
ret
xorb
adc
push
mov
cld
test
cld
push
call
xor
push
push
lock
in
inc
stc
or
xor
add
adc
repz
cld
enter
faddl
inc
add
add
clc
call
xor
rolb
add
incb
lcall
add
or
cld
xor
cld
and
adcl
inc
lock
jnp
lcall
sar
dec
xor
jo
mov
mov
hlt
push
push
add
inc
push
and
je
add
add
add
in
xchg
movb
lock
xor
cmp
out
xor
add
push
add
je
js
outsl
movsl
outsb
insl
je
add
inc
clc
jo
movsl
sbb
outsb
outsl
imul
imul
push
cmc
imul
add
xor
outsl
sbb
inc
jae
jae
loopne
insb
push
insb
sub
add
jmp
add
add
pop
add
add
dec
lret
add
add
out
iret
addr16
aas
rorb
movsl
cltd
insl
lods
xchg
rcrl
push
and
cli
in
pop
fadds
mov
mov
mov
mov
add
hlt
pusha
ret
stos
mov
sub
xchg
incl
stos
pushf
test
inc
enter
fsubp
fistpll
cmpsl
mov
ljmp
or
mov
mov
sti
mov
cwtd
add
sbb
mov
fmull
adc
cmp
data16
add
in
mov
mov
push
jne
and
dec
inc
stc
xor
jno
popf
fcmovu
fadds
ffree
ljmp
inc
mov
fdivp
std
jns
es
xchg
lcall
sub
out
or
add
pop
push
mov
fiaddl
sub
and
divl
les
insb
xchg
cmp
inc
js
xlat
sbb
sbb
aaa
jp
repz
cmp
cmp
dec
enter
adc
xor
hlt
daa
adcl
sbb
push
xchg
mov
and
add
popa
repnz
mov
mov
xor
shrl
aam
cs
fidivrl
pminub
loop
xchg
adc
stc
xchg
les
call
jne
xchg
sub
repnz
ljmp
fimull
movsl
dec
cmp
dec
lock
or
jbe
test
or
mov
pop
push
push
test
and
rolb
xor
adc
inc
pop
loopne
push
imul
pop
pop
scas
jns
jae,pt
add
movsb
repz
pop
pop
ret
sti
xor
leave
cmp
decb
lret
daa
sub
jnp
icebp
add
jecxz
arpl
push
jo
sbb
sbb
adc
sub
mov
aam
mov
mov
adc
out
cmc
cmp
jns
jle
and
in
inc
sbb
fwait
lods
cmp
push
das
mov
sub
push
fstpl
xchg
cltd
mov
mov
xchg
add
sbb
sbb
fstp
out
fdecstp
xor
rcrl
aad
fs
repz
adc
mov
and
stos
insb
push
cmp
addr16
or
sbb
mov
je
ljmp
mov
dec
inc
mov
cs
cmp
inc
fistl
xchg
cmp
jle
lcall
js
cs
sbb
into
fwait
sub
sub
adc
sub
setge
push
sahf
add
jo
rcrb
sub
div
je
jecxz
jecxz
jo
dec
push
lret
inc
dec
xchg
ljmp
int3
cmp
lahf
add
pop
sbb
insb
mov
pop
cmp
flds
mov
add
decl
cmp
hlt
lods
dec
inc
adc
pop
push
add
inc
mov
push
and
arpl
jne
or
mov
mov
les
pop
lret
shrl
mov
adc
fistps
jno
dec
mov
push
iret
jno
mov
enter
incb
negl
repz
in
dec
jl
sti
sbb
mov
push
and
mov
push
jge
dec
icebp
pop
enter
les
repz
insb
mov
popf
lea
cmpl
inc
shll
test
inc
push
imul
in
test
fsts
xchg
ljmp
mov
repz
aaa
arpl
pop
lods
xchg
mov
push
or
stc
imul
mov
mov
sarl
test
cmp
popf
out
and
jae
xor
mov
jge
pop
jbe
xchg
mov
pop
jg
jno
fwait
jb
lret
cmp
aas
or
ficomps
push
outsb
mov
ja
push
jl
cmp
pushf
inc
mov
sub
pop
jnp
cli
aam
push
dec
mov
push
ret
pop
mov
dec
test
mov
out
xchg
cmp
lcall
push
fdivrs
or
sbb
adc
sub
test
jmp
out
xchg
adc
sub
outsb
std
repnz
jbe
add
xchg
cmp
inc
xchg
loope
mov
adc
push
pop
sbb
andl
push
in
push
mov
mov
push
insl
pushw
into
sarl
in
punpckhwd
cmc
mov
push
sbb
pop
test
mov
jns
push
stos
mov
fmul
and
mov
xchg
outsb
test
lret
cmp
jns
xor
sub
test
leave
out
popa
or
lock
pop
dec
dec
movsb
das
or
in
movsb
outsb
xor
cmp
adc
int
lds
cmpsl
jns
negb
jae
mov
inc
push
add
gs
lods
pop
faddl
je
icebp
mov
sub
fwait
push
mov
lds
adc
add
mov
int3
pop
adc
jae
sbb
push
pop
xor
mov
dec
mov
xor
and
add
adc
stos
out
movsl
mov
mov
push
pop
add
sbb
mov
push
lock
in
pushf
mov
mov
push
xchg
nop
jecxz
mov
xor
inc
jbe
mov
push
aad
pop
jns
dec
lods
push
pop
xchg
inc
ss
push
pop
mov
lods
mov
push
push
dec
loope
stos
orb
xchg
cs
sub
lret
hlt
jp
fistpl
incl
cli
and
fisubl
mov
mov
cld
mov
es
add
int
jnp
sahf
and
es
or
jp
pop
push
mov
mov
xor
pushf
lods
lret
into
and
stc
cli
in
push
loop
data16
fsub
add
push
ret
mov
push
mov
sub
lds
add
cmp
jge
shl
fmull
aas
fiadds
mov
cmp
lock
imull
cmp
pop
rcl
xor
cmpsl
add
push
lcall
and
push
leave
inc
test
dec
add
aaa
mov
pop
das
fistl
pop
mov
jg
jb
push
xchg
aam
lcall
fimull
xor
inc
jnp
daa
fsubl
iret
pop
lret
xchg
xchg
jne
lahf
loop
js
movsb
jae
inc
mov
lret
aaa
test
addr16
mov
sbb
jno
mov
mov
sbb
in
push
mov
rcr
decb
test
fadds
imul
inc
mov
jmp
fmulp
negl
add
aaa
inc
dec
pop
mov
in
insl
sbb
adc
es
or
or
push
aas
leave
pop
add
push
gs
fisubs
outsb
lock
loopne
out
hlt
je
pop
stos
push
in
mov
ja
addl
xor
or
cwtl
or
js
or
mov
jmp
push
je
or
mov
adc
xchg
out
and
repnz
cltd
aaa
mov
xor
cmp
and
fistpl
and
insl
adc
rol
mov
mov
push
jo
stos
inc
push
aad
lahf
es
loopne
sub
and
out
fidivs
loope
cmpsb
mov
pop
imul
add
push
ret
adc
movsb
cmp
inc
mov
fsts
rorl
mov
push
rolb
push
jge
repnz
imulb
loop
mov
fucomi
fcomi
pusha
mov
jo
in
sbb
pop
aad
xchg
add
loopne
decb
xchg
jmp
push
pop
jge
xchg
pushf
ljmp
jbe
mov
inc
insb
and
adc
xlat
push
icebp
inc
mov
mov
dec
push
ss
mov
jae
popw
addr16
xchg
imul
outsb
xchg
ja
pop
lret
ds
mov
lds
fnsave
or
adc
inc
jge
xchg
mov
addl
pop
das
push
adc
mov
or
out
mov
adcb
and
mov
js
stc
pop
dec
fcmovne
sbb
sar
pushf
xchg
int3
mov
adc
xor
stc
jbe
loopne
lcall
xor
mov
jp
mov
data16
mov
aam
js
jp
mov
push
cmp
ljmp
inc
shr
enter
cmp
add
stc
imul
in
push
in
push
sub
add
stc
mov
push
mov
loopne
mov
or
test
jl
cmp
stos
xor
mov
dec
je
test
clc
jl
neg
lret
daa
add
and
das
daa
addb
mov
out
leave
icebp
push
mov
movsbl
jge
pop
filds
dec
outsl
cmpsb
xchg
popf
rolb
push
sar
imul
clc
imul
adc
popa
ss
xchg
inc
mov
iret
sbb
push
dec
xor
sbb
test
and
xor
idivb
out
jno
adc
mov
sub
push
dec
insb
cmp
ja
sbb
iret
jnp
sub
lods
movb
push
aam
pop
xor
push
mov
push
ljmp
push
jl
xor
ror
or
lahf
cmp
adc
push
xorl
xchg
repz
and
and
sub
lea
jecxz
push
daa
mov
out
xchg
mov
iret
mov
mov
and
mov
pop
fmuls
cltd
and
movsb
ja
test
jle
dec
leave
add
mov
pop
jmp
rorl
je
jne
int3
fcoms
or
cs
arpl
jno
sub
decb
cltd
js
pop
add
out
lea
idivb
dec
xchg
push
movsb
idivb
mov
cld
add
fdivl
push
sti
pop
dec
gs
inc
aam
xchg
test
punpckhwd
neg
call
cmp
data16
bound
mov
sbb
push
xchg
out
pop
jg
lods
cmp
popa
dec
lret
pop
mov
enter
pop
push
lock
add
adcb
jg
lods
cli
pop
and
push
mov
ret
and
aam
shlb
test
and
addr16
inc
jle
jbe
push
sbb
sbb
or
fs
arpl
push
xchg
xchg
xchg
mov
add
adc
repnz
mov
out
jle
mov
push
add
stos
pop
in
int
dec
into
or
push
rorb
jmp
and
cmc
dec
add
repz
mov
fsubrl
pop
fistpll
dec
out
fidivl
jnp
push
es
imul
pusha
xchg
jle
sub
jle
or
xor
dec
in
enter
lock
sub
push
xor
xor
scas
xchg
xor
adc
mov
test
das
push
into
lds
and
aad
inc
mov
xor
inc
dec
pusha
cmpsl
dec
push
push
andl
test
loope
cmp
ret
pop
add
inc
sub
fcoml
add
es
pop
cmp
xchg
jne
paddusb
in
pop
pop
aad
push
lahf
mov
inc
pusha
mov
aas
fisubl
push
sbb
mov
std
stos
aad
inc
sub
mov
popl
enter
sbb
xor
das
mov
scas
sahf
incl
pop
fsub
in
and
mov
clc
imul
cwtl
dec
jae
mov
test
popa
addr16
xor
imul
into
xchg
movsb
xor
sub
xchg
push
cltd
mov
pop
sub
mov
and
mov
aas
sub
pop
cmp
es
mov
dec
stos
mov
orl
addr16
fcmovnbe
fmul
or
and
das
mov
dec
dec
popf
ljmp
pop
xchg
pop
mov
aaa
fwait
gs
mov
mov
dec
pop
sub
mov
loopne
shl
mov
imul
rorb
sub
mov
or
push
mov
into
mov
mov
jo
adc
fdivrl
cli
ret
loope
and
test
pop
cmpsb
lea
les
faddp
pop
cld
scas
sub
xchg
xchg
sbb
xor
sbb
pop
mov
popf
mov
ss
add
and
adc
rorb
loopne
and
mov
movsb
pop
jp
sbb
cmp
out
sub
lahf
mov
jge
lods
ret
dec
shll
dec
and
mov
aad
lods
sbbl
xlat
ret
cmp
mov
jae
movsb
sub
out
xchg
stos
into
adc
out
popa
xchg
sbb
fisttpl
mov
pushf
fcomps
fs
cmp
in
xchg
add
and
inc
mov
push
push
sbb
out
roll
imul
xor
mov
pop
mov
mov
push
pop
push
in
or
sbb
mov
sub
sahf
pop
repz
enter
lahf
aam
fiaddl
pop
jb
dec
pop
fwait
xor
adc
rcr
jb
lahf
into
adc
cmp
sbb
aad
or
jo
loope
add
xchg
cld
out
or
push
mov
jo
adc
xlat
xor
sbbl
ret
cmp
mov
das
inc
sub
out
stos
sbb
bnd
repz
inc
loope
lds
cmp
and
cmp
pusha
jae
push
scas
mov
fs
out
sbb
out
jp
xor
cld
andb
dec
push
mov
test
es
dec
jp
xchg
aam
mulb
loope
lret
not
mov
hlt
lods
dec
or
push
fcmovb
es
push
insl
cmp
ret
aas
add
sub
inc
sub
dec
jbe
cmpsl
incl
xor
flds
mov
inc
xor
mov
push
jl
ja
pop
mov
sub
cmp
add
xor
bswap
stos
push
sub
xchg
add
adc
mov
iret
jb
scas
mov
call
xchg
mov
test
and
insl
pushf
jmp
scas
sbb
add
dec
insl
movsb
ficomps
jle
xorb
mov
jnp
jbe
notb
call
test
inc
test
cli
jno
push
inc
sub
scas
cmc
orb
fcomps
repz
sub
mov
dec
xor
xchg
lods
repz
aaa
xchg
in
sbb
pushf
sbb
sub
ss
outsb
lcall
imul
xor
add
mov
jecxz
jmp
test
pop
mov
cmpsb
fisttps
mov
inc
aas
data16
jmp
gs
test
cmp
cs
stc
ror
xor
and
push
jl
addl
mov
dec
loopne
shr
aam
pop
sbb
lea
dec
push
push
repnz
pop
rclb
pop
sub
mov
stc
jno
and
add
addr16
lea
lds
out
sub
xor
pusha
add
pop
in
mov
cmp
cmpb
mov
in
lods
sub
and
andb
and
enter
mov
cltd
popf
mov
movsb
pop
lret
aas
ret
mov
cltd
sub
mov
xchg
gs
pop
inc
pusha
dec
sarl
pop
in
or
in
dec
dec
orb
hlt
stos
pop
lret
outsl
outsl
enter
sbb
test
jb
adc
fs
sub
pop
push
ret
lahf
inc
sahf
lret
aaa
outsl
mov
push
insb
int3
sbb
add
inc
pop
push
jg
lods
and
fdivrs
push
movsl
pop
cmp
stos
add
test
stos
arpl
pushf
mov
xor
and
mov
das
movsl
popf
rcr
sub
adcl
loope
sub
jno
sbb
cmp
sarl
shll
mov
and
testb
sub
arpl
imul
jl
ss
aad
push
xchg
jmp
inc
push
addr16
xor
in
test
adc
mov
int
sub
out
cld
pop
jecxz
cmp
add
mov
into
jmp
cmpsl
lds
xor
ja
xor
incl
lock
cs
cli
aad
pop
popf
cmp
sahf
push
push
sti
jl
scas
std
pop
mov
jl
shlb
cld
inc
int
jbe
mov
mov
loopne
add
aaa
inc
fistpl
mov
sbb
pop
xchg
dec
in
test
cmp
cmp
test
push
enter
js
add
adc
outsl
jg
pop
clc
pop
scas
sub
inc
arpl
mov
lods
sahf
fidivrs
sub
jge
add
in
inc
icebp
mov
xchg
outsl
jge
xchg
push
in
xchg
add
pop
pop
dec
rorb
push
mov
aam
test
ds
rcrb
mov
mov
fsincos
mov
dec
cmpsb
xor
push
in
in
bnd
enter
xchg
mov
cmp
sub
xchg
mov
xchg
sub
inc
adc
dec
xchg
push
arpl
sahf
mov
mov
adc
nop
test
in
mov
mov
pop
xlat
loope
inc
sbbl
push
xchg
loopne
cli
fidivrl
push
mov
je
or
repz
push
mov
cmpsb
xor
leave
xor
inc
cs
mov
dec
mov
insl
iret
fs
call
cmp
stos
mov
mov
cmp
cmp
in
mov
xor
mov
daa
sbb
mov
xchg
dec
in
mov
stos
repz
sbb
fwait
in
mov
movsb
inc
xor
jb
or
outsb
xlat
les
repnz
and
loope
call
rol
jl
and
xor
cld
dec
xor
icebp
popf
lcall
aaa
inc
adc
lea
or
pushf
dec
notl
es
jno
movsb
push
xor
dec
pop
scas
test
gs
shrb
pop
push
cmpsb
test
inc
sahf
mov
inc
xchg
daa
movsb
outsb
pop
cmpl
out
repz
sbb
mov
ret
xor
mov
adc
adc
mov
insl
inc
mov
es
pop
mov
jns
xchg
sub
sbb
ja
outsl
cmp
pop
shrb
out
movsl
fists
std
cmc
lods
xchg
jle
mov
test
movsl
js
sub
lea
stos
mov
out
ljmp
ret
xchg
call
sub
or
fmull
xchg
nop
xchg
xchg
pop
pop
push
sarb
adc
inc
pop
cs
push
or
dec
mov
outsb
mov
pop
add
mov
add
add
jnp
add
add
jmp
add
add
add
push
pusha
sbb
add
add
imul
add
dec
add
add
or
add
add
or
in
in
cmp
in
inc
add
adc
add
ljmp
ja
mov
js
js
push
mov
sub
orl
mov
inc
mov
pushl
pushl
pushl
push
push
call
add
mov
cmp
jbe
andl
cmpl
jne
call
mov
inc
push
pushl
call
mov
mov
movzbl
mov
movzbl
sub
test
je
mov
add
mov
push
push
push
pushl
call
mov
sub
mov
add
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
movl
mov
sub
test
je
call
mov
push
push
push
call
push
push
push
push
push
pushl
call
pushl
call
push
push
pushl
pushl
pushl
call
push
push
push
push
call
call
call
call
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
push
call
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
push
call
mov
add
mov
jmp
jmp
push
pushl
call
mov
pushl
call
cmpl
jb
mov
leave
ret
add
add
add
add
jb
outsb
inc
or
add
add
add
add
add
popf
add
xor
mov
add
and
add
add
outsl
add
add
add
add
cmp
std
add
int
and
pop
add
push
outsl
imul
cmp
jne
push
leave
aaa
mov
popa
lock
mov
inc
cld
inc
lea
add
dec
mov
mov
incb
inc
std
and
call
jb
add
push
add
add
mov
cmp
lea
rorb
rolb
add
add
push
add
test
cmp
push
xor
inc
incl
adc
incl
orl
add
push
mov
test
jge
push
push
incl
push
adc
std
mov
mov
ret
orl
lock
call
sbb
incl
addb
add
or
fiaddl
addb
add
add
add
add
add
push
je
imul
outsl
dec
imul
inc
add
add
xlat
arpl
popa
gs
gs
gs
insb
and
js
push
insb
test
push
push
add
add
dec
insb
popa
jne
gs
pop
inc
outsl
push
insb
arpl
add
add
add
repz
in
add
arpl
add
add
add
lea
and
outsl
cltd
pop
and
pop
testl
push
popf
push
dec
bound
decl
mov
popa
cmp
mov
inc
into
mov
imul
pop
lret
sbb
fwait
cli
in
inc
movsb
inc
mov
xchg
sahf
lret
in
mov
fs
out
jnp
sub
aas
pop
add
dec
mov
mov
jge
xchg
jle
pop
inc
out
mov
test
sub
mov
sbb
outsl
adc
xchg
mov
cmp
mov
or
push
push
add
mov
pusha
jg
les
and
inc
xor
mov
pop
jbe
cltd
sbb
adc
scas
add
test
sub
and
sbb
loop
adcb
es
xor
cmp
call
subb
test
aas
fsts
in
and
mov
adc
out
sbb
stc
pushf
push
adc
xchg
push
and
divl
cs
jge
lock
mov
add
push
mov
icebp
nop
add
hlt
cmp
fwait
push
outsl
in
test
in
xchg
jnp
sub
inc
cmp
fucomip
fidivl
dec
mov
mov
jo
xchg
scas
dec
jns
repz
xchg
cmp
outsb
cmpsl
inc
mov
mov
jns
scas
push
int3
mov
jns
add
insl
xchg
and
mov
sbb
jle
ss
mul
mov
enter
adc
xchg
call
std
adc
jle
fldenv
mov
adc
test
and
xchg
in
and
movsb
mov
jnp
lcall
lahf
fisubs
dec
nop
and
pop
jne
pop
pop
mov
adc
jge
test
add
test
sub
xor
stos
test
xchg
js
ja
aad
xor
xorb
leave
xor
nop
dec
add
movsl
sbb
daa
mov
add
pop
add
cmpsb
xchg
insl
xchg
jle
mov
pop
jo
andl
sti
dec
loopne
dec
mov
adc
ret
daa
pop
sub
jnp
fwait
fwait
jg
xchg
push
mov
xchg
xchg
fwait
or
xchg
mov
lock
adcb
pop
xchg
sti
or
cmpl
stos
fadds
cmp
cmpsl
jae
add
fnstenv
jmp
mov
cld
ljmp
bound
xlat
repnz
adcb
mov
mov
hlt
in
jp
in
add
jl
lea
xchg
dec
push
xchg
ss
nop
rcrl
movsl
jp
sub
pop
jge
push
orl
inc
cmp
inc
lods
loope
orl
outsl
dec
mov
fisttpl
outsl
jbe
adc
out
push
xchg
ljmp
andb
movsb
xor
mov
xorb
jp
mov
gs
xchg
cmp
push
ds
nop
jne
inc
jmp
xchg
push
mov
jnp
xchg
dec
or
es
mov
insl
mov
cmp
iret
scas
or
mov
out
jp
loop
pop
inc
shll
ret
cs
dec
cmpsb
sub
enter
rcrb
test
scas
push
cwtl
lret
aas
stos
xlat
aam
lock
negb
jle
xor
cli
sbb
int
fbstp
cld
movb
hlt
es
movsb
nop
cmp
add
test
imul
clc
data16
ja
mov
pop
pop
aaa
mov
sub
fstpt
xchg
sbb
mov
jle
out
add
pop
or
subb
adc
sbb
cmpsb
adc
cmovno
xchg
movsl
nop
and
aad
or
or
push
ret
ret
scas
pop
push
and
repz
xor
jne
sub
mov
cli
cmpsl
out
or
pop
xor
ja
aam
scas
xor
nop
add
cwtl
fldl
in
fidivrs
jbe
xor
jne
lods
fdivl
addr16
mov
iret
cwtl
test
lret
out
inc
xchg
sahf
pop
and
out
aaa
push
xor
dec
loop
fbld
jg
pop
or
mov
sbb
outsb
gs
inc
sub
mov
push
outsb
fidivl
jl
inc
push
es
movsl
into
cmp
mov
dec
test
lock
xchg
iret
adc
mov
mov
fcoms
sahf
shll
xchg
push
xchg
mov
pop
sub
mov
mov
jnp
into
test
popf
sub
mov
xchg
test
jl
inc
adc
push
and
gs
nop
movsl
clc
sarl
xor
mov
mov
sbb
cs
mov
sub
sti
push
into
loop
fadds
stos
fiadds
cmp
ffreep
fcoms
and
or
addr16
mov
test
outsb
pop
jecxz
pop
ret
and
mov
cwtl
pop
add
andb
lahf
inc
mov
stos
mov
stos
cmp
or
rep
mov
rcll
adc
and
push
sub
imul
inc
push
int3
mov
add
in
mov
dec
dec
aad
testb
inc
or
addr16
jno
mov
sbb
ret
fbld
aas
pop
movsb
stc
mov
xchg
cmp
inc
fcompl
sub
xor
icebp
push
mov
adc
and
icebp
xchg
or
push
jns
dec
shll
ret
mov
mov
xchg
ret
shl
aas
lock
xlat
jge
add
inc
and
js
fistps
cld
jnp
mov
dec
pop
inc
adc
jg
je
cld
inc
xchg
je
xor
cli
fidivs
and
int
test
xor
test
cmp
push
dec
cmp
aam
add
jmp
cmpsb
je
add
and
bound
out
inc
sub
or
jecxz
int
fadds
jecxz
sub
and
negl
xor
pop
je
lret
inc
mov
dec
jecxz
es
orb
cmp
loop
sbb
subl
outsb
lea
add
sbb
mov
dec
push
cmp
inc
mov
divb
repnz
jecxz
fistl
push
in
push
fidivrs
push
jo
pop
sub
mov
fdivrl
mov
mov
and
cmp
xor
imul
pop
movsl
cmpsb
pushf
cmc
repnz
push
mov
mov
fsubrs
pushf
mov
jo
add
mov
in
dec
test
pop
lea
xchg
sub
loop
bound
inc
mov
xlat
lahf
cmp
cmp
xchg
jecxz
mov
sbbl
iret
add
sbb
sar
sbb
sbb
inc
jns
cmp
pusha
pop
xor
mov
sub
imul
sarl
adc
xor
or
lods
inc
inc
daa
aas
push
popa
pop
testl
pop
negl
iret
jae
call
or
leave
fs
push
cmpsl
push
lcall
mov
or
push
xchg
jl
scas
test
adc
pop
movsl
scas
cmp
jecxz
idivb
repz
push
or
push
push
push
incb
loopne
arpl
pushf
lds
in
xor
inc
dec
mov
loop
test
cmc
sub
sub
xorb
jecxz
and
fs
ret
iret
mov
push
mov
sbb
ds
pusha
jo
cld
cmpsb
lods
in
push
xor
pop
xlat
into
js
adc
sub
je
sbb
mov
cmp
ss
mov
adc
insb
mov
or
mov
ja
leave
dec
ja
jg
pop
cmc
mov
cmp
ret
lea
xchg
add
out
add
xorl
js
adc
mov
xchg
cwtl
mov
ljmp
add
cmp
push
jecxz
jo
adc
incl
inc
leave
scas
test
pop
xor
hlt
sbb
cmp
sbb
sarl
xlat
fstps
jp
ss
js
xor
ds
pop
adc
std
stos
ficomps
and
out
sub
stos
mov
or
repnz
sbb
popa
mov
rolb
cmpsl
mov
lahf
cmp
dec
out
mov
mov
inc
mov
or
dec
jnp
jo
shll
in
imul
pshufw
loop
loope
hlt
push
jno
aam
mov
mov
xor
xchg
or
test
jg
add
xchg
fwait
jno
sbb
pop
idiv
mov
and
mov
jge
ja
inc
adc
pushl
cmp
les
incl
mov
movsb
cmp
in
icebp
ss
stos
les
ret
lret
push
cmp
into
adc
sbb
lods
les
jne
xor
sbb
fldl
scas
push
inc
fstpt
sbb
shrb
or
repz
xchg
loopne
sub
mov
bound
sub
mov
movsb
sub
out
inc
in
lcall
sbb
and
mov
jne
mov
or
pop
xchg
hlt
iret
and
sar
add
pop
sub
and
jg
pop
or
popa
bound
clc
or
pop
and
pop
sub
mov
push
push
andl
test
sarb
out
mov
mov
ja
or
out
sbb
jnp
xor
mov
pop
das
ss
dec
dec
jns
pop
ja
or
or
mov
push
or
repz
mov
jp
gs
sbb
mov
add
daa
push
adc
daa
mov
push
inc
lahf
int3
cmp
dec
fs
mov
out
sub
jne
lea
stc
pop
fistl
jne
rclb
adc
ja
cmpsl
cmc
shlb
sbb
fldl
add
shll
int3
aam
stos
cmpsb
fs
js
mov
fidivl
bound
mov
jl,pn
hlt
popf
cmp
sbb
ss
push
arpl
cmc
sar
pop
push
mov
xchg
dec
xor
lds
xchg
mov
andl
rorl
lods
sub
adc
jecxz
xchg
mov
sbb
or
shrl
mov
sbb
and
leave
add
xor
add
inc
mov
cmpsl
aad
cmp
mov
sbb
cmc
xchg
sub
es
push
mov
test
lret
mov
loopne
sbb
ja
into
lods
rorb
sbb
cmc
enter
int
mov
cmpsb
or
enter
lods
hlt
cmp
xchg
inc
xchg
repnz
addr16
sub
imul
sar
jb
mov
cmp
sub
push
add
or
jae
mov
enter
test
das
vmovaps
inc
dec
call
mov
add
mov
mov
and
sbb
ja
lods
pop
ret
mov
je,pt
dec
jg
cmp
and
sahf
pop
cmc
test
aad
push
mov
mov
xorb
sub
test
in
mov
add
adc
sbb
or
sbb
jns
jp
imul
mov
pop
roll
add
in
cltd
jp
jo
or
aad
je
xchg
sub
mov
cltd
les
ds
jl
pop
outsb
push
std
test
inc
clc
call
mov
sbb
jg
leave
sub
cmp
sahf
call
popa
push
or
mov
std
test
xchg
sub
shlb
cwtl
xor
xchg
dec
mov
aam
mov
sub
ss
insb
loopne
xor
mov
jae
outsl
jge
mov
sbb
mov
adcl
jns,pt
mov
pop
dec
cmp
rolb
packssdw
out
out
mov
xor
xchg
mov
push
int3
ss
lret
cmp
and
fmuls
iret
mov
loop
mov
cmp
ds
lods
and
ds
xchg
mov
int
test
cmp
cmp
into
dec
mov
cmp
push
adc
jecxz
fisttpll
mov
clc
add
cmpsb
fcmovbe
xchg
mov
jns
xchg
add
dec
cmp
mov
cmp
insl
adcb
ljmp
aaa
stc
xchg
jns
pop
int3
jno
cmp
fcompl
in
cmp
cmpl
cmp
jae
fstpl
xchg
loopne
leave
cmp
xchg
inc
iret
mov
or
lahf
ljmp
inc
sbb
mov
inc
cmp
out
pop
push
jnp
movsb
push
int3
jge
and
jbe
mov
mov
icebp
imul
or
daa
lcall
cmpsb
orb
ss
gs
adc
xchg
cmpl
sub
sbb
clc
mov
jns
mov
sub
icebp
xor
call
mov
mov
not
addr16
jo
ja
lock
push
xchg
mov
mov
decb
mov
add
sti
ja
mov
fisttps
or
cmc
shlb
das
mov
or
mov
adc
mov
sbb
push
xor
hlt
xchg
adc
or
iret
mov
pop
mov
or
xor
xor
xlat
dec
xor
xlat
data16
test
jns
aaa
outsb
dec
mov
incb
xor
dec
xchg
mov
rcll
clc
divb
loop
cmc
repnz
push
ficoms
stos
push
sub
sub
and
or
pop
cmp
jns
add
in
movsl
clc
mov
dec
scas
lcall
jae
pop
xchg
add
out
fsubr
outsl
test
sbbb
pop
xor
ds
mov
adc
and
ret
push
ss
loope
jbe
cmp
out
cwtl
ret
jl
sub
lock
cmp
iret
pop
les
rcrb
or
mov
or
pop
les
fwait
adc
idiv
js
pop
mov
outsb
mov
lods
fsubp
movsb
jbe
call
cmp
sahf
or
sbb
gs
insb
out
imul
sub
add
mov
mov
mov
xor
lods
xlat
jmp
ret
lea
push
jmp
xor
xchg
sbb
and
nop
fdivl
lea
test
jns
hlt
xchg
call
dec
sbb
bound
jg
pop
xchg
lea
pop
pop
jbe
sbb
sbb
lods
xchg
daa
cmpsb
xchg
and
inc
inc
pop
jae
mov
out
mov
inc
sub
imul
adc
je
mov
and
in
stos
mov
mov
sub
add
sub
pop
int
mov
pushl
mov
ret
jl
sbb
scas
sbb
daa
sub
cs
stos
and
fs
xlat
aas
xchg
scas
in
lods
hlt
pop
sbb
pop
mov
add
gs
sbb
mov
dec
lods
aam
pop
mov
or
xor
sub
fbld
push
pushf
xchg
lret
pop
mov
add
pop
int3
jg
jle
lea
jl
nop
mov
sbb
xor
sub
in
mov
mov
insb
jle
aam
in
cs
arpl
cmp
xchg
xor
mov
xor
pop
repz
mov
inc
idivb
lods
xchg
movsl
mov
push
test
xchg
or
mov
ss
icebp
jl
test
scas
imul
lea
push
jge
or
inc
mov
dec
int
mov
icebp
mov
add
in
mov
xor
roll
dec
jns
adc
dec
ja
aaa
sbb
hlt
or
sbb
sub
test
das
pop
test
hlt
cmpsb
push
dec
orb
mov
aam
das
fstpt
lcall
xor
inc
in
sbb
insl
inc
mov
cmp
pop
shrb
sbb
xor
push
dec
repnz
dec
xor
xor
shll
lret
sbb
and
enter
mov
enter
lds
xchg
push
lret
mov
xchg
mov
or
pop
mov
inc
jbe
lret
sub
xlat
mov
cli
xchg
xor
inc
xor
add
sbb
outsl
mov
mov
fwait
cmp
xorb
jno
les
scas
push
sbbl
cs
pop
or
arpl
jb
and
dec
dec
in
sbb
mov
and
iret
mov
or
stos
jno
in
inc
pop
loop
adc
aad
leave
and
popf
je
pop
orb
inc
pop
jo
cmp
jle
pop
mov
mov
outsl
dec
jns
mov
nop
dec
out
push
lahf
leave
push
pop
jmp
adc
inc
cmp
sbb
mov
jns
xchg
mov
inc
ljmp
outsb
cld
xchg
shrb
add
fmul
push
or
or
xchg
in
incl
sbb
cmp
and
movsb
sarl
push
and
fcoms
add
push
sub
adc
push
inc
push
sbb
push
std
repz
movsb
hlt
adc
pop
push
mov
pushf
ljmp
int
sbb
dec
or
or
fistpl
lock
cmp
inc
lods
ret
scas
test
test
inc
sub
mov
in
sub
sbb
lods
popa
call
mov
inc
setp
outsl
nop
ret
stos
subb
jle
inc
or
jecxz
imul
sbb
aaa
jb
inc
clc
repz
cmc
mov
push
aad
arpl
xor
push
mov
das
add
add
dec
mov
popf
pop
xchg
mov
incl
fucomp
cmp
lods
push
pop
xor
dec
sub
sbb
aad
in
loop
and
and
mov
out
aad
jns
shrl
mov
pop
dec
in
mov
shr
fsubrl
les
aad
jae
jmp
xchg
fcmovu
jge
xchg
popa
mov
ficoms
mov
sahf
insl
mov
fs
push
fyl2xp1
xchg
inc
in
int
clc
test
push
in
sar
pop
daa
pop
mov
fisubl
jnp
psubd
add
insb
add
add
add
add
add
int
add
add
add
in
add
add
add
add
roll
add
and
inc
add
sbb
add
incl
stos
stos
add
ja
cmp
jo
add
je
or
add
add
add
add
mov
push
mov
pushl
add
mov
mov
mov
call
mov
call
mov
mov
mov
movzbl
movzbl
sub
je
addl
xor
mov
push
push
push
push
push
push
push
push
push
pushl
pushl
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
ret
push
mov
push
xor
push
push
movl
movl
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
movl
movl
mov
movl
call
push
push
mov
call
push
mov
call
pop
pop
ret
push
mov
sub
push
pushl
call
mov
movl
andb
mov
andb
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
movl
movl
movl
pushl
movl
call
add
test
jne
push
pop
jmp
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
jmp
pushl
call
push
push
push
pushl
call
call
push
pop
pop
ret
jae
jb
jo
add
jb
jne
insb
push
jb
je
arpl
add
add
add
add
dec
arpl
or
pop
add
rolb
add
add
sub
add
add
add
add
add
add
add
and
jo
gs
add
inc
outsb
imul
push
lds
enter
or
pop
js
sub
pop
in
push
decl
add
add
or
mov
adc
add
push
dec
push
push
cmp
push
push
push
or
or
pop
mov
pop
test
adc
add
and
pop
push
push
push
lock
loopne
add
clc
or
push
test
std
lea
and
add
or
mov
push
push
xchg
add
add
cmp
clc
lea
adc
inc
sub
mov
push
or
inc
inc
adc
lock
push
in
push
movl
add
add
add
inc
add
xor
add
inc
inc
add
gs
imul
add
gs
je
inc
inc
gs
dec
jbe
je
arpl
add
dec
dec
inc
imul
jge
add
outsb
add
push
addr16
add
jb
clc
inc
cs
add
insl
add
and
add
add
mov
add
add
add
popf
in
jg
shlb
push
lahf
lahf
mov
cmpl
mov
cwtl
cmc
jno
shl
fstpt
xor
stos
lcall
leave
xor
out
lea
mov
je
mov
dec
repnz
or
rolb
aam
sbb
jno
xlat
add
cmpsb
lahf
add
call
sti
stos
inc
pop
sub
faddl
iret
iret
insb
mov
pusha
ljmp
aam
pop
inc
daa
scas
and
bound
dec
fincstp
xchg
push
mov
inc
neg
stc
sahf
push
push
addr16
aas
push
fwait
pop
push
adc
jno
jo
and
pop
mov
xor
mov
mov
es
ret
rcrl
nop
fnstenv
lahf
insb
pop
ljmp
xchg
call
addr16
lret
or
fbld
imul
and
ret
pop
adc
xchg
ss
mov
inc
jmp
loope
int
inc
xchg
jmp
and
mov
stos
aas
inc
into
mov
jecxz
repz
sahf
inc
daa
cltd
aaa
jo
xchg
push
jns
push
xchg
sbb
inc
jle
cmpsb
adcb
test
in
std
and
clc
fadd
sub
enter
jg
xchg
dec
mov
jae
cmp
popf
sub
cs
jge
aad
subl
stos
sti
or
pop
inc
sbb
or
daa
out
add
ljmp
cs
and
iret
push
push
xor
add
iret
inc
scas
adc
ss
mov
ss
push
sub
in
lret
lock
and
mov
cmp
cld
inc
ja
imul
fbstp
loop
dec
fucom
and
push
testb
shlb
add
ficoml
jmp
xor
shll
push
mov
mov
sub
lret
les
and
sarb
ret
scas
aam
pop
sahf
int3
dec
inc
and
repz
popa
nop
mov
mov
in
into
add
in
mov
idivb
sub
sbb
xchg
faddp
adc
stos
inc
sub
sub
mov
daa
pop
ficomps
neg
mov
in
leave
pusha
repnz
pop
pop
push
mov
pop
xchg
cld
ror
lret
rcll
sbb
mov
mov
outsb
scas
test
pusha
in
or
imul
popa
cld
sub
lods
push
mov
push
and
cli
jne
or
xchg
test
sub
loop
jecxz
leave
mov
aam
lcall
pop
mov
out
inc
pusha
dec
sbb
pop
mov
lock
lret
jle
adc
jno
pushf
aas
xor
stc
hlt
lahf
jmp
xchg
ljmp
shll
aaa
ja
lea
xor
ljmp
jae
das
pop
pop
shll
loopne
mov
out
push
fwait
sahf
dec
lahf
mov
cmp
and
ja
scas
cmp
and
xchg
sbb
cmpsl
pop
insb
sbb
stos
jno
out
data16
push
mov
xchg
ja
aaa
fnsave
mov
paddsw
rolb
xor
or
adc
cmp
inc
or
jno
add
ss
mov
mov
xlat
pop
push
stc
sbb
mov
imul
cmp
mov
ljmp
adc
popf
add
stc
hlt
push
adc
popf
mov
push
add
shl
andb
mov
xchg
or
xchg
sub
rcrb
xchg
je
jno
dec
and
xor
dec
fcomp
sbb
mov
subl
xor
xor
pop
in
jl
out
in
fldcw
cs
push
add
adcl
pushf
adc
dec
xor
pop
and
mov
cld
aaa
les
push
daa
loopne
sahf
mov
out
push
and
addr16
xchg
sti
sub
mov
shr
aad
push
ret
bnd
dec
xor
xchg
lea
jnp
test
nop
hlt
pop
insb
mov
call
pop
lret
mov
sub
aaa
mov
adc
lods
inc
xor
into
jae
xor
jl
les
mov
movsb
pop
sub
sub
dec
fildl
insl
ret
and
sub
adc
outsl
mov
cmp
cmc
mov
cmp
call
ret
mov
mov
xor
rcrb
cmpsb
addr16
hlt
loopne
xchg
and
jnp
out
int
popa
ficomps
push
sbb
loopne
xor
mov
andl
std
cmp
stos
jmp
push
insb
movsb
push
mov
dec
cltd
nop
xchg
pop
hlt
daa
jo
fidivrl
mov
jb
mov
aad
jo
inc
inc
adc
pop
and
faddl
addl
pop
push
sahf
pop
cs
scas
add
in
fidivrl
pushf
scas
xor
sub
loopne
or
xchg
lcall
pop
jecxz
lcall
imulb
sbb
sub
dec
sbb
dec
dec
mov
das
cli
inc
mov
filds
enter
loope
adc
cld
loopne
mov
out
mov
jmp
xor
rcll
cmpsb
cltd
stc
or
mov
lcall
icebp
or
mov
and
mov
push
xchg
push
sahf
mov
leave
cltd
mov
arpl
xchg
jnp
xor
add
stos
movsb
sbb
dec
in
push
jmp
jge
cmp
adc
inc
shll
gs
inc
notb
pushf
lahf
aaa
adc
inc
adc
mov
mov
adc
fsubrp
jnp
jno
push
adc
mov
fnsave
int3
or
xchg
sub
jle
jmp
mov
fsubp
testb
inc
push
mov
mov
loopne
out
pusha
push
lea
adc
dec
mov
roll
inc
clc
iret
jae
add
jne
ja
dec
jecxz
dec
jne
xor
cmpsb
push
loope
aad
not
dec
sarb
mov
in
aaa
cmp
arpl
xchg
pop
push
mov
mov
fcoml
xchg
mov
jle
xor
dec
pop
lret
pusha
jl
int
xchg
icebp
repnz
repz
push
insl
push
dec
rorb
inc
adc
dec
pop
lods
adc
test
xlat
hlt
xor
outsl
xorb
vmread
adc
xchg
fs
cld
gs
aam
push
and
cmp
mov
sahf
movsl
add
jp
bound
pop
mov
adc
mov
xchg
and
xchg
mov
stos
cmp
adc
adc
loopne
and
xchg
jmp
or
je
cmpsl
mov
insb
jmp
pushf
inc
adc
bound
sub
or
fcmovnu
xchg
loop
dec
cmp
fs
xchg
or
ljmp
insb
or
jbe
and
xor
fsubs
mov
fwait
bound
pop
inc
pusha
les
sarb
xor
mov
dec
rcll
push
scas
cmp
cwtl
xchg
pop
mov
lds
fiaddl
test
jmp
enter
adc
in
pusha
cltd
dec
dec
lahf
fbstp
ljmp
movsl
clc
or
dec
in
sub
outsb
inc
sub
jno
mov
xor
cmpsl
jns
stos
jp
aad
push
sti
xchg
xor
lret
loop
lret
pop
push
leave
dec
pop
incb
pop
into
arpl
xchg
and
shrb
jp
xchg
sub
loope
mov
adc
test
ret
sahf
mov
lods
inc
pop
adc
adc
inc
cltd
adc
cmpsb
test
int
xchg
push
sub
jle
movsl
dec
mov
mov
jmp
test
iret
inc
mov
jp
das
imul
jns
lret
sub
adc
xchg
or
iret
dec
js
cmp
out
sti
or
std
ret
or
out
push
jge
scas
arpl
jns
fstpl
jg
mov
std
mov
sbb
in
add
push
outsl
push
ret
ss
fmuls
xor
mov
sbbl
or
shl
movsb
sub
das
scas
push
rorl
sbb
and
xor
sbb
nop
test
cmp
adc
in
cmpsb
or
xor
dec
inc
bound
cmc
sbb
popf
sbb
adc
xor
cmp
popa
fidivl
stc
pop
mov
hlt
int
xchg
inc
out
rcl
mov
mov
ror
imulb
push
mov
cli
sbb
sar
loopne
in
xchg
jmp
lock
jle
in
or
hlt
sbb
lcall
cmpsb
fs
aad
mov
or
cld
adc
mov
mov
lret
inc
xchg
dec
aam
add
insb
and
sbb
jns
or
and
mov
push
std
movsb
and
mov
push
and
add
sub
jmp
in
xchg
jp
in
jnp
push
int
mov
shlb
xor
adc
in
test
in
fsubl
sbb
jmp
repz
sbb
nop
test
pop
sbb
sahf
push
outsl
mov
ja
sub
in
daa
or
mov
inc
dec
or
jl,pt
jae
mov
push
stos
dec
jmp
scas
aaa
jnp
adc
sub
jmp
fadds
xor
mov
in
daa
pop
or
and
rclb
dec
adc
and
inc
ret
mov
push
push
pop
loop
int
pop
xor
ror
xchg
cld
imull
int
dec
dec
pop
sbb
pusha
or
in
aaa
xor
sbb
mov
and
cwtl
ficompl
xchg
mov
mov
mov
jmp
incb
pop
popf
sbb
rcl
iret
stos
mov
popa
sbb
mov
xchg
repz
fisttps
frstor
popa
ss
aam
in
fwait
add
shlb
imul
mov
fbld
jl
and
clc
sahf
cmpsl
push
xor
adc
mov
int
inc
sahf
sarl
jmp
out
inc
sub
lods
add
sar
cmpl
mov
loopne
xor
xchg
stos
imul
adc
or
and
es
xor
or
mov
arpl
gs
or
push
mov
push
cmp
add
mov
decb
cmp
shl
shll
cmp
cltd
rcll
repnz
dec
out
enter
lock
sbbb
sub
out
jp
out
lret
outsb
pop
js
imul
sti
adc
xchg
xor
insb
cmp
mov
nop
cmp
lahf
push
mov
xchg
xchg
adc
xchg
xchg
sti
sub
mov
dec
mov
test
shrb
cmp
icebp
pop
inc
jmp
call
xchg
test
mov
insl
scas
ret
icebp
jp
data16
cld
xor
jp
xor
sti
inc
arpl
inc
cs
push
add
loope
into
xchg
scas
xchg
sbb
xor
push
enter
pop
ja
xor
cmc
pop
leave
inc
dec
je
fisttpl
mov
lock
loope
loopne
add
movsl
cmpsb
roll
std
into
add
mov
out
mov
xorl
ljmp
xchg
fldenv
mov
je
jp
ja
ds
jle
pop
adc
into
cmp
cmp
cmpsb
pop
test
pop
out
fcomi
in
and
ds
sbb
test
fnstcw
mov
or
push
inc
insb
cwtl
ss
adc
push
and
dec
pop
addb
ljmp
inc
loope
movsb
fs
popa
outsl
xchg
orl
mov
je
in
out
add
mov
sbb
popa
mov
test
lock
lcall
gs
or
aaa
testb
test
rcrl
sbb
rcl
dec
ds
fldl
pop
aam
imul
rcrl
xchg
or
mov
into
jp
pusha
ds
insl
mov
lret
dec
push
sub
clc
cltd
jle
fmulp
out
mov
mov
and
mov
cmc
inc
cmc
pop
xor
idivl
in
insb
and
mov
xchg
es
jo
lods
rcr
adc
mov
add
lock
sbb
xchg
dec
data16
bound
jns
out
aam
in
mov
jmp
push
cmp
movsl
push
jnp
sbb
arpl
rclb
push
adc
jae
cmc
add
cmp
scas
roll
lods
mov
popf
jns
test
scas
jp
repnz
es
or
sub
mov
fldenv
popf
rolb
push
bound
mov
mov
rcrl
clc
ds
xor
aam
stos
rcrb
mov
in
cltd
cltd
xchg
lcall
aaa
or
mov
pushf
jge
pop
cmp
mov
mov
data16
lods
out
cli
arpl
scas
testb
in
jge
fnstcw
mov
ljmp
mov
jb
les
cmp
mov
xchg
sub
xor
inc
shlb
test
jl
mov
loop
lret
aad
outsb
dec
fbstp
sbb
insl
ret
sti
int3
in
orb
scas
test
fldl
daa
jb
mov
mov
cmpl
leave
or
pop
sbb
fwait
sub
in
add
imul
loop
test
add
jb
fbld
push
fildll
or
add
adc
cltd
outsl
mov
pop
lock
xchg
aam
mov
mov
lds
push
mov
subl
mov
lods
sarl
adc
fldt
jmp
inc
cmp
xchg
inc
addr16
hlt
mov
enter
gs
test
jmp
movsl
sbb
mov
xchg
add
psrad
lods
outsl
outsb
jbe
out
or
movsl
enter
dec
lods
test
shlb
mov
cmpsl
out
push
popa
es
dec
fmul
cmpsl
jg
dec
pop
dec
jmp
sti
nop
pop
fbld
xchg
adc
jnp
rorl
push
fisubrs
std
test
add
dec
ret
or
shll
mov
movsb
fsub
dec
mov
outsl
dec
push
cmp
mov
and
lea
mov
pop
aas
push
jns
andb
cwtl
add
imul
xchg
inc
lahf
and
dec
fistpl
xor
fnstenv
push
popf
lock
and
loop
push
jo
lods
adc
cmp
out
sbb
ljmp
xorl
jne
in
movsb
mov
out
mov
aam
xchg
push
out
enter
jle
negb
mov
aaa
mov
sbb
mov
adc
xor
roll
cmp
enter
inc
sbb
not
add
xchg
bound
fbld
pop
mov
sti
push
out
imull
imul
mov
xor
aaa
jo
lcallw
sub
clc
push
pop
mov
mov
mov
cmpsb
fmuls
dec
xchg
in
pop
roll
sub
mov
push
dec
loopne
add
push
movsl
sbb
inc
xor
movsl
mov
sbb
adc
cmp
fadd
addr16
cmc
pop
lods
enter
in
mov
leave
dec
pop
stos
daa
pusha
add
cmc
mov
test
dec
xlat
sbb
mov
adc
pop
insl
fimuls
loop
mov
mov
inc
push
aaa
cmp
and
lahf
add
mov
ret
in
test
std
test
dec
dec
pop
xchg
mov
mov
scas
leave
sbb
sub
loope
adc
push
fdiv
and
sbb
ret
cmp
repz
fsubs
push
push
mov
push
out
popa
mov
and
inc
movsl
xchg
cmp
mov
add
scas
jns
repnz
inc
adc
ss
dec
notb
inc
mul
loopne
in
cmc
mov
or
push
cmc
pop
sub
xchg
mov
jns
pop
adc
cmpsl
sbb
pusha
inc
out
jmp
cmp
xor
leave
mov
aad
jne
aaa
adc
mov
imul
aaa
divl
mov
cmp
xor
dec
push
inc
and
movsl
mov
imul
add
add
sbb
loope
jle
fcoms
mov
push
shl
fsubrl
mov
movsl
cmp
sub
cwtl
je
in
cmp
out
add
fistpll
adc
push
xchg
into
jae
ja
mov
jl
int
push
mov
mov
add
aas
outsl
lds
or
mov
and
mov
dec
or
jecxz
xor
jle
data16
stos
mov
bound
cmc
mov
in
inc
test
test
shrb
lods
sti
test
jle
inc
test
push
lods
add
ss
add
inc
sbb
cmp
push
pushf
sbb
out
movsb
push
mov
hlt
rclb
or
cmpsb
xchg
jge
scas
mov
lods
cmp
inc
add
ja
adc
dec
rol
hlt
imul
push
push
cmp
fsub
aaa
popf
ret
movsb
cmpsb
stc
call
lea
mov
sub
arpl
in
sbb
in
sbb
jae
push
aas
jge
out
jb
test
mov
jb
pop
repz
aas
rcr
sub
loopne
add
cmp
lret
mov
mov
pusha
test
stos
sbb
pop
xor
pushf
icebp
cli
fs
into
aad
pop
cmp
cs
adc
pop
popa
fcmove
iret
dec
jge
aam
std
jge
push
hlt
mov
movsl
push
lods
test
push
repnz
push
es
push
push
stc
adc
in
or
lret
sbb
lahf
and
repz
pop
add
sub
shlb
loopne
in
inc
in
xchg
cmp
clc
cmp
and
and
vucomisd
ljmp
jl
xor
xor
fsub
mov
enter
xchg
lock
dec
test
imul
fcomps
jne
das
rorl
test
shl
cmpsb
in
icebp
pop
sub
outsl
jl
inc
push
add
push
jp
adc
cmpsl
adc
add
add
add
add
add
std
add
mov
add
add
add
add
add
add
add
add
add
add
add
ja
mov
incl
mov
add
push
jo
gs
add
add
add
add
add
popf
add
add
add
add
or
add
add
je
add
add
inc
add
mov
add
repnz
sub
jae
add
arpl
or
dec
pop
add
jb
inc
movb
mov
sti
jecxz
sbb
cwtl
enter
mov
adc
lea
ds
cmc
insb
ljmp
clc
test
or
or
mov
test
inc
adc
cld
clc
adc
sub
adc
add
push
incl
mov
inc
incl
add
adcl
aam
push
add
adc
push
push
mov
popf
je
push
cmp
mov
jmp
push
adc
mov
enter
add
mov
add
jne
lret
roll
lret
mov
clc
stc
inc
add
add
add
add
mov
add
add
add
popf
add
add
add
insl
imul
mov
gs
jo
insb
add
arpl
outsb
gs
sub
aas
push
add
dec
push
add
inc
gs
repnz
add
inc
push
inc
insb
outsl
push
outsl
jb
bound
or
add
add
add
add
adc
add
add
addb
jge
add
add
in
add
movsl
adc
fcmovu
lods
push
mov
sbb
data16
jne
imul
loope
and
push
pop
stos
das
test
pop
scas
sarb
sub
stos
scas
clc
subb
data16
test
mov
mov
shlb
mov
test
mov
sbb
cwtl
sub
mov
inc
mov
push
sbb
icebp
gs
mov
repnz
icebp
xor
out
sbb
inc
xchg
es
mov
mov
rolb
ss
xchg
jb
sub
dec
mov
push
inc
ds
lea
push
or
addl
sti
lods
es
dec
lret
pop
fbld
mov
jo
push
movsl
cmpsl
push
lret
lahf
and
and
mov
push
outsb
jnp
movsb
subb
and
insl
shll
adc
js
pop
lret
sbb
cs
adc
enter
dec
int3
pop
or
push
inc
iret
leave
xchg
test
fnsave
je
repz
jge
in
aam
cmp
sub
or
mov
jnp
rcll
leave
out
pop
int3
sbb
out
cmp
je
ret
imul
jnp
iret
js
aam
xor
das
les
xor
out
jbe
aaa
sub
mov
daa
cwtl
ficompl
push
or
sahf
or
enter
js
xchg
xchg
and
cli
lds
jg
xchg
fistl
sub
inc
and
add
int
and
in
mov
jl
cmp
jge
movsl
cmp
div
cmp
dec
pop
and
filds
jns
jmp
outsl
mov
outsl
jmp
or
cmp
mov
jge
bound
mov
loop
iret
push
repnz
xchg
inc
jne
mov
sbb
sbb
outsb
xchg
jg
add
ljmp
mov
ja
xchg
out
mov
insl
sub
push
sbbb
aad
and
or
iret
fmull
mov
fsubr
push
shrl
iret
div
and
xchg
add
mov
leave
sub
add
fsts
jg
clc
jns
scas
icebp
into
mov
xor
stos
pop
movsb
and
cmp
inc
lock
in
loopne
jp
lods
call
cmp
pop
pop
mov
dec
add
enter
test
leave
adc
mov
cli
in
rcl
jb
push
lcall
mov
sub
in
sub
mov
sahf
xor
dec
add
cltd
ret
mov
pushf
inc
xchg
aas
cmp
inc
cwtl
ja
jns
mov
add
hlt
inc
scas
mov
jmp
mov
in
es
es
rorb
pop
and
int
stos
aaa
pop
fadds
fs
mov
aaa
popa
inc
xor
cld
sti
imul
scas
ds
or
lcall
dec
clc
xor
std
mov
jns
mov
adc
clc
gs
sahf
mov
mov
xor
mov
lods
ret
ja
xor
push
imul
pop
jmp
xchg
test
or
repz
mov
jmp
test
insl
mov
push
lods
insb
add
das
or
pop
lret
test
add
sti
sbb
add
or
iret
data16
clc
leave
lods
movlhps
adc
jbe
push
loop
inc
sub
xchg
xor
into
out
sarl
loope
and
xor
dec
push
nop
xchg
aaa
outsl
andb
dec
jecxz
bound
into
or
movsl
out
sbb
mov
cltd
inc
xor
xchg
mov
push
fiaddl
orl
scas
mov
sbb
out
sahf
mov
stc
movsl
les
xchg
cmp
mov
add
call
shrd
popf
mov
mov
into
or
pop
cmp
mov
add
lds
and
adc
loope
jae
hlt
jns
in
cltd
push
sub
sahf
push
adc
jae,pn
rcrb
loopne
ds
xor
cmp
sbbl
out
push
out
sbb
je
mov
ljmp
pop
inc
jg
cmpsl
cmp
into
idivb
mov
lret
or
mov
dec
mov
lods
sahf
add
call
sbb
mov
rcrl
lock
out
jo
movsl
inc
jo
lock
fs
fstpl
pop
xor
out
push
outsl
add
loopne
mov
fbld
mov
movsl
adc
lahf
push
out
fcoml
pop
jg
in
decl
or
lock
mov
repz
popf
pop
push
push
es
hlt
mov
cmc
outsl
xchg
or
pushf
jp
mov
sti
lods
sahf
pop
sbbb
inc
pushf
pusha
mov
cmp
nop
add
xor
push
push
cmp
ds
leave
mov
push
pop
pop
lds
cmc
test
push
fs
xor
lea
into
push
sar
push
inc
sbb
xchg
stos
mov
pop
je
cmp
cs
stos
in
xchg
popa
push
push
add
dec
sub
add
daa
ds
jns
fsubp
je
scas
fs
dec
inc
sub
ret
mov
adc
add
xor
xlat
cmp
int3
icebp
leave
hlt
pop
lret
jo
jae
imul
ds
push
mov
and
mov
cmpsl
lahf
jg
fcomip
incl
cmp
jecxz
push
inc
fldl
sub
adc
ffree
daa
xor
arpl
mov
xor
test
stos
popf
xchg
sbbl
sahf
inc
aaa
inc
test
adc
or
mov
rclb
test
fisubrs
test
inc
xor
sub
in
sbb
test
sbb
adc
add
lock
xchg
dec
push
sub
jns
data16
test
lahf
adc
xlat
fdivl
movd
ss
std
into
mov
jmp
out
or
test
loop
fwait
pop
sbb
and
addr16
loope
sub
arpl
ljmp
out
outsl
dec
mov
xor
and
lods
and
add
adc
lahf
scas
cmpl
stos
or
cs
add
sbb
jae
std
adc
aas
mov
das
fmulp
or
aam
inc
test
in
mov
insb
out
push
adc
mov
mov
std
jp
scas
ds
ljmp
xor
sub
mov
adc
sub
push
adc
jbe
jecxz
jnp
dec
stos
xor
push
mov
and
stos
jnp
ljmp
fs
xor
imul
dec
inc
fisubrl
mov
outsl
push
les
jp
scas
xor
mov
movsb
ficomps
inc
sbb
aam
xor
hlt
mov
loope
iret
fdivrs
pop
adc
addr16
cld
pop
xor
outsl
call
push
ret
divl
leave
repnz
jmp
ret
adcb
dec
mov
fwait
xchg
mov
sbb
dec
pop
mov
out
sbb
adc
and
and
dec
push
push
test
and
pop
mov
jge
mov
add
inc
sahf
sub
mov
in
pop
and
xchg
and
dec
or
aaa
jg
in
rol
mov
test
pushf
loop
aam
aaa
lahf
outsl
pop
gs
test
cmp
push
push
push
stos
icebp
pushf
subl
test
push
repnz
or
mov
pop
dec
int
adc
mov
das
pop
inc
add
stc
inc
pop
rorl
jg
lea
out
xchg
cmp
mov
imul
cmp
push
lret
push
in
popa
cmp
call
mov
test
jle
pop
inc
pop
mov
jle
mov
mov
ja
jns
je
sbb
addl
jle
lods
push
ds
mov
sbb
and
jb
inc
pop
out
in
rcll
mov
jl
sbb
cmp
fimuls
add
push
pop
mov
push
dec
cmp
stos
mov
pop
xlat
aaa
pop
cmp
sbb
xlat
ljmp
dec
stc
xchg
ds
iret
js
enter
mov
xor
lds
pop
xchg
outsb
lods
aad
sti
aad
das
adc
pop
pusha
mov
jg
sbbl
push
jnp
scas
mov
pop
js
fcompl
push
jle
mov
test
iret
lock
arpl
jne
mov
jne
andl
stos
mov
add
jg
pop
push
out
hlt
sub
arpl
jne
adc
cmp
gs
sbb
add
outsb
mov
add
push
ret
xchg
sbb
inc
shl
xor
jo
scas
dec
mov
inc
or
xchg
fdiv
popa
push
mov
jle
sbb
sub
es
sar
lcall
push
xor
push
and
testb
mov
call
test
lret
inc
loop
ret
mov
pop
pop
and
cmpsl
test
rcl
pop
inc
in
das
insl
mov
movsl
add
xor
mov
mov
out
xor
dec
imul
mov
rol
inc
sub
adc
les
lahf
xchg
mov
das
xchg
loop
hlt
xchg
jp
xchg
sbb
xor
mov
stc
outsl
cmpsl
mov
dec
fbstp
pop
push
shl
shrl
mull
scas
shrl
push
js
jo
pop
push
mov
xchg
xorb
out
les
daa
or
les
mov
lcall
or
jbe
pop
xor
incl
push
push
mov
sub
movsb
cmpsb
cmp
movsl
popf
ds
pusha
xchg
imulb
cmp
cmpsb
fs
nop
mov
xor
push
cmc
cwtl
mov
cmp
mov
adc
jns
imul
sahf
jg
cmp
fwait
mov
insl
outsb
mov
or
jg
shlb
insb
jg
aaa
cmp
add
shlb
push
sub
jge
xchg
and
and
clc
cmp
pop
jbe
negl
test
push
lea
ja
or
inc
fisttpll
sbb
in
pusha
add
mov
jecxz
fs
xchg
sbb
lcall
int3
cmc
hlt
int3
imul
or
lods
and
and
mov
js
jb
fdivrs
shrd
sub
xor
inc
mov
adc
sti
push
out
pop
and
js
gs
jmp
mov
mov
adc
stc
dec
into
insb
xchg
xchg
xchg
movsl
inc
jb
and
in
shll
fcomi
lods
xor
jmp
lret
inc
je
mov
mov
int3
lds
sahf
hlt
add
or
push
cltd
movb
sbb
mov
imul
mov
cwtl
cwtl
ljmp
jge
push
mov
xchg
fwait
aaa
fwait
push
ficoms
jns
mov
or
pop
lock
bound
enter
loope
aad
sub
into
notl
iret
rorb
leave
xchg
cmp
ja
pop
repz
jae
pop
mov
lret
inc
in
adc
mov
loopne
pop
cmp
or
jmp
jmp
iret
repnz
in
pop
push
mov
aad
popf
xchg
mov
negl
or
repz
fs
insb
and
dec
sub
push
dec
dec
stos
sub
clc
pop
jp
dec
add
push
push
orb
fdivrs
adc
adc
es
mov
and
roll
sbb
cld
pop
xor
push
cli
cld
dec
mov
pop
or
push
test
push
movl
jp
and
sahf
sub
pop
mov
xchg
mov
xor
popa
mov
jl
ficomps
mov
xchg
pop
or
adc
sbb
dec
hlt
push
movsb
in
int
cli
mov
jg
pop
xchg
jl
push
mov
enter
pop
jg
pop
das
add
shrb
repz
aam
sbb
mov
sarl
adc
cltd
in
sub
fistpl
out
movb
dec
int3
sahf
adc
cwtl
fisubrl
sbb
xchg
push
jo
rclb
push
xchg
imul
cmpsb
pop
test
and
jl
sahf
inc
sbb
jecxz
jne
and
inc
mov
lea
cmpsb
mov
mov
aas
imul
lods
mov
int3
in
mov
pop
mov
outsl
cmpsb
xor
jns
push
or
out
push
push
or
push
mov
stos
xchg
push
out
cmp
nop
fsubrs
fsubr
xchg
insl
sbb
push
imul
out
mov
test
test
mov
dec
jmp
fisubl
mov
adc
xchg
and
mov
out
jno
movsl
mov
mov
xchg
repnz
mov
lret
bound
jmp
fs
decb
sub
insb
and
mov
or
inc
test
stc
ljmp
xlat
mov
shll
jno
lock
leave
jb
es
bound
mov
mov
sbb
cwtl
aad
pop
push
xchg
push
mov
jns
jnp
inc
out
push
cmpsl
mov
test
jg
mov
add
pop
rorl
bound
pushf
adc
pop
out
xchg
repz
ffreep
hlt
push
jbe
das
inc
hlt
adc
lock
scas
lcall
dec
rclb
jb
cld
lahf
sahf
gs
push
xchg
outsl
test
adc
or
ror
rolb
out
shl
cmp
arpl
mov
es
cmpsl
xlat
xchg
mov
or
mov
mov
adc
inc
add
and
inc
repnz
out
rolb
into
mov
sbb
pushf
es
shlb
push
fimull
in
hlt
adc
outsb
dec
jns
mov
xor
inc
fwait
xchg
cmpsl
movb
sar
adc
loopne
xor
adc
pop
imul
jecxz
mov
hlt
lret
dec
fwait
jle
push
adc
test
addl
sbb
dec
mov
insb
mov
and
jbe
sbb
sarb
hlt
dec
xor
out
int3
pop
dec
jl
pop
pop
subl
cmpsl
addb
test
xor
addr16
adc
fdivs
and
lods
push
lock
and
lock
xchg
mov
pop
in
inc
cld
sub
inc
xchg
imul
jne
icebp
jo
les
xchg
cld
and
fcmovne
jno
int
xchg
push
aam
sub
les
ficoms
or
inc
mov
mov
pop
mov
dec
mov
push
in
mov
push
mov
scas
popf
cmpsl
cmp
mov
cmpb
ror
shll
push
pop
sub
or
jo
mov
or
push
add
inc
mov
mov
pop
and
arpl
pusha
pushf
adc
xchg
sub
pop
jnp
push
inc
enter
mulb
mov
lea
lods
inc
dec
jo
movsb
inc
jns
addl
sbb
and
mov
sbb
mov
add
pop
loop
jecxz
dec
scas
mov
daa
mov
xchg
push
jmp
jp
mov
push
fcoml
cmp
ss
sub
sub
dec
sub
push
hlt
jne
xor
ljmp
adc
jp
mov
inc
orl
ret
fucom
cmc
jo
imul
sub
cmp
and
rclb
roll
and
pop
leave
pop
addl
mov
mov
cli
pusha
sti
ret
push
int3
cltd
shll
and
iret
test
loop
dec
popa
mov
add
enter
and
fwait
gs
dec
aaa
out
cld
jne
fisttpl
pop
out
inc
sbb
stos
cmpsb
pop
mov
mov
roll
add
mov
sub
mov
addl
inc
jmp
adc
lods
daa
pop
out
mov
mov
xlat
sbb
jbe
mov
xchg
imul
fistpll
gs
int
jns
loope
dec
jae
xchg
dec
sub
mov
mov
xorl
fldenv
dec
xchg
in
and
movsb
mov
add
mov
adc
popf
inc
sub
dec
jns
jecxz
rclb
mov
fcoms
jns
fsubs
fmull
xor
ss
cmp
enter
leave
lea
imul
jae
push
push
mov
jo
pop
pop
dec
imul
cmp
jp
adc
push
pop
sub
mov
enter
mov
push
inc
push
ja
inc
out
out
xchg
mov
into
je
dec
xchg
sbb
test
jno
loopne
add
push
iret
cmpsb
xchg
filds
mov
push
jb
fwait
ja
or
adc
xchg
movsl
push
push
aas
ja
dec
popa
jle
pop
fisttpl
shl
and
out
insl
or
jmp
int
dec
mov
insl
push
je
jae
cmp
test
inc
push
xor
or
fcomps
dec
mov
pusha
outsl
or
and
sarl
or
out
movsb
shr
iret
outsl
scas
cmp
out
xchg
movswl
push
pop
pop
cmc
xchg
frstor
adc
add
sbb
fildll
shl
pop
into
cmp
push
push
push
js
cmpsb
fnsave
add
rcrb
lea
mov
dec
ret
and
xchg
and
xor
or
jns
adc
and
cmp
jmp
xchg
test
out
gs
call
and
inc
sahf
pop
movsb
in
cs
clc
in
jnp
jl
add
push
dec
int
call
rep
in
adc
imul
jae
sub
and
aad
dec
ljmp
pop
int
pop
lods
popf
xor
or
movsl
outsb
cs
xor
dec
outsb
ficompl
dec
and
hlt
or
pop
push
xchg
push
fstpl
push
push
dec
idivb
add
nop
add
push
pop
push
test
xchg
lret
cmp
aaa
repz
cmc
gs
push
sub
push
cmovle
dec
dec
cmp
jmp
add
add
add
add
sub
add
bound
add
add
add
int
add
add
jge
add
add
add
add
add
add
add
add
in
add
mov
addb
add
add
add
and
incl
add
add
add
and
mov
outsl
outsb
jb
or
or
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
xchg
add
push
add
arpl
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jecxz
cmp
js
add
outsb
pop
push
push
add
outsl
imul
scas
add
rcrl
mov
jmp
in
fdivr
xor
pop
incl
mov
test
xchg
mov
adc
push
test
push
add
mov
repz
inc
fs
push
test
mov
push
add
sarb
lea
add
add
add
adc
add
jmp
add
mov
decl
inc
call
decl
cmp
sar
and
cld
dec
push
lock
lock
test
adc
call
add
lret
cmp
mov
cmp
incl
lea
adc
push
jne
push
add
leave
add
pop
add
and
pop
add
add
sbb
push
sbb
sbb
int3
sbb
pop
sbb
add
add
je
jae
and
insb
add
imul
insl
gs
xchg
insl
insl
outsl
js
add
jo
insb
jae
xor
fs
insb
inc
jns
popa
add
add
outsl
jbe
fs
insb
gs
popa
push
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
das
xchg
cmp
pop
inc
xchg
jno
pop
cmp
shlb
popf
lods
mov
jne
jp
jae
cltd
xchg
push
add
in
sbb
bound
mov
cs
or
mov
inc
imul
sbb
ret
lahf
dec
rorl
push
int3
adc
pop
repnz
sub
pop
sub
movsb
out
test
and
mov
iret
mov
mov
mov
push
or
sbb
dec
xor
xchg
mov
adc
cld
push
addr16
push
xchg
jnp
fsts
xor
adc
or
cmp
loopne
sub
dec
sbb
outsl
xchg
lret
test
loopne
mov
fisubrl
mov
lea
lret
push
xchg
push
pop
or
mov
push
push
mov
into
mov
and
lea
pusha
lahf
fsub
cld
fnstsw
mov
push
stc
out
dec
repz
lods
movsb
push
arpl
ficomps
lock
xchg
std
popl
sbb
out
jbe
adc
mov
lcall
std
dec
and
dec
push
adc
loop
jp
loope
sub
xlat
xor
or
sahf
decl
loope
mov
mov
jmp
adc
push
loop
lea
sti
mov
jecxz
lret
stos
je
cs
fabs
and
mov
mov
mov
xchg
fwait
sbb
dec
aam
jmp
aad
pushf
mov
pushf
lds
hlt
ds
mov
outsl
mov
and
outsb
nop
pop
aam
clc
std
add
mov
setbe
sbb
stos
out
lret
gs
pop
or
mov
adc
ss
jg
in
cltd
sub
ret
jnp
pop
add
mov
mov
scas
inc
push
push
rorb
dec
add
ljmp
loope
lea
add
xor
arpl
fwait
jbe
mov
out
mov
pop
loope
jne
rclb
push
int3
ss
gs
cmp
push
sbb
sbb
aam
dec
adc
add
int
int3
repnz
rclb
rorl
stos
fcompl
aaa
mov
leave
xchg
je
aas
or
popa
loopne
sbb
xchg
data16
sbb
pop
inc
loopne
insl
stos
xlat
dec
leave
inc
xlat
jns
ja
ds
imul
cmc
sub
cmp
loop
adc
xchg
adc
cs
mov
shll
cld
xchg
cmp
mov
stos
inc
mov
aam
push
das
aam
xchg
in
dec
xlat
sahf
sti
pop
add
or
or
movsl
sar
xchg
popa
mov
aad
pop
and
jp
mov
push
imul
adc
jbe
pop
fnstenv
test
outsb
pushf
test
pop
cmpsl
cmp
sbb
lret
movb
fwait
sub
inc
loopne
or
ljmp
dec
mov
jmp
movsb
cmpsb
in
jno
cmpsl
dec
loop
jp
mov
inc
call
xor
push
inc
dec
enter
fwait
jne
rorb
mov
jg
pop
lods
dec
mov
xchg
lea
cmp
mov
pop
int3
mov
inc
enter
ljmp
and
xor
or
push
bound
popf
mov
arpl
lcall
mov
cmp
jbe
cmp
ds
lods
inc
push
pop
pop
add
pop
loope
inc
aaa
pop
lea
imul
lcall
pop
sbb
xchg
xor
cli
jb
dec
rcr
popf
lods
pop
test
cmpsl
jno
cli
or
daa
sarb
sbb
pop
negl
sahf
ret
das
js
outsb
xchg
out
adc
pop
mov
inc
sub
add
bound
popf
pop
mov
or
or
mov
in
mov
jmp
inc
cli
and
js
stos
jae
mov
cli
xor
scas
pop
aad
pop
icebp
cmp
xlat
push
and
shll
sbb
pop
mov
cwtl
or
les
mov
mov
int3
mov
rorl
into
outsb
cs
cwtl
ret
xor
pop
mov
mov
inc
nop
and
or
aas
int3
jge
das
add
mov
mov
sub
in
push
and
pop
icebp
mov
mov
dec
arpl
fdivs
ficompl
mov
add
sbb
sub
out
mov
orl
dec
add
jo
cmp
fucom
lcall
rorb
hlt
in
adc
inc
out
push
loopne
mov
mov
arpl
push
add
es
fisttpl
rcrb
mov
jo
inc
jp
push
js
js
int3
rorl
jecxz
out
add
xor
fs
fcomps
mov
leave
ja
call
movsb
shrb
xorb
enter
sbb
inc
xchg
adc
iret
call
jecxz
icebp
fsubl
add
iret
pusha
ljmp
jae
stos
imul
dec
pop
add
or
stos
push
lret
push
lods
nop
pop
mov
jno
pop
xchg
sbb
rcrb
imul
jl
pop
push
jb
mov
cwtl
imul
mov
out
dec
mov
pop
mov
mov
mov
jnp
mov
dec
mov
fwait
push
xor
and
fadds
cmpsl
jbe
xor
mov
pop
mov
repz
xchg
sarl
pop
jbe
push
pop
sbb
add
add
mov
fadds
dec
xor
jge
aam
lahf
push
scas
pusha
sbb
push
and
add
pop
xor
stc
lds
xor
lret
cmp
cld
cld
xchg
cs
adc
in
mov
and
fnsave
sti
push
xchg
in
push
or
jnp
push
inc
xor
lcall
scas
or
fcmovne
fwait
aaa
jmp
push
jo
mov
jae
orb
jae
fnsave
bound
aam
jno
arpl
int
push
adc
adc
xchg
seto
add
xchg
jge
scas
aas
daa
cmp
dec
dec
sub
in
xchg
enter
lea
adc
cli
stos
mov
xchg
shl
sbbb
xor
cmp
mov
sbb
lods
inc
les
push
jmp
cmpsl
loope
and
shlb
mov
mov
pop
neg
xor
cmpsb
inc
loopne
adc
movsl
aad
fstpt
imul
pop
pop
sbb
inc
jecxz
or
cmp
shrl
fstp
test
hlt
aad
cmp
jns
xor
inc
cld
and
or
xlat
fmul
or
test
lret
daa
push
sub
push
pop
test
sub
lock
ret
push
addr16
sahf
loopne
mov
aas
adc
clc
imul
xchg
and
xchg
dec
mov
nop
bound
data16
cs
add
js
out
sbb
popa
jp
pop
or
push
and
xor
cld
in
insl
dec
xchg
sarl
mov
sbb
and
mov
rcl
les
add
test
mov
mov
fidivrs
mov
cld
push
xor
stc
scas
sbb
pop
sbb
popa
sbb
mov
cmp
loope
push
stos
jl
cmp
dec
andps
mov
outsl
mov
les
out
add
xor
addr16
lods
xor
xchg
mov
mov
das
fisubl
mov
fdivl
xchg
test
aaa
push
lea
xor
jecxz
add
out
hlt
stos
xor
out
out
rorl
in
jno
out
out
pop
aad
inc
add
cs
inc
pop
mov
imull
leave
pusha
sti
fs
mov
xor
jb
stos
xorw
inc
nop
pop
repz
je
aaa
test
jge
mov
icebp
jl
lock
mov
addr16
inc
cs
jnp
ds
xor
pop
js
pop
je
pop
xor
movb
jl
shrb
push
lret
fbstp
lret
cmp
scas
scas
icebp
mov
sub
aad
push
adc
pushf
outsb
fwait
hlt
push
mov
mov
push
xor
adc
mov
xchg
or
push
mov
xchg
xchg
jle
into
imul
add
fisubrl
imul
test
aaa
mov
sub
je
adc
mov
or
decb
or
repz
daa
adc
dec
push
mov
fs
xchg
sbb
ds
aas
inc
mov
out
xchg
add
xchg
mov
out
enter
or
jbe
and
stos
pop
fisttps
jmp
scas
add
je
insb
ja,pt
add
jecxz
adc
xchg
hlt
mov
test
fwait
aas
test
fldl
ja
sarl
test
fstpt
pop
sbb
inc
imul
sbb
loope
arpl
fs
jg
addr16
push
jecxz
fwait
add
lods
adc
push
mov
cmpsb
push
enter
adc
inc
push
shll
sub
dec
or
cs
or
sub
mov
sbb
sti
out
inc
pop
mov
call
mov
insl
cmp
jae
xchg
xchg
push
inc
subb
cmpsl
add
arpl
xchg
cmpsb
imul
dec
int3
gs
addr16
jle
push
inc
push
mov
pop
sub
or
test
into
jo
loope
in
test
ljmp
cld
pop
stos
fs
dec
mov
rorl
push
push
aas
in
cmpsl
loope
lods
ljmp
mov
shlb
jb
ds
mov
add
lcall
rorb
iret
sub
jns,pn
gs
fists
loopne
push
out
test
mov
js
sbb
sub
pusha
out
mov
aad
in
test
shl
push
in
xchg
jns
mov
clc
fcompl
mov
les
loopne
or
sub
sbb
jecxz
movb
xor
cmp
sbb
and
dec
inc
push
cmp
or
push
imul
pop
aaa
insl
cmp
jne
leave
xchg
jnp,pn
xchg
dec
sbb
cmpsb
fadd
cltd
out
sbbb
add
das
pop
inc
rcrl
push
add
sbb
xor
rcrl
adc
xor
adc
cwtl
out
in
adc
jg
mov
dec
and
insl
mov
ja
jno
xlat
xor
cld
xor
sub
push
pop
dec
mov
mov
xchg
lret
cmp
clc
xor
dec
outsl
lea
mov
fsts
cmp
idiv
nop
cltd
jg
test
dec
enter
cmpsl
loope
imul
inc
adc
outsl
pop
pushf
pop
std
jno
icebp
out
mov
fnstsw
dec
fstl
mov
mov
repz
add
inc
into
mov
cmc
push
in
je
cmp
cmp
andl
and
sbbl
adc
xchg
inc
cmpsb
inc
push
pusha
ds
sbb
jae
les
pop
mov
mov
mov
sbb
xchg
xchg
sbb
out
movsb
mov
add
or
xor
lret
test
fmull
popa
push
dec
les
cs
mov
lcall
push
mov
insb
iret
clc
adc
hlt
and
andl
dec
test
push
and
shrb
mov
mov
mov
outsl
pop
in
sub
or
inc
jg
leave
lods
push
lahf
pop
daa
pushf
fmuls
push
xor
cli
or
xchg
addr16
xchg
xchg
mov
or
clc
sti
hlt
pop
adc
xchg
aam
xlat
js
dec
dec
gs
push
ret
pop
stos
xor
ffreep
aas
and
jle
cltd
jl
cmp
cld
adc
push
cwtl
push
cmp
mov
mov
jb
and
inc
adc
fisttpl
shlb
push
mov
mov
inc
jno
xor
lret
test
enter
test
pop
adc
int3
int3
fsts
pop
aad
stos
enter
sar
mov
sbb
fiadds
test
add
in
jae
jae
jno
ds
in
inc
mov
es
sub
enter
xchg
mov
lea
pop
cmp
xor
cmp
sbb
jg
jmp
mov
outsl
icebp
les
mov
imul
push
arpl
movsl
and
shrl
mov
bound
into
mov
cli
xchg
dec
mov
push
mov
lods
and
ds
and
insl
mov
push
test
das
mov
cwtl
cli
ss
push
pop
jp
and
std
xchg
xchg
dec
fcoml
push
repz
xor
movsb
xor
leave
jo
out
popa
mov
hlt
cmp
scas
mov
std
aas
pop
inc
sti
outsl
mov
mov
inc
aas
popa
pop
xchg
shrl
aad
mov
sahf
mov
das
and
jecxz
mov
inc
push
imul
mov
incl
xchg
mov
repnz
out
adc
stos
sbb
jae
pop
jge
jge
mov
repz
pop
ret
cs
fnstsw
rcl
fstps
mov
popf
lret
enter
popa
divl
xor
and
mov
aas
out
rorb
movsl
orl
mov
and
inc
lret
rorb
push
xchg
sub
cmp
and
jb
jns
push
jno
push
js
dec
dec
repnz
push
mov
aam
lods
xchg
sbb
xchg
or
ret
mov
int3
stc
cltd
sbb
dec
stos
bound
ss
mov
rcrb
hlt
jp
scas
dec
loopne
subb
pop
mov
aaa
outsb
cmpsl
adc
in
lcall
or
icebp
dec
dec
and
gs
sub
sub
mov
mov
or
insl
jae
inc
mov
add
inc
fcomps
test
and
test
jp
fsubrs
js
mov
sti
inc
and
nop
pop
dec
ljmp
xchg
push
xchg
cltd
mov
push
sbb
and
and
fistl
ffree
push
or
cwtl
jne
xor
inc
inc
add
and
loop
jne
jbe
cmp
jnp
jecxz
das
push
mov
mov
clc
test
je
sbb
dec
mov
movsb
movsl
fists
mov
insb
add
movsl
mov
fdivp
mov
int
ss
cmp
sahf
push
or
jns
adc
fstpt
inc
xchg
push
sub
pop
xorl
jnp
ficompl
sbb
fs
ljmp
jno
sarb
sub
loope
push
idivl
loope
mov
and
xchg
pop
and
jnp
test
cwtl
dec
pushf
mov
fstpt
clc
arpl
pop
xchg
sub
mov
cmpb
inc
jb
into
xchg
pop
jo
xchg
aaa
xlat
mov
in
roll
add
subl
push
jb
cld
jbe
xchg
sbb
sbbl
cld
les
mov
outsl
dec
les
push
or
pop
nop
repnz
cmc
lods
pop
xchg
pusha
rcrb
enter
fisttps
sbb
lods
stc
dec
insl
or
in
pop
push
and
aad
pusha
pop
cmpl
popf
ja
lea
out
or
adc
xchg
push
and
scas
sub
repz
fcmovnb
aad
mov
gs
dec
insl
imul
mov
rcll
add
mov
inc
popf
les
lahf
xor
repnz
repnz
inc
cs
push
pop
lods
sarl
inc
xor
sub
and
mov
mov
pop
std
add
imul
sti
add
insb
lods
xchg
es
sub
add
andl
mov
lcall
xor
fcoml
icebp
xchg
dec
imul
addl
out
pop
test
dec
shll
jns
dec
lods
fistpl
push
xchg
cmp
xor
iret
sbb
stos
stc
lods
int3
icebp
or
mov
push
pop
mov
popl
inc
loop
add
fdivp
mov
sahf
jle
push
dec
shr
sub
cmpsl
dec
mov
call
inc
pushf
sub
mov
in
imul
rcrl
push
popf
jl
lret
dec
xchg
mov
xor
mov
jl
push
xor
fucomip
test
adc
mov
ja
add
mov
test
out
cld
dec
push
push
pop
int3
sub
es
int3
int
ret
xchg
lods
jmp
pop
mov
push
mov
test
inc
add
dec
loop
rclb
push
iret
sbb
imull
bound
call
mov
dec
push
cmp
aad
je
out
dec
dec
xchg
repnz
scas
add
jns
mov
jecxz
cmc
iret
cmp
jno
mov
mov
adc
arpl
loop
out
and
push
bound
xchg
int
leave
pop
sbb
or
aaa
nop
gs
es
andl
fwait
mov
sahf
pop
shr
jl
outsb
cwtl
jecxz
mov
add
sbb
inc
iret
jge
adc
cmc
push
dec
cmp
push
push
icebp
mov
andl
shrl
negb
sahf
std
sub
cmc
xchg
imul
xchg
xor
cs
push
movsl
nop
sbb
insb
loopne
addr16
dec
js
sarb
int3
ja
pop
and
outsb
mov
mov
rcll
popa
es
cmc
or
adc
popf
jnp
or
daa
repz
aaa
into
insl
data16
leave
push
popa
dec
lahf
or
shll
adc
inc
je
pop
divl
popf
jne
das
pushf
or
js
pop
out
daa
loope
xchg
in
dec
mov
rcr
xor
jle
mov
and
in
jecxz
aaa
inc
and
pop
mov
cmp
xor
mov
mov
testb
dec
push
out
into
aam
repz
mov
push
jbe
jge
in
sbb
rcrl
stos
xor
cltd
out
int3
jo
fs
repz
neg
icebp
scas
pop
dec
addr16
mov
arpl
in
movsl
mov
inc
add
mov
call
or
xchg
mov
jle
lea
xor
jb
mov
pusha
mov
adc
xchg
inc
xchg
push
mov
cmp
dec
pop
lea
loope
fldcw
or
and
push
shrl
into
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
cmp
ja
mov
incl
pop
add
add
add
pop
push
outsl
add
add
ljmp
test
add
add
add
divb
add
or
add
inc
stos
add
inc
add
sbb
sbb
sbb
sbb
sbb
add
sbb
pop
add
test
add
add
arpl
add
add
outsl
outsb
push
or
cld
push
xor
roll
clc
or
push
in
test
mov
push
cmpps
addb
adc
movl
daa
incl
or
in
in
push
lea
mov
ret
lea
rcll
inc
sbb
add
decl
incl
inc
shrb
adc
sub
popl
pushl
push
push
test
incl
jmp
lcall
je
push
cmpsl
rclb
cld
call
incl
shrb
inc
loopne
add
dec
data16
stc
mov
repz
aaa
jne
add
adc
add
adc
add
rolb
add
add
add
add
add
add
add
data16
lock
add
add
add
add
imul
sbb
fs
insl
add
dec
insl
push
je
add
outsb
inc
in
fs
add
add
add
add
movsb
je
jbe
insb
ja
add
js
jne
popa
jne
gs
jae
fsubs
push
imul
gs
add
add
add
dec
add
xchg
add
fadds
add
ret
dec
xor
sub
mov
loop
add
mov
push
sbb
mov
or
mov
xchg
fdivp
stos
and
xchg
loopne
clc
cmpsb
dec
lret
enter
sbb
cltd
or
je
add
mov
test
sub
xchg
lret
mulps
pop
ret
pop
add
mov
pop
subl
ljmp
pop
jno
imul
fsubrl
mov
sub
daa
js
lret
pop
mov
add
cmc
dec
mov
push
data16
or
dec
in
and
mov
fsubrs
pop
mov
inc
pushf
in
sub
mov
cmp
pop
fistl
ficoml
push
aad
mov
in
bound
dec
ds
aas
lret
out
icebp
addr16
in
hlt
jns
es
mov
cltd
jb
or
dec
mov
frstor
pop
sbb
cmp
shl
pop
pushl
jle
jecxz
lods
daa
in
aaa
insl
sbb
leave
clc
iret
xor
sub
jl
mov
or
lret
xlat
xchg
sbbl
sbbb
in
fsubs
scas
sahf
push
aas
push
pop
push
in
cmp
or
xor
lds
mov
pop
xor
stos
xchg
cmp
or
pop
or
adcl
pop
insb
call
sbbb
push
scas
outsb
pop
mov
mov
xchg
dec
es
mov
dec
dec
mov
lret
pop
jecxz
and
xlat
push
jno
mov
cltd
adc
xchg
hlt
jne
jp
dec
ja
sbb
fdivrl
cmp
icebp
push
addr16
push
jbe
jmp
test
decb
lods
push
mov
clc
mov
scas
push
xor
adc
addr16
nop
or
push
int
ret
mov
test
rcll
test
aam
mov
roll
loope
nop
sarb
mov
jae
out
push
pusha
xor
addr16
lea
adc
mov
and
pop
push
push
xchg
mov
rcll
js
cmpl
shl
xchg
sub
add
cmpb
jmp
sarl
push
jbe
mov
stc
outsb
sbb
sub
lods
jp
mov
mov
jl
test
in
rorb
fs
mov
mov
addr16
cli
out
push
or
repz
sbb
mov
repz
lcall
outsl
xchg
pop
nop
lock
hlt
cmp
test
mov
jg
push
in
inc
loop
dec
imul
cmp
stos
filds
jo
cld
push
clc
sbb
mov
cmp
test
inc
mov
push
mov
pop
rorb
xor
adc
mov
enter
in
sbb
mov
push
hlt
xchg
sbbb
mov
in
pushf
jle
mov
adc
test
idivl
jle
xlat
mov
add
jl
sbb
xchg
adc
js
cltd
lods
or
andb
add
mov
ret
mov
cli
outsl
hlt
inc
ljmp
cmp
adc
xchg
jb
mov
jmp
test
cmp
sbb
inc
and
cltd
cmp
mov
mov
jge
fcoms
notb
inc
nop
mov
inc
mov
repz
xor
mov
xor
sbbl
pop
jnp
jl
pop
mov
lea
push
dec
and
pop
cmp
push
add
lock
lret
fwait
enter
mov
mov
jae
mov
cmp
dec
pop
mov
mov
add
add
and
je
adc
sbb
loope
test
mov
and
xor
cmpsl
mov
dec
cmp
mov
jg
and
xor
scas
lcall
andb
leave
scas
mov
aad
sub
adc
xlat
mov
pop
xor
aam
aam
pop
rclb
pop
or
mov
int
mov
cmp
std
rolb
jno
sbb
rclb
push
pop
mov
mov
adc
sbb
cwtl
mov
movsb
pop
roll
mov
dec
in
jo
icebp
pop
jnp
in
push
adc
dec
push
sbb
xchg
ret
jns
les
jmp
push
sbb
out
fsub
push
add
adc
pushf
hlt
ljmp
out
or
leave
cmpsb
xor
cmp
fwait
push
push
aas
addr16
movsb
incb
and
jb
sbb
pop
sbb
or
popf
jecxz
data16
pop
inc
dec
add
mov
xchg
lds
fcom
adc
in
loop
push
ss
sbb
cmp
push
jae
clc
fucomi
stos
jecxz
mov
and
lock
mov
cmp
out
dec
int
push
ds
pop
hlt
scas
in
xlat
cmp
jl
jne
addr16
sub
fstpl
add
movsl
add
sub
shll
adc
dec
adc
je
lods
lret
pop
adc
mov
jl
nop
pop
movsl
jge
cmpsl
stos
push
lea
adc
sub
cld
lock
bswap
jge
pop
repz
or
scas
push
adc
vpmullw
fcoml
fwait
les
nop
push
sbb
xor
imul
pop
fisubrl
inc
stos
ss
adc
sbb
fstl
mov
in
jnp
enter
push
inc
cmp
popf
inc
mov
add
lods
jle
push
mov
pop
xchg
or
dec
pop
pop
fsts
lcall
pop
mov
inc
xchg
mov
jle
mov
or
dec
jb
fisubrl
ret
mov
pusha
jns
pusha
sbb
pop
jge
dec
shrl
mov
and
in
popa
lret
pop
sti
lea
and
call
out
or
or
popa
fmuls
stc
pop
sub
pop
or
mov
sub
pop
xor
faddl
movsl
sahf
add
jb
loopne
imul
mov
hlt
sub
lahf
jns
fiadds
mov
add
lds
fsubs
cmp
sbb
sub
dec
ljmp
xor
xchg
jns
aaa
mov
into
xor
xchg
loop
ja
aam
lret
orb
push
mov
jnp
push
pop
gs
add
mov
sti
push
ja
xor
cltd
dec
jo,pt
inc
js
call
adc
mov
dec
and
cmp
sti
jp
push
in
xor
clc
les
iret
mov
jnp
in
or
add
pop
sbb
test
imul
aam
dec
add
jge
push
aad
xchg
adc
es
out
and
pop
dec
test
cmpsl
jp
jmp
adc
rolb
lret
pushf
pop
cmpsl
jl
push
dec
cmp
pop
in
scas
jne
pushf
xchg
inc
mov
add
loop
jle
shll
push
xor
testb
xchg
scas
pop
and
stos
or
js
orb
fldt
inc
sub
jo
notl
rol
ss
mov
xor
repz
mov
dec
cmc
pop
shlb
inc
push
inc
sbb
or
xchg
iret
cmp
mov
mul
bound
pop
stc
inc
popf
flds
pusha
pop
cs
ret
imul
lahf
cli
lds
cmp
movb
nop
iret
mov
pop
lods
int3
pop
das
ss
jbe
stos
jmp
fsubs
lcall
dec
scas
add
add
xor
mov
jmp
leave
test
or
mov
mov
sub
cltd
cmp
dec
aaa
fstpl
jecxz
hlt
xchg
sbb
add
dec
adc
jmp
lds
mov
ljmp
mov
aas
lods
pop
jl
daa
mov
out
neg
or
fcoms
adc
lahf
scas
lret
lahf
add
ja
mov
and
or
or
addl
push
cli
jp
pop
inc
sbb
mov
or
aam
inc
and
xor
jnp
xchg
and
insl
mov
add
dec
mov
fdivp
xorl
jecxz
cmovae
dec
cld
sub
mov
sarb
jge
in
or
andl
lods
sbb
dec
xchg
popf
jb
and
mov
popa
stc
jl
pushf
sbb
fs
push
lock
dec
js
and
aad
das
fcmovb
mov
adc
fisttpll
fldl
data16
scas
les
or
daa
and
and
sahf
or
fnstenv
dec
hlt
jnp
push
xor
xor
sub
sub
aaa
jne
lcall
mov
dec
adc
testb
data16
jmp
xlat
mov
push
pop
in
cltd
and
nop
xor
push
push
push
pushf
loopne
pop
dec
mov
je
or
pop
stos
pop
xor
sbb
in
movsl
sbb
cmpsl
insl
sbb
cmc
cmovle
add
movsb
xchg
inc
gs
lds
stc
insb
ret
xlat
ror
sbb
xor
and
cltd
loopne
repz
mov
faddl
fsubrs
sub
xor
and
int3
dec
sbb
outsl
pop
cmpsl
jge
dec
mov
ret
mov
xorb
in
loope
clc
div
movsb
jmp
adc
and
or
mov
xchg
or
mov
xor
push
out
ror
inc
out
or
mov
and
pop
inc
mov
inc
cwtl
jmp
lods
lods
push
js
cmp
or
enter
jecxz
js
or
push
dec
jge
ja
or
sub
test
mov
faddl
ja
pushf
jge
shll
add
dec
lahf
cmp
mov
lret
fstpl
or
mov
sbbl
or
mov
sbb
inc
ss
test
mov
cmp
icebp
insl
adc
out
or
mov
jle
int3
testb
loopne
cmpsb
mov
pop
das
cmp
inc
sbb
xchg
inc
stc
cmp
ficomps
cmp
cmp
adc
in
aaa
cmp
imul
nop
test
sbb
cmp
das
in
mov
mov
mov
fstl
leave
push
inc
in
scas
dec
aaa
pop
or
stos
mov
pop
lahf
nop
out
lods
sbb
int3
je
rolb
or
call
repnz
add
or
std
lock
or
popa
mov
cmp
cmp
leave
lock
push
mov
mov
pop
xchg
add
jne
out
xchg
hlt
pop
pop
add
mov
int3
fcoms
sbb
and
dec
sbb
dec
push
addl
xorl
push
xchg
popf
or
loopne
mov
or
bound
jno
xlat
sbb
loope
mov
int3
pop
mov
inc
fcoml
int
mov
push
inc
insb
insl
or
lcall
adc
imul
sbb
add
sbb
leave
ljmp
popf
enter
imul
mov
push
out
push
imul
lret
std
mov
mov
pushf
insl
adc
in
adc
movsl
xchg
pop
fs
roll
movsl
neg
movsl
dec
xchg
aad
pop
or
test
outsl
inc
daa
xchg
ret
push
jp
cltd
fisttpll
inc
in
dec
push
sub
xlat
pop
out
out
mov
mov
inc
sub
je
pop
pop
data16
push
lcall
inc
out
scas
pushf
popa
ficoms
xchg
sti
adc
pop
xchg
sub
push
sbb
cmp
and
std
sub
sbb
adc
lods
lahf
mov
das
pop
jne
insb
sub
loop
out
push
frstor
daa
mov
stc
out
or
mov
loop
sub
bound
push
idiv
inc
test
jl
cmp
xor
cmp
mov
mov
imul
je
pop
pop
adc
loopne
ficomps
dec
jg
pusha
sahf
inc
mov
mov
dec
or
stos
xchg
push
or
rsm
xor
and
js
xchg
jno
cmp
sub
scas
push
sub
ss
cmc
icebp
shll
xchg
idivl
cmp
lret
inc
jb
sbb
dec
lret
aaa
decb
int
pop
xor
pop
jns
addr16
jge
sbb
jecxz
mov
cli
sub
hlt
cmp
mov
mov
adc
xchg
rcr
adc
mov
filds
dec
sub
pop
adc
imul
push
pop
pop
jae
cmpl
aaa
and
mov
jg
push
jle
fisubs
in
rclb
pop
xchg
test
mov
cmp
add
popf
sarl
cli
es
inc
jbe
sub
xchg
jns
ljmp
sbb
and
push
int3
jp
jnp
out
insl
neg
pop
rolb
pushf
xchg
dec
ja
inc
sub
nop
jecxz
scas
or
and
orl
aad
adc
es
mov
lock
cmc
pop
nop
mov
adc
adc
fmull
ljmp
mov
inc
test
mov
sbb
cmpsb
cmp
scas
mov
sbb
adc
fsubr
add
jmp
je
push
sbb
lcall
mov
jne
add
in
xor
mov
daa
sub
gs
scas
jg
cmp
ds
shrd
push
mov
lds
add
push
fnsave
lock
lds
and
jns
inc
push
orl
adc
loope
xchg
jne
jle
inc
sub
aaa
sub
rol
and
shrl
jecxz
aad
mov
cmp
test
adc
rcl
dec
in
shrl
sti
or
add
hlt
lret
fcoml
mov
faddl
jno
iret
cltd
mov
xlat
xlat
cli
inc
pop
xchg
lret
cmp
or
or
cmp
push
jle
loopne
mov
imull
enter
sahf
imul
push
test
push
ret
in
adc
mov
mov
fiadds
ja
pop
loope
sub
cs
jle
dec
lods
jb
adc
jg
or
int
repnz
cmp
cmpsl
mov
ljmp
sti
sbbl
cmp
pop
adc
inc
ret
stos
pushl
xor
sbb
lds
mov
inc
sbb
adc
ret
pop
or
inc
push
or
mov
repz
ljmp
shrb
dec
outsl
or
movsl
es
jae
fidivrs
mov
es
into
and
mov
push
roll
mov
insl
cltd
loop
add
pop
dec
push
mov
call
xor
in
xor
pop
bound
pop
mov
into
aaa
mov
mov
daa
cmp
adc
vaddsd
adc
pop
jno
jge
mov
jae
add
pop
js
pop
outsl
fdiv
cmp
or
mull
push
aas
mov
pop
data16
jp
mov
imul
xlat
rdrand
jl
mov
ljmp
fsts
and
lahf
fs
pop
xor
inc
cmp
sub
test
and
loop
jb
test
adc
lahf
and
pop
mov
ret
ljmp
pop
aad
sub
inc
imul
lods
outsl
das
jg
cmp
movsl
jns
movsl
repz
data16
leave
out
dec
jg
daa
fnstenv
xor
in
adc
ds
sahf
in
adc
push
adc
inc
lock
mov
push
jle
repz
sbb
inc
sbb
lods
mov
jno
test
filds
xor
lret
negl
icebp
movsl
pop
dec
dec
xor
sub
mov
aad
cmp
loop
stos
cmpb
mov
xor
sbb
int3
pop
imul
daa
js
orl
mov
testb
aas
popf
lahf
jmp
cld
xor
sar
inc
pop
cli
inc
pop
xchg
sti
xchg
in
dec
add
mov
and
adc
loop
pusha
mov
dec
in
subb
jl
sub
mov
fidivs
adc
dec
push
aas
dec
sbb
out
mov
and
sbb
push
pushf
sub
inc
mov
ret
iret
dec
out
push
xchg
nop
pop
das
xchg
inc
stos
pop
cmp
fcomip
jns
xchg
mov
lods
inc
cmpsl
xor
sbb
sub
popf
cltd
sahf
or
lock
cld
jl
sub
mov
cli
imul
int3
push
dec
adcl
lods
cmp
pop
inc
int3
lods
inc
das
add
lock
std
mov
adc
leave
lcall
leave
jnp
xchg
pop
push
lock
lret
pushf
pop
leave
clc
icebp
xchg
jmp
ds
pop
xchg
imul
mov
int3
mov
xchg
or
mov
cmp
push
push
sbb
stos
loope
rolb
push
sahf
xchg
sbb
out
aas
inc
adc
dec
mov
jns
out
mov
sub
inc
addr16
mov
stc
lahf
jge
adc
cmp
adc
fisubs
and
mov
iret
fdivr
cld
mov
pusha
push
dec
das
nop
test
xchg
sub
adc
cwtl
dec
inc
inc
xchg
adc
jne
mov
jge
addr16
add
adc
into
xlat
ja
cmp
sub
adc
xor
xchg
mov
jl
and
je
adc
in
jmp
imul
out
loop
rcr
xchg
or
cmp
dec
xor
arpl
fldcw
dec
arpl
clc
std
jb
xchg
fmull
sbb
inc
xor
test
ret
add
fdiv
or
sahf
call
fcoms
rclb
cmpsl
xor
ljmp
sub
sahf
add
incb
xor
mov
and
push
jns
je
std
sbb
ret
push
imul
orb
xchg
fcomip
into
or
pop
adc
iret
popa
pop
mov
jge
sti
dec
and
dec
aas
shll
inc
jns
mov
xchg
sbb
test
xchg
pushf
xchg
mov
test
sbb
pop
stos
xlat
icebp
cmc
jg
dec
inc
add
add
add
sbb
add
add
test
add
add
add
dec
add
addb
add
add
add
add
add
add
add
add
xor
xor
xor
pop
add
add
add
add
add
fsubrl
mov
incl
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rcl
add
cld
aad
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
mov
add
test
add
jl
add
je
add
insb
add
fs
add
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
int3
add
loopne
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
xlat
add
js
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
xlat
add
cld
xlat
add
add
add
or
add
adc
add
sbb
add
and
add
aaa
fadds
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
fadds
add
add
push
fadds
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
flds
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
fiaddl
add
add
add
add
xor
add
sub
add
and
add
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
add
sbb
add
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
add
cmp
add
pusha
fildl
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
mov
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
sbb
add
sub
add
cmp
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
