jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
jae
sub
xchg
subl
loopne
out
pop
push
add
or
add
push
add
lds
add
popa
add
add
add
rolb
add
add
inc
add
add
push
add
add
popa
add
add
add
add
add
add
testb
add
add
add
add
and
fwait
add
add
add
add
add
add
add
popa
add
pop
add
add
add
add
add
add
add
add
incb
pop
add
add
add
add
add
add
pop
add
add
dec
add
cmp
sbb
popa
add
add
mov
add
cmp
sub
or
popa
add
xchg
add
add
add
add
add
add
incb
xor
mov
add
cmp
cmp
add
pop
add
add
fwait
add
dec
add
sub
adc
popa
add
mov
add
add
aad
pop
add
popa
add
add
jmp
add
add
add
xor
cmc
add
add
add
popa
add
sub
push
add
jo
popa
add
sbb
lds
add
sub
popa
add
add
pop
add
add
add
pop
add
into
add
add
sub
fildl
imul
cmc
add
add
add
add
add
add
rolb
icebp
add
add
add
add
add
rolb
jmp
add
add
add
add
add
sbb
incb
nop
add
add
add
add
xor
cltd
add
add
add
add
lea
sbb
mov
lods
add
add
jno
jg
add
and
in
fwait
add
mov
add
add
aad
sub
sub
adc
bound
pop
add
add
push
add
add
lods
add
add
lldt
add
add
add
add
add
add
cmpsb
add
add
aaa
add
add
add
add
add
popa
add
add
add
add
add
add
add
aaa
add
popa
add
adc
roll
add
add
add
add
sub
popa
add
add
add
add
add
popa
add
add
mov
add
sub
loope
or
add
sub
popa
add
add
add
jl
jbe
push
add
fwait
add
mov
add
or
in
fwait
add
add
add
add
add
add
add
add
add
cmp
fwait
add
add
add
add
add
add
add
add
add
add
add
jo
fwait
add
add
add
add
add
add
mov
mov
flds
lods
add
add
sbb
add
add
popa
add
add
cmp
jl
add
dec
add
add
add
popa
add
pop
add
and
cmp
fwait
add
add
popl
loope
jae
add
jl
popa
add
add
sub
popa
add
add
add
lods
add
add
jae
jl
cmp
aad
sub
popa
add
add
add
add
add
add
adc
add
add
mov
add
add
add
add
in
sub
and
cmp
mov
add
fildl
es
jg
loope
jne
or
enter
jae
test
mov
dec
mov
jo
jmp
mov
xor
push
inc
popa
dec
nop
out
movsl
dec
and
ds
mov
cld
outsb
cltd
pop
adc
scas
pop
xor
imul
xchg
fiadds
decl
or
sahf
mov
pusha
mov
mov
gs
imul
rcll
cltd
leave
repnz
mov
push
jbe
push
fsub
sahf
sub
push
sub
les
xchg
jge
xor
push
jne
xchg
movb
jnp
sahf
loope
imul
jnp
fildll
sbb
mov
sub
cmp
lods
jg
in
insb
ljmp
imul
ja
xor
or
insb
pop
and
ffreep
stc
sub
cltd
pop
mov
es
cmpsb
adc
in
jp
loope
aad
or
stos
testb
jnp
xchg
shr
adc
addr16
inc
jecxz
jnp
test
pop
out
fdivs
dec
mov
push
mov
imul
stos
leave
inc
cmpb
mov
ljmp
mov
and
dec
and
cltd
mov
adc
adc
sub
mov
mov
sbbb
inc
repnz
inc
dec
xor
mov
add
sub
dec
jmp
and
jnp
cmpsl
add
rorb
inc
lods
sub
out
scas
ds
and
push
dec
gs
mov
jmp
lock
test
je
repz
push
or
jno
lock
fisttps
in
sbb
in
stos
ret
pusha
push
push
adc
jg
dec
les
xchg
lea
pop
mov
xor
scas
dec
add
jns
inc
xchg
inc
outsl
adc
fmuls
call
loopne
dec
pop
es
cwtl
lret
sti
test
lods
jns
pop
dec
int
rolb
insb
out
aas
add
jb
ljmp
mov
or
jae
adc
int
iret
rorb
sbb
rcl
fildl
lods
notl
push
mov
xchg
int3
mov
lock
rorb
cmpsb
mov
push
fs
in
dec
insl
aas
sbb
out
or
push
lods
or
in
imulb
lcall
in
push
push
movsl
cli
push
pop
aaa
sub
insl
or
xor
sti
xchg
cmp
gs
jle
lock
in
add
aas
fistpl
data16
test
addb
bnd
inc
mov
ja
ds
pop
in
cltd
popf
es
repz
in
xchg
add
int3
jecxz
dec
jno
pop
loope
mov
sub
loopne
cmp
dec
add
aam
stos
arpl
loop
std
lock
js
push
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
nop
push
addl
mov
insl
rcrl
and
jecxz
xor
and
push
nop
inc
mov
mov
fbstp
pusha
rcll
ret
adc
xor
push
adc
add
push
lock
adc
inc
xorb
mov
and
js
or
cmp
and
pop
mov
cmp
xor
daa
ret
std
sbb
xor
fadd
shrl
enter
xor
push
push
fnstcw
jg
xor
xor
pusha
inc
repz
outsb
das
ja
mov
fistps
lods
lock
fidivs
pushf
pop
insl
int3
sub
inc
mov
sbb
sarb
rolb
shlb
and
inc
xor
pop
in
push
jmp
push
dec
xor
ret
adc
jecxz
adc
add
mov
lods
inc
add
insb
aad
mov
das
rorb
js
push
aas
xor
pop
push
xchg
inc
nop
mov
outsl
and
mov
pop
ljmp
jo
mov
xlat
pop
fidivrs
pusha
cmpsb
enter
mov
mov
add
xor
aad
cltd
fadds
adc
sbb
arpl
adc
lods
popa
xchg
adc
inc
test
cmc
sub
int3
fidivrs
out
roll
adc
adc
movsl
xor
sub
sbb
and
call
inc
rclb
and
repz
and
rolb
shlb
and
push
nop
inc
xorb
mov
mov
mov
add
xor
and
rolb
shlb
and
push
nop
inc
xorb
mov
jno
arpl
fwait
scas
in
jp
jo
lea
sbb
sti
fldenv
dec
mov
xchg
imul
repnz
std
rorb
cmp
or
push
in
clc
xlat
push
out
jp
sbb
or
cmp
jmp
pop
int
fwait
jmp
int
mov
adc
fwait
rcrl
dec
pop
xchg
insl
inc
ds
das
fwait
rep
cltd
cld
mov
mov
imul
pop
jnp
add
mov
xorl
cld
mov
adc
aas
fcoml
jbe
roll
jge
cmc
subb
sub
and
mov
jae
dec
je
loop
sub
rcl
or
ret
mov
sub
and
lret
mov
mov
and
inc
repz
daa
imulb
js
dec
dec
and
mov
inc
mov
cmp
dec
std
lods
out
xor
lret
test
cs
outsl
aam
dec
push
test
mov
pop
icebp
popa
mov
outsb
jmp
lahf
pusha
xchg
pop
loope
fadd
mov
scas
mov
mov
movsb
imul
and
outsl
push
add
adcb
jb
aas
in
cs
mull
add
pusha
ret
orl
addr16
sub
loop
insb
add
or
cmp
jo
daa
dec
or
xchg
cmp
push
add
mov
sti
xlat
jg
mov
push
mov
and
adc
adc
sbb
lret
out
stc
fwait
insb
inc
push
imul
adc
sub
or
jno
iret
jmp
xchg
xor
shlb
xor
or
cmp
add
mov
push
push
pop
xor
repnz
jmp
mov
cltd
cltd
jg
enter
inc
jbe
xchg
mov
jp
inc
mov
das
xor
rcl
leave
std
jae
lret
add
push
fiadds
jnp
sub
mov
cmpsb
jno
push
std
insl
stc
sbb
arpl
add
lcall
insb
push
push
imulb
call
mov
pop
js
pop
fsubrs
stc
push
in
lds
push
inc
mov
in
movsb
mov
lods
cmp
add
movsl
mov
sahf
repnz
ret
stos
movsl
mov
jecxz
scas
inc
jnp
out
test
pushf
in
cmp
dec
jne
cmp
imul
jecxz
push
push
enter
data16
adc
scas
icebp
cltd
and
xor
xorl
xchg
sub
test
pop
loop
adc
and
dec
lret
jge
pop
notl
hlt
fsubs
dec
dec
xor
mov
xchg
xor
pop
or
cs
aam
and
int3
in
jns
xor
lea
push
mov
btcl
cld
jle
hlt
add
imul
jmp
pop
or
pop
stos
fwait
js
mov
push
push
outsl
mov
lock
inc
inc
lret
push
jae
out
cmpsl
lcall
hlt
mov
pop
xchg
mov
in
adc
jb
leave
mov
test
popa
stos
and
or
pop
sub
adc
push
or
pushf
mov
cltd
mov
in
rorl
pop
imul
mov
lahf
adc
repz
push
mov
pop
sub
mov
mov
ds
adc
cwtl
aam
dec
add
pop
pop
adc
in
popl
subb
jmp
adc
push
ljmp
out
or
loop
fs
xchg
lret
xor
xchg
mov
fimuls
lret
jnp
xchg
leave
fcomps
out
lahf
push
pop
or
cmp
jns
dec
inc
inc
jno
jge
sbb
push
pop
js
cli
in
repnz
cmp
pop
jne
cmp
mov
shl
gs
es
dec
or
fstpt
inc
mov
jl
sub
jg
lock
jno
mov
or
enter
and
xlat
xlat
ret
ffreep
addr16
push
aas
adc
mov
sti
clc
lcall
repnz
push
lret
lret
xor
lods
enter
or
and
rorl
mov
mov
xchg
in
in
shrl
mov
mov
and
test
pop
ret
ficomps
dec
and
add
pop
mov
jne
push
out
mov
push
pop
or
xor
push
dec
cmp
pushf
xor
fmuls
push
fimull
outsb
cli
addr16
push
pop
gs
add
adc
rcrb
sbb
mov
push
scas
int3
test
mov
mov
pop
mov
sbb
mov
mov
gs
cmpsb
arpl
mov
mov
sbb
ror
jbe
rcrl
cmp
ds
cmpsl
mov
push
push
push
lds
je
cli
ds
xchg
xor
rcll
lahf
pmaxub
mov
adc
in
loopne
out
and
cmp
movsl
out
iret
and
notb
dec
jl
add
out
icebp
dec
daa
push
push
adc
add
and
pop
add
daa
pop
sahf
jg
into
sub
xlat
dec
push
push
xlat
jns
les
dec
xchg
stos
ret
aaa
push
outsl
lret
ss
ss
cmp
xor
dec
les
jecxz
inc
lret
popf
pop
daa
jle
add
andl
mov
sub
cmpsl
mov
fstl
or
lcall
mov
dec
add
inc
clc
dec
test
sub
mov
xlat
jae
jnp
movsl
cmovbe
aas
test
sbb
push
cmp
arpl
aad
out
mov
mov
or
ret
xor
int
mov
cmp
call
add
cmpsl
adc
mov
sub
push
cmpxchg
lcall
stos
push
dec
mov
les
sub
test
pop
outsl
or
jne
push
add
stos
jno
cltd
ror
call
jae
scas
insl
mov
inc
arpl
jmp
mov
test
outsl
push
or
pop
xchg
jmp
adc
inc
sub
or
mov
adc
pop
add
xchg
dec
mov
xchg
pop
pop
imul
aam
iret
mov
add
or
and
mov
xchg
out
shrb
add
jecxz
fcomps
loop
dec
popl
jp
stc
enter
push
mov
inc
xchg
sub
out
ja
mov
jo
enter
aas
jecxz
inc
cmp
fidivrl
outsb
ret
lret
rorl
dec
inc
gs
faddp
aas
std
xchg
sub
aad
mov
out
movsl
mov
sub
popa
cmp
pop
loopne
loope
push
and
mov
sbb
xchg
sub
xor
insb
mov
mov
aas
or
adc
adc
sub
push
test
jecxz
leave
sti
rcll
aad
adc
adc
test
mov
hlt
jg
cltd
scas
or
pusha
sub
xor
inc
cmp
ret
pop
sbb
hlt
mov
popa
or
sub
inc
sbb
and
mov
das
jp
inc
mov
dec
pop
dec
mov
dec
daa
or
dec
sub
xchg
inc
push
jns
aam
inc
lahf
jne
lods
ss
sarl
cmp
sbb
xchg
js
adc
imul
jns
jo
cli
das
or
push
dec
sub
jns
cwtl
add
pop
inc
ljmp
xchg
lcall
add
pop
push
push
xchg
insl
xchg
fistpl
inc
push
adc
mov
jge
ds
je
pop
fcomps
adc
jns
aad
sti
xorl
or
lods
fisubrs
push
ret
leave
lret
cld
icebp
idivl
sbb
test
inc
adc
pop
add
and
and
pop
pop
push
push
and
sbb
xchg
je
addr16
and
inc
pop
sbb
jbe
scas
xchg
negl
push
insb
sbb
mov
clc
sub
rorl
int3
jae
push
pop
lret
cmp
mov
lret
add
std
lcall
xchg
add
inc
xchg
scas
ljmp
iret
push
test
cmpsl
in
outsb
mov
add
stos
xchg
mov
push
adc
inc
pop
dec
out
cmp
leave
mov
add
lods
cltd
outsl
pop
pop
jne
ret
addr16
loopne
lret
in
insb
movsb
out
push
lahf
xchg
sahf
mov
xchg
call
ja
jb
mov
mov
mov
sub
push
insl
xchg
xor
xor
and
push
mov
mov
dec
aas
xorb
mov
xchg
mov
xor
or
cltd
lret
stos
mov
cmc
or
psadbw
xchg
loop
fmull
cmp
or
jae
inc
mov
xor
hlt
cli
stc
or
mov
sub
popa
mov
add
out
mov
xchg
fimuls
mov
push
imul
or
loopne
insb
sbb
cmp
cltd
shlb
imul
not
je
iret
subl
ja
lahf
daa
cmp
pushf
xchg
imul
mov
xchg
pop
test
dec
mov
pop
mov
jns
in
ret
adc
cld
push
xchg
aam
push
cmp
sti
je
add
push
push
sub
adc
jp
stos
xlat
and
dec
and
test
aas
in
mov
stc
pop
fsubr
add
mov
mov
daa
std
or
mov
sbb
xchg
jmp
aas
push
push
or
sub
mov
xchg
gs
in
inc
inc
lock
stc
loopne
jge
insl
push
jge
jge
enter
test
fisttpl
xor
sub
mov
xchg
pop
call
add
jecxz
or
jnp
daa
xor
pop
int
jb
fildl
test
enter
test
jbe
in
orl
ret
pop
movsl
add
arpl
add
jg
xor
xchg
out
movsl
dec
gs
aaa
adc
and
int
xchg
sti
xchg
lea
out
mov
daa
cmp
xchg
adc
adc
pop
cwtl
jmp
jl
xchg
hlt
in
fsubl
lahf
jne
out
push
mov
inc
adcb
test
stos
in
popa
loop
add
fld
adc
ss
cmpsl
repnz
fisubl
dec
mov
mulb
cli
fbstp
dec
cmpsb
scas
test
jae
push
sbb
ret
mov
ficoml
insb
and
js
sbb
pop
ljmp
mov
or
mov
lret
push
adc
arpl
push
mov
out
lods
divb
popf
mov
pop
popa
mov
adc
xchg
mov
mov
int
fstps
mov
mov
mov
add
adc
ds
int
lock
rolb
pop
push
movsl
or
lret
mov
cmp
xor
xchg
ficomps
or
std
adc
sahf
jl
loop
xor
js
daa
cmp
add
into
gs
jo
lock
dec
jae
mov
mov
mov
push
xchg
mov
lret
jne
xor
pop
lods
enter
rolb
dec
test
or
adc
pusha
repnz
push
xor
clc
sub
mov
sub
repz
pop
mov
add
std
mov
popa
mov
mov
cld
std
out
gs
sti
add
xor
sub
sarb
dec
sub
je
dec
int3
cmp
insb
cltd
imul
xchg
stos
lds
aaa
xchg
xor
int
sbb
clc
or
push
xchg
fidivrl
jp
push
inc
nop
inc
xor
mov
jge
sbb
mov
mov
dec
jbe
aas
scas
pop
lahf
mov
das
lret
sbb
add
les
jecxz
jp
pop
insl
and
push
pop
push
cwtl
insb
mov
popf
pextrw
xor
cmp
out
test
adc
sahf
jecxz
fwait
cmp
mov
inc
adc
jmp
pop
mov
out
int
jge
hlt
imul
jno
ljmp
das
jg
out
and
addr16
mov
mov
sbb
push
add
mov
ljmp
dec
xor
or
push
movsl
xchg
sbb
sub
fadds
ficoms
daa
lahf
sub
je
popl
lods
mov
jae
adc
loop,pt
fsubrp
jp
mov
jbe
xchg
jno
cld
int
sub
push
pop
or
inc
push
sbb
mov
mov
pop
test
popa
pop
pop
or
cmp
add
dec
stos
cmp
fwait
aas
fstl
and
mov
ljmp
testb
cmpsb
out
jl
jno
jno
sbb
outsl
insb
cmc
inc
inc
mov
mov
cmc
into
pop
data16
into
xor
pop
fiaddl
jns
mov
icebp
or
dec
mov
xchg
test
jmp
xor
mov
in
mov
pop
mov
inc
jmp
frstor
pop
aam
jbe
fcmovbe
sub
or
adc
push
arpl
dec
mov
dec
pop
out
pop
xchg
sbb
mov
pop
js
int3
aam
mov
pushl
jb
ja
inc
in
mov
repnz
inc
movsl
mov
orl
les
or
jle
and
sbb
cmc
sbb
xor
ss
xor
push
fsubrs
xor
or
outsb
int3
les
dec
or
mov
jp
or
pop
cmpsl
imul
inc
fistl
out
xor
xor
outsb
clc
mov
shrl
xchg
dec
jnp
push
jecxz
jne
mov
lods
jle
jnp
mov
mov
and
mov
ror
xor
or
cwtl
lock
push
add
pop
mov
sbb
push
loope
fisubrl
es
cmpb
push
stc
les
bound
adc
mov
sub
ja
imul
cld
pop
int3
ss
adc
loopne
xchg
inc
neg
mov
sar
cli
dec
jbe
add
clc
push
pushf
cmc
test
pop
mov
repnz
mov
cmpsl
pushf
orl
les
sbb
repnz
cmpsl
cmp
popf
inc
rol
aad
rclb
int3
stc
dec
es
push
sub
sub
sbb
sub
dec
loopne
sub
or
movsl
add
and
mov
pop
stos
repz
and
les
cmp
mov
fcmove
jmp
jbe
push
shrl
sub
mov
das
adc
push
test
add
icebp
adc
fwait
pushf
mov
jl
sahf
jo
hlt
shll
mov
cltd
mov
jns
int
into
or
loop
xchg
stc
loop
xlat
and
push
cmp
and
xlat
ja
mov
jge
mov
pop
daa
lahf
jo
enter
fdivrs
jg
iret
jbe
stc
cmp
push
loopne
and
popa
push
or
imul
arpl
sub
pop
push
adc
lock
or
jno
fcoms
imul
dec
es
lds
lret
testl
imul
clc
add
dec
lret
fsubrs
int
pop
scas
je
mov
pushfw
gs
arpl
movsl
adc
sub
repnz
imul
int3
jmp
stc
shr
into
test
jae
ret
roll
cmc
scas
jle
fwait
xor
in
sbb
scas
notl
dec
in
pop
ja
ja
dec
xor
cltd
ret
stos
ja
adc
inc
sbb
jecxz
xchg
xchg
stos
test
push
add
sbb
adc
mov
subl
and
pop
dec
xchg
in
iret
push
into
add
es
lret
roll
xor
in
outsb
ret
out
sub
bound
bound
popa
mov
and
lds
dec
loopne
loopne
xchg
push
inc
xchg
xchg
mov
xor
jno
lods
mov
test
inc
dec
mov
int3
jg
jae
addl
cmpsl
and
xchg
push
loopne
mov
lret
ret
popa
and
incb
or
mov
imul
push
xlat
ds
outsl
jg
frstor
std
mov
cltd
mov
lahf
and
jp
pop
inc
aad
xchg
mov
sbb
and
test
mov
faddl
pop
insl
dec
push
lahf
pop
sbbl
fsubrs
adc
jns
and
roll
lret
stos
jmp
add
daa
push
push
pop
fistl
imul
popf
add
add
decb
xchg
icebp
decl
pop
lahf
je
sbb
mov
mov
pop
sub
inc
mov
movsb
dec
xchg
or
es
es
jb
push
shl
pop
pop
xchg
xchg
or
orps
lock
test
orl
mov
cmp
mov
jnp
fistpll
test
imul
fs
in
xchg
outsl
mov
roll
mov
mov
dec
push
pop
arpl
xor
sub
dec
or
les
dec
inc
sbb
jl
in
xor
xlat
rcrb
repz
in
mov
mov
xchg
sub
and
pop
jo
xchg
adc
inc
out
mov
or
pop
or
jno
mov
jle
xchg
adc
cmp
outsl
cld
cli
mov
push
add
jnp
pop
fs
add
and
push
sub
cltd
xor
insb
inc
xchg
js
add
ret
push
sti
jbe
dec
cs
sti
scas
push
lret
inc
jmp
jb
data16
xchg
iret
dec
mov
mov
cltd
cmc
push
hlt
cmp
das
dec
push
xchg
mov
ret
dec
enter
nop
mov
data16
mov
or
out
dec
cltd
adc
jmp
jo
scas
push
dec
inc
js
or
push
out
pop
gs
mov
fs
mov
movsl
push
push
add
out
cmp
mov
cs
rcll
cltd
shlb
ja
ja
mov
xchg
fiadds
dec
out
fwait
icebp
addl
outsb
pop
iret
jno
and
sub
dec
out
jbe
pop
mov
fildll
xchg
rcr
rcr
push
push
dec
push
cmovne
rcll
std
lcall
mov
aam
jmp
andb
pop
rcl
or
data16
push
outsb
mov
mov
cmpsl
inc
jge
popa
imul
rorb
sbb
xor
jle
xchg
js
out
push
mov
movsl
lcall
lea
mov
das
cmc
popf
rclb
aaa
push
rclb
sub
push
xchg
jmp
cld
lock
and
mov
mov
jmp
jmp
in
mov
sbb
leave
test
xchg
jbe
sbb
std
push
mov
lds
cmp
mov
sbb
add
scas
bound
fcoml
in
xlat
les
sbb
rcr
cmp
out
lahf
lds
sbb
fistpll
mov
jno
bound
mov
add
rcrl
sub
mov
sbb
cs
and
shrb
dec
scas
leave
inc
test
call
ret
es
push
cs
std
cmp
inc
inc
cld
mov
or
push
leave
outsb
push
lcall
pusha
pop
cmp
mov
andl
mov
inc
ljmp
xchg
xchg
adc
jle
cmp
xor
ja
pop
cltd
fimuls
cmp
pop
cli
add
repz
push
adc
lea
jmp
fistpl
test
mov
push
inc
add
inc
xor
ret
imul
fisttpl
jmp
sub
iret
inc
icebp
mov
addl
xlat
mov
stos
daa
push
lock
out
data16
jecxz
add
cmp
nop
inc
test
sub
sub
push
cld
mov
mov
mov
lods
mov
ljmp
dec
in
aad
ljmp
dec
stc
pop
sub
loopne
es
mov
fistps
pop
inc
ljmp
sub
je
fsubr
andb
arpl
xchg
inc
cmp
inc
xor
js
std
es
cmpsb
outsl
push
mov
enter
jbe
sbb
out
inc
repnz
nop
dec
or
and
dec
inc
cmp
mov
out
es
mov
mov
sub
mov
fst
or
movsb
mov
call
fisubl
inc
add
test
imul
xchg
lea
push
scas
loop
clc
shll
push
inc
js
mov
sar
lea
test
xchg
jecxz
in
mov
inc
into
loop
aas
aad
dec
mov
and
push
insb
jnp
rorb
mov
test
insl
test
add
mov
xlat
dec
es
jmp
aaa
cmpsb
loop
into
in
xorl
add
xchg
adc
push
not
push
jmp
cli
mov
pop
sub
fs
mov
add
notl
mov
out
in
add
nop
insl
jg
filds
or
cli
jl
dec
xchg
add
sub
or
sbb
sbb
stos
ficompl
testb
or
xchg
mov
jo
pusha
rcll
ret
add
xor
and
rolb
shlb
and
push
nop
inc
xorb
mov
mov
mov
add
xor
and
rolb
shlb
and
push
nop
inc
xorb
mov
shll
pusha
inc
adc
add
xor
and
rolb
rol
and
push
nop
push
xorb
movsb
xchg
jmp
adc
add
xor
adc
cld
push
lock
mov
pushf
fildll
pushf
fldenv
rorl
sub
cmp
pop
insb
sub
or
jmp
pushf
fldlg2
test
fcompl
or
sbb
lods
sub
dec
pop
sbb
pushf
fldlg2
test
fcompl
pusha
sub
adc
jnp
sbb
jmp
lock
push
and
dec
div
jno
sbb
fsubrl
out
cmp
in
aaa
jns
scas
arpl
adc
cld
inc
xor
mov
aam
pop
jge
sbb
dec
cld
mov
jmp
ds
push
sub
push
movsb
cmp
add
sub
pop
nop
lods
cld
mov
fxch
test
mov
mov
mov
or
imulb
push
or
dec
arpl
mov
cld
lods
dec
pushf
cltd
sbb
xchg
push
mov
add
negb
push
jg
push
dec
scas
pop
and
fmull
xor
cld
fdivrl
sbb
jns
pop
xor
cmp
icebp
decb
sbb
mov
fldlg2
test
fcompl
or
sbb
insb
sub
or
xchg
stc
in
cmc
mov
lds
leave
sub
pop
or
insl
dec
jl
das
or
pop
leave
jmp
lock
in
loope
fnsave
insl
or
sub
insl
dec
adc
insb
sub
mov
lock
int3
mov
cltd
sub
cmp
or
sbb
insb
sub
or
jmp
pushf
fldlg2
test
fcompl
or
sbb
insb
sub
or
jmp
mov
adc
push
xchg
pop
repnz
lods
mov
sahf
xchg
das
or
mov
adc
jmp
rcrl
stos
or
and
aam
push
lock
out
fwait
js
sahf
add
in
test
cmc
dec
jmp
adc
sub
dec
mov
fists
scas
scas
inc
sub
xchg
int
lea
xchg
xor
jnp
mov
sbb
scas
adc
imul
lahf
popa
push
into
bound
mov
and
or
incl
dec
in
enter
pusha
sub
fldenv
test
in
pop
mov
inc
cmp
mov
add
loop
xchg
dec
pop
adc
fnop
ret
inc
sub
push
sbb
mov
imul
test
fidivrs
mov
inc
pusha
mov
popa
scas
inc
inc
es
jno
outsl
aas
out
frstor
imul
lret
or
xorw
inc
mov
or
jle
fnstsw
test
jg
mov
mov
push
sub
in
je
in
fdivrl
inc
loope
push
inc
daa
cmp
sahf
push
test
mov
lret
cmp
push
ss
lcall
mov
dec
test
mov
or
rcll
movsb
xchg
iret
cmp
jmp
pusha
test
sub
aad
push
clc
daa
sbb
pop
cs
aad
sub
lods
lock
jmp
cmpl
or
add
xchg
jl
adc
aad
gs
xor
sarl
sub
push
jmp
push
push
lret
xor
addb
pop
imul
adc
mov
rcrl
insl
in
sbb
lea
rcrb
faddl
popa
iret
or
imul
add
sbb
cmp
mov
push
outsb
out
add
dec
xor
cli
iret
mov
mov
dec
mov
sarb
in
in
shl
shl
cmp
loop
mov
pop
cmp
test
push
mov
clts
add
aad
scas
jge
lea
fsubs
lea
int
aad
push
lock
push
out
or
maxps
stos
into
mov
insl
lock
jecxz
loope
hlt
xchg
loop
les
jb
sub
sbb
fisttps
pusha
imul
push
xchg
sahf
xchg
leave
lds
mov
mov
jnp
cmp
outsl
fs
adc
sbb
sahf
xchg
shrl
xchg
loop
inc
dec
inc
clc
out
pop
pop
in
into
sub
jbe
mov
movsb
xchg
add
loope
mov
cmpsl
jne
arpl
cmc
cmpsl
pop
in
std
std
sbb
outsl
sbb
cmp
adc
mov
stos
jmp
pop
movsl
leave
ljmp
repz
mov
pop
cltd
aad
cmp
stos
mov
sar
xlat
call
nop
aaa
data16
shr
pop
pop
inc
addr16
jle
sub
rcll
push
iret
adc
bound
lret
fwait
rcr
adc
push
int3
add
lret
mov
clc
adc
or
jmp
jns
dec
paddb
loope
icebp
loop
mov
ds
adc
push
add
aam
pop
pop
jno
daa
test
pop
jg
aam
push
mov
sub
rcrl
mov
xchg
inc
mov
lahf
inc
pop
push
notl
cmpsl
pop
or
cmp
mov
test
fdivrl
bnd
mov
jnp
int
mov
aad
fistpl
sbb
lcall
movsl
inc
jns
xor
mov
inc
push
xchg
push
push
push
push
mov
sar
jns
mov
fdivrl
jge
aaa
cmpsl
fnstsw
push
xchg
dec
ret
sub
loop
xchg
rdtsc
imul
push
ds
ss
pushf
mov
xor
fisubrs
repnz
xchg
sub
or
lret
and
nop
push
jg
sub
je
mov
fldcw
in
leave
ja
fwait
cs
jnp
mov
jo
sub
and
outsl
int
mov
scas
out
fwait
push
leave
adc
loop
sub
lahf
adc
dec
test
or
and
fidivs
pop
dec
xor
loopne
ja
loopne
jbe
cmp
cmp
adc
test
enter
mov
arpl
sbb
mov
jnp
sbb
jp
xchg
cmpsb
cmp
and
in
repnz
sbb
fs
xchg
xor
mov
xor
cwtl
sub
loop
in
into
mov
es
push
sahf
or
cwtl
jo
fstl
jge
scas
jmp
movsl
xchg
mov
out
push
jmp
lds
imul
push
sbb
mov
inc
jno
dec
xchg
pop
mov
pop
xor
fldl
or
idivb
sub
stos
sarb
push
sub
inc
jns
jno
push
jp
push
arpl
ret
gs
push
les
dec
loopne
sbb
lea
jp
in
cwtl
jno
fs
jmp
cmc
lret
xlat
pop
sbb
pop
lahf
int3
lret
xchg
xchg
das
por
loopne
jmp
ja
xor
mov
in
iret
imul
daa
or
inc
and
mov
xchg
mov
push
aaa
pop
add
jno
inc
stos
push
ja
loope
fstp
cld
fcomp
inc
dec
jo
imul
push
addb
add
into
add
jg
int
lret
pop
and
jb
dec
cld
or
xor
xchg
adc
in
sbb
popa
push
pushl
ret
cmpsb
push
aad
adc
sub
mov
sbb
pushf
dec
mov
adc
sahf
movsb
stc
push
leave
jp
cmc
loopne
lahf
mov
inc
loop
test
push
mov
dec
sbb
je
idivb
and
mov
add
cs
ret
and
and
xchg
inc
xchg
mov
int3
and
add
jo
xchg
push
je
jl
data16
scas
or
and
loope
mov
stos
xorb
xchg
dec
xchg
bnd
mov
cs
sbb
imul
fimull
fsub
jb
jno
imul
xor
insb
je
sbb
sahf
orl
fbld
add
mov
stos
pop
sbb
fnstsw
fstl
pop
jae
and
shll
jecxz
addr16
pop
inc
add
icebp
ret
or
lret
data16
sahf
das
push
inc
mov
int
cmp
jnp
and
lock
cli
push
out
jnp
lea
xorl
jecxz
movsl
cld
mov
sub
je
push
sub
xchg
aaa
pop
push
xchg
cmpsb
dec
and
mulb
pop
inc
aaa
xor
pop
cmc
jle
out
test
inc
add
mov
and
les
sub
jae
movsl
rorl
out
sub
int
mov
std
lea
jle
mov
cmp
cmp
inc
out
mov
inc
lahf
lods
xchg
sbb
sub
sub
push
adc
mov
subl
xor
out
dec
lahf
cs
mov
sub
inc
xor
leave
dec
inc
add
std
int3
fsubrl
pushf
adc
aad
idivl
mov
ljmp
hlt
fcmovnu
mov
or
inc
push
mov
adc
aaa
stc
fs
sti
and
mov
out
bound
lcall
mov
jp
dec
into
mov
sti
mov
insl
mov
pop
cmpsb
movsb
cmc
mov
cltd
inc
ret
sub
bound
or
daa
test
push
orl
mov
ret
push
fdivl
pop
fisubl
lds
cmp
push
popf
xor
push
mov
jge
mov
xor
dec
test
aas
or
push
xchg
or
popf
imul
push
mov
xchg
xor
cwtl
and
dec
lds
jl
stos
mov
ljmp
in
xor
push
aaa
sub
filds
add
or
pop
sbb
jge
cmp
pop
ret
movsb
xchg
cltd
sub
push
aad
test
jmp
enter
or
inc
cmp
rorb
pop
aad
push
adc
iret
shlb
fwait
sbb
add
and
ljmp
iret
inc
sahf
mov
lcall
das
std
mov
popa
dec
cmp
daa
in
loopne
xor
or
fwait
js
or
fisubrl
xchg
mov
shl
scas
push
nop
in
lcall
push
test
add
cltd
inc
les
jae
pop
xchg
mov
out
cmp
xor
lods
pop
jbe
xchg
xor
leave
mov
loopne
mov
shlb
lods
adc
jnp
call
xor
xorb
or
pop
add
sahf
adc
out
clc
cmpsl
sub
adc
sub
stos
sarb
mov
jbe
shll
sub
fldl
jnp
dec
mov
mov
xor
sub
cmp
sbb
push
outsb
xor
ja
push
shlb
sahf
cmp
sub
lods
jecxz
not
mov
adc
xchg
jmp
dec
push
xlat
dec
fnstenv
dec
cmpsb
sub
jnp
stos
mov
stos
xchg
dec
cmpsl
xchg
cmpsl
leave
pop
sub
push
repz
repz
out
sbb
pop
push
in
jbe
adc
negl
or
mov
xor
cmp
cmp
fs
inc
jbe
mov
and
test
out
popa
sub
sbb
ds
arpl
loopne
insb
call
lock
ret
cld
orb
js
or
cmpsl
push
movb
shrl
jmp
inc
rcll
sub
add
aas
movsb
in
std
notb
mov
mov
ret
jbe
aaa
aad
aas
mov
loop
in
out
cmpsb
or
fists
and
xor
push
push
cmp
push
cmpsb
pop
xchg
xor
cmp
scas
enter
in
pop
mov
xor
call
mov
clc
mov
jo
repz
inc
popa
mov
hlt
arpl
add
pusha
sti
pop
inc
ficoml
movsl
inc
push
add
shl
inc
push
mov
movsb
jns
inc
adc
outsb
neg
pop
int3
dec
xchg
cmp
stos
or
js
sbb
es
xchg
in
push
in
xor
and
fcoms
inc
dec
pop
mov
stos
mov
mov
shlb
pop
or
mov
push
add
pop
or
jmp
add
jmp
mov
push
and
mov
jne
sbb
jmp
fadd
and
inc
ljmp
ljmp
or
scas
jne
cmp
scas
mov
mov
popf
test
inc
xchg
sub
int3
lret
cmc
or
or
mov
data16
or
pop
sub
stos
adc
rcll
cmpsb
adc
cmp
stc
mov
stc
mov
sub
fcmovnb
mov
push
mov
mov
icebp
inc
lods
pop
or
push
ja
mov
xchg
fimuls
jb
loop
je
fistl
sbb
imul
addr16
aas
lahf
jmp
sbb
sbb
ja
sub
push
dec
call
outsb
mov
push
and
addr16
mov
xchg
loopne
cltd
mov
xchg
jne
dec
fisubrs
pop
inc
loopne
outsl
scas
push
and
and
mov
sti
iret
and
lret
aad
out
and
add
cmp
int3
or
mov
adc
lea
mov
lret
and
dec
xchg
mov
in
push
iret
jmp
jecxz
std
xchg
js
outsb
scas
push
dec
loop
test
xchg
or
lea
lahf
incb
inc
push
mov
lret
cli
mov
hlt
cmp
and
inc
leave
stos
rcrl
and
arpl
cwtl
push
cmp
lret
in
dec
jle
add
pusha
inc
insl
mov
adc
jge
fdivrl
or
cmc
dec
push
loope
jbe
xchg
das
pop
fildl
push
mov
insl
or
xorl
jnp
int
pop
insl
int
xchg
sahf
scas
pusha
cmp
dec
repnz
inc
lods
xor
cmp
rclb
cmp
cmp
adc
div
insl
push
sbb
dec
adc
sbb
and
shl
cmp
mov
jg
push
nop
adc
shrb
movl
imul
and
push
ds
sar
pop
cmp
aam
fcmovu
stc
aas
push
push
shlb
mov
xor
addb
or
clc
jp
lahf
mov
jae
arpl
popa
push
jbe
cld
push
dec
mov
js
mov
dec
int
mov
add
xchg
pop
icebp
jmp
aas
sub
and
inc
jl
fimuls
data16
lods
push
adc
shlb
inc
and
shr
ljmp
adc
jnp
xlat
sarl
dec
adc
inc
pop
fwait
and
lods
sub
adc
mov
xchg
pop
in
push
loope
clc
pop
sub
mov
insb
lret
mov
jns
xor
enter
insb
cmp
cs
mov
shr
dec
outsl
fucomp
push
repnz
cmpsl
dec
outsl
pop
repz
inc
popf
dec
sub
in
hlt
fst
leave
ret
rclb
push
cmpsl
pop
aaa
mov
jl
cmp
jnp
lret
cltd
add
mov
cltd
xchg
scas
scas
leave
adc
cmp
daa
jp
fs
fldt
mov
add
pop
mov
sti
jle
outsb
add
addl
adc
imul
dec
test
dec
ficoms
push
mov
cmp
jge
xchg
cmp
cmpsl
jb
fwait
popf
ror
or
mov
jae
jecxz
jno
pop
xchg
push
es
jl
push
enter
xchg
dec
test
loope
mov
in
mov
xor
sahf
cmpsb
cltd
test
push
inc
lods
and
pop
xchg
jb
lds
sbb
das
lret
xlat
shl
aas
push
push
jp
and
daa
or
dec
mov
and
scas
popf
add
pop
sti
adc
jns
cli
decb
data16
jnp
fdivrl
lds
adc
sub
imul
sti
arpl
sub
mov
xor
js
inc
stc
into
mov
fstl
notl
aaa
and
adc
clc
xor
xorl
je
mov
ficompl
sub
push
insl
and
pop
adc
enter
pop
sbb
out
les
xchg
shl
pop
sbbb
or
sub
pushf
sub
jl
test
push
call
filds
sarl
or
jne
hlt
fcmove
sub
jbe
outsl
loop
je
imulb
cmp
fidivs
xor
mov
dec
mov
mov
in
aaa
test
data16
jae
push
xor
mov
xchg
stos
cld
je
pushf
shlb
mov
out
ljmp
adc
pop
and
xchg
dec
pop
and
pushf
add
cmpsl
daa
inc
dec
ds
pushf
push
add
cltd
sbb
sti
icebp
xchg
lds
pop
mov
stos
icebp
pop
stos
sahf
lret
stos
sub
jle
push
fsubs
pop
jecxz
hlt
inc
test
push
lahf
and
loope
push
iret
stos
hlt
xchg
jg
cmp
fwait
sbb
jp
lods
lret
cld
pusha
cmp
icebp
clc
sub
jno
outsb
pop
testl
inc
outsb
stos
daa
pop
sbb
pop
mov
mov
jl
mov
xchg
inc
fnstenv
in
imul
mov
xor
pop
lret
in
and
lods
cmp
pop
mov
add
push
pop
jbe
aaa
imul
pop
mov
xlat
cld
jle
cmpsb
in
and
loope
popf
lods
mov
sbb
out
fdivl
cmp
out
and
leave
adc
xlat
add
mov
sub
das
add
push
cmp
xor
popa
jp
les
push
push
movl
clc
or
loope
mov
adcl
mov
jno
push
pop
fldt
mov
lods
jl
mov
mov
into
xor
inc
dec
into
loope
imul
push
fwait
or
hlt
dec
mov
arpl
loope
add
push
cltd
imul
out
inc
sbb
fwait
adc
push
stos
fisubrl
out
leave
dec
aas
xchg
and
es
and
push
xchg
mov
mov
sbb
jge
aad
popf
adc
jmp
mov
adc
insl
cld
inc
fimull
mov
mov
xchg
data16
lock
pusha
and
in
cmc
inc
fisubs
jg
int3
data16
cmp
ss
xorb
add
dec
rcrb
or
dec
adc
aaa
enter
out
in
jle
inc
inc
mov
mov
push
or
scas
sub
xor
hlt
pop
push
rolb
in
cmpl
idivl
push
popa
push
sbb
pushf
sub
jmp
adc
pop
and
sub
js
xchg
or
mov
push
pop
push
inc
sub
jns
jecxz
pop
inc
xchg
inc
jge
or
mov
mov
sbb
cs
mov
std
fcoms
xchg
mov
mov
mov
std
or
jb
and
and
sub
daa
jne
xor
lds
cmp
jae
jb
ret
cmp
insl
jmp
cmpsl
scas
sbb
fistl
es
iret
aaa
out
ret
js
sbb
push
scas
hlt
in
hlt
or
dec
lock
pop
ret
hlt
iret
cmp
mov
negl
jp
pop
test
jnp
inc
insl
push
cmpl
dec
fisubrl
or
out
fwait
and
cmp
andb
cmp
sbb
mov
stos
and
dec
cltd
sbb
pop
es
out
into
popl
cmp
xor
or
xor
jl
repnz
sbb
cmpsl
pop
jb
add
js
xor
pop
mov
cltd
sahf
sbb
cld
jne
fimull
xorl
clc
push
repz
fldt
inc
in
arpl
ret
aas
aas
pop
sub
mov
clc
push
xor
ret
pop
add
shlb
pop
ret
mov
xor
jo
xor
test
xchg
pop
push
pop
sbb
ja
push
out
cld
das
lret
rcrl
scas
pop
arpl
push
shlb
pushf
arpl
push
pop
jo
rcrl
mov
push
mov
mov
push
sbb
loopne
clc
aaa
sbb
cmpsl
jno
jno
mov
mov
mov
sahf
or
xor
lcall
cmpsb
mov
incb
dec
scas
test
xchg
jns
pop
lock
repnz
cmp
xchg
inc
mov
mov
xchg
rcrb
das
int3
mov
scas
pop
data16
arpl
inc
dec
mov
ret
jns
scas
push
and
and
sti
cmpsl
negb
sahf
das
shll
push
dec
jmp
push
comiss
push
or
adc
andb
in
loop
mov
mov
pop
mov
out
arpl
test
mov
adc
jp
jmp
cmp
and
mov
pushw
xchg
fs
dec
jge
jns
fcomps
je
mov
dec
iret
jnp
xchg
xor
jle
and
sbb
lcall
je
loop
in
push
arpl
mov
pushf
mov
sub
scas
std
mov
lock
aam
jl
inc
cmp
inc
and
mov
popa
xchg
fdivrl
or
sbb
out
cwtd
push
mov
inc
push
pop
lret
mul
in
or
lret
or
xor
push
or
pop
sbb
and
data16
outsl
dec
push
cmp
lods
in
inc
test
push
cmp
jns
add
xor
loopne
sbb
in
popa
jecxz
shrb
jp
data16
fists
dec
dec
mov
movsl
xlat
adc
xchg
out
cld
aaa
or
pop
je
adc
or
arpl
sub
rolb
sbb
push
push
imul
hlt
dec
ret
aad
or
hlt
dec
jle
pusha
sub
fisubs
lcall
or
loopne
jo
push
lods
inc
ljmp
nop
insl
rclb
fdivrl
test
dec
ret
cwtl
mov
movsl
addl
or
outsl
jl
cmp
out
in
pop
popa
repz
test
jle
adc
and
leave
ffree
dec
inc
xchg
loope
adc
adc
lret
loope
or
inc
push
cld
shll
jecxz
rcll
mov
pop
imul
or
mov
mov
cmp
dec
fs
sbb
or
sbb
outsb
cmpsl
cmpb
cmp
and
dec
adc
and
or
xor
lods
aam
aas
cmpb
jl
jns
adc
movsl
out
ficompl
scas
scas
sbb
jle
add
leave
pushf
fldlg2
test
fcompl
or
sbb
insb
sub
or
jmp
pushf
fldlg2
test
fcompl
or
sbb
insb
sub
or
jmp
pushf
fldcw
cmp
mov
jmp
sbb
insb
sub
or
jmp
pushf
fldlg2
test
fcompl
cmpsb
dec
sbb
sbb
or
cmp
sub
push
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
push
jp
dec
jl
insb
and
pop
sub
clc
lret
in
stos
popf
mov
lods
push
jp
dec
jl
insb
sub
or
cmp
dec
ljmp
in
stos
stc
mov
lods
push
jp
dec
jl
insb
sub
or
cmp
sub
out
mov
fcmove
ror
fpatan
fistpl
adc
cmp
das
xor
and
aas
xchg
sub
pop
shll
shlb
stc
bound
push
mov
cmpsl
loope
or
xor
int3
ja
xor
and
xlat
faddl
std
xchg
dec
adc
push
call
out
push
fsubr
int
cli
pop
adc
xor
pop
mov
cmp
lds
xor
int3
sbb
ja
sub
and
insb
jb
adc
andl
imulb
sub
and
flds
push
in
cli
iret
cmp
add
movsl
add
xchg
fdivrl
adc
jmp
push
test
jl
insb
sub
or
cmp
sub
fdivr
int3
lret
in
stos
pushf
mov
ljmp
sbb
dec
pop
push
js
pop
sahf
pop
lcall
pushf
sub
sti
lret
out
into
ljmp
xor
cmovg
dec
dec
imul
mov
fidivrl
jecxz
lock
or
sbb
adc
cmp
cmp
sub
fdivr
int3
lret
in
stos
pushf
mov
lods
push
jp
dec
jl
insb
sub
or
cmp
sub
fdivr
int3
lret
in
stos
pushf
mov
lods
push
sbb
and
mov
rclb
cltd
fstl
adc
mov
pop
adc
std
outsl
test
insl
dec
xchg
jmp
testl
sub
xchg
ljmp
gs
in
das
movsl
test
dec
sub
into
dec
push
jle
stos
or
push
jmp
negl
repnz
cs
push
pop
push
adc
cmpsl
movsb
outsl
inc
jecxz
mov
add
je,pt
pop
adc
jle
in
or
cwtl
test
mov
or
lock
mov
pusha
outsl
lret
fisubl
push
mov
and
sbb
rcrl
mov
mov
daa
sub
leave
xchg
or
into
or
leave
push
lret
mov
xchg
xlat
push
ja
nop
jl
ret
int
jne
xchg
insl
mov
aas
sbb
je
xchg
shrb
inc
mov
movups
ja
mov
test
jb
mov
jle
add
cmp
cmp
jecxz
dec
push
sub
out
push
mov
sbb
test
adcl
fisubl
xchg
xor
mov
and
cld
test
jae
loop
push
mov
leave
fs
xchg
cwtl
push
in
inc
mov
sub
es
out
aaa
movsl
out
popa
ds
pop
aam
xchg
jnp
mov
sub
lret
inc
stos
popa
add
xchg
push
aaa
divl
xchg
and
jmp
cmp
cmpsl
jmp
add
out
out
lret
mov
jnp
mov
jg
loop
loopne
xchg
sbb
lock
fstl
xchg
dec
sub
pop
jmp
fists
sub
push
jo
call
in
or
xor
gs
xchg
stos
shll
rolb
scas
cmpsb
and
jae
dec
adcl
inc
dec
lock
xchg
dec
loope
pop
iret
fucompp
stos
mov
jmp
lds
pop
jns
es
xchg
pop
xor
add
inc
movsb
pushf
pusha
dec
jb
pop
sarb
dec
insb
leave
fwait
pusha
aam
jg
nop
dec
pop
popa
pushf
push
xchg
xor
jbe
loop
testl
faddl
push
sahf
aad
adc
frstor
jne
lahf
xchg
sub
cmp
mov
jge
outsl
pop
fsubr
mov
adc
addb
jmp
xor
fdivrl
cmp
xchg
pop
mov
cmp
ret
out
push
cwtl
fcmovnbe
std
xchg
and
aam
idivl
aas
jne
adc
aam
xor
inc
sub
cmp
cmp
scas
es
mov
cltd
jp
inc
sahf
jb
lret
xor
cld
mov
mov
lcall
inc
push
loope
mov
leave
and
jno
jecxz
or
xor
ret
bound
lret
stos
mov
enter
mov
je
lods
pop
call
pop
fwait
bnd
jnp
mov
pop
int3
scas
jle
adc
add
js
pop
loop
mov
and
add
clc
lds
leave
jle
fmulp
jecxz
or
stos
hlt
mov
lods
leave
jp
lahf
pop
adc
jnp
jo
mov
out
push
or
out
mov
fbstp
int3
mov
sbb
inc
out
lahf
jno
push
out
test
es
jmp
xchg
enter
xchg
mov
mov
mov
pushf
mov
fwait
mov
mov
dec
mov
jmp
in
retw
sbb
aam
inc
repz
jle
and
daa
add
xlat
popa
es
popf
mov
inc
stos
and
ret
outsl
jp
pop
fldcw
dec
inc
out
pop
xchg
cmp
jl
mov
cmp
js
xchg
pop
call
dec
mov
push
cs
mov
inc
sub
jbe
mov
cld
or
bound
out
cli
test
add
dec
cmp
mov
clc
aad
xchg
jecxz
sub
movsl
mov
sbb
xchg
jg,pn
filds
insb
sub
push
popa
xlat
mov
out
push
enter
fwait
dec
inc
ret
imul
call
shl
je
lret
popf
enter
jno
cmovb
out
jbe
cmpb
in
ret
add
imulb
pop
fucomp
inc
lea
xchg
test
test
cs
or
dec
xchg
cmp
or
int
cmp
clc
data16
mov
push
mov
mov
mov
sbbl
shll
push
inc
outsb
sbb
mov
cltd
imul
or
push
test
stos
fs
rcr
push
push
mulb
mov
insb
insl
xchg
cmp
pushf
xlat
push
pusha
push
mov
push
stos
adc
mov
gs
adc
jae
xchg
mov
pop
aam
mov
jnp
push
xchg
mov
xchg
outsb
aad
addr16
and
iret
inc
das
xchg
push
bound
mov
cwtl
add
ja
imul
jge
jno
add
repz
mov
test
pop
mov
mov
xchg
jbe
nop
test
movsb
cmc
jmp
pop
xor
cs
in
int
pop
xchg
mov
jge
popf
loope
push
dec
scas
adc
jne
movsl
fildll
fsubl
dec
ret
cmp
fiadds
cs
lcall
push
sub
jmp
cmp
daa
cs
lcall
addr16
in
repnz
mov
test
ss
sbbb
inc
lds
imul
les
adc
inc
lock
lods
test
cmp
lea
pop
and
insb
mov
mov
sarb
test
mov
roll
mov
push
mov
mov
sbbl
push
test
adcl
mov
cmpl
dec
jbe
sti
mov
xchg
pop
sbb
cmp
loopne
sub
push
sub
cmpsb
test
pop
jecxz
aad
xor
xor
cmpsb
mov
in
cmp
lret
jle
ficoml
mov
hlt
inc
fmull
sahf
mov
inc
jno
in
pushf
int
mov
call
lock
pop
jae
loope
and
cmc
cmpsb
loop
movsl
lea
ret
sub
test
add
jne
lahf
pusha
or
push
mov
sbbb
pop
sbb
mov
int3
addr16
fistps
sub
mov
stos
inc
lret
mov
sub
bound
mov
xchg
cs
loope
and
push
es
fisubrl
aas
pop
jg
xchg
jno
aam
movsl
push
repz
and
push
cmp
mov
faddl
fisubl
hlt
push
xor
lret
and
inc
fnstenv
scas
shrl
pop
xor
cmp
mov
pop
inc
pop
jl
ja
shlb
jns
xor
es
mov
enter
fdiv
pusha
out
sti
mov
add
jecxz
jg
imul
cmc
test
inc
add
mov
out
xchg
outsb
pop
mov
loopne
pop
shll
lret
out
rorl
pop
jb
and
cwtl
push
outsl
cmp
int3
xor
cmc
add
movsb
outsb
or
test
sbb
pop
movsb
bound
enter
ret
jge
pop
mov
pop
lret
andl
dec
hlt
jl
jnp
pusha
mov
xchg
inc
or
fcoms
push
sub
and
loope
push
insb
in
pop
les
out
mov
insl
or
cmp
call
stos
lahf
cld
add
lahf
clc
cmp
scas
push
adc
adc
ret
push
adc
adc
stos
inc
stos
pop
push
stc
push
lcall
cmc
pushl
cmp
jnp
jb
fsts
mov
aas
in
cmpsl
mov
sbb
or
sub
or
cmc
je
mov
cld
out
xchg
or
inc
rorl
jo
mov
pop
sbb
add
rorb
in
popf
inc
inc
clc
mov
xlat
cmp
add
jecxz
jp
mov
pop
vprotb
stos
mov
adc
jecxz
mov
sub
xor
loopne
push
or
fiaddl
rcrb
jmp
lea
cmp
mov
hlt
movsb
lds
testl
lcall
cmp
inc
aaa
out
cmp
orl
leave
and
test
xchg
mov
fbstp
jp
adc
outsl
mov
insl
idivb
in
hlt
mov
rorl
xchg
or
cli
jno
shll
and
jne
out
clc
jg
mov
mov
ljmp
out
push
cwtl
aam
mov
outsl
or
and
cmpsb
or
pop
into
xor
dec
xchg
loope
jp
mov
dec
lods
mov
aaa
in
pop
jne
aas
dec
fs
mov
rcrb
inc
mov
nop
fwait
mov
dec
lods
or
popa
dec
xor
dec
movsb
jle
adc
xor
add
mov
inc
inc
xchg
and
sahf
inc
jnp
pop
loope
push
xor
sbb
adc
pop
jns
xlat
cmpsb
inc
pop
sub
jecxz
roll
data16
push
test
or
add
push
enter
sbb
sbb
loopne
xor
xchg
push
push
add
fldenv
or
lods
cmpsb
nop
add
sbb
insb
push
sbb
sahf
pop
xor
xor
jle
pop
fisubrs
test
inc
inc
mov
cmp
fstl
enter
push
mov
testl
leave
inc
push
xchg
cmp
inc
add
mov
cld
jne
inc
adc
mov
adc
mov
push
dec
xchg
jno
loop
les
sbb
or
insl
hlt
mov
loop
lods
outsb
jmp
cmpsl
mov
out
cmp
cmpl
push
cmp
repz
xor
outsl
cmp
push
pop
repz
xchg
sbb
lahf
push
jne
mov
sarb
aam
mov
out
stos
mov
adc
pop
insb
sub
pop
outsb
shlb
add
fdivr
mov
mov
adc
pop
xchg
add
shrl
xchg
push
out
adc
out
pop
das
fsincos
xchg
int3
out
shrl
daa
xor
lods
jno
fsubl
ret
mov
or
mov
push
mov
sar
aaa
ljmp
lcall
xchg
jl
adc
mov
mov
leave
lcall
lea
cmp
add
lret
pop
jp
push
and
sbb
mov
lds
mov
dec
push
xchg
arpl
mov
loop
dec
js
mov
fidivrl
push
into
inc
shl
push
fcoms
int
orl
and
ljmp
push
daa
mov
pop
inc
push
adcl
stos
or
loopne
clflush
test
sub
pop
jg
dec
adc
mov
mov
pop
dec
mov
aaa
test
sti
mov
push
mov
adc
int
fistl
les
mov
test
out
loope
dec
xlat
push
adc
dec
xchg
sub
jo
outsl
jecxz
inc
or
int
mov
bound
dec
ret
add
repz
mov
scas
or
jle
push
pop
mov
mov
lock
push
pop
sbb
jno
pop
push
lahf
lods
jae
xchg
frstor
or
rcrb
push
mov
sub
dec
and
aam
pop
mov
pop
or
daa
jge
dec
inc
addr16
mov
or
gs
pop
addr16
dec
lods
dec
mov
aaa
or
sbb
movsb
mov
shrl
dec
fcmovnb
lea
inc
sub
xlat
sbb
xor
ljmp
ficompl
mov
pop
fwait
popf
out
pusha
add
push
into
outsb
add
test
xchg
jae
cmp
in
testl
test
lahf
int
lret
cmp
mov
jb
mov
fisubs
or
je
dec
and
cmc
sub
scas
mov
faddl
sub
fwait
out
xor
loop
adc
sbb
fstpt
mov
loopne
fmull
add
lret
js
cwtd
movsl
iret
xchg
out
out
movsl
dec
adc
movsl
aad
popf
dec
dec
fmull
push
cmp
rcr
pop
push
push
pop
adc
jb
jb
lea
xlat
xchg
cmpsb
ja
push
arpl
cmp
jno
rcrb
sub
daa
inc
xor
mov
lret
push
in
das
dec
mov
aaa
xchg
push
jg
xorl
jbe
mov
imul
push
cmpxchg
xchg
hlt
sbb
add
push
fimull
cmp
add
adc
pop
and
int
or
xchg
and
mov
sub
lahf
ret
je
xchg
jnp
xor
xor
inc
sahf
add
mov
adc
jno
mov
jo
inc
bswap
loop
inc
pop
stc
push
dec
leave
std
push
aaa
icebp
pop
inc
dec
ret
stos
mov
and
insl
pop
gs
daa
push
cli
cmp
cmc
lret
cmp
cltd
push
inc
dec
enter
movsl
and
push
push
cli
xchg
fildll
xor
add
and
decl
dec
add
and
mov
pushf
lods
decb
cld
mov
cltd
sub
xchg
pop
cmp
popa
pop
xchg
lret
pop
jno
jl
arpl
push
mov
jle
por
cmp
bound
shl
ljmp
inc
repz
fstpl
mov
mov
add
into
xlat
pop
xchg
cs
loop
mov
pop
mov
pop
hlt
popf
mov
add
insl
sub
fsub
shl
pusha
sbb
and
sub
outsb
repz
lret
xchg
sbb
mov
repnz
xchg
stc
cli
or
int3
pusha
shl
push
jae
cmp
lcall
sbb
ljmp
xchg
add
into
es
clc
popa
mov
filds
sub
sub
lahf
rol
jne
int3
mov
dec
inc
jge
lcall
jno
mov
stos
stc
push
cld
xorb
inc
adc
popf
scas
ret
xchg
mov
push
and
dec
pop
sub
ret
incl
insl
iret
dec
clc
jnp
jne
mov
adc
inc
stos
insb
mov
jno
lds
sub
outsl
out
ds
imul
test
ja
lock
sbb
inc
mov
loop
scas
mov
loopne
push
ss
or
das
inc
push
push
popa
std
scas
lcall
pop
jnp
outsb
add
adc
sub
lea
push
mov
push
mov
repnz
inc
sbb
jmp
testl
lock
adc
push
ja
sub
push
xor
lret
xchg
adc
push
addr16
mov
sti
loopne
jno
outsb
pop
add
pop
and
in
xor
mov
xchg
es
dec
mov
dec
mov
nop
fmuls
clc
inc
enter
ret
gs
jne
xor
stos
repnz
lret
mov
aas
lea
lds
sti
jae
sti
jno
push
enter
jo
dec
dec
mov
or
xchg
jecxz
popa
sub
test
add
int
lds
fildl
sub
pop
sarb
dec
dec
jp
sub
fdivp
jg
or
and
mov
ret
jb
or
add
mov
pop
sub
mov
cltd
cmp
in
and
add
xlat
movsb
out
mov
cmp
adc
xchg
push
and
getsec
mov
outsl
push
adc
jae
mov
xorl
xor
out
cmp
cltd
das
repz
mov
pop
andb
mov
data16
push
aas
gs
imul
ljmp
xchg
addr16
add
out
out
mov
cvtps2pd
outsb
adc
nop
pop
inc
cmpsl
enter
dec
movntps
pop
sarl
adc
jns
shl
add
outsl
add
bound
xor
stc
inc
rol
or
rorb
mov
mov
pop
repz
stos
jecxz
lahf
mov
lret
aas
pop
cmp
shll
cmp
jl
call
out
ret
or
test
decl
int3
out
xchg
cld
and
lods
aaa
or
lds
inc
cmp
xchg
pop
push
cltd
sub
cmp
xchg
mov
fisubrs
std
inc
shlb
out
pop
xchg
add
repz
push
mov
inc
pop
mov
xor
stos
shrb
adc
sbb
aas
lahf
cmpsl
cmc
ja
add
lahf
xchg
mov
jae
aam
fwait
decl
adc
mov
xor
pushf
subl
sbb
ret
inc
mov
and
xor
sub
hlt
jmp
sti
cmpsl
stos
out
clc
scas
je
mov
jbe
mov
sbb
aas
mov
pop
fwait
ret
shr
inc
and
mov
sar
cld
dec
mov
inc
sbb
pop
ds
jle
inc
mov
and
lea
push
inc
pop
sub
mov
sub
js
lahf
insl
dec
jns
dec
xchg
subl
pop
daa
mov
lahf
pop
jbe
dec
ficompl
or
xor
cmp
cmp
sbb
jg
test
mov
icebp
sti
enter
pop
divb
fwait
xor
push
in
and
cmp
or
inc
aam
je
insl
mov
rolb
mov
ja
adc
jb
xchg
jmp
sahf
jnp
les
pop
dec
stc
dec
xchg
sbb
jae
mov
test
mov
add
lea
movsl
mov
pop
xchg
repnz
fiaddl
mov
pop
or
inc
sbb
push
pusha
xor
xchg
icebp
arpl
or
lcall
mov
sub
inc
jno
inc
shll
sub
mov
or
mov
fwait
xchg
add
push
push
lcall
fldl
inc
xor
mov
outsb
into
sbb
push
lea
shl
xchg
stos
dec
mov
jle
rclb
sbbl
add
in
ja
subb
hlt
lds
stos
push
xchg
imul
push
sbb
inc
lea
dec
scas
es
adc
pop
inc
mov
dec
imul
jo
push
arpl
out
add
and
and
push
xor
adc
sub
jb
lcall
scas
addr16
push
push
jg
xchg
test
je
pop
test
mull
loopne
sbb
xor
roll
popa
inc
push
jle
lds
adc
mov
sub
into
mov
addb
ficoml
dec
sbb
ljmp
sahf
addr16
push
icebp
js
dec
test
xor
fstl
xchg
js
sbb
ljmp
xchg
xchg
ljmp
mov
dec
pop
testl
mov
sbb
sub
incb
cmp
outsl
adc
mov
les
mov
stos
push
iret
ss
sub
add
aam
in
jle
pop
lods
outsl
fisubs
xor
xchg
push
mov
inc
cmpsl
aad
imul
adc
xchg
mov
fmull
or
test
bound
inc
xor
mov
inc
cmp
jge
pop
jns
popf
pop
rorl
shlb
mov
mov
rclb
add
pushf
dec
cli
out
test
ret
stos
mov
es
sti
andb
lret
cmp
mov
pop
or
cs
jae
arpl
pop
mov
cmpsb
mov
or
out
out
movsl
es
jnp
pop
fsubr
fnsave
mov
cltd
xchg
push
jge
push
lret
push
ja
out
inc
stos
fimull
xchg
popa
not
iret
pusha
cmp
jbe
cltd
lcall
sbb
sbb
aas
xchg
xor
ror
mov
fcmovbe
arpl
imul
test
inc
sbb
pop
xchg
xlat
dec
pop
data16
xor
sbb
das
and
jmp
mov
inc
call
jge
rolb
cwtl
inc
xchg
outsb
movhps
adc
dec
iret
fsubrl
push
lcall
sbbl
inc
sub
in
and
jo
loope
cmp
stos
jmp
xchg
cmp
hlt
and
and
mov
dec
in
dec
pushf
imul
mov
or
test
pop
fs
pop
sti
sub
ficoms
push
sbb
jmp
sub
xchg
and
sbb
negl
lahf
xchg
xlat
mov
push
dec
sub
lods
jae
fcomip
mov
lods
pop
mov
cwtl
mov
mov
loop
cmp
jmp
imul
inc
in
bound
dec
mov
mov
push
mov
inc
jne
jbe
add
xor
scas
cmpsl
cmpl
mov
lea
push
sbb
pop
fsts
mov
cmp
mov
shrb
and
xor
sbb
xchg
pop
int3
imul
sbb
aaa
icebp
int3
stos
sbb
jl
ljmp
js
sub
inc
cmc
push
adc
jle
mov
mov
dec
mov
mov
sbb
jle
jns
jbe
pop
jecxz
stos
rcl
push
inc
adc
dec
jne
pop
insb
sub
or
cmp
sub
fdivr
int3
lret
in
stos
pushf
mov
lods
push
jp
dec
jl
insb
sub
or
cmp
sub
fdivr
int3
lret
in
stos
pushf
mov
lods
push
jp
dec
jl
insb
sub
or
cmp
sub
fdivr
int3
lret
in
stos
pushf
mov
lods
push
jp
dec
jl
insb
sub
or
cmp
in
adc
cld
ficompl
jb
bound
xchg
jo
mov
testl
inc
push
pop
je
je
test
mov
aam
in
hlt
notl
adc
and
cmp
inc
inc
fs
fs
popf
xchg
mov
int3
xlat
cld
out
negl
push
dec
aaa
inc
adc
and
xchg
jecxz
ret
ret
add
push
and
sbb
inc
lods
daa
insb
pusha
dec
inc
push
mov
imul
mov
dec
out
aas
aam
popa
jmp
incl
daa
lret
xchg
mov
push
fildl
nop
push
pop
outsl
loopne
jbe
jmp
sbb
mov
fs
je
test
xchg
insl
cmpsb
nop
mov
sbb
cmc
cmpsl
xor
add
fxch
enter
pop
out
cltd
je
aam
sbb
jno
dec
cmp
int3
sub
inc
rclb
and
push
adc
add
cmpsb
dec
ret
aam
sub
jb
clc
cltd
push
pop
and
mov
je
dec
xchg
mov
mov
negl
daa
sub
push
jle
je
call
loope
icebp
mov
mov
test
imul
dec
push
pop
inc
sub
cs
in
adc
cmc
cmpsl
loopne
mov
cmpsl
testl
jne
inc
sub
cmp
adc
sbb
xlat
clc
jecxz
rcr
ret
mov
hlt
testl
xor
inc
inc
push
push
fs
test
mov
aam
in
hlt
testl
xor
inc
inc
push
push
fs
test
data16
rcrb
jle
ss
outsb
jp
jmp
push
jp
mov
mov
jecxz
mov
addr16
pop
arpl
push
xchg
dec
sbb
vpshlq
xor
jg
je
sahf
in
aam
outsl
mov
repz
loope
shlb
inc
jecxz
out
bound
jle
dec
sbb
mov
mov
sub
jge
push
cmpsl
pusha
and
xchg
call
cmpsl
fbstp
cmp
xchg
lock
push
loop
shlb
and
push
stc
jmp
std
or
mov
nop
repz
imul
xchg
out
pop
bnd
mov
push
sahf
es
sbb
sbb
out
xchg
clc
sbb
push
dec
aad
mov
mov
rcrl
insb
xchg
fcomps
or
out
and
sarl
or
into
push
aam
cmp
fildll
add
mov
dec
push
mov
lahf
icebp
xchg
add
mov
ret
adcl
data16
in
jge
xchg
mov
dec
dec
in
cmpsl
mov
jae
je
mov
fs
aaa
in
sarl
sub
fisttpl
jp
inc
xchg
dec
push
sbb
or
and
std
mov
iret
adcb
and
jg
mov
pop
popa
dec
mov
aad
mull
loop
xchg
lock
xor
xchg
dec
push
out
lea
lds
test
jp
add
rcl
arpl
mov
fdivr
daa
or
dec
cmp
mov
cli
mov
jnp
cmp
or
lret
pop
sub
lahf
fmull
cltd
in
or
xchg
dec
in
add
and
fwait
dec
xchg
std
iret
js
fisttpll
xchg
dec
addb
jle
and
enter
xchg
lock
xor
inc
pop
ja
es
dec
dec
adc
and
sbb
fldz
iret
xchg
cli
ljmp
jge
pop
rolb
xor
sahf
cld
test
inc
mov
fdivl
sti
or
add
jecxz
dec
mov
inc
out
loop
popa
test
mov
sbb
imul
adc
shll
shr
fwait
std
adc
jl
xor
push
jne
cmp
outsb
fsubrs
or
fisttpll
scas
jg
stc
inc
pop
adc
pop
shrl
mov
fdivrs
sbb
jo
dec
jp
sbb
shll
inc
sub
adc
mov
pop
lds
fld
std
je
jge
out
scas
inc
jno
testl
dec
pop
dec
lret
mov
popa
add
call
js
xlat
fistps
mov
pop
sub
enter
daa
jbe
xchg
lret
mov
into
icebp
aam
pop
nopl
call
lods
or
into
ss
inc
les
jb
cmp
pop
jne
bound
in
lret
cs
push
imul
fistl
push
xchg
stos
rcrb
adc
add
jle
mov
sbb
dec
sub
xor
xor
xchg
adc
push
pop
mov
shll
inc
insl
mov
std
xchg
shll
ror
xor
repnz
mov
and
or
in
dec
mov
rcrl
push
fs
mov
arpl
int3
dec
jo
movsl
inc
out
push
call
adc
fwait
mov
add
push
rolb
pop
pop
fisubs
jns
bound
push
stos
dec
in
sub
test
inc
sbb
pop
pop
jne
push
int3
and
push
repnz
lcall
add
sub
inc
cmp
xchg
or
add
push
push
js
pop
test
inc
mov
outsb
jl
test
in
ja
sub
dec
aam
push
int
mov
imul
jns
cmp
xchg
sbb
nop
sub
scas
je
dec
pop
hlt
xchg
dec
push
int
jb
and
testb
rcl
ja
ja
jl
push
mov
repnz
push
and
loope
adc
js
and
sbb
out
mov
inc
mov
test
inc
push
pop
mov
cli
das
lret
fnstenv
aad
int
scas
mov
lds
leave
ret
xor
lahf
in
lock
lds
outsl
xchg
dec
or
pop
lret
inc
jnp
test
push
fs
mov
mov
jae
and
jne
into
mov
fwait
sahf
mov
add
jo
mov
dec
aas
int
xchg
sbb
out
les
cmpsb
cmp
or
inc
data16
xchg
stos
jns,pn
mov
outsl
stos
adc
and
gs
scas
fucomp
jle
jl
cmp
ja
mov
push
mov
sar
es
loop
pop
and
inc
pusha
nop
adc
loopne
sti
scas
data16
dec
cltd
inc
cwtl
and
movsl
mov
xchg
ret
imul
rcll
movups
mov
cmpsb
fwait
adc
ja
jle
jp
or
xor
mov
mov
mov
lods
rcll
pop
test
cmp
jae
xor
dec
dec
cwtl
sbb
rol
push
fstps
std
cmp
pop
xor
jb
inc
lds
fwait
nop
std
push
xlat
push
jmp
ret
add
mov
in
popf
xchg
pop
dec
loope
adc
jae
pusha
add
inc
jne
push
mov
xlat
xchg
xor
in
cmp
push
xor
subl
xchg
add
jp
je
inc
jle
mov
in
cltd
lock
xchg
jo
cmpsl
adc
mov
and
sub
jmp
fcoms
push
sbb
ficoms
sub
mov
aad
scas
dec
insl
push
movsb
dec
sub
dec
rep
lcall
lea
mov
bound
add
add
les
push
jle
dec
std
add
push
push
xchg
or
xchg
add
or
rcrl
aad
pop
push
or
ljmp
dec
daa
rcrb
sub
loopne
and
adc
ret
sub
ret
sbb
dec
dec
lds
mov
or
mov
test
repnz
lret
sar
jo
cmpsb
mov
lods
data16
es
mov
out
in
cmp
idivb
xchg
dec
movsb
inc
fs
cmpsb
mov
mov
jl
cmp
push
inc
mov
call
into
test
out
push
xchg
xor
jp
pop
mov
ja
push
lock
cmp
mov
aam
dec
je
mov
lock
stos
cmpl
bound
and
push
adc
push
dec
mov
dec
mov
into
ret
aad
cs
mov
xchg
cmpsb
dec
int
xor
dec
cwtl
adcl
cmp
bound
adc
xor
imul
in
fcmove
movsl
into
xchg
loope
inc
xchg
and
mov
dec
outsb
add
hlt
sub
mov
orb
jecxz
sub
std
pop
mov
push
addl
cmpsl
and
jl
mov
or
adc
add
aaa
dec
or
sbb
cmp
dec
inc
jno
std
insl
ret
shll
lcall
mov
pusha
out
lods
aad
shl
or
pusha
icebp
jns
inc
notb
outsl
dec
in
clc
gs
nop
or
fisubs
pusha
das
sbb
loopne
lock
movq
dec
sbb
test
push
xchg
sbbb
sub
add
rcrb
fs
xor
stc
pop
fcmovu
mov
xor
adc
adcl
cmp
adc
sbb
xor
popf
or
cs
inc
push
sub
mov
rorb
sahf
lahf
mov
push
cltd
adc
or
popa
mov
jg
enter
mov
inc
xor
das
movsb
xorb
dec
popa
ret
mov
clc
rorw
data16
mov
adc
nop
cli
or
pop
stos
sti
push
xor
rorl
mov
push
dec
out
test
mov
out
xorl
popf
subl
push
lahf
sti
and
mov
inc
sub
je
mov
add
sub
dec
arpl
test
imul
jo
mov
test
psllq
movsb
in
mov
xchg
sub
sub
insl
adc
pusha
push
and
pop
sub
xlat
lds
and
mov
mov
in
sub
iret
xchg
leave
inc
cltd
mov
push
mov
mov
in
pop
xchg
dec
sub
into
loop
dec
outsl
outsl
add
jno
xchg
pop
lea
mov
pop
movsl
out
data16
and
inc
sbb
aas
push
xchg
push
sahf
push
jns
lcall
loope
adc
out
adc
mov
fimull
imul
arpl
insb
xor
dec
pop
push
push
pop
push
inc
push
and
lods
jle
or
fcomi
pop
nop
or
mov
xor
xor
ja
inc
pop
add
cmp
imul
push
dec
xor
iret
arpl
or
jnp
jecxz
pop
flds
sbb
xor
xlat
aaa
lock
jecxz
xchg
lahf
adc
dec
fcomi
mov
daa
push
mov
fmull
cwtl
inc
orl
or
loop
sti
sti
outsb
mov
sbb
mov
cmp
jbe
aaa
xchg
jbe
js
mov
xor
loope
pop
push
ja
adc
pop
push
es
loopne
inc
dec
jg
mov
mov
pop
imul
adc
mull
or
mov
inc
in
mov
mov
clc
pop
ficomps
inc
gs
rorl
shll
je
add
icebp
test
loope
lods
imul
pop
mov
test
shlb
sbbb
cmc
sub
jle
sub
insb
mov
xchg
popa
test
mov
mov
test
insb
or
shl
repnz
arpl
es
xor
scas
jge
sub
mov
or
pop
aam
cmpsl
clc
cld
adc
std
push
push
mov
movsb
pusha
pop
mov
das
lea
std
mov
insb
pop
mov
or
mov
int
mov
mov
push
inc
add
lds
in
cmc
add
js
rcrl
das
popf
call
and
push
xchg
jg
call
inc
mov
adc
cmpsb
mov
mov
out
scas
mov
xor
rcll
cmp
or
add
xchg
insb
hlt
xchg
sub
jbe
cmp
or
testb
jl
out
jo
repnz
mov
mov
sub
pop
push
sbb
dec
push
xor
add
dec
adc
sub
in
test
test
rcr
xor
mov
dec
and
clc
pop
sar
out
mov
jbe
fdivrl
mov
jmp
es
dec
negb
repnz
sti
pop
dec
xchg
outsl
xor
sbb
mov
out
popa
mov
xlat
pop
orl
jno
cmpsb
loop
mov
pop
call
pop
outsb
sub
fildl
push
xchg
lock
add
push
enter
movsl
cmp
lret
shrb
mov
mov
jle
mov
aad
sbb
shll
cmpsb
push
lock
mov
ja
push
mov
fsts
dec
push
pusha
adc
jns
push
sub
dec
ret
insb
lcall
inc
je
jns
addr16
in
out
add
insb
xor
test
mov
imul
sub
sbb
lods
pop
pop
repz
xchg
hlt
adc
in
xchg
js
sbbl
sar
js
xor
jbe
push
dec
mov
push
pop
outsb
and
jnp
stos
mov
mov
stos
pop
push
call
sahf
lret
sahf
xchg
xor
jecxz
gs
and
mov
mov
dec
ds
scas
cltd
add
add
push
daa
aad
in
jno
scas
and
xchg
sbb
shll
aad
sti
jmp
mov
xchg
jle
cmp
adc
mov
mov
cmp
lods
les
fwait
mov
fsub
repnz
leave
imul
push
lcall
cmp
lods
adc
js
push
push
add
insb
jp
nop
push
dec
mov
imul
sbbl
pop
push
filds
add
fs
pop
inc
out
inc
pop
inc
idivb
lods
add
movsl
dec
add
ret
aas
rcrb
int
dec
sub
daa
inc
in
loopne
pop
out
addr16
mov
adc
mov
test
mov
dec
mov
ss
cmpsl
mov
and
jnp
xchg
cmp
cld
mov
jmp
sti
stos
xor
sbb
ret
arpl
cmc
xor
aad
test
mov
mov
pop
pop
pop
inc
xchg
stos
movsb
lret
sub
and
cltd
cwtl
sub
mov
hlt
loope
negl
ret
inc
push
popf
insl
jp
xor
and
notb
mov
loopne
push
mov
repz
out
insl
pavgb
pop
orl
cmp
cmp
fdiv
pop
jg
in
aam
insl
add
and
stc
sub
cwtl
sbb
push
fstps
jmp
pop
fnstcw
and
test
mov
dec
cmp
imul
inc
add
rclb
imul
iret
pop
lahf
push
add
lret
lea
mov
cs
jp
and
jecxz
andl
push
xor
sub
mov
dec
mov
xchg
enter
pusha
jnp
cmpsl
iret
or
sbb
cmc
pop
lea
pop
mov
icebp
pcmpgtb
repz
sti
repz
sub
adc
push
add
pushl
pop
insb
jb
mov
ret
adcl
sbb
mov
testb
xchg
jae
movsl
xor
daa
nop
hlt
inc
jns
xlat
xchg
inc
fidivl
xorl
cmp
negb
dec
sbb
notb
mov
das
add
xchg
and
leave
pop
mov
adc
movsb
inc
fcmovnu
jbe
jmp
pop
dec
xlat
adcl
sub
gs
in
fwait
inc
out
jp
mov
dec
popa
xchg
add
sub
jg
jne
into
gs
hlt
xor
call
sub
popf
sub
pop
popf
loope
pop
hlt
stos
mov
mov
mov
popa
and
inc
add
add
ret
insl
lcall
rcr
cmp
push
inc
xchg
inc
or
mov
sbb
movsb
loop
mov
adc
movsb
sbb
sub
imul
sub
ficoml
sti
fs
mov
fwait
push
je
push
adc
dec
dec
or
and
jp
mov
aam
xchg
xor
sub
sub
and
xor
fldt
inc
and
jl
popf
cmp
or
ss
or
fcoml
cmc
je
ret
cwtl
jge
andb
adc
scas
add
inc
dec
or
adc
loopne
addr16
bound
faddp
fiadds
scas
or
repnz
pop
in
cmp
pop
and
out
shr
xor
push
or
js
pop
test
jno
lcall
and
or
dec
xchg
inc
fidivl
push
mov
and
adc
lods
jnp
in
loop
ucomiss
inc
loope
and
loop
sbb
mov
jg
data16
scas
clc
pop
cmpsb
in
dec
outsl
jl
pop
and
fisubs
push
cvtdq2ps
mov
pushl
clc
aam
xchg
mov
and
pop
sub
add
inc
cmc
sub
inc
movsb
push
and
sbb
push
xchg
ficomps
rcrl
jle
mov
xchg
test
cmp
aas
push
shrl
dec
cmpb
pop
negl
inc
dec
movsl
jbe
xor
xor
push
outsb
mov
jb
sahf
pop
test
xchg
daa
sbb
xchg
jle
out
dec
push
and
cmp
add
test
pop
movsl
pop
xchg
nop
mov
jb
test
pop
cltd
dec
push
add
roll
jne
sbb
mov
mov
pusha
add
lock
dec
mov
sbb
mov
adc
inc
lcall
sbb
mov
cmp
mov
cmpl
mov
cld
sub
clc
mov
in
pop
and
dec
mov
scas
icebp
jle
and
nop
fisubl
rclb
mov
cwtl
xor
xchg
test
fdivs
jl
sbb
dec
or
xor
mov
test
or
ja
xor
xchg
in
pop
js
fs
insb
or
sub
rol
popf
push
into
mov
cmp
add
sbb
push
cmp
jbe
mov
inc
fstpt
and
cli
loope
lahf
subl
push
lds
mov
xor
mov
leave
std
nop
cmpsl
pop
jbe
imull
fcoml
mov
mov
or
int3
or
or
jmp
data16
push
xor
pop
aas
push
movsl
mov
jbe
push
rcr
pop
cmc
ja
push
jo
dec
pop
mov
jo
adc
adc
mov
aad
out
in
cmp
xchg
sti
scas
cmc
orl
stc
mov
xchg
out
int3
sub
scas
jecxz
mov
inc
xor
mov
lret
xchg
or
add
xor
aaa
nop
in
xchg
cmp
jo
sub
inc
jnp
rorb
jg
inc
mov
jnp
int
adc
jne
mov
cmpsb
mov
int3
enter
ljmp
xchg
ficomps
add
mov
mov
mov
jno
and
add
out
into
xchg
daa
fdivr
rolb
out
pop
dec
in
mov
daa
xor
test
out
mov
out
aas
or
push
push
lds
data16
inc
js
leave
push
stos
imul
movsl
cmpsl
mov
inc
pop
sbbb
push
dec
jne
push
sub
and
imul
filds
xchg
jmp
adc
xor
sub
sbb
adc
je
fdivrl
jg
cmp
pop
popa
mov
rcrl
les
push
and
sbb
sub
inc
xchg
jmp
mov
dec
nopl
push
cmc
xor
pop
stos
adc
imul
in
mov
dec
add
and
sbb
stc
rcrl
push
ret
dec
ss
sar
lahf
jno
or
into
mov
je
iret
cltd
push
ret
sti
mulb
cmp
scas
pushf
mov
push
cs
movsl
repnz
inc
lret
sti
hlt
pop
pop
sbb
pop
pop
sarb
inc
jmp
mov
lds
test
or
rcll
out
cmp
js
enter
mov
outsl
pop
pop
in
mov
mov
cmp
push
sahf
dec
in
insb
xchg
dec
shl
rcrb
add
and
mov
aam
and
mov
nop
hlt
sub
add
mov
sarb
std
push
jg
xor
rcl
mov
push
xor
mov
divl
in
push
mov
fadd
add
xchg
ss
jmp
mov
xchg
loope
inc
mov
stos
les
cmp
xlat
ret
in
movhlps
leave
inc
sbb
xor
sub
les
cmpsb
push
fisttpll
iret
scas
and
mov
loopne
dec
in
xlat
mov
xchg
and
mov
push
lahf
pop
in
xor
cld
sarb
xor
add
inc
int3
xor
push
movsl
mov
pop
pop
into
cli
jae
lods
cmp
jle
xchg
pop
popf
inc
test
insb
add
push
aad
jmp
push
push
xor
dec
mov
loope
sub
pop
jo
mov
jno
icebp
or
cmpsb
mov
xor
arpl
xchg
xor
push
stos
jnp
jmp
and
mov
jg
outsl
out
sub
insb
mov
jb
xchg
in
cmc
jl
lods
or
push
sar
mov
push
dec
fsubrs
clc
enter
daa
outsb
test
repz
and
in
int
mov
in
mov
sbb
lds
jle
mov
dec
push
lcall
leave
mov
adc
push
mov
adc
sbb
mov
mov
sub
ret
dec
iret
dec
cs
in
arpl
into
decl
loop
cmp
popa
cmpsb
sti
fnsave
jnp
and
jo
sub
clc
pushf
aaa
dec
jno
inc
gs
jnp
lods
call
in
movsl
adc
xor
push
iret
mov
aad
cmpl
int3
ds
inc
imul
push
ds
push
cmp
jb
test
dec
fimuls
stos
jne
dec
or
sub
outsb
mov
add
xchg
lods
xchg
fwait
je
lret
mov
jo
js
push
sub
dec
push
std
loopne
inc
or
dec
xchg
scas
cmpsb
mov
aam
in
hlt
testl
xor
inc
inc
push
push
fs
test
mov
aam
in
hlt
testl
xor
inc
inc
push
push
fs
test
mov
aam
in
hlt
testl
xor
inc
inc
push
push
fs
test
mov
mov
push
fs
sti
clc
jmp
mov
xor
xor
fsubrl
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
sub
cmp
or
sbb
mov
shrl
cmp
test
pop
cltd
pop
jmp
sbb
cmp
or
sbb
imul
mov
pop
jmp
or
cmp
or
sbb
imul
inc
cli
cmp
push
xchg
sbb
jp
imul
jns
ret
pop
imul
testb
or
jmp
inc
mov
inc
xchg
and
std
inc
inc
pop
scas
adc
add
sbb
push
test
push
rcll
mov
rcll
mov
test
icebp
repz
jo
lods
repz
jg
cwtl
in
imul
test
mov
leave
xchg
ja
aad
sbb
xor
cmp
dec
fstpl
mov
or
pop
fs
sti
mov
or
add
xchg
xchg
mov
adc
insb
shrl
pop
fmull
jle
dec
leave
repnz
ja
cmp
or
sbb
imul
mov
inc
jmp
or
push
std
insb
int3
jl
add
loope
lock
sbb
xor
lea
xchg
dec
std
pop
mov
adc
icebp
int3
adc
sbb
cmp
push
mov
push
mov
lods
pop
cwtl
pusha
lods
sbb
dec
lea
test
dec
cltd
pop
jmp
or
cmp
or
sbb
imul
mov
pop
jmp
or
pushf
jp
in
cmp
xor
dec
lds
stc
push
mov
cmp
int
sub
fwait
js
add
int
test
in
repz
add
shll
or
mov
push
xor
push
push
or
mov
push
jmp
cmpsl
pusha
mov
test
inc
mov
or
in
loope
outsb
rcrl
mov
movsl
sub
push
adc
pop
xchg
jb
fwait
jns,pt
imulb
in
push
jb
or
je
int
imul
addr16
xor
pop
sub
imul
xchg
mov
sarl
dec
idivl
sti
daa
fwait
cwtl
loopne
popf
fidivl
mov
mov
mov
dec
insb
in
inc
xchg
lock
in
xchg
adc
aam
cmc
insb
inc
imul
jno
and
ret
imul
xor
push
push
jecxz
cltd
dec
lods
jge
add
lea
pop
mov
stos
shl
lret
cld
fdivrp
sahf
imul
push
add
mov
push
das
cmp
aas
imul
pop
or
dec
jp
fwait
imul
fwait
leave
mov
xchg
out
repz
pop
push
pop
lret
mov
lcall
xchg
and
sub
jno
repz
leave
flds
aas
sbb
pop
cwtl
ja
clc
enter
pushf
in
push
add
mov
ret
xchg
cmp
inc
and
dec
jns
out
adc
pusha
adc
mov
push
ds
or
xchg
sti
jmp
mov
sti
fs
addb
sbb
loop
pop
aam
ds
iret
lret
pushl
inc
add
add
fisubrl
loopne
or
insl
repnz
add
shlb
repnz
fisubrs
dec
xchg
stos
jge
pop
push
inc
jbe
loope
or
and
movsb
outsb
cmp
dec
push
mov
dec
cmp
shrb
dec
bound
les
test
mov
jmp
jmp
test
push
xchg
mov
fimuls
xlat
mov
cltd
loop
sbb
flds
mov
imul
test
adc
les
mov
fwait
mov
leave
fwait
lds
mov
push
push
js
sar
inc
mov
dec
out
outsl
push
pop
in
test
cmp
jnp
xor
inc
xchg
ds
pop
xor
loop
push
enter
call
ljmp
xor
lock
scas
or
bound
and
pusha
sahf
pop
or
inc
sbb
mov
xor
lock
jmp
add
jbe
les
stc
or
js
mov
jge
mov
fs
hlt
div
sbb
dec
into
lods
pop
sbb
pushf
jge
scas
insb
xor
adcl
mov
cwtl
mov
cmp
mov
jl
popf
sub
sub
out
mov
fcmovb
jb
mov
or
dec
lea
faddl
sub
icebp
ljmp
jo
push
daa
and
inc
add
push
cvttps2pi
scas
mov
sbb
cwtl
push
jb
dec
inc
add
lea
enter
and
mov
repz
push
jg
cmc
test
inc
jns
push
pop
fistpl
inc
fcmovnb
int
movsl
jo
inc
xor
sub
xor
jge
or
xchg
pop
imul
push
jg
push
mov
or
mov
mov
scas
cmp
es
daa
loopne
mov
out
shrb
pop
hlt
mov
shrl
das
aas
and
in
and
push
sbb
std
sbb
xchg
insb
sbb
and
insb
insl
imul
mov
xlat
je
mov
xor
mov
js
repz
xchg
add
mov
in
sub
xchg
std
pop
int3
daa
pushf
pop
out
imul
cmp
loop
imul
out
dec
or
add
cmp
sarl
ret
mov
push
mov
sbb
pop
adc
gs
fnsave
daa
sbb
cmpsl
push
sub
loopne
mov
incb
sub
jno
gs
mov
jge
jmp
and
repnz
jo
push
mov
imul
sti
xlat
pusha
movsl
ds
cmp
scas
icebp
xor
jmp
or
jl
mov
push
mov
mov
inc
xchg
pop
rol
or
imul
mov
adc
ljmp
scas
movsb
dec
pop
xchg
jge
xor
arpl
imul
fwait
mov
iret
icebp
xchg
pop
pop
mov
add
pop
xchg
rcrb
sbb
stos
xor
rorl
pop
gs
lods
insl
insb
orb
js
pop
cmp
and
mov
hlt
cmp
mov
jo
ja
int
mov
pop
push
xor
jmp
into
shr
xchg
int
mov
arpl
aaa
add
jge
pushf
stc
dec
repz
in
and
mov
mov
loop
std
loopne
jmp
xchg
mov
movsl
xchg
stos
pop
fwait
jb
xchg
cmp
sub
in
sti
fistps
arpl
pop
push
xchg
iret
mov
sbb
movsb
testl
insb
shl
jp
cmc
out
mov
cmp
cmp
out
pop
sub
mov
sbb
out
inc
jo
mov
pop
fidivrs
add
out
push
out
daa
xchg
jmp
out
lea
je
lock
rclb
bound
inc
imul
shl
mov
fidivrs
sub
and
push
lock
hlt
inc
lock
mov
fdivl
inc
ret
stos
in
cmp
mov
pushf
sti
out
jecxz
jb
mov
in
inc
dec
xchg
in
jb
pop
push
mov
gs
sbb
pop
leave
inc
out
adc
ja
mov
pop
scas
mov
or
xchg
test
fwait
call
push
or
test
pop
add
in
push
stos
cld
inc
cmpsb
sub
lcall
add
or
in
aad
incb
stos
in
gs
xchg
lock
popf
cli
adc
lahf
xchg
xlat
and
xchg
or
sub
cmpb
cmp
inc
jne
flds
pop
std
sub
ret
mov
jecxz
ljmp
into
add
fistl
mov
scas
sbb
jo
movsb
repz
dec
jne
mov
test
sub
stc
cmp
in
push
lcall
push
outsb
xor
cmp
out
jne
test
lret
add
xor
mov
test
cmp
or
lods
mov
and
into
or
adc
pop
sbb
movlps
sub
fcoml
mov
pop
test
cld
inc
and
add
in
or
dec
and
repz
jecxz
cmp
cmp
pop
mov
xchg
jno
dec
aaa
aas
jb
dec
sbb
mov
pusha
jle
rolb
call
mov
inc
xchg
ds
loope
into
xchg
das
stos
fbstp
and
cmp
lcall
sub
test
lea
push
sbbb
stos
xor
xchg
pop
mov
xchg
pop
cmpsb
jge
xchg
add
jnp
mov
jbe
rcrb
imul
xchg
mov
jb
lds
jp
aas
lock
xchg
jg
loope
addl
mull
sub
imul
fdivp
adc
or
lret
add
mov
outsb
sbb
pop
mov
add
js
push
push
mov
aas
dec
jge
sbb
jo
push
nop
aam
xchg
jmp
test
sub
mov
div
cmp
stos
shrl
add
js
push
mov
sbb
sbb
out
adc
subl
cmc
test
sbb
arpl
dec
fsubr
jg
xchg
add
repz
loope
cmp
cmp
pop
pop
aam
lods
rcll
push
gs
bound
dec
dec
add
fidivrs
mov
pop
jp
femms
mov
imul
lea
jno
cld
aas
fsub
push
mov
test
jne
xor
push
inc
mov
hlt
pop
sub
dec
push
lds
push
sbb
and
and
jne
mov
mov
fcomi
lcall
sub
inc
cmp
aam
and
aam
in
ror
jno
push
testl
lock
lret
dec
pusha
or
pop
mov
inc
push
jge
shrl
mov
mov
jns
or
cli
cmp
jle
testb
repz
and
arpl
loope
out
cwtl
mov
adc
lods
daa
xor
push
jp
imul
in
js
xchg
lret
ja
pushf
dec
mov
fistl
push
mov
scas
add
or
insb
xchg
pushf
gs
dec
sub
mov
adc
mov
lock
fcmovnbe
arpl
push
test
adc
add
and
mov
and
ja
adc
sbb
nop
xor
push
sbb
cmpsl
mov
popf
fs
xchg
and
pop
mov
add
inc
mov
stos
jns
stos
jg
adc
jns
faddl
stos
jo
and
loop
pop
cs
outsl
push
in
lret
mov
pop
xor
lods
sbb
jmp
loop
xor
xchg
xchg
adc
fisubrs
stos
loop
sub
sub
push
push
xor
adc
clc
cli
rcrl
inc
dec
xor
daa
add
test
enter
xor
push
adc
stos
out
in
jae
bound
or
or
jle
ljmp
cmpsb
adc
jecxz
pop
daa
aas
or
jmp
pop
inc
hlt
push
push
mov
xchg
push
dec
loop
push
clc
repz
pushf
push
cmp
das
xchg
sub
sti
mov
xchg
dec
fnstsw
mov
and
pushf
and
cmpsl
imull
iret
popa
popa
xchg
pop
mov
nop
out
add
aas
mov
pop
das
mov
stos
or
push
notb
lahf
scas
imul
push
mov
incl
adc
dec
fcmovb
mov
filds
pop
sub
rorl
or
mov
popf
and
retw
dec
push
push
sbb
xchg
movsb
pop
xchg
repnz
jae
test
sbb
inc
cld
imull
sbb
inc
inc
subl
ljmp
movsl
cltd
outsb
jno
sbbl
je
lcall
or
movb
shrb
repnz
daa
push
mov
push
fisubl
jno
cli
lock
aam
jno
in
adcb
sub
push
ficomps
inc
pop
xchg
or
addr16
cmp
int3
pusha
mov
andnps
sbb
pushl
loopne
xor
mov
or
jne
dec
push
loop
inc
cmp
mov
or
cmc
negb
cmp
test
xor
inc
test
in
sbb
pop
pop
xor
pushf
add
shll
jae
aaa
and
xor
fsubl
lods
out
out
sti
and
in
sub
xchg
loopne
xchg
xchg
mov
movsl
add
push
pop
ret
sbb
outsl
clc
int3
pop
or
add
js
imul
add
mov
add
xchg
loope
std
in
das
mov
xor
rcrl
mov
jge
mov
and
sub
mov
shll
jae
dec
hlt
push
lods
arpl
push
iret
dec
xchg
cmpsl
cltd
idivb
ja
stos
mov
cmp
fildl
insl
stos
js
push
xchg
pop
insl
push
fcoml
call
addl
fwait
cmpsb
or
fdiv
xchg
pop
mov
push
out
push
icebp
push
stos
fisttpll
repz
pusha
cltd
sahf
sbb
shrb
dec
push
push
stos
in
or
fstps
push
jge
std
push
les
cmp
mov
lret
pop
hlt
es
ds
mov
outsl
jnp
and
xor
mov
repz
add
cwtl
lea
xlat
inc
cwtl
pop
clc
test
cld
cld
dec
pop
pop
pop
bound
add
and
std
repnz
sbbl
arpl
add
pop
je
add
cmp
push
ljmp
mov
shll
andb
pop
jp
xor
test
orl
jecxz
xchg
out
imull
das
mov
out
sub
jns
adc
jp
pop
shlb
and
mov
lret
inc
out
xor
repnz
jns
xor
int3
ficomps
pop
adc
fstl
in
aam
adc
unpcklps
lahf
hlt
test
sar
xchg
in
cmp
out
push
ljmp
in
cmp
adc
test
shrb
out
test
incb
pop
arpl
inc
push
aad
out
pop
push
push
outsb
repz
xchg
sarb
lods
push
lea
je
pop
test
or
rcrb
in
mov
mov
xchg
push
iret
es
or
out
push
xchg
mov
xchg
fisubrs
mov
shlw
pushf
cmc
outsl
pop
push
mov
add
adc
xor
popf
sub
jp
test
punpckhdq
push
dec
stos
movups
xchg
push
aaa
scas
jnp
jnp
sti
xchg
mov
out
inc
xchg
test
push
push
pop
xor
mov
pop
jnp
dec
insb
out
inc
lods
das
addr16
push
adc
leave
push
dec
sbb
flds
ds
out
cmp
cs
push
les
cli
movsb
cwtl
sub
das
xor
mov
inc
mov
mov
lds
roll
ja
xchg
mov
and
scas
push
pop
pop
mov
test
inc
subb
mov
jg
cmp
sbb
dec
out
cli
push
jne
jp
lock
adc
mov
xchg
jg
outsl
mov
sbbl
call
out
inc
lds
mov
aas
imul
push
add
rorb
pop
pop
sbb
or
cmp
insl
xchg
mov
stos
sbb
or
adc
mov
fdivrp
cmp
scas
pop
add
mov
mov
jmp
push
inc
fisttpll
js
mov
dec
mov
mov
lahf
mov
jns
rcrl
xchg
leave
loopne
pusha
adc
dec
orb
push
sbb
inc
inc
xchg
fcomps
and
pop
mov
jne
pop
ja
dec
ds
cld
stos
jmp
push
pop
push
enter
and
shlb
mov
aad
mov
dec
lea
and
ja
adc
ss
das
sub
push
in
dec
sub
ds
pushf
sub
das
aad
sub
movsb
outsb
daa
fcmovu
popf
outsb
mov
push
stos
mov
inc
lock
or
sbb
ret
bound
fs
sub
or
jnp
pcmpeqd
xlat
xchg
or
lods
mov
loopne
lcall
jbe
shrb
repnz
dec
xor
jne
and
gs
and
test
mov
lea
push
adc
add
mov
xchg
dec
fcmovnbe
clc
lock
dec
sub
push
cs
aas
filds
cmpsl
ljmp
in
jmp
daa
pushf
dec
jecxz
nop
sub
and
inc
xchg
je
xchg
dec
mov
lods
pop
jg
les
adc
jmp
fadd
inc
and
rclb
pop
fnstenv
mov
jle
loop
adc
pop
fists
push
dec
fisubl
adc
fimull
imull
push
stos
flds
mov
and
mov
addb
adc
in
mov
xchg
mov
push
cmp
xor
cmp
loope
rorl
and
mov
fisubrs
mov
or
adc
es
fisubs
push
clc
pop
sub
cmp
xchg
ret
inc
sti
inc
xchg
insb
incb
adc
repz
sbb
and
pop
js
ret
dec
or
push
jbe
repnz
test
ret
fs
jl
push
pop
fcomps
xchg
daa
ss
inc
mov
insb
mov
push
aaa
mov
cwtl
lock
nop
xlat
aad
dec
xchg
fisubrs
aam
jle
xor
out
negb
dec
mov
ret
xor
cmpsb
ja
data16
enter
adc
subb
mov
fchs
jecxz
rclb
jo
incl
mov
pop
lret
push
imul
addr16
lods
adcb
mov
pop
lock
in
mov
mov
daa
in
outsb
out
icebp
aaa
rolb
lret
xchg
fwait
cmp
xor
sbb
jle
cld
nop
ja
pushf
lahf
xor
pop
fiadds
adc
insl
in
push
out
loopne
add
or
cmpsb
or
dec
lock
shrl
in
sub
lcall
xchg
stos
sub
test
add
pop
mov
jge
xor
cltd
sbb
pushf
aad
jl
sbb
inc
mov
outsb
fldl
adc
imul
ror
xchg
mov
dec
pop
push
dec
sbb
xchg
cmc
popf
shll
adc
orl
ss
lods
shl
pusha
mov
inc
aam
ss
sahf
inc
movsl
mov
mov
xchg
scas
pop
cmp
das
sbb
lret
out
push
or
out
pop
jnp
xchg
push
push
in
sub
dec
leave
mov
test
pop
repnz
add
sbbl
cmc
add
ds
pop
pop
aam
mov
and
cmpsl
mov
and
daa
sub
mov
ret
rcrl
loop
adc
imul
xchg
sahf
jecxz
adc
push
pop
inc
mov
push
lock
lret
sub
shrb
sbb
in
mov
inc
xchg
adc
pop
ja
inc
daa
into
outsl
cmp
imul
ret
xchg
sub
cmp
jb
inc
ja
pop
lret
insb
jb
inc
xchg
nop
and
push
in
incb
divb
addl
fwait
loope
xchg
inc
adc
fsts
loop
add
lea
dec
xchg
pop
push
loope
and
sbbl
aaa
ss
sub
xor
mov
fdivrs
ret
ja
cmpsl
cltd
sarb
push
sub
xor
xchg
ljmp
mov
pushf
jg
scas
xor
orb
arpl
addr16
push
pop
test
cwtl
and
test
pop
sbb
jae
or
adc
pop
mov
and
nop
xor
xor
and
ret
inc
es
pop
sbb
aad
mov
xchg
pop
add
arpl
push
in
or
cli
xlat
lods
addb
pop
push
add
jmp
lds
hlt
and
int3
cmp
pop
pop
pop
mov
adc
std
mov
add
cld
jns
pop
call
test
test
sbb
mov
out
adc
fldt
jno
xchg
ret
or
sub
rcrb
into
or
jno
jle
movsl
je,pn
or
push
pop
in
fbstp
lahf
fiadds
add
lret
mov
imul
push
js
mov
aad
xor
js
in
mov
stc
outsl
jbe
scas
andl
aaa
insb
out
or
sbb
push
push
sub
dec
adc
xchg
cwtl
outsb
testl
pop
stc
lea
rorb
xor
jg
daa
outsb
jecxz
stos
scas
inc
mov
pop
test
loope
iret
loop
push
shlb
cmpsl
push
push
inc
xor
pop
cmp
push
in
ja
adc
nop
cmpsb
clc
pusha
mov
cltd
inc
jg
out
subb
sti
sub
inc
dec
stos
out
jns
pop
cmpsl
sub
mov
scas
mov
outsl
sub
pop
in
fimull
adc
pop
je
add
dec
cmp
mov
xchg
inc
cmp
loopne
stc
stc
popf
and
xchg
stos
std
jge
add
aaa
mov
and
cmc
dec
sub
adc
daa
cmpb
mov
cld
pop
rclb
mov
sub
inc
mov
testb
sub
push
mov
inc
xor
pop
jl
ljmp
pop
loop
and
int3
pop
rcrl
inc
pop
push
push
and
loope
rcr
stos
or
cld
inc
enter
movsb
mov
xchg
daa
mov
dec
jecxz
je
inc
hlt
and
out
and
lods
and
daa
jmp
mov
xor
mov
cmp
jno
lods
sbb
in
iret
jg
mov
mov
xchg
and
inc
pop
lock
jg
xchg
mov
shl
sbb
int
add
xor
gs
rcr
sub
inc
pop
enter
andb
jns
push
push
xor
lea
fbld
sub
aaa
xor
cmc
insl
lret
dec
sbb
icebp
in
lcall
pushf
shrl
mov
and
aam
mov
lds
movsb
imulb
out
lahf
cmp
jmp
arpl
xor
push
mov
lret
and
jns
dec
lea
test
dec
cltd
pop
jmp
or
cmp
or
sbb
imul
mov
pop
jmp
or
cmp
or
sbb
imul
mov
pop
jmp
or
sbb
or
sbb
imul
mov
sub
repnz
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
mov
fstpl
dec
shll
int3
sub
aas
lea
pop
fwait
dec
ljmp
or
or
sbb
imul
stc
stos
jge
dec
ljmp
sub
sub
in
or
iret
imul
xchg
stos
mov
mov
inc
jmp
mov
pop
std
cmp
loopne
pop
es
push
xlat
test
outsl
mov
jle
mov
jle
pop
jno
mov
cs
ficomps
cmp
push
cmp
out
ret
sbb
subb
jp
outsl
out
icebp
xchg
sarb
push
stos
lock
fst
rclb
sub
in
cmp
divl
mov
pop
jb
cmpb
push
test
fcomi
rcrl
call
push
dec
sbbl
ret
cs
jge
lcall
dec
or
repnz
sahf
testl
jge
add
lahf
cmp
ror
sbb
cmp
imul
or
mov
add
lret
sbb
jg
addr16
push
jecxz
leave
push
ret
ds
in
jmp
push
mov
cmpsb
pop
scas
insb
je
js
jg
push
call
dec
repz
stc
sbb
cmp
cmp
sub
jl
pop
stos
adc
scas
sub
jnp
dec
popf
pop
lea
pop
fwait
dec
jmp
sti
sub
sub
cmp
or
sbb
imul
lea
pop
fwait
dec
jmp
sti
sub
sub
cmp
and
mov
adc
into
jno
sbb
cli
adc
into
stos
ds
xchg
cmc
rep
cmp
aam
cltd
in
ljmp
jge
mov
fsubs
adc
xchg
pop
xor
bound
add
ds
jge
xor
mov
add
inc
test
inc
pop
aas
mov
inc
adc
mov
scas
ljmp
xchg
sub
jb
repnz
push
fldt
addr16
addr16
xor
mov
popa
aas
dec
call
test
mov
pusha
sbb
icebp
add
test
and
clc
jns
and
inc
pop
add
mov
in
bound
popa
sahf
orb
and
sbb
xchg
scas
mov
jge
ret
mov
ja
push
push
xlat
mov
sub
dec
and
aas
repnz
pop
jg
pop
into
js
inc
xor
mov
push
pop
iret
nop
cmpsb
popf
outsl
js
push
dec
pusha
sub
dec
rorb
dec
and
lret
or
xor
cmp
mov
lcall
dec
loop
push
in
daa
and
pushf
add
je
in
aad
in
and
addr16
add
les
mov
repz
jge
imul
cmp
inc
xchg
push
pop
or
adc
jns
push
cmpsl
dec
mov
dec
and
cmp
lcall
sarl
inc
sub
xchg
pop
fcoms
popa
scas
adc
out
pop
xchg
es
pop
rclb
jne
adc
pop
sbb
push
xlat
mov
lret
jmp
lahf
pop
imul
fsubrl
mov
decb
fldt
ret
push
mov
rorl
jmp
in
mov
je
dec
cmp
js
fldenv
xchg
xchg
lds
in
xchg
movsl
and
aad
sbb
xchg
mov
inc
push
int3
jmp
pop
mov
push
loopne
jle
mov
sub
leave
jl
adc
in
ror
push
adc
sbb
add
imulb
and
movb
inc
stc
mov
add
fdivl
pusha
pop
push
or
movsb
pop
pop
repz
sub
or
icebp
cmpsl
outsl
and
pop
mov
adc
int
int3
xorb
outsl
mov
push
mov
movsb
sbb
insb
lock
push
test
dec
xchg
push
inc
inc
lods
add
push
cmp
cltd
das
call
lret
test
mov
mov
jge
leave
lods
roll
push
pop
adc
movsb
movsb
jo
stc
cmp
pop
jns
neg
push
push
mov
movsl
dec
pop
das
jg,pt
xchg
or
sbb
xor
pusha
clc
sbbl
xchg
leave
cltd
mov
loop
cmpsb
sahf
nop
dec
lea
adc
mov
mov
adc
repnz
in
add
inc
push
mov
push
jb
mov
sbb
pusha
xor
jno
in
rcll
xchg
sub
xchg
loopne
inc
add
imul
pusha
ss
push
mov
fs
sub
cmp
mov
mov
fs
jns
mov
ss
les
push
xchg
test
mov
addr16
iret
mov
js
dec
adc
cli
ret
and
xchg
jle
xor
and
dec
push
push
xchg
pop
lock
mov
lods
cmp
mov
das
and
mov
lods
adc
jo
xlat
mov
push
les
pop
xchg
lcall
jbe
out
sub
movl
idivl
mov
rcl
cmc
sub
test
cld
push
sub
cmpsb
mov
mov
fwait
out
test
sti
inc
cmpsl
pop
cmp
sub
xchg
stc
popf
mov
mov
mov
rol
lret
sti
ficoms
fwait
mov
dec
addr16
mov
or
pop
iret
repnz
push
dec
cltd
and
sbb
insb
cmp
push
data16
xchg
loope
add
mov
loop
cld
dec
sub
lret
cmp
push
imul
mov
test
mov
dec
mov
sar
cmpsl
pop
xchg
test
cmp
push
outsl
jb
and
fdivrs
ljmp
popa
mulb
sub
cmpsl
shrl
jle
fld
mov
lahf
subl
pusha
xchg
mov
pop
stos
outsb
pop
in
in
push
movsb
adc
adc
and
iret
mov
gs
adc
push
aas
out
inc
dec
push
mov
push
inc
ljmp
arpl
xchg
inc
dec
jnp
ret
leave
imulb
adc
aas
sbb
xor
insb
in
jb
sbb
inc
jnp
inc
mov
scas
lahf
into
aad
test
pusha
adc
xor
loop
sbb
and
movsb
addb
pusha
xlat
cmp
mov
test
add
inc
push
dec
sub
push
arpl
pop
sbb
adc
adc
push
and
add
jg
pushf
or
or
movsb
in
mov
mov
adc
jno
jns
xchg
lea
and
test
js
cmpsl
or
in
inc
andl
imul
add
cmp
mov
std
xor
mov
mov
clc
cmp
mov
add
add
addr16
dec
icebp
dec
pop
hlt
jecxz
push
aaa
push
ljmp
adc
neg
cmp
push
sbb
sti
es
leave
lea
nop
adc
sbb
std
push
dec
flds
sub
lcall
push
aam
jae
mov
sbb
xchg
sbb
inc
sub
jo
xor
movsl
es
test
fstps
aam
xchg
pop
push
xor
rolb
cmp
add
test
fucomp
lahf
std
mov
push
mov
out
jl
and
mov
mov
jae
aad
jp
das
je
pop
sahf
mov
push
movsb
push
xorl
flds
mov
fstl
out
imul
sbbb
inc
into
cmpsb
sub
mov
jae
test
pop
jecxz
push
gs
shlb
rcr
xor
sti
and
push
dec
mov
or
push
scas
lahf
data16
inc
push
jp
mov
push
mov
xor
adc
hlt
sti
jmp
cli
fildll
gs
lahf
add
pop
scas
lods
movsb
jne
out
cmp
loop
daa
and
push
push
and
xor
dec
setge
fwait
jae
aad
dec
push
out
jmp
aad
sub
mov
dec
stc
xchg
cmp
dec
std
jbe
sbb
mov
loope
jbe,pt
jo
iret
int3
xchg
into
or
into
dec
inc
mov
orb
xchg
add
rorl
dec
aad
push
mov
mov
fs
jmp
add
xor
sub
mov
rclb
inc
dec
int3
aam
shll
or
test
mov
push
add
mov
mov
loopne
sub
test
sub
push
not
adc
movl
fsubrs
mov
lods
mov
dec
mov
testb
movq
std
xchg
adcb
or
stos
bound
mov
xor
mov
les
push
jle
in
mov
and
dec
fldenv
cmpsl
insl
jne
andnps
xchg
lods
push
lahf
sti
pop
jle
test
add
pop
pop
jns
mov
xor
cmp
fmul
jg
hlt
inc
fisubrl
cmpsb
imul
mov
add
pop
loopne
test
pop
mov
sub
or
arpl
inc
pop
fs
aaa
xor
and
hlt
push
ret
inc
fildl
outsl
scas
dec
test
repnz
out
xchg
aas
inc
pop
and
dec
in
push
xchg
hlt
and
mov
fldcw
out
mov
ja
aaa
dec
insl
push
and
or
sub
jbe
mov
jg
cs
dec
lods
rcr
pushf
or
loope
mov
add
push
std
lea
fsubs
call
in
adc
daa
cmp
arpl
arpl
sbb
mov
aaa
mov
xchg
or
xorb
out
xchg
and
jns
inc
fisubrs
or
adc
mov
loope
mov
sahf
mov
jge
negb
sub
pop
lock
dec
fsts
rcr
sub
sbb
xlat
cld
aas
ss
in
ja
es
push
sar
es
mov
jae
xor
ret
cmp
arpl
push
int
sub
fs
test
jmp
or
mov
sbbb
push
loope
sbb
xor
fnstsw
cmc
fcmovnbe
imul
das
fists
es
repz
sbb
mov
les
sbb
daa
or
cmpsb
xchg
xor
out
sub
ret
cmp
or
and
push
shlb
int
adc
popl
pop
and
in
and
lods
sub
mov
lds
pop
fildl
adc
mov
xor
cmpsl
add
pop
sbb
dec
mov
stos
xor
ret
dec
sub
add
pop
es
stc
cli
data16
adc
mov
icebp
mov
icebp
push
jae
repz
in
inc
rclb
and
aad
in
cltd
cwtl
mov
flds
out
ss
fidivrs
cld
mov
push
mov
mov
adc
inc
rcl
cmpsb
jae
xchg
cmp
cmpl
xor
popf
mov
cmp
mov
in
mov
mov
int3
xor
push
fnstenv
jae
outsb
movsb
loope
mov
mov
jnp
lea
and
mov
stos
iret
adc
mov
jns
add
mov
add
mov
ss
push
mov
int3
pop
in
leave
mov
jnp
repnz
jbe
lds
int
mov
mov
dec
ret
mov
int3
les
iret
xchg
sub
sbb
push
jecxz
out
je
sti
mov
lds
mov
fldz
xor
nop
add
ljmp
psllq
lret
mov
jae
push
xchg
lods
sbb
dec
sub
xor
dec
xchg
shrl
ss
aas
in
rcrb
into
pusha
push
jbe
inc
push
mov
lock
and
sbb
sbb
ljmp
sub
ja
inc
rorb
addr16
scas
js
push
outsb
rcrb
dec
and
popa
sub
ss
xchg
dec
fsubrl
ret
lds
into
popf
inc
pop
sbb
aas
mov
cmc
jns,pt
rolb
iret
scas
sarb
xchg
dec
sub
mov
jle
inc
push
push
xchg
sbb
data16
cmp
lahf
dec
fst
add
cmp
mov
insb
jg
pusha
test
xor
pop
mov
adc
flds
push
mov
mov
push
xor
xchg
rolb
cmc
pop
xchg
jmp
pop
ja
dec
cld
xchg
pusha
aas
xchg
add
scas
cmp
sub
popa
jno
add
insl
mov
or
cltd
mov
sbb
test
shlb
dec
or
out
es
sahf
xchg
fldl
xchg
aaa
pop
test
fadd
lahf
push
int
xor
inc
fnsave
sub
dec
cmp
lods
gs
sub
adc
mov
jp
imul
int
fcmovnbe
push
nop
cmp
adc
ss
lods
test
jne
xor
jno
mov
cmpsb
mov
jb
addr16
popf
mov
mov
or
icebp
stos
dec
xor
int3
pop
mov
mov
movsl
inc
mov
cmc
shll
push
shll
fmuls
sbb
mov
push
int3
sbb
hlt
xchg
mov
sbb
jo
in
out
shl
je
sbb
pop
test
jle
cltd
cmp
and
cmp
inc
pop
jmp
jns
push
push
jno
dec
and
pushf
je
pop
mov
imul
inc
lock
jno
arpl
clc
push
mov
push
pop
xor
hlt
test
mov
scas
xchg
les
add
adc
adc
andb
cmpl
add
aad
movsb
add
and
cmp
fimull
hlt
cwtl
cmp
fcmove
fmul
mov
ss
jb
inc
and
das
popa
sub
jo
sub
mov
mov
data16
xchg
push
adc
jb
rorb
dec
mov
jne
ja
sbb
and
add
mov
stos
sub
mov
test
fwait
dec
sub
imul
push
inc
loopne,pn
addr16
sub
jb
and
sti
fwait
int
les
test
addl
mov
mov
in
addl
addb
imul
xchg
movsl
test
std
test
jns
les
lcall
bound
xchg
or
or
popf
mov
inc
scas
add
dec
cld
and
xchg
fiadds
push
mov
rcl
push
out
and
jle
xchg
fsubrl
in
mov
push
pop
rolb
das
add
xor
mov
add
mov
push
xor
rorb
sarl
int
push
repnz
dec
sub
dec
push
lahf
adc
adc
jae
jp
sbb
mov
sub
mov
jae
aaa
mov
cmp
adc
icebp
bound
cmp
sti
pop
and
jecxz
and
mov
notb
rol
stc
push
dec
pushf
call
push
sbb
insl
push
jl
int3
pop
sub
int3
cwtl
mov
mov
inc
and
dec
pop
mov
ret
pop
sti
ss
ret
pcmpgtb
mov
shlb
mov
xchg
std
or
mov
sbb
cwtl
enter
xchg
cli
mov
pusha
es
sub
mov
jp
or
add
push
imul
add
fcompl
mov
int
lea
ljmp
cmp
loope
jecxz
cmpsl
test
inc
insl
jecxz
call
dec
mov
or
dec
or
roll
jl
in
dec
dec
jge
fldt
inc
dec
mov
pop
mov
loope
add
mov
jno
lea
cmpsb
repz
inc
dec
arpl
xchg
cwtl
decb
mov
popf
add
cmc
mov
xchg
mov
or
ja
gs
dec
xchg
mov
mov
inc
mov
xchg
mov
pushf
rorl
xlat
out
cld
stos
out
fcomps
and
jo
test
bound
aas
out
insl
add
xchg
push
shr
jb
mov
push
lcall
lcall
xchg
push
jo
sub
ds
ror
dec
shld
test
sbb
lahf
mov
lods
test
je
dec
xor
decl
leave
mov
xorl
hlt
cmc
gs
lds
xchg
jmp
mov
push
pop
lret
inc
jo
mov
shrb
lods
jmp
shrl
inc
pusha
popf
mov
ja
jnp
mov
jle
hlt
imull
mov
imul
cmp
int
jo
push
leave
mov
movsl
push
xor
push
sbb
inc
movntq
aaa
sbb
cmp
fistpl
adc
push
mov
test
or
pop
fildll
inc
lahf
xchg
ret
pop
es
xchg
out
add
mov
lret
iret
es
lds
or
inc
dec
gs
dec
mov
fisttpl
orl
lcall
push
insb
cmp
pop
sbb
inc
outsl
cmpsb
insl
push
jmp
call
and
les
in
aad
mov
test
dec
daa
cmp
test
xchg
fwait
xor
push
mov
mov
aad
nop
dec
cmpl
int
push
jbe
out
fcmovu
add
pop
mov
mov
adc
and
pop
dec
lahf
mov
std
iret
sub
mov
lock
pop
pop
lcall
les
cmp
movsl
xor
lods
mov
or
inc
data16
mov
fsubrs
or
les
push
dec
gs
cli
test
aam
lods
insb
fwait
xchg
or
ret
mov
dec
mov
jge
sbb
pop
mov
cmpsl
pushf
pop
pop
sarb
dec
mov
mov
flds
mov
pop
sub
jge
xor
sub
pop
jae
push
and
mov
jo
mov
nopl
adc
repz
nop
push
lcall
push
jge
aad
add
outsb
inc
icebp
jb
scas
add
xchg
out
push
stc
push
loope
dec
dec
mov
nop
xor
mov
cmp
cmpsl
out
xorl
xchg
mov
das
push
xchg
test
int
jno
fdivl
sub
inc
sub
xor
lcall
pop
pop
mov
jne
xchg
and
shr
dec
mov
xor
fwait
out
lods
pop
mov
mov
cli
popa
inc
push
imul
sbb
mov
mov
sbb
cs
int
add
mov
clc
addr16
and
imulb
jnp
adc
cwtl
jb
das
lret
push
test
lcall
fs
outsl
push
loope
fs
divb
out
inc
mov
xchg
or
fnstenv
mov
mov
jg
repnz
inc
adc
call
jne
mov
mov
out
cmp
mov
jo
jno
stos
ss
in
mov
xchg
push
icebp
pop
stos
movsb
jle
and
pop
cmp
xlat
xchg
lods
mov
les
xchg
test
fs
and
jle
xor
sets
pop
lock
or
in
mov
sbbl
xor
cld
jb
and
ljmp
jae
add
sub
mov
and
ret
mov
xor
mov
cmp
das
mov
addb
fstpl
mov
push
xor
js
stc
outsb
sahf
cmp
mov
shlb
push
push
push
sbb
push
adc
cmp
dec
rorb
dec
adc
mov
mov
pop
outsl
mov
fldcw
insb
stc
xor
ror
xchg
jge
add
stos
dec
daa
xchg
push
sub
pusha
xchg
ljmpw
fstl
mov
imull
out
leave
push
outsb
or
out
call
hlt
lcall
insl
mov
push
push
dec
setnp
pop
popf
push
mov
add
cwtl
stos
mov
pop
lods
pop
cld
ds
cmp
or
repz
push
push
push
dec
call
push
pop
pop
mov
rcr
imul
add
imul
sbb
or
dec
jne
cld
mov
mov
xchg
sub
xor
push
fidivrl
sahf
leave
mov
add
push
insb
ret
loop
aam
dec
inc
add
sahf
sub
das
stos
dec
mov
filds
add
fwait
adc
or
push
dec
and
ljmp
shrl
jo
mov
add
ljmp
inc
sbb
out
or
jo
dec
nop
mov
sbb
pop
mov
je
add
insb
es
call
fcmovbe
stos
mov
test
mov
je
pop
das
cmpsl
sahf
jmp
cvtpi2ps
insb
cmp
mov
fmuls
lea
jae
out
xor
stos
adc
jg
insl
pop
loop
inc
arpl
fistps
fisubrs
xchg
movsl
sub
mov
orl
mov
inc
gs
add
sub
push
vpshuflw
inc
popf
mov
jge
adc
adc
es
call
flds
repz
je
out
insl
pusha
fistl
cmp
add
pop
xor
out
repz
xor
loop
clc
call
int
outsl
inc
cmp
cmp
jle
mov
ret
ret
adc
fiaddl
adc
pop
dec
call
push
jge
fcomps
adc
adcl
mov
ficoms
dec
fdivrs
cmp
mov
xorl
sbb
aam
xchg
mov
and
sbb
pop
aaa
shr
jb,pn
sub
stos
mov
fbld
aaa
es
sub
lret
push
or
mov
sti
add
xor
loope
jns
leave
push
imul
mov
cltd
or
leave
dec
inc
sti
lret
popf
or
inc
mov
fwait
mov
and
dec
movsl
add
jmp
sbb
out
insl
cmp
dec
test
jmp
sbb
arpl
daa
sub
add
fimuls
stos
add
lock
mov
fincstp
in
mov
sbb
imul
lea
pop
fwait
dec
jmp
sti
sub
sub
cmp
or
sbb
imul
lea
pop
fwait
dec
jmp
sti
sub
sub
cmp
imul
lea
pop
fwait
dec
jmp
sti
sub
sub
cmp
or
sbb
imul
lea
pop
fwait
cmp
and
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
sbb
jno
push
mov
pop
ret
test
and
adc
add
push
mov
push
mov
mov
add
adc
and
xor
test
xor
sbbl
mov
pop
mov
mov
sbb
or
cmp
es
shll
add
daa
fdivl
cmp
push
ljmp
in
out
pop
enter
sub
ficompl
jae
fdivrs
sub
popa
push
repz
rcr
clc
leave
or
fcompl
push
cld
addr16
push
cmp
int3
mov
scas
sub
mov
dec
sti
adc
and
xchg
ret
gs
mov
push
push
jle
aam
or
jbe
xchg
testb
mov
add
leave
mov
mov
jecxz
jae
popf
loope
pop
inc
mov
ret
add
push
mov
outsl
hlt
in
icebp
pop
sub
nop
arpl
dec
mov
cs
mov
fistpl
xchg
and
jo
jmp
push
inc
jae
xor
mov
xorl
or
and
sub
fdivs
leave
and
adc
add
push
test
xor
adc
mov
xchg
pop
xchg
mov
shll
xchg
jbe
ja
xor
push
les
aam
inc
push
movb
xorl
scas
dec
mov
rcrl
inc
test
sbb
mov
sub
arpl
add
jno
jns
adc
and
xor
shll
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
shll
and
adc
add
push
mov
inc
mov
lret
cmp
inc
xchg
ljmp
push
jmp
mov
pop
lret
fldenv
icebp
rcrl
in
mov
das
mov
cmpsb
xor
add
dec
insl
mov
pop
mov
xchg
sbb
mov
mov
jl
jnp
cs
loopne
out
popf
ret
negb
fsubr
mov
lret
sbb
or
daa
mov
xchg
das
les
aam
mov
xchg
push
ljmp
lret
jp
sbbb
sbb
scas
sub
cmp
pop
xor
sahf
pop
iret
gs
sub
jp
xrelease
adc
into
mov
divb
fistl
xor
push
push
mov
sbb
sti
lahf
cwtl
js
ljmp
mov
adc
push
or
jb
push
pop
lret
hlt
lahf
xchg
jne
ja
nop
sub
sbb
xchg
scas
insl
jo
xchg
lods
add
aam
push
xchg
ret
dec
adc
sbb
sub
in
test
pop
jns
jmp
or
bnd
imul
inc
ret
in
adc
or
in
pushf
pushf
pop
orl
pop
xchg
ror
mov
sbb
and
ljmp
jne
xor
scas
es
aad
or
xor
popa
inc
and
orb
xchg
rorb
addr16
cmpsb
jg
mov
pop
jb
pop
push
sarl
hlt
das
add
mov
lcall
jecxz
insl
and
out
cli
push
test
jecxz
mov
push
pop
int3
js
jae
sbb
jp
inc
jbe
jns
xor
xchg
push
mov
push
or
fistpl
out
shrb
repz
lock
mov
or
dec
push
filds
jb
jns
leave
dec
lock
pop
inc
inc
gs
int
dec
or
jo
ljmp
pop
xchg
scas
add
mov
fmuls
mov
sbb
lcall
int
adc
inc
inc
iret
cmc
cmp
dec
addr16
mov
cs
fldenv
movsl
mov
sub
cli
xor
jmp
fcoml
inc
jne
fiadds
fidivs
call
inc
mov
sbb
sbb
loop
lea
js
sub
and
outsb
hlt
adc
and
ss
or
or
pop
mov
add
or
shl
imul
aas
pop
rolb
outsb
adc
inc
andb
dec
cmp
xor
loope
movsb
xchg
mov
imul
dec
mov
js
iret
mov
mov
or
aam
xchg
xchg
jne
gs
push
nop
subb
or
inc
inc
and
and
loopne
push
les
loope
fwait
ret
icebp
in
lret
stc
jp
movsl
adc
int
fwait
pop
add
scas
hlt
push
xor
in
dec
in
sbb
lahf
dec
xor
lods
sti
loop
mov
cmpsb
mov
sbb
jno
mov
scas
cli
fisubrs
ja
mov
outsl
pop
rorl
jg
stos
stc
mov
mov
daa
dec
xor
insl
inc
xchg
mov
cmp
push
xchg
dec
jle
inc
cmp
fs
and
xchg
or
lods
in
cmc
aad
xchg
add
bound
jl
or
mov
pop
sahf
push
jno
xchg
sarb
mov
cmp
xchg
ds
mov
cmpsl
add
push
inc
mov
pop
sti
inc
sub
fildll
je
lods
js
sub
jle
mov
xor
xchg
in
out
sub
int3
cltd
dec
or
and
push
mov
add
out
jns
enter
rclb
adc
fdivs
push
ficomps
lret
fistpl
jmp
push
fistps
dec
ja
out
pop
sub
ror
push
stos
sbbl
iret
inc
inc
rorb
cmp
push
push
arpl
cmpsl
sbb
sti
popa
int
xor
and
jne
jmp
fcomps
or
or
rcll
outsl
nop
sbb
inc
xchg
mov
insl
lcall
lods
pop
daa
xlat
clc
ss
mov
mov
and
xchg
xchg
xchg
adc
das
sbb
or
lahf
fisubs
push
cld
jg
inc
out
mov
in
lahf
sbb
jo
test
xchg
inc
jnp
cli
adc
ja
sbb
rcll
adc
lahf
leave
or
mov
sub
jmp
sub
in
add
add
xor
mov
cwtl
pusha
cmp
mull
sub
loop
sbb
repnz
and
push
mov
je
insl
mov
rdpmc
or
push
mov
nop
cmp
insl
aaa
je
mov
and
hlt
mov
je
lock
popf
cmp
loope
cmpsl
cwtl
mov
mov
imul
jnp
xor
loope
insl
movswl
out
xchg
scas
or
pop
inc
div
shlb
out
sub
sbb
mov
adc
int
ljmp
call
js
cmpsl
xchg
test
mov
add
outsb
push
push
xor
mov
mov
mov
sti
xchg
repz
mov
fstps
lret
xchg
in
and
mov
sub
aaa
subl
dec
pop
nop
xchg
fisubs
fwait
loopne
jae
and
inc
shlb
sbb
inc
in
insl
leave
adc
add
int
jo
sub
faddl
ss
pop
sub
push
test
aad
adc
insb
add
mov
repz
adcl
xchg
aas
mov
mov
in
jbe
mov
xchg
imull
movsl
lcall
xchg
mov
xchg
icebp
lods
or
or
nop
stc
jns
cmp
and
jl
imul
jno
xor
cmp
lret
test
pop
cmp
xchg
mov
xchg
mov
cmp
cmp
aad
setno
push
repz
fnstcw
pop
pop
inc
out
sbb
adc
jbe
cmpsb
inc
dec
in
push
mov
add
sub
hlt
fidivrl
scas
aam
test
add
iret
xor
and
leave
adc
inc
fdivl
or
push
sbb
scas
data16
shll
add
pop
pop
xchg
pop
jge
inc
aaa
xlat
mov
mov
movsl
outsl
sahf
pop
or
add
fstp
into
gs
sbb
mov
lahf
cltd
push
fdiv
das
mov
mov
pushf
lret
xchg
mov
pop
inc
aas
pop
lahf
cmpsb
not
into
ret
cmp
xchg
xchg
or
icebp
fiaddl
les
fildll
repnz
inc
mov
hlt
fidivl
xlat
inc
out
cmp
aad
insb
iret
insl
sub
adc
dec
push
in
mov
mov
ret
jbe
mov
mov
popf
movsb
addl
add
sbbb
add
fisttps
cli
lahf
call
call
jmp
sub
sbb
inc
std
dec
out
cltd
ljmp
pop
fs
add
in
inc
sub
in
adc
cmpsb
test
jnp
mov
imul
outsl
les
push
shlb
data16
mov
mov
cmp
mov
sbb
add
add
inc
pop
jne
mov
push
out
in
sahf
enter
sub
xchg
and
xchg
rorl
test
ljmp
fs
ret
cwtl
xlat
pop
lods
fsubs
inc
dec
into
aam
je
das
nop
dec
mov
enter
push
cld
sbb
mov
outsb
leave
lds
push
push
fwait
or
mov
pop
push
in
mov
lcall
xchg
push
js
std
icebp
push
xor
cwtl
loopne
int
mov
cmp
or
jbe
mov
mov
out
sub
pop
rcrl
mov
ljmp
mov
or
out
jne
pop
jmp
ja
cmp
and
mov
jmp
fdivr
lods
xor
shl
sub
aad
mov
repz
push
out
push
out
jo
adc
push
push
add
outsl
cmpsb
cld
daa
shll
inc
and
in
daa
jge
ja
clc
xchg
lea
jns
ss
movsl
subb
or
sti
xor
xchg
adc
xchg
inc
rcrl
mov
cmp
sbb
sbbb
pop
mov
in
mov
and
rcrb
xchg
push
mov
mov
imul
jb
cli
xchg
mov
iret
push
data16
mov
daa
das
in
xor
jo
cmp
std
fiadds
push
test
pop
repnz
pop
lock
fdivs
jne
out
ljmp
pop
in
dec
movl
add
pop
testb
xor
loop
xchg
push
stos
xchg
cmpsb
jns
adc
jb
fstps
sub
push
sub
arpl
fdivrp
sbb
fcoml
shl
jnp
aam
push
call
jg
mov
insl
pusha
mov
mov
xchg
in
mov
or
jae
dec
sbb
mov
mov
xchg
xorps
sub
xor
or
xor
mov
mov
stos
aad
je
lds
push
lods
dec
mov
mov
mov
sub
scas
and
clc
mov
dec
mov
dec
iret
into
cli
xor
fs
mov
rcr
or
call
es
out
sbb
jns
addr16
call
xor
or
dec
js
loope
cs
nop
jb
push
adcb
arpl
pop
pop
xchg
mov
adc
addr16
lahf
clc
cmpsb
je
lods
jge
mov
mov
es
cmc
or
cmp
cmp
jmp
lds
adc
jbe
vmaxsd
adc
clc
xor
add
addr16
push
jo
out
xlat
repnz
cmp
sti
add
or
pop
inc
test
jp
shl
sti
xor
xchg
fdivl
lea
xor
adc
lcall
mov
aad
lret
add
or
xchg
cld
pop
mov
sub
and
add
adc
cmp
push
in
jmp
inc
out
rcll
divb
inc
add
test
in
fisubrl
mov
out
fcomi
mov
pushf
inc
and
xorb
or
dec
std
lret
jecxz
pop
dec
mov
xchg
ss
pushf
mov
mov
outsl
popa
stc
adc
rcrl
mov
cwtl
cmp
xor
mov
mov
pop
pop
mov
push
and
or
xchg
hlt
mov
mov
lret
mov
mov
sti
test
movsb
fildl
leave
sub
addr16
xchg
fimull
inc
ja
loopne
xorl
in
test
push
xor
sub
lods
inc
aas
jmp
push
sub
mov
imul
pusha
inc
mov
mov
and
dec
xchg
loope
mov
xor
mov
xlat
or
stos
add
es
cmpsl
int
cmp
jge
pop
and
sub
ljmp
xor
push
xor
xchg
mov
mov
cmc
faddp
jnp
push
adc
jge
and
jnp
push
mov
repnz
mov
jns
fs
fsubrp
push
mov
dec
adc
lods
fs
data16
nop
sub
inc
aas
icebp
movsb
sbbb
push
mov
cmc
jle
ljmp
mov
out
testl
ds
or
je
jb
xchg
fbld
cmp
cmpsb
jns
sti
test
outsl
dec
push
add
jg
dec
leave
sti
mov
shll
jno
mov
in
out
xchg
and
flds
repz
cld
push
lods
fimuls
adc
inc
and
sbb
andb
cmp
mov
shrb
leave
push
call
mov
imul
mov
mov
fisubs
mov
in
es
stc
int
addl
add
push
mov
or
lahf
sbb
mov
mov
pop
sub
adc
and
ret
mov
dec
push
es
repz
iret
adcl
add
mov
dec
test
or
movsb
in
pop
popa
push
into
sub
cmpsl
ja
hlt
pop
xchg
out
xchg
in
addb
pop
movsl
loop
sub
xchg
in
sbb
sbb
xor
fistps
push
xchg
iret
push
inc
rcll
mov
mov
sbb
aaa
fidivs
ds
pushf
in
xor
ret
add
imul
cmp
sub
sub
daa
mov
mov
leave
les
sbb
pop
pop
lea
repnz
or
cmp
les
clc
adc
into
mov
call
sub
pop
lea
popa
lods
ljmp
add
ds
aam
dec
mov
clc
ffreep
lea
push
aad
and
arpl
cltd
sahf
and
push
loop
or
dec
mov
push
mov
sahf
dec
fiadds
xchg
cmpsb
enter
je
aam
and
and
pop
or
jmp
inc
es
rol
stos
dec
and
push
shll
gs
ret
loopne
mov
xchg
mov
dec
dec
and
xor
daa
cmp
pop
aad
stos
enter
dec
xor
xor
idiv
dec
filds
lcall
inc
mov
loope
test
xchg
xchg
inc
and
jl
clc
inc
in
adc
stc
inc
mov
mov
sbb
xor
std
repz
cmp
addr16
jg
arpl
addr16
ror
hlt
inc
rcll
dec
and
test
insl
jb
scas
adc
lcall
dec
rcl
mov
jmp
jge
xchg
mov
sbb
xor
jle
jp
mov
sbb
mov
pop
and
jno
shll
pop
or
inc
add
adc
sbb
mov
jno
lret
xor
push
mov
pop
call
sbb
xchg
jno
mov
mov
aaa
mov
jb
pop
daa
cmp
aaa
imul
pushf
movsb
lods
add
mov
lret
int3
or
xor
test
imul
inc
mov
in
js
sub
push
mov
add
sbb
je
dec
adc
cmp
add
push
test
xchg
rol
loop,pn
incb
adc
xchg
and
pop
pop
push
lahf
lods
popa
loop
sbb
mov
adc
dec
jns
add
out
xorl
lods
push
adc
xor
cmp
mov
decl
pop
mov
cmp
xchg
cmp
inc
dec
addr16
popf
iret
movsb
mov
mov
jg
dec
jb
adc
cmc
jmp
pop
jae
lods
inc
xor
popf
daa
pop
mov
lret
aas
jnp
add
cmp
mov
test
shr
pop
mov
jbe
mov
pop
jp
int
mov
int3
and
dec
dec
movsl
bound
outsl
jge
jmp
mov
mov
push
ds
loop
mov
mov
test
test
in
pushf
bound
push
repz
cmp
shrl
imul
emms
sub
jno
lods
mov
mov
sbb
or
inc
cmp
xor
xchg
lahf
xchg
insl
or
adc
test
lods
mov
cmp
pop
and
jbe
notb
fcmovnb
movsl
or
jns
fisttpll
jg
lcall
cmpsl
push
jo
fists
jno
fmul
lret
sub
jnp
lcall
jg
sbb
mov
cmp
adc
iret
push
jg
mov
dec
adc
dec
jle
adc
repz
adc
stos
pop
cmc
into
shrl
mov
push
or
rolb
imul
sbb
nop
xor
add
es
test
jl
push
adc
xor
imul
jmp
mov
data16
push
fcmove
mov
mov
fcmovnbe
fbstp
pop
ss
xor
xchg
imul
scas
lcall
icebp
xor
mov
addl
outsl
mov
lock
lds
ss
sub
cwtl
mov
inc
shrl
add
add
in
cmpsb
push
add
xor
leave
or
into
jmp
fildll
sub
mov
stc
xor
xchg
lock
inc
lds
add
insb
stos
js
jae
or
mov
jmp
or
mov
cmp
outsl
fbld
and
shr
cli
pop
hlt
jns
je
mov
subl
je
inc
adc
sbb
out
mov
jl
and
mov
mov
jns
jae
jno
sub
xchg
jle
adc
mov
jns
mov
out
std
push
loop
daa
fbld
mov
mov
movsb
enter
imul
adc
push
pop
lcall
mov
add
mov
in
sbb
insb
push
shll
and
xchg
dec
ds
mov
jae
sbb
cmp
cmpsl
xchg
sub
xlat
sbb
ret
sub
loopne
mov
lcall
mov
mov
xchg
sub
imul
cmp
jo
mov
inc
clts
rolb
cmp
mov
scas
jns
mov
pop
rcll
hlt
dec
jecxz
pop
aaa
jmp
push
andb
lock
fldcw
inc
dec
xchg
inc
imul
imul
or
test
jg
mov
mov
pushf
xchg
mov
xchg
fadds
in
add
ror
pop
fucompp
sbb
dec
repz
push
cwtl
xlat
jge
aam
js
shrb
fsubrs
push
inc
pop
sub
bound
cmpsl
mov
insb
pop
dec
iret
inc
not
add
int
das
out
lahf
cmp
xchg
push
mov
rcrb
test
das
pop
fisttpll
ret
lods
lcall
in
fidivs
mov
test
lcall
iret
adc
sub
ds
xor
std
jne
dec
jle
inc
les
cmc
lcall
loope
ljmp
adc
inc
into
les
test
mov
push
push
subl
sub
mov
xchg
shrl
iret
adc
jmp
iret
es
jbe
inc
sub
inc
jecxz
xchg
and
stos
jl
std
clc
jecxz
or
adc
add
jnp
gs
cltd
stos
lret
jb
cwtl
cltd
ja
adc
fisttps
lcall
sbb
xchg
xor
lahf
xor
je
pop
movsl
pop
scas
inc
clc
or
and
or
cli
aad
or
mov
nop
loope
jl
sarb
lcall
dec
aad
pop
xor
sti
iret
mov
mov
shlb
imul
out
add
dec
vmovhpd
add
jb
pop
stos
mov
jl
pop
nop
fistpll
add
inc
pop
aad
fldcw
ror
imul
xchg
ret
jecxz
jg
dec
adc
mov
pop
int
push
push
popa
mov
shll
mov
movsl
sbb
mov
xlat
call
cmc
leave
xor
adc
ret
mov
lret
icebp
sbb
sahf
daa
data16
adc
add
adc
push
das
pop
xchg
push
inc
ret
in
dec
mov
push
pop
cli
jp
xor
fcmovb
adc
mov
dec
enter
jge
out
adc
mov
push
sub
cmpsl
jmp
add
mov
or
stc
in
pop
cmc
jns
ret
je
test
loopne
lcall
enter
jge
jbe
sbb
add
sbb
or
sbb
call
add
sub
leave
mov
inc
addb
xchg
clc
movsl
inc
shlb
pop
outsl
mov
stos
leave
mov
aas
mov
inc
imul
xorl
scas
push
dec
pop
or
cmp
add
push
sbb
shl
aam
jl
repnz
data16
push
icebp
jno
cmpsl
and
cmp
std
leave
test
adc
sub
jo
leave
xor
jmp
mov
imul
pop
add
push
xchg
cmp
push
fistl
inc
icebp
frstor
or
movsl
mov
inc
xchg
aaa
shrl
xchg
mul
mov
scas
pusha
mov
pop
lods
pushf
test
mov
or
aad
add
inc
in
in
sbb
or
iret
je
sbb
icebp
inc
ljmp
push
or
dec
pop
jmp
ret
xchg
push
mov
pushf
cmp
inc
ja
faddl
shl
popa
pusha
cwtl
fsubl
add
adc
and
xor
shll
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
shll
and
adc
add
push
mov
inc
mov
mov
add
adc
and
xor
shll
and
adc
add
push
addb
mov
add
adc
mov
xor
mov
icebp
je
sti
sbb
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
jge,pt
sub
inc
dec
cmp
cmp
mov
jmp
mov
mov
arpl
pop
inc
dec
xor
and
adc
add
mov
rol
leave
mov
test
test
ret
test
and
imul
sti
cmp
stc
mov
iret
in
lock
xor
xor
mov
lcall
fcompl
out
data16
jg
xor
imul
mov
ja
push
adc
lods
xor
adc
push
les
adc
push
add
mov
addr16
sbb
sub
cmp
push
pusha
dec
fmull
jns
imul
sub
add
es
lods
mov
cmc
imulb
xorl
fmuls
xor
mov
sub
sarb
shll
add
xchg
lods
sub
cltd
mov
imul
mov
shll
jecxz
cmc
arpl
sub
sub
sbb
inc
or
roll
out
add
push
pop
xor
push
inc
add
xchg
mov
mov
out
loopne
aas
jmp
adc
mov
jg
jo
lret
cwtl
mov
stc
shl
test
add
push
mov
xor
and
adc
add
repz
jecxz
rcr
ret
leave
mov
mov
mov
arpl
pop
inc
dec
xor
and
adc
add
repz
jecxz
rcr
ret
leave
mov
mov
mov
cmpsl
aas
sti
and
cmpsl
jg
inc
stos
fsts
gs
roll
jle
jns
mov
outsl
cwtl
inc
imul
add
jmp
or
into
adc
push
xchg
cmpl
orb
inc
call
loope
jge
outsl
pop
sub
adc
cmp
mov
pop
pushf
or
push
mov
push
push
lcall
dec
jne
add
push
orl
stos
sti
and
inc
aam
dec
ret
inc
cli
xchg
pop
mov
mov
testb
insl
adc
movsb
sub
inc
cltd
inc
mov
lret
rclb
inc
xor
add
repz
push
dec
psubb
pushf
test
aam
fcompl
enter
icebp
icebp
and
xor
pop
or
cmp
or
cltd
cmpsb
repz
mov
mov
push
out
imul
xchg
test
push
and
shrl
cmp
push
loope
mov
dec
inc
push
push
ja
das
lret
movsl
insb
inc
inc
aaa
push
pop
add
or
push
jmp
sub
mull
push
xchg
out
jns
mov
movaps
scas
push
mull
dec
lcall
out
cmp
add
leave
cmpsb
mov
jae
xor
dec
inc
cmp
addl
mov
je
std
in
outsb
fmull
pop
mov
or
push
dec
cmp
icebp
mov
popf
cld
je
inc
xchg
sbbl
mov
mov
xchg
icebp
roll
jmp
add
lock
and
hlt
mov
cmp
pop
cmpsl
sahf
cmp
xchg
inc
mov
rcrb
ds
xor
jecxz
sub
adc
inc
push
mov
xor
daa
mov
sahf
add
xlat
aad
jno
cmp
mov
sub
xor
push
push
data16
pop
mov
shrl
mov
adc
rcrb
cmp
bound
dec
push
pop
and
dec
fisttpll
and
and
rorl
shrb
push
popf
pop
pusha
pop
test
sahf
daa
divl
jns
lods
popa
xor
out
std
xor
call
in
out
xchg
push
fiadds
lahf
jo
or
mov
scas
mov
shlb
ret
cmpb
sub
jo
filds
xlat
and
dec
cltd
je
shl
mov
inc
sub
or
mov
das
jns
mov
xor
ljmp
ja
or
sti
lret
mov
jns
lock
in
push
sbb
pop
movsb
push
cmp
rorl
repz
rcr
mov
cmc
dec
insl
adc
inc
jae
inc
inc
adc
lods
jecxz
nop
mov
movsb
mov
and
cs
xchg
ljmp
lods
rcrl
mov
push
or
or
movsbl
mov
pop
mov
incb
in
and
xor
mov
jnp
cmc
mov
inc
or
in
push
inc
cltd
adc
in
adc
lods
adc
leave
cs
fstpt
ret
faddl
mov
ficomps
push
fs
sub
and
xchg
inc
add
xchg
inc
int
jns
jo
ret
adc
ds
lret
test
sbb
jp
das
sbb
xor
aas
icebp
mov
mov
fistpll
or
ja
call
out
fbld
ljmp
addr16
xchg
addr16
bound
or
mov
testl
pop
fbstp
jmp
xchg
pop
inc
lahf
pusha
sarb
lahf
dec
repz
mov
lcall
pusha
int
enter
dec
shrb
lahf
pop
sub
ss
mov
mov
or
add
add
jb
shrl
insb
push
addr16
jle
sub
jle
je
cmp
add
popa
dec
mov
mov
sbb
jecxz
sub
cltd
enter
pop
ja
mov
jae
xchg
sbb
sbb
jnp
mov
mov
test
sti
cmp
jle
stos
mulb
std
fs
pop
imul
in
loopne
ljmp
mov
pop
push
push
subl
fcompl
jl
daa
sub
lods
sbb
cmp
pop
aad
pop
ret
mov
out
rorl
pusha
les
fsts
das
into
mov
outsb
scas
sbb
jbe
jle
pop
pushf
adc
filds
loop
ds
fisttps
pop
jns
sti
scas
pop
enter
sub
js
push
cltd
lods
mov
sbb
call
push
in
hlt
or
add
loope
push
stos
dec
and
ss
xor
addr16
push
std
xchg
dec
mov
stos
cmp
and
push
test
xchg
fucom
ds
scas
rorb
cs
mov
xor
jge
dec
fstl
repz
lcall
hlt
push
mov
mov
loop
inc
mov
mov
imul
stos
mov
popa
dec
stc
test
dec
jb
adc
test
lret
mov
sub
mov
rcl
push
lea
faddl
pop
sarb
sub
addr16
dec
adc
push
mov
ljmp
out
ret
xchg
rorb
mov
mov
filds
jmp
cmp
das
push
cmp
jp
xchg
xchg
test
sub
jns
and
outsb
and
aad
ret
cmc
xor
lds
pop
insb
stc
scas
movsb
fldt
and
cmp
push
inc
mov
pop
nop
loope
jns
jge
lods
pop
pop
push
sub
mov
and
int
xor
jl
sahf
insb
pop
testb
inc
lcall
fcomp
rcrb
sti
mov
es
jb
aaa
add
outsb
mov
dec
jl
popa
pop
hlt
imul
add
push
leave
xchg
dec
inc
mov
es
sub
or
hlt
aad
dec
gs
sbb
push
mov
fisubrs
inc
push
rcrl
cmp
cmpsb
fidivrs
ds
nop
nop
jp
or
out
loop
mov
dec
jno
cwtl
cmp
cmp
jl
xor
out
mov
sub
sbb
mov
fistpll
movsb
sbb
div
rol
adc
mov
popw
pop
sbb
mov
jmp
jg
cmpsl
sbb
pop
dec
test
imul
push
mov
lahf
pop
push
in
mov
xor
push
out
stos
lret
dec
inc
or
jmp
pop
xchg
into
dec
lret
xchg
std
cmp
fcmovnu
mov
das
adc
int3
adc
jmp
push
or
pop
fcmovnu
sbb
outsb
and
mov
loopne
fs
xor
inc
sub
sbbl
mov
shr
xlat
xchg
lret
das
test
xor
ljmp
in
dec
ficoms
pop
adc
ret
inc
mov
jns
cltd
ffreep
into
insl
mov
cmp
push
inc
mov
dec
cmp
scas
rorl
mov
insb
push
mov
test
lret
xchg
insb
push
pushf
dec
mov
leave
in
out
std
sbb
pop
adc
sbb
adc
mov
add
gs
fcompl
aaa
adc
fsubl
stos
dec
lods
gs
popf
adc
sbb
xor
mov
ret
and
and
data16
sbb
je
test
fwait
ja
les
mov
cmpsl
sub
scas
inc
and
mov
xor
mov
hlt
rclb
xchg
and
hlt
ljmp
xor
fbstp
iret
jns
fldt
rorl
in
les
insl
lahf
in
in
jb
cmp
in
data16
sbb
scas
sub
add
pop
cltd
xor
mov
mov
rorb
cltd
add
stc
mov
fcomps
adc
add
stc
repnz
adc
mov
test
icebp
pushf
mov
lret
xchg
mov
popa
jmp
and
stos
imul
sbbb
xchg
dec
out
inc
and
fidivl
testb
sbb
lods
mov
neg
cmpb
mov
lds
mov
add
cmpsl
xchg
pop
repnz
xor
aad
stc
xor
outsb
adcl
cmpsb
push
pop
sub
cmpl
je
mov
leave
sub
inc
mov
add
mov
or
xchg
add
sahf
repz
dec
xchg
cmp
push
lods
pop
or
adc
or
push
imul
cmp
clc
cmp
pop
scas
inc
jl
add
out
dec
adc
incb
jle
dec
aam
push
mov
push
xor
in
pop
movswl
out
add
mov
pop
xchg
imul
xor
movsl
addr16
mov
cmp
fcompl
jns
pop
in
les
mov
pop
sbb
inc
ja
xchg
xchg
arpl
in
sub
xchg
inc
and
roll
mov
popa
xchg
pop
arpl
fsubl
sub
sbb
cs
xor
fwait
add
add
inc
inc
int3
std
mov
xor
test
mov
lds
mov
outsb
in
jo
and
out
iret
cmpsl
je
xchg
out
pop
or
lea
push
xor
shl
stos
adc
imul
insb
xor
cli
dec
iret
xlat
add
push
stos
jae
sbb
mov
out
pusha
andb
gs
xlat
cmp
in
push
dec
in
sbb
aam
clc
fs
pop
jae
gs
sbb
xchg
fcomp
pushf
inc
iret
loopne
pop
xchg
aaa
or
inc
mov
ja
jne
xor
lcall
jg
pusha
and
leave
mov
lock
cli
lods
inc
mov
mov
push
scas
fisubl
push
adc
mov
cmc
bound
or
xlat
movsb
test
adc
in
scas
nop
and
pop
mov
mov
int3
sub
mov
out
clc
ljmp
insl
inc
jo
cmc
outsl
dec
push
and
mov
flds
cmc
adc
in
imul
xor
out
sbb
cmp
movsb
cltd
int
je
xchg
adc
inc
movb
xchg
sbb
jns
and
adcl
je
stos
mov
push
rcrb
outsl
mov
call
aad
pusha
and
or
fbld
call
jae
cmpb
pushf
nop
cmpsb
call
lea
adc
js
push
push
aam
sar
push
lret
pusha
popf
push
cmp
pop
clc
imul
add
shll
lods
call
push
out
pop
imul
jmp
out
cmpsb
pop
mov
repnz
mov
pop
mov
mov
push
icebp
mov
pop
add
lock
xchg
xlat
xchg
popa
inc
push
sub
outsl
lods
sbb
loope
out
out
cli
dec
push
adc
add
inc
pop
xchg
test
aam
cmp
push
adc
loope
dec
loop
and
arpl
aam
subb
jno
pop
jb
cmp
cmp
xchg
and
jne
sbb
rcll
cmc
testb
fidivl
pusha
sti
or
lcall
fs
adc
mov
popf
add
adc
mov
fiaddl
and
mov
pop
pop
adcl
pop
mov
inc
add
or
xchg
enter
xchg
lcall
add
fbld
repnz
xor
stos
mov
xchg
imul
ljmp
out
mov
push
imul
cmpsl
andb
jbe
mov
pop
cld
out
int3
xchg
repnz
jns
loope
cltd
in
das
push
cmpsb
push
std
jae
push
test
orb
mov
mov
stos
mov
sub
push
jae
sbb
repnz
mov
js
lahf
in
cld
pop
mov
in
jno
lcall
inc
xchg
lcall
cmp
xchg
xchg
mov
jae
gs
xor
sbb
fcomi
adcl
pop
adc
aaa
outsb
cli
cltd
cmpl
sbb
push
mov
inc
adc
pop
pusha
push
mov
stos
xlat
test
fs
sbb
into
jns
add
scas
mov
push
mov
fdivrl
lahf
sub
pop
jne
int
outsb
xchg
ret
es
data16
and
pusha
sbb
cmpsl
mov
dec
push
adc
sub
xchg
jns
jns
jbe
pop
fldt
nop
xchg
shrb
cs
gs
inc
dec
rcl
sub
arpl
cmc
ret
mov
lret
ja
imul
je
or
cli
divb
iret
jecxz
jbe
jb
shll
stc
leave
aas
adc
inc
andl
mov
mov
sub
cwtl
add
cmp
inc
stos
cmp
sub
loope
cmp
jns
pop
push
lea
jmp
mov
push
and
andb
mov
sbb
pop
dec
dec
push
aam
fwait
push
sub
push
pop
pop
popa
jp
xor
loopne
or
xlat
sahf
dec
shlb
sbb
xor
push
inc
jle
bound
mov
nop
mov
leave
decl
pop
and
xchg
adc
test
push
ret
fimull
jne
inc
mov
mov
lahf
jnp
mov
testb
in
mov
mov
cmpl
sbb
stos
decl
xchg
mov
pop
push
cmp
dec
imul
pop
xor
push
fstl
dec
mov
dec
test
stos
adc
xor
cltd
fnstenv
inc
ljmp
xlat
lock
movsb
add
fists
sub
outsl
or
mov
mov
add
cwtl
dec
jle
pushf
jb
pop
jmp
mov
jne
testl
cmp
push
mov
rclb
sbb
push
enter
imul
push
stc
sahf
pop
mov
cmp
xchg
movsb
es
addb
pushf
jl
into
and
cs
clc
lds
push
ja
inc
adc
js
xor
ss
cmp
into
add
adc
xchg
inc
rolb
pusha
scas
dec
shlb
scas
jl
fdivrs
mov
es
in
sub
and
push
inc
push
cmp
push
add
xchg
jnp
stos
add
jmp
outsl
or
sbb
pop
popa
in
dec
xchg
js
add
out
out
sbb
cmp
enter
inc
inc
jo
push
pop
dec
and
xor
xchg
jmp
ljmp
movsb
or
std
jecxz
mov
inc
sub
dec
test
cmp
push
movsl
cwtl
test
movsl
jae
enter
test
and
call
dec
in
test
cmp
sub
pop
mov
or
inc
push
movsl
pop
or
mov
mov
xor
dec
mov
notl
clc
lds
movsb
iret
xchg
sub
pop
cmpsl
clc
les
jl
sbb
ja
daa
inc
fisubl
xchg
loope
and
sbb
xor
fucomp
dec
dec
lock
cld
fistl
xor
push
xchg
mov
mov
cmp
loop
test
lahf
cmp
insb
adc
xor
inc
mov
push
xchg
mov
repz
cld
std
xchg
cmc
int3
or
pop
or
int3
icebp
xchg
sub
orl
mov
rorb
stos
cmp
mov
mov
push
and
sbb
ss
pop
out
imul
addr16
cmp
pop
lods
std
scas
lret
arpl
inc
sbb
shrl
arpl
xchg
mov
or
mov
cmpsl
or
xchg
jb
or
pop
jo
or
push
scas
xchg
in
out
dec
jo
mov
mov
mov
pop
xchg
fidivs
fs
sbb
sahf
mov
sbb
lods
xchg
movsb
mov
cmp
push
mov
xchg
pop
mov
cmp
jmp
pop
mov
cmpsl
inc
dec
cmp
mov
stos
repz
dec
xor
dec
sub
fnstenv
popf
inc
clc
add
sub
push
pop
xor
inc
jp
scas
int3
cwtl
pop
pop
mov
push
cmp
add
cmc
xchg
lret
push
clc
insb
xor
imull
ja
cld
sub
push
mov
fmull
ret
imul
sti
add
mov
shrl
sbb
cmpsb
lds
xor
xchg
cmp
popf
stos
aas
fbstp
push
hlt
rol
mov
ss
rolb
mov
lcall
push
ss
fistl
add
push
xchg
mov
or
test
adc
ss
enter
push
out
movsl
in
pop
push
out
adc
int3
arpl
les
sahf
movsb
pop
test
aaa
or
pusha
lea
in
cmp
cwtl
imul
dec
js
int3
out
fbld
add
aaa
pusha
mov
mov
adc
fnsave
sahf
pop
aam
mov
movsl
adcb
out
jecxz
and
stc
sub
out
fcompl
cmp
outsb
stos
cmpb
int
mov
aam
inc
jne
sub
test
lds
fisttpl
inc
xchg
nop
pop
shlb
imul
es
mov
fistl
aad
aam
lock
add
dec
push
movsb
push
mov
pushf
cld
fildl
call
cld
into
insl
jp
adc
and
mov
inc
cmp
jns
jo
lret
mov
lea
lcall
lahf
or
dec
cmp
ds
sbb
sbb
gs
mov
rcll
jbe
mov
loope
push
mov
lods
repz
aad
stos
lcall
cmpsl
fldl
jle
cwtl
cmpsl
in
add
nop
stos
cmpb
push
shll
inc
xor
mov
mov
add
sub
test
dec
lds
sub
jae
lock
lods
xchg
jge
in
icebp
mov
inc
arpl
dec
xchg
push
sbb
and
std
and
mov
mov
mov
lret
jno
add
imull
loopne
sti
pusha
and
pushf
or
test
jle
mov
jecxz
js
mov
iret
fstl
movsb
push
mov
inc
test
adc
fiadds
xor
and
sahf
push
pop
pusha
popf
adc
ret
stc
mov
pop
push
mov
mov
pop
aas
movsl
clc
mov
mov
mov
cwtl
dec
xchg
mov
xchg
cmpsl
into
and
cmpsb
cmp
pop
dec
pushf
jae
hlt
stos
hlt
pop
xor
add
push
push
in
xor
mov
das
pop
jo
xor
pop
cmp
and
inc
cli
out
jmp
leave
in
mov
repnz
lock
inc
fwait
cmp
xchg
jmp
subl
outsb
and
iret
loopne
gs
loop
gs
inc
mov
and
push
sub
enter
repnz
add
nop
sti
in
jns
adc
iret
cmc
mov
mov
xor
enter
loop
and
int3
xchg
add
dec
adc
pop
in
mov
push
leave
inc
pop
and
arpl
add
lcall
or
xchg
aaa
or
pop
ficoms
hlt
mov
jmp
xchg
cld
lods
rol
mov
scas
xchg
xchg
js
adc
pushf
sti
mov
jbe
jecxz
ja
sub
flds
adc
leave
pusha
aad
lea
jns
stos
sbb
jb,pn
jg
pop
mov
jns
add
cmp
mov
pop
and
cmp
xchg
mov
mov
aad
mov
jns
push
jb
inc
dec
mov
adc
inc
or
dec
dec
aam
aad
add
cmp
dec
dec
leave
xor
cmp
dec
cmp
mov
push
jmp
js
pop
neg
adc
adc
popa
push
add
fmul
pop
mov
cltd
add
dec
scas
mov
dec
lea
fsubr
insl
pop
cltd
inc
push
inc
pop
mov
insl
int
jo
fisttpll
dec
push
push
std
adc
xor
sbb
call
mov
dec
lods
mov
bound
or
iret
or
hlt
add
sarb
pop
adc
inc
pop
mov
inc
mov
popf
stos
test
shll
cmpsb
shll
dec
roll
mov
repz
pop
jg
bound
xchg
lret
xchg
mov
xchg
dec
cltd
les
mov
fbstp
mov
cmpb
cmp
mov
inc
lahf
loope
add
sub
sub
xlat
xchg
ret
push
inc
das
outsl
sahf
and
aam
out
add
lea
jg
pop
lds
sbb
test
dec
in
mov
dec
sbb
rolb
pop
popa
cli
jle
mov
test
fidivrs
insl
dec
cmp
cmpsl
ljmp
xchg
mov
hlt
jb
mov
adc
xor
stos
shl
xchg
pop
inc
dec
insb
sbb
pusha
les
jl
fcmovbe
cmp
or
call
dec
xor
and
adc
add
repz
jecxz
rcr
ret
leave
mov
mov
mov
arpl
pop
inc
dec
xor
and
adc
add
repz
jecxz
rcr
ret
leave
mov
mov
mov
pusha
addr16
inc
inc
dec
xor
daa
inc
adc
jecxz
fcmovu
mov
xchg
nop
mov
imul
or
cmp
sub
cltd
or
push
sbb
jns
ret
mov
insb
loope
icebp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
