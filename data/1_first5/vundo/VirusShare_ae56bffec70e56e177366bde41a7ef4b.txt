add
add
jne
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
test
mov
lahf
arpl
int3
add
push
add
add
add
push
add
add
pop
add
add
add
add
jns
cmp
xlat
add
add
add
sahf
add
add
add
add
add
sahf
add
add
add
add
int
bound
fwait
add
add
add
jnp
in
add
sahf
add
jns
pop
add
mov
add
add
add
mov
add
add
add
add
inc
add
push
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addl
lods
add
out
add
add
add
add
add
add
add
add
add
add
add
jb
jns
scas
add
push
add
add
add
rolb
add
add
add
add
add
add
add
pop
add
xchg
add
xchg
add
add
add
add
lahf
add
add
sbb
add
add
add
add
add
add
add
add
roll
popf
add
imul
jns
mov
mov
add
add
add
add
add
add
roll
mov
sahf
add
inc
add
add
add
add
add
add
cmp
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
jmp
add
add
add
add
sub
roll
jns
sahf
add
xlat
add
add
add
roll
add
add
roll
sahf
add
add
add
add
add
bound
inc
add
add
add
add
jnp
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
inc
add
add
push
add
jns
jns
fwait
add
add
jge
pop
add
jns
push
add
add
dec
add
add
add
add
mov
add
add
add
add
add
insb
add
add
add
enter
lods
add
add
add
push
add
rolb
add
add
lahf
add
add
add
add
add
add
add
add
add
xchg
jl
jns
add
add
add
roll
add
jb
pop
add
addl
jb
int3
add
imul
add
add
add
add
and
inc
add
add
add
xchg
str
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
jmp
fwait
cmp
fwait
cmp
xchg
cmp
repz
lods
ss
test
pop
inc
pop
add
ds
decb
je
cwtl
aas
js
iret
sbbl
sub
test
dec
lods
testl
in
loop
ljmp
rcl
inc
ret
and
fmulp
mov
cmp
pop
clc
dec
sahf
rorb
lods
pop
testb
enter
lret
ret
lock
mov
jl
xchg
lret
cmc
pop
adc
push
jb
scas
in
fs
push
xor
sbb
inc
imul
mov
lcall
xchg
xchg
inc
add
rolb
in
inc
dec
icebp
inc
xlat
sahf
ret
daa
in
or
and
lods
push
xchg
pop
je
out
xchg
pop
and
xor
inc
shr
cs
sub
lret
paddb
data16
mov
lret
rorl
mov
or
or
ficoml
das
sarl
testb
add
mov
inc
push
mov
xlat
shlb
hlt
movsl
xor
adc
pop
leave
xor
mov
in
fistpll
ja
rcrb
stos
jmp
cmc
mov
push
and
movsl
jl
loopne
jmp
xchg
into
cld
stos
xchg
testl
mov
xchg
out
ja
rol
ret
jg
dec
xchg
jmp
std
outsl
daa
das
pop
stos
rcr
jo
sbb
cmp
inc
mov
xchg
cld
in
cmp
pop
int
test
pop
add
cmpsl
incb
clc
adc
push
std
add
addr16
pusha
mov
fs
mov
sti
mov
mov
leave
fcomps
jbe
jnp
fs
repnz
sub
arpl
test
mov
int
data16
in
or
push
in
test
aaa
aad
add
sub
stos
scas
roll
xchg
test
mov
pop
xchg
cmc
mov
mov
cwtl
in
sti
xor
test
fisttps
pusha
cmc
mov
call
ljmp
pop
outsl
sbb
mov
ss
sbb
pop
sub
lahf
xlat
xor
xchg
cmpsb
lods
dec
sti
dec
es
je
cmp
xchg
adcb
lret
out
xchg
sub
fcoml
popf
or
inc
inc
in
or
test
loopne
in
imul
popa
sbb
add
pop
int3
xor
ss
notl
daa
sub
or
fstp
adc
mov
push
cmp
adc
and
mov
pusha
inc
testb
mov
xor
adc
fisubrl
xchg
mov
inc
push
and
dec
adc
aas
xchg
add
add
add
add
rolb
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
in
cmc
mov
test
loopne
lock
shll
inc
pop
push
daa
and
ja
addr16
cmc
xchg
mov
cmpsl
movsl
xlat
mov
test
xchg
leave
gs
jne
xor
push
daa
and
ja
addr16
cmc
inc
lds
mov
test
xchg
aad
pop
jne
ss
jnp
dec
add
and
jnp
lods
shl
mov
cmpsl
ret
mov
push
je
cmpsl
pushf
scas
clc
lea
int3
scas
and
sub
xchg
dec
inc
xor
pop
pop
pop
xor
arpl
xchg
call
shlb
inc
and
add
jmp
sbb
out
pop
push
sti
cmp
gs
pop
pop
mov
movsb
mov
mov
mov
push
cmpsl
movsl
ret
movsl
idivl
std
push
xchg
gs
enter
inc
pop
lret
pop
sbb
inc
cmpl
in
movb
push
push
xlat
test
aaa
push
in
add
sbb
js
ret
pop
cwtl
je
jp
push
out
inc
pop
push
mov
aas
xor
add
sbb
cmpsl
cmpsl
movsl
xlat
mov
test
xchg
jne
pop
jne
inc
xor
xor
push
mov
stos
loopne
aam
and
jno
es
cmp
pop
sub
inc
push
out
xchg
xchg
les
xchg
test
ja
add
adc
inc
sbb
ja
adc
lods
fcmovnbe
lret
movsl
fwait
mov
test
xchg
out
pop
jne
inc
aaa
push
daa
and
ja
addr16
cmc
xchg
mov
cmpsl
movsl
xlat
mov
test
xchg
out
pop
jne
inc
aaa
push
daa
and
ja
addr16
push
sarl
icebp
dec
jg
sub
xchg
call
mov
add
sub
cmp
lock
lret
hlt
lretw
sbb
cmpsb
mov
jle
int
inc
or
cmp
pop
jo
cmp
lret
adc
daa
ret
jecxz
ficoms
cmp
cmp
mov
mov
lcall
clc
fcmove
mov
ret
jae
call
dec
pop
mov
push
and
mov
addr16
test
stos
in
movsl
out
out
lea
pop
gs
cmp
xor
push
cs
inc
ljmp
test
pop
add
scas
sti
push
jo
into
inc
push
cld
push
sub
mov
sbbb
mov
out
pop
dec
cmp
mov
jnp
mov
push
sbb
and
aas
pop
gs
mov
or
loopne
push
mov
add
dec
lds
push
data16
enter
lds
lods
sbb
lahf
insl
push
pushf
sub
lret
movsb
jmp
neg
inc
mov
call
fldl
and
pop
movsb
jle
sti
adc
mov
xlat
sub
mov
addl
stos
push
xor
adc
adc
mov
or
cmpsl
jp
mov
pop
lea
rcll
lea
mov
daa
mov
leave
or
enter
mov
test
push
movsl
imul
mov
test
cmpsl
insl
cmp
lahf
popf
mov
movsb
and
dec
adc
in
push
mov
ss
sbb
inc
add
pop
inc
decl
repz
jnp
mov
ja
ficompl
cmpsl
out
inc
cltd
fmuls
inc
in
inc
xchg
push
je
jo
bnd
cmpsl
mov
mov
or
xchg
mov
sub
fcmovbe
iret
adc
ret
iret
mov
inc
mov
mov
mov
das
push
fisttpll
inc
xchg
inc
inc
icebp
mov
sbb
testl
pop
pop
mov
adcb
int3
popa
scas
ljmp
pop
imul
jle
scas
jns
cmp
or
bound
outsl
fwait
stc
mov
adcb
aaa
into
pushf
dec
push
enter
ffree
and
shr
loop
xchg
or
mov
repz
scas
jns
aad
iret
punpckhdq
fwait
clc
mov
jb
cmc
adc
pop
mov
je
fidivrs
fidivl
leave
or
mov
ss
pop
push
cmp
loop
mov
mov
mov
ret
outsl
pop
popf
add
or
jge
pop
push
cmp
das
lret
add
jp
mov
sti
aam
fldenv
fsubl
into
jb
loop
test
out
xor
ret
add
xor
clc
jg
inc
stos
push
push
fsubrl
xchg
push
sarb
mov
or
loopne
loopne
mov
inc
or
xchg
xchg
les
testb
ljmp
mov
rorb
stc
push
fiaddl
push
ficoms
into
mov
fdivrs
add
fistps
inc
sbb
loope
jge
nop
repnz
and
int
aad
lds
xor
or
in
mov
jg
or
imul
sbb
fs
ds
push
loopne
pop
mov
or
mov
push
push
shll
aad
dec
jae
dec
or
xchg
fcoms
mov
cmpsl
and
std
testb
add
nop
out
push
and
cmp
cmp
push
fimull
add
mov
loope
mov
movsb
dec
repnz
das
and
pushf
fnsave
xchg
icebp
movsl
cld
mov
xlat
lret
sbbl
fwait
sbb
lods
mov
sub
xchg
out
jl
in
mov
and
lods
or
or
xchg
ja
inc
xlat
cmp
nop
cli
cmpsb
dec
mov
jno
test
adc
lods
mov
xchg
xor
fldt
test
jp
outsl
stos
inc
xchg
pop
xchg
ficompl
mov
test
iret
add
aam
ljmp
lea
cmp
cmp
cmp
push
dec
cli
add
gs
xchg
jmp
das
adc
lds
mov
sub
ret
and
test
insb
enter
dec
inc
in
push
ret
cs
loop
push
les
in
cmp
push
rorb
or
icebp
push
js
cmpsl
sub
push
fwait
or
pop
sbb
inc
popf
sbb
add
inc
ret
sub
jno
adc
jnp
test
idivl
xchg
in
xchg
leave
int3
inc
mov
adc
add
cmpl
testl
add
out
incl
lds
jno
cmp
adc
imul
cmp
pavgb
or
mov
outsb
fldt
or
mov
mov
lods
add
inc
jae
imul
cmc
rcrb
dec
jnp
call
ds
fdivp
pop
mov
sub
fdivl
pushf
lods
sbb
add
mov
cld
mov
push
pop
outsb
ss
adc
mov
xor
das
dec
push
sbb
lods
fcomp
subb
jae
scas
xor
call
movl
jmp
cli
or
or
dec
mov
imul
lea
aam
dec
nop
jnp
lcall
sub
mov
sub
enter
ljmp
cmp
mov
aaa
pop
cmpsl
popa
ret
test
cltd
divl
push
jae
sub
inc
or
shrb
sar
repz
inc
jl
pusha
cmp
adc
sbb
mov
in
mov
adc
in
lds
aad
jge
pop
adc
decb
xchg
rcll
sub
das
xchg
out
pop
into
insb
push
mov
xchg
xchg
mov
jbe
mov
repnz
les
fldt
push
pusha
xor
ret
mov
jbe
cmp
int3
push
arpl
stos
sahf
push
push
pop
add
negb
adc
das
xchg
aaa
jnp
inc
mov
jne
fmuls
cld
test
test
lcall
cltd
stos
jmp
pop
mov
aas
xor
push
inc
cmpsb
cltd
pop
dec
fnsave
dec
fiaddl
out
aaa
mov
nop
cmpsb
and
and
outsb
gs
pop
mov
adc
ljmp
fimull
aad
mull
xlat
push
fildl
jns
mov
stos
scas
shlb
inc
movsb
dec
sbb
cs
sub
jp
daa
inc
jbe
or
cmp
rorl
pop
jae
cmp
jns
inc
sub
outsb
mov
adc
stos
mov
adc
mov
or
fidivrs
push
test
xchg
scas
in
inc
dec
nop
in
mov
leave
mov
mov
push
int3
jl
sbb
sahf
adc
adc
jmp
sub
or
cmp
jno
ret
mov
sub
xor
sbb
adc
xorb
in
repnz
mov
aas
mull
mov
mov
test
cmc
js
sbb
hlt
push
push
adc
push
or
add
pop
pop
jge
dec
cmpb
lcall
clc
js
repz
cmp
xchg
test
mov
push
adc
insb
add
lcall
xchg
sbb
push
fisubs
adc
lret
ds
and
rclb
xor
fcoml
xchg
divl
cld
into
out
arpl
shrl
loopne
andb
or
cmp
mov
enter
int
push
je
int3
cmp
test
mov
inc
mov
inc
lcall
pop
test
adc
test
adc
movsb
es
in
ss
js
divl
push
jl
xlat
scas
and
std
inc
testl
mov
ficoml
cltd
push
lock
lock
fxch
sbb
je
clc
add
movsl
sahf
sahf
mov
lahf
outsb
or
sbb
cltd
sbb
test
or
in
sbb
and
shlb
outsb
std
mov
aas
sbb
or
mov
mov
or
mov
cmpsb
sub
jg
out
lods
xchg
test
push
lea
test
in
mov
movsl
xlat
inc
cmpsl
sbb
pop
inc
ljmp
repnz
pop
xor
inc
and
cmc
pop
push
in
jle
lods
xor
xor
jl
add
inc
xor
jg
test
scas
loope
mov
jmp
fs
pop
cmp
mov
and
inc
rcrb
test
es
imul
sbb
out
jb
mov
aaa
stc
and
jne
xor
icebp
or
stc
or
out
push
dec
ret
inc
data16
xlat
jns
fwait
xor
addb
repz
shrl
popf
xchg
xor
lcall
sahf
xchg
test
in
sti
lret
mov
push
popf
ret
mov
popa
mov
xchg
mov
xor
push
xchg
and
xor
inc
dec
sub
xor
jne
push
lods
faddl
cs
xlat
in
lret
or
iret
xor
jl
lock
dec
push
adc
ss
jnp
mov
icebp
cmp
popa
mov
jns
popa
mov
jns
jg
jno
mov
push
cmp
inc
and
mov
fistps
xor
fistpl
popf
push
lods
pop
sub
pop
hlt
lods
test
inc
or
xchg
inc
subl
roll
and
xchg
sub
imul
int
enter
sarb
push
inc
pop
xchg
cmp
xor
mov
js
shrb
mov
in
xchg
inc
pop
and
out
add
fisttps
mov
xor
push
pop
inc
mov
xchg
ss
iret
outsb
shrl
sbb
sbb
xchg
pop
pop
enter
fmulp
mov
sub
dec
push
ja
int3
cmp
xorl
ror
int3
add
sub
lock
stos
mov
pop
pushf
mov
enter
in
xchg
jge
sbbl
jle
and
jne
mov
fcmovnb
push
popf
inc
loopne
dec
mov
stc
fs
inc
sbbl
jo
repz
add
inc
cmp
fnstenv
mov
lret
fidivrs
sbb
or
in
adc
pop
sub
and
adc
rorl
cmp
subl
ret
pop
fsts
mov
fisttpl
jnp
inc
rclb
inc
sbb
mov
call
xor
sub
and
scas
mov
mov
imul
popa
das
outsl
rorl
out
movsb
pop
mov
push
lea
add
dec
dec
fcmovne
fidivrl
fisubrs
cmp
je
setp
xchg
xchg
xchg
add
cltd
das
sbb
lds
mov
sub
loope
imul
xlat
mov
out
pop
shll
jo
jb
add
popf
dec
in
pop
xor
enter
jbe
dec
inc
lahf
xchg
dec
mov
mov
fmuls
dec
cmp
loope
pop
xchg
sbb
xchg
push
adc
cmp
into
std
nop
or
notb
xchg
cmpl
sub
pushf
inc
rol
sbb
jne
loopne
push
inc
adc
inc
cs
fisubl
pop
jbe
mov
aam
push
xlat
dec
fs
add
shr
arpl
cmp
push
int3
nop
pushl
popa
cli
xchg
pop
xchg
mov
into
or
insb
arpl
inc
sbb
mov
jmp
inc
sahf
stos
and
sub
sbb
jnp
cmp
push
mov
mov
aad
mov
out
imul
pop
test
mov
shrl
sbb
icebp
push
xchg
mov
dec
ficomps
ljmp
dec
dec
cmp
ja
sbb
stos
into
in
sbb
add
bound
scas
pop
daa
xor
gs
repz
cmp
sbb
out
mov
inc
int
push
stos
lock
xchg
adc
adc
mov
jecxz
add
pop
xchg
add
pushf
xchg
cmp
pop
pop
rorl
adc
sbb
sbb
loop
fidivl
in
lock
sti
lods
pop
add
ficoml
jmp
jg
push
mov
ficoms
xchg
adcl
mov
shlb
mov
or
js
add
mov
xor
lock
daa
xor
jae
pushf
es
mov
mov
cmpb
mov
xchg
dec
mov
stos
mov
ja,pn
dec
add
shll
ja
fyl2xp1
jp
jo
mov
xor
stc
sbb
dec
or
adc
inc
and
push
pop
andb
sub
push
jmp
imul
sbb
popf
cli
push
adc
sub
sar
jb
insb
adcb
xchg
loope
push
jns
les
or
pop
xchg
dec
pop
pusha
inc
jae
mov
mov
repnz
mov
orb
mov
mov
mov
push
jb
xchg
mov
and
adc
xor
or
cmc
shr
cltd
out
jge
xchg
cmp
xchg
adc
push
jp
sub
adc
pop
jno
cmp
inc
cmpsb
cwtl
cmp
loope
mov
mov
popf
pop
cmc
ja
repnz
inc
push
stos
lds
push
leave
jne
add
sbb
mov
cmc
lods
jns
aaa
or
mov
in
jno
loop
and
mov
mov
filds
dec
fildl
cmp
cmp
pushf
fcompl
push
xchg
icebp
aad
fstl
sbb
iret
dec
repnz
adc
xchg
aaa
aam
das
scas
mov
jns
jle
mov
hlt
xchg
mov
fldt
aam
pop
sti
mov
in
cmp
add
lret
xchg
lock
testl
lds
add
insb
addr16
push
mov
add
popa
insl
adc
je
and
in
stos
push
ret
out
mov
fstpl
insb
int
dec
sbb
stos
cmp
dec
and
add
test
push
insl
mov
pop
xchg
negb
jecxz
loop
imul
inc
sbb
cmp
inc
cmp
shrl
or
int
jnp
dec
fistpll
add
test
cld
gs
add
xchg
stos
mov
ds
cmp
in
cld
fwait
mov
fs
inc
mov
adc
inc
sbb
mov
cmp
mov
test
pusha
or
adc
xchg
mov
loope
loope
gs
cmc
insb
dec
imul
sbb
mov
inc
es
push
push
add
add
loop
jle
outsl
or
out
jae
repz
filds
and
sub
fstl
outsb
and
cmpsl
pop
dec
and
in
in
jne
jmp
and
cmp
out
pop
mov
pop
data16
mov
xor
movsl
inc
movsb
push
adc
sbb
movsb
pushf
mov
daa
ja
dec
mov
inc
or
das
iret
aam
and
jbe
mov
dec
int
js
push
inc
pushf
xor
int3
inc
xchg
cmp
cmpsl
mov
dec
jl
int3
push
int3
sbb
dec
outsl
or
mov
jo
xchg
loop
sbb
mov
dec
or
cmpsl
jmp
ds
inc
stos
scas
test
mov
jg
and
mov
and
mov
int3
repz
mov
mov
test
or
or
push
in
sbbl
mov
rolb
xor
jno
push
add
xchg
mov
xchg
jecxz
dec
leave
pop
int3
sbb
pusha
mov
shlb
inc
dec
mulb
dec
mov
movsl
scas
inc
adc
divb
add
xor
divl
icebp
popa
in
in
nop
loop
cmp
test
cli
dec
lret
and
dec
push
add
mov
sub
pop
aaa
js
mov
cmp
aas
xchg
imul
adc
jnp
inc
stos
jnp
in
lods
mov
mov
sub
ret
pop
or
ss
dec
and
lahf
and
pushf
cwtl
in
mov
xchg
lcall
lock
sbb
push
stc
shlb
mov
sbb
mov
mov
mov
int3
les
in
daa
inc
ja
lret
push
js
add
push
cltd
ret
jb
rcrl
pop
jno
nop
cltd
pop
sahf
orb
add
xchg
pop
sbb
icebp
enter
push
arpl
lock
adc
mov
div
mov
xor
push
sub
shll
or
cmp
stos
inc
inc
push
es
mov
or
sub
pushf
pop
sti
push
daa
sbb
out
hlt
test
sub
xor
test
pop
pop
in
ret
mov
pop
mov
arpl
sub
movsb
cwtd
pop
push
mov
jo
mov
inc
fisttps
std
xor
push
push
jae
sub
ret
ret
xchg
popf
mov
mov
out
rcrl
xlat
lret
fs
and
icebp
dec
push
add
mov
test
fisttpll
rep
insl
mov
movsl
loop
out
jae
add
mov
dec
sub
cmp
jmp
dec
outsb
dec
mov
jo
add
jmp
aam
nop
mov
xchg
inc
call
sbb
aad
out
cmp
dec
xchg
imul
or
out
lock
es
inc
je
mov
and
jno
push
fsubl
test
loope
lret
fdivrs
fidivs
cmp
iret
mov
js
cmp
xlat
test
scas
xor
mov
and
enter
push
mov
mov
adc
pop
incl
test
push
and
jmp
mov
adc
and
mov
insb
jg
andl
jecxz
imul
inc
cmpsb
movsl
cmp
ljmp
push
cmpsb
movsl
mov
aas
aam
insb
insb
mov
mov
adc
cmpsl
or
cld
dec
es
cs
jns
mov
lds
clc
aas
sbb
pushf
bound
cs
cmpsb
jae
cli
jo
hlt
cmp
push
ljmp
sbbb
lods
packuswb
adcb
iret
sarl
pusha
lret
jae
test
add
xor
fnstenv
add
cli
sbb
mov
aad
xor
jns
sbb
dec
cld
ss
pop
and
jnp
out
andl
sub
xor
clc
dec
mov
pop
mov
inc
or
pop
mov
inc
jo
repz
cwtl
sbb
cli
cmp
cmp
mov
out
and
or
cli
pop
dec
push
in
jge
insb
pop
in
mov
jge
inc
popf
xlat
rorb
outsl
inc
cmp
scas
mov
movsl
cmpsl
cld
out
push
outsb
lods
inc
ljmp
lret
out
and
xorl
in
mov
jge
orl
mov
fstps
hlt
fs
mov
int3
or
ficomps
sub
aam
add
push
pop
xor
or
sbb
faddl
push
push
and
xor
arpl
out
mov
xchg
pop
lret
jnp
sahf
xchg
push
outsb
mov
in
stc
xchg
lds
or
push
fwait
jmp
or
leave
xchg
leave
fbstp
xor
stos
sub
jb
out
xchg
lcall
inc
pusha
dec
mov
out
adc
clc
rorl
movsl
in
add
sar
insb
xchg
fwait
mov
dec
cmp
arpl
inc
adc
pop
jle
jae
adc
adc
jns
fisttpll
push
push
dec
xlat
sub
pop
ljmp
out
fs
xchg
xor
test
mov
cmpsb
inc
sbb
loopne
jle
push
cmp
out
dec
ret
cld
jle
inc
jnp
mov
imul
movl
push
pop
mov
inc
test
movsb
inc
insl
out
shrb
cmpsb
xor
shl
mov
sub
jecxz
or
push
imul
rol
pop
push
aas
or
arpl
xchg
ds
loope
or
std
gs
sub
clc
xor
mov
inc
ljmp
paddd
lods
test
dec
jo
arpl
mov
inc
mov
inc
cmpsl
mov
or
cli
jno
fcoms
fwait
ja
add
rcrl
jno
in
push
mov
popa
sahf
mov
fsubl
lea
rol
mov
mov
test
arpl
nop
rclb
lahf
mov
xor
repz
into
xchg
in
ficoms
setne
push
xlat
ljmp
in
pop
sbb
fwait
push
dec
add
jns
loopne
add
sub
adcb
out
sub
sbb
mov
jmp
jnp
and
sbb
mov
rclb
or
push
mov
sbb
add
and
inc
cs
fisttpl
adc
mov
dec
testl
fimuls
mov
cmpsl
movsl
xlat
mov
test
xchg
out
pop
jne
inc
aaa
push
daa
and
ja
addr16
cmc
xchg
mov
cmpsl
movsl
xlat
mov
test
xchg
out
pop
jne
inc
aaa
push
daa
and
ja
addr16
cmc
mov
scas
aad
movsl
xlat
mov
test
xchg
out
push
jne
inc
aaa
push
cs
jle
and
cmc
arpl
push
aad
movsl
xlat
mov
test
daa
gs
push
push
push
das
mov
pop
out
mov
test
hlt
mov
int
andl
sbb
and
push
dec
inc
dec
mov
popf
test
aam
les
jo
or
push
pop
inc
dec
lods
mov
pushf
in
std
std
in
int3
fst
int
cmp
jo
pop
cmp
xor
cmp
fstp
into
ljmp
fidivrs
rcr
inc
call
sbb
mov
xchg
add
in
sbb
push
or
shr
loop
sbb
insl
xor
mov
lods
movsb
insl
fisttpll
dec
mov
push
fmull
ss
sti
repnz
addl
mov
fcmovnbe
cld
icebp
in
cmp
les
adc
pop
mov
insl
aaa
lea
lods
dec
push
jge
push
int
lock
int
ret
add
add
fisubrs
gs
xor
movsb
mov
dec
mov
data16
out
inc
lret
cmp
add
cmp
je
movsb
lods
xchg
popf
xchg
in
in
aam
sub
sbb
jl
push
pop
pop
or
mov
loopne
nop
mov
test
xor
dec
push
sbb
add
xor
and
mov
movsb
shl
xchg
cmpb
jecxz
pop
and
push
jp
pop
adc
pop
sti
and
inc
sbb
cld
xchg
icebp
clc
test
mov
in
aam
int
cmp
add
je
fs
push
pop
inc
dec
mov
movsb
lods
xchg
popf
test
aam
int
cmp
add
je
fs
push
pop
inc
dec
mov
addr16
repnz
dec
fisttpl
clc
and
cs
pop
cmp
lock
call
sbb
scas
pop
repnz
bound
ret
cmp
test
jp
popa
push
lea
cwtl
dec
insb
idivb
mov
sbb
pop
enter
xorl
lahf
ds
dec
fsubl
leave
inc
fwait
insl
bound
pop
hlt
jb
loopne
stos
or
and
pop
add
and
mov
mov
ss
xchg
inc
in
push
dec
sbb
mov
mov
mov
popa
pop
shl
insl
dec
mov
pusha
jns
cmp
sahf
sbb
pushf
rcrb
mov
dec
sti
xchg
mov
enter
mov
enter
fwait
pusha
rorl
xor
fdivs
sub
or
adc
pop
jmp
adc
dec
popa
pop
ss
test
gs
and
mov
test
mov
fnstcw
mov
mov
icebp
mov
lahf
and
push
pop
inc
negl
jnp
daa
fsubrl
inc
mov
jmp
push
lods
push
sahf
incb
sub
icebp
pusha
push
das
cltd
sbb
mov
xchg
or
dec
out
cs
addr16
sbb
movsl
data16
jmp
ds
mov
test
mov
scas
xchg
ss
mov
cmpsb
pop
mov
sub
fidivrl
dec
push
lds
fwait
movsl
cld
sub
lds
loopne
push
mov
stc
les
add
inc
shrl
xor
mov
daa
push
scas
pusha
add
pop
and
inc
in
adc
adc
xor
shlb
shll
out
xor
add
imull
mov
add
pop
rcr
and
jnp
xchg
dec
loopne
cmp
cmp
test
sub
mov
fistpl
ds
call
push
es
cmp
addr16
xor
mov
and
fdivs
push
shll
cli
sub
xor
jmp
mov
and
push
sub
and
outsb
iret
ror
loopne
mov
lods
out
dec
dec
divl
xor
test
nop
xor
cmp
in
movsl
mov
loopne
fsubl
jle
push
loopne
aad
dec
flds
subl
push
lods
dec
add
xor
inc
ja
inc
push
fcoms
mov
jbe
pop
int
xchg
add
push
add
fsubl
enter
pop
add
unpcklps
decl
mov
repz
mov
add
andb
push
bnd
dec
out
movsl
push
dec
mov
notl
lea
xchg
aad
arpl
or
jge
sub
imul
sbb
mov
push
mov
and
inc
lret
lods
sbb
mov
je
lahf
add
sbb
dec
or
or
add
out
out
lea
arpl
insb
cltd
mov
sub
xlat
add
push
in
call
insb
fiaddl
jge
push
xchg
sub
std
rcrl
xchg
movsb
xor
mov
icebp
dec
add
sbb
cwtl
icebp
decb
shll
or
icebp
in
push
insb
in
add
mov
imul
rorl
jb
push
mov
aad
jl
add
leave
or
fs
icebp
mov
jg
test
mov
lea
iret
and
packuswb
jg
sub
mov
and
xchg
jge
lcall
sbb
push
cmp
add
pop
adc
mov
icebp
clc
xor
inc
inc
rol
pop
addr16
pop
push
mov
mov
mov
shrb
push
sbb
push
lea
add
in
pop
pusha
shl
cmp
cmp
mov
xlat
xor
out
push
inc
pop
lcall
cltd
imul
mov
mov
mov
outsl
popa
mov
scas
aam
cmp
test
subl
mov
fildl
cmc
mov
mov
push
test
popa
test
jecxz
push
xchg
sub
jae
stos
iret
inc
push
mov
popa
rolb
in
adc
fldcw
mov
adcl
pop
adc
pushf
dec
pushf
pop
add
xchg
add
cs
inc
insl
arpl
cmpsb
int3
xchg
movsb
push
pop
lret
popf
hlt
add
mov
cmpsb
dec
pusha
int3
sbb
outsl
mov
jbe
jo
xchg
sub
movsb
je
jge
sbb
outsl
inc
shlb
xor
sub
pop
in
xlat
icebp
jmp
lods
fistl
test
incl
call
popf
jp
push
sub
insl
daa
scas
jmp
sub
lcall
add
cld
pop
imul
repz
push
addr16
inc
pop
add
pusha
out
bound
stos
leave
repz
ja
or
in
jnp
ret
or
sub
and
mov
ja
std
add
pushl
push
pop
popf
add
jae
mov
pop
xchg
lods
mov
rol
les
mov
adcl
mov
adc
cwtl
cs
dec
lea
sahf
pushf
xor
cmp
gs
dec
bound
lret
pop
and
jmp
push
repnz
mov
pop
test
sub
aas
xchg
rcrb
mov
dec
bnd
sbb
cmp
test
mov
dec
rep
cs
fisubrl
stc
mov
cmp
or
or
out
std
inc
push
mov
pop
push
ror
ja
out
lea
outsl
mov
je
jno
jle
lock
xchg
int
dec
pop
push
push
nop
nop
xlat
push
and
mov
or
pop
js
xor
fucomi
lea
call
aaa
daa
clc
movsl
pop
xlat
inc
incl
and
cmp
gs
jle
in
mov
lea
scas
mov
ja
sub
xchg
fwait
sbb
xor
push
dec
lods
xor
insb
push
sbb
adc
scas
sub
cmp
orps
loope
or
jg
dec
in
lahf
in
xchg
or
out
repz
inc
pop
fldcw
pop
dec
dec
out
inc
xchg
mov
sub
ds
aaa
popf
pop
mov
xchg
out
imull
call
add
repnz
push
jge
test
sbb
pusha
or
hlt
jecxz
mov
stc
add
mov
mov
decb
out
cmp
sub
sub
or
push
ljmp
adc
inc
mov
dec
rorb
or
jae
adc
jecxz
sbb
int3
inc
insb
jmp
daa
cmp
mov
loopne
inc
mov
psubsw
dec
and
test
add
lahf
jo
dec
aad
cltd
aad
and
in
mov
sub
dec
jmp
bound
xchg
pop
push
movsb
mov
mov
mov
add
std
pop
inc
hlt
mov
gs
jle
dec
insl
or
inc
movsb
jge
in
add
jne
xlat
cmp
cmp
or
xchg
mov
xor
jmp
pop
lret
add
xor
test
cmpsl
in
adc
cmc
aad
jecxz
push
fidivrl
test
dec
adc
jbe
test
dec
dec
pop
sbb
jns
movl
daa
sti
xchg
adc
mull
sbb
les
jne
int3
pusha
pop
jmp
in
clc
es
or
add
into
jb
fbld
push
out
in
ds
push
in
or
ds
pop
dec
sahf
or
jo
cmpsl
in
pop
in
movsl
hlt
xor
mov
jg
inc
outsb
mov
push
inc
orb
xchg
mov
aad
repnz
inc
dec
mov
shl
scas
mov
cmp
les
mov
cmp
call
dec
sub
je
loopne
icebp
dec
ret
push
and
inc
xorl
mov
sti
dec
pushf
lock
mov
add
sub
lods
fwait
scas
fnsave
mov
mov
dec
mov
ja
fidivrl
sbb
xchg
cmpsb
stos
jb
xor
pop
das
xchg
cmpsb
xchg
inc
int
and
sbb
jge
out
inc
fwait
inc
rcll
adc
mov
cwtl
imul
in
xchg
in
and
pop
push
sub
push
lea
mov
fisubl
insb
jecxz
push
inc
cltd
and
and
aas
cmpsb
sbb
aas
mov
sbb
fcoml
sar
sbb
rcrl
loop
mov
cmpb
jb
imul
pushf
fldenv
jne
cld
add
and
lods
inc
loope
cmp
test
dec
cmp
xor
jno
and
div
hlt
cli
mov
test
cmpsb
fcomip
jnp
hlt
out
int
sbbl
inc
lds
mov
add
jb
aad
dec
inc
push
js
addb
dec
call
inc
jns
xor
stos
divl
cltd
lahf
mov
gs
std
sahf
pusha
jb
imull
cwtl
push
imul
roll
mov
test
in
enter
mov
sbb
lds
xchg
out
sbb
loop
inc
call
inc
mov
mov
daa
out
fnstsw
ds
dec
inc
cmp
sbb
cs
pop
dec
adc
pop
nop
and
out
hlt
dec
mov
enter
sbb
imul
sbb
pusha
hlt
sarl
mov
pop
ds
cmp
fisubrs
enter
push
aas
mov
inc
movsl
jo
cmp
xchg
adc
or
xorl
pop
out
sbb
das
ja
iret
imul
push
lds
loop
mov
jnp
and
stc
ds
jne
dec
ret
in
jp
insl
xor
les
mov
loop
sbb
stos
and
subb
stos
sub
stos
dec
stc
repnz
cli
psubsw
xchg
rcll
xchg
xchg
sti
outsb
mov
adc
mov
out
mov
inc
dec
add
in
mov
push
clc
ljmp
jl
dec
shl
sub
cmovbe
cli
jl
shlb
enter
mov
jp
push
mov
jnp
sub
into
sahf
and
xchg
aas
mov
jb
out
dec
das
ds
insb
mov
xchg
in
ret
cmp
fdivrl
fldcw
sbb
jo
dec
dec
data16
imul
movsb
mov
test
leave
in
out
enter
fbstp
int
jle
out
cmpsb
mov
cmp
icebp
sbb
cmc
lock
fnsave
sub
push
push
ficoms
aaa
pop
xchg
or
or
fdivl
pop
dec
xchg
or
jecxz
xor
lods
jmp
fs
xor
lods
sub
rorb
shll
jo
in
lret
lds
jbe
inc
dec
mov
in
stos
lret
incb
xchg
add
jno
jle
push
ja
popa
mov
xor
out
test
fnstcw
adc
ds
popa
mov
lcall
sti
push
loopne
adc
lds
or
mov
cwtl
push
dec
addr16
pop
lret
sar
test
test
lahf
xchg
ds
mov
movsl
jno
sahf
in
aam
mov
mov
dec
xchg
lds
xor
mov
mov
fwait
mov
test
fs
cmpsl
bound
insl
mov
push
push
sub
mov
js
mov
pop
push
out
aas
popa
fdivrs
out
lock
lahf
cmpsb
mov
add
int
inc
clc
or
fistl
jbe
inc
leave
pop
sub
adc
add
fs
pop
pop
sahf
mov
xor
ret
xchg
test
in
pinsrw
ror
iret
arpl
lea
or
xchg
adcb
mov
jbe
mov
or
hlt
inc
fbld
or
pop
gs
pop
dec
dec
jmp
hlt
push
and
out
jnp
cmp
inc
or
jmp
mov
push
lods
dec
sub
add
push
mov
out
loop
sbb
ss
mov
aas
jge
imul
imull
outsl
xchg
je
imul
inc
rcrl
jmp
iret
push
sub
xchg
test
or
out
shlb
jge
mov
out
imul
and
movsl
negl
inc
cmc
adc
pop
ret
mov
jl
lret
in
push
mov
xor
mov
stos
inc
int
fldenv
or
cwtl
push
insb
lret
pop
push
fsts
xor
mov
lods
test
cmp
lcall
mov
test
pop
dec
scas
and
scas
pushf
scas
jmp
scas
sbb
cmp
into
movsl
jecxz
add
sbb
xor
in
insb
pop
fisubrs
pop
cld
and
mov
xchg
test
sahf
push
adc
daa
in
inc
mov
repnz
pop
es
andl
mov
push
leave
mov
push
addr16
outsl
popf
enter
lods
mov
fs
mov
scas
sub
cmc
add
mov
lods
dec
fmull
xchg
adc
incb
mov
std
mov
push
data16
adc
add
and
jns
int
jo
mov
mov
inc
orl
cmp
jg
pop
sub
inc
mov
and
xchg
test
lods
pusha
jbe
test
lret
stos
jle
add
jle
leave
test
dec
adc
sahf
leave
cld
adc
add
icebp
rcll
addl
fldcw
pop
test
out
and
lock
sbb
and
out
addl
shrl
push
mov
jbe
add
cmp
int3
nop
and
or
add
dec
jge
xchg
arpl
push
cmp
sub
data16
mov
mov
add
and
repz
cli
xchg
adc
pop
mov
inc
ds
out
pop
push
pusha
mov
add
mov
sub
cmp
rolb
in
xor
test
cvtps2pi
in
popa
xchg
fildl
xor
pop
sti
stc
adc
pop
adc
imul
rcrb
sbb
inc
decl
dec
mov
xorl
xchg
repz
in
adc
stc
into
cmp
dec
daa
mov
push
push
dec
pop
xor
stos
inc
cld
and
imul
arpl
add
nop
icebp
out
mov
and
adc
sub
dec
lret
pop
xchg
cmp
dec
pop
mov
movsb
cmp
shl
cmp
fs
aam
test
xchg
cwtl
sub
in
arpl
or
cld
mov
jl
mov
sub
mov
ja
jb
sbb
lea
inc
dec
repnz
in
jmp
popa
test
add
scas
ljmp
stos
js
xchg
arpl
shll
xchg
pop
pop
lock
ljmp
decl
mov
mov
gs
sbb
addr16
or
mov
or
sbb
pop
ljmp
clc
hlt
pushf
mov
mov
cmp
mov
mov
std
jbe
xchg
mov
mov
in
add
clc
popf
xchg
jg
and
adc
movsl
inc
mov
test
xor
insb
jmp
inc
sbb
jbe
mov
cmp
sarb
xor
adc
daa
arpl
mov
dec
sbb
movsb
push
sbbb
popa
mov
pop
inc
mov
idiv
mov
dec
addl
hlt
jbe
dec
fcmovbe
dec
pop
add
cwtl
fstps
or
add
adc
pop
outsb
pop
hlt
fstpt
iret
ja
xchg
add
and
sub
jbe
outsb
push
pop
out
rol
imul
cmp
dec
and
dec
xchg
jg
push
inc
aas
icebp
in
shrl
cld
sub
imul
test
or
push
inc
loope
add
dec
in
sub
leave
cwtl
jge
push
shll
cli
adc
pandn
pushf
cld
icebp
lods
sbbb
mov
loop
mov
out
sbb
pushf
test
dec
xchg
jle
sub
lahf
adc
jbe
mov
push
mov
add
push
arpl
jl
mov
sub
dec
les
mov
data16
std
testl
xor
mov
arpl
lret
xchg
mov
popa
test
aad
out
sub
xchg
sti
xor
xor
pop
push
jecxz
popa
xchg
jne
clc
mov
cmp
mov
pop
dec
cmp
movsl
out
iret
push
pop
call
inc
fistl
dec
sarb
lret
push
jmp
push
mov
xchg
mov
push
fidivrl
sub
cmc
out
inc
sub
sbb
xchg
loopne
and
test
add
mov
jecxz
xchg
ja
shlb
arpl
mov
ret
jno
sti
push
pop
aam
sti
cld
mov
shl
sbb
add
xor
mov
mov
lcall
jle
insl
orb
mov
test
das
cmp
pop
cmpsb
sbb
scas
adc
dec
xor
mov
movsb
xor
sub
in
pop
sbb
out
negb
cmpl
outsb
adc
lcall
shll
push
dec
mov
add
fcmovnbe
adc
jmp
or
rorb
add
sub
mov
mov
dec
ljmp
je
jp
shrl
bnd
test
popf
push
and
mov
xchg
scas
push
clc
lcall
push
cmpsl
hlt
sarb
lret
dec
sub
aas
add
xor
jecxz
pop
fmuls
push
inc
fcompl
out
int
filds
mov
cmp
xchg
inc
mov
cmp
sbb
xchg
jecxz
fs
ret
popf
mov
lret
mov
sbbb
mov
mov
mov
push
xchg
push
mov
popa
fimuls
cmp
pop
ja
std
aam
push
jnp
into
and
jno
aam
aad
dec
xchg
fiaddl
cmp
cmp
cmc
aas
pop
aam
out
aaa
out
mov
in
sub
sub
gs
test
sti
das
mov
add
outsb
outsl
sub
lret
je
clc
insb
aaa
pusha
hlt
xchg
into
mov
sbb
mov
out
jo
lods
lds
lcall
push
ljmp
enter
ret
fcmovnu
push
das
pushf
push
lds
push
jbe
test
aas
in
sub
jns
add
xchg
es
xchg
popa
lock
mov
dec
sub
pop
imul
shll
pop
xchg
jp
fst
pop
loop
jae
add
es
sub
push
test
hlt
call
and
lods
in
out
daa
xchg
popf
cmp
ret
xchg
adc
inc
xor
pushf
cmpsb
add
gs
enter
mov
jl
or
sahf
and
sahf
clc
stos
or
dec
inc
mov
shl
inc
bound
push
stc
movsb
or
bound
cld
jecxz
cmp
sub
call
rolb
push
pop
pop
jnp
dec
out
cmc
adc
and
cmp
jge
sub
arpl
xor
mov
xor
dec
or
pop
sub
pop
mov
rorb
or
adc
xor
outsb
push
dec
push
lds
call
rcrl
nop
test
into
aam
fwait
dec
int
pushf
daa
sbb
sub
fisttps
mov
xchg
xor
das
in
cltd
aam
mov
daa
and
scas
lcall
lds
mov
inc
in
jae
clc
loopne
pop
mov
mov
inc
jmp
add
dec
and
int
xorl
sbb
sbb
fistps
sbb
inc
cmp
dec
xchg
xor
push
mov
mov
pop
xchg
pop
inc
ljmp
mov
cs
xchg
fxch
dec
mov
inc
jno
stc
test
push
mov
or
inc
popf
lods
pop
sbb
xchg
int
push
mov
jp
loop
imul
xchg
cltd
mov
out
popa
adc
xor
orb
test
mov
repz
aam
add
loope
stc
shr
lret
js
mov
ficoms
push
lds
adc
stc
jecxz
pop
scas
andl
movsb
xlat
lret
jb
lods
stos
pop
sbb
adc
icebp
rol
or
aaa
dec
cmp
out
pop
lret
sbb
rcrl
andl
add
cmp
dec
dec
cmp
xchg
int3
cmp
dec
scas
psubsw
adc
jno
push
jecxz
lret
pop
sahf
mov
hlt
pop
push
jno
mov
mov
or
sti
or
out
testl
xchg
movsl
insl
cmp
int3
lcall
xor
idivb
xorb
int
xchg
push
mov
pusha
mov
cli
inc
cli
mov
sub
pop
cmpsb
or
adc
mov
inc
push
xchg
loope
sbb
and
cmpsl
mov
jp
loope
dec
inc
orl
popf
test
aam
int
cmp
add
je
fs
push
pop
inc
dec
mov
movsb
lods
xchg
popf
test
aam
int
cmp
add
je
fs
push
pop
inc
dec
mov
movsb
lods
xchg
popf
test
aam
int
cmp
add
je
pusha
insl
push
pop
jne
cmpb
hlt
std
in
push
fldl
cmp
add
add
in
xchg
stos
mov
in
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
leave
ret
sub
movsb
jecxz
repz
cld
nop
sbbl
and
xor
inc
add
and
ret
xchg
shll
aam
in
hlt
mov
inc
adc
or
jae
add
adc
xor
adc
and
jb
aam
pushf
xchg
enter
add
js
inc
pop
push
jae
inc
or
pop
xor
ret
mov
loopne
ret
mov
loopne
divl
sub
mov
cwtl
and
inc
icebp
mov
cmp
insb
iret
movsl
jo
subb
inc
jbe
jmp
jae
aam
test
movsb
adc
lahf
dec
push
movsl
inc
nop
jecxz
pop
inc
mov
lret
add
rcll
in
push
fldcw
loope
lds
testb
aas
xor
lret
and
imul
add
imul
adcb
mov
xor
mov
aaa
mov
adc
faddl
mov
pop
test
or
sub
popa
or
push
and
push
push
aam
aaa
xor
jecxz
repz
dec
mov
inc
xchg
arpl
jae
add
and
pop
imulb
lcall
xchg
jecxz
es
daa
je
push
xor
adc
xor
ret
sbb
jecxz
jg
lods
lret
mov
mov
xchg
inc
add
aaa
pusha
xor
inc
xor
adc
cmc
xchg
addl
adc
and
xor
inc
add
and
ret
xchg
shll
aam
in
hlt
mov
inc
adc
and
xor
inc
add
and
ret
push
lcall
mull
cmpsb
imul
pop
mov
xchg
xorl
pop
dec
push
imul
repnz
ljmp
xlat
jmp
xor
ret
shlb
adc
pop
or
stos
jecxz
push
mov
xchg
icebp
jge
mov
call
popa
in
xchg
xchg
out
xor
nop
inc
push
sbb
xor
dec
or
add
pop
je
xor
arpl
push
inc
push
jae
cld
mov
adc
pop
ret
or
mov
push
insl
loopne,pt
pushf
imul
loop
mov
mov
divb
test
pop
adc
sti
mov
es
mov
pop
inc
je
xor
lret
int3
xor
dec
and
push
and
sbb
and
jae
or
and
jle
mov
fstp
jbe
repz
fldenv
arpl
cltd
and
sub
stos
loope
popf
ljmp
out
add
shlb
or
push
sbbl
pop
sub
sqrtps
aas
cmc
nop
sub
xorps
inc
imul
les
mov
mov
mov
addr16
pop
sbb
sub
jno
dec
jecxz
daa
imul
mov
add
mull
dec
aas
ljmp
push
fisubs
and
sahf
out
out
lds
jb,pn
movsb
outsl
int
loop
mov
daa
daa
xor
andl
out
inc
pushf
movsb
xor
sbb
lcall
lock
mov
aaa
inc
dec
cld
and
cltd
fdivs
lock
inc
dec
jbe
iret
pop
fwait
outsl
adc
pop
filds
mov
loop
jl
xor
fnstcw
ror
cmp
repz
fs
fs
pop
not
mov
addr16
push
jne
js
stc
loop
push
cmp
xor
stc
inc
mov
lods
movsb
jb
inc
fadds
xchg
loope
cmpl
and
sub
enter
dec
lret
dec
into
popa
movsb
or
cmpsw
ja
mov
add
mov
test
test
pop
lahf
pop
aad
test
and
adc
or
mov
or
daa
setns
push
enter
cmp
add
adc
arpl
and
in
dec
aam
sub
out
in
and
push
sub
test
mov
movsb
mov
jg
mov
pop
add
jecxz
repnz
movsb
popf
bound
cmp
mov
inc
jae
scas
test
pop
shrb
fstl
lods
int
adc
in
lock
add
clc
jmp
push
data16
pop
lea
xor
loop
lods
aad
xor
inc
adc
pop
jno
sub
insb
jb
and
add
jg
xchg
mov
je
test
lea
jmp
shlb
cli
int3
mov
jnp
in
popa
movsb
xor
mov
data16
mov
stc
dec
mov
inc
loop
sub
or
add
push
out
in
out
cmp
pop
lcall
cmp
adc
es
push
daa
xor
jns
lds
jbe
push
or
xchg
ror
xchg
adc
jg
inc
xchg
xchg
or
int
xchg
in
dec
cmp
jle
sub
int
push
mov
adc
and
loop
sub
mov
jle
push
adc
jne
xor
lea
cwtl
sub
inc
xchg
pop
push
lcall
jne
jg
jle
in
adc
or
and
xchg
xor
aaa
and
adc
aaa
les
xor
push
jle
lods
addb
leave
cmp
cli
daa
int
es
out
dec
rcrl
sbb
mov
jecxz
pop
out
xlat
ljmp
push
dec
lret
cmp
and
addl
dec
clc
xchg
mov
adc
mov
ret
pushf
jp
mov
sub
test
bound
sub
pop
ret
gs
repz
push
mov
popa
fcoms
aad
cmp
dec
jl
pop
leave
or
cmp
jl
iret
clc
dec
sahf
adc
fldcw
sub
fsts
stos
and
inc
mov
sbb
negb
and
sub
movsl
lahf
loope
push
es
rcr
xor
jae
adc
xor
ljmp
mov
data16
ficomps
mov
pusha
out
cmp
pop
aad
outsl
pop
add
jecxz
loope
jbe
test
in
push
lahf
in
shrl
outsl
lcall
push
clc
mov
pop
push
pusha
mov
adc
test
mov
inc
mov
jge
pop
jp
xchg
cmpsb
or
inc
cmc
iret
push
lock
mov
jb
dec
adc
jecxz
cli
sub
scas
lods
cmc
or
mov
push
insb
aad
pushf
nop
and
sub
jo
add
arpl
hlt
add
mov
pop
add
cmp
cld
filds
insl
xor
xor
sarl
add
fildll
sbbl
sti
inc
int3
test
sub
ljmp
pop
mov
popa
or
out
pop
ret
shrb
fldenv
push
xchg
pop
insl
ljmp
or
dec
arpl
jmp
pop
mov
pusha
bnd
lahf
sbb
inc
test
cli
insb
daa
mov
jp
jmp
repnz
aaa
xchg
jb
dec
xchg
adc
push
xlat
movsb
pushf
arpl
jl
cltd
sbb
jge
mov
jnp
sbb
sub
cmp
cmp
shlb
sti
cmp
or
inc
push
cmpb
fs
ret
cmp
fisubl
add
mov
inc
lahf
test
outsb
xor
dec
jg
lret
adc
rorl
cmc
xor
fucomip
les
adc
xor
inc
cmp
sbb
and
pusha
icebp
xchg
push
cmp
lods
xchg
imul
xlat
pop
or
push
dec
xchg
mov
fsubrl
or
leave
mov
add
icebp
ljmp
push
into
jmp
shlb
push
pop
and
push
adc
mov
clc
lds
test
add
cwtl
inc
or
aad
lcall
popa
mov
fnstcw
xor
push
pop
in
fidivl
ja
in
jae
out
lods
xchg
xchg
fxch
sub
scas
adc
imul
addr16
aam
mov
stos
dec
jns
lret
stos
sbb
mov
mov
fsts
rorb
jmp
xchg
out
cli
jp
js
pop
mov
pop
add
cltd
inc
fidivrs
xchg
roll
out
loope
mov
out
int3
subl
aam
shl
mov
ljmp
xor
inc
in
sahf
xor
jb
leave
jmp
push
imul
mov
fidivrs
divb
addb
je
sbb
insl
pop
bound
mov
in
loop
sub
mov
vmovsd
push
mov
xchg
ljmp
sbb
popa
mov
test
sub
fstps
cmp
push
cmp
lods
ss
addl
cmpl
lock
sahf
insb
xchg
xorb
mov
or
xchg
fcmove
dec
inc
stos
push
cmc
arpl
sub
mov
xor
add
scas
cmp
mov
jl
and
push
lock
and
cld
scas
inc
mov
or
inc
sub
dec
or
mov
clc
imul
cmp
mov
aam
push
roll
add
add
test
imul
mov
pop
mov
pop
orb
popf
xor
xorl
pop
popa
andl
ja
iret
mov
pop
or
repz
xor
test
mov
cmp
inc
imul
cwtl
fyl2x
cmpb
mov
shl
dec
jno
sbb
cltd
cli
jns
call
rorb
adc
inc
cmp
pop
sbb
cmp
cmp
in
mov
outsl
insb
aam
sbb
stos
les
xchg
cltd
dec
hlt
scas
fld
repnz
jo
ret
mov
lds
jecxz
pop
inc
sub
fsub
add
xchg
in
arpl
jno,pt
and
fsubrl
out
pop
nop
dec
lods
jne
mov
out
lahf
repz
mov
out
mov
cld
test
and
leave
mov
aam
jmp
push
lahf
ja
jbe
aas
daa
sub
mov
pop
push
cmpsl
push
repnz
and
es
mov
xchg
push
adc
pop
add
dec
arpl
inc
fisttpll
jo
fiaddl
xchg
push
push
je
gs
fdivl
xor
push
cwtl
mov
add
xchg
imul
js
ja
inc
cmpsl
push
pop
push
or
ljmp
pop
push
sbb
adc
sbb
rcrl
fstpt
ljmp
insl
jnp
pop
out
mov
and
shll
mov
sub
add
in
fbld
lods
mov
dec
mov
stc
icebp
cwtl
lods
flds
xchg
adc
adc
dec
mov
jbe
dec
add
mov
fimull
lock
jne
xor
aas
leave
jl
and
clc
jp
pop
in
xchg
and
xchg
cmp
bound
cli
mov
call
lret
pop
fstps
cmpsb
dec
mov
call
push
fstl
pusha
inc
push
cmp
scas
pushf
push
jo
les
dec
adc
push
or
ret
andl
jae
stc
repz
push
xchg
pop
xchg
push
sbb
rolb
pop
sub
out
sahf
jb
pop
iret
add
push
sub
add
lea
push
xchg
fucomi
mov
mov
sahf
jecxz
mov
out
pop
xorb
imul
dec
jge
mov
mov
addl
arpl
ljmp
imul
cmc
mov
inc
in
test
mov
cltd
addl
mov
sarl
mov
sub
mov
jae
inc
cwtl
add
push
cld
pusha
mov
jle
shrb
in
lds
nop
inc
aad
scas
xor
dec
ret
xor
fsub
push
out
xlat
xchg
xorb
insl
add
xor
repnz
sahf
inc
jmp
mov
pop
shrb
pop
adc
je
scas
and
lcall
sub
push
jne
sbb
scas
leave
jno
jne
pushf
lahf
sbb
mov
xor
testb
cmp
mov
and
pop
add
xor
data16
scas
cmp
not
xor
cmp
adc
add
pop
lret
push
inc
sub
sbb
fs
mov
adc
loope
fisttpl
pusha
add
repnz
pop
sti
inc
lds
fisubs
xor
idivb
or
fdiv
fs
xchg
daa
out
lcall
and
fs
out
lds
xlat
cltd
repz
push
lret
lret
clc
dec
fisttps
insb
and
dec
mov
cmp
pop
mov
insl
jns
out
fbstp
xchg
push
cmpsb
clc
push
fcmovnu
or
xchg
cmp
mov
hlt
or
pop
roll
cmc
loop
push
pusha
lcall
mov
or
adc
dec
fwait
andps
mov
lahf
mov
ret
sub
int
inc
or
or
call
mov
adc
mov
in
imul
jle
and
pop
clc
or
jmp
ss
cmc
repz
sbb
insl
push
in
mov
dec
cmp
call
push
lds
push
cwtl
rcll
dec
rolb
sub
and
cld
mov
ds
das
jae
sbb
fucom
fs
leave
cld
into
xchg
dec
inc
repnz
pusha
in
mov
jo
or
pushf
fwait
mov
cmc
push
fnstsw
xchg
fwait
aas
fnstenv
data16
outsb
push
lods
jg
cmpsb
sbb
sbb
cs
pusha
jp
out
add
ljmp
divb
lahf
adc
or
inc
pop
add
inc
lock
xlat
push
adc
pop
mov
fwait
fs
xchg
rcrb
or
sub
jb
ffree
dec
xchg
xchg
adc
shll
pop
call
iret
jbe
fbld
popa
lock
insl
pop
lds
add
outsb
adc
add
pop
icebp
lock
xchg
jg
push
nop
mov
and
les
mov
in
push
cs
sbb
rcll
or
dec
imul
push
fldt
push
in
movsl
mov
sbb
or
outsb
push
inc
pop
int3
sbb
mov
adc
jno
sbb
jge
mov
sub
inc
add
add
mov
fsubl
xor
notb
pop
xchg
dec
cmp
popl
xchg
daa
push
and
jl
pop
int3
sahf
add
mov
dec
stos
sbb
xor
and
out
jmp
stc
push
mov
push
scas
and
xchg
std
dec
cld
mov
pop
enter
xchg
lock
jle
jle
sub
sbb
cwtl
xchg
nop
xor
mov
shll
leave
ja
adc
add
rcll
ret
push
inc
stos
lock
std
mov
lods
out
lds
imul
pop
incb
mov
ficoml
adc
mov
lahf
scas
mov
inc
push
xchg
inc
xorb
cs
mov
pop
dec
fwait
jnp
in
cld
call
sub
pusha
out
xchg
sbb
out
pushf
lock
arpl
in
mov
pushl
fsub
sub
push
stc
lret
adc
addr16
data16
into
fdivs
imull
out
jns
adc
mov
inc
inc
pop
adc
fcomps
and
sub
jp
or
push
push
cli
std
mov
fdivrl
push
mov
push
cmp
jl
pusha
mov
xor
push
sahf
lcall
and
inc
sbb
aaa
dec
test
push
mov
mull
inc
jge
test
mov
inc
das
enter
sub
adc
loop
int
daa
int
mov
sbb
sbb
jmp
shl
mov
push
cli
adc
sahf
dec
aas
cmpsl
cmp
or
mov
jmp
add
jo
stos
push
sub
xor
je
adc
xor
leave
inc
add
mov
jmp
jmp
and
xchg
test
negb
jno
pop
sub
iret
pop
stos
mov
and
xor
mov
lcall
mov
xchg
pop
mov
cli
push
push
test
out
jle
or
pop
nop
jle
jae
jb
sbb
lods
sbb
out
push
movups
or
mov
negl
mov
divb
lods
mov
sbb
stos
cs
dec
cwtl
or
fldenv
pop
jl
enter
cmp
jns
je
mov
xchg
sbb
mov
cmp
jg
mov
fwait
add
mov
add
imul
mov
int
sbb
xorl
out
mov
fidivrl
stc
enter
push
inc
stos
call
mov
pop
aad
dec
fisubs
rcrl
ds
jae
push
mov
scas
fmul
jle
cmp
es
aad
outsl
sbb
dec
movsb
inc
ss
push
out
popf
xor
push
mov
test
and
mov
in
movsl
aas
adc
ja
push
in
loopne
xor
xchg
lods
mov
inc
popa
fldl
xor
inc
dec
ret
imulb
ret
jb
repnz
jl
xchg
sub
add
sarl
outsl
sbb
xchg
dec
addr16
xchg
push
or
pop
aam
add
stos
dec
cmp
int3
js
les
push
mov
int3
adc
pushf
roll
ja
mov
inc
cmc
fidivrs
xorl
in
mov
test
mov
jmp
mov
cmp
adc
hlt
sub
aad
sub
out
ja
add
insl
stc
and
push
loop
or
mov
sahf
loope
sbb
loop
sbb
imul
fs
cmp
fstpt
stos
xchg
dec
push
mov
push
in
push
insb
hlt
add
push
icebp
dec
jno
mov
add
enter
and
out
mov
in
push
ds
or
in
loop
addr16
pop
sbb
mov
mov
xlat
addl
pop
jmp
daa
xor
inc
jbe
dec
repnz
cmp
je
andb
inc
mov
cmp
xchg
push
jp
in
mov
xchg
adcl
jb
adc
mov
inc
cwtl
test
mov
negl
out
mov
in
push
daa
xchg
mov
out
out
mov
push
out
mov
lcall
sub
mov
loope
xchg
popf
mov
sbb
dec
push
cmpb
iret
sub
dec
clc
gs
cmp
pop
loope
shlb
cmp
ja
ja
lea
push
xor
lods
pop
ja
push
pop
inc
pop
mov
mov
xorl
pop
mov
xor
sahf
cwtl
repz
inc
push
cmpsb
adc
pusha
addr16
pop
sbb
mov
sub
into
ljmp
stos
cmp
push
insb
repnz
cmp
inc
leave
and
or
lcall
les
lds
mov
out
sbb
and
ljmp
addl
xchg
lods
sub
fidivl
test
inc
cmp
add
scas
shrl
ds
mov
test
dec
hlt
mov
mov
mov
jmp
orb
sub
aaa
cmp
rolb
xor
jnp
ds
movsl
push
sbb
inc
outsl
outsb
in
jg
outsl
xchg
cwtl
sahf
pop
pop
push
xchg
cmp
nop
lock
cmc
insl
mov
mov
mov
dec
movsl
enter
mov
idivb
or
add
sbb
insl
out
std
push
jns
aam
push
mov
pop
cli
lret
arpl
xor
lahf
and
pop
insl
fsubs
jb
rorl
lret
xlat
and
mov
es
mov
jne
inc
popa
repz
mov
fdivrl
or
cmp
xor
mov
subb
pop
in
xor
pop
mov
mov
test
pusha
aad
fucomip
ljmp
jo
test
pop
lods
pop
sahf
adc
jmp
sbb
push
shll
andl
shlb
inc
sbb
aam
push
icebp
push
repz
out
test
xor
dec
in
xor
lods
leave
ret
adc
xchg
push
cld
and
jno
das
sbb
fsub
mov
xchg
sub
mov
push
sbb
pop
jcxz
jle
push
xor
mov
scas
ja
jo
push
mov
ficomps
mov
sti
movsl
mov
push
cwtl
jae
sbb
and
mov
in
xchg
push
loop
mov
aaa
jge
dec
aam
iret
add
int3
leave
in
cmpsl
lea
mov
push
mov
loopne
adc
pushl
mov
adc
cmp
and
imul
cmp
adc
or
xor
cmpsl
repz
push
xchg
xchg
mov
pop
add
orb
sbb
out
rorb
fwait
rdpmc
mov
mov
mov
mov
adc
and
sub
lret
stc
xchg
dec
les
push
fiaddl
cmp
inc
inc
jp
lahf
lret
inc
add
aad
out
adc
lahf
inc
mov
ret
pushf
hlt
mov
xchg
fmull
push
pop
cmp
push
data16
lahf
cmc
jl
adc
sub
dec
push
mov
push
out
outsb
test
pop
jge
push
inc
mov
scas
dec
xchg
repnz
mov
mov
mov
mov
sub
nop
adc
mov
nop
mov
shll
shlb
aas
pop
inc
add
jp
mov
enter
adc
sbb
bound
xor
popf
daa
imul
dec
mov
cli
lods
xchg
in
fwait
lret
movsl
or
lea
mov
lea
push
flds
adc
dec
push
das
fisttpl
mov
xchg
add
imulb
out
les
adc
and
mov
mov
xor
fcomps
call
fmuls
out
or
rcll
leave
scas
fstpt
cmp
in
xchg
push
and
mov
sub
add
dec
loope
shrl
pop
gs
aam
push
jecxz
repz
hlt
mov
inc
adc
and
xor
inc
add
and
ret
xchg
shll
aam
in
hlt
mov
inc
adc
and
xor
inc
add
and
ret
xchg
push
mov
mov
lds
cmc
mov
ret
adc
sub
add
pusha
and
ret
mov
repz
je
add
jmp
mov
add
mov
in
fmull
cmc
out
negb
idiv
fucomi
scas
mov
inc
inc
pop
jne
fs
push
add
ss
out
notb
cmpsb
movsl
mov
inc
inc
push
jne
gs
gs
ss
in
xchg
lahf
test
push
movsl
data16
sbb
gs
inc
push
inc
jo
ss
mov
jge
imul
ja
int
bound
fisubl
insl
popf
fwait
dec
xchg
test
or
pop
ds
sarb
addl
es
test
int
repnz
lock
ds
pop
push
ret
adc
inc
push
js
push
fsubs
lahf
out
mov
nop
push
xor
movsl
dec
fcoms
shrb
push
inc
jmp
sub
and
push
int3
cmpsb
test
mul
mov
lret
adc
and
jbe
outsb
cli
fwait
gs
sub
cmp
ss
cmp
cmp
inc
mov
inc
push
mov
fldenv
shl
in
xchg
xchg
scas
push
pop
inc
dec
jne
outsl
adc
es
pushf
out
notl
lret
push
das
and
jne
sbb
inc
push
arpl
mov
mov
xchg
cmc
shlb
adc
ja
gs
pop
dec
push
push
mov
lds
fldl2e
test
push
inc
inc
push
jne
gs
push
add
ss
out
notb
cmpsb
movsl
mov
inc
inc
push
jne
gs
push
add
ss
loopne
push
mov
scas
cld
ljmp
sub
mov
pop
lcall
push
ror
and
sub
int3
cmp
jb
sbb
jo
repz
add
mov
jle
movsl
negb
shrb
mov
and
cmp
mov
filds
mov
aad
mov
fidivrs
aad
scas
mov
jg
sahf
enter
dec
jne
mov
aaa
cli
xchg
mov
and
and
jne
lock
scas
pusha
aaa
adc
jp
jecxz
cs
dec
in
orl
test
mov
out
mov
mov
outsl
std
mov
leave
je
cmp
add
cli
mov
xor
sub
inc
repnz
stc
inc
mov
cli
cmp
push
stc
jmp
sub
lcall
inc
mov
push
imul
inc
xor
fsubs
insb
pop
arpl
cltd
jge
mov
ja
cs
ljmp
call
hlt
mov
and
push
aas
loopne
sub
stos
gs
lock
ja
adc
lea
filds
ja
mov
add
cmp
shrb
and
or
pop
jecxz
in
ja
cmp
push
mov
xchg
xor
lock
and
push
inc
lea
jns
and
clc
in
add
push
push
mov
xor
cli
push
aas
xchg
repnz
mov
mov
movsl
fdivl
scas
push
sahf
sbb
ljmp
out
inc
rcr
shrb
adc
cmp
add
in
pop
xlat
pushf
cmpsl
mov
mov
cld
and
dec
and
sub
repnz
enter
imul
test
mov
fwait
mov
pushf
test
mov
repz
xchg
mov
push
addps
adc
in
inc
out
aas
mov
in
sbb
in
xchg
ret
adc
addb
cs
stc
clc
add
sbb
in
push
and
shl
cmp
loop
pusha
mov
ret
adc
mov
sbb
in
fldenv
and
lea
pop
fs
test
sbb
leave
out
inc
out
inc
mov
mov
push
ss
ret
inc
xchg
sahf
lock
xchg
cmp
xor
dec
outsb
ja
mov
push
inc
popa
idivb
mov
push
sub
sbb
stos
sub
cmpsl
and
stos
or
sbb
imul
fmul
mov
ret
cmpsb
repz
dec
add
repnz
dec
idivl
shrl
inc
and
mov
pusha
pop
or
push
xchg
fsubp
pushf
stc
sub
mov
or
mulps
dec
in
xor
and
inc
test
rclb
xchg
shlb
jle
xlat
mov
lock
dec
jns
movsl
mov
nop
mov
mov
test
cld
aad
fiaddl
clc
adc
dec
dec
out
pop
adc
push
xchg
fcmovbe
mov
out
loope
jle
fisttpll
jecxz
xchg
sbb
push
divb
pop
and
or
mov
repnz
call
inc
cmp
fisttpll
xchg
dec
popf
pinsrw
and
clc
cmp
mov
add
sbb
sahf
ds
out
push
sbb
or
repnz
js
int3
inc
daa
jns
pop
xchg
movl
addr16
sbb
mov
dec
xlat
popf
lcall
jg
sub
mov
mov
mov
xchg
ficoms
call
xchg
or
shll
scas
ss
test
adc
hlt
repnz
jo
push
sbb
sub
jne
lea
idivl
xchg
int3
xchg
bound
mov
bound
adc
loope
cmpsl
inc
jo
insb
in
sub
sbb
xchg
adc
stc
sbb
iret
insb
mov
std
js
in
rolb
in
divl
cmpsl
je
adc
mov
adc
out
hlt
push
sub
rcrb
iret
icebp
out
cmpsl
mov
inc
mov
adc
pop
mov
in
mov
std
inc
mov
mov
or
inc
and
ds
test
mov
adc
push
mov
insl
xchg
mov
xchg
dec
and
mov
gs
inc
imulb
adc
fstpt
push
jns
rcl
orb
jns
stos
inc
pop
mov
pusha
dec
aad
shl
xchg
add
xchg
push
imul
pop
dec
lahf
and
lods
andb
pop
sbb
iret
xchg
or
fsubrl
jmp
dec
dec
daa
arpl
lods
lock
imul
js
shrb
sub
fbstp
cmpb
mov
inc
fmuls
lea
test
cltd
jne
xchg
jne
xchg
stos
lds
jge
std
rcrl
push
xchg
xor
fldl
pushf
mov
out
xchg
nop
fists
pop
pop
sub
je
adc
or
pop
xchg
lods
cmp
sti
lods
xchg
ja
mov
xor
pusha
out
jns
add
mov
jmp
xchg
mov
jmp
aas
es
xlat
aas
test
orb
pop
sub
cli
mov
cmp
ret
push
bound
inc
mov
jl
int3
imul
push
sub
sbb
ret
sbb
icebp
pusha
stos
int
cmpsb
les
xor
sahf
pop
pop
movsb
shrb
xchg
push
xchg
adcl
mov
dec
push
push
pop
add
sub
jbe
cmp
pusha
cmp
dec
adc
sbb
xor
xchg
fbld
div
dec
dec
popa
fstpt
rcr
arpl
sti
into
jbe
popa
in
bnd
xchg
mov
loop
or
xchg
inc
mov
mov
xor
cmp
adc
pusha
imul
fwait
push
out
push
sbb
cmp
cwtl
mov
mov
movsl
nop
int3
lea
fiaddl
fs
or
ret
popf
sti
loop
cmp
in
mov
jg
dec
inc
cmpsl
mov
mov
test
mov
push
and
or
or
mov
jae
nop
xor
adc
cli
movd
push
or
lret
scas
call
mov
adc
push
fstl
sbb
dec
or
hlt
pcmpgtd
mov
mov
cmp
ljmp
ljmp
dec
shr
mov
cmp
push
mov
icebp
inc
mov
adc
rcrl
or
lea
repz
es
dec
cld
in
fadd
pop
loop
loop
xor
int3
mov
or
and
push
loop
or
scas
sub
xchg
cmp
lea
sbb
les
pop
dec
int
pusha
xlat
sbb
out
xlat
mov
and
cmpsb
insb
sbb
mov
fcompl
add
mov
sub
lcall
leave
bound
inc
fisubs
push
push
adc
add
lods
mov
pop
jae
or
aad
sub
push
mov
leave
cmpl
jp
xor
inc
fiadds
dec
mov
subb
popf
inc
ret
loope
enter
pusha
xchg
mov
cmc
push
jb
lret
jno
jmp
pop
mov
les
and
call
xchg
lea
push
ret
cmc
inc
aas
incl
pushf
sub
push
imul
sub
jbe
mov
xchg
inc
sti
jle
lcall
push
inc
push
lcall
enter
cmpsb
cs
xlat
ljmp
in
aaa
pusha
and
cltd
out
das
ljmp
mov
ds
mov
cmpsb
shl
and
jb
mov
dec
and
mov
mov
sbb
fisttps
jecxz
lahf
xlat
icebp
pushf
decl
sub
and
cmp
lret
cmp
jae
fucomip
xor
imul
push
hlt
adc
sbb
fisubrs
cwtl
mov
repnz
jne
jmp
popa
pop
mov
out
sub
cmc
pushf
cmp
mov
push
push
add
icebp
leave
insb
push
push
cli
outsl
add
sbb
mov
pop
mov
fisttps
repnz
fcmovbe
hlt
mov
sbb
std
out
jge
adc
mov
movsl
push
pop
lahf
jecxz
mov
lods
loopne
cmp
ds
lock
push
jnp
add
jns
cmp
outsl
cmpsb
mov
or
sub
popf
out
cmp
and
decl
loopne
cmpsl
inc
jmp
push
sbb
xchg
cmp
shrl
test
jmp
push
cmp
add
mov
mov
pop
pop
movsb
imul
lret
pop
std
dec
iret
xor
bound
jle
je
arpl
cmc
cltd
in
mov
cmp
test
and
or
jge
inc
sbb
sti
ret
push
sbbb
mov
lods
sub
adc
xor
adc
mov
cmp
out
iret
in
into
dec
loop
addr16
mov
and
mov
mov
repnz
nop
mov
and
inc
cmpsl
sub
pop
and
pop
pusha
push
stos
fidivs
push
imul
fisttpl
pop
push
icebp
mov
push
or
fcmovne
in
aad
mov
push
adc
pop
lea
push
add
jp
cltd
icebp
sub
js
sbb
push
std
dec
adc
mov
and
leave
cmp
repnz
xchg
mov
aaa
imul
and
test
fldenv
push
idivl
cli
das
rol
popa
adc
stos
ljmp
movsl
mov
jge
mov
fimuls
shrd
push
adc
or
js
negl
mov
adc
mov
jb
ret
xor
ret
cmp
inc
dec
cmpsl
aad
push
cmp
jo
aam
fistps
rolb
aad
data16
or
jl
push
dec
mov
cmp
gs
xchg
sbb
cld
add
inc
sbb
ret
mov
inc
in
and
cmc
cs
repnz
mov
pop
in
orl
dec
mov
mov
in
push
xchg
repz
pop
in
jle
push
int
mov
cmp
adc
addl
hlt
ljmp
pop
jp
mull
inc
stos
sbb
push
lcall
mov
movsb
jno
inc
push
andb
dec
pop
lret
pop
aaa
xchg
jnp
xchg
daa
push
das
mov
xchg
push
jnp,pt
daa
pop
and
mov
test
push
iret
dec
cmpsl
add
jmp
pushf
push
xor
jnp
mov
xor
pop
mov
lret
pop
dec
dec
negl
xor
ret
loopne
cmc
jo
pop
sbbl
add
pop
cmpsl
mov
mov
insb
push
shrb
jne
pop
and
iret
push
and
sbb
sub
sti
cmp
sbbl
push
test
adc
roll
rcr
lods
mov
pusha
lahf
and
mov
cmp
sub
lret
shlb
mov
je
add
xchg
mov
mov
xchg
in
jae
lock
orb
jge
ja
aaa
ret
dec
sahf
shll
test
pcmpgtb
mov
push
and
adc
test
add
or
mov
inc
sub
mov
lret
icebp
pusha
adc
push
scas
es
and
xchg
mov
xchg
fwait
sbb
inc
jecxz
lock
scas
pop
inc
add
or
mov
ljmp
dec
inc
and
jecxz
add
test
sbb
jle
icebp
adc
dec
outsl
sahf
ror
mov
int3
inc
xchg
cmp
jne
adc
xchg
insb
pop
lds
xchg
rolb
cmpsb
test
insl
sbb
cmp
ljmp
bswap
nop
loope
lret
add
rcr
out
mov
push
inc
stc
push
push
in
dec
out
jmp
xchg
js
test
test
in
js
sbb
xchg
sbb
lret
xchg
mov
xor
fs
cmc
sti
ja
xchg
jle
inc
pop
xor
les
jecxz
scas
pop
jecxz
mov
mov
mov
idivl
inc
test
cmp
mov
inc
pop
mov
add
test
mov
ret
in
loop
ja
ljmp
int3
insl
popa
mov
ljmp
addr16
mov
push
mov
in
cmc
jns
sub
push
cmp
fidivl
mov
dec
repz
loope
pusha
push
sbb
inc
mov
psrad
lahf
mov
icebp
sub
ret
hlt
dec
sti
or
fadds
fxtract
lods
std
clc
pop
call
sbb
cltd
dec
xor
shll
xchg
test
stos
cli
aad
repnz
test
fildll
push
add
mov
scas
lret
mov
bound
fs
lock
push
mov
add
rcr
or
mov
movsb
pop
jo
les
dec
xchg
xlat
add
outsb
sahf
inc
ret
pop
aas
cmp
xchg
idivb
inc
push
mov
imul
dec
or
ucomiss
fcomp
stc
insb
or
xchg
sbb
jle
adcl
mov
cmp
mov
xchg
sbb
push
into
inc
jne
mov
cmpl
cmp
roll
aas
push
es
pushf
xlat
cmp
dec
js
jae
insl
flds
xor
and
xchg
or
dec
mov
pusha
xchg
jge
loope
lahf
push
push
bound
and
rcrb
lds
lock
jp
lock
sub
outsl
int
and
xor
mov
jmp
add
call
inc
outsb
mov
cmc
pusha
xchg
dec
insl
inc
mov
mov
xlat
jno
sub
ss
pop
das
inc
aam
cmp
lods
movsl
pop
or
rorb
ret
iret
stos
jo
inc
in
cld
pusha
jmp
sti
fisubrs
sbb
les
push
inc
jnp
add
jb
adc
xchg
sahf
subl
scas
mov
loopne
dec
jle
xchg
pushf
das
and
mov
mov
cmp
sub
xor
push
cli
pop
data16
mov
ret
cmp
lods
add
and
dec
fwait
pushf
inc
loop
mov
push
cmp
and
pop
jp
mov
adc
aaa
push
mov
cmp
mov
das
sub
dec
cmpsl
std
pop
sbb
mov
lar
ja
mov
ja
mov
dec
dec
icebp
mov
mov
bound
xorb
xor
lds
ds
scas
scas
mov
outsl
jmp
fnstenv
sub
rcrl
push
jmp
adc
pop
lock
in
les
test
cltd
sub
jmp
insl
sbb
lods
and
movsl
sbb
dec
jp
or
aaa
push
sbb
add
cld
call
aas
jle
xor
enter
pusha
inc
dec
test
icebp
xor
add
test
test
mov
or
shr
cmpsb
jp
rcr
adc
xor
lea
jne
cmp
repnz
fdivs
faddl
xchg
inc
sbb
push
mov
jge
mov
push
push
jg
std
rol
ja
addr16
data16
hlt
or
pop
xchg
push
cs
dec
sub
xchg
mov
dec
testb
mov
in
inc
pop
es
mov
jb
push
adc
in
repz
xchg
addl
lea
insl
xchg
mov
jg
enter
sarl
sub
xchg
decb
cmp
outsl
xchg
and
jno
inc
add
lods
and
add
dec
out
pop
je
int3
or
lret
inc
aaa
fnstsw
add
sub
adc
pusha
push
stos
push
addb
enter
mov
jl
mov
dec
inc
int3
xlat
mov
jae
fwait
jle
jns
inc
pop
stc
in
shl
sub
das
loop
lret
pop
clc
out
pop
sbb
or
popf
int3
les
cmp
jo
push
dec
pop
rol
add
or
xor
loop
sarl
cmp
mov
loope
dec
icebp
into
movsb
cmp
std
sti
mov
sub
mov
sub
mov
dec
rcr
sub
pop
std
in
cmpl
data16
xchg
or
das
js
cmp
movsl
cmp
or
sti
mov
sub
or
in
xor
clc
rep
or
outsl
jp
mov
xchg
or
repnz
add
leave
xchg
cmp
xor
andl
adcb
adc
sbb
inc
mov
jl
dec
lock
sbb
dec
clc
es
and
xchg
dec
movsb
cltd
es
outsl
sbb
leave
dec
mov
dec
mov
push
mov
xchg
pusha
sti
outsb
loop
cwtl
scas
mov
jae
jae
mull
jle
je
push
rcl
fisttpll
mov
aaa
pop
mov
sbb
sub
je
mov
rorb
jo
cld
scas
scas
lahf
leave
mov
and
sub
addb
and
cwtl
dec
sahf
mov
mov
mov
mov
sbb
sti
cltd
imul
sbb
insl
pop
xchg
adc
fistpl
ffree
mov
mov
fistpl
mov
add
adc
sbb
stos
test
sbb
push
arpl
xor
mov
inc
inc
repz
outsb
jge
das
test
mov
mov
dec
adc
insl
jecxz
stc
cmp
cmpsl
fwait
jle
test
jae
jo
incb
sbb
loopne
mov
add
xor
jne
ficomps
inc
insl
fidivrs
sub
jmp
jmp
std
dec
bound
popf
push
jmp
decl
cmp
ficomps
sbb
xchg
xchg
lret
flds
mov
xchg
mov
xchg
cmpsl
and
dec
add
rcl
cmp
mov
cs
sbb
mov
inc
adc
and
dec
cmp
repnz
push
mov
cmpsb
ds
imul
pop
pop
push
sub
insb
jp
movsb
adc
lods
xchg
add
lret
jno
xorb
sub
fdivs
mov
gs
adc
add
pushf
outsb
mov
jo
outsb
sub
mov
jns
adc
ljmp
dec
and
pusha
jo
ja,pt
orb
fsubrp
lret
sub
cs
mov
adc
adc
mov
mov
or
mov
ljmp
pop
jno
mov
fildll
out
dec
dec
cmp
mov
xchg
or
cmp
mov
pop
mov
push
loop
insl
arpl
xorl
ss
inc
in
inc
repz
rclb
enter
imulb
mov
stos
pop
add
cmpsb
or
dec
mov
loopne
aas
aas
out
mov
adcl
scas
mov
pop
sbb
sbbb
aaa
sub
inc
sbb
cmp
xor
out
pusha
insl
pop
dec
lock
jmp
jb
push
sti
adc
es
mov
popf
mov
inc
rolb
and
fdivs
enter
xchg
cmp
mov
jno
dec
and
mov
xor
arpl
mov
lock
mov
pop
or
xor
mov
leave
sbb
loop
add
sbb
sti
mov
aas
decl
mov
loope
inc
shrb
test
cld
jo
pop
jg
dec
lea
or
rorb
pop
test
pop
fsubs
add
enter
jge
xchg
push
sub
pop
mov
arpl
mov
dec
add
pop
lret
mul
dec
cltd
bound
les
int3
mov
lahf
movsb
data16
inc
dec
stc
pop
and
and
mov
popf
or
jnp
mov
push
mov
test
add
push
and
test
jecxz
nop
fisttps
frstor
imul
lcall
jp
es
add
xchg
add
jnp
sbb
js
iret
push
jp
add
call
ret
push
arpl
mov
push
or
push
repz
pop
mov
sbb
push
clc
out
dec
mov
daa
jg
sub
lods
push
or
aad
or
gs
leave
jae
stc
mov
nop
push
jle
movsl
enter
clc
mov
adc
lcall
cmpsb
les
pop
pop
loop
xchg
icebp
fidivrl
jnp
ljmp
sub
xchg
test
lcall
sub
pop
imul
dec
add
xor
negl
stos
in
mov
cmc
mov
xchg
mov
mov
jmp
adc
or
mov
add
pop
pusha
hlt
or
notb
cmpsb
movsl
mov
inc
inc
push
jne
gs
push
add
ss
out
notb
cmpsb
movsl
mov
inc
inc
push
jne
gs
push
add
ss
inc
jne
in
adc
cmpsb
and
push
jne
gs
push
add
ss
out
notb
cmpsb
movsl
mov
inc
inc
cld
fbld
add
jne
inc
fsts
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
dec
out
fstp
in
iret
std
or
shl
incb
pop
pop
insl
dec
jge
or
dec
out
fstp
in
iret
std
mov
lods
mov
pop
insl
inc
jge
or
out
neg
in
xlat
std
cmpsb
lea
mov
add
inc
jns
dec
pop
cmp
fisttps
scas
pop
pop
scas
dec
pop
stc
push
xchg
or
insl
pop
sub
or
ds
jle
adc
xchg
jne
bound
mov
inc
cmp
outsl
int
xchg
pop
sub
adc
sub
mov
adc
dec
cmp
lea
mov
pop
rorb
cmp
xor
fcoml
in
jmp
inc
mov
in
hlt
jle
dec
push
mov
rcrb
xchg
rorl
sbb
push
bound
push
cmp
add
mov
rclb
jmp
or
dec
mov
pop
insl
pop
dec
cwtl
in
xor
insb
xchg
xorb
jge
bnd
pop
cmp
cmp
fucomip
iret
std
test
mov
mov
inc
insl
push
jge
or
xchg
mov
mov
enter
and
xor
add
adc
pusha
dec
fs
scas
bound
mov
stos
shr
scas
mov
ret
cmp
or
pop
cmp
adc
bound
pop
imul
subl
loope
popf
lahf
lods
mov
pop
insl
dec
jge
or
dec
out
fstp
in
iret
std
mov
lods
mov
pop
insl
dec
jge
or
dec
ror
pop
mov
arpl
ret
mov
mov
iret
jne
call
std
and
scas
dec
pop
test
sti
inc
push
xchg
or
mov
test
xchg
inc
xchg
mov
stc
imul
fnstenv
jo
and
add
sbb
rorl
push
inc
mov
call
push
imul
jns
xchg
inc
or
pop
out
dec
cmp
push
sti
lret
imul
pusha
dec
xchg
add
stos
sti
out
das
xor
xchg
testb
push
test
cmp
xchg
mov
jb
push
jb
sub
aad
cmp
mov
movsb
lock
fs
cmpsb
jae
fnstenv
add
imulb
dec
mov
push
xor
add
push
mov
sbb
sub
jmp
test
push
sti
push
xchg
dec
dec
sub
lds
lds
push
mov
hlt
jecxz
repnz
mov
jbe
inc
ret
sarl
or
xor
pop
mov
ffree
movsw
je
je
and
popf
mov
mov
repnz
mov
lret
and
mov
jbe
divb
movsb
add
mov
sub
sbb
sbb
cs
jnp
mov
pop
cmc
int
in
xchg
outsl
push
sbb
mov
pushl
fimuls
popa
stos
or
fwait
out
shr
xor
dec
cld
lods
xor
push
movsb
inc
and
and
imul
adc
cltd
lods
aaa
add
ljmp
push
popa
sahf
cltd
mov
jl
call
out
cmc
xchg
add
mov
xchg
loopne
fsubp
jns,pn
aaa
and
and
cwtd
push
fmul
jo
leave
xchg
mov
adcl
push
out
adc
and
test
mov
orb
mov
sub
push
push
xor
fiaddl
imul
loopne
dec
sahf
cmp
int
lock
cmp
and
pop
or
pop
fdiv
mov
mov
popa
arpl
push
mov
push
mov
ds
loop
cmpsl
sbb
lcall
testb
xchg
rcrb
jae
into
rolb
sbb
push
pop
and
dec
fistps
mov
jl
xchg
fistpll
arpl
or
loopne
hlt
adc
or
sbb
push
je
cmpsb
pop
mov
repz
cwtd
sbb
aad
inc
shlb
jns
cmc
adcb
scas
int
dec
push
arpl
mov
adc
shll
inc
push
add
jae
sbb
sbb
mov
fwait
xsha256
cmpsb
push
mov
shl
cmp
dec
dec
jp
mov
das
dec
adc
fsubr
ja
aad
shrb
ljmp
push
outsl
icebp
push
scas
adc
xor
inc
adc
cwtl
insl
dec
xchg
in
nop
adc
jo
shrl
mov
or
cmc
and
jg
arpl
push
xor
pop
lahf
push
int3
insb
xchg
cwtl
pop
xor
adc
std
sbb
or
loop
push
adc
inc
cmp
push
pop
adc
jo
js
clc
jle
inc
aad
stos
cmp
repnz
and
lret
mov
scas
mull
xchg
xlat
push
sti
in
fcoms
sbb
icebp
cmp
jbe
sbb
push
sub
cmpsl
add
pop
pop
lea
stc
incb
mov
mov
in
adc
push
mov
sub
jo
dec
pop
clc
stc
jle
pop
xlat
cmp
clc
or
into
mov
scas
enter
mov
xchg
in
push
aad
gs
push
push
sbb
andb
and
fs
lds
inc
movl
and
dec
cmp
mov
or
mov
std
enter
loopne
mov
xor
push
daa
stos
andb
lods
cli
sti
cli
test
xchg
and
ret
jecxz
pop
jl
pop
leave
popa
inc
xchg
jbe
lahf
and
loope
stc
push
scas
add
push
dec
lods
xchg
xor
dec
inc
mov
jl
jo
enter
cmpsb
fisttps
mov
mov
and
iret
int
mov
rcrl
adc
mov
pop
xchg
jge
scas
in
push
clc
xchg
cmp
arpl
xchg
push
fsubr
sbb
add
xchg
dec
popa
jmp
sub
pop
push
sbbb
rclb
in
pop
mov
add
test
fs
mov
fcomps
stos
repnz
push
jle
xchg
ss
inc
test
mov
jne
mov
adc
jae
inc
call
ret
rorl
mov
mov
push
xor
sahf
mov
push
mov
cmpsb
and
xchg
or
jnp
dec
int
gs
sub
dec
push
sbb
xor
repnz
stos
hlt
loopne
jns
shlb
daa
sbb
mov
cmc
mov
mov
jne
loope
jl
loope
cmp
sbb
add
xlat
push
xor
mov
xor
or
cli
loopne
pop
dec
sub
jmp
mov
pop
out
pushf
add
dec
lsl
xor
push
sub
mov
fwait
lcall
mov
inc
jb
inc
cli
out
mov
out
imul
jg
mov
mov
xor
pop
icebp
icebp
rol
lods
sub
pusha
dec
sti
scas
inc
sub
pop
pop
enter
jle
imul
dec
mov
jb
int3
jmp
dec
cmpsl
daa
fisttpll
in
add
jns
mov
out
faddl
sub
add
cmp
push
mov
cli
scas
fwait
dec
lret
popa
stos
fdivrs
jbe
add
sahf
sbb
mov
shll
std
mov
popf
lcall
jbe
add
sub
imul
pop
std
dec
sti
cwtl
dec
ja
lea
inc
dec
sbbb
xorl
clc
mov
fwait
stos
push
jl
cmp
jecxz
stos
pop
js
cmc
popa
in
insb
lock
push
fsubl
and
inc
mov
int
bound
push
js
sub
push
call
adcb
nop
add
test
fbstp
dec
sbb
test
push
clc
push
scas
sbbb
adc
adc
add
mov
cmp
cs
push
or
cmpsb
out
mov
add
add
jecxz
pop
inc
pushl
dec
out
add
dec
ljmp
mov
push
add
add
cmp
inc
lret
sub
pop
test
lret
js
jae
aad
add
add
sbb
mov
mov
jmp
inc
fstpl
ss
cmp
mov
jg
jae
fwait
inc
mov
dec
imul
movsl
cmp
je
fisubrl
push
mov
out
adc
lahf
aaa
adc
jns
std
pop
lods
in
fs
mov
sub
jb
in
push
mov
xchg
cmp
ljmp
mov
xchg
jae
fcom
adc
xchg
dec
pop
scas
adc
inc
inc
cmp
movsl
or
fcmovbe
cltd
add
leave
sub
sub
mov
jp
jmp
adc
data16
inc
fucom
jp
mov
insb
out
inc
sbb
push
aad
push
scas
push
cmp
sar
test
ror
std
push
lds
add
popa
fisttpl
mov
inc
push
out
mov
xchg
ficomps
hlt
stos
cs
xchg
bound
sub
mov
fwait
cmpsl
mov
xchg
in
cmp
sub
andl
mov
and
bound
rol
int
loopne
fnstenv
mov
in
mov
mov
adc
xor
in
and
orl
xchg
out
bound
push
mov
dec
and
int
inc
fsub
pop
scas
adc
sbb
pop
pop
sub
in
cs
cld
xchg
and
pop
cmp
push
sar
inc
pop
mov
jns
je
mov
hlt
fdivrl
sub
mov
sbb
push
inc
sub
ret
add
xchg
mov
cltd
xchg
sub
pop
int3
call
andb
pop
je
jmp
hlt
sub
movsl
adc
lock
sahf
test
int3
mov
xchg
push
jle
pop
xchg
mov
leave
and
push
inc
dec
arpl
and
lods
rcrl
shlb
aad
inc
jg
pop
mov
dec
pop
mov
pop
add
mov
mov
cltd
push
ss
and
jl
mov
test
lahf
jge
mov
cmp
lcall
cmp
add
adc
xor
inc
fnstenv
sub
cwtl
sbb
push
fcomp
cmp
cmp
pop
sbb
inc
sub
sar
mov
pop
dec
out
xchg
rcrl
add
decb
or
sub
movsb
ds
inc
jp
rclb
adc
cmp
mov
xchg
adc
sahf
ret
and
mov
mov
push
filds
inc
xlat
cmpsl
or
xchg
push
es
int3
cli
sbb
stos
cs
aam
fdivs
subl
or
ja
pushf
mov
frstor
incb
mov
sbb
pop
data16
add
xchg
pop
jl
lods
gs
imul
std
fsubs
xchg
into
pop
mov
pop
out
pop
jnp
inc
mov
jb
out
lods
dec
imul
and
lea
cmp
inc
or
addr16
mov
fcmove
jbe
imul
cmpsl
xchg
gs
xchg
push
cmp
enter
push
inc
push
fcmovnu
nop
stc
add
sbb
push
adc
dec
adc
add
loope
mov
lock
repz
es
subb
pop
adc
jmp
mov
adc
in
repz
scas
mov
jecxz
out
jl
orb
xor
stos
imul
mov
les
sbb
mov
pop
pop
sbb
faddl
inc
xor
imul
inc
jns
jae
int3
std
mov
or
fstpt
add
ret
repnz
rcll
into
mov
push
sub
mov
enter
push
xchg
call
insb
repnz
xchg
cmp
int3
mov
pop
rcrb
loopne
repz
je
sti
pop
mov
xor
in
push
inc
stc
push
leave
addl
mov
ja
jp
pop
cmpsl
cmpsl
mov
xor
mov
xchg
jmp
push
dec
or
dec
jns
ret
sbb
cwtl
popa
fdivl
lahf
inc
dec
cld
data16
inc
inc
les
xchg
popa
int
pop
push
jne
shll
movl
stos
dec
push
clc
aam
pop
lcall
aaa
adc
xchg
mov
cmp
xchg
orb
mov
mov
into
call
xor
clc
pop
mov
scas
testl
inc
retw
test
aad
sbb
int
mov
inc
in
outsb
mov
dec
jno
fiadds
in
dec
dec
sahf
pop
out
pop
inc
push
adc
pushf
mov
fs
fcomip
pushf
jbe
add
pop
mov
jle
sub
subb
sub
add
jo
xor
shrb
pop
sar
jmp
adc
xchg
jge
pop
add
out
cltd
push
loop
add
pop
ljmp
pop
test
in
sub
or
inc
push
pop
xor
scas
push
xchg
fcomip
mov
sbb
mov
imul
lcall
and
inc
je
fwait
and
mov
mov
inc
inc
or
dec
out
inc
cwtl
idivb
cs
xchg
mov
repnz
jecxz
and
xchg
arpl
lock
das
cmp
sub
inc
cmp
jp
xlat
loop
rolb
jno
inc
cmc
into
repz
shll
sbb
nop
nop
insb
cs
outsl
adc
aad
push
cmpb
push
cmc
lret
les
dec
test
je
clc
xorl
push
mov
mov
xchg
jns
pushf
mov
sarl
sub
sbb
inc
adc
punpckhbw
push
sbb
dec
push
mov
arpl
mov
mov
aad
sub
inc
enter
jo
pop
adc
inc
jecxz
ja
adc
xchg
leave
cmp
push
mov
pop
aad
mov
inc
std
push
les
push
test
nop
jp
movb
addr16
xchg
into
pop
lcall
mov
push
aad
pop
test
sub
andl
outsl
addr16
frstor
xor
fldenv
adc
ret
leave
dec
xchg
subb
in
adc
in
xor
add
xlat
cmpsb
jp
int
xor
jmp
test
or
cmc
xor
mov
dec
or
push
ja
lret
hlt
icebp
repz
aam
cld
jp
push
xor
push
test
aas
cmp
and
inc
ljmp
sbb
push
adc
jae
je
mov
dec
scas
pusha
inc
test
mov
in
push
pop
jp
psrld
sub
xor
jge
in
push
cltd
xchg
rorl
in
ss
lea
mov
xor
mov
mov
push
aam
mov
push
and
and
test
push
loope
cmp
xchg
rcrb
dec
sti
sbb
hlt
inc
pop
fs
in
mov
dec
push
push
mov
and
enter
inc
or
lock
movsb
adc
pop
pop
sbb
mov
jne
fs
sub
imul
xor
mov
adc
sbb
mov
loop
sahf
jg
pop
xchg
xchg
in
pop
cmp
cli
je
pop
gs
pushl
jge
and
mov
aaa
cs
mov
cmp
sbb
jge
and
in
adc
lcall
aad
cmpsl
mov
lret
xchg
inc
mov
jnp
scas
mov
imul
fisttps
add
mov
lcall
fs
push
clc
movsl
jae
xchg
outsl
les
out
mov
fsubrl
push
mov
sbb
inc
push
je
dec
sub
out
dec
lret
or
popa
cmpsb
inc
push
bound
mov
xlat
pop
jbe
pusha
iret
add
pop
mov
ret
jmp
xor
push
test
fnstenv
jmp
nop
ret
pop
aam
mov
push
lahf
pop
test
loopne
cmp
mov
mov
loope
das
testb
mov
stc
nop
arpl
pushf
mov
mov
add
fs
adc
out
jecxz
jno
xor
loop
aas
js
shrb
mov
popl
dec
jge
dec
imul
mov
cmp
ret
inc
jb
dec
mov
arpl
add
jge
dec
aad
fimuls
sbb
mov
jp
insl
gs
outsb
sbb
test
sub
ror
sahf
in
ljmp
add
jge
pop
ss
sub
mov
inc
jne
mov
movsb
imul
mov
push
xchg
das
lods
lret
out
ret
addr16
dec
inc
push
dec
mov
call
scas
xchg
pop
cmp
xor
inc
cmp
cmpsb
pushf
in
cmc
aad
xchg
fmull
push
mov
test
test
lds
dec
or
mov
dec
sbb
lods
xchg
mov
ret
mov
or
mov
mov
xor
aad
pop
dec
add
out
mov
out
xchg
push
lds
jle
cmpsb
aaa
push
stos
inc
int
cmp
dec
mov
dec
subl
pusha
inc
mov
aad
pop
repnz
dec
mov
enter
iret
adcb
inc
cltd
ret
std
cld
xor
call
push
mov
xchg
sahf
jno
idiv
adc
ret
fsts
mov
ljmp
test
push
mov
lds
adc
inc
aad
shl
fadds
sbb
inc
shrl
and
jno
es
add
fwait
imul
cs
int
jg
push
out
xor
out
push
mov
xchg
xchg
adc
inc
lock
push
and
loop
jg
fistpll
xchg
mov
call
out
push
out
insb
hlt
mov
jecxz
enter
call
inc
pop
ja
outsb
push
xor
imul
cmp
push
ljmp
loope
stos
mov
lret
or
in
ret
sub
sub
mov
scas
test
xchg
insl
xchg
pushf
rcr
rol
lea
lahf
jge
sti
movsb
daa
pop
sahf
fldenv
mov
cmp
sub
inc
in
movsl
mov
and
je
mov
sub
xlat
clc
loopne
aas
jl
popf
scas
cmpsb
adc
ret
sub
loopne
push
mov
ja
push
mov
mov
cmp
sub
cmpsb
iret
icebp
push
push
and
test
mov
mov
dec
in
xchg
cmp
xchg
pop
out
mov
call
mov
sub
negb
xchg
mov
sbbb
addr16
add
fwait
xchg
push
push
sub
insb
mov
adc
adc
in
lret
test
aas
mov
pushf
or
push
test
xchg
mov
jmp
xchg
in
xor
subl
shlb
aaa
mov
ljmp
test
addr16
cmp
adc
out
bswap
or
mov
adc
push
js
ljmp
add
aas
dec
push
nop
jmp
mov
jne
jae
outsw
sub
sub
pop
or
adc
lock
ret
or
ret
movsb
inc
inc
pop
fs
hlt
push
loope
sbb
jb
pop
les
jne
dec
sub
inc
fs
loop
ja
test
imul
add
adc
sub
stc
loope
fsubrs
hlt
daa
add
push
stos
clc
sahf
or
aad
add
les
pop
jae
mov
dec
stos
dec
pushl
mov
inc
jns
insl
adc
dec
mov
pop
mov
pushf
xchg
sub
icebp
sbb
push
out
add
xor
push
jmp
dec
jne
es
test
mov
or
add
jmp
jle
mov
jne
mov
stc
test
and
cmp
lods
stos
or
pusha
and
vshufps
mov
cmp
aas
jo
jb
push
add
imul
pop
mov
shl
mov
jno
and
fs
leave
xchg
mov
sar
pop
xchg
lods
xor
aas
aam
xor
int3
neg
test
mov
popa
pop
cmp
mov
and
dec
fs
pop
imul
mov
or
xor
push
mov
scas
sar
mov
add
dec
lock
enter
xlat
push
adc
cli
or
es
sub
pop
add
mov
test
sub
and
dec
xchg
cwtl
push
mov
push
cld
into
mov
jge
mov
mov
ret
mov
sti
xchg
hlt
movsb
mov
jnp
jge
push
dec
dec
pusha
in
cmpsb
cmpsl
mov
js
mov
inc
cmp
xchg
gs
cltd
rclb
cli
fiaddl
and
in
test
lock
cmpsb
scas
lret
cld
out
jp
fisubrs
leave
mov
cmp
in
mov
xor
cmc
out
add
jecxz
add
xorb
lcall
and
fs
mov
test
mov
or
push
add
shlb
add
cmpsb
cmp
and
sub
jmp
ficoms
fwait
xchg
dec
pop
jbe
add
and
mov
int3
or
imul
dec
jl
jle
aam
inc
dec
adc
add
fsubrs
sub
dec
cltd
xchg
or
push
repz
or
pop
fcomi
mov
sub
pop
add
cmp
jge
cmp
xor
test
jmp
test
xor
push
adc
sar
xorb
cwtl
mov
push
lret
leave
dec
in
mov
pop
cmp
mov
leave
movsb
rorl
sbb
sub
add
adc
push
push
jecxz
into
popl
ret
test
adc
push
or
jle
and
sbb
shrb
xchg
shl
pop
sbb
into
push
sbb
and
rcrl
or
sarl
mov
rolb
adc
in
int3
fnstsw
mov
cmp
dec
div
test
push
lcall
sahf
sbb
bound
fs
out
pushf
push
cld
and
repz
es
xchg
sahf
dec
and
sub
cmp
jns
dec
cmp
test
mov
push
shrl
push
sub
sub
and
cmc
in
test
aaa
xor
lds
jl
mov
fst
in
iret
std
mov
lods
mov
pop
insl
dec
jge
or
dec
out
fstp
in
iret
std
mov
lods
mov
pop
insl
dec
jge
or
dec
out
fstp
in
iret
cld
mov
lods
mov
pop
insl
dec
jge
or
sbb
dec
in
fstp
in
iret
stc
mov
sub
nop
div
insl
dec
or
cmpsl
loop
shl
ret
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
xor
sbb
sub
mov
adc
js
mov
mov
jecxz
jecxz
adc
add
xor
and
push
dec
inc
aam
push
cmpl
cmpsl
ret
fdiv
test
clc
adc
and
push
je
fs
arpl
push
cmp
test
mov
pushf
mov
arpl
add
pop
jae
fdivrs
rorl
mov
clc
fbstp
push
movsb
lods
push
or
bound
sub
cmp
lods
jl
ljmp
sbb
jmp
add
push
sbb
pusha
clc
into
push
repz
add
pop
xor
jo
cmpsb
call
adc
iret
adcb
xor
ja
enter
inc
xor
nop
daa
jecxz
jmp
lock
jnp
mov
jae
arpl
fcomi
mov
outsl
mov
fnstenv
sbb
jmp
add
mov
mov
mov
movsl
test
lock
push
mov
bnd
add
xor
pop
jae
arpl
xchg
push
sbbl
mov
and
call
inc
sbb
insl
push
adc
aaa
xor
push
sbb
shll
test
inc
pop
inc
dec
imul
push
sbb
in
out
into
lret
int
fistps
mov
xchg
gs
sub
pop
adc
pop
jae
arpl
mov
mov
repz
add
xor
and
push
dec
inc
pop
jae
arpl
mov
mov
repz
push
iret
mov
shll
mov
sbb
aam
mov
mov
pop
xor
enter
xchg
or
sub
iret
test
int
hlt
sti
jle
push
jle
dec
xchg
call
jbe
or
adc
dec
xor
push
and
add
test
into
test
test
fldt
out
fdivrs
xor
mov
sub
pop
sbb
mov
and
out
jl
aas
jl
adc
fcomip
sbb
sbb
dec
mov
sbb
pop
xchg
jo
movsl
outsb
mull
inc
inc
or
shll
in
mov
jbe
jle
sahf
xchg
iret
dec
mov
testl
push
mov
or
and
stc
xor
std
mov
add
enter
sub
insb
in
mov
lret
loopne
xchg
data16
mov
adc
xchg
clc
xchg
dec
sub
adc
cmpsb
xchg
fmull
movsb
fists
mov
in
out
push
mov
int
pop
loop
jl
in
stos
gs
mov
insl
call
xlat
cltd
add
xchg
clc
jbe
bound
and
sub
ficomps
pop
and
mov
xchg
pop
rorb
pop
xor
imul
loope
std
dec
jge
xchg
and
jmp
fwait
nop
mov
inc
jns
dec
sahf
mov
push
or
or
je
fwait
lret
cmp
pop
ret
stc
movsb
addl
pop
push
cwtl
aaa
inc
insl
repnz
jmp
sbb
sbb
mov
xor
dec
fistpl
push
pusha
shlb
cs
jb
sbb
jg
mov
adc
sbb
push
lock
aad
int3
imul
loop
bound
dec
mov
in
pushf
push
hlt
lea
test
mov
cmpsl
jg
dec
aas
pushf
cmpsb
movb
inc
cltd
dec
gs
nop
xor
sub
xchg
cmp
cmp
mov
pushf
adcl
leave
ret
cli
xchg
sar
imul
sub
clc
and
enter
pop
call
push
out
pop
add
fstpl
andl
xchg
sub
xchg
mov
dec
mov
pop
add
gs
daa
test
test
out
cmp
pushf
cmpsl
cmpsl
cmp
mov
xchg
movsb
popa
mov
mov
jnp
mov
dec
in
out
out
dec
adc
loopne
add
fyl2x
repnz
repz
jecxz
js
lret
popf
xchg
adc
mov
cli
adc
pop
push
and
ds
orl
inc
stos
mov
roll
xchg
lret
mov
pop
lcall
movsb
arpl
inc
sub
ficomps
outsb
sbb
inc
fadd
mov
lds
fiaddl
push
adc
sub
dec
in
andl
vrcpss
scas
scas
fstl
bound
orb
cmp
mulb
imul
scas
push
loop
jmp
add
or
push
test
push
loopne
sbb
iret
push
cmp
movsb
std
stos
mov
out
sahf
in
or
and
lret
mov
xchg
mov
movsb
sub
cmp
and
add
movsl
cmp
mov
fs
add
dec
shll
jmp
xchg
xchg
cs
mov
mov
pop
or
imul
fnstcw
sub
ficoml
pop
cmp
mov
mov
jns
stc
dec
pop
daa
adc
addb
call
out
mov
rcll
into
push
sbb
sbb
shrl
cwtl
or
mov
mov
push
pusha
nop
addl
mov
outsb
insl
inc
cwtl
in
xor
inc
cmc
mov
cmp
add
aad
ds
pop
sub
ds
mov
insb
pop
aas
mov
stc
mov
ss
jmp
addb
and
add
in
out
daa
xchg
mov
sbb
mov
xor
rolb
inc
sub
in
jp
and
fwait
jecxz
mov
push
mov
push
shlb
cmp
lods
popl
es
push
mov
stos
enter
pop
lret
dec
cmp
test
hlt
mov
push
pop
sub
popf
in
lcall
pop
push
push
xor
arpl
hlt
lds
jle
in
lea
test
dec
cmp
jmp
outsb
pop
jmp
xchg
and
popf
aas
dec
jo
push
push
add
movsb
mov
sub
jae
insl
lcall
popf
xor
cmp
xchg
scas
ffreep
sub
rcrb
or
sti
and
push
popf
data16
adc
adc
xor
mull
or
xchg
jbe
jae
jl
sub
ret
hlt
jge
jg
mov
jl
mov
push
xchg
inc
push
or
in
stc
pop
daa
and
jl
scas
mov
loopne
das
leave
vshufps
mov
test
outsb
call
popf
mov
les
mov
mov
pusha
cmc
imul
stos
xor
loop
mov
sub
inc
sbb
arpl
adc
and
sarl
lods
insb
mov
push
and
addl
repz
pop
popf
adc
mov
jge
pusha
push
jmp
fimuls
sub
push
notb
cmp
or
sbb
or
test
gs
add
mov
shll
mov
add
mov
idiv
push
jbe
sbb
movsl
xchg
rorb
clc
imul
dec
icebp
mov
push
lock
sbb
cmp
scas
adc
and
out
push
push
inc
push
outsl
jecxz
and
sbb
test
enter
pushf
aas
mov
sub
orb
adc
jl
xor
ret
orl
inc
mov
lods
jmp
popf
mov
ret
mov
pop
es
and
loope
fidivs
aam
fxch
inc
pop
negb
in
sub
arpl
dec
xor
int
adc
test
jae
shrb
stc
aam
xchg
pop
jns
shlb
inc
in
js
jle
fldt
push
cmp
pop
das
rcrb
cs
jne
imul
out
lock
ret
sbb
mov
popl
dec
pushf
xchg
xor
mov
sarb
popf
cmp
pop
jg
pop
push
adc
xor
pop
notb
das
mov
adc
icebp
push
int
and
jmp
dec
ror
mov
adc
xor
daa
jbe
lret
scas
adc
jg
jp
fisttps
pushf
jge
js
mov
repnz
push
sbb
int3
into
mov
inc
repz
ret
mov
xchg
xor
loopne
rolb
sbb
jge
or
or
inc
movsb
xor
pop
sbbb
sub
stc
pop
std
ret
andl
sti
xchg
decb
mov
andb
pop
in
imul
repnz
xor
iret
mov
rcr
pushf
cmp
sbb
or
sbb
cmpsb
ja
mov
xchg
mov
lahf
pop
mov
outsl
push
or
ds
test
push
es
mov
ficoms
cmp
cmc
pop
dec
add
pop
sbb
fwait
jl
add
pop
rorl
enter
testl
jns
jmp
add
push
bound
sti
push
or
lods
sub
dec
dec
xor
xchg
dec
mov
pusha
sbb
out
mov
jg
stos
fbstp
push
or
sbb
sub
dec
iret
icebp
insl
aam
sti
xchg
aad
inc
inc
inc
das
xchg
and
loope
mov
pop
mov
and
lcall
cli
rcll
fs
popa
movsl
int3
xchg
xchg
xchg
pop
icebp
movsb
enter
cmp
mov
lret
notb
lods
enter
jns
xor
xchg
mov
mov
add
rcl
or
push
test
xor
jmp
jl
popf
mov
das
mov
pop
cs
and
add
or
pop
sbb
lea
inc
pop
add
and
dec
iret
addr16
xchg
sbb
les
push
jmp
xlat
pop
dec
rcrl
rorb
or
and
pop
mov
fisttps
push
xor
sarb
in
xchg
mov
jbe
stos
sub
lods
xor
rorl
cs
pop
push
mov
mov
cmp
fwait
mov
cmp
add
or
mov
xor
or
dec
push
out
ficoms
fwait
sub
jmp
rcll
in
ja
push
out
adc
lret
pop
cmpsl
lahf
mov
repz
and
cwtl
loop
pushf
jb
mov
dec
cwtl
jl
popa
rorb
ret
adc
popa
mull
gs
mov
mov
push
sbb
or
push
ret
xchg
movsl
mov
aad
pop
pop
cwtl
leave
dec
rcrb
mov
cmp
inc
mov
sub
sbb
stc
test
vandps
fs
dec
sbb
xchg
rcl
mov
aas
fsubrp
or
mov
and
idivb
xchg
dec
imul
xchg
jmp
push
test
cmp
push
xchg
fsubl
rcrl
sub
push
out
loopne
jne
jnp
and
pop
push
mov
rorb
shrb
jnp
andl
xor
aaa
cmp
sbb
outsl
daa
scas
daa
xor
mov
push
jne
in
cmc
filds
mov
jns
mov
in
dec
push
jge
leave
test
out
rcll
dec
sub
ds
push
push
or
pop
outsb
mov
aaa
movb
push
xchg
stos
pop
inc
mov
mov
jle
mov
in
pop
push
xchg
pop
xchg
mov
or
push
lret
rorb
xor
xor
pop
test
xor
fcoms
mov
lea
jge
cmpsb
xchg
fldlg2
cmp
int3
out
aas
fdivrl
or
mov
mov
jg
and
or
mov
in
fimuls
movsb
jl
jne
scas
cmp
test
gs
dec
shrb
inc
jb
inc
cs
aaa
iret
xor
sub
repnz
popa
faddp
test
es
mov
subb
lahf
or
imul
dec
jbe
push
push
xchg
xchg
xchg
stc
pop
sub
mov
add
or
and
movl
test
add
movl
xor
mov
cltd
mov
mov
cmp
lods
inc
rcrl
ficomps
or
mov
ja
inc
mov
push
xor
ficoml
mov
push
jnp
cmp
add
lods
aas
xor
pusha
mov
xlat
jecxz
mov
mov
jp
jge
push
les
lret
pop
sub
cmp
push
mov
mov
xchg
ret
fstps
jg
out
xchg
scas
repnz
call
subl
test
jno
popf
hlt
stc
push
repnz
cmp
inc
mov
xchg
sbb
push
and
or
ja
sub
rcl
sbb
gs
faddl
dec
fadd
or
js
add
test
adc
mov
add
andl
mov
stc
imul
xchg
popa
sub
push
sub
lock
bound
jecxz
lods
ds
xor
inc
cwtl
jo
push
int
fcomps
sbb
mov
mov
jge
int3
pop
icebp
xorb
inc
mov
push
ret
jle
push
hlt
repnz
nop
stos
arpl
incl
rcrb
addl
pop
sub
mov
mov
mov
mov
mov
fsub
lds
xchg
rolb
mov
cmp
jno
dec
add
inc
lret
push
fisubrs
mov
lret
negb
rep
out
mov
mov
testl
popa
sub
orl
dec
and
adc
xorb
xchg
add
xor
cwtl
fwait
test
push
cltd
push
mov
jnp
inc
addl
cmc
lock
insl
push
mov
addr16
out
cmpsb
addr16
sbb
call
push
adc
rcl
pop
lcall
push
pusha
mov
iret
sti
outsl
aaa
pop
adc
shll
sub
adc
rclb
mov
repnz
test
les
test
leave
xchg
pop
jb
or
test
xchg
gs
jg
aam
cmp
fisttps
jne
xor
sbb
mov
insl
mov
push
in
push
jg
sbbl
stos
out
and
mov
test
inc
test
push
push
out
sbb
jnp
mov
pop
dec
ficoms
gs
cltd
xchg
cmpsl
dec
aam
aaa
ss
lcall
fisttps
xlat
sub
idiv
sub
pusha
mov
jg
sbb
jmp
cmc
jne
outsb
and
cltd
jecxz
cmc
push
adc
push
loope
jle
xchg
pop
lret
imul
cmc
insl
arpl
mov
jle
popf
mov
bound
repz
push
sbb
adc
jg
movsb
mov
test
xor
test
cmpsl
jp
aaa
cmp
fwait
addr16
pusha
and
test
loop
insl
xor
mov
lock
sub
mov
jl
cmp
xchg
inc
push
negb
sub
js
mov
mov
idivb
rol
and
pusha
gs
pop
mov
xor
pop
sub
cmp
repz
mov
jp
aaa
mov
dec
mov
jnp
pop
shlb
xchg
jnp
push
xchg
clc
test
cmp
fsts
stos
pop
data16
sbb
rclb
nop
sbb
pushf
std
lahf
mov
dec
aas
mov
inc
mov
out
dec
scas
xor
test
cmpsl
lods
lds
cmc
mov
mov
push
fadds
or
pop
movsl
lea
pop
adc
xor
and
inc
lret
aas
pushf
pop
test
mov
pop
fcompl
mov
mov
or
lcall
inc
inc
dec
push
xlat
dec
gs
in
sarb
subb
pop
addb
dec
bnd
in
mov
mov
fiadds
cltd
icebp
lret
mov
lock
ret
sahf
lods
mov
cmp
xor
sbb
gs
push
mov
scas
fldt
inc
mov
nop
bound
hlt
mov
push
xor
cmc
out
leave
imul
and
or
mov
roll
inc
loope
mov
cld
repz
cmpsl
stc
jnp
imul
or
psrlq
jecxz
aam
adc
and
cmpsb
leave
loop
jae
mov
pop
in
std
cmpsl
int3
enter
ret
aad
jne
inc
in
in
into
or
mov
testb
shrl
dec
es
int3
xchg
adc
fdivr
jb
xor
enter
test
lods
mov
cmc
sub
push
aad
push
pop
sbb
adc
xor
sbb
inc
jp
mov
sub
repnz
dec
ds
xor
jp
mov
out
lea
add
inc
in
dec
mov
and
push
adc
or
pop
mov
lods
adc
movb
sbb
adc
shrb
jmp
or
sub
std
aas
push
addr16
jno
stos
pushf
xchg
scas
xchg
push
cli
repz
pushf
pusha
push
call
lods
jmp
jo
ds
xchg
jae
les
mov
jne
jo
sbb
outsb
cmp
add
adc
mov
and
or
mov
je
clc
lret
les
mov
mov
outsl
mov
out
pop
push
mov
lret
mov
sahf
test
jg
xor
jmp
push
inc
dec
mov
sub
sbb
xor
dec
gs
pop
daa
lret
dec
jno
mov
out
lret
repz
in
pop
movsb
je
jo
enter
cmpsl
scas
xor
je
push
inc
cmpsl
aaa
rcrb
jmp
leave
xor
bound
xchg
enter
hlt
imul
insb
push
xchg
sti
xchg
xor
jecxz
addr16
inc
push
cmp
inc
vmwrite
inc
inc
mov
cmp
push
mov
jbe
sbb
or
push
mov
xor
jne
inc
inc
jno
call
mov
pop
xor
pop
push
push
jae
movsl
adc
sub
lahf
in
mov
test
cmp
sti
repnz
xor
jmp
outsb
adcb
test
test
notb
cli
pusha
iret
ja
popa
pop
shll
int
sbb
mov
les
iret
jle
xchg
in
sbb
roll
mov
lret
xchg
adc
mov
lret
push
arpl
fdivrs
xchg
xor
push
iret
or
gs
push
or
jg
ret
adc
icebp
cmp
shlb
dec
add
push
andl
bound
loop
je
lds
out
dec
or
repnz
aas
add
aaa
and
push
adc
and
push
fcmovnu
mov
in
sbb
addl
add
mov
es
cmc
pop
jp
fwait
addr16
shlb
adc
sbb
sbb
ljmp
daa
data16
js
enter
and
jnp
movsb
mov
mov
jns
in
lret
scas
out
add
xor
in
and
popa
fstpt
xchg
test
jns
arpl
pushf
and
or
xor
loop
ljmp
pop
repnz
in
nop
pop
mov
add
lret
lock
pop
cmp
pop
lds
stos
repnz
hlt
pop
mov
sbb
inc
cmovbe
sbb
xchg
fidivl
fmul
adc
jmp
cli
sub
cmp
pop
cmc
xor
xor
lret
xchg
or
cmpsb
add
pop
jecxz
rcl
sbb
call
test
shl
cmp
mov
sub
call
jo
and
roll
mov
imul
dec
loopne
and
lods
dec
mov
mov
mov
sbb
jmp
in
outsl
dec
fnsave
pop
xor
insl
xor
sbb
mov
push
popl
push
add
inc
fiaddl
jg
adc
push
adc
inc
clc
adc
or
fisttps
cli
mov
dec
stos
push
clc
test
or
inc
test
decb
or
inc
lods
pop
int3
aas
dec
leave
int
outsl
out
xchg
push
dec
orb
lock
pop
icebp
insl
add
adc
cmp
and
push
sbb
out
shll
mov
and
mov
or
cli
and
push
add
xor
sahf
mov
push
jns
xor
and
test
jns
test
je
mov
sbb
outsb
cltd
in
mov
pop
add
inc
sub
inc
or
xchg
sbb
push
push
sti
mov
xchg
inc
loopne
push
push
popf
gs
jg
cmp
daa
mov
and
mov
jl
jmp
int
std
and
push
sbb
inc
mov
push
xor
ds
ds
pop
xchg
dec
inc
jnp
dec
xor
cmp
mov
jp
fwait
mov
mov
dec
jbe
shl
repnz
xchg
add
xor
mov
loope,pn
mov
mov
jbe
mov
cmc
mov
jecxz
and
inc
stc
iret
inc
pop
inc
jecxz
and
sub
xchg
cmp
adc
mov
es
lret
ljmp
data16
xor
iret
jnp
jmp
testl
add
pop
in
sbb
aam
stos
in
test
push
pop
mov
pop
add
mov
dec
lea
push
mov
ljmp
movsl
jp
push
pushf
jno
into
scas
sub
push
push
mov
cmp
cmc
mov
mov
xchg
lret
daa
fidivrl
hlt
ror
xor
mov
add
out
mov
cmpsl
sub
rorb
inc
fcmovbe
std
pop
and
jp
ja
pop
jns
mov
sbb
mov
fildl
lret
call
adc
divb
mov
test
mov
jbe
bound
jnp
loopne
addr16
adc
je
nop
icebp
pop
inc
mov
rorb
push
jb
or
pushf
jecxz
rorb
aaa
sub
jnp
in
xchg
push
movsb
sbb
dec
push
pop
inc
cmp
aas
data16
addr16
je
or
popa
jnp
sub
xchg
sti
int3
or
xchg
lahf
mov
pusha
ljmp
add
leave
mov
sbb
stc
add
sbb
dec
inc
pop
jae
arpl
mov
mov
repz
add
xor
and
push
dec
inc
pop
jae
arpl
mov
mov
repz
add
push
and
push
dec
inc
lock
arpl
push
sbbl
enter
enter
or
sbb
sub
cmp
inc
pop
jae
arpl
ja
xor
test
iret
movsb
inc
dec
daa
or
sbb
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
mov
cmpsl
or
adc
lret
xlat
and
test
push
stc
inc
jmp
xchg
cmp
dec
xlat
jns
adc
cltd
daa
mov
mov
leavew
push
stc
inc
jmp
xchg
cmp
dec
xlat
jns
imul
lret
enter
sahf
adc
cs
out
sub
jns
dec
cmp
dec
loop
jp
cld
sbb
pushf
in
fnstcw
dec
pop
subl
out
sub
arpl
lods
clc
int
fldenv
add
push
mov
std
push
into
das
mov
mov
add
loopne
stc
jbe
in
leave
aam
inc
push
mov
subb
cli
sbb
adc
xchg
data16
jbe
cmp
addr16
scas
repz
call
adc
movsb
or
mov
ss
lds
mov
leave
test
inc
pop
mov
imul
jno
sub
mov
out
insl
mov
nop
stc
inc
cld
je
cmpsl
or
pop
out
xlat
jns
imul
mov
addr16
push
stc
inc
adc
les
cmp
sub
aas
inc
cmp
faddl
icebp
lcall
sarl
pop
sub
adc
lock
pop
int3
xorb
xchg
pop
cmpsl
inc
rorl
dec
mov
out
xlat
jns
imul
mov
addr16
push
stc
inc
jmp
xchg
cmp
dec
xlat
jns
imul
mov
addr16
push
stc
inc
jmp
or
clc
jmp
sub
jns
sub
xchg
sbb
push
jl
int
xchg
xlat
dec
negb
rclb
rcrb
sarb
ror
fisubrl
mov
push
aam
sbb
mov
pusha
shlb
out
mov
add
shll
sbb
push
mov
xor
adc
aam
adc
je
daa
sbb
push
mov
push
mov
lods
ret
call
into
mov
pop
xor
iret
push
ljmp
jno
pop
mov
bound
mov
test
aaa
fcomps
inc
jl
push
jb
mov
push
out
xlat
dec
pop
cmc
sub
jbe
cwtl
xor
test
scas
addr16
sub
xor
inc
popf
scas
aad
repnz
jl
push
scas
xorl
clc
xlat
xor
push
loop
jle
dec
in
mov
or
loop
jp
mov
sarl
lahf
shrl
fs
push
ret
add
pop
inc
outsb
push
ja
popf
inc
mov
out
or
or
lock
clc
adc
ja
cwtl
inc
or
std
push
sub
lods
int
add
add
int
ret
aad
jl
add
sbb
insb
adc
xchg
pop
enter
push
jge
jns
and
out
dec
mov
addr16
es
add
dec
ret
inc
mov
and
filds
dec
xor
sbb
mov
jp
jmp
fcomip
negb
mov
push
push
mov
adc
mov
insl
bound
jnp
mov
xor
xor
lret
arpl
movsl
out
outsb
dec
push
and
movsb
stos
adcb
pop
mov
rorb
int
sbb
sub
jecxz
xor
aam
add
mov
fisubrs
mov
aad
aas
movsl
stos
lea
lock
pop
push
push
dec
scas
xchg
jmp
je
loopne
xor
adc
decl
inc
pop
dec
jno
gs
xchg
out
outsl
rcrl
out
out
pusha
cmpsb
shll
or
or
mov
out
movsb
stos
add
es
dec
mov
icebp
insl
push
call
in
pop
cmpsl
xchg
nop
push
enter
stc
sti
jge
int3
in
jge
xchg
adc
aaa
cltd
xor
lret
push
xor
popa
xchg
inc
xchg
aad
dec
mov
mov
orl
or
sbb
dec
xor
dec
or
mov
inc
xchg
sahf
or
outsl
push
lret
and
lods
out
adcb
repz
mov
enter
icebp
dec
dec
pop
xchg
or
mov
mov
mov
out
popa
cmp
in
inc
daa
inc
inc
ret
cmp
cmp
into
cmp
xor
je
mov
adc
roll
lods
sub
pop
imul
movsl
pushf
leave
pop
mov
das
or
or
push
gs
mull
lahf
or
cmpsb
hlt
sbb
push
push
adc
dec
icebp
dec
and
mov
aad
or
aaa
push
das
in
adc
mov
pop
pop
and
mov
lahf
inc
mov
stos
fsubrl
test
pushw
fadd
or
imul
xchg
mov
jl
jmp
ljmp
aaa
sub
mov
pop
pop
pop
mov
push
mov
xchg
es
ss
inc
rolb
jmp
inc
mov
inc
lods
sbb
clc
or
test
mov
mov
fidivrs
cmc
lock
ret
sub
inc
movsb
cmpsb
mov
jmp
and
stos
int
sub
out
pusha
jns
fs
xchg
popa
xchg
call
movsb
inc
mov
pop
imul
cmp
fwait
test
popa
mov
in
aaa
jle
in
sub
jge
jmp
je
push
push
or
rcrl
das
add
lret
sub
fucomip
xchg
sbb
xchg
add
loope
in
dec
lea
mov
hlt
dec
pop
std
dec
js
or
dec
xor
and
rclb
mov
cld
jp
arpl
jns
push
inc
add
into
repnz
push
pushl
jbe
jno
ficomps
call
adc
stos
test
xchg
inc
mov
sub
xor
nop
jp
test
in
fsubs
add
das
cli
pushf
test
dec
add
bound
addr16
into
cmp
pop
outsl
pextrw
mov
mov
jg
roll
scas
pop
clc
inc
idiv
pop
negl
and
pop
pavgb
ljmp
inc
mov
negl
pop
push
repz
test
xor
xchg
cmp
mov
add
out
mov
sub
and
add
jno
jle
sbb
in
pop
aad
pop
call
arpl
dec
repz
cmp
fwait
push
bnd
or
push
addb
mov
xor
andl
mov
xchg
aas
adc
popw
loopne
ffreep
fs
pop
fs
ds
add
xor
sub
xchg
and
int3
mov
fwait
add
pushf
cmpsb
push
xor
push
movsl
daa
out
sbb
cmpb
das
test
and
xchg
jae
push
xchg
xchg
sub
fnsave
ljmp
test
xchg
mov
das
sbb
add
sbb
std
cmp
hlt
xor
and
lods
add
sub
jge
adc
or
lcall
mov
add
mov
xchg
adc
ja
xchg
sub
add
mov
and
out
jne
shrl
pusha
and
mov
stos
jno
mov
push
jge
outsl
xor
push
bound
pop
enter
add
mov
scas
pop
loopne
cmp
and
or
and
mov
pop
xchg
fst
out
in
fildl
ret
lds
cmp
dec
ret
outsl
xor
aam
push
decb
adc
add
nop
push
pop
sbb
jns
and
mov
pop
int
lcall
out
jmp
std
dec
mov
xor
jno
dec
shll
imul
xchg
ss
mov
jle
jns
dec
push
adc
hlt
and
mov
lods
push
add
test
add
sub
nop
cmp
mov
and
movsl
xchg
xchg
loope
faddl
cmp
mov
gs
mov
in
pop
push
out
or
loopne
jmp
psubb
inc
int3
mov
push
aas
adcb
enter
repz
jae
cld
sub
jecxz
jmp
dec
imul
or
xor
nop
jne
mov
stos
jbe
fbld
dec
jge
inc
pop
es
add
jmp
repz
jg
lds
rorl
cmp
push
popf
add
test
cli
sub
push
jp
in
je
cmp
scas
cmpl
rcrl
dec
lock
ljmp
cmpsl
mov
adc
test
les
add
xchg
mov
les
xor
or
into
cmc
ja
dec
and
push
xchg
mov
mov
xor
cmpsb
push
fmulp
adc
loopne
dec
pushf
mov
sar
test
xor
divb
test
mov
jecxz
sbb
pop
iret
cltd
test
xchg
xor
out
xor
gs
repz
inc
mov
xorb
mov
pop
clc
sub
inc
cli
mov
lods
or
xchg
jne
mov
fwait
test
out
and
adc
aaa
insb
pusha
dec
das
out
pop
test
fsubl
cmp
jnp
hlt
push
shrl
mov
mov
or
mov
and
les
sbb
int3
jmp
add
inc
dec
add
push
inc
xchg
mov
and
fcompl
push
and
xor
and
mov
cmp
int3
jb
dec
xlat
ud2
jg
cmp
out
lahf
and
xlat
inc
lret
dec
mov
push
bound
lods
rorl
mov
repz
xchg
mull
bound
cmc
leave
cwtl
int
cmp
sbb
cs
mov
mov
xlat
movsb
pop
test
xor
sbb
in
sbb
mov
in
sub
pop
repz
imul
cli
sbb
jne
leave
push
dec
inc
outsl
add
out
lret
xchg
pop
iret
pop
test
push
pop
xchg
dec
jecxz
xchg
add
aam
mov
lods
inc
inc
dec
jne
add
test
cmc
cs
dec
xchg
es
sbb
movsb
lret
out
mov
mov
dec
fcomi
stc
dec
sub
and
jg,pn
push
aaa
jb
leave
sub
add
lock
scas
mov
sbb
push
mov
jno
clc
add
addr16
sbb
add
adc
xchg
aam
xor
mov
shll
lods
aam
lods
xchg
adc
pusha
xlat
push
inc
xor
mov
xor
jbe
jo
fcmovbe
mov
pop
and
xor
mov
shlb
pushl
adc
jns
ftst
xor
mov
rcrb
pop
stc
xlat
or
gs
std
shl
cld
popf
and
adcb
cmpsl
in
mov
jbe
ljmp
xchg
mov
pop
dec
dec
jge
es
cmp
jecxz
pop
stos
xchg
mov
sub
cs
mov
ja
mov
or
xor
push
loop
xchg
inc
sbb
imul
jb
jp
testb
cld
repnz
push
sbb
insl
xor
jl
cs
pusha
test
jns
ja
cltd
or
push
je
sub
adc
and
out
cmpsb
xlat
push
pop
mov
incl
jge
dec
into
or
ret
pop
cmc
fwait
push
sub
sbb
addr16
mov
aad
mov
push
sub
fldenv
outsb
aaa
pushf
mov
cmp
xor
in
mov
cmp
rcrl
movsl
fstp
insb
pop
fst
cmp
rcrl
addr16
add
mov
dec
mov
adc
and
ret
in
or
shr
aam
loop
lret
sbb
add
negb
and
push
jl
enter
or
out
add
adc
mov
mov
dec
leave
push
fldz
cli
xchg
fneni(8087
adc
movsb
add
mov
dec
jne
xor
lods
mov
fisttps
or
lea
aas
movsb
or
dec
sbb
sub
xchg
pop
stos
cmpsb
lock
fs
idivl
dec
test
dec
fdivl
cmc
aam
mov
push
add
and
xor
int3
out
ds
mov
add
cmp
and
push
pop
data16
inc
mov
divl
sub
fldt
cmp
and
add
mov
das
inc
or
lods
pushf
les
mov
jge
jge
jle
ljmp
imul
jge
dec
rep
xor
jb
jne
les
test
inc
cld
mov
jle
test
mov
ret
aad
xor
ret
in
shr
in
xchg
les
mov
gs
pop
std
les
dec
lea
dec
adc
shlb
ljmp
js
fisttpl
push
cli
std
loope
mov
sub
shlb
adc
aad
cmp
in
rol
movsl
sub
mov
add
mov
insl
add
push
push
pusha
in
test
loopne
sarb
or
cmc
cld
xchg
in
popa
inc
fcmovnbe
pop
adc
fbstp
out
pop
pop
popf
js
ret
int
mov
mov
cs
ret
mov
and
pop
mov
push
or
mov
jl
xchg
or
clc
jecxz
imul
cli
arpl
cmp
xchg
jp
fidivs
jnp
or
leave
popf
lcall
push
xchg
pop
mov
lea
inc
push
lods
mov
stc
int
push
pop
xor
test
movsl
push
mov
hlt
inc
mulb
or
xchg
inc
sbbb
repnz
push
outsl
push
mov
outsl
mov
dec
sbb
lret
pop
je
and
xor
jecxz
pop
or
stc
mov
shr
push
sbb
adc
aam
stos
xor
xlat
movsl
ja
mov
jbe
xchg
stc
lahf
aam
outsl
push
pop
addr16
in
push
and
dec
test
test
pop
cli
sbb
adc
icebp
lea
cmpsl
xor
leave
ret
dec
aaa
pop
jmp
jo
aaa
sbb
test
dec
ss
xor
xor
xor
pop
inc
mov
lret
jmp
arpl
dec
and
lods
lcall
cmp
xchg
jg
or
xchg
add
mov
aam
cwtl
aad
icebp
adc
mov
push
sti
xor
add
addb
outsb
call
mov
mov
mov
sub
mov
mov
stos
mov
cmpsl
cs
and
inc
pop
cmpsb
movsl
xchg
xor
mov
sti
jns
data16
dec
movsl
or
jno
in
cmp
xchg
test
cltd
jp
sbb
push
adc
mov
sbb
cmpl
jnp
xchg
scas
jle
pusha
out
inc
insl
adc
fs
fistpl
es
lret
inc
cmpl
mov
int3
stos
jmp
or
push
dec
les
inc
inc
mov
sub
sub
ret
push
push
xchg
or
inc
sbb
cmp
mov
mov
mov
test
cld
das
pop
sub
and
jno
cmp
push
or
pop
insb
push
rorl
cmp
push
les
mov
jl
test
add
stos
das
imul
jle
iret
sbb
sbb
outsl
dec
pop
repnz
addl
aam
pop
or
int3
add
sbb
jnp
cmp
movsb
cmp
test
lcall
test
jb
pusha
jecxz
mov
push
inc
in
fscale
dec
cli
sbb
lods
inc
mov
sbb
mov
inc
jnp
xor
les
bound
pop
xor
sub
sub
out
xchg
mov
pop
in
fistl
pushf
add
or
jb
add
icebp
data16
fcmovnu
faddl
shlb
sub
push
and
enter
jp
jns
movsl
arpl
jns
mov
jmp
outsb
fsubl
iret
dec
mov
dec
cmp
xchg
aad
adc
dec
push
mov
push
sbb
mov
push
inc
inc
int
aad
xchg
mov
jo
test
sbb
popf
dec
repz
mov
inc
cwtl
xlat
jnp
xor
stos
scas
sub
and
in
scas
xchg
jbe
jle
push
inc
sbb
in
jecxz
in
imul
lahf
mov
xchg
and
dec
int3
imul
mov
xor
sub
jp
and
jmp
or
xchg
inc
cmp
sbb
pop
add
fadds
mov
inc
cmp
mov
mov
dec
cmp
pop
dec
jnp
mov
dec
jmp
xchg
daa
cmp
xor
cwtl
in
faddp
mov
adc
mov
insl
aam
jg
jg
gs
je
pop
call
movsb
in
ds
fisttpll
lock
add
push
and
out
mov
pop
roll
sbb
test
addr16
loope
push
sbb
cwtl
dec
fdivrs
pop
les
int
sub
dec
cmp
dec
int
pop
sub
gs
mov
test
xchg
and
jne
sbb
xchg
dec
pop
pop
movsl
and
add
add
imul
mov
xchg
cmp
mov
mov
lret
mov
dec
pop
lock
sbb
dec
roll
adc
mov
adc
dec
cmp
bound
xlat
daa
jge
lods
inc
in
xchg
cmp
and
out
sahf
jae
ljmp
jecxz
int3
jns
inc
dec
push
pusha
dec
jno
cmc
mov
fcom
cmp
aas
stos
divb
jnp
push
cmp
je
sub
ja
movsl
pop
leave
ds
push
dec
shrb
shlb
cmp
pusha
vcvtsd2si
xchg
enter
hlt
je
inc
shlb
cs
testb
mov
pop
es
scas
cmc
ljmp
and
cmp
sub
cmpsl
cld
jp
jg
mov
fs
dec
xchg
movsl
push
jne
es
xchg
out
adc
mov
or
imul
dec
int3
out
ud1
mov
lods
cmpsl
pcmpgtb
daa
mov
aad
mov
adc
jne
xor
adc
fs
aas
call
adc
lock
xlat
pusha
xor
push
mov
mov
mov
cmp
or
rorl
int3
ficomps
dec
pop
pop
imul
mov
xor
je
mov
push
scas
loop
clc
mov
mov
and
or
ds
dec
push
adc
cld
xchg
lahf
ror
pop
jns
dec
add
cmpsb
mov
imul
mov
push
mov
xor
add
jb
fistpl
inc
xchg
cmpsb
fcmovne
jmp
or
mov
out
test
addb
lret
cmc
pop
repz
lahf
push
fisubrl
sarl
lret
cmp
pushf
in
lea
insl
rolb
in
scas
dec
or
sarb
popf
in
inc
cld
adc
inc
dec
sub
lret
testb
fs
test
and
insl
jle
subl
mov
cmpsl
fs
pop
inc
dec
xor
lahf
nop
or
inc
dec
push
jle
ret
stos
push
mov
lods
hlt
cmpsb
xor
sub
adc
jl
insl
mov
jecxz
movsl
clc
shlb
pop
in
mov
push
call
iret
insb
shll
nop
test
or
cmpsl
lahf
aas
push
cmp
sbb
dec
add
cmpsb
fdivr
sub
dec
repnz
add
lods
pop
jo
mov
fdivs
outsl
shlb
out
sarb
je
arpl
arpl
sub
and
pop
pop
adc
xchg
mov
cli
jbe
xchg
cld
mov
sub
or
mov
xchg
out
sarl
mov
dec
jecxz
xchg
jae
test
mov
idivb
fildll
and
fwait
or
mov
and
js
push
lret
sbb
jle
rorb
dec
add
add
xor
out
lahf
push
cmpsw
pop
push
jle
psrad
shrl
dec
ja
aaa
mov
divb
adc
int3
ss
sbb
pop
adc
cmpsl
inc
mov
icebp
cmp
xor
mov
inc
pusha
or
into
in
std
shlb
in
pop
mov
pushf
lea
fisubs
ss
pushf
out
aam
sbbb
outsl
lea
cmpsb
in
iret
aaa
rcl
sbb
test
cmp
mov
imul
aaa
inc
shll
and
xchg
xchg
sbb
rcrl
or
in
pop
jb
es
and
dec
pop
push
pop
je
mov
push
imul
jne
add
mov
ret
pushf
fistpl
cs
push
sub
out
cmpsb
loopne
sub
sub
add
push
push
dec
cmp
adc
jo
inc
inc
dec
mov
test
rcr
sbb
imul
inc
cmp
cmp
sbb
jmp
xchg
inc
ret
xlat
clc
push
es
or
pop
lods
add
loopne
arpl
enter
scas
mov
cmc
mov
xchg
inc
mov
rclb
das
adc
jns
jns
xor
call
hlt
loop
mov
push
mov
repnz
cs
pushf
hlt
xorl
sbb
ret
mov
stc
jl
enter
dec
gs
inc
add
repz
ret
xchg
arpl
popa
test
repnz
push
sahf
xchg
pop
pop
push
sub
cmp
ds
jge
sub
sbb
das
scas
mov
jo
inc
stos
jp
jp
xchg
in
sbb
int
fistps
insl
in
cmpsb
cmp
fwait
xchg
push
inc
scas
dec
xchg
add
int3
xor
or
adc
mov
daa
lcall
xor
cmp
dec
jo
fistl
mov
add
outsl
iret
sub
jne
mov
iret
movsb
adc
jle
sub
std
mov
and
xchg
inc
daa
das
aas
adc
mov
push
fdivr
aam
fucomp
lock
dec
in
inc
mov
lock
fs
lods
hlt
out
ret
fucomip
fsubl
cmpsl
mov
hlt
in
jae
jle
int3
push
pop
xchg
dec
or
pop
out
xlat
jns
imul
mov
addr16
push
stc
inc
jmp
xchg
cmp
dec
xlat
jns
imul
mov
addr16
push
stc
inc
jmp
xchg
cmp
dec
xlat
jns
imul
mov
addr16
push
stc
inc
jmp
xchg
cmp
dec
push
jns
imul
mov
out
ss
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
out
push
jp
dec
fstpl
xchg
iret
push
lods
arpl
sti
dec
ficomps
sub
mov
jp
dec
fstpl
sub
outsb
insl
out
cli
sub
pop
fisubrl
cmp
lcall
add
and
ljmp
inc
in
into
pop
clc
inc
cmc
andl
or
das
mov
test
jmp
dec
mov
into
rcr
push
jne
jecxz
push
lock
inc
pop
or
cmc
adc
fwait
adc
mov
in
jp
bound
idivb
add
test
scas
inc
cmp
jge
pop
mov
js
lds
xchg
test
mov
or
mov
lahf
insb
or
leave
xor
cmp
mov
out
lock
mov
cs
ljmp
dec
push
incb
push
fsts
pop
adc
and
push
mov
test
pop
cmpb
xor
outsb
pop
or
jge
push
push
fstpl
sub
cmp
ljmp
gs
mov
test
or
sub
pop
stc
popfw
jg
test
cli
sub
cmp
fs
mulb
cmp
js
enter
das
lahf
dec
scas
and
mov
subl
pop
sbb
sbb
jge
dec
lret
sub
mov
jp
dec
fstpl
sub
sbb
jge
dec
lret
sub
mov
imul
mov
dec
mov
lds
cmp
inc
inc
cmpsl
dec
fdivrl
jle
aaa
out
add
out
adc
cmp
and
or
jb
jge
je
sub
or
adcl
lods
rolb
cwtl
in
xchg
daa
push
push
iret
jmp
mov
lea
cmpsl
enter
sbb
lods
push
jle
jg
push
sbb
es
xor
sub
push
rol
ficoml
movsl
rorb
xchg
hlt
test
loop
mov
or
in
mov
cwtl
fwait
aas
aad
lcall
adc
je
pop
sti
mov
dec
cmc
insl
fucomip
sub
pusha
aaa
divb
xor
push
lret
inc
lret
lcall
hlt
fnstcw
jmp
inc
repnz
inc
pop
cmp
movsb
cwtl
ret
pop
aas
in
ss
inc
push
out
jno
sti
aam
push
leave
mov
dec
add
mov
xchg
push
inc
stos
cwtl
jo
inc
pop
pop
mul
mov
adc
mov
leave
or
xchg
ficompl
pop
push
arpl
fisttpl
xchg
xor
or
aam
fsubl
cmp
push
xor
in
loop
cld
cmpxchg
pop
aam
cld
sbb
call
or
cmp
jno
mov
movsb
and
push
dec
out
inc
repz
push
imul
xchg
mov
movsb
sarl
movb
addr16
jnp
movsb
xor
or
sti
xorl
adc
inc
mov
data16
or
pop
insb
jno
loop
aas
enter
out
sub
xor
add
mov
nop
dec
jbe
mov
cmpsb
mov
jg
cli
push
mov
dec
stos
into
sahf
lods
dec
adc
das
push
and
mov
lcall
ljmp
orl
movl
mov
add
mov
add
mov
icebp
out
xchg
mov
push
arpl
mov
rorb
bound
fnstcw
sbb
xor
xchg
xchg
xchg
mov
cltd
push
cmpsl
mov
pop
push
push
popa
cmp
xchg
pop
jne
dec
mov
xchg
push
ljmp
test
fsubr
dec
pop
and
nop
mov
adc
mov
xchg
sbb
cmpsl
inc
out
divb
or
cmp
cmp
outsl
xor
cwtl
ret
dec
cmpsb
out
push
hlt
pop
jae
pop
lea
push
jno
jg
insb
and
cmp
sub
push
jbe
shl
out
dec
cmp
sub
shrl
mov
jge
sub
and
iret
add
xchg
mov
in
pop
fsubrs
stc
movsb
pop
pop
ficoml
dec
and
addr16
push
movsl
dec
nop
in
gs
xor
sub
xchg
cltd
imul
repnz
sub
jecxz
inc
imul
jno
sbb
mov
shrb
dec
mov
inc
pop
cld
jns
sbb
add
xor
jecxz
insl
repz
fdiv
push
sub
inc
dec
in
leave
xchg
jecxz
push
out
iret
lea
enter
dec
and
xor
dec
int3
imul
cwtl
sbb
jmp
jmp
call
and
mov
push
pop
mov
repnz
sahf
xchg
mov
xchg
xor
out
jbe
loopne
stos
xchg
stos
pusha
add
mov
ds
dec
out
inc
add
mov
aaa
or
sub
sahf
and
add
sub
scas
lock
pushl
repnz
mov
sub
mov
imul
mov
dec
js
cwtl
sub
cltd
mov
mov
popl
inc
sub
sub
pop
ds
and
dec
jae
mov
lds
cmp
pusha
jp
mov
sbb
movsl
xor
aaa
push
gs
cmpl
sub
popa
ljmp
in
sub
insb
outsb
stc
mov
mov
lods
cmc
fisttps
inc
outsl
cli
aas
daa
pusha
out
pop
iret
mov
outsl
shlb
push
rcll
dec
and
inc
inc
pop
mov
lea
sbb
test
sub
and
out
xorb
sbb
or
jmp
das
std
xor
fstpt
insl
xchg
jo
out
ds
add
loope
ret
dec
or
add
jnp
cmp
movsl
pop
or
push
or
push
dec
and
xlat
jno
call
push
ret
sbb
cmpsb
mov
aaa
cmp
mov
add
sub
test
aas
lcall
cmp
je
vaddsubps
lock
pop
mov
addb
gs
xchg
jge
movsl
scas
outsb
icebp
add
mov
stos
rclb
cs
sbb
and
xor
inc
movsb
jb
jb
lahf
lods
adc
mov
mov
sti
push
dec
and
shrl
in
mov
ss
mov
sub
movsb
cmp
jno
dec
mov
inc
jg
ljmp
and
and
mov
ret
mov
fs
jb
inc
test
orl
loopne
outsb
icebp
into
adc
test
pop
inc
cwtl
sbb
pop
jl
int
bound
fcomi
fists
ss
mov
pop
stc
mov
sbb
loope
ja
and
in
test
jge
dec
push
xchg
daa
sbb
hlt
mov
or
in
iret
aas
scas
mov
inc
ret
push
and
lret
pop
addr16
imul
inc
dec
cmp
jmp
and
ja
mov
enter
loopne
or
jbe
inc
jle
push
in
sbb
mov
cmpb
cmp
mov
mov
sub
push
push
cwtl
ret
mov
or
lods
jns
or
sar
dec
leave
xchg
rcrb
inc
imulb
mov
xlat
dec
and
test
subl
int
lock
push
push
fcomps
jne
cmp
and
in
scas
cmp
cmc
inc
mov
ljmp
pushf
sbb
cli
sub
or
xor
fldcw
mov
test
rcl
pop
adc
fildl
adcl
cwtl
lds
jp
jl
popf
aam
in
sbb
sub
add
mov
in
xchg
movsl
mov
leave
int3
lods
arpl
orb
and
dec
xchg
das
mov
scas
sbb
imul
jge
outsb
dec
add
rcr
ljmp
loopne
in
dec
or
pop
pushf
not
mov
imul
std
shll
and
daa
in
sbb
lea
stos
rorb
cli
stos
imul
aaa
pop
add
les
cmp
xor
arpl
mov
bound
push
and
lcall
inc
dec
mov
repz
pop
insl
bound
mov
ljmp
lcall
mov
movsl
sub
push
xchg
cmp
adc
shlb
cmp
ficomps
adc
cmp
or
jnp
mov
jl
jmp
shll
into
cmpsl
jmp
loope
mov
shl
add
xchg
dec
mov
cmpl
push
leave
xchg
das
jle
or
or
pushf
mull
popf
xchg
push
test
fimull
push
lcall
bound
xor
push
popf
sbbl
cmp
aam
sbb
and
jne
pop
pop
rcrb
pop
jmp
fprem1
mov
xor
xchg
cmp
sbb
roll
xchg
mov
inc
mov
rcll
dec
mov
xchg
leave
push
pop
dec
repnz
sbb
ret
mov
mov
shll
mov
movsb
bound
movsb
enter
push
rorb
arpl
rorl
insl
fcompl
es
fsubl
mov
xor
ss
jmp
fldenv
bound
rorb
testl
mov
shlb
inc
aaa
or
test
jecxz
and
sub
xor
nop
icebp
jle
nop
sbb
sahf
jae
and
cmpsl
mov
insb
mov
fisttps
inc
xchg
aad
insl
shr
add
push
sbb
sbb
jp
dec
dec
sbb
mov
sub
jmp
jg
sub
xor
or
adc
adc
ds
lcall
lock
jbe
lock
ds
push
push
cmp
push
mov
sub
sbb
push
cmp
into
and
fwait
pop
fistl
fcom
addr16
sahf
xchg
and
loop
mov
enter
sub
insl
sub
xor
inc
or
mov
not
aaa
mov
subb
mov
mov
push
ljmp
lret
mov
xor
sarb
mov
pop
pop
filds
mov
dec
dec
test
xchg
aad
sbb
dec
mov
scas
mov
lret
adc
aas
sahf
cmp
mov
aaa
mov
xchg
mov
add
pusha
cwtl
mov
sbb
mov
test
xor
mov
aad
push
in
mov
mov
jmp
fildll
mov
je
rorb
jmp
xchg
rolb
push
cmp
jno
inc
xor
gs
ret
dec
outsl
nop
pusha
inc
dec
adcl
mov
sti
out
lds
clc
inc
mov
jmp
clc
in
cmpsb
fimuls
cld
xor
cwtl
and
test
adc
movsl
outsl
fsub
sub
dec
aaa
addr16
pushf
push
sub
cmp
fimull
xchg
mov
fs
xor
pop
xor
outsb
adc
fucomip
dec
cmp
movsb
call
sbb
cltd
cld
add
and
cmp
lret
mov
sub
xor
sti
movsb
es
in
out
mov
mov
ret
vpackssdw
test
pop
fdivrs
int
shlb
pop
mov
mov
pushf
imul
push
andl
push
inc
pop
xchg
mov
lock
ljmp
pushf
mov
mov
or
push
add
subl
es
dec
pop
pop
jecxz
inc
xchg
push
in
fxch
sbb
dec
xchg
sbb
and
arpl
sbb
cmpsl
and
cmp
lea
leave
add
cmp
lods
movsb
xchg
outsl
push
in
adc
lods
xor
fildll
xor
and
cmp
andb
fcomps
out
sbb
repz
js
orb
movsb
inc
insl
pop
and
lods
lea
jmp
inc
or
cmpsb
sbb
adc
lahf
in
lods
gs
jnp
adc
fs
aas
xchg
pop
cld
jne
xchg
xchg
test
in
dec
inc
bound
jmp
mov
pop
jle
loope
push
aaa
mov
adc
or
lcall
pusha
fldenv
call
stos
fstpt
rclb
jg
scas
lock
addr16
xchg
rclb
and
jmp
and
mov
xchg
outsb
ljmp
mov
mov
mov
cmp
jp
pop
mov
scas
or
and
adc
add
or
mov
xor
test
mov
sarl
mov
loopne
xor
push
inc
insl
mov
lock
ret
cmp
mov
loopne
mov
shrb
mov
and
push
shrl
sbb
pop
dec
imul
inc
js
mov
lock
ds
test
pop
mov
pop
es
daa
repnz
pop
cmc
mov
push
scas
and
out
test
lea
test
mov
mov
jne
sub
or
pusha
fcoml
xchg
scas
inc
jg
sbb
ljmp
in
and
adc
loope
xchg
xor
repz
call
xchg
push
icebp
data16
adc
mov
stc
pop
add
hlt
loope
shll
lea
and
testb
pop
push
inc
mov
xchg
push
repz
add
cmpsb
xchg
push
push
adc
popf
mov
fnstenv
decl
rcl
in
add
loopne
out
jno
jne
test
adc
in
mov
inc
mov
jnp
or
push
mov
inc
clc
and
cmp
fnstcw
in
or
xor
or
push
fimull
and
lahf
popf
loopne
xor
in
clc
stos
mov
mov
js
adc
sub
cltd
add
cmp
cmp
push
mov
mov
add
add
or
pop
jp
cli
or
jge
sbb
lahf
stos
mov
fsts
dec
fmuls
dec
aas
pop
inc
pushf
imul
ja
fimull
sub
les
imul
pop
xchg
aad
adcl
jge
cld
mov
inc
lea
in
icebp
pop
ja
hlt
adc
or
jbe
adc
push
adcb
ret
cmp
ds
rcll
bound
and
out
inc
adc
mov
cmc
insb
scas
mov
push
mov
mov
fisubrs
add
jb
fs
sub
pop
fldenv
lea
dec
outsb
push
data16
pop
sti
fisubl
repnz
fmulp
addr16
aad
aam
loop
dec
and
and
and
or
jmp
pop
xor
ficomps
cmp
push
push
lods
das
pusha
out
inc
dec
ss
add
in
lcall
push
and
lock
leave
clc
lock
mov
push
and
sti
adc
dec
arpl
xor
inc
mov
nop
mov
mov
cli
push
hlt
repnz
in
pop
ret
ss
lea
out
fcmovnu
fiaddl
lcall
jb
jge
js
cmp
jecxz
fstl
loope
cmpsb
sub
mov
xor
jae
std
xor
mov
addr16
jl,pt
add
aad
mov
adc
lods
jmp
and
int
sub
xor
je
pop
in
outsl
mov
sbb
cmp
lret
test
les
cmc
loope
and
stc
int3
or
add
mov
out
mov
mov
push
in
xchg
push
fwait
pop
sbbl
adc
fwait
sbb
xor
push
vfmadd231pd
mov
mov
pop
mov
dec
xor
sub
pop
mov
dec
daa
ficoml
lahf
rclb
dec
fstp
movsl
stos
cmp
stc
je
adcb
jnp
mov
jmp
insb
cvtps2pi
mov
mov
mov
inc
inc
xchg
insl
cmp
xchg
pop
jecxz
xor
fwait
mov
mov
js
push
fs
pushf
and
xor
sub
adc
cmp
sbb
cld
adc
lret
scas
popf
lods
lret
cmpl
dec
mov
enter
dec
dec
cltd
mov
or
xchg
and
ds
test
ja
push
push
out
sbb
mov
aaa
imul
data16
stos
fdivl
sar
nop
lret
inc
test
add
popa
je
cmpsb
xlat
mov
mov
ror
cmp
xchg
call
int
dec
fsubs
scas
or
call
xlat
in
xchg
inc
hlt
enter
dec
add
pop
dec
mov
ljmp
decl
cmc
cmp
adc
xchg
xor
leave
rcrb
dec
imull
loop
dec
aaa
sahf
loop
adcl
aas
xchg
push
mov
pop
adc
push
test
jmp
rcl
jge
out
inc
scas
repz
cmpb
xor
mov
rolb
lods
dec
popa
jnp
gs
push
movsb
adc
fbld
lods
mov
mov
cmc
xchg
addb
dec
std
int3
push
xor
mov
push
add
mov
lock
ljmp
gs
in
push
add
push
jae
nop
mov
movsb
movsb
add
mov
popa
push
test
int
rclb
mov
sahf
mov
pop
pop
fistpll
xchg
repnz
lds
mov
loop
inc
test
lret
xor
cld
sub
aaa
adc
mov
xor
dec
jecxz
mov
iret
sbb
xor
hlt
push
sub
aad
fldcw
sub
stos
cmpsl
fiadds
insb
cs
and
xor
cld
mov
add
repz
imul
int
ret
clc
jl
sbb
push
inc
lods
push
dec
inc
ficoml
and
hlt
negb
cmc
aas
dec
push
push
cmpsl
lcall
xor
test
movb
out
cli
xchg
test
fs
cs
jbe
and
and
push
fucomp
ss
jecxz
pop
mov
loopne
dec
jne
adc
xor
pop
ja
es
cs
adc
jae
shll
xchg
popa
popf
and
xchg
insb
addb
out
hlt
adc
dec
jnp
xor
push
jns
clc
mov
pop
fsubrs
rorl
test
pop
jp
or
test
mov
lret
sbb
lret
int
jmp
arpl
add
cmp
in
roll
cwtl
ja
stos
xor
addl
jo
imul
and
jmp
pop
jb
fistpll
sti
enter
push
push
jo
lea
pusha
lret
ljmp
daa
jge
pop
mov
clc
jl
pushf
jne
dec
ljmp
test
movsb
arpl
jns
mov
jnp
and
mov
xchg
aad
pop
jl
xorb
lods
leave
test
push
out
add
mov
push
in
stos
jne
mov
and
xchg
mov
jecxz
mov
mov
push
stc
and
sbb
adc
outsb
clc
lcall
push
mov
push
mov
cld
icebp
inc
repz
imul
lock
sar
jp
add
inc
cmp
sbb
scas
nop
hlt
stos
test
fucomip
pop
dec
fadd
rcr
mov
xchg
lahf
imul
adc
mov
xchg
ds
test
out
inc
negl
ficomps
inc
mov
xor
dec
mov
mov
fisttpl
fcoml
sarl
loope
push
mov
icebp
mov
push
push
or
mov
sar
js
rcll
cwtl
js
lret
or
pop
mov
stos
shl
mov
mov
js
xchg
int
push
adc
fdivrp
addb
popa
cmp
stc
sbb
cli
ja
pop
pop
shlb
pop
rcrl
mov
sahf
jecxz,pt
cmp
call
cmp
mov
imul
das
jno
push
mov
dec
pop
pop
insl
mov
xchg
jg
pop
dec
push
xor
push
sbb
sub
xchg
js
pop
ja
clc
xchg
arpl
andl
aaa
or
icebp
xor
movsl
xchg
mov
sbb
dec
cltd
pop
in
ss
cmp
scas
xchg
pop
sub
in
cmc
lods
or
loop
mov
jns
icebp
push
and
iret
mov
adc
icebp
mov
mov
popf
loope
and
loop
lret
imul
fsubrs
cmp
pop
sti
ffree
sub
icebp
pop
outsb
push
jle
inc
std
outsl
pushf
add
adc
mov
out
push
cmp
cmp
push
push
cmp
repz
repnz
dec
out
mov
inc
loop
in
shll
pop
inc
xor
aam
jg
movsb
loopne
jbe
mov
mov
mov
mov
mov
repz
sbb
mov
divl
cmp
jecxz
push
fsubrl
xchg
xchg
lods
and
nop
hlt
sahf
fdiv
ds
xchg
fiaddl
jnp
sub
hlt
inc
lods
lahf
dec
add
xor
xchg
dec
xchg
les
xor
mov
pop
addl
jne
mov
out
sub
sbb
pop
fcoms
xor
add
adc
sbb
cs
add
scas
mov
sub
push
inc
clc
inc
sbb
mulb
or
sub
cmc
mov
rcrl
loopne
neg
jge
imul
push
dec
repnz
mov
xchg
movsb
jp
loopne
xor
push
lret
sub
mov
or
call
test
mov
jns
cwtl
lods
and
mov
or
xchg
stc
mov
repnz
push
cmpsb
xor
js
dec
dec
sub
pop
mov
mov
pop
fidivl
adc
xor
popf
daa
or
repnz
cld
push
mov
and
or
out
lret
movsl
popa
pop
mov
mov
mov
push
push
lods
cmp
iret
repz
jo
scas
mov
mov
cmc
popa
inc
fwait
rclb
and
jle
mov
pop
lods
sub
sbb
jge
dec
lret
sub
mov
jp
dec
fstpl
sub
sbb
jge
dec
lret
sub
mov
jp
dec
fstpl
sub
sbb
jge
mov
stos
sub
sahf
stc
outsb
mov
pop
lods
sub
fisubrl
adcb
pop
lods
pop
and
in
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
