in
mov
add
bound
dec
cmp
ror
pusha
xchg
bnd
rorl
dec
rorb
adc
js
loopne
and
out
test
pop
dec
ror
pslld
adc
or
add
push
test
dec
pop
jle
dec
xor
cmp
inc
mov
and
pop
push
fdivrl
scas
pop
mov
adc
mov
sub
jae
lcall
dec
aam
or
push
and
fsub
iret
clc
adc
flds
and
lea
sub
roll
mov
fwait
sbb
fildl
push
cmpsl
aad
out
loopne
or
fs
add
mov
mov
or
lock
dec
sarb
push
xor
sub
mov
fists
outsl
test
add
dec
adc
xor
sub
add
lea
mov
push
fnstsw
push
es
scas
mov
dec
xor
pop
cmp
xor
mov
cltd
mov
xor
sarl
mov
or
call
repz
cmpsl
inc
cmp
jae
in
lods
add
pop
or
push
xchg
aam
lret
xchg
add
sub
hlt
mov
mov
cmp
jle
hlt
xor
and
jae
ficoms
pop
or
lahf
push
mov
sub
int
rcrb
mov
lods
inc
insb
out
jne
cli
enter
fisubrs
adcb
bound
xlat
ja
pop
scas
jmp
sub
jecxz
dec
adc
xor
decl
push
popa
into
xor
cmp
inc
pop
or
xchg
inc
fs
push
jp
push
adc
or
push
mov
mov
bound
loopne
adc
stos
mov
fidivrs
cmp
push
add
icebp
cmc
jl
loop
sub
push
dec
popa
jmp
push
ret
cltd
ja
je
jb
jl
ret
add
sbb
gs
fcmovb
icebp
fnstsw
mov
or
jl
push
mov
pop
out
lds
jecxz
mov
rcrb
inc
out
jbe
push
mov
sub
fld
lret
push
xchg
out
repnz
jo
jge
loop
lret
imul
je
icebp
mov
cmp
mov
push
insb
call
imul
mov
cmpsb
cmp
cmp
fwait
sub
dec
jecxz
cmpsl
mov
jp
dec
mov
pusha
mov
loop
jmp
jns
dec
xchg
imul
cmp
mov
or
and
sub
jns
xor
cmp
mov
in
lcall
push
add
into
mov
std
ficompl
rcrb
xlat
pusha
out
inc
test
test
or
lock
inc
scas
sbb
test
inc
lahf
in
dec
add
adc
jns
jmp
fs
int
loop
out
add
daa
clc
jl
icebp
xchg
test
dec
jle
into
push
aam
mov
cld
stos
pop
or
aas
cld
adc
xorb
cltd
or
inc
jp
jne
arpl
int
jmp
iret
outsb
les
xchg
call
inc
loop
mov
aas
dec
inc
mov
pop
test
ja
stc
imul
add
gs
push
gs
outsl
jns
das
test
das
mov
adc
sub
jbe
leave
xchg
jmp
push
push
mov
jmp
push
js
inc
xchg
and
mov
ds
lock
push
cmp
insb
stc
xor
inc
sbbb
dec
push
cmpsb
cmpsl
push
roll
in
mov
repz
mov
arpl
repz
mov
pop
lods
sbb
fs
jae
jbe
cmpsl
xor
popf
or
mov
push
subb
mov
rcl
jae
push
hlt
andl
int3
dec
dec
cmp
and
scas
add
mov
stos
jmp
mov
lcall
mov
ds
pushf
addr16
outsl
xor
sub
test
int
push
xchg
into
jae
mov
fcmovnb
scas
ja
in
shll
aas
or
sub
sbb
adc
pop
mov
aam
inc
adcl
jns
or
dec
and
pop
dec
ret
fnstsw
adc
jg
inc
adc
fsubl
arpl
outsl
mov
cmp
push
sub
and
xchg
jns
out
rcl
xchg
jae
leave
gs
push
add
rcl
test
movsl
ss
mov
pop
dec
aas
pop
cmp
cmp
fnstcw
mov
push
jg
faddl
das
pop
sub
cmpsl
xlat
out
inc
xor
mov
cmpsb
cmc
pop
cltd
inc
inc
sub
cmp
pop
into
inc
clc
loop
mov
pop
fs
sbb
clc
sbb
and
mov
cmp
fwait
lcall
push
add
lea
mov
imul
jo
mov
dec
loopne
mov
mulb
lds
adc
inc
mov
scas
and
loop
outsl
pop
int3
fcoms
cwtl
sbb
movsb
sbb
lret
stc
fistps
repnz
in
jp
outsl
xchg
jb
cld
inc
inc
add
xchg
xchg
inc
add
adc
addr16
push
push
sub
push
mov
sbb
xchg
inc
xchg
fisttpll
pop
aas
xchg
jecxz
loopne
and
bnd
cmp
jp
pushf
dec
inc
mov
xlat
sbb
jl
in
add
mov
add
or
insb
jb
neg
inc
mov
xor
out
mov
leave
xor
shlb
xchg
mov
mov
inc
mov
lods
daa
adc
aas
rclb
je
test
icebp
test
xchg
fnsave
out
cmpsl
in
pop
pop
xor
insl
pop
lods
icebp
aad
xor
push
mov
out
repnz
pusha
push
mov
mov
mov
jmp
ffree
stc
cmc
mov
lods
dec
inc
cmp
js
jne
pop
sarb
pop
notb
pushf
ja
jecxz
mov
inc
pop
mov
xor
iret
pop
pop
ljmp
jb
xor
and
mov
lock
pop
mov
cmp
idiv
mov
add
rclb
clc
mov
adc
das
cmpsl
jbe
sub
cmp
les
and
pop
leave
jmp
mov
insb
push
inc
jl
insb
nop
fucom
cltd
cmp
lcall
sub
jmp
jae
loopne
aaa
iret
pop
iret
mov
mov
in
scas
aad
or
rcl
push
mov
cli
dec
jg
xor
fistpl
sbb
adc
jmp
ds
ret
xchg
shll
and
mov
stos
or
pushf
test
jmp
mov
dec
aad
and
and
xchg
xchg
pop
movsl
pop
mov
loope
pop
dec
mov
jo
dec
xor
test
push
push
fidivl
enter
sub
fldcw
inc
out
cli
cmp
inc
aam
sbb
or
movb
mov
testl
mov
pop
push
mov
mov
test
rol
loope
push
cs
xchg
addr16
xor
rorb
mov
or
mov
or
add
xchg
jg
mov
adc
xchg
bound
sbb
lea
jmp
into
enter
cmp
jb
or
jp
xchg
pop
xlat
imulb
stc
or
mov
xlat
sub
xor
push
sub
ss
lods
and
lock
loopne
bound
mov
test
movsb
rcll
mov
scas
push
movsb
ficomps
call
mov
insl
mov
xchg
nop
adc
in
mov
push
xchg
sub
out
enter
push
xlat
shrl
out
adc
and
mov
or
fistps
leave
adc
imul
lock
cltd
iret
cmp
inc
pavgb
popa
pop
cmp
out
push
mov
test
pop
popa
leave
xor
es
in
leave
mov
dec
cs
stos
rcrb
dec
lods
mov
out
push
jo
daa
cli
pushf
loopne
cmpsb
sub
aad
lods
js
ret
dec
lret
mov
clc
adc
add
jbe
bound
xchg
mov
xor
mulb
int3
pop
or
xor
imul
inc
jno
or
cli
jno
mov
insl
sub
sbb
mov
mov
movsl
daa
ss
jle
in
jmp
cld
inc
daa
lds
mov
push
clc
sbb
cltd
jecxz
rcr
pop
rorl
faddp
dec
cmp
les
pop
lret
or
gs
mov
mov
inc
fucomp
xor
mov
mov
pop
stc
dec
cltd
daa
bound
push
mov
mov
and
jg
ljmp
inc
dec
out
sbb
addb
or
out
push
jo
push
lock
lods
ret
rol
or
daa
call
adc
sub
xchg
out
jo
cmp
mov
fsubrs
sbb
ljmp
stc
mov
cmpsl
adc
push
pop
push
add
or
adc
mov
lea
rclb
out
or
ja
aas
lock
sarl
fs
jle
sbb
cli
push
mov
jmp
mov
daa
in
loop
xor
pop
lock
es
push
dec
loope
test
rcl
stos
jecxz
insl
xor
inc
push
adc
adc
imul
pop
es
mov
in
shll
dec
out
pop
pop
insb
daa
lea
sbb
mov
sbb
cmp
or
lock
and
call
shrl
fisttpl
add
repnz
or
out
cmp
mov
repnz
pop
scas
mov
pop
call
sub
pop
mov
jecxz
popf
call
into
fmuls
inc
sbb
int3
sbb
popf
inc
enter
xor
jecxz
adc
xchg
sub
adc
das
adc
fnstcw
and
sahf
flds
mov
lock
cmpsb
push
outsl
push
gs
in
sbb
pop
into
push
scas
std
inc
clc
stc
movsb
mov
mov
or
push
out
cltd
gs
xchg
sbb
lcall
cli
int
and
stc
shll
cmp
xchg
lret
push
mov
nop
add
push
inc
jle
sbb
cmp
imulb
sbb
aas
xchg
imul
mov
mov
sbb
fcmovu
ss
mov
rcl
jae
mov
or
sub
inc
stos
jbe
xchg
fisubl
pop
lret
mov
jmp
xor
cmpsb
mov
xlat
imulb
inc
aad
scas
cmp
sub
addr16
mov
mov
jo
cwtl
movsb
fnstenv
jno
jecxz
add
cld
inc
pop
cwtl
adcl
adc
leave
test
gs
dec
add
aam
adc
test
pop
jl
int3
imul
sbb
outsl
fwait
mov
mov
lahf
xchg
movsl
je
ret
xor
jnp
xor
jl
sahf
sub
mov
cmpsb
xchg
in
xor
inc
test
negb
dec
aas
lds
pop
das
bound
pop
int3
adc
mov
xor
gs
sub
mov
xor
add
lret
fstps
push
mov
xchg
shll
lods
icebp
xlat
mov
cmp
cld
sub
adc
sub
xchg
sub
sub
push
dec
cmp
aad
pop
arpl
pop
jbe
inc
jo
aaa
push
mov
mov
popa
pop
add
xchg
and
sti
jecxz
and
xor
fs
aam
or
or
aam
dec
mov
out
aad
int3
cmp
shr
pop
and
dec
xchg
and
sub
cli
cli
lcall
ds
mov
push
test
jnp
xor
jl
sbb
pop
adc
pop
lret
dec
stos
popa
icebp
sahf
cmp
xor
pop
inc
and
ds
lret
out
mov
pop
pop
mov
movsl
mov
xchg
imul
and
sub
pop
mov
imul
adc
sub
in
mov
pusha
add
jb
or
cmc
xor
insl
les
xchg
cwtl
in
stc
mov
push
repz
ljmp
popf
mov
test
jnp
push
xor
out
xchg
mov
pop
sti
mov
mov
scas
daa
loopne
xchg
and
inc
xor
sub
aas
xchg
cmp
dec
movsl
sub
bnd
fstpt
addl
cld
cmc
jle
adc
pop
mov
ficoms
repnz
adc
lahf
or
inc
xor
shl
scas
out
mov
mov
mov
push
mov
rorl
repz
incb
add
or
pop
lods
xchg
cld
or
sub
aaa
jp
icebp
adc
pop
mov
movsb
pop
cmp
xchg
mov
push
sarl
and
pop
push
test
arpl
xchg
xor
pushf
cs
int
adc
stc
in
and
repz
mov
pop
push
xor
shl
decl
and
sub
inc
push
cmc
adc
repz
dec
shll
push
loopne
inc
orl
les
ficoml
adc
dec
dec
aam
pop
loopne
in
or
mov
adc
jne
mov
xor
xchg
jecxz
shl
pop
stc
jg
jp
leave
mov
jb
cmp
mov
outsb
pop
pop
pop
jb
mov
lds
sbb
mov
sub
jbe
stos
out
xlat
sub
sub
push
repnz
add
jl
sti
sbb
mov
int3
sahf
pop
jbe
mov
test
repnz
jl
adc
les
enter
jge
add
outsl
in
fwait
cltd
rclw
in
inc
push
shlb
scas
idivb
jle
imul
and
push
lret
mov
in
sub
xor
sub
es
or
jle
bound
xchg
ds
jns
and
test
mov
adc
aam
adc
or
movb
push
lock
mov
sub
push
lods
data16
pop
fstl
out
sbb
movsl
xchg
dec
inc
and
es
test
jle
add
mov
fistpl
cmpsb
mulb
dec
into
stc
sub
nop
inc
jbe
in
cs
cmp
inc
pop
push
mov
mov
fs
int
sub
cltd
ds
mov
pop
andl
sub
pop
mov
shll
push
fcomp
dec
adc
aas
push
lret
fsubl
or
push
and
inc
adc
inc
pop
jp
mov
push
ljmp
lods
mov
out
lds
mov
lods
sahf
mov
cmp
dec
and
mov
jns
mov
out
push
or
rorl
push
adc
sbb
jg
dec
cmp
or
clc
and
ret
and
lds
and
mov
jb
push
jmp
add
cs
ja
rcrb
jecxz
lahf
dec
daa
lea
addb
or
outsb
cltd
pop
mov
mov
xchg
pop
jle
jge
mov
push
scas
pop
inc
ljmp
int3
call
mov
or
call
mov
aad
and
sahf
push
jbe
sub
test
data16
fucomip
mov
addps
pushf
mov
iret
imul
pop
push
push
shlb
fbstp
xchg
lods
sbb
cmpsb
adc
xchg
xlat
test
sbb
sub
mov
out
mov
mov
push
xchg
pop
xor
mov
mov
aad
iret
rcr
fsub
shl
out
je
jno
ds
aad
cmpsb
jmp
test
incb
mov
in
cmp
mov
jge
dec
fimull
fisubs
icebp
mov
imul
fstpl
imul
out
loop
hlt
push
xchg
sub
or
jge
sbb
dec
mov
pop
pushf
das
and
push
loop
add
push
push
push
imulb
xchg
jbe
xor
bndldx
fildl
mov
xor
mov
cmp
mov
sub
sub
add
xor
clc
out
push
cmpsb
adc
insl
mov
loop
hlt
out
sub
inc
cmp
adc
mov
mov
icebp
lret
xchg
sub
inc
test
pop
inc
push
out
xchg
call
aad
xor
imul
iret
pop
dec
cmp
pop
add
mov
repnz
xchg
insb
mov
fists
loop
pop
jge
or
dec
pop
aaa
inc
sti
loop
lock
aam
bound
imul
xor
cmc
lods
jle
or
test
outsl
iret
test
imull
push
mov
push
xlat
dec
pop
shll
and
jl
cs
inc
popa
lcall
test
mov
stos
test
jo
pop
ljmp
iret
adcb
mov
jmp
lahf
hlt
js
mov
scas
int
push
xchg
mov
mov
cmp
enter
bound
and
mov
cwtl
xor
mov
lret
lods
mov
push
out
enter
in
lcall
sub
rcll
inc
add
stc
mov
addr16
cli
das
cmp
insb
in
push
loop
mov
push
jnp
jmp
cmp
cli
pop
or
popf
pop
scas
lahf
rol
and
lahf
add
sub
lods
adc
push
cs
out
repnz
rcr
cmp
test
sti
xor
test
push
cltd
mov
sub
xchg
push
int
aad
aaa
or
stos
imul
cmpsb
fdivrl
js
addr16
adcb
sbb
fnstcw
jae
push
loope
call
repz
mov
fcoms
std
mov
cmp
bound
shll
mov
inc
popf
mov
jne
xchg
mov
insb
imulb
inc
pop
adc
dec
fists
jp
jg
aas
adc
adc
insl
mov
in
push
cltd
jbe
ds
decb
mov
or
mov
mov
mov
mov
mov
in
or
pop
loope
cwtl
dec
mov
je
add
test
add
and
mov
mov
push
mov
popa
add
or
mov
dec
pushf
xchg
stc
xor
adc
fdivr
fsubp
pop
in
and
idivl
push
xor
lcall
inc
test
fstpl
repnz
sti
pop
pop
sbb
adc
jne
push
dec
in
scas
into
dec
dec
dec
inc
mov
cmp
stos
shll
sbb
pop
add
nop
mov
xor
mov
or
ljmp
rcrl
jmp
xchg
mulb
mov
dec
and
xchg
xor
and
sub
add
sbb
cmp
cmp
mov
out
jno
cmp
xchg
push
std
sub
xchg
or
pop
in
sahf
mov
shl
stos
adc
aas
imul
fiaddl
jnp
sbb
int3
stos
cld
loop
mov
jb
mov
cltd
lahf
pusha
repnz
mov
in
fs
cltd
daa
cmp
push
jecxz
sub
and
rcrb
stos
dec
aas
jo
out
add
gs
lock
add
ret
sbb
lds
mov
sbb
jbe
bnd
int3
adc
inc
xchg
or
es
mov
sbb
pop
mov
sub
cmp
jge
cltd
in
gs
bound
lds
pushf
xchg
xchg
xchg
int3
aam
fdivs
bound
int3
or
out
outsb
push
push
ficomps
pop
icebp
dec
int
fs
je
pop
jns
push
jns
or
sbb
xchg
lds
stc
ss
xlat
jge
mov
int3
pop
and
cmp
xchg
loope
das
rcr
imull
je
add
dec
jge
push
fistl
leave
shl
aad
mov
clc
and
sub
or
lds
pushf
aad
pop
pop
sub
mov
jl
inc
es
mov
dec
mov
mov
mov
fucomi
cld
or
dec
arpl
mov
pop
dec
ret
out
xor
xor
shrb
movntq
rolb
mov
lea
pop
aam
or
sub
ret
mov
loop
adc
in
cmp
inc
jle
iret
adc
js
popa
push
cmpsb
cmp
push
das
pusha
add
negb
test
aam
or
and
imul
push
add
mov
mov
dec
or
adc
push
xor
fnstcw
mov
lret
and
pop
sbb
inc
loopne
jno
mov
mov
mov
add
fwait
push
in
inc
mov
push
in
out
mov
or
xchg
popa
cmpsb
push
insb
repnz
xchg
call
in
stos
push
dec
pop
fs
arpl
cmp
xor
mov
jle
outsb
stos
mov
aad
xchg
and
cmp
fldl
fdiv
or
rorb
rcll
es
sbb
dec
scas
add
mov
jl
pop
lods
jge
and
push
mov
rcr
arpl
mov
stc
std
unpcklps
add
insb
ss
fstl
mov
hlt
cmpsb
mov
and
xchg
sub
fs
lea
mov
bound
push
adc
and
jl
mov
test
popf
les
sbb
push
jg
pop
int
or
icebp
out
ret
sub
lea
jo
or
or
aam
inc
vcmppd
push
push
dec
lods
jne
daa
add
inc
or
lods
xchg
dec
cltd
repnz
sub
xchg
test
mov
dec
sbb
call
dec
inc
pop
mov
out
xchg
or
mov
adc
or
push
add
and
mov
sub
jno
sahf
push
sti
xlat
hlt
mov
stc
jns
mov
and
outsb
push
add
out
mov
ja
decb
cmp
cwtl
stos
dec
xor
mov
sarb
xchg
push
mov
mov
mov
ret
cmp
sbb
cmpsb
cmp
push
imul
xchg
and
mov
fistps
adc
inc
sbb
hlt
repz
sbb
adc
test
mov
les
in
out
popa
jmp
mov
into
jne
sahf
js
hlt
icebp
rdpmc
fcoms
incb
mov
shr
repz
pop
xchg
hlt
inc
dec
mov
inc
xlat
adc
sub
sbb
and
mov
pop
push
fcomip
movb
dec
pop
je
scas
push
aas
popa
outsb
push
hlt
mov
mov
int
mov
mov
pusha
cmpsl
rolb
xchg
dec
loop
movsl
mov
adc
adc
pop
fwait
int
movsb
pop
shl
cmp
jae
inc
jp
movsl
pop
push
bound
mov
loope
push
mov
sub
sub
push
je
int
incb
mov
and
mov
mov
jge
sub
aad
jle
insb
and
inc
into
push
jge
jecxz
lahf
dec
pop
cmpsl
ret
inc
mov
pop
cltd
add
subl
cmp
xchg
mov
or
mov
cli
rorb
imull
repnz
cmp
idivb
pop
ds
icebp
lds
inc
push
mov
aas
loopne
pop
es
add
xchg
and
mov
mov
pusha
xor
dec
rcll
lret
jbe
and
stos
push
cld
pop
pop
sub
push
les
mov
mov
adc
xchg
adc
in
cli
out
das
xor
loop
out
pop
xor
lret
dec
mov
pop
jl
aas
js,pn
mov
sbb
adc
xor
fbld
mov
add
inc
add
ja
test
jbe
mov
out
and
pop
ret
jbe
sbb
pop
xchg
aam
clc
lahf
inc
shrl
jbe
out
push
sbb
fucomi
and
add
mov
xor
sub
cltd
cmp
stos
mov
fcompp
mov
or
or
mov
jge
mov
add
adcl
js
lahf
or
shlb
mov
jp
push
stos
fcoml
mov
rcrl
aaa
mov
ja
movsl
call
or
adc
jo
outsb
cli
orb
inc
cli
push
iret
ror
xorb
add
ds
mov
or
js
push
xor
pop
mov
ja
shl
notb
daa
bound
cmc
fisubrs
lret
dec
pop
aad
add
adc
mov
pop
sahf
stos
cmp
push
ficompl
stc
pop
push
sti
jbe
cmpsl
xor
add
push
adc
orl
adc
lock
and
dec
push
lea
leave
out
addr16
std
iret
pop
rcrb
lds
push
xchg
pop
aam
insl
xlat
test
fiaddl
pusha
mov
sarb
pop
sti
mov
sub
out
push
call
push
jno
and
out
ss
mov
mov
fcomp
in
sub
add
fsubrs
push
cvtps2pd
or
xchg
test
sub
loop
sbb
mov
push
sub
lock
xchg
mov
in
scas
call
cmp
mov
sub
rolb
mov
sbb
dec
inc
jge
fs
fistpll
mov
dec
or
sub
js
lds
stos
repnz
xchg
sbb
jns
mov
loop
jb
cmp
test
mov
stc
sub
push
push
or
and
stos
dec
xchg
push
pop
cmp
xor
fistl
pop
sbb
pop
pop
popl
mov
jecxz
pop
sub
pop
xchg
scas
js
cmp
aad
idivl
test
rolb
dec
or
mov
sbb
jns
ds
xchg
sbb
xor
popa
jge
xor
adcb
cs
jp
daa
add
pop
and
sub
lds
dec
mov
rcll
nop
adc
mov
xor
pop
rclb
fdivrl
inc
hlt
mov
setae
cmp
insb
jne
pop
loop
fldt
jnp
sbb
and
dec
pop
push
into
xchg
jmp
add
xchg
aas
popf
in
add
mov
and
mov
jo
push
push
mov
int
fwait
dec
jb
mov
pop
or
dec
aad
xorb
aaa
mov
mov
fdivs
or
daa
in
popa
out
lea
xchg
scas
sbb
outsb
dec
pushf
sub
lahf
les
aad
cwtl
pop
nop
not
jl
mov
and
sbb
mov
pop
jnp
mov
jnp
dec
dec
lret
add
inc
push
pop
mov
cmpsl
lret
cmp
mov
aam
jecxz
flds
addl
lret
fsubl
xchg
shll
test
push
mov
sti
andb
adc
bound
insb
je
pop
test
loopne
and
push
mov
add
inc
imul
push
int
repnz
cmpsl
pushf
sub
shlb
aad
jne
jns
out
es
popf
popf
hlt
fcoml
iret
stc
push
scas
jnp
movsb
and
lock
mov
cmp
or
xchg
movsl
mov
les
mov
icebp
add
jb
push
pop
lds
gs
hlt
and
ljmp
ret
mov
mov
lahf
xchg
pushf
dec
xchg
xchg
pop
fiadds
dec
sub
sub
cli
mov
dec
adc
push
jg
adcl
inc
pop
jle
in
inc
lock
mov
icebp
cmp
fisttpll
cltd
jno
clc
inc
push
stos
es
outsb
daa
ljmp
sahf
sbb
add
or
divl
movsb
xchg
sub
addr16
test
xchg
dec
lds
inc
pand
and
xchg
push
push
ja
cmp
xor
in
xchg
dec
addr16
jmp
push
and
enter
rcrb
stc
mov
pop
xchg
mov
mov
mov
and
mov
loop
lods
add
jo
std
pop
aad
jns
loopne
sub
fwait
or
ret
pop
loop
xor
pop
jo
sub
cmpsb
add
xchg
add
push
mov
fldt
int
push
leave
ja
imul
add
xor
cmpb
aad
mov
aam
dec
out
adc
xorl
and
subb
cmp
xchg
loope
in
mov
mov
push
sbb
lret
jl
mov
xorl
out
mov
sarb
mov
mov
sub
inc
in
fldenv
or
pop
loope
test
or
test
jno
adc
mov
lea
jle
test
and
fldt
cmp
outsb
out
loop
add
push
movsb
dec
xor
mov
dec
sub
dec
stos
pop
adc
cmp
xchg
pop
nop
stos
pop
xchg
sub
sub
add
push
popf
in
loopne
scas
jg
mov
dec
pushf
dec
mov
shrl
add
pop
push
and
std
es
pop
and
notb
pop
fildll
inc
dec
adc
aas
notb
mov
lods
cmp
lret
cli
repnz
pusha
mov
push
lret
mov
inc
mov
sub
bound
out
sarl
out
xlat
lcall
dec
sbb
lret
lcall
mov
jg
or
test
sarb
sub
pop
movsb
fwait
lret
pusha
gs
shlb
mov
loop
or
lods
cs
lret
cwtl
pop
xchg
lcall
adc
mov
lcall
xchg
icebp
sub
scas
stos
xor
inc
shlb
jae
les
call
pop
xchg
ficoml
es
sub
add
xchg
fadds
bswap
jp
lea
out
push
xchg
outsb
adc
adc
jmp
popa
xchg
je
and
stos
pop
jb
ffree
shlb
add
negl
sbb
ss
insl
ret
mov
lahf
scas
jl
arpl
mov
insb
das
inc
mov
cmpsb
jg
sbb
ljmp
mov
repnz
out
out
pop
push
ljmp
insb
aad
xor
in
mov
in
test
jb
xor
fld
lds
outsb
push
cwtl
inc
popf
or
pop
pop
ljmp
inc
int
ret
jns
and
dec
fldl
xchg
adc
inc
repz
cltd
pop
push
mov
into
and
in
mov
ret
mov
fwait
xchg
adc
addb
inc
or
data16
adc
gs
rcr
imul
pop
fdivl
je
pop
cwtl
and
inc
not
push
fdivs
dec
push
ret
popf
add
stos
cli
sub
sarl
popa
mov
mov
in
push
jp
lret
inc
xchg
mov
lcall
mov
dec
push
and
stc
jb
nop
adc
negb
xlat
add
rol
xchg
ja
out
adc
mov
or
sub
dec
sbb
fbld
jno
dec
jmp
jle
push
movsl
lea
jb
lahf
mov
xchg
xchg
insl
loop
gs
sbb
js
iret
jl
inc
xor
pop
pop
test
sbb
dec
cld
sub
data16
mov
or
out
adc
fsubs
xor
sbb
add
push
imulb
add
mul
cmp
jp
ficomps
xchg
mov
pop
pusha
mov
pop
loop
out
mov
es
mov
shr
loopne
arpl
clc
cmp
fiadds
pop
icebp
shl
push
iret
popf
and
pop
sub
push
repz
int3
hlt
xchg
pop
mov
aas
cli
ret
pop
bound
mov
mov
ja
pushf
pushf
dec
bound
cld
mov
test
xchg
mov
sub
cli
push
cmpsl
test
fstps
addr16
ret
into
aas
pop
insb
mov
fdivr
mov
ds
mov
add
or
in
mov
add
dec
xor
ret
divb
repnz
ljmp
or
xor
and
subb
mov
push
dec
push
movsb
cmpsl
pop
out
aam
push
push
je
sub
outsb
test
daa
xor
adc
pop
xor
fidivl
in
add
xchg
adc
add
push
or
sub
aas
int3
test
ret
mov
ds
es
fnstenv
inc
and
inc
mov
test
xchg
pop
lock
inc
imulb
iret
hlt
ficomps
or
ja
nop
jge
inc
add
xchg
sub
divb
push
movsl
lret
pop
mov
rorl
hlt
cmpb
stc
das
dec
cltd
mov
aaa
pop
aam
push
jle
gs
inc
xor
fcompl
pop
cmp
fcoms
cmp
out
mov
fmulp
stc
and
xchg
xchg
cmp
pop
jae
aas
pop
jns
aam
int3
sbb
pop
mov
orb
push
xor
xor
rol
fistpl
data16
cmpsb
cmpsl
outsb
and
pusha
dec
jnp
dec
cmp
daa
ja
out
xor
stos
sbb
mov
gs
mov
or
in
mov
xchg
scas
outsl
sub
imul
lea
faddl
xchg
push
mov
cli
dec
clc
rorl
lret
mov
fstpt
out
inc
cwtl
inc
into
int
or
xor
jno
in
dec
inc
push
pop
xor
adc
xchg
clc
popa
inc
das
xchg
mov
pusha
sbb
cmp
adc
or
push
es
loop
ret
push
push
cli
hlt
fbld
xchg
in
cmpsl
sub
cmp
adc
test
cld
inc
fidivs
pop
sub
adcl
sarb
orb
inc
xor
mov
jns
aaa
cmp
iret
add
mov
rorb
jge
cmc
pop
cmp
jae
bound
jp
in
inc
fwait
xchg
xchg
push
push
mov
cld
mov
leave
add
enter
daa
fldt
in
fisubs
lcall
leave
mov
loopne
mov
push
inc
popa
outsl
jnp
xchg
xor
sub
push
call
mov
mov
cmpsl
xchg
iret
enter
push
pusha
fidivrl
sbbb
loop
js
mov
rcrb
jg
cltd
jmp
out
mov
mov
inc
test
inc
fmuls
or
pcmpeqb
xchg
ret
sbbl
ljmp
and
int
imul
inc
and
fnstcw
mov
ficomps
cli
fildll
mov
or
push
jo
dec
or
jg
test
push
mov
and
jge
xchg
leave
negb
jno
adc
and
fstl
shlb
push
repz
jo
lock
lods
xor
push
ss
lret
enter
dec
movsl
jae
fists
call
mov
or
ds
iret
cmpl
pop
mov
xchg
test
enter
fisubrl
xchg
jns
lret
fdivr
push
xchg
adc
push
cld
pop
js
cmp
icebp
mov
mov
iret
mov
sub
in
sub
int
lea
xor
lods
mov
or
fistl
or
or
in
xchg
sahf
jge
in
jbe
nop
inc
adc
xor
stos
or
cmp
push
jnp
out
adc
sbb
xchg
mov
push
push
dec
adc
xchg
subb
xor
sahf
mov
mov
mov
fidivs
cmpsl
and
mov
int3
mov
test
dec
popa
add
lods
outsb
stc
leave
cli
cmp
and
mov
test
add
cmp
clc
cmp
int
cltd
jl
and
dec
push
clc
sub
or
add
lock
pop
mov
mov
jne
pop
mov
hlt
movsl
mov
insl
dec
nop
sub
cmpl
lret
lret
mov
shl
and
jns
adc
fcomip
inc
push
es
lahf
call
xchg
imul
in
ret
aaa
fstpt
push
add
pop
mov
push
in
pop
cltd
and
inc
push
repnz
test
and
les
or
jl
xchg
in
mov
outsb
mov
mov
inc
rolb
rorb
xor
pop
xor
lret
addl
mov
insl
push
mov
ret
mov
cli
jae
mov
ljmp
ret
pop
test
lcall
dec
sbb
call
repnz
fwait
test
ret
inc
orl
into
in
xor
inc
aad
clc
aam
mov
jb
or
push
leave
cmpsl
shrb
outsb
pop
cmpsb
inc
inc
popf
and
clc
test
lcall
rorb
push
or
sub
push
rcll
push
cwtl
movsb
nop
testl
xlat
sub
sbb
or
dec
insb
and
sar
adc
or
jnp
das
cmp
mov
cmp
pop
cmpsl
popa
sbb
cmp
add
divl
or
inc
js
cmp
inc
mov
repnz
lock
mov
xor
sbb
lds
sbb
and
sahf
cmpsl
out
dec
mov
fistpl
inc
pop
loope
pop
hlt
sbb
ret
xor
pop
xlat
les
xchg
xor
scas
add
rol
fildll
add
cmp
mov
xchg
pushf
mov
arpl
mov
push
les
mov
add
stos
jmp
les
test
jle
dec
sbb
push
stos
sub
mov
push
popf
test
mov
lods
imul
fsubs
add
fnsave
mov
cmp
mov
jl
test
push
jno
sti
sbb
dec
pusha
jle
jmp
jo
repnz
sub
nop
inc
fnsave
mov
sbb
lahf
stos
test
add
add
lods
sub
cltd
pop
and
clc
int
xor
nop
popa
dec
fadds
addr16
fstps
sbb
ss
enter
pop
jo
je
xchg
sarb
and
xor
jae
mov
out
hlt
call
mov
adc
and
cld
cmp
addl
cs
mov
and
cmp
repz
mov
lahf
jp
lods
sub
xchg
movsl
xchg
and
or
ljmp
movsl
aas
adc
or
hlt
dec
mov
negl
inc
dec
out
xchg
mov
and
mov
and
into
mov
call
inc
in
jecxz
and
and
push
mov
popf
push
test
cld
dec
sarl
ret
pop
or
sub
push
push
adc
idiv
outsl
stos
jno
xchg
cs
loope
push
stos
in
pop
sbb
sub
xlat
ja
lret
mov
inc
rorb
frstor
loop
push
cmp
sub
jp
loope
mov
add
mov
int
push
pop
adc
scas
test
fcomps
fadds
out
adc
aaa
pop
xchg
cmp
shlb
push
repz
and
ret
cmp
out
xchg
lea
fwait
pushf
mov
fcmovbe
or
lods
pop
push
cltd
pop
add
dec
aad
gs
or
cmp
mov
adc
dec
lret
jp
aad
jg
hlt
insl
push
pop
mov
dec
xchg
in
jbe
mov
addl
andl
inc
jp
loopne
rcrb
mov
lock
pop
pop
scas
add
cmpsl
sarl
out
hlt
mov
jp
outsb
imulb
add
push
adc
movsb
push
movsl
aam
adc
test
loope
jmp
in
out
out
stc
shll
sub
call
mov
push
mov
jp
pushl
iret
les
stos
movsl
shll
sub
loopne
imul
or
imul
push
addr16
addr16
and
mov
cmp
mov
sub
fimuls
mov
mov
out
adc
cmp
mov
movsb
outsl
adc
pop
std
stos
loope
jp
popa
jbe
lds
adc
or
movsl
jp
sub
push
jle
mov
inc
jmp
sbb
les
aam
adc
xor
jmp
in
psrlq
adc
pushl
push
clc
dec
pop
xor
inc
cmp
mov
cmp
in
mov
ror
dec
mov
enter
xor
mov
jl
fistl
adc
or
or
pop
and
mov
int
shlb
icebp
popl
mov
xchg
and
pop
push
pusha
mov
pop
outsl
push
mov
inc
test
pop
imul
push
addr16
cmp
sub
mov
cs
notl
add
es
lahf
or
sahf
push
rorl
cmp
add
lea
enter
pop
sbb
mov
jmp
je
jge
ud1
sub
in
cmp
add
push
xchg
adc
addr16
mov
push
into
jno
sub
sub
imull
xadd
pop
in
push
add
jbe
mov
cmc
es
mov
pop
rorb
jns
jg
mov
and
pop
dec
xor
jge
push
outsl
insb
sti
mov
xchg
pop
ror
mov
int
jb
test
add
pop
inc
pop
jge
dec
je
mov
mov
dec
inc
rol
pop
mov
mov
xchg
adc
call
ret
aaa
je
pop
outsb
lods
mov
stc
or
push
adc
dec
xchg
mov
enter
inc
aam
je
or
jl
es
mov
sub
enter
icebp
in
inc
sbbb
sbb
hlt
rclb
push
adc
cltd
repz
rclb
xor
jbe
outsl
clc
std
jle
xor
inc
cmp
dec
dec
jp
jnp
xlat
jns
pop
dec
shrb
mov
xor
ror
jmp
stc
or
push
mov
fdivrl
fstl
xchg
filds
mov
in
jno
push
and
fs
adc
pop
in
push
dec
aas
or
je
pop
add
lcall
out
lea
inc
sub
mov
cmp
jecxz
xchg
mov
in
rcrb
pop
cmp
mov
lcall
lret
xor
in
cltd
aaa
das
dec
clc
sarb
or
nop
in
dec
cmp
or
or
xor
sarb
cmp
jns
add
sti
stos
scas
call
dec
fstps
mov
test
int
inc
ficompl
push
mov
jne
cmc
mov
and
adc
add
insb
pop
out
in
xor
and
inc
scas
pop
inc
cld
pop
sbbb
pop
mov
sbb
ret
icebp
daa
pop
push
mov
push
add
loop
pushf
jne
int3
flds
mov
jmp
jo
testb
xchg
jl
xor
or
dec
lods
sbb
push
push
push
out
stos
into
test
cmp
les
movsb
aaa
push
push
lods
test
jge
sub
out
xor
xor
ret
lea
fs
mov
jne
mov
test
ja
and
loopne
test
imul
pop
or
inc
mov
mov
mov
fwait
addps
and
adc
inc
cmp
movsl
outsb
fcoms
fsts
mov
sbb
mov
cmp
movsl
jge
xchg
adc
push
xor
test
aad
dec
push
xchg
hlt
std
xchg
loop
aam
rorb
dec
mov
pop
sub
cwtl
out
addb
mov
pop
pop
mov
jmp
fmul
mov
ss
cmpb
fists
mov
das
iret
outsl
sti
jmp
movsl
aaa
lret
ja
jmp
and
push
arpl
jl
xchg
pushf
pushf
and
icebp
cld
call
push
mov
pop
into
mov
daa
and
jle
adc
and
adc
arpl
xchg
mov
mov
pop
sbb
fsubl
cld
pushf
in
repz
repnz
int
std
push
ret
insb
mov
xchg
in
jbe
xchg
sub
js
push
cmpb
jle
xor
lds
mov
sbb
sbb
dec
loopne
imul
sub
test
addb
push
daa
jb
fidivs
std
call
dec
mov
pusha
lret
jg
xchg
enter
in
fldl
daa
dec
neg
out
imul
mov
pop
aam
fnstenv
sbb
mov
aaa
inc
push
sbb
add
jbe
adc
sbbl
int
lock
xchg
test
jae
sahf
adc
mov
aas
out
mov
iret
lret
cmp
leave
fisubrs
push
rol
shrl
cwtl
and
pop
roll
xor
xor
cmc
mov
jge
scas
sbb
adc
push
sub
fnsave
pop
jbe
lcall
mov
xchg
fsubr
mull
sbb
push
mov
and
sti
mov
xor
or
sub
push
pop
lods
pusha
or
sub
test
sub
push
cmpsb
sub
adc
into
hlt
xor
mov
bound
gs
iret
sbb
cmp
pop
or
mov
iret
mov
aas
pop
and
mov
mov
sub
mov
call
jno
mov
shlb
push
and
dec
sti
js
pslld
or
out
bound
outsb
jae
js
in
outsl
into
lcall
cmp
in
jnp
outsb
mov
sub
sahf
fwait
addr16
or
int
stos
sti
out
scas
push
nop
mov
adc
xor
fistpl
out
repnz
ret
add
xchg
repnz
cmpsb
dec
add
cmc
andl
imul
xlat
jg
jbe
movsl
xchg
cmc
sti
xchg
addb
ss
pop
mov
andb
lret
mov
repnz
adc
call
xor
xchg
aaa
int3
xchg
sti
sbb
mov
loope
iret
xchg
pop
cmpsl
test
pushf
ljmp
lods
xchg
popf
mov
fcomp
sbb
jno
sahf
in
add
sahf
inc
adc
cmp
cmpsb
push
adc
aaa
das
fbstp
sbb
add
sbb
das
ret
adcl
aad
cmpsl
push
inc
pop
arpl
nop
aaa
arpl
bound
dec
ss
imul
pop
out
test
sub
xchg
gs
sahf
inc
push
aam
repz
popf
dec
jge
adc
jg
adc
add
jle
mov
loopne
in
movsl
in
leave
xchg
xor
movl
inc
mov
call
out
out
fnstenv
shrb
push
in
jnp
fsubl
lea
fwait
lods
mov
inc
movsl
repz
int3
pop
cltd
mov
sbb
lret
mov
adc
sub
inc
mov
dec
cwtl
mov
fisttpl
mov
jp
adc
or
mov
push
negl
loop
in
sbb
in
sbb
in
pushf
sub
inc
mov
int3
rcrb
push
sub
faddl
mov
push
push
mov
pop
jbe
cs
mov
add
jecxz
rorl
inc
mov
pop
inc
jle
mov
push
test
shlb
outsl
cmc
inc
loopne
fstl
pop
test
cmpsl
jg
ja
pop
mov
fmul
movsb
mov
jl
fwait
push
xor
mov
insl
xor
scas
arpl
pop
sarl
push
jno
leave
mov
cmpsl
mov
iret
sub
push
aad
fucom
mov
push
adcb
pop
adc
cmc
fdivs
mov
and
cld
adc
sbb
jo
push
dec
inc
adc
scas
mov
push
jbe
sub
push
mov
insb
mov
das
mov
mov
adcl
stc
mov
cmpsl
loope
push
fcmovnu
je
lcall
ss
js
adc
dec
cmp
lods
lret
pop
pop
and
cmp
dec
inc
movsb
xchg
ret
fcomip
jnp
or
in
pushf
daa
xchg
pop
dec
jecxz
data16
or
in
cmc
jg
xchg
adc
xchg
sbb
sub
js
jecxz
adc
fimuls
mov
fildl
jp
fwait
adc
jg
rclb
inc
dec
push
loop
cli
mov
aas
lods
mov
jae
sahf
pop
sahf
insb
push
and
jp
jp
push
dec
lret
jnp
data16
or
aaa
dec
fimuls
inc
push
push
cmp
imul
push
hlt
mov
orb
sbb
sub
repz
movsl
cld
adc
cmp
adc
mov
ret
push
jo
adc
jge
add
test
jle
stos
dec
sbb
xor
inc
ss
xchg
cmp
dec
pop
nop
mov
xor
mov
jg
sbb
push
dec
or
mov
jle
outsl
sbb
push
ret
push
scas
pop
push
iret
jbe
scas
icebp
mov
ret
out
pop
adc
js
cmc
and
arpl
leave
cs
shlb
pop
movsb
and
imul
insl
in
add
movsb
mov
sbb
rcrb
mov
push
jnp
sub
lock
mov
sub
mov
push
xchg
inc
push
mov
imul
das
jmp
and
add
in
out
aas
repnz
inc
fsubl
in
ljmp
push
mov
mov
or
dec
sahf
test
mov
loop
xchg
bound
movsb
add
jns
or
nop
sub
outsl
sbb
shl
nop
sub
fs
mov
adc
push
loop
sub
js
mov
in
std
lret
test
or
dec
aam
cmpsw
sbb
push
test
sahf
call
xor
mov
mov
popf
push
aas
cmp
mov
push
mov
ljmp
or
inc
ja
cld
pop
stos
lea
jle
mov
cmp
lret
mov
mov
cs
addl
mov
test
loopne
xchg
xchg
lock
scas
add
xchg
xlat
pop
notl
xor
imul
add
jmp
test
ja
add
pop
inc
ss
nop
out
pop
repnz
sbb
hlt
mov
mov
aad
in
pop
lods
in
pop
dec
negl
xchg
movsl
jno
stos
xor
xor
xor
cmpsl
fidivs
movsl
popl
stc
icebp
dec
cmp
dec
pop
fistpll
cmp
xor
test
sbb
lods
dec
cmc
js
jp
add
cmpsb
imul
xchg
stc
daa
ljmp
stc
jmp
subb
decb
inc
xchg
in
out
mov
scas
xchg
push
fimuls
stc
mov
mov
repnz
mov
imul
and
inc
sub
pop
sbb
jno,pt
jl
test
push
adc
iret
cs
adc
out
test
in
jbe
sbb
daa
je
dec
out
test
cmp
rclb
lret
dec
xchg
jns
ljmp
shll
pop
pop
sub
pop
xchg
dec
aas
icebp
sti
and
add
fmuls
ljmp
inc
sbb
clc
mov
sbb
jbe
cmp
in
push
xchg
mov
sbb
std
test
xor
add
out
imul
sbbb
stc
jns
xchg
das
pop
xor
xchg
add
stos
addr16
shl
dec
out
data16
xchg
ljmp
stos
cmpsl
cltd
negb
xchg
add
adc
sbb
pop
loope
into
sbb
push
and
fistpl
mov
cltd
out
mov
pop
mov
stos
and
jbe
ret
daa
mov
push
cwtl
mov
inc
sarb
insl
lock
push
mov
aaa
sub
jb
repz
shrl
aad
pextrw
pop
repz
lds
scas
ja,pt
scas
fstpl
add
cmp
call
mov
fldt
ror
inc
aas
push
pusha
cwtl
fnstenv
inc
mov
aaa
idivb
lahf
add
xchg
mov
std
push
push
call
cmp
lret
jb
cwtl
sub
jecxz
ss
roll
cmp
std
xor
adc
sbb
cmp
in
sarb
cltd
sub
jmpw
test
fwait
sbbb
xchg
insl
std
push
push
decl
pop
outsl
mov
scas
push
stos
faddl
lret
inc
scas
pop
dec
loop
inc
fidivl
pop
lcall
xchg
pop
xor
jge
sbb
and
inc
adc
cmpsb
lahf
test
cs
imul
xor
push
or
or
push
or
xor
les
stc
dec
inc
in
decb
clc
sub
fdivp
mov
pusha
stos
jns
cmp
jo
movsl
jge
cmp
sbbl
mov
adcl
xchg
push
adc
popa
mov
sbb
xor
pop
in
addr16
jno
dec
adc
jnp
nop
por
push
test
mov
test
cmp
sti
into
std
call
or
inc
sbbb
roll
cmpsl
mov
sbb
xor
and
cmpsl
cmp
rorb
xlat
jo
ds
jae
das
add
xor
sbb
testl
fbld
add
icebp
cmpsl
lods
pop
repz
adc
xchg
inc
ret
pop
rclb
cld
push
int3
cmp
dec
inc
add
sti
jg
sbb
loopne
mov
xchg
nop
lea
lods
xor
lock
jnp
test
mov
addr16
xlat
pop
pop
cmpsb
ljmp
push
sbb
cmp
cmc
or
gs
dec
sahf
rorl
mov
in
dec
ljmp
cli
cs
or
data16
xor
movsb
push
sub
fnsave
or
and
shll
mov
push
leave
push
popf
add
mov
sbb
sbb
jne
aas
in
repz
lcall
push
adc
sbb
mov
pushf
push
enter
jo
cltd
push
fisubs
push
pop
sbb
movl
dec
xchg
sarb
mov
mov
hlt
out
test
cwtl
cmp
outsb
imul
fsubrl
mov
hlt
arpl
fstps
cmp
aaa
jb
sti
clc
popf
sbb
mov
dec
insb
movsb
icebp
mov
sub
cld
mov
cmp
lret
popa
lret
push
lea
test
pop
sbb
test
push
dec
sub
push
pop
sub
jge
sti
daa
sbb
lods
xchg
xchg
pop
repnz
pop
jge
insb
push
lods
mov
xchg
imul
jae
lret
jb
and
inc
sbb
sbb
test
dec
push
push
jb
xchg
and
mov
push
xchg
xor
push
cmp
push
sub
xchg
pop
mov
inc
mov
es
push
shrb
int
shrl
xchg
push
push
jmp
out
aad
pop
jge
rolb
jnp
inc
mov
inc
push
cmp
pop
js
mov
cmc
rorl
dec
ljmp
lahf
imul
add
jns
lock
mov
jl
dec
cmp
insl
inc
xlat
and
movsl
les
div
dec
mov
and
dec
mov
sahf
pop
shrb
sub
and
dec
fiadds
or
fwait
hlt
fdivr
xchg
les
je
jae
das
mov
and
xchg
jns
mov
sub
sub
push
out
mov
mov
imull
lock
inc
aam
push
or
xor
xchg
packuswb
ficompl
mov
pop
enter
dec
popa
jo
movsb
lds
mov
popa
fistpl
jecxz
cmp
dec
push
mov
jb
and
jns
pop
jne
sub
pop
xor
add
cmp
fsts
dec
sub
xchg
jne
jne
imul
adc
or
jns
push
sub
sub
mov
or
inc
cli
sub
mov
test
stos
iret
mov
xor
and
mov
xor
in
adc
fstpl
and
daa
pop
inc
xor
dec
push
popf
sbb
cs
xchg
int
cmc
lcall
jmp
cli
es
aad
sarl
scas
mov
jl
jb
push
insl
sub
pop
inc
dec
xchg
cmp
sbb
fadds
ret
sbb
push
pusha
pop
loope
pop
add
cmpsl
inc
cmp
addb
cs
cmp
xchg
cmp
mov
cmp
bound
cltd
jb
mov
scas
mov
rorb
cmp
sub
add
das
mov
sub
roll
mov
js
inc
out
mov
pop
cmp
push
sbb
test
cmp
fs
gs
mov
inc
pop
aam
cmpsb
iret
pop
mov
sahf
pop
sbb
ficompl
dec
pop
in
dec
push
ret
xor
pop
out
iret
clc
rcl
mov
xlat
sahf
mov
mov
and
je
sbb
jmp
pop
lock
cmp
ret
add
adc
call
mov
ja
es
ret
lods
out
cmp
mov
cld
and
out
imul
jne
ficompl
inc
xchg
imull
mov
adc
subl
imul
inc
scas
and
pop
in
aas
ret
mov
xchg
jp,pt
cmp
add
push
ret
adc
push
loopne
cmp
nop
pop
adcl
aad
imul
sbb
add
mov
loopne
xchg
inc
mov
add
in
jns
mov
push
aad
mov
leave
repnz
aaa
out
jb
inc
mov
sub
cld
mov
adc
gs
and
jecxz
mov
std
movl
jnp
add
call
inc
inc
sub
shrl
sub
jnp
xlat
notl
shrl
lahf
lahf
inc
bswap
gs
clc
hlt
xor
push
inc
popa
dec
sahf
and
fistl
daa
and
mov
addr16
inc
clc
add
std
idivl
or
shlb
mov
jle
pop
lods
lahf
out
ja
enter
movsl
sti
xchg
push
icebp
or
add
pushf
in
aas
icebp
jge
mov
incl
pusha
loopne
mov
lock
loop
fwait
cmp
lds
loop
test
mov
or
in
or
movsl
push
xchg
ret
cmp
call
hlt
movsl
in
fadds
loopne
sbb
in
push
add
insl
hlt
mov
cmp
jle
add
add
inc
xor
and
jo
xchg
xor
cmc
xor
icebp
fwait
inc
pop
stos
cmp
dec
or
mov
mov
into
mov
incl
ds
fisubrs
mov
mov
mov
sbb
stc
fs
add
outsb
mov
js
dec
cli
repz
ret
sbbb
cltd
fidivrs
mov
dec
sub
and
cmp
divl
popa
sahf
xor
ljmp
pop
mov
in
repnz
adcb
insl
outsb
insb
lret
xor
icebp
mov
pop
pop
into
and
pop
inc
sub
mov
inc
add
int
enter
pusha
push
mov
and
gs
mov
jbe
pop
mov
std
push
pop
test
push
cmc
test
sub
das
call
mov
dec
jp
scas
jle
push
pusha
cmp
cltd
sbbb
mov
imul
xchg
add
dec
mov
je
pop
cmp
xchg
inc
lret
test
jne
out
clc
add
mov
int3
icebp
and
rdpmc
lds
jmp
add
or
icebp
mov
fxch
scas
ljmp
cmp
lret
cwtl
push
bound
push
and
push
sub
sub
dec
aas
loopne
add
mov
popf
push
lock
add
xor
sahf
flds
jle
xchg
jl
xchg
inc
loop
xor
dec
out
lds
jmp
inc
addr16
pop
lods
das
xchg
pop
pop
xchg
ja
pop
popa
xchg
sub
jb
insl
sbb
cld
fisttpl
xchg
adc
xor
and
push
in
sahf
jae
or
pop
or
pop
pop
mov
popa
cwtl
mov
lods
ss
notl
cmp
mov
xor
fcompl
inc
lds
leave
pusha
xchg
dec
insb
lahf
adc
mov
into
lds
xchg
inc
jne
shrb
xchg
test
jg
jne
sub
mov
or
outsl
jno
adc
in
fldl
fadd
test
lcall
bnd
loop
mov
push
adc
push
sbb
cmp
xor
stos
mov
inc
adc
push
push
test
sbb
cmpsl
adc
insb
sub
mov
dec
push
adc
imul
in
mov
mov
imulb
push
jl
cmp
lods
cmp
inc
or
icebp
xchg
mov
pop
test
pushf
mov
lock
and
mov
daa
jg
or
inc
add
lea
push
fmuls
pop
pop
loope
ljmp
inc
adc
pop
stc
inc
push
sbb
stc
jecxz
jae
and
inc
inc
call
cmpsl
fwait
lods
notl
jns
pop
jo
shlb
ret
adc
xor
lds
mov
inc
cli
int
or
lods
pop
and
lock
filds
ret
ror
cltd
cmp
push
jns
jmp
lahf
test
cld
xor
sub
adc
lods
mov
cs
mulps
notb
lock
push
in
add
push
cmpsl
push
mov
push
insl
jae
imul
mov
sub
pop
pop
mov
push
shrl
ret
sub
mov
jmp
sarb
icebp
test
aaa
push
add
fsubrl
aaa
mov
stos
and
cltd
popf
xchg
cmp
pop
jp
jbe
cli
outsl
pop
test
popa
mov
std
adc
iret
sbb
jbe
inc
mov
sbb
xor
mov
stos
or
insb
push
ss
xor
mov
inc
pop
popa
outsb
scas
int
inc
xchg
and
leave
xor
xchg
adc
lds
and
lret
movsb
popa
xor
fs
pop
imul
nop
add
dec
rcrl
aas
in
push
cmp
roll
mov
in
bound
xlat
int
imul
gs
stos
sub
cmp
mov
fwait
test
pop
cwtl
cmpsb
or
sar
sub
rcrb
jl
aad
dec
mov
movsb
pop
outsl
repnz
xor
lock
and
cmpsb
lret
aam
lock
mov
lods
xchg
nop
add
ret
mov
mov
and
xchg
stc
dec
or
or
std
out
add
or
jo
push
mov
xor
xchg
lret
and
dec
fisubl
push
insl
leave
sbb
pusha
and
insb
sub
iret
cmp
or
mov
dec
aas
inc
mov
lcall
lea
aad
jns
lahf
aam
add
outsb
lods
sbb
popf
aam
jp
lret
outsb
leave
mov
add
mov
inc
cmp
jb
push
ficoml
repnz
jle
in
test
jae
outsb
dec
rol
in
pop
or
xchg
ja
mov
stos
xor
mov
push
ja
or
inc
mov
stos
jp
xor
popf
ret
fnstenv
lods
xlat
stc
push
ret
mov
mov
mov
pop
ret
dec
aad
mov
jno
or
push
outsb
rorb
lods
roll
cmc
bound
stos
icebp
addr16
sub
cmp
addr16
stos
mov
mov
movsl
jae
xor
pop
fnsave
pop
into
pop
int3
pop
or
repnz
adc
pop
xor
push
mov
loopne
jns
imul
and
pop
add
add
sub
imul
fwait
or
ret
lods
xchg
test
push
out
xor
inc
and
scas
pop
push
push
sbb
decl
jmp
add
jns
leave
test
pusha
or
cmp
xchg
rclb
ret
or
test
sbb
xchg
xor
xchg
das
xor
dec
div
mov
xchg
insl
jle
dec
loop
lods
xor
bound
popa
xor
hlt
mov
mov
es
dec
push
out
xor
adc
cmp
pushf
adc
add
aas
hlt
add
and
jmp
out
jno
test
push
mov
test
push
cli
and
and
mov
jl
and
lret
icebp
mov
sub
push
gs
mov
dec
sub
divb
nop
out
jae
sbb
fs
stos
test
and
repnz
mov
insw
and
movsl
out
fimull
ljmp
cmp
mov
mov
push
movsb
pushf
inc
test
mov
int
fucomip
mov
lret
jl
cmp
mov
adc
cmpb
cli
xchg
aaa
aas
add
aad
jge
inc
jns
push
enter
jmp
jb
test
jmp
movsb
fdivrs
and
dec
std
ss
mov
inc
add
push
mov
xchg
xor
pop
mov
imul
jne
fcmove
pop
jmp
sbbb
fs
add
leave
popa
adcl
test
xchg
or
jge
inc
fldcw
into
in
inc
in
or
cmovbe
lret
pop
cmpsb
popa
dec
or
in
jb
test
je
or
lret
jmp
push
in
es
addr16
repz
das
ja
aaa
sub
test
fucomp
lahf
dec
jae
jmp
xchg
aas
sarb
roll
cmc
inc
mov
xorb
cmp
pop
loope
xchg
adc
hlt
adc
adc
clc
sbbl
inc
mov
jbe
movsb
aas
aam
mov
lds
xor
sbb
mov
sub
mov
pop
cmp
fiadds
push
xchg
mov
imul
mov
test
and
in
inc
pop
stos
pminsw
sub
push
pushf
xchg
fmull
pop
aas
cltd
aas
aas
in
pushf
add
inc
push
test
xchg
fwait
push
ret
lods
in
orb
outsb
jae
out
mov
xchg
aad
rcrb
aam
rcr
icebp
xchg
dec
andb
bound
aam
inc
and
mov
iret
stc
mov
xlat
sub
xchg
jae
icebp
or
fimuls
jg
adc
mov
pop
push
xor
inc
sbb
sbb
fdivs
or
xchg
adc
add
scas
aas
xchg
outsl
mov
mov
addb
setp
xchg
xor
jecxz
push
stos
scas
pop
mov
loop
lods
inc
sub
nop
or
add
xor
adc
std
push
sar
xchg
cld
je
mov
sub
cmp
test
cld
adc
inc
scas
into
lods
jp
divb
insb
pop
pop
outsb
mov
insl
and
push
mov
loopne
pop
sub
sbb
mov
loope
mov
push
mov
mov
lret
adc
jae
cmp
cmp
stos
dec
rorb
add
push
inc
ds
mov
push
loope
mov
mov
jne
shll
dec
jne
push
push
sbb
and
ds
push
xlat
push
ret
xchg
jge
mov
ret
int3
pop
jmp
cmp
adcb
outsl
or
xor
cld
imul
into
lods
mov
add
jmp
icebp
jbe
test
addb
push
mov
leave
loop
out
mov
aad
lods
cmp
shrb
push
lods
les
dec
mov
sub
inc
jmp
adc
add
lods
lods
bound
pop
lods
cmp
lcall
mov
dec
xchg
pop
cwtl
dec
mov
xchg
ret
push
inc
xchg
push
addl
cmp
in
adc
inc
mov
ljmp
lret
fidivrl
add
movsb
push
adc
cmp
sub
jge
clc
add
inc
lret
and
sbb
sub
test
rolb
mov
xor
imul
cs
sbb
scas
mov
mov
xor
push
mov
popf
push
xchg
sub
push
push
mov
xor
mov
stos
and
or
sbb
hlt
mov
aas
dec
jmp
mov
aas
sbb
out
loopne
inc
aad
shl
adc
mov
ljmp
xor
mov
and
rcr
ficomps
mov
pop
mov
dec
daa
dec
popf
xchg
fcomps
sub
dec
mov
mov
jmp
or
mov
int3
jmp
pop
mov
and
fnstsw
hlt
jns
adc
scas
aad
movsl
and
mov
int3
subl
aaa
movl
jecxz
dec
cmp
mov
sub
lcall
cmp
mov
scas
jne
and
stc
or
xchg
sub
ljmp
movsb
xchg
mov
daa
sub
lock
and
outsl
imul
frstor
int3
or
pop
movsl
and
dec
in
pop
mov
test
push
pop
xor
xchg
xor
push
mov
shrl
sbb
negb
int3
fadds
icebp
ss
insb
cmp
mov
dec
orl
outsb
lcall
pop
jo
sub
negl
xor
call
inc
out
mov
lahf
mov
mov
mov
mov
andb
pop
in
xor
or
ljmp
aas
add
test
lahf
cmp
push
xchg
test
push
mov
pcmpeqw
mov
ja
add
call
notl
clc
ss
xor
push
xor
mov
das
jg
dec
in
subl
push
mov
lods
insb
cmpl
stos
pusha
repnz
lods
pop
dec
xchg
push
iret
aaa
lahf
and
sub
movsb
sbb
xor
xchg
cli
lahf
xor
xchg
je
dec
inc
sar
mov
pop
imul
mov
xchg
popa
sbb
cld
or
gs
jg,pt
cwtl
xor
push
xchg
dec
jle
lock
sub
sbb
sub
push
push
pop
mov
rcrl
subl
pop
mov
add
push
push
fists
push
clc
addl
rcr
add
test
or
call
repz
xor
popa
sub
lcall
xor
in
push
in
mov
inc
leave
dec
scas
push
cmp
xchg
jns
or
sub
push
out
push
idiv
xor
mov
ret
les
push
stc
sbb
std
lds
adc
sbb
fmull
dec
push
hlt
aam
loope
add
cltd
xor
jae
out
push
ja
push
mov
in
or
mov
mov
repz
ret
pop
or
xor
lods
mov
sbb
daa
push
rcll
jne
icebp
bound
cs
add
push
pop
outsl
loop
scas
xchg
test
or
popa
fstpl
mov
lods
je
outsb
mov
fwait
jb
movsb
inc
or
add
mov
xor
push
mov
xlat
popa
leave
jbe
sbb
add
xchg
lods
xcrypt-ecb
cmpsl
or
adc
lods
pop
push
ret
or
subps
neg
mov
jmp
and
jecxz
rorb
shr
cmp
sub
xchg
insl
xchg
testb
fwait
lret
outsl
or
fucom
xchg
ss
or
aam
idivl
fwait
xor
push
inc
inc
lods
test
rclb
pop
cs
adc
scas
adc
or
imul
ss
out
stc
mov
jb
iret
mov
daa
pop
cmp
or
lock
push
mov
mov
mov
ljmp
xor
dec
or
jle
lahf
out
or
mov
fdivrs
fdivrs
and
fcompl
and
sti
xchg
pushf
and
and
in
ret
lock
out
movsl
pushl
mov
adc
aad
mov
lret
pop
push
mov
sbb
insl
jo
push
test
fstl
cmp
enter
lcall
mov
lret
repz
mov
mov
push
push
js
test
ja
fsubp
icebp
inc
jle
icebp
in
movsb
cmp
mov
rol
push
psraw
jl
cli
lds
dec
sub
int
xor
or
popa
fld
push
push
jl
or
xchg
push
mov
or
or
ret
fs
imul
or
push
mov
out
movsb
dec
mov
pop
int
sbb
sbb
cmpsb
mov
mov
insl
scas
sub
xor
out
lea
xor
xchg
rcll
sbb
sub
addb
pop
dec
in
or
mov
xor
mov
ja
popf
mov
mov
enter
push
xor
jnp
les
cmp
cmp
jo
pop
leave
or
cld
cmp
stos
jo
xchg
fdivrl
scas
sti
aad
pextrw
test
dec
add
inc
ljmp
cmpsb
stos
imul
lea
fs
jecxz
call
outsl
imul
add
ror
push
xchg
call
pushl
stc
jge
xor
mov
xor
or
push
out
and
out
das
inc
dec
push
adc
rclb
pusha
and
in
mov
xchg
push
xchg
adc
popa
std
xchg
call
and
jg
cmp
call
inc
and
jne
add
sbb
les
repz
pop
push
cmc
inc
cli
pop
xchg
stc
es
test
jl
loop
push
leave
cs
mov
jl
or
cmpsb
outsb
xchg
out
xchg
outsl
pop
inc
mov
or
ljmp
mov
inc
or
pop
nop
mov
sub
pop
ret
fbstp
and
clc
je
scas
jns
rclb
adc
neg
in
icebp
cmp
and
test
shlb
nop
pop
xchg
pop
aad
cli
or
pop
insl
cltd
adc
ret
int
inc
stos
in
js
mov
cmp
sahf
test
sti
shrl
loopne
mov
shl
or
xor
xchg
aaa
rorb
mov
fwait
jne
je
sub
int3
fcom
popf
jp
jle
and
adc
fdivl
dec
jns
hlt
cmp
movsb
sub
adc
inc
sub
shll
push
ljmp
shlb
xlat
sub
mov
push
pop
and
fwait
add
outsl
mov
jge
push
bswap
inc
popa
es
sbb
cmpl
outsb
mov
pop
add
fdecstp
adc
jp
cmc
mov
add
lcall
pop
jp
xor
pop
xor
add
xchg
test
mov
and
nop
movb
test
int3
repnz
mov
scas
dec
es
andl
lds
in
cmpsl
in
push
xorb
dec
mov
in
add
sahf
in
jo
mov
dec
test
jo
mov
push
adc
or
dec
popa
inc
jp
cltd
jns
or
loope
adc
dec
adc
rcrl
or
ss
adc
addr16
pop
icebp
je
in
aam
lds
sti
xchg
movl
jno
pop
out
adcb
dec
lret
inc
push
cmpsl
mov
push
test
fdivrs
or
ss
push
inc
jnp
imul
aam
xor
scas
movsb
inc
outsb
cmp
mov
add
jecxz
xchg
pop
rcrb
jbe
add
dec
dec
or
scas
out
out
inc
not
pop
scas
push
mov
mov
testl
lret
rolb
jmp
mov
add
test
mov
pop
test
pushf
bound
mov
push
lret
jns
and
lret
pop
or
mov
lret
lret
mov
ds
mov
xor
push
in
pop
adc
push
xchg
jnp
pop
push
out
dec
iret
mov
jge
push
mov
cmpsl
cmp
push
and
dec
icebp
cmpsl
sahf
or
or
loope
jp
test
rorl
dec
inc
pop
mov
jns
mov
outsb
adc
add
ret
push
xchg
or
pop
mov
inc
jo
xchg
dec
rolb
mov
pop
dec
loopne
repz
test
fildll
ss
jae
popf
xor
lods
bound
cld
out
sbb
ret
cmove
jle
test
add
stc
sti
push
dec
jo
xlat
jo
inc
int
das
mov
popa
clc
lea
jbe
mov
aam
popa
and
inc
push
rcrl
cmpsl
pop
inc
imul
dec
xor
adc
xchg
into
sub
repnz
sub
fstps
add
cmpsb
sarb
fistl
std
cltd
pop
out
aas
dec
push
pop
lahf
push
fbld
lods
pusha
cmp
cltd
xchg
in
push
pop
test
dec
push
adc
das
mov
enter
push
fwait
and
scas
scas
cmpsb
int
mov
repz
dec
mov
pop
add
pop
out
pop
cmp
adc
add
loop
xchg
xchg
add
fs
mov
cmp
scas
ss
movsb
inc
jle
in
mov
dec
and
out
jecxz
lea
dec
out
pop
ss
or
pop
out
pop
xor
test
mov
push
mov
mov
sub
rclb
and
jge
mov
fisubrl
xchg
call
adc
adc
push
loop
inc
inc
pop
stc
arpl
sbb
fs
js
sub
xor
jno
popa
push
push
cmovb
and
push
fidivs
pop
jge
test
into
mov
mov
or
lea
pop
mov
sahf
insl
stos
rorb
sub
lock
push
outsb
mov
mov
fidivrs
iret
dec
push
mov
or
push
aam
leave
jne
push
into
popf
pop
dec
stc
sbb
clc
cwtl
je
pop
xor
in
sub
pop
jle
inc
or
jle
xor
or
pop
nop
or
ffree
jge
fists
lock
call
cmp
push
lcall
jbe
addr16
jns
push
in
iret
and
aaa
stc
push
fbstp
push
jmp
push
xchg
pop
js
jne
jl
ljmp
ror
aas
movsb
push
aaa
aaa
loope
imul
mov
pop
out
ja
loopne
push
pop
je
add
pop
les
add
cmc
movb
mov
xchg
scas
shlb
pop
data16
mov
fs
mov
je
lds
push
into
inc
pop
cli
shr
or
xor
test
mov
cs
outsb
stos
add
dec
cmp
movsb
xchg
fdivrl
or
repz
or
push
subb
mov
and
sub
das
jmp
rcl
cmpsl
std
lock
dec
out
xchg
mov
inc
outsl
mov
cli
adc
int3
jns
fisttpll
jae
addl
and
mov
dec
popf
mov
push
dec
sbb
loope
out
in
push
fwait
push
ficoms
shufps
mov
into
xchg
in
mov
lods
push
adc
std
xchg
arpl
fstpl
pop
xchg
cmp
push
mov
ds
test
cld
in
clc
jo
data16
jb
or
sahf
std
sbbl
jle
and
out
pop
out
dec
xchg
pop
int
shll
mov
int3
outsb
addr16
std
ds
cmpsl
pop
add
popf
inc
mov
aas
je
xchg
aam
inc
mov
xor
pop
stc
outsl
shlb
orl
in
es
pop
dec
jb
add
add
adcl
mov
icebp
mov
xchg
das
mov
jmp
in
jo
imul
dec
jns
ja
out
jp
xlat
rorb
inc
xor
adc
mov
das
mov
lods
ljmp
arpl
ja
pusha
enter
xchg
and
jmp
and
lods
mov
jno
mov
mov
js
int
aad
add
dec
repnz
dec
jbe
xor
les
pop
lods
movsb
fidivrl
imul
or
jnp
cmc
and
sbb
or
daa
xor
int3
mov
sub
out
test
jp
mov
pop
les
add
bnd
xchg
out
repz
orl
push
cld
or
cmp
or
shlb
push
cs
hlt
adc
mov
addr16
add
push
stos
push
lcall
cmpsb
test
outsl
imul
mov
fcmovbe
in
repnz
testl
inc
cmp
clc
cmp
and
fadds
ss
cli
test
inc
jns
lods
inc
icebp
and
lock
pop
sti
cld
stc
sbb
mov
aaa
repnz
int
dec
loope
mov
aad
xor
arpl
sub
arpl
daa
or
aam
scas
jne
mov
lcall
fldcw
call
decl
mov
cmp
stos
push
pushf
inc
lahf
inc
test
or
stos
jmp
xor
sbbl
xor
xlat
je
popa
std
lds
dec
insl
icebp
mov
xorl
out
hlt
lret
mov
into
test
rcll
inc
lds
jbe
push
sub
jb
jae
sub
xorl
test
les
push
test
inc
and
out
mov
ret
ljmp
in
inc
jg
gs
lret
cwtl
push
push
data16
sti
fadd
pop
inc
outsl
scas
cmp
movsb
pop
stos
lret
sub
hlt
dec
adc
ret
sub
xchg
sete
jg
jle
pop
out
push
inc
xor
sub
inc
dec
dec
push
xchg
cld
mov
in
add
das
outsb
adc
mov
push
add
pop
into
shll
outsl
in
jno
push
xchg
cmpsl
add
rclb
jl
popf
lea
stc
or
sub
jmp
fiaddl
adc
mov
lret
loopne
dec
lea
xor
mov
jmp
test
adcl
adc
add
inc
in
jbe
imul
xchg
push
and
addr16
inc
fmulp
test
mov
push
pop
iret
xchg
add
jns
push
mov
insl
sysexit
lods
jg
ret
xor
add
cmp
int
outsl
and
fstp
push
mov
adc
push
cltd
sbb
sub
in
sbb
icebp
out
pusha
fs
cwtl
mov
xor
add
adc
mov
or
loope
add
test
jge
sbb
cmp
adc
sbb
pop
pop
and
dec
popa
jbe
mov
sub
cmp
push
scas
lahf
mov
jmp
int3
cmp
jbe
xchg
sub
mov
jge
stos
mov
mov
lods
pop
mov
rol
mov
enter
add
rcr
lock
mov
sbb
pop
mov
push
adcb
call
mov
xchg
pop
push
testl
cld
adc
mov
clc
in
and
imul
mov
mov
test
mov
in
outsb
inc
xchg
testl
fistps
mov
shl
and
jmp
mov
adc
push
cmc
popf
data16
js
shr
cmpl
scas
movsb
mov
daa
adc
inc
add
iret
icebp
inc
das
add
mov
nop
aam
xchg
mov
cmp
dec
ss
push
int
fwait
call
xchg
or
cmp
int
aas
pop
push
pop
sbb
movsb
adc
ja
inc
pop
dec
dec
add
jp,pn
out
enter
inc
lock
addr16
cmp
xchg
sub
xor
popa
adcb
popa
or
pop
fstl
xchg
bound
addr16
inc
mov
or
sub
arpl
mov
ficompl
cmp
popf
mov
and
dec
push
imul
loop
insl
xor
xchg
push
les
fistps
decb
fiadds
mov
lods
mov
inc
sbb
inc
lods
push
jne
and
fdivl
test
pop
xchg
push
fsubrs
int
divb
xchg
test
lods
inc
popa
cmpsl
stos
lods
jg
push
scas
sub
add
sbb
inc
je
jno
jae
test
lods
mov
enter
adc
sbb
aas
lret
dec
or
lret
xor
movsl
inc
jb
cwtl
das
std
jns
imull
aas
out
mov
movsb
test
icebp
mov
je
push
int3
jne
cltd
imul
or
inc
xchg
jl
mov
add
sbb
fwait
dec
aaa
sub
inc
inc
jmp
adc
adc
sub
mov
pop
and
xlat
aad
or
je
xlat
das
insl
fbld
push
mov
mov
pop
in
inc
das
cmc
push
and
cmpsb
cwtl
sbb
incl
aad
rcll
insb
push
mov
or
pop
es
pop
add
or
inc
lahf
add
roll
test
lret
push
sbb
call
into
in
push
lcall
inc
stos
and
shlb
es
in
fcomi
shlb
mov
test
scas
pop
sarb
push
jb
adc
mov
add
cmp
out
popa
in
fisubl
sti
push
mov
stos
mov
sbb
lds
test
shr
push
sbb
cmpsl
bound
push
push
movb
out
inc
pop
or
and
mov
incl
rol
repz
repnz
rorl
and
and
call
mov
je
xchg
adc
push
adc
push
and
loop
sub
push
hlt
aaa
fidivs
andl
mov
or
xchg
inc
rcrl
pop
push
fstl
push
mov
mov
idivl
mov
mov
xorl
jge
jbe
cmp
in
icebp
shrl
mov
push
cltd
roll
clc
out
push
jnp
outsl
inc
mov
shll
adcl
xchg
call
les
imulb
shlb
repnz
rolb
addr16
push
push
pop
mov
inc
cmp
mov
mov
mov
sub
mov
pop
out
jp
notl
sub
dec
mov
mov
cmp
repnz
inc
pop
loope
iret
aas
shll
adc
lret
jle
mov
pop
xchg
inc
cmpsb
push
cmc
fs
mov
mov
roll
arpl
sbbl
adc
xchg
dec
add
imul
cli
mov
or
push
movsl
pop
idivl
xor
dec
pop
mov
cwtl
test
arpl
sbb
outsb
shl
push
bsf
or
cmp
xchg
mov
inc
fiadds
aad
push
dec
rcl
sbb
xor
in
jl
clc
push
push
and
out
outsb
sahf
adc
les
adc
lods
rorb
pop
adc
and
dec
xchg
cmp
repz
add
loop
jmp
adc
mov
into
fadds
push
outsb
cltd
call
push
pop
movsl
mov
adc
pusha
es
outsl
push
sbb
rcr
mov
push
imul
sub
and
mov
mov
ja
repnz
std
mov
out
insb
sub
xchg
jnp
mov
mov
push
fiaddl
push
or
mov
mov
ja
push
arpl
es
outsb
xor
add
mov
cmpsb
int
mov
andb
inc
mov
xchg
imul
je
add
test
fwait
cmpsb
lret
rcrb
nop
xor
pop
fsubrp
jecxz
adc
add
lret
addr16
pushf
clc
xchg
mov
hlt
adc
dec
leave
mov
in
mov
ss
sub
repnz
adc
in
sbb
cld
jns
jge
imull
dec
add
repnz
aaa
inc
and
pop
fistpl
xchg
pop
adc
fldt
outsl
sub
das
push
adc
fisubs
aad
shll
and
sti
jbe
test
rolb
lock
mov
test
outsb
dec
ret
mov
sub
cld
cmp
pop
loop
setno
mov
and
stc
loop
or
lret
push
jp
stos
pop
iret
je
sahf
mov
add
movsb
int3
int3
pop
fs
ret
jno
jne
xchg
fadds
lods
repnz
and
add
cli
push
cmp
loopne
jo
mov
push
xlat
test
cld
xor
xor
imul
sti
add
pushf
loop
cmpsl
int3
incb
int
adc
test
fisubs
call
dec
leave
inc
jo
sbb
mov
inc
lock
scas
mov
sbb
ror
mov
pop
dec
in
clc
in
mov
iret
or
jns
mov
mov
or
push
pop
and
adc
out
popf
test
cltd
int
pop
dec
dec
rclb
leave
fstps
mov
shlb
or
fnstenv
fnstcw
dec
xchg
mov
insl
xchg
incb
outsb
stc
xchg
insl
mov
lahf
rclb
cltd
movsb
jmp
cmc
btr
dec
out
and
mov
out
xor
dec
cmp
xchg
outsb
and
rcrb
loopne
xor
push
iret
push
out
jecxz
in
aam
notb
mov
lret
fisttpll
pop
sti
enter
inc
xor
int
insl
idivl
sub
push
jne
adc
mov
out
ds
daa
ljmp
ja
jg
out
call
push
repnz
jb
popf
pop
jno
in
add
lret
mov
sbb
inc
loopne
sbb
xchg
mov
fistpl
scas
or
int
jmp
orl
sub
idivb
ds
cmp
addr16
pop
adc
dec
test
dec
test
ret
mov
es
cmp
orb
inc
out
lea
sub
out
es
lods
test
les
gs
xchg
dec
push
data16
mov
jmp
pusha
or
mov
cwtl
jecxz
leave
fisubs
insb
xchg
fs
and
inc
sub
xor
dec
jl
std
mov
arpl
mov
dec
inc
add
xor
in
mov
cs
jo
lea
lods
push
inc
and
int
jl
lods
mov
hlt
xor
cmp
repnz
xchg
and
addl
push
sub
out
xor
stos
int
mov
jg
cmp
lret
inc
daa
test
cmpsb
inc
jmp
mov
add
sub
dec
in
loopne
pop
scas
xor
sahf
call
andb
mov
mov
iret
xchg
jb
xlat
sbb
push
cld
arpl
cmpsl
jbe
in
jo
jl
jge
out
faddl
add
sahf
mov
cmpl
push
fnstcw
sbb
sarb
dec
cmp
cmp
jecxz
movsl
mov
or
sbb
inc
and
dec
sahf
sub
dec
das
enter
dec
push
xor
cmp
jge
cmc
add
xchg
lods
adc
in
cmpsl
push
mov
in
das
arpl
jge
sbb
ja
lea
data16
cmp
dec
pop
dec
dec
xor
and
bound
adc
repz
aam
loope
aaa
xorb
and
or
xor
mov
and
shrb
sub
aad
xchg
sbb
out
or
cmp
add
cmpsl
roll
movsl
sub
pop
xchg
mov
sti
cmpb
lock
mov
xor
xor
push
js
cmpsl
mov
out
daa
or
mov
mov
pop
or
xchg
fdiv
push
call
jne
pop
insl
out
insb
cmp
add
dec
int
xchg
dec
jne
mov
cmp
lret
inc
bound
or
scas
sbb
xor
pop
sbb
shlb
and
outsb
mov
inc
pop
mov
scas
aam
mov
scas
sub
inc
rclb
test
pop
cmp
std
into
push
mov
lret
and
jo
je
inc
movsb
imul
out
adc
or
rol
push
inc
cmp
inc
cwtl
mov
jg
into
xchg
mov
sub
in
cltd
int
dec
push
rcll
cmpl
dec
dec
add
lcall
inc
jb
or
divl
jbe
enter
inc
adc
push
mov
xchg
pop
ja
jne
add
jns
in
cld
xor
test
rcl
test
xchg
stc
js
cmp
dec
data16
mov
push
mov
sbb
aad
stc
sub
test
aaa
and
dec
les
push
sti
lods
cmp
into
add
dec
mov
cmc
in
add
push
lcall
cmp
outsb
clc
cltd
sbbl
add
and
cmc
repz
push
call
shlb
mov
jle
mov
sbb
insl
insl
gs
fstpt
add
cmpsb
mov
mov
in
cmp
nop
mov
inc
je
rclb
xchg
mov
jp
xor
cmp
mov
mov
scas
xchg
hlt
sbb
adcb
sub
mov
std
popf
sti
ficomps
xor
popa
popa
call
cmp
ljmp
shl
test
arpl
xor
fs
add
mov
scas
stos
fwait
lret
lcall
jbe
aas
jns
dec
aas
adc
aam
dec
outsb
dec
sbb
jbe
pop
pop
mov
into
xchg
and
mov
mov
sbb
mov
dec
mov
xchg
push
out
mov
cmp
dec
aaa
hlt
adc
sub
out
cmp
xchg
inc
scas
push
repz
jnp
adc
cmpsl
dec
div
ja
xchg
sub
mov
push
sub
pop
push
sahf
popf
sub
jmp
loope
cmp
mov
loope
mov
imul
out
shrl
xor
nop
scas
mov
add
jbe
jbe
andb
mov
add
je
cs
ja
std
lahf
xchg
movsl
popf
std
dec
aas
add
mov
lods
mov
pop
adc
or
mov
xchg
test
cltd
adc
push
xchg
outsl
cs
jl
leave
jp
adc
xchg
ja
stos
jl
mov
jae
push
inc
jl
push
fdivrl
sti
enter
xchg
repz
xor
movl
push
cmpsl
mov
push
test
jl
test
mov
lods
out
sbb
xorl
js
repnz
dec
mov
adc
push
int
cmp
in
push
mov
and
js
jge
cwtl
es
lcall
mov
xchg
iret
add
mov
mov
jle
leave
mov
sub
sahf
je
iret
dec
sub
insb
movsl
mov
and
leave
outsb
mov
call
sub
sbb
mov
sbb
les
push
call
cmp
and
out
xchg
sbb
daa
inc
pusha
and
push
sub
cltd
push
push
sub
lret
inc
into
xor
loope
mov
mov
scas
add
push
imul
test
pop
xchg
jo
in
cmp
dec
or
test
insl
xor
add
add
sbb
jle
imul
cmc
jge
push
or
or
shr
jge
or
xchg
cwtl
mov
test
xor
gs
pop
pop
aaa
mov
movsl
xor
lahf
xchg
lahf
iret
jp
int3
addb
push
arpl
imul
add
imul
cld
push
loopne
aas
ficompl
adc
mov
inc
in
test
loope
fs
dec
mov
mov
jp
mov
sti
rcrb
ljmp
rcrb
mov
add
ret
popf
dec
jle
lods
bound
mov
popa
fidivl
mov
ret
push
fmull
push
push
int
loope
in
cmp
mov
sbb
or
test
cmpsb
stc
sbb
pop
out
cmp
inc
loope
imul
ss
ja
jno
push
aaa
xor
pusha
cmc
ss
fistpll
in
xchg
xor
cmp
push
insl
out
test
mov
mov
mov
push
pop
adc
ss
lds
fistl
mov
adc
mov
call
add
cmpsl
jg
xorb
ficoml
sub
push
ss
das
sbb
orb
fimuls
jbe
xchg
jne
sbb
pop
aam
test
dec
cmp
popf
adc
daa
jecxz
mov
aad
fs
jnp
cwtl
and
xchg
int3
aam
pop
push
and
inc
mov
mov
jbe
jecxz
cmp
xor
sbb
js
xchg
xchg
sbb
pop
dec
andb
add
test
in
push
mov
dec
xchg
sub
ret
inc
mov
addl
ret
cld
inc
inc
stos
cmpsl
stos
cmp
mov
es
sub
icebp
je
sub
dec
cmpsb
mov
fstps
orb
jb
lods
pop
dec
lds
mov
int3
js
push
leave
sahf
mov
adc
outsl
mov
mov
cmc
jb
xchg
cwtl
insl
xchg
xchg
in
fs
mov
je
popl
mov
rolb
in
sbb
cmp
ja
shlb
nop
jg
mov
popf
insl
cmp
push
lods
push
test
cwtl
fcoms
push
les
adc
adc
stos
std
dec
push
cmpsb
mov
sub
dec
out
rcrl
push
jne
adc
cmp
pop
ret
pop
push
lcall
pop
or
adc
lcall
daa
sarb
divl
xchg
jl
xchg
xor
pop
popf
inc
dec
pop
ret
push
sti
clc
pushf
pop
pop
add
imul
jne
mov
mov
fcompl
dec
pop
rclb
cmpsl
fs
fcoml
and
sub
mov
dec
push
loope
or
add
bound
push
scas
adc
gs
sub
sub
jne
movl
and
in
mov
dec
mov
mov
addr16
add
push
or
add
mov
dec
insb
hlt
xlat
and
add
mov
in
fbld
push
aad
dec
mov
cmp
gs
adc
outsl
mov
out
sbb
stos
cmp
or
imul
jns
add
pop
sar
sub
out
adcb
test
fsubrs
das
xor
xlat
jno
dec
jne
hlt
push
jl
jb
mov
aaa
hlt
mov
es
movb
sti
dec
outsb
lods
iret
mov
jo
mov
xchg
addb
cmp
push
test
aaa
dec
negb
mov
out
outsb
popf
mov
or
inc
push
xor
lcall
iret
in
shrb
cmp
inc
in
add
mov
dec
push
lds
aam
lods
pushf
jp
push
xor
stc
hlt
fsubrl
outsb
out
push
out
shrb
jle
sub
mov
daa
test
jne
loop
scas
sbb
push
xacquire
and
movsb
int3
sbb
mov
fs
shrl
dec
loope
push
cmp
sub
push
mov
jmp
pop
shll
xchg
inc
xor
outsl
sbb
cmp
or
and
icebp
mov
cmp
cmpsl
lods
fisubs
mov
and
cmpsl
cmp
lret
jge
jg
test
inc
mov
in
gs
push
cmp
ret
mov
push
jmp
mov
faddp
push
addl
je
std
sub
jecxz
xor
jecxz
cmc
cld
xor
daa
hlt
jae
add
les
dec
iret
mov
or
pop
jnp
add
mov
shr
mov
or
mov
in
out
adc
lock
mov
sbb
imul
adc
jecxz
rcr
jge
mov
lods
ja
cmp
call
fs
adc
jne
jbe
outsb
mov
sub
in
gs
and
inc
shlb
or
imul
popf
inc
sbb
jo
jnp
dec
xor
insb
sahf
cmp
les
pusha
ds
pop
enter
arpl
das
andb
insb
les
inc
imul
arpl
out
int3
fildl
dec
popa
aaa
and
imul
jge
fldenv
sbb
ror
test
cmpl
subb
jmp
imul
mov
ffree
and
jno
outsl
and
enter
adc
aam
sub
cld
arpl
xchg
in
mov
push
jbe
loope
negb
push
fisubrl
pushf
bound
mov
pop
scas
sbb
rorl
push
aaa
arpl
imulb
loope
sbb
cwtl
std
xchg
mov
packssdw
mov
sbbl
or
aam
adc
xchg
hlt
and
insl
mov
int
dec
xchg
push
mov
rclb
test
mov
das
repnz
or
cmp
ljmp
arpl
jp
push
cmpsl
jl
xchg
cmc
add
imul
add
mov
daa
orps
fimuls
xchg
mov
dec
dec
lcall
mov
jbe
jmp
push
push
mov
sahf
xchg
mov
shlb
pop
insb
xchg
imul
lahf
movsb
push
jae
lds
test
pop
fsubp
out
int
jp
dec
and
in
adc
ss
jns
fistl
mov
push
jp
bound
adc
mov
mov
and
xchg
sub
inc
mov
mov
in
ss
mov
dec
ret
xor
push
mov
mov
push
int3
pop
mov
pop
mov
test
enter
ret
adc
push
pop
mov
push
ja
cwtl
das
sahf
jnp
pushl
loope
sbb
dec
inc
cmc
jns
sub
lcall
ficoml
sub
ljmp
dec
sbb
into
jb
xor
push
andl
ficomps
mov
and
or
aas
xor
outsb
fldt
sbb
js
rcll
pop
xor
aam
cmc
cmc
mov
or
sbb
sbb
adc
iret
scas
int
jmp
stos
dec
test
fstps
cmp
and
cmpsl
cmp
out
mov
popf
movntq
shl
cmp
cmpsl
sub
sbb
in
fwait
into
outsb
push
mov
icebp
rcll
das
pusha
push
int
jne
js
and
adc
sbb
push
loop
call
daa
lret
add
jnp
inc
or
imul
dec
cmp
mov
jmp
daa
movb
mov
mov
sub
mov
scas
cmp
dec
dec
iret
sub
mov
xchg
adc
icebp
and
mov
xchg
sub
enter
test
sub
pusha
das
out
in
add
sbb
cli
stos
subb
movsb
or
negb
xchg
xor
pop
sub
pop
push
iret
xor
mov
mov
sub
out
inc
mov
in
inc
aas
sbb
xchg
lods
mov
jecxz
xlat
stc
pushl
jo
mov
pop
ss
xchg
clc
lcall
and
sub
cmc
jle
push
aaa
outsb
cmp
imul
push
adc
dec
adc
data16
std
aaa
or
xchg
xor
lret
sarl
adc
mov
jg
xchg
in
std
ret
test
or
xchg
sub
shlb
mov
mov
cld
jbe
outsl
in
lods
or
jno
push
xchg
je
sbbl
add
adc
cmp
xchg
mov
pop
shrb
inc
adc
les
movsb
push
push
jo
dec
push
jnp
andl
mov
out
push
out
shlb
xor
add
mull
stos
leave
sub
in
jno
and
test
outsl
dec
sbb
test
mov
push
lock
push
lret
push
test
lock
jns
je
inc
leave
fsubl
mov
xlat
adc
arpl
shll
adc
mov
jle
movsb
insb
out
or
dec
cmp
outsl
sub
inc
and
adc
dec
sub
push
cmp
push
ds
mov
std
jp
pusha
mov
inc
adc
and
lcall
or
repnz
push
cmovne
sub
push
fcmovbe
inc
int3
or
jnp
xor
mov
push
loopne
inc
push
fs
push
push
subb
mov
push
push
mov
push
fstps
push
mov
lods
pop
jne
mov
test
mov
and
lock
shrb
pop
pusha
test
xchg
test
lods
int3
imul
or
bound
mov
xor
xchg
jp
roll
or
cmp
mov
data16
andb
lcall
mov
mov
inc
std
hlt
bound
in
loop
push
pop
mov
sbb
in
in
nop
aas
stos
cmp
repnz
lods
dec
daa
jl
xchg
xor
mov
sbb
scas
loopne
push
cmpsb
mov
add
andl
jns
add
pop
mov
cld
push
lea
xor
jg
jns
inc
mov
add
dec
int3
jmp
add
pop
push
mov
jge
insl
test
mov
fwait
out
mov
cmpsb
ret
mov
outsl
loopne
jb
dec
push
loop
sar
pop
sbb
lods
fdivl
insl
in
lcall
das
push
push
and
sub
mov
test
mov
jno
cld
and
sbb
cmp
sub
cmp
mov
sub
xor
push
inc
jno
cmp
loope
dec
lock
subb
or
pop
fisttpll
jae
scas
or
jbe
dec
filds
mov
adc
ror
in
dec
sarl
fcmovu
mov
push
add
in
test
jnp
call
push
cld
xlat
pop
aas
mov
movb
cld
sarb
xor
lcall
mov
xchg
clc
xchg
dec
pop
mov
fs
into
mov
pop
pop
push
jne
aaa
ret
mov
xchg
or
or
sub
push
pop
xor
ret
int3
inc
movsb
in
icebp
sbb
or
dec
out
xor
das
insb
push
aad
aam
movsl
jle
mov
enter
mov
loop
jmp
cli
jnp
test
xor
arpl
sbb
out
pusha
loope
lcall
mov
mov
adc
push
lret
cwtl
fistpl
adc
pop
pusha
lahf
push
push
daa
sbb
add
ret
mov
or
incb
bound
into
jp
xchg
int3
popf
das
shrl
mov
sbb
jne
add
adc
or
iret
jecxz
aam
xor
push
push
lcall
and
gs
ljmp
push
dec
adc
bswap
jge
adc
in
insb
mov
in
fcompl
je
dec
xor
jb
jmp
cli
add
popf
shll
aad
subb
mov
push
mov
enter
loop
fdivs
lds
inc
mov
int
daa
int3
pop
mov
test
mov
xlat
inc
mov
ror
adc
cmp
mov
or
adc
imul
lock
lret
and
mov
cmp
jb
and
xchg
mov
cld
sbb
jne
xchg
xchg
scas
lea
mov
mov
addl
mov
and
dec
out
sub
outsl
mov
and
stc
mov
pop
push
cmp
lret
lds
jmp
cmpsl
jae
nop
fsubl
divl
add
imull
push
dec
out
adcl
mov
mov
jmp
inc
mov
test
inc
repz
xor
mov
movsb
xchg
es
inc
and
es
mov
cmp
nop
clc
mov
pop
sahf
cmpsl
sbbl
jg
and
adc
lods
and
mov
inc
xchg
cwtl
mov
loopne
iret
inc
inc
pop
push
sbbl
shl
lret
jae
in
mov
pop
pop
jmp
xchg
jb
shlb
sub
out
hlt
insl
arpl
je
adc
cmp
sbb
in
xchg
movsl
lods
lds
inc
dec
aaa
add
shlb
pop
mov
inc
xchg
enter
or
pop
mov
bound
iret
push
scas
sbb
lcall
mov
mov
push
pusha
rcrb
js
xchg
ljmp
mov
xor
jge
mov
adc
scas
aam
arpl
adc
push
incl
sahf
push
jae
in
add
int
dec
xor
sub
rcll
sbb
xor
cmp
bound
out
push
push
mov
and
sbb
shrb
dec
insl
cmpsb
inc
jnp
test
sub
shrb
iret
cmc
xor
insl
cltd
xchg
shl
cmp
push
mov
gs
inc
arpl
cltd
mov
inc
in
dec
inc
out
jp
cltd
idivl
sahf
dec
ret
sub
adcb
dec
mov
dec
xlat
fs
je
jge
fwait
lods
ror
mov
or
add
sbb
mov
pop
ret
add
mov
call
subb
repz
mov
ror
cwtl
and
movsb
pop
sarl
or
push
dec
cmpsb
out
leave
rcrb
jecxz
push
inc
mov
test
xor
sub
jmp
mov
sbb
jb
ds
jbe
xorl
dec
repz
fsubrs
adc
dec
push
je
leave
xor
insb
std
negl
fbstp
gs
mov
or
mov
sbb
sub
push
loop
nop
stos
das
ret
mov
pop
push
pusha
add
gs
stos
imul
and
roll
out
pop
sub
inc
xchg
inc
imul
shr
pop
pop
mov
repz
inc
cli
push
pop
sbb
pop
cmp
cmp
int
les
add
popa
pop
add
ucomiss
fidivrl
jns
cld
fiaddl
out
mov
cmp
adc
incb
in
loope
mov
xchg
sub
in
aam
inc
call
scas
data16
mov
pusha
adc
inc
xor
fbstp
xor
pusha
xor
add
inc
jp
ljmp
xchg
cmp
xor
ja
lret
push
or
jns
andl
or
or
pusha
or
stos
call
aam
stc
and
pop
orl
out
pop
aaa
pop
xor
pop
inc
aad
cld
imul
jl
push
test
nop
mov
push
clc
xor
loop
jne
push
mov
frstor
ljmp
in
mov
aas
or
push
js
fimull
or
mov
adc
sbb
dec
and
jecxz
imul
mov
icebp
in
push
jle
push
mov
pop
dec
pop
into
xor
jne
push
mov
mov
test
lea
fsubl
bound
shll
cmp
fwait
out
cld
mov
cmp
adc
sub
lahf
hlt
fists
test
test
jecxz
movb
xor
mull
sbb
je
pop
fistps
xor
mov
push
pop
xor
inc
fcmovnb
imul
ds
mov
hlt
inc
cmp
adcb
mov
cmp
dec
popf
sahf
nop
cmpsb
lods
cmp
enter
and
sub
out
js
orps
dec
pop
adc
testl
cmp
dec
int
mov
fnstsw
mov
movsb
mov
cmp
test
ret
inc
sbb
xchg
add
dec
mov
inc
push
sub
fadds
adc
sbb
aaa
push
lds
mov
cs
jno
sub
loope
mov
mov
repz
daa
cmp
sub
mov
dec
or
cmp
push
fs
push
arpl
jl
and
aaa
test
mov
mov
adc
test
adc
adc
mov
mov
pop
imul
adc
push
rclb
test
pop
ds
shrb
stos
xchg
pop
push
mov
inc
loop
dec
sub
aaa
push
loopne
mov
mov
xchg
xor
add
dec
aas
imul
inc
lock
aam
pushf
xor
out
frstor
pushl
cmc
popa
filds
fldenv
mov
std
mov
push
cmpsl
rcll
scas
cmp
jmp
sub
dec
in
jae
nop
pop
lret
ja
inc
leave
aaa
fiaddl
das
shll
cmpsl
shl
sub
or
mov
mov
addl
pushf
hlt
push
xor
dec
pop
add
dec
jne
andl
out
cmc
xchg
pusha
and
mov
sahf
jbe
or
dec
dec
mov
mov
movsl
mov
lret
cmp
lret
add
pop
adc
bound
test
push
fists
mov
iret
pop
cld
test
mov
push
mov
xor
xor
jl
es
clc
push
subl
and
cmp
or
pop
bound
cmp
fcomps
in
fstps
xchg
mov
xchg
add
jb
mov
bswap
mov
pop
cltd
push
ret
push
push
inc
mov
mov
sbb
lret
xchg
rorb
jle
lahf
subl
or
ret
out
fsts
inc
aad
jno
and
mov
xchg
xlat
and
popa
add
nop
push
cltd
roll
sahf
hlt
mov
cli
pop
push
cmp
loopne
sub
push
mov
aam
mov
out
out
inc
or
push
jmp
scas
pop
xchg
push
mov
movsl
imul
into
clc
ljmp
push
movsl
stos
cmp
lods
nop
shlb
sbb
test
movsb
mov
addr16
jmp
popa
xchg
jecxz
pop
pop
sub
push
jmp
pusha
and
mov
es
repz
lock
lret
mov
pop
paddw
inc
mov
out
daa
call
adc
dec
cmp
mov
add
and
pop
mov
cmp
cld
mov
scas
enter
ljmp
push
stc
stc
and
pop
aas
test
add
push
mov
in
mov
lods
sbb
push
iret
ret
fdivrs
insb
push
std
xchg
pusha
hlt
js
dec
les
loope
mov
push
push
sbbl
add
xchg
scas
in
mov
ss
push
pop
push
mov
lods
sub
xchg
loopne
decl
shrb
popf
pop
jne
inc
into
dec
mov
lds
pop
add
push
or
mov
cmc
mov
cmpsb
xor
xor
fistl
xlat
mov
pop
push
and
pop
out
dec
in
mov
cld
mov
xlat
stos
mov
xor
and
insl
bound
jbe
adcl
loopne
sub
les
sub
fbld
push
mov
gs
jmp
std
and
mov
out
mov
pop
data16
mov
mov
xchg
std
fld
pop
jecxz
and
adc
test
sub
pop
jecxz
add
xchg
inc
daa
loopne
xchg
sub
mov
jns
sti
mov
mov
fs
mov
mov
pop
pop
pop
mov
add
shr
out
xor
pop
je
mov
push
cmp
push
xor
rorb
pop
rcll
push
and
xchg
in
lock
test
jbe
fildll
push
aas
inc
cmpsl
jmp
mov
lds
jbe
mov
repnz
pop
notl
cmp
and
mov
jecxz
cmpsl
stos
mov
sbb
xchg
lcall
nop
xor
dec
lahf
xor
adc
push
sahf
call
out
dec
inc
mov
jns
imul
jae
push
dec
xchg
push
jg
sbb
out
test
idivb
sarl
push
mov
cltd
mov
xchg
data16
pop
push
lcall
jg,pn
cmp
mov
sbb
sub
ss
jl
mov
roll
cltd
dec
adc
dec
pusha
push
fs
mov
mov
pusha
rolb
xorb
out
mov
lock
mov
xlat
icebp
movsb
mov
insl
sbb
fcompl
sub
sti
enter
cwtl
xchg
inc
and
push
lret
mov
test
repnz
loop
sub
mov
js
mov
adc
loopne
cmp
add
dec
or
and
pop
xor
adc
out
jecxz
in
int
pop
dec
in
das
gs
cli
xor
pop
adc
ret
in
cmp
fsubrl
shl
out
add
mov
dec
jmp
or
xor
dec
mov
add
aad
mov
lock
sarl
or
pop
xor
fidivrs
sbb
aam
inc
cwtl
jp
iret
or
sbbl
sbb
je
xor
xchg
lret
xchg
lret
bound
fimuls
std
adc
inc
xor
les
ja
lds
adc
test
cmpsb
nop
sub
sbb
mov
ljmp
repnz
push
aam
sub
jnp
push
jp
or
cmp
aas
cmp
cwtl
inc
lds
push
mov
mov
test
pop
aad
out
scas
pushf
mov
mov
loope
mov
mov
sub
or
pop
into
push
cmp
pop
xchg
pop
test
adc
xchg
inc
jo
xchg
std
mov
cltd
sbb
jg
push
cltd
sbb
in
sub
and
cmpsb
rorl
jle
cltd
mov
cmp
hlt
xor
and
test
mov
ja
js
pusha
and
fcom
xchg
cmpsl
or
pop
ds
sbb
push
adc
scas
jecxz
pop
mov
sub
mov
imull
dec
adc
daa
dec
dec
add
fsubp
insb
fwait
xchg
push
into
popf
loop
pop
test
shrb
stos
lcall
into
cmp
sbb
je
orb
inc
sbb
adc
ret
dec
and
cmp
add
sar
pop
pop
push
clc
rclb
inc
mov
rep
ljmp
push
into
arpl
mov
adc
xor
mov
scas
stc
dec
push
inc
xor
xchg
xor
mov
mov
dec
pop
mov
imul
mov
dec
inc
inc
roll
add
stos
mov
mov
rcrb
xchg
outsb
stos
sub
sub
push
imul
xlat
xchg
ror
outsl
movsl
int
out
cmp
dec
or
mov
lcall
test
lret
iret
fsin
ljmp
in
sbb
in
pop
push
daa
mov
mov
sbb
inc
ljmp
cmp
lods
pusha
in
cltd
push
mov
std
and
and
cmp
and
inc
pop
add
pop
jmp
gs
dec
lahf
add
cs
sub
int3
mov
hlt
jb
cld
rcrl
pop
jp
pop
jnp
and
pop
orl
mov
and
jae
addl
or
adc
adc
add
ds
add
lret
aad
and
repz
mov
push
fadds
mov
addr16
fcmovb
mov
add
jecxz
mov
cmpsb
es
rolb
mov
mov
loop
dec
pop
lds
jge
out
test
xchg
pop
loope
xchg
jbe
mov
pushl
xor
fsubrl
mov
xchg
or
pop
sbb
stos
out
scas
mov
cld
ljmp
mov
sbb
je
test
fdivr
mov
adc
addr16
jno
pushf
dec
jnp
xor
enter
sub
mov
cmpb
cmp
repnz
mov
mov
int
aad
push
add
push
adc
inc
mov
jmp
mov
add
popa
cmp
cmp
jbe
popf
sti
mov
push
sbb
lea
nop
xor
ljmp
pushf
repz
push
fwait
push
or
inc
mov
push
mov
push
jno,pn
jno
push
neg
mov
push
cltd
out
xor
cwtl
cmp
xchg
ja
fwait
push
cmp
std
int
sub
mov
xchg
ror
test
inc
mov
and
and
add
dec
mov
data16
data16
cld
in
cwtl
or
mov
shr
adc
adc
loope
fildl
movsl
in
mov
outsb
pop
test
pop
inc
test
aaa
and
sbb
mov
aad
fwait
sub
xchg
dec
aaa
cmp
or
inc
jg
mov
dec
push
arpl
es
aas
sub
cli
pop
pusha
movsl
popl
mov
mov
dec
call
sar
jge
insb
xor
mov
aas
rep
std
cmp
fdiv
cmp
and
or
mov
pop
nop
dec
pushf
xchg
mov
pop
or
aad
outsl
jmp
pop
out
test
mov
or
aas
inc
sub
lock
lock
pop
xchg
mov
jb
xor
adc
addb
imul
mov
in
aam
psrlq
add
and
mov
mov
pop
cli
jg
arpl
gs
stos
filds
insb
lods
adc
sbb
std
or
jo
mov
lods
dec
push
pop
je
cwtl
jbe
lahf
sahf
fsubs
adc
or
pop
sub
jae
in
jp
sub
jbe
jl
mov
push
stos
push
mov
orl
xlat
mov
sti
xchg
jbe
gs
inc
out
repz
push
jmp
ja
bound
xrelease
stos
and
mov
pop
mov
add
aad
mov
ret
push
repz
mov
bnd
or
mov
ds
popa
repnz
dec
in
push
xor
push
int
push
xchg
jmp
test
adc
inc
xchg
adc
sbb
mov
pop
lods
and
mov
adc
add
int
xchg
xor
into
xchg
shr
push
insb
cld
popf
bts
repnz
add
push
jb
sub
imul
mov
cmp
pop
outsb
sub
or
hlt
push
cmp
jmp
cmp
pop
sbb
inc
gs
pop
pop
imul
leave
jg
or
add
jo
or
scas
adc
push
mov
push
fsubs
imul
push
or
cmpsb
or
xorl
ljmp
mov
cltd
out
and
sub
mov
int
out
in
add
ljmp
pop
jmp
fs
stc
inc
sub
ja
repz
in
inc
iret
mov
mov
sub
dec
cmpsl
out
cmp
push
inc
add
xchg
cmp
cmp
dec
mov
xchg
fstpt
lret
xor
mov
stc
push
fs
les
jg,pt
mov
mov
cs
pop
mov
and
add
pop
jg
mov
shlb
push
icebp
jb
xchg
test
and
icebp
pusha
dec
add
inc
out
push
mov
add
mov
mov
mov
mov
pusha
mov
xlat
or
adc
push
cmpb
pop
jno
cmp
lret
out
mov
mov
sbb
loop
or
cli
xchg
scas
test
in
jmp
jb
pop
cli
cli
jno
imul
lret
push
or
sbb
dec
mov
pop
jl
jo
lret
push
stc
pop
cmc
push
xchg
push
aam
jb
mov
inc
sbb
jo
xchg
dec
call
or
cmpsb
daa
or
dec
sbb
jb
and
dec
adc
nop
pop
test
push
jecxz
pop
xor
loop
movb
dec
jge
dec
mov
mov
pop
sbb
cld
add
in
mov
xor
jg
add
and
loopne
xorb
sub
xchg
adc
and
dec
out
dec
in
daa
dec
sub
xor
mov
push
js
mov
cwtd
inc
insb
inc
mov
imul
in
cltd
inc
popa
mov
mov
loopne
ja
sub
jae
sub
cmp
and
test
pop
and
cmpsl
mov
jns
fildll
xor
mov
sub
loope
xchg
xchg
sbb
cmp
js
add
xchg
sbb
mov
ljmp
rorl
push
push
mov
rolb
xor
sbb
adc
sahf
push
adc
or
test
jle
mov
jle
cs
or
lods
adc
pop
mov
repz
mov
int3
cwtl
pop
test
ljmp
cmp
pop
mov
daa
pop
mov
lret
enter
sbb
cmp
push
ds
mov
xchg
int3
jmp
mov
mov
xor
sbb
ror
popf
or
inc
mov
and
nop
xchg
call
rcr
mov
pop
push
and
push
inc
shlb
jbe
mov
in
ret
add
outsb
fwait
cmp
jecxz
into
les
mov
push
ja
cmp
adc
inc
cmp
pushf
xchg
jnp
out
push
push
cs
out
sahf
in
push
cs
or
and
int
movl
ficoms
push
call
fisubrs
xchg
test
add
out
pop
cs
push
das
hlt
jge
sahf
sbb
inc
das
out
dec
pop
mov
pop
sub
es
and
mov
mov
rorl
adc
fimuls
sub
xchg
xlat
or
pop
rorb
pop
imul
les
or
or
pop
setno
mov
pushf
repz
std
lds
das
mov
lret
push
dec
sub
out
lods
call
in
and
fsubr
test
xor
push
enter
or
out
and
imul
addb
lods
lods
add
mov
dec
clc
mov
icebp
in
outsb
jne
cmp
sar
or
cmp
fdivl
adc
sti
scas
test
scas
inc
or
add
and
imul
loop
mov
cmp
xor
sub
sub
cmc
jb
mov
adc
es
jbe
mov
shl
clc
adc
je
mulb
add
clc
cmp
data16
xor
into
or
leave
sbb
cmp
insl
push
xor
push
pop
enter
fs
xchg
pusha
jae
jmp
jae
pop
jb
xor
mov
xchg
les
dec
dec
aam
dec
or
cmc
js
fdivs
jns
jne
test
mov
push
out
cmp
out
xchg
sbb
push
push
mov
movsb
lret
push
js
xchg
xlat
shr
push
mov
adc
fwait
mov
jne
sub
es
aas
cmp
cmp
xor
add
mov
pop
ds
pop
xor
adc
leave
stos
shll
xchg
adc
dec
push
adc
push
pushf
xchg
sti
adc
adc
xor
xor
push
fidivl
aas
adc
mov
shlb
aas
inc
mov
push
and
fsub
jge
std
push
scas
xchg
insl
fnstsw
jno
cmpl
idiv
cmc
sub
sub
pop
pop
jbe
shll
and
test
divl
sbb
or
std
inc
scas
arpl
scas
sub
or
jl
and
mov
shl
xor
fsts
ja
iret
inc
sbb
out
stos
mov
jo
sbb
xchg
imul
and
cltd
mov
inc
xor
mov
ret
adc
pusha
sbb
pmullw
xchg
add
mov
jmp
shlb
andb
lods
ret
pop
and
push
and
nop
inc
mov
lods
add
mov
inc
cmp
or
repnz
je
add
inc
mov
imul
fs
rcrb
jno
arpl
dec
sbb
mov
xor
mulps
xchg
dec
rol
mov
es
imul
adc
subb
push
mov
imulb
shl
dec
movsb
and
outsl
xchg
outsb
test
push
mov
mov
std
inc
roll
fcmovu
ret
push
std
sub
enter
shl
jno
insb
sti
xchg
insb
sub
mov
mov
push
push
mov
lcall
xor
fisubs
mov
cmp
or
in
sbb
into
adc
call
aaa
push
mov
enter
xor
push
lods
jnp
lock
pop
sbb
mov
xchg
nop
mov
into
mov
adc
mov
or
dec
mov
xchg
pop
xchg
pop
inc
add
cmpsl
cs
lock
xorl
in
pop
sub
movb
lds
adc
pop
in
jl
outsl
sbb
or
sbb
adc
jmp
stos
ss
dec
lea
mov
mov
pop
call
inc
popa
mov
sbb
insb
dec
stos
mov
jg
mov
outsb
scas
in
inc
sbb
or
loope
and
mov
ljmp
lahf
movsl
add
mov
clc
popa
inc
mov
add
nop
aam
xchg
mov
mov
xor
jg
sbb
hlt
and
inc
cmp
inc
es
pop
mov
test
cmpsl
hlt
sub
adc
scas
lock
incl
push
pop
or
aas
mov
mov
ret
sub
xchg
push
push
cmp
push
pusha
lock
inc
xor
fsts
and
sarb
jno
jo
popf
adc
shll
or
scas
mov
fiaddl
arpl
push
adc
fs
das
daa
in
and
scas
sub
imul
test
out
gs
pop
dec
enter
mov
int3
mov
dec
cwtl
push
mov
jns
mov
push
or
ret
inc
lret
movsb
insl
jne
imul
mov
popa
mov
mov
add
cmp
mov
dec
test
test
mov
and
cld
into
andl
lret
es
mov
rcl
jo
xchg
cltd
pop
pop
int
pop
decb
neg
jmp
clc
imulb
pop
int3
int
fsts
in
mov
jg
lahf
xchg
sbb
sub
push
mov
or
xor
mov
cmp
inc
mov
pusha
push
sub
mov
sub
das
jg
dec
sti
pushf
lret
and
pop
cmpsl
iret
jb
add
cmpsl
sbb
cmp
subb
ret
loope
dec
sbb
xlat
decl
shlb
pop
push
fiaddl
xor
mov
test
cwtl
xchg
sub
dec
xchg
shlb
push
sub
and
jg
repnz
xor
sbb
hlt
add
sahf
insb
clc
push
mov
push
stos
movsl
cmpsb
xor
mov
jl
loope
push
add
cmp
mov
fisubs
idivl
dec
imul
inc
iret
outsb
add
pushf
shlb
int3
sbb
push
rclb
xchg
inc
push
data16
adc
sub
xor
shr
fs
ret
stc
xor
xchg
cmp
dec
push
je
testb
jnp
arpl
arpl
mov
mov
dec
add
loop
mov
sbb
sub
insl
jmp
in
gs
cmp
xchg
and
jo
jb
jae
sub
xlat
fidivrl
test
aad
add
arpl
mov
inc
shr
mov
dec
push
jb
or
mov
pusha
sub
into
insl
lret
cmc
sbb
lds
fbld
cmpsl
hlt
jb
cmp
loope
fsubl
xchg
lcall
rcr
je
popf
sub
pop
cmp
xchg
mov
lret
ret
aad
aad
std
scas
pop
xchg
add
jb
je
bound
insl
dec
mov
cmp
mov
push
mov
xchg
sti
push
lock
dec
imul
lcall
pushl
repz
jnp
pusha
mov
and
mov
jne
shrb
iret
out
ds
jno
pop
add
mov
cmpsl
repnz
dec
xchg
sub
push
movsb
mov
popf
or
stos
cli
and
mov
icebp
sub
into
jno
jmp
xchg
aad
pop
sbb
cmc
addr16
xlat
fcompl
scas
push
pusha
test
jnp
sbb
stc
and
pop
stos
mov
jbe
and
insb
ror
cmpsl
mov
push
cmp
add
mov
adc
jle
daa
and
movsl
loope
insl
xor
and
loop
mov
int
lds
dec
daa
insb
jae
add
sbb
mov
lds
push
xchg
dec
lods
test
sbb
dec
push
jg
sub
negb
cmc
mov
test
stos
fdivrs
mov
dec
testb
cld
js
mov
mov
inc
outsb
in
mov
sbb
adc
cmp
aad
adc
mov
sub
aaa
push
jl
hlt
or
cltd
pop
or
aad
xchg
mov
aas
arpl
std
cmp
xorl
insl
imul
aam
cmp
cld
jbe
pop
gs
mov
jne
mov
and
add
and
enter
lcall
lods
or
dec
data16
dec
sbb
cmc
push
fstpt
popf
add
sti
fisttps
cmp
inc
mov
adc
les
xchg
aam
sahf
js
jnp
mov
dec
pop
and
ss
fbstp
mov
cs
inc
imul
xor
out
out
or
fbstp
scas
lret
arpl
add
clc
out
cs
mov
ret
mov
fsubrs
or
mov
push
dec
lahf
pushf
push
test
jle
fidivl
int3
fcomi
ja
xor
jne
bound
nop
cmpsl
xor
clc
rclb
into
pop
insl
mov
and
and
cmp
push
les
aaa
jno
loop
add
mov
dec
push
jge
mov
xor
je
nop
or
cmp
ss
mov
scas
aam
sbb
ret
xor
rcrl
dec
lods
push
mov
inc
sbb
cld
mov
jle
fnstenv
mov
cmpsl
cmp
sub
push
fistps
mov
mov
rclb
jmp
mov
popl
jl
testl
mov
or
cmpsb
and
hlt
ljmp
lds
lock
in
and
mov
xor
hlt
pushf
movsb
fsubs
inc
and
jae
cmc
sub
xchg
pushf
sub
inc
inc
xor
out
mov
sbb
insl
into
repz
mov
add
orl
aas
dec
mov
adc
cltd
pop
xchg
fld
push
mov
mov
int3
pop
mov
gs
ljmp
shll
and
xor
loop
cwtl
add
inc
fchs
mov
sub
mov
outsb
repnz
xchg
xor
into
and
jle
adcl
ljmp
hlt
mov
mov
inc
test
xor
push
mov
mov
xchg
lock
cmp
andb
jno
les
adc
jae
in
in
xchg
push
and
ja
mov
inc
test
push
lods
cli
push
imul
jge
mov
push
mov
into
int3
lret
cmpsl
pop
in
inc
std
je
cld
movlps
outsb
fiaddl
gs
in
fs
jbe
bound
push
dec
inc
insl
sbb
imulb
lods
call
mov
fdivrl
jae
push
jmp
sbb
and
inc
and
push
pop
dec
jno
ds
mov
mov
insb
mov
dec
jae
cltd
loope
xchg
mov
lds
das
rcrb
neg
sbb
aam
aas
fcmovnbe
gs
dec
pop
call
push
jno
push
in
jae
fmul
push
and
adc
sbb
shll
inc
in
inc
shll
xlat
jge
mov
pushf
insb
mov
adc
dec
add
insl
inc
movsb
jne
mov
test
xor
mov
cmpsb
lcall
sub
cs
insb
xor
test
out
mov
cli
test
pop
sub
cmp
pushf
pushf
sub
rolb
xchg
mov
aaa
adc
inc
xchg
scas
xchg
cmp
and
pop
imul
ja
dec
cmp
mov
std
stos
ds
out
mov
leave
sbb
test
fstl
cmovns
dec
cmp
sbb
bound
inc
adc
lods
mov
into
push
mov
das
cmp
xor
xchg
negl
inc
sub
jae
push
arpl
scas
jae
pop
rcll
xor
dec
adc
sbb
fucom
icebp
ja
mov
mov
fs
lcall
inc
xchg
loop
mov
dec
mov
inc
inc
add
xchg
cs
cld
in
or
sbb
in
sbb
test
jge
lods
loop
out
in
push
xchg
xchg
pcmpgtb
sub
lods
outsb
xor
push
add
adc
icebp
js
xor
icebp
pop
decb
loop,pn
sbb
movsl
xor
das
dec
rcrb
ss
add
pop
jae
add
ja,pt
mov
scas
xchg
shrl
lret
xchg
pop
pop
aam
std
popf
loop
shll
out
out
nop
xchg
pop
adc
or
add
das
imul
xor
adc
pop
cmc
ss
push
loopne
fsubs
shll
sub
add
or
shlb
xchg
sbb
fdivrp
or
inc
popa
mov
xchg
rclb
icebp
je
bound
insb
xlat
pop
jne
xor
fbld
adc
jl
mov
xchg
xor
loope
adc
repz
xchg
iret
lahf
lahf
push
sub
add
out
cwtl
adc
pop
lods
imul
fidivs
nop
jecxz
mov
mov
call
stos
inc
cmpl
pop
aad
mov
ljmp
xchg
dec
inc
xchg
inc
dec
fcompl
mov
clc
push
mov
inc
inc
and
mov
xchg
ljmp
xchg
icebp
mov
push
out
push
pop
push
sarb
adc
pop
movsb
pop
mov
ss
push
xchg
inc
xchg
push
inc
fsubs
sub
sbb
fadd
mov
cwtl
mov
xchg
cltd
mov
decl
movsb
out
xor
sar
adc
jns
sub
int3
in
sbb
mov
cmpsl
cld
pop
cwtl
jo
mov
mov
ret
sub
lahf
inc
sbb
cmc
sbbb
loope
addb
mov
and
mov
push
sub
mov
inc
repnz
mov
mov
test
jg
aaa
clc
rolb
push
test
adc
ljmp
push
lret
mov
mov
or
fimuls
dec
jle
jb
out
add
jns
cpuid
gs
loope
mov
cmpsl
ljmp
arpl
xchg
and
mov
push
movsl
push
sbb
hlt
xor
pushf
pop
dec
jge
xchg
push
push
mov
lahf
outsb
add
inc
push
movsb
sub
add
cwtl
lds
cmc
imul
xor
mov
lret
stc
pop
add
jl
xor
dec
mov
repnz
daa
aam
jno
inc
and
inc
sub
rcrb
push
push
or
aad
pop
enter
pop
testb
mov
xchg
xchg
inc
jnp
nop
test
insb
sub
mov
dec
or
test
outsb
out
push
jb
push
cmp
cmp
inc
adc
mov
mov
test
mov
aam
mov
fstps
push
push
cmp
lods
mov
movsl
fs
loope
jp
adc
sbb
pop
push
lahf
loope
push
mov
xchg
out
ds
arpl
arpl
mov
inc
out
addl
pop
test
or
xchg
add
sub
in
sub
sub
pop
loopne
cmp
outsl
int
mov
not
adc
adc
aam
enter
subb
dec
push
fsub
push
cltd
jbe
mov
fs
fucomp
inc
fistpl
pop
orb
lret
xor
rcr
out
addl
xor
fistl
mov
jecxz
hlt
mov
xchg
imulb
dec
mov
cmp
jnp
lcall
test
mov
adc
cli
add
ljmp
lret
repnz
in
pushf
sti
sbbb
sub
aaa
push
hlt
sub
cltd
push
mov
jp
and
mov
xor
lcall
inc
pop
shrl
daa
and
jmp
icebp
test
adc
les
sbb
xchg
inc
pop
or
test
dec
and
push
addr16
psrlq
xchg
pop
adcl
clc
xchg
loop
mov
cwtl
sti
fstl
jge
repz
aam
jle
clc
and
add
stc
sahf
push
sbb
mov
xchg
sbb
push
or
shrl
addl
insl
or
push
or
adc
jo
repz
xchg
cmc
movsb
adc
je
fbld
movsb
or
push
inc
push
or
push
jns
dec
add
cmp
lods
pop
repnz
ret
xchg
push
sar
out
sbb
and
dec
test
lea
mov
sbb
cmp
jno
lods
call
stos
push
and
iret
dec
mov
nop
cltd
adc
mov
pop
or
test
cmp
pusha
fcoml
mov
inc
popa
rclb
addl
or
int3
lods
sbb
rclb
test
lea
out
pop
mov
xchg
insl
jae
daa
dec
insl
loopne
arpl
ljmp
sub
or
rclb
stos
cld
pop
std
mov
mov
push
push
cmp
cwtl
daa
pop
adcl
in
sub
into
dec
jo
lods
cmpl
jecxz
add
mov
jle
mov
call
fs
repnz
mov
add
imul
addl
inc
imul
jecxz
out
int
xor
lret
test
fwait
cwtl
dec
mov
lahf
fsin
rcr
sbb
lock
loope
add
mov
mov
inc
jecxz
cmp
ja
rclb
in
push
sbb
mov
arpl
sub
sub
jecxz
jg
arpl
xchg
mov
or
pop
nop
idivb
jno
out
and
cwtl
push
push
mov
out
jmp
mov
aas
rcrl
fisubs
clc
and
pop
sub
fcoms
mov
ret
mov
xchg
mov
mov
dec
jns
and
inc
inc
shlb
shll
mov
dec
mov
sbb
hlt
push
xchg
xchg
xchg
imul
sbb
subps
test
imul
mov
push
add
or
jo
lret
stc
sbb
adc
test
data16
and
cmp
push
cmpsl
pop
test
sti
lods
adc
cli
mov
push
cmc
lcall
aam
jl
addr16
adc
sub
nop
inc
dec
inc
arpl
mov
add
dec
mov
test
push
loopne
inc
sub
stos
xor
clc
jns
lahf
mov
lds
mov
out
xchg
fnstsw
daa
adc
push
inc
imul
mov
je
cmpsl
pop
out
shll
sar
bt
arpl
imul
jns
mov
outsb
jl
inc
mov
jmp
aaa
stos
pushf
add
sub
inc
mov
rorl
das
push
adc
push
adc
aaa
pop
es
cld
xor
sbb
testl
call
leave
outsl
nop
lea
loop
xchg
jae
sub
idivb
jae
into
mov
jae
or
out
or
dec
jecxz
ss
jl
gs
add
mov
ret
cs
stos
jo
xor
jmp
rolb
mov
or
flds
ficompl
xchg
daa
es
sbb
ret
notb
add
mov
or
lock
jl
adc
lret
push
aam
dec
xchg
lods
sbb
dec
cmpsb
imul
lea
ficompl
push
or
cmp
push
jmp
lahf
loopne
and
mov
iret
ds
and
xchg
mov
pcmpgtw
ret
fnsave
sbb
inc
sbb
sbb
gs
sahf
cmpsl
clc
in
mov
sbb
lret
inc
int
in
mov
mov
push
jno
movsb
call
mov
jg
push
sbb
lods
xor
push
sub
xor
jno
pop
cli
pop
hlt
hlt
mov
out
pop
aaa
into
pop
fwait
fwait
sub
mov
or
data16
iret
in
jmp
xlat
jb
xor
rorb
pop
js
cmpsb
xchg
inc
sti
mov
adc
nop
into
cmc
inc
fisubrl
mov
into
inc
in
imul
mov
out
in
stos
imul
popf
jg
dec
sti
pop
xor
mov
ja
iret
jge
imul
xor
fwait
pop
sahf
jnp
mov
add
enter
daa
pop
pop
pop
and
mov
lret
push
call
fwait
sbbl
sbb
jg
mov
jmp
mov
fmuls
xchg
addr16
or
ds
fwait
dec
adc
xor
pop
in
mov
cmc
int3
jmp
adc
jl
ffree
dec
add
pop
jo
aad
ret
cld
in
shl
jge
iret
sbb
sub
inc
or
clc
xchg
shll
movsl
mov
pop
insl
xor
retw
ljmp
nop
stos
xor
sahf
pop
jae
inc
push
repnz
fstpl
fwait
call
inc
cmpsb
and
dec
push
aad
adc
or
cmp
fcompl
dec
call
lds
js
mov
xchg
xchg
insl
ljmp
pop
mov
in
jb
xchg
mov
aas
jnp
outsb
inc
sub
pop
mov
incb
fisubl
int3
popa
sbb
push
jb
cmp
add
dec
jo
imul
icebp
js
mov
out
dec
rcrl
not
cmpsl
stos
push
push
push
aad
cmp
filds
or
xor
movsl
call
mov
or
mov
jmp
jnp
mov
ds
sar
or
clc
pop
mov
mov
xchg
pop
fcoml
cld
imul
cld
push
fidivs
jbe
inc
jl
stc
mov
lret
stos
sar
fmul
es
hlt
sub
add
inc
jge
ret
inc
js
mov
insb
fimull
xchg
js
cmp
mov
inc
fs
sbb
test
lahf
sub
mov
mov
sub
xor
mov
dec
push
pushf
adc
movsb
arpl
jno
leave
loopne
dec
push
jecxz
repnz
mov
fs
das
addr16
repnz
and
sub
jmp
ljmp
insl
mov
imul
mov
xor
loop
mov
mov
fiaddl
lock
loop
jg
adc
lds
nop
insb
ljmp
mov
imul
in
adc
movsl
aam
repnz
lcallw
push
aaa
aas
sti
sbb
stos
or
je
add
adc
data16
jb
movsb
loopne
fnclex
adc
jne
movsl
enter
sbb
scas
push
insb
mov
fdivl
jecxz
test
into
mov
push
jno
divb
stos
dec
and
mov
push
out
scas
cs
arpl
push
js
xor
dec
sbb
insb
push
mov
fiaddl
pop
rol
inc
fwait
aad
xorb
push
cli
inc
add
pop
outsl
cmpsb
pop
popf
cmp
mov
and
movsb
add
addr16
push
sub
in
mov
adc
insl
pop
add
or
push
sbb
push
dec
mov
jle
imul
push
daa
pop
aad
dec
mov
mov
jb
push
mov
movsl
or
pop
negl
push
and
insl
xchg
pusha
inc
ffreep
cwtl
enter
jmp
je
jns
popf
fcomip
inc
xchg
inc
jae
shll
lds
adc
mov
idivb
outsb
mov
push
bound
or
xchg
imul
inc
xchg
int3
arpl
adc
xchg
cs
cmp
fnstsw
adc
push
mov
in
lods
clc
jbe
adc
adc
jno
mov
call
inc
idivb
xlat
ret
clc
sub
sti
jmp
sub
insl
rorl
dec
mov
sub
dec
leave
jb
loopne
and
push
stc
pop
xchg
bound
ret
mov
fwait
cs
mov
out
fwait
cmc
lds
mov
sbb
vminps
inc
push
adc
mov
mov
cmpsb
xchg
fnstsw
in
mov
xchg
xchg
sahf
and
cwtl
imul
push
xchg
ret
pop
subb
xchg
mov
mov
nop
and
ss
sbb
sbb
add
jo
xorl
jg
mov
sub
aad
fisubl
add
and
jg
pusha
mov
aam
cli
je
push
fidivs
adc
lahf
push
lea
rorl
std
fists
and
repz
and
outsl
lret
sub
mov
add
adc
lret
sbb
shll
insb
or
repz
sbb
mov
sahf
in
dec
loop
jmp
outsl
cmpsb
inc
mov
cmpsl
scas
fcmovu
pushf
iret
das
pop
movsb
cmp
repz
mov
inc
sbb
lods
pop
push
mov
jg
mov
ficompl
ret
or
xor
nop
pop
sbb
push
or
push
mov
int3
popa
sub
out
add
mov
imul
jnp
stc
mov
dec
mov
adc
xorl
push
repnz
arpl
stc
lcall
xchg
scas
sub
push
loop
mov
xchg
pusha
push
jle
jecxz
sbb
mov
jns
fwait
idivl
fstpt
ds
mov
or
icebp
aad
adc
mov
mov
int
sub
adc
lods
mov
or
andb
sarb
push
or
in
and
sahf
inc
lcall
das
sbb
jb
pop
xor
test
scas
xor
in
hlt
stos
icebp
cmp
js
mov
fnstcw
sbb
rcrl
pop
int3
dec
sub
stc
xlat
movsb
in
dec
mov
mulb
bound
icebp
mov
inc
mov
dec
sbb
or
cmp
cltd
mov
mov
xchg
sub
xor
jmp
dec
mov
xchg
xor
cmp
xchg
arpl
jno
dec
scas
or
mov
push
leave
sub
in
dec
or
lock
addl
push
movsl
inc
xchg
adc
leave
js
lods
fcom
out
xor
sbb
fisttpll
cmc
sbb
ljmp
or
pop
out
repz
mov
repnz
push
data16
xchg
shll
inc
dec
push
jg
and
and
cmp
mov
pushf
outsl
xchg
mov
gs
test
mov
movb
mov
add
icebp
push
mov
dec
cmp
push
imul
call
scas
in
icebp
xchg
jge
es
mov
mov
jne
ljmp
incb
or
adc
mov
xor
pop
in
aas
das
mov
enter
mov
or
sub
mov
adc
push
push
cmp
fisttps
lods
jo
pop
push
add
cmp
out
dec
les
pop
mov
js
inc
insb
inc
nop
mov
aaa
mov
push
dec
or
adc
clc
cmp
out
loop
dec
inc
adc
add
adc
out
iret
cltd
or
repnz
loop
ficomps
mov
cmpsb
xchg
xchg
cmp
insb
mov
ja
adc
scas
sub
mov
fisubl
adc
xchg
inc
daa
adc
rolb
pop
sbbl
dec
dec
in
sub
lahf
jnp
icebp
adc
stos
or
jl
cli
mov
adc
shrb
adc
rcll
push
stc
imul
loop
fidivs
scas
push
dec
adc
enter
xor
dec
inc
cwtl
test
outsl
lods
and
push
int
pop
in
scas
iret
cs
rorb
aad
mov
addl
mov
push
leave
clc
loopne
pop
jmp
mov
stos
xchg
gs
iret
jno
nop
add
test
fdivrs
fists
cmp
add
imul
mov
push
sbbb
xor
push
push
push
push
dec
xor
repnz
iret
loopne
dec
and
shl
or
xor
inc
ret
mov
jge
xchg
mov
mov
cmp
xchg
sarb
cmc
pop
sbb
inc
mov
jp
mov
sbb
push
testl
adc
xchg
jl
pop
dec
mov
pop
pop
shr
sbb
insb
data16
xor
push
push
add
test
dec
push
adc
je
bound
adc
mov
or
adc
in
xor
add
daa
or
ss
add
in
and
rolb
xor
imul
sub
movsb
lods
dec
add
cs
test
fwait
cmp
mov
inc
arpl
adc
cwtl
push
fldt
fdivs
push
xchg
imul
scas
cld
dec
push
add
mov
dec
jnp
push
leave
and
fs
pop
les
adc
jg
out
lods
nop
je
mov
sbbb
fnstenv
inc
inc
or
inc
cmp
xchg
mov
mov
not
add
mov
mov
mov
lahf
ret
cmp
js
lret
addb
sbb
add
idivl
loop
cmpsb
xor
xlat
int
fistpll
fadd
ljmp
adc
push
sbb
bound
mov
in
call
push
mov
ret
xchg
xor
jge
popa
sti
mov
sarb
or
aaa
je
cltd
xor
and
sub
push
test
dec
fadds
clc
jge
sub
adc
int
test
lods
bound
mov
loope
mov
mov
pop
ljmp
int
cmp
and
sub
sbb
mov
lea
aad
js
mov
lret
push
lock
xchg
fcmovnbe
arpl
out
lock
nop
ret
in
add
add
cwtl
test
in
arpl
sbb
mov
xchg
cs
js
into
test
ss
cmp
mov
sbb
jp
inc
sahf
add
out
cmp
clc
insb
pop
lret
cwtl
xchg
xlat
mov
cmp
daa
movsl
ljmp
push
adc
in
adc
sub
sahf
pushf
aaa
paddw
push
mul
jge
push
mov
into
into
fistl
jns
cmpsl
gs
jmp
lret
sub
mov
dec
fsubrs
loopne
test
dec
insb
jecxz
xchg
mov
sbbl
gs
xor
mov
cmp
stc
mov
shlb
xchg
dec
lods
mov
jg
loop
pop
cli
dec
xchg
insb
adcb
pop
in
inc
pop
lahf
pop
adc
lahf
push
pushf
push
xchg
sbb
xchg
pusha
cltd
xchg
mov
out
and
ja
pushf
push
cld
lcall
cmp
mov
xchg
data16
cmpsb
inc
or
mov
in
push
cmp
mov
xor
stos
push
or
clc
pushf
mov
les
mov
movsb
fs
insl
jl
mov
pop
pusha
lahf
sbb
xor
inc
mov
mov
add
les
xorb
xor
mov
out
dec
mov
aam
pop
pop
insl
ret
roll
orb
mov
pop
rcl
dec
adc
or
xchg
ret
gs
data16
in
test
xor
adc
fwait
jno
adc
iret
popf
mov
fisttps
adc
mov
gs
mov
jg
lahf
lcall
ret
aam
repnz
test
jns
push
xchg
cmp
pop
pop
mov
test
mov
xchg
ds
sahf
pop
cmp
inc
cmp
add
pop
sub
in
sbb
xchg
adcl
outsl
pop
xchg
dec
dec
clc
iret
test
lods
movsl
sbb
arpl
jae
rcrb
or
jg
jae
cs
addr16
movl
call
jg
scas
mov
dec
inc
lret
addr16
inc
sbb
cmp
jo
jmp
push
mov
mov
and
pop
jne
mov
cmp
push
push
ror
in
cmp
jns
pushf
push
js,pt
orl
fwait
cltd
cmp
jne
xchg
pop
jne
rorl
xchg
sub
mov
aas
add
jne
add
test
aam
jb
addr16
mov
mov
fnstcw
ret
into
aam
in
xchg
pop
aad
pop
adc
xlat
xchg
dec
lds
mov
inc
mov
test
push
fwait
xor
pushf
sub
sbb
ljmp
jl
aaa
push
push
enter
icebp
es
push
scas
in
fcoml
mov
jmp
hlt
adc
in
fiadds
jo
in
mov
xchg
sbb
mov
adc
popf
inc
cld
dec
movsl
push
mov
scas
cmpsl
jecxz
sub
hlt
sbb
push
dec
js
push
dec
xchg
orb
jg
shll
lea
popf
push
lret
and
jmp
cmpb
in
sub
jge
outsl
pop
call
mov
push
idivb
push
fisttpl
enter
sbb
xchg
movsb
pop
or
pop
mov
movsb
rorb
pop
push
mov
mov
in
mov
add
cmc
or
xchg
in
sahf
or
lcall
cmpsb
addr16
insl
or
mov
cli
mov
lret
sbb
pop
adc
sbb
lcall
mov
and
xchg
movb
xchg
sbb
mov
cmc
dec
mov
repnz
ljmp
adc
push
pop
sahf
adc
aam
mov
popa
out
or
mov
mov
push
add
xchg
std
out
movsb
add
stos
daa
jge
xchg
mov
mov
stos
jbe
rolb
and
cmpsb
call
xor
pop
jmp
cmp
repz
jl
push
fisttps
sbb
mov
pop
stc
js
cmp
sbbl
outsl
add
mov
mov
adc
jb
mov
outsl
loop
std
adc
sub
adc
mov
cmpsl
inc
ljmp
enter
pop
shrl
jns
loop
xchg
mov
sbb
fs
mov
repnz
pop
into
enter
mov
add
lods
push
and
jle,pn
mov
cmp
cmc
icebp
adc
lods
inc
push
std
xor
ja
jns
xor
cmpl
aad
push
jb
sbb
push
in
xor
lret
xchg
out
leave
adcl
and
es
jp
inc
ret
scas
rolb
adc
cmp
dec
cmp
jnp
pop
inc
mov
imul
rcrl
pop
loope
inc
scas
repnz
js
call
ljmp
jl
pusha
lds
out
dec
sbb
movsl
rcll
mov
push
and
jae
push
mov
jge
test
jns
sub
insl
or
sbb
cmpsb
mov
sti
imul
sub
mov
lods
mov
aaa
rolb
mov
imul
js
loop
imul
call
mov
sbb
sub
push
mov
mov
inc
dec
mov
mov
sbb
call
add
mov
fistpll
mov
mov
push
cmp
neg
and
mov
and
in
add
xor
test
inc
lret
adc
fdiv
jge
out
repz
mov
push
add
sbb
ficoml
or
xlat
pop
ja
inc
adc
arpl
or
sbb
and
mov
mov
lahf
sbb
sbb
test
xchg
nop
popf
xor
push
sbb
sub
jg
aaa
pop
mov
pop
xor
mov
cmp
mov
pop
pop
push
sub
xchg
fbstp
push
ja
xchg
mov
out
dec
mov
pushf
jg
lahf
int
clc
pop
lcall
ficoml
addr16
cmp
loop
push
clc
xor
ret
nop
enter
cmp
mov
gs
cmpsl
add
lock
psubq
fstpl
cld
pop
adc
aad
cmp
jp
jne
cmp
jge
mov
js
push
jl
out
fdiv
add
in
adc
sbb
adc
mov
stc
add
or
jo
jl
adc
inc
aas
int3
mov
push
std
sahf
call
data16
in
leave
jmp
arpl
and
sbb
into
imul
inc
cltd
xor
jmp
popf
cmp
mov
aad
les
hlt
push
sub
outsb
test
sbb
in
pop
xor
or
bound
movb
loopne
icebp
push
adc
mov
cltd
sub
dec
mov
xor
xor
xor
je
fnstenv
or
and
sub
or
mov
pop
sub
inc
es
lcall
outsb
cmp
lahf
or
fbld
or
cmpsb
mov
or
pop
add
adc
insl
insb
and
mov
add
sub
mov
jle
mov
jl
out
daa
jg
enter
jbe
and
fs
sbb
repz
pop
pop
outsb
ret
or
ja
lock
hlt
in
mov
filds
mov
jmp
fs
outsb
inc
sub
in
popa
icebp
cmp
lahf
scas
fldt
sub
jmp
popf
mov
or
inc
sbb
and
xchg
outsl
imul
jecxz
xor
movb
push
pop
sbb
inc
mov
mov
call
cld
push
dec
pop
lods
sub
pushf
mov
rcpps
push
cli
or
mov
jle
mov
xchg
add
daa
xchg
fldenv
iret
icebp
sarb
nop
movb
xchg
dec
jge
cmpsl
stos
cmp
aaa
fdivr
jge
add
ss
lods
adc
lock
lret
dec
pop
or
fdivrs
xchg
rcrl
loop
push
daa
mov
inc
xorl
out
pop
popf
pop
out
dec
insl
jl
icebp
cltd
sbbl
dec
inc
mov
add
out
andnps
test
push
xor
sub
jmp
outsl
das
rcr
or
js
loop
insb
dec
lods
lea
lret
sub
shl
in
mov
xchg
dec
rcrb
add
pop
mov
fstl
lcall
repz
cmp
lods
ret
fsubs
outsb
je
jg
out
dec
inc
add
neg
shlb
cmpsb
cmc
sbb
jp
ret
frstor
xor
xchg
and
lods
mov
insb
out
xchg
nop
fsubrl
push
push
dec
scas
ja
xchg
mov
or
push
add
pop
lahf
stos
inc
insl
inc
push
pop
mov
jl
or
out
sub
scas
shlb
mov
mov
pop
popf
lock
dec
and
add
pop
cmc
je
mov
mov
and
ss
mov
jl
jp
out
daa
cmp
out
loopne
inc
loope
aas
in
fisubl
xchg
popf
clc
cmp
fninit
jge
leave
push
jnp
lahf
enter
incl
loopne
jbe
inc
pushf
ret
add
jge
jge
punpckhbw
sub
out
pop
push
cmp
pop
mov
mov
cli
test
sbb
mov
inc
cmpsb
inc
pop
ljmp
lret
ss
sub
xlat
adcl
and
negb
mov
imul
pop
mov
and
call
mov
ds
push
cmp
sti
outsb
and
xlat
stos
or
and
out
clc
xchg
xchg
fwait
mov
outsb
mov
fists
jbe
pop
xchg
inc
iret
pop
fisttpl
or
mov
ss
mov
mov
ds
fstl
je
mov
pop
pop
mov
es
jl
adc
mov
push
dec
insb
mov
xchg
nop
cs
sub
es
int3
arpl
mov
aas
arpl
pushf
sbb
xchg
mov
and
push
xchg
mov
cli
mov
outsb
push
andl
loop
dec
fwait
jmp
dec
and
out
insl
mov
sahf
xchg
cltd
jbe
sub
adc
mov
mov
mov
jmp
push
dec
loop
insb
pop
je
in
xchg
pusha
jae
in
push
cmp
add
mov
cli
mov
jno
add
xor
pop
in
pusha
mov
movsl
mov
mov
mov
icebp
out
les
push
pop
stos
int3
scas
inc
mov
in
outsl
pop
cli
aas
pop
das
ffree
add
pop
jl
cmp
testl
sbb
movsb
cmpsb
adc
fwait
mov
stc
inc
push
lods
inc
fs
and
jmp
les
xor
jns
les
test
xor
lds
or
test
cmpsl
inc
jmp
mov
cmp
test
dec
gs
aad
outsb
fdivrs
lahf
scas
mov
inc
pop
adc
push
push
xchg
popa
sub
mov
jns
popa
mov
or
xor
jl
xor
imul
out
fsts
push
sbb
in
and
test
ret
lret
inc
push
jae
stos
or
test
nop
jo
addb
sub
ffreep
movsb
shr
jne
xor
adc
imul
pop
insl
ret
cmpsl
dec
in
push
stos
xchg
push
sahf
dec
cwtl
aam
mov
popf
and
add
ss
sub
pop
sbb
stos
inc
push
dec
mov
nop
mov
dec
enter
and
xchg
sub
sbb
repz
fnclex
leave
test
dec
jge
pusha
sub
xchg
pop
xchg
jmp
cmc
mov
in
test
nop
hlt
push
sti
mov
js
inc
andl
repnz
or
add
lret
jmp
and
test
movsl
xor
js
pop
test
xor
cmp
fsubrs
dec
lret
add
dec
insb
sub
outsb
les
or
adcl
imul
dec
rcrb
dec
jl
adc
mov
pop
stc
js
les
mov
movsl
dec
lods
orl
and
add
jae
rcrb
mov
jo
adc
imul
rorl
stos
fcoml
dec
rolb
mov
mov
movsl
push
cmc
mov
push
jbe
mov
outsb
pop
xor
pop
xchg
mov
inc
or
fwait
jb
dec
orl
mov
sub
mov
mov
push
add
push
xchg
push
dec
xor
mov
popa
dec
adc
fsubrl
sub
mov
xchg
mov
daa
and
jno
xchg
mov
popf
cmp
in
dec
jmp
jp
cs
fistpll
jnp
sub
dec
lahf
mov
stos
in
lds
push
adc
mov
or
inc
sbb
incl
nop
cmp
pop
mov
fimuls
mov
pop
aam
jbe
xor
pop
mov
xor
xor
arpl
ret
push
in
std
cmp
mov
sbb
scas
test
push
sub
test
lret
inc
xor
les
push
sarb
and
push
hlt
test
outsb
mov
jmp
adc
xor
movsb
xchg
add
sbbl
insb
lods
or
jae
mov
movlps
push
nop
adc
dec
sar
dec
pop
inc
scas
lea
fcmovu
in
and
lea
fpatan
push
filds
xor
or
pop
add
pop
cmp
jo
out
fstps
sahf
dec
scas
mov
out
sbb
dec
in
jae
xchg
mov
stos
push
push
je
jbe
mov
push
gs
lods
dec
lret
cld
fisttps
mov
jo
adc
cmp
push
dec
into
fwait
push
mov
cmpsb
mov
cmp
dec
cmp
xchg
inc
adc
jno
into
mov
aas
movsl
mov
adc
sub
mov
test
mov
mov
out
stos
mov
jge
cmp
out
pop
daa
jle
lret
adc
push
mov
jp
or
or
adc
and
jge
jmp
inc
sub
xchg
lret
rolb
jmp
cwtl
inc
scas
and
and
daa
jns
inc
push
sub
jb
iret
gs
ret
sbb
daa
cmpsb
stos
cwtl
and
push
flds
inc
jl
flds
mov
lock
jg
lds
outsl
das
insl
dec
or
jb
inc
mov
fstpt
or
cmp
jp
inc
push
xor
cmp
xor
inc
dec
sbb
mov
out
fsts
push
mov
pop
in
lahf
je
xchg
lds
adc
pop
addb
xor
cmpsb
jo
xor
mov
je
cmp
add
rep
adc
int
sub
dec
mov
cmp
inc
add
into
inc
clc
mov
push
das
pop
sub
addl
pop
mov
call
mov
cmpsl
inc
cmp
jnp
and
fs
sbb
clc
pop
out
xchg
gs
jmp
adc
inc
add
dec
dec
cmp
cli
add
xor
scas
cwtl
cmp
pop
sbb
sbb
mov
or
lods
jge
lods
les
xchg
adc
jbe
jge
cmp
pop
sbb
andl
mov
xor
movsb
repz
pop
mull
cmc
pop
jb
divl
pop
hlt
add
and
addr16
mov
xchg
xchg
sbb
cmpsb
xor
pop
inc
jecxz
mov
mov
dec
or
icebp
rcrb
fimuls
cwtl
xorb
into
mov
add
jne
inc
jl
jge
jb
out
test
dec
jecxz
lods
push
mov
sti
test
rcrl
xor
arpl
xor
dec
outsl
push
jp
push
push
and
adc
and
xor
pop
dec
data16
out
mov
lds
lahf
daa
stc
lret
xchg
cld
into
repz
test
andb
xchg
xchg
jg
mov
insl
adc
icebp
mov
inc
adc
pop
adc
add
cmp
hlt
sbb
mov
xlat
sub
repnz
popf
jge
sti
repz
in
add
adc
lahf
mov
or
dec
ror
jns
or
sti
mul
addr16
test
es
mov
and
dec
adc
mov
sbb
mov
xlat
rclb
movsl
mov
je
stos
dec
popa
call
xlat
push
or
dec
out
in
fisttpll
jns
jmp
xor
rclb
mov
clc
call
sbb
in
push
data16
test
mov
dec
mov
gs
into
jecxz
add
leave
adc
xor
stos
loopne
mov
or
leave
aad
push
frstor
and
jns
or
or
lea
jle
mov
ret
int3
xor
fs
arpl
push
pop
movsl
mov
sub
add
test
mov
add
test
cmp
scas
stos
push
or
adc
das
xchg
adc
adc
add
sbb
and
mov
adc
mov
pop
lahf
push
mov
mov
jp
xchg
xor
mov
fidivrl
movsb
mov
pushf
fwait
mov
xorb
out
add
ret
lods
dec
scas
inc
mov
mov
cmpsb
inc
and
jo
or
jbe
les
movsl
subb
fisubl
incl
push
dec
xor
gs
mov
inc
ficomps
and
loop
or
inc
iret
add
cld
cli
ds
cwtl
stc
mov
lods
les
loop
mov
faddl
adc
cmp
push
ljmp
loopne
jae
mov
imul
enter
paddw
dec
fcmovne
xchg
push
add
pop
in
lock
add
dec
test
int3
xchg
xchg
cmp
pop
mov
xor
sbb
inc
mov
das
sbb
sub
outsb
add
es
hlt
push
ret
inc
stc
jecxz
dec
sti
mov
imul
or
cmp
push
cmpsb
test
hlt
aad
push
add
fists
sbb
cmpsl
inc
adc
shll
xchg
lea
cltd
add
jae
inc
xor
jle
fcmovb
xchg
test
xchg
dec
lahf
and
sub
jge
sbb
jp
ret
sbb
pop
lods
test
fs
jne
lret
out
mov
mov
das
add
subb
adc
push
xchg
sbb
je
cmpsl
xchg
jp
sbb
sub
pushf
int3
fwait
shl
lods
lds
fcomip
and
test
fadds
jp
lret
xor
out
movsl
sti
add
jmp
adc
int
test
out
in
xlat
loope
mov
jne
sbb
cmpsb
adc
xchg
dec
sbb
pop
les
jle
movsb
mov
xchg
xchg
ja
ljmp
dec
hlt
cmp
sti
mov
xchg
rcll
push
cmp
popa
jb
call
test
and
jl
push
test
stc
leave
int
mov
mov
push
test
or
pop
fwait
and
lret
ljmp
and
jbe
int
jle
xchg
pop
mov
cs
rcrl
mov
subl
cld
inc
or
nop
arpl
mov
xchg
mov
cmp
or
ds
push
neg
mov
stc
xor
lcall
loop
outsb
inc
mov
add
xor
and
outsl
mov
or
cmp
jns
push
mov
mov
inc
push
ret
das
fimull
xchg
and
leave
push
jns
int3
sub
push
mov
push
push
mov
inc
push
repnz
sub
outsl
cmpsb
stos
inc
and
dec
lods
xor
aaa
mov
mov
and
add
aam
xchg
or
fadd
je
loop
pop
push
jb
jg
xchg
sbb
pop
inc
pop
pop
jl
call
imul
sub
aas
lock
or
push
shl
rep
insb
mov
sbb
mov
jns
sarl
je
mov
das
jle
rorl
sbb
prefetch
jmp
negb
cmp
dec
cmp
sbb
and
push
inc
into
imul
lcall
pop
sbb
lcall
adc
movsb
sbb
pop
movsl
lods
xor
dec
mov
dec
stos
jl
lods
pusha
xor
pop
test
in
xchg
pop
inc
lods
call
cmpsl
mov
adc
or
inc
imul
shr
into
and
xchg
jno
xlat
ret
xchg
bswap
adc
add
outsb
cmp
adc
cmp
add
add
mov
dec
pushf
daa
imul
xchg
push
jo
pusha
jo
mov
pop
adcl
aad
push
mov
stos
sbb
sbbb
cmpsl
mov
mov
cmp
movl
inc
call
push
and
lret
repz
xchg
xchg
jno
pop
mov
push
outsb
insl
mov
inc
dec
mov
adcl
jmp
iret
inc
cmpsb
add
test
pop
jns
mov
or
mov
ja
lahf
sbb
xor
clc
push
bnd
mov
mov
es
jbe
jg
sahf
fwait
pop
xchg
mov
jno
ficoms
ss
data16
sbb
mov
cmp
or
mov
xchg
orb
xor
jmp
push
into
xchg
arpl
xor
js
lods
nop
inc
xchg
sub
outsl
mov
pop
add
popf
or
js
mov
xchg
cmp
cmp
shr
sbb
sbbl
adc
mov
inc
adc
adc
addb
test
fists
xchg
ss
dec
mov
nop
pop
cmp
cmc
shlb
cmp
in
add
or
stos
jns
mov
xchg
adcb
sarl
ss
scas
loope
jl
insl
xor
fimuls
lret
pop
jmp
insb
ljmp
inc
pop
and
mov
sahf
add
daa
adc
aas
lock
mov
out
sub
inc
scas
xor
sub
adc
mov
push
or
shll
lret
push
pop
pushf
inc
out
test
sub
mov
mov
lea
adc
mov
push
push
mov
push
lret
xchg
jo
cltd
ds
rorl
scas
jp
mov
ljmp
sti
adc
sbb
dec
dec
adc
data16
and
jecxz
and
xor
or
jmp
test
call
idivl
insb
ffreep
insb
pop
jecxz
lcall
jmp
or
mov
leave
inc
in
xchg
mov
pop
pop
adc
pop
sbb
leave
fs
jb
dec
xchg
repnz
push
scas
push
psubusw
lret
push
cmp
inc
xlat
movsb
aaa
or
adc
fsubrp
xor
inc
push
imul
or
mov
jmp
scas
push
mov
mov
sbb
mov
inc
jo
xlat
dec
mov
inc
xor
mov
add
jb
and
jecxz
stos
push
loope
xchg
pusha
dec
test
rcl
mov
popa
jnp
popf
xchg
test
dec
and
jmp
xchg
pop
dec
mov
mov
fisttps
jne
repnz
jp
mov
cmp
dec
mov
jecxz
js
lcall
xchg
jle
mov
repnz
push
adc
dec
test
int3
icebp
add
pop
cwtl
scas
jge
jno
jl
sbb
mov
pop
add
test
dec
mov
rolb
push
xor
lds
mov
mov
adc
out
dec
push
pop
push
cmp
popf
xchg
icebp
sbb
cwtl
push
pop
add
enter
popa
pop
sbb
and
ljmp
xor
ss
outsl
pop
mulb
pop
popa
shl
push
es
ss
int
cwtl
pop
sub
insl
jl
mov
push
clc
xchg
daa
mov
es
or
pusha
mov
aad
repnz
scas
and
leave
jae
jae
or
hlt
ss
cmp
aas
fs
std
cmp
mov
push
xchg
psadbw
jbe
repnz
cmp
xchg
out
pop
xlat
inc
jmp
pop
jns
lret
fistl
adc
push
je
xchg
subb
inc
dec
pop
sbb
lods
cmc
cmpsb
xchg
jmp
xchg
imul
pop
out
pop
mov
pusha
lret
test
push
adc
mov
and
adc
pop
pop
jmp
mov
push
xchg
daa
cmp
push
mov
adc
stmxcsr
mov
out
js
out
inc
mov
pop
xchg
xchg
xchg
popa
fimull
enter
mov
repz
test
out
push
sub
test
or
mov
jle
pop
and
xchg
popa
pop
cmp
test
jo
int3
or
ret
and
call
cmpsl
lcall
into
and
aad
jge
insl
mov
leave
dec
out
in
mov
pop
and
aam
cmp
adc
lock
imul
les
pusha
mov
jecxz
rorl
rcr
inc
out
js
xchg
in
dec
sti
cmc
int
push
adcb
xor
loopne
int3
and
mov
pop
jbe
or
stc
nop
pop
lcall
lret
loop
inc
repz
jle
das
inc
pop
lods
jb
jnp
dec
jmp
out
pop
or
mov
xchg
int3
cmp
cmp
sub
pop
pop
movsl
repnz
push
fs
cmp
arpl
or
testl
cmp
mov
sbb
xchg
xchg
ja
push
cmp
rcl
ror
sbb
jle
pushf
xor
test
iret
fistps
decb
pop
rorb
rorl
jne
je
cmp
hlt
hlt
cmp
jb
test
dec
jmp
rolb
orb
je
movsb
pop
inc
shrb
cmp
xchg
add
adc
push
push
mov
dec
repz
sub
stc
inc
into
and
fs
mov
rcll
cld
pop
mov
dec
jge
jle
mov
sbb
or
test
inc
pusha
jle
sarb
cli
mov
or
daa
rclb
mov
pop
jecxz
adc
fsub
repz
mov
mov
or
push
adc
push
xchg
push
scas
aad
repnz
jecxz
stc
lret
mov
xor
dec
out
mov
test
mov
gs
flds
xchg
jo
cli
xor
jge
and
mulb
jnp
loopne
movsl
imul
aam
xor
dec
mov
xchg
int
lock
and
add
repnz
in
mov
dec
xchg
shll
lahf
imul
jb
add
pop
popa
out
daa
mov
cmp
inc
mov
pop
fs
cmc
out
xor
lahf
push
lret
repnz
pop
test
test
mov
fs
adc
mov
icebp
xchg
mov
push
sub
push
stc
daa
icebp
out
jns
test
lahf
inc
imul
mov
cmpsb
pop
pusha
mov
xchg
jb
cmp
mov
and
xchg
ffreep
jno
fs
leave
stc
inc
sbb
dec
mov
clc
sub
pop
shll
iret
in
leave
cmpsl
test
sqrtps
in
ljmp
dec
xlat
les
dec
pop
adc
jnp
in
inc
jg
add
arpl
iret
icebp
ret
rcrl
dec
cmpsb
add
sub
xor
sub
jge
insl
mov
inc
xchg
lock
jp
cmp
inc
dec
lods
es
pusha
dec
addr16
leave
inc
and
push
sahf
movsl
cmp
loopne
fldenv
cli
sbb
scas
mov
xchg
mov
jns
push
leave
cld
roll
mov
lahf
jge
shll
ret
aad
aaa
mov
shll
jb
jne
pop
jmp
mov
mov
push
pop
cwtl
push
loop
sub
push
pop
scas
pop
push
sbb
push
lock
and
mov
cmp
notb
cmp
jae
pop
inc
pop
in
mov
jl
dec
mov
cvtpi2ps
fnsave
xor
test
out
inc
dec
out
out
fs
mov
mov
imul
and
inc
leave
mov
shrl
mov
adc
mov
or
push
adc
aam
fsubrl
and
movsb
add
push
imul
jmp
mov
lock
fistps
xor
jbe
push
dec
cwtl
sbb
in
aad
aas
jb
cwtl
cmc
fs
js
pop
fdivl
push
cmp
jnp
inc
bound
pop
xchg
or
sbb
sbb
aam
es
test
and
adc
xchg
adc
ss
sbb
xor
xchg
pushf
lea
test
ss
and
sarb
stos
aad
dec
idivl
adc
arpl
mov
mov
pop
add
je
and
lret
lcall
adc
and
xchg
loopne
mov
push
add
adc
cmp
mov
jns
xchg
xor
mov
xchg
subb
mov
loope
pop
aaa
movsb
rcrb
mov
aaa
mov
jge
aad
call
insb
mov
sbb
das
xor
pop
shll
or
ds
and
cmp
pop
jp
jle
adc
jns
jbe
push
paddq
jmp
cmp
push
cs
xchg
ljmp
sbb
xor
xchg
loope
pop
out
negb
mov
repnz
inc
xchg
push
push
mov
mov
jecxz
arpl
addr16
xchg
xlat
mov
xchg
lock
rclb
cld
jb
xor
push
cmp
and
loop
cmpsl
mulb
je
inc
test
push
and
insb
int3
rcrb
xchg
inc
inc
cmc
xor
jae
adc
mov
scas
adc
out
in
ds
or
xchg
in
push
push
enter
scas
mov
call
mov
hlt
lods
mov
cmp
cltd
mov
lahf
push
das
insb
xchg
insb
mov
clc
enter
insb
cmp
sub
sub
push
in
pushf
adc
push
jnp
loopne
sbb
rolb
cmpl
insb
sbb
jne
xor
clc
pop
and
int
jno
test
and
sbb
sbb
sub
push
mov
adc
shrl
in
subb
add
shrl
fldt
jp
add
or
arpl
xchg
scas
aam
test
inc
xchg
das
jae
xor
pop
adc
hlt
dec
jbe
xchg
incb
xchg
inc
add
xor
imul
xchg
dec
dec
data16
push
xlat
in
ljmp
jp
xor
xchg
jno
cmpsb
or
pop
adc
or
add
adc
iret
imul
cwtl
gs
push
lea
adc
mov
les
pusha
lods
int3
iret
add
and
sub
test
cmp
jns
mov
cmp
mov
adc
xchg
fisubs
loop
sub
xlat
sub
adc
jecxz
mov
popa
push
mov
cmp
pop
rorb
insb
pop
mov
adc
mov
call
daa
je
mov
cli
add
pop
fwait
lea
or
push
dec
add
cli
dec
mov
xlat
dec
lds
jno
cmp
in
movl
or
das
ja
pop
xchg
xchg
sbb
sub
ret
xor
mov
push
adc
mov
and
jno
pmulhuw
filds
pop
stos
pop
shlb
push
mov
push
or
lret
pop
adc
add
mov
mov
js
ret
fdivs
mov
js
lods
popf
cmp
sti
mov
into
les
lods
enter
dec
imul
sub
sti
add
lock
xchg
pop
int
cltd
shrb
repz
xor
gs
fs
cmc
fstpt
sbb
sub
in
ss
mov
sbb
jnp
insb
insl
mov
or
cmpsl
xor
mov
lret
ja
idivl
add
mov
mov
movsb
loopne
push
rcll
fcompl
mov
fdivr
xchg
hlt
mov
cmp
mov
fisubl
xchg
sti
pop
popf
xchg
adc
mov
push
cmp
sub
lahf
or
call
push
mov
ds
addr16
dec
pushf
and
out
push
gs
popf
enter
cmc
ss
call
xchg
dec
cmp
xchg
cmpsl
and
lret
loop
hlt
dec
ss
enter
adc
mov
fdivrs
aad
aas
push
movsl
je
adc
xor
mov
cmp
or
enter
push
jl
int
stos
movsl
xor
xor
hlt
inc
bnd
iret
cld
hlt
dec
sub
in
mov
scas
jb
xchg
mov
dec
nop
pop
out
mull
push
or
ret
sbb
dec
ja
jb
xchg
push
dec
iret
add
pop
xchg
sub
push
fs
arpl
or
pusha
add
xchg
push
jae
int3
jnp
in
idivb
inc
pop
xlat
adc
cli
out
shll
sbb
jmp
cli
leave
pop
mov
fsubp
dec
jg
inc
jmp
loop
jnp
inc
stc
and
pop
cmpsl
pusha
rorl
cmp
es
mov
rclb
aad
jne
xor
mov
arpl
test
lea
data16
pushf
hlt
rclb
jae
push
mov
insl
xor
pop
push
movsl
data16
cmp
std
scas
in
push
jecxz
cld
inc
in
ja
cmp
int3
out
add
fs
outsb
adc
xor
mov
cmpsl
test
push
adc
arpl
xor
mov
rorb
iret
or
sub
sbb
jae
xchg
nop
sarl
test
push
daa
dec
mov
mov
sbb
xchg
pop
dec
jl
lods
call
daa
add
mov
sbb
insb
dec
fdivrp
int3
fxam
add
lret
mov
jno
imull
mov
outsl
fisubrl
push
lea
cltd
dec
and
mov
inc
inc
mov
push
aam
inc
cmc
cmpsl
arpl
call
je
pop
or
mov
jno
cmp
lcall
xchg
jge
fs
xchg
and
ljmp
jne
mov
cs
subb
daa
popf
jp
sub
cmpb
sub
sahf
cmp
icebp
ficomps
sbb
movsl
lahf
sbb
dec
les
inc
mov
xor
sbb
adc
sbb
or
fs
leave
insl
sub
outsl
outsl
cld
movsl
bound
arpl
fstpl
and
aad
jmp
nop
in
notb
insb
pop
lods
xor
add
xlat
jbe
std
xchg
mov
neg
inc
into
cli
xchg
sub
add
add
pushf
inc
gs
adc
mov
xor
out
ret
imul
ret
pop
ja
add
nop
fs
jg
out
xlat
jmp
jge
pop
into
lahf
imul
pop
push
adc
mov
push
xor
stos
or
dec
orl
jnp
jnp
cmp
mov
scas
xor
mov
xor
cmp
inc
mov
cmpsb
inc
lret
inc
lds
dec
or
insl
outsl
sub
data16
dec
notb
mov
adc
mov
or
jns
or
das
int3
cmp
mov
mov
pop
xchg
add
push
jle
jno
cmp
adc
inc
cmp
dec
daa
popa
jl
and
jbe
lods
inc
lea
push
imul
inc
pop
mov
add
adc
int
stos
fistps
mov
mov
push
jae
sub
mov
xor
ret
add
lods
sti
xor
imul
dec
gs
daa
mov
dec
addr16
xor
outsl
push
pop
push
jo
ljmp
adc
subb
mov
cltd
bound
sub
sbb
xor
sbb
sti
xchg
mov
insl
rcl
icebp
orl
xchg
mov
and
cmp
mov
dec
push
xchg
imul
pop
insb
ljmp
inc
ficoml
sbb
mov
jge
mov
push
pushf
lds
sub
jg
mov
xchg
pop
jp
add
xor
lock
push
push
pop
pushf
lods
fstl
push
mov
jecxz
sub
sub
daa
cmp
sbbl
push
notb
push
daa
ljmp
aas
mov
pop
jge
cmpb
mov
and
push
dec
inc
adc
outsl
push
push
adc
mov
mov
mov
xor
push
sbb
mov
mov
scas
and
pop
roll
test
fcomps
cmpl
cmp
mov
imul
popf
sbb
movsl
add
add
ja
ds
pop
in
clc
lock
mov
in
enter
cmpl
stos
xchg
mov
lea
mov
js
and
lds
jns
cltd
mov
push
jp
les
and
movsl
int3
sbb
movsl
aad
fwait
rcrl
into
lret
popa
dec
rcll
xchg
gs
iret
push
jae
mov
cmpl
mov
pop
enter
jno
bound
inc
sbb
jne
movsb
mov
sar
and
std
roll
ja
add
lods
lods
lock
xor
dec
jne
mov
arpl
and
into
out
push
insb
das
sub
jo
int3
sub
je
push
mov
leave
js
mov
je
adc
mov
ja
inc
pop
popf
xor
cmpb
lret
push
fisttps
adc
cmpsl
xor
lock
jge
fwait
push
mov
shll
lock
sub
pop
aaa
fs
sbb
fdivrs
dec
out
add
fwait
xor
decl
jmp
xchg
int
sub
sbb
aas
mov
in
test
jns
gs
or
dec
popf
js
mov
pop
mov
mov
addr16
loope
add
outsb
xchg
ret
ja
movl
sbb
mov
inc
lock
cs
dec
cmp
push
pop
clc
js
and
adc
and
push
jns
out
cli
push
movsl
xchg
lds
cmc
testb
jb
loope
out
pop
ret
rol
mov
and
xchg
mov
push
jge
pop
push
sahf
mov
adc
sbb
cmp
aad
lcall
lods
push
lret
jp
mov
mov
cmc
inc
aam
mov
jmp
movsb
into
push
out
sbb
imul
dec
push
cmp
adc
jmp
pushf
dec
xchg
mov
cld
shlb
stc
mov
iret
bound
inc
sbb
jecxz
mov
adc
in
iret
leave
aam
aaa
push
sub
dec
in
stc
jle
jbe
xchg
jb
imul
in
xor
mov
fisttpl
sub
stos
pop
jmp
test
out
xchg
rcl
cmp
in
js
sbb
dec
cmp
orl
inc
xchg
inc
cmp
aad
and
lahf
pusha
or
jg
addr16
shlb
cmp
repnz
mov
xor
mov
iretw
sahf
mov
adc
lods
add
mov
xor
inc
sub
daa
cmp
arpl
xor
jne,pn
and
pushf
mov
add
std
jmp
inc
lods
cmp
dec
xchg
cmp
push
dec
and
inc
sbb
outsb
mov
pop
and
xchg
out
push
cld
fs
imul
fs
insb
jns
icebp
fs
jb
or
in
movsb
lret
and
test
or
sbb
dec
rorl
xor
sbbl
cwtl
xchg
lods
inc
hlt
push
cmp
xchg
sub
push
rclb
mov
adc
adc
std
cmc
inc
data16
xor
adc
enter
jne
aas
lds
sbb
sbb
mulb
ss
sbb
sti
sbb
push
or
fptan
push
shrb
xor
outsb
and
xchg
push
rol
roll
lods
cwtl
cmpb
inc
cltd
nop
add
mov
xchg
aad
mov
xchg
ret
fisubrs
vsqrtss
repnz
or
les
es
push
dec
aas
push
dec
push
mov
cmp
pop
movsl
dec
dec
push
out
fists
aas
imulb
lds
leave
add
jp
leave
mov
mov
cmp
aas
rcrb
rorb
aaa
cmpsl
fwait
jno
sahf
repnz
incb
mov
jbe
sbb
rcll
sti
call
sub
push
test
xor
add
ds
jmp
mov
leave
push
mov
repz
pop
inc
cmp
push
and
lret
lcall
movsb
icebp
es
sbb
icebp
incl
add
inc
fs
ficomps
popf
jne
lods
enter
rolb
fs
cmp
shlb
xchg
int3
call
cmp
lods
cmpsb
iret
sbb
scas
cmp
sahf
lock
sub
ljmp
js
cld
imul
lea
xchg
ret
fwait
jbe
adc
shrl
push
xchg
pop
cmp
push
mov
xor
inc
mov
sub
sti
mov
ret
add
pop
sub
jle
mov
add
dec
mov
mov
roll
xor
dec
sub
in
call
arpl
aas
fnsave
lods
or
out
loope
jle
or
mov
pop
out
cmp
inc
or
into
xchg
cwtl
mov
int
pop
mov
pop
call
mov
test
cmp
dec
inc
cmpsb
outsl
jnp
sub
xchg
repnz
jnp
adc
jg
push
js
sub
adc
inc
xchg
add
sti
sub
adc
dec
inc
pop
out
push
ss
pop
cmp
leave
aad
int
push
fildll
into
adc
scas
adc
mov
mov
repz
insb
cmp
pop
dec
pusha
popf
and
xchg
test
cltd
mov
lock
jp
dec
fs
dec
dec
in
cwtl
aad
outsl
enter
mov
out
jmp
mov
lret
inc
aaa
lcall
out
cmp
ret
sub
dec
mov
jg
xchg
cmp
cmp
sbb
pop
dec
xchg
hlt
outsl
arpl
outsb
mov
out
sub
pop
mov
orl
mov
xchg
cltd
fwait
loopne
or
mov
pop
cld
outsl
addr16
pop
mov
pop
jae
xor
sub
nop
add
pop
mov
icebp
fsubl
lods
test
pop
cmpsb
xchg
sbb
mov
stos
inc
dec
aad
popw
mov
sub
dec
dec
cmp
mov
std
movsb
stos
or
lods
sub
cmpsl
push
dec
pop
mov
pop
pushf
dec
sub
mov
das
adcb
ror
push
lods
out
xor
mov
and
cmpsl
nop
mov
sub
cmpsb
jae
sub
fisubrs
xchg
add
mov
aaa
and
mov
movl
inc
cmp
sbb
insb
adc
and
mov
lahf
sbb
xchg
cltd
imul
jae
cmp
mov
sub
jecxz
mov
and
xchg
mov
mov
int3
cmc
mov
sub
sbb
rol
fisubrl
testb
imul
pop
dec
fildl
lods
aas
adc
cmp
push
add
xlat
pushf
jp
dec
insb
rorl
pusha
outsb
out
dec
and
pop
jecxz
lods
inc
push
adc
sub
punpckldq
and
xor
cli
xchg
frstor
out
pusha
dec
nop
sti
jg
xchg
inc
lock
in
ljmp
jge
jae
add
or
sub
imul
cmpsb
in
loope
pushf
mov
mov
dec
int3
fadd
stos
pusha
adc
or
out
lcall
sub
push
data16
ds
push
out
or
xchg
add
inc
cltd
clc
mov
push
pushf
imul
push
inc
shld
mov
pushf
and
jg
jne
loopne
push
js
in
mov
cmp
mov
xchg
lret
movsl
jecxz
in
movsl
xor
mov
icebp
pop
and
and
shl
or
mov
fmuls
aaa
leave
mov
and
std
repnz
sbbl
nop
and
pop
decb
xor
aas
sub
inc
fsubs
inc
and
cmp
sub
test
es
sarb
ds
inc
sbb
sub
and
add
add
mov
pop
pushl
test
mov
pop
das
ds
jp
movsl
aad
adc
shrl
into
and
add
or
lcall
jns
cmpsb
push
cld
ja
stos
lds
inc
mov
add
pop
int
add
movsl
fsubl
jle
jp
push
sub
inc
movsl
mov
pop
push
pop
lret
xor
jae
ret
pop
arpl
sahf
inc
lret
adc
push
dec
sarb
and
aaa
imul
std
mov
cld
outsl
xchg
jp
mov
movsb
cli
roll
sub
jle
and
lret
negl
lds
data16
test
push
test
insl
lret
adc
data16
lret
or
add
adc
lret
push
jne
cli
sub
mov
xchg
fsub
dec
add
int3
ljmp
das
jp
js
loopne
xchg
dec
pusha
imul
xor
lods
mov
fbld
push
repz
mov
nop
lret
das
inc
dec
data16
or
mov
std
shlb
mov
fidivs
pop
mov
ljmp
mov
adc
push
xchg
mov
and
idivb
pop
xchg
fsubrl
add
mov
xchg
aas
shl
xchg
jmp
in
xchg
das
pop
add
loopne
dec
xor
mov
xor
aad
loopne
les
mov
js
inc
cmp
test
insb
in
ret
dec
or
rorb
cmp
add
inc
adc
popf
xchg
mov
enter
xor
push
test
sbb
cs
or
div
and
jecxz
cmp
js
xchg
sub
int3
rorl
mov
mov
and
pop
not
ds
lahf
dec
shll
test
add
imul
pop
pop
sbb
push
fstpl
mov
adc
pop
mov
mov
sti
lahf
push
push
loopne,pt
sti
sub
cmp
insb
or
scas
call
shll
mov
cmc
push
xchg
xor
sbb
jle
jl
arpl
jnp
out
sbb
jmp
xor
adc
js
cmpsl
out
and
fidivrl
roll
cmp
pop
and
bound
cmp
addb
and
xchg
sti
mov
push
int3
mov
jae
arpl
inc
out
or
les
push
popa
pushf
test
cwtl
adc
leave
mov
movsb
insb
insl
pop
and
adc
xchg
mov
clc
or
dec
mov
es
imul
add
lods
adc
xchg
dec
daa
es
pop
or
xchg
mov
fadd
mov
mov
sbb
pop
push
push
or
mov
or
cmp
jo
mov
or
pusha
mov
nop
mov
lock
or
and
mov
push
insl
inc
shlb
pop
ret
jae
mov
inc
xchg
xor
sbb
pop
icebp
jno
inc
push
arpl
cmc
and
jge
xlat
ss
icebp
inc
jae
or
xor
cmp
jmp
jecxz
loope
sub
pusha
stc
divb
jg
popa
xchg
cmp
ljmp
mov
pop
xor
fst
cmpsl
ret
adc
xchg
subl
dec
repz
pop
fcomip
xor
das
sbb
jge
xchg
test
and
pop
int3
popa
fcmovb
out
fadds
ja
or
mov
sbb
adc
es
cmpsb
pop
adc
dec
xor
push
or
scas
div
mov
push
lret
sub
arpl
popa
pop
std
loop
inc
and
aas
pop
mov
stos
push
xchg
lcall
idiv
and
fisttpl
cs
and
xchg
cli
cld
bound
aaa
out
bound
jmp
lock
mov
dec
imul
pop
inc
fldenv
dec
mov
adc
jecxz
lods
xchg
inc
xor
test
lret
add
inc
dec
xor
or
or
in
fisttps
xchg
lds
adc
call
add
adc
xor
mov
arpl
add
add
into
jo
push
inc
jg
lods
cwtl
jno
cwtl
dec
test
aaa
xor
pop
mov
push
and
mov
xor
rolb
popa
ds
sub
addb
xor
inc
shll
enter
aaa
int
pusha
pop
jns
imul
and
pop
fiadds
out
pop
adc
inc
in
or
lret
push
stc
outsl
movsl
add
les
mov
jle
popa
lea
mov
insl
adc
enter
xor
sub
les
cmp
or
scas
divb
enter
je
or
pop
mov
daa
int3
arpl
cmpsb
lods
test
mov
lret
mov
jb
rcll
jno
mov
xchg
mov
adc
lcall
or
rep
fucom
xchg
xchg
push
xor
scas
inc
sbb
sahf
mov
xchg
jbe
mov
out
pop
inc
inc
push
jle
or
push
mov
pop
aas
jle
adc
xor
mov
setbe
add
inc
mov
add
test
sbb
pop
addb
dec
dec
daa
je
popf
ja
jl
push
or
scas
fs
ljmp
outsb
push
ja
repz
mov
js
and
mov
dec
std
dec
pop
out
add
push
sbb
mov
dec
fsubl
mov
bound
cmpsb
movsl
mov
addr16
std
aas
pop
fstl
xchg
or
loopne
lret
inc
into
lret
mov
push
xor
es
stc
gs
and
pop
stos
les
jbe
sar
test
pushl
sub
push
or
jl
cmp
call
cld
jb
pop
push
push
push
out
xor
jnp
into
jns
jo
and
mov
jo
hlt
cmpsl
ret
push
pop
mov
xchg
add
cmp
mov
mov
loop
nop
inc
pop
insl
test
hlt
repnz
fadds
jo
pop
push
aaa
ret
cmp
scas
inc
insl
mov
fdivl
and
daa
xchg
jl
lahf
nop
loop
fs
lods
aaa
mov
jo
add
popa
movsb
and
xchg
fstpl
push
mov
jmp
xor
loope
out
bound
mov
xchg
push
cmpsl
movsl
cli
and
test
push
sarl
rol
popa
nop
xor
lahf
jb
lods
mov
aam
sarl
push
ds
mov
add
insl
gs
and
ss
xchg
out
test
mov
lods
sbb
add
inc
lods
movb
xlat
adc
adc
pop
mov
pop
cld
fistps
dec
cmp
push
lret
mov
jbe
and
add
mov
pop
ss
in
jmp
hlt
iret
dec
aam
cld
stos
insb
nop
dec
insl
loope
xchg
incl
add
fdivl
insb
aas
ficompl
push
adc
dec
call
or
loope
mov
cwtl
into
daa
adc
icebp
pop
sbb
adc
add
xlat
mov
nop
sbb
ret
dec
sahf
push
jne
cs
adc
jnp
shll
xchg
mov
icebp
cmpsb
fsts
sarb
pop
movsl
scas
roll
xchg
pop
dec
sbb
inc
les
pushf
loopne
mulb
std
inc
arpl
out
xchg
xchg
rol
inc
sbb
jb
dec
mov
add
popf
xchg
into
adc
int
stc
xchg
lea
testb
adc
cmpsl
out
jnp
inc
imul
dec
sbb
and
xchg
dec
push
stc
stc
outsl
xor
test
xor
xchg
call
cmp
pushf
push
jae
inc
cs
lods
xchg
jp
mov
incb
push
cmp
inc
in
jo
add
clts
mov
iret
pop
mov
imul
call
mov
mov
jge
pop
mov
clc
cmp
pop
push
mov
mov
in
pop
pop
mov
arpl
jmp
test
hlt
and
xor
mov
xchg
push
dec
and
lods
mov
pop
lods
movsl
sub
mov
shlb
into
ss
movsb
imul
jge
stos
call
loop
repnz
xchg
push
push
xor
push
lock
je
mov
adc
popf
out
add
fsubr
sbb
stos
push
add
jb
bound
sub
cmc
jp
or
sub
aaa
dec
or
data16
lahf
js
insb
add
test
cs
mov
aaa
scas
sub
in
pushf
imul
in
or
js
sbb
adc
mov
mov
pusha
jecxz
scas
xor
pop
js
int3
sub
xor
mov
pop
cmpsb
sub
in
aaa
in
insb
popf
movsl
repnz
es
sbb
mov
cmpl
aas
mov
sub
or
sub
call
std
pusha
popa
fwait
dec
cwtl
testb
adc
xchg
ret
cli
fmulp
cmpb
jno
xchg
cmp
inc
dec
in
cs
push
cmp
sbb
inc
dec
pop
pop
imul
pop
outsb
repz
dec
fidivrs
adc
stos
inc
arpl
dec
adc
dec
mov
ret
jp
test
adc
jne
sti
xchg
jmp
push
xor
xor
nop
in
mov
pop
popf
xor
or
inc
add
fstpl
push
repnz
jae
sub
adc
scas
sub
mov
imul
jo
into
clc
mov
clc
dec
mov
push
pop
adc
mov
push
mov
fabs
int
in
testb
sub
inc
sub
mov
push
mov
push
add
inc
pop
mov
or
jae
pop
into
cmp
out
push
ret
mov
sbb
push
stos
cmp
cmpsb
lods
sbb
sbb
mov
sub
mov
test
int3
dec
imull
lods
cmpsl
inc
jl
aas
mov
mov
jmp
cmp
push
xor
mov
push
es
daa
lret
mov
out
fdivs
das
daa
sub
or
je
xchg
addr16
sbb
jno
xlat
cmc
mov
repz
pop
cmc
into
or
std
das
gs
sbb
xchg
xchg
and
addr16
jb
outsl
add
int3
sti
jmp
mov
pusha
push
mov
cmp
cmp
mov
adc
or
xchg
jg
insb
cmc
pushf
mov
loopne
out
xchg
xchg
clc
test
lock
fimull
in
sub
ss
pusha
mov
dec
fs
cmp
dec
into
cmp
fisubrs
popf
repnz
pop
je
test
cmpsb
vpavgw
stos
aad
imul
mov
lcall
dec
scas
cs
xor
mov
ja
leave
testl
rorb
mov
jp
inc
shrb
adc
sbb
sti
lods
adc
mov
sbb
lret
int3
aas
mov
xchg
mov
lahf
mov
mov
inc
cld
mov
cmc
pop
insl
sbb
mov
test
test
das
rclb
pop
add
jp
cmpsb
into
sub
ja
lea
pop
in
jnp
lcall
jle
outsl
mul
sbb
cmp
in
cmp
mov
addr16
push
or
call
fcoms
insb
mov
xchg
xor
repz
fmul
add
jl
mov
mov
popa
push
imul
sbb
ljmp
mov
icebp
push
pop
mov
xchg
idivb
movsb
sub
in
push
pop
loop
pop
push
shrb
into
adc
je
in
or
pop
xor
and
jnp
fs
jmp
nop
scas
icebp
push
inc
cmp
es
cmc
pop
push
dec
xchg
es
arpl
and
js
sti
lret
mov
sub
mov
xchg
xchg
cmpsb
pop
lahf
dec
sub
or
ja
xchg
push
push
pusha
xor
dec
mov
les
sub
cmp
int
lret
imul
push
cmpl
cs
jno
iret
push
out
mov
loop
or
jl
mov
lds
mov
inc
pop
scas
dec
push
mov
cmc
pop
es
mov
xchg
insl
inc
repnz
adc
jecxz
out
repnz
add
fisubrl
jle
mov
mov
mov
pop
lahf
push
mov
aad
repnz
xchg
scas
sub
daa
lea
cmp
sub
lods
aas
and
jo
insb
mov
pop
xchg
mov
lds
cmp
gs
or
and
fadd
xlat
mov
out
and
or
pop
xchg
test
in
jg
xchg
xor
fstl
stc
nop
or
push
sbb
loop
roll
xchg
mov
movsb
nop
sbb
fdivs
fcomps
test
lcall
leave
sahf
out
idivb
xchg
dec
shlb
mov
fnstenv
cmp
jae
and
addb
dec
fstps
pop
stos
fisttpl
fstl
std
fsts
in
es
sti
jmp
hlt
xchg
jg
mov
lcall
ret
xor
call
out
add
nop
mov
cmp
lcall
xor
ficompl
pop
fisubl
sub
movsb
lock
lret
leave
adc
movsl
xchg
sbbl
adc
cs
fisttpll
and
mov
cmc
cld
push
push
imul
or
inc
add
mov
ficoml
dec
mov
or
and
rcrl
icebp
lahf
cmp
cmpsb
sti
pop
sub
int3
jp
ljmp
inc
push
push
scas
test
cmpl
pop
clc
scas
jno,pt
ss
fildl
mov
rcrl
push
std
ficomps
mov
movsb
test
sbb
out
jle
js
enter
dec
pusha
add
iret
repz
cmp
pop
adc
addr16
xlat
jbe
dec
icebp
xchg
pop
sbb
enter
xchg
into
mov
pop
and
pop
les
lret
sub
xchg
fsts
loop
mov
int3
xchg
sub
pop
pop
jno
xchg
inc
dec
inc
insb
jbe
sub
pushf
dec
aam
cwtl
add
dec
pop
pop
bound
dec
bnd
hlt
xchg
or
shll
xor
push
jle
movsl
in
leave
das
mov
inc
mov
stos
cmp
je
fcoml
push
jmp
dec
sub
mov
ret
outsb
lahf
cmp
fcmovbe
xchg
dec
les
test
out
mov
loop
in
push
adc
mov
mov
push
jae
ror
mov
jns
out
mov
cltd
into
jns
mov
sub
mov
pop
xor
test
leave
sahf
or
outsl
imull
sub
stos
in
into
mov
lea
lcall
ds
leave
push
jmp
mov
movsb
aam
adc
and
inc
or
fs
jnp
xchg
cmp
jmp
pop
ja
sbb
jo
mov
xor
out
fwait
lea
push
sti
pop
popf
mov
into
dec
out
sub
mov
mov
or
mov
cmp
in
add
push
je
pop
dec
jns
lds
or
xchg
add
dec
test
stos
in
aad
insb
mov
scas
notb
mov
mov
jg
and
mov
cmp
sub
adc
lret
aaa
ja
jl
pop
seta
cmpb
mov
bound
push
push
mov
lret
test
pop
mov
inc
mov
mov
mov
xor
pop
cld
je
daa
jl
in
mov
add
cmp
lret
push
stos
pushf
jne
jo
sahf
jne
fcoms
inc
push
pusha
mov
and
aaa
push
lahf
push
jno
inc
nop
call
mov
ljmp
nop
cmp
into
cli
popf
das
aas
je
xchg
jge
mov
loop
add
add
ficompl
mov
bound
cld
lods
sub
clc
iret
andb
fdivrs
int3
push
repz
xchg
sub
fstp
mov
pop
push
mov
scas
repnz
jge
imul
mov
xor
cld
sub
pop
xor
mov
push
shrl
mov
data16
dec
sbbb
sarl
cmp
add
mov
ljmp
or
into
cmpsb
adc
shufps
es
leave
pavgb
dec
and
ret
das
sbb
mov
sub
into
adc
cwtl
push
xchg
inc
ss
hlt
stos
fsubrs
push
mov
sbb
ljmp
lcall
inc
es
dec
out
fiaddl
mulb
mov
sbb
es
mov
adc
xchg
mov
mov
push
pop
cwtl
push
cmpsb
mov
into
jbe
fcoms
cmp
push
mov
jae
fistps
aam
subb
xchg
inc
shrl
push
jmp
cmp
lds
loopne
test
je
jb
adc
cmp
pop
mov
inc
roll
mov
and
cmp
sub
add
or
push
pop
js
and
icebp
mov
cli
mov
push
or
jecxz
lcall
and
cmpsl
dec
lahf
or
inc
and
pop
mov
push
int3
push
leave
jb
sbb
cmp
jmp
int
les
addr16
push
rcll
push
dec
xchg
jge
in
dec
aam
adc
pop
mov
sahf
repnz
mov
lcall
arpl
ja
pop
ret
push
pop
mov
sub
fbstp
xchg
mov
pop
sub
mov
fcmove
xchg
in
jbe
or
lods
es
cs
or
push
das
xchg
fwait
inc
out
adc
jp
jae
add
dec
jne
xchg
push
adcl
inc
jg
dec
inc
push
xor
bswap
dec
sub
stos
shlb
fnstenv
dec
cmp
pop
mov
insb
add
jbe
add
lea
pop
jge
and
adc
mov
sub
xor
jne
add
inc
xor
cs
push
in
cwtl
xor
xchg
sub
fsubs
das
in
jmp
push
ja
xchg
mov
mov
jmp
fldt
mov
xchg
mov
jmp
lods
cwtl
shll
fsubs
mov
xor
inc
sarl
xorb
push
fcomps
jne
mov
jno
mov
mov
rclb
push
mov
and
sub
js
and
jge
push
lcall
inc
cltd
lds
outsb
xorl
data16
lahf
mov
aaa
or
adc
jo
bound
lods
lods
ss
popa
mov
loopne
push
inc
clc
rclb
roll
lods
enter
nop
cmp
out
mov
xchg
in
outsb
push
push
dec
cmp
inc
ret
test
dec
or
sbb
xchg
cs
test
inc
xchg
pop
add
je
iret
lea
pop
fbstp
push
mov
mov
mov
inc
loopne
mov
pop
sbb
repnz
int3
jb
sub
movsl
repnz
out
push
sub
pop
and
pop
jno
fsts
cmpsl
stos
xchg
clc
cld
jne
inc
jbe
cmc
and
adc
mov
pop
scas
adc
movb
cmpsb
lds
hlt
insb
popa
stos
ds
subl
add
jbe
lds
aas
bound
imull
les
xor
das
cmp
dec
scas
cmpsl
mov
xor
adc
add
and
push
mov
outsb
xchg
sbb
mov
pop
mov
sub
inc
adc
jns
je
sbb
scas
and
data16
insl
sub
fistps
cwtl
cmpsb
dec
pop
cltd
lcall
mov
push
xchg
mov
inc
repz
add
push
aam
popa
fs
ss
add
cmp
stos
movsl
sub
jg
outsl
rclb
popa
lock
dec
int
into
dec
mov
sbbb
ret
push
lret
ficompl
movsl
jmp
orl
mov
cmpsl
insb
stos
cwtl
mov
stos
mov
mov
add
loopne
add
cmp
dec
xchg
add
into
or
bound
sbbl
jle
std
fwait
sub
cmp
lcall
add
xor
add
push
out
aam
push
cmp
jmp
mov
inc
mov
cld
xchg
cltd
add
pushf
ret
sub
jnp
cwtl
adc
jne
lret
enter
push
dec
cmp
int
xchg
push
push
mov
outsb
adc
lahf
mov
test
xor
cmc
sub
jno
mov
xchg
es
fsts
dec
cmp
shl
inc
shlb
sahf
leave
inc
sahf
cld
mov
push
clc
push
sub
pusha
pushf
and
gs
mov
push
add
xor
mov
xchg
dec
lahf
into
ficoml
bound
sbb
jno
and
adc
fs
imul
hlt
movsl
inc
movsl
add
add
cld
scas
je
push
or
lret
bound
outsb
sub
clc
rcll
adc
mov
cmp
add
and
icebp
imul
lret
inc
jne
lret
dec
pop
or
add
push
call
adc
lea
test
add
pop
into
or
mov
add
leave
sbb
and
mov
call
mov
mov
adc
out
mov
lret
cs
rcll
xchg
inc
decl
push
dec
mov
pop
jl
out
pushf
sti
xchg
jecxz
les
dec
add
jecxz
loopne
nop
pop
out
jg
lahf
fs
shlb
and
inc
add
xchg
xchg
adc
lret
lahf
leave
lahf
add
rcll
pop
mov
push
cmp
pop
jle
xor
lret
aaa
leave
pop
sbb
push
aad
test
cs
and
and
incl
inc
pushl
orl
mov
mov
ret
enter
mov
adc
aam
and
out
jmp
stos
mov
xchg
xor
stos
pop
insl
pop
fistl
fsubrl
ljmp
ret
lret
ja
les
xchg
jno
ljmp
cmp
call
hlt
sub
fwait
mov
inc
lds
lock
arpl
jbe
shl
adc
dec
add
test
inc
or
sub
jne
out
xor
cmp
dec
jmp
jno
jg
es
imull
add
loope
inc
mov
out
sub
lret
and
and
cmpsb
jge
jg
mov
sub
mov
sbbb
mov
push
push
push
mov
dec
and
push
cmpsl
cmp
movsb
push
pop
shrl
mov
in
xor
cld
out
sbb
imul
xor
icebp
jg
pop
hlt
shlb
cs
or
inc
ret
sub
pop
sbb
subl
mov
or
add
pop
xor
movsl
adc
or
popf
jns
dec
push
sahf
cmp
jmp
push
adcb
sahf
fsubs
clc
xor
jle
aas
mov
fdivl
or
ds
and
mov
add
stos
movsb
mov
stos
jmp
cwtl
jno
fs
roll
push
mov
movsl
ljmp
sbb
cmc
push
and
cmp
movsb
mov
mov
push
add
fucomip
adc
das
notl
test
push
aaa
lods
push
mov
fwait
push
fcoml
fildll
pop
shll
sbb
sbbb
nop
aaa
fs
mov
mov
push
nop
popa
mov
and
sub
gs
repnz
divb
sbb
fidivrl
mov
stc
lock
cmp
mov
dec
pop
push
jp
pop
sbb
shlb
repnz
clc
addr16
popa
ficoml
push
inc
loope
push
shrb
movsl
std
xor
nop
add
andl
sbbb
sbb
test
imul
mov
xchg
loop
push
add
mov
jg
cmp
mov
pop
clc
inc
mov
outsl
jae
sub
rorb
dec
mov
pop
sub
jmp
push
testb
iret
stos
xchg
lods
jge
jnp
mov
stc
mov
sbbb
test
inc
jo
xchg
repz
mov
mov
xchg
sbb
inc
add
ljmp
inc
inc
dec
mov
mov
add
imul
outsl
cmc
jnp
xor
xorb
add
pop
adc
mov
dec
push
fldenv
xchg
fdivrp
fildl
sub
push
sub
jmp
iret
push
push
push
or
jbe
push
subb
mul
in
test
mov
jb
xchg
cmc
xor
xor
es
xchg
jo
addr16
and
sub
es
cmp
imul
push
test
test
mov
xchg
arpl
mov
mov
movsb
sbbl
xor
cld
lcall
dec
loop
subl
add
sub
int3
das
jp
cltd
jmp
movsb
into
sub
lds
ja
inc
mov
dec
loope
cmpsb
push
popa
inc
fsubrs
xchg
add
pop
lock
push
add
das
lods
inc
mov
or
ret
xchg
push
inc
pop
mov
add
inc
lods
movsb
dec
popf
mov
cmp
adc
sbb
and
mov
test
lea
add
adc
inc
push
or
jmp
loopne
test
mov
sub
cmp
push
scas
push
test
jbe
test
andl
jbe
out
pop
cld
mov
cmp
and
imul
cli
jnp
add
jb
test
sub
std
sub
imul
int3
in
pop
mov
pop
lea
mov
fwait
adc
rclb
jo
or
push
loope
adc
sub
shlb
sbb
popf
mov
mov
js
adc
mov
rcl
test
push
adc
xor
xor
shll
out
out
fcmove
cs
cmpsl
push
cli
dec
lretw
ret
inc
in
push
mov
outsb
test
xchg
shlb
rclb
or
or
dec
stc
test
pop
ds
repz
push
add
xchg
fistl
xor
sbb
cmpsl
pop
pop
loopne
adc
push
test
ss
or
test
fistl
lods
adc
in
data16
add
pop
test
dec
sahf
fimull
cmpsb
pop
pushf
std
pushf
iret
jb
rcl
jge
cmpsl
pop
pop
or
aaa
or
mov
push
xor
mov
out
jnp
jno
call
mov
dec
setne
das
arpl
call
push
cmpsl
mov
adc
faddl
add
or
or
mov
clc
test
sub
fcoms
push
sub
pop
mov
adc
lahf
lea
iret
fsubrs
adc
xchg
mov
rcrl
mov
add
xlat
xchg
and
mov
mov
dec
iret
loop
rorl
sbb
mov
lret
sub
fstpt
insb
lcall
jae
pop
and
jl
mov
out
xchg
mov
into
sub
adc
idivb
lds
dec
ds
test
add
inc
lahf
in
in
sti
mov
out
mov
or
mov
decl
hlt
xor
pop
add
xor
adc
jl
jno
gs
push
sbb
in
movsl
fs
inc
dec
cwtl
sbb
outsl
xchg
shlb
shrl
lret
sub
stos
mov
jp
pop
dec
lret
aaa
jle
mov
jmp
or
jle
les
iret
loopne
stos
inc
mov
and
or
pop
add
ljmp
icebp
sbb
push
out
push
in
je
inc
iret
popa
dec
push
push
lret
sbb
push
push
pop
hlt
test
outsb
cwtl
jne
mov
pop
mov
lcall
pop
lods
xchg
stc
ljmp
adc
cwtl
sub
movsb
test
push
out
call
in
incl
popf
aaa
and
xor
xlat
push
sub
xchg
push
sub
xchg
cli
cmp
pushf
loop
insl
out
in
cwtl
cmpb
mov
pop
or
dec
mov
add
adc
xor
mov
ret
inc
imul
testl
mov
rorb
daa
fcompl
xor
and
dec
psrlq
cli
cmp
inc
iret
lret
push
cwtl
mov
pop
ss
sbb
cwtl
mov
out
sbb
xchg
jmp
imul
sarb
xor
add
pop
int
cwtl
xsaveopt
into
sbb
mov
loopne
mov
mov
mov
mov
shl
repz
xchg
adc
pop
jp
in
sub
scas
inc
and
enter
pop
push
gs
jae
pop
sbb
add
fs
mov
mov
pop
test
aaa
stc
lds
and
mov
dec
sbb
leave
std
push
mov
adcb
dec
jnp
jmp
popa
bound
mov
mov
sbb
push
cmp
adc
mov
idivb
cltd
or
inc
adc
or
pop
gs
xor
jno
and
xchg
js
or
nop
cmc
js
enter
xchg
cmpsb
in
popl
cmp
jle
rol
lods
pop
lahf
mov
das
sub
xor
test
mov
add
or
mov
jl
adc
pop
call
push
or
push
mov
mov
insb
pop
jb
inc
xlat
jmp
sub
mov
mov
dec
leave
inc
out
mov
sbb
adc
dec
icebp
jb
aaa
lahf
les
movsl
in
mov
roll
mov
xchg
ret
inc
mov
addb
mov
out
repz
mov
test
push
jg
dec
adc
imull
mov
dec
cmp
and
into
subb
pop
sbb
scas
cmpl
int3
es
push
cld
jno
and
and
outsb
fsts
sub
data16
xchg
dec
fidivl
divb
fsubs
out
xchg
lock
inc
mov
sahf
push
xor
push
out
fwait
jbe
push
pop
mov
push
ss
push
mov
shrl
cmp
mov
addb
sti
stos
jo
ret
das
ficomps
dec
fimuls
jnp
add
stos
xor
rcll
mov
and
cwtl
mov
inc
jbe
cwtl
cmp
dec
cmp
movsb
mov
notb
daa
bound
jo
fs
iret
loopne
mov
cmpl
and
jbe
and
popa
nop
mov
push
ljmp
sub
pop
xchg
push
fadds
mov
xchg
cmpl
sbb
lret
push
mov
cmpsl
dec
sbb
in
push
sbb
or
dec
outsl
mov
xchg
mov
sub
test
sub
mov
out
sub
jae
jg
or
repz
sub
lret
and
sbb
add
mov
stc
in
stos
repnz
fmul
cmp
test
push
cmp
shl
jp
and
add
mov
rep
mov
push
pop
mov
mov
sbb
icebp
test
int
iret
inc
repz
dec
outsl
out
cmpsl
sub
imul
pop
and
xor
out
lds
mov
jae
adc
add
cmp
fldenv
insl
mov
in
and
fisubrs
cld
addl
data16
inc
out
lods
mov
xor
dec
xchg
repnz
shlb
pop
movsl
lcall
repz
mov
xor
mov
pushl
scas
scas
push
sbb
cmp
push
imul
cmpb
fcom
sub
scas
int3
outsl
mov
icebp
xchg
ss
je
test
adc
dec
in
mov
clc
adcl
push
push
rorb
fdivrl
mov
pop
cwtl
mov
jno
mov
adc
push
shlb
mov
iret
test
inc
ret
sub
inc
dec
repz
add
sub
push
mov
es
lock
shrl
add
mov
ret
or
fcomps
xlat
stos
aam
call
sub
add
int3
repnz
sbb
push
outsb
hlt
hlt
cmpl
mov
lods
stc
pop
aad
jecxz
xchg
push
pusha
push
or
mov
cmp
jmp
jmp
mov
adc
ficompl
fbld
stos
or
in
std
inc
sub
jp
add
test
and
add
sub
jp
pusha
xchg
push
pushf
or
mov
dec
sidtl
shrb
mov
ljmp
pop
mul
test
pop
push
call
pop
andb
mov
inc
adc
imul
gs
shrl
rcrl
mov
jl
cmp
cmc
push
aas
rol
data16
and
push
pop
cmp
pop
mov
je
and
sbb
fsubrs
lret
lea
call
and
popf
lea
dec
pop
and
movsl
mov
and
dec
in
mov
ds
orb
ja
mov
xor
imull
sbb
sub
iret
mov
push
sti
push
cmpsb
xchg
out
repnz
jae
inc
lds
les
cli
pop
inc
lea
loopne
cmpsl
xchg
sbb
lea
cli
jge
cmp
mov
insb
mov
mov
and
fistl
mov
je
or
fimull
stos
or
clc
inc
or
jbe
dec
test
cmp
fcoml
inc
push
pusha
les
call
sbb
mov
jno
add
rdpmc
fisubs
pop
loope
pop
jge
or
xchg
mov
shll
cmp
xchg
push
inc
and
or
test
aaa
sub
loop
popf
add
leave
dec
or
in
cli
fmull
arpl
jmp
imul
pop
int3
and
leave
adc
imul
sahf
aad
icebp
ljmp
hlt
and
push
lds
call
cld
cmpsl
push
cmp
test
cltd
ficompl
xchg
cmp
sub
mov
dec
mov
pop
mov
loope
test
cmp
mov
and
sub
adc
adc
and
push
dec
push
mov
outsl
iret
mov
jno
je
jno
xchg
mov
lods
lahf
jp
or
jns
mov
int3
movsl
adc
pushl
pop
jp
xor
and
pushf
sbb
xlat
dec
ret
jmp
push
xor
cmp
sub
mov
repnz
and
add
and
xchg
icebp
inc
inc
test
mov
push
aam
stos
adc
mov
jnp
lds
test
lock
push
pop
jnp
in
ret
sub
aam
mov
mov
push
out
mov
outsb
xchg
lds
int3
int
mov
push
pop
rcll
xor
loope
xor
ja
lret
hlt
inc
jne
lret
cmp
jp
cld
iret
add
pop
jo
test
ds
pop
cmc
clc
icebp
sahf
inc
fldt
push
dec
fcmovnb
aas
ja
sub
jge
jp
cmp
negb
add
in
xor
int3
pop
push
rol
rcll
rcll
pop
cmpsb
mov
adc
add
fwait
and
lods
mov
xor
adc
aaa
mov
pop
into
push
or
outsl
aas
aaa
popa
or
mov
les
dec
mov
loop
mov
or
dec
inc
fistpl
pop
inc
cmp
imul
int3
mul
jmp
addr16
and
mov
mov
test
mov
pop
jns
adc
mov
lcall
mov
inc
and
rcrl
dec
test
outsl
sbb
test
sub
push
push
test
ds
das
mov
adc
or
lahf
sbb
movsb
inc
pop
adcb
sbb
movsb
ljmp
cmp
cld
xchg
imul
inc
dec
je
mul
das
xchg
push
add
cmp
arpl
xchg
not
add
dec
add
fsubrl
push
sbb
or
mov
cmp
into
dec
mov
add
jb
inc
jo
mov
clc
int3
mov
jg
hlt
lcall
sub
aas
mov
stos
in
stos
push
scas
in
insl
nop
and
push
stc
and
popf
xchg
imul
cs
jle
xchg
out
mov
add
push
popa
inc
xor
mov
lcall
mov
mov
pop
int
orb
and
mov
cs
xchg
sbb
mov
fisubrs
shll
aam
shld
dec
jb
cmp
push
scas
fidivrs
and
jl
aad
sbb
mov
jecxz
add
je
aaa
jb
adc
mulb
ljmp
shlb
mov
pop
int3
fdivrl
xchg
xchg
jo
mov
mov
rorl
into
mov
loop
je
mov
lret
adc
mov
xor
insl
sub
dec
sub
inc
add
mov
test
cwtl
out
out
adc
inc
aaa
dec
sbb
cmc
mov
sub
in
out
mov
push
dec
push
sub
push
xchg
and
sbb
dec
inc
out
sub
orl
or
add
push
jbe
out
test
cmp
pop
xchg
iret
sti
sub
dec
data16
outsb
lods
movsl
lock
mov
enter
loope
fs
pop
popf
test
lods
movsl
adc
mull
push
lcall
test
mov
int
in
in
xor
les
movups
mov
nop
mov
xchg
mov
adc
stos
ret
dec
cmp
shll
cmpsl
jns
psubd
mov
stc
leave
sbb
push
inc
or
dec
test
jge
push
test
add
loopne
cmp
test
xchg
movsl
or
sbb
push
add
add
mov
jl
xor
jbe
cmp
xor
pop
jmp
or
add
xchg
vxorpd
scas
sbb
adc
sbb
rcr
lods
xchg
ror
jmp
movups
ret
mov
icebp
push
xorb
push
jle
cmp
ret
repz
and
mov
lahf
mov
xchg
mov
jne
lcall
jg
fdivr
mov
pop
testl
push
aam
clc
push
xor
push
push
inc
adc
in
es
cmc
mov
dec
adc
inc
adc
lahf
cs
fs
jl
mov
mov
scas
cmp
mov
mov
mov
cltd
insl
sar
es
shlb
jmp
jae
das
and
js
les
inc
divb
mov
sti
adc
scas
fisubrs
pop
adc
mov
xchg
fstl
stos
loope
ret
pop
mov
mov
into
lret
addr16
add
ljmp
add
pop
xchg
inc
xor
or
andl
jae
inc
mov
cmp
xchg
hlt
and
xchg
shll
jecxz
push
push
adc
xchg
sub
mov
jne
push
in
jl
and
sbb
add
inc
mov
xor
into
xchg
cmc
jmp
lods
loope
mov
shrb
adc
call
imul
cmpsb
push
lahf
repnz
inc
jb
mov
lea
bound
and
dec
leave
mov
dec
lahf
or
inc
sub
cld
mov
lcall
outsb
add
in
inc
sarl
outsb
lret
push
and
ljmp
add
push
out
mov
insb
sarb
mov
fwait
add
cmpsl
mov
outsl
test
adc
ja
fidivrl
mov
pop
bnd
sbb
cli
cwtl
icebp
gs
test
test
xor
cmp
or
idivb
in
pop
xchg
pop
insl
bound
scas
lcall
int3
fs
mov
jbe
jecxz
inc
inc
aas
mov
cmpsl
inc
mov
mov
mov
mov
call
and
fisttps
sub
ds
add
cmc
lea
test
push
cmp
adc
pop
rcrl
mov
mov
push
sub
jle
push
push
push
pop
and
mov
fwait
lret
and
fistpll
enter
add
mov
rcrl
stos
jecxz
mov
arpl
bound
sub
movsl
fistpll
ret
xor
mov
call
xchg
sarb
loop
mov
push
xor
jmp
out
aas
lcall
je
fmuls
fmuls
fldlg2
arpl
inc
test
in
mov
movsb
jo
in
ja
add
js
push
loope
mov
jmp
pop
pushf
pop
outsl
cmc
lahf
sbb
xchg
les
aaa
inc
mul
xlat
lea
subl
xchg
push
mov
aas
push
push
cmpsl
lods
imul
lret
and
xchg
les
arpl
jbe
subb
cmp
pop
fninit
push
in
insl
xchg
xchg
mov
test
ret
jo
dec
pop
ret
xchg
dec
les
dec
xor
cmp
insl
pop
ja
pop
je
inc
loop
fld
push
leave
ficoms
and
sbb
mov
push
leave
inc
mov
dec
mov
jmp
push
fists
and
inc
push
or
add
mov
andb
cmc
push
mov
xor
push
and
dec
insb
adc
mov
mov
hlt
sbb
bound
push
push
aas
mov
push
jae
pop
iret
pop
sbb
inc
push
or
sbb
pushf
cmpsb
sub
push
push
pop
sbbl
cld
mov
mov
mov
or
push
push
into
bound
dec
pop
ljmp
gs
std
xlat
mov
inc
add
jo
sub
pop
or
aad
rolb
push
push
push
lea
add
lahf
shl
sbb
aad
aaa
xor
jnp
test
add
mov
fimull
dec
pushf
jae,pn
aam
jae
das
cmp
lock
cmp
in
daa
jne
es
adc
push
aad
popf
outsb
jp
rdtsc
mov
push
aaa
and
and
imul
rcr
js
inc
ljmp
push
pop
add
or
mov
push
jno
cs
pushf
dec
leave
popa
lods
loope
call
or
xlat
scas
lret
inc
js
adc
adc
pop
mov
xchg
cltd
dec
movsb
mov
cmp
mov
xchg
stc
xchg
or
shrl
scas
lods
jb
jb
jo
cmpsl
xor
adcb
out
mov
clc
mov
je
mov
mov
into
daa
jge
xchg
cmp
lret
pop
icebp
lahf
scas
dec
mov
add
push
in
jne
iret
pushf
cltd
outsl
out
xchg
add
jle
testb
test
lock
ss
xchg
movsl
addb
and
testb
jne
addr16
push
xor
pop
neg
add
jecxz
les
mov
inc
mov
jno
mov
fbld
jnp
pop
or
shll
pop
enter
stos
xrelease
add
lods
dec
push
dec
stos
nop
cmpsl
fisubl
dec
lret
fcomps
adc
arpl
stos
mov
mov
pushf
ret
mov
sbb
sbb
aam
lock
test
or
shrb
ja
popf
adc
inc
into
xchg
sub
out
pusha
xor
xchg
out
inc
push
ss
mov
mov
arpl
je
or
stos
xor
mov
add
movsl
divl
jne
notl
mov
mov
leave
cmp
mov
loopne
jns
xor
scas
xchg
xlat
dec
negb
popa
pushf
mov
dec
pop
hlt
int3
inc
cmp
sub
int
sbb
add
and
jo
push
out
adc
mov
pop
call
cmpsl
xchg
add
stos
dec
movsl
call
ss
int3
aad
inc
loop
scas
or
movsb
xor
mov
movsb
xor
xchg
imul
shlb
or
lods
stos
pushf
shl
es
adc
add
pop
and
xchg
jnp
popa
mul
push
enter
dec
push
push
leave
xor
popf
sub
sbb
push
cmp
and
cli
sti
aaa
sub
and
test
sub
push
mov
jo
fidivrl
push
xorl
repnz
ror
push
adc
call
xchg
stc
push
inc
pop
aaa
mov
pop
dec
and
pop
rclb
call
mov
out
loopne
jno
movsl
and
push
popa
jb
add
jo
sbb
inc
sahf
mov
dec
sbb
addr16
aas
dec
add
dec
jecxz
mov
sub
pop
or
xor
gs
test
test
lahf
out
test
sar
es
enter
sub
xchg
jle
pop
mov
adc
int3
cmp
pop
mov
ret
sbb
mov
sbb
lds
mov
jle
lret
addr16
xchg
loop
int
xor
xor
jmp
ds
fs
shrb
sbb
repnz
insb
stos
pusha
mov
sub
enter
and
xchg
push
inc
xchg
pop
divb
push
mov
repz
add
xchg
ds
sbb
mov
gs
imul
test
xchg
stos
stos
repnz
ret
lods
mov
stos
xor
cs
xchg
ficoml
pop
push
scas
jno
cli
and
in
push
xchg
dec
sbbl
inc
insl
sub
pop
mov
sub
xchg
les
insb
jns
mov
sub
mov
mov
stc
xor
push
push
into
add
adc
or
shrb
inc
mov
sarl
pop
pop
pop
aaa
sub
mov
out
lods
lahf
ss
les
lahf
sub
xor
scas
push
movsl
add
mov
dec
imul
inc
dec
add
out
or
pop
dec
jns
std
push
push
cld
add
sbb
add
sub
into
jb
sahf
out
mov
into
mov
jl
int3
pop
outsl
rcll
neg
scas
mov
ljmp
mov
push
pop
cltd
pop
push
test
jb
mov
mov
loopne
ds
pop
xlat
xchg
icebp
loope
fs
mov
push
fwait
into
loopne
dec
test
nop
jp
imul
sbb
incl
je
xchg
ds
das
sub
adc
sbb
push
mov
cwtl
jno
mov
jge
sarb
lret
cs
shr
enter
lea
in
add
push
xchg
mov
mov
pop
sbb
xor
pop
gs
push
cwtl
or
inc
push
dec
loop
hlt
adcl
repnz
fwait
jo
sbb
bound
loopne
xchg
sub
push
mov
pusha
push
push
rcr
in
sbb
fldenv
pop
ljmp
std
lret
sub
cli
rcrl
mov
dec
and
ljmp
xor
inc
pop
jp
shll
lea
push
cmp
fisubs
ja
jno
rcr
jbe
repnz
enter
xor
sbb
lock
jmp
fildl
std
sbb
adc
jne
or
add
or
mov
inc
out
enter
stc
and
stos
pop
shll
push
pop
adc
std
or
and
fadds
jae
mov
mov
mov
mul
dec
jno
dec
add
xlat
les
cmp
push
pop
and
or
jmp
sub
xchg
insb
mov
cmpsl
push
dec
into
pushf
sub
addr16
ds
rolb
test
test
mov
cld
and
ffree
push
les
lcall
addr16
sub
sbb
ret
xlat
jb
lds
movsl
js
out
shrb
push
jle
lea
or
lds
sub
push
xchg
outsb
lock
xchg
repnz
fisubrs
inc
aam
in
std
sbb
mov
adc
cwtl
xchg
test
adc
scas
dec
aam
push
stc
or
dec
lods
test
cs
ret
in
iret
cmp
mov
sub
hlt
in
fwait
or
xlat
movsb
sbb
push
fldt
test
addl
scas
xchg
mov
jmp
sub
mov
mov
inc
push
pop
or
movsb
sub
repnz
mov
movsl
outsb
pusha
ret
sarl
fcomi
cmpsb
jge
mov
inc
mov
aad
xchg
mov
dec
dec
jmp
ret
push
push
cld
fs
into
xchg
shll
cmpsl
nop
dec
mov
push
add
push
out
adc
shrb
jne
cmp
cmp
mov
test
mov
xor
sub
movsb
mov
out
mov
cli
sbb
repnz
fcomip
popl
mov
in
cmpsl
adc
lahf
dec
push
dec
inc
packsswb
push
jp
adc
push
fcoml
sub
push
lcall
addr16
pop
xor
push
sbb
inc
jge
inc
into
shlb
adc
fidivs
jbe
bound
inc
and
adc
loope
lcall
push
pop
jb
sti
adc
sub
data16
cmp
lea
mov
mov
lods
cwtl
mov
lret
mov
and
jp
leave
mov
sahf
mov
enter
pop
mov
push
mov
pop
add
dec
es
ja
call
xor
push
stos
add
sbb
mov
popa
xlat
sbb
xlat
in
sub
sub
aad
sub
inc
fisubl
sub
ss
xor
mov
aam
loope
shlb
pop
mov
mov
shl
insb
adc
cmp
cs
add
dec
push
aam
stos
test
int3
iret
inc
mov
decb
lods
xor
adc
or
sahf
int
and
mov
enter
dec
jno
push
mov
fmulp
jno
xor
push
push
sahf
lahf
jne
pop
cmpsl
push
dec
xchg
jge
mov
fwait
insb
add
pop
lods
adc
dec
loop
leave
loop
xchg
out
cwtl
add
pop
lret
fwait
adc
out
sub
clc
add
arpl
inc
pop
mov
lods
jae
pop
mulb
fcmovnu
mov
adc
cmpsb
cmp
cmp
ljmp
pop
xor
cs
jl
ret
aam
les
shl
shlb
mov
arpl
cwtl
out
cmp
adc
sub
add
jl
xor
dec
shlb
inc
insl
sub
es
dec
les
imulb
aad
cltd
cmp
lods
call
sub
or
jae
fs
lock
call
xlat
popa
in
sbb
mov
or
sub
pop
in
mull
xor
das
sbb
loopne
xchg
sti
imull
mov
inc
inc
push
imul
shlb
pop
fs
daa
out
mov
mov
nop
jle
xor
fwait
movsb
aas
stos
iret
adc
push
cmp
pop
inc
lds
xor
movl
cmp
pop
std
adc
mov
pusha
orl
adc
cli
inc
push
test
xorl
dec
mov
inc
jge
int
mov
movsl
xchg
push
lret
arpl
daa
lret
ds
icebp
jne
les
fildll
xor
cld
lods
call
icebp
lods
es
cld
cmp
dec
fmull
addb
stos
lods
rorl
or
mov
jae
jl
jae
in
sub
into
fsub
fldcw
mov
pop
jg
repz
aaa
cld
stos
sbb
mov
shl
add
rol
int3
push
pop
mov
adc
dec
cwtl
mov
inc
call
jo
shll
fwait
adc
je
add
es
pusha
ret
into
andl
test
popa
xchg
jg
and
push
sub
mov
mov
inc
mov
outsb
cmp
std
dec
lods
jecxz
addr16
xor
push
xchg
cmp
fucomp
push
je
cwtl
cmp
loope
daa
cmp
or
push
insb
adc
xchg
xchg
mov
mov
lods
lock
iret
mov
and
pop
add
xchg
sub
mov
enter
cmp
rcll
nop
sub
aaa
add
out
fstl
xchg
mov
jae
lcall
out
mov
aaa
or
shrd
adc
mov
add
push
and
adc
mov
lods
add
into
setae
and
scas
pop
pop
ret
pop
or
lret
xchg
rcrb
dec
popa
dec
mov
repnz
xor
pusha
pushf
fucomip
mov
nopl
sub
jne
loop
ret
cmpsb
outsl
sbb
rolb
outsb
xchg
mov
out
shll
xor
popa
sub
jo
jno
rcr
pop
or
outsl
xor
add
idivl
sbb
ljmp
pop
stos
adc
mov
lahf
mov
dec
subb
ja
arpl
movsl
lret
movsl
insl
fnstsw
cmp
jae
imul
pop
cmpsb
arpl
mov
insb
icebp
rcrb
and
mov
xchg
popf
fisttpll
inc
dec
pop
ror
push
xor
xor
push
cltd
jae
pop
repz
jle
push
outsl
cli
push
sub
cmc
push
addr16
aad
add
push
ljmp
and
add
cmp
rcll
test
or
iret
sahf
jns
fs
dec
lahf
sarb
mov
mov
loope
pusha
aam
dec
sbb
dec
sbb
aas
mov
sbb
dec
cmovae
add
jo
mov
xor
fsubl
sbb
loop
jle
je
jnp
shrb
sub
lea
or
xchg
pusha
lret
movsl
mov
pop
cmpsb
pop
pop
and
stos
adc
and
icebp
mov
gs
jl
sub
vpaddq
test
dec
mov
cltd
cmp
lods
fnstsw
mov
pop
jae
jbe
aas
sarb
fistpl
scas
xchg
push
xchg
jg
mov
jbe
in
cmpsb
lods
stos
mov
push
lods
lds
lock
jne
pop
cmp
sbb
jecxz
or
xor
repz
test
mov
cmp
fdivs
add
inc
das
or
mov
add
and
jmp
sti
inc
ret
push
repnz
inc
cmp
int3
dec
daa
aad
mov
cmp
aas
mov
pusha
stos
adcl
movsl
xchg
fsubrl
icebp
or
pusha
and
add
flds
addr16
pop
pop
push
incl
imul
mov
fs
lret
je
hlt
outsb
pop
frstor
xchg
fwait
sbb
or
hlt
loopne
bswap
addl
pop
cmpsl
push
xchg
mov
jecxz
cmp
push
sbb
or
lock
mov
pop
mov
jns
inc
jmp
in
jle
adc
pusha
ficoml
andb
out
gs
pop
test
or
xor
loopne
push
insl
pop
popa
cltd
pop
fiadds
mov
stos
ds
or
aas
jp
insl
xchg
shlb
push
or
lret
int3
cmp
loop
mov
sbb
mov
and
out
les
movsl
ja
sbb
push
enter
mov
or
jae
insl
cli
imul
cmova
rcl
jae
push
pop
ficompl
or
out
xor
mov
jo
cs
sub
sub
aas
mov
push
data16
xchg
bound
cmp
outsb
or
mov
push
mul
adc
fnstcw
adc
mov
adc
pop
subl
cmp
ret
sub
fmull
fisubl
cmpsb
jb
cmpsl
pop
pop
enter
push
pop
popa
pop
cmp
loop
sbb
xor
lret
mov
das
sub
push
jg
jl
adcl
push
les
inc
or
and
adc
pop
mov
mov
mov
rorl
sub
add
pop
inc
mov
daa
or
je
cmpl
scas
ret
or
stc
dec
jmp
mov
mov
mov
xchg
out
rcl
sub
jge
loope
imul
jno
fadds
fistps
mov
into
cmp
xchg
push
pop
jne
movsb
in
fldl
lea
push
test
out
sti
into
add
xor
dec
or
ret
lods
data16
int
fs
mov
inc
mov
inc
jnp
aam
mov
scas
test
test
jno
rolb
mov
out
xchg
movsl
mov
jns
nop
sbb
iret
pop
jne
cli
aaa
idivl
outsb
xorl
fisubrs
adc
push
push
inc
in
aas
iret
jecxz
shll
mov
xchg
das
push
or
and
mov
add
sbb
jns
and
lret
adc
out
dec
je
mov
pop
call
jge
or
arpl
and
dec
std
mov
mov
shl
repnz
mov
add
int3
cmp
repz
or
xchg
fstpt
xchg
adc
jecxz
push
icebp
push
cld
lahf
and
decb
adc
mov
daa
inc
xchg
clc
inc
xchg
js
dec
and
std
hlt
stos
jl
lahf
loopne
subb
pop
pop
sub
mov
adc
and
dec
push
cld
stc
int
push
repnz
js
les
loopne
enter
mov
mov
aad
nop
sbb
call
sub
test
and
cmp
mov
jmp
out
cmp
daa
ds
xchg
dec
data16
test
jmp
add
sub
dec
pop
mov
mov
push
xor
inc
jge
push
push
xor
push
pusha
dec
mov
mov
dec
aam
getsec
xchg
rcrb
xchg
adc
add
mov
adc
adc
push
add
cmc
aaa
pop
xor
pop
adc
jge
cwtl
pop
popa
sub
out
add
sub
out
pusha
cmp
mov
popa
dec
enter
scas
scas
dec
cwtl
mov
xor
fcmovnb
fwait
bound
cli
fcoml
fsubrs
in
xchg
jp
stc
rcl
and
jp
ret
leave
nop
outsl
movsl
lahf
stos
aad
stc
adc
mov
or
cli
mov
add
rcrb
mov
loope
sbb
xchg
dec
xchg
pop
push
mov
call
xor
aas
lock
pushf
push
sbb
inc
ror
and
aad
stos
inc
in
adc
mov
test
repz
xchg
lret
mov
bswap
xchg
hlt
cltd
out
adc
inc
push
mov
out
and
or
lods
xchg
dec
addr16
dec
cltd
sbb
and
stos
cs
sarb
mov
push
into
out
cmp
ljmp
cli
adc
scas
nop
leave
test
fistpll
ss
mov
iret
push
sbb
js
dec
adc
daa
sub
pop
mov
rol
add
mov
rclb
les
lea
sub
das
mov
loop
cmpsl
pop
add
pop
mov
aad
mov
pop
or
xor
movsl
inc
lock
mov
insl
mov
iret
pop
popa
enter
ljmp
xchg
repz
ss
jae
aam
dec
inc
loope
mov
jl
cwtl
sub
pop
dec
xchg
loop
icebp
mov
xlat
pushf
mov
mov
lods
lock
shrb
imul
mov
lods
out
jnp
xchg
adc
std
in
adc
dec
adcl
xchg
fs
adc
mov
popf
jge
push
imul
cmp
jne
jae
jbe
cmpsb
jge
loope
xchg
movsl
adc
ja
ja
daa
ficoms
mov
insb
push
adc
or
les
int
fnstcw
and
dec
pop
push
icebp
cmp
jecxz
insl
fldt
sub
cwtl
ret
sbb
push
out
inc
pop
inc
inc
addr16
mov
pop
jnp
sti
cli
cmp
inc
rorl
and
mov
xor
fsubrp
and
cmc
or
xchg
cltd
jg
popa
adc
push
cmp
push
andl
adc
pop
shlb
js
sbb
test
and
add
imul
in
jno
push
loopne
or
push
out
aas
stos
loope
aas
add
aam
and
stos
mov
pop
testb
jae
lock
dec
aaa
incl
cltd
mov
and
mov
fadd
add
and
mov
and
jmp
xchg
or
cld
xchg
in
int3
fsubrs
scas
lds
mov
and
nop
sub
popf
jl
roll
add
inc
in
push
inc
cwtl
mov
jo,pt
popf
jnp
inc
bound
fst
jp
lods
dec
add
mov
inc
jl
mov
pop
add
daa
mov
xor
lds
shlb
sbb
jns
pop
push
popf
and
das
es
sub
inc
sub
xor
pop
add
and
mov
sbb
mov
or
xor
pop
mov
add
adc
mov
leave
cmp
sahf
ljmp
cltd
nop
mov
aad
jp
sbb
scas
ret
ror
ss
movl
xchg
fdivs
push
mov
rorl
fnstcw
fxch
imul
jae
ljmp
cmc
cwtl
aaa
mov
jl
shll
lcall
mov
subl
cli
adc
mov
scas
pop
aad
lods
cmpsl
and
jmp
pop
xor
sub
pop
push
jmp
inc
int
jns
and
push
icebp
ds
dec
shr
int
or
mov
sbb
in
or
adc
pop
stos
jl
and
cmp
push
push
jle,pt
iret
sbb
push
out
and
dec
dec
scas
shl
icebp
add
push
addr16
mov
arpl
dec
jmp
sub
out
jno
xor
add
call
mov
mov
jbe
mov
test
jecxz
and
jecxz
sti
call
jo
cmp
push
jl
cld
sarb
sarl
and
aad
mov
push
mov
mov
cmp
inc
ret
pop
sbb
sub
std
fwait
sahf
imul
mov
sbb
rclb
pusha
subl
jo
push
testl
jmp
pop
or
shrb
cmpsb
fucom
or
push
dec
arpl
loopne
sbb
jns
lret
cmp
loope
or
sahf
jle
jbe
jmp
pop
push
jbe
out
loop
inc
push
mov
jns
mov
loope
mov
out
mov
ror
les
dec
insb
incb
pop
inc
ljmp
or
lcall
loop
cmp
adc
lds
pop
push
xor
jns
sub
sub
in
xor
je
mov
mov
xchg
popl
movsl
pusha
mov
loope
imul
xor
lret
jns
ja
pop
xchg
rol
cwtl
enter
call
rcll
lock
cwtl
hlt
ror
daa
lret
sahf
imul
push
cmp
pop
scas
int3
jl
mov
push
mov
arpl
js
cmp
cmpsl
pop
or
das
mov
outsb
stc
shrl
push
or
push
sub
rorl
ljmp
out
enter
push
inc
mov
xchg
sub
stos
xchg
cmp
pop
push
ds
inc
or
pushf
sbb
test
dec
fdivs
sbb
xchg
jmp
insb
inc
call
mov
orl
add
mov
pop
movsl
mov
ds
lods
es
pushf
and
sub
adc
xchg
shrb
cld
inc
pop
inc
sbb
adc
fisubl
lods
ds
dec
inc
and
out
cltd
mov
jle
pop
aad
pushf
clc
data16
movsb
adc
ja
andl
scas
in
test
adc
adc
jo
adc
push
jl
inc
or
xor
or
popf
mov
subb
cmpsb
mov
cmp
lock
jle
inc
sub
aas
mov
je
pop
in
mov
adcl
cmp
add
iret
mov
inc
mov
fs
fldl
test
xchg
aad
sub
ret
rolb
jns
ror
ljmp
lahf
mov
lahf
ret
lret
aaa
mov
push
push
xchg
adc
push
aam
dec
xor
xchg
mov
sbb
adc
int3
addr16
es
inc
cs
insb
add
xor
movsl
pop
jge
fists
jo
mov
mov
lcall
aaa
fs
fsubrl
mov
gs
outsb
pop
dec
xlat
filds
inc
in
mov
fsubl
inc
cmp
mov
xchg
xchg
xchg
sbb
pop
lods
pop
adc
lea
mov
movsb
push
cs
popf
push
lret
sbb
shll
test
cltd
dec
ret
dec
rol
repz
xor
sub
outsb
and
test
js
lds
xor
xchg
xor
xor
push
pop
push
aaa
mov
jg
mov
dec
stc
dec
xlat
adc
add
ret
and
inc
enter
or
ja
mov
mov
push
jecxz
ds
fsub
or
jecxz
filds
cmp
enter
push
imul
in
rcrl
mov
lcall
xchg
enter
dec
insl
cmp
jnp
fwait
test
fmull
xchg
data16
mov
push
pop
outsl
out
jmp
bnd
pop
mov
rol
insb
sub
sub
mov
sti
mov
add
into
movsb
repnz
daa
sarb
pop
shr
xor
lahf
push
cmp
pop
xchg
iret
jns
or
fmuls
outsl
pop
push
mov
jb
lret
add
je
ror
divb
or
arpl
cld
ljmp
fld1
shrl
push
js
rcrb
loope
fwait
xchg
inc
andb
test
push
and
rorl
dec
in
cmp
push
std
hlt
or
mov
test
loopne
push
lods
clc
in
mov
outsl
enter
pop
jmp
addr16
mov
mov
das
mov
xchg
aam
fsubs
or
pop
cmp
or
or
ja
mov
jmp
pushf
mov
and
xor
mov
push
xor
dec
mov
stos
xor
test
ficoms
mov
add
mov
and
add
fistl
mov
outsb
mov
orl
in
cmpl
negl
bound
xchg
jns
fdivrs
push
xlat
jg
roll
pop
jmp
and
mov
into
adc
pop
test
mov
sbb
in
clc
inc
out
into
cmp
dec
daa
mov
pop
lods
or
mov
or
test
jno
sti
xchg
dec
icebp
pop
push
add
addb
sti
and
inc
mov
mov
pop
inc
mov
xor
cmp
fs
pop
lretw
and
or
mov
inc
pop
jp
sbb
inc
push
inc
fstl
push
cmp
and
lahf
mov
sub
or
sbb
pushf
inc
cs
enter
mov
pop
pop
out
adc
xchg
jnp
xor
xchg
dec
dec
cwtl
dec
and
ret
push
lods
push
push
addr16
xor
mov
xor
shl
imul
and
daa
les
pop
push
mov
mov
outsl
lret
mov
sarl
test
cwtl
andl
mov
push
aam
inc
or
sbb
cmp
lcall
cmp
mov
dec
rcrl
test
push
mov
dec
repnz
add
push
cs
imul
loope
out
fwait
jns
ds
rorl
and
daa
xor
jae
xor
add
inc
push
je
mov
cmp
nop
mov
xor
bound
fcomip
shlb
mov
scas
cmp
xchg
push
les
mov
nop
cmpsb
cmpsl
lret
lahf
loop
sbb
out
in
mov
pop
shll
dec
ss
sbb
lea
push
sub
ljmp
adc
pop
push
je
movsl
jmp
icebp
jbe
rorb
mov
daa
int
or
shl
cmp
mov
or
dec
call
inc
mov
lea
lods
sti
fsubl
pop
adc
ja
rol
imulb
jle
pop
imul
xlat
mov
jns
cmpl
mov
dec
and
sahf
mov
loope
movsl
sbb
ljmp
jmp
mov
popf
lret
loopne
lea
icebp
xchg
popl
je
cmp
sbb
add
cmp
dec
pusha
popf
lods
fldl
add
mov
add
mov
xor
or
and
adc
inc
dec
hlt
xchg
pushf
jns
cmp
lds
mov
fcomi
lods
or
mov
push
inc
push
xchg
jp
mov
dec
sub
lock
dec
sbb
xchg
aad
mov
pushf
fwait
jg
pop
and
mov
mov
xchg
test
lret
push
jno
pop
loope
and
rclb
jge
sbbb
out
lcall
shlb
inc
jmp
jbe
jae
cmp
lcall
pop
inc
jmp
stc
lods
out
loop
cmp
xor
jnp
pop
adc
and
sub
addr16
inc
pop
inc
pop
push
adc
pusha
inc
imul
sbb
mov
cmp
mov
sub
mov
mov
rcr
ret
jp
add
roll
pushf
jno
cld
ja
xor
adc
jle
xor
cmp
mov
mov
dec
xchg
mov
test
add
jnp
loopne
in
aad
popf
inc
xor
in
mov
xor
mov
cmc
mov
xchg
and
push
pop
jne
and
inc
pop
icebp
inc
push
les
jbe
or
sahf
movl
xor
lods
sub
cli
lds
leave
push
sub
jo
jg
fildl
dec
subb
or
inc
mov
pusha
mov
add
imul
shlb
jg
fimuls
ljmp
sub
imul
daa
pop
lods
cli
push
pop
xor
ret
outsl
rcl
cltd
pop
sbb
mov
ret
add
jmp
jno
mov
push
stos
lods
dec
imul
mov
and
gs
je
movsb
xchg
or
pop
cltd
das
push
pop
dec
dec
test
xchg
mov
push
mov
repz
scas
pop
test
ficoml
sub
push
popa
lcall
ficoml
dec
and
arpl
leave
pop
push
mov
mov
pop
xchg
int
insb
sbb
insl
pop
out
adc
test
push
xchg
dec
push
mov
addr16
stc
pop
repnz
notb
xor
dec
pop
jbe
outsb
clc
sti
cmp
adc
cltd
js
andb
icebp
sbb
repnz
pop
add
and
add
sbb
xchg
fisubl
mov
mov
data16
jae
mov
cld
fs
loope
xor
inc
imul
dec
rcrb
mov
testb
in
stc
leave
loop
inc
ss
jb
jnp
in
out
inc
mov
sbb
sbb
add
enter
inc
sbb
jb
cmp
repz
jne
pusha
clc
in
jle
dec
push
or
push
out
outsl
fs
aam
inc
or
and
jp
dec
jecxz
popa
mov
fbld
mov
mov
push
aaa
sbb
scas
dec
xchg
scas
jb
sbb
rcrl
out
xchg
outsl
out
cmp
idivl
lret
mov
repnz
loope
add
popf
add
pop
mov
add
jp
movsl
add
push
repz
iret
adc
cmp
mov
pusha
orb
push
mov
dec
outsl
enter
sbb
div
lahf
and
cmc
cmp
sub
cli
mov
mov
adc
adc
pop
cwtl
pushf
mov
in
in
arpl
in
mov
loope
addr16
xchg
or
sbb
and
mov
jl
mov
shll
stos
xchg
sub
jns
pop
jle
stos
mov
jp
xor
add
xor
movsb
cli
movsl
jb
in
dec
mov
int3
bound
fcoml
mov
and
or
iret
cmpsb
in
pusha
inc
add
or
ret
imul
ficoms
fsubs
mov
sub
jno
pop
ds
pop
callw
jb
rclb
scas
inc
imul
mov
cmp
lea
cmc
loopne
xchg
ja
mov
lea
xchg
sbb
push
pop
jmp
lods
arpl
jbe
fisttps
out
lds
leave
lea
mov
out
jmp
imul
sbb
pop
jae
push
lea
push
and
out
movl
dec
pushf
or
int
mov
xor
imul
and
repz
sbb
ret
int3
push
cmp
test
or
push
mov
add
fidivs
and
lock
sub
jecxz
fldenv
add
in
adc
in
loopne
cmpsl
push
push
insl
testl
movsl
mov
inc
stos
das
jl
jns
mov
cltd
adc
shl
out
adcl
and
and
sbb
cmc
adc
cmc
cli
icebp
adc
mov
jmp
jge
mov
push
mov
mov
and
adc
adc
push
inc
bound
inc
dec
inc
les
inc
ja
ficoml
sbbb
push
sbb
jbe
sbb
rolb
dec
xchg
mov
pop
ja
sub
mov
push
cmp
push
mov
push
sbb
dec
and
sar
adc
sub
fidivs
jecxz
xor
es
cmp
stc
outsl
icebp
xchg
movsb
jle
push
leave
jo
lret
mov
or
jge
addl
and
das
sub
push
outsb
adc
imul
push
pop
aam
outsb
dec
mov
loop
xchg
add
pop
jns
push
data16
out
mov
lods
mov
xchg
lock
aam
sbb
sbb
xchg
cmp
inc
inc
push
jb
lds
or
add
imul
or
mov
sub
imul
das
push
test
push
stos
push
dec
andb
jo
aas
dec
into
rcll
adc
aas
insb
inc
daa
pop
add
mov
sub
rolb
idivb
mov
ljmp
add
push
pop
insb
push
mov
out
ds
or
and
arpl
dec
rorb
xchg
in
sbb
out
nop
ret
adc
loopne
je
add
xlat
fsub
fwait
mov
cmp
or
xchg
jno
mov
jbe
cltd
je
adc
sub
aaa
rcll
stc
mov
jle
mov
jb
push
sub
xchg
js
ljmp
and
add
repz
imulb
out
cmp
cbtw
mov
iret
push
adc
jecxz
addr16
sub
outsb
push
cwtl
loop
adc
ds
ret
mov
jne
aad
insb
jg
fldenv
dec
or
imul
out
jecxz
popa
push
hlt
jbe
idivl
pop
adc
mov
push
lret
xor
sarl
sbb
cmp
negl
fdivp
movsl
mov
imul
mov
les
cwtl
mov
lret
and
cmp
xchg
add
adc
cld
in
insl
sahf
cmp
mov
outsb
das
ror
hlt
and
movsl
aam
out
mul
lret
mov
jg
ret
adc
mov
push
lock
dec
in
cwtl
loopne
mov
ret
inc
es
pop
lods
xor
sbb
vhsubps
fwait
repz
adc
sti
out
add
add
xor
test
aam
hlt
mov
mov
scas
xorl
stos
cmp
scas
orb
insb
dec
mov
out
dec
in
jnp
stos
or
aad
xchg
outsb
and
cmc
jmp
jmp
dec
test
je
aas
ljmp
std
mov
fwait
push
rcrb
pop
adc
mov
out
pop
or
mov
dec
repz
push
pusha
fists
jecxz
insb
rol
stc
addr16
test
pop
push
pop
xor
sbb
decb
cwtl
mov
xor
adc
in
dec
push
pop
mov
mov
push
cmp
adc
mov
flds
mov
lret
and
jecxz
inc
rcrl
in
into
mov
mov
lods
loop
jns
jmp
mov
or
inc
loope
sub
mov
mov
negl
sbbb
push
repnz
fs
lods
loop
loope
shl
cmp
push
fwait
mov
or
fs
lahf
mov
inc
arpl
push
jne
cmp
lods
inc
shl
aam
xchg
xchg
mov
push
ret
cmc
hlt
jmp
mov
xor
mov
lds
cld
outsl
and
insl
pop
mov
repz
add
flds
ret
pop
inc
add
daa
inc
pop
xchg
pop
fwait
stos
jp
jnp
into
int3
decb
mov
stos
lods
fists
hlt
mov
sub
jge
incl
inc
outsl
inc
gs
popf
loop
xor
xor
dec
aas
loope
mov
movsb
sbb
popa
pusha
cmpsl
mov
stos
add
fsubr
jecxz
cmpsb
clc
jp
sbb
test
test
movsb
inc
jb
data16
loop
out
xor
mov
sbbb
inc
push
pop
xchg
pop
push
push
mov
jle
mov
call
insl
and
mov
push
fmuls
pop
jmp
mov
mov
sti
clc
adc
jg
mov
adc
or
dec
imul
jg
ja
cmp
xorb
loope
mov
sbbb
cwtl
xchg
ficomps
cmp
push
out
mov
pushaw
jecxz
stos
mov
mov
mov
and
ret
jmp
cmp
adcl
rolb
call
int3
js
imul
fwait
out
insl
lea
repnz
gs
jmp
dec
xor
push
nop
xor
adc
stos
clc
add
xchg
mov
fs
enter
mov
enter
sbb
popf
adc
lds
xor
jle
pop
sarb
andb
enter
pop
push
pop
ret
sbb
scas
mov
dec
sub
sub
mov
cmc
ret
inc
jae
mov
sahf
mov
and
ljmp
add
mov
mov
mov
cmp
inc
jo
or
jp
movsb
je
xchg
jns
data16
jle
cmp
jae
xchg
cmp
xor
or
dec
pop
xor
add
mov
mov
adc
jmp
lods
push
xchg
add
fs
sub
in
divb
jnp
xchg
mov
or
cmpsl
inc
jecxz
ret
xchg
cld
lret
scas
outsl
jno
dec
js
dec
and
sarb
xor
test
cmp
and
repz
push
push
clc
xor
subl
arpl
hlt
and
cmpsl
xor
jno
adc
inc
mov
rcrl
sbb
in
mov
pop
add
pop
lods
pop
imul
or
cmpsl
sub
or
in
inc
pop
adc
repnz
xchg
sahf
or
out
lea
mov
clc
movsb
vmread
cmpsb
mov
jp
xchg
fimuls
fucomp
sub
xor
std
dec
push
inc
mov
jae
push
in
arpl
pop
stos
mov
mov
sbb
mov
rcll
ds
pop
pop
push
xor
dec
ljmp
cwtl
inc
add
cli
fs
or
pop
dec
fsin
or
sbb
sti
push
inc
mov
xchg
xor
in
fistps
xchg
popf
mov
and
jbe
lret
cmp
cmpsb
cmp
inc
bound
mov
mov
adc
psadbw
add
cmpsl
hlt
inc
stc
out
mov
les
xor
arpl
int
xchg
inc
subl
movsl
add
push
push
and
cmpsl
nop
int
fcomps
lods
cli
or
jp
inc
aad
xchg
lahf
mov
repnz
mov
or
fcoms
notb
adc
mov
gs
or
mov
inc
xor
outsb
fstpl
pop
mov
xchg
test
xor
sbb
sbb
fcomps
or
imul
cltd
cmpsb
out
mov
cmp
out
adc
ss
insl
push
adc
adc
jb
add
leave
push
and
es
mov
addr16
cmp
adc
inc
cld
and
loope
add
add
pop
pop
cmp
movsb
adc
jb
das
cmp
repz
or
jns
sti
out
aad
mov
mov
lret
mov
inc
outsb
sbb
push
sub
fimull
xchg
add
lods
popa
jecxz
sub
lcall
test
adcb
jecxz
xor
bound
int
pop
lcall
pop
popa
fdivs
jecxz
fisubl
popa
add
pop
aam
rorl
xchg
in
push
push
pop
mov
mov
jmp
inc
mov
mov
fisttpll
cmp
sbb
xchg
push
fisubl
and
lds
imul
push
push
and
lods
cld
std
xor
pop
lds
pusha
push
pop
dec
stc
jne
shll
and
jmp
jmp
push
cmp
aas
mov
jbe
loope
sti
push
aam
repnz
fcomps
cmpsb
imull
aaa
rcrb
xchg
sbb
mov
insb
pop
push
addr16
xchg
stos
and
cmp
nop
rorl
sub
xor
lahf
iret
xor
pop
ds
adc
jge
lea
movsl
or
inc
xchg
in
call
mov
js
ss
adc
inc
jne
add
repz
popf
shrb
divb
or
jno
cltd
js
lret
cli
outsb
cmpsl
aaa
pop
xchg
xchg
cmp
xlat
pop
ja
loope
jae
mov
pop
fisttps
inc
pop
and
cmp
movsl
ffree
inc
jg
aas
int
fisubl
stos
push
mov
shlb
stos
pop
popa
sbb
lret
jb
push
dec
rcrb
sbbl
aam
jae
fildll
sbbb
or
cmpsl
jns
mov
push
daa
in
mov
push
aad
add
jg
in
repz
pushf
mov
mov
mov
test
adc
dec
dec
adc
cld
jbe
sbb
enter
xchg
aad
push
add
and
dec
xor
push
scas
mov
push
daa
fs
js
out
sub
jae
add
in
and
mov
imul
cwtl
adc
repz
cwtl
outsl
in
jb
mov
jb
loop
mov
push
pop
lret
stc
adc
add
sub
xchg
mov
and
dec
adc
push
add
out
stos
out
push
lret
ret
inc
lea
lahf
sub
dec
mov
dec
sbb
repnz
push
int
mov
pop
sbb
and
loop
sbb
je
xor
add
jp
aam
xchg
mov
jbe
dec
pop
clc
inc
sub
and
xor
movsb
adc
fcmovne
fwait
daa
daa
movsb
inc
cwtl
and
out
out
jl
icebp
pop
pop
bound
test
pop
and
subb
nop
pop
aad
xchg
pop
push
lea
add
cltd
lahf
inc
in
add
push
rcrb
adc
lret
cmp
push
mov
mov
insl
loopne
xchg
xor
adcb
aam
mov
ret
shll
or
cmpsb
xchg
clc
ret
jno
or
xlat
xor
repz
repz
mov
mov
iret
xchg
cltd
inc
insb
in
xchg
int3
je
mov
pop
leave
fs
into
sub
out
push
sub
push
insl
stc
aas
imul
mov
dec
sbb
fldt
cmp
mov
mov
fadd
js
bnd
xor
xchg
daa
push
jl
add
shrl
xor
add
mov
mov
sub
push
aam
stos
cmp
fisttps
sbbl
outsb
pushl
and
pushf
mov
fsubrs
cld
and
frstor
jnp
jbe,pt
mov
push
insl
push
lods
xchg
in
mov
fnstenv
jl
fwait
lods
scas
fcompl
pop
xor
test
sti
outsb
pop
jp
imul
xchg
mov
out
xchg
aam
iret
lret
cmpsb
leave
sub
repz
cwtl
add
pop
push
dec
cmp
movsl
jnp
mov
shll
ficoms
xlat
xor
and
lret
insb
test
xor
scas
jb
pop
sbbl
cmc
jge
clc
jno
pop
sahf
mov
mov
sti
pusha
and
push
mov
cmp
mov
mov
daa
mov
mov
sbb
jns
xor
fsubrs
push
mov
lods
inc
jmp
xor
sub
dec
loope
push
jo
push
jecxz
out
adc
insb
mov
mov
ret
push
leave
jno
jnp
inc
cmc
mov
mov
icebp
sarl
pop
in
sti
jae
pusha
jg
pop
lahf
test
cs
fildl
dec
or
fisubrs
lock
pusha
popf
subl
and
adc
cmpsl
shll
stos
loope
cmp
cs
or
xor
movaps
cs
sub
jle
js
rcrb
idiv
xor
jno
mov
or
sub
mov
inc
jns
and
push
or
fistps
test
add
mov
sbb
js
aas
fadds
jae
loopne
out
push
jl
jnp
dec
adc
mov
pop
aas
imul
xchg
orl
jmp
daa
xchg
js
jnp
xchg
mov
xorb
add
andb
ret
das
das
fs
dec
cmpsl
cmpsb
stos
jne
mull
pop
cmp
shl
test
xor
mov
jns
pop
jns
cmc
dec
mov
imul
insb
scas
xor
inc
xchg
in
dec
loopne
roll
push
int3
out
push
mov
cli
mov
sub
je
ljmp
in
pop
iret
push
test
mov
leave
push
loopne
push
repnz
subb
cld
mov
xchg
or
in
xorb
add
stos
jnp
dec
mov
xchg
sbb
sti
jno
add
push
pop
xchg
mov
je
in
out
or
sbb
fs
fdivrs
lret
jp
jnp,pt
jecxz
dec
popl
xor
push
push
flds
inc
clc
xor
add
xchg
pop
sbb
fnsave
jno
jne
js
ror
mov
push
pop
das
aaa
mov
dec
push
inc
cltd
in
mov
jnp
movsl
push
add
sub
xchg
aas
outsb
scas
sub
sbb
add
pop
cld
rcl
xchg
push
xchg
or
nopl
fisubs
imul
xchg
add
das
sbb
lret
lret
adc
hlt
loopne
mov
xchg
andl
addr16
mov
push
iret
add
mov
adc
inc
mov
fisttps
lret
sahf
adc
setno
adc
mov
xchg
js
pop
xchg
pusha
cmp
xchg
movsb
cmp
imul
jle
shlb
movsl
enter
clc
jg
out
ss
clc
adc
aam
mov
adc
cltd
or
lret
sbb
push
push
mov
add
mov
out
cmp
fcoms
pop
out
cmc
or
divl
cmp
dec
fisttpl
mov
xchg
popf
rolb
rcll
aad
fyl2xp1
cltd
mov
cltd
mov
pop
movsb
mov
jl
movsb
fsincos
sbb
mov
nop
add
repz
and
xchg
push
sbb
fsubs
lret
aad
lods
push
dec
inc
dec
mov
inc
icebp
je
das
aas
inc
pop
adc
push
adc
and
adc
call
pop
dec
xor
push
test
jae
iret
cmpb
pusha
je
or
xorl
ret
push
loope
js
lret
push
js
push
inc
pop
push
and
outsl
inc
imul
sbb
or
xchg
and
mov
setge
dec
or
int
std
sbb
inc
xchg
xchg
shrl
mov
push
cmp
sub
nop
pop
push
int
or
sbb
ret
mov
ficoml
icebp
xlat
mulb
mov
push
in
ljmp
sub
shlb
aas
lcall
shl
repz
push
xchg
cli
pop
cli
cltd
test
mov
dec
add
pop
in
cmp
ss
jp
scas
rorb
repz
cmp
nop
jmp
sub
sbb
out
call
negb
in
add
imul
insl
inc
jp
cmp
lahf
and
or
test
cmp
outsb
orl
stos
repz
fstpl
pop
mov
imul
push
and
cmpsb
add
aad
add
movb
js
sbb
mulb
movsl
jmp
adc
lds
aam
ret
mov
sub
pop
xor
adc
jmp
cmpsb
pop
and
cmpsl
test
int3
mov
dec
jo
jle
in
andb
in
inc
adc
inc
adc
scas
fcoml
and
pop
pop
jns
roll
std
and
push
int3
xor
mov
jae
imul
adc
jne
std
mov
testb
lods
aas
push
pop
push
pop
add
xor
out
dec
lcall
stos
cmpsb
and
addl
div
mov
cld
pop
dec
sub
pop
int
pop
xor
out
cmc
push
dec
xor
les
data16
fstl
add
pop
add
ret
insl
inc
jae
test
and
aam
mov
dec
clc
lods
xchg
rcr
call
sub
adc
jns
mov
sbbb
add
mov
jg
sti
mov
int
adc
js
mov
xor
push
inc
fwait
pop
mov
rclb
outsb
xor
mov
mov
ficomps
loope,pn
jbe
out
sub
lea
mov
lret
inc
adc
loope
mov
push
lcall
stos
cmp
push
loop
fidivl
lock
cmc
sub
sub
sbb
or
pop
dec
mov
popf
mov
negb
test
cmc
add
inc
out
pop
mov
pusha
inc
popl
pop
pop
inc
xor
and
jb
cwtl
pop
push
push
sbb
mov
push
and
sbb
jnp
adc
add
inc
adc
and
aaa
scas
test
or
mov
or
jmp
xlat
dec
xchg
push
hlt
or
out
mov
jae
mov
lahf
lea
push
jge
jp
ret
loope
add
adc
jle
sbb
gs
adc
repnz
into
pop
xor
push
outsb
mov
jmp
jg
push
pop
mov
ret
cmp
sbb
xchg
jl
add
xor
out
add
dec
arpl
add
mov
fnclex
std
or
fcoms
lods
aas
jb
mov
jbe
dec
push
insl
orb
jmp
xchg
add
mov
adc
xor
jge
paddb
sbb
es
xor
fsubrl
push
js
adc
js
stos
jae
cs
jnp
sub
xchg
lea
jnp,pt
das
xchg
loopne
sbb
inc
pop
and
ds
aad
push
clc
xchg
mov
adc
dec
pop
or
pop
push
repnz
test
xor
dec
push
inc
jecxz
mov
add
push
fmuls
cmp
cmp
test
push
addr16
scas
push
jns
dec
sbb
or
mov
mov
jp
push
frstor
test
and
stc
arpl
loope
mov
sub
mov
fstpt
nop
inc
dec
fcmove
xchg
mov
jb
scas
inc
shl
xor
mov
leave
sahf
jo
and
nop
push
xchg
insl
test
or
daa
push
aad
int
leave
ficoms
test
mov
inc
pop
ja
adcb
loopne
pop
push
and
aaa
lods
ss
into
dec
addr16
negb
mov
push
add
sbb
ds
scas
outsb
push
out
cmpl
lahf
cmp
pop
add
arpl
call
inc
adc
fstpl
lcall
fiadds
popa
orl
xchg
inc
mov
cli
shl
insb
mov
inc
scas
and
add
xor
outsl
jae
inc
pop
mov
dec
xchg
hlt
push
mov
in
js
xchg
mov
mov
add
aad
pop
cmp
sub
pop
xchg
movsl
fimull
test
pop
jns
sub
std
push
fnsave
scas
out
daa
inc
add
add
mov
sbb
sub
cmpsl
sbb
mov
shll
pop
xorl
or
jae
daa
or
xchg
sahf
push
xchg
sbb
inc
into
pop
mov
andb
dec
imul
in
inc
cltd
fisttpl
pop
pusha
in
push
fisttpl
jbe
xchg
pop
sub
outsl
xor
xlat
push
adc
mov
mov
in
movsb
mov
pop
push
mov
push
xor
push
cmp
std
scas
cmc
fisttps
cmpl
sbb
and
out
je
jp
jl
fmull
push
pusha
rolb
hlt
sbb
fiaddl
dec
out
jnp
xlat
cmp
and
rcrb
dec
cmp
xchg
jnp
jmp
sbb
dec
pop
pop
shr
sbb
inc
jp
and
xor
outsl
aam
add
mov
ja
adc
lods
shrl
in
add
lds
ret
lock
push
pop
fcom
add
jae
mov
jo
xor
sbb
or
xchg
ror
adc
xchg
jns
stc
inc
loopne
inc
int
test
addr16
dec
sbb
adc
cmp
rep
bound
aaa
inc
insl
lods
xchg
sub
or
sti
or
loopne
cmp
add
pcmpeqw
dec
fldcw
loope
cmc
push
dec
aam
mov
and
fwait
jmp
mov
fsubs
sub
outsb
repz
ret
in
inc
mov
cmp
jge
push
test
xor
aas
add
add
rolb
call
adc
rep
xchg
cli
and
adc
mov
push
scas
fisttpll
repnz
push
push
out
pop
icebp
ds
sub
lea
or
add
pop
scas
idivb
and
inc
rol
enter
add
fstpt
and
push
adc
cmp
insb
xor
lahf
mov
xor
mov
enter
out
push
push
rcll
in
dec
xchg
cmp
jmp
xlat
and
adc
push
loope
pop
ret
data16
in
popf
jbe
int3
jae
inc
pop
mov
pop
sti
pop
sahf
push
mov
inc
stos
xchg
out
xchg
ret
xlat
hlt
stos
add
sbb
data16
leavew
cltd
out
movsb
into
test
push
bound
jne
push
repnz
cwtl
cmpsl
enter
pop
in
xor
adc
mov
jbe
lret
ud1
fwait
cmp
jmp
jecxz
outsl
sub
jmp
lcall
pusha
adc
and
jo
pop
inc
sub
xorl
lcall
xor
mov
jb
xor
ret
leave
rcrl
dec
jbe
movsb
das
aaa
int3
mov
pushf
in
sarb
inc
jns
xchg
push
mov
shrl
ret
dec
lret
lea
andb
cs
mov
cmc
mov
lcall
mov
pop
aad
cltd
jmp
xor
fists
xor
xchg
xor
adc
stc
cmp
fisttpl
fisttpl
arpl
xor
dec
int
mov
jno
xor
scas
jg
mov
lret
test
mov
int3
push
ficompl
jl
mov
jb
iret
sub
mov
pop
scas
aaa
aad
mov
orb
pop
arpl
dec
shrl
push
ror
sub
fwait
pop
xchg
mov
mov
and
mov
jecxz
adc
mov
xor
mov
rcr
sbb
ja
pop
mul
dec
fmul
aas
stos
mov
daa
cmp
loope
cmp
stos
mov
test
cmc
push
fstl
call
mov
stos
add
add
mov
inc
sarl
popf
fsubrl
cltd
dec
aaa
adcl
imul
ret
fstp
dec
add
cmp
adc
sub
roll
dec
loop
cltd
icebp
icebp
cmp
daa
jmp
test
frstor
jns
ss
testb
mov
shl
add
sarl
negl
fistps
or
xor
push
in
or
mov
ss
xor
shlb
xorb
aaa
dec
dec
adc
popa
lcall
fst
mov
fdiv
inc
jmp
mov
gs
pop
sbb
or
icebp
add
idivl
xor
aas
movsb
inc
push
scas
scas
fs
dec
inc
dec
pop
jns
into
hlt
adcb
enter
push
pop
lods
movhps
sbb
cmpsl
mov
mov
mov
imul
sbb
push
int3
mov
or
jl
and
aam
sbb
sbb
outsl
sub
out
ljmp
ss
bound
or
fimull
sub
insb
xchg
ss
sbb
aaa
jns
in
test
movsl
loop
cmpsb
lret
push
test
push
jnp
sbb
insb
sub
xor
cmpsb
jmp
std
imull
pop
test
push
sbb
add
lods
lea
and
cmp
inc
lret
xor
mov
imul
dec
xchg
pop
jb
cmpsb
test
outsl
push
sub
push
inc
push
mov
repnz
jbe
jp,pt
xor
mov
inc
orps
out
mov
pop
sahf
xlat
adc
sub
fistpll
aaa
enter
sub
xchg
sarl
imul
push
sbb
jbe
push
xor
cltd
pop
fstl
lret
std
mov
js
mov
jle
test
js
xchg
pop
push
inc
iret
pop
pop
mov
mov
or
lea
mov
out
sub
fs
enter
int
cld
inc
push
sub
dec
mov
mov
jo
fildll
and
iret
adcl
lods
enter
test
iret
test
jmp
in
scas
repnz
out
int3
jecxz
in
cmovs
and
call
mov
mov
or
inc
sub
inc
mov
cmp
in
iret
inc
xor
popa
inc
cs
arpl
cs
cmp
jle
adc
ffreep
fwait
and
sti
in
loopne
insb
xor
out
out
xchg
jl
popf
inc
testl
lods
adc
arpl
cmpsl
arpl
rol
jbe
scas
mov
xor
sahf
lods
inc
dec
lods
nop
xlat
ljmp
sub
adc
rcrl
cli
in
mov
inc
in
pop
repz
sbb
loopne
in
adc
movsl
mov
repz
jnp
cltd
mov
aas
popa
movsl
insb
cmc
aaa
out
incl
ret
inc
or
push
mov
lds
xchg
mov
mov
push
fwait
daa
daa
pop
sub
xchg
cmpsb
xchg
cmp
mov
lahf
or
dec
adc
mov
fidivrs
cmp
mov
rclb
rol
pop
bound
xlat
inc
adc
and
lea
cmpsb
insl
je
bound
cmp
jns
pop
fcom
adc
ret
sbb
push
xor
fwait
push
or
xchg
inc
or
enter
jl
out
sub
lea
lock
xchg
into
hlt
push
es
xor
ja
jne
hlt
int3
mov
xchg
jne
loop
adc
out
and
pop
xor
or
push
pusha
and
lret
ss
arpl
mov
push
add
pop
jns
sub
jge
outsl
push
mov
insl
sbb
xor
jo
pop
flds
out
mov
movsb
das
jle
and
popf
cltd
ds
pop
test
or
cwtl
mov
je
xchg
pop
adc
inc
shll
lcall
sarb
ret
popf
xchg
nop
ror
sbb
inc
push
scas
leave
mov
mov
call
mov
ja
arpl
cmp
insl
fcoms
xchg
or
in
jne
lea
jl
cmp
stc
ss
dec
jno
pusha
daa
jmp
fstpt
push
mov
lea
or
dec
in
jg
jb
aaa
sbb
push
sub
fcmovbe
iret
jl
pop
or
daa
xor
xor
push
lcall
xchg
or
push
dec
dec
rclb
inc
add
iret
inc
iret
xor
lret
mov
mov
and
inc
pop
adc
pop
jb
and
sbb
sbb
adc
adc
into
cld
pop
cmp
jge
jg
add
sub
testb
scas
cli
add
out
lock
mov
lahf
out
mov
repnz
pusha
dec
xchg
xchg
mov
and
or
aad
jb
inc
push
stos
cmp
testb
xor
jmp
popa
cmpsl
jl
sub
push
cltd
mov
mov
mov
inc
mov
mov
jo
mov
ljmp
jmp
lock
pop
rol
mov
mov
scas
scas
popa
out
lret
cmc
insl
lahf
fists
jae
hlt
cmpsl
mov
arpl
orb
and
inc
aam
adc
cmpsb
push
push
and
mov
lcall
mov
imul
decl
ja
jns
lock
imul
and
es
cld
icebp
inc
adc
cs
jnp
add
dec
andl
xchg
shrb
mov
out
call
jl
clc
mov
mov
fnstsw
es
imul
or
xchg
fneni(8087
imul
in
int
lret
scas
fstps
cmp
xor
enter
cli
lret
jne
sbb
adc
ss
test
out
sti
mov
inc
shl
or
mov
and
cwtl
cmp
fs
cmp
dec
cmovs
lcall
pop
mov
mov
fwait
jno
xor
jne
adc
leave
xchg
jmp
jbe
xchg
adc
push
cmpsb
mov
xlat
in
shl
or
fdivrp
fcom
fmull
mov
jmp
jne
add
call
push
fnsave
xor
mov
xchg
aad
mov
fsubl
stc
sub
pusha
inc
xchg
enter
pop
xchg
pop
add
mov
out
inc
adc
add
mov
sarb
sbb
or
shlb
leave
add
ljmp
mov
nop
xchg
sbb
and
fimull
imul
faddl
or
add
xchg
aam
xor
in
jae
test
dec
cmc
and
testl
sub
mov
stos
movsl
add
mov
mov
xor
cltd
xchg
inc
lods
lock
mov
lea
imul
stos
sahf
push
xchg
jne
push
dec
daa
jns
sub
ljmp
pop
sub
das
inc
sub
cmp
cmc
jnp
adcl
pop
fwait
popa
arpl
mov
lret
stc
dec
dec
jb
sti
jo
add
je
cmp
fstl
les
mov
push
orps
cld
mov
out
mov
inc
inc
dec
sbbb
mov
cmc
popaw
jno
xchg
shll
xor
test
mov
and
out
dec
and
jg
scas
sbb
repz
jle
xor
out
mov
jmp
lock
fwait
adc
cmpsb
fildl
xchg
rorb
pop
outsl
ret
fwait
icebp
mov
ss
xchg
or
xchg
push
lea
pop
sub
jmp
jl
pop
test
push
inc
add
sub
flds
push
mov
mov
roll
jne
cli
adc
subl
mov
jbe
bound
fimull
test
dec
fnstcw
mov
pop
inc
lods
insl
xor
fwait
pusha
popf
int3
xor
or
jno
imul
mov
sahf
stc
and
subb
aad
xor
in
je
sbb
jge
outsl
aas
insb
push
push
add
mov
fwait
std
std
and
jmp
ret
adc
jne
cmp
add
movsb
push
jo
or
fldl
cltd
inc
dec
repnz
int
insb
ljmp
ljmp
aaa
jp
stos
roll
int
aam
or
ret
dec
jg
xor
push
call
cltd
loop
aas
dec
cs
icebp
or
lret
mov
mov
jnp
stos
fisubrl
and
hlt
pop
sbb
sub
cmp
mov
jecxz
push
repnz
cld
fs
in
jno
mov
pop
mov
push
jb
xor
out
and
jnp
add
adc
fstp
dec
push
cltd
imul
add
in
cmp
jb
add
mov
fisubrl
and
xchg
sbb
mov
mov
test
lcall
mov
push
insb
pop
inc
lock
cmpsl
in
or
mov
lahf
push
cli
je
dec
sub
push
cmp
mov
jecxz
aam
mov
and
cmp
mov
arpl
adc
xchg
jl
imul
mov
jmp
fldt
hlt
mov
out
jge
int3
dec
xchg
fcoms
ds
xlat
out
fiaddl
movsb
add
out
dec
pusha
xchg
movsb
xchg
ljmp
nop
inc
dec
mov
push
lahf
add
mov
les
jne
cmp
mov
popa
stos
mov
or
xchg
xchg
inc
cwtl
cli
push
and
adc
adc
push
test
mov
sub
sub
lret
push
xchg
imul
jae
loope
dec
mov
repz
push
pop
popa
icebp
dec
xor
jle
mov
and
test
jmp
mov
jns
pop
outsl
jl
jp
mov
mov
dec
scas
out
addr16
cld
add
pusha
jb
push
ss
gs
adc
mov
fsubp
mov
pop
in
mov
loopne
scas
es
in
mov
cmp
sub
add
insb
out
pushf
add
dec
push
and
xlat
imul
rolb
push
push
out
add
lods
mov
hlt
jge
cmp
jecxz
jge
mov
add
addb
xor
inc
cmovge
add
xor
dec
xor
imul
addb
jns
adc
jge
add
cmpsl
xchg
sbb
add
mov
pop
add
cmp
les
clc
xorl
pop
jp
ror
xor
jae
sbb
jo
xchg
jg
mov
les
sti
aas
jo
mov
sub
mov
nop
js
pop
mov
sub
pop
cmpsb
cs
out
or
inc
pop
xchg
sub
xchg
sbb
cmp
sbb
mov
lret
cmpsb
mull
out
enter
xchg
rcrb
inc
dec
aad
pop
sbb
or
mov
dec
pop
cwtl
jl
inc
sbb
cmp
sub
lret
fistpll
fimull
mov
xchg
xchg
test
fs
popf
adc
cmp
adc
aas
jp
jns
ljmp
cmpsl
xchg
push
pop
mov
jle
insb
stos
mov
mov
clc
add
xor
push
test
jp
xchg
in
xchg
sti
and
mov
sbb
je
jno
mov
pop
xchg
in
lahf
add
cwtl
popf
sbb
mov
sub
pushf
addr16
pushf
pop
jb
sahf
mov
adc
or
sbb
push
insl
pop
movsl
xchg
mov
inc
fs
push
xchg
jg
dec
pop
xchg
ds
pop
scas
xchg
add
jge
cmpl
leave
gs
sbb
xor
adc
scas
push
pop
and
loope
mov
les
mov
lds
mov
orb
xor
inc
fildl
inc
jecxz
mov
mov
pop
mov
cwtl
sub
dec
dec
aam
lods
negl
leave
test
mov
sub
push
pop
lahf
cmp
imul
xchg
out
sbb
aas
xor
push
pop
es
xchg
mov
jp
push
push
jl
add
cmp
adc
fcomp
sbb
or
ja
pop
pop
mov
inc
and
dec
push
outsb
adc
lret
xor
aaa
loop
jecxz
int
xchg
cli
pop
xor
faddp
xchg
push
shlb
mov
mov
shlb
cmp
jne
push
arpl
jb
addr16
pop
add
loope
fs
inc
in
jae
insb
sbb
callw
inc
pop
outsb
shrl
xchg
sarl
or
lock
sbb
add
xchg
mov
xor
xor
push
insl
adc
scas
jl
dec
rep
lock
xor
dec
and
cmp
push
mov
mov
cwtl
mov
add
xchg
or
inc
jb
jp
aaa
xor
adc
outsb
mov
jb
shll
rol
jmp
call
jge
cmp
rcl
pop
rcrb
xchg
arpl
adcb
andl
cld
add
cmp
push
test
jp
cmp
lock
xchg
out
pop
or
mov
jno
inc
clc
call
pop
xchg
and
dec
cmp
jno
sbb
fwait
sub
and
mov
les
adc
and
push
inc
jmp
add
movsl
pop
dec
jae
sti
push
xchg
cmp
pop
je
xorb
js
imulb
jle
rcl
in
jae
or
fidivrs
pop
icebp
dec
xchg
shlb
rcll
mov
fimuls
pop
or
push
dec
cmp
ljmp
xor
or
fs
repz
add
push
pushf
pop
xor
mov
mov
mov
xchg
push
cmc
ja
and
test
jecxz
int
div
shl
mov
neg
jp
fcmovnbe
jo
adcb
pop
ret
movsb
ljmp
ret
add
call
xor
rol
icebp
cmp
sbb
adc
sbb
iret
lock
outsb
ja
mov
mov
xor
xlat
mov
repz
inc
push
xchg
cli
inc
ja
dec
mov
fsub
lds
or
icebp
fwait
out
sbb
icebp
and
call
adc
filds
jns
arpl
scas
cmp
jle
mov
mov
cld
or
inc
fidivs
sub
mov
xchg
test
pop
leave
push
mov
adc
dec
js
rorb
pop
out
mov
arpl
bound
or
pop
fsubs
inc
jb
jl
jne
stc
data16
mov
cmp
jns
push
push
xor
push
clc
stos
repz
sbb
push
rcrl
pop
popa
pop
loope
sub
aad
mov
arpl
out
je
push
pop
sbb
mov
pop
dec
push
ret
mov
jbe
out
cltd
inc
loopne
js
xchg
sahf
xchg
fadds
bound
jne
sbb
lock
mov
aas
xchg
lahf
push
xchg
mov
push
dec
inc
cmovnp
push
dec
jb
sbb
test
mov
addl
stc
xor
imul
mov
jecxz
mov
lods
scas
shlb
add
adc
add
pop
mov
mov
jle
cli
xchg
lcall
xchg
inc
lock
into
push
or
je
fsts
xchg
lds
dec
dec
mov
lods
aam
xor
push
imull
jle
mov
and
mov
lcall
out
lret
sub
aam
insl
pushf
sti
lods
insl
add
je
lock
mov
sub
inc
xchg
dec
jle
lahf
add
ret
add
or
dec
imull
mov
or
jb
dec
adc
xor
or
outsb
dec
jne
or
xlat
jnp
dec
push
mov
dec
out
xlat
lock
fdivp
pop
stos
cwtl
sbb
xchg
jl
push
ss
shlb
mov
adc
in
sbbl
pop
cmc
dec
in
outsb
jmp
iret
nop
or
dec
lcall
push
xor
cmp
aaa
sub
mov
inc
jae
iret
xchg
inc
lcall
adc
sub
mov
stos
jg
jge
mov
xor
loopne
add
pop
out
jb
aam
insb
sar
fucom
fldenv
mov
loop
into
lock
sti
insl
fwait
mov
sbb
cmp
xchg
mov
std
imul
mov
ret
inc
sahf
cld
inc
push
inc
mov
adc
push
aaa
sbb
ror
xor
pop
andb
or
cltd
ljmp
inc
ret
lcall
sbb
outsb
dec
mov
add
pop
dec
mov
or
in
mov
adc
stos
cltd
mov
push
xor
or
ds
pop
jge
pop
jmp
stos
mov
or
jmp
fs
push
fs
pop
mov
ret
dec
rorb
in
jmp
mov
lods
pop
ficoml
imul
cmp
pop
dec
or
dec
shlb
clc
xchg
cwtl
fimuls
add
push
stc
ds
scas
in
adc
cmp
test
ficoml
or
mov
xchg
fs
adcl
fucomi
xchg
jne
and
leave
sbb
xchg
cs
dec
jp
jbe
rcrl
sahf
js
and
mov
call
into
outsb
repnz
push
mov
jb
xchg
cld
xchg
cld
ja
aam
shrb
lcall
ficoms
rcrb
ljmp
call
std
sub
pushl
fwait
popa
shrb
sti
add
inc
jl
sbb
std
jae
sub
xorl
shlb
xchg
cli
mov
fldl
je,pn
dec
jge
xchg
sub
mov
fnstcw
jbe
or
pop
bnd
aad
and
movsb
pop
inc
cmp
arpl
xchg
dec
mov
fnsave
fsubrs
mov
pop
stc
aas
push
stos
sub
out
push
push
mov
pop
loopne
outsb
aaa
cmp
adc
or
xchg
outsb
or
insb
das
in
mov
mov
xchg
cmp
arpl
jno
sbb
dec
test
hlt
add
jge
fnstenv
add
iret
mov
jp
loopne
daa
xchg
call
pop
pop
outsb
cmpsl
clc
mov
gs
out
mov
out
aam
mov
jmp
imul
outsl
or
aas
dec
addr16
mov
jp
sub
push
sub
xchg
daa
xorl
cmc
and
fninit
lock
xor
test
lods
sub
mov
lret
inc
scas
lds
shrb
pushw
loop
lret
push
push
push
xor
mov
fs
push
cmc
imul
cmpsl
mov
dec
jo
lea
subl
jge
mov
and
lea
jecxz
das
jge
sbb
scas
push
pop
dec
ljmp
add
inc
repnz
add
arpl
inc
add
xor
push
jecxz
adc
or
mov
lds
mov
cmpl
subl
pop
xchg
cmp
or
decl
pop
arpl
sbb
repnz
sbb
xchg
lea
mov
add
invd
xlat
cwtl
je
adc
xor
xor
push
es
mov
jb
inc
cmp
jecxz
pop
imul
mov
incl
fnstenv
call
jno
mov
pop
xchg
dec
data16
jp
imul
mov
mov
fnstsw
cld
popf
gs
inc
adc
pop
and
mov
inc
mov
push
daa
jbe
adc
ljmp
mov
outsb
in
cmp
imul
push
imul
out
mov
loopne
loope
adc
push
jp
in
cs
push
in
adc
cmpl
into
int3
adc
xor
outsl
adc
ds
push
mov
scas
rorl
pop
mov
rcrb
cmp
ret
js
es
jno
cld
pop
mov
adc
add
popf
pusha
mov
mov
fcomip
test
movsl
mov
sbb
mov
push
cmpsb
sbb
test
jno
and
dec
xor
stos
pop
imul
in
dec
cmp
stos
inc
push
mov
adc
pushf
add
in
adc
cmp
cmp
cltd
imul
inc
xlat
mov
jo
stos
add
xor
inc
push
jb
cmp
jp
int
test
mov
dec
jge
in
cmpl
mov
add
icebp
jp
adc
ds
mov
adc
jl
mov
cmp
notl
pop
divl
xor
xchg
sub
xchg
mov
icebp
pop
lock
fdivr
sbb
push
push
pop
insl
mov
and
scas
push
sbb
shll
vmovaps
add
cmpsl
call
rorb
popf
popa
xchg
mov
inc
das
inc
xor
jmp
je
int3
cmp
mov
stos
insl
pop
and
jne
ss
js
fadd
adc
out
aaa
ffree
inc
mov
iret
int
js
sarb
cltd
sub
fs
je
pop
pop
imul
mov
inc
or
js
in
cmp
shl
or
push
lret
int3
sti
inc
roll
fldcw
int3
pop
cmc
movb
sbb
push
and
mov
pusha
lahf
xchg
xchg
sub
xor
sub
add
pusha
sub
mov
lods
xchg
add
push
ja
cmp
arpl
in
cli
inc
repz
cmp
jne
div
call
rorl
and
cmc
fwait
dec
loop
sbb
pushf
int
int3
mov
xchg
jbe
or
mov
inc
mov
lods
push
or
adc
push
int
lds
jbe
xor
je
std
mov
and
sahf
adc
and
pop
mov
mov
dec
mov
add
lcall
dec
out
push
dec
lods
test
xor
jecxz
xchg
arpl
mov
cs
mov
test
mov
mov
lcall
pusha
test
sub
fcmovbe
scas
sub
ror
fwait
addb
push
inc
icebp
mov
jg
ret
inc
inc
int3
fsubrs
push
and
mov
adc
idivb
mov
xchg
cli
pusha
jmp
loopne
fcmovne
es
push
scas
shrl
pushf
cmp
arpl
cmp
cmpsb
aad
sub
cltd
jl
fsts
cli
or
out
mov
rcll
mov
cmpsb
fimull
pop
sub
shlb
push
xchg
push
mov
and
cmpsl
xchg
xchg
fidivrl
cmp
or
jecxz
xchg
or
loop
xor
stc
cmpsl
rcrl
int
jge
mov
mov
inc
out
jo
jecxz
lret
sbb
aam
pushl
cmp
imul
test
jmp
loop
shll
in
or
mov
aaa
out
mov
call
lcall
pop
cld
aas
jo
jb
dec
in
out
xor
test
inc
rcrl
out
sbb
adc
or
mov
outsb
daa
and
scas
stos
xor
fiadds
shlb
int
movb
mov
push
in
addr16
xchg
add
subl
out
in
rcll
xchg
outsb
sbb
or
les
fwait
cli
sbb
jbe
jne
jo
mov
loopne
mov
push
scas
sub
inc
dec
stos
imul
sub
aas
popa
call
xchg
pop
in
adc
nop
fs
mov
xor
mov
xchg
test
in
inc
and
lea
inc
pop
nop
pop
addl
sbb
mov
cmpsl
mov
xchg
cld
jbe
loop
pushf
xor
mov
mov
jns
sub
mov
inc
mov
cmp
or
push
imulb
push
mov
rcrl
dec
mov
sahf
mov
filds
cli
ss
mov
mov
pusha
jg
ds
into
mov
fidivs
jne
sub
xchg
sbb
insb
popf
leave
lods
push
adc
les
mov
je
cs
push
out
sub
inc
stos
test
xchg
adc
mov
inc
sahf
popf
repz
jge
cmpsl
add
mov
and
icebp
add
xchg
or
jnp
or
lcall
inc
popf
and
push
mov
jo
inc
inc
aaa
cmp
push
fdivrl
inc
mov
cmp
mov
adc
rcrl
xchg
and
fwait
shrb
mov
xor
sub
push
or
flds
sub
xor
js
xchg
int
outsb
push
lea
movsb
fisttps
inc
xorb
sub
add
cmp
fs
hlt
subps
pop
pop
pop
inc
cmpsb
mov
ljmp
cld
jp
push
mov
push
adc
loopne
sub
xor
and
popf
sbb
pop
in
fcmovnb
sub
inc
jbe
or
jne
call
cld
mov
in
loop
push
dec
xor
jle
pop
add
scas
jge
rorb
lods
sbb
jl,pt
jno
jecxz
inc
inc
rcrl
rol
xlat
mov
cmpsl
sub
pop
ds
and
leave
daa
mov
cmpsl
and
xor
fcompl
cmp
xorb
inc
pop
pop
stos
enter
dec
adc
mov
aas
movsb
out
pop
push
enter
xor
icebp
mov
sbb
push
aam
loope
push
inc
jmp
js
push
sbb
out
inc
jp
lret
mov
push
imul
add
repnz
dec
out
mov
rclb
and
mov
xor
leave
mov
cmp
and
add
inc
pushf
arpl
mov
insl
sbb
icebp
and
inc
sahf
ds
add
or
in
add
mov
adc
imul
faddl
sub
xchg
outsl
jo
jl
enter
xchg
es
jne
movsb
repnz
stos
push
pop
push
push
inc
fiadds
imul
test
or
dec
movb
dec
push
mov
arpl
imul
cli
mov
mov
inc
pop
pop
divl
push
cmp
dec
dec
jp
pop
cld
jmp
push
pusha
xor
stc
xchg
testb
lock
sub
ss
hlt
flds
dec
xchg
je
xor
add
ss
sub
ljmp
sahf
sub
adc
dec
and
sub
push
int
dec
fldenv
popf
fidivl
test
add
push
jp
clc
cltd
pop
pop
mov
adc
adc
push
inc
adc
sarb
or
ss
and
mov
mov
in
aas
stos
aaa
or
outsb
shrb
pop
jecxz
popf
repnz
sarl
sub
push
idiv
push
lea
outsl
test
mov
sti
sahf
shlb
add
adc
mov
hlt
push
dec
popf
add
jnp
lcall
pop
rcl
pop
rorb
mov
jle
xor
push
xor
sti
loopne
rcr
add
dec
inc
and
pop
lahf
pushf
xchg
aas
or
movsl
push
fwait
dec
dec
pop
rcrl
xchg
jb
call
sub
fiadds
dec
inc
dec
jbe
outsb
push
jb
fiaddl
neg
mov
xor
fimull
fsub
es
mov
pop
xor
and
jno
push
popa
xor
cmp
xchg
xchg
dec
dec
push
fmull
sbb
das
fcmove
rolb
scas
mov
jge
aas
lcall
dec
mov
ss
mov
xchg
insl
sti
imul
sub
int
stos
add
cmp
cmp
scas
out
add
cli
and
enter
cltd
enter
in
xor
loopne
enter
xchg
pop
sbb
sbb
sarb
xor
in
mov
push
repz
push
push
out
pop
subb
fcoml
arpl
ljmp
lock
push
repnz
rcl
xchg
pop
dec
bound
xorl
jmp
rcrb
sub
mov
jmp
jmp
scas
mov
mov
out
cld
cmp
stos
inc
mov
and
jns
cs
mov
sbb
and
push
dec
dec
lods
mov
and
nop
enter
dec
xor
mov
mov
xor
and
sub
or
or
in
xor
mov
ret
in
mov
mov
cwtl
js
test
mov
addb
sub
iret
xor
dec
roll
or
scas
fdiv
aas
mov
lds
inc
sbb
roll
movsb
lret
cmp
imul
add
sbb
mov
bound
js
cmpsb
iret
out
jns
fstpl
add
mov
push
dec
sar
shl
popf
mov
dec
dec
pushf
mov
mov
aas
inc
in
xchg
pop
mov
mov
add
push
repnz
or
and
or
aad
cmp
sub
xchg
sub
fildll
movsl
pop
hlt
mov
sbb
mov
out
ret
in
sub
add
pop
xchg
jmp
loop
pop
xchg
mov
jmp
fcompl
mov
add
test
jecxz
jae
cmp
sub
cld
in
test
scas
loop
mov
xor
mov
neg
mov
jle
jecxz,pn
push
popa
adc
es
mov
stc
subl
mov
aas
cmpsb
cld
imul
lods
mov
stos
test
push
inc
mov
add
test
out
into
xchg
push
cli
repz
dec
push
in
repz
xchg
xchg
ss
scas
xchg
mov
mul
inc
bound
xor
or
iret
xchg
pop
data16
lret
fistl
fcomps
movsb
jle
mov
call
test
xchg
sbb
aam
sti
stc
push
push
es
stc
mov
mov
shll
add
pop
cwtl
dec
jecxz
fldl
adc
lret
aaa
mov
pop
insl
dec
into
pop
shlb
jle
int3
cmp
pop
jle
in
cmp
fldenv
sar
ds
cmp
mov
les
inc
push
daa
sbb
fidivs
subb
and
dec
out
jge
test
outsl
lock
mov
or
push
inc
scas
jle
arpl
ret
sub
sbb
sti
push
cmc
daa
push
mov
xor
in
ljmp
xchg
xchg
xor
inc
mov
jb
mov
xor
sarl
les
dec
popf
imul
or
out
notb
push
fisubrl
lret
jge
scas
out
arpl
and
jmp
in
repz
inc
into
xor
stos
mov
adc
push
arpl
xor
pop
jge
aaa
outsl
bswap
fisubl
or
sbb
insb
inc
popf
cmp
mov
mov
pusha
into
dec
das
sub
and
insl
mov
jg
push
push
cmp
ljmp
sub
pop
xor
rorl
inc
mov
mov
cmp
sbb
inc
cmp
jo
xchg
add
push
lea
push
arpl
cmp
add
mov
mov
shrb
jle
inc
sub
ds
pop
movsl
hlt
repnz
or
std
fldcw
mov
lcall
add
mov
add
in
iret
iret
jne
cmp
rorb
arpl
leave
test
ret
adc
cmp
xchg
pop
stos
bound
push
or
push
addl
lcall
mov
mov
test
mov
rcl
xchg
pop
loop
aad
and
dec
xchg
ret
cmpsl
out
fisubrs
outsl
nop
out
icebp
push
les
lea
inc
jmp
neg
imul
ds
aaa
jle
xor
ficoml
out
ror
cmpsb
cli
gs
ret
cli
mov
lock
sub
clc
and
outsl
ss
aam
mov
mov
pushf
pop
mov
dec
in
xor
mov
add
push
push
xchg
pop
dec
lret
lahf
pushw
xchg
ds
add
inc
add
adc
cmp
repnz
fsubrl
test
stos
add
scas
sub
pop
sti
cmp
push
cltd
mov
das
scas
ds
or
fistpl
outsl
loopne
fcoms
mov
iret
lcall
call
movsl
jnp
inc
cmp
ja
sub
push
xchg
xchg
mov
sti
pusha
sub
enter
sbb
jmp
addl
jne
in
stc
in
sub
sbb
mov
jae
xorl
loop
jecxz
and
push
or
js
sbb
sbb
les
pop
adc
out
loope
cmpsb
or
adc
outsb
outsb
arpl
mov
pop
mov
test
and
mov
or
in
pusha
mov
or
cmp
push
sub
mov
inc
mov
pop
and
nop
jecxz,pn
out
mov
lret
gs
jl
mov
mov
push
and
push
mov
and
push
xchg
xor
out
or
xor
xor
push
out
xor
arpl
cmp
fisubrs
and
xchg
or
and
jnp
cmp
jp
mov
rorl
in
jne
icebp
jae
mov
loopne
dec
clc
jae
add
sbb
out
inc
cmp
call
lret
jg
ds
jle
adc
psrlq
mov
std
arpl
addr16
or
mov
push
popa
adc
push
dec
ljmp
jmp
repnz
jnp
in
sub
jmp
rcll
nop
xchg
sbb
shrl
pop
mov
pusha
inc
faddl
jl
call
cmpsb
cli
out
mov
cmc
je
jmp
mov
pop
mov
fs
xchg
add
clc
andps
lock
aad
icebp
jle
mov
stos
sahf
lahf
sbb
sahf
out
xchg
movsl
pushf
mov
mov
mov
les
and
repnz
cmp
lock
dec
xor
lods
dec
cmp
nop
fistl
pop
and
push
mov
lret
dec
inc
sub
xor
call
pop
fldenv
inc
clc
repnz
jle
mov
push
xchg
sbb
push
ficomps
add
dec
and
cmc
scas
dec
loope
adcb
add
fildl
hlt
or
fcompl
iret
jecxz
dec
jnp
dec
pop
ret
out
push
hlt
xchg
push
fisubl
xchg
xchg
or
addl
leave
adc
push
xorb
fdiv
lret
insb
out
and
pop
mov
scas
lcall
jns
enter
iret
data16
repnz
loopne
mov
xchg
push
aaa
repz
aad
xor
iret
int3
dec
or
sbb
xor
xchg
ja
mov
pop
mov
dec
int3
out
out
in
in
nop
mov
addl
aaa
out
pop
sbb
add
push
sub
lea
or
push
int
mov
clc
sub
add
repz
call
in
addr16
out
lds
lret
in
insb
std
mov
imul
mov
mulb
adc
xlat
mov
xchg
jle
xor
daa
sar
cwtl
stc
add
mov
imul
jge
das
pop
cli
push
xchg
mov
movlhps
xor
cld
mov
clc
jne
mov
adc
or
mov
jmp
fildll
pop
insl
shlb
pop
cmp
xchg
xlat
fs
aaa
cmpl
scas
add
xor
in
sub
pop
lds
and
mov
pop
xor
out
sbb
dec
popf
xor
cmp
adc
xor
lret
and
adc
shlb
dec
jge
push
mov
in
inc
jmp
inc
imul
xor
xchg
push
rol
aaa
adc
adc
xor
mov
sub
and
fldcw
pusha
rorl
into
test
ret
cmpsb
push
ret
sbb
ss
dec
fnstsw
rolb
inc
mov
push
adc
jae
in
pop
faddl
hlt
or
imul
lds
mov
bound
addr16
loope
mov
mov
jmp
sbb
orl
je
sub
xor
bound
daa
sarl
leave
adc
pop
and
and
jbe
mov
and
bound
lss
cs
int3
and
sti
mov
sbb
movl
pop
bnd
ds
jne
scas
int3
call
lret
push
mov
push
imul
imul
imul
mov
arpl
xchg
jae
xor
add
cli
mov
lret
inc
in
testl
mov
out
cltd
sub
pop
push
cmp
cmp
mov
aad
jnp
mov
in
imul
scas
mov
fsubrl
adc
ret
out
adc
cli
add
mov
dec
icebp
notb
in
or
sti
lock
adc
add
sub
pop
lahf
cmp
fstpl
repz
mov
loop
mov
outsl
insl
ljmp
cli
cmp
testl
mov
inc
pop
ficomps
popa
mov
mov
loope
pushf
loope
out
sbb
mov
mov
cmp
push
mov
sbb
jns
imul
fildll
jbe
out
sub
sahf
jecxz
das
push
lret
inc
cmp
ja
add
sub
mov
push
sti
bound
or
je
fsub
frstor
daa
and
dec
scas
jnp
sbb
dec
inc
mov
shrl
sbbb
incl
pop
aam
outsl
inc
jp
cld
xchg
fists
loope
xor
xchg
sbb
lods
cmp
js
rcll
loope
sub
pusha
outsl
pop
ja
xchg
cli
xorb
jo
aaa
and
pop
mov
arpl
jbe
pop
outsb
jmp
pop
and
mov
cmp
jg
sti
inc
std
cmp
out
int3
cwtl
leave
cmp
bound
inc
inc
and
or
inc
mov
inc
insb
dec
insl
push
inc
inc
enter
add
jnp
aam
jo
aaa
insb
sti
sub
and
bound
inc
cltd
stos
inc
mov
push
xchg
push
xor
bnd
pop
not
sub
movsl
cld
shlb
iret
xchg
rcl
movsl
test
jecxz
shl
in
push
fdivrs
movsb
inc
mov
inc
dec
push
push
cmp
ja
enter
fstps
cmp
add
lods
add
xor
movsl
cs
mov
leave
shrl
and
xchg
iret
aad
lds
repnz
sbb
xchg
lret
cwtl
and
aaa
rep
dec
insl
xlat
adc
dec
sub
adc
mov
in
cmp
mov
dec
cmp
in
push
mov
xor
xchg
fucomi
lahf
jbe
mov
ds
scas
fiaddl
daa
cmp
pop
push
sbb
es
adc
mov
mov
dec
fsubs
add
jns
mov
or
lea
mov
push
test
xchg
jp
xchg
out
sub
cwtl
push
adc
dec
loope
xchg
mov
xchg
dec
ja
fisttpl
xchg
cltd
jo
shl
leave
jecxz
mov
jmp
stos
arpl
xchg
dec
ret
icebp
inc
out
push
jns
out
xchg
fstl
pop
lret
das
test
xchg
bound
and
stos
adc
inc
popf
stos
cltd
lar
adcb
push
and
and
jle
pop
add
mov
mov
xchg
mov
mov
inc
or
imul
sub
or
push
or
cmp
fnstsw
inc
xchg
je
mov
in
stos
pop
or
shlb
out
dec
mov
sarl
mov
punpckhbw
xor
cmc
jle
fidivs
fs
jno
out
repz
add
mov
outsb
inc
lea
sahf
sti
mov
and
or
imul
xor
dec
pop
insb
mov
bound
loop
fdecstp
fs
rcl
xor
in
xchg
roll
mov
jb
out
xlat
jnp
cmp
jmp
mov
mov
daa
mov
cmpl
push
out
push
xchg
push
push
inc
pushf
pop
inc
jns
mov
xlat
dec
adcl
pop
js
inc
lret
sub
shll
mov
add
jb
scas
jnp
mov
lods
cmpsl
jne
mov
enter
pusha
mov
popa
push
fdivs
push
add
adc
mov
add
ss
sar
lods
das
lahf
xor
aad
mov
inc
ret
push
jg
pusha
and
jnp
mov
ret
inc
sbb
out
sub
adc
xchg
test
aaa
out
data16
pop
xchg
add
loope
fs
lea
mov
mov
inc
bnd
cmp
jb
pop
jg
leave
inc
fildll
push
mov
sub
outsb
mov
mov
adc
push
loope
shll
shrb
insb
test
leave
mov
mov
sti
lea
pop
ss
cmp
mov
movsb
jge
cmp
mov
or
or
daa
sub
sbbb
pusha
stos
mov
fisubrl
sub
sbb
dec
ss
jns
mov
insb
add
fs
sub
idiv
ret
ret
movsb
test
push
std
jne
clc
out
subl
enter
gs
push
ret
pop
ss
jno
inc
cli
or
ja
stos
lahf
and
and
jge
stc
pop
sbb
mov
or
add
mov
add
out
or
dec
fnop
insb
or
std
fstps
inc
ja
dec
mov
cmp
push
jmp
jnp
adc
push
jbe
adc
fidivrl
mov
movsb
push
jp
loop
xchg
mov
mov
out
push
in
mov
test
xchg
push
and
mov
xor
bound
cmpsl
movsb
mov
and
mov
scas
xor
pop
xor
pop
cmp
jmp
adc
hlt
loop
mov
int3
iret
cmp
ja
adc
jno
movsb
cmp
data16
imul
sbb
outsb
fs
push
js
push
cli
out
out
xchg
popa
shl
mov
pop
sub
cmovno
ds
enter
push
pop
test
xor
gs
enter
fmulp
negb
mov
shl
sbb
jb
aam
adc
js
in
jl
mov
outsl
test
sbb
sbb
es
stos
push
mov
jl
ret
divl
push
jl
movsb
movb
push
jecxz
add
cmpsl
sbb
sbb
dec
das
adcb
cmp
addr16
imul
pop
and
and
jge
cmp
xor
iret
or
xorb
lcall
add
aam
mov
pop
imul
popa
mov
push
jb
jnp
sub
xchg
push
fisttpll
xor
aam
int
inc
inc
or
and
lret
sbb
cmp
jl
dec
sbb
mov
enter
mov
test
ljmp
data16
add
add
roll
mov
mov
js
popa
iret
daa
jne
test
pop
fdivrl
popl
test
ret
mov
push
movsl
or
push
cmp
int3
dec
jl
ret
add
stos
stos
orl
ljmp
std
outsb
jno
mov
bound
pop
decl
sbb
push
movsb
lods
imul
insl
aaa
les
cli
jle
pop
int3
mov
imul
add
sahf
pop
add
idivb
bound
bound
add
leave
stos
pop
fildll
clc
jmp
ficomps
xor
std
xchg
arpl
rcrb
sarb
loopne
xor
xor
adc
push
xor
cld
cmpsl
xor
lds
lret
mov
push
xchg
and
mov
mov
xchg
cmp
in
push
pop
or
xchg
ljmp
cld
mov
xchg
adcb
pop
aam
xor
xlat
stos
cmpl
ja
jle
into
data16
inc
or
dec
int3
mov
stos
jecxz
arpl
in
pop
adc
imul
das
jmp
subl
jnp
mull
add
data16
jb
frstor
cmp
out
shll
pop
or
out
ret
cs
mov
jmp
inc
xor
adc
add
lahf
leave
test
sbb
pop
addr16
pop
lock
pop
mov
insl
mov
loop
and
data16
jl
xchg
adc
ret
dec
sub
fistl
or
ficompl
push
sbb
cmpsb
mov
int3
push
nop
mov
pushf
add
sbb
pop
pop
insb
fdivl
and
jbe
cld
mov
jb
adc
cmp
fstl
jae
adc
fwait
mov
cli
adc
imul
fs
mov
in
in
or
shr
retw
adc
movsl
mov
dec
lock
or
pop
imul
push
jecxz
aad
xor
ja
sub
js
arpl
sbb
sub
mov
subb
outsb
xchg
mov
adc
daa
int
pop
fcmovb
sub
cld
inc
int3
push
pop
and
adc
ret
int3
sarl
lret
je
cmp
out
push
scas
clc
rcrl
fwait
in
pop
push
xchg
call
icebp
dec
or
jbe
sahf
mov
clc
rcl
loopne
ror
scas
and
in
gs
push
jg
dec
out
xchg
jg
push
js
inc
fnsave
pop
repnz
out
dec
cltd
in
mov
push
xor
divl
sbb
add
inc
xchg
mov
lret
cltd
or
add
or
add
cmp
notl
add
pusha
xor
nop
cmp
pushw
icebp
or
mov
mov
scas
and
rolb
adc
add
add
adc
call
out
repz
lcall
xchg
ss
sub
lcall
xchg
push
dec
ret
aam
xor
int3
imul
cs
pop
ljmp
push
sbb
jae
ljmp
sbb
jle
addr16
mov
cld
aam
and
xchg
lahf
mov
and
std
sub
incb
movsb
adc
xor
dec
ja
jbe
cltd
int3
fldt
repz
push
fwait
jno
sbb
push
icebp
sbb
lahf
cs
or
nop
pop
inc
dec
mov
out
xchg
pop
lea
outsl
test
aas
inc
or
leave
shlb
orb
xchg
push
mov
dec
mov
mov
cmp
inc
pop
pop
xchg
mov
jb
cli
jno
es
lcall
jns
pop
mov
sub
jge
inc
xor
adc
out
sbb
adc
mov
test
jmp
clc
push
xchg
iret
dec
add
pop
pop
fisttpl
cld
jg
ret
ds
pushf
je
pop
mov
push
adc
dec
inc
adc
insl
cmpsb
cwtl
mov
xchg
jp
negl
les
shlb
mov
xchg
rol
es
rorl
or
int
pop
push
dec
gs
add
pop
jb
or
pop
jecxz
push
in
dec
mov
pop
popa
stc
jo
adc
mov
adc
test
gs
jnp
push
loopne
ja
enter
es
bound
out
jne
daa
rcrb
gs
insb
lds
xchg
push
je
mov
scas
dec
cmp
jl
push
xchg
stos
or
hlt
inc
les
outsl
mov
out
rclb
call
lret
adc
addr16
aad
mov
inc
outsb
mov
lahf
not
mov
fistpll
cli
dec
pop
cmp
leave
subl
out
outsl
int3
and
call
mov
dec
adc
inc
pop
or
adc
cwtl
out
loop
add
mov
and
cmpsl
pop
cmove
mov
test
jno
push
mov
mov
xchg
xor
push
mov
sub
sbb
xor
jbe
dec
sub
loopne
inc
pop
inc
mov
pop
stc
shl
divb
stos
or
jbe
add
sub
clc
scas
fwait
jl
ret
cmp
ljmp
int3
ljmp
icebp
in
push
cmpsb
in
push
jbe
sbb
dec
pop
pusha
in
push
lret
mov
xchg
bound
mov
push
mov
das
inc
cmp
lds
cmp
xchg
subb
movb
cs
dec
fidivrl
inc
mov
rclb
sahf
mov
pushf
and
or
mov
pop
inc
mov
push
jmp
in
js
mov
mov
jecxz
cmp
lret
jmp
mov
lcall
rcrl
int3
xchg
stos
das
lods
addb
pushf
repnz
jmp
ja
inc
into
push
and
add
mov
and
js
imul
dec
and
xchg
jae
call
add
add
push
es
and
sahf
ret
sub
int3
sub
sbb
add
loopne
xor
dec
jno
das
outsb
jle
outsl
xchg
out
adc
pushf
or
mov
mov
add
fmull
mov
jne
sarb
xor
hlt
popa
mov
fcompl
xchg
xor
jb
jecxz
cs
adc
cmpsb
sbb
mov
js
or
fstpt
in
cmp
jo
das
shlb
sub
lods
sbb
popf
out
int3
js
pop
sarl
mov
xchg
jne
lret
xchg
dec
dec
jnp
inc
mov
icebp
fsubl
lahf
in
call
mov
movsl
xor
test
mov
and
lret
jecxz
ss
dec
dec
add
xchg
out
pop
lahf
cmp
sub
cld
sbb
decb
call
add
leave
dec
insl
arpl
and
xchg
loop
lea
mov
jg
je
rorb
sub
push
add
shl
testl
daa
idivb
mov
popf
inc
mov
aam
push
dec
xchg
notb
cmc
insb
imul
into
dec
xor
cli
mov
pop
or
rorl
push
shrl
xchg
and
inc
sub
incl
les
hlt
mov
push
mov
and
inc
lret
or
ja
rorb
inc
or
jns
jb
sub
pushf
jmp
add
imul
call
add
lods
xor
inc
mov
rcrl
andl
inc
std
addr16
mov
adcb
jl,pn
lret
jbe
xchg
fiaddl
xor
in
jge
mov
cs
mov
int
dec
pusha
add
mov
adc
leave
mov
testb
sub
in
mov
in
addr16
testl
mov
lods
sub
imul
and
in
sbb
xor
or
data16
sub
jb
add
cmp
in
xor
stos
sub
mov
cli
push
loop
xor
icebp
add
fsubs
xor
push
mov
gs
xor
hlt
and
arpl
mov
jecxz
lock
shll
mov
cmc
mov
imul
test
push
int3
sbb
pop
add
push
mov
testl
or
xor
mov
jnp
shrd
push
xchg
adcb
xchg
int3
shlb
xchg
xchg
aad
xor
sarl
dec
jl
clc
ret
push
cs
and
push
lea
aad
cmpsb
into
leave
popf
test
inc
dec
cltd
aaa
cli
pop
repnz
addb
dec
movl
roll
mov
int
mov
insb
call
dec
and
push
jbe
mov
test
jg
sub
jo
ss
mov
pop
xor
push
push
xchg
push
sub
sub
jmp
sbb
lahf
stos
inc
dec
sbb
pop
dec
push
inc
cmp
into
mov
inc
std
mov
push
popa
testb
xor
sahf
pop
andb
jmp
mov
pop
xor
aaa
xor
mov
mov
hlt
mov
push
repz
adc
push
or
or
testb
mov
cmpsb
and
fists
push
fs
data16
cmpb
jle
data16
add
pop
shll
cmp
jnp
pop
fwait
mov
push
or
adc
adc
jl
push
out
roll
ja
lcall
xchg
xor
jnp
or
movsb
bound
and
xor
jle
les
inc
test
push
lahf
enter
jns
or
xchg
subb
xchg
fldenv
pop
mov
outsl
dec
inc
jbe
pop
scas
fstpl
push
mov
bswap
mov
pop
in
jecxz
mov
iret
xchg
cld
mov
clc
addb
fwait
cmp
mov
jb
sahf
add
jecxz
and
mov
mov
stos
jne
push
pop
jns
xchg
mov
pushf
mov
mov
add
cmp
and
adc
jo
push
test
addb
sbb
stc
sbb
lret
ss
xor
lods
mov
cmp
loopne
repnz
dec
fdivs
mov
popa
inc
xchg
test
popa
mov
ljmp
mov
ret
lods
in
jecxz
cmpsb
rcl
fidivrl
das
xor
fiaddl
jne
push
or
sbbb
xchg
insl
push
outsl
jae
rcr
mov
mov
int
outsb
popa
cwtl
inc
shlb
cmp
in
mov
sbb
popw
fucom
lret
js
mov
cmpsl
jo
or
stc
and
in
pop
aam
xor
aas
ficompl
pop
or
sahf
out
xor
mov
pop
xchg
imul
pusha
cli
push
push
addr16
cs
es
mov
dec
pusha
mov
cmp
jcxz
repz
lcall
divb
mov
bnd
test
inc
add
inc
and
and
xor
shl
cs
cmpsl
mov
stos
cld
mov
ljmp
sub
pop
addr16
pop
leave
pusha
sbb
addb
push
mul
call
hlt
cld
stos
addl
push
mov
mov
ljmp
mov
sbb
aam
test
dec
lock
clc
cltd
mov
push
xor
mov
inc
loope
xlat
insl
les
inc
jle
dec
test
jnp
jnp
test
popa
stos
divb
mov
outsb
inc
enter
and
pop
movsb
aam
loope
xor
inc
xor
in
addr16
pop
dec
mov
sub
mov
mov
dec
int
and
mov
hlt
xor
frstor
stos
call
or
push
arpl
jecxz
stos
je
add
inc
pop
aaa
cwtl
xor
mov
aam
icebp
enter
xchg
push
cmp
loop
inc
cmp
jg
cmp
add
cld
xchg
cmp
sub
aaa
ss
pushf
mov
add
sbb
cmc
push
je
add
mov
rcr
dec
xchg
sub
or
or
jo
jne
push
cmovno
out
push
popf
sub
pop
mov
mov
ds
stos
xchg
jmp
mov
xor
mov
int3
bnd
and
xor
imul
cwtl
ret
lcall
psraw
mov
les
jne
andl
lret
rcll
push
fiaddl
inc
les
push
adc
sub
pop
mov
call
dec
push
mov
sarb
xor
ljmp
or
std
bswap
lock
mov
mov
jg
lret
test
mov
cmp
imul
ds
les
jl
cs
pop
aaa
dec
loope
jl
idivl
sub
mov
test
sub
js
fisubrs
mov
out
lods
fstps
pushf
inc
sbb
sub
dec
lods
push
adc
push
ret
cmc
mov
dec
push
cmpsl
inc
std
add
jno
enter
iret
xor
xor
add
xchg
jmp
out
or
test
jne
mov
or
xor
repnz
mov
xchg
aam
movd
aam
jbe
push
sahf
push
cmpsb
inc
push
or
ffree
aaa
into
sub
mov
test
leave
pop
outsl
sbb
xchg
xchg
data16
nop
lea
addb
sub
push
cmp
sbb
repnz
mov
lret
cmp
jo
bound
sbb
jbe
stos
ret
outsl
movb
jb
xor
inc
pop
js
mov
mov
pop
aas
mov
mov
shrb
cmpsl
popf
mov
in
movb
orb
dec
ja
dec
mov
test
cmp
push
dec
dec
aaa
test
pop
rcr
push
sbb
lea
mov
rep
mov
dec
sub
pop
out
hlt
adc
inc
decl
repnz
and
test
push
addr16
bound
xor
shll
test
pop
ret
scas
sar
test
into
mov
cmpsl
adc
lret
jns
dec
bound
xor
imul
dec
popa
inc
push
scas
adc
out
enter
jmp
jno
dec
test
push
inc
ret
dec
add
push
and
daa
cmp
sbb
jno
sbbl
mov
nop
xlat
lahf
test
jp
adc
pushl
adcb
jp
stc
test
xor
lahf
in
rorl
shll
push
out
or
jle
push
mov
jno
and
cmpl
mov
dec
filds
xchg
or
shll
pusha
and
sarb
lret
or
out
cwtl
and
or
and
sub
out
imul
shll
push
out
mov
mov
sar
push
repz
ret
fsubrs
mov
mov
mov
xchg
jo
cmp
test
xor
test
jb
mov
and
ficoml
fwait
xchg
cmpsl
lea
dec
or
pop
adc
icebp
xchg
sub
aam
jg
or
cmpsb
rorl
xchg
outsb
cwtl
jl
mov
addr16
leave
int3
fsubrl
push
inc
jge
aas
mov
add
jecxz
cmp
out
xchg
repz
gs
aas
mov
cmpsl
adcb
push
in
sahf
rorb
hlt
mov
es
leave
inc
repz
or
mov
sarl
aam
cltd
jmp
rcll
mov
jl
addr16
int3
dec
stos
std
xor
sarb
insl
sub
pop
add
dec
pop
or
test
std
or
insb
dec
loop
add
and
jb
int3
jg
pusha
push
lret
xchg
sub
sbb
lret
shrb
xor
fnstcw
inc
or
out
cld
loopne
ljmp
ret
sub
das
mov
lods
inc
fisttpl
ja
fidivrl
sbb
gs
xor
cmp
push
nop
jb
jge
rclb
mov
insb
lret
sub
sub
data16
jb
xchg
cmp
cmp
stos
das
mov
popa
xor
fmuls
dec
out
xlat
push
push
adc
or
and
test
outsl
ret
cmpsl
pusha
jns
and
push
jns
pop
ja
cmp
test
test
shlb
outsb
out
movsb
pop
push
fstl
ljmp
std
mov
dec
jb
and
into
push
jne
scas
lret
push
add
dec
adc
mov
divb
call
aas
mov
xchg
jle
std
or
pop
leave
clc
movsl
fisubs
push
lret
pop
sti
cmp
pop
mov
push
mov
loopne
test
les
add
pop
loopne
dec
sbb
out
lahf
cli
mov
mov
popf
add
adc
test
pop
jbe
add
out
and
mov
daa
sbb
orb
imul
adc
rol
and
nop
lock
dec
jle
add
test
bound
jbe
push
inc
int
adc
or
int3
out
dec
sub
mov
push
add
decl
sub
mov
add
enter
push
mov
aad
ljmp
adc
pop
loop
mov
cmpl
int3
ret
mov
sarl
xlat
insb
push
lret
mov
sbb
repnz
repnz
mov
pop
fsub
cmp
inc
xor
jecxz
cmp
pushf
das
imul
imul
arpl
jge
cmpsb
push
out
mov
xchg
mov
pop
adcb
test
inc
push
sti
ljmp
xor
mov
enter
mov
jns
xor
jmp
mov
fucomip
jo
xchg
mov
aad
loop
add
xlat
xchg
das
pop
and
ja
aam
xor
js
lods
in
dec
pop
fidivl
dec
dec
inc
push
rol
cs
sahf
fstl
rorl
repz
hlt
ss
cmc
sti
pop
and
lcall
lods
in
adc
mov
mov
lret
out
fiadds
std
jl
mov
bound
rcll
sbb
jmp
and
sub
lret
es
cmp
push
add
adc
jp
and
fwait
loope
mov
inc
jp
mov
lods
clc
mov
gs
mov
mov
stc
jecxz
sub
faddl
inc
sti
stos
adc
mov
scas
iret
mov
dec
mov
fisttpll
xor
insb
leave
outsb
push
js
lcall
std
sbb
lods
ds
into
into
dec
mov
mov
push
pop
lahf
dec
in
push
outsb
sbb
xchg
or
sahf
sbb
add
imul
and
mov
sub
mulb
outsl
push
xchg
filds
mov
add
sbb
out
gs
push
insl
cld
cmp
push
cmp
lock
in
xor
aad
dec
pop
pop
push
or
push
ficompl
and
push
inc
mov
out
test
into
arpl
cmp
jg
xchg
lcall
mov
je
nop
decl
movsb
pop
jmp
push
cmp
cmp
pop
call
call
sahf
mov
bound
push
std
xchg
pusha
mov
mov
and
mov
adc
lret
pusha
sahf
mov
andl
push
add
shll
jae
push
popf
mov
ret
xor
or
jbe
repz
add
ss
ja
fistpll
outsb
in
mov
addb
xchg
fidivl
inc
sub
movsb
add
adc
push
pop
and
ret
pop
out
jo
clc
cmp
repz
lock
and
cmp
dec
pop
rcll
inc
sub
fisttpll
pop
cli
gs
mov
add
sub
out
dec
adc
pop
lcall
sbb
or
xor
fs
xchg
imul
test
add
add
add
cmpsl
inc
sub
lret
sbb
sahf
mov
jno
stc
addr16
pop
and
xchg
mov
adc
sbb
mov
pop
lcall
add
loop
mov
push
mov
inc
jle
dec
es
jp
mov
dec
daa
roll
sub
mov
adc
fs
push
imul
inc
jno
fs
xchg
jle
lods
sub
mov
cmpsb
in
in
in
mov
pop
ds
adcb
push
pop
push
popa
push
pop
inc
add
adc
pop
mov
lea
jbe
or
xor
je
mov
jge
daa
cmp
fsts
into
jo
xlat
xchg
or
cmp
xchg
sarb
and
mov
add
test
lds
loope
into
inc
es
inc
imul
push
lahf
imul
add
push
stc
ja
mov
enter
cmc
movsl
push
mov
lret
stc
inc
mov
in
iret
cmc
mov
dec
mov
dec
lock
int3
or
shrl
inc
in
mov
aad
inc
push
insl
out
dec
popa
and
cs
sub
jg
mov
stc
and
int
cltd
xor
push
repz
dec
or
push
es
mov
jmp
in
pop
imul
jne
popf
lods
jno
sub
outsb
and
inc
xchg
mov
iret
pop
push
push
in
or
pop
imul
mov
xor
pushl
mov
ret
mov
fisubs
push
sar
mov
jmp
or
push
jle
ljmp
or
pop
inc
test
add
inc
lcall
xchg
inc
cmp
mov
test
push
sbbl
movsb
lock
xchg
or
mulb
xchg
in
dec
nop
adc
aaa
or
negb
and
jmp
mov
lods
fwait
pop
imul
mov
cmc
cltd
repz
ret
inc
cwtl
pop
push
test
popf
xlat
mov
inc
mov
daa
xor
out
xchg
rolb
cs
loopne
pop
mov
pop
les
mov
insb
outsl
dec
sti
mov
cmc
adc
xchg
sub
insb
movsb
and
xor
and
sbb
lock
test
push
arpl
dec
jno
ja
cwtl
shrb
cmp
jl
popa
and
imul
jns
int3
movsl
mov
xlat
adc
test
aas
mov
inc
lahf
dec
and
pop
sahf
int
fisttpl
fwait
mov
enter
and
sahf
int
dec
mov
sbb
push
and
orl
scas
xor
ljmp
fdivr
adc
sbb
movsb
adc
in
jle
repnz
sub
in
ret
fistps
xchg
fisttpl
mov
nop
mov
stos
xor
rol
jno
push
adc
or
aaa
mov
jae
shr
and
or
pop
adc
sbb
sti
lcall
ljmp
movsl
pop
mov
push
pop
sub
ss
xchg
inc
inc
mov
stos
popf
adc
sbb
inc
add
lcall
outsl
jno
mov
aas
push
sti
jmp
js
test
pop
cmp
pushf
test
cli
mov
jp
xchg
daa
push
mov
push
loop
jmp
inc
fldcw
cmpsl
jmp
push
mov
ret
daa
or
push
add
fwait
jo
push
pop
popa
nop
jecxz
push
xor
add
pop
ret
cmp
xchg
nop
fdivl
and
movsl
loope
xor
jb
mov
sarl
mov
jnp
push
aaa
dec
movsl
fst
or
pop
js
int3
mov
adc
xchg
notb
cmp
stos
fdivrl
jecxz
cmp
cmc
xchg
into
cmp
lahf
and
and
adc
hlt
adc
add
add
xor
jp
mov
hlt
push
clc
push
outsl
lods
rcl
or
ss
jle
push
xchg
insb
add
movsl
sbb
mov
adc
mov
rcrl
pop
test
mov
pushf
aad
dec
lret
cmp
push
dec
das
cltd
sarb
push
inc
jbe
xchg
fsubrl
mov
loop
cld
dec
push
shrb
mov
inc
mov
fwait
out
and
sbb
out
mov
jge
stos
lea
popa
adc
and
add
cmp
mov
lock
test
add
sub
inc
ss
inc
ljmp
loop
mov
or
je
subb
dec
and
xchg
cmpsb
xchg
in
push
imul
xor
rorb
cltd
push
stos
xchg
add
xor
xor
pop
mov
negb
sarb
jg
mov
xchg
mov
sahf
notl
rcrb
mov
jl
xchg
jnp
and
int
xor
sbb
mov
mov
or
dec
adc
test
xlat
aam
stos
mov
sbb
gs
mov
xchg
jp
scas
inc
dec
outsl
les
xor
fidivs
divb
stc
xor
or
dec
mov
stc
push
out
ja
mov
lods
sbb
pop
push
test
std
pop
xchg
mov
into
popf
dec
jge
call
dec
negb
fisubrl
into
mov
popf
adc
push
movq
xchg
movsl
add
lea
ror
test
xchg
add
leave
pop
call
cwtl
push
fidivl
xor
insb
out
fnstenv
pushl
xchg
int
push
pop
dec
orl
sub
jo
or
inc
or
cmp
or
push
fmull
jne
popf
sub
mov
outsl
and
mov
je
orl
jne
pop
or
xor
cmp
adc
xchg
mov
cwtl
leave
rorb
push
add
shlb
sub
dec
fiadds
xchg
stos
jno
repz
sbb
in
mov
iret
mov
les
inc
orb
aam
and
add
pushf
push
adc
xorl
fcmovnu
add
xor
lret
pushf
hlt
sub
xor
scas
xor
fnsave
lcall
jbe
dec
in
out
testl
jg
xor
fdivp
outsl
ss
testl
popa
mov
push
mov
cmpsl
enter
mov
push
mov
shrb
sub
or
lahf
xchg
cli
push
testb
addr16
rcl
gs
mov
push
fldcw
mov
push
xor
fwait
xchg
arpl
mov
or
sbb
push
sahf
fld
inc
nop
in
mov
inc
test
xchg
out
cmp
pop
pop
int
sub
loopne
scas
and
jbe
out
mov
jp
push
dec
repnz
out
faddl
add
xor
test
sbb
pop
inc
mov
pushf
fdivrl
aas
in
fwait
repz
and
dec
lock
jb,pn
icebp
aas
lods
add
pop
mov
lret
int
pop
sbb
xchg
shlb
mov
xorb
xchg
pop
sub
stc
ljmp
adcb
sbb
xchg
cmp
sub
fisubrl
adc
mov
adc
movsb
sub
inc
shlb
fistps
push
sti
fcompl
add
sbb
inc
sti
inc
rcpps
mov
add
out
mov
lods
xchg
inc
fadds
clc
cld
sbb
push
cmp
xchg
enter
int
test
inc
inc
insb
sahf
mov
and
test
lret
cmp
pop
out
sbb
jnp
mov
mov
movsb
jae
iret
adc
mov
lea
xchg
add
or
int3
in
mov
es
xor
or
mov
outsl
jle
ja
mov
and
mov
jb
mov
fsubs
pusha
daa
dec
push
jb
popf
and
mov
xchg
inc
mov
push
dec
ret
push
in
sbb
xlat
jge
xlat
mov
add
fistl
inc
lods
stc
repz
rorb
in
pop
pop
adc
pop
push
repnz
xchg
ret
leave
push
call
and
sub
pop
pop
insb
pop
outsl
and
xchg
adc
je
icebp
test
mov
push
outsl
mov
push
adc
lds
scas
sbb
sbb
push
jmp
fists
cltd
repz
aad
adc
push
lds
loope
mov
add
clc
inc
add
mov
or
mov
sbb
sbb
lret
sub
add
cmp
jg
repz
mov
or
pop
mov
out
push
aam
ljmp
adc
mov
pop
dec
loop
negb
add
push
mov
sub
jns
xchg
mov
sub
mov
xor
xchg
sbb
dec
inc
sti
out
and
dec
xchg
mov
sbb
into
cmpsb
add
test
cmp
add
jno
shll
inc
nop
add
jb
gs
insl
push
dec
stc
pushf
ljmp
cmpps
push
lcall
sub
lret
hlt
xchg
xlat
fldt
mov
and
lahf
dec
or
lcall
sbb
mov
jne
jmp
and
mov
in
dec
aad
xchg
mov
aaa
into
fnstsw
inc
shl
inc
iret
repnz
cmp
adc
movsl
icebp
popf
popa
push
clc
mov
pop
roll
jns
call
push
insb
xor
clc
mov
in
aad
data16
aas
jmp
cmpl
mov
cwtl
popa
or
jae
jg
and
jl
imulb
sbb
jl
repnz
and
insl
ror
cmpsb
loope
pop
inc
aas
cmpsl
dec
xor
scas
repnz
outsl
jnp
jle
inc
hlt
push
jmp
rolb
cmc
rol
jb
or
jns
mov
sti
adc
inc
leave
push
aaa
scas
das
mov
cmpsl
es
xchg
orl
shlb
and
pop
pop
cwtl
inc
push
fstl
sub
mov
mov
orb
shlb
xchg
add
mov
mov
adcl
cs
lahf
clc
adc
xchg
ret
fisttpl
movl
push
dec
imul
cwtl
inc
lods
in
out
jnp
add
dec
push
inc
push
sbb
adc
jecxz
mov
sti
in
sbbl
outsl
pop
jl
pop
add
std
into
adc
enter
jns
test
mov
mov
xchg
dec
pop
push
scas
sbb
xchg
push
and
sbb
dec
test
xor
adc
pop
rolb
mov
mov
cltd
mul
rorb
ljmp
lods
imull
loopne
dec
cmc
fistpl
fisubl
or
aas
in
scas
fistl
inc
mov
cld
mov
cmp
pop
mov
scas
fisubs
sbb
jmp
jle,pt
and
push
outsl
push
test
les
scas
inc
ljmp
fwait
arpl
fs
jae
mov
outsl
loop
cwtl
pop
xchg
adc
sbb
dec
mov
cmp
push
sahf
rol
jb
adc
out
adc
or
std
in
mov
jne
jae
test
fwait
cmp
mov
mov
and
lcall
fs
outsb
push
xchg
bswap
test
scas
mov
repnz
lret
jne
push
pop
xlat
pop
mov
xchg
aad
cmp
mov
out
call
mov
cli
lods
jno
hlt
adc
test
bound
outsb
leave
mov
data16
scas
out
mov
int
adc
negl
mov
push
sahf
testb
adc
jmp
dec
cmp
cmp
loop
or
pop
pushf
push
das
xor
sahf
into
decl
cmp
rorl
or
mov
mov
aaa
adc
jp
pusha
scas
push
fstpl
push
or
arpl
or
shrl
test
xchg
adc
mov
adc
pop
mov
mov
stos
push
xchg
dec
stos
ljmp
or
fs
imul
push
scas
into
push
push
mov
ljmp
inc
ror
sbb
enter
or
mov
testl
cmc
mov
cmp
ljmp
fucom
jge
data16
mov
sbb
ljmp
inc
xchg
push
fs
insb
fdivr
adc
mov
mov
lods
lcall
aaa
fucomip
jg
cltd
inc
and
pop
cmp
outsl
sub
cmp
loope
popf
mov
mov
pop
test
ret
add
jle
pop
adc
inc
sbb
mov
adc
xor
xor
mov
insl
ja
lods
mov
loopne
mov
pop
or
mov
imul
add
add
mov
data16
adc
mov
jg
mov
mov
mov
mov
sub
cld
pusha
pop
ja
lret
and
dec
or
cmpl
jo
pop
adc
push
adc
mov
mov
js
xor
pop
movsl
push
aam
mov
popf
negb
inc
negl
inc
and
ret
adc
adc
lret
jl
adc
and
and
test
jne
push
aam
cs
aaa
gs
std
push
sub
ss
rolb
dec
xor
fmuls
ret
das
shl
add
stos
xchg
pop
call
sbb
mov
dec
xchg
outsb
push
ljmp
out
movsl
addr16
fdivrs
jle
movsl
jo
int
fs
lret
stc
in
dec
jge
stos
xlat
xchg
sub
xor
pusha
mov
cmp
jp
lcall
mov
add
lret
dec
jae
sbb
mov
dec
cmc
mov
lods
iret
icebp
rcrl
cli
imull
push
insl
lods
push
xchg
loope
fs
and
or
jno
lret
fildl
mov
pop
and
dec
int
ds
adc
lahf
add
xchg
pop
ja
or
xlat
jns
cmp
cli
or
cmp
xchg
bound
aaa
xchg
in
cmp
adc
xchg
shr
shll
cmpsl
add
mov
daa
imul
push
mov
je
sti
mov
pop
cmp
sbb
and
sbb
sub
ljmp
xor
popf
arpl
rcl
imul
in
sbb
movsl
test
pop
pop
cmp
xor
adc
test
into
fwait
repnz
loop
test
movsb
inc
hlt
imul
xchg
stos
mov
nop
sbb
jp,pn
fmul
imul
mov
out
les
jle
fnstenv
sbb
xor
lret
cmp
insb
mov
inc
clc
insl
repz
popa
repz
adc
pop
add
sti
push
jp
cmp
jmp
aad
and
xchg
fnstcw
ljmp
sub
loopne
cli
jb
sbb
cmp
shlb
mov
adc
int3
rclb
sub
in
pop
sub
mov
ficompl
xchg
dec
jb
jnp
clc
outsl
inc
stos
negb
stc
je
sub
jnp
mov
jle
popf
ljmp
push
daa
sub
push
sbb
out
and
je
shll
xchg
jmp
cmpsl
dec
scas
outsl
call
pop
jmp
add
aad
push
in
mov
test
jecxz
mov
fidivrs
push
shlb
shl
cmp
pop
sub
std
or
ljmp
sub
mov
adc
mov
inc
or
inc
int
adc
arpl
xor
add
inc
dec
test
mov
jb
test
pusha
or
add
push
loopne
sbb
mov
cvtps2pd
inc
sarl
pop
dec
xor
pushf
fidivrl
xchg
in
add
or
aaa
mov
inc
cmp
out
dec
je,pn
lcall
dec
push
mov
xchg
cwtl
adc
or
xchg
int
or
mov
dec
sti
push
jge
mov
andl
inc
push
aad
mov
mov
mov
mov
and
inc
sbb
cmc
mov
pop
icebp
movsl
loopne
sbb
xor
jmp
adc
sub
mov
fmul
rcrl
ja
inc
or
ret
pop
add
stc
in
aad
lret
repz
add
bound
dec
xchg
int3
ret
sub
shrb
cmp
decb
outsl
fs
insb
cli
and
mov
jecxz
adc
xlat
push
xchg
lret
in
fmulp
loop
repnz
xor
or
repnz
adc
ja
or
imul
idivl
cmp
mov
mov
popa
hlt
mov
movsb
pop
push
dec
out
cmpsl
xchg
icebp
mov
jg
in
add
and
xchg
jecxz
push
push
cld
cmp
mov
inc
jo
sub
cbtw
sbb
push
mov
mov
pop
and
into
test
lcall
fsts
mov
push
enter
testl
das
popa
js
dec
imul
xor
fwait
cmpsb
cmp
rcl
xor
mov
sub
mov
or
sahf
dec
mov
jno
mov
out
fsubs
negb
fdivr
xor
fimull
xorl
xchg
dec
in
clc
add
mov
dec
mov
out
push
xor
lahf
add
dec
sti
out
jbe
and
jae
mov
adc
rcrl
and
xchg
call
std
jb
pop
roll
jecxz
add
inc
adc
gs
xchg
dec
cmpsl
pop
inc
sbb
ret
imul
imul
mov
mov
pop
jae
dec
mov
pop
js
xor
xchg
xor
idivl
pop
js
cs
mov
lock
pop
mov
dec
mov
dec
pushf
decb
push
mov
jbe
xor
inc
in
push
repnz
jecxz
adc
fistpl
pop
loopne
dec
repnz
stos
inc
outsl
sbb
mov
into
xor
and
xor
pop
pop
xor
out
jl
outsb
and
mov
pop
and
xchg
test
scas
cmp
add
xchg
cmp
mov
mov
loopne
mov
rcrb
add
cs
fsubl
rorl
rcll
shl
adc
scas
pop
pop
or
sbb
lret
pop
subl
mov
mov
mov
mov
mov
pushf
cmp
dec
shl
bound
push
or
lods
and
aas
js
sbb
push
mov
outsb
mov
es
out
repz
push
or
data16
adc
and
cmp
outsl
push
out
add
add
jo
js
lahf
fwait
push
dec
leave
lret
jo
insb
insl
mov
adc
mov
shll
aaa
adc
jg
inc
aaa
js
int
mov
das
loopne
xchg
fadds
or
mov
push
mov
decb
and
sub
pop
aad
mov
daa
stc
aad
push
add
cli
frndint
push
rolb
xchg
cli
or
in
movsl
mov
inc
mov
stc
rol
xlat
add
bnd
cmp
es
pop
shlb
int3
push
mov
adc
push
or
jg
push
popf
mov
mov
pop
iret
jb
stos
or
push
inc
pop
clc
push
and
adcb
popf
dec
jle
dec
xor
sub
mov
insb
stc
inc
pop
cmp
test
mov
jbe
cltd
sub
xchg
sub
sahf
std
dec
jb
outsb
fnstsw
insb
xor
subb
sub
leave
add
mov
dec
jb
pusha
insl
mov
sbb
dec
mov
add
loope
js
jl
sti
mov
leave
in
inc
or
add
lret
sbb
ljmp
mov
addr16
adc
push
xchg
lcall
popf
pop
cwtl
test
stos
pop
andb
push
stc
dec
fsubl
in
shrl
int
sahf
mov
xchg
push
pop
mov
out
aad
mov
jbe
push
divl
ja
popl
in
movsl
int
mov
push
out
mov
scas
shll
mov
xchg
fistps
daa
cltd
icebp
std
push
push
outsl
je
testl
or
mov
xlat
and
xchg
sbb
dec
xor
js
lods
outsb
mov
cmpsl
mov
outsb
cmp
mov
or
in
dec
cmp
stos
outsl
aaa
scas
movb
xchg
adc
stos
mov
mov
aas
enter
push
int
cmp
push
fdivs
add
add
adcl
xlat
cwtl
xor
mov
pop
sbb
sti
inc
insb
loope
jge
push
push
aam
cmp
adc
xchg
mov
int
fs
fwait
cmp
idivb
mov
in
push
fists
add
and
pop
lret
add
jmp
pop
bound
add
push
mov
mov
lcall
pusha
mov
or
and
imul
mov
mov
sub
push
jbe
pop
aas
sub
dec
dec
lahf
iret
test
fistps
mov
sbb
jge
inc
adc
push
popf
leave
jbe
mov
pop
or
cmp
out
js
pop
jno
andb
or
xor
or
jno
fnstcw
loope
sbb
fildll
mov
cmp
jnp
xchg
int
mov
fwait
mov
imul
ret
out
stos
xchg
or
xor
test
jle
jg
aas
dec
sbb
movsl
mov
pushf
xchg
add
arpl
andl
in
jmp
jb
iret
test
aad
cmp
cmp
pop
popf
jl
leave
out
xchg
or
shr
popa
out
cwtl
mov
ja
sbb
ja
xchg
xchg
mov
mov
mov
sub
mov
inc
mov
fdivrp
inc
lret
and
cmp
sti
mov
fnstenv
je
loop
sbb
xorb
shl
mov
stos
int
inc
mov
fsubs
xchg
xor
out
or
jmp
out
push
stos
and
xor
mov
and
insl
pusha
ret
pushf
jmp
scas
mov
push
mov
es
add
fcmovb
xchg
mov
outsb
outsb
inc
in
mov
adc
or
sub
cmpsb
pop
insl
sti
dec
push
mov
dec
dec
jg
adcb
fidivrl
inc
test
pop
pop
mov
mov
mov
xor
stc
or
lcall
jmp
mov
mov
mov
xlat
lods
insl
loopne
xor
arpl
mov
jbe
push
sbb
push
dec
shl
hlt
mov
push
filds
lret
popf
lods
xor
cmp
jecxz
insl
ret
jge
pop
jp
jns
out
test
add
imul
outsl
into
cmpb
dec
jecxz
mov
push
pushf
adc
adc
cmc
xchg
mov
pop
sbb
dec
jno
xchg
ja
inc
xor
imul
cmp
arpl
xchg
fstpt
insl
push
dec
pop
pop
xchg
sbbb
and
rolb
and
ss
jb
xchg
test
sti
fdivl
repz
xor
imull
jno
cmp
sub
push
iret
incl
enter
shll
aad
ret
jno
sub
mov
mov
cmp
mov
cwtl
dec
outsl
adc
xchg
jg
xor
mov
jo
dec
and
je
mov
adc
adc
jae
inc
sub
lods
mov
xor
mov
sub
in
ret
int3
xchg
loope
lahf
jle
inc
arpl
or
or
xchg
jb
pop
sbb
je
stc
sub
addr16
test
push
ds
mov
mov
cld
leave
fisubs
shll
lods
push
jb
push
pop
sub
mov
aas
orl
and
lock
and
mov
cmc
mov
xor
add
test
insb
fsubrs
xchg
out
stos
aam
sbb
mov
lock
into
in
or
roll
das
sub
das
inc
call
iret
adcl
mov
test
stos
out
mov
cwtl
into
psubusb
adc
rol
dec
clc
imul
jbe
cld
outsl
sbb
adc
sbb
jg
cmp
jmp
xchg
loopne
cli
jge
dec
arpl
and
xor
cmp
mov
push
ds
ds
add
jae
mov
sbb
jl
fisttpl
iret
pop
jne
jno
fldt
xlat
dec
inc
in
in
jecxz
add
lret
into
mov
xorl
rcr
sub
sbb
jle
fidivs
sub
sti
cli
imul
stc
test
jge
std
xchg
cmc
shlb
and
das
cmpsl
les
popf
jbe
xchg
add
pushf
scas
mov
pop
xor
jb
movsb
push
repnz
jnp
movsl
stc
js
into
xlat
aaa
hlt
adc
sub
xor
jno
fcomp
push
pop
cmp
jecxz
nop
mov
push
rclb
inc
lods
add
in
jne
or
dec
mov
jl
or
cwtl
nop
adc
mov
andb
cmp
call
fdivl
bound
mov
add
jmp
jmp
push
int3
in
pop
addr16
xchg
push
das
ret
sarl
cmp
test
xchg
mov
in
adc
loop
mov
adc
stos
cld
fcomip
addr16
clc
dec
xor
push
jb
mov
mov
cli
pop
sbbl
push
lds
mov
nop
pop
ret
scas
jns
pop
aaa
ss
iret
outsb
stos
lods
add
pop
xchg
xchg
push
xchg
mov
out
mov
data16
xchg
lret
or
pushf
mov
jp
out
cmc
mov
or
or
cmp
xchg
and
out
fldl
or
jb
pop
mov
cmpsl
imul
mov
cli
rcl
mov
mov
lret
dec
jae
dec
icebp
andl
and
sub
shrb
jp
jbe
das
or
xchg
dec
jae
mov
mov
push
and
jnp
out
and
cs
cs
rclb
or
fisubrl
jmp
aad
or
push
sub
mov
lds
dec
cwtl
rcll
adc
add
inc
sub
xchg
ljmp
aas
gs
mov
rorb
incb
xchg
fcmovbe
jg
subb
out
xor
jge
adc
into
cmpsb
sbb
test
xchg
aas
and
shrb
push
aas
mov
xor
daa
movsb
pushf
or
push
adc
and
inc
out
sbb
mov
jle
mov
push
lods
sub
in
neg
in
movsb
jle
movb
jno
fldenv
mov
mov
dec
out
add
shrl
pop
cmp
fisttps
sub
dec
push
into
sbb
pusha
mov
fcoms
lds
sub
push
mov
sbb
inc
xchg
mov
inc
mov
cltd
jae
jle
cmp
test
mov
aad
lods
int3
inc
pop
aas
in
lea
outsl
cltd
outsl
nop
sarb
fisubrs
test
frstor
divps
xchg
int3
dec
jmp
jb
stos
icebp
and
jp
iret
mov
jl
pop
xlat
add
repnz
mov
jns
xchg
test
bound
in
inc
fdivr
mov
lods
ficoml
imul
cmp
test
int3
out
int
stc
pop
imul
mov
mov
sub
bound
sub
sbb
xchg
ljmp
pop
xchg
cmp
xchg
push
int3
loope
aam
ja
mov
cs
stos
inc
push
cli
cmp
fiaddl
jb
sti
cld
and
jae
sub
test
scas
sub
jge,pt
xchg
imul
data16
movsb
push
pop
pop
cmc
lahf
insb
popa
enter
rdpmc
addr16
jl
stc
faddp
shlb
not
pusha
stc
push
or
mov
or
mov
stos
pusha
or
jmp
imul
jp
stos
ret
pop
test
mov
insb
push
mov
dec
pop
inc
fsub
add
icebp
xor
out
loop
notl
cwtl
sbb
mov
push
insl
jp
cltd
or
popa
in
jg
add
ljmp
lods
jbe
push
sub
pushl
in
lock
or
push
std
jns
cs
push
popa
fwait
notb
lcall
xor
jmp
sahf
imul
pusha
imul
mov
adc
idivb
dec
call
pop
adc
mov
push
fistps
mov
and
cmpl
mov
push
or
mov
push
orl
sbb
fisubl
lods
ret
ljmp
mov
lds
dec
stc
adc
jns
pop
in
les
push
xor
sbb
pop
pushf
jle
mov
pop
cmp
mov
adc
repnz
dec
dec
clc
negl
add
test
call
ret
mov
ljmp
sbb
mov
dec
rcrb
xchg
xchg
int3
xchg
pop
sub
mov
hlt
ret
adc
test
adc
and
sbb
ret
mov
add
mov
nop
subb
pop
pop
shll
sbb
mov
push
inc
fs
xchg
push
lret
in
or
cltd
aad
cli
jp
cmc
mov
xchg
scas
mov
inc
out
mov
sbb
cmc
arpl
jl
xor
rol
sbb
push
jmp
push
test
popf
shrb
push
jb
iret
sbb
push
into
mov
js
sbb
add
dec
cmp
aas
jp
popf
adc
call
push
in
repnz
pop
and
daa
sub
arpl
iret
sub
inc
pop
out
add
jno
dec
dec
jns
push
das
mov
xor
fnstcw
fs
daa
inc
faddl
inc
cmp
cmpsb
idiv
imul
hlt
dec
mov
imul
div
xchg
xor
mov
test
ds
gs
xchg
dec
sub
rclb
cs
push
mov
insb
xor
push
insl
ret
out
orl
sbb
mov
cmp
push
xchg
daa
add
sub
inc
xchg
fs
mov
rolb
jmp
sub
outsl
mov
lret
enter
jl
inc
pop
outsb
insl
xchg
add
gs
adc
icebp
cmp
in
ljmp
mov
mov
mov
push
add
jecxz
xor
push
shr
jmp
dec
xchg
jns
test
imul
xlat
cld
mov
mov
cmp
dec
pop
sbb
jae
int
push
hlt
loop
nop
insb
stos
sti
pop
int3
std
fwait
push
jle
ficoms
repnz
dec
push
ret
xchg
fs
mov
and
push
int3
push
sub
cmpsl
idivl
test
int3
cli
and
leave
pop
subb
and
or
mov
xchg
lcall
je
sub
bound
ss
jg
push
mov
inc
jns
mov
xchg
sbb
or
jnp
xor
jl
adc
gs
sub
ds
cmp
inc
fdivrp
add
pop
inc
xor
dec
add
aas
push
imul
sbb
xor
mov
arpl
push
adc
test
jp
leave
std
ja
addl
mov
decl
repz
sub
mov
ja
repz
dec
scas
fucomip
arpl
call
lret
mov
lea
loop
lret
cmc
push
popf
mov
sbb
pop
mov
loopne
rol
cmp
adc
sub
shrb
repz
pop
je
cmc
cwtl
sub
test
inc
push
and
imul
and
clc
ss
push
stc
popf
push
inc
mov
and
cmp
imul
in
jge
cs
popa
test
fnstsw
repz
dec
add
dec
sub
xor
aaa
mov
mov
std
push
or
mov
bound
dec
std
and
fwait
push
push
rclb
sbb
add
repz
pop
mov
sub
scas
ja
xor
das
out
or
faddp
rcrb
sub
inc
jne
aas
into
stos
push
jno
mov
xchg
pop
mov
xor
out
pop
jge
xor
aas
pop
repnz
imul
bound
shll
sub
pop
fdivl
dec
push
xchg
sbb
pusha
add
enter
movsl
adc
frstor
mov
out
jbe
lahf
push
push
test
ret
scas
fdivr
loop
daa
inc
fwait
cmc
push
sbb
jle
insb
jae
daa
mov
stc
shl
shlb
or
sub
push
dec
stos
xchg
sbb
scas
loope
sub
stos
and
pop
or
pusha
pop
inc
xchg
pop
xchg
inc
mov
cmp
sub
and
call
nop
ret
or
vprotw
or
imul
in
arpl
cmp
fs
dec
arpl
or
xlat
out
in
inc
mov
sahf
ja
add
enter
loopne
jmp
xchg
pop
cmc
fcomps
xchg
pop
adc
fwait
das
xor
mov
mov
pop
rcll
loopne
aam
mov
fisttps
cmp
jmp
sub
movsl
and
clc
jnp
out
xchg
jns
addl
sar
shrl
ss
sbb
push
mov
push
fwait
jg
test
ficoms
enter
add
xor
loope
mov
enter
ss
jno
add
add
lret
mov
add
and
push
fstl
mov
dec
add
inc
stos
into
sub
test
dec
xchg
and
xchg
mov
lods
out
jne
inc
mov
scas
or
clc
xchg
mov
out
dec
popa
and
sbb
sti
push
mov
xlat
push
pop
xor
inc
push
pop
inc
fstpt
mov
sbb
cmp
pop
cs
ja
dec
xchg
xchg
cwtl
imul
test
or
dec
repz
ljmp
dec
xchg
push
xor
loopne
cmp
icebp
repnz
adc
call
push
sub
xchg
popf
subl
push
push
icebp
cmc
lods
and
sti
dec
pop
or
xorb
int
add
jecxz
std
jbe
sbb
push
xor
decb
pop
add
mov
popf
sbb
sub
das
push
in
xchg
lock
push
lods
in
outsl
loop
mov
add
jp
jb
mov
dec
add
cmp
or
sub
mov
mov
dec
xor
mov
xchg
les
push
xchg
adc
mov
sub
push
mov
es
cmpsb
and
ror
ss
cmp
or
or
jge
cmpsl
or
cltd
dec
out
push
jo
outsl
test
mov
outsl
repz
push
add
lahf
mov
addl
and
mov
movsb
adc
xchg
xlat
dec
ja
pop
lods
insb
fldl
ret
mov
mov
sti
lcall
inc
adc
and
lea
repz
cmc
sub
int3
aad
stos
aad
test
jle
addr16
movsl
xchg
lods
mov
arpl
adc
push
repz
add
push
jmp
push
inc
and
xor
iret
mov
mov
leave
addr16
sbbl
loopne
mov
enter
aas
out
pushf
dec
cli
xor
xchg
pop
or
aam
mov
sbb
movsb
inc
insl
and
call
iret
shll
ds
ds
cmp
repz
cmpl
pop
lahf
out
aaa
lcall
add
lock
sub
dec
frstor
jae
mov
pop
jge
out
es
loopne
jb
rorb
xchg
xchg
cmp
ljmp
mov
iret
mov
call
rorb
pop
pop
sub
mov
sbb
sub
outsl
in
or
pop
mov
jp
lods
or
mov
mov
push
sbb
scas
daa
sub
hlt
push
inc
cmpsb
add
jmp
and
xor
add
data16
cmpb
outsl
fiadds
xchg
push
pop
adc
push
aaa
jbe
pop
test
and
addr16
test
in
and
xchg
mov
in
fwait
or
lods
ret
in
lds
int
cli
test
fcmovb
sub
sub
mov
pop
adc
aad
sbb
push
rcr
dec
ds
jbe
add
push
jnp
mov
pushf
inc
rcl
out
movsl
addr16
xor
or
filds
pop
adc
xor
js
xor
test
mov
repnz
cs
inc
mov
scas
scas
ds
mov
jp
cld
fistl
push
sub
and
daa
mov
jbe
outsl
sbb
mov
mov
cltd
dec
in
ja
push
jle
addr16
adcb
lret
jecxz
movsb
push
ss
pop
int3
mov
mov
cmc
mov
in
cld
add
sbb
cwtl
movsl
mov
dec
lds
cs
fcmovnb
push
mov
push
pop
test
ss
insl
stos
add
in
test
push
mov
adc
out
xchg
les
int3
scas
sub
dec
xchg
dec
adc
lret
outsb
xor
push
movsl
jecxz
push
jns
inc
loopne
mov
and
add
and
mov
mov
inc
shrb
jno
mov
in
movsb
pusha
jns
mov
dec
hlt
xchg
mov
add
std
sbb
mov
stos
cld
scas
adc
ss
aaa
inc
or
shlb
cld
xor
cmc
push
add
add
lods
mov
xor
popa
pop
stc
cmc
push
out
notl
mov
jl
xchg
xchg
int
outsl
pushf
js
rorl
test
popf
cmpsl
adc
jne
daa
ret
mov
push
pop
cwtl
popa
jae
jns
cmp
xchg
int
cmpsb
das
mov
sbb
and
adc
mov
outsl
cs
rcr
add
gs
mov
dec
cmpl
inc
mov
pop
sti
cmp
xchg
xchg
lcall
scas
pushf
jmp
pop
clc
lcall
jbe
daa
xchg
sahf
jmp
or
add
addr16
leave
inc
pop
test
adc
and
sub
dec
das
xor
jp
movsl
mov
push
mov
push
sahf
cmpsb
jge
jnp
cmp
outsl
das
or
cmpb
dec
mov
testb
mov
pop
or
cltd
adc
mov
pop
decl
xor
mov
insl
arpl
mov
in
stos
pop
test
push
mov
dec
stos
and
ja
xor
sbb
sub
sbb
dec
adcl
out
sub
and
les
adc
loop
test
pop
shl
call
xchg
mov
ds
sbb
mov
fistps
and
push
mov
or
cmp
call
jbe
jbe
mov
test
add
inc
sub
shll
push
cmp
push
fistps
mov
dec
test
sbb
les
add
hlt
add
incb
mov
sub
in
xchg
push
mov
aad
mov
cmp
sbb
dec
inc
rolb
hlt
mov
ja
fwait
xlat
xchg
je
push
scas
or
sbb
loop
enter
sub
fwait
and
push
test
push
cmovne
popa
aas
pop
xchg
mov
or
dec
or
scas
push
xchg
aam
insl
insb
jns
jne
inc
mov
repz
es
push
loopne
pushf
stos
push
adc
test
add
or
outsl
pop
xor
cld
push
fcmovnb
push
es
inc
sub
mov
xchg
cmp
or
push
adc
loope
or
xor
inc
das
and
mov
dec
xorb
out
outsl
stos
jo
mov
dec
jge
adc
data16
fcomps
adc
test
jmp
into
push
outsl
cmpsb
rcrl
aaa
daa
and
xchg
test
dec
sub
jb
sarl
jnp
notb
xlat
mov
sub
std
mov
adcb
arpl
mov
sti
std
xchg
and
push
stos
cs
bound
andl
incb
jmp
fsubrl
adcl
ret
sub
push
dec
int
sbb
pop
sub
cmp
faddp
out
and
adc
mov
fisubl
sahf
popf
rorb
hlt
mov
movsb
push
test
inc
test
lods
rorl
ret
push
int3
push
mov
mov
xor
mov
jmp
call
and
lods
cmc
push
sub
sub
lock
jg
jae
or
and
xor
mov
pop
pop
test
xchg
sub
out
adc
test
xor
orb
pop
clc
dec
lods
mov
dec
pop
ja
jae
fidivrs
pop
add
hlt
mov
and
incb
mov
inc
and
int3
pushf
outsb
mov
roll
test
adc
sub
movsb
adc
or
push
push
push
fiadds
push
push
lret
xchg
dec
dec
sbb
pop
cli
mov
pop
pop
dec
push
and
dec
adc
repnz
das
mov
loope
inc
repnz
hlt
das
pushf
cltd
stos
add
repz
pause
sbb
jp
push
mov
push
add
rsm
sub
les
mov
mov
leave
mov
sbb
cmp
push
mov
add
adc
dec
push
mov
lock
mov
nop
pop
fnstcw
faddl
push
cmp
into
mov
xorl
jmp
sti
cs
das
jns
mov
into
mov
loop
daa
jecxz
sarb
stos
mov
stos
call
mov
test
enter
xor
pop
iret
imul
push
xlat
addr16
fyl2xp1
repz
lds
cmpl
inc
loop
adc
scas
xor
outsb
addr16
or
jae
fucomp
jmp
inc
xchg
daa
lret
or
mov
pop
push
or
shrl
mov
fsincos
fnstsw
inc
and
fsub
loope
mov
jo
test
shll
into
pop
add
dec
fcoms
mov
pop
addr16
stos
inc
pushf
and
daa
pop
xchg
dec
dec
mov
pop
lods
adc
lea
icebp
cwtl
imul
and
insb
jns
in
sbb
dec
sarb
int
lret
xlat
lret
ret
xor
xchg
enter
mov
dec
xchg
mov
in
es
xchg
mov
clc
mov
and
aad
lret
push
xchg
movsb
daa
dec
dec
add
dec
inc
and
stos
stos
jb
clc
xchg
popw
mov
test
sbbb
scas
rcrb
or
pop
add
jmp
dec
insb
les
pop
into
push
sub
call
scas
add
ja
and
push
cmp
test
ja
pop
test
cmp
nop
xchg
mov
jnp
xor
mov
nop
mov
or
loop
sub
pop
fcmovu
icebp
cwtl
imul
inc
push
sub
enter
mov
jne
xchg
pop
add
sti
cld
jge
lock
inc
cli
bound
cs
fdivrl
ficompl
iret
aas
test
mov
or
out
xor
ljmp
in
mov
cmc
stos
mov
lea
jle
loope
and
sub
inc
mov
push
cwtl
xor
dec
add
aam
cmp
add
push
pop
fidivrl
jmp
dec
inc
mov
sbb
lods
leave
mov
sub
or
movsl
pusha
aam
adc
adcl
and
cltd
sbb
sbb
jge
inc
cmp
data16
jl
adc
leave
add
sub
push
ds
fcmovb
test
cwtl
xchg
adc
adc
adc
mov
lock
pop
je
jmp
inc
inc
imul
adcl
jb
or
shll
je
lods
cmp
inc
scas
int
and
fucomip
cmpsl
jge
mov
push
mov
ds
je
xlat
push
sbb
cmc
sub
das
sub
fidivs
jns
adc
dec
jo
cli
xor
jp
jmp
mov
jg
stos
sub
xchg
mov
test
inc
ss
mov
cli
cmp
xchg
aad
lds
gs
ror
stos
sub
test
or
adc
mov
xor
mov
jae
lcall
or
cmpb
in
ds
insl
mov
fldl
popa
daa
imul
out
imul
mov
ret
mov
inc
sbb
shll
adc
cli
mov
xor
fadd
ficompl
inc
sar
push
fistpll
aam
or
mov
or
mov
ljmp
inc
jno
nop
jae
or
data16
pop
fistpl
movsb
pop
push
jg
rcll
mov
aad
enter
icebp
dec
popa
xchg
mov
pusha
mov
loope
std
mov
inc
popa
pusha
xor
mov
push
lea
divb
cmp
adc
push
sub
pop
or
sub
stos
and
cld
shlb
mov
loopne
xchg
aam
inc
fs
xlat
scas
fldcw
jb
push
cmp
push
out
mov
hlt
repz
sbb
xor
jae
jne
mov
lret
inc
and
pop
scas
jno
pop
ljmp
xor
lret
rolb
lds
and
or
mov
out
movsl
mov
sbb
xchg
in
addl
cmp
sahf
add
jp
imul
lret
sbb
orb
aas
and
xor
dec
add
into
inc
sub
add
mov
xor
xlat
lds
clc
in
push
adc
sub
pop
xor
shl
out
xor
mov
cld
outsl
xchg
push
js
cwtl
lcall
add
push
fldenv
xchg
jo
popf
sbb
fsts
sbb
adc
mov
cmp
lods
xchg
in
cld
or
mov
setge
mov
fistps
sbb
imul
sub
ds
dec
bound
mov
mov
push
sub
mov
mov
mov
dec
sub
mov
mov
out
add
push
push
sahf
add
shl
in
mov
nop
xchg
mov
test
fidivs
adc
movsb
push
sbb
hlt
add
adc
jp
mov
ljmp
mov
add
out
xor
mov
inc
dec
leave
in
inc
lods
mov
sahf
fidivrl
test
adc
out
dec
daa
ss
mov
inc
xchg
ret
sub
push
pop
mov
xchg
mov
or
pop
std
lods
loope
es
pushf
addb
fwait
inc
popa
lods
push
mov
mov
js
jo
lahf
mov
pop
inc
movsb
cmp
movsl
das
xor
cld
ljmp
aaa
fisubs
inc
test
clc
fmuls
ja
sahf
dec
pop
inc
mov
push
mov
and
lret
xor
ret
inc
mov
imul
in
jnp
out
sbb
lret
insb
mov
repnz
pop
mov
pop
cmpsb
cmc
mov
dec
push
and
lcall
insl
fstl
lea
inc
cmp
inc
fnstsw
mov
mov
adc
and
sub
fcmove
mov
or
lds
mov
divb
out
repnz
push
adc
dec
and
mov
mov
xchg
ret
mov
sub
daa
insb
pop
push
jae
xchg
inc
cs
das
sahf
dec
push
and
jg
rol
lods
jg
dec
cmpsl
add
out
adcb
neg
lahf
fisubs
pop
lahf
pusha
data16
mov
cmp
xor
push
outsl
xor
mov
add
jne
lret
mov
cwtl
cmp
adc
jne
or
aas
mov
das
test
add
idivl
mov
and
pop
add
dec
outsb
das
jp
mov
or
cli
out
cmp
pop
scas
xor
add
cmp
stos
ror
jns
stc
mov
lahf
push
in
out
mov
mov
pop
xor
icebp
aad
js
inc
daa
inc
push
jb
ds
pop
inc
push
int3
cmpsl
mov
add
and
jb
sbb
imul
or
test
rolb
xrelease
sti
int3
fwait
lock
pop
or
push
pop
jnp
jl
cmp
notb
mov
adc
mov
xor
ficomps
lcall
push
push
dec
xorl
cmc
cmp
mov
fsubs
iret
js
xor
int3
mov
pusha
aam
aad
outsb
and
pop
shlb
jecxz
shll
dec
push
aam
cwtl
sub
xor
shll
arpl
in
test
shll
imul
in
inc
fldenv
or
mov
into
daa
das
out
xchg
das
mov
jb
sbb
rcrb
cmp
mov
repnz
push
dec
fisttpll
mov
out
sarl
movsb
repnz
jo
test
and
lea
fs
pop
clc
or
dec
pop
hlt
dec
or
push
mov
mov
fidivrl
dec
lods
dec
xlat
rcr
lahf
push
cmp
mov
sub
add
jecxz
mov
nop
adc
les
xchg
jns
cmpsl
ss
sbb
sub
inc
subl
xchg
mov
xlat
push
fdivl
dec
mov
inc
cltd
xchg
imul
shl
leave
xor
push
icebp
mov
sub
and
mov
jnp
sub
mov
out
mov
adc
add
scas
ds
cli
fdivrs
loop
add
adc
addr16
mov
xor
adc
mov
jmp
arpl
xchg
in
cmp
ja
aam
dec
loopne
or
sub
jo
pop
xor
add
sub
js
mov
leave
loopne
push
mov
pop
pop
xchg
add
rcr
jecxz
dec
mov
ss
push
jge
ja
cmp
mov
push
xchg
mov
dec
xchg
jno
cwtl
xchg
aam
sub
add
sub
std
push
jno
orl
push
stc
mov
dec
adc
je
dec
ds
mov
sbb
pop
arpl
std
into
push
clc
xchg
dec
cmp
or
fucom
fsubr
in
dec
push
dec
dec
mov
es
push
add
sbb
js
fdivr
enter
mov
std
push
mov
rcll
testb
add
push
mov
dec
dec
rcrl
aam
xor
jg
lock
mov
fsts
fimuls
push
pop
sub
shll
test
pop
mov
adcl
outsl
cwtl
popa
test
adc
cmp
fldl
jmp
pop
mov
jne
std
add
dec
sbb
enter
jle
push
in
fnstenv
shrb
testl
mov
xchg
loopne
mov
mov
stos
gs
pop
inc
jp
sbb
cmp
pop
pop
adc
pop
sahf
enter
pusha
std
repz
and
pop
mov
dec
sub
add
xchg
insb
sub
inc
dec
mov
sbb
hlt
into
aad
aad
aas
inc
dec
test
xlat
ljmp
js
jbe
mov
xchg
sar
mov
adc
mov
test
test
push
cmpsl
xchg
sbb
mov
and
sub
lds
testl
pop
mov
mov
xor
sbb
leave
cs
test
bnd
mov
loop
filds
cwtl
insb
or
add
inc
cltd
out
inc
leave
xlat
inc
mov
xor
push
xor
xorb
pusha
jge
sub
mov
pop
push
mov
imulb
mov
imul
rcll
scas
popa
sub
jbe
sub
xchg
movsb
mov
pop
add
stos
jne
sub
mov
pop
mov
mov
or
mov
loopne
inc
push
enter
fnstenv
leave
push
xor
test
mov
pop
sbb
shl
sbb
int3
nop
lret
push
sbb
cmp
loop
das
sub
aam
inc
sarl
mov
popf
fs
lea
sub
sti
aad
mov
mov
movb
lahf
xor
mov
pop
pop
jb
pop
std
jae
push
sbb
lods
das
stos
mov
push
cmpsb
cwtl
or
cmp
xchg
cmp
das
mov
shlb
cwtl
dec
cli
insb
shlb
mov
mov
adc
push
es
mov
sbbb
iret
out
or
push
push
imul
hlt
jo
bound
jle
gs
bound
cmp
inc
es
inc
cs
xchg
stc
and
jo
mov
sub
jecxz
ja
ficoms
ljmp
adcl
fbld
push
aas
loope
xorb
adc
sub
cmp
jb
jle
mov
push
out
std
adc
mov
mov
or
jg
cmpsb
sbb
xchg
out
add
call
push
xchg
dec
les
jmp
scas
jbe
fsubrs
jne
pop
inc
addr16
mov
imul
push
lahf
pop
inc
gs
add
mov
imull
jo
push
pop
mov
out
enter
xchg
adc
jle
fsubrp
mov
adc
lea
mov
mov
inc
decb
adc
xor
adc
cli
lret
sbb
xor
test
or
loop
mov
je
mov
aam
iret
js
int
cmp
shrb
mov
test
rcrb
stc
ds
jecxz
idivb
inc
roll
int3
adc
fndisi(8087
pop
enter
pop
dec
xlat
shll
push
jnp
xchg
dec
fwait
arpl
dec
cld
mov
sbb
mov
push
and
push
mov
mov
cwtl
out
data16
jnp
xor
insb
outsl
or
rorl
jle
in
pop
sub
cmp
jmp
cmpsl
int3
subb
stc
xchg
test
clc
into
xor
in
xchg
dec
xchg
sub
orb
in
cs
rclb
add
mov
in
sub
jecxz
xchg
nop
mov
icebp
cmp
jnp
push
mov
push
enter
cmp
cmc
push
call
dec
push
int3
pop
xlat
shlb
scas
mov
sti
fistpll
lcall
sub
out
jns
mov
pop
lahf
add
stos
pop
mov
ret
jae
pop
mov
repz
shl
lods
sbb
jae
and
cltd
add
shrl
mov
jns
push
jp
mov
push
push
sahf
xor
mov
pop
icebp
adc
mov
rcrl
dec
shll
dec
push
dec
push
sub
sbb
sub
pop
xchg
jae
int
pop
inc
aas
ds
and
mov
insb
andl
add
fisubrs
add
pop
cmpsl
cld
adc
lds
jecxz
mov
js
dec
dec
dec
in
loop
push
xor
inc
hlt
test
cmpsb
push
xchg
js
cwtl
stos
mov
fnstenv
repz
nop
sbb
addr16
aad
insb
cmpps
sbbb
xchg
cmpsl
repz
ss
sbb
int3
jns
push
fwait
mov
add
ds
in
insl
mov
flds
mov
setbe
and
cmp
daa
movsb
xchg
in
mov
sub
dec
push
sti
dec
push
add
push
xlat
mov
dec
xchg
add
or
dec
jns
mov
mov
adc
movsl
into
add
jl
stos
call
lds
xor
and
mov
in
pop
popa
inc
movsb
inc
bound
pop
push
or
les
mov
lret
pop
xor
or
lods
aam
movsl
sbb
mov
not
imul
mov
lods
std
xchg
lret
inc
ds
jg
loopne
arpl
ljmp
mov
leave
or
fisttpll
pop
cwtl
fmul
loopne
mov
inc
into
add
xchg
inc
scas
pop
out
lea
dec
pop
mov
jne
movups
jne
push
ss
add
das
pop
iret
sub
jns
ret
lret
es
shll
jge
cwtl
mov
lret
add
inc
pop
push
int
dec
xchg
sub
mov
add
orb
in
cmc
mov
sbb
sbb
inc
xor
leave
iret
adc
mov
push
xchg
mov
sbb
popa
es
cltd
or
xchg
stos
add
lret
push
loopne
adc
push
sbb
lret
xor
adc
mov
scas
jne
and
mov
sbb
fwait
out
cmp
cmp
shl
les
push
xor
sbb
xor
scas
xor
fidivs
mov
mov
sub
cltd
or
lods
lret
test
rclb
sub
out
fs
mov
ret
stc
loop
cmpl
lods
popl
push
hlt
jne
push
repnz
inc
ss
add
bound
push
int3
xchg
mov
sub
sbb
jl
jecxz
loopne
lahf
aam
inc
push
lods
pop
sbb
and
inc
mov
cltd
out
fdivl
loopne
pusha
or
inc
and
adc
lods
scas
sbb
inc
inc
outsb
fstpt
or
add
pop
idivl
test
clc
cld
pusha
cmp
sbb
popa
mov
xor
dec
ds
add
addl
data16
lds
mov
mov
test
dec
dec
bound
and
fs
rcrb
jae
mov
in
mov
xor
shl
push
pushf
dec
fnstenv
mov
sti
adc
xor
in
jmp
out
outsb
pop
data16
jmp
mov
in
xlat
inc
sysret
mov
dec
mov
ss
cld
mov
xchg
sbb
cmp
enter
cmp
jmp
in
imul
add
inc
jp
mov
sub
test
jmp
pop
mov
jmp
jo
mov
or
add
arpl
xor
mov
es
nop
push
pop
jne
bound
scas
sub
std
int3
dec
add
mov
mov
dec
xchg
cmpb
lock
fidivrl
cmc
mov
push
or
mov
scas
or
sub
mov
es
push
add
loop
ljmp
lcall
push
mov
jno
bound
fildl
das
jbe
es
mov
ss
movsl
cmpsb
in
inc
add
pop
jbe
xchg
xor
hlt
push
int3
data16
arpl
cli
push
stc
popf
in
sub
fdivs
xchg
add
and
mov
cmc
cmp
jmp
push
or
xor
lds
sub
cli
and
and
test
add
lock
or
pop
out
sbb
jge
mov
cld
ret
rcl
cmp
mov
sbb
lods
movsl
lcall
and
divb
lea
or
addr16
fistpl
popf
pop
aam
or
cmp
pop
mov
or
or
pop
push
js
daa
xchg
incb
mov
lcall
scas
cmpsl
sub
lret
repnz
insl
mov
jmp
mov
gs
xor
inc
sbb
xor
or
mov
dec
lock
mov
mov
push
xor
sub
adc
or
scas
faddl
sbbb
subl
fsubs
out
sub
push
neg
xlat
or
mov
addr16
dec
sub
push
push
cwtl
cld
sub
xor
and
lahf
xor
lock
mov
pop
push
movsb
ret
and
push
std
sbb
scas
into
addl
stos
dec
jbe
mov
popw
or
ret
push
stos
mov
adc
mov
xchg
xchg
xchg
leave
sub
fildll
inc
ja
jbe
ljmp
adc
or
dec
arpl
mov
sub
shr
xor
mov
in
clc
xorl
mov
lret
sbbl
cmp
lock
iret
out
push
pop
negb
fcomip
xor
jne
pop
repz
dec
outsb
rcr
and
sbb
push
outsl
outsl
int3
cmp
mov
aam
movsb
imul
int
and
in
or
fcoms
test
idivb
jle
xor
inc
xchg
shl
cwtl
sub
mov
rolb
lods
xchg
fistps
in
xchg
dec
fldt
adc
jg
add
fdivrl
jo
leave
adc
arpl
test
ret
xor
mov
mov
and
div
pop
rcll
inc
and
push
leave
sbbl
cmpl
shl
mov
fmuls
mov
sbb
mov
mov
insl
xor
mov
sub
in
insb
dec
mov
addb
sti
clc
fcomi
lock
pop
js
add
aas
test
and
imulb
push
push
sbb
push
iret
mov
adc
dec
mov
test
dec
mov
or
jno
cltd
sub
dec
pop
add
in
mov
jg
gs
xchg
push
add
jp
dec
and
xchg
cmp
nop
sti
dec
mov
push
inc
test
jno
addb
repz
pop
jecxz
fcoms
insl
jmp
dec
loop
btr
vmovntpd
aaa
jae
dec
xchg
mov
leave
mov
sbb
add
pop
sbb
inc
fbstp
sbb
enter
add
dec
sbb
insl
mov
je
mov
faddl
cmp
sub
xor
mov
call
mov
push
jae
cmp
mov
sub
outsl
je
clc
pop
sbb
pop
or
addr16
cmp
clc
dec
aam
lea
push
pop
adc
popf
sbb
lret
arpl
les
pop
dec
movsl
jnp
in
cbtw
enter
mov
fsubp
loop
jge
inc
arpl
call
pop
push
mov
enter
imulb
test
mov
fwait
sub
mov
daa
negb
mov
pop
ds
ss
sub
jbe
push
ljmp
cli
in
lds
shll
adc
dec
aaa
jno
enter
fs
cmp
clc
jle
out
xchg
inc
xchg
jg
shlb
pushf
sbb
sahf
mov
aaa
imul
mov
repnz
push
iret
mov
mov
lret
mov
orl
jmp
inc
and
mov
ret
nop
jg
or
push
push
shll
cmc
cmp
cmpsl
loop
jbe
xor
xchg
fwait
inc
and
fs
stos
std
push
repnz
add
neg
nop
outsl
shrb
jmp
ds
sub
xor
in
xchg
jg
aas
lds
jle
les
xor
sbb
adc
sbb
sbb
into
mov
aam
rol
into
cmp
scas
js
cmp
mov
addl
fdivp
pop
push
pop
pop
mov
mov
ss
xor
inc
adc
aas
mov
cs
or
ds
lods
dec
jns
push
jecxz
cmp
iret
shl
mov
das
stos
dec
inc
add
int
mov
xchg
aas
push
lock
flds
pop
aaa
mov
shll
mov
adc
and
mov
sbb
jmp
jbe
rclb
push
test
and
and
adc
ret
push
jg
mov
sub
arpl
xchg
or
and
out
sarl
fstpl
inc
pop
sbb
lea
add
loop
shrl
dec
test
sbb
add
mov
insb
shrb
add
push
out
inc
or
ds
imul
push
out
cmp
xchg
cld
out
rorl
xchg
testl
fstpt
ljmp
int
adc
sahf
mov
mov
enter
pop
test
ss
xlat
sarl
fcoms
loopne
pop
ret
aad
mov
movsl
popf
mov
imul
cltd
mov
and
cli
mov
cmp
add
mov
aad
imul
push
mov
inc
ficoml
roll
cmpsl
push
gs
lret
xor
cmp
adc
fisubl
add
in
insb
stos
fs
out
or
in
test
add
inc
jns
add
testl
notb
scas
inc
rclb
cwtl
sahf
sub
jno
jmp
xchg
movsl
lahf
cld
mov
push
je
dec
nopl
mov
adc
xchg
mov
add
dec
mov
cmp
imul
insb
adc
rcr
lret
je
add
adc
xor
xchg
lea
xchg
jns
jp
fnstsw
ja
ja
inc
push
mov
inc
mov
aam
in
outsl
xchg
outsb
bound
cmpl
dec
mov
loopne
push
arpl
jecxz
lods
outsl
outsb
cmp
mov
xchg
cld
jecxz
outsb
repz
dec
xchg
cmp
bound
jo
in
cmpsl
mov
mov
test
adc
sub
ss
cmp
aas
sbb
xor
jg
pusha
and
or
add
popa
inc
out
outsb
pop
repnz
push
xorb
sub
ret
push
jmp
jbe
adc
xchg
push
mov
sbb
mov
xchg
daa
push
mov
movsl
mov
int
subl
dec
test
and
add
popf
and
cmp
hlt
mov
repz
je
jmp
test
xchg
out
pop
pop
out
test
ss
stos
sub
sbb
in
ret
ja
cld
pop
ret
lret
pop
xor
sub
mov
loopne
negl
out
popf
pop
into
cmp
out
shr
shll
and
xchg
mov
xchg
or
bound
dec
sarb
cmp
push
dec
sub
ret
jns
cmp
arpl
xor
cltd
pop
es
sarb
or
adc
iret
jmp
adc
rcrl
ret
fiadds
arpl
xchg
jp
movsb
call
add
fcomi
inc
jb
sbb
movsb
pop
test
sub
and
mov
mov
jb
jnp
fldenv
aas
test
inc
cld
leave
movsb
mov
idivl
sbb
int
sbb
xchg
lods
sbb
cmpsb
pusha
push
mull
js
int3
or
jae
aam
jne
push
in
pop
popl
mov
ljmp
orl
dec
adc
cmpsb
test
dec
xchg
cmc
push
rol
xchg
movsb
mov
sub
lea
jb
leave
daa
pop
pushf
subb
roll
xor
es
xor
lods
xchg
push
mov
in
xor
cs
stos
dec
push
notl
pop
inc
data16
mov
repnz
xchg
sub
fs
lret
push
add
ds
loop
pop
jle
loop
mov
ret
pop
xchg
out
xchg
int
sbb
subl
repz
or
jp
pop
outsl
and
out
or
clc
and
aas
out
or
push
gs
and
sub
data16
fwait
js
mov
sbb
enter
cli
and
sub
mov
daa
sbb
or
and
aam
cmp
aam
mov
sbb
xor
mov
insb
mov
push
pop
arpl
mov
cltd
cmp
cmp
std
imul
std
add
mov
lcall
mov
cmp
xor
ret
inc
lcall
push
jo
ds
xor
push
or
and
mov
xor
mov
cmp
in
mov
bound
push
mov
sbb
js
jae
enter
aas
dec
xchg
pop
xchg
call
movsl
loope
fistpll
in
dec
xchg
mov
jmp
lock
sbb
movsl
mov
call
dec
in
mov
xchg
inc
push
nop
push
in
and
inc
xchg
outsb
xchg
mov
rolb
adcl
es
sub
out
pushf
xlat
enter
dec
xchg
adc
jbe
jl
push
mov
ret
rclb
dec
add
pop
add
or
pusha
into
push
xchg
daa
xchg
add
mov
inc
add
aaa
jle
inc
cmp
je
pop
ja
mov
sub
lods
stos
mov
mov
push
enter
cmp
in
xorb
dec
mov
sarb
xchg
stc
and
inc
outsl
dec
test
sbb
ficompl
pop
dec
mov
sub
andb
cmpsb
repz
mov
adc
inc
xor
into
cmp
mov
fsubrs
cmp
jmp
js
fwait
dec
mov
fsubrl
fbld
sub
lret
dec
jns
pop
dec
paddusw
aad
dec
cmp
cmpsb
dec
aam
push
dec
mov
push
sbb
les
sbb
mov
adc
mov
inc
je
adc
mov
fcomps
out
pop
ljmp
or
pop
push
and
out
or
jg
cmp
nop
test
adc
sub
aad
sbb
add
and
pop
push
in
xor
jmp
mov
popa
negb
xlat
outsb
mov
inc
pushf
xchg
fsubs
std
outsl
xchg
ret
xchg
in
mov
out
lock
jg
testl
jno
sub
and
or
out
push
cmp
pop
scas
in
mov
xchg
inc
cs
mov
sbb
pop
add
dec
std
xchg
divb
shrb
cmp
lret
jae
sarl
orl
cmp
aaa
les
push
sub
push
cli
jne
testl
mov
lret
sahf
dec
mov
xchg
mov
sbb
mov
adc
add
rorb
sbb
inc
jle
imul
rcl
inc
loope
cmp
pop
mov
jp
pop
scas
arpl
out
hlt
jmp
cmpsb
loop
inc
push
stos
addr16
mov
out
mov
ret
or
mov
mov
mov
movsb
cmpsl
inc
imull
sbb
xor
je
shr
pmaddwd
fmuls
fisttpl
into
mov
in
js
add
outsl
sbb
cmp
in
lock
sbb
inc
shl
out
shlb
movsl
or
pop
mov
cmp
lret
shrb
in
xchg
and
fildll
cmc
xchg
add
jmp
adc
dec
lahf
int
push
jae
sub
pop
aad
xorl
add
and
out
ljmp
push
mov
movsl
jnp
push
stc
cmpsl
loopne
int3
ss
mov
pop
mov
pop
test
inc
push
cld
or
and
popa
push
in
fistpl
mov
dec
mov
jb
and
movsb
pop
in
and
mov
mov
fsubrs
xchg
xchg
jns
pop
inc
test
inc
push
cmp
jne
cmp
sub
pop
mov
adc
jge
cwtl
lcall
jge
dec
mov
cld
xor
mov
ja
sub
mov
add
daa
out
sarb
push
in
insb
mov
adc
div
mov
xor
aad
push
mov
dec
add
je
dec
mov
js
addr16
xor
rclb
mov
fdivrs
outsl
adc
ret
sub
lret
rclb
xor
jge
xchg
and
pop
inc
pop
or
and
jl
jge
sarb
jbe
xchg
fsubs
out
add
inc
aad
test
fs
sbb
push
shll
pusha
loopne
std
xor
ret
jbe
push
sbb
mov
cld
cwtl
mov
xor
sub
xchg
int3
sti
dec
add
stc
shlb
cmp
cmp
inc
ja
xor
xchg
lcall
shll
subl
xchg
adc
insl
shr
sbbl
and
sarb
aad
roll
rcll
mov
shlb
push
dec
mov
cmpsl
je
fnsave
lret
into
push
xchg
clc
cld
pop
hlt
pop
scas
clc
or
test
sahf
xor
jle
and
mov
push
scas
xlat
mov
loope
into
mov
fyl2xp1
aad
js
mov
out
arpl
push
xchg
loopne
inc
mov
adc
imul
mov
mov
popa
dec
lock
ja
xor
pop
fisttps
imul
add
outsl
pop
sbb
leave
mov
lea
mov
mov
push
xor
inc
fwait
sbb
cmpsl
lods
push
fildll
dec
test
stos
pop
rclb
lret
pop
jle
bound
sahf
cmpsb
mov
mov
sub
push
and
shll
sub
and
iret
scas
fstps
ret
out
sbb
add
in
jns
mov
cs
fcomip
lret
and
cli
push
out
mov
in
scas
out
mov
push
push
jno
adc
mov
jbe
leave
inc
fisubrl
xchg
cwtl
je
jge
push
mov
mov
adc
mov
push
xchg
and
repnz
push
mov
cmpb
mov
mov
daa
ljmp
xchg
fcomi
inc
in
aas
push
int
cmp
or
and
cmp
or
xor
ljmp
je
lea
das
push
addl
mov
add
jge
cli
xchg
mov
lods
pop
push
mov
mov
ret
xchg
or
xlat
neg
mov
jo
pop
push
cmpsb
dec
test
xor
xor
xor
jo
jecxz
daa
push
in
push
xorl
xchg
lret
xchg
enter
cmp
mov
pop
sahf
nop
add
push
pop
mov
cmc
pop
clc
cmp
mov
aas
or
std
push
lret
mov
dec
push
inc
push
rcr
sbb
fbstp
jg
push
fucomp
ret
cli
sbb
or
or
add
mov
loop
push
mov
xor
roll
jl
popf
jl
pop
xor
testb
aad
aad
in
pop
or
andl
icebp
inc
lahf
loope
xchg
clc
sub
into
pop
test
add
loopne
jl
or
jle
data16
mov
add
imul
inc
mov
mov
pushf
test
mov
inc
add
xor
and
mov
pop
test
jecxz
xchg
scas
imul
xor
stos
xor
aam
pop
adc
jle
dec
mov
and
aad
scas
inc
movsl
mov
addb
push
xchg
xchg
es
dec
dec
sbb
mov
test
imul
stos
mov
psubusw
movsl
inc
lea
mov
js
mov
lret
aam
adc
out
adc
js
sbb
pop
std
lret
sahf
pop
sub
or
push
mov
hlt
movsb
int3
scas
fisubl
daa
push
mov
jbe
aad
fcmovnu
dec
push
je
repz
cmc
jns
jmp
mov
popf
or
mov
mov
inc
andl
rorb
insl
add
sbb
xor
into
addl
sbb
stos
aaa
ss
aad
add
mov
push
pop
sbb
dec
andl
shl
pop
mov
movsb
cmp
dec
lret
lret
mov
push
adc
leave
jne
mov
ror
sub
cmp
mov
jo
add
enter
ss
jns
mov
loope
mov
jb
xchg
aas
dec
push
insl
push
adc
xor
mov
mov
xor
int
inc
xor
lret
lock
adc
push
jno
pop
jle
adc
pop
dec
fdivrs
xchg
mov
data16
mov
cli
mov
sub
test
or
into
iret
mov
or
fidivrl
out
jmp
loope
sbb
adc
mov
inc
in
inc
add
filds
vfpclasspd
mov
sub
jnp
into
dec
fisubl
push
jae
xor
xor
andb
or
cmpsl
daa
mov
jns
pop
and
imul
js
or
xchg
dec
mov
das
insb
adc
shll
f2xm1
pop
sbb
xchg
push
mov
fwait
pop
push
insl
shl
push
insl
cmpsl
clc
cmpl
pop
aad
mov
push
lahf
rorb
add
mov
outsb
movb
es
jecxz
push
pop
fsubp
cmp
js
push
bound
loopne
out
cmp
pushf
sub
fistpll
dec
mov
pop
adc
fldenv
test
mov
icebp
cmpsl
jecxz
jp
out
lret
push
mov
es
cwtl
out
jae
into
xorb
rclb
jle
xchg
sub
and
out
ficoml
repnz
movb
and
lea
adc
scas
jg
mov
mov
pop
dec
cmp
push
ret
cmp
lea
xchg
and
xor
cltd
jns
test
xor
pop
in
mov
xchg
inc
pop
std
lret
sub
pop
imul
icebp
lret
push
jl
into
xor
push
mov
pop
inc
inc
mov
in
jo
and
rcr
sub
fs
mov
jge
mov
or
mov
fadd
jecxz
in
fnstsw
test
cltd
daa
xchg
nop
sbb
test
dec
dec
sbb
mov
loopne
adc
push
dec
or
std
fs
int
movsl
and
mov
xor
or
jl
js
mov
jne
xor
in
movsl
int3
andb
out
shll
jbe
popa
into
mov
add
out
nop
dec
xor
cmc
ljmp
dec
mov
add
imul
adc
bound
loopne
and
movsb
jbe
push
rcrl
jbe
imul
cmc
mov
lret
push
aam
enter
push
adc
sub
jnp
loope
sub
push
xlat
mov
sbb
test
in
cli
jne
pusha
adc
xorl
inc
lods
cmp
orl
sbb
mov
push
push
add
mov
ja
cld
movsl
jmp
leave
addr16
pop
rcll
leave
ret
adc
and
mov
dec
rorb
ds
and
or
das
loop
fidivrs
cmp
icebp
enter
add
fadds
jl
insl
mov
or
popf
bound
repz
add
pop
sbb
ja
mov
daa
mov
rclb
dec
lods
xchg
jbe
xor
lret
pop
or
aad
cli
hlt
out
adc
cmp
je
xor
adc
in
jne
sub
in
jo
shlb
cmp
mov
lods
out
pop
sbb
loope
in
dec
cwtl
adc
je
xlat
adc
pop
cmpsb
out
push
xor
pop
dec
jno
xchg
cmp
mov
push
arpl
icebp
into
dec
rcrb
adc
frstor
sub
sbb
stos
call
loop
test
test
sub
mov
clc
shrd
sbb
lret
jmp
sti
in
mov
cwtl
jp
imul
aas
inc
dec
fdivrl
inc
or
repz
push
int
and
sub
mov
mov
enter
lea
mov
call
adc
and
cld
hlt
int3
popf
xchg
add
rol
xchg
and
cmp
mov
dec
xor
fistl
adc
test
fsubr
xchg
je
enter
mov
dec
aas
aaa
mov
insb
lods
not
fldt
or
xchg
js
mov
dec
push
aam
push
negl
and
or
out
movsl
inc
mov
test
addl
adc
loopne
push
out
cmpsl
cld
lock
sbb
xor
cwtl
in
sbb
pushf
push
stos
cs
loopne
out
rcrl
mov
bswap
sbb
repnz
mov
aad
popa
or
xchg
push
shll
pusha
mov
jno
inc
jnp
sbb
mov
and
in
pop
dec
ficoms
jns
xchg
cmp
mov
scas
repz
pop
push
out
jo
in
fs
pop
mov
pushl
outsl
jne
stc
cmp
lret
or
fsubs
and
xchg
repz
and
inc
push
mov
popf
int3
loop
lahf
enter
inc
les
int
jg
cmpsb
mov
sub
jmp
jl
dec
loopne
test
adc
sbb
jno
jp
repnz
jl
lcall
push
fwait
call
adc
jne
jmp
mov
jnp
mov
pop
adc
mov
rcrl
xor
mov
hlt
iret
jmp
cs
fstpl
push
les
fisubrl
imul
xor
setle
sbb
sbb
mov
add
imul
addr16
push
cwtl
es
inc
inc
jl
iret
and
sub
inc
pop
pop
mov
mov
pop
es
sbb
ljmp
mov
in
pop
pop
int
bound
pop
sub
int
inc
lock
mov
out
jae
jg
mov
xchg
jns
sbb
lods
cs
pop
mov
test
dec
shll
into
mov
sub
xchg
clc
or
inc
das
sarb
gs
cltd
pop
mov
push
xchg
push
jmp
xlat
cmp
or
fdivrl
mov
and
jp
hlt
add
rcr
mov
js
mov
xorb
pop
sub
ja
pusha
fnsave
or
mov
vminss
pusha
lret
clc
inc
jmp
xchg
outsl
pop
xchg
fwait
jecxz
inc
loope
xlat
and
and
pop
dec
les
xchg
leave
push
lods
inc
cld
dec
shrb
cli
fs
mov
cltd
xchg
outsb
lcall
add
inc
push
push
xor
jl
outsb
push
cwtl
jp
mov
leave
xchg
sbb
rcrb
cmpsb
lret
fidivs
ds
aad
imulb
adc
mov
xor
push
dec
scas
fistl
js
int3
fisubs
jns
jle
cli
rdmsr
testb
mov
loopne
pop
insb
cmp
and
jp
in
sbb
push
and
clc
bt
mov
push
into
iret
inc
or
pusha
popa
fwait
cmp
in
rcr
inc
sub
push
jne
jmp
repz
cmpsb
xor
dec
out
pusha
jmp
andl
sahf
ja
jge
std
rcr
lods
stos
mov
mov
adc
jno
ljmp
call
test
pop
in
and
add
jmp
jno
orb
mov
mov
insl
imul
jnp
sub
iret
pop
mov
xchg
addr16
ret
call
loopne
jecxz
xor
sub
les
jecxz
jb
cmp
mov
in
repz
outsl
mov
repz
nop
inc
fistpll
and
lfs
xchg
ret
fs
inc
call
ficomps
adc
adc
shrl
mov
push
in
adc
push
sub
test
addl
xor
in
mov
xchg
iret
shrb
or
imul
fldcw
in
movsl
mov
jbe,pn
in
ret
aam
jne
sub
dec
mov
push
mov
aaa
stos
lea
leave
push
inc
sub
adc
xor
mov
aas
icebp
fstpl
sub
sbb
pop
in
sub
adc
pop
loope
insl
dec
push
jo
into
add
xor
roll
das
stos
fsubrs
jle
sahf
jo
dec
push
je
xor
scas
xlat
mov
test
imul
inc
adc
mov
popl
mov
mov
or
xchg
sarb
xchg
js
aam
jae
cmpsb
mov
scas
or
fsubs
xor
imul
sub
mov
sbb
out
stc
jne
mov
in
int3
jno
push
lret
gs
cmp
mov
push
xchg
les
pop
out
push
cmp
pop
cmp
lcall
mov
cmp
stc
mov
decl
jg
out
add
jbe
mov
xor
jmp
mov
testb
inc
xchg
fimull
loope
mov
mov
fninit
jl
data16
bnd
sbb
cmp
or
push
stos
fsubs
mov
adc
jnp
cmpsl
popf
jl
mov
aaa
outsl
fmul
inc
cmp
inc
aad
sub
mov
jmp
xchg
test
aad
ja
out
pop
jnp
push
movsb
cmpl
stos
movsl
aaa
ret
outsb
std
incb
sub
dec
test
mov
les
call
mov
pop
fimuls
arpl
mov
adc
sti
inc
cmp
dec
pusha
fsubrs
in
outsb
in
pop
les
fidivrl
and
jnp
aam
jecxz
jo
xor
mov
or
loop
mov
imul
pop
out
adcl
scas
jbe
clc
aam
in
inc
addl
push
mov
out
xchg
dec
mov
xorb
pop
call
int3
dec
xchg
rcrl
add
aas
cmp
pop
sub
pop
mov
imul
gs
push
mov
fadds
test
mov
adcl
fs
std
sbb
sbb
jno
xor
cmp
js
adc
mov
hlt
stos
test
roll
xor
jle
pop
sub
sbb
add
jbe
fld
lock
jecxz
test
daa
xchg
pop
push
lea
cmp
push
fwait
mov
mov
in
jb
fists
push
dec
fnstenv
xor
jnp
push
outsl
dec
call
lods
adc
pop
sti
lcall
push
loop
adc
stos
mov
adc
cmpsb
xor
adc
cmpb
es
jns
es
push
dec
fidivrs
inc
out
inc
loop
jne
xchg
jo
ljmp
jecxz
psrlq
sub
adc
jae
xchg
dec
mov
mov
pop
mov
outsl
sub
mov
movlps
lret
push
rep
sbbl
adc
inc
call
mov
sub
jmp
sbb
push
dec
adc
xchg
jge
pusha
mov
movsb
fildl
je
cltd
call
dec
lret
sbb
shlb
mov
in
mov
xor
aas
repnz
and
fsubl
jp
xchg
sti
jnp
ficomps
inc
mov
adc
lret
push
stos
pop
xor
leave
mov
mov
inc
sub
popf
iret
adc
fcomp
bound
xlat
xor
fnstenv
inc
jmp
push
movb
mov
mov
mov
mov
les
faddl
aas
push
and
mov
lock
and
or
inc
aas
lds
cmp
jl
popf
loope
ss
stos
inc
mov
lds
pop
mov
fistl
lret
stos
mov
and
and
pop
repnz
xor
lret
outsl
aaa
mov
mov
xor
pop
leave
ljmp
enter
ret
int3
daa
or
adc
or
repz
cmpsl
xchg
inc
cli
pusha
sub
and
pop
adc
das
mov
jb
xchg
dec
xchg
aas
or
inc
mov
xchg
mov
inc
cmp
inc
pushf
xchg
dec
pop
call
mov
push
inc
pop
cli
cmp
sbb
pop
dec
or
push
clc
xchg
sbb
push
lock
mov
push
lret
push
cmc
test
out
xor
fs
push
decb
jmp
cld
push
cmpl
cmp
sbb
inc
test
inc
mov
insb
aam
jle
cltd
mov
push
nop
outsb
subb
cwtl
loope
lahf
push
movsl
idiv
enter
mov
frstor
arpl
pushf
inc
inc
mov
fdivp
dec
add
pusha
shll
fstl
sti
push
test
rorl
add
scas
add
sti
dec
dec
repnz
es
cmp
mov
stc
daa
add
pop
push
stos
xabort
jo
in
fwait
jae
or
das
inc
data16
rclb
adc
iret
or
data16
mov
imul
aas
xlat
sti
shll
cmp
dec
xlat
xor
xor
dec
jp
sbb
cmpsl
cld
out
mov
xchg
ds
les
lods
leave
push
sbb
insl
movsl
sbb
ficoms
sbb
es
lahf
mov
pop
sbb
in
pop
mov
push
nop
shr
sub
test
pop
popf
cli
inc
scas
cmp
mov
pop
sub
test
pop
lahf
sub
incl
lret
bnd
ja
jecxz
stc
es
jb
test
mov
push
xor
push
sbb
push
mov
aas
push
pushf
mov
adc
or
or
push
out
lock
js
xchg
fldt
add
adc
mov
push
cmp
push
pop
ja
orb
add
out
out
cli
sub
push
sbb
stc
push
cli
filds
xchg
shll
push
lcall
leave
int3
xchg
jmp
std
loop
addr16
xchg
sar
out
mov
mov
sti
sub
je
mov
in
push
mov
fdivs
pop
stc
and
ljmp
jne
stos
imul
or
je
fdivrs
enter
dec
fisubs
pop
xor
popa
cs
loope
xor
fidivrl
jmp
adc
mov
enter
repnz
push
push
sbb
jb
ljmp
push
and
loop
cltd
mov
cmc
cmpsb
test
mov
and
pop
sub
jnp
cmp
mov
sub
movsl
add
sbb
stc
xchg
sbb
subl
lcall
aam
inc
cmpsb
mov
jl
adc
in
xor
sub
lds
sub
pop
out
in
inc
sbb
jb
inc
or
arpl
dec
jp
test
imul
ljmp
dec
jmp
jne
add
jbe
loop
push
popa
xor
into
mov
xor
addr16
sub
out
pop
inc
pslld
fnsave
js
or
jmp
mov
push
jge
lock
lea
dec
jp
mov
fildl
xor
sub
pop
stos
mul
sub
pop
and
fistps
mov
mov
jo
adc
insl
rolb
lret
orps
mov
lods
mov
gs
movsb
jg
pop
es
xchg
sbb
movb
pmaddwd
hlt
scas
filds
ds
ja
call
and
imul
inc
lahf
pop
push
mov
mov
loopne
or
sbb
xchg
repz
stos
aaa
imul
jg
test
jo
ret
int3
shl
fcmovne
popl
pop
cmp
in
cltd
pusha
repnz
xchg
push
sbb
push
hlt
cli
jne
lods
xorb
xchg
sub
mov
sar
in
fcoml
cltd
shl
jbe
push
pop
sub
cmpsb
loopne
dec
mov
rclb
lock
jl
in
sbb
ret
mov
out
and
pop
nop
xchg
popf
pop
xchg
push
cmp
mov
mov
jnp
loopne
xchg
in
in
daa
inc
lea
out
jne
mov
push
and
mov
xchg
xor
cltd
and
les
and
mov
jl
jge
mov
js
mov
int
inc
push
sub
in
adc
push
mov
lea
insl
push
cmp
cld
aas
incl
mov
sub
daa
subl
push
test
out
sbb
mov
xlat
xchg
inc
icebp
xor
lock
cs
jmp
movsb
jecxz
imul
or
pop
pop
sub
xor
addr16
inc
cmp
insl
and
xchg
mov
cltd
fisttpll
ja
testl
rol
mov
out
xchg
sbb
out
or
fldz
or
movsb
popf
inc
jle
bound
sub
rcl
or
sbb
sbb
or
aam
movsl
xchg
mov
or
sub
ret
adc
shlb
popf
ficoml
scas
scas
mov
lret
cmp
pop
mov
lods
int3
sti
pop
add
fwait
push
dec
dec
pop
nop
mov
jo
mov
out
not
fstp
dec
jnp
add
pop
jbe
outsl
sub
lock
pop
in
pop
or
scas
nop
cmp
scas
mov
adc
sbb
or
adc
fnstcw
pop
aaa
movsl
mov
xor
test
xchg
movhps
adc
repnz
stc
jmp
popa
fs
jo
les
xor
dec
sbb
adc
pop
sbbl
mov
cmp
adc
pop
xor
push
xchg
loopne
loop
enter
mov
test
std
in
xor
jl
out
xlat
inc
imul
cwtl
mov
xor
ds
stos
mov
ja
ficoml
add
cltd
jle
into
sbb
inc
sbb
movsb
push
sub
xchg
mov
out
jg
testl
cmp
mov
iret
movsl
push
mov
inc
jmp
or
imul
mulb
aas
adc
and
movsl
xor
cmp
cmpsl
lret
mov
pop
out
adc
jg
shr
je,pn
adc
imul
pop
push
in
xchg
adc
cmpsl
icebp
pop
inc
lret
into
and
aas
xchg
repz
imul
pop
xchg
mull
lea
mov
sbb
lcall
mov
in
pop
and
les
or
fmull
sub
or
adc
mov
push
out
outsb
stc
scas
out
js
sub
fcmovne
outsb
pop
ret
or
xchg
mov
int3
sbb
push
jge
out
outsb
and
sub
pop
sahf
cmc
addr16
jmp
shll
xchg
clc
push
dec
pushf
lret
loop
sti
test
cmpb
jae
in
adc
push
jle
xor
mov
fcmovnbe
hlt
dec
pushf
loopne
or
ja
mov
xchg
ljmp
adc
lods
sahf
scas
fldcw
push
adc
insb
cltd
cmp
pop
adc
enter
mov
pop
cmp
popf
jnp
pmaxsw
decb
ret
inc
mov
cmp
and
iret
paddusw
xorb
xchg
ja
je
aad
push
inc
test
xchg
fistpl
mov
aam
ljmp
ds
fs
add
adc
jns
cs
dec
xchg
pop
dec
cmp
push
in
das
movsb
daa
test
mov
jb
pop
lcall
xor
sub
daa
ret
jecxz
cs
mov
dec
push
imul
mov
pop
mov
pop
adc
push
add
sub
into
arpl
cmp
std
sbb
jbe
mov
push
and
jecxz
cwtl
cmp
jmp
jge
fidivrl
rolb
or
ret
test
stc
repnz
lods
les
push
bound
ss
mov
jg
jnp
in
fwait
inc
push
sarl
loop
out
incl
and
push
cmp
mov
test
out
sbb
dec
pusha
lea
fisubl
add
jp
lods
and
mov
pushf
mov
pop
rcrb
orb
cmp
scas
mov
dec
cltd
cmp
jne
leave
das
cmp
cwtl
sbb
adc
stos
pop
push
pop
fmull
imul
xchg
cs
mov
lock
aas
and
pop
imul
inc
adcb
fisubrl
dec
dec
cmp
les
std
in
mov
adc
aaa
aaa
xor
shrb
mov
lret
jns
repz
mov
cltd
xlat
dec
add
sub
lahf
rorl
mov
mov
cmp
testl
inc
xchg
mov
pusha
xchg
jnp
dec
cmp
mov
into
sarb
lcall
sbb
dec
pop
pop
inc
dec
jno
mov
pop
cmpsb
ret
stos
test
adc
shrb
les
dec
dec
aad
dec
push
xchg
pop
jle
imul
xchg
mov
clc
sbb
push
lahf
arpl
push
stos
dec
cld
mov
icebp
cli
bound
or
gs
cld
lss
mov
sub
popf
inc
pop
xlat
ss
fld
scas
ja
mov
pop
stos
aam
nop
pop
mov
cwtl
mov
mov
and
loopne
inc
idivb
push
fstps
jl
test
popf
xor
sbb
in
in
xor
mov
jecxz
inc
neg
int
test
pop
jno
mov
loopne
adc
stc
int3
bound
repnz
sub
dec
add
insb
cmp
and
int
out
push
inc
push
fsub
cmp
push
fidivrl
mov
adc
outsl
jns
lock
or
movsl
push
sbb
mov
mov
fwait
xor
sbb
out
push
push
lock
repz
arpl
and
idivl
out
ret
sbb
dec
loopne
mov
jg
dec
mov
leave
mov
pop
cwtl
test
sbb
sbb
test
xor
or
jae
xlat
lods
dec
fcompl
xchg
xchg
mov
ficoms
jle
mov
out
add
negl
scas
sbb
fidivs
shrl
lahf
rcl
or
inc
mov
pop
and
mov
and
fisubrs
in
popf
sbb
mov
icebp
add
mov
or
aas
insb
sbb
mov
je
lds
outsl
pop
xor
jae
gs
mov
mov
repz
mov
out
mov
jg
jmp
add
and
aad
js
push
pop
cmp
lret
xor
lock
pop
pop
clc
mov
sarl
gs
dec
lret
ret
jl
jne
xchg
jo
pop
adc
add
loop
rorl
lahf
jno
xchg
xchg
mov
jae
mov
mov
and
xchg
push
pop
inc
mov
testl
jno
rcl
bound
jo
mov
push
cli
jp
add
or
cwtl
pop
mov
adc
jno
push
je
mov
adc
loopne
hlt
test
stos
movb
add
cmp
adc
xchg
cmp
aaa
jne
xchg
fisttpll
mov
pop
fldcw
inc
loop
lds
jmp
add
iret
xchg
sub
or
jmp
inc
mov
sbb
push
std
mov
stos
mov
pop
div
cli
hlt
insl
div
sub
pop
mov
popa
sub
js
dec
pop
orl
in
rcll
sbb
cld
insl
nop
pop
xchg
icebp
dec
aas
pop
xor
movsb
f2xm1
mov
or
rcrb
es
mov
pusha
repz
cmp
scas
xor
popa
jl
bound
rorl
bound
sub
aad
pop
xor
les
movsl
mov
add
mov
ret
jmp
out
cmp
inc
xor
mov
cwtl
push
pop
mov
inc
cmp
push
push
pop
mov
add
cmp
or
in
dec
mov
in
out
jno
jae
leave
ljmp
or
cmp
ret
sub
inc
pop
mov
cmc
xlat
sub
inc
les
push
call
lock
jp
loop
lds
xchg
out
jmp
in
mov
xchg
push
inc
cs
mov
adc
inc
inc
cmp
add
jae
shlb
mov
xchg
daa
popf
sub
mov
add
hlt
cs
mov
cwtl
push
xor
jnp
shll
pop
popa
adc
lahf
popf
jno
lret
scas
jne
inc
insb
mov
lret
jne
aad
popl
dec
ret
jle
invlpg
xorl
sbb
xchg
repnz
fidivrl
cmp
divl
mov
test
push
clc
jmp
lahf
hlt
addr16
dec
push
mov
jae
cmpsb
sbb
push
pop
sahf
ds
ja
adc
add
fs
sbb
jns
loopne
sub
and
scas
jns
test
inc
bound
std
and
or
icebp
mov
popl
bound
and
push
call
insl
andl
or
push
sub
pop
or
xchg
lock
stos
sbb
shlb
xor
dec
int3
stos
jl
lock
xchg
aas
sbb
shll
lret
hlt
or
mov
lods
out
testb
or
mov
mov
cmp
pop
adc
or
mov
xor
sub
cwtl
gs
mov
leave
int3
fwait
pop
ret
popf
push
add
stos
fimull
cmp
je
outsl
cwtl
cs
inc
repnz
mov
push
xlat
xor
adc
leave
popa
loope
js
mov
and
xchg
xchg
mov
mov
das
loope
cs
fldl
push
jnp
sub
inc
adc
lods
mov
mov
ud1
imul
fwait
dec
sbb
sbb
shll
dec
imul
mov
popa
sbb
sti
and
pop
rcrl
in
mov
jo
sbb
mov
pop
mov
shrl
push
inc
in
mov
cld
xor
cmpsb
push
jbe
mov
add
mov
aas
bound
and
int
into
test
imul
push
cs
sbb
cld
mov
clc
mov
push
out
nop
cmpsb
leave
sub
jbe
cmp
jp
pop
cmp
sbb
mov
adc
rolb
cmc
int
repnz
pop
imul
lds
cmpsl
inc
in
cltd
sahf
pop
out
mov
adc
sarb
testl
ss
add
mov
inc
push
push
mov
test
orb
daa
out
adc
sbb
xlat
mov
leave
jnp
popa
mov
shll
andb
jnp
mov
movsl
sub
xchg
lods
xor
mov
out
jo
push
jne
mov
pop
add
int
push
pop
nop
push
scas
xchg
clc
sbb
lods
fcoml
jmp
mov
fidivs
jmp
mov
sub
ljmp
lods
add
mov
mov
xor
dec
cmpsl
mov
insb
dec
sub
aam
jle
jl
push
ret
pop
add
jle
cli
xchg
jge
adc
outsl
pop
and
inc
test
xchg
fistpl
mov
int3
fisubl
push
push
inc
add
je
sub
pop
int
mov
or
xchg
fisubrs
adc
add
pushl
add
fsubr
pop
lret
adc
je
cs
mov
ljmp
into
ret
dec
pushl
or
xchg
leave
movsb
sub
sub
xor
xchg
lds
jb
push
pop
roll
jge
lea
push
outsb
xchg
add
vaddps
inc
sub
dec
sub
lahf
pusha
mov
dec
cli
lds
pushf
xchg
or
mov
fucomi
jge
ljmp
in
mov
in
push
xchg
add
jl
and
lds
xchg
nop
in
cwtl
jb
movsb
nop
aad
dec
xchg
int
gs
pop
sbb
pop
lret
les
cmp
cmc
stc
bound
imul
lods
daa
push
push
ljmp
ljmp
mov
sbb
inc
mov
or
jl
and
sbb
jge
je
mov
iret
pop
and
inc
call
jecxz
inc
pop
stos
idiv
lods
imull
push
lods
xchg
adc
int
daa
ljmp
ret
lret
jnp
clc
fwait
dec
dec
fs
pop
pop
shlb
punpckhdq
adc
out
je
add
mov
jae
xor
int
stos
xchg
movsb
sub
out
mov
jno
adc
and
js
in
and
mov
aad
jl
roll
mov
sbb
roll
sub
mov
inc
pop
push
pop
xchg
mov
xchg
xchg
data16
pop
adc
xchg
mov
and
cmpsb
push
cmpsb
mov
xchg
pusha
jo
leave
outsl
fadd
inc
mov
inc
cmpsl
movsb
fwait
in
addr16
cs
call
xchg
xchg
out
out
xchg
iret
cwtl
movsl
inc
mov
mov
leave
sarb
sub
jb
sub
mov
cmc
sbb
fsubl
outsb
fcomps
ja
xchg
dec
rcrb
cli
call
xor
dec
test
and
sub
ret
mov
adc
sub
xor
cmp
in
mov
mov
pop
mov
push
adc
mov
or
mov
out
sub
fisubrl
lea
out
cmpsb
or
fimull
mull
adc
jmp
incb
jo
bound
push
fisubrs
loop,pt
or
enter
xor
fmuls
pushf
adc
mov
ljmp
push
xchg
inc
clc
push
adc
jp
movsl
imul
mov
jbe
stc
lods
or
mov
movsb
rcrl
test
cmp
push
sbb
add
aaa
push
idivb
jns
mov
sbb
testb
cmpb
inc
jno
adc
add
pop
out
mov
dec
enter
sbb
je
in
orb
sbb
aas
fwait
push
sahf
sbb
cmc
outsb
insb
arpl
hlt
ficoml
daa
les
mov
cmp
scas
ret
sub
mov
loop
testb
mov
push
sbb
jge
xchg
mov
mov
mov
inc
mov
not
daa
or
or
mov
sbbb
mov
clc
rdpmc
insb
jl
fcoms
fcompl
pop
repnz
jbe
dec
ja
push
push
in
popa
cmp
xchg
bound
fmuls
add
hlt
mov
test
inc
cltd
and
jecxz
stos
lahf
sarl
mov
cmpsb
sub
les
pop
mul
popf
inc
cmp
mov
je
sub
jbe
aam
in
lea
test
mov
push
orl
push
push
jne
push
mov
pop
in
pop
shlb
inc
sub
mull
inc
and
fdivl
or
inc
nop
jns
pop
jge
enter
jns
repnz
pop
add
xchg
mov
adc
aaa
push
xchg
jae
imul
mov
dec
add
inc
mov
mov
sub
adcb
cmp
sub
or
lods
ret
sub
lds
jae
aad
stos
cwtl
call
mov
les
ss
xor
cwtl
dec
sub
loope
div
call
loop
imul
mov
leave
clc
mov
je
fwait
pop
xchg
xchg
push
es
add
push
cmpsb
xlat
cmp
into
add
mov
lock
push
int
mov
iret
jb
xor
in
sub
jb
rcll
lea
adc
lods
inc
pop
cmp
push
cli
fsubr
bound
inc
jb
mov
push
mov
movsb
es
pop
orb
in
cmc
cmc
push
sahf
pop
dec
sbb
std
popf
adc
ds
mov
imul
cmc
cwtl
divb
out
cld
jp
aaa
mov
lds
sub
movsb
fiaddl
push
mov
fs
push
fsubs
movnti
push
loopne
data16
xlat
cmp
or
lods
sub
enter
out
test
push
jecxz
or
add
out
stc
fs
xchg
push
xchg
cmpsb
xor
cmp
es
pop
in
dec
repnz
mov
add
or
stos
dec
and
mov
adc
mov
popa
out
pop
incb
out
test
icebp
loope
cld
icebp
adc
xchg
lret
add
mov
jae
pop
push
ffree
cmp
repz
cmp
add
sbb
fwait
sbb
ret
push
push
call
movl
into
repz
loop
add
xchg
loope
ficoml
mov
or
fwait
cmp
cmp
shll
mov
iret
mov
std
jle
outsl
stc
add
dec
jns
fs
and
and
out
ret
mull
adc
pop
int
call
mov
add
dec
fsubrl
xor
lock
push
movsl
inc
push
cmp
loope
mov
mov
push
leave
in
out
mov
movsb
mov
and
inc
mov
shl
mov
jge
xchg
mov
push
xlat
stc
mov
push
subb
push
mov
negb
jg
je
leave
sbb
add
push
sahf
aaa
out
popf
mov
xor
dec
je
dec
inc
push
inc
or
outsb
pop
push
orb
sub
in
insl
add
sub
hlt
aas
insl
into
jo
sub
in
mov
pop
dec
or
mov
inc
jne
aaa
mov
sbb
add
stos
imul
and
arpl
loopne
shll
fldcw
fstps
out
loopne
sbb
ss
cmp
mov
xchg
movsb
or
loope
or
fidivrs
mov
xchg
loope
imul
aam
sub
push
inc
out
std
shll
mov
cmpsl
je
or
mov
dec
js
ljmp
jge
cmp
ja
int
and
push
mov
test
daa
sbb
out
adc
data16
xchg
xchg
or
add
lcall
adc
mov
pop
rorl
push
cli
or
sarb
out
and
push
mov
pop
push
iret
lods
and
adc
das
pop
inc
std
pop
icebp
or
jne
sbb
mov
cmpsl
mov
nop
inc
insl
adc
inc
mov
rcl
cwtl
pop
mov
flds
rol
out
push
and
int3
add
adc
xchg
jae
dec
in
icebp
xchg
pop
xor
pop
sub
bound
and
xchg
testl
ljmp
and
stos
mov
addr16
test
jb
inc
pop
jge
push
add
mov
jnp
jne
cmp
pop
add
idivb
out
xchg
repnz
ss
js
xchg
iret
fildl
icebp
jl
dec
stos
addr16
pusha
ljmp
xlat
add
pop
dec
cmp
movsb
daa
sub
insl
jno
testb
cmp
lea
jns
sub
into
mov
fldenv
push
sub
rorb
repz
leave
pushf
lret
clc
pop
inc
shll
inc
arpl
adc
push
pusha
fisttpl
fimuls
sub
or
dec
pop
mov
mov
adc
fldenv
cmpsb
std
jns
imul
lea
xor
jp
and
mov
ja
je
mov
sub
lret
jecxz
in
int3
imul
fs
xor
stos
inc
inc
pushf
icebp
nop
iret
xchg
aad
pop
mov
mov
popa
imul
mov
mov
jle
jp
jno
dec
lods
call
or
ss
repz
in
in
adc
sahf
aaa
push
scas
dec
dec
stc
push
aad
xchg
mov
ja
aaa
cmp
sahf
pop
cmpsl
mov
fmuls
bound
pusha
mov
add
add
jno
adcb
div
mov
pop
xchg
xor
test
dec
je
das
ficoms
inc
sbb
iret
imul
xlat
jno
pop
int3
and
cmp
or
xchg
icebp
xor
xchg
leave
jl
mov
add
push
xchg
xlat
pop
clc
jae
push
push
fstpt
lret
xlat
or
cmp
mov
add
xchg
push
dec
mov
shll
xchg
fmull
cmp
xchg
into
push
js
test
push
iret
sub
dec
jae
pop
dec
daa
leave
and
xor
pop
dec
ss
fsub
lcall
xchg
es
push
push
bound
stos
int
mov
and
or
dec
aaa
lcall
push
loopne
mov
adc
pop
inc
mov
add
sub
rcll
push
mov
leave
fwait
mov
aas
shll
in
aaa
data16
add
test
and
loope
int
adc
mov
pusha
in
cmp
jle
bound
outsl
cmp
arpl
lock
mov
ds
add
stc
sbb
adc
ljmp
das
or
jns
mov
xchg
add
pop
xchg
test
push
lret
inc
add
cld
mov
or
fisubrs
adc
outsb
and
icebp
test
cli
outsb
sub
pop
arpl
out
or
cmp
pop
mov
cltd
fcomp
shll
mov
sub
rcrb
pop
xchg
or
xchg
mov
inc
jns
jns
loop
adc
call
xor
push
dec
andl
add
cmp
lahf
push
dec
mov
pop
dec
mov
lcall
add
mov
cmp
imul
add
fcomip
lods
jae
mov
aas
mov
jo
adcb
sbb
lret
inc
push
out
andl
int
xorl
cwtl
out
mov
inc
lds
jno
jo
push
and
movsl
mov
inc
movzbl
lock
xchg
sbb
xchg
stos
pushf
in
xlat
push
cli
leave
cmp
data16
xchg
fadd
sahf
data16
adc
and
or
fwait
jecxz
add
jmp
lods
out
cmp
jo
ljmp
push
daa
push
push
mov
mov
mov
les
flds
cmpsl
push
and
fstpl
mov
xor
xchg
lock
loop
gs
cwtl
arpl
sarl
hlt
pusha
test
dec
add
mov
aad
cmp
inc
xorb
mov
out
mov
leave
lahf
lea
jg
xor
inc
sbb
rorb
arpl
cmpl
mov
dec
es
insl
add
pop
jae
or
lcall
cwtl
xchg
movsb
dec
jge
mov
cmpsb
mov
jnp
jecxz
cmpsl
sub
leave
jno
add
sbbb
mov
jecxz
or
xchg
pop
pop
pusha
jbe
and
aad
imul
in
test
aad
scas
fimuls
mov
cmpsb
xor
cmp
mov
mov
adc
lahf
mov
inc
push
fnstcw
jle
push
fcmovnu
jbe
pushl
stos
mov
ljmp
mov
stos
mov
xor
or
xchg
jmp
test
lcall
and
pop
adc
mul
or
inc
scas
pop
hlt
mov
mov
sbb
push
addr16
inc
jae
and
add
adc
mov
test
and
cmp
and
in
mov
jbe
aam
mov
cmp
icebp
pop
mov
fwait
pusha
pushf
push
jae
mov
xor
push
sarl
out
stos
mov
fdivl
push
sub
int3
sub
inc
iret
fisubrs
sub
jns
dec
mov
cmp
mov
add
int3
add
dec
lds
adc
pop
cli
dec
or
add
dec
sbb
int
out
cmpsb
inc
inc
and
imul
xchg
xchg
or
pop
jg
mov
fisttpll
jg
bound
dec
in
push
dec
inc
dec
pop
loopne
push
pop
popa
inc
adc
push
adc
mov
adc
ret
xchg
ja
jg
cs
sub
xor
mov
inc
adc
push
stos
mov
aam
into
rol
jo
mov
mov
es
sbb
hlt
mov
cmp
or
mov
adc
mov
aaa
pushf
push
aad
sub
scas
inc
mov
mov
int3
pushf
pop
adc
jb
fisubl
sbb
cltd
fdivl
ret
sbb
jmp
enter
xlat
sbb
inc
xor
mov
test
cmp
xor
pop
loope
mov
insl
filds
sahf
pop
xor
sbbb
into
xor
cmp
cmp
sub
mov
pop
push
lcall
and
jp
stos
test
inc
push
or
aas
addr16
rorb
push
sub
dec
aas
inc
xor
dec
push
mov
pushf
clc
mov
mov
inc
fs
jp
sahf
out
movsb
inc
scas
sub
mov
jnp
mov
ja
sub
sbb
test
cltd
into
leave
xchg
in
add
inc
mov
xor
adc
cmc
or
fsub
mov
loope
imul
loope
or
scas
repnz
adc
push
sub
xchg
inc
test
inc
repz
jne
lret
bnd
dec
mov
add
cs
in
cltd
fcmovne
inc
fs
faddp
push
loope
fdivrl
loopne
mov
xlat
lds
in
cmp
dec
adcl
xchg
xchg
lds
gs
dec
filds
dec
fsubs
mov
inc
or
mov
inc
fdivr
mov
fs
int
push
imul
pushl
test
mov
xchg
adc
jne
jg
inc
enter
mov
mov
dec
daa
push
mov
sub
ljmp
adcl
xlat
movl
test
pop
mov
les
popa
and
arpl
ret
paddd
jmp
iret
dec
and
aaa
ss
outsl
mov
daa
dec
cmp
xor
cli
scas
add
loopne
add
in
pop
mov
pushf
mov
mov
addl
shlb
lods
sahf
iret
lods
std
mov
mov
clc
dec
add
mov
inc
push
mov
dec
add
xchg
mov
pop
jp
je
bswap
out
mov
lret
lods
pusha
adc
inc
int3
cli
jae
xlat
or
xor
out
mov
popf
dec
test
in
add
test
xchg
or
les
bound
sub
lea
mov
pop
or
cs
dec
mov
sbb
and
jge
push
adc
repz
js
in
cld
int3
shll
mov
or
fldt
sbb
dec
sub
shlb
pop
test
pop
xchg
adc
lods
lret
ljmp
leave
cs
fnstenv
or
mov
cli
and
pushw
push
imul
out
in
fstpl
clc
push
pop
fimuls
test
shll
mov
movq
and
add
test
sbb
jnp
in
outsl
mov
in
int
xor
mov
fsubrl
stos
xchg
pop
jae
fsubrs
loope
jle
test
cmc
push
or
push
jge
or
jnp
push
sbb
pop
xchg
test
gs
sar
inc
or
stos
dec
test
sbb
or
mov
std
loopne
pop
xchg
cmp
imul
divps
sub
mov
ret
loope
lods
into
insb
and
lcall
sti
xor
jmp
jge
mov
scas
adc
cld
insl
mov
popf
movsl
js
jmp
out
lods
mov
mulb
mov
repz
loop
adc
push
imul
test
stos
cmp
cs
ljmp
add
notb
adc
fcoms
dec
fiadds
dec
out
popa
mov
inc
xchg
lcall
rcrl
xchg
cmp
inc
icebp
lods
mov
xlat
mov
mov
ss
sbb
mov
aad
push
and
lret
loop
bound
jne
sub
mov
decl
popf
pusha
cwtl
imul
insl
fstpt
push
aam
dec
dec
fiadds
rcrb
sbb
aam
test
dec
fsubrp
stos
pop
imul
sbb
mov
aas
cmpl
cmp
xchg
cli
dec
jle
inc
add
and
jne
repnz
imull
pop
frstor
sarb
jmp
push
repnz
mov
push
stos
add
jmp
shll
or
scas
enter
push
jg
pop
iret
sub
aad
mov
daa
mov
mov
fs
pop
cmc
push
outsb
mov
push
aad
lret
lock
jmp
and
pop
adc
or
repnz
pop
stos
push
mov
fs
out
loop
repnz
pop
xchg
mov
rolb
mov
inc
outsb
lods
mull
mov
fadds
sahf
pop
aas
or
gs
add
cltd
ret
pop
daa
add
sbb
push
shl
insb
insl
test
repnz
push
out
imul
adc
rorb
dec
push
mov
or
dec
fmulp
jmp
jno
test
push
rolb
leave
mov
call
test
or
push
or
fcmovnb
inc
mov
mov
sarb
xchg
rorl
mov
daa
fs
stos
test
in
stos
rcl
js
movsl
mov
imul
shl
addr16
sahf
mov
call
out
xor
pushf
sub
mov
popa
xor
dec
cmp
cmp
lods
stos
loopne
and
sbb
jecxz
mov
mov
ss
mov
pop
dec
lahf
mov
shll
test
enter
lahf
pop
push
icebp
inc
mov
xor
mov
cli
mov
jge
or
pop
sbb
mov
aas
add
inc
jle
and
movsb
lock
test
or
scas
inc
cmpsl
mov
pop
jp
js
jecxz
clc
push
outsl
or
or
stos
jl
hlt
scas
inc
push
cli
mov
add
sbb
lods
jge
mov
movsl
push
mov
mov
ja
xor
sub
xor
inc
cmpsb
ds
enter
into
xchg
inc
mov
lds
lds
jp
cmp
or
mov
loopne
gs
push
push
adc
mov
dec
montmul
cmpsb
add
mov
pop
add
jmp
jne
cmp
movsl
sub
ja
mov
dec
add
mul
mov
xchg
or
inc
es
inc
push
add
dec
mov
mov
shrl
mov
int3
add
jg
add
jno
xchg
ficomps
add
icebp
into
test
aas
orl
inc
add
add
dec
fisttps
sbb
pop
mov
xchg
xchg
cli
jno
mov
popa
push
cltd
jns
cmp
sub
movsl
int3
leave
jecxz
popa
jb
and
out
mov
push
inc
mov
dec
inc
fdivr
filds
or
jns
imul
js
xor
add
icebp
popf
and
dec
mov
aam
iret
and
les
jns
aam
jmp
iret
out
out
mov
lock
cmc
pop
fistl
cltd
ljmp
shl
sub
jbe
mull
mov
test
sbb
scas
fbld
mov
mov
or
cmp
mov
mov
mov
in
mov
mov
iret
and
ja
ss
jmp
jnp
pop
or
out
cmpsb
pop
jecxz
fnstsw
shrl
pop
fcoms
pop
mov
into
popf
xlat
mov
adc
pop
add
mov
cmpsl
rolb
sub
jbe
sahf
dec
inc
cwtl
pop
sbb
shlb
sub
push
movsw
pop
or
and
cltd
sub
mov
lret
enter
jae
cmp
mov
push
lret
das
frstor
sbb
cmpsl
data16
in
mov
lret
dec
inc
imul
xchg
xlat
scas
loopne
xor
fwait
sti
out
xor
sbb
push
nop
adc
xor
dec
inc
xor
mov
movsb
cmp
imul
mov
repz
fdivrp
lds
lret
mov
push
sbb
inc
mov
mov
inc
xchg
add
and
ja
rol
insb
in
xor
pop
icebp
fs
mov
loopne
add
aad
cmpsb
jp
fnsave
pop
negl
ss
hlt
stos
sub
clc
lods
mov
mulb
repz
aaa
cmpsl
aaa
nop
ret
xchg
ror
lds
xor
push
daa
aas
or
je
jmp
cltd
cmc
push
push
and
fwait
xchg
out
aam
lret
insl
bound
pop
mov
pop
lahf
cvtdq2ps
sub
jae
into
out
dec
fsubrs
mov
lahf
inc
mov
lcall
xchg
xchg
adc
or
inc
jge
rorb
sub
testb
ret
add
mov
arpl
adc
shll
xchg
divl
sti
jp
inc
lcall
sti
lcall
daa
mov
add
int3
pop
scas
cmpsb
popl
xchg
das
testl
add
push
lahf
adc
fwait
or
out
enter
add
imul
pop
mov
rclb
imul
aam
movsb
test
adc
movsb
sub
inc
jb
clc
imul
jl
xchg
add
dec
mov
jmp
push
mov
push
add
xor
or
cmpsb
sti
mov
ljmp
mov
mov
fistpl
mov
lds
test
sub
aas
sahf
rcrl
fstpl
cmp
mov
in
pop
xchg
ret
push
mov
lret
test
and
stc
dec
incl
fistl
aad
mov
sbb
xor
or
push
aad
push
mov
cmp
mov
pusha
mov
movsb
sub
jnp
adc
cmp
xchg
push
in
adc
sti
pop
fdivrs
mov
imul
sub
fdivl
jae
movsl
lock
pop
xchg
cmc
cmp
sub
or
negl
inc
jae
paddsw
dec
inc
loop
adc
pop
xchg
fs
andb
lea
xchg
fwait
lods
dec
or
sub
ljmp
dec
hlt
subl
movsb
or
add
pop
cmc
push
outsl
negl
mov
jp
nop
xchg
push
and
ret
fcoms
in
enter
aas
push
stos
cmc
mov
faddl
jmp
add
xchg
repz
jmp
es
cli
cmp
jb
leave
inc
daa
push
bound
sarl
mov
sbb
cmp
stc
and
ffree
popf
cmpsl
push
and
jns
lods
rorl
cli
repz
push
xchg
daa
sbb
imul
push
scas
cwtl
inc
adc
push
clc
nop
les
int3
push
mov
mov
adc
loope
ret
adc
cli
cltd
movsb
mov
push
or
jns
test
aaa
gs
jg
add
ret
mov
inc
jo
xlat
cmp
gs
jns
inc
shll
or
mov
inc
adc
mov
and
xchg
insl
aam
adc
pop
and
or
popf
and
stc
xor
xchg
iret
inc
mov
sub
lock
out
cltd
clc
push
stos
ja
aam
xor
jbe
or
adc
mov
lret
jo
xor
push
loope
pop
shll
test
lods
mov
stos
sub
jge
jmp
ffreep
mov
hlt
divb
leave
pop
in
pop
mov
pop
hlt
jp
xor
xchg
movsl
cmpsl
outsb
pop
and
xchg
jg
pop
xchg
dec
js
std
mov
pop
mov
or
jne
sub
mov
aad
cmc
out
stc
out
out
jae
rcrl
jno
data16
push
xchg
xchg
lods
out
jnp
outsb
pop
jnp
sub
stos
xor
push
or
sub
jno
sub
pop
lret
shrl
inc
pop
or
jmp
add
daa
mov
ljmp
pushf
mov
pushf
and
inc
cmp
sti
sahf
inc
subb
jne
cmp
pushf
push
punpckhwd
mov
fcmovu
jo
and
add
or
test
xor
je
add
mov
in
add
jge
push
add
add
stc
mov
imul
jo
xchg
xor
push
push
lods
lret
orb
mov
jmp
mov
mov
js
cmpsl
ret
mov
inc
in
pushw
inc
cwtl
mov
sub
dec
adc
shr
push
pusha
ljmp
mov
sahf
push
push
cmp
ret
xor
outsb
inc
je
sti
jbe
lods
pushf
mov
jno
aam
rcr
in
lcall
mov
dec
jge
daa
or
fs
bound
inc
dec
int3
adcl
cmp
cmp
in
push
jae
inc
mov
pop
adc
addr16
xor
into
adc
jmp
lea
jg
and
xor
fwait
xchg
push
test
idivb
mov
imul
mov
mov
rcrl
and
mov
cwtl
lcall
xchg
pop
xlat
or
pusha
adc
pop
subl
sub
sub
pop
pop
psrad
sbb
scas
dec
mov
roll
mov
rdpmc
adc
inc
xor
mov
notl
lock
sbb
jmp
push
clc
loop
daa
mov
sub
add
repnz
lods
pop
dec
dec
das
cli
xchg
inc
sbb
or
sbb
popa
gs
cmp
xlat
mov
inc
dec
xor
mov
push
sub
popa
mov
push
divb
mov
add
push
mov
sub
add
decl
stos
jecxz
test
mov
sahf
icebp
into
push
xor
mov
cmp
and
fnstsw
xchg
and
push
mov
dec
pop
inc
inc
sahf
mov
adc
insl
jnp
pop
movsb
ljmp
lods
jmp
dec
dec
fidivrs
shrl
push
fisubrs
neg
insb
dec
mov
and
test
mov
add
dec
mov
imul
sbb
clc
pushf
movl
jle
jl
cmc
sti
xlat
sub
mov
lds
mov
stos
pop
inc
cmp
aam
pop
adc
imul
or
insb
xchg
fsubs
sub
ret
push
add
repnz
data16
out
mov
insb
clc
test
addr16
dec
shlb
mull
scas
xchg
cli
bound
xor
dec
fsubl
dec
xchg
std
fnstsw
mov
jl
push
aaa
sbb
ja
mov
dec
sarl
in
fcomps
push
je
bound
out
out
pop
shrb
add
aaa
push
add
add
jns
dec
dec
fucom
cmp
dec
scas
fmulp
mulb
pop
in
sbb
rolb
jp
cmpsl
sbb
push
or
mov
inc
cmp
das
push
daa
out
inc
mov
js
add
pop
mov
mov
pop
cmp
cltd
mov
mov
gs
hlt
dec
jo
ljmp
mov
mov
int3
mov
jg
dec
mov
xchg
mov
cld
int
cs
cli
cltd
test
mov
and
push
jb
push
mov
xchg
dec
cmp
cmp
add
jge
movsb
jmp
and
xor
cmp
insl
enter
mov
repnz
lret
adc
xchg
fimuls
cmpsb
push
insb
in
nop
mov
inc
xlat
das
aad
pop
or
ds
sti
daa
cli
xlat
in
insb
or
popf
xor
out
add
loope
xlat
subb
sahf
call
hlt
cmpl
lods
add
jge
cmpsb
dec
mov
je
push
loope
je
add
fdivrl
les
mov
lahf
in
push
out
rolb
hlt
add
add
push
adc
or
mov
jns
dec
add
jg
loope
pmaxsw
push
js
mov
je
push
cmpsb
push
jbe
sbb
inc
jns
dec
fiadds
cmp
out
mov
pop
and
in
fs
fs
mov
adc
mov
mov
movsb
xchg
addr16
movsl
push
dec
ljmp
sub
push
loope
call
mov
push
fs
or
jno
adc
call
sbb
lcall
inc
jae
cmc
sar
stos
cmp
dec
xchg
cmp
jge
push
mov
jb
xchg
fsubs
cmpsb
fs
add
sbb
cmp
cmpsl
out
rcrb
jno
or
add
sub
jle
icebp
xchg
sbb
xchg
inc
mov
fsubp
inc
pop
outsb
add
sub
das
fsubp
push
and
ret
sbb
inc
or
call
ret
inc
adc
add
jp
int3
orl
mov
pop
dec
push
cmp
insb
add
mov
and
sbb
and
pop
fldl
xchg
push
jge
imul
out
mov
pop
or
fisubs
xchg
pop
xchg
xchg
add
xchg
orb
mov
add
ret
in
fcmovne
jb
daa
inc
iret
sub
int3
loop
sbb
movsl
pop
inc
mov
es
jbe
cmpl
enter
sub
add
loope
nop
into
int
repz
jne
or
pusha
pop
stc
add
adc
xlat
fst
xor
repnz
daa
pusha
and
mov
mov
xchg
jbe
fsubl
cmpsl
push
xchg
mov
adc
or
push
jmp
fldcw
mov
ror
loopne
push
das
daa
jecxz
lcall
jecxz
push
pop
sbb
cwtl
dec
insl
mov
or
mov
push
aas
xor
dec
add
and
inc
push
push
adc
call
pop
scas
cli
clc
fs
sar
mov
jnp
pop
pop
cmp
cmpl
mov
xchg
loop
mov
icebp
in
mov
inc
adc
ss
sub
or
sbbl
push
in
scas
jns
or
pop
cli
arpl
jne
inc
shr
aad
movsb
arpl
dec
sbb
inc
jl
scas
push
out
xor
cmpsb
arpl
pop
push
lret
or
cmpsl
sbb
or
adc
lahf
cmp
addl
push
fwait
sahf
push
sub
neg
mov
stos
sub
jno
cmp
stos
cmc
fistl
sti
push
decb
sbb
push
std
out
ss
hlt
pop
fld
mov
in
cli
repnz
loope
sub
pop
sub
jmp
mov
adcb
sbb
dec
mov
cmp
dec
inc
sbb
mov
ss
push
jo
movsb
insl
shll
stc
decb
ficoms
or
mov
loope
loop
dec
sarb
out
pusha
outsl
mov
mov
movl
repnz
loopne
dec
movb
ds
jp
sbb
push
push
fcomps
xor
movsb
idivb
jmp
cmp
and
scas
rcl
std
pop
mov
push
push
popa
inc
and
ja
mov
adc
cmpsb
mov
aad
pop
pop
ljmp
pushf
xchg
xchg
and
lea
sub
and
popa
std
or
pop
lods
cmc
sub
mov
mov
xchg
mov
or
scas
mov
cmp
push
imul
es
inc
repz
loopne
mov
jbe
jno
cs
jo
movsb
lahf
test
dec
cs
nop
mov
mov
fs
sub
push
ret
scas
pop
sub
in
cld
test
call
cli
push
hlt
push
xor
mov
stos
stc
mov
mov
sbb
loope
in
test
mov
mov
inc
leave
subl
hlt
adc
push
test
nop
idivb
rclb
or
xchg
xchg
jg
sub
cmp
pop
xor
out
mov
pop
std
pop
inc
ljmp
dec
sub
and
add
js
pop
lods
pop
scas
mov
ljmp
sub
cltd
lock
or
jmp
data16
push
add
mov
push
pop
add
leave
dec
add
or
jl
repz
sahf
xchg
aas
test
es
andl
out
or
dec
call
and
push
in
adc
fwait
cmp
add
dec
or
outsl
dec
aaa
jl
xor
orl
ret
pop
je
imul
cltd
fst
xlat
cmpsl
mov
test
jmp
mov
out
das
cmp
clc
push
lahf
cld
mov
or
pop
mov
call
xchg
testb
leave
aas
sbb
clc
popa
mov
jae
cli
into
mov
dec
cmp
ret
pop
mov
pop
or
fcmovb
in
sbbl
and
arpl
out
inc
and
adc
mov
lret
ds
incl
imul
push
ret
jb
sbb
shr
add
int3
xor
jge
push
and
mov
mov
mov
xchg
gs
mov
mov
sbb
rorl
cmc
ret
bound
popa
mov
scas
pusha
jmp
inc
test
push
dec
jp
cwtl
int3
cld
add
jecxz
jnp
adc
jno
jo
xorb
mov
lea
gs
in
pop
push
mov
movsb
dec
lods
movsl
sti
pop
shrl
out
jmp
inc
cmpsl
adc
shlb
movsl
jb
lahf
xor
push
mov
out
das
dec
testb
lret
dec
mov
mov
xor
orl
cmp
test
in
push
inc
push
sub
push
in
aas
pop
lcall
outsl
fwait
jp
inc
add
imulb
and
imul
xchg
out
mov
mov
jnp
shl
sub
repnz
lret
mulb
mov
scas
movsl
nop
and
lock
xor
push
mov
nop
les
jge
mov
jae
sarb
test
repz
insl
and
cmp
and
jbe
sbb
add
mov
das
push
push
dec
mov
inc
lods
fisubs
sub
ss
pop
ja
and
bound
pop
in
xor
push
shll
les
pop
xor
test
in
jmp
fistpl
jg
shrl
je
and
mov
lcall
jg
adc
xor
iret
cli
fcompl
test
rol
outsl
or
inc
jle
es
cmp
leave
cmp
inc
icebp
std
rcrb
mov
in
mov
push
mov
addl
test
es
lcall
pop
push
ret
or
xchg
aas
ljmp
xor
imul
jns
xor
mov
mov
dec
testb
scas
adc
out
in
mov
arpl
add
inc
xor
dec
adcl
jg
adc
repnz
mov
sub
in
dec
nop
dec
out
jecxz
dec
lahf
cmp
sub
mov
jae
jb
adc
std
fiaddl
dec
in
push
mov
inc
push
fists
popf
mov
decl
ja
mov
pusha
repz
repnz
sub
cmp
or
sub
push
add
adc
rcll
fucomi
fdivl
je
mov
ss
mov
adc
test
sbb
sahf
sti
stos
lahf
cmpsl
lods
and
subl
out
pop
push
and
pop
jo
pop
es
add
dec
or
inc
cmp
cmp
pusha
test
pusha
cmp
adc
stos
insb
mov
xor
and
sub
inc
popa
push
jb
add
shr
getsec
pop
and
fiaddl
lret
and
ss
int
xchg
adc
xorl
xchg
fiaddl
inc
xchg
sub
lds
add
xor
pop
icebp
pop
mov
mov
loope
or
and
lods
push
addb
jae
inc
mov
adc
push
repz
dec
pop
xchg
mov
cltd
into
rorb
cmp
stos
enter
out
ds
cmp
and
mov
cltd
sub
inc
push
xlat
daa
stos
popa
xchg
ljmp
push
sti
out
mov
adc
stos
sub
stc
jl
or
jae
mov
or
pop
xor
movsl
pop
loop
mov
int3
out
or
cmp
xor
pop
xchg
jbe
pop
mov
rorl
enter
mov
lcall
inc
mov
es
pop
leave
mov
dec
xlat
imul
inc
shlb
xchg
mov
mov
or
mov
hlt
mov
mov
leave
sbb
push
jno
std
jle
aaa
push
cwtl
jge
nop
mov
mov
cli
into
lds
mov
in
insb
js
rcrb
xor
mov
and
dec
xor
cs
push
je
leave
mov
repz
adc
inc
icebp
push
dec
or
inc
sbb
mov
push
xor
dec
dec
mov
pop
cmc
aad
adc
or
or
cmp
cld
pop
xor
out
xlat
mov
jge
jb
or
ds
xchg
js
pop
mov
mov
outsl
imul
adc
insl
jle
mov
into
sbb
mov
mov
jns
add
testb
xor
sub
push
inc
call
sub
sub
ljmp
mov
lea
xchg
dec
inc
movsl
xchg
sbb
jb
imul
xor
out
mov
add
sahf
shl
movsl
out
ja
mov
ss
ja
lea
xorl
sbbl
mov
loop
jmp
mov
xchg
xor
cmp
jecxz
dec
int3
iret
dec
icebp
cmc
in
dec
jg
aad
adc
push
cmp
into
out
ror
lods
xchg
adc
je
xchg
xchg
push
sbb
rcrl
cmp
mov
cmp
push
push
mov
pop
pop
add
add
mov
fwait
ljmp
and
dec
stos
inc
mov
mov
lock
inc
xlat
arpl
imul
cmp
jl
scas
push
pushf
sbb
push
pop
mov
jnp
push
in
pop
and
mov
xor
jecxz
xchg
and
inc
in
fwait
sbb
mov
jp
fistpll
scas
xchg
cli
js
test
mov
lods
jnp
ret
push
sub
rcrb
cli
push
mov
popa
rorb
arpl
pop
jnp
or
pop
or
dec
or
pop
mov
push
aaa
sbb
repz
mov
cmp
ss
rcr
fwait
lret
mov
adc
xchg
daa
mov
dec
add
cltd
dec
insl
mov
pop
lahf
lock
mov
mov
ds
cmc
adc
push
push
inc
mov
lahf
lahf
jle
mov
xchg
cmp
sub
jge
popa
push
cmc
or
mov
mov
test
in
repnz
push
mov
mov
sarb
testl
inc
jg
rcr
insb
dec
cmp
mov
cmpsl
enter
das
sarl
adcb
sbb
mov
adc
add
gs
rorb
xor
xchg
xchg
cmpsb
test
cmc
xor
mov
ret
popf
or
mov
arpl
in
jb
jle
or
cmpl
mov
xchg
lahf
in
int
loop
cli
das
fcompl
push
mov
xor
arpl
mov
movsb
int3
inc
ds
addr16
test
fs
sbb
xchg
aad
xchg
sbb
rorl
out
lods
ret
negl
push
pop
test
test
data16
push
xchg
stos
shlb
xor
pop
jne
xchg
lret
icebp
dec
mov
fsubrl
movsb
inc
sbb
inc
imul
mov
leave
call
mov
push
mov
mov
adc
aaa
cmp
mov
out
pop
mov
int3
fstpt
scas
lret
xor
popf
outsl
lcall
mov
and
ret
inc
dec
cs
notl
mov
in
leave
roll
push
lcall
call
mov
lea
data16
jle
loopne
fwait
js
dec
push
subl
push
and
dec
lds
jle
std
pop
mov
fwait
jns
ss
fdiv
mov
or
add
popl
in
xchg
xchg
push
test
mov
frstor
or
xchg
sub
adc
jecxz
mov
testb
je
lods
sub
inc
cltd
xor
adc
les
dec
adc
insl
fisttpl
jmp
sbbb
test
mov
pop
std
push
repnz
data16
imul
adc
faddp
add
stos
adc
loope
xlat
insl
lret
stos
nop
inc
dec
and
xchg
inc
icebp
out
cmc
mov
mov
pop
mov
push
jo
push
jmp
popf
and
mov
int
and
aas
lret
mov
pushl
and
imull
pusha
jbe
xor
pop
mov
pop
sub
stc
sub
inc
xchg
addr16
sbb
pop
pusha
jns
ljmp
and
das
sbb
sub
pop
ljmp
mov
inc
inc
cmp
jmp
ret
je
cmp
in
out
add
adc
sub
pop
pop
push
sbb
scas
jg
xchg
inc
stc
and
cmp
jmp
dec
or
cmc
pop
lock
pop
subw
and
jne
sub
and
js
xor
inc
inc
mov
xchg
repz
pop
ret
popa
test
aam
push
jns
mov
das
sub
aad
clc
sbb
dec
out
mov
xchg
sub
lss
pop
movsb
jnp
shlb
lods
push
lcall
sbb
minps
mov
pop
mov
call
push
roll
sbb
dec
mov
cmc
pop
push
les
or
sbb
fsubrs
xchg
sub
pop
outsb
jmp
inc
cmp
sub
xchg
jl
nop
adc
icebp
adc
mov
popa
sbb
out
sbb
inc
cmp
bound
adc
movsb
dec
mov
daa
cmp
mov
repnz
iret
movsl
fstl
sahf
into
mov
jecxz
cmp
add
jg
into
mov
and
push
out
add
push
push
iret
loope
insl
inc
in
sbb
sub
jns
adc
xor
push
add
repnz
ds
ret
pop
jnp
push
mov
xor
mov
pop
jne
fcoml
loope
or
mov
jmp
jg
xchg
pop
push
mov
sub
jg
es
push
jmp
jnp
mov
cmp
pop
and
lods
cs
xor
mov
pop
xchg
push
and
push
mov
push
xchg
cli
adc
lahf
repnz
adc
mov
pop
pop
movsl
pushf
mov
test
lret
inc
ljmp
xor
jbe
cmp
imull
dec
clc
fcmove
out
test
xchg
xchg
jge
or
addr16
push
nop
pmuludq
insb
or
ret
adc
mov
fwait
sbb
mov
popf
dec
or
xlat
mov
pop
or
jp
inc
in
mov
cld
dec
fwait
mov
dec
inc
int3
dec
lahf
push
fsts
and
add
lea
insb
shl
cld
inc
cli
mov
dec
les
cmpsb
fwait
inc
mov
dec
sbb
fsts
out
and
xor
jle
adc
fwait
and
mov
xor
addr16
paddusw
dec
in
jmp
sbb
and
inc
addr16
push
mov
mov
fisubs
imul
adc
mov
add
daa
nop
loope
aaa
xchg
ljmp
mov
stc
int3
fnsave
jmp
xor
xor
inc
sahf
xlat
xlat
loopne
cmpb
jp
xor
xor
idivb
push
stos
adc
mov
add
dec
or
xchg
pop
inc
xchg
loope
cmp
fs
jmp
mov
cld
xchg
xchg
mov
jmp
enter
stos
jge
andb
sub
lods
sahf
sbb
sbb
jnp
mov
xor
and
dec
mov
mov
mov
stc
jns
mov
out
pop
push
dec
mov
fsubs
push
push
xor
pop
bound
mov
and
cmp
adc
shll
nop
cwtl
cmove
pop
cmp
in
xchg
lcall
sub
or
mov
dec
push
int3
xlat
out
das
and
das
pusha
push
ljmp
sbb
in
adc
pop
cmp
dec
jmp
mov
lds
in
add
mov
fidivl
add
repz
mov
in
mov
pop
loop,pn
xchg
adc
daa
mov
mov
imul
push
cmp
negl
mov
sub
clc
pop
pop
adc
fldenv
clc
mov
outsb
sub
popl
inc
mov
cwtl
jns
sbb
enter
push
mov
scas
mov
sub
and
sahf
and
loop
or
pop
dec
lock
into
pop
test
call
xor
cwtl
aaa
mov
aaa
fisubrs
repz
adc
mov
adc
add
jae
jb
mov
adc
dec
jb
insb
test
push
push
sbb
pop
fldenv
in
out
jnp
jg
adc
push
lock
push
jo
pop
mov
into
mov
shl
jns
and
sarl
mov
xor
cmp
js
std
add
fs
inc
mov
dec
sbb
lret
push
dec
cmp
xor
or
ret
out
jp
inc
push
mov
hlt
or
mov
test
sbb
ds
data16
gs
shl
push
pop
insb
clc
mov
dec
mov
pop
adc
shrl
loop
lcall
cmpsl
xor
loopne
orl
cvtps2pi
aad
fdivrl
pop
add
and
and
aam
add
push
xor
mov
push
jnp
data16
int
popf
cmp
addr16
cmpsb
adc
stos
adc
pop
cld
xor
mov
mov
jp
dec
dec
jmp
jmp
arpl
pop
rcrl
adc
pop
mov
rorb
add
add
inc
insl
mov
jg
sti
repnz
pop
inc
sub
shll
ds
popa
inc
push
push
sub
dec
push
test
xchg
stc
sarb
cmp
and
push
pop
add
inc
mov
iret
cmp
cmp
cwtl
pop
pop
push
xchg
lds
sbb
ja
push
xor
fidivs
mov
lahf
pop
leave
inc
inc
test
and
xchg
and
stos
test
dec
pop
lods
or
add
outsb
adc
jmp
popa
mov
xor
or
insl
popf
push
movb
das
aam
mov
imul
addb
dec
cwtl
sub
jmp
inc
mov
mov
mov
lcall
sbb
cmpsl
jecxz
xchg
push
das
shll
xchg
and
inc
mov
mov
or
fildll
aas
aam
jae
lods
cmp
fdivrl
outsl
cs
jae
pop
mov
hlt
push
daa
and
pop
mov
inc
or
es
sub
xor
xor
mov
push
repz
jbe
in
mov
mov
cmpsl
jns
je
loop
jnp
mov
rol
inc
adc
pop
mov
mov
mov
pop
xor
adc
pop
sti
or
dec
push
std
and
jbe
insl
dec
out
into
lcall
je
mov
aaa
mov
pop
movsb
xchg
add
adc
ja
call
jmp
pop
pop
sbb
mov
fwait
adc
push
pushf
pop
lcall
in
out
or
repnz
daa
stc
repz
push
orl
mov
xchg
ror
add
sti
adc
dec
and
push
xchg
and
mov
cwtl
insb
mulb
lahf
pop
lods
in
aaa
outsb
out
fistps
push
cmp
mov
sub
incl
push
call
pop
push
cltd
in
test
push
cmpsl
negb
mov
lahf
jb
mov
jbe
cmpsb
pop
push
imul
pop
aaa
mov
and
push
mov
in
jnp
mov
xchg
xor
and
fsubrl
pushf
mov
or
mov
push
cmp
push
pushf
aam
sub
repnz
aam
es
sbb
push
btc
aam
popa
xchg
jl
rolb
add
cmp
mov
fwait
adc
dec
aaa
ficomps
inc
mov
stc
int
jno
inc
cltd
or
mov
inc
negl
cmp
inc
loop
cmp
add
mov
jae
add
mov
ds
xor
test
pusha
sarb
test
jo
dec
mov
push
sub
adc
shll
imul
enter
in
dec
ss
ljmp
sbb
leave
rcrb
pop
sbb
push
aam
loop
and
stos
ss
scas
dec
jne
fldt
push
dec
inc
jl
shll
mov
adc
vcvtsd2si
test
mov
and
xor
imulb
int3
movsl
imul
imul
lock
stc
outsl
cmp
push
js
lods
add
cs
sbb
add
pushf
addr16
psubq
std
cmp
inc
mov
in
inc
jb
adc
enter
push
fcoms
aaa
orb
inc
lret
pusha
jmp
xchg
in
std
cmp
out
es
insl
imul
mov
lock
add
in
mov
sbb
cmp
dec
out
add
das
lret
mov
scas
outsl
cmp
lret
jne
movsl
adc
pop
iret
lahf
loopne
fcomip
mov
mov
mov
xlat
and
xchg
adc
roll
xchg
mov
pop
sbb
pop
adc
shr
mov
ljmp
sbb
pop
ret
aas
inc
sub
fstps
cmpsl
rorl
push
adc
jle
mov
xor
lret
mov
shll
stc
and
mov
and
das
sbb
mov
daa
mov
loop
imul
fwait
mov
in
mov
or
movsb
xchg
lods
in
call
mov
stc
mov
stos
leave
adc
jno
ja
sti
fcmovbe
int
pop
pop
stos
lds
lods
popf
out
int3
mov
adc
mov
push
and
push
negb
pop
push
loopne
inc
mov
push
push
adc
mov
adc
xchg
adc
jp
pop
out
cmp
sti
addr16
sbb
shl
lods
pop
mov
jbe
xorb
mov
in
xor
fs
pop
fstpt
mov
xchg
mov
or
sbb
add
and
dec
jl
sahf
in
jnp
mov
test
call
rol
inc
mov
movl
dec
inc
out
xchg
pop
xlat
ret
mov
mov
jns
inc
bound
cmpsb
imul
cltd
outsb
mov
xchg
arpl
cmp
sahf
xchg
ljmp
mov
rcrb
pop
sti
andb
inc
les
lock
or
test
or
fxch
pop
inc
jge
imulb
test
jmp
add
insl
push
inc
sub
lock
jle
insb
fistpl
fcmovb
mov
mov
dec
loope
cmp
fstps
punpcklwd
inc
leave
outsl
inc
push
adc
and
dec
xor
jecxz
jne
inc
loope
sub
jl
mov
sbb
mov
inc
push
pop
sets
lods
sub
push
pop
test
sub
mov
rcr
outsl
les
loope
adc
pop
xor
xor
xor
xchg
int3
or
addb
test
popa
insl
adc
lods
cmp
sbb
pop
pop
hlt
ds
js
cli
pop
pop
pop
repz
ret
inc
add
icebp
inc
mov
out
lods
cli
rcrl
addl
adcl
fstl
sub
jns
cli
and
lds
pop
int
xchg
cmc
outsl
jbe
inc
mov
int
sub
out
adc
imul
jno
mov
out
cmp
out
je
cmp
mov
sbb
jns
mov
cmp
pusha
add
lret
inc
outsb
mov
push
or
rol
and
and
daa
adc
les
push
sub
xchg
jae
mov
aas
jo
cwtl
adc
cmp
xchg
inc
pop
adc
cmp
test
jae
or
int
jge
pop
pop
test
inc
and
jge
out
push
xchg
xchg
push
pop
mov
dec
dec
int3
mov
sub
push
jbe
and
mov
fs
stc
shlb
and
inc
xor
push
sahf
pop
ret
xor
ficompl
hlt
inc
dec
and
and
pop
sti
cmp
mov
mov
adc
mov
loope
jnp
inc
mov
mov
xchg
pushl
test
cli
das
filds
test
ss
pushl
lret
push
mov
push
inc
in
jne
out
into
mov
add
and
jmp
popa
dec
fs
pop
pop
adc
fs
je
lds
adc
cwtl
add
cmp
xlat
in
dec
jae
mov
inc
inc
mov
enter
sahf
add
xchg
outsl
xor
sarl
into
cmp
in
push
stc
and
sti
cmp
mov
xchg
cmp
add
aad
outsl
outsl
fistpll
jae
pop
nop
ret
cmp
mov
pusha
movb
out
mov
mov
inc
adc
js
fadd
popf
jbe
adc
addb
fiadds
xchg
pop
sbb
lock
xchg
xchg
js
pop
into
xchg
push
mov
adc
icebp
xchg
shlb
mov
nop
lods
incl
ds
xor
in
out
mov
pop
stos
dec
outsl
jns
fcompl
int
gs
fisttpl
sbb
dec
lock
and
push
ja
cmp
call
jl
and
clc
mov
inc
jnp
outsl
aaa
cmpsb
outsb
lahf
icebp
out
shlb
js
fdivl
sbb
mov
stos
and
and
neg
cmp
dec
cmp
stos
xchg
cmpsb
push
pop
scas
and
out
add
push
pop
lods
je
imul
imul
adc
fnsave
cwtl
test
nop
lock
xchg
test
stos
ja
push
andl
adc
push
fsubp
pop
push
jmp
xchg
mov
adc
push
in
loopne
outsb
leave
mov
ljmp
lods
pop
stos
hlt
loop
std
sbb
inc
mov
ss
cmp
xchg
add
movsb
popa
mov
jl
sti
fsubs
mov
out
das
aaa
jbe
mov
dec
mov
stos
mov
jbe
adc
add
mov
stos
mov
movsl
mov
mov
mov
cwtl
pop
lods
xchg
sbb
mov
cmpsl
shll
out
roll
xchg
and
lret
xor
es
fwait
add
pop
in
push
jle
sub
fistps
stos
push
mov
fiaddl
sub
cld
mov
or
xchg
dec
mov
ror
sub
scas
cmp
notl
push
rorl
jmp
outsb
mov
inc
push
ret
call
arpl
lahf
inc
das
sbb
lret
aaa
es
in
inc
inc
jecxz
stos
ja
icebp
pop
dec
mov
call
sub
or
push
xor
out
mov
outsb
sbb
jp
inc
aaa
mov
leave
sbb
cmpsl
stos
stos
call
dec
jne
inc
jp
leave
cmp
lods
pop
call
daa
aaa
repnz
aaa
orb
aaa
sub
dec
insl
out
movsl
mov
or
lea
ret
sub
decb
call
pop
mov
bound
xlat
mov
cmp
cmpsl
push
jp
pushf
imul
cmp
jg
pop
sbb
mov
xlat
lods
mov
std
inc
ficoms
mov
jecxz
cld
lods
pop
jmp
jecxz
and
mov
mov
incl
fstl
es
cmpsb
push
push
imul
jmp
test
pop
push
and
repnz
movsl
call
push
icebp
cs
ljmp
mov
orb
push
sarl
movsb
sarb
jns
and
and
jnp
xchg
iret
xchg
adc
adc
rcrl
push
pop
out
adc
dec
adc
jg
loope
cmc
mov
cld
mov
add
popa
in
outsb
lea
push
psrlw
cmc
loope
addr16
shlb
adc
imul
cmp
imul
or
dec
jno
push
pop
sbb
fidivl
push
test
mov
dec
mov
push
mov
imul
mov
mov
aam
xlat
fisubs
int
sub
scas
ficoml
in
das
fdivs
js
shlb
loop
test
jns
ss
inc
int3
roll
insb
sub
xchg
inc
sbb
mov
clc
fnstcw
cmpsl
or
xor
dec
ret
pop
test
lcall
sbb
imul
out
add
adc
and
loope
push
jle
sub
cmpsb
xor
mov
lea
jae
cwtl
outsb
aad
shll
in
ror
dec
mov
and
xchg
xchg
stc
mov
add
or
and
pop
mov
or
adc
and
out
inc
inc
cmp
pop
jb
inc
and
iret
add
out
jbe
xor
invd
xorb
mov
and
dec
cmp
pop
movsl
or
xorb
popa
mov
sbb
pop
bound
xchg
pop
mov
sbb
xor
imul
jmp
mov
lock
mov
out
and
jnp
loope
ljmp
rorb
scas
hlt
push
push
or
pop
or
jns
sarl
jp
add
mov
jns
and
sti
leave
sbb
push
pop
stos
les
je
rolb
das
aad
push
add
and
add
fcmovnb
sub
decb
dec
pop
fwait
jge
sarl
lds
stos
or
inc
cmpsb
lods
push
push
add
out
cmp
sbb
inc
repz
and
push
lret
jbe
fisubrs
hlt
jae
inc
pop
jns
es
cmp
ss
xchg
dec
mov
insl
fcmovnu
ret
adc
and
daa
shrb
icebp
push
sub
aaa
jnp
or
mov
mov
cmpsb
ret
jmp
loope
jb
and
ja
jo
pop
pop
or
test
stc
les
xchg
mov
stc
jl
fsubr
xchg
jge
in
jb
jge
dec
xchg
mov
cmp
mov
andb
call
loop
push
mov
arpl
inc
pop
cmpsl
lcall
inc
mov
mov
mov
mov
and
scas
add
int
popa
rolb
pop
call
shlb
sub
pop
sbb
xor
mov
nop
mov
sahf
popf
xor
push
or
mov
mov
push
in
mov
dec
aaa
adcl
pop
and
data16
xchg
addb
or
aad
jbe
mov
sub
adc
fsqrt
and
or
and
popa
sub
cld
sbb
stc
push
sbb
adc
jbe
pop
in
sub
aad
in
lock
dec
cmp
outsb
cmp
adc
loopne
mull
adc
sub
mov
mov
loop
and
mov
movsb
and
xor
in
lret
adc
dec
jmp
fstps
and
add
arpl
insl
cli
cmp
bswap
mov
xchg
jp
mov
jl
jns
inc
or
sub
leave
jae
test
mov
das
xlat
sub
leave
xchg
pop
cmp
or
roll
dec
repz
dec
mov
cmc
out
iret
mov
mov
and
push
add
test
ds
or
shl
inc
lcall
sbb
pop
add
xor
cmp
cmpsb
push
mov
fsts
mov
push
lahf
and
arpl
push
and
add
clc
pop
imul
jne
xor
adc
lds
jp
xchg
je
mov
fucomp
imul
rcrb
xor
xchg
mov
mov
iret
jl
icebp
xorl
mov
dec
rcrl
repnz
mov
and
nop
stos
jno
mov
xchg
xchg
in
dec
sub
out
dec
push
jb
dec
pop
jb
insl
cmc
dec
or
mov
into
inc
jp
rorb
loope
insl
lock
jl
push
mov
imul
sbb
cpuid
idiv
lret
call
jecxz
cld
mull
idivb
cltd
sub
outsb
push
outsb
pop
mov
stc
out
stos
or
mov
orl
mov
sbb
mov
dec
xlat
xchg
sbbl
lahf
and
sub
cmp
push
add
ret
icebp
push
jo
outsb
pop
mov
outsl
mov
push
xchg
call
push
jbe
adc
int3
jecxz
ljmp
push
dec
lock
insl
cld
mov
sbb
sbb
out
pushf
xor
or
sub
pop
push
shl
daa
adcb
add
add
fisubs
mov
in
pop
cltd
gs
icebp
xlat
movsb
popa
call
fs
cmpsb
xchg
loopne
mov
inc
jmp
lret
jbe
mov
xchg
js
jle
mov
cmp
pop
sbb
std
push
dec
jp
ret
dec
mov
test
out
xor
std
testb
out
das
int
sbb
dec
in
mov
pop
lret
iret
mull
cld
mov
mov
xorb
or
inc
push
inc
mov
loopne
mov
inc
pop
dec
subb
mov
in
in
and
push
push
test
les
pop
or
jecxz
xlat
jbe
or
pop
inc
inc
jle
shrb
inc
cmpsl
or
xchg
jns
sbb
cmp
jns
shlb
popf
xor
popf
lret
les
xchg
adc
lds
fcomps
js
xor
not
xor
int3
push
sub
stc
cld
cmp
pop
xlat
mov
repz
jbe
test
cmp
pusha
sbb
mov
push
test
xchg
daa
cmp
mov
movsl
inc
sub
push
push
xchg
jecxz
sbb
jp
sbb
mov
addr16
push
sub
xlat
std
fsts
xchg
fcmovbe
cwtl
cmp
adc
testl
scas
add
inc
add
inc
pusha
je
std
adc
mov
sbb
push
adcb
sub
pop
rcl
xchg
dec
dec
or
imul
xor
or
test
jns
lods
mov
subb
ficompl
sub
fidivl
push
outsl
out
fcoml
or
leave
movsb
dec
cmpl
adc
and
cmp
pushf
lahf
cmp
mov
lret
dec
pop
jmp
addb
and
push
mov
adc
add
ss
mov
ljmp
jecxz
in
test
repz
ja
and
sbb
mov
xchg
jae
push
sub
in
xor
daa
pop
sub
inc
dec
add
sbb
sahf
mov
inc
dec
das
push
sub
outsb
inc
or
call
inc
test
push
test
int
jb
lods
rcr
pop
cmp
cltd
jne
insb
test
mov
lea
stos
adcb
mov
adc
add
cmp
adc
fdivrp
jae
and
or
sbb
push
mov
popa
push
pop
and
je
mov
in
ret
push
in
mov
std
mov
jns
xchg
push
and
pop
cmp
and
sub
arpl
aam
dec
shl
pop
cmp
in
in
push
in
out
je
xor
cmc
cwtl
test
mov
dec
dec
outsb
mov
mov
mov
dec
fs
int3
and
ljmp
fistpl
sub
mov
rorl
fdivs
mov
add
ret
cmp
fwait
stos
sub
and
lcall
pop
pop
adc
adc
stos
loope
or
pop
sbb
jb
push
pop
dec
dec
pushf
test
push
rcrb
jmp
or
dec
loop
ss
lds
fcomp
test
cmp
les
jmp
mov
fbld
aas
in
push
push
lods
add
dec
inc
mov
xchg
movb
div
lods
mov
pop
mov
test
xchg
pop
sbb
jne
push
out
push
ss
xchg
mov
jb
shll
test
dec
mov
cli
mov
mov
out
xor
mov
dec
ds
inc
out
adc
cmp
imul
xchg
sbb
mov
movsb
and
aad
cmpb
cmp
push
jo
jge
push
sahf
int
xchg
xor
mov
loop
or
movsl
adc
mov
add
xchg
fdivl
cmovns
or
xchg
push
mov
ja
lcall
ljmp
cmp
mov
aam
scas
scas
push
test
popf
sbb
mov
and
faddl
iret
adc
push
icebp
in
cmp
jge
jb
daa
mov
cli
imul
jno
xchg
inc
mov
jmp
test
shl
aad
pushf
lret
std
or
andb
loopne
pop
lahf
add
inc
call
faddl
mov
int3
jae
ljmp
ficomps
and
inc
dec
mov
mov
sub
mov
mov
das
test
push
and
punpckldq
fwait
ret
mov
mov
pop
sti
inc
loop
je
pop
xchg
xor
icebp
cmp
and
add
sahf
fxch
push
neg
jmp
mov
idiv
mov
test
jmp
lret
adc
xchg
pushf
fidivrs
mov
in
pop
into
jmp
inc
push
movsb
pop
xor
jg
pop
mov
mov
pop
lods
out
js
pop
push
mov
mov
mov
dec
or
gs
cltd
push
push
clc
lods
mov
aam
dec
call
mov
stos
pop
and
mov
test
mov
and
shlb
mov
push
sbb
inc
leave
cli
mov
push
cmpl
cmp
cltd
ljmp
popa
dec
imul
mov
cli
jnp
add
adc
inc
push
push
mov
cmp
dec
pop
push
or
add
mov
cmpsl
scas
adc
stos
sbb
xchg
popa
test
sbb
jno
adc
mov
and
iret
jb
pop
stc
fdivp
cmp
jbe
cmp
jg
lret
jle
mov
notb
push
fwait
mov
sbb
or
ret
xor
cli
insb
sub
add
jns
test
sbb
and
mov
adc
movb
out
adc
rcr
stos
sahf
mov
adc
push
mov
jnp
mov
outsl
in
sti
mov
inc
lods
test
xorb
cwtl
cmp
leave
stc
jne
leave
jne
test
mov
push
ss
stc
daa
daa
rcrb
movb
roll
mov
adc
scas
dec
pop
out
xchg
adc
es
repz
testl
dec
dec
dec
vphaddubw
add
add
mov
mov
not
lock
rolb
or
xchg
dec
cwtl
orl
leave
push
iret
or
roll
adc
movswl
ja
cmp
roll
repz
or
fildl
dec
sbb
fstpt
fsubrl
jnp
int3
and
xchg
push
sti
push
cmp
sarl
mov
addr16
inc
dec
mov
mov
cmc
cmp
adc
jle
pop
mov
or
cmp
enter
push
add
cmp
jne
mov
sahf
lods
and
insl
andb
out
push
pop
push
mov
xchg
push
mov
jl
cmp
loop
or
mov
aad
cmpsl
xchg
sahf
lahf
inc
mov
fisubrs
inc
add
test
sbb
cmp
rolb
inc
jns
pushf
xchg
dec
jg
dec
setg
cmp
pop
xchg
lock
sub
adc
mov
dec
jmp
stos
adc
push
clc
lock
std
dec
inc
inc
aas
aad
data16
pop
daa
sbb
fisubs
mov
push
mov
xchg
jecxz
sbb
lahf
pop
mov
jl
ljmp
xchg
xchg
out
sbb
sbb
xchg
iret
andb
dec
inc
cltd
jmp
dec
or
adc
mov
mov
mov
and
outsb
pop
mov
sarl
adc
daa
test
in
loope
cmpsb
sarl
mov
dec
fwait
add
sub
cmpsl
push
loop
repnz
fsubl
cli
clc
mov
sub
arpl
xchg
scas
loop
pop
push
pop
fisttpl
jmp
or
adc
nop
push
cmp
and
mov
mov
fadds
cmp
cld
sbbl
les
fnstenv
pop
cmc
dec
mov
xchg
aad
xchg
pop
push
push
test
push
mov
xchg
sub
adc
in
popf
filds
mov
in
or
adc
mov
push
call
ja
cmp
ret
mov
push
cwtl
clc
jae
jle,pt
inc
add
jp
movsb
ja
pop
rclb
je
inc
pop
adc
out
mov
pusha
sbb
xorb
inc
jno
test
pop
sti
arpl
cmp
and
out
push
ss
xchg
icebp
pushf
addr16
xor
mov
adc
fistpll
out
lahf
jbe
push
mov
mov
rorl
pop
pop
or
mov
es
sub
test
lret
jae
inc
and
xchg
insb
lret
add
pop
mov
inc
push
insl
inc
scas
data16
push
mov
mov
in
pop
rcll
xchg
aam
fisttps
sub
imul
pop
lret
imul
mov
lret
push
adc
das
stc
loop
movsbl
stc
add
sbb
lcall
mov
popf
data16
aaa
loop
dec
mov
mov
es
pop
inc
cmp
idivb
cmc
testl
fcom
xchg
mov
jb
or
add
push
or
mov
cli
int
sbb
cmp
subb
lds
pop
cli
jmp
loope
sub
ja
loop
xchg
pop
add
sti
jg
js
test
mov
xor
mov
out
dec
ljmp
cs
insl
imul
sub
cmp
jae
shll
sub
dec
add
test
mov
xchg
negb
sbb
lods
xchg
subb
inc
stos
sub
xor
es
mov
shll
fs
sub
xor
sbb
lods
into
lods
add
ja
js
and
ret
sbb
pop
repnz
jns
jmp
sub
arpl
xor
jno
cld
fsubl
jno
icebp
scas
and
push
shll
out
sub
adc
pop
push
cmp
xor
or
repz
fstpt
fldt
enter
ljmp
lcall
pop
lds
pop
imul
push
add
cwtl
std
xor
or
inc
xor
aas
sbb
daa
fstps
repnz
jmp
into
data16
fsubrs
mov
sbb
add
inc
out
jne
out
xchg
pop
xor
cwtl
mov
jnp
ret
sbb
inc
call
mov
pop
sahf
sub
aam
imul
negb
cmp
inc
jle
sti
dec
outsb
pusha
pop
mov
and
addb
lods
outsb
in
pushf
mov
jbe
fmul
not
shrb
sub
jae
fdivrl
xchg
repz
jb
jge
pop
cld
scas
pusha
mov
cmc
dec
mov
mov
inc
jg
aaa
pop
les
iret
fmull
cmc
sahf
adc
mov
pop
push
lcall
xor
mov
movsb
pop
mov
dec
leave
push
in
call
xchg
dec
pop
popf
lcall
add
gs
mov
faddl
adc
xchg
pushf
outsb
pushf
cltd
jbe
inc
in
or
aaa
jge
adc
inc
aaa
add
mov
inc
cmp
repz
out
xchg
sar
arpl
gs
sub
decb
add
fcmovnu
loope
lcall
fwait
cmpsl
mov
lcall
or
shrl
repz
iret
or
lea
lret
push
cmpsb
mov
pop
xor
imul
push
addb
inc
jle
inc
fldcw
and
mov
push
pop
ret
rolb
push
or
mov
hlt
pop
mov
push
stos
arpl
scas
pop
jg
sub
aad
pop
dec
test
imul
pop
dec
ljmp
outsl
sub
stos
pop
neg
mov
fstpt
out
jbe
pop
in
std
jns
jp
xor
cmc
lds
out
and
sti
mov
aad
imul
stos
lcall
add
jns
jmp
aad
addr16
jle
mov
fidivrs
mov
test
mov
push
pusha
mov
enter
call
adc
or
jno
mov
lock
andl
stos
insl
xchg
stc
bnd
subb
add
or
jbe
inc
mov
shll
or
mov
rcl
pop
mov
cmp
mov
add
popa
ja
push
stc
popa
cwtl
cmc
add
je
push
adc
shrb
cli
pop
inc
pop
lret
mov
in
mov
xor
adc
cmpl
das
or
mov
repnz
pop
jo
mov
jns
push
sbb
scas
and
lahf
es
pop
add
jns
push
mov
fsubrl
icebp
or
inc
fisttpll
xor
mov
mov
dec
jmp
mov
add
cmp
adc
outsb
and
fbld
cmp
fisubrs
inc
js
jnp
jmp
fbstp
mov
nop
pop
xor
mov
fsubp
jmp
adc
or
mov
pop
cmp
xchg
pop
adc
mov
push
mov
xchg
fidivl
aam
push
nop
cltd
loopne
in
scas
dec
mov
pop
and
or
out
pusha
inc
sub
incb
cwtl
mov
int
jg
dec
dec
fmull
out
mov
xor
loope
mov
dec
cltd
aas
inc
mov
loope
repz
daa
lcall
inc
dec
gs
cmp
pop
add
inc
std
mov
cmpsb
std
test
mov
es
mov
mov
add
fildl
arpl
addr16
popf
jmp
sub
mov
leave
jbe
jno
jns
jp
loope
jmp
adc
mov
cmp
sub
push
xor
ret
lret
test
cmp
leave
into
cmpsl
les
idivb
mov
cwtl
pusha
cmp
dec
ja
and
mov
popf
xchg
dec
decb
jl
scas
dec
fcmovnb
repnz
fidivl
mov
jle
dec
or
or
in
in
xchg
sub
popa
and
push
neg
arpl
mov
cltd
mov
mov
cld
fiaddl
and
push
imul
dec
fs
adc
mov
orb
out
cmpsl
sub
sub
push
adc
dec
cltd
aad
popa
sub
xor
cmpsb
pop
xor
sbb
xchg
outsb
xor
arpl
cmp
lret
inc
or
cmp
pop
ljmp
test
stc
inc
aam
push
xor
mov
and
mov
mov
xchg
pusha
test
jo
pop
cmp
lret
dec
lds
sub
sbb
add
mov
sub
cmp
mov
lea
out
xchg
mov
xor
js
jb
pop
dec
mov
or
mov
iret
sub
xor
jae
ja
test
push
loope
mov
push
fs
jmp
out
mov
out
add
fld
leave
cmp
in
jg
dec
adc
dec
aam
sub
fistl
in
mov
jmp
cmc
ret
lcall
xorb
jno
and
pop
pop
mov
adcl
clc
ljmp
sbb
pop
into
dec
push
inc
shrl
pop
lcall
out
adc
jo
ja
xchg
inc
add
aaa
out
rorb
test
popa
adc
stos
aaa
or
xchg
pop
xchg
lods
out
loope
push
xor
fs
fldenv
xchg
jno
das
jg
stos
sbb
and
mov
cmpsl
add
xchg
test
inc
xchg
push
jl
cmpsb
inc
in
push
lret
fadd
xchg
loop
aad
inc
movsl
lret
or
rcll
into
test
inc
cmp
insl
adc
xchg
repnz
addr16
hlt
dec
cmpl
dec
push
push
push
push
sub
xchg
cmpsl
pop
xor
scas
mov
adc
or
xchg
adc
inc
mov
xchg
sbb
outsl
popl
lds
insl
pushl
icebp
adc
fistl
pop
or
shrb
leave
cmp
pop
loop
push
xor
arpl
jnp
nop
lods
sbb
stc
rorb
jl
cmp
cli
movsb
mov
jmp
pop
test
jmp
or
mov
leave
pop
je
clc
dec
pop
fstl
inc
ss
ss
lcall
add
pop
pop
adcb
xchg
mov
push
and
xor
dec
mov
xor
xor
loopne
pop
les
js
jns
pop
movsb
adc
into
push
divl
sbb
stos
sbb
sub
or
sub
outsl
mov
aam
mov
adc
mov
adc
mov
repnz
lretw
and
lds
mov
es
adc
mov
les
xchg
stos
xchg
in
pusha
lret
xchg
mov
or
xlat
mov
in
int3
sub
sub
mov
add
pop
add
mov
and
mov
call
mov
ljmp
sub
xchg
scas
adc
mov
push
shrb
push
sub
out
inc
jmp
cwtl
rcll
cmp
push
xchg
jo
jbe
xor
imul
repnz
lock
and
mov
pop
lcall
mov
or
push
shll
jl
ja
jo
jns
sbb
mov
lea
sbbb
lock
inc
inc
mov
sti
xchg
out
xchg
jns
lcall
jge
loop
fcoml
push
xchg
popa
ss
add
xchg
mov
lcall
and
fs
push
mov
cmp
push
pop
scas
cwtl
ret
or
mov
jecxz
gs
adc
subb
cli
sbb
jb
pop
fstl
cmp
stos
in
push
sbb
pushl
sub
mov
mov
adc
popa
sbb
mov
pop
mov
loop
sub
icebp
outsl
arpl
pop
mov
xchg
movl
daa
imul
and
mov
dec
xchg
push
xchg
test
sarl
roll
int
jmp
ret
jp
push
or
sbb
pusha
adc
movsb
pop
test
ret
cwtl
int3
das
std
fisttpl
outsl
aas
dec
popf
fst
in
jl
push
xchg
cs
lods
sbb
xchg
xor
sbb
mov
loopne
test
push
dec
sar
cmp
xor
lret
daa
imul
pop
ja
addr16
cmp
xor
mov
inc
mov
sub
xor
push
jmp
inc
or
shlb
fsubs
mov
sahf
cmc
mov
popa
notb
dec
fwait
test
jecxz
call
jns
pushf
mov
fldl
movsl
ror
jmp
sbb
sub
fsubrl
iret
mov
cltd
stc
mov
add
jmp
jnp
add
stos
xchg
jne
push
xchg
mov
fwait
push
cmp
jle
aam
mov
aaa
pop
in
decb
rclb
pop
test
in
jge
iret
mov
dec
xchg
mov
arpl
mov
in
sub
fisttps
mov
out
icebp
mov
xchg
fidivrl
insb
dec
rclb
pop
cmp
add
push
ror
cmp
jbe
movsb
pusha
mov
xor
xor
sub
imul
stos
mov
xchg
inc
jnp
pop
or
repnz
stc
push
std
clc
add
cmp
jl
clc
push
jae
pop
pushf
fildll
popf
mov
je
mov
ds
fstpt
mov
inc
sbb
cwtl
mov
fisubs
ficoms
dec
std
movsb
lcall
jle
popf
roll
or
or
adc
orl
fisttpll
test
cmpsb
mov
mov
shr
fwait
daa
push
xor
sub
out
mov
pop
mov
inc
or
call
lea
outsl
push
and
mov
xchg
inc
cs
sbb
push
leave
sbb
push
imul
xorb
adc
in
leave
hlt
sbb
fcomps
xor
and
fists
mov
in
out
pop
adc
rcll
aas
pushf
imul
lcall
sbb
xlat
test
lret
movsl
xor
es
in
lds
add
adc
xor
insb
add
push
xchg
orl
pusha
rcrl
cmc
enter
push
stos
ljmp
push
cmpsl
add
mov
ja
push
popf
mov
mov
pop
xor
sbb
ja
jmp
mov
sub
insb
daa
das
repz
and
push
fwait
lods
sub
push
fadd
xor
fstpt
imul
cmp
lock
daa
push
in
mov
cmp
cmp
sbb
jae
xchg
xchg
into
pop
clc
ret
lahf
fiaddl
pushf
xor
insl
subl
cmpsl
loop
add
or
xchg
fisubs
sbb
mov
enter
ret
in
scas
orl
xchg
mov
push
sub
sbb
sub
movl
push
das
adc
jmp
arpl
cmpsl
push
in
sahf
ljmp
jnp
push
cli
pop
mov
adc
aad
mov
xchg
push
testb
cmpsb
sub
movzwl
jle
in
fldt
and
movsb
lods
rcl
into
cmc
ds
fwait
xchg
dec
fists
ficomps
cmpsb
test
adc
push
sub
mov
mov
push
jl
or
es
int
or
push
mov
mov
cmpsl
mov
aad
test
xor
dec
xchg
fcomi
sbb
mov
inc
inc
stos
and
mov
sub
mov
insl
dec
rcrb
push
and
jne
aad
es
push
loopne
cmp
pop
or
pop
adc
push
mov
sti
pop
dec
test
sub
dec
div
adc
cmp
daa
mov
insb
jg
sarl
gs
sti
jge
cwtl
adc
or
mov
mov
pop
lods
xor
mov
mulb
into
ficoms
and
fs
sbb
mov
or
mov
aaa
sbb
scas
dec
dec
call
cmova
and
in
push
lret
dec
inc
loopne
jmp
into
mov
adc
jmp
movsl
fisttpll
ss
in
jecxz
mov
leave
mov
add
jl
sub
lret
cmp
and
cmp
outsb
int
dec
in
in
xchg
mov
ljmp
adc
ljmp
xchg
sub
mov
cmp
shrb
xchg
cltd
xchg
push
daa
dec
xchg
scas
mov
push
adc
inc
out
repnz
pushf
pushf
fmul
insl
aas
test
imul
cltd
insl
push
cmpsl
or
cmp
sub
xor
rcrl
testb
push
pusha
das
daa
or
cmp
cmpsl
and
pop
push
adc
testl
mov
xlat
out
cli
mov
mov
ljmp
xchg
scas
fcompl
mov
test
push
loope
xor
nop
repz
jns
xor
js
inc
outsl
sub
sbb
xchg
adc
movb
ret
mov
fstpt
and
stos
inc
aas
data16
mov
xchg
rolb
mov
xor
ja
adc
in
mov
es
mov
cli
mov
lcall
jb
fisubrl
imul
lahf
or
repnz
adc
jge
or
iret
mov
jo
xlat
enter
mov
add
jmp
aaa
into
arpl
fcoml
lock
in
outsl
pusha
xorb
push
mov
or
das
fimuls
cmc
mov
cmpsb
push
sub
repz
cwtl
mov
rorb
mov
mov
test
jmp
fucomi
push
int3
push
jge
sbb
dec
div
out
filds
inc
mov
cwtl
dec
clc
andl
in
push
push
stos
cmpsb
xchg
std
cmp
lret
arpl
push
mov
cltd
in
sub
test
inc
ds
rorl
stos
aaa
mov
pushl
add
xchg
xor
xchg
mov
mov
mov
cmpsb
in
fnstenv
aas
imull
adc
push
mov
or
pushf
adc
mov
dec
and
insl
mov
pop
mov
orl
push
push
pop
mov
pop
mov
rcr
xlat
or
mov
mov
dec
js
fldcw
jl
push
fcmovb
mov
mov
cmpsl
pop
stos
shll
adc
ja
pop
hlt
inc
jle
or
lcall
xchg
add
addr16
mov
dec
nop
ja
fidivrl
daa
sbb
and
and
mov
xor
jl
rcr
sbb
jo
out
out
or
xchg
sub
pop
xchg
ret
addr16
lret
pop
jns
add
xchg
pop
sti
notl
inc
push
mov
rcrb
add
mov
scas
pop
xchg
int
inc
adc
xchg
adc
out
push
stc
mov
lock
or
sbb
out
cli
lahf
xor
jecxz
sahf
and
adc
arpl
inc
inc
cmp
sub
call
jg
loope
test
je
sbb
lret
push
dec
repz
and
les
ret
mov
idivl
push
push
add
dec
repnz
push
sbb
aas
sbb
cmpsb
dec
inc
cmpsl
ds
notb
jg
faddl
ljmp
sbb
adc
movsl
adc
push
cmp
outsl
addl
sub
sub
cwtl
adc
sbb
pushf
in
test
and
sub
sbb
push
xor
ret
sbb
rolb
lret
cltd
sbbl
sbb
xor
push
or
inc
jg
jl
mov
jmp
or
dec
cmp
pop
fwait
mov
jp
pop
sub
lahf
push
ss
rcr
add
mov
pop
mov
loopne
cmc
jbe
lea
fcomp
and
sahf
and
fstpl
testl
imul
insb
and
sub
daa
les
lahf
lods
or
mov
lret
movaps
xchg
jecxz,pt
jno
mov
sub
fimull
ret
test
shlb
lods
adc
dec
movsl
imul
rcll
mov
fisubs
push
push
add
push
xchg
adc
sbb
jecxz
sbb
es
jb
clc
mov
movsb
push
cli
out
push
insb
pop
cwtl
mov
dec
adc
mov
in
ficoms
imul
sbb
aas
pop
mov
sbb
les
xor
push
pop
add
test
iret
lahf
adcb
pop
push
and
into
pop
daa
jo
cmp
sub
jns
mov
adc
ss
out
push
movsb
mov
xchg
inc
lds
stos
lea
stos
pop
adc
mov
inc
std
and
add
push
cmpsl
js
bound
arpl
shrl
rorl
push
pop
mov
in
cmp
ds
push
pop
lea
mov
jg
popf
aad
repnz
ljmp
pop
pushf
test
add
cmp
lods
in
pop
lock
add
lcall
adc
xchg
outsb
rcr
fs
loop
mov
outsb
mov
mov
scas
inc
push
lock
push
movsl
fstl
adc
push
push
or
sbb
or
adc
shll
in
sbb
aas
cmpsb
out
jl
scas
fwait
aaa
cmc
ficoms
add
fcom
xlat
push
cmp
jp
lret
xchg
inc
rorb
movb
pop
ds
in
rcrl
pop
out
or
lods
mov
aam
mov
test
and
mov
out
sub
sti
fmuls
movntps
mov
add
and
dec
dec
js
adc
push
xchg
add
in
cmp
jl
test
xlat
aam
xchg
out
push
ficoml
pop
dec
cmp
adc
or
lea
jl
push
xchg
seta
mov
movsb
rcll
loop
ret
xchg
pop
out
mov
add
test
leave
xchg
adc
lock
pop
push
xchg
xlat
loope
bnd
sbb
or
leave
sub
jns
jno
xor
dec
jno
scas
push
rclb
xchg
cmpsb
dec
mov
frstor
mov
jmp
shll
cli
idivl
cmpsl
xchg
ds
fidivl
stc
inc
jg
out
in
aas
rep
jb
mov
lea
icebp
sbb
pop
inc
jns
or
pop
cmp
xor
jnp
sub
fisubs
icebp
lds
pop
in
jmp
mov
test
pop
pop
xchg
add
in
loopne
or
rolb
pusha
aaa
jne
push
push
nop
jae
push
cmc
sub
xorl
movsb
repz
insl
imul
jb
jb
insb
sahf
cwtl
cli
dec
popa
ror
and
push
repz
mov
das
iret
cmpsl
daa
pop
add
popf
inc
mov
das
xchg
cltd
cmpsb
out
xchg
mov
mov
xchg
pop
adc
xchg
push
push
xchg
pop
sbb
std
push
imul
jp
mov
lret
lock
call
daa
ret
adc
movsb
cltd
jg
stc
inc
mov
xor
ljmp
xchg
insb
int
adc
loope
insl
scas
pop
fstp
ret
xor
pop
mov
sahf
insb
pop
cli
fcomp
out
imul
inc
jne
sbb
sub
loop
shr
xrelease
pop
sar
fcoml
movsb
inc
cltd
aas
movsb
mov
flds
arpl
add
addl
push
mov
push
mov
add
outsl
nop
cmc
dec
jae
mov
xchg
das
rorb
cmp
push
inc
xor
cltd
dec
ret
mov
mov
dec
cmp
push
in
dec
into
jne
sbb
imul
mov
cltd
jle
fsubl
add
mov
sub
push
cmpsb
sti
mov
mov
fldcw
aam
test
add
push
clc
mov
and
push
and
sbb
inc
aaa
cmc
and
pop
data16
stos
sbb
mov
add
or
jne
xchg
rcrb
pop
lahf
int
lret
scas
push
out
addb
xchg
cld
jo
incb
lods
mov
mov
xor
mov
icebp
mov
xor
add
out
mov
mov
mov
ret
dec
outsl
clts
xchg
xor
pusha
or
movsb
cmc
mov
lcall
lock
push
out
xor
in
out
cmp
cmp
js
cmpsl
xchg
frstor
pop
fstpt
xchg
mov
mov
cwtl
ret
mov
bound
push
jecxz
jle
push
lods
pop
loop
mov
dec
cmp
push
jle,pt
iret
fcoms
pop
cmp
sub
call
pop
popa
cmp
push
and
fimull
xchg
scas
sbb
xchg
orl
and
mov
adc
arpl
insb
mov
data16
cmovs
out
jnp
sahf
pusha
adc
dec
or
aas
pop
jg
or
cmp
push
mov
sahf
ljmp
mov
mov
xchg
jl
jns
test
add
push
int3
pop
lret
mov
mov
loop
repnz
ljmp
pop
push
jl
cld
repz
pop
loop
adc
cltd
filds
lods
jmp
pop
data16
pop
gs
jle
cs
subl
xor
js
xchg
pop
es
es
push
test
cmove
push
dec
shlb
aad
addl
mov
xlat
fisubs
inc
mov
and
xor
push
push
sbb
sub
inc
mov
xchg
add
filds
in
fstpt
or
enter
mov
pusha
cltd
pop
jmp
mov
into
mov
dec
fbstp
andb
inc
add
mov
sbb
adc
mov
clc
dec
add
sbb
ret
mov
fchs
mov
cmpsb
ja
xor
rclb
dec
jl
add
jo
and
lock
ds
mov
mov
loopne
xor
jmp
inc
pop
jae
lret
xchg
movsb
add
imul
cli
lcall
xchg
idivl
and
jns
xchg
xor
lret
loop
fsubl
and
sub
add
dec
pop
cli
dec
shll
dec
in
xchg
daa
sub
lods
je
pop
inc
sbb
add
cld
xchg
mov
pop
insl
pop
push
lock
insl
adc
sbb
add
push
imul
scas
inc
jo
in
clc
mov
adc
xchg
pushf
data16
pop
pop
cmp
and
pop
pop
ret
ret
out
jmp
sub
dec
cli
sub
jne
aaa
push
xor
stos
push
lea
out
insl
xchg
lds
dec
sbb
mov
xor
into
ret
rorl
fsts
test
push
jmp
or
insb
cmpsb
mov
mov
lods
xchg
insl
cmp
push
inc
ss
lods
lods
out
arpl
cs
rolb
sti
jbe
and
sbb
jo
fcoms
ljmp
jl
sahf
testb
loope
jb
shlb
scas
mov
fsubl
push
aam
and
add
scas
sti
int
popa
dec
gs
sarb
cmp
mov
scas
cmp
loopne
xchg
add
sub
aam
mov
adc
leave
or
add
mov
push
je
inc
lcall
in
xor
and
cmp
cmpsb
mov
inc
mov
in
cmp
dec
push
mov
mov
imul
push
cmp
push
in
lods
add
jns
sub
xor
push
and
pop
jnp
mov
pop
lds
and
imul
movb
scas
sbb
add
and
clc
xor
add
scas
mov
or
pop
mov
sahf
push
sub
push
adc
out
mov
adc
xor
pusha
aas
cmpsl
jne
arpl
in
aaa
dec
pop
outsb
jg
add
pusha
pop
sub
push
bound
scas
stos
cmpsb
or
mov
mov
in
or
das
jmp
icebp
lret
loopne
leave
cli
xor
fmuls
jo
aam
int3
icebp
add
negb
hlt
iret
inc
rclb
push
mov
lret
jae
ret
gs
dec
push
popf
addl
and
fisttpl
ljmp
fmulp
sahf
push
jno
call
cmp
in
jl
popf
add
or
jno
or
mov
mov
mov
dec
push
test
push
ror
jb
gs
call
cmp
pop
jle
das
cs
cwtl
lock
mov
filds
ret
fdivrs
lahf
ds
and
pop
pop
adc
imul
sbb
add
or
adc
in
cld
pushf
aaa
push
incl
lds
pusha
sarb
cwtl
mov
outsb
push
cli
adc
cmp
inc
mov
in
aaa
movsl
jnp
xor
test
mov
sbb
adc
or
pop
insl
jge
stos
or
and
inc
daa
and
mov
addr16
imul
inc
sub
sbb
add
aaa
pop
mov
or
mov
lds
outsb
pusha
xchg
cltd
xchg
xorl
push
sub
adc
out
sti
repnz
mov
inc
jg
iret
jl
mov
sbb
leave
loop
fsubp
roll
je
pop
test
or
mov
mul
insb
leave
dec
pop
mov
ret
data16
scas
pushf
sti
std
es
push
aaa
mov
and
dec
cmp
sub
orb
or
fldenv
lods
fbld
inc
scas
add
push
push
sbb
mov
inc
push
inc
pop
enter
sbb
mov
add
cli
cld
push
stos
pop
bound
mov
js
pop
sti
lock
jno
ja
mov
mov
int3
cmp
jnp
das
out
jno
jbe,pt
enter
add
int3
sbb
in
mov
test
mov
cmpsb
cld
xchg
ret
cmp
pop
notl
jecxz
in
xor
mov
add
adc
call
adc
jle
ss
and
out
adc
insl
inc
popa
rcrl
and
cmc
pop
ds
dec
out
lcall
lea
inc
aad
dec
sub
push
jo
repnz
inc
xlat
pop
sbb
mov
call
hlt
inc
mov
repz
jp
cmc
test
fldt
adc
mov
dec
sarl
incb
jae
lea
lds
push
or
in
adc
mov
and
push
out
aas
sub
push
lahf
iret
icebp
sub
pop
shrb
les
ds
lods
shl
sarl
shll
loopne
imul
inc
cmp
lret
cmp
inc
push
ja
add
pop
out
mov
sub
shll
scas
push
fsubrl
ret
mov
popf
lahf
mov
int3
sbb
add
in
sub
sub
push
jbe
es
xchg
pop
cmp
je
inc
pop
sbb
cltd
or
xlat
dec
xchg
lahf
loop
fldenv
int3
je
mov
je
xchg
mov
popa
test
cmp
mov
dec
imul
ret
push
movsb
and
fldt
pop
pushf
xchg
push
mov
pop
shrl
dec
sar
mov
or
dec
stc
aaa
ss
sahf
scas
cmpsl
push
xchg
sub
jmp
movsl
cmp
dec
std
stos
cs
mov
inc
mov
mov
mov
addl
in
sarl
sub
es
inc
inc
sbb
adc
xor
sbb
sub
lret
test
outsl
push
fs
ret
push
jge
ss
or
lods
cld
mov
test
add
mov
mov
in
fiaddl
js
push
cmp
jle
stc
daa
inc
icebp
mov
or
cmp
xchg
sub
jle
and
out
jb
add
fs
aaa
add
and
mov
jno
and
sub
sbb
mov
pop
lds
lret
mov
xchg
add
fisubrl
fiaddl
arpl
pop
repnz
insb
add
sti
shr
add
ret
lcall
dec
xchg
push
nop
outsb
sahf
lods
mov
aas
pushf
xchg
xlat
cwtl
pop
dec
push
daa
xchg
in
out
mov
les
pushf
movsb
sbb
xchg
scas
ror
adcb
jno
in
xchg
jmp
lds
scas
or
out
jns
cltd
or
and
rcll
pushf
cmp
fldt
dec
push
jmp
dec
push
mov
mov
jmp
mov
loope
bnd
xor
mov
mov
das
leave
cmc
bound
divl
shll
lret
data16
lods
sbb
xor
add
test
repz
test
lcall
fistl
test
pop
lret
outsl
movsl
xchg
sbb
mov
add
popa
mov
jl
roll
mov
push
jae
in
push
and
cs
mov
adc
lahf
jne
adc
lahf
inc
xor
mov
fwait
push
dec
bound
xchg
subb
push
lcall
sbb
shrb
xlat
ret
int
aas
adc
or
cmp
ss
mov
and
mov
das
adc
or
lret
test
xor
xchg
pop
mov
mov
ror
shlb
cmp
inc
mov
sub
push
mov
jae
pop
orb
loopne
cmpsl
dec
int
sub
pop
sub
stc
mov
pushf
pop
clc
ret
and
ret
cwtl
xchg
sbb
inc
ss
jae
mov
xchg
pop
pusha
push
not
inc
test
push
cmp
sub
inc
lgs
dec
stos
nop
inc
add
out
mov
aad
push
pxor
jl
fidivs
inc
pushf
or
mov
push
pop
inc
and
clc
sahf
aad
push
mov
inc
adc
iret
fistpll
mov
sub
push
pop
imul
add
test
push
shrb
mov
xchg
int3
cld
int3
mov
loopne
sub
lds
xor
sti
mov
cld
stos
push
dec
loope
adc
loop
jl
test
fwait
inc
pop
mov
in
inc
mov
sbb
out
cmp
pop
cmp
mov
cmc
xchg
leave
nop
pop
aad
push
mov
lock
cmpb
adc
movsb
lcall
fcomps
mov
pop
pop
pop
jne
xor
lahf
xlat
scas
lret
js
test
fs
pushf
and
xchg
sahf
ss
test
jecxz
push
sbb
repnz
adc
bound
or
xor
mov
and
subb
sbb
inc
push
hlt
insb
cltd
mov
rclb
int
inc
sbb
push
or
sarb
jg
loop
fsubs
inc
xor
insl
cmp
pop
jb
add
lods
or
fildl
imul
rol
outsb
mov
nop
call
and
iret
dec
jb
add
push
adc
xchg
push
jns
sub
mov
loop
stos
loopne
push
cli
mov
add
pop
sbb
andb
ret
nop
shr
jp
adc
jl
stos
testl
out
std
sub
sub
arpl
das
sub
nop
rorb
sbb
jo
popf
mov
cmpsl
mov
mov
mov
mov
in
sbb
aam
pushf
mov
mov
repnz
scas
or
xor
jl
loope
arpl
xor
jmp
rcrl
xchg
mov
addb
push
cmp
lret
inc
aaa
mov
in
push
and
ss
push
jns
jnp
and
leave
pop
cmp
lret
mov
inc
add
jp
mov
push
loopne
ja
sahf
mov
jl
push
cmp
jno
xchg
ds
mov
pop
mov
mov
jne
xor
cmp
icebp
xchg
ljmp
ds
dec
adc
scas
fwait
iret
or
enter
into
dec
mov
into
test
out
xchg
mov
outsb
int
push
ljmp
mov
mov
divl
cmp
cld
jae
dec
push
lahf
ret
adc
mov
or
in
outsb
and
lahf
jns
xchg
aad
jo
jb
lahf
dec
js
movsb
push
imul
lods
cmpsl
xchg
push
inc
aas
xchg
ljmp
sbb
push
push
xor
push
pop
xor
push
jmp
sbb
ja
add
dec
stos
icebp
int
out
cmp
mov
aaa
leave
scas
jns
adc
jmp
add
clc
mov
std
lods
movsl
jp
out
aaa
mov
fdivrp
and
pusha
insl
clc
lret
pop
xchg
shlb
fwait
call
inc
repz
inc
data16
out
sahf
sbb
cmc
mov
popf
dec
das
cmp
fstl
in
ret
shlb
xor
ljmp
mov
add
fdivl
mov
xor
test
in
lahf
arpl
pusha
scas
sbb
xchg
mov
fsubl
push
mov
adc
inc
add
lcall
scas
push
dec
lods
pop
push
loop
roll
jg
stc
pop
pop
cwtl
bound
sbb
push
jl
jg
addl
repnz
fiadds
sub
imull
fistps
adc
xchg
mov
sti
adc
dec
pop
loop
cld
mov
loopne
sub
mov
sbb
jle
cmp
icebp
add
das
push
pop
sbb
lds
bound
push
ja
ljmp
stc
cmp
pushf
sub
push
jo
scas
mov
cli
es
mov
nop
or
adc
pop
aam
mov
sub
and
movsb
mov
pop
mov
sub
leave
sub
jmp
mov
enter
lahf
jb
je
pop
repnz
insl
inc
add
sbb
test
ret
fisttpl
xor
shll
sti
add
orl
xchg
ja
push
pop
jmp
ds
adc
xchg
mov
push
xor
and
cmp
lea
sbb
and
mov
push
inc
mov
std
fnstcw
dec
sub
shrb
adc
cmp
ret
pop
sbb
test
adc
inc
cli
lcall
sbb
lret
add
cmpsl
push
push
repnz
adc
mov
inc
in
scas
push
mov
sbb
jl
stc
and
lret
sarb
lock
pop
mov
out
je
or
push
int3
sbb
jae
cmp
popa
cmp
addr16
lock
addr16
js
xchg
and
mov
adc
sbb
shrb
and
mov
daa
cmp
add
ret
orb
mov
mov
sbb
popf
mov
subl
jnp
sbb
add
push
mov
jg
ret
xor
in
inc
xor
xlat
jle
push
mov
sub
jecxz
enter
jp
mov
inc
jecxz
lods
pop
aad
mov
cmp
cmpsl
jnp
fdivrl
nop
cmpsb
divl
mov
insb
pop
dec
je
sub
aaa
push
mov
dec
push
mov
inc
lock
sub
stc
xchg
mov
lods
outsl
sub
inc
sub
pushf
lahf
jno
ss
orl
lods
les
mov
lock
ljmp
enter
push
shl
jns
out
imul
lods
pop
lret
insb
add
push
loop
cmp
sarl
je
arpl
cld
xor
pushf
pop
std
and
inc
sarb
sub
push
cli
cwtl
shrl
lahf
xchg
pushf
and
xor
sub
mov
int
fimuls
lods
jl
sub
aam
xor
lret
mov
inc
shlb
movsb
lea
ljmp
inc
iret
scas
add
out
out
outsb
outsl
in
testb
xchg
xchg
mov
cmpsb
shl
sbb
dec
lods
add
xchg
xor
mov
mov
imul
cmp
mov
and
scas
incl
sub
sub
jnp
mul
or
and
or
jns
test
pop
in
cmp
pop
pop
pushf
inc
mov
mov
leave
cmp
dec
ja
xchg
data16
mov
and
cmp
std
push
cmp
and
xchg
mov
jge
imul
fsubr
xlat
cmpb
inc
add
jecxz
frstor
cmp
movsb
dec
roll
push
imul
loop
jl
cmpsl
cli
jno
divb
xlat
mov
or
jno
out
cmp
jle
adc
or
xor
jp
lret
loopne
out
insb
cmp
mov
dec
stos
insl
pop
pop
mov
fs
in
dec
test
idivl
sub
dec
out
dec
lret
notb
and
stc
arpl
lock
orl
enter
jbe
pushf
xchg
pop
and
or
js
push
sti
jmp
mov
cmp
divl
dec
xchg
dec
push
mov
cvtpi2ps
or
jg
clc
xchg
mov
jno
popf
in
adc
lods
cmp
shr
mov
mov
mov
sbb
adc
fistpl
jp
in
mov
imul
ljmp
clc
mov
mov
xor
mov
lods
xlat
mov
xor
loop
lock
insl
clc
mov
test
add
lock
push
sbb
adc
pop
sub
sar
fs
outsb
pop
into
cmpsl
clc
adc
lock
adc
dec
cld
inc
js
in
xor
out
sub
adc
iret
cwtl
aas
stos
or
lret
jae
clc
leave
or
pop
mov
mov
mov
in
sub
int
and
dec
push
ja
mov
or
xchg
push
lock
ds
int3
out
out
stos
sub
sub
cwtl
test
mov
xchg
fwait
scas
cltd
mov
test
mov
scas
adc
rorb
pop
pusha
sarb
out
test
xchg
push
cmp
je
popa
out
in
mov
mov
push
pushf
cmp
in
std
int3
ss
subb
test
int
jb
inc
pop
and
outsl
pop
mov
ffreep
imul
aaa
dec
aad
js
xlat
mov
xor
adc
and
add
dec
jecxz
dec
push
push
loop
xor
int
push
mov
leave
sti
push
enter
in
imul
pop
imul
pop
mov
inc
shlb
es
loopne
into
pusha
mov
push
sub
mov
add
psubq
rcr
mov
stos
jle
mov
mov
hlt
std
push
shlb
imul
or
loop
test
dec
out
aas
inc
add
push
ss
inc
shlb
xlat
out
lds
ljmp
ljmp
jg
iret
stos
je
rcll
push
stc
movsb
mov
cmp
aad
std
into
push
pop
imul
cmp
outsb
inc
lcall
insb
pusha
inc
mov
imul
mov
xor
push
lods
popa
jmp
stc
sub
rolb
cltd
aaa
pushl
or
adc
sub
arpl
jns
les
pop
std
push
xchg
xor
dec
out
inc
push
out
ja
mov
jmp
pop
sbbb
xor
cmp
insb
lret
pop
cmpl
pop
cmpsl
mov
fisttpl
rorl
jp
adc
mov
cmp
roll
cwtl
lock
jl
aad
outsb
mov
insl
out
test
imul
mov
push
aaa
sbb
mov
push
ret
es
shr
mov
dec
fwait
adc
lahf
and
lcall
fiaddl
mov
adc
aas
mov
push
and
adcl
xlat
in
cmc
cmp
test
and
insb
sti
and
fs
and
fldl
mov
cmp
and
int3
jmp
or
sbb
lahf
cmp
sahf
lock
das
rcrl
fstp
repnz
and
xor
xchg
out
jbe
push
xchg
cmp
stos
mov
test
addr16
and
divb
mov
rcll
insb
fbstp
mov
pop
ficoml
mov
sbbb
loopne
idiv
xchg
add
jg
and
dec
pop
aas
push
std
test
aaa
ffree
inc
add
push
sub
jmp
das
repnz
inc
and
pusha
mov
xor
pusha
jle
out
adc
loop
cmp
sbb
mov
lret
push
sub
jg
adc
lea
testb
and
inc
inc
loope
mov
test
or
lods
jb
outsl
scas
mov
pop
pop
jno
inc
sub
stos
adc
pop
or
mov
xor
hlt
std
xchg
and
inc
cmp
xchg
jnp
mov
gs
add
or
mov
add
leave
jo
lret
cmp
cmp
mov
mov
cmp
xor
mull
aaa
sarb
outsb
fcmovb
daa
inc
testb
popa
data16
inc
mov
push
sbb
sub
stos
xor
faddl
xor
outsl
incb
movsl
sub
in
das
pop
sbb
call
aas
mov
aaa
fcomip
sbb
pop
rolb
pop
aaa
int3
filds
jb
add
icebp
pop
xchg
aam
cwtl
cmp
mov
in
daa
push
xchg
rorb
scas
mov
and
mov
push
cmp
out
bound
push
or
xor
call
scas
cs
sbb
mov
mov
mov
loopne
adc
int3
jo
mov
mov
loop
pop
push
mov
addr16
jg
cmp
add
push
jae
inc
and
movsb
xor
push
popa
or
or
icebp
out
push
je
or
cmp
mov
xor
fcoms
xor
testl
nop
ds
test
add
adc
outsl
and
jb
fcomip
clc
cmpsb
adc
test
ljmp
es
cmp
xchg
mov
pop
lahf
sbb
mov
add
mov
fidivrl
in
mov
das
fistl
jne
mov
mov
pop
mov
lahf
adc
inc
add
mov
out
fidivs
xchg
push
or
das
pop
sahf
xchg
dec
dec
mov
xor
mov
daa
mov
inc
cmc
xchg
push
call
and
into
fdiv
scas
inc
jl
cmc
add
mov
insb
ficoml
lret
ficoml
dec
out
adc
addr16
and
iret
xchg
pop
mov
push
cmpsb
mov
inc
mov
ja
dec
js
divl
cltd
push
inc
out
and
push
les
les
push
inc
jnp
mov
mov
jns
mov
cmp
push
pop
imul
fdivrs
xlat
in
xor
mov
leave
out
pop
jle
jb
cmp
lcall
xchg
mov
pop
faddp
jbe
lahf
int3
cltd
jnp
mov
inc
pop
mov
mov
inc
add
mov
into
adc
leave
lret
pop
shl
dec
mov
sahf
adcb
fcmovnb
adc
xchg
adc
adc
fwait
loopne
inc
mov
aas
aam
mov
xchg
xor
add
mov
je
adc
dec
outsb
dec
arpl
lods
repz
je
xchg
lods
lock
imul
sbb
sti
jno
jns
arpl
inc
xor
aad
movsl
adc
xor
notl
xor
mov
xlat
int
lahf
pushl
aas
aad
jecxz
jg
pop
inc
mov
mov
push
sub
and
bound
adc
add
xchg
cmp
jo
push
rolb
fs
fdivs
xor
je
lret
pop
mov
mov
push
jmp
cmp
gs
rcr
lods
adcl
ret
nop
test
les
mov
sub
add
mov
lods
push
sbbb
pop
dec
or
jle
aaa
imul
add
mov
jno
xor
cmp
xchg
jge
xchg
ss
out
dec
jne
sub
pushf
loop
lds
cmpsl
mov
jge
insb
pop
ja
fstpt
inc
aaa
mov
pusha
lcall
add
add
hlt
lret
js
cmp
adc
arpl
mov
xchg
int
pop
jmp
enter
enter
sti
add
add
pop
mov
xchg
xchg
xchg
mov
ja
and
jo
repnz
popa
in
fdivl
test
nop
lock
and
jae
stc
lods
adc
call
sub
and
cld
mov
jg
daa
sbbl
push
dec
adc
pop
sbb
adc
jge
push
jle
leave
mov
dec
test
jne
jmp
cmp
insb
jle
xor
aaa
inc
daa
mov
and
mov
repz
xchg
in
add
xor
std
adc
sbb
xchg
shl
jno
inc
xchg
xchg
add
shlb
sub
les
test
testl
lea
cmc
fxam
stos
loopne
jecxz
call
jae
mov
inc
xchg
aaa
dec
sub
in
adc
mov
pop
icebp
lret
fwait
das
call
cld
pusha
cmp
lcall
cmpsl
std
cmpsb
ffree
pop
jbe
mov
push
push
lret
and
push
and
es
les
outsb
xchg
hlt
inc
jle
inc
scas
aas
repnz
add
divl
push
adc
imul
scas
xchg
loope
into
adc
jge
mov
psubd
aas
je
push
cmp
push
imul
loope
loop
fcoml
fstp
ror
mov
inc
loopne
jae
add
fmuls
mov
dec
jb
jnp
xchg
fstps
sti
sbb
cltd
lods
inc
xor
inc
or
push
push
pop
out
cmp
outsl
mov
cs
dec
sub
inc
inc
popf
mov
shl
mov
cmpsl
sbb
shrb
jmp
jno
jl
and
sbb
sub
popf
cli
push
andb
data16
movsb
pop
xor
xchg
mov
cmp
mov
dec
and
jle
rclb
inc
pop
or
repz
mov
subl
jns
adc
jae
popf
faddl
mov
test
and
push
jmp
sbb
les
lret
sbb
mov
addl
std
jmp
mov
push
pop
popa
fisubs
sub
adc
frstor
test
clc
mov
push
popf
arpl
aas
aam
push
push
out
dec
loopne
adc
rcl
aas
fptan
pop
pop
jg
sbbl
pop
ja
adc
aam
cmp
shlb
pushf
xchg
ret
loopne
clc
pop
push
sarl
bnd
es
mov
or
push
es
daa
adc
sub
mov
aaa
stos
ljmp
shl
dec
jmp
in
push
pop
cmp
xchg
push
jp
mov
stos
sbb
cs
mov
mov
test
inc
fbstp
sub
in
adcl
mov
daa
or
mov
jle
mov
sti
mov
and
in
dec
rorl
inc
lcall
dec
inc
ja
rcrb
lock
and
cs
loopne
push
sbb
bound
lea
callw
gs
scas
adc
mov
ret
pusha
ja
leave
leave
pop
push
cs
mov
jnp
jo
das
movsb
xchg
inc
mov
sub
loope
dec
mov
dec
scas
adc
jmp
aam
xchg
movsb
mov
mov
pop
cmp
inc
push
mov
mov
js
fstpt
xor
inc
add
rolb
mov
jle
rcrl
dec
xor
sub
notl
das
jnp
in
push
stos
mov
cld
jnp
imul
push
stos
mov
out
mov
xlat
push
inc
in
push
mov
pop
mov
lahf
jnp
fwait
mov
and
mov
iret
add
sub
aad
cmpsl
out
repz
or
shr
idivl
pop
push
or
mov
or
mov
jg
dec
mov
fnsave
inc
sti
mov
test
mov
gs
lahf
inc
leave
jmp
mov
lea
jne
xor
adc
fsubl
loope,pn
sbb
jle
les
xchg
call
lock
fcomps
cld
mov
cmp
outsb
inc
sbb
jg
frstpm(287
cmpsb
inc
js
cmpsb
xchg
xor
int
ja
mov
xchg
lods
mov
je
movsl
leave
push
jo
xor
mov
and
repz
pop
int
fs
in
fnstenv
adc
mov
and
pop
xchg
sahf
rcrb
int3
sbb
addb
push
cmp
loop
jno
roll
aad
xchg
mov
jge
dec
mov
xor
mov
cmp
addr16
ss
les
inc
adc
push
adc
lea
fldcw
mov
movb
test
out
adc
jmp
jae
mov
mov
loop
and
orl
sbb
sbb
sub
hlt
dec
sbb
pand
jb
dec
test
push
xchg
inc
add
mov
les
leave
xor
push
loop
loope
xchg
xor
adc
cwtl
cmp
sub
lods
xor
sbb
jl
insb
rorl
test
fiadds
sbb
xor
jg
push
xor
jns
out
or
pop
loope
popa
clc
mov
es
pop
adc
mov
movsb
add
fildll
push
and
stc
xor
jae
fwait
lret
inc
dec
xchg
push
je
or
int3
aam
pop
jg
inc
inc
dec
bound
ljmp
push
mov
mov
aas
int
xchg
call
das
scas
adc
lcall
stos
lea
in
jecxz
mov
negb
mov
mov
sub
test
data16
jns
pop
jl
cmc
xchg
lret
popa
jle
daa
arpl
mov
lcall
fs
and
fst
or
jo
push
xor
push
adc
addb
pop
inc
arpl
cmp
lds
xchg
and
gs
push
out
mov
lds
ret
push
and
dec
mov
arpl
in
lods
aas
cwtl
pop
adc
fwait
cmp
into
repz
repnz
add
xchg
jne
mov
pushf
cld
in
testb
loope
out
jmp
push
sbb
lea
jo
paddsw
cmp
cmp
je
les
dec
inc
push
pushf
negb
outsb
cmpsb
test
clc
jl
dec
ljmp
inc
rorb
mov
adc
dec
dec
out
aam
cltd
movsb
dec
cmc
xlat
cmp
inc
add
scas
push
jnp
adc
fists
add
mov
add
inc
orb
sbb
mov
dec
test
ja
jl
and
or
pop
mov
jg
or
xor
cs
aad
jmp
or
test
and
push
sbb
addr16
cmp
mov
or
loopne
dec
sbb
in
jno
mov
popa
mov
jecxz
out
loopne
outsb
add
cltd
lret
xchg
push
jne
cmpl
dec
mov
movsl
lock
push
dec
sbb
frstor
jb
leave
mov
xlat
inc
jo
pop
mov
sub
mov
movsb
jecxz
xlat
fildll
aam
adc
jge
stc
and
jno
mov
insb
sti
mov
loopne
mov
push
clc
adc
ds
aaa
mov
pop
pop
push
lret
pop
push
out
sub
add
mov
pop
sub
ljmp
rcl
shrl
cs
push
dec
loope
xor
ja
mov
lahf
repz
dec
pop
stc
out
daa
mov
xchg
stos
mov
push
sarb
lds
pop
rolb
lcall
repz
jmp
test
mov
pusha
lea
mov
clc
inc
ss
mov
imul
mov
cmp
cltd
outsb
fbld
jle
sbb
pusha
lods
mov
les
or
and
popa
mov
pop
es
aad
lahf
rolb
sbb
push
out
cwtl
ret
popf
pop
sub
arpl
lods
ret
xor
aaa
test
popa
jno
call
incb
add
cmc
shll
add
scas
jp
or
dec
sbb
imul
test
mulb
cmp
insl
add
das
in
ret
dec
cmpl
imul
lahf
test
sbb
push
shll
add
arpl
xor
adc
lahf
xor
push
gs
inc
stc
outsl
push
mov
or
jne
xchg
pop
pop
popl
repnz
pushf
adc
pop
lds
fmull
imul
out
testb
imul
and
popf
insl
pop
adc
adc
add
stc
div
lcall
cmpl
cmp
mov
sahf
inc
add
mov
loop
pop
fwait
xor
gs
xchg
push
push
fwait
je
incb
dec
cwtl
dec
sbb
iret
jo
sbb
jge
jp
mov
hlt
aam
push
in
xor
mov
mov
jb
sti
jo
insb
pop
out
adc
int
add
iret
sub
cmp
sti
insl
out
std
ret
xor
imul
fcomps
lods
sbb
mov
js
sbb
loope
and
sub
ja
test
inc
test
add
in
dec
test
xchg
xchg
enter
mov
js
arpl
pop
or
xchg
rol
dec
push
fldl
sbb
cli
shlb
mov
dec
pop
bound
stc
repz
pop
cli
sub
mov
mov
pop
sbb
ss
xor
loop
mov
cs
sbb
mov
in
jno
lock
inc
mov
lret
push
mov
mov
fcoms
lds
push
test
adc
add
sub
lock
xor
mov
xchg
jg
mov
sub
pushf
enter
cmp
dec
dec
push
adc
inc
push
fidivrs
adc
cmp
mov
push
push
xchg
pop
cmpsb
push
mov
adc
das
push
dec
push
cmp
outsb
and
mov
pop
lcall
sub
push
pop
cmp
xchg
mov
lods
mov
in
adc
in
pop
mov
jg
mov
repz
mov
jne,pn
clc
andb
xchg
call
cltd
lock
mov
out
sub
test
sbb
mov
xchg
xor
insl
out
sti
mov
dec
xchg
or
cmpsl
cmpsb
add
and
jge
scas
sbb
cmp
clc
mov
fdivrp
ret
mov
dec
adc
add
shl
popa
scas
xor
or
mov
mov
aad
es
xchg
mov
add
xchg
test
in
jo
test
sbb
les
lcall
mov
in
test
out
pop
xchg
out
addr16
and
stos
adc
push
int
dec
cmp
mov
adc
in
or
daa
call
das
pop
movb
xchg
fldl
in
cmp
inc
mov
scas
int
fwait
or
enter
scas
sub
xchg
cmp
jmp
and
andb
push
in
sbb
push
sarl
cmc
je
cmp
faddl
popa
dec
jo
push
adc
xor
test
jno
mov
sar
add
xor
imul
or
mov
cmpsb
mov
xchg
push
and
jae,pn
shll
jg
cli
xchg
xor
ss
inc
xchg
adc
jno
pop
shll
fmuls
lea
sbbb
rolb
repz
daa
inc
lock
js
mov
movsb
sbb
cld
inc
test
inc
xor
int
cmc
nop
jl
push
cmp
adc
aad
in
and
inc
sub
jmp
mov
mov
xor
push
rcrl
nop
lds
jb
xor
negb
inc
mov
and
xor
cld
push
rorb
ret
outsb
jbe
pop
imul
shlb
cmp
imul
into
mov
xor
fmul
loop
or
mov
mov
dec
and
jne
lcall
lea
sub
or
aad
rcr
in
xor
xor
out
or
push
adc
jae
mov
in
stos
cltd
mov
sub
sbb
in
stos
hlt
pop
decl
push
adc
in
in
cmp
sbb
sbb
push
mov
inc
lret
xchg
dec
movsb
xchg
sub
decl
mov
jmp
pop
xor
cs
cmp
test
fcmovnu
inc
ret
mov
ds
iret
jp
rcr
jo
or
nop
mov
test
cmp
xchg
xorl
inc
dec
int3
imul
insl
decl
je
or
ds
jno
jp
pop
and
cwtl
inc
sbb
mov
sub
cmp
mov
setp
lods
icebp
xchg
jecxz
mov
mov
lock
arpl
sub
pushf
int
push
and
in
mov
adc
in
orb
xor
loopne
jge
push
mov
sub
test
sbb
data16
roll
push
mov
jne
arpl
xchg
les
push
test
push
cmc
outsb
push
les
insl
and
adc
mov
cwtl
pop
sbb
lds
movsl
sub
test
test
cmpsb
cmp
fisttps
or
loopne
orb
mov
xor
push
mov
inc
push
aad
mov
out
cmpsl
mov
or
daa
mov
movsl
xchg
ja
es
stos
mov
sahf
repz
jg
lret
fiadds
sbb
out
scas
jp
outsb
jle
mov
cld
dec
jb
clc
sub
sbb
inc
cld
pop
sub
pop
push
and
mov
push
sub
lods
pop
push
mov
xchg
std
sahf
clc
out
loop
mov
mov
into
dec
jle
popf
push
aad
jmp
push
fstcw
mov
and
adc
inc
mov
xchg
sub
ret
popf
mov
mov
enter
mov
xchg
adc
lret
jnp
test
or
call
shlb
xchg
xor
add
aam
test
mov
inc
jb
pop
int3
inc
jmp
push
cmpsb
cltd
int3
cmpsb
cltd
jp
loopne
mov
dec
and
and
insl
push
sub
negl
adc
mov
mov
pop
sbb
and
jge
jbe
outsl
inc
fucomi
fmul
outsb
adc
enter
repnz
dec
mov
add
hlt
mov
repz
jae
aam
pop
mov
or
mov
insb
or
ss
iret
add
lret
dec
pusha
repnz
and
sbb
or
sub
lods
mulb
stos
cltd
sub
inc
mov
shr
pcmpgtb
iret
scas
xchg
outsb
or
mov
xor
aam
mov
insb
sub
push
dec
jbe
pop
mov
jge
loope
idiv
lcall
adc
mov
lods
test
mov
and
mov
arpl
mov
test
fs
pop
int
mov
xchg
push
scas
into
sbb
sub
inc
jge
call
pop
scas
jge,pn
lods
xlat
xor
mov
nop
inc
mov
or
outsb
cmp
pusha
and
push
test
dec
lahf
imul
das
pop
jp
aas
outsl
mov
mov
push
aad
pop
mov
int3
adc
jb
popa
fnstenv
scas
loopne
adc
mov
pushf
jmp
nop
jmp
lods
pop
js
fsts
scas
sbb
sub
xor
shlb
xchg
jge
xchg
add
dec
lea
shl
dec
sti
sbb
or
repz
push
adc
jg
jl
sub
mov
jle
cwtl
enter
lcall
inc
pop
mov
inc
add
mov
adc
enter
lods
stos
sub
or
and
je
icebp
insl
leave
cmc
push
mov
testl
xorb
int
cmp
cmp
rorb
mov
jl
cmc
jns,pn
adc
or
cmp
mov
lds
push
add
repz
imul
mov
jno
fidivl
mov
pusha
and
enter
out
fs
inc
jecxz
mov
mov
mov
inc
rclb
out
add
dec
and
ds
mov
inc
clc
add
xor
pmulhuw
push
lret
sub
adc
in
fiaddl
ds
push
jecxz
fnstsw
push
out
mov
mov
sub
inc
movsl
mov
addl
mov
push
mov
notb
xor
sbb
cmp
dec
sbb
aaa
adc
mov
and
mov
push
or
adc
jns
cmp
lret
push
nop
andl
adc
mov
sbb
aad
mov
sub
and
shll
sub
adc
test
push
mov
pop
pop
add
inc
sub
jge
and
mov
xor
leave
inc
sbb
lods
inc
les
sahf
jbe
pop
adc
loopne
jp
lds
dec
mov
scas
pop
and
jmp
xor
imul
add
int3
aad
mov
nop
adc
jbe
stc
mov
add
cmp
jnp
aaa
stos
fstpt
xchg
push
test
push
dec
sbb
ret
mov
add
cmp
icebp
cmp
pop
lds
shl
and
mov
mov
mov
mov
jne
sbb
adc
or
and
ss
scas
adc
dec
testl
mov
push
ds
lret
cmp
add
cmpsb
aas
int3
out
inc
scas
aas
pop
rcll
repz
cld
lds
clc
mov
fsubp
mov
dec
adc
icebp
in
outsl
inc
cmp
jg
movb
mov
cltd
mov
pop
lea
sbb
in
dec
cltd
int
hlt
fwait
imul
in
sub
jns
mov
dec
inc
cmc
sub
repz
xchg
fmul
dec
dec
out
loope
outsb
loopne
loope
xor
pop
jne
dec
aam
repnz
in
jmp
std
out
inc
mov
sub
or
jb
cmp
bound
mov
out
leave
mov
jge
testb
sbb
daa
or
jp
adc
dec
test
int3
or
xor
cli
jg
jno
test
dec
je
add
sub
lcall
jb
and
sbb
lret
lcall
mov
cmp
sahf
jbe
mov
out
sbb
xchg
out
cmp
out
pushl
icebp
imul
sbb
mov
jb
push
rol
sahf
xchg
fwait
xchg
xchg
lds
imull
adc
lods
fldl
xchg
dec
push
push
jno
inc
mov
stc
pop
hlt
lcall
push
sti
in
out
xchg
jae
jbe
jmp
push
fstpl
es
call
cmpsl
inc
scas
jge
in
jg
jle
fcomps
pushaw
sbbb
pop
or
cwtl
movsb
loop
jmp
iret
sbb
jno
pop
or
lret
in
and
movsb
test
jmp
mov
sbb
fimuls
jl
inc
jecxz
xlat
add
dec
xchg
dec
out
loop
iret
cwtl
out
sbb
fs
jnp
mov
cmp
push
ud0
fists
sbb
sbb
lea
mov
inc
add
adc
lret
adc
add
aam
sub
push
jp
jmp
dec
outsb
xchg
push
push
testb
jne
test
sahf
pop
test
lds
push
cs
or
xchg
repz
scas
loop
and
sbb
inc
push
fnstcw
adc
repnz
out
lahf
test
and
sbb
sbb
jge
rcrb
sbb
xchg
xor
lret
stos
mov
inc
sahf
and
fcmove
imul
and
testl
push
sub
scas
loopne
xor
imul
mov
push
ret
and
dec
push
or
push
stos
loopne
cmpsb
int
repz
sub
repz
mov
shrl
mov
outsl
ss
push
xor
cmpsl
dec
call
mov
jnp
inc
insb
or
mov
xor
mov
add
jle
inc
push
xchg
loope
in
je
aaa
cmp
mov
loop
adc
push
pop
jnp
daa
push
xchg
mov
mov
fnstsw
pop
jbe
cwtl
popf
xor
add
lahf
bound
sub
push
roll
js
cli
mov
xchg
push
js
outsb
xchg
aas
sarl
fs
cmp
or
popw
dec
fldcw
arpl
ret
xchg
xchg
test
cmpsl
fisubs
in
cltd
dec
add
lcall
lods
nop
push
pushf
or
fidivrl
loope
clc
sub
push
pop
fmuls
iret
pop
pop
jns
or
lcall
push
stos
mov
ljmp
loopne
mov
les
mov
push
xor
adcl
add
dec
xchg
dec
xchg
int
stos
stos
fs
push
je
mov
daa
inc
data16
lretw
and
sahf
jp
mov
adc
stc
sti
ror
mov
mov
addr16
add
cmp
stos
fchs
dec
or
xchg
test
out
popa
mov
ret
pop
idivl
jl
dec
xorl
daa
rclb
pushf
mov
adc
ud0
mov
movsl
popa
repz
jo
lea
pop
lock
popa
in
mov
mov
jae
dec
les
call
ja
push
stos
mov
mov
nop
xor
cmp
mov
inc
push
jns
jns
xlat
fdivr
xchg
sub
or
cmp
xchg
mov
mov
aam
mov
lods
cmp
int3
mov
inc
fnstenv
aas
test
or
mov
in
sbb
outsb
ficoms
xchg
pop
dec
shlb
in
xchg
ficoml
cmp
les
cmp
cli
sbb
fwait
inc
in
cmpsl
sub
adc
push
out
add
fucomp
push
mov
adc
sar
rep
dec
mov
daa
loop
cld
lock
pop
cld
add
fidivrl
std
ds
pop
mov
xchg
test
xor
sub
jge
mov
xor
fdivl
clc
movsb
rcl
daa
mov
or
int
sbb
mov
mov
daa
xchg
test
mov
inc
mov
mov
in
push
aas
jne
push
addb
mov
xlat
jge
maskmovq
and
xchg
sti
aas
call
mov
xor
mov
cmp
cmpsl
outsl
cmp
stos
call
xchg
sbb
outsb
jg
das
pop
aaa
and
test
jge
es
dec
cs
rcll
pop
shl
adc
push
mov
xchg
ret
movsl
icebp
cmc
lahf
inc
jg
outsl
xchg
out
arpl
stos
cmp
mov
dec
cwtl
pop
xor
data16
ljmp
jno
and
adc
push
ret
adc
or
aaa
jg
xor
xchg
ljmp
insb
pop
dec
imul
xchg
jp
jo
aas
adc
loop
and
pop
ds
ja
repnz
xchg
jp
jo
inc
in
inc
test
push
mov
jns
cmpsl
push
jmp
lock
popa
rclb
sbb
push
and
inc
ja
sub
pop
imul
pop
cwtl
lret
fstps
cmp
insb
push
pop
xchg
shl
xchg
jl
enter
inc
xchg
push
add
icebp
test
fildll
cmp
push
add
int3
and
data16
mov
pushf
mov
loop
jp
shlb
and
sub
icebp
aam
or
jecxz
test
xchg
loope
push
mov
push
dec
jle
aam
lret
imul
mov
dec
cli
out
in
repnz
dec
push
mov
imul
addr16
popf
jnp
movsb
cmp
lods
imul
ds
in
xor
jns
cli
loop
call
cmp
xchg
outsb
push
mov
imul
repnz
sub
inc
movsl
push
sub
iret
push
repz
or
jnp
add
push
sub
rorb
sub
lret
jg
lcall
ja
rclb
adc
sub
mov
sub
cltd
sbb
xor
inc
ds
cmp
aad
adc
loope
xchg
incl
jno
fcomps
inc
pop
mov
dec
xor
cmp
loopne
mov
cli
insl
mov
jae
dec
and
mov
sbb
jnp
rcll
sbb
cli
mov
sub
xor
sub
lods
push
imul
cwtl
and
mov
insb
ret
ss
loop
mov
or
pop
inc
cmp
pop
dec
jg
sbb
push
sub
jnp
test
lea
mov
push
cmc
xor
add
dec
loop
aaa
cmp
cmpsl
movsb
xor
ds
fnstsw
ja
jo
bound
fcomp
movsl
mov
in
inc
pop
push
test
and
xchg
push
loope
fsubs
std
or
movsl
dec
fadds
aam
cmpsb
mov
add
divl
mov
push
mov
scas
pop
lret
fmul
jmp
add
add
sub
xchg
jmp
jmp
in
jns
cmpsl
cmpsb
ss
movsl
and
mov
mov
cwtl
push
icebp
jbe
mov
cld
scas
or
mov
sub
and
cmp
mov
lock
mov
dec
cltd
jle
lods
and
pop
sbb
out
fcmovbe
mov
xchg
stos
mov
mov
push
gs
in
mov
rorb
push
xor
je
insb
loope
adc
jmp
and
push
imul
mov
fwait
jp
fcom
inc
xor
jp
pop
cld
mov
xchg
dec
int3
int3
imul
in
fidivs
repnz
inc
mov
mov
pop
fidivrs
in
jl
movsb
mov
push
mov
fstpt
ja
decl
dec
sub
sub
dec
mov
pop
popa
push
mov
ret
fcmovnu
lods
or
gs
imul
loop
add
xchg
pop
mov
pop
xor
outsb
shr
into
cmpsb
add
sub
mov
push
cwtl
mov
dec
js
push
movsb
xor
insl
cld
sbb
add
arpl
icebp
mov
mov
fwait
adc
sbb
xor
cmc
mov
out
mov
loopne
roll
jne
fstpt
out
xchg
mov
sub
sarl
xor
cltd
lods
test
jnp
js
ficoml
ficoml
out
jno
cmp
inc
iret
hlt
lods
jge
push
popa
add
int3
xorl
gs
hlt
mov
add
mov
adc
or
mov
leave
cs
stos
mov
pop
into
mov
mov
jae
add
mov
movsl
cmp
xchg
fidivrs
sbb
sarl
imul
push
clc
out
inc
mov
lahf
fadds
subb
jle
push
outsl
xchg
notb
inc
pslld
pop
mov
sbb
or
push
fcoms
dec
ss
xchg
jae
sbb
jb
lock
daa
ret
icebp
adc
jae
mov
jo
inc
cltd
xor
push
in
repz
fidivs
scas
lret
out
aad
scas
out
sahf
mov
mov
test
xor
mov
cmp
sarb
dec
jb
stc
pop
mov
push
push
aam
xchg
fstpl
xchg
rcr
cmp
out
insb
mov
in
sahf
mov
pop
mov
pop
loop
push
imul
js
dec
xor
and
sarl
xchg
xchg
loop
loop
test
imul
or
outsl
leave
or
push
ret
test
sar
fwait
pushf
dec
jg
stos
data16
jno
pushf
jmp
push
das
pushf
cmp
int3
loop
pop
inc
outsb
imul
push
jo
xchg
adc
push
push
or
int
xor
popf
pop
inc
sbb
insb
xchg
idivb
adc
aam
add
and
insl
xchg
mov
in
daa
sbb
push
adc
aam
cmp
cld
inc
std
fs
fadd
mov
lret
dec
sub
sub
in
xor
mov
mov
cmp
push
repz
adc
repnz
sbb
pop
add
adc
cld
icebp
xchg
subl
sbb
mov
fdivrl
jg
xchg
add
or
nop
ret
xlat
jle
pushf
mov
enter
and
ds
inc
popa
mov
xchg
or
fsubrs
adc
jl
mov
insl
popa
into
inc
lcall
cmp
rorb
mov
scas
mov
addr16
pop
push
in
and
pop
andb
dec
mov
or
jge
sub
insb
cli
dec
mov
and
out
inc
dec
or
jns
cmp
inc
pop
mov
sarb
fwait
pusha
adc
inc
mov
pusha
jg
xchg
fnstcw
inc
mov
popf
jge
ja
jae
jecxz
push
icebp
rolb
mov
inc
dec
jle
leave
sbb
mov
sbb
cld
and
dec
jle
fdivr
and
dec
cmp
out
fstps
mov
adc
hlt
popa
insb
mov
mov
jbe
mov
andl
repz
mov
mov
push
xchg
data16
mov
ja
lcall
dec
sbb
push
lret
in
lods
jbe
and
test
std
cmpsb
in
push
sub
insl
ret
stc
leave
ja
stos
inc
inc
cmpsb
jmp
or
mov
std
lea
push
push
mov
pushf
jl
mov
fwait
movsl
add
loop
lret
adc
mov
movsl
vpsubw
inc
int
xchg
es
or
fisttpl
sub
addb
add
mov
and
cmp
dec
out
push
iret
jmp
sub
xor
mov
push
pop
std
movswl
or
adc
or
aas
mov
adc
pop
rorl
push
roll
cmpl
inc
jecxz
mov
mov
mov
add
jnp
dec
push
enter
pop
push
ret
jo
ljmp
pusha
mov
lock
aas
jnp
ret
inc
xchg
mov
jnp
pushl
stos
in
fdivr
cmc
jp
jl
push
pushf
cmp
inc
push
add
neg
ljmp
das
sub
and
mov
pop
enter
xor
inc
mov
in
cmp
or
jecxz
push
sbb
scas
add
fwait
call
cmp
mov
mov
cmpsb
mov
adcl
push
adc
ror
lret
mov
imul
es
xchg
fcomp
aaa
mov
pop
inc
sbb
in
icebp
or
or
push
fcmovnbe
xor
mov
std
sbb
jmp
sbb
sbb
add
arpl
xchg
bound
movsbl
push
sti
and
add
fsub
pop
push
aam
mov
imul
cwtl
or
dec
ljmp
add
int
or
into
aam
jbe
or
fmull
test
mov
mov
cltd
and
mov
add
pop
dec
inc
addr16
sbb
mov
sbb
in
dec
jae
dec
jmp
nop
push
pop
repnz
inc
pop
popa
mulb
push
or
scas
andl
pop
arpl
mov
push
clc
cmp
cmp
and
sub
adc
and
sub
sbb
pop
mov
pop
xlat
popa
popf
push
push
pushf
cwtl
icebp
iret
out
add
scas
mov
or
imull
lret
cmpsl
jns
dec
sub
jns
inc
pusha
stos
je
das
pop
scas
jnp
xor
shlb
mov
ret
mov
ss
jg
cmp
push
cmp
decl
imul
mov
shl
arpl
cmpsl
shrl
or
ja
mov
fnsave
icebp
inc
mov
inc
fwait
inc
negl
cmp
mov
sub
jge
jae
cs
call
ja
mov
xchg
dec
cltd
and
cmp
mov
fs
and
pop
scas
divb
mov
cmp
jnp
add
cmpsb
in
lods
outsl
add
sbb
push
dec
rcr
aas
sbb
lret
jmp
and
scas
insl
aad
or
jle
pop
stos
jp
pop
out
push
popf
fcmove
jge
adc
dec
ja
js
rorb
dec
or
stos
out
jge
sub
lods
jge
dec
fcompl
jmp
repnz
dec
cmpl
rcrl
sbb
fnsave
das
pop
xchg
cmc
and
pop
stos
iret
enter
subl
sbb
jne
test
loopne
jg
pusha
iret
pop
js
fnstsw
orl
add
ja
pop
adc
push
jle
mov
pusha
in
cli
je
lods
and
push
push
nop
lret
add
push
jp
cmpl
inc
stos
ret
fiaddl
mov
mov
lret
xchg
neg
sbb
push
pop
push
pop
xchg
aas
xor
test
inc
jae
sar
mov
lock
inc
out
jecxz
or
sbb
mov
dec
xchg
out
lock
mov
jg
add
ljmp
frstor
es
jb
stc
fcompl
mov
dec
dec
push
mov
test
pop
hlt
clc
or
aad
mov
out
mov
push
aad
xor
xor
xrelease
inc
test
sub
ljmp
or
pop
jmp
pop
and
roll
into
bound
mov
mov
sbb
sub
add
int
out
or
jnp
test
and
ss
mov
outsb
or
mov
and
out
bound
into
xchg
fdivrl
jnp
or
bnd
and
daa
andl
xlat
movsb
pop
mov
fcomps
and
ret
rcrb
lds
lcall
sbb
fdiv
adc
jl
into
cld
adc
test
sub
out
dec
pop
inc
and
dec
jo
mov
xor
in
mov
mov
popf
lods
sbb
sub
jp
fadds
xor
hlt
in
xchg
lea
in
or
mov
jge
push
stos
mov
or
sbb
int
shll
in
and
in
imull
cmp
xlat
imul
out
cs
ret
xlat
push
gs
xor
pop
xchg
test
test
sbb
cmc
cld
adc
add
cmpb
push
outsl
mov
add
mov
sub
shl
jno
add
repnz
inc
fildl
lods
jmp
mov
pop
fisttpll
test
ljmp
inc
jp
mov
fyl2xp1
roll
add
jnp
aas
sub
or
push
ss
inc
inc
xor
jbe
adc
scas
popf
add
add
lret
sub
cld
sarl
outsl
hlt
fdivs
in
data16
jle
lret
aaa
sbb
xchg
jns
bound
xchg
pop
push
mov
cmp
push
test
mov
pushf
fdivl
ret
out
push
icebp
popa
mov
dec
xchg
fwait
push
insb
jp
int3
lahf
imul
repnz
ljmp
in
mov
int3
test
mov
lret
push
xchg
out
gs
push
mov
dec
add
cld
les
cmp
xor
dec
sub
inc
rcrl
jno
aad
jmp
ja
cmp
sbb
cmc
aas
repz
cli
mov
in
jl
xor
jbe
icebp
adc
test
in
mov
dec
sarl
cmpsb
cmp
aas
imulb
add
mov
dec
push
mov
xor
sub
mov
vmovaps
incl
test
into
push
inc
add
stos
push
lea
cmc
outsb
aam
mov
loop
pop
test
xchg
xchg
imul
test
push
and
inc
adc
jecxz
int
lcall
fsubrp
jge
nop
cmpsl
add
mov
jbe
fdivl
lea
scas
cmp
push
or
xchg
sub
sti
or
push
add
mov
cmp
dec
mov
pop
cs
dec
inc
cli
or
inc
lock
adc
mov
mov
mov
or
cmpsb
push
add
aam
je
push
pop
dec
test
add
out
cmp
jb
and
xchg
shrb
test
fisubl
imul
nopl
in
push
sub
outsl
andl
xchg
or
clc
inc
repnz
mov
pop
dec
ror
enter
or
mov
mov
xchg
push
adc
dec
jns
jg,pt
mov
sub
cmp
push
xchg
pop
sbb
cmp
pop
mov
rol
sbb
mov
cmp
fwait
push
popa
pushf
mov
ds
push
xchg
sbb
jmp
or
cmp
and
stos
adcb
cmpsb
pop
out
cmp
aas
jecxz
aam
cmp
push
cli
xchg
xchg
inc
insb
fnstsw
adc
mov
movsl
jmp
lea
scas
fstps
aas
int3
sbb
ss
lock
inc
push
movsl
test
mov
push
mov
cmp
dec
push
insl
mov
stc
jg
sub
push
mov
or
dec
cmpsb
cmpl
mov
cwtl
xchg
negb
jb
jno
mov
lods
movsb
aaa
jae
fimull
xchg
xor
les
iret
push
cmc
cs
cmp
jne
and
sahf
test
jg
and
mov
ret
aad
fucom
adc
hlt
jle
mov
ror
jl
fdiv
inc
xorb
movl
test
fidivrl
xor
xor
cmpsl
icebp
outsl
mov
push
inc
push
stc
mov
and
lahf
in
int
add
push
xor
mov
addr16
add
pop
not
icebp
mov
fisubs
mov
ret
cld
cli
cmpsl
outsb
xchg
or
je
push
and
paddd
test
dec
dec
adc
pop
xchg
ret
lods
scas
push
aad
rcll
fwait
lds
mov
sbb
jbe
decl
xchg
shlb
adc
out
je
mov
and
cmp
jl
out
jns
mov
int
in
les
aaa
mov
mov
push
gs
pop
in
lods
rorb
bound
jne
push
mov
ficoms
mov
mov
inc
cmp
cmp
arpl
aam
sub
daa
sbb
stos
and
cmc
jo
adc
test
dec
out
repz
pop
jecxz
scas
and
mov
mov
movsl
pop
mov
fbstp
imul
mov
mov
xchg
inc
adc
lret
loopne
clc
popa
adcl
cmp
xor
insb
frstor
pop
push
dec
not
es
daa
enter
ljmp
lahf
sarl
or
mov
pop
mov
mov
sti
pushf
dec
imul
sbb
jl
and
pop
push
dec
adc
stos
xchg
dec
cs
sub
dec
inc
mov
leave
aad
or
fdivs
sti
inc
jae
add
imulb
pop
jmp
mov
fstp
lcall
xchg
push
push
out
pop
mov
sbb
shlb
dec
stos
jb
push
mov
repz
js
lcall
inc
sbb
scas
mov
jle
lahf
push
fstl
jl
xchg
es
jge
lretw
jbe
mov
dec
inc
sub
or
das
stos
repz
les
sbb
mov
cmp
aaa
or
lods
or
fiadds
cmp
dec
lds
sbb
test
cmp
data16
lret
repnz
mov
ficomps
xor
push
and
in
es
xor
insb
push
jg
in
std
jno
or
or
out
push
jo
lret
sbb
fnstcw
loopne
sub
add
subb
pop
add
iret
pop
cmp
dec
sar
pushf
inc
rorl
pusha
das
das
sahf
xor
sbb
outsl
push
and
sub
mov
dec
jb
and
inc
cmp
dec
jns
insl
pop
ret
and
and
push
pop
lds
lds
lea
push
mov
dec
jo
imul
fstpl
clc
dec
sub
xchg
jbe
push
cmp
mov
and
cmpsl
and
in
inc
testb
sub
adc
mov
inc
jl
jge
cmp
fdivl
or
sub
add
sub
pop
stc
and
iret
add
jnp
push
je
cwtl
clc
bound
or
mov
shl
clc
mov
and
fwait
js
shl
aas
sbb
psubw
into
and
in
sbb
ds
test
inc
out
lock
in
add
push
mov
adc
or
sub
ret
xchg
call
pop
inc
rcrl
ds
sbb
aam
fcmovnu
mov
scas
mov
jmp
jge
mov
pop
sub
outsb
fcmovb
cltd
loope
lods
call
mov
pop
adc
xchg
int3
and
jmp
out
lea
jge
out
mov
mov
push
mov
imul
or
push
push
sbb
sub
and
pushf
push
xchg
ja
sub
add
movsl
mov
adc
mov
or
pop
dec
lea
adc
add
and
outsl
xchg
outsl
push
ret
push
mov
in
out
std
loop
icebp
add
push
pop
sbb
imul
dec
inc
sbb
pop
lret
ret
stc
mov
xor
fimull
les
ljmp
mull
add
push
pinsrw
dec
add
push
fwait
dec
test
repz
mov
aad
nop
mov
and
enter
cli
push
and
in
push
xor
cltd
test
cmp
cwtl
mov
movsb
les
repz
push
mov
push
int
ret
or
rol
lock
mov
pop
xchg
mov
fsubl
pop
pushw
adc
and
mov
movsb
notl
mov
rcl
pushf
imul
rorb
leave
nop
xor
loop
popf
sarl
dec
xchg
pop
ror
fdivrl
in
rclb
inc
fwait
inc
imul
inc
xchg
jns
add
jg
inc
out
ret
or
cwtl
insb
jae
xor
jbe
xlat
mov
fwait
mov
mov
fsubl
shl
jb
adc
stc
mov
cmp
inc
sbb
push
fstpt
cmp
adc
and
into
add
xor
sbb
test
nop
and
ficomps
mov
xor
lds
movsl
leave
xchg
popa
jb
mov
xchg
mov
jle
adc
popf
out
inc
xchg
adc
xor
lcall
xchg
ror
push
pop
mov
int3
jle
jl
fiaddl
push
es
cld
popa
sbb
bound
ret
mov
xor
jecxz
inc
or
lcall
inc
pop
in
es
adc
jne
std
cltd
jbe
imul
cmp
jle
ficoml
mov
in
ds
jecxz
std
clc
jge
sub
popf
mov
jnp
ljmp
jl
xlat
xchg
fisubrs
xchg
jg
rcrl
adc
pusha
scas
sarb
xchg
loopne
mov
push
out
rcrl
xchg
inc
outsb
lea
dec
xlat
push
jne
push
mov
mov
dec
push
je
xchg
or
dec
xchg
js
mov
add
orl
ja
or
ds
mov
add
insl
adcl
dec
mov
mov
inc
add
test
pop
inc
sarl
insb
mov
sub
xchg
out
fildll
mov
nop
push
insb
mov
leave
inc
pop
cmpsb
or
insl
inc
nop
cmp
mov
mov
data16
mov
add
mov
shrl
mov
and
dec
jl
test
aad
pop
mov
call
mov
or
xchg
jp
and
push
or
xor
in
mov
popf
shlb
jecxz
in
nop
movsb
int3
leave
xor
cmpl
mov
inc
mov
dec
dec
sbb
pop
lock
xchg
sarb
mov
add
fs
xlat
push
pop
movsb
popa
les
rclb
std
sbb
gs
mov
inc
add
lcall
pop
repnz
mov
sub
mov
pop
fisttps
ror
sbb
rcrl
mov
or
pop
jmp
aad
mov
mov
ret
aas
jno
cmpsb
cmc
xchg
rcl
call
aad
mov
js
cld
mov
add
cli
xor
popa
dec
repnz
test
jnp
adc
adc
int
pop
mov
inc
frstor
call
fmulp
push
fs
mov
cltd
dec
mov
inc
sbb
mov
pop
sub
lock
inc
mov
and
dec
dec
mov
jp
aad
xchg
jb
fcompl
movsl
xchg
mov
pop
or
movsl
in
scas
cmpsl
gs
punpckhdq
inc
or
jg
push
cmp
add
lods
stc
pop
mov
outsl
add
fildl
or
mov
dec
out
ja
popa
jnp
mov
xchg
adc
push
loope
or
and
inc
inc
mov
js
fcoms
scas
or
mov
add
add
inc
sub
xorb
shrl
adc
xor
out
rcll
dec
mov
add
ret
call
xor
roll
lret
cmp
into
sbb
and
push
xchg
mov
xor
aam
stos
dec
hlt
mov
data16
imul
sub
lret
out
sbb
pop
scas
pop
int
inc
repz
or
inc
das
lret
push
imul
lea
jnp
xor
cld
fsubr
push
fwait
les
jp
jo
fdiv
addr16
les
or
data16
jge
lock
mov
cli
push
ret
inc
mov
fcmovb
sub
inc
cmp
push
jge
sbb
lret
inc
insb
inc
xor
sbbb
sub
sahf
or
sbb
dec
sub
add
jnp
adc
repnz
test
inc
mov
sbb
sub
andb
lods
imulb
mov
sub
leave
cltd
mov
mull
cmp
push
pop
sub
fidivs
hlt
add
push
lods
fcoms
repnz
xchg
pop
pop
aas
pushf
mov
push
test
mov
sub
pop
lahf
fnstsw
fbstp
and
popf
fwait
stos
les
lahf
rclb
iret
adc
ret
negl
jmp
mov
mov
repz
cs
movsl
xchg
ds
sbb
scas
pusha
les
dec
mov
xchg
xor
nop
orb
rolb
dec
test
lods
xor
mov
and
or
pop
mov
pop
push
iret
inc
xchg
sahf
push
repz
ficomps
or
pop
out
scas
jbe
sub
aam
aas
xor
xchg
jp
cmp
cmp
rol
pop
loop
loopne
pop
jge
pop
ljmp
jmp
movsl
dec
inc
ret
pop
pushf
scas
loop
pop
dec
daa
js
std
into
push
cmp
jns
jns
in
mov
daa
pop
mov
loop
or
add
call
jp
je
inc
out
test
jp
mov
outsl
and
cwtl
sar
inc
loop
pop
cmp
cmpsb
inc
jo
aas
xchg
scas
shrl
xchg
sbb
out
out
xchg
mov
cs
add
aam
fs
or
scas
test
add
outsl
arpl
sub
pushf
or
xchg
out
add
xor
aaa
adc
in
push
xlat
lret
test
inc
adc
stos
repz
push
aaa
lahf
add
lret
sbb
mov
jno
ffreep
pop
ret
imul
rol
lock
inc
test
das
mov
lods
andl
out
mov
and
mov
push
insb
mov
push
sub
adc
mov
xchg
andb
pop
out
arpl
push
stos
sub
cmp
jne
xchg
inc
in
jmp
addr16
ficomps
movsl
adc
cwtl
cli
push
inc
mov
hlt
xlat
jmp
popf
pop
jbe
popa
loopne
sarl
je
sub
loop
pop
stos
pop
push
lock
in
rorb
or
cmp
or
dec
jne
test
adc
inc
loopne
jl
iret
stc
add
mov
lods
or
mov
mov
cld
jne
jb
lret
sahf
jp
lahf
cld
pop
sub
xor
stc
adc
loopne
in
std
ret
pop
add
out
repz
daa
cltd
out
fldcw
out
mov
clc
and
ret
jp
div
lret
or
lods
mov
lods
dec
das
inc
rcl
mov
mov
lock
dec
mov
leave
sub
cmpsb
sbb
dec
sbb
sub
stc
int
loopne
push
sbb
ljmp
mov
pushf
jmp
push
xor
decb
sub
les
cmp
insl
mov
dec
dec
lcall
aas
jmp
push
push
adc
dec
xor
or
mov
push
movsl
sub
sub
mov
push
mov
mov
inc
fiaddl
and
stc
push
mov
ret
shlb
push
pop
outsl
pop
mov
nop
in
dec
ret
and
movsb
mov
fcoml
push
imul
test
or
lock
cli
test
aad
pop
xchg
mov
pop
enter
adcl
add
cld
pop
mov
rcll
dec
jmp
sub
es
lret
cmp
leave
xor
adcl
mov
push
gs
dec
xchg
repz
push
lahf
icebp
inc
into
inc
jmp
jo
idivl
fldcw
sbb
cmp
popf
out
push
outsb
nop
or
mov
mov
pop
and
cmp
xor
outsl
add
hlt
outsl
loope
xchg
mov
mov
inc
adc
cmp
push
pushf
mov
mov
sbb
add
filds
into
and
lret
les
fildl
testb
sti
push
mov
ljmp
adc
out
jl
dec
fistps
movsl
fs
lods
jmp
sbb
inc
stos
jge
in
pop
push
scas
inc
out
test
inc
or
mov
pop
and
outsl
or
and
std
pop
sub
ret
jno
cmp
test
cmp
in
and
movsb
inc
iret
adc
jbe
push
jl
push
add
in
imul
bound
pop
push
movsb
mov
pusha
aam
cmp
sub
scas
adcl
ja
xor
pop
cmp
aas
in
scas
xor
mov
push
add
movb
adc
jns
cmp
add
jecxz
repz
adc
add
leave
mov
dec
insb
and
adc
cmp
mov
jl
or
or
out
test
imul
insb
jo
loop
lea
rclb
sbb
cli
icebp
and
pop
adc
enter
cltd
sahf
icebp
outsl
xchg
stos
cmpsb
fmuls
adc
push
jb
dec
adc
pop
or
add
sbb
ret
push
int
inc
xchg
pop
xor
xor
or
imul
mov
mov
in
int
adc
sub
add
add
dec
pop
fsubrs
lods
repz
daa
mov
lahf
cmp
int3
icebp
and
loopne
sub
outsl
xor
xlat
pop
mov
dec
jo
adc
iret
gs
insb
inc
ds
sti
mov
outsb
les
mov
imul
inc
or
enter
xor
inc
and
shr
jno
repz
mov
mov
inc
ret
dec
in
aaa
mov
movsb
fstl
shrb
jb
out
dec
mov
cltd
add
push
addb
mov
gs
leave
jno
arpl
int3
xchg
mov
push
inc
sub
leave
in
std
cmpsb
movsb
cmpb
cld
loope
mov
ljmp
in
push
or
fwait
cmc
dec
xchg
mov
sbbl
mov
sbb
dec
inc
nop/reserved
and
xor
xor
aas
pop
pusha
pop
push
push
mov
pop
stc
xor
fnstenv
in
mov
icebp
mov
rolb
jmp
mov
subb
jge
ret
adc
and
repnz
dec
and
test
mov
push
pusha
inc
and
jae
sub
out
xchg
loop
data16
xor
jecxz
mov
lahf
pop
sbb
fdivp
int3
and
mov
out
rcrl
jge
or
rcll
ljmp
repnz
and
fistl
sub
cmp
mov
adc
ljmp
or
sahf
in
jl
aad
in
and
push
mov
leave
or
jl
scas
inc
add
mov
ljmp
in
dec
jno
loope
mov
or
loopne
xchg
or
sub
popa
push
js
loopne
iret
lret
xor
icebp
inc
sahf
movsb
leave
mov
in
fwait
dec
sbb
orb
testl
ja
pop
popf
pop
push
jg
popf
pop
popa
mov
flds
es
enter
mov
pushf
jns
push
push
or
or
lds
mov
inc
sub
stos
scas
psubsb
jg
pushf
stos
mov
sbbl
in
test
push
int3
add
test
push
js
lcall
and
nop
adc
mov
push
mov
push
xor
stos
cwtl
add
and
mov
lods
test
or
movb
cs
push
pop
pop
icebp
mull
sbb
and
adc
dec
fs
jg
jg
xor
add
das
call
mov
pop
popf
cmp
inc
sti
mov
add
das
cmp
lock
jmp
insl
out
scas
testb
pop
cmp
push
sub
into
test
xor
add
mov
fucomip
xchg
rcll
jbe
fldl2e
out
or
xor
sub
lcall
shlb
sbb
inc
iret
shrl
imul
sahf
dec
xchg
xor
pop
jle
aad
push
push
sbb
pop
xlat
mov
test
push
mov
inc
mov
and
loope
inc
aad
call
ljmp
out
imul
jp
and
xchg
mov
push
sub
dec
aaa
iret
pop
outsb
pop
push
jp
adc
ljmp
divl
outsl
inc
sbbb
push
mov
push
scas
and
adc
jno
mov
mov
dec
and
cmp
mov
insl
mov
lret
sahf
pop
mov
xchg
and
movsl
pop
or
sub
adc
and
dec
js
in
dec
pop
loope
cld
dec
leave
cld
cmp
aaa
mov
ss
jae
push
shll
lock
loop
imul
cmp
add
mov
pop
push
adc
shlb
jbe
push
push
pop
add
cltd
mov
sbb
pop
aaa
xor
loop
mov
addl
xor
mov
pushf
imul
fimull
mov
xchg
sub
dec
inc
fucomp
pusha
daa
lret
das
jl
cld
test
popf
add
add
inc
mov
std
mov
sub
push
movsb
cmp
add
mov
push
cwtl
pushf
lret
aaa
cmp
stos
icebp
cs
shrl
mov
lret
or
roll
and
loopne
nop
sbb
add
jle
notl
outsl
icebp
inc
cmp
dec
mov
flds
mov
pushf
in
pop
jecxz
mov
and
pop
pop
or
out
add
mov
cmpsb
xchg
test
jecxz
lods
cmpb
sbb
incl
inc
jb
and
fidivrl
mov
imul
mov
call
pop
push
sub
and
jb
add
and
test
dec
xchg
jl
adc
mov
jns
add
dec
or
sub
xchg
lret
pop
mov
pop
sbb
rorb
adc
sbb
pop
inc
and
adc
mov
add
pavgb
mov
or
dec
mov
and
std
cld
rcrl
jbe
ret
mov
data16
sub
xchg
cltd
pop
xor
gs
pop
jle
rcr
pushf
pop
int3
cmp
cs
scas
push
lds
pushf
pop
xor
shrb
fisttpll
and
cmp
pop
rorl
iret
or
dec
mov
push
loope
mov
lret
mov
or
popa
jge
push
clc
push
add
adc
dec
mov
xchg
adc
mov
xchg
cmp
clc
cmp
push
bound
and
or
test
cmp
pop
out
jmp
mov
or
fadds
push
sbb
inc
aas
and
mov
pop
leavew
ljmp
sub
inc
outsb
fisttpll
dec
shrb
popa
or
jmp
pop
ret
popl
es
movsl
push
ja
lods
push
out
xchg
mov
mov
ss
pop
loopne
mov
mov
rorb
lcall
xor
mov
outsb
mov
add
leave
push
and
cltd
xor
aad
fucom
push
idivb
adc
ret
daa
dec
fnsave
fwait
xorw
add
jle
xor
dec
mov
xchg
fnstcw
daa
sbb
xlat
inc
aam
dec
pop
fimull
jl,pn
insl
lahf
push
mov
repz
fwait
lret
push
inc
mov
fadd
fdivrl
sbb
fnstsw
cli
add
dec
loope
dec
mov
mov
push
adc
adc
mov
sub
faddl
push
aaa
les
shrl
xor
int3
mov
adc
popa
xlat
push
outsl
inc
push
jg
int3
fdivr
sbb
js
cmc
ds
into
or
jns
dec
and
jg
jns
and
cmp
imul
pop
mov
imul
rorl
mov
add
int3
mov
or
mov
add
aad
add
pop
pop
mov
jge
push
stc
mov
push
dec
lahf
les
rcrl
push
idivl
test
in
sbb
out
repnz
scas
mov
mov
aam
mov
mov
xor
mov
subl
mov
stos
adc
jge
fnstsw
ret
pop
and
addr16
sbb
dec
cmpsb
jbe
cwtl
int
pushf
int3
cs
movsb
fs
fcmove
adc
sbb
and
outsb
xchg
mov
test
or
aam
add
int
push
pop
jecxz
jmp
insb
push
bound
cwtl
pop
and
subb
out
jns
ljmp
cld
popf
int3
jle
xor
insb
mov
fsubrl
inc
out
shrl
cld
adc
add
in
add
daa
stc
into
imul
fsubl
rcrl
or
sbb
jecxz
xor
lcall
pop
jne
and
mov
das
push
cmp
pop
std
dec
jmp
das
iret
outsl
addl
es
jg
dec
xlat
movsl
jb
into
inc
pop
dec
xor
sbb
iret
addr16
or
jg
or
jl
sahf
hlt
lds
lods
xor
scas
xor
mov
std
dec
push
sub
in
aam
pop
stos
inc
data16
mov
mov
ss
cmp
loopne
test
dec
mov
push
hlt
out
push
and
sahf
movaps
dec
jns
popf
leave
push
sub
jo
inc
pop
ret
jmp
icebp
sti
mov
cmp
loopne
stos
cwtl
mov
jb
int
jmp
popa
xchg
xchg
pop
and
js
sub
add
pop
dec
lods
std
insl
mov
cmpsb
iret
xchg
adc
repnz
sub
outsl
out
clc
push
arpl
pop
dec
mov
orl
lea
cmpsl
mov
in
xor
adc
cmp
aaa
clc
sub
inc
adc
rclb
enter
mov
or
adc
or
sbb
ret
test
ja
xor
jecxz
push
aad
pushf
ret
xor
subl
aad
and
pop
jae
mov
sub
daa
xchg
inc
repnz
js
mov
hlt
xor
orb
mov
cmp
jbe
in
pop
adcb
and
xchg
push
ja
pop
lock
or
jns
test
in
imul
dec
xchg
push
push
dec
xor
push
pop
inc
jb
xchg
loope
mov
imul
xlat
ja
push
mov
adc
lods
jns
xchg
sbb
xor
sbb
in
mov
stos
gs
js
dec
mov
popa
sbb
adc
in
testb
enter
push
or
das
aaa
push
sahf
or
dec
call
jecxz
mov
arpl
sbb
mov
int3
outsb
cmp
inc
mov
popa
adc
mov
or
ljmp
inc
mov
or
pop
movsl
mov
xor
fnstsw
and
lret
push
sbb
inc
lods
aas
popa
fs
dec
fnstenv
pop
dec
ret
adc
or
inc
jmp
jb
xchg
lea
jge
dec
mov
dec
test
ret
xlat
fimull
xchg
psrlw
jle
outsb
xchg
mov
mov
testl
pop
sbb
jmp
mov
lret
pushf
ljmp
scas
fimuls
mov
addl
pop
shlb
loopne
pusha
aam
daa
dec
and
sub
sbb
fcmovb
and
in
adc
dec
leave
mov
in
aad
push
fldt
int3
dec
and
cmp
outsb
testb
lods
jmp
jbe
jns
push
push
fwait
es
fisubl
hlt
mov
adc
pop
fmuls
push
outsl
aas
test
add
pop
hlt
inc
repnz
mov
sahf
popl
jmp
jg
push
pop
out
jb
mov
pop
popf
sub
lds
sbbl
les
es
xchg
jge
in
jp
xor
icebp
dec
or
and
enter
mov
mov
cwtl
mov
add
insb
push
cwtl
imul
cmp
add
cmp
mov
dec
pop
dec
outsb
and
out
add
jge
pop
sub
dec
lods
insl
ret
adc
cmc
hlt
popf
inc
imul
roll
loopne
imul
or
popf
jnp
rolb
fucomip
scas
dec
mov
mov
jno
into
popf
mov
mov
and
icebp
loop
imul
stc
mov
popa
jbe
inc
rorb
mov
mov
rol
jg
push
xlat
xchg
cltd
jns
scas
bound
mov
ja
test
aas
shrb
bound
jmp
xor
push
lods
stos
mov
adc
lar
mov
push
aam
inc
ret
lock
jmp
push
lret
xor
cmp
adc
mov
repz
jge
clc
hlt
icebp
scas
pop
push
ret
pop
aas
fcoms
inc
xchg
xor
inc
je
adc
pop
sarb
fildll
popf
push
mov
or
or
sbb
xchg
mov
push
push
mov
jmp
jo
pop
je
test
ds
nop
lcall
add
fwait
pusha
push
test
xor
xor
mov
push
pop
test
cmpsb
inc
movsl
insb
jbe
popf
xor
lds
cmp
jne
jle
xchg
pop
mov
mov
bound
jp
das
aaa
in
imul
jp
mov
inc
loope
jae
fldl
mov
lock
cmp
or
xor
mulb
push
jle
popl
out
cmpsl
sahf
out
sub
jmp
fsubrl
and
mov
xchg
fisubrs
mov
cli
xor
insb
scas
mov
jb
mov
gs
jbe
xorl
pop
iret
sbb
in
jge
rcl
loopne
std
in
jb
ja
sbb
dec
mov
cmc
imul
out
mov
out
mov
inc
pop
jg
fs
xor
and
repnz
mov
pusha
jg
mov
jae
les
frstor
adc
cltd
dec
aas
shll
fsubr
and
or
xchg
movb
fsubl
mov
sub
add
jge
mov
inc
or
bound
fwait
gs
lock
sub
test
pop
sub
xlat
sub
roll
mov
adc
filds
popf
movsl
enter
cmp
mov
cmp
or
call
cmp
jae
enter
sbb
movsb
inc
dec
aaa
add
insl
out
xchg
ds
sbb
cltd
lahf
movsl
push
jns
mov
call
mov
add
fs
rorb
add
xchg
sub
leave
pop
push
mov
jecxz
jns
fdivs
cld
pop
ds
push
sub
xchg
clc
jnp
jbe
pop
fistl
push
mov
movsl
or
or
jns
stos
dec
pop
xchg
mov
and
aad
subb
xchg
ret
push
sbb
cwtl
popf
inc
cmpsb
xlat
leave
and
inc
mov
out
or
inc
mov
rclb
cmp
test
sti
add
adcb
mov
aad
mov
lods
ljmp
sub
and
add
rcll
inc
sbb
inc
add
pop
leave
lret
add
je
test
repz
jge
das
inc
add
jo
cmp
xchg
fiadds
in
and
sub
cltd
mov
ret
mov
inc
add
jp
ja
shll
mov
mov
addr16
dec
in
sbb
push
pop
out
lcall
cmp
aad
lret
cld
rorb
sbb
sub
dec
sahf
es
addr16
push
test
cli
icebp
mov
stos
pop
dec
or
mov
push
jl
or
es
shl
ljmp
std
mov
nop
jae
lea
adc
pushf
icebp
adc
cmpb
roll
arpl
dec
adc
jge
sbb
cwtl
adcl
repnz
adc
inc
adc
hlt
stc
sub
sub
bound
pushf
loope
mov
and
aas
fbstp
roll
mov
or
std
clc
mov
xchg
cmp
inc
or
sbb
push
movsb
push
fldcw
pop
mov
inc
addb
sbb
sti
sbb
push
jp
add
lods
add
stos
adc
xchg
xchg
shl
or
and
insb
bound
mov
pop
out
mov
or
movsw
sbb
mov
jae
pop
xorb
aas
icebp
adc
scas
pop
cltd
incl
jo
add
xor
daa
pop
jmp
jmp
ja
das
jns
lret
pop
cmp
iret
call
and
mov
mov
ljmp
clc
or
call
shlb
icebp
xchg
in
push
pop
sub
push
loop
and
in
cld
lret
pop
popa
and
xchg
jbe
and
in
inc
cmpsb
mov
fldt
ret
mov
rclb
cmc
mov
pop
imul
insl
or
mov
mov
xchg
adc
dec
aas
or
cs
arpl
movsb
xchg
int
or
jecxz
in
inc
sub
and
mov
mov
mov
xor
lret
fcompl
or
call
mov
or
orl
mov
fildll
and
outsb
or
cmp
pop
insb
outsb
xchg
mov
push
and
out
sub
leave
rorl
push
daa
sub
mov
ljmp
xlat
jne
sub
out
sub
ljmp
pop
xchg
ret
cs
sti
mov
in
jbe
cmp
imul
sub
repz
jb
mov
rcrl
push
inc
xor
cld
leave
or
and
sub
xchg
out
fwait
outsb
push
shrl
jle
adc
jo
or
xor
or
mov
enter
jg
push
pop
bound
arpl
jp
iret
daa
jg
fmuls
xchg
mov
inc
in
and
mov
in
push
mov
loope
sbb
jge
icebp
sbb
testl
lods
test
mov
aad
jge
dec
sbb
sub
pop
sbb
fwait
divl
and
shrl
inc
xor
pop
fmuls
movsb
sbb
int3
fsubl
dec
jo
sbb
inc
fldt
cmp
mov
sbb
pop
push
inc
das
xchg
lret
and
mov
aas
aad
arpl
data16
je
sti
push
pop
aas
sbb
mov
mov
add
orb
arpl
pop
les
add
lock
stos
dec
jno
int3
push
dec
mov
adc
pop
nop
mov
cmp
xchg
jo
dec
adc
push
adc
dec
adc
out
in
out
mov
or
pop
lret
xor
and
add
movsl
inc
iret
imull
sub
jmp
mov
je
loopne
repz
dec
sbbl
fs
sbb
addr16
mov
imul
inc
cmpsb
test
push
sarb
push
add
out
negb
hlt
rorl
aam
jbe
jo
push
repz
xor
push
sub
out
pop
sti
scas
unpckhps
stc
popa
sbb
mov
cmp
push
stos
mov
dec
and
push
lret
jmp
andl
test
aaa
aam
push
mov
pop
fisubs
pop
adc
inc
movsl
mov
inc
ss
push
bound
mov
jnp
test
hlt
add
imul
movsl
push
bound
or
pop
sub
filds
xor
inc
add
push
lock
fistps
into
mov
adc
gs
dec
mov
imul
adc
push
clc
or
jp
out
push
sbb
ret
movsb
mov
movb
add
mov
inc
mov
sbb
sub
lret
aas
push
cmp
mov
pusha
popf
sbb
nop
inc
inc
add
pop
add
movsb
inc
cmp
data16
repz
xor
ljmp
fadd
push
pop
ret
cmp
and
loope
test
shlb
sub
lret
inc
aaa
mov
test
js
ret
test
outsb
sub
add
in
imul
adc
test
pop
iret
jmp
in
imul
sub
lcall
out
sahf
lahf
mov
inc
imul
cwtl
int3
in
hlt
popa
popf
mov
or
xlat
jno
in
jb
cmp
push
outsb
cwtl
cwtl
sti
push
xchg
jmp
pop
repnz
stos
inc
and
pushf
stc
cld
mov
arpl
or
call
sub
inc
cld
sbb
mov
out
xchg
sti
fsubs
cltd
das
iret
dec
lds
out
stc
sarb
cmp
push
pop
push
mov
outsb
cmp
push
xchg
in
call
jl
push
pop
cmpb
cmp
pop
push
adc
out
shl
push
pop
stos
popf
repz
cli
mov
icebp
dec
rol
xchg
fadds
jl
jp
jae
mov
inc
jle
and
mov
dec
or
sti
fdivrs
scas
icebp
lea
sub
fisubs
mov
cltd
xor
mov
nop
and
inc
mov
mov
push
push
inc
or
jnp
nop
shlb
test
push
inc
xor
sbb
pop
paddsb
adc
enter
pop
shl
bound
insb
add
cmp
sbb
scas
mov
fcomps
add
test
cs
testl
outsl
les
out
sub
cmp
lods
dec
fidivrl
sbb
test
lods
add
and
daa
and
or
xor
dec
es
sub
pop
fmulp
sub
mov
jns
xor
loop
sub
mov
or
in
movsb
sub
enter
cs
sbb
rorb
adc
cmpsl
inc
frstor
ret
ficompl
or
push
cmp
lret
call
mov
test
dec
inc
rcll
xor
pop
in
mov
scas
mov
in
leavew
push
or
push
pushf
jnp
arpl
fcmove
ja
jmp
xchg
pop
jne
and
add
dec
leave
jmp
inc
loope
out
mov
xchg
popf
stos
in
daa
dec
aaa
iret
lea
jge
push
popa
imul
cld
push
adc
shrb
aaa
fcmovnbe
mov
daa
xor
out
inc
dec
or
das
xor
xlat
pop
scas
lret
aaa
fnstenv
lahf
lock
cmp
inc
inc
leave
std
dec
mov
test
add
mov
loopne
push
add
push
outsb
dec
shlb
xchg
or
das
pop
dec
in
push
push
movsl
sub
push
sbb
lock
sbb
dec
stos
push
push
testb
mov
sbb
in
xor
insl
push
aad
add
pop
adc
fisubrl
mov
lds
fidivl
mov
push
push
sbb
pushf
shl
jns
in
and
inc
pop
mov
clc
push
std
or
push
jns
mov
pop
pusha
jl
xchg
mov
mov
jo
cmp
test
outsl
pop
clc
xchg
outsl
cli
xorb
ds
cmp
push
shrb
lcall
and
push
sub
repz
mov
xor
imul
xor
inc
ss
out
aas
push
aas
cmc
repz
mov
lock
in
pushf
dec
lret
pop
inc
mov
and
xor
jbe
sar
xchg
xchg
jno
pusha
stos
std
xor
nop
hlt
and
imul
ljmp
cli
ret
mov
cmp
out
or
mov
ficoms
pop
pop
mov
and
mov
dec
dec
pop
and
and
dec
mov
jg
and
movsb
sub
outsl
pop
xor
shlb
das
incb
cld
xchg
loop
push
sub
lock
cmpsl
push
mov
clc
shlb
das
fcmovnbe
add
arpl
ja
jg
xchg
in
lret
stc
ja
jno
sbb
lods
and
mov
stc
mov
pop
mov
ss
lahf
test
ss
inc
cmpsb
test
ja
dec
add
insb
jb
mov
clc
scas
stos
pushf
scas
lret
insl
sarb
clc
xchg
mov
pop
mov
gs
mov
scas
cmp
mov
jge
jns
insb
push
popa
pop
bnd
push
aaa
insb
mov
inc
sub
add
call
pop
xchg
stos
je
jg
hlt
out
jecxz
mov
jns
icebp
fisubrs
dec
sbbl
lret
arpl
lret
daa
in
jo
bound
push
pop
bound
mull
and
or
mov
es
loop
iret
je
push
xchg
movsb
push
sub
sahf
cmp
lahf
lret
leave
mov
int3
push
mov
fucomp
sahf
pop
push
dec
and
or
inc
sub
jae
dec
mov
inc
jp
in
mov
sbb
loopne
scas
sub
push
in
inc
mov
icebp
fiaddl
add
pushf
add
push
pop
push
adc
pop
js
subb
mov
xchg
inc
divl
sub
xor
pushf
xchg
dec
xor
rorb
sbb
xchg
and
mov
adc
leave
xchg
pop
je
in
call
mov
dec
push
mov
ret
mov
jo
and
mov
mov
cmp
jns
insl
das
je
sub
cmp
dec
xorl
cmp
add
adc
mov
pop
mov
sub
lcall
mov
addb
dec
ss
and
mov
or
shll
push
scas
or
enter
jecxz
ret
inc
mov
cmc
mov
movsb
mov
scas
fbstp
mov
loope
xchg
pop
stos
mov
mov
dec
push
popa
xchg
pop
jo
mov
pmulhuw
decl
pop
xchg
sti
loop
mov
mov
xor
stos
pop
incl
dec
xlat
daa
jge
mov
ficomps
mov
sub
sbb
in
xor
push
daa
repnz
xor
dec
inc
sub
mov
shrb
dec
mov
inc
adc
cmp
mov
cmpsb
out
inc
jbe
mov
and
inc
cmp
movsb
aaa
and
sub
enter
xchg
push
push
je
jp
jle
mov
push
dec
mov
gs
ret
nop
jle
mov
adc
inc
daa
in
adc
mov
adc
dec
push
jnp
xchg
push
dec
inc
push
mov
scas
push
aas
mov
idivl
adc
push
mov
mov
xor
mov
das
loopne
or
ret
and
ret
push
mov
sti
iret
inc
lret
mov
int3
loopne
xor
cmp
push
enter
ss
ret
inc
jmp
outsl
dec
mov
adc
clc
roll
dec
sti
es
sbb
add
jae
fimull
lret
push
ss
jecxz
push
adc
inc
jno
mov
aas
mov
cld
ds
icebp
popa
push
push
xor
gs
mov
notl
es
pushw
imul
xor
orl
pop
jnp
repnz
adc
jmp
dec
scas
loope
push
or
sub
push
push
hlt
lcall
adc
or
outsb
out
push
push
lea
aam
inc
das
sbb
mov
cli
pushf
insl
pop
add
fidivrl
sub
jno
fcomip
pop
icebp
mov
cmp
xor
imul
pusha
pop
ret
mov
sub
mov
add
int3
nop
fisttps
inc
cmp
xor
add
jbe
dec
mov
sar
loopne
aad
out
cmp
pop
js
xor
inc
xor
xchg
sbb
mov
mov
sub
and
iret
stos
out
dec
jecxz
xchg
outsb
inc
pop
add
clts
mov
sti
aad
pop
adc
icebp
sti
test
pop
mov
mov
call
lds
mov
shrl
mov
mov
xor
inc
mov
rep
xor
add
outsb
push
add
xchg
sarl
in
cltd
sbb
sarb
sbb
adc
mov
mov
jb
xchg
cli
dec
fwait
in
inc
mov
jbe
mov
mov
test
fidivrl
gs
and
insl
sbb
dec
loop
inc
mov
xchg
pop
lock
push
shl
mov
adc
add
enter
jg
sub
mov
arpl
inc
push
pop
fmull
inc
dec
jae
pop
inc
pop
dec
lcall
cld
mov
jg
stos
fcmovne
sub
cmp
outsl
pop
sbb
dec
loop
add
loop
pop
or
mov
into
xor
mov
lahf
outsl
pop
cwtl
lret
ret
xchg
add
es
jne
divl
icebp
movsl
xchg
pop
je
icebp
sahf
mov
dec
sbb
mov
mov
sbb
add
popa
sbb
jbe
das
cwtl
popa
subl
lds
jne
sbb
clc
fimuls
mov
or
mov
mov
push
and
mov
cltd
inc
ret
gs
add
dec
insb
dec
inc
call
jb
les
mov
mov
push
fsubl
pop
pop
out
push
popf
sbb
in
ja
loope
adc
out
adc
pop
sub
repnz
fistpl
dec
shlb
add
mov
or
sub
cmp
pop
shrl
fisttps
pusha
sti
sti
iret
pop
daa
ss
mov
shl
sub
fisttpl
jae
nop
and
enter
mull
out
xchg
push
orl
nop
adc
sbb
mov
mov
or
ds
xor
arpl
mov
mov
ret
pusha
jmp
js
in
or
dec
push
or
fsubr
stos
insl
jp
insl
pop
nop
aad
lret
sub
hlt
xchg
add
mov
xchg
lods
push
inc
imul
rclb
adc
lahf
add
int3
imul
inc
mov
aaa
and
js
dec
fldenv
loopne
inc
icebp
pop
sbb
test
loop
mov
jp
pushf
shl
push
pop
mov
cmp
fmuls
inc
push
pop
ljmp
mov
test
jecxz
jge
cmp
fnsave
cmp
outsl
xchg
movsb
inc
push
out
shlb
sub
xchg
cmpsb
cmp
xchg
das
rorl
push
into
jg
pushf
cltd
jecxz,pt
jnp
ret
test
or
sbb
les
loopne
mov
or
push
jl
aam
cmpsl
sbb
std
adc
xlat
add
push
push
pop
mov
dec
repnz
insl
dec
push
xchg
add
loop
mov
insl
xchg
sbb
push
mov
ret
inc
imul
push
or
fs
fs
mov
pop
mov
jg
and
jl
pusha
and
cli
dec
cmc
xor
cmp
jbe
or
xchg
cltd
js
int3
sub
iret
mov
movsb
iret
pop
push
cmp
les
push
add
cmpsl
add
add
fld
xor
jo
fs
mov
data16
or
testl
popa
sub
mov
das
jo
mov
lcall
subl
pop
add
in
stos
sbb
cmpsl
imul
add
cmp
fucomi
sub
lcall
cld
xchg
test
cld
pusha
cli
out
dec
fildll
clc
cltd
pop
mov
loopne
xchg
aaa
aaa
mov
inc
fcmovu
fnsave
aaa
jmp
cmp
outsl
or
mov
dec
mov
adc
sub
pop
sbb
loop
and
pop
inc
subl
mov
lds
lods
sti
xor
subl
clc
adc
xchg
lods
jmp
out
fs
cld
adc
mov
add
lods
loopne
xor
and
repz
sbbl
mov
fsubr
mov
push
je
push
into
mov
adc
imul
pusha
push
inc
mov
negl
outsl
mov
in
nop
dec
cmc
cmp
cli
pop
push
dec
outsb
sub
pop
sub
sbb
dec
mov
mov
jb
inc
and
pop
add
jne
xor
push
or
or
decb
lods
pop
mov
cmp
fcompl
enter
mov
mull
xchg
in
insb
cld
imul
jbe
jbe
and
and
test
mov
sbb
mov
and
mov
dec
and
fmull
test
inc
stos
loope
outsb
subl
ja
add
mov
mov
sub
hlt
aas
dec
fcompl
aam
jbe
dec
andb
push
cmp
fldenv
jns
add
jge
lret
jl
jae
iret
ss
movsl
cmc
subl
add
lods
in
outsb
jne
pop
aad
popa
mov
outsl
mulb
mov
lcall
or
aas
dec
rorl
jno
call
cmc
rcrl
and
cmpl
lock
pusha
in
jns
or
lock
repnz
lods
xor
sbb
push
arpl
inc
mov
fwait
mov
outsb
je
lock
pop
inc
js
icebp
and
push
push
push
movsl
dec
and
cmp
push
add
inc
repnz
xor
negl
adc
jmp
insb
mulb
mov
cs
insl
cmpsl
test
xchg
lods
andb
cmp
mov
xor
mov
popf
ss
lea
adc
je
loopne
movsl
rcll
jmp
lcall
sbb
out
cs
add
lock
mov
ret
pop
mov
jecxz
mov
cld
outsb
aaa
mov
int3
cmc
or
push
icebp
or
cmp
fcomip
lods
cli
roll
xchg
cmc
sbb
mov
int
testb
pop
ds
sbb
xchg
push
xchg
xor
fcomps
add
xor
repz
jecxz
jmp
data16
cld
pop
ret
lret
mov
fcmovnu
mov
pop
xchg
or
sub
sti
mov
shll
push
jnp
das
data16
movsb
insl
xor
or
sti
ljmp
repnz
icebp
mov
divb
push
jnp
cmpsb
out
adc
mov
fisttps
repnz
aaa
pusha
sbb
in
movsb
iret
jo
xchg
js
fxch
and
jp
lea
add
mov
dec
lods
dec
inc
mov
mov
and
push
lret
push
lea
xor
mov
call
in
pop
and
pop
and
mov
xor
std
pop
jp,pn
cmpsb
push
mov
ss
mov
stc
mov
mov
into
mov
lret
jnp
int3
xor
aaa
push
test
push
mov
mov
cmp
adc
jmp
sbb
dec
aad
out
push
jg
xchg
push
int3
in
xchg
fnsave
lock
arpl
xor
dec
xor
shl
fwait
mov
insl
sub
icebp
lea
cmp
lods
sbb
je
fsts
xor
ret
add
stos
rep
mov
push
scas
adc
sbb
adc
mov
xchg
pop
lcall
sub
std
mov
loope
popf
in
jb
imul
in
push
push
ja
outsl
loop
out
mov
adc
jmp
mov
pushf
loope
add
aad
push
rcl
js
pushf
add
mov
mov
cmpsl
jbe
cltd
push
mov
and
ret
mov
sahf
jb
jge
jno
rolb
adc
test
mov
mov
sbb
cmp
fildll
adc
xor
push
pop
lds
mov
arpl
out
sbb
xchg
lahf
inc
js
or
popa
or
push
sub
mov
in
xchg
sub
pop
cmp
jnp
pop
js
or
xor
mov
popa
mov
mov
sti
into
add
pop
add
xchg
out
fiadds
mov
cwtl
iret
or
inc
xchg
in
or
lret
fstpl
aad
adcb
pop
cmp
push
jnp
xorb
mov
clc
mov
inc
fcmovnbe
mov
jns
dec
dec
out
or
fstpt
mov
or
xchg
add
ret
shlb
fidivs
sbb
mov
adc
jmp
lret
or
ret
pop
sub
sarb
fidivl
movsl
mov
flds
adc
xchg
pop
dec
icebp
stos
pop
negl
test
jbe
sub
ss
aas
push
cmp
ret
sub
pop
rcll
pop
sarl
pop
dec
addb
inc
sarb
inc
loop
and
inc
popa
or
jg
out
mov
div
xor
add
mov
cmc
pop
add
and
loopne
inc
ljmp
adc
sbb
rcrb
cmp
js
popa
out
dec
ficoml
push
sarb
pop
fnsave
mov
cmc
adc
test
imul
inc
or
aas
gs
adc
orl
sub
mov
and
and
fwait
cli
lock
aas
xchg
in
cmc
adcl
dec
xor
sarl
outsl
out
jg
inc
fs
dec
ljmp
je
inc
mov
cmp
mov
repz
sub
mov
loop
jecxz
das
les
jl
arpl
and
vmovsldup
sbb
not
mov
cmpsb
imul
lret
out
imul
push
fistpl
inc
or
sub
adc
hlt
add
cltd
bound
dec
pop
add
arpl
mov
cmp
push
xor
cs
ja
rcrb
inc
popf
pushf
pop
enter
add
jbe
adcb
jmp
add
das
xchg
xchg
mov
push
jno
add
or
sbb
sti
xchg
test
decl
les
or
fistps
lret
cmpsb
lock
and
mov
add
push
xor
popf
or
lods
call
mov
daa
inc
mov
mov
pop
cmp
pop
jno
ss
lcall
outsl
data16
mov
mov
int3
mov
adc
imul
jns
mov
adc
aam
nop
gs
incb
mov
xchg
lret
repnz
xchg
push
push
lret
js
mov
lods
cmp
xor
shll
inc
push
pop
stos
lock
or
rol
mov
out
mov
push
bnd
test
jo
and
mov
pop
and
jne
stos
inc
movsb
int
ljmp
pop
dec
sbbl
js
sbb
outsl
pop
push
ret
xor
ficompl
popa
cmp
mov
and
add
fsts
pop
mov
lock
push
push
adc
pop
mov
mov
pop
cmp
cmpsb
ss
sahf
sti
mov
clc
out
scas
in
test
mov
jl
outsb
int
imul
cmp
cmc
xchg
aaa
jno
and
into
jns
or
inc
subb
test
jmp
mov
stos
sub
mov
mov
mov
fdivr
fucomi
int3
insb
pop
pop
dec
repz
sub
adcl
lcall
inc
flds
inc
sbb
or
push
cltd
aad
in
cld
mov
sti
addr16
adc
push
or
and
cmc
mov
sbb
add
sub
adc
push
sbbl
daa
cmc
loop
push
pusha
loopne
sti
std
cltd
sbb
mov
out
outsb
cwtl
fsub
mov
es
push
rcl
xor
arpl
xchg
adc
push
lcall
and
cli
filds
lds
adc
sub
imul
fsubrs
adc
jg
insl
insl
sub
icebp
imul
jle
pop
xor
jb
xchg
xor
fildll
mov
rol
adc
adc
loope
inc
dec
rcrl
sub
fidivrl
es
aas
dec
out
lds
push
pushf
push
mov
inc
int
cltd
fistl
sbb
fisubrs
loopw
adc
mov
sbb
das
ds
std
subl
cmp
inc
jmp
ret
int3
inc
js
sbb
xchg
push
xlat
jns
mov
divl
inc
push
mov
mov
xchg
dec
pop
push
cmpsb
push
pushf
mov
adc
lods
add
out
in
cmp
xchg
jne
outsb
inc
les
or
idivl
sub
mov
in
dec
jo
leave
int3
mov
sbb
cs
push
in
jne
int
sub
add
call
dec
setns
ss
or
out
cmpsb
and
ficompl
xor
dec
inc
insl
and
mov
jno
into
jno
or
or
push
ret
arpl
in
jo
cmc
popa
cmp
in
cmpsb
mov
jb
sub
xor
add
aad
fcomp
xor
mov
push
adc
jge
push
clc
ljmp
push
loopne
mov
or
jns
cmp
stc
mov
xchg
rclb
mov
xchg
std
sub
lret
adc
xchg
lret
add
jo
sbb
loopne
cli
inc
cwtl
pop
pushf
push
adc
imul
out
imul
in
call
rep
inc
jecxz
dec
sbb
mov
pushl
sub
scas
nop
push
sbb
std
pop
inc
outsb
dec
inc
sbb
cwtl
xchg
fnsave
pop
dec
and
not
push
add
mov
outsb
adcl
movsb
xor
ror
lcall
xchg
xchg
sub
in
pop
cltd
js
ljmp
in
cwtl
insb
sbb
rcrb
std
test
ja
push
outsb
ss
lahf
lds
add
out
test
test
lock
lea
int
pop
cmp
test
data16
iret
loope
rcrb
sub
jns
repnz
add
add
mov
cmp
bound
sbb
outsl
outsb
jae
fs
lods
dec
mov
jp
xchg
xchg
jae
jp
fdivrl
sahf
repz
jg
imul
add
ret
adc
dec
lea
test
jns
cmc
jge
cmp
xchg
xchg
inc
jecxz
adc
cmp
inc
pop
mov
movsl
rcrl
cmpsb
aad
pop
mov
inc
ljmp
sbb
outsb
loop
adc
and
jmp
push
jmp
sbb
hlt
push
or
mov
add
dec
push
pop
call
lea
jnp
scas
mov
xchg
cwtl
cli
lock
jno
sub
xchg
cmp
sub
rcrl
push
popa
sbb
push
outsb
or
hlt
fsts
pop
sbb
push
cwtl
and
scas
mov
js
bound
imul
jo
jae
lods
mov
leave
mov
and
arpl
fsubr
outsb
jmp
dec
push
pop
cltd
mov
cwtl
mov
cmc
cmp
dec
dec
fwait
jle
pop
movsb
sbb
pusha
mov
test
add
mov
ss
data16
sbb
ljmp
xchg
scas
test
mov
scas
ss
cs
repnz
vpsllw
push
stos
sbb
out
int
mov
mov
dec
mov
stos
dec
int
adc
shlb
push
cmp
insl
mov
mov
cld
dec
mov
push
inc
push
sahf
testb
sar
xchg
ja
call
or
icebp
push
or
setne
dec
sbb
inc
sbb
xchg
ds
jbe,pn
pushf
mov
lahf
scas
fildl
sbb
mov
sub
pop
fiadds
jecxz
or
adc
push
mov
outsb
jo
lods
mov
sub
push
cmp
xlat
sbb
push
aaa
sbb
add
rorl
mov
mov
cli
enter
adc
jle
scas
xchg
mov
sti
cmp
mov
fwait
jne
shlb
andb
gs
cs
cwtl
fildll
push
xchg
cwtl
pusha
out
pop
xchg
repnz
incl
or
repz
lods
xor
add
aas
cmpsl
jae
imul
cwtl
int3
es
mov
dec
in
aad
std
shl
imul
stos
lret
sub
push
mov
cmpsb
mov
inc
inc
lea
addr16
mov
jmp
arpl
add
inc
bound
xchg
dec
xor
sbb
dec
pop
mov
or
mov
dec
clc
aaa
jns
xchg
bound
dec
pop
push
xor
sbbl
clc
popa
lods
pusha
lods
sub
jmp
jno
jg
jmp
insl
mov
inc
or
and
and
mov
fisubs
out
xor
pushf
sahf
jecxz
mov
xor
xchg
push
sbb
mov
dec
loop
sub
mov
adc
push
mov
sub
scas
xchg
dec
data16
in
mov
add
cmp
mov
enter
xchg
clc
push
push
in
fldenv
mov
ret
mov
mov
sbb
ljmp
aam
cmpsb
jb
xorl
fstpl
adc
popf
xlat
outsb
sub
arpl
out
or
aad
cmpsb
and
mov
adcb
mov
add
lahf
sub
leave
fstps
jmp
out
shll
mov
and
pop
inc
or
lods
js
sbb
pcmpgtd
dec
xlat
mov
xor
jnp
inc
out
sub
je
popf
mov
mov
xchg
add
sbb
mov
int
lcall
dec
divl
sbb
das
lret
repz
mov
lds
jge
push
js
test
adc
andb
lods
lret
stos
jg
ja
mov
pop
call
sbb
jg
xor
push
pushf
sbb
fwait
loopne
cltd
jl
jl
sbb
or
pop
or
lock
xor
or
xor
cmp
jb
push
sbb
xor
hlt
repnz
sub
mov
dec
lahf
pop
push
dec
mov
movsb
test
mov
cmp
xor
and
push
aad
outsl
insl
fabs
add
addr16
cs
insb
inc
xchg
sub
je
fucomi
hlt
test
enter
or
sarl
push
cmpsl
into
push
imul
sub
jno
clc
stos
lods
stos
mov
std
xor
repnz
xchg
mov
inc
cmc
pusha
cli
daa
bound
shlb
or
xchg
lret
push
sub
jle
fldlg2
mov
xorb
or
aas
xchg
inc
add
popa
jge
mov
inc
int
xchg
inc
mov
daa
pushf
test
rcl
sub
jg
fmuls
popa
pop
pop
stc
data16
cmpsl
sub
or
insl
mov
pop
ffreep
mov
adc
jg
scas
es
jno
imul
xor
sbb
ds
daa
or
sbb
andl
pusha
dec
std
lret
cmp
inc
push
cwtl
test
out
addr16
stos
das
add
dec
cmp
in
jecxz
data16
mov
or
mov
cmp
lahf
pop
xchg
nop
sbb
popf
and
fcmovne
repnz
pop
jl
popf
arpl
push
dec
fbld
xchg
gs
or
inc
fistpll
inc
xchg
sbb
clc
adc
pop
pusha
lock
aam
xchg
pop
aad
lcall
nop
push
sub
add
cmp
dec
fistl
push
sub
je
add
jp
sbb
je
cmpsb
xchg
cmpsb
stos
xchg
aam
push
mov
repnz
or
mov
rorl
jl
inc
cltd
sbb
aas
mov
or
in
dec
mov
and
pop
mov
ret
movsl
fwait
sbb
mov
jae
std
sbb
fwait
pop
add
lock
mull
out
test
das
inc
jmp
push
cmp
cld
xor
mov
jl
pop
jne
imul
or
rorb
ret
enter
pop
pushf
into
in
aas
xchg
je
cmp
push
mov
jne
mov
mov
nop
jmp
mov
shrl
sbb
cmp
and
outsb
xor
bound
scas
sub
cli
adc
aad
pop
subb
mov
mov
popf
or
mov
add
out
cmpsb
mov
mov
lea
into
lret
adc
jmp
add
mov
ds
je
sbb
test
push
cwtl
roll
pop
mov
repz
or
inc
jo
hlt
add
xor
pop
jge
dec
inc
jno
and
faddl
sub
jae
adc
push
fmull
stc
inc
mov
movsb
ds
fs
pop
dec
xchg
adc
add
das
mov
inc
test
xor
mov
sub
mov
pop
xchg
jno
ja
in
add
std
mulb
fstp
das
mov
and
or
push
mov
outsb
cld
xor
std
cmp
xor
in
jo
cmc
jno
loop
xchg
xor
gs
push
dec
popa
stos
into
dec
adc
lahf
out
jbe
repz
jmp
pop
push
jbe
lock
cmpsb
gs
repz
sbb
iret
xlat
pop
loop
mov
sbbl
push
inc
cld
mov
inc
lock
lock
jecxz
sbb
jne
lahf
sbb
bound
not
daa
sub
cmpsb
xor
lfs
jne
jecxz
sarl
loope
in
pushl
out
dec
jmp
push
out
and
sbb
out
enter
cmpsb
iret
adc
pop
mov
lret
enter
mov
inc
arpl
scas
dec
lcall
add
and
adcl
pop
dec
xchg
rclb
and
std
push
jge
inc
cli
jbe
mov
fstl
sbb
and
xchg
lcall
stos
into
es
rolb
les
mov
pop
pop
xor
adc
cmp
mov
subb
lds
js
push
sbb
push
insb
push
or
test
orb
push
sub
aaa
mov
shll
shrl
sub
xor
cld
push
jae
sbb
andb
lea
cmpsl
daa
xor
xor
ljmp
mov
dec
dec
aam
sub
shlb
repz
lds
adc
mov
out
and
leave
or
stos
jg
movsl
push
mov
push
dec
jb
cmpsb
fstl
ds
popa
fcoms
test
fstpt
roll
mov
sub
clc
fcomps
cld
scas
mov
jg
lcall
jne
rcrb
cmc
mov
daa
out
test
pop
insl
je
ret
cltd
push
mov
or
and
sbb
push
push
je
sahf
lds
cmp
mov
sub
push
pop
mov
dec
scas
xchg
sub
stos
fnstsw
mov
adc
adc
sub
sbb
pop
rcrb
mov
jnp
in
push
scas
pop
xchg
in
xorb
int
jno
out
test
imul
ja
mov
outsl
pop
or
inc
xor
mov
mov
fnstsw
xchg
loop
mov
jb
push
out
mov
xor
cld
bound
mov
mov
xchg
jge
push
sbb
pop
sbb
out
jno
sbb
test
xchg
or
lds
jo
insl
xchg
adc
dec
or
xchg
ret
adc
pop
fisttpl
mov
ljmp
in
mov
fimuls
nop
into
out
sti
cld
lcall
cmc
sbb
mov
push
adc
pop
ja
aaa
jo
mov
cmp
jecxz
mov
inc
push
lods
xor
aad
sub
mov
mov
scas
sub
push
jle
xchg
test
xchg
ds
js
xor
icebp
imul
pop
mov
inc
mov
xor
jmp
sbb
popf
repnz
lea
mov
push
cmp
sti
scas
dec
sarb
jmp
or
pause
fwait
adc
lods
mov
mov
insb
jne
lret
or
mov
mov
cmp
loope
dec
aas
jle
lock
mov
cmp
pop
gs
or
sub
dec
mov
es
data16
xchg
mov
push
inc
das
push
outsb
adc
add
push
rcrl
pusha
or
aam
inc
fwait
fs
cli
movsb
jg
test
sub
mov
rcl
in
pushf
hlt
inc
ret
cmp
pop
and
cmp
mov
pop
clc
mov
pop
int3
ret
push
cmpsl
adc
stos
dec
rclb
xor
jns
pop
sub
mov
push
xchg
pop
ljmp
add
sbb
repnz
or
scas
lcall
imul
jns
insl
repnz
aad
and
xor
inc
je
sbb
push
jle
xor
fdivr
daa
ret
sub
add
aaa
nop
cmp
and
bound
or
cmp
sbb
outsl
or
imul
in
jg
push
mov
shrl
mov
push
xor
aaa
push
mov
hlt
clc
or
xchg
xchg
jmp
in
subl
es
dec
js
and
pushf
sub
mov
pusha
fcomi
mov
jno
xchg
dec
mov
arpl
dec
call
xlat
xor
jmp
xchg
mov
int
push
cmp
iret
mov
nop
ja
lds
movsl
mov
jp
jbe
push
loope
out
mov
daa
jp
mov
mov
imul
pop
inc
cs
xor
pop
push
sub
je
shl
imul
push
fistpll
test
xchg
je
jecxz
pop
daa
lret
pop
popa
jae
shlb
movsb
mov
adc
test
inc
sbb
out
add
cmovge
cmpsl
fildl
mov
and
lods
lret
xlat
xor
cmc
sub
pop
dec
icebp
xchg
push
mov
dec
ret
sbb
in
shl
xor
mov
addr16
xchg
cmp
ja
push
mov
dec
mov
outsb
jns
enter
xchg
jnp
sti
in
mov
mov
mov
lahf
cmp
into
push
jp
inc
and
inc
in
push
pop
mov
stc
iret
xor
pushf
fisttpl
cmpsb
add
imul
push
cli
add
shlb
pop
mov
xor
shrl
lds
sub
xchg
jmp
aam
xor
lock
and
push
bound
jns
movsb
mov
mov
imul
cmp
mov
or
mov
sbb
sahf
mov
pop
sbb
hlt
inc
jg
pop
popf
jnp
ret
lock
inc
mov
fwait
mov
mov
dec
pop
shll
mov
insb
stos
out
or
pop
sahf
out
pop
mov
aas
insb
arpl
jbe
decb
ficomps
mov
lcall
mov
imul
int3
xor
out
shlb
fisttpll
mov
out
lret
or
pop
out
lds
jb
cmp
pop
pop
inc
mov
push
shrl
adc
int3
inc
inc
fists
je
call
mov
in
push
cli
in
ret
cmp
cltd
mov
sbb
mov
lods
lods
lahf
xor
and
aas
mov
mov
test
dec
mov
xchg
inc
push
jno
add
pop
loope
push
cmpsl
je
lret
push
jae
out
xchg
mov
pop
pop
scas
add
and
repz
lcall
out
or
sbb
xor
dec
call
sbb
insb
aad
and
outsl
sub
xchg
mov
mov
add
adc
inc
mov
or
stos
cmp
xchg
mov
inc
imul
mov
add
sbb
mov
inc
push
mov
xchg
or
jge
dec
adc
movsl
jns
adc
and
loope
aas
sub
xor
push
test
mov
aam
fisubrs
int
movsl
fsubr
in
iret
push
cmp
jns
inc
loopne
mov
and
jecxz
push
cli
lea
push
mov
shr
xchg
ja
iret
sar
push
arpl
leave
movsb
out
cmp
je
sti
add
pop
adc
pop
mov
lds
lods
add
enter
loop
dec
push
or
iret
xchg
sub
mov
data16
outsl
sub
or
sbb
mov
negb
xor
lds
mov
or
es
pop
sbb
or
subl
ret
xchg
mov
scas
in
andl
sub
dec
inc
mov
out
fadds
pusha
jae
lea
ret
pop
ss
test
call
inc
cmp
test
push
inc
xchg
xchg
inc
lahf
dec
add
data16
jmp
dec
xchg
and
outsb
ja
ret
jbe
pop
mov
sti
mov
arpl
xor
xchg
cld
jb
aaa
cmpsl
in
in
mov
add
push
in
outsl
dec
cmc
sub
roll
outsb
pop
push
mov
or
or
mov
cwtl
or
dec
ljmp
mov
cmp
cmp
mov
inc
cmp
pop
ret
out
jmp
rorl
mov
inc
es
std
negl
inc
dec
and
rcll
cmp
mov
mov
inc
loope
std
pop
scas
mov
out
mov
test
clc
dec
sub
leave
pop
sahf
gs
and
pop
jb
test
in
mov
lods
xchg
dec
push
in
sub
mov
lahf
fcomp
pop
cs
or
jp
pushf
inc
out
jo
jae
ret
xchg
xchg
or
cs
pop
movsl
mov
jl
add
sahf
add
mov
xor
mov
pop
pop
mov
es
push
or
or
lahf
inc
fpatan
add
out
sub
pop
cmp
in
iret
jmp
push
enter
imul
mov
mov
sbb
and
stc
mov
pop
cmpb
cmc
xor
fsub
cmp
sub
icebp
push
adc
inc
pop
jnp
dec
push
loopne
in
fsubl
stc
sbb
js
push
mov
inc
inc
push
add
imul
les
mov
xor
pop
pop
push
lods
jns
inc
mov
xchg
mov
cmp
mull
or
in
std
aad
or
push
mov
adc
mov
imul
and
sbb
movsb
and
xchg
ret
shlb
inc
ret
cli
int3
xchg
sbb
stos
push
sarl
fmull
cmp
pop
push
dec
insl
jne
neg
lock
dec
cmpl
shrl
dec
out
xchg
mov
call
push
add
cmpsl
gs
shrb
movsl
xchg
lcall
cmp
dec
pop
mov
jp
cld
cld
push
sub
adc
mov
jae
sub
push
fimuls
into
vpinsrw
and
jb
js
pop
hlt
clc
inc
clc
notl
mov
and
push
jno
or
mov
fcmovu
subb
movsb
int
adc
push
sub
rorb
mov
gs
ficomps
xor
sbb
movsl
mov
inc
enter
cmp
xchg
aas
aam
aaa
jb
add
adc
in
push
fdivrl
xor
js
pop
sahf
sub
jecxz
add
out
or
dec
lods
jo
lea
jmp
mov
mov
cwtl
in
in
pop
pop
sbb
mov
xor
sub
fisttpll
mulb
pop
push
int3
fsubs
jecxz
insb
cmc
adc
mov
stos
dec
mov
push
ja
push
jge
lods
fistl
ret
sbb
inc
movsl
mov
push
mov
pusha
cmp
sbb
mov
les
mov
bound
adc
or
sbb
ds
dec
std
test
pop
sbb
in
cld
add
cmp
pop
dec
icebp
addb
push
out
sbb
ficoms
out
push
pop
mov
mov
imul
cli
cmp
inc
sub
xchg
pop
mov
repnz
and
or
movsb
mov
mov
adc
fistpll
inc
rcrl
jnp
fwait
jmp
sbb
mov
repz
outsb
scas
pop
push
fstp
int
pop
js
ret
inc
call
add
add
outsl
mov
add
cmpsb
rcl
or
xor
ror
mov
clc
and
hlt
pop
cmp
popf
and
sbb
add
into
or
pop
pop
sub
xchg
xchg
mov
dec
sbb
jecxz
and
int3
lea
xchg
jl
mov
cmp
inc
pop
int3
or
fstpl
sbb
adc
rcl
sti
cmp
iret
mov
lcall
or
dec
pop
icebp
mov
nop
adc
je
mov
jne
inc
out
sub
aas
repnz
mov
fld1
out
les
sub
cmp
push
aas
pop
fsubr
loope
repz
outsl
sbb
dec
mov
or
adc
test
ja
xchg
repz
rcr
cld
jmp
data16
lret
mov
xlat
sbb
sbb
jb
mov
lods
dec
cmp
ss
inc
xchg
xchg
xchg
jmp
loope
mov
push
ror
pop
pushf
xchg
jno
shrb
dec
lret
jecxz
push
mov
sub
jmp
add
scas
sarb
mov
loopne
imul
jmp
or
fwait
jecxz
aas
push
cmpsl
das
stos
mov
daa
stos
aad
insl
cmp
mov
stos
sbb
cmp
sub
out
and
loope
xlat
jmp
lahf
xlat
push
lds
adc
aad
xor
imul
inc
or
adc
pop
jae
add
mov
fildll
jmp
jl
cs
mov
fcoml
push
jmp
popf
xor
ljmp
out
out
in
adc
mov
and
fisubs
sarb
and
js
mov
rol
test
js
pop
jae
add
inc
xor
stos
jns
and
jmp
adc
jbe
out
jmp
add
or
mov
sbb
add
lcall
mov
andl
adc
outsl
sub
test
shrb
ds
inc
mov
fisubrl
mov
or
cmp
or
mov
xchg
dec
imull
dec
in
inc
in
addr16
mov
into
cltd
out
ds
add
inc
jl
push
lret
and
aad
movsl
push
int
adc
mov
push
and
xchg
outsl
mov
mov
sbb
stos
imul
pusha
das
mov
rorl
sbb
addr16
mov
ret
push
jb
arpl
enter
xchg
enter
std
call
loopne
push
and
rorb
enter
xor
jnp
sub
orl
push
aas
cli
in
cmp
mov
and
xor
add
and
adc
add
lock
pop
lods
ljmp
pop
in
or
ljmp
in
shrl
xchg
imul
sub
inc
aaa
push
lahf
shl
mov
xchg
pushf
iret
call
negl
pop
cmp
xor
xor
mov
pop
fsubp
sbb
inc
dec
inc
add
pop
sub
mov
fisttpl
mov
popf
scas
xor
and
jns
fisubrs
nop
cld
pop
xlat
sahf
lcall
call
push
loopne
test
imul
dec
scas
add
dec
stc
dec
cmp
jmp
pop
lods
in
das
pop
fidivrl
cli
fldt
ret
mov
fmuls
enter
xchg
imul
in
out
sub
and
xchg
outsb
sbb
add
rolb
and
imul
sbb
and
jecxz
dec
fsubrp
push
es
popf
pop
loop
or
push
insb
sti
ljmp
or
popa
into
xchg
hlt
lock
mov
gs
cli
or
ss
imul
pop
test
out
pop
filds
jle,pt
cs
push
xor
and
loopne
mov
mov
pushf
repnz
outsb
rol
push
xchg
adc
test
in
in
in
mov
fcomp
es
pop
cmp
or
das
push
dec
push
xor
cld
fistpl
sarb
inc
dec
lds
jecxz
mov
xor
fistps
xchg
iret
pushf
les
das
pushf
push
mov
cmp
jmp
push
ficoms
push
xchg
or
push
es
ficompl
mov
mov
dec
fsubs
dec
jecxz
jecxz
add
cltd
insl
adc
fs
stos
push
push
lea
inc
dec
decl
nop
dec
shlb
fbld
mov
adc
outsl
push
loop
jne
lea
push
mov
or
inc
mov
sub
adcb
dec
mov
repz
xchg
icebp
push
inc
arpl
jnp
and
in
xchg
pop
roll
imul
mov
cli
sub
xchg
repz
jl
sahf
adc
jne
pop
cltd
fsubrp
insb
adc
mov
inc
addr16
add
shl
xor
mov
add
sub
lcall
jl
fsubrs
xchg
lods
das
pop
pop
xchg
ja
fwait
lds
mov
icebp
dec
push
imul
lea
cmp
pop
cli
cs
in
iret
dec
scas
sbb
hlt
and
sub
xchg
and
ja
ljmp
add
test
aad
lahf
dec
cltd
adc
rcrl
pop
jo
xchg
sbb
imul
pop
aaa
mov
inc
addr16
pop
xchg
ljmp
je
shlb
shl
movsl
inc
jb
inc
ss
dec
es
mov
test
cld
cmpsl
scas
pop
data16
jne
xchg
jb
adc
push
pop
mov
sbb
dec
xchg
fidivrl
inc
adc
or
mov
cltd
stos
xor
jg
mov
and
sahf
and
xor
cs
bound
ljmp
mov
dec
imul
ret
sub
add
and
pushf
rorb
je
mov
fiadds
aas
leave
mov
aam
jo
dec
lret
les
ret
data16
sub
test
pushw
cmpl
mov
in
or
out
or
or
push
inc
nop
mov
add
fstps
pushf
adc
inc
sub
dec
mov
dec
leave
loope
rol
mov
repz
pop
sub
mov
outsb
adc
mov
test
adc
call
pop
sbb
roll
shl
cmp
cmpsl
test
mov
nop
icebp
xchg
iret
lock
dec
xchg
test
or
in
fcmovnbe
in
out
xchg
stos
nop
add
pop
xchg
xor
ja
push
sbb
icebp
adc
cmp
push
or
roll
movsb
pop
mov
xlat
xchg
xchg
cmpsl
or
jl
mov
or
adc
lods
pop
pop
dec
and
add
cs
or
pop
repz
in
orl
adc
mov
std
dec
lcall
mov
dec
iret
cltd
cmpb
sbb
lret
sub
rorw
negb
adc
sti
cmc
mov
sbb
xchg
mov
insl
incl
sub
movups
push
lcall
icebp
es
cmc
inc
jecxz
dec
push
jecxz
std
mov
push
adc
mov
sbb
mov
xlat
mov
loop
xchg
mov
sub
into
inc
hlt
mov
push
ljmp
fsts
xchg
inc
rol
or
subb
stos
jae
cmp
lds
and
xchg
dec
aad
cmp
das
and
fdivrl
sub
fidivrs
cmp
sbbl
or
test
dec
mov
adc
les
dec
xchg
mov
cld
sahf
jb
outsb
mov
inc
out
adc
andl
pushf
push
adc
test
add
sbb
pop
xor
ret
test
gs
cld
outsl
and
mov
xor
fnstcw
mov
movsb
sub
fidivrl
and
push
jl
arpl
in
add
cmp
mov
fstpl
mov
das
mov
test
cld
xchg
mov
fnsave
jns
insb
pusha
orl
scas
shll
cmp
arpl
mov
shl
jno
ss
or
mov
mov
mov
xchg
jl
cmc
in
or
mov
ret
lret
and
loopne
jle
pusha
es
sub
cmp
dec
cld
in
add
pop
out
int3
notl
or
cltd
mov
xchg
fs
or
pop
add
inc
outsb
mov
adc
stc
icebp
jno
and
jg
sub
mov
push
and
std
xor
jl
mov
leave
cmp
inc
pop
cmp
aas
ret
sbb
subl
pop
out
jnp
jmp
out
pop
lock
dec
ret
fnsave
lds
cli
pop
mov
mov
clc
inc
mov
inc
dec
mov
pop
mov
mov
push
mov
mov
inc
sub
cmp
imul
shll
fisubl
pop
mov
aam
jb
adc
sbb
jmp
sbb
push
cmc
test
xor
mov
push
nop
inc
arpl
add
dec
push
dec
inc
mov
jnp
outsb
aad
push
in
pop
int
xor
sbb
and
pop
xchg
into
orl
sub
fcompl
cmp
sbb
pop
mov
add
push
xchg
jne
pop
cmp
in
loope
icebp
xchg
pop
xchg
jp
lods
imul
outsb
sti
sahf
imul
or
sbb
jae
adc
cmc
sub
jg
pop
adc
adc
jp
cmp
in
cmp
jno
dec
enter
cwtl
mov
mov
fisttpll
pop
mov
fcoms
lret
sahf
mov
lods
out
repz
and
addr16
movsl
mov
inc
cld
enter
mov
mov
adc
xor
push
push
cmp
pop
xchg
ret
xchg
mov
cli
pushf
mov
pop
enter
jno
mov
mov
pop
jp
ficomps
sti
dec
loopne
insl
cmp
xchg
inc
pop
pop
cs
lret
add
into
stos
nop
inc
pusha
adc
pop
hlt
jbe
cmp
xchg
out
mov
icebp
fstl
push
mov
leave
leave
ja
loope
jnp
dec
cwtl
mov
rorb
add
in
add
lcall
jmp
fsts
push
push
push
xor
add
adc
cli
mov
daa
push
fistpl
mov
lds
cld
jmp
xlat
cmc
js
or
and
sub
xor
sbb
or
pop
adc
int
stc
mov
dec
cmp
outsb
lret
xlat
mov
fisttps
xlat
lcall
loopne
add
push
addr16
fbld
jmp
pop
insl
int
pop
mov
xchg
clc
outsl
icebp
push
cmpsb
movsb
lahf
das
jge
cld
ror
mov
icebp
jle
cmp
mov
or
cmp
fidivrl
push
pusha
and
cmp
aaa
mov
push
jae
scas
add
xorl
cmpsl
lods
inc
mov
xchg
xchg
cs
pop
stos
int
ficomps
xchg
cli
pop
push
mov
out
mov
int3
nop
not
loop
sbb
lret
add
negl
mov
pop
sbb
call
aad
in
or
decl
mov
outsb
rol
cmpsl
mov
stos
lea
push
push
inc
fwait
orb
lods
leave
mov
or
fwait
jp
and
or
and
aas
lret
outsb
xchg
sub
pop
mov
xchg
lret
push
adc
adc
mov
and
sub
orb
scas
pop
add
rol
arpl
je
enter
push
lret
jbe
sbb
cltd
dec
cmpsb
mov
ret
or
scas
cmp
mov
test
fsubr
and
push
mov
call
jp
popf
xor
sti
mov
lahf
mov
mov
jo
pop
inc
or
daa
fistps
iret
lock
jnp
fs
insl
dec
imull
shll
xchg
cmpsl
repnz
and
movb
iret
ljmp
adc
inc
xor
and
mov
cltd
rorl
fcoms
and
fdivl
jnp
mov
lahf
mov
int3
mov
mov
cmpsb
mov
jae
imul
das
xor
jmp
in
dec
fdivr
push
fistl
push
jb
xchg
test
ljmp
adc
mov
mov
pushf
dec
inc
xchg
jnp
mov
mov
aad
inc
or
adc
dec
xchg
mov
jo
jg
adc
test
inc
mov
or
or
cltd
mov
lcall
cli
xchg
mov
fistl
and
test
jmp
repz
stos
xchg
fadds
data16
xchg
push
xor
fcompl
inc
mov
mov
pop
push
divb
ficompl
ja
jg
cmp
xchg
sbb
fistpl
push
aaa
cmp
mov
pop
rclb
lcall
hlt
out
pop
or
add
xchg
xchg
or
xor
mov
mov
mov
and
and
cmp
jp
mov
sbb
jne
pop
pop
push
inc
int3
jle
jo,pt
inc
int
sbb
sbb
xor
jge
sbb
aad
sub
adc
in
add
aad
mov
sbb
add
mov
or
or
xchg
inc
jmp
lahf
nop
jns
lret
fucom
mov
cmp
push
lods
stos
dec
js
cmp
fsubrs
rol
mov
jge
orb
mov
arpl
adc
cs
or
add
or
pop
outsb
cs
push
jp
pop
adc
test
decl
rcrl
mov
rorl
jle
fsubrs
setle
jp
xor
out
subl
ror
into
fwait
gs
sub
adc
lcall
repnz
out
sarl
push
and
push
xchg
call
adc
dec
mov
lock
ret
cmpsb
xchg
adc
lret
mov
sub
hlt
cltd
cs
iret
int3
lahf
rclb
ret
rorb
incl
add
movsb
test
shll
loopne
shlb
outsb
mov
scas
dec
lret
sub
out
out
mov
sar
and
jmp
inc
lahf
test
pop
movsl
test
scas
mov
out
repnz
and
loopne
pop
sbb
add
cmpsl
insb
movsl
mov
sbb
mov
mov
cmc
lret
push
fstl
jmp
xor
and
jg
sar
aam
cmpsl
idivl
jnp
adc
and
call
ss
int
shl
push
inc
popa
cltd
push
dec
inc
dec
das
cmpsl
addb
push
fwait
mov
adc
std
lret
push
adc
jg
sti
insl
subb
inc
mov
icebp
sub
nop
loop
loop
adc
test
test
pop
cmp
push
xchg
xchg
imul
into
pop
mov
sbb
es
popf
jae
lret
clc
xor
clc
lea
repz
push
ja
shl
test
lods
pop
xchg
mov
insb
adc
jmp
sbb
shrb
call
add
lahf
add
call
fmuls
imul
out
lds
jns
jbe
mov
xchg
test
pushf
cmp
ja
cmp
push
test
inc
outsb
outsb
loopne
in
jbe
or
ret
or
inc
lods
pop
xchg
outsb
adc
int3
jo
cmpsl
rcrl
jb
jmp
mov
addl
mov
sahf
shll
cmp
xlat
jb
stos
mov
lods
lods
sahf
outsl
mov
jno
out
int
jns
loop
mov
xchg
cmpsl
push
pop
jmp
fdivr
rolb
nop
jno
outsl
adc
xor
sub
iret
fwait
leave
xchg
add
push
idiv
inc
push
sub
fildll
je
xchg
roll
repz
xor
orb
jge
mov
arpl
and
rorl
pop
push
pop
jge
cmc
adc
inc
xchg
aas
imul
xor
repnz
add
dec
and
mov
adc
mov
fdiv
push
mov
mov
lret
sbb
push
int3
outsl
or
loope
inc
ja
adc
inc
or
cli
xchg
xor
js
pop
std
scas
mov
nop
hlt
sub
scas
adc
push
fcoml
lds
imul
mov
jmp
jge
pop
push
popf
call
fiadds
cmp
int
lahf
inc
and
inc
add
data16
add
push
aas
aaa
or
mov
cmp
mov
inc
cmp
sbb
push
mov
adc
xchg
jns
jmp
out
call
jo
jo
jb
adc
pop
push
js
jecxz
cmp
nop
sbb
shr
or
jecxz
push
add
les
mov
mov
pushf
out
test
leave
faddl
push
xchg
nop
movsl
mov
aam
loop
bound
lock
sub
pushf
fldcw
in
popa
out
mov
mov
sbb
ret
js
or
jecxz
inc
add
cs
js
push
lds
je
cmc
enter
imul
aam
stc
repz
mov
lcall
test
mov
scas
mov
mov
ljmp
fisubrl
out
sbb
cmp
add
stc
dec
addr16
jecxz
and
test
js
dec
mov
xchg
movsl
pop
pop
fcomps
inc
fabs
pop
or
call
int
cli
je
icebp
push
sti
fsts
hlt
xor
repnz
fistl
inc
mov
in
jg
fldcw
xchg
das
xchg
cli
mov
xor
dec
repnz
in
dec
pop
in
ja
mov
cli
testb
mov
iret
into
and
inc
jecxz
mov
mov
andb
push
pop
push
outsl
cs
and
mov
xchg
fwait
test
stc
jecxz
xchg
ret
cltd
pop
ds
insl
or
out
cwtl
mov
ss
sub
cmp
sub
bound
loope
pop
xchg
lret
loop
rcll
ficoms
icebp
test
xor
loopne
sti
movsb
pop
sbb
inc
jne
repz
shll
cmpl
mov
cmpsb
pop
lods
mov
cli
mov
xlat
push
add
mov
in
xor
xor
shll
jg
push
mov
and
loope
xchg
pop
inc
adc
mov
inc
movsb
in
fsts
aam
jmp
xchg
lock
subl
aaa
xchg
jns
xchg
push
push
aad
lds
pop
pop
ret
mov
inc
lret
sarb
or
dec
dec
mov
lret
test
fwait
hlt
mov
mov
rol
outsb
cmp
insw
xor
movsl
lret
mov
push
dec
imul
and
pop
test
pusha
dec
jl
cs
test
iret
add
push
lret
cmovno
mov
or
xlat
xor
push
lds
push
add
gs
leave
roll
pop
pushf
jge
sub
mov
mov
cmp
je
push
or
dec
pop
das
and
ret
jmp
and
insb
inc
fucomi
fcmovb
ss
popf
subl
fstl
imul
pop
scas
adc
aad
mov
in
adc
shl
sbb
push
sub
movsl
mov
imul
push
jmp
dec
daa
aam
push
test
xorb
aas
and
stos
jmp
lods
pop
push
mov
sbb
popf
or
mov
movsb
mov
push
add
lret
pop
mov
ss
and
pop
cs
xor
arpl
inc
inc
les
xorl
in
loop
xchg
std
fs
sub
mov
jmp
je
ss
lods
and
arpl
cmpsl
sub
lods
jbe
xor
sub
pushf
pop
mov
xor
nop
adc
sub
adc
sbb
lods
in
jge
leave
arpl
fiaddl
clc
jecxz
mov
mov
ficoml
jmp
outsb
pop
lock
out
pushf
popa
imul
or
in
loop
sbb
pusha
hlt
gs
cltd
dec
xchg
es
mov
jnp
sbb
cli
pop
jg
inc
gs
push
jge
sub
xlat
mov
cvtdq2ps
roll
adc
add
pop
and
add
inc
imul
outsl
int3
push
mov
xchg
push
popf
out
add
mov
inc
ljmp
aas
cld
lcall
dec
inc
fdivrs
nop
pusha
xor
mov
add
jmp
popa
in
in
mov
sbb
in
jae
jb
popf
lods
das
or
sbb
cmc
bound
xchg
leave
mov
cs
je
fidivrl
loopne
xor
mov
mov
inc
push
add
ljmp
iret
cmpb
add
gs
imul
movsb
sub
daa
int3
inc
addr16
call
cmp
setns
jne
sbb
mov
or
push
xchg
mov
ret
aaa
mov
dec
pusha
hlt
fwait
addr16
lea
sbb
jo
jns
test
pop
pushf
cld
lock
cmp
leave
lea
push
sbb
xlat
sub
and
mov
lods
sahf
roll
into
inc
and
fistpll
dec
add
leave
and
mov
pmuludq
fistpll
js
fildll
xorb
sysexit
fimuls
dec
inc
or
dec
gs
adc
stos
jg
or
pop
mov
jbe
xor
ror
xchg
cmp
js
push
in
out
add
mov
stc
sbb
xor
mov
or
sbb
aaa
sti
add
adc
pop
adc
mov
movsb
jns
test
xor
pushf
push
pop
cs
push
loope
mov
jns
add
inc
mov
cmp
lret
clc
cwtl
clc
mov
in
hlt
xor
push
jno
mov
sub
mov
fcmovbe
aam
shrl
xchg
loopne
out
dec
xchg
xor
or
popa
in
push
pop
dec
sub
ret
out
lds
xchg
xchg
mov
lret
push
inc
adc
out
cld
cltd
xchg
lds
mov
cli
inc
push
in
loop
in
jns
and
or
jo
pop
pop
add
incl
inc
scas
or
shll
arpl
or
imul
ljmp
test
imul
imul
addr16
scas
inc
xor
xchg
sbb
popf
mov
mov
jecxz
mov
into
jmp
adcl
xor
or
mov
or
andb
adc
cli
jno
fisubs
mov
jmp
inc
out
jne
pop
cmp
ret
ss
mov
nop
roll
and
cmpsl
sti
aam
ljmp
int3
or
subl
test
xor
sbb
lock
cmp
andl
les
out
in
repz
pop
push
inc
nop
adc
sbb
dec
imul
rcrb
ret
data16
cmp
xchg
mov
jbe
out
cld
xchg
clc
pop
and
fstpl
mov
rorl
pop
ret
inc
push
out
mov
lahf
lods
mov
das
lret
cmp
mov
fisubl
fisttpl
mov
xlat
leave
stos
and
ljmp
out
clc
mov
or
ljmp
and
sbb
rol
ret
mov
rclb
sbb
js
sub
xchg
pop
roll
fcomp
push
add
leave
int3
in
push
dec
fwait
cmc
movsl
iret
fnsave
mov
jge
or
inc
push
jp
xchg
ss
or
push
hlt
sar
cltd
jl
mov
pop
mov
jmp
bound
lret
push
mov
dec
aad
out
mov
fcmovu
imul
sti
out
iret
out
fldt
cld
add
dec
mov
cwtl
push
cmp
sub
stos
fistpll
xchg
mov
push
and
ret
shll
in
sub
adc
jns
jp
add
push
mov
in
pop
jg
daa
test
cmpsl
pusha
adc
sub
and
push
rcrl
inc
leave
shlb
xchg
add
inc
mov
insl
or
loopne
push
inc
lds
fstpt
jle
cmp
sahf
test
fneni(8087
mov
cmpsb
lods
and
pop
popl
sub
push
mov
cmp
ret
jmp
sbb
sti
mov
mov
and
xchg
jb
repnz
testb
mov
pop
movb
sbb
cmp
loope
push
popf
mov
mov
inc
and
enter
bound
mov
out
ja
mov
sub
fadd
mov
aam
roll
jae
mov
push
roll
lods
fwait
xchg
test
lcall
pop
fs
js
jbe
mov
or
mov
pop
stc
scas
rcr
inc
pop
mov
cmp
xchg
test
outsl
lods
out
add
out
call
jp
mov
adcl
xrelease
cmp
jns
shlb
add
insb
add
fimuls
jmp
inc
mov
test
sbb
aam
jmp
fcmovnb
fcoms
jns
mov
lock
shll
imul
mov
daa
xchg
arpl
insl
out
pop
push
subl
pop
insb
lock
fildll
in
push
imul
sbb
cmc
inc
sub
push
in
push
jb
jae
xchg
cmp
inc
push
iret
xchg
mov
jb
push
mov
lcall
jp
mov
add
inc
fmuls
dec
sub
add
pushf
adc
sub
mov
xchg
ss
clc
je
cmp
sub
and
mov
repz
sti
std
cmp
mov
cmp
jo
xchg
mov
stos
adc
pushf
fstpt
mov
mov
in
popa
jne
sarl
or
std
movsl
sub
mov
pop
stc
mov
std
subb
push
stos
fimuls
xchg
gs
jmp
arpl
int3
shrl
xor
xorb
cmp
lock
addl
xor
rcr
dec
pop
lea
imul
xor
pushl
jmp
mov
and
mov
je
gs
in
inc
cld
cld
inc
add
pusha
sbb
mov
or
repnz
les
cmp
inc
cmpsb
les
into
jae
dec
outsl
xchg
cmpsb
test
ret
mov
add
sbb
push
loope
repnz
sbb
sub
leave
or
lret
test
cmp
push
fcmovnbe
scas
std
or
push
movsb
scas
cmp
js
jmp
popa
test
mov
sub
in
inc
stos
mov
cmpsl
dec
mov
pop
inc
sti
bound
cmpl
ja
imul
pop
in
push
into
sub
sbb
sti
insb
pop
mov
addr16
cmc
pop
in
adc
sub
xchg
rcl
shlb
inc
pop
test
es
xor
ljmp
pop
inc
lcall
subb
out
popa
lock
or
xchg
cmp
inc
jae
mov
jno
dec
xor
dec
shr
scas
loop
cmp
xchg
shll
fucomp
into
pop
and
cli
jp
jle
daa
xchg
xor
daa
add
adc
adc
sarl
or
sub
pop
fisttps
imul
jg
inc
pop
shlb
lret
jecxz
aas
shrd
jge
add
cltd
gs
add
out
jmp
and
loopne
cmp
out
insl
into
dec
ret
adc
push
jle
and
or
lcall
scas
popf
into
push
sbb
xor
or
jp
sar
jns
jae
mov
xor
stos
outsb
cmp
push
lds
stos
mov
xchg
addr16
movsl
pop
rcrl
mov
cltd
inc
lds
push
sub
popf
stc
mov
push
scas
cmpsb
enter
jg
xchg
addr16
dec
jg
fwait
dec
jnp
int3
add
outsb
test
mov
xchg
lods
jnp
adc
inc
xchg
jbe
and
mov
add
mov
call
out
pusha
push
cmpsl
jle
or
jge
fnsave
xchg
call
ret
insb
mov
pop
add
or
aas
stc
jns
and
rclb
and
push
test
pop
rolb
out
jbe
xchg
ljmp
add
imul
ds
test
dec
mov
adc
fisttpll
cmc
fdivrs
add
int3
xchg
sbb
loopne
inc
dec
movsl
mov
dec
fadds
pop
mov
stos
fcompl
cltd
out
pop
je
ss
idiv
sub
mov
sub
pushl
sti
cltd
test
adc
addb
int
xchg
pop
dec
in
or
jno
insb
dec
dec
in
and
in
mov
sub
fwait
adc
ss
add
sub
int3
xchg
xor
jne
inc
pop
movsl
cld
pop
xor
enter
push
push
cmc
xor
xchg
cwtl
jp
gs
cld
test
push
inc
push
mov
cmp
rcrb
adcb
pop
dec
mov
cwtl
push
mov
mov
adc
aam
rorl
aas
push
mov
insl
mov
push
and
dec
ror
cs
mov
sbb
out
mov
iret
lahf
inc
sub
xchg
lea
jl
jg
or
scas
mov
fstl
and
sbb
push
and
xor
sbb
pop
push
pop
mov
pop
sbb
cmp
or
std
out
lcall
mov
cli
sub
mov
push
in
bound
xor
stos
outsb
dec
adcb
loopne
shll
outsl
into
pop
fsubrp
bound
or
adcl
sbb
sub
test
xchg
xlat
rcrb
ror
cli
jg
repnz
enter
push
sbbl
out
xchg
jecxz
mov
xchg
or
aam
add
adc
mov
scas
mov
xchg
inc
call
mov
test
pop
movsl
shlb
mov
xchg
inc
pop
sbb
cld
lods
repnz
ss
sub
sbb
icebp
or
mov
and
lods
pop
les
out
dec
dec
lea
lods
rcrb
in
add
cmp
je
testl
jecxz
or
xchg
cmp
sbb
scas
push
xchg
sar
in
jns
cmpl
add
xchg
icebp
and
adc
mov
jb
js
jb
arpl
push
mov
dec
imull
lahf
mov
add
lods
sub
aam
shr
test
out
fwait
push
sub
into
push
lods
es
mov
popw
out
push
mov
cmp
sub
je
shll
lcall
sbb
add
dec
nop
cmp
mov
out
xchg
inc
ljmp
pusha
jle
and
jns
fdivp
sbb
dec
popa
pop
fs
lods
add
mov
aad
enter
xor
mov
mov
add
sub
repnz
in
pop
std
daa
mov
xor
ljmp
lods
inc
push
xchg
cmc
inc
jle
lods
int
lods
enter
sbb
sbb
imul
xchg
mov
push
push
pop
data16
movsb
sub
js
jnp
pop
imul
inc
int3
pop
cmc
stos
ret
es
cmp
shlb
loope
dec
mov
out
jae
jae
nop
and
repnz
and
rolb
lcall
jle
jp
scas
push
dec
sti
leave
stos
gs
push
cmp
pop
lea
cld
mov
stos
iret
test
inc
aad
loope
pusha
mov
pushf
ret
cmp
or
rorb
mov
call
mov
int
xor
sbb
leave
xlat
cmpsb
or
outsb
push
push
and
imul
mov
fwait
push
adc
adc
cmp
inc
clc
mov
ret
or
mov
and
jl
dec
add
imul
inc
sahf
dec
xchg
push
aas
sarl
in
pop
orb
mov
mov
in
outsl
push
push
or
jg
jge
cmc
icebp
push
enter
nop
mov
push
push
sbb
push
dec
adc
sbb
outsl
pop
test
pop
push
pop
push
or
cmp
sbb
and
mov
outsl
pop
jmp
ja
dec
mov
cmc
std
inc
cmp
dec
testb
sarb
imul
xchg
enter
adc
or
push
inc
fldcw
loopne
pop
lock
or
or
cmpsl
xor
imull
gs
aad
popa
shlb
fcomps
pop
mov
cmp
adc
sub
jno
cltd
fistps
cmp
imul
xchg
jl
pusha
int3
push
adc
and
mov
mov
push
and
mov
scas
push
test
shll
cmc
jl
cmp
sar
arpl
xchg
rcrl
es
jg
insl
mov
mov
fnsave
cli
into
adc
adc
cmp
fsts
repz
jecxz
out
scas
xchg
out
popa
mov
xor
lret
xchg
cmc
jle
dec
dec
imul
cwtl
cmp
repnz
ret
pusha
leave
loope
lret
adc
or
mov
movsl
add
test
jnp
lcall
fisubl
inc
or
imul
mov
scas
aad
lods
in
pop
aad
sbb
xchg
lods
sbbb
stc
and
or
inc
xor
sbb
je
jle
mov
movsb
lahf
frstor
mov
and
insb
push
pop
xchg
pop
jl
les
fdivr
or
test
scas
rcll
xchg
xchg
out
jl
imul
dec
or
jmp
movsb
mov
sub
adc
lcall
cmp
loopne
cmp
adc
imull
sub
leave
fsubs
dec
mov
push
mov
push
test
ret
cltd
in
mov
sbb
xor
hlt
mov
adc
imul
data16
std
mov
and
push
and
cwtl
popf
adc
in
mov
xchg
dec
mov
push
sbb
add
add
int
dec
lock
sub
or
push
mov
rorl
das
push
movsl
mov
mov
insl
mov
dec
fnstsw
push
sbb
lds
add
icebp
shll
dec
nop
loop
mov
push
push
dec
and
cld
jge
pop
mov
in
mov
xorl
adc
fwait
cltd
dec
sub
jno
xor
ja
out
popf
inc
pop
inc
scas
js
repnz
mov
jl
cmp
mov
nop
or
scas
xchg
cmp
push
push
push
and
jno
testl
dec
in
iret
xor
mov
xor
mov
sbb
je
pop
dec
ret
mov
sbb
inc
repz
pop
popa
cld
add
in
sti
test
adc
mov
loope
cld
mov
add
add
cmpsb
out
lea
adc
adc
lock
outsl
lods
add
push
mov
int
xor
fstl
into
sbb
in
mul
js
stos
xor
mov
jb
daa
mov
xor
add
push
enter
xchg
icebp
pop
js
mov
mov
loop
loop
lds
addl
mov
mov
dec
mov
push
cmp
add
xchg
pop
and
cli
scas
push
pop
loop
bnd
mov
idivl
sahf
mov
mov
xchg
fnstcw
addr16
xor
fstl
inc
cld
fcmovne
lds
cltd
push
sbb
fwait
test
outsl
aas
xchg
in
mov
aam
repnz
repz
repnz
fwait
mov
loope
jo
insl
test
xchg
std
dec
inc
cwtl
out
mov
out
insb
sub
cli
in
push
mov
push
dec
add
cmp
or
or
pop
sub
xor
push
sub
stos
adc
or
je
sub
sbb
mov
ljmp
inc
mov
enter
cmp
push
inc
lret
adc
or
jns
xchg
pop
jb
cmpsl
fsubrs
inc
imul
mov
mov
pusha
dec
pop
jmp
xlat
leave
cmpsl
push
cwtl
sbb
fcompl
stc
add
push
ja
lea
stos
pop
xchg
jo
add
jno
adc
mov
pop
adc
mov
gs
push
or
xchg
and
sbb
fistpll
psubusw
cltd
inc
mov
sbb
inc
mov
fdiv
ljmp
fs
xchg
jb
out
test
adc
movhps
cltd
shll
testb
jl
int
and
jmp
popf
xchg
mov
pop
and
pop
jo
pop
into
xchg
aam
sbb
dec
inc
or
addr16
pop
bound
scas
test
call
cmp
push
dec
sahf
idivb
out
stos
jmp
cli
out
mov
inc
fwait
inc
loope
in
inc
sub
sbb
fsubrp
dec
add
pop
add
inc
jle
xchg
xor
or
pop
xlat
jg
cmp
xor
aam
lock
mov
enter
fmul
sbb
sbbl
xor
add
jns
outsb
push
push
mov
repnz
lea
movsl
xchg
sub
gs
dec
dec
xchg
mov
pop
or
aaa
in
sbb
jl
aad
mov
cs
in
inc
xchg
cmp
insb
cmp
xchg
mov
jge
in
mov
loopne
stos
push
stc
xor
adc
pushf
sbb
popa
cmp
adc
lea
fldl
sbb
stos
xchg
rep
xor
xorb
pushf
push
jmp
lea
add
out
mov
stos
jb
leave
mov
in
adc
shll
nop
daa
ss
js
or
imul
lahf
mov
in
or
inc
dec
repnz
ret
ds
repnz
mov
xchg
jge
rorb
inc
dec
cltd
out
rolw
loop
jg
lret
dec
adc
cwtl
push
jbe
lret
call
jne
jb
cltd
cmp
in
sbb
icebp
xchg
fs
frstor
cmp
mov
xlat
insb
sahf
into
loopne
jl
mov
sbb
stc
push
sub
iret
and
push
sbb
andb
pop
mov
scas
inc
fildll
test
cmp
mov
adc
mov
mov
sbb
popa
dec
pop
mov
inc
mov
push
in
pop
data16
imul
int
lret
pushf
insb
xchg
in
popa
pop
insb
mov
cmpb
adc
repnz
xchg
shll
outsb
or
add
lahf
jp
lahf
add
int3
sti
sbb
inc
push
sti
cmp
loop
pop
inc
sub
dec
add
rcrb
push
mov
sbb
ret
adc
lcall
mov
and
in
xor
xchg
cld
or
andl
pop
sahf
cmpsb
and
sbb
je
fnsave
or
aas
dec
scas
insl
add
test
shrb
or
sub
mov
test
enter
dec
mov
jg
mov
dec
and
and
clc
mov
adc
lret
mov
pop
jmp
shl
mov
out
fsubr
mov
scas
cmp
adc
sbb
mov
push
sbbb
insb
adc
xor
jnp
adcb
iret
cmp
sbb
shll
insl
sbb
push
mov
int3
mov
pop
ljmp
jl
int
lods
jb
sub
mov
int
mov
fbld
pop
mov
pushf
pop
mov
out
push
in
jbe
out
jo
lahf
push
xchg
out
push
add
out
aad
testl
mov
add
and
dec
pop
xchg
inc
cmp
fsubl
cli
cmpsb
outsl
gs
notl
std
cmp
jle
xor
push
mov
dec
inc
mov
mov
loop
add
clc
call
mov
leave
cmc
lret
mov
sbb
loope
out
enter
mov
imul
leave
cmp
xor
fldcw
xchg
jno
ljmp
dec
dec
mov
jbe
rolb
std
outsb
cmp
sbb
jg
sahf
clc
imul
inc
xchg
lods
jno
mov
jl
inc
mov
roll
je
in
fcom
sbb
in
xor
dec
mov
adcl
lds
push
movsb
fistpl
ret
sub
push
adc
daa
sub
jbe
mov
jg
or
outsl
jge
out
push
int3
mov
push
cmp
daa
sbb
test
cmp
stos
xchg
sarb
push
sub
jo
push
cld
xchg
and
in
dec
loop
mov
inc
stc
sub
scas
cmp
mov
add
insl
dec
mov
sub
les
push
in
jge
inc
lret
cmp
adc
adc
cwtl
mov
dec
notb
sbb
mov
ret
adc
mov
aad
pop
pop
cli
sub
fcoml
add
mov
mov
add
jl
adc
adc
xchg
and
and
jne
push
pusha
aaa
xlat
stc
loop
fcmovne
jne
aas
int3
xchg
inc
inc
arpl
cmp
cli
push
add
push
and
icebp
movsl
xchg
je
and
outsb
in
and
dec
cmpsb
and
arpl
and
test
jg
inc
push
addr16
cmc
pop
xor
in
insb
adc
pop
jle
call
xchg
cli
and
mov
ja
aad
push
sarb
hlt
add
sub
xchg
cli
fdivrs
cltd
or
loop
dec
mov
mov
lcall
add
and
pop
xchg
arpl
pop
adc
ljmp
setle
ret
dec
lret
jb
fstpl
or
push
stos
aas
fldenv
sti
loop
sbb
cmovb
dec
testl
add
xchg
push
sahf
xchg
and
hlt
and
lret
inc
jp
andb
add
xchg
cmc
fcom
xchg
fstpl
xor
cwtl
in
cmp
test
aam
inc
aad
dec
mov
inc
js
imul
iret
mov
mov
mov
xor
stos
mov
or
outsb
rcl
test
mov
fwait
dec
mov
lahf
mov
adc
imul
xor
cmp
sbb
push
or
mov
jecxz
add
dec
cmp
and
add
pushf
bound
sbb
mov
into
filds
lahf
inc
les
jmp
jo
xchg
mov
cmp
sbb
add
rcrb
out
mov
push
inc
data16
xchg
fisubs
out
in
call
dec
aas
cmp
imul
jecxz
ds
xor
shlb
add
or
sub
outsl
leave
and
push
mov
addr16
xchg
sarl
jbe
jle
or
outsl
clc
in
lcall
lock
jmp
push
sub
and
int
push
or
push
or
adc
lods
jne
scas
cmpsl
pop
pusha
jo
sbbb
pop
cmpsb
fsub
test
add
neg
or
mov
adc
aam
mov
mov
out
mov
lea
inc
inc
sub
pushf
pop
xchg
cmp
lea
mov
aas
in
fildl
lock
dec
mov
mov
inc
scas
enter
push
stc
mov
shll
lret
scas
pop
cmp
dec
jns
push
mov
or
fsubrl
jmp
xchg
je
shrb
fistpll
pop
jbe
sbb
scas
lret
xor
pop
mov
cmp
pop
push
and
pop
xchg
pop
in
mov
cs
jg
mov
pop
test
scas
outsl
ja
xchg
fimull
xor
jae
xor
xchg
dec
test
in
xchg
mov
iret
jne
add
faddl
and
and
pop
xor
decl
jb
mov
add
in
in
dec
and
dec
and
loope
push
hlt
mov
push
clc
cld
fimuls
pop
aad
dec
push
and
in
jno
ret
fsubrl
cmp
adc
pop
leave
test
jmp
mov
jl
fst
xor
lods
out
jl
fstl
orl
fdivrp
fdivs
add
pop
dec
or
lock
adc
fmull
arpl
mov
pop
bound
and
bound
jnp
lock
test
jnp
xchg
test
mov
popf
mov
sub
lahf
jo
pushf
jl
insl
adc
scas
xorb
mov
std
lds
xchg
imul
cmp
jge
ja
dec
test
jmp
mov
scas
stos
test
insl
in
xchg
js
xchg
mov
pop
and
test
fs
xchg
rclb
mov
xchg
inc
xor
pop
dec
lcall
add
and
aas
data16
mov
dec
jmp
rorl
mov
fistpl
je
sub
jnp
sarb
add
pop
mov
mov
mov
jp
fs
imul
sub
add
or
pusha
mov
inc
sbb
jmp
repnz
xchg
cltd
xchg
mov
xchg
sub
mov
xchg
lahf
psadbw
adc
leave
mov
inc
pusha
sub
push
cmp
adc
dec
into
fwait
test
jo
sub
xchg
or
test
hlt
cld
lea
pusha
popf
inc
pop
out
xchg
popa
or
mov
std
decl
jnp
or
subb
push
test
sbbl
inc
pop
cs
adc
mov
xor
ret
jns
cs
cld
inc
cmp
mov
pop
sahf
mov
and
testl
pop
jbe
add
aas
sbb
gs
adc
and
mov
lea
push
dec
xor
inc
push
aaa
sbb
arpl
pop
jmp
xchg
mov
mov
push
mov
lods
inc
enter
inc
scas
mov
popf
insb
repz
cmp
or
xor
int3
pop
push
add
jl
mov
das
insl
js
pop
xlat
into
daa
mov
cmp
les
cli
jae
int
fisubrs
aas
iret
mov
inc
icebp
mov
sbb
filds
out
or
adc
subl
sub
mov
xor
sub
xchg
xchg
je
cli
std
je
test
in
ficoml
inc
mov
jmp
test
inc
pop
sahf
lret
xchg
mov
adc
jmp
or
push
dec
js
ljmp
push
rcrl
jne
fldl2t
in
push
stos
xor
adc
negb
cli
pop
push
sub
fistpl
icebp
and
xor
out
inc
inc
sbb
xor
ror
sub
inc
lods
hlt
cmp
jmp
xchg
ret
dec
sti
inc
shll
sbb
fdiv
adc
xchg
cld
dec
push
test
pop
fs
in
or
mov
adcb
lods
dec
pop
jbe
cmpsb
stos
cmp
sbbl
shrl
jmp
cmp
addr16
sahf
rolb
pop
sub
xchg
jp
jecxz
mov
imul
push
ljmp
popa
rcr
pop
sbb
insl
push
pop
cmp
in
sub
push
inc
xchg
mov
movsb
sub
clc
cld
insb
rcl
pusha
cwtl
or
mov
xchg
std
xchg
ljmp
fisubrs
icebp
iret
inc
dec
les
shlb
iret
sbb
in
jmp
shl
adcb
mov
scas
shlb
sti
ret
inc
mov
mov
mov
dec
fsubrs
and
ret
ret
fsubr
mov
sub
imul
xchg
dec
xchg
into
adc
xchg
jg
lahf
sub
cmpsl
and
ljmp
out
movsl
dec
inc
in
lcall
out
mov
imul
in
jnp
es
dec
cmp
push
roll
loopne
jb
enter
jnp
add
or
adc
test
pop
fildl
js
mov
adc
jp
mov
das
sub
repz
push
adc
push
mov
xor
loopne
lret
rclb
sbb
dec
imul
jns
push
bnd
test
mov
mov
pop
es
jmp
fs
out
ja
test
les
sub
and
inc
outsb
mov
xchg
sub
dec
mov
mov
mov
add
mov
lods
lret
cld
mov
bound
imul
jne
movsb
xor
cmp
push
add
xor
repnz
stos
fstpt
jp
cmp
fwait
mov
xchg
mov
cli
movl
pop
add
ror
inc
pop
je
mov
mul
add
sti
hlt
xor
jo
mov
popl
push
int3
xchg
add
sbb
mov
mov
aas
movsb
adc
jl
mov
insl
outsl
data16
shll
inc
out
stos
cmp
sbb
movsb
add
or
into
ds
popf
pop
xor
xchg
imul
aaa
movsl
jns
test
adc
fsub
repz
aaa
popf
jb
int3
shlb
mov
xchg
adc
pop
sub
pop
inc
cltd
add
subl
cmp
fsubrs
test
out
jge
pop
sahf
rorb
sbb
loop
mov
mov
insl
xchg
fiadds
dec
jmp
dec
pop
sahf
jns
push
hlt
aad
imulb
jle
cli
sahf
rcl
fbld
les
call
movl
and
lcall
call
dec
adc
ret
cwtl
mov
aaa
sub
stos
stc
in
adc
pop
mov
push
jp
add
jl
inc
je
inc
fcmovnb
ds
dec
imul
jnp
outsl
mov
fwait
mov
sub
pop
xorb
pop
mov
cs
stos
mov
pop
clc
adc
mov
or
adc
enter
cltd
sub
add
popf
adc
jecxz
lahf
mov
scas
insl
shll
fldl
sbb
mov
push
push
sub
cmpsb
out
sbb
xchg
xor
add
mulb
bnd
dec
and
mov
and
jg
imul
and
movsb
mov
lock
notb
mov
int
imul
lahf
gs
sbb
ret
popa
rol
imul
and
cld
les
stos
mov
adc
dec
out
idivl
popf
scas
into
inc
xor
rolb
pop
jge
lds
pusha
inc
out
ret
sbb
or
jne
movsb
cmp
repz
pop
div
xor
xor
divb
xchg
cltd
jae
dec
lock
leave
stos
mov
push
out
mov
xchg
xorl
sub
pop
push
and
mov
push
jge
sti
push
scas
nop
and
jo
fldenv
icebp
mov
nop
iret
xchg
sub
cltd
jmp
pop
test
mov
stc
data16
loop
xor
popa
into
or
nop
ds
scas
jg
and
xchg
pushf
push
lds
jmp
sub
test
sbb
rolb
pop
stos
sub
jae
xlat
movsb
les
mov
out
inc
enter
xchg
mov
lret
test
sub
pop
mov
mov
xor
into
icebp
or
inc
scas
pop
inc
dec
jl
xor
and
jne
icebp
lea
rolb
adc
cmp
cmc
vcvttpd2dq
inc
hlt
sub
add
leave
popa
pop
adc
xor
cmp
adc
imul
ja
xchg
lret
jg
push
out
lret
adc
mov
mov
pop
mov
jbe
ret
mov
dec
or
stc
scas
into
cwtl
sub
or
jg
loop
fstpt
jbe
mov
movsl
gs
addr16
and
movb
mov
repnz
add
popa
in
xchg
mov
xor
stc
xchg
adc
loope
es
stos
dec
inc
loopne
pusha
cld
out
adc
push
aam
lcall
inc
cli
mov
dec
adc
push
imul
in
pop
mov
xchg
and
inc
push
cwtl
aaa
arpl
je
lret
es
cltd
repnz
push
push
call
sahf
and
sub
jge
xchg
or
nop
testl
mov
nop
loope
mov
push
popa
adc
xchg
xor
add
push
jle
mov
addr16
pop
fwait
push
imul
or
call
popa
xor
push
mov
pushf
add
clc
int
xchg
mov
daa
sti
scas
nop
jecxz
mov
das
out
iret
mov
push
lea
testl
mov
ljmp
sbb
push
push
cs
inc
add
imul
sbb
in
movsb
addr16
and
fnstcw
lret
lods
jmp
push
lcall
fwait
dec
vprotd
pop
sbb
mov
adcb
pop
lret
inc
sahf
negb
out
adc
ja
std
pop
mov
outsb
ror
adc
pop
outsl
push
mov
mov
push
add
loope
pop
int3
sub
jno
and
mov
gs
inc
push
test
mov
imul
dec
ficoml
cmp
repz
arpl
ror
sub
mov
inc
sub
je
out
sbb
js
inc
f2xm1
fidivs
pop
jmp
jge
shll
aaa
lcall
mov
jne
out
testb
data16
mov
mov
push
xor
inc
adc
push
les
pop
shll
iret
pop
jle
stc
mov
sti
adcb
adc
inc
dec
push
jmp
add
rclb
or
in
jge
gs
and
jnp
add
mov
push
mov
cwtl
cmp
call
push
ds
shrl
push
cld
inc
stc
pop
push
mov
mov
lret
sbb
fnstenv
das
test
mov
sbb
jge
xorb
sbb
out
or
xchg
jmp
loopne
je
outsb
jp
push
mov
into
cs
pop
jl
lock
pop
das
jns
movb
test
adc
call
sub
fisubrl
or
jl
out
gs
shl
jno
xchg
insb
stc
xchg
mov
xor
jle
scas
add
loopne
mov
sub
and
jmp
or
dec
pusha
inc
adc
sub
fldt
mov
push
mov
cmp
ret
mov
loope
add
or
add
pop
sbb
test
sbb
push
inc
jmp
mov
mov
cs
dec
xchg
out
xor
jae
clc
stos
sub
mov
lods
pop
pop
pop
stos
inc
addb
hlt
movsb
test
es
pop
cmp
enter
pop
icebp
aad
sti
and
cmpsb
lock
push
xor
test
movsl
dec
mov
into
movsb
out
mov
push
xor
mov
cmp
leave
subb
int
sbbl
fisubs
in
push
mov
out
js
inc
xor
cld
pop
mov
jo
in
jle
push
sub
stos
push
pop
mov
or
fucomp
inc
and
add
or
or
pop
aad
shl
shr
mov
jb
cmp
loop
les
das
cli
inc
je
leave
dec
test
dec
add
es
mov
jne
mov
vmovaps
mov
test
pop
jg
cmpsb
jns
jle
xchg
mulb
and
lds
test
pop
cli
add
notb
in
je
fs
cmovp
push
xchg
push
pop
arpl
aad
add
xor
fstpl
scas
push
inc
lcall
sbb
push
loopne
sub
scas
std
xor
or
pop
rcrl
mull
cmp
aam
fwait
mov
jbe
adc
leave
aad
ret
sub
pop
test
add
inc
mov
mov
mov
ds
or
push
mov
pop
cmp
and
mov
fs
dec
jae
fldt
jno
mov
xchg
xchg
enter
pushf
inc
adc
pop
sub
loop
aad
sahf
out
aas
and
push
lea
xor
gs
inc
mov
lcall
fnstsw
add
push
lret
and
add
into
and
out
jb
fs
fisubl
test
loop
test
fwait
int
leave
insl
int3
xchg
imul
and
add
jmp
arpl
cmp
or
out
push
shlb
fdiv
popf
es
xchg
out
cmp
xlat
imul
xorb
das
push
dec
negb
xor
sahf
pop
cltd
push
xor
or
jg
bswap
xchg
dec
call
sbb
push
and
inc
fwait
out
adcl
add
std
out
clc
js
inc
in
mov
pop
jno
int3
decb
sbb
mov
das
xor
mov
mov
pop
add
add
sbb
and
addr16
iret
mov
les
xchg
in
mov
push
mov
push
dec
orl
pop
test
xchg
mov
add
jecxz
jl
adc
xchg
in
mov
call
sbb
or
jge
cli
fcoml
rclb
lahf
lea
push
ds
cmpsb
cli
lret
insb
je
ja
inc
fnstsw
jo
cmp
stos
inc
adc
test
repz
ror
fs
jb
ja
xchg
mov
vcvtdq2pd
pop
push
push
mov
bound
pop
cs
jg
fistps
mov
mov
dec
int3
mov
gs
cmp
jbe
xlat
js
aam
repnz
xor
jno
xchg
xchg
jl
xlat
je
addr16
sbb
xchg
xchg
cmp
and
fidivl
xchg
dec
stc
cmp
sbb
mov
or
insl
sbb
and
push
daa
pop
in
cmp
mov
cwtl
in
push
rcr
and
pusha
xchg
stc
imul
pop
es
cli
cmp
pushf
je
adc
dec
stos
jl
mov
sarl
mov
jg
pop
test
inc
rclb
test
bound
sbb
loop
mov
pop
add
jp
leave
push
rolb
jns
mov
mov
pmulhw
js
pop
mov
jge
adc
lods
movsl
or
inc
daa
mov
mov
and
mov
jl
mov
aam
mov
stc
mov
aam
push
xor
xchg
xlat
push
jmp
shlb
jbe
adc
aaa
jge
dec
push
in
mov
mov
out
sahf
rorb
outsb
xchg
sbb
pushf
int
shll
sbb
and
mov
jnp
mov
cmp
nop
dec
repnz
loope
adc
in
cmpsb
ljmp
pop
test
push
mov
cmp
and
cmc
sub
fidivrs
mov
repz
shl
mov
aaa
xor
sub
fwait
imulb
dec
push
cmp
dec
daa
push
pop
xchg
or
pop
inc
test
adc
or
pop
sub
dec
rep
and
cmpl
scas
lahf
push
scas
jecxz
push
xor
cltd
int3
js
rolb
testl
push
and
test
mov
inc
mov
mov
ds
and
repz
jne
dec
das
aaa
movsl
aas
add
cmp
leave
pop
and
test
mov
outsl
lods
xor
cwtl
jp
xor
lods
sbb
xchg
sbb
mov
aad
pop
dec
inc
clc
cld
lret
mov
mov
mov
lods
jmp
nop
ds
push
data16
aaa
inc
jnp
push
jge
into
in
mov
push
fs
outsb
mov
icebp
mov
xchg
in
jno
jno
scas
mov
jecxz
or
imul
outsb
leave
mov
mulb
dec
jo
dec
fidivrl
mov
adc
insb
sbb
enter
adcl
dec
mov
xchg
mov
decb
sahf
xlat
pop
insb
mov
mov
test
xchg
inc
out
sti
cmp
shr
jl
pop
push
add
dec
lret
inc
mov
lcall
push
jnp
imul
flds
stc
jl
inc
mov
outsl
gs
jecxz
addr16
loopne
push
jmp
fs
loope
add
add
sbb
mov
data16
stos
dec
fldenv
push
repz
mov
out
mov
fstl
pop
sti
xor
add
sbb
jae
mov
ds
jmp
and
dec
mov
dec
lods
adc
and
cmp
mov
ret
bound
lret
imul
andl
stos
xor
int
mov
test
mov
insl
sbb
xchg
in
fildll
sbb
xchg
rorb
xor
xchg
pop
pushw
pushf
aas
mov
xor
add
in
call
ror
shrb
es
lods
iret
lahf
inc
arpl
stc
imul
es
ljmp
cmp
cld
popf
lcall
sub
add
inc
mov
xchg
jp
push
xchg
pop
and
cmc
jno
xor
cmpb
jae
xor
xor
test
lret
es
js
arpl
shrb
jl
pop
mov
mov
ret
ret
shl
lds
test
imul
and
mov
popl
push
xchg
push
pop
mov
cmp
inc
mov
mov
mov
push
push
mov
pop
sub
std
into
jae
mov
in
fdivs
push
je
pop
mov
imul
pusha
jo
icebp
shlb
mov
or
xchg
pop
scas
adc
mov
xlat
lods
bound
push
pop
and
push
icebp
cltd
fs
mov
out
mov
aaa
dec
push
fs
dec
sbb
push
jns
ja
xor
stos
in
add
stc
push
call
bound
adc
xchg
fimull
lock
add
outsl
xor
cmp
test
imul
call
sbb
shlb
aaa
int
push
mov
aaa
outsl
pop
sbb
cmpsb
jge
mov
test
jne
mov
cwtl
mov
lahf
xchg
push
pop
test
inc
jb
xchg
or
add
push
xchg
lea
mov
xchg
cmp
cmp
cmc
jbe
and
adc
xchg
pop
cltd
out
cmp
add
ficompl
pop
test
xchg
cmp
lods
xlat
push
xchg
inc
int
push
arpl
push
outsl
dec
loopne
cld
lret
sbb
xchg
pop
pop
cmpsb
roll
out
xchg
inc
sub
cmpsb
hlt
mov
dec
push
mov
test
cmp
outsl
inc
fldt
sub
clc
outsb
gs
aaa
ja
cmpsl
aas
rolb
pop
add
push
and
repz
lock
add
add
cmp
test
lea
sti
push
rcl
movsb
clc
out
lock
mov
insb
addr16
sub
mov
sub
push
pop
fstpl
inc
mov
pop
pushf
sub
jb
cld
pop
jl
loopne
push
xchg
lea
push
inc
adc
nop
iret
xchg
fwait
inc
jmp
and
adc
clc
sub
jne
mov
sahf
stos
cmp
fwait
jecxz
mov
insl
in
and
call
nop
push
popf
jo
dec
push
sarl
or
ljmp
push
pop
inc
out
mov
int3
push
cmp
xor
test
and
ret
mov
stos
mov
mov
mov
xchg
lds
jae
stos
dec
push
aas
inc
mov
mov
dec
int3
shll
mov
jae
lret
mov
dec
cmpsl
ficoms
jo
into
gs
ljmp
push
cs
and
lahf
push
dec
in
loop
pop
push
outsb
cmp
cli
dec
xchg
sti
shrb
dec
mov
lret
andl
in
adc
test
test
ja
mov
pop
shlb
jp
push
sub
xlat
xchg
fabs
push
cmp
inc
daa
lods
es
xor
or
mov
mov
call
test
jle
cwtl
jno
cmp
les
js
sbb
std
pop
jecxz
inc
jns
shll
add
inc
mov
mov
and
ss
mov
lcall
subl
lret
mov
push
stc
test
into
adc
push
sbb
mov
jmp
out
je
lds
xchg
sbb
sub
xchg
fidivrl
cltd
movsl
pop
cwtl
pop
faddl
dec
ja
sub
ret
xchg
test
pop
jle
mov
mov
xor
out
cwtl
and
lahf
jne
sti
out
and
icebp
jns
sbb
adcb
or
inc
jge
shll
loop
sub
xchg
mov
pop
jmp
loopne
add
outsb
imul
add
fwait
pop
mov
push
gs
jl
lret
sbb
cmc
mov
enter
lret
sbb
mov
push
xlat
dec
fbld
pop
jmp
cmpsl
dec
mov
sahf
xchg
notb
mov
pop
jns
gs
sub
je
adc
cmc
repnz
jbe
jb
or
sub
xchg
sub
insl
out
or
sti
scas
xchg
pop
xchg
and
lods
dec
xchg
mov
xor
fmul
push
push
mov
mov
xchg
pusha
adc
mov
ds
movsl
data16
in
aad
js
mov
insl
sti
fidivrl
popa
pop
cmp
out
lods
iret
inc
test
xor
xor
outsb
add
or
ret
and
mov
push
lahf
add
aad
fwait
pop
sub
pop
jmp
iret
in
sbbl
nop
and
or
adc
mov
inc
lahf
mov
repnz
xor
stc
or
fcmove
and
cmp
call
out
cmpsl
push
inc
insb
in
xor
in
xchg
add
andl
daa
out
std
inc
jnp
addr16
shl
aad
cmp
add
push
hlt
arpl
int3
pop
cltd
lds
repnz
mov
shll
and
test
xlat
addl
xchg
ret
push
iret
adc
int
cli
sub
out
fidivs
imul
sbb
mov
js
jge
sbb
ss
inc
test
imul
push
push
or
dec
rcl
or
pop
and
cmp
mov
dec
sbb
cmc
sbb
pop
cmp
jg
or
in
push
adc
popf
repz
scas
mov
sbb
aam
out
inc
mov
lcall
popa
mov
and
pop
fistpl
stc
push
cs
popf
test
inc
and
fwait
mov
ret
cmp
scas
sarl
mov
mov
cmp
lea
xchg
mov
mov
jl
mov
mov
pop
lret
test
dec
sub
xchg
mov
push
inc
pushw
arpl
push
push
inc
pop
ljmp
xchg
xor
insl
fistpll
pop
cld
loop
lds
mov
out
push
sbb
lcall
ror
jns
je
stc
jmp
push
dec
je
fidivl
push
dec
dec
jge
sti
push
jns
jnp
adc
ficomps
cli
xchg
push
sub
fcom
pushf
cmp
insl
pop
pop
or
nop
in
leave
js
out
xor
add
sarb
cs
sub
mov
pop
cmp
mov
add
jns
mov
mov
adc
stc
push
xchg
insb
mov
clc
mov
cmp
pop
adc
cs
in
mov
mov
lahf
imul
lods
sbb
sub
adcb
mov
dec
dec
sahf
sarl
out
jno
lods
in
adc
jp
in
arpl
int3
cwtl
sti
rcrl
dec
popa
dec
xchg
jmp
lods
inc
push
pop
xor
in
fwait
dec
sub
jmp
or
aad
mov
adc
fimuls
in
sbb
rclb
sarl
js
fnsave
xor
xchg
push
cli
das
pusha
xchg
xchg
test
sti
add
lods
mov
out
dec
aad
and
fisubrl
xor
call
xor
lret
pop
in
fwait
xor
mull
lret
xor
mov
loopne
icebp
push
sbb
add
outsl
nop
cli
pop
lods
lcall
mov
jnp
add
mov
loope
xchg
pop
jg
inc
push
aam
push
jl
imul
and
or
sbb
dec
rcl
pop
mov
movsb
mov
fdivrp
mov
xorb
xchg
pop
stos
xchg
adc
inc
in
push
xchg
ror
jbe
jae
lds
inc
jmp
das
in
insl
cmp
sub
inc
jns
sub
out
cmpsl
mov
dec
mov
testb
lret
insb
dec
in
sbb
adc
mov
popa
ljmp
test
lods
mov
outsl
ret
fldt
neg
and
mov
je
int
lahf
add
loop
or
rorb
daa
out
dec
pop
add
pop
jae
jno
jecxz
jmp
xchg
inc
pop
add
adc
inc
outsb
in
mov
dec
movsb
cwtl
jecxz
cmc
xor
leave
inc
xor
out
xor
sbb
inc
movsl
stos
insl
dec
cli
cmp
sbb
lret
test
data16
stc
test
sub
mov
ds
rcrb
xorl
ret
ret
lret
into
cmc
stos
test
mov
std
ja
adc
shlb
cli
test
mov
xchg
es
and
aaa
xchg
sbb
dec
push
sbb
xor
das
lret
sbb
ljmp
sahf
cmp
popa
data16
sub
mov
xchg
sti
cmp
sub
sbb
mov
mov
loope
pop
xchg
and
arpl
cmp
jp
add
mov
bnd
loopne
outsb
lahf
insb
das
adc
lcall
mov
xor
fidivs
inc
pop
mov
xor
mov
mov
cmp
fnstcw
or
cmp
adc
addr16
xchg
adc
xchg
dec
pop
mov
nop
insb
test
repnz
out
dec
icebp
sbb
test
lods
cli
jne
sub
bound
or
imul
and
pop
sarl
jecxz
int3
xchg
lock
mov
sbb
add
dec
subl
mov
mov
cmpsb
stos
jmp
xchg
mov
sub
fucom
sbb
dec
pop
shrl
nop
jns
dec
sbb
clc
scas
jb
insb
xor
fdivl
or
loope
fsts
inc
jno
push
and
jo
movsb
ja
test
push
mov
cmp
fldcw
or
outsl
lcall
dec
mov
mov
dec
loopne
rcr
enter
lock
mov
push
mov
mov
push
xchg
mov
pop
shlb
fdivrs
xchg
repnz
les
stos
pop
pop
jae
popa
je
inc
mov
cmpsb
pop
stos
cmc
mov
xorl
lods
and
gs
fdivrs
test
xlat
mov
adc
jl
shlb
test
xchg
inc
mov
add
mov
aas
mov
dec
enter
or
cmp
fsubrl
dec
pop
lods
enter
movzwl
xchg
sub
repz
jg
imul
dec
jae
sbb
addr16
xor
roll
mov
adcb
pop
sub
movsl
dec
popf
push
mov
push
jnp
movsl
ds
shrl
or
mov
lds
icebp
xchg
cmpsb
lds
xchg
fsubs
lods
push
cwtl
sbb
jnp
movsl
leave
nop
mov
xor
push
push
adc
cs
sarl
add
mov
repz
leave
in
adc
shll
fwait
sbb
jge
mov
mov
inc
cld
inc
mov
shl
adc
int
mov
cmc
adc
lret
jne
cwtl
xor
ljmp
pop
andl
idiv
loop
in
sub
les
popa
add
gs
dec
andb
fwait
cltd
fidivrl
xchg
stos
repnz
or
inc
fnstcw
lret
dec
loope
movsl
push
movsl
shl
dec
les
xchg
sti
cld
dec
jb
stos
push
inc
pop
xchg
or
cli
pandn
test
mov
test
or
push
push
cmpsb
pop
fimuls
inc
cwtl
mov
mov
cmp
shrl
repz
or
add
mov
icebp
stc
mov
pop
mov
jle
fldt
sbb
bnd
cwtl
mov
pop
addr16
mov
pop
adc
add
and
cmpsb
imul
lods
out
or
out
nop
aam
jno
pop
in
and
adc
arpl
cmpsl
enter
cltd
bound
pushf
mov
jo
mov
dec
cltd
jp
mov
xor
dec
div
and
dec
aas
outsl
mov
mov
inc
rolb
xchg
push
jno
or
and
push
imulb
lcall
or
in
mov
push
mov
pop
and
mov
jecxz
adc
lods
insl
fcoml
hlt
sub
push
push
ds
arpl
imul
sub
xor
repnz
fdivrs
mov
mov
mov
jp
sbb
xor
add
cs
sub
shlb
xchg
inc
dec
cmc
cmp
or
push
mov
mov
dec
ficoms
push
mov
dec
xchg
aam
lods
jns
lods
mov
clc
push
add
loopne
inc
xor
hlt
pushf
addr16
push
jns
insb
addb
xchg
and
bound
or
test
cwtl
adc
pop
pop
mov
mov
adc
add
cmp
cmc
bound
pop
inc
arpl
movsb
mov
std
mov
inc
aaa
pop
decb
sbb
int
xor
es
gs
in
lret
arpl
test
outsb
and
sub
in
push
jno
xchg
or
xchg
mov
je
push
sub
add
or
cmpsl
push
popf
inc
sbb
bound
iret
cmpsb
cli
cmp
add
add
dec
add
and
adc
loop
pop
cmc
mov
lock
cld
movl
push
test
sahf
cmp
dec
fwait
cmpsb
gs
shrb
xchg
jecxz
mov
lock
pop
addr16
mov
or
decb
ja
add
pusha
xchg
aaa
dec
ja
ds
loop
mov
and
jmp
and
pop
mov
mov
out
lds
icebp
insb
xchg
mov
xor
pop
popa
fsubs
icebp
xor
mov
test
push
mov
dec
pop
aam
mov
in
out
add
les
imul
test
mov
adc
adc
fldt
js
xchg
jb
mov
mov
bound
lods
jns
movsl
jg
sub
mov
aad
jns
jo
clc
lods
in
das
ss
insb
das
dec
and
inc
leave
push
arpl
movsb
mov
jmp
jb
andl
mov
pop
scas
add
pop
dec
outsb
xor
lock
pop
lods
or
add
jle
or
incb
cmp
xor
mov
add
das
sub
pop
lret
arpl
gs
lcall
shlb
push
dec
stos
and
gs
lcall
dec
and
jl
dec
sbb
daa
movsl
cmpsb
jl
rcll
shlb
aam
xchg
cmc
mov
hlt
mov
mov
test
mov
pop
inc
cmp
cmp
inc
and
mov
push
les
ja
fsubrs
adc
inc
icebp
push
test
es
adc
mov
push
scas
jnp
mov
cmp
bound
scas
sub
cs
rcrl
decl
and
fadds
stos
jns
dec
mov
in
mov
push
cmp
dec
cs
dec
push
jae
shrb
and
lea
in
push
mov
inc
fnsave
add
rorl
stos
push
bound
fistpl
rcrb
xchg
lret
push
add
sub
mov
lret
inc
arpl
cmp
pop
push
outsl
aaa
out
cmp
push
sbb
stos
shll
cltd
shll
outsl
icebp
adc
cmc
outsb
das
mov
aam
lods
add
sub
stc
mov
cmp
hlt
adc
sub
aam
mov
or
mov
sub
arpl
xor
mov
scas
cld
adc
dec
ficoms
aaa
mov
mov
pop
and
xchg
xchg
loop
cltd
xor
push
mov
je
cli
jb
aad
inc
in
xor
rcrl
mov
movsb
loope
ret
or
cmp
ss
loopne
or
cmp
push
je
and
dec
sub
xor
or
aas
xor
les
and
push
push
inc
ljmp
sbb
btc
push
loope
xor
inc
fcompl
arpl
je
sub
fstp
aad
out
push
jecxz
pop
and
scas
icebp
xlat
xor
cmp
stos
je
sahf
and
push
and
cmp
call
fldt
xlat
inc
imul
mov
mov
jecxz
pushf
test
push
pop
jb
jl
mov
frstor
sbb
push
dec
pop
out
cld
test
jle
mov
pushf
test
mov
cwtl
push
mov
cmp
arpl
add
insb
stos
fs
daa
nop
xchg
jae
sarb
xor
hlt
fs
xchg
xor
jmp
sub
in
insl
sbb
fldcw
adc
cli
lret
inc
imul
int
push
les
inc
adc
mov
push
cmp
mov
daa
repnz
fstps
rcr
fs
ss
js
std
jnp
sub
sbb
mov
scas
adc
loop
pusha
jbe
sub
dec
gs
jne
fwait
jno
daa
dec
lods
adc
inc
jne
push
push
push
jl
aam
xchg
pushf
loop
xchg
fnstenv
dec
ds
push
ficoms
and
fstl
mov
cmp
push
push
add
je
imul
pop
xchg
push
clc
or
dec
sbb
mov
pop
fldenv
adc
xchg
lods
cli
or
sub
sub
pop
mov
js
xchg
arpl
cmpsb
and
fisubrs
jge
icebp
notb
mov
inc
daa
pop
shr
in
out
rol
shl
subl
dec
dec
xchg
pop
or
sbb
mov
dec
cltd
movsb
int
xchg
je
iret
iret
xchg
and
movsl
inc
jmp
fs
push
jns
jmp
out
dec
sbb
adc
bnd
mov
sub
loopne
lret
jbe
outsl
incl
push
mov
xchg
or
cmp
aas
out
int3
ja
repnz
jecxz
push
dec
ret
sahf
jge
data16
sub
push
mov
mov
jge
push
push
jbe
inc
jmp
xor
mov
scas
js
xor
mov
dec
clc
out
push
int3
xor
adc
jle
adc
or
scas
lahf
das
cld
cs
call
loope
lods
paddd
rsqrtps
jmp
push
lds
data16
sbb
mov
xchg
test
shl
xchg
ljmp
aad
dec
aad
repz
clc
mov
jmp
test
mov
jle
aas
pop
scas
sbb
fprem
test
mov
lret
out
mov
pop
int
jmp
bound
in
movsb
sub
xchg
insl
shrb
mov
jbe
inc
pop
out
mov
scas
addr16
loopne
xchg
leave
call
lods
lret
or
mov
mov
test
dec
or
mov
jl
leave
push
shlb
jmp
loope
pushf
push
lock
pop
js
push
pop
arpl
jecxz
scas
pop
cmpsb
andb
push
std
and
jb
je
lret
jg
mov
mov
pop
out
es
out
std
loopne
adc
cmp
mov
lahf
je
pushl
or
mov
xchg
adc
jle
push
js
sbb
xchg
dec
jb
mov
and
aad
js
subb
lods
lods
sbb
ffree
and
xor
dec
insb
lahf
es
mov
sbb
in
sbbb
adc
mov
xchg
cmpsl
dec
movsb
lret
push
movsl
lds
inc
mov
inc
lods
test
sub
push
rolb
cmp
mov
mov
roll
in
dec
jns,pt
inc
push
sbb
cmp
dec
mov
daa
push
cmpsl
xor
movsl
pop
push
in
xor
jp
repnz
pop
add
imul
inc
imul
hlt
loop
pop
cmc
and
sbb
fwait
leave
xchg
popf
xor
cld
es
push
sbb
scas
fadds
pop
mov
sbb
sub
mov
cwtl
cs
inc
inc
scas
or
inc
cmpsl
add
out
jae
pop
xchg
inc
push
dec
pop
fiaddl
inc
shr
cwtl
jne
jge
aaa
outsl
pop
pop
dec
bound
mov
ficoml
fwait
pop
addr16
sub
psubq
cmp
jo
jo
sahf
xchg
push
pop
fsubs
push
stos
push
adc
sub
or
adc
cmc
xor
je
call
push
shll
cld
mov
loop
dec
push
sub
fiadds
or
dec
jnp
mov
ret
push
xor
cmc
js
mov
mulb
jno
in
mov
sahf
dec
stos
in
jp
int
jecxz
in
xor
outsb
nop
jo
test
je
test
repz
and
ljmp
sub
scas
aam
adcb
mov
mov
pusha
pop
dec
xchg
rclb
push
cmc
aam
push
mov
scas
shlb
add
adc
xchg
or
dec
xchg
int
add
enter
imul
lea
icebp
dec
push
push
cs
jp
mov
mov
pop
pop
ror
jne
mov
dec
push
lret
sbb
inc
jl
out
ja
jge
mov
jnp
and
js
adc
popa
jp
insl
rcll
fistl
push
xchg
push
fidivs
jnp
and
pop
inc
add
adc
js
in
mov
in
std
test
xor
jl
lret
xor
or
das
cmp
mov
repz
stos
outsb
add
cwtl
jnp
push
mov
push
arpl
mov
pop
inc
mov
gs
in
sbb
push
and
popf
pop
bound
out
jecxz
sahf
or
in
daa
inc
xchg
in
lock
xchg
dec
jmp
sarb
aaa
mov
lock
jl
inc
cmpsb
or
cmp
xchg
mov
or
sbb
push
pop
and
inc
mov
dec
mov
daa
icebp
mov
sbb
lea
inc
pop
addr16
cmp
mov
inc
dec
and
jb
stc
cmp
mov
mov
aas
ljmp
lcall
lods
sbb
jge
xlat
adc
mov
cmp
into
mov
sbb
inc
inc
cmpsl
or
loope
pop
add
jg
stos
pop
push
arpl
int
fistpll
cmpsl
fists
ret
push
stos
fbstp
inc
push
pusha
lret
add
mov
jl
push
mov
xchg
jecxz
cmp
and
and
inc
das
popf
xchg
out
jne
data16
lret
jne
xchg
cmp
test
or
mov
cmp
fs
cld
dec
mov
xor
into
lcall
push
xchg
push
push
xor
fsts
cld
pop
inc
das
clc
lret
fstpl
push
sbb
sbb
repnz
xchg
mov
pusha
push
insl
add
in
stc
mov
das
out
xchg
dec
adc
jmp
add
xchg
xchg
jmp
ror
and
cmp
sub
stos
add
into
mov
negb
into
adc
fs
sub
imul
clc
push
enter
icebp
or
xlat
jl
sti
pop
mov
push
pop
in
sbb
inc
or
mov
ds
hlt
and
inc
cmp
ficoms
jmp
xchg
outsl
mov
cltd
jle
xchg
xchg
sbb
int
hlt
cmp
test
jnp
add
push
mov
push
sub
dec
mov
mov
out
push
xchg
sbb
jmp
xor
aam
mov
pop
ret
xchg
shll
push
int
mov
mov
fnsave
sub
cltd
inc
repz
jbe
je
cmp
push
mov
and
adc
mov
sub
inc
jmp
shll
fstl
pusha
lock
jl
adc
out
aad
add
adc
pop
sarl
insl
cmpsb
ss
addr16
or
sbb
push
mov
aam
inc
push
push
wrmsr
pusha
pop
cmc
cmp
test
das
push
push
adc
mov
fildll
jne
scas
mov
lock
mov
jmp
xchg
mov
pop
scas
lods
xlat
daa
aas
aas
in
outsb
mov
scas
inc
pop
dec
iret
mov
insb
ret
cmc
dec
sbb
push
aam
call
cwtl
loop
movsb
lret
sti
popa
mov
clc
xchg
inc
out
cwtl
in
out
sbb
mov
out
pusha
mov
ret
push
pop
lahf
fcoms
aaa
jns
fcmovbe
out
gs
cmp
aaa
add
into
in
jno
jns
dec
daa
fcom
es
sar
jno
jp
adc
in
jnp
xchg
mov
int3
jno
ret
stc
orb
sbb
add
xchg
ja,pt
fwait
push
shl
cmp
inc
jle
in
push
mov
push
cmp
xchg
std
call
adc
jo
jmp
mull
jnp
push
inc
adc
subl
shrl
pop
scas
inc
sbb
ja
aam
sub
pop
imul
and
add
movsb
rorl
and
jmp
fidivs
xor
mov
mov
imul
shll
sbb
and
sbb
adc
cmp
sbb
lds
pop
lock
xchg
movsl
mov
dec
sbb
mov
jle
mov
shrb
cmp
adc
dec
jns
test
sbb
dec
jbe
dec
les
loope
in
negb
cltd
pop
jmp
popa
mov
into
push
pop
js
mov
out
fwait
sahf
jo
dec
loopne
xor
push
push
cwtl
inc
sti
pop
scas
sub
push
ret
idivb
negl
cwtl
mov
insl
hlt
fists
rcrl
es
std
jl
das
cmp
in
aam
dec
leave
into
fld
mov
scas
cli
mov
mov
pop
mov
cli
mov
mov
je
ljmp
ja
sti
insl
or
ds
cmp
outsl
dec
adc
repnz
mov
pop
lods
out
xor
push
jge
adc
xchg
inc
push
mov
inc
dec
sub
push
ja
test
lock
call
jns
aas
ds
sub
in
push
ror
cld
ficoml
push
fistps
xlat
fsubl
mov
ffree
add
sub
xlat
int
sub
fdiv
lret
pop
xor
aaa
xchg
dec
jg
mov
call
sbb
adcl
push
outsl
bound
fdiv
add
mov
mov
data16
jmp
fsubrs
fldcw
test
add
xchg
adc
and
sahf
lods
or
xor
cmp
mov
fstl
or
sub
inc
rcrb
rorl
cwtl
or
push
jns
xor
insl
popl
inc
movsl
and
fadd
inc
repnz
movsb
mov
adcl
repz
add
fiadds
jle
dec
lcall
push
xchg
jp
push
adc
push
loopne
inc
loopne
das
jns
int
shl
dec
into
stos
lods
out
xchg
mov
daa
insb
sbb
xor
stos
imul
xor
popf
rcr
int3
dec
xor
sbb
cmp
cmp
adc
sub
and
lret
sub
xchg
or
or
pop
popa
sarb
cmp
dec
lods
and
jmp
xchg
or
jbe
ljmp
sub
aad
and
cmp
adcl
les
lock
sbb
push
mov
call
pop
orb
test
xchg
cmp
cwtl
push
loopne
push
or
and
scas
test
sbb
dec
mov
stc
ret
cwtl
dec
scas
xor
add
cmc
pop
daa
jl,pt
jnp
repz
pop
pop
xchg
je
xlat
push
scas
insl
jno
int3
mov
out
out
lahf
mov
add
cmpsl
push
in
lret
int3
mov
clc
mov
sbb
in
addr16
lock
imul
sbb
add
xchg
sahf
xchg
cltd
inc
cwtl
adc
xor
stos
pop
test
xchg
adc
and
fstp
je
sub
xchg
or
pop
xchg
sbb
cmc
push
xchg
inc
cmp
fdivl
pop
out
js,pn
enter
mov
push
rol
mov
lahf
or
inc
mov
cmp
jp
popf
jge
cmp
dec
repnz
push
xchg
jo
stos
adc
fchs
and
mov
notb
stc
inc
fidivrl
adc
adc
or
out
stos
cmp
inc
subb
xor
mov
js
repnz
xlat
stc
push
push
imulb
cmc
and
repnz
xor
sub
pop
sbb
push
dec
fiaddl
insb
sahf
test
inc
loopne
cmp
sbb
outsb
fisttps
mov
push
mov
add
jge
and
popf
popa
js
sti
aad
enter
cltd
imul
jno
inc
jnp
loopne
dec
or
int3
mov
ja
out
jns
outsb
push
cltd
mov
mov
das
insb
jg
pop
pop
ret
mov
gs
popa
mov
push
xchg
icebp
daa
add
or
call
cmpb
data16
push
mov
or
xor
adc
mov
mov
bound
cmp
jecxz
sbb
ljmp
pushf
xlat
ret
std
dec
insl
test
inc
mov
into
lahf
inc
out
leave
scas
ret
sahf
fnsave
imul
jecxz
into
sub
jmp
insb
xchg
imul
out
ds
fyl2x
dec
std
sbb
jne
mov
je
stc
pop
mov
out
in
push
into
lcall
enter
ja
jmp
movsl
fisubs
jp
add
bound
pop
jecxz
jne
pop
test
jl
xlat
and
adc
aaa
xchg
andl
mov
movsb
jp
mov
mov
push
scas
lods
into
mov
adc
cmp
lods
sbb
pop
cmp
fldcw
and
movsb
stos
clc
loopne
lret
dec
add
pop
pushf
cwtl
fists
fdivrl
aam
scas
inc
das
inc
loop
inc
pop
add
cmp
and
inc
jb
dec
aaa
and
pop
repnz
xor
ret
das
xlat
push
inc
pop
into
enter
and
adc
aam
jle
jne
test
lret
negb
pop
mov
inc
outsb
in
push
imul
dec
xchg
cmpsl
lcall
pop
scas
fidivrl
test
inc
lods
gs
icebp
ljmp
ljmp
fstpl
mov
fisubs
fldt
or
stos
sbb
push
arpl
das
pop
pushf
ficoms
nop
xchg
scas
fs
mov
mov
mov
scas
popf
mull
pop
cmc
jb
add
jle
std
or
push
xorb
jle
cmp
add
outsb
adc
xchg
mov
inc
gs
push
mov
push
adc
sbb
dec
xchg
pop
loopne
xor
iret
es
mov
pushf
cwtl
in
fstps
mov
mov
ret
ret
inc
pop
outsb
shlb
cmpsb
gs
add
lods
and
out
and
pop
or
and
adc
arpl
stos
dec
jl
mov
hlt
push
inc
jno
pop
test
mov
scas
fisubrs
out
jnp
pop
cwtl
jmp
negb
dec
fmuls
aas
in
pop
and
xchg
mov
mov
ror
outsl
or
dec
cmp
lods
jbe
xchg
cltd
sub
scas
mov
ja
aad
xchg
jecxz
imul
jae
mov
cmp
lds
fwait
out
in
push
mov
scas
les
mov
loope
mov
mov
jl
enter
mov
rorb
mov
sbb
call
aas
rorl
scas
test
xchg
cmp
mov
std
aam
push
fadd
insl
pop
cli
mov
inc
push
mov
cmp
mov
in
fucomp
xlat
sbb
repz
stos
push
and
cmp
pusha
mov
mov
loop
int3
mov
fstpl
dec
fsubl
mov
push
outsb
arpl
and
sbb
movsb
cmpsl
stc
outsl
sbb
pop
or
dec
ljmp
cmp
stc
repnz
leave
mov
nop
cmpsb
mov
mov
aad
pop
push
push
adc
cmc
cmc
or
adc
inc
pusha
js
je
mulb
arpl
cmp
iret
popa
adc
lods
mov
fdivs
pop
pop
mov
or
arpl
lret
push
out
cmp
or
mov
insb
xor
xchg
daa
pop
daa
clc
sar
sbb
cli
xchg
pop
pop
dec
es
daa
aam
dec
pop
mov
adc
pusha
sbb
insb
pop
enter
lahf
cmpsb
popa
cmp
sbb
fxch
mov
je
ds
mov
test
in
mov
sub
es
int3
cmp
imul
adc
out
add
push
mov
leave
repnz
jne
fwait
outsl
mov
push
pusha
and
je
mov
add
pop
mov
xchg
adc
or
outsb
ljmp
call
test
iret
push
and
enter
popf
fyl2xp1
and
xchg
jb
aam
or
pop
cmp
out
mov
inc
outsb
push
roll
in
jo
lahf
jae
push
xor
test
xlat
mov
fs
xchg
pop
inc
dec
in
xor
icebp
xor
mov
ljmp
lock
push
frstor
das
ret
insb
adc
jno
outsl
sub
nop
pusha
clc
and
ds
dec
popf
lret
push
cld
cmc
mov
stc
push
mov
dec
gs
and
pusha
insb
push
sqrtps
inc
mov
inc
popf
xchg
test
rorl
inc
stc
mov
cli
int3
sub
subb
fbld
out
and
inc
push
stos
popl
lea
sbb
je
fwait
add
cmp
pushf
and
rorl
mov
pop
adc
adc
xor
push
out
arpl
fcompl
jnp,pt
jl
add
pop
addr16
jmp
lds
addr16
mov
filds
add
clc
jne
mov
lahf
xorb
std
xchg
xor
xchg
mov
in
addr16
add
mov
jle
adc
push
mov
inc
test
sbb
clc
xchg
xor
jnp
arpl
mov
mov
mov
mov
add
add
in
and
movsb
sub
test
push
jmp
cmc
cmp
into
cmc
or
clc
sar
and
ficoml
repnz
jecxz
sub
daa
jle
mov
push
dec
ds
dec
cmp
in
xor
adc
loope
daa
pop
sub
add
je
fimuls
leave
push
dec
cmp
orl
std
data16
push
xor
cmpsl
in
aas
fld
scas
lret
mov
mov
lret
packuswb
jecxz
call
mov
or
stos
and
outsl
push
pop
mov
mov
inc
cmp
ss
pop
insb
mov
bound
or
mov
inc
arpl
dec
jl
sub
inc
jnp
xchg
lds
xchg
stc
divl
jl
fwait
or
out
sbb
lahf
push
adc
in
xchg
push
push
or
cwtl
and
xchg
cs
and
xchg
push
cmp
inc
cmp
sbb
mov
xchg
push
lods
movzbl
mov
stos
cltd
sbb
dec
mov
or
fidivl
dec
lahf
jo
iret
mov
sbb
fwait
xchg
out
dec
and
mov
adc
cmp
inc
dec
pop
stos
or
mov
push
cmp
mov
mov
loope
or
cld
pop
sub
sahf
cmp
pop
jp
add
xor
lods
fwait
xchg
jecxz
vandnpd
sub
ficoml
push
mov
test
mov
inc
push
mov
fidivrs
push
lret
test
xor
ds
sti
jge
das
repnz
lock
mov
adc
or
mov
movsb
jge
enter
cmpsl
xchg
lahf
pop
pop
push
adc
mov
sbb
int
inc
sbb
aaa
and
xlat
inc
pushf
testb
mov
sub
mov
xchg
jl
test
dec
mov
jae
sbb
outsl
jae
sbb
lret
fsubl
jge
stc
out
mov
loopne
lods
cli
sbb
or
out
xor
sbb
fisubrl
in
cmp
pop
xchg
push
loop
push
cmpsb
lock
jp
cli
cmp
es
repnz
leave
nop
jo
std
mov
addr16
xchg
cmp
xor
test
sub
jnp
sub
or
sub
orb
ret
pop
imul
mov
and
test
icebp
ffree
inc
std
ss
jecxz
sub
mov
fiaddl
add
in
sahf
jne
divb
fsubp
pop
fbld
jbe
stos
pop
cmp
insb
mov
enter
repz
ja
jbe
add
sub
sahf
cmc
pop
lahf
pop
ffree
mov
adc
or
adc
lret
out
scas
stos
sbb
subb
and
nop
mov
jecxz
push
cmp
cmp
out
ss
and
xchg
jne
mov
dec
leave
aaa
mov
mov
pusha
test
or
xchg
dec
test
hlt
add
decl
mov
stos
int3
cmpsb
xchg
cli
sub
push
cmpsb
fs
dec
sahf
std
icebp
mov
es
mov
mov
xor
leave
cmp
jnp
orb
je
aad
or
mov
pop
ja
cmp
jecxz
adc
mulb
or
sahf
das
cld
dec
mov
lock
popf
sahf
fs
xchg
or
aam
jae
lret
gs
push
test
clc
popf
mov
enter
arpl
ds
dec
xor
mov
loope
push
out
mov
mov
mov
cmpsb
imul
and
mov
mov
fst
cmc
mull
push
cmpsl
mov
movsb
inc
sbb
ss
mov
shr
sbb
scas
enter
test
sbb
mov
sahf
mov
sti
test
clc
loop
pop
nop
hlt
inc
push
jecxz
mov
mov
and
dec
inc
pop
std
insb
aad
cmp
pop
mov
jno
sub
cs
push
cltd
mov
xchg
jecxz,pt
push
or
cwtl
insl
xchg
cmp
cmp
mov
mov
nop
cmpsl
mov
jae
xchg
mov
dec
add
addr16
das
jle
es
mov
adc
in
push
imulb
sti
jb
inc
dec
xchg
dec
adc
and
sahf
or
int
mov
xor
cmp
xor
mov
jns
lret
jo
xchg
lock
or
stos
sub
pop
mov
and
adc
adc
mov
mov
inc
fs
pop
dec
xlat
pop
aad
aam
jne
mov
dec
mov
lret
pop
bnd
sub
push
mov
insb
int3
lret
movsb
mov
push
jnp
dec
lock
dec
cmovo
lret
aaa
or
scas
jnp
inc
je
ja
jle
lods
inc
stos
hlt
cli
ret
add
rcll
sub
ficomps
mov
xchg
push
repz
push
and
mov
inc
hlt
fs
scas
hlt
sti
sahf
cmp
loopne
mov
xchg
push
pop
pop
mov
add
xchg
mov
xchg
jno
scas
sbb
cld
fbstp
xchg
xchg
movsl
movsb
fldenv
and
xor
shrl
imul
add
add
inc
call
mov
repnz
pop
scas
addr16
jo
mov
lock
fmull
add
pop
sti
fldt
or
testl
insb
outsl
stc
cmp
mov
ja
into
aas
je
shrb
sub
test
cmp
mov
ljmp
inc
or
sbb
jbe
in
cli
lahf
mov
test
push
dec
pop
and
dec
das
repnz
stc
stos
repnz
and
into
dec
mov
lods
push
push
dec
gs
mov
cmp
ljmp
jae
and
and
pop
dec
int3
aas
in
daa
cmova
outsb
mov
aad
cli
add
jge
jp
les
jb
inc
dec
jb
test
lahf
mov
or
sbb
daa
nop
popf
into
idiv
icebp
iret
mov
mov
or
nop
cld
xchg
ljmp
lds
and
add
in
jne
jnp
mov
int3
in
push
and
lret
into
cmp
cmp
lods
inc
sub
fisubrl
cmp
out
push
jmp
lret
nop
sbb
lock
xchg
add
mov
dec
notl
lret
or
shlb
and
mov
repz
xchg
add
mov
gs
xor
mov
outsl
fisubrs
dec
fwait
push
lea
mov
cmp
popf
sbb
clc
jo
inc
inc
mov
adc
nop
divb
jnp
jp
mov
dec
mov
movsb
out
lods
inc
test
shl
xor
imul
daa
inc
cmpsb
inc
dec
dec
mov
test
cmp
out
xchg
fcoms
icebp
jbe
jns
ret
loopne
dec
mov
fsubl
testb
repz
lret
sahf
inc
bound
mov
push
xor
shrb
pushf
aam
leave
mov
add
sti
popl
sub
int
popl
or
js
inc
mov
ja
cmpsb
fs
sub
cmp
inc
lret
xchg
jg
add
mov
out
mov
mov
jmp
adc
push
cmpl
notb
sbb
inc
aam
sub
pop
testb
pop
sbb
jb
sbb
movaps
sbb
lds
scas
cmp
addr16
pop
insl
fs
test
push
jne
jp
mov
xchg
and
inc
sub
aas
mov
rcrb
stc
ret
add
fidivrl
xor
xchg
ss
and
outsb
subb
jbe
inc
roll
rolb
imul
sti
inc
ficoml
adc
hlt
xchg
push
repz
fwait
sbb
leave
aaa
cmp
jo
mov
lcall
mov
ja
pusha
movsb
add
ja
int
and
movsb
insl
sti
bound
push
pop
push
cmc
xchg
push
cs
cmc
sbb
sbb
loope
jecxz
push
and
inc
and
mov
jmp
push
inc
outsb
cltd
adc
adc
shlb
dec
and
mov
cmpsl
loopne
shl
cmpsb
jecxz
inc
pop
add
ret
dec
int
pop
imul
sahf
jg
mov
leave
push
jno
into
out
divb
jnp
add
outsb
cmp
test
push
repz
jae
jae,pn
shrl
jg
faddl
jg
or
cmc
insb
inc
call
dec
adc
dec
aad
out
jl
cmc
lods
adc
fcoml
xchg
mov
aas
pop
xchg
enter
loop
sbb
rolb
xchg
sub
push
sub
pop
leave
fs
adc
vpaddq
push
popa
sub
mov
jbe
mov
mov
push
push
in
fisubrl
in
js
add
inc
ja
dec
in
scas
stos
cmp
cmc
add
aaa
sub
cmp
inc
jbe
jnp
jmp
sbb
shrb
pop
dec
dec
adc
nop
mov
scas
sub
bndldx
adc
sti
pop
into
lret
ret
cmpl
arpl
jg
jl
adc
das
cmpsl
test
and
lahf
cmp
ret
mov
aaa
cli
hlt
insb
adc
cmp
xchg
jge
ret
push
xchg
test
jg
xchg
jl
sub
movsl
add
fucomp
lods
mov
adc
mov
daa
popf
pushf
push
mov
gs
loopne
popa
xchg
mov
scas
mov
cmpsl
stos
sbbl
xlat
imul
popa
shr
cmp
mov
pushf
cmpsl
mov
push
lea
xor
sbb
add
lock
xor
cmp
push
aad
adc
aas
mov
adc
imul
fwait
insl
out
je
cmpsl
inc
in
loopne
mov
mov
or
mov
sbb
les
shrl
or
jl
dec
mov
push
repnz
dec
icebp
add
dec
xchg
add
out
das
in
cmp
out
movsl
in
add
or
push
iret
fs
popa
xchg
loopne
sub
int3
add
sbb
mov
mov
arpl
loopne
push
and
adc
sub
int3
sbb
pop
mov
stos
in
ja
adc
ja
xchg
loopne
shl
lock
aas
mov
jmp
ret
xor
imul
into
jge
add
fcomps
fwait
iret
sub
jns
add
inc
sahf
push
stos
sbb
outsl
in
imul
add
stos
mov
into
mov
add
je
lahf
and
mov
mov
iret
pop
movsw
pop
xchg
sbb
cli
mov
stos
jge
lcall
dec
push
xchg
adc
mov
adc
pop
loop
inc
out
xchg
aas
ficompl
fidivrl
ja
push
jle
cmc
xchg
jmp
js
jmp
jns
jns
mov
sub
sub
mov
push
or
lea
dec
xchg
jmp
cmovns
cltd
fwait
inc
cmpsl
gs
outsl
je
xchg
sarb
push
cmpsl
jmp
mov
mov
jg
mov
popa
mov
xor
cld
jbe
ljmp
movsl
test
lds
jno
cwtl
inc
mov
push
testb
mov
pop
cwtl
push
xchg
fsubrs
int3
addr16
mov
or
cmp
testb
cmp
xor
mov
jno
pop
rcr
lds
nop
adc
xchg
add
jo
xchg
xor
inc
repz
frstor
xchg
shl
insl
add
frstor
push
ret
cmc
insl
into
test
mov
xchg
push
sub
stc
xor
insl
add
pop
jnp
incb
pop
out
pop
mov
leave
mov
dec
popf
adc
into
sbb
aad
push
add
lret
push
dec
inc
iret
push
lds
inc
aas
mov
dec
dec
std
jo
ja
xor
adc
pop
icebp
insl
push
sqrtps
mov
sub
jnp
and
insb
mov
aad
clc
cmp
or
jge
subb
jns
cmc
ja
leave
enter
lea
xor
cwtl
ds
pop
decb
loop
leave
jmp
dec
ljmp
js
jp
push
pop
pop
aad
sbb
in
adcl
jbe
out
int3
pop
fsubr
sbb
imulb
add
repnz
jg
fidivrl
dec
add
inc
xlat
dec
les
bound
es
push
pusha
mov
sbbb
sbb
add
fwait
inc
cmp
xchg
push
test
dec
in
jo
lock
bound
sbb
xchg
leave
add
iret
inc
pop
imull
andl
fistl
jns
sbb
push
ficompl
ret
jg
adc
or
daa
hlt
push
sub
mov
repnz
sub
or
or
mov
xchg
pushf
push
repnz
sbb
xchg
dec
fcmovnu
adc
mov
mov
and
js
lock
cmp
pop
pop
adc
or
cwtl
push
loope
add
lea
push
inc
and
les
es
pop
or
fwait
xchg
in
daa
pop
xlat
sbb
sbb
cli
xchg
ja
fcompl
xor
sub
fstpt
rep
popf
cli
xchg
jns
test
rolb
mov
inc
cmp
push
repnz
out
jbe
rcll
push
ljmp
ret
cmp
and
test
cmp
add
sub
jg
mov
sub
or
add
enter
cmpsb
dec
pop
gs
test
dec
adc
jmp
cmovle
notb
mov
ret
es
ret
add
jo
cmp
jle
sub
cmpsb
test
cmp
or
inc
aad
cmc
mov
sub
scas
ficoml
sub
cmc
fsts
sub
inc
dec
in
out
out
adc
xor
pop
xchg
loopne
mov
sarl
mov
xchg
cmp
je
adc
jbe
imul
mov
shrl
aad
insl
dec
iret
jge
cmp
sub
sub
call
sahf
outsb
movsl
out
rorl
repnz
mulb
jmp
pop
fcmovu
pop
dec
mov
cltd
mov
sbb
xchg
sub
sti
jl
sbb
add
dec
in
fildll
enter
sti
xor
aaa
outsl
and
dec
mov
adc
mov
iret
iret
out
push
outsb
xorb
mov
xorl
mov
loop
jle
int3
enter
xor
dec
xchg
push
inc
pop
mov
pop
aaa
push
pop
push
enter
pop
sarl
test
xchg
mov
mov
sbb
shlb
pop
out
std
jg
cmc
movsb
inc
daa
cwtl
je
xlat
mov
mov
lret
ret
leave
cmpsb
popa
ds
xchg
inc
mov
lea
repz
leave
sbb
push
aas
mov
jmp
std
out
pop
cmp
leave
imul
lds
sahf
js
divb
out
loopne
movsl
pop
mov
loop
lcall
add
xor
add
lock
insb
dec
lods
movsb
pop
pop
adc
inc
andw
pop
inc
insl
lock
leave
hlt
jns
shlb
sbb
je
jb
dec
cmp
jnp
mov
sub
popf
lea
addb
dec
and
jne
push
lcall
test
jle
mov
dec
xchg
mov
xchg
add
rorl
loopne
xchg
jp
mov
xchg
mov
jecxz
add
xor
popf
aad
mov
pop
fcomip
imul
xchg
scas
sub
jl
rcr
xor
lcall
dec
loopne
adc
lret
push
xrelease
mov
test
mov
cmp
cld
push
hlt
mov
xchg
xor
jno
inc
mov
call
ja
insb
mov
jl
cmp
repnz
mov
inc
push
xor
or
clc
incl
cltd
xor
mov
pop
movsb
jbe
sahf
int3
lds
cmp
test
mov
push
mov
shrl
iret
or
stos
and
pop
lock
dec
push
out
out
out
icebp
gs
pusha
sti
lret
adc
in
adc
je
inc
sub
cmc
lret
mov
sarl
repnz
imul
mov
les
int
jg
jg
jbe
xor
dec
push
shrl
pop
rcrb
in
sub
lods
mov
ffree
inc
clc
lea
push
or
out
dec
mov
out
dec
dec
test
push
nop
xchg
push
gs
pop
in
stos
gs
test
and
mov
sbb
mov
sahf
aas
or
jge
fbld
movsl
aad
and
pop
clc
pop
pop
out
lcall
into
insb
dec
int3
add
jnp
sub
add
scas
or
lcall
bound
call
lret
mov
sarb
pop
imull
sbb
je
and
fwait
push
sbb
xchg
xor
xchg
dec
dec
sub
xchg
sbb
xchg
ret
mov
xchg
insb
xchg
push
add
fsubl
imul
inc
jmp
lcall
jle
lea
das
or
aad
push
in
and
pop
or
lret
das
cli
xchg
mov
call
mov
xchg
lahf
xor
sahf
je
or
mov
pop
dec
sub
and
mov
xchg
jae
imul
sub
adc
sbb
clc
add
std
jecxz
inc
adc
push
inc
fwait
unpckhps
xor
test
fimuls
pop
adc
jecxz
leave
jge
std
mov
orb
push
subl
mov
mov
adc
xchg
mov
aaa
orb
push
ds
cvtdq2ps
cmp
cmpsl
lock
xchg
pop
bsf
inc
mov
mov
ss
mov
and
cmp
push
pop
pusha
and
or
mov
insl
sbb
cltd
pop
jmp
mov
cmc
push
loopne
jecxz
pop
inc
sub
gs
dec
pushf
cmp
mov
sbb
rcll
dec
aad
add
xchg
inc
ss
into
out
loope
push
fmul
rorl
scas
mov
inc
add
mov
fdivrs
sarb
mov
in
and
mov
mov
jecxz
mov
add
pop
or
xchg
jmp
cltd
sub
pop
enter
dec
and
push
cltd
stos
out
xchg
sbb
push
add
cmp
aam
pop
pushf
xorb
je
adc
out
sbb
sbb
iret
pop
jg
enter
or
mov
inc
jae
outsl
imul
sbb
xchg
sbb
lock
push
mov
push
xchg
scas
jg
in
mov
xchg
adc
xchg
or
mov
xchg
mov
out
hlt
call
sbb
daa
movsb
iret
mov
cmpsl
pop
fwait
xor
push
shll
notb
cltd
pop
call
pop
bswap
jg
or
ret
sbb
out
jle
xor
xchg
xor
inc
out
sub
cmp
pop
cld
shl
daa
rorb
popa
or
out
scas
inc
mov
dec
cmpl
das
or
xchg
sbb
cmp
mov
xchg
sub
inc
inc
ja
inc
push
and
push
leave
xchg
lahf
in
pop
mov
cmp
sub
iret
cmpsb
xor
std
xchg
insb
cwtl
push
shll
outsb
aaa
mov
mov
add
sbb
repz
or
mov
cli
sbb
and
lds
js
pop
stos
ret
pop
aad
aam
ret
adc
and
push
cmp
push
mov
test
aaa
test
or
jno
repnz
stc
lret
sub
insb
daa
or
aad
neg
or
in
aaa
or
dec
decb
jae
and
push
rcll
jbe
xor
adc
add
test
in
adc
lds
dec
xlat
ds
dec
cld
into
sbb
fidivrl
jg
and
in
xchg
dec
xchg
rcrl
push
bound
out
fmulp
mov
jl
add
lret
sahf
sbbb
mov
popa
popa
or
addl
dec
jae
mov
adc
pushf
xor
pop
sbb
mov
mov
cmpl
cli
mov
push
notl
lea
add
dec
and
pop
in
push
dec
inc
inc
xor
and
test
fs
mov
push
xchg
incb
or
add
sub
mov
arpl
scas
mov
cmp
daa
or
in
shll
in
scas
scas
jp
dec
pop
fsubrl
imulb
add
jp
push
movsb
fidivl
xchg
mov
enter
pop
loop
mov
mov
fidivrs
jp
imul
xchg
rcrl
dec
jo
adc
jle
inc
inc
ficompl
xor
add
lods
jmp
add
mov
jge
inc
xlat
mov
xor
sub
mov
push
rorl
cmpl
mov
or
xchg
add
shlb
pop
push
cmp
pop
sub
neg
xchg
nop
adc
nop
adc
xchg
ss
pop
addr16
loop
add
mov
inc
or
sub
fdivs
pop
xor
rcrb
test
stos
fnstsw
cli
push
outsl
add
les
out
jns
aad
outsb
fsubrl
les
lahf
push
add
mov
sub
jmp
push
mov
jmp
lea
push
nop
nop
nop
nop
nop
push
xorl
push
addl
jmp
push
xorl
pushl
push
jmp
jmp
pushl
call
jmp
lea
push
jmp
incl
push
lea
push
jmp
mov
testb
mov
jmp
sbb
not
jmp
test
jle
mov
jmp
xor
jmp
mov
xor
jmp
idiv
mov
jmp
test
jmp
je
jmp
je
jmp
movzwl
add
mov
and
push
pop
cmp
jmp
test
je
call
jmp
pop
jmp
jne
and
jmp
call
mov
xor
jmp
mov
mov
xor
mov
jmp
jle
jmp
mov
jmp
nop
mov
mov
test
jmp
je
lea
movl
push
jmp
push
jmp
and
mov
jmp
nop
push
push
pop
pushl
jmp
mov
andl
push
mov
jmp
nop
nop
nop
nop
nop
nop
push
jmp
lea
mov
jne
mov
jmp
call
jmp
pushl
pop
jmp
mov
mov
jmp
movzbl
sub
add
mov
jmp
pushl
lea
call
jmp
mov
xor
mov
lea
push
jmp
mov
movl
mov
jmp
call
test
nop
nop
nop
nop
nop
pop
jmp
nop
nop
push
andl
jmp
push
jmp
je
lea
push
jmp
je
push
pop
test
je
jmp
call
jmp
and
mov
and
incl
jmp
add
push
call
jmp
pop
pop
leave
ret
nop
nop
nop
nop
nop
add
jmp
sete
and
neg
jmp
mov
lea
sub
shr
jmp
pusha
call
mov
jmp
mov
jmp
push
subl
push
subl
jmp
and
jmp
mov
mov
xor
jmp
test
jmp
leave
ret
jmp
nop
nop
push
or
mov
sub
push
pop
cmpl
jmp
pushl
pushl
jmp
add
mov
nop
nop
nop
nop
nop
sub
jmp
push
mov
lea
push
jmp
nop
nop
nop
nop
nop
push
sub
mov
jmp
push
call
push
jmp
mov
xor
push
jmp
pop
pop
push
pop
cmpl
jne
jmp
pop
test
jmp
push
add
jmp
pop
ret
nop
nop
nop
nop
nop
mov
jmp
push
push
jmp
mov
jmp
nop
nop
push
sub
mov
push
push
nop
nop
nop
nop
nop
push
push
call
jmp
push
mov
jmp
push
mov
xor
jmp
nop
nop
nop
nop
nop
push
push
call
jmp
push
pop
cmpb
jne
pushl
jmp
mov
jmp
push
shr
jmp
mov
ret
nop
nop
nop
nop
nop
push
pop
cmpl
je
mov
mov
jmp
and
push
pop
cmpl
jmp
mov
xor
jmp
nop
nop
nop
push
or
mov
push
andl
jmp
push
push
push
jmp
pushl
call
test
jmp
add
push
pop
cmpl
je
jmp
call
mov
mov
jmp
cltd
pop
mov
jmp
call
jmp
push
pop
cmp
jmp
nop
nop
nop
nop
push
and
mov
jmp
push
jmp
pushl
call
mov
jmp
mov
jmp
or
mov
add
shr
and
jmp
pop
jne
xor
mov
jmp
pushl
jmp
mov
jmp
mov
add
lea
jmp
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
or
insb
or
nop
or
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
or
cld
or
hlt
or
in
or
in
or
or
aam
or
int3
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
or
xor
or
cmp
or
push
xlat
or
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
enter
call
fmuls
adc
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
fmuls
adc
adc
adc
adc
or
xchg
fmuls
adc
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
rcr
adc
fmuls
adc
fmuls
adc
fmuls
adc
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
add
add
test
add
lea
push
jmp
mov
test
jne
jmp
pushl
and
add
push
xorl
jmp
mov
mov
test
jle
jmp
call
test
jmp
call
sub
mov
test
jmp
xor
leave
ret
nop
nop
nop
nop
nop
add
jmp
mov
mov
add
mov
jmp
leave
ret
nop
nop
nop
nop
nop
mov
sub
jmp
pop
lea
push
jmp
mov
mov
add
jmp
je
lea
push
push
addl
jmp
add
add
jmp
popa
jmp
nop
nop
nop
nop
nop
sub
sub
add
mov
jmp
je
call
test
pop
jmp
lea
mov
test
jmp
pushl
push
jmp
mov
sub
add
jmp
jne
sub
decl
jne
jmp
je
push
xorl
jmp
je
test
jmp
call
jmp
add
decl
jne
add
jmp
mov
jmp
push
pop
pop
lea
jmp
je
movzwl
jmp
jmp
pushl
mov
sub
jmp
push
pop
cmpl
jne
pop
jmp
test
jle
add
mov
jmp
push
jmp
mov
add
jmp
pushl
jmp
pop
push
pop
pop
nop
nop
nop
nop
nop
leave
ret
nop
nop
nop
nop
nop
add
jmp
call
sub
pop
jmp
add
jmp
push
push
jmp
push
pushl
call
jmp
call
push
jmp
add
jmp
lea
jmp
test
je
mov
jmp
push
call
push
push
jmp
dec
jmp
jne
mov
test
nop
nop
nop
nop
nop
je
jmp
add
add
jmp
add
jmp
push
call
add
push
xorl
jmp
jne
mov
nop
nop
nop
nop
nop
test
jle
or
mov
jmp
add
mov
sub
jmp
push
pop
cmpl
jne
jmp
push
xorl
push
call
jmp
jmp
shl
jmp
mov
mov
jmp
jmp
push
pop
pop
pop
jmp
lea
and
add
push
jmp
pop
pop
jmp
push
xorl
jmp
shr
or
xor
add
jmp
andb
incl
jmp
jmp
pop
ret
push
pop
jmp
nop
nop
nop
nop
nop
pushl
jmp
dec
jmp
mov
jmp
push
call
mov
jmp
jne
pop
pop
jmp
push
jmp
pop
leave
ret
nop
nop
nop
nop
nop
pop
movzbl
incl
jmp
test
je
pushl
jmp
and
mov
and
sub
add
add
jmp
add
jmp
shr
je
test
jmp
pushl
push
jmp
je
mov
or
mov
jmp
push
call
nop
nop
nop
nop
nop
add
add
test
lea
jmp
sub
mov
jmp
jne
call
push
jmp
mov
incl
nop
nop
nop
nop
nop
dec
jne
jmp
jmp
pop
pop
jmp
mov
mov
jmp
pop
pop
jmp
push
pop
jmp
call
jmp
pop
pop
ret
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
test
pop
jne
push
pop
cmp
nop
nop
nop
nop
nop
jne
lea
nop
nop
nop
nop
nop
push
call
test
pop
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
mov
or
mov
nop
nop
nop
nop
nop
sub
mov
mov
incl
nop
nop
nop
nop
nop
dec
nop
nop
nop
nop
nop
jne
jmp
sub
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
sub
add
sub
mov
shl
nop
nop
nop
nop
nop
movzbl
add
nop
nop
nop
nop
nop
incl
nop
nop
nop
nop
nop
or
mov
lea
push
nop
nop
nop
nop
nop
call
push
pop
cmp
nop
nop
nop
nop
nop
pop
jb
nop
nop
nop
nop
nop
sub
add
nop
nop
nop
nop
nop
push
pop
cmp
jb
sub
add
nop
nop
nop
nop
nop
push
pop
cmp
nop
nop
nop
nop
nop
jae
sub
add
add
nop
nop
nop
nop
nop
test
je
mov
xor
mov
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
mov
mov
incl
nop
nop
nop
nop
nop
dec
jne
mov
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
mov
mov
mov
nop
nop
nop
nop
nop
incl
nop
nop
nop
nop
nop
incl
mov
push
pop
cmpl
nop
nop
nop
nop
nop
je
nop
nop
nop
nop
nop
mov
pop
sub
nop
nop
nop
nop
nop
pop
pop
leave
ret
nop
nop
nop
nop
nop
add
add
add
loopne
add
add
add
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
add
add
or
lods
loopne
add
fisttps
add
or
and
or
in
or
jl
or
mov
or
pushf
loopne
add
add
add
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
add
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
mov
je
popa
insb
inc
jb
add
je
popa
insb
inc
insb
insb
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
incl
inc
gs
gs
je
jo
imul
mov
push
popa
imul
inc
imul
add
xchg
add
jo
je
push
popa
addr16
add
addb
jb
outsb
jae
popa
je
dec
gs
popa
add
xchg
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
inc
push
xor
cs
insb
cmpsl
inc
or
int3
ret
or
adc
adc
addb
push
add
test
add
add
add
rolb
add
add
xchg
add
adc
mov
cs
add
xor
addb
add
add
add
out
xchg
in
xor
add
rorb
add
add
sbb
stc
and
add
add
addb
add
add
mov
pop
add
andnps
dec
mov
adc
add
cmovle
push
lock
jae
cwtl
and
or
fs
cld
dec
cmpsl
dec
add
imul
jb
je
arpl
imul
gs
xor
cs
insb
nop
int
add
add
add
ss
xor
cmpl
repz
test
aas
jno
adc
jg
ss
add
lods
cmp
ss
ss
aaa
call
xor
ss
jbe
push
xor
cmp
cmp
cmp
aaa
fbstp
in
sti
ss
aaa
sub
das
xor
ret
xor
nop
cmp
cmp
cmp
cmp
cmp
sub
sub
xor
xor
cmp
cmpb
cmp
cli
cmp
cmp
xor
xor
push
cmp
lods
cmp
sarb
cmp
cmp
cmp
cmp
cmp
cmp
sub
sub
add
add
inc
push
daa
and
pop
sub
outsl
pop
imul
jb
addr16
dec
jns
sub
pop
jp
gs
addr16
insl
jno
adcl
je
pop
aaa
sub
js
outsl
xor
push
sub
cmp
jle
imul
jno
addr16
inc
sub
subb
jno
jp
inc
jnp
and
jg
jb
and
dec
addr16
jl
cmp
inc
aaa
xor
pop
add
jae
push
jnp
ds
das
pop
arpl
inc
dec
ss
imul
xor
gs
inc
inc
dec
dec
pop
sub
dec
pop
push
insb
daa
cmp
and
xor
jle
inc
andb
jl
adc
dec
imul
cmp
dec
xor
subl
pusha
inc
aas
cmp
xor
dec
jle
push
cmp
xor
inc
dec
dec
jno
inc
jnp
jge
push
inc
push
orl
sub
add
jge
popa
push
and
pusha
outsl
es
orl
ds
xor
daa
dec
imul
cmp
xor
cmp
ss
jb
xor
xor
and
push
jbe
insb
pop
jbe
pop
daa
jno
arpl
xor
jp
je
sub
cmp
jg
push
xor
add
inc
inc
popa
sti
xorps
pop
and
ss
xor
je
cmp
arpl
dec
pop
inc
aas
push
gs
inc
inc
xor
ss
xor
xor
inc
cmp
xor
xor
inc
inc
cmp
inc
xor
inc
ss
xor
aaa
ss
xor
xor
xor
xor
xor
inc
inc
inc
inc
