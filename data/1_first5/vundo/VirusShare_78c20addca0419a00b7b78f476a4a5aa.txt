xor
ror
mov
mov
ror
sub
mov
mov
push
lea
jmp
push
jmp
jmp
addl
jmp
sub
mov
push
jmp
add
cmpl
jmp
add
add
add
add
int
mov
xor
mov
and
sub
mov
dec
mov
push
jmp
mov
push
mov
movl
mov
push
dec
xor
shr
xor
mov
jmp
into
mov
push
push
call
jmp
cmpl
jne
jmp
mov
lea
shr
mov
mov
shr
jmp
xor
mov
add
add
push
jmp
push
mov
mov
mov
jmp
push
add
mov
sub
shr
jmp
push
mov
mov
movl
movl
jmp
push
jmp
push
push
call
inc
leave
call
subl
push
jmp
pop
push
call
subl
push
jmp
leave
int3
push
jmp
call
nop
addl
call
test
je
add
ret
ret
add
add
add
jecxz
dec
inc
sub
dec
sub
mov
movzwl
movzwl
add
jmp
test
lea
jle
or
shr
mov
jmp
jmp
je
jmp
cmpb
jne
nop
nop
jmp
mov
mov
mov
mov
add
shr
sub
dec
mov
sub
test
jmp
sti
mov
testb
pop
add
add
ret
movzbl
add
mov
lea
jmp
jne
movzbl
add
mov
lea
sub
xor
dec
mov
shr
and
add
jmp
sub
mov
or
mov
add
add
xor
cmp
mov
jmp
lea
jmp
push
push
push
lea
xor
add
dec
mov
add
jmp
shr
lea
lea
cltd
and
add
sar
jmp
sub
jmp
add
push
jmp
push
sub
or
mov
mov
jmp
je
add
ret
mov
jmp
and
lea
mov
mov
add
jmp
mov
and
shl
mov
nop
push
nop
jmp
pushl
jmp
sub
test
mov
mov
mov
movl
jle
jmp
push
call
xor
inc
or
or
mov
cmp
jmp
sub
jmp
add
xor
or
inc
mov
jmp
add
add
mov
call
jmp
call
ret
add
add
add
push
jmp
push
call
leave
jmp
push
leave
dec
xorl
push
jmp
jmp
jmp
push
call
subl
push
push
jmp
call
call
push
call
push
addl
call
mov
jmp
ret
nop
nop
nop
nop
nop
test
jne
push
jmp
ret
subl
call
ret
xor
mov
mov
or
sub
xor
inc
or
mov
jmp
call
lea
jmp
nop
movzwl
xor
xor
shl
ror
sub
mov
and
cmp
jne
and
add
add
jmp
add
mov
test
je
push
jmp
jne
xor
ret
ret
add
add
add
incb
mov
jmp
mov
jle
jmp
test
jle
shl
mov
dec
rol
mov
jmp
sub
add
mov
test
jne
add
jmp
add
add
sub
jne
add
jmp
add
add
add
pop
and
sub
xor
mov
mov
test
je
jmp
addl
call
mov
xor
rol
ror
shl
and
mov
jmp
call
add
pusha
mov
call
popa
jmp
mov
ret
add
add
add
sub
out
dec
ror
mov
shr
and
add
test
jne
mov
mov
pop
jmp
add
in
or
outsb
push
das
insl
shr
and
or
mov
sub
push
push
push
and
and
add
sub
or
mov
test
mov
jmp
or
mov
sub
test
jne
push
jmp
ret
dec
push
leave
jmp
push
push
nop
subl
call
shr
sub
or
inc
mov
push
jmp
and
cmpw
je
jmp
lea
inc
add
mov
jmp
ret
add
add
add
into
sub
jmp
add
xor
shl
mov
sub
jmp
movl
mov
jne
xor
jmp
sub
mov
sub
test
jne
or
xor
ror
mov
mov
movzbl
add
jmp
mov
dec
mov
lea
jmp
test
je
inc
mov
jmp
add
jmp
mov
inc
mov
mov
mov
mov
dec
mov
add
mov
mov
mov
jmp
je
or
shl
sub
mov
mov
test
jne
and
shr
sub
xor
mov
jmp
lea
xor
mov
test
jmp
ret
and
ror
mov
inc
mov
test
jne
add
ret
xor
add
add
mov
jmp
add
xor
ror
mov
jmp
add
add
jmp
pop
push
inc
pop
push
ret
addl
call
test
je
jmp
xchg
das
push
ret
push
jmp
push
call
push
push
addl
call
test
jmp
add
jmp
int3
ret
call
dec
call
dec
subl
push
jmp
call
push
jmp
subl
jmp
ret
push
jmp
call
pop
ret
push
push
addl
call
test
je
jmp
add
add
add
add
jmp
push
mov
and
shr
and
sub
mov
sub
cmpl
lea
je
push
jmp
mov
jmp
add
add
add
add
adc
test
jmp
add
add
cmp
jne
inc
and
and
dec
sub
mov
jmp
sub
test
mov
jne
movzbl
add
jmp
jmp
and
shl
add
inc
sub
mov
mov
jmp
jle
or
mov
lea
sub
jmp
push
jmp
push
jmp
call
push
jmp
call
addl
call
mov
inc
mov
add
and
mov
lea
push
push
jmp
call
inc
inc
ret
jmp
leave
call
addl
jmp
mov
xor
and
cmp
sete
mov
ret
add
add
add
repz
pop
add
add
pop
and
jmp
add
jne
add
ret
mov
xor
test
je
jmp
push
sub
mov
add
xor
mov
or
xor
xor
and
mov
rep
movzwl
ror
mov
mov
add
add
jmp
dec
andl
cmp
jne
pop
pop
jmp
mov
pusha
popa
add
shr
mov
lea
add
sub
or
mov
jmp
push
add
rol
add
xor
mov
jmp
sub
add
jmp
pop
mov
pop
ret
jmp
add
test
je
jns
movzwl
jmp
push
push
call
push
jmp
call
leave
push
inc
int3
xorl
mov
call
push
jmp
jmp
dec
push
call
dec
dec
xorl
mov
call
nop
nop
nop
nop
nop
push
jmp
pop
call
jmp
push
int3
ret
addl
mov
call
push
jmp
inc
call
call
addl
mov
call
add
push
jmp
call
call
addl
mov
jmp
shr
and
add
test
mov
je
sub
add
xor
mov
jmp
test
jne
cmp
jmp
cmp
mov
mov
jl
ror
rol
add
or
mov
mov
mov
push
jmp
pop
mov
pop
ret
mov
ret
add
add
add
loope
add
mov
lea
push
jmp
jne
mov
sub
sub
jne
test
mov
mov
nop
nop
nop
nop
nop
jle
or
mov
ror
mov
rol
mov
add
add
sub
jne
jmp
call
test
je
ret
push
jmp
call
subl
call
test
mov
jmp
sub
test
jne
movzbl
add
mov
lea
jmp
sub
jbe
test
ret
add
pop
sbb
mov
xor
pop
jmp
jmp
popa
add
push
add
mov
ror
mov
and
inc
mov
call
jmp
pop
sahf
mov
adc
add
mov
mov
mov
add
test
jne
jmp
movsb
push
sub
sub
add
or
mov
shr
and
add
test
jmp
shr
or
rol
and
shr
mov
pop
ret
rol
add
mov
movzwl
shl
shr
mov
mov
jmp
add
mov
or
mov
call
jmp
add
cmpl
jne
pop
pop
pop
mov
pop
ret
add
add
add
mov
add
shl
mov
mov
push
or
inc
and
sub
xor
mov
ror
jmp
je
push
jmp
inc
push
jmp
inc
call
leave
leave
pop
subl
push
jmp
push
push
inc
nop
addl
push
jmp
call
call
push
xorl
call
jmp
je
xor
movl
mov
shl
or
mov
jmp
pop
add
pop
xor
dec
inc
inc
xor
mov
pop
ret
add
add
add
jmp
call
push
subl
push
jmp
jmp
push
inc
subl
push
call
jmp
dec
imul
inc
cld
pop
and
dec
sub
or
mov
xor
add
sub
jne
jmp
cmp
je
add
ret
push
jmp
dec
subl
jmp
jg
pop
sub
test
jne
movzbl
add
jmp
mov
je
ljmp
ret
call
and
mov
call
movl
lea
jmp
pop
pop
pop
add
mov
pop
ret
add
add
add
jmp
jmp
subl
push
jmp
jmp
push
push
push
jmp
xorl
call
test
je
add
ret
pop
jmp
in
pop
lea
sub
xor
mov
mov
shr
and
add
subl
lea
jne
test
jmp
es
call
mov
or
dec
dec
shr
and
mov
xor
or
and
mov
mov
mov
mov
cmp
jne
jmp
sbb
pusha
popa
add
pop
inc
or
mov
pop
ret
add
add
add
test
add
shr
or
dec
mov
sub
jmp
dec
sub
mov
add
pop
mov
mov
pop
mov
pop
sub
inc
inc
add
mov
jmp
mov
mov
add
jmp
movb
add
nop
nop
nop
nop
nop
jmp
movzbl
sub
sub
mov
and
add
add
shr
nop
nop
nop
nop
nop
mov
mov
je
test
je
xor
ror
xor
add
mov
sub
nop
nop
nop
nop
nop
add
sub
mov
mov
jne
xor
mov
nop
nop
nop
nop
nop
mov
mov
movl
jmp
movl
mov
movl
jmp
nop
nop
nop
nop
nop
lea
call
cmpl
nop
nop
nop
nop
nop
jne
cmp
jne
call
test
mov
je
xor
add
mov
nop
nop
nop
nop
nop
sub
add
nop
nop
nop
nop
nop
sub
mov
mov
jne
mov
jmp
nop
nop
nop
nop
nop
sub
jmp
sub
sub
add
dec
xor
or
mov
movzbl
nop
nop
nop
nop
nop
shl
add
add
lea
xor
xor
mov
mov
call
nop
nop
nop
nop
nop
cmp
nop
nop
nop
nop
nop
jb
add
cmp
jb
nop
nop
nop
nop
nop
add
cmp
jae
add
test
mov
je
nop
nop
nop
nop
nop
lea
rol
mov
jmp
mov
mov
add
sub
nop
nop
nop
nop
nop
jne
mov
mov
sub
shr
and
xor
mov
and
add
xor
ror
mov
or
inc
and
inc
mov
mov
movl
jmp
mov
nop
nop
nop
nop
nop
mov
add
add
mov
movl
nop
nop
nop
nop
nop
mov
cmpl
je
pop
nop
nop
nop
nop
nop
dec
and
rol
ror
add
mov
sub
pop
pop
shl
mov
pop
ret
add
pusha
add
loop
add
add
add
les
add
add
add
add
or
add
lock
add
loop
add
add
add
les
add
add
add
add
or
add
add
add
add
inc
insb
outsl
jae
inc
jb
jbe
jb
add
sub
push
inc
js
jae
jae
add
inc
jb
popa
je
inc
imul
js
je
jb
arpl
jae
add
adc
push
jb
outsb
je
insb
addr16
js
add
adc
add
add
add
add
xor
add
add
add
pop
mov
add
or
add
add
add
xor
movsb
xor
push
ss
cmp
cmp
mov
cmp
adc
idivb
in
xor
xor
cmp
imul
adc
xor
cmp
pop
cmp
xor
into
aaa
xlat
aaa
fdivl
adc
add
mov
add
add
pop
xor
xor
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
dec
add
pop
lret
leave
push
lds
insl
pop
cltd
mov
pop
and
dec
fstps
pusha
jecxz
mov
mov
in
jmp
test
sub
sbb
imul
test
pop
call
roll
insl
inc
sbb
sahf
mov
test
lcall
inc
popf
dec
test
sbb
mov
mov
aas
loope
fbstp
imul
pop
adc
adc
lret
movsb
push
pop
mov
inc
adc
add
cmp
pop
nop
mulb
test
or
xor
sub
add
pusha
cli
add
adc
jge
pusha
shrl
pop
and
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
.byte
hlt
nop
push
