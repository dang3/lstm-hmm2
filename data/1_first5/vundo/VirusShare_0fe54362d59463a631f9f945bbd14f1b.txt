pusha
call
mov
es
add
popa
jmp
sbb
cs
ret
arpl
shrl
xchg
loopne
xchg
cltd
xchg
jae
fisttpll
jnp
and
in
ss
fsubs
icebp
or
sahf
mov
out
xor
std
sub
sub
inc
sar
add
hlt
test
ljmp
psrld
aam
cmpsb
sbb
cld
mov
mov
lods
sbb
fdivp
shrb
push
jmp
inc
cmp
inc
rcrl
mov
jecxz
int
sub
jmp
adc
adc
out
or
cli
loope
sti
dec
movsl
mov
loop
add
jno
jmp
or
xor
mov
xchg
negl
leave
add
push
or
sub
mov
pop
push
xor
popf
dec
pop
cmp
jl
mov
lock
and
jmp
movsb
inc
imulb
int3
dec
pop
jne
scas
bnd
push
mov
sbb
jecxz
cs
inc
or
dec
cmp
shrl
xchg
loopne
xchg
cltd
xchg
jae
fisttpll
jnp
loope
and
bound
in
ss
fsubs
icebp
or
sahf
mov
out
xor
sub
sbbl
incl
dec
test
ljmp
psrld
aam
cmpsb
sbb
adc
add
cmp
dec
jo
mov
lods
sbb
fdivp
shrb
stc
je
inc
cmp
pushf
fldt
mov
jecxz
int
sub
jmp
adc
adc
out
pop
or
cli
loope
sti
dec
movsl
mov
loop
add
out
jno
or
xor
mov
xchg
negl
lds
or
and
clc
pop
push
sub
mov
jmp
mov
jmp
pop
cmp
jl
jmp
mov
lock
and
movsb
inc
imulb
int3
dec
pop
jne
scas
bnd
push
mov
sbb
cs
inc
arpl
shrl
xchg
jmp
loopne
inc
iret
xchg
cltd
xchg
jae
fisttpll
icebp
mov
fbld
in
ss
fsubs
icebp
or
sahf
mov
out
xor
sub
sbbl
dec
test
ljmp
jmp
mov
sbb
cld
mov
mov
lods
sbb
fdivp
shrb
cmp
je
inc
cmp
pushf
fldt
mov
jecxz
int
sub
jmp
adc
cmp
adc
adc
out
or
cli
loope
sti
dec
movsl
mov
loop
add
out
jno
or
xor
mov
xchg
negl
lds
or
and
clc
pop
push
rclb
xor
popf
dec
pop
cmp
jl
mov
cmp
jmp
cwtl
daa
or
inc
scas
bnd
push
mov
sbb
cs
inc
arpl
inc
stos
shr
cmp
loopne
xchg
cltd
xchg
jae
fucomp
lock
popa
mov
and
in
ss
fsubs
icebp
or
sahf
mov
out
xor
sub
sbbl
dec
test
mov
ljmp
psrld
aam
cmpsb
sbb
add
jmp
imul
lods
sbb
fdivp
shrb
stc
je
inc
cmp
pushf
fldt
mov
jecxz
int
sub
jmp
adc
adc
out
or
cli
loope
jmp
jmp
sti
dec
movsl
mov
loop
add
jno
or
xor
mov
mov
xchg
negl
sbb
lds
or
and
clc
pop
push
sub
mov
pop
push
xor
popf
dec
jmp
pop
cmp
jl
mov
lock
and
movsb
inc
imulb
int3
dec
pop
jne
scas
bnd
jne
jmp
mov
fiaddl
pop
cs
inc
arpl
shrl
xchg
loopne
xchg
cltd
xchg
jae
fisttpll
jnp
and
in
ss
fsubs
icebp
or
sahf
mov
jmp
out
xor
sub
sbbl
dec
ret
push
mov
sub
push
push
xor
mov
mov
mov
or
xor
or
and
shr
add
or
or
xor
inc
add
sub
xor
or
sub
add
ror
ror
shl
add
xor
and
dec
jne
mov
mov
pop
mov
rorl
and
roll
or
roll
add
add
leave
ret
push
mov
sub
push
push
jmp
pop
rcrl
mov
sbb
xor
mov
mov
mov
or
ror
and
add
push
rorb
mov
rorl
add
andl
pop
xor
and
or
add
xor
sub
sub
and
sub
sub
dec
jne
mov
mov
mov
or
add
movl
mov
push
mov
pop
jmp
sbb
out
or
cli
loope
or
jmp
cmp
dec
movsl
mov
loop
add
cld
leave
ret
push
mov
sub
push
push
xor
mov
mov
mov
add
inc
and
or
sub
xor
xor
or
xor
xor
and
rol
sub
inc
xor
and
xor
or
xor
or
push
add
push
addb
pop
add
add
subb
pop
add
add
and
dec
jne
mov
mov
mov
rolb
and
rolb
or
orl
add
pop
xor
leave
ret
push
mov
sub
push
push
jmp
pop
out
add
xor
mov
mov
mov
add
sub
add
rol
or
sub
xor
add
sub
add
and
and
dec
jne
mov
mov
and
movb
or
mov
add
pop
sub
leave
ret
call
mov
fnclex
ss
cmp
ljmp
sbb
inc
dec
test
mov
std
adc
pop
push
ljmp
push
inc
test
out
mov
fcmove
hlt
aaa
repz
add
jo
jge
jns
and
mov
mov
jecxz
xchg
jp
sbb
xchg
xchg
rclb
pusha
jle
mov
fsts
mov
scas
leave
subl
inc
jmp
dec
repnz
mov
notl
mov
mov
and
cli
imul
jb
clc
loope
mov
mov
imulb
add
jne
and
es
ret
std
sub
sbb
cltd
sahf
daa
push
mov
aas
add
xor
lcall
sub
xchg
mov
out
sti
cmp
xlat
or
sub
iret
mov
sub
pop
mov
lds
testl
mov
pop
out
mov
sbb
jbe
xor
cmp
sti
cmp
movsl
xchg
outsb
xor
aaa
shlb
les
scas
popa
fdivrs
dec
fldenv
lods
lock
or
int3
or
rcrb
inc
movsb
pop
add
mov
and
ljmp
xchg
sarb
jle
call
inc
pusha
loopne
stos
jg
or
stos
sub
jmp
dec
jo
push
mov
aas
xchg
decl
jp
cli
mov
cmpsl
jae
and
push
mov
pop
stos
lahf
stos
popf
cmp
nop
add
xchg
je
leave
sahf
mov
icebp
test
sahf
mov
gs
mulb
mov
and
icebp
xchg
pop
insl
cmp
push
fistpl
aaa
jnp
in
sarb
filds
mov
xlat
outsl
push
mov
enter
cmc
sti
sub
jae
mov
jmpw
pop
ljmp
lock
fildl
jne
dec
push
sarl
lcall
mov
mov
cs
xchg
push
sbb
xchg
pop
repnz
stc
sub
mov
fwait
mov
jl
cmp
mov
dec
inc
xchg
push
addr16
insl
in
out
pop
popa
cmp
jmp
int3
inc
fucomi
repz
fistps
call
inc
mov
subb
add
pop
or
movsb
mov
push
jo
push
xchg
cld
aas
gs
or
pop
loopne
mov
lods
das
mov
clc
repz
push
add
scas
leave
jb
lcall
push
xchg
jb
fsub
mov
cmpxchg
fdivl
daa
mov
mov
mov
aas
mov
loopne
mov
dec
sbb
imul
std
and
shlb
and
push
je
sti
pop
fsubs
fcomip
mov
arpl
xorl
adc
cmc
nop
adc
gs
or
ffreep
lods
popa
xor
xorl
mov
aaa
mov
shlb
mov
fidivl
out
aad
pop
pop
fcoms
int3
test
sub
jg
movl
je
jmp
inc
jbe
mov
dec
bound
ja
lock
sub
sbb
outsl
clc
lods
stos
sbb
in
sub
mov
xchg
push
ret
pop
xchg
push
pushf
clc
ret
and
loope
cs
fstpl
mov
mov
push
ret
push
xor
clc
ret
mov
mov
lea
jmp
xor
mov
fcompl
dec
push
xor
fcoml
pop
add
inc
jbe
jo
js
loopne
mov
je
jne
jb
fdivl
in
clc
in
cmc
fsubrl
jo
mov
cli
insl
jb
and
mov
sbb
jae
push
test
pop
fadds
jo
pop
mov
mov
nop
adc
push
fwait
lods
outsb
cltd
xor
mov
and
fistl
mov
in
sbb
sbb
xchg
adc
enter
sbb
stos
mov
mov
sub
dec
sbbl
fnsave
or
dec
test
fldt
sti
test
jmp
dec
adc
repnz
mov
lcall
adc
testl
push
out
pop
push
mov
pop
mov
jmp
adc
xor
or
imul
mov
test
jmp
xor
dec
clc
imul
out
jp
cld
lcall
ds
enter
mov
push
icebp
cmp
xchg
jbe
inc
adcl
dec
push
imul
adc
inc
test
pusha
inc
decl
fsts
xor
add
fisubrl
mov
pop
pmulhuw
popa
out
data16
pop
aas
jnp
xchg
cmpsl
mov
inc
mov
imul
aam
inc
mov
push
or
movsl
icebp
pop
push
test
cmp
arpl
cli
scas
or
or
push
stos
pushl
push
jno
adc
iret
or
ja
jl
adc
jae
adc
mov
fcmovnbe
pop
jo
lock
loop
es
mov
pusha
ds
les
add
jl
ja
adc
sub
hlt
inc
lea
insb
push
jb
sahf
mov
sub
es
push
xor
jle
into
push
arpl
ret
or
cmp
movsb
jle
xlat
or
hlt
out
xor
pop
loop
cmpsb
lods
enter
sub
jp
rcr
mov
clc
dec
pop
fcompl
lret
cmp
bound
push
add
loopne
das
adc
adc
jnp
clc
test
push
insl
mov
je
sub
daa
data16
std
sbbb
jo
repnz
movsb
mov
lcall
adc
cmp
push
out
mov
popa
mov
push
cmp
sti
add
jp
adc
cmp
inc
outsb
mov
jmp
sbb
fidivs
and
and
int
and
pusha
pop
jl
insb
inc
stos
or
icebp
pusha
stos
inc
jmp
xchg
fadds
rcr
xor
out
or
pop
addr16
daa
leave
adc
sahf
mov
das
test
ret
xchg
xchg
sti
xor
pop
icebp
sub
xchg
adc
out
lret
setge
shll
arpl
daa
and
popa
dec
and
xor
rcl
ret
nop
xor
or
and
stos
daa
fwait
lret
pusha
imul
ljmp
cmp
outsl
and
mov
aad
pop
sub
or
fists
inc
lds
aaa
rcll
mov
gs
mov
cmc
std
lods
dec
shl
iret
dec
inc
and
cmp
xor
les
jecxz
cltd
sbb
nop
ret
jmp
mov
test
xor
out
outsb
insb
pop
inc
pop
push
mov
and
dec
inc
out
adc
lds
fsubs
es
rcrl
and
cld
mov
xor
outsb
mov
mov
lds
arpl
sbb
test
sbb
sahf
mov
cmp
lret
dec
fdivrp
pop
ret
pop
pop
xor
out
call
pop
mov
insl
xor
mov
xor
xor
or
add
pusha
into
jo
mov
and
xor
mov
or
fsts
xor
and
adc
inc
movsb
cmp
push
cmp
mov
adc
push
push
jbe
jp
mov
xor
mov
test
cmpb
pop
das
js
cmp
or
fistpl
jo
outsl
mov
push
xor
pusha
dec
mov
xlat
les
jbe
jl
inc
ljmp
pop
rorl
jbe
int
push
cmp
sahf
loopne
in
jne
cmp
js
push
mov
mov
push
pop
mov
and
sub
negb
fcomp
push
push
ss
jb
out
xor
loop
mov
cmpsb
cwtl
leave
add
in
into
jae
pusha
adc
adc
lret
enter
sbb
and
fs
mov
adc
lods
out
mov
and
xor
add
cmp
jae
cld
pop
scas
jo
mov
fsubr
dec
lcall
push
shlb
xchg
or
or
dec
shrb
cmc
push
mov
out
mov
push
jo
pop
push
popf
dec
mov
sbb
iret
pop
hlt
mov
jg
dec
clc
push
jae
loope
push
jo
sub
xor
mov
cmpb
sub
fadds
jecxz
or
dec
pusha
out
mov
and
push
js
test
pop
fisubrl
test
add
xor
xabort
xor
adc
mov
adc
lock
rorl
jl
pop
cs
mull
inc
ljmp
push
sbb
fcmovnb
sub
push
hlt
iret
xchg
push
mov
mov
mov
aaa
dec
in
xor
xchg
ret
xchg
popa
jp
or
into
jle
mov
leave
ss
mov
int3
xor
out
leave
enter
sub
add
rcr
sub
mov
js
movw
pop
push
test
jp
das
add
jne
pop
add
aas
aad
decl
fsts
adc
xchg
subl
ficomps
mov
jns
jmp
outsl
adc
mov
mov
fadds
add
jae
or
cwtl
lahf
adc
ljmp
cld
xor
test
ljmp
fs
mov
lcall
adc
inc
xchg
movsb
sbb
push
mov
out
incb
jmp
repnz
sbb
add
pop
sbb
jp
xor
jmp
adc
ljmp
hlt
js
repz
or
fdiv
outsb
lret
ret
call
and
pop
lods
dec
popa
call
pop
fnstsw
fucomp
mov
sbb
xchg
sub
pop
xchg
adc
mov
fwait
int
sti
aas
pop
mov
adc
inc
add
push
or
ret
xchg
sahf
outsb
xor
xorb
lods
mov
or
inc
jmp
fxch
emms
aad
ret
int
fistpl
and
cmp
cmp
shrl
xchg
xchg
pop
pop
cmp
inc
mov
lds
imul
pop
jae
loop
mov
fcomi
jo
imul
mov
rcr
outsb
push
pusha
mov
add
enter
rcrb
lock
push
fildl
jbe
js
jne
dec
inc
sarl
mov
xchg
out
mov
push
xchg
adc
les
data16
in
ljmp
fs
cmpsb
mov
pushf
lcall
mov
popf
adc
sahf
inc
xor
mulb
mov
sti
mov
push
enter
adc
dec
push
scas
adc
xor
test
sub
ljmp
xor
js
mov
out
xor
cmc
jl
adc
xchg
add
aas
out
clc
mov
jp
add
repz
lcall
aad
cltd
mov
imul
cli
aad
cmp
push
jl
in
pop
fsubs
shlb
or
mov
ret
scas
jecxz
pop
mov
jo
inc
jmp
mov
pop
sar
cmc
arpl
lods
imul
and
pop
les
roll
xchg
xchg
mov
fidivrs
xlat
pop
inc
push
cmp
fistpl
or
jae
stos
xor
sub
testl
aaa
out
pop
hlt
fcomps
pop
xchg
and
xor
cld
pop
adc
shlb
xchg
fstps
call
mov
jns
or
sbb
mov
xor
and
mov
scas
jo
fsubs
fsubrs
icebp
in
ljmp
repnz
push
adc
fnstenv
mov
jecxz
andl
jmp
add
inc
repnz
adc
cmp
mov
bound
and
sbb
cmp
insb
dec
sahf
loopne
and
dec
cmp
lret
push
push
adc
mov
push
mov
loop
and
xchg
mov
sbb
add
adc
lret
xorl
lods
nop
orb
mov
loop
int
mov
ljmp
fcoml
sbb
adc
sbb
jg
negl
pop
inc
jg
dec
inc
fbstp
out
jl
push
ljmp
xlat
or
cmp
call
xchg
adc
jmp
loopne
aaa
sti
xchg
lea
cmp
in
lcall
add
xor
fstpt
jecxz
jns
jo
push
or
and
jmp
cmp
inc
jle
cld
out
jb
cmp
stos
mov
nop
mov
cmpsb
cwtl
ficoml
push
pusha
and
adc
int3
clc
data16
loopne
daa
bound
pushf
mov
sub
push
call
or
jp
mov
test
cwtl
cmc
pushf
cld
cmp
scas
jo
icebp
mov
fdivr
fcomps
fdivr
xchg
fs
inc
mov
lcall
adc
jne
test
dec
jnp
mov
push
popa
sbb
pop
cli
call
pop
cmp
dec
xlat
fbstp
cmp
adc
add
iret
add
or
lods
sar
pop
or
cmc
pop
in
push
and
imul
daa
sbb
pop
insb
and
xchg
mov
and
cli
sbb
pushf
mov
daa
add
icebp
push
xbegin
lret
cli
mov
adc
test
xchg
jns
jl
sbb
xchg
xor
inc
add
insl
push
sbb
lods
fs
pop
and
push
hlt
push
add
outsl
rclb
mov
lds
push
push
cld
ret
and
or
or
mov
jae
aas
pop
aaa
push
popa
cmc
out
xor
xor
mov
inc
sub
ficomps
in
mov
call
and
iret
pop
loope
jmp
and
filds
mov
out
sub
inc
js
fsincos
dec
or
shlb
daa
adc
test
jmp
cld
fnstcw
mov
fsubs
fwait
sub
icebp
fbld
jg
xchg
or
je
pop
mov
cmp
test
dec
fisttps
fildl
add
jle
repnz
mov
push
dec
sub
mov
add
mov
inc
pop
xchg
mov
mov
fwait
outsl
add
aas
cmp
push
sbb
adc
push
outsb
aam
xor
ljmp
jns
xchg
and
shr
add
idiv
test
mov
gs
or
out
cwtl
mov
jns
lock
mov
movsb
aas
pop
fldt
icebp
neg
cmp
mov
das
out
lods
push
mov
fisttpl
adc
mov
or
fcomps
cmp
xor
xor
popa
mov
stc
int3
ljmp
pushf
pop
negb
xor
mov
push
sub
lods
sbb
loopne
xchg
std
push
aad
pop
clc
fnstenv
loop
orl
xchg
sbb
loop
add
cwtl
hlt
mov
xchg
test
pop
arpl
mov
xchg
shrb
mov
lcall
mov
pop
xchg
pop
mov
xor
aad
movsl
add
test
cltd
ljmp
packsswb
pop
mov
nop
rorl
inc
test
push
call
int
into
shlb
inc
fdivrs
sbb
push
cmpsb
jbe
insl
cli
aas
cmp
andl
adc
push
push
aam
ss
xor
idivb
push
ja
popf
adc
push
add
js
test
movsb
popa
pushf
or
bound
mov
mov
std
jnp
lock
mov
movsb
and
inc
mov
ret
stc
repnz
dec
dec
out
add
push
sbb
fildl
xor
stos
mov
das
push
jecxz
les
fucomi
push
inc
pop
pusha
jecxz
adc
cld
xlat
enter
sbb
pop
nop
ja
andl
js
xchg
sti
dec
xchg
aas
fistl
add
or
lods
imul
sti
scas
jo
push
jne
cmpsl
push
mov
enter
dec
mov
gs
mov
lcall
adc
push
lock
jle
scas
cmp
movsb
sbb
repz
mov
and
cmp
jbe
call
stos
fsts
insl
sbb
ss
mov
sub
inc
pop
jno
and
out
loope
xor
push
inc
mov
imul
mov
xor
pushf
xor
adc
loopne
sub
pop
jmp
orl
stos
pushf
mov
xchg
insl
sbb
insl
and
pop
cmp
push
xor
push
mov
iret
push
adc
ret
jno
lret
adc
int3
and
mov
xor
dec
cmp
jne
sbb
dec
repz
xchg
and
dec
test
jle
cmp
shlb
flds
jbe
shrl
stos
mov
mov
and
in
loope
loope
push
fsubs
data16
sub
push
in
dec
sbb
cmp
sub
sti
dec
jb
aas
sarb
xchg
xor
imull
out
les
xlat
push
faddl
sbb
push
outsb
jg
dec
sub
cmpsl
cmp
cmp
xor
push
inc
int3
scas
andl
call
shll
and
sti
sbb
or
fisttpl
push
popf
jb
fbstp
and
lock
and
jne
pop
ficoms
repz
in
mov
mov
jecxz
pop
hlt
mov
fidivl
adc
mov
xor
pusha
fidivl
cmpsb
and
enter
mov
divb
sti
jge
js
enter
sbb
and
int3
or
sarl
cmp
jmp
adc
es
xlat
inc
pop
fnstenv
pop
xchg
enter
add
xchg
and
les
and
inc
repz
xchg
pusha
std
int3
xchg
insb
xchg
and
enter
in
aas
fldt
fprem
push
or
xchg
mov
fstpt
dec
sub
adc
adc
enter
mov
push
popf
and
je
xchg
cmp
test
jecxz
jecxz
xor
insb
scas
enter
xor
ss
inc
fidivl
push
lss
jmp
pop
fidivl
dec
pushf
inc
jmp
fxch
sysret
aad
sub
push
push
jge
rolb
iret
movsl
sbb
add
int3
cltd
cmpsb
and
iret
imul
jl
mov
xor
insb
icebp
adc
sahf
pop
xchg
mov
mov
pop
shll
movsb
mov
in
push
xchg
int3
cltd
push
sbb
pop
fstps
pop
sbb
js
int3
int
and
iret
lahf
scas
push
insl
or
xchg
cli
pop
hlt
mov
lret
adc
outsb
jno
add
push
xchg
sti
and
cmp
sub
push
inc
or
adc
inc
fidivl
shlb
jle
stc
test
push
sub
mov
dec
fnstcw
sbbl
stos
xor
inc
mov
popf
push
insl
jecxz
xchg
cmp
mov
addr16
mov
mov
stc
add
icebp
cmp
fldt
or
es
arpl
and
jae
sbb
jmp
ja
adc
and
and
enter
icebp
dec
imul
int3
andl
aad
out
les
mov
out
xchg
adc
sbb
jecxz
sbb
shrl
jmp
adc
mov
fidivl
push
lret
adc
cli
ss
jnp
and
imul
mov
es
push
add
xchg
aaa
cmc
and
fwait
mov
dec
sub
xor
mov
popf
bound
ds
in
mov
mov
and
shlb
pop
out
add
call
mov
je
lahf
aad
testl
mov
aas
ficomps
iret
and
pop
icebp
fisttps
repnz
aad
mov
or
or
shlb
pop
lahf
inc
jnp
loop
xor
mull
fidivl
nop
and
dec
fldenv
es
jle
in
fisttpl
fstpt
scas
jmp
pusha
std
das
lock
push
and
out
js
lods
fmull
hlt
aaa
xor
add
xor
jg
and
pop
or
jle
scas
test
inc
testb
testb
ret
nop
shrl
jl
mov
fldcw
sub
aad
hlt
pop
pusha
inc
cwtl
adc
dec
xlat
enter
sbb
cmpsl
nop
pop
dec
andl
js
sub
pop
hlt
clc
inc
arpl
lret
repz
pop
adc
ljmp
stc
sbb
pusha
push
rclb
jno
adc
iret
or
pop
push
fnstsw
loopne
call
adc
out
and
jbe
out
push
enter
fildl
mov
xchg
pusha
out
add
mov
mov
in
cmp
adc
push
mov
xchg
gs
pusha
mov
test
fcoms
mov
ret
je
or
mov
adc
mull
ret
divl
jb
add
js
sahf
push
dec
loop
inc
aad
pop
adcl
push
bound
adc
sub
mov
outsl
add
lock
mov
cld
mov
repnz
adc
stos
inc
mov
pop
xchg
mov
mov
adc
and
jne
and
stc
aas
and
in
loope
cmpsl
pop
pop
and
das
mov
std
repz
xchg
mov
xchg
sti
or
pop
push
adc
ja
lahf
or
lods
and
fmul
fwait
xor
neg
pop
xchg
xor
cmc
fyl2x
push
rcrl
hlt
push
add
xor
pusha
dec
ss
fbstp
sbb
mov
fcmovu
cwtl
int3
push
ja
xor
in
cmp
push
lret
and
pop
xchg
orb
cli
sub
cs
cmpb
cs
mov
ret
mov
xor
pop
mov
dec
sbb
push
mov
push
sbbl
cmp
hlt
test
loop
cld
jns
xor
cmpsl
jbe
sbb
mov
dec
push
out
ljmp
data16
mov
lcall
push
mov
jb
mov
pop
mov
add
push
pop
push
iret
cmp
cmp
jle
mov
shlb
insl
fldenv
loop
pop
insb
mov
pushf
loopne
fcoml
dec
jbe
enter
or
adc
add
add
xor
jne
js
mov
fcmovu
mov
cmp
lcall
lods
repnz
fldt
fisttpl
cld
sbb
iret
jle
push
fwait
adc
or
mov
outsb
push
dec
add
bound
cmp
dec
insb
push
sbb
xor
mov
or
sub
sub
or
and
jle
popa
xchg
xchg
cmp
push
shlb
push
hlt
shr
xor
jge
test
dec
movsb
cwtl
xor
inc
and
lea
xor
fwait
aam
daa
cvtps2pd
loopne
or
mov
dec
in
inc
js
icebp
clc
dec
inc
es
movsb
cmp
xor
movb
cmp
mov
dec
cmp
divb
out
ljmp
repnz
xchg
push
xor
lods
rcrl
cmp
xchg
mov
add
pop
in
inc
sub
pop
mov
or
mov
push
sbb
mov
pop
mov
xchg
rorl
test
push
jmp
sbb
int
leave
ret
mov
and
fstpt
push
bsr
sbb
jecxz
out
mov
jmp
fsubrl
xchg
push
add
cmpsb
jnp
push
jp
popf
pop
push
push
add
jae
stos
leave
mov
add
mov
imul
push
sbb
idivl
fistl
lods
int
std
jmp
frstor
push
pop
mov
lods
and
mov
xchg
mov
push
ljmp
push
mov
adc
mov
add
iret
or
cs
lret
arpl
sti
xor
inc
adcl
push
pop
mov
xor
sub
fsubr
mov
sbb
cmp
adc
call
enter
sbb
pop
mov
add
popf
clc
dec
pop
sub
adc
inc
adc
lcall
imul
idivb
dec
out
ljmp
es
orb
bound
data16
das
fdivs
fnstenv
cmp
std
xchg
push
dec
mov
jne
push
inc
es
lds
xor
je
cmpsb
mov
mov
pusha
jge
mov
adc
mov
push
sarl
adc
jp
xchg
push
scas
sbb
ss
scas
dec
ss
sub
lds
dec
dec
xor
nop
mov
dec
push
dec
dec
jge
pushf
into
test
add
js
push
aaa
pop
dec
mov
sub
jecxz
mov
adc
loop
sub
dec
sub
fs
inc
xor
in
into
enter
cmp
and
xchg
adc
pusha
xor
nop
out
xor
sub
xchg
pop
jmp
xor
ret
inc
test
mov
in
xor
or
fsubr
or
sbb
rorl
adc
popa
loop
shll
pop
loop
repnz
push
clc
fsubr
fcmovnbe
scas
inc
js
mov
cmp
bound
test
mov
mov
lods
jo
ja
les
pop
cwtl
sub
stos
sub
push
sahf
lcall
push
mov
loop
mov
cmp
decb
push
push
sub
cmpsl
mov
scas
jl
ss
dec
dec
or
sub
and
pusha
lods
xor
nop
mov
stos
push
dec
insl
xchg
enter
or
pop
test
push
pop
mov
mov
int3
iret
ja
inc
adc
mov
popa
push
je
sahf
bnd
lock
add
in
and
lods
neg
pop
and
aaa
push
hlt
mov
pop
mov
arpl
push
xor
and
xor
lret
test
pop
fyl2x
stos
cmp
push
push
std
xchg
jle
pop
test
sarb
fnstcw
cli
pop
idivb
pusha
pop
sbbl
pop
gs
int
push
xor
orb
inc
xchg
sub
jmp
imul
dec
push
fstp
js
xchg
ja
xor
fbstp
jmp
test
test
in
xor
loopne
ret
cwtl
lahf
std
fsubr
in
sbb
jmp
xor
enter
sbb
fisttpl
mov
pop
clc
dec
pop
cmpsl
loop
stos
mov
sarb
xchg
aas
xchg
hlt
test
mov
cmp
push
jo
xchg
mov
fdivs
mov
fsubl
test
xchg
or
mov
inc
movsb
push
cmp
loopne
aam
dec
xor
mov
push
stos
mov
std
fildl
push
and
add
insb
xchg
aaa
pushf
loopne
pop
nop
mov
mov
mov
or
jne
clc
mov
pop
mov
fstpt
mov
je
xchg
call
fstpt
or
cmp
aad
add
lret
xchg
cmp
adc
push
sbb
mov
xchg
and
inc
push
lret
and
and
pop
cli
jge
xor
dec
sub
and
dec
adc
and
andb
mov
mov
mov
push
movb
mov
cmp
adc
aas
fnstenv
jbe
std
mov
jnp
mov
lds
imull
lret
in
cs
pop
cltd
ret
adc
mov
inc
cli
data16
mov
xor
jnp
mov
dec
fs
js
js
dec
xchg
iret
cmp
fsubl
xchg
cltd
mov
test
dec
push
add
or
icebp
cs
aas
or
sub
aad
cmp
pop
iret
test
mov
xchg
jae
adc
adc
xchg
pusha
cmp
mulb
cmp
xchg
fs
sbb
mov
add
or
idivb
ss
push
adc
out
mov
lret
pop
cmp
repz
enter
pop
and
add
xor
mov
push
sub
les
popf
sub
xor
bound
andl
mov
xchg
fdivs
fnstenv
sub
lds
ds
mov
and
inc
xchg
sub
pop
or
pop
rolb
xchg
xor
rorb
sub
mov
mov
cmp
and
xor
std
test
mov
shll
outsb
aaa
fsubrl
xchg
call
dec
mov
movsb
push
mov
subb
test
push
push
or
sti
mov
scas
pop
mov
dec
ss
pop
add
xor
loope
dec
lret
jecxz
mov
jb
in
aas
loop
lret
icebp
clc
push
js
das
adc
add
sub
xchg
call
lock
and
in
add
lods
xchg
mov
and
inc
ljmp
fdivp
popa
inc
repz
and
ret
insl
shlb
cmp
xchg
xchg
sub
cltd
push
adc
adc
push
movl
jecxz
xor
aaa
cmc
mov
insl
pop
stc
test
cmp
cmpl
gs
xor
push
lea
or
sub
and
insl
mov
cltd
lahf
addr16
arpl
mov
pop
sbb
fnstenv
icebp
sub
mov
or
xor
idivl
mov
sbb
adc
fnstenv
jnp
mov
or
xor
add
data16
xchg
lods
pop
fnstenv
test
pop
push
pushf
push
fstps
outsb
xchg
cmpl
fincstp
mov
mov
push
xchg
mov
add
cld
fsubrs
scas
std
orl
mov
cli
or
andl
jp
push
xor
arpl
mov
push
jl
xor
cld
lea
push
sub
mov
pop
sbbl
test
adc
mov
fmulp
lahf
ret
popa
mov
xor
pop
push
fcmovnbe
adc
mov
in
push
out
clc
clc
or
mov
sbb
cmpsl
daa
push
and
cmp
cld
repz
rclb
add
pop
push
or
mov
rdmsr
inc
jmp
ja
xadd
add
enter
sbb
fmuls
sbb
mov
adc
enter
mov
xor
sbb
dec
fnstenv
into
sbb
push
fdivs
repz
cwtl
xor
jmp
popa
jns
cmpsb
imul
xchg
fdivs
jge
fstpl
stos
inc
xchg
inc
inc
xor
mov
outsl
data16
or
out
xor
int3
ds
les
and
pop
push
xchg
xchg
dec
mov
outsb
fnsave
adc
call
push
pop
icebp
pop
dec
sub
inc
xor
stc
ss
loop
pop
stc
dec
ret
sbb
mov
pop
lret
data16
outsl
xor
sbb
daa
jmp
cmp
scas
and
jl
jno
fdivs
das
pop
and
leave
pop
shll
pop
fmull
xor
fcmovnu
arpl
lcall
pop
xor
ljmp
repnz
pushf
mov
lcall
dec
rol
inc
inc
movsb
je
stos
push
jmp
jecxz
lcall
add
icebp
aam
loop
call
dec
dec
insl
mov
loope
add
aam
sbb
enter
mov
or
mov
push
push
dec
cmp
pushf
movsb
out
xor
jae
xlat
loop
sbb
leave
push
dec
mov
xor
addr16
sbb
aad
mov
stos
or
inc
or
or
mov
add
cwtl
das
loop
xor
pusha
notl
xor
pop
and
sub
ds
rcll
and
dec
cmp
xchg
mov
lds
outsl
and
inc
inc
into
movb
xlat
pop
dec
cmp
inc
xor
fbstp
cmc
xchg
mov
sbb
mov
lds
gs
xor
sbb
nop
daa
inc
loope
or
push
jl
enter
fists
andl
out
push
neg
mov
dec
xor
pushf
push
sbb
loopne
mov
pop
inc
das
cmp
shlb
inc
fs
addr16
fsubs
pushf
call
mov
sti
aam
out
xor
stc
cs
xor
dec
pop
lock
sbb
gs
cld
and
mov
jp
inc
sub
in
andb
mov
lock
xor
nop
push
push
dec
or
mov
xor
loopne
out
ret
mov
xor
lods
adc
xor
test
je
cld
repz
rclb
pop
sbb
inc
push
lods
jecxz
xchg
mov
cmp
jmp
cs
sbb
into
addr16
std
add
repnz
mov
mov
lret
pop
xor
cmc
shl
mov
add
xchg
push
mov
xlat
push
xchg
fcomps
pushf
insb
and
fdivs
movsl
add
jnp
mov
insl
push
orb
fisttpll
mov
data16
mov
daa
ja
movsb
or
xor
aas
cli
fnstenv
mov
xchg
xor
dec
lcall
jno
divb
mov
dec
jge
xchg
lock
outsl
jo
pushl
push
addr16
fs
and
mov
mov
jb
pop
push
adc
pop
js
mov
fmulp
and
ret
or
fidivrl
jle
xchg
mov
test
inc
clc
aas
decl
andl
cmpsl
loope
and
cld
imull
repz
sar
mov
outsb
mov
lea
adc
nop
pop
xchg
mov
iret
mov
adc
xor
mov
pop
push
out
push
push
and
dec
pop
fdivs
jecxz
inc
lcall
call
pop
cmpsb
adc
mov
in
or
push
sbb
aam
dec
arpl
jecxz
mov
inc
jmp
jbe
mov
lcall
inc
repnz
test
and
xorl
es
and
stc
js
xchg
in
fdivrl
cltd
xchg
subl
lods
imul
or
pop
dec
aad
xor
mov
ss
adc
pop
stc
fstpl
cmp
sub
gs
dec
lods
test
adc
inc
push
aad
in
fildl
jae
push
inc
pop
mov
adc
or
cwtl
lahf
pop
add
mov
pop
enter
jmp
js
push
call
sbb
int
out
sti
xor
divl
loopne
lock
pop
fistpl
daa
push
rol
cli
xor
push
mov
repnz
mov
divb
std
adc
sbb
ja
mov
cmp
xchg
dec
inc
lret
cmp
adc
call
mov
add
push
aad
aam
test
pop
aad
mov
loope
xor
into
lock
inc
cs
ret
xchg
and
je
push
data16
fstpt
cmp
xchg
sbb
js
pop
sub
add
push
lds
stos
leave
pop
mov
mov
cwtl
or
shlb
lods
out
fdiv
rolb
iret
or
mov
and
pop
ljmp
inc
icebp
mov
add
xor
jg
xor
pop
hlt
adc
lahf
push
mov
dec
popa
int
jnp
xchg
and
dec
sub
cmp
sbb
jmp
rolb
add
cli
sub
shrl
ficompl
cmpb
das
stos
mov
ret
fimuls
push
sti
data16
xor
pop
cmp
repz
push
bound
sub
outsl
stc
inc
adc
negl
cmp
xchg
outsb
clc
adc
pop
cmpsb
mov
push
mov
sbbl
shlb
adc
cmpsb
pop
push
or
dec
rclb
faddl
add
add
or
dec
fcomps
and
xor
jno
jg
imul
rol
pop
push
and
das
cmpsl
dec
fdiv
pop
insl
or
xor
es
dec
pop
lret
test
orl
mov
test
lahf
fcoms
cld
in
mov
and
iret
fwait
add
js
aam
jne
dec
push
scas
nop
ret
add
imul
xor
jnp
and
ficoml
jae
or
xlat
loop
ljmp
add
adc
add
arpl
mov
xchg
push
sbb
inc
push
and
fbstp
mov
jl
in
lock
dec
and
in
inc
arpl
lods
push
xchg
pop
and
jnp
hlt
push
cs
fmull
dec
int
xor
rcrl
pop
clc
es
sbbb
int3
or
jmp
dec
adc
sbb
xor
in
icebp
aad
fcmovbe
jle
cmc
mov
leave
dec
lds
dec
push
sbb
xor
outsl
sbbl
adc
xchg
in
test
fdiv
lcall
mov
shll
fisttps
pop
pusha
imul
iret
aas
sbb
pushf
int
inc
xlat
and
jne
sbb
pop
cmp
insb
and
sub
mov
out
fcoml
sub
and
jns
hlt
sbb
js
adc
add
mov
movsb
or
in
cli
fsts
add
subl
and
mov
adc
xor
test
adc
fbld
iret
fwait
loopne
fistps
pop
cmpb
cmc
mov
dec
add
repnz
cmpsb
lahf
and
lcall
pop
mov
repz
mov
push
pop
push
out
mov
scas
or
sub
icebp
jne
and
insb
jns
loopne
adc
mov
rclb
sbb
xchg
dec
xor
call
cmpsl
jbe
and
insl
jbe
das
pop
jnp
repz
rclb
in
pop
and
lods
jecxz
sub
inc
jmp
xchg
enter
sbb
pop
ret
lret
fistpl
mov
ret
ficoml
out
in
in
and
push
xor
jnp
cmp
fcomps
xor
je
mov
int
dec
rol
fcoml
or
mov
cmp
gs
mov
pop
pop
jmp
cmp
js
test
add
insb
inc
adc
daa
xor
jne
sub
lea
sbb
fwait
dec
xchg
scas
sub
imul
lea
or
xor
mov
mov
ja
sub
pop
ret
push
inc
inc
or
popf
imul
out
push
shlb
mov
xchg
xorps
fstpt
and
sarl
cmp
std
mull
push
clc
cmp
bnd
stos
adc
push
xchg
jnp
scas
mov
out
fwait
in
idivl
mov
call
sub
insb
lcall
jbe
fwait
sti
dec
sbb
movsl
fstpt
or
xchg
jne
psadbw
xchg
mov
repz
popa
push
add
lds
add
xor
cmp
xchg
gs
cltd
or
popa
fucomp
cmp
cmp
pop
jp
arpl
fsts
or
arpl
in
lods
in
add
sub
int
sub
jg
push
fisttpl
add
cmovno
cmpl
mov
ja
repz
lahf
daa
cmc
ret
call
or
iret
dec
pop
and
jnp
xchg
xchg
lahf
stos
cwtl
and
pop
aas
pop
pop
mov
inc
adc
jge
cltd
jge
push
mov
movsl
and
mov
call
lea
rorb
pop
inc
jno
jmp
out
xchg
lods
push
daa
mov
mov
sub
mov
dec
test
ss
adc
int
scas
int
cmovae
jns
je
mov
add
in
flds
adc
pop
fisttpl
insl
xchg
pop
outsl
fsts
lret
jne
cmp
repz
xchg
je
fwait
sti
dec
daa
pop
pop
pop
sub
xchg
adc
pop
push
bswap
pop
adc
or
cmp
xor
mov
not
ret
ret
popf
arpl
add
inc
int
jl
cmp
rcrl
push
cli
shr
fists
mov
mov
lahf
inc
cmp
and
sti
add
arpl
fldt
sbb
add
pop
aam
dec
sub
dec
xor
fdivrl
cmc
loopne
push
stc
inc
in
cmp
pop
out
imul
div
lods
jb
in
adc
push
daa
scas
jae
stos
andl
orl
sub
lahf
add
aas
pop
cli
or
mov
out
ja
outsl
mov
cmp
inc
daa
pusha
pop
addr16
dec
mov
pop
cmp
push
lea
cmp
and
mov
mov
push
sub
out
push
insb
mov
mov
pop
dec
imul
sub
sbb
push
jle
mov
insb
ds
mov
jle
pop
out
sub
mov
mov
xchg
lods
push
fisttpl
out
fistps
fidivl
jle
aas
loope
mov
divl
xor
jne
mov
lock
inc
mov
imul
mov
mov
sub
sbb
mov
clc
inc
and
add
dec
les
xor
sbb
xor
add
cmp
movsb
addb
fidivrs
mov
push
out
xorb
lods
adc
pop
cmp
js
pop
cmp
cmp
loopne
gs
mov
dec
cmpsb
push
dec
xor
cmp
insb
fistl
xlat
addb
sub
sub
icebp
lods
mov
pop
aad
aas
cmc
fldenv
jae
aam
dec
pop
mov
call
inc
cmpsl
jne
lahf
mov
and
and
pop
jbe
lret
imul
sbb
out
ja
dec
mov
jmp
pop
addr16
sti
imul
out
lock
mov
hlt
in
dec
mov
pop
lock
aas
das
lahf
xchg
xlat
xor
imul
push
aam
xchg
stos
push
fistpll
pop
ror
adc
or
jns
xor
mov
pushf
cmp
in
sahf
add
sub
jo
fsts
jne
sahf
dec
mov
add
cmp
mov
xchg
or
andl
mov
mov
mov
dec
std
popa
and
and
call
pop
sub
xchg
jno
xor
fstpt
push
xlat
dec
negb
add
arpl
js
mov
mov
adc
stos
sub
cmp
mov
lods
inc
shlb
push
and
mov
aam
fimuls
ret
push
or
push
shll
sub
call
aas
xlat
mov
jg
push
lock
cmp
aas
sarl
pcmpeqb
inc
sbb
xchg
sahf
mov
fistpl
popa
das
in
push
xor
or
in
mov
jge
xchg
movb
lock
pushf
outsb
sub
js
mov
loopne
pop
imul
xor
cmp
sbb
aam
dec
movsb
movsl
adc
mov
jg
repnz
aam
inc
mov
cmp
out
bound
sbb
xor
pop
push
mov
es
mov
pushf
add
add
dec
mov
lret
jbe
mov
mov
mov
sbb
out
lods
mov
lock
cs
inc
das
in
inc
xor
push
sbb
dec
aam
fwait
popa
mov
fsubs
xlat
xor
cltd
sub
xchg
push
and
out
xchg
sub
movsl
mov
adc
mov
pop
and
jnp
shr
mov
sub
movsb
xor
inc
fcoms
sbb
cmp
test
cwtl
and
and
mov
add
arpl
jle
out
mov
sbb
aam
stos
add
fsubrl
inc
pop
mov
mov
sahf
cmp
inc
repz
lods
or
data16
mov
enter
sbb
out
nop
aam
mov
dec
js
insl
testb
shrb
ds
or
pop
data16
aaa
or
icebp
cmc
or
imul
ljmp
sbb
xchg
push
mov
jns
nop
lcall
sbb
dec
fadds
fwait
jg
push
jl
push
push
adcl
cmp
or
mov
push
push
insb
popf
jne
pop
dec
pushf
sub
in
iret
cmp
cwtl
popf
pop
dec
push
mov
add
sets
in
out
lret
repz
jle
mov
inc
ljmp
sub
cltd
and
xchg
xor
repnz
inc
cmpb
adc
inc
adc
cmc
and
je
xchg
mov
popa
decl
sahf
dec
push
call
hlt
sbb
mov
xchg
ret
ds
sub
mov
cmp
ss
jo
addb
mov
cmp
mull
xor
mov
test
mov
int3
fucomi
aam
pusha
adc
insb
fcmovu
push
rcrb
adc
pop
bound
in
imul
mov
push
xchg
xchg
jge
lock
pushf
outsb
or
ret
test
daa
inc
jle
shlb
js
mov
inc
or
into
mov
movsl
movsb
push
mov
mov
add
push
push
lods
divl
scas
pop
scas
cmp
cmp
inc
ss
cmp
les
push
insb
rol
out
pop
movsb
cld
sub
xor
pop
dec
and
pushf
xchg
adc
push
in
mov
clc
jmp
aad
ds
pop
enter
adc
repz
les
out
jns
clc
inc
enter
imul
lods
xor
pop
hlt
cmc
xor
mov
xchg
scas
pop
ret
test
cmp
xor
lret
out
xchg
aad
mov
js
xlat
mov
sbb
or
cwtl
sbb
inc
bound
ret
sub
fildl
adc
das
aaa
fimuls
mov
sub
or
adc
and
into
lock
jae
icebp
and
push
push
mov
mov
dec
cmp
adc
ljmp
cmp
inc
jge
push
jge
jge,pt
movsl
or
inc
test
lahf
inc
lods
push
adc
ret
mov
cmp
popf
roll
dec
test
std
in
or
ror
out
int
pop
nop
mov
xchg
pop
push
xchg
std
popf
scas
mov
push
jnp
addr16
aas
and
add
movsb
scas
sub
cmp
jne
iret
mov
add
or
push
fcoms
popa
lods
jmp
imul
lret
pop
call
push
adc
xor
repz
icebp
sub
xor
xchg
adc
insl
or
mov
aas
mov
and
sub
call
enter
loopne
ret
jnp
xlat
xor
sahf
fs
xor
repz
sar
sub
lods
add
mov
iret
push
xorb
and
mov
mov
sub
jns
pop
fdivr
mov
xchg
enter
xor
xchg
push
jl
iret
and
push
mov
mov
aaa
or
mov
cmp
xchg
xor
and
cmc
mov
mov
pop
and
andb
js
rcrl
daa
inc
sbb
sbb
mov
pop
bound
sbb
call
jle
shlb
sti
test
in
cld
mov
sbb
les
imul
aaa
xchg
sub
ret
shll
pop
jp
ss
sub
aad
sbb
aas
pop
jmp
nop
and
add
mov
sbb
repz
test
aam
sarl
cmp
js
mov
aam
add
jecxz
sbb
call
orl
pop
dec
pop
or
pushf
fstp
cmp
loop
fmuls
in
inc
lret
clc
inc
pop
ja
shr
mov
out
xchg
leave
xchg
inc
adc
mov
test
stos
add
push
inc
or
jb
sbb
sbb
cs
mov
cwtl
fsubp
and
ljmp
jae
xor
xor
xlat
ljmp
pop
shl
bound
jl
jle
or
or
adc
adc
fldt
aaa
push
pop
mov
sbb
lea
lods
test
cmp
or
cmp
lret
pop
fldenv
jnp
movsb
xchg
lahf
repz
arpl
ds
cmc
xchg
lret
lret
lahf
xchg
push
bound
jl
dec
movsl
sub
les
test
mov
iret
stos
enter
push
adc
mov
int3
xor
dec
fnstenv
pusha
lret
or
sbb
lret
or
ss
test
push
ror
jg
int3
mov
pop
mov
jns
data16
out
call
jmp
push
insb
xchg
pop
jns
push
dec
fnsave
sub
popf
sbb
add
or
movsb
leave
mov
nop
or
scas
jg
jmp
test
xor
sar
jp
popa
add
test
pop
repz
add
insl
movsl
insb
sub
js
cwtl
xchg
imul
push
mov
push
pop
cmp
mov
pop
jl
bound
es
call
xor
cmp
jp
push
stc
lds
mov
gs
cld
mov
pop
aad
sub
lock
imul
inc
jle
and
and
arpl
lock
mov
repz
xchg
pusha
pop
imul
popf
outsl
push
movsl
aad
xchg
in
aaa
pop
clc
enter
rorl
iret
push
roll
iret
bound
mov
gs
cmp
imul
cs
aad
cli
push
mov
iret
xor
pusha
cmpsl
inc
ljmp
and
aas
adc
adc
aas
faddl
ljmp
cs
test
aaa
ror
lret
aam
mov
cmp
jns
add
mov
jp
call
jmp
push
aaa
insb
xchg
into
sbb
push
mov
div
repz
pop
add
or
jl
movsb
leave
daa
jbe
jecxz
mov
dec
jmp
sbb
paddsw
adc
push
push
outsb
div
lret
cmp
or
ret
fsubp
ret
js
lret
sahf
cmp
mov
dec
jp
lock
jecxz
jbe
mov
mov
and
dec
lds
mov
pop
fdivrl
pop
bound
in
fcmovnb
or
bound
ds
icebp
cmp
cmp
ret
test
fsubl
ljmp
imul
pop
sbb
pop
xorb
dec
push
dec
movsb
push
or
cmp
enter
or
outsb
push
push
out
mov
cmp
pop
arpl
sti
mov
sbb
js
mov
rclb
xor
je
or
jns
mov
test
xor
aam
xor
push
pushf
data16
mov
icebp
sbbl
adc
or
std
leave
dec
in
mov
jo
cld
pop
insb
xchg
aaa
fcoms
pusha
je
fnstsw
pop
add
or
orl
jecxz
inc
mov
jmp
stc
psllq
adc
pop
mov
div
sub
fldt
xor
xor
scas
sub
out
sbbl
fs
nop
aad
xor
icebp
push
jge
mov
loopne
xchg
mov
frstor
stos
and
test
data16
rcrl
pop
std
mov
cmp
fs
cmp
or
in
mov
ja
xchg
sbb
icebp
cmp
popf
outsb
push
das
jns
and
lcall
jno
push
push
std
imul
leave
push
xchg
lcall
inc
rolb
or
mov
jne
repz
call
mov
and
cmp
imul
cwtl
addr16
add
inc
mov
cmp
into
mov
xor
jne
xor
push
fiaddl
jge
xor
loop
mov
xchg
or
insl
ds
xchg
mov
adc
mov
push
mov
das
inc
push
sbb
pop
roll
push
add
mov
cmp
cmp
std
out
lcall
in
cmp
inc
ret
push
fsubp
mov
ljmp
repz
mov
sub
and
popaw
bound
in
and
mov
jb
pop
xor
add
enter
sbb
call
fs
outsl
testl
aas
fcmovnbe
notl
cmp
adc
cmp
mov
cmp
mov
ds
cmpsb
xorl
mov
mov
mov
test
lods
fstpt
cmpsl
in
push
scas
test
push
jo
mov
inc
inc
pop
scas
dec
cmp
pop
jle
test
sub
xchg
xchg
loopne
dec
lahf
mov
sahf
pop
dec
jmp
pushf
test
add
xchg
xchg
pmulhuw
test
xor
leave
xchg
in
adc
mov
cmpsl
test
inc
adc
add
push
fisttps
jb
xchg
sbb
lods
cmp
and
test
lret
sub
sarb
aad
push
push
and
xor
mov
xlat
in
scas
aad
pusha
xor
fcmovne
jge
inc
sbb
test
enter
lods
cmp
sbb
scas
mov
sbb
ret
xchg
jnp
inc
xchg
lahf
add
mov
pop
pushl
xchg
xor
xchg
cmp
out
ja
loop
pop
out
ss
cmp
inc
mov
loope
pop
addr16
push
push
lds
out
rcrb
mov
fnstsw
push
sub
fwait
push
fbld
sar
inc
fldcw
iret
repz
xchg
pop
mov
jp
mov
add
jmp
mov
insb
xchg
out
ret
fmul
push
test
mov
mov
cmp
das
dec
jmp
popf
sbb
push
lcall
fbld
xchg
mov
xchg
mov
in
jecxz
popa
pop
enter
insb
les
or
cmc
sub
jnp
cwtl
xchg
push
je
fldcw
sub
out
mov
stc
sbb
mov
enter
fs
or
dec
push
jmp
cmp
jge
push
stc
sarb
cmp
fidivs
push
imul
adc
and
adc
pop
cmp
or
faddl
cwtl
mov
dec
fwait
dec
adc
orl
or
cmp
jge
push
jl
cld
jle
movsl
fiaddl
addr16
fldl
push
push
push
out
js
xor
add
fidivrl
inc
test
mov
mov
dec
mov
xor
pushf
ret
fildl
dec
fisubl
xor
inc
mov
cmp
xchg
lcall
mov
dec
lret
stc
inc
mov
add
push
xchg
or
jb
int
fildl
xchg
dec
in
dec
adc
and
cmp
xchg
push
add
cmpb
jle
mov
sarb
popa
aad
lds
cli
into
mov
arpl
adc
lds
sbb
int
ja
test
xor
push
fcmovne
jo
inc
sbb
mov
pop
repnz
sbb
bound
jb
les
push
mov
filds
mov
daa
dec
jg
adc
movsl
mov
pop
cmp
mov
ds
push
insb
xor
inc
mov
cltd
pop
fsub
lock
or
adc
mov
cli
pop
scas
dec
jne
add
roll
frstor
pop
adc
xor
mov
or
rcr
loop
es
cld
cmp
repz
dec
je
mov
mov
mov
xchg
jae
in
cmp
add
rcr
push
push
mov
push
jbe
test
or
mov
lods
cs
push
and
cli
sbb
mov
clc
int3
and
or
cmp
adc
push
cmpsl
jo
scas
cmp
xchg
fisubrs
xchg
insb
nop
cmp
daa
or
xchg
fldenv
and
cwtl
nop
xor
imulb
ficoms
pop
movl
sbb
mov
popf
daa
fadd
test
scas
xor
jno
push
int
pop
xor
sbb
stos
xchg
lahf
sahf
cmpsb
and
bound
jno
jecxz
imul
inc
popf
aam
push
pusha
xchg
shlb
sub
test
inc
inc
inc
inc
popl
pop
addr16
mov
in
int3
lock
xchg
sub
mov
cmp
ror
adc
mov
jns
jbe
mov
xchg
cmc
aad
ret
mov
ljmp
inc
cmp
mov
push
je
clc
fldt
int3
pop
fbstp
adc
cmpsl
js
cvtps2pd
jl
push
and
stc
and
inc
xchg
mov
bound
push
push
sahf
mov
ljmp
jne
sbb
daa
or
lock
ret
add
or
jle,pn
jp
shlb
and
push
loopne
sbb
test
dec
test
push
pop
aam
and
adc
inc
sbb
inc
nop
fmul
stc
scas
lret
out
push
sbb
subb
add
lsl
and
inc
dec
leave
cmp
pop
aad
pop
neg
scas
sub
in
dec
pop
sbb
jnp
mov
lahf
mov
and
add
imul
inc
pop
mov
push
movsl
repz
ja
insb
mov
ljmp
inc
inc
jmp
push
hlt
addr16
fisubrl
lcall
mov
xlat
or
rcrl
mov
in
add
mov
and
iret
mov
sub
jne
dec
xlat
jns
adc
aas
and
jmp
mov
pop
jmp
or
outsl
xchg
cmpsl
pand
lods
ja
lods
subb
sbb
jne
mov
jmp
xor
sqrtps
adc
mov
loope
mov
ret
loopne
fucom
addr16
jmp
outsl
sub
xor
inc
xlat
adc
sbb
lret
add
or
popa
and
inc
and
pop
dec
xor
or
hlt
outsl
test
pusha
rcll
push
movsb
sub
sbb
std
jne
pop
icebp
addl
add
and
jae
mov
popf
adc
cld
loop
mov
or
dec
test
adc
add
fbld
out
xor
lea
in
ja
jo
pop
ljmp
inc
and
pop
addr16
dec
mov
mov
mov
repz
mov
push
and
mov
mov
pop
ds
rcr
add
xchg
cmp
mov
mov
jmp
xchg
xchg
pop
jmp
sub
outsl
xchg
mov
fistl
xchg
adcl
xchg
cs
add
fldt
adc
sub
andb
aam
and
pop
hlt
pop
test
mov
fmul
in
rcr
repnz
cltd
add
lahf
lods
jle,pn
and
xchg
add
cs
mov
mov
and
arpl
jo
data16
je
fcmovnu
out
sbb
pusha
jmp
add
pop
bound
ret
cmp
jns
adc
adc
cmp
inc
sahf
outsb
jp
jp
fbstp
testb
xchg
sub
test
mov
cli
adc
add
push
xor
push
leave
ds
add
rolb
xor
outsl
rolb
mov
loopne
fildl
cmpsb
push
lret
or
jns
cli
mov
aas
dec
lock
mov
cmp
loopne
mov
dec
insb
add
jnp
sbb
addr16
insb
adc
jle
mov
stos
pop
dec
inc
xchg
les
mov
xchg
add
outsb
ds
mov
test
iret
repnz
mov
mov
imul
xorl
mov
xchg
and
int
push
jne
push
sahf
call
push
cmp
test
push
and
xor
sbb
push
or
push
sbb
xchg
mov
push
mov
in
aas
jo
icebp
xchg
jl
inc
cmp
movsl
movsb
mov
loope
mov
test
call
aam
jge
adc
out
fcompl
neg
adc
fmul
lds
inc
sbb
aad
nop
jg
mov
dec
js
push
hlt
dec
mov
xor
rorl
xchg
mov
lock
daa
jp
inc
xchg
xchg
imul
push
fldt
jbe
inc
jge
and
or
sub
sbb
mov
lods
xor
push
add
sbb
push
loop
pop
pop
push
lahf
rcll
test
out
jb
ror
cmc
sub
mov
les
iret
mov
shrl
fwait
pop
mov
aas
sub
add
xchg
std
sbb
sub
jge
stc
mov
sub
shl
jl
test
lock
sub
sahf
pop
call
lods
mov
sbb
inc
sbb
cmp
rclb
int3
and
mov
cmp
push
lret
jle,pn
in
ror
xor
xchg
add
sub
push
arpl
loopne
in
or
xor
insl
cmp
push
aad
mov
or
xor
rcll
pop
inc
sub
sbb
addl
lds
or
test
neg
pusha
or
sbb
add
lahf
shlb
and
hlt
cmp
imul
inc
mov
add
mov
decl
inc
inc
or
and
cmpsb
test
mov
inc
aad
dec
test
fistpl
jle,pt
push
mov
cs
mov
addr16
loope
ljmp
stos
je
add
xchg
sahf
int
mov
jns,pn
dec
ljmp
add
sbb
xchg
cs
push
sbb
in
mov
xchg
int
movsb
or
or
pushf
adc
leave
xchg
xchg
or
mov
push
xchg
mov
pop
jmp
shrl
cmp
or
or
jle
xchg
xchg
outsb
xor
jne
movsb
mov
mov
mov
cwtl
or
fstl
pusha
push
mov
xor
fs
insl
lret
jl
decb
inc
gs
das
fstpt
js
or
or
xchg
fisttps
out
xchg
mov
sahf
outsb
cmpsb
insl
jp
adc
xchg
mov
xor
mov
ds
add
loopne
inc
shr
mov
mov
imul
xchg
dec
mov
cmp
inc
mov
mov
fistl
mov
cmp
mov
insb
add
and
sbb
ds
insb
pusha
dec
nop
loopne
and
inc
enter
sbb
adc
repz
ss
clc
mov
outsb
ds
push
ds
mov
js
test
in
push
push
push
out
enter
sub
jne
push
orl
jb
fdivs
or
ds
or
iret
stc
or
inc
adc
xor
or
arpl
sti
xor
xor
iret
jmp
sahf
orl
cmp
xlat
ret
addr16
cmp
sub
and
jge
call
test
fcmovbe
adc
aaa
stos
cmp
out
jne
mov
rep
push
push
out
adc
test
dec
and
imul
jle
daa
dec
and
lea
sti
xor
jne
inc
jge
dec
jg
xor
movsl
push
loope
lcall
xchg
inc
inc
inc
xlat
pop
shrl
pushf
mov
out
sbb
jg
mov
rcl
test
mov
cmp
jp
or
mov
xor
lds
dec
pop
and
sub
mov
jbe
sbb
fidivrl
scas
jle
pop
and
loop
xchg
in
leave
inc
mov
std
outsb
jnp,pt
ds
mov
js
inc
jne
jl
and
lock
ss
sub
mov
cmp
into
sbb
jge
ja
cmp
mov
mov
std
daa
cmc
out
pop
int3
jno
sub
test
sub
inc
enter
dec
sub
adc
lock
pop
cmp
js
jb
iret
and
pop
jne
jg
cmp
xor
xchg
sub
or
icebp
mov
shlb
repz
cld
push
mov
adc
jle
ret
sub
inc
xor
xor
cmp
dec
lock
or
ds
xor
stos
sub
in
pop
enter
xor
adc
fcoms
xchg
int3
test
push
ficompl
push
pop
inc
xorl
mov
cmpl
rcr
ud1
insl
mov
bound
iret
and
in
popf
sbb
iret
int
cmp
sbb
dec
fcmovbe
push
enter
adc
cli
mov
adc
and
cmp
adc
push
mov
in
icebp
movsb
lds
dec
pop
inc
sbb
push
push
sarl
sub
push
hlt
pop
xor
and
insl
and
dec
int3
nop
and
js
pop
inc
iret
bound
pop
jne
push
xchg
cmp
adc
sahf
adc
cmp
pop
fcoml
ss
xor
aam
push
mov
in
loope
rclb
sub
dec
cmp
sbb
lock
sbb
inc
fcmovbe
jne
push
ds
inc
mov
add
cmp
iret
lcall
int3
push
sahf
fmuls
sub
aam
pop
or
cmp
cmp
mov
mov
mov
xchg
outsl
fcomi
idiv
jmp
iret
jmp
push
aam
mov
sub
add
leave
ret
jnp
dec
pop
icebp
aam
dec
pop
pop
or
pop
adc
ja
imul
lret
jne
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
dec
push
jecxz
bound
pushf
filds
mov
das
dec
insl
stos
rorl
mov
fisubrl
pop
push
movsb
mov
cmpsb
cmp
cmpsb
dec
xchg
mov
jecxz
ret
loopne
add
xchg
pop
aaa
push
xchg
sbb
xchg
fwait
ds
jns
ss
cli
subl
mov
loope
cmp
sbb
push
pushf
divl
into
mov
add
mov
lret
scas
or
push
fisubs
xor
mov
sbb
mov
and
sbb
out
aas
pop
sbb
stos
dec
pop
es
jecxz
push
jge
push
arpl
dec
aam
inc
ret
repz
stc
int3
scas
or
add
movsb
pop
or
add
movsb
pop
ret
pop
sub
cmpsl
sbb
cli
sbb
add
jl
stos
les
mov
out
jne
and
in
gs
sbb
imul
push
adc
sbbb
icebp
push
in
into
lods
pop
ljmp
outsl
imul
push
pop
and
sbbl
cmpsb
or
jns
xlat
cltd
cmpsb
or
pop
push
sti
xlat
lret
ss
int3
cld
into
add
cmp
add
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
les
dec
out
testl
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
les
mov
in
call
pop
int
mul
mov
roll
cmp
push
xor
popf
pop
mov
sbb
mov
lea
dec
and
add
out
xlat
daa
or
add
movsb
pop
in
mov
aad
add
scas
and
xor
fidivrl
out
push
popf
ret
add
movsb
pop
pop
cmp
push
push
jg
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
or
add
movsb
pop
test
jg
sub
pop
jne
xchg
js
mov
inc
outsb
repnz
test
pusha
push
dec
jns
jnp
add
jmp
push
cmp
out
sub
pop
push
xchg
dec
add
pop
push
enter
fptan
imul
imul
adc
das
or
adc
mov
jmp
stos
loopne
add
xchg
cli
out
popa
andb
inc
in
aaa
pop
lret
mov
popf
lock
xor
xlat
insl
movsl
ss
push
mov
cmp
ljmp
pop
xor
mov
pop
inc
fmul
and
mov
cld
je
pop
out
mov
or
mov
jmp
imul
outsl
lods
scas
rcl
cmp
inc
jl
imul
mov
sub
xor
std
pop
push
lret
mov
mov
outsb
jp
cmp
insl
iret
jne
xor
or
into
std
push
repnz
iret
cmpb
repz
push
mov
cmpb
call
test
test
sbb
ds
iret
push
adc
daa
mov
xchg
mov
lret
ror
stos
aaa
sbb
mov
js
jne
xor
xor
lcall
jg
and
sbb
xor
into
mov
in
dec
push
jmp
jne
lahf
stc
test
fwait
xchg
es
dec
add
cmp
jb
jo
pop
rcrb
ds
adc
test
sbb
iret
xchg
test
cmp
dec
in
in
in
mov
arpl
xchg
jb
lahf
mov
cmp
lea
arpl
into
xlat
mov
xor
or
lods
daa
out
imul
out
cltd
and
mull
sbb
repz
outsl
push
add
xchg
das
bswap
xor
xor
dec
scas
lcall
and
xchg
dec
movl
sbb
pop
xor
and
outsl
sti
sbb
mov
outsl
adc
jne
gs
je
into
or
je
cmp
jg
movsl
jl
xchg
adc
ss
test
or
pop
loope
sbb
les
sbb
push
push
dec
sub
out
jl
adc
inc
and
insb
loope
in
sub
cwtl
adc
adc
aam
cs
mov
sysexit
aad
mov
in
mov
add
push
jns
mov
mov
mov
dec
xor
filds
jecxz
mov
pop
jle
mov
sbb
or
sbb
mov
daa
mov
arpl
pop
nop
sub
out
and
mov
out
xorps
fbstp
dec
sarl
ficomps
lock
inc
mov
push
dec
dec
lds
popa
fimuls
iret
pop
sub
and
sahf
jge
in
inc
fbstp
xor
cmp
push
leave
movsb
mov
rcrl
movsb
cmp
aad
push
pop
and
repnz
orb
or
sub
shr
dec
les
jge
into
mov
addr16
add
repz
mov
pop
mov
ror
mov
out
fistps
push
mov
and
loopne
jge
aam
aas
cltd
adc
pusha
mov
sub
mov
mov
fdivr
movb
add
push
fisttps
pushf
dec
mov
push
mov
lcall
mov
cmp
add
icebp
enter
jo
arpl
lahf
sub
movsl
test
inc
xchg
bound
dec
test
sub
pop
lea
inc
dec
mov
adc
std
sbb
xor
mov
mov
xchg
add
stos
pop
sbb
subb
mov
xchg
pop
push
stos
xchg
imul
jmp
jbe
push
mov
cld
jne
sbb
xchg
psrld
aam
std
leave
sar
not
mov
sub
mov
jecxz
cli
inc
dec
and
out
sbb
popf
push
in
movsb
setno
adc
std
mov
xor
and
arpl
sahf
loop
sarl
jmp
jnp
or
dec
add
cmpsb
into
outsb
or
in
mov
call
int3
adc
movsb
push
xchg
aad
jle
pop
pop
daa
inc
push
pop
andl
mov
push
popa
add
mov
or
imul
push
xchg
jne
xor
pop
loopne
or
push
mov
mov
and
sub
or
divb
fcoml
sbb
test
mov
dec
jg
push
xor
pushf
jle
mov
lods
call
in
cmp
lds
mov
push
mov
xor
in
sub
pop
push
mov
mov
shll
sub
xchg
fldcw
rolb
push
xchg
lods
lret
movsl
dec
mov
and
lods
lods
jle
add
adc
jbe
fcom
push
movb
jecxz
or
cmp
push
mul
bound
and
scas
lods
cmp
inc
xchg
dec
or
mov
in
lea
and
jno
xor
sbbl
inc
dec
dec
fadd
push
add
push
notb
lret
push
ret
lcall
xor
test
fs
imul
out
sub
je
sarb
mov
xchg
xchg
in
rclb
fcmove
mov
ret
insl
push
or
mov
push
mov
fcoms
out
sar
sub
mov
mov
icebp
xchg
sti
ja
jb
clc
test
xorl
je
sbb
and
dec
fildl
xchg
gs
or
ds
movsb
push
js
insb
or
shlb
adc
mov
cmp
test
pop
mov
sbb
or
cmp
in
jbe
out
test
out
ficoml
jmp
sbb
lret
xor
stc
xlat
out
adc
fwait
shl
push
jecxz
pop
push
mov
sbb
mov
pop
popa
pop
scas
arpl
sub
out
inc
mov
lods
sbb
mov
in
cmpsl
adc
xchg
fcomp
adc
mov
test
jne
xchg
lock
stos
cmp
mov
inc
fwait
pop
sub
or
stos
jnp
data16
stos
mov
lcall
mov
adc
mov
iret
loop
ja
in
mov
xchg
hlt
scas
jl
sub
repz
insb
and
scas
cld
cmp
stc
cmpsb
rolb
inc
push
fists
leave
pop
ds
pop
cli
outsb
xchg
xchg
cmp
push
jge
mov
pop
jge
insl
cltd
xchg
inc
arpl
mov
cld
inc
int
cmpsb
cmp
mov
incb
sub
cmc
mov
sahf
jmp
call
loope
in
push
push
mov
in
mov
xor
adc
inc
arpl
test
testl
mov
insl
and
adc
inc
movsl
std
scas
mov
mov
mov
push
scas
mov
dec
hlt
out
clc
enter
stos
int
push
and
pop
movsl
mov
and
mov
jmp
cmp
sbb
cmpsl
test
cmpsb
pop
int3
gs
pop
je
hlt
push
pop
lock
jbe
dec
testl
push
fsubrl
push
mov
add
mov
insb
in
gs
imul
add
or
dec
in
in
lea
ds
aas
iret
xor
xlat
push
out
imul
ret
ret
mov
adc
jb
pop
jmp
sti
cmp
sbb
cmp
in
orb
jle
mov
vmwrite
fnstcw
lock
hlt
orl
cltd
sahf
push
out
push
popa
testl
lret
push
pop
mov
pop
out
push
push
daa
xchg
insl
mov
push
loopne
lret
movsl
andb
mov
out
mov
stos
ss
jo
mov
push
jbe
mov
mov
mov
test
add
sbb
and
popf
sbb
pop
mov
std
pop
outsb
sahf
fmuls
push
roll
mov
adc
xor
inc
mov
int3
push
push
aas
xor
rcrb
ja
xchg
push
cli
iret
sbb
push
and
mov
cwtl
jb
fistps
xlat
mov
call
popf
push
dec
vpunpckhqdq
dec
or
inc
jne
cs
push
xchg
lcall
test
push
shrb
fwait
enter
mov
xor
or
mov
ljmp
or
jno
mov
adc
mov
dec
fiaddl
popf
pop
divl
and
cmp
dec
subb
int
pop
shr
or
pop
xchg
xchg
addb
cmp
jle
iret
jp
lds
pop
push
pop
insl
arpl
xor
cs
add
sbb
mov
mov
pop
cli
fwait
aaa
add
pusha
outsl
sbb
and
in
mov
fs
cmpsl
subb
mov
pop
add
and
pop
cli
cmc
lods
jne
dec
push
sahf
cmp
jae
gs
inc
pop
and
call
inc
ficoms
call
push
jb
add
cs
xor
jnp
outsl
stc
mov
in
lss
ds
popf
je
and
stc
xchg
stos
jl
xor
fidivs
mov
jle
mov
in
rcll
mov
cmp
push
cli
add
mov
popf
add
ret
pusha
out
lods
outsl
pop
jno
sbb
or
cmpb
add
faddp
movq
xor
jp
ljmp
test
jbe
insl
movl
jb
mov
sbb
xchg
out
mov
xlat
push
addr16
arpl
jecxz
fiaddl
add
dec
insl
jmp
scas
std
data16
xor
call
mov
fwait
mov
repnz
inc
xchg
mov
mov
fildl
mov
aaa
mov
push
inc
std
mov
mov
mov
sti
iret
xor
sti
add
pop
es
cmp
inc
dec
cli
mov
paddsb
push
adcb
insl
cmc
sbb
xchg
mov
inc
mov
es
mov
dec
mov
int
hlt
les
sbb
jge
sbb
icebp
lahf
test
xchg
mov
in
cmp
cmpsb
or
jg
push
and
or
pop
sub
imul
lahf
cld
out
cltd
push
jg
sub
repz
insl
outsl
test
pop
leave
mov
fidivs
mov
test
sahf
mov
jle
data16
pop
xchg
pop
rolb
dec
dec
mov
ds
jne
outsb
or
pushf
pop
test
xchg
push
sub
push
add
push
daa
pushf
jl
dec
scas
lods
mov
cmp
sbb
push
ficoms
lds
loopne
aas
mov
scas
dec
inc
lods
cwtl
xchg
sbbl
push
stos
mov
fdivrl
dec
and
adc
aad
jp
das
fiadds
aaa
in
shr
data16
or
jl
out
pop
mov
push
stos
fidivl
adc
test
cmpsl
fstl
lret
xor
lea
call
test
adc
in
mov
jmp
daa
pop
mov
cmp
cmc
sbb
mov
xor
push
aam
arpl
scas
push
sub
ss
aas
mov
add
das
sbb
int3
jns
or
lock
pushf
mov
lock
fs
push
loopne
jne
inc
sub
fisubrl
enter
mov
push
inc
push
insb
push
ds
aaa
jmp
jb
mov
call
push
addr16
push
sub
out
jecxz
dec
adc
adc
mov
dec
mov
mov
setnp
and
loopne
in
dec
ret
xchg
xchg
fnstcw
shlb
repz
fidivs
push
insb
mov
shlb
arpl
sbb
out
jge
fisubrl
in
inc
xlat
adc
push
scas
repnz
aas
mov
movsb
xor
stos
aad
jg
xchg
sbbl
out
push
enter
sub
inc
inc
dec
sbbb
xor
mov
or
jle
jns
movsl
mov
or
orb
adc
lea
pcmpeqb
inc
in
aas
cmp
sti
arpl
and
adc
xor
xlat
xor
