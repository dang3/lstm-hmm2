rol
sub
mov
test
jmp
lea
jmp
adc
stos
pop
sbb
popl
add
cmp
xchg
mov
jmp
adc
in
stos
or
add
jmp
rol
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
xchg
mov
and
mov
sub
mov
mov
mov
andl
xchg
push
xchg
xor
xchg
jmp
push
nop
lea
jmp
flds
or
push
xchg
push
nop
push
xchg
push
xor
add
and
sub
sub
pop
push
xchg
jmp
pop
cld
mov
push
mov
pushf
sbb
fisttpl
test
add
add
inc
mov
movzbl
jmp
repnz
inc
xchg
mov
mov
jmp
xor
xchg
inc
addr16
call
xchg
lea
jmp
push
stos
mov
call
cld
test
jmp
aad
and
jne
jmp
pushl
inc
add
xor
push
or
mov
mov
or
sub
sub
and
mov
ror
inc
mov
and
ror
and
dec
test
jne
pop
pop
call
push
mov
add
add
ror
pop
sub
and
add
mov
jmp
call
leave
jmp
decl
add
xor
mov
xchg
incl
cld
dec
xchg
mov
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
push
mov
push
xchg
push
mov
jmp
push
repnz
push
xchg
jmp
push
mov
jmp
push
xchg
jmp
nop
nop
push
xchg
shr
mov
mov
jmp
and
push
pop
mov
xchg
lea
jmp
mov
push
pop
mov
mov
jmp
pushl
xchg
push
xor
and
sub
and
dec
sub
mov
xor
or
add
mov
rol
dec
test
jne
pop
xor
shl
shl
sub
mov
mov
call
neg
jmp
sbb
jmp
loop
cmp
sub
fsubr
add
jmp
stc
jge
es
int
and
xor
sub
push
and
or
mov
push
nop
lea
jmp
repz
push
push
xchg
push
xchg
pushl
xchg
pushl
nop
jmp
nop
push
cld
dec
dec
sub
add
mov
and
mov
sub
cld
jmp
xor
inc
addr16
jmp
sub
or
or
and
and
add
andl
nop
push
xchg
push
xchg
push
push
pop
push
xchg
push
xchg
add
mov
push
addr16
jmp
push
mov
push
mov
push
mov
push
mov
test
jmp
and
out
mov
add
add
or
mov
or
pop
ror
dec
xor
pop
xor
pop
mov
pop
call
nop
cmpb
xchg
je
cmpb
cld
jmp
mov
push
pop
movl
xchg
shl
mov
or
and
or
mov
shr
jmp
ja
stc
fs
push
pop
and
xchg
mov
xchg
ret
jmp
vzeroupper
test
push
mov
push
xchg
push
xchg
push
xchg
push
xchg
jmp
test
into
push
xchg
jmp
lret
outsb
into
pushl
addr16
push
cld
call
add
ror
and
ror
mov
push
popl
lea
jmp
cmp
dec
cltd
test
arpl
aad
add
push
ror
and
or
add
ror
xor
and
add
ror
xor
add
rol
mov
dec
test
jne
pop
shl
xor
shl
add
and
add
mov
call
xor
and
mov
lea
jmp
pusha
mov
jmp
xor
pop
pushl
ror
pop
xor
xchg
rorl
jmp
cmp
dec
jmp
testl
test
inc
sub
pop
ret
jmp
rorb
nop
nop
nop
call
xchg
test
jmp
iret
nop
xchg
sbb
add
call
mov
test
jmp
inc
inc
mov
je
push
xchg
xor
nop
xor
pop
jmp
push
xchg
call
xchg
push
mov
push
xor
dec
or
sub
push
dec
or
shr
pop
rol
shr
add
shl
dec
test
jne
pop
dec
inc
sub
or
mov
call
test
jmp
insb
and
add
jp
jmp
pushl
or
add
pop
pusha
jmp
popa
shl
xor
shr
add
rol
mov
push
xchg
jmp
je
sub
shl
mov
sub
xchg
mov
push
pop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
pop
cmpl
cld
jne
jmp
jne
shr
shr
mov
mov
jmp
lea
jmp
mov
add
add
mov
mov
add
shl
rol
pop
ret
jmp
mov
nop
nop
mov
mov
lea
jmp
or
stc
cld
test
jmp
cmp
pop
je
jmp
lea
jmp
in
call
xchg
dec
mov
lea
jmp
adc
out
test
test
incl
sub
mov
mov
jmp
jmp
nop
nop
nop
nop
add
add
add
xchg
push
add
ror
push
dec
and
pop
ror
or
shl
or
mov
dec
test
jne
pop
and
and
add
call
push
mov
push
inc
shl
rol
rol
push
add
add
mov
mov
inc
xor
mov
sub
mov
add
dec
xor
dec
test
jne
pop
pop
mov
call
test
jmp
cmp
test
nop
jmp
call
xchg
add
nop
push
popl
movb
xchg
movl
xchg
call
cld
popa
jmp
xor
cmpsl
mov
jmp
nop
nop
nop
nop
nop
nop
pusha
jmp
pop
call
nop
popa
jmp
jae
jmp
mov
ret
jmp
enter
nop
nop
mov
mov
jmp
movb
cld
incl
xchg
jmp
mov
xor
mov
movzbl
jmp
cmp
fs
mov
call
cld
add
add
sub
or
sub
pop
jmp
push
loope
call
cld
or
add
mov
pop
rol
xor
add
dec
mov
mov
xor
inc
mov
add
cld
movzwl
jmp
fnstsw
ljmp
jmp
incl
addr16
xor
mov
inc
mov
mov
mov
and
xchg
inc
xchg
inc
xchg
jmp
fldcw
add
add
shl
add
mov
or
shl
add
and
and
add
shl
add
xor
inc
mov
mov
add
rep
jmp
push
jle
repnz
ror
dec
xor
sub
and
and
add
jmp
ret
shr
jmp
mov
bnd
test
add
test
jmp
arpl
lret
inc
je
xor
mov
and
shl
mov
and
mov
sub
mov
jmp
xor
add
or
inc
or
mov
lea
jmp
xchg
sub
xchg
sub
sub
inc
rol
mov
jmp
lea
jmp
fucomp
mov
add
jne
jmp
mov
xchg
mov
addr16
jmp
call
cld
test
jmp
jne
cmp
nop
jmp
push
cld
call
mov
push
mov
push
rol
shr
add
add
or
add
and
add
xor
shl
xor
dec
test
jne
pop
dec
sub
and
add
mov
call
jmp
pop
sub
adc
add
test
mov
jmp
adc
js
xchg
push
pusha
jmp
jmp
pushl
and
dec
pop
add
add
and
or
add
mov
jmp
pop
xabort
shr
mov
xor
jae
add
push
xchg
jmp
hlt
or
push
pop
add
sub
mov
and
shl
mov
add
xchg
jmp
add
add
add
nop
nop
nop
nop
nop
call
nop
test
jmp
cmp
sbb
in
add
add
jnp
incl
xor
or
add
rol
xor
mov
sub
xchg
shr
jmp
jmp
sbb
mov
nop
xor
mov
rol
mov
mov
or
and
shl
shr
xor
mov
jmp
xchg
xchg
cmp
cwtl
cltd
lea
jmp
popf
adc
mov
loop
imul
shl
or
mov
movzwl
jmp
fs
dec
and
mov
sub
mov
and
addr16
jmp
xor
and
or
rol
mov
rep
jmp
pop
push
xlat
jmp
into
dec
xor
and
dec
mov
add
xchg
movzwl
jmp
arpl
ror
incl
addr16
add
xchg
jmp
je
xor
sub
sub
and
mov
mov
sub
xchg
mov
mov
ror
sub
shr
mov
mov
xchg
incl
mov
nop
nop
nop
nop
nop
dec
mov
mov
jmp
add
xchg
jmp
cmp
mov
jne
pushl
rol
shr
ror
and
add
pop
and
mov
add
cld
add
nop
add
xchg
jmp
cmp
xchg
jl
or
mov
shr
xor
xor
sub
or
and
add
push
xor
pop
add
andl
xchg
pushl
or
rol
pop
add
xchg
jmp
jne
jmp
sub
cld
jmp
dec
mov
dec
mov
xor
sub
ror
mov
movzbl
jmp
cld
loop
jmp
inc
xchg
inc
cld
dec
jmp
push
jne
add
mov
cmpl
mov
jne
push
sub
or
or
dec
pop
add
add
inc
mov
jmp
addr16
cmp
nop
dec
mov
add
xchg
cltd
jmp
jge
fwait
pop
jge
and
xchg
jmp
jns
pop
mov
mov
sub
pop
add
push
pop
mov
pop
push
popl
add
and
and
and
pop
leave
jmp
mov
jmp
hlt
leave
mov
nop
nop
nop
nop
nop
add
push
pop
sar
jmp
pop
dec
lods
shr
jmp
daa
hlt
loop
push
adc
jmp
orb
shl
jmp
mov
xchg
incl
cld
lea
jmp
lahf
mov
rol
xor
and
sub
mov
call
xchg
cmp
xchg
nop
nop
nop
nop
nop
jb
jmp
dec
lds
xchg
mov
lea
jmp
xchg
fisubs
inc
mov
add
mov
add
add
nop
nop
nop
nop
nop
test
jmp
jecxz
jle
and
shl
mov
mov
xchg
jmp
or
cmp
xchg
jb
inc
xchg
jmp
out
test
sub
push
pop
sub
xchg
decl
jmp
push
jne
or
inc
dec
shl
mov
mov
push
pop
sub
cld
jmp
cmpb
incb
nop
jae
inc
mov
inc
cld
test
jmp
mov
test
add
add
leave
inc
sub
rol
or
mov
xor
xor
shr
mov
nop
nop
nop
nop
nop
sub
mov
mov
addr16
incl
mov
dec
cld
mov
jmp
rorl
test
decl
jmp
data16
decl
jmp
cwtl
outsb
pop
mov
test
incl
into
jmp
test
mov
add
jmp
xchg
pop
cmpsb
xor
xchg
inc
xchg
jmp
add
add
mov
sub
rol
sub
or
sub
mov
mov
push
pop
incl
push
pop
jmp
mov
or
add
and
add
mov
dec
mov
add
cld
add
mov
dec
jmp
inc
std
out
std
xchg
jne
test
jmp
mov
jmp
xchg
adc
mov
add
nop
nop
nop
nop
nop
rorl
jmp
pop
mov
shl
xor
mov
jmp
call
pop
incl
cld
mov
nop
xor
nop
cmpl
xchg
je
inc
add
and
mov
shr
add
dec
xor
shr
pop
jmp
dec
test
adc
push
pop
dec
jmp
movl
jne
push
mov
push
xchg
pushl
xchg
push
xchg
push
xor
sub
xor
xor
inc
and
sub
mov
mov
or
ror
add
dec
test
jne
pop
and
and
add
call
jmp
xchg
mov
pop
and
mov
mov
mov
add
pop
leave
jmp
ret
jmp
mov
mov
push
xor
nop
nop
mov
xchg
lea
jmp
pop
pop
js
xchg
push
inc
push
shr
push
sub
or
inc
dec
rol
pop
and
xor
mov
xor
dec
test
jne
pop
pop
mov
call
nop
nop
nop
nop
nop
push
xchg
push
add
or
inc
and
mov
push
dec
sub
sub
mov
and
add
add
dec
test
jne
pop
pop
mov
call
test
jmp
movsb
mov
nop
nop
je
push
cld
nop
nop
nop
nop
nop
call
push
pop
test
jmp
sub
add
je
xor
add
mov
xor
dec
add
xor
mov
call
addr16
shl
inc
and
mov
sub
mov
mov
mov
nop
nop
nop
nop
nop
jmp
orl
xchg
or
xor
mov
xor
mov
mov
add
and
and
add
mov
add
xor
or
mov
nop
nop
nop
nop
nop
rep
jmp
sub
js
out
cmp
dec
lds
repz
and
add
or
add
mov
push
push
pop
push
xchg
pushl
addr16
call
addr16
nop
nop
nop
nop
nop
push
nop
push
cld
nop
nop
nop
nop
nop
pushl
nop
call
mov
ror
or
xor
mov
nop
nop
nop
nop
nop
test
jmp
lea
shll
mov
nop
mov
jmp
push
add
or
add
and
mov
add
xchg
sub
xchg
jmp
ror
sub
mov
sub
mov
nop
nop
nop
nop
nop
shr
jmp
jp
leave
jmp
rcrl
fwait
adc
nop
nop
nop
nop
lea
jmp
push
or
into
decl
add
in
fdivl
add
nop
add
shl
sub
dec
mov
movzwl
jmp
jbe
pop
movsl
xor
xor
add
shl
mov
and
push
pop
nop
nop
nop
nop
nop
cmp
addr16
jne
and
xchg
add
mov
add
xchg
add
mov
pushl
xor
and
shl
add
dec
pop
addl
cld
decl
jmp
xchg
adc
nop
nop
nop
jne
add
mov
cmpl
xchg
jne
mov
xchg
test
jmp
xchg
imul
roll
add
lea
jmp
dec
push
xor
cmpl
mov
je
jmp
add
xor
shr
mov
ror
add
shl
rol
mov
add
mov
nop
nop
nop
nop
nop
push
addr16
push
ror
rol
or
mov
push
inc
and
and
add
add
or
inc
or
dec
test
jne
pop
pop
call
cmp
cld
mov
jmp
enter
xor
add
xor
and
shr
xor
sub
mov
test
jmp
imull
test
add
add
ret
lret
add
xor
mov
nop
nop
nop
nop
nop
pushl
or
rol
or
and
add
pop
add
xor
and
mov
add
addr16
dec
inc
mov
shr
inc
mov
add
addr16
test
jmp
shll
shl
nop
nop
nop
nop
nop
je
jmp
pushl
and
xor
pop
test
jmp
push
pop
nop
nop
nop
nop
nop
jns
nop
nop
nop
nop
nop
movzwl
jmp
mov
or
add
add
push
pop
add
addr16
push
cld
pushl
push
pop
pushl
mov
mov
inc
sub
push
and
and
inc
shl
add
and
mov
or
and
and
add
add
mov
sub
dec
test
jne
pop
pop
call
add
mov
nop
nop
nop
nop
nop
mov
nop
and
mov
add
xchg
test
jmp
ret
jl
into
popf
jne
add
mov
cmpl
push
pop
nop
nop
nop
nop
nop
jne
mov
jmp
mov
nop
nop
nop
mov
xchg
add
rol
xor
and
xor
mov
nop
nop
nop
nop
nop
mov
xchg
xor
mov
pushl
mov
pop
mov
mov
cmp
xchg
jne
push
ror
pop
add
add
mov
nop
nop
nop
nop
nop
or
pop
mov
xchg
shl
mov
and
add
add
add
add
mov
dec
add
xor
or
pop
xor
and
shr
xor
pop
add
dec
or
ror
mov
sub
pop
ret
jmp
out
jne
stos
mov
nop
nop
addb
xchg
test
std
and
loope
jbe
or
push
out
xor
hlt
ror
xchg
stos
test
xchg
and
leave
xor
sub
sti
dec
cld
fisttps
dec
loopne
hlt
fildll
sub
pop
and
or
ds
sti
das
insb
jnp
xor
sti
and
aas
cmp
mov
xchg
and
jb
push
pop
das
shlb
cmpl
lea
int
lds
ret
sbb
and
mov
adc
mov
and
aas
or
inc
scas
sbb
adc
cmp
fdivs
cmp
lret
out
cwtl
das
sbb
insl
pop
scas
push
arpl
mov
out
xorb
ficoml
jb
sbb
inc
dec
xchg
lret
cltd
xorb
data16
cli
inc
adc
sahf
dec
leave
jb
pop
add
test
adc
out
mov
or
test
sbb
sub
mov
adc
pop
int3
sahf
cmc
mov
dec
xor
stos
add
fbstp
imul
xchg
push
insb
mov
add
and
inc
ja
xor
mov
pop
adc
clc
pop
dec
xchg
outsl
dec
mov
shrb
leave
mov
arpl
enter
lea
fxtract
mov
sbb
ljmp
sub
cmpsl
cltd
inc
or
push
xor
mov
cltd
roll
imulb
movsl
mov
fsubrs
pop
ja
and
push
jns
cmp
mov
and
pop
jnp
add
loopne
xor
lods
mov
mov
push
mov
aad
mov
xchg
sbb
dec
sub
data16
xor
pop
jg
popf
lods
jle
xor
jg
mov
xor
jp
loop
mov
inc
out
hlt
xlat
into
cs
xchg
mov
inc
or
fisubl
or
ret
inc
jo
out
negb
sub
and
js
mov
jbe
pusha
ss
inc
mov
add
ss
lret
cwtl
call
divb
mov
mov
xchg
add
jno
shl
sub
push
dec
fcoms
mov
scas
dec
ret
push
jo
jno
ja
pop
rcrb
inc
mov
xchg
shrb
pop
adc
pop
push
jg
sub
daa
inc
push
and
jmp
ss
pop
cmp
mov
popa
cmp
cmp
push
pop
subl
inc
lret
cli
dec
push
in
inc
fimull
or
xchg
or
sbb
decl
pop
or
test
incl
fmull
xorl
dec
or
out
das
aaa
adc
sbb
inc
orl
push
mov
les
aad
jno
dec
adc
scas
bound
aad
push
in
jae
out
fdivl
cld
mov
fs
sbb
jge
daa
mov
or
cmc
outsl
dec
test
xor
xlat
cld
dec
jmp
mov
jp
pop
int
push
out
stos
push
xor
cmp
adc
clc
cmp
jge
incl
pop
jae
cmp
mov
dec
addb
addl
xchg
and
out
cltd
sbb
movsl
movsb
xchg
mov
adc
std
push
ja
mov
jle
aaa
repnz
sub
add
loopne
int3
xor
lcall
jmp
jno
shlb
sti
jbe
loopne
adc
cs
ret
sbbb
lahf
push
cwtl
xchg
ds
mov
mov
aad
orl
inc
je
mov
in
sbb
fildll
imul
iret
add
cmc
ret
pop
cmp
jge
jecxz
call
nop
cwtl
xchg
rclb
aas
and
cmc
cld
test
lret
xchg
and
out
loope
hlt
mov
jnp
cltd
imull
dec
adc
jo
rclb
inc
movsl
mov
mov
sahf
or
mov
adc
lret
ficomps
and
jge
xchg
pop
mov
cmp
outsl
jb
sub
popf
xchg
mov
inc
and
addr16
cmpsl
jg
dec
mov
movsb
ljmp
and
std
fimuls
ret
sbb
xchg
mov
jg
cli
and
pop
xchg
jne
xlat
outsl
aaa
fcoms
fmul
dec
pop
std
stos
jmp
leave
imul
mov
or
pop
pop
pop
push
sub
fisttpl
out
es
aad
rcrb
dec
jnp
stos
pop
hlt
test
mov
sti
jge
enter
dec
cmp
int3
test
dec
push
das
mov
xchg
or
aaa
ljmp
lock
ss
push
jg
jecxz
pop
je
movsl
and
mov
sbb
fstl
or
cwtl
inc
mov
shl
loop
inc
lock
dec
mov
dec
xor
les
or
inc
and
out
ja
idivb
push
xchg
push
sbb
mov
cld
mov
sbb
div
movb
les
mov
sub
lock
mov
mov
or
sub
mov
rcll
adc
out
fldenv
adc
idivl
das
or
and
pop
adc
iret
rclb
insb
cmpsl
popa
add
mov
inc
mov
adc
js
pop
xor
cmp
xorl
jl
fldenv
cmp
imull
push
sti
stos
push
mov
scas
pushf
mov
mov
cmp
xchg
or
rcr
aad
adc
xchg
inc
fldenv
jo
sub
imul
mov
jmp
mov
aas
ret
cmpsb
in
jge
movsb
sbb
jg
sub
imul
pop
adc
add
cmc
shl
or
lahf
pusha
lret
pusha
fistpll
mov
notb
in
repz
adc
sub
mov
jne
xor
sarl
inc
test
inc
pop
lcall
inc
rolb
adc
inc
cmc
fidivrs
pop
lea
jmp
sub
loopne
xor
loope
sub
xor
popf
or
push
jnp
xor
mov
xchg
scas
shll
addr16
xchg
bswap
mov
mov
addr16
fcomp
andb
mov
mov
shll
jle
aad
pop
jmp
or
into
cmpsb
xchg
push
repz
fisubl
xor
jno
push
mov
cmp
adcb
aam
and
scas
test
das
cmc
cwtl
pop
cld
xchg
ret
push
and
mov
out
out
push
dec
and
sbb
xor
or
xchg
pop
shrl
or
out
pusha
xchg
and
insb
dec
cs
or
nop
pop
sub
mov
jg
push
push
jl
push
jl
xchg
stos
jnp
ds
pop
dec
add
sbb
sub
mov
mov
and
ljmp
sbb
push
jns
shrb
or
dec
push
mov
pop
mov
aas
sbb
sub
cmpsl
mov
jno
push
lock
jge
lahf
fsts
or
mov
push
xor
icebp
stc
ret
popa
fimull
pop
xchg
jge
imul
nop
mov
add
sub
xchg
sub
fwait
psubsw
inc
xor
sti
inc
aas
ja
fldt
frstor
pop
adc
or
push
test
push
jbe
loopne
outsl
loopne
jecxz
sbb
cmp
pop
jl
loope
jo
jecxz
andl
test
adc
dec
lods
mulb
jle
mov
stc
daa
mov
and
ret
fwait
xlat
pop
adc
dec
pusha
je
cs
popa
push
loopne
mov
push
mov
lock
pop
add
inc
pusha
push
and
mov
mov
add
xor
movsl
mov
jle
mov
or
les
fisttpll
call
xor
addb
xchg
fwait
mov
fs
sbbb
mov
cld
dec
stc
decl
add
out
and
gs
loop
pushf
mov
push
mov
add
clc
std
imul
xchg
jge
daa
xor
pop
push
xchg
jl
into
xor
sbb
pop
jl
data16
pop
fisubl
pop
cmp
add
lock
loop
addr16
push
xor
jge
and
andb
push
rcl
mov
inc
pop
xchg
inc
push
sub
jb
ja
aam
ja
sbbb
or
fcomp
repz
adc
popf
or
jbe
fnsave
ljmp
mov
pop
push
jnp
f2xm1
or
push
data16
fsubl
lock
aad
cld
stc
loope
push
pusha
jl
xlat
daa
add
mov
mov
sbb
subb
sbb
or
lret
popa
les
negl
int3
jge
das
cld
lds
outsl
push
dec
and
mov
inc
inc
and
mov
xchg
and
mov
popf
adc
test
jns
jle
pusha
mov
dec
jmp
out
add
xchg
push
cmp
adc
adc
test
and
movsl
decb
shlb
push
mov
ret
dec
in
dec
rclb
leave
jb
push
add
add
outsl
xor
dec
repz
repnz
sub
xchg
insb
or
push
add
sub
outsl
mov
or
icebp
add
call
rcrl
cwtl
mov
mov
jnp
pusha
icebp
mov
lds
call
mov
cmp
ds
push
pop
mov
jb
mov
push
arpl
add
inc
stc
sub
out
aaa
push
fld
jg
scas
push
push
ret
sub
orl
push
ja
xor
xchg
clc
bound
push
arpl
xor
iret
xchg
lock
into
pop
dec
mov
xor
jnp
xor
dec
inc
sub
mov
xor
lea
jae
es
push
cwtl
je
mov
xchg
int3
xor
mov
arpl
xchg
dec
add
out
subl
imul
sbb
fisubl
addr16
std
les
xchg
sbb
xchg
ljmp
inc
dec
mov
imul
dec
adc
adc
nop
and
adc
js
jno
dec
ja
hlt
lock
push
fsubp
cmp
je
xchg
pop
lods
xor
jbe
xor
and
aad
inc
push
cli
sarl
adc
pop
popa
shr
jno
clc
pop
jns
jae
cltd
cmp
push
xchg
mov
and
push
pusha
sbb
fcompl
cmp
popa
jecxz
mov
scas
scas
xchg
and
cmp
cmp
test
repz
sarb
or
daa
xor
pop
sbb
outsb
jo
push
mov
subb
mov
sbb
jmp
pop
lahf
and
daa
loope
adc
fstpl
mov
inc
push
fs
popa
xchg
sub
jae
sbb
shll
mov
push
outsb
pusha
sbb
xchg
popf
aas
lret
inc
push
je
je
shr
push
lods
outsb
mov
jnp
xor
aad
loope,pn
je
int
mov
adc
pop
lcall
stc
imul
sbb
gs
mov
cmpsl
pop
movsb
in
sahf
int3
call
subl
ja
pop
inc
cmp
lret
out
pop
nopl
cltd
xor
push
outsl
push
fldt
push
xor
mov
mov
cmp
jne
dec
mov
fwait
push
add
and
push
pop
push
push
inc
ret
daa
leave
push
ljmp
adc
jbe
add
and
or
sub
xor
sub
fnstcw
cmp
or
mov
insb
mov
xor
xchg
xchg
and
es
push
pop
call
call
and
adc
or
pop
jno
xor
in
les
loope
mov
jnp
inc
arpl
rcr
mov
imul
xor
xchg
push
mov
and
sahf
or
pop
pop
clc
lods
fnstenv
sub
jmp
lods
mov
loop
jp
mov
add
out
jl
xor
ffreep
dec
and
mov
sub
or
lcall
dec
mov
pop
int3
fstl
mull
lods
hlt
jecxz
outsl
fsub
pushf
lds
ret
loope
sub
divb
mov
fstpt
lret
xchg
push
xor
fildl
lds
pop
dec
or
sub
xchg
jg
mov
mov
hlt
mov
scas
push
shld
or
stc
sahf
daa
sti
xchg
jbe
add
jl
clc
sub
sbb
mov
xchg
cmp
inc
loop
mov
add
insl
stos
inc
enter
xlat
push
cmp
inc
and
pop
dec
xchg
ja
popf
cmp
dec
add
mov
in
out
mov
aam
push
inc
pop
clc
mov
daa
sbb
fwait
mov
sub
xchg
in
mov
test
cli
xchg
adc
ret
jmp
repnz
lods
aad
mov
adc
das
jae
cmp
xchg
xchg
std
sub
lret
push
cli
jo
pop
push
shlb
push
xchg
lret
jecxz
shlb
mov
xchg
sub
mov
xchg
mov
sub
dec
fdivr
sahf
dec
xchg
pop
and
insl
cmp
pop
retw
push
sbb
in
jo
into
out
mov
and
add
push
pop
out
das
das
rclb
or
add
jle
add
mov
out
mov
mov
cltd
mov
cs
imul
int3
fstpt
or
push
jle
mov
sbb
pop
sbb
jo
lods
sbb
sbb
add
or
loop
out
sub
jnp
or
sbb
addr16
loopne
and
fcomps
pop
mov
addb
inc
mov
idiv
inc
idivl
fiaddl
mov
push
adc
test
push
lock
mov
ds
lods
pop
dec
popf
sub
cmp
fmuls
lods
rcrb
adc
gs
sub
push
pop
pop
insl
jne
push
jae
aam
out
fmuls
in
mov
cmpsb
stos
sub
inc
loope
mov
gs
cmpl
std
aad
nop
add
jno
xor
inc
insl
je
sub
fsubl
shlb
pop
pop
std
testl
rcll
xchg
pusha
xchg
inc
cmp
and
loope
dec
sub
pop
popf
popa
mov
test
subl
push
jecxz
rolw
and
or
lods
sub
je
dec
lods
push
push
sahf
loop
lahf
lods
js
shlb
lea
or
popf
push
adc
or
out
mov
cmp
and
mov
stc
ret
push
sti
dec
cmp
push
mov
jmp
xchg
lahf
inc
popa
and
xchg
sahf
cmp
jb
in
xor
mov
mov
sub
inc
pop
add
push
cmp
dec
roll
dec
outsb
pop
pop
roll
and
cmp
inc
cmc
inc
adc
lret
iret
cs
fwait
imul
push
add
xor
xchg
xlat
movsl
add
pop
lret
xchg
jae
imul
jnp
or
mov
lods
inc
daa
sbb
mov
jg
loopne
push
mov
scas
jbe
test
in
adc
mov
gs
jbe
mov
pushl
add
lret
xor
jb
sbb
out
stc
stos
bound
mov
xor
je
mov
pop
mov
push
mulb
dec
lea
lds
dec
pop
enter
inc
dec
pop
add
popf
subb
sub
dec
dec
xchg
sbbb
mov
jg
stos
rolb
jo
imul
cmp
shl
inc
lret
sbb
rolb
cmc
xor
sbb
xor
sbb
imul
push
jne
adc
pop
mov
xorb
std
jmp
repz
push
or
add
push
mov
jbe
mov
in
or
dec
mov
repnz
mov
ja
or
fwait
mov
push
mov
notb
jo
ss
fidivs
xor
xchg
shrb
shrb
push
jnp
jmp
arpl
jecxz
mov
mov
push
dec
mov
sahf
dec
neg
push
xor
sbb
pop
mov
cmp
push
ja
aaa
adc
enter
or
mov
add
aad
insl
jg
test
stos
xchg
mov
lods
xrelease
fcmovnbe
arpl
ds
mov
xchg
xor
lret
pop
cwtl
lahf
jne
int3
inc
sub
jns
sub
aad
sti
dec
sbb
sahf
repnz
add
outsl
pop
cltd
adcl
ret
shlb
mov
mov
mov
popf
rcl
arpl
jp
xor
mov
ds
out
lods
lret
mov
stos
cmp
cmpsb
xchg
cmc
mov
xchg
scas
gs
add
adc
icebp
outsl
aaa
mov
es
sbb
std
hlt
mov
dec
hlt
loope
loope
fdivs
das
stos
movsb
out
fnstsw
iret
lret
and
jns
and
fs
and
adc
add
xchg
xor
js
outsl
cmp
stos
out
jmp
int
mov
sbb
out
mov
xlat
cwtl
jno
adc
xchg
add
and
sahf
lahf
adc
and
xor
icebp
inc
push
insl
and
js
xor
loop
sbb
inc
pop
test
dec
mov
int3
sbbl
mov
daa
adc
xor
push
mov
cli
js
adc
aaa
rcrb
jle
pop
fisubl
push
mov
mov
arpl
xor
jecxz
mov
in
or
out
mov
push
outsb
mov
clc
ret
mov
sub
mov
xchg
sbbb
je
sbb
push
test
push
push
pop
add
ja
dec
mov
inc
fs
sarl
or
jg
sbb
pop
push
push
cli
mov
and
aam
call
test
jbe
xchg
push
pop
xchg
or
mov
xchg
cld
daa
scas
pusha
jmp
cmp
xchg
add
sahf
fwait
loopne
pop
lahf
movsl
frstor
outsb
fsubr
jp
out
je
int
enter
xor
jl
nop
mov
push
push
fdivr
mov
xchg
pop
pop
mov
aas
mov
addb
dec
mov
imul
jne
push
call
cmp
cmpsl
popf
inc
bound
adc
cmp
stc
jmp
mov
dec
cmp
lds
mov
or
fdivr
inc
std
push
sahf
lahf
mov
jmp
sbbb
sub
add
es
loopne
ret
les
repnz
repz
inc
xlat
stos
mov
cmp
xchg
test
fisubs
add
popa
jno
lods
out
ficomps
jmp
xor
lock
adc
lods
jo
shrb
xchg
inc
adc
andb
inc
test
or
stc
dec
leave
testl
pop
cmp
cs
inc
mov
andl
cmp
fldt
jecxz
in
cmc
xchg
pop
dec
sbb
or
push
insl
jmp
push
xchg
push
in
xor
repnz
pop
fmuls
push
dec
xchg
fildl
fcmovu
movsb
inc
cmp
popa
jp
xchg
adc
mov
jae
mov
movsb
xchg
.byte
jne
pop
fldl
shlb
mov
jae
pushf
leave
ret
je,pn
int3
jnp
cmp
fstl
dec
push
andb
addr16
inc
jl
or
jmp
fidivl
jne
cmp
fwait
sub
out
insb
xchg
std
fnstsw
jg
jg
jno
or
or
add
ss
arpl
jnp
movl
xor
pop
cwtl
aam
dec
mov
mov
enter
mov
mov
push
adc
jmp
mov
pop
ret
mov
or
jle
fldcw
pop
out
shll
rcrb
push
rcrb
mov
pop
inc
dec
ljmp
movsb
test
xchg
inc
xchg
push
push
pop
push
ret
sbb
sar
mov
push
movsl
cmp
xchg
jp
mov
or
mov
or
xor
test
jmp
fnstenv
ljmp
lret
scas
ss
mov
add
xchg
loopne
stc
fdivp
mov
jle
fucom
cmp
pop
cmp
lods
jmp
pop
sahf
daa
inc
out
dec
mov
lret
pop
aas
mov
add
sbb
dec
pop
stos
into
cmp
mov
aas
mov
lods
stos
cltd
sbb
mov
mov
scas
pop
adc
add
inc
pop
pop
stos
rcll
xlat
lret
js
ljmp
test
daa
aas
lds
movsb
mov
into
sub
dec
xor
in
xchg
es
xchg
mov
gs
add
cmpsb
call
pop
loop
mov
pop
data16
fstl
out
sarb
nop
mov
push
xchg
push
insl
mov
dec
add
mov
test
mov
xor
inc
push
pop
nop
jecxz
subb
lods
in
flds
jbe
cmp
xchg
xlat
rcr
mov
enter
cmp
cmp
or
outsl
inc
mov
push
std
xchg
push
mov
jae
subb
int3
test
rcll
or
push
fwait
inc
lods
cmp
xlat
inc
sahf
mov
ljmp
xor
in
dec
jne
sti
jo
pushf
and
addr16
ret
subl
mov
aas
dec
in
xchg
pop
mov
out
add
or
mov
scas
xchg
mov
jnp
jle
push
fnstsw
ret
push
xchg
lret
in
ja
and
inc
enter
inc
sbb
fs
pop
es
stos
pushf
and
loopne
sti
mov
and
sbb
mov
inc
mov
popf
xor
shll
inc
repnz
fs
xchg
pop
repz
jle
je
popf
xchg
mov
shll
mov
pop
fs
push
and
and
jge
je
out
in
out
sbb
jo
push
or
cli
add
insl
jae
mov
add
andl
or
inc
pop
mov
add
cmp
cmpsl
and
out
xor
sub
int3
mov
cmp
fsubrp
ds
jb
je
int
sarb
shll
pop
pop
and
xor
push
int
fcomi
addr16
fisubrs
movsl
sub
dec
int
stos
add
xchg
jecxz
lea
sar
cld
adc
dec
xchg
mov
out
sbb
adcb
mov
or
xor
pop
xor
mov
call
add
add
mov
pop
mov
dec
inc
jo
mov
mov
sub
popa
nop
in
outsl
andl
dec
inc
les
push
adc
arpl
pop
out
mov
cmp
or
mov
repz
sbb
sbb
jl
jns
mov
sahf
ljmp
mov
xchg
mov
xchg
data16
lock
stos
pop
push
xchg
inc
je
sub
call
jae
enter
rolb
lret
ret
mov
xchg
pop
stos
push
lock
in
xor
cmp
int
scas
imul
mov
xor
inc
or
mov
stos
movsl
flds
cwtl
neg
rclb
cmp
xorl
push
mov
xchg
xchg
add
cmpsb
inc
mov
outsl
sub
sbb
in
or
call
out
inc
mov
mov
mov
nop
int3
rcl
lret
mov
mov
sbbb
dec
inc
xchg
jae
outsb
aaa
or
lock
xchg
iret
out
or
pusha
jle
cmp
bound
xor
in
imul
int
rorl
out
mov
xchg
repz
mov
aas
mov
and
mov
pushf
fists
xchg
xchg
jl
cld
push
outsl
cwtl
adc
add
int3
mov
mov
lret
xor
add
cltd
sbb
pop
mov
pop
cltd
pop
push
shll
in
out
dec
mov
xchg
inc
lret
sbb
test
mov
cmpl
xchg
scas
xchg
sbb
cmp
cli
mov
sti
add
and
aad
add
xlat
jge
jg
xchg
dec
aas
out
mov
jl
xlat
leave
add
lahf
gs
dec
dec
ret
nop
gs
cs
add
sub
aaa
mov
adc
aas
jo,pt
pop
cltd
cmp
push
loopne
or
out
insl
xor
cmp
scas
gs
int
mov
test
js
cs
lods
or
sub
bound
cli
stos
daa
xchg
adc
jp
pop
xor
sbb
mov
ret
sub
imul
cmpsl
movl
ljmp
push
sub
xchg
addr16
lea
mov
in
mov
xor
push
cmp
pushf
hlt
ja
adc
arpl
lock
push
test
pop
cmc
jg
test
movsl
inc
mov
jge
jbe
jg
stos
inc
mov
dec
inc
mov
adc
and
pop
push
mov
pop
inc
aaa
jge
jne
enter
sar
fdivrl
push
push
mov
sub
inc
or
aam
push
push
imul
popa
pusha
pusha
push
cmpsb
fistpl
addr16
pop
lahf
pop
push
jo
cmpsl
scas
pusha
aas
arpl
xor
iret
mov
orl
sub
or
xor
pop
mov
mov
mov
fistl
popa
sub
and
xchg
sbb
xor
rcrl
sti
mov
popf
mov
inc
jnp
mov
or
rol
sub
xchg
add
add
push
jge
pop
push
inc
sbb
jne
jbe
xor
and
in
jle
xchg
cwtl
mov
jp
aad
sarl
ljmp
jo
jbe
mov
pop
cmp
addr16
jp
mov
stos
sar
lret
sub
cs
mov
sahf
xor
ret
and
inc
ret
int
addb
mov
popl
test
daa
fisttpl
and
pop
jnp
fwait
add
inc
jno
push
jmp
cmp
pop
sbb
dec
pop
cmp
jno
xchg
mov
out
daa
pop
addr16
lds
sub
mov
pop
ret
dec
xorl
or
sbb
imulb
adc
bound
ficoms
add
cmpsb
dec
cwtl
add
cmp
popa
adc
jmp
jbe
push
clc
xor
movsb
xchg
and
adc
or
dec
stos
mov
xor
sub
push
pop
mov
jb
iret
ss
xor
sbb
push
xchg
push
into
xor
cmc
movsl
pop
xor
pop
test
mov
cmp
ret
loop
into
lea
ss
xchg
clc
cmp
cmpsb
xor
pop
pop
call
adc
jo
fs
add
into
das
dec
leave
push
xchg
rclb
movsb
inc
jp
data16
mov
and
or
xor
out
fsubs
add
sub
inc
ret
es
out
dec
sub
push
xchg
mov
ja
inc
ljmp
cmpsl
int3
cmpsb
jp
or
hlt
jne
mov
xchg
lods
scas
jo
call
into
dec
or
push
and
cmp
out
adc
enter
pop
push
and
fs
mov
dec
dec
data16
in
or
sbb
jle
repz
lods
adc
mov
lahf
stos
in
cmp
xor
xor
outsb
xchg
jl
sub
nop
mov
out
std
jnp
mov
xchg
call
pop
mov
pop
mov
imul
xor
notb
es
popa
jecxz
add
mov
sub
mov
jo
cwtl
mov
pop
cmc
pop
cmp
inc
and
popf
scas
jnp
scas
xchg
test
add
stos
sbb
inc
addb
inc
pushf
aam
out
xchg
xchg
cmc
insb
je
jae
aaa
push
hlt
fdivr
jmp
test
jmp
cld
nop
sub
xlat
pop
ror
shrl
sti
loope
pop
lods
adc
neg
lock
or
lock
jp
cwtl
dec
adc
cli
imul
cld
xchg
popa
xor
cmp
dec
jne
daa
push
ljmp
cs
cli
sbb
jle
cwtl
sub
mov
inc
movsb
and
faddl
ss
dec
mov
pop
call
rorl
mov
push
mov
inc
fisubl
or
xor
lock
imul
ja
and
xchg
mov
out
mov
scas
xor
adc
lods
mov
shll
jno
mov
iret
cmp
notl
int
sar
negb
sbb
add
out
mov
aaa
stos
fcomps
getsec
jle
mov
into
andl
xchg
inc
mov
mov
cli
cmpb
push
out
xlat
test
push
subl
ret
cmp
lods
stos
sbb
fbstp
shrl
ja
ds
adc
mov
repz
push
sarl
xchg
push
inc
and
aas
inc
or
loope
mov
push
rcl
cmpsl
push
push
add
dec
bound
stc
inc
lock
xchg
push
cmc
or
pop
mov
and
cli
icebp
adc
jno
int3
sahf
test
add
test
icebp
cmpsb
popl
sub
int
arpl
push
fists
add
dec
jg
ds
sbb
push
je,pt
mov
cmpsl
mov
in
cmp
scas
out
fdivrl
lcall
adc
imul
adc
xor
sahf
push
jmp
es
pop
xchg
stos
dec
jne
mov
arpl
pushf
ret
test
insl
shlb
js,pn
mov
pop
lret
lret
aad
stc
les
out
ret
in
jg
xlat
repnz
sbb
xchg
cli
sbb
stos
scas
push
xchg
call
test
dec
cs
push
sub
cmp
ss
jae
push
jbe
into
in
std
mov
outsb
leave
shlb
lods
daa
xchg
fdivl
aaa
mov
rcrb
imul
sarb
mov
stos
add
stc
or
sbb
xchg
and
imul
adc
out
mov
insl
cltd
icebp
cli
pushf
jnp
popa
loope
ja
jmp
rorl
lods
iret
jg
in
insl
dec
mov
xor
nop
fnstenv
xchg
inc
xor
stos
movl
adc
pop
xor
and
mov
mov
add
bound
push
sbb
out
push
in
push
lcall
fistl
popf
mov
in
xor
sub
xor
or
push
mov
fiadds
mov
scas
scas
xchg
sahf
mov
mov
shl
inc
push
cs
adc
inc
mov
rcrb
xchg
das
adc
mov
mov
xor
or
inc
aas
and
shll
or
test
pushf
pop
push
xchg
dec
pop
xor
ss
iret
test
add
cld
push
pop
cltd
dec
ret
mov
incb
arpl
mov
fsubrs
call
dec
sbb
push
inc
cltd
xorb
sbb
pop
bound
mov
xchg
mov
sub
movq
test
notl
adc
stos
data16
push
dec
mov
mov
inc
leave
dec
decb
data16
testl
test
xchg
jmp
cmp
clc
xor
aaa
and
mov
sub
lret
dec
jbe
mov
lahf
mov
or
ss
dec
xchg
pop
mov
sub
scas
insl
dec
or
and
dec
loopne
lret
jae
dec
popa
outsl
and
jmp
xchg
int
xchg
pop
push
mov
cltd
addb
insl
mov
dec
enter
unpckhpd
mov
lods
fld
test
cwtl
test
daa
mov
and
dec
ljmp
cs
and
push
sbb
push
cmp
inc
mull
sbb
jnp
fisubl
shrb
xchg
xor
pop
xor
in
aas
leave
sub
adc
int
les
mov
popa
jge
popf
or
pop
pop
cmp
or
cmp
xor
mov
mov
jmp
dec
jg
push
lret
jp
mov
xchg
mov
pop
out
xchg
roll
or
fs
sub
or
lea
adc
dec
addr16
loop
arpl
or
cmp
mov
mov
popf
jae
push
pop
out
xor
push
sub
cmp
add
pop
ret
outsl
std
lret
xchg
ret
mov
push
push
jne
push
lcall
stos
dec
dec
fistpll
dec
jge
test
negb
in
dec
call
dec
rcll
jae
jne
andl
lahf
mov
mov
in
and
stc
xchg
leave
xchg
sub
lahf
int
push
repnz
arpl
sti
adc
fadd
xchg
mov
stc
jno
sub
sub
jae
in
or
add
jmp
cwtl
pop
cmp
inc
cli
aas
lock
and
jg
stos
lret
leave
lret
xchg
dec
adc
pop
adc
xchg
out
popa
inc
xor
xor
xor
fdivl
adc
cs
xchg
pop
cmp
daa
xchg
loop
xchg
inc
js
xor
stos
sar
lret
cmpsb
jne
cwtl
inc
add
and
jge
std
leave
cmpsb
ljmp
jne
push
sub
stc
lahf
aaa
dec
add
inc
daa
movsl
mov
lea
pop
cmp
mov
stos
cld
iret
and
stos
or
sbb
clc
or
test
aam
xchg
jmp
rorl
mov
jecxz
mov
inc
or
inc
push
jle
std
clc
push
je
das
inc
imull
jle
dec
xchg
repnz
cmc
push
fwait
sbb
lahf
not
jge
xchg
mov
push
inc
inc
enter
sbb
cmpsl
fs
jo
adc
loope
out
add
mov
fcmovnb
out
push
pop
push
pop
mov
in
or
push
push
das
in
orb
insl
or
sbb
loopne
test
mov
dec
aam
mov
add
or
inc
jp
push
movsb
lret
push
push
adc
sbb
pop
repz
sarb
push
insl
xor
in
cmp
jb
outsb
stos
cmc
stc
dec
enter
lods
or
je
jle
inc
inc
push
into
call
jp
inc
mov
pop
sbb
adc
outsb
shll
xchg
test
outsb
repz
std
cmp
cmp
lea
sbb
cmc
repz
mov
dec
aas
inc
mov
nop
pop
jbe
fdivrp
je
inc
mov
insl
pop
outsl
frstor
sar
popf
sub
sti
in
lret
out
fbld
shll
xchg
rcl
inc
xor
push
xor
jmp
mov
mov
imul
into
inc
pop
cld
jne
mov
sbb
jbe
push
xlat
daa
add
push
ret
add
jl
push
cmp
bound
in
mov
aas
aaa
neg
stc
pop
rorb
sub
adc
xor
push
xchg
sub
fstl
mov
push
push
xchg
out
roll
mov
or
jg
jne
cmp
out
xchg
push
popf
sbb
adc
in
das
and
lretw
push
jmp
cmpsl
xor
xor
dec
add
mov
test
dec
nop
mov
fs
into
jne
adc
add
inc
enter
jbe
fdivl
dec
and
push
clc
mov
and
lret
loopne
xchg
or
push
stc
mov
mov
sahf
jl
stos
out
lock
or
push
cwtl
cmp
addr16
insb
rolb
in
test
scas
jae
cmpsb
mull
std
movsb
filds
mov
cltd
or
nop
jne
aad
mov
mov
das
insb
decl
jb
jno
or
stos
lret
ret
outsl
sahf
sbb
mov
sub
frstor
faddp
xchg
inc
mov
bound
fmulp
jbe
into
int
xchg
push
mov
inc
xor
fbld
push
mov
pushf
insl
lcall
cli
cmp
mov
outsl
int
mov
mov
sub
xchg
sub
mov
push
cld
mov
or
pushf
in
lea
test
mov
inc
pushf
sub
mov
dec
mov
mov
imul
ds
fwait
test
dec
addr16
xor
cmp
iret
out
cmp
xor
sbb
adc
fstpl
je
cmp
push
push
daa
pop
ret
pop
add
push
mov
and
cmp
test
aas
mov
nop
xlat
mov
mov
sub
dec
add
ret
jmp
adc
outsb
ret
xchg
xchg
loop
or
lods
test
ficompl
repz
cmp
adc
sub
dec
pop
cmpsl
sub
or
and
shrb
icebp
xchg
int
xchg
sub
call
fcomps
xor
mulb
nop
test
ja
mov
mov
mov
popa
pop
cli
hlt
flds
mov
jb
pop
pop
nop
mov
add
jno
shlb
push
es
sbb
cs
inc
inc
xlat
out
cld
xchg
aam
cs
xchg
mov
loope
jmp
cmpsl
out
cmp
aaa
xor
test
stos
cmp
loop
mov
pop
adc
dec
xchg
rolb
push
rorl
jns
je
sbb
cmp
in
inc
push
mov
sbb
mov
mov
jns
cmp
jge
pop
or
cmpsb
repnz
inc
adc
adc
and
or
popa
xor
cli
stos
aas
inc
lret
test
sbb
push
fcomps
mov
fdivl
sbb
lahf
jle
xlat
xchg
xlat
push
xchg
push
pop
jecxz
ss
shl
scas
and
movsl
daa
imul
lds
add
sub
setns
xor
push
xchg
xor
jmp
jb
std
movsl
ss
xor
mul
adc
dec
jne
push
mov
lods
repz
sub
push
imul
dec
les
mov
jo
fldt
sub
fldt
and
sbb
jp
xchg
cmp
aad
cs
sahf
xor
inc
shl
dec
xchg
popa
dec
fiaddl
xor
adc
dec
iret
fwait
mov
ja
int3
fists
test
imul
xchg
in
xor
jge
in
jge
sbb
call
lods
xchg
inc
repz
imul
cmp
inc
inc
jno
mov
cmp
mov
cmp
dec
jne
inc
js
stc
das
mov
dec
push
dec
xor
lods
imul
cmp
stos
fwait
mov
or
movsl
or
push
jl
orl
push
insb
adc
sub
mov
inc
add
aas
loopne
and
dec
enter
es
repz
mov
ss
xchg
mov
inc
out
push
lods
jbe
sbb
test
push
mov
insl
je
pop
cmp
and
xor
mov
dec
push
inc
fldl
test
mov
ss
and
sbb
adc
mov
and
mov
lret
push
sub
mov
mov
psrld
pop
loope
pop
dec
in
cmp
xchg
imull
rclb
les
loope
pop
test
pop
jle
fs
adc
movsl
lods
cmp
pop
out
testb
mov
or
pop
fisttpl
sub
sahf
or
leave
and
test
les
jns
lods
jge
mov
inc
arpl
jle
iret
or
jne
dec
addl
xor
inc
push
aaa
and
out
dec
sbb
mov
dec
fs
jmp
cwtl
and
mov
adc
mov
mov
and
push
ja
enter
add
imul
cwtl
push
and
cltd
fbstp
xchg
test
add
clc
cli
xlat
mov
lret
push
stos
push
pushf
cmp
stos
movntps
movsb
roll
shrb
or
shl
scas
adc
addr16
das
jle
sbb
inc
sbb
xchg
mov
sub
cld
and
xor
movsl
mov
mov
pop
stos
adc
ja
mov
hlt
stos
rolb
out
xchg
mov
je
nop
push
scas
lea
les
js
ds
xchg
int
lret
ja
push
xchg
sub
mov
test
daa
sub
mov
es
push
incl
cmpsb
fstpt
cmpl
call
scas
mov
mov
idivl
punpcklwd
sbb
xlat
js
pushf
gs
lret
add
cmp
jbe
jp
push
push
mov
lahf
test
xor
aam
pop
aaa
xchg
stc
jmp
jmp
mov
mov
lock
mov
cmpsl
mov
cli
mov
shll
gs
xchg
jmp
mov
dec
adc
or
or
and
das
ficompl
fldl
xor
sbb
xchg
dec
sub
lret
mov
and
add
jmp
je
sub
push
jmp
out
shll
rcr
cli
aad
adc
add
lret
das
push
mulb
xchg
push
mov
xchg
dec
cld
pop
xor
mov
repz
push
push
test
scas
push
adc
les
lret
lock
lods
sub
sub
xchg
fildl
mov
or
outsl
sub
push
xchg
push
cmp
pop
xorb
jl
bound
lret
jae
cmc
sbb
sbb
push
and
dec
sbb
xchg
xchg
cmp
insb
push
ss
divps
clc
xor
inc
out
sbb
cmp
adc
push
pop
in
add
test
jg
std
dec
rcll
xchg
cmc
lret
jno
push
cmp
or
aaa
in
jle
push
push
dec
leave
sub
pop
sub
movsb
fcoml
mov
shrb
jmp
outsl
lret
pushf
popa
push
into
les
aad
int3
push
fsubs
nop
je
clc
push
xchg
push
out
pop
jg
movsb
adc
fldl
sti
jle
cli
xor
data16
movsb
mov
push
sar
sub
out
lods
lea
or
and
sub
xchg
push
stc
xor
out
rcrl
in
mov
enter
pusha
jb
add
call
pop
pop
mov
stos
xchg
jnp
sbb
pop
dec
mov
mov
imul
pop
mov
sub
and
sub
imul
popf
push
jecxz
ss
adc
into
repz
loop
adc
sbb
fisubrs
mov
sub
stc
jb
lods
xchg
popa
stc
out
ret
lret
cmc
inc
imul
push
fdivrl
sub
push
jmp
dec
incl
addr16
fstl
outsb
mov
and
inc
clc
shlb
add
dec
imul
in
repnz
mov
test
push
push
jp
jbe
jg
mov
inc
push
and
shrl
jbe
cmp
arpl
xchg
mov
pop
aaa
push
in
and
movsb
jno
add
fists
ret
inc
lock
lods
aad
add
lahf
mov
push
push
fsub
mov
cltd
mov
cltd
xor
in
jbe
lret
mov
adc
sahf
mov
or
movsl
xor
jmp
xchg
stos
imul
push
cld
pop
add
mov
add
mov
mov
test
dec
int3
inc
fistps
push
mov
sbbl
add
jno
xchg
cltd
xlat
jne
mov
arpl
push
aaa
pop
test
mov
push
je
clc
xor
adc
daa
js
add
add
aas
pusha
ss
jge
push
call
jns
sbb
ret
pop
movsl
stos
add
rorl
in
xchg
xor
test
xor
pop
mov
ret
inc
xchg
jnp
ja
jo
insb
pop
lods
das
fidivs
insl
jno
or
xchg
adc
push
int
imul
xor
xchg
shl
gs
push
fcompl
jno
pop
lret
test
jmp
dec
lret
or
stos
aam
cmp
fsts
ficompl
push
add
xchg
push
out
int
out
jno
and
xchg
arpl
and
push
and
mov
mov
movsb
sbb
pushf
add
mov
inc
test
pop
aas
stos
cmp
mull
mov
adc
pop
pusha
sub
add
fdivl
js
xor
das
and
add
mov
xlat
ss
jnp
adc
push
jle
lods
inc
sti
jl
es
add
jb
mov
push
cmpsb
jl
jbe
dec
jo
clc
shll
xchg
int
dec
ret
mov
xchg
pop
movsl
in
push
nop
xchg
jmp
stc
xchg
mov
imulb
xchg
in
aam
movsb
dec
jae
scas
jo
mov
inc
cwtl
arpl
arpl
jnp
mov
in
stos
push
ret
scas
leave
sub
int3
inc
setb
hlt
xor
or
inc
sub
xor
push
aas
push
in
popf
shl
test
rep
pushf
gs
push
daa
into
shr
pop
ljmp
repnz
mov
lahf
mov
mov
xor
xor
pop
inc
inc
fisttpll
cmp
mov
xchg
arpl
lahf
add
not
or
or
mov
mov
adc
orb
add
fidivrl
jbe
loopne
leave
in
push
pop
enter
dec
adc
les
mov
pop
lret
lea
xor
mov
lock
imul
shlb
lock
inc
pop
loope
lahf
test
mov
sub
mov
popf
mov
or
dec
xor
pushf
pop
cmp
and
inc
sbb
inc
pop
dec
cmpsb
inc
pop
lcall
out
or
repz
dec
aas
mull
je
imul
xchg
jle
fisubrs
sub
fidivrs
insl
or
int3
test
pusha
adc
ret
lods
sbb
je
xor
gs
ja
push
adcb
jnp
dec
mov
push
inc
jl
mov
jbe
inc
or
add
dec
sbb
cmpl
popa
push
cs
jp
dec
mov
lea
sbb
rolb
or
mov
xor
shlb
jmp
dec
addr16
mov
fcmovnbe
cli
arpl
ret
arpl
and
fdivp
adc
and
jmp
loopne
push
dec
ljmp
js
testl
je
or
xor
cltd
jg
fsub
push
cmpsb
aad
popf
pusha
sub
je
mov
shll
pop
sbb
ret
mov
inc
imul
inc
aam
sahf
addr16
movsb
jge
mov
mov
jne
shrb
sub
ss
mov
or
cmpsb
and
movsl
lret
in
xchg
xchg
int
aad
repz
or
add
outsl
fistpll
out
inc
stos
jle
hlt
adc
pusha
add
adc
jmp
pop
cwtl
les
jmp
inc
outsb
sub
mov
xchg
inc
dec
imul
fsubl
imul
mov
leave
cmp
xor
xchg
xor
cltd
adc
sbb
jbe
aas
loope
cwtl
imulb
roll
sub
dec
aad
in
mov
movsb
xchg
mov
mov
fimuls
fs
and
sbb
lahf
pop
mov
add
arpl
test
int
push
push
orl
lret
loop
into
or
inc
or
push
cmpsb
push
test
cmc
sub
test
jb
cmp
sahf
jg
mov
mov
mov
xchg
mulb
sbb
mov
and
js
movsl
xchg
into
lods
les
xor
aas
fisttpl
ja
mov
dec
repz
bound
dec
leave
dec
in
push
or
pop
int
cmp
xor
jns
jne
rolb
cmp
pop
jb
dec
push
gs
sub
loop
in
fsubl
push
aad
sub
pop
pop
loop
pop
sbb
icebp
iret
pop
mov
pop
adc
sub
test
nop
push
jecxz
lock
inc
rclb
add
cmp
fstps
test
dec
jbe
in
pop
jne
ja
jnp
jno
rcll
xor
lcall
cld
push
gs
int
or
pop
add
inc
clc
mov
mov
adc
out
xchg
sbb
push
mov
js
push
sub
mov
mov
in
mov
dec
xor
xor
fsts
inc
clc
jo
jge
push
pop
push
or
lahf
xor
cltd
lret
inc
ret
pop
jno
cmp
imul
ret
lock
or
adc
test
xchg
push
mov
and
dec
in
adc
cmp
int3
xchg
jb
push
es
sbb
aam
push
sub
jb
cs
cmp
add
addr16
lea
cmp
gs
push
mov
dec
divl
loope
fcmovnu
aas
fnstcw
cmp
jne
mov
fucomp
stc
imul
in
sbbb
int3
test
scas
sbb
mov
sahf
cwtl
add
and
lret
ficompl
loop
dec
mov
push
sbb
adc
inc
xorl
das
xchg
xchg
xor
mov
xchg
in
out
sub
mov
clc
in
mov
ror
scas
sub
imul
call
pop
imul
xchg
xlat
fisubl
cmp
testl
cmpsl
add
sub
fs
jp
adc
xchg
mov
mov
and
mov
mov
ret
push
in
lret
mov
stos
je
insb
clc
mov
cmp
addr16
mov
idivl
inc
outsl
jle
aad
stc
inc
ficompl
sti
cs
fists
das
mov
scas
mov
push
scas
sub
inc
sbb
fiaddl
mov
mov
cmp
out
push
cltd
sti
or
jb
dec
insl
xor
cmp
mov
adc
aad
rcrb
stc
nop
out
jbe
push
loope
ljmp
and
out
je
subl
push
push
xchg
inc
push
outsb
xor
mov
dec
cmpsl
jmp
push
dec
into
inc
sbb
or
insl
inc
cmp
and
cmp
xor
dec
xlat
mov
push
cli
sahf
inc
jnp
mov
add
push
pushf
call
push
cmp
adc
ljmp
jge
or
daa
andb
in
add
jle
test
cltd
cmpsl
push
add
push
adc
mov
enter
lock
pop
mov
push
repz
stos
lret
xor
decl
xchg
push
mov
xchg
cmpsb
adc
lret
inc
lcall
fdivrl
sbb
gs
sbb
clc
incl
das
icebp
fidivrs
cmp
push
repz
je
xchg
xchg
inc
add
inc
gs
and
arpl
jp
push
jmp
add
es
cmp
std
imul
cmc
dec
sbb
mov
int
mov
mov
cs
incb
xchg
xor
in
out
scas
inc
ret
test
shlb
inc
pushf
inc
pop
sti
out
jg
and
movsl
inc
push
imul
sbb
dec
pop
mov
fidivl
pop
pop
jne
jl
pop
fdivrp
inc
outsl
or
and
aad
adc
mov
mov
jmp
add
cli
mov
jg
ds
aas
or
inc
sarl
test
add
pop
sub
loope
or
and
jb
mov
sahf
pop
call
mov
cmp
inc
lods
movsb
xlat
fstpl
jge
cwtl
inc
mov
iret
push
fstl
dec
cmpsb
aas
outsl
mov
inc
fisubl
nop
lods
and
mov
std
dec
push
pop
or
push
mov
sub
gs
xor
dec
xlat
test
mov
or
mov
fs
stc
dec
pushl
aaa
orb
dec
push
nop
test
ret
or
sbb
bswap
mov
lock
sub
mov
clc
push
test
cwtl
mov
stos
push
sbb
mov
xor
pop
push
dec
dec
dec
cltd
xor
inc
repnz
movsl
add
push
lahf
mov
aaa
into
mov
aam
dec
cmp
ljmp
movsb
inc
mov
jbe
dec
stos
dec
cmc
leave
fcoms
mov
out
cwtl
daa
dec
pop
cli
jl
clc
je
pop
out
add
pop
and
call
and
mov
xchg
mov
add
cmc
push
movsl
xchg
fdivrl
cmp
cmpsb
test
nop
push
or
inc
lods
popf
lds
jl
sbb
adc
jmp
cmp
mov
frstor
pop
test
out
jnp
addb
cltd
jno
push
pop
mov
inc
xor
ljmp
imul
sbb
mov
jno
bound
push
leave
mov
ret
xchg
add
aad
test
dec
data16
xorb
push
mov
jns
sub
inc
cmp
and
mov
add
leave
icebp
les
fmuls
std
or
inc
inc
xor
gs
inc
mov
xchg
sbb
movsb
dec
add
rclb
rcrb
add
mov
test
sahf
call
dec
push
lret
jp
les
test
ffreep
pop
xor
pusha
inc
mov
sub
inc
shlb
xchg
mov
and
push
xchg
sti
or
stos
xchg
inc
ja
in
and
push
jbe
mov
push
pushf
mov
rolb
jno
pop
mov
jge
in
nop
in
dec
mov
jecxz
lahf
mov
lods
movl
xor
test
enter
nop
jl
leave
or
jge
test
jno
enter
cltd
or
ja
mov
mov
push
mov
xchg
push
sar
or
out
or
idiv
dec
mov
stc
dec
pop
push
lock
sarb
pop
out
push
and
push
lock
pop
dec
notb
cld
cmpsl
lahf
int
leave
mov
mov
rolb
add
jbe
mov
xor
enter
mov
add
cwtl
push
stos
jne
stos
mov
pop
or
pusha
sub
in
stc
scas
sbb
je
nop
cmp
xchg
arpl
std
xor
rclb
mov
mov
in
lcall
gs
push
out
into
adc
loopne
outsl
data16
sub
adc
lret
mov
es
call
mov
lret
cmp
pop
shrb
lret
jns
arpl
lods
sub
test
add
cmp
dec
js
xchg
test
dec
mov
cmpsl
sbb
add
and
test
cmp
fwait
inc
cmpsb
daa
mov
popa
push
enter
outsl
mov
je
cwtl
fisttpll
cld
arpl
pop
lcall
sub
cmp
sub
lahf
adc
sub
ds
add
mov
push
mov
in
mov
js
aaa
repnz
repnz
and
outsb
das
push
movsl
ret
adcb
inc
adc
enter
jmp
inc
repnz
add
mov
int3
pop
sub
cmp
test
xor
incl
jl
and
je
in
cmpsl
dec
mov
jae
mov
fidivrl
arpl
pop
jg
lcall
shll
jns
dec
repz
call
cmp
test
jle
add
mov
xlat
inc
push
stos
push
cmp
or
mov
je
sbb
sar
adc
fiadds
in
pop
or
sub
xor
mov
xor
sub
mov
movsb
add
outsb
cmp
loopne
mov
nop
push
jmp
xor
andb
js
test
or
test
xor
lcall
test
add
call
daa
or
cmp
xor
push
clc
in
xlat
sub
adc
cmp
iret
roll
and
cmc
imul
jl
out
lahf
dec
repz
pop
dec
fnclex
adc
movsb
fisttpll
push
ja
xor
pop
mov
or
cmp
das
jno
jne
xor
movsb
adc
daa
cmpsb
addl
and
orl
call
push
into
insl
sbb
add
pop
push
stc
sub
mov
or
xor
loop
addr16
pop
dec
out
cmpb
mov
daa
mov
test
test
jno
add
cmp
cmp
popf
dec
ja
repnz
jo
and
dec
arpl
test
dec
push
or
loop
lmsw
inc
jl
jb
pop
daa
imul
clc
sub
std
mov
loopne
adc
dec
in
inc
ret
fmul
inc
fldt
adc
push
add
fistl
push
lods
lds
sbb
xchg
and
test
mov
mov
push
insl
lods
jnp
push
mov
add
mov
outsb
test
pop
sbb
cmpsb
push
cmpsl
mov
pop
xor
jge
mov
cmpb
push
mov
pop
lcall
fstps
fwait
cli
inc
sti
xchg
lret
xchg
stos
add
cmpsl
test
jb
pop
cmpsl
mov
mov
xchg
and
pop
pop
adc
adcl
or
push
in
cmp
inc
jnp
ficoms
movsl
rcrl
push
xor
nop
in
push
test
and
lcall
lcall
movsl
pushf
jae
loope
mov
sti
in
jns
and
pop
pop
out
out
aas
hlt
dec
lea
sub
add
mov
insb
cwtl
das
sub
or
xchg
lahf
nop
sub
daa
push
rcrb
push
mov
or
sbb
out
into
ret
pop
repnz
mov
ret
fisubs
inc
cmp
jnp
dec
call
add
std
pusha
inc
mov
pushf
add
pop
rorb
fnstsw
push
outsb
fsts
aam
pushf
mov
in
bound
or
out
fstl
add
adc
cld
jno
negl
jg
pop
loopne
jo
mov
cs
mov
sti
lds
fildll
fsubs
sbb
add
sbb
and
ljmp
adc
sbb
mov
or
lods
adc
push
xor
das
mov
mov
xor
push
into
out
aam
inc
xor
inc
mov
adc
inc
and
pop
fwait
push
movsb
js
cmpl
stos
fwait
sbb
rcl
pop
and
push
add
out
sub
gs
jge
stos
fs
mov
and
dec
mov
push
in
rcr
and
mov
js
shlb
or
test
test
push
call
pop
pusha
fstpl
xchg
pop
adc
jl
dec
cmpsb
jne
push
fadd
mov
xchg
jl
fnstenv
and
cltd
sub
push
sub
adc
in
and
add
push
push
adc
sahf
mov
mov
mov
push
cs
add
xor
pop
es
pop
dec
jge
ja
jno
push
xor
or
add
pop
and
dec
jp
je
insl
cmp
fs
prefetchwt1
popa
sub
es
pop
dec
jge
ja
jno
push
fs
cld
lret
lret
lret
into
stos
pop
jmp
lea
ret
.byte
