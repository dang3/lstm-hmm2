inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
je
insb
add
add
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
arpl
add
sbb
fstpl
fwait
lods
mov
add
pop
push
or
add
pop
add
add
add
push
add
jne
jb
push
add
in
add
add
add
add
lods
add
pop
add
add
and
lods
add
dec
add
add
add
add
cltd
add
lods
add
add
add
add
add
add
fwait
add
add
fwait
add
int
mov
lods
add
mov
add
push
add
add
add
add
add
add
outsb
add
add
nop
add
add
add
dec
add
add
cmp
add
add
fwait
add
push
add
and
push
add
sbb
add
loop
dec
add
add
push
add
add
or
push
add
inc
add
add
dec
add
lods
add
inc
add
add
add
add
lret
add
add
push
add
inc
add
add
add
cmp
lods
add
push
add
lret
add
add
add
add
fwait
add
push
add
insb
add
add
add
add
add
add
sbb
lods
add
sub
je
aas
add
fwait
add
add
add
add
add
add
add
push
add
add
pusha
add
push
add
add
add
mov
add
mov
aas
add
fwait
add
add
add
and
add
dec
add
pusha
add
add
mov
add
loopne
lods
add
add
ret
add
xor
popa
add
add
add
addl
lods
add
outsb
add
lods
add
inc
add
add
add
dec
add
add
add
sbb
add
add
add
add
add
dec
add
add
add
je
lods
add
add
cmp
mov
add
add
add
add
add
ret
add
addb
add
add
inc
add
add
push
add
add
add
fwait
add
push
add
xchg
add
or
lock
add
add
add
add
add
fwait
add
push
add
xchg
add
icebp
add
add
add
add
add
add
add
add
int
add
lret
add
push
add
add
jo
or
or
push
add
push
add
and
add
add
add
or
jo
adc
add
add
inc
add
add
fwait
add
add
lods
add
add
dec
add
add
add
mov
add
js
lods
add
or
push
add
lret
add
add
add
add
add
add
add
imul
add
add
add
cmpsb
add
add
add
gs
add
js
adc
movb
add
add
add
add
add
add
add
add
add
add
add
popf
dec
mov
sbb
fwait
sbb
or
mov
out
pop
cmp
ljmp
sbb
dec
push
cld
mov
xchg
add
dec
nop
out
mov
aas
test
mov
push
and
aad
loop
jecxz
jg
xchg
movsb
sarb
mov
xchg
or
daa
dec
and
cmp
jp
lea
dec
jp
mov
mov
dec
dec
inc
jge
jnp
and
push
aad
adc
jp
inc
subl
cmpsl
pop
icebp
in
fisubs
and
in
cmp
addr16
push
sbb
fwait
sub
enter
xchg
loope
cmp
test
mov
add
inc
jnp
ljmp
arpl
lds
dec
add
adc
addr16
rcll
and
mov
xlat
push
leave
adc
popa
xor
aas
mov
sbb
rcrl
int
sbb
sahf
mov
dec
or
cmp
adc
mov
jge
jg
test
aas
cmp
mov
insb
mov
mov
icebp
arpl
movsb
aad
lea
pushf
jge
mov
sbb
ja
xlat
push
imul
test
popf
dec
mov
dec
movl
jp
fs
dec
lock
push
clc
jns
push
pop
jge
xor
sbb
shl
jl
pop
inc
sub
movsl
push
in
and
movl
xchg
dec
fsts
mov
sub
xor
pop
and
lcall
in
cmp
push
lahf
mov
pop
mov
jne
lcall
aad
out
push
popa
adc
inc
movb
mov
inc
jno
cld
stc
pop
lods
xlat
sbb
jno
pop
gs
push
xor
push
push
inc
in
es
mov
dec
jg
mov
push
sbb
int
xchg
dec
sbb
mov
ror
xchg
data16
mov
mov
push
xor
pop
orb
dec
jo
sub
cmp
pop
sub
add
aas
push
add
push
pop
jp
int
jle
adc
add
pop
in
aaa
add
negl
stos
cmp
push
mov
ds
mov
in
xchg
mov
fwait
xor
pop
xorb
inc
imul
xchg
jp
adc
jno
mov
push
push
pushf
pop
outsl
js
inc
sbb
sbb
jb
mov
xchg
inc
mov
in
pop
dec
mov
in
jnp
fcomps
push
hlt
mov
mov
mov
bound
popa
and
mov
mov
subb
and
xchg
xor
or
pop
and
and
nop
xor
int3
mov
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
push
call
mov
movb
mov
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
fcmove
aas
fnsave
mov
mov
aaa
insl
daa
jge
or
sbb
cmp
xchg
mov
cmpsl
std
xlat
popf
imull
pop
pop
sbb
push
push
addr16
xor
popa
std
lea
mov
push
or
ja
sbb
dec
adc
andl
jb
scas
in
and
add
cmp
lods
mov
stc
fwait
int
int
xchg
jo
popf
cmp
fsubl
cli
mov
rcrb
ljmp
aas
daa
cmp
mov
xorl
push
dec
clc
pop
enter
test
lret
mov
dec
lret
stos
mov
popf
mulb
push
mov
ficompl
cwtl
cmp
dec
adc
sub
inc
jb
cld
scas
mov
enter
movsb
pop
inc
or
adc
cmc
pop
ret
jb
push
xor
dec
lcall
sbb
adc
inc
dec
xor
xchg
mov
lret
std
xlat
lea
mov
out
insl
cmp
or
add
int
movsb
rep
leave
mov
in
xchg
jbe
inc
inc
addr16
or
add
pop
xchg
mov
insb
sahf
mov
cli
xchg
xchg
das
sub
push
or
and
and
in
mov
mov
test
lods
out
pop
dec
pop
pop
aaa
insl
daa
jge
or
addr16
mov
cmpsl
std
xlat
popf
imull
pop
pop
aaa
insl
daa
jge
or
addr16
pop
cmp
fwait
js
push
rcrl
push
mov
stc
mov
or
mov
mov
dec
es
leave
scas
sub
pop
test
push
test
adc
sub
sbb
scas
push
xor
setg
test
fsubp
inc
and
or
rcrl
push
movsb
stos
fldcw
ds
jns
cli
pushf
xchg
int
ret
or
loope
ss
jp
imul
cld
test
dec
cmpsb
mov
xchg
xor
in
outsl
push
daa
icebp
imul
icebp
icebp
add
sbb
stc
test
add
cltd
lcall
sub
rcrb
enter
icebp
stos
cmpsb
test
push
lret
into
cmpsb
cmpsb
test
inc
inc
mov
add
xchg
mov
inc
and
out
adc
std
add
dec
mov
pop
ja
sub
testl
das
xor
dec
mull
mov
cld
mov
pop
mov
push
sub
outsb
push
leave
imul
fsub
dec
mov
movsl
cmpsb
loope
cmpsl
pop
inc
dec
and
adc
xchg
fs
std
or
clc
push
loop,pt
push
dec
push
push
icebp
push
cli
adc
xor
pop
js
movsl
jnp
ret
mov
test
das
shrb
outsl
sub
or
movsb
mov
and
cltd
jmp
add
and
lods
lods
xchg
xor
mov
sbb
jae
adcb
loope
stc
mov
mov
cmp
mov
iret
sbb
fisttpll
test
hlt
out
lods
and
cmp
int
inc
fildll
cltd
lahf
adc
and
add
mov
dec
xor
enter
xchg
jo
movsl
adc
mov
add
xorb
sub
add
mov
or
adcb
adc
jp
ljmp
aam
int
in
in
cmpb
lock
test
adc
mov
and
lods
push
pop
xor
sbb
cmp
jns
mov
aad
scas
add
cmpsl
sub
push
and
int3
arpl
jge
mov
popf
movsl
adc
dec
sbb
std
icebp
idivl
faddl
mov
imul
pop
insb
xchg
shl
in
jnp
rorb
lods
je
scas
stos
sub
loopne
sub
in
ds
arpl
or
popf
sahf
out
push
jno
je
cmp
out
inc
push
mov
push
add
lcall
in
mov
jb
mov
inc
shlb
arpl
and
pop
shrb
movsl
jle
or
mov
adc
in
daa
push
cmpl
dec
stos
rclb
inc
out
dec
pop
insb
int3
cld
leave
push
pop
push
into
fadds
mov
pop
xchg
xor
xor
sahf
jmp
jno
pop
test
jbe
dec
push
fucom
leave
xor
cmc
lret
les
insl
stc
or
jle
movsb
jo
inc
adc
in
jno
ret
push
xchg
cmp
ret
inc
jecxz
data16
arpl
inc
jle
or
ret
sbb
push
add
cmp
adc
repz
cmp
ljmp
jne
xchg
mov
fs
sub
sbb
mov
sub
sar
adc
inc
add
fisubrl
push
push
inc
aas
dec
lock
xchg
mov
mov
lea
push
add
push
cs
cmpsl
dec
int
scas
sbb
je
fcmovu
mov
push
inc
and
dec
and
fcompl
xor
jne
mov
sub
imul
jge
jne
cmpsl
mov
scas
pusha
xchg
push
sub
repz
pop
dec
imul
sbb
sub
mov
rolb
xchg
sbb
not
ss
mov
adc
popf
cmp
and
xor
mov
fistl
daa
cmpsb
jo
or
scas
std
jne
sub
add
arpl
js
stc
int3
xor
adc
sti
aaa
subl
or
cmc
shll
loop
push
sub
rorb
mov
dec
mov
scas
xchg
arpl
xor
ficoms
sbb
mov
sar
xor
lea
gs
push
aaa
popl
pop
push
fldcw
aam
lret
test
pop
dec
or
push
out
movsl
hlt
and
pop
fwait
insb
fs
cmp
sub
jnp
xor
adc
cwtl
jg
pop
lock
ss
roll
mov
push
dec
ja
out
inc
bound
insl
push
out
hlt
addb
adc
out
jmp
in
mov
sti
sub
cmpsb
aas
icebp
imul
int3
cmp
aam
mov
jnp
ret
test
push
cli
icebp
rclb
fcom
jmp
and
push
mov
jecxz
mov
es
lods
jle
int3
ss
mov
sbb
imul
aam
cmpsl
pop
dec
adc
pushf
mov
jmp
adc
mov
hlt
push
loopne
pop
add
popf
dec
je
shll
int
xor
xor
dec
stos
pushf
dec
jno
rcrb
aas
or
ret
xor
mov
push
mov
inc
jbe
lods
xor
data16
sbb
jp
cmpsb
fsubp
sahf
and
ret
ja
outsl
mov
add
arpl
push
dec
insb
fs
fs
sbb
and
daa
subb
adc
adc
cmpsb
jl
sub
push
cpuid
insb
dec
stos
call
and
pusha
cwtl
sub
mov
dec
cmp
aaa
inc
daa
dec
daa
mov
add
jnp
stos
rcr
mov
jmp
xlat
test
dec
add
leave
sbb
mov
add
arpl
out
or
test
ret
addr16
int3
data16
pushf
mov
cmp
add
imul
and
or
mov
scas
dec
in
fdivs
or
aas
and
test
je
andl
in
insb
mov
and
or
sub
push
jb
mov
shll
mov
and
fisubrl
outsb
cld
les
rcrl
aad
pop
cltd
adc
and
xchg
mov
fsubrs
jge
cld
cmp
int3
scas
xor
movsl
and
mov
jae
fwait
inc
frstor
lcall
std
stos
lahf
popa
inc
repnz
js
ja
xchg
push
test
and
sbb
lods
shrl
fidivrl
xor
push
cmp
jge
nop
sub
fisubs
push
insb
cli
cmp
ret
stc
mov
inc
mov
jbe
cli
xlat
jge
sbb
bound
push
movsl
and
inc
aam
jle
imul
test
xchg
sub
icebp
shlb
fwait
negl
sub
sub
add
fidivrl
movsl
jl
push
xchg
push
jecxz
mov
sbb
stc
lea
push
scas
lea
int
mov
in
jae
jns
and
pop
mov
xor
push
cli
rclb
imul
mov
test
mov
call
xchg
xchg
or
jae
dec
dec
and
addr16
aaa
inc
gs
sbb
lret
inc
fwait
mov
decb
xorb
repz
hlt
mov
out
bound
cmpsb
cwtl
aas
xchg
nopl
pop
add
lods
push
jle
cmpsb
pop
inc
ds
mov
sbb
jg
icebp
lret
data16
pop
aam
xor
popa
jnp
and
push
and
cmpsb
mov
fmul
out
add
into
ficompl
movsb
outsl
cmp
dec
xchg
jg
mov
dec
mov
cmp
hlt
mov
xchg
ret
push
or
mov
sub
mov
jecxz
adc
stc
mov
pop
jle
cld
adc
int
adcb
cmc
clc
movsb
loop
popf
std
jo
and
mov
mov
cmpsl
jmp
mov
pop
mov
mov
pushf
mov
outsl
stos
and
jbe
or
mov
shlb
push
int3
lret
push
dec
js
adc
or
shll
and
and
fisttpll
xor
test
aas
xor
mov
or
xchg
inc
sub
in
xchg
fldl
hlt
cmp
add
mov
lcall
je
fildl
mov
inc
mov
xor
jl
in
sub
fmul
adc
aas
in
lahf
sub
test
push
cmc
mov
leave
or
xorb
xor
and
aas
daa
or
jbe
pop
aas
outsl
test
out
in
xchg
pop
mov
mov
pusha
fwait
mov
popa
out
frstor
push
cmp
xor
jle
add
clc
inc
jb
icebp
mov
hlt
lret
incl
aam
lret
or
mov
roll
ds
push
mov
or
into
mov
or
fwait
pop
push
lods
dec
in
cwtl
mov
les
adc
xor
inc
sbb
sar
sbb
test
js
out
ljmp
xchg
mov
push
and
call
mov
dec
fcmovnb
cmp
inc
mov
adc
movsb
sub
fistpll
pop
rorl
xchg
jge
stos
mov
fnstenv
inc
icebp
aas
xchg
xchg
mov
pop
lods
lods
popa
or
je
shl
mov
in
and
mov
pushf
loope
mov
lret
fwait
into
cltd
push
mov
mov
addb
adc
jo
loopne
imul
les
dec
push
xor
and
inc
and
dec
test
inc
xchg
dec
jp
ds
repnz
jl
mov
cld
mov
cmp
not
inc
out
jne
mov
sub
mov
gs
fildll
cwtl
sub
or
mov
pop
cmpsb
pop
insb
or
stos
add
or
fistpll
loope
stos
imul
jae
jg
pop
pop
dec
popa
and
jl
lods
or
push
cmc
push
mov
mov
xchg
sti
jge
adc
push
es
int
adc
movsl
cli
insl
aam
jl
loop
jge
jnp
xchg
pop
xor
sbb
int3
cmp
fiaddl
or
mov
bswap
incb
push
mov
sbb
add
cmp
outsl
aad
xchg
pushf
mov
notb
inc
popa
jno
test
movsb
popa
mov
dec
push
repnz
outsl
loop
repnz
call
jb
jle
xor
xor
cmc
push
sbb
mov
es
or
sub
imul
and
cmpsl
fldt
pop
loopne
enter
cmp
or
or
fmuls
jl
ljmp
out
das
pop
add
inc
push
ficompl
sbb
push
jl
nop
lahf
push
or
mov
rcr
fadds
mov
mov
fdivp
popf
sahf
inc
stc
add
push
addr16
negb
mov
xchg
mov
jge
cmovnp
scas
in
dec
sub
sub
or
imul
stos
imul
jmp
rcll
adc
mov
clc
dec
loop
mov
or
clc
mov
stos
cmp
jbe
add
sub
adc
cltd
clc
xchg
xor
mov
adc
dec
fnstenv
in
push
imul
mov
enter
mov
or
bnd
cmpsl
jbe
jg
das
jecxz
inc
mov
fdivl
mov
sti
mov
or
nop
idivb
out
ljmp
lods
push
xor
xor
lods
lret
push
ds
negb
xchg
loop
push
imul
fidivrs
cmp
fnstenv
push
add
xchg
sahf
in
stos
jg
adc
cs
push
repz
out
dec
or
fucom
jb
stc
cli
inc
xor
fimuls
lods
fs
ret
icebp
jno
call
cld
in
dec
mov
cmpl
imul
inc
cmp
daa
aad
jmp
and
rcr
cmpsl
pop
jmp
mov
or
push
scas
fdivs
imul
push
push
pop
xchg
jmp
jg
ret
insb
les
fistl
jns
es
test
mov
clc
or
mov
mov
movsb
fs
lock
or
out
mov
movsl
out
mov
cmp
loope
out
ret
call
dec
inc
bound
pop
jg
stos
jecxz
xchg
test
or
je
jge
and
cmp
or
adc
adc
dec
roll
xor
jecxz
jecxz
mov
adc
push
pop
daa
in
or
jnp
xlat
cmpps
test
add
xchg
lret
lods
jno
inc
ret
sbb
aam
cli
xchg
dec
and
call
sbb
lret
movsb
repz
insb
xchg
jbe
mov
idivb
push
xlat
in
mov
dec
mov
push
faddl
in
push
jmp
test
jmp
dec
cmp
pop
ds
dec
push
xor
rol
shlb
rcr
test
adc
test
aaa
enter
mov
xor
testl
rolb
ret
xchg
mov
or
jecxz
cmp
repnz
cmp
sbb
std
loop
ljmp
or
iret
pop
and
pop
stc
dec
outsb
jmp
sub
fsub
lods
out
jmp
loope
pushf
adcl
sub
ja
sbb
lods
sti
inc
and
mov
push
shll
mov
jne
daa
aaa
out
daa
aaa
stc
loopne
arpl
pushf
aaa
mov
adc
sub
mov
sbb
ljmp
add
or
sbb
pop
lahf
imul
adc
mov
decb
inc
testl
fsubr
mov
test
xor
lock
out
loopne
test
shl
fucomip
adc
sbb
in
mov
pop
or
inc
sub
test
in
outsl
ds
push
es
dec
jl
push
ds
out
imul
cltd
popf
lcall
ss
rolb
and
pop
mov
mov
dec
fstps
outsb
fcom
cld
push
inc
lcall
inc
dec
or
mov
enter
jl
sbb
lock
dec
ret
add
cld
pop
push
pop
sti
add
stc
or
or
cli
adc
mov
lcall
sbb
es
daa
fistl
cmp
jmp
mov
cmc
cmp
inc
xchg
nop
shlb
icebp
cmp
mov
fnstcw
inc
xor
jmp
cmp
jno
outsb
jne
and
dec
add
xchg
pop
inc
in
arpl
je
mov
cltd
xchg
adcb
aas
push
and
dec
pushf
negl
jmp
fdivs
or
push
mov
js
sarl
cmpsl
lods
mov
push
inc
in
pop
mov
fnstenv
ret
cmpsl
ljmp
jl
js
push
xchg
and
pop
add
jle
outsb
xchg
in
xor
jae
and
call
mov
push
repz
inc
xchg
out
fstp
fs
sub
ret
sbb
fldt
stc
loopne
scas
in
adc
mov
push
pop
mov
mov
loope
fists
or
adc
cltd
rcrl
movsb
cmp
lahf
outsl
std
fwait
push
ret
sarb
ret
sub
mov
pop
fldt
xchg
xor
sbbl
xor
xor
lea
cmpsl
in
fdecstp
adc
out
fmull
dec
add
dec
mov
dec
lods
repnz
adc
jge
cwtl
fnsave
push
mov
pop
lods
or
idivb
test
jmp
mov
pop
dec
inc
cmp
mov
mov
mov
or
sbb
xor
int
mov
mov
dec
and
inc
push
and
mov
dec
scas
and
push
mov
xchg
fcoml
sbb
sahf
loopne
popa
aas
sti
pop
sbb
mov
sbb
sbb
ss
xorl
ficoml
enter
cli
mov
fdivr
jnp
das
inc
sub
cmp
sub
in
cmp
mov
mov
out
xchg
in
push
inc
xchg
add
pop
aam
imul
pusha
outsb
pushf
adc
xor
adc
out
cli
or
sbb
aad
mov
mov
cmc
jmp
les
mov
fiaddl
cltd
sarb
cld
outsl
aaa
aam
dec
xchg
fsubrs
addr16
sbb
addr16
mov
jo
cmp
cmp
dec
jnp
and
pop
outsl
fimull
cmpsl
jne
lret
into
sbb
lock
add
mov
loop
sbb
lds
std
adc
jecxz
out
jmp
inc
imul
dec
mov
mov
lods
arpl
orl
xor
out
push
jg
push
sbb
xchg
sub
inc
imul
mov
clc
jp,pn
push
cmp
dec
xchg
popf
mov
jnp
inc
inc
xor
or
out
mov
jle
xor
loop
sbb
scas
dec
incl
pop
lock
fidivrl
adc
and
sbb
pusha
rcr
push
mov
aas
fwait
lahf
push
shlb
mov
pushf
lods
fwait
mov
ret
das
negl
dec
sub
in
xchg
xor
push
push
inc
mov
add
sbb
ret
clc
fcom
jnp
mov
jge
lods
test
shr
icebp
mov
cmp
mov
xor
inc
divl
or
fstpt
fbstp
sbb
aam
lds
mov
mov
inc
xchg
and
divb
mov
test
into
jp
push
push
jl
stos
xchg
and
and
mov
push
cmc
in
push
sbb
mov
inc
cmpsb
sub
push
in
ss
in
or
push
pop
pop
add
sub
mull
inc
loop
repz
call
cmp
sbb
xchg
arpl
mov
pop
sbb
jmp
dec
cmpsb
jb
pop
iret
adc
cli
stos
call
or
mov
jno
repz
or
lret
rcll
push
mov
cmp
das
cmpb
inc
inc
sub
jmp
dec
stos
ja
test
fbld
adcb
pop
mov
mov
outsl
dec
sbb
xchg
jl
adc
dec
and
jns,pt
sub
stos
stc
ret
cli
cli
js
mov
fdivp
stos
cmp
jl
leave
aad
inc
and
in
jno
mov
pop
adcb
mov
cs
xor
repnz
daa
pushf
fldcw
insl
repnz
xor
out
rcrl
cmp
or
mov
xor
xor
cld
push
cmp
or
mov
jg
pop
mov
movsl
dec
mov
jg
dec
push
sub
leave
notl
fwait
jmp
sub
lahf
xchg
test
push
into
aas
pop
test
gs
mov
sbb
nop
mov
pinsrw
lret
cmpsl
push
loopne
xchg
sub
data16
jg
es
fbstp
arpl
xor
push
fstpl
sub
cmp
jge
or
cmp
mov
jecxz
push
xor
cmp
push
pop
lahf
sbb
or
mov
mov
add
adc
xchg
fidivl
leave
leave
sbb
add
adc
ret
arpl
shll
rolb
scas
ljmp
sti
xor
pushf
ja
imul
jbe
mov
sub
nop
scas
jge
hlt
sbb
nop
add
lcall
iret
stc
push
inc
fistl
sarb
clc
fadds
sbb
mov
stc
gs
and
push
imul
and
movsl
xor
push
inc
sub
sti
adc
nop
arpl
insl
xchg
sub
out
pop
push
jp
pop
pop
ja
rcr
jle
mov
adc
or
mov
pop
add
shll
jge
xchg
mov
mov
dec
jo
cmpsb
movsb
rclb
lcall
mov
cmc
rcll
ss
outsl
inc
mov
icebp
jg
sbb
js
xlat
cmpsb
mov
rcl
jbe
mov
ss
mov
call
push
lea
or
sbb
or
pmulhw
sahf
cld
sbb
inc
and
push
imul
movsl
clc
pop
sub
js
bound
inc
mov
pop
enter
movsb
sub
jp
adc
mov
rorb
inc
pushf
dec
or
cltd
xor
leave
insl
or
jmp
mov
shll
adc
push
lret
sarl
out
jmp
cmp
jecxz
pop
jb
test
idivl
std
adc
dec
jno
stc
arpl
fwait
pop
lods
or
sti
jo
fnstcw
movsl
insb
sub
inc
xchg
mov
push
or
stos
mov
das
out
jnp
push
sub
push
or
mov
iret
aas
inc
xchg
adc
iret
dec
fucom
in
mov
popf
imull
pop
pop
aaa
insl
daa
jge
or
addr16
mov
cmpsl
std
xlat
popf
imull
pop
pop
aaa
insl
daa
jge
or
addr16
cmpsl
in
cmpsl
std
ret
popf
imull
pop
pop
ds
and
or
push
cmp
aas
in
std
xlat
xlat
popf
imull
clc
negl
test
loop
rcrb
mov
andl
nop
push
test
rcl
and
adc
popa
xchg
inc
out
add
es
push
loope
jge
shll
and
adc
push
jno
add
push
rdpmc
pop
mov
sub
xchg
dec
fstpl
outsb
das
jno
xchg
decb
stc
mov
test
push
fistpll
dec
les
mov
or
jle
jg
dec
push
mov
add
movhps
mov
xchg
loopne
or
pop
add
popa
dec
imul
fcompl
fwait
in
sbb
jle
xchg
lods
jns
out
pop
pushf
sub
jno
andl
mov
jae
push
cltd
sahf
cmp
mov
xor
in
push
pusha
xchg
mov
mov
pop
outsl
rclb
push
lds
rcrl
cmpsb
adc
jo
push
push
scas
mulb
or
nop
stos
stos
jmp
int
xchg
orl
dec
cmpsl
or
pusha
mov
inc
out
mov
xor
jbe
jg
cmpsl
sahf
imull
dec
fimuls
repz
xor
or
jne
js
push
mov
xor
in
lock
loopne
mov
mov
ret
and
repz
xor
cmp
xor
push
shll
repnz
jbe
rclw
add
jno
inc
out
push
mov
es
push
loope
icebp
jbe
rclw
add
jno
inc
out
push
mov
dec
mov
divb
lret
pop
sbb
push
aad
cmp
je
mov
sti
cmp
enter
pop
jp
jecxz
bound
in
pmullw
fisttps
push
fcmovnb
test
mov
dec
push
adc
push
outsl
mov
mov
out
xchg
lcall
add
pop
icebp
js
adc
movsl
and
and
mov
inc
push
out
hlt
adc
mov
cmc
push
cwtl
mov
xchg
sbb
sub
jb
enter
cmp
jo
sub
mov
mov
arpl
dec
xchg
outsb
ret
repnz
mov
nop
jge
xchg
push
sarl
xchg
test
push
and
add
sub
lods
inc
in
sub
pop
jl
leave
stc
xorl
jno
and
lret
dec
add
inc
or
js
ret
in
pop
dec
std
cmp
mov
pop
jecxz
aam
out
out
jno
dec
fsts
mov
fucom
outsl
mov
in
scas
inc
pop
fcoms
negl
adc
js
mov
xchg
sub
bound
push
mov
vorpd
sahf
xchg
mov
xchg
xor
stos
push
ljmp
call
icebp
lret
mov
cltd
cmp
mov
mov
mov
pop
mov
imul
push
in
xor
jecxz
pop
ret
add
cmpsl
pusha
jg
xchg
cmpsl
xor
shll
xchg
or
push
xchg
stos
dec
inc
fstpl
cmp
adc
leave
sbb
or
jbe
mov
fnstenv
out
clc
fistl
push
sub
or
cmp
pusha
and
data16
test
pushf
or
sub
insl
shlb
fimuls
test
mov
lret
mov
push
fmuls
mov
add
cli
fimuls
adcl
pushf
inc
sti
jecxz
fcomip
inc
imul
add
jb
xlat
adc
sbb
out
ja
adc
and
or
inc
inc
idivb
push
lea
out
xor
ss
or
mov
adc
es
fcmovu
movsb
rcl
xchg
and
add
decb
daa
inc
or
mov
inc
sbb
add
mov
call
inc
mov
mov
sub
bsf
dec
fsub
sub
sub
cli
xor
dec
test
popa
ds
xchg
loopne
aad
adc
inc
mov
rcrb
mov
sub
gs
and
xor
je
sub
and
adc
das
cmpsb
lret
mov
test
or
push
daa
xor
stc
mov
cmp
cmc
pop
xor
jg
inc
mov
pop
cmp
sub
jns
sbb
ds
imul
arpl
push
popf
jg
pushf
xchg
pop
mov
shrb
es
cmc
jnp
fdivr
pop
in
call
mov
or
xchg
lret
rcrb
pushf
xchg
cmp
dec
cmpsl
jmp
and
in
ja
movsl
jo
push
loope
pushfw
into
jmp
clc
xor
or
inc
and
push
movsb
xor
xchg
rolb
movsb
loope
or
scas
xchg
cld
and
pop
cs
aaa
stos
push
repz
roll
jbe
push
add
or
add
fisttpll
es
pop
mov
cmpsl
xlat
xor
push
push
push
and
push
test
roll
xlat
lods
cmpl
jge
int3
in
daa
inc
lods
and
mov
sarl
mov
and
mov
test
stos
mov
mov
call
sbb
xor
jp
pop
fs
dec
push
in
mov
jmp
cli
xchg
fadd
out
sbb
dec
std
dec
jo
stos
in
imul
jl
xor
mov
cmpl
xor
inc
stos
outsb
jne
xchg
xchg
sbb
mov
inc
shrb
jbe
sar
push
lret
or
jne
jae
push
mov
or
hlt
dec
ja
pop
and
adc
sbb
dec
xchg
and
popf
dec
aaa
test
cmp
xor
add
movl
mov
rolb
popf
add
push
adc
sti
add
insl
mov
test
mov
mov
imul
je
jb
pop
xchg
or
sbb
shll
add
push
dec
cli
js
je
sub
inc
daa
sbb
fldcw
lret
test
xchg
test
gs
and
loop
test
outsb
sahf
mov
mov
pop
dec
imul
jns
jmp
jae
xchg
dec
sub
pop
mov
imul
lcall
les
sahf
sbb
inc
sub
lods
and
mov
sub
push
stc
ret
pusha
jg
ret
outsl
sbb
mov
mov
sbb
sub
int3
cmpsl
mov
or
sti
sbb
xchg
push
sbb
sub
and
imulb
insl
dec
push
ljmp
mov
or
in
mov
ljmpw
sbb
cmp
pop
fnstcw
jae
flds
xlat
fwait
je
pop
jp
dec
xor
adc
jb
inc
cmc
pop
mov
xchg
fists
hlt
inc
mov
pop
mov
cmp
add
jno
cmp
dec
lds
jge
cmp
addr16
out
adc
push
pop
jnp
outsl
in
popf
inc
mov
popl
icebp
mov
jae
or
pop
push
ret
loopne
sub
mov
pop
loope
cmpl
fistpl
push
mov
xor
bound
cmpsl
jg
lret
fs
pushl
and
call
aam
movsl
mov
mov
dec
cld
mov
dec
cld
adc
in
jl
fmuls
and
inc
lea
in
ret
jbe
jmp
stos
loopne
lods
mov
push
pop
sbb
xor
in
xchg
or
mov
sub
mov
or
imul
fwait
sub
movsb
aas
shlb
jg
in
sub
test
fimuls
add
cmp
jp
dec
in
loope
rolb
pop
cmc
adc
outsb
daa
and
mov
jo
mov
push
mov
push
enter
mov
cld
test
daa
call
adc
xchg
jge
mov
lahf
or
cmp
dec
movsb
xor
addb
gs
mov
mov
rcrl
pop
ss
repnz
jbe
add
fs
dec
add
adc
xor
push
ss
ret
pushf
hlt
xchg
or
rorb
out
inc
xor
cmp
xchg
outsl
cmp
adc
mov
lods
aam
mov
cmp
push
cmp
push
cmc
lea
fwait
push
lods
mov
in
sub
mov
add
pushf
or
in
and
out
call
mov
jmp
shll
sub
out
int3
xor
lcall
cmp
inc
dec
and
fwait
cmc
test
or
fs
mov
mov
and
dec
jle
sub
daa
or
add
xchg
xor
stos
inc
jne
loop
sbb
cmpsl
mov
jno
inc
inc
bound
movsb
outsb
sub
out
add
negl
push
pop
pop
testb
adc
push
icebp
pop
roll
dec
fistl
mov
inc
dec
fisttpl
add
lds
bound
add
inc
in
cmp
adc
sub
push
mov
push
and
fwait
outsl
xchg
mov
jns
imulb
pop
gs
sbb
xchg
lret
inc
xchg
adc
xcrypt-ctr
cmpsl
fiadds
mov
pop
jg
repz
mov
cmp
jne
pop
push
xlat
mov
pop
dec
ds
fstpl
mov
jecxz
dec
and
inc
sahf
in
push
pop
mov
mov
flds
hlt
ss
mov
js
jns
xchg
addr16
push
or
xor
or
popa
mov
mov
or
push
mov
insb
sbbb
gs
xchg
sahf
inc
neg
mov
mov
loopne
jg
push
jbe
out
movsb
add
out
push
data16
shrl
jle
mov
stos
or
xor
imull
mov
push
rcrb
mov
pop
data16
sbb
fwait
or
inc
sarb
mov
fildl
into
test
jecxz
xchg
fisttpll
jmp
dec
rclb
out
aad
aaa
push
nop
mov
pop
cmpsl
scas
jg
je
out
mov
test
lret
inc
push
hlt
pop
lret
mov
adc
sahf
push
sbb
les
andl
sub
hlt
popf
decl
scas
imul
dec
mov
and
es
and
lahf
mov
cltd
cmp
mov
leave
or
or
dec
xor
das
or
lret
int
icebp
mov
imul
incl
xchg
bound
out
inc
orl
call
repz
mov
pop
mov
cbtw
nop
hlt
dec
jbe
xchg
lret
enter
les
std
lods
sahf
xor
rcrl
pop
jne
sub
insl
inc
xchg
xlat
fs
dec
push
jnp
ret
ss
repnz
pop
jae
and
enter
inc
enter
cld
mov
push
xorl
ja
cmp
push
inc
adc
push
or
mov
sbb
jg
rclb
dec
or
mov
adc
mov
pop
xchg
sbb
movsl
add
aaa
sub
fs
icebp
jp
dec
xor
mov
outsb
and
mov
mov
cmc
xchg
out
mov
cwtl
mov
in
dec
push
adc
ljmp
dec
sub
iret
sbb
push
gs
or
xor
leave
repz
flds
mov
cmp
std
data16
and
pop
js
cmpsl
mov
nop
mov
sti
popa
jo
pop
lahf
pop
mov
int
aaa
insb
mov
fwait
mov
fldenv
rcrl
pop
push
aaa
fdivr
pop
mov
daa
sub
xor
lods
xchg
test
out
jp
push
ja,pn
xchg
outsb
sbb
je
mov
bound
xor
int
leave
jns
sub
leave
push
cmp
jo
dec
jmp
mov
cmp
aam
xchg
stc
out
sub
push
rorb
jae
pop
mov
insl
aas
popa
scas
cwtl
ja
negb
push
addb
je
adc
bound
stc
xor
movb
mov
cmpsb
les
mov
cmpsl
or
inc
xsha1
cmpsb
dec
push
ficoml
in
scas
dec
fisubs
push
mov
cs
or
push
and
ds
aad
mov
or
jbe
int3
mov
sbb
clc
int3
push
imul
mov
xchg
mov
add
mov
test
mov
jl
sarb
xchg
xor
xchg
push
rolb
cld
imul
push
ficomps
out
sbb
faddl
imul
mov
mov
cli
loop
mov
mov
mov
xchg
mov
push
cmpsb
jmp
stos
insl
and
iret
push
mov
call
roll
lcall
dec
pusha
or
in
testl
mov
js
dec
mov
pop
std
sub
jmp
das
sti
cmp
pop
inc
fnstcw
fisttps
cmp
mov
loopne
in
enter
inc
sub
shrb
cs
push
aad
ret
cmp
ss
lahf
sbb
stc
push
dec
dec
into
xor
leave
into
xchg
fdivs
lea
mov
imul
hlt
push
and
lds
pop
js
xchg
stos
cwtl
iret
lods
mov
jge,pn
pop
mov
es
mov
mov
mov
jmp
lock
fnstsw
push
xchg
sub
mov
stc
lods
sbb
hlt
fsubr
mov
mov
cmp
inc
xor
sub
inc
pop
test
arpl
dec
pop
addr16
inc
ljmp
sbb
sbb
pop
dec
mov
inc
mov
sbb
lret
out
dec
mov
push
push
cmp
or
add
adc
mov
sub
mov
mov
insb
aaa
rclb
movsb
shrl
mov
mov
lcall
cwtl
and
ror
mov
mov
mov
les
mov
xchg
out
shlb
out
xchg
repnz
mov
and
cmp
ja
ds
xchg
adc
mov
repnz
jge
mov
xchg
xchg
xlat
or
cwtl
imul
mov
test
pop
js
mov
mov
roll
pop
outsl
xor
stc
lods
dec
push
mov
sbb
fsts
pushf
bound
outsb
adc
mov
sarb
data16
popf
addr16
cld
pop
fwait
sarb
mov
xlat
gs
and
pusha
mov
scas
xorl
fidivs
xchg
js
int
cld
inc
push
xlat
jl
or
pop
lret
dec
stc
fiaddl
fnstsw
mov
xchg
jle
jne
repz
adc
or
jecxz
stos
aam
push
in
inc
jae
sub
cmp
fst
popa
sbb
xor
mov
xchg
push
cltd
roll
out
xchg
push
mov
shrb
sarl
pop
push
jg
in
ss
mov
jne
pushf
cmp
inc
and
ljmp
push
ljmp
scas
fldl
push
xchg
xchg
or
xchg
jg
jecxz
push
push
push
fs
pop
iret
mov
int3
lahf
xchg
dec
adc
in
jae
bnd
wrmsr
mov
sub
inc
xchg
rcrb
in
gs
push
mov
jo
call
cwtl
push
inc
adc
mov
pop
jl
popa
dec
lods
xor
adc
cmpb
pop
add
inc
cmp
sbb
jp
sub
xchg
xchg
adc
aaa
mov
jle
mov
mov
dec
add
pushl
fildl
dec
data16
insl
in
out
test
mov
test
sub
scas
cmp
sbb
lcall
xor
dec
mov
test
outsl
jg
mov
es
jp
xchg
mov
loope
fs
cs
sbb
ja
inc
or
fimull
vmwrite
je
in
fidivrs
sti
cmc
inc
adc
movsl
mov
imul
addr16
ja
loope
add
sbb
testl
jge
sbb
dec
inc
ret
aaa
jae
and
sub
mov
sbb
outsl
push
pop
xchg
xchg
pop
mov
cmp
enter
mov
xchg
insb
jno
cltd
xor
jl
sbb
jnp
cli
mov
push
test
into
adc
mov
cmp
repz
mul
inc
test
push
adc
inc
iret
cmp
adc
fnstsw
xchg
and
rclb
aas
dec
idiv
cmp
sub
mov
lods
dec
fnstenv
push
mov
or
xor
leave
lret
loope
and
push
repnz
shll
movb
arpl
mov
loopne
sub
or
sbb
hlt
xchg
xor
or
push
cmpsl
mov
aaa
movsb
int3
add
and
dec
pop
fldcw
clc
push
mov
cmc
cmp
adc
mov
cmp
les
pop
cli
jl
xchg
cmpl
dec
pop
dec
xchg
movsb
lcall
adc
filds
or
mov
inc
xor
xchg
bound
fs
pop
jl
addl
enter
cmp
andb
loope
ret
fimuls
jle
sbbb
add
out
jo
es
or
out
sbb
pop
cli
dec
pop
out
lds
repnz
cmpsb
ss
lea
rorb
inc
ss
sub
and
inc
loope
cmp
mov
dec
and
mov
adc
xchg
rcrl
hlt
mov
jle
xchg
insb
mov
mov
push
mov
mov
mov
mov
lahf
sbb
mov
das
sbb
lods
cmp
repnz
push
cmp
out
pop
mov
sbb
nop
stc
imul
pusha
dec
repnz
sbb
insl
fidivl
fs
mov
sub
xor
repnz
dec
dec
iret
fisttpl
mov
inc
dec
sbb
lcall
and
icebp
repnz
push
mov
jne
pop
add
roll
push
pop
adc
cld
mov
xor
sub
out
push
jbe
add
ja
es
or
add
or
lods
popa
mov
cmpsl
loop
jne
pop
dec
xchg
cmp
sbb
jmp
int3
pushf
popa
cmc
jge
push
and
cli
jle
sbb
jecxz
xor
pop
xchg
mov
ss
hlt
idivb
cs
aam
jnp
push
xlat
adc
clc
sub
dec
in
ret
pushf
cmpsb
dec
pusha
cmp
dec
lods
push
mov
or
scas
les
or
or
push
jecxz
cmpsl
fisubs
sub
mov
cli
ret
add
jns
iret
adc
xor
dec
es
mov
jl
mov
iret
outsl
outsl
stc
inc
xor
fldenv
mov
aad
movsb
jl
mov
mov
jge
or
outsb
xor
int3
xchg
mov
fmul
pop
daa
loop
inc
stos
xor
ja
xor
addr16
fmuls
scas
jb
xor
movsb
sahf
xorl
loopne
testl
std
repnz
push
movsl
rcrl
cltd
int3
pop
xlat
popa
in
jmp
cwtl
test
mul
push
fisttpll
into
lea
int
sbbl
shrl
enter
fsubrs
pop
into
jg
dec
xor
incb
pop
call
xor
pop
sub
ret
aam
ss
mov
subl
out
pop
std
ret
scas
shlb
repnz
dec
pushl
push
push
push
xchg
push
scas
stos
test
adc
pop
movsb
xchg
mov
and
xchg
fs
mov
or
push
test
aaa
stos
pushf
loope
mov
js
dec
adc
sub
mov
outsb
mov
outsl
sub
in
xchg
lock
mov
and
insb
or
dec
stos
push
mov
jecxz
fisttps
sbbl
es
mov
adc
in
lcall
mov
fidivs
sbb
inc
test
jns
mov
and
int
aaa
fwait
addr16
cmp
inc
shlb
in
rolb
or
xchg
ret
jmp
cmp
mov
jmp
cmpsl
xor
add
jae
stc
sbb
add
add
iret
add
mov
dec
lret
stos
test
and
stos
sahf
scas
pop
into
les
xchg
add
sub
mov
test
stos
int
xchg
and
push
shl
xchg
leave
xchg
cmpsb
cltd
aas
pop
movsl
aam
fsts
mov
xor
mov
xor
adcb
and
in
cmc
ds
dec
icebp
dec
mov
add
les
mov
or
jbe
cmpsb
cmovno
mov
es
pop
dec
test
add
push
dec
mov
add
arpl
inc
scas
iret
aas
imul
push
inc
push
inc
outsl
xchg
outsb
adc
sbb
mov
call
popa
cmpsl
out
in
rcl
push
mov
xchg
lret
xchg
mov
inc
pxor
lret
dec
mov
rolb
mov
xchg
movl
js
stc
and
inc
cmp
dec
push
hlt
repz
adc
mov
imul
jnp
pusha
lods
sub
or
xchg
rcrb
in
int
cmpsl
popf
mov
add
imul
pop
mov
div
sbb
inc
nop
dec
pop
push
mov
jns
pop
pop
cwtl
jae
das
sbb
and
adc
mov
mov
push
or
dec
movsl
adc
xor
stos
dec
cmpl
in
in
insb
pop
mov
popf
or
sub
inc
adc
sarl
test
dec
xorl
xchg
loop
addr16
push
rolb
jle
imul
adc
enter
adc
cmp
adc
jp
push
dec
add
mov
and
aam
es
mov
bound
ret
jle
sbb
lods
popf
jb
ret
ss
je
lods
test
aas
pop
cmp
xchg
lods
cmc
mov
fstl
xchg
lahf
jae,pt
push
loop
sub
sub
insb
out
cmp
ljmp
jg
pop
add
cmpl
out
add
stos
je
pop
cltd
popa
inc
cmp
and
iret
into
mov
xchg
push
loope
icebp
jbe
rclw
add
jno
inc
out
push
mov
es
push
loope
icebp
jbe
rclw
add
jno
inc
out
push
mov
es
push
loope
pop
jbe
rclw
add
jno
popa
xlat
push
and
es
push
loope
icebp
testb
imul
cmpsb
mov
mov
in
sub
push
push
mov
push
push
push
push
movl
movl
movb
call
mov
andl
push
movl
pushl
movb
call
andl
push
push
mov
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
pop
pop
leave
ret
cmp
sub
sbb
or
jp
sbb
jp
fs
idivb
mov
fcmovu
fcmove
pop
cmp
sub
or
jp
push
pop
pop
dec
dec
mov
cltd
mov
ficompl
fsubrs
mov
rorb
fs
imul
test
xchg
mov
xchg
leave
push
cmp
sbb
pop
jle
push
addb
mov
mov
ror
or
outsl
test
push
cli
ljmp
push
ficoms
cwtl
jbe
add
mov
cmp
sbb
mov
sub
in
inc
stos
push
pop
mov
scas
sub
testb
inc
stos
call
out
test
imul
data16
add
es
fldenv
cmp
jl
dec
ror
inc
sub
lcall
adc
lds
hlt
lock
in
sub
test
adc
mov
enter
sub
sbb
or
pop
in
dec
jl
xor
mov
loopne
call
push
pop
sub
jb
adc
pop
dec
sbb
icebp
out
iret
mov
scas
mov
dec
sub
imul
prefetch
sar
lcall
xorb
inc
jp
jno
insb
sub
imul
stos
test
cli
stc
ljmp
cmp
sub
sbb
or
push
pop
pop
dec
dec
mov
cltd
mov
fcmovu
lret
cmp
mov
adc
loopne
bound
xchg
cmp
xor
divb
jo
xchg
sbb
jbe
cmp
mov
cmpsl
xor
jne
jnp
lea
sbb
cmp
pop
mov
aad
scas
xchg
inc
outsl
into
pop
push
or
mov
xchg
shlb
xlat
cli
xor
push
fmuls
sub
xchg
mov
dec
pop
sbb
mov
jmp
jge
add
or
mov
inc
hlt
inc
cmp
in
inc
cmp
xchg
fidivl
adc
xchg
icebp
bound
pop
cmp
shl
hlt
lcall
js
in
push
bound
jne
jo
cmpsl
js
lret
jle
shll
inc
and
data16
rolb
cmp
xchg
sub
stos
and
into
inc
sub
in
nop
adc
jno
stos
repz
adc
xor
cs
aad
loope
mov
xchg
ja
sub
jno
int3
pop
sub
insb
add
jl
js
ficomps
es
pop
adcb
jo
out
fwait
pop
inc
insl
mov
cltd
add
cli
out
lock
mov
ficomps
pop
test
mov
shrb
sahf
mov
mov
push
xchg
adc
testl
jg
pxor
cmpsb
mov
push
pop
jge
add
lcall
jno
inc
mov
gs
or
in
xor
daa
stc
mov
pop
sub
xchg
xchg
call
fsubrl
les
jb
arpl
lea
sbb
jo
dec
dec
fmull
jmp
icebp
dec
out
daa
test
imull
or
mov
xlat
outsb
inc
xor
jle
sub
gs
decl
jns
sub
or
lcall
pushf
out
es
mov
jge
add
divl
mulps
out
test
jns
clc
pop
ss
pop
mov
mov
mov
push
adc
fstl
es
mov
or
add
dec
icebp
jge
jno
or
pop
or
xchg
adc
cmpsl
insb
mov
movsb
fdivs
lahf
or
mov
dec
pop
into
sbb
lret
xor
or
enter
fcom
lds
push
scas
ret
xchg
jmp
inc
in
sub
sbbb
jmp
jbe
cmp
fdivr
pop
cmp
jle
aam
lods
xor
arpl
mov
xor
aaa
shlb
and
push
sbb
mov
jl
dec
mov
mov
shlb
ficoms
mov
or
out
out
mov
add
cmp
mov
xchg
loope
pop
fisttpl
mov
mov
test
xor
or
out
cltd
pushf
and
aaa
jle
sbb
in
cmc
xor
hlt
jo
fnstcw
stos
jp
push
arpl
insb
xor
inc
dec
ss
pop
cmp
imul
fistl
xchg
adc
cli
and
fcmove
sub
mov
in
shlb
mov
aad
inc
dec
jne
lods
das
out
roll
stos
mov
clc
ss
outsl
cmp
movsb
mov
fwait
pop
sbb
jbe
cmp
shlb
add
mov
push
je
mov
mov
jo
push
mov
popa
mov
stos
scas
inc
andl
flds
or
cmp
sahf
push
jp
mov
out
cs
xor
lea
pop
adc
clc
dec
fldcw
mov
add
xor
mov
jle
std
push
inc
adc
jle
add
mov
insl
in
dec
inc
shlb
inc
xchg
add
imul
cmpsb
ljmp
mov
insb
mov
outsl
sbb
add
cld
les
arpl
cmp
vpshufd
and
ja
mov
jno
dec
jbe
jb
lea
aad
inc
js
jmp
mov
xchg
popa
subl
mov
in
xchg
call
in
stos
les
int3
aam
xchg
mov
or
dec
dec
or
or
dec
lods
es
pop
jle
cltd
rolb
mov
fcmove
mov
shrl
sahf
call
rorb
es
push
xor
sub
mov
popf
pop
push
xor
xchg
mov
pop
mov
out
aas
dec
stc
lods
sub
push
lahf
cmp
sub
xchg
cli
scas
add
xchg
xor
dec
in
push
xchg
rcrb
js
mulb
adc
push
ja
ljmp
shlb
mov
ds
push
jl
nop
outsb
mov
cmc
inc
insl
aam
ret
lcall
sbb
jb
and
cmpsb
nop
jp
inc
fists
subl
ss
popf
loope
subl
cld
nop
dec
fisttps
imull
or
inc
nop
jb
xchg
cmp
and
and
lds
push
xlat
adc
popa
jge
lock
xchg
pushf
orl
outsb
ret
jae
dec
sbb
int
lret
lret
add
jp
popa
pop
pop
sbb
and
xchg
adc
xchg
in
rorl
push
jmp
push
fisubl
lcall
pop
lea
adc
ret
ret
mov
push
rcl
outsb
cmc
int
test
jo
lret
xorb
test
movsb
and
mov
or
imul
or
mov
inc
lcall
sarb
pop
in
mov
cmp
fstps
in
add
not
dec
inc
push
sarb
shll
mov
or
test
lea
mov
sbb
jo
pop
push
hlt
push
mov
and
adcl
addr16
aaa
repz
add
adc
inc
orl
add
fsubrl
rcll
addl
ss
xchg
out
test
or
push
mov
ret
iret
xchg
jnp
in
mov
pop
mov
inc
pop
sbb
mov
or
fdivrs
imul
in
sbb
push
mov
mov
daa
icebp
xchg
cmp
test
pop
sbb
pop
popf
jae
ret
imul
into
dec
mov
hlt
jg
pop
add
jg
mov
add
and
cmc
xchg
inc
push
popf
imul
inc
xor
sub
addr16
mov
in
bound
aad
jmp
loope
out
sbb
pop
xchg
js
test
imul
lock
loope
test
rcr
or
jl
inc
xchg
push
and
and
pop
lea
or
lods
xchg
mov
notl
cmp
enter
aad
leave
mov
or
cmc
cmp
gs
xchg
or
daa
cmpsb
xor
xchg
outsl
xchg
lahf
movsb
adc
mov
repz
pop
mov
shll
daa
xchg
lds
sbb
mov
mov
xor
push
add
dec
inc
sbb
dec
xchg
inc
lret
dec
and
or
jge
xor
shr
repnz
cmp
push
pop
add
xchg
outsb
test
mov
push
rorb
arpl
mov
cltd
daa
add
push
xor
push
sbb
dec
lock
cmpb
rclb
xchg
arpl
dec
mov
rorb
or
and
mov
jb
mov
sbb
cmp
cld
push
das
push
repz
push
mov
fucom
cmp
add
xchg
sub
pop
sbb
lods
hlt
push
add
iret
pushf
adc
ljmp
xchg
lock
enter
loop
push
call
xchg
xor
jae
stc
add
or
push
in
mov
sbb
pushf
sub
push
out
push
fs
mov
inc
mov
mov
fildl
adc
mov
movsb
data16
adc
lods
shrl
push
adc
jae
sbb
and
mov
ja
pop
lea
push
push
or
inc
int
stos
add
mov
xchg
mov
addb
push
push
push
jg
aam
mov
es
mov
add
push
dec
sarl
inc
and
cmpsb
fsubs
adc
pusha
and
push
pop
pop
xor
add
insb
js
insl
hlt
cwtl
lea
jno
mov
cmpsl
add
xchg
ret
mov
loopne
shll
stos
mov
aas
push
dec
popa
test
ret
mov
jns
pushf
add
idivl
out
or
pop
mov
xor
ss
imul
inc
xadd
dec
jle
outsb
lret
mov
xchg
sahf
hlt
jp
jge
cmp
or
jb
int3
dec
shll
mov
lods
mov
adc
and
xchg
or
inc
or
mov
popf
adc
jno
imull
outsb
mulb
push
js
sbb
mov
mov
or
jbe
je
mov
jns
sub
jl
lock
lcall
lahf
cwtl
cmp
inc
adc
cmp
mov
pop
inc
sarl
loope
jns
and
dec
adc
in
testl
add
cli
push
adc
and
sbb
pop
outsb
testb
outsl
mov
cmp
adc
mov
ficompl
lret
repz
mov
and
jle
cmc
jnp
mov
insb
ss
data16
int
mov
je
cltd
adc
rcl
lcall
jnp
push
adc
dec
xorb
jae
jg
sti
fcmove
xchg
mov
inc
xor
jnp
sub
adc
std
and
lret
mov
stos
dec
jns
daa
sbb
mov
in
mov
repz
cmpsb
repz
mov
mov
sbb
clc
cmp
ret
aaa
insl
jno
xchg
ss
rcr
in
push
add
ljmp
lea
cwtl
xchg
scas
mov
jbe
xchg
lea
ret
fiadds
cs
mov
sbb
jg
fldcw
arpl
inc
pop
loop
pop
sbb
and
rclb
cmp
repnz
sbb
lret
repnz
xchg
cmp
out
pop
pop
movsb
shr
je
or
enter
scas
sahf
push
popa
jo
and
or
cmpsl
mov
jl
jp
mov
loopne
add
outsl
and
push
jne
hlt
jnp
ljmp
or
sub
fildll
fdivrs
lret
adc
xchg
int
gs
lea
adc
mov
jp
adc
lret
push
mov
sub
rorb
icebp
jl
mov
xor
mov
inc
icebp
call
fucomi
jae
test
mov
add
sbb
pop
add
sti
mov
adc
or
aas
pop
ret
ljmp
int
je
pop
jns
cmp
mov
xor
push
gs
mov
mov
cmp
jmp
jecxz
cmp
sbb
les
or
xlat
inc
jbe
push
in
jns
mov
adc
mov
shr
std
das
jb
mov
std
xchg
bound
xchg
ret
jge
sub
jb
sbb
insb
sub
jl
rolb
sub
push
pop
fldt
rcll
arpl
push
mov
inc
ret
stos
pop
dec
fisttpll
mov
or
arpl
jle
sbb
or
lcall
sbb
add
repnz
sbbl
lods
pop
cmp
inc
mov
xchg
or
mov
sbb
mov
inc
push
jp
push
mov
in
pop
and
mov
lods
sbb
push
mov
push
ds
lret
adc
pop
aad
mov
imul
push
xor
xor
push
dec
shl
jmp
arpl
jb
dec
js
cmp
xchg
in
cli
mov
test
lds
dec
pop
pop
insl
xor
pop
lahf
shlb
int
fisubl
aam
test
cmpl
cmp
pop
sbb
jmp
mov
jbe
rcll
and
xlat
int3
cmpsl
imulb
adc
aas
mov
dec
mov
js
push
mov
ds
nop
mov
pusha
andl
push
fwait
xchg
add
fldcw
xor
mov
adc
push
shlb
and
fmul
bound
xchg
sub
push
aam
mov
pop
imul
sbb
iret
psubusb
mov
sub
mov
in
lock
stos
pop
pop
mov
xorl
fcoms
data16
rcrl
in
in
jmp
icebp
mov
daa
in
pop
outsl
cld
lds
mov
dec
ret
outsl
clc
fdivrl
popa
cli
mov
mov
mov
sarb
jbe
sbb
pop
shll
es
iret
fnstsw
out
inc
or
mov
test
mov
add
lea
adc
mov
mov
aaa
xor
js
xchg
pushf
lret
aas
fnsave
aaa
inc
andb
std
pop
pop
sbb
lahf
loopne
inc
or
xor
pop
stos
in
inc
cmp
pop
sub
or
or
sub
sbb
push
pop
jae
mov
sub
and
pop
pop
and
sub
shrb
cmp
adc
out
dec
adc
xor
dec
add
mov
addr16
pop
inc
iret
sbb
pop
out
and
xchg
mov
rcll
dec
movsb
lea
jns
cmp
jmp
cmc
adc
mov
daa
js
mov
inc
adc
scas
inc
icebp
mov
shlb
mov
xchg
xchg
sbb
inc
xchg
sbb
pop
mov
jno
out
aas
add
in
movsb
jle
mov
push
xchg
jl
mov
es
sbb
push
stc
push
addr16
push
adc
mov
clc
clc
std
movsl
dec
xchg
sub
xchg
mov
add
add
icebp
add
xchg
xchg
push
loope
xchg
jmp
out
gs
mov
jmp
in
inc
incl
mov
ljmp
and
into
jbe
cmpsb
sti
lods
pop
push
pop
sbb
loope
enter
jnp
inc
adc
inc
mov
xchg
add
inc
mov
popf
int
shll
sti
mov
jbe
rclb
in
inc
test
adc
cmp
and
hlt
jb
shll
inc
lret
push
jb
lods
mov
adc
cmp
mov
pop
pop
insl
mov
xchg
gs
xchg
mov
orb
and
int
movsb
loope
inc
out
xor
mov
stos
cmpsb
add
inc
out
popf
es
jmp
cmp
inc
sbb
fcmovnu
jmp
or
jmp
dec
fnstsw
in
mov
pop
mov
sbb
pop
popf
inc
loopne
out
fisubrl
mov
sbb
adcl
push
and
lret
mov
jno
rcr
hlt
xchg
leave
pop
push
test
or
sahf
inc
xchg
out
sub
push
fsubs
mov
inc
cmc
aas
and
inc
out
lods
popw
jne
insl
mov
ds
sub
add
ret
mov
repz
out
inc
pop
int
repz
out
inc
mov
aaa
subb
dec
jbe
adc
xlat
lea
dec
into
xlat
adcb
sub
dec
rol
inc
scas
jnp
aaa
bound
lret
testl
lock
fwait
dec
fmull
sbb
xchg
mov
fucomi
ja
call
add
add
cmp
jbe
push
outsl
mov
incb
mov
int
push
sbb
mov
shlb
notl
jp
les
in
out
push
nop
gs
jmp
test
mov
mov
dec
jnp
cwtl
cmp
pop
andb
out
add
push
inc
stc
aad
addr16
outsl
cwtl
push
and
nop
test
out
lock
mov
mov
cmc
cmp
into
xor
jge
mov
popf
pop
stos
or
push
inc
lock
adc
mov
jecxz
and
jo
leave
std
mov
fcmovbe
push
push
pop
xchg
addr16
sbb
push
aam
push
push
mov
or
or
cmpsb
adc
sbb
push
testl
dec
cmpsl
out
ds
mov
into
addr16
rolb
cli
cltd
inc
enter
aad
xor
jecxz
push
mov
mov
dec
cmovs
jp
pop
xchg
xor
pop
jae
enter
mov
je
sub
dec
xor
stos
imul
cmpsb
dec
pcmpeqb
xor
addr16
cld
mov
pop
in
pop
repnz
jp
stos
fcomip
cld
and
push
mov
aas
dec
cmp
fdivp
adc
rcll
mov
pop
push
icebp
shrl
adc
in
lret
nop
pop
gs
jle
pop
ret
enter
push
cmp
dec
in
mov
out
fwait
or
xor
xor
mov
mov
and
or
in
aas
mov
out
hlt
movsb
xor
faddl
sub
push
lea
cmp
mov
pusha
call
mov
dec
jnp
fdivrs
mov
icebp
mov
push
mov
fbstp
add
mov
int
mov
jp
out
in
jge
and
in
jns
mov
rcrb
mov
jp
ret
push
cld
xchg
out
jp
jle
lret
mov
lds
or
lret
and
movb
cmp
aaa
jno
lock
jae,pt
xor
out
mov
xor
pop
rcr
mov
mov
jg
adc
mov
fwait
ds
cmp
dec
mov
and
mov
cli
fisubs
and
out
out
sarb
mov
iret
cmc
inc
jae
hlt
outsl
clc
mov
sub
lret
stc
pushf
jg,pt
mov
xchg
ja
rcrl
loop
or
dec
xor
jae
jno
loop
and
adc
jmp
xchg
mov
loopne
add
or
inc
mov
test
std
cltd
xchg
stos
mov
inc
ja
lods
push
fcmovnbe
movl
and
mov
data16
mov
xor
jo
lcall
or
insb
add
xchg
inc
pop
xor
or
jmp
cs
mov
sub
jg
mov
jle
addr16
std
ljmp
push
into
mov
lret
in
shrl
in
scas
dec
clc
cli
and
inc
jecxz
jns
jl
sbb
sub
push
out
and
popf
out
pop
xchg
jmp
int3
add
pmuludq
shl
dec
dec
out
push
mov
inc
loop
stos
pop
ss
mov
loope
out
dec
loop
fisttpl
push
iret
ljmp
lret
out
scas
leave
push
insl
test
mov
inc
icebp
nop
push
andl
pop
adc
outsb
in
out
xlat
or
call
inc
or
mov
call
movsb
xchg
and
call
xor
xchg
stc
loope
scas
ret
xchg
inc
mov
scas
testl
jmp
sub
aad
xchg
call
test
repz
lret
mov
movsb
test
insb
add
jp
push
or
mov
addr16
pop
shll
lret
and
jl
sub
lahf
cmpsl
out
mov
xlat
push
pusha
outsb
in
repnz
lcall
or
and
pop
sbb
ss
jl
xchg
lds
and
cwtl
fldt
mov
aaa
es
sub
xor
push
lea
ret
mov
mov
mov
lahf
into
xor
and
movsb
es
jle
mov
inc
lret
imul
mov
scas
sti
ror
jge
jle
shl
or
jne
fnstenv
outsl
filds
or
jecxz
xchg
into
sbb
push
sbb
xchg
sahf
dec
jp
rol
and
incb
jl
mov
fs
out
cmp
inc
sub
xchg
fisubrl
pushf
jbe
xor
lcall
xor
push
cmc
sbb
imul
and
repnz
add
or
push
data16
mov
cmpb
stc
sub
mov
jge
popf
sub
testl
xor
lret
icebp
xor
mov
das
inc
xchg
popa
jl
and
in
fucomp
je
jae
lods
mov
cmc
jno
push
out
dec
jbe
dec
push
rorl
xchg
xor
mov
ret
jne
push
and
std
fdivl
push
pop
sahf
orb
addr16
mov
jge
imul
fs
sbb
jl
pop
test
mov
jp,pt
aad
in
outsl
test
mov
xchg
dec
xchg
mov
push
mov
and
jnp
cltd
rolb
dec
or
or
cmp
jb
das
mov
or
jp
push
pop
pop
dec
dec
mov
cltd
mov
fcmovu
lret
cmp
sub
sbb
or
push
pop
pop
dec
dec
mov
cltd
mov
fcmovu
lret
cmp
test
ljmp
dec
mov
cltd
mov
fcmovu
and
cmp
inc
sbb
or
jp
pop
pop
lret
mov
mov
lea
push
and
nop
or
mov
pusha
loopne
pop
lea
mov
push
iret
inc
in
jo
pusha
sbb
mov
mov
jge
insl
cwtl
lea
lea
mov
cmp
inc
std
jo
pusha
add
adc
and
rclb
gs
loopne
adc
inc
fldl
pop
mov
jecxz
leave
cmp
lock
lds
jbe
xor
cmc
pop
aad
int3
push
and
ret
repnz
xchg
and
clc
clc
clc
ljmp
push
inc
lea
mov
jo
xor
nop
icebp
into
fisubrl
sahf
fmul
inc
testb
mov
inc
jb
test
jo
inc
xor
cmc
in
fcomps
or
mov
lcall
mov
mov
dec
in
shlb
pop
push
dec
xor
dec
dec
mov
add
inc
add
sahf
cmc
adc
shl
mov
clc
movsl
bound
add
enter
push
sahf
adc
jo
jne
nop
adc
cmp
rcrb
jge
je
test
xchg
add
push
aad
out
in
or
push
mov
xor
loope
into
push
leave
push
fstl
test
jb
insb
in
aad
mov
jge
ds
pop
call
inc
fnstsw
cmpsb
inc
mov
mov
js
popa
enter
lds
lock
loopne
adc
and
push
int
std
jo
pusha
sbb
mov
mov
jge
insl
loopne
adc
and
push
int
std
jo
pusha
sbb
pop
pop
bound
movsb
cmp
or
icebp
sub
push
daa
cmp
xchg
cwtl
loope
rclb
or
pop
lcall
in
push
push
cli
mov
add
mov
xor
fistpl
mov
loopne
sub
pop
and
xlat
xlat
jl
stos
cmp
adc
add
fwait
adc
pop
dec
jge
push
lock
neg
push
test
lods
mov
xor
dec
fdivr
or
pop
aaa
push
and
ret
int
inc
and
out
mov
adc
call
outsb
lds
notl
inc
sub
aad
mov
arpl
push
pop
or
cmpsl
xor
dec
jecxz
adc
es
mov
push
dec
mov
pop
mov
dec
dec
adc
xlat
cld
icebp
jae
sbb
jle
test
repnz
das
and
cmpsl
outsl
jnp
dec
sti
out
ja
mov
mov
pop
icebp
leave
dec
popa
andl
sub
dec
rol
lcall
and
adc
mov
fcmovb
aas
sbb
in
jg
repz
fs
lods
outsl
sbb
popf
add
fimull
inc
sub
out
cltd
clc
lea
int3
insb
addb
pop
mov
jecxz
sbb
fscale
xchg
movsb
cld
lods
inc
out
shl
jne
pop
pop
orb
insl
test
out
dec
mov
add
mov
sbb
inc
dec
dec
mov
jnp
repz
and
lds
sub
sub
push
fwait
loope
cli
fdivrs
add
fnstenv
sub
inc
in
xchg
aaa
rolb
movsl
in
sbb
aam
or
mov
mov
leave
icebp
jp
movsb
and
fucom
fiaddl
jecxz
loop
int3
and
mov
xor
imul
push
sub
ja
popf
push
ds
int3
push
orl
sti
mov
sbb
mov
addr16
jo
std
inc
ja
inc
xchg
xor
ss
sahf
push
cmp
iret
in
xchg
xor
add
dec
sub
gs
divl
test
popa
mov
jnp
in
pop
imul
cltd
dec
int
int3
and
xorl
mov
sub
and
sub
mov
dec
sarl
inc
sbb
cmp
xor
out
mov
hlt
jo
test
or
and
xor
xchg
jge
or
cld
lea
divl
or
sbb
sbbl
out
push
push
lea
xor
in
outsb
fildll
enter
dec
dec
mov
aaa
lret
pop
jb
mov
int3
mov
mov
mov
pop
pop
lods
orl
or
nop
mov
add
jp
jbe
loop
push
push
add
pusha
add
inc
pop
pop
and
xchg
mov
push
popf
mov
pmaxsw
jne
sti
cmpsb
orl
mov
xchg
mov
sbb
call
stos
insb
pusha
pop
lods
push
aam
push
push
add
rolb
adc
mov
pop
dec
xchg
adc
dec
mov
pop
sbb
sub
push
or
push
jl
mov
add
xor
out
adc
cmpsl
pop
mov
xchg
mov
jle
lock
imul
xchg
daa
jmp
in
incl
fs
push
cli
icebp
inc
mov
push
jnp
cmp
bound
fwait
test
xchg
loopne
or
loop
adc
imul
out
xchg
test
mov
xor
fmul
sbb
and
sbb
stc
fisttpll
inc
hlt
push
in
call
bound
mov
inc
dec
xchg
jecxz
push
icebp
dec
rcr
jle
add
dec
mov
inc
test
outsl
push
rorb
bound
shlb
jno
insl
push
icebp
jl
mov
std
xchg
cmp
cmpl
xchg
and
inc
sahf
icebp
push
ss
adc
or
stos
add
push
push
push
xor
out
jle
movsl
rcrb
fstl
mov
sub
mov
shll
mov
jno
and
dec
xor
ljmp
xchg
das
xor
pop
movb
int
dec
lret
adcb
test
pop
and
jae
lret
fstps
enter
xor
mov
into
stos
loop
xor
dec
mov
jb
jb
jno
dec
in
inc
mov
mov
outsb
xchg
mov
mov
fs
out
ss
divl
xor
and
pop
push
iret
mov
sbbl
mov
mov
mov
xchg
sbb
add
push
push
sbb
stos
je
push
das
js
dec
addr16
mov
insb
jl
push
mov
loopew
jmp
push
insb
mov
mov
jge
andb
mov
pop
adc
add
dec
or
lock
adc
ret
mov
leave
sub
add
movsb
pop
or
pop
leave
mov
add
add
jge
subl
fisubl
lock
pop
push
shlb
test
push
mov
repz
jmp
nop
or
mov
mov
adc
pushf
lahf
call
cmp
pop
xor
movsl
imul
sahf
rcll
or
int
and
int3
sarl
dec
jno
add
cli
inc
arpl
mov
sub
insl
cmp
imul
andb
idiv
and
cmp
loope
or
clc
dec
imul
cmp
cmpsb
adc
int3
pop
sub
mov
xchg
sbb
sbb
add
jl
sbb
in
adc
movsl
lea
out
push
hlt
pop
clc
jae
imul
jns
sahf
into
stc
lahf
inc
mov
xchg
inc
ret
fs
sub
inc
and
cli
int
add
push
push
pushf
repz
sbb
arpl
jl
add
pop
lea
mov
xchg
das
xchg
into
test
push
popa
sub
adc
sahf
out
cld
adc
push
cmp
pop
cmp
cmp
mov
lahf
cmc
lcall
jl
into
punpckhwd
xor
cs
sub
orb
cmpl
jo
jmp
aam
jb
dec
mov
sahf
mov
mov
aad
cmc
jno
sub
xor
and
sub
push
clc
js
cmp
rol
js
scas
pop
addr16
pusha
ds
adc
inc
add
mov
xor
fidivs
push
mov
sbb
jg
std
repz
stc
push
inc
mov
fs
add
push
leave
add
mov
add
js
scas
hlt
add
mov
jns
into
dec
push
pop
cmpsl
sbb
jecxz
out
dec
jecxz
jns
fildll
ret
rolb
push
insb
adc
sbbl
push
xor
mov
hlt
jno
inc
cwtl
daa
or
loopne
push
and
addb
iret
sbb
mov
outsl
cmp
lock
cwtl
into
in
fnstcw
lcall
jle
jbe
push
cmp
jmp
aaa
add
adc
and
adcb
mov
push
scas
add
mulb
push
and
add
pop
inc
dec
fisttpll
sbb
push
pop
pop
sbb
outsl
adc
fldenv
cmp
in
rorb
add
fwait
mov
jmp
mov
divl
push
insb
cmc
sahf
xchg
mov
cmp
mov
cs
sub
mov
test
pop
in
cmc
jns
push
or
pop
fsubrs
add
push
cmc
stos
sub
ficomps
std
or
push
inc
mov
sub
xor
jmp
pop
stos
sub
in
or
incb
sbbb
push
pusha
mov
mov
mov
push
loopne
aaa
cmc
out
loop
outsl
aaa
nop
sbb
pop
rol
stos
aam
mov
dec
push
int3
popf
jns
shrl
lahf
aas
pop
in
adc
sub
lods
in
add
stc
adc
test
mov
mov
enter
int
scas
sbb
pop
push
dec
mov
mov
push
mov
cltd
rcrb
sub
jb
fdivl
or
lock
push
insl
insb
adc
in
push
pusha
in
loope
mov
add
addl
fidivl
adc
dec
jae
cmp
pop
jo
xchg
je
sbb
fists
call
mov
outsl
lock
sbb
shlb
dec
or
mov
outsb
addr16
push
mov
sub
xlat
and
pop
test
and
jmp
pop
imul
stc
jnp
inc
push
jg
sbb
dec
add
lds
aam
and
add
repz
loope
out
pop
mov
cmp
pop
pop
fs
aas
push
mov
je
leave
cmpl
jne
sbb
adc
jle
addr16
lahf
std
dec
imul
mov
inc
push
add
inc
mov
push
pop
jno
push
pop
pop
mov
insb
push
into
xor
push
sub
pop
and
aam
jae
add
cmpsb
lock
sub
das
or
or
push
ret
cltd
out
adc
add
mov
mov
add
outsb
cmc
inc
leave
stc
push
lret
lea
stos
pusha
add
push
movsl
test
loopne
dec
insb
mov
push
mov
pop
xor
mov
inc
lea
ret
dec
sbb
fisttps
pop
sbb
and
xchg
inc
fmuls
sbb
mov
test
inc
in
and
inc
push
mov
cmpl
pop
adc
enter
jnp
enter
or
ret
fs
nop
and
or
lock
test
aam
xor
subl
sub
sub
mov
ficoms
leave
xor
sub
inc
push
dec
pop
imul
xchg
gs
repnz
dec
loope
lods
sbb
ja
mov
arpl
push
jmp
sti
xlat
lods
ljmp
push
jae
mov
imul
inc
push
aaa
sahf
mov
inc
add
mov
stc
mov
std
xchg
dec
mov
cmpsl
stc
enter
je
inc
int
cmp
cmp
negb
loopne
and
cmp
jge
sub
xchg
mov
xchg
adc
lods
rcrb
inc
sar
jmp
sbbb
or
fwait
mov
mov
clc
scas
ds
cmp
push
ficoms
dec
cmp
or
shr
adc
jb
jg
dec
fmuls
fisttps
cmpl
dec
pusha
or
sub
jbe
roll
in
adc
or
mov
push
decl
pop
rorl
fisttpl
mov
test
pop
shl
sub
inc
add
stos
inc
loopne
iret
inc
sub
lret
mov
mov
cmpsb
insl
fiaddl
vpaddusw
jae
mov
mov
jno
cli
or
les
xchg
mov
add
mov
cmpsb
push
dec
les
mov
cld
or
jns
rol
dec
into
push
lods
push
cmp
jns
inc
pop
mov
xlat
or
addr16
js
jns
sub
jae
pop
inc
int3
bound
adc
rorb
in
cmp
mov
test
aas
stc
pop
adc
fldenv
mov
lods
pop
xchg
outsl
add
dec
mov
ret
fisttpll
cmp
inc
movsl
stos
pop
ret
pop
je
cs
push
adc
test
lret
outsb
ja
dec
lcall
pop
sub
mov
daa
xorb
dec
ljmp
adc
nop
movsb
push
jnp
cmp
inc
jmp
push
xorl
pop
sbb
push
inc
fsub
dec
sub
fidivrs
lods
daa
into
fnsave
and
pop
outsb
pop
jne
icebp
dec
jge
sub
and
imul
into
stos
push
ljmp
pop
sbb
out
lods
rcrl
push
pop
out
ljmp
or
in
data16
cmp
and
and
aad
dec
pushf
std
or
mov
int3
jne
fmuls
out
sub
sub
rorb
scas
sub
xor
inc
stc
jmp
loop
or
cmp
xor
cmp
sub
sbb
xor
pop
ficoml
jle
jns
std
pop
popa
lock
fnstenv
cmp
insb
int3
jnp
incb
mov
mov
mov
jl
mov
loop
lods
cmp
mov
jo
cmpsl
mov
aas
jnp
mov
out
push
es
mov
out
jmp
int
push
jecxz
and
loop
sub
mov
or
and
incb
mov
mov
add
cld
dec
jg
mov
sbb
cmp
adc
lcall
inc
and
push
lret
lock
cmp
push
mov
in
bound
inc
lea
fidivs
xchg
sbb
rorb
aaa
js
mov
or
insl
fisttpll
sub
sub
jge
adc
dec
xchg
lahf
jl
cltd
push
js
push
pop
lods
mov
loopne
pop
out
loopne
pusha
in
add
leave
je
popl
xor
push
push
cmpsl
mov
fwait
push
push
das
in
into
in
xor
cmp
mov
stos
nop
push
sub
dec
push
mov
out
mov
xchg
xchg
ds
cmp
rorl
data16
cmp
adc
xchg
test
inc
mov
pushf
xchg
jmp
clc
add
mov
addr16
mov
aam
pop
pop
cmp
pop
lods
ljmp
and
outsb
test
int3
pusha
ds
repz
popf
stos
or
les
and
test
push
rcr
into
xor
jne
repnz
and
jle
mov
cwtl
aas
cwtl
xor
add
jecxz
mov
fbld
jmp
inc
inc
inc
lea
call
inc
xchg
mov
imul
sbb
lods
push
sbb
cmpsl
sbb
pop
push
fists
lret
stc
ds
dec
in
xchg
push
sub
sub
mov
shll
stos
pop
popf
int3
xchg
and
mov
cmp
aam
push
fdivp
mov
jnp
cltd
adc
dec
mov
xor
xchg
cmp
lods
push
push
mov
jno
jb
inc
dec
lods
mov
jno
inc
sub
or
sbb
arpl
mov
jp
xor
push
push
pusha
xor
mov
lea
push
out
test
jp
mov
and
jo
in
jp
jmp
out
sbb
or
cmp
mov
fwait
xchg
xchg
leave
shl
mov
das
mov
ret
sbb
imul
fsubrs
pop
lods
sub
gs
jne
incl
add
lock
movsl
and
pop
data16
add
subl
mov
and
lret
adc
lret
js
arpl
test
pop
xor
dec
ret
or
jecxz
pop
jecxz
push
repnz
int
adc
xchg
lods
or
and
mov
push
sahf
mov
inc
inc
test
mov
lea
inc
sub
mov
jge
mov
cmp
inc
adc
mov
jl
fnsave
neg
hlt
jle
scas
insl
or
cwtl
push
scas
scas
std
outsl
iret
fsubs
dec
and
mov
pushf
lret
dec
pusha
mov
sbb
in
sub
mov
int3
jae
lret
and
sti
addb
dec
idivb
pop
iret
lock
mov
icebp
inc
jo
add
or
mov
xchg
test
dec
jle
jne
push
and
mov
sub
dec
lahf
fsub
sub
pop
cmp
in
mov
call
mov
scas
sub
mov
inc
stos
mov
cmp
inc
loop
add
inc
mov
dec
pop
gs
cmpl
sahf
jns
dec
pop
lea
popf
stos
fbstp
enter
push
ror
mov
lahf
fdivp
pop
int3
leave
in
mov
xor
dec
in
shlb
xchg
xchg
sbb
pop
subl
lds
cmp
outsl
jp
jp
aam
hlt
xchg
test
adc
fwait
lea
jl
pop
or
je
jno
lea
mov
xchg
pop
pop
scas
xor
xor
mov
push
jne
cmpsb
sub
jecxz
outsl
fucom
inc
ficoml
sbb
jmp
lods
dec
push
stc
cmp
xlat
test
adc
je
sahf
pushf
and
cmc
test
out
inc
adc
push
mov
loopne
xor
cli
filds
scas
inc
pop
pop
jmp
sub
test
lret
xor
into
cmp
cmpsb
push
fldl
xchg
xor
jmp
out
jno
pop
mov
in
or
adc
jecxz
inc
push
outsb
aaa
inc
push
cli
sbb
mov
mov
xchg
movaps
nop
scas
clc
push
loop
or
into
xor
js
pop
adc
mov
adc
dec
pop
fld
inc
mov
enter
dec
inc
nop
dec
push
mov
repz
fnstsw
std
ja
hlt
cmpsl
mov
xchg
add
push
inc
ja
mov
cmp
das
negl
pop
dec
ret
daa
cld
add
repnz
add
mov
stos
and
bound
add
lock
leave
lret
cmovg
neg
sbb
push
push
mov
repnz
fisubrs
jae
movsb
lea
int3
nop
push
into
mov
jmp
nop
xchg
push
push
push
jg
add
imulb
mov
pop
or
xor
idivl
mov
ret
aam
cmp
std
ljmp
fadds
fcoml
xor
sub
or
ss
mov
lret
adc
jge
fdivrl
cmp
cli
pushf
push
jp
fcoms
fcmovnb
adc
daa
pop
ds
nop
mov
mov
push
push
jae
sub
jnp
dec
lcall
ds
ss
xchg
ljmp
adc
sub
jne
arpl
out
add
rclb
fisubs
push
dec
ret
cmpsb
inc
push
out
xor
xor
sub
stos
scas
inc
nop
test
add
pop
push
inc
dec
aaa
jmp
mov
pop
and
out
ret
fcoms
push
jns
xchg
mull
add
sbb
sarb
sbb
call
in
jno
jle
push
in
in
xlat
xor
pusha
js
cmp
xchg
lods
mov
add
inc
mov
cwtl
ret
mov
cmp
test
xor
xchg
ss
fs
pop
mov
loop
jnp
imul
fs
push
in
xchg
sbb
sbb
inc
jb
sub
in
inc
dec
lods
repz
xchg
push
xchg
cmc
aas
xlat
cs
xor
leave
sti
addr16
or
cwtl
add
js
ja
incb
test
mov
dec
cmp
scas
add
dec
icebp
std
push
push
arpl
and
mov
sar
push
scas
mov
inc
daa
pop
xor
divb
mov
insb
adc
sarb
add
icebp
mov
les
jne
aam
outsb
dec
jne
insb
sbbb
adc
stos
adc
mov
inc
outsl
movsl
enter
imul
lret
jp
mov
fs
mov
jae
jbe
lods
lcall
mov
jle
lret
es
xchg
xor
inc
sub
imulb
xor
mov
insb
dec
mov
adc
aam
and
popa
jbe
sahf
lods
jp
xchg
shll
stos
aam
mov
pop
fistps
push
mov
hlt
test
xchg
mov
rcl
jg
out
xor
xchg
lods
push
repz
jne
jecxz
je
dec
inc
xchg
jge
dec
push
loopne
jo
dec
fwait
imul
popf
icebp
pop
gs
mov
mov
push
mov
out
outsb
push
jg
fucomip
cmp
fcmovnb
jl
adc
dec
mov
sub
ret
add
cmpsb
pop
push
push
out
xchg
repnz
fildl
pop
adc
cs
nop
or
test
sbb
mov
sub
xchg
mov
rcl
mov
test
inc
and
or
aam
xor
ljmp
mov
ja
pop
fnstsw
sbb
push
mov
cmpsl
das
mov
xchg
xchg
in
fnsave
lods
pop
sub
outsl
adc
push
inc
bndldx
cmpl
in
outsl
out
shll
movsb
ret
std
fisubrl
pop
or
pop
inc
movsb
lods
shlb
test
cmp
add
sbb
mov
clc
push
fisubs
inc
add
out
ficompl
sbbb
call
cmc
jmp
pop
pop
sub
jns
loop
movsb
jnp
mov
pop
cmc
popa
in
leave
mov
std
pop
ret
test
jbe
addr16
mov
bound
xor
lret
dec
push
ja
shld
cli
sarl
and
mov
mov
mov
scas
test
mov
or
add
into
int
out
cmp
inc
je
add
lods
inc
scas
jnp
pop
jbe
movsb
xor
movsl
jno
ficoml
aaa
mov
mov
jge
insl
loopne
adc
and
push
int
std
jo
pusha
sbb
mov
mov
jge
insl
loopne
adc
and
push
int
std
jo
pusha
sbb
mov
mov
jge
insl
loopne
adc
and
push
int3
inc
std
jo
pusha
sbb
mov
mov
std
lock
loopne
adc
pop
xor
mov
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
xor
pop
subb
pop
pop
shlb
jl
aas
and
xor
add
adc
arpl
push
mov
subl
loop
repnz
ret
aas
and
xor
arpl
adc
bound
push
mov
subb
loop
repnz
ret
aas
and
xor
add
sbb
lret
rorb
sub
or
xchg
imul
loope
mov
out
inc
test
mov
inc
adc
inc
aas
pop
idivl
and
std
loopne
and
mov
lahf
dec
lea
scas
stos
inc
daa
pop
mov
lea
js
dec
sub
and
aas
fmull
pop
mov
mov
push
fimuls
and
shrb
cld
hlt
lret
cli
add
push
pop
sahf
pop
rorb
sarl
cli
loopne
rcl
imul
adc
xor
fcmovb
scas
lods
out
pop
lret
or
or
les
sbb
in
mov
ja
lahf
call
jo
imul
mov
subb
loop
repnz
ret
aas
and
xor
add
adc
bound
push
stc
and
mov
sub
cmp
dec
mov
dec
mov
jbe
push
loop
out
sub
icebp
adc
xchg
xor
inc
stos
aas
jo
pop
mov
mov
add
adc
dec
rcl
pop
pushf
sub
sbb
pop
ret
aas
and
xor
add
adc
bound
push
mov
subb
loop
repnz
ret
aas
and
xor
add
adc
bound
push
mov
setge
scas
xchg
lret
jnp
add
inc
and
add
insb
push
cmpb
adc
xchg
sbb
ljmp
sub
pop
movsb
xchg
cmpsl
sub
inc
insl
xor
in
mov
dec
push
lret
mov
fsts
mov
cltd
fnstenv
ficomps
mov
adcl
mov
cli
mov
repz
pop
cmp
xchg
popa
notb
mov
test
lds
shrd
mov
cmp
ret
inc
xor
pushf
outsb
dec
push
lret
mov
add
and
sub
fistl
jno
inc
fldenv
insb
aad
and
test
push
pop
std
push
pop
and
ss
pop
nop
mov
movsl
mov
adc
sub
push
dec
loope
sbb
xchg
into
out
and
mov
rolb
mov
call
jmp
jno
loope
mov
flds
cld
scas
xchg
dec
sbb
in
repz
data16
add
mov
mov
aaa
pop
mov
dec
aam
push
jae
jae
dec
loopne
into
js
bound
mov
jl
xlat
stos
push
imul
jbe
add
fisttps
movsl
sbb
xabort
inc
aas
test
inc
or
cmp
dec
sahf
sbb
sub
enter
outsb
das
xor
pop
xchg
mov
jmp
pusha
sbb
dec
ss
cmp
dec
mov
mov
popa
test
add
sbb
popa
xor
mov
push
imul
popf
cmp
cs
mov
dec
test
sub
pop
or
sbb
xor
xchg
mov
mov
mov
insl
cmc
sub
shlb
mov
pusha
mov
mov
movsl
mov
cli
clc
fnstcw
loop
jbe
fs
popa
mov
setno
je
add
pop
xchg
pop
mov
lods
add
fs
inc
fildl
je
and
popa
fstps
lcall
cmp
cmp
or
sbb
xor
push
or
sbb
dec
daa
dec
xor
push
scas
jle
inc
lods
cmp
pusha
inc
mov
mov
xchg
pop
test
ljmp
xor
and
lods
pop
xor
and
jg
test
dec
rorb
cltd
out
push
dec
mov
push
xchg
or
and
jle
mov
jmp
xchg
clc
xchg
cmc
dec
movsl
cvtps2pd
popa
sub
fstps
icebp
add
dec
daa
adc
or
incb
push
aas
ja
mov
push
inc
mov
enter
mov
or
ret
add
and
or
scas
pop
pop
test
aas
and
push
gs
je
call
dec
sub
sub
adc
aam
repz
push
dec
cmp
jo
jo
and
fmull
adc
pop
jmp
nop
dec
xchg
mov
sub
pop
movsl
ficoms
xor
pop
aaa
xor
cmpsb
add
mov
cs
test
dec
xor
outsl
pop
sahf
fmuls
cmc
cli
push
hlt
sub
push
out
into
fildll
out
insb
pop
and
jno
repnz
lea
ret
sbb
or
out
iret
pop
pop
test
inc
xor
bound
or
fistps
push
mov
mov
hlt
lds
hlt
test
daa
xlat
sbbl
pop
add
ret
and
push
xchg
adc
jge
lock
add
iret
xor
jb
push
cmc
loopne
std
or
push
mov
xlat
mov
mov
jo
add
scas
mov
push
das
mov
ficoms
js
test
mov
cmp
iret
and
insl
sub
fwait
add
into
mov
fildll
adc
out
push
std
ficomps
pop
mov
or
roll
adc
pop
pop
mov
cmp
jno
fstps
mov
dec
and
cmpsb
mov
data16
ds
into
sub
scas
cmpsb
pop
add
ljmp
add
add
sti
jne
add
and
sti
mov
push
add
adc
jnp
negl
push
ret
sub
aam
pop
mov
cmp
out
mov
orl
sahf
push
sbb
rclb
stos
fisttps
push
xor
rclb
shlb
or
cmp
cmc
inc
mov
sbb
mov
lret
jecxz
shrb
dec
lock
pop
dec
stos
xchg
out
xor
adc
mov
mov
fisttps
push
dec
cmp
int
mov
sti
adc
mov
arpl
xchg
outsl
adc
nop
ja
or
push
aas
pop
xchg
aaa
hlt
mov
ffreep
push
cmp
pop
pop
dec
insl
push
fwait
pop
adc
jmp
loope
ss
inc
int
mov
mov
jmp
and
or
push
jno
ja
push
cmp
pop
dec
pop
xlat
ret
fmuls
pusha
rcrl
adc
mov
xchg
int
mov
adc
scas
cmp
pop
inc
dec
pop
pop
mov
loope
adc
jl
sbb
lods
je
pop
dec
dec
xchg
int3
pop
fildl
test
sub
jl
and
fnstcw
shll
xchg
fs
imul
int3
push
push
shll
push
mov
fstpl
cltd
sahf
mov
loopne
xchg
mov
mov
sub
or
popf
cmp
inc
and
push
cmpsb
icebp
orb
nop
cs
repz
in
test
sub
insl
leave
mov
inc
mov
inc
sbb
xorl
pop
mov
lcall
jae
cs
fisubrl
push
add
movsb
jbe
and
pop
popa
jecxz
cmpsl
add
pop
or
les
into
and
dec
push
mov
or
adc
jmp
add
xchg
xchg
and
idivl
dec
jbe
ja
mov
loop
pop
pop
jb
iret
mov
or
push
xor
xlat
roll
rclb
testl
add
test
cmpsl
aas
sub
xchg
xchg
pop
scas
and
dec
mov
daa
loop
pushw
addr16
clc
mov
fnstsw
cmpsl
imul
sbb
cld
mov
ret
pop
xchg
add
add
lret
mov
fsubp
add
cmp
cwtl
cmp
sbb
xor
pop
bound
scas
dec
sub
mov
add
insb
imulb
sbb
inc
pop
add
cmp
sub
in
and
fcompl
stc
arpl
ret
dec
jmp
add
je
and
mov
out
fwait
dec
push
mov
jne
lea
mov
aas
out
lcall
lods
push
addr16
into
xor
and
icebp
push
push
adc
movsl
xorb
mov
hlt
fldt
mov
pop
jmp
loopne
cld
popf
mov
mov
cmpsb
adc
rolb
mov
add
loop
mov
inc
cmpsb
ja
shrb
je
sbb
mov
lds
loop
push
mov
and
lds
cwtl
bound
inc
sbb
sub
pop
loope
xor
push
shrb
inc
cs
imul
cmc
cltd
loopne
sub
and
mov
xchg
and
in
sub
ret
mov
into
pop
movsl
test
dec
imul
pop
out
push
das
ret
mov
ds
cmp
adc
dec
dec
xor
add
cmp
push
inc
je
imul
cmc
orb
aas
rcrl
inc
mov
out
xlat
jb
push
cmp
sbb
xchg
ss
jb
aas
ds
sub
int3
jns
pushl
lret
mov
adc
fs
dec
and
ret
inc
mov
pop
out
roll
int3
fs
sub
pop
dec
mov
inc
into
cmc
notb
cmp
out
dec
cwtl
inc
lods
movsb
sbbl
movsl
cltd
stc
imul
hlt
lcall
mov
inc
arpl
ret
jle
add
sbb
lods
sub
clc
mov
outsl
mov
insb
movsb
sbb
fdivl
and
jae
mov
inc
das
push
cmp
inc
xor
jne
das
in
leave
inc
inc
mov
aaa
mov
xor
in
mov
aam
mov
jbe
pop
fildll
cmp
mov
hlt
sub
inc
mov
aaa
ljmp
inc
inc
inc
dec
pop
sub
ret
fwait
popf
and
sub
inc
sbb
mov
shlb
lea
cmc
fwait
xchg
cmp
adc
xchg
inc
dec
out
cmp
outsb
inc
in
inc
jno
arpl
cmp
mov
notb
xchg
repnz
cmp
jne
cmp
gs
addr16
outsl
roll
jne
jae
rorb
jne
cmpsb
jecxz
test
push
mov
sti
fcompl
scas
negb
pop
call
pop
jp
lods
cmp
insl
push
xor
mov
mov
sahf
cmp
stc
mov
sbb
sbbl
rorb
testb
sbb
lea
repz
addr16
sahf
lcall
sbb
daa
jl
pusha
lea
loopne
mov
bound
pushf
ffreep
dec
icebp
lret
and
pop
pop
cld
es
mov
mov
pushf
push
and
cmpsl
push
push
pop
fwait
mov
sarl
and
and
jnp
add
ljmp
outsb
pop
pushf
jbe
pop
inc
cmc
icebp
xchg
aam
push
adc
nop
ds
push
add
adc
and
xchg
add
inc
dec
jns
aas
mov
ftst
ret
das
pushf
sbb
lock
xchg
mov
dec
mov
mov
fisubl
popf
push
mov
cmp
ret
dec
inc
dec
scas
imul
adc
mov
or
mov
adc
lods
ss
insb
call
add
xor
sbbb
inc
lret
xchg
scas
loope
mov
add
and
iret
add
jne
je
fimuls
pop
sbbb
iret
out
push
xchg
jns
fwait
divl
dec
adc
sti
stc
cmp
or
out
daa
ss
jnp
fidivs
call
ljmp
pusha
dec
lods
mov
dec
movsb
push
arpl
cmp
aaa
pop
mov
lods
sub
loop
comiss
cmp
cmpsb
lahf
dec
push
or
xorb
ret
cld
aas
cli
loope
in
loope
lds
jp
xor
jmp
inc
ljmp
sahf
mov
imul
add
fisttpl
add
inc
pusha
xor
hlt
rclb
cwtl
sub
mov
inc
push
aam
dec
gs
ljmp
pop
jp
aad
push
xor
out
mov
jne
push
ret
mov
fmull
out
lret
cmp
jg
or
ret
or
inc
out
dec
jbe
and
js
push
xchg
mov
enter
mov
mov
ss
xor
cmpsb
push
mov
pop
mov
into
and
add
jp
call
inc
sub
mov
idiv
xchg
icebp
movsl
sbb
jmp
scas
daa
or
sub
dec
push
sub
int
rcrb
outsb
jmp
xchg
dec
push
ss
insl
add
stc
mov
in
int
mov
loop
mov
xchg
stos
adc
sahf
scas
jg
cmc
mov
std
xchg
and
mov
inc
jg
jae
push
cmpsb
jns
add
xchg
loop
sbb
dec
stc
movsb
imul
sub
jecxz
mov
xor
divb
stos
loopne
in
movsl
cwtl
mov
cmp
push
xchg
push
ret
pusha
push
dec
rorl
movsl
xor
xchg
adc
bnd
in
cwtl
sahf
mov
mov
or
lret
inc
xor
pmuludq
jl
aas
pop
outsb
dec
add
inc
test
stos
inc
sbb
sub
mov
fsubl
push
push
enter
cli
or
popf
fcomps
push
xorb
js
mov
cwtl
andb
lret
pop
inc
insb
adc
arpl
mov
dec
xchg
add
lea
fbld
xchg
out
stos
mov
inc
dec
inc
sub
int3
pop
mov
scas
jge
push
jle
stos
inc
pop
orl
mov
in
push
ja
mov
ror
arpl
bound
aas
mov
add
or
ds
arpl
inc
xor
ficoml
mov
cmpb
negb
add
push
jbe
sub
popf
aam
sub
pushf
push
mov
incl
lcall
pop
dec
fcompl
xchg
mov
data16
inc
fwait
movsb
or
data16
arpl
adc
gs
pusha
mov
loopne
cmpsl
add
in
or
sub
pop
cmpsl
mov
inc
dec
dec
mov
jp
pop
cmp
arpl
in
push
aas
mov
repz
pminub
dec
inc
icebp
aaa
xchg
imull
test
in
xor
stc
loop
jge
push
add
cmpsb
loope
add
fmull
test
push
call
add
ss
out
jno
popa
insl
pushf
loopne
xchg
dec
js
out
cmpsl
shlb
in
cmp
daa
insb
xchg
cmp
mov
pop
add
mov
inc
jge
xor
push
nop
jp
push
jge
xor
mov
mov
mov
inc
add
pop
ds
cmp
hlt
cmc
pandn
cmp
pop
add
jnp
xchg
push
cs
movsb
popa
mov
push
fsubrs
jo
out
in
mov
push
jne
int
add
mov
aas
mov
nop
sub
or
xchg
sbb
cmp
xchg
add
call
mov
jecxz
imul
add
adc
data16
adcl
sub
add
mov
or
sub
xchg
lock
lret
inc
push
mov
sub
pop
shlb
call
cwtl
in
adc
xchg
dec
imul
clc
sbb
cs
dec
xor
test
leave
and
add
dec
inc
pop
aam
lods
mov
push
jo
mov
mov
in
fcmovu
mov
mov
lock
aaa
jne
add
dec
ljmp
paddb
xchg
add
push
repz
idiv
dec
xchg
out
mov
pop
js
cmp
pop
sub
fstpl
movsl
test
sub
add
cmpsb
push
test
mov
inc
push
adc
test
ja
cmp
lods
enter
testl
sub
loope
push
and
cmp
je
and
sub
sbbl
add
pop
fnstcw
sarl
cli
xchg
inc
iret
mov
stos
add
jmp
pop
xchg
cwtl
mov
push
pop
icebp
add
fistpl
pop
push
lods
mov
out
xchg
pop
dec
xor
jmp
test
lods
xchg
xchg
xor
fsubs
pop
daa
lret
inc
push
push
jno
mov
add
sahf
out
and
call
das
mov
cmp
repz
push
orb
loope
mov
mov
rcl
out
dec
aad
cmp
scas
pop
mov
ret
aaa
sbb
jbe
popf
pusha
jg
ds
iret
sub
sbb
imul
mov
shr
mov
adcl
je
int3
xor
jle
loope
xchg
aam
xor
mov
xor
cmpb
fucomp
mov
leave
mov
mov
out
dec
negb
mov
mov
cmpsb
or
sub
cs
sbb
int3
pop
out
mov
out
jp
fwait
add
fs
xor
and
and
pusha
xchg
or
dec
dec
adc
lds
cmpsb
or
sbb
cmpsl
mov
add
push
arpl
call
stos
inc
adc
inc
je
movsl
aam
fstl
std
out
aaa
mov
pop
lods
ret
sbbb
adc
and
fbstp
jp
jp
movsb
nop
mov
mov
dec
jp
mov
sbbl
daa
or
call
das
in
shll
push
adc
sub
add
xor
or
dec
mov
xchg
in
mov
push
cld
and
test
dec
ss
pmuludq
mov
pop
lods
pop
call
adc
add
sti
out
ljmp
jmp
adcl
mov
push
gs
xchg
inc
faddl
jb
out
lock
mov
jp
shlb
mov
cmp
sbb
push
repz
leave
add
xchg
mov
ror
add
daa
dec
cmpsl
jns
mov
std
pop
ja
lds
xchg
andl
ret
push
cmp
sub
andl
je
jo
xchg
inc
lods
lret
aad
rol
insl
adc
rorb
sub
xor
pop
add
push
ret
dec
call
push
mov
inc
shll
mov
std
stc
jge
sub
or
out
lds
push
mov
push
sub
cwtl
jg
adc
jo
jge
outsl
ret
push
or
mov
inc
enter
rorl
jg
adc
xchg
push
lods
aad
gs
xlat
inc
scas
adc
clc
loopne
dec
sti
mov
jg
jo
stos
jecxz
sarl
sub
add
jmp
enter
xchg
pop
popf
inc
movsb
fbld
pop
or
cs
or
shrb
jmp
mov
outsb
movsb
sahf
cmp
popf
movsl
lds
test
inc
dec
adc
xor
sub
xor
jne
dec
das
push
ds
sub
dec
xchg
sbb
push
dec
or
out
out
push
test
or
add
jmp
repnz
mov
pop
pop
pop
iret
pop
out
fdivl
stos
ljmp
rclb
repz
lds
add
aam
add
add
push
lds
inc
cwtl
push
jae
cmpsb
sbb
jg
je
inc
inc
js
lods
sahf
pop
mov
mov
sbb
out
sub
int
sarb
sub
ret
in
std
sbb
loop
pop
jle
adc
addb
xor
pop
inc
icebp
aam
sbb
cmp
daa
in
or
cwtl
out
pop
ljmp
jae
out
inc
ss
inc
jae
loopne
xchg
push
mov
jp
cmp
mov
aas
pop
clc
cmpsb
cltd
sbb
jne
sub
shrb
pop
in
cmc
out
jne
adc
push
push
or
test
pop
loope
dec
push
lcall
fstpt
das
adc
lret
or
outsb
sub
jbe
adc
pop
scas
sbb
add
add
addr16
push
jp
ljmp
pop
xor
push
test
sbb
sub
xchg
push
dec
int3
mov
fmul
das
add
or
and
mov
out
movsb
mov
mov
jae
movsl
test
imul
or
mov
hlt
pop
cmp
or
mov
xchg
lahf
addl
sahf
cmp
or
dec
lods
dec
out
hlt
cmp
les
inc
xor
shrl
andl
mov
add
mov
pop
clc
notl
outsb
or
lea
fwait
mov
cltd
and
mov
insb
aas
push
int
dec
push
xor
adc
sahf
sbb
mov
or
rorb
xchg
xor
jno
and
sbb
add
lret
sbb
aas
cmpsl
bnd
xchg
jl
mov
pop
dec
and
fwait
in
lods
fs
xchg
xchg
xor
mov
jb
popa
jnp
jno
idivb
cld
xor
mov
mov
xchg
mov
cwtl
push
popf
cli
jb
sbb
repnz
adc
or
iret
pop
mov
cmp
outsb
notb
xabort
cltd
sub
popa
test
sub
xchg
and
data16
mov
int3
push
out
fs
scas
inc
dec
rolb
adc
call
aad
push
enter
fdivp
mov
and
jbe
lahf
mov
loop
cmc
mov
mov
inc
dec
in
pop
xor
cmp
or
dec
push
jmp
sbbb
mov
mov
jne
sub
testl
loop
repnz
dec
jb
sbb
loopne
xchg
or
nop
std
inc
xor
mov
add
push
lahf
out
sub
stos
fs
mov
pop
jae
mov
xchg
cmc
pop
mov
xor
pop
outsb
insb
cs
int
shl
into
call
outsb
movsl
pop
out
jbe
add
pop
jno
pushf
outsl
and
sbb
movsb
out
test
mov
lea
add
or
xchg
pop
jmp
les
outsl
adc
adc
mov
lahf
and
mov
gs
scas
push
lea
aad
xchg
je
outsl
push
cmp
add
out
adc
cmp
roll
sbb
push
sub
data16
leave
rcrl
stos
popa
mov
push
xchg
dec
insb
pushf
xor
add
inc
sar
jmp
fidivrs
or
jmp
subb
loop
repnz
ret
aas
and
xor
add
adc
bound
push
mov
subb
loop
repnz
ret
aas
and
xor
add
adc
bound
push
mov
subb
loop
repnz
ret
aas
and
xor
add
adc
bound
push
mov
subl
loop
repnz
ret
shlb
xor
out
adc
mov
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
lret
adc
inc
jmp
sti
and
jne
and
dec
push
pop
imul
sub
cmp
lret
adc
add
xor
and
push
fwait
inc
stos
je
dec
dec
xchg
pop
test
jnp
or
sbb
sub
cmp
lret
mov
ret
sti
push
mov
stos
jle
push
dec
xchg
js
sbb
push
or
push
cmpb
xchg
inc
test
mov
sbbl
jnp
idivb
or
enter
scas
daa
pop
and
adc
push
fisttpl
mov
imull
js
dec
test
pop
rcrl
jge
push
xor
mov
subl
mov
cmc
xchg
dec
xchg
jnp
pop
or
nop
cmp
adc
add
xor
and
inc
fs
mov
jmp
mov
movsl
pop
rcrl
rorl
mov
cwtl
ret
outsb
leave
push
inc
push
mov
cwtl
dec
mov
shl
push
lock
pop
mov
cmp
jmp
sti
roll
hlt
mov
add
gs
push
aam
bound
into
out
mov
cmp
jmp
sti
and
push
fwait
inc
stos
je
testb
sub
mov
cwtl
or
sbb
sub
cmp
scas
adc
imul
hlt
sub
add
and
xlat
ds
sbb
ds
lea
dec
lea
inc
mov
push
out
sbb
cmp
push
out
xchg
cld
fwait
jle
inc
xchg
push
xchg
lods
addr16
lods
pop
sahf
dec
into
sbb
fs
xchg
pop
test
jnp
or
sbb
sub
cmp
lret
adc
add
xor
and
push
fwait
inc
stos
je
fs
xchg
pop
test
jnp
or
sbb
sub
cmp
lret
adc
push
jbe
test
pop
xor
adc
dec
js
out
bndldx
into
mov
popa
mov
pop
das
sbb
push
adc
xchg
out
mov
mov
xchg
sahf
das
sti
cmpb
dec
pop
jg
fwait
lret
inc
pop
popf
jl
sbb
lret
outsl
lret
mov
sarb
popl
fimuls
dec
adc
rcrl
rcr
xchg
insb
xor
shll
enter
inc
ret
rolb
outsb
adc
sbb
jmp
pop
enter
mov
jmp
inc
movsl
into
insb
pushf
mov
push
xor
inc
je
fnstsw
jne
push
xchg
fwait
iret
inc
xchg
addr16
stc
pop
jmp
pusha
ret
fs
fs
mov
xor
in
and
inc
lds
mov
clc
fldenv
jae
xor
mov
and
divl
imul
jnp
mov
pop
stos
add
dec
jle
xor
cmpsl
aaa
out
add
pop
jnp
clc
xchg
jne
ja
cmp
mov
xchg
mov
das
adc
mov
cmpsl
fcmovnbe
dec
or
popa
inc
xor
add
stos
js
imul
test
and
sub
mov
xchg
aas
jo
xor
mov
scas
mov
out
sti
inc
mov
xor
xlat
mov
xchg
insb
fwait
jns
out
add
cmpsl
mov
dec
cmp
adc
and
sarl
sbb
es
sub
scas
iret
mov
xchg
xlat
roll
shrl
ds
sbb
aad
lcall
sbb
cmp
mov
neg
enter
mov
je
cli
in
jle
mov
ret
into
movsb
xor
sub
inc
aad
fcomps
gs
aad
add
sub
push
fidivl
or
xor
sbb
xor
push
pop
adc
ja
lods
mov
jle
icebp
xor
jp
lret
js
mov
scas
push
inc
lods
loope
fcmovnbe
sbb
push
lock
in
jl
lds
xchg
mov
fistps
and
cmp
cmc
mov
and
dec
adc
das
mov
in
sub
shll
jecxz
jo
cmp
pop
addr16
pop
mov
lods
pop
cmpb
jne
mov
ljmp
bound
ljmp
out
push
or
bound
mov
or
in
cmp
andps
mov
mov
xor
fwait
inc
test
push
cmp
test
sbb
xor
lods
pop
dec
dec
xchg
mov
clc
aas
cmc
jne
add
imul
je
xor
mov
pop
iret
shll
out
inc
sbb
mov
cmp
vmovddup
loopne
dec
andl
mov
inc
shll
pop
hlt
outsl
hlt
ficomps
push
cmp
hlt
into
ja
mov
bound
call
es
xchg
xor
xor
mov
push
and
cltd
in
mov
mov
mov
xchg
test
mov
pop
mov
sti
or
sub
push
or
mov
mov
add
sti
out
xchg
adc
xor
jno
stc
add
sub
and
or
les
loope
test
scas
jle
insb
mov
sbb
add
dec
mov
in
dec
and
dec
pushf
mov
int3
or
jb
jmp
lock
stc
push
repnz
hlt
lcall
xchg
ret
movsl
or
movsl
idivb
mov
sbb
sub
mov
pop
dec
sub
icebp
stos
and
mov
xor
in
mov
adc
pop
pop
mov
fiaddl
or
test
in
les
push
mov
jecxz
inc
and
fwait
adc
mov
movsb
pop
pushf
iret
sahf
jl
iret
aaa
pop
sub
push
inc
sbb
insb
rorl
sbbb
pop
fs
sbb
cmc
lahf
cmp
jge
enter
pusha
test
nop
cltd
adc
test
pop
sub
data16
and
cmp
pop
lock
inc
fst
xor
push
sbb
add
stc
add
cmp
mov
jmp
roll
and
adc
test
sbbl
inc
push
lods
ficompl
inc
in
pop
rcrb
mov
ljmp
dec
sbb
cmp
fwait
popa
das
push
push
cmp
into
icebp
pop
jl
stos
aas
insb
mov
sub
push
xchg
mul
xor
lds
push
jne
jae
mov
push
jle
addb
sub
add
rol
dec
pop
cmpsb
jne
jecxz
iret
dec
mov
add
ljmp
pop
cmp
push
shrl
mov
in
xlat
jg
mov
cmp
je
sbb
sbb
xchg
push
pop
stc
subl
imul
or
sbbl
jae
mov
xor
xor
js
xor
xchg
xor
mov
out
rorl
push
std
mov
rclb
movsl
enter
add
mov
xor
mov
test
cltd
jp
ds
addb
sub
ds
rcrl
mov
clc
sbbl
mov
mov
sub
add
adc
sbb
xchg
jl
mov
mov
sub
adc
push
adc
add
pop
pop
imul
xchg
dec
or
daa
das
addl
jmp
gs
adc
scas
je
shll
xchg
out
movsl
movsl
pop
movsb
outsl
push
or
es
xorb
push
out
or
es
add
pop
sbb
xchg
addb
mov
inc
in
adc
outsb
mov
pop
lret
cmovae
push
cmp
lahf
xlat
xchg
push
dec
sbb
cmp
out
inc
push
push
notb
frstor
mov
arpl
ss
mov
sub
pop
fnstenv
cmpsb
ret
dec
fisubs
inc
hlt
test
jo
jle
popf
scas
jmp
adc
int
orl
ret
inc
fimuls
movsl
add
je
xchg
stos
lea
dec
dec
xchg
xchg
mov
popa
and
xchg
mov
xor
nop
mov
jae
inc
push
lret
out
in
pop
mov
mov
loope
sbb
and
push
push
mov
data16
outsb
pushf
out
fmull
jl
adc
inc
out
rcrb
sub
lods
ret
scas
ret
int
mov
ficompl
loop
stos
rcr
scas
ret
push
mov
sbb
xor
push
call
outsl
pop
cmp
pop
cmp
push
jno
jp
adc
push
and
leave
add
adc
pop
xlat
insl
roll
fwait
cli
pop
and
xchg
lret
sbbl
pop
jge
lods
lds
lret
call
jecxz
das
mov
mov
jnp
movl
test
sub
push
es
inc
pop
lds
ja
push
fdiv
outsl
scas
lea
mov
lcall
push
push
add
or
jne
mov
xchg
aas
into
xor
mov
imul
xor
iret
das
repz
gs
out
inc
std
and
mov
nop
js
fnsave
rorb
xchg
lcall
icebp
aam
cld
jl
int
cmc
jge
jecxz
xchg
push
pop
lods
sub
xchg
loope
add
adc
or
fbstp
mov
sarl
jl
xor
push
xchg
lea
mov
mov
call
repz
imul
or
xor
mov
stos
repz
mull
nop
adc
lock
or
xchg
fdivl
dec
fiaddl
cmp
sbb
outsb
scas
aas
imul
ja
jl
stos
dec
mov
hlt
fstpt
pop
push
push
cld
mov
andb
call
daa
xor
pop
repz
cmp
outsl
test
add
imul
mov
movaps
xor
addr16
aad
sub
in
xchg
ja
inc
sub
and
in
push
add
mov
mov
mov
mov
xchg
fildl
dec
push
inc
jl
mov
push
sti
cmp
clts
mov
dec
dec
fcompl
xor
in
or
xor
cmp
mov
cmpsl
shr
test
into
add
cwtl
dec
icebp
push
repnz
adcl
ret
sbb
jae
xchg
notl
out
loop
leave
jg
or
dec
testb
arpl
les
enter
inc
add
je
and
fbstp
sub
adcl
scas
ret
adc
ret
sub
sub
shlb
out
sbb
jno
and
xor
jge
pop
sbb
es
adc
xor
and
out
xor
mov
orl
scas
dec
mov
xchg
pop
sti
jle
jns
sub
sub
sahf
mov
mov
cmpsb
addl
jge
cwtl
push
out
xchg
subb
out
or
stos
ljmp
xchg
xchg
sahf
pop
test
out
es
lods
mov
inc
inc
pop
mov
add
mov
outsb
repnz
cmc
fmuls
arpl
xchg
fstpl
cmp
inc
out
scas
sub
or
and
mov
insl
mov
xchg
push
jmp
pop
mov
push
xchg
sbb
in
loop
sbb
mov
sbb
mov
es
inc
insl
sbb
out
push
or
cmp
sbb
test
lods
lock
int
cmp
mov
xchg
pop
subb
aam
and
mov
ret
pop
scas
mov
and
ret
mov
or
dec
dec
dec
fldt
sub
jmp
fwait
and
xor
push
pop
xchg
mov
nop
in
jmp
jp
lds
ret
ss
adc
outsl
je
loop
gs
inc
mov
fnstsw
mov
mov
push
je
nop
xor
enter
inc
inc
inc
ljmp
sub
repnz
add
bound
jge
incl
push
cwtl
xchg
stc
push
fiadds
pop
dec
cmp
popf
xor
mov
dec
pop
movsb
jl
daa
lods
mov
sbbb
pop
addr16
mov
aad
arpl
mov
push
jo
xor
cmp
icebp
mul
sub
dec
pop
cmc
fcoms
data16
hlt
pop
push
stos
cmpsb
jo
add
test
mov
int
inc
pop
cmp
pop
xchg
mov
loopne
pop
lret
jg
xchg
xchg
popf
inc
cli
ja
stos
and
aam
jo
cmpsl
cmc
out
push
shll
pop
adc
xchg
mov
xchg
cmp
gs
lret
pop
shlb
cmp
mov
mov
sbb
sub
lds
ljmp
lods
pop
push
push
dec
mov
ret
jmp
data16
adc
imulb
lds
xchg
ss
add
daa
ret
lock
in
push
cmp
adc
mov
mov
in
mov
mov
mov
fidivrs
in
xor
mov
ljmp
jge
hlt
dec
push
ds
sbb
push
push
fists
adc
lods
and
sub
dec
ljmp
adc
mov
push
add
dec
mov
fdivl
mov
test
in
adc
cmc
mov
sub
mov
les
xchg
outsl
mov
sub
ficompl
xor
xor
pop
ljmp
lock
loop
add
or
sahf
sbb
orl
adc
mov
sub
and
fisubl
pop
xchg
cmp
loope
cmp
outsb
pop
pop
mov
pop
ja
jb
stos
dec
rolb
push
and
mov
lock
pusha
jnp
lret
jle
lret
lods
lret
shlb
ja
repnz
sti
mov
clc
jge
ljmp
push
or
xor
cmp
add
data16
dec
push
pop
fwait
fwait
mov
sub
mov
cmp
push
xchg
pop
dec
dec
fs
fldenv
or
out
sahf
movsb
mov
sub
push
and
sbb
mov
xor
xchg
mov
mov
or
cmp
in
pop
mov
pusha
out
mov
or
mov
sahf
je
xor
stos
lds
cmp
in
cmp
jge
lea
mov
mov
pop
inc
or
enter
sbb
or
cmc
stos
stos
sahf
je
mov
xor
mov
int3
cld
loopne
cmp
mov
scas
sbbl
push
out
in
sub
push
sbb
jns,pn
jl
mov
out
lods
icebp
mov
cmpsb
xchg
outsl
push
rol
bound
movl
xrelease
adc
xchg
xor
pop
out
sub
into
pop
push
es
lea
cmp
sbb
insl
out
fisttpll
mov
dec
xchg
cltd
and
pop
aas
push
repnz
mov
mov
or
fwait
scas
xchg
icebp
stos
mov
push
popf
pop
mov
or
scas
imul
decl
pop
je
fstpt
xchg
or
inc
dec
cmp
popa
movsb
cmp
sarl
inc
mov
cmp
push
pushf
mov
adc
pop
mov
jnp
push
dec
das
and
roll
mov
data16
adc
sahf
dec
pop
es
adc
inc
iret
pop
xchg
inc
dec
sbb
mov
in
loopne
xchg
inc
mov
fistl
inc
mov
fsubr
int3
inc
jmp
stos
push
ret
pop
cmp
rcll
in
and
xor
or
adcl
inc
sbb
lock
into
cmpsl
cs
inc
mov
mov
sbb
fisubl
push
dec
data16
out
inc
inc
mov
push
dec
mov
push
mov
cs
xchg
fadd
std
adc
jmp
cltd
xchg
and
fistpll
mov
jp
fldcw
fcoml
sbb
xchg
fstpl
mov
mov
imul
xorl
movsl
fldcw
int
int
or
pop
dec
or
add
or
inc
dec
mov
add
cmp
dec
fisubl
jo
rcrb
add
movsb
aam
fdiv
out
xor
or
inc
push
insb
xor
int3
inc
lahf
push
mov
xchg
xchg
sub
ljmp
xchg
aam
orb
fdivs
add
fildll
or
or
stos
or
adc
shl
ret
push
mov
jns
cmp
push
imul
xchg
jno
jae
in
fs
in
pusha
cmp
outsb
or
insl
mov
adc
xchg
sbb
addr16
mov
in
scas
inc
add
inc
pop
les
or
pop
inc
add
nop
scas
test
add
cmp
aad
pop
mov
stc
rorl
into
mov
cld
pusha
mov
mov
adc
pop
sub
scas
popf
pop
icebp
add
push
int3
jecxz
ss
push
mov
test
mov
arpl
mov
hlt
imul
mov
aam
lahf
adc
in
dec
nop
popf
sbb
jmp
xchg
push
outsl
clc
jno
add
std
and
dec
rcll
mov
inc
push
pop
push
xchg
adc
in
lods
mov
adc
mov
dec
and
jmp
lock
repnz
and
addr16
fcoms
and
iret
inc
mov
fs
add
mov
and
rol
add
dec
sbb
adc
jno
inc
xor
push
pop
sahf
sub
rorb
div
out
sub
cmp
adc
cmp
mov
fisttpl
daa
dec
mov
push
cmp
cs
lea
sub
popa
or
mov
push
and
push
sub
cltd
cwtl
ret
xchg
sbb
xchg
xchg
cmpb
adc
or
push
andl
xor
aas
and
jmp
and
fs
and
loope
sub
fsubl
mov
nop
sbb
cmpl
andl
sub
mov
inc
cmp
shll
jmp
inc
pop
cmpsl
sbb
ror
lcall
push
or
pop
decl
mov
aad
mov
sub
mov
addr16
insl
lret
in
gs
in
push
sbb
fnstcw
adc
inc
imul
xchg
sub
push
adc
and
cmp
insb
and
outsb
or
int
jge
dec
mov
xchg
out
dec
jne
sbb
test
fcompl
aaa
lock
andb
pop
iret
inc
xor
push
jecxz
in
xchg
xchg
or
xchg
out
xchg
outsb
push
fcoml
mov
sub
lret
into
push
movsl
mov
iret
lret
icebp
out
xchg
jo
sahf
jnp
std
sbb
shll
push
fs
and
leave
jno
mov
lahf
std
sbb
lods
jne
inc
sahf
out
inc
fdivr
cmp
mov
mov
add
in
int
push
les
jmp
scas
or
lods
cmp
mov
fildll
popa
loope
mov
jnp
mov
dec
aas
insl
aaa
fwait
fwait
mov
lods
xor
sub
push
cli
in
adc
lahf
sub
dec
pop
stos
int3
rcrl
mov
dec
leave
push
dec
cmpsl
sbb
ret
pop
int3
push
mov
add
aad
push
mov
mov
dec
inc
mov
add
mov
and
fwait
imul
xchg
cmp
push
mov
stos
jno
pushf
jo
call
jl
cmpl
aam
pushf
sub
jle
mov
dec
mov
movsb
lret
adc
lret
cmpsl
fcomip
loope
mov
faddl
dec
popl
roll
icebp
in
test
adc
or
sub
jl
jo
das
jb
inc
sub
hlt
push
popf
mov
test
mov
mov
dec
sub
xchg
in
imulb
cmp
mov
xchg
sub
adc
je
and
xor
push
mov
pusha
and
xchg
mov
insb
sti
mov
inc
lcall
cmc
pop
push
pop
inc
call
in
rorb
jle
adc
insb
jae
add
jge
sub
jbe
adc
aad
sub
sar
lret
push
sub
cmp
into
lcall
push
sub
or
mov
outsb
int
mov
lock
ret
and
call
mov
pop
xchg
icebp
or
jp
mov
xchg
imul
lods
jb
fidivrl
cs
add
addr16
das
mov
add
insb
ja
push
movsl
pop
dec
mov
popf
ja
mov
jle
aas
dec
pusha
fwait
mov
cmpsl
mov
mov
sub
aaa
jne
idivl
push
xor
inc
pop
inc
xchg
jno
jae
icebp
test
imul
pop
mov
cmpsb
jnp
or
cmpsb
scas
and
xchg
lods
ds
cmp
out
push
push
mov
mov
test
mov
aas
pop
mov
insb
mov
call
mov
cmp
and
je,pt
je
fisubs
inc
add
ds
lods
sbb
mov
or
call
nop
jae
lcall
in
leave
push
in
xor
xchg
cmp
xadd
aas
push
push
sbb
and
xchg
mov
and
inc
cmp
pop
cld
pop
decb
daa
xor
pop
adc
or
faddl
mov
sbb
or
out
adc
sbbl
xchg
int
fstpl
mov
inc
test
mov
pop
dec
imul
and
xchg
jmp
frstor
aad
aaa
sbb
add
lods
sbb
xchg
js
dec
cmpb
sub
xor
inc
push
jl
in
adc
adc
lods
or
int
cltd
in
xor
jno
mov
stos
adc
jnp
pop
in
icebp
idivl
andl
fstl
mov
loopne
call
test
movsb
lret
lods
sahf
aaa
push
xchg
stos
outsl
inc
notl
in
addr16
das
mov
pop
jns
stos
sbb
cmpsb
lea
cmp
ret
mov
cmp
push
push
cld
pop
les
push
lods
ficomps
and
mov
push
xchg
xlat
mov
jg
jae
dec
push
mov
mov
and
int3
cmp
pop
xor
add
sub
push
pushf
sbb
mov
inc
or
cmp
mov
enter
xchg
dec
sub
add
xor
and
push
fwait
inc
stos
je
fs
xchg
pop
test
jnp
or
sbb
sub
cmp
lret
adc
add
xor
and
push
fwait
inc
stos
je
fs
xchg
pop
test
jnp
or
sbb
sub
cmp
lret
adc
or
sub
and
jo
fs
xchg
pop
subb
lods
or
sbb
sub
cmp
lret
lock
jmp
sti
mov
sub
cmp
mov
sarl
mov
push
mov
mov
dec
dec
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
push
mov
call
xor
pop
ret
fimull
movsb
cli
xchg
ljmp
fwait
mov
sub
imul
je
cmp
fidivl
test
aam
les
dec
and
xor
add
pop
or
lods
lret
mov
popf
lcall
ficomps
imul
sbb
inc
inc
test
rcpps
add
cmp
stos
push
pop
lahf
dec
pop
imul
in
sbb
js
jg
sbb
dec
cmpsl
mov
int3
test
xor
cmpsl
or
lret
lahf
loopne
mov
hlt
sub
push
in
test
orl
sub
lret
xchg
ljmp
mov
fildl
dec
fwait
mov
mov
inc
sbb
fs
aam
sbb
test
lds
push
pop
add
sbb
jmp
daa
mov
popa
dec
pop
into
js
aaa
out
stos
dec
or
add
dec
daa
xchg
jg
stos
push
push
mov
mov
test
sahf
lcall
fstpl
dec
cmp
or
or
push
sub
fwait
sarl
test
mov
das
pop
jp
adc
sbb
aaa
pop
push
insb
sub
in
sbbl
dec
sbb
pusha
push
sbb
or
pop
and
cmc
xchg
cwtl
mov
mov
xor
and
adc
add
je
cmp
fidivl
test
aam
les
dec
and
adc
add
je
cmp
fidivl
xchg
fs
clc
rorb
xor
push
das
aam
push
arpl
cli
mov
mov
xchg
mov
frstor
sbb
cmp
shll
std
leave
adc
sti
push
mov
xchg
out
out
and
in
jecxz
xlat
imul
mov
push
mov
cmc
dec
sarb
iret
mov
mov
shrl
push
adc
push
sti
iret
movsb
jb
pop
pop
outsl
cmp
ficompl
pop
and
lahf
dec
rclb
es
sub
jmp
mov
or
jno
jbe
jmp
imul
and
std
repz
pushf
xchg
pop
fmul
and
adc
add
shll
adc
ret
inc
ret
xor
out
jmp
ja
and
mov
lret
popf
jns
add
cltd
filds
and
cmp
mov
gs
lahf
inc
inc
insl
mov
push
sub
les
daa
adc
cs
outsl
lahf
imulb
and
xchg
ja
or
repnz
rcrb
ret
movsl
imul
xor
sahf
pop
adc
cmp
xor
fsubrl
insb
add
mov
xchg
stc
aam
aaa
mov
jl
jns
das
lods
cmpsl
or
xchg
cmp
leave
movsl
push
or
js
popa
add
lret
inc
cmp
stos
dec
fwait
mov
push
jge
push
cwtl
loop
shlb
xchg
push
ficoml
or
test
dec
int
test
adc
jp
add
or
xlat
stos
lds
call
mov
or
jge
repz
outsl
stc
xchg
dec
sub
mov
xor
xchg
jp
shr
pop
adc
adc
out
mov
hlt
adc
xchg
or
test
sub
mov
addr16
pop
xchg
subl
outsl
call
xor
pop
outsl
inc
ljmp
cmc
mov
jns
adc
imul
cmpsb
push
adc
loope
mov
outsl
dec
pop
jne
push
leave
insb
dec
mov
inc
addr16
lea
xor
mov
aam
mov
fwait
push
call
roll
and
popa
xorl
fdivrs
xor
aad
movsl
movsl
cltd
stc
lcall
mov
call
out
mov
test
jg
dec
jle
jo
mov
jno
cmc
adc
rol
clc
push
cmpsb
sbb
cmp
fwait
pavgw
inc
ret
and
pop
pop
mov
or
fiadds
or
jmp
sub
push
stos
cmp
sub
mov
xor
mull
xchg
outsb
out
aad
or
mov
cmc
scas
dec
sbb
cmpsb
jmp
push
jl
lods
lahf
test
scas
jbe
inc
or
clc
adc
sub
jno
stos
nop
mov
insb
xlat
ljmp
fisttpl
sub
mov
jl
frstor
mov
mov
sbb
cmp
lcall
jae
cmp
hlt
out
rcr
sbb
cwtl
ja
push
ljmp
imul
cmp
push
nop
pop
xchg
xor
push
pop
aaa
lahf
dec
sbb
push
mov
jne
jnp
mov
movsb
aas
out
dec
jns
or
lahf
mov
nop
jmp
cmpsl
mov
jg
jmp
sub
imul
jo
inc
data16
and
das
clc
cmp
pop
sarl
sub
es
and
push
mov
inc
dec
mov
sbbl
shl
aam
movsb
repnz
xchg
cs
aam
fcmovne
insb
xor
shlb
mov
add
movsl
push
sti
jecxz
adc
sbb
adc
add
aad
jmp
push
or
xor
sbb
test
jl
fnsave
bound
loop
std
in
sbbl
out
outsl
cld
in
scas
jmp
insl
mov
imul
int
adc
dec
xchg
mov
cmp
pshufw
ret
pop
mov
test
aas
insb
inc
mov
lahf
dec
jg
sub
xor
sbb
arpl
dec
push
cltd
in
and
xor
out
arpl
in
in
popf
fnstenv
or
lods
loopne
dec
insl
sub
xchg
cmp
into
sbb
out
outsb
outsb
or
push
sub
inc
cmp
out
pop
cmp
lock
jne
fs
mov
xchg
mov
inc
push
cs
sbbb
and
jne
pushf
cwtl
stc
add
fdivs
xor
add
fbstp
outsl
sarl
mov
rclb
leave
or
jg
pushf
scas
dec
rolb
into
popa
push
xchg
xchg
sub
or
push
xchg
repnz
aam
mov
mov
jl
clc
push
int3
out
or
xor
rol
jg
xlat
scas
test
adc
rorb
fcmovbe
addr16
mov
and
push
mov
pop
out
inc
popa
stc
add
add
in
mov
sbb
push
scas
xchg
test
push
add
xchg
filds
mov
je
icebp
mov
lea
stos
in
mov
xor
sysret
mov
repz
getsec
fcoml
add
push
shll
jmp
ret
lcall
sbb
sbb
insl
sbb
lock
rcrb
jg
lods
inc
cld
pop
jo
test
or
cltd
ljmp
leave
xlat
fcoms
cmp
fmull
lods
outsb
lods
xor
and
in
cmp
pop
and
or
xor
mov
jno
push
dec
pop
lcall
ret
push
push
jne
pop
imull
loope
test
jl
inc
repnz
mov
pushf
pop
movsl
push
insb
repz
loope
xchg
les
mov
jno
or
adc
roll
xor
mov
addr16
cmp
inc
cmp
cltd
mov
xchg
mov
idivl
inc
push
out
xor
int3
stos
xor
daa
outsl
mov
adc
imul
xor
inc
out
out
mov
insl
cmp
daa
jle
sbb
fwait
and
push
xor
data16
mov
mul
loop
negl
or
repnz
popf
mov
stos
out
insl
push
inc
lea
int3
das
push
insl
mov
jb
stc
mov
xchg
imul
mov
xor
fisubrl
sub
repz
mov
fs
mov
cmc
mov
sti
test
cmpsl
cmpsb
lods
push
jle
push
cwtl
push
cs
inc
mov
adc
je
movb
xor
fiaddl
and
test
push
mov
incl
mov
jb
in
imul
cmp
dec
cmp
test
nop
aas
sbb
popf
in
cli
out
cmpsb
pusha
lds
inc
push
insl
mov
es
push
sub
and
jmp
inc
lock
xchg
frstor
adc
sarb
xchg
int
popf
jmp
sub
push
out
fdivl
mov
mov
outsb
lock
mov
lods
or
cmp
cmc
jns
dec
ficoms
or
mov
pop
inc
ret
inc
idivl
xchg
out
mov
sub
out
pop
lods
sbb
sub
mov
rcl
int3
scas
sbb
push
sbb
push
popf
push
cli
jmp
adc
sbb
in
cmp
fdivs
mov
adc
inc
int
fildll
dec
inc
jmp
fsts
es
call
adc
mov
inc
orb
cmp
ja
xchg
mov
sub
push
xchg
add
mov
cmp
adc
mov
dec
mov
sub
and
sahf
iret
xchg
les
lods
jae
pop
cmpb
cmp
add
sub
testl
push
insl
shufps
jl
mov
adc
mov
lret
xchg
cltd
sahf
cli
jno
jmp
ficompl
repz
cmp
or
jbe
pop
repnz
ret
rcrl
pusha
test
mov
pop
int
pushf
push
nop
add
gs
jg
icebp
loop
mov
and
mov
and
nop
mov
xchg
pop
fisubs
jo
inc
dec
fisubrs
rdtsc
pop
xlat
mov
pop
inc
mov
fiaddl
sbb
pusha
inc
xchg
notl
push
outsl
pusha
imul
loope
call
jnp
pop
add
lret
notb
ficomps
shl
fdivrl
bound
pop
mov
addr16
cmpsb
xor
in
sbb
enter
jne
inc
or
out
or
das
sub
push
test
pop
js
ljmp
out
in
leave
popa
mov
pop
jl
or
mov
loopne
cltd
sub
gs
aas
and
mov
xchg
cmpsb
lcall
or
pop
movsb
add
pop
and
cmpsl
sbb
bnd
xor
or
fbld
dec
xchg
push
in
adc
sub
les
pushf
sub
mov
or
scas
mov
jp
and
test
hlt
aam
pop
jle
pop
outsb
inc
ret
faddp
inc
mov
shlb
test
clc
jg
and
and
jne
loopw
shrb
pop
stc
gs
sti
xchg
stos
jo
outsl
test
xor
xor
mov
sub
fsts
in
push
std
or
dec
mov
fldenv
insb
fsubrl
or
and
mov
pushf
jae
jne
or
and
inc
test
movsb
xor
call
add
cmp
mov
push
aas
mov
mov
data16
iret
add
aad
cmp
sub
std
jl
xchg
leave
pop
mov
mulb
decl
sub
jno
cmp
repnz
push
popf
adc
mov
add
jmp
int3
call
imul
jge
movsl
shll
ret
mov
test
into
ds
into
cmp
stos
sarb
inc
cs
mov
xor
testb
push
fs
outsb
into
mov
cmp
nop
cmpsl
sbb
xchg
jb
add
pop
repnz
xchg
lahf
subl
mov
unpcklps
adc
dec
mov
in
aad
pop
ljmp
rorb
fsubs
je
outsb
jecxz
push
or
cmpsb
popa
jle
test
sbb
jae
scas
daa
mov
xlat
decb
sub
jno
mov
mov
bound
add
idivl
add
in
stc
out
or
cmp
add
dec
cltd
pop
or
insb
add
pushl
mov
pop
sbb
sbb
sbb
lret
das
and
inc
xchg
fyl2x
push
enter
jmp
test
ret
lds
push
inc
into
fisubrl
fildll
bound
out
shl
mov
cltd
int3
lret
out
xchg
xchg
mov
hlt
or
adc
add
push
or
andb
xor
shlb
cmp
inc
mov
sbb
mov
out
scas
sbbl
outsb
dec
mov
rorb
fdiv
sarl
push
pop
stc
mov
cld
sub
or
fstl
dec
dec
sbb
nop
test
pop
dec
les
xchg
js
adc
popf
and
inc
mov
lret
ficoms
fisubl
adc
jo
push
pop
inc
pop
movsb
aad
adc
pop
mov
pop
jecxz
adc
push
jb
sbb
testb
push
fistpl
ret
mov
jmp
push
insb
pop
lds
imul
add
sbb
push
add
xor
add
sub
cmp
xchg
sub
subl
repz
push
rcll
mov
stos
bnd
sahf
insb
outsb
bound
into
sarb
test
scas
imul
adc
push
pop
add
lcall
fisttpl
and
xor
xor
inc
jae
or
stos
data16
addl
fucomi
loop
jae
test
mov
cli
push
pop
ja
fdivr
lcall
inc
movsl
pop
stos
mov
jl
jno
adc
fstl
mov
adc
xchg
in
fmul
lret
add
in
movsb
mov
sub
test
or
pop
xchg
mov
test
cmp
stos
mov
xor
sub
mov
ret
dec
andb
mov
stos
sbb
fs
test
cmp
cmpsb
pusha
dec
fstl
popf
pusha
notl
cs
sbb
cmc
jno
neg
dec
lret
adc
adc
scas
divb
jns
inc
or
add
bnd
mov
push
jp
push
fbld
das
and
sub
jae
nop
inc
dec
sub
repnz
add
jmp
lret
int
test
fistpll
nopl
sub
scas
mov
adc
lea
fisttpll
stc
fidivl
sbb
push
and
xor
push
mov
loop
dec
arpl
add
sbb
mov
int3
cmpsl
sub
push
pop
lret
stos
push
jb
fdivrs
mov
or
in
cld
sub
push
push
xchg
xchg
dec
xorb
cmp
test
rcrb
jmp
xchg
pop
jge
jle
in
jl
sub
push
movsb
push
fldenv
fsubrp
mov
fstpt
leave
mov
pop
int3
sub
repnz
inc
scas
scas
lret
jno
jno
lock
dec
pusha
and
sbbb
adcb
add
push
cmpsb
cmp
movsl
push
pushf
int
or
jo
shl
cli
sub
insl
cmpsb
shlb
imull
stos
inc
sub
clc
pop
mov
mov
push
pop
xor
test
pop
gs
cmp
std
mov
mov
jnp
mov
jmp
outsb
lea
repz
gs
inc
imul
push
stos
add
cmp
repnz
jns
imulb
in
push
add
ror
inc
ficoms
cwtl
mov
pop
dec
push
das
loop
and
shl
clc
pushf
je
aas
leave
je
mov
movsl
dec
andb
jne
and
cs
push
push
out
pop
xchg
rorb
loop
sbb
out
push
ret
and
test
lret
adcb
mov
mov
lds
ret
cmp
pushf
xchg
xor
aaa
mov
dec
test
fildll
outsb
mov
sub
jge
rorl
shll
in
test
stc
cmp
jb
cmp
xchg
shrb
test
mov
push
adc
and
xchg
aas
enter
inc
xor
mov
push
dec
push
scas
lods
outsl
je
jbe
jp
jg
bound
aam
ljmp
mov
cmp
fmull
mov
out
mov
push
arpl
out
roll
inc
push
or
bound
sbb
daa
dec
mov
xor
jbe
imulb
xchg
fimuls
sub
cmc
xchg
repz
cmc
cmpsb
sub
lahf
push
insl
xchg
mov
pop
cltd
stos
mov
ret
sbbl
mov
pop
insb
xchg
inc
inc
imul
xlat
dec
and
and
pop
mov
test
js
inc
ss
rolb
leave
ret
mov
outsl
fadds
push
push
test
dec
rorl
mov
fildll
popf
jmp
push
ror
cwtl
popa
jle
std
in
dec
into
push
push
imul
faddl
ds
out
filds
sti
mov
xchg
mov
pop
ss
add
cmp
mov
jecxz
aaa
mov
xchg
adc
js
test
mov
or
xor
mov
int
adc
shlb
in
jmp
pushf
or
insl
mov
pop
mov
aad
jle
inc
rcll
movl
scas
jecxz
rcrl
fbstp
nop
add
dec
call
mov
ret
mov
gs
adc
inc
push
imul
clc
jmp
xchg
jno
mov
jae
std
sti
stc
jecxz
cmp
dec
jp
sub
fmuls
pop
inc
leave
jle
lea
inc
ret
jp
push
enter
dec
push
xor
pop
jmp
inc
add
sar
les
js
ljmp
push
je
cmc
jp
call
push
addl
mov
out
adc
stos
daa
arpl
insb
cmc
mov
sub
mov
fistpll
ficoml
mov
setge
mov
in
sbb
aam
pop
fists
mov
cli
dec
aaa
mov
ret
dec
testl
and
jnp
nop
pushf
cmp
gs
xchg
shl
pop
xor
mov
push
adc
push
inc
cmp
aad
xor
cli
mov
sbb
aam
xor
sahf
sarl
lahf
cltd
out
adc
stos
mov
pop
pop
or
mov
cmp
or
ja
cmc
mov
out
mul
pop
push
xor
lods
push
add
inc
add
mov
dec
mov
frstor
pop
das
xchg
xchg
jle
arpl
mov
test
xchg
enter
jmp
out
or
nop
mov
sbb
push
or
or
fisttps
leave
fnstcw
cs
shrl
mov
testb
push
test
push
cs
int
orb
popa
and
insb
fistpl
dec
jle
cmp
aam
lahf
adc
xchg
pop
sub
out
bound
popa
out
cmpsl
mov
sub
push
cmp
and
dec
sub
ret
lret
cwtl
cmpsb
dec
sbb
adc
aaa
push
fwait
sbbb
push
lcall
fstpl
push
es
inc
or
out
icebp
cs
in
push
sbb
dec
push
mov
cmc
in
xor
mov
into
mov
lock
cltd
sbb
fildll
adc
stos
cwtl
jb
push
push
pop
xchg
jle
mov
std
xchg
div
pop
popf
or
ljmp
lret
call
cltd
push
mov
add
jnp
dec
lret
push
loope
inc
mov
jno
adc
sbb
popf
inc
adcb
data16
fidivrs
inc
xor
adc
and
fdivrp
lret
pop
lcall
pop
jno
cmp
stc
sbb
bound
pop
into
mov
jl
add
cmpl
add
test
sbb
add
test
cmpsb
insl
mov
pop
push
push
add
scas
in
sahf
mov
lcall
push
daa
sbbb
frstor
adc
push
xor
dec
and
ret
pop
mov
pusha
pushf
jb
enter
jecxz
mov
popa
imul
dec
or
loop
test
sub
inc
cmp
cmp
inc
movl
stos
dec
jno
xchg
ffreep
or
and
adc
push
pop
add
add
repnz
int3
inc
mov
inc
incb
add
jecxz
dec
int3
push
jle
test
pop
cmp
test
fstpt
push
bound
pop
mov
sti
mov
insl
cld
cmp
jle
mov
mov
pop
in
dec
rclb
mov
in
adc
mov
mov
sub
in
xchg
xor
mov
pushf
cmp
push
fimull
dec
pop
pop
adc
out
lcall
repz
inc
mov
xor
or
enter
fbstp
je
inc
inc
lods
test
icebp
shrb
xchg
incl
int3
push
iret
clc
rolb
repz
push
jp
mov
js
mov
mov
shl
sbb
mov
cmp
shrb
sahf
stc
addl
cmp
dec
dec
xchg
xchg
rcrb
or
pop
aad
and
mov
add
sahf
xchg
test
aas
cmp
pop
add
mov
aam
xor
cmpsb
rcr
repz
decb
jne
mov
js
pusha
ds
popa
mov
pop
dec
jnp
xor
in
xchg
jge
push
fidivrl
daa
cmpl
dec
push
dec
dec
inc
dec
mov
aam
add
rcr
jnp
sahf
push
fwait
sbb
mov
xlat
sub
stos
xor
jae
jae
mov
ss
das
addr16
shrl
cmpsb
inc
mov
xchg
pop
xor
insl
scas
dec
jl
rcl
mov
inc
add
pusha
fsubs
xchg
std
pushf
inc
adc
lret
test
or
and
mov
daa
jo
in
push
cmp
insb
xchg
sub
add
femms
ret
outsb
inc
xorb
outsb
outsl
jns
cmc
cmpsb
jp
adc
fstpl
shlb
insl
data16
sti
jnp
test
aam
les
dec
and
adc
add
je
cmp
fidivl
test
aam
les
dec
and
adc
add
je
cmp
fidivl
test
hlt
mov
mov
xor
and
adc
add
cmp
inc
fidivl
test
aam
les
dec
mov
adc
jae
cld
jp
dec
stos
pop
mov
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
jns,pt
imul
sbbl
or
int
fsin
mov
into
mov
jns
imul
cmp
pop
sbb
mov
stos
ficomps
jo,pn
inc
push
push
jle
outsb
xor
dec
adc
mov
fstl
xor
jl
ds
outsb
call
jl
je
push
fstp
lret
and
mov
mov
xchg
jecxz
push
sbbl
dec
ljmp
push
adcb
mov
ss
sti
neg
imul
add
push
push
and
mov
jmp
pop
sbb
adc
daa
das
xchg
push
cmp
mov
sbb
inc
add
int3
cltd
sar
xchg
je
ss
pop
adc
scas
add
pop
jo
mov
fisttpl
xchg
sbb
xchg
lds
xchg
les
ret
dec
ficomps
jns,pn
inc
push
dec
jle
outsb
sub
dec
adc
rorb
fiadds
inc
sbb
imul
daa
dec
cmp
insb
call
loop
faddl
in
adc
sub
cmp
add
insl
dec
cmp
lea
fwait
leave
mov
std
push
jns
imul
outsb
sub
dec
or
test
jns,pt
imul
cmp
pop
sbb
mov
test
jns,pt
jp
fisubrs
dec
movsb
mov
ljmp
dec
cmp
dec
mov
insl
mov
add
and
inc
push
mov
mov
mov
sbb
or
mov
mov
fcos
imul
mov
mov
push
add
mov
enter
mov
mov
sbb
pop
pop
mov
jns
ss
aam
sub
pop
aaa
popa
or
mov
mov
push
inc
or
and
mov
cmpsb
push
idivl
repnz
sub
repnz
and
and
mov
xchg
addl
test
out
nop
dec
pop
in
subb
arpl
icebp
or
mov
pop
dec
push
inc
ret
push
fimuls
push
fists
sbb
pop
xor
xchg
dec
inc
sbb
xlat
lds
hlt
pop
js
jne
ljmp
mov
and
repz
mov
in
into
inc
aad
mov
dec
sub
clc
inc
xchg
stos
fimull
jle
insb
movsb
cmc
test
xchg
popf
fisubrs
push
mov
cli
pop
stos
lret
aam
xchg
addl
xor
inc
dec
mov
xlat
test
push
idivl
dec
loopne
nop
jp
pop
ja
fwait
ror
xchg
rorl
or
mov
pop
idivl
push
lds
dec
test
mov
iret
aad
pop
lret
pop
xor
in
mov
inc
dec
mov
jecxz
ror
sub
test
fsubl
inc
pop
xchg
xor
mov
int3
bound
fldt
and
sub
push
fdivl
adc
pop
pop
fs
out
leave
ljmp
lcall
vpmaxub
and
fdivrl
jnp
jl
mov
fucom
cmp
push
fiadds
dec
xchg
ds
jns
not
jbe
cld
fnstcw
lret
ret
ja
inc
aad
lods
cmpsl
popf
pop
push
hlt
out
ficoms
cmc
add
push
lock
adc
aas
arpl
add
mov
dec
je
dec
inc
aad
sti
rorb
xchg
mov
add
adc
jecxz
pop
movsl
arpl
ret
repz
pop
aam
cmp
xor
push
mov
lods
pop
movzwl
add
fsubrs
out
sub
cmp
add
ret
push
iret
dec
mov
pop
mov
adc
pop
jp
dec
pushf
sub
hlt
call
lods
adc
je
mov
ret
pop
mov
sar
enter
cli
mov
pop
jp
es
mov
cmpsl
ss
insl
fcoml
cwtl
into
stos
loopne
test
in
push
adc
push
or
imul
lcall
mov
mov
into
mov
sub
aad
push
mov
aad
dec
and
jb
rclb
mov
xchg
data16
and
or
jnp
movsb
pop
mov
loop
insl
dec
sub
shll
cmp
lock
pop
lds
push
mov
icebp
and
and
jecxz
fimuls
dec
xchg
in
arpl
lcall
pop
mov
cmp
add
jne
mov
push
repnz
leave
pop
xchg
shll
cli
loopne
inc
in
pop
hlt
ljmp
sub
sbb
push
icebp
clc
mov
cmpl
cld
and
int
loop
cmp
pop
mov
stos
fisubl
lret
mov
pop
adc
rcrb
sub
aas
insl
insb
stos
outsl
subl
data16
sbb
pop
sbb
jmp
fistps
push
mov
jl
ret
sbb
aad
test
adc
inc
ja
push
jl
je
std
into
and
sub
out
pop
jge
sarl
lock
jg
inc
imulb
call
pop
test
filds
xor
aad
pop
pop
cwtl
xchg
adc
movsl
ret
rcll
pop
xchg
and
adc
cld
insl
ror
xchg
out
mov
sahf
or
mov
stc
mov
xchg
push
and
mov
sqrtps
outsl
add
js
shll
loope
pop
sub
cmp
adc
outsb
outsl
sbb
cltd
sub
dec
aaa
mov
mov
lods
add
dec
loope
jp
shlb
lcall
dec
inc
dec
fists
stc
out
mov
dec
jne
add
inc
int3
ja
pop
ret
cmpsb
push
jns
in
pushf
and
std
sub
inc
sbb
jge
fsubs
cmp
mov
movaps
addb
mov
inc
jns
xchg
in
push
loopne
mov
sar
push
mov
cld
push
sbb
mulb
imul
xchg
ljmp
div
popa
jno
sub
lret
push
lds
out
leave
mov
add
dec
dec
mov
js
push
std
aaa
insl
lahf
dec
mov
and
or
mov
push
push
mov
xlat
mov
addr16
push
addr16
nop
faddl
dec
lret
pop
cmp
xor
pop
mov
lret
add
inc
pop
xlat
js
lods
or
ja
cs
xlat
xor
fmul
xor
mov
mov
sub
clc
or
jb
or
xor
fnsave
mov
jno
sbb
mov
mov
fidivs
sub
cltd
adc
inc
jge
pop
rolb
mov
mov
adcb
pop
sub
add
addr16
pop
and
jno
mov
ljmp
dec
fnstenv
ja
push
xchg
mov
std
loope
daa
cwtl
les
and
mov
xor
aam
outsb
cld
test
sbb
fisubl
mov
lret
lods
jmp
mov
mov
fdiv
fmull
lcall
fiadds
cmp
sbb
push
or
test
insb
pop
imul
push
sbb
or
cmp
pop
jg
imul
inc
pop
rorb
cmp
inc
repz
stos
insl
mov
mov
mov
sub
adc
xlat
stos
inc
jecxz
and
xor
icebp
shlb
lret
push
mov
imul
mov
xchg
loope
cwtl
push
jp
mov
test
and
daa
mov
into
dec
loop
cmp
sbb
mov
in
jecxz
or
adc
push
es
xlat
add
fcoml
jge
test
iret
add
push
pop
dec
mov
sub
mov
idivl
testl
xor
cli
jmp
pop
inc
xchg
dec
les
dec
test
xor
lods
scas
iret
mov
inc
addr16
xchg
pop
inc
in
je
push
in
push
out
aad
leave
pop
push
test
mov
or
push
cmp
mov
push
cmp
aam
sbb
icebp
mov
mov
inc
sub
or
or
lahf
xor
js
lret
std
sub
arpl
inc
xchg
scas
push
imul
pop
inc
fimuls
outsl
gs
mov
xchg
pop
stc
inc
je
or
mov
dec
push
lods
inc
jns
insb
mov
ret
mov
sar
adcl
pop
imul
mov
mov
push
imul
or
lods
add
mov
mov
mov
ret
loopne
lret
adc
and
outsl
flds
cli
test
stc
call
aam
inc
gs
ljmp
jl
loope
push
loope
orb
shll
es
xchg
lea
popa
loopne
into
add
mov
repz
in
jle
in
adc
mov
mov
notl
sahf
xchg
sub
mov
pop
ss
pop
cltd
rcrb
adc
cwtl
or
jns
mov
or
repz
pop
add
mov
xor
out
and
popf
xor
inc
repnz
fucomp
fidivrl
sub
cmp
push
jb
lods
or
scas
sub
int
pop
roll
dec
test
and
fbld
es
pop
mov
sub
fdivp
xchg
push
js
js
dec
mov
sbb
test
jno
cmc
clc
inc
int
push
outsb
mov
sub
rcrb
dec
fldenv
repz
sbb
icebp
mov
push
and
sbb
lods
shrl
test
jb
jmp
addr16
std
jns
jp
gs
xrelease
aas
xchg
cmp
dec
repz
dec
push
mov
iret
vaddps
push
push
dec
mov
cmp
push
lahf
pop
popa
in
mov
inc
push
xor
cld
mov
scas
outsl
mov
cmp
add
dec
or
add
and
adc
in
cltd
sub
pop
add
faddl
fstpl
sbb
es
or
jp
in
push
jbe
popa
sbb
and
inc
jecxz,pt
cmp
popa
stos
inc
addr16
aam
mov
push
dec
loop
xor
or
jge
dec
mov
lcall
rcrb
push
push
mov
jae
scas
pushf
lods
out
jmp
stc
mov
mov
cltd
pop
cltd
inc
or
xor
data16
mov
mov
adcb
fdivs
or
push
ja
test
andb
sbb
mov
or
cltd
lock
pop
in
sbb
sbb
jnp
int
repz
cmp
sub
imul
cmp
fsubrl
dec
in
sar
repz
or
sub
sub
loop
jnp
sub
outsb
decl
or
or
xlat
push
xchg
jp
push
fcmove
fnstcw
xor
lahf
dec
mov
inc
sahf
cmp
movsl
loop
js
adcl
mov
or
xchg
sbb
movsl
or
dec
add
loope
cmc
icebp
inc
mov
rcrb
xor
inc
jmp
mov
or
pop
sbb
sbb
xchg
ss
or
xor
leave
xlat
inc
aaa
mov
lret
xchg
inc
push
sub
loop
cmp
or
cwtl
stos
iret
in
mov
cld
inc
sub
mov
mov
xchg
push
xor
fisubrl
mov
xchg
cmpsb
mov
fstpl
stos
lock
test
push
sbb
int
cmp
xchg
lock
hlt
mov
lea
sbb
adc
and
loopne
mov
pusha
orl
jno
inc
mov
imul
lds
dec
xchg
ljmp
add
pushf
repz
shlb
add
cld
mov
mov
adc
pop
mov
int
xor
mov
jecxz
scas
andl
add
xchg
xor
clc
std
push
test
loopne
or
ss
mov
das
pop
movsb
jg
leave
or
iret
orb
pop
dec
movsb
jnp
jno
mov
sub
out
xchg
inc
hlt
xchg
cmp
mov
jb
pop
sub
xchg
enter
fisttpll
aaa
xor
adc
popf
xchg
fistps
in
frstor
push
pop
test
stos
mov
push
ret
shll
xorb
pop
xchg
test
aad
add
or
push
jp
mov
pop
pushf
les
pushl
das
dec
adc
fisttps
fs
inc
js
mov
lcall
xor
sti
inc
pusha
imul
sbb
in
sub
push
cwtl
mov
leave
loope
cmc
sbbb
cmp
push
andl
popa
in
xor
xchg
hlt
push
repz
mov
repnz
stos
sub
in
add
js
jl
int3
pop
add
push
clc
inc
jns
cmp
mov
ret
fdivrl
push
cmove
or
push
xchg
xchg
jg
popf
nop
mov
dec
mov
mov
lret
pushl
pop
ret
aam
xor
je
pop
mov
loop
aas
push
push
push
add
sbb
mov
loopne
das
mov
pop
mov
push
shrb
imul
add
push
das
cmp
adc
jb
fwait
xlat
mov
lea
jne
out
xchg
sbb
shlb
mov
call
mov
pcmpgtd
push
xor
imul
lret
pop
dec
js
jbe
jmp
les
cltd
jno
push
fs
and
fs
pop
xor
sbb
sbb
arpl
cwtl
jmp
jno
jecxz
lock
fidivs
rolb
mov
mov
ljmp
add
xchg
mov
fists
es
adc
fnsave
mov
pop
cmpsb
pop
in
subl
fcoml
addr16
test
fdivrl
fdivs
dec
add
out
add
stos
push
je
mov
or
test
sbb
leave
cwtl
dec
arpl
out
bswap
xchg
or
popa
xor
fwait
loopne
adcl
js
in
stc
pop
or
mov
xor
insl
mov
movsl
cmpsb
insl
stc
mov
imull
sbb
hlt
sub
mov
push
add
movsb
loope
dec
inc
leave
push
xchg
rcrb
call
repz
ret
dec
gs
das
dec
imul
push
movsl
cmp
push
lea
bound
aaa
lock
xor
xor
push
stos
arpl
inc
arpl
pop
inc
push
fildl
stc
jo
mul
dec
arpl
fs
js
cli
jbe
in
insl
leave
inc
ss
xlat
adc
mov
or
jmp
mov
cmpb
xchg
fadd
mov
inc
aad
inc
pop
pusha
dec
addr16
jne
sbb
cmp
xor
mov
mov
and
out
adc
jl
jb
pop
loopne
add
push
ret
icebp
clc
xorl
sbb
insb
int
in
cltd
cli
push
sbb
xor
ljmp
sub
js
push
popa
pop
pop
in
dec
inc
popa
and
lods
test
mov
and
dec
ror
fldt
lret
mov
add
jp
sahf
mov
ss
xchg
mov
or
mov
addr16
adc
add
out
mov
xchg
lods
jg
jmp
mov
jnp
adc
cltd
push
outsl
mov
jno
mov
add
fdiv
out
or
mov
push
cmpb
jg
or
pop
mov
jmp
dec
pop
sub
je
xor
test
andb
xchg
lock
bound
repnz
js
in
cli
sahf
xor
repz
push
adc
out
or
in
pop
cmpsb
dec
inc
popf
leave
cmp
jnp
xchg
lcall
inc
lods
and
dec
jno
clc
in
jge
jns
adc
mov
jg
clc
daa
xor
and
mov
std
add
insb
jb
lock
imul
jnp
subl
loope
adc
and
hlt
adc
loope
mov
sbb
imul
lret
testb
inc
fcoms
int
and
adc
flds
sub
notb
jnp
repz
sbbl
pop
xorb
fdivp
pop
into
jbe
push
jp
cwtl
cld
xor
imul
jp
arpl
je
insb
push
inc
je
das
cmp
xchg
mov
adc
movsb
or
nop
adc
jmp
pop
push
cmp
dec
in
bswap
inc
inc
hlt
out
imul
fiaddl
jnp
insl
sub
sbb
hlt
mov
ds
negl
fs
ret
adc
xlat
push
in
mov
in
xchg
sbb
aas
punpckhdq
adc
js
push
mov
xor
adc
push
cld
ret
jg
or
daa
pop
sub
out
lods
mov
xchg
outsl
dec
push
dec
mov
mov
inc
mov
jo
xor
adc
sub
js
shlb
addb
mov
std
scas
clc
pusha
out
out
in
push
mov
je
incl
jbe
adcl
mov
push
shl
xchg
jp
mov
hlt
push
call
mov
pop
cltd
xor
xlat
cwtl
add
jl
popa
mov
mov
jae
aaa
push
mov
xchg
shr
outsl
movsl
jb
bswap
push
scas
cmp
lea
dec
gs
adc
lods
pop
ret
xchg
push
dec
imulb
rorb
pop
or
sub
or
add
cs
nop
mov
fdivl
jle
fisubl
cwtl
xlat
jmp
int
sbb
xor
mov
pop
add
or
xchg
cmp
fs
jb
pop
hlt
push
cli
mov
add
inc
test
loope
add
out
test
mov
imul
sbb
adc
lcall
xbegin
xchg
push
mov
les
cltd
in
mov
dec
idivb
cmp
test
adc
sti
xchg
into
ja
mov
dec
xor
das
addr16
sbb
pop
sub
mov
sub
pusha
adc
dec
insb
or
mov
out
js
jecxz
mov
arpl
and
shl
je
mull
aad
xchg
xlat
inc
mov
cmp
mov
out
inc
dec
enter
pop
insl
stos
mov
negb
lahf
sti
dec
cmp
aam
push
cli
popf
mov
lock
dec
test
fwait
xor
add
xor
inc
cmp
sahf
lods
adcl
ret
mov
xchg
and
and
dec
cmp
stos
stc
aad
insb
xor
inc
push
inc
dec
movsl
sbb
fiaddl
push
imul
push
sub
daa
and
mov
ja
es
mov
es
mov
outsl
jnp
add
fdivl
inc
push
mov
push
lahf
fdivl
mov
lret
lods
sbb
lods
ljmp
adc
ljmp
rol
xchg
xor
adc
xchg
out
cs
mov
jmp
and
mov
inc
js
addr16
jae
js
call
sub
jb
xor
enter
jl
sarb
roll
sti
jbe
out
out
in
inc
jne
push
mov
or
fs
cmpsl
mov
cmpl
mov
lods
enter
or
ss
and
fistpll
aaa
pop
cmp
pop
sbb
jne
jbe
pop
and
aaa
lods
xchg
mov
ljmp
mov
daa
inc
mov
into
inc
jg
and
mov
repz
dec
mov
pop
movsl
pop
bt
xchg
xor
mov
nop
mov
and
sub
sbb
cmpl
loop
fcomps
mov
cmp
xchg
data16
cmc
mov
dec
push
out
jmp
and
imul
or
sbb
xchg
inc
movsb
mov
mov
scas
lret
or
scas
repz
insb
jmp
jmp
call
mulb
fiaddl
jecxz
push
sbb
adc
jo
push
sbb
ja
sub
push
cmpb
xor
jecxz
int
pop
sbb
nop
in
sbb
fcoms
dec
stos
mov
pop
stos
cltd
lcall
idivb
cmpsl
push
lcall
inc
imul
push
xor
adc
scas
insl
jg
scas
pop
and
dec
cmp
enter
jo
xor
out
lods
das
cmc
movsb
pop
xchg
jle
outsb
mov
movb
or
jmp
push
mov
jb
push
mov
stos
or
das
pop
andb
xlat
sbb
aaa
pop
les
int
mov
std
cmp
nop
mov
cltd
xchg
sbb
ret
lods
mov
push
pop
lock
jg,pt
es
cmp
mov
notb
or
xor
xchg
nop
mov
mov
jle
pop
faddl
push
cwtl
pop
mov
ss
lret
imul
add
xchg
push
fst
es
push
cmp
outsl
outsb
lock
icebp
cli
adc
fsubrs
leave
scas
pop
add
pop
xchg
sbb
sub
insl
fnsave
mov
ret
sub
mov
sub
fmul
sub
pop
fidivl
mov
shll
xor
inc
sbb
push
ret
xchg
xchg
xor
gs
int3
jg
movups
mov
ret
cmp
leave
shr
xchg
fidivrs
dec
add
mov
sub
dec
mov
mov
adcl
scas
repnz
popf
pushw
ljmp
adc
repz
jge
clc
cwtl
imul
inc
xor
or
xchg
lcall
cmp
pushf
and
mov
push
out
ret
mov
dec
jb
cmp
dec
insb
aam
fcmove
push
and
xchg
mov
adc
sbb
xchg
into
add
sub
fwait
dec
test
xchg
aas
cmc
test
mov
mov
xchg
add
xor
popf
inc
pop
inc
adc
shlb
cmpl
or
sub
in
js
cwtl
push
or
into
cmp
sub
stos
stos
mov
lcall
pop
xchg
rcll
pop
push
jne
add
sub
push
mov
sarl
push
dec
jle
outsb
sub
dec
or
test
jns,pt
imul
cmp
pop
sbb
mov
test
jns,pt
imul
cmp
pop
sbb
mov
test
jge,pt
insl
push
pop
push
dec
jle
outsb
sub
dec
leave
mov
and
xor
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
hlt
add
jl
add
mov
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
cmc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
in
add
fdiv
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
cmc
add
dec
cmc
add
pusha
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fdiv
add
clc
cmc
add
and
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
add
jl
add
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shl
add
fdiv
add
call
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
fdiv
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
inc
clc
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
clc
add
mov
clc
add
sar
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
stc
add
cmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fdivr
add
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
pop
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
cli
add
pop
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
