ret
ret
push
xchg
jmp
call
xchg
mov
xchg
mov
xchg
jmp
jne
and
mov
add
mov
jmp
add
push
nop
xor
mov
inc
addr16
call
xchg
jmp
or
test
add
add
rcl
sub
shr
mov
and
nop
sub
mov
mov
addr16
andl
push
pop
push
nop
xor
xchg
and
nop
jmp
lea
jmp
dec
jmp
push
call
push
call
jmp
inc
call
call
call
nop
test
jmp
call
push
call
dec
int3
call
jmp
pop
push
push
inc
jne
add
rol
mov
ror
and
add
shr
pop
ret
jmp
push
call
pop
dec
pop
call
call
push
inc
push
add
add
add
call
jmp
int3
inc
call
leave
push
nop
push
xchg
push
jmp
pop
nop
jmp
dec
call
ret
xorl
pushl
xchg
pushl
xchg
call
xchg
leave
jmp
int3
push
call
push
dec
call
jmp
jmp
pop
leave
ret
inc
push
ret
ret
jmp
jmp
call
jmp
add
add
add
stos
sub
add
aad
lods
add
jmp
xor
xor
ror
sub
pop
inc
mov
inc
xor
sub
pop
ret
jmp
jmp
call
push
nop
ret
push
xchg
jmp
mov
addr16
lea
jmp
call
call
push
call
ret
inc
call
call
inc
inc
nop
dec
call
inc
xchg
push
xchg
mov
push
pop
jmp
push
nop
jmp
push
xchg
push
xchg
push
jmp
push
addl
jmp
add
xchg
jmp
add
rolb
ror
shr
mov
push
nop
push
jmp
call
xorl
push
jmp
pop
xorl
call
jmp
add
add
push
mov
dec
sub
mov
sub
push
pop
jmp
lea
jmp
push
call
int3
push
call
jmp
push
push
xchg
xor
addr16
push
addr16
push
xchg
jmp
add
addr16
push
addr16
call
nop
mov
mov
lea
jmp
call
call
nop
call
jmp
call
push
push
push
push
pop
jmp
push
xchg
push
nop
push
xchg
push
mov
jmp
sub
dec
and
mov
jmp
add
add
add
push
xchg
nop
nop
nop
nop
nop
push
nop
xor
mov
jmp
mov
xor
sub
pop
jmp
xor
mov
sub
mov
jmp
mov
xchg
jmp
add
push
mov
and
or
sub
mov
push
mov
push
xchg
push
xchg
jmp
lea
jmp
push
nop
dec
call
push
ret
call
jmp
int3
push
push
push
xchg
push
jmp
push
call
call
push
addl
jmp
add
add
mov
call
add
add
add
add
nop
cmp
mov
jne
push
xchg
jmp
add
add
push
push
pop
or
or
ror
ror
xor
mov
sub
mov
push
mov
jmp
inc
or
mov
push
mov
push
xchg
push
mov
dec
xor
mov
mov
or
mov
shr
jmp
call
dec
push
push
push
ret
nop
push
call
add
addr16
mov
addr16
jmp
sub
nop
add
mov
cmpl
xchg
je
push
xchg
mov
or
ror
xor
mov
jmp
cltd
jmp
pop
call
call
call
jmp
and
nop
cmp
push
pop
jmp
add
nop
shl
mov
push
addr16
jmp
call
nop
jmp
add
add
sub
add
shr
shr
mov
mov
push
push
pop
push
xchg
push
nop
push
jmp
call
jmp
ret
push
xorl
pushl
xchg
call
nop
push
popl
jmp
mov
xchg
mov
mov
mov
mov
mov
mov
jmp
mov
nop
jmp
lea
jmp
jmp
push
call
dec
jmp
xor
xchg
inc
xchg
or
mov
mov
xchg
jmp
add
add
add
fildl
pop
add
xor
mov
sub
xchg
push
sub
sub
mov
pop
add
jmp
test
jmp
push
push
ret
push
call
je
push
jmp
int3
addl
push
jmp
jmp
push
push
ret
dec
call
addl
pushl
shl
mov
ror
push
shl
xor
or
or
and
mov
dec
rol
dec
test
jne
pop
pop
call
jmp
push
mov
xor
xchg
jmp
add
add
xor
sub
add
and
add
push
add
pop
add
or
rol
shl
and
add
add
rep
jmp
ret
leave
call
call
call
or
mov
or
mov
xor
and
add
sub
mov
jmp
push
push
pop
push
xchg
push
nop
push
jmp
push
subl
add
mov
push
nop
call
nop
jmp
push
jmp
jmp
call
inc
jmp
int3
nop
jmp
call
call
call
push
dec
xor
pop
call
xchg
nop
jmp
push
push
ret
call
ret
call
dec
int3
ret
nop
jmp
call
call
cmpb
mov
nop
jmp
call
inc
push
push
jmp
pop
leave
je
jmp
push
inc
xor
dec
pop
add
jmp
andl
xchg
add
nop
jmp
call
xchg
and
pop
jmp
add
or
sub
mov
sub
xchg
or
or
add
mov
push
xchg
jmp
test
jmp
dec
nop
push
call
call
int3
call
pop
ret
leave
je
push
jmp
leave
dec
push
pop
subl
call
nop
movl
mov
push
jmp
call
ret
addl
pushl
addr16
call
xchg
ret
jmp
push
call
int3
jmp
jmp
call
call
add
add
add
jmp
leave
ret
call
leave
push
push
call
addl
push
inc
and
push
xor
dec
add
pop
inc
dec
test
jne
pop
pushl
rol
dec
xor
rol
pop
call
test
jmp
push
call
push
call
nop
call
nop
call
dec
leave
push
call
pop
call
int3
je
jmp
sub
and
mov
mov
add
mov
add
and
add
mov
add
nop
movzwl
jmp
jmp
leave
call
call
call
ret
dec
call
push
int3
push
jmp
jmp
call
pop
call
push
xorl
add
shl
or
shr
pop
jmp
mov
jmp
call
push
call
call
int3
jmp
dec
push
call
mov
dec
xchg
xor
sub
mov
add
sub
shr
pop
jmp
inc
xchg
ret
jmp
push
call
call
jmp
call
push
call
jmp
push
nop
push
mov
inc
mov
add
mov
lea
jmp
call
jmp
jmp
push
leave
int3
push
xchg
push
jmp
call
push
leave
pop
nop
addl
jmp
add
add
push
nop
push
mov
push
addr16
push
xchg
jmp
mov
xchg
mov
sub
dec
ror
mov
test
jmp
push
jmp
pop
call
pop
push
call
call
jne
xor
addr16
jmp
push
mov
jmp
push
jmp
xorl
push
jmp
push
int3
call
push
push
inc
inc
call
xorl
jmp
add
add
add
lea
jmp
pop
call
jmp
call
push
call
push
call
addr16
test
jmp
call
int3
jmp
jmp
int3
dec
push
pop
push
call
jmp
push
jmp
call
call
push
push
xorl
push
and
xor
or
add
shl
sub
shl
or
ror
add
mov
sub
dec
test
jne
pop
and
dec
inc
shr
rol
and
add
call
test
jmp
pop
push
push
jmp
call
push
jmp
push
je
jmp
sub
xchg
shr
jmp
push
call
push
call
push
push
int3
call
jmp
ret
test
jmp
inc
leave
push
call
push
call
leave
call
int3
call
nop
leave
call
inc
call
nop
lea
jmp
push
push
call
jmp
nop
call
call
leave
jle
mov
mov
movzwl
jmp
jmp
push
call
call
push
jmp
push
int3
int3
push
jmp
cmp
mov
mov
jmp
int3
call
call
call
ret
call
push
jmp
push
mov
jmp
jmp
jmp
push
call
leave
ret
dec
lea
jmp
inc
push
push
inc
push
call
call
pop
call
inc
call
mov
jmp
inc
call
jmp
int3
call
mov
jmp
ret
inc
call
dec
call
push
dec
jmp
call
jbe
add
xchg
jmp
jmp
xor
xchg
push
xchg
push
xchg
push
jmp
dec
call
subl
pushl
or
dec
push
mov
ror
push
add
sub
xor
add
and
pop
mov
shl
dec
test
jne
pop
pop
call
test
jmp
push
push
call
jmp
call
jmp
cmpb
xchg
je
nop
jmp
push
push
call
inc
call
call
inc
add
sub
sub
mov
nop
jmp
call
pop
call
call
call
jmp
call
pop
push
dec
jmp
mov
add
shr
mov
pusha
jmp
push
push
int3
leave
inc
jmp
call
push
push
push
jmp
pop
ret
xor
and
mov
jmp
rol
or
mov
add
add
mov
and
mov
mov
nop
rol
mov
sub
mov
add
nop
mov
xchg
add
and
and
mov
and
mov
jmp
je
mov
mov
or
or
mov
mov
add
add
rol
and
mov
mov
rol
mov
mov
mov
add
push
pop
movzwl
jmp
push
dec
pop
dec
jmp
ret
call
dec
dec
pop
ret
ret
push
jmp
push
xchg
call
push
pop
add
push
pop
mov
movb
push
pop
movl
xchg
call
push
pop
popa
jmp
push
push
inc
call
jmp
call
call
pop
call
jmp
pop
push
jmp
mov
jmp
test
jmp
jmp
call
call
int3
lea
jmp
call
jmp
leave
push
leave
mov
jmp
dec
push
nop
leave
inc
call
nop
push
jne
jmp
je
call
xchg
test
jmp
call
call
call
push
push
nop
leave
call
jmp
nop
jmp
and
addr16
add
mov
push
mov
sar
jmp
jmp
pop
jmp
push
dec
call
push
xor
xchg
test
jmp
push
ret
call
push
jmp
inc
pop
jmp
int3
nop
push
nop
dec
jle
mov
push
pop
jmp
push
addr16
xor
nop
push
xor
dec
xor
dec
dec
push
shr
xor
or
pop
mov
shr
dec
test
jne
pop
shl
and
or
inc
mov
and
add
add
call
test
jmp
call
leave
call
push
push
push
call
leave
dec
jne
call
xchg
xor
or
mov
jmp
mov
push
push
xchg
call
xchg
mov
mov
mov
mov
mov
push
pop
mov
mov
push
jmp
xorl
jmp
dec
shr
mov
mov
mov
mov
mov
mov
push
pop
ror
sub
shr
or
ror
pop
cmp
xchg
pop
jmp
nop
call
push
jmp
push
int3
jmp
call
push
push
call
push
int3
jmp
and
rol
mov
call
test
jmp
pop
leave
jmp
call
push
ret
push
jmp
pop
call
dec
je
jmp
call
nop
movl
nop
call
xchg
push
jmp
call
jmp
int3
call
addl
or
xor
add
dec
mov
jmp
or
mov
inc
mov
shr
mov
rep
jmp
call
leave
call
call
push
call
jmp
call
call
inc
jmp
add
nop
movzwl
jmp
push
call
ret
call
jmp
call
jmp
call
call
leave
dec
pop
jmp
push
jmp
call
jmp
pop
jmp
call
subl
xor
pop
cmp
push
pop
mov
jmp
call
nop
call
jmp
push
push
pop
ret
call
int3
jmp
pusha
jmp
call
dec
int3
push
jmp
push
push
inc
push
dec
push
pop
call
xchg
popa
jmp
jmp
call
call
nop
int3
nop
jmp
push
pop
call
push
pop
and
mov
push
sub
pop
add
call
xchg
ret
jmp
call
call
call
call
dec
call
call
call
ret
int3
add
add
add
call
sarb
mov
jmp
jmp
push
call
push
jmp
leave
push
call
jmp
jmp
call
jmp
je
call
xchg
test
jmp
call
call
leave
dec
call
nop
pop
push
int3
leave
call
inc
je
push
jmp
call
push
int3
push
pop
xorl
xor
xchg
sub
or
or
sub
mov
pop
lea
jmp
call
inc
call
push
jmp
inc
push
push
push
call
mov
jmp
push
xchg
shl
shl
sub
mov
test
jmp
inc
call
call
nop
push
push
call
jmp
push
jle
and
or
mov
sub
nop
jmp
inc
push
pop
mov
mov
mov
mov
movl
xchg
add
add
mov
shr
mov
shr
jmp
jmp
jmp
inc
call
call
call
call
jmp
jmp
dec
nop
lea
jmp
ret
push
int3
push
call
ret
int3
pop
leave
leave
push
pop
push
dec
jne
test
jmp
jmp
jmp
call
int3
leave
leave
leave
call
pop
int3
mov
jmp
push
ret
pop
push
jmp
push
call
leave
pop
call
int3
int3
jmp
sub
addr16
dec
jmp
jmp
call
jmp
ret
jmp
push
nop
call
push
push
push
jne
mov
mov
sub
mov
jmp
mov
or
mov
mov
inc
mov
mov
mov
mov
xchg
add
nop
add
nop
jmp
jne
xor
mov
ret
jmp
jmp
call
push
call
call
push
jmp
call
nop
ret
xorl
call
addr16
ror
inc
or
pop
jmp
xchg
add
add
add
jmp
call
call
subl
and
add
sub
pop
push
nop
and
or
ror
sub
ror
mov
jmp
call
mov
add
add
add
ror
mov
sub
or
mov
movl
push
pop
call
xchg
inc
dec
inc
dec
pop
xor
mov
mov
or
mov
call
xchg
push
xchg
jmp
incl
mov
add
push
pop
cmp
xchg
jmp
lea
jmp
push
push
jmp
jmp
call
jmp
mov
jmp
leave
jmp
call
pop
call
mov
jmp
push
int3
call
int3
leave
jmp
jmp
call
pop
ret
nop
pop
call
nop
jmp
jbe
add
nop
jmp
sub
shr
add
mov
jmp
add
addr16
test
jmp
leave
call
nop
push
jmp
jmp
add
mov
add
mov
push
mov
and
pop
add
inc
addr16
inc
xchg
decl
jmp
call
call
call
nop
call
leave
push
call
call
call
ret
jne
add
nop
cmpl
nop
jmp
mov
jmp
nop
pop
call
nop
call
ret
int3
jl
pushl
dec
xor
dec
pop
jmp
dec
shr
add
shl
mov
mov
xchg
mov
mov
and
add
mov
add
addr16
mov
xchg
add
xor
or
mov
jmp
imul
and
xchg
mov
xchg
ret
jmp
ret
leave
jmp
jmp
push
add
add
add
test
loope
dec
and
sub
xchg
mov
xchg
mov
addr16
jmp
jmp
inc
sar
decl
jmp
pop
call
inc
call
inc
jne
xor
pop
test
jmp
call
call
jmp
ret
call
push
inc
jmp
pop
sbb
xor
mov
xor
shl
mov
mov
or
mov
rep
jmp
ret
ret
push
call
call
call
jmp
pop
jmp
call
nop
add
xchg
jmp
movb
addr16
incl
nop
jmp
mov
jmp
inc
call
leave
call
nop
jmp
call
nop
nop
nop
leave
jle
jmp
mov
jmp
int3
call
dec
call
call
push
inc
jmp
call
pop
call
call
jle
shl
and
xor
add
mov
mov
addr16
andl
xchg
add
nop
mov
mov
test
jmp
jmp
dec
jmp
jmp
pushl
xchg
push
jmp
ret
call
call
ret
call
addl
pushl
xchg
push
jmp
push
jmp
jmp
push
xorl
call
push
pop
sub
xor
pop
mov
sub
sub
pop
leave
jmp
call
push
push
int3
jmp
push
inc
ret
jmp
dec
call
nop
jmp
inc
nop
jmp
ret
add
add
add
out
inc
and
dec
mov
lea
jmp
push
leave
call
call
int3
call
ret
pop
push
mov
push
jmp
ret
ret
call
push
nop
xorl
push
jmp
leave
leave
push
leave
pop
leave
subl
push
add
or
ror
or
add
pop
jmp
jne
add
and
pop
inc
or
sub
add
or
mov
mov
xchg
add
xchg
and
mov
add
or
xor
pop
mov
dec
inc
add
pop
jmp
pushl
addr16
jmp
je
mov
xchg
xor
or
mov
movsbl
jmp
int3
jmp
jmp
call
push
dec
jmp
pop
int3
call
rol
jmp
push
pop
push
jmp
jmp
ret
call
leave
dec
leave
dec
dec
xor
addr16
incl
mov
jmp
push
xchg
call
mov
push
jmp
ret
jmp
ret
call
addl
sub
mov
sub
pop
pushl
shl
pop
xor
xchg
jmp
leave
jmp
leave
push
call
jmp
call
inc
inc
leave
ret
jmp
dec
nop
leave
jmp
leave
push
dec
jmp
add
add
add
xor
and
and
add
add
mov
shr
inc
and
mov
add
xchg
call
mov
jmp
movzwl
jmp
pop
push
call
inc
dec
dec
call
call
call
nop
push
jmp
jmp
and
mov
shl
dec
mov
movzbl
jmp
call
call
push
pop
call
leave
nop
inc
pop
incl
xchg
xor
mov
inc
nop
add
sub
mov
jmp
or
mov
add
nop
jmp
push
jmp
push
call
addl
push
xchg
pushl
and
push
and
push
ror
shr
mov
ror
xor
pop
sub
and
or
or
dec
test
jne
pop
pop
call
cmp
mov
jne
rorl
jmp
jmp
dec
call
ret
nop
add
mov
dec
jmp
dec
call
push
call
nop
call
push
jne
jmp
rol
or
or
pop
push
jmp
jmp
inc
inc
call
push
call
addl
pushl
mov
call
xchg
mov
mov
shl
mov
mov
addr16
call
xchg
jmp
incl
mov
add
mov
cmp
nop
mov
jmp
call
call
call
jmp
call
dec
jmp
and
mov
inc
xchg
inc
addr16
jmp
add
nop
dec
jmp
call
call
push
push
push
call
call
leave
leave
leave
pop
dec
jne
test
jmp
call
jmp
inc
call
push
push
pop
jmp
call
push
call
dec
mov
jmp
jmp
call
push
jmp
push
inc
pop
jle
ror
jmp
call
call
call
jmp
jmp
call
jmp
and
xor
shr
add
rol
mov
mov
xchg
test
jmp
jmp
call
inc
call
call
push
inc
call
call
inc
pop
mov
jmp
push
push
leave
jmp
push
jmp
call
push
nop
jmp
jmp
inc
jne
jmp
mov
mov
xor
mov
or
mov
shl
or
add
xor
and
add
jmp
jl
push
rol
xor
and
pop
add
add
add
pushl
nop
pushl
add
add
inc
ror
pop
mov
sub
mov
add
xchg
call
mov
mov
mov
mov
pop
push
jmp
call
int3
addl
jmp
shr
jmp
inc
push
push
jmp
int3
call
ret
call
pop
push
je
test
jmp
call
jmp
call
inc
push
dec
inc
push
push
int3
nop
push
call
push
leave
ret
je
rol
xor
and
and
mov
jmp
xor
mov
add
push
pop
dec
jmp
ret
dec
jmp
jmp
call
push
int3
jmp
push
jne
add
and
or
sub
inc
pop
inc
ror
and
pop
leave
jmp
call
push
leave
int3
push
call
nop
ret
jmp
push
push
push
jmp
call
leave
pop
call
ret
add
add
add
enter
dec
sbb
add
call
cmp
xchg
je
incl
mov
inc
mov
cmp
mov
jl
xor
nop
jmp
test
orb
dec
or
pop
ror
rol
and
sub
pop
mov
pop
leave
jmp
dec
jmp
call
leave
ret
ret
leave
push
push
push
inc
inc
ret
jmp
push
leave
call
call
push
add
add
add
and
loopne
dec
fidivs
inc
cld
movzwl
jmp
jmp
call
ret
jmp
int3
mov
addr16
add
nop
add
or
rol
pop
and
and
rol
sub
and
pop
jmp
ret
scas
fdiv
movsb
jmp
jmp
inc
call
call
call
push
pushl
mov
call
mov
jmp
pushl
nop
call
xchg
jmp
and
mov
mov
sub
mov
mov
xchg
incl
xchg
dec
addr16
mov
jmp
jmp
nop
jmp
pop
inc
call
call
jmp
int3
call
call
leave
leave
jmp
ror
add
mov
pop
leave
jmp
inc
jmp
call
call
call
push
call
inc
ret
jmp
call
jmp
push
push
jmp
push
int3
inc
add
add
add
fucomi
mov
jmp
leave
or
mov
ror
xor
mov
shl
shr
mov
test
jmp
call
call
call
push
call
push
call
push
push
push
call
call
int3
je
add
and
sub
and
add
xor
mov
add
addr16
jmp
add
sub
shr
xor
and
mov
sub
mov
sub
sub
inc
mov
mov
mov
call
nop
mov
addr16
jmp
jne
jmp
mov
xchg
mov
nop
nop
nop
nop
nop
nop
jmp
call
mov
test
jmp
call
push
push
nop
ret
jmp
push
call
pop
jne
cmp
addr16
jne
lea
jmp
call
inc
dec
call
pop
inc
push
call
jmp
call
push
inc
leave
call
mov
test
jmp
push
pop
call
nop
int3
pop
call
ret
call
jmp
push
jmp
sub
xchg
jmp
or
ror
xor
mov
sub
push
pop
shr
jmp
ret
call
call
call
jmp
call
jmp
push
jmp
mov
data16
xor
ror
mov
and
shl
mov
pushl
ror
xor
add
and
pop
rep
jmp
pop
call
call
call
push
pushl
xchg
call
xchg
jmp
mov
jmp
dec
call
call
push
inc
call
jmp
nop
lea
jmp
push
call
call
leave
call
mov
jmp
jmp
push
jmp
call
call
push
call
jmp
ret
call
dec
jle
mov
mov
jmp
push
mov
push
addr16
call
nop
or
or
shl
shl
ror
mov
shr
add
mov
test
jmp
pop
nop
pop
push
call
push
pop
call
jmp
inc
call
push
push
call
jmp
push
nop
je
mov
mov
jmp
call
mov
add
enter
adc
aas
aas
call
and
mov
movzwl
jmp
pop
jmp
jmp
ret
call
dec
and
dec
ror
mov
jmp
leave
pop
cmp
cmc
jns
testb
iret
sub
xchg
jmp
and
mov
cmp
xchg
jne
and
mov
add
push
pop
add
mov
add
mov
add
inc
shl
add
shl
mov
jmp
add
xchg
sub
mov
jmp
xor
or
mov
sub
xchg
shr
jmp
leave
nop
jmp
jmp
call
ret
call
dec
jmp
call
leave
test
jmp
jmp
inc
call
call
dec
jmp
xchg
mov
shl
mov
mov
mov
incl
xchg
dec
mov
mov
jmp
call
call
push
call
push
leave
call
nop
jmp
dec
jmp
mov
lret
addl
mov
decl
jmp
nop
push
call
push
push
inc
push
push
nop
push
jmp
lea
jmp
call
inc
call
leave
push
call
push
mov
jmp
jmp
pop
call
jmp
jmp
jmp
call
call
int3
jmp
cmp
popa
jne
jmp
sub
nop
nop
nop
nop
nop
nop
jmp
dec
xchg
dec
nop
xor
mov
movzbl
jmp
call
jmp
int3
push
ret
call
int3
inc
shl
jmp
call
ret
pop
call
int3
jmp
ret
push
jmp
call
call
pop
call
call
inc
add
nop
incl
nop
jmp
jne
jmp
stc
cs
jle
mov
xchg
mov
add
mov
movzwl
jmp
push
call
jmp
ret
jmp
push
push
ret
push
nop
call
ret
jmp
and
inc
xor
mov
and
mov
cmp
nop
jmp
into
or
add
xchg
cmpl
mov
jne
jmp
jne
and
addr16
add
nop
add
nop
add
addr16
xor
and
add
addl
mov
decl
jmp
jmp
nop
int3
jmp
call
dec
push
inc
pop
push
jmp
lea
jmp
call
call
ret
push
pop
jmp
ret
ret
call
push
sub
shl
mov
call
xchg
cmp
xchg
jb
inc
mov
cmp
push
pop
nop
nop
nop
nop
nop
jb
inc
nop
cmp
xchg
jmp
in
or
jmp
mov
push
pop
mov
xchg
mov
mov
mov
add
mov
push
jmp
ret
call
call
call
int3
addl
mov
xor
dec
mov
jmp
jne
add
xchg
cmpl
mov
jne
call
push
pop
mov
addr16
mov
xchg
mov
push
pop
add
mov
jmp
jae
inc
mov
inc
mov
test
jmp
dec
nop
call
push
push
pop
push
call
push
call
ret
je
inc
mov
or
or
dec
and
mov
sub
push
pop
mov
nop
jmp
repnz
out
sti
fdivr
jmp
mov
push
pop
push
jmp
nop
jmp
push
addl
shr
mov
mov
mov
call
xchg
or
mov
jmp
add
push
inc
push
push
push
jmp
call
xorl
rol
sub
shr
mov
call
mov
jmp
incl
xchg
dec
push
pop
mov
jmp
ret
inc
inc
int3
int3
jmp
pop
call
inc
ret
push
jne
mov
nop
xor
mov
jmp
test
jmp
push
jmp
jmp
inc
call
push
nop
call
dec
call
pop
jmp
push
push
push
push
call
inc
call
push
jmp
call
call
jmp
ret
pop
jmp
call
ret
jmp
push
push
push
call
jmp
ret
int3
mov
jmp
push
call
call
inc
je
rol
xor
mov
add
xchg
jmp
ror
add
mov
jmp
jmp
clc
mov
push
jmp
push
inc
subl
jmp
fdivp
or
add
mov
jmp
rol
shl
or
add
dec
mov
call
nop
inc
mov
test
jmp
call
ret
jmp
pop
call
int3
call
push
pop
jmp
push
push
call
jmp
jmp
pop
call
push
call
push
leave
leave
pop
jmp
call
call
leave
nop
push
call
call
call
inc
call
dec
call
jmp
add
stos
inc
addr16
jmp
and
rol
or
or
mov
add
mov
mov
jmp
stos
add
xchg
call
push
pop
jmp
lahf
sahf
sti
mov
jmp
pop
call
inc
int3
dec
jmp
call
call
call
push
call
leave
jmp
or
nop
incl
xchg
incl
nop
mov
xchg
xor
mov
cmpl
xchg
je
xor
add
mov
dec
sub
and
shr
pop
jmp
push
xor
mov
mov
jmp
leave
int3
ret
jmp
push
call
leave
call
call
call
nop
int3
jmp
je
pushl
sub
and
shl
pop
add
nop
jmp
xor
and
add
xor
mov
add
addr16
push
nop
jmp
sub
mov
rol
inc
mov
pop
mov
mov
and
and
pop
ret
jmp
call
leave
jmp
jmp
jmp
call
leave
add
add
add
test
add
add
clc
xor
mov
test
jmp
nop
pop
nop
push
pop
call
jmp
int3
dec
push
push
push
jne
dec
sub
sub
shr
mov
pushl
sub
add
pop
jmp
or
call
nop
cmp
xchg
mov
jmp
pop
pop
jmp
pop
call
call
call
call
push
je
rol
mov
or
mov
test
jmp
pop
jmp
jmp
inc
dec
call
pop
call
push
call
call
push
jne
or
add
mov
mov
jmp
mov
imul
pop
cmp
push
pop
add
addr16
jmp
jns
movzwl
jmp
push
call
call
leave
leave
jmp
push
jmp
pushl
or
and
pop
or
mov
mov
add
mov
add
xchg
add
mov
jmp
jns
movzwl
jmp
call
call
jmp
dec
push
push
pop
call
call
int3
nop
nop
nop
nop
nop
jmp
shl
or
xor
mov
add
mov
add
mov
push
addr16
pushl
mov
call
mov
mov
xchg
add
nop
jmp
jmp
shr
and
and
add
add
nop
add
mov
push
push
pop
pushl
xchg
call
xchg
nop
nop
nop
nop
nop
mov
nop
add
mov
add
addr16
mov
mov
test
jmp
push
jmp
call
call
push
inc
call
jmp
call
jne
add
xchg
cmpl
nop
nop
nop
nop
nop
nop
jne
jmp
add
add
mov
test
jmp
call
dec
leave
jmp
int3
call
dec
pop
jmp
leave
push
call
push
call
call
jne
add
mov
jmp
stos
and
xlat
incl
xchg
and
sub
shl
and
and
mov
push
dec
pop
add
add
shl
ror
mov
and
pop
shl
inc
pop
jmp
fadd
test
jnp
add
call
mov
mov
mov
mov
add
mov
jmp
fs
fldt
pop
and
pop
mov
mov
cmp
nop
jne
mov
dec
xor
sub
shl
and
add
add
xchg
mov
xchg
jmp
xchg
test
pushl
shr
and
add
mov
shr
pop
sub
pop
and
or
sub
xor
pop
sub
add
or
mov
pop
jmp
pushl
xor
shl
rol
pop
add
nop
leave
jmp
call
jmp
call
inc
ret
jmp
int3
jmp
jmp
jmp
push
pop
push
nop
ret
call
add
add
add
inc
sbb
fisttpl
test
xlat
ljmp
rorl
add
shlb
mov
mov
sub
mov
mov
add
xchg
leave
jmp
call
ret
call
jmp
call
jmp
leave
ret
jmp
push
pop
call
call
out
out
sbb
decl
lods
stos
js
mov
je
push
arpl
in
jmp
lret
mov
adc
mov
xor
lret
ja
jbe
push
ret
or
into
mov
cli
sub
and
stos
xchg
mov
and
call
and
or
mov
mov
leave
sub
dec
dec
mov
outsb
mov
cwtl
xchg
dec
pop
cli
mov
pop
push
mov
xchg
jbe
out
repnz
shrl
push
cmc
jns
push
ret
leave
adc
call
dec
divb
cli
mov
sarl
test
dec
aas
lods
ds
into
push
leave
mov
push
pop
push
jne
gs
mov
iret
js
mov
imul
addr16
jmp
mov
xorl
pop
faddl
push
gs
dec
dec
xchg
adc
lcall
mov
push
sahf
or
mov
cmp
mov
push
jae
in
jns
test
mov
inc
xchg
stos
jbe
divps
mov
xor
and
lcall
inc
fwait
push
pop
xchg
stos
pusha
jno
popf
dec
sar
dec
lret
sub
dec
in
inc
mov
loopne
lret
dec
loop
adc
xor
jae
jp
nop
pop
pop
bound
pop
pop
xchg
popa
mov
ss
ret
lcall
xchg
xchg
imul
hlt
bound
nop
inc
shrl
xchg
jbe
pop
jno
fwait
xchg
cli
sbb
mov
mov
sbb
xchg
lods
sub
xor
fiadds
jmp
imul
pop
push
xchg
or
subl
out
jl
int3
push
dec
iret
mov
sbb
push
aam
sub
xchg
push
iret
adc
mov
sub
xchg
xor
adc
iret
lret
mull
jmp
iret
movsb
jl
mov
les
fists
pop
pop
cmc
cmpsl
jnp
mov
mov
mov
inc
xchg
mov
pop
mov
ret
push
iret
lcall
add
mov
sbb
pusha
int
dec
test
leave
cld
mov
cmc
push
in
lds
jns
push
push
xor
sub
jl
push
ljmp
or
pop
and
in
fistps
mov
inc
mov
dec
lahf
mov
ljmp
pusha
xor
imul
and
and
lcall
and
inc
push
rclb
push
push
in
pop
push
mov
mov
es
sub
mov
mov
ror
sbb
or
cmp
push
nop
add
movsl
push
pop
push
ret
dec
cmc
or
hlt
or
lret
mov
arpl
push
push
dec
or
sub
popa
iret
into
outsl
push
pop
test
sahf
pusha
pop
push
fsubr
in
adc
sbb
lret
sahf
nop
in
and
daa
sub
pop
aam
push
pop
in
cwtl
jmp
rcr
in
mov
xchg
or
push
inc
pop
test
dec
outsl
repz
push
popa
flds
dec
cs
divl
or
repnz
test
test
mov
mov
add
imul
ficoms
lods
ljmp
fwait
lock
inc
sub
shrl
or
loopne
jmp
out
ror
aaa
andb
inc
int3
imul
jnp
xchg
hlt
shl
and
adc
fisubs
mov
xchg
lods
inc
std
les
dec
push
mov
adc
push
mov
lods
mov
lds
lahf
aaa
lret
jae
fldenv
imul
cmpsb
inc
push
test
lock
test
scas
push
gs
pop
insb
popf
pop
int3
mov
dec
shll
mov
mulb
testb
mov
fildll
lods
mov
cmp
jae
mov
adc
push
pop
and
add
aas
lret
pop
push
mov
ret
aad
test
and
pop
nop
imul
hlt
and
fdivl
pop
pop
xor
sub
inc
outsb
pop
lea
insb
pop
stos
xchg
adcl
inc
mov
dec
clc
ds
imulb
call
or
xchg
mov
sub
in
sbb
add
je
shlb
xchg
pushf
clc
or
nop
or
pop
xchg
cld
mov
inc
mov
and
lret
lods
mov
icebp
xchg
xchg
movsw
inc
pop
dec
lret
popa
jb
sar
test
fwait
mov
cmpsb
lock
add
mov
std
fmull
mov
xchg
pusha
int3
or
idivl
cmpsl
lds
lret
outsl
mov
movsl
push
pop
xor
shrl
mov
fsubrl
mov
xchg
mov
xchg
bound
std
jle
addr16
mov
push
test
add
inc
add
cli
movsb
or
int3
sbb
pop
inc
mov
sahf
fstl
and
jg
sbb
sbb
cmp
push
push
je
lret
jne
ret
popf
lret
imul
mov
push
out
mov
push
sbb
jb
aas
stc
dec
popa
hlt
pop
jns
and
sbb
and
int
les
xor
pmulhuw
rcrb
sti
jbe
mov
ds
jo
dec
jae
shll
mov
stos
push
aaa
sub
sbb
ffreep
imul
dec
or
addl
iret
jbe
push
adc
repnz
insl
bound
fcmovnb
mov
adc
mov
cmp
imul
shlb
sahf
adc
popf
sahf
lahf
out
lret
cli
scas
aas
aam
and
les
fucomp
lcall
jle
xor
test
fwait
and
int3
fbstp
popa
ja
xchg
dec
mov
imul
test
jp
test
arpl
dec
insl
mov
ds
cltd
xor
pop
or
jmp
cmc
fldcw
sub
ljmp
lret
loopne
or
mov
xchg
mov
jnp
pop
stos
push
fucomi
or
adc
mov
loope
js
stos
sub
mov
negb
fistps
lods
push
or
xchg
pop
add
dec
test
jae
sahf
sub
shr
or
jge
lds
adc
add
daa
push
int3
or
jg
movsl
or
cmp
add
jmp
repz
inc
pop
sub
mov
and
adc
xor
imul
inc
add
add
fcmovne
xor
stos
inc
std
nop
jecxz
pop
jmp
push
popf
xor
enter
push
test
sahf
fildl
and
das
stos
mov
lock
movsb
lahf
fwait
addr16
jnp
inc
addl
jmp
sahf
scas
jnp
hlt
xchg
out
shrl
ja
lret
push
sbb
jnp
fwait
lret
mov
std
lret
ret
cmpl
pop
adc
notb
mov
add
push
xor
js
fwait
popf
jno
std
flds
lahf
mov
mov
das
inc
push
aaa
nop
out
push
les
xchg
into
incb
stos
jne
xor
mov
xchg
pop
imul
mov
aam
xor
xchg
cwtl
movsl
subb
sbb
jno
xchg
pop
mov
cmp
xorl
fsts
clc
xchg
cwtl
jnp
sbb
stc
inc
scas
add
dec
aaa
cltd
in
pop
idivl
cli
add
enter
in
mov
mov
mov
daa
mov
or
in
sub
dec
mov
mov
shlb
xchg
sbb
iret
lahf
lods
xchg
or
popa
adc
movsl
mov
dec
into
fdiv
cli
xor
or
push
testl
inc
scas
enter
cwtl
into
or
pop
xchg
popw
in
pop
inc
lea
and
jno
adc
in
mov
in
jmp
fadds
and
shl
cs
push
or
push
adcb
mov
lcall
daa
add
cmp
sub
pop
xchg
scas
lret
push
jbe
sub
mov
pop
in
lds
lret
sub
push
and
xchg
ljmp
mov
ss
rorb
jl
cmpsl
loopne
cmp
sub
outsl
xor
pop
mov
sub
add
cwtl
jmp
sahf
mov
jo
pop
add
fdivl
jmp
xor
lret
inc
das
sbb
fstpl
clc
push
mov
sbb
push
fsts
rcrb
stos
mov
push
divb
pushf
add
jmp
ds
shll
fsubp
dec
push
cmpsb
jnp
clc
xor
addl
and
lods
sbb
arpl
dec
jne
fbstp
test
sub
es
cld
out
clc
in
pop
xchg
test
hlt
mov
js
adc
movsl
mov
jg
cmp
ljmp
mov
or
add
movsb
aas
dec
adc
sbb
js
pushf
addb
add
outsl
xlat
cmp
ja
in
mov
jp
cmpsb
dec
imul
bound
mov
out
movsb
dec
stos
cmp
pop
jb
sub
push
bound
sbb
aam
push
mov
dec
cld
fcoml
sbb
test
mov
int
jne
push
cmp
cltd
negl
xchg
mov
clc
aaa
inc
int
jl
xchg
ja
in
stos
cmpb
nop
jecxz
aam
pop
mov
xchg
psllw
mov
pop
cs
add
loop
xor
jae
call
adc
int3
mov
fidivs
dec
add
dec
je
insb
shll
add
cmp
test
add
out
push
pop
shll
sub
xor
cmp
in
into
jg
sbb
nop
jno
negl
jnp
daa
stos
cmp
dec
jge
imulb
ret
enter
incl
das
aam
loopne
fld
sbb
jnp
gs
cmpsl
sub
adc
xchg
xchg
cmp
push
into
pop
xchg
sbb
divl
sbb
sbb
xor
inc
push
mov
pop
push
sub
or
xchg
jmp
sar
test
sbb
mov
adc
mov
add
popf
sbb
pop
out
mov
inc
jge
aam
pop
jno
jmp
jbe
sub
sbb
dec
push
lods
push
xor
fnsave
jae
fstpt
aas
cli
movsb
push
mov
js
ja
inc
push
xchg
xchg
dec
adc
jnp
lea
pop
out
jge
mov
ds
jge
and
cltd
push
mov
mov
es
push
mov
jne
out
jle
insb
cs
push
jnp
sub
add
call
es
jmp
lea
pop
daa
or
lods
xchg
sub
pop
push
inc
pop
ljmp
mov
movsl
stos
into
ret
std
jns
lcall
inc
loope
xchg
aaa
cmpsb
mov
out
dec
scas
inc
cli
sbb
mov
fnstenv
fwait
cld
jns
aad
aam
insb
daa
pop
add
xorl
decl
lods
xchg
push
mov
cmp
sbb
cs
jns
dec
pop
pop
lea
xor
lcall
and
test
pop
fcompl
and
and
push
fisttpl
jl
lds
and
sbb
frstor
jecxz
mov
xchg
sti
les
aaa
fldl
addr16
icebp
rcll
sarb
jl
js
sub
outsb
dec
test
pop
push
sub
mov
in
cmpsl
ds
movsl
out
hlt
lods
fistps
cli
inc
sub
pop
orb
shrd
jl
jae
jle
lds
iret
sub
icebp
adc
int
push
cli
cld
pushf
lret
ret
clc
movsl
ja
js
mov
mov
lods
clc
push
sub
dec
or
mov
in
jo
pop
imul
ds
shrl
cmp
movsb
js
outsl
pop
dec
ret
xchg
cmp
dec
inc
pop
ljmp
xchg
pusha
loope
jo
dec
loope
lcall
ror
inc
sub
and
shrl
xor
call
cwtl
call
fildll
mov
sbb
xor
out
bound
mov
loope
ret
pop
xor
sbbl
mulb
xchg
sub
shlb
into
sub
push
pusha
add
lcall
inc
insb
sub
mov
aad
iret
and
in
dec
cmp
andl
mov
es
scas
insl
lock
push
jecxz,pn
imul
ss
sbb
add
rorb
fwait
inc
gs
adc
lahf
jne
pop
call
aas
stos
ljmp
cmpsb
inc
test
jae
mov
rolb
mov
int
mov
hlt
add
add
aas
cmp
dec
inc
jl
lods
pop
test
shrb
aas
cmp
push
enter
outsl
out
pop
add
enter
push
pop
adc
imul
dec
jge
not
inc
push
ja
popf
sub
sbb
add
xor
adc
xchg
scas
in
sahf
ss
dec
fwait
dec
and
hlt
xchg
or
mov
fstpt
aam
in
jae
imul
xor
and
je
imull
das
mov
outsl
mov
jp
sbb
inc
gs
cmp
mov
mov
popa
jmp
mov
cmp
jae
xchg
cmc
or
sbb
std
shll
jecxz
fmull
arpl
lcall
imul
test
jnp
jmp
js
inc
in
outsb
je
fstl
add
clc
or
and
jbe
jmp
imul
addb
mov
cli
int
lods
cld
ret
pop
sbb
xor
pushf
dec
outsb
sub
or
push
and
lret
cld
push
xor
sbb
or
push
pop
pop
js
insl
stc
inc
unpcklps
add
subl
push
or
xchg
cmc
sbb
stos
xor
cmp
mov
cmpb
ljmp
mov
jb
je
mov
pop
sub
lret
fnsave
xor
fisttpl
es
add
cltd
je
sbb
inc
cmp
mov
loop
js
mov
jb
cwtl
cmpsb
out
adc
mov
dec
ljmp
mov
mov
fistps
xchg
push
add
call
jecxz
mov
push
leave
inc
ja
adc
lcall
and
sub
add
addr16
mov
or
mov
jnp
pop
jecxz
popf
adc
xlat
inc
xchg
pop
cmp
push
nop
test
push
inc
aam
jae
mov
leave
jmp
sub
pop
in
out
sub
fsubrl
fcoms
push
ljmp
pop
fiaddl
xor
ret
ficomps
lods
add
xchg
cmpsb
mov
mov
or
movsl
mov
mov
insb
icebp
data16
rorb
shlb
and
mov
inc
data16
mov
inc
andl
or
gs
insl
mov
sub
aam
out
cmp
jo
mov
mov
xor
push
jo
add
lds
or
mov
adc
push
adc
push
push
ss
push
test
int
fs
data16
inc
faddl
mov
pop
stos
insb
inc
sbb
sub
in
fwait
das
rorl
fildll
adc
fnstsw
jmp
outsl
pushl
mov
xchg
adc
adc
fucomp
pop
test
daa
and
jno
shrl
lods
pop
xchg
mov
add
sub
mov
xor
and
cmp
stos
movsl
adc
xchg
push
jnp
loopne
leave
test
lcall
xchg
movsl
cmc
stos
jne
push
adc
push
das
mov
leave
xchg
xchg
xchg
shlb
outsl
popl
jecxz
sub
cmpsl
arpl
and
and
std
test
adc
mov
xchg
push
or
repz
add
adc
je
idivb
add
adc
xor
div
mov
mov
cmc
iret
push
fcmovnu
iret
dec
fnstsw
rorl
or
pushf
shl
cwtl
add
or
int
or
fdivp
or
lea
cmp
or
cmp
jb
movsl
xor
xchg
dec
fs
mov
pop
pop
imul
pop
fwait
and
ja
loopne
out
push
aaa
orl
jmp
mov
popa
nop
and
push
mov
stc
or
jno
push
fistps
mov
ret
mov
mov
push
ds
cli
pop
pushf
popa
sub
dec
inc
insl
sti
pusha
imul
loope
or
jne
mov
cwtl
push
loop
insb
scas
add
stos
mov
mov
inc
xchg
daa
mov
movsb
pop
sub
add
mov
mov
mov
jnp
imul
push
or
fcomps
pop
cmp
sbb
inc
lods
sbb
test
xchg
mov
sbb
ss
adc
pop
mulb
jns
scas
icebp
ret
mov
jns
test
ret
and
out
mov
sbb
andl
jne
jmp
cmp
inc
clc
mov
out
pop
in
cmc
xor
nop
fisttpl
push
sbb
jne
mov
hlt
xchg
mov
mov
cltd
push
jae
jns
pushf
xchg
cmc
inc
jg
fwait
jo
int
popa
in
mov
xchg
out
cmp
push
ds
loope
pop
rorb
mov
into
mov
pop
repz
roll
ficoms
push
fsubrs
dec
jl
dec
adc
clc
je
fwait
sbb
add
sub
mov
mov
inc
xor
jp
out
push
or
add
lret
lock
or
push
insl
dec
enter
push
xchg
xor
int
jle
xor
adc
enter
call
jbe
inc
dec
or
adc
mov
cmp
xor
stc
arpl
ss
lock
sarb
int
jmp
mov
icebp
jo
fwait
imulb
lock
mov
xchg
mov
rcr
mov
push
daa
push
adc
popf
jb
fdiv
fstpl
sub
cmc
andb
es
xor
cmp
add
icebp
cmp
mov
xor
lcall
add
jmp
lock
sbb
and
jne
or
subb
sub
xchg
das
lods
cmp
lret
mov
mov
outsb
mov
pop
movsl
xor
outsl
test
push
jmp
mov
push
push
test
repz
xlat
inc
cmp
arpl
fsub
sub
jae
lcall
or
jg
test
inc
les
xchg
xor
mov
inc
scas
ljmp
mov
imul
andb
scas
pusha
jecxz
xchg
push
outsb
sbb
addr16
lret
movsl
aam
out
dec
es
and
test
imul
addl
xor
orb
xchg
pop
inc
push
or
adc
loope
adc
addr16
or
jl
xor
and
mov
pop
fs
inc
out
inc
ljmp
push
mov
sbb
shl
les
push
dec
lods
lret
mov
aad
loope
adc
adc
cmp
pop
imul
loope
xchg
sbb
popa
mov
in
mov
out
and
sub
lds
cltd
jmp
jecxz
subl
cmp
xchg
pop
cmc
repnz
or
decb
mov
int3
pushl
and
adc
insb
inc
iret
test
inc
repnz
cmp
adc
push
or
dec
dec
mov
inc
lret
clc
cwtl
inc
inc
out
cltd
inc
fwait
mov
and
sti
nop
jb
scas
mov
popf
test
push
adc
mov
push
jl
aad
das
arpl
ljmp
add
loop
scas
das
scas
icebp
add
fs
int3
xlat
mov
in
inc
call
xchg
push
addb
jae
loop
dec
mov
push
adc
push
test
or
imul
push
mov
jmp
mov
clc
mov
sbb
mov
mov
dec
leave
pushf
inc
jns
push
adc
mov
push
aad
adc
mov
push
xor
xchg
jns
sbbl
das
xlat
jae
outsb
jge
jae
mov
mov
jle
ss
les
inc
out
popa
aam
rorb
rcll
add
xchg
cmc
repz
pop
daa
dec
mov
pushf
daa
in
sub
mov
adc
mov
sbb
dec
repz
or
adc
jns
inc
xor
in
std
movsl
sti
xchg
outsb
data16
lds
sub
das
cwtl
mov
lea
mov
xchg
and
mov
stos
insb
adc
aas
jne
and
mov
add
int
sahf
dec
mov
stos
adc
roll
add
mov
loopne
add
jnp
movsb
sahf
jle
xchg
mov
lods
push
xchg
aas
notb
lahf
das
xor
sub
and
or
mov
mov
es
inc
fstps
push
dec
repz
fimuls
filds
add
add
xchg
fldt
cmp
sbb
dec
inc
loope
rorb
loopne
push
ret
add
mov
jo
or
jmp
push
jle
mov
in
lds
add
mov
dec
sub
push
push
filds
popf
fsubrs
call
jp
movsb
in
dec
mov
xor
fiadds
out
in
fwait
int3
xor
jb
sbb
inc
repnz
dec
ljmp
mov
jmp
outsb
hlt
outsl
dec
pusha
mov
jnp
mov
sahf
push
sahf
movsb
adc
test
lods
cmp
sar
cwtl
jge
scas
movsl
les
mov
cltd
and
outsl
addr16
xchg
ret
stc
clc
fsubl
lock
sti
add
pop
fcomps
adc
sbb
sbb
and
adc
mov
movsl
rolb
push
lcall
pushf
hlt
inc
pop
xchg
repnz
lahf
fidivs
fst
repz
roll
mov
cs
add
xchg
lock
sub
mov
jo
dec
sub
inc
xchg
popa
mov
push
adc
mov
inc
sub
ss
insl
xchg
iret
les
notl
xlat
xchg
pop
mov
lods
mov
pop
xor
fistps
inc
imul
ret
sub
lds
cltd
popf
or
push
mov
add
into
jne
shlb
clc
jnp
and
movsb
jle
out
dec
push
lret
jle
xchg
loopne
les
inc
xor
xchg
pcmpeqw
outsl
ss
xor
lahf
pop
xchg
fidivrl
sbb
arpl
fsts
mov
mov
cmc
fdivrs
cmp
or
push
jne
jne
movsl
xchg
in
ret
rcrl
cmpsl
pop
inc
jmp
repz
xchg
in
jbe
test
rcrb
cmc
test
daa
inc
test
cltd
cs
adc
repnz
lahf
fistpll
mov
adc
rorl
imul
mov
adc
mov
xor
sub
xchg
cmp
jmp
fnstsw
ret
aas
ss
stc
clc
daa
aam
sub
popa
sub
outsb
lds
sub
icebp
mov
xchg
xor
mov
dec
sahf
mov
shlb
add
pushf
mov
stos
movsb
testb
push
ljmp
xchg
pusha
inc
mov
in
mov
sbb
out
inc
jne
loopne
insl
xor
hlt
mov
bound
or
dec
aad
fwait
pushf
jne
lea
nop
xchg
cmp
cld
sbb
cmpsb
mov
fstpt
test
add
loopne
inc
inc
xor
adc
inc
test
inc
mov
xchg
lret
stos
cltd
scas
lahf
jb
sub
inc
jne
dec
nop
push
mov
and
stc
inc
push
fisubs
inc
cmpl
imul
insl
out
adc
mov
cmp
sub
dec
inc
pusha
lds
movsl
sbb
test
std
sub
cmp
leave
outsl
cmp
nop
add
fadd
fs
decb
js
loopne
mov
lock
mov
or
jbe
insb
in
push
push
add
adc
insl
pop
stc
sub
pop
jae
mov
loopne
pop
inc
mov
incl
xor
jns
sub
cmpsl
roll
cld
mov
pusha
fiaddl
push
pop
es
lcall
clc
jns
aas
mov
jp
push
shrl
push
add
ret
pop
mov
inc
int
xor
orb
lock
sbbb
orb
enter
or
cld
mov
test
or
aad
adc
int3
movsb
cltd
adc
scas
push
push
mov
jae
mov
fcompl
push
add
lods
adc
jmp
add
adc
sub
ret
xchg
jno
xlat
inc
iret
lret
jne
xchg
xchg
ss
ljmp
sarl
jno
and
cld
inc
and
dec
push
mov
or
cmp
lret
xor
pop
pushf
int
jne
ss
mov
ds
mov
fwait
inc
cltd
mov
ret
stos
lock
mov
xchg
push
jge
push
ljmp
pop
bound
scas
aad
inc
xor
sub
shr
in
and
andl
inc
push
ret
in
leave
and
or
mov
ljmp
test
mov
scas
push
orl
gs
mull
jge
lods
orb
fadds
rolb
push
cwtl
jae
sahf
jecxz
call
push
xchg
push
imul
ficomps
or
loopne
cmp
xchg
leave
je
daa
adc
dec
or
sub
out
shl
lret
add
jecxz
sub
cmp
add
pop
arpl
popf
outsb
int3
jl
repz
mov
fistps
lods
lods
test
or
jb
adc
mov
add
push
mov
push
loop
cmpsl
mov
mov
cs
cmp
push
nop
test
push
int3
out
pop
xorl
fnstenv
mov
mov
add
inc
adc
and
xor
cmp
xor
imul
jne
mov
mov
cli
int3
inc
mov
ds
imul
iret
xchg
je
push
pop
mov
nop
or
repnz
cmp
mov
xlat
push
cwtl
push
sbb
sbbl
dec
cmp
adc
push
lret
lds
into
arpl
pop
stos
pop
cld
sbb
icebp
or
and
sarl
xor
mov
fsts
rol
mov
cmpsb
sub
xor
aas
and
insb
and
and
push
jge
ljmp
cmp
adc
pop
sbb
cmp
push
mov
test
bound
gs
mov
mov
xor
add
cs
sub
mov
aam
xlat
mov
lahf
jg
popf
shl
repnz
andb
mov
fidivs
divb
movsl
jp
pushf
or
lret
ljmp
ds
xchg
jle
mov
insl
and
mov
mov
dec
shlb
mov
jbe
int
movsl
mov
push
aam
sarl
adc
pop
ljmp
inc
icebp
andl
mov
sub
xchg
push
push
sbb
push
popa
xchg
out
or
pop
jge
mov
imul
push
subl
mov
mov
push
fwait
stos
pcmpgtd
inc
fstpl
hlt
xchg
mov
jle
js
xor
pop
jne
xor
xor
leave
lret
sub
cmp
mov
mov
dec
mov
pop
xchg
fstp
mov
add
or
add
ret
and
lret
xchg
popa
fists
jnp
fisubs
mov
cmp
addr16
aam
and
je
inc
std
aam
ficoms
pop
mov
mov
adc
adc
mov
pop
mov
xchg
mov
ss
mov
imul
adc
cmp
xchg
mov
cmp
std
sti
lcall
test
xchg
cmpsb
mov
int
adc
hlt
clc
xchg
mov
inc
xor
shl
shl
not
cltd
jecxz
arpl
xchg
jecxz
xor
adc
rep
ja
data16
or
icebp
outsl
rcr
lret
inc
daa
xchg
mov
into
roll
jne
ja
xlat
call
arpl
bndldx
bound
aaa
push
pop
fldcw
add
dec
dec
js
mov
or
mov
scas
pop
cs
dec
sbb
add
dec
loop
sub
movsl
in
test
xor
stc
js
outsl
call
sub
out
sub
cmpsb
mov
imul
fs
insl
xchg
test
fnstsw
or
out
inc
cmp
adc
repz
jge
xchg
mull
nop
inc
fisubrs
loope
xchg
daa
leave
xor
hlt
arpl
jb
jne
inc
fmuls
ljmp
pop
push
lret
fildl
cmc
and
jge
int3
pop
pop
pop
sub
xchg
mov
jnp
mov
into
lea
add
mov
popa
sbb
xchg
loopne
cmpsb
inc
jno
fcomps
inc
mov
xchg
repnz
lret
scas
sub
inc
mov
xorl
aas
into
push
mov
rcrl
arpl
and
imul
movsl
inc
andb
stc
pop
lcall
mov
ds
std
lds
xor
popa
xor
int3
fld
pop
ja
movsb
pop
movsl
jne
rcrb
cmpsb
jae
shlb
sub
jp
cmpsl
and
test
jle
and
or
jne
gs
stos
outsb
fnsave
ja
cli
inc
movsb
cmpsl
push
add
inc
push
xchg
aaa
xlat
scas
inc
test
jbe
xor
add
and
dec
ret
js
cli
sbb
hlt
pop
sbb
push
cmc
mov
lahf
test
lahf
movsl
sbb
jnp
decl
pop
jle
push
xor
inc
sbbb
mov
mov
mov
out
inc
gs
fcmovnb
aas
enter
mov
mov
sub
stc
in
aad
jl
arpl
mov
shrl
or
es
lcall
iret
das
dec
jp
sub
mov
sbb
sub
fs
jo
inc
inc
or
stos
adc
cs
lds
ljmp
pop
inc
addr16
outsl
stc
mov
add
fs
test
mov
dec
stos
rclb
dec
xor
cmpsb
fldenv
frstor
cli
mov
mov
cmp
adc
loop
ljmp
adc
adcl
cli
xchg
fwait
mov
mov
dec
int
insb
repnz
sub
add
scas
add
inc
lahf
mov
jnp
xchg
mov
mov
cmp
test
lret
add
inc
loope
push
add
xchg
sub
lock
mov
pop
pop
adcb
dec
mov
fistpll
das
aas
int3
shll
lea
cmc
sbb
jnp
mov
imul
mov
xor
sub
stos
mov
aad
test
gs
orl
icebp
mov
xor
xchg
scas
push
iret
cs
push
inc
scas
cltd
pop
push
or
loop
fdivs
int
sti
dec
push
cli
aas
xor
bound
pop
sub
pushf
xchg
sbb
mov
jo
dec
inc
outsb
inc
cmp
ss
mov
cmpb
stos
lret
sbb
mov
mov
hlt
xor
jb
negb
and
jmp
fwait
pusha
dec
xor
scas
push
call
out
adc
sub
mov
outsb
pushf
sbb
popf
loopne
test
jg
and
mov
push
das
adc
jnp
sub
pop
das
mov
in
cwtl
shl
xchg
dec
popf
cmpsb
std
and
lock
add
mov
movsl
and
mov
lret
inc
cmp
pop
add
or
push
lods
movsl
and
cmpsl
in
mov
add
pushf
push
mov
inc
lret
movsb
sbb
inc
scas
test
int3
test
and
scas
shll
cltd
pop
dec
lds
sbb
loop
aas
stc
fsts
pop
divb
adc
rolb
mov
daa
and
sub
inc
lock
jb
cli
push
cmp
mov
and
mov
fstp
push
or
stos
or
dec
loope
xlat
inc
fwait
add
ja
jae
shrl
js
inc
inc
ret
and
sub
sbb
mov
int3
in
jmp
mov
pop
arpl
mov
inc
mov
mov
leave
sub
rcr
xchg
dec
pop
mov
std
je
popf
lcall
cmp
icebp
dec
lcall
cmpsb
cmp
outsb
and
dec
in
cli
aas
inc
dec
ss
add
insb
pop
jge
ds
inc
adc
mov
dec
stos
and
das
jno
shlb
movsb
sarb
loop
pop
cwtl
loope
je
jb
and
push
xor
leave
movsl
jae
dec
ljmp
scas
pop
push
or
push
arpl
inc
ret
outsl
xchg
incl
sbb
mov
xor
dec
cmp
incl
fildl
aad
out
stos
push
pop
jnp
es
or
lret
test
out
push
xor
fs
lods
pop
cwtl
or
cmc
dec
cmp
pushf
cmp
das
out
dec
mov
xor
into
xchg
cmp
push
or
loop
outsl
nop
test
insb
inc
insl
push
lcall
in
btr
out
cli
mov
adcb
pop
ret
stos
and
shlb
orb
and
or
stos
fisttpl
pop
dec
insb
adc
fdivl
or
mov
imul
and
sub
add
pop
outsb
jns
mov
jbe
daa
not
sub
iret
inc
mov
jl
xchg
lahf
cld
xchg
dec
add
add
and
mov
mov
test
jb
dec
push
pop
jns
dec
lods
mov
mov
mov
push
add
test
sub
rol
repnz
xlat
xchg
jecxz
std
ja
mov
cmp
push
xor
push
mov
fnsave
mov
call
push
adc
cmp
mov
aam
mov
push
jecxz
iret
lret
insb
xor
movl
inc
jne
dec
mov
pop
std
mov
sti
xchg
adc
pop
sub
out
shlb
sarl
test
fcmovu
imul
lret
lock
cmp
clc
das
xchg
jne
cmp
mov
push
into
and
sub
lods
mov
bound
dec
jne
rcl
cmp
imul
pop
mov
pop
or
and
push
pop
push
popf
inc
add
in
inc
das
sbb
sub
sub
mov
es
aaa
lock
pop
mov
jge
mov
inc
jno
jb
mov
in
ds
xchg
repnz
jg
lods
push
mov
test
das
dec
in
mov
push
mov
lods
pop
dec
pop
push
aad
cmpsb
test
adc
arpl
aaa
test
test
or
lods
repnz
daa
xchg
into
pop
adc
pop
mov
subb
mov
inc
rclb
push
and
inc
sub
aas
lea
add
repz
sbb
pop
sahf
mov
jb
jecxz
aam
cmp
jg
imul
int
test
mov
fldenv
push
mov
sbb
sbb
add
xor
dec
xchg
imul
in
sub
push
data16
adc
xor
xchg
fwait
jle
call
xchg
sbb
mov
xor
rclb
inc
scas
mov
cmp
repnz
test
pop
sub
mov
test
push
cmpb
xor
ds
lret
stos
mov
cltd
cld
sub
pop
dec
cmp
aaa
clc
aam
mov
adc
std
stos
aas
fmul
fiaddl
cmp
daa
out
in
push
mov
mov
mov
cmc
adc
lods
xchg
clc
inc
adc
in
or
push
enter
jbe,pt
int
and
jmp
divb
xchg
xchg
pop
pop
sub
lods
mov
xor
pop
cmp
loopne
data16
fwait
pop
mov
mov
jo
xor
sub
push
scas
mov
pop
mov
in
pop
and
dec
mov
sbb
push
pop
imul
jmp
pop
mov
jmp
test
cmp
or
stos
inc
cmp
mov
mov
sub
sarb
in
or
fs
mov
or
test
popf
aad
pop
repz
inc
mov
mov
pop
cli
int
rorb
pop
sbb
pop
adcl
mov
mov
mov
jb
mov
lret
cmp
mov
dec
fdivr
cmp
int3
mov
mul
and
scas
or
mov
pop
sub
emms
mov
sbb
adc
lea
pop
out
push
stc
jne
push
cmp
adc
lret
inc
mov
and
loop
dec
sarl
mov
xor
mov
xorl
in
dec
fisttpl
mov
aaa
xchg
sti
lds
push
mov
lret
sbb
cmp
sbb
push
sub
push
adc
inc
jle
jmp
icebp
mov
mov
cmp
arpl
cmp
aam
js
or
adc
out
xchg
mov
out
pop
jmp
add
mov
je
js
cmpb
dec
into
inc
add
cmp
mov
sub
sbb
pushf
cmpsb
inc
test
ret
cmpsb
rorb
mov
repz
cmp
xlat
out
sbb
ja
inc
call
xchg
frstor
rorl
sub
movl
pop
or
or
ret
dec
jbe
stos
cltd
xor
add
sahf
mov
or
push
lods
mov
jno
aad
js
dec
cmpsl
js
gs
sub
push
cmp
xchg
cltd
repnz
xlat
sub
mov
xchg
mov
loope
movsl
lods
dec
mov
jbe
sbb
in
pop
cmpsl
pop
sti
push
sub
and
pop
in
js
mov
aam
rcll
mov
push
push
dec
aad
mov
add
fldcw
mov
mov
pop
insb
sub
mov
inc
int3
jecxz
shl
mov
popa
xor
adc
and
and
add
fildl
pop
ja
and
add
lods
pop
loop
and
stos
js
stos
push
jns
pop
pop
cli
test
inc
xor
adc
mov
ficoms
add
lock
test
mov
ja
lods
lock
mov
stc
pop
adc
xor
enter
icebp
insl
aad
pushw
int3
pop
pop
fsincos
pop
out
or
call
mov
inc
and
out
fnstsw
fnstenv
or
xchg
add
movsb
mov
ret
in
mov
cmp
lret
cmpsl
cmp
andl
int3
sub
fsubrl
push
jne
push
and
xchg
dec
add
pop
adc
scas
and
add
fwait
and
roll
out
add
push
inc
popa
mov
dec
lock
hlt
aam
pushf
pushf
inc
sti
rcll
xor
test
mov
test
sbb
push
cmpsl
or
dec
sub
ret
xchg
or
push
int3
ret
lcall
mov
and
jp
pop
int
sbb
in
adc
inc
jp
cmp
daa
adc
dec
rcrb
pop
mov
mov
jg
div
xchg
vmwrite
and
arpl
leave
cltd
or
lret
shll
sbb
push
mov
push
movsb
subl
and
lcall
fsubl
cmp
xchg
insb
cmp
mov
popa
fs
ret
sbb
push
xchg
xchg
and
and
xor
mov
enter
rolb
cmp
mov
sbb
cmp
data16
cmp
jge
mov
adc
jp
loope
mov
dec
cltd
lock
xor
or
gs
push
cmpsl
ljmp
pop
pop
cmovge
cwtl
adc
loope
ja
push
cmp
jl
sbb
iret
test
cld
mov
dec
push
or
lcall
pop
push
roll
add
sbb
xchg
movsb
popf
int3
ret
fs
dec
lods
rcrb
je
push
jmp
dec
call
imul
mov
ret
push
mov
mov
stos
xor
mov
out
xor
movb
out
mov
pop
movsb
sahf
push
cli
mov
bound
fistpll
or
repz
ljmp
push
shrb
xor
je
or
cld
sub
inc
popf
mov
rolb
rcrl
dec
jecxz
jg
jle
std
ret
jae
jbe
jp
push
or
aam
shrl
data16
dec
xlat
mov
adc
pop
dec
dec
inc
stc
xchg
xchg
mov
pushl
scas
fdivr
push
in
scas
pop
lods
and
push
lcall
and
and
imul
aas
in
jns
cld
adcl
jp
jle
or
sub
fst
fwait
jnp
clc
adc
shlb
and
push
lds
daa
arpl
cmp
mov
sbb
dec
popf
lahf
pop
movsb
sti
inc
push
int
sbb
ljmp
pusha
div
fldt
inc
fbstp
lods
jnp
pop
cmp
adc
ja
xor
xor
fildll
mov
mov
in
sbb
lock
fidivl
shl
mov
add
pop
ret
std
sbb
jb
fucom
sub
fiadds
push
imul
jl
fstpt
xor
xor
sub
xchg
addr16
aas
popf
mov
mull
sti
lret
ljmp
pop
into
lret
jge
imul
pop
lret
inc
pop
in
ljmp
xor
jmp
mov
or
cmp
in
sbb
add
fdivr
lahf
sbb
jbe
adc
pop
mov
dec
xchg
pushf
xchg
and
into
int3
stos
bound
test
cmp
jp
in
and
mov
pop
mov
xchg
mov
xchg
xor
test
or
jg
sub
mov
add
arpl
jbe
mov
sahf
pop
jg
js
lahf
fsubrs
in
sbb
xchg
or
stc
mov
dec
mov
in
roll
rcrl
jle
es
repnz
iret
jg
jg
jg
xchg
or
mov
xor
add
add
lods
subl
mov
and
and
rcrb
push
and
ret
lock
int
pop
sti
xchg
sub
xchg
xchg
outsl
xchg
adc
pop
or
insb
les
scas
pop
movsl
pop
bound
rcr
jo
inc
xor
ds
hlt
and
sar
ja
cltd
div
sub
mov
cmc
loop
xor
ret
sub
sbb
cmp
and
psubw
repnz
aas
cs
test
cmp
pop
dec
pop
inc
test
cmp
lret
mov
mov
popa
out
dec
mov
imul
xor
lock
cmp
sbb
mov
mov
cld
pushf
jge
adc
mov
inc
cmp
mov
push
divb
push
or
ss
std
pop
mov
insl
sbb
stc
mov
pop
icebp
ss
sub
push
adc
aas
dec
mov
sub
pop
shlb
adc
inc
xchg
pop
fidivl
sub
add
bound
inc
xchg
fstpl
jle
jp
in
mov
push
cld
sbb
shlb
push
int
addl
ja
movsl
xor
pop
xchg
push
test
sub
leave
enter
dec
rcr
dec
addr16
sarl
mov
jl
sbb
popa
add
lahf
pop
mov
insl
inc
pusha
lods
fisubl
int3
ror
mov
jns
lahf
push
out
fisttps
mov
test
pop
mov
test
imul
mov
inc
out
fsubrp
inc
loop
or
cmp
and
fsubs
dec
xor
in
mov
clc
repnz
enter
sub
adc
jae
cmp
bound
pop
and
cld
pop
cld
pop
and
mov
add
or
out
rolb
lods
aaa
jnp
sbb
jbe
fadds
notb
jecxz
ror
mov
or
mov
les
leave
repnz
mov
in
mov
fcomip
movntq
out
lds
cltd
push
lods
xchg
out
xchg
mov
fs
mov
ss
push
nop
and
sbb
xor
mov
pop
hlt
xor
movl
jle
mov
add
idivl
aas
lcall
dec
push
push
mov
pop
fnstcw
xor
scas
adc
sbb
cmp
sub
imul
xor
inc
xchg
pop
lods
jg
fidivrs
dec
mov
mov
pop
shlb
xor
testb
mov
mov
sbb
lock
mov
aad
cltd
scas
mov
lret
xor
mov
insb
outsb
fildl
and
pop
lret
lock
inc
push
addl
enter
sbb
jp
pop
outsb
shll
nop
adc
jns
sub
dec
es
lea
loopne
or
mov
xor
xchg
inc
fistpl
outsl
jg
outsl
jae
icebp
mov
das
sub
add
insl
xor
fs
mov
inc
push
pop
adc
filds
dec
xchg
xlat
scas
ds
cmpsb
shll
xchg
dec
dec
mov
cmp
add
in
arpl
fisttps
cmp
in
mov
jg
jmp
mov
ret
mov
mov
in
jb
addl
popa
mov
out
imul
lock
lret
out
hlt
out
jg
jmp
dec
lret
add
shlb
lcall
pop
lahf
inc
push
cmp
add
dec
inc
xchg
jge
les
push
cld
lahf
and
loopne
decb
shlb
or
popf
pop
add
inc
scas
pop
call
outsb
jle
mov
mov
mov
lods
and
test
div
mov
es
sti
lret
adc
aas
out
xchg
push
adc
sbb
mov
lock
stos
cmpsb
push
sahf
adc
fdivrl
in
dec
push
jle
lahf
clc
scas
sbb
bound
xchg
call
in
pop
out
dec
movsb
cmpsb
fisttpll
sahf
or
mov
test
push
mov
pop
sbb
mov
das
stos
ficompl
gs
cltd
or
test
mov
lock
jae
orb
int3
mull
and
push
push
lods
mov
scas
sbb
clc
jns
mov
lods
xor
or
mov
cwtl
jl
add
pop
jmp
shrl
mov
or
lods
in
arpl
rcl
sbb
stos
adc
jnp
aas
fidivs
or
xchg
aam
mov
std
sbb
or
data16
std
push
movsb
dec
mov
divl
mov
add
adc
push
xor
sarb
test
lcall
pop
ret
xor
xchg
shlb
mov
mov
cwtl
mov
dec
inc
mov
push
cli
jmp
mov
cwtl
lods
inc
fs
lods
xor
push
pop
fbld
mov
cmp
nop
out
outsb
and
arpl
jns
jl
lret
mov
push
es
js
aaa
test
cmp
mov
mov
inc
xchg
hlt
and
out
cli
sub
jle
pop
dec
scas
push
loop
insl
xchg
xlat
repnz
jg
ja
scas
daa
xchg
jne
pop
test
xchg
stos
push
lahf
inc
sub
dec
sarb
ds
addr16
push
xchg
mov
shl
inc
add
dec
int3
push
xor
shll
or
mov
shr
sbb
add
and
dec
pop
mov
in
add
xor
mov
lahf
mov
inc
cs
mov
enter
jno
jmp
enter
addl
bound
push
inc
sbbl
outsb
cmpsb
sahf
lret
ret
inc
bound
ret
mov
cmp
lahf
cmp
and
outsl
inc
mov
add
orb
out
mov
es
pop
iret
out
lods
rol
xchg
scas
mov
test
inc
mov
inc
imul
cmp
adc
cld
je
bound
and
fisubl
int3
inc
leave
pusha
cmp
mov
test
mov
sbb
fistps
std
dec
aam
add
xchg
call
jp
loope
mov
cmpsb
ror
jg
lea
mov
and
jb
test
fldcw
sbb
add
out
xchg
inc
call
aad
ret
ja
lds
mov
cld
mov
mov
int
pop
ljmp
mov
std
jne
or
jbe
lcall
ret
xor
inc
and
lea
lock
add
cmc
or
mov
xor
add
pop
add
loopne
iret
pushf
push
fsubl
sahf
push
inc
cmpsb
clc
jo
fstl
pop
or
xchg
test
shll
ljmp
inc
jg
pop
stos
inc
out
push
pop
inc
mov
loop
mov
push
cld
or
push
xor
lods
pop
pop
iret
xchg
mov
adc
jecxz
mov
jp
mov
xchg
xchg
fisttps
sahf
or
mov
or
push
call
pop
pop
jmp
scas
push
and
decl
stos
xchg
mov
test
adc
int
mov
mov
lahf
push
xchg
or
movsb
cmpsb
mov
insb
mov
mov
lcall
push
or
push
bound
add
repz
and
pop
test
ljmp
push
ja
pop
dec
gs
fldl
jne,pt
fildl
out
mov
push
iret
sbb
into
addb
mov
ja
sub
lea
mov
lret
xor
dec
into
add
sub
jbe
sbb
loop
xchg
je
dec
hlt
clc
pop
cmpsb
xor
add
addr16
ret
or
daa
iret
enter
mov
inc
or
fsubrl
out
iret
inc
sub
or
ret
dec
jge
lcall
jp
dec
jnp
repnz
mov
jp
in
adc
push
clc
jns
xor
cmpsl
mov
and
sub
dec
jae
sarl
les
jge
xchg
mov
jle
push
add
lret
cmpsb
adc
mov
in
mov
xchg
or
xchg
push
xor
mov
fcmovnbe
push
call
popa
pop
sarb
bnd
add
cltd
sub
adcb
sti
popa
mov
scas
jecxz
sbb
pop
jl
or
push
pop
ja
dec
lret
out
data16
mov
roll
std
insl
das
push
xor
inc
xchg
clc
mov
fisubrs
mov
lods
addl
fistl
and
jb
sub
or
adc
andb
test
mov
pop
and
sahf
decl
bnd
add
into
cmp
xor
dec
dec
popf
mov
icebp
sbb
and
pop
insl
cmp
adc
rcrl
xlat
xchg
jnp
icebp
push
adcl
inc
mov
cmp
js
lea
jmp
inc
imul
stos
es
mov
dec
cwtl
call
loop
sub
pop
addr16
mov
push
imul
fidivrl
mov
outsb
imul
lds
out
lods
sbb
into
pushf
in
cmp
scas
lods
sub
arpl
cld
fldt
sub
adc
iret
xor
adc
out
aas
pushw
mov
cmp
sub
mov
sbb
bound
je
pop
stc
les
testb
lcall
push
rorl
and
sbb
and
imul
in
xchg
bound
cmp
sahf
out
cmp
push
and
sub
mov
xchg
imul
in
xchg
enter
push
mulb
popa
inc
xchg
push
dec
les
fldenv
fldenv
shlb
fmull
icebp
cmpsl
pop
dec
mov
in
movsl
push
je
mov
and
sahf
insb
inc
add
fs
mov
xchg
xor
popf
fs
je
jle
adc
leave
negl
out
adc
add
cmc
pop
pusha
add
call
icebp
cwtl
sbb
sbb
adc
sbb
sbb
ljmp
pop
bound
pop
push
sarl
mov
imul
push
dec
fisubrl
push
dec
cmp
pop
data16
fildl
out
mov
inc
call
fucomp
fisubrl
mov
jne
dec
rolb
sub
ss
or
sbb
fstps
mov
mov
mov
add
and
and
xor
pop
subl
cmpsl
cwtl
and
adc
jecxz
inc
mov
imul
cmp
cmc
xchg
rcrb
or
je
jnp
sbb
jne
mov
jmp
stc
push
fiaddl
xchg
mov
loop
adc
dec
mov
cmp
arpl
fcoms
mov
repz
and
test
mov
or
mov
lds
sahf
jl
aaa
pushf
push
sub
ret
mov
dec
add
sar
sar
rcrw
adc
push
sbb
roll
inc
inc
jmp
push
sub
adc
adc
and
jge
push
pop
push
sub
mov
call
lret
mov
movq
bound
rolb
cmp
mov
sub
test
mov
mov
inc
mov
enter
inc
adc
imul
inc
int
xor
pop
test
jecxz
cmp
outsb
pop
mov
cmc
cmp
pop
in
les
adc
sti
imul
and
push
cld
jge
push
les
lods
lock
stc
test
pop
mov
adcl
pop
outsl
imul
seta
jl
jbe
or
in
leave
outsl
sarb
sub
sbb
jp
ljmp
test
hlt
cs
sarl
in
mov
xchg
mov
push
movsb
adc
outsb
xchg
mov
cmp
popa
push
jns
add
ss
lcall
fmulp
movsb
fisttpll
mov
enterw
enter
sbb
inc
data16
dec
push
fs
jecxz
mov
mov
aas
and
sbb
cld
lds
data16
and
mov
inc
mov
dec
pop
enter
or
mul
push
pop
mov
pop
jle
rol
add
fs
push
js
sub
jo
sahf
push
lds
cli
sub
in
fs
sahf
mov
sub
sub
sbb
jno
push
aaa
mov
pop
pop
lcall
xor
sub
mov
cli
dec
inc
repnz
push
test
or
mov
xor
add
leave
ds
andl
cmpsl
aas
lea
inc
in
add
stos
or
dec
lock
divl
or
lea
adc
pop
in
and
jns
aam
xchg
movsl
cmp
addl
dec
mov
xchg
adc
adcl
xchg
into
or
lods
negl
mov
bound
insl
jae
sub
xchg
push
dec
outsb
xchg
ss
xor
push
test
inc
nop
mov
mov
outsl
pop
jmp
push
outsl
mov
dec
in
lea
cmpsb
in
icebp
mov
add
jge
loope
fidivrl
xchg
xor
push
loop
dec
lret
std
int
push
dec
sahf
mov
and
cli
pop
ljmp
inc
or
jnp
call
xor
insb
rorb
nop
movsl
imul
sahf
movsbl
pop
mov
inc
xchg
cltd
pop
pop
mov
mov
adc
repnz
enter
test
out
or
xchg
push
xor
fbld
xor
lods
out
sbb
xchg
jne
sub
xchg
jo
mov
mov
mov
adc
inc
xchg
or
or
cmp
popa
push
inc
ffree
clc
test
dec
xchg
xor
mov
mov
js
jle
sbb
xor
notb
mov
jnp
add
outsb
inc
fldt
jo
sbb
mov
imul
sub
in
inc
xor
rolb
sbb
and
push
scas
aam
in
cmp
dec
out
sbb
das
popf
es
or
and
dec
fdiv
stc
in
adc
push
or
into
aas
loop
jmp
pusha
mov
jl
aam
scas
add
leave
ja
pusha
stos
movsl
cmpsl
jo
push
lret
jl
pop
stos
push
lret
iret
jmp
stc
jle
out
sbb
jbe
sub
fsubrs
add
dec
repz
push
daa
repnz
xchg
push
cmc
dec
aad
xor
push
andb
cwtl
or
and
arpl
push
test
sub
inc
add
in
mov
iret
jno
mov
ljmp
inc
mov
out
pop
pushf
es
fst
aaa
shll
pop
mov
inc
adc
dec
xchg
xor
and
pop
dec
hlt
jne
outsb
push
in
fs
test
mov
fisubrs
or
adc
rep
rcrl
and
sti
fnstenv
ljmp
cmp
jae
add
inc
lods
sbb
jecxz
loop
fmuls
test
dec
mov
push
mov
xor
mov
push
dec
cmp
xchg
sub
inc
xchg
mov
or
fucompp
sbb
loopne
enter
hlt
shr
in
loopne
leave
test
mov
push
cmp
dec
xchg
and
sbb
int
cld
cli
mov
fisttpl
cmp
stc
imul
cmp
icebp
loope,pt
xor
sub
pop
hlt
and
mov
jno,pt
xchg
xor
jl
fs
jae
dec
iret
scas
push
mov
insb
jnp
out
jb
rcr
fdiv
test
or
mov
push
repz
jmp
imul
xchg
ja
pusha
xlat
inc
xor
pop
push
mov
xchg
fdivrl
je
das
pop
mov
pop
popl
pop
add
cmp
cwtl
mov
das
xchg
daa
popf
test
push
test
cmovno
or
mov
lods
icebp
add
in
fcomps
insb
inc
mov
in
inc
repz
mov
or
pushf
rcrl
xchg
in
or
mov
mov
xchg
adc
jo
dec
lock
pop
mov
inc
pop
inc
cmp
test
daa
imul
mov
repz
jmp
cmp
push
add
jne
ss
adc
daa
xor
rorb
movsb
xor
bound
daa
dec
xor
dec
nop
in
jmp
jmp
dec
mov
out
or
sub
dec
adc
mov
stos
test
cmp
sbb
cld
sahf
loopne
lods
adc
or
ret
jnp
in
jno
pop
push
lds
stc
sub
lds
test
in
lret
dec
lret
and
rcll
sbb
pop
jle
xor
sbbb
push
xor
andl
lds
cmp
movsb
pop
out
add
out
nop
dec
mov
xor
pshufw
outsl
ljmp
xor
add
mov
aaa
adc
xor
or
and
popa
mov
jno
jecxz
scas
dec
and
cmp
inc
push
sahf
jp
fisttps
pop
mov
mov
mov
mov
jmp
dec
xchg
jbe
loop
and
mov
aaa
cli
jmp
cmp
iret
sbb
scas
jg
js
adc
std
in
lods
and
jae
cmp
push
xchg
pop
repnz
dec
pop
in
jcxz
pushf
xchg
clc
jmp
add
lret
inc
adc
xchg
pop
cld
adc
mov
sbb
or
push
stos
jns
sub
adc
mov
add
xchg
lods
push
subl
imul
insb
add
add
add
add
insl
fs
xor
cs
insb
add
add
add
add
jb
gs
xor
cs
insb
and
push
dec
jnp
jne
inc
jp
jb
inc
outsl
cmp
bound
push
jle
js
jne
push
sbb
push
jb
insb
aaa
xor
pop
and
push
dec
jnp
jne
in
rcl
aam
dec
cs
push
popf
add
dec
xor
lea
