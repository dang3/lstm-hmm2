jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
add
insl
xchg
push
rorl
test
xor
add
add
or
add
add
xchg
je
out
add
add
pop
add
add
xchg
sub
mov
add
add
add
add
add
add
dec
add
sbb
filds
sldt
add
add
add
or
or
jns
pop
add
add
add
add
add
add
add
add
add
inc
add
mov
sbb
xchg
bound
mov
dec
add
xchg
cld
add
add
add
addb
add
mov
cld
add
mov
add
add
inc
add
jo
test
xchg
jecxz
incl
fldl
inc
add
mov
add
jo
rolb
add
add
add
add
add
inc
add
cld
add
add
add
add
add
add
add
add
add
mov
push
xchg
pop
add
add
add
add
jns
pop
add
add
add
add
xchg
in
add
add
or
add
add
add
cs
add
add
sub
inc
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
into
add
add
inc
add
add
push
adc
filds
jecxz
inc
add
add
xchg
xchg
fadds
dec
add
add
add
add
add
add
add
add
add
add
add
or
jo
inc
add
add
add
add
inc
add
add
xchg
mov
pop
add
add
add
add
add
add
ja
xchg
push
add
xor
xchg
add
scas
add
pop
add
or
xchg
pop
add
add
add
add
add
add
add
add
add
and
dec
add
add
add
add
sub
add
push
add
xchg
loopne
push
add
add
add
add
add
add
pop
add
add
add
add
push
jns
pop
add
add
jl
popa
add
add
add
in
sbb
bound
inc
add
add
add
add
add
add
inc
add
add
add
add
mov
add
add
imul
lea
adc
mov
add
add
jge
lret
add
add
add
movb
add
mov
lret
add
add
movl
or
clc
add
dec
add
add
add
add
or
jae
clc
add
xchg
cltd
add
add
push
jns
sub
xchg
imul
xchg
ja
jge
mov
pusha
add
add
xchg
xchg
or
add
pop
add
xchg
and
inc
add
add
add
add
jns
pop
add
add
add
add
mov
push
add
push
mov
and
jns
xchg
dec
add
add
add
add
add
add
xchg
add
add
pop
add
add
jo
pop
add
pop
add
add
add
add
add
add
adcl
ret
sbb
jmp
add
shlb
dec
dec
inc
jo
jecxz
fisttpl
ja
idivb
or
xchg
cltd
shll
pushf
or
addr16
xchg
stc
cmpsl
js
pop
pop
adc
lods
add
mov
mov
pop
out
stos
addl
in
das
nop
lret
ret
std
mov
xchg
inc
ljmp
pop
movsb
and
inc
cmp
mov
ja
push
cmpsb
cmp
mov
scas
lret
out
xor
lcall
push
addl
mov
add
and
mov
lods
mov
mov
lcall
mov
adc
or
rcll
lods
jg
mov
jno
dec
jge
sub
jb
mov
mov
xor
mov
jns
cltd
xchg
hlt
lock
fwait
js
jnp
enter
insb
nop
pop
mov
orl
in
sti
push
lcall
adc
fimull
cld
mov
mov
hlt
jg
xor
jge
bound
xor
or
or
jns
xchg
aaa
jg
and
loopne
pop
enter
mov
cmpsb
lcall
cs
jae
jmp
push
in
outsb
lods
inc
jns
mov
pop
xor
imul
std
jae
sub
xchg
sub
pop
pusha
xchg
repz
add
shll
int3
xor
xchg
xlat
pop
int
out
and
aas
out
xchg
pop
add
loopne
mov
fcomip
jbe
enter
inc
push
add
ret
pop
pop
inc
xchg
hlt
not
jne
imul
sub
jl
sub
decl
shrb
dec
inc
add
xchg
out
imul
mov
les
mov
xchg
inc
fsubs
das
xor
push
and
out
aaa
sub
mov
ret
pop
sbb
cmp
xor
and
out
repnz
jbe
cmp
sbb
xchg
mov
dec
cmpsl
push
xor
popf
sti
stos
add
pop
sarl
sahf
sbbb
outsl
add
xchg
addr16
xlat
inc
fndisi(8087
ret
mov
adcl
test
pop
jb
sub
mov
pop
fldcw
inc
pop
adc
mov
into
lret
rcl
lcall
dec
sbb
xor
daa
aaa
jg
je
jp
push
sahf
fimull
nop
scas
clc
stos
loope
inc
jb
mov
sar
adc
fidivl
mov
adc
and
outsl
add
ja
fwait
or
stos
add
mov
je
scas
jno
in
andl
push
mov
out
lahf
xor
popf
das
aaa
xchg
in
adc
arpl
andl
sub
add
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
xchg
dec
xchg
outsb
cmpsl
jle
mov
jae
inc
cmpb
sti
pop
fbstp
cli
daa
out
push
mov
ja
addr16
mov
cmpsl
jle
push
push
imull
out
pop
ret
inc
out
daa
push
cld
inc
pushf
ja
addr16
mov
cmpsl
data16
pop
movl
pop
into
pop
std
inc
xchg
or
cmp
or
fiadds
xchg
les
aad
xchg
mov
jl
sbb
aad
fstl
fdivl
adc
sbb
cmp
inc
sub
inc
in
cld
rcll
shl
sub
mov
out
push
shlb
inc
outsl
rorb
mov
or
into
insl
fmulp
test
imull
into
daa
adc
xchg
xlat
push
xlat
push
or
mov
mov
mov
sbb
gs
push
xchg
lahf
or
imul
out
pop
xor
and
push
scas
inc
fimull
cmp
mov
hlt
das
test
mov
inc
cmpsb
insl
mov
adc
imul
mov
mov
cmpsl
jle
push
push
imull
out
pop
into
pop
aaa
mull
out
xchg
inc
xchg
addr16
rorb
ret
or
jg
inc
cmpsb
pop
push
mov
dec
fwait
xor
cs
xor
xor
xchg
daa
cmc
aaa
out
ret
push
stos
push
negl
or
mov
cld
xor
adc
decb
pop
fimuls
cmpsb
cmp
cmp
out
pop
into
pop
fidivs
out
daa
push
mov
ja
addr16
mov
cmpsl
jle
push
push
imull
out
pop
into
pop
fidivs
out
daa
push
mov
ja
addr16
or
cmpl
repz
xor
inc
movl
jne
cmp
mov
stos
ret
cwtl
pop
ja
stc
cwtl
iret
cmc
add
int
push
xor
movsb
jmp
clc
mov
das
sub
test
test
jmp
xchg
or
shrl
mov
pop
scas
sub
inc
std
lods
jno
pop
mov
add
loope
mov
scas
hlt
push
andb
mov
mov
sbb
leave
psrlw
in
mov
stos
mov
dec
push
cmp
cli
push
je
fnstsw
ret
mov
push
pop
fimull
pop
xchg
cmc
sahf
sbb
sub
dec
je
inc
add
push
xchg
fwait
push
jmp
mov
or
ret
in
movsb
movsb
and
lcall
subb
jnp
pop
cmp
push
fnsave
xchg
cmp
sub
adc
jg
mov
mov
lret
mov
xchg
fcompl
jg
sbb
mov
push
xchg
shll
push
ret
dec
cmp
sti
std
hlt
and
pusha
fimuls
stc
xor
jae
aaa
mov
outsl
mov
and
dec
lahf
inc
fisttpl
push
jg
pop
pop
sub
in
or
cld
or
xor
nop
mov
xlat
mov
punpcklwd
inc
mov
je
stos
nop
inc
sbb
cmpsb
xor
lret
adcl
dec
cli
pop
fwait
pop
mov
fildll
sahf
inc
int3
out
loope
sarl
orl
xchg
lods
iret
je
cli
int
fwait
stc
inc
js
in
psubsb
jb
ret
pop
and
inc
xlat
test
push
pop
add
pop
sbb
pop
hlt
push
out
jecxz
adc
in
fs
notb
and
lock
leave
hlt
push
testl
mov
rorl
out
push
sti
pop
fwait
mul
mov
popa
outsb
push
add
call
movsl
dec
mov
xchg
mov
adc
xchg
loopne
adc
nop
shll
mov
mov
addr16
mov
fdivrs
movsb
es
jg
ja
std
and
repnz
out
scas
sar
loopne
lahf
or
mov
ret
enter
mov
xchg
cmp
test
jmp
pushf
ja
in
jg
shlb
inc
cmp
in
xchg
or
lret
cmp
jae
xor
fs
bound
push
cmp
aas
ds
and
add
jo
jae
or
push
ja
mov
test
mov
insb
pop
push
divb
fdivrp
xor
sti
sub
push
movsb
movsl
or
cmp
stos
push
icebp
sbbb
xchg
ret
mov
fiadds
mull
lret
mov
sbb
call
es
cmpsl
lret
daa
ficoms
mov
icebp
add
shlb
sub
int3
testb
es
dec
cmpsb
xchg
out
push
aaa
sub
sbb
test
inc
inc
sahf
divl
jno
ja
lcall
sub
push
jb
jns
loope
jg
or
fstps
push
mov
popa
ljmp
loope
push
mov
inc
pop
pop
xor
add
scas
sbb
and
insl
push
push
or
fiaddl
push
fisubrl
and
and
repnz
dec
mov
enter
mov
sub
adc
fbstp
jmp
test
mov
and
cs
adc
sbb
pextrw
lods
sbb
or
push
fcoml
sarl
icebp
popf
ja
fs
push
sub
jle
add
fxch
aad
pop
mov
insb
jae
xor
adc
mov
cwtl
scas
lock
cmpsb
fsubrs
pushf
jo
enter
in
mov
stos
inc
shrb
repnz
dec
test
push
mov
ret
ja
pop
out
cwtl
nop
sbb
xchg
jns
dec
pop
xchg
sbb
sarl
mov
adc
sub
imul
push
xchg
sbb
sahf
push
stos
and
arpl
dec
lret
xlat
or
pop
cwtl
outsl
push
repz
arpl
mov
adcb
in
pop
imul
xor
std
dec
sbb
mov
js
or
inc
inc
insl
stos
inc
pop
mov
and
add
cmp
xchg
shlb
push
das
dec
ss
fsubs
sub
in
in
mov
and
jae
mov
in
mov
int
rcll
sub
sbb
sub
mov
mov
sub
stc
rorl
sub
fsubrl
jae
idiv
push
scas
pop
out
inc
pop
xor
mov
xchg
jmp
icebp
shrb
fsubrs
xor
mov
mov
lock
mov
subb
mov
or
sbb
mov
jns
lea
fadds
jle
aas
addr16
jne
test
arpl
popw
fadds
push
outsl
pop
fldenv
jg
or
lods
dec
xor
add
outsl
popf
jp
out
test
lds
call
cwtl
stos
sub
mov
and
dec
inc
adcb
daa
mov
sarb
gs
stc
pop
out
call
je
adc
sbb
pop
mov
inc
cmp
cmp
fcompl
in
jle
or
mov
pop
or
cmp
mov
push
inc
mov
fsts
dec
dec
stos
rcrl
cmp
add
lods
lods
loopne
and
xor
mov
ficomps
fsubs
aaa
test
inc
pop
xchg
in
fsubrs
pop
dec
pop
cs
mov
inc
sub
lock
out
call
mov
push
movsb
sub
jmp
sub
orb
sbb
clc
icebp
mov
pushf
mov
jae
lahf
in
mov
dec
or
mov
add
loope
fcoml
lret
push
bound
cwtl
push
push
test
incb
bound
add
push
mov
adc
or
and
out
sbb
jbe
loope
push
ja
xchg
adc
sbbl
mov
mov
dec
sarl
out
cmp
les
mov
or
push
mov
inc
push
out
daa
xchg
fbld
cld
jp
test
xlat
adc
sub
fsubl
stos
movsb
inc
add
xor
movsl
cmp
dec
dec
les
sbb
stos
pop
xor
sub
sahf
mov
dec
cld
out
dec
repz
cltd
sbb
mov
test
jmp
mov
and
call
adc
int
jnp
js
ret
fnsave
lods
int3
lods
lahf
cmp
jmp
fsts
mov
sub
cmp
xor
test
cs
das
adc
lock
pause
add
cmp
mov
lret
cld
dec
mov
stos
or
cmp
and
fldenv
imul
int3
ja
out
xchg
mov
mov
pop
push
mov
mov
jns
push
inc
leave
pushf
ds
jecxz
aas
jnp
aad
xchg
push
scas
mov
les
fcomps
aaa
bound
sbb
jmp
out
ss
push
xor
dec
test
and
stos
mov
or
xchg
cltd
mov
outsb
fs
adc
sbb
popa
cs
push
jnp
xor
jge
jl
mov
ficompl
or
jge
and
push
push
mov
testb
add
je
test
stos
es
shr
fidivs
subl
ficoms
cmp
jne
lea
aad
sbbb
ljmp
cmpsl
movsl
and
stos
cmp
test
adc
lcall
nop
mov
sbb
jle
mov
sbb
mov
shlb
clc
push
sub
stos
je
xchg
sub
insl
pop
pop
icebp
cld
popa
pop
sbb
inc
jle
dec
mov
sub
cmp
das
xchg
ss
into
push
adc
xor
jne
pushf
std
mov
lods
mov
mov
sub
mov
rorl
testl
and
add
js
sti
pushf
or
cmc
int
push
and
ret
ret
add
ds
sub
hlt
or
mov
jbe
out
inc
push
bound
lods
lahf
mov
inc
iret
shlb
cmp
std
sbb
push
mov
jno
sbb
jb
cmp
in
insb
sub
in
cmpsl
js
iret
xor
aaa
nop
sbb
bound
mov
out
jmp
lock
cmc
icebp
cmp
lret
jae
mov
jmp
dec
and
sbb
jmp
mov
addl
sbb
and
xor
mov
dec
out
lcall
adc
or
mov
dec
adc
cmp
sti
les
jnp
data16
in
sbbl
pop
and
cmp
hlt
xchg
sub
les
movsb
loopne
les
sbb
aas
push
mov
shl
ljmp
sub
mov
into
jnp
sbb
push
es
or
pop
push
inc
pop
mov
arpl
sub
aaa
xchg
rorl
enter
push
mov
xor
sti
outsl
mov
mov
insl
adc
imul
shld
jno
or
movsl
push
add
sysret
int
dec
inc
jb
divb
and
mov
sar
jg
mov
clc
cmp
lret
push
pop
out
jnp,pn
mov
testl
dec
fcmovnb
into
xchg
mov
jo
pop
inc
adc
in
and
push
rcr
shrb
jg
jle
push
pop
sbb
xor
push
mov
jl
xor
loope
jp
sbb
mov
aas
loope
pop
cltd
aaa
mov
fwait
inc
and
sub
pop
pop
and
adc
push
cwtl
adc
loop
cmp
mov
in
add
aad
jp
fisttpl
xor
call
shll
cmp
fistl
sub
add
mov
mov
bound
test
push
dec
fwait
dec
or
adc
into
lret
and
inc
scas
push
cmpsb
sbb
notl
mov
ror
das
xorl
push
outsl
xchg
das
lods
shlb
imul
fisubl
mov
jg
xchg
mov
mov
ret
or
dec
jne
mov
jg
inc
shr
cmp
xor
mov
jg
mov
mov
fs
divl
popf
mov
popf
xorl
push
xchg
xchg
fwait
mov
ljmp
mov
fcmovb
jmp
push
les
shll
xchg
jae
cli
jp
dec
popf
pusha
xor
mov
pop
cwtl
dec
jae
bound
lcall
daa
inc
add
fstpt
mov
outsb
or
rorb
mov
cmp
pusha
adc
cmp
pop
or
dec
xchg
inc
xchg
pusha
push
sub
adc
sbb
mov
out
push
loopne
push
adcb
xor
jmp
pushf
addr16
add
xchg
push
cmp
imul
js
in
xor
sub
pop
pop
ret
aas
cld
inc
lcall
cli
jl
add
negl
cmp
lds
lret
pop
cmp
push
fdivp
in
ret
pop
lea
pop
sbb
xchg
cmp
pop
dec
pop
ljmp
loopne
mov
insl
push
pop
data16
pop
mov
ret
xchg
fcmovnu
add
fnstcw
std
mov
into
mov
or
shll
adc
mov
sub
stos
fs
xchg
cmp
push
inc
mov
mov
cmp
and
lret
mov
and
and
dec
mov
lods
xchg
sbb
jmp
cwtl
pusha
addr16
dec
into
mov
push
mov
adc
mov
pop
in
pop
cmp
xchg
mov
hlt
inc
inc
scas
fnstsw
lret
dec
getsec
add
insb
inc
mov
pop
shrb
inc
gs
xchg
shl
ret
add
mov
mov
push
inc
mov
cmp
and
dec
fistl
sbb
sub
adc
daa
mov
and
or
mov
sbb
loope
xchg
mov
jae
into
ja
pop
sub
pop
xor
nop
and
jmp
sti
aaa
pop
shr
xchg
jg
xor
adc
or
lea
das
ja
cmpsb
or
pop
ss
daa
and
leave
shl
fsub
icebp
xchg
cmp
mov
in
jbe
mov
sub
sbb
xor
sbb
test
pop
lods
pop
pop
mov
aad
cmpsb
repnz
sbb
and
in
int
xchg
cmpsb
je
pusha
mov
jo
lret
add
jmp
or
outsl
jle
cmp
mov
int
jbe
xchg
push
scas
das
icebp
divb
stc
add
xchg
dec
and
sbb
xor
jg
fisubl
test
or
jns
sbb
data16
fstpl
push
out
mov
jecxz
xchg
lahf
dec
jbe
gs
shrl
inc
fdiv
mov
rclb
or
push
push
mov
sub
xor
test
shrb
push
movsb
xchg
bound
fstl
cmc
add
cmp
jp
cwtd
lods
push
fcoms
inc
inc
lret
mov
pushf
cmpsl
push
outsl
xorl
stos
dec
outsl
lods
inc
adc
movsb
sub
jnp
jno
int
push
std
jo
push
push
je
push
xchg
test
adc
out
mov
int3
dec
xor
xor
lcall
in
dec
popa
faddp
sbb
jb
mov
xchg
neg
out
push
xchg
inc
insb
jle
pushf
rcll
stos
push
outsb
pop
into
mov
xor
in
outsl
stos
int3
jle
inc
xchg
dec
scas
xor
pushf
sbb
xchg
mov
or
fs
nop
dec
jbe
sub
sbb
jb
imul
inc
and
xor
cli
add
or
jmp
inc
negl
rclb
outsb
popf
mov
icebp
xchg
cs
mov
cmpsl
xchg
loope
and
les
pop
and
push
dec
stc
insl
std
xor
and
sub
into
sub
jge
mov
out
push
mov
or
lock
testb
xor
cmp
dec
das
call
insl
cmp
jnp
xchg
aad
rcl
xor
leavew
inc
sbb
sub
and
enter
mov
cwtl
or
adc
loope
xchg
cld
pop
pop
movsb
jno
outsb
mov
insb
dec
fiaddl
pop
mov
push
add
sbb
pop
jg
cmp
mov
mov
jb
aam
xor
sub
dec
xchg
xchg
push
push
pop
xchg
xchg
mov
fldl
push
outsl
jle
out
movsl
sub
mov
ljmp
insb
push
xor
outsb
sub
jmp
mov
xor
lods
mov
pushf
scas
or
jnp
jo
icebp
lea
cmp
pop
shrl
mov
dec
mov
xor
jge
xchg
nop
mov
das
push
inc
or
mov
ffreep
dec
mov
push
cwtl
loopne
pusha
jne
fisubrs
mov
cmpsl
push
cltd
addr16
sbb
aam
cs
xor
sbb
xor
add
dec
fstps
xchg
mov
adc
fwait
inc
shl
add
fiadds
stos
mov
fwait
das
and
mov
add
jl
fnstsw
iret
sarb
test
aas
xchg
add
scas
hlt
mov
cmc
mov
push
ret
mov
fwait
jmp
and
mov
iret
aam
xchg
int3
sub
imull
xchg
mulb
dec
mov
adc
enter
push
push
sub
stos
pushf
gs
loopne
add
sbb
cmp
inc
xchg
sub
aaa
xchg
insb
lcall
fcoml
jnp
je
mov
or
pop
pop
clc
jecxz
jge
mov
rorb
sub
sbb
out
fdivp
ficoms
sbb
xor
push
cwtl
dec
xor
adc
clc
mov
fdivs
jno
adc
pop
xor
stos
jo
xor
mov
hlt
jo
stos
and
mov
rorb
repnz
jns
jo
mov
push
cmp
inc
push
nop
shlb
sbbb
adc
xchg
dec
cmp
movsb
fistpll
gs
lret
sbb
mov
movsl
lahf
das
lea
jge
mov
jge
jl
imul
xor
add
popf
or
inc
stos
mov
scas
inc
sbb
lret
fildll
mov
stc
mov
nop
ficompl
testl
push
and
insb
in
movsb
mov
repz
adc
push
fidivl
rcr
lret
add
das
jbe
pop
insl
stos
push
popf
test
pop
cmp
pop
cwtl
repz
sbb
xchg
pop
lea
xchg
testb
xlat
sub
repz
jge
outsb
mov
mov
mov
inc
xor
xchg
repz
cli
dec
push
push
arpl
jge
js
mov
xchg
sbb
and
dec
xorl
mov
mov
jb
pop
push
nop
mov
scas
push
pop
sbb
inc
sbb
rcr
or
enter
lds
adc
aam
sti
adc
mov
mov
mov
and
or
xor
call
mov
xor
repnz
adc
mov
cld
in
xor
and
in
pop
sbb
dec
push
push
aaa
mov
pop
add
mov
jae
lock
push
cmpsl
outsb
mov
push
insb
sub
cmp
jmp
repnz
jbe
mov
sub
mov
leave
stc
jns
and
cmpb
add
aad
das
out
inc
movsl
lahf
and
packssdw
in
scas
mov
out
out
ror
arpl
xchg
fists
or
xlat
pusha
insl
inc
int
out
popa
mov
pop
in
pop
out
aam
and
in
lret
sbb
jl
inc
stos
std
stos
loope
inc
jg
loopne
lea
xchg
pusha
and
aad
ret
mov
sub
jmp
xchg
in
fmul
pop
pusha
int
data16
and
xchg
or
push
dec
les
fists
jp
pop
mov
cs
loope
fwait
sub
sub
nop
add
mov
filds
jecxz
or
jg
sub
insb
mov
imulb
inc
movsb
mov
into
hlt
mov
sub
cwtl
xchg
xchg
out
jg
mov
loopne
int
mov
add
sbb
leave
mov
inc
sbb
jecxz
sbb
dec
fldcw
xchg
inc
nop
jle
cmp
xchg
sub
stos
cmp
cmp
mov
ja
sub
pop
cmc
dec
rcrb
inc
add
ds
ds
or
hlt
fs
arpl
and
ss
mov
xchg
jne
inc
mov
push
ror
jmp
xlat
notb
cli
imul
jo
cmp
shl
popf
into
xchg
lock
out
cltd
ret
xchg
sub
movb
mov
sbb
cmc
insb
cmp
push
pop
pop
mov
xorb
stos
lcall
insb
cltd
call
lret
xor
mov
outsb
push
sbb
mov
out
out
jg
fstps
xchg
or
stc
xor
mov
xchg
sarb
roll
shl
lock
fcomip
jg
sub
push
pop
mov
lock
rclb
dec
cmp
xlat
imul
push
mov
int3
mov
outsb
ret
jne
out
cmpsb
stos
jl
push
xchg
mov
jl
push
jbe
mov
loope
mov
ja
shrl
icebp
mov
lock
sti
or
xlat
mov
adc
mov
mov
xor
mov
xchg
test
test
imul
inc
jb
cld
pop
mov
mov
push
insl
jb
xchg
cli
js
shll
push
dec
pop
push
and
add
mov
and
aad
dec
movsl
lods
or
shl
cmpsl
adc
paddw
pop
sub
pop
and
xor
pop
mov
js
shrl
cmpl
dec
adc
lea
in
or
xor
push
lds
ficompl
and
rolb
xchg
jle
jg
je
xchg
push
scas
mov
cmp
xor
lea
test
xchg
xchg
push
std
pop
addl
lea
push
out
cmc
mov
dec
fbstp
js
push
popa
xor
fidivs
nop
xchg
test
outsl
lods
call
sbb
rcll
pop
pop
adc
cmp
add
or
dec
test
jns
sbb
int
mov
call
scas
sub
call
std
push
dec
insl
ja,pt
and
and
fsubrs
jp
lcall
mov
stc
xchg
lret
aas
mov
mov
mov
insl
pop
cli
mov
ret
scas
push
lods
cmp
mov
ret
xor
stos
dec
push
stos
mov
test
imul
dec
xor
or
ja
pop
lret
pop
mov
icebp
es
jbe
cmpsl
jle
push
push
imull
out
pop
into
pop
fidivs
out
daa
push
mov
ja
addr16
mov
cmpsl
jle
push
push
imull
out
pop
into
pop
fidivs
out
daa
push
mov
ja
addr16
mov
cmpsl
jle
push
push
imull
out
pop
into
pop
fidivs
out
daa
cli
push
mov
ja
addr16
mov
cmpsl
jle
push
push
imull
out
pop
into
pop
je
out
daa
mov
push
iret
loope
rcrl
mov
xchg
fwait
pop
mov
jnp
out
xor
and
adc
add
push
lahf
inc
outsl
mov
mov
das
repz
jecxz
rcrl
ret
out
xor
inc
scas
adc
add
adc
mov
das
repz
jecxz
rcrl
ret
out
fwait
jmp
scas
ja
add
ss
or
and
inc
pop
mov
cld
add
psrld
sub
outsb
lods
cld
sub
inc
mov
fcomps
cmpl
cmc
push
jl
jo
sbb
aad
sbbl
push
mov
inc
popl
jmp
mov
fs
sub
xor
scas
fcompl
jb
mov
test
jg
outsl
pop
mov
das
repnz
out
pop
pop
cmp
call
aaa
push
dec
sbb
pushf
lahf
lods
xchg
into
xchg
push
sbbb
jl
repnz
testb
pop
inc
xchg
mov
ffreep
cld
arpl
lahf
or
pop
vpminub
xchg
outsb
mull
sub
mov
mov
inc
sahf
inc
xor
pop
subl
aas
jecxz
rcrl
ret
out
xor
and
adc
add
push
lahf
sub
fdivrl
mov
insb
lahf
pop
jecxz
popf
jp
xchg
push
mov
adc
adc
push
jmp
xor
pop
icebp
dec
mov
addr16
mov
jb
insb
in
int3
or
adcb
cli
push
lock
jg
outsb
repz
jecxz
rcrl
ret
out
xor
and
adc
add
push
lahf
inc
outsl
mov
mov
das
repz
jecxz
rcrl
ret
out
xor
and
adc
add
push
lahf
inc
outsl
mov
ljmp
sbb
xor
jle
xor
push
jle
out
push
outsl
sub
mov
cli
fcompl
mov
mov
hlt
fsubp
mov
jmp
fistpl
pop
sti
sbb
adc
sbb
mov
aas
sbb
adc
sbb
loop
adc
stos
in
sub
mov
ret
push
dec
je
xchg
mov
popa
and
dec
sbb
xchg
xor
fbstp
mov
add
fiadds
adc
subl
mov
cmpsb
push
in
xlat
rclb
pusha
imul
sub
dec
push
testb
mov
lahf
clc
jp
addr16
imul
out
push
push
xchg
imul
fwait
int3
xchg
cltd
push
pop
cmp
adc
mov
xor
cmpl
xchg
mov
es
scas
stc
adc
dec
adc
mov
sarl
cmp
bound
test
dec
inc
cmpsb
sbb
and
jp
adc
mov
in
fcomps
out
addl
xchg
lea
icebp
in
xlat
or
ss
repz
cmpb
xlat
rcpps
fimull
sbb
and
xchg
jecxz
jle
aam
scas
sub
aaa
jle,pn
add
aaa
arpl
inc
fs
aad
mov
mov
add
xchg
stc
cli
sahf
mov
jae
lock
stos
repnz
movsb
and
movsb
xchg
sbb
adc
add
cld
pop
outsl
mov
fwait
mov
cmpsb
arpl
out
push
leave
icebp
das
xchg
xor
add
pop
xchg
jl
and
xchg
sti
jo
mov
xchg
in
outsl
sbb
pop
inc
pop
mov
lea
idivl
scas
arpl
and
ret
decl
or
mov
inc
pop
clc
aas
hlt
iret
mov
dec
mov
mov
pop
xorb
stos
sub
pop
insl
mov
stc
mov
and
jb,pt
je
and
enter
mov
out
pop
shll
cltd
ljmp
lret
leave
xor
push
mov
out
sub
cmp
inc
sbb
clc
negl
xor
shll
stos
adc
xorl
int3
js
out
ljmp
imul
xor
sbb
jmp
cmp
xchg
int3
pop
mov
mov
jne
test
or
lds
lcall
mov
call
mov
je
int
mov
aas
std
stos
xchg
lret
xor
fsubrl
daa
xor
enter
jns
adcl
lret
push
dec
movsl
xchg
test
arpl
dec
scas
and
les
cs
stos
out
scas
stos
int3
in
rclb
cwtl
sbb
mov
inc
sbb
pop
loop
jo
mov
sbb
dec
pop
popf
leave
push
xor
sbb
push
cmp
std
in
xchg
xlat
jg
out
jb
push
iret
add
dec
and
inc
rolb
fs
or
or
sahf
outsl
mov
cmp
ljmp
jecxz
sbb
cmp
fbstp
adc
out
rolb
dec
testl
xor
jae
in
cmpsl
mov
jae
adc
test
outsb
inc
out
test
sub
cmpsb
dec
out
push
pop
data16
inc
std
movsl
xchg
repz
daa
and
jne
inc
mulb
cmp
and
jnp
mov
inc
mov
adc
mov
jle
mov
icebp
mov
mov
pop
xchg
imul
mov
mov
aam
inc
sub
mov
add
mov
jne
add
lcall
pop
repz
jecxz
pop
fs
cmp
push
push
inc
test
dec
pop
mov
sub
lea
iret
cmp
fdivrs
mov
pop
sahf
leave
pop
mov
clc
mov
insl
out
imul
lods
push
xor
and
lods
mov
inc
icebp
xchg
out
int3
rclb
push
and
pop
shlb
xchg
dec
xlat
push
jno
sbb
lds
sbb
incb
dec
adc
adc
xlat
inc
ficomps
outsl
sti
add
insb
pop
repz
xchg
xchg
leave
push
sahf
sbb
pop
rorl
cmpsl
aam
fcom
fucomip
test
and
scas
cmp
fwait
jge
jmp
or
out
and
xchg
push
daa
mov
inc
inc
repnz
mov
and
rclb
inc
out
cmpsl
adc
mov
data16
jo
pop
xor
sub
xchg
jecxz
dec
mov
repz
sbb
lock
xchg
aaa
in
int
popa
fldenv
mov
cmp
call
pusha
mov
jns
pop
ror
pusha
cmpsl
and
fimuls
xchg
mov
cmpsl
cmp
or
jo
shrb
packsswb
cmp
aad
xchg
ficompl
ds
dec
arpl
in
or
mov
add
loopne
mov
dec
push
and
push
xlat
inc
jae
lahf
pop
mov
xchg
pusha
cmpb
xor
xchg
or
int
shl
popa
push
outsb
and
fildl
jnp
push
daa
jl
ficompl
push
mov
push
jl
pop
je
mov
call
dec
lods
in
pop
mov
xorl
insb
idivb
sbb
les
rorb
inc
mov
nop
int
sbb
fwait
dec
xor
jae
fisubl
and
sub
sub
cmpsl
add
imul
bndstx
sub
pop
cltd
xchg
inc
fidivrl
test
dec
mov
cmpsl
jmp
ja
cmpsb
aad
sub
or
fs
call
xor
mov
add
adc
lret
sub
clc
popf
adc
lahf
mov
push
or
out
arpl
xchg
jae
popf
loope
cwtl
mov
adcl
cmpl
add
xor
push
sub
outsb
or
xchg
xchg
lock
mov
mov
ljmp
sbb
call
sub
xchg
mov
sti
push
mov
nopl
xchg
mov
popa
push
and
insl
jns
push
xchg
cmp
or
insl
adc
dec
dec
sbb
xor
lcall
ds
dec
loopne
push
bound
sub
jge
repz
lods
incb
stos
repz
pop
movsb
sti
loope
mov
push
mov
popf
cmp
mov
call
mov
xor
ret
lods
push
adcl
xor
jg
dec
pop
pop
and
into
lcall
cmp
or
push
adcb
loopne
out
imul
fidivs
daa
test
into
outsl
mov
mov
repz
xchg
imul
cmp
mov
adc
repnz
decb
popf
lcall
int3
mov
fwait
leave
movsb
cmp
or
pop
and
movsl
mov
scas
insb
out
xchg
mov
and
jge
aaa
test
fdivr
ja
mov
push
xchg
mov
dec
adc
inc
cmpsl
and
mov
push
xchg
mov
leave
cmp
and
xchg
roll
fidivs
xor
mov
dec
int3
and
or
push
xchg
cmp
xchg
lahf
cli
mov
pop
lcall
rcr
imul
pop
mov
in
jae
pop
push
scas
pop
lahf
and
sahf
xchg
push
fsts
lods
add
int
mov
mov
push
hlt
mov
js
xchg
sbb
xchg
out
inc
push
repz
stos
xlat
xor
inc
pop
inc
div
cmpsb
xchg
outsl
mov
inc
loop
imull
cmp
dec
in
shll
loopne
dec
testl
outsb
loope
xchg
pop
push
or
je
pushf
aad
cmp
paddsb
sub
ljmp
inc
sbb
nop
sbb
jmp
das
adc
push
ficomps
sti
sub
aaa
lods
and
dec
imul
jb
add
lcall
push
add
jmp
ds
rorb
mov
jle
add
mov
adc
popf
jno
daa
cs
iret
aas
xchg
stos
in
repz
adc
icebp
dec
mov
movsl
ret
jp
or
xor
mov
push
cmp
aad
mov
jg
out
xchg
inc
mov
sti
addr16
cmp
aad
xchg
repz
xlat
pop
js
test
mov
xor
xchg
jno
adc
cmp
movsl
in
xlat
mov
in
push
lods
stos
xor
mov
stos
fs
dec
cli
arpl
xlat
xor
rorb
in
insl
shrl
lcall
cltd
daa
sarb
inc
sarl
and
adc
fdivr
fbstp
lea
jne
bound
loope
test
fistl
repz
jmp
nop
out
arpl
sbb
testl
jl
divl
mov
shlb
jecxz
aam
push
aaa
insb
jbe
mov
inc
mov
mov
xor
dec
fwait
test
add
mov
jecxz
sti
adc
push
mov
in
pusha
outsl
aam
out
ja,pt
movsb
push
cmp
pushf
xchg
pop
or
in
ret
jbe
fprem1
pop
test
pop
dec
add
lods
pop
int
fildl
in
movsb
dec
xchg
adc
aas
and
mov
xchg
dec
lahf
sub
xorl
mov
outsb
xor
sub
mov
ljmp
mov
enter
or
pop
jno
lret
push
sub
inc
or
and
clc
icebp
in
outsl
outsb
scas
frstor
mov
dec
dec
lods
pop
repz
es
and
ss
xchg
pop
outsl
push
fs
xor
jg
test
sbb
cmp
sbb
mov
lock
leave
addl
into
fs
inc
cmp
stos
xor
pop
stos
cltd
mov
xchg
xor
adc
test
mov
aad
imul
cmp
loope
cmp
xchg
dec
rcll
push
push
test
xchg
int3
rcl
fstpl
mov
repnz
movsb
cwtl
scas
lods
sbbb
sar
pusha
and
cwtl
push
add
int
jmp
call
xchg
mov
inc
dec
mov
lcall
jge
sbb
cmpl
pusha
mov
xchg
ss
mov
popa
mov
or
jno
sub
xchg
add
xlat
push
jne
or
fdivrp
mov
std
inc
addr16
jo
mov
and
test
mov
push
pop
and
test
or
shl
sbb
fidivrs
jne
pop
inc
cmp
add
divb
push
pop
pop
scas
rcl
aaa
pop
and
fwait
in
iret
xchg
jecxz
and
out
nop
loope
xchg
add
out
dec
fidivl
movsb
out
mov
dec
cmp
mov
das
inc
push
std
pop
jbe
out
pop
scas
int
jl
sub
fidivrs
outsb
outsl
jae,pn
push
movsb
mov
cmp
pop
add
push
stc
icebp
sbb
xchg
ja
inc
nop
dec
gs
cs
dec
daa
mov
pop
pop
mov
push
push
iret
cld
jbe
aaa
jno
mov
lock
pop
adc
sbb
pop
ficoms
add
cmpsb
xchg
xor
or
xor
dec
sub
pop
lds
add
sbb
push
jle
mov
mov
imul
in
cwtl
das
add
sub
mov
int
sub
adc
xchg
mov
lods
fs
add
lds
xchg
iret
iret
es
dec
cmpsl
pop
or
mov
lret
xchg
sub
test
or
out
out
mov
lret
pushf
clc
push
jnp
inc
xor
hlt
mov
lods
lcall
pop
jns
push
fs
div
rorl
cmpb
inc
sub
mov
adc
lahf
xchg
or
outsl
es
pop
je
loopne
fisubrl
enter
mov
mov
rcl
mov
scas
loop
xor
cwtl
lret
jmp
mov
das
adc
or
adc
sbb
xchg
pop
xchg
pop
mov
or
xor
cmc
mov
push
adc
aas
sub
insl
and
push
xchg
divl
rcrb
jne
jp
mov
and
add
lock
jg
lods
adc
and
mov
or
movsl
lock
andb
sub
mov
mov
pop
push
push
stos
dec
cmp
pop
fldcw
pop
dec
fisubl
jne
jg
fwait
aas
mov
sbb
push
inc
jp
fwait
cmp
popa
mov
stos
sbb
push
jp
hlt
repz
iret
push
pop
xorl
movsl
fwait
push
out
sub
in
mov
aad
jp
or
lcall
js
in
shrb
sti
insl
ss
xor
sahf
add
jecxz
and
xor
loop
stos
xlat
xchg
mov
fwait
and
add
es
inc
js
pop
roll
int
addl
jp
jbe
jl
dec
fwait
dec
test
dec
cld
cwtl
xor
push
je
bound
mov
int
sub
jno
dec
pop
adc
xchg
div
pusha
subb
ret
or
sahf
jb
ljmp
add
pop
incl
lahf
daa
or
jbe
insb
xor
push
sub
imul
or
jno
outsl
iret
xchg
and
enter
clc
outsb
inc
daa
loopne
sub
stc
imul
lock
or
sub
push
jge
lds
push
ret
popa
dec
mov
adc
sbb
shll
scas
lret
inc
in
pop
cmp
mov
dec
add
add
cli
in
dec
fmulp
jmp
mov
adc
mov
fbld
jns
lods
aam
pusha
xor
cmp
push
in
movsl
xor
push
sbb
pop
adc
aad
loope
cmp
sub
mov
xchg
mov
ret
inc
stos
pop
mov
scas
add
addr16
mov
arpl
fisttpll
inc
pop
pop
cmp
es
iret
push
popf
push
cmpsb
xchg
cld
or
or
fidivl
xchg
cmp
jecxz
push
jne
and
loop
mov
dec
add
xchg
lcall
dec
stos
cvtdq2ps
fsubs
scas
xor
test
shl
xor
pusha
cwtl
repz
jmp
mov
fwait
lret
fisttpll
mov
xchg
movsb
push
xor
addl
inc
push
and
cmp
mov
and
pandn
gs
and
jbe
mov
mov
pop
in
dec
cwtl
pop
push
mov
bound
cmp
lds
xchg
sub
movsl
mov
mov
sub
or
and
std
mov
push
cmp
out
jnp
push
dec
inc
stc
inc
pop
inc
in
mov
fstpl
and
iret
clc
scas
stc
hlt
repz
aam
pop
xor
fisttpll
dec
inc
outsb
xchg
mov
daa
add
mov
aas
out
movsb
stos
sub
cmp
push
jmp
lahf
jp
xchg
adc
shrb
imul
adc
adc
push
in
mov
add
push
push
pop
movsb
mov
push
pop
jno
jno
sti
jecxz
push
mov
inc
ret
sbb
loopne
add
in
pop
cmp
outsb
dec
enter
nop
push
xor
jmp
push
ret
add
call
popa
loope
inc
ficoml
mov
xchg
xchg
jge
mov
ds
cmp
out
sub
scas
iret
fwait
jb
aaa
jle
js
div
out
push
out
jle
test
jl
sbb
test
orb
mov
xor
mov
aad
ja
mov
mov
adc
bound
sub
mov
scas
add
mov
clc
fsts
add
addr16
push
sysenter
lcall
mov
aam
mov
imul
cltd
mov
or
push
lods
sbb
mov
xchg
jns
stc
sbbb
in
xchg
lcall
ljmp
sarb
inc
enter
mov
inc
inc
insb
pop
dec
add
cmpsl
out
jmp
in
cmp
in
xchg
in
rorb
xor
adc
mov
stc
xor
mov
xchg
mov
test
sbb
adc
ss
mov
cmp
or
out
out
shrl
test
add
int3
cmp
stos
sub
and
fidivrl
mov
mov
out
push
dec
dec
cwtl
adc
into
cmp
mov
cmp
mov
mov
pusha
jne
push
dec
add
movsb
aad
lcall
imul
jbe
aaa
pushf
xchg
mov
dec
pusha
jp
es
sti
movsl
movsb
cmc
mov
adc
mov
inc
pop
xlat
dec
mov
push
testl
push
or
ljmp
sbb
xor
jae
hlt
add
xchg
test
xor
xor
xchg
lods
icebp
or
mov
enter
ja
aam
xor
jb
xor
leave
mov
push
mov
fsub
leave
sti
sbb
sti
xor
outsb
pop
or
adc
stos
stos
mov
mov
cmp
jae
cli
fistpll
cmp
repnz
lcall
mov
mov
pop
adc
jl
mov
ret
mov
ret
les
adc
jns
insb
push
aad
mov
xchg
cwtl
lock
lods
xchg
mov
xlat
and
scas
imul
cmp
outsb
fnstsw
pop
mov
fwait
sub
das
scas
shlb
and
inc
cli
mov
or
lret
or
repz
repnz
out
loope
sbb
in
mov
cltd
cmp
dec
lock
test
call
mov
dec
jl
jl
push
lea
mov
out
pop
cmp
xchg
mov
inc
mov
xor
sbb
or
xchg
dec
ret
or
xor
mov
push
inc
cmp
inc
mov
std
push
pop
push
xor
pop
dec
xchg
mov
gs
movsb
cld
pop
and
mov
push
dec
es
std
xchg
lods
dec
test
push
xor
clc
inc
push
lods
stos
loop
mov
mov
ficoml
repnz
sub
daa
xchg
xchg
and
push
dec
jl
pop
or
mov
testb
mov
mov
das
loope
push
jns
inc
add
xchg
mov
mov
dec
sbb
inc
cmp
xor
std
fmul
pop
pop
push
mov
sub
add
xchg
outsl
dec
xchg
movsl
into
mov
dec
and
jmp
cmpsl
in
test
push
cld
push
fimuls
js
inc
cmc
lea
bound
daa
pop
sbb
adc
pop
and
out
add
cwtl
aad
mov
pop
pop
or
repnz
jns
push
sbb
jnp
roll
mov
xchg
pop
dec
cli
xor
push
rcrl
es
or
fidivrs
mov
rcr
into
enter
fsubl
les
rcr
push
sub
jl
popf
push
std
iret
cmpsb
mov
pushf
lods
roll
mov
xchg
push
mov
mov
scas
sbb
arpl
cmpsb
push
lret
insb
cltd
int
add
lcall
data16
jbe
dec
push
push
mov
mov
pop
dec
xor
ss
pop
jo
mov
xor
clc
repnz
push
adc
xchg
inc
jmp
pop
pop
inc
dec
dec
inc
in
mov
outsb
jmp
out
imul
decl
or
iret
pop
sbb
add
les
test
insl
int3
bound
xchg
jecxz
fildl
xor
sub
and
jecxz
mov
mov
add
inc
sahf
rorb
test
int3
mov
mov
cwtl
or
nop
adc
mov
mov
inc
xor
mov
ja
test
or
test
jno
xor
fcom
pop
and
outsb
bnd
sub
jg
ret
adc
sbb
ss
push
push
lcall
jae
sub
bsr
insl
jne
cmp
shll
pop
aaa
movsl
sub
std
sub
je
rcrl
mov
xchg
dec
mov
movsl
xor
jno
mov
xchg
packsswb
mov
lcall
pop
sub
incb
jne
jnp
das
cwtl
pop
in
jae
enter
dec
inc
inc
mov
push
mov
pop
jb
jl
loop
or
push
jns
xlat
sub
jge
cmp
stc
ja
mov
sbb
sub
roll
or
aas
adc
addb
sbb
aad
pop
test
lcall
or
addr16
add
cmpsb
std
das
jae
xor
lds
or
lahf
xchg
imul
lea
dec
clc
mov
jp
aad
cli
or
or
add
mov
mov
jo
mov
das
repz
jecxz
rcrl
ret
out
xor
and
adc
add
push
lahf
inc
outsl
mov
mov
das
repz
jecxz
rcrl
ret
out
xor
and
adc
add
push
lahf
inc
outsl
mov
and
pop
subl
aas
arpl
rcrl
ret
out
mov
and
adc
add
push
sahf
inc
outsb
mov
mov
das
repz
jecxz
rcrl
ret
out
xor
mov
fbstp
aaa
pushf
jo
pusha
mov
in
xor
faddl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
dec
movsl
lods
icebp
and
xor
dec
sarb
aam
xchg
cmp
aam
in
hlt
push
or
adc
and
xor
inc
loope
icebp
shll
xchg
xor
dec
mov
in
hlt
push
fiadds
xchg
ja
sbb
out
rcrl
dec
lret
mov
test
clc
adc
pusha
aad
in
mov
xchg
xor
lock
rolb
iret
out
adc
pusha
inc
ja
mov
xchg
into
stos
inc
aas
cli
pop
mov
lds
or
mov
jp
ds
imul
inc
je
cs
push
leave
add
and
mov
int3
or
dec
mov
and
pop
add
cmp
stos
xchg
inc
mov
popa
xchg
inc
cmc
stos
shll
pop
xchg
movsb
shll
cld
icebp
mov
jmp
outsb
mov
add
pop
loope
loope
or
fs
sbb
fcomi
xchg
inc
leave
scas
lods
add
mov
sarb
popa
movsl
xlat
mov
inc
or
xor
lods
in
aaa
sub
pop
xchg
inc
loope
icebp
fs
jbe
push
cltd
jl
stos
sub
in
nop
arpl
fisubs
pop
std
sub
ja
adc
inc
hlt
movsb
aad
lods
es
cmp
pushf
mull
std
sub
test
loop
inc
aad
rcll
mov
mov
xchg
and
and
daa
push
push
in
jne
add
je
test
xchg
xor
aam
in
hlt
push
add
adc
and
xor
inc
loope
icebp
shll
xchg
xor
aam
in
hlt
push
add
shl
mov
imul
xor
mov
or
push
pop
int3
insb
out
loope
mov
lahf
call
imul
outsl
inc
mov
in
push
dec
aas
pop
push
adc
sbb
mov
shlb
xor
mov
leave
mov
ret
ljmp
push
call
into
xor
mov
inc
push
and
int3
movsb
mov
in
nop
lret
cmp
lds
mov
xchg
sub
xchg
mov
negb
enter
cmp
xchg
rcr
enter
xchg
dec
fnstcw
push
cmp
xchg
dec
mov
mov
arpl
int
cmp
xor
and
push
aad
movsb
adc
mov
xor
push
pop
aaa
push
jl
cwtl
fcomps
popf
jp
jmp
sbb
inc
jl
pusha
jae
sub
pop
bound
aad
push
mov
in
daa
push
inc
out
xor
insl
push
mov
xlat
fisubrs
pop
test
rcr
stos
testl
xlat
fldt
out
lods
jne
orb
aas
push
pop
cmp
sub
xchg
test
js
repz
in
sbbl
sbbl
adc
lret
and
push
and
push
mov
scas
jecxz
aas
or
push
adc
mov
push
add
test
jmp
sahf
mov
mov
mov
push
outsb
jnp
es
outsb
insl
sbb
lods
movsb
lcall
xchg
outsl
pop
xor
or
pop
outsb
lods
stos
sub
or
ljmp
hlt
xor
insb
xor
inc
push
inc
cmp
mov
icebp
test
popa
sub
mov
cwtl
cmpsl
mov
adc
insl
das
ret
push
sbb
adc
mov
pop
push
in
adc
aad
mov
frstor
cmp
jo
in
adc
adc
dec
and
cmpsl
add
in
stc
cmp
ja
out
mov
jne
pushf
dec
push
dec
imul
out
mov
or
xchg
pcmpgtw
and
mov
test
pushf
aad
rorb
popa
std
adc
push
mov
lret
push
shl
jbe
lods
iret
push
stos
andl
xchg
ret
cli
push
and
push
divl
test
nop
mov
pop
lahf
pop
sub
cmp
imul
push
add
pop
or
fs
mov
hlt
mov
stc
jns
and
jbe
jbe
in
in
cwtl
sti
or
repz
psubd
stos
outsb
inc
test
leave
cmpsb
add
insb
or
xchg
jge
imul
jmp
fimull
stos
bound
xchg
das
push
out
shll
rcrb
inc
xor
or
sbb
mov
or
jnp
dec
xchg
pop
std
cmpsl
cwtl
repz
dec
mov
mov
rol
mov
sarb
sbb
and
xor
cmpsb
imul
add
inc
mov
cs
pusha
arpl
cmp
dec
adc
lea
rcrl
jle
pop
and
pop
push
sti
sbb
aaa
cmp
sti
iret
ret
sub
dec
jae
jae
mov
xor
cmp
andl
jae
cltd
mov
outsb
jle
hlt
fcmovnu
dec
movsb
mov
jle
jbe
jmp
push
int3
dec
test
cli
shr
jnp
out
and
push
push
cmpsb
out
scas
push
and
jae
mov
or
fld
push
mov
and
and
mov
shll
fcmovbe
leave
aaa
jecxz
pop
sbb
lods
push
faddl
mov
lcall
and
mov
pop
outsb
mov
jmp
xor
mov
xor
pushf
loopne
std
xchg
test
sub
clc
adc
test
bound
add
mov
jns
sbb
cmp
test
les
mov
ss
xchg
mov
div
imul
mov
inc
leave
or
jo
ret
push
push
bound
pusha
fistps
dec
setle
adc
ss
fwait
mov
sub
push
insl
int3
mov
inc
xor
and
xor
push
xor
cmp
cmpsb
lret
xrstor
pop
jns
std
and
mov
mov
mov
sbb
mov
loop
push
mov
fs
enter
fnstsw
sbb
lods
xchg
mov
test
xchg
xor
cmc
or
or
test
mov
sbb
add
lret
sbb
hlt
or
sti
lret
or
les
xchg
aad
aaa
xor
test
mov
out
popf
lock
jae
gs
out
push
xorb
or
shll
nop
cmp
testb
cs
inc
cld
mov
mov
xlat
aam
xor
add
jge
in
test
fadds
xor
in
add
stos
sub
sbb
or
jle
push
in
or
into
ja
sub
jle
js
and
lret
adc
mov
xchg
fscale
cmp
popl
xor
mov
test
stos
ds
push
add
or
xor
mov
pcmpgtw
fs
std
addr16
cmp
shll
dec
and
push
cmp
sbb
sub
imul
inc
add
jmp
mov
xchg
dec
push
aas
adc
mov
lret
test
insl
movsb
insb
cwtl
repnz
out
and
icebp
decb
cmp
loop
shlb
dec
sub
loope
xchg
lsl
mov
xchg
mov
imul
add
and
mov
dec
xchg
roll
jb
negb
mov
cmp
push
lret
jmp
or
fimull
pop
call
jle
les
mov
stos
mov
push
sub
add
scas
jle
fwait
aas
mov
arpl
and
jp
popf
xchg
pop
sti
std
imul
add
mov
aaa
xchg
ja
iret
loop
inc
sub
mov
mov
dec
cmc
mov
aam
xchg
lods
pop
test
fidivs
arpl
jno
out
icebp
lds
xorl
mov
icebp
mov
push
cmp
xor
mov
pop
popa
leave
dec
push
xorb
pop
in
mov
add
imul
xchg
or
xor
or
cmp
jb
daa
in
ret
add
popa
cmpsl
or
mov
dec
mov
push
pop
pop
es
cmpsl
shll
dec
scas
cs
cs
adc
add
ja
int
push
sbb
fs
lock
and
pop
test
add
imul
cli
push
pop
sub
cs
mov
mov
test
pop
inc
add
xor
and
adc
mov
icebp
pop
mov
fildll
scas
dec
outsl
pop
jmp
test
jp
mov
rcll
push
xor
cmpsl
mov
mov
mov
mov
cmc
and
cli
mov
test
push
loopne
push
xor
jmp
fcoml
les
add
lods
add
or
push
xlat
sub
push
aad
cmc
and
notl
xchg
xor
movsb
popf
adc
aaa
out
sbb
insb
fldcw
or
sub
sbbb
pop
cmp
mov
pop
adc
mov
lds
push
stc
xor
adc
je
sbb
xchg
sbb
pop
in
aas
jl
enter
iret
movsl
ret
add
mov
mov
ror
test
rol
loopne
and
test
dec
mov
pop
repz
mov
mov
cmpsb
adc
leave
adc
add
jae
mov
popf
xchg
pop
shr
jo
xchg
jg
dec
jb
dec
lcall
daa
adc
xchg
enter
add
pop
mov
sub
cmpsb
add
mov
adc
add
in
aad
ret
xchg
pusha
lahf
movsl
push
repz
lar
mov
and
pop
xor
aad
mov
imul
das
inc
enter
leave
not
popf
daa
and
sub
sub
or
and
jb
xchg
jecxz
dec
addr16
cmp
pop
mov
mov
xor
or
movsl
push
rcrb
mov
add
inc
xchg
mov
fs
or
fimull
mov
imul
icebp
mov
xor
popf
fs
sub
stc
cmp
and
mov
cld
fwait
mov
ja
cltd
ljmp
dec
cmp
mov
sbb
ss
stos
sahf
sbb
sub
sub
adc
xor
fwait
adc
xchg
mov
enter
add
cli
rorb
lcall
int
loopne
sub
or
mov
in
inc
pop
repz
out
repz
fcoml
clc
pop
sbb
adcl
sub
iret
inc
out
push
cmp
jmp
pop
cmp
adc
gs
fcomp
or
or
pushf
cli
jo
mov
sub
repz
push
leave
int3
push
inc
sbb
push
cmp
fldl
testb
cmp
les
mov
xor
xchg
mov
and
leave
loope
pop
mov
loope
xchg
mov
jmp
add
dec
cmpsb
add
repz
adc
or
inc
in
or
je
xchg
mov
es
or
jae
mov
or
mov
push
stc
pop
mov
es
pop
cmp
fildl
lods
xlat
inc
mov
clc
lods
scas
or
dec
cmp
dec
sbb
cmpsb
jns
pop
jle
stos
imul
leave
lods
in
pusha
stc
lds
ljmp
je
insl
pop
jne
jb
adc
out
dec
push
mov
int
lods
mov
enter
xchg
dec
cmp
fwait
arpl
fmull
lods
ds
jno
pop
mov
movsl
adc
aaa
mov
test
jecxz
imul
in
xchg
and
pop
out
dec
mov
push
xor
inc
daa
pop
mov
scas
sbb
pusha
and
sbb
xchg
add
push
gs
fstps
and
jmp
movsb
push
insl
and
gs
stos
xchg
ss
inc
add
fnop
insl
sbb
or
xlat
push
mov
jae
rcrb
pop
pop
fildl
or
dec
sbb
imul
shlb
or
push
mov
mov
inc
cltd
lcall
hlt
mov
push
push
aad
xchg
adc
stos
and
cli
push
cmp
test
hlt
jno
jno
fnstenv
jnp
dec
dec
mov
sub
daa
stos
cltd
xchg
mov
fildll
inc
shrb
adc
mov
in
xchg
rolb
jecxz
orl
sbb
xor
in
lds
loopne
int3
ss
adc
sub
call
test
cmp
pop
dec
jb
cli
push
pop
ljmp
adc
cmp
js
jnp
imul
fisubrl
je
push
inc
mov
int3
scas
sub
lock
test
lods
fisubl
sbb
hlt
pop
adc
push
xor
int
and
pop
aad
rorl
adc
int3
movq
test
dec
cmpsl
mov
pusha
dec
jae
pop
jg
dec
aad
ret
jae
clc
mov
adc
adc
subl
out
aaa
push
xchg
cmp
lahf
rorb
jb
mov
cmp
xlat
xchg
fdiv
jo
sub
out
sbb
movsl
and
in
pushf
jbe
pop
cmpsl
sahf
or
rol
cld
movsl
std
jmp
sbb
or
int
push
sub
out
sti
out
xor
out
aaa
jo
or
aam
adc
mov
or
lahf
mov
push
das
xor
jecxz
movsl
cmp
cmp
inc
shlb
lds
jb
and
pop
fnsave
inc
ja
sbb
out
lret
lcall
mov
fs
in
mov
cmp
cmp
pop
hlt
adc
daa
test
shrl
stos
dec
loopne
fisubrs
mov
or
and
sbb
fisubs
in
mov
add
pop
lahf
mov
cmp
xor
push
adc
sbb
and
in
sbb
pop
in
jns
icebp
and
ss
jb
filds
leave
nop
cli
lds
adc
testb
addb
into
fisubrl
nop
dec
roll
testb
xor
mov
adc
and
rcrb
add
in
dec
stc
ds
sbb
movq
sbb
loopne
cmpxchg
in
stos
mov
std
and
sub
mov
cmpsb
inc
inc
fsubl
hlt
cmp
loope
add
shrd
jb
jbe
push
jecxz
or
jle
addr16
not
repz
test
stos
add
stos
shll
lods
mov
pop
pop
test
ret
cltd
orl
inc
ror
push
ljmp
mov
addr16
sbbb
or
fisttps
jle
or
pop
jb
insb
sub
pop
iret
push
sub
or
sbb
addb
lret
xchg
pop
pop
adc
pop
mov
adc
test
lret
jb
push
mov
lfs
inc
xor
addb
rol
popa
or
push
daa
mov
pop
adc
push
nop
mov
aas
fcmovnb
es
mov
jge
repz
mov
sbb
push
fnstcw
pop
je
ret
in
loopne
pop
or
imul
mov
jbe
sahf
cmp
xor
outsl
cmpsb
push
fnsave
call
mov
add
iret
ds
adc
cs
rorb
bound
jp
inc
fdivrs
push
mov
icebp
outsl
sbb
inc
sub
test
lock
push
movnti
push
rcrb
das
cmp
xchg
cmp
or
incb
push
cltd
push
jp
mov
jecxz
outsb
xchg
aas
xchg
jge
aaa
ja
dec
inc
mov
inc
lret
mov
inc
rcl
xor
adc
xchg
out
fists
sub
sbb
inc
mov
push
inc
jmp
pop
fcoms
std
mov
aaa
stos
dec
or
filds
or
lret
jo
jge
mov
cmp
pop
mov
int
test
insb
push
aas
and
pop
and
and
mov
add
sub
sti
int3
mov
xor
out
mov
jp
dec
jno
mov
cmpsl
mov
cmp
je
mov
aaa
or
out
inc
add
add
mov
and
mov
mov
loope
repnz
movsb
jno
clc
inc
cmp
inc
mov
fldcw
add
xor
jb
fiaddl
sahf
xchg
enter
mov
iret
cmc
popa
fistpl
out
stc
out
int3
sub
pop
xchg
addr16
pushf
scas
jno
jmp
mov
rol
enter
jp
push
mov
add
jbe
sub
push
subb
lods
push
xor
or
cmp
in
xchg
dec
ja
pop
push
addr16
hlt
push
lea
dec
repz
mov
test
push
in
jbe
push
xlat
xor
outsb
inc
dec
cmp
jecxz
pop
sahf
sbb
cmp
add
test
lret
mov
pusha
cmpsb
adc
ja
mov
dec
mov
subb
enter
adc
aam
inc
pavgw
xchg
data16
mov
out
sub
sub
aam
add
fiaddl
test
sub
push
lods
mov
negb
cmpsb
repnz
mov
sub
and
pop
test
subl
push
inc
icebp
and
add
cmp
icebp
jl
daa
dec
leave
int3
pop
int
xchg
sbb
test
push
cmp
stos
jns
pop
shrl
arpl
iret
jp
or
jne
ss
mov
pop
jb
add
inc
add
lahf
sbb
ret
into
out
cmp
ret
xor
cld
xor
cltd
jns
add
mov
scas
arpl
loope
ret
nop
adc
and
sbb
jle
xchg
idivb
daa
or
clc
test
fistl
jns
outsl
push
in
scas
mov
pop
xchg
sbb
test
out
dec
bound
jecxz
xchg
xchg
cmc
ret
mov
fsubl
mov
dec
push
and
cmp
negl
lret
sbb
mov
mov
aad
dec
mov
jmp
xor
leave
negb
roll
enter
mov
idiv
fists
jnp
sbb
mov
mov
and
inc
ds
mov
cli
mov
or
pop
pop
add
loop
mov
xchg
mov
popl
mov
inc
mov
daa
cmp
add
add
jg
push
in
popa
leave
insb
pop
and
in
mul
xchg
std
or
movsl
cmpsl
bound
jae
imul
insb
xor
push
movsb
push
call
mov
or
add
pushf
jmp
jns
add
loopne
scas
shll
push
imul
sahf
adc
jge
xor
push
int3
pop
push
and
or
jmp
out
data16
jno
les
loope
lret
jnp
aaa
pop
mov
mov
outsb
push
mov
mov
push
sbb
hlt
sub
inc
mov
pop
xor
in
bound
sub
mov
sub
jne
add
incl
or
enter
inc
xlat
adc
shrl
or
jle
je
jae
push
movsl
mov
xchg
and
out
xchg
gs
call
sbb
mov
sbb
imulb
jp
fstl
xchg
jmp
inc
lcall
push
lahf
jp
or
cmpsl
pop
fcoms
pusha
adc
or
xchg
mov
pop
mov
push
jmp
movsl
cmp
js
mov
xor
js
mov
add
push
pop
add
and
add
idiv
dec
jp
cmc
fs
dec
pop
add
outsl
sub
ss
push
xchg
pop
movsl
jbe
out
lahf
and
push
xor
fwait
sub
fdivl
decl
xor
fldt
push
jnp
sub
insl
js
and
mov
sub
das
add
lods
jecxz
enter
push
xchg
dec
outsb
ret
or
xchg
pop
xor
jns
sti
xlat
mov
push
int3
xchg
cmovo
inc
mov
bound
pop
les
jb
fwait
sub
adc
mulb
divl
xchg
shll
testb
sbb
popa
insl
adc
add
cmpsb
pop
arpl
sbbl
inc
cmp
xchg
jo
adc
jno
jl
dec
mov
ss
out
dec
mov
jns
cmpsl
dec
lret
dec
mov
fistpll
cmpsb
cwtl
test
cld
aad
sbb
sbb
fwait
mov
cmc
loopne
nop
xchg
xlat
mov
fisubs
sbb
xchg
lds
mov
jnp
jns
cmp
std
nop
sub
sti
notb
aaa
in
xor
sti
add
xchg
mov
icebp
scas
insl
imul
fmull
sbb
jae
das
mov
mov
aaa
mov
das
ss
loop
mov
jno
adc
outsl
pop
sti
push
lcall
mov
insl
sub
pop
push
push
and
scas
sbb
mov
jge
and
inc
scas
ja
jns
pop
xchg
adc
xchg
jne
push
jmp
test
mov
repnz
sbb
jmp
xor
aam
or
fldln2
push
movsl
push
std
jbe
add
movsl
out
jno
cmpsb
ds
pusha
mov
jp
dec
insl
aad
add
sub
rcll
push
daa
hlt
xor
aaa
sub
imul
test
ds
dec
cmpsl
dec
cmpsl
xchg
jnp
mov
xchg
and
lahf
dec
in
fmull
ljmp
pop
repnz
je
or
fcoms
nop
std
rcll
movsb
out
sbb
push
inc
jb
pop
loopne
popf
push
cmc
mov
lcall
mov
add
inc
leave
sub
mov
fdivrs
lahf
jb
mov
test
je
ljmp
push
pop
outsb
dec
xchg
xor
push
fists
lods
repnz
int3
inc
push
cmp
mov
push
jg
adc
jb
sahf
dec
in
negl
aaa
in
and
pop
lcall
jno
clc
mov
jmp
pop
cmpsb
je
sub
jo
movsl
jmp
out
jge
int3
test
mov
cmp
sti
sahf
dec
adc
adc
jp
or
dec
idiv
push
mov
out
mov
ds
inc
or
cli
into
lret
xchg
fdivrs
pop
in
cmpsb
es
gs
adc
js
adc
jae
lret
iret
jp
push
mov
test
xchg
inc
loope
icebp
shll
xchg
xor
aam
in
hlt
push
add
adc
and
xor
inc
loope
icebp
shll
xchg
xor
aam
in
hlt
push
add
pop
mov
inc
loope
lcall
xchg
xor
les
jno
dec
les
lods
gs
inc
loope
icebp
fs
hlt
adc
mov
mov
pop
or
cmp
sub
enter
pop
out
and
stos
inc
push
mov
cmpsl
jbe
xchg
testl
notb
out
xchg
ja
jmp
push
cmpsb
xor
inc
xchg
push
out
xchg
es
iret
movsl
fbld
out
mov
sahf
pop
scas
mov
les
enter
mov
jno
mov
bound
in
ja
popa
lahf
shlb
push
or
push
xchg
pop
cltd
push
mov
pop
mov
xor
xor
mov
cwtl
xchg
inc
notb
and
cmp
add
and
pop
cmp
cmp
or
xlat
cli
out
pop
xlat
xlat
not
aaa
aas
pop
ret
ja
cmovns
testl
push
sbb
and
jnp
push
subb
and
pop
push
inc
push
in
mov
push
xchg
xchg
movsb
push
out
cmp
mull
lcall
test
inc
pop
scas
mov
or
lahf
push
notb
xlat
es
pop
aaa
notb
xchg
addr16
mov
popa
outsb
xchg
push
fistpl
pop
sub
es
xchg
push
xchg
sub
add
or
cmpsb
and
sub
add
cwtl
arpl
mov
jbe
and
sbb
sub
repnz
loopne
cmpsl
insl
stos
inc
mov
lods
mov
stos
pusha
lcall
addr16
cmpsb
inc
push
mov
cmpsl
jbe
xchg
testl
aaa
daa
notb
out
xchg
ja
addr16
cmpsb
inc
push
mov
cmpsl
jbe
xchg
testl
aaa
jmp
sub
out
xorb
cmp
cmp
imul
dec
adc
pop
add
hlt
test
sub
iret
sar
xchg
addl
pusha
ret
xchg
jb
pop
inc
adc
loopne
test
push
xchg
and
jecxz
fwait
cmpsl
into
andl
cli
adc
lds
or
test
cli
js
inc
sub
stos
icebp
mov
inc
std
scas
stc
repz
mov
or
lret
and
in
orl
add
int3
or
iret
sub
jbe
subl
stos
gs
inc
cmp
xchg
and
ljmp
inc
int
ds
je
sub
arpl
or
jnp
xchg
push
xchg
mov
sub
jo
aam
daa
add
pop
cmp
or
dec
subl
mov
repnz
and
mov
adc
cmp
xchg
xor
hlt
cltd
fistl
in
mov
mov
cld
adc
pop
mov
sbb
scas
mov
imul
mov
lret
mov
stos
lcall
mov
icebp
dec
dec
inc
scas
mov
icebp
insb
sub
lret
shll
outsb
add
lcall
lods
call
into
jno
sub
adc
fstl
add
push
adc
mov
lcall
xor
cmpl
and
xchg
fistpll
stc
jne
xor
push
cmp
lock
das
pop
or
lock
add
xor
pop
xor
jo
mov
scas
cmovb
add
jb
mov
ret
mov
insb
sbb
cmp
insb
shrb
mov
maxps
dec
adc
push
shlb
gs
sbb
fs
gs
adc
push
je
aaa
ficomps
jno
inc
in
rcrb
sub
pop
les
test
into
repnz
adc
ja
add
jge
scas
arpl
xchg
cmpsl
dec
loope
pop
int
pushf
jo
out
into
push
xchg
xor
mov
mov
sbbl
cmp
mov
lcall
jne
pop
adc
xchg
mov
inc
subl
sbb
sbb
repnz
and
cltd
xchg
mov
scas
push
or
xor
sub
scas
jo
jo
and
out
jmp
sbb
lret
test
out
inc
in
pop
xchg
ja
fwait
ret
mov
cmp
sub
ja
add
mov
dec
sub
pop
mov
add
sub
test
jge
loope
scas
fwait
dec
bound
cmp
jge
sub
and
jle
loopne
inc
push
lods
adc
fidivrs
dec
and
sbb
cwtl
mov
mov
movsl
fistpll
lods
mov
xchg
adc
cmpsb
adc
inc
push
lret
mov
sbb
mov
dec
push
cmp
mov
stos
and
mov
das
call
pop
loop
dec
pushf
out
fsubl
mov
inc
pusha
push
xor
mov
cmp
ret
mov
fidivrl
sub
mov
scas
xchg
jp
jo
add
fstpl
dec
mov
inc
add
xchg
ret
ja
adc
loopne
add
and
pusha
adc
push
out
lods
xchg
mov
cwtl
inc
fisubs
mov
fwait
mov
sbb
dec
addb
jmp
jae
inc
int3
jge
insb
nop
testb
mov
rorl
hlt
gs
push
pop
cmp
jne
in
adc
sbb
popa
test
out
cmp
addr16
cmovo
shlb
and
das
cmpsl
mov
fisubl
xchg
gs
xchg
fsts
stos
inc
notb
or
xchg
sbb
inc
jmp
popa
sbb
cltd
mov
pop
idivb
scas
cwtl
aam
mov
fsubl
inc
mov
xchg
lods
shlb
inc
repnz
mov
pop
add
inc
movsl
pop
and
insb
in
sub
adc
in
out
and
shr
hlt
rorb
stos
lea
out
sbb
push
xchg
adc
cmp
dec
mov
mov
sbb
lock
or
enter
rcl
xchg
push
pop
add
fwait
dec
inc
pop
xor
aaa
xchg
push
xchg
loopne
add
ljmp
data16
lret
sbb
push
cmp
lahf
lds
adc
popf
xchg
xchg
in
test
xchg
cltd
sbb
stc
push
mov
inc
test
or
movsb
imulb
cmp
out
fcompl
pop
dec
pop
inc
outsb
cmp
popf
cmp
pop
int3
call
stc
push
dec
xlat
sbb
jnp
es
sbb
std
loopne
pop
dec
das
lea
cmp
push
fisttpll
shr
pop
jb
xchg
mov
scas
aaa
mov
lcall
jge
sarb
jmp
bound
fdivl
les
movsb
lock
outsl
movsb
and
test
jnp
inc
rorb
jmp
cld
loope
mov
push
les
jo
dec
fwait
nop
cmpl
lcall
rorb
faddl
push
mov
push
adc
push
adc
nop
inc
dec
xchg
mov
push
xchg
js
out
insl
sbb
sbb
movsl
sbb
mov
shll
in
cld
xchg
inc
or
and
aam
lahf
rolb
adc
pop
shlb
xchg
in
mov
pop
push
test
push
ss
dec
out
cmp
fisubs
in
mov
rorl
fwait
inc
mov
pop
decl
aad
cwtl
stc
sub
shl
popf
jl
imul
imul
mov
and
stos
divb
leave
imul
mov
mov
pop
mov
push
cli
add
xor
push
add
push
fbld
push
xchg
jno
loopne
cmp
fsubrl
pop
cmp
xchg
jo
mov
xchg
mov
dec
inc
addr16
fsubs
decb
dec
fnstcw
jbe
imul
cmpsb
lods
jmp
fisubrs
pusha
hlt
test
sbb
push
push
hlt
int3
sbb
mov
add
pop
sub
mov
daa
add
scas
xchg
push
or
call
popa
adc
xchg
jno
sarl
mov
lea
and
leave
xor
sbb
sub
scas
fistps
xor
in
mov
jmp
pop
sub
sub
jmp
pop
test
hlt
out
mov
adc
repnz
into
and
orl
pop
ficoml
shrb
add
pop
out
popa
push
stos
test
fstpl
les
mov
in
mov
pop
cmp
ss
mov
mov
mov
fwait
pop
adc
insl
pop
mov
jg
add
pop
cmp
mov
dec
xor
push
dec
movsl
enter
jge
push
lret
xor
addb
shl
rolb
add
out
mov
fmull
adc
xor
cmp
xor
test
pop
adc
mov
insb
mov
push
adcb
testb
pop
cmc
outsb
aas
test
jp
loope
dec
jp
and
popa
sbb
add
push
mov
cmp
pushf
push
or
cmp
in
stos
sub
cmpsb
xchg
into
push
out
lock
pop
dec
jmp
push
ja
std
test
sub
repz
inc
or
stos
scas
outsl
jmp
rolb
into
xchg
adc
and
imul
gs
mov
test
dec
loope
dec
icebp
es
stos
hlt
repz
lret
pop
mov
mov
push
sub
iret
loop
mov
lahf
jge
adc
push
ret
inc
jns
lds
daa
cmp
inc
xlat
fdivr
mov
or
int
push
mov
jno
cld
lahf
flds
aas
fcomps
pop
sbb
iret
rcl
and
sahf
gs
push
addr16
jle
sbb
or
aam
aam
gs
mov
sbb
fstpl
cmpb
call
adc
in
leave
fidivs
xchg
xchg
and
add
mov
cs
mov
sub
stos
call
sbbb
xor
adc
inc
cmpl
aad
lds
mov
adc
push
sbb
xchg
into
fwait
iret
rcr
mov
insl
daa
pop
pop
mov
stos
scas
or
fstp
xor
inc
flds
push
stos
jno
and
and
leave
js
enter
xor
jg
lcall
shll
cmpsb
push
dec
test
sar
mov
loope
aas
add
dec
loope
cs
pop
mov
xchg
fisubl
aas
lahf
mov
es
fisttpll
cmp
ret
subl
push
xorl
pop
mov
lea
push
mov
pop
loope
fistl
mov
mov
pop
adc
mov
adc
sub
jbe
mov
adc
insl
ss
sbb
fxch
stc
in
or
fwait
jae
adc
mov
xchg
pop
sbb
jo
cltd
fisttps
movsb
mov
xchg
in
out
inc
repnz
test
sti
mov
or
into
add
out
call
sbbb
jle
sarl
cmp
sbb
repz
jne
inc
push
push
fists
adc
jnp
push
adc
cmp
leave
add
shll
test
scas
faddl
imul
xchg
inc
subb
repnz
cltd
negb
clc
mov
adc
fstpl
xor
out
jmp
xchg
cmpsb
pop
ja
xor
push
test
dec
mov
and
lds
mov
lods
dec
cmp
sahf
test
adc
push
mov
inc
dec
ljmp
out
dec
mov
movsl
inc
and
enter
pop
sti
xor
jecxz
ja
push
push
insb
ffree
xchg
or
insb
push
rcll
cwtl
scas
insl
out
aaa
ret
jmp
iret
pop
sub
xchg
fisubrs
dec
add
and
inc
testb
push
test
repz
cwtl
mov
mov
jo
jecxz
mov
mov
fiaddl
shl
pop
enter
daa
movsl
jb
pusha
jae
fdivl
adc
das
mov
push
sbb
aas
mov
cmpsb
inc
loop
movsb
cmp
add
sbbb
ror
xlat
fidivs
daa
fildl
jmp
jle
movsb
jp
push
cmc
pop
xchg
mov
jo
push
sbb
mov
jnp
jno
nop
jbe
xchg
fisttps
rcr
and
insl
pop
adc
les
inc
xchg
xor
pop
and
push
addr16
or
sbb
mov
aad
lea
cmp
inc
sbb
inc
xchg
xorb
decb
dec
ror
mov
jbe
lock
mov
dec
sub
or
sbb
js
pushf
clc
jl
incl
and
xlat
pushf
add
dec
sbb
mov
addr16
das
roll
sub
adc
repz
sbb
fcompl
int
jge
dec
daa
outsl
loopne
inc
cmpsb
or
mov
lret
mov
pop
mov
bound
test
loope
jo
insl
sub
loopne
lds
adc
pop
out
mov
adc
fldcw
test
nop
sbb
repz
pop
popf
inc
and
jg
in
subl
loope
test
mov
jne
xchg
mov
pop
push
add
dec
push
js
sahf
xlat
add
lret
icebp
xchg
mov
adc
out
add
incb
jmp
adcl
jbe
xchg
test
mov
movsl
in
scas
push
sub
daa
pop
orb
rolb
jbe
mov
out
xchg
repnz
inc
pop
pop
cwtl
ja
movsl
pushl
rcll
aam
fsts
lock
outsl
or
jp
pop
inc
mov
andb
jmp
es
ljmp
pop
out
fnsave
cmpb
jge
fcmove
sar
dec
dec
xor
inc
xchg
repz
imul
loop
mov
sub
jge
testl
das
xor
jnp
mov
and
jg
add
aad
or
js
daa
push
ljmp
pop
popa
ds
lcall
addr16
insl
mov
xchg
mov
xchg
stc
jne
shlb
ja
popa
cwtl
jmp
or
scas
divl
popa
add
and
or
pop
popa
pushf
adc
xchg
inc
outsl
insl
sti
in
aas
mov
push
mov
push
mov
pop
jmp
cmc
add
imul
jmp
jo
int
arpl
ja
jno
movsl
idiv
rol
lods
aad
inc
fnstenv
mov
jo
mov
mov
mov
inc
sbb
inc
gs
inc
jbe
sbb
clc
imul
xor
ret
lods
repnz
cld
jle
jo
add
ds
fsubrs
mov
mov
les
rorb
popf
jnp
in
xor
mov
pop
in
int
out
addr16
add
jne
outsb
imul
mov
sarb
pop
mov
inc
cmp
xlat
xchg
and
notl
xchg
scas
popf
pop
push
inc
jne
inc
add
mov
mov
cmc
and
mov
pushf
sti
adc
imul
cmpsb
sub
flds
pop
mov
lcall
jbe
lods
push
ret
xchg
mov
aaa
js
sub
jp
or
mov
in
js
sub
out
inc
dec
cmpl
push
or
cmpsl
and
cli
outsl
sahf
das
xor
cmpsb
iret
xchg
xchg
lret
in
jae
mov
imull
add
cmp
popf
mov
icebp
inc
mov
pushf
cmp
lock
loopne
xchg
mov
aas
jne
loope
xchg
lods
in
mov
test
in
sbb
leave
sbb
addr16
clc
xchg
xor
outsl
jnp
add
outsl
and
pop
or
mov
call
and
pusha
and
sbbb
inc
jmp
stc
xchg
xor
pop
ljmp
mov
xchg
jmp
xchg
lds
push
sbb
add
cmp
mov
push
pop
lret
sbb
jge
jns
lods
mov
scas
les
sub
add
pop
je
sbb
arpl
testb
xor
jb
ljmp
dec
xchg
xor
scas
push
cwtl
jns
pop
and
mov
scas
mov
out
outsl
sbb
mov
out
push
cli
pop
pushf
xchg
push
add
mov
rcll
sub
mov
ds
test
lret
lahf
lret
lret
fwait
add
nop
ret
movsl
fstps
lds
mov
dec
in
dec
ret
insl
push
and
std
mov
cwtl
mov
shll
push
out
movsl
andl
je
mov
outsl
xchg
add
xor
cld
in
add
cld
std
cmp
push
push
pop
scas
xchg
fstl
int3
inc
cmp
rorb
mov
js
cs
in
int3
push
hlt
inc
push
jmp
and
cmp
jnp
movsl
jb
pop
xchg
arpl
pop
inc
or
push
push
aam
mov
arpl
jge
jge
mov
test
lcall
dec
test
jmp
mov
mov
cmp
movsl
ret
jle
out
mov
inc
add
fiaddl
xchg
pusha
pop
mov
mov
push
nop
bound
inc
adc
cltd
hlt
in
mov
mov
leave
andl
mov
insb
iret
lret
pop
cmpsl
sahf
movsb
stos
fadd
fstpl
aaa
outsl
pop
add
out
xchg
je
mov
cmp
mov
iret
xchg
shll
mov
push
pop
icebp
out
adc
mov
lds
je
push
scas
mov
jo
call
jbe
cmp
insl
adc
in
iret
insl
jbe
lods
sub
or
imul
das
add
sub
inc
es
inc
outsl
std
push
incl
enter
sbb
mov
ret
fcoml
jmp
jecxz
mov
bound
push
pop
jb
push
jnp
mov
lods
in
jmp
shll
mov
pop
pop
rcrb
cmp
addr16
xchg
leave
jl
add
cmpsb
or
dec
inc
outsl
lret
add
jb
cmpsl
lock
leave
les
mov
outsl
lcall
ja
push
mov
andb
test
orl
out
add
dec
out
test
lods
movsb
inc
inc
cmc
fwait
gs
push
push
push
add
rcl
mov
and
pop
add
mov
mov
popa
ljmp
mov
test
cld
cld
dec
lods
mov
stos
and
mov
xchg
cli
shrl
out
and
js
mov
insl
mov
ds
movsl
push
pop
data16
fldcw
mov
xor
test
subl
stos
icebp
inc
jno
sbb
xor
test
adc
rol
inc
insb
and
leave
jecxz
mov
fistps
or
aaa
and
push
dec
and
clc
jg
mov
jle
inc
pushf
cmp
shrl
dec
mov
outsl
mov
fmul
adc
pop
aas
xlat
dec
stos
in
ffree
scas
imul
mov
add
and
shlb
cmp
hlt
jge
sti
fsub
lods
fnstenv
lods
lods
jnp
movsl
insl
movsl
daa
mov
xor
mov
push
ret
loopne
daa
cmp
inc
sbb
fyl2xp1
std
mov
xorl
jae
das
mov
inc
adc
shlb
in
push
pop
test
xorb
out
mov
adc
sub
jg
inc
addl
mov
push
dec
or
push
ja
arpl
fincstp
and
loope
out
sub
push
pushf
sbb
dec
and
jle
jle
push
add
fdivl
mov
mov
cld
movsb
sub
jnp
push
cs
out
stos
mov
popf
rclb
sub
je
cmpsl
sbb
mov
pop
dec
add
call
cmpsl
pop
or
scas
js
ret
inc
xor
arpl
or
jle
shrb
adc
fldenv
xlat
fwait
iret
fstenv
jp
cmp
ljmp
faddl
adc
push
or
shl
jecxz
push
push
int
int
push
outsb
jge
inc
insb
jo
int3
test
adcb
jp
lcallw
mov
jmp
pop
jp
lock
push
into
nop
pop
outsb
rorb
jg
inc
and
sbb
sub
sub
clc
lret
jl
cmp
add
aas
xor
sub
dec
jle
cwtl
jbe
pop
jae
adc
lods
pop
or
dec
push
pop
pusha
ret
pop
mov
sub
cwtl
imul
push
sbb
adc
iret
lods
sbb
sub
xchg
mov
leave
xlat
movsl
imul
sti
rorb
xor
roll
repz
xchg
mov
push
into
pop
nop
push
mov
rolb
clc
jnp
sbb
leave
xor
mov
pop
mov
ret
std
add
pop
cld
sub
push
sti
orl
out
push
sub
movsl
out
lods
mov
cld
pop
ljmp
cwtl
rorb
jle
mov
popf
cmp
add
xchg
dec
cwtl
cli
mov
rcr
daa
or
inc
insl
dec
pop
enter
fmull
push
lods
jl
jae
shll
dec
iret
inc
lret
or
in
pop
inc
jecxz
dec
stos
fs
inc
fbstp
inc
fnstcw
bswap
cmpl
test
fistl
sbb
push
rcl
fidivs
mov
out
insb
mov
push
push
pop
insb
jge
add
inc
je
xchg
cmpsl
fs
push
sbb
jecxz
sbb
stos
das
adc
pop
pop
push
jno
push
xchg
rcll
or
rcll
xor
dec
mov
loopne
inc
adc
add
js
in
hlt
mov
roll
jns
push
bound
pop
cmpsb
sbb
rcrl
icebp
popa
or
mov
in
or
lahf
cltd
mov
and
popa
or
mov
mov
sub
xchg
or
xchg
es
sub
icebp
je
and
loop
pop
xchg
add
pop
out
cmp
mov
fidivs
jge
fs
cmpsb
sbb
sarl
aad
mov
mov
inc
cld
ficoml
jno
sub
push
xor
fisubs
or
sbb
jne
pusha
inc
push
mov
negb
mov
arpl
cmp
mov
and
mov
mov
scas
imul
scas
ja
mov
imul
pushf
test
fcoms
ss
and
push
jmp
iretw
mov
mov
out
xchg
xchg
push
out
or
mov
lods
sub
repz
orl
aam
icebp
imul
mov
popl
movsb
jb
lods
mov
pop
pop
leave
leave
gs
lret
sbb
and
sarl
popf
cld
jnp
pop
xchg
ja
addr16
cmpsb
inc
push
mov
cmpsl
jbe
xchg
testl
aaa
daa
notb
out
xchg
ja
addr16
cmpsb
inc
push
mov
cmpsl
jbe
xchg
testl
aaa
outsl
imulb
pop
xchg
ja
iret
mov
cmpsb
inc
push
outsl
inc
cmpsl
jbe
xchg
testl
aaa
les
notl
out
xchg
ja
xlat
es
test
xchg
lock
jg
sbb
sub
cmp
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
adc
and
push
cwtl
dec
fcmovnu
sub
mov
mov
cmp
dec
repnz
jbe
add
push
jmp
sti
jb
fistl
or
jnp
dec
loop
stos
stos
lock
dec
jmp
sti
insb
lret
fcomi
adc
sbb
cs
iret
xor
dec
ja
sub
dec
cmp
aaa
mov
in
or
dec
xchg
insb
ret
shl
mov
cmpsl
fs
ret
out
shll
pop
aaa
or
sub
dec
sbb
insl
inc
jl
negl
int3
push
pop
jmp
lds
imul
into
push
push
xlat
mov
lods
ljmp
xchg
sbb
in
cmp
sub
mov
jp
cmova
pop
mov
add
xor
lea
mul
sub
dec
out
or
cs
inc
xor
stos
clc
lea
push
pop
mov
orps
pop
xchg
xchg
repnz
loope
dec
stos
push
mov
mov
cmp
jb
fistl
cmp
or
jnp
dec
loop
jnp
jo
inc
int
fnstsw
scas
bound
xlat
gs
jne
push
lods
add
ljmp
cmp
aaa
fcomi
outsb
rclb
pop
fidivl
add
adc
mov
iret
push
pushl
add
fistl
or
jnp
dec
loop
adc
and
jb
fistl
or
jnp
dec
loop
adc
loop
popf
cs
push
icebp
sbb
rcll
lds
push
cmp
xchg
mov
out
adc
sbb
cmpb
or
aaa
add
mov
push
push
hlt
push
lods
into
daa
cmpsb
dec
cmp
sub
mov
popf
sub
push
dec
insb
rcl
movsl
push
add
and
cmp
jg
push
insb
mov
jns
xchg
mov
loop
adc
mov
inc
fwait
lret
ss
mov
xor
xchg
aaa
sbb
lcall
dec
sbb
push
out
add
in
aaa
addr16
add
push
cmp
xchg
sbb
jbe
lret
rcrb
inc
icebp
test
out
mov
pushf
inc
pushf
jnp
push
jbe
and
adc
mov
das
xchg
mov
rcll
test
cmp
insb
xlat
pop
mov
les
or
test
negl
sbb
mov
shrl
jo
lods
xor
mov
fs
outsb
pop
jecxz
inc
pushf
dec
and
test
cwtl
push
inc
mov
leave
out
rol
jl
movsl
fwait
movsb
in
xchg
cmp
inc
adc
shll
outsb
loope
cmp
fcmovnu
fwait
ret
sbb
fdivrp
cmp
or
enter
aas
lods
fisttpl
sti
fidivrs
ljmp
ret
subl
pop
into
fnsave
orl
inc
xor
jno
aas
xor
push
xchg
adc
xor
sub
in
adc
cmp
inc
dec
inc
cwtl
xor
dec
fwait
add
shr
or
cld
mov
dec
sbb
add
mov
dec
ficomps
mov
and
out
and
outsb
fstps
or
aas
pop
scas
lock
dec
sub
push
pop
hlt
sub
fld
rorl
xchg
push
loop
testl
push
dec
cmp
mov
mov
pop
or
lock
or
cmp
or
cmpb
lcall
push
test
or
pop
idivl
xchg
push
xchg
outsl
and
jg
jne
sti
jge
xchg
adc
jmp
shll
xchg
addr16
lret
cvtdq2ps
lock
rcrb
adc
std
sub
gs
add
jae
and
sub
cwtl
jbe
mov
mov
in
mov
sbb
xlat
mov
cld
mov
out
lret
mov
fcmove
add
or
xor
dec
add
jmp
mov
mov
mov
push
in
out
loop
jo
mov
out
aad
sub
mov
pop
int3
stc
ja
xchg
lods
pop
fistpl
lcall
xchg
shrl
push
movsl
xor
lods
rcll
mov
jb
or
add
fadds
roll
jg
imul
and
sar
inc
into
lcall
mov
and
xlat
xchg
in
push
sbb
stos
lcall
je
xor
jo
add
das
test
and
jo
int3
ss
adc
mov
pop
cmc
ljmpw
movsb
xchg
pop
loop
data16
lock
lds
ret
test
lret
sbb
cs
push
and
scas
add
add
sbb
mov
test
adc
adc
rorb
aaa
cmp
out
sub
push
cmp
sahf
cwtl
jbe
je
push
popa
lahf
clc
sub
fisubl
mov
cmp
inc
movsl
movl
mov
mov
fsub
hlt
ljmp
inc
inc
jne
xor
lret
stos
jb
ljmp
mov
mov
push
aad
adc
xchg
arpl
jae
stc
test
xchg
cmp
pop
xor
push
add
pop
mov
pop
outsl
mov
daa
movsb
fmulp
jns
icebp
minps
rcrb
push
xlat
dec
jg
xchg
lret
hlt
xchg
ret
in
mov
cmp
lea
pop
loopne
cmp
cmp
subl
mov
inc
aam
xchg
xchg
imul
sub
inc
insl
pop
sarb
rcrl
mov
aad
sub
lods
test
jg
pop
fldcw
dec
dec
jne
ss
ret
and
fmulp
pop
int3
insb
pop
int3
aas
adc
fidivl
les
add
jnp
sbb
xchg
in
stc
pop
mov
or
push
mov
push
aad
mulb
or
mov
push
sti
jns
sub
call
sbb
loopne
flds
pop
jge
inc
fcmovnb
mov
mov
bound
test
fsub
je
cmpsb
lods
mov
outsb
insl
lahf
jbe
inc
inc
mov
inc
in
in
xor
mov
xchg
arpl
mov
jl
push
popf
xor
lret
pop
add
dec
lock
ret
and
hlt
fdivl
jp
cwtl
leave
pop
mov
cmp
push
sub
inc
xor
lea
pusha
xor
jns
rep
pop
xor
jle
test
cmc
inc
lcall
add
jno
repz
stos
out
xlat
or
mov
push
andl
fldl2t
andb
lcall
xchg
adc
jbe
out
outsb
jo
and
push
rorb
gs
mov
aas
sahf
push
imul
sbb
mov
movsl
sub
rorl
lret
stos
pop
cmp
jle
mov
lret
push
je
nop
shrb
add
cmp
pop
xchg
jecxz
xlat
insb
loopne
push
push
sbb
test
mov
push
jb
cltd
aaa
mov
sub
pop
push
inc
push
les
cwtl
pop
movb
mov
repz
dec
cmp
xor
cli
cmp
loop
jl
dec
mov
mov
sub
mov
gs
ss
sbb
incl
or
or
in
xchg
jae
and
movl
mov
into
imul
in
xlat
fcomps
or
cmp
das
in
adc
insl
xchg
sbb
in
or
lahf
fidivl
in
aas
sti
pop
shrl
fcmovb
sbb
mov
lea
push
das
sub
mov
test
add
jne
or
ret
xchg
and
in
lea
in
fwait
lea
mov
cmpsl
xor
sbb
jge
int
into
push
daa
pop
inc
sahf
in
in
enter
std
mov
mov
arpl
movsl
pop
addr16
jno
sbb
pop
xchg
aam
xor
cmc
adc
add
hlt
adcb
xchg
push
fiaddl
xor
out
fdivl
add
pop
jns
xor
gs
notl
inc
addr16
mov
mulb
jp
or
mov
push
xchg
mov
mov
sbb
imul
xor
mov
stos
adc
xchg
dec
lret
xchg
test
fcoml
pop
fwait
xor
cmpsb
in
fsubp
mov
insb
and
movsl
adc
sahf
cs
loopne
fcomi
out
popf
push
addr16
cmp
cwtl
mov
gs
jg
mov
mov
mov
jle
pusha
xchg
push
pop
mov
add
loope
es
std
mov
add
sbb
out
inc
jge
int
inc
rclb
aas
pusha
sbb
test
cwtl
imul
incl
mov
xor
into
cld
out
aas
aad
and
cmp
inc
xchg
imul
mov
call
jmp
jl
xor
les
sbb
push
cmp
jmp
filds
jecxz
jb
lods
and
in
cmc
xchg
pop
out
add
cltd
rcrb
mov
sahf
into
pop
push
or
mov
test
push
mov
dec
mov
je
imul
or
xor
sub
mov
cmp
popa
aas
repnz
push
pop
mov
and
jo
into
or
jle
jle
enter
dec
test
inc
pop
pop
add
mov
int
and
or
push
lahf
and
loopne
jae
push
mov
pop
js
push
popa
in
lock
push
lret
fmull
into
js
mov
mov
aam
stc
pop
test
push
push
dec
jp
jle
cs
lds
xchg
sub
in
cmp
pop
call
dec
sbb
hlt
push
jbe
arpl
mov
push
mov
xor
into
and
mov
fsubrs
cld
pop
fisubrl
fdivrp
fsubs
movsl
das
sarl
aam
push
push
push
xor
ficoms
cmp
out
in
enter
mov
push
mov
sbb
subl
and
sti
shl
mov
lcall
mov
mov
xor
mov
push
dec
or
dec
pop
jnp
or
ret
aam
or
arpl
not
inc
push
pop
and
xchg
sub
test
into
movsb
dec
repz
sbb
push
xor
dec
out
stos
add
sub
mov
mov
stos
sbb
jne
xchg
popf
jbe
mov
cli
imul
data16
adc
roll
and
mov
vmread
fdivrl
dec
fcoms
in
in
xchg
add
mov
mov
aas
sbb
jns
pusha
das
mov
mov
test
bound
shlb
mov
dec
sub
push
jg
sbb
cwtl
and
mov
jne
cmp
bound
mov
dec
cmpsl
xchg
and
jp
fs
xchg
scas
enter
jo
add
pop
ljmp
push
push
sub
pop
cmpsl
bound
dec
jbe
jmp
push
mov
aad
inc
fdivrp
xchg
stos
lahf
mov
fdivrl
imul
jle
and
mov
mov
lods
shll
or
lds
mov
rcrb
out
sarl
xor
mov
push
lret
insb
cli
clc
mov
sbb
xor
xchg
sbb
xchg
sbb
outsb
scas
sub
push
out
in
push
xchg
sbb
setnp
jge
push
sbb
mov
ret
and
add
das
sub
xor
iret
cmp
outsb
sub
dec
mov
jnp
dec
cmpl
jge
shll
dec
xchg
pop
push
jnp
mov
xchg
mov
jns
inc
fmuls
mov
pop
push
lods
int
sub
or
ret
sub
leave
mov
fldcw
sbb
aaa
icebp
push
dec
in
fwait
ss
adc
mov
sarb
inc
sahf
lcall
aas
push
sub
in
mov
bound
fsubl
test
pop
cltd
push
xchg
cmpsl
xchg
jne
or
xchg
push
ret
out
shll
aas
jl
paddsw
popa
xchg
cmpsb
add
mov
or
out
test
mov
cli
or
stc
mov
dec
dec
xchg
mov
ficompl
in
mov
jecxz
std
movsb
add
jl
pop
and
ja
cmp
adc
pop
mov
jl
ljmp
shl
bound
imul
lret
xor
pop
or
lods
leave
fwait
scas
xor
scas
outsb
inc
cwtl
mov
shlb
cld
add
rorb
cmp
lods
cmpsb
push
jmp
adc
pushf
movq
pusha
outsb
cmp
adc
sub
add
xchg
shlb
sbb
test
gs
pop
push
dec
daa
fwait
insb
cmp
cmp
dec
xor
jg
push
xchg
sub
rcr
pop
adc
popf
xor
sti
jns
pop
out
leavew
cs
pop
cli
jnp
mov
cli
adc
push
data16
rcr
outsb
dec
popa
mov
jge
jle
sub
and
cli
jne
mov
sahf
rcr
inc
adc
cmc
sbb
inc
cltd
idivb
out
pop
movsb
push
cmpsb
cmp
push
xchg
out
fisttpl
popf
push
dec
adc
test
sub
xor
ret
in
xchg
rcrb
push
mov
js
pop
cmp
jecxz
movsl
cld
sbb
std
adc
into
sbb
data16
sbb
aad
fcomi
or
xchg
sub
int
xor
pusha
fldt
sbbb
shr
dec
pop
stos
push
bound
loopne
mov
fdivrs
or
stos
cmp
sub
pop
lret
jbe
mov
push
std
test
push
pop
jge
cmpsb
sbb
pop
rcl
shrl
push
bound
dec
stos
adc
out
xor
out
cltd
inc
jbe
andl
adc
xor
or
dec
aam
in
mov
aaa
xor
push
arpl
adcl
sub
xchg
inc
movsl
test
and
jmp
aas
xor
or
jg
out
mov
jb
adc
gs
scas
push
repnz
adc
and
lcall
std
and
push
jge
push
add
mov
leave
lret
pop
shrb
pop
test
jle
repz
ret
xchg
bound
inc
dec
mov
pop
sbb
sbb
and
dec
sbb
ret
call
fcmovnb
lret
aad
jle
or
enter
data16
mov
mov
xor
push
pop
mov
mov
mov
call
pop
js
mov
jno
arpl
push
cmp
mov
xorb
or
fs
outsl
inc
mov
adc
jae,pt
aad
mov
dec
adc
enter
cli
repz
mov
lds
mov
ljmp
or
push
arpl
mov
in
sub
pop
lret
add
shl
mov
insb
jae
mov
fnsave
mov
push
xor
jmp
jmp
push
fwait
ja
out
fldcw
sub
cmp
cmc
mov
in
and
ljmp
adc
inc
xchg
add
and
rcrb
popf
add
xor
or
int3
ret
inc
jmp
dec
push
in
outsl
addl
jp
mov
cmpsb
push
push
outsl
xchg
inc
rorl
adc
leave
adc
movsb
ss
mov
jb
push
lea
xor
imul
dec
sbb
jne
enter
bound
pop
inc
fdiv
jmp
push
ja
out
lds
cmpsl
mov
pop
jmp
out
jns
out
jecxz
push
in
in
add
or
popa
pop
mov
popf
push
xchg
mov
lods
cmp
addr16
cltd
test
stos
mov
sbb
out
aaa
xchg
cmp
sub
call
loop,pn
push
mov
push
xor
hlt
dec
push
push
rolb
in
lret
lods
jmp
mov
ja
idivb
loop
push
mov
push
mov
pop
dec
loopne
mov
ret
and
jae
jne
fldenv
dec
lods
or
mov
stos
cs
fbld
in
aam
aad
xor
sbb
int3
aam
jo
mov
cmp
sbb
fsubr
lret
daa
cmp
mov
dec
int
jb
stos
add
out
add
int
adc
add
sahf
xor
rcll
lret
aas
and
rcll
lret
xor
dec
repz
jle
cli
cs
jo
js
dec
mov
rorl
xor
ret
das
pop
lret
orb
pop
inc
leave
or
enter
test
push
dec
dec
ds
clc
mov
and
jb
pop
adc
inc
and
test
pop
cs
movsb
or
adc
mov
imull
jne
sub
sahf
mov
call
mov
data16
pop
loopne
sub
sub
sub
movsl
lea
test
sbb
outsl
mov
ret
das
ret
fwait
adc
xchg
popa
xor
sub
lea
mov
adc
cwtl
test
dec
loopne
jle
xchg
icebp
scas
test
ret
in
loopne
and
loope
movsl
mov
add
inc
clc
push
add
xor
push
jbe
clc
mov
cli
xchg
adc
call
xchg
add
cld
sub
insb
loope
cwtl
movsb
into
fst
mov
pop
aad
fucomi
and
sarl
test
cld
icebp
xchg
das
stos
jl
push
add
ret
adc
fcom
out
cli
sbb
cmp
add
repnz
test
les
mov
test
mov
jbe
sbb
roll
xchg
arpl
outsl
lcall
ja
mov
jns
xchg
cmp
test
gs
or
inc
xor
pop
mov
jg
jae
push
xchg
dec
push
mov
xchg
pop
test
xor
in
clc
data16
ss
inc
sub
loope
rcrb
rclb
aas
pop
mov
fcoml
je
rcll
gs
stos
cmp
sub
testl
sub
lret
adc
adc
fwait
or
test
outsl
outsb
movsl
dec
dec
jp
loope
push
punpckldq
in
ret
inc
in
int
sarb
adc
in
and
in
pop
mov
cltd
std
lods
shl
jg
sbbl
in
js
shrb
ja
xlat
in
jns
push
xchg
adc
stos
push
aam
dec
lcall
shll
push
js
or
mov
cmp
in
mov
fldl
lret
xchg
mov
xor
mov
sahf
ror
jno
leave
cmp
shll
js
loopne
xchg
pop
adc
subl
sbb
push
cwtd
and
push
arpl
repnz
add
push
lods
stos
lcallw
or
jns
jp
xchg
out
jb
inc
repnz
cmp
push
pop
hlt
pop
or
hlt
mov
or
inc
pop
pop
sbb
adc
scas
arpl
fisubrl
aad
hlt
lods
cwtl
cli
sub
mov
leave
xlat
frstor
scas
ja
stos
jae
mov
int3
mov
pop
jl
pop
lahf
fsin
fsubs
push
das
jns
aam
ds
lret
or
imul
repnz
popf
sbb
imul
cmp
mov
shll
mov
push
in
imul
adc
fadds
rorl
dec
ds
or
mov
jp
call
shll
push
aas
pop
push
movsl
or
push
pop
out
cs
jge
daa
imul
push
pop
cs
add
and
xchg
pushw
sbb
pop
adc
rorl
out
xchg
xchg
into
pushf
lods
jge
adc
mov
mov
movsl
je
xchg
dec
sub
bound
and
xor
ja
sub
shlb
fnsave
dec
dec
shlb
les
enter
xchg
aad
imul
sbb
push
pusha
adc
dec
lock
push
push
xchg
jg
mov
xchg
push
loop
mov
jo
adc
pop
cmp
dec
inc
cmp
jl
dec
fs
sub
mov
enter
sti
stos
dec
dec
xor
scas
dec
push
loope
mov
mov
lahf
stos
mov
das
or
repnz
add
mov
mov
cmpsb
sub
xchg
aas
outsl
lcall
lods
and
repz
ss
jge
xchg
sbb
adc
inc
scas
aad
or
cmp
jmp
in
movsb
mov
daa
and
add
and
mov
mov
cs
mov
stos
idivb
xchg
push
cmp
add
inc
sub
xchg
es
repz
lea
mov
imul
out
in
insb
out
sbb
rolb
out
cwtl
iret
pushf
cld
lret
mov
mov
cltd
cmp
flds
ljmp
incb
je
pop
iret
sub
xlat
aad
pop
mov
test
pop
outsb
inc
jl
mov
inc
inc
mov
icebp
int3
pop
mov
and
inc
or
jne
jl
sbb
or
loope
imul
cs
push
sbb
dec
stos
cltd
or
jmp
add
pushf
cmp
inc
and
xchg
inc
ja
jb
cmc
imul
xchg
xor
je
int3
gs
imul
movsl
dec
pop
lods
adc
mov
push
in
or
imull
dec
hlt
mov
or
jl
inc
loopne
fcoml
mov
xor
mov
xor
fisubl
imul
add
lds
insl
subb
pop
pop
insb
cwtl
loop
xchg
push
daa
mov
xlat
dec
sub
es
sahf
push
dec
mov
pop
scas
push
jbe
iret
stc
push
push
cmp
filds
sub
mov
dec
fadds
mov
scas
lock
jo
addl
gs
push
sbb
mov
mov
clc
jne
repnz
jp
rorb
push
rclb
add
ljmp
inc
shll
xor
mov
xor
xor
mov
fwait
push
jmp
sti
jb
fistl
or
jnp
dec
loop
adc
and
jb
fistl
or
jnp
dec
loop
adc
and
jb
mov
cmp
mov
jnp
dec
or
stos
pop
mov
push
jmp
jnp
dec
loop
xchg
aam
xchg
sbb
mov
test
mov
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
dec
pop
pop
dec
imul
sub
sub
fs
jmp
fwait
cltd
mov
pop
pop
dec
imul
or
cmp
dec
leave
fcmovu
lret
stc
ljmp
mov
dec
imul
or
cmp
sub
jmp
mov
ljmp
push
cmp
imul
dec
in
cmp
ss
mov
inc
inc
outsb
movsl
pop
cmpsb
pop
xchg
adc
aad
shll
pop
add
cltd
sar
add
sti
mov
xor
pop
push
lret
jmp
stc
cld
jl
mov
mov
aaa
mov
pop
stos
outsl
jle
popa
sbb
or
cmp
cmp
push
xor
xor
in
test
aad
mov
enter
fs
sbb
jne
mov
bound
push
xchg
orl
xchg
adc
outsb
mov
pop
dec
imul
or
cmp
sub
fcmovu
lret
stc
ljmp
mov
xor
cmp
sub
jle
pop
mov
rcrl
out
fmul
int3
enter
ss
or
dec
insb
insl
jl
mov
popf
stc
mov
rcr
sbb
das
pop
sbb
dec
sub
or
cmp
sub
fcmovu
lret
stc
ljmp
mov
dec
imul
or
cmp
sub
fcmovu
lret
stc
ljmp
mov
hlt
adc
sbb
jecxz
call
adc
in
sar
push
fmull
rcrb
push
mov
pusha
aam
mov
xchg
gs
cmp
dec
pop
shlb
sub
mov
cmp
dec
and
sarl
mov
jnp
xchg
jp
insb
dec
cmp
mov
sub
mov
xor
sbb
push
add
js
rorb
out
lahf
pop
or
xor
scas
pusha
sub
jno
rcrl
dec
dec
imul
addb
mov
adc
ds
decb
xchg
adc
or
out
and
pop
int3
dec
out
shll
xor
jns
shll
push
shrb
xor
imul
mov
js
sub
pop
adc
mov
push
mov
in
das
in
cmp
das
daa
xlat
xor
insb
mov
adc
xchg
in
add
sbb
add
in
aad
test
xchg
xchg
shll
and
dec
add
pop
cmc
shrl
out
loop
bound
lea
and
lea
rorb
aad
out
leave
sbb
xchg
sbb
std
push
sub
push
xchg
push
sbbb
aaa
cmpsl
add
ja
les
cmp
lret
push
leave
call
jbe
fnstenv
test
and
push
add
dec
movsb
leave
and
fiadds
pushf
aaa
and
ret
out
mov
adc
rcr
mov
sbb
in
pop
mov
push
cmp
lcall
fisttps
sti
leave
push
fwait
or
jo
sbb
insb
pop
into
fcomps
stos
ds
pushf
icebp
xchg
inc
xchg
push
lock
out
or
imul
fistpl
outsl
fdivr
lods
vmread
mov
outsb
hlt
push
shrb
arpl
adc
add
jl
shl
inc
mov
push
inc
adc
cmpsb
xchg
icebp
sbb
int3
dec
cltd
nop
mov
insb
jbe
push
es
int
mov
pop
fidivl
in
cmc
js
ret
push
loop
es
add
jno
sbb
jne
or
pop
out
sbb
out
fistpl
xchg
inc
lahf
mov
cmpsb
mov
fwait
mov
out
push
mov
dec
lcall
ret
mov
jno
add
lock
in
popl
lea
sahf
push
mov
jp
sub
mov
mov
push
cmp
roll
inc
adc
push
sub
test
push
sbb
push
rorb
mov
into
sti
jo
es
xor
mov
scas
jne
out
lahf
cli
out
jae
scas
xor
les
out
cmp
test
mov
cmp
add
xchg
jo
inc
loopne
rcrl
xchg
scas
outsl
andl
mov
int3
adc
lret
aad
push
dec
and
mov
pop
cs
pop
adc
stos
mov
mov
out
in
inc
xchg
pusha
xchg
movsb
cmp
or
vcvtsi2sd
mov
scas
in
push
gs
jne
daa
mov
movsl
aaa
jg
inc
insb
sarl
mov
mov
mov
sbb
pop
jo
xchg
jecxz
subb
test
fdivrs
add
mov
lret
pushf
imul
inc
mov
pop
iret
xor
icebp
or
ds
sub
xchg
xchg
push
aad
fldl
jae
loope
fldl
mov
pop
ss
xchg
inc
xor
addr16
pop
pop
pop
dec
dec
push
cld
dec
jp
dec
pop
pop
sbb
fwait
inc
mov
test
xchg
test
out
jne
cltd
mulb
icebp
cltd
adc
and
clc
outsb
out
jne
mov
sub
daa
jmp
into
in
loop
shrl
sub
xchg
in
fdivr
mov
cli
or
jge,pn
cmp
adc
pop
fdiv
movsl
add
loope
ljmp
pop
mov
sub
adc
pop
mov
or
add
std
inc
jae
push
fidivrs
pop
jg
iret
and
clc
jnp
add
adc
idivl
xchg
xchg
mov
leave
imul
add
repnz
mov
jo
sbb
test
inc
and
mov
jecxz
jecxz
fs
decb
outsb
mov
pop
es
cltd
mov
jo
or
xchg
xor
int
test
jmp
mov
dec
loope
push
cwtl
nopl
cltd
push
sub
rolb
lock
in
and
xlat
and
jl
cmp
push
adc
aad
in
dec
call
jb
add
xor
mov
ljmp
inc
mov
pusha
dec
popf
push
cmp
out
loope
repnz
fwait
out
mov
js
mov
fstl
pop
rcr
sub
and
dec
repnz
xchg
in
adc
aam
lock
sbb
pop
xor
daa
es
push
ss
xor
jl
hlt
push
or
xor
mov
ret
jae
cmpsl
or
cld
mov
cs
mov
cmp
or
cmp
int3
push
lret
nop
pop
lret
xlat
icebp
inc
rclb
dec
cmpl
pop
mov
lahf
mov
leave
inc
mull
or
arpl
xchg
test
bound
mov
dec
and
or
xchg
and
iret
dec
insb
jnp
push
xor
scas
cmc
es
dec
cmp
stos
adc
pop
sbbl
scas
adc
inc
int
sbb
xor
loopne
pop
or
cltd
and
mov
xchg
movsl
and
int
mov
lods
nop
out
loope
cmp
fsubrs
mov
pop
and
in
out
movsb
sub
push
jl
and
inc
loope
lds
pop
arpl
aas
fiaddl
sbb
jb
inc
pop
cwtl
jne,pn
lea
mov
roll
dec
lret
mov
push
outsl
fstpl
icebp
add
adc
pushf
cltd
imul
aas
add
arpl
cmc
push
cmp
pop
ret
mov
mov
imul
lods
je
mov
rorb
or
push
jecxz
or
jge
int
mov
ja
int3
cltd
dec
xchg
mov
addr16
loop
pop
and
bound
scas
mov
mov
bound
sarl
cmpsb
divb
jg
out
xchg
pusha
nop
xor
jnp
shrl
negb
adc
popf
sbb
cld
xchg
mov
scas
ljmp
ret
in
rcll
lret
into
mov
lds
ficoml
imul
jg
xor
loope
and
push
test
cmp
leavew
cld
xchg
xor
ja,pt
mov
xor
aam
pop
test
scas
xchg
jecxz
mov
fsubl
push
sahf
jno
dec
mov
sub
sbb
add
xchg
xchg
cmpsb
out
test
xchg
andb
dec
xlat
out
lahf
subl
or
mov
cwtl
bound
cmpsb
mov
das
ds
mov
lret
lret
xor
sub
lahf
pop
mov
fimuls
call
mov
push
cmp
stos
scas
mov
ljmp
jecxz
mov
jmp
sub
or
push
sbb
jmp
jl
jp
sub
notb
jne
imul
adc
insl
fidivl
sahf
jnp
ja
add
mov
hlt
cmp
fistl
into
je
pop
andb
add
addr16
fnstsw
sar
ja
imul
xchg
push
and
test
add
iret
sub
jge
fdivp
cmpsb
fs
inc
mov
and
jne
and
jge
mov
enter
pop
sub
js
jge
pushf
fidivl
jmp
jle
xlat
and
dec
jae
mov
fsts
or
jp
mov
lahf
add
sub
inc
cmpsl
rcrl
sahf
out
out
leave
popf
sti
mov
jmp
or
inc
or
xor
and
sahf
hlt
jl
mov
and
mov
mov
dec
dec
scas
pop
sub
ror
mov
inc
or
nop
insl
addr16
pop
mov
jno
mov
loopne
ret
push
push
loope
mov
fcomps
out
test
cmp
pop
pusha
mov
insl
and
insl
add
cmp
fcmovb
push
push
adc
inc
jmp
ja
mov
add
ret
mov
lock
add
test
shrl
cmpb
movl
pop
pop
nop
fsts
jl
sub
push
mov
aaa
mov
dec
push
std
sub
fisttpll
pop
lods
leave
mov
cmp
daa
mov
imul
push
pop
xchg
jge
stos
imul
cmp
ljmp
icebp
pop
jb
xchg
enter
xchg
sub
sbb
sbb
pop
xor
test
arpl
xor
loope
xchg
fistl
int3
es
sub
icebp
cli
inc
xlat
incl
mov
mov
and
sub
je
out
sbb
clc
lcall
shll
adc
fmul
sbb
inc
mov
addr16
sub
insb
dec
adc
jge
icebp
and
adc
mov
movsb
lds
lods
pop
in
int
xor
iret
aam
push
outsb
xor
pop
lcall
repz
in
mov
mov
mov
test
pop
shrl
js
push
and
rcrl
cli
cwtl
movsl
adc
sahf
pushf
push
jns
or
add
fwait
iret
mov
or
loopne
std
fiadds
jg
or
inc
fidivrs
cmp
pop
ljmp
push
fidivrs
sbb
jnp
cmp
mov
aad
mov
dec
ljmp
sub
adc
cmp
lea
repz
dec
sbbb
ret
icebp
xor
mov
inc
add
jns
and
lods
cmp
push
insb
fisubs
test
jnp
stos
and
fbstp
data16
xchg
push
push
mov
fldl
jecxz
dec
in
fdivrs
mov
pop
decb
lret
out
inc
dec
pop
aad
imul
sub
push
mov
fwait
xorb
cmc
push
or
jmp
fdivs
bound
repnz
shl
test
popa
push
xchg
mov
mov
rcrl
fs
push
rorl
mov
pop
movsl
icebp
dec
mov
out
mov
xor
ljmp
lock
test
mov
mov
and
mov
mov
inc
pop
stos
stos
mov
xchg
cmp
xor
fwait
jnp
pusha
xchg
in
pop
stos
scas
jp
cltd
shlb
loop
test
xchg
bound
mov
cmp
ss
xor
sub
sub
test
xor
inc
jg
pusha
jecxz
cmc
shl
call
nop
inc
push
mov
pop
push
fs
push
push
and
out
inc
jmp
mov
dec
pop
cmpsl
out
iret
jmp
aas
adc
cmp
push
fldcw
pushf
loop
arpl
or
es
jb
cld
mov
and
inc
stos
hlt
xchg
lods
jp
or
inc
out
adc
aaa
sub
push
cmp
insb
sub
mov
pop
xchg
cmp
cmpl
icebp
push
movsl
xchg
stos
mov
lcall
enter
inc
mov
adc
and
lock
loop
pop
dec
cwtl
loopne
fdivrs
mov
adcb
xlat
hlt
dec
add
jno
lahf
sub
ss
xor
in
xchg
hlt
push
test
ss
aas
xchg
adc
push
xor
mov
push
jmp
adc
jae
fnsave
sub
xchg
int3
adc
loop
push
lcall
jne
stos
mov
frstor
pop
xlat
push
into
sbb
lret
daa
xor
sbb
addr16
jmp
mov
jecxz
lret
mov
fists
mov
cmp
mov
cltd
xchg
lock
or
test
lea
dec
out
pop
sbb
mov
pop
adc
add
xchg
mov
shll
shr
insl
in
cld
xlat
add
addr16
push
sbb
add
pop
xchg
inc
fistps
or
push
popa
aaa
dec
mov
adc
mov
arpl
fildll
mov
pop
addr16
pop
jbe
aaa
insb
sbb
push
mov
add
push
adc
cmp
jb
mov
push
out
and
xor
jne
test
scas
dec
in
jnp
mov
add
sbbb
fiadds
adc
leave
rcrb
or
or
jmp
jmp
dec
mov
adc
xlat
ss
xchg
repz
stos
daa
stc
mov
popa
cmpsb
lcall
mov
outsb
mov
sub
jmp
xchg
movsb
pusha
dec
adc
jge
xrelease
aaa
push
test
add
ficompl
add
adc
and
pop
mov
jecxz
add
and
nop
dec
sahf
int3
repnz
test
decl
scas
int3
mov
test
jge
enter
mov
cltd
push
imul
sbb
cmpsb
icebp
mov
sbb
sbb
sub
cld
push
lods
push
adc
fsubrp
int3
push
cld
loopne
mov
sbb
pop
sub
ljmp
cmp
jbe
lret
and
add
dec
jne
sbb
outsl
popa
mov
aam
fimuls
ficoml
dec
scas
cmp
or
scas
ss
rcl
mov
stos
push
or
fcompl
sub
bound
inc
push
rolb
loop
cmpsb
imul
xlat
xchg
or
mov
xchg
addr16
mov
leave
testl
das
inc
mov
pop
inc
les
test
jnp
cmp
dec
hlt
xchg
iret
mov
add
pop
inc
xchg
fisttps
xchg
mov
out
arpl
inc
inc
xor
xlat
add
push
pop
sahf
mov
xchg
adc
sub
pop
mov
jo
dec
push
loope
xchg
aad
push
inc
shl
push
inc
popf
pop
mov
ret
push
jae
jge
add
mov
sub
aaa
sub
fmull
aam
out
test
inc
imul
fldl
mov
fidivl
pop
mov
js
cmpsb
mov
hlt
inc
neg
adc
lods
les
in
and
outsb
add
sub
in
mov
mov
in
xlat
out
push
and
pop
xlat
into
sub
xchg
xchg
inc
nop
jo
mov
and
lock
dec
push
add
push
xchg
lods
pop
inc
cmp
mov
es
sub
sbb
scas
inc
hlt
mov
jecxz
lret
mov
leave
fs
cmp
pop
mov
cwtl
cmc
in
fisubrs
lret
jp,pn
or
leave
test
push
insl
insb
mov
mov
loopne
and
jne
sahf
mov
add
xchg
adc
jns
jp
in
dec
xchg
ss
push
addr16
ret
repz
or
cld
sbb
xor
adc
mov
push
xchg
lea
inc
jb
iret
push
sub
insl
maskmovq
negl
adc
adc
push
push
int
mov
inc
sub
int3
jae
call
dec
push
ret
sbb
ret
jge
jle
cmpsl
push
sbb
push
lea
decl
faddl
jno
xchg
outsl
loopne
xchg
jg
jo,pt
popa
cmp
getsec
ficompl
mov
popa
testb
sti
ljmp
push
mov
les
bound
ror
insb
insb
in
add
lds
jne
lret
mov
xor
xor
jbe
std
inc
mov
cld
orl
aaa
ftst
mov
pop
ja
or
jnp
and
jo
rcrb
xchg
or
push
and
movsb
and
push
and
cmp
mov
add
xor
das
ja
test
mov
and
jnp
stos
mov
adc
mov
sub
xor
or
mov
inc
call
push
add
xlat
push
inc
pusha
add
or
daa
std
int
jnp
dec
fisubs
stos
add
add
cmpsb
out
scas
push
mov
cli
cmc
les
sbb
insl
mov
daa
mov
inc
mov
pop
lea
mov
fisttpll
aad
inc
mov
add
or
xchg
pop
mov
push
pop
ds
lock
aas
dec
aad
fisubrl
shl
outsb
and
or
rol
pop
gs
movsb
into
outsl
mov
mov
js
push
in
fcoml
cmc
test
mov
orb
or
xchg
mov
adc
mov
inc
aas
leave
mov
push
or
push
in
adc
mov
in
js
repz
insb
or
aam
int3
push
dec
mov
aaa
xchg
out
sub
js
shl
mov
notb
inc
mov
mov
lods
xchg
xchg
mov
sbb
pop
aad
std
push
nop
cmp
std
pop
hlt
and
rclb
je
test
mov
insl
inc
fs
stos
hlt
shll
enter
add
xchg
adc
cmp
xchg
push
and
enter
xchg
cmp
mov
gs
clc
ljmp
outsb
xlat
xchg
andb
lods
jno
push
outsl
and
loop
lret
bound
lahf
push
test
repz
cmp
mov
ret
mov
mov
mov
mov
test
out
jne
ds
ds
push
adcl
sub
jo
ss
push
mov
and
push
out
jbe
jo,pn
std
cmp
mov
setg
push
movb
fisubl
jle
push
stos
mov
sub
or
negl
adc
clc
in
sbb
pop
ret
int3
cmpsl
sbb
jns
xchg
pop
push
mov
xchg
adc
adc
ficoml
iret
xchg
pusha
and
mov
xchg
xchg
pop
mov
ret
pop
test
inc
or
hlt
xchg
fildl
adc
mov
and
aad
sbb
mov
sub
daa
sbbb
lods
cmp
mov
lcall
mov
mov
pop
inc
jg
jne
pop
sbb
ds
dec
fsubl
xchg
mov
and
sbb
mov
insl
test
insb
jae
jle
mov
idivb
in
mov
xor
repz
aad
scas
fs
mov
adc
dec
pmulhw
int
pop
mov
lret
xor
sub
cmpsl
sbb
lods
dec
xor
ret
mov
mov
mov
and
lds
jne
jnp
ja
jo
cs
pop
bnd
and
cmpsb
mov
scas
lods
ucomiss
cltd
jae
fwait
aam
xlat
xchg
xor
jns
add
sarl
sub
xchg
ljmp
fidivs
mov
sub
sub
mov
inc
call
lock
outsl
cld
push
push
mov
mov
movsl
pop
js
inc
clc
inc
xchg
std
xor
mov
enter
pop
rolb
pop
and
hlt
mov
fildll
sbb
jnp
pop
sbb
rcl
call
lods
mov
pop
mov
icebp
sub
sbb
xchg
push
fldcw
pop
stos
push
jge
inc
daa
je
in
dec
imul
pop
xor
insl
cwtl
inc
add
mov
fwait
lcall
jmp
and
cli
jnp
push
push
sbbl
push
insl
sbb
cmpsb
add
jbe
adc
sub
fst
clc
and
sbb
mov
scas
aad
ja
cmc
sub
out
jmp
sub
inc
int3
push
xchg
arpl
inc
leave
out
adc
mov
js
and
loopne
lahf
rcr
out
or
int3
cmp
fcom
inc
sub
aaa
data16
mov
mov
or
cli
or
or
addr16
pop
and
pop
divb
and
adc
cmp
add
xor
and
jns
fistpl
test
push
pop
ret
and
jbe
cli
cli
negb
add
cmp
insb
iret
out
cmp
bound
psubsw
push
xor
mov
sbb
mov
xor
iret
leave
sub
jne
or
xchg
xor
inc
inc
hlt
shr
mov
jecxz
xchg
lods
cli
xor
rolb
mov
sti
jmp
add
push
add
inc
dec
cltd
roll
cltd
and
lahf
xor
jb
sub
mov
push
cmc
pusha
mov
sub
xchg
call
push
xchg
fiaddl
mov
cmc
movsb
popf
out
out
sub
ja
mov
sbb
xchg
lds
aad
jecxz
add
cmp
xor
stos
call
nop
xchg
mov
push
sbb
or
cmp
sub
fcmovu
lret
stc
ljmp
mov
dec
imul
or
cmp
sub
fcmovu
lret
stc
ljmp
mov
dec
imul
or
cmp
sub
fcmovu
lret
clc
ljmp
mov
dec
imul
or
fisubl
pusha
inc
cli
stc
popf
adc
jne
inc
inc
push
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
sbb
or
sbb
or
pop
cmp
adc
pusha
dec
lcall
mov
cld
lret
int3
ljmp
sbb
or
jl
insb
jp
push
lcall
mov
lahf
lret
fsubr
int3
sbb
sub
jp
push
lcall
mov
mov
test
inc
cmp
inc
cmp
xchg
ret
sti
aaa
inc
daa
xor
shrb
popa
subl
testl
addr16
inc
inc
mov
and
fsubl
dec
ret
add
shrl
aas
insb
icebp
sub
lcall
or
and
int3
sbb
push
sbb
cmp
pop
pop
lods
incl
mov
in
rcpps
jae
scas
mov
jns
fbld
aad
add
stc
or
dec
jb
fsubrl
xchg
xor
xor
xor
int3
stc
sbb
cwtl
inc
mov
ror
jp
inc
mov
cltd
mov
cmp
cmp
or
push
pop
jl
insb
jp
push
lcall
xchg
lret
fsubr
test
pop
jle
push
sbb
cmp
push
xor
lcall
jecxz
xchg
lret
fsubrl
pop
insb
inc
or
divps
cmp
and
mov
mov
jg
or
jge
jns
adc
jp
push
lcall
mov
cld
lret
fsubr
int3
sbb
sub
sbb
or
jl
insb
jp
push
lcall
mov
cld
lret
fsubr
int3
sbb
stos
cmpsl
cmp
out
in
push
inc
xor
adc
sub
jae
in
add
push
jp
jns
sub
and
jge
adc
jg
nop
fisttpll
loopne
jo
push
or
cmpsl
dec
sub
repnz
lret
mov
sbb
outsl
orl
pop
lret
push
out
or
shrb
lret
xchg
xchg
push
mov
aaa
loope
push
jno
ja
jg
js
adc
or
and
adc
out
push
in
jmp
stc
xchg
into
dec
xor
mov
fcmovu
outsl
cmp
jmp
and
insb
mov
pushf
and
out
je
push
pop
xchg
imul
mov
lods
push
xchg
inc
sar
push
in
shlb
inc
fst
dec
cmp
bound
inc
loopne
mov
sub
jne
pop
cli
and
sub
add
pop
xchg
lret
lret
xor
and
jo
and
cmc
hlt
mov
jne
dec
cmpb
movsb
push
cmpsl
xchg
rcrl
je
jns
add
mov
push
cmpxchg
outsl
imul
pushf
jbe
roll
test
jl
inc
mov
pop
push
fbstp
mov
mov
popf
pop
lcall
icebp
and
outsl
andl
add
sti
xchg
rcl
dec
out
push
stos
xchg
jae
clc
scas
xlat
mov
jp
jl
mov
jns
aas
enter
sti
mov
inc
xchg
lods
stos
ret
adc
repnz
ja
popa
scas
sub
movsb
pop
imul
jl,pn
je
mov
sub
inc
inc
push
pop
mov
jo
sub
ss
mov
aad
out
jnp,pt
test
sub
adc
pop
pop
out
sub
js
fdivrs
mov
push
pop
xchg
iret
and
dec
and
out
xchg
popa
sub
dec
fldcw
daa
nop
inc
push
in
clc
movsl
sub
sahf
ja
xchg
test
jae
xlat
xchg
iret
int
add
fsubrl
xor
testb
dec
mov
adc
pusha
divl
shl
and
shlb
sbb
in
add
sbb
shll
cwtl
or
stos
cmp
and
mov
addr16
jge
cmpsb
int3
lcall
aas
subl
stos
inc
xor
outsb
jg
jl
xchg
ss
js
sarb
push
loop
repnz
ret
jmp
cwtl
mov
pop
out
nop
lcall
jno
nop
enter
jne
jae
pop
and
mov
pop
mov
dec
mov
xor
or
cmp
xchg
outsb
das
shl
cli
add
push
pop
jl
sbb
rorb
push
sbb
and
inc
ja
dec
cmpsb
mov
hlt
shll
nop
mov
dec
push
test
loope
sbb
mov
cmpsb
movsb
pop
ja
arpl
mov
ljmp
gs
or
xorb
sarl
leave
mov
inc
rcll
rol
add
jg
insb
nop
mov
in
push
repz
dec
shll
sbb
add
imul
add
cmp
ljmp
jbe
or
fs
and
enter
pop
out
push
call
lds
or
repz
jae
push
lret
and
fnstsw
aam
mov
popa
or
inc
addl
inc
addr16
cmp
fwait
push
adc
mov
icebp
add
push
mov
sbb
pop
shlb
push
fsubs
jb
inc
jl
scas
add
and
stos
int
mov
xlat
add
subl
lods
in
push
js
insl
mov
fmull
sbb
es
add
mov
mov
push
inc
lods
ja
sbb
jns
dec
push
sti
sub
test
or
andb
push
test
mov
insb
push
popf
lods
and
std
inc
int
xor
push
call
jg
xchg
fwait
mov
pusha
je
push
fistl
mov
xorb
std
fcmovu
jp
dec
dec
repnz
xor
movsl
lcall
push
outsb
mov
or
lcall
pusha
push
push
sbb
test
cmpb
mov
loope
into
pop
cmpsb
pop
fistps
inc
stos
adc
cmp
mov
inc
lds
shl
cmp
xchg
out
iret
add
add
push
or
mov
mov
inc
xor
icebp
mov
call
dec
pop
loop
lcall
jl
sub
jns
loop
or
test
dec
sub
int3
call
adc
sahf
idivb
inc
mov
imul
push
clc
repnz
sbb
pushf
xchg
jae
fisttpl
je
adc
inc
test
mov
outsb
insb
mov
mov
add
sub
jae
movsb
popf
loopne
enter
aas
xchg
insb
mov
fidivrs
incl
mov
out
pop
out
imul
out
xchg
xchg
xchg
mov
aaa
dec
mov
pop
imul
jp
xorl
out
in
pop
ja
xchg
daa
sub
and
jg
mov
enter
xor
fildl
pop
pop
sub
leave
stc
pusha
xor
or
push
fs
inc
push
test
lods
fmull
cmp
syscall
leave
ret
or
int
fstpl
xchg
cmp
xchg
insl
push
push
aaa
pop
adc
je
and
inc
mov
jne
sbb
inc
jg
repnz
mov
stos
xor
ret
cltd
push
fdivrs
es
into
dec
js
cmp
out
xchg
add
mov
imul
mov
xchg
jp
callw
adc
call
sub
mov
leave
add
fs
gs
imul
imul
jno
push
xor
fistps
ljmp
add
out
mov
mov
jge
or
gs
xlat
push
xchg
jns
nop
adc
lahf
pop
sahf
movsb
push
pusha
div
addl
fabs
jbe
adc
pop
pop
pop
cmp
aad
lret
push
lods
fiaddl
cmpsb
inc
sub
rol
pop
cs
fdivrl
or
nop
push
in
xchg
dec
call
pop
cwtl
xor
mov
cmp
or
adc
push
ljmp
imul
xor
mov
movsb
fstp
mov
daa
jl
inc
adc
rolb
sbb
call
scas
lret
out
sbb
xchg
mov
aas
rclb
pop
mov
add
dec
cmp
repz
and
mov
loope
push
xchg
fs
and
or
push
int
pop
into
je
nop
rol
ficoms
push
cmp
dec
lea
or
loop
pop
xchg
sub
enter
inc
dec
mov
sarb
push
notl
dec
int3
push
xchg
inc
jno
fs
std
test
xchg
ret
cs
cmp
cmp
push
into
add
mov
clc
sub
sbb
adc
sub
pop
dec
mov
rcrb
js
ss
pop
mov
jg
iret
jp
pop
lods
pop
xchg
fidivrl
mov
jge
sub
ljmp
dec
jp
add
addr16
mov
out
std
bound
xor
xchg
xor
and
imul
and
push
je
mov
bswap
cmp
inc
mov
xchg
sub
xchg
nop
stos
repnz
pop
lret
jmp
mov
mov
push
adc
cmp
clc
add
and
pop
popf
dec
pop
jno
cmp
adc
add
stos
insl
push
pop
sub
push
push
push
aaa
mov
mov
jge
out
add
movsb
pop
push
gs
iret
xchg
icebp
add
add
test
pop
hlt
jle
rcl
cmp
mov
lret
push
push
popa
mov
lock
inc
jge
gs
inc
cmp
and
mov
je
in
movsb
popa
cmp
lock
xor
mov
inc
dec
repnz
lods
scas
pop
dec
setp
mov
push
lods
mov
mov
pop
push
nop
test
lret
mov
aad
pop
icebp
fnstcw
mov
mov
insl
mov
mov
test
xchg
xchg
jo
adc
std
stos
popf
hlt
cmovge
out
jecxz
out
jmp
push
nop
sub
jnp
pop
js
or
add
ret
dec
cli
inc
jnp
jl
cmp
add
arpl
xchg
mov
jmp
ret
pusha
imul
and
xlat
mov
dec
int
stc
arpl
lods
orb
jg
and
rcr
fwait
ja
add
jb
lahf
iret
ret
popa
mov
je
test
cli
jmp
enter
enter
xchg
fiaddl
or
push
lahf
mov
dec
mov
pop
test
mov
sahf
pop
es
out
in
xchg
dec
in
arpl
loop
inc
es
ds
push
inc
or
lods
iret
rorl
mov
ret
pop
test
xchg
mov
adc
loopne
sub
mulb
aas
mov
cmp
aas
das
sub
and
hlt
add
inc
adc
push
lahf
pop
ss
cmp
mov
sbb
loope
mov
sub
cmp
leave
mov
mov
pop
lock
mov
xchg
pushl
fildll
sbb
add
shr
mov
enter
std
sbb
pop
mov
push
leave
aad
dec
and
mov
add
jg
in
adc
outsb
lds
scas
ds
xor
sub
cs
sub
xchg
inc
or
cmp
push
sbbb
addr16
xchg
in
and
lods
fsubs
xor
stos
add
adc
enter
pop
mov
inc
pop
cmp
sbb
out
ja
sahf
leave
jno
adc
enter
sti
sub
outsl
push
or
nop
pop
ljmp
pop
pop
sbb
clc
stc
fildl
mov
out
frstor
stc
insb
push
mov
mov
add
pushf
movsl
pop
push
cmp
and
xchg
repnz
rcrb
lock
push
popa
rol
dec
and
push
push
fcmovb
push
mov
lcall
mov
add
out
jbe
out
cmp
add
movsb
in
xlat
inc
popf
in
stos
mov
xor
pop
les
mov
xchg
sub
xor
cmp
ds
pmaxub
dec
mov
inc
lea
inc
ret
outsb
mov
mov
lcall
xor
fbld
adc
sti
xor
xor
insb
scas
push
cwtl
flds
pop
mov
xlat
and
mov
sbbl
cltd
notb
xlat
or
testl
pop
popf
inc
test
sahf
addr16
dec
push
shrb
xchg
imul
fwait
adc
sbb
lret
cltd
rolb
inc
add
mov
repz
pop
or
xor
xor
loopne
pop
push
mov
aaa
sbb
sbb
dec
in
xchg
aas
and
push
inc
mov
lahf
mov
nop
pop
xchg
andl
sbb
pop
or
mov
adc
test
scas
adcl
ja
cmpsb
or
test
push
inc
push
rcrb
pop
lcall
mov
inc
fnsave
mov
cltd
add
fldcw
pop
push
inc
add
jecxz
sbb
sub
hlt
sbb
mov
adc
push
pop
mov
dec
mov
sbb
cmpl
dec
in
sub
add
push
fucomip
push
lret
lahf
xchg
add
arpl
inc
orl
lods
inc
or
cmp
mov
jle
sbb
iret
cmp
jnp
in
xchg
lret
push
loopne
xor
ret
mov
outsb
into
inc
mov
or
data16
jle
lahf
sahf
mov
or
cmpsb
aam
andb
cmp
in
push
sbb
ficomps
pop
nop
loopne
lock
mov
mov
xorl
jno
mov
cmpsl
push
sbb
add
fsub
push
sbb
aas
pop
shrl
jle
sbb
lret
jmp
pop
test
mov
int
xor
aad
sti
jbe
out
sbb
mov
jg
lret
into
cmp
aam
aaa
or
pusha
fldcw
adc
jno
sub
xor
fcoms
mov
dec
push
js
or
test
push
add
or
call
inc
jl
test
dec
sub
sbbb
nop
inc
sbb
cmp
cld
cwtl
test
bound
adc
xchg
jmp
xchg
jae
sub
cwtl
inc
in
movsl
cmc
sbb
les
push
cmp
ja
cmp
mov
jle
jecxz
cmp
lods
dec
or
or
insl
lods
xchg
mov
ja
lods
loopne
fs
sub
lods
mov
sub
adc
cmp
mov
outsb
cmp
or
sbb
inc
push
inc
inc
loope
push
loopne
lcall
jb
sub
popa
outsl
sbb
movb
cmc
jp
dec
outsl
sbbl
aaa
pop
aas
push
sub
cmpsl
mov
loopne
sarb
dec
sub
pusha
and
jg
shlb
jge
dec
mov
faddl
dec
or
mov
pusha
dec
imul
nop
dec
or
fiaddl
or
fmull
sub
cld
cmp
mov
push
add
push
jb
adc
fcompl
sahf
mov
pop
popa
cmpsb
lret
ret
loope
rclb
fiaddl
ret
xlat
jbe
fisubs
inc
insl
or
push
cmp
sub
xchg
frstor
dec
add
inc
and
lcall
mov
out
in
jns
mov
inc
cmp
jb
ljmp
mov
inc
push
push
lahf
ds
fsubrl
aaa
dec
inc
dec
mov
or
nop
std
shr
add
jge
test
xor
dec
out
inc
lea
or
push
xchg
roll
cmp
pushf
add
sbb
shrl
movl
xchg
mov
roll
mov
mov
popf
jmp
mov
orl
ficompl
mov
pop
movsl
leave
lahf
jmp
or
jbe
mov
outsb
clc
jns
in
hlt
mov
mov
push
out
aaa
in
jmp
pop
mov
pop
insl
dec
inc
mov
pop
addr16
insl
lcall
les
xchg
arpl
lods
test
test
inc
cmp
lds
cmpsl
test
inc
xchg
mov
jg
cmpsb
aam
lea
cld
pop
popa
sbb
or
add
movsl
call
sbb
bound
loopne
push
or
jle
pop
xor
jae
mov
shlb
push
mov
mov
repz
call
int
enter
mov
pop
dec
sub
pop
mov
ljmp
pop
pop
bound
xor
or
cmpsb
sahf
outsl
xchg
adc
in
and
mov
iret
lds
les
pushf
jp
push
cmpb
adc
cmp
data16
xor
xor
xor
jns
and
mov
outsb
int3
cmp
sbb
mov
nop
loopne
sbb
outsb
xchg
adc
sahf
jge
pop
push
cmp
repnz
mov
jl
fldlg2
shrl
jmp
mov
or
adc
dec
into
call
adc
or
ret
adc
sbb
lret
push
arpl
and
dec
pop
insb
out
mov
je
dec
sub
cmp
push
dec
mov
ret
jno
call
lock
xor
mov
push
sbb
fstpt
rclb
jecxz
push
mov
ret
inc
xor
lods
xchg
cmpsl
xor
adc
push
or
push
clc
ret
add
xor
mov
fisubl
xor
jb
mov
sbb
rclb
loop
mov
xchg
dec
adc
mov
push
mov
pop
jl
or
out
xchg
cwtl
lods
stc
mov
in
hlt
adc
adc
and
insb
in
ja
stos
out
pop
sbbb
repnz
pop
mov
mov
scas
jae
inc
add
adc
sub
cltd
in
mov
loope
into
iret
xor
movsl
mov
fdivrl
mov
xchg
cmc
in
in
sub
stc
adc
cmp
pop
fildll
mov
fnsave
dec
lret
lock
ds
inc
cmp
ret
adc
cmpsb
mov
sarb
jbe
sbb
or
mov
and
dec
xchg
dec
sbb
or
or
sub
jp
dec
jns
mov
ret
jmp
sub
pusha
and
nop
add
and
test
daa
cmp
cmp
pop
loop
lret
shlb
jae
pop
ljmp
sbb
adc
icebp
sub
pop
pop
ret
fs
mov
daa
cmp
or
nop
sub
jb
imul
jnp
dec
or
push
test
cmc
call
test
mov
xlat
lahf
and
mov
xor
jbe
cld
fstpt
dec
xchg
jl
int3
xor
jne
push
or
xchg
dec
fidivl
daa
push
cwtl
insb
mov
lods
aaa
int3
cmp
pop
and
cli
ret
cwtl
jae
es
andl
lods
ret
in
test
push
mov
pop
pop
out
out
or
mov
jnp
and
daa
inc
in
in
pop
fisttps
mov
loopne
mov
in
jl
inc
pop
shlb
addl
sub
push
dec
mov
sub
insl
fidivrl
lcall
add
mov
add
mov
sbb
jno
pop
jl
sbb
push
push
sbb
cmpsl
jge
pop
lret
repnz
scas
adc
jg
in
jmp
imul
lcall
movsl
imul
cmp
sub
mov
aad
negl
inc
inc
ss
push
cmpsl
mov
insb
filds
jnp
jl
int3
and
test
std
xor
mov
sub
int3
adc
pop
mov
gs
push
inc
in
fldt
sub
and
mov
setge
xor
push
pop
in
in
cmp
adc
dec
cmpsb
or
cmp
scas
into
xchg
cmp
pop
and
call
mov
push
movsb
sbb
mov
mov
pop
push
leave
inc
mov
jp
scas
loopne
or
mov
cmp
cmc
cs
into
loop
sub
mov
addr16
test
mov
gs
cli
fdivrs
shrb
shl
jo
pop
insb
repz
insl
orb
in
in
push
pop
scas
jo
cmpsb
imul
mov
cwtl
lcall
and
cmpsb
sub
mov
dec
lahf
xlat
fisubrs
mov
inc
stc
and
out
push
xor
out
xchg
mov
mov
and
jno
jae
sarb
das
adc
mov
clc
xchg
mov
bound
lret
dec
push
les
lcall
popf
testb
inc
dec
das
or
sahf
fyl2x
repnz
fidivrs
fistl
ret
xchg
and
mov
push
cmp
test
call
pop
cmp
je
fldt
sub
cli
js
pop
popa
or
inc
or
sbb
mov
loopne
push
ja
inc
or
imul
dec
jmp
and
ds
pushf
scas
sbb
mov
rcrl
xor
inc
and
sahf
int3
das
xchg
loopne
mov
lods
mulb
cmp
pop
push
ret
ljmp
sbb
mov
mov
mov
sbb
imul
enter
scas
insl
icebp
sti
adc
cld
xchg
inc
ret
movsl
jecxz
sbb
fistpll
dec
mov
sub
repnz
fiaddl
je
inc
jae
repz
addr16
mov
pop
mov
insl
fldt
sbb
xchg
push
fldenv
and
addr16
jg
mov
fsub
cmp
imul
sti
and
shlb
fidivrs
sbb
cltd
sub
xlat
pushf
mov
daa
push
shr
imull
inc
stos
mov
fcoms
mov
xchg
popl
call
mov
cs
sti
adc
outsb
mov
push
aam
loope
cmp
or
leave
inc
daa
fwait
sub
push
scas
scas
cmp
xchg
frstor
mov
xor
or
movsl
jmp
leave
push
in
cmp
mov
push
lds
js
pushf
dec
in
jmp
es
pop
gs
rcl
cmp
dec
cmpsl
pslld
lcall
shlb
mov
sarb
out
rclb
stc
dec
subb
dec
mov
sub
mov
jae
mov
jb
sub
clc
call
mov
das
mov
sbb
mov
in
dec
lds
repz
jl
insb
jp
push
lcall
mov
cld
lret
fsubr
int3
sbb
sub
sbb
or
jl
insb
jp
push
lcall
mov
cld
lret
fsubr
int3
sbb
sub
sbb
or
jl
insb
jp
ljmp
pushf
stos
lret
fucomp
int3
sbb
sub
sbb
or
jl
insb
jp
push
lcall
sti
stos
je
adc
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
out
lods
push
pushf
data16
dec
lahf
jne
push
mov
push
out
idivb
xchg
pop
cmpsb
dec
mov
inc
lods
push
lods
data16
push
in
push
fsubl
int3
dec
ss
sub
js
into
idivb
xchg
pop
cmpsb
dec
mov
inc
mov
test
jbe
push
cmc
push
les
cmp
daa
cmc
jo
js
push
shlb
shrl
and
pop
rorb
loop
hlt
adc
out
lods
xor
mov
or
nop
xchg
jmp
pushf
cmp
sub
add
sub
repz
mov
shl
inc
lods
pop
aad
dec
jo
push
in
xchg
into
aad
arpl
nop
rcrl
mov
sub
insb
add
fldenv
int3
enter
sub
push
push
stc
xchg
push
pop
xor
lds
clc
sti
lods
mov
int3
dec
fcoml
xor
rcrl
aad
xchg
shll
lods
fcmovnbe
jbe
ss
pop
fidivrs
cs
ret
xlat
roll
mov
cmpsb
dec
mov
pushf
data16
jbe
push
notb
fsubl
aad
and
out
mulb
xchg
pop
cmpsb
push
inc
leave
pop
stc
callw
arpl
bound
sub
outsb
andl
lds
repz
sub
mov
add
pop
mov
mov
lea
pop
mov
xchg
sbb
pop
xchg
sub
dec
add
adc
int3
ss
sub
sbb
or
jl
insb
xchg
pop
cmpsb
dec
mov
inc
lods
push
pushf
data16
push
in
push
fsubl
int3
ss
sub
sbb
or
jl
insb
xchg
pop
cmpsb
dec
mov
inc
outsl
lds
jnp
sbb
or
mov
mov
sub
add
jmp
mov
lods
popf
jno
mov
stos
xor
mov
jno
shlb
iret
mov
pop
stos
mov
ret
lds
add
add
ret
int
jp
iret
iret
enter
jno
sub
mov
sub
sub
xchg
and
and
test
jns
push
and
dec
cmpsb
lods
add
pop
dec
inc
out
lods
scas
pop
mov
scas
outsl
jp
enter
push
push
lock
add
jno
dec
cmpsb
nop
sbb
xorl
fstl
push
ja
mov
adc
enter
xchg
fldl
mul
jno
int
fdivrs
inc
ss
test
jns
in
mov
push
mov
aam
cmc
fistpl
mov
popa
shrl
cld
jns
out
cmpsb
sub
cs
sub
mov
lea
add
pop
dec
data16
sub
cmp
shrb
and
mov
out
or
pop
test
mov
add
xor
mov
cmp
dec
fdivr
pop
scas
aam
aad
mov
or
faddl
imul
in
mov
dec
movsl
addl
sub
jb
lock
hlt
push
sub
frstor
add
mov
push
mov
daa
adc
cwtl
xor
leave
imul
mov
xchg
sub
xchg
cmp
loop
into
xor
insl
inc
data16
push
push
inc
je
or
mov
inc
sub
fdivrl
or
or
sbb
inc
xorl
lock
ss
pusha
sub
xchg
pop
push
notb
out
enter
pop
or
mov
incb
adc
rclb
xchg
add
in
leave
bts
mov
cmp
fistl
dec
out
lcall
cmp
or
cmp
mov
dec
jo
xor
in
icebp
ret
dec
push
lods
bound
bound
test
inc
arpl
cmp
cmpsb
mov
es
inc
clc
sbb
mov
loope
xor
sbb
decb
sub
push
mov
jbe
mov
push
mov
out
in
cmp
popa
inc
or
adc
add
dec
adc
jae
pushf
loopne
mov
aaa
sub
push
clc
cmpsl
or
lock
sar
aaa
clc
xchg
outsb
sbb
mov
cmpsb
sub
das
dec
mov
lea
shlb
jae
xchg
inc
jecxz
xchg
aas
adc
mov
dec
fwait
orl
xor
pop
push
nop
loop
pushf
data16
scas
imul
dec
pop
jo
js
mov
push
addl
cmp
mov
test
sub
mov
cwtl
fdivrl
in
fdecstp
xchg
rorl
into
mov
cltd
and
pop
cld
cmpsl
xchg
and
bnd
std
outsb
push
fst
xchg
jbe
push
sahf
mov
jno
adc
imul
xchg
mov
sub
clc
xchg
mulb
pop
xor
dec
outsb
popf
rorl
cmpsb
push
nop
or
mov
xor
repz
push
mov
int
jnp
test
push
cmp
out
pusha
ss
add
mov
cmp
pop
aas
popa
push
sub
shll
xchg
rcll
into
jl
les
or
jnp
push
mov
mov
jo
icebp
pop
push
stc
aam
fidivrs
insl
insb
or
jne
sbb
or
scas
daa
das
ds
mov
lods
sub
popa
pushf
es
pop
pop
and
aam
jp
xor
inc
mov
ret
into
insb
repnz
sbbl
negl
int
sub
jno
jmp
jge
cmp
and
sarb
imul
jecxz
cmpsl
call
xchg
cmp
push
das
mov
in
mov
loope
mov
lret
icebp
jns
or
test
mov
adc
lods
xor
ds
scas
negl
daa
add
rolb
test
xor
push
mov
ss
inc
lds
scas
xor
leave
popa
or
lret
mov
iret
mov
adc
test
aad
mov
mov
cli
mov
sub
addr16
mov
ja
fucom
shrb
push
pop
lret
inc
out
call
inc
fcompl
arpl
aaa
notl
arpl
or
das
jo
cmp
jae,pt
push
xchg
out
adc
sarl
movsl
shlb
inc
lcall
push
pop
cmp
insl
hlt
loop
adc
shll
cwtl
test
cmc
clc
adc
jo
mov
sub
jp
in
xchg
fcoms
mov
inc
jo
sub
xor
lods
mov
pop
cwtl
nop
andb
dec
popa
or
sub
push
ret
xor
add
jg
std
mov
mov
movsl
fs
pop
adc
in
push
sar
out
test
in
aaa
sub
fisubrs
inc
jg
cmpsb
ja
xor
daa
xor
push
jnp
inc
sub
outsl
sbb
mov
data16
jo
jne
call
mov
push
sub
icebp
aam
es
aaa
push
lcall
push
sbb
sti
xchg
sub
lods
mov
add
pop
fs
shlb
gs
mov
dec
add
mov
in
cs
outsl
jno
mov
scas
xor
ds
push
add
xlat
andl
and
push
sbb
jl
inc
das
push
dec
lock
or
fsubrl
jge
mov
adc
nop
ja
adc
ja
data16
xchg
addr16
inc
lds
fsincos
and
mov
shll
and
inc
pop
push
jg
fstpl
cmp
pop
pop
negl
pop
mov
mov
arpl
les
aas
aas
xchg
jo
inc
stos
sub
pop
xorb
imul
call
sub
or
lret
adc
popa
pusha
xchg
in
adc
cmpsl
out
jl
push
and
push
dec
xchg
sbb
pushl
subb
inc
fwait
pop
and
and
aas
in
adc
clc
or
cmpsl
call
xchg
cmpsb
std
scas
call
xchg
mov
loope
clc
push
pushf
int
bound
sahf
ficomps
push
jecxz
xchg
push
mov
gs
or
mov
jb
das
jo
jb
clc
daa
push
sub
mul
clc
pop
sti
in
repnz
sbb
js
std
pop
arpl
lcall
pop
shlb
test
std
xor
pop
adc
jmp
mov
adc
sbb
fnstenv
fucomp
loope
in
cmpsb
pop
ss
cmp
and
ss
stos
adc
pop
int3
jns
cmp
fcmovbe
rcr
hlt
mov
stc
iret
sbbb
gs
sti
add
mov
cltd
pop
adc
cltd
fisttpl
cmpsl
ja
dec
insb
in
cmp
sbbb
outsl
notb
lahf
cltd
mov
pop
push
into
cli
mov
arpl
stos
jnp
or
in
jae
push
sysexit
enter
xchg
and
push
dec
imul
cld
push
jecxz
xchg
cld
addr16
leave
mov
in
jge
sbb
xor
fsubp
mov
cmpsb
add
mov
xor
push
sub
js
in
mov
decl
in
inc
je
daa
and
lea
nop
call
jl
test
out
fstl
pop
adc
and
cmovb
mov
mov
dec
clc
call
sbb
test
into
inc
sti
mov
adc
lock
xchg
adc
cmovl
cwtl
test
jg
mov
mov
mov
shlb
out
push
pop
stos
ret
sbbb
push
lcall
push
pop
xchg
cmp
call
adc
cmpsb
lret
rcll
add
jp
lea
out
sbb
jge
mov
gs
sub
xchg
shrb
pop
cmp
fnstsw
mov
stos
outsl
cwtl
dec
je
iret
inc
sarl
jae
dec
jg
or
ret
mov
push
inc
cld
adc
pop
pop
jle
fidivrl
into
dec
repnz
clc
test
inc
cmp
xchg
cmp
or
pop
or
or
scas
push
out
jno
mov
add
arpl
push
stc
je
sete
les
repz
cltd
or
push
js
pusha
add
je
dec
inc
lcall
addl
lahf
inc
sti
outsb
sbb
pusha
sarb
xchg
inc
jne
sub
and
test
sbb
or
mov
loop
ret
pop
gs
mov
test
push
dec
add
ljmp
push
addr16
test
xchg
xchg
aas
cmp
nop
inc
push
sbb
pop
cltd
decb
ds
outsb
mov
call
sti
stos
cmp
div
mov
jmp
popf
pop
mov
push
rorl
push
outsl
push
call
fsubrs
dec
aam
sbb
mov
int
dec
mov
sahf
fst
xor
es
pop
xlat
and
rclb
push
addr16
and
or
rclb
mov
cmp
fwait
push
push
adcb
repz
fisttpl
mov
fdivrp
notl
xlat
test
mov
sub
es
repz
inc
inc
xchg
pinsrw
jge
mov
cli
mov
aad
stos
push
sub
or
call
cmpsb
sub
outsl
cmp
out
or
ret
xlat
jmp
lods
shll
jae
ss
idivl
sti
pop
push
lock
xchg
pop
out
test
scas
aas
push
push
jb
xor
imul
mov
sub
push
loopne
int
inc
iret
arpl
inc
pop
movsl
mov
mov
ror
adc
pusha
test
pusha
js
inc
jbe
pop
js
in
xlat
adc
in
and
add
aad
push
jp
movb
push
or
jmp
nop
outsl
fsub
daa
aas
dec
fs
jp
daa
add
inc
mov
jmp
arpl
inc
js
cltd
loop
xchg
rclb
cmp
push
adc
lcall
mov
mov
scas
in
cmpsl
fistpl
icebp
ja
lahf
cltd
test
add
pusha
loope
add
imul
or
jg
mov
outsl
sub
or
push
shrl
loope
push
xlat
out
int
dec
pop
mov
in
sub
or
push
sub
frstor
nop
xor
rcll
imul
rolb
data16
mov
mov
mov
pop
and
inc
hlt
fsubrs
scas
test
jp
mov
mov
or
inc
in
xchg
fisttpll
int3
imul
je
test
rclb
mov
call
jmp
fidivrs
ss
loop
nop
repz
std
and
jb
fmull
xor
mov
test
sub
inc
inc
es
and
add
ds
dec
jg
sub
repz
out
mov
aad
cmp
loopne
or
xlat
fcomps
xchg
ss
push
call
iret
addr16
cltd
daa
push
sbb
fidivs
mov
daa
aam
mov
dec
or
divb
xchg
inc
jmp
test
int3
jecxz
lods
pop
mov
cmpsl
mov
push
mov
dec
aaa
pop
pop
das
cmp
inc
xor
add
leave
jb
mov
cmp
xor
shl
cltd
adc
insb
shlb
popf
sarb
pop
xchg
mov
jo
test
push
aam
push
stos
push
cmp
add
faddl
adc
test
shll
adc
add
je
mov
push
mov
shrb
out
sub
push
dec
or
fwait
movsl
mov
notb
je
lahf
int
cmp
xor
outsb
inc
adc
and
mov
sbb
push
jge
sub
mov
je
add
iret
dec
scas
push
pop
ret
push
icebp
push
push
mov
repz
clc
mov
repz
inc
aam
jnp
xor
rcr
cmp
push
and
test
test
or
ss
push
jg
das
push
sub
insl
out
popa
imul
or
and
imul
mov
pop
sbb
lcall
or
xchg
mov
addr16
push
lahf
or
push
dec
adc
pop
xlat
xchg
out
xchg
jmp
or
mov
jbe
cmc
jno
repz
loopne
jb
inc
dec
bound
push
jne
in
push
xor
jmp
add
in
jp
test
loopne
xchg
sbb
jb
repz
inc
cmp
popf
sbb
mov
lods
sub
xchg
sbbb
iret
jmp
inc
movsl
data16
pusha
int3
sahf
jle
xor
std
std
and
popf
lret
scas
imul
cltd
icebp
gs
pop
adc
or
and
or
push
cmc
aad
mov
es
leave
ja
push
mov
outsb
out
add
xor
sbb
inc
cli
mov
dec
xchg
pop
jecxz
fwait
cltd
dec
jnp
mov
adc
andb
inc
insb
daa
rclb
loope
mov
push
lods
je
pop
iret
pop
cmpsl
lds
or
mov
pop
fdivrl
ljmp
outsl
gs
call
loopne
popf
fimull
pop
fst
fisttpll
push
insb
stos
add
jmp
inc
jp
imul
xor
jmp
mov
mov
adc
or
ret
ret
xchg
clc
mov
fidivs
add
cltd
fimull
out
subl
outsl
xlat
jae
sub
sbb
pop
cmp
fldln2
xlat
adc
jmp
lret
push
cltd
pop
cmp
out
inc
lret
cmpsb
jle
mov
xchg
add
imul
cmpsl
fists
clc
arpl
std
sbb
cwtl
mov
sbbb
dec
mov
push
push
jg
cmc
add
cld
fistpl
test
mov
out
pop
mov
push
and
iret
bound
stos
negb
mov
or
mul
mov
mov
sbb
lcall
test
xchg
inc
pop
rep
pop
mov
fcoms
cmp
hlt
insl
ret
enter
aad
addr16
orl
rorl
call
sub
clc
sbb
in
sti
jl
mov
pop
stos
das
xor
cmp
mov
mov
sub
cs
mov
inc
mov
xor
popa
xor
mov
and
fists
stc
fists
adc
lds
mov
fisubrs
hlt
shrl
jo
sub
lret
int
lret
xor
xor
cmp
lahf
dec
cmp
test
add
in
movsb
cmp
inc
and
stos
int3
jb
cmc
jae
or
out
in
or
push
dec
lea
int
pop
xor
jo
adc
pop
fcoms
popa
nop
stos
inc
scas
notl
movsl
movsb
xchg
add
jg
inc
fs
cmpsb
inc
aaa
adc
js
add
jmp
cmp
dec
inc
sub
pop
aad
sub
inc
loopne
stos
sbbl
mov
fcmove
sbb
ss
push
test
fdiv
sbb
inc
pop
les
cmpl
testb
jmp
inc
inc
cmp
or
jl
pop
push
lret
cmp
in
cmp
data16
imul
mov
mov
dec
clc
divl
cmpsl
jl
add
outsb
mov
into
mov
pop
movsl
popf
test
rcrb
push
and
xchg
insb
movsl
sbbb
lcall
hlt
je
push
mov
ret
mov
jns
dec
addr16
xchg
in
xchg
jecxz
dec
jne
pushf
mov
adc
add
add
jae
sbb
and
outsl
inc
lods
add
or
iret
cmpsb
aam
repnz
cmp
pop
data16
cmp
fildl
mov
loope
test
popa
mov
mov
fimull
push
nop
jne
je
push
xchg
xchg
jle
dec
out
jl
into
jmp
dec
and
aas
nop
jo
das
lret
xchg
test
inc
mov
xchg
adc
arpl
rcr
popa
or
cmpsb
les
jmp
daa
movsb
notl
cmp
cmovne
mov
pop
test
lods
add
or
aad
cmpsb
cmp
cltd
in
rclb
xchg
cmp
rclb
je
fists
cld
in
fcmovnb
and
in
or
dec
push
xor
imul
adc
fnsave
xor
jge
mov
lods
adc
and
cmc
pop
push
movsb
jnp
fsts
pop
repnz
in
push
data16
call
adc
hlt
jb
in
enter
mov
rcll
jne
int
je
fldt
fisttpl
fsubs
fistps
push
xchg
popa
or
les
nop
cmp
cmpb
jne
mov
adc
inc
insl
dec
je
sahf
fistl
cwtl
or
cmp
cmp
out
mov
mov
loopne
push
loop
push
out
adc
mov
in
repnz
ljmp
pop
mov
lahf
lea
aad
rorl
les
dec
sbb
loop
mov
mov
xchg
and
dec
sbb
mov
cwtl
outsb
sub
dec
mov
pop
dec
repnz
fdivp
imul
lret
xchg
out
gs
insb
xchg
lock
lods
add
jne
or
mov
push
fistl
fdivl
sub
scas
cltd
fcmove
jecxz
scas
jmp
nop
lods
jle
cld
lds
mov
cmpsl
pop
ret
jle
add
stc
jmp
pop
mov
lret
int3
in
scas
ficompl
popf
jg
mov
gs
or
and
stos
inc
push
fmull
jle,pt
pusha
pusha
jns
lds
je
fnstcw
test
filds
lret
fwait
jg
aad
cwtl
jae
sub
cmc
aas
fnstenv
bound
arpl
and
fistps
add
adc
dec
sbbl
cmp
loope
repnz
iret
int
or
imul
or
sarb
xchg
cld
inc
xorl
test
iret
cmp
adc
scas
ds
sbb
pop
dec
or
repnz
pop
push
int
cmp
fwait
lret
out
lods
into
add
and
es
push
add
mov
mov
and
and
popa
scas
adc
popf
adc
mov
call
push
in
pop
adc
jg
sub
pop
addr16
add
movsb
out
popa
das
inc
xchg
gs
in
iret
adc
ljmp
push
adc
or
dec
lods
fwait
xchg
inc
xchg
aas
or
add
aaa
loope
xchg
mov
dec
pop
aaa
mov
leave
sub
xor
and
mov
sbb
xor
cmp
and
popa
push
sbb
push
out
fisubl
and
fwait
jo
addr16
cmp
sub
pop
mov
lds
imul
cld
out
cmp
imul
test
sti
xor
xor
xchg
or
bswap
push
test
daa
in
jnp
imul
fs
jmp
jo
or
mov
xchg
jo
je
test
stos
cmp
andl
cmpsl
adc
jp
std
in
pop
or
or
sub
out
lds
in
and
inc
aaa
jmp
call
push
jle
fisttps
dec
scas
fwait
mov
dec
cmp
or
movsb
inc
out
push
mov
jbe
aam
gs
cwtl
aas
fstp
lods
cmp
add
jmp
pusha
push
mov
xchg
pusha
cmp
add
jo
out
pop
push
xchg
sub
inc
adc
cmpsb
xchg
adc
push
mov
movsb
loope
sti
inc
mov
xor
cwtl
lret
xor
bound
push
sahf
adc
and
imul
shrb
addr16
cmp
iret
ss
mov
cld
out
adc
notb
lcall
or
ficoms
cmpsb
shll
mov
push
mov
scas
popl
cmp
xchg
in
int
lods
fdivrs
sub
or
nop
jns
scas
call
pop
stos
test
arpl
ja
notl
lcall
cld
push
jecxz
lea
call
insb
lods
push
xchg
xor
sti
frstor
mov
test
aam
js
dec
and
test
mov
popf
clc
fisubs
xchg
scas
int3
rcrb
jecxz
std
jmp
enter
push
orl
fistl
or
mov
push
sub
cmc
gs
outsl
mov
and
leave
gs
fcmovnb
add
jecxz
ljmp
gs
stos
sahf
jg
mov
jb
test
loope
mov
push
jne
lcall
xor
push
lods
mov
pop
outsb
lock
aam
pop
xor
xchg
jle
aas
add
push
clc
xor
icebp
push
jge
mov
in
jb
xchg
xchg
add
hlt
dec
ja
in
data16
dec
ficoml
in
ja
sti
adc
shrl
data16
push
in
push
fsubl
int3
ss
sub
sbb
or
jl
insb
xchg
pop
cmpsb
dec
mov
inc
lods
push
pushf
data16
push
in
push
fsubl
int3
ss
sub
sbb
or
jl
insb
xchg
pop
cmpsb
dec
mov
inc
lods
push
pushf
data16
push
in
push
fsubl
int3
ss
sub
sbb
or
jl
push
mov
inc
cwtl
push
stos
data16
push
in
push
pop
es
ss
sarl
or
or
in
mov
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
