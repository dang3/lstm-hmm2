incl
mov
push
sub
pop
arpl
mov
pop
push
push
mov
pop
fistps
mov
fldenv
pop
stc
dec
mov
pop
sbb
pop
sbb
cmp
pop
jg
pop
pusha
lret
pop
loopne
mov
jp
bound
mov
pop
or
or
fs
add
fs
or
inc
pop
andb
add
adc
repnz
add
jbe
addr16
add
subb
add
jg
testl
push
jns
push
and
imul
mov
add
subb
jg
add
ja
push
adc
outsb
call
inc
clc
outsb
dec
inc
js
test
outsl
and
jo
lcall
clc
jo
sbb
cmc
and
jb
popa
xorb
add
jnp
jae
daa
clc
jae
sub
je
mov
js,pt
faddl
jne
imul
daa
dec
jo
test
lock
pop
jo
push
lock
push
jo
add
dec
dec
js
cmp
jp
xor
jnp
push
clc
jnp
sub
cld
incl
jo
and
lock
pop
jo
cmpsb
imul
jg
cmp
jg
pop
push
mov
orb
xorl
lock
pushl
jecxz
lock
jo
cmp
lock
dec
call
xchg
inc
call
decl
hlt
xchg
add
push
mov
pusha
mov
outsl
lock
pop
ljmp
jae
call
mov
push
push
mov
adc
lea
insb
call
ljmp
punpcklbw
pop
pop
fisubrl
nop
mov
ljmp
pop
sub
xchg
xor
pusha
xchg
adc
loopne
sbb
pop
xchg
fs
xchg
ss
xchg
into
push
fcoms
push
pop
xchg
dec
and
xchg
inc
inc
pop
xchg
dec
sub
xchg
mov
push
xchg
pop
push
rclb
xor
ljmp
cltd
imul
cltd
out
push
lcall
push
fwait
sub
rcrb
add
lcall
pop
enter
dec
sahf
dec
add
sahf
pop
jno
lahf
dec
imul
loop
inc
mov
jmp
sub
movsl
push
inc
mov
push
push
mov
pop
addr16
movsb
les
jmp
jno
movsl
xor
cmpsb
xchg
or
cmpsb
cmpl
cmpsl
int3
gs
test
aaa
mov
test
xor
sbb
xor
call
xor
mov
adc
idiv
ljmp
xor
sub
xor
sub
jae
sub
pushl
test
jmp
gs
ss
sub
adc
mov
push
mov
mov
incl
mov
mov
or
mov
sbb
mov
xor
mov
loopne
cwtl
mov
dec
cwtl
mov
cmpsb
jb
mov
push
pop
cwtl
mov
fwait
bound
mov
mov
adc
dec
dec
adc
inc
push
adc
lcall
jnp
rclb
sar
mov
dec
dec
or
insl
jno
ret
or
inc
testb
sub
mov
cmpsb
dec
add
dec
outsl
add
imul
sub
incl
mov
adc
enter
enter
dec
in
std
pop
in
iret
mov
push
jns
inc
inc
push
ljmp
repnz
dec
outsl
xchg
mov
js
and
repnz
lea
push
push
es
jbe
clc
lock
cmc
jns
mov
cmp
hlt
int3
cmc
mov
test
cmp
inc
fwait
std
std
mov
js
clc
sub
nop
inc
mov
lea
mov
sti
lahf
clc
inc
mov
push
mov
cmp
mov
xchg
push
fcmovne
xor
lret
push
mov
pshufw
pop
js
dec
enter
das
clc
pop
lock
cld
lods
xor
inc
mov
testb
inc
lret
mov
mov
out
aaa
mov
cmpsb
arpl
mov
xor
sarb
push
incl
es
outsl
mov
xor
mov
testb
lcall
cmp
pusha
inc
test
mov
mov
push
pop
jnp
push
cltd
dec
sar
cmp
fidivs
movsl
push
popf
daa
cmp
inc
in
icebp
inc
pop
aam
fcomip
repz
mov
es
pop
mov
or
gs
dec
or
ret
pushl
nop
leave
mov
cmp
push
in
std
inc
push
rclb
xor
xchg
add
mov
loopne
xor
dec
dec
ljmp
aaa
enter
inc
mov
add
mov
jo
xchg
ja
addb
add
lea
loopne
mov
lds
sbb
sti
into
add
cmp
ror
loope
jg
mov
inc
faddl
sub
push
mov
outsl
mov
dec
mov
fdivrl
filds
fists
dec
or
xor
enter
pop
repnz
cmp
dec
ret
movswl
js
lret
mov
lea
ja
fs
fisttps
in
test
jp
ret
mov
sahf
cmp
outsb
lods
insb
es
loopne
sbb
sub
jo
dec
lods
mov
int
xchg
dec
repnz
mov
or
jmp
das
sahf
flds
mov
in
mov
enter
enter
loopne
mov
pusha
arpl
dec
ret
cmp
decl
push
dec
inc
or
dec
push
push
call
dec
or
das
fiadds
mov
dec
mov
ret
add
int3
int
arpl
int3
and
cli
inc
movsb
nop
sahf
ja
inc
mov
repnz
pop
jg
mov
inc
movq
jp
inc
and
and
jmp
testl
lock
cmpsl
sahf
bound
cmp
bound
mov
es
imul
pop
dec
icebp
mov
test
pop
jne
xor
xchg
mov
or
jmp
xchg
leave
xlat
stc
or
and
cli
jne
outsb
iret
loopne
jg
mov
pop
inc
std
mov
cmp
clc
inc
shlb
outsl
jg
je
mov
lock
mov
inc
iret
mov
sarb
inc
shlb
push
adc
adc
hlt
pop
aam
sarl
pusha
inc
in
add
inc
mov
xchg
gs
adcl
cmpsl
mov
mov
fwait
shll
fdivl
test
jno
xchg
dec
and
inc
push
mov
incb
push
sbb
mov
scas
adc
outsb
jno
insb
aaa
adc
mov
sub
cmc
mov
in
sahf
aaa
mov
icebp
stc
mov
in
jne
sbbb
clc
ret
ret
push
repnz
testb
mov
stos
add
loopne
jne
mov
pop
test
paddusb
mov
mov
orb
jnp
insb
repnz
push
adc
or
ljmp
sarl
lods
stos
ret
mov
std
push
lods
mov
ficomps
test
jmp
rorb
test
cltd
mov
mov
les
cmpsb
ret
inc
scas
fdivrl
movsb
mov
mov
mov
int3
lret
and
mov
popf
sbb
inc
mov
and
pusha
mov
sbb
adc
incl
shrb
pop
cmpb
sub
lock
jecxz
xor
inc
sbb
pop
popa
jo
adc
inc
add
jg
std
mov
inc
xor
and
add
imulb
rcr
in
mov
or
lcall
add
lret
add
mov
adc
and
add
rclb
and
lcall
mov
sbb
mov
sbb
and
ret
push
sti
neg
xor
push
inc
clc
les
add
nop
inc
add
mov
ss
jmp
mov
mov
push
mov
mov
hlt
and
stc
xchg
adcl
iret
fwait
pop
dec
or
inc
xchg
lret
fldl
subb
pop
dec
int3
mov
xchg
mov
pop
dec
sub
and
imul
outsb
and
call
mov
xor
sub
imul
sub
mov
psrad
js
shrl
and
loopne
outsb
arpl
jp
sub
or
es
mov
int
mov
sub
cmpsb
cmp
jns
jp
cwtl
push
cmpsb
ret
in
repz
shr
sub
cmp
packssdw
push
scas
mov
imul
movsl
sti
mov
cwtl
xor
xchg
push
cmp
adc
cmp
dec
movsb
sahf
or
in
popf
pop
and
sub
roll
mov
mov
push
sti
pushf
pushf
xor
dec
ss
push
inc
out
in
shll
jg
rorb
xlat
pop
add
adc
test
in
sub
or
mov
xor
pop
and
xor
ljmp
jb
cwtl
imul
nop
xchg
call
mov
loopne
and
pop
outsb
js
fsubrs
pop
insl
stos
jns
outsl
xchg
movsb
pop
jo
xchg
fsubrs
call
shlb
inc
bound
push
inc
popa
pusha
inc
shlb
inc
fs
shlb
fldt
arpl
dec
retw
imulb
gs
xor
addr16
inc
push
pushl
and
loopne
sarb
inc
jp
or
cmp
or
enter
sti
pushl
dec
jl
lods
enter
dec
jnp
push
jge
mov
rcrb
jl
dec
inc
jge
mov
dec
jg
ds
sbbb
enter
dec
jg
arpl
jno
xor
jb
xor
jo
orb
xor
push
jae
xchg
jo
sbb
pop
jo
push
jl
jne
jg
jbe
mov
je
jo
jne
jns
enter
dec
js
dec
jbe
xor
lock
inc
xchg
jo
roll
jae
jo
incl
pop
jo
pop
xor
dec
push
push
clc
dec
sbb
lock
sub
lcall
lock
lock
push
jne
dec
roll
fimuls
inc
lahf
sahf
js
or
pushl
dec
shlb
js
add
js
xchg
push
scas
inc
and
ljmp
inc
loop
js
call
push
js
sbb
inc
je
inc
inc
push
clc
pop
or
cmp
ljmp
pusha
pop
cmpsb
test
pusha
pop
loopne
loopne
jl,pt
pop
insb
push
sbb
outsl
clc
mov
sahf
pop
cwtl
lods
clc
pop
xchg
jg
or
loopne
sbb
loopne
jns
lcall
loopne
loop
pusha
push
mov
push
xor
push
mov
jae
push
lea
push
and
decl
push
mov
inc
push
push
or
call
movsb
push
push
cltd
cmp
stos
clc
arpl
test
data16
nop
lods
outsb
cmp
stos
mov
cmp
pop
cwtl
stos
push
cwtl
scas
insb
lea
lods
mov
push
cs
popf
lcall
scas
ret
push
cwtl
scas
lcall
mov
sbb
mov
lret
incl
mov
dec
cltd
or
mov
or
loope
or
decl
cmpsl
test
push
or
mov
push
mov
mov
cmpsl
pushl
mov
or
cld
push
mov
jecxz
xor
jno
cmp
fildll
mov
mov
fldcw
mov
aaa
cmp
in
and
mov
xchg
fldcw
mov
nop
mov
call
mov
xchg
mov
mov
mov
mov
lea
mov
test
ret
outsl
push
mov
jne
mov
jp
mov
jg
test
cmpsl
out
push
xchg
scas
xlat
test
popa
in
adc
and
in
sti
das
clc
jg
fisttpl
test
dec
xor
scas
add
dec
fmuls
das
sbb
jg
xchg
in
shl
fs
rol
or
aam
fs
arpl
popl
dec
scas
fwait
std
std
std
outsl
je
in
test
inc
cmpsb
ret
sub
and
fldenv
stos
movaps
xor
pop
pop
inc
fildl
push
sub
decl
add
pop
call
dec
mov
out
outsb
call
movsb
pop
fistl
pop
add
das
or
mov
xchg
xor
in
decl
push
jg
xor
aam
out
lea
push
pop
pop
cmpsl
push
xchg
cmpsl
popf
das
push
dec
sub
push
jg
jg
imul
in
scas
insb
or
out
xchg
neg
sbb
hlt
sti
pushl
pop
inc
lods
xchg
movsb
out
xchg
push
fsubp
add
ljmp
pop
xchg
int
cmp
scas
jl
fs
push
push
xor
adc
mov
push
test
pop
add
jmp
out
jmp
outsl
clc
ucomiss
add
push
push
sub
xchg
in
scas
in
pop
xchg
pop
mov
movsl
fidivrs
push
fisubrs
jmp
cmpsl
push
scas
pusha
arpl
ja
imul
jg
lcall
sub
nop
addr16
pop
or
outsl
ja
sub
lret
dec
inc
inc
out
inc
movsb
sar
cld
test
adc
jmp
adc
fisubl
fs
cmp
jbe
push
loope
loopne
test
mov
pop
jmp
call
mov
and
push
sbb
jo
pop
push
add
aas
mov
into
xor
imul
push
jmp
imulb
pop
out
clc
jle
roll
jl
stos
repnz
xchg
sahf
inc
mov
es
pushl
clc
fistpll
fidivs
mov
out
insb
test
adc
cvttps2pi
stos
inc
test
jg
mov
sbb
fs
aad
fisubrs
jmp
fists
insl
sbb
aas
mov
not
mov
xchg
jecxz
aas
cld
or
push
daa
push
loopne
lds
out
out
push
mov
cld
and
test
jg
out
test
or
inc
es
es
cmpsb
fs
dec
call
ds
arpl
arpl
pop
adc
adc
adc
out
aam
fabs
out
lock
xor
dec
ja
daa
mov
decl
test
cmp
push
or
xor
mov
iret
imul
mov
push
out
imul
push
test
adc
pop
in
fimuls
xchg
push
push
xchg
jmp
dec
in
pop
push
shrl
in
add
test
push
or
aas
push
cmp
inc
fsubrs
jecxz
sbb
push
in
addr16
mov
mov
in
push
jbe
daa
mov
divps
push
mov
push
jnp
dec
push
ss
sub
in
pusha
arpl
movsb
daa
jg
scas
inc
scas
je
mov
jecxz
jp
jmp
jle
repz
cmpsl
out
dec
mov
push
jmp
movsb
aaa
or
cmpsb
cmp
call
dec
pushw
scas
jle
dec
mov
pop
push
push
das
xor
inc
and
or
fdivrp
sub
jecxz
inc
dec
jmp
das
mov
xchg
shll
push
adc
cld
loope
inc
push
insb
mov
iret
pop
cwtl
xchg
psubusw
jg
icebp
das
mov
inc
sar
call
jbe
arpl
xlat
dec
aam
mov
cmpl
jl
out
stos
inc
and
mov
psubsw
rol
jo
popa
mov
das
les
lcall
lret
or
pop
popa
sbb
cmpsl
inc
or
aam
popa
and
dec
bound
push
bound
jmp
dec
pop
or
pusha
inc
call
aam
push
aad
push
or
pop
pushl
dec
inc
add
dec
addr16
cs
popa
call
and
cmp
and
ja
repnz
dec
or
and
jp
imul
jne
fadd
inc
out
popf
and
jmp
stos
idiv
pop
sbbl
gs
and
jp
loop
imul
mov
stc
lcall
mov
push
and
and
jo
leave
mov
inc
in
sub
pushl
repz
jl
fwait
adc
push
test
push
rcll
inc
aad
fwait
call
outsl
xchg
stos
stos
test
std
lahf
and
cwtl
push
enter
repz
in
jg
mov
mov
pop
mov
add
push
lea
mov
jge
gs
movsl
cmp
stos
sub
pop
inc
mov
mov
repz
inc
inc
mov
sbb
decb
sbb
rorb
pop
pushl
push
sbbb
nop
mov
sbb
cmp
out
cmp
ljmp
icebp
in
cmp
icebp
jmp
jnp
mov
insl
loope
xlat
jbe
les
dec
scas
fucomp
jl
mov
fisttpl
cmp
inc
add
jp
ficompl
xchg
push
sbb
xchg
fxch
jl
incl
inc
fldenv
dec
lret
aad
jne
jbe
or
rol
nop
xor
and
push
jg
jmp
ret
into
shl
aas
sbb
and
stc
lret
ss
pushl
ds
scas
xchg
and
push
mov
ds
inc
xchg
nop
dec
push
cmp
lret
mov
imul
es
pushf
push
addb
dec
femms
sbb
shlb
adc
pushf
ficomps
mov
aas
dec
mov
dec
in
xor
bound
sahf
adc
fcomps
pop
and
lock
inc
mov
loopne
negb
jns
push
sbb
sbb
lret
jecxz
fsubp
mov
cmp
push
add
pop
std
decl
jmp
clc
andb
stc
std
punpcklwd
push
sbb
xchg
cwtl
clc
mov
adc
in
decl
mov
in
and
cmc
xchg
out
div
push
cmp
popa
or
repz
hlt
gs
jmp
mov
repnz
icebp
jl
jo
adc
lock
jg
jo
mov
lock
or
push
clc
or
add
push
mov
clc
or
aam
stc
or
js
sbb
or
js
adc
call
clc
or
jno
add
or
inc
js
scas
fdivrp
push
loope
js
mov
adc
add
testb
in
pop
push
cwtl
jmp
add
add
roll
or
test
cmp
mov
sub
add
sub
clc
add
stc
push
mov
and
in
pop
dec
stc
inc
sbb
jnp
inc
push
or
rcrb
xor
sbb
add
cmc
dec
sbb
incl
sbb
enter
dec
sbb
dec
pop
shrl
leave
push
lahf
aas
dec
sbb
enter
incl
xchg
repz
and
outsb
cmp
adc
jecxz
rclb
adc
call
adc
sub
adc
sti
fcoms
pop
icebp
push
adc
adc
call
shrb
pop
push
xor
decl
push
sub
mov
or
pop
sub
fldcw
es
pop
sub
xor
sub
call
sub
fldcw
test
pop
sub
fsubrs
push
and
daa
sub
shll
sub
inc
mov
and
mov
sub
in
test
add
sub
inc
xlat
test
push
fisubrs
and
sbb
and
in
test
sub
sub
cs
test
inc
ljmp
sti
out
cli
pushl
xor
cmpxchg
sbb
sub
ds
jmp
cmp
incl
mov
cmp
loope
cmp
add
mov
or
clc
mov
aaa
mov
cmp
jmp
xor
clc
add
rorl
xor
ljmp
in
xor
aad
xor
xor
cmp
inc
cli
and
or
decl
dec
lds
mov
sub
push
out
sbb
cmp
incl
sbb
dec
std
cld
nop
dec
sub
adc
add
adc
call
push
ss
push
call
sahf
mov
mov
sub
pop
ds
call
mov
enter
decl
jp
fbld
call
mov
aad
popa
test
enter
push
lea
dec
add
loopne
cmpsb
jp
hlt
inc
pop
test
dec
mov
ja
lcall
test
or
scas
js
and
lods
and
jg
cli
jmp
out
call
outsl
mov
jmp
pop
je
gs
jno
addr16
mov
sbb
cmc
mov
inc
jmp
pushf
insl
xchg
pop
das
clc
outsl
jmp
sbb
mov
inc
rclb
xchg
jno
adc
sahf
push
fucomip
push
inc
imul
mov
adcl
clc
idiv
pop
hlt
inc
popf
add
jmp
scas
sub
dec
adc
popf
sbb
fcmovnu
lods
cli
sbb
flds
pop
in
mov
add
lock
sbb
mov
sub
fcomip
ljmp
or
inc
movsl
fimull
sub
fs
or
and
imul
mov
push
cltd
jnp
xchg
test
pop
int
cld
xchg
cmp
push
mov
insb
adc
push
popa
pop
fs
call
push
inc
mov
aam
mov
xchg
mov
insl
scas
dec
int
cmp
inc
test
push
lods
call
ds
cld
orb
subb
mov
push
ret
xchg
arpl
add
shll
dec
cld
add
sbbb
test
hlt
movsb
mov
jle
cmpsb
fwait
mov
shrl
push
call
mov
nop
jecxz
fbstp
push
jmp
imulb
push
call
int
in
test
mov
cs
lods
sahf
and
outsb
call
ret
decb
jle
push
or
adc
enter
cld
ljmp
popa
mov
test
movsl
popa
test
jo
nop
jmp
std
call
cwtl
fs
in
and
mul
jns
decl
push
or
push
xchg
xor
push
mov
push
ret
out
mov
insb
dec
sbb
jecxz
mov
sahf
nop
mov
or
jle
pop
cs
jg
lea
inc
or
aad
inc
xor
mov
fucomip
jl
cltd
mov
inc
je
dec
or
dec
jle
fs
popa
fistl
into
cs
ljmp
jle
bound
sahf
lea
insb
addr16
add
aam
imul
xor
cmp
in
imul
lock
push
push
mov
incl
dec
xor
push
cld
outsb
push
loope
aam
insl
std
jmp
ja
or
lea
sbb
mov
flds
lock
stc
pushf
xchg
mov
in
push
fcoml
and
lds
arpl
fs
pop
sbb
sbb
push
ss
xchg
movsb
in
dec
pusha
add
mov
or
scas
inc
add
loopne
popa
int3
add
popa
jnp
loope
les
loope
faddl
aad
call
mov
test
cmp
fimull
dec
push
or
dec
lods
mov
incb
push
scas
pushf
stc
mov
fldl
lock
mov
lret
inc
fistpll
mov
or
sahf
pop
sti
std
arpl
jo
decl
test
in
popa
ret
lods
jae
jae
mov
fld
das
add
mov
cmp
rcr
cmp
jbe
ljmp
arpl
lret
dec
sti
lods
test
out
adc
mov
cmp
stos
cli
jmp
inc
push
dec
jg
mov
out
int
scas
jmp
sbb
in
dec
inc
fwait
std
adc
mov
cld
pop
dec
mov
cmp
out
cs
test
push
call
movsb
out
dec
mov
cmp
dec
pushf
idiv
push
sti
xor
xor
out
xor
out
cmp
test
aaa
pop
aaa
lcall
scas
incb
call
mov
enter
mov
test
fdivrp
jmp
popf
dec
pop
push
rorb
or
lahf
mov
push
mov
cmpb
mov
jb
jno
xchg
xchg
pusha
cmp
pop
pop
enter
call
mov
in
cmp
add
sbb
mov
inc
mov
mov
enter
xor
push
orb
testb
mov
mov
mov
xor
xchg
movsl
push
cmpsl
cmp
cltd
jno
mov
mov
jb
jns
dec
scas
inc
mov
pcmpeqd
or
shr
push
movsl
or
mov
daa
cmp
xorl
decl
lcall
mov
insl
dec
dec
jl
sbbb
push
inc
cmp
push
aam
mov
add
add
and
negb
or
sub
mov
and
testb
in
clc
pop
mulb
push
jmp
push
push
pushf
rcrl
xchg
fcmovnb
push
popa
or
push
inc
decl
sub
enter
cmp
sbb
das
ja
and
decl
sahf
xor
lcall
inc
aad
ds
fmul
mov
sar
ljmp
pushf
lods
dec
and
jmp
inc
dec
scas
sbb
jp
repnz
je
xor
das
movsl
or
das
cltd
lahf
out
mov
sub
enter
in
push
mov
test
mov
xor
lret
ret
mov
fcmovb
shlb
getsec
and
lods
dec
or
pusha
scas
pop
cli
sahf
or
ss
pop
sahf
xchg
stos
mov
insl
neg
test
in
pop
into
andl
mov
data16
addr16
gs
pop
iret
test
jbe
fisubs
or
cmp
lock
mov
mov
or
rcll
ljmp
jo
mov
call
dec
fcomi
enter
call
pop
add
jecxz
aam
loop
mov
call
loop
cmp
loopne
sarb
hlt
incl
in
sti
mov
cwtl
daa
or
cs
cmp
or
cmp
ljmp
call
mov
sub
and
outsl
divl
sub
shlb
xor
push
pushl
das
sub
test
pop
lods
xor
lock
mov
das
ljmp
shrl
incl
mov
scas
les
adc
es
call
jae
mov
adc
in
mov
pop
in
mov
push
sbb
jle
call
fnstsw
sub
sbb
daa
and
xchg
push
sbb
decl
and
jg
mov
sbb
add
cwtl
and
call
loopne
and
push
mov
sbb
cwtl
and
and
into
std
incl
jmp
sbb
stos
out
add
lret
push
mov
sbb
add
add
fistpll
cwtl
or
adc
nop
mov
sbb
sbb
repz
sbb
mov
sbb
std
ds
jbe
sbb
sub
dec
faddl
xchg
dec
cld
adc
in
nop
dec
add
adc
nop
push
enter
xchg
cltd
dec
pop
negl
inc
or
cwtl
dec
xchg
or
decl
in
nop
dec
push
xchg
adc
cs
xor
out
xor
pause
xor
or
xor
pushl
out
icebp
mov
adc
mov
or
aaa
and
aaa
cmp
int
test
adc
incl
nop
xor
jmp
cmp
sti
or
lock
mov
sub
decl
cmp
cld
mov
inc
les
cmp
and
inc
xor
cmpl
out
incl
cmp
fiaddl
inc
fucompp
andb
stc
and
jns
dec
loop
and
js
push
mov
and
mov
and
fdivr
and
or
aam
lock
jns
jne
lock
pushl
jo
and
lock
jo
pop
mov
daa
pop
out
jo
and
jo
mov
incl
jmp
push
or
push
cmp
call
jo
aam
outsb
push
fldcw
mov
mov
pop
out
push
loope
pusha
insl
aas
or
outsl
out
mov
push
sub
loopne
pushl
xchg
loope
scas
mov
push
rcrb
decb
push
and
pop
push
mov
pushf
sti
jg
dec
popa
or
loop
jp
add
cmc
sub
ljmp
insb
es
idivb
cmp
pusha
sbb
mov
ds
cmpsl
adc
adcl
jmp
mov
cltd
xor
add
adc
pushf
jecxz
inc
in
cmp
mov
fsubl
fsubr
out
out
sub
push
cmpsb
lea
or
in
dec
cmpsb
cmpsb
mov
in
and
pushf
mov
xchg
add
mov
loope
lock
filds
dec
add
bound
cli
pusha
mov
push
aaa
push
out
movsl
mov
out
ljmp
clc
pop
push
loopne
movsb
xchg
or
push
je
fmulp
inc
popf
push
push
aam
outsl
fildl
cmpsb
or
xor
pop
bound
mov
sbb
loop
adc
mov
sti
jmp
jns
xchg
and
jge
add
add
lcall
or
in
add
mov
adc
arpl
imul
push
mov
scas
leave
in
xor
push
mov
fcos
pushl
cld
and
out
jne,pt
stc
and
mov
push
scas
repz
fistpl
data16
popf
jecxz
mov
fists
repnz
jns
mov
in
push
jns
out
lcall
push
in
and
mov
lods
test
mov
pushf
andl
lods
push
movswl
ds
xchg
mov
jbe
out
push
loope
pop
cld
mov
fisubs
fwait
push
push
popa
mov
rcr
gs
mov
jnp
inc
fs
bnd
insl
fistpll
cmpsb
loope
in
call
xor
cmpl
mov
push
add
adc
push
fs
leave
push
jnp,pn
aaa
sub
repnz
sahf
add
dec
xor
pop
push
push
xor
sub
mov
fiaddl
lods
pop
in
testl
pushf
movsb
repnz
leave
and
in
in
inc
cmc
sahf
add
sub
out
or
test
push
push
and
adc
push
mov
mov
imul
repz
or
mov
shlb
gs
jecxz
outsl
dec
inc
roll
pushf
fisubs
out
or
fimuls
push
mov
mov
lahf
loop
scas
cmp
daa
xchg
fwait
rcll
nop
mov
cld
cmp
add
add
jl
out
add
pop
mov
push
jae
push
xchg
pop
sahf
popf
scas
leave
sbb
mov
in
jnp
jmp
dec
adc
jle
ret
pushf
xor
add
decl
pop
stc
inc
out
bound
outsl
stc
cmp
ljmp
add
out
or
arpl
xor
mov
nop
jnp
sbb
outsl
lock
mov
push
insb
jnp
xlat
sbb
cld
cs
shr
and
push
call
jns
push
in
pusha
push
imul
test
jo
jge
push
push
addr16
scas
or
sub
xchg
jge
decl
ljmp
ljmp
cmpb
mov
aad
aaa
ret
fisubrs
data16
inc
loop
daa
and
mov
dec
push
push
cmpsl
notb
push
mov
inc
sub
fidivrs
in
lahf
scas
ret
cmpsb
cli
cs
jnp
pop
xchg
scas
cmc
lock
hlt
aaa
sbb
sbb
ljmp
mov
testb
mov
mov
das
cli
insl
push
in
ss
pop
add
inc
xchg
outsl
pusha
xchg
stc
ret
int3
add
mov
dec
sarl
jmp
inc
fadds
rcrl
int
inc
pop
jmp
lds
out
inc
push
mov
test
mov
int3
inc
aaa
add
pop
dec
rol
pop
int
cmp
out
jmp
inc
pusha
add
inc
mov
int3
pop
test
aaa
jmp
fwait
xor
gs
ljmp
xor
jo
push
mov
jg
addb
or
sbb
jns
adc
imul
and
lret
mov
lcall
mov
out
test
aam
sub
stos
shrl
das
negl
inc
mov
test
out
sti
imul
sahf
pop
pushl
or
test
subl
icebp
mov
inc
rorb
sub
jmp
push
mov
cs
in
mov
push
xor
fndisi(8087
decl
mov
pop
mov
push
fdivl
push
push
push
jecxz
mov
outsb
stos
push
inc
rorl
pop
mov
mov
add
sar
repz
mov
dec
mov
pop
push
ret
es
mov
cmp
out
repz
mov
cmp
mov
lcall
rcrl
xchg
and
xor
addr16
fcmovb
mov
sub
push
arpl
push
ljmp
outsb
sub
into
ret
xchg
and
dec
lahf
xchg
xchg
cltd
sti
in
lahf
outsl
jg
mov
pop
lahf
cld
lahf
xchg
mov
mov
repnz
scas
xchg
outsl
std
imul
jae
addr16
loopne
pop
ds
setbe
stc
push
lods
hlt
xor
push
insb
push
int3
lcall
or
arpl
rorb
dec
repnz
popa
das
push
and
enter
mov
ds
lock
decl
lret
dec
mov
aam
inc
cmp
cmp
das
cmp
jg
mov
rcrl
cmovle
and
repz
adc
scas
mov
scas
sub
test
add
aas
adc
jmp
das
cs
cmpsl
and
sub
inc
mov
sbb
jno
mov
xor
in
dec
push
fildll
sbb
call
dec
mov
cmp
stos
je
fmul
xchg
inc
and
jp
dec
push
les
xchg
pop
cld
call
aas
add
cs
das
leave
add
lock
arpl
sub
jbe,pn
cmp
loopne
popf
lds
ljmp
cs
test
lret
xor
in
test
lods
sbb
dec
fildl
getsec
mov
lret
cli
sbb
arpl
stos
lret
add
xsaves
dec
lret
dec
mov
lods
xchg
jo
dec
mov
mov
decb
call
roll
mov
dec
imulb
pushf
into
xor
das
mov
and
getsec
sub
mov
add
cld
dec
je
mov
jmp
scas
sbb
mov
lds
addb
jnp
mov
xor
jle
jo
jl
add
call
nop
mov
mov
cwtl
xchg
pop
ja
mov
inc
or
movsb
lods
jle
incl
and
dec
dec
stos
into
nop
jle
fst
cltd
dec
push
loope
pop
stos
inc
push
das
stc
sub
mov
addr16
pop
scas
lds
adc
jp
fwait
shrl
sbb
inc
data16
call
mov
adc
and
jg
arpl
dec
and
cmp
call
imul
idiv
incl
data16
mov
mov
fs
mov
hlt
add
cli
fsubp
jo
jg
je
cld
xor
add
xor
icebp
jle
cmp
in
fldenv
in
add
incl
test
add
je
test
hlt
decl
movsl
push
lea
call
mov
fildl
lcall
and
mov
mov
mov
xchg
int3
push
mov
mov
sbb
movsl
ljmp
pop
xlat
mov
mov
addr16
out
rcrb
mov
xor
sub
xchg
fistl
and
add
idivb
mov
jne
out
dec
out
add
ja
dec
lahf
lods
mov
inc
adc
lods
mov
mov
xlat
das
sbb
adc
push
movsb
pop
movsb
int
xor
mov
xor
aad
insl
ljmp
inc
lock
inc
into
mov
ret
jbe
jp
out
rcll
dec
adc
mov
cli
push
es
dec
xchg
loope
xor
jecxz
inc
mov
or
add
mov
pop
mov
lods
pushl
mov
push
shll
fdivs
and
cmp
add
loop
ja
push
jmp
mov
xlat
es
jg
or
fdivr
inc
fimuls
jae
rcrb
pop
mov
mov
incl
popa
fbld
insl
push
adc
and
and
in
xor
add
adc
in
push
cmpsl
mov
hlt
jo
outsb
inc
mov
xchg
dec
aas
cmp
icebp
gs
mov
decl
xchg
pop
mov
in
js
xchg
addr16
cmp
std
addr16
mov
mov
pushl
add
and
mov
fldcw
incb
push
pop
loope
mov
int3
in
es
jnp
mov
ljmp
xor
adc
loop
mov
add
mov
out
fildl
and
out
cmc
pushl
mov
add
arpl
jle
mov
cmc
xchg
out
jle
push
mov
inc
xor
outsb
or
shrb
jne
icebp
sbb
lar
fwait
mov
addr16
decl
pop
xchg
mov
cmp
pop
fs
cmp
inc
rcrb
push
imul
dec
and
pop
jns
sub
xor
std
ljmp
fistpll
sbb
pusha
mov
daa
dec
push
mov
sbb
dec
inc
mov
shrb
in
cli
scas
cli
ljmp
clc
lds
xchg
dec
add
cld
mov
fwait
je
dec
sbb
scas
cli
outsl
adcb
ja
and
test
xor
incl
jg
mov
xor
loope
mov
inc
fnstenv
aaa
inc
pop
pop
adc
testb
cmc
pushl
inc
shlb
les
jg
loopne
mov
fcompl
imul
push
fmul
cmpsb
and
xor
mov
int3
ja
sahf
sub
cmpb
jmp
mov
test
lods
sbb
inc
shl
add
add
add
decb
mov
out
popa
cmp
cmp
fnstsw
call
cmc
xor
pop
jns
gs
mov
xchg
pop
popf
in
xchg
cmpsb
mov
movsb
jl
imul
pop
icebp
cmpsb
dec
sbb
sub
inc
lcall
inc
imull
outsl
cli
test
sub
mov
pop
outsb
mov
mov
adc
xchg
incl
cld
jmp
dec
push
stos
cld
addl
xor
bound
enter
fucom
push
in
inc
push
pusha
out
mov
popf
lods
je
es
icebp
jo
les
cli
cmp
cmp
pop
mov
dec
mov
dec
in
stos
pop
push
and
aaa
mov
incl
nop
lret
out
push
clc
les
cld
jo
sub
xor
es
jmp
notb
out
or
decl
pop
int
out
sub
jg
mov
lea
mov
das
sbbl
jg
sti
pushl
xor
dec
cli
fiadds
mov
sub
xor
mov
jg
cmp
ret
or
lret
lcallw
xchg
dec
xor
jo
mov
jmp
or
clc
fsubs
inc
mov
add
xchg
outsl
js
ljmp
js
hlt
push
jecxz
push
je
xor
lret
jge
dec
mov
jl
loopne
mov
mov
rcrb
lods
xlat
add
outsb
jge
fdivrl
ret
in
pop
sbb
incl
mov
push
push
repz
in
push
inc
jg
add
mov
mov
dec
mov
leave
nop
dec
fdivs
lret
movsl
loop
movsl
sarl
inc
push
test
fbld
decl
mov
xor
jecxz
mov
push
dec
ds
stc
popf
stos
inc
jno
outsl
decl
jne
jge
cwtl
or
jmp
push
loopne
stos
dec
stos
int3
sub
cmp
decl
jmp
adc
test
mov
xor
aam
cmp
dec
xor
mov
adc
dec
push
sbb
jl
cmp
push
mov
pushl
or
inc
xchg
cmpsl
ror
lods
inc
adc
add
mov
jbe
decl
mov
imul
jle
movsb
dec
jecxz
nop
push
adc
inc
das
and
xor
or
decl
mov
adc
imul
pop
movsl
notl
decl
push
cmpsb
push
mov
xchg
add
or
icebp
aam
dec
shl
or
pop
and
xor
inc
xor
test
jp
inc
sub
jl
pusha
insl
mov
xchg
adc
outsb
cmp
insl
cld
jle
les
lret
sub
and
dec
ljmp
adc
insl
lods
stos
aaa
test
adc
mov
out
and
loop
popf
mov
clc
daa
mov
push
pop
es
clc
ret
jecxz
dec
nop
mov
xlat
fcoml
dec
add
mov
fldenv
jg
sub
test
sub
dec
push
iret
and
testl
jo
call
push
les
mov
xchg
push
and
xchg
or
xchg
loopne
mov
mov
popf
ljmp
enter
or
mov
add
rol
loop
or
xchg
imulb
clc
bound
sub
lret
jnp
pop
adc
push
mov
jo
andl
inc
fdivr
ljmp
ds
xchg
mov
mov
xchg
xor
pop
int3
cld
add
sbb
pushf
cmp
jle
lret
cmp
mov
dec
push
inc
shr
aad
cmp
pushl
int
add
jb
push
int
mov
sbb
outsb
mov
mov
data16
idiv
shrl
rclb
jo
ja
add
sbbl
imul
fstpt
xor
in
ficomps
push
orb
and
mov
jns
pushl
das
add
shll
push
add
add
sbbb
daa
xchg
popf
dec
sub
jnp
mov
pop
jmp
test
loopne
push
inc
cmc
test
sbb
icebp
incl
in
cmp
test
mov
mov
jns
cli
cmp
cmp
sti
je
fsts
insl
cmp
sbb
std
jg
cmp
outsl
sub
sbb
andl
mov
orb
push
or
or
push
ss
mov
cli
add
jge
loop
dec
fcompl
push
mov
or
pushf
push
push
in
loope
out
jg
jg
mov
jle
lahf
mov
lock
pushf
mov
xchg
aaa
movsl
add
dec
cmp
lcall
add
xchg
dec
mov
adc
rorb
or
movsl
decl
mov
stc
leavew
pop
jno
ror
in
mov
add
pop
push
mov
mov
and
cli
cmpl
push
mov
hlt
mov
mov
mov
dec
jb
aad
ficoms
cmp
mov
je
xchg
add
fistps
mov
xchg
dec
rolb
pop
out
lea
hlt
cmp
push
ljmp
subb
jmp
jmp
push
pop
repnz
sti
out
push
pop
mov
shl
sbb
fistps
cmp
dec
push
sub
stc
pop
jne
stc
cmc
mov
es
pusha
sbb
ljmp
loop
popf
dec
into
mov
pop
xor
sub
mov
or
lcall
cmc
data16
mov
inc
outsb
adc
enter
sarb
pop
and
clc
sbb
daa
test
call
out
test
pop
mov
test
adc
cmp
sti
inc
out
mov
decl
fildl
xchg
popa
cmp
dec
pop
dec
neg
adc
lods
es
dec
or
int3
decl
lock
stc
xchg
stos
xchg
mov
add
mov
dec
lock
addl
test
fnstcw
lods
fcompl
mov
mov
incl
repnz
call
mov
js
jge
and
es
xchg
sbb
or
cmp
jecxz
push
sbb
test
inc
ret
aad
mov
jne
cmp
or
cmp
lret
ret
call
repz
fdivl
test
es
or
and
aaa
pop
std
call
cltd
mov
adc
test
loop
lret
dec
and
arpl
mov
je
call
cld
jb
sti
lods
insb
pop
movsl
ficoms
sub
inc
mov
leave
int3
jmp
jl
stos
fistpll
xor
test
scas
pop
push
inc
stos
loope
stos
hlt
xchg
decl
mov
daa
dec
out
inc
sbb
icebp
sbb
mov
ljmp
cmc
lods
cmp
mulb
daa
pusha
les
rep
test
sub
jmp
loop
ficoms
std
mov
pop
iret
push
jne
outsl
ret
xlat
cmp
aas
or
pushl
inc
pushf
clc
stos
popf
inc
jb
imul
ss
fcomps
into
push
icebp
cld
pop
adc
or
xor
and
sti
orl
jbe
add
mov
dec
adc
cmp
inc
lea
inc
adc
push
sub
out
sub
dec
cmpsl
jo
ljmp
xor
push
imul
jmp
cld
fsubrp
jp
int3
ss
cltd
in
push
mov
dec
mov
cwtl
sarb
pop
cli
movsb
mov
sub
stos
push
loop
fcomi
and
xchg
leave
xor
das
test
ljmp
jbe
ss
das
dec
xor
icebp
test
xorb
loope
nop
jo
mov
iret
lods
shlb
mov
adc
xchg
jo
adc
orb
xchg
pop
nop
shl
incl
out
rcrb
in
xchg
outsb
mov
repz
mov
jmp
popf
mov
dec
inc
mov
mov
enter
nop
mov
mov
mov
push
lods
mov
jl
pusha
out
xor
jb
add
mov
decl
adc
fstl
push
push
adc
fisubs
mov
pop
sub
jg
dec
iret
repnz
dec
in
mov
dec
mov
cld
cmp
or
mov
jns
sub
jecxz
repz
cwtl
inc
or
std
mov
out
addr16
xchg
sub
cmp
xchg
cmp
rcll
push
popf
pushl
pop
mov
cmc
cmp
dec
push
neg
xchg
nop
or
mov
call
jecxz
mov
mov
or
or
inc
cs
vshufps
lds
lock
cmp
jg
push
push
roll
cmc
inc
lock
jmp
and
push
jno
in
out
ret
repz
iret
sahf
jns
incl
sahf
pusha
and
dec
mov
sbb
adc
gs
cmp
pushl
adc
pop
mov
in
add
movsl
jbe
pop
jmp
loop
mov
lcall
add
divb
push
and
pop
add
inc
sbb
std
pop
aam
xchg
xchg
mov
ret
call
shl
test
aad
mov
xchg
outsb
mov
inc
shlb
sbb
and
fiaddl
imulb
push
out
inc
rcrb
sub
ds
movsl
jle
cmp
test
fisubs
aaa
sub
jg
outsl
sarl
push
ljmp
lds
test
inc
dec
lods
fstpl
pusha
leave
fwait
into
imul
ret
inc
lea
repnz
call
scas
data16
shrl
cwtl
dec
das
lret
pop
fs
jno
mov
dec
sbb
mov
ret
xor
push
movsb
lcall
jmp
es
xor
mov
out
idivb
and
xchg
push
dec
xchg
loope
popa
icebp
xchg
inc
pop
lods
shl
call
jne
cmp
xchg
rcrl
jnp
pop
loop
and
inc
pop
popf
dec
imul
fcomip
mov
je
mov
add
incl
jge
sbb
mov
dec
repz
dec
lods
into
mov
iret
adc
push
mov
cmp
jg
cmp
aad
fwait
daa
xchg
inc
imul
cmp
cmp
xchg
incl
push
js
push
jmp
xchg
adc
add
mov
jge
and
cli
faddp
add
bnd
ljmp
iret
arpl
decl
fwait
lret
shlb
inc
lods
ret
mov
leave
or
mov
out
mov
mov
insb
lret
dec
fisttpl
testl
jp
sbb
inc
xorl
out
clc
outsb
fdivrs
dec
jp
xor
ficomps
in
leave
adc
fsubp
incl
int3
pop
mov
and
mov
fiaddl
jb
and
xchg
dec
ljmp
jl
adc
or
shl
or
cmpsl
mov
loopne
outsl
test
in
ljmp
adc
fcomps
or
xorb
rclb
xchg
mov
pop
nop
sub
jmp
jl
sarb
xchg
jge
add
mov
lods
adc
shll
cmp
sub
movsb
xchg
jbe
nop
daa
movsb
jle
sub
and
push
mov
mov
dec
mov
pusha
jmp
jge
dec
icebp
arpl
mov
es
hlt
jp
aas
mov
pushl
rol
jno
cltd
lds
lock
pop
xchg
and
and
mov
in
sahf
cmp
push
inc
xor
fisubs
lcall
cwtl
adcl
fdivr
cmpsl
mov
ret
fwait
xchg
addr16
incl
dec
cltd
stos
loopne
inc
jl
les
add
add
sahf
mov
out
or
addr16
lds
fistpll
adc
call
daa
aaa
fwait
mov
add
arpl
adc
mov
rclb
xor
test
rcll
test
jecxz
xchg
mov
jmp
jo
mov
movsl
call
out
sub
bound
ljmp
mov
fldcw
push
xchg
hlt
test
les
jl
out
popf
add
mov
jle
cmp
ror
outsb
xor
xor
mov
pop
lcall
sub
push
lods
filds
sbb
pop
inc
mov
lret
mov
repz
dec
xadd
pushl
movsb
leave
ja
sbb
in
clc
lods
pusha
push
adc
ljmp
cmpsb
lods
xorl
sarl
mov
mov
stos
push
stos
ljmp
iret
cmp
icebp
pmulhuw
sbb
jmp
xchg
jp
xlat
sbb
dec
lods
test
xor
sub
jmp
sbb
cwtl
add
jg
sub
mov
push
inc
push
pop
mov
jge
xor
inc
dec
fildll
call
pushf
sbb
ss
popa
push
sarl
mov
aaa
into
fsubp
lcall
scas
pop
add
jns
stos
addb
nop
mov
pop
je
dec
xor
cwtl
pushl
jno
test
jle
cmpsb
icebp
jg
lds
mov
daa
sarl
ss
into
mov
sar
pushl
das
add
adc
or
test
push
mov
loope
and
mov
rorb
call
push
mov
out
pop
loope
addr16
rorb
jae
test
mov
xor
jbe
dec
mov
xchg
sub
fdivr
call
push
mov
jge
lock
fisttps
push
mov
xchg
adc
jne
cmp
mov
lcall
test
movq
dec
out
stos
fsincos
lret
mov
cld
jmp
imul
cmp
and
sbb
jno
pop
mov
xchg
inc
pushl
ljmp
mov
cmp
gs
dec
not
jnp
lahf
pushf
incl
lods
jmp
cmp
sar
lcall
push
repz
out
sub
out
orl
insl
jmp
jbe
pop
aad
outsl
and
xor
gs
jne
insl
push
cmp
cs
lods
icebp
cmp
icebp
lcall
mov
add
mov
icebp
scas
ljmp
push
fistl
xchg
mov
jmp
mov
sub
or
dec
mov
bound
jnp
sbb
mull
int
test
fmull
jge
mov
fnstcw
pushl
std
les
ret
cmp
nop
aas
cmpsl
aad
xlat
adc
nop
call
ds
int3
adc
push
lds
movsl
mov
pop
lds
arpl
cmc
xchg
cmp
ret
pop
test
incl
xchg
les
lds
push
pop
test
std
iret
push
sub
call
inc
sub
call
jmp
cwtl
pop
mov
jp
fstpl
mov
aas
hlt
pop
or
adc
dec
push
mov
sbb
mov
cmp
lcall
jp
jmp
call
mov
mov
pop
jl
fwait
imul
loopne
jae,pn
ret
adc
into
shrl
adc
mov
xor
sbb
add
lods
in
mov
sub
jmp
mov
les
outsb
and
cmp
iret
mov
sbb
dec
sub
cmp
mov
pop
int
aas
sub
mov
es
mov
cmc
dec
lret
lods
add
or
mov
dec
add
cli
sub
imul
icebp
int
sbb
clc
test
and
push
adc
push
addr16
pop
push
fdivl
jge
mov
jg
filds
jle
insb
or
xor
mov
and
lcall
or
inc
push
shlb
aad
jmp
or
lcall
pop
lcall
pop
lea
xor
mov
mov
adc
cmp
in
adc
ficomps
add
push
nop
call
mov
or
mov
into
movsb
int
mov
mov
lahf
or
jmp
xor
arpl
jns
xlat
xchg
push
add
repnz
lds
cmpsl
popf
or
ffree
push
loope
adc
xor
in
push
bound
dec
cli
push
inc
incl
inc
jns
lods
inc
jbe
nop
cmp
mov
idivb
mulb
dec
mov
test
mov
jmp
pop
lods
arpl
mov
adc
insl
lahf
mov
arpl
and
inc
add
jo
inc
into
enter
add
fldcw
shll
lret
mov
test
sbb
jmp
inc
sti
dec
lds
or
lcall
repz
dec
push
stc
push
xchg
mov
push
cmpsl
pop
cli
and
add
call
jmp
notl
out
stos
shll
jo
dec
xchg
fimull
subb
inc
out
inc
ljmp
lods
and
cmp
pop
int3
or
push
cmc
mov
and
loopne
cli
pop
lret
movsb
or
dec
arpl
xor
dec
cmp
fists
add
test
mov
stos
push
hlt
outsl
pop
mov
xchg
dec
mov
decl
mov
xchg
test
daa
addr16
out
jmp
addr16
mov
repz
leave
mov
xchg
and
add
push
adc
xlat
shlb
movsl
stc
jge
cmpsb
add
sub
inc
jnp
xchg
mov
inc
test
mov
das
int
leave
dec
sbb
hlt
pushl
mov
xchg
push
cwtl
pop
std
or
stc
sahf
mov
outsl
int
and
jp
or
lcall
lods
fwait
int3
push
push
stc
dec
jmp
dec
fidivl
push
cmpsb
mov
popa
pop
mov
jmp
mov
loope
mov
les
pop
imul
mov
dec
test
outsb
mov
repz
pushl
inc
dec
fs
mull
mov
test
ret
adc
lods
push
jmp
jne
xor
fnstenv
stc
mov
out
lret
sahf
adc
mov
jg
cmp
xchg
pop
pusha
jb
std
aad
xor
test
dec
mov
call
insl
aas
cmpl
sti
fsubrp
in
mov
insl
mov
mov
int
sbb
dec
divb
sub
cmp
int3
mov
scas
mov
je
add
mov
cs
call
push
cmp
lds
leave
jnp
loopne
aaa
ret
or
jg
and
out
clc
mov
push
je
and
cmpsb
xchg
jecxz
xor
cltd
mov
jmp
xchg
push
mov
cltd
adc
jo
sbbb
inc
lret
pop
imul
sbb
fadds
por
into
add
mov
je
enter
shl
outsl
sub
sti
cwtl
xchg
fisubs
ja
pop
lock
pop
in
pop
mov
call
mov
push
cmp
lock
nop
popa
test
xchg
mov
lcall
and
or
cmp
sbb
out
decl
xor
iret
adc
or
xor
sbb
jge
mov
fcomip
mov
add
xorb
clc
sub
mov
push
jo
xchg
xchg
sbb
fidivrs
ret
xchg
mov
decb
inc
fisubrs
lret
adc
sahf
cwtl
dec
js
xchg
sub
inc
lret
pop
cld
call
mov
inc
les
into
cwtl
lock
decl
xchg
mov
pop
int
leave
lcall
shlb
lcall
in
enter
jp
mov
push
js
mov
sbb
sahf
cld
jl
jo
ljmp
enter
ret
roll
stos
sub
lcall
call
pop
js
shll
pop
jae
lock
xchg
icebp
sub
dec
das
out
cmp
sub
pop
push
jmp
lods
xor
ret
ret
jp
insl
lea
dec
push
aam
stc
cwtl
testb
aam
bound
call
jns
mov
leave
int3
cmp
dec
push
jl
push
jne
inc
bound
fs
xchg
mov
shrl
sar
mov
pusha
adc
push
mov
dec
mov
jg
fmull
dec
mov
lods
inc
cmp
mov
and
inc
fs
push
das
mov
mov
jg
rorb
pusha
or
lods
mov
xor
incl
shl
adcl
cmc
mov
jmp
add
ret
aam
bound
sbb
jo
int
lods
cs
in
aam
mov
add
mov
xchg
decl
cltd
in
in
stos
and
pop
inc
or
dec
mov
jp
mov
xchg
sbb
and
decl
ljmp
movsl
insl
sub
outsl
out
jo
fs
fnstcw
mov
incl
in
fidivs
mov
movsl
sti
mov
int3
lods
icebp
pop
mov
adc
xlat
push
jg
lcall
mov
mov
pop
or
xor
or
ljmp
sti
inc
cmpsb
adc
das
repnz
insl
xchg
sub
or
cs
int3
in
cmp
mov
es
jmp
jmp
fcmovnu
stc
pop
iret
sbb
dec
pushf
add
push
mov
scas
shll
andb
test
jmp
loope
mov
sub
nop
ljmp
cs
lret
lret
xlat
mov
ljmp
pop
mov
xchg
mov
mov
add
cmpl
mov
xor
in
cltd
xchg
dec
cmpsb
mulb
inc
data16
les
push
dec
mov
dec
lock
xor
xchg
idivl
dec
in
call
incl
aaa
mov
sub
cmp
orl
xor
or
xor
xlat
sarb
call
mov
daa
mov
or
mov
push
push
shrb
jp
loopne
pop
mov
fcmovnu
in
lods
mov
mov
and
mov
pop
or
mov
mov
js
into
fwait
call
loopne
adc
push
mov
fldl
or
add
mov
cmp
fsubp
nop
jl
fs
into
mov
fisubrs
sbb
mov
setns
in
sub
push
push
mov
in
stos
sub
dec
push
bound
add
lods
loopne
scas
inc
es
pop
decl
movsl
xor
fldcw
icebp
hlt
mov
aam
popf
sbb
push
repnz
incl
jne
seta
es
roll
shrb
out
clc
jle
push
int3
mov
push
cli
popf
leave
xchg
ljmp
add
pop
in
jae
cmp
mov
xchg
sub
leave
pop
mov
add
call
sub
jb
adc
cmc
fimuls
and
iret
xchg
mov
sbb
div
call
pop
arpl
sbb
jg
inc
and
popa
mov
adc
jo
mov
pushl
call
xor
out
and
orl
cltd
ja
and
cmpl
mov
mov
cmpsb
jne
dec
xchg
pop
mov
dec
iret
icebp
icebp
ds
das
stc
mov
cwtl
les
cwtl
nop
rcll
cld
dec
cmc
iret
loope
push
in
cmp
and
in
loopne
pop
stos
les
lock
test
xchg
mov
bnd
incl
out
ror
fadd
xor
loopne
sbb
addr16
mov
in
lods
pushl
nop
pop
adc
and
pop
jbe
dec
cmp
jb
fucomp
arpl
jmp
push
sbb
mov
in
push
fildl
cmpsb
outsb
cmp
cmpsl
into
cmp
jnp
jbe
pushl
pushf
adc
push
in
aas
loopne
fs
into
lret
jb
dec
jno
cwtl
add
inc
aad
xchg
test
fcomip
incl
sbb
pop
or
and
nop
mov
adc
dec
decl
mov
aaa
sub
push
push
ret
adc
inc
lea
jbe
popa
std
sub
mul
pop
into
xchg
decl
out
mov
adc
aas
sarl
mov
xchg
test
xchg
pop
xor
dec
out
mov
mov
mov
push
push
mov
xchg
xlat
push
cmp
pop
xor
stos
add
mov
mov
mov
push
dec
pop
mov
in
outsl
dec
sarl
fdivrp
decl
rolb
test
in
nop
and
dec
mov
mov
pop
dec
lods
mov
jmp
incl
sub
mov
sub
dec
cmpsb
sbb
xchg
test
and
add
mov
push
stos
jecxz
push
iret
repnz
jge
dec
inc
push
movsl
push
fcom
into
cmp
mov
mov
jmp
lds
sbb
xchg
mov
sbb
loopne
ljmp
hlt
xchg
fisubs
out
sub
jl
mov
inc
adc
call
and
xchg
ret
push
cmp
stos
in
cmpsl
aam
into
arpl
out
fsubrs
mov
push
push
out
push
and
iret
jge
add
les
jns
roll
movsl
push
adc
in
dec
sub
jmp
leave
jo
outsb
push
adc
push
and
mov
and
incl
shrl
xchg
push
pusha
mov
loop
shlb
fistpl
les
push
decl
xchg
cwtl
lahf
xor
xor
jbe
aaa
sub
adc
and
inc
out
loope
mov
movswl
xchg
and
in
cmp
xor
ss
out
xchg
arpl
pop
xchg
xchg
dec
mov
icebp
xor
push
ret
dec
adcl
mov
and
xor
sbb
xchg
xchg
cltd
fidivrl
and
popa
cld
jmp
fdivr
pushl
add
in
outsl
fwait
int
or
lcall
add
addr16
lcall
sbb
pop
movsb
lea
dec
dec
jae
test
mov
cmpsl
cmp
cmp
fcomip
call
jb
leave
cmp
pop
mov
mov
mov
sbb
div
or
sbb
cmp
popa
cmp
adc
jnp
fdivr
jns
shrb
xor
jl
inc
pop
ss
movsl
mov
data16
rcrl
add
dec
fisttpll
mov
xor
jg
xor
push
cmp
push
jecxz
inc
or
cli
cmpsl
push
push
scas
je
repz
push
repnz
mov
cwtl
push
imul
push
mov
icebp
decl
rcrb
call
pop
xor
mov
push
mov
pop
mov
jne
leave
jbe
std
call
jns
js
aaa
dec
stc
mov
sbb
jmp
loope
lcall
stc
xor
ja
and
and
int3
das
push
jecxz
mov
and
data16
push
mov
mov
jmp
or
inc
inc
inc
jb
jbe
or
rcr
lock
aad
adc
incl
and
fisttps
dec
mov
ror
mov
cmc
cmpsl
cld
adc
and
ljmp
repz
push
push
in
movsb
rcll
pop
xor
add
add
xchg
mov
push
fdivrs
pop
push
push
mov
mov
xchg
in
cmp
sub
mov
in
jmp
lds
sarb
imul
jge
xor
jmp
fisttps
daa
and
adc
dec
insb
pusha
addr16
push
jns
movb
insb
iret
mov
add
xchg
cmp
mov
sub
push
mov
stc
arpl
push
mov
push
ss
jmp
rolb
jmp
clc
inc
imul
aad
in
sub
inc
xchg
push
ds
add
sub
cld
sub
inc
call
lods
pushl
aas
sub
leave
addl
pop
imul
dec
push
loopne
daa
imul
test
das
and
and
cmc
adc
incl
gs
clc
in
push
out
cmp
pop
movsb
and
sbb
cmp
jmp
jg,pt
cmp
div
fsubl
mov
cmp
lock
mov
je
cwtl
mov
cmp
inc
xchg
iret
in
add
jmp
call
clc
jnp
mov
rcr
cmp
nop
in
push
xor
decl
ret
jmp
call
dec
call
insl
out
xchg
add
repnz
xchg
jmp
xchg
lcall
and
add
and
shll
add
sti
shrb
lods
ret
fistps
jnp
mov
shll
mov
insb
sbb
ljmp
cli
cmp
or
cmp
or
in
mov
mov
mov
in
pop
mov
rcll
comiss
jg
lds
mov
subb
lods
push
push
xor
xchg
mov
jae,pt
incl
xchg
jge
sub
scas
gs
inc
push
sbb
pop
je
fildll
xor
das
clc
jmp
inc
sub
fidivrs
mull
imul
in
test
ret
mov
push
pop
push
cmp
fbstp
enter
jo
call
movsb
or
cmp
out
je
or
lods
dec
jb
outsb
or
cli
mov
gs
jbe
sahf
sbb
outsl
ret
mov
or
add
outsl
insb
out
add
sbb
iret
push
inc
mov
iret
push
lret
cmpsb
xor
in
test
jae
pop
jg
out
jl
push
js
test
cmpsl
inc
mov
addr16
in
pushl
movsl
cmp
mov
inc
mov
seta
cmpb
lcall
addb
movsl
aaa
clc
mov
push
jnp
ret
push
loop
sub
dec
clc
cmp
ljmp
cmpsb
pop
mull
scas
mov
clc
adc
adc
jne
jae
sahf
inc
arpl
int3
jne
and
or
sahf
ret
cmp
in
ljmp
cwtl
mov
xor
sbb
inc
pop
rcrb
jnp
xchg
mov
dec
xchg
mov
xor
jbe
add
mov
pop
shrb
sbb
ret
inc
lcall
ja
lea
mov
es
test
adc
sub
or
mov
jge
decl
in
movb
test
dec
test
stos
sbb
xor
test
jg
and
lcall
test
lds
or
arpl
lahf
jl
arpl
mov
repz
idivl
lcall
add
pushl
lea
dec
aad
mov
and
add
inc
inc
das
sub
clc
pop
sub
decl
dec
inc
lret
and
mov
loope
idivb
adc
pushf
or
cmpsb
addr16
xchg
fbstp
jl
push
inc
and
xchg
popf
stos
into
dec
mov
adc
pop
dec
push
mov
jle
stc
pop
xchg
fnsave
mov
sub
int
pop
fcomip
in
push
stos
or
mov
in
add
testl
ljmp
ret
ret
mov
call
test
push
jo
enter
jl
adc
nop
fs
adcb
cmp
jg
shrl
scas
cmovge
repz
in
stos
and
psllq
test
arpl
jo
test
bound
lcall
call
mov
int
leave
pusha
adc
pop
xlat
es
or
push
pop
lcall
jge
repnz
aad
or
push
jo
outsl
mov
jle
lds
push
nop
mov
pushl
mov
dec
sti
lock
xor
cmp
mov
mov
cli
clc
sub
test
jmp
sbb
and
add
aaa
cmpsl
test
dec
or
mov
xbegin
idiv
mov
xchg
in
sti
sbb
dec
jg
ljmp
hlt
sbb
push
sbb
lds
cli
jg
push
scas
int3
inc
decl
stos
frstor
jo
mov
into
sub
adc
mov
call
sbb
add
push
flds
xor
out
xchg
aam
outsl
insb
arpl
add
sub
jg
cmc
mov
mov
pop
inc
add
cmp
cli
test
mov
add
scas
mov
pop
insl
outsl
mov
dec
ret
aaa
rorl
arpl
call
xchg
jns
jecxz
jb
or
mov
aas
sub
pushf
mov
cld
inc
xchg
lods
loopne
cld
popa
and
xor
shl
lcall
test
pusha
cltd
mov
inc
sub
call
hlt
inc
inc
fucom
in
dec
js
scas
jg
repz
dec
jmp
pop
inc
outsl
bound
fisubrl
fucomip
jo
cmp
or
stc
add
std
mov
sarb
scas
dec
jmp
xor
les
xor
xchg
mov
test
sub
call
lods
popf
ret
mov
insb
sub
iret
inc
popa
pop
lock
jns
test
ja
fcomip
adc
mov
mov
cs
cmp
incl
lret
test
and
incb
es
jnp
xchg
outsl
clc
pushl
jmp
add
dec
jg
or
pop
in
xor
sar
call
cwtl
ss
mov
mov
or
xchg
cmp
jnp
jns
mov
inc
sbb
jge
and
pop
pusha
xchg
in
scas
xorb
cmp
dec
icebp
leave
xchg
adc
cmp
hlt
decl
push
xor
inc
out
repnz
aad
inc
dec
or
jg
mov
arpl
dec
notb
filds
jb,pn
shrl
movsl
lcall
cmp
pushl
out
je
cli
mov
lock
roll
sahf
int
pop
mov
jg
sti
jecxz
call
je
nop
rcrb
adc
or
dec
dec
shl
shlb
incl
lret
lret
xchg
or
sub
unpckhps
test
jl
cmp
lods
mov
out
dec
jns
ret
loope
push
fcoml
notb
dec
mov
push
adc
mov
dec
mov
or
enter
cltd
rorb
ljmp
adcl
lahf
lret
mov
cmc
lea
mov
and
in
sahf
jbe
inc
dec
jns
pop
cmp
jle
ljmp
pusha
imul
subb
loopne
adc
cmp
fisttpll
inc
sub
aam
push
stc
and
lret
sbb
mov
jmp
sbb
jae
outsb
mov
cmp
jo
test
inc
mov
jne
dec
pop
sub
jge
fisubl
and
xor
movsl
pusha
mov
lahf
mov
xor
pop
mov
scas
jns
adc
test
cmp
pushl
or
into
and
xor
xor
mov
dec
inc
push
pop
lahf
push
sti
push
lcall
mov
out
dec
add
sbb
cmpsb
lock
jp
fldt
push
mov
lcall
cmp
push
sub
clc
and
mov
incl
movsl
and
out
fisubrl
push
lods
lods
mov
pop
mov
iret
call
rol
jl
mov
shrl
and
enter
jne
push
out
cmp
mov
jmp
mov
dec
xor
popf
push
cmpsb
mov
pop
xlat
movl
pop
test
inc
cs
ret
insl
mov
lds
shlb
loop
movsb
in
mov
or
xlat
fdivs
shl
push
ja
adc
loop
imul
cmp
ljmp
xchg
cmp
fstps
inc
dec
imul
pusha
and
cwtl
lret
xor
lcall
lcall
aad
or
int3
subb
ud0
aad
jno
dec
ret
rcl
xchg
int3
xchg
jp
icebp
push
inc
stos
mov
pop
popf
lods
pushl
push
sub
or
jb
mov
jl
mov
into
jns
movl
int
mov
cmc
and
xor
cmp
ret
out
movsb
movsl
jnp
add
decl
sub
rcrb
movsl
into
and
adc
and
sahf
mov
call
lcall
or
jp
add
cmp
clc
add
push
sti
rorl
cltd
cmp
lock
call
xchg
fnstcw
xchg
outsb
xchg
push
adc
mov
adc
es
jg
es
sbb
sbb
mov
dec
stos
fwait
xchg
stos
pop
mov
mov
jge
sub
cli
mov
decl
icebp
bound
sbb
movsb
jecxz
cmpsb
add
sub
xlat
or
fists
and
stc
pop
sarb
adc
add
test
mov
stos
mov
lcall
comiss
pop
sarb
sub
int3
je
mov
and
incl
push
jecxz
pop
adc
sbbl
stos
popl
je
in
mov
mov
icebp
sub
fnstcw
mov
ftst
ror
lcall
pop
ss
outsb
mov
cltd
mov
cmp
cmp
dec
cmp
call
loopne
add
fidivrl
cli
and
mov
jbe
das
fidivrl
jne
mov
insl
incl
insb
inc
xor
js
cli
notl
xchg
jmp
xchg
sarl
incl
cmp
in
xchg
fisttpll
std
cwtl
outsl
fildll
fwait
decl
push
push
int
jae
mov
mov
mov
jmp
lcall
and
sbb
mov
push
icebp
jne
call
xorl
pop
push
push
fcoms
ret
pusha
adc
dec
imul
mov
nop
inc
fnstcw
xlat
subl
adcl
and
lret
xchg
lea
iret
pop
dec
xor
shrl
jmp
cld
insl
bts
add
xor
dec
mov
mov
push
mov
shll
mov
lret
dec
lods
roll
cmpsb
into
movsb
mov
nop
lcall
fcomip
lcall
insl
dec
push
sbb
cmpsl
cltd
rorb
rol
lds
subl
rorb
cmp
dec
cmpsl
stc
mov
popf
mov
and
mov
mov
fcmovbe
shl
jle
decl
and
xor
test
test
jne
decl
pop
push
out
or
pop
pop
sbb
add
pushl
int3
cmp
adc
ret
or
fildll
jge
movsl
push
dec
loope
jb
and
int3
jg
xor
ja
mov
push
fisubl
or
lea
lcall
orb
aas
inc
ror
xor
or
cmp
push
jnp
adc
sar
dec
fisttpl
lcall
mov
loop
or
faddp
int
push
pop
push
in
jge
test
jmp
cltd
pop
jo
add
mov
fwait
pop
dec
xor
or
in
test
mov
fbstp
jle
dec
push
sbb
cs
fisubs
mov
ja
jmp
shll
roll
cmpsl
dec
mov
push
in
leave
lret
outsl
daa
pop
push
cld
dec
push
mov
lret
mov
fimuls
rol
mov
adc
call
aas
sti
pop
cmpsl
push
jle
test
or
js
jbe
jle
mov
pop
mov
mov
ljmp
dec
js
test
movsl
fsubrl
pushf
sub
and
pop
call
stos
inc
adc
pushf
ret
sti
or
add
dec
jl
or
jecxz
mov
dec
push
iret
sub
adc
das
or
iret
in
out
ljmp
clc
dec
fcmovnb
aas
jno
sbb
mov
jp
das
xchg
jmp
roll
inc
aad
outsl
clc
call
lds
mov
mov
ds
mov
out
xor
incl
enter
mov
sub
enter
enter
lcall
ret
je
inc
inc
lods
lret
or
jge
jl
popa
pusha
es
push
iret
roll
ljmp
ret
or
jo
jle
adc
scas
sbb
insb
and
jg
fiadds
and
imul
and
dec
sbb
cmpsl
and
in
pushf
xchg
decl
mov
push
inc
mov
adc
aas
roll
rcl
addr16
pop
sbb
jecxz
or
test
jmp
xchg
lods
push
lahf
add
repnz
lcall
mov
aad
jne
xor
loopne
adc
push
bnd
aas
lret
aaa
adc
cmp
cli
pop
adc
cs
jo
mov
mov
lods
dec
sub
pop
sbb
clc
inc
cmp
mov
cmc
inc
lods
fcomps
rolb
mulb
outsb
das
mov
lcall
xor
pop
test
push
pop
inc
pop
mov
add
cmp
mov
stc
cli
dec
pop
mov
and
adcb
sbb
incl
nop
sti
repnz
ljmp
dec
mov
std
cmpsb
adc
stc
stc
fisubrl
call
bound
jg
or
xchg
mov
std
ret
fists
pop
outsb
enter
mov
jle
jbe
test
xchg
inc
gs
cmp
iret
push
adcl
call
loop
bound
dec
mov
inc
ret
xchg
lret
fcos
pushl
or
xor
sti
dec
lcall
jge
mov
mov
sahf
imul
aam
in
inc
loopne
arpl
enter
sbb
subb
jno
outsl
scas
jbe
mov
sbb
mov
lcall
push
jmp
and
push
jmp
data16
lret
cmp
lods
js,pt
cmpsb
decl
adc
mov
jae
stc
call
dec
fstpl
dec
mov
adc
frstor
mov
cmp
loope
lret
pop
enter
out
cli
push
imul
inc
pushf
xchg
aad
or
mov
stos
call
lock
dec
mov
in
xchg
jge
les
xchg
push
ja
fs
fisubs
sbb
xor
lods
pop
sub
jnp
ja
pop
movq
rclb
mov
jmp
jg
inc
cmp
sbb
mov
fmul
xchg
mov
adc
dec
xchg
lods
sub
scas
call
adc
icebp
mov
push
jmp
stos
in
popa
out
push
arpl
xor
add
jg
inc
jns
mov
cld
xchg
jmp
aam
push
data16
pop
lock
decl
add
nop
aad
loopne
dec
ds
cwtl
or
adc
arpl
sub
movsl
mov
sti
inc
or
dec
repz
das
mov
cmpb
int3
sbb
out
jnp
std
or
rcrl
sbb
dec
and
out
repz
pushl
inc
push
mov
add
insl
cmp
ret
dec
mov
and
sub
ljmp
stc
shll
inc
lds
les
jae
enter
hlt
test
adc
call
push
sub
mov
xor
jl
int
mov
jo
decb
fidivrs
mov
or
fucom
scas
mov
pushl
or
push
icebp
jmp
xchg
jle
mov
je
popa
push
rcrl
pusha
adc
inc
test
fimuls
jl
ud0
lcall
mov
rcrb
int
ficoml
lcall
in
inc
or
dec
or
sub
push
std
sub
rcrb
lods
mov
xor
xor
addr16
jl
mov
test
insb
std
jmp
push
sub
xchg
shll
mov
xor
ficoms
ljmp
cmp
jge
insb
jno
les
in
fldl
xor
aas
dec
inc
inc
dec
imul
ljmp
clc
pop
add
outsb
pop
dec
dec
and
pop
sub
lds
dec
aaa
std
inc
loope
xor
out
sbb
push
iret
and
les
add
aaa
sbb
sahf
adc
inc
into
push
push
add
mov
cltd
adc
aad
pushf
in
cmpb
scas
aas
mov
push
lret
es
cwtl
lea
add
imul
aad
inc
cmpsl
roll
dec
mov
sbb
mov
cltd
ret
sbb
mov
inc
jae
leave
pop
pop
push
adc
cmp
enter
pop
mov
in
add
ljmp
sbb
jbe
call
insb
jmp
xor
add
in
pop
leave
xor
stos
lcall
mov
mov
mov
push
mov
jmp
xor
iret
jmp
mov
sub
mov
xor
push
orb
adc
jg
mov
dec
add
in
xchg
mov
cmpsb
jno
sbb
stos
loop
aam
cld
fbld
mov
dec
sbb
jp
mov
cld
and
mov
jae
insl
mov
inc
call
sub
ret
sbb
cmpsl
leave
aad
daa
ret
xchg
cli
jb
jne
dec
adc
stos
ljmp
xor
xlat
rclb
shrb
mov
mov
inc
data16
fiadds
inc
add
loop
ds
es
adcl
mov
popa
push
add
jmp
popa
clc
mov
rorl
loope
dec
xchg
jnp
and
out
and
mov
inc
dec
xchg
sub
and
das
daa
xchg
gs
cmp
mov
sub
cmp
cltd
scas
in
scas
lds
decl
push
push
xchg
xchg
lahf
sbb
inc
in
sub
jmp
mov
lcall
sub
cmp
sbb
pop
jae
fxch
cmpsb
das
pop
cmpsl
stc
xor
pushl
loopne
in
std
mov
ja
jl
add
jg
jp
cltd
test
incl
call
xchg
jbe
mov
int3
push
dec
stos
ljmp
incl
and
dec
test
push
into
push
sarb
mov
xor
out
imul
cmp
inc
push
jecxz
out
mov
idivb
mov
mov
out
xchg
mov
ret
pop
sar
sub
xchg
jle
cmp
insl
mov
push
outsl
shll
ja
sbb
cwtl
xchg
movsb
adc
ss
jg
icebp
movsl
jp
repz
sbb
sarl
jge
jge
emms
stc
xchg
js
out
sbb
hlt
pop
cmp
je
in
nop
das
outsb
jge
nop
push
icebp
xor
fldcw
cmp
mov
decl
mov
add
xchg
mov
out
or
dec
mov
mov
pop
test
repz
incl
cmpsb
sub
push
pop
into
or
jg
mov
dec
insb
bound
insb
insb
and
lcall
pop
sub
jle
imull
push
jg
sbb
add
jb
aad
fsts
addr16
mov
mov
mov
pop
out
dec
lcall
xchg
or
dec
cmp
mov
repnz
aaa
shlb
lock
xor
xor
cld
lods
test
repnz
adc
out
mov
or
ss
hlt
leave
and
cli
mov
incl
mov
xor
cwtl
out
stos
ret
fsubs
imulb
cwtl
es
add
decl
sbb
mov
cmp
add
dec
sarl
pop
out
sbb
aas
lahf
xor
xor
jg
incl
scas
mov
push
js
scas
test
enter
int3
jns
cld
mov
lret
enter
dec
dec
js
jbe
mov
fisubrl
int
jno
js
call
loopne
inc
mov
add
ret
push
xor
es
cmpsb
dec
adc
mov
in
mov
push
sub
xor
ss
mov
adc
push
scas
xchg
out
fstpl
scas
into
or
dec
fildll
cmp
pop
cmp
fstpt
and
out
js
xor
stos
stos
leave
mov
dec
aas
in
cld
leave
push
cs
sub
dec
fiadds
jae
sub
int3
dec
xchg
iret
clc
repz
stos
call
sub
scas
insl
jne
pop
loop
push
mov
push
adc
or
mov
sub
dec
ret
ret
in
push
add
mov
lahf
add
jg
or
mov
pushf
xchg
or
andb
jne
inc
ljmp
aad
aad
mov
sub
inc
push
dec
andl
rolb
pushf
xor
cmp
out
popl
adc
pushl
clc
xlat
push
gs
fcoms
dec
inc
lods
mov
dec
cmp
inc
push
jo
test
and
sub
mov
and
sbb
sub
or
mov
ljmp
adc
jmp
mov
loope
int3
mov
pop
ss
xchg
mov
aam
ljmp
push
and
pop
jmp
xor
jb
push
adc
mov
mov
fidivl
fcomip
mov
les
fstpl
clc
int
dec
fucomip
jmp
cmpsl
inc
fldl
push
shrb
cltd
rclb
jmp
ret
lcall
mov
daa
or
or
add
aam
fisubs
jno
cli
jo
call
inc
popf
cwtl
dec
fdiv
sbb
cmp
xchg
shlb
push
and
lcall
in
sbb
pop
xchg
inc
fildll
cwtl
or
mov
mov
jecxz
cs
call
aas
pop
or
test
xchg
mov
pop
cmp
mull
dec
outsl
pusha
or
inc
push
popa
add
imul
jmp
and
loop
mov
xchg
test
les
fwait
push
jmp
out
and
sti
clc
inc
jle
fcompl
pop
mov
sbb
jmp
fwait
hlt
and
sbb
pop
repz
dec
jo
push
popf
jmp
shrl
pop
outsb
add
push
ret
incb
rolb
iret
push
jnp
sub
mov
pushf
push
pop
jb
lcall
test
add
hlt
jmp
imul
sbb
and
mov
xorl
cmp
shlb
decl
aad
cmp
outsb
icebp
sub
mov
push
xor
imul
cld
mov
sub
add
mov
jne
les
fbld
pop
xchg
ja
mov
syscall
mov
or
xor
and
inc
push
cli
mov
iret
xor
add
outsb
jns
pop
pusha
sbbb
jg
cmp
cmp
adc
aam
int
shll
push
das
xchg
fld
leave
jg
mov
jge
or
add
lcall
decl
shl
into
lock
mov
out
int
mov
adc
pop
cmp
aad
imul
lret
arpl
jne
popa
jg
dec
test
mov
sbb
or
popa
lcall
cmpsb
mov
or
sbb
cmp
sar
ljmp
mov
loope
fnstcw
call
sbb
repnz
jle
inc
jl
in
lret
inc
int
jmp
lds
pusha
add
je
cs
sub
mov
or
arpl
stos
stos
in
mov
call
out
enter
clc
add
leave
lret
mov
mov
idiv
sub
inc
aas
xlat
pushf
scas
decl
loop
inc
das
add
add
outsl
mov
scas
loop
jne
mov
imul
adc
gs
lcall
mov
add
or
imul
sub
pushl
fmuls
out
push
pop
or
xchg
push
lods
and
add
hlt
jae
pushl
cmp
sbb
jnp
mov
movsl
and
mov
loop
ss
jmp
cmp
xchg
iret
shll
std
sub
dec
psubd
loope
xchg
int
adc
xchg
mov
mov
mov
or
mov
or
mov
push
xor
lock
fwait
jl
mov
test
add
xchg
int
int
add
sbb
xor
push
add
adc
shr
mov
pop
fiaddl
dec
icebp
dec
or
scas
nop
mov
cli
call
fistpll
scas
dec
adc
lcall
movsl
fldcw
lods
idivl
dec
pop
mov
sti
ds
and
decl
shll
pop
stos
out
fistpll
les
sub
ret
mov
mov
aad
btsl
daa
jno
xor
jg
mov
dec
mov
pop
dec
movsl
test
stc
or
mov
mov
sbb
xor
sbb
and
sub
mov
cmc
xchg
or
popa
dec
mov
adc
mov
fwait
adc
cwtl
ds
jmp
xchg
pop
into
or
mov
lea
std
loope
mov
inc
lret
into
adc
incl
mov
mov
lahf
or
dec
push
push
push
dec
das
cmp
push
add
mov
mov
jg
add
and
in
ds
xor
test
sti
jb
es
call
push
sbb
nop
or
hlt
cmp
mov
and
lcall
xchg
add
pop
dec
je
lock
out
jl
xor
leave
jbe
pusha
mov
ljmp
cmc
in
pop
call
push
jne
mov
and
pop
add
mov
aaa
cld
pushl
pusha
add
int
mov
ss
into
fcmove
js
xor
outsl
jmp
cmp
cltd
shll
adc
sub
mov
fscale
jecxz
inc
movsl
xchg
push
jno
mov
stos
aam
lods
adc
mov
xchg
popf
inc
jae
push
mov
daa
enter
dec
xor
dec
iret
insb
lahf
lods
int
push
push
push
repz
imul
pop
into
lods
daa
lods
or
nop
fsubrs
xchg
mov
les
fnsave
inc
lcall
or
sarl
dec
lcall
mov
xor
xchg
cmp
fsubrl
add
jb
pushf
lcall
sub
cld
pop
out
pushf
sahf
mov
mov
cmp
into
add
movsb
es
testl
adc
lock
aad
mov
cmp
mov
lods
mov
jne
mov
outsb
and
or
sar
lcall
loopne
cmp
imul
stc
xlat
call
pushl
adc
jae
ljmp
pop
imul
jecxz,pn
sbb
and
jb
add
shlb
lods
push
aam
stos
ljmp
cmp
jecxz
arpl
loopne
sub
mov
roll
mov
fadd
jmp
add
fsubrs
movsb
xor
jo
or
xor
daa
clc
jg
cmp
lret
lret
xor
adc
leave
sbb
repz
jg
loopne
mov
sbb
cli
add
cmp
cmpsl
bound
fwait
xchg
nop
mov
call
into
popa
xor
fldt
cmp
sbb
ret
xchg
shl
pop
mov
ds
sti
sti
push
outsb
lods
cmp
dec
test
and
dec
adcl
shrl
call
mov
ss
lcall
stos
or
jb
jnp
mov
stos
gs
jmp
notb
add
clc
dec
add
rcll
fimuls
mov
inc
pop
icebp
sub
pushl
xor
sub
out
inc
mulb
lds
orb
jecxz
mov
sbb
jae
dec
push
into
pop
arpl
test
insb
js
push
pop
fsts
inc
add
jo
xchg
scas
daa
pop
mov
stos
sub
cmp
lahf
sti
xor
cs
mov
pushf
movb
andb
test
add
lods
xor
sub
sub
xchg
xchg
ljmp
dec
call
push
lods
add
mov
sub
repz
shrl
inc
adc
cmp
pusha
xchg
fistpll
daa
cli
stos
push
jp
pop
or
ljmp
cmp
mov
cmp
adcb
cmc
test
xor
dec
outsb
xor
pusha
push
rclb
filds
pushf
popf
jge
inc
adc
loope
pushf
dec
movb
ljmp
cwtl
cli
dec
sbb
or
add
popf
cmc
popa
leave
bound
mov
btr
test
pop
imul
jg
jle
out
adc
mov
pop
sbb
shll
loop
sub
ljmp
icebp
out
popa
jo
jne
mov
mov
stos
mov
lcall
ljmp
jl
in
adc
adc
xchg
insb
es
iret
faddl
or
push
cmp
mov
mov
adc
push
loopnew
imul
ret
jnp
inc
add
inc
jp
jmp
mov
cld
mov
test
pop
subl
insl
cli
imul
sbb
or
js
je
pop
dec
repz
sbb
sub
in
inc
xchg
dec
popf
sbb
stc
pop
dec
loopw
pop
cmovg
jmp
movb
inc
outsb
pop
inc
push
mov
sub
inc
xchg
andb
push
push
call
push
mov
sbb
sub
fwait
scas
out
aam
stos
pop
xor
and
ss
push
mov
mov
mov
or
lcall
fdivr
lods
subl
repnz
xor
push
fcomip
cmp
add
pop
add
xor
in
add
lret
insl
jle
loope
cmp
mov
mov
mov
in
pop
jmp
cmpsb
cld
mov
push
jle
clc
lcall
pop
jae
enter
mov
adc
sti
sbb
clc
jmp
mov
mov
test
lea
scas
add
mov
mov
adc
js
sbb
ds
mov
push
mov
xor
jmp
sub
and
mov
sbb
mov
dec
or
lcall
mov
jnp
mov
push
rorl
and
sbb
insl
fmull
mov
pop
and
mov
or
mov
mov
add
lds
cmp
popf
sar
pushl
clc
lea
lcall
add
rcll
lcall
js
lcall
mov
fsts
loope
push
loopne
lea
clc
popa
and
mov
xchg
sub
decl
sbb
addl
call
clc
enter
mov
outsl
jo
data16
in
incl
mov
jl
outsl
xor
xorl
shl
loopne
outsl
jl
cmp
sbb
pushl
xor
pusha
test
test
dec
add
xlat
push
lds
or
pop
addb
sti
xchg
lods
mov
in
stc
sub
es
sahf
mov
push
cmc
or
jns
stc
inc
or
jnp
mov
decl
xchg
fs
and
aam
test
pop
movsl
out
lea
inc
inc
inc
xchg
lret
xchg
leave
fisubrs
js
or
cmp
call
cli
push
andb
int
stc
mov
imul
test
and
add
lcall
jmp
fistpll
lret
sbb
xchg
or
mov
xor
add
inc
dec
sub
dec
cmp
jmp
ror
decl
jne
xchg
cmc
loopne
pusha
lods
or
ret
inc
sbb
pop
dec
cmp
and
pushl
mov
mov
sub
pusha
and
int
sub
or
cmp
and
call
inc
in
ss
das
nop
icebp
and
lret
jp
xlat
mov
mov
pusha
xor
mov
inc
push
adc
fs
cmp
sar
ret
jecxz
fabs
test
mov
mov
fmull
mov
insb
mov
jmp
inc
sbb
dec
fcmovne
dec
cmc
mov
adc
xor
sbb
call
and
cld
stos
sti
lods
loope
dec
push
stc
fs
push
outsb
dec
jmp
clc
xchg
lret
mov
ret
bound
ljmp
dec
bound
push
icebp
shll
mov
or
lods
inc
jecxz,pt
ss
sbb
addb
xchg
sub
xchg
dec
pop
or
pop
mov
insb
xchg
dec
lret
repnz
idivl
or
dec
or
inc
xchg
dec
jmp
ds
adc
inc
dec
mov
push
mov
data16
xchg
inc
pop
cmc
jbe
inc
repnz
jg
loope
cmpsl
mov
roll
add
fwait
ljmp
insb
dec
ret
shlb
add
in
aam
add
bts
mov
ljmp
lcall
mov
rorl
add
or
pop
es
mov
clc
mov
push
daa
jl
push
cmp
inc
mov
pop
jmp
mov
cli
jae
das
fisubl
adc
xchg
andl
loop
add
push
outsl
enter
loop
ljmp
repz
pop
and
adc
movsl
pop
add
sbb
fs
ss
je
mov
das
ret
fsubs
and
mov
push
jbe
test
add
clc
hlt
mov
cmp
jo
jmp
mov
pusha
cmp
in
pop
out
xchg
push
mov
daa
lock
adc
shll
adc
add
pop
jb
in
add
ret
push
jmp
fbld
ljmp
in
mov
push
dec
adc
daa
add
lods
test
mov
lea
jg
xor
inc
xchg
lods
or
daa
addl
pop
push
scas
cmpl
mov
prefetch
les
sbb
ljmp
mov
dec
pop
mov
mov
mov
mov
mov
jmp
inc
jne
pushf
das
sub
sbb
mov
push
mov
fnstcw
stos
jmp
adc
dec
ljmp
lods
xchg
xchg
xchg
jg
sub
out
decl
lock
pop
xchg
push
pop
mov
ljmp
fsubr
daa
and
sarl
fnstsw
adc
loope
push
mov
and
sbb
add
inc
push
inc
inc
nop
decl
cmp
cmc
jecxz
pop
and
neg
xchg
dec
mov
push
add
call
call
jmp
in
lahf
inc
shrb
jmp
cmp
outsb
push
adc
pop
call
out
iret
decl
pop
mov
or
mov
mov
inc
out
out
add
outsl
dec
adc
push
sbb
call
mov
cmc
lahf
mov
ds
mov
mov
push
push
pop
sarl
loop
pushl
cwtl
inc
sub
ss
iret
rorb
out
testb
mov
imul
pusha
int
and
push
and
rcr
push
in
bound
or
sbb
ljmp
cmpb
bound
stc
sbb
mov
xchg
jo
in
jmp
bound
jae
mov
mov
or
jmp
int
ljmp
xchg
cld
pop
stos
pop
or
mov
stos
mov
aad
pop
jmp
sbb
or
xorb
test
fldenv
cld
sbb
jbe
dec
lock
incl
lret
dec
mov
js
lods
inc
cmp
dec
sbb
pop
scas
dec
jae
std
add
fistps
mov
loop
jmp
pop
movsb
dec
iret
xor
sub
lock
mov
or
push
cli
inc
repz
push
daa
sub
and
pop
orb
decl
inc
and
sub
insl
call
inc
inc
cmpl
xchg
jmp
addr16
outsl
ljmp
jae
push
sbb
dec
sbb
imul
std
lret
and
mov
add
incl
xor
lea
fsubrs
and
lahf
xchg
jnp
jne
xchg
call
push
int
push
loope
sbb
sbb
movsb
test
push
pop
fidivrl
xchg
fsin
mov
sub
and
cmpb
mov
inc
jl
dec
into
clc
loop
in
jp
jg
stos
movsb
or
push
mov
lahf
mov
repz
jmp
dec
push
sub
inc
mov
mov
add
lods
jmp
sar
push
mov
mov
icebp
jmp
stos
stos
cmp
cmpsb
cmp
mov
mov
push
das
ds
jmp
jnp
pop
cmp
hlt
lahf
jl
popa
push
int
pop
shr
mov
jno
xchg
out
jmp
repnz
add
in
cmp
jp
aas
and
dec
dec
lcall
mov
dec
loop
ret
movsb
repnz
div
mov
dec
in
mov
in
sub
call
mov
push
scas
insb
enter
lock
mov
leave
aas
mov
mov
ljmp
pusha
neg
in
mov
push
popa
inc
push
fildll
cwtl
inc
lret
jne
mov
sbb
mov
ljmp
das
int
lcall
call
imul
and
jo
movsl
xor
dec
push
mov
mov
icebp
cmpsl
inc
ljmp
decl
fsubrp
inc
fisubrl
pop
jb
add
jbe
sub
mov
data16
sub
mov
add
sti
test
out
pushf
in
enter
cltd
sub
or
ljmp
sar
mov
sbb
inc
rol
fstps
mov
lods
rcr
jg
incb
mov
jecxz
push
gs
lock
xchg
jo
mov
jmp
inc
push
dec
pop
out
insl
jo
dec
sub
push
aad
outsl
ficompl
dec
adc
incl
inc
jnp
inc
loopne
mov
incb
ret
enter
lret
ret
pop
sbb
rcrl
call
mov
das
xor
sar
frstor
lods
cmpsb
push
push
lea
shrl
mov
and
push
inc
pushf
sbb
mov
inc
in
mov
scas
xchg
loope
aas
xchg
cmp
shrl
sub
pop
cmc
cmp
mov
scas
mov
mov
pop
jnp
loopne
cmpsl
jl
repnz
inc
fcmovnu
scas
pushl
std
ljmp
jmp
mov
adc
int3
movsb
lcall
jb
jo
ljmp
mov
mov
xor
and
push
xchg
scas
leave
or
pop
call
gs
lcall
lret
int3
ffreep
xorb
repz
aad
inc
inc
adc
fbstp
enter
cli
push
fsubl
inc
out
imul
repnz
ja
rorb
push
call
aas
xor
inc
sub
adc
roll
pushf
dec
mov
imul
incl
push
jecxz
test
imul
lcall
cmp
adc
mov
insl
inc
xlat
jno
leave
cmp
pop
ret
add
cmovge
jne
lods
fisttpll
add
xchg
call
in
dec
xor
xlat
clc
enter
cmp
adc
dec
je
jns
ja
push
hlt
mov
mov
js
nop
movsl
aam
fwait
jle
mov
dec
mov
inc
lcall
jnp
pushf
or
iret
fs
and
jmp
iret
add
cmpsb
inc
in
sub
ret
inc
inc
aam
xchg
cwtl
and
mov
ljmp
xchg
in
daa
jo
aaa
and
cmp
mov
jge
icebp
xchg
add
call
xchg
inc
lahf
lret
mov
faddl
jle
dec
xor
popa
mov
sub
ljmp
in
aaa
add
shlb
add
repz
adc
mov
loopne
sub
jecxz
xchg
mov
cld
icebp
in
fstpt
sarb
push
cmp
jno
outsb
inc
push
push
shlb
icebp
out
mov
lcall
testb
lods
push
testl
fimuls
std
es
fnstenv
xchg
mov
mov
xchg
into
ljmp
aas
pop
sub
jnp
mov
pop
and
xlat
mov
mov
ljmp
add
cmc
aam
cmp
jmp
and
fdivrl
lock
adc
cltd
push
stc
mov
jecxz
pushl
int
mov
fdivrl
in
mov
in
mov
add
imul
clc
in
mov
jne
pop
push
sahf
or
cmp
orl
decl
and
inc
push
je
outsl
cmp
test
sbb
xor
div
xor
call
or
aaa
out
mov
add
jmp
adc
push
inc
mov
pusha
dec
lahf
sub
mov
xchg
jle
imull
or
cmp
dec
lret
mov
cmc
inc
adc
xor
or
xchg
mov
mov
stos
movsl
push
daa
mov
cs
addr16
mov
call
and
out
mov
sub
push
pop
dec
xlat
push
rorb
inc
mov
jbe
jnp
mov
shll
xchg
les
add
call
loope
mov
mov
jg
dec
xor
push
bound
nop
push
enter
jmp
pop
xchg
sbb
add
sub
pop
in
icebp
jo
dec
notb
inc
sub
inc
mov
pop
mov
adc
push
pop
in
mov
out
stc
shl
dec
push
decl
jl
insl
test
in
jns
nop
stc
xor
inc
clc
orb
test
cli
jmp
adc
outsb
aad
sub
lods
aad
cmp
or
movsl
lock
sub
mov
fs
in
addr16
mov
sbb
jecxz
cmp
or
jns
add
ljmp
clc
imull
pop
cmp
cltd
jg
lods
mov
addb
lret
add
mov
cs
xchg
adc
in
push
repnz
add
inc
cli
subl
mov
gs
cmp
cmp
push
les
lods
leave
mov
aad
mov
jo
dec
mov
dec
pop
mov
add
icebp
incl
shr
or
inc
cmp
in
add
cmpsl
and
dec
test
pushl
mov
dec
pop
scas
xor
aam
adc
test
dec
or
sti
and
adc
in
adc
pushl
dec
xchg
pop
xchg
pop
and
xchg
sub
jecxz
push
xor
mov
inc
add
inc
stos
incl
stos
push
aas
popf
test
shl
sub
dec
stos
push
ret
mov
xchg
mov
ss
cli
std
cmp
rclb
xchg
dec
dec
je
loopne
cmp
pop
das
sub
call
stc
lahf
test
cmp
repnz
or
repz
cld
cli
mov
mov
mov
js
jp
dec
xor
push
sbb
xor
mov
enter
pusha
in
mov
ret
ret
xchg
cmpb
cmp
inc
pop
iret
mov
fiaddl
shll
mov
repnz
ret
and
and
cltd
adcl
bound
mov
xor
jnp
repz
push
addr16
mov
and
dec
je
jg
call
xor
outsb
cmc
jae
icebp
dec
or
cmp
lock
or
pop
cld
mov
lcall
push
or
xchg
mov
add
sub
cmpsb
xorl
decl
in
mov
outsb
into
or
and
es
clc
cmpl
stos
je
js
jl
std
incl
xchg
leave
sub
pop
mov
mov
enter
add
js
mov
loop
pop
jbe
out
imulb
jne
push
jecxz
sub
mov
sar
decl
es
div
sbb
jecxz
jo
jne
push
leave
mov
incl
inc
mov
push
mov
sbb
in
lods
mov
jg
pop
mov
inc
and
xor
xchg
push
add
push
movsb
pop
clc
xchg
push
stc
aaa
stos
incl
enter
test
cmp
xchg
lea
hlt
aad
dec
mov
mov
out
hlt
jns
cs
iret
cld
add
dec
sti
xchg
inc
lds
dec
sub
cld
add
shll
dec
lret
push
mov
decl
mov
cs
test
xor
or
mov
cmp
and
lea
mov
fstl
jg
mov
cli
orb
and
xor
mov
mov
out
cli
aas
leave
ret
iret
imul
mov
xchg
mov
jne
xchg
or
loope
xchg
call
xchg
cmp
scas
xchg
lods
test
fwait
jbe
sbb
int3
xor
sbb
cmp
shlb
ljmp
dec
cmp
ss
sub
push
sbb
mov
cmc
fsubl
inc
lcall
adc
mov
mov
rcll
xor
push
cmp
lea
addr16
imulb
xchg
push
mov
lret
and
lahf
mov
ljmp
outsl
out
jl
call
push
scas
mov
jo
out
xor
xchg
outsl
call
xchg
das
fadd
inc
cmpsb
xchg
dec
xchg
mov
andl
fistpll
popa
or
cltd
sub
jle
leave
cmc
aaa
insl
jb
stos
pop
push
xchg
sbb
dec
dec
shl
fdivs
pop
out
mov
fldenv
xchg
ss
shll
decl
xchg
pop
in
mov
jne
or
mov
add
hlt
call
imul
pusha
mov
out
cld
jmp
out
xor
mov
or
mov
sbb
lret
mov
cmp
mov
add
jge
shll
decl
cmpsl
sbb
push
xor
add
into
mov
push
cmp
lcall
inc
bound
jmp
fbstp
popa
mov
int
inc
mov
ds
fadd
hlt
aas
inc
xchg
clc
push
pusha
sbb
pop
rcrb
jecxz
sahf
test
cltd
jmp
lods
push
inc
adc
inc
and
mov
mov
xchg
sbb
es
lcall
jge
insb
shlb
std
lcall
aam
aas
loope
lds
push
xlat
adc
cwtl
mov
cmp
jmp
add
cmpsl
shll
mov
pop
dec
stos
lds
xchg
jae
cmpsl
movsl
jp
fcomip
cmp
iret
je
loopne
pop
mov
rol
adc
push
fsubrp
sub
push
daa
xchg
add
incl
das
jb
shrb
cld
outsb
out
repz
mov
mov
sub
ljmp
or
and
mov
test
pop
fld
cld
mov
scas
cli
jg
lds
inc
jge
fstps
mov
pop
cmp
rolb
stos
inc
xor
les
cli
cmp
lret
mov
rcr
cmpsl
cmp
xor
adc
cmp
decl
sbb
pop
addr16
sbb
add
pop
jnp
stos
push
sbb
ljmp
lods
fmulp
lods
sti
and
add
sarl
xor
adc
ljmp
sahf
sbb
cmp
sbb
mov
push
call
jae
add
cmpsl
fcomip
pushl
insl
cltd
int3
push
fwait
andl
enter
adc
in
mov
adc
flds
xchg
cmp
push
daa
push
cmpsl
sub
and
imul
jne
movsl
mov
jecxz
movsl
mov
inc
or
inc
and
pop
cmp
sub
mov
lcall
dec
sbb
push
lret
sbb
cmc
xor
jl
sarl
push
add
ljmp
andps
jno
imul
fadd
pop
notb
pushl
xor
sbb
add
lahf
stc
int3
dec
orl
sbb
decl
movsl
inc
push
outsl
inc
js
cmc
movsb
frstor
dec
les
add
adc
decl
mov
stos
dec
scas
mov
inc
xchg
mov
je
mov
iret
mov
ficompl
lcall
push
mov
lods
mov
sbb
in
out
data16
int3
daa
xchg
aaa
sbb
and
call
fdivs
jb
sahf
imul
add
je
les
xchg
fiadds
test
ljmp
lret
sbb
ljmp
mov
movl
ror
call
in
xorl
xchg
fcompl
add
jb
mov
insb
inc
lret
std
mov
cmp
gs
jmp
int
mov
sub
loope
fdivl
inc
jle
jne
push
lcall
fwait
add
inc
xchg
stc
int
and
aam
in
and
mov
movsb
in
mov
es
push
mov
addr16
lods
ret
sbb
jg
aas
scas
jae
lock
out
outsb
nop
loope
and
sub
add
es
lods
pop
and
cmpsl
hlt
rorb
lods
cmp
mov
push
pop
lret
and
pop
cmc
loopne
jg
decl
out
fsubs
sbbb
sbb
xchg
inc
jbe
and
dec
test
js
stos
sbb
mov
and
and
ds
sbb
lock
incl
sbb
mov
in
jmp
lods
sbb
xor
dec
xor
aam
dec
mov
push
repz
jo
mov
mov
sub
fcomps
aam
lret
push
push
std
dec
mov
dec
dec
jns
mov
clc
cmp
cmpsb
pop
xchg
fcompp
mov
mov
sbb
aas
sbb
sbb
pop
and
sub
outsb
and
or
mov
incl
and
sub
xor
sbb
insl
xor
icebp
sti
cwtl
ss
cmpb
test
dec
frstor
mov
in
xor
add
xor
test
sar
lcall
add
icebp
push
mov
cmp
cmpsl
add
inc
daa
aam
cmpsl
lahf
inc
mov
jg
dec
adc
arpl
mov
mov
imulb
sbbl
add
repz
pop
outsl
jmp
mov
jmp
and
ja
movsb
addr16
or
lcall
call
jge
mov
mov
mov
pop
les
dec
aam
decl
jns
or
aam
xchg
xchg
mov
sub
ficoml
mov
rolb
js
in
xchg
xchg
movsl
mov
add
test
insb
jnp
push
shrl
je
insl
enter
sar
dec
movnti
mov
mov
aam
mov
adc
das
and
sbb
mov
pushl
incl
loope
mov
xchg
push
lret
mov
out
outsl
out
xor
pop
pop
orl
cld
pushf
movsb
incl
jl
xor
imul
scas
cli
add
push
mov
aad
mov
lcall
clc
stos
add
ljmp
cli
jl
pop
cmp
lretw
or
popa
mov
call
mov
call
mov
adc
jge
cmpsw
cmp
pop
push
jg
es
xchg
dec
in
add
call
cmp
jae
pop
lock
pop
mov
jno
jnp
jbe
call
incl
loope
movb
jge
call
aad
rclb
stc
mov
loope
mov
inc
mov
adc
pop
adc
cmp
test
ljmp
or
sub
push
ret
cmpsb
push
leavew
outsb
inc
js
ret
int3
insl
pop
fwait
or
dec
scas
mov
add
sbb
dec
add
call
enter
out
push
lods
call
jl
cmp
das
sti
jo
les
imul
cmp
lcall
movsl
xchg
fs
jmp
xor
insl
inc
mov
std
stos
mov
mov
iret
push
xchg
repnz
pop
into
ljmp
addb
mov
pop
add
je
shr
ret
sub
or
or
clc
cmp
pop
shll
ret
roll
pusha
push
aaa
inc
inc
mov
sbbl
incl
add
pop
mov
in
movsl
int
js
dec
and
loopne
jno
push
push
xchg
test
das
data16
ljmp
xor
mov
jo
mov
loope
mov
jmp
xchg
jle
or
and
inc
jmp
inc
sub
pop
imul
mov
xchg
push
xchg
push
inc
jle
std
mov
pushl
mov
fbstp
test
jge
mov
int3
in
add
pop
xchg
inc
int3
jp
dec
dec
add
ficompl
inc
sub
mov
xor
aad
xlat
cmp
lock
cmp
pop
shlb
mov
sbb
int3
xchg
lea
hlt
mov
movsb
sbb
jns
adc
cmp
cmp
inc
jmp
fnsave
adc
mov
xchg
and
add
jmp
xchg
sub
mov
loope
insb
jbe
icebp
gs
repnz
jno
xchg
mov
sbb
sub
pop
or
ret
cmp
cmpsl
mov
sarb
les
xchg
cmpsl
pushl
adc
gs
sub
jns
js
dec
adc
or
cmc
xchg
imul
out
insl
stc
mov
mov
outsl
data16
push
sub
movsl
lcall
fisubrs
iret
and
test
adc
jl
and
out
jg
adcl
mov
pushl
dec
les
xor
in
in
idivb
pop
call
ss
das
imul
xor
adc
shrb
iret
lock
decl
jmp
sahf
xor
mov
cmp
das
jbe
movsl
test
lcall
add
sbb
adc
jecxz
in
jmp
xchg
test
xchg
imul
sub
call
cmpsb
inc
fcompl
loopne
add
adc
xor
sub
ret
xchg
ljmp
push
xlat
dec
and
mov
arpl
jg
fldt
push
pop
mov
mov
fdivrs
mov
jb
push
rcrl
decl
lock
das
dec
fimuls
in
scas
jle
push
leave
jno
inc
in
cmp
and
xchg
push
xchg
inc
mov
ljmp
jg
jne
lret
test
ficompl
add
inc
roll
mov
add
jns
mov
dec
shlb
pop
pusha
test
inc
inc
cmp
add
cmc
call
jecxz
jne
sub
mov
js
pop
inc
cld
dec
cmp
ffreep
ret
mov
pcmpeqw
jmp
mov
sbb
pop
int3
mov
pushl
sbb
adc
xorb
jp
mov
sub
inc
arpl
hlt
cmpsb
ljmp
stos
sub
shll
pop
push
lret
xchg
pandn
jecxz
or
call
lods
push
xchg
dec
cmc
or
jle
xchg
inc
mov
mov
xchg
arpl
fisubl
jae
cmp
add
mov
rolb
pop
xor
adc
mov
loopne
imul
cmp
jge
mov
lcall
gs
movsl
mov
cmc
enter
in
jne
lahf
and
add
cltd
rcll
stc
xchg
xchg
pop
push
repnz
sarb
mov
lahf
add
insb
dec
jnp
push
aad
jle
shll
jnp
lcall
sub
idivb
or
mov
push
jge
mov
call
mov
sbb
pop
jae
std
call
push
pop
enter
mov
cwtl
shlb
rcrb
xor
les
decl
and
xor
mov
sbb
jbe
cmp
in
shll
andl
push
loope
fsubl
xchg
addb
jl
cmp
inc
lret
addr16
std
pushl
test
das
cmc
dec
jnp
int3
xchg
fadd
arpl
mov
stc
inc
mov
popf
movsb
jecxz
push
mov
pop
jg
stc
fwait
and
imul
mov
pop
adc
mov
or
lcall
mov
mov
and
xchg
sub
mov
fs
jmp
stos
adc
repnz
or
mov
mov
cs
iret
or
add
decl
nop
jp
add
imull
xor
mov
jne
mov
sub
mov
mov
nop
or
hlt
inc
mov
repz
or
or
out
lods
cmpsl
inc
add
insb
xor
adc
mov
ja
or
out
adc
mov
loope
imul
lahf
dec
add
call
xchg
es
lea
enter
mov
jp
cmpsb
or
push
mov
add
or
decl
ds
pop
fdivr
stos
and
pop
rcrl
test
ret
jnp
out
jg
xchg
lret
sbb
sub
outsb
push
jne
xchg
icebp
mov
lret
fmulp
lods
cwtl
movsl
aaa
in
jb
jge
sub
mov
jmp
test
test
push
rorl
popa
xor
or
push
and
jl
xchg
add
sub
rorl
mov
clc
call
mov
sar
adc
inc
data16
shrb
idivb
cwtl
mov
fnstsw
xchg
repz
pop
movsb
cmpsl
jae
pop
jl
in
icebp
je
sahf
mov
fldt
aam
dec
loop
xor
cli
mov
or
test
popa
mov
pop
shl
cmp
call
mov
cld
mov
iret
mov
loop
shlb
add
lock
push
jge
mov
pushl
jne
mull
mov
in
jno
mov
dec
mov
mov
in
incl
je
fimuls
cld
movsb
inc
lret
imul
pop
cmc
or
call
dec
nop
ret
add
sub
sbb
lret
stos
mov
push
xor
les
add
or
xor
ljmp
fldenv
mov
or
cmp
aam
pop
loope
call
ljmp
pop
test
popa
fimuls
shll
ja
jge
cmp
lods
imul
lcall
repz
xchg
inc
aam
testl
jnp
gs
or
aad
jmp
fnsave
shll
jg
inc
mov
mov
or
jg
loop
stc
imul
pop
push
jle
and
and
xor
and
incl
inc
pop
or
int3
iret
inc
int
and
aad
out
ljmp
inc
add
or
sar
adc
jecxz
inc
push
dec
mov
dec
sbb
mov
bound
arpl
push
mov
sub
and
clc
pop
mov
mov
fs
jne
cld
sub
push
cld
adc
iret
cs
iret
mov
or
test
mov
mov
ret
dec
out
xchg
scas
push
mov
popa
or
cmp
cmp
mov
out
sub
pop
cmpb
inc
test
mov
mov
shlb
or
sub
incl
mov
add
iret
ja
repnz
lahf
lods
mov
ror
jge
iret
imul
call
ss
or
jp
icebp
bound
add
xor
push
pushl
xor
push
iret
add
fadd
cmp
sbbb
dec
and
or
cmp
rorl
adc
je
add
and
lock
mov
in
adc
call
push
stc
arpl
ljmp
cwtl
push
mov
cli
jg
jmp
mov
sub
scas
outsl
xchg
decl
or
xchg
movsb
dec
test
cs
rcr
cmpsb
mov
dec
fnstsw
ds
les
inc
inc
jmp
push
push
pushl
xchg
xchg
jle
hlt
mov
movsb
mov
mov
das
dec
gs
push
mov
test
dec
xor
mov
cmp
jbe
testb
std
fs
mov
or
inc
xor
mov
add
pusha
dec
mov
stc
insl
dec
pop
and
cs
inc
cmp
mov
mov
js
cli
outsb
pop
inc
xor
call
cld
jmp
pop
sarb
mov
mov
xchg
mov
lcall
ljmp
enter
jl
lcall
ja
leave
mov
call
loope
dec
inc
and
xor
js
out
das
xchg
fcomip
sub
cmc
clc
push
and
or
cmpsb
mov
sbb
mov
es
push
mov
call
inc
int
pop
nop
popa
dec
jecxz
mov
loop,pn
xor
jle
push
sbb
test
mov
stos
adc
pusha
mov
pop
ret
cltd
dec
imul
and
gs
jg
sub
sub
aam
mov
adc
pushl
fadd
mov
dec
lds
scas
jecxz
sarl
loop
and
sub
sarl
sar
and
js
mov
sti
mov
and
add
push
mov
dec
mov
call
mov
jnp
jg
push
push
fidivl
notl
inc
lods
add
jmp
cmpsl
fmul
xchg
mov
cmp
mov
xor
shr
or
nop
nop
sub
pop
call
pop
jmp
add
imul
push
mov
sar
jg
sbb
mov
pop
xchg
pop
push
sar
lahf
das
cmp
cmpsb
test
ss
pushl
test
push
cli
xor
xor
jae
clc
xor
arpl
pop
mov
xor
repz
repnz
jmp
or
ror
add
hlt
test
xchg
fldl
cmp
fcomip
out
pop
test
nop
fcomps
je
lahf
cwtl
jbe
cli
test
and
decl
xor
mov
in
fidivrl
cmp
fisubl
rorl
or
decl
iret
xor
sub
lods
shlb
aad
es
nop
mov
mov
ja
cli
mov
adc
pop
js
inc
lds
xor
sbb
test
shll
dec
add
int3
out
or
inc
arpl
in
inc
sub
jae
pushl
rcll
sbb
int
movsl
inc
call
xchg
mov
pushl
cmp
inc
sahf
sub
mov
jecxz
roll
adc
out
dec
and
fcompl
pop
lods
mov
pop
and
xlat
pop
mov
xorb
out
push
gs
xor
js
jmp
and
nop
cmc
cli
repnz
fldl
push
incb
ficompl
dec
ret
mov
adc
add
pop
push
sbb
mov
or
sbb
outsl
inc
mov
pop
pop
and
and
cmpsb
pushl
shrl
sbb
mov
je
mov
fildll
jge
inc
pop
mov
pop
mov
add
pop
mov
ljmp
inc
inc
mov
jl
int
ret
mov
ret
xor
or
repz
cld
cmc
fisttps
sbb
lret
int
imul
push
popa
inc
jp
sbb
dec
lahf
lcall
xchg
in
push
cmp
mov
jecxz
jmp
lock
cmp
scas
and
dec
flds
add
call
push
into
aas
dec
dec
mov
xchg
cwtl
adc
incl
test
add
test
cmp
mov
dec
fcomi
mov
sub
adc
push
lcall
adc
cmpsl
push
pushf
mov
pop
mov
je
dec
jae
push
dec
pop
adc
xor
addr16
int
movl
xor
and
arpl
mov
icebp
mov
pushl
dec
shll
sub
int
cwtl
es
sub
or
cmc
insb
ret
mov
lds
gs
inc
lcall
or
sbb
test
xchg
aad
aad
loope
cmp
jl
add
js
popf
dec
dec
subl
adc
and
mov
test
mov
ljmp
out
outsb
pushf
pushf
mov
dec
inc
andb
mov
mov
pop
or
in
mov
mov
lcall
into
les
cmp
rcrl
std
jno
mov
call
adc
mov
sbb
pop
gs
xchg
imul
cmc
jae
adc
out
cli
jmp
or
push
jecxz
cwtl
popa
jno
push
ljmp
add
lcall
push
pushl
jnp
aam
movsb
inc
aas
mov
out
int3
gs
aaa
push
lds
xor
mov
mov
lcall
sbb
sbb
xchg
adc
mov
cmp
leave
xchg
adc
add
xlat
scas
xchg
movsb
mov
and
inc
arpl
imulb
dec
jne
popf
dec
jne
push
add
mov
or
jne
jo
inc
cmp
pop
lock
pop
cmp
mov
sub
cmc
push
cmp
cmpsl
iret
dec
add
jmp
xchg
and
lret
push
movsl
xchg
sub
push
mov
mov
or
dec
ret
jmp
lds
dec
out
sbb
lret
cmp
xor
push
hlt
dec
xlat
divb
nop
add
roll
out
aam
sbb
sbb
pop
dec
pushl
in
das
mov
mov
out
int3
and
aaa
int
xlat
aas
movsb
js
incl
jecxz
mov
and
push
add
movsb
lods
loopne
pop
cmpb
aas
push
mov
popf
ljmp
inc
sbb
mov
inc
insb
cmp
pop
xchg
neg
dec
xlat
mov
pushl
mov
test
mov
int
push
or
fimull
loopne
inc
or
rcll
inc
test
loope
mov
es
add
cwtl
sbb
and
call
sub
pop
ret
mov
mov
pop
add
mov
jne
add
mov
lcall
movsb
int
mov
mov
xchg
std
ret
cmp
fisttpl
jmp
jmp
fisubs
mov
lret
cwtl
mov
aad
cmp
jl
fwait
cli
inc
ds
call
repz
xor
cs
dec
push
fistl
hlt
adc
and
pop
lcall
inc
ret
jae
psubusb
sub
fidivrs
or
cmp
incl
es
jb
movsl
cmp
cmp
push
pusha
lret
test
jbe
rclb
adc
sahf
xchg
sbb
or
stc
in
lcall
xchg
ja
mov
popf
cmp
jae
sbb
lret
sar
das
mov
push
sbb
jbe
dec
adc
popa
sbb
cmpsl
push
insl
pop
push
mov
loope
add
out
push
sbb
jg
clc
cmp
mov
icebp
sub
movsb
lods
jae
inc
stos
cmpsl
test
inc
or
cmp
call
shrb
jb
mov
cs
rorl
jl
xor
ljmp
cli
xchg
mov
dec
or
inc
mov
les
outsl
mov
std
rcrl
ljmp
std
and
xor
ret
jae
nop
jp
movsl
orl
js
sub
or
jmp
mov
jmp
loope
add
testl
out
lahf
push
pushl
pop
out
rcrl
xchg
js
mov
cmp
add
inc
cmpsl
mov
ljmp
lcall
adc
stos
mov
jl
cmpsl
fstp
loope
sbb
mov
sbb
dec
mov
aas
or
xchg
leave
lret
sbb
sbb
neg
call
rorb
xchg
lock
lods
arpl
cltd
insl
rcll
test
mov
jmp
mov
loopne
sbb
xchg
mov
idivl
in
mov
push
jg
mov
xor
lret
dec
aad
in
and
xchg
movsb
mull
add
dec
jae
or
push
ss
push
dec
test
adc
xchg
ja
shl
xchg
mov
pop
or
call
loopne
or
dec
sar
mov
lret
sbb
sbb
ja
ljmp
pop
frstor
add
in
mov
mov
stos
lcall
aad
es
out
jge
mov
jns
gs
cld
ljmp
sbbl
sbb
cmp
inc
pop
cmpsb
ljmp
stos
mov
dec
jns
lahf
sbb
xchg
push
lock
out
cmc
add
sar
pushl
inc
movsl
aam
adc
sub
fidivl
fildll
push
mov
dec
xorl
ret
ljmp
adc
rcrl
cmp
mov
cmp
insb
or
pop
push
adc
rorb
into
imul
push
scas
in
xor
xor
sar
call
data16
cmpsl
adc
adc
mov
xor
xor
pushf
cmp
fnstcw
lcall
insl
push
jbe
lods
xchg
ret
mov
mov
add
mov
lcall
push
mov
mov
stos
repnz
loop
xorl
decl
jns
stos
push
inc
xchg
arpl
pop
cmc
aas
mov
mov
adcb
sahf
add
jno
repnz
pop
add
ljmp
loop
in
ljmp
shlb
xlat
xor
incl
loopne
ljmp
xchg
aad
pop
mov
ja
or
or
in
xchg
cmp
push
sti
sbb
mov
scas
xor
fsubrl
or
lret
popf
sbb
dec
cmp
ljmp
pop
jge
daa
and
and
jnp
lds
xchg
ss
call
cmpsl
push
dec
jmp
lret
scas
aam
xchg
pop
aaa
xchg
add
add
cmp
jbe
ds
mov
fdivrp
mov
sub
push
xchg
test
les
lret
pushf
popf
adc
lock
ljmp
dec
or
lcall
add
test
sbb
imul
mov
xor
fs
enter
xor
lcall
adc
push
pop
adc
xor
sbb
fistl
and
ret
add
fcomip
mov
jmp
or
lahf
cmpsb
subb
mov
pop
lods
call
lcall
sahf
in
xor
inc
and
xlat
cmp
test
dec
call
leave
pop
ret
ss
jecxz
jle
mov
cmp
test
scas
sub
xor
mov
push
sbb
lcall
xchg
out
daa
stc
and
rcrb
push
inc
pop
add
mov
and
stos
loop
addr16
decl
sub
jg
mov
sbb
mov
insl
lcall
cmp
lcall
andl
sbb
pop
and
ljmp
rolb
nop
push
xor
lods
xchg
sub
stos
pop
das
dec
cmp
xchg
int
bound
scas
jns
fstpl
inc
jae
ror
mov
dec
and
cli
add
ja
xor
xor
mov
aas
cmp
jns
in
jmp
out
jb
lods
jg
inc
rol
lret
fstps
cmc
jo
into
or
and
jg
jmp
push
mov
xchg
lea
cs
jo
insb
in
in
and
call
arpl
and
jns
sub
addr16
add
xchg
mov
std
lcall
je
push
ud1
mov
ret
xchg
shlb
fbstp
mov
in
fcmovne
lods
aas
gs
fidivrl
lds
mov
cltd
xor
cmp
lods
lock
es
stos
ljmp
loopne
xchg
bnd
add
decl
mov
js
popa
push
lds
mov
out
lret
sbb
mov
aam
mov
lock
rcr
lcall
and
stc
or
push
or
inc
inc
cltd
hlt
adc
and
movsl
dec
push
xor
mov
dec
les
sbb
cwtl
and
push
mov
out
jno
sub
dec
inc
mov
add
jne
dec
pop
insb
mov
pop
and
cmp
adc
scas
jmp
aam
gs
sarb
mov
sbb
cld
lcall
cmp
inc
xchg
data16
inc
inc
cmp
or
jg
add
pushl
pop
outsb
add
add
fnstsw
mov
jo
dec
addr16
aas
xor
mov
out
enter
sbb
mov
ffree
mov
or
lcall
stos
mov
mov
stos
push
xor
test
icebp
mov
bound
xchg
push
push
inc
enter
mov
add
gs
pop
int3
jl
sbb
stos
mov
repnz
mov
dec
adc
add
jmp
imul
int3
xlat
fcmove
stc
or
push
cmovo
inc
mov
dec
icebp
lock
ljmp
iret
jne
ss
into
dec
jge
in
es
ljmp
cli
jmp
repnz
and
popf
int
rorb
bound
mov
jg
cmc
int3
sub
sbbl
lahf
sti
jb
andb
out
es
cltd
ljmp
cltd
mov
mov
mov
push
call
push
dec
test
les
add
xor
mov
aas
dec
inc
in
adc
jnp
inc
xor
cwtl
pushl
jle
mov
imul
test
pop
xor
lret
adc
incb
fsubrs
aas
adc
aam
repnz
jmp
loopne
cld
jae
orb
push
push
decl
fistps
jne
and
sub
ret
xor
enter
clc
jns
mov
cmp
or
jp
xchg
lds
xlat
xchg
jno
popa
js
dec
add
mov
adc
mov
jg
xlat
bound
daa
icebp
aam
cld
ljmp
loop
addl
mov
adcb
inc
mov
call
call
les
mov
fmuls
mov
dec
lods
gs
add
lods
lods
decl
cmp
inc
xorl
call
mov
fdiv
shl
test
loopne
xchg
mov
adc
icebp
add
stos
pop
dec
addr16
cmc
push
cmpsb
mov
fmuls
cli
dec
repnz
pushl
push
mov
adc
mov
add
push
dec
es
int
hlt
adc
aaa
cld
les
dec
sub
cmpl
cs
cmp
adc
fildll
and
pop
fcomp
mov
icebp
loopne
pop
xchg
sub
call
add
iret
add
inc
push
enter
cmp
or
pop
cmp
clc
pop
dec
pop
addr16
push
or
mov
call
mov
cmp
mov
and
and
iret
dec
inc
mov
dec
inc
or
add
adc
pop
xchg
lods
xlat
inc
inc
movsl
jle
mov
sbb
jl
je
stos
das
fiaddl
xchg
jmp
fs
jg
inc
mov
loope
push
dec
mov
icebp
lea
xor
rcll
fwait
gs
mov
idivb
sub
call
orl
pop
jae
ret
adc
dec
cmc
mov
int
icebp
jmp
and
stc
and
addr16
mov
gs
fmuls
sub
shll
ljmp
mov
adc
movsb
pusha
arpl
cmc
mov
scas
add
enter
add
fcomip
jmp
enter
mov
in
cmc
jbe
jo
mov
fidivrs
mov
decl
rclb
lods
inc
pop
and
scas
sub
push
loopne
jne
insb
mov
es
call
loop
or
fisttps
xchg
push
stc
fcom
rorl
jb
pop
inc
jo
cld
jb
out
clc
ljmp
mov
push
mov
cmp
leave
or
pushl
sub
lcall
divl
mov
shlb
dec
pop
test
insb
aas
pushl
sub
or
cltd
adc
xchg
ss
fildll
incl
push
lcall
bound
ljmp
xchg
pop
into
xchg
in
data16
outsl
jg
outsl
orl
movsl
sti
daa
adc
mov
mov
hlt
ljmp
aad
sub
pop
call
push
or
nop
ret
fldt
jmp
and
sbb
stos
arpl
scas
enter
inc
popf
mov
gs
into
or
mov
les
incl
inc
push
icebp
cmc
leave
or
into
aaa
jne
xor
addl
lods
fists
xchg
lcall
arpl
ret
pop
mov
sbb
das
push
cmp
mov
pop
scas
jno
in
lcall
push
adc
mov
xchg
ds
jbe
xor
sub
int
adc
jmp
xor
sbb
pop
dec
std
sbb
inc
mov
dec
jl
hlt
lcall
fwait
jle
lret
fistl
xchg
sbb
inc
dec
push
mov
mov
aas
outsl
sbb
icebp
decl
jmp
cmp
shrl
jbe
shl
cmp
pushl
xor
ret
or
mov
mov
aas
jg
jae
cltd
aad
cwtl
fnsave
es
and
inc
ds
aam
int
dec
dec
pop
mov
mov
dec
stos
push
push
add
call
lods
push
mov
addr16
jp
xchg
mov
sub
mov
sti
and
ret
xchg
adc
fs
gs
idiv
inc
aam
call
data16
push
cmp
xchg
xor
cmc
mov
adc
cmc
xchg
cmp
xchg
jecxz
mov
sub
pop
push
nop
dec
cltd
cmpsl
mov
adc
loope
mov
mov
xchg
rcl
xchg
inc
leave
inc
xchg
and
adc
pop
adc
jg
jmp
test
in
gs
mov
xchg
sub
int3
test
or
fistps
lcall
popa
push
addr16
mov
mov
jg
dec
lods
clc
mov
imull
xchg
inc
dec
aam
inc
pop
sub
lds
inc
or
jnp
test
frstor
mull
iret
mov
fstpt
decl
add
movsl
sub
das
push
xor
aad
add
dec
jnp
inc
lds
mov
sub
mov
mov
scas
mov
sti
ljmp
lds
pushf
pop
dec
inc
adc
mov
inc
repz
or
incl
sbb
mov
bound
in
leave
xchg
mov
cmp
mov
push
out
dec
ret
stos
dec
les
out
pop
test
stos
int3
xor
jmp
mov
dec
cltd
rep
imul
ja
or
mov
or
xchg
shlb
dec
add
das
clc
decl
ret
fsub
ds
push
int
js
clc
sbb
inc
test
inc
cmp
cmp
fs
in
sarb
jp
sbb
add
fpatan
and
pushl
lcall
das
mov
pop
and
mov
push
mov
adc
and
es
xchg
into
dec
inc
jae
lds
or
movsl
test
fs
jg
inc
popf
arpl
lea
mov
xchg
sahf
in
xor
idivb
loopne
ljmp
hlt
aad
lret
cmc
and
int
jmp
sahf
dec
subl
xlat
or
call
add
int
and
pop
mov
add
and
cmp
ss
xlat
mov
dec
pop
sub
insl
mov
pop
xchg
iret
mov
xchg
data16
pop
mov
or
scas
and
out
in
jbe
cmp
into
mov
ljmp
repz
loope
cmp
inc
add
into
push
out
ljmp
popa
jle
addr16
sub
repz
dec
insb
sarl
and
std
mov
std
jmp
in
lahf
ret
je
nop
and
sub
out
xchg
mov
lcall
call
fists
push
xor
cmp
inc
add
addl
clc
lods
mov
ljmp
clc
ljmp
xchg
fcmovu
mov
es
in
and
mov
xor
xlat
decl
dec
mov
movsl
hlt
stos
loop
cmpl
sbb
jg
leave
int3
xor
iret
push
xchg
stos
jo
out
mov
mov
xor
test
jg
inc
int3
jo
pop
rcrl
rcl
mov
mov
and
test
loopne
loopne
push
call
leave
popa
sub
fistpll
aam
push
iret
ljmp
adc
popf
adc
inc
out
mov
or
cmp
je
mov
sti
push
lret
jg
mov
mov
les
fimull
adc
or
hlt
add
xor
incl
mov
lret
fchs
inc
outsl
into
mov
jmp
add
adc
mov
or
in
hlt
push
jge
notl
dec
lcall
rcll
mov
je
mov
fdivl
mov
bound
add
fadds
call
mov
add
rcrb
push
nop
int3
movsb
scas
das
or
mov
mov
adc
enter
mov
lcall
push
fisubrl
jns
push
push
mov
daa
cmp
sbb
loopne
in
cmp
mov
adc
out
lds
fbld
or
inc
movsl
cmpl
out
cli
push
rcll
ja
rolb
sub
and
mov
ret
mov
pushl
mov
nop
out
sarb
cs
and
mov
push
xchg
cmpsl
jb
clc
jnp
shlb
mov
xor
stc
cltd
scas
and
icebp
jno
jnp
ret
mov
incl
je
mov
cmp
or
adc
das
inc
jo
xchg
jo
xor
jo
jmp
shr
adc
fbld
adc
jmp
dec
mov
xchg
inc
mov
lods
lock
in
sbb
xchg
jg
lcall
cmp
aas
cmp
out
xor
imul
inc
cwtl
mov
push
shll
xchg
mov
mov
outsl
sahf
insl
push
cltd
adc
jmp
and
cmp
bound
jmp
lcall
imul
std
aam
mov
pop
sahf
lcall
cltd
adc
call
fisttps
pop
jo
add
fidivs
ret
and
jmp
jl
andb
mov
fistps
mov
int3
mov
cmc
xchg
shlb
popf
pusha
pop
cmp
idivl
mov
into
cs
lret
mov
mov
daa
xor
xchg
popa
push
es
dec
fildll
lcall
inc
xchg
into
xor
loope
ret
push
les
push
inc
jmpw
je
jmp
or
push
cwtl
stos
push
jg
cmp
inc
call
adc
clc
ljmp
push
xor
pop
xchg
in
push
loope
push
fwait
jge
sub
mov
ljmp
lods
jle
lahf
mov
ja
jp,pt
ret
jae
cwtl
inc
iret
fnsave
sar
cmc
jmp
pop
mov
sub
add
in
mov
out
dec
je
leave
cmpsb
testl
push
sub
ljmp
nop
add
loopne
mov
lret
xchg
in
ljmp
cli
incl
es
sbb
ljmp
cmp
push
gs
dec
xchg
popl
mov
sub
movl
mov
cs
cmc
outsl
or
out
mov
ljmp
pushf
xchg
fs
or
scas
xchg
lcall
loope
cltd
iret
push
lret
je
rcr
mov
mov
incl
lods
sbb
dec
aad
aas
sub
clc
popf
fs
icebp
rorb
push
jne
cmc
dec
ljmp
push
mov
sbb
incl
adc
xchg
mov
hlt
cmp
mov
inc
sbb
mov
loopne
jae
movsb
jne
fdivrs
add
pop
jecxz
or
lea
call
rolb
inc
push
imul
cmc
and
and
or
pop
jl
dec
jmp
xorl
cld
rcl
pop
dec
fs
into
mov
mov
pop
sbb
pusha
in
int
add
fildll
fcompl
ljmp
cmc
lods
fwait
jbe
hlt
pushf
xchg
and
out
decl
mov
add
repnz
mov
and
loopne
cmp
cmp
test
adc
clc
sahf
pop
decl
stos
icebp
mov
dec
dec
pop
rolb
sbb
sar
or
sbb
call
sbb
popf
mov
pop
jbe,pt
mov
sub
push
or
and
mov
call
inc
and
cmp
stc
jmp
ret
out
idiv
fisubrl
adc
adc
clc
ljmp
leave
fists
std
jo
stos
mov
imul
xlat
scas
mov
mov
jge
fxch
mov
incl
fdivrl
xchg
pop
pop
mov
ud0
cmp
icebp
and
lcall
inc
in
rcr
popa
push
mov
icebp
jmp
inc
xor
sbb
xor
fbld
mov
ss
mov
jbe
push
pop
jmp
adc
jle
out
lock
fcomip
cmp
and
pop
int3
pop
data16
add
mov
mov
sub
incl
mov
sbb
pop
xchg
push
in
cmp
sub
add
addr16
call
cli
xchg
cmp
push
mov
pop
dec
in
imul
repz
xor
and
movsb
or
scas
cli
add
ss
xor
jnp
xchg
jmp
test
loope
aas
in
jnp
mov
ljmp
lahf
add
xchg
cmp
pop
dec
xchg
filds
fcomps
push
mov
dec
call
add
push
leave
shrl
enter
xchg
and
pop
jecxz
sub
dec
sbb
sub
jmp
mov
lahf
adc
push
adcb
xor
in
mov
dec
shll
add
inc
leave
mov
ficoms
cmpsb
mov
insl
fucomi
push
sarb
or
pop
rcrb
push
mov
mov
push
push
ljmp
xorb
stos
push
push
bound
js
jns
mov
pushl
adc
xor
test
scas
mov
adc
test
cmp
dec
sub
or
dec
test
inc
mov
adc
jg
jp
out
mov
aaa
aaa
mov
dec
mov
cmp
lods
mov
or
sub
jg
jmp
dec
mov
cmp
jmp
dec
mov
scas
hlt
mov
inc
call
mov
or
js
dec
sahf
addr16
xchg
test
dec
pop
mov
mov
xor
mov
subl
in
jmp
cs
push
jmp
mov
nop
dec
mov
mov
add
fnstenv
loop
imul
pushf
sub
mov
je
jmp
sub
ret
add
arpl
shld
mov
aad
incl
xchg
insb
mov
jecxz
divb
dec
les
xor
mov
xor
jg
dec
es
sbb
cwtl
add
jmp
addb
or
ljmp
jp
pop
fidivrl
push
jecxz
sub
mov
lods
inc
or
insb
iret
mov
jmp
cmc
add
sub
mov
cli
dec
es
aad
add
ret
or
ret
jmp
ljmp
cs
ds
push
les
jmp
fpatan
fwait
xchg
pushf
sub
cld
imul
inc
hlt
pop
stos
ficompl
or
adc
je
dec
fildl
and
int
mov
pushl
divb
add
mov
dec
call
dec
popl
mov
jl
out
aad
dec
or
mov
mov
xchg
lcall
aaa
lcall
inc
das
dec
push
cmp
std
lret
stos
adc
aad
mov
stc
push
pusha
mov
in
les
decl
jnp
fstl
popa
lock
mov
sbb
stos
jne
gs
pushl
es
adcb
testb
push
xchg
shlb
sbbl
mov
lock
sub
ljmp
jo
loop
movsl
jne
movsb
and
leave
xchg
in
lret
mov
imul
int
incl
jne
jecxz
mov
adc
or
in
das
sub
pusha
lods
call
dec
sbb
mov
pusha
imul
data16
mov
out
das
or
movsl
push
cmc
mov
fisubrs
push
in
xchg
sbb
insb
push
jb
mov
pop
fidivrs
jp
pop
xchg
and
sub
test
mov
jle
or
ss
inc
add
mov
shrb
mov
dec
mov
lahf
aam
xchg
out
je
mov
ret
je
insl
ficompl
das
in
jno
jp
jo
dec
dec
jp
scas
add
pop
sub
pop
hlt
call
jmp
lods
lods
movsb
cltd
mov
add
ja
aad
sub
addl
cmp
es
loop
pusha
iret
les
sub
mov
push
ror
stos
mov
test
incl
cmp
nop
std
mov
inc
adc
es
lret
xchg
icebp
dec
add
into
adc
mov
call
movsl
mov
mov
or
xor
mov
insb
mov
test
dec
inc
xchg
movsb
jl
xchg
cli
iret
mov
add
push
lret
stc
adc
aad
inc
xor
mov
xchg
xor
mov
mov
incl
daa
test
xor
or
pop
ds
icebp
es
or
clc
jmp
mov
shl
inc
mov
fisttpll
movsb
xorb
out
lcall
sub
scas
ret
div
xchg
mov
jecxz
test
call
test
negb
dec
test
stc
test
outsb
in
pop
push
cmp
mov
pushl
push
aam
xor
add
nop
fsubl
ljmp
dec
pop
mov
fdivrl
cld
add
push
sub
mov
fists
lds
mov
popw
dec
mov
adc
call
int3
jb
sbb
je
icebp
aaa
std
decl
fld
xchg
das
xor
bound
popf
scas
das
mov
lcall
xor
xchg
cmp
sub
mov
aam
fbstp
enter
ljmp
cs
gs
or
cmc
push
mov
scas
jmp
gs
mov
add
inc
xchg
inc
lret
and
inc
daa
mov
incl
sbb
jns
daa
aaa
xchg
pop
mov
mov
aaa
mov
lahf
ja
add
inc
stos
push
sub
mov
adc
dec
lods
movsb
or
add
xchg
push
inc
jae
clc
lcall
repnz
inc
sbb
xchg
outsl
es
cmpsb
loopne
xchg
fwait
mov
ret
rcrl
rol
jg
mov
or
add
cmp
ret
pop
and
sbb
incl
out
mov
fistpll
aas
xchg
sbb
fs
add
lcall
icebp
out
or
sti
xchg
bound
add
fs
add
mov
inc
cwtl
in
or
out
gs
mov
pushl
mov
stos
cli
mov
mov
insl
insl
xor
dec
pushl
xor
aaa
fcmovbe
sub
daa
jp
repz
mov
aam
lret
out
cs
dec
sar
idivb
jno
xor
mov
and
jp
jmp
popa
insl
xchg
push
xor
icebp
ljmp
or
mov
repz
call
mov
stc
decb
xorl
cmpsb
stc
xor
lret
cmp
out
mov
sti
subl
popa
test
dec
inc
sbb
adc
jg
mov
cltd
jo
arpl
mov
fdecstp
out
dec
pushf
je
xor
jns
test
pop
out
jge
lret
iret
ret
mov
and
fdivrl
pushl
std
pushl
xchg
or
arpl
add
xor
jno
dec
test
mov
aaa
push
sub
pop
hlt
sti
cltd
sub
arpl
arpl
cmp
incl
mov
cmp
out
cmp
mov
or
inc
jg
fadds
outsb
shl
test
fadd
and
xorb
insl
out
call
jmp
pop
inc
cpuid
fisttpll
inc
jp
xor
rcrl
pop
call
es
sbb
addr16
lret
mov
xchg
push
mov
fdivs
std
mov
mov
mov
cwtl
dec
sbb
mov
jl
into
dec
int
orb
call
xchg
lods
adc
repz
mov
mov
mov
mov
jge
cmp
rol
and
jl
jecxz
xchg
xchg
sbb
daa
enter
jns
lcall
and
inc
jmp
add
or
sarl
iret
cmpsl
in
push
jecxz
jg
lret
add
push
scas
pop
add
sbb
sbb
bound
dec
loope
mov
emms
jbe
lock
aas
pop
inc
push
sub
fcoms
movsb
arpl
mov
lahf
das
sarl
into
pushl
out
add
hlt
ljmp
or
xor
mulb
cmpsb
pop
sub
js
xor
decl
cmp
or
push
and
push
ss
iret
bnd
faddl
jge
push
cld
pushl
add
cmp
cs
and
movsl
mov
shlb
push
sbb
dec
add
xor
je
mov
and
mov
outsb
dec
jg
aaa
cld
mov
xor
inc
daa
aas
push
mov
pop
and
cmc
enter
mov
ljmp
add
cmp
cltd
mov
icebp
clc
mov
adc
adc
sarl
call
es
cmp
cmp
lret
push
fcmove
add
xor
adc
out
js
sbb
mov
call
lods
mov
dec
xor
sub
jmp
ret
mov
sub
sub
rcrb
lcall
out
mov
jb
mov
jne
jns
iret
xchg
xchg
lret
sbb
inc
aas
lods
adc
and
imul
adc
inc
in
movsb
mov
or
cwtl
sub
repnz
stos
xchg
jle
or
incl
test
cmp
inc
add
jg
dec
add
xchg
fwait
sbb
stos
shl
jg
call
sub
jnp
ja
cltd
cmpsl
repz
fcomip
incl
and
cmc
jmp
lds
dec
and
out
cmp
into
std
int3
jmp
mov
test
gs
addb
andl
scas
in
fildl
inc
inc
pop
jno
mov
cmc
cmpsl
cmp
sti
sub
iret
sarb
or
push
mov
mov
test
bswap
prefetcht0
pusha
jae
scas
or
adc
xor
adc
ljmp
xchg
or
jp
mov
jo
fdivs
add
push
sbb
push
and
xlat
fadd
ret
decl
pop
push
testb
jecxz
mov
stc
and
sbb
es
call
dec
nop
popa
cmp
dec
pushf
mul
push
mov
or
push
push
fldt
call
movb
mov
js
mov
inc
jl
xchg
xchg
xor
push
testb
jg
mov
lcall
push
gs
clc
jno
mov
jbe
aam
jne
lcall
push
mov
jmp
xor
adc
ret
scas
mov
cli
and
fcomip
cmc
mov
mov
enter
dec
mov
fldl
and
mov
sbb
push
es
or
mov
inc
and
divb
ja
pop
lret
pop
fadd
fs
mov
insl
or
stos
adc
lods
mov
mov
push
mov
and
mov
rolb
maskmovq
testl
ror
lcall
cmovno
and
sub
sub
ret
cmpsb
gs
add
push
clc
jmp
int3
sbb
aam
push
repz
inc
into
sub
mov
push
test
and
add
pop
insl
dec
hlt
adc
in
push
sti
xlat
sub
inc
dec
or
lret
pop
mov
sar
std
xchg
fbld
cmpsl
pop
adcb
pushf
mov
inc
shrl
jo
out
xor
outsl
scas
jmp
ret
stos
clc
jg
add
in
xor
shlb
lahf
and
cmp
or
out
in
cmp
int
push
cmp
and
jg
test
dec
ds
dec
inc
test
lcall
int3
push
sbb
sbb
lock
mov
add
push
xor
mov
ja
in
decl
xor
adc
aam
pop
int
ret
outsb
cmp
jae
xchg
loopne
fwait
mov
dec
cmp
rcll
int3
sub
cmovno
inc
mov
idivl
inc
pushf
hlt
push
mov
jge
movsl
push
xchg
mov
push
lret
inc
pop
inc
jmp
inc
push
inc
mov
lcall
or
shrb
jo
fstp
cmpsl
jo
fstps
sti
cs
incl
mov
xor
jbe
dec
mov
dec
xor
pop
rcl
adc
cmpsb
dec
inc
push
stos
xchg
add
iret
in
mov
add
out
xor
lea
xor
push
scas
outsl
leave
jl
call
call
jne
or
add
testb
cmp
mov
pusha
pop
jmp
pop
subl
test
scas
xchg
pushl
ret
das
insb
stc
add
scas
iret
outsb
xor
jns
or
leave
es
lahf
imul
and
flds
push
aas
lock
andl
incl
xor
ljmp
pop
mov
add
rorb
add
jmp
cmc
xchg
clc
addr16
es
out
outsl
cwtl
sbb
loope
and
incl
xor
lret
xchg
mov
les
addl
rcrb
dec
mov
pop
cmpsl
xchg
es
ljmp
jmp
fildll
fsts
incl
out
and
mov
mov
adc
cmp
cmp
mov
stos
adc
mov
mov
cmp
in
mov
insb
mov
mov
mov
sbb
call
xchg
leave
add
clc
push
enter
sbb
scas
push
or
mov
and
sub
cli
call
je
sbb
call
add
orl
pop
icebp
clc
aam
ljmp
push
mov
inc
mov
mov
mov
jl
mov
push
int3
in
mov
stos
cmp
clc
sub
test
stc
incl
xchg
mov
repnz
push
mov
pop
adc
cli
incl
test
fs
inc
adc
mov
add
out
xchg
jne
mov
aaa
cli
int
xor
sahf
jl
es
xchg
or
pop
mov
push
mov
dec
ja
pop
inc
jg
mov
dec
movsb
fs
stos
jecxz
dec
push
add
lock
push
mov
nop
shld
sbb
inc
andl
push
pop
mov
ljmp
mov
mov
jae
xchg
mov
idiv
push
fwait
sbb
decl
ljmp
lea
sarl
call
mov
aas
cmp
fcoml
inc
adc
jge
mov
fcoml
gs
mov
jb
cmp
xor
ljmp
cmp
dec
mov
mov
jmp
fwait
xchg
jg
lret
or
adc
int3
mov
xor
incl
ljmp
xorb
sbb
insl
lret
stos
aas
pop
xor
addl
mov
ss
out
out
or
aaa
sub
je
mov
sbb
ds
jg
jmp
fcompl
ja
out
in
sbb
into
or
aam
int3
sbb
std
pop
mov
pop
je
sar
testb
pop
loopne
mov
add
add
arpl
mov
mov
pushl
pop
pop
inc
fiaddl
ljmp
sub
cli
cmc
loopne
call
ret
scas
inc
sbb
icebp
popa
imul
or
incl
jno,pn
das
lods
iret
frstor
stos
mov
lcall
clc
ljmp
add
or
fistps
cli
je
jmp
test
pushl
mov
sbb
orl
xor
inc
dec
ss
pop
dec
cltd
insb
je
lock
sub
inc
cli
add
add
int
jp
movsl
std
sbb
push
loop
mov
inc
push
lock
jmp
sub
sbb
sbb
push
dec
imul
xchg
dec
rol
std
push
rcl
call
inc
cmpsl
mov
sub
mov
aam
xor
cwtl
data16
les
xchg
cmp
je
call
nop
imulb
cmp
inc
dec
leave
testl
cli
loop
ret
clc
adc
jmp
xor
sbb
adc
jge
add
decl
cmp
nopl
lcall
aad
inc
repz
xchg
mov
fldcw
andb
jo
and
outsl
sub
xorl
data16
jbe
cmp
pop
jle
cmc
scas
mov
call
stos
sub
dec
insl
mov
subb
adc
pushf
in
int
ljmp
sar
inc
repnz
out
pop
movsl
test
mov
in
cmp
inc
xlat
pushl
add
adc
mov
fwait
testl
cltd
and
aaa
cld
mov
shrl
xor
cmp
mov
lock
push
sbb
lods
ljmp
jbe
arpl
xor
bnd
addr16
sbb
adc
push
stos
xor
fstl
lods
rcr
push
xchg
or
cmp
je
sub
mov
fstps
decl
cmc
pop
add
push
cmp
pop
pop
or
loope
stc
in
decl
mov
pop
stos
orl
sbb
test
shr
sub
mov
add
add
mov
addl
add
mov
jbe,pt
in
lods
das
incl
cltd
dec
int3
xor
xchg
sub
jle
call
xchg
lret
test
adc
ret
lods
add
aaa
push
cmp
lcall
es
std
and
inc
orl
lahf
jp
decl
icebp
jg
lea
int
sbb
int
pop
mov
jle
loope
cltd
mov
jmp
popa
jne
rcll
dec
mov
int3
fs
sbb
adc
cmp
nop
jle
jge
lock
decl
mov
imul
add
xchg
sub
jg
and
push
popf
jmp
inc
andl
lret
cmp
test
popf
adc
sahf
je
dec
aas
cmp
adc
inc
movsl
or
lock
push
mov
add
repz
add
push
cwtl
setp
fwait
hlt
ret
mov
jmp
je
push
inc
sbb
dec
adc
fistps
or
push
aas
inc
fcompl
cmpl
pop
xor
stos
jnp
xchg
leave
daa
in
je
or
jge
hlt
mov
dec
lods
xor
movsl
js
push
ret
dec
out
cmp
xchg
adcl
imul
dec
sarl
mov
fmul
mov
cli
aad
test
out
jbe
adc
xchg
shrl
aaa
lods
xor
addl
fidivrl
and
adc
incl
cmp
dec
addr16
push
dec
adc
inc
imul
pop
mov
cmc
cmpb
sbb
mov
repnz
jl
lock
inc
pop
call
data16
out
cmp
push
aas
rorl
cvtps2pi
push
sbbl
pop
pop
adc
call
xchg
fwait
push
and
sub
out
jl
cmp
ret
dec
mov
sub
and
jg
and
outsb
pop
add
ret
outsb
xor
iret
pusha
add
push
lds
les
ljmp
shl
xor
pushl
cmp
sub
popa
insl
mov
stos
call
push
shlb
fisttpl
jge
cmpsb
pop
ret
sub
add
call
call
aad
xchg
sbb
adc
ds
mov
jno
int3
es
add
jns
incl
cld
mov
movsl
call
and
adc
dec
mov
ljmp
mov
and
adc
inc
pop
sbb
int3
inc
mov
daa
into
ss
inc
and
add
pop
ljmp
xchg
sbb
lret
adc
mov
jo
sti
mov
jnp
es
dec
out
dec
insb
aam
fs
cmp
push
cmpl
ljmp
arpl
xchg
push
mov
rcl
gs
icebp
sub
call
sbb
push
inc
test
stos
xchg
or
fadds
and
int3
cmp
lcall
xchg
lahf
ljmp
cli
call
sub
jecxz
xor
out
lret
xchg
test
in
mov
clc
mov
push
dec
dec
add
sub
inc
cld
lods
jae
decl
pop
adc
enter
xchg
loopne
sub
ret
sbb
mov
lea
les
cltd
add
sti
mov
ss
fwait
jno
ret
fbstp
inc
cmp
scas
clc
pushl
mov
pop
cmp
or
sbb
mov
test
lret
cmp
inc
int
cmp
dec
dec
int3
popf
and
cmc
lock
call
repnz
inc
int
lret
out
lret
in
push
shll
mov
mov
pcmpeqd
fmuls
sbb
aas
sbb
subl
adc
add
xchg
push
mov
jg
incl
aaa
andb
fwait
rorb
and
cld
fs
inc
xor
add
inc
or
out
clc
jl
xchg
sbb
ja
push
push
cltd
mov
dec
into
push
out
dec
dec
jle
push
into
mov
lcall
gs
into
push
ret
cwtl
or
pop
pop
movsb
mov
ljmp
xchg
std
insl
push
ss
xchg
push
push
ljmp
loop
mov
movsb
xchg
push
mov
aad
jmp
imul
xor
popf
dec
in
sub
pushl
jmp
pop
pop
shrl
cld
add
cltd
adc
icebp
adc
mov
xor
mov
mov
mov
int
dec
iret
push
mov
pop
scas
lea
sar
ljmp
mov
push
xchg
rcrl
mov
cli
pop
pop
orl
mov
mov
push
xor
movsb
pop
xchg
rcr
into
push
fldcw
lods
xchg
out
jl
ret
cli
jge
ret
imul
jae
mov
push
mov
cs
xor
popl
ja
pop
push
nop
dec
pop
imul
inc
inc
mov
nop
or
mov
lock
aas
add
jb
pop
inc
cmpsl
xchg
je
lds
and
ds
xor
rol
fcomip
push
icebp
dec
dec
not
call
xor
arpl
lret
push
in
lods
xor
lcall
fbstp
fldt
mov
ja
test
xlat
mov
imul
test
in
dec
aad
pop
movsb
pop
dec
std
jg
test
mov
in
jg
repnz
xchg
adc
xor
scas
call
pop
inc
add
out
dec
xchg
mov
ljmp
out
xor
lds
lcall
mov
jle
push
int
gs
subl
ret
mov
push
adc
lcall
xchg
xor
cmp
bound
or
arpl
xchg
xorb
pushf
dec
imul
ljmp
aas
test
cmp
je
lret
shll
pop
cmpsb
lods
leave
call
cmp
mov
cmp
loopne
mov
dec
mov
pop
pop
and
lock
jmp
ret
dec
frstor
sahf
movsl
and
and
call
cld
fidivrs
movsl
stos
lret
xchg
dec
add
testl
push
nop
testl
sub
jbe
mov
sbb
sub
jmp
and
hlt
mov
push
loopne
jg
sbb
in
xlat
xor
xchg
mov
loop
loope
daa
stos
add
mov
cld
pushl
mov
push
mov
inc
lods
push
gs
or
sub
scas
pushl
fnstenv
clc
gs
cli
clc
add
or
out
mov
rorb
decl
mov
adc
js
mov
aaa
xor
mov
faddp
jecxz
in
jae
incl
add
sbb
xor
mov
sbb
inc
mul
insb
shl
jns
add
incl
sub
sub
add
cmp
fdivrs
in
decb
subb
in
adc
sub
fnstcw
mov
sar
mov
cli
movsl
in
cmp
data16
mov
mov
jmp
push
mov
insl
xchg
dec
mov
sar
xchg
pop
scas
fcomip
xchg
bt
adc
das
jecxz
icebp
or
jo
sarb
push
outsb
comiss
mov
mov
mov
nop
fcmovb
cmc
mov
icebp
xchg
sti
popl
loop
mov
sti
push
add
sbb
cld
push
push
mov
movb
stos
popf
aad
repnz
aaa
hlt
iret
inc
mov
cmp
cmp
mov
fadds
cs
push
sahf
jg
test
scas
int3
lock
fmuls
fcomip
add
dec
imul
inc
mov
insl
test
pop
std
incl
andl
lea
pop
push
sub
xorl
decl
sbb
xor
scas
sbb
in
adc
das
lret
scas
outsb
xor
and
lahf
idiv
push
decl
cli
jbe
shrb
sti
sub
mov
mov
push
adc
sbb
cmpsl
jns
jbe
mov
cmp
in
cmp
in
int
clc
pushl
addb
loop
xchg
add
jb
sbb
xor
inc
sub
stc
mov
scas
testb
mov
and
insl
dec
inc
jmp
mov
sarl
in
cwtl
mov
sbb
push
or
xor
push
fcoms
call
inc
inc
xor
mov
stc
test
fisttps
xchg
andl
call
and
movsb
push
xchg
adc
in
movsb
mov
cld
inc
nop
sbb
xchg
push
sub
out
sbbl
data16
xchg
imul
ljmp
jge
fprem
inc
ss
cmc
sbb
jg
cmp
inc
cld
inc
jmp
clc
mov
cmp
fsub
dec
xor
test
rol
shrb
mov
test
cli
xchg
push
scas
ror
and
mov
jae
push
jno
add
ret
clc
cli
enter
dec
xchg
add
xchg
jp
add
popf
cmpsl
lret
cmp
mov
mov
jae
mov
dec
push
and
ljmp
add
xchg
inc
cs
enter
sbbb
cmc
mov
ljmp
aas
xchg
and
movsb
fcomp
add
cmc
shrl
das
clc
pushl
clc
pushl
cmp
mov
cli
inc
add
cmp
add
and
test
sarb
rclb
xor
pop
in
push
push
push
pushf
out
add
ljmp
sub
add
in
jle
es
jb
iret
mov
cmp
fxch
gs
ret
push
or
cwtl
sub
or
dec
lret
adc
jg
xor
movsl
push
dec
mov
mulb
dec
mov
inc
dec
jbe
mov
addr16
aas
lods
popf
lods
shlb
sub
inc
test
jne
out
xor
call
in
rcr
pop
cmpsl
ljmp
mov
push
or
lock
mov
out
push
xorb
cmpsb
add
lock
stos
dec
xor
fldcw
std
incl
mov
arpl
stos
cld
sarl
mov
fisubrs
clc
incl
orl
imul
lahf
fnstsw
in
bound
or
mov
ljmp
es
in
in
inc
adc
and
adc
jge
lret
in
pushf
jg
jmp
or
incl
or
add
lods
std
xchg
movsl
jp
sarl
mov
bound
icebp
ds
imul
xor
xor
pop
outsl
movsb
into
out
jmp
popa
jmp
push
pushf
pop
cmpsl
pop
inc
in
movsl
push
adc
add
call
and
divb
add
dec
jge
ret
and
mov
rcrl
add
sub
push
decl
push
mov
mov
xchg
fnstsw
dec
jle
add
push
rcr
sub
jmp
call
and
push
xchg
pop
push
test
or
sti
jne
bound
test
icebp
gs
pop
cld
mov
fcmovb
pop
stos
insl
cmc
pop
cmp
push
iret
fsts
xor
mov
sub
shrl
jge
inc
pop
loop
incl
add
cmc
ret
cs
add
adc
stc
jmp
loop
cmp
push
pop
fdivrl
inc
xchg
sub
mov
sub
incl
lds
into
ficoms
icebp
adc
int3
in
or
add
xchg
or
pop
pop
inc
icebp
lcall
xor
xchg
lret
aam
in
mov
cmp
xor
or
add
adc
fbstp
dec
fidivl
test
std
xor
jnp
out
popf
repnz
mov
test
add
icebp
ljmp
and
pop
sub
mov
sub
xor
jmp
cltd
imul
lcall
dec
add
mov
jge
in
cmp
dec
mov
jg
jmp
jg
xor
pop
sub
push
icebp
sahf
and
cmp
mov
mov
add
incl
nop
sub
lock
insl
aas
sahf
sar
incl
pusha
test
les
add
mov
xor
mov
dec
jecxz
aad
and
push
jbe
insl
dec
pop
inc
jecxz
movsb
shl
int
or
hlt
dec
loop
mov
push
dec
lret
or
dec
enter
ds
lods
add
lret
fistpll
sub
pop
std
decl
sub
dec
cmp
adc
pop
xchg
dec
jno
adcl
les
sar
pushl
iret
mov
in
test
shll
dec
cmp
pop
inc
sbb
es
jecxz
xchg
dec
sti
inc
jge
cli
mov
stos
stc
inc
test
mov
call
mov
mov
mov
movsb
lahf
sbb
cmpsl
decl
aaa
imul
dec
clc
lcall
sti
insl
roll
test
ffree
jecxz
fnstenv
or
out
je
cmp
movsl
scas
mov
cmp
pop
xchg
fimuls
mov
xchg
lret
sti
mov
clc
aaa
sub
pop
mov
and
adc
xchg
pop
repz
xor
cmp
lods
sub
jmp
cltd
loope
test
xor
call
adc
cmc
jp
test
dec
jmp
movsl
add
decl
adc
and
cmp
es
decl
inc
dec
rorl
lcall
jge
mov
push
ss
pusha
inc
outsb
lret
mov
movsl
cwtl
pop
inc
imul
int
sub
or
bound
cmp
pushl
out
push
ret
fdivr
inc
shl
jne
lret
mov
sub
negb
cs
mov
call
into
push
push
fcmovne
push
mov
sub
lcall
mov
sub
pop
or
fwait
xlat
lret
imul
cmp
xor
out
jle
sti
int
in
fdivrp
or
ljmp
xor
or
mov
cld
mov
push
lret
xchg
lret
call
mov
xlat
adc
lds
add
xor
stos
mov
incl
cli
popf
sbb
lea
lret
nop
inc
lock
xchg
fs
push
iret
push
sahf
loope
and
bound
push
push
scas
hlt
scas
stos
rclb
loopne
sub
loope
arpl
push
sarb
add
cltd
loopne
mov
sub
jg
int
push
and
fimuls
push
ljmp
xchg
push
int
push
mov
sysret
lret
inc
mov
pop
cld
jle
mov
test
pop
int
data16
or
jo
into
or
push
in
into
or
out
pop
outsb
bnd
lret
addr16
lret
dec
or
fs
call
dec
pop
inc
dec
ljmp
repnz
fnsave
jbe
sub
dec
mov
pushl
enter
cwtl
or
cld
and
les
mov
aam
jmp
or
or
out
loopne
xchg
lret
in
fnsave
pop
shl
lret
out
mov
in
xchg
clc
jmp
out
mov
mov
lahf
jno
inc
mov
adc
bound
scas
or
lcall
scas
in
ds
call
repnz
jmp
lods
lods
and
out
aad
pushl
test
ret
mov
decl
out
add
jno
inc
cmp
xor
imul
pushl
fsubl
imul
jne
aaa
aas
sub
loop
inc
fnstsw
dec
aam
fstpt
add
clc
ljmp
loope
add
mov
add
je
xchg
jno
lret
loop
lret
loopne
inc
inc
jg
jne
and
les
sbb
ljmp
add
inc
jg
inc
mov
addr16
jecxz
mov
sar
mov
jg
mov
cltd
mov
lcall
adc
sub
mov
pushl
push
dec
dec
stc
jae
in
cli
out
xchg
shr
push
adc
mov
sbb
icebp
mov
out
clc
incl
inc
jno
lock
les
outsb
outsb
test
xorl
arpl
ljmp
incb
loop
lret
fnstcw
fcoml
outsl
mul
mov
loopne
js
cld
jl
call
pop
push
outsl
int
insl
in
ret
fld
imul
and
in
mov
jg
std
out
int
jp
pop
mov
data16
jge
xchg
mov
addb
pop
or
jg
ljmp
sbb
ret
lret
xchg
aam
xchg
int3
mov
in
in
mov
dec
out
cwtl
test
es
decl
loope
pusha
in
jns
call
xor
fstl
sti
call
and
out
sub
xchg
jg
rol
es
xchg
in
xor
cmp
push
cltd
xor
aas
jmp
aam
push
idiv
sti
cltd
mov
inc
mov
inc
and
imul
lahf
dec
icebp
jg
jmp
mov
mov
adc
mov
adc
jb
ljmp
xchg
repz
or
mov
fs
rorb
push
bound
aas
decb
inc
jecxz
icebp
les
je
pop
insl
mov
mov
in
mov
in
sar
jg
das
test
faddl
sbb
mov
mov
imul
aaa
cmpsl
stos
jmp
out
push
fneni(8087
cld
js
jb
pop
call
ljmp
mov
stos
dec
ret
dec
repz
cmp
out
shl
xor
cmpsb
cmc
into
push
jle
call
ss
dec
dec
out
mov
add
iret
into
jnp
push
out
dec
jb
pop
stc
jecxz
mov
and
loope
sar
xchg
mov
dec
xor
lret
mov
pop
hlt
xchg
lcall
xor
cs
or
and
push
push
sub
and
adc
mov
pop
pusha
xchg
push
jecxz
decl
jb
out
pusha
mov
sub
mov
and
insl
xchg
dec
mov
roll
ss
cmp
mov
leave
jo
es
sahf
testb
jl
mov
push
pushl
in
daa
sbb
jno
inc
dec
jg
cmp
lcall
dec
lcall
dec
mov
arpl
inc
loope
mov
and
fnstsw
or
pushl
pop
fucom
test
mov
sub
mov
js
mov
add
push
adc
shrb
cmp
mov
add
jmp
out
int3
test
jae
pop
fsub
inc
popf
or
test
pop
mov
jg
mov
pushf
pop
fsts
lret
das
mov
jbe
fwait
add
call
cld
dec
push
fidivrl
and
lock
dec
dec
out
movsb
fadds
incl
jne
mov
mov
ljmp
inc
cli
add
ljmp
and
je
sbb
mov
mov
mov
or
incl
inc
leave
popa
xchg
in
sbb
cmp
shrl
inc
test
xchg
mov
repnz
fsubr
mov
lds
sub
push
dec
mov
push
mov
mov
mov
add
test
mov
jmp
jle
test
jbe,pn
add
fadds
ljmp
stc
cmpsl
scas
add
inc
inc
mov
push
mov
daa
out
push
add
daa
lret
out
std
lahf
test
or
arpl
mov
aad
jecxz
xchg
sar
lcall
sub
int3
jl
xlat
or
in
addl
dec
mov
inc
adc
mov
shrb
push
lock
rcrl
jmp
mov
daa
mov
xchg
loop
movsl
insl
notb
sub
sub
mov
dec
mov
sbb
call
rclb
ret
mov
stc
push
mov
cwtl
call
out
jne
ud0
ljmp
mov
push
add
push
bound
adcb
adcl
add
or
int
cs
mov
xchg
jne
fistps
int
ljmp
fdivrl
mull
lcall
enter
shlb
xchg
ret
lock
iret
movsl
in
enter
or
mov
nop
xor
aaa
pop
jmp
and
jge
adc
xchg
sbb
jg
inc
jns
popf
shl
sbb
sbb
das
pop
push
mov
xchg
mov
shlb
dec
jg
fisttpl
mov
push
fcoml
into
clc
dec
ret
arpl
push
rcll
mov
mov
icebp
cli
mov
xor
or
push
lcall
sub
cmp
cltd
ljmp
lret
cmp
push
bound
inc
xchg
add
ss
lcall
stc
shlb
into
int3
fldt
cmpsb
jecxz
test
in
sbb
aas
mov
jnp
sbbl
in
in
or
mov
fldt
mov
dec
fbld
enter
jg
icebp
inc
cmp
add
or
cmp
mov
push
or
rcrb
lret
call
lcall
inc
and
cmovno
cmp
fwait
sar
call
ljmp
ds
nop
mov
fnstcw
cmovge
ret
sub
adc
in
push
lret
cmp
push
stc
mov
dec
mov
pusha
shll
jo
mov
in
pop
les
push
aam
fsubrs
jb
push
inc
lcall
or
xchg
mov
imul
test
sbb
push
add
mov
and
js
ds
xchg
xor
push
mov
fs
ljmp
mov
scas
xor
aam
ja
incl
decb
cltd
cmc
push
daa
sub
enter
xchg
lahf
dec
imul
addb
jmp
mov
add
inc
aas
push
adc
jb
shlb
div
fnsave
std
add
imul
push
mov
shll
das
xchg
mov
dec
in
pusha
jnp
mov
and
aam
in
aas
and
call
int3
pop
mov
lret
pop
ljmp
int
cmc
pop
mov
fcomip
and
and
push
push
mov
call
cmp
xlat
cld
data16
repz
mov
push
push
incl
or
push
jg
imul
hlt
mov
add
xchg
imul
add
sar
lcall
call
scas
add
sbb
adc
add
jae
mov
dec
aas
mov
jg
adc
cmp
pusha
fs
xor
in
and
outsb
orl
pop
xor
push
mov
scas
add
ficomps
pop
int3
mov
les
scas
ret
gs
incl
dec
cli
aas
test
incl
mov
aaa
pop
mov
adc
add
pop
aad
cmp
inc
jmp
sub
fidivrl
xor
icebp
jmp
sub
sub
jg
sbb
or
pushl
hlt
inc
dec
rorl
sub
push
arpl
lcall
push
and
stos
mov
fidivrl
ss
sub
popa
add
add
mov
and
mov
mov
aas
xor
test
scas
lods
add
clc
icebp
cmp
out
lret
inc
cwtl
sub
icebp
dec
bound
jmp
test
jmp
pusha
lahf
loope
lret
push
out
dec
sti
pusha
push
jae
shlb
cmp
das
fstl
pusha
and
ljmp
fs
outsl
cmp
pop
mov
dec
lret
jbe
pop
aas
scas
xchg
sub
xor
incl
out
push
outsb
mov
xchg
xlat
push
pop
test
mov
or
incl
fidivl
push
fcompl
and
je
jg
adc
movsb
sbb
lock
in
or
sub
mov
sbb
dec
dec
das
sti
inc
sbb
sub
clc
decl
pop
adc
jg
inc
scas
mov
aas
mov
or
icebp
inc
push
shrb
cmp
mov
in
js
ljmp
stos
xor
fwait
mov
pushf
push
je
pop
mov
jne
dec
xor
mov
jmp
test
cmp
lock
mov
sbb
xor
gs
push
dec
test
dec
pushl
jge
lcall
pop
mov
adc
mov
jbe
add
push
test
rclb
pushl
dec
mov
iret
sub
xchg
pushl
leave
je
dec
dec
ds
das
and
xchg
mov
ss
ret
test
pop
cmp
popf
outsl
sub
pop
add
mov
dec
daa
jno
or
adc
mov
stc
cmp
push
push
arpl
adc
pushf
scas
ljmp
in
adc
mov
addr16
ret
pushf
adc
jne
dec
add
jg
and
dec
push
sub
sbb
xchg
push
fldt
pop
xor
sub
mov
mov
std
ljmp
jno
movsl
ds
push
and
mov
add
mov
jb
adc
ljmp
and
pop
cmp
int3
sub
push
push
std
pusha
in
lcall
pop
dec
jno
sub
mov
je
lods
pop
into
icebp
rcl
xchg
jmp
mov
aad
xchg
aam
ret
mov
out
xchg
dec
mov
jo
ror
addr16
ljmp
add
lcall
cs
cmp
sahf
mov
add
divl
xchg
in
pop
lds
test
sub
sub
mov
jg
jmp
cmp
mov
xchg
push
scas
pop
cmp
loop
jo
test
ret
fistl
lock
call
mov
lret
sub
rdmsr
cmp
mov
ljmp
lret
test
stc
mov
fcos
stos
cmpsb
in
sbb
pop
add
int3
out
or
int
and
mov
fld
into
adc
outsl
sar
dec
sub
in
in
dec
sub
add
or
mov
push
inc
scas
jnp
mov
and
filds
push
and
aas
jl
fwait
cmp
inc
subl
decl
lahf
dec
pop
jecxz
push
jb
push
mov
sarb
adc
push
add
fucomp
add
pushl
imul
push
test
inc
and
lods
aam
sbb
xchg
or
loope
ficoms
lcall
cltd
and
mov
and
data16
or
and
int
out
cmp
jge
push
and
xchg
jns
cmpsb
push
inc
orl
push
test
adc
fsubs
ljmp
test
call
mov
iret
mov
into
pop
jg
int
mov
aas
scas
adc
call
fldenv
cmpsb
or
and
mov
cmp
stc
in
aad
add
movsb
sar
pusha
pop
pop
mov
ljmp
jmp
shl
mov
into
fistpll
lds
push
cmp
jae
pop
dec
pop
pop
mov
mov
lods
fcmovnb
daa
pop
sub
sarb
std
idiv
jg
jno
or
mov
cltd
call
in
icebp
test
cmp
inc
cmp
out
sub
mov
ss
mov
jl
jmp
lds
inc
sbb
imul
cmpsb
arpl
adc
pop
cmp
decl
mov
mov
std
or
icebp
jl
pop
inc
aad
ret
add
call
add
and
daa
stos
mov
std
or
jae
xchg
fidivrs
push
dec
pop
and
inc
out
and
lods
ja
or
jle
jbe
lret
insl
or
adc
add
xlat
fmuls
pop
das
cli
dec
lcall
jns
fdivl
cli
lret
xor
and
cs
iret
inc
adc
ret
sub
push
repz
sbb
xorb
mov
in
pop
and
cmpl
nop
incl
pop
cmpsl
and
sub
push
roll
pop
jge
xor
and
xor
enter
das
xchg
mov
decl
add
dec
dec
sub
dec
jno
daa
aas
dec
mov
xor
pop
out
ljmp
push
popl
outsb
je
jae
lcall
and
es
imul
ljmp
jmp
inc
mov
rcl
js
int
cmp
push
xor
enter
popa
std
lcall
sub
xchg
and
sbb
xor
fists
adc
xchg
scas
push
mov
int
push
icebp
push
lret
decl
decl
xor
es
jae
out
and
or
int3
xor
jno
loope
les
aas
mov
add
lods
aam
sbb
mov
test
cmp
repz
mov
push
sti
lret
jb
insb
leave
prefetch
je
mov
and
in
jnp
sub
loop
jle
loopne
loope
pop
xor
push
pop
imul
test
incl
clc
xor
mov
filds
mov
mov
dec
out
sbb
ljmp
dec
xor
mov
mov
add
push
ret
add
outsl
je
lods
or
jmp
in
je
jo
add
inc
jecxz
mov
sub
jmp
pop
loop
dec
aaa
mov
and
insb
fcomp
int
mov
mov
mov
sub
jg
pop
and
push
test
mov
out
pop
icebp
negb
ja
cli
jge
xor
or
xor
add
cs
fsubr
jge
mov
ljmp
sub
bound
inc
jae
int
leave
call
mov
inc
sub
xchg
dec
mov
aad
push
mov
popa
mov
push
mov
sbb
stos
js
jbe
clc
sbb
jmp
cld
mov
jo
pop
loope
mov
imul
gs
nop
mov
das
cli
push
sbb
movsb
mov
int3
insb
inc
adc
mov
loope
push
das
clc
call
sub
negl
dec
mov
sbb
inc
shrl
mov
dec
mov
fwait
add
jle
ja
mov
sti
mov
mov
outsb
or
insb
jmp
dec
lret
sub
or
push
fsts
fnsave
push
xor
jne
scas
call
hlt
pop
cmc
mov
mov
mov
pushl
rorl
arpl
jno
fnstenv
bound
pop
enter
call
cld
mov
sbbb
test
xchg
std
xchg
adc
popa
adc
push
fldenv
out
ljmp
fiaddl
xor
add
lock
gs
jne
loop
clc
ret
lret
rcll
sbb
ss
in
ljmp
push
or
jg
push
or
popf
sbb
add
mov
fimuls
arpl
repnz
mov
hlt
and
cmp
mov
pop
ret
addr16
mov
cmp
arpl
lahf
mov
pushl
mov
push
mov
mov
inc
into
dec
sbb
cmp
aas
mov
dec
scas
iret
xor
test
jbe
std
fmuls
scas
stos
xchg
test
inc
mov
jo
xor
mov
movsl
jge
cmp
stos
mov
adc
outsl
lahf
ljmp
insb
cmpsl
push
fisttps
jg
mov
inc
test
and
or
int3
mov
mov
xchg
and
lahf
push
mov
lds
dec
lcall
cmp
ljmp
shlb
out
jbe
or
aaa
std
pop
sahf
jbe
push
pop
int3
test
add
inc
ret
mov
int
mov
jb
hlt
jb
xchg
imul
movl
ljmp
out
fs
insl
xor
sub
stos
mov
testl
push
pop
punpckldq
sub
jmp
hlt
ljmp
mov
xchg
std
cmp
gs
inc
mov
pop
test
loope
incl
ret
xor
mov
cmp
addl
xor
and
cmp
mov
mov
push
or
and
jno
mov
aam
mov
sbb
adc
inc
and
pushl
adc
push
pop
std
cmc
mov
stos
movsl
pop
add
adc
inc
pop
aas
adcb
sbb
push
clc
jmp
fdivrp
ret
lea
add
dec
add
mov
mov
daa
sub
mov
mov
ljmp
mov
or
push
popf
iret
jecxz
fldt
out
and
imul
push
sbb
mov
fmuls
dec
nop
cmp
sub
push
neg
cmp
sbb
xchg
xor
jmp
movsb
sbb
lea
mov
push
js
nop
pop
mov
les
pop
mov
and
sti
daa
insl
sarl
imul
sbb
inc
jb
xchg
mov
mov
cmp
stos
adc
jns
dec
lea
and
int
int
aaa
pop
and
mov
adc
jo
lods
std
jp
fsubl
lcall
jno
loopew
mov
pop
mov
mov
adc
or
add
ja
incl
and
daa
adc
fdivs
jb
mov
add
cmpb
push
cmp
lret
jmp
loop
push
fs
incb
ret
out
mov
add
jg
ljmp
stc
dec
adc
movsb
xor
rcrb
adc
cmp
add
jg
icebp
lods
pop
cli
fidivs
mov
mov
jge
add
ljmp
call
pop
pop
xchg
dec
mov
in
add
add
push
lods
xlat
gs
test
gs
jnp
jbe
mov
pop
call
add
sub
mov
mov
pushl
pusha
fwait
iret
adc
add
mov
cs
ror
xchg
aas
test
fdivp
in
adc
ss
lcall
dec
clc
outsl
out
pcmpeqb
xchg
fld
scas
push
lcall
mov
leave
add
fcomps
shr
mov
scas
lods
daa
add
adc
jmp
mov
je
sub
add
mov
jae
inc
pop
cmpsl
in
imul
outsl
cli
into
pop
jmp
adcb
dec
pop
add
sbb
add
cmp
mov
jmp
add
test
dec
stos
dec
pop
add
in
xchg
mov
mov
js
cmpsl
mov
ljmp
mov
xor
icebp
gs
pushl
fdiv
xchg
pop
mov
push
fisubrs
mov
fwait
movsb
adc
xchg
insl
sub
sti
sub
xchg
mov
movsb
loopne
out
jno
mov
xchg
cmp
dec
ret
bound
clc
push
xor
or
inc
sub
das
ja
fwait
sbb
cmpsb
xchg
adc
fnstsw
clc
ljmp
nop
or
push
lods
rorb
loope
mov
clc
jl,pn
sbb
stos
or
decl
mov
fistpll
xchg
cmc
xor
jg
xchg
outsb
cmp
lahf
fadds
repnz
cmpsl
lret
inc
mov
pop
cld
call
div
xor
ja
lods
jb
xor
and
dec
movsl
decl
fistpl
fdivrs
xchg
mov
gs
inc
adc
xchg
push
jmp
push
or
sbb
sbb
cmp
test
add
mov
das
decl
ret
hlt
lods
sahf
mov
pop
daa
sbb
jmp
jmp
loopne
insl
lcall
movsb
incb
jg
jnp
leave
test
sti
cmp
add
insb
sbb
cwtl
pop
add
testb
ljmp
stos
adc
xchg
mov
mov
mov
mov
inc
adc
xchg
movsl
rcll
sub
mov
or
mov
adc
pushf
in
adc
aas
or
push
dec
cld
ljmp
pop
lret
mov
mov
mov
call
cmp
jmp
nop
iret
pushf
nop
sahf
pop
dec
das
addr16
mov
bnd
mov
icebp
incl
add
mov
adc
jle
leave
test
bound
mov
sbb
mov
sbb
aam
mov
test
aas
dec
adc
int
jge
data16
pushl
pop
bound
repz
sti
inc
idivl
inc
test
lods
scas
cmp
enter
mov
out
mov
aaa
shrb
in
jnp
lea
jg
in
cld
add
add
clc
xor
and
insl
mov
sbb
push
add
call
cmpsb
outsl
adc
idivb
sarb
aam
mov
jmp
ret
aad
jb
fidivl
push
aam
lods
pop
sub
test
dec
inc
jecxz
ljmp
mov
loopne
jge
xor
movsb
sbb
fnstsw
mov
or
ret
dec
sub
test
in
pushl
xor
leave
mov
iret
sbb
mov
xor
jecxz
subl
sar
mov
ds
mov
push
sub
ud0
push
aad
mov
xor
inc
cmc
jmp
xor
cmp
cmp
int3
xchg
ficompl
jo
mov
incl
add
sbb
xchg
add
cld
stos
jp
es
push
inc
push
lds
pop
pop
nop
cld
roll
in
fsubrl
loopne
test
daa
jne
mov
dec
jecxz
lcall
filds
stc
sbb
jne
fidivrl
je
pop
or
daa
scas
stos
mov
adc
pushl
or
push
jmp
xor
push
inc
adc
pop
xor
mov
or
jmp
lahf
mov
sub
shlb
loope
scas
stos
int
jg
cmp
cltd
out
shrb
cld
mov
pusha
stos
mov
mov
test
dec
lahf
cmp
in
iret
in
push
adc
mov
pushl
imul
and
mov
inc
xchg
pushf
and
push
js
xor
cltd
mov
adc
lcall
fs
das
ljmp
xchg
xchg
test
inc
adc
shlb
idiv
ljmp
scas
xlat
inc
jbe
inc
into
push
jne
stc
shll
clc
cmp
push
ljmp
movsl
js
mov
fstpt
scas
mov
mov
and
fmuls
in
mov
xor
mov
lds
incl
xchg
stos
inc
in
lods
and
xor
mov
adc
pusha
pusha
dec
ds
cmp
jp
mov
aas
test
mov
sti
popa
mov
bound
pushl
adc
adc
aas
cmpsl
mov
stc
sub
iret
lods
sub
insl
xchg
xchg
lods
mov
ljmp
ss
mov
cmp
sub
shl
imul
and
pushl
xor
push
and
jmp
cmpsl
ret
into
cmp
jno
loope
ljmp
fldcw
jo
xlat
add
jg
or
imul
fbld
and
imul
or
lret
mov
pop
fdiv
sbb
cmp
movl
aam
cmp
leave
adc
test
cmp
incl
movb
and
popf
pop
sbb
mov
ret
lods
push
lock
jmp
add
test
or
add
mov
ss
xor
lcall
call
cmp
repnz
ret
sbb
xchg
add
add
ds
jecxz
lods
jmp
mov
bound
lods
orb
aaa
cmp
cmp
push
xor
mov
lcall
dec
pop
add
into
cmp
add
add
lea
cmp
or
decl
int
cmpsl
pop
cld
xchg
outsl
push
clc
sarl
jb
mov
mov
decl
adc
dec
int
add
and
adc
dec
lock
dec
fldl
mov
dec
adc
xor
cmp
in
clc
ficoml
and
decl
mov
mov
push
cmpsb
in
test
arpl
rclb
into
jmp
cmp
enter
xor
iret
insl
shrl
inc
fmulp
and
outsb
jl
sti
mov
loope
mov
dec
xchg
mov
stos
test
add
js
arpl
push
je
jp
mov
cmp
mov
fmul
popf
insb
mull
or
dec
mov
std
aam
cmp
and
dec
clc
out
or
jmp
lahf
or
iret
daa
in
shl
mov
negb
cmp
mov
mov
daa
jb
dec
out
or
push
cmp
popf
push
cmp
outsb
fbstp
int
dec
stos
lret
loop
cld
loop
jne
jmp
cmpxchg
cli
pushl
lods
inc
imul
adc
xor
in
jbe
cmpsl
shr
push
push
out
sbb
aad
cltd
nop
mov
aaa
sbb
sub
clc
cmpsl
mov
jg
mov
fisttps
mov
es
popf
jp
sub
mov
sbb
mov
xchg
mov
xchg
shr
ljmp
add
call
mov
psllq
fsts
cwtl
or
ret
mov
insb
in
mov
jmp
aam
adc
inc
pop
dec
xchg
pop
cmp
mov
imul
bound
ja
int
mov
dec
or
xor
aas
pushf
loopne
mov
outsb
mov
jmp
push
cmpl
lods
repz
es
sbb
cmp
pop
jnp
sar
fmul
add
xchg
sbb
lea
int
mov
insl
jl
mov
rcll
adc
mov
push
pop
cmp
decb
push
stos
push
jmp
std
rclb
in
dec
xchg
cltd
ljmp
repz
cld
xchg
decb
mov
push
aaa
jle
xchg
in
into
jecxz
int3
out
jne
or
fdivrp
ss
lods
mov
dec
xchg
movsl
push
rolb
mov
jae
incl
repnz
xchg
xchg
icebp
inc
mov
leave
push
push
incl
mov
loope
fcmovnb
int
or
cmp
adc
add
push
lahf
xchg
leave
out
incl
movl
cmpsl
xchg
jg
jo
out
mov
lcall
popa
js
cmp
jb
inc
in
cmc
mov
mov
mov
scas
adc
repnz
mov
or
xchg
or
xor
ss
inc
cli
adc
gs
dec
je
inc
xchg
adc
push
xor
mov
iret
arpl
add
call
sub
pop
cld
decl
sub
aaa
sub
xor
pushf
sub
inc
inc
mov
mov
xor
or
pop
mov
inc
jg
inc
cmp
data16
iret
aad
push
cmp
cltd
sub
fildll
cld
push
dec
push
shll
push
rolb
mov
inc
movsl
and
adc
sbb
daa
hlt
aam
inc
sub
mov
bound
pop
mov
or
fs
dec
inc
pop
dec
dec
adc
push
in
dec
orl
loopne
bound
int3
adc
xchg
push
add
movsb
std
add
add
lcall
icebp
and
dec
mov
aas
lods
aam
mov
xor
stc
mov
dec
mov
lds
adc
jp
inc
sub
popf
fcos
incl
mov
and
pop
xor
sbb
ror
jp
adc
jp
shlb
cmp
jle
cli
xor
mov
cmp
cli
outsl
push
stos
push
sub
or
lcall
xchg
iret
loopne
dec
jl
dec
dec
mov
mov
scas
aaa
stos
leave
pop
stos
cmc
and
pop
ja
mov
and
sbb
ret
aam
xchg
les
adc
mov
pop
lods
cli
incl
sbb
nop
xchg
jl
push
aaa
int
cmpl
arpl
cli
sub
mov
mov
mov
mov
bound
lcall
dec
pop
mull
decl
add
dec
add
enter
pop
movsl
testl
cmp
lcall
adc
xor
je
jno
test
or
je
and
std
data16
ret
lret
xchg
sub
roll
cs
push
jne
pop
jge
jp
push
clc
fdivs
incl
mov
cmp
test
jge
fisttps
or
aad
cmpl
dec
mov
mov
jmp
int3
mov
in
shll
jmp
mov
add
mov
mov
dec
push
or
cmp
pop
jge
inc
jmp
cmp
andl
cmp
repnz
insb
add
sub
dec
pop
in
push
test
pushl
call
xchg
mov
sbb
call
xor
in
xchg
lcall
flds
mov
pop
mov
pusha
xchg
lea
mov
fldenv
lcall
xchg
pop
shr
pushf
push
jp
out
test
cmc
xor
pushl
rolb
daa
inc
fdivs
mov
xchg
fildl
push
jp
test
frstor
fdivl
cmp
push
and
adc
outsl
test
add
fldt
out
fmuls
incl
ret
xchg
scas
pop
mov
pop
popf
cmpsl
fs
xchg
or
xor
popa
movsb
es
mov
mov
dec
and
lret
pop
lds
fsubr
dec
adc
xor
out
cmp
lods
push
sar
jmp
test
mov
add
ret
cmp
jg
adc
and
loop
dec
aaa
mov
ja
mov
cmpsb
lds
decl
dec
shrb
xchg
std
mov
stos
mov
jnp
lods
sub
mov
mov
add
xor
pop
inc
imull
clc
ljmp
cmpsb
call
add
aad
in
push
mov
or
mov
pushl
in
add
das
out
cli
repnz
cmp
jl
mov
xor
mov
std
adc
mov
cmpb
adc
sub
inc
and
jg
out
clc
cmp
sub
fs
pop
dec
ljmp
dec
bswap
fwait
cmc
ja
sbb
jp
adc
mov
add
je
sub
push
xchg
dec
popf
add
fdivs
push
cld
pushl
dec
iret
sti
xor
pop
cmp
ja
mov
inc
clc
mov
push
fsubrs
mov
dec
lds
ret
add
sarl
and
xor
mov
adc
mov
sub
sti
xor
dec
ror
cmp
frstor
cmpsb
inc
mov
pusha
jae
and
insb
mov
jge
and
xlat
call
and
test
call
push
mov
aad
addr16
adc
popa
sbb
add
push
sbb
cld
decl
cmc
aam
sbb
es
xor
add
and
addr16
push
incl
or
xchg
mov
jbe,pn
cmp
sbb
ljmp
addb
mov
jno
and
or
cli
sbb
pxor
ds
xor
xor
out
inc
mov
ret
call
add
je
cs
gs
and
in
nop
roll
xchg
cmp
dec
sub
shrl
inc
inc
jg
jne
popf
into
mov
sbb
mov
aam
repz
pop
pop
bound
decl
xor
pop
orb
aaa
add
data16
popa
int3
sbb
out
xlat
jg
addb
and
push
and
repz
ljmp
daa
pushw
xchg
pop
mov
ss
or
mov
call
ljmp
adc
mov
push
pop
aaa
mov
xchg
or
mov
lods
fsubr
pusha
jne
push
es
jg
mov
add
sub
pop
ja
out
lret
adc
add
cld
ljmp
sbb
int3
dec
mov
inc
adc
ret
shll
jg
mov
mov
mov
or
pop
fdiv
shr
clc
lcall
pop
jns
cmpl
es
out
test
xlat
rcr
push
pop
into
ss
out
adc
jb
jecxz
std
inc
fs
int
pop
xor
test
and
lahf
rcll
cmp
inc
fsts
xchg
add
scas
or
rcrb
and
data16
push
decl
mov
push
es
out
lahf
enter
ret
fiaddl
jle
ret
and
push
notl
fwait
rcl
cmpsb
jge
aam
fcos
pushl
inc
mov
xchg
lahf
psubq
ja
xor
inc
sbb
jg
mov
clc
push
push
call
cld
es
jg
ret
lmsw
scas
xor
mov
outsl
fidivrl
fwait
in
loop
enter
ret
pop
shl
mov
incl
sbb
leave
push
xor
shl
sbb
add
popa
lret
ret
or
adc
addr16
fninit
jmp
popa
loope
das
decl
testl
ret
adc
pop
out
dec
push
pop
popf
pop
movsl
or
mov
repnz
jecxz
cmp
dec
pop
or
in
inc
pop
or
push
bound
inc
das
mov
add
lock
inc
push
add
cs
in
xchg
ljmp
bound
stos
out
pop
lds
outsl
imul
frstor
push
dec
jle
jbe
rolb
fistpll
lds
or
movsb
push
lret
cmp
mov
pop
movsl
das
scas
out
clc
mov
mov
push
mov
push
andb
stos
cwtl
in
xor
aam
pushl
inc
cmp
add
cli
stc
add
adc
jp
inc
rolb
lea
stos
mov
insb
add
decl
add
or
add
dec
rcrl
shr
in
or
pushl
fisubl
in
cld
add
and
xorl
lcall
addr16
mov
scas
jecxz
outsb
adc
jge
xchg
rorb
dec
jg
mov
mov
shlb
nop
or
jg
xchg
ss
rclb
and
decl
or
leave
cli
insl
mov
cmp
mov
mov
call
cmp
push
xchg
mov
mov
or
clc
loope
ror
out
lock
dec
lret
xor
incl
pop
call
fcmovnbe
dec
stc
fbstp
xor
das
lcall
js
xchg
int3
lret
xchg
xor
js
cmp
or
in
cmp
inc
es
imul
add
inc
outsl
mov
adc
push
xchg
stos
pushl
push
out
xor
or
out
xchg
add
movsl
adc
lret
lret
inc
sahf
or
push
std
ljmp
mov
loope
mov
xchg
outsl
xchg
movl
jge
ljmp
int
frstor
stc
sbb
ds
leave
int
xchg
fcomip
pop
and
mov
popa
and
shll
fmuls
rolb
clc
clc
shll
dec
mov
fcomip
and
mov
inc
mov
push
std
ljmp
lea
jns
xor
push
clc
cmp
pushl
out
popa
aaa
fucomp
cltd
push
xor
mov
cltd
add
pop
jbe
insb
in
jl
pop
mov
test
stos
mov
dec
mov
jmp
mov
fdivr
imul
mov
cmp
jne
pushf
pusha
and
into
inc
gs
xchg
cmc
jmp
add
xlat
mov
sub
nop
lods
vmovhpd
fwait
dec
popa
icebp
incb
int3
push
cmp
out
cli
fistps
rorb
pop
mov
add
adc
dec
mov
ljmp
jnp
je
mov
aam
pop
cmpsb
add
jo
std
lcall
ja
jns
or
clc
xchg
xor
nop
clc
lods
add
mov
gs
mov
loopne
call
xchg
xchg
arpl
cmpsl
and
ret
cmp
pop
cli
xchg
std
mov
sbbl
test
in
xchg
cwtl
ss
rolb
pusha
mov
pushl
mull
aas
or
mov
les
pop
add
clc
mov
lcall
or
movsl
lea
popf
in
and
jg
xchg
dec
in
dec
ljmp
xor
daa
or
mov
and
jnp
mov
xlat
dec
and
mov
push
std
jmp
in
shr
or
pop
push
roll
adcl
add
dec
inc
dec
clc
adc
xchg
repnz
push
bound
dec
stos
jle
movsb
jge
sahf
mov
fsubrs
jb
sbb
pop
repnz
mov
shlb
mov
cmp
orl
jmp
sbb
stos
fildll
pop
cmp
roll
cmp
stc
cmp
out
nop
addl
add
leave
inc
decl
sti
sub
imul
jecxz
jae
cmpl
out
dec
imul
and
adc
roll
ret
test
xchg
scas
dec
jg
call
ror
mov
repnz
ret
add
mov
in
in
movsl
ds
cmp
decl
fwait
lods
mov
inc
mov
fisubrl
rorl
adc
mov
jmp
add
xor
jnp
cmp
subb
imul
mov
xor
mov
dec
cld
pop
mov
fisubs
jmp
xor
lret
dec
loopne
cli
enter
in
jb
outsl
sub
adc
pop
push
ss
xchg
or
lcall
pop
ja
enter
pop
movsb
dec
mov
ret
add
loop
fadd
and
dec
gs
fcomip
decl
adc
mov
cmp
mov
pusha
repnz
mov
jne
ljmp
adc
fwait
and
in
je
sti
cmpsl
loopne
add
lods
dec
cmp
ja
loop
inc
jecxz
push
rcll
push
mov
or
push
inc
mov
daa
xchg
call
shlb
sub
add
lcall
push
orl
outsl
dec
mov
cmp
and
test
mov
leave
es
add
mov
idivb
aad
in
lahf
in
push
xchg
mov
lahf
or
fbstp
add
xor
and
and
decl
subl
and
mov
fs
fidivrs
call
hlt
ret
pushf
jg
push
fwait
xor
lds
push
fldenv
mov
pop
incl
sti
or
gs
fsubp
shl
and
dec
xchg
xchg
imul
out
clc
cmp
fs
enter
jo
sub
data16
outsl
inc
fdivrs
in
das
push
fistl
cmpsb
addl
and
push
pop
mov
fiadds
add
movswl
and
jmp
mov
enter
stos
mov
mov
out
sbb
xor
jnp
mov
call
cs
std
push
or
jne
jnp
scas
xchg
mulb
add
mov
cmp
ds
jmp
sbb
pop
cmp
xchg
cltd
mov
mov
mov
push
dec
test
in
inc
jmp
dec
inc
or
rcll
sbb
lds
mov
imul
or
les
lret
mov
pop
push
mov
lcall
shlb
jg
std
sbb
mov
test
icebp
sub
fsubrp
aam
popf
cmp
mov
leave
lods
push
inc
lahf
mov
sbb
sub
push
dec
xlat
int3
mov
decl
es
mov
popf
xor
fldl
pop
dec
shlb
je
xor
cmc
gs
pop
xchg
xchg
bound
int3
adc
fdivr
fcomip
cmp
cmp
loope
call
lahf
cmpsb
jmp
jecxz
mov
aad
xchg
mov
jg
in
dec
testl
mov
dec
dec
loopne
das
mov
push
rolb
arpl
sti
clc
int3
push
lods
inc
test
cmp
pop
sub
aam
mov
lcall
stos
dec
ds
push
lcall
jb
ss
xchg
mov
mov
lcall
rolb
lods
mov
mov
pop
mov
mov
ljmp
out
inc
dec
aaa
pop
jg
mov
lds
mov
rclb
rcl
and
orl
and
xor
push
adc
cwtl
stc
xchg
push
ljmp
jl
jg
dec
or
jno
dec
pushl
cmp
int
dec
test
adcl
or
std
sub
imul
mov
pushf
movsb
pushl
cld
and
jge
mov
movsl
int
sub
movsb
sbb
cld
push
lcall
and
sarb
scas
mov
fmuls
movsl
stos
or
add
stc
ljmp
andl
or
mov
call
pushf
shr
dec
mov
je
sbb
mov
jb
int3
outsb
mov
icebp
and
dec
ds
incl
stos
mov
or
int
aaa
mov
out
or
cmp
jle
lods
ror
out
movsb
jp
pop
push
sbb
sahf
pushl
sbb
dec
leave
movsl
jl
in
push
or
std
jmp
jl
idivb
cmp
add
mov
cld
cmp
jmp
ljmp
faddl
jle
lret
pop
mov
idivl
ljmp
xor
mov
mov
ret
aad
sbb
xchg
fyl2xp1
or
in
and
cmp
pop
stc
es
mov
nop
insl
add
inc
in
test
call
cmpsl
in
lret
sahf
mov
movsb
mov
fnstenv
mov
call
je
mul
je
daa
out
jne
ja
mov
pop
test
cmc
mov
fcomip
push
or
xor
jle
mov
sub
enter
incl
jmp
dec
sbb
ljmp
lret
aad
in
fwait
mov
push
ja
or
add
mov
push
mov
arpl
clc
ja
addb
nop
jmp
pop
jns
cmp
add
jl
sbb
lret
and
dec
mov
daa
cmp
scas
cli
decl
sub
cmp
into
jge
lret
xor
push
xchg
mov
ds
fcomip
dec
mov
sub
in
stos
adc
stc
cmp
outsl
dec
lret
mov
lret
jge
jl
int
jle
loop
xchg
stc
rol
int
int
pushf
stc
dec
mov
aad
std
test
int
dec
ret
cli
call
icebp
jb
clc
cmp
adcl
hlt
clc
xchg
add
aad
fwait
out
sub
and
lock
pop
rcrl
xor
pop
int
sbb
test
inc
dec
mov
fidivrs
xchg
cltd
sbb
or
test
lds
inc
mov
push
cld
ret
mov
mov
mov
xchg
xor
mov
stos
aaa
adc
sbb
cmp
mov
add
jmp
ljmp
adc
ret
push
and
ret
call
adc
fisttpl
ret
push
dec
cmp
push
inc
iret
popf
sbb
jnp
gs
call
cmp
outsb
out
mov
hlt
sub
repz
push
xor
test
ljmp
sub
ret
and
aas
outsb
sub
insl
mov
and
test
mov
mov
mov
pop
mov
adc
add
lock
push
movsb
cmp
add
pusha
lret
mov
andb
dec
imulb
inc
int3
hlt
int
nop
lret
jg
sbb
jb
inc
or
sub
xor
push
sar
jg
dec
cld
mov
inc
iret
add
dec
ljmp
lds
inc
inc
ds
dec
sub
inc
jo
push
adc
mov
or
fadds
decl
mov
mov
dec
dec
gs
aam
jno
dec
aad
sub
or
xor
jnp
dec
cmc
lcall
sbb
mov
ret
inc
mulb
out
es
sub
adc
jmp
adc
dec
lock
sub
or
and
cmpsl
insl
add
aas
jg
inc
rcll
inc
jle
repnz
xchg
adc
mov
jmp
iret
jl
push
mov
nop
xor
xor
xchg
mov
push
loop
pushl
lods
inc
movsl
lock
sbb
popl
out
lock
cwtl
fwait
adc
push
sbb
stos
push
pop
push
lcall
inc
lock
nop
out
aad
mov
sub
movsl
pop
popa
in
fsubr
mov
adc
cli
stc
lea
daa
fmul
fwait
repnz
and
and
mov
cmp
sbb
cmp
je
jg
mov
in
ja
xor
xor
sahf
cmp
dec
je
fwait
xchg
shlb
incl
cld
jecxz,pt
shl
add
test
or
xor
lods
lods
mov
jmp
jecxz
fisubs
mov
adc
xchg
mov
push
pop
imul
pop
pop
cmc
dec
rol
enter
popf
pusha
and
ja
cmp
jbe
jo
mov
mov
jb
roll
adc
xorl
ljmp
sbb
aad
out
cmp
and
in
fiaddl
xchg
xorl
call
dec
cli
mov
shrl
push
cmp
pop
sub
pop
ror
and
mov
leave
loope
fcoms
push
aam
rcrb
or
in
jno
pushf
xor
or
xchg
pusha
push
sub
jmp
aas
dec
mov
scas
in
xor
cmpsl
push
or
jp
popa
sub
jmp
pushl
adc
jecxz
jbe
add
mov
insb
popl
nop
pop
adc
in
xor
mov
cmp
mov
lcall
ret
inc
cld
ljmp
call
and
xor
sbb
lods
dec
bound
and
daa
rorl
rcll
sarl
add
pushl
mov
cs
mov
adc
and
decl
sub
sub
ret
scas
sbb
movsb
jle
add
stc
pop
ds
pusha
inc
jb
lcall
shlw
jbe
cmp
lea
mov
arpl
push
std
xchg
cmpsb
inc
test
mov
jl
mov
rorb
xor
aaa
dec
shlb
lahf
int
mov
rorl
jg
into
fdivs
jmp
cmp
out
dec
xor
ret
lret
add
repnz
jb
add
push
xor
xor
and
test
lcall
ljmp
in
shlb
xchg
fisttps
push
inc
rcl
cmp
les
pushf
jo
pusha
or
fwait
ljmp
push
subl
loopne
aad
test
jp
xor
scas
adc
jge
das
cli
daa
adc
add
test
gs
mov
pop
xchg
jbe
or
enter
push
and
out
dec
daa
std
stc
jg
or
cli
mov
loopne
jne
xchg
jmp
dec
push
add
ss
jmp
pop
hlt
dec
adc
push
test
jo
cld
cmpsl
mov
or
stc
dec
pop
int
lahf
and
outsl
decl
xor
ficompl
sbbb
push
push
ljmp
push
and
ror
cmc
adc
sub
call
mov
lret
mov
pop
subb
xchg
clc
add
push
popa
fildll
ret
lret
shll
ljmp
shlb
or
cmp
outsb
mov
repz
andl
lock
call
std
popf
mov
xchg
jo
inc
add
incl
pop
xlat
jb
lcall
sahf
push
insl
cmpsl
adc
lods
sbb
pmullw
jmp
pop
cmpsl
pushf
ret
pop
dec
sub
adc
dec
fdivrl
in
and
insl
jp
lret
aam
decl
push
leave
jbe
cmp
std
pop
imul
mov
addr16
dec
mov
jmp
scas
fdivrs
mov
xchg
int3
jae
aaa
sbb
lock
dec
inc
aad
adc
sar
lcall
adc
out
cli
and
mov
rorl
ficomps
es
push
cld
jmp
cmpsl
test
or
xorl
movsl
jmp
out
lcall
push
ljmp
xchg
push
cmp
movsl
mov
inc
jae
mov
jl
adc
mov
outsl
lods
fldt
mov
mov
cmp
and
outsl
add
call
mov
or
in
fisttpll
in
scas
stos
add
je
test
mov
jmp
cmpsb
loop
sti
shll
repnz
or
jecxz
dec
pop
mov
call
pop
sub
shrb
mov
sbb
adc
xorb
enter
ljmp
jns
and
and
sub
mov
filds
loopne
pop
iret
cmp
and
popa
aaa
mov
cmp
cmp
loop
pop
inc
cmp
mov
or
xlat
pusha
mov
inc
add
cli
lret
mov
push
ret
push
pusha
lock
xchg
in
pop
push
jo
pop
push
mov
mov
pop
mov
neg
test
out
add
shr
mov
call
fcomp
pop
mov
cld
jne
test
ret
dec
mov
adc
rorl
lock
inc
dec
push
or
pop
jg
ror
mov
sub
cwtl
mov
std
jle
or
popl
mov
movb
lods
xor
push
jge
jne
ret
add
in
add
lcall
fldl
ret
pop
xor
sahf
ret
mov
scas
mov
jns
mov
enter
push
lahf
into
adc
outsb
adc
mov
stc
sbb
test
adc
or
mov
push
ret
aad
push
push
inc
loop
and
leave
iret
ret
outsl
imul
clc
outsl
mov
dec
enter
and
add
xchg
pop
inc
mov
decl
dec
jae
dec
inc
xchg
dec
jmp
cltd
repz
stos
push
mov
cmp
mov
jno
jno
mov
sbb
xchg
jecxz
js
jge
mov
into
or
mov
lods
mov
call
pop
and
ljmp
rorb
add
add
movsb
sbb
es
adc
pusha
popa
dec
shr
ja
mov
imul
pushl
icebp
sbb
and
xor
inc
lret
pop
mov
ret
shr
push
xchg
lock
mov
or
xorl
sbb
addr16
mov
decl
push
mov
stos
jg
mov
jae
scas
icebp
cld
outsb
jb
pop
rcr
scas
stos
arpl
sub
and
mov
jb
sti
add
repnz
jp
cltd
and
and
rcrb
out
ljmp
stc
cmc
jb
and
sub
push
jae
jecxz
add
mov
into
jl
call
lods
push
jnp
push
push
cmp
dec
je
ret
fnstcw
dec
mov
loope
and
lcall
jno
xor
push
lret
dec
fs
or
xor
pop
mov
jae
mov
mov
iret
hlt
nop
mov
call
loopw
jno
dec
xchg
cs
out
mov
pop
xchg
addr16
inc
stc
loope
insl
push
sbb
stc
testb
xor
rclb
mov
in
es
cs
xor
fsts
fimuls
clc
incl
xchg
jmp
jb
mov
mov
pushf
mov
mov
pop
lcall
outsb
or
nop
fsubrl
adc
push
and
pop
mov
leave
jmp
mov
and
ja
lcall
jl
in
cmp
dec
paddusw
fadds
lahf
fxch
dec
cmp
cmp
add
aaa
push
sub
dec
dec
adc
jb
pop
push
decl
lock
push
adc
loopne,pn
adc
repz
ljmp
mov
mov
or
jae
ss
repnz
dec
xchg
ja
shrb
push
or
xor
xor
sbb
mov
shl
mov
outsb
rep
ss
or
cli
scas
push
in
or
outsl
leave
lcall
ja
inc
jmp
lods
and
adc
out
mov
cld
std
pushl
shll
pop
scas
mov
sub
dec
stc
ja
sub
mov
pushl
fsubl
fidivrl
push
cmpsl
loop
loopne
cmp
sti
pop
outsb
call
pop
dec
popa
adc
mov
rcrb
xchg
aad
pop
xchg
xor
ret
ljmp
push
push
cmp
in
mov
icebp
pop
mov
or
add
decl
pusha
push
aaa
adcb
inc
xor
sbb
dec
mov
jg
repz
cmc
inc
rorb
pop
dec
xor
and
xchg
aam
das
cli
call
and
ret
mov
inc
daa
outsb
out
icebp
sahf
mov
inc
mov
cli
incl
ret
notb
adc
mov
loope
inc
jnp
or
jl
clc
ljmp
aam
sub
ss
out
dec
and
call
push
movsl
add
scas
sbb
mov
mov
add
movsl
shlb
lret
clc
clc
pop
movups
pop
mov
stos
mov
dec
fadds
mov
add
inc
fldt
xchg
loop
fidivl
sub
std
push
decl
sbb
pop
dec
nop
rcll
in
lods
into
sbbl
cltd
cmp
push
scas
jg
mov
lcall
shlb
lods
sub
lcall
lret
xchg
ss
fwait
pop
mov
and
pop
cmc
stos
add
aas
and
jp
imul
out
bound
adc
sbb
popf
lfs
or
cmpsl
lock
stos
jb
jmp
jo
pop
add
sub
in
inc
push
pop
xchg
or
sarl
xchg
frstor
dec
pop
cmp
mov
pop
or
add
mov
cwtl
adc
data16
out
or
out
cli
mov
mov
sbb
imul
lds
mov
mov
sbb
dec
jp
jno
or
cmpsb
arpl
incl
outsl
lea
xchg
rorl
scas
jmp
rcrl
sub
in
in
dec
mov
cmp
mov
xlat
dec
sahf
es
pop
xchg
push
bound
in
pop
xorb
js
icebp
cmp
jb
and
scas
xor
call
pushl
pop
push
push
popa
mov
adc
push
movsb
lret
xchg
xor
loopne
mov
cli
jp
inc
pop
xor
adc
xorb
call
loopne
incl
and
cmc
sbbb
sub
mov
pop
stos
ljmp
sbb
ljmp
icebp
add
sbb
scas
or
mov
or
push
je
or
inc
cmp
adcb
lret
int
cltd
pop
leave
sub
xchg
mov
in
or
decl
jp
test
mov
jle
add
cmp
dec
in
jmp
incl
roll
cmp
test
sar
adc
xchg
and
pop
pop
lret
xchg
in
add
stos
fisubl
incl
dec
or
into
and
xor
adc
sub
sti
sub
ret
mov
mov
imul
and
arpl
jae
cs
push
mov
jns
mov
cld
out
dec
cmpsl
addb
jecxz
fstpl
dec
sbb
and
repz
decb
rorb
dec
out
push
mov
lret
lret
dec
xchg
dec
xchg
outsb
or
push
mov
mov
add
loop
jo
dec
or
repz
sub
mov
incl
call
dec
cmc
subl
in
add
insl
jle
inc
das
cmpsl
pop
cmc
in
fdiv
dec
inc
cwtl
inc
lock
ds
xchg
mov
addb
lds
mov
dec
sarb
cmp
cmp
jge
test
sbb
aam
inc
aaa
cmp
les
jne
mov
cld
lock
sbb
pop
roll
inc
repz
jmp
or
lock
mov
cwtl
outsl
jb
cmpsb
jne
mov
xor
sarb
incl
in
incl
or
and
jne
cmp
cld
fisttpl
leave
mov
sub
and
insl
and
sar
jge
add
cwtl
cmp
es
push
adcl
ret
pop
int
leave
call
fdecstp
jns
sbb
mov
test
sar
call
outsl
fisttpll
add
fadds
dec
daa
fwait
aaa
dec
dec
rol
jmp
push
jg
dec
repnz
incl
sbb
dec
cmp
xor
mov
push
dec
lahf
mov
das
rcrl
aas
mull
dec
xor
aas
or
pop
jbe
xchg
or
arpl
xor
and
and
dec
stos
jmp
mull
in
stos
inc
jb
sbb
mov
loope
dec
inc
add
cmp
sti
dec
lods
xor
push
mov
sub
sub
hlt
aad
decl
lcall
and
cmp
jmp
mov
push
sub
xchg
mov
fcomip
adc
mov
sbb
pop
daa
enter
push
in
shll
pushl
pushf
test
push
test
std
mov
push
je
sub
ljmp
ror
and
jg
inc
mov
add
push
rorb
js
lods
mov
lret
add
movsl
popf
jge
mov
inc
nop
call
mov
mov
xor
test
inc
es
push
clc
dec
pushl
std
xchg
into
in
jb
pop
shrl
ret
push
sub
fs
mov
out
cli
ret
jmp
out
push
jle
loopne
push
jno
and
inc
push
idivb
push
mov
push
mov
sarl
cmp
add
mov
ud1
data16
cmp
xor
add
fwait
test
mov
in
cmovs
sub
out
inc
lcall
sub
ljmp
decl
cmp
sub
ljmp
rorl
inc
cs
pushl
jmp
push
push
add
movsl
xlat
icebp
movsb
and
scas
mov
adc
fdiv
in
popa
mov
jmp
mov
pop
repz
bound
leave
loopne
je
pop
pop
adc
sub
cmp
decl
lock
shlb
dec
lea
out
cs
jae
sub
shr
mov
mov
arpl
add
push
lea
in
andl
sbb
clc
xchg
hlt
shl
incl
add
mov
mov
insl
cmc
inc
jne
outsb
filds
push
push
sarl
js
dec
and
mov
clc
dec
mov
decl
or
inc
insl
test
mov
hlt
repnz
and
jb
inc
mov
test
leave
mov
dec
push
and
pusha
xchg
ror
pop
lock
cltd
adc
aad
ja
dec
xchg
rclb
or
mov
pop
icebp
pusha
pop
in
inc
lods
cmp
jg
je
jb
or
out
inc
pop
insl
stc
inc
loope
movsl
mov
lods
sahf
imul
std
inc
mov
lcall
jnp
imul
std
fsubrs
jmp
add
incl
in
add
out
add
sub
mov
or
in
mov
or
cltd
and
sub
mov
mov
jge
xor
add
jp
jge
call
fsubrs
movsb
jae
aaa
jbe
or
enter
lock
jg
xor
sub
cmp
and
into
mov
sbb
sbb
sub
mov
jmp
lds
sbb
fucomp
sahf
push
jne
mov
dec
pop
in
std
jns
xchg
ljmp
imul
andl
fstps
dec
insb
mov
aas
xor
adc
jmp
add
jp
fs
ror
mov
push
adc
push
mov
pop
loopne
jp
repnz
into
push
stos
adc
adc
out
test
sub
stos
clc
mov
mov
mov
or
push
mov
das
cli
add
test
out
pop
fdivrs
pop
mov
inc
dec
ljmp
test
decl
mov
dec
popl
loop
in
mov
fiadds
sbb
call
pop
sarb
in
sub
dec
lds
cmp
pop
sti
jg
call
mov
jge
mov
lcall
mov
mov
fprem1
xchg
aad
dec
imul
xchg
or
jl
movsb
addr16
outsl
dec
es
xor
out
cmovne
cmp
lret
add
mov
pop
pushl
cmp
jle
xchg
pop
dec
int
into
pop
fnstsw
outsb
add
daa
add
push
dec
hlt
fwait
dec
call
lret
sbb
fsubl
test
mov
movsl
js
jns
nop
insl
nop
enter
call
dec
ret
inc
pop
ret
cmp
mov
push
xchg
ds
or
add
lret
jmp
jmp
ljmp
or
divb
rclb
mov
decl
cmp
enter
sar
inc
jmp
inc
mov
out
leave
test
incl
lods
adc
sbb
sbb
sti
outsb
and
call
test
fistps
push
xor
lock
leave
ret
cmovnp
pop
call
loopne
ret
rol
lods
sbb
mov
mov
mov
or
push
lret
call
inc
jl
ficoms
xor
and
mov
cmp
lds
call
mov
dec
cmp
mov
fcoms
std
push
frstor
jno
pop
mov
or
mov
mov
out
hlt
adc
push
int3
jne
xchg
int
xor
in
sbb
stc
mov
cmc
sub
std
out
imul
mov
mov
pop
xchg
int3
fcoml
add
push
fdivs
pop
ja
dec
cmp
insb
inc
fistpl
sarl
push
jo
lahf
call
mov
xchg
push
pop
mov
add
int
pop
jns
lret
mov
movsb
sbb
mov
adcl
jge
cmp
mov
ljmp
arpl
dec
adc
add
mov
push
imul
add
imul
repz
cmp
mov
pop
gs
call
pop
int3
std
les
shll
sub
lcall
xchg
sub
jne
fcoml
ss
lods
sub
call
mov
es
aaa
cld
cltd
popf
fisubrs
out
jne
dec
xor
out
mov
cld
sub
or
push
fsubl
shrb
and
xor
mov
es
frstor
mov
lock
outsl
jne
iret
xchg
sahf
ljmp
push
sub
es
cld
imul
jl
popa
jg
repnz
ja
sar
call
inc
pop
dec
xchg
jne
stos
and
mov
jg
pop
cmp
pop
inc
and
jg
nop
es
cmp
xor
hlt
mov
icebp
out
inc
lret
icebp
aam
pop
cmp
adc
pushf
pop
es
lods
cmp
jne
iret
decl
gs
in
fisubs
mov
xor
sarl
lret
aaa
inc
and
call
loopne
inc
dec
lret
or
and
push
insl
mov
adc
mov
test
icebp
jg
incl
inc
xor
dec
dec
cmpsl
out
aam
mov
push
mov
fdivrl
or
fnstenv
mov
imul
and
xor
xchg
pop
mov
lcall
jge
jnp
mov
mov
dec
xor
fmuls
xchg
cltd
push
jmp
cmp
movsb
rorb
scas
lcall
add
sbb
mov
mov
mov
add
xor
and
dec
pop
push
int
mov
call
frstor
addr16
push
adcl
dec
add
mov
repz
mov
mov
xor
mov
xchg
fldenv
mov
mov
repz
add
in
and
imul
mov
std
stc
repz
jle
lock
lcall
mov
insl
xchg
and
adc
sbbb
dec
sub
inc
fwait
decl
add
mov
enter
popa
sarl
dec
pop
rolb
scas
inc
and
cmp
jmp
lret
incl
cli
sti
in
push
push
fmull
imul
jp
notl
decl
fwait
scas
cmpb
test
mov
testb
out
je
xchg
call
call
adc
adc
add
in
xor
sub
imul
add
or
in
mov
das
sbb
lods
and
xchg
sbb
sahf
push
ss
mov
push
jnp
xor
incl
add
inc
push
mov
add
dec
pop
xlat
xchg
arpl
in
dec
pushl
std
push
jg
int
out
jmp
push
aad
imul
hlt
mov
in
fnstenv
mov
cmp
add
lods
aas
test
adc
dec
xor
mov
mov
adc
and
mov
mov
mov
mov
adc
lcall
inc
out
aad
jne
rorb
ljmp
repnz
lea
sbb
cld
js
xchg
aaa
inc
pop
lock
shlb
das
clc
ljmp
test
dec
xchg
mov
aad
sahf
movsl
pop
out
filds
fdivrp
lcall
cs
mov
ret
add
out
ds
pushf
inc
gs
sub
or
xor
ja
decl
stos
int3
xchg
sbb
lock
xorl
lods
fstl
movsb
sbb
dec
ljmp
push
test
dec
dec
ficoml
sar
decl
jbe
sub
fildl
mov
fdiv
inc
cs
ljmp
js
or
fsts
or
or
icebp
in
stos
lahf
dec
lock
pushl
jmp
daa
clc
cmp
or
mov
insl
mov
ret
mov
inc
inc
call
les
pushf
sarb
xchg
les
arpl
push
cld
pop
loopne
xor
repnz
xor
test
enter
adcb
incl
adcb
test
repnz
test
pop
or
xchg
sub
aaa
insb
adc
sub
push
adc
pop
pop
cmp
xlat
out
adc
inc
ljmp
push
sahf
add
inc
out
into
pusha
and
cld
jo
scas
cmp
mov
sahf
fdivr
fstl
mov
aad
pusha
add
dec
leave
xchg
test
inc
aas
mov
dec
fs
inc
aad
mov
outsb
in
outsb
cmp
into
jae
sti
lods
push
mov
fimull
sbbb
int
push
cmp
out
test
sbb
loope
movsl
loope
add
pop
out
or
jecxz
sbb
dec
mov
pushl
inc
dec
xor
add
jg
mov
dec
cmp
cmpb
pushf
mov
daa
das
mov
cld
nop
inc
ljmp
into
cmc
int
inc
push
adc
adc
sub
mov
sbb
es
pushl
xor
mov
push
es
lret
adc
and
adc
test
fs
mov
push
xlat
nop
arpl
pop
xor
ljmp
sub
cltd
pop
in
loope
cmpsb
mov
loop
push
sub
das
ss
decl
rcrl
sub
dec
xlat
jb
add
push
mov
stos
fldt
inc
daa
jns
xor
popa
fldcw
test
or
incl
ljmp
mov
pop
stos
xor
mov
in
or
jmp
cs
sbb
sarl
fcmovbe
pop
mov
push
inc
and
sub
arpl
movsl
add
lods
fldenv
mov
dec
les
cmp
xor
test
push
jg
jmp
fnsave
add
sbbb
and
add
call
or
or
or
cmp
cmpsl
sub
testb
lcall
sbb
xor
sub
fstps
mov
mov
shrb
fwait
xor
mov
outsl
xor
arpl
test
push
ret
inc
push
mov
into
push
cmpsl
call
xchg
loopne
sub
scas
mov
repnz
cmp
in
inc
movsl
and
aad
decl
adc
jnp
mov
aad
lret
inc
jb
push
jge
mov
das
pushf
dec
incl
cld
jg
testl
xor
bound
dec
or
xlat
sbb
xchg
jmp
mov
rcll
orl
fstpt
stc
ljmp
int
dec
xor
lcall
loopne
aam
stc
or
cmpb
insl
roll
mov
pop
jecxz
sub
sbb
insl
push
js
or
lret
mov
mov
fdivs
loop
test
in
les
aaa
out
cwtl
call
cmp
fs
jae
adc
into
orl
dec
mov
jnp
xchg
mov
adc
cmpsb
lcall
jmp
shll
gs
out
ljmp
cli
scas
or
jno
push
pop
shrb
fcmovnb
les
psllq
jmp
jb
mov
add
cmp
mov
mov
mov
jg
fdiv
aaa
lods
push
lret
test
aad
outsl
jb
imul
jae
fisttpl
push
sub
jmp
loop
imul
and
jecxz
cwtl
pop
test
xorl
sub
jmp
mov
add
jo
dec
push
mov
movsb
mov
decl
daa
sbb
add
pop
pushf
adc
sbb
dec
xor
add
mov
cmp
pushl
repz
lds
ja
bound
sub
inc
repz
test
cld
sub
dec
dec
bswap
mov
and
lret
insb
pop
and
cmpsl
inc
lcall
mov
lret
in
popa
push
cltd
mov
mov
sbb
movsb
loope
lcall
inc
or
and
and
enter
outsl
mov
jb
add
ljmp
mov
subb
les
add
jge
pusha
mov
xor
add
dec
sbb
lds
mov
sarb
pop
mov
rorl
sbb
pusha
sti
adc
push
xor
push
lods
inc
stos
mov
inc
jbe
add
pop
adc
cmp
sbb
shrl
test
ds
lret
xor
dec
sahf
or
ret
mov
xchg
mov
push
outsb
outsb
ljmp
xchg
int
pop
add
pop
add
mov
sub
or
dec
add
jg
push
nop
push
and
jno
add
sub
xchg
inc
leave
out
loop
cmp
sub
subb
in
push
popa
out
iret
push
loope
fsubs
push
loope
in
adc
mull
btc
mov
je
test
jno
xor
out
call
xlat
mov
mov
int3
pushl
inc
sub
ret
in
or
lret
xchg
jl
sbb
and
incb
fistps
pushl
dec
arpl
push
add
mov
outsl
jge
pushl
in
and
ljmp
stos
out
shl
sti
pop
ljmp
std
and
lret
mov
icebp
call
int
shrb
in
pop
xchg
pop
mov
je
cmp
pop
and
insl
in
jg
sar
lcall
xlat
inc
inc
hlt
inc
inc
mov
jb
stos
outsb
repz
xor
call
dec
adc
ljmp
lcall
push
cltd
lahf
out
or
fldl
jnp
mov
decl
jne
into
insl
mov
stc
pop
mov
movhlps
repz
ja
pop
mov
adc
ljmp
cmp
aad
les
aam
out
jo
and
cmp
scas
out
jbe
or
aad
inc
sub
rcrl
sti
mov
mov
adc
lcall
repnz
ret
and
cmp
in
insb
bound
inc
xor
jge
addr16
mov
jae
and
daa
call
ret
fcomip
jmp
xorb
sub
arpl
addb
dec
faddl
cmp
fcoml
lcall
out
mov
and
pop
shll
add
jo
and
rorl
xchg
inc
xor
mov
add
cmp
dec
jae
pop
ss
mov
jg
and
and
fistpll
and
pop
lret
sub
mov
ljmp
sbb
scas
dec
and
pop
lods
fs
jp
xor
mov
cmp
loop
aam
lods
inc
insl
rcrl
clc
mov
jecxz
jbe
add
cmp
cwtl
mov
dec
decl
jbe
inc
loope
mov
jp
nop
lods
pusha
test
cmp
add
jg
into
mov
dec
mov
iret
push
call
imul
add
xorl
outsb
or
cmp
and
inc
pushf
leave
mov
or
cmp
inc
xor
jl
mov
decl
and
push
test
cs
aam
lret
push
int
push
rclb
sub
fucomp
jne
add
push
rcr
dec
stc
adc
xchg
imul
mov
cli
call
and
mov
loop
test
sub
int3
ljmp
sub
sti
out
mov
ljmp
les
dec
call
mov
stos
mov
ror
mov
mov
test
scas
push
rcl
mov
cli
enter
lahf
and
jp
sbb
or
inc
andl
lahf
cmp
jo
sub
mov
jg
mov
jmp
popa
push
adc
ds
lcall
push
xchg
lods
in
or
dec
mov
andb
leave
ret
xor
pushf
push
cmp
movsb
push
pop
jg
mov
and
mov
rcr
mov
sti
out
and
scas
popf
adcb
ljmp
test
call
dec
add
lds
cli
sbb
test
push
adc
fsub
or
mov
cmp
in
jae
xor
mov
sub
imul
ljmp
testb
add
cwtl
ljmp
decl
cmp
and
pop
dec
sub
pusha
test
dec
jbe
mov
shl
xchg
inc
test
push
dec
in
jl
inc
sub
imul
and
xchg
je
push
inc
and
add
and
in
mov
add
int
cmp
push
cli
jno
cmc
inc
jb
cli
call
lods
aas
movsl
sub
mov
mov
pop
xor
cltd
popa
add
imul
cmp
and
add
inc
sbb
insl
int3
daa
mov
mov
lds
mov
inc
lea
xchg
mov
jmp
dec
fisttpll
jmp
outsl
in
aas
jns
test
mov
ljmp
out
sbb
push
int
mov
or
inc
xor
ljmp
mov
push
mov
or
sbb
pop
popa
inc
aam
fldz
and
incl
or
xchg
mov
es
mov
jle
push
jge
cmpl
aam
std
lcall
push
shrl
inc
out
inc
and
daa
test
ja
mov
and
fcoml
lret
das
popa
decl
lret
lret
cmp
ret
out
add
mov
fstl
adc
mov
repnz
mov
aam
pushl
dec
aad
in
iret
mov
shrb
orl
pop
mov
push
mov
dec
mov
in
mov
loop
mov
fdivl
sti
je
sub
pushl
jl
pop
xor
lods
scas
sahf
xchg
int3
mov
jmp
movsb
mov
mov
inc
adc
or
icebp
and
cs
loop
lcall
test
sbb
xor
mov
shrb
std
les
scas
mov
xor
add
sbb
cmp
inc
daa
jmp
ljmp
fwait
push
sbb
aaa
ret
and
pop
jmp
xor
or
call
out
dec
jb
push
pop
inc
lahf
fdivrp
ss
frstor
push
xor
int3
push
test
out
cmp
call
push
gs
fwait
push
cli
aam
pop
ret
jmp
jns
and
lret
or
test
ljmp
lods
jbe
fiaddl
call
stos
push
xchg
inc
jae
cmp
jp
into
xchg
xchg
or
jmp
pop
imul
or
push
pop
mov
or
in
inc
iret
in
decl
sbb
jne
dec
or
stos
loop
push
fmuls
dec
js
cmp
or
lcall
arpl
in
cmp
aad
sbb
dec
sbb
pop
inc
popa
mov
cmp
xor
and
addr16
pusha
mov
inc
xchg
and
push
popa
mov
incl
mov
push
mov
inc
xchg
add
pushl
imul
and
sar
cwtl
mov
mov
lret
pushl
leave
xor
in
lea
imul
xchg
xlat
mov
cli
and
lcall
jmp
jae
mov
add
dec
inc
mov
mov
iret
rcll
sti
ljmp
fstpt
pop
inc
std
int3
mov
lods
fisubs
jno
mov
mov
add
aaa
adc
addl
in
mov
test
ja
outsb
ljmp
mov
xchg
jno
fs
int
bound
inc
adc
push
ljmp
sbb
lret
jno
lea
lea
outsb
lcall
xor
incl
and
pop
and
sbb
cmp
pop
mov
mov
inc
dec
inc
testl
insb
add
jge
cmpsb
pop
adc
ss
push
and
mov
das
popa
mov
cli
mov
cld
inc
mov
lods
lock
dec
mov
out
filds
fdivl
jnp
mov
imul
push
leave
jb
iret
shll
aaa
std
pushl
cmpsb
jecxz
xor
sub
push
mov
loopne
push
add
call
sbb
push
ljmp
jae
jne
out
push
add
xchg
and
decl
xchg
popf
shrb
add
ljmp
push
cmp
shlb
sub
stc
rolb
stos
andl
scas
xchg
lcall
jmp
push
fildl
sbb
xchg
sbb
sti
jb
in
or
jg
jmp
mov
not
ret
movl
mov
push
mov
je
ds
ljmp
and
shl
fmuls
inc
mov
movsb
andl
sub
pushl
pop
push
jp
idivl
inc
xor
lret
dec
mov
xchg
int
pushl
and
xor
push
mov
pusha
jge
pop
and
pushl
dec
imul
les
jne
and
xor
and
fistl
fnstcw
movsl
mov
jns
sub
inc
clc
hlt
jmp
sub
or
fwait
cmp
xchg
mov
dec
mov
pusha
shl
mov
insb
or
decl
push
out
clc
lahf
xchg
clc
cmp
dec
push
scas
pop
test
lcall
mov
adc
mov
add
sarl
inc
outsb
sub
fstpt
incl
fwait
mov
lods
test
ret
dec
jnp
ret
leave
mov
nop
notl
adcl
cld
jmp
mov
cmp
in
lods
les
xchg
add
orb
hlt
xlat
dec
sub
mov
adc
scas
jg
stos
jno
scas
lods
xchg
jno
jns
adc
testl
jmp
daa
xor
nop
es
jne
mov
insl
shrl
cmp
les
mov
decl
xor
xor
lds
leave
cmp
mov
add
mov
cltd
scas
clc
into
sub
out
sub
aam
ds
xchg
bound
dec
sti
out
pop
xor
adc
pop
fisubrl
jnp
sbb
test
cmp
jb
in
xchg
into
sbb
inc
aam
decl
lock
lret
pop
pop
mov
rcrl
bound
enter
mov
mov
lret
lds
mov
insl
repz
sbb
push
imul
adcb
cmpl
mov
addr16
cli
stos
scas
ss
scas
xor
cmpsb
mov
mov
ljmp
lret
xor
or
xchg
cmp
fisttpl
xor
dec
xchg
dec
pop
rol
movsb
sbb
jmp
ljmp
addb
rcrb
out
inc
dec
roll
rcr
cmpsb
fildl
loopne
and
pop
pop
xlat
adc
inc
in
sub
push
mov
mov
es
in
je
jl
or
in
dec
call
lahf
jns
lcall
stc
and
int
fcomp
lods
dec
or
mov
xor
repnz
push
flds
xor
das
dec
enterw
popf
push
sub
lds
clc
ficompl
pop
ret
pushf
jecxz
mov
mov
or
psrlw
mov
jg
std
jl
scas
movsb
xor
call
adc
testl
movsb
movl
out
mov
pushl
mov
inc
adc
mov
push
mov
mov
rep
push
inc
rcll
sbb
cmp
push
dec
cli
pop
scas
mov
int
fisubrs
shlb
sbb
add
inc
je
sub
or
pop
ljmp
pop
in
rolb
add
mov
add
stos
fldl
sub
aas
out
jg
incl
shlb
push
xor
add
mov
push
std
daa
mov
add
xor
pop
mov
dec
xor
ret
pushl
dec
mov
xor
inc
mov
das
mov
rorb
into
sbb
decl
repz
testb
xlat
das
or
hlt
cwtl
in
add
jmp
mov
and
sub
sbb
stos
aam
rcrb
cmp
aad
incl
mov
sbb
out
pushf
sti
jmp
add
inc
dec
out
repnz
call
in
xchg
sbb
and
stos
pop
movsl
cltd
ret
add
out
and
insl
mov
push
mov
mov
test
pop
cmp
add
or
lcall
push
inc
aad
mov
pop
repz
mov
xor
out
int
je
ljmp
insb
cmp
mov
xchg
enter
or
mov
mov
inc
add
jnp
cmc
pushl
jle
fwait
sbb
jecxz
inc
mov
jge
in
dec
int
sbb
icebp
in
sub
mov
fcomps
xchg
pop
stos
sbb
filds
sub
decl
cmp
aam
stos
int3
push
jecxz
xchg
pop
xor
in
sbb
add
add
push
fiaddl
je
decl
xor
js
arpl
add
fildll
add
decl
les
and
or
push
ds
xor
test
out
enter
mov
dec
movsl
push
addb
xchg
xchg
sbb
ret
std
mov
pushl
ficoms
lcall
cmpsb
and
mov
mov
mov
dec
sub
mov
and
je
shl
push
xor
or
jmp
mov
aam
inc
xchg
xor
mov
addl
decl
fists
add
mov
shll
inc
repz
inc
int
iret
dec
xchg
mov
pushl
pop
aaa
jp
aaa
jns
inc
fdivl
aaa
push
ja
stc
pop
mov
cli
or
inc
lock
jmp
inc
lock
jle
dec
fsubrl
std
loope
pop
mov
fdiv
mov
lcall
popf
int3
int
inc
loopne
inc
int3
dec
inc
sub
imul
xlat
ljmp
inc
cwtl
xchg
or
shrb
jg
pop
test
repz
call
mov
add
gs
into
fmul
add
or
fmull
orb
rorl
xchg
int3
mov
jg
faddp
pusha
jbe
outsb
insb
rcll
leave
decl
jle
insl
push
loopne
daa
and
adc
std
cwtl
divb
aaa
cld
or
mov
cli
cmpb
arpl
fadd
scas
xor
sti
stc
mov
in
call
mov
pop
cmp
jmp
negb
push
mov
ljmp
cli
ja
pop
lcall
ret
insb
push
mov
stc
popa
out
int
pushl
adcb
test
push
mov
in
adc
lcall
in
cmpsb
mov
test
pop
inc
or
pop
and
rolb
push
js
mov
test
cld
cmp
adc
cltd
jbe
cmp
xchg
and
and
incl
xchg
fisubrs
es
in
xor
dec
and
inc
clc
std
dec
int
js
dec
ret
scas
sbb
call
jecxz
test
push
mov
imul
lcall
add
jo
std
nop
orb
jnp
je
or
xchg
lret
aam
decl
lcall
add
cmp
sbb
js
cmc
aas
or
add
gs
jnp
or
pushl
jg
push
xchg
mov
test
loopne,pt
add
xchg
fisttps
in
fdivrl
arpl
push
xchg
mov
outsl
lods
xor
xchg
pushf
push
mov
sbb
ljmp
fsubs
aam
and
push
adc
mov
cwtl
adc
fadd
sar
jmp
cltd
mov
or
pop
leave
jnp
xchg
mov
jg
fsub
mov
sub
jmp
into
xchg
push
xchg
scas
mov
or
xor
popf
fbld
je
fisubs
xchg
inc
movsb
mov
sbb
pop
insb
loope
xchg
add
pop
mov
sahf
sbb
mov
pushl
std
cmp
dec
loopne
call
das
xchg
ljmp
mov
jnp
sub
mov
xor
popf
sbbb
decl
mov
loope
leave
xchg
jb
scas
cmpsl
jg
cmc
cmc
jge
test
cli
int3
mov
mov
mov
mov
pmullw
push
add
dec
push
sub
cmp
ret
mov
decl
pop
adc
pushf
mov
xchg
push
movsb
or
ja
movb
sbb
jge
jmp
pop
jg
out
sub
insl
lds
ss
mov
push
lods
push
dec
sub
jb
clc
push
xor
sar
jmp
movsl
lahf
inc
mov
pop
andb
dec
adc
inc
ljmp
incl
xor
lock
jb
in
fwait
ja
xlat
xor
cmc
xor
cmp
jg
lcall
mov
fs
data16
pop
mov
add
sub
push
cmpsb
sbb
std
incl
cs
imul
cs
sub
repnz
mov
notl
dec
ja
sar
mov
xor
es
outsl
jnp
cld
in
daa
add
les
mov
ljmp
pop
sub
inc
pop
inc
dec
sbb
sbb
mov
mov
je
test
dec
incl
inc
outsb
icebp
mov
mov
mov
cmp
clc
mov
incl
xor
mov
xor
movsb
push
je
inc
loopne
mov
jmp
and
push
stc
loope
add
cwtl
lcall
pop
faddp
sti
adc
pop
xchg
test
fcomip
mov
xchg
lahf
push
cmpsb
orb
popl
xorl
jp
jl
hlt
into
sbb
ljmp
jbe
sub
dec
xor
lods
ret
push
jge
jo
dec
mov
inc
and
or
xor
scas
adc
and
cmp
ret
jns
sarb
xlat
call
jb
nop
hlt
mov
adc
imul
je
repnz
push
jge
mov
aaa
ljmp
mov
inc
hlt
xlat
push
es
sub
or
incl
jnp
lds
inc
sub
sbb
pop
dec
add
ljmp
dec
add
in
cmpb
cmp
mov
push
xor
jecxz
pop
mov
xchg
cmp
fcomip
out
enter
das
inc
dec
in
cmc
sub
push
repnz
pop
sub
jo
into
test
incl
cmc
xor
xchg
mov
cltd
lret
out
inc
sub
ja
je
push
loop
gs
pushf
rcr
call
mov
adc
jae
arpl
aad
xlat
sub
loop
push
mov
sarl
fbld
cli
les
loop
mov
lea
jns,pn
movsl
pop
movsl
pop
mov
pushl
jno
mov
mov
enter
iret
add
js
mov
lods
dec
out
mov
add
jg
inc
add
outsb
or
adc
fistl
xor
push
test
lcall
movsb
je
ds
lock
mov
test
sbb
mov
pop
sti
dec
addr16
inc
ret
shl
inc
out
mov
xchg
mov
mov
rcll
test
push
movsl
adc
jo
pop
or
add
aaa
cld
ljmp
sub
aam
sub
aam
mov
and
popf
call
clc
add
lock
mov
je
notb
mov
cmp
xchg
mov
test
xor
aas
add
inc
lods
test
fidivrl
mov
loopne
mov
pushl
bound
push
jle
sub
mov
rcr
push
fdivrs
xchg
fwait
inc
adc
sti
out
cmp
pushf
cmp
imul
pop
lret
dec
adc
mov
push
xchg
and
inc
iret
cmc
lcall
enter
fidivrs
fbstp
add
xor
mov
dec
mov
fcomip
mov
xchg
fs
xchg
cmp
xor
popf
mov
push
pop
mov
cmp
call
cltd
mov
scas
sub
add
mov
add
xor
call
lret
into
cmp
incl
out
enter
test
call
stos
insl
loope
inc
clc
jge
jp
cmp
bound
pop
add
mov
nop
cmp
dec
jle
mov
inc
pop
dec
inc
mov
loopne
pop
sub
rcrl
sub
bound
idiv
lea
aaa
in
les
ljmp
mov
cmp
lods
xlat
cli
into
arpl
cli
jge
insl
and
stc
stc
push
push
ljmp
cli
popa
rcrb
push
add
push
mov
and
jge
lcall
and
ja
mov
or
lods
xlat
mov
or
sub
push
mov
pushl
inc
aad
lds
add
out
xchg
aas
in
push
loopne
lea
adc
mov
cld
pop
xchg
push
andb
sub
popf
and
out
lods
repz
dec
or
ds
sbb
decl
add
out
dec
mov
les
filds
loopne
jge
lret
xchg
mov
call
fldcw
jmp
orb
inc
ljmp
incl
mov
jbe
mov
jmp
in
movsb
mulb
xchg
jge
ret
in
and
popf
add
mov
fisubs
mov
addr16
mov
push
imul
out
fdivl
adc
notl
jbe
fcompl
in
xor
aad
aad
cld
in
cs
ret
adc
incl
sarl
and
sti
push
ficoms
and
cmp
pop
pushf
imul
jmp
xor
jg
xor
dec
stos
and
gs
loope
int3
pop
mov
pop
inc
xchg
inc
setno
mov
push
cmp
shrb
mov
and
rcrb
adc
jg
fcomip
jmp
rcrb
mov
int
aam
sub
mov
fs
cli
sbb
dec
mov
dec
xchg
decl
push
mov
push
or
hlt
jp
ret
decl
pushl
inc
test
dec
xor
or
push
jns
sub
push
push
shlb
push
add
inc
inc
shlb
test
stc
add
icebp
int3
or
popa
ljmp
adc
xor
cmp
push
ret
mov
pop
fsubrl
fwait
mov
sub
and
lds
push
negl
pushl
sub
sarl
and
insl
mov
inc
fdivs
sub
lcall
mov
sub
sbb
adc
shlb
xor
in
sar
movsb
jbe
pop
fcmovu
pop
lods
inc
dec
das
jmp
in
imul
mov
int3
outsb
jge
lret
gs
maxps
aad
pop
mov
mov
sbb
mov
pop
cltd
jo
movsb
cli
dec
jp
fnstenv
lcall
daa
jnp
and
cmp
into
mov
dec
cmp
sub
cmpsl
mov
in
cmp
repnz
mov
mov
cwtl
sub
out
notb
inc
sub
mov
mov
jp
incl
sub
mov
fucomp
dec
pop
setns
cmpl
ja
sti
pushf
mov
mov
std
dec
push
push
in
into
mov
cld
enter
sahf
xor
pop
xor
roll
adc
call
scas
mov
in
or
je
xchg
sarb
mov
pop
icebp
mov
jo
cmp
xlat
insb
xchg
cmc
or
xor
sub
movsb
push
jmp
fsubrl
jae
mov
or
sub
add
pop
aas
adc
lcall
pop
lahf
jae
push
and
ret
fs
das
pop
adc
pop
add
push
mov
incl
fmull
pop
xchg
jae
testb
jg
or
jg
fdiv
nop
cmp
movsl
mov
std
nop
or
aas
adc
std
jo,pt
add
daa
sub
adc
mov
test
call
lcall
dec
lret
es
pop
orb
fisubrs
test
mov
xchg
jno
clc
daa
cmp
cmpsb
rcl
insb
das
cli
dec
rcrb
cs
push
dec
pop
loopne
push
cmp
cmp
sbbb
adc
movsb
lcall
decl
pusha
shr
popa
mov
dec
enter
push
call
cmc
clc
lcall
ljmp
mov
mov
sub
js
jae
enter
push
and
ljmp
pop
jp
xor
mov
inc
int
adc
lock
call
mov
sahf
adc
fsubl
mov
out
lcall
cmp
insl
mov
inc
lret
incl
jb
push
rcll
cmp
ret
outsl
pop
and
outsl
mov
inc
sbb
adc
mov
pushf
stos
lea
hlt
jmp
xor
fildll
jg
ficompl
xor
add
mov
inc
es
pop
addr16
rcl
int3
ret
mov
call
in
dec
push
dec
cmp
xor
nop
fsubrl
sbb
rclb
pop
aam
notb
dec
adc
mov
dec
lods
xchg
cmp
decl
adc
sbb
rolb
inc
lods
jl
xor
inc
arpl
ljmp
test
push
or
sub
fdivrs
jns
sahf
into
imul
inc
mov
add
push
xorl
notl
faddp
out
cwtl
rcr
cmc
aaa
sub
pop
adc
fidivrs
sub
ljmp
pop
adc
push
cmp
cmp
jo
mov
mov
inc
mov
xor
jmp
les
sub
add
nop
and
xor
cmp
cltd
jmp
xchg
fsubrs
cld
pusha
and
mov
loop
push
aad
or
int
ja
jo
call
push
jb
ret
push
inc
movb
loop
push
scas
test
sub
lcall
and
cltd
rcrb
push
test
scas
sarb
pushf
out
leave
imul
rolb
push
sbb
aaa
fisubrs
shrl
ljmp
shl
push
xlat
adc
popf
pop
push
dec
lea
jmp
and
mov
pushl
aam
or
push
inc
fcmovbe
fisubrl
call
loopne
cld
adc
icebp
lods
icebp
pop
enter
push
pop
sarb
call
sahf
cmp
push
sarl
lret
dec
fsubrs
int3
scas
clc
jmp
pop
xor
inc
in
jmp
mov
inc
lock
or
xchg
lcall
lahf
dec
adc
cmp
dec
inc
cmp
into
test
mov
sub
cmp
inc
dec
sub
into
mov
add
or
pusha
sarl
mov
sbb
cltd
int
ljmp
ss
sbb
lret
leave
mov
fisubrs
mov
rep
sub
repz
lcall
inc
pop
mov
inc
stos
push
and
cwtl
andl
xchg
adc
in
repnz
ljmp
arpl
roll
leave
jmp
cmpsl
pop
lcall
dec
mov
ja
xchg
call
or
dec
movsb
xchg
aad
xor
lods
lds
pop
jge
cltd
mov
das
adc
xchg
and
add
dec
jmp
mov
stos
mov
xor
out
cmp
iret
sti
xchg
flds
ds
dec
jne
lods
ljmp
fdivrs
push
pop
jle
aas
lds
testb
push
stos
in
int
sub
add
call
cld
or
or
sbb
push
dec
ficoms
popa
mov
push
inc
add
call
push
rclb
or
rorl
fwait
int3
imul
scas
cli
mov
lahf
cld
xor
add
inc
ss
ljmp
das
aam
xorl
ret
data16
cmp
shl
int3
out
andb
cmp
es
scas
pushf
outsl
xor
std
inc
decl
xor
enter
jle
mov
jb
cld
mov
xchg
outsl
mov
out
mov
in
and
call
loope
and
fldcw
jle
mov
cmp
inc
sub
arpl
pop
std
inc
pop
lock
push
jmp
fwait
test
adc
xor
mov
add
adc
cmp
mov
xor
stos
rorb
pushl
imul
adcb
adc
int
push
enter
decl
ljmp
testb
mov
adc
sub
cmp
ljmp
sub
mov
test
popl
mov
call
mov
das
fistpll
std
lcall
xor
mov
filds
mov
cmpl
jae
scas
add
fldenv
and
dec
sub
fs
cltd
add
add
jecxz
jae
sbb
adc
cwtl
sarb
push
cli
jg
mov
daa
lret
add
mov
lcall
xor
jg
dec
xchg
mov
cli
ljmp
rcl
push
insl
push
lock
and
sbb
and
push
sub
push
imul
xchg
push
jle
and
movsb
push
xor
fbld
lret
fnstsw
add
xchg
js
adcb
adc
inc
cmp
dec
pop
sub
xchg
and
lods
pushl
int
xchg
push
push
rcl
push
int
shrl
add
stc
fdivr
fcomps
pop
push
mov
fistpl
js
popa
sbb
cld
cmp
sub
incl
loopne
xor
add
jp
cmp
jecxz
xchg
mov
aad
pop
decl
dec
push
into
inc
xor
mov
mov
lods
mov
jmp
xor
mov
mov
into
and
mov
mov
aam
fsin
call
cltd
incb
adc
lea
pop
aad
pop
testl
pusha
clc
decl
ret
shlb
mov
insl
sbbl
stc
ret
push
mov
ljmp
cltd
in
stos
push
lea
int
push
jecxz
cmp
scas
cltd
cmpsl
jmp
xor
test
lock
loopne
add
inc
sub
pop
add
decl
outsb
mov
fcoml
sub
pmuludq
xchg
xchg
mov
into
je
cmp
pop
fcom
jle
or
test
lahf
fdivs
sbb
lcall
cmpsb
test
inc
xchg
mov
jl
xorl
daa
ret
rorb
and
lret
sar
decl
movsb
sub
push
cmc
sub
xchg
mov
push
push
rorb
add
jl
sub
lcall
test
and
jns
icebp
out
cmc
add
xchg
gs
mov
cltd
es
lcall
test
adc
pop
push
test
mov
mov
mov
or
sub
decl
arpl
mov
loopne
bound
xchg
pop
inc
cs
sbb
ljmp
mov
jge
add
sti
inc
int
jle
dec
loop
inc
push
movsl
sbb
je
data16
jmp
adc
jno
mov
jecxz
add
push
jg
call
mov
stos
arpl
arpl
push
mov
sbb
inc
rcrb
scas
mov
leave
lret
push
les
mov
fcmovne
pop
adc
mov
aaa
loope
cmpb
sub
jle
inc
or
xor
in
call
outsl
cli
mov
mov
adc
sub
out
test
push
xchg
or
jbe
sar
lcall
mov
mov
sbb
cmc
cmpsl
mov
dec
stos
push
dec
jnp
cmp
stos
jmp
rcll
jp
sarb
loopne,pn
hlt
push
mov
repz
add
dec
scas
mov
xor
out
fdivl
cmp
inc
das
lcall
mov
insl
in
xchg
push
mov
and
mov
fcompl
adc
jmp
mov
xchg
sbb
mov
repnz
add
cli
ljmp
ss
addl
mov
rolb
jp
pop
mov
mov
clc
dec
into
cmpsl
jo
mov
or
idivl
cs
mov
fisubs
daa
cmp
jp
insl
mov
cmc
pushl
cmpsb
dec
xchg
inc
in
jecxz
or
mov
jno
adc
sub
mov
push
fdivrp
lcall
pandn
dec
lods
loopne
xchg
dec
xor
mov
dec
incl
hlt
mov
and
or
pushl
jns
js
ljmp
fiaddl
cmp
xchg
sub
add
ud0
pushl
inc
pmullw
nop
sub
lods
rclb
cmp
stos
and
jnp
ljmp
daa
pop
push
iret
push
jle
out
or
sub
jge
test
les
or
jmp
rorl
fstl
sbb
in
loop
mov
mov
cmp
out
mov
sub
push
mov
add
or
inc
xchg
adc
icebp
dec
icebp
xchg
mov
rcrl
add
dec
sbb
mov
sub
call
call
aad
jae
cmp
xchg
lods
dec
dec
cmp
dec
push
mov
xchg
test
inc
shll
ret
fcompl
hlt
or
loop
xorb
cmp
cmp
mov
ficomps
sub
rclb
enter
jae
insl
ss
decl
cld
add
add
xchg
mov
mov
mov
jl
ljmp
bound
stos
les
jle
xor
jle
pop
mov
lock
pushl
jbe
sarl
orb
and
stos
cwtl
movl
leave
shrl
bound
in
out
xchg
fldl
pusha
push
out
clc
pop
sahf
inc
pop
in
fadd
xchg
repz
fnstenv
lcall
shrl
xor
sub
dec
notb
xor
sbb
pop
or
jmp
ucomiss
addl
mov
mov
mov
add
jmp
fstl
incl
xchg
xor
dec
insb
push
or
cld
insl
stc
enter
lods
insb
xchg
je
aam
psrlq
into
cmp
incb
cmpsb
ret
ljmp
dec
push
cmp
cmp
mov
shl
mov
cmpsb
dec
int
adc
out
jp
adc
inc
and
pop
shr
lods
es
mov
insl
rorl
sti
ljmp
out
insb
out
xorb
push
cmp
sub
out
scas
mov
inc
mov
mov
jg
shl
dec
xchg
adcl
mov
add
repnz
nop
inc
inc
lcall
call
and
mov
or
lahf
aad
fcomip
imul
movsl
mov
add
lcall
lds
cmp
repnz
int
sbb
sub
xchg
mov
repnz
and
popa
arpl
repz
outsl
push
pop
repnz
jbe
cmp
xor
data16
jb
mov
push
xchg
jmp
cs
mov
dec
mov
lds
jns
stos
cmp
call
imul
imul
or
ror
adc
mov
jmp
pusha
mov
xor
push
rorl
into
push
addl
sbb
inc
shlb
dec
stc
and
mov
lcall
mov
lret
pop
xorb
cmp
fsubl
decl
adcb
outsb
scas
or
or
add
daa
inc
push
aas
xchg
psllw
jns
mov
call
add
mov
test
mov
scas
xchg
xor
or
testl
aaa
fmul
lods
pop
lods
mov
push
nop
jns
repz
mov
insl
iret
insl
jnp
add
mov
dec
fsts
arpl
lods
mov
xor
jmp
test
sbb
ss
jg
rcr
mov
jno
xchg
mov
pop
rcrb
xchg
enter
repnz
incl
testl
cmpsl
les
leave
dec
fcoml
addr16
in
mov
in
inc
repnz
lret
fucomp
rcll
mov
and
cli
sbb
les
sbb
loope
repz
sbbb
add
into
test
pop
sbb
shr
je
mov
cwtl
mov
push
call
xor
or
xchg
add
jae
mov
aad
test
push
loopne
pusha
push
or
decl
inc
cmc
cwtl
int3
test
clc
outsb
stos
cmp
in
inc
imul
pop
push
stos
mov
decl
jno
mov
mov
and
jae
mov
mov
mov
bound
mov
nop
mov
mulb
adcl
call
dec
mov
sahf
icebp
adc
sub
fsts
push
out
add
inc
xchg
into
xor
adc
lods
xchg
fnsave
pop
xor
outsb
notb
outsl
lret
out
jbe
xor
add
lods
mov
mov
lock
jmp
daa
sub
les
gs
xchg
or
xchg
push
js
ror
mov
mov
in
push
dec
mov
jecxz
int
loopne
movsl
cld
fwait
popa
add
inc
enter
inc
jge
and
std
lcall
dec
lock
cs
cmpsl
add
cwtl
int
jbe
clc
mov
lcall
dec
lcall
sahf
fs
dec
adc
test
pushl
inc
cmp
cmp
outsb
xlat
xor
rorb
cmpsb
andl
sarl
leave
aaa
call
add
push
scas
adc
fcos
dec
push
dec
xchg
aad
lds
add
mov
mov
imull
xor
dec
xchg
mov
pushl
scas
lods
incl
popf
push
push
dec
jbe
clc
nop
inc
pop
call
push
sahf
inc
mov
enter
mull
or
enter
lock
lcall
pushl
imul
int3
int
jge
and
decl
jnp
or
push
mov
mov
cmp
shlb
nop
in
push
add
mov
fstl
lcall
mov
popa
aas
cmp
dec
scas
or
loope
dec
rcrl
and
mov
inc
ljmp
mov
lcall
lods
hlt
test
addl
hlt
std
outsl
xchg
jle
lcall
mov
fisttpl
mov
pushl
aam
dec
and
jo
mov
inc
mov
sub
movsl
int3
lret
incl
dec
addr16
adc
lret
mov
aas
stos
mov
sub
sbb
add
in
rolb
cwtl
ja
pushl
adc
or
dec
int3
imul
mov
in
je
pop
sar
dec
imul
or
push
dec
fldenv
lcall
loopne
pushl
mov
add
pop
movsl
es
jbe
lods
lret
jl
sbb
mov
dec
idiv
pop
mov
das
inc
cmpb
dec
mov
addb
fnstcw
call
jmp
shll
fwait
jecxz
inc
lret
cmc
adc
std
shll
mov
fwait
incl
ljmp
cltd
cmpsb
dec
dec
sahf
mov
cmp
lahf
ljmp
mov
insb
xchg
fs
popf
push
movsl
roll
scas
aam
js
notb
push
sub
pushl
jbe
lods
test
and
pop
mov
sbbb
mov
mov
hlt
fisttps
js
jp
push
sub
adc
jmp
jmp
loope
das
sub
push
push
stc
sbb
fisttpll
in
cmp
cmp
aaa
cld
decl
nop
into
inc
xor
jle
inc
lds
insl
leave
popa
push
cld
xlat
shrb
mov
fcmovbe
into
cld
lret
ja
and
and
jg
add
ds
nop
add
cmp
xchg
lds
shll
leave
stc
ljmp
std
incl
jmp
dec
sub
gs
or
fwait
xor
andl
mov
pushl
pop
rcrl
fistpll
outsl
test
xchg
mov
into
das
dec
or
mov
fucom
fldt
aad
fcompl
jmp
cwtl
test
bndstx
test
mov
decl
call
not
xor
les
js
test
cmp
sbb
andb
into
mov
push
sbb
out
push
mov
std
je
pop
add
and
mov
push
call
mov
test
and
ror
lods
dec
jecxz
mov
scas
sub
dec
lahf
inc
push
push
sar
call
xor
in
imulb
fcoms
ror
mov
add
imul
stos
out
cmpsb
andl
mov
test
add
sbb
negl
lods
pop
cld
ljmp
clc
icebp
mov
lret
iret
mov
pop
sar
dec
fstl
movsl
imul
dec
cld
incl
ret
xchg
shrl
cwtl
or
pop
addr16
push
ficompl
or
decl
push
fstl
push
pop
nop
lds
arpl
rcrl
ret
or
insb
xor
nop
stc
stos
dec
imul
push
sub
js
cs
incl
pusha
jae
jb
and
int
xlat
sahf
movsb
icebp
jmp
mov
mov
lods
outsb
ljmp
or
sbb
dec
loopne
jnp
xlat
cmp
dec
aad
mov
mov
dec
lret
pop
sub
dec
test
jecxz
adc
int3
pop
mov
mov
adc
pop
push
inc
mov
iret
cmc
push
pusha
or
jno
pop
xchg
fisttpll
not
mov
test
div
jecxz
push
add
add
jb
ret
add
lcall
fstpl
jae
add
cmpsb
xchg
lea
mov
hlt
push
xlat
mov
xor
pushf
movsl
fcoms
cmp
mov
ja
aam
mov
and
idivb
xchg
incl
inc
das
or
jns
incl
xor
or
push
mov
lret
adc
test
mov
mov
mov
sbb
mov
fdivs
das
sub
xlat
xchg
xchg
out
fstpl
jmp
or
andl
jle
mov
ljmp
mov
sub
shl
sahf
add
adc
adc
sahf
push
mov
shr
stc
cltd
gs
fcmovbe
push
movb
decl
outsb
and
psubw
sub
xchg
sbb
jmp
insb
mov
loope
scas
clc
mov
push
das
ret
pop
inc
sbb
js
add
and
pop
sub
add
lock
cmp
test
aas
andl
jg
dec
daa
fstpl
out
sbb
cmp
dec
xor
mov
daa
inc
popa
jns
adc
mov
lcall
mov
je
sbbb
out
leave
cmpsl
scas
fwait
lds
movsl
xchg
mov
lahf
insl
jo
lcall
fldl
cmp
jge
jmp
mov
or
cltd
sbb
cmovns
fisttpll
xor
insb
mov
xchg
sub
subl
ret
dec
in
jp
xchg
and
jmp
daa
cltd
popa
mov
pushl
cmp
mov
imul
mov
cs
les
enter
mov
in
inc
orb
and
movsl
mov
shll
cmp
mov
orb
ss
subl
jmp
mov
test
mov
adc
inc
jns
cmpl
mov
dec
push
cmp
ret
xor
push
dec
sti
push
adc
addr16
mov
jmp
adc
jmp
call
loop
add
cli
loop
test
jg
and
test
adc
fwait
sbb
mov
arpl
jno
aad
add
cs
dec
xchg
cld
dec
or
or
jnp
das
fwait
sub
lret
inc
in
push
cmp
push
mov
or
mov
mov
adc
mov
pusha
mov
call
ljmp
roll
test
std
setae
mov
fs
add
or
lcall
jle
cmp
clc
out
fs
push
outsl
pop
adc
jns
jmp
mov
setne
sarl
mov
into
sbb
inc
and
add
mov
push
popf
sub
ljmp
repnz
xchg
fs
inc
int
in
stc
test
jno
push
mov
adc
out
cmp
fcomip
call
lea
repnz
dec
pusha
jno
fidivrl
stos
sbb
fstps
cmp
mov
push
test
cmp
out
lods
mov
loope
jnp
bound
fld
cmp
ljmp
add
mov
xchg
int
jnp
daa
sub
dec
popf
movsb
enter
pop
inc
fimull
call
mov
push
insb
lock
mov
jno
sar
ljmp
loopne
aad
sbb
cmp
scas
or
orb
cmp
jo
pushl
lret
aam
nop
xchg
int
jns
fcmove
int3
cmp
in
push
mov
out
andl
jmp
pop
stc
jns
jne
or
enter
test
enter
push
fadds
pushf
nop
push
dec
sar
das
cmc
cmp
sbb
inc
pop
add
push
lret
ss
or
pop
ret
es
sbb
xor
and
decl
jmp
test
pusha
test
sub
push
mov
aad
dec
cs
cmp
pop
int
mov
mov
roll
sbb
rorb
lods
inc
adc
call
fisttpl
stos
jno
jne
adc
loope
push
adc
insl
sub
jg
call
rcl
mov
jnp
cmp
dec
mov
loopne
fisttps
and
and
cmp
mov
and
or
mov
decl
push
shlb
mov
and
aam
xchg
lea
mov
adc
test
adc
and
repnz
pop
fldt
out
jmp
das
sar
mov
xchg
add
mov
mov
call
pop
std
xorl
fiadds
mov
mov
add
push
pusha
inc
mov
clc
adc
mov
add
or
cltd
cwtl
add
mov
ljmp
ret
imul
hlt
test
bound
cmpsb
jbe
xor
fcomps
mov
incl
enter
outsb
xor
xchg
fldt
dec
scas
sbb
fisubl
fimull
jl
jecxz
in
pushl
call
subb
lods
dec
push
mov
ja
fstl
int3
cs
fdivrp
jns
and
inc
mov
and
leave
push
outsb
cli
mov
jnp
mov
movsb
adcl
call
inc
jb
push
mov
fildl
xchg
fldt
je
jb
sub
xor
out
enter
jmp
decb
mov
add
sbb
sbb
mov
lea
and
lcall
xor
inc
push
cli
xchg
je
scas
mov
inc
add
rcr
jp
roll
mov
xor
mov
scas
add
hlt
pop
cmp
stos
lds
and
ljmp
fnstenv
push
in
iret
ss
mov
jbe
dec
test
xchg
ljmp
mov
push
dec
jmp
adc
jl
or
sub
xor
call
pop
bound
mov
into
inc
mov
sub
pop
sub
xor
mov
lcall
test
stos
arpl
and
dec
rclb
aas
lret
cmp
cmpsb
out
cmpl
subb
or
or
dec
cmpsb
scas
and
and
xchg
xor
mov
decl
ret
mov
sahf
scas
xchg
xchg
add
mov
daa
movsb
loop
pop
pop
sti
and
fwait
ret
cli
inc
jmp
push
jb
xlat
and
cwtl
vxorps
fsubr
add
xor
icebp
and
aam
popf
xchg
jg
ds
popf
jbe
mov
mov
into
or
mov
mov
cmp
and
rcrl
inc
pop
add
jbe
mov
sub
test
fildl
repz
push
movsl
mov
add
repnz
lret
xor
loop
add
mov
lea
shl
mov
dec
mov
jge
push
xchg
ss
stos
test
stc
outsl
sahf
shlb
add
dec
js
xor
out
clc
pushl
std
fdivs
and
fnstsw
mov
inc
repnz
out
std
push
decb
and
cmp
mov
adc
and
sbb
jmp
das
mov
cmpsb
mov
aam
sub
push
scas
int3
test
or
inc
lret
or
or
out
mov
inc
imul
decl
mov
mov
or
iret
lahf
sub
jne
fucom
popf
popa
ss
scas
das
dec
xchg
dec
push
xchg
lcall
sub
ljmp
sub
sub
sub
dec
test
jmp
add
push
push
movlps
mov
inc
sbb
add
icebp
outsl
das
enter
call
into
add
movsl
adc
add
jp
fst
inc
xor
jmp
cmp
decl
movsl
cmp
adc
movsl
xor
push
in
fcoms
xor
leave
dec
in
pop
sar
jg
in
sbb
repz
pop
mov
and
mov
or
call
push
dec
stos
sahf
dec
xor
xchg
jno
pmaddwd
and
pop
mov
ret
or
sbb
sub
sbb
add
mov
mov
xchg
icebp
xchg
in
cmp
or
shlb
and
cmp
adcb
sbb
push
sti
push
cmp
popf
jno
outsb
sbb
and
jb
push
lods
inc
cli
add
test
int3
xor
in
xchg
pop
repnz
aad
idiv
mov
js
sbb
sub
add
sar
lcall
shlb
test
lcall
fstpt
lret
ljmp
in
repz
sbb
lret
xchg
sbb
clc
or
cs
add
sub
stos
lret
clc
jg
lods
pop
call
mov
into
call
aam
in
cmpsl
cs
out
in
mov
push
addl
push
imul
inc
or
sbb
xor
cmp
jg
incl
xor
stc
jl
in
movsl
pop
sbb
dec
aas
push
inc
cwtl
adc
push
jmp
stos
mov
int
jmp
int
dec
rorb
fcoml
jnp
fwait
scas
sti
cltd
mov
lcall
dec
ret
lret
dec
and
call
adc
stos
cmp
sbb
cld
xor
in
incl
mov
push
cld
mov
ds
add
mov
ret
mov
jmp
pop
in
inc
ret
mov
xchg
shr
inc
nop
movb
ret
inc
sbb
decl
and
rolb
sbb
mov
jno
lds
pop
scas
push
adc
cmp
adc
stos
cmp
jp
cld
cmp
inc
lds
push
sbb
and
cli
jge
pushl
sbb
sbb
test
cmp
lahf
sbb
lds
mov
dec
iret
push
jbe
pushl
enter
inc
push
sub
int
sub
aas
negl
mov
push
lret
inc
sarl
adc
dec
inc
pop
fiadds
mov
adc
mov
mov
cmp
xchg
and
jne
sub
std
mov
pop
scas
xchg
call
jle
arpl
test
test
and
incl
es
popa
inc
jl
lret
push
xor
xor
add
call
std
jo
xchg
mov
dec
fdivl
lahf
inc
insl
and
add
lcall
in
inc
and
in
or
sub
pop
pushl
xchg
mov
push
xor
xchg
cmpl
cmp
and
ljmp
push
add
pop
sti
andb
mov
mov
cmpsl
or
sbb
jg
jl
and
dec
sbb
pop
xchg
fcomps
add
jb
mov
pop
enter
aad
shlb
loope
cmp
lock
aad
push
popa
add
ficoml
pop
push
mov
sti
cmp
andl
xchg
repz
inc
mov
loopne
fmuls
xor
jge
imul
out
outsb
imul
test
lcall
rep
adc
mov
or
sub
je
push
insl
xchg
cmp
push
int
or
jmp
jmp
or
gs
arpl
ror
std
inc
xor
jg
std
ffreep
dec
scas
inc
hlt
jmp
push
xor
xchg
cltd
test
fmull
mov
decl
inc
cmc
pop
test
inc
pop
lock
xor
ss
imul
jbe
gs
xchg
mov
xchg
test
sbbb
push
insl
cmp
divl
call
mov
in
push
int
xlat
clc
addb
daa
sbb
arpl
ja
dec
out
imul
xchg
fs
stos
mov
inc
cmp
jns
enter
adc
and
push
adc
stos
dec
arpl
push
fwait
cs
js
lret
xor
lds
cmp
mov
cmp
stc
dec
pop
pop
int
lret
lahf
fcom
loopne
popa
jge
repz
mov
mov
sub
dec
xorl
push
jns
adc
sahf
mov
pop
lcall
dec
lds
cltd
stos
cs
outsl
icebp
cmp
dec
push
hlt
jge
mov
shll
inc
pusha
mov
jmp
dec
stos
aas
push
mov
or
sub
add
jmp
ljmp
inc
leave
mov
xchg
ljmp
sbbb
and
jmp
inc
clc
cmp
repz
iret
push
inc
cmp
adc
in
dec
inc
sar
xchg
cmp
fnstsw
jg
jmp
add
sbb
jl
add
jae
mov
xchg
jge
push
inc
cmp
decl
jae
leave
mov
cmc
dec
popa
bound
and
pop
icebp
push
inc
in
xchg
xchg
scas
mov
lcall
pop
sub
popl
in
dec
inc
decl
cmp
push
sarb
mov
mov
loop
pop
mov
add
pop
pop
ja
lcall
std
je
stos
stos
fnsave
movsl
lods
in
adc
mov
xor
and
inc
clc
dec
xchg
xor
into
aaa
inc
push
dec
in
les
inc
hlt
inc
adcl
das
inc
decl
push
push
push
jp
adc
movsb
push
int3
call
add
test
mov
test
pop
inc
mov
xlat
jecxz
mov
add
dec
sti
repz
mov
pop
sub
sbb
ret
call
jge
call
int
dec
inc
xchg
stos
cwtl
leave
xchg
jae
call
nop
inc
incl
aad
ds
shl
cwtl
inc
movsl
int
xchg
xor
cmp
inc
stos
dec
xchg
roll
dec
and
fimuls
stos
xchg
xor
xor
jno
imul
decl
pop
iret
std
sub
test
push
sub
out
mov
jmp
mov
and
push
mov
ja
sub
sub
sbb
clc
xchg
das
add
pop
ljmp
add
sbb
mov
lahf
pop
mov
je
mov
mov
dec
xor
adc
sarb
add
push
lcall
scas
int3
add
xchg
sub
adc
cltd
dec
inc
or
inc
popa
sub
jg
pop
clc
insb
cvttps2pi
test
sub
incl
dec
in
outsb
fdivl
dec
mov
pop
jb
xor
mov
inc
inc
into
inc
pop
sbb
aaa
sub
into
pop
es
in
pusha
aaa
and
adcb
pushl
cmpsl
push
or
mov
ja
aad
fdivrl
mov
lcall
cs
lea
mov
inc
inc
push
inc
jae
push
ljmp
cs
push
dec
movsb
adc
sub
mov
xorl
stos
mov
inc
into
hlt
mov
imul
add
dec
fcomip
cld
inc
insl
std
pop
jne
cmp
push
loopne
outsl
shl
xchg
loop
aam
int3
inc
xchg
cmpsb
stos
icebp
mov
je
pop
stos
test
lahf
cmpsl
sbb
out
push
mov
cmpsl
ret
push
std
aam
test
and
cld
decl
push
ja
nop
add
insb
mov
aaa
mov
jp
leave
sub
in
aam
lcall
mov
and
lahf
jbe
push
int
fisubrs
cmp
insl
fildl
inc
jmp
orb
sbb
mov
inc
fdivl
dec
dec
jg
sub
sahf
push
mov
mov
dec
outsl
cmp
and
pop
adc
jge
mov
nop
ljmp
and
mov
in
push
in
test
in
lea
sarl
stc
mov
mov
je
jns
push
xor
dec
aas
mov
cmc
in
lea
adc
insb
xor
jg
cld
in
mov
dec
push
jge
icebp
dec
ret
jmp
pusha
pop
xor
call
sub
cmp
repz
mov
cmp
jne
stc
xchg
subl
mov
pop
mov
dec
decl
mov
test
stos
daa
aad
pusha
xchg
aam
dec
je
mov
adc
add
sub
fidivrs
or
in
dec
jmp
sbbl
pushl
rol
xchg
dec
xlat
sub
roll
cmpsb
arpl
fwait
aad
lret
mov
incl
pusha
cmc
cli
dec
mov
out
cmpsl
into
call
or
imul
rorb
xchg
pushl
das
xchg
dec
push
mov
and
lods
dec
xor
das
in
jle
and
or
jns
addr16
push
mov
xchg
lods
and
mov
push
inc
cmp
add
fwait
das
and
pop
incl
dec
jne
mov
sbbl
add
xchg
rcr
pop
cmc
test
repnz
ljmp
push
pop
in
scas
arpl
jp
cmpl
ljmp
das
fnsave
sub
andl
jno
in
jo,pn
lcall
cmc
ss
imul
mov
dec
testb
mov
lcall
ja
aaa
xchg
in
out
jg
in
test
stos
stos
xchg
and
sub
mov
push
fsubr
and
cmpsl
divb
xchg
xchg
jns
nop
add
push
mov
lcall
ret
jmp
cmp
mov
aad
dec
test
ja
stos
enter
mov
test
push
aas
add
add
jecxz
or
xchg
inc
push
scas
inc
test
inc
sub
shll
mov
dec
out
pop
ds
ret
mov
sub
cmp
mov
lret
lock
sti
mov
inc
push
sub
into
insb
nop
push
outsl
add
mov
ljmp
or
or
pusha
xor
mov
loop
sub
fstps
cmpsb
lcall
ljmp
mov
sbb
add
add
lock
jge
mov
inc
fisubrl
mov
out
clc
ljmp
jg
cmp
es
nop
sarl
mov
std
inc
push
in
mov
decl
stos
ret
pop
dec
pcmpeqw
adc
adc
dec
sti
xchg
sbb
add
pushl
dec
sbb
subb
stc
inc
ret
sub
mov
inc
clc
add
daa
addr16
lcall
cltd
inc
pop
cs
subb
or
mov
cmp
movsb
pop
js
dec
jg
movsl
pushl
retw
jle
xor
and
aaa
dec
lock
jmp
mov
cmpsb
pop
popf
pop
sub
xor
sub
decl
jecxz,pt
sbb
es
mov
inc
sti
test
add
inc
aas
push
pop
es
not
mov
xor
add
fildl
jmp
cmp
decl
or
jge
mov
aaa
lret
iret
xor
pop
imul
sbb
mov
fwait
aam
pushl
sahf
dec
das
repnz
cmp
cmp
and
push
mov
imul
dec
ret
repnz
repz
ljmp
sar
jmp
push
std
xchg
fwait
iret
hlt
cmovns
ljmp
fsubrs
ror
sar
sub
mov
jp
mov
out
decl
xchg
movsl
fdivp
mov
rorb
and
jmp
repz
clc
test
mov
sbb
test
bnd
xchg
inc
andb
jne
mov
aad
mov
call
repnz
sti
ja
adc
ret
sahf
in
stos
adc
add
mov
ret
dec
adc
pop
repz
into
popa
inc
jp
lret
or
lcall
in
jge
int
sub
lods
jle,pn
cmp
sbbb
mov
jg
xorb
ja
ret
dec
clc
test
fiaddl
inc
loop
mov
cwtl
mov
mov
stos
sbb
mov
xchg
scas
xchg
xorb
int
xor
movsl
iret
dec
push
aad
jnp
push
inc
xor
or
push
jl
push
orl
push
je
mov
and
and
int
lea
adc
xor
getsec
icebp
jg
lcall
call
frstor
and
sbb
pop
fnstcw
shrb
inc
and
xor
cwtl
inc
fdivr
mov
xchg
das
jae
mov
imul
out
xor
imul
jmp
mov
mov
enter
pusha
mov
in
dec
cs
xchg
inc
insl
loop
dec
jbe
push
pop
lds
repz
test
xlat
push
pop
in
mov
mov
mov
adcl
fidivrs
mov
mov
dec
dec
or
mov
mov
fiadds
les
pop
repnz
add
mov
push
call
mov
nop
aas
ror
inc
jbe
ljmp
push
into
cmpsl
mov
push
stos
xor
inc
jnp
sub
scas
push
jg
mov
repnz
in
ret
and
xchg
cltd
add
std
mov
popf
jg
mov
sbb
stos
shll
jmp
inc
or
push
push
mov
int
sbb
sbb
cmp
or
mov
out
popf
xchg
pusha
int
adc
jmp
nop
sub
mov
push
loop
jb
mov
jns
ljmp
push
lods
push
test
repz
jne
es
in
cwtl
jne
ret
shlb
push
push
repnz
push
ljmp
out
ret
mov
pop
push
addl
dec
sti
in
inc
in
mov
bswap
pop
fsubl
add
daa
addb
xor
imul
mov
pop
or
push
sub
in
idivl
jno
cmpsl
ds
sbb
cmc
or
out
pushl
scas
mov
fwait
push
loop
movsb
or
pop
sbb
push
add
rcrl
mov
std
lcall
test
cmpsl
shrb
cmp
mov
std
xchg
clc
int
inc
call
jmp
sbb
cmp
dec
gs
in
stos
lret
and
and
aad
out
mov
cmp
inc
or
xor
jle
sub
xchg
or
mov
lret
pop
aaa
std
das
clc
cmp
in
xor
pop
adc
pop
and
inc
cmp
jnp
decl
mov
aam
daa
cmp
icebp
fldl
int3
int
xchg
jle
push
add
inc
ljmp
adc
mov
pop
mov
jno
sbb
lcall
fdivrl
push
jbe
push
hlt
out
gs
or
inc
push
incb
call
in
addr16
sub
repnz
lods
lea
in
mov
jbe
icebp
xchg
and
ror
mov
add
inc
sbb
dec
stos
mov
jle
cs
incl
push
ret
or
push
jg
add
mov
sub
in
push
insl
push
enter
incl
and
loop
xor
loope
rcrb
pop
fmull
jmp
jnp
fimuls
cmp
sub
repz
mov
cmp
or
lret
mov
jo
pop
shrl
xchg
dec
jmp
ret
xor
incl
rcr
sbb
inc
and
ja
push
std
ja
adc
and
bound
daa
mov
jmp
sub
sub
pop
lods
mov
inc
mov
inc
dec
lods
lret
roll
or
xchg
icebp
ljmp
sbb
outsb
insl
mov
jl
jmp
or
cmpsl
fs
adc
sbb
lret
out
insb
ljmp
lds
cmp
jmp
mov
pop
add
mov
mov
dec
xchg
mov
call
aas
inc
inc
inc
fnstcw
push
stos
jmp
jbe
daa
xchg
inc
fsts
mov
pop
std
pushl
push
cmp
std
cmc
xchg
add
mov
insl
movsb
mov
incl
inc
inc
mov
xchg
sbb
xor
lcall
push
gs
imul
mov
mov
adc
inc
jmp
xchg
mov
dec
lret
in
mov
lock
call
xchg
mov
mov
gs
addb
iret
ja
dec
call
pop
lds
das
shrb
sbb
push
in
scas
dec
dec
cmpsl
or
dec
jmp
iret
and
xor
sar
sub
imul
cli
pop
pop
stc
andb
cmp
pushl
dec
mov
push
fnsave
mov
mov
push
test
mov
jg
xchg
es
xor
int3
and
in
stos
or
aas
in
ret
sti
mov
loopne
incl
lret
aam
movsb
cmpb
clc
or
insl
mov
and
pop
sub
mov
insl
stos
leave
mov
mov
dec
nop
xor
inc
test
dec
or
xchg
stc
out
imul
subl
enter
jle
cmp
xor
push
jmp
mov
jo
addr16
out
xchg
xlat
xchg
lahf
sub
mov
and
loope
pusha
or
mov
xchg
xor
stc
std
ret
loop
and
dec
sbb
sub
in
inc
jnp
push
out
test
incl
mov
cli
shlb
rcrl
ret
add
decl
pop
cld
sub
leave
stos
js
call
rcrb
imul
add
loopne
nop
nop
mov
mov
nop
pop
lock
lods
sbb
mov
push
enter
sbb
push
popf
jmp
jmp
fistpl
sahf
lret
pusha
mov
push
je
mov
cmp
mov
incl
movb
jns
add
or
scas
or
xor
or
add
push
lds
in
ljmp
and
or
addl
cmp
inc
bound
mov
std
out
cli
and
xor
push
pop
push
push
pop
push
ljmp
lock
pushl
cwtl
push
sbb
and
mov
sub
enter
leave
movb
mul
loope
inc
out
ljmp
sbb
scas
sub
mov
addr16
inc
mov
xor
mov
pop
xchg
gs
sub
mov
subb
adc
shlb
ljmp
lods
push
cmp
add
sub
jle
adc
daa
mov
imulb
in
cmp
hlt
cmp
sahf
inc
ret
push
inc
out
fcompl
frstor
or
adc
cmp
cmp
push
decl
add
sbb
ret
add
fisubrs
sarl
out
data16
mov
sub
jle
pop
jns
sbb
stos
xchg
mov
push
aad
and
lcall
xchg
cmp
in
addr16
aam
lods
or
iret
clc
xor
ja
inc
pop
mov
adc
jmp
push
cmp
mov
sti
jns
push
in
call
sbb
jno
mov
aaa
arpl
mov
scas
inc
fdivrs
clc
stc
fadd
sbb
out
js
push
cld
fstpt
lret
add
ljmp
jb
push
into
push
sahf
loopne
mov
sub
xchg
mov
jle
hlt
pushf
mov
dec
lock
sub
jle
inc
mov
mov
out
decl
mov
test
mov
pop
and
inc
stos
arpl
jge
add
bound
jecxz
mov
jge
and
push
lret
jl
pop
in
iret
xchg
or
fbstp
dec
pop
pop
pop
decl
cmpsl
xchg
ret
jge
lret
ret
insb
icebp
adc
fcomip
adc
data16
sub
pop
jg
stc
add
xchg
cmp
call
in
cli
int
add
loope
stos
push
int
xchg
push
clc
mov
nop
cmp
les
test
pushl
scas
scas
loop
insb
inc
and
jne
xor
mov
outsb
pop
xchg
out
and
hlt
sbb
fdiv
es
flds
pushl
not
push
jge
test
sbb
or
add
out
xchg
xchg
call
arpl
adc
jmp
out
xor
dec
cs
repnz
mov
es
imul
lret
hlt
cmp
xchg
xchg
sub
cmp
mov
jg
jns
mov
sub
jmp
cld
lock
shlb
cltd
dec
das
push
cld
jmp
out
jmp
jb
loopne
loope
sbb
mov
fs
fdivrp
mov
les
and
push
icebp
jp
shr
mov
or
fwait
loope
sbb
push
inc
push
cmc
sbb
push
mov
pop
out
cmp
sahf
test
movsb
xchg
push
jno
xor
push
frstor
jno
orl
push
or
mov
pop
fists
lcall
int3
and
jne
out
mov
dec
push
sub
jo
jne
decb
test
outsb
mov
lcall
xor
mov
sub
mov
inc
push
and
mov
lea
test
sar
popa
das
jge
in
mov
mov
out
jo
push
jle
jg
xchg
inc
mov
adc
xor
xor
push
aas
pop
sub
inc
jne
or
leave
mov
fptan
jl
xchg
std
movsb
fsub
and
pop
add
inc
outsl
insb
mov
es
dec
fs
daa
loopne
xor
lcall
adc
push
xchg
mov
mov
dec
jne
jp
mov
jmp
and
test
push
mov
push
push
and
xor
pop
jmp
mull
arpl
mov
fisubs
jo
push
or
mov
decl
lods
xchg
push
clc
ret
mov
imul
mov
sub
jle
stos
inc
inc
xor
testb
loop
inc
fisubrs
sub
decl
adc
sub
ljmp
cltd
mov
jo
mov
sti
int
mov
sbb
loope
mov
mov
nop
jae
jae
in
push
out
mov
pop
mov
es
test
and
scas
int3
fs
jb
mov
push
std
into
dec
push
icebp
aaa
mov
add
outsb
cmp
jnp
sti
mov
dec
push
lret
cld
sbb
cmp
outsl
scas
inc
in
jmp
mov
cmp
in
scas
loope
ja
push
mov
sarl
push
xor
cmp
inc
xlat
jecxz
data16
adc
notrack
push
jnp
mov
xchg
movb
ds
jp
lahf
shr
and
mov
mov
stc
es
add
and
pushl
and
mov
pusha
test
or
jo
ljmp
int
inc
shlb
mov
jmp
incl
sub
cmp
xchg
xor
sub
inc
inc
ja
in
jns
psllq
call
mov
js
xchg
cltd
mov
lahf
mov
sub
mov
xchg
hlt
add
mov
stc
ret
mov
jmp
inc
adc
ret
cmp
xchg
dec
mov
add
stos
mov
sarl
add
std
xchg
xor
popa
ljmp
call
ss
mov
ret
lcall
out
push
sti
pop
dec
decb
cmp
outsb
cmc
cmpl
aam
add
stos
jmp
sub
push
popa
xor
add
jbe
aad
or
mov
lcall
mov
xor
jbe
std
ret
cmc
xchg
xor
pushl
cmp
dec
dec
or
stos
fldl
mov
lahf
push
ljmp
fs
das
and
in
in
sub
jmp
jnp
cld
sbb
incl
jecxz
dec
push
je
inc
cs
xor
roll
shlb
add
rol
push
adc
ljmp
xlat
and
inc
mov
push
cmpsl
lods
outsb
aam
mov
cmc
mov
int3
orb
ljmp
lcall
mov
sbb
test
add
pop
xor
arpl
mov
ljmp
xor
sti
jmp
icebp
push
add
outsb
rcll
cmp
ljmp
pop
lret
stc
stos
push
pop
mov
mov
sub
repnz
decl
push
lock
pop
fisttpll
dec
push
dec
add
mov
jo
mov
inc
addr16
cmpsl
popf
in
incl
aad
inc
fwait
out
pop
shrb
aam
pusha
icebp
cs
jnp
mov
decl
jle
rorb
and
mov
lret
mov
inc
fs
decl
adc
or
in
xchg
mov
sub
dec
pop
sub
sub
pusha
sar
fsubs
test
cmpsb
inc
insb
pushf
push
jle
xor
fdivrs
pushf
nop
movsl
or
xchg
fnstsw
or
inc
push
out
mov
adc
test
es
mov
jl
push
cld
jmp
fcoml
push
add
je
ret
ret
ds
jo
sub
hlt
dec
fdivs
jp
sub
mov
dec
mov
sbb
aas
es
xor
stos
in
call
call
dec
inc
mov
int3
iret
sbb
dec
je
jmp
mov
loope
mov
inc
jge
fcom
sti
inc
fidivrs
sub
iret
dec
cld
cmp
movsb
scas
or
cmp
insb
rolb
pushf
sub
adc
mov
jno
incl
stos
adc
mov
pushf
jb
test
lret
dec
lods
or
gs
inc
sbb
ret
add
ret
insl
and
mov
lods
xchg
or
inc
loop
push
scas
cmp
incl
cmp
test
pushl
dec
lahf
xchg
mov
cmpsb
iret
inc
push
hlt
push
test
xchg
testb
mov
push
jg
movsb
outsl
inc
pop
mov
test
cmp
fs
rol
fcomip
pop
cmp
movb
int
cmp
sbb
das
dec
push
es
stos
mov
inc
fnsave
addb
fwait
pusha
fwait
addr16
dec
inc
mov
in
gs
mov
jbe
dec
mov
add
push
xchg
mov
ljmp
xor
mov
bound
leave
movsl
loope
mov
jne
or
sti
inc
sbb
jecxz
cmp
pop
mov
add
test
cli
mov
inc
cmpb
and
fwait
xlat
nop
sahf
mov
lret
gs
sub
sbb
fcmovnb
add
incl
push
notl
and
sub
les
das
xchg
cld
xchg
cmp
call
in
jecxz
dec
je
into
nop
mov
cmp
mov
out
mov
mov
incl
xchg
mov
in
cld
mov
leave
sub
add
dec
pop
dec
xchg
movsb
leave
dec
lret
jmp
into
xchg
lcall
daa
daa
popf
aam
sbb
xor
incl
scas
xchg
inc
stc
pusha
lcall
in
scas
and
mov
rorb
xchg
inc
aam
iret
jae
in
in
ss
nop
std
mov
ljmp
leave
mov
lret
test
pop
mov
int3
out
iret
fsubrl
lret
scas
pop
ja
fcomip
push
dec
dec
repnz
jg
cmpsl
in
pop
mov
fsubrs
pop
orb
popf
jno
sub
pushl
dec
jo
dec
adc
shrl
cmc
mov
lock
aad
jg
jmp
dec
loop
mov
packssdw
rcrb
xchg
popf
and
fdivr
push
sahf
outsb
and
jnp
sbb
dec
jnp
dec
pop
or
into
test
clc
in
pop
cmp
or
pop
scas
jb
or
lcall
push
sbb
hlt
out
hlt
push
ret
add
adc
inc
push
mov
mov
mov
pushf
xchg
lods
das
fdivrs
cs
ljmp
or
cmp
aaa
ljmp
das
ret
incl
lahf
sbb
lds
adc
pop
jecxz
fsubl
mov
mov
fcomip
decl
mov
push
inc
push
xchg
adc
ja
pop
aas
ljmp
fmuls
jg
mov
rcrb
test
fcomps
scas
ret
cwtl
mov
add
ljmp
jo
jmp
repz
fstl
mov
lahf
dec
ljmp
and
mov
sarl
fnstenv
and
jno
add
mov
call
mov
lds
pop
repz
or
xor
jno
icebp
incl
out
sbb
mov
jl
and
jbe
sbb
xchg
or
xor
mov
movsl
cmp
cmpl
inc
and
jns
push
pop
pop
ljmp
sar
incl
push
nop
pop
cmp
dec
push
insb
or
rcr
xchg
xor
mov
jmp
push
fld1
rcr
xchg
sbb
push
and
lahf
mov
mov
cli
lcall
aas
mov
push
sti
dec
jg
add
lods
adc
out
ret
ds
ja
push
lcall
xchg
in
lds
dec
int3
and
xchg
test
gs
jle
insl
dec
push
xchg
xchg
mov
leave
xchg
cmp
jp
stc
movsl
ds
or
sub
movsb
push
cmp
inc
mov
sub
dec
inc
les
mov
leave
les
sbb
and
call
call
mov
xchg
and
pushl
mov
mov
lret
pop
lret
pop
and
mov
aaa
dec
cmpxchg
and
arpl
inc
sub
or
ret
mov
andl
and
inc
inc
out
jmp
movsl
xor
jo
ret
mov
jo
xor
add
dec
mov
jmp
jns
outsb
lods
dec
test
or
popa
jp
mov
shll
push
xor
decl
and
mov
add
test
and
call
mov
push
insb
ret
movsb
adc
clc
inc
fbstp
jne
inc
cs
incl
cli
or
inc
add
loop
dec
mov
in
xor
mov
out
lock
lret
cmp
mov
mov
into
mov
dec
or
xchg
out
mov
loopne
sbb
pop
inc
fdivr
jmp
in
je
test
or
pop
xchg
popf
fs
sbb
xor
xchg
and
ljmp
mov
mov
jmp
pop
iret
mov
pop
cld
sbb
push
fistl
jns
mov
dec
adc
mov
add
add
fcoml
push
in
ljmp
xchg
push
out
shrl
fiaddl
int3
popa
adc
adc
mov
shlb
ds
jns
cld
incl
pop
fnstcw
pop
ja
repz
and
push
ja
inc
test
shll
bound
or
pop
loopne
push
adc
sub
mov
cmp
push
adcb
ljmp
notl
lahf
scas
shrb
mov
insl
int
xchg
into
in
enter
ljmp
call
aad
jnp
dec
xchg
pop
push
mov
or
sahf
popa
mov
dec
or
ret
xchg
mov
mov
popa
adc
imul
cmc
pushl
xor
sub
sub
mov
jp
xlat
fdivl
cmp
or
mov
gs
incb
or
add
lock
test
fbstp
sbb
pop
jg
add
je
lret
xor
in
mov
xor
jnp
mov
lcall
and
push
push
loope
and
inc
jle
shlb
rcr
cmp
loop
incl
incb
outsl
lret
fs
out
jge
test
imul
jl
add
mov
ds
push
mov
or
imulb
sub
push
decl
jae
ret
push
jno
clc
int3
aam
scas
dec
inc
sahf
aas
dec
lcall
xchg
decl
out
std
fdivr
xchg
mov
popa
pop
cmp
adc
inc
sar
decl
test
adc
push
std
jp
sahf
adc
sbbb
int
test
jge
push
mov
add
and
xor
loopne
insl
lea
xchg
lock
hlt
fcomip
loopne
iret
popf
or
nop
pop
icebp
scas
add
clc
inc
pop
or
dec
sbb
xlat
xchg
lahf
cwtl
cs
mov
mov
lret
les
mov
leave
imul
cmp
inc
xchg
and
daa
dec
fdivrs
pop
mov
jbe
pop
add
test
pop
jmp
adc
dec
adc
pushl
cmp
outsb
nop
pop
mov
mov
in
add
js
sarl
call
and
inc
test
lret
and
mov
lcall
dec
std
or
dec
jl
and
xchg
pop
je
pop
nop
repnz
out
lock
pushl
and
test
repz
loope
jb
imul
int
aas
gs
cmp
push
add
fstps
inc
clc
lcall
aad
xchg
stc
sub
mov
inc
cli
out
jb
sub
mov
out
inc
dec
sub
pop
cld
jmp
mov
pop
stos
outsb
sub
adc
fidivs
fadds
clc
in
add
inc
push
shll
jno
ret
fstp
sub
ficomps
ljmp
rclb
call
sbb
pop
rcrl
cmp
jmp
int3
cld
dec
dec
add
cmpsl
inc
lcall
dec
adc
add
jmp
fs
dec
outsl
inc
popf
xor
dec
mov
jl
xchg
inc
cmc
pop
mov
xchg
mov
fs
cli
insb
je
sbb
movsb
test
jmp
pop
std
pushl
insl
lods
test
mov
fmulp
xor
leave
push
out
iret
lcall
outsl
adc
sub
decb
popa
sub
lea
mov
pop
test
inc
jbe
test
xor
lcall
pop
adc
push
adc
inc
cmp
sarb
mov
out
incl
cmpb
enter
push
or
jns
xchg
out
daa
outsb
aaa
jb
sbb
cmc
call
pop
pop
insl
push
mov
ljmp
cmp
xchg
push
or
xchg
cmp
gs
pushl
aaa
mov
shl
sarl
and
or
imul
decl
jnp
pop
ficompl
jae
adc
insl
lods
inc
dec
sub
cli
push
or
inc
mov
lods
outsl
stos
sti
pop
sahf
sysexit
ljmp
xor
movaps
add
mov
inc
fsubp
mov
add
mov
push
mov
mov
mov
mov
lock
pop
stos
mov
xor
fildll
mov
out
cmp
lcall
mov
lahf
movsl
jo
and
fmull
mov
add
xor
subl
dec
jae
pop
add
dec
rcpps
in
mov
adc
faddl
pop
adcl
jg
int
pushl
js
sbb
call
pop
inc
loope
mov
hlt
push
fcoms
mov
pushl
pop
les
dec
loopne
movsl
inc
jl
mov
or
lret
jmp
outsb
bound
incl
and
stos
cwtl
pushf
int3
mov
mov
test
jo
jnp
mov
call
popa
or
xchg
hlt
push
aam
mov
sub
js
pushl
add
add
mov
mov
inc
hlt
push
or
pusha
repz
or
das
clc
decl
and
pop
mov
push
inc
enter
inc
nop
bound
incl
or
mov
pop
dec
scas
and
add
lcall
pushl
xorl
mov
hlt
sub
push
jg
dec
xor
xor
or
lcall
pop
push
lods
mov
sti
dec
add
test
cmc
add
or
call
lcall
mov
out
ror
test
mov
ss
fadds
jno
dec
icebp
bound
lret
mov
incl
mov
mov
sub
cmpsl
dec
push
sub
sub
out
incl
mov
push
or
sbb
outsl
inc
mov
shrl
fs
fmull
addl
mov
arpl
inc
cmpsb
call
mov
xchg
iret
xor
xchg
or
out
pop
stc
das
into
shl
outsb
shll
nop
pop
push
sahf
lcall
add
sarb
pop
lods
test
call
xor
xor
mov
fucomip
stc
jl
decl
pop
or
fildl
daa
mov
cmp
mov
lret
pop
dec
cmp
cltd
jmp
adc
inc
xor
stos
mov
imull
int
cmp
push
mov
cmp
and
push
push
xchg
mov
lcall
dec
mov
stos
sub
adc
inc
xchg
insb
xchg
in
decl
es
inc
roll
pop
ljmp
push
rol
and
ret
decl
pop
inc
inc
movsl
mov
mov
outsl
or
mov
roll
ret
mov
mov
ljmp
mov
mov
pop
adc
mov
js
pushl
pop
int3
xchg
pop
dec
flds
jl
scas
sub
adc
das
add
jns
call
adc
push
adc
outsb
xchg
sub
sbb
fldl
pop
inc
pushf
pop
loopne
mov
movsb
mov
jmp
sbb
jmp
dec
fistps
push
ret
jnp
hlt
pop
xorl
lea
mov
cmp
cmp
or
xchg
imul
rcr
add
ljmp
adc
mov
xor
adc
sub
xchg
xchg
jno
lds
or
mov
aas
add
mov
fistpll
jns
loope
add
lock
les
push
decl
mov
sbb
cmp
test
arpl
jle
jno
cld
movsb
ja
in
push
scas
jmp
and
pop
jg
ja
lock
xchg
or
or
rorl
xor
jg
mov
jmp
fwait
cmp
daa
outsl
sbb
clc
dec
mov
mov
dec
cs
pop
mov
arpl
lcall
out
loop
mov
push
xchg
fldenv
jb
decl
lea
mov
mov
inc
add
in
sbb
cli
jge
lret
ret
ds
push
lret
xchg
rorb
sub
das
fbld
inc
adc
mov
add
lahf
addr16
in
pop
pop
iret
jno
mov
dec
jle
jae
nop
push
fisttpl
or
pop
int3
pop
pop
stos
stos
lret
movsb
pushl
lret
xchg
mov
std
je
mov
icebp
xchg
add
mov
pushf
push
fmuls
mov
shrl
sar
add
lahf
mov
js
aas
xchg
mov
call
stos
inc
pop
cmp
cwtl
mov
aaa
jbe
shll
inc
js
jge
pop
sti
sar
call
mov
call
lret
mov
push
xor
or
mov
lea
call
shlb
and
idivl
addr16
cmpsl
pushf
std
adc
inc
adc
aam
jmp
mov
mov
out
sbb
filds
jnp
cmc
das
xchg
std
pushl
mov
mov
xchg
mov
cmc
inc
sbb
sub
out
xor
cmp
mov
pop
dec
cld
test
jns
mov
mov
decl
xchg
ret
lods
jnp,pn
les
rorb
inc
leave
test
mov
incl
cmp
fstpl
pop
ss
out
ss
and
out
rclb
idiv
jg
ja
mov
mov
dec
es
mov
mov
data16
xchg
pop
pop
into
fidivl
call
out
push
into
bound
sarb
popf
test
cs
inc
xor
sub
fwait
inc
inc
ss
addr16
mov
and
incl
jge
jno
ret
int
sbb
mov
and
mov
pop
cmc
pop
xor
mov
jg
daa
jecxz
out
or
lret
pop
inc
sub
aaa
cmp
fisubrl
sar
pushl
in
into
addl
xor
out
cltd
xlat
and
sbb
fs
loopne
lods
sub
pop
imul
cmp
lods
mov
sbb
sub
syscall
mov
and
push
popf
xrelease
call
sbb
jmp
fmuls
outsl
cmpsl
cwtl
xor
mov
mov
popf
test
loope
xchg
mov
sub
hlt
bound
pop
call
fbstp
lahf
in
jo
cmc
mov
ljmp
mov
dec
or
push
cmp
jg
mov
mov
sti
comiss
xchg
inc
out
fwait
and
pop
ljmp
rorb
fsubl
leave
adc
jbe
repz
jmp
mov
es
jg
scas
dec
jp
sbb
dec
test
and
cmpsb
inc
push
loopne
mov
subb
sbb
sub
mov
inc
test
cwtl
inc
je
icebp
cmp
leave
repnz
aaa
std
sti
ljmp
xchg
insb
mov
hlt
add
dec
pop
out
cmp
incb
repnz
adc
cli
gs
popf
insl
jg
mov
cmpb
pushl
mov
repnz
sub
std
ret
dec
mov
out
inc
data16
mov
dec
outsb
xor
popf
fnsave
push
push
adc
sbb
incl
imul
push
ss
lret
or
xchg
mov
mov
add
sub
incl
repnz
out
lods
aas
repz
xor
aaa
pop
and
push
jge
mov
pushl
aas
sahf
inc
lret
roll
rorb
int3
outsb
std
mov
repnz
data16
mov
fwait
int3
cwtl
and
ja
inc
xchg
mov
jle
scas
scas
cmp
dec
mov
pushl
or
add
insb
or
jnp
adc
ja
mov
shl
cltd
mov
decl
mov
mov
add
cmc
dec
and
sbbl
push
or
outsl
clc
cmp
addl
imul
push
arpl
sub
push
and
dec
lock
mov
dec
dec
mov
call
cs
mov
loope
imul
outsl
out
cli
cmp
fdivrl
orb
in
mov
mov
cmp
add
lcall
pop
mov
cmpl
cli
andb
jo
test
rcrl
ss
stos
in
xor
icebp
loope
jl
dec
out
push
aam
leave
in
fbstp
pop
lock
incl
sti
pop
mov
aas
push
test
xor
xlat
inc
int3
jae
mov
roll
jbe
jns
mov
mov
xchg
jno
inc
decl
stos
insl
inc
jmp
or
dec
lock
icebp
ds
pop
decl
neg
xchg
lods
fmuls
lret
std
lds
pop
popa
sub
mov
mov
outsl
ljmp
pop
mov
int3
xchg
xchg
out
inc
cmpsb
sti
in
iret
mov
out
insb
mov
pop
sub
cmp
mov
rcrl
xor
add
xor
mov
jmp
fidivrs
loop
xchg
iret
push
js
mov
cmp
frstor
loop
jmp
rcl
mov
inc
xor
jbe
out
iret
lret
jle
test
lods
lods
out
ljmp
gs
mov
shll
mov
push
ret
std
enter
decl
jo
jne
sub
adc
inc
dec
outsb
mov
push
adc
pop
xor
mov
into
out
mov
mov
int3
int3
mov
dec
mov
xor
mov
ljmp
inc
cwtl
sbb
and
call
inc
in
int
xchg
in
aas
cmp
orb
pushf
pop
int
lcall
add
sub
sub
cli
push
or
rcrl
xchg
sbb
lcall
xchg
fs
jge
loop
into
push
ret
jg
out
jmp
test
dec
lcall
pop
adc
in
nop
xchg
pop
or
push
push
inc
mov
pop
shl
idiv
shlb
pushl
int
int
mov
jae
jnp
jbe
inc
fwait
daa
mov
push
mov
sti
pop
jo
test
dec
stos
ret
fsub
mov
es
xor
cld
jmp
jle
in
int
mov
mov
cs
add
push
cltd
sarb
push
mov
stos
ljmp
cmc
imul
pop
mov
sbbl
fisubrl
outsl
pop
leave
lods
movsb
out
movsl
loope
mov
inc
ljmp
incl
cli
fimuls
and
daa
jae
repnz
fadds
ret
sbb
jmp
cs
leave
xor
andb
decl
test
iret
jae
cmp
lock
inc
cwtl
or
clc
cmp
adcl
ss
dec
dec
stos
sbb
adc
push
xchg
sbb
repz
add
clc
in
popa
pop
mov
jbe
or
add
jnp
dec
aaa
ds
add
arpl
add
or
fs
sahf
jle
xchg
imul
push
dec
push
mov
xlat
xchg
cwtl
leave
add
scas
xchg
xchg
nop
nop
pop
ljmp
and
jl
and
mov
adc
xor
mov
mov
mov
push
fcoml
xor
in
pop
sbbl
cmc
call
movsb
mov
inc
xor
mov
hlt
push
mov
inc
dec
ds
fdivl
dec
arpl
insl
push
mov
add
fcmovnu
ljmp
jl
ja
cmp
sbb
in
push
pop
testb
and
arpl
jg
lds
je
fldcw
inc
daa
sbbb
mov
mov
jbe
xchg
sbb
mov
fwait
lcall
adc
mov
push
imul
ror
mov
xor
std
idivb
jg
jmp
das
repnz
pop
or
out
scas
xchg
mov
lcall
out
fiaddl
cmpsb
incl
mov
les
repz
mov
sti
push
add
loop
shrb
aam
mov
sub
mov
push
shlb
jnp
movsb
push
or
and
sub
shll
lcall
fs
inc
enter
cmp
iret
lcall
sti
jno
mov
lds
movsl
xorl
ja
mov
push
jb
pop
push
aad
mov
inc
xchg
test
add
adc
mov
gs
mov
pop
mov
cld
xor
lcall
jg
jns
imul
mov
imul
out
jp
dec
sub
push
mov
arpl
in
or
pop
es
les
divb
stos
sub
clc
jmp
sbb
pandn
push
jmp
ret
sbb
sahf
popa
xchg
push
jg
out
and
inc
dec
adc
mov
rclb
mov
jg
stc
cmc
cmp
mov
cmp
fidivs
inc
xor
pop
adc
mov
dec
pop
pop
adc
adc
lock
in
lea
adc
xchg
test
sbb
jmp
and
xor
cli
xchg
mov
sarb
gs
inc
sbb
mov
ret
pop
add
jg
adc
inc
pop
imul
pop
mov
lods
lcall
jg
mov
ljmp
add
jl
ljmp
icebp
mov
fdivrp
ljmp
enter
jmp
ret
ljmp
push
mov
jne
jmp
inc
outsl
out
test
loope
cmp
mov
xchg
je
or
decl
jg
cmp
mov
dec
arpl
push
loop
mov
xchg
incl
and
and
xor
rcr
dec
add
nop
je
pop
nop
jae
incl
cld
aaa
push
ror
jne
cmp
test
cmp
push
movsb
test
js
or
jns
icebp
mov
in
xchg
push
fisttps
outsl
adc
pop
into
xchg
cmp
lea
push
bound
test
out
repnz
sarl
mov
test
loop
jae
jge
shr
xorl
inc
mov
ljmp
cmp
xchg
stos
scas
ret
dec
mov
sbb
lcall
ljmp
jmp
sarb
dec
cld
sahf
shr
add
dec
incb
stc
dec
mov
test
cmp
ljmp
bnd
cmpsl
mov
xchg
mov
dec
jecxz
stc
push
push
mov
ljmp
lcall
cmc
and
pop
cltd
test
or
call
outsb
test
push
and
sbb
or
lds
mov
in
mov
push
loope
push
icebp
icebp
mov
test
push
out
mov
sub
adc
cmp
mov
dec
and
incl
pop
or
push
es
int3
mov
xchg
out
pushl
cmp
shr
movb
push
imul
inc
ds
mov
inc
mov
inc
pop
test
stc
std
aas
pop
call
lahf
adcb
decl
lock
push
mov
push
aam
add
outsb
xchg
and
pop
dec
aaa
call
jecxz
adcb
cmp
repz
in
mov
aam
adc
cmp
jl
cld
mov
rcl
jne
mov
jl
out
in
shlb
imulb
das
lock
decl
stos
and
shrb
mov
sub
jmp
loope
jge
jo
sbb
adc
xchg
or
or
scas
out
add
cltd
test
in
push
shlb
lea
mov
aam
je
push
dec
mov
cld
fwait
fs
and
test
mulb
pop
pop
push
add
adc
pushl
pop
out
push
mov
jnp
mov
jns
dec
sbb
aaa
and
mov
jmp
jmp
sbb
lret
dec
shll
js
push
loop
inc
gs
jg
pushl
lret
jp
add
jae
inc
jg
test
lods
dec
jns
pop
pop
or
and
nop
sar
dec
and
int
lahf
stc
mov
repnz
mulb
mov
or
cmpsl
call
push
jnp
dec
notb
xlat
sub
aad
in
cli
sub
and
movsl
fcompl
test
stos
mov
cmp
mov
mov
ja
xchg
cmp
cmp
sti
mov
sahf
inc
ret
incl
mov
orb
dec
pop
jae
nop
test
mov
fisubrl
pushl
std
ja
mov
add
movsl
ss
pop
or
mov
or
int
outsb
decl
add
imul
cmp
cmc
and
add
or
call
fwait
or
xor
mov
mov
ret
test
lret
lods
xchg
mov
movl
das
sti
not
incl
xor
imul
xchg
pop
ljmp
mov
inc
loopne
and
jecxz
xor
bnd
mov
scas
jecxz
jl
incl
cmpb
enter
mov
fisubrs
jnp
fcoms
add
ljmp
lcall
cmpsl
popa
jbe
lret
test
mov
mov
das
mov
loope
aad
lods
mov
ja
and
or
popa
mov
sbb
dec
arpl
push
decl
pop
and
pop
mov
dec
inc
out
mov
call
mov
nop
adc
sub
lret
call
scas
dec
sahf
fisttps
lock
jl
mov
ljmp
dec
inc
gs
out
push
jle
jmp
sub
pushf
add
out
xor
inc
test
push
dec
mov
pusha
iret
incl
cltd
leavew
movsl
rcr
add
pop
push
stc
add
mov
inc
xchg
pushw
mov
decl
int
hlt
dec
cs
xchg
cwtl
iret
xchg
add
dec
int3
in
lds
and
add
aad
and
call
jg
xor
jbe
sbb
ljmp
or
push
stos
add
mov
jecxz
addr16
add
lret
mov
push
dec
sub
xchg
in
jp
lahf
test
mov
jge
push
cmc
and
lds
dec
call
aad
cmp
xchg
test
decl
cmp
stc
leave
mov
adc
lret
mov
cmp
scas
insb
aas
ljmp
lret
inc
loope
mov
js
lcall
pushl
jbe
or
loop
add
imul
movsb
jmp
lods
ror
mov
movsb
pop
shlb
mov
arpl
cmc
rorb
mov
dec
adc
fwait
cmp
xchg
and
outsl
or
jo
fsubr
out
cltd
or
dec
rcl
mov
adc
jmp
call
mov
aam
mov
jl
decl
xor
and
bound
int
sub
mov
mov
mov
lret
scas
pop
push
xor
mov
sub
fstpt
dec
das
clc
pop
ss
cli
lods
xchg
jg
inc
movsl
cwtl
lret
jnp
std
dec
ds
pop
cmp
mov
xchg
movsl
arpl
mov
jne
add
movsb
data16
repnz
fsubl
call
ja
lcall
rcll
int
mov
sahf
xor
stos
sbbl
mov
ret
lcall
ljmp
rcll
adc
cmp
xchg
pop
push
sbb
incl
pop
sbb
xor
int3
push
jle
leave
push
pop
icebp
jo
es
sbb
hlt
cs
ljmp
jmp
mov
pop
fwait
push
xchg
loope
mov
ljmp
iret
into
lds
orl
mov
iret
rol
bswap
lret
or
call
or
and
xchg
jnp
and
xlat
mov
dec
push
mov
lock
xchg
into
push
cmpsl
fcomps
or
lret
push
int
mov
pop
int3
mov
repnz
push
cs
dec
xlat
add
pushl
add
adc
mov
and
mov
andl
jnp
out
xor
sub
mov
dec
jg
movsb
pop
scas
adcb
lcall
cmpsl
dec
mov
mov
decl
push
shrb
mov
pop
movsb
sti
mov
movsb
mov
jne
pushl
push
dec
mov
gs
jmp
mov
mov
inc
lods
iret
xchg
cmp
jge
les
scas
shrl
mov
fidivl
inc
mov
or
xor
xchg
jg
or
stos
xor
cmp
xlat
inc
mov
ficoms
cmp
push
mov
mov
sbb
jmp
push
mov
lcall
cmp
push
cmp
stc
int3
pop
scas
dec
jno
jg
push
sbb
call
leave
inc
xchg
jge
sub
sarb
and
sub
or
jae
fdivp
call
ret
adc
adc
mov
or
dec
mov
inc
mov
int
lcall
aaa
loopne
sbb
scas
gs
fstpl
xchg
gs
mov
inc
inc
dec
les
jns
int3
ss
jno
jmp
ljmp
add
bound
das
fs
mov
stos
adc
or
mov
incl
mov
cmp
push
sbb
push
mov
sbb
ss
mov
mulb
mov
mov
xor
aad
cmc
mov
cltd
mov
mov
mov
jmp
jle
pop
out
mov
insl
je
stos
push
in
cmp
imul
mov
sbb
out
push
push
lcall
out
mov
addr16
dec
mov
push
add
enter
mov
ja
shlb
mov
out
pusha
imul
mov
fld
idivb
mov
jg
in
fs
xchg
xor
or
dec
add
xchg
sahf
clc
jns
fstps
ds
popf
ret
repz
jmp
aaa
xchg
mov
xchg
test
ss
rol
dec
pushf
pop
in
mov
mov
pushl
hlt
push
cmp
ljmp
inc
jl
int
pusha
rclb
pushl
inc
inc
les
push
dec
popa
out
xchg
fdivr
or
mov
insb
jl
in
xchg
filds
mov
in
int
imul
pop
mov
sar
call
cmpsb
jae
popa
jne
and
pop
cld
shll
push
sub
xchg
dec
jmp
mov
cmp
icebp
rorl
gs
cmp
mov
xchg
in
enter
jl
mov
call
push
sbbb
cmc
add
lret
mov
lcall
fidivl
mov
in
adc
std
inc
push
pop
xor
or
cmpsb
dec
pusha
xchg
jg
or
cld
ss
xor
fisubl
stos
push
xchg
cmpsl
cmpsl
push
or
inc
sarb
and
iret
movsl
repnz
mov
mov
dec
icebp
mov
inc
pop
mov
add
daa
lahf
mov
or
in
shr
int3
popf
test
xchg
adc
test
xor
arpl
add
outsl
and
loope
adc
add
clc
sahf
fdivr
int
cmp
jp
mov
mov
cmp
dec
inc
or
mov
jo
les
lock
icebp
or
mov
lcall
and
sub
mov
movsl
cmp
sbb
mov
hlt
add
lcall
jmp
ds
dec
jno
scas
sub
or
ja
sarl
add
shrl
cmp
loope
mov
dec
or
mulb
mov
mov
rol
jle
mov
addps
adc
add
call
dec
jp
and
nop
rcrl
xchg
ss
lcall
es
jl
stos
add
add
stos
pop
cld
inc
into
cmp
push
mov
sub
mov
stos
fnsave
outsl
and
cmc
jb
fldenv
insb
xlat
sub
bnd
test
cli
fisubrs
adc
in
adc
sub
mov
mov
jmp
rclb
inc
ret
xchg
mov
pop
dec
mov
decl
xor
sbb
and
jp
adc
or
pop
ss
scas
cmp
jmp
in
dec
mov
test
mov
jns
jg
xor
cmp
and
push
adc
jp
push
mov
test
jg
mov
jbe
in
cld
jns
mov
pop
sub
mov
xor
pushl
cs
fisubrl
jmp
cltd
dec
insb
pop
imul
cld
loope
lock
add
daa
sub
js
xlat
push
sub
jmp
dec
lahf
push
mov
and
aad
aad
iret
inc
lcall
pop
xchg
push
out
lahf
hlt
and
push
inc
cmc
test
push
pop
ret
or
cmp
ljmp
loop
mov
aad
jp
leave
outsb
cli
stos
clc
les
or
sub
std
mov
cmp
test
mov
scas
xor
jb
jbe
loopne
pop
out
cli
jmp
jmp
adc
and
lret
sbb
dec
jg
cmpsb
leave
ljmp
xchg
push
out
mov
cld
cmp
fisttpll
je
clc
lcall
incb
shl
clc
jne
xchg
jg
jge
pop
or
out
jle
mov
and
add
push
push
pop
bound
or
rorl
flds
add
jae
nop
outsl
jge
lds
push
sahf
outsl
sbb
xchg
call
dec
lods
sub
in
and
dec
jno
mov
sub
gs
das
es
push
and
xchg
das
mov
xor
fildll
decl
lock
xchg
adcl
rcr
cli
jmp
xor
hlt
dec
mov
insb
decl
inc
mov
mov
ret
les
and
or
clc
ja
xchg
scas
aas
pop
mov
inc
iret
xor
sbb
sbb
std
lret
mov
xor
pop
push
scas
mov
jbe
lret
adc
scas
sub
jmp
dec
xchg
jbe
xlat
decl
call
push
jbe
fwait
pushf
icebp
shll
iret
arpl
cmpsb
cltd
cmpsb
call
faddp
and
dec
out
jnp
out
fsubs
xor
xor
or
push
and
lcall
test
jl
jne
jge
jne
inc
adc
stc
inc
jmp
imul
call
jmp
cmp
or
arpl
and
imul
mov
lods
adc
aaa
scas
insl
jp
sbb
gs
adc
mov
or
ljmp
dec
inc
popa
movsl
arpl
xor
dec
inc
leave
xchg
or
lahf
and
adc
ljmp
ret
mov
enter
pop
cld
repz
adc
xchg
mov
out
push
xchg
mov
lea
adc
pushl
add
add
inc
test
into
mov
lea
rcrb
push
mov
and
addr16
adc
adc
rcrl
fbstp
cld
sub
into
daa
in
decl
mov
std
pop
shr
mov
fstpl
incl
sbb
popa
jle
lret
mov
scas
ret
xchg
and
incl
mov
xor
outsl
mov
pop
lock
sub
repz
jmp
sbb
cmp
cmp
and
ljmp
pop
jbe
arpl
cwtl
adc
mov
loopne
mov
lods
mov
call
sub
cmp
add
lret
sub
push
stos
xchg
jmp
pop
das
ret
ja
scas
paddq
pushf
fwait
adc
loope
insl
lea
ret
loopne
ds
jle
mov
ds
arpl
enter
js
call
scas
xchg
jmp
inc
ds
mov
add
stos
add
xchg
mov
out
test
sbb
or
sub
jg
lock
int3
dec
adc
dec
adc
mov
sbb
lret
xchg
cmp
jmp
pop
cmp
and
pop
jae
xor
mulb
jg
or
and
push
lret
outsl
clc
lcall
ret
inc
cltd
cmp
sahf
stos
add
xlat
jo
cs
and
insl
jno
incl
add
jg
pop
outsb
dec
inc
mov
ret
sub
lea
mov
rcrb
xchg
xlat
xor
sbb
aaa
or
out
mov
out
insb
and
int3
fwait
popf
imul
and
insb
or
jge
mov
mov
cmc
sub
nop
xlat
mov
cmovns
call
movsb
fucomi
or
int
mov
jae
mov
pop
mov
call
movb
lds
loope
dec
cmp
push
int
lahf
and
incl
cmp
and
push
mov
sbb
jecxz
jae,pn
push
sub
jmp
imul
cwtl
mov
jne
fs
add
scas
test
mov
mov
add
clc
ljmp
lcall
adc
outsl
jo
jp
dec
xchg
addr16
arpl
push
cld
lcall
clc
scas
aas
inc
pushl
popf
adc
cmp
loope
xor
sbb
and
das
jno
inc
enter
mov
in
fidivrl
call
dec
leave
mov
and
loope
clc
notl
mov
incb
cmpsl
pop
rorl
cmp
add
push
pop
cwtl
xchg
mov
cmp
aam
jo
adc
dec
aam
and
ljmp
filds
dec
cltd
jge
xor
je
clc
mov
sbb
adc
stc
movsl
insl
lret
mov
jns
inc
test
jg
pop
and
adc
xor
adc
dec
xchg
xchg
mov
add
decl
or
test
shl
mov
ss
lahf
xchg
popf
xor
mov
test
xchg
fadd
ret
call
mov
inc
vmovlps
idivl
popa
enter
and
inc
clc
xor
push
cwtl
mov
dec
les
xor
or
mov
dec
fnsave
jo
pop
jle
jle
dec
call
lods
xchg
icebp
jl
xor
test
xchg
sub
mov
lcall
push
mov
pop
jne
bound
mov
aaa
stos
decb
inc
into
nop
psrlq
xchg
sub
sub
pop
daa
adc
and
mov
cs
dec
in
push
test
icebp
mov
inc
xchg
jge
test
jmp
adc
and
pop
jno
fsubrl
jmp
xor
xchg
inc
int3
repnz
ret
bound
subl
int3
and
pop
sbb
push
call
fstl
out
lcall
clc
outsb
into
cmc
lret
rol
jmp
inc
outsb
jmp
mov
incl
cmp
cmpb
xorb
ret
sbb
rclb
stos
outsb
mov
mov
stos
add
jmp
mov
cmc
dec
jnp
pop
sbb
xchg
hlt
adc
bound
lcall
sti
and
shrl
insb
xlat
cmp
cmp
sub
sbb
stc
inc
test
fsubs
mov
ljmp
mov
mov
jle
sub
out
cmpsb
lock
cwtl
mov
xor
out
inc
popa
sbb
jmp
add
bound
mov
sbb
imul
ljmp
dec
push
fcmove
or
fcmovnu
fdivrl
stos
call
dec
fstpt
jmp
out
addr16
jb
or
sbb
mov
xchg
fcomip
cld
xchg
ja
aas
push
loope
or
lcall
daa
cmp
mov
push
pusha
cmp
sub
rcrl
pop
pop
jbe
cmp
sub
ja
jl
mov
push
jecxz
jb
xchg
inc
lret
adcl
mov
jp
int
leave
cmp
in
sbb
jo
pushl
rorl
jmp
cltd
icebp
xchg
cmp
pop
pop
adc
decl
jle
push
idivb
stos
xchg
jnp
sbb
in
dec
add
sub
sub
push
fimull
aam
mov
int
ljmp
jae
push
or
and
jno
jl
mov
add
int
cs
jbe
xchg
nop
int
sub
pop
xchg
mov
movsb
push
mov
clc
aad
xchg
insb
xor
add
xor
cmp
pop
lcall
testb
insb
jb
mov
add
jp
pushl
lods
push
cld
xchg
into
sarb
jle
mov
dec
std
fildll
jg
jecxz
stos
mov
and
push
xchg
mov
shrb
mov
iret
add
fidivrs
lcall
rcl
xor
lds
ret
repnz
pushl
dec
loopne
mov
mov
into
int
mov
jle
jbe
add
pushl
xor
cmc
out
pop
pop
pop
jge
mov
nop
add
and
ficoms
ljmp
xor
cmp
pop
adc
xchg
cmpsb
icebp
shrb
sbbb
enter
jmp
sbb
sub
and
xor
sub
stos
mov
pop
pushl
inc
cmp
sub
fisttpll
jecxz
sub
or
xor
ret
call
std
mov
test
xor
aad
icebp
mov
stos
iret
xorb
cli
rcll
cmp
push
sbb
pop
mov
and
mov
andl
mov
xchg
ljmp
pmaddwd
jae
push
or
add
out
push
hlt
test
dec
mov
movsb
jl
mov
or
jmp
popf
stos
in
and
dec
xchg
ljmp
jns
call
lods
mov
or
xor
cmpsl
xor
sti
test
cs
mov
push
xor
ret
xchg
sbb
ljmp
mov
mov
in
cmp
mov
jmp
jnp
aam
pushf
daa
lods
hlt
ljmp
lock
jmp
jb
cli
cmp
mov
stc
data16
push
orb
dec
dec
and
adc
mov
dec
inc
inc
imul
xchg
adc
movsl
je
mov
sbb
decl
out
cmp
lret
pop
mov
xchg
xchg
mov
mov
out
pop
loopne
sbb
sub
pushl
std
nop
movsl
dec
dec
jbe
into
mov
fidivrs
imul
or
pop
and
inc
mov
cli
mov
mov
cltd
insl
iret
and
jg
outsb
ss
xchg
adc
xchg
jne
mov
aad
mov
call
pop
ljmp
jge
lock
insb
roll
cmp
fdivrs
daa
test
mov
aaa
xchg
mov
jo
inc
into
jne
call
inc
bound
xchg
mov
adc
pop
push
and
enter
sbb
loope
cmpsb
sub
es
push
push
jle
in
dec
or
mov
fwait
add
mov
stos
inc
les
movsb
adc
jle
cli
dec
addr16
mov
scas
and
addr16
call
sub
inc
ret
or
movsb
and
test
jmp
mov
iret
pusha
mov
sar
lcall
xchg
jb
jbe
pop
cmp
mov
fcoms
in
or
jmp
xor
fnstsw
and
mov
xchg
lods
xor
cld
js
arpl
pushl
push
mov
sub
scas
xor
cmc
sbb
mov
sub
rcr
daa
pop
mov
call
test
cli
cmpsl
add
aam
mov
xor
sahf
mov
mov
icebp
stos
les
test
mov
sbb
je
mov
push
sub
cmc
sar
test
adc
int3
scas
pop
ljmp
hlt
cmpsl
ljmp
enter
filds
mov
jo
lods
leave
push
lahf
mov
ss
sbb
loopne
jno
sahf
jns
add
jg
inc
lea
add
movntps
mov
fcoml
decl
clc
bound
out
pop
mov
sub
or
fwait
decl
pop
xlat
push
lock
dec
out
cltd
shlb
sahf
and
sarl
cmp
cli
movsl
lods
les
cmp
jmp
das
push
and
jecxz
cmp
stc
fdivs
icebp
mov
add
test
lcall
out
outsl
inc
lret
inc
xchg
incl
int
and
enter
mov
and
es
sbb
jecxz
mov
mov
lret
incl
fadds
or
sbb
and
in
add
add
repz
orb
sar
call
mov
and
push
ss
lods
inc
mov
mov
cmp
mov
mov
mov
int
mov
pushl
addr16
cwtl
dec
mov
imul
mov
call
mov
lret
test
sub
shl
std
flds
push
pop
call
decl
sub
hlt
lds
xchg
divl
shlb
xchg
mov
mov
mov
and
mov
mov
roll
or
aaa
std
jmp
and
insl
fbld
int
mov
add
rorl
jno
lret
bound
mov
in
out
xchg
cmp
sbb
lds
pop
cmpsl
lock
mov
sarw
es
pop
or
sub
cmp
mov
sarb
xchg
jg
jmp
mov
dec
lock
and
ja
dec
dec
cli
insb
mov
or
inc
mov
lret
lcall
test
std
inc
hlt
pop
jbe
push
js
lock
ljmp
jecxz
test
loopne
pop
mov
enter
cltd
cli
mov
xor
push
jecxz
idiv
fldl
mov
mov
push
cmp
mov
mov
lcall
nop
imul
and
xor
or
xchg
lods
test
sub
or
icebp
cmp
and
lock
bound
scas
xchg
test
test
xor
ret
xor
jl
lret
xor
test
shr
imul
xor
jns
mov
movsl
xchg
dec
xchg
mov
ds
mov
decl
gs
ffree
jmp
jl
arpl
mov
aaa
repz
mov
jge
int
xchg
testb
or
pop
aad
jge
or
sub
jo
jnp
dec
jb
jp
out
popf
lret
ret
std
cmp
mov
inc
scas
adc
or
dec
ds
call
push
bound
jno
push
and
mov
daa
mov
xor
push
icebp
mov
add
mov
int
xor
loope
and
inc
jno
mov
adc
sti
xchg
rcrb
jns
idiv
out
cmpsb
lock
adc
je
or
jae
push
cld
incl
subl
mov
push
mov
pop
stos
and
ss
bound
sbb
ret
scas
xchg
enter
lret
and
mov
jne
mov
push
and
mulb
std
mov
sbb
clc
pop
rol
cld
shll
cmp
sub
mov
sub
adc
mov
ljmp
jmp
fcomip
sarb
vmovups
mov
gs
movsl
jge
mov
cmp
pushl
jo
sub
aam
sub
pop
stos
lret
dec
xor
add
push
std
mov
enter
dec
sbb
gs
es
in
aaa
push
sbb
ljmp
adc
stos
clc
adcb
dec
inc
inc
push
lcall
or
enter
data16
and
or
adc
pop
xchg
mov
or
lret
fdivr
mov
loop
or
aad
je
push
push
mov
jge
jmp
adc
pop
in
repnz
sub
icebp
inc
and
dec
and
es
cmpsl
aas
loope
jmp
std
scas
rcrb
into
mov
pop
ret
or
outsb
jne
in
popa
sbb
cmpb
jge
sbb
inc
xchg
xchg
cld
dec
xchg
push
xchg
out
and
test
and
inc
xchg
cli
std
push
into
mov
lods
xlat
out
mov
xchg
cltd
aaa
rep
sti
shlb
mov
xchg
das
je
ds
push
cmpsb
inc
mov
adc
mov
rolb
int
sbb
mov
mov
loope
inc
cmpsl
stos
out
mov
call
js
lret
mov
mov
flds
dec
popf
imul
adc
in
jmp
sbb
or
adc
mov
rcll
out
jp
test
popw
test
adc
xor
rolb
das
clc
test
xor
jbe
ljmp
cmpsb
sub
or
clc
xchg
inc
shll
aaa
cmp
mov
in
sbb
movsb
mov
mov
cmpb
test
fdivrl
jns
popa
jne
pushl
ljmp
call
adc
loope
dec
into
push
jmp
out
lods
push
xor
cmp
sbb
dec
mov
xor
test
out
addb
cwtl
call
lahf
imul
push
ljmp
xor
cmp
aas
jmp
sbb
shrl
lcall
mov
movsb
sub
sarb
mov
pop
fidivrs
dec
insl
fdivr
decl
lock
dec
jbe
lods
test
stc
lods
inc
stos
or
mov
ret
jbe
inc
out
fimuls
jae
test
test
je
fs
sub
sbb
adc
pop
pop
dec
repz
jnp
mov
lea
fldenv
push
cli
je
lds
dec
mov
cltd
movsb
mov
mov
jmp
jae
adc
fcompl
rol
lret
daa
jge
jp
es
pusha
hlt
mov
adc
int3
stos
mov
mov
jbe
sbb
mov
incl
sti
ljmp
lods
push
lcall
mov
jp
lahf
push
cmc
jne
mov
sar
incl
mov
shrl
icebp
add
mov
add
das
xchg
ret
or
frstor
popf
ja
mov
mov
in
inc
xchg
bound
lcall
fbstp
push
lods
xchg
insl
sub
aaa
jno
iret
dec
inc
jle
add
sbb
jg
jbe
jle
in
ljmp
mov
out
xchg
addr16
fcompl
popf
mov
sbb
test
hlt
add
pop
popf
lcall
jge
shr
sarb
dec
pop
ret
push
or
add
repz
aaa
cli
cld
into
mov
inc
pop
call
aaa
xor
xchg
cmc
fadds
fdivrs
outsl
ret
fwait
push
ds
adc
les
ljmp
adc
cwtl
aam
fildl
aaa
dec
cmp
jne
xor
jbe
xchg
jmp
mov
loope
mov
add
push
cld
or
ljmp
fnstsw
or
xor
mov
rep
hlt
add
call
fs
notb
dec
sarb
iret
stos
fs
dec
in
ret
dec
decl
repnz
hlt
fimuls
and
jecxz
rcrl
push
adc
pop
adc
add
pushl
mov
in
mov
enter
push
iret
insl
mov
shll
inc
jecxz
je
xchg
mov
int
cmp
push
mov
mov
mov
jmp
adc
cmpsb
dec
add
pop
in
int3
xor
fyl2x
popa
das
dec
aaa
jg
decl
sub
add
inc
jb
test
sahf
clc
add
mov
call
cmpsb
sub
testl
sahf
cs
movsl
ret
mov
or
iret
inc
jno
mov
test
incl
jae
or
dec
in
sub
xchg
pop
roll
or
sbb
call
cltd
into
pushf
out
in
movsl
jge,pn
push
cmpsb
pop
jnp
ljmp
jmp
cmp
adc
movsb
jne
insl
out
rcrb
push
fcmovb
in
cs
lock
lahf
cli
jg
jg
call
fld
xor
mov
test
xor
jo
lret
fistpll
in
jp
scas
mov
xor
push
mov
dec
fiadds
mov
arpl
lcall
cltd
xchg
inc
movsl
loop
lret
roll
nop
add
lock
sub
xchg
pop
push
mov
mov
mov
mov
pop
jecxz
pushf
dec
push
cmpsl
outsl
arpl
dec
xchg
fcomip
lcall
jne
mov
scas
enter
addb
rcrl
mov
lock
lds
je
fwait
test
cmp
fidivrs
and
xorb
and
shll
mov
push
pop
mov
scas
cmpsb
cwtl
in
push
insb
mov
dec
inc
inc
cmp
call
mov
xor
std
nop
daa
cli
ret
ja
inc
push
or
arpl
add
jmp
paddsw
es
arpl
ljmp
dec
into
pop
cmp
push
or
fcmovb
push
sbb
mov
rcrb
mov
jb
add
ss
pop
cmpsl
push
cmp
imul
mov
pushf
xor
add
push
lahf
pop
cld
incl
mov
lods
add
rcll
jmp
inc
push
out
repnz
push
in
dec
adc
mov
ss
ret
movsb
inc
movsb
iret
test
xchg
adc
add
in
ljmp
call
pop
ljmp
dec
cmp
dec
push
inc
adc
stc
dec
mov
jo
adc
iret
cld
addr16
arpl
add
cmc
incl
es
sbb
xchg
push
cwtl
dec
loop
mov
and
sub
dec
sbbb
mov
rorb
cli
fcmovnu
mov
outsl
mov
pushl
aad
jle
push
cld
ftst
cmp
add
es
out
cmovge
jmp
jecxz
pop
mov
adc
fsts
mov
lock
and
add
pop
in
mov
or
adcb
ret
mov
mov
push
ljmp
sbb
or
mov
cmpsl
popw
xchg
movsb
push
icebp
lret
out
dec
es
jg
lock
lcall
movsb
add
cltd
mov
mov
jo
ja
andl
jmp
push
or
call
cli
push
mov
mov
mov
sahf
push
imul
xor
or
push
adc
sti
je
mov
jno
fstl
mov
shll
andl
ljmp
xchg
add
or
sub
andl
dec
andb
pusha
push
in
es
dec
gs
pushl
mov
inc
mov
add
mov
xlat
icebp
mov
test
lds
adc
mov
ljmp
fisttpl
xchg
lahf
stc
ret
jge
and
xlat
cmovp
leave
cli
sub
cltd
test
aaa
pop
decl
cmp
mov
out
and
add
dec
hlt
pusha
cwtl
push
xor
jecxz
push
gs
add
call
das
mov
ja
lret
xchg
into
shrb
jg
movsb
pushl
mov
pop
cmp
loop
loope
jl
pop
cmp
inc
sub
push
sbb
inc
insl
loop
out
push
mov
out
lret
pop
push
lcall
jmp
sarb
xor
dec
inc
sub
pusha
push
test
sbb
sbb
push
mov
insl
test
insl
xchg
mov
and
xor
inc
lcall
push
mov
popf
fisttpll
insl
and
jmp
sub
sahf
fs
push
out
int3
repnz
adc
mov
adc
push
sbb
cltd
push
lahf
push
pop
push
ret
jp
mov
int3
dec
out
jns
int
jmp
fwait
loope
rclb
scas
mov
add
jae
sub
mov
dec
mov
aas
pop
cmc
adc
dec
popa
dec
dec
lcall
jmp
and
pushf
or
lea
loop
daa
scas
int
inc
scas
lods
test
pushl
or
add
clc
or
sub
loope
ljmp
lods
mov
pop
pop
push
insb
xchg
shlb
mov
pop
lret
adc
add
jl
lcall
mov
and
jle
add
sti
insl
hlt
clc
pop
add
in
jmp
jge
sbb
aas
xchg
sahf
lcall
cmpsl
xchg
xor
pop
push
mov
or
fsub
daa
sahf
jno
addr16
add
incl
pop
scas
dec
add
inc
xor
cmp
call
xchg
dec
or
ret
and
mov
mov
test
push
cltd
loope
mov
insl
push
xlat
add
sub
lods
mov
insb
mov
and
inc
and
xor
neg
out
sbb
cmp
mov
push
lock
js
int
cs
add
mov
sbbl
lods
incl
or
cmp
mov
pop
idivb
iret
mov
addb
sar
decl
cld
pop
out
mov
daa
xchg
mov
cwtl
fdivs
arpl
lock
clc
movsl
dec
inc
jecxz
cmp
outsb
push
push
out
les
mov
and
out
inc
jnp
dec
push
cmp
call
xor
sahf
mov
cmpsb
xchg
adc
fwait
mov
mov
sarb
es
jg
inc
dec
push
sub
in
cli
jmp
sub
in
rcll
dec
ljmp
adc
mov
push
sub
pop
mov
aam
xor
pop
sbb
mov
imul
sti
xor
mov
fdivl
out
cmp
lds
jg
jle
int3
lahf
sar
push
out
int
pop
loope
adc
mov
lods
cli
push
push
loop
mov
xchg
das
test
clc
cld
into
dec
test
test
les
xchg
call
gs
sbbl
scas
in
jns
pushf
ja
dec
fcmove
xorl
popf
dec
loope
or
mov
ret
shll
mov
add
lcall
inc
mov
push
gs
mov
mov
sbb
jg
scas
xchg
fwait
addb
ss
cmpsb
ds
and
jne
or
je
mov
lcall
fnstcw
cmpsb
jg
push
lahf
add
sbb
xlat
adc
arpl
or
rorb
xlat
mov
or
jbe
rorl
or
mov
pushl
xchg
jne
mov
mov
testb
imulb
out
clc
xchg
lds
inc
jo
aam
or
mov
in
and
ret
scas
ficompl
mov
ljmp
lcall
sub
push
cmp
and
mov
pop
clc
call
cmp
flds
fwait
popa
shrl
mov
decl
fildl
ljmp
sub
and
fstl
xchg
decl
incl
cwtl
les
sbb
movups
cmpsb
sbb
pop
sbb
xor
jnp
lods
push
xlat
mov
dec
imul
pop
lret
repz
insl
mov
idiv
ljmp
pop
ljmp
cmp
movsb
out
pop
add
dec
fwait
and
push
pop
mov
lcall
mov
test
scas
fcoms
into
and
and
jbe
push
cld
jmp
xchg
jo
cld
xacquire
and
es
or
sub
decl
mov
adc
pop
add
divb
or
test
imul
loop
mov
imul
jge
mov
std
lcall
ljmp
or
loopne
out
mov
fsubs
push
fisttpl
repz
jmp
add
add
xor
xor
jl
or
sub
and
cs
push
cmp
mov
sbb
xchg
jge
inc
cmp
decl
push
mov
xlat
push
sbb
in
shr
aad
push
sub
sbb
mov
cmp
cmp
xlat
scas
pushf
fcoml
mov
and
jns
push
mov
dec
mov
pop
dec
adc
xlat
int
aaa
jge
jne
ljmp
loope
imull
addr16
incl
adc
mov
lock
fistps
push
mov
cltd
xor
movsl
nop
addb
decl
shlb
add
outsl
es
clc
pop
kmovb
add
pop
mov
sub
cltd
sub
dec
scas
fistpll
and
lcall
or
sar
jae
push
outsl
outsl
mov
ja
pop
nop
cmc
ss
sbb
ljmp
nop
add
fcoms
lods
pushf
or
das
xchg
sub
sahf
xor
pushl
std
xlat
rep
and
movsb
adc
sub
jb
inc
mov
jmp
sub
pop
push
cmp
rclb
xchg
sub
xchg
clc
idiv
in
aaa
adc
mov
mov
scas
inc
inc
mov
repnz
adc
stc
jb
xchg
out
out
dec
cmp
and
inc
add
decl
inc
push
lahf
adc
and
mov
popf
jge
out
lods
xor
cmp
mov
push
mov
push
or
iret
fdivr
mov
insl
das
aaa
sub
insb
mov
scas
clc
call
jg
int3
fcmove
push
dec
lahf
popl
das
sbb
daa
xchg
xor
cs
cmp
sti
add
test
cltd
pop
add
fdivs
mov
shlb
jle
ret
and
lock
lret
movsb
cmpsb
cs
jmp
aas
or
shlb
sub
or
dec
cmpb
or
out
push
inc
dec
in
jg
xchg
jae
push
xchg
pop
add
dec
jb
popa
sub
xorb
jns
mov
pop
xchg
sbb
mov
loop
pusha
movsl
cmc
lcall
test
lsl
cltd
xlat
pop
mov
push
inc
mov
lds
outsb
adc
pop
pushf
xorb
fs
out
mov
repnz
rorb
jb
int3
add
in
mov
iret
mov
add
sbb
lcall
sahf
and
push
xchg
adc
push
sub
decl
cli
add
and
jmp
je
xchg
aam
dec
in
in
lcall
call
sbb
test
add
orb
mov
sub
cld
ret
xor
xchg
aam
test
cmp
and
jmp
int
mov
push
gs
jmp
aaa
popf
ss
rcl
add
dec
or
lret
xchg
test
test
fidivrs
adc
and
call
and
ffree
enter
sub
inc
jmp
cmp
lret
jae
sar
add
sbb
lcall
mov
aam
jmp
mov
xor
jns,pt
shlb
jecxz
add
sub
sub
jmp
dec
push
inc
test
mov
dec
pop
xor
mov
lea
sub
jmp
or
mov
inc
sbb
pop
sub
fadds
xchg
shll
sahf
lahf
jno
or
cld
pushl
lcall
loop
adc
dec
mov
xor
or
and
xchg
push
dec
xchg
jns
dec
mov
mov
inc
xor
jecxz
bound
xchg
cld
fadd
cmp
or
add
cmpsl
jg
pop
outsb
testb
mov
jmp
xchg
sarb
bound
lcall
test
cmpsl
inc
push
add
inc
add
pop
insb
sarl
mov
mov
lcall
add
mov
push
and
push
or
jb
mov
dec
or
call
icebp
dec
fldl
cli
add
adc
in
pop
clc
aad
decl
adc
add
in
sahf
aas
push
std
mov
test
lods
lret
je
mov
fmuls
decl
push
out
pop
push
lret
stos
jp
add
stos
cmp
out
sub
add
mov
or
pushl
sub
jne
lock
inc
out
jle
cmp
out
enter
mov
out
cmp
stos
aas
mov
stos
incl
push
psubsb
lcall
mov
push
xchg
sti
jp
mov
pushl
xor
mov
jae
jge
mov
jbe
fstpl
mov
inc
push
shrl
dec
ss
pushl
in
lret
cmpsl
sub
loopne
das
stos
jno
xor
lret
push
pop
mov
add
add
jmp
mov
sub
or
add
sar
mov
jg
nop
clc
sahf
nop
mov
sbb
scas
clc
jns
or
pop
mov
hlt
ja
mov
sub
jle
xchg
add
inc
mov
inc
mov
lret
cld
mov
aam
sarb
incl
int3
inc
push
pop
ds
and
and
lret
jmp
push
imul
pop
insb
out
shlb
test
cmp
jecxz
mov
test
and
incl
xor
mov
ficomps
and
xor
fidivrs
iret
incl
mov
mov
adc
fmuls
push
mov
cmp
ljmp
jl
mov
jl
push
jae
cmc
add
rorb
es
inc
push
mov
pushl
push
rorl
mov
or
es
das
sub
pushf
lahf
xor
call
cld
inc
cmpsb
int
mov
fisubs
stc
and
sahf
sub
cli
mov
mov
inc
and
cmp
mov
xchg
jl
sub
incl
jge
push
dec
in
xchg
mov
fbstp
xchg
lods
call
mov
cmp
sbb
lods
lds
arpl
mov
mov
pushl
mov
mov
inc
sbbl
mov
sub
bnd
lret
sbb
push
mov
xor
mov
sub
movsl
add
test
shrb
jp
mov
mov
dec
cmp
stos
sti
loop
dec
adc
in
dec
dec
repz
test
stos
stos
idiv
pushl
into
popa
adc
adc
xchg
adc
frstor
flds
mov
hlt
sarl
mov
xor
jg
cmc
imul
inc
dec
repnz
test
jnp
push
ljmp
imul
or
leave
pop
je
inc
test
sahf
jle
jge
popf
scas
pushl
push
icebp
aad
ficompl
push
or
movsb
mov
mov
dec
push
xorb
xchg
jmp
int3
mov
and
data16
mov
jb
test
push
aaa
lcall
cmp
loope
and
mov
inc
sub
orps
mov
xor
add
lahf
cmpsb
inc
jne
add
das
and
fldenv
iret
andb
clc
xchg
movsl
ret
jmp
mov
addr16
pop
cmp
adc
decl
cltd
xor
shl
psubb
adc
pop
dec
test
sbb
cmp
incl
dec
in
insl
pop
mov
mov
movsb
arpl
mov
shll
jns
sbb
pushl
cmp
or
cs
nop
xchg
push
mov
or
in
mov
jmp
mov
insb
add
iret
loopne
pusha
add
inc
dec
mov
in
int3
push
xchg
pushl
and
mov
mov
int
test
sbb
pop
leave
dec
mov
cmpsb
mov
lcall
test
bound
ljmp
mov
push
xor
cli
mov
jmp
fsubrs
cwtl
test
scas
call
addr16
xchg
lock
decl
xlat
ja
adc
mov
shrl
shlb
iret
pusha
cmp
ljmp
inc
sbb
sbb
out
dec
mov
incl
std
in
outsl
dec
mov
iret
add
loope
dec
mov
addr16
lahf
movl
out
stc
push
pop
loope
mov
insl
inc
fnstenv
mov
mov
lods
xchg
and
xchg
decl
fldenv
mov
call
out
icebp
ljmp
or
call
std
jmp
and
enter
adc
sti
lea
das
pop
stos
mov
loopne
pop
decl
out
mov
lds
push
adc
jb
lods
pop
push
mov
jmp
out
or
aad
out
push
xchg
ret
mov
leave
and
xchg
dec
ret
sub
pushf
xchg
mov
setne
jnp
addl
sub
cmc
adc
push
out
pop
jmp
dec
pop
jb
add
sbb
mov
pop
shrb
std
and
aad
jnp
or
enter
sub
mov
xchg
mov
push
pop
xorb
cmp
dec
int
ret
leave
mov
loop
rorl
xor
ljmp
push
orl
insl
inc
jmp
mov
rcll
mov
pushl
and
imul
xchg
stos
fildl
ja
call
mov
fbld
adcl
add
inc
xor
ret
movsb
test
inc
enter
lcall
cld
xchg
hlt
add
push
add
je
fdivs
pop
sbbl
stos
incl
push
fsubr
repz
jb
es
xadd
test
adc
call
jmp
push
inc
xlat
rol
jmp
fdivrp
sub
lcall
mov
jmp
call
pop
dec
les
xor
movsb
ret
inc
inc
add
cmc
fld
mov
cmp
addr16
xor
jmp
jns
xchg
imul
jmp
inc
add
bound
repz
call
data16
mov
mov
in
std
lcall
add
lcall
mov
enter
scas
push
clc
icebp
push
mov
sti
push
int
mov
mov
xorb
lcall
jno
and
or
xor
shrb
mov
aad
rorb
and
ljmp
mov
jg
dec
lcall
dec
call
xor
pushl
dec
jmp
sub
pop
icebp
sbb
je
je
test
adc
addr16
pop
add
or
mov
mov
cld
fists
mov
jecxz
rcrb
repz
in
mov
xlat
add
fldt
lea
ljmp
fsubrl
cmp
shrb
sbb
aaa
push
scas
add
rorl
inc
call
shl
mov
ljmp
gs
ss
ret
pop
aad
jg
lcall
dec
ret
pusha
imul
clc
divl
es
loop
push
mov
daa
into
pop
scas
clc
jmp
imul
std
imull
adc
fisttpl
icebp
cwtl
ds
cld
lcall
add
dec
rol
xor
scas
int3
lea
fst
jg
jle
in
cmpsb
mov
lods
cmp
scas
adc
imul
pushl
shl
adc
cwtl
fs
sub
jae
lcall
xor
add
cmp
jo
adc
addl
mov
inc
cmp
sbb
je
leave
push
cmp
ljmp
loopne
cmp
enter
movsl
aad
dec
repz
jmp
stc
aad
lcall
mov
dec
imul
icebp
popf
mov
add
inc
dec
xchg
push
ds
aas
adc
scas
call
arpl
psubw
jnp
lock
and
jle
pop
cli
lcall
loopne
push
into
cmc
or
loope,pn
std
pop
divb
pop
xor
js
mov
ljmp
lcall
ficomps
mov
push
push
sbb
aas
sti
mov
or
jmp
xchg
iret
ss
add
mov
aam
xor
mov
dec
inc
idivl
jg
imul
push
push
ljmp
mov
jns
add
dec
in
imul
decl
int3
lods
sub
outsb
jle
cmp
in
mov
jp
fcoms
jl
out
add
mov
sbb
in
dec
int
cmpsb
jb
iret
jne
xor
xor
jmp
lret
hlt
cmp
std
mov
ss
pop
ljmp
shl
aad
cmp
incl
cld
pop
lret
les
shrb
and
xor
sub
fisttpll
shr
sub
add
call
sar
mov
lock
xor
dec
sbbl
push
in
mov
and
dec
sbbb
jg
xor
cmp
push
push
popf
fwait
rcl
push
cld
ja
mov
jl
ljmp
shlb
xor
adc
pushf
dec
inc
mov
mov
cwtl
fsubrl
push
mov
inc
stos
fbstp
jg
mov
test
add
inc
fxam
dec
sub
xchg
push
lea
cwtl
sbb
jne
xchg
pop
mov
add
bound
mov
jno
push
dec
dec
lea
cld
sarb
daa
dec
jmp
mov
in
pop
clc
sub
pushf
mov
sub
fdivl
or
clc
pop
add
mov
inc
push
pop
div
push
fcos
or
cmp
data16
gs
push
adc
imulb
int3
inc
aas
mov
loop
incl
and
sub
jecxz
xor
aas
fs
jo
xor
mov
add
popl
jge
out
movsb
mov
ss
inc
movsl
pop
mov
adc
add
mov
popf
xor
xor
adc
mov
lock
push
aam
aam
sub
xor
ljmp
int
cmpb
jno
out
rorb
mov
pop
mov
jae
movsb
stc
icebp
mov
and
enter
je
add
je
adc
in
cmp
decl
scas
idivb
mov
push
jb
cmpl
cmp
popf
xlat
mov
sub
nop
loope
cmp
xor
xor
fwait
pop
cs
call
mov
xchg
sbb
jno
dec
push
mov
jne
test
sub
jecxz
scas
negl
cmp
sti
mov
dec
nop
fcmovbe
hlt
stc
add
shrl
ljmp
adc
ljmp
mov
pushf
iret
inc
jne
or
js
data16
mov
add
ret
pusha
push
xlat
imul
clc
out
sub
pushl
inc
mov
loopne
fdivrl
dec
mov
pusha
iret
cwtl
js
inc
or
ss
sbb
incl
pop
mov
and
pop
sub
outsb
outsb
sub
xor
mov
movsl
nop
push
adc
cli
sub
cmp
cs
test
mov
cmpsb
dec
add
hlt
aas
hlt
jbe
jl
sti
repnz
decl
rclb
push
in
add
leave
add
and
ret
cmp
xor
test
fdivr
lcall
xchg
repnz
daa
fisubs
fcmove
in
mov
daa
aas
in
mov
sub
xor
jmp
loopne
xor
jno
mov
cmp
add
or
test
mov
int
nop
neg
decl
inc
mov
pop
aam
in
and
inc
xor
sub
inc
ficomps
ljmp
sbb
fnstenv
rcll
repz
cmc
fildll
stc
in
mov
or
pushl
add
mov
icebp
gs
mov
movsb
scas
ret
sbb
stos
fs
xor
cmp
lret
aas
mov
in
add
push
mov
les
sbb
jg
cmp
mov
outsl
sahf
cmp
test
pop
mov
mov
aas
aaa
pop
out
push
je
lret
xchg
lods
in
lea
jg
call
sub
movl
jge
dec
into
mov
daa
or
sub
sub
jmp
mov
sahf
ljmp
jno
sub
sahf
fcoms
or
cltd
lret
fdivr
decl
fdivrs
in
jge
sbb
add
xor
dec
mov
lret
push
stos
lcall
jbe
xchg
dec
call
inc
mov
iret
lret
mov
shrb
jbe
pushl
sub
inc
jg
mov
psrad
sub
and
out
mov
ficomps
xchg
movsb
in
cmp
sahf
out
push
inc
xchg
sar
and
loope
xchg
dec
das
int
push
roll
jle
dec
push
push
inc
insb
in
mov
je
cmc
or
lods
test
jp
jg
jecxz
adc
rolb
or
or
call
jl
lret
movsl
inc
inc
mov
cmpsb
push
and
pushl
scas
cmpsb
xor
fiaddl
frstor
mov
sub
sahf
adc
sub
and
mov
mov
cmp
inc
mov
ret
xchg
pop
mov
shll
xchg
sub
push
inc
cmp
inc
jb
mov
inc
adcl
mov
ret
xor
adc
not
pop
mov
fdivrl
incl
cwtl
add
test
out
mov
pop
mov
testl
sub
out
mov
xor
mov
ljmp
mov
sahf
std
ret
enter
xchg
sbb
or
mov
js
jecxz
or
loope
sub
ret
and
sbb
cli
call
adc
mov
pop
or
loop
scas
dec
je
inc
mov
incl
mov
shrl
adc
int3
cmp
mov
lcall
es
fstl
adc
lahf
sti
cld
mov
jp
es
cld
ljmp
scas
or
lret
bound
je
popf
add
jg
add
cmp
in
inc
imul
lcall
pop
inc
jne
and
jne
mov
mov
cltd
mov
lcall
inc
insb
stos
push
lds
shll
lret
cld
jns
outsb
in
xlat
mov
jmp
iret
mov
sahf
or
mov
test
mov
call
andb
cmp
fcoms
mov
add
xchg
cmp
call
mov
aad
inc
test
xchg
pop
mov
and
xchg
shlb
push
bound
xchg
cmp
dec
sar
decl
in
rclb
sbb
pop
xchg
je
adc
test
inc
cmp
inc
scas
lret
pushl
icebp
xor
cs
mov
cli
jne
cs
mov
pop
dec
les
sbb
adc
sub
nop
mov
pop
in
push
lcall
repnz
sbb
cs
sub
lcall
leave
pop
sub
les
leave
fcomip
incl
aad
mov
mov
lea
pop
lds
arpl
loop
ret
incl
pop
push
mov
mov
cwtl
add
loop
inc
aam
inc
and
out
jge
mov
movsb
popf
dec
in
repz
pop
divl
nop
std
xchg
jo
pop
and
popa
lods
xchg
in
enter
jg
mov
pop
adc
in
and
inc
jns
xor
pop
test
inc
data16
add
decl
add
and
pop
lea
sbb
pushl
fnstsw
dec
add
movsl
mov
lea
je
mov
inc
icebp
or
push
or
push
jne
jp
scas
and
xchg
cmp
jnp
mov
mov
lods
lret
loopne
or
sarl
aam
lret
clc
out
int3
repz
fdivrs
xor
dec
in
lods
lahf
stc
hlt
dec
rorb
add
psraw
test
loop
scas
jg
pushl
je
cld
cmc
inc
aam
and
adc
call
cmp
push
cmp
pop
ret
enter
das
mov
mov
test
pop
sbbb
lret
shlb
decl
sbb
adc
out
push
mov
div
push
dec
fdivrl
mov
sub
mov
add
cmp
test
scas
mov
aam
jg
cmc
dec
add
jge
push
xchg
sbb
es
int3
or
pop
mov
fmulp
inc
adc
repnz
fsubrp
dec
dec
sub
movsb
push
lcall
decl
mov
jae
xor
push
shl
xor
insb
es
mov
std
sub
das
mov
iret
or
and
xorb
ret
imul
push
push
jg
ljmp
sub
inc
scas
insl
fwait
ret
cli
mov
repz
dec
cmc
pop
and
pushl
shll
pop
arpl
sbb
adc
ret
mov
mov
shll
jmp
inc
shl
enter
popa
es
test
scas
and
out
movsb
jne
inc
add
push
jl
jg
cmp
add
mov
inc
jp
xchg
mov
mov
int
or
jmp
mov
lcall
shufps
xor
jp
aad
into
mov
inc
jo
lret
pop
pop
cmp
enter
mov
sub
mov
decl
cmpsb
mov
inc
icebp
gs
ljmp
or
mov
xchg
jp
popa
xor
pushf
cmc
add
jp
or
mov
push
in
inc
inc
incl
jmp
mov
jne
xor
idivl
insb
mov
jnp
inc
decl
sbb
cmp
push
push
mov
mov
adc
xor
sarb
xor
insl
cmpsl
jg
or
dec
lcall
lcall
adc
mov
ljmp
push
aad
dec
adc
rclb
ja
push
push
arpl
jge
xor
imul
mov
jmp
push
jo
or
and
sub
fwait
jo
add
xor
adc
jg
leave
sbb
sbb
mov
ljmp
lock
adc
or
iret
scas
inc
push
xlat
decl
adc
push
add
mov
das
insb
cmp
pop
inc
push
add
call
test
ljmp
add
iret
mov
inc
fldcw
les
add
clc
jmp
jp
test
cltd
pop
mov
mov
sub
add
arpl
or
mov
cmp
pop
lock
out
xor
cwtl
fstpt
int
out
loopne
fldcw
ljmp
mov
in
push
orb
insb
mov
mov
mov
mov
fistl
lock
sti
adc
pop
int3
inc
addr16
das
mov
mov
decl
xchg
clc
adc
pop
adc
inc
lret
dec
aaa
test
mov
mov
jecxz
mov
add
xchg
jecxz
repz
ret
fnsave
clc
pop
jno
mov
faddl
rcll
bound
decl
icebp
fdivl
loopne
xchg
repz
mov
mov
ret
xor
add
lods
pop
jmp
jg
push
inc
jne
xor
push
jb
pop
cmpsb
inc
sbb
sub
jmp
lcall
xor
sub
fisttpl
mov
mov
mov
push
pop
cmp
incl
imul
cmp
mov
rorl
sub
cmc
fistps
mov
push
cmp
adc
aaa
rcrb
jg
cmp
inc
in
stos
sarl
dec
xor
lods
fmul
dec
es
cmp
sub
pop
xchg
outsb
rcrb
icebp
cmp
sub
incb
cld
and
pop
rdtsc
jbe
pop
ds
mov
filds
repz
shrl
gs
das
repnz
fisubrs
mov
inc
int3
add
movl
jg
jp
mov
xchg
jo
adc
dec
lea
cmp
mov
je
jo
ja
leave
out
sahf
sub
dec
cmp
test
inc
push
xor
mov
mov
xchg
lret
popa
pop
mov
mov
ljmp
incl
sub
xorb
lds
or
repz
ds
mov
mov
cmp
std
clc
jo
jle
into
adc
and
xchg
and
jne
movsb
xor
loope
flds
inc
push
sub
imul
pop
sub
push
mov
mov
clc
or
jmp
mov
nop
xor
call
mov
xchg
add
dec
xchg
mov
loop
fadd
lcall
adc
mov
xchg
dec
push
xchg
xchg
xor
mov
mov
or
data16
inc
call
cs
mov
mov
xlat
lds
int3
mov
stos
repz
vpmuludq
mov
xor
sbb
pop
daa
mov
push
andb
and
xor
cli
ffreep
mov
incb
sbb
adc
jae
lods
push
mov
lcall
addr16
mov
pushl
aaa
xor
cld
lcall
bound
adc
imul
lock
fnstsw
cmp
xlat
stos
inc
lea
incl
push
xor
mov
lea
test
inc
jae
push
fsubrl
mov
ja
ss
xchg
add
arpl
int3
rcrb
xor
xlat
dec
push
movsl
rcl
ds
jmp
inc
push
lret
pop
popa
int3
mov
sub
or
stos
int3
inc
lods
mov
sub
lcall
jmp
stos
loop
add
idivb
lods
call
lahf
mov
jmp
push
jbe
rcr
repnz
mov
fadds
jb
leave
lret
push
fists
cld
jl
fwait
dec
mov
cmpl
fistpl
mov
outsb
test
fs
xchg
xor
jg
stos
int
pop
shrb
lds
mov
sub
sahf
dec
jle
inc
sahf
dec
jnp
imulb
pop
dec
aaa
mov
nop
popa
ss
push
mov
xchg
mov
out
jle
sahf
fsubs
jnp
ds
or
adc
xor
movsl
popa
mov
xchg
mov
fdivrl
stc
adc
shl
pop
add
leave
pop
or
iret
adc
add
out
adc
enter
push
test
or
out
loopne
stc
dec
mov
mov
sarb
pop
jmp
dec
fwait
sti
jmp
sbb
orl
dec
loop
addb
ljmp
mov
out
sub
pop
push
clc
fmul
scas
cs
add
push
lock
stos
incl
gs
scas
inc
xor
adc
leave
dec
js
sub
sub
loop
xchg
mov
stos
fs
add
sub
pop
rorb
push
mov
test
dec
sti
and
aaa
mov
mov
test
call
cld
lcall
cmp
lret
popf
xchg
lea
xlat
jne
jecxz
jbe
cmp
inc
out
xor
incl
ljmp
inc
xchg
pop
add
pushl
cld
test
xchg
mov
sbb
xor
xor
xchg
push
imul
dec
in
mov
cld
roll
xor
or
mov
fmull
fistpl
clc
and
push
xchg
shll
jg
jbe
ficoms
mov
pop
ret
cmp
or
mov
xchg
inc
xor
and
jmp
xchg
mov
mov
xchg
mov
in
lods
ficoml
dec
lahf
ret
fnstenv
jno
add
or
out
jns
sbb
lcall
xor
std
insb
flds
add
and
outsl
add
call
mov
inc
sti
cmpsl
adc
jne
fs
mov
orl
aaa
cld
jmp
inc
fisubrs
movsb
cli
fdivrs
mov
xchg
jg
xchg
or
arpl
jge
lds
or
pop
pusha
call
jp
jg
dec
hlt
jl
adc
inc
jl
mov
into
mov
stos
jg
pop
xor
add
mov
pop
inc
dec
and
xor
push
call
addr16
push
and
inc
dec
xchg
movsl
push
test
rolb
addb
mov
decl
aam
mov
notl
xor
imul
std
aaa
scas
cli
int
jae
or
fwait
sub
dec
push
or
rol
ljmp
lret
dec
xor
and
inc
in
scas
fisubrl
jecxz
jae
imul
pushl
clc
xor
mov
arpl
pop
mul
sbb
out
fidivrs
mov
clc
rol
in
ret
into
cmp
sub
pushf
in
and
xchg
insl
mov
xor
inc
adc
fisubl
pop
movsb
xchg
pop
mov
daa
es
shrl
ss
icebp
cmp
scas
sahf
sub
dec
mov
cltd
pop
push
jg
fucom
inc
mov
test
mov
test
ss
pop
iret
jb
fprem
idivl
cli
sub
and
loope
or
sub
call
das
ficomps
test
add
push
dec
iret
je
fistps
dec
aas
push
jp
incl
push
repz
dec
insb
in
jecxz
fcmove
dec
xchg
imulb
sti
andb
and
pop
inc
inc
inc
sbb
lods
sbb
enter
incl
xor
xchg
push
xchg
lcall
cltd
ficomps
inc
xchg
sub
pushl
xchg
xor
cs
aam
shrl
les
jmp
cmpsb
scas
jg
mov
repz
loope
scas
add
jns
ss
movsl
sahf
cmp
push
pop
fstps
fdivr
pop
cmc
pushl
cmp
mov
std
test
xchg
or
je
pop
dec
inc
aam
mov
dec
push
cmp
das
xchg
pop
stos
fisubs
mov
lret
or
pop
rolb
sti
pusha
iret
sub
ljmp
loope
roll
and
pusha
xchg
cld
jns
ss
int
lods
lock
decl
lret
out
inc
mov
int
pushf
fsubl
push
imul
incl
sbb
mov
and
add
jmp
sahf
fdivs
mov
inc
cmp
pop
adc
cltd
mov
sbbb
call
jmp
stc
or
es
ljmp
hlt
popa
imul
mov
cld
cmp
jge
ljmp
stc
bound
in
add
hlt
lret
mov
lcall
sub
cmc
scas
and
aam
mov
jmp
jle
in
popa
mov
cwtl
xor
orb
scas
jmp
sbb
cmp
pusha
aas
jmp
or
cld
adc
fisttps
es
fs
pop
movsl
int
scas
sub
jne
movsl
mov
shlb
ficoml
fdivrs
add
ljmp
push
test
jge
ds
xor
dec
or
lret
loopne
fcomps
call
sub
jae
push
or
dec
mov
mov
es
xchg
test
jecxz
addr16
mov
or
loop
mov
iret
push
scas
mov
mov
clc
mov
scas
stc
jmp
out
in
fmuls
jb
push
jp
aam
aas
pushl
dec
cli
out
cli
xchg
in
fnsetpm(287
pop
test
ja
or
fisubs
dec
cltd
insb
and
test
xchg
shll
mov
dec
inc
lcall
cmpsb
and
mov
shll
roll
fadd
pop
sti
dec
pop
cmp
xor
pop
rorb
les
xchg
lcall
repz
mov
mov
test
lret
ficoml
std
test
jmp
incl
dec
lcall
je
cld
dec
jle
xchg
flds
inc
std
jnp
and
roll
pop
shll
mov
fidivrl
jg
xchg
fsubl
jbe,pt
ret
mov
jecxz
repnz
dec
jge
mov
lret
ds
jg
fcomps
jmp
or
js
sbb
adc
adc
inc
mov
pushl
fidivs
ret
mov
jecxz
jmp
inc
cmc
xor
stc
aam
mov
sbb
jns
adc
jno
fiadds
or
stc
shlb
jl
clc
inc
sbb
mov
movsb
xor
clc
sub
jmp
sbb
daa
jno
and
clc
mov
adc
mov
in
and
decl
lods
sub
call
xchg
scas
inc
and
lock
jg
inc
and
mov
jge
add
xchg
sarb
gs
mov
mov
and
sbb
aam
mov
sbb
ljmp
popf
cmp
imul
ret
mov
dec
add
jne
jmp
push
cmp
into
mov
or
ficoml
ljmp
mov
mov
push
adc
movsb
or
jbe
test
push
call
aaa
mov
cmp
sub
add
fidivs
repnz
xchg
out
xor
mov
test
decl
cmp
scas
gs
orl
ja
ljmp
pop
push
jae
mov
xor
add
mov
lret
loopne
scas
xor
ret
pushl
push
jns
je
lret
cmp
divb
sbb
enter
cmp
clc
std
imul
testl
jno
in
or
dec
cs
das
leave
xlat
gs
loope
add
ljmp
dec
neg
idiv
rcrb
inc
dec
fisttpll
incl
scas
ja
cmc
push
rcl
fcoml
cs
sub
add
fdivrp
jmp
cmp
or
xor
cmp
and
sbb
mov
pop
and
cli
mov
adc
movsb
and
repz
mov
xchg
call
jbe
shll
js
cmp
test
leave
fiadds
pop
shll
out
pop
lods
xchg
pop
jbe
sub
jmp
jmp
cwtl
fldl
jmp
mov
and
mov
popa
ret
lret
jb
sar
call
sti
loopne
jp
inc
nop
sbbl
es
fsubrs
testl
cwtl
lods
out
mov
push
scas
push
jl
mov
call
loopne
scas
adc
insb
xchg
mov
pop
xchg
cli
xor
call
mov
sbb
shrb
jne
popf
sub
and
push
aad
dec
daa
popa
cld
lcall
inc
xlat
push
inc
sub
xor
xchg
hlt
cmp
ret
test
decl
enter
jg
pop
cwtl
mov
jl
loope
mov
add
xor
jg
sub
cwtl
aaa
mov
into
mov
mov
mov
mov
out
push
mov
aam
stos
ret
adc
popa
xor
in
adc
lret
sub
rcr
xor
decl
and
xchg
jo
stos
fnstsw
sbb
mov
dec
dec
fwait
sti
jl
shrb
and
sar
call
adc
stos
jg
or
or
mov
sbb
jg
lahf
js
stc
xchg
ret
mov
stos
cli
mov
stc
push
xchg
cmpsb
idiv
decl
stos
dec
push
lcall
movsl
xchg
or
and
jg
or
movsb
clc
or
xor
push
and
adc
push
add
pushl
adc
pushf
test
pop
inc
inc
xor
ljmp
xlat
decl
ret
cwtl
inc
leave
loop
dec
into
dec
test
ja
in
fnstcw
or
mov
test
xor
and
arpl
cmp
cmp
and
lcall
lds
mov
jnp
push
or
push
imul
sub
loopne
hlt
cmovb
and
add
mov
adcl
out
cli
cmc
lcall
mov
dec
pop
and
sbb
in
decl
mov
sub
push
arpl
int
add
fcoml
in
mov
out
push
or
jmp
mov
das
aam
mov
cmp
or
dec
test
xchg
sbb
sti
pushl
xchg
mov
mov
mov
test
iret
push
sub
add
clc
jno
adc
imul
fildll
int
mov
xchg
mov
pop
call
jmp
jno
pop
sub
cld
dec
inc
stos
push
mov
mov
mov
fwait
xchg
jo
jle
add
dec
data16
data16
and
call
fchs
xor
inc
into
dec
jge
cmp
xchg
je
fwait
mov
shlb
cmp
xchg
ljmp
cmp
or
dec
mov
lods
add
loope
cmp
jg
cli
pushl
xchg
gs
mov
movb
or
pop
call
jae
outsb
xor
xchg
lcall
lahf
inc
adc
out
cltd
cli
fcomps
scas
mov
arpl
add
push
bound
mov
cmp
adcb
jle
ret
mov
das
aas
pinsrw
or
icebp
pushf
jbe
jnp
push
mov
add
sub
unpckhps
mov
imul
loopne
and
enter
sti
push
je
cli
inc
andl
push
mov
add
mov
fwait
rcll
add
stos
popa
dec
dec
out
inc
push
sbb
lret
enter
push
les
dec
mov
mov
and
std
decl
adc
outsl
jb
sbb
mov
cmp
adc
les
pushl
sub
xchg
aas
mov
in
add
pop
cmp
pop
cwtl
sub
lds
aas
dec
jecxz
insl
aam
lea
jbe
ret
or
cs
push
sub
adc
ja
add
jmp
sub
cmp
cwtl
dec
jb
jmp
test
imul
leave
mov
sub
mov
mov
les
pushl
std
dec
dec
pop
jb
add
push
outsb
jbe
mov
sbbb
aas
stos
movsl
dec
push
inc
ud0
add
add
je
das
and
je
dec
clc
enter
mov
ljmp
or
in
std
push
ss
push
xchg
cmpsl
aaa
insb
insb
lock
adc
xor
mov
ljmp
lods
popa
shl
insl
lahf
ljmp
bound
push
sub
leave
pop
push
inc
sbb
pop
loopne
mov
fstpl
or
ss
mov
in
inc
sub
adc
ljmp
pop
mov
nop
pop
dec
dec
lret
cmpsb
mov
jg
lcall
lret
ja
cmpsb
outsb
into
add
imul
in
xchg
cmp
and
fidivs
mov
daa
add
mov
lret
adc
mov
cwtl
xor
xchg
mov
je
fdivr
ljmp
mov
nop
pop
lahf
push
mov
sbb
sbb
das
cli
incl
push
and
push
andl
jne
add
cmp
and
xchg
movsl
scas
inc
sahf
mov
jg
movsb
repz
pop
mov
mov
aad
pop
sub
je
xchg
repnz
jge
sbb
or
lock
aad
cmp
insb
frstor
fdivs
jmp
sti
jno
sub
add
shl
push
jb
das
rcrl
dec
pushl
subb
movsb
push
fnstsw
outsl
sbb
in
adc
scas
std
push
mov
or
ljmp
das
push
or
mov
and
or
ficompl
je
cli
xor
lds
mov
fiadds
cld
mov
das
cmc
or
out
add
mov
adc
pop
pop
mov
push
inc
dec
dec
push
xor
out
pop
sti
lret
movsl
negb
cld
mov
mov
dec
call
insl
jne
popf
inc
rcll
adc
popa
lds
xchg
fldl2t
push
seta
cmpsb
adc
push
movsl
in
pmaddwd
sbb
out
and
and
mov
fwait
out
into
mov
rcll
mov
dec
and
fnsave
mov
jmp
leave
mov
lcall
pop
sarb
push
push
cs
clc
call
pop
dec
push
add
pop
mov
lcall
repz
inc
inc
rorl
add
mov
lods
sub
insb
bound
shrb
mov
clc
ret
mov
add
xor
call
mov
inc
lea
outsb
aad
mov
sub
ret
mul
pusha
jg
es
xchg
xchg
andl
dec
mov
fstpt
xchg
xchg
adc
rol
jnp
movsb
push
bound
outsb
sahf
loope
dec
ja
fadds
decl
mov
pop
out
dec
gs
push
addr16
or
push
lds
sub
sbb
stc
xchg
add
insl
adc
leave
inc
lea
test
xchg
mov
sub
outsb
sub
xchg
icebp
mov
fcoms
fsubl
xor
lcall
ret
icebp
movsb
pop
loopne
mov
call
data16
and
adcb
addb
in
mov
cmp
in
adc
sub
sub
mov
lcall
push
and
mov
in
push
sbb
xor
leave
sbb
pushl
cld
mov
popf
push
jo
loope
scas
mov
jg
ds
mov
mov
movsb
pop
scas
adc
push
out
add
int
mov
sbb
js
mov
inc
imul
scas
test
mov
cmp
pop
cmpb
js
inc
pop
mov
mov
sub
ficomps
scas
repnz
aas
jg
jmp
sub
aad
cmp
mov
cmp
daa
test
cmpsl
loop
pop
mov
ret
mov
dec
xchg
xchg
clc
loopne
ret
mov
cmc
lock
pushl
cmp
in
xor
outsb
xchg
and
mov
inc
push
int
mov
sbb
lcall
or
push
shrl
incl
inc
pop
outsb
xor
inc
sbb
fiadds
fistps
mov
jle
int3
imul
cmp
pop
inc
lcall
hlt
pop
aam
negl
repz
push
rolb
or
int3
int3
adc
pop
into
xchg
enter
decl
jle
add
movsb
cmp
push
and
push
lds
loop
bound
mov
ljmp
add
mov
jno
cmpb
sbbb
cmc
cmpsl
rcrl
addr16
nop
sete
dec
lahf
leave
imul
lcall
icebp
lret
xor
les
fcoml
jg
jl
xorb
sub
idiv
mov
xchg
sti
inc
jae
dec
add
sbb
mov
in
pop
lahf
xlat
mov
jp
adc
pop
cltd
and
test
les
ret
in
insl
dec
sbb
inc
add
hlt
jmp
add
int
fs
gs
jmp
mov
scas
or
dec
cmp
xor
les
ret
ret
fistps
inc
pushl
cld
dec
js
les
aam
pop
push
stos
lods
dec
jecxz
jle
ljmp
dec
xor
push
mov
fists
cltd
mov
jmp
push
dec
dec
add
dec
rorl
out
fisubrl
out
fisubl
pop
fs
decl
test
test
mov
and
sbb
and
stc
cmpb
add
inc
mov
sbb
outsl
and
or
pushl
stos
push
shl
push
stos
loope
push
test
mov
cmp
lods
js
xchg
pushl
mov
pop
shll
sbb
ss
hlt
xchg
repnz
mov
jo
xor
push
ret
mov
sub
or
dec
addr16
lret
pop
cmc
push
lds
sub
aaa
push
dec
xchg
mov
push
mov
ljmp
cmp
out
cli
loopne
hlt
push
fistps
dec
mov
push
add
lods
jmp
out
push
aaa
or
fldl
xor
movsl
or
mov
xchg
mov
pop
inc
lcall
inc
mov
jo
cmp
jne
mov
cmp
sahf
ja
loopne
cmp
lock
add
and
addb
out
les
les
mov
enter
dec
push
mov
cwtl
lods
push
xor
test
ret
lods
mov
je
rcll
sub
inc
jnp
andl
or
loope
iret
add
or
sbb
mov
mov
je
pop
popa
imul
loopne
adc
push
jl
fcmovnu
in
jo
sub
mov
shr
mov
sub
test
out
jmp
ds
imull
pushf
adc
fnstenv
or
ljmp
mov
mov
shlb
dec
in
sub
mov
repz
add
cwtl
scas
push
hlt
inc
adc
andps
push
jg
cmp
test
add
mov
enter
test
filds
jl
lods
ja
leave
sub
lret
and
call
jmp
ret
rcl
sub
mov
mov
int3
xor
mov
cmpb
fcmovnbe
stos
cmpsb
push
mov
jge
push
cmp
mov
dec
or
sbb
incl
dec
xor
mov
mov
dec
fsubrp
or
mov
in
and
jg
cmc
mov
aam
sarb
push
insb
das
fwait
jmp
add
jmp
xrelease
xchg
mov
pop
push
mov
fidivl
lcall
mov
fsubs
sbb
jbe
jl
cmpl
jmp
adc
fldl
or
mov
ret
mov
push
in
or
mov
lods
xchg
sarb
jno
ret
enter
pop
popa
mov
jmp
sarb
cmp
inc
cmc
jnp
ret
add
dec
lock
incl
mov
jno
in
add
cs
mov
imul
pop
out
pushl
adc
roll
and
stos
stos
sub
fistpll
adc
clc
inc
mov
mov
pop
and
inc
push
sbb
aad
clc
ljmp
loopne
dec
ss
pop
dec
into
jns
subb
xor
mov
ljmp
jp
xchg
sbb
sbb
enter
mov
add
xor
cld
fucomp
fnsave
cmc
test
mov
mov
iret
sahf
jecxz
lret
clc
jnp
mov
mov
or
enter
sbb
aam
decl
repz
adc
std
push
out
outsl
movl
imul
std
mov
lock
mov
repz
push
sbb
mov
cltd
lcall
sbb
fcom
pop
and
inc
out
aad
lods
mov
adc
bound
mov
cmp
xor
mov
sbb
mov
jg
add
sbb
cmp
mov
lods
je
call
pop
arpl
sub
inc
jmp
mov
and
movsl
cmc
jge
push
idiv
fwait
incb
aaa
arpl
ja
es
int
movsl
inc
ss
jne
lds
out
xchg
adc
mov
out
lds
and
sub
jmp
xor
pop
in
sub
jmp
fwait
dec
pop
cmp
arpl
imul
cmp
cmpsb
fists
incl
mov
mov
mov
outsb
add
jbe
aad
or
decl
je
mov
dec
sub
jmp
jmp
inc
xor
lcall
out
cltd
xor
shrl
in
xchg
lea
cli
jg
cmp
loopne
ja
or
in
or
fs
mov
ret
mov
pop
cmp
sub
lahf
stos
add
lcall
shl
sahf
arpl
or
les
adc
and
mov
lock
pushl
add
cmp
jbe
bswap
sub
sub
push
lock
sub
es
shll
mov
dec
lods
and
fisttps
out
rol
sbb
cmpsl
sub
sti
fildll
and
data16
dec
scas
xchg
mov
insl
cmc
lcall
mov
xchg
ja
out
iret
xchg
sub
std
mov
test
sub
mov
sbb
lcall
repnz
shll
xchg
mov
fs
inc
aam
ret
pushf
je
and
lock
incl
std
std
enter
sarl
and
movsb
scas
dec
rcl
inc
dec
inc
stos
ds
push
decl
add
leave
das
inc
mov
fcmovbe
dec
movsl
mov
or
fmull
jae
inc
adc
nop
decl
sahf
mov
loop
push
stos
mov
lods
push
jno
sub
add
inc
outsl
testb
or
hlt
pop
cmp
lret
insl
fadds
pushl
dec
xchg
cld
filds
sub
mov
arpl
mov
and
push
dec
xchg
sub
cmpsb
fsubl
aam
hlt
xor
add
sbb
mov
hlt
mov
mov
popf
aam
rolb
jbe
jmp
mov
aas
repnz
jg
mov
lds
sub
mov
pop
push
xor
inc
gs
mov
fstps
ret
inc
cmp
shll
inc
sbb
and
aas
int
cmp
idivb
aas
dec
sbb
jg
cmp
out
incl
add
sti
movl
lods
ffree
fmuls
mov
fchs
sub
push
adc
icebp
insl
cmpsb
cmp
dec
cmpsb
xor
sti
jg
xor
mov
add
xchg
sub
push
cmc
pop
lahf
xchg
pop
lahf
jmp
jle
incl
loopne
adc
lods
xchg
jne
clc
cs
call
jo
cmp
stc
pop
adc
mov
or
lods
mov
sub
scas
inc
dec
icebp
fadd
lods
jecxz
leave
int
and
lods
sub
sub
imul
decl
dec
sbb
fldln2
mov
mov
pushf
out
fcoms
movsl
ljmp
xchg
fwait
icebp
ret
stos
adc
ljmpw
decl
test
int3
xor
test
gs
mov
or
inc
sub
add
aam
and
dec
cli
xor
adc
movl
or
fcomip
push
or
mov
add
orl
mov
add
mov
cmpsl
cltd
dec
xor
popf
pop
sub
xchg
int3
jmp
lock
dec
mov
or
pop
nop
test
xor
or
xor
fdivr
ljmp
int
daa
jnp
stos
cmpsb
adc
mov
sub
lret
and
add
pop
imul
mov
pop
fisttpl
mov
inc
out
dec
test
std
lret
mov
cmp
mov
lods
scas
ljmp
sysexit
ja
clc
mov
test
xor
dec
andl
lcall
call
and
test
jo
enter
push
rclb
jg
xchg
int3
insl
jae
and
jecxz
pushl
std
stc
and
je
mov
xor
nop
or
mov
inc
xchg
adc
pushl
or
ljmp
les
sahf
and
pop
cld
adc
mov
cs
fucomp
ss
cld
mov
pop
mov
sti
or
cld
inc
repnz
mov
xlat
int
jmp
shlb
xor
xor
mov
sarb
sahf
xchg
dec
mov
push
in
dec
in
shrl
in
push
cmp
mov
ret
inc
or
lcall
add
arpl
ja
and
sti
nop
pop
daa
push
add
js
rclb
ljmp
test
cmpl
dec
and
and
scas
xor
jge
add
idiv
das
xchg
test
mov
mov
popf
daa
cwtl
cmp
hlt
sbb
cmc
xchg
inc
sbb
mov
xchg
xchg
lcall
lret
fstl
lahf
cmp
and
popl
repz
rcr
test
arpl
loop
call
jbe
shlb
sub
lods
lret
mov
bswap
sar
test
incb
mov
loop
xchg
jecxz
es
popa
inc
push
outsl
aad
rorb
decl
adc
xchg
xchg
lret
jne
int
dec
es
inc
cli
mov
push
fildl
lods
lcall
cmp
push
and
aad
mov
mov
pop
cmc
mov
mov
movsb
imul
inc
mov
call
loopne
jp
fcmovb
shrl
fs
outsb
out
mov
lds
filds
jle
mov
in
or
pushl
and
mov
enter
rcr
mov
test
ret
add
dec
mov
xchg
push
ret
cmp
adc
scas
fisttpll
jecxz
ret
decl
mov
xor
ljmp
mov
notb
loop
arpl
in
clc
es
add
stos
xchg
les
push
mov
sbb
decl
out
or
xor
lret
outsb
icebp
mov
mov
push
ret
ret
jne
test
jecxz
dec
aad
or
test
add
mov
cld
mov
fcmovnbe
adc
push
mov
stos
dec
loopne
xchg
jbe
pop
inc
dec
ds
xor
pop
pop
test
pushl
pop
ja
mov
hlt
pop
jnp
jg
out
pop
xor
and
lock
xor
movsb
jg
mov
push
add
sbb
adc
cld
xor
cltd
adc
push
inc
aas
cmp
dec
jno
mov
aam
pop
and
arpl
jg
cmp
sub
pop
xor
xor
sub
pop
les
roll
incl
pop
sub
ficomps
dec
lret
fwait
or
jg
fcompl
mov
xchg
test
jmp
subl
decl
lret
xlat
js
ds
push
icebp
dec
repnz
stc
mov
xor
push
jg
mov
loopne
mov
sbb
out
ret
sub
out
fst
mov
incl
mov
popa
fsubl
imul
xchg
orl
loope
fcoms
sub
rol
decl
mov
dec
add
mov
push
iret
fs
xchg
jno
cmp
mov
cmpsb
push
sub
mov
add
in
push
out
dec
rcr
push
pop
or
dec
ficoml
mov
xchg
cmp
sbb
dec
cli
sub
pop
loop
jbe
and
push
inc
jge
pushl
mov
mov
stos
mov
int
sbb
jmp
adc
clc
fisttps
dec
leave
push
or
dec
stos
adc
mov
inc
ljmp
divl
or
xchg
pop
daa
push
xor
mov
mov
mov
ljmp
dec
ret
and
jge
xchg
hlt
jmp
and
pop
inc
sub
pop
xchg
sub
or
add
gs
leave
push
mov
dec
lock
in
jle
gs
or
sbb
stos
cwtl
in
and
cltd
and
xchg
das
xchg
divb
scas
dec
into
mov
add
icebp
ljmp
les
cltd
fs
mov
nop
xchg
add
insb
test
push
ret
fistps
xchg
mov
ss
rol
cmp
imul
js
pop
xor
cltd
lock
incl
notl
xor
test
rcr
push
jno
mov
mov
pop
dec
dec
rep
clc
mov
sub
xchg
lret
scas
mov
nop
push
adc
mov
dec
mov
std
inc
fistpl
dec
and
xchg
adc
and
ja
outsb
rcll
jno
cmpsl
je
cmp
decl
mov
and
inc
dec
rcll
sub
mov
out
loope
in
cmpb
jmp
hlt
cmp
add
push
lcall
lods
roll
rclb
cmpsl
xchg
ljmp
mov
xchg
lods
cmp
rcrb
inc
cmp
sub
test
call
clc
gs
popa
stos
mov
ljmp
xchg
imul
pushl
push
inc
jns
into
lahf
pop
mov
ret
stos
fwait
dec
ss
xor
jo
test
icebp
mov
cmp
sar
or
pop
or
jle
ret
ret
icebp
cmp
jg
xor
cmp
sti
int
jg
or
lea
lret
add
dec
stos
hlt
add
dec
arpl
lret
jnp
ror
pop
sbb
int
jge
cmp
mov
jbe
dec
mov
cs
icebp
fcmovne
xchg
mov
decl
out
andl
jmp
enter
aaa
cs
mov
mov
stos
pop
jmp
out
add
mov
repz
clc
lahf
push
xor
aam
mov
mov
and
pop
arpl
sub
rclb
cli
loope
ljmp
call
cmp
aaa
mov
jge
stos
xchg
fidivrl
lock
cmp
popf
jne
ljmp
inc
insb
push
dec
or
mov
lock
pop
lock
xchg
nop
jmp
fsub
pop
scas
in
fs
cmp
jg
incl
cmpsb
loope
jns
xchg
xor
xchg
int
or
popl
call
test
in
mov
jp
ret
or
mov
incl
mov
idivl
mov
dec
adc
mov
ljmp
mov
sarb
adc
push
loope
adc
jns
dec
nop
loopne
push
add
add
or
push
das
mov
cs
nop
fwait
dec
mov
xchg
mov
adc
xchg
dec
add
aaa
das
mov
pop
mov
das
ljmp
mov
das
cmc
outsl
pop
sti
mov
mov
mov
inc
jnp
fs
cmp
jmp
ss
xchg
inc
add
push
pushf
out
sub
test
xchg
fwait
ljmp
and
mov
inc
fsubrl
xchg
sti
cmp
push
mov
out
lea
popa
fnstcw
std
adc
jns
mov
mov
jo
fisttps
sub
xchg
popf
in
in
mov
popf
mov
fisttpll
mov
pop
pop
cmpl
out
inc
es
mov
movsb
ljmp
sarb
mov
mov
loopne
jg
mov
jns
pop
mov
dec
repz
imul
xchg
dec
jne
cli
fists
call
cmp
jg
cmp
adc
mov
inc
lds
mov
cmp
adc
es
incl
jp
psllw
bound
jo
mov
inc
sar
clc
lcall
loop
adc
dec
xor
xor
and
mov
shl
fiadds
xchg
pusha
or
adc
mov
adc
jl
loop
sbb
xor
adc
ljmp
popf
cmp
or
xor
add
cmp
mov
mov
jmp
int3
shll
clc
iret
pop
std
hlt
xchg
rcl
lods
stc
adc
inc
sbb
out
sahf
sbb
mov
sbb
ret
xor
sbb
and
lea
mov
mov
pop
mov
and
pop
hlt
ljmp
mov
pusha
in
and
in
mov
neg
pop
jge
mov
decl
xor
xlat
dec
stos
sbb
aaa
dec
pop
xchg
cmp
sbb
cmp
decl
ja
lcall
lods
fwait
inc
mov
mov
test
dec
imul
les
xor
cli
or
popl
mov
inc
incl
incl
mov
mov
cmp
incl
push
or
mov
cmp
xchg
add
out
cmp
fcomip
incl
mov
sahf
das
pop
dec
outsb
sub
fs
movsb
aaa
xchg
add
mov
iret
pop
scas
sbb
pop
mov
ror
loop
lds
movsl
sbb
push
lock
roll
pusha
jno
outsl
jge
gs
sbb
jno
incl
adc
ds
ss
in
or
adc
mov
fbld
lock
xor
pop
xor
pushf
and
xor
pushl
cld
sti
and
xor
fisubl
pop
mov
dec
in
popa
jg
std
fwait
jl
mov
mov
hlt
jmp
lea
and
andl
xchg
mov
inc
test
mov
xchg
push
mov
sub
add
sub
shll
dec
out
fwait
popa
xchg
adc
and
jg
in
jno
out
mov
test
loope
mov
cmpsb
and
jbe
lea
aaa
jb
mov
xor
xor
inc
ds
mov
leave
and
shrl
adc
clc
jmp
scas
imul
mov
add
or
incl
into
fs
es
and
adc
cmc
cmpsb
push
mov
decl
pop
lds
fmull
daa
cmp
jb
sbb
pop
dec
jp
sub
incl
jg
xchg
jae
jnp
je
cmpsl
or
jmp
ss
incl
test
fstpt
je
cmp
cltd
call
icebp
jmp
mov
mov
lcall
and
outsb
mov
mov
adc
cmpl
repnz
movsb
aaa
clc
stos
push
std
ror
adc
mov
in
push
push
sub
dec
adc
pushl
sbb
jo
inc
nop
mov
movsl
inc
aas
cmp
jnp
jbe
cmp
xor
xor
xchg
movsb
roll
cmp
imull
leave
aad
or
sbb
jl
loop
gs
push
aad
jle
adc
lcall
push
pop
outsb
or
push
mov
mov
cmpsb
inc
jecxz
mov
jo
imul
mov
incl
inc
call
into
adc
adc
xor
mov
out
xchg
das
cwtl
add
decl
mov
push
mov
cwtl
adcl
mov
negl
repz
rorl
xor
lret
cmp
aaa
push
insb
and
sub
es
fcomip
addr16
lods
xor
mov
or
ret
cmp
inc
jb
push
jne
or
sbb
faddp
push
adc
fisubrs
fwait
leave
shll
cwtl
loope
push
cmp
mov
enter
mov
jl
test
fnstcw
jg
ljmp
ja
fwait
inc
mov
cwtl
fstl
push
dec
lods
mov
pushl
in
outsl
addr16
pop
inc
sahf
jne
mov
mov
sbb
xchg
and
and
lcall
jg
sub
or
inc
or
dec
jnp
fildl
bound
repz
mov
jecxz
mov
pop
out
push
pop
psllq
mov
test
xchg
jo
and
and
mov
aaa
xchg
sub
push
rorb
mov
hlt
test
shlb
nop
cmp
cltd
or
sbb
ljmp
rcll
fs
repz
sub
or
into
lds
mov
jmp
lock
pusha
pop
sbb
int3
dec
push
insb
stos
test
loope
inc
mov
mov
dec
mov
sbb
sahf
and
push
xor
enter
adc
bound
push
add
lock
sti
test
daa
imul
add
cmp
rol
mov
and
hlt
roll
out
pushl
sub
pop
fisttpl
sub
dec
lock
decl
lock
and
dec
xor
je
lea
sub
fimuls
or
ffreep
pop
jmp
into
push
test
les
jne
insb
fisubrl
inc
mov
mov
decl
movsl
xor
sbb
pop
orl
mov
fdivs
mov
rorb
mov
dec
fwait
jge
notb
inc
icebp
mov
in
pop
xchg
jnp
push
movsl
nop
fstp
fbld
pop
mov
pop
out
rolb
jmp
leave
scas
mov
mov
mov
fnstcw
shll
mov
add
lods
jg
decb
mov
out
adc
xor
repz
fstpl
test
dec
popa
les
ljmp
insb
sub
icebp
insb
xchg
mov
leave
out
scas
mov
insb
sub
mov
scas
mov
xchg
stc
xchg
ret
out
aas
cmp
dec
dec
mov
or
stos
jle
pusha
sarl
fdivrs
sbb
mov
inc
mov
clc
mov
and
popf
inc
test
popf
test
lods
cmp
pop
pushf
cs
jns
les
mov
aam
sbb
cmpsb
xor
out
ja
aas
adc
imulb
fisubrl
decl
andb
fsubrs
or
cwtl
sub
decl
add
jecxz
cli
pop
dec
push
adc
scas
call
inc
adc
or
lcall
pop
loop
aas
push
aaa
xorb
fnstcw
xchg
jmp
pushf
and
std
mov
cmovs
js
mov
ds
jae
cwtl
mov
push
mov
lahf
lret
fidivl
arpl
mov
mov
in
shl
cmp
sarl
pop
or
incl
mov
mov
pushl
xlat
pop
sbb
repz
add
movsl
cltd
decl
shll
ret
xchg
orb
incl
cmp
mov
xor
pop
mov
nop
mov
mov
jg
stos
add
jp
xor
jmp
cmpsb
xlat
shrb
add
out
inc
push
mov
cmp
dec
ret
shlb
jg
mov
pop
xor
and
test
dec
cmp
call
mov
jns
hlt
in
mov
mov
icebp
shll
sbbl
cmpsl
jmp
movsb
push
jne
ja
pop
aam
jge
push
push
xor
mov
lcall
jns
aad
lods
vfrczpd
cmp
addb
or
push
mov
add
lds
xor
xor
jne
push
cmp
mov
lret
in
fldcw
mov
outsl
dec
in
mov
xchg
mov
or
cmp
imul
jg
mov
aaa
fistps
jge
shlb
rep
daa
pop
cs
pushl
int3
lods
mov
mov
push
dec
mov
roll
push
mov
xlat
or
clc
leave
xchg
repnz
fiadds
js
ljmp
sub
dec
insl
inc
mov
mov
lds
lahf
sbb
lcall
sbb
xchg
rcll
std
cmp
in
jnp
es
lods
ljmp
scas
outsl
cli
jg
fnstsw
pop
pusha
push
enter
adc
adc
shlb
push
aad
pushl
jl
leave
xchg
das
lods
and
aad
dec
enter
adc
mov
ret
clc
dec
lret
adc
sti
int3
cmp
lods
pop
add
sub
out
in
jmp
sbb
cld
dec
bound
dec
lcall
shlb
daa
cmpsb
dec
es
call
clc
jb
sub
stos
sbb
fcoms
call
mov
pusha
cld
mov
std
push
out
ss
sub
dec
in
pop
adc
scas
std
sbb
xchg
mov
inc
jl
and
inc
testl
pop
inc
mov
jnp
das
rcrb
idiv
pushl
and
loopne
call
test
repz
idivb
mov
xchg
in
push
ljmp
and
js
daa
xor
nop
inc
mov
xchg
adc
dec
psubq
incb
or
jo
ja
add
das
xchg
xor
sbb
and
rcll
jb
mov
mov
adc
test
nop
scas
cmp
subl
outsl
cli
cmc
ss
xchg
fsubrp
leave
jecxz
sbb
bt
jbe
lret
or
cs
incl
rorl
sbb
frstor
dec
jle
mov
xchg
daa
or
xlat
lea
rcrl
iret
push
push
add
notl
fwait
das
push
mov
sbb
cmc
lret
cmp
repnz
mov
aam
xchg
pushl
push
pop
imul
mov
jno
mov
ljmp
mov
inc
ljmp
hlt
dec
mov
xadd
pop
xchg
or
mov
notb
jno
pop
sub
lcall
arpl
loope
add
call
sbbl
adc
xchg
and
jnp
sub
js
ljmp
shrl
pop
mov
adc
adc
sbb
mov
dec
adc
decl
push
adc
jno
push
popa
icebp
stos
xlat
in
adcl
imul
and
and
decl
outsb
scas
insl
lcall
jecxz
add
call
sbb
mov
cwtl
test
cmp
hlt
sub
add
inc
push
mov
cli
lods
lea
mov
pop
mov
or
push
push
lcall
sub
loopne
cmp
out
sub
pop
je
iret
test
inc
out
js
ja
sbb
notl
mov
fs
test
fdivl
pusha
mov
pop
cmp
xor
lcall
sub
jno
fsubl
add
fs
jp
mov
pop
mov
into
jns
sbb
inc
std
adc
test
jne
mov
incl
pop
shr
xchg
sbb
or
mov
popa
jg
int3
cmp
xchg
add
xor
and
decl
scas
test
cs
jg
or
pop
and
push
pusha
dec
dec
xor
std
jle
decl
ljmp
lahf
bound
jp
data16
mov
mov
lea
sub
and
fcomip
adc
loop
ret
jb
adc
jp
add
mov
adc
lcall
movsb
add
inc
das
xchg
push
bound
inc
mov
mov
das
mov
mov
jg
fwait
cs
in
popf
xor
sub
lea
xchg
sbb
addl
fdivl
pop
lret
or
xor
cmp
xchg
mov
add
jno
jp
movsl
rolb
in
jmp
ds
adc
mov
xchg
inc
or
adc
pop
sub
xchg
xor
decl
or
repnz
sub
mov
repz
mov
je
test
pop
xor
xchg
mov
ljmp
pop
test
inc
pop
mov
iret
cmp
mov
mov
in
cli
sbbl
lods
lods
mov
shlb
loopne
sbbl
dec
adcb
and
or
loopne
ret
add
inc
xor
out
adc
pop
into
xchg
dec
repnz
xor
push
pop
decl
scas
mov
fisubrl
stc
test
incl
sbb
add
and
pushl
xchg
mov
sbb
pop
jb
jmp
not
movsl
rol
jns
or
enter
adc
lcall
incl
jp
pop
popa
pop
fs
xchg
rcrl
js
ljmp
lahf
jb
je
jns
fmuls
sbb
cmp
jg,pt
mov
cltd
insl
and
ja
incl
jns
push
or
mov
jecxz
inc
sbb
cltd
mov
inc
inc
or
shlb
mov
or
inc
xchg
mov
lds
stos
incl
cld
daa
ret
cli
stc
in
or
loope
adc
xorb
xchg
dec
les
inc
adc
lret
lcall
fstpl
imul
subl
ljmp
lds
xchg
test
iret
adc
cmpsb
dec
mov
repz
dec
movsl
push
std
jg
add
dec
fsts
in
inc
pop
outsl
loope
add
xor
cmp
faddl
cwtl
sar
push
push
bound
inc
xchg
jle
push
jl
es
mov
xchg
xchg
cmc
mov
xor
enter
test
sbb
cmp
fildll
sti
or
lret
ljmp
and
push
lock
shl
pop
sahf
or
insb
mov
pop
dec
and
inc
or
xor
xlat
xlat
xchg
sub
mov
cs
pop
or
test
call
sbb
mov
and
jl
lock
or
mov
stc
or
add
sbb
jnp
ljmp
cli
decl
cmp
inc
jnp
dec
xchg
out
aaa
xchg
jg
fistpll
mov
cmp
xchg
in
push
cmp
inc
repz
mov
add
mov
mov
push
jle
daa
push
push
jne
shl
push
cmc
mov
rolb
imul
pop
incl
mov
mov
sbb
or
lods
adc
aam
ljmp
fimuls
sub
das
mov
mov
fisttpll
nop
push
std
call
sbb
popa
or
jmp
xchg
scas
pusha
aaa
mov
incl
adc
pop
imul
xchg
push
movsb
inc
bound
mov
jg
lock
lret
jae
test
scas
mov
jecxz
pushl
nop
xor
cmc
cmp
cmpsl
rcll
add
or
test
test
ja
or
lret
cmp
push
pusha
mov
add
mulb
test
icebp
lret
aad
pop
loopne
arpl
mov
out
sbb
push
repnz
rol
in
incl
enter
xchg
ror
xor
sub
mov
into
sub
ljmp
sahf
xor
adc
mov
add
ja
loop
jge
jmp
jmp
gs
push
cs
pop
sbb
mov
fwait
mov
inc
jg
shl
push
or
hlt
xor
lret
pop
inc
inc
iret
stc
sbb
jmp
dec
pop
addr16
or
incl
out
jbe
mov
les
out
dec
adcb
cli
mov
and
pop
mov
inc
mov
repz
movsb
ret
std
cli
aaa
lock
out
cli
or
insb
pop
loope
idivl
addr16
sub
sub
cmp
inc
movsl
cmp
inc
test
push
jae
xor
mov
adc
in
clc
adc
xchg
push
pop
cmp
mov
in
xchg
or
out
in
inc
fs
cmp
cwtl
dec
lret
idiv
incl
or
dec
sub
sbb
dec
xchg
jbe
push
nop
les
pop
ljmp
lods
dec
int
xchg
loop
stos
aas
pop
jecxz
xchg
push
jle
and
push
xchg
mov
add
xor
je
mov
xor
sub
loopne
fs
inc
bound
lods
decl
stc
sbb
lahf
les
mov
mov
jnp
je
xchg
outsb
xchg
subb
frstor
lods
jmp
cmpsl
add
enter
xor
push
aas
mov
mov
push
inc
stos
cltd
aas
call
jne
outsb
loopne
imul
mov
pop
das
mov
mov
or
xor
inc
rorl
push
movsb
outsl
or
decl
les
mov
cwtl
test
divb
sbb
hlt
mov
or
decl
and
xor
cwtl
fcompl
in
mov
es
es
es
sub
push
xor
ljmp
push
sub
mov
mov
and
cmp
jmp
fstpl
jp
pushl
mov
test
xchg
out
in
xlat
sub
add
cmp
cmp
cltd
push
pop
scas
sub
decl
inc
cmp
fsts
xor
pop
fdivp
aaa
inc
das
jbe
stc
lret
in
pop
sub
and
mov
push
mov
shll
mov
dec
add
pushl
and
dec
xchg
subb
sub
ret
pop
xor
pop
aam
adc
ljmp
jnp
lar
stc
jmp
stos
jp
aas
mov
ret
dec
lock
fldcw
mov
decl
test
cmp
push
xchg
pop
movl
lret
push
lret
inc
sbb
or
mov
call
je
sub
ret
pop
push
das
and
in
nop
ss
sbb
dec
shll
lds
inc
ljmp
outsl
nop
lock
dec
mov
cmp
cmc
in
add
fbstp
ljmp
or
cs
or
fadds
jg
jne
fs
push
jnp
es
add
xor
mov
sti
fisubrl
lcall
into
push
add
lds
mov
scas
fdivl
jg
xorl
dec
in
pop
in
insl
inc
pop
inc
in
jge
decl
add
cmp
push
add
xor
ljmp
xchg
bound
or
scas
jmp
xchg
pop
add
jle
imul
add
sbb
mov
stos
push
sub
lcall
jecxz
roll
into
ss
and
aad
sub
mov
insl
mov
cmp
xchg
xor
hlt
mov
idiv
xchg
cmc
jb
in
xor
cmp
jp
ret
pop
jmp
fs
cmpsb
fwait
dec
jmp
les
daa
or
lock
insb
sub
pop
dec
add
sbb
push
xor
mov
cmp
sub
dec
fwait
jae
imul
mov
decl
xchg
stos
cmp
inc
adcl
std
adc
lcall
incl
dec
mov
leave
sbb
push
sub
out
bsr
xlat
test
ds
cld
decl
adc
cmc
scas
adc
int
imul
inc
ljmp
cmp
lock
cli
and
sbb
cmp
xchg
int
dec
inc
sbb
lock
call
mov
and
dec
les
enter
jae
pop
dec
scas
lcall
mul
aad
pop
movsl
jne
add
lcall
xorb
ret
imul
movsb
outsl
je
daa
loop
rcl
mov
push
and
mov
insb
mov
and
nop
mov
jmp
pop
inc
call
mov
data16
jp
les
mov
push
mov
pop
fsubs
stos
in
incl
and
rcr
and
xor
xor
dec
sbb
ja
call
pushl
leave
pop
stos
pusha
jae
pop
xchg
inc
push
lods
xchg
sbb
and
shlb
sbb
jnp
xchg
mov
sbb
into
xchg
cmp
out
pop
xchg
leave
test
in
inc
out
sub
mov
enter
push
pop
cmp
imul
cmp
jae
int
jne
sbb
aaa
loopne
out
push
scas
icebp
call
sbb
mov
faddl
push
or
push
push
fcmovnbe
call
lcall
pop
sub
icebp
fnsave
pop
add
test
cmp
add
pop
and
inc
pop
call
push
cmp
and
ret
insl
scas
pop
aas
add
inc
jg
and
pop
lds
cmc
aad
lods
cwtl
pop
or
push
mov
mov
jnp
xor
call
inc
jb
jne
mov
add
jg
in
call
repz
int
rep
mov
jo
pop
hlt
pushl
mov
lret
sbb
sbb
or
arpl
incl
test
xchg
sub
or
cmp
lret
cli
nop
push
rol
mov
dec
dec
shl
jg
pop
lret
jl
lcall
adc
add
fwait
sti
sahf
push
in
mov
xor
arpl
pushl
cld
inc
sbb
mov
mov
shl
cmpsl
lods
sbb
inc
scas
and
or
or
decl
stc
push
out
je
iret
dec
mov
lcall
daa
xchg
or
cmp
das
or
jg
dec
ret
iret
sub
add
fidivs
mov
pop
lret
cmp
jmp
push
add
and
adc
or
sub
sti
xor
std
pop
jmp
bound
ficompl
out
mov
add
push
sub
and
mov
jg
pushl
in
sahf
push
push
add
into
push
test
mov
pushl
pop
sbb
or
testl
lds
jg
outsl
shrb
clc
xchg
imul
sub
jecxz
pushl
push
loope
loopne
adc
test
call
lods
pop
fnstsw
jmp
incl
sub
fists
in
push
aam
and
lcall
clc
inc
test
xchg
mov
divb
out
mov
andl
cld
incl
pop
mov
popf
pop
loope
cmp
jg
inc
scas
sub
adc
pop
pop
aas
dec
mov
fldcw
inc
adc
js
inc
clc
ja
scas
mov
mov
popa
push
sub
ljmp
push
mov
mov
mov
testl
mov
ljmp
mov
jmp
rcr
dec
jle
mov
xlat
les
js
push
push
shll
jmp
test
arpl
xchg
push
xor
mov
sahf
stc
js
enter
mov
lock
call
mov
imul
or
cwtl
stos
jns
push
test
pusha
std
mov
mov
xor
in
data16
hlt
xchg
jo
ljmp
sub
inc
inc
lcall
mov
scas
lea
aas
and
jne
cmpsl
js
jp
imul
push
mov
pop
add
xchg
aad
aam
dec
or
pushf
cmp
add
shll
or
pop
nop
xchg
nop
mov
call
out
aaa
pushf
pop
cmp
mov
repz
mov
pushf
popf
repz
pop
int
lcall
dec
andl
out
add
pop
into
repz
mov
dec
adc
ja
inc
add
aaa
rcll
sub
jmp
inc
jno
mov
xchg
adc
push
fmul
shll
addr16
clc
ljmp
mov
lret
and
cmp
call
out
es
sbb
outsb
daa
mov
sub
mov
int
negl
xchg
lock
in
lret
sbb
xchg
jecxz
hlt
scas
fidivl
fucomip
repz
jg
ss
call
push
pusha
xor
gs
hlt
add
and
mov
cli
icebp
sub
test
cwtl
or
xor
push
sti
scas
fisttps
ds
outsl
mov
and
shr
cmp
pop
pusha
leave
cmp
call
test
xchg
imul
ret
add
movsb
pop
or
cmp
stos
call
mov
pop
stos
cmp
mov
aam
popl
aaa
call
lcall
addb
mov
scas
imul
ror
in
jb
sbb
insb
std
lret
jg
mov
and
in
pop
lods
push
fs
call
push
popf
push
jle
cmp
fsub
mov
mov
pop
cmc
push
dec
mov
ljmp
inc
sub
mov
and
addr16
or
pop
and
les
gs
or
loop
mov
call
jecxz
inc
dec
out
or
mov
fbstp
dec
and
push
dec
call
pop
and
jmp
test
es
enter
lock
in
aaa
mov
push
add
adc
ficoml
jge
mov
mov
xor
dec
enter
push
dec
add
mov
ljmp
push
push
ss
xor
outsb
fistl
dec
sub
ljmp
lret
aas
sbb
xchg
xchg
enter
jmp
fiaddl
cmc
mov
cltd
repz
sti
fdivp
fwait
bound
inc
xor
mov
lods
sahf
mov
mov
push
ret
jmp
xchg
mov
test
cmp
add
repz
xor
shl
mov
loopne
jmp
jecxz
fbld
lock
pop
aad
jg
mov
cmp
lds
jnp
adc
add
dec
decb
sahf
cld
cmpb
rcll
pop
insb
or
adc
xchg
jns
lcall
in
or
mov
jge
test
jae
clc
jno
or
cmp
jg
vmaxsd
incl
mov
dec
cmp
je
xchg
inc
jbe
adc
mov
fildll
add
fstps
inc
push
insb
dec
cmc
jae
cmp
and
lods
sbb
xchg
int
fcomip
xor
mov
pop
sbb
mov
add
into
pop
pop
lret
cmpsb
je
imul
mov
mov
orl
xor
cmp
je
imul
or
push
cwtl
je
imull
mov
leave
jmp
inc
or
xchg
es
insl
movsl
decl
mov
jbe
dec
insl
pop
clc
pop
addr16
sbb
inc
loopne
pop
out
lahf
shll
jbe
push
stc
insl
aam
and
decl
insb
push
mov
xchg
nop
hlt
fs
dec
dec
stc
lds
push
or
push
dec
mov
cmc
push
cs
or
ror
push
adc
ljmp
pop
movsl
sbb
add
ja
inc
nop
jmp
push
js
push
int3
sbb
fistps
cltd
nop
jecxz
pop
cmp
add
lret
pop
mov
ret
dec
daa
dec
sar
cmpsb
incl
pop
xchg
rorb
lds
dec
inc
inc
dec
pop
mov
sbb
cmpsb
add
sub
jne
mov
push
pop
jecxz
rorl
or
dec
and
fidivs
enter
sub
inc
in
inc
cmp
pop
dec
add
mov
mov
lods
mov
adc
pop
repnz
and
sub
stc
les
or
fistpll
pop
push
jmp
sub
xor
jmp
in
mov
ror
or
pop
in
loopne
jmp
enter
enter
decl
xor
stos
sbb
into
rolb
cs
dec
out
out
or
adc
xor
mov
push
push
or
pop
or
incl
adc
pop
mov
cmpsl
push
adc
dec
dec
pusha
mov
push
cmpl
ret
mov
mov
jnp
xchg
sbb
xchg
ljmp
daa
lods
test
in
push
xchg
or
xlat
mov
inc
popa
dec
push
fbld
loope
jo
jmp
aas
sarl
push
loop
xor
shlb
insl
mov
jae
pop
jmp
mov
outsb
dec
and
add
xchg
fmul
in
xchg
call
mov
cli
jns
les
push
in
sub
cwtl
cwtl
fidivrs
cmpsl
adc
add
inc
push
mov
sub
insl
lods
jmp
add
adc
mov
xchg
cmp
push
pushl
or
push
mov
cmp
mov
es
mov
cmc
decl
sbb
pop
repnz
hlt
aam
inc
jno
movl
pushl
inc
popa
nop
sarl
adc
mov
jg
test
fisttpl
out
xchg
dec
jns
enter
int
in
sub
lcall
xchg
inc
xor
and
push
sub
lcall
dec
fldenv
decl
mov
xchg
loopne
fistpl
subb
inc
xor
push
ds
je
mov
mov
jle
call
cltd
and
add
and
leave
and
sbb
rolb
pop
xor
add
cmpsl
jbe
pusha
inc
sub
push
fmull
cwtl
mov
daa
ss
push
loop
jp
into
pop
xor
inc
pop
mov
mov
jecxz
mov
idivl
pop
xchg
leave
je
fisubs
mov
sub
movsl
jno
inc
add
inc
movsl
jo
fldt
int3
lods
and
call
ds
adc
mov
sub
lret
aaa
imul
push
mov
in
mov
lcall
xor
scas
popa
insb
ret
loopne
mov
pushf
scas
pop
iret
sub
or
test
int
sbb
fwait
ljmp
inc
mov
mov
inc
imul
cmp
mov
jb
syscall
add
jmp
xor
out
popf
xor
push
sbbb
sbb
lahf
xchg
push
hlt
jl,pn
jg
into
stc
idivb
push
int3
mov
add
sbb
ret
sbb
inc
dec
adc
and
mov
ljmp
cmp
ficomps
repnz
addr16
sbb
jae
les
clc
ljmp
xchg
lret
sbb
sub
push
in
fs
out
adc
pushl
mov
and
in
test
or
cmp
xchg
fists
pushl
ljmp
fstps
les
ret
mov
mov
push
pushl
and
mov
iret
mov
negl
sbb
jo
xchg
adcl
jae
pushl
jmp
fdivrl
mov
xchg
faddl
rclb
or
and
push
ret
push
and
add
mov
jge
push
and
rolb
loopne
adc
std
ljmp
daa
mov
call
ret
popf
pusha
mov
es
insl
cmpsl
nopl
pushf
mov
push
push
push
sub
ljmp
adc
mov
adc
clc
xchg
dec
fwait
push
dec
lods
sbb
pop
xor
xlat
fisttpl
jbe
mov
or
sbb
in
mov
dec
stos
out
jl
mov
ljmp
flds
and
loopne
test
pop
cli
adc
sbb
ljmp
mov
addr16
xor
outsb
push
pop
sbb
nop
fs
ret
push
cmp
sbb
and
xlat
or
addr16
inc
push
out
movsl
ret
jmp
dec
clc
stc
cmp
std
nop
test
loope
cmp
xchg
hlt
jg
jle
test
sti
jp
test
add
dec
scas
or
sahf
decl
lock
pop
movups
test
push
into
adc
mov
push
jne
ja
lcall
pop
fs
lret
push
push
mov
dec
icebp
vmovntdq
xor
mov
sbb
outsb
jecxz
push
jns
sub
in
insb
lcall
adc
xlat
sbb
push
jno
add
push
aad
int3
lea
cwtl
xlat
lret
mov
mov
mov
mov
pushl
jge
and
or
inc
mov
cli
mov
adc
in
loopne
mov
jmp
sub
and
dec
outsl
mov
jns
push
repz
lods
mov
fistpl
int3
add
or
out
bound
fisubl
inc
enter
incl
scas
js
jmp
add
sbb
shll
int
dec
xor
mov
mov
cmp
mov
add
scas
add
mov
add
xor
or
mov
sub
mov
push
orl
out
push
mov
leave
iret
lea
mov
mov
pushl
sarb
push
mov
or
or
shl
mov
xchg
xchg
inc
decl
and
inc
es
test
sbb
hlt
pushl
lods
xor
icebp
insl
or
int3
lret
js
jnp
clc
xchg
mov
jae
test
pop
or
das
hlt
incl
adc
cmp
lods
fdivrs
inc
mov
out
inc
aas
fmul
adc
xchg
cmp
add
shrl
jbe
pushf
jnp
jbe
mov
ret
jo
jb
call
arpl
add
aam
sub
fildl
stos
jmp
outsb
dec
dec
rcr
and
mov
inc
add
and
mov
sub
inc
pop
mov
ljmp
mov
mov
xchg
rcrl
mov
aad
sbb
es
decl
adc
imul
shlb
pop
push
push
enter
jle
lods
sbb
jmp
inc
fidivrl
add
and
cmpsb
lahf
imul
in
cli
imul
in
mov
add
shrb
pop
leave
test
jnp
shrl
shll
inc
and
and
mov
xchg
lods
mov
xor
je
pop
or
push
push
test
mov
pop
cmp
xlat
sub
cwtl
bound
lret
adc
mov
or
shll
sti
pushl
sti
aad
aas
mov
xchg
sbb
in
scas
inc
out
sbb
scas
rcll
lea
in
call
or
dec
imul
sub
mov
cmp
mov
ljmp
inc
jge
push
mov
push
sbb
sbb
lods
movl
jne
mov
call
hlt
add
inc
jg
mov
orl
jo
mov
and
inc
xchg
lret
call
or
add
fistl
mov
out
in
movsb
cmp
icebp
xor
mov
push
inc
and
call
incl
cwtl
or
xchg
pushf
fsub
inc
movsb
mov
das
pop
mov
xchg
pushl
scas
loopne
mov
hlt
adc
push
fwait
pop
popa
es
cmp
push
rclb
les
aad
incl
icebp
pop
outsl
dec
jo
push
fcoms
dec
cmp
jmp
mov
add
pushl
sub
fists
jbe
sahf
cld
enter
repnz
out
dec
xlat
mov
cmp
sbb
adc
adc
xchg
in
mov
iret
cmp
sub
xchg
and
mulb
sub
dec
inc
mov
adc
std
lcall
dec
or
ret
dec
psllw
xchg
jo
mov
mov
leave
lods
fisubrl
filds
jmp
push
or
or
into
imul
push
aad
mov
sbb
decl
cwtl
pop
add
pop
in
clc
push
mov
sub
mov
cmp
xchg
jecxz
fwait
adc
loope
adc
push
mov
loopne
iret
pop
sbb
mov
pop
mov
fidivl
mov
test
fwait
xor
dec
test
call
cmpsl
jmp
inc
enter
repz
mov
pop
xchg
repnz
sbb
and
data16
or
ljmp
lahf
or
jmp
cmp
dec
adc
pop
cwtl
clc
sar
mov
leave
mov
adc
mov
cmp
cmpsl
pop
cmp
iret
lcall
inc
test
dec
push
ret
test
jecxz
xor
pop
and
ljmp
cmp
pop
ror
arpl
mov
push
and
xchg
or
inc
jl
jmp
dec
out
mov
xor
mov
das
fiadds
lahf
icebp
fldl
mov
cmp
mov
mov
aas
add
mov
and
and
mov
push
outsb
or
and
into
mov
pop
pushl
or
outsb
inc
push
fsts
mov
rclb
in
or
in
jl
pushl
add
dec
out
sahf
cltd
cmp
repz
jnp
vmovaps
push
sbb
dec
xor
std
push
xchg
shl
out
sbb
cld
fidivrs
xchg
inc
mov
jno
cmp
inc
sti
insb
test
ljmp
insl
inc
sbb
adc
mov
cmc
mov
test
mov
jmp
ret
lcall
test
cs
int3
lret
cli
lods
jae
call
inc
cli
ljmp
mov
outsl
addr16
xor
push
aaa
cli
in
fdivrs
ja
call
arpl
dec
mov
test
cmpb
ficoml
inc
cmp
scas
mov
pop
sarb
push
jbe
test
daa
mov
dec
jecxz
lret
xchg
mov
decl
cltd
jg
mov
out
lock
loope
cmp
iret
movsl
xchg
into
mov
mov
ds
int3
push
dec
mov
je
out
aaa
jne
push
shr
mov
push
sbb
add
mov
jnp
decl
ret
xchg
in
scas
repz
pop
lret
inc
pusha
pop
stc
mov
mov
lahf
xor
cmp
loop
xchg
daa
in
mov
fwait
and
call
dec
push
mov
xchg
movsb
jae
fwait
add
push
test
div
inc
mov
orl
nop
and
incl
push
cmp
es
and
in
xor
push
inc
dec
push
fisttpll
mov
sub
test
imul
mov
mov
incl
inc
stos
and
incl
and
xchg
inc
cltd
addr16
das
lock
jmp
fildl
jmp
push
push
int3
adc
ss
scas
hlt
sbb
xchg
mov
stos
mov
addr16
sbb
outsl
mov
jp
jecxz
mov
out
mov
inc
inc
jge
push
lods
fdiv
sbb
mov
ljmp
ret
adc
testl
xlat
cmp
mov
and
push
mov
jmp
sti
or
cld
movsl
xor
adc
test
shrb
add
inc
xchg
in
sbb
lock
dec
push
ret
mov
lcall
ds
adc
sub
outsl
xchg
mov
dec
jmp
fimuls
dec
int
lcall
mov
imul
push
xlat
popl
xor
mov
add
or
cmp
xor
mov
decb
call
jo
adc
pop
ret
in
push
mov
push
or
aad
sbb
inc
dec
inc
jne
mov
scas
cmc
mov
mov
jg
insb
mov
adc
xor
cmc
pusha
cmp
dec
out
hlt
fisubl
cwtl
clc
decl
or
inc
mov
jbe
dec
jnp
dec
stos
push
add
clc
and
lret
cmp
push
prefetchnta
or
incl
cmp
or
jo
stc
add
mov
call
pop
out
inc
push
xchg
fwait
int
pushl
loopne
cmp
repz
jle
sub
inc
push
popa
into
je
or
test
lahf
pushf
aaa
pop
add
add
incl
inc
jmp
adc
push
cs
push
aaa
xchg
stc
dec
imul
inc
mov
and
push
cmp
repnz
ljmp
fwait
div
dec
popa
shl
mov
xor
lcall
outsl
loop
sbb
test
insb
xchg
aaa
push
or
in
inc
mov
jmp
dec
ret
lock
push
out
cmp
adc
mov
or
add
decl
cmp
in
lea
xchg
jl
adc
pushl
inc
jge
jae
outsl
fnstcw
in
xchg
es
jl
fiadds
xor
loopne
mov
ljmp
imul
xchg
hlt
dec
add
ja
jmp
sahf
jns
mov
xor
mov
xor
dec
mov
dec
mov
adc
lods
lahf
cli
dec
mov
dec
cmp
lret
cmp
mul
jo
adcl
cmp
incl
lock
insl
xor
mov
mov
mov
aad
icebp
cmp
dec
mov
into
dec
incl
jmp
xor
jne
orb
jae
mov
push
stos
js
rcl
subl
add
or
add
jl
jle
cltd
pusha
ljmp
std
lock
hlt
and
popf
jmp
and
popf
dec
int3
sti
imul
add
jmp
mov
call
insb
mov
jnp
in
dec
mov
xchg
daa
ret
decl
cltd
mov
test
mov
xor
mov
dec
in
sub
decl
mov
lds
fstpt
cmpsl
pop
into
mov
add
loop
ds
aaa
mov
clc
push
fildll
xor
mov
or
xor
mov
lods
mov
and
pop
in
lcall
push
fmul
jg
leave
mov
xchg
pop
ss
mov
sub
cli
lcall
mov
lds
fdivrl
or
cmp
ljmp
or
cli
bswap
mulb
mov
push
xchg
adc
jg
add
and
sbb
imul
repnz
lcall
cmp
jnp
out
push
lods
adc
loopne
inc
loopne
stos
cli
mov
push
dec
test
call
dec
jmp
lock
or
xor
and
mov
movsb
scas
sbb
lds
adc
pushl
xor
mov
lods
or
xor
rorb
pop
movsl
les
cli
call
mov
pop
loope
add
jae
dec
jecxz
mov
fiaddl
pushl
stc
add
or
or
addr16
mov
cmpsb
rcrb
lock
fcomip
pushl
and
sbb
shrl
adc
dec
mov
in
fs
add
mov
cmpsb
lds
cmpsl
jg
or
pop
sbb
nop
mov
cmpsl
mov
movsl
xor
adc
mov
mov
sarb
mov
jg
sub
mov
sbb
mov
sub
adc
mov
jmp
inc
repnz
mov
mov
out
std
xor
ret
popf
pushl
adc
xor
fcomps
inc
jae
dec
add
jecxz
out
addb
jno
scas
scas
mov
sbb
shll
push
and
inc
push
incl
xor
std
jg
pop
xor
xchg
xor
jmp
xchg
jecxz
mov
mov
ljmp
jmp
mov
pop
out
icebp
iret
mov
add
jmp
push
xor
cld
push
enter
leave
cmc
mov
sbb
and
clc
enter
add
add
cmpb
xchg
dec
mov
xchg
push
ljmp
aaa
std
call
dec
out
test
rorb
mov
cs
lock
nop
mov
int
ljmp
sbb
mov
add
test
mov
in
lods
leave
cmp
cmp
push
xor
add
shll
pop
push
sbb
pop
lret
daa
or
ss
cld
lcall
or
xchg
inc
and
adc
leave
fsub
fldt
dec
xchg
jnp
pop
lea
ljmp
movsb
es
out
cmc
mov
xor
sub
fcos
ds
dec
sub
stc
mov
add
dec
aad
loop
xchg
cmp
out
sbbb
mov
in
xlat
xor
scas
jne
lods
je
das
adc
arpl
adc
ljmp
push
jbe
loope
jne
cmp
mov
xor
push
lahf
idivb
ja
pushl
xchg
mov
inc
out
fs
push
xor
cltd
mov
sbb
lods
cwtl
mov
clc
int
lcall
mov
push
sub
fsubrs
out
rclb
test
sub
pop
loop
xor
ss
and
lock
sti
in
push
and
shrb
cwtl
fs
out
je
repnz
adc
fistpll
jae
xor
and
sbb
leave
dec
xchg
jl
lret
mov
add
cmp
movsb
sub
popl
sbbb
ljmp
xchg
xor
and
xor
sti
faddl
mov
iret
lahf
mov
gs
jg
test
mov
add
pop
pop
cmc
decl
gs
dec
sti
bound
lods
and
mov
sub
fnstsw
and
push
dec
mov
cmp
incl
mov
push
test
adc
xor
bound
fimull
shld
cmc
loope
and
out
stos
insl
add
sub
in
add
push
decl
sahf
jbe
add
imul
stos
test
test
add
ljmp
ljmp
int
push
or
sbb
repz
xchg
jge
or
daa
gs
std
jns
ret
call
rorl
xchg
jne
pop
mov
loope
mov
data16
mov
ret
sbb
arpl
pop
adc
je
inc
cmp
add
incl
push
das
mov
jb
jae
xchg
int
push
jbe
push
and
pop
sbb
fbld
fadd
pop
xchg
or
arpl
mov
out
sarl
test
jmp
icebp
mov
mov
mov
or
movl
pushl
xchg
mov
rcll
sub
inc
inc
push
adc
mov
inc
pop
add
lcall
fidivrl
pop
cmp
dec
in
ss
sbb
aaa
xchg
push
adcl
xchg
adc
lods
lods
bound
std
sbb
call
popa
pop
adc
mov
ljmp
cmpsl
cld
cli
test
mov
lds
stos
leave
mov
aaa
add
jb
mov
xchg
shl
cmc
xchg
sub
fsubs
js
mov
cmpsb
mov
dec
and
lock
lock
decl
nop
or
adc
add
repnz
mov
jae
jmp
out
sbb
ror
adc
pop
push
and
and
jg
or
inc
xchg
or
hlt
jge
in
shr
push
les
aam
in
int3
cld
pop
dec
imul
mov
decl
fnstsw
mov
andb
mov
dec
lea
xchg
roll
std
sbb
xchg
ret
inc
out
xor
jg
stos
lcall
sub
lods
fsubrs
lods
lret
hlt
inc
push
cwtl
stos
mov
xchg
pop
iret
loopne
pop
dec
push
into
add
call
or
daa
dec
js
dec
es
js
test
push
jmp
or
movsb
mov
xchg
jmp
cmp
pop
leave
add
pop
push
lret
subb
call
cli
xor
ds
and
fwait
sbb
add
cmp
fidivs
aaa
data16
outsb
cltd
cwtl
xchg
or
mov
fadd
dec
out
mov
aad
jb
adc
mov
jnp
enter
movsb
mov
xor
arpl
mov
fistpll
mov
inc
dec
ret
mov
and
and
inc
cmp
inc
call
pop
jmp
fidivrs
dec
das
sahf
stos
mov
cs
dec
pop
or
jo
popa
out
push
inc
call
push
sub
and
ror
stos
pop
mov
lods
dec
xlat
mov
stos
insl
sub
mov
nop
and
xor
jns
jo
push
fwait
sahf
iret
call
loop
mov
add
cmp
push
aaa
or
jmp
lds
and
mov
and
push
and
adc
mov
cmp
imul
aaa
cmp
pushl
jne
iret
stos
cld
fcomps
cmp
imul
rol
push
add
or
jmp
push
enter
mov
jg
adc
jge
sub
hlt
ljmp
mov
inc
sarb
add
lods
sbb
imul
pushl
inc
movsb
mov
bound
stc
jp
mov
pusha
jno
andl
ja
loop
mov
mov
xchg
jb
inc
push
aaa
cmc
mov
pop
and
int3
mov
lods
in
decl
mov
xchg
test
inc
fdiv
push
and
out
mov
nop
adc
lcall
test
cmpsb
adc
arpl
out
dec
std
xchg
jg
sbb
xor
insl
mov
rcr
mov
call
cwtl
repnz
cmpsl
cwtl
add
sbb
dec
fwait
movsb
xchg
rcl
ljmp
inc
dec
xor
mov
mov
ljmp
mov
std
decl
xor
cmp
push
and
jo
clc
jb
out
ss
jb
lock
call
dec
mov
xchg
mov
cmp
cmp
iret
mov
add
sub
xchg
enter
cltd
ljmp
mov
loop
push
hlt
add
xor
data16
inc
ja
mov
pop
lret
lcall
dec
shrb
inc
popf
mov
ret
in
inc
popf
sbb
or
or
mov
cld
mov
and
and
decl
inc
addr16
xchg
cmpsl
cmp
sti
mov
je
jg
lret
test
insl
pop
jns
push
cmp
xchg
xor
and
inc
push
mov
mov
xchg
or
pop
dec
enter
dec
iret
decl
arpl
mov
addr16
sti
mov
shll
push
inc
stos
xchg
push
jl
inc
rolb
shll
or
nop
add
movsl
push
aad
pop
fdivr
inc
mov
lods
push
dec
popa
loop
cli
lret
pop
lock
aad
stos
mov
mov
lock
sub
popa
aaa
mov
mov
sahf
hlt
mov
xor
mov
and
lds
mov
sub
rolb
add
lahf
xor
jmp
pop
orl
pop
sub
int
adc
mov
cmp
adc
jmp
es
loopne
mov
jb
and
stos
mov
xchg
jmp
repz
jp
shrl
lock
or
in
outsl
sbb
push
and
arpl
arpl
in
je
mov
stos
push
pop
push
sbb
loopne
or
repz
ljmp
mov
pop
cwtl
aad
pop
loopne
std
fists
das
int3
jge
pop
test
aas
in
into
add
and
int3
pop
push
adc
decl
cwtl
aaa
test
je
and
pop
lcall
and
cmp
mov
push
hlt
pop
lods
and
sbb
cli
lcall
inc
hlt
std
fs
add
jl
orl
cmc
jbe
dec
mov
mov
sub
lcall
push
or
push
das
cmpb
ss
loope
mov
sub
cmp
mov
lret
fwait
bnd
lods
inc
cmp
or
aad
incl
sub
dec
iret
adc
repnz
adc
fsubs
jne
cmp
lahf
or
call
xor
out
cmpsl
or
dec
pop
stc
fneni(8087
adc
add
fwait
in
cld
ljmp
inc
fwait
jno
subl
fmuls
or
incl
ljmp
test
fst
add
repz
lcall
cwtl
jb
cmp
xor
fimull
std
mov
xchg
and
testl
jne
xor
mov
mov
xchg
jae
cld
stos
incb
loop
jns
jno
pop
sub
mov
insl
pop
mov
jb
lahf
push
repnz
imul
mov
sub
movsl
mov
call
cld
lcall
cs
fimuls
mov
sbb
mov
add
fs
mov
or
lcall
cmpsb
xchg
hlt
lea
icebp
add
xchg
adc
pop
or
xchg
adc
sti
out
inc
or
xlat
fnstcw
dec
pop
test
rcrl
cmpsb
mov
in
and
lahf
sbb
cld
loopne
pop
lods
cmp
lods
and
xchg
mov
add
pushl
jne
repnz
dec
loope
out
nop
adc
mov
inc
pop
in
lcall
jo
sub
add
cmp
cmp
test
imul
mov
dec
push
lods
xchg
sbb
cld
cmp
scas
mov
test
in
mov
jp
gs
pop
jo
xor
stc
dec
in
dec
xchg
cltd
fidivrl
lcall
sub
add
ret
ret
cmp
jns
iret
in
dec
add
inc
rcr
inc
imul
aaa
adc
leave
clc
sub
jle
inc
outsl
out
and
cmp
cwtl
call
std
sahf
xor
add
pop
in
scas
xor
faddl
incl
fldcw
xor
in
push
gs
push
sbb
fistps
jne
add
jg
dec
imul
lds
in
inc
mov
sarl
fisttps
pop
inc
jecxz
leave
sub
jb
dec
mov
stc
adc
pop
xor
inc
sub
lahf
call
adc
cmpsb
cmp
ficomps
jnp
fs
cwtl
nop
and
inc
and
les
ljmp
cmp
testb
jle
mov
sub
icebp
movsl
pop
xchg
pop
fcmovbe
call
push
xchg
mov
enter
and
call
mov
xor
mov
or
ss
pop
adcl
les
push
lahf
loopne
inc
loopne
iret
inc
scas
sub
lcall
rol
xchg
rclb
sarb
pushl
xor
sbb
movsb
xchg
mov
mov
add
ljmp
cltd
or
pop
adc
xchg
xchg
mov
icebp
or
ljmp
stc
insb
ret
daa
aas
lea
mov
mov
js
inc
add
jl
das
clc
in
lock
push
aaa
fsubrl
orl
lods
xor
push
mov
cmp
fildl
mov
mov
je
add
add
ss
xchg
add
mull
xor
ja
mov
pop
add
out
jno
loope
xorb
push
jg
jns
test
addr16
xor
mov
or
call
dec
test
leave
xorl
lret
lds
pop
adc
pop
js
fsts
imulb
push
inc
sbb
jge
adcl
lcall
iret
adc
xorl
aaa
decl
sbb
sti
mov
stc
cmp
cmp
and
mov
adc
incl
fnsave
stos
mov
fmul
inc
fldt
push
imul
mov
or
mov
incl
mov
cmp
add
clc
icebp
jne
fwait
lcall
jno
jae
xlat
add
pop
jmp
sub
mov
and
and
add
cltd
cmp
daa
inc
xor
cld
enter
fisubl
mov
rcrl
xor
ret
push
push
pop
and
icebp
dec
xchg
xor
cli
pushf
jb
dec
sub
inc
dec
andb
inc
fdivl
test
fcoms
adc
das
sarb
iret
das
repnz
cs
mov
aaa
leave
adc
inc
ds
in
jl
rcrl
es
jecxz
ljmp
popa
ffreep
je
xor
and
stos
std
aad
cmp
in
dec
in
es
mov
cmp
xor
test
mov
push
frstor
adc
and
inc
add
mov
adc
in
mov
pusha
push
add
loop
and
sub
ljmp
jno
in
or
push
adc
sub
xchg
xchg
sub
sub
or
dec
test
jg
pushl
sahf
outsl
or
icebp
adc
dec
popf
lds
mov
mov
jmp
dec
push
in
and
add
pop
push
or
movsl
loope
or
xor
out
jg
call
and
cmc
xor
adc
dec
mov
xchg
mov
mov
movsl
jmp
call
mov
or
fwait
outsb
sbb
divb
mov
xor
aam
add
call
xchg
add
xchg
testl
cmpsb
adc
pushl
add
out
cs
add
push
arpl
dec
repnz
ljmp
or
fnstcw
cmp
pop
jbe
imul
fdivrp
mov
dec
imul
sahf
inc
iret
cmp
add
add
inc
ljmp
pop
cmp
inc
pop
fdivr
mov
aam
or
push
mov
ljmp
out
push
push
mov
sub
or
xor
scas
sub
cmp
cmpsl
adc
xchg
jp
outsl
cli
and
push
in
jecxz
clc
push
ret
xchg
push
inc
fstl
mov
rcrb
sahf
faddl
bound
push
shrb
mov
mov
jg
and
fisubs
je
mov
dec
adc
dec
lret
sbb
cmp
iret
cli
into
aas
cwtl
cltd
lret
bound
sar
inc
repz
in
jnp
cli
fstpt
or
jg
cmp
pmulhw
sarb
decl
ficoms
lea
xor
imulb
lret
fwait
mov
add
decl
js
dec
movsl
sbb
xlat
addr16
cld
popf
cmp
test
imul
std
jmp
stos
adc
popf
jmp
lcall
push
mov
mov
mov
push
add
into
aaa
mov
mov
std
pop
mov
jmp
mov
jnp
jp
mov
adc
mov
gs
fcompl
push
popa
sub
les
sbb
mov
in
int3
pusha
xor
call
inc
cwtl
push
mov
imul
data16
test
andl
adc
pop
shlb
cmp
stos
mov
fdiv
xor
mov
ret
test
and
push
icebp
inc
cmp
dec
xor
dec
enter
aam
fnstsw
jmp
sbb
icebp
jl
sahf
in
lds
fisttps
pop
andps
xchg
push
lret
and
xchg
ljmp
rolb
mov
fwait
inc
loop
wbinvd
and
insl
sbb
mov
sti
fnstsw
and
sub
adc
addl
nop
push
pop
xchg
xor
ror
and
iret
push
ret
test
incl
cld
decl
push
mov
enter
in
loop
xchg
fdivrl
nop
add
and
jmp
inc
and
movsb
mov
fisubs
outsl
xchg
lds
add
test
lcall
je
sbb
mov
xor
lahf
mov
lods
lods
cmp
ret
lret
rcl
lods
adc
jg
incb
jnp
inc
cmp
dec
in
dec
push
mov
inc
cltd
imul
shr
lock
jmp
shl
pusha
ss
cmc
cwtl
inc
adc
enter
in
pop
sbbb
xor
sahf
sub
out
test
cmp
out
add
and
mov
rcrl
inc
gs
add
scas
fldenv
ljmp
stos
in
dec
psubd
movb
add
fcomps
xlat
pop
clc
dec
mov
dec
dec
inc
es
ret
push
adc
and
dec
mov
mulb
mov
lahf
cmp
jne
jmp
clc
mov
add
xlat
add
loopne
decl
rorl
jo
int3
daa
add
push
or
iret
adc
ljmp
lods
sub
and
cmpsb
mov
or
xlat
fcomps
es
xchg
pop
or
aam
mov
pushl
lret
dec
sbb
scas
jns
push
rorb
mov
iret
pop
rolb
decl
rclb
cmp
popa
rcrb
xchg
leave
nop
mov
ja
sub
sub
std
pushl
jns
leave
rcl
in
mov
dec
jne
cmpsb
loopne
scas
or
mov
add
mov
mov
mull
mov
push
dec
inc
cmp
adc
mov
or
mov
test
test
cld
incl
pop
cmp
mov
lahf
cmp
jmp
sub
mov
xor
gs
aad
xchg
rol
dec
sahf
fists
cmp
push
mov
ret
jl
test
aad
fdivp
push
pop
jecxz
jbe
xchg
mov
dec
pop
incl
cmp
icebp
sbb
mov
inc
and
pop
repz
mov
cmpsl
fimuls
jg
push
xchg
sub
ds
aaa
xchg
popa
xlat
clc
mov
ljmp
or
ret
outsb
inc
sbb
fst
dec
or
insb
sub
mov
in
mov
add
xchg
das
insl
and
repnz
or
jge
out
es
pop
mov
ss
aad
les
ljmp
add
cmc
dec
fiadds
lcall
or
sbb
dec
sub
mov
hlt
cmp
shlb
in
inc
dec
pop
not
push
leave
fstps
cmp
insb
mov
lea
mov
or
mov
pushl
stc
popf
mov
in
push
xchg
cld
icebp
loop
mov
cli
mov
add
sbb
addr16
lock
ljmp
mov
pusha
shlb
stos
sbb
idiv
mov
ret
mov
out
adc
in
lret
cmpsl
xchg
mov
lcall
mov
or
pop
repz
rorl
dec
pop
xchg
mov
stos
clc
jge
int
mov
jle
jmp
popf
sbb
outsl
push
cmp
or
testl
pushl
pop
add
loope
jge
sbb
mull
int
sub
jo
add
jmp
add
fidivs
adc
dec
add
add
roll
mov
push
loope
pop
push
mov
cmpsl
sar
decl
scas
fists
mov
in
jmp
pop
adc
out
push
push
add
decl
inc
mov
outsb
add
lods
inc
rorl
test
adc
and
xchg
lcall
dec
xchg
push
cld
sahf
jns
rcrb
stc
mov
sub
jle
rcr
push
subl
outsl
jae
push
dec
add
lahf
orb
in
and
cmc
cltd
mov
movsb
fimuls
mov
push
xchg
int
dec
or
ds
pop
push
gs
inc
fisubl
lock
push
aad
out
or
popa
pop
or
jp
int3
dec
imul
fimuls
mov
das
xlat
mov
mov
lret
add
jb
cld
outsl
lcall
push
add
ret
add
xchg
sbb
ret
data16
jno
loop
jnp
or
call
imul
inc
stos
cwtl
sub
out
push
and
cmp
aaa
add
pop
cmp
add
dec
fxsave
leave
add
add
bound
aas
mov
push
cmpsl
int
xor
and
push
arpl
dec
lds
std
mov
xchg
dec
hlt
jmp
in
sbb
rorl
orl
jle
mov
xchg
neg
dec
sbb
push
call
out
ret
mov
fstp
add
call
insl
jbe
mov
mov
incl
test
es
mov
pushf
cmp
aad
pop
jae
xor
dec
push
es
hlt
scas
pop
xor
add
jg
or
and
mov
cmp
out
sbb
pushf
ljmp
aad
push
mov
cmp
mov
xchg
arpl
mov
shlb
cmp
xchg
mov
xor
xlat
or
jnp
faddp
scas
xor
jg
mov
aam
jmp
mov
cmp
lret
sub
addr16
in
inc
sub
mov
mov
test
sub
inc
dec
ds
mov
xor
cli
pop
jg
dec
lret
and
push
dec
out
jns
jg
jbe
dec
dec
ss
mov
push
sarl
add
cmp
add
xchg
mov
mov
icebp
add
ret
daa
loopne
ljmp
idivl
sbb
push
aad
mov
and
mov
or
add
cmp
sar
pushl
in
mov
mov
stos
mov
lods
adc
test
jg
jg
lods
fldlg2
scas
mov
xor
mov
mov
fwait
mov
jmp
fcmovb
stos
and
enter
stos
inc
mov
add
lds
sub
push
inc
jne
cmp
cwtl
add
lods
jp
jb
lcall
adc
ss
adc
inc
aas
negb
lods
and
jns
shrl
sbb
add
ljmp
add
in
popa
mov
movsb
add
mov
aad
sub
pop
mov
mov
jbe
loopne
ret
fimull
sub
sarl
cwtl
adc
cli
pop
es
sub
in
push
ljmp
test
sub
and
movsl
jae
push
rolb
fwait
icebp
sub
cmp
lcall
mov
adc
adc
mov
mov
mov
lret
lods
xchg
cmpsb
ret
int
adcb
jmp
adc
push
cmp
lahf
pop
repnz
xchg
cmp
into
nop
fdivr
ljmp
and
xchg
int3
movsb
or
clc
jecxz
jge
sub
jp
addb
add
xor
jne
fadds
dec
jle
xor
nop
dec
jns
jmp
lahf
dec
inc
into
clc
xor
or
lcall
fsubp
jl
sbb
add
push
ds
sbb
and
std
int3
pop
push
call
add
test
mov
mov
pop
in
pop
sub
fs
repz
sti
pop
dec
dec
push
cmp
test
aam
dec
es
roll
lcall
scas
enter
ret
dec
nop
lods
cld
decl
add
xchg
in
arpl
fcomps
int3
dec
inc
data16
xchg
call
push
out
inc
fsubp
in
fidivrs
aaa
pop
push
cmpsb
dec
mov
lret
cltd
mov
xor
iret
cltd
call
loopne
shrl
dec
add
xchg
jae
push
jb
sarl
lcall
testb
push
decb
addb
mov
lcall
sbb
jbe
outsb
fistpl
imul
xor
icebp
pop
xadd
pop
scas
in
sar
fs
mov
xchg
jae
movsb
cmpsb
mov
aad
pushl
cld
dec
test
mov
loopne
mov
sub
jg
aas
loop
decb
subl
outsl
cmp
pushf
cmp
sar
popa
outsl
in
lods
pop
ret
mov
sub
mov
jns
mov
jns
cmpps
or
xchg
stos
pop
test
fldcw
push
mov
test
mov
adc
or
arpl
popl
cmp
xchg
sub
cmp
pushl
shlb
mov
xchg
fisubrs
dec
arpl
mov
js
in
jb
sti
xchg
push
stos
push
ret
pop
insb
and
jle
xor
fadds
push
test
shlb
lea
dec
clc
adc
sub
andb
cmp
cmpsb
mov
lods
fisttps
pop
mov
ret
outsl
lcall
mov
imul
aaa
sub
dec
mov
or
xlat
roll
jne
jmp
in
lret
or
dec
stos
add
in
push
into
sub
insl
xor
divl
xchg
xchg
add
mov
adc
cmp
fcoms
push
inc
cld
jmp
and
cmpb
inc
push
sbb
adc
lcall
stos
lea
xchg
call
push
cmp
nop
cmp
in
fwait
cmp
subb
mov
int3
popa
xor
sbb
xchg
inc
fs
push
push
ljmp
inc
cmp
add
lea
shlb
insb
sahf
mov
loopne
ljmp
mov
adc
jl
pushf
mov
mov
lret
scas
into
int3
outsl
xor
lea
mov
mov
or
ret
sub
jo
push
dec
lcall
outsl
loopne
shl
xor
outsl
mov
sbb
fcomip
aas
fcoml
movsl
mov
js
cmpsl
cmp
movsl
repnz
aas
ljmp
mov
inc
xor
pushf
mov
test
jg
xchg
imul
in
rol
pop
call
push
ret
sbb
clc
jg
das
jb
mov
xchg
sub
out
insb
mov
push
or
xchg
fadds
inc
pop
cli
les
cmp
xchg
mov
shl
push
inc
xor
jmp
sub
pop
pop
lret
nop
jno
xchg
sbb
jg
pushl
jne
jbe
fs
and
mov
mov
incl
adc
loope
movsl
dec
xchg
fmul
sub
adcl
sub
adcl
mov
add
adc
in
inc
fcmovnb
add
lcall
sub
jb
pop
aaa
jb
cltd
inc
cmpl
cmp
icebp
add
jnp
jns
and
and
dec
jnp
sub
cmpsb
mov
xor
lds
dec
aad
dec
loope
gs
xor
icebp
sbb
pushl
lds
xor
sbb
sub
pusha
ja
mov
std
adcb
fcmovnu
leave
rep
pushl
dec
leave
jne
inc
push
decl
testb
pop
push
sar
call
addb
lret
or
pop
adc
notl
pushl
or
popa
mov
aam
mov
lahf
jne
mov
shll
jg
or
mov
add
jp
jnp
gs
test
sbb
jg
jmp
push
xor
aas
stc
mov
mov
xor
sbb
ret
popf
lcall
es
dec
pop
incl
shlb
mov
pop
ja
push
jne
jmp
jae
adc
nop
outsl
push
cmp
mov
jnp
in
inc
or
je
shll
mov
mov
into
lcall
idivl
jecxz
jae
dec
sub
mov
xor
dec
outsb
jle
pop
jecxz
mov
mov
jmp
rcrl
loope
mov
pop
pop
xor
shlb
jns
mov
lret
pop
rolb
in
cmp
jmp
rclb
push
andl
sbb
cltd
xlat
popf
sbb
or
icebp
lcall
in
pop
cmp
and
out
imul
push
dec
lods
cmp
cmp
pop
or
cmpsb
js
xor
test
call
inc
push
jmp
pop
aaa
jle
jns
xor
ss
fimull
das
es
push
scas
stos
scas
mov
and
mov
jmp
arpl
rcll
mov
mov
mov
mov
adc
and
mov
or
mov
and
test
pop
fsubr
sub
jmp
mov
nop
test
in
stos
aam
pop
enter
movsl
pop
mov
push
ljmp
dec
repz
jae
daa
inc
inc
or
xchg
pop
jge
into
and
pushl
out
dec
shll
cs
das
rcrb
mov
push
aaa
lret
clc
scas
inc
mov
nop
lods
cltd
dec
or
std
cmp
das
jge
xor
cld
inc
clc
outsl
adc
clc
sub
or
lret
call
les
inc
pop
std
loope
push
insl
imul
lods
ret
sbb
fisubl
call
pop
mov
cli
in
jecxz
repz
jp
jp
repnz
jo
lret
or
jbe
out
add
and
mov
mov
jecxz
fbld
ljmp
sub
aam
in
add
pop
add
dec
xor
cmp
cs
sbb
add
mov
aas
idiv
jg
ds
inc
outsl
mov
or
movntq
xorl
es
mov
in
mov
xchg
jmp
dec
dec
out
mov
jecxz
call
in
inc
dec
push
or
push
aam
incl
fsubrs
hlt
bound
in
daa
rcll
add
cmc
jg
repz
outsl
mov
fbstp
or
or
mov
xchg
es
popa
dec
fimuls
push
inc
mov
jl
sub
xchg
xor
xchg
cmc
xchg
stos
lcall
sub
cli
push
mov
sbb
jle
or
jle
xchg
fcomip
fisttps
call
outsl
iret
dec
and
xchg
cmp
in
cs
adcb
sub
push
scas
test
and
jns
shl
inc
adc
jp
aaa
cld
incl
out
imul
push
push
lret
lds
repnz
push
stc
sub
xor
sti
nop
or
sbb
lods
jne
mov
jmp
mov
test
bound
es
pop
shr
mov
push
mov
jmp
cwtl
outsb
dec
xchg
clc
push
cmp
push
adc
mov
mov
cs
jmp
in
mov
out
pop
in
fwait
or
inc
decl
movsb
add
jmp
or
cmp
sarl
cli
lods
pushf
jle
int
sar
add
dec
or
sub
push
std
adc
scas
incb
pushl
scas
call
or
cmpsl
sti
fistl
mov
in
jmp
jmp
xchg
int3
dec
ljmp
mov
and
inc
fisttpll
test
int
fstps
and
test
cmp
jmp
xchg
xlat
xor
cmp
xor
xor
and
lret
pushl
xchg
stos
jecxz
test
or
add
stc
inc
mov
cmpl
push
push
mov
xor
js
xor
movsb
sbb
mov
daa
mov
rclb
daa
jg
sub
inc
movsb
push
adc
xor
adc
mov
decl
xchg
hlt
adc
mulb
lcall
es
aaa
sub
mov
mov
sar
add
decl
into
pop
fmuls
add
or
mov
push
call
xor
push
jae
in
mov
dec
test
aam
jp
xor
roll
incl
mov
dec
sub
lea
jns
xchg
mov
les
cmpsb
jno
pushl
loopne
sbb
aam
dec
adc
subl
int
push
and
mov
je
movsb
cli
jmp
xor
xchg
mov
addr16
sti
add
adc
push
test
cmp
cmpsb
mov
outsl
clc
stos
int3
inc
leave
adc
mov
xchg
add
aam
xor
popl
mov
arpl
adc
rcr
mov
hlt
mov
inc
imul
lcall
mov
ljmp
mov
rep
mov
mov
mov
adc
nop
aas
xchg
cmp
jmp
inc
clc
out
pop
push
sub
cmc
sti
jl
das
clc
ljmp
dec
inc
push
mov
ret
repnz
pusha
or
push
cmp
ret
fucomp
inc
push
or
jnp
push
es
jne
adc
inc
mov
out
lcall
imul
mov
dec
das
cmpb
push
sbb
fcmovne
xchg
xor
shlb
push
aad
jae
in
aad
loopne
call
cld
int3
add
rclb
push
enter
xchg
leave
int3
xchg
cmp
push
mov
mov
roll
rcr
add
and
ret
push
test
add
add
filds
pop
and
dec
rcl
jp
add
lock
inc
jl
cli
jp
pop
xchg
sub
inc
or
hlt
cmp
fsubs
icebp
lods
test
lcall
add
mov
gs
push
xchg
aaa
mov
aam
xchg
add
mov
lcall
stos
xor
mov
out
popf
mov
and
push
into
adc
lock
and
jne
lds
add
cmpsb
rcr
dec
mov
popa
sbbl
inc
mov
daa
and
shll
xchg
clc
adc
outsl
xor
ljmp
and
aas
jnp
mov
xchg
in
ds
pushf
jmp
jnp
into
inc
in
aas
push
ljmp
xor
xchg
stos
xor
push
repnz
scas
adc
out
cli
call
loop
lds
mov
jmp
cmp
cmp
fmull
cs
pushf
daa
pop
fwait
lds
xchg
clc
mov
imul
pushf
xchg
sarb
push
jbe
mov
ss
sbb
xchg
mov
lods
stos
fdivr
out
cli
pushl
or
xchg
ds
pop
xor
jg
out
cmp
sbb
mov
inc
ret
call
cs
movsl
imul
icebp
shll
movb
das
ljmp
mov
fstps
dec
sub
addr16
cmc
lock
cmovs
add
aam
decl
scas
cmpsb
mov
cli
mov
pop
dec
pop
push
or
xchg
mov
jg
mov
out
adc
xchg
dec
and
cmp
or
push
clc
mov
leave
jle
inc
xor
outsl
mov
ret
aam
cmp
incl
mov
gs
push
sub
popa
pop
gs
pop
sbb
mov
sti
clc
in
sarl
push
sti
and
sub
xlat
pop
leave
movsl
xor
ljmp
jmp
sub
lods
lret
mov
inc
mov
js
es
jno
clc
decl
scas
lds
mov
inc
sbb
xchg
lret
scas
mov
xadd
ljmp
fidivs
subb
sub
dec
adc
mov
cmpsl
mov
ljmp
data16
sbb
fildll
mov
pop
int
incl
mov
xchg
xchg
dec
ljmp
pop
dec
or
pushf
stos
xchg
cmp
xor
ss
mov
dec
add
popa
mov
jmp
xchg
xchg
int3
rcr
fimuls
cs
or
xchg
lcall
mov
insb
cmp
mov
je
cmpsl
scas
jns
inc
aas
cwtl
out
popf
decl
insb
push
adc
mov
popa
push
das
mov
and
aaa
push
aam
xor
in
adc
mov
in
je
mov
mov
jg
incl
cmpsl
aam
in
add
xchg
mov
pop
test
shlb
iret
xlat
dec
in
call
cmp
call
add
add
jnp
jns
mov
and
pop
push
dec
fists
lret
lcall
divl
bound
inc
inc
aad
or
mov
mov
enter
outsl
and
fsubrs
decl
inc
loope
rorl
scas
ficompl
fdiv
hlt
out
mov
sti
push
or
movsb
gs
outsb
icebp
jne
repz
jg
inc
fadds
sbb
leave
and
xchg
filds
mov
hlt
xor
fsubrl
dec
in
mov
push
test
xor
cmp
cli
clc
jp
mov
inc
xchg
in
jb
ficoml
les
scas
sub
mov
ret
lea
incl
call
push
pop
dec
aaa
lods
mov
xor
pop
int
mov
add
and
xor
lret
mov
jge
jp
aad
mov
ss
dec
xchg
xchg
jo
sbb
out
lret
cmp
ficompl
test
subb
int
icebp
jmp
repnz
lret
mov
repnz
cmpsb
jne
sbb
rorl
and
or
sub
jbe
dec
leave
test
and
rolb
call
pop
mov
inc
cmp
mov
cmp
xchg
cli
insl
test
push
mov
jmp
add
mov
xchg
cmc
popf
push
ss
mov
xchg
push
in
sbb
xor
cmc
call
and
or
cmp
inc
fisubrl
xchg
test
std
xchg
imul
lret
push
pushl
xchg
jge
xor
fistps
rcrb
and
add
ret
sarb
mov
sbb
sub
cmp
mov
pop
movsb
mov
dec
lcall
jl
ret
lahf
mov
das
clc
incl
push
mov
mov
clc
and
xchg
movsl
lock
pop
push
lcall
clc
inc
or
push
sbb
mov
xor
pop
aam
insb
data16
jg
inc
pop
xchg
sub
aaa
cs
mov
push
into
lods
push
lcall
popf
lcall
cmp
jp
push
jle
es
lods
or
mov
orl
test
out
adc
sbb
mov
pop
mov
mov
sbb
aam
jmp
lds
out
mov
mov
ffree
mov
stos
movsb
sahf
repnz
bnd
xchg
dec
pushf
pop
fsubrl
and
mov
dec
cmp
in
lea
nop
sar
repnz
pop
jle
cld
xlat
push
mov
rclb
xchg
out
ss
lds
mov
ss
mov
push
hlt
sbb
lds
jne
in
jge
mov
sub
or
lcall
mov
xchg
sub
ljmp
xorl
fisubl
rorl
sbb
cmc
fpatan
shl
imul
add
or
mov
adc
aam
out
adc
mov
or
jl
mov
jg
jne
and
cli
inc
push
push
les
and
jmp
dec
sahf
jnp
add
or
es
cmp
mov
or
lcall
lea
mov
int
pusha
mov
pushf
push
inc
fiadds
lods
cmpsb
dec
sub
cld
call
dec
int
jg
cmpl
roll
xchg
popf
jmp
fcomip
inc
mov
push
push
xchg
xchg
imul
push
and
pop
ror
xchg
stc
sbb
call
jbe
push
dec
js
adcl
xlat
fdivl
jmp
xchg
cmp
or
and
pushf
aas
xchg
add
lcall
and
or
and
or
or
xchg
imul
jg
stos
and
mov
inc
push
int
push
out
mov
ret
out
jo
int3
dec
mov
add
jg
cmp
pop
add
sbb
test
mov
incl
icebp
andl
cltd
ret
cmc
fcomip
call
es
lahf
hlt
mov
dec
dec
ds
mov
pop
into
mov
dec
in
std
and
ret
mov
mov
je
xor
leave
mov
test
inc
aas
and
fidivrs
in
test
sub
cwtl
nop
inc
mov
mov
cmp
jmp
push
aam
jno
inc
iret
xor
inc
outsl
lock
push
stos
dec
stos
pop
test
mov
pop
in
es
testb
sub
aas
repnz
loope
fdivr
ljmp
ret
in
xor
xor
pop
mov
fidivl
jle
incl
mov
fdivs
cltd
xor
jp
mov
xchg
frstor
xor
mov
lcall
mov
add
xor
inc
push
lahf
and
cmp
aas
xlat
sarl
movsb
cmc
stc
jns
jmp
and
je
inc
push
ljmp
pushf
shrb
and
lret
xchg
popf
ss
push
adc
mov
call
mov
aad
dec
dec
xchg
mov
movsl
sub
cmp
dec
cwtl
sbb
cmp
push
cwtl
push
jg
xchg
lcall
jl
lret
xchg
push
loopne
inc
dec
leave
jecxz
jg
int3
lret
in
insl
loop
add
into
ljmp
mov
cmc
cmpsl
adcl
sbb
push
sbb
or
or
pop
mov
xor
mov
mov
test
or
push
in
mov
decl
sub
sbb
mov
aam
push
icebp
scas
xchg
call
adc
dec
in
mov
imul
inc
std
sub
je
push
pop
icebp
insb
xor
decl
shll
xchg
xchg
jge
stc
ret
dec
push
pop
mov
sbb
jnp
jg
incb
lret
dec
andb
icebp
sbb
inc
or
mov
call
sbb
test
cmpb
dec
fildll
ret
mov
jmp
push
in
lods
xchg
lret
dec
or
cltd
xor
mov
pop
mov
loopne
mov
inc
push
and
enter
decl
stc
mov
sarb
in
rorb
out
sar
call
call
xchg
mov
out
addr16
jne
push
and
pop
cmpb
data16
jnp
lret
mov
add
incl
sbb
sub
pop
fcomps
adc
cli
in
pushl
movsl
cmovne
test
inc
leave
lret
fidivrs
nop
inc
mov
mov
cmp
add
cmp
imul
outsl
and
dec
sub
xchg
dec
mov
mov
nop
fidivrl
push
gs
mov
mov
ficoml
int3
shlb
lret
add
lods
incl
xchg
out
xchg
cmc
jo
xchg
imul
jnp
arpl
iret
fmuls
test
dec
sbb
push
sbb
mov
ret
loop
mov
or
add
outsl
and
decl
inc
mov
or
xor
cmpsb
dec
xchg
lock
jg
movsb
je
jle
shl
loop
movsb
ljmp
pop
das
jns
enter
lret
fwait
jb
jns
mov
insb
cmp
shlb
decl
callw
adc
cmp
inc
mov
cwtl
pop
jecxz
jl
add
dec
sub
mov
xchg
sarl
movsb
xchg
sbb
std
mov
scas
lret
std
std
decl
adc
dec
jns
lcall
popa
rolb
mov
mov
fmuls
mov
lods
sub
xchg
push
dec
pop
mov
pushl
cmp
in
inc
repnz
cmp
cs
sub
lods
xlat
pushf
arpl
mov
mov
ljmp
lock
fwait
cmp
arpl
cmpsb
ret
mov
inc
fwait
loopne
xchg
dec
xor
call
push
out
cmc
or
out
inc
int
loop
pusha
mov
jns
cli
lods
fcomps
pop
cmp
arpl
aaa
cmp
xor
mov
and
ss
imul
subb
push
fidivrs
mov
hlt
xor
int3
inc
mov
lea
cmc
decl
mov
dec
test
mov
xor
stos
dec
push
jo
fnstenv
aam
or
mov
mov
sub
mov
decl
mov
out
xchg
lea
shrl
test
int3
push
gs
jae
aad
inc
lahf
bound
sar
jmp
mov
insb
add
jae
xlat
xchg
jne
std
lods
mov
lahf
sub
ljmp
and
pop
pop
lock
stos
ss
movsl
jmp
cli
out
std
adc
jns
xchg
cmp
mov
jno
je
mov
inc
xor
popa
pushl
std
jb
data16
shll
pusha
or
ja
stos
push
dec
stos
mov
out
cli
mov
je
xchg
add
add
lds
push
mov
enter
sub
decl
js
test
dec
cmpsl
ret
add
aad
add
lahf
lcall
ljmp
dec
fs
ss
cmp
dec
sub
sbb
pop
mov
addr16
lcall
mov
add
sbb
and
mov
ret
push
stos
mov
fucomi
xor
stos
dec
icebp
sarl
mov
ret
or
dec
shrb
push
adc
fmuls
fldl
lock
jmp
push
mov
add
clc
jmp
sbb
dec
jne
lds
lods
sub
out
rolb
ljmp
push
mov
jg
dec
popa
test
mov
add
cld
mov
mov
or
dec
shll
xchg
inc
lcall
sbb
jp
mov
test
repz
or
dec
std
xor
cmp
jmp
loope
sub
fcmovnbe
imul
or
in
adc
ds
inc
pushl
std
cmp
adc
dec
outsb
mov
addb
enter
sti
cmp
pop
sbb
mov
inc
js
inc
cmc
hlt
inc
jp
call
stos
mov
test
shl
aas
lea
adc
cmpsl
cmpsb
mov
or
or
mov
mov
dec
mov
and
incl
shr
in
push
dec
lret
aad
pop
jle
cmpsb
decl
stc
jbe
shll
mov
les
and
pop
test
adc
jg
das
shl
adc
movsl
dec
popf
loop
inc
iret
sbb
hlt
xor
mov
lds
push
pop
test
push
add
cmp
lea
inc
int3
or
cwtl
pushf
lcall
push
pop
popf
lcall
arpl
pop
clc
jmp
add
inc
outsl
inc
jnp
enter
in
adc
repz
dec
push
mov
fsts
fstl
adc
pop
mov
clc
shlb
fnsave
subb
out
rorb
xchg
adc
ds
lcall
outsb
push
jl
dec
lcall
inc
cmpsl
incb
mov
incl
movsl
test
jo
cli
stc
mov
cmp
xchg
mov
repz
incl
lcall
inc
je
xchg
add
push
xor
out
fwait
xor
mov
cmpsb
and
loopne
call
pop
xchg
ret
and
es
mov
inc
mov
inc
cmpsl
or
mov
fnsave
push
pusha
lret
call
mov
rol
adc
sub
js
shlb
ja
sar
nop
outsb
mov
sar
incl
mov
cld
inc
xchg
xor
push
dec
cltd
rolb
xor
jnp
cli
jg
incl
sub
cwtl
movb
mov
add
xor
xor
ret
jg
cmp
pop
or
inc
inc
xchg
leave
imul
jno
or
mov
or
xor
mov
subb
sub
cmpsl
push
jns
pop
call
repz
in
fmuls
fs
orl
mov
jmp
mov
jp
xor
mov
dec
adc
cmp
fsubs
dec
inc
ftst
inc
lcall
mov
xor
ljmp
and
add
mov
xchg
push
std
and
scas
lret
sub
insb
xor
loop
push
mov
pop
aam
sub
ljmp
and
imul
add
dec
ja
loopne
divb
and
mov
pushf
aad
adc
movsl
adc
pop
jo
jecxz
mov
stos
inc
imul
cmp
psubd
mov
in
jo
and
in
xchg
sub
jns
jp
push
movsb
roll
xor
or
inc
scas
pusha
fldcw
xor
jmp
cmp
ljmp
notl
jns
into
dec
insb
iret
xchg
fdivrl
add
mov
decl
dec
dec
into
add
push
cmp
lret
call
stc
add
imul
sti
mov
mov
daa
push
lahf
lds
cli
and
cmp
mov
lods
mov
mov
dec
cmp
cld
push
out
in
inc
xor
and
ja
das
es
xchg
rclb
dec
mov
ljmp
xchg
sub
adc
pop
faddl
mov
lods
lods
dec
lods
inc
fsub
and
fnclex
pushl
ret
adc
mov
nop
mov
pop
xchg
mov
mov
ljmp
sbb
mov
repz
jg
pop
lcall
cld
push
mov
nop
std
or
fcmovne
ret
cmpb
mov
push
fscale
mov
lea
std
in
sub
adc
movntq
mov
subl
pushl
jmp
cmp
insl
sar
paddw
mov
fisttpll
push
pushf
pop
fistl
lcall
xchg
adc
xchg
push
sub
add
out
mov
rclb
mov
sub
out
xchg
mov
add
lcall
out
xlat
cmp
inc
int
mov
ret
outsb
xchg
stc
insb
cli
hlt
cmp
cmp
mov
movsb
hlt
dec
or
or
jmp
xchg
jg
pop
repz
cmp
das
shl
or
ja
ret
sbb
popf
sbb
dec
mov
call
xchg
rorb
mov
sbbl
mov
cmp
bound
dec
in
sahf
jg
and
das
addl
movsb
cs
and
pushl
mov
aaa
push
popf
repnz
add
insb
ss
repnz
std
push
inc
test
sti
lock
cmp
dec
inc
mov
dec
stos
movsl
cld
rcrl
enter
cmp
ret
mov
cs
lcall
popf
int3
repnz
cmp
pushl
add
lods
leave
mov
lock
in
adc
ret
popl
ss
arpl
and
lods
adc
fwait
in
aad
cmp
xor
nop
push
or
sbb
lcall
std
jae
cmp
cmp
lock
push
pop
cmc
xchg
inc
jae
es
lcall
push
push
in
fdivrs
inc
push
in
clc
xchg
stos
sbb
push
icebp
or
adc
jo
fwait
sub
push
sbb
fmull
int
pop
push
pop
add
dec
or
aas
ds
add
push
loop
dec
mov
fcompl
xor
jmp
loope
inc
stc
mov
test
mov
add
mov
dec
imul
sbb
xchg
sbb
test
xchg
xchg
pop
inc
dec
add
mov
iret
subb
xchg
jg
insb
es
push
jmp
or
jo
mov
js
inc
and
jb
mov
mov
xor
add
add
out
jne
jnp
icebp
jne
xor
into
shll
loope
bound
jg
aam
dec
insl
hlt
cmp
inc
adc
cld
sbb
mov
mov
cmp
in
mov
mov
pop
or
add
lods
pushl
rol
js
inc
aas
and
mov
lcall
das
sti
hlt
inc
jo
and
mov
lret
fcmovnbe
jg
int3
aad
add
fbld
mov
pop
ja
mov
mov
mov
icebp
lcall
sbb
mov
dec
or
mov
es
sbbb
mov
orb
decl
cmp
sbb
sub
xchg
imul
call
std
fcompl
mov
shl
lds
cwtl
js
call
decl
push
inc
ss
inc
cmp
mov
decl
ss
inc
sbb
in
loopne
mov
dec
add
xchg
xor
sbb
push
push
jl
jge
jge
sbb
lahf
ljmp
xchg
push
mov
pop
pop
adc
jmp
add
jl
mov
jo
xor
out
inc
call
in
inc
push
adc
xlat
inc
push
nop
ljmp
fcomip
pop
xor
repz
or
je
pop
jmp
das
aas
mov
push
mov
lret
cld
adc
repnz
mov
int
les
xor
je
repnz
aaa
cmpsl
stc
es
lcall
gs
mov
aaa
popa
hlt
mov
xchg
pop
xchg
lock
jns
lea
decl
cmpsl
mov
push
add
daa
out
cmp
dec
in
fwait
sbb
cwtl
std
jnp
rorl
add
popa
sub
in
add
mov
adc
mov
pop
decl
xorl
push
pop
push
jle
jg
pushf
incl
push
testl
inc
roll
mov
pop
xor
jno
enter
add
mov
ljmp
arpl
jb
pop
lock
hlt
jmp
notb
inc
pop
mov
or
cs
xor
data16
incl
leave
arpl
icebp
lret
aas
xor
xchg
adc
in
in
mov
lcall
push
repnz
repnz
mov
mov
lea
popw
or
cmp
sbb
ja
sub
incl
in
jmp
mov
out
fmul
nop
mov
sub
mov
fdivr
leave
pushl
xchg
in
cli
fdivrs
fnstenv
or
pop
notb
into
ret
mov
mov
test
mov
jge
inc
fisttps
add
inc
mov
out
push
push
dec
push
inc
jecxz
inc
mov
bound
cli
test
daa
jne
add
test
xorb
and
decl
mov
scas
pop
dec
sub
shl
push
shll
jo
inc
in
mov
dec
idiv
push
repz
inc
call
add
test
lods
adc
pushl
rclb
add
pushf
orl
push
ss
sti
in
adc
pushl
sub
les
nop
or
mov
xchg
test
xor
repnz
cmpb
subl
push
rorl
or
imul
adc
movsl
call
or
iret
adc
jecxz
jmp
mov
rolb
mov
push
repz
xchg
xor
or
mov
mov
rolb
mov
push
dec
xor
xor
test
rcll
sub
pop
call
add
jb
test
mov
dec
fisttps
dec
jge
aam
inc
mov
adc
jmp
add
mov
mov
push
insb
dec
lret
dec
push
std
xchg
or
addr16
stos
icebp
add
mov
scas
and
xchg
add
jmp
jmp
scas
into
inc
pusha
icebp
dec
mov
xor
jle
push
nop
push
and
int
xor
out
xor
or
lcall
jp
add
jne
sarb
popa
inc
or
push
je
fs
xor
loope
jmp
aad
xchg
and
jge
or
lods
loope
aam
movntq
or
jmp
cmpsl
mov
mov
test
insl
lods
mov
lret
sub
or
jp
push
push
std
mov
fsubrl
jne
imul
decl
jbe
add
mov
xchg
mov
jmp
mov
mov
cmp
nop
out
sbbl
mov
xchg
cmp
jge
dec
or
fisttps
mov
out
fdivrs
xchg
shlb
cmp
xchg
inc
in
push
out
cmp
sbb
andb
mov
jmp
iret
shrb
std
out
sub
xchg
das
stos
imul
jae
outsl
clc
addb
mov
sbb
adc
cmp
and
sbb
jl
stos
pop
rolb
sub
ffreep
sbb
loopne
inc
rolb
pop
gs
mov
leave
mov
lock
inc
jne
dec
sub
fsub
pop
ljmp
mov
xor
rorb
pop
icebp
mov
stc
sub
js
insb
sbb
into
mov
cmpb
mov
or
add
xor
cmp
push
addl
mov
clc
lcall
pop
jg
decb
mov
sbb
pop
push
jbe
repz
jbe
imul
call
sub
decl
push
outsb
mov
mov
aad
movsb
jb
add
dec
jne
incb
inc
bound
inc
lret
pushl
pop
mov
mov
call
push
or
in
int3
enter
das
adc
jmp
xchg
inc
xor
xchg
ds
mov
int
lock
mov
nop
jp
cwtl
push
add
jmp
incl
dec
cmp
mov
mov
fnstcw
movsb
pop
mov
mov
jmp
inc
fcoml
sbb
clc
addr16
out
sub
jnp
inc
cmpb
jnp
mov
stc
fwait
mov
ljmp
jne
xchg
fstp
lahf
ljmp
dec
cwtl
mov
sbb
lret
or
aam
fistps
in
icebp
push
inc
out
push
cmp
outsl
jne
out
lods
cmp
xor
cmp
mov
lea
mov
jge
push
jo
inc
jmp
fcoml
out
popf
imul
insb
shrl
lret
outsb
mov
clc
fcomip
insb
and
mov
mov
imul
call
pushf
aad
push
push
shr
jecxz
les
push
jle
inc
dec
push
lock
mov
cmp
and
cmp
cld
test
dec
shlb
imul
fmulp
mov
ja
out
sub
loopne
imulb
aaa
iret
xor
dec
push
mov
jmp
rcrl
pop
outsb
sub
add
bound
mov
xchg
mov
mov
mov
lea
sub
out
push
out
fsubl
sti
add
mov
cmc
pushl
inc
pop
repnz
movsb
lds
and
les
popf
sub
jg
or
xchg
mov
test
jle
mov
xchg
xor
push
mov
add
inc
test
inc
stos
push
xor
ljmp
lea
ret
add
hlt
addl
add
mov
ret
sti
adc
test
lods
add
ret
cld
add
fcomip
pushl
test
shlb
mov
cmp
mov
hlt
imul
lcall
xor
sub
sarl
mov
push
negb
inc
das
rorl
adc
cmp
test
in
out
stos
mov
cmp
sbb
nop
push
fdivrl
nop
ret
shrl
fnstcw
jl
mov
insb
xlat
dec
sbb
incl
hlt
mov
mov
add
lahf
pushf
xor
lret
sub
jge
mov
dec
add
lods
cmp
out
xor
and
xchg
fmul
inc
not
pushl
mov
fidivl
insb
push
jbe
and
mov
push
xchg
test
push
aad
mov
in
inc
cli
dec
decl
xchg
add
sub
sub
sbb
pushl
sbb
cmp
out
xchg
mov
xchg
popf
xlat
clc
cmp
lret
cwtl
int
add
shrl
test
xlat
push
add
nop
dec
in
cmc
cwtl
mov
stos
add
cltd
sub
incl
cmc
pusha
jg
lea
jae
mov
xchg
inc
jg
add
imul
inc
jne
fdivr
ljmp
fstpt
cli
ret
lcall
icebp
enter
mov
or
lcall
stos
jmp
or
sbb
movzbl
ljmp
iret
adc
cld
inc
xchg
adc
into
enter
incl
xchg
adc
dec
add
push
mov
mov
repnz
test
test
add
lock
mov
sub
int3
and
daa
xchg
jp
dec
ljmp
ret
cmp
sub
add
add
add
ret
stos
cmpsl
adc
ljmp
mov
ret
cmp
mov
leave
cmp
ror
call
addb
and
scas
lods
inc
jecxz
mov
xchg
or
fdiv
cmp
decl
cli
push
mov
inc
enter
or
xchg
lock
das
inc
subl
jecxz
ljmp
push
aam
stos
lret
dec
ss
xor
xchg
in
and
ror
or
inc
lcall
mov
lahf
fnstenv
mov
pop
pop
ret
mov
cwtl
cmp
incl
inc
dec
sti
in
jp
sbb
push
orb
xchg
fiadds
inc
jnp
sar
lcall
jecxz
mov
les
add
dec
inc
cwtl
xchg
xchg
ret
jns
ret
pop
dec
mov
xchg
lods
out
adc
xor
mov
inc
movsl
xchg
fcompl
lods
sar
shl
jmp
mov
das
inc
hlt
dec
addr16
cltd
mov
incl
sub
repz
mov
add
stos
mov
dec
ret
pushl
sbb
les
stc
dec
adc
shrb
pcmpgtd
lds
pop
call
insb
testb
gs
inc
lds
mov
pop
cmp
pop
call
aas
call
jne
mov
into
and
cli
dec
cmp
fidivrl
cmp
pop
icebp
cmc
in
stos
cwtl
mov
out
pushl
int
int
xchg
fisttpl
lret
xchg
movsl
mov
sbb
push
cmpl
mov
decl
add
mov
pop
into
push
daa
ficoml
or
ret
lahf
add
jmp
incl
aad
add
insl
test
xchg
cwtl
mov
pop
popf
subl
aas
xchg
je
inc
loopne
or
lcall
rorb
fcomps
scas
jmp
xlat
into
orw
dec
imul
jg
call
es
mov
fimull
push
dec
inc
add
pop
lock
lcall
mov
mov
or
aaa
cld
jmp
add
sub
pop
jno
xchg
push
mov
call
shlb
decb
in
lock
mov
lods
mov
lret
mov
fildll
mov
decl
gs
nop
xchg
jo
stos
lea
cwtl
scas
cli
cmpb
lret
jmp
mov
jecxz
aad
dec
aaa
sub
dec
pop
scas
sub
adc
test
pushl
lea
rclb
add
nop
sbb
cmpsl
dec
popf
out
jp
and
add
scas
es
xor
lea
jnp
lahf
popf
jns
inc
inc
hlt
sbb
enter
call
push
gs
xchg
inc
sbb
std
cli
pusha
outsb
movsb
pop
lea
call
fdivs
sar
incl
mov
mov
or
cmp
push
es
xchg
lcall
sbb
jnp
rorb
iret
jne
pushf
incl
arpl
xor
shlb
loope
js
mov
add
inc
pop
lock
inc
add
or
pop
stos
cmp
cmpb
ret
mov
push
adc
dec
add
jp
repz
pop
mov
mov
dec
hlt
mov
push
shlb
jno
inc
shlb
pop
dec
mov
mov
stos
in
pushl
test
or
call
punpckhwd
js
and
and
pushl
int
dec
xor
lods
cld
aas
sbb
or
subl
movsl
decl
mov
inc
ljmp
and
xchg
inc
xchg
inc
and
jae
xor
mov
stc
mov
outsl
or
ss
mov
lock
mov
pusha
mov
sub
call
je
mov
out
xor
fldcw
loopne
testb
xchg
cs
cmpsb
call
std
call
and
inc
and
iret
and
jecxz
fwait
repz
pop
ljmp
xor
dec
clc
add
sbb
mov
das
sti
mov
aaa
jge
cmp
mov
pop
jnp
xor
outsl
cmpsb
jmp
sbbb
fisubl
movsl
out
cld
xchg
rdmsr
lret
rcrb
test
pop
cs
jecxz
icebp
sbb
dec
mov
in
add
xor
jmp
loope
and
scas
push
push
mov
xchg
imulb
xor
call
enter
jp
roll
or
enter
fisttps
xchg
dec
ret
push
pop
lea
xor
rol
clc
cli
pop
leave
lds
loope
aaa
mov
add
lea
les
and
test
cmp
sti
cmp
and
adc
inc
pop
mov
and
int3
outsl
and
xlat
sub
or
loop
mov
sub
push
mov
fidivl
lcall
jecxz,pt
cltd
mov
les
ljmp
testb
inc
aas
adc
mov
pop
and
scas
mov
rolb
pop
movsb
pop
mov
std
decl
mov
push
test
xchg
fadds
xchg
lahf
stos
inc
push
mov
rcr
push
stc
loope
xor
xor
int
sar
call
addr16
sbb
lods
roll
test
add
adcb
ds
cmp
testl
rclb
addr16
ret
lods
ret
adcl
ja
ret
rcrb
test
call
xchg
pop
fidivrl
sub
lcall
xor
stos
adc
faddl
adc
jbe
dec
pusha
jp
dec
aas
les
and
xor
call
and
fwait
and
or
mov
repnz
inc
popf
int3
adc
mov
sbb
out
int
xchg
mov
pop
xor
test
sbb
ljmp
mov
sub
jmp
mov
lret
rorb
sub
cld
fcomi
sbb
lret
ret
arpl
inc
xor
jns
js
leave
cmc
and
lods
and
dec
and
add
push
pushl
inc
scas
push
cmp
std
mov
pop
int
push
in
cmp
test
int
xor
or
xchg
push
xor
inc
ljmp
inc
xchg
outsl
push
in
int
jmp
sub
pop
mov
inc
and
and
divb
mov
cli
sbb
or
sub
inc
decl
jnp
push
push
in
xor
mov
mov
pushl
push
addr16
lock
sub
lret
dec
aas
xor
andb
lods
out
mov
outsb
cmp
lcall
inc
jmp
inc
out
inc
movsb
dec
jns
scas
push
xlat
adcl
incl
mov
jb
shrl
and
inc
xor
leave
fucomip
mov
insb
mov
mov
jge
inc
inc
das
lea
sbb
push
stos
xchg
jmp
movsb
repnz
test
incl
mov
fisttpl
arpl
mov
cmp
add
stos
mov
ja
mov
lcall
lea
out
mov
mov
mov
cmpsl
rclb
jnp
pop
jecxz
push
psrld
dec
cmp
dec
je
daa
push
sub
ljmp
xchg
inc
stos
outsl
stos
rcll
jns
out
mov
inc
popa
mov
pushl
call
lretw
and
add
cmp
mov
xor
inc
or
jmp
leave
jno,pt
repnz
cmp
jp
js
sbb
inc
xor
stc
rcrb
jnp
dec
add
rorb
cwtl
sub
dec
adc
ja,pn
mov
xchg
ss
enter
adc
pop
pop
mov
sbb
mov
sti
sbb
sub
jmp
sbb
in
inc
cmp
in
xor
push
lcall
fwait
and
outsl
nop
fisttps
loop
call
sbb
rol
les
mov
out
add
xor
push
fmull
stc
lret
imul
inc
fcmovnb
pop
decl
rorb
add
cmp
nop
bound
dec
or
add
idiv
ljmp
ljmp
repnz
push
jge
pop
jmp
outsb
dec
cltd
ljmp
cmp
fcoml
pop
cmpsb
mov
ljmp
sbb
mov
mov
gs
out
sbb
insb
pop
xchg
mov
js
or
js
sub
jmp
filds
and
xor
into
lahf
add
jns
repnz
inc
nop
add
aam
xor
adc
pop
cmc
jg
das
cwtl
scas
fcmovu
or
mov
loopne
jmp
push
mov
das
and
dec
dec
cmp
xor
xchg
dec
ljmp
xchg
in
lret
xor
cwtl
inc
sbb
pop
mov
call
cld
fidivrs
stos
adcl
test
adcl
lock
sbb
ljmp
cmpsb
mov
bnd
add
out
stos
negl
ret
cmp
sbb
sar
lcall
setno
inc
lcall
lds
mov
jo
xor
push
aad
inc
iret
jo
out
or
push
xchg
int3
repnz
mov
add
ljmp
movsb
out
jns
lea
inc
outsb
xchg
sub
mov
add
loop
jmp
jne
cs
dec
dec
cmp
and
cmpl
les
call
xchg
lcall
add
mov
pop
push
popa
mov
rolb
sub
stos
leave
lods
in
xlat
cmp
jg
dec
js
mov
jmp
jb
mov
clc
pushf
add
xor
mov
lods
movsb
les
movsb
dec
leave
sar
mov
fmull
rclb
or
adc
and
adc
xchg
sbb
mov
cmp
and
inc
pop
out
mov
fldl
dec
idivl
lcall
bound
lods
jns
and
sarl
mov
out
movsl
add
dec
xchg
push
gs
adc
stos
mov
add
sub
pusha
gs
aas
push
push
hlt
mov
decl
subl
and
mov
addr16
mov
clc
rcrb
ljmp
pop
mov
inc
ja
sbb
fdivr
sbb
mov
add
movsb
jnp
incl
out
fs
dec
ficoms
leave
mov
lock
shlb
mov
decl
jns
jno
inc
jl
mov
inc
fwait
mov
push
lods
pop
fcomip
mov
movnti
popf
clc
xchg
mov
into
jnp
addr16
mov
dec
mov
adc
jge
enter
out
sbb
sbb
sgdtl
mov
or
mov
mov
ljmp
or
push
imul
mov
cmc
pop
hlt
adc
add
lods
ret
andl
enter
lahf
icebp
ljmp
mov
ljmp
sahf
inc
dec
add
push
add
jp
rclb
pop
jle
mov
gs
cmp
lcall
repz
sub
dec
or
jmp
and
jp
jl
pop
outsb
push
xchg
cli
mov
xchg
bound
add
stos
cs
sbb
call
mov
jmp
jo
lock
decl
xchg
and
mov
int3
loope
and
loope
add
xchg
push
or
push
aam
iret
jnp
stc
sbb
sbb
bt
mov
push
dec
fst
int3
push
iret
or
test
jns
mov
inc
fistpll
xor
aam
bound
mov
sub
and
out
push
jb
adc
mov
mov
fiadds
in
incl
cmp
jmp
scas
loop
dec
dec
dec
lds
inc
push
inc
lods
mov
aaa
ret
pop
mov
out
lds
stos
in
repnz
sub
lcall
cmp
ret
test
in
mov
jae
shl
pushl
mull
xchg
jns
dec
xchg
mov
mov
shlb
outsl
pop
dec
nop
lret
mov
mov
enter
je
sbb
je
dec
mov
or
lcall
mov
cli
shrb
lcall
fdiv
and
cwtl
out
fstp
jo
mov
sub
aas
test
sbb
sbb
mov
mov
add
dec
sbb
push
addl
loopne
mov
push
push
repz
pop
lcall
dec
sub
cmp
cmp
dec
cmp
adc
cmp
jbe
ffree
stos
jmp
cmpl
add
jl
mov
mov
and
sbb
lahf
call
sbb
shrb
cld
sub
dec
rcll
push
insl
ss
cmp
hlt
jmp
cli
incl
fldl
cmp
sub
gs
ja
js
clc
in
cwtl
push
pop
and
hlt
fmull
xor
fcomip
lds
inc
sarl
mov
iret
xor
cmp
pop
dec
loopne
aas
out
mov
push
cmp
fwait
push
in
cld
jg
sbb
hlt
and
jb
popl
cmp
dec
xchg
dec
out
push
lea
pushl
repnz
adc
rorl
xor
xor
push
rorb
jmp
daa
sub
xlat
call
inc
mov
outsb
push
ficompl
mov
jmp
adc
std
cmc
adc
stos
pop
push
and
pop
mov
push
lcall
inc
fxch
mov
shrl
pop
add
fwait
dec
or
mov
loop
push
lods
cmpsl
fcmovb
cld
dec
into
mov
dec
aam
sbb
lock
sti
in
dec
ret
movsl
xor
xor
out
lods
test
pop
and
movl
incl
dec
dec
sbb
xor
mov
mov
push
in
and
popf
cmp
sbb
shlb
dec
out
push
mov
mov
scas
scas
adc
sti
decl
lcall
cwtl
adc
stc
dec
jbe
and
push
push
dec
clc
mov
jo
lods
rcll
ret
fistl
and
xchg
mov
sbbl
int
mov
jmp
xchg
stc
pop
pop
lea
adc
add
xorb
pop
xchg
cmc
incl
pop
fwait
mov
arpl
mov
mov
rcrb
pushl
fidivrs
subl
mov
mov
xor
aad
decl
mov
lret
test
xchg
or
cld
mov
jo
fsubl
decl
cli
daa
fnsave
ret
in
push
stc
pop
dec
dec
fimuls
or
mov
aad
andl
data16
inc
ds
scas
incl
add
mov
xorl
inc
sub
mov
push
jl
sub
out
pop
or
in
arpl
and
sahf
add
incl
mov
out
repnz
add
mov
sbb
mov
fbld
mov
inc
sub
inc
inc
jns
cmp
mov
ljmp
adc
cs
in
repz
bound
movsl
cmc
lcall
leave
xchg
rorb
mov
shlb
sarl
jae
into
insb
inc
repz
fs
xchg
jg
loopne
jg
lock
mov
addr16
fldenv
mov
inc
int3
sub
movsl
jne
in
in
adc
imul
jmp
in
push
scas
dec
xchg
mov
push
inc
out
adc
or
mov
pop
jmp
sbb
inc
push
lret
pop
int
add
nop
and
inc
push
and
inc
loopne
mov
sub
mov
jecxz
jmp
sbb
pop
insb
cwtl
addr16
pmaxub
jno
pop
rolb
in
mov
cltd
mov
jae
cmp
filds
cmp
shlb
stos
mov
jg
push
sbb
sbb
mov
inc
xorl
cmpsb
adc
sbb
scas
jp
xchg
jmp
testb
fld
mov
jg
adc
ljmp
test
out
addr16
xchg
into
mov
mov
adc
ss
cld
rorl
rep
dec
inc
int
lahf
add
mov
scas
test
loopne
lock
dec
and
jns
sub
ja
push
adc
cmc
das
xchg
mov
mov
add
pop
decb
adc
mov
fidivs
subl
ds
mov
stos
or
mov
mov
incl
dec
daa
adc
sub
jno
add
push
outsb
adc
hlt
mov
mov
call
dec
push
fwait
inc
cmp
inc
or
sub
mov
inc
rcrb
shrl
dec
pop
icebp
dec
push
out
out
mov
addr16
mov
pop
out
xchg
cs
decl
inc
cmp
ds
dec
repz
push
cmc
enter
mov
cs
sbb
dec
pop
es
incl
push
leave
out
loopne
shl
push
int
cwtl
sbb
mov
call
shlb
je
shlb
sti
int
hlt
lock
mov
add
repz
cmp
cmpsl
mov
dec
jo
and
test
outsl
push
push
out
stc
mov
inc
xchg
mov
cld
lock
mov
jp
in
jne
mov
outsb
mov
out
mov
sar
and
inc
out
push
xor
cmc
aad
cmp
cmp
mov
repz
push
fsubrl
sbb
dec
aam
pusha
adc
sarl
and
sub
add
pop
mov
cmp
add
mov
sbb
cltd
cltd
pop
es
out
xchg
and
je
ja
movsb
mov
stc
xlat
mov
dec
mov
aad
add
incl
adc
loopne
ret
dec
cmp
aad
popf
fsts
nop
std
lods
sub
mov
lods
das
pop
xchg
mov
xchg
std
inc
push
ret
inc
mov
pop
adc
out
dec
sarb
pushl
inc
out
xor
sub
pop
mov
pop
aas
mov
or
mov
pop
adc
lcall
inc
add
push
das
mov
inc
mov
cmpl
cmp
mov
jecxz
cmpl
in
and
loop
into
jne
sub
mov
mov
int3
arpl
push
push
jmp
mov
push
stos
adc
push
cli
aas
in
xchg
out
sub
mov
push
cs
sahf
aaa
mov
mov
pop
mov
mov
incl
adc
aad
pop
jne
cmp
pop
sub
dec
aas
pmulhuw
mov
call
repz
das
aad
cmp
push
rcrl
sbb
xchg
pop
mov
cmpsb
jmp
xchg
clc
lock
stos
xor
pop
mov
jb
in
int3
xor
xor
jmp
pusha
mov
jecxz
jb
fmuls
jecxz
and
sbb
in
mov
loope
sbb
pushl
dec
sbb
cltd
lahf
mov
push
pop
mov
dec
test
cmp
cmc
jp
shll
add
decl
mov
mov
es
es
push
daa
clc
nop
outsl
jmp
sarl
dec
xchg
mov
test
mov
inc
addr16
jmp
sahf
aam
adcb
inc
fdivr
mov
lahf
inc
arpl
ljmp
mov
js
xor
int
sbb
jmp
popa
loop
js
loope
sub
arpl
jecxz
xchg
test
xchg
push
mov
or
popf
rcl
mov
jbe
xor
push
pushf
or
add
push
ja
mov
sbb
push
cmovle
ljmp
pusha
cmp
test
data16
sarl
pop
lock
jecxz
cmp
inc
lea
test
rol
js
xor
imul
jge
test
dec
mov
jmp
es
cmp
sahf
mov
and
fdivs
iret
fsub
mov
lds
mov
jo
imul
jle
jnp
mov
out
call
call
loop
inc
jbe
jg
mov
cld
aaa
sbb
rep
outsl
movsb
lock
and
scas
les
lcall
mov
lds
adc
pop
sub
dec
mov
xor
pop
add
mov
mov
add
inc
aad
mov
inc
add
imul
xlat
mov
push
mov
les
scas
xor
push
dec
mov
std
sahf
add
push
pop
enter
ljmp
push
ret
dec
jb
sub
repnz
push
sbb
add
mov
ss
lods
mov
or
insl
test
lock
cmp
mov
subl
inc
jne
mov
lods
stos
lcall
test
in
cmc
ret
ret
hlt
xchg
mov
fstpl
mov
out
ja
jge
movsl
and
cmpsb
lock
dec
cmpsb
mov
push
pushl
inc
mov
and
mov
shll
pushf
sbb
jg
ret
sub
mov
loop
in
adc
xor
jo
int3
push
xchg
mov
mov
stos
nop
push
sahf
xchg
cld
lcall
je
or
mov
lret
jp
js
jnp
xor
xchg
dec
sub
movsl
or
rcll
repz
jg
xor
adc
fcomps
sub
mov
in
mov
mov
and
xchg
ret
lret
sub
pop
dec
sti
fldl
cmp
ret
stos
ret
cwtl
dec
and
pop
call
movl
pushl
es
xchg
mov
pop
int
incl
stc
loopne
cmc
std
cwtl
hlt
addl
dec
call
mov
mov
xchg
lahf
xor
adc
movsl
inc
fstp
js
mov
lcall
lock
lea
sti
jge
stos
push
xor
or
mov
test
lea
ficoms
das
sar
fisubs
pop
lret
icebp
adc
xchg
mov
ficoms
jg
incl
in
mov
add
cmc
add
ffreep
mov
incl
int3
add
jo
stos
lods
mov
pop
ficoml
jno
negl
mov
ror
pop
es
inc
mov
mov
decl
jne
jb
ret
fs
divl
mov
jmp
mov
jne
jae
mov
cmp
imul
mov
pop
cmp
adc
inc
decl
push
loope
push
push
cmp
xor
or
dec
xchg
call
cld
pop
or
pusha
dec
stos
cmc
dec
xor
add
call
jg
mov
ret
xlat
lea
ret
sub
xor
insb
ficoml
jecxz
push
mov
and
call
mov
add
and
lcall
dec
rcll
push
mov
addl
pop
lahf
push
fsqrt
nop
fildll
dec
mov
cmp
xlat
loop
mov
movsb
test
xorb
ja
orb
decl
xor
push
inc
dec
shl
in
mov
in
lea
clc
lcall
out
sbb
arpl
push
mov
int
mov
fsubl
jg
cmp
shrl
cmp
xor
jno
sbb
xor
push
mov
push
popf
jno
mov
inc
lcall
decl
int3
lcall
cmpsl
and
loope
mov
add
js
mov
cmp
rcrb
std
lret
gs
jae
pop
inc
push
arpl
call
add
outsb
sub
shll
sbb
lods
rcl
add
cli
sti
int3
lret
inc
aad
pop
out
dec
mov
ja
push
sar
popa
mov
stc
lahf
or
das
mov
xchg
sbb
cmp
ljmp
ss
xor
pushl
xor
outsb
mov
jg
fdivrl
push
shlb
jnp
adc
ret
mov
jl
push
add
decl
cmpb
inc
mov
adc
lret
ja
cmp
ret
lcall
ficomps
adcl
mov
sub
xchg
jo
xchg
add
mov
adc
mov
ja
aam
and
adc
js
mov
cmp
fcomip
lea
xchg
cltd
lret
repnz
shll
xchg
pslld
xchg
cmp
shr
decl
sub
je
lods
sbb
jle
push
cld
inc
xlat
pop
cmc
pushl
lock
lds
std
jbe
repnz
ds
jne
mov
adc
call
sub
popf
mov
sbb
aad
aaa
enter
dec
xchg
mov
imull
clc
ljmp
sar
jg
ficoms
ret
and
dec
xchg
aad
pushl
pop
push
or
adc
or
fildll
lcall
dec
bound
mov
ud0
loopne
jne
xchg
pop
shlb
imul
int
pop
xchg
addr16
incl
fists
hlt
sub
pop
push
out
addr16
shr
mov
fcoms
sub
cmpsl
mov
inc
int
or
loopne,pt
pushl
xor
cmp
int
fbld
leave
lea
pop
adc
test
stc
es
cmpsl
sub
js
into
aaa
incl
shl
lret
imul
lcall
inc
das
adc
mov
scas
mov
xor
outsl
mov
incl
test
push
sub
inc
jnp
fwait
sub
xor
xchg
sbb
fistps
nop
mov
adc
call
pop
call
sub
sub
ljmp
lock
mov
js
std
sbb
int3
and
pop
outsl
jbe
and
mov
and
leave
loop
xchg
addr16
sub
add
lods
imulb
lods
inc
outsl
ret
or
mov
mov
ljmp
adc
mov
inc
adc
dec
cmc
out
dec
dec
mov
gs
xchg
rorb
lcall
fdivrs
adc
dec
faddl
sarl
dec
fcomip
outsl
add
clc
inc
stos
les
cwtl
orb
popa
fwait
cmp
push
daa
shlb
add
adc
je
fcoms
mov
sub
add
sub
lods
ja
incl
adc
in
leave
mov
cmp
push
mov
xchg
ljmp
in
mov
mov
xor
dec
sbb
cmp
sub
cli
pushl
jge
aam
xor
int3
cmp
scas
adc
inc
js
iret
inc
clc
or
clc
ljmp
jg
dec
or
cmp
fs
add
out
inc
mov
jmp
jl
push
out
inc
inc
sub
rolb
dec
pop
cmc
out
xchg
test
aaa
out
xchg
pop
and
jg
add
data16
aad
xchg
jge
add
ljmp
mov
add
pusha
sub
ljmp
out
shrb
push
jno
arpl
pushf
push
out
ror
popa
mov
inc
lret
adc
jmp
push
pusha
sbb
lods
adc
sbb
or
cmp
sar
rolb
out
mov
mov
out
push
jne
pushl
mov
nop
sub
mov
dec
jecxz
leave
je
rcrl
mov
pushl
cs
enter
add
push
loope
and
mov
mov
popf
sub
jb
xorl
mov
jae
add
pop
sbbl
sub
paddusw
in
test
jg
cmp
in
mov
lret
push
test
stc
inc
pusha
xor
add
decl
std
cld
rcrb
js
pop
mov
dec
cs
cmp
out
cli
cmp
cld
inc
push
sub
stc
xchg
sbb
out
and
xchg
ljmp
push
and
hlt
pop
or
pop
mov
decl
jmp
adc
dec
xor
xchg
mov
decb
adc
stc
push
lock
inc
sbb
addr16
cmp
fidivl
pushf
add
mov
mov
jnp
sbb
out
xchg
ljmp
stos
cmp
les
cmpsl
cwtl
ret
fmuls
fadds
xchg
out
pop
stc
xchg
decl
cmp
clc
xchg
jbe
fcoml
and
hlt
pushl
imul
imul
mov
jle
add
cs
loope
dec
mov
pop
fdivl
shrl
popf
into
fiadds
inc
mov
decl
fwait
and
out
add
lret
cmp
adc
insl
lcall
ffree
incl
call
mov
jns,pt
and
jno
fwait
dec
loope
push
gs
dec
ret
cmp
mov
lcall
movsl
jecxz
das
dec
or
in
lahf
xchg
aas
mov
mov
jg
jno
add
sbb
incl
or
sub
gs
pop
push
sub
push
push
add
mov
jg
loope
mov
sbb
roll
aaa
adc
push
mov
in
sub
pop
cmc
pop
ljmp
and
daa
jp
jl
mov
incl
inc
lret
gs
jo
mov
or
adc
or
shlb
push
sub
mov
inc
pop
out
mov
jg
lock
add
ret
xchg
loop
xor
or
jb
out
decl
push
sub
cmp
inc
mov
xchg
push
jg
xor
out
mov
jmp
jb
push
aam
xor
xchg
xchg
cld
in
dec
testb
icebp
cwtl
adc
in
inc
or
ljmp
decl
sub
adc
popf
push
and
bound
rorb
shlb
lods
daa
sub
push
or
mov
fsts
inc
leave
or
xor
mov
mov
inc
stos
test
lahf
cld
mov
mov
mov
pop
cltd
xchg
incl
lods
lret
jmp
pusha
pop
repz
fistpll
arpl
mov
jmp
dec
call
ss
mov
outsb
pop
ret
fucompp
icebp
and
decl
xor
loop
loopne
in
inc
cmc
mov
pusha
setns
sti
addl
jno
aaa
incl
aas
xor
or
leave
lods
adc
sahf
mov
jmp
test
enter
mov
push
dec
mov
loope
fisttps
pop
and
sbb
pop
inc
std
je
test
push
jl
push
mov
jmp
subb
cmp
shr
or
ljmp
ljmp
and
insl
sbb
mov
dec
or
dec
cs
fmull
adc
jno
shlb
jbe
add
decl
cmp
pop
cld
int
addr16
stos
roll
xchg
mov
in
aad
mov
std
mov
adc
dec
jnp
xor
add
cmpsb
dec
inc
out
call
std
imul
hlt
jle
push
adc
sbb
xor
or
sbb
call
dec
fdivrs
push
enter
or
lret
mov
add
dec
mov
pushl
les
xor
jo
add
cmc
dec
and
mov
in
pop
cmp
mov
enter
mov
fadd
out
out
pop
inc
clc
mov
out
jae
fidivl
pushl
xchg
orl
inc
sahf
cwtl
push
xchg
pop
mov
mov
fistps
mov
ljmp
and
aad
decl
loop
inc
mov
dec
psrlq
xchg
adc
lcall
push
ficomps
decl
sbb
mov
scas
fsubrs
dec
int3
add
push
repz
push
push
movsl
jge
cmpsb
mov
dec
push
xchg
sbb
leave
push
mov
popa
mov
pop
loope
ret
je
mov
mov
in
jecxz
cmp
int3
and
add
pushl
fadd
movsb
and
aad
inc
cld
mov
cli
xor
and
call
push
das
sbb
js
pop
sbb
sub
push
mov
rcr
inc
fcomps
sahf
daa
inc
hlt
mov
es
cli
push
dec
insb
out
imul
dec
jg
jg
inc
cwtl
adc
push
sbb
es
das
cmp
incl
jne
inc
cs
pop
std
mov
jmp
jecxz
mov
mov
out
in
push
mov
push
xchg
rol
ret
push
fsubp
clc
idivb
test
decl
push
js
mov
push
mov
lea
pop
mov
pushf
nop
mov
in
addl
pop
loopne
std
xchg
and
pop
mov
jmp
add
into
cs
loop
xchg
or
dec
packsswb
sbb
shll
push
daa
lret
mov
and
iret
push
bound
sbb
icebp
mov
incl
stos
iret
push
cli
mov
dec
das
fsubl
cmp
adcl
jmp
stos
mov
xchg
push
sub
and
xchg
rclb
or
lock
sbb
call
das
cwtl
lock
xchg
adc
sub
dec
pushl
add
push
adc
outsb
mov
mov
xchg
sub
call
mov
inc
cmp
jle
xor
jecxz
hlt
sub
add
roll
je
lcall
push
jecxz
cmpsb
aad
rcrb
mov
pop
mov
notb
and
lret
lcall
dec
pop
add
add
xor
fisttpll
jecxz
sti
inc
movsl
nop
imul
xor
cli
push
ss
out
mov
pusha
adc
mov
xor
decl
js
imul
push
push
xchg
add
bound
nop
test
into
in
rorl
pushf
adc
ljmp
inc
ja
adc
aas
cmp
das
std
push
fs
mov
jle
cmp
inc
mov
sub
incl
loope
mov
mov
subb
loope
jnp
pop
or
mov
xor
inc
inc
mov
cmpsl
xor
pop
mov
mov
mov
cmc
mov
test
add
pop
sub
dec
je
enter
pushl
pop
xor
xorb
faddp
clc
lds
jmp
mov
repz
call
sbbl
in
dec
rorb
decl
and
pop
xor
mov
pop
dec
and
push
rcl
outsb
loopne
and
call
les
adc
dec
insl
in
mov
mov
fdivrs
iret
js
decl
imul
and
jbe
xlat
xor
in
in
jns
ret
int3
movsl
jmp
aas
incl
cld
decl
mov
push
test
push
and
inc
inc
pusha
jl
aad
add
cwtl
daa
mov
xor
lret
popf
cld
inc
sub
jnp
out
add
outsl
je
insl
inc
and
bswap
ss
in
and
ljmp
loop
out
sub
mov
xchg
sar
add
inc
ss
push
mov
xchg
subl
ljmp
adc
push
adc
call
sarb
jbe
shlb
or
mov
ljmp
lret
jmp
mov
sub
fstpt
lock
setno
loopne
jnp
mov
xchg
test
incl
popf
mov
mov
ret
pop
or
data16
or
or
mov
jp
rcll
icebp
dec
mov
or
sbb
rolb
jecxz
in
incl
mov
std
clc
inc
ljmp
push
and
fsubrs
fdivs
fsubs
out
test
push
or
inc
loopne
sbb
add
mov
jnp
add
jae
xor
or
lods
in
pop
sbb
insl
pushl
mov
cmp
jns
adc
cmpsl
pop
or
sub
jl
inc
mov
xchg
pop
hlt
psraw
xor
push
addr16
xor
aam
shrl
addr16
xchg
popf
cmc
jl
cmpsb
loope
call
mov
rcll
cmp
dec
dec
lcall
cmp
fmuls
leave
hlt
loopne
bound
nop
jmp
push
and
and
sub
stos
mov
cmp
cli
test
testl
insb
or
xchg
shrl
out
das
push
test
lcall
push
call
es
fwait
mov
pushf
jmp
mov
xchg
adc
aad
in
jle
sbb
das
cli
loope
scas
mov
mov
int3
sub
inc
iret
push
mov
xor
and
mov
loopne
adc
xor
xchg
dec
cld
ljmp
mov
repz
dec
je
mov
lret
fsubrs
popf
fbstp
ret
pushl
xchg
insl
unpckhps
jp
mov
add
xchg
pop
sub
popf
test
aam
prefetch
lahf
clc
shlb
jg
cmp
test
mov
out
add
cmpsl
je
repnz
ss
mov
scas
jle
adc
out
int
xlat
xchg
sub
fisttpl
rclb
out
fmull
and
lcall
lods
lods
mov
lea
and
mov
cmp
out
sti
mov
movsl
push
fldenv
xchg
sbb
or
add
lcall
lahf
mov
test
int
lea
out
and
lret
addr16
sti
js
mov
mov
movsb
push
imul
lcall
push
add
movsb
movsl
clc
mov
stos
out
sbb
mov
aad
dec
movsb
jmp
rorl
mov
adc
mov
xchg
cmp
cmp
lcall
sbb
sbb
jmp
lods
fimull
into
lcall
jbe
in
loope
or
es
add
outsb
adc
inc
xchg
movsb
mov
ss
in
shrl
sbb
rcll
je
pusha
loope
xor
xchg
ss
arpl
fs
fucomp
and
inc
push
loopne
iret
adc
cmp
lock
ficompl
or
pop
scas
pop
cmp
icebp
sub
inc
adc
pop
xlat
cmp
ja
add
cwtl
shrl
pushl
mov
les
into
call
fdivrp
pop
out
rorb
dec
test
mov
test
jbe
inc
xchg
add
cmpsb
lea
ss
insb
sub
loope
jo
pop
nop
pushl
jmp
ret
out
mov
mov
fisubrl
mov
imul
ret
push
dec
pusha
addr16
adcb
insl
dec
addl
inc
call
sar
ret
mov
repz
pushf
mov
ljmp
or
dec
mov
xor
push
lods
sub
decl
call
jmp
les
popa
dec
loopne
cli
or
push
nop
add
jecxz
call
sub
fldcw
mov
call
xor
movl
mov
mov
dec
mov
mov
jl
push
dec
and
mov
mov
movb
scas
cmp
aam
jb
idivb
scas
push
push
std
and
push
enter
mov
add
mov
mov
daa
xchg
call
mov
enter
xor
jecxz
ss
jo
leave
push
shll
int3
or
fwait
lcall
mov
push
jbe
and
sbb
test
and
inc
mov
jmp
ds
mov
sub
jl
mov
inc
jb
xor
mov
inc
outsb
mov
inc
daa
sub
call
mov
or
je
iret
add
pop
lret
out
js
jmp
mov
jae
mov
mov
repz
loop
xor
or
xor
xor
jmp
imul
and
gs
push
dec
pop
loope
mov
inc
cmp
sbb
lahf
ret
mov
mov
je
add
repnz
stos
hlt
add
jg
ret
mov
ds
pop
mov
mov
cmp
lret
cmp
xor
fimull
in
incl
dec
and
stos
test
sarl
mov
mov
xchg
jg
pushl
push
lahf
loopne
imul
add
loope
insb
pop
mov
mov
cli
and
lahf
xchg
icebp
test
add
pushl
js
or
mov
jg
push
out
lods
les
mul
jl
in
fisttps
roll
add
xor
call
jg
mov
jmp
add
cmc
mov
repz
mov
pushf
adc
jp
loope
lcall
mov
lcall
mov
pushl
dec
iret
mov
hlt
call
cs
insb
hlt
out
push
push
sub
test
bound
roll
jmp
cmpsb
pop
into
repz
popa
sub
loopne
sub
das
sub
movsl
lcall
mov
std
xchg
cli
sarl
inc
or
mov
jb
out
je
jl
jle
add
iret
clc
mov
pushl
pop
jle
xor
testl
mov
ror
sti
enter
arpl
dec
jmp
out
xor
sub
jmp
mov
das
sar
jmp
dec
dec
mov
mov
ret
test
call
cmp
sub
int3
fadds
xchg
nop/reserved
outsl
jmp
mov
out
icebp
adc
fidivl
mov
push
daa
push
test
aad
lock
loope
dec
sahf
ljmp
adc
mov
cld
popa
rcrl
fisubrl
mov
in
pushw
sahf
decl
xchg
sub
or
pop
sub
jns
inc
sar
cmp
pushl
cld
lret
xchg
push
arpl
sub
xor
repnz
sahf
out
scas
and
mov
dec
ret
cmpsb
sub
cld
fimull
sti
rorl
cmp
and
incl
push
lahf
aam
sub
inc
cmp
inc
scas
mov
movsb
jg
pop
xchg
aas
mov
dec
imul
mov
pop
xchg
dec
jmp
cmp
outsl
imul
dec
inc
repz
xchg
sahf
add
call
test
jno
cmp
les
jmp
sbb
lods
scas
mov
mov
das
xor
mov
in
push
dec
jmp
ret
jnp
jg
cmc
mov
ret
jmp
adc
out
jae
push
jnp
jmp
fmull
int
fwait
lods
add
call
dec
pusha
mov
dec
dec
outsb
push
xchg
incl
cs
out
outsl
ja
jno
enter
inc
or
ret
fadd
lret
dec
imul
decl
pop
pop
dec
les
js
fsubr
movsl
push
daa
cmpsb
or
incl
and
mov
es
aas
or
iret
adcb
cmp
inc
sar
sbb
and
inc
cmp
lods
or
incl
mov
mov
pushf
ds
mov
mov
int
ljmp
sub
xor
add
xor
mov
iret
sarb
aam
mov
lcall
or
leave
pop
add
ljmp
mov
cmp
aad
les
mov
loop
lret
test
scas
or
loopne
sar
in
xchg
sbbl
mov
fnsave
push
pusha
dec
gs
adc
es
mov
inc
pop
cs
jb
clc
dec
jmp
loope
inc
mov
andl
aas
stos
dec
push
mov
call
out
and
pop
cmp
inc
es
fadds
xor
scas
repz
out
maxps
pop
pop
xchg
jge
daa
sar
pop
movsb
lcall
sahf
lds
insb
add
je
aam
std
mov
out
repnz
jmp
xor
or
mov
dec
mov
ret
pop
call
lock
test
dec
push
mov
add
sbb
or
insl
add
call
mov
mov
mov
pushl
dec
mov
incl
hlt
orb
jae
and
repz
and
mov
cld
xor
mov
sbb
and
jle
decl
dec
nop
xchg
fildll
sti
icebp
aam
mov
lcall
fcomps
sti
stos
cmp
jmp
and
scas
in
inc
ja
ljmp
lea
leave
rcrb
popf
fisttpl
xor
rcrb
jno
addr16
pushl
ret
test
pop
xchg
loopne
cwtl
pop
js
outsl
out
and
and
ljmp
jae
pushf
cmp
sub
nop
and
sbb
in
mov
hlt
add
inc
add
sahf
adc
das
mov
xchg
xor
movsl
cmp
clc
into
xchg
add
mov
sub
add
mov
pushf
and
jmp
lock
and
fwait
sbb
cmpsb
aaa
cld
fists
cmp
es
push
mov
xchg
dec
mov
iret
aaa
sbb
or
cmp
dec
mov
push
sbb
jns
dec
loopne
push
mov
mov
xor
stc
push
add
pushl
outsl
push
or
pop
inc
push
mov
or
imul
decl
jp
in
cs
into
test
movsb
imul
pushl
xchg
sub
xchg
adc
or
push
sbb
mov
data16
or
fs
add
sbb
jnp
test
adc
add
ljmp
loope
popa
leave
loopne
out
icebp
sbb
lahf
xor
cmp
lcall
dec
int3
mov
out
mov
jae
dec
cmp
push
mov
divb
psllq
sbb
push
xchg
xchg
sub
stos
ret
pop
mov
pushf
lret
les
push
push
gs
lea
icebp
push
xchg
mov
adc
fwait
aas
mov
call
mov
and
jmp
mov
mov
mov
pop
popf
rorl
incl
call
xchg
es
ds
ret
or
inc
enter
and
sub
decl
std
push
imul
dec
dec
aas
sarb
hlt
mov
ret
inc
mov
adc
inc
leave
fisttps
add
and
add
xchg
stos
aad
cmp
inc
iret
pushf
daa
retw
pop
ret
mov
mov
pop
pop
jb
cmp
mov
xchg
gs
sbb
pushl
cld
inc
mov
subb
or
movsl
adc
mov
or
push
ret
aam
repz
das
cmc
pop
mov
leave
repnz
xchg
mov
jmp
adc
adc
out
and
shll
and
and
sar
incl
aam
cmp
or
sbb
sub
pop
or
push
mov
call
insl
xor
hlt
adc
mov
or
or
jp
sub
sbb
enter
xor
pushl
std
jg
les
fiadds
repnz
in
incl
andb
mov
fsubr
out
out
sbb
test
lcall
test
ret
bound
cwtl
jg,pt
or
push
pop
leave
push
adc
inc
push
rep
insb
fadd
cmp
jp
insb
icebp
jbe
jp
dec
in
pop
loopne
imul
mov
mov
fidivs
or
ret
lcall
xchg
loop
mov
mov
int3
cld
shl
stos
insl
rorb
decl
fidivs
push
or
cmpsl
inc
mov
xor
call
mov
mov
and
mov
aaa
popa
incl
call
push
pop
push
ds
insl
cmc
imul
or
repz
fcoms
ret
incl
pop
out
test
pop
ds
xchg
xor
rcll
pop
sbb
ljmp
xor
ss
mov
jle
fsubr
inc
mov
mov
divb
incl
loopne
jae
in
adcl
dec
test
ljmp
loopne
mov
pushl
std
hlt
inc
mov
mov
scas
repz
scas
and
cmpsl
dec
lock
push
clc
mov
ds
or
push
sub
inc
xchg
jo
and
mov
inc
rcll
gs
adc
add
ja
cwtl
xchg
add
bnd
ljmp
call
xchg
or
or
pop
aad
lcall
rcrb
incl
loope
cmpsl
xchg
mov
fadd
xchg
shll
sbb
xchg
cmp
fists
sbb
and
dec
lret
mov
and
decl
into
jae
cmp
inc
dec
aas
fndisi(8087
faddp
jbe
outsb
mov
pop
and
aaa
xchg
iret
daa
add
xor
mov
jge
and
movsb
insl
and
cmpsl
mov
call
push
inc
out
jecxz
lock
add
arpl
xchg
mov
les
nop
add
dec
fwait
jmp
subb
in
pop
pop
inc
jge
mov
fs
jns
out
lahf
fiadds
mov
jmp
in
jle
cmp
push
cli
xchg
cmp
mov
cmpsb
aam
fsubrp
add
movsb
out
push
out
dec
fidivrl
addb
ficoms
mov
fwait
cltd
inc
int
jl
or
cmp
push
test
xor
adc
incl
dec
xor
ljmp
sbb
xor
es
ds
sbb
xorl
and
sbb
in
sub
mov
lock
das
clc
dec
lds
jne
test
jl
jo
test
filds
jmp
add
add
sbbb
inc
enter
loop
push
mov
jmp
xor
add
insb
xchg
nop
ret
push
add
push
lahf
ret
es
inc
mov
and
adc
fisubs
decl
lock
clc
cmpsb
sub
movsw
pop
xchg
dec
mov
call
mov
stc
jl
add
fs
movsl
jge
mov
cmp
mov
inc
sbb
jmp
ret
sbb
shrb
ret
push
xchg
cmpb
cmc
ljmp
push
mov
jae
add
or
sbb
push
das
sahf
sub
cmp
lahf
cli
pushl
xchg
addr16
sbb
push
ljmp
pop
ja
and
mov
mov
pop
xor
cwtl
xchg
mov
test
lds
ljmp
push
cmp
add
mov
in
or
push
je
adc
jg
jmp
insl
mov
imul
xchg
adc
ficoml
jmp
lcall
ss
mov
add
fidivl
push
adc
ljmp
cltd
inc
push
movsl
pop
and
test
mov
test
inc
jp
jg
pushl
sbb
mov
stos
fmul
fs
push
cmp
sbb
stc
xchg
cmp
xor
cwtl
push
sti
xor
or
adc
mov
test
dec
in
mov
test
out
and
iret
imul
test
or
es
inc
or
rorb
push
inc
js
cmp
cmp
and
lds
daa
ljmp
call
xor
add
push
xchg
mov
test
mov
outsb
je
enter
inc
lcall
mov
lcall
std
cmpb
jecxz
aad
inc
cld
decl
inc
cmp
lods
pop
out
das
cmc
lcall
jg
loope
outsl
ljmp
mov
and
push
lods
and
icebp
loop
call
mov
mov
addr16
xchg
xor
sub
mov
jae
test
mov
mov
out
add
movsl
sub
mov
xchg
imulb
cmp
clc
cli
add
incl
les
std
imul
pop
mov
mov
sbb
ljmp
and
sahf
dec
inc
push
and
ljmp
jmp
les
push
cs
jg
aaa
inc
xor
out
cmp
ret
daa
xchg
divb
movsb
xchg
int3
decl
add
or
shlb
movb
adc
push
popa
add
or
add
jg
outsb
test
incl
pop
outsb
mov
xchg
push
mov
cwtl
es
add
adc
and
aas
add
ret
mov
leave
push
mov
ficompl
jns
push
sbb
sbb
hlt
lcall
int3
xchg
in
sub
add
pop
gs
fsincos
add
imul
jge
decl
filds
insl
xlat
mov
cwtl
out
mov
mov
adc
mov
xchg
decl
dec
xchg
icebp
fdivrl
fsts
xor
out
ljmp
stos
mov
imul
insl
add
lahf
jnp
cmp
leave
mov
in
bound
fisubrs
inc
cmp
or
ret
ret
lret
int
in
outsl
push
out
push
out
xor
and
push
add
testl
out
lcall
imul
js
insl
ret
cmp
mov
jmp
stos
pop
sbb
mov
movsb
lret
scas
mov
dec
xor
orl
shlb
mov
outsl
movsb
addl
jnp
sub
dec
cmp
notl
lock
push
add
shlb
xchg
gs
or
roll
nop
fucomip
es
push
sahf
dec
dec
or
push
mov
mov
and
popa
ror
leave
fsubrs
imul
ljmp
decl
ffree
mov
mov
outsb
enter
inc
ljmp
xchg
mov
cmp
andl
cmp
ljmp
mov
loopne
das
outsl
inc
xchg
adc
lret
xor
outsl
movsl
jmp
or
shl
stos
dec
lret
sbb
rolb
std
lods
addl
clc
add
dec
jge
clc
jge
add
dec
cmp
lret
lock
pusha
dec
ret
xor
and
outsl
mov
push
int3
mov
inc
das
dec
dec
incl
mov
dec
mov
inc
in
xor
pop
mov
or
lret
aas
mov
mov
incl
hlt
rcl
shll
shrl
add
lcall
sub
cmp
shlb
mov
ja
and
incl
mov
sub
ja
faddp
pop
mov
xchg
ja
xchg
dec
xchg
xchg
imul
cmp
lret
dec
pop
fwait
mov
fdiv
push
inc
sub
popf
pop
jle
cmc
xchg
test
pop
lahf
xor
das
mov
cs
mov
das
lret
call
sbb
imul
fs
mov
std
shll
adcl
insb
lock
and
push
pop
cmc
sub
subb
out
out
out
popa
es
xchg
loopne
mov
cwtl
sbb
or
add
fld
sbb
outsb
cs
mov
xchg
jae
int3
push
movl
pop
aaa
lock
xlat
push
stc
jae
das
lock
lcall
mov
std
adc
sbb
test
adc
push
mov
pop
pusha
mov
dec
dec
in
bnd
mov
cmp
push
jge
mov
incl
pop
mov
loopne
js
pop
inc
out
and
add
fstl
fsubrs
nop
cmp
xchg
lods
outsb
cld
popa
inc
int3
imul
movsl
jp
mov
enter
add
mov
cmp
pushl
jg
lcall
push
mov
fs
adc
cli
cmp
or
movsb
sti
mov
mov
pushf
imul
jns
dec
les
cli
pop
dec
push
sbb
call
loope
clc
pushf
ljmp
jno
and
inc
mov
pop
fstl
sahf
hlt
add
out
hlt
and
sub
scas
jecxz
pop
jmp
sub
test
adc
addl
sub
push
lret
test
lea
pop
jne
icebp
mov
and
dec
mov
sub
int
les
or
mov
adc
mov
mov
inc
jns
out
sbb
xlat
out
mov
pop
cltd
ret
movsb
fists
call
movsl
gs
fimull
xchg
dec
mov
or
push
mov
mov
mov
dec
mov
stos
std
mov
mov
pushf
sub
dec
test
cmp
lcall
dec
push
lds
inc
sbb
sub
outsb
inc
mov
dec
jb
or
lods
pop
ja
hlt
pushl
mov
int3
inc
rclb
or
sbb
sahf
enter
call
mov
lds
mov
lahf
jae
sbb
push
cmp
mov
inc
adc
and
scas
xchg
clc
sbb
cmp
inc
inc
movsb
xorb
int
inc
fs
dec
pop
add
dec
push
mov
jmp
pop
add
mov
mov
js
aam
adc
repnz
or
and
ret
sbb
or
pop
push
ret
adc
jmp
mov
mov
in
and
mov
sbb
and
aas
ficompl
insb
push
dec
jmp
mov
test
jnp
cld
mov
mov
rorl
test
push
pop
sub
ljmp
cmp
pop
xor
xchg
fnstenv
in
aas
incl
adc
jnp
es
xchg
nop
outsl
clc
pusha
rol
les
pop
mov
mov
dec
sub
pop
hlt
ljmp
push
lahf
xlat
pop
mov
dec
enter
cmpsl
out
in
test
inc
test
pushl
or
and
lcall
and
mov
ret
mov
mov
loope
push
leave
dec
jns
enter
pop
pusha
jecxz
jmp
in
push
push
mov
int3
mov
jge
inc
clc
pop
xor
flds
mov
into
lods
add
lcall
inc
mov
xchg
out
mov
pop
scas
ret
inc
pushf
outsb
imul
outsb
xchg
jo
mov
in
enter
adc
lahf
loop
xlat
les
ljmp
popf
popa
pop
es
lcall
or
scas
ds
call
inc
loope
or
mov
enter
ss
call
fidivs
mov
xor
sbbb
lcall
xchg
xchg
fs
data16
inc
mov
inc
sub
fisttps
cs
mov
pop
sarb
popf
dec
and
dec
clc
dec
orb
ret
nop
jle
jmp
cmpsl
adc
orb
sahf
ljmp
gs
cmp
test
push
mov
dec
into
scas
ss
add
jb
call
dec
jns
push
or
stc
push
sbb
inc
sahf
add
xchg
rolb
or
pop
imul
fcmovnu
dec
add
mov
push
pop
adc
rol
mov
mov
in
add
sub
dec
dec
xchg
stc
sbb
mov
imul
decl
test
movsb
mov
repz
fdivrs
sahf
mov
mov
mov
ljmp
cli
fucom
dec
pushf
jl
imul
jb
nop
push
lret
les
scas
scas
fisttps
jmp
jp
cs
and
and
lock
adc
fnstcw
jbe
mov
out
mov
pop
dec
lods
dec
in
or
arpl
lcall
jmp
pushf
add
xor
pushf
or
fldl
negl
mov
jg
movsb
mov
iret
mov
inc
mov
cmp
ljmp
icebp
pop
pusha
movsb
dec
sbb
or
sub
sbb
mov
sub
leave
xor
inc
pop
mov
imul
mov
unpckhps
in
mov
call
into
cmp
sbb
xor
push
fisubs
pop
dec
stos
addl
mov
push
fcomip
lcall
and
fsubl
mov
aad
or
es
decl
sub
xchg
mov
dec
ret
and
les
sub
incb
addb
dec
mov
jg
ret
sub
mov
bound
cwtl
test
sub
fcmovb
jl
rcrb
xchg
cld
incl
lcall
divb
sub
fnsave
jg
sub
loop
gs
push
insl
ret
jnp
test
incl
pop
and
leave
lret
jbe
dec
movsl
or
call
cs
mov
jns
notb
outsb
mov
and
aas
lret
repz
lods
cmovs
pushl
aas
aad
lret
sahf
mov
rcr
adc
jg
outsb
mov
adc
adc
fcomps
fcoml
mov
lods
sub
fldl
std
cmp
and
or
cmp
jge
dec
and
jg
push
inc
scas
mov
rcr
fwait
test
or
outsl
jg
sub
fdiv
dec
xchg
rcpps
add
pop
lock
into
mov
repnz
ljmp
mov
dec
ljmp
xor
fwait
add
pushl
sub
push
pop
and
and
decl
or
cli
sbb
notl
add
lcall
in
push
cmp
cmp
dec
jo
hlt
cli
pop
arpl
cltd
int3
dec
xor
es
int
inc
notb
outsb
mov
les
decl
mov
test
stos
dec
movsb
dec
dec
mov
rolb
icebp
or
mov
cmp
int3
adc
push
push
test
push
in
xor
lods
popa
cmp
or
test
cwtl
dec
scas
ss
enter
test
xchg
cmp
enter
dec
and
in
mov
scas
xchg
dec
push
cmp
sub
adc
in
out
inc
mov
adc
popf
test
jmp
mov
adc
jle
add
jecxz
and
ljmp
andl
cs
lret
decl
and
adc
and
pop
xchg
pop
arpl
xor
decl
xchg
sti
jecxz
mov
adc
rorl
dec
incl
jg
fisubl
xchg
ja
lods
js
lds
movsb
push
xlat
decl
nop
inc
and
andb
lock
jns
inc
sub
stos
jb
dec
pushl
aas
jg
sar
lods
sub
cld
std
je
fs
dec
jp
mov
aas
data16
push
gs
pushl
movsb
rcrl
mov
hlt
or
dec
cmp
in
test
add
or
cli
mov
mov
test
mov
jp
mov
mov
inc
lea
inc
mov
incb
inc
sub
cmpsb
jb
xor
push
dec
leave
test
loope
faddp
adc
cli
mov
int
adc
cltd
ds
pusha
lds
rclb
xor
loopne
lock
out
aad
or
adc
in
xor
bound
decl
sub
adc
mov
aad
loop
mov
jae
sbb
mov
ds
cmp
cmp
mov
add
lds
ss
pop
inc
fdivr
decl
in
popa
sbb
xchg
cmp
das
xor
loop
xor
dec
int
cmp
inc
fsubl
mov
fiadds
mov
lahf
inc
push
aas
cmp
test
or
jnp
push
call
add
mov
mov
daa
dec
pop
in
push
flds
mov
jb
das
data16
pop
das
dec
call
cmpsb
jge
cmp
xor
mov
loop
call
or
incl
adc
ds
loopne
imul
sub
ljmp
lods
lret
andb
sahf
pop
scas
inc
pop
cs
push
jg
push
inc
pop
inc
aam
push
mov
dec
dec
jo
cmc
dec
sahf
in
push
insb
jp
adc
rcrb
and
clc
pop
std
call
pop
pop
mov
sbb
lcall
sub
lahf
cld
or
outsl
int3
or
popf
mov
dec
ss
or
ljmp
cmp
xchg
inc
sbb
sub
mov
leave
adc
jg
jmp
xchg
or
xchg
inc
rorl
mov
insl
insb
xchg
push
roll
incl
hlt
and
cmp
dec
or
or
sub
sbb
xor
cld
dec
or
add
push
mov
movsl
jg
cmpl
jne
loope
faddl
mov
mov
stos
fldt
push
insb
mov
adc
jg
in
dec
nop
add
push
xor
out
rorb
mov
xchg
xor
jge
cmpsb
fisttpl
add
mov
into
add
jg
mov
mov
cmp
adc
pop
movsl
pop
mov
incl
fwait
push
and
jecxz
mov
hlt
sub
mov
mov
jg
xchg
call
xchg
pusha
mov
or
cmp
outsb
jo
imul
lcall
shl
cs
js
jmp
jne
inc
out
pop
inc
add
leave
push
cld
push
shll
mov
inc
xlat
je
icebp
imul
gs
rolb
lret
cmc
incl
mov
sbb
or
pop
leave
lret
push
jne
and
filds
popf
push
jb
lods
cmc
insb
hlt
jl
bound
ret
mov
and
jg
lock
add
scas
add
dec
mov
lods
adc
cmp
ljmp
repz
test
xchg
lock
inc
pop
hlt
addr16
shll
sbb
jmp
mov
icebp
mov
call
fidivrl
sub
ss
cmp
in
sarl
ret
lock
or
mov
inc
sbb
lods
sti
call
mov
inc
jae
mov
rorl
xor
leave
push
pop
outsl
mov
std
fs
out
dec
xor
jp
jno
mov
lods
sbb
jp
ljmp
pushl
inc
jbe
or
aad
test
push
test
dec
ljmp
inc
loopne
daa
sub
les
inc
cmp
imul
sbb
std
inc
out
mov
dec
rolb
cmp
jb
ljmp
and
lcall
je
movsb
jns
pop
roll
decl
out
xchg
stos
lods
add
lods
scas
lret
jns
xchg
dec
jecxz
rep
scas
cli
jmp
imul
cmp
mov
sbb
test
or
bound
dec
jecxz
mov
mov
insl
pop
xor
and
jl
xor
int3
and
test
das
push
imul
push
repz
lahf
add
adc
repz
dec
negb
jbe
setns
mov
or
dec
pop
jge
es
sbb
punpckhbw
push
sti
shll
inc
cmpsb
data16
cli
jo
jmp
mov
jmp
cmp
add
dec
mov
xchg
mov
dec
add
xor
incl
arpl
cmp
test
out
jp
ret
dec
std
out
mov
cmp
mov
decl
jmp
inc
xlat
orl
lahf
data16
js
sbb
push
cld
sub
call
ss
xor
lock
mov
adc
sbb
ljmp
or
xchg
cmpb
jmp
sbb
shlw
inc
mov
and
ljmp
mov
in
mov
add
pusha
sar
lcall
in
sbb
cli
lcall
sbb
out
mov
in
jg
mov
mov
arpl
and
out
add
and
push
adc
fdivs
jmp
repnz
inc
pushf
lock
mov
mov
fimull
push
sub
insb
test
mov
mov
cmp
stos
shlb
jo
call
leave
inc
adc
jg
incl
add
push
push
js
scas
bound
xchg
pop
repnz
mov
mov
pop
pop
lods
sbb
repz
add
sub
dec
mov
xor
ds
xor
xchg
inc
or
nop
das
stc
push
pop
jmp
jle
mov
imul
mov
aad
call
fisttpll
loop
inc
repz
sbb
mov
pop
out
and
jg
outsb
stc
mov
test
fisttpl
js
jecxz
insl
mov
sub
inc
arpl
add
add
mov
sbb
mov
mov
dec
cmpsl
leave
jb
adc
incl
inc
add
inc
out
sub
adc
movsb
sbb
inc
movsl
nop
int3
test
rorb
inc
jno
or
mov
mov
out
push
lock
jb
jnp
subb
push
ror
scas
xor
pushl
mov
cmpsb
aas
mov
pop
lea
mov
mov
cmp
ss
decl
les
call
adc
jno
mov
mov
mov
mov
mov
xor
lock
cmp
jo
jg
pop
cld
mov
or
inc
lret
mov
add
scas
enter
cmp
dec
or
lcall
xor
sbb
inc
into
sbb
and
int3
pop
sub
or
dec
repnz
je
mov
push
jg
dec
cmpsl
xor
les
repnz
mov
sahf
sub
call
xchg
stos
cmpb
cwtl
test
rcr
dec
popl
add
fisttps
xchg
inc
popa
and
xchg
cs
decl
decl
inc
test
mov
jae,pt
popf
cld
rep
scas
inc
sub
inc
mov
scas
jl
loope
mov
pop
icebp
movsl
xchg
xchg
test
int
xor
sub
call
pop
adc
and
shr
incl
mov
movsb
data16
pop
sar
push
fildl
sub
add
sar
pop
decl
dec
ret
and
scas
sub
jbe
fwait
push
lds
decl
inc
repnz
fdivrs
add
sbb
and
jle
jg
push
xchg
ret
push
sbb
inc
loopne
mov
dec
lock
hlt
mov
sbb
xchg
jp
shlb
xchg
fsubs
sbb
add
out
outsb
cmp
add
dec
sub
call
fldcw
ficomps
lret
lock
mov
lret
bnd
lods
sub
adc
jne
mov
lcall
call
or
jg
sub
pop
decl
andb
jmp
inc
hlt
cmpl
mov
jmp
sbb
xor
lcall
fadds
jo
or
into
ret
push
cli
jmp
loope
dec
int3
add
pop
mov
shr
and
xchg
imul
and
mov
outsl
mov
sub
mov
addr16
addr16
xor
mov
mov
inc
cmp
inc
mov
inc
jg
push
mov
sub
add
jnp
mov
or
cmc
push
adcb
shrl
mov
test
mov
scas
sbb
cltd
movsb
std
addl
call
cmp
jbe
jns
sbb
mov
mov
insl
xchg
clc
inc
dec
dec
lock
mov
xchg
pop
jmp
pop
imul
xchg
lret
roll
imul
adc
nop
xor
decl
sbb
call
mov
lret
add
call
jno
jle
mov
mov
xchg
mov
lock
sub
or
incl
xor
jp
out
pop
jbe
cmpsb
pop
push
ror
add
ficompl
mov
dec
and
decl
pop
lahf
lods
nop
mov
daa
movsb
mov
std
sbb
mov
mov
decl
js
add
push
loopne
xchg
cmp
jmp
jle
sbb
retw
ja
jns
jmp
sarl
fldl
jl
mov
cmp
int3
inc
lcall
lcall
mov
inc
sub
pusha
scas
aam
inc
rorb
xchg
mov
mov
push
int
add
sub
int3
cltd
xchg
or
lods
shl
jns
sub
fwait
pop
cmp
and
mov
call
hlt
fs
fs
jo
jg
mov
xchg
out
test
jg
scas
scas
sub
xchg
stos
mov
jne
outsl
cmp
inc
and
and
scas
xor
shrd
ret
leave
nop
adc
ds
mov
xchg
mov
pushl
sahf
sbb
faddl
jbe
or
pushf
aaa
out
stc
or
fwait
xor
pop
adc
rcr
ljmp
push
fimuls
jg
pop
cwtl
mov
and
and
mov
and
scas
and
jmp
dec
gs
test
daa
mov
jns
sar
mov
icebp
es
push
add
cli
in
inc
gs
add
ss
sti
mov
pop
add
cmpsb
sub
hlt
vmovaps
ret
dec
cmpsb
mov
out
dec
andl
shrl
inc
icebp
lods
sub
push
int
dec
rcrl
and
mov
loop
cmp
ljmp
sub
ja
mov
imul
and
push
js
pop
lock
jmp
or
push
inc
cs
pop
xchg
push
jp
data16
in
icebp
incl
mov
cmp
popf
xorl
and
jecxz
mov
lcall
pop
xlat
mov
jnp
jnp
jp
icebp
pop
or
lcall
or
stos
test
incl
cwtl
hlt
movsb
iret
sub
jns
xor
out
mov
xchg
data16
push
out
pop
mov
bound
or
push
out
xchg
out
negl
jmp
mov
call
ds
test
adc
shlb
lret
lret
xchg
mov
popf
jecxz
cmp
dec
jb
sub
mov
cmp
cmp
dec
mov
lods
fbstp
call
jnp
lock
enter
mov
inc
scas
dec
or
inc
push
push
es
sarl
jg
mov
pop
lds
or
iret
or
test
out
std
jae
inc
sbb
test
lahf
sbb
dec
jae
mov
arpl
push
incl
sti
fidivrs
cld
cmp
pushl
movsb
jae
mov
dec
jecxz
shll
dec
cmp
inc
mov
jne
dec
jns
fcomip
call
pop
pop
cmp
add
out
mov
push
inc
into
in
mov
jecxz
pop
cmpb
jp
test
mov
out
lahf
or
outsb
or
lret
es
mov
aam
add
lcall
cmp
mov
add
clc
mov
fwait
rolb
mov
mov
call
cmpsl
imul
adc
inc
sub
adc
enter
inc
pop
rcr
iret
jns
fs
cmpsb
mov
pop
fbld
cmp
mov
pushl
xchg
pushl
flds
cmp
stc
rcll
jl
mov
xchg
sub
adc
shl
dec
or
ficoml
adc
outsb
adc
std
lret
bound
lret
js
call
jnp
jno
pop
cmpsb
inc
scas
imul
adc
and
lea
xchg
and
les
adc
scas
pop
push
push
and
ljmp
mov
jno
sbb
test
in
adc
xchg
sbb
xchg
sarb
inc
cld
jo
jp
mulb
add
movsb
in
push
mov
jg
jmp
ljmp
popa
dec
cmp
mov
inc
sbb
sub
call
loopne
sub
outsb
cmp
or
cmp
in
push
scas
ud0
ljmp
jno
jge
mov
or
mov
shlb
cmp
push
ljmp
jnp
test
shrl
mov
aaa
aad
lods
jo
sbb
roll
add
jg
add
adc
test
push
inc
in
adc
xchg
cmp
pop
lcall
nop
cs
sarb
or
mov
dec
sar
fcmove
and
outsb
fs
pop
cmpb
and
or
fidivs
loope
xchg
cmp
xor
mov
cmc
out
clc
jmp
sbb
pop
mov
xor
daa
std
cwtl
sub
dec
xor
sub
lcall
cmc
mov
mov
dec
mov
inc
ja
mov
icebp
sbb
imul
rorl
test
movsl
mov
xchg
mov
cmpb
xor
and
xor
cmp
dec
subl
aas
cmpsb
and
mov
sub
in
push
push
fstpt
enter
mov
shl
addb
and
dec
jo
mov
jbe
pop
mov
push
cmp
adc
add
pop
hlt
ljmp
fstpl
mov
add
out
jle
mov
ret
aas
cli
ljmp
lcall
lcall
aad
sbb
in
xor
dec
lock
or
pop
push
cmp
lock
jg
and
lcall
mov
add
out
xor
mov
clc
loop
mov
jp
dec
mov
js
bswap
push
cwtl
mov
pop
out
rcll
push
xchg
call
iret
in
inc
fbstp
rolb
test
cmp
or
loop
sti
mov
or
mov
pop
enter
or
jp
jmp
sub
adc
push
xchg
pop
cltd
ficompl
mov
inc
scas
mov
fsubrl
push
cmp
call
xorb
call
andl
mov
jmp
cvtps2pd
dec
mov
dec
inc
or
hlt
adc
pushl
ja
mov
xlat
sti
jg
mov
pop
mov
dec
cmpl
cmp
pop
jg
dec
pop
pop
fidivs
fmulp
stos
cmp
orl
iret
dec
pusha
rorl
push
pop
xchg
add
push
mov
sbb
loop
inc
cmp
les
inc
jmp
cwtl
xor
icebp
stos
mov
and
dec
xlat
dec
cld
loopw
jecxz
addb
jg
sti
dec
mov
jo
pop
add
or
jle
jge
out
jb
aas
loop
in
lcall
jb
mov
movsb
popf
xchg
fimuls
push
je
jle
test
call
outsb
sbb
cs
out
or
fisubrl
pop
mov
aad
add
fadd
stos
add
js
shrb
pop
adc
cmc
xchg
cmp
out
leave
inc
and
jmp
jg
lcall
out
sar
add
pop
stos
mov
sbb
into
cltd
mov
dec
sarb
mov
aad
hlt
inc
cmp
cmp
loopne
je
cmp
in
fcomip
adc
and
push
push
pushl
repz
aas
and
mov
sub
pop
in
mov
pushl
lea
xor
dec
jno
push
repz
lds
les
decl
cld
mov
pop
lds
xor
pushf
mov
mov
incl
add
fwait
add
xchg
loop
repz
fcmove
mov
ljmp
nop
les
push
cld
pushl
bound
jmp
pop
push
pop
lahf
out
mov
and
ljmp
jmp
gs
push
mov
or
add
mov
pop
into
push
and
jne
jbe
negb
mov
cltd
cmp
test
sub
lahf
ss
mov
rolb
pop
loop
pusha
sub
lcall
gs
push
ret
decl
lea
adc
add
cli
xchg
adc
lods
nop
mov
jg
mov
fmul
add
notb
out
jb
mov
xlat
pop
call
movsb
insl
or
jno
js
sbb
lcall
insl
jmpw
cmp
lahf
add
xor
outsl
cmpsb
and
add
call
orl
ret
pop
outsb
loop
out
pop
cmpb
jno
clc
lcall
jg
mov
imul
mov
scas
dec
xchg
mov
jle
outsl
movsb
pushl
mov
inc
mov
xor
sbb
dec
xor
loope
sbb
ljmp
repz
sbb
out
jmp
pop
mov
ret
pop
dec
stc
cld
mov
sub
xor
jae
xchg
mov
aaa
sbb
inc
sub
mov
imul
das
test
decl
test
iret
loope
into
lea
imull
add
stos
pop
shll
inc
popa
ss
idivb
roll
aam
mov
xchg
push
lea
rclb
mov
fisubs
dec
ss
xor
shrb
das
rorl
aam
fisttpll
pop
cwtl
lock
lcall
add
shrb
pop
subl
loope
fwait
and
cmp
xrelease
decb
callw
mov
decl
and
movsl
dec
mov
mov
xchg
xor
dec
inc
cmpsb
lock
out
addr16
mov
pop
jg
fiaddl
leave
pop
pushf
push
ret
outsb
icebp
lcall
les
popf
into
shlb
jmp
sub
sub
or
out
lods
popa
enter
or
inc
iret
xor
mov
call
cld
jae
dec
iret
lcall
mov
andb
mov
das
mov
call
mov
mov
sti
pop
sbb
mov
inc
pop
xlat
popa
jmp
imul
adc
rorb
das
xorl
push
jb
mov
pop
loopne
cmp
jb
mov
dec
jae
xor
jg
dec
adc
xor
pop
outsl
test
ret
out
cli
cmp
cmp
adc
cltd
dec
or
aam
mov
pop
dec
jmp
incl
sub
sub
jae
sub
jp
pop
lret
and
add
rclb
mov
push
xchg
pop
les
rcl
jp
ja
ljmp
out
ror
cld
mov
mov
out
mov
cld
call
xchg
mov
ret
subl
sub
movsl
push
leave
rcll
jl
cli
inc
xchg
stos
mov
xchg
pop
int3
loope
or
dec
call
push
dec
ss
pop
roll
insl
xor
mov
test
xchg
hlt
ljmp
mov
repz
dec
xchg
repz
mov
sti
inc
mov
ljmp
sbb
aad
in
fimull
scas
aad
fdivl
clc
add
push
repnz
iret
fmuls
pop
mov
sbb
ljmp
lcall
loope
cmp
out
inc
inc
je
and
dec
and
lcall
or
mov
es
shrl
xor
incl
or
leave
repnz
scas
xor
stc
loop
and
stos
jmp
repnz
xchg
cmp
cmp
or
add
fstpl
jmp
in
dec
and
cmp
in
pop
xchg
adc
stos
cmp
outsl
addl
inc
test
lcall
or
jecxz
sub
lods
js
mov
lods
and
testl
in
loopne
stc
shll
and
out
adc
add
loop
js
ret
out
insb
shrl
es
repnz
cld
xchg
sbb
test
mov
pop
icebp
decl
cmp
movsb
mov
rcll
mov
or
sahf
mov
ds
pop
cmc
call
lds
fwait
push
aad
outsl
rorl
fwait
divl
xor
or
gs
call
lds
roll
jl
jno
mov
cltd
ret
xchg
mov
mov
test
pop
fpatan
cmpsl
adc
jns
sub
push
dec
inc
mov
add
pushl
sub
sbb
mov
dec
stos
mov
mov
shll
cmovge
sub
ret
inc
sarb
loopne
addr16
xor
cmp
rorl
jae
data16
jp
pop
sarb
lcall
inc
jp
stos
rcrl
lods
xchg
frstor
or
jg
jmp
pop
lcall
shl
subb
inc
lcall
loop
fs
fisttpl
shlb
out
pushf
in
inc
cmp
dec
mov
dec
daa
lret
int3
or
pushl
fdivrs
push
es
dec
pop
pop
sub
mov
repz
sbb
sbb
cltd
das
mov
xor
les
shlb
call
cmp
add
mov
addr16
fucomp
scas
xchg
ljmp
clc
call
std
popa
mov
xor
adc
lds
xor
pushl
xchg
out
and
movsb
movsb
out
push
xor
cld
mov
aad
push
test
add
pop
scas
xor
call
pcmpeqd
mov
jp
inc
cmp
jmp
dec
mov
sub
push
jno
jp
lds
enter
mov
and
mov
call
paddd
add
mov
mov
mov
aad
cmp
push
xchg
xor
jno
loop
jg
mov
repnz
clc
lods
mov
neg
mov
lcall
mov
lahf
jl
hlt
lret
js
adc
mov
and
mov
mov
mov
lea
shlb
int
movsl
jg
in
ret
lods
insb
xor
clc
push
iret
push
inc
shlb
mov
or
jno
or
dec
leave
out
xor
pop
int3
roll
sti
add
xchg
sbb
es
add
ret
sub
jge
lcall
mov
mov
les
cli
mov
scas
andl
ljmp
lock
pop
out
nop
mov
or
std
in
aaa
mov
lcall
das
dec
addl
jp
and
xor
pushl
mov
punpcklbw
orb
mov
or
sbb
or
movsl
pop
xchg
mov
pushl
push
cmp
stos
sbb
and
push
jg
sbb
nop
lds
movsl
sub
dec
repnz
lods
mov
ss
dec
inc
mov
rorb
mov
push
dec
xor
push
frstor
roll
or
xor
pushl
xor
lret
jns
lods
dec
cmp
add
icebp
sub
mov
mov
push
mov
push
cld
mov
aam
cmp
lret
sbb
mov
lcall
sub
stc
xor
repnz
inc
push
sbb
push
ljmp
jl
mov
lods
fs
stos
and
movb
xchg
push
call
call
cs
popf
push
repz
lock
dec
cmp
xor
jno
push
lcall
in
dec
dec
inc
cmpb
or
rcll
mov
imul
sbb
push
fwait
push
ds
inc
mov
fwait
mov
pop
xchg
repnz
dec
pusha
add
lcall
xor
and
out
mov
push
data16
outsb
punpckldq
incl
pop
pop
rcr
pop
mov
sbb
clc
push
lea
jl
cld
mov
hlt
xorl
add
xchg
stos
sub
sub
addr16
sub
mov
call
pop
es
cmpsl
push
mov
sub
pushl
xor
cmp
decb
add
adc
decb
jb
nop
clc
mov
push
cmpsb
arpl
clc
cwtl
les
add
and
ss
fcmovnbe
add
push
fimull
jge
or
add
test
push
sti
sbb
jno
in
xor
mov
into
stos
pushf
and
fwait
mov
jle
lock
jge
mov
mov
jmp
andb
mov
jne
and
rcrl
jmp
aad
or
int3
mov
push
fdivr
inc
dec
mov
outsl
cli
ret
es
lea
ror
bound
jmp
pop
xchg
mov
cmc
mov
popf
push
ret
movsb
inc
test
fsubs
inc
jbe
aad
jmp
xchg
and
add
fs
inc
add
shrl
ja
orb
mov
call
std
into
cmp
hlt
ror
call
xchg
jge
pop
aas
mov
call
inc
daa
xchg
pop
arpl
or
flds
cmc
les
imul
and
gs
or
pushl
mov
mov
adc
aam
or
add
imul
pusha
inc
sti
cmpsb
gs
flds
jg
mov
ljmp
js
dec
mov
pushl
sbb
scas
int3
cs
lea
es
jp
push
mov
xlat
mov
cli
nop
dec
cmp
pop
adc
adcb
adc
and
ljmp
call
sub
call
xchg
adc
cmp
bnd
inc
add
inc
mov
dec
sar
lcall
jne
mov
and
test
in
pop
ja
incl
push
xchg
repz
mov
mov
mov
jg
mov
outsb
fadds
call
sub
push
nop
pop
inc
lret
cmp
mov
dec
mov
push
cmp
and
lods
jb
jecxz
js
clc
or
cmpl
dec
aad
push
xchg
or
mov
lret
jl
lahf
sub
jg
and
mov
push
jle
scas
and
jbe
test
inc
xchg
out
mov
ljmp
test
add
cltd
out
insb
add
adc
outsb
aam
push
add
jb
loop
mov
mov
dec
loop
push
int
or
dec
inc
ljmp
sbb
xor
dec
dec
lods
lods
dec
popf
ss
cmpsl
mov
mov
inc
xor
mov
fdivp
xor
xor
xchg
pop
or
and
xchg
push
cmc
decl
sbb
inc
push
fnstsw
mov
xchg
pushl
shll
pop
inc
mov
loopne
jg
jle
mov
cmpsb
xor
xchg
lods
fnstenv
mov
sub
mov
cmc
imul
ret
loop
lock
nop
cli
jne
jmp
repz
cmpsl
push
ja
push
mov
adc
jo
lcall
adc
mov
cmc
decl
jle
inc
and
repz
out
adc
lods
test
ljmp
jp
das
mov
mov
sub
cmpsb
orb
ja
dec
cmp
mov
dec
bound
lcall
cmp
mov
cmp
stc
inc
addb
jge
movaps
cmp
das
cli
incl
aas
mov
test
fldl
lock
pop
sbb
mov
jnp
data16
mov
push
mov
push
pop
mov
lods
mov
or
outsl
daa
aad
arpl
jg
jle
pop
jnp
sbb
mov
lret
and
clc
outsb
mov
std
pop
jne
lods
cwtl
rclb
and
pop
aad
fs
mov
jne
dec
cmp
call
mov
mov
fistl
cs
scas
mov
and
sub
ljmp
int3
dec
imul
mov
cmpsb
sub
fcomip
jmp
sbb
jbe
mov
int
fwait
lret
and
mov
sbb
incl
pop
jb
test
cmc
cmc
mov
outsl
mov
mov
jle
imull
add
inc
std
inc
and
mov
daa
aaa
rcrb
adc
lcall
xchg
iret
dec
jno
or
cmp
mov
cwtl
xor
fistl
cmp
incl
xchg
and
popf
mov
mov
sub
xor
mov
call
add
fsts
inc
mov
xor
leave
hlt
loopne
aaa
insb
lahf
or
xor
into
ljmp
mov
out
call
popa
lcall
mov
jnp,pn
jo
cmp
and
test
lods
stos
mov
sub
dec
cltd
inc
call
incl
xchg
jecxz
aam
push
test
push
mov
insl
sub
xchg
or
shr
push
jle
cmp
outsb
movsl
xor
mov
mov
jns
or
enter
sbb
repz
pop
data16
push
pop
adc
orb
lret
xchg
shll
mov
lret
mov
mov
ret
jmp
push
mov
scas
insb
adc
push
cmp
out
push
lods
in
movsl
cmpb
fs
mov
incl
ljmp
or
cld
dec
aad
hlt
fcoml
mov
mov
loope
inc
clc
ljmp
mov
dec
mov
lret
cmp
call
es
int
ljmp
aad
push
sbb
push
inc
and
adc
xor
sar
xor
adc
decl
sbb
or
psubq
pop
frstpm(287
inc
or
mov
rcrl
push
mov
add
mov
movsl
mov
pop
xor
hlt
shlb
arpl
pop
jno
pop
xchg
inc
popa
add
mov
stc
push
xchg
push
rcll
pop
mov
cmp
filds
scas
jb
cwtl
stos
leave
push
orb
fstpl
lods
test
mov
sub
fchs
sbb
xchg
and
add
notb
std
incl
inc
xchg
loopne
imul
test
mov
incl
orb
out
ss
push
loop
add
push
lods
cmp
mov
jl
repz
ljmp
andl
push
inc
jecxz
mov
mov
sub
push
xlat
filds
scas
mov
sbb
test
push
test
mov
and
mov
push
mov
in
test
jl
divl
lret
sbb
push
or
divl
mov
int
push
call
bnd
cmp
jno
rcrb
fs
popa
or
insl
xor
loop
dec
cmc
mov
push
and
aam
mov
pop
outsw
xchg
call
adc
int
fwait
test
clc
aas
cmpsl
hlt
nop
or
push
cld
jnp
push
inc
fwait
or
fildll
dec
xchg
movsb
mov
xor
pop
ljmp
fistpl
movsl
and
decl
jg
cmp
push
ds
stc
and
push
cwtl
mov
out
and
imul
push
shrb
cli
sbb
mov
movsb
mov
outsb
test
lcall
lods
dec
les
lds
jl
xchg
std
jbe
decb
or
jp
stc
jg
dec
cld
ficompl
mov
les
cld
ljmp
es
js
pop
lcall
hlt
shl
mov
addr16
cmp
je
cbtw
ficoms
int
xor
stos
das
clc
scas
je
fsubr
add
or
xchg
push
inc
mov
mov
add
or
fidivl
call
ljmp
add
fs
cmc
and
sbb
xor
mov
loop
xorl
inc
in
mov
mov
and
and
fstpt
sub
mov
fdivr
call
addl
dec
icebp
lock
int3
jg
incl
das
ljmp
roll
and
movsl
sbb
mov
orl
cmpsl
out
int
xchg
jbe
mov
rolb
add
pop
mull
inc
es
ficoms
aad
scas
cwtl
sbb
iret
pop
push
xor
inc
stos
fnclex
arpl
lcall
dec
icebp
push
mov
pop
lret
es
jne
xchg
jne
xchg
jo,pt
rcrl
out
int
cmpsl
mov
lea
fs
aad
and
cmp
es
xadd
dec
xor
icebp
adc
outsb
sahf
sti
mov
mov
inc
pushl
inc
lret
or
ss
std
inc
dec
mov
insb
stc
xor
jp
sbb
jmp
pop
aam
sti
std
ret
pop
add
xor
xchg
adc
and
rcl
cwtl
push
mov
call
inc
movsb
xor
cli
ret
pop
rolb
je
jg
sbb
popf
into
pop
arpl
pushl
nop
xchg
fs
adc
lea
mov
xchg
add
cmp
test
lods
jae
cmpxchg
loop
mov
push
imul
mov
dec
gs
decl
mov
push
xchg
lahf
in
pop
in
inc
leave
clc
dec
cmp
ret
shrb
js
shll
das
fnstsw
insl
mov
rorb
lock
push
xor
jmp
pop
test
and
cwtl
jbe
sbb
pop
pusha
add
out
mov
add
fsubl
das
mov
inc
ljmp
add
cmp
mov
daa
mov
stc
jecxz
aaa
mov
nop
cwtl
and
inc
mov
push
mov
popa
lods
mov
cmp
lret
push
or
mov
fs
das
mov
fbstp
mov
sar
mov
xchg
pop
out
mov
lcall
pop
lahf
testl
adc
sbb
mov
add
pop
out
inc
add
push
scas
add
mov
pop
jo
sbb
push
cmp
out
in
js
push
jl
aaa
mov
pop
cmp
mov
adc
or
adc
or
mov
jg
int
jo
mov
fnstsw
dec
dec
xchg
cmp
mov
ja
fsubrl
pop
cmp
mov
stc
enter
aam
lods
ljmp
or
push
lret
mov
leavew
lock
incl
repnz
aas
ret
or
push
popa
dec
mov
or
scas
jg
mov
add
icebp
push
xor
arpl
psubb
inc
js
mov
shlb
and
insl
clc
jo
int
sbb
aam
daa
push
pop
lods
decl
fisubl
outsb
add
dec
in
add
decl
add
addr16
ljmp
pushf
in
dec
or
mov
xor
pushl
iret
mov
fwait
mov
lcall
inc
mov
and
repnz
fcoml
or
fcomip
outsb
sub
cwtl
sbb
les
in
idiv
lahf
lods
cmc
das
ud0
mov
mov
popa
scas
in
imul
jp
sbb
sub
sar
adc
decl
push
adc
push
pushf
add
push
and
push
mov
das
insb
aaa
and
push
push
stos
or
fwait
mov
dec
adc
outsw
je
dec
ljmp
xchg
fcmovnbe
xor
arpl
aam
mov
mov
mov
dec
outsl
lods
cltd
sbb
and
add
lahf
mov
xor
decb
mov
sbb
adc
rcr
pop
mov
inc
stos
out
add
mov
sbb
pushl
add
jl
jne
sar
mov
loop
and
mov
jg
lcall
fildll
sbb
xchg
mov
mov
ds
dec
xchg
loopne
sub
jo
mov
mov
add
bound
imul
rorl
mov
sbb
add
das
pop
icebp
jg
sahf
mov
clc
ret
test
imulb
adc
call
call
mov
jne
cmp
cld
ret
in
mov
icebp
inc
std
test
jns
shlb
scas
pop
xlat
xchg
cmp
in
pop
add
ljmp
dec
xchg
std
add
mov
aaa
xor
mov
mov
or
inc
jl
xlat
sahf
sub
scas
aam
mull
ret
xor
mov
mov
pushl
fs
sub
mov
lods
xor
fdivr
ficoml
std
adc
add
decl
lock
xchg
push
dec
les
out
arpl
in
mov
push
cmp
lods
xor
es
out
push
ret
ljmp
mov
sub
mov
mov
mov
pop
dec
jg
mov
lods
cs
xor
lret
popa
jns
add
cmp
fiadds
pushl
lods
cli
inc
dec
stc
scas
push
lods
xchg
mov
inc
sti
ret
dec
pop
std
out
mov
scas
adc
lahf
js
mov
leave
in
rclb
jb
clc
out
ret
call
pushf
lds
cmp
jle
inc
push
lcall
arpl
inc
addb
andb
dec
ud0
test
mov
movsl
fs
or
lcall
jle
xor
hlt
add
mov
fucomi
mov
fbld
mov
fadds
int
dec
cmovne
leave
pop
into
repz
cmp
cmp
ljmp
pop
push
add
cmp
lcall
rolb
mov
dec
inc
inc
es
push
test
lds
ror
mov
or
jl
mov
sahf
push
jecxz
push
add
lret
addr16
fisttps
xorl
jno
xor
pop
mov
mov
idivb
lea
jmp
ljmp
push
xchg
sbbl
or
xchg
adc
mov
or
mov
test
inc
pop
scas
fwait
je
leave
popf
jmp
mov
sbb
fisttps
and
in
leave
pop
arpl
xor
pushf
cmp
cmova
or
xor
je
movb
sarl
sbb
lds
jns
cmc
push
insb
cmpl
dec
aaa
add
ljmp
outsl
or
mov
push
ljmp
jg
or
or
sarl
inc
addr16
lea
mov
xor
fnsave
mov
jg
push
jp
mov
in
in
cmp
ret
adc
mov
out
out
and
push
cmp
add
or
lods
mov
pop
and
aas
mov
loop
xchg
je
jb
xor
das
stc
out
les
cltd
addr16
pop
mov
pusha
cmp
xchg
daa
pop
push
jo
fistpll
mov
inc
push
sub
mov
call
sub
lcall
into
in
xor
outsb
loop
mov
sbb
ljmp
pusha
and
test
and
pushl
dec
gs
jle
shrb
ljmp
inc
ljmp
pop
add
daa
cmpsb
lods
xor
je
int
leave
cmp
inc
cmp
int
ljmp
mov
sub
rcll
or
inc
aad
and
insb
mov
dec
pop
addr16
dec
and
pushl
cmp
mov
dec
lock
and
pop
cmp
mov
cmp
call
add
cmpb
lahf
andb
mov
dec
pop
aam
int3
test
xor
xor
daa
shlb
stos
add
mov
int
loope
call
push
add
dec
sub
outsl
cltd
add
mov
cmpl
ds
sahf
lret
fdiv
ret
pop
outsb
jmp
xchg
sbb
shll
popa
push
lret
aam
push
call
jmp
sub
push
or
gs
mov
das
jg
stc
int
add
pop
fsubl
incl
or
cmp
or
test
fistl
xchg
call
call
or
jle
pop
sbb
mov
pop
les
or
push
mov
xchg
rcrl
test
aad
mov
mov
inc
fsubl
je
fnstsw
ds
fisttpl
and
xchg
cmp
lcall
dec
test
dec
push
sbbb
pop
out
xor
and
mov
push
orl
or
cmp
rolb
fsub
sbb
rep
adc
mov
inc
jno
xchg
push
lds
shll
pop
repz
sub
add
es
clc
mov
mov
add
mov
mov
rorl
fstp
xor
dec
or
ja
mov
lds
xchg
pop
pop
mov
push
xor
icebp
add
or
imull
lcall
push
fs
push
cmp
jbe
pop
jmp
mov
or
aas
fldt
incl
jbe
test
sbb
fistpl
push
and
ljmp
sbb
cld
and
sahf
test
icebp
push
jb
mov
jle
sbb
aaa
mov
call
pushf
loope
dec
cld
and
and
imul
int
inc
mov
adc
and
addr16
std
push
das
adc
call
push
add
loopne
or
lret
roll
mov
inc
andl
mov
shr
inc
pop
add
sbb
lret
sti
int
call
in
xchg
sti
mov
loopne
inc
cmpsl
outsb
insb
sti
push
fs
iret
testl
cmp
jb
rcrb
mov
mov
mov
rclb
dec
xor
mov
add
pop
adc
xor
stos
mov
xchg
push
pop
sbb
add
or
incl
inc
jno
repz
shrb
sub
int3
or
pop
mov
inc
out
pop
jmp
ja
mov
mov
add
sti
addr16
pop
hlt
dec
dec
ret
int3
sbb
inc
fistpl
jne
lcall
into
cmp
dec
js
xor
mov
sub
and
lods
inc
mov
adc
and
cwtl
mov
aad
data16
adc
inc
push
test
and
rcrb
std
or
pop
and
scas
xor
jmp
outsl
sub
rorb
pop
cmpsl
sbb
nop
test
ljmp
aad
fnstenv
xchg
jle
xchg
shlb
jl
scas
dec
mov
mov
adc
fs
jmp
int
mov
pop
cld
xor
inc
sbb
adc
inc
sarl
lock
test
mov
call
lcall
out
add
sbb
jno
mov
mov
sub
int
adcl
lret
and
push
int
cli
add
jb
mov
jne
ret
mov
lea
jle
cmpsb
je
call
into
dec
testb
xor
mov
fscale
cmp
fcoms
jmp
mov
add
jp
push
push
sti
sbb
shl
jo
dec
adc
paddd
jmp
or
iret
mov
push
ficomps
imul
test
cmp
or
jmp
adc
lods
popa
fucomi
dec
xchg
xor
mov
decl
roll
inc
dec
cmp
test
or
push
aad
call
jmp
mov
mov
jns
or
movb
inc
or
dec
xchg
mov
and
add
mov
popf
fs
js
lcall
mov
jecxz
sbbl
jmp
xchg
mov
loopne
cmp
sub
xchg
mov
mov
decl
in
lock
sti
pop
pushl
gs
imul
shlb
mov
lea
jg
sbb
sub
ja
in
mov
sub
fwait
loop
ss
jmp
inc
daa
iret
lret
mov
inc
ret
inc
mov
test
lcall
repz
mov
enter
jb
fildl
fcoms
rcll
int3
add
ljmp
sbb
inc
in
and
or
jbe
jg
std
test
and
pop
push
gs
sbb
mov
clc
gs
incl
jecxz
inc
jg
dec
inc
jb
and
push
adcl
lds
ja
inc
dec
in
inc
js
pop
mov
out
mov
insl
pop
int
adc
pop
xchg
cmc
incl
les
jno
mov
stos
mov
orb
add
cmp
decl
cmp
insl
popa
movsl
ds
and
filds
sub
cmp
mov
je
test
aaa
std
jge
in
arpl
jns
dec
jno
jmp
bound
push
adc
icebp
jae
inc
movsl
enter
lretw
loopne
mov
cmp
sbb
mov
inc
xchg
jo
mov
cmpsl
repnz
test
inc
dec
les
rorb
jecxz
ss
and
lds
or
jmp
jmp
aaa
or
roll
pop
xchg
cmc
xor
jno
jmp
pop
lock
repnz
mov
bound
and
mov
pushl
mov
loopne
loopne
xchg
iret
and
mov
insb
call
repz
test
test
ss
adc
adc
movsl
or
sub
xor
pop
sub
mov
test
mov
cmc
push
mov
add
movsl
cmc
fcmovbe
int3
mov
lcall
subb
cld
add
into
sarl
loope
mov
dec
xor
adc
jnp
decl
xor
sub
lods
jne
adc
mov
push
out
sub
mov
ja
sbb
enter
lret
ret
xor
lcall
cs
jo
test
cltd
or
ret
mov
cli
dec
xchg
in
jo
aas
in
scas
adc
pop
or
mov
mov
mov
icebp
fdivs
stc
jns
push
pushf
sarl
pushl
ja
add
sub
dec
fwait
incb
mov
mov
decl
shrb
and
icebp
or
shlb
sub
cltd
push
clc
mov
cmc
push
lea
add
incl
sub
add
and
adc
shlb
rorl
jne
cli
adc
push
and
pop
dec
addr16
mov
jmp
test
out
push
daa
fwait
insl
arpl
movsl
xor
and
inc
mov
ja
jo
lahf
loopne
test
call
push
xor
sub
cld
cmp
pushf
xchg
add
into
ss
jg
arpl
jmp
ficompl
or
cmp
dec
loopne
mov
es
cmpsb
mov
jbe
xor
idiv
xor
ret
xor
and
dec
jecxz
repnz
pop
mov
xchg
or
or
fwait
mov
clc
pop
push
enter
or
jbe
pop
xchg
test
fs
mov
mov
push
aad
mov
push
int3
pop
cwtl
shlb
test
call
cmp
sbb
xchg
mov
add
out
sahf
aam
jg
cmp
hlt
inc
movb
js
aam
ret
mov
dec
inc
icebp
int3
add
outsb
das
daa
lahf
adc
sbb
sti
idiv
ljmp
mov
fldln2
aad
es
ds
jne
sahf
jl
aam
mov
jp
cmp
jle
mov
repnz
jno
pop
inc
add
arpl
sbb
push
decl
aas
or
lret
in
mov
pop
xchg
hlt
push
add
fcomip
decl
push
dec
mov
cwtl
dec
scas
mov
push
roll
xchg
movsb
out
inc
sbb
call
cmp
pop
dec
jbe
arpl
icebp
out
xor
pushl
pop
sbb
mov
cli
out
aam
push
push
sbb
scas
pop
fbstp
sbb
pushf
dec
push
xchg
push
bound
mov
or
jg
pushl
xchg
fs
mov
add
mov
cmp
jne
or
dec
push
adc
lcall
dec
outsb
cmovno
mov
xor
mov
sar
add
aas
loop
cmpsb
or
sub
sbb
fbld
mov
mov
in
cltd
lret
dec
add
popa
imul
sbb
inc
cmpsb
cmp
mov
stos
orl
cmp
xor
dec
adc
ret
pushl
test
push
mov
pop
int
pop
repz
dec
inc
shll
mov
fdivrs
cmp
mov
fwait
pushf
adcl
and
jg
test
lret
lret
cmc
xor
dec
adc
sub
dec
std
inc
rcrb
aam
mov
ljmp
out
sub
pop
cli
movsl
bswap
cld
in
pop
xchg
hlt
add
add
push
stos
out
jge
jns
mov
fldenv
mov
lret
fs
mov
icebp
mov
pop
pop
sahf
push
hlt
mov
jmp
mov
rorl
mov
mov
mov
add
lahf
cmp
mov
ret
adc
daa
out
subl
mov
lret
sub
fmulp
or
cmp
gs
jne
sub
cmp
pop
inc
push
imull
js
dec
les
mov
xor
push
out
mov
sbb
lods
fdivr
fcomip
incl
pusha
inc
cmp
lahf
rorb
xlat
xor
cmp
std
stos
test
jg
insl
pushl
aaa
xchg
enter
lods
add
mov
push
lds
mov
cmp
jl
lds
xchg
pop
push
clc
lds
pop
inc
aam
enter
add
lcall
test
lock
lds
cmp
insl
add
das
inc
in
movsb
decl
pop
push
psubsb
lcall
nop
cmc
ja
aaa
mov
add
pop
nop
repnz
es
and
adc
mov
and
mov
dec
cmpsb
je
dec
push
mov
lret
mov
arpl
int3
mov
int3
pop
push
jmp
mull
loop
ret
stos
test
scas
and
dec
cltd
outsl
lret
sar
jmp
adc
cmpsb
cs
lock
lcall
jge
pop
mov
dec
adc
aaa
xor
insb
faddl
arpl
cmp
loopne
sbb
mov
sub
sar
jg
mov
add
das
push
jno
mulb
inc
cmp
enter
push
cld
call
xchg
cmpsl
inc
lods
aas
cmpsl
push
mov
mov
insl
add
sahf
vmovsldup
push
inc
dec
and
call
int3
dec
jns
ret
cmc
roll
sub
jno
add
pop
and
dec
pop
ret
mov
lcall
push
add
mov
pop
mov
test
mov
cmp
pop
fistps
push
xchg
outsl
mov
dec
sbb
jne
inc
xor
call
lcall
xchg
jl
ret
dec
imul
movsl
inc
dec
xchg
mov
push
pop
popf
call
call
das
popf
jnp
repnz
adc
mov
ret
shlb
outsb
sub
subb
decl
or
test
mov
cld
aaa
addl
test
out
jg
jg
or
rcrl
ret
jno
jecxz
mov
or
sub
shrb
cli
int
lret
inc
scas
or
repnz
dec
int3
and
lret
stos
lea
dec
mov
xchg
out
adc
sub
ljmp
push
in
test
dec
dec
mov
mov
xchg
jp
mov
out
push
cmp
push
mov
int3
xchg
cmp
jg
fcomip
in
or
in
or
enter
repnz
mov
popf
push
inc
jp
sbb
ljmp
test
or
jns
ja
lods
push
into
mov
das
sahf
sub
fiadds
das
lods
inc
cli
ljmp
dec
xor
cmpsb
and
fstpt
mov
mov
call
fdivl
test
sbb
mov
outsb
xor
mov
icebp
test
pop
cmpsb
aaa
loop
push
mov
mov
decl
fwait
loope
cmp
cld
lcall
pop
adc
cmp
jmp
adc
pusha
popf
sbb
and
xchg
iret
shll
stc
imul
ja
ss
adc
push
mov
lcall
and
dec
sti
cmp
push
mov
lcall
adc
xor
mov
adc
mov
jmp
cwtl
and
mov
jns
cmp
sbb
loopne
aaa
cld
cld
push
pop
push
in
cmpsb
add
mov
cwtl
sub
pop
mov
lock
mov
sbb
lods
leave
cmp
fldlg2
mov
scas
sbb
xchg
test
lcall
ljmp
push
movb
mov
mov
cmp
fildl
mov
xchg
push
out
test
mov
sbb
pushl
cmpb
fsubrl
xor
push
and
sbb
or
lods
mov
xchg
mov
lret
shlb
sbb
lcall
sbb
or
push
outsb
arpl
xchg
mov
std
fsub
sbb
dec
jmp
and
mov
les
jns
out
cmc
lret
inc
cmp
ljmp
push
or
imul
repnz
sub
in
mov
jg
call
push
add
imul
addl
sbb
dec
add
pop
and
dec
push
aam
std
sarl
sub
arpl
stos
fdivr
aam
jg
cmp
and
andb
repz
movsl
pop
add
cmp
rclb
movsb
test
in
fisubrl
cmpsl
mov
clc
cmpsb
cmp
xchg
ret
insl
aam
cs
pop
ret
aaa
std
add
ss
mov
inc
pop
fwait
decl
push
testb
sbb
push
jnp
stc
jg
adc
dec
call
lahf
push
das
in
mov
mov
hlt
mov
sub
jg
jnp
loop
ret
push
pop
call
inc
fistps
rolb
pop
movsl
jae
fldcw
and
or
test
incl
adc
push
cmp
into
mov
data16
jmp
ror
xchg
jmp
mov
push
out
and
jmp
daa
pop
xor
rolb
jg
and
pop
sub
into
js
mov
jecxz
cmp
inc
loopne
aam
inc
xchg
arpl
xchg
and
xor
adc
call
in
mov
scas
sbb
xchg
cli
rcrb
out
divl
cmp
sub
ds
and
push
adc
mov
ljmp
sbb
mov
mov
mov
cltd
inc
in
lret
cmpsb
dec
decl
lods
ljmp
fldt
je
aad
rcll
add
cmc
movsl
dec
xchg
std
jmp
subb
lock
in
clc
or
decl
mov
je
mov
movb
out
jl
push
xchg
imul
cli
repz
jne
inc
push
jge
sub
xchg
pop
push
xor
mov
xchg
push
mov
lcall
dec
jo
add
sbb
sti
mov
mov
mov
inc
cmp
push
arpl
repnz
pop
subb
rorl
pushl
mov
divb
in
dec
add
arpl
xchg
xchg
sub
xor
fbld
call
cwtl
hlt
mov
dec
xchg
cmp
dec
test
adc
ljmp
lods
inc
adc
mov
fcomip
fisttps
loop
imul
fsubl
ja
ret
pop
push
mull
or
call
xor
push
popl
shl
sub
pop
cmpsl
ss
xchg
idiv
js
out
inc
jl
mov
xlat
test
imul
add
mov
push
jge
or
jmp
mov
ss
pop
mov
dec
insb
test
xchg
pop
cmp
xor
outsl
and
fiaddl
lret
movsb
enter
mov
shll
adc
ja
bound
cmp
lock
add
push
clc
xor
int
decl
test
pop
daa
mov
movsl
lds
test
pushf
or
rcl
pop
testb
dec
arpl
dec
ja
and
sbb
pusha
inc
imul
dec
adc
out
clc
mov
sahf
xor
ljmp
in
xchg
dec
xor
or
incl
pop
xchg
mov
mov
je
jo
dec
enter
xlat
test
das
mov
call
std
pop
inc
int3
mov
aam
mov
jne
sarl
or
pop
or
enter
lcall
cmp
or
mov
cmp
xorb
add
mov
cs
mov
cmc
decl
jns
popf
scas
fstpl
mul
mov
repnz
fdiv
inc
test
mov
jl
push
mov
in
jno
xchg
xor
inc
adc
lret
shll
mov
in
jmp
mov
aaa
jae
mov
lcall
jbe
cmc
jge
adc
cwtl
fdiv
push
mov
cmp
popf
jp
dec
cmp
xchg
pop
add
cs
jnp
movsb
mov
sub
adc
add
rcl
mov
gs
pop
sbb
imul
push
fildll
jecxz
push
mov
add
psubw
and
adc
cmp
mov
imul
push
cld
sbb
lret
ret
subl
jg
cli
xor
rcr
mov
add
imul
in
push
test
dec
mov
ficoms
and
rorl
shrb
and
mov
fmuls
pop
cmc
decl
mov
ret
outsl
mov
mov
pop
scas
loopne
ljmp
stos
or
or
push
rep
cs
mov
mov
pop
pushf
sub
hlt
push
popa
repz
cmp
jmp
fstpt
fisttpll
sbb
mov
enter
ds
mull
mov
mov
es
cmpsb
ficoml
mov
int
add
cli
lcall
jnp
je
rolb
out
jbe
mov
jecxz
popa
jno
icebp
cs
movsb
les
ljmp
push
jb
repnz
add
enter
lcall
inc
mov
decl
into
cmp
notl
inc
jecxz
xor
clc
cld
mov
xchg
xchg
ja
sub
lcall
pop
in
fiadds
mov
adc
push
imulb
movsl
cmp
insl
addb
jle
jmp
lcall
cmp
push
dec
cmpsl
filds
cmpsb
scas
cmp
in
in
or
mov
pop
arpl
sti
leave
jne
sbb
cltd
mov
xchg
mov
ljmp
addl
test
aad
inc
xchg
fnsave
jg
add
cmp
or
push
mov
hlt
xchg
gs
decl
and
or
push
dec
or
lcall
call
dec
mov
int
fmuls
and
fstl
jns
sbb
decl
jns
pop
adcl
add
jne
adc
incl
hlt
inc
shl
push
fisubrl
or
xor
jb
gs
ljmp
mov
push
stos
into
pop
mov
aad
in
add
cmp
mov
jg
ror
call
dec
xchg
jno
dec
test
push
push
std
pusha
repz
not
lcall
jle
aaa
mov
clc
xlat
loop
in
sahf
mov
sahf
andnps
cmpsl
ffree
sub
lret
jg
cli
jge
xchg
add
push
fs
ja
testb
lea
mov
test
jnp
pushf
jb
stos
jae
hlt
ds
sub
add
pushl
scas
adc
vminpd
or
movl
decl
ret
jp
and
jb
ror
mov
xchg
std
add
push
stos
iret
pop
fsubs
call
rolb
ljmp
pop
incl
push
shll
mul
xor
xor
out
jg
negb
sub
movsl
and
lock
inc
xor
xor
dec
push
sub
pop
orb
dec
sbb
cld
call
cmp
mov
mov
pop
xchg
dec
cmpsl
jnp
dec
sbb
jg
xchg
movsl
dec
pop
test
push
push
loope
aas
in
mov
jg
sub
out
adc
inc
inc
push
mov
incl
insb
sbb
cmp
push
into
and
icebp
xchg
add
call
push
sahf
mov
sbb
push
pcmpeqd
mov
sarb
ljmp
ret
inc
mov
cltd
inc
shrl
or
pop
fdivrs
mov
incl
add
enter
pop
ret
inc
dec
aad
inc
mov
call
lock
sbb
scas
cmc
mov
mov
add
lcall
sub
ljmp
into
mov
mov
sub
lahf
sbb
mov
call
ljmp
pop
jbe
and
jbe
push
xor
xor
pop
jmp
sub
pop
icebp
lcall
mov
cwtl
lret
xchg
imul
cltd
mov
lds
call
mov
sbb
imul
test
lea
insl
mov
adc
loop
ljmp
lds
push
add
lods
imul
or
sbb
nop
pop
xor
fists
mov
cmp
jne
inc
push
mov
cmpsl
xchg
jo
xlat
cmpl
hlt
call
xchg
inc
add
add
fwait
jg
push
xchg
jnp
pop
popa
cld
mov
push
add
xchg
inc
push
inc
lock
xor
jl
inc
mov
cmp
mov
and
pop
lea
dec
shl
pop
dec
gs
mov
lcall
xor
push
sbb
mov
fst
fldt
mov
jecxz
pop
mov
int3
cmp
jno
xchg
inc
inc
cltd
xor
and
lods
int3
pop
in
insb
stc
mov
mov
mull
aaa
arpl
aaa
sbb
cmp
pop
out
cwtl
call
std
jmp
xchg
add
dec
dec
add
xchg
stos
dec
nop
out
add
fdivrl
loopne
mov
mov
test
lcall
aas
ds
test
dec
dec
cmp
or
pop
shl
or
ljmp
mov
shl
inc
stos
stos
jno
jns
push
ret
adc
fwait
push
enter
pushl
std
mov
aas
jnp
fstpl
arpl
scas
in
out
xor
mov
loope
insb
ljmp
repnz
add
das
dec
ret
xor
into
pop
push
add
mov
sti
cld
adc
test
cld
lcall
xchg
test
pop
lds
in
lahf
or
fcmove
inc
push
js
int3
rcll
decl
lret
adc
rcr
sub
imull
sub
sti
ret
inc
fdivl
into
loop
and
mov
pusha
dec
out
jmp
aaa
push
cmp
je
mov
inc
ljmp
cmp
mov
pop
loopne
cld
sar
pop
cld
lcall
std
jo
adc
aam
sub
cmp
out
or
and
ljmp
into
mov
std
push
pop
hlt
dec
mov
loopne
into
call
xchg
aad
sahf
roll
daa
int
dec
cmp
xchg
ja
fwait
cs
pushl
fwait
clc
add
iret
shrb
popa
sub
add
adc
sbb
out
sbb
call
sbbb
lods
loop
addr16
push
inc
add
mov
lods
and
out
jmp
or
repz
pushf
mov
adc
adc
sub
cwtl
sbb
adc
mov
out
movsl
int
aad
push
mov
icebp
ret
lcall
xor
std
or
sbb
jmp
cld
push
sub
call
sbb
jno
out
push
mov
popa
lds
jge
mov
cli
decl
push
and
insl
inc
mov
pusha
addr16
into
movsl
repz
test
ljmp
ret
cmp
dec
in
or
ljmp
mov
insb
cmp
je
out
sub
mov
xchg
repnz
push
dec
mov
outsl
cli
pushl
push
mov
or
fs
jg
dec
sbb
fwait
decl
adc
test
movsb
in
shlb
adc
fadd
decl
mov
sbb
cltd
mov
movsb
movsl
jb
aam
mov
adc
add
adc
hlt
pop
inc
xchg
out
mov
push
popf
mov
enter
inc
mov
jno
lds
mov
and
sbb
loopne
and
adc
xchg
ud0
cli
jmp
mov
movl
mov
js
rolb
push
pop
decl
inc
mov
in
cmp
sarb
int3
call
call
pop
inc
push
scas
les
pop
xlat
mov
sub
add
repz
lcall
mov
loopne
incl
xchg
xor
js
fsubrl
popa
in
ljmp
push
cmp
mov
mov
rol
outsl
movsl
sub
mov
lods
inc
or
lret
pushf
call
in
push
rorl
sbb
sti
or
xchg
or
lret
cmp
xor
ret
out
add
shrb
adc
mov
mov
fbld
pushl
addr16
xchg
mov
push
shrl
jg
or
mov
push
add
push
pop
fmull
push
add
push
test
test
cli
pop
mov
pop
and
call
adc
dec
test
out
mov
sbb
lock
testb
inc
call
testl
ret
ja
sub
mov
sar
rcr
adc
dec
mov
fcomip
loope
cmpsb
mov
jle
mov
xchg
sub
nop
push
clc
mov
sub
push
jmp
sub
xlat
or
les
stos
inc
push
lcall
pop
jmp
movsb
or
rcr
jmp
jne
adcb
dec
mov
or
ljmp
mull
pop
mov
push
mov
cmp
mov
add
push
cmc
mov
call
and
ret
inc
adc
jl
xchg
dec
mov
dec
pushl
inc
jp
push
pop
xor
test
add
std
movsb
cld
divl
mov
push
out
clc
pop
add
xor
jbe
rorl
pushf
idivl
lret
lcall
pop
test
js
push
int
iret
movsl
push
or
mov
outsb
fnstenv
ret
inc
clc
aaa
or
cmp
ljmp
into
shrl
adc
add
mov
push
dec
push
ret
scas
pop
mov
mov
cmp
lods
ss
jmp
add
sub
jp
in
rolb
mov
or
push
mov
fmuls
xor
dec
inc
mov
pop
or
jge
sbb
call
fistl
xor
mov
add
faddl
xchg
aad
je
jecxz
add
push
subb
xchg
call
or
adc
test
sets
xor
icebp
jg
orb
in
pop
jle
or
push
jmp
and
push
loopne
lds
jae
mov
ret
sbb
xor
ds
dec
adc
mov
shll
das
sbb
xchg
mov
das
jne
dec
ret
lahf
add
xor
fnstsw
dec
cmp
repnz
lds
fisubrs
and
test
ljmp
sub
inc
sub
pop
jl
xor
les
outsl
jae,pn
mov
cmp
fdivrs
leave
mov
fisubs
int3
scas
sbb
adc
ds
mov
push
lods
add
shrl
cmp
inc
call
jns
inc
mov
outsb
rcll
mov
cmp
sub
arpl
push
in
inc
fstpt
shlb
es
dec
mov
stos
fnstenv
jmp
dec
pop
add
push
call
lds
sbb
mov
jno
int
js
sti
jecxz
xor
lods
sbb
stos
cmc
ficomps
mov
mov
es
incl
out
stos
nop
cltd
fmuls
andl
sub
ljmp
stos
inc
push
cmp
iret
out
std
jl
inc
fwait
pop
fwait
je
push
roll
xchg
xchg
push
add
pop
inc
std
pop
mov
or
stos
cwtl
push
nop
or
or
jle
mov
cmp
aad
mov
lea
pop
clc
and
mov
sub
mov
jmp
out
jbe
push
int3
pop
lock
incl
xchg
shrl
shll
xor
adc
shll
and
cli
mov
sbb
adc
jb
aam
je
ficompl
lret
sub
std
decl
jl
mov
outsb
sub
mov
mov
xorl
sbb
push
pop
xchg
adc
xor
rorb
out
jae
dec
shlb
pop
inc
dec
jmp
out
adcb
sub
into
sbb
call
sub
cmp
sti
enter
jbe
sub
sbb
stc
sahf
insb
lret
mov
sbb
scas
or
ds
ret
movsb
sqrtps
push
insl
test
xchg
fcmovu
mov
xor
movsl
jl
sbb
fstl
xor
rclb
cmp
cltd
sbb
cmpsb
jl
push
icebp
sbb
xchg
rcrb
jmp
jo
stos
sbb
mov
and
dec
dec
js
push
and
inc
and
lcall
insb
mov
scas
stc
into
in
or
dec
or
fwait
adc
in
ljmp
scas
lock
in
mov
int3
xchg
loopne
jecxz
pop
push
inc
dec
fdivl
pop
gs
lcall
movsl
xchg
jmp
or
fnstcw
xchg
js
adc
int
xor
sub
push
lahf
mov
jbe
mov
roll
push
add
xchg
sub
imul
cmpsl
lcall
mov
sbbb
mov
jle
mov
sbbb
fsubr
lds
popa
sbbl
fxch
cmc
and
xor
sbb
test
push
xchg
pop
adc
and
in
dec
subb
cli
jbe
and
mov
test
decl
dec
sub
xchg
xor
outsb
ljmp
dec
inc
pop
mov
adc
push
push
sahf
das
pop
inc
mov
sbb
mov
and
je
mov
in
jmp
cli
and
loopne
add
ret
lret
ljmp
loope
or
adc
loop
jge
or
sub
cld
mov
incl
or
jno
mov
mov
xchg
fcmovne
push
adc
jmp
cwtl
inc
lret
dec
add
shlb
inc
xchg
dec
dec
jne
enter
push
adc
mov
or
push
in
mov
shll
cli
outsl
nop
lock
cmp
xor
mov
loope
out
and
adc
gs
xor
rolb
mov
inc
dec
call
sub
inc
lcall
cmc
sub
push
jns
jp
aaa
sub
push
xorb
jg
test
into
loopne
in
or
int
test
daa
test
cltd
xchg
dec
call
mov
xor
sar
jg
cmpl
add
inc
insb
ret
ret
xchg
sahf
push
lods
and
movsb
scas
ret
mov
decl
pop
and
jg
push
fbld
pop
inc
add
outsl
mov
shrb
push
shrb
push
jmp
into
movsb
lock
inc
jmp
push
lea
jg
call
sub
mov
mov
popf
fucom
popa
aaa
adc
lea
ljmp
repz
jl
pop
cld
call
lahf
or
dec
neg
or
inc
arpl
mov
dec
push
scas
sub
pop
dec
dec
in
aam
sbb
cwtl
int3
mov
icebp
aad
adc
push
loope
push
aam
xor
out
filds
sbb
hlt
mov
mov
inc
inc
mov
ljmp
sub
lea
addr16
cmp
mov
test
add
push
push
cmpsb
call
mov
loopne
add
in
fcmovbe
lahf
es
loop
call
cltd
mov
fisttps
fwait
or
sbb
bound
push
push
adc
cltd
adc
mov
inc
jecxz
hlt
mov
cs
incl
in
lahf
sbb
arpl
mov
sahf
ficompl
sub
in
mov
push
jno
jnp
mov
inc
hlt
arpl
push
or
mov
mov
dec
mov
icebp
xor
rcrl
fsubs
mov
data16
xor
adcl
inc
fisubrs
jbe
arpl
inc
add
cld
jmp
frstor
cmp
xchg
xor
or
aam
cmc
pop
movl
jmp
mov
lcall
rcrl
sbb
pop
aas
sahf
sub
pop
ja
cmp
jb
int3
pop
scas
lcall
hlt
cmp
cwtl
cld
inc
in
insl
xchg
mov
pop
adc
gs
int
insl
call
imul
aaa
add
push
dec
fldcw
addb
lret
add
or
out
xchg
mov
cld
mov
cmc
lea
pushf
pop
xchg
xchg
addr16
and
ljmp
fcoms
mov
cwtl
and
shlb
jmp
or
jg
mov
dec
inc
pop
subl
popf
mov
movsl
jne
lcall
mov
out
ja
dec
mov
jle
lret
mov
cmovl
add
fcomi
rorl
mov
jg
dec
ja
jmp
pop
lds
cmpsl
push
leave
fimuls
push
adc
loopne
lret
les
mov
and
call
lea
stos
push
mov
out
push
mov
add
jg
and
and
mov
lods
sbb
ficoml
into
ljmp
addb
fsubs
scas
add
xchg
lret
fistps
lds
rorb
fwait
and
jmp
cmpsb
and
je
sub
sahf
ss
outsb
pop
lgs
fstpt
xor
bound
cmp
in
push
and
add
add
notl
sbb
in
loope
mov
cmp
shlb
mov
cmc
mov
push
movsl
xor
mov
mov
cmp
xor
cmp
xor
sub
jbe
sub
call
sbb
lcall
mov
test
fists
lret
inc
sti
ficoms
repnz
add
mov
das
xor
dec
mov
ret
xchg
pop
shr
jecxz
pop
imul
out
sub
push
popf
xchg
fcoms
lcall
fistl
xchg
hlt
jmp
js
test
dec
xor
xchg
clc
jle
in
subl
and
add
xchg
xor
int3
xchg
leave
jp
mov
ret
mov
lret
dec
gs
jno
nop
add
ss
and
daa
fimuls
icebp
adc
repnz
lcall
dec
testl
mov
hlt
aam
stos
xor
aad
mov
add
enter
call
add
std
ljmp
pop
push
je
test
jg
mov
shll
cmp
arpl
repz
pop
mov
mov
jmp
xor
int
xchg
add
lds
mov
add
jne
xchg
scas
xor
lea
dec
inc
int3
outsl
cld
pushl
sbb
push
loop
add
jecxz
push
gs
jmp
xor
lock
sub
cltd
call
lcall
mov
sub
inc
push
mov
adc
nop
inc
addl
and
rcrb
adcb
cs
bound
js
push
out
pushf
movb
sti
adc
aad
adc
cld
push
fsubrs
cs
pushl
push
orb
in
cmp
jb
imul
jmp
lahf
jbe
shr
ja
pop
mov
cltd
push
aaa
sti
sbb
cmovno
call
push
insl
and
pop
and
frstor
add
int
pushf
int
and
nop
fnstsw
xchg
mov
push
nop
mov
jbe
push
setae
jmp
aam
push
int3
cmp
test
lea
gs
ljmp
mov
js
lret
cmp
addl
sbb
mov
scas
ljmp
sti
jle
xor
jg
fst
xchg
dec
in
mov
dec
in
ret
aad
incl
push
inc
inc
adc
mov
dec
sub
jg
repnz
push
in
fsts
fimuls
test
add
loop
pop
sbb
ret
xlat
fmul
ljmp
xchg
pushf
adc
adc
stos
push
push
sbb
fstps
lcall
dec
adc
mov
shlb
gs
inc
lds
inc
movsb
adc
mov
lcall
mov
adc
aad
movsb
push
mov
dec
xchg
xchg
jg
scas
cmc
jno
pushf
add
call
insb
add
mov
pusha
cmpsl
rcrb
adc
mov
out
push
cmp
add
fs
jg
sub
pusha
jle
sarb
xchg
mov
decl
loop
ficomps
cmp
pop
push
inc
mov
xor
call
inc
mov
nop
insl
jecxz
jp
in
sub
ret
xchg
daa
add
loope
xlat
mov
call
imul
cld
add
or
enter
push
das
pop
shrl
cld
inc
mov
cmp
xor
or
nopl
nop
sbb
add
jmp
movsb
cmp
sti
js
fs
out
dec
fimull
cmp
fucomi
mov
aam
push
xor
mov
in
mov
repz
add
dec
leave
pop
xchg
add
push
jecxz
lods
stc
mov
repz
ljmp
inc
test
std
aas
sbb
jmp
test
jl
das
in
jle
mulb
jo
jge
leave
add
ljmp
jge
or
mov
lods
sahf
imul
out
jmp
adc
pop
and
pop
cmp
push
xchg
xor
sti
sub
leave
xor
das
fildll
mov
inc
ds
pop
movsb
mov
ljmp
mov
pop
and
loope
sbb
sar
stc
cwtl
hlt
imul
in
mov
sahf
cwtl
mov
dec
idiv
inc
loopne
push
popa
jp
repz
incl
scas
movsb
mov
cmp
push
jne
jg
mov
mov
mov
and
dec
fdiv
push
ljmp
les
incl
sbb
xchg
dec
inc
mov
xor
lods
insl
cmp
clc
lret
rcrl
cwtl
fldpi
or
and
and
out
in
adc
cli
insl
mov
pushl
pop
shl
push
cld
mov
into
pop
jge
loope
ljmp
push
and
xchg
lods
mov
adcl
pushl
jecxz
cmpb
mov
mov
repz
hlt
in
push
pop
or
sahf
inc
repnz
ss
js
jg
pushl
mov
xorb
ret
and
out
dec
int
out
jmp
cmp
push
pushf
mov
mov
push
jmp
loopne
inc
add
inc
adc
ss
push
xor
dec
pop
mov
mov
mov
test
lds
pop
inc
in
mov
data16
lods
lds
sub
aas
sahf
rol
roll
xor
fcomip
insl
stc
and
movsl
aad
bound
lods
lods
mov
cld
faddl
iret
sub
incl
adc
cs
lret
scas
sarl
and
adc
or
incl
push
mov
scas
negl
add
addb
rolb
lods
pop
imul
lea
lock
lahf
pop
sahf
mov
xchg
push
je
lcall
pop
sbb
and
fdivr
jle
adc
adc
call
rcrb
es
imul
and
aas
lret
cmp
jmp
decl
cltd
cmc
cmp
dec
dec
pop
enter
lret
jb
sbb
pusha
add
add
mov
sete
loop
add
cli
sbb
es
jmp
shll
and
test
mov
movsb
xchg
call
test
movsb
jmp
incl
push
inc
das
mov
inc
sbb
mov
out
fstps
fimuls
dec
add
inc
dec
decl
das
inc
mov
in
ljmp
cs
shr
xor
int
and
ret
sar
decl
js
popf
cld
mov
mov
cmp
pushl
stos
lock
dec
ret
ds
lcall
iret
insb
mov
add
cmp
inc
out
aaa
push
call
decl
hlt
aad
es
call
mov
sbb
sti
mov
or
adc
add
xchg
ja
jo
jb
xchg
lret
adc
ficompl
sub
jg
inc
cld
adc
xchg
cmp
mov
fmuls
es
addl
sub
pop
xchg
fnstenv
and
rorb
pop
fs
ficoml
xor
fld
pop
jb
pop
push
icebp
jge,pn
ret
mov
mov
outsl
clc
push
xchg
dec
arpl
add
pop
movsl
icebp
xchg
cltd
movsb
jg
push
leave
adc
int
or
jg
lret
cmp
mov
push
lahf
sarb
mov
lods
andb
cmp
or
add
inc
decl
push
ret
mov
sub
pusha
cmp
xchg
filds
gs
ljmp
clc
push
push
ja
movsl
into
das
cmc
xor
les
mov
jecxz
push
sbb
dec
mov
or
fbld
cmp
pop
outsl
or
and
scas
into
and
cmovo
ljmp
mov
lods
jns
aas
mov
ret
sbb
jecxz
mov
cmp
emms
cwtl
mov
into
out
cmp
mov
and
xchg
jl
in
in
lea
pop
lods
fst
mov
je
subb
cld
jle
inc
inc
cmp
jl
test
js
in
adc
cmp
adc
ljmp
push
and
ss
pop
sub
es
mov
fstpt
rolb
fwait
dec
lcall
repz
mov
push
mov
pop
shlb
mov
sahf
sbb
loop
or
ljmp
rep
loopne
sbb
flds
decb
rcl
jmp
rorb
mov
xor
insl
lock
inc
dec
and
leave
add
cmp
dec
inc
fmuls
insb
test
pop
pusha
cltd
push
push
int3
lret
mov
insb
jle
das
cmp
incl
stos
xchg
dec
and
cmp
icebp
adc
cmp
push
mov
jo
cmp
cld
iret
add
hlt
ret
sub
ljmp
mov
inc
sbb
mov
aas
ljmp
shrb
xor
jnp
into
cmp
int
add
jp
or
jl
imul
loop
lcall
mov
pop
lock
cmc
sub
mov
and
xchg
mov
jmp
das
sti
scas
xor
xchg
loope
pushf
aam
mov
cmp
iret
ds
ja
add
mov
and
dec
inc
jmp
int3
jmp
stos
and
outsl
out
scas
sbb
or
orb
sub
jmp
lods
mov
add
leave
ror
int3
sub
loop
leave
mov
leave
xor
or
cmc
add
js
fnsave
ret
lcall
mov
les
ret
ret
add
or
push
dec
xchg
test
jmp
adc
sub
xchg
lods
cmp
stos
add
add
lock
jecxz
movsl
incl
cmpsb
stos
add
dec
jmp
mov
stc
push
sbb
push
or
incl
sub
sbb
outsb
leave
aam
add
negb
or
sbb
mov
in
mov
and
inc
sub
pushl
mov
stos
test
jecxz
dec
cli
lea
inc
mov
sti
ljmp
dec
add
in
ss
dec
nop
mov
adc
ljmp
pusha
mov
mov
neg
inc
push
pusha
and
cmp
dec
jecxz
dec
insb
sbb
cmc
aad
jns
in
movsb
sub
pop
push
xchg
in
lea
sub
decl
or
xchg
jg
or
lret
js
jl
std
mov
test
pop
cmp
nop
daa
inc
popf
mov
out
cld
mov
push
aad
out
mov
mov
or
test
sbb
push
inc
ret
roll
cmp
test
push
repz
inc
pusha
mov
jns
dec
xor
pop
add
mov
in
dec
mov
outsl
ljmp
mov
inc
inc
and
mov
aam
and
xor
jecxz
lahf
orl
xchg
and
movsb
int3
mov
push
jg
xlat
jo
cmp
rcll
loop
dec
fcompp
cmp
sub
push
or
push
shlb
in
or
inc
sbb
mov
pop
adc
jmp
xchg
movl
or
rcl
in
and
mov
stos
lcall
ret
adc
jge
adc
std
cmp
cmp
push
inc
sbb
mov
repnz
adc
dec
je
dec
rcr
je
into
leave
pusha
sbb
jg
mov
iret
dec
sarl
stc
dec
inc
xchg
test
icebp
cld
in
push
into
sbb
in
and
mov
ljmp
pop
or
lcall
js
sarb
push
jbe
mov
adc
scas
in
push
loope
es
shlb
adc
std
or
adc
jmp
lods
mov
in
add
test
mov
push
stos
pop
clc
mov
call
ds
push
cmp
in
jno
pushf
mov
popa
or
pop
cli
popf
mov
sti
dec
jmp
and
iret
xor
pop
lahf
xor
test
aad
push
push
fldl
jmp
inc
push
sub
pop
mov
mov
pop
insb
ret
hlt
xchg
cmp
inc
call
push
mov
cwtd
lahf
scas
add
popf
and
sub
std
iret
cmp
decl
jp
push
xchg
push
dec
cmp
rol
scas
and
enter
jmp
lahf
loopne
jne
movsl
dec
xchg
mov
dec
or
pop
sbb
sub
lods
popf
int
mov
cld
pop
loopne,pt
outsl
cwtl
pop
andl
fsubrp
insl
jg
test
aas
sbb
cmp
xchg
aam
jbe
jo
incb
pop
lds
sub
pop
xchg
cmp
lea
inc
push
and
pop
stos
lods
nop
inc
leave
mov
inc
decl
test
inc
repnz
and
out
and
add
movsb
sbb
lods
jl
sub
icebp
push
sti
push
sbb
cld
outsl
in
add
pop
jmp
loope
lcall
push
mov
and
arpl
repnz
and
xrelease
mov
mov
pop
xchg
xchg
jp
popf
loopne
xchg
je
dec
stc
sbb
lods
adc
mov
mov
dec
or
inc
aam
push
cmp
gs
int
stos
divl
addr16
idiv
ds
cmp
ds
lock
mov
and
mov
mov
movsl
adc
xchg
data16
fcmovnbe
scas
pop
inc
sub
mov
ret
fstl
push
cmp
push
clc
xorl
push
inc
mov
xchg
xor
dec
mov
or
adc
fbstp
add
cmc
stos
inc
add
jg
rorb
dec
dec
adc
adc
jbe
pop
loope
lods
adc
jbe
pop
adc
aad
or
aaa
roll
mov
jl
pop
ds
pushl
push
inc
jnp
mov
pop
rcrb
sub
test
cmp
sub
insb
leave
jg
lcall
pop
test
sub
fstl
imul
sbb
cmp
shrl
lret
shlb
ljmp
push
mov
stc
or
in
mov
mov
and
cmc
int
js
sti
pop
push
push
mov
sbbb
xchg
mov
jae
out
stc
jnp
push
and
test
xor
out
incl
movsb
mov
dec
pop
cmp
cs
jno
mov
in
xor
fisttpll
arpl
cmp
pushl
mov
arpl
jo
sub
xchg
and
mov
into
repnz
rcrb
pushl
daa
or
cli
add
int3
pop
jle
cmp
idivl
mov
sbb
lcall
shlb
imul
mov
dec
loop
push
adc
call
adc
xchg
clc
add
xchg
shll
push
pop
cltd
sbb
mov
adc
add
cmp
lret
mov
sbb
mov
call
xchg
pusha
inc
dec
aas
or
cmp
adc
cmp
jno
xchg
add
fistps
mov
ret
xlat
cmp
adc
sub
movsl
lcall
cwtl
mov
sbb
pop
xor
xor
jo
outsl
and
dec
movsb
aas
jmp
cwtl
clc
pop
ljmp
rorb
or
dec
orb
and
clc
hlt
popf
insb
and
lcall
mov
popf
xchg
mov
or
mov
sti
hlt
mov
lcall
xchg
xor
imul
sub
lcall
cmc
shlb
mov
pop
fs
cmpsl
pushf
dec
popf
jbe
jg
imul
inc
gs
push
cmpsb
pop
xchg
je
aaa
sub
sub
cmpsl
in
dec
sub
push
dec
in
xorb
pushl
test
mov
or
jge,pn
pop
mov
ljmp
push
sbb
mov
int
and
jg
xchg
or
scas
cmp
pushl
lret
pop
push
push
scas
repz
push
jno
mov
rclb
pop
jne
pop
loopne
imul
push
sti
or
pop
sub
mov
in
jb
mov
jmp
add
xor
test
dec
or
daa
sbb
mov
inc
xchg
stc
lcall
add
es
ja
insl
adc
popf
sbb
push
jg
ret
ret
mov
inc
icebp
rcrl
adcl
aad
push
cld
and
cmp
jle
pushl
cli
repnz
int
jecxz
push
cwtl
mov
cli
out
mov
sbb
xor
dec
stos
lcall
sbb
add
lret
xchg
inc
lods
ljmp
cwtl
loopne
mov
idiv
call
ficompl
or
and
leave
lcall
sbb
sub
mov
inc
mov
ljmp
inc
rorl
outsl
fbld
sub
adc
push
aam
ret
lahf
pop
out
xchg
lret
fcomip
adc
xlat
xchg
imul
divb
decl
popa
sbb
stos
adc
call
dec
xor
ja
add
in
push
movsb
aaa
push
movsb
and
decl
fistpll
scas
add
test
ljmp
sub
rorb
pop
filds
mov
mov
cs
ljmp
jmp
cltd
mov
mov
sbb
js
stos
lret
xor
int
adc
inc
mov
hlt
test
push
jo
mov
dec
jae
notl
mov
incl
jg
push
xor
gs
sbb
add
loopne
das
sub
add
nop
lcall
out
call
ljmp
fldl
xor
out
insb
pop
and
fdiv
and
jecxz
stos
imulb
repz
and
jp
cmp
push
out
mov
fiadds
and
sub
out
xchg
fdivl
jae
xor
shll
push
call
subl
and
mov
cwtl
lock
outsb
mov
or
fisttpl
int3
wrmsr
jmp
mov
nop
gs
lea
cmp
lcall
inc
lret
scas
test
push
xchg
aad
mov
pop
pop
jb
scas
inc
cmp
lret
cwtl
dec
idivl
call
pop
sbb
fsub
adc
jno
subb
es
ret
jnp
adc
cmp
mov
sub
ret
xchg
push
frstor
sar
incl
cmc
jmp
test
pop
arpl
mov
cmp
dec
push
fwait
or
decl
push
lret
cwtl
in
xor
xchg
jo
decl
lock
ljmp
fucomp
ds
fistps
sbb
popa
les
lcall
cli
inc
cmp
hlt
les
push
and
ljmp
lahf
mov
dec
imul
addb
xor
xchg
into
ljmp
imul
pop
ja
enter
lods
and
ljmp
sub
or
ret
mov
fsubrs
aad
in
cmp
lcall
call
ljmp
sti
cld
mov
cmp
jmp
cmpsb
or
adc
fiaddl
mov
in
mov
repnz
mov
dec
lea
out
dec
sub
rcrl
fwait
les
xor
shll
pop
cld
mov
jb
inc
or
mov
sbb
scas
les
jo
sub
std
faddp
mov
cmc
cmp
cmpl
mov
xchg
hlt
scas
push
ljmp
jmp
loopne
in
pop
ds
arpl
and
cs
icebp
jg
mov
mov
rclb
mov
xor
ss
ljmp
jmp
lahf
mov
mov
xor
mov
add
mov
arpl
sbbl
xchg
test
lret
or
iret
push
and
mov
hlt
sub
jns
cmpsb
jmp
incl
popa
lret
dec
and
clc
push
fwait
and
imul
dec
negb
and
cmpsb
ret
push
adc
enter
lods
outsb
data16
mov
inc
ljmp
les
push
sub
stos
or
stos
add
sub
imul
adc
mov
fisttpl
inc
lock
mov
push
push
xchg
cld
xchg
and
ss
dec
or
call
cld
int
xor
pop
pop
lret
mov
adcb
add
decl
push
lea
push
mov
add
mov
jns
or
iret
mov
sti
jmp
fimull
and
cmp
dec
bt
cmp
insl
dec
sbb
add
imul
push
lea
popf
outsb
inc
sbb
jmp
cltd
xor
or
jnp
cmp
mov
fwait
pop
cmp
enter
xchg
cltd
addr16
ret
cli
pushl
cmp
sbb
jb
sub
jmp
mov
ljmp
popl
xchg
js
jg
mov
jo
cltd
lds
add
test
xchg
jmp
inc
xor
jle
xchg
fwait
loop
adc
decl
inc
xor
push
data16
dec
xchg
mov
add
in
adc
repz
xlat
and
jmp
adc
lret
cmp
scas
cmp
lods
out
push
das
outsb
sbb
xor
call
sub
ljmp
mov
jb
movsb
xor
jg
and
js
pop
imul
inc
mov
sub
sbbb
sbb
ja
jg
lea
loopne
jg
fs
sbbl
mov
fldenv
jecxz
cmpsb
int
pushf
mov
mov
pop
in
sbb
mov
dec
mov
push
movsb
mov
mov
jmp
dec
fildll
call
into
repz
scas
cmp
lods
aad
add
mov
jg
adcb
ja
les
in
mov
or
mov
js
lods
mov
loop
mov
sahf
cs
jge
push
sbb
fdivrl
mov
out
cli
xor
cmpsl
jp
test
jns
mov
lock
sub
add
decl
pop
shrl
dec
xchg
jle
mulb
aam
or
mov
scas
andb
lcall
fimull
pop
sub
and
push
ret
inc
mov
ljmp
ljmp
inc
cmp
insb
loop
push
inc
outsb
test
push
mov
aam
ljmp
mov
and
outsl
mov
cs
inc
sbb
inc
test
ljmp
or
xchg
leave
pop
enter
ret
push
and
test
xchg
or
or
loope
in
adc
ds
popa
es
or
setl
lcall
clc
mov
push
testb
inc
out
adc
cltd
mov
incb
lcall
xor
sub
repnz
pop
cltd
push
ret
ljmp
jae
mov
imul
push
jno
adc
lret
call
mov
xor
sbb
fbld
popa
xchg
into
cwtl
cld
mov
jae
add
cld
lcall
push
dec
sahf
jbe
jno
ja
pop
rclb
mov
adc
mov
fsts
mov
iret
lods
loop
sbb
and
add
adcl
add
out
inc
insb
sub
or
lock
call
rorb
in
aad
inc
or
or
push
loopne
ljmp
iret
mov
shrb
lods
fstl
xchg
in
cmpsb
cmp
sbb
call
sbb
inc
shl
jnp
cmp
je
sbb
test
push
call
xchg
cmp
enter
iret
ja
sub
outsl
xchg
mov
call
sub
je
xor
mov
aam
out
inc
jo
adc
push
and
cmp
nop
pop
xorb
orl
dec
push
push
sbb
in
add
std
cmp
imul
mov
dec
sti
add
js
imul
call
lea
stc
js
mov
jp
cld
xor
call
loope
es
repz
call
test
hlt
jmp
or
out
mov
sbb
jb
cmp
and
push
or
xlat
ret
lcall
pushl
cld
pop
out
push
add
out
push
je
and
test
pop
add
loopne
aaa
sbb
sub
add
jb
lret
inc
out
movl
stc
orb
cmc
add
sub
pop
in
shll
jnp
xchg
decl
push
adcb
pop
lret
sub
xor
mov
pop
cmc
out
rorl
incl
imul
mov
ror
scas
scas
dec
aad
lods
jne
popa
dec
fsubl
lcall
xor
adc
cli
sbb
mov
mov
or
ret
lods
mov
int
xor
jne
xchg
dec
insl
dec
repnz
or
ljmp
ret
sbbl
leave
push
sub
cld
mulb
pop
inc
mov
pop
cmp
in
pop
sbb
jl
leave
les
dec
push
mov
pop
pop
fcomip
jge
xor
daa
leave
dec
sti
fs
lea
inc
mov
pop
incl
adc
sub
xchg
add
push
sbb
call
movsw
sub
pop
fcomip
fwait
and
inc
push
dec
leave
dec
mov
fistps
sub
jmp
dec
and
cmp
lcall
leave
jg
and
pop
sub
in
popa
add
mov
sbb
or
or
mov
ja
cs
jecxz
ljmp
insl
adc
push
push
mov
xchg
mov
aam
out
mov
cmp
lret
sarl
dec
leave
mov
push
mov
fcoml
xchg
orb
pop
test
movsb
ror
mov
cmp
call
push
scas
jmp
or
data16
dec
cltd
out
and
hlt
imul
decl
movsl
inc
mov
out
out
jp
lds
bound
inc
jmp
dec
and
ret
push
mov
fdivl
in
in
dec
rorl
rcrb
pop
push
int
lds
xlat
pop
cmc
aam
negb
xor
sub
mov
ljmp
mov
andb
and
dec
sbb
ljmp
sar
inc
mov
xchg
pop
int
clc
je
jmp
inc
ficoms
test
pushl
add
inc
or
xchg
mov
xlat
enter
xlat
dec
scas
mov
pushf
das
int3
nop
push
push
hlt
pushl
mov
xlat
mov
test
ret
out
cmp
ret
cmp
das
adc
pop
xor
and
cmpsb
pop
adc
inc
cmp
fcomip
push
shlb
dec
lret
out
lock
lock
push
stos
mov
mov
ljmp
adc
push
adc
cltd
mov
scas
pushf
ljmp
in
cmp
sbb
dec
test
mov
jne
mov
xor
add
cs
add
add
adc
xor
andb
incl
sbb
jbe
dec
ret
add
dec
xchg
in
mov
xorb
push
mov
pushl
call
sub
mov
sbb
add
test
pushl
sub
add
jns
hlt
jne
inc
les
hlt
mov
jne
orps
cld
push
adc
adc
daa
loopne
or
popf
scas
js
test
cli
sub
out
adc
inc
faddl
pop
loop
scas
clc
mov
adc
decb
push
inc
cmpsb
adc
mov
ljmp
inc
sbb
push
dec
xchg
stos
sbb
jne
loopne
dec
insb
in
js
testl
inc
inc
fld
sbb
loop
pop
aad
mov
adc
pop
loop
ljmp
mull
in
push
popf
push
divl
fs
jecxz
test
cmp
shlb
mov
jbe
mov
adc
jnp
pushl
jp
out
pavgw
std
sahf
cmpb
call
jp
into
add
mov
decl
mov
xchg
and
adc
mov
push
push
cmp
decl
test
js
fimull
pusha
jb
push
add
mov
or
mov
cld
pop
lock
out
push
test
lea
sbb
out
xlat
call
out
stos
lea
jmp
lret
enter
loopne
jmp
add
in
cltd
add
cwtl
xor
mov
stc
xor
rcr
in
lahf
nop
jg
scas
mov
fs
shll
stos
push
mov
rcr
dec
adc
cmp
jae
loop
sbb
mov
inc
ljmp
movsl
push
repz
sahf
test
adc
out
sub
scas
mov
mov
jb
add
mov
cmpsb
outsb
repnz
or
xchg
popa
sub
cld
mov
jp
test
cmp
adc
xor
push
xchg
lea
repnz
dec
mov
andb
push
adc
ljmp
push
xor
fld
test
lock
push
and
decl
mov
pop
dec
mov
xchg
clc
pop
aas
les
call
mov
jmp
mov
les
test
jb
stos
jl
lcall
pop
scas
loopne
and
xchg
and
add
mov
fisttps
shll
lcall
fildl
fmull
es
mov
pop
cmp
push
pushf
sar
lcall
cltd
dec
dec
dec
cmp
std
add
mov
sub
mov
pushl
push
gs
fwait
out
or
cwtl
sbb
dec
push
xchg
mov
call
inc
enter
mov
je
pushf
pusha
je
cmc
lret
sbb
mov
int3
adc
jg
call
out
mov
xchg
ret
push
xchg
dec
or
gs
push
lcall
ljmp
jb
sub
fbstp
mov
ja
hlt
inc
in
pop
pop
loopne
add
cmp
xchg
fbld
sub
leave
cs
movsl
mov
mov
insl
push
lods
dec
fldenv
lock
jae
mov
add
inc
imul
adc
jnp
xrelease
aas
pop
cmpsl
xor
movsl
mov
aas
sahf
leave
jecxz
test
das
jp
imul
jnp
stos
and
push
mov
adc
pop
jo
js
test
adc
out
adc
call
cld
in
and
jg
xchg
fmull
push
scas
jle
aaa
mov
jnp
mov
xor
arpl
sbb
lcall
sbb
sub
cmc
adc
xchg
stos
rorl
jmp
inc
lret
nop
outsl
push
mov
push
in
sub
dec
push
dec
std
leave
mov
out
fs
icebp
jg
mov
mov
fs
xchg
pushl
cld
decl
idivb
fstl
fldt
cld
xchg
jae
and
shll
arpl
repz
out
imul
add
jb
fmuls
jecxz
stos
jne
xchg
enter
xor
push
mov
mov
pusha
jae
out
outsb
pop
lds
leave
jae
mov
popl
in
mov
incl
mov
sbb
outsb
aad
jae
mov
outsl
and
les
fcmovu
addr16
adc
ljmp
addb
and
push
push
fwait
les
push
and
dec
mul
dec
push
fs
pop
imul
les
lret
daa
outsb
test
and
outsl
jecxz
or
incl
nop
outsb
sub
data16
or
popa
cld
jg
pop
es
imul
mov
fbstp
inc
cwtl
jg
xchg
mov
cmpsl
inc
aad
mov
out
add
adc
xor
mov
ljmp
or
mov
mov
fwait
pushl
xchg
pop
and
stos
lret
inc
and
cmp
jno
pushl
out
loopne
cltd
ljmp
js
pop
xlat
sarb
dec
xchg
push
call
lcall
decb
iret
in
dec
arpl
jnp
xlat
test
ss
enter
ret
das
shrb
daa
jmp
int3
popf
cmc
cltd
ret
push
dec
mov
mov
jl
ret
leave
nop
or
lods
bound
leave
pusha
and
nop
mov
sub
ljmp
xchg
lret
xchg
inc
xchg
test
dec
lock
repz
shll
data16
jg
xchg
lods
push
ret
mov
incl
xchg
ss
mov
cmp
es
and
jmp
mov
jmp
or
lret
mov
jnp
push
push
iret
xchg
jge
cltd
jno
es
ljmp
incl
sbb
xchg
sub
sbb
lods
outsb
loop
mov
insb
and
incl
lea
xchg
mov
mov
les
inc
cmp
ljmp
pusha
aad
lds
bswap
inc
js
lret
outsl
outsl
das
scas
bound
jb
cmp
icebp
imul
jae
inc
jno
inc
pop
sti
icebp
xchg
push
mov
inc
pop
pop
mov
das
cmp
test
dec
ljmp
daa
outsl
imul
ja
dec
mov
jmp
or
push
jp
mov
loope
outsl
sub
jp
xor
mov
rcll
pcmpgtd
aas
popf
dec
inc
and
or
push
mov
imul
shlb
es
fisubrs
pushf
mov
dec
data16
lock
jo
nop
bound
imul
outsb
insb
outsl
inc
in
xchg
and
stos
out
ret
sbb
das
imulb
cli
stos
sub
lret
xchg
lock
xchg
jmp
dec
push
mov
movsb
ja
outsl
je
pusha
sbb
jl
aas
or
xlat
xchg
decl
fcmovnbe
scas
mov
mov
loopne
outsl
mov
fdivp
gs
jmp
out
jae
lods
mov
outsb
outsl
int3
call
lods
or
pop
sbb
lea
gs
pushl
sbb
ret
sti
xor
imul
mov
je
sbb
out
out
jnp
cmp
inc
inc
jge
out
shrl
inc
popa
mov
inc
je
mov
popf
ret
loope
dec
sti
decl
mov
rcrl
in
mov
jg
ret
fwait
das
stos
fildll
push
out
inc
xor
cld
or
lahf
test
inc
lahf
sbb
fbstp
mov
in
jo
adc
xchg
mov
dec
cmp
xchg
mov
fsubrs
mov
jne
add
push
std
in
and
mov
adc
push
xchg
data16
mov
pop
rol
xchg
sub
jmp
inc
push
std
outsl
push
jbe
cmp
nop
sahf
jae
fsubrp
out
out
add
mov
js
int3
fnstenv
sbb
pop
addl
mov
icebp
lcall
icebp
mov
das
push
jmp
arpl
lahf
incl
pusha
out
jbe
add
jp
sahf
or
lret
aaa
lcall
sbb
imul
or
push
push
lcall
and
enter
sti
mov
cmp
fs
aad
mov
inc
cmp
dec
cltd
into
jecxz
mov
sub
movsl
aaa
in
in
ja
or
cmp
mov
push
mov
ret
inc
in
dec
jmp
add
push
fidivrl
ret
test
inc
stos
mov
xor
cmp
cmpsl
ret
mov
lds
movsb
inc
and
rcll
mov
push
add
pop
cs
inc
iret
mov
decl
jg
shl
pusha
js
mov
repz
lea
and
sbbb
cmc
loopne
outsl
cli
ljmp
lods
out
and
mov
xor
test
jnp
pop
int3
pop
movups
out
xor
call
decl
repnz
mov
mov
dec
pop
loope
aam
icebp
popf
adc
in
shrl
outsl
dec
icebp
ljmp
ret
int3
es
mov
inc
mov
mov
arpl
push
mov
fcomip
mov
sbb
out
scas
jmp
divl
sbb
rorb
inc
ds
mov
lock
hlt
xor
lods
add
inc
cwtl
cltd
cwtl
or
mov
cmp
sahf
outsl
clc
dec
fdivs
iret
mov
cmp
dec
fidivrl
fildl
sub
sbb
dec
mov
pop
daa
sub
hlt
inc
into
testb
add
jno
add
lcall
push
shl
xor
inc
jbe
and
jns
mov
mov
jne
ficoms
cmp
jns
lahf
push
andb
xchg
addr16
hlt
xchg
push
sub
lcall
xchg
mov
push
stos
test
add
mull
fcmovnbe
mov
xor
call
mov
je
shll
cld
dec
iret
dec
mov
cmpsl
out
jae
add
sbb
cld
ljmp
sub
js
push
jle
pop
incl
jae
sahf
fisubl
or
xor
loopne
imul
mov
js
cli
cmove
sub
jl
lret
ret
jbe
test
cmp
pop
popa
out
push
push
lock
pop
std
mov
mov
cmp
into
rcll
push
int3
xor
ljmp
jmp
and
xchg
ja
fs
mov
enter
fnstsw
cmp
rclb
arpl
scas
outsl
gs
ljmp
xchg
daa
add
xchg
test
xor
add
xlat
aad
pop
sub
mov
outsl
clc
mov
clc
inc
iret
xchg
or
int3
dec
cwtl
push
repnz
ret
xchg
jmp
sub
fldcw
ljmp
push
or
stos
and
mov
sub
lret
dec
ljmp
fs
jge
jl
jae,pt
out
dec
insb
xchg
inc
imul
aas
js
mov
dec
pop
test
gs
jle
xlat
push
loope
aam
aad
xor
clc
mov
cmp
outsl
pop
sbb
cmp
pop
lods
jge
jae
pop
xor
push
std
jle
sarl
int
rep
jns
rorl
xchg
pop
test
xchg
jmp
lea
mov
lcall
or
adc
dec
and
lods
iret
mov
push
pushl
popa
shll
cmp
mov
xchg
mov
pop
rorb
sub
in
mov
mov
mov
xchg
iret
scas
dec
mov
in
lods
lock
jmp
push
cmp
testb
fmull
add
outsl
clc
mov
dec
movsl
fdivrl
cmc
aas
mov
mov
repnz
cwtl
push
mov
ljmp
jl
add
pop
xchg
je
mov
mov
push
aad
fisttps
filds
aas
ja
xchg
mov
in
in
or
inc
popl
xchg
and
test
jg
mov
ret
add
push
lahf
in
aaa
pop
cld
mov
int3
adc
mov
add
inc
xchg
dec
and
xchg
push
fdivrs
sbb
stos
lret
cmc
dec
xchg
out
mov
jg
inc
and
aad
cmp
std
sahf
cmp
loop
sarb
sbb
xchg
jns
popa
out
or
lock
je
pop
insl
arpl
pop
or
lods
int3
or
inc
sub
and
jb
aaa
cwtl
cli
lcall
je
sbb
fcompl
je
frstor
push
enter
in
call
inc
mov
stc
insb
popa
arpl
inc
pop
sbb
sbb
fwait
add
insb
jp
fistps
inc
push
xchg
xor
dec
pop
mov
mov
cwtl
outsb
call
mov
jmp
mov
mov
fs
filds
inc
je
inc
iret
int3
xchg
or
mov
cli
ljmp
ljmp
sub
popa
nop
adc
inc
int
cmp
cmpl
mov
decl
lcall
aas
scas
pop
pushf
stos
sbb
mull
xchg
int
dec
mov
pushl
aad
ficoms
push
mov
xlat
das
inc
imul
xchg
and
fadd
xchg
pop
hlt
filds
adc
lcall
xlat
sbb
pushl
inc
stc
test
mov
inc
xchg
mov
call
rorb
cwtl
daa
iret
xorb
xchg
add
ret
xchg
lahf
push
mov
out
ljmp
sub
repz
add
pop
mov
cmp
xor
jmp
mov
fs
dec
sub
shll
pusha
ljmp
in
inc
xor
lcall
add
outsl
je
mov
push
std
mov
mov
aad
xor
xor
call
pop
mov
mov
inc
out
lds
and
mov
fsubl
pop
stos
sbb
adc
dec
stc
adc
jo
xchg
mov
mov
inc
jno
inc
push
jge
repnz
incl
nop
cli
loop
mov
int
jo
mov
in
fcomps
cltd
xchg
push
mov
jg
decl
dec
sub
fcoml
fldcw
push
inc
pop
scas
and
ss
ljmp
sub
mov
fcmovbe
movsl
mov
inc
jl
call
bound
call
cmp
incl
pop
cmp
add
or
pop
mov
pop
fs
jae
addr16
jmp
jmp
scas
xchg
add
lcall
jb
sub
bound
cmc
insb
jmp
xchg
jmp
lcall
push
push
mov
pop
or
xchg
xchg
arpl
out
jge
jecxz
in
rep
aaa
ret
push
jg
pushl
mov
fistps
inc
lea
out
test
dec
leave
pop
js
sahf
ljmp
jecxz
jle
cmp
incb
rolb
lcall
adc
cld
cmc
jb
and
rclb
mov
cmpsb
test
xor
cmc
test
decl
lea
ret
call
inc
jecxz
sbb
and
add
arpl
mov
sarb
ljmp
popf
adc
mov
lret
sarl
and
mov
xchg
or
shll
out
jns
test
adc
repnz
sub
mov
mov
mov
movsb
push
mov
or
xchg
lods
cmpsb
mov
stos
insb
scas
mov
add
push
xchg
arpl
xor
inc
and
xlat
mov
adc
or
xchg
inc
pushf
mov
jle
jno
std
testl
aaa
cld
cmp
mov
lcall
mov
mov
sub
and
jg
std
dec
mov
mov
in
lret
das
add
jge
ljmp
imul
loopne
ljmp
pop
icebp
aad
incl
testb
push
popf
cmp
fidivl
popf
cs
jge
dec
mov
movsl
aas
incb
cs
out
mov
dec
pop
cld
pop
sbb
pop
dec
cmp
and
mov
sub
fiaddl
pop
decl
pop
scas
mov
enter
loopne
ljmp
incb
out
into
mov
dec
decl
pop
pushf
add
xor
pusha
outsl
sar
fildll
adcb
dec
in
mov
rorl
std
xlat
dec
test
sahf
jle
mov
add
lcall
sub
push
mov
or
sbb
mov
xor
out
xchg
mov
sbb
gs
or
push
int3
xor
pusha
test
clc
int
pushf
inc
icebp
mov
xor
mov
mov
xor
scas
push
sub
decl
mov
int3
jo
mov
dec
mov
jg
dec
out
cs
pop
mov
mov
sub
std
mov
add
lea
rcll
cmp
fists
xchg
pop
xor
mov
popa
sbb
std
out
mov
xchg
aam
add
sti
mov
outsl
fcomps
mov
aad
adc
push
mov
add
push
jecxz
sbbb
sub
popl
imul
cli
jmp
test
fwait
jmp
pop
out
dec
sahf
xchg
lock
jno
xchg
adcb
call
mov
mull
lret
mov
inc
pop
xor
pushl
int3
js
and
mov
rorb
lahf
mov
mov
decl
movl
push
xchg
mov
loop
nop
divb
nop
inc
jge
sbb
cmc
sti
decl
nop
mov
insb
mov
xlat
loope
fsubl
imul
pop
std
shll
xchg
cwtl
ret
loop
mov
aad
push
dec
rorb
in
ja
enter
or
or
sub
gs
and
cmp
inc
xchg
and
aas
arpl
shlw
jl
dec
arpl
push
jae
sbb
psubusb
jg
mov
test
mov
mov
shlb
pop
lea
lods
adc
mov
jg
adc
in
or
cltd
and
mov
mov
nop
aad
dec
push
mov
dec
clc
and
adc
sub
push
loope
lret
jecxz
pushf
fcompl
push
rcrb
into
and
push
aam
shrl
ljmp
sbb
mov
mov
mov
ja
data16
ss
sarl
pushl
vcvttsd2si
xchg
cmp
jne
mov
dec
data16
xor
jmp
push
ljmp
lods
int
mov
out
jo
lock
data16
jmp
xchg
imul
idivl
out
inc
add
ds
ret
add
add
fcomip
lret
mov
xchg
in
and
popa
dec
sbb
enter
add
xlat
add
iret
out
out
rol
scas
negb
mov
cmpsb
decl
shlb
xor
and
pop
mov
loope
into
push
sarb
mull
push
daa
add
xlat
adc
js
pop
test
ret
dec
fisubrs
mov
pushl
sti
out
jg
addr16
aaa
pop
arpl
mov
and
cwtl
dec
mov
add
mov
outsl
push
add
incl
lcall
pushf
gs
mov
ds
decl
dec
dec
jge
filds
mov
pop
fidivl
dec
lahf
push
add
aad
out
mov
inc
movsb
jbe
adc
add
adc
or
stos
pop
xchg
jl
cltd
push
jmp
aad
into
push
mov
and
gs
cmpsl
push
andl
addb
sub
fdivr
add
addr16
lret
test
or
fisubrs
lcall
mov
fsubrl
in
jae
mov
and
ljmp
inc
cli
decl
push
ja
inc
or
xor
push
push
mov
push
insb
call
das
sahf
sbb
scas
adc
clc
mov
mov
mov
aad
jmp
cmpsl
pop
and
lcall
gs
ljmp
std
movsb
push
mov
les
fistps
mov
dec
xchg
dec
xchg
xchg
dec
out
enter
outsl
es
jp
add
aaa
push
dec
idiv
jg
cwtl
mov
and
lret
out
sub
inc
push
xor
sbb
jnp
stc
mov
cmp
call
into
dec
mov
int3
push
cmp
inc
lods
mov
adc
mov
adcb
jle
pusha
pop
sub
int3
fdivs
repnz
jmp
mov
ja,pt
push
in
add
fistpll
xchg
les
sub
sub
or
push
and
fmulp
pop
jp
xor
xchg
inc
testb
std
loope
cltd
js
ret
jg
sub
aad
mov
mov
popa
hlt
shlb
mov
fisttpl
cmc
and
cmp
push
shlb
sbb
jg
pushl
and
dec
xlat
repz
and
inc
out
sar
inc
nop
adc
inc
mov
pop
dec
mov
pop
push
pop
cmpsl
arpl
test
jb
cwtl
hlt
sub
loop
in
mov
and
dec
test
outsl
clc
arpl
rclb
shll
mov
loope
xchg
pop
repnz
out
and
cltd
push
stos
pop
stos
std
lds
jp
lea
jmp
icebp
or
lret
mov
inc
push
or
cmova
data16
popa
xchg
mov
dec
int
jl
pop
aas
fldt
pop
pop
sub
sahf
adc
gs
sbbl
jecxz
push
scas
gs
dec
jne
decl
xchg
pop
dec
dec
sti
and
testl
or
mov
mov
call
lret
lds
addr16
pushf
fisubs
andb
xchg
pop
mov
pushf
ja
enter
mov
lret
sbb
mov
pushf
stos
mov
scas
jge
sbb
cmpsb
xchg
jg
mov
fists
fnsave
outsb
stos
and
jg
incl
shlb
pop
pop
fsubrp
inc
push
sub
pop
ss
cltd
ja
addr16
iret
stos
push
fcompl
mov
decl
pushf
lock
push
aaa
std
ljmp
cwtl
xor
inc
add
cs
ficompl
jg
pushl
push
std
mov
aaa
fnstsw
call
stos
adc
pushf
sar
pushl
sbbl
das
jl
push
sub
cmpsl
jp
jmp
in
mov
jecxz
xchg
or
mov
mov
ds
mov
jb
mov
xor
scas
inc
sub
fstl
xchg
jno
or
and
aad
lcall
rcrl
sub
pop
mov
mov
scas
outsb
jno
pushl
cmp
and
inc
mov
imul
test
test
add
add
call
lds
jmp
movsl
pop
push
pop
movsb
std
jbe
inc
icebp
mov
sahf
mov
dec
in
cmp
sbb
mov
pop
push
adc
jl
loope
andl
lret
int
xor
sbb
incl
rcrl
ss
out
xchg
jg
outsl
pop
sbb
cmp
push
cmpsl
pop
mov
aam
mov
les
loop
incl
les
out
int3
mov
jo
jnp
adc
push
call
ret
add
sub
lret
mov
lods
xor
ljmp
insl
neg
inc
jmp
shlb
sbbl
ljmp
inc
pop
dec
les
or
adc
aam
daa
and
cwtl
in
rorl
push
push
sbb
sub
fldenv
ljmp
jno
idivb
mov
jp
data16
popa
out
and
pop
and
cwtl
fidivrl
mov
mov
mov
add
dec
cld
mov
shll
or
mov
adc
lcall
aam
adc
andb
adc
lods
adc
cli
gs
mov
pusha
das
pop
xlat
mov
cmpsl
jecxz
pop
out
leave
out
mov
or
mov
mov
in
pop
dec
jo
jle
sub
inc
or
ficoms
std
jmp
adc
inc
ficomps
stos
test
out
arpl
gs
sbb
jmp
lock
or
jecxz
jg
nop
sar
call
adc
outsl
jns
aad
mov
lods
push
test
fs
xchg
outsb
lret
jbe
fistl
cs
mov
dec
adc
in
out
loopne
fwait
lret
int3
leave
sub
push
push
dec
or
pushl
add
mov
mov
aad
adc
pusha
cwtl
cmp
mov
outsb
es
add
fs
cmpsb
xchg
mov
adc
in
jg
out
test
test
imulb
int
cmp
mov
and
cmp
xchg
sbb
subb
adc
pop
in
jne
dec
mov
lcall
mov
in
fisubrl
rcr
jne
mov
fisubrs
jmp
cmpl
xchg
stc
sub
test
jb
mov
cmovae
jmp
outsb
and
inc
cmp
sub
cld
int
addl
sbb
ja
les
push
cld
dec
das
les
je
repnz
sbb
fildll
inc
lea
fwait
cmp
mov
lcall
push
push
dec
adc
pop
fcmovu
fs
pop
mov
stc
test
push
push
add
setno
mov
xor
cmp
in
pop
outsl
in
sar
lcall
pop
mov
jecxz
push
cld
sahf
jmp
ss
mov
sub
jp
cmpl
rcr
cmp
sub
in
mov
sub
in
pop
pop
sar
sbb
mov
scas
int3
loop
mov
call
mov
dec
xchg
mov
jbe
negl
pop
mov
jecxz
pop
mov
filds
dec
ljmp
leave
lods
imull
xchg
gs
iret
lods
shr
adc
pop
or
jg
mov
jecxz
mov
in
pop
in
call
loope
cwtl
into
and
dec
ljmp
adc
ja
jb
adc
fld
jle
scas
mov
incl
ljmp
push
fnstsw
andb
fldcw
mov
inc
cmp
xchg
addr16
mov
lds
pop
add
xchg
iret
or
mov
rolb
push
mov
jmp
inc
addr16
and
testb
sahf
sub
rolb
fisttpl
lods
inc
into
mov
mov
test
cmpsl
addb
push
shrb
jmp
rcl
daa
shl
rorb
hlt
cmp
dec
push
jbe
add
aaa
add
orl
pop
rol
scas
push
aas
fldcw
loop
sub
das
and
jbe
pop
xor
or
xor
mov
decl
mov
lret
mov
sub
arpl
fdivs
cmp
inc
xor
push
push
std
das
mov
add
mov
scas
addr16
xor
lret
mov
outsl
xchg
pop
dec
add
lods
lcall
movsl
shll
test
leave
xor
jmp
xor
outsl
and
roll
pusha
mov
cwtl
sbb
scas
or
ficoml
call
in
inc
jmp
clc
clc
push
pop
pop
lds
maskmovq
xchg
sub
jnp
mov
dec
es
in
es
inc
cmp
je
mov
pushl
pop
sub
lret
je
sub
xor
cmp
pushf
pop
stos
add
adc
call
fisubl
mov
flds
iret
js
stos
xorl
nop
inc
mov
lds
das
pop
scas
out
ja
test
iret
ss
lret
incl
mov
cmp
mov
pop
lret
cmp
lret
xchg
mov
dec
cli
loop
decl
and
enter
push
add
xchg
or
pop
scas
xor
sub
add
std
xchg
add
xlat
hlt
out
xchg
iret
shll
insb
mov
jmp
daa
movsl
into
pop
adc
mov
fdivs
fwait
movsb
fs
push
pop
daa
loopne
inc
dec
mov
jmp
lea
js
js
push
addr16
jmp
fcomip
ss
mov
add
jo
and
sbb
add
ljmp
add
jp
sbb
mov
dec
lret
daa
cmp
movsb
rol
mov
rol
sbb
ja
jmp
int3
insb
push
xchg
sbb
jns
mov
rolb
adc
mov
pushl
jmp
mov
jae
lods
xchg
inc
rorl
loopne
mov
dec
sbb
mov
aaa
mov
pop
popl
ds
inc
imul
lods
jg
mov
aas
sub
iret
xchg
mov
push
push
cmp
shrl
sub
jmp
add
cli
jbe
pop
addl
cmp
cmp
fisubrs
lods
rcl
test
xchg
dec
loope
call
dec
sub
insb
insb
mov
sbb
movsb
clc
adc
cs
lcall
mov
aas
in
push
iret
sub
lret
clc
inc
and
mov
mov
and
call
mov
fsubl
leave
and
mov
ss
fs
fistpl
loop
jne
stos
push
xor
fst
push
jle
push
pushl
negw
adc
mov
pop
mov
cmp
cmp
mov
orb
fs
cmp
dec
into
ret
cmp
lea
jmp
sarl
nop
repnz
add
add
pop
xchg
out
pop
inc
in
sbb
jmp
popa
dec
jae
mov
mov
enter
and
dec
test
or
cmc
dec
inc
sti
clc
fcomip
mov
or
xchg
sbb
inc
jmp
call
test
cld
cmp
xor
and
mov
and
cmp
fucomip
stos
nop
pushf
or
in
add
jnp
mov
rolb
out
insb
sub
clc
ficomps
incl
mov
out
add
jb
add
in
mov
jae
add
orl
ljmp
iret
mov
jmp
xchg
jg
xchg
jae
xchg
insl
pushl
movsl
outsl
adc
jb
ss
repnz
dec
cmc
stos
fsub
pop
sub
jg
pushl
push
and
mov
push
hlt
inc
push
gs
rcr
adcl
ljmp
cli
in
add
decl
stos
aaa
or
inc
jae
inc
loope
dec
pop
andl
decl
sarb
dec
and
out
mov
pop
in
push
sti
inc
xor
mov
out
fld
sbb
sbb
push
push
ds
mov
sbb
mull
inc
repz
pusha
xor
std
sbb
lcall
add
mov
movsb
outsl
test
enter
ljmp
sub
dec
mov
inc
push
mov
fbstp
xor
imulb
xchg
fcomps
je
ljmp
rolb
in
push
push
xchg
outsl
sahf
mov
mov
fidivrl
mov
lds
shrl
xor
mov
loopne
jge
xchg
shll
mov
loopne
push
aad
sbb
sar
loop
test
pop
mov
mov
push
sub
xchg
lock
push
cmpsl
ljmp
and
incl
fmuls
cwtl
stc
mov
xchg
stos
leave
iret
outsb
lret
das
cmpsb
push
mov
adc
jmp
mov
mov
enter
notb
jg
call
scas
mov
inc
sub
leave
or
add
ja
daa
mov
std
inc
or
adc
lcall
add
icebp
lods
test
cmpsl
mov
and
mov
es
dec
sar
push
fistps
inc
idiv
mov
inc
dec
and
cmp
inc
jb
push
inc
mov
sub
cmc
call
mov
lods
stc
decl
push
pushf
mov
xlat
out
mov
in
out
fstps
adc
frstor
sti
xchg
inc
cs
jmp
mov
jne
ljmp
mov
daa
ficoms
int
push
xor
imul
mov
jmp
subb
mov
fisubrs
aas
or
out
jmp
xor
lea
out
loop
lcall
sbb
test
adc
test
pop
inc
jmp
js
rorw
decl
xchg
mov
lret
xor
jo
sub
imul
add
cli
inc
fnstsw
mov
mov
push
mov
mov
add
lret
push
ret
imul
incl
cmp
xchg
mov
add
aad
fists
je
pop
std
pop
xor
out
mov
nop
das
and
dec
lods
cwtl
xchg
jge
adc
nop
jbe
aaa
cld
push
std
push
call
test
and
cmpsb
outsb
popa
add
jb
loopne
inc
jae
mov
mov
mov
jl
or
adc
fdivl
subl
pop
test
ljmp
fidivrl
add
add
mov
jno
adc
pop
mov
lcall
cmp
lea
enter
outsl
aad
stc
int3
pop
popa
movsb
dec
insb
xchg
int3
imul
cmp
mov
jge
aad
orl
pop
mov
out
xchg
ret
xor
ja
sbb
js
loope
out
test
cli
sbbl
inc
js
ljmp
lcall
out
cmp
popf
pop
ret
mov
mov
add
sti
xor
mov
inc
loope
jne
out
push
daa
stc
inc
outsb
push
inc
jo
inc
jecxz
fidivl
mov
pushl
pop
lods
nop
mov
incl
cmc
ret
sub
es
pop
lods
test
xor
adc
xchg
icebp
or
test
repz
call
enter
pushf
je
enter
add
jns
outsb
sbb
add
outsl
incl
add
jns
aad
out
fsubp
jo
dec
rcl
cmp
fnstenv
pop
imul
mov
jo
adc
xchg
fcmovne
mov
mov
xchg
dec
mov
rcrb
pop
lret
shr
mov
clc
pushl
mov
xchg
xchg
sbb
or
push
inc
cs
ljmp
insb
sub
pop
adc
xlat
or
shlb
leave
or
push
das
clc
jmp
jb
movsb
ljmp
and
test
enter
jmp
xchg
or
inc
cmp
pop
jo
cmp
imul
pop
aaa
jne
fidivl
filds
pushl
test
push
xor
cmpsb
add
mov
lods
repnz
add
icebp
mov
xor
xchg
lock
xor
mov
pop
aad
xor
cmpsl
jl
lcall
aam
rclb
mov
jl
jmp
pop
addr16
push
loopne
icebp
mov
popa
sbb
test
mov
sbb
sbb
pusha
inc
scas
xchg
mov
ljmp
cwtl
arpl
add
add
pop
test
pop
call
jb
jp
sub
aas
in
call
andb
sarb
pop
das
in
push
test
rclb
fmuls
cwtl
mov
ljmp
test
call
mov
sbb
add
pop
and
out
test
mov
jecxz
mov
clc
jmp
lcall
hlt
ret
add
incl
mov
aaa
mov
js
push
out
push
ds
andl
jg
sahf
cwtl
scas
stc
or
and
or
push
popf
pop
sbb
icebp
push
rorl
enter
ljmp
test
push
dec
sub
rol
lahf
es
lock
pop
push
mov
jg
xor
sub
push
gs
inc
push
stos
out
std
cmp
or
pop
rol
loopne
jge
mov
pushw
les
std
jno
incl
mov
xor
sub
sbb
aad
rcl
dec
out
call
mov
orl
sub
mov
adc
or
out
sti
cmp
inc
in
xchg
adc
and
je
mov
sbb
sbbl
scas
ljmp
call
loope
decl
cld
mov
jae
mov
hlt
and
fnstenv
outsl
js
clc
xchg
shl
fdivrp
cmp
icebp
jbe
sti
divl
xchg
scas
push
cmpsl
lret
in
cmp
sbbb
pop
sbb
call
std
jnp
xchg
xchg
add
negb
xchg
ja
sub
flds
in
rol
jnp
xchg
icebp
lcall
incb
or
pop
sbb
inc
sbbl
call
pop
adc
pop
pop
jnp
mov
cmp
cmp
fdivrs
jg
test
movsb
xorb
in
push
fldl
pushl
mov
loop
mov
addr16
adc
adc
orb
enter
popa
lods
insl
out
mov
xor
adc
xchg
mov
test
mov
daa
push
sti
xchg
lret
fildll
sti
xchg
jne
int3
iret
cmp
xor
or
push
mov
jo
fidivl
lret
dec
mov
or
xor
pop
roll
std
out
cmp
lods
jae
or
aam
dec
scas
push
psubusb
mov
cmp
add
ljmp
out
pmaxub
mov
or
jns
cmpsb
das
mov
stos
jae
xchg
aas
pop
stc
xor
scas
call
add
stc
outsb
add
mov
mov
or
pop
pop
push
in
sub
hlt
in
mov
in
mov
scas
mov
leave
xchg
jg
mov
sahf
ja
dec
dec
cld
lds
mov
bound
js
pop
push
je
and
aad
decb
cmp
lcall
lahf
imul
mov
or
dec
fldcw
outsl
jmp
cmp
sub
test
aas
fisttps
popf
jp
loopne
xchg
jle
fdivl
inc
mov
mov
pop
lret
cld
call
inc
shlb
pop
mov
lods
dec
int3
jo
mov
popl
imull
stc
mov
inc
jno
mov
cmp
inc
je
cmp
jno
jg
mov
hlt
inc
xchg
jno
ss
xchg
mov
pop
push
inc
pop
out
add
pop
mov
clc
pop
jns
adc
and
sub
outsl
incl
xor
aaa
pushf
dec
mov
cmp
push
ljmp
or
cmp
jmp
jp
fdiv
mov
call
mov
mov
outsl
and
sbb
hlt
iret
or
clc
mov
and
ret
xchg
add
dec
sbb
and
push
add
jbe
call
das
je
out
add
xor
sbb
push
dec
fstl
loop
adc
cmp
pushf
dec
loopne
in
lods
push
sbb
mov
inc
pop
repnz
aaa
jo
mov
shlb
push
and
call
or
rcll
jle
aaa
loopne
sbb
inc
mov
das
ret
adc
fldcw
aaa
lods
cld
rcrb
xchg
cmp
mov
ja
pushl
out
fs
mov
cmp
dec
pop
jb
in
mov
mov
mov
mov
shrl
xchg
push
ds
aam
cmp
or
jl
leave
fsubrl
xor
push
rolb
and
xor
out
push
mov
scas
mov
loop
or
and
aaa
dec
shll
and
stos
lcall
sarb
inc
andb
add
jmp
sub
btc
mov
inc
into
ret
jge
mov
cltd
movsbl
jg
mov
jae
insl
xor
sahf
mov
and
outsl
aam
imul
insl
sahf
mov
or
jb
std
ja
stc
ja
xor
je
push
cwtl
ss
pop
and
jns
repnz
xchg
jl
fidivrs
jge
ds
jo
lods
movsb
fidivs
cmp
inc
mov
movd
lret
mov
bound
aas
mov
mov
jns
mov
mov
pushf
cmp
mov
or
sbb
xlat
mov
jnp
cmpsl
cmp
pop
xor
or
push
lods
cld
arpl
int3
xchg
imul
cmpl
mov
push
je
mov
call
mov
pop
push
popa
pop
or
insl
roll
jb
mov
addr16
cmpsb
lcall
clc
fisttps
std
cmp
mov
cs
iret
aas
sub
and
dec
mov
push
idivb
xor
pop
pop
shlb
out
out
mov
es
xor
movsb
test
jg
rorb
sub
ret
pushf
sbb
xor
sbb
insl
cs
xchg
xchg
push
loop
jecxz
push
xchg
adc
dec
in
mov
and
and
pop
mov
cmp
iret
mov
out
sbb
outsl
mov
mov
cs
mov
pop
int
sub
fidivrs
call
sub
lods
pusha
out
lods
pop
or
out
mov
call
xchg
sub
in
decl
aad
popa
push
xchg
mov
xchg
push
jmp
mov
and
pop
icebp
pop
movsl
xchg
loopne
cli
decl
add
cmp
dec
mov
es
add
dec
pop
xlat
pop
push
icebp
cmp
repnz
mov
lds
insb
mov
data16
outsl
fadds
sub
jbe
mov
cwtl
es
add
incl
jno
pushf
scas
dec
pushf
lret
lea
mov
mov
sbb
dec
mov
addl
stos
mov
fcomps
call
lahf
mov
sbb
rcll
out
clc
movsb
push
test
mov
inc
mov
lcall
pop
mov
js
scas
sbb
adc
fistps
imul
cwtl
outsw
or
push
pop
xor
dec
add
jbe
cmp
xchg
or
add
lret
inc
mov
jg
clc
push
or
xorb
icebp
jle
adc
pop
pop
in
push
pop
lcallw
jmp
inc
in
out
inc
loopne
sub
push
dec
adc
stc
aam
adc
or
cwtl
sbb
add
cmpsb
mov
push
and
lcall
lods
stc
scas
sbb
lahf
aad
mov
fisttps
and
out
inc
out
fs
shrl
add
loope
pop
stc
into
gs
shrb
sar
sahf
mov
add
lea
mov
sub
xchg
imul
ljmp
int3
mov
mov
push
mov
sti
xor
inc
fcmovne
pushl
cmp
movsb
int
bound
pusha
dec
cs
dec
or
sub
rcrl
ljmp
aas
imul
mov
stc
fs
repz
mov
rcl
addl
out
mov
and
iret
loop
pop
loope
mov
mov
int3
cmpsl
addr16
dec
mov
lret
test
adc
pushl
cld
mov
jb
inc
adc
lahf
dec
jb
sbb
fisubl
out
lcall
jg
aaa
subl
jmp
add
xor
test
xor
out
call
loope
orb
imull
inc
xchg
out
jg
mov
mov
push
lcall
loope
xchg
push
ds
hlt
idiv
push
inc
push
iret
xor
xlat
cld
sub
sbb
into
mov
inc
std
cmp
pop
and
jg
sub
fists
decl
outsb
cmp
pushf
dec
cmovo
fadd
mov
add
outsb
mov
mov
cli
cmp
adc
repnz
pop
jg
iret
cmp
sub
std
jmp
fisttpl
pop
mov
cmp
jb
sbb
bound
lock
cmp
aaa
xchg
or
cli
sbb
jecxz
cmpsl
push
loopne
clc
sbb
or
fidivl
mov
filds
jg
xchg
mov
pusha
add
popa
cmp
sub
mov
aam
xor
ljmp
jge
mov
mov
jp
lods
outsl
sub
pop
pushl
mov
add
stc
dec
lods
inc
lahf
sub
xor
xchg
cmp
adc
dec
fwait
or
xor
shr
stc
adc
sub
loop
scas
ret
sahf
ret
decb
fsts
lcall
ret
fcmovb
fdiv
jecxz
inc
dec
mov
repnz
xchg
insb
cmp
and
push
jge
enter
cmpsb
aas
sbb
mov
fwait
adc
loop
xchg
jo
dec
xchg
addr16
loope
lods
sti
push
push
jle
fcomip
pushl
leave
mov
pusha
mov
lock
mov
aad
stc
cli
mov
jg
decl
jg
and
imul
out
test
add
sub
jg
lcall
pusha
mov
test
mov
and
and
adc
sub
dec
xchg
stos
cli
cmp
jmp
iret
xchg
xor
cs
test
mov
mov
les
pop
bound
lock
decl
cmp
adc
lock
or
cmp
push
lcall
popa
or
xlat
push
add
sahf
push
outsl
les
hlt
cmp
arpl
pop
push
cmp
xor
jmp
enter
sbb
int
or
jp
insb
cmc
jmp
in
pop
sub
sub
jge
mov
add
pop
icebp
loop
mov
xor
mov
push
shll
mov
ret
mov
aad
fdivr
movsl
inc
lods
in
mov
sti
add
repnz
pop
ljmp
sti
lret
ds
add
dec
sahf
rorl
decl
jp
cmc
fwait
lret
in
adc
pushf
loopne
lret
xchg
sbb
mov
jmp
lods
add
fisttpl
xor
mov
dec
cli
shrb
mov
dec
sub
mov
xor
xchg
jmp
repz
jo
xchg
and
out
loop
push
js
add
xchg
xlat
xor
add
fwait
jbe
int3
xchg
jno
fwait
cltd
sarb
push
pop
pop
lock
adc
std
data16
testl
loopne
outsl
push
jno
imul
push
and
pop
add
inc
mov
nop
mov
cwtl
dec
mov
mov
popa
xchg
mov
lods
jg
jge
in
and
push
outsb
loopne
idiv
jg
lock
adc
cmp
sbb
inc
cld
mov
adc
fdivrs
mov
xchg
insl
inc
incl
cli
aaa
xor
and
dec
fnsave
pusha
imul
scas
clc
int
push
pop
dec
inc
sbb
lock
lock
pop
lret
lods
push
dec
into
call
adc
das
shlb
sub
movsb
punpcklwd
out
mov
mov
mov
jmp
pop
scas
fcomi
jl
pop
sbb
cmp
neg
lock
lret
or
fnstsw
call
fadd
push
popa
dec
hlt
sub
dec
push
sbb
push
ret
push
push
push
les
push
clc
jmp
add
aas
insb
sbbb
pop
fstl
jg
jns
cmp
adc
mov
in
add
xchg
mov
mov
pop
lcall
movb
sar
push
lods
ljmp
insb
cmp
decl
jmp
pop
mov
subb
cmp
adc
lcall
inc
orw
js
xor
jg
and
adc
adc
cmp
scas
popf
push
fs
add
out
pop
sahf
fistpll
cmp
push
lret
lcall
sbb
bound
mov
mov
aaa
cmp
and
ret
inc
mov
xchg
incl
lods
fisubrl
jmp
movsb
lahf
movsl
jle
adc
adc
imul
call
lcall
mov
cmp
test
pusha
es
xchg
ja
adc
mov
mov
inc
loopne
cmp
and
mov
push
push
dec
xchg
out
dec
adc
loope
call
lods
daa
dec
cmp
and
testb
call
addr16
ja
fwait
ljmp
push
lds
mov
xchg
jmp
je
jnp
adc
mov
pushf
icebp
mov
loope
cmpxchg8b
leave
ror
push
jns
sbbl
add
fwait
push
into
or
fimuls
dec
and
mov
mov
push
jno
aam
mov
cli
es
or
push
cmp
xlat
test
addr16
jno
ja
ljmp
scas
sub
dec
je
mov
cmp
gs
adc
pop
inc
push
lds
mov
push
fistl
pushl
add
pop
adc
ss
jbe
inc
add
mov
ficomps
pop
push
mov
pop
insb
rcl
mov
or
adc
mov
xchg
ljmp
pop
push
stos
cmpsl
ret
xlat
xor
decl
push
adc
xorl
insb
jmp
dec
xor
push
out
lcall
pop
pushf
add
inc
lahf
out
je
mov
mov
adc
repz
dec
loop
xchg
lret
jo
push
call
mov
fistps
xor
pop
pop
jle
ret
dec
mov
push
cmp
cmp
jns
daa
push
mov
mov
ror
cmp
dec
lds
pushl
mov
and
rorb
test
les
cli
inc
add
incl
mov
and
mov
out
mov
inc
lret
out
jmp
lret
pushf
pushf
or
pop
cmpsb
and
sbb
xlat
mov
xlat
inc
mov
mov
fwait
jmp
rcrb
xor
pop
xchg
push
cmp
adc
or
incl
test
subb
nop
mov
sub
inc
sbb
lock
out
call
or
out
jo
int3
popf
aad
add
outsl
mov
aaa
imul
dec
clc
call
push
ret
test
mov
outsl
mov
das
adc
xchg
adc
and
in
cmp
sbb
pop
dec
add
incl
or
mov
xor
sub
lahf
adc
lods
fiadds
cmp
inc
and
push
add
aad
cwtl
pop
xchg
mov
hlt
pop
cmp
jp
jno
arpl
les
mov
out
or
add
sarb
sub
ljmp
lods
lods
sbbb
insb
adc
ljmp
fisttps
push
xchg
les
jns
aas
sti
pop
inc
movsb
or
xor
call
testb
cmp
sbb
pushl
inc
js
mov
dec
addr16
push
les
xchg
push
jne
nop
out
repnz
jle
lcall
scas
add
dec
ffree
loope
dec
orl
jmp
lods
mov
call
nop
add
push
inc
xlat
add
andb
mov
test
jle
adc
jmp
shr
loop
daa
inc
sbb
into
daa
cmpsl
addr16
pop
mov
cld
cmp
nop
mov
pusha
inc
arpl
jae
lock
andb
lcall
push
jecxz
mov
lods
scas
roll
popf
xchg
xor
and
xlat
or
fiadds
out
add
stos
ja
ret
scas
mov
or
xor
decl
xchg
mov
popa
mov
enter
xor
cmpsb
data16
out
cli
ljmp
mov
mov
sub
push
or
cmp
in
lcall
sub
jb
in
cmc
ret
sub
lea
xchg
add
and
mov
jnp
decl
jbe
adc
fwait
jno
popf
add
pop
and
jg
xor
sub
shl
sub
mov
pop
outsl
and
push
std
cmc
popf
rolb
or
out
inc
out
add
push
inc
push
inc
sub
aam
cmpsl
or
sbb
or
jmp
out
fstl
loope
fisttpll
jb
cmp
add
call
push
cmp
shll
rcl
inc
inc
out
outsl
push
inc
out
mov
mov
jmp
mov
aam
incb
in
sbb
jmp
or
inc
sub
sub
mov
das
div
bound
sbb
adc
push
ljmp
pop
dec
jp
mov
sub
in
icebp
jno
pop
insl
std
js
xor
dec
insl
mul
push
pushf
mov
jae
and
pop
pop
movsb
push
lcall
mov
xor
xchg
jne
sub
mov
inc
stos
push
jne
pop
cmp
inc
cmp
stc
out
jmp
bswap
add
or
cltd
jne
loop
fbstp
arpl
dec
jmp
decl
loopne
scas
xchg
xlat
mov
jbe
lds
sub
cmpsl
and
int
test
enter
je
fcomps
add
inc
ds
push
inc
lods
lds
frstor
cld
jmp
and
repnz
es
lcall
fdivs
orb
mov
jle
mov
mov
in
jg
test
mov
addb
sub
xorb
mov
fistpll
or
daa
cltd
push
xchg
xorl
xchg
sar
out
decl
mov
xchg
movsl
mov
add
lcall
fstl
mov
fistl
mov
call
out
xchg
movsb
idiv
jg
out
ret
push
sbb
cmpsl
push
insl
mulb
dec
movb
pop
mov
sub
dec
pop
sbb
inc
inc
in
mov
dec
dec
dec
and
jno,pt
inc
push
icebp
xchg
or
sub
bnd
shlb
sarl
imul
add
jg
cwtl
das
jno
pop
in
jmp
hlt
mov
mov
mov
lcall
movsb
jo
inc
inc
insl
lds
fwait
jnp
dec
rorb
jmp
push
adcb
lds
mov
and
inc
addr16
outsl
clc
decl
movsl
xor
cmp
ret
test
lret
out
enter
outsl
cmp
shl
jbe
ficoms
xchg
stos
sti
jge
xorb
out
fsubs
hlt
add
inc
dec
push
add
icebp
or
jg
je
xchg
mov
aam
call
push
cmp
data16
mov
out
xchg
pop
cmp
lea
jne
jae
mov
in
mov
sbb
nop
sub
fisttps
push
int
mov
or
ja
and
lcall
andb
imul
mov
xchg
ljmp
sbb
fildll
pushl
lahf
out
scas
mov
mov
push
jmp
sar
and
add
sbb
test
ficompl
sbb
cltd
mov
pop
incl
int3
lret
ret
push
lret
xchg
lret
xlat
iret
scas
stos
push
iret
adc
jecxz
mov
gs
cmp
and
out
in
data16
push
xchg
ds
dec
jmp
cmpsl
repnz
mov
scas
in
mov
aaa
scas
jg
stc
lods
test
mov
jmp
jle
ds
aas
xchg
ret
stos
add
cwtl
gs
sbbl
incl
loope
mov
lret
sbb
cwtl
cld
in
aad
mov
xchg
je
ljmp
xchg
cmp
xchg
mov
pop
cwtl
sarb
sahf
jg
cmp
lret
xchg
and
mov
adc
call
push
je
int3
jbe
addb
sub
les
xchg
scas
inc
xor
stc
pop
repz
and
loope
jg
addb
mov
fninit
pushf
jmp
inc
pop
addl
data16
cwtl
je
stos
jbe
int3
addr16
pop
inc
faddl
fsubl
cld
pushl
sub
stos
and
ds
hlt
xchg
leave
push
or
and
outsl
clc
ljmp
fstps
mov
xor
fwait
or
cld
inc
dec
aam
mov
mov
pop
xchg
cld
shll
cwtd
push
rcrl
adc
inc
inc
ds
inc
in
sti
lret
int
dec
in
mov
dec
das
mov
jbe
inc
mov
aas
js
mov
ja
fmulp
lock
stos
sub
push
add
out
mov
push
std
fbstp
mov
fnstcw
xchg
push
shrb
xchg
std
push
loopne
mov
fiaddl
sub
inc
or
gs
sti
sub
sub
or
fldenv
cmp
and
mov
xchg
and
push
fucomp
add
fldenv
pop
add
push
movsl
jg
es
or
adc
inc
cmpsl
dec
lods
and
lret
pop
je
je
popa
inc
adc
fidivrs
lcall
cld
test
filds
out
aaa
in
xchg
inc
xchg
pop
iret
in
sub
cmovl
mov
sub
fnstsw
arpl
inc
push
les
pop
inc
stc
rcr
dec
lods
fnstcw
cmp
fistpll
adc
xchg
insl
ljmp
mov
pop
and
gs
jg
push
cmp
stos
pop
in
repz
adc
xchg
xchg
mov
ret
push
cmp
mov
inc
mov
aad
xlat
cmpb
adc
and
ror
punpckhwd
jp
ror
loop,pt
mov
pushl
xchg
js
or
insl
stos
dec
test
sbb
mov
nop
cmp
adc
popf
xchg
mov
pop
int
sbb
or
pop
mov
push
lahf
push
mov
fisubl
das
hlt
mov
mov
mov
jmp
imul
dec
pop
mov
xorl
nop
movsl
lret
jge
xchg
icebp
repz
add
sub
push
ret
sbb
decb
stc
out
arpl
dec
hlt
pop
int3
fistl
mov
aas
dec
cs
xchg
xchg
loop
mov
push
sar
outsl
cli
call
loopne
dec
test
popf
ret
stos
testb
in
push
les
push
fdivl
lcall
loope
pop
mov
mov
mov
mov
cmp
daa
ss
jl
or
in
lods
inc
cmpb
dec
xchg
pop
sbb
mov
ds
jnp
ret
decl
sub
cmp
pop
or
scas
or
mov
jmp
ljmp
shll
std
hlt
fsts
scas
es
mov
int3
jnp
movsl
xchg
inc
inc
insl
je
mov
fldenv
ja
rcr
ljmp
mov
mov
mov
loopne,pn
icebp
dec
in
push
out
mull
std
push
fs
je
test
sbb
lret
sbb
jg
in
fisttpl
loope
xchg
dec
jb
cld
lods
sbb
inc
jg
data16
movsl
pop
scas
mov
lret
lds
and
rorl
mov
xchg
out
dec
aas
clc
sub
mov
pushf
and
ja
push
pop
pop
pop
incl
push
in
pop
sbb
mov
outsb
in
scas
sub
jo
add
add
xchg
mov
xor
out
jmp
mov
inc
inc
out
movhps
or
pop
cmp
dec
and
popf
scas
sbbl
adc
mov
mov
push
adc
xchg
xor
jl
sti
in
mov
out
cmp
xchg
xchg
mov
sbb
scas
sahf
shr
repz
mov
daa
pusha
jp
notl
push
imul
ja
das
mov
lock
mov
sbb
inc
iret
fists
jg
repnz
jge
ljmp
ret
fldcw
gs
icebp
mov
push
cli
mov
lret
aaa
inc
rclb
cmp
mov
xor
mov
aaa
cmp
stos
scas
xor
sub
push
lret
jmp
ds
sbb
faddp
sbb
pushl
loopne
sahf
dec
add
or
pop
sbb
xchg
sub
cmp
or
movaps
imulb
mov
fldenv
int3
shlb
movb
and
in
cmp
rorl
push
and
insb
sub
add
imul
push
or
pop
push
cli
mov
cmp
popf
pop
xchg
push
xor
jbe
aas
jmp
mov
dec
mov
mov
xchg
ret
vcvtss2si
aaa
jg
jns
enter
xchg
fnstsw
push
mov
rcrl
lods
leave
push
mov
xor
int3
xchg
pop
jbe
push
dec
loope
or
fldl
in
pop
xchg
push
dec
adcb
negb
clc
ljmp
push
sub
pop
xor
iret
jmp
jmp
sub
sub
pop
ss
int
stos
ret
decb
mov
rcrb
dec
adc
xchg
fld
testb
jecxz
repz
mov
mov
xchg
dec
push
xchg
inc
push
pop
mov
mov
gs
cmpb
xchg
push
aam
add
sbb
lcall
mov
mov
push
inc
mov
in
bound
lret
mov
pop
sbb
cli
outsl
cmp
loopne
mov
into
ss
fldenv
imul
clc
js
std
xor
ret
cli
ret
xor
lret
inc
cld
inc
into
push
mov
pop
cmpsl
jg
fistps
inc
inc
les
jo
sub
iret
push
lret
adc
sbb
in
popl
cli
push
xchg
aas
or
je
sub
mov
int
pusha
popf
sbb
push
insl
dec
pop
inc
cs
push
xor
mov
jmp
in
dec
pop
in
adc
xchg
mov
adc
das
push
xchg
sbb
dec
adc
jns
sbb
dec
add
or
imul
ret
lcall
sub
add
jle
shll
add
dec
fisttps
int
dec
orl
pop
mov
lods
xchg
outsl
insb
mov
scas
dec
std
rolb
cli
jmp
popa
cli
cltd
jl
pop
cld
lds
jl
dec
sbb
lahf
gs
sub
mov
lcall
dec
and
mov
out
ret
push
xor
mov
dec
push
clc
call
loopne
jo
dec
icebp
jmp
mov
jnp
lods
sti
or
faddl
inc
lock
pop
lret
cmp
inc
add
aam
clc
ljmp
and
cmpsl
loopne
rclb
inc
clc
push
bound
sbb
jecxz
int3
push
subl
xchg
pop
mov
mov
sbb
out
ljmp
or
mov
imul
adc
inc
ljmp
addr16
mov
inc
fs
popf
stos
imul
lret
inc
iret
push
pushf
stos
cld
fsubrs
sub
jg
mov
mov
cmp
sahf
xor
adc
mov
xchg
push
xchg
incl
lock
cmp
dec
jecxz
lret
xor
aad
xor
pop
lock
decl
fadd
insl
pop
cmpsl
jl
push
dec
out
mov
mov
outsl
mov
rcr
push
mov
clc
lock
xchg
adc
adc
push
xor
xchg
test
out
mov
aas
incl
fidivl
imul
stc
cmp
jnp
std
incl
ljmp
dec
aaa
cmp
jbe
xor
inc
aaa
aam
pusha
ja,pt
sar
arpl
repz
xor
jecxz
sbb
loopne
pop
mov
call
jl
add
insb
jno
jnp
jg
mov
call
cltd
shrl
js
dec
scas
pop
push
fmuls
sub
cmp
std
mov
mov
out
rolb
hlt
pop
imul
jg
pop
xorb
inc
inc
cli
sbb
jmp
mov
dec
dec
dec
in
scas
cmp
popa
data16
cltd
adc
adc
cmp
jnp
cld
pop
loope
sbbb
rclb
adc
dec
in
mov
and
jmp
xor
pop
call
mov
jl
mov
pushf
mov
sbb
aas
push
and
popf
fcom
rcr
cli
pop
or
pop
mov
cmp
aaa
in
jno
mov
fimuls
daa
movsl
test
sbb
lds
data16
test
out
ja
cmp
pusha
insb
ja
ja
pop
int3
mov
sub
inc
int3
dec
mov
shll
fwait
ret
pop
push
lods
adc
jne
push
pop
dec
xchg
cmc
daa
stos
pop
stos
les
fnstsw
clc
jbe
lods
out
sub
daa
inc
subl
pop
add
push
sub
xor
push
call
sti
aaa
stos
adc
fstpt
and
fmull
cld
dec
dec
sub
sbb
fwait
test
push
lcall
mov
movsb
push
enter
add
pop
ss
adc
lret
dec
and
xlat
or
addl
shlb
pop
cld
cmp
in
ljmp
neg
mov
xchg
les
cmpl
inc
aaa
fnstcw
ja
or
call
push
push
clc
mov
sti
sahf
add
scas
and
mov
and
std
fwait
enter
fxch
cmp
lcall
enter
add
xchg
pop
lds
adc
dec
push
and
add
and
jg
adc
push
xor
scas
xchg
cmp
orb
add
push
insl
out
movsb
inc
fs
cmp
cmp
sub
out
xchg
jg
xchg
pop
sub
dec
popf
loop
push
pop
rcll
cmc
movsl
and
ss
lods
lcall
push
ja
and
cmp
fwait
push
xchg
push
or
loopne
movsb
loop
pop
inc
mov
sti
leave
add
pushl
cld
inc
sahf
dec
std
sub
into
inc
mov
das
jl
subb
mov
mov
pop
stc
push
jnp
or
in
pop
mov
es
daa
repz
ljmp
cmp
mov
js
scas
jmp
lret
mov
push
add
aaa
mov
jle
xchg
push
pop
sbb
lods
cmp
xchg
int3
adc
cmp
push
movsb
lretw
scas
push
cltd
test
mov
stc
shrb
daa
add
decl
xor
out
fsubrs
mov
dec
mov
sub
dec
mov
pop
repnz
out
std
add
push
jbe
std
sbb
jg
outsb
andl
sub
aaa
adc
aas
jne
out
xchg
clc
lds
pop
push
test
mov
int
ret
cmp
jno
std
cmpb
aas
fidivrs
sbb
push
mov
repnz
mov
je
and
jb
xor
negb
mov
dec
or
dec
jecxz
pop
rcl
decl
or
nop
rorl
xchg
aas
pop
icebp
negl
xchg
lcall
pop
push
rolb
and
sbb
les
into
call
add
outsb
inc
iret
fwait
jnp
mov
sbb
lods
push
sbb
shr
aam
add
decl
ljmp
loop
sbb
out
jl
xchg
or
les
push
push
ja
enter
mov
dec
fistps
xorb
push
nop
insl
inc
mov
jne
adc
mov
jle
movsb
push
pop
xchg
sbb
add
aas
push
ret
rcll
push
in
pop
pop
cmpsb
cmp
xor
pushl
repnz
dec
fiaddl
xchg
push
pop
and
out
dec
sbb
call
nop
pop
pusha
into
scas
ret
adc
mov
lahf
pop
push
push
sbb
jg
rclb
popf
shlb
sbb
scas
inc
xchg
push
in
mov
ljmp
shll
mov
jbe
rolb
sub
imul
inc
cli
aad
xchg
mov
push
incl
subb
mov
jno
nop
aas
ss
jge
daa
adc
sub
pop
lret
mov
and
aad
sub
pop
shrl
adc
add
dec
fbld
pop
mov
push
aaa
add
jne
add
int
leave
inc
bound
repz
ficoms
in
repnz
sub
or
scas
add
aad
lcall
int
dec
pop
add
in
fwait
mov
jmp
push
mov
call
jg
add
sahf
cmp
lock
mov
je
sub
xor
aaa
fisttpll
lret
pop
leave
jecxz
add
ss
aas
clc
jmp
clc
shl
int
mov
xchg
sbb
push
out
loope
call
ljmp
inc
sbb
sub
or
rcl
mov
test
mov
test
jp
fisubrl
sar
inc
xchg
jb
push
add
jne
add
dec
movsb
xchg
add
in
add
stos
stos
jbe
inc
jmp
jo
sub
out
jg
stos
push
jge
loope
jp
das
lcall
fdivr
in
jl
jns
outsb
xchg
xchg
push
outsb
pop
js
loopne
xor
mov
mov
imul
and
outsb
ljmp
push
or
leave
push
into
popf
bound
lahf
popa
cmpsb
jp
call
clc
gs
les
inc
imul
adc
movsb
mov
mov
mov
stos
cmp
movq
cmc
jecxz
xchg
mov
fs
fcmovnb
xor
or
pop
mov
xchg
daa
jg
mov
out
lcall
testb
test
repnz
lods
je
mov
ljmp
cmp
es
mov
arpl
dec
fs
or
popa
gs
ljmp
call
dec
fldl
pop
jg
jbe
jne
jno
sbb
mov
push
pop
stc
xor
out
movsb
xchg
or
push
out
out
sub
and
subb
cmp
jnp
mov
cmpsl
mov
push
mov
mov
push
popa
dec
mov
test
inc
sub
cmp
push
push
and
xchg
mov
pop
dec
and
adc
cmp
sbb
jg
pop
rcrb
or
push
sahf
addr16
movsl
jmp
add
fcoml
mov
idiv
jmp
sub
or
mov
outsb
cmp
jb
cmp
mov
jo
mul
inc
mov
hlt
push
add
in
in
adc
sbb
lock
incl
adc
aaa
decb
cltd
push
inc
test
lahf
repnz
or
pushl
push
or
mov
adc
iret
or
xchg
sti
jg
stc
push
enter
or
sub
jo
imul
out
cli
or
sbb
mov
push
iret
into
out
or
and
incb
push
out
repz
shll
dec
jne
in
mov
pop
inc
ljmp
mov
push
js
jmp
mov
int3
and
aad
xchg
les
sarl
mov
pop
pusha
sub
mov
test
jle
xor
out
fnstenv
xchg
mov
in
roll
mov
incl
dec
sti
daa
inc
int
push
out
xchg
adc
mov
int
pop
repnz
jmp
std
mov
gs
xor
sub
pop
enter
xchg
mov
int3
adc
mov
movsb
fldcw
es
subl
xchg
test
adc
xchg
mov
jg
adc
repz
aas
loop
lcall
xor
cmpsl
int
lock
lods
push
mov
popf
sti
push
call
sar
jle
inc
cld
pop
xchg
fistpll
push
pop
lret
outsl
jmp
loope
mov
push
fwait
ja
push
pop
sbb
and
insb
cmpl
xor
or
cmpsb
arpl
inc
out
push
lcall
scas
pop
or
call
test
sub
loope
les
call
dec
and
repz
inc
loope
and
cwtl
push
cs
sub
mov
fldt
add
inc
mov
cmp
lods
leave
jae
push
ljmp
xorl
mov
pop
outsl
cld
lret
mov
dec
fcoms
incl
test
jmp
cmpb
mov
es
dec
call
in
push
mov
fmul
leave
add
in
push
mov
cmp
inc
xor
les
lcall
xchg
jg
and
andl
sbb
lock
test
cwtl
add
mov
out
out
xor
das
or
cld
xor
std
mov
jb
inc
sbb
call
icebp
decl
sub
mov
push
add
inc
movsb
or
call
adc
fbld
push
gs
dec
lock
xor
add
fs
push
mov
outsb
inc
inc
repz
out
add
cmc
imul
rcll
repz
test
push
pop
push
stc
xchg
fistps
or
mov
dec
inc
adc
pop
inc
push
imul
sbbb
pushl
jg
pop
lock
or
pop
mov
in
push
loopne
and
dec
lods
cmp
cmp
dec
jns
mov
mov
jne
mov
ret
jmp
inc
xchg
add
mov
out
lea
scas
pushl
ljmp
aaa
in
mov
punpckhbw
pop
mov
push
mov
bound
xchg
insb
pushf
test
mov
and
xor
and
mov
loope
adc
sub
xchg
xchg
adc
incl
sti
cmpsl
mov
dec
or
or
dec
and
pop
aaa
pop
cmp
or
mov
push
push
fdivrl
mov
ret
sbb
rcrb
int3
std
repz
push
xchg
dec
out
out
mov
jbe
call
loopne
push
xchg
js
cld
rorl
mov
mov
jle
add
push
out
shll
and
aas
repnz
push
decl
mov
out
popf
mov
fnstenv
add
or
jg
cld
mov
pushf
enter
sub
test
das
clc
call
lock
sub
push
rcrl
xor
lret
gs
idiv
mov
sub
ss
fcoml
adc
mov
sub
jae
mov
cmp
inc
jp
cs
aad
icebp
cmp
rcrb
pusha
ret
jae
fcomip
mov
jl
or
or
das
shl
sbb
ret
add
std
push
fwait
outsb
fcompp
in
push
mov
cmc
jge
pop
ja
jmp
xchg
or
insl
pop
jns
adc
cwtl
rorb
mov
mov
pop
out
inc
jmp
inc
enter
fs
fisttps
insb
pop
cli
mov
mov
mov
popf
push
sbb
ds
jge
int3
mov
mov
and
cmp
lods
cmp
scas
out
pushl
movsl
mov
jns
jge
cmpsb
lds
dec
jae
or
out
int
sub
xchg
data16
repnz
or
add
dec
mov
mov
push
pusha
add
shrb
mov
mov
popa
mov
bts
xchg
cmp
repz
out
dec
popf
jg
lock
add
and
test
dec
test
fucomip
xor
jp
or
add
iret
andb
and
xchg
lock
pop
or
mov
int3
lahf
or
and
push
decb
dec
movl
scas
jnp
sub
inc
add
and
leave
dec
cmp
xor
repnz
fcompl
in
sti
add
adc
imull
xchg
jo
pop
or
xchg
cs
jmp
fimull
xor
and
mov
cmp
outsl
add
xor
shll
inc
icebp
and
in
mov
ret
cmp
mov
push
pop
scas
rep
mov
jg
decl
inc
dec
xor
aam
add
pop
icebp
dec
or
dec
lret
push
add
shlb
jo
cld
movsl
fbld
or
inc
mov
and
fadd
mov
or
cmp
roll
mov
mov
push
pushf
pushl
shll
fnstsw
fwait
adc
sarl
data16
adc
inc
mov
clc
inc
cmpsl
popa
mov
mov
leave
rcl
test
scas
enter
jmp
cmpsl
test
movsl
cmp
fimuls
cld
sti
jg
es
dec
xchg
mov
xor
xchg
pop
int
push
xor
lds
std
mov
movsb
inc
icebp
jns
mov
int3
push
mov
xchg
out
aaa
mov
pop
clc
jp
mov
cltd
pop
lret
in
out
sub
stc
sub
jle
fxch
and
jbe
ja
jnp
lcall
pop
add
inc
nop
push
sub
aaa
pop
inc
fidivrl
xchg
adc
xor
fisubs
xchg
sbb
sub
inc
mov
and
jae
add
mov
loopne
ljmp
rolb
std
push
push
push
adc
fimuls
mov
cli
mov
loope
fcompl
cmpsl
enter
fildll
sub
stos
inc
insb
sub
pop
shl
xchg
fidivrs
stc
out
fildll
and
inc
out
adc
stos
mov
fadds
cld
out
ljmp
sub
sti
out
jl
mov
ret
lock
mov
test
mov
inc
push
push
cmpsl
mov
jne
add
xchg
xchg
mov
push
push
pushf
mov
mov
aas
inc
data16
mov
clc
xlat
pop
mov
loop
fadds
xor
fcomp
jb
inc
jb
mov
mov
sti
fisttps
sbbb
stos
push
or
lods
dec
dec
push
sti
imulb
into
pop
outsb
fcmovu
mov
mov
sbbl
pop
jp
cs
and
lahf
jmp
loopne
test
sub
mov
mov
je
cld
xchg
test
incl
or
adc
leave
pop
stc
fs
mov
sub
jno
push
movsb
and
sti
pop
xchg
jg
mov
out
dec
out
cli
gs
repnz
cmp
cmp
dec
ret
dec
cli
and
ljmp
popf
into
in
flds
sar
sub
mov
sarl
dec
xchg
imul
decl
ret
gs
mov
mov
cld
dec
rolb
mov
ljmp
add
dec
mov
incl
xor
mov
aam
inc
dec
xchg
lahf
mov
rolb
mov
incl
xchg
fisubl
roll
mov
or
lods
scas
jge
das
xor
call
and
cmpsb
xchg
jae
cmp
dec
loop
aaa
fidivl
mov
dec
or
mov
mov
call
cmp
lret
dec
scas
or
popf
jae
shlb
fbld
das
jle
ss
xor
fnstenv
xlat
incl
inc
add
cmp
sarl
cld
shrl
rorl
cmp
ret
aas
mov
cmp
hlt
scas
pop
iret
push
ret
lret
call
mov
out
sub
xor
inc
lcall
jbe
cli
in
xchg
mov
bswap
pop
movsb
outsl
movl
pop
movb
and
push
and
and
cmp
add
insl
mov
aam
fs
inc
cmpsl
pusha
mov
jge
sarl
arpl
adc
scas
jl
push
jae
mov
subb
jae
sti
test
push
jnp
mov
pop
addr16
int
xchg
lret
in
lods
outsb
ja
mov
pop
xchg
xchg
add
ja
mul
push
jg
inc
push
outsl
lcall
lret
xchg
ljmp
xchg
mov
jl
mulb
mov
lret
in
ljmp
jbe
scas
mov
pop
stc
mov
sahf
repnz
push
and
and
lret
pop
adc
jbe
fs
dec
adc
jle
out
jg
call
addr16
sub
pop
lock
dec
aaa
mov
arpl
mov
mov
adc
in
aaa
sarb
add
sbb
scas
cld
lret
pop
cmp
loopne
std
dec
mov
inc
nop
hlt
cmp
xchg
cltd
cmp
sbb
mov
adc
addb
stc
lret
in
or
stc
add
in
andl
xor
mov
adc
push
xor
negb
insb
push
icebp
pop
repz
jle
outsb
add
in
test
mov
jne
mov
jbe
aaa
bndldx
push
idivb
pop
sub
inc
push
repnz
data16
or
fmuls
in
xchg
dec
rdtsc
repnz
fnsave
adc
fisttpl
daa
fisttps
fimull
and
call
xor
fmull
jg
stos
add
lds
inc
jb
out
dec
stos
das
lret
xchg
jmp
adc
incb
in
mov
in
ds
daa
das
add
decl
aam
aas
xor
mov
fsubrs
add
fidivs
xlat
cmpsl
pop
repnz
jle
push
js
add
out
mov
and
stc
xlat
not
ds
loop
cld
fxch
jo
xlat
jns
inc
mov
shrl
adc
mov
rcrl
sbb
mov
mov
fisttps
mul
jecxz
cmpb
adc
out
xchg
inc
scas
jae
push
daa
mov
hlt
jl
adc
sbb
das
insl
cmp
jp
cmp
pop
mov
fs
ljmp
insl
cmpsb
out
leave
nop
add
push
xchg
outsl
inc
jns
jnp
jecxz
aam
into
cmp
clc
xchg
das
inc
mov
push
paddsb
cwtl
decl
lock
lods
movsl
inc
pop
push
push
into
mov
incl
pop
xorl
leave
je
push
push
into
outsl
push
fwait
int
or
decl
cmpsb
stc
xor
call
pushl
leave
mov
inc
popf
ret
inc
andl
lret
cli
ljmp
push
shlb
dec
sti
cwtl
call
push
sub
ds
lods
mov
lret
notl
test
les
lcall
sbb
lret
mov
jae
test
sti
add
in
pop
xchg
fisttpl
call
inc
mov
dec
push
add
sub
adc
call
in
into
lcall
lcall
push
rclb
xchg
xchg
lds
pop
lock
fidivrs
out
test
pop
xchg
movsb
aas
mov
dec
pop
pushf
inc
jg
dec
and
jmp
cwtl
and
popa
pop
dec
iret
lods
push
das
dec
shlb
jl
add
ss
fwait
subb
fcompl
cmpsb
mov
push
jnp
fwait
in
mov
mov
incl
jne
clc
daa
cmc
lods
and
jo
mov
test
cmp
call
mov
jl
ds
jle
push
hlt
pop
ret
mov
inc
mov
or
incl
adcl
xchg
inc
pop
cmp
in
inc
dec
xchg
incl
adc
xlat
mov
sub
or
mov
jecxz
cli
mov
pop
call
push
and
jb
inc
lods
lcall
std
jmp
cmp
int3
mov
call
jl
mov
aas
jo
inc
decl
add
jecxz
shl
add
pop
stc
lock
mov
in
adc
in
sub
pop
xchg
mov
pop
repnz
lcall
call
push
sti
cld
mov
mov
and
and
push
or
rcrb
inc
jg
jae
lods
cltd
push
pop
aaa
outsl
lahf
ds
mov
sar
rclb
adc
mov
lea
push
cmp
pop
mov
pop
xchg
pushl
push
jns
fcompl
mov
mov
sahf
fcomps
loop
jmp
mov
mov
xor
add
push
incl
fistpll
fcmovu
mov
jle
inc
adc
aad
aas
addl
lret
lret
mov
inc
int3
sbb
dec
sahf
inc
mov
add
xchg
xchg
popa
mov
in
mov
lcall
es
hlt
hlt
std
mov
fwait
adc
cmp
cmp
mov
inc
fsubl
push
outsb
fisubs
jnp
push
call
fstpt
mov
jl
sti
ficoms
inc
push
test
cmp
out
stos
xor
sbb
or
hlt
call
movsb
fldt
fs
in
paddusb
sahf
and
insb
xor
std
lods
orb
lcall
in
pop
xchg
ret
ljmp
add
aaa
in
cmp
mov
pop
sbb
mov
jmp
test
das
loop
int3
por
in
xchg
int
inc
jge
mov
push
jbe
cli
cmpsb
mov
and
cs
leave
in
mov
cltd
mov
ljmp
ljmp
mov
rorb
movsb
xor
decl
adc
cmp
mov
movsb
xor
jecxz
and
dec
xchg
pop
ret
mov
orb
in
mov
call
xor
test
xor
jo
adcl
cmp
cmp
add
push
add
and
sahf
push
inc
shl
inc
in
inc
mov
nop
shrb
in
fistl
std
jg
dec
fdivrl
lret
or
push
enter
mov
xlat
inc
mov
push
cmpb
mov
in
decl
fsubrp
enter
jb
mov
or
sub
inc
xchg
cmp
cmp
shll
xor
fnstsw
sub
ljmp
or
dec
mov
and
xor
inc
jnp
push
lock
add
popf
xor
mov
mov
dec
push
mov
and
cwtl
and
adc
and
rorb
xchg
dec
je
shll
mov
sbb
imul
call
sarl
cld
cmp
mov
mov
or
xor
mov
and
mov
jl
rcrl
rorl
imul
pop
popa
mov
sub
incl
sbb
mov
pop
add
mov
aaa
out
mov
push
push
mov
pushl
mov
xor
xchg
test
mov
lock
and
rol
push
ficomps
jo
scas
call
dec
add
call
addr16
popl
adc
outsl
dec
roll
lods
loopne
testl
cli
mov
pop
mov
xor
sub
shr
mov
or
mov
dec
mov
jecxz
nop
call
loopne
filds
les
imul
dec
stos
cli
mov
shl
loope
pushl
sub
xor
scas
in
mov
js
mov
xchg
cmp
xor
decl
sbb
cmp
and
out
mov
pop
cmp
xchg
sbb
cmp
lea
in
dec
out
mov
cwtl
nop
dec
leave
popa
xor
cld
add
or
push
dec
imul
inc
ret
add
cmpsl
pop
add
hlt
fcomip
cmp
adc
cmp
inc
mov
ds
mov
lock
icebp
jp
xchg
dec
out
nop
arpl
cmpsb
cmp
fcompl
xchg
or
xor
lret
pop
outsl
rcr
clc
out
inc
mov
popa
out
xchg
cmp
xchg
jp
mov
xor
xor
jl
pop
inc
rcrb
jb
cli
dec
int
lret
iret
out
lods
xor
cmpsl
insb
pushl
dec
mov
sbb
xlat
stc
adcb
sub
or
sub
jmp
enter
mov
xchg
or
out
imul
add
jg
lahf
sub
jae
add
push
pop
clc
and
in
popf
sbb
aaa
cmp
cmp
pushf
daa
or
ret
sbb
pushf
xor
or
xchg
pop
es
sub
xor
xchg
xor
cmp
push
mov
push
cli
ljmp
adc
pop
pop
ljmp
sbbb
out
or
call
jecxz
fwait
pop
mov
jg
cmp
jp
movsl
stos
js
adc
push
add
dec
sub
xchg
ficomps
scas
pop
mov
jl
xchg
jnp
out
sub
movsb
dec
loop
pop
cmc
mov
inc
push
outsb
jp
fnsave
xor
jg
fucomp
addr16
ljmp
fistps
add
pop
pushf
jle
push
out
ror
outsl
loop
loopne
test
data16
pop
in
mov
or
out
xchg
mov
ud0
mov
adc
andl
pop
leave
ds
xor
cmp
mov
add
add
mov
dec
or
ljmp
or
dec
xchg
sbb
or
rorb
out
decl
jp
mov
jnp
pushf
xchg
mov
cmpsb
outsb
cmp
out
insl
jge
and
xlat
fcoms
mov
sub
cmp
inc
in
imul
push
cmp
cmpsl
inc
xlat
push
clc
fstps
and
hlt
sbb
es
sbb
jnp
pop
std
jmp
mov
lods
xchg
xchg
lods
iret
fs
mov
xchg
sbb
push
cmpsl
cmp
out
ror
popf
mov
xor
mov
sbb
sar
decl
jbe
pop
dec
out
inc
mov
xor
add
movsl
rclb
iret
icebp
ds
out
cmpb
xchg
scas
shll
cld
fisubrs
jnp
jns
or
xor
jg
inc
rcrl
inc
scas
jbe
loopne
je
js
test
fbld
mov
data16
outsb
inc
movsb
fisttps
lock
ljmp
xchg
mov
lret
cmp
mov
adc
out
push
lods
pop
jbe
icebp
pop
sbb
cs
clc
aaa
jl
fs
mov
cmp
mov
mov
scas
shrb
int
adc
and
arpl
pop
or
xchg
cmp
scas
ja
sub
adc
scas
jae
adc
test
repz
decl
loopne
mov
loopne
popa
arpl
dec
xchg
roll
fistpll
inc
sahf
aam
jb
adc
filds
mov
std
addr16
pop
cmp
push
xchg
out
int
std
mov
jmp
pop
test
int3
pandn
cmp
in
or
jl
jns
mov
call
mov
jmp
jnp
jnp
loop
aam
movsl
decl
jp
inc
sub
clc
imul
clc
lcall
inc
ss
pop
jmp
js
hlt
sbb
adc
jg
ss
mov
rcrb
xchg
pop
xchg
xchg
add
xlat
xchg
push
fimuls
lea
cld
pop
call
or
loopne
cld
rorl
scas
and
in
or
cmp
mov
out
popa
push
movsb
add
int3
mov
loope
fcoms
jg
lods
pop
rorb
inc
std
push
sub
xchg
and
xchg
push
stos
mov
pop
lock
decl
push
sub
mov
or
pop
sub
pop
adc
cmpsb
std
fisubs
and
inc
into
mov
push
adc
cmpsl
mov
daa
div
popa
inc
incl
adc
stos
es
clc
sub
loop
test
push
cmp
push
xor
inc
cltd
jb
pop
movsb
mov
movsl
pop
decl
push
shr
aam
jg
sub
cmp
popa
pop
in
pop
sub
scas
mov
pop
jg
mov
pop
cmp
out
mov
in
sub
xor
outsb
push
pop
or
lds
sti
jbe
repz
cmp
mov
dec
ss
jns
or
decl
out
mov
scas
and
pushf
mov
push
adc
push
cmc
adc
clc
das
push
cld
ja
rcll
outsb
rcrl
jge
stos
outsb
arpl
xchg
ljmp
test
and
mov
pop
icebp
es
out
jg
pop
jnp
clc
scas
out
ret
inc
movsb
mov
cmp
pop
stos
or
ljmp
sbb
ss
sub
sub
fmuls
sbb
and
push
push
incl
add
repz
inc
lea
addr16
test
add
push
divl
xchg
inc
mov
inc
std
jmp
mov
movsb
lock
cmp
fs
movsl
loope
xor
cmpsb
cmp
lret
xchg
mov
fstl
push
push
std
sub
pop
mov
js
clc
pusha
xlat
xor
mov
sub
mov
hlt
dec
test
xor
scas
pop
rcr
jg
jae
adc
movsl
pop
jmp
fs
push
xor
out
test
pop
jmp
fwait
lahf
add
jns
push
ds
push
pushf
xor
aas
fdivrp
dec
pop
jg
mov
nop
rorb
jae
inc
test
sub
jmp
mov
xor
xchg
cmp
fstpl
xor
ljmp
nop
mov
mov
pop
and
and
xchg
dec
aad
jnp
mov
jae
aad
mov
leave
aaa
or
aam
fistps
fdivrl
decl
and
icebp
daa
dec
mov
mov
pop
cmp
mov
dec
dec
lahf
iret
out
clc
inc
xchg
cmpsl
std
mov
or
clc
dec
mov
pop
pushl
std
mov
jl
negl
mov
sarl
lock
lods
loope
add
xlat
pop
shll
sti
outsb
loopne
mov
cld
sub
mov
pop
loop
sub
scas
fldcw
jb
cmpsl
jg
mov
xchg
or
les
adc
pop
in
aaa
das
movb
cli
xchg
cwtl
stc
ss
jecxz
add
and
or
mov
or
sub
ljmp
lock
int
pusha
repz
in
pop
jg
mov
and
mov
cmp
and
pushf
stos
rolb
ror
add
add
xor
ficompl
call
std
addr16
and
push
cmp
insb
mov
mov
adc
pushl
jmp
push
cltd
out
les
cmpsb
test
sub
jo
scas
imul
push
rorl
add
mov
vpaddb
loop
lock
lds
sbb
pop
cmpsb
testl
cmp
add
dec
out
jb
jmp
and
ja
loop
push
notb
xor
jmp
xchg
cld
mov
cmc
insb
push
xchg
sbb
repz
decl
xor
push
std
hlt
xchg
rcrl
fsubrl
ljmp
std
das
test
pop
rcrl
cmp
push
xor
jmp
cmp
ss
out
mov
add
stos
or
fisttps
mov
mov
push
dec
enter
out
adcb
ljmp
mov
fisubs
shll
xchg
xchg
daa
rol
sub
inc
xor
cmc
mov
cli
fildll
cmpb
je
fsubrp
sub
andb
push
fistpll
lods
mov
orb
or
mov
jle
mov
dec
fists
jno
sub
adc
mov
jl
hlt
test
jp
mov
mov
push
stos
and
push
int3
xchg
sub
sbb
add
mov
loope
scas
push
rcr
mov
shlb
and
sbb
fsubrs
testl
jg
push
sub
xchg
and
xchg
push
test
add
cmp
mov
mov
xor
notb
jg
pop
inc
sub
int
cmp
lret
iret
mov
out
cmp
sub
test
pushl
add
jbe
fisubs
imul
adcb
jle
ljmp
clc
out
test
das
jmp
mov
mov
sub
jne
mov
adc
pushl
shrl
jmp
pop
mov
jns
and
stos
push
popf
mov
cmpsb
pusha
mov
inc
dec
scas
push
dec
std
dec
adc
shll
jo
jo
imull
push
loop
pushl
insb
mov
popl
jle
outsb
test
push
cltd
mov
loop
nop
push
clc
push
mov
testb
xchg
filds
cmp
cmpsl
into
out
sub
jb
icebp
insb
cmpl
incl
scas
cwtl
mov
loope
test
mov
jmp
rorl
add
ret
push
ret
adc
mov
sbb
decl
cmc
sub
mov
mov
iret
push
mov
int
mov
mov
fimuls
sub
xchg
es
mov
jg
mov
sbb
inc
lds
rcrl
leave
stos
xchg
sti
jl
popa
fs
push
push
or
jle
or
xchg
mov
lcall
inc
loop
pop
pop
js
sub
sbb
inc
dec
mov
jecxz
pop
mov
mov
jg
lock
or
mov
rcl
shrl
xor
cs
orb
ds
mov
test
inc
jno
mov
pop
adc
cmpsb
sub
jmp
push
add
mov
lods
and
lods
cmp
xor
inc
mov
das
mov
jb
cwtl
ret
mov
lods
push
cmp
mov
loopne
lcall
dec
lods
fld
xchg
loopne
inc
mov
add
loop
jecxz
fs
sub
cmpsb
or
and
xchg
pop
jmp
imul
out
jg
ljmp
sub
cmpsl
fnstenv
cmpsl
pop
call
scas
mov
pushf
stos
gs
sar
add
inc
and
fcompl
pusha
clc
sbb
mov
cmc
fwait
fs
and
les
incl
iret
xor
sub
pop
fnop
loop
js
mov
dec
add
sbbl
call
call
popl
push
ret
test
sub
jne
lods
add
mov
negl
clc
insb
mov
and
xchg
lret
jae
dec
cld
pop
in
inc
ja
inc
test
cwtl
icebp
ljmp
adc
repnz
fbstp
dec
lods
dec
loop
push
xchg
and
outsb
int3
loope
mov
out
daa
icebp
pop
mov
jb
scas
or
push
xchg
adc
test
cs
ds
rolb
add
dec
mov
mov
subb
push
sub
pop
push
add
add
add
incl
adcl
icebp
sbbb
cmp
pop
push
loope
mov
cs
decl
mov
fwait
xchg
shrb
xchg
mov
pop
jb
pusha
xchg
cltd
inc
jns
mov
sub
push
or
call
inc
ret
add
shlb
mov
sub
hlt
ds
mov
cld
imul
mov
pushl
add
sahf
mov
mov
roll
aam
push
ja
cld
pop
fs
or
jmp
jno
stos
arpl
pop
stos
pop
cmp
xchg
adc
jg
adc
inc
dec
ficoml
dec
sbb
adc
pop
mov
pop
jnp
clc
psubsw
das
out
jl
jnp
mov
fmulp
call
jnp
ret
int3
call
cmpsb
shrb
ljmp
ret
cs
in
das
subb
lods
je
inc
push
test
xor
or
inc
push
ljmp
lret
in
cmp
dec
mov
sub
sbb
jmp
inc
mov
pop
or
mov
or
jbe
adcb
ficomps
push
loopne
and
push
mov
xchg
jge
mov
add
ds
ljmp
sub
mov
jle
jmp
jge
ss
aam
call
std
stc
scas
into
jbe
loop
jb
arpl
xor
and
add
call
mov
daa
les
testb
push
push
cmp
sar
incl
ret
cmp
loope
unpcklps
dec
dec
adc
dec
negb
enter
mov
mov
jae
xchg
sub
sbb
shlb
xor
es
mov
inc
jbe
jnp
lock
hlt
in
mov
ret
stc
push
inc
xchg
cmpsl
xchg
movsl
dec
ljmp
stc
out
xor
mov
sbb
push
xchg
pop
pop
test
lahf
pusha
cmp
inc
or
cmp
es
jl
pop
mov
cld
ljmp
repz
sbb
xchg
mov
jg
dec
in
movsb
mov
loope
in
pop
inc
movsl
pushf
xchg
and
mov
sbb
sbb
js
push
js
pop
add
add
ja
jb
mov
ljmp
mov
or
test
push
cmp
jae
and
mov
jno
inc
cmp
jb
jnp
mov
je
inc
jp
pushl
mov
sbb
xchg
inc
cltd
push
mov
mov
lods
push
lahf
jl
pop
fbstp
add
xor
mov
leave
test
fnstcw
jne
cld
mov
jmp
mov
pushf
push
je
push
pop
mov
mov
xor
lret
stos
pop
mov
xor
das
loop
popa
jae
fistpll
sub
cld
xchg
dec
into
pop
sarb
decl
add
jecxz
pop
repnz
pop
cmp
xor
ss
notl
add
and
decl
jae
dec
js
test
rorl
sub
inc
mov
les
push
mov
sub
jb
ret
cmpsb
popf
dec
sub
pushl
mov
jnp
pop
mov
fsubp
sub
pop
mov
cmpsb
stos
jl
sarl
and
sbb
inc
icebp
jno
sbb
dec
adc
insb
inc
pop
sub
rolb
mov
cs
call
pop
jp
pop
data16
adc
mov
ret
jmp
pushl
xchg
insl
mov
jae
xor
jae
stc
rcrb
dec
lods
lods
sbb
dec
stc
jp
hlt
and
or
rorl
cli
test
pop
cmpsb
xchg
hlt
imulb
aas
les
ljmp
dec
push
inc
push
adc
xlat
mov
test
pusha
mov
decl
lds
ret
xor
and
int3
jns
sbb
inc
repz
jg
add
jg
push
xorb
sbb
jbe
mov
mov
inc
push
je
outsb
js
add
cmp
cwtl
sbb
das
xor
fwait
mov
mov
inc
xchg
mov
aam
lcall
inc
push
enter
test
xchg
adc
mov
xor
cmpsl
pushf
mov
or
inc
add
incl
ud1
ds
and
sub
xor
sbb
push
movsl
add
imul
and
aaa
xchg
imul
call
addr16
inc
lahf
jge
mov
test
push
mov
mov
and
cld
ljmp
xor
js
or
mov
adc
out
mov
dec
jmp
and
pop
cmc
jl
or
or
aad
test
clc
pop
inc
sarb
scas
loope
dec
fildl
or
repz
call
mov
and
iret
push
mov
xchg
or
lahf
pop
out
jl
scas
add
jae
sahf
iret
dec
fadds
mov
dec
mov
ja
adc
and
cmp
mov
lock
hlt
jge
pop
lods
orb
aas
mov
inc
cmp
inc
inc
repz
js
dec
or
jb
ljmp
xor
inc
dec
add
cmp
aam
mov
or
add
int3
sbb
and
lods
pop
xchg
push
mov
decl
mov
jecxz
cmp
fdivs
rorb
add
in
sub
adc
dec
outsl
or
push
sar
jg
or
cmp
sub
xchg
rclb
outsb
and
decl
mov
xchg
fwait
leave
das
jecxz
scas
mov
shll
mov
inc
xchg
icebp
decl
inc
sub
mov
daa
dec
cwtl
ror
and
aaa
add
cmp
mov
mov
loop
cmp
imul
or
xor
rorl
and
lcall
pop
mov
andb
push
jb
mov
cmp
mov
inc
fdivrs
scas
jb
xor
scas
decl
fidivrs
fsubs
imul
loopne
and
stc
pop
orl
ret
inc
xchg
jno
sbb
rcrl
xor
sbb
int3
mov
in
fmulp
and
push
add
fwait
mov
fs
adc
push
aas
xor
pop
xor
je
loopne
jmp
pop
sbb
enter
movsb
iret
cs
movsb
mov
nop
inc
mov
jo
jne
mov
mov
pop
xorl
lcall
mov
cmp
fwait
lods
cmpl
add
popl
mov
jp
jg
mov
cmp
xchg
mov
rcrb
cmp
dec
imul
call
aas
push
mov
sub
jno
lea
add
mov
cmpsb
testl
mov
cld
push
cmp
or
aaa
lret
sbb
inc
mov
inc
pop
mov
ljmp
out
mov
push
dec
stos
movsl
or
push
adc
mov
sbb
pop
mov
sub
xor
loop
dec
stos
mov
sar
push
test
adc
ljmp
cmc
das
add
sub
clc
pushl
test
or
scas
or
jle
out
xchg
sbb
pop
stos
call
jbe
incl
in
mov
mov
test
jb
mov
and
pop
sub
sbb
pop
loopne
dec
mov
je
jp
or
xor
mov
fistpll
out
cmp
jmp
test
inc
xchg
es
sub
or
cli
je
out
xchg
pop
push
and
fcomip
push
adc
sub
lahf
xchg
jo
les
add
fcomip
ljmp
inc
adc
movsl
dec
pop
inc
scas
faddp
in
dec
jb
and
xor
mov
xlat
cmpsl
xor
xchg
jb
mov
loopne
dec
push
mov
mov
xor
ja
nop
xor
call
push
or
lret
xlat
mov
mov
or
mov
ds
cmpsl
lds
fiadds
sbbb
popf
mov
repnz
xlat
dec
mov
lcall
sarl
daa
jne
xchg
pop
sysret
sti
add
sub
or
negl
pushl
push
mov
ljmp
mov
push
jae
push
cmp
fldl
mov
pushl
mov
movsl
xchg
xchg
mov
pop
add
pop
dec
jg
loop
mov
xor
adc
pop
sbb
and
test
daa
cmp
std
jmp
xor
mov
out
loope
call
repnz
mov
andl
mov
xor
sbb
adc
shll
push
cmpl
movsl
call
cltd
xchg
incl
ss
or
sar
cs
push
mov
dec
mov
mov
push
test
push
lahf
and
xor
outsl
fisubrs
ret
mov
imul
int
sbb
cmp
sub
outsl
mov
cmpsl
repnz
imul
jb
sub
insl
sub
call
andl
dec
dec
xchg
push
pop
pop
ss
jnp
out
or
push
lcall
and
in
and
les
xor
inc
inc
add
jmp
call
add
iret
sbb
loopne
hlt
jbe
jbe
dec
mov
dec
and
outsl
incb
jle
dec
inc
xor
lahf
inc
jmp
pop
lcall
ljmp
ffreep
jb
cwtl
xor
inc
out
pop
cmp
shll
or
mov
jno
ljmp
add
lds
pop
pop
inc
mov
lods
ret
sar
fwait
incb
imul
dec
fs
push
mov
lock
inc
pop
std
or
rcrb
movb
cmp
adc
inc
push
pop
mov
dec
cmp
dec
loop
int3
incl
and
sub
loopne
mov
testb
pusha
lods
mov
in
imul
call
pop
inc
and
into
xchg
test
lret
push
pop
pop
mov
lods
int3
lock
je
pushf
mov
lock
mov
cmp
gs
ss
scas
es
call
dec
dec
and
cltd
call
sub
test
ret
filds
stos
fwait
lock
jmp
test
loopne
and
inc
xchg
cwtl
enter
aam
ljmp
lcall
iret
push
or
cmp
add
call
cmp
dec
and
mov
popf
and
sub
push
iret
jmp
jnp
dec
call
lods
mov
mov
les
mov
incl
insb
pop
cmp
mov
pop
pop
mov
mov
sbb
outsb
lcall
rorb
cmp
cmp
mov
gs
pop
into
loope
jg
add
aas
in
rcrl
adcb
sbbl
cmp
mov
ja
in
inc
mov
jns
jl
pop
xor
call
sbbl
cmp
lds
lahf
pop
push
add
jb
adc
iret
mov
clc
pushl
pop
xchg
pop
mov
mov
mov
movsb
lods
in
and
lds
inc
push
cmc
out
push
ficoml
in
gs
or
mov
cld
pop
jns
add
test
insb
movb
out
mov
or
ffreep
je
cltd
or
call
mov
xchg
sti
jg
jae
insl
cld
decl
xor
mull
daa
aad
xor
test
sbb
aaa
push
cmp
mov
adc
cmp
push
sbb
mov
aam
sbb
dec
and
add
jo
call
cld
mov
jge
notb
or
notb
xor
jno
fwait
clc
cmp
int3
jnp
push
test
ret
xchg
sub
insl
test
addr16
add
xchg
jmp
dec
out
js
jle
pop
pop
sub
sbb
test
lods
out
and
pop
cmpsl
jg
ret
add
call
and
das
mov
dec
xchg
cs
mov
pop
jbe
xor
gs
mov
sbb
mov
jbe
sbb
add
or
aas
sar
and
mov
push
mov
add
arpl
sar
clc
pushl
shrb
push
mov
mov
jl
mov
loop
cmc
call
outsl
push
sub
sub
mov
insl
jge
xor
push
out
incl
push
loop
lods
push
push
scas
xchg
sbb
cwtl
cmp
sbb
pop
call
pop
ljmp
icebp
dec
adc
dec
mov
mov
outsl
mov
xor
mov
lcall
jle
sbb
clc
sti
dec
xor
into
add
cmp
cmp
jmp
in
adc
out
jp
enter
mov
or
inc
mov
scas
insl
std
xorb
or
sub
and
in
cmp
pop
xchg
lret
jb
xchg
outsl
cmp
mov
cmp
jg
les
mov
icebp
mov
adc
ds
loopne
insl
inc
icebp
mov
icebp
es
mov
mov
jge
jmp
ss
std
decl
lahf
xchg
sub
add
or
int
jb
ljmp
incl
data16
cmp
sub
mov
and
add
or
pop
in
dec
xchg
or
jb
out
jne
inc
fcoms
or
xor
in
mov
or
mov
add
mov
ss
mov
std
pushl
leave
cmpsl
pop
mov
in
sahf
xchg
xor
gs
or
cmpsb
ljmp
xchg
mov
cmpsl
push
xchg
insl
test
mov
jmp
jecxz
int
jne
cmp
in
scas
xorl
outsb
or
scas
les
fsubs
lds
xchg
rorl
mov
sarb
push
or
cmp
call
lcall
shlb
sub
cmpsl
jb
push
pop
faddl
mov
mov
dec
cmp
cwtl
mov
mov
or
cmpl
outsl
aam
jb
mov
lds
ja
int
outsb
push
sub
jg
jbe
xchg
ljmp
or
movsb
jne
push
insl
in
fisubs
inc
rcll
xchg
mov
and
mov
lcall
mov
mov
or
scas
mov
mov
pop
inc
sbb
cld
jg
arpl
mov
inc
add
mov
jo
insb
data16
jg
repnz
sarb
add
fildll
mov
push
rcrb
mov
sti
jl
sub
cmp
xor
mov
icebp
mov
daa
add
insl
inc
dec
cmp
loope
call
pop
xor
je
jb
xchg
jg
and
fbld
jmp
dec
push
mov
lret
mov
ret
xor
lock
jp
dec
mov
jge
or
dec
es
out
push
xchg
mov
mov
xlat
movsl
jae
pop
mov
jg
xor
xor
cmpl
hlt
outsb
cmp
sbb
test
lds
mov
mov
sub
add
adc
mov
xchg
push
nop
add
mov
sar
xchg
jle
daa
push
or
cmp
out
popl
adc
sub
jmp
mov
adc
xchg
lahf
mov
jmp
lods
dec
in
lahf
inc
lods
mov
ss
enter
jp
jle
push
insl
lret
or
fwait
mov
lcall
pop
fistps
cmp
and
pop
in
mov
lods
cmc
ret
xor
sub
lock
push
ret
ljmp
test
inc
arpl
lret
and
mov
adc
mov
cwtl
add
sbb
imul
ret
jg
leave
shrb
add
inc
mov
mov
ja
in
mov
cmpsb
clc
pop
cs
out
jne
into
cmp
mov
xorb
jle
or
inc
in
jg
jle
ret
or
mov
push
rcll
in
fmuls
pop
mov
notb
mov
pushl
popa
adc
in
mov
mov
popf
dec
inc
mov
mov
push
xchg
lea
aaa
xchg
push
sbb
push
mov
xor
xchg
roll
pop
cld
dec
ficoml
loope
cmp
xchg
ds
stc
rorl
xor
insl
mov
mov
sahf
sbb
add
mov
ds
push
popa
xor
pop
sbb
sub
mov
loop
rclb
icebp
push
sub
nop
movsl
mov
sbb
aaa
daa
mov
xor
decl
clc
push
sbb
sbb
movsb
xchg
cmc
pop
and
out
cmp
incl
loope
stos
popa
ja
push
xchg
idivb
negb
inc
cltd
add
jmp
lahf
or
adc
sbb
push
js
das
sub
lret
mov
mov
cmc
rorb
mov
xchg
adc
jno
out
test
sahf
leave
inc
xchg
pop
lock
call
pop
cmp
loop
xchg
push
out
dec
xchg
orb
les
lds
fisttps
mov
daa
in
mov
cwtl
cmp
or
jmp
mov
mov
xchg
cs
xchg
dec
das
pop
sbb
ljmp
inc
push
in
or
mov
pop
xor
fadd
xor
and
arpl
lcall
inc
jmp
es
push
pop
dec
lret
or
int3
addb
cmpsl
xor
or
xchg
out
sbbl
decl
iret
addr16
insl
pop
ja
lods
popf
mov
push
pushf
je
cmpsl
fisttps
ljmp
dec
scas
or
out
loop
xor
cld
pushl
jns
out
xor
dec
lcall
aam
xlat
pop
adc
pop
cmp
jg
or
out
aaa
test
lds
ret
pop
dec
mov
ljmp
and
or
xchg
mov
mov
xchg
jo
cmp
jg
incl
dec
mov
into
les
mov
jae
or
data16
cmpsb
jp
xor
cmpsb
jg
xchg
adc
cmp
stos
lret
inc
pop
xchg
pop
call
mov
jge
push
leave
es
cmp
outsl
dec
fwait
mov
icebp
scas
cs
pop
mov
lods
cwtl
pop
inc
pop
adc
jg
pop
jp
imul
in
movsb
dec
mov
push
jmp
mov
sub
mov
xor
in
sbb
mov
dec
fisttpl
icebp
lods
jo
sbb
sbb
pop
scas
jl
cwtl
lahf
mov
loopne
call
call
mov
loop
mov
push
lock
xor
ffreep
fbld
jge
ss
outsl
lahf
es
fists
in
mov
les
int3
push
je
and
orl
sbb
call
in
xor
push
dec
mov
push
jge
imul
scas
stos
cmc
jg
popa
mov
or
pop
mov
adc
mov
in
ljmp
loopne
cmpsl
pushf
pop
daa
mov
add
in
inc
pop
pop
push
cs
dec
pop
jl
in
inc
inc
add
mov
stos
fcomps
ljmp
mov
in
pop
loope
sbb
out
inc
ljmp
ljmp
popf
or
movb
js
sarl
xchg
mov
cmc
in
mov
ret
movsb
cmp
sbb
lock
pushl
xor
shlb
xlat
pop
jecxz
mov
sub
cmp
push
fwait
movsl
jg
mov
movsb
ret
jbe
lods
xchg
dec
out
in
ds
cmp
jmp
jg
incl
data16
insb
push
cmpsb
xor
pop
lods
adc
dec
or
incl
jo
inc
movsl
nop
push
adc
in
mov
cmp
mov
add
pop
jp
dec
push
jecxz
add
xor
stos
push
cmp
mov
popa
pusha
aam
jg
lock
es
stos
in
xor
pop
sub
jmp
sbb
test
mov
movsb
fdivr
gs
push
out
sub
clc
jmp
cmp
gs
add
pop
inc
mov
ja
cli
mov
hlt
cmpsl
mov
cwtl
dec
pop
outsl
cmp
in
push
and
in
inc
push
imul
lea
call
rcrb
scas
into
dec
adc
out
pop
mov
inc
add
mov
sub
mov
mov
or
es
mov
ror
jo
cmpsl
pop
fcomip
cmp
add
sub
cs
add
mulb
bound
clc
mov
pop
jb
ljmp
mov
fcomp
jge
lret
add
dec
popa
enter
mov
in
mov
jae
aaa
jnp
cmpsl
sbb
mov
dec
push
int
fadds
aad
push
lods
or
mov
fwait
cmp
shll
mov
andl
cmc
test
lods
add
sub
cmpsb
sbb
call
add
inc
cmp
lret
cmc
rcrl
mov
mov
add
stos
aad
mov
idiv
jmp
mov
xchg
mov
lahf
add
popa
cmp
insb
mov
sbb
scas
mov
int
ljmp
jbe
lcall
hlt
fwait
adcb
sub
cmp
dec
lods
ret
pop
dec
inc
popa
sub
cmc
movsl
sbb
xchg
ret
addb
inc
je
aam
jg
daa
inc
sub
push
lds
cmovb
dec
rol
cmpsl
lock
incl
jl
cwtl
stc
es
or
and
fisttps
push
rorb
or
loope
decl
decb
fnsave
into
or
xor
lods
cld
ret
push
imul
inc
hlt
fsubs
jb
fists
push
pop
add
enter
jle
ffreep
mov
daa
lahf
dec
cmp
sub
mov
ljmp
pop
sti
mov
jnp
ljmp
xchg
adc
jne
mov
gs
in
push
cld
mov
fs
xor
and
lds
clc
pop
fcomip
sub
ja
adc
ret
mov
test
out
inc
sub
lcall
xchg
call
mov
mov
push
pop
cmp
sub
and
adcl
cmpsb
mov
mov
ret
inc
std
sub
xchg
xor
lcall
dec
scas
movsb
jnp
mov
jg
push
xchg
jl
sub
ds
enter
pop
fldenv
xchg
adc
inc
adc
pushl
or
push
pop
mov
outsl
add
lcall
loope
insb
mov
insl
clc
xchg
xchg
cmp
ret
xchg
loop
hlt
cmpsb
pop
ljmp
mov
fisubrl
mov
add
and
jns
dec
idivb
imul
mov
pop
mov
repnz
out
clc
mov
pop
sbbl
cmpsb
shrb
aas
es
fistpll
cli
insl
mov
fwait
and
push
pop
xor
jno
imul
xor
pushl
lods
dec
inc
out
pcmpeqb
in
movsb
cmp
cmp
nop
movsb
pushl
sbb
fs
push
sbb
sbbl
cmp
jg
lds
cmc
xchg
pop
fstps
mov
fstps
stc
std
or
dec
or
cmp
or
add
pop
es
and
ja
or
lcall
mov
xchg
inc
jl
xchg
push
sub
bnd
jbe,pt
ljmp
cli
dec
or
nop
adc
dec
jecxz
inc
bound
call
lret
and
and
push
cmp
jg
push
shrw
ljmp
nop
inc
and
jg
pop
pop
push
mov
pop
or
incl
or
adc
lcall
jbe
mov
outsb
and
lcall
mov
sbb
mov
push
push
cmc
fnstenv
add
push
mov
push
and
ficomps
xor
call
aaa
shlb
cmp
test
dec
add
push
ljmp
xchg
push
dec
sub
loopne
incl
jmp
adc
aas
xchg
and
cmp
nop
mov
test
dec
stc
arpl
rorb
inc
sbbl
repz
mov
mov
xor
pop
inc
int
je
mov
xor
push
test
jp
cmp
xlat
stos
or
or
pushf
repz
xor
scas
dec
xlat
cmp
imul
adc
adc
and
jns
aaa
fisttps
add
mov
adc
sbb
ljmp
ds
nop
decl
rolb
sti
addr16
mov
movsl
or
fstpl
std
mov
jle
loope
xchg
sahf
int3
inc
inc
les
les
lcall
mov
leave
mov
sbbb
adc
and
out
clc
std
mov
pop
cld
jmp
mov
push
insl
xchg
add
cld
push
pop
dec
fisttps
hlt
hlt
dec
in
fimull
aam
je
incl
sbb
fildll
sarb
pusha
and
fistpll
dec
inc
inc
pop
ud2
mov
mov
in
cwtl
outsb
mov
pop
icebp
jmp
mov
outsb
sbb
sub
jle
loopne
arpl
or
mov
sub
cld
clc
sub
popf
add
sti
lahf
or
inc
xchg
ud0
call
jmp
ljmp
out
jg
lock
out
cmp
xchg
add
cmp
ljmp
clc
or
out
mov
jne
popa
cmpsl
and
cmp
jo
pop
jge
push
int
and
aaa
lods
popa
jo
sbb
int3
stos
mov
mov
dec
lcall
and
pushl
addb
mov
pop
xchg
adc
sbb
or
jmp
xor
fcom
and
je
jp
adc
inc
push
mov
lock
popa
adc
loope
out
xor
pop
imul
jb
sti
notb
shll
adc
pop
movaps
jmp
jl
push
subb
or
and
popf
aas
enter
sbb
add
adc
mov
decl
push
subb
add
jbe
cltd
or
daa
mov
call
loopne
add
movl
pop
out
adc
push
ret
push
decl
call
xchg
call
and
inc
sub
add
std
sub
leave
mov
sbbb
xor
push
mov
mov
imul
mov
mov
dec
cltd
sti
add
aam
shlb
cmp
sbb
cmp
inc
std
mov
xor
dec
pop
mov
shr
movsl
imul
add
pushl
ret
shrl
mov
dec
outsl
cvtps2pi
cli
sti
mov
xor
shl
enter
add
adc
imul
cli
test
cs
mov
sahf
test
call
lods
incl
fstpt
jl
insb
mov
gs
mov
jg
sbb
fsubrl
fiadds
and
cli
jmp
fisubs
sub
dec
ljmp
xchg
cmp
ja
lock
sbb
call
out
fisubrs
andl
in
imul
dec
pop
inc
mov
jmp
out
dec
test
push
or
movsb
mov
xlat
dec
insl
orl
scas
popa
pop
mov
add
xlat
ja
jge,pt
aaa
jmp
sti
cmc
mov
xor
rcll
xor
and
lcall
mov
aad
pop
pusha
xchg
sub
stos
shlb
push
xchg
fsubs
mov
mov
fnsave
xor
shll
pushl
lods
inc
mov
add
xchg
fs
cmp
mov
inc
outsb
cmp
mov
loop
xchg
dec
push
mov
push
push
les
rclb
mov
call
clc
cld
cmp
mov
pop
iret
aas
stos
or
jecxz
push
jns
mov
cld
ljmp
insb
or
mov
leave
add
jle
int3
scas
and
inc
outsl
dec
push
pop
and
pop
mov
cli
cli
nop
jg
mov
push
xchg
or
loopne
pop
jp
aad
incl
xchg
xchg
dec
imul
daa
push
add
dec
adc
mov
add
jmp
pop
mov
xchg
fdivl
adc
pop
cmp
ret
dec
cld
mov
dec
pop
int
push
ret
xor
push
test
sub
inc
jae
lds
call
faddp
ja
pushl
push
lods
call
pop
dec
data16
dec
clc
faddp
inc
fwait
pushl
pusha
xchg
ljmp
scas
outsb
dec
into
outsl
mov
sub
mov
cwtl
popf
sar
jmp
add
xchg
call
push
repz
mov
jns
sbb
dec
cmpsb
adc
jg
xor
push
ja
adc
or
pushl
lcall
mov
aam
jne
xchg
jecxz
mov
mov
shll
rcrl
outsl
sub
incl
pusha
push
mov
push
bound
in
iret
or
pop
or
out
mov
mov
decl
or
fidivl
xchg
cli
std
ja
call
xor
js
test
adc
add
shr
jmp
ror
in
jmp
xchg
aam
hlt
js
lds
add
mov
cmp
popf
cld
insb
inc
popf
inc
das
mov
add
mov
push
adc
push
xor
and
adc
std
mov
sbb
pushf
data16
lahf
gs
and
pop
je
repz
dec
and
push
dec
fistpl
xchg
jge
sti
int3
das
sbb
nop
sti
fnstenv
add
pushl
mov
jnp
loope
xor
jle
jg
pop
inc
push
xchg
cli
mov
add
pop
jne
push
mov
and
mov
xor
imul
decl
push
sti
lea
ss
lcall
dec
xchg
mov
add
gs
pushl
push
push
dec
jg
mov
xchg
scas
repnz
gs
ljmp
sub
cmp
andl
adc
test
ljmp
adc
sbb
je
jb
fimuls
mov
outsl
cli
fisttps
insb
leave
xchg
jae
xchg
mov
xor
cmp
dec
mov
daa
and
lock
repz
test
xor
repz
int3
add
addr16
mov
aaa
adcl
dec
mov
loopne
imul
lcall
mov
int3
dec
jge
sub
and
dec
sbb
faddl
lcall
ss
lea
add
data16
push
ret
mov
jg
sbb
inc
ret
mov
nop
call
dec
incl
bound
mov
roll
sbb
pop
pop
scas
insb
push
mov
subl
xor
fwait
mov
xchg
xor
lcall
pop
push
xchg
adcl
adc
push
sbb
in
mov
mov
cmp
test
test
jg
add
sub
or
adc
hlt
fistl
jg
incb
or
jmp
ror
add
jbe
cmp
lock
jae
push
pop
mov
lret
psubsw
mov
mov
mov
sbb
cld
cmp
xor
enter
mov
notb
outsl
sahf
sahf
sub
inc
push
aaa
inc
outsb
sahf
bnd
filds
mov
or
aas
jmp
sbb
sbb
call
shlb
stc
adc
fidivrl
daa
adc
xor
push
pop
cltd
inc
fs
adc
out
movsb
leave
hlt
xacquire
cmc
pushl
out
adc
pop
aaa
cmp
add
in
in
adc
aam
jae
push
mov
filds
sbb
and
fidivrl
in
mov
fwait
out
out
jns
mov
xchg
ds
jg
xchg
sbb
stc
or
adc
lahf
cmp
push
push
adc
jmp
push
mov
sbb
inc
pop
fcomps
push
and
pop
nop
sbb
dec
mov
cmp
jmp
sbb
push
dec
mov
gs
sarl
sbb
sbb
out
adc
inc
xlat
arpl
movsb
jns
mov
cmp
push
fsubrl
in
or
lret
mov
lcall
std
xor
mov
pushl
mov
out
sbb
test
or
sbb
push
in
push
jl
pop
pop
call
pusha
and
or
imul
mov
mov
pop
pushl
mov
dec
xchg
sub
popw
repz
ljmp
decl
iret
push
adc
inc
adc
out
fmuls
lea
loop
ljmp
mov
mov
dec
or
pop
sbb
mov
cltd
decb
and
cmp
mov
add
decl
int3
rolb
push
mov
sbb
jns
int3
jb
lcall
imul
sbb
decl
add
cmp
cmp
ds
in
lock
jbe
andb
jne
decl
pushl
cwtl
inc
dec
in
addb
mov
xor
or
dec
out
decl
movsb
inc
mov
jns
filds
mov
addb
xchg
arpl
push
jbe
scas
clc
ljmp
add
orb
mov
mov
add
jg
call
sub
dec
cld
in
lret
xchg
jbe
mov
push
jg
cmp
sbb
in
mov
lcall
mull
enter
add
jbe
in
loopne
mov
sahf
sbb
ljmp
pop
fs
and
sub
lcall
ja
jmp
adc
imul
shrl
inc
clc
mov
cwtl
cmp
cs
sbb
pop
and
das
lods
jp
xchg
and
and
incl
sbbb
mov
xchg
cld
testb
mov
or
pop
aaa
add
or
mov
jmp
imul
sarb
jle
xor
dec
movb
mov
rol
bt
cli
mov
push
cmp
incl
push
jbe,pn
int
sbb
cs
xchg
outsb
jbe
hlt
cld
mov
mov
gs
xchg
bnd
cmp
decl
sar
sub
mov
repz
scas
dec
inc
int3
mov
pushf
fldcw
cmc
or
jl
fwait
incl
mov
lahf
mov
adc
inc
mov
mov
arpl
stos
inc
and
in
push
in
lds
mov
cs
decl
pushf
inc
fdivs
inc
in
mov
divb
mov
enter
aaa
dec
push
lcall
aad
dec
or
jbe
jo
sbb
aam
and
xor
jb
outsl
clc
jmp
lock
xlat
mov
cmp
mov
or
out
mov
adc
sub
ja
dec
and
mov
aad
xchg
add
add
cli
incl
xchg
mov
mov
adc
test
repz
sbb
ljmp
stos
nop
sub
inc
dec
stc
pop
movsb
push
xor
add
aaa
mov
fcomip
pushl
in
out
mov
sbb
incb
pusha
lret
lea
jo
xor
lret
lcall
mov
clc
shlb
stc
jge
jo
inc
idivl
inc
jmp
pushl
xchg
mulb
fxch
aad
mov
popf
xchg
loopne
cmp
in
add
je
leave
sbb
fisubs
dec
jmp
sbb
lcall
clc
jbe
sub
bound
dec
std
xchg
leave
lret
push
aaa
ret
test
call
ds
add
mov
jne
fstps
push
sbb
mov
and
jecxz
mov
leave
cmp
jg
lcall
cld
out
dec
dec
mov
add
mov
mov
push
fadds
fdivp
mov
inc
adc
mov
loope
push
add
sbb
and
test
dec
inc
fsubrl
cmc
hlt
leave
jp
movsb
sarl
leave
mov
sbb
jg
je
mov
mov
adc
fwait
adc
add
sub
popa
add
dec
ja
push
cmp
movsl
add
add
inc
cmp
cli
jmp
cmp
push
push
sub
xchg
outsl
sub
jg
scas
mov
dec
add
outsb
mov
jo
popa
or
add
ret
loope
mov
out
sub
cmc
sbb
imul
hlt
stos
sahf
add
xor
cli
sbb
jo
shlb
daa
dec
cld
jmp
dec
cmc
orl
aad
decl
mov
mov
lods
outsl
fcmovb
fcomip
clc
pop
daa
mov
sbb
mov
mov
push
dec
inc
pop
js
or
call
mov
into
out
xchg
in
inc
cmc
fcoml
call
dec
and
fs
add
mov
add
and
dec
and
pop
sahf
inc
xor
sub
push
pop
cmp
mov
repz
das
pop
sahf
std
call
adc
out
mov
add
pop
testl
addl
mov
add
fwait
fs
sahf
cmp
pushl
cmp
xor
push
jl
clc
lcall
sbb
inc
and
jne
bound
mov
xor
std
sub
sbb
call
sub
pushf
out
int
leave
fsubr
or
mov
sub
mov
test
fildll
rclb
inc
cld
scas
xor
pop
test
in
leave
sbb
sub
aam
in
das
mov
sbb
popa
jo
and
adc
ljmp
rcr
enter
lods
jp
mov
push
leave
mov
pop
aam
ret
fcos
add
popf
lahf
mov
cli
insl
xchg
push
mov
add
mov
pushl
push
adc
xor
pop
mov
stc
clc
mov
fimuls
xor
adc
sub
enter
pop
lret
incl
cld
or
sub
xchg
xor
cmp
mov
sub
xchg
cs
lds
iret
or
mov
dec
add
dec
outsb
ljmp
loop
into
leave
aad
sar
dec
cmp
jmp
movsl
xchg
jbe
sub
mov
ljmp
lret
mov
or
fildl
fisttpll
mov
scas
sbb
add
add
test
jge
test
ljmp
xor
int3
leave
jge
popa
xchg
dec
inc
loop
inc
push
iret
enter
aam
cs
xor
add
lcall
mov
fisubs
xchg
mov
cli
mov
stos
popf
xchg
cmp
or
pusha
mov
ffreep
insb
inc
jp
les
adc
cmp
sbb
add
add
pop
sub
dec
mov
outsb
rcrl
insl
test
xlat
das
cmp
imul
ret
push
adc
sub
push
inc
popa
jne
xchg
in
cmp
xchg
pop
cltd
pop
ljmp
sbb
jecxz
push
cmp
jno
inc
loope
pop
xchg
call
ja
subb
sbb
sahf
pushf
je
or
scas
lock
sbb
xchg
hlt
mov
inc
cmovae
cltd
cmp
jg
jp
aam
sarb
add
movsl
xor
gs
lock
hlt
jp
jl
stos
mov
pushf
xor
rol
ljmp
mov
fwait
or
call
push
insl
xor
sbb
mov
stos
mov
cmp
sahf
inc
andl
test
pushl
sti
das
loopne
mov
xchg
jge
std
mov
test
mov
jne
mov
dec
jg
mov
js
aad
inc
mov
sub
sbb
cmc
ljmp
jmp
add
inc
jbe
fisttpl
sub
mov
mov
loopne
iret
loope
ljmp
xchg
sbb
push
sarb
outsl
mov
lds
bound
outsl
enter
jg
js
mov
add
loopne
je
imul
pusha
inc
imul
hlt
mov
pop
dec
or
daa
int
fisttpll
cmp
adc
lcall
xchg
mov
fimull
cwtl
push
in
add
inc
mov
sbb
call
push
imul
xchg
daa
adc
jg
add
or
mov
loope
cmp
dec
daa
push
sbbb
and
jbe
xlat
outsb
jbe
dec
out
rep
shll
jmp
adc
rorb
into
xor
iret
clc
cli
push
das
push
inc
dec
stos
outsb
push
fists
jg
sub
jae
lods
jno
sub
scas
pop
fs
jmp
fsubr
push
mov
jmp
dec
lock
int3
movsb
js
mov
rorl
and
and
xor
cmp
jmp
pop
add
insl
inc
or
loop
inc
mov
xor
call
div
adcl
shlb
sub
mov
mov
xchg
inc
jle
jg
add
loopne
es
mov
sti
mulb
shlb
add
insb
jecxz
push
cltd
dec
sahf
or
or
or
notl
mov
call
inc
mov
mov
mov
xchg
jne
shll
pusha
outsb
dec
jmp
jb
cld
ljmp
mov
imul
shlb
xchg
aad
mov
ja
aaa
xchg
pushl
lods
aad
pop
out
and
fistpll
add
sbb
cmp
mov
xor
pop
mov
pop
bound
or
enter
add
fisubrs
data16
imul
mov
xchg
pop
jl
xchg
cmp
sbb
pop
fbld
xchg
pop
mov
mov
xchg
mov
nop
cwtl
out
xchg
into
lcall
scas
fidivs
mov
cmp
push
ds
xchg
inc
movsb
pop
jo
arpl
int
ret
imul
add
movsl
add
cmp
call
pop
jl
lret
sbb
xor
jge
pushf
pushf
popa
mov
jns
cwtl
jmp
cwtl
je
sub
jne
sub
xor
rorb
pop
popf
adc
shll
jmp
push
xchg
enter
hlt
iret
rcrb
cmpsl
xchg
or
and
mov
aam
jl
imul
lcall
data16
jnp,pt
fcompl
outsb
shll
add
in
shll
jg
shl
ja
mov
outsl
cli
jmp
cmpsb
cwtl
add
add
outsl
mov
repnz
pop
mov
dec
out
dec
adc
mov
inc
call
fistpl
mov
add
idivb
outsl
lcall
dec
stos
jb
movb
inc
mov
dec
cwtl
cmp
mov
fildll
adc
jp
lds
addr16
xor
mov
push
call
cwtl
xor
mov
xchg
call
mov
adc
fsqrt
call
cld
push
mov
pop
adc
icebp
in
push
jo
fistpl
adc
add
addr16
inc
shlb
arpl
mov
inc
mov
shlb
sbbb
and
dec
int
sbb
out
pop
jmp
aam
clc
xchg
mov
incl
xor
inc
std
out
aad
inc
fisubs
jae
ds
jge
rcl
push
or
pushl
cli
jecxz
mov
xchg
test
sarb
jg
std
icebp
ss
push
outsb
jecxz
push
xchg
sub
or
dec
xor
mov
pop
sub
ljmp
or
xor
push
lods
xchg
xor
mov
insb
mov
add
cmp
jge
xchg
loopne
sbb
call
inc
in
popf
sub
cmpsl
push
add
in
arpl
sahf
sbb
lcall
mov
das
push
adc
ret
and
iret
divb
push
inc
xor
xor
pushf
out
fistpl
sbb
and
sbb
inc
add
pushf
cmp
sbb
pop
in
dec
xlat
adc
jecxz
scas
outsb
hlt
filds
std
ljmp
push
mov
clc
jnp
and
hlt
and
xchg
test
jo
mov
ds
pushl
jb
data16
pop
es
pusha
push
mov
push
icebp
add
mov
or
inc
not
addr16
loop
call
ljmp
push
popf
iret
lcall
jne
dec
sub
and
imul
lods
test
leave
stos
pop
cwtl
cmp
pushf
jnp
and
decl
dec
cld
dec
nop
movsl
jae
loope
rcrb
sbb
cmc
push
loop
rolb
xor
in
inc
call
scas
lock
loope
mov
push
mov
mov
rorb
sarb
arpl
lahf
and
js
push
aam
cli
rclb
stos
int3
cmpsl
jg
call
fwait
lock
xchg
add
sarl
outsb
sub
ror
sbb
lea
mov
test
ret
or
popl
stos
or
inc
xchg
sahf
lock
push
ss
imul
cli
mov
fwait
pop
add
push
repz
jno
and
incl
pop
movsb
fisubs
inc
sub
mov
cmpsb
es
stos
push
popf
rolb
push
dec
or
sbb
ljmp
hlt
and
push
or
jmp
outsl
lcall
jo
or
clc
inc
push
je
mov
mov
jp
add
sbb
add
fcomps
aad
cmp
fistpll
in
lds
mov
dec
or
leave
scas
push
icebp
call
mov
mov
les
outsb
pop
in
stos
fildll
push
dec
hlt
lahf
push
pop
cwtl
xor
leave
out
push
int
mov
dec
jl
mov
aam
jnp
cmp
sub
mov
adc
dec
int
mov
fbld
add
lcall
push
adc
sbb
bswap
pop
scas
std
arpl
or
scas
fstpt
and
add
shlb
mov
test
fbld
xchg
hlt
sbb
cs
jg
andl
add
lea
imul
xlat
lcall
cmp
aam
call
stos
xchg
loop
testl
add
cli
decl
jno
add
decl
inc
mov
sbb
loop
stos
ss
sar
mov
and
orl
and
dec
hlt
call
daa
mov
fdivl
cmp
hlt
sarl
mov
lcall
xor
aad
mov
std
mov
xchg
adc
mov
das
enter
jle
add
pushl
mov
aam
movsb
xorps
mov
insb
fs
in
mov
adc
hlt
xchg
cs
mov
cli
lds
lret
pushf
pop
outsl
xor
filds
mov
dec
scas
pop
decl
push
mov
inc
lock
sahf
push
roll
xchg
jnp
rol
cld
scas
fdivrs
dec
cmpsb
or
mov
cmpsb
push
stos
ljmp
xchg
ljmp
xor
inc
decb
call
add
bound
cwtl
ret
in
adc
shll
xor
jnp
sub
iret
lcall
cltd
jbe
adc
sarb
mov
lret
cmp
and
jb
sarl
mov
fbld
lret
dec
popa
push
xchg
fadd
mov
sub
pop
xchg
add
jmp
mov
mov
xor
ljmp
jae
and
jnp
cmp
cmp
xchg
mov
add
xchg
jmp
mov
in
mov
dec
shlb
and
xchg
lahf
mov
negl
call
cmp
push
imul
lret
pop
enter
mov
jo
mov
repz
outsb
addb
shl
xchg
in
jg
fcomp
fs
rcrb
mov
ss
add
les
mov
inc
mov
ljmp
dec
and
add
cmpsl
pop
jbe
imul
gs
clc
into
loopne
ljmp
fists
imul
lods
cmp
lock
push
mov
in
add
testl
dec
rorb
int3
mov
jle
mov
ret
idiv
jmp
insl
fdivs
nop
ret
rcrl
mov
push
mov
push
test
push
out
ljmp
stos
into
addb
fs
roll
js
add
jl
lds
pop
or
pop
cmp
mov
mov
lock
jne
add
in
push
mov
xor
inc
loopne
adc
arpl
add
sbb
mov
cmp
out
mov
fwait
adc
adc
call
cld
loop
outsl
in
pop
movsb
test
ficomps
js
mov
mov
add
es
fdivrs
scas
mov
rolb
push
cmp
nop
or
call
lahf
mov
rcl
and
add
cltd
iret
mov
test
mov
mov
or
lcall
outsb
inc
sbb
shlb
sbb
jmp
pop
sti
or
sub
rcll
push
dec
lcall
enter
popa
subb
jecxz
mov
pop
xor
jmp
cmp
icebp
idiv
incl
jle
add
repnz
enter
adc
push
lods
pop
test
sub
and
js
fwait
mov
cmpsb
jnp
cli
push
add
dec
lods
and
cltd
pop
pusha
cmp
inc
out
dec
loope
lcall
adc
mov
adc
add
scas
leave
mov
xchg
push
insb
adc
and
jmp
and
out
xor
cli
in
ficoms
es
mov
mov
dec
les
push
jnp
in
arpl
sub
nop
jbe
fidivrl
pop
call
xchg
or
test
xchg
add
cmpsb
and
sbb
ss
fisttpll
xchg
lcall
mov
add
mov
sbb
hlt
push
lret
sar
stc
add
adc
cmpsl
hlt
in
lods
mov
xor
sub
cld
push
popf
adc
fbld
jle
aam
mov
nop
cwtl
ljmp
out
ret
fdivp
lcall
cmp
cli
mov
inc
sbb
clc
clc
test
and
outsb
fld
cmp
pop
loopne
mov
ror
imul
lea
cltd
xchg
mov
dec
push
push
popa
in
push
movsb
aas
mov
adc
or
imul
fimuls
data16
test
mov
pushf
rcll
ljmp
mov
pusha
mov
jp
dec
dec
in
sub
aad
hlt
decl
rol
xchg
int3
mov
jmp
mov
jl
dec
xchg
inc
lret
jl
pop
adc
call
or
fldl
lret
push
add
imul
cmp
test
call
je
and
ljmp
insb
mov
ss
loop
sub
out
insl
mov
cld
incl
leave
cmp
adc
mov
or
in
in
adc
mov
xor
xor
loope
out
sbbl
jg
vpcmpeqd
sahf
jg
cs
sub
push
xchg
sub
xchg
test
mov
xchg
js
sti
sbb
insb
cltd
add
or
mov
bound
cmp
cmpsb
leave
incl
add
mov
hlt
bound
in
add
inc
jle
decl
xchg
jmp
rclb
mov
int3
scas
mov
call
jb
std
mov
insb
pusha
sbb
or
dec
cmp
repz
cmp
cltd
push
mov
incl
add
adc
test
in
jae
and
sub
xor
sub
incl
pop
in
cmp
sub
xor
inc
cmp
mov
clc
call
inc
jbe,pt
pop
jg
add
in
xchg
popf
cmp
jg
out
mov
adc
pop
call
inc
and
xor
adc
dec
lcall
pushl
or
dec
js
rclb
and
enter
test
in
cmpsl
push
mov
jg
incl
fs
push
ss
and
mov
sbb
pop
gs
call
mov
pop
jns
int3
push
fcomps
in
lods
adc
mov
fcomps
pop
cmp
add
mov
xorb
dec
and
inc
xor
imul
jecxz
xchg
pusha
rcr
scas
jg
adc
mov
icebp
test
fs
dec
cs
outsb
or
leave
mov
push
mov
push
mov
mov
aad
and
mov
scas
ss
mov
pop
jbe
pop
lods
mov
jg
call
and
add
dec
out
cmc
mov
cmpsl
xchg
push
test
fmuls
sbb
push
les
and
inc
gs
dec
dec
and
scas
sbb
pushf
ds
loopne
enter
decl
ljmp
mov
xchg
xchg
ss
jo
loop
stc
aad
pusha
adc
mov
aam
xchg
adc
ljmp
push
pop
add
push
and
fs
loopne
inc
outsb
push
movsl
mov
mov
mov
call
jne
call
sub
and
inc
xchg
roll
pusha
dec
aaa
cmpsb
mov
or
jmp
and
xor
outsb
fcmove
fisubrl
add
nop
into
xchg
jg
addl
outsb
imul
dec
xlat
ja
mov
lea
out
inc
ja
mov
enter
ljmp
ret
cmpsb
arpl
sbb
inc
jmp
rclb
cmpl
jle
outsb
shr
pop
sub
stos
pusha
inc
dec
mov
push
pop
arpl
adc
jmp
dec
mov
adc
int
daa
ret
inc
insw
jge
aaa
imul
in
mov
in
outsb
mov
adc
fimull
sarb
and
rorb
lret
cld
fs
pop
cmc
aaa
dec
cmc
imul
mov
sbb
jae
inc
inc
loope
out
xor
out
shlb
scas
aad
imul
inc
add
and
cmp
xchg
inc
xchg
mov
outsl
sub
pop
jge
repz
jno
and
call
pusha
xchg
cmp
out
jmp
pop
push
in
cld
pushl
cmpsb
call
popa
adc
repz
pop
jg
ds
ds
in
cmpsb
adcl
test
push
adc
sbb
movsl
xor
push
inc
sub
or
std
popf
incl
add
lcall
jae
cli
adc
mov
inc
loope
add
mov
lahf
fnsave
mov
lds
lds
test
decl
dec
or
xor
dec
lar
and
sar
popf
cltd
mov
popf
add
int
bound
inc
mov
push
jmp
and
loope
decl
les
lea
inc
sti
jg
and
add
or
cwtl
orl
lcall
and
sub
stc
outsb
movsb
daa
pop
inc
jne
pushl
mov
lock
mov
out
xchg
push
mov
or
cmp
pushf
rolb
idivb
stos
push
or
or
dec
test
sub
sub
mov
int3
nop
mov
outsb
imulb
inc
incl
enter
xlat
jbe
mov
mov
out
pop
sbb
adc
out
mov
add
nop
cmc
daa
pop
jbe
jae
pop
cwtl
fs
push
pop
imul
ret
jecxz
inc
jle
gs
std
fidivrl
hlt
mov
push
in
fbld
repnz
mov
pop
or
sub
mov
in
pop
and
and
fnstenv
arpl
out
and
mov
popa
jne
mov
inc
mov
dec
lods
jle
lcall
adc
lds
mov
cld
int3
mov
inc
and
xchg
mov
aam
fcomip
jmp
and
cmc
pushl
mov
cwtl
inc
sub
mov
scas
and
sub
mov
dec
les
stc
test
ret
decl
insb
lods
out
leave
lcall
xlat
xchg
imul
out
iret
test
xchg
filds
mov
fisttpll
out
cli
nop
and
leave
orl
lock
rorl
and
pushl
mov
aad
adc
mov
jle
movsb
lcall
jnp
and
out
push
xchg
cmp
inc
mov
stc
fistpll
je
cmp
and
clc
mov
shlb
aaa
jnp
mov
jp
testb
pushl
outsl
push
mov
inc
das
lods
leave
inc
out
fimuls
xor
sub
push
mov
push
ret
js
or
sbb
push
sub
push
push
sub
dec
fldcw
movsl
mov
mov
cli
add
rcll
rolb
mov
fmul
loope
outsl
movsb
xor
sub
int3
and
sub
xor
jns
roll
jp
ret
mov
push
jns
aam
mov
imulb
push
add
push
push
mov
or
mov
inc
xchg
mov
sti
scas
repz
popa
add
or
mov
out
scas
dec
repnz
add
jmp
stc
cmc
clc
int3
dec
out
imul
xchg
and
les
adc
and
incl
mov
cld
fimull
jle
adc
lahf
cmp
ss
dec
hlt
xchg
sti
mov
call
aaa
data16
lahf
mov
scas
xor
hlt
sbb
fstl
cmp
jnp
sbb
inc
or
sbb
data16
inc
stos
ficomps
outsb
xchg
jg
pushl
add
mov
ss
cwtl
add
adc
lods
xor
rcl
cmp
ljmp
repnz
sahf
xlat
stos
popa
cltd
mov
xor
rcr
xchg
fisttps
pop
es
mov
sti
clts
sbb
push
jl
xchg
loop
add
lea
dec
repz
sbb
cmp
in
andl
ljmp
pop
fwait
hlt
xchg
inc
lods
dec
inc
out
enter
mov
xchg
add
adc
sub
ljmp
testl
and
pusha
push
jbe
mov
mov
mov
mov
pushl
xchg
outsl
cli
dec
aas
mov
insb
testb
ret
dec
inc
lods
pop
lcall
jmp
mov
ror
mov
test
fbld
out
fwait
lea
ljmp
ljmp
je
gs
ficoms
xchg
out
xlat
pop
fdivrl
sub
pop
shl
add
jmp
and
mov
in
inc
or
cwtl
insb
jmp
stc
lea
in
add
mov
insl
pop
cmc
in
inc
clc
mov
xor
rolb
xlat
test
xchg
lock
sbb
outsl
ljmp
cli
movsl
das
cltd
out
add
shrl
cli
fdivp
push
and
aaa
inc
ret
sti
cmp
cwtl
jp,pt
cli
fmuls
incl
jecxz
inc
pop
dec
std
lock
lret
jmp
mov
fimull
add
popf
mov
add
lods
stos
and
int
rcl
jg
fwait
xor
sbb
out
jecxz
mov
ljmp
push
dec
clc
sbbb
data16
mulb
adc
inc
pop
cmc
push
js
test
gs
adc
je
mov
push
sbb
scas
jno
push
xor
cld
jmp
ret
les
pop
push
cmp
sbb
add
dec
lcall
pushl
add
and
stc
and
and
sub
mov
lcall
mov
loopne
cwtl
sub
imul
and
add
leave
push
jns
xchg
sar
mov
enter
jo
into
dec
sbb
dec
in
sbb
sti
push
mov
in
push
xchg
xchg
cwtl
testl
popf
into
xchg
in
lret
fstpt
out
pop
stos
and
cmp
test
adc
push
mov
push
cmpb
popl
enter
enter
lret
and
mov
lret
add
loop
inc
xchg
jnp
mov
clc
rcrl
push
lcall
add
mov
jnp
scas
cmp
add
xor
dec
mov
into
rorl
int3
pop
mov
aad
idiv
lock
js
mov
lock
cmp
or
pushl
push
add
movsl
push
popa
jnp
das
mov
int
icebp
mov
dec
inc
cmp
bswap
mov
pushl
cld
xor
xchg
incb
idiv
lret
cmp
or
mov
xchg
cld
incl
idiv
add
roll
sbb
dec
mov
dec
adc
cmp
int
daa
mov
jg
or
movb
and
je
push
iret
inc
pop
loopne
clc
leave
icebp
aas
jne
push
sub
or
add
push
lock
cmp
add
roll
lret
test
lret
add
cmpsl
fucomp
jg
ljmp
rcr
mov
ficompl
mov
iret
dec
mov
mov
push
dec
std
lcall
push
sub
movsb
aas
add
inc
fisubs
dec
shlb
cmp
rorl
cmpsb
jmp
cmpsl
clc
call
icebp
loop
sub
xchg
popa
ds
out
xor
push
testl
ret
call
add
sub
loopne
and
insb
adc
mov
xchg
data16
lods
cmp
xchg
mov
std
adc
stc
jne
dec
and
aad
sbb
lcall
in
mov
iret
ds
or
xchg
pop
mov
add
cmp
ljmp
ss
int
daa
aad
jmp
jnp
add
mov
lahf
cmc
cmpsl
inc
in
and
pushl
aam
icebp
cs
push
icebp
mov
inc
sub
cwtl
scas
pop
sub
and
into
scas
adc
cmp
lods
dec
mov
push
inc
adc
push
push
push
xchg
fstp
sub
and
sub
incl
mov
cmp
popa
fcmovnb
sbb
lret
ret
mov
mov
fsubr
and
fmull
sbb
lock
pop
fsubrp
sub
ljmp
leave
std
inc
xchg
push
mov
mov
aaa
dec
repnz
rcrl
and
sti
out
xchg
cmc
call
mov
repnz
xchg
sahf
lock
jmp
mov
lret
dec
ds
int
pop
jo
mov
mov
mov
cli
pop
jg
cmc
and
arpl
fisubs
pushf
into
mov
add
mov
push
daa
mov
mov
out
sbb
imul
sbb
jl
mov
xor
aam
add
shr
xor
jmp
mov
and
cmp
mov
pop
mov
and
les
aad
mov
push
fwait
mov
pop
daa
fsubp
pushf
jns
mov
hlt
lcall
lcall
add
movsl
movsl
add
xor
mov
lock
mov
cmpsl
fdivr
sbb
cmp
or
rolb
out
lods
std
pop
cld
mov
pop
xchg
adc
lret
add
cmp
outsb
xchg
cmpsl
sbb
rclb
arpl
adc
jbe
fisttpll
nop
cwtl
lcall
sti
pop
pop
sub
shrl
sbb
lods
or
packuswb
adc
into
ss
xor
in
popf
or
mov
es
fs
pop
sub
fcom
mov
rclb
dec
jno
mov
dec
mov
mov
cmp
or
pushf
mov
call
test
or
insb
jge
aad
hlt
dec
pushl
jnp
call
cmc
je
or
jle
dec
aad
mov
cmc
call
daa
xchg
imul
add
or
dec
push
test
ret
xor
clc
sbb
mov
pop
popa
cmp
loope
pop
mov
dec
mov
and
xchg
cmc
int
decl
dec
imul
xor
es
stos
inc
je
scas
lahf
cli
lahf
cmp
add
lods
add
and
xchg
mov
cmp
push
rorb
movb
xchg
ret
decl
xor
dec
or
cmp
std
outsl
aad
adc
stos
daa
mov
xbegin
xor
ljmp
test
push
jns
add
pushw
or
push
sub
mov
flds
ja
popa
sbbb
inc
jmp
out
push
sbb
arpl
aas
inc
sub
mov
adc
or
and
lds
adc
nop
cltd
pop
in
fcomip
aas
mov
mov
xchg
in
icebp
inc
rcl
insb
or
rclb
mov
shrb
fsubr
jns
xchg
jle
aam
fwait
sub
jmp
jle
mov
mov
cmp
mov
ljmp
loope
push
pop
cmp
fistpl
mov
or
cwtl
fsub
mov
add
jmp
ja
insl
mov
push
les
pushl
push
cmc
into
adc
ds
xchg
or
add
leave
arpl
or
mov
push
hlt
setae
ficompl
push
or
fcoms
leave
int
ret
dec
das
mov
inc
testb
or
leave
je
clc
fcomip
mov
push
or
scas
mov
loopne
dec
and
ljmp
es
test
xchg
daa
addb
cmp
int3
jmp
cmp
adc
ss
mov
add
pop
mov
int3
mov
scas
sub
jno
add
mov
push
dec
sub
mov
rclb
ljmp
and
push
sub
or
filds
loope
leave
pop
stos
cmpsb
or
adc
or
cmp
fcomip
cmp
mov
sbb
xchg
mov
pop
in
pushf
dec
mov
add
decl
and
es
call
je
jo
mov
lahf
jl
in
xor
call
xor
pop
push
enter
inc
dec
xor
mov
fdivl
pushl
mov
not
add
or
or
jle
mov
push
cmp
dec
cmp
cmp
aaa
push
cmpsl
cmp
sub
subb
xor
mov
call
cmp
push
rolb
adc
xlat
into
es
xor
cltd
inc
and
cmp
jns
add
call
or
add
mov
xor
or
scas
sbb
int3
je
push
lcall
pop
icebp
xor
inc
fimuls
out
clc
call
mov
jmp
add
shlb
or
fnstenv
pop
sub
scas
cld
addb
int3
dec
mov
lcall
pop
lock
faddp
das
out
mov
and
jecxz
push
mov
mov
mov
xchg
mov
xchg
das
aam
iret
xor
fnstsw
pop
mov
ja
add
pop
mov
ljmp
pushf
lds
jecxz
jns
dec
ss
ljmp
les
dec
cmovle
sbb
sbb
out
clc
push
pushf
test
fmulp
push
add
fisttps
subl
aas
add
or
int
mov
or
outsb
sar
insb
and
mov
cmp
inc
cmc
sub
movb
mov
incl
adc
sbb
mov
repz
or
das
notb
stos
inc
ljmp
sub
xor
sbb
ss
push
mov
fiadds
mov
incl
push
and
movb
mov
shr
mov
and
mov
popf
and
inc
mov
pushf
testl
lahf
adc
cmp
add
push
lret
push
aam
outsl
das
mov
push
inc
aam
cmp
in
add
fsubrs
in
sbb
lret
enter
xchg
arpl
jg
xchg
mov
adc
lds
fidivs
ror
mov
cmp
lock
inc
pop
sbb
push
sbb
fwait
icebp
incl
cld
lahf
or
cmp
adc
shll
and
adc
incl
cmc
mov
jp
mov
xchg
call
dec
adc
mov
pop
or
adc
sub
jmp
inc
movsb
mov
cmp
push
lock
sub
push
cld
lcall
iret
addl
repz
cwtl
add
ficompl
std
in
mov
ljmp
and
daa
shrl
mov
fnstenv
jp
jmp
pop
loope
into
xor
and
lahf
rolb
lods
ret
repz
test
sbb
sub
cmp
outsl
imul
inc
cwtl
in
hlt
cmpsb
fistpl
lock
xor
xchg
inc
jo
call
or
fsubr
stos
int3
into
xor
daa
loop
xchg
push
das
inc
adc
incl
or
or
dec
sbb
incl
pop
std
sub
fildl
pop
pop
sbb
mov
jae
fcoms
mov
fxch
pop
add
fimuls
add
aas
jne
int
mov
loope
or
inc
ret
lcall
das
xchg
mov
xchg
or
add
in
xchg
in
cld
and
jae
paddq
push
ss
test
fwait
dec
cmp
or
dec
test
dec
jp
push
mov
ljmp
inc
fimull
dec
ret
pop
fcmove
xchg
dec
adc
or
add
fbstp
mov
in
leave
and
loope
sahf
cmpsl
sbb
jmp
shll
sbb
rolb
filds
add
shll
lahf
inc
addb
decl
fistps
bndldx
mov
push
pop
imulb
cmp
xchg
push
pop
mov
mov
sar
incl
int
lcall
out
sbb
add
adc
leave
fcoml
repnz
sbbl
jg
fmulp
lret
popa
inc
mov
mov
push
mov
mov
mov
add
test
jl
in
mov
pop
ss
mov
pop
in
cli
mov
mov
jmp
cmpsl
or
mov
inc
adcb
mov
xchg
icebp
xchg
add
add
cmc
test
mov
cs
or
cmpsb
mov
subl
and
add
add
mov
xchg
xor
lcall
rcrl
gs
mov
inc
std
flds
inc
aad
push
aaa
repz
or
aam
dec
or
push
lret
mov
adc
inc
sarb
xor
ja
inc
add
jmp
lods
cmp
adc
repz
inc
lahf
dec
mov
push
loopne
call
aad
mov
adc
stos
ds
lret
sub
clc
lcall
add
sub
pop
test
adc
cmp
enter
incl
mov
fidivrs
cmc
mov
and
cmp
add
pushl
mov
dec
mov
sbbb
push
incl
inc
lcall
xchg
and
fisubrl
pushl
stc
jns
mov
lcall
pop
fistpll
dec
popa
xchg
cmp
les
cmp
xchg
stc
out
mov
in
or
shlb
orl
int3
xor
incl
jb
aaa
adc
xchg
aam
cmpsl
adc
call
xchg
add
fidivs
or
shr
add
mov
or
aas
push
rcll
repz
aam
in
ds
xor
stc
aas
mov
cmc
call
cld
call
xor
pusha
dec
add
aad
and
aam
fisubrs
cmp
adc
ja
mov
into
out
push
into
cld
movsl
add
cmp
call
xor
push
jns
insb
out
subl
stos
sbb
xchg
cmpsb
rolb
xchg
add
insl
xchg
cmp
cmp
mov
xchg
imull
jg
cmp
dec
jge
xlat
sbb
std
or
movsl
es
xchg
mov
cmpb
cmp
fdivrl
daa
xor
mov
imul
lret
loope
and
fisubrs
mov
mov
and
daa
into
cmp
pushl
lods
hlt
mov
jbe
cmc
xlat
and
movsb
jg
lock
dec
test
dec
cltd
pusha
fiadds
cld
mov
mov
and
int3
xor
add
push
push
mov
xor
hlt
xchg
call
lret
add
cmp
stos
call
std
incl
scas
mov
movsl
adc
shll
jl
jmp
lock
out
jnp
pop
test
adc
arpl
out
adc
add
pop
inc
cmp
incl
addr16
aaa
cmp
inc
lahf
sti
in
mov
fucom
xor
int
mov
push
or
rcl
stc
ljmp
incl
push
bound
cmc
mov
mov
fnstenv
mov
setge
mov
mov
ljmp
xor
neg
lock
testl
stos
pop
imul
or
and
add
adc
mov
mov
cmp
cld
ds
repz
xor
pop
out
sub
rolb
es
push
mov
jb
mov
rcr
jg
das
mov
and
mov
and
jl
push
lock
ljmp
jo
jb
fdivs
icebp
loopne
pop
pop
leave
clc
shrl
sbb
call
xor
add
xor
add
mov
decl
cmp
mov
fst
and
inc
mov
lret
std
ljmp
rol
mov
pop
arpl
or
fcoml
shl
dec
pop
test
inc
xor
decl
pop
mov
loope
repnz
xchg
cmpsb
bound
cli
cld
int3
pop
repz
scas
add
shll
inc
ds
cmp
sbb
mov
inc
xchg
jg
sub
dec
jnp
inc
rolb
sbb
pop
icebp
call
js
pop
shrl
rorb
into
dec
popf
jp
pusha
out
mov
jg
fs
cwtl
pop
or
out
cmp
push
inc
dec
ljmp
add
repz
mov
lret
sbb
lea
incl
lock
mov
dec
ret
mov
fwait
mov
mov
and
or
icebp
lcall
fcmovb
mov
loopne
dec
lcall
cld
lds
mov
pop
and
mov
sub
rolb
std
adc
stos
mov
movsl
jb
pop
mov
ja
aaa
nop
lcall
sbb
or
jo
fs
pop
cltd
call
imul
lret
shl
or
sar
jmp
leave
out
dec
mov
fimuls
mov
fistl
jno
inc
add
shlb
or
dec
or
aad
arpl
decl
out
hlt
stos
jp
mov
xlat
sub
mov
pop
xor
mov
jg
mov
shll
shlb
cmp
sti
jmp
lock
cmp
fcomip
jmp
imul
inc
pop
je
cmpsb
sub
rclb
xchg
mov
sbb
add
and
lea
daa
je
jnp
jbe
xchg
sub
mov
sahf
aad
and
je
test
jo
ljmp
or
mov
pop
cwtl
jmp
pusha
leave
lods
pop
add
ret
popf
mov
add
sub
fsubrl
cli
cmpsl
xor
xchg
push
lret
cmp
jg
or
push
jb
and
jecxz
push
lret
out
jo
mov
jl
popf
adc
cmpsb
add
negl
fwait
ret
into
xor
pop
sar
decl
jecxz
fcmove
jmp
rorb
lock
fcoml
and
jg
mov
int
mov
xchg
addl
stos
aas
mov
ljmp
mov
aas
xchg
imull
stos
js
push
or
roll
gs
add
push
inc
das
int3
cli
adc
mov
decl
sub
std
sub
lahf
movsl
mov
jle
mov
addl
mov
fimuls
jns
push
mov
pop
cmp
push
pop
dec
inc
mov
mov
pop
xchg
xor
or
jnp
pop
xchg
mov
ds
xchg
cmp
addr16
jge
das
dec
add
adc
cwtl
and
iret
pop
mov
xor
out
clc
cmp
add
push
mov
arpl
push
and
mov
jge
aaa
fmull
adc
push
xchg
xor
add
decl
adc
cmp
inc
mov
loope
sbb
and
je
sbb
icebp
jmp
sti
and
dec
aas
call
les
test
pop
and
daa
rcrl
jmp
fs
xchg
and
and
sbb
sbb
cwtl
sar
call
int3
inc
lods
dec
mov
lea
cmp
xor
jle
fcompl
icebp
pop
sar
call
rorb
mov
enter
xchg
shl
stos
fsub
or
int3
aaa
jecxz
das
cmp
cmpsb
gs
xchg
hlt
clc
incl
mov
mov
dec
into
dec
call
sub
or
out
adc
inc
or
or
mov
daa
add
jecxz
cmp
push
jae
cpuid
xor
pop
ret
lcall
jp
inc
stc
out
jnp
fldenv
das
mov
lock
inc
fucomip
iret
mov
mov
leave
sahf
repz
rclb
xchg
inc
out
addl
mov
ljmp
iret
fidivrs
aas
divb
movsb
mov
stc
clc
mov
pushl
and
cmp
jns
cmc
addr16
adc
rorb
or
xlat
clc
arpl
cli
in
leave
sbb
cmp
insl
out
test
addr16
mov
icebp
decl
imul
dec
jno
roll
ljmp
and
daa
mov
imull
out
lret
fstps
dec
out
cs
clc
call
ret
ljmp
movsb
push
sub
rorl
add
idiv
push
call
xchg
lcall
into
and
hlt
aam
mov
mov
aas
adc
mov
or
stos
stos
jo,pn
divb
dec
mov
add
dec
xlat
pop
sub
mov
adc
dec
stc
aaa
xchg
adc
lahf
andl
rol
out
je
push
adc
movaps
dec
cld
movups
and
add
xor
cmp
jg
inc
pop
jl
jmp
mov
xor
xchg
cmpsl
pushf
mov
movsb
inc
shll
repz
mov
rcrl
jg
inc
mov
adc
jnp
not
js
movsb
out
push
lods
or
mov
cmpsb
arpl
or
pop
aaa
pop
repnz
lcall
push
data16
sbb
lods
pop
adc
icebp
leave
cmp
push
cmp
xchg
ljmp
pusha
cwtl
movsb
sub
push
les
int
insb
cmp
les
or
lcall
and
xchg
adc
xor
push
cmp
stos
cmp
mov
jmp
mov
popf
cli
clc
sub
add
xchg
loopne
test
les
cmp
dec
add
nop
or
ud2
mov
insb
lcall
cli
or
or
adc
pop
xchg
add
mov
dec
aaa
hlt
mov
rolb
add
push
cmp
mov
std
fdiv
and
sub
ljmp
stos
cmp
xor
scas
add
idiv
call
mov
jg
cmp
xchg
cwtl
cmp
mov
cmp
ret
mov
setl
ljmp
cli
xor
xor
mov
ja
ret
arpl
dec
and
dec
or
or
cli
adc
into
mov
aas
or
mov
mov
xor
xchg
inc
insb
jp
push
lock
sbb
cmc
call
push
mov
xlat
notb
icebp
sbb
icebp
fnsave
pop
sbb
cmp
jecxz
movsl
ss
and
jmp
cmp
sub
call
push
aas
sbb
ljmp
adc
sub
out
mov
addr16
xchg
and
jae
int3
testb
ljmp
dec
push
cmp
sub
adc
sub
mov
mov
neg
pop
cmp
xor
ljmp
add
rorb
xchg
mov
stc
popa
icebp
and
pusha
xchg
jp
out
dec
xchg
cmp
jo
enter
add
lock
rcll
es
lahf
push
xchg
adc
sub
lds
int
sti
jnp
idivl
mov
sahf
das
cli
mov
in
add
fstl
repz
cld
cwtl
xor
pop
mov
subl
out
sbb
mov
rcll
in
cmpsl
add
pop
add
and
clc
or
ljmp
cwtl
xor
and
adc
sub
push
sbb
add
adc
jmp
out
xor
insl
stos
out
in
loopne
push
lret
jmp
clc
lock
jge,pt
cld
pop
add
add
in
lock
repnz
pop
fstpl
aas
add
cmc
inc
loop
out
mov
iret
fs
add
dec
imul
push
lcall
movsl
nop
icebp
cmpsb
int
in
xor
lret
pop
leave
clc
push
xor
xchg
add
jg
push
dec
jo
dec
jle
mov
lret
ljmp
das
repz
and
jae
push
sub
xor
jmp
dec
icebp
fsubrl
mov
aam
std
inc
insb
xchg
fstl
add
jle
aas
mov
outsl
clc
adc
shld
jle
sub
in
stc
pop
dec
mov
clc
ficompl
mov
and
xor
aam
sbb
jecxz
mov
daa
repz
test
xchg
ret
loope
dec
scas
test
adc
mov
push
xchg
mov
xchg
mov
out
fildl
sub
in
jp
subl
or
dec
out
push
add
cs
jmp
test
divl
sbb
xchg
je
test
fidivrl
dec
shl
lcall
incb
mov
add
clc
cmp
fidivl
stos
mov
or
sbb
lcall
into
add
mov
mov
fiadds
cmpsb
fadd
lods
ljmp
aas
ret
outsl
test
fnsave
jmp
mov
add
gs
lcall
mov
cmp
xor
and
fists
inc
in
dec
pop
mov
icebp
inc
inc
and
push
mov
call
cmp
xor
pop
fldcw
dec
add
dec
loopne
aas
test
or
fisubrl
pop
out
aam
ljmp
sub
stc
xchg
pop
psubb
ror
push
dec
cltd
sbb
jmp
mov
or
add
or
fldt
in
out
aam
xor
mulb
dec
mov
outsb
loopne
inc
idiv
dec
push
repz
das
pop
daa
inc
xchg
sub
push
fdiv
imul
sbb
cmovae
or
outsb
stos
pop
filds
push
ret
and
ret
pop
cmp
dec
stc
loope
aaa
jae
cmc
cmp
cwtl
out
sbbb
inc
push
call
fcomip
scas
cmp
mov
decl
cld
fcompl
loop
inc
pop
xor
mov
push
mov
pop
inc
adc
dec
push
scas
clc
lcall
std
mov
test
lods
sbb
stos
loope
decl
test
xor
cmpsl
sarl
push
stc
dec
or
fmul
push
add
jl
pop
les
xor
enter
scas
out
pusha
xchg
jno
cmc
cld
into
mov
xlat
inc
mov
call
fsubrl
stos
and
in
cmp
add
xor
fstps
lahf
mov
cmp
ss
mov
std
cmp
sub
fwait
shrb
mov
cmp
sbb
pop
add
or
push
ds
jmp
iret
js
int
xchg
mov
mov
jmp
xor
jb
cmc
addr16
add
inc
loope
insl
and
mov
sti
sbb
pop
fisttps
or
dec
repz
sbb
adc
ljmp
mov
pushf
dec
je
jmp
rorl
aam
fstps
xchg
fisttps
mov
sbb
call
loopne
add
mov
cmp
jg
in
fldenv
xchg
xchg
xchg
out
scas
mov
adc
cmpsb
into
pop
mov
rol
fsub
push
bsr
rcr
inc
push
sbb
ljmp
pop
cmp
mov
jmp
xchg
mov
cli
decl
nop
or
pop
mov
pop
add
xorb
mov
cmp
jo
push
std
fstpl
roll
jns
scas
fsubp
sub
in
pop
sarl
ljmp
mov
aam
dec
repz
pop
cmp
or
sub
jle
inc
stc
mov
ret
ljmp
sub
pop
rcrb
add
push
push
mov
mov
lods
jge
gs
dec
test
test
cmpsb
repz
jbe
add
cmp
pop
mov
push
pop
mov
xchg
inc
push
fwait
idiv
add
scas
push
mov
and
sub
jecxz
lock
add
std
push
fcom
cs
lcall
pushl
loope
mov
out
inc
pop
dec
leave
push
adc
xchg
fidivrl
addr16
stos
inc
add
ljmp
das
out
or
js
push
pop
frstor
stc
rolb
stos
add
int3
mov
lret
in
jle
incl
xchg
mov
ret
cmp
cs
xor
add
xor
rorb
hlt
ficoml
cs
cmp
das
push
mov
cltd
fisubs
icebp
int3
fiaddl
std
jg
call
xor
pop
fwait
into
xchg
mov
pop
gs
push
cmp
dec
mov
add
jno
test
or
lahf
xor
adc
jmp
lret
inc
loopne
add
jg
cld
lret
cli
test
fdivrl
dec
push
fsts
test
inc
mov
ss
incl
inc
sti
push
mov
push
fadds
or
cli
out
xor
insb
movsl
and
mov
test
pop
out
ret
mov
mov
call
cmp
add
push
iret
and
push
sbbl
xchg
cld
lds
jo
add
mov
out
mov
cmpsb
lcall
fadd
push
push
repnz
in
mov
into
adc
sub
das
and
arpl
add
std
lcall
xchg
sti
xor
frstor
mov
sbb
lcall
imul
pop
adc
sbb
mov
dec
mov
sub
pop
imul
sarl
out
cli
fbld
repnz
xchg
add
aas
dec
outsl
out
loope
adc
lcall
ds
cld
mov
sub
ljmp
cwtl
ljmp
mov
add
incl
lea
icebp
fimuls
lret
ret
cmp
std
shrb
add
out
in
pop
stos
outsb
inc
pop
lret
add
call
filds
mov
dec
fisubrl
in
into
sub
fistpll
mov
sahf
cltd
adc
mov
jae
xor
ljmp
sar
cmp
cmp
xor
xchg
cmp
sbb
rolb
or
mov
and
or
adc
std
fisubrl
scas
fs
lea
cmpsl
dec
ljmp
decl
and
jge
lcall
and
and
fcomp
and
and
ljmp
push
jge
icebp
out
pop
add
repnz
and
lcall
push
addr16
sbb
cmp
jl
out
inc
mov
push
xchg
out
fnstsw
lock
sti
jnp
mov
cmp
inc
add
leave
add
movsl
adc
add
cmpsb
fwait
mov
clc
lcall
jmp
mov
sbb
fstl
icebp
pusha
pop
inc
sub
or
or
jo
adc
lcall
push
icebp
rorb
pop
and
and
fdivr
pushl
xor
xchg
icebp
loopne
xlat
in
out
leave
ja
les
aad
cmp
ljmp
mov
or
shll
outsb
out
dec
out
cmp
inc
push
adc
mov
das
out
icebp
les
dec
mov
mov
lcall
sbb
cmp
jnp
pop
mov
incl
xor
movsb
adc
lock
or
ret
lret
inc
sar
jmp
pop
jecxz
pop
jle
sarb
in
xorl
mov
stos
ja
shlb
in
mov
pop
mov
add
jmp
xor
mov
enter
into
sub
mov
pop
adc
mov
into
dec
xchg
mov
out
nop
les
and
mov
lds
lock
adc
and
icebp
add
ret
js
mov
mov
mov
outsb
inc
les
cmp
xchg
push
in
repnz
neg
lcall
and
shlb
sub
insl
adc
inc
push
mov
dec
xor
sub
pop
icebp
xchg
xor
in
pop
push
fisubrl
mov
shll
xor
nop
lret
das
clc
lcall
in
movsb
stos
or
fdiv
rclb
dec
mov
add
and
sti
inc
mov
mov
call
ljmp
pop
repnz
adc
sub
es
dec
add
mov
daa
scas
enter
lcall
jg
inc
lcall
mov
ss
mov
pop
flds
aam
aaa
mov
xchg
fisttpll
stc
int
mov
ljmp
push
iret
orl
xlat
in
and
cmp
pop
rcrb
jno
call
lcall
jp
cmp
pop
and
incl
mov
dec
outsl
enter
lods
in
mov
movsb
movsb
add
jmp
xchg
mov
sbb
cmp
inc
push
loop
jg
sub
sbb
dec
push
sub
push
cmp
and
cmc
in
pop
inc
fcoml
idivl
pop
cs
aam
cli
pop
sbb
sbb
sahf
movb
notl
out
push
pushf
in
aad
inc
xor
mov
dec
aad
dec
xchg
andl
or
fs
lret
add
decl
hlt
in
mov
fwait
sub
ss
outsb
lret
add
mov
nop
clc
ja
repz
cmp
lcall
loop
rolb
iret
loop
test
aad
sub
cmp
inc
into
mov
hlt
popa
add
mov
sbb
mov
rcr
adc
mov
dec
aad
out
hlt
stos
or
adc
jmp
inc
push
movsb
scas
scas
loop
inc
push
mov
adc
aad
int3
sbb
xchg
in
push
inc
jp
mov
inc
mov
aad
in
adc
xor
cmp
fistpl
mov
call
rorb
and
pop
or
add
and
add
call
loopne
sbbl
outsb
ja
std
iret
sbb
aam
xchg
out
repz
lcall
mov
xor
jp
mov
cli
in
out
cli
lcall
fcmovb
ret
dec
pushf
into
dec
add
ljmp
pushl
test
out
lock
rol
mov
push
mov
push
xor
dec
jecxz
insb
out
ljmp
dec
add
fldenv
xor
mov
sub
jne
out
pop
xchg
jg
imul
aaa
push
cmp
and
cmp
sarb
mov
ret
scas
cld
cmp
in
popa
mov
push
mov
iret
subl
inc
sti
or
decl
add
call
inc
ja
clc
jmp
cwtl
jo
sub
or
adc
ret
and
clc
or
dec
cwtl
rclb
decl
xchg
js
sub
jg
sti
fisttps
push
call
pop
ss
cmp
enter
mov
adc
mov
jo
out
mov
pop
sub
cmc
arpl
shlb
cmovs
test
mov
in
lahf
lcall
fnstsw
loop
fwait
cmp
insb
decl
add
aad
mov
inc
ficomps
mov
test
pushf
or
fnop
and
mov
lcall
and
push
int
pushf
int
unpckhps
or
repz
ret
xor
adc
int3
call
std
lcall
sub
lea
lret
hlt
dec
mov
insl
lods
inc
adc
inc
xchg
and
sbb
inc
roll
sub
ret
add
lret
out
lods
jg
mov
call
jmp
and
inc
or
enter
lds
popf
test
insb
scas
movb
lret
daa
cli
add
pop
add
pop
fbstp
push
xchg
sbb
out
dec
gs
cmpl
cwtl
out
aas
adc
kmovb
lds
inc
es
inc
mov
dec
sar
incl
movsb
fxch
cmpb
pop
push
lock
push
ja
ljmp
inc
sub
ret
cmpsl
xchg
mov
daa
decl
jg
mov
cmp
cmp
sbb
rcll
mov
addb
outsl
outsl
movsb
out
and
mov
jno
add
inc
rcl
jnp
or
orl
ljmp
inc
sar
decl
cmp
and
dec
mov
jo
inc
test
hlt
sbb
jae
sbb
lock
in
mov
out
rorb
jae,pt
jmp
pop
mov
fbstp
inc
incl
testb
in
clc
push
jb
xchg
push
jb
call
lcall
scas
mov
icebp
pop
es
int3
dec
sbbb
mov
pop
ret
or
stos
loopne
adc
fistpl
aaa
sub
xadd
lret
ret
dec
cmp
dec
xor
scas
fmuls
fisttps
cmp
mov
cmpsl
mov
clc
repnz
cmpsb
mov
adc
jg
push
jbe
add
adc
and
jo
dec
jno
sahf
add
push
clc
cmp
fdivs
mov
in
dec
mulb
dec
cwtl
mov
lret
leave
or
jmp
sti
outsl
sub
xchg
mov
sub
push
outsl
push
fmuls
xor
inc
cmpb
sar
jle
pop
sub
dec
dec
cmp
jmp
les
es
lcall
decb
addr16
lret
cmpsb
sbb
test
cmc
shl
cmp
jp
sarl
adc
icebp
mov
loope
jo
outsb
add
mov
and
sar
int
sub
mov
fadd
mov
xchg
xchg
inc
outsb
mov
decl
xchg
sbbb
cs
movsb
int
and
inc
mov
dec
ret
and
and
pop
arpl
enter
fdivrs
sbb
mov
sub
cmp
mov
mov
outsl
mov
repnz
and
sub
leave
dec
fimull
dec
test
pop
cmp
dec
aam
jns
cmp
jecxz
lock
fidivs
xor
or
repz
jns
pop
femms
xchg
cmp
int3
push
jmp
fdivp
xor
int
cmp
cmp
sahf
imull
ret
leave
add
mov
fwait
cmp
lahf
push
pushf
ds
inc
jo
out
arpl
sub
jnp
add
cmp
pop
lahf
and
sbb
jmp
pop
dec
aaa
add
and
rclb
out
cmp
cmp
shrb
sub
imul
pop
and
xor
dec
add
fstps
cs
xor
es
jl
xchg
das
das
sahf
cmc
shr
sbb
add
sub
sbb
ds
xor
dec
aas
and
iret
inc
jnp
adc
dec
mov
and
jns
mov
mov
pop
out
xlat
inc
cmp
dec
lods
pop
xchg
adc
sbb
aaa
pop
repnz
repnz
dec
xor
and
push
dec
icebp
and
mov
rorl
and
fucomip
ds
pcmpeqd
lret
in
repnz
sub
adc
out
dec
enter
cmpsl
jmp
and
or
fdivs
divl
das
movsb
jns
jmp
fprem
sahf
imul
scas
push
mov
cmp
jecxz
pmulhw
outsb
pop
loopne
pop
inc
mov
mov
jmp
es
call
add
out
jg
dec
std
cmp
mov
add
pop
and
mov
ffreep
dec
inc
arpl
inc
loope
xchg
jg
mov
insb
and
lods
mov
mov
pop
xchg
inc
div
aas
orl
inc
iret
outsb
addr16
lret
xchg
ds
xchg
pop
lret
fwait
lcall
call
rol
popa
imul
stos
jp
mov
cmovo
das
mov
sub
call
xchg
xor
fcomp
xlat
mov
das
leave
arpl
call
repz
decl
lds
leave
gs
xchg
push
cld
outsb
pop
into
out
gs
cli
pop
xor
in
shll
enter
imul
divb
int
push
push
je
xor
cs
in
xchg
shrb
out
sti
jb
fisubrl
xor
je
ja
lret
mov
enter
clc
fs
mov
subb
scas
mov
mov
push
jb
test
sbb
xor
orl
fldl2e
loop
fcompl
out
mull
arpl
sbb
out
divb
push
sahf
pop
insb
push
add
lods
ds
dec
cmpsb
jns
test
lds
cmc
pop
ret
pop
sub
int
jns
push
sub
mov
imul
inc
push
mov
lret
pushl
pop
xor
cmpsb
sar
dec
mov
and
dec
scas
clc
mov
iret
and
outsb
daa
loope
scas
mov
loope
mov
subl
outsb
inc
adc
rcrl
sti
insb
outsb
sub
cld
ret
out
outsb
es
lret
pop
push
loop
outsb
pop
stos
outsb
mov
xchg
dec
imull
popa
divb
addr16
lock
cli
xchg
test
mov
nop
ds
popa
jo
cs
sub
js
aaa
clc
fildl
sbb
out
cltd
je
fld
inc
sub
sbbl
shlb
jmp
inc
mov
jecxz
mov
dec
enter
popa
push
pop
inc
rorl
cmpsb
es
pop
jo
jg
stos
inc
negb
push
int
rclb
outsb
cmpsb
icebp
and
mov
lret
ror
fists
push
jg
rolb
in
inc
adc
adc
mov
jmp
sbb
dec
leave
pop
shrb
out
out
movsl
sar
xor
push
mov
adc
cmpsl
insl
adc
lock
or
in
sti
in
push
sbb
jnp
arpl
push
movsl
jnp
xchg
push
fnstcw
out
in
mov
out
fdivp
sahf
cmpsl
dec
sbb
push
addr16
out
ja
cltd
test
repz
out
add
or
jns
out
sub
jbe
jp
jnp
lds
xchg
jecxz,pt
repz
out
adc
aad
fucomp
jle
out
cmp
out
in
inc
in
push
jae
mov
lahf
mov
adc
in
test
push
and
sub
cmpsl
stc
pop
lock
sti
xor
cmpsl
push
test
and
push
repz
dec
idiv
push
dec
adc
loop
mov
loop
mov
iret
mov
lods
roll
dec
jmp
xlat
push
jmp
pop
out
cmp
cmp
pop
imul
int
push
jg
out
in
cmpsl
fnstcw
push
int
out
call
sahf
inc
and
aas
dec
pop
adc
push
movsl
sbbl
push
lret
push
fbstp
in
sbb
out
push
adcl
lds
mov
sahf
out
add
sbb
imul
push
jnp
mov
out
jecxz,pt
mov
jmp
cmc
cli
or
jno
dec
cmp
sarl
cli
jns
popf
lods
pop
inc
inc
cli
mov
push
loop
jmp
xchg
dec
nop
and
mov
mov
jmp
fadds
mov
test
rclb
idiv
decl
pop
mov
js
xorb
mov
fdivrp
loope
pop
add
add
rorb
cli
xlat
sbb
cmpsl
aam
cmp
xchg
leave
pop
sub
lods
jg
cmpsl
and
cmp
sar
ljmp
mov
out
mov
sub
nop
mov
push
sar
call
ret
cmp
or
cmpsl
out
xchg
pusha
add
movsb
stos
filds
xor
rorl
ret
and
sarl
out
mov
cmp
jecxz
push
jle
rcrb
cmpsb
clc
call
addb
fldcw
fmuls
icebp
xchg
loope
add
std
jo
push
stc
pop
dec
adc
inc
and
mov
push
xor
xor
pop
fucomip
adc
mov
mov
jo
jge
jo
and
dec
push
xchg
mov
cli
sbb
pushl
int
inc
mov
icebp
rclb
fwait
loop
jg
fisubrl
adc
push
out
pop
mov
sar
add
mov
lret
sub
xchg
aaa
ret
sbb
mov
xchg
xchg
add
add
mov
inc
out
mov
mov
or
mov
sti
fcmovnb
dec
nop
sub
push
sbb
sbb
imul
sub
fstp
xorb
dec
lods
sub
sahf
pop
popf
cltd
add
das
stc
push
data16
jg
and
int3
pusha
mov
ret
mov
mov
and
sti
sbb
decl
jp
mov
shrb
les
rcl
sti
call
loopne
and
clc
mov
sti
incl
cmpsb
adc
push
int3
cmp
cwtl
mov
cmc
test
jle
lcall
cld
test
dec
inc
inc
add
jns
ret
mov
dec
jmp
xorl
call
cmp
adc
popf
dec
inc
mov
add
shrl
mov
fwait
and
and
add
xor
push
hlt
add
clc
mov
jo
and
inc
mov
fwait
ret
rorb
rcll
sub
lcall
inc
je
add
js
add
jmp
shr
maskmovq
mull
sbb
cmp
pop
adc
mov
xor
mov
jmp
mov
mov
jnp
xchg
dec
mov
pop
mov
fs
fsts
xchg
xor
fildl
push
in
test
lahf
addb
xchg
push
cmp
loop
jo
out
jmp
outsl
push
dec
xor
imul
imul
xor
loop
imul
pop
in
lcall
stc
xchg
push
pop
movb
popf
bound
cmpsl
dec
push
xchg
mov
enter
std
xchg
push
xchg
ret
xchg
inc
push
out
sub
pushf
pop
call
ss
pop
dec
lahf
xchg
xor
add
enter
std
pop
stc
push
test
iret
mov
fisubl
outsl
iret
xchg
pop
popa
sub
filds
cs
ljmp
pop
popf
xchg
enter
rorl
ret
push
xchg
xchg
pusha
xchg
outsb
imul
or
stc
xchg
out
inc
aaa
iret
lea
je
push
pop
jns
in
inc
xchg
xchg
lds
pop
ret
xchg
mov
test
cli
or
loopne
lods
cmp
sti
pop
dec
or
jae,pn
test
mov
mov
pop
push
sahf
leave
das
pop
ja
mov
shlb
ja
insb
push
mov
test
lahf
mov
add
sahf
cmp
jbe
mov
mov
imul
dec
popf
mov
in
mov
rolb
xchg
xchg
dec
stc
mov
in
xchg
pop
push
ret
ss
ss
repnz
push
add
xor
inc
in
sub
xchg
push
push
dec
or
js,pn
movsl
xchg
inc
aas
iret
pop
xchg
cwtl
and
rorb
notb
daa
cmp
xor
mov
loopne
mov
outsb
adc
xchg
jmp
and
out
rolb
popa
enter
aas
out
jo
sti
sti
lods
std
sbb
into
dec
cmp
sub
jo
out
xchg
push
dec
push
sub
jbe
inc
int
ds
push
popa
cs
mov
pop
outsl
movb
xchg
mov
pop
out
cmp
mov
aas
data16
aaa
mov
outsb
pop
mov
fidivs
xchg
or
out
ja
jg
push
dec
into
mov
mov
sub
pop
popa
inc
test
neg
or
dec
xchg
into
jg
push
andl
cs
push
xor
jbe
outsb
dec
sub
dec
push
lds
popf
xchg
push
adcl
xchg
xor
lods
jp
cmp
xorl
cs
sar
dec
sti
enter
out
shlb
push
outsb
mov
das
push
mov
dec
push
or
lds
pop
or
lcall
orl
push
push
int
into
pusha
push
or
pop
cld
xchg
pusha
lahf
xlat
daa
inc
out
xchg
push
ja
popa
mulb
pop
enter
sub
pop
sub
pop
inc
inc
fcomps
pop
mov
xchg
or
push
push
outsl
push
subl
dec
adc
fsubrp
mov
adcl
loope
jbe
ss
je
cmp
incl
in
mov
or
ret
mov
aas
xchg
pusha
push
into
mov
adc
push
inc
or
into
sahf
pop
movsb
jns
jbe
pop
fistl
lods
pusha
nop
dec
push
scas
dec
inc
sahf
lcall
inc
push
das
pop
ret
pop
adc
pop
cs
dec
xor
cmp
or
jle
mov
push
ret
xchg
out
push
sub
outsb
sti
notl
jle
aas
aaa
ret
cwtl
pusha
testb
pop
int
out
dec
or
mov
pop
jno
mov
sub
shll
xchg
mov
sbb
rclb
inc
leave
dec
out
push
adc
rorb
jne
sub
aam
pop
inc
xchg
xorl
xchg
mov
jbe
push
push
shlb
sbbb
xchg
push
inc
sbbl
or
mov
pop
push
pop
sbb
push
jbe
push
pop
in
mov
pop
pop
pop
xor
pop
pop
pop
outsb
cli
stos
add
push
mov
xchg
outsb
dec
xchg
arpl
push
ljmp
sahf
andb
aaa
je
jge
mov
push
xchg
pop
loopne
int
pop
push
pushf
dec
jne
sub
ret
loope
aaa
push
loop
pop
mov
ljmp
jb
faddl
push
push
popf
lcall
lcall
xchg
in
data16
out
ja
lcall
mov
int
push
xchg
out
ja
pop
out
add
sarb
jno
pop
sub
imul
jmp
or
xchg
or
sub
data16
cld
push
push
pushf
mov
flds
pusha
xchg
lahf
mov
cs
jmp
push
push
rorb
lock
sub
pop
push
xchg
push
popa
nop
aaa
or
add
mov
out
insb
lahf
xor
mov
pop
popa
in
iret
mov
dec
add
test
add
xchg
gs
movsl
das
imul
pop
push
int3
dec
cmpsb
daa
icebp
orb
cmpsb
lock
add
pop
dec
xchg
xchg
imul
or
xchg
fs
sbb
cmp
call
xor
push
push
arpl
lods
loopne
xchg
pop
push
shrl
stc
sbb
jno
bound
xchg
push
mov
mov
push
popa
fiaddl
sub
jo
pop
int3
ds
iret
add
cmpsb
dec
into
sub
mov
mov
mov
out
sti
xor
mov
daa
xor
mov
insb
cmp
mov
aaa
fisttpl
adc
outsl
aaa
mov
cmp
into
cltd
xor
imulb
clc
int
ficomps
jo
stc
mov
pop
insl
mov
insl
dec
inc
cmp
sarl
mov
popa
int3
mov
push
ficompl
addl
cmp
push
enter
cmpsb
xchg
pop
jne
mov
idivb
xchg
mov
dec
adc
insb
dec
push
popf
notb
jbe
shrl
jle
pop
in
mov
xchg
cmp
cs
push
gs
outsb
nop
pop
dec
shr
jne
aaa
lahf
out
mov
dec
int
or
pop
pop
mov
and
xchg
cmp
pop
push
shrl
test
shrl
xchg
bound
jo
movl
scas
into
xchg
jne,pn
sahf
lock
mov
into
xchg
xchg
mov
lds
adc
shll
or
daa
dec
jo
shll
sub
push
jns,pn
into
cmpl
push
push
sbb
ja
inc
inc
popa
or
pop
jbe
pusha
mov
out
jl
out
cs
and
pop
imul
pusha
clc
loope
sbbl
lahf
add
xor
rclb
mov
incb
loopne
jmp
and
rcll
jecxz
in
pop
or
mov
rcrl
in
shll
inc
hlt
cmp
int
push
out
clc
jno
inc
hlt
adc
push
cmp
int
scas
mul
ljmp
ds
mov
sub
int
xchg
adcb
movsb
mov
xor
out
ret
imulb
mov
jnp
adc
inc
xor
pusha
jl
push
jb
cmp
mull
ljmp
or
hlt
and
adc
cmp
ds
jns
fs
push
jl
push
mov
iret
rcll
shlb
cmp
hlt
out
sub
push
pusha
push
nop
add
xchg
iret
sarl
iret
mov
cli
and
repz
push
dec
sub
push
outsl
ds
cmpsl
stc
fisubrs
push
shl
mov
fcmove
jnp
repz
push
add
repnz
ds
idivl
dec
push
mov
jbe
enter
sahf
lcall
fdivp
fsubrp
push
into
push
cld
out
push
sub
adc
out
jns
cmpsl
push
cmp
push
push
mov
js
push
xchg
lret
out
out
jns
loop
push
add
in
jnp
repz
ss
jo
push
out
lcall
xchg
hlt
sahf
ja
ret
cmc
push
fdivr
push
and
add
cmp
cmc
adc
or
ljmp
pop
dec
mov
sbb
and
rorl
sbb
cmp
in
xchg
inc
bnd
inc
or
rorl
adc
jmp
testl
imul
out
in
imul
inc
and
test
shr
lock
mov
imul
mov
pop
mov
int
clc
stos
pop
sti
mov
add
pop
or
sti
loopne
cmp
dec
mov
sub
push
notl
and
and
mov
inc
mov
leave
daa
add
and
push
leave
outsb
inc
out
sbb
call
mov
in
in
pop
sarl
in
fisubrl
clc
sbb
negb
jns
cmp
cmpsl
jmp
and
cld
jno
and
inc
sub
mov
mov
adc
test
dec
cld
cmp
jge
inc
popa
sub
lock
add
icebp
cwtl
xor
xor
add
jmp
sub
roll
jno
mov
lock
mov
mov
bound
jmp
sarl
sbb
mov
orb
mov
imul
sbb
call
out
inc
clc
clc
and
or
fnstsw
sub
adcl
sbb
pop
adc
sub
push
in
orb
sbb
fdivr
jg
cmp
dec
adc
cmp
pop
mov
icebp
jle
push
jns
lock
inc
hlt
lock
jb
sub
sub
sub
in
inc
mov
adc
mov
sbb
incl
incl
daa
jno
inc
push
xor
js
xlat
std
das
nop
mov
push
sbb
xor
aas
pop
std
insb
lret
in
jno
jg
stc
in
jge
es
iret
in
popa
call
repz
aam
ja
enter
mov
nop
xchg
aam
popl
outsl
aad
je
out
loopne
in
fcos
lahf
int3
dec
xchg
insl
jnp
aam
push
in
fnstcw
mov
lcall
hlt
jbe
call
pop
cld
fisttpll
imul
fdivrs
add
sbb
jmp
out
pop
idivb
cmpsl
int3
loop
jne
jbe
pop
xor
call
push
out
mov
in
in
hlt
push
lea
fucomi
insb
loopne
shl
cli
dec
lret
pop
aas
jg
out
bnd
mov
jbe
fucomi
clc
jecxz
in
ljmp
jecxz
movl
pop
in
aam
imul
jecxz
in
lret
cld
lcall
ret
aam
fcmovnbe
in
sti
in
push
lock
push
mov
and
fbstp
cmp
mov
jl
scas
mov
push
lock
in
jge
rorl
lcall
pop
idivl
ret
aaa
inc
dec
in
jecxz
xchg
fdivrs
jp
aad
sub
ds
mov
mov
sahf
push
push
popf
ja
loop
out
aad
sti
es
lahf
ret
fneni(8087
jl
mov
mov
jo
or
in
stc
rcr
out
fninit
jno
fsin
jo
loop
jge
dec
lock
jge
dec
or
loop
inc
xchg
fs
insl
std
aam
sti
jb
push
pop
fsub
pop
sti
xchg
ret
jbe
inc
xchg
in
imul
mov
loopne
push
mov
sbb
orl
ja
sub
add
popa
or
in
pop
mov
inc
push
outsb
ljmp
stc
enter
pop
aam
push
lret
mov
xlat
dec
enter
mov
jmp
add
fstl
cmp
pop
in
jbe
mov
in
clc
idivb
es
ret
fdivrs
aas
dec
arpl
pop
jge
jge
pop
call
lock
decl
vpunpckhqdq
mov
jne
icebp
jecxz
pop
hlt
xchg
scas
es
shr
out
cmpsb
imul
out
ja
fucom
jbe
mov
aas
push
into
push
mov
cld
aam
and
dec
push
mov
aaa
into
jecxz
call
cs
lock
pop
shl
jmp
push
leave
jmp
push
out
int
sti
push
push
fbstp
das
fiaddl
lock
or
jmp
notb
fildll
icebp
jmp
es
add
ja
outsb
inc
push
rcll
scas
std
ss
jmp
in
icebp
jmp
jecxz
ljmp
fnstsw
iret
push
outsl
ljmp
pop
pop
aam
xchg
sti
mov
bound
inc
out
jecxz
in
outsb
ret
testb
pop
or
nop
das
mov
call
test
imul
rolb
fsubl
sub
jmp
inc
xor
sbb
cwtl
mov
xorl
out
push
lock
and
adc
mov
lea
xlat
push
fisubrl
je
fmull
push
mov
sahf
add
mov
in
push
sbb
cs
scas
mov
out
popa
cmp
pop
inc
lods
das
jbe
xor
pop
cs
int3
mov
pop
ret
pop
test
ja
ficoms
xor
int
sarl
andb
std
mov
insl
jmp
xor
mov
shll
divb
hlt
xor
dec
push
in
fsub
fisubs
mov
dec
loope
fwait
pop
cmpsb
data16
xlat
mov
ss
fisubrs
pop
mov
push
in
fldl
fcmove
pop
or
xchg
dec
loop
shll
aas
jb
jbe
pop
xchg
inc
push
sub
mov
push
jmp
xchg
push
cmc
pop
stos
pop
in
jns
lds
in
push
lods
imulb
add
out
aam
lods
pop
lcall
scas
pop
dec
loope
pop
pop
pop
mov
ficomps
mov
pop
into
mov
aas
pop
std
icebp
loop
push
ljmp
lock
sti
pop
jl
push
mov
push
mull
fdivrs
push
cmpsb
pop
push
or
insb
popa
pop
jo
into
fmuls
pop
cmp
fdivrs
inc
ds
int3
scas
clc
jmp
loopne
popa
into
push
jmp
fisttpl
sbb
push
out
inc
inc
loope
fnsave
jecxz
push
xchg
fldl
sbb
cli
data16
sarl
mov
fsubp
outsb
xchg
jecxz
dec
loop
aas
fbld
jmp
pop
sub
jbe
in
cmp
xchg
aad
mov
sub
in
jl
jmp
daa
jecxz
out
jp
inc
xlat
xchg
mov
push
cs
icebp
push
xchg
inc
pop
cmpsb
insb
loop
add
add
xchg
out
outsl
xlat
mov
cld
das
fdivs
out
dec
faddp
or
push
ret
adc
lahf
dec
sbb
outsl
cmpsb
and
mov
mov
and
pop
and
mov
pop
add
cmc
mov
xor
sti
push
mov
mov
push
xchg
jns
aaa
bound
scas
mov
and
pop
add
inc
pop
fidivrl
out
cmpsb
and
mov
lahf
out
inc
sub
push
or
jl
out
movsl
call
iret
repz
mov
push
inc
int
jns
movsl
xor
adc
movsb
lock
out
cmp
int3
mov
sahf
out
jle
push
cmp
shll
adc
inc
ljmp
push
into
mov
out
sahf
xchg
mov
dec
xor
cmp
repz
sbb
outsb
ljmp
enter
jle
repz
insb
bound
mov
stc
cmp
hlt
mov
iret
sarl
lods
test
nop
fistps
mov
push
push
inc
push
cmp
and
adc
mov
xor
out
in
rol
scas
cmpsb
repz
repz
out
lcall
adc
sarl
add
scas
les
scas
movsb
lcall
pop
pop
inc
cmp
repz
pushl
nop
pop
int
inc
mov
adc
and
dec
jo
sbbb
cmp
decl
inc
clc
in
mov
push
cmp
fcomps
sarb
xchg
pop
xor
push
sub
call
nop
inc
xor
js
cmp
dec
jno
add
add
xlat
push
popa
loopne
decl
adc
xor
movsl
fists
rol
xor
sub
push
subl
dec
dec
fmul
test
jo
push
jb
outsb
leave
outsl
sbb
rolb
xchg
cmp
ljmp
inc
dec
adc
xchg
js
js
shlb
popa
enter
nop
clc
pop
pop
mov
aas
push
xchg
cwtl
adc
jne
jb
xchg
pusha
test
mov
repz
adcl
adc
cmp
inc
testb
xor
jb
mov
fs
mov
push
jnp
aas
push
cmp
jp
fcmove
pushf
call
jmp
icebp
movsl
sarb
jae
nop
dec
lods
stos
jmp
lcall
xor
aas
inc
mov
mov
sbb
enter
call
ljmp
imul
xchg
add
push
shrl
lcall
xor
ds
lahf
jo
movsl
dec
outsb
mov
xor
pop
pop
incl
subb
outsb
enter
dec
sub
test
sub
push
mov
cld
pop
lock
mov
push
and
aaa
shlb
js
push
mov
jge
cmp
pop
inc
pop
std
cmp
and
dec
pusha
push
adc
adc
decl
pop
or
std
sub
xor
popa
rcrl
repz
mov
rcrl
push
ss
nop
jbe
fildl
pop
jae
shrl
outsl
push
cmp
sbbb
mov
in
decl
cltd
pop
dec
lret
mov
jecxz
inc
test
daa
arpl
mov
popf
aaa
decl
imul
pushf
pop
pop
fiaddl
dec
push
popa
xor
fldcw
cmpsl
lods
pop
xor
mov
xor
push
mov
outsl
test
addr16
xor
jg
push
push
mov
fsubl
js
xor
aas
popa
int
insb
negb
movsb
stc
inc
lea
es
mov
fldl
jg
cmpsl
cmpsl
out
mov
ficompl
mov
test
test
fdivrl
popa
inc
out
pop
inc
dec
lcall
inc
lds
cld
nop
dec
fwait
jb
fmuls
sbb
cmpsl
pop
dec
int
jno,pn
insb
inc
iret
pushl
in
xchg
jb,pt
ljmp
cmpsl
cli
mov
mov
mov
sahf
ljmp
jmp
jbe
xlat
sub
push
sahf
push
push
int
push
mov
es
mov
jns
push
inc
int3
jle
insb
mov
inc
add
dec
cmpsl
push
push
xor
cld
incb
rorb
mov
loopne
add
pop
pop
fstpl
jno
int
das
in
repnz
push
dec
xchg
cmpsb
dec
inc
loop
xchg
sbbl
loope
imul
dec
inc
mov
inc
pop
popa
rorb
daa
mov
adc
int
push
int
inc
lret
sub
jns
mov
outsb
pop
mov
lahf
jl
jns
inc
lret
lcall
jg
mov
addr16
mov
jp
ds
faddl
ljmp
jns
popa
xchg
xlat
es
js,pn
orb
test
imul
pop
out
imul
sarl
das
xchg
test
lds
pop
xor
outsb
mov
inc
fisubrs
mov
js
mov
movl
test
out
stos
out
fcomps
notl
daa
dec
fcmove
xor
scas
jl
fwait
or
jbe
cs
push
outsl
vpcomuw
test
push
pop
push
xor
sbbb
xchg
data16
das
mov
nop
mov
pop
imul
push
mov
mov
roll
scas
rcll
outsb
shll
inc
inc
dec
xchg
mov
jmp
jg
in
lret
imul
out
dec
lds
fstps
insb
popf
sbb
addb
ds
lahf
fsubs
mov
das
xor
jge
movl
inc
jmp
pop
pop
ret
ret
ds
test
pop
test
xchg
push
orl
push
mov
pop
rcl
push
xchg
inc
jbe
sbb
scas
mov
mov
mov
imul
cld
pop
ret
push
dec
ficompl
testb
mov
push
mov
ss
sahf
jbe
pop
nop
pop
movsb
jns
fsubrs
out
pusha
subb
pop
pop
idiv
mov
inc
popf
pop
jle,pn
adc
jecxz
insb
push
movsl
pop
xchg
xchg
sbbl
add
cmp
stos
push
inc
into
add
push
leave
fwait
jp
fistps
negb
pusha
push
inc
xchg
jle
jne
imul
js
rcrb
cltd
sub
lcall
ficomps
cs
xlat
pop
xchg
pop
cmpsb
data16
int
ficomps
pop
jb
out
pop
addr16
mov
in
in
cld
xchg
lds
aas
jl
dec
mov
sbb
stc
inc
pop
dec
nop
xchg
std
cltd
dec
fwait
push
imul
addl
xor
lods
adc
mov
pop
ss
test
pop
dec
xchg
imul
pop
xor
ss
xor
mov
ljmp
aaa
imul
pop
or
sti
popf
push
mov
clc
pop
notl
pop
cmp
pop
dec
cld
push
into
push
aaa
push
imul
icebp
and
sahf
cld
test
test
leave
clc
adc
fmuls
mov
leave
mov
jo
jecxz
add
mov
inc
fiaddl
xor
sahf
data16
fistpll
hlt
int3
lods
popa
inc
mov
clc
xchg
outsl
daa
push
insl
xlat
out
sbb
pusha
pop
movsb
popa
mov
fiadds
push
dec
mov
mov
pop
sbb
mov
cmp
xchg
push
pop
sahf
add
cs
in
cmpsb
dec
add
aaa
push
dec
push
roll
pop
pop
mov
aad
fildl
std
mov
adc
movsl
das
cwtl
ljmp
mov
mov
sbbb
xchg
lret
push
push
orb
cmpl
rorl
and
test
inc
push
add
sub
mov
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
adcl
xchg
push
inc
fs
je
in
in
int
push
inc
gs
inc
jb
popa
je
inc
jbe
outsb
je
sbb
imul
inc
mov
inc
outsb
jne
push
imul
jae
js
je
jb
mov
gs
sbb
je
les
outsb
fs
imul
jnp
jne
jb
popa
insl
and
jb
inc
imul
sub
outsb
outsw
adc
pop
jnp
jb
jo
ret
push
xor
dec
daa
dec
outsl
fs
dec
or
jg
mov
in
jae
outsl
outsb
pop
dec
popa
jae
inc
add
imul
lock
popa
insb
inc
insb
or
sbb
push
adc
test
jno
loopne
pop
inc
and
ss
push
push
js
insb
popa
addr16
popa
or
pop
xor
daa
xchg
loope
or
stos
nop
push
push
push
insb
inc
mov
je
xchg
insb
jb,pn
cmp
mov
inc
mov
daa
imul
jo
adc
push
lds
aas
sbb
or
outsl
in
mov
cwtl
imul
mov
xor
and
jo
imul
gs
daa
dec
xchg
out
mov
mov
pop
mov
jbe
fs
push
cmpsb
inc
xor
or
js
pusha
or
repz
sbb
fwait
int3
out
mov
mov
je
stos
push
jb
pop
cmpl
and
and
inc
and
cwtl
into
inc
inc
push
jae
push
gs
jbe
xor
fistpl
cwtl
push
call
mov
mov
push
sbb
ljmp
outsl
popa
fs
sbb
data16
push
jnp
aaa
cmpsl
xor
outsb
data16
dec
daa
lea
mov
bound
pop
sbb
gs
push
cmpsb
jb
pop
and
sbb
test
add
ss
pop
aas
jae
push
stc
adc
aas
lock
mov
bound
out
rolb
push
loop
loopne
mov
dec
gs
push
scas
cmpsb
arpl
sub
sbb
daa
push
jo
sbb
adc
pusha
pop
sbb
outsb
inc
out
sub
pop
lods
xor
lods
and
hlt
fcoms
pop
imul
mov
xor
imul
outsb
and
sbb
xor
popa
cmp
shlb
stos
jns
mov
push
xor
pop
inc
addr16
dec
inc
pop
sbb
push
sahf
sbb
or
imul
filds
jae
sbb
int3
fcomp
cs
adc
jae
je
outsb
jae
cmpsb
clc
mov
imul
jb
andl
inc
nop
jae
sbb
js
jnp
jb
imul
cli
adc
push
cmp
sbb
push
mov
mov
dec
and
and
aas
fistps
mov
daa
insl
iret
cmp
and
insb
push
fbstp
jae
cmp
or
dec
outsl
ja
mov
data16
pop
push
fisubrl
mov
jle
cmpsb
sbb
mov
push
js
inc
adc
sbb
outsl
dec
adc
outsl
subl
sub
pop
outsl
inc
ret
int3
jno
inc
fs
pusha
outsl
test
push
ljmp
jb
and
sbb
pop
movsb
outsb
jne
les
push
mov
ret
enter
adc
sbbl
rcl
call
loop
sbb
xchg
jmp
clc
jns
movsb
movsb
add
or
dec
mov
sub
dec
dec
insb
or
jo
jmp
cmpsb
lods
ja
mov
and
push
outsl
jae
imul
xchg
xchg
fisttpll
fs
or
dec
jae
in
or
es
sub
imul
push
jnp
mov
daa
popa
lock
decl
or
sbb
push
push
adc
add
dec
add
repnz
inc
sti
out
jmp
add
and
add
cmp
push
push
xor
add
sbb
dec
ror
insb
add
and
add
sti
repnz
sbb
lret
cmp
xor
mov
add
in
int3
xor
sub
or
pushf
or
je
adc
ret
and
and
ret
cs
adcb
outsb
inc
shrb
push
and
xchg
or
jae
mov
mov
dec
inc
aaa
hlt
loop
or
inc
sbb
or
add
add
add
jne
pusha
mov
lea
push
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
