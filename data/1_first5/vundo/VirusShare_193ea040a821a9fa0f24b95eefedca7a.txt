ret
ret
push
push
pop
mov
ror
mov
xor
mov
push
xchg
push
xchg
push
xchg
or
add
add
and
mov
add
and
shr
shl
mov
mov
jmp
push
xchg
pushl
xchg
push
nop
ret
jmp
dec
dec
dec
dec
dec
inc
dec
dec
dec
inc
inc
inc
add
add
ror
and
mov
inc
mov
jmp
cmp
xchg
jmp
add
add
add
call
nop
jmp
inc
mov
jmp
add
shrb
in
mov
mov
sub
mov
push
xchg
push
nop
jmp
jne
push
jmp
dec
inc
inc
inc
dec
dec
dec
inc
inc
dec
subl
or
shr
add
dec
and
add
add
sub
add
or
pop
pushl
xor
xor
pop
xor
xchg
push
mov
jmp
add
xchg
add
mov
jmp
add
add
add
call
mov
call
nop
push
xchg
call
xchg
jmp
push
nop
call
addr16
push
push
pop
xor
xchg
jmp
add
add
add
mov
in
cli
incl
add
je
jmp
shr
add
ror
rol
shr
mov
sub
addr16
jmp
add
nop
mov
dec
mov
push
xchg
push
nop
push
nop
jmp
push
nop
call
xchg
pushl
add
sub
xor
xor
pop
push
jmp
inc
dec
inc
inc
inc
inc
inc
inc
dec
xorl
add
xchg
push
xchg
call
addr16
jmp
push
jmp
dec
dec
inc
dec
inc
inc
dec
inc
inc
inc
inc
dec
dec
inc
inc
inc
dec
inc
inc
inc
inc
dec
inc
inc
inc
dec
dec
inc
inc
dec
inc
inc
jmp
and
nop
jmp
add
xor
or
add
xor
ror
mov
jmp
mov
xchg
incl
push
pop
dec
nop
jmp
add
add
push
xchg
xor
nop
inc
xchg
call
xchg
jmp
add
add
dec
mov
and
xchg
sub
nop
mov
xchg
andl
nop
push
mov
xor
nop
jmp
shr
jmp
inc
dec
inc
dec
inc
dec
inc
dec
inc
inc
dec
dec
dec
dec
inc
dec
inc
dec
inc
dec
dec
dec
add
mov
jmp
call
push
pop
sub
mov
mov
mov
nop
andl
mov
add
xchg
shl
sub
shl
or
add
mov
jmp
test
jmp
inc
dec
inc
inc
dec
dec
dec
inc
dec
inc
inc
dec
dec
dec
dec
dec
inc
inc
inc
dec
inc
inc
dec
dec
dec
inc
dec
dec
inc
pop
jmp
dec
inc
dec
dec
dec
dec
dec
inc
dec
inc
inc
dec
inc
dec
dec
dec
dec
inc
inc
inc
dec
inc
inc
dec
inc
je
jmp
test
jmp
dec
inc
inc
inc
dec
inc
inc
inc
inc
dec
inc
dec
dec
inc
dec
inc
inc
dec
dec
inc
inc
dec
dec
dec
inc
inc
dec
inc
inc
inc
dec
dec
dec
lea
jmp
inc
inc
dec
inc
dec
inc
dec
inc
dec
inc
inc
dec
dec
inc
inc
dec
mov
jmp
inc
dec
inc
inc
dec
dec
inc
dec
dec
inc
jne
sub
mov
ror
inc
mov
mov
movzbl
jmp
inc
inc
dec
inc
inc
inc
dec
dec
dec
inc
inc
inc
xchg
mov
nop
jmp
or
shl
and
shl
mov
add
nop
movzwl
jmp
inc
dec
dec
inc
inc
inc
inc
dec
dec
inc
inc
dec
dec
dec
dec
inc
dec
inc
dec
dec
dec
inc
dec
dec
dec
inc
inc
inc
dec
inc
jmp
add
add
add
add
shl
mov
sub
push
pop
pushl
add
pop
push
mov
push
mov
push
nop
jmp
lea
jmp
dec
inc
dec
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
dec
inc
call
mov
test
jmp
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
inc
inc
inc
inc
dec
dec
inc
inc
inc
inc
jne
mov
and
or
mov
dec
inc
xor
pop
ret
jmp
dec
dec
dec
inc
dec
inc
dec
inc
inc
inc
add
add
add
je
or
lea
jmp
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
inc
dec
inc
dec
inc
inc
dec
dec
dec
dec
inc
xchg
push
xchg
mov
xchg
mov
xchg
lea
jmp
inc
dec
inc
dec
dec
dec
inc
dec
dec
inc
dec
inc
dec
dec
dec
call
mov
jmp
push
jmp
inc
dec
dec
inc
dec
dec
inc
dec
dec
inc
dec
inc
inc
xorl
add
mov
push
nop
call
xchg
pushl
and
and
add
pop
dec
mov
jmp
mov
xchg
movl
push
pop
and
shr
mov
and
mov
or
and
mov
shr
jmp
inc
inc
dec
dec
inc
inc
dec
dec
dec
dec
inc
dec
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
dec
inc
add
push
pop
and
mov
mov
xchg
ret
jmp
dec
dec
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
dec
dec
inc
dec
inc
dec
inc
dec
inc
inc
inc
dec
inc
inc
dec
add
add
add
inc
and
rol
mov
rol
and
and
add
ror
jmp
dec
inc
dec
inc
dec
dec
dec
dec
dec
inc
dec
dec
inc
inc
dec
dec
dec
inc
dec
dec
dec
dec
inc
dec
dec
dec
dec
jmp
shr
shr
inc
and
rol
mov
xor
xor
mov
jmp
push
jmp
dec
inc
dec
inc
dec
dec
inc
inc
inc
inc
inc
inc
xorl
jmp
ror
jp
add
add
add
push
xchg
ror
ror
xor
mov
sub
xchg
push
mov
push
mov
jmp
or
shl
sub
and
mov
mov
nop
mov
push
pop
mov
xchg
mov
mov
ret
jmp
inc
inc
inc
dec
dec
inc
dec
inc
dec
dec
dec
inc
dec
dec
dec
dec
inc
inc
dec
dec
inc
dec
dec
dec
inc
inc
dec
dec
inc
dec
add
add
add
and
push
mov
or
add
and
mov
pop
xor
dec
test
jne
pop
pushl
and
inc
and
shr
shr
pop
call
nop
test
jmp
inc
dec
inc
dec
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
jne
sub
mov
ret
jmp
dec
dec
inc
dec
dec
inc
inc
dec
dec
dec
dec
inc
dec
inc
dec
dec
dec
inc
inc
dec
dec
inc
inc
dec
push
jmp
inc
dec
subl
jmp
push
cmp
test
jmp
inc
dec
inc
inc
dec
inc
dec
dec
inc
inc
inc
dec
je
call
xchg
test
jmp
inc
inc
dec
inc
dec
dec
dec
inc
inc
dec
inc
dec
dec
inc
dec
dec
dec
je
jmp
push
jmp
addl
call
mov
test
jmp
dec
inc
dec
inc
inc
inc
dec
dec
inc
dec
dec
inc
dec
dec
inc
dec
dec
inc
inc
dec
inc
inc
dec
dec
dec
dec
dec
inc
je
sub
mov
ret
jmp
dec
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
dec
inc
dec
inc
inc
dec
inc
inc
dec
ret
jmp
inc
inc
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
sbb
stc
xor
ror
pop
pushl
xchg
call
mov
add
xchg
shr
rol
mov
mov
or
pop
jmp
push
pop
push
xchg
jmp
and
or
mov
jmp
call
xchg
push
xchg
jmp
add
mov
jmp
add
push
mov
sub
mov
push
mov
cmpl
nop
push
jmp
inc
inc
dec
inc
dec
dec
inc
dec
dec
dec
dec
dec
dec
inc
dec
dec
inc
push
jmp
dec
dec
inc
inc
inc
dec
dec
dec
dec
inc
inc
dec
dec
inc
dec
dec
dec
inc
dec
dec
push
jmp
inc
inc
inc
dec
inc
dec
inc
inc
dec
inc
inc
dec
dec
dec
dec
inc
inc
inc
dec
inc
dec
dec
dec
inc
dec
inc
dec
dec
dec
jmp
push
mov
jmp
call
mov
push
jmp
inc
dec
inc
dec
inc
dec
dec
subl
jmp
sub
xchg
dec
jmp
inc
dec
inc
inc
inc
inc
dec
inc
dec
dec
inc
dec
inc
dec
jne
jmp
add
cmp
mov
jmp
incl
addr16
mov
and
mov
mov
xchg
jmp
mov
mov
lea
jmp
inc
inc
inc
dec
inc
dec
dec
inc
inc
dec
inc
dec
inc
dec
dec
inc
dec
inc
inc
dec
inc
dec
dec
dec
cltd
jmp
inc
dec
dec
dec
inc
dec
dec
dec
dec
dec
jmp
mov
jmp
dec
inc
inc
inc
inc
inc
dec
inc
dec
inc
inc
dec
dec
inc
dec
call
addr16
dec
nop
mov
sub
or
mov
and
mov
and
sub
pop
jmp
jmp
push
xchg
push
jmp
dec
subl
and
add
or
ror
rol
mov
call
xchg
ror
mov
mov
sub
pop
jmp
call
mov
test
jmp
dec
inc
dec
dec
inc
inc
inc
inc
inc
dec
inc
inc
inc
dec
inc
dec
inc
inc
inc
inc
dec
inc
inc
dec
inc
dec
dec
dec
dec
inc
inc
dec
dec
pop
jmp
dec
inc
inc
dec
inc
inc
inc
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
dec
inc
inc
dec
inc
dec
dec
dec
dec
dec
inc
dec
inc
je
push
mov
push
jmp
inc
xorl
and
mov
mov
call
xchg
jmp
fnsave
pushl
xchg
call
nop
mov
pushl
xor
and
xor
pop
and
mov
sub
mov
and
add
rep
jmp
inc
dec
inc
inc
dec
inc
inc
inc
dec
dec
inc
dec
inc
dec
inc
inc
dec
inc
dec
inc
dec
inc
add
dec
add
mov
mov
jmp
aam
iret
movl
xchg
push
jmp
inc
dec
inc
inc
xorl
pushl
xchg
call
xchg
xor
mov
and
pop
ret
jmp
dec
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
dec
dec
dec
inc
add
add
add
rolb
inc
add
and
rol
or
mov
sub
nop
add
nop
cmpl
xchg
je
push
xchg
jmp
call
xchg
test
jmp
dec
inc
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
dec
inc
inc
inc
dec
dec
inc
inc
je
push
jmp
dec
dec
inc
dec
dec
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
dec
dec
xorl
xor
mov
add
pop
lea
jmp
dec
dec
dec
dec
inc
inc
inc
inc
inc
dec
dec
inc
inc
inc
inc
inc
inc
dec
inc
inc
dec
dec
inc
dec
dec
inc
inc
call
xchg
dec
addr16
jmp
push
jmp
dec
dec
dec
inc
dec
inc
inc
dec
inc
inc
dec
dec
dec
dec
inc
inc
xorl
or
pop
cmp
xchg
mov
jmp
inc
dec
dec
dec
dec
dec
inc
dec
inc
inc
dec
dec
inc
inc
dec
inc
inc
inc
inc
inc
dec
dec
inc
dec
jmp
push
popl
or
pop
add
mov
dec
jmp
inc
dec
inc
inc
dec
inc
inc
inc
inc
inc
dec
dec
inc
dec
inc
dec
inc
inc
dec
dec
dec
inc
inc
inc
dec
inc
inc
jne
cmpb
mov
mov
jmp
inc
inc
inc
inc
inc
dec
dec
dec
dec
inc
dec
inc
dec
dec
dec
dec
inc
inc
dec
je
jmp
and
nop
add
xchg
push
addr16
sar
jmp
inc
inc
inc
inc
inc
dec
dec
inc
inc
dec
xor
nop
test
jmp
inc
inc
dec
inc
inc
dec
dec
dec
inc
dec
dec
inc
inc
inc
inc
dec
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
jle
mov
xchg
push
mov
jmp
inc
push
pop
ret
jmp
dec
inc
inc
dec
inc
inc
dec
dec
inc
dec
inc
dec
or
xor
and
xor
pop
mov
or
mov
pop
ret
jmp
dec
dec
dec
inc
dec
inc
dec
inc
dec
inc
inc
dec
dec
inc
dec
inc
inc
dec
dec
inc
add
add
add
add
xchg
add
mov
add
xchg
test
jmp
inc
dec
inc
inc
dec
inc
dec
inc
inc
inc
dec
dec
jmp
pushl
xchg
push
jmp
inc
dec
inc
inc
dec
inc
inc
inc
subl
pushl
addr16
push
jmp
dec
dec
dec
inc
inc
inc
inc
dec
dec
inc
inc
inc
dec
inc
dec
inc
xorl
call
push
pop
ror
add
shl
mov
ror
pop
ret
jmp
inc
inc
inc
inc
inc
inc
dec
dec
inc
inc
dec
inc
add
add
add
jge
test
jmp
dec
dec
inc
dec
dec
inc
dec
inc
inc
inc
dec
inc
inc
dec
inc
dec
dec
dec
dec
jle
jmp
mov
jmp
dec
inc
inc
dec
dec
inc
inc
dec
inc
inc
dec
inc
dec
inc
inc
dec
inc
dec
inc
inc
jle
shr
or
rol
sub
mov
mov
mov
andl
xchg
add
addr16
mov
mov
test
jmp
inc
dec
dec
inc
dec
dec
dec
dec
inc
dec
inc
dec
inc
inc
dec
jmp
sub
shl
mov
sub
mov
shr
jmp
inc
dec
dec
dec
dec
inc
dec
inc
dec
inc
test
jmp
dec
dec
inc
inc
dec
inc
inc
dec
dec
inc
inc
inc
dec
inc
inc
dec
dec
inc
inc
lea
jmp
inc
dec
inc
inc
dec
dec
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
inc
inc
dec
dec
inc
dec
inc
dec
inc
inc
inc
dec
dec
dec
jle
jmp
lea
jmp
dec
dec
inc
inc
dec
inc
inc
inc
dec
inc
dec
dec
inc
dec
dec
jne
test
jmp
inc
dec
dec
inc
dec
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
inc
inc
dec
inc
inc
dec
dec
inc
dec
dec
inc
dec
dec
mov
jmp
dec
dec
dec
dec
dec
inc
dec
inc
inc
dec
dec
dec
dec
dec
dec
dec
inc
dec
inc
dec
inc
dec
dec
dec
inc
jmp
mov
jmp
dec
dec
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
inc
dec
dec
inc
dec
dec
inc
inc
dec
inc
dec
inc
dec
lea
jmp
inc
dec
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
inc
dec
inc
inc
inc
jmp
dec
xor
mov
add
mov
movzwl
jmp
inc
dec
dec
dec
inc
dec
dec
dec
dec
inc
dec
dec
push
jmp
inc
inc
dec
dec
dec
inc
inc
inc
inc
dec
inc
addl
sub
add
mov
sub
pop
cmp
mov
mov
jmp
dec
dec
inc
inc
inc
dec
dec
inc
inc
dec
inc
dec
inc
inc
dec
inc
inc
mov
jmp
inc
dec
inc
inc
dec
inc
dec
dec
dec
inc
dec
inc
inc
dec
inc
dec
dec
inc
dec
dec
inc
inc
inc
dec
dec
jmp
shr
xor
dec
or
sub
mov
mov
movl
addr16
call
xchg
pushl
xor
add
sub
sub
ror
pop
jmp
inc
mov
xor
mov
dec
add
xor
and
add
call
xchg
jmp
mov
jmp
dec
inc
dec
inc
dec
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
dec
inc
dec
inc
dec
inc
dec
dec
inc
inc
dec
inc
mov
jmp
inc
inc
dec
inc
dec
dec
inc
dec
dec
inc
dec
inc
dec
dec
inc
dec
inc
dec
dec
inc
inc
inc
dec
inc
jbe
add
nop
jmp
jmp
lea
jmp
inc
dec
dec
inc
dec
dec
inc
inc
inc
inc
dec
dec
dec
inc
inc
inc
dec
dec
inc
dec
dec
inc
dec
dec
dec
dec
dec
mov
jmp
inc
inc
dec
inc
dec
inc
dec
inc
dec
dec
dec
inc
dec
inc
inc
dec
inc
dec
dec
inc
dec
dec
dec
inc
dec
inc
inc
inc
inc
inc
mov
jmp
dec
inc
dec
dec
inc
dec
inc
inc
inc
inc
inc
dec
inc
inc
inc
dec
dec
inc
dec
dec
inc
inc
inc
inc
dec
jmp
je
mov
xchg
mov
shr
mov
movsbl
jmp
dec
dec
inc
dec
dec
dec
inc
inc
inc
dec
dec
inc
inc
dec
inc
inc
dec
dec
dec
inc
inc
inc
dec
inc
inc
inc
inc
dec
rol
jmp
inc
inc
inc
inc
dec
inc
dec
dec
inc
dec
inc
inc
dec
inc
inc
inc
inc
xor
xchg
jmp
mov
xchg
movzwl
jmp
dec
inc
inc
dec
inc
dec
dec
inc
inc
inc
dec
dec
dec
dec
inc
xor
mov
and
mov
cmp
mov
jne
and
xchg
add
nop
add
xchg
jmp
add
shl
ror
add
dec
mov
sub
push
pop
mov
xchg
mov
mov
jmp
jmp
and
shr
mov
and
xor
mov
and
or
mov
mov
xchg
add
inc
sub
xor
xor
mov
add
push
pop
jmp
jbe
add
mov
jmp
pushl
shl
and
pop
dec
or
sub
mov
mov
mov
add
shr
add
rol
mov
add
nop
jmp
call
xchg
test
jmp
inc
dec
dec
inc
inc
dec
inc
inc
dec
inc
dec
dec
dec
dec
dec
inc
dec
inc
inc
inc
inc
inc
dec
dec
pop
jmp
dec
inc
dec
dec
inc
dec
dec
inc
inc
inc
inc
dec
inc
inc
jmp
test
jmp
dec
inc
dec
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
inc
dec
dec
inc
inc
inc
inc
inc
mov
jmp
dec
dec
dec
inc
dec
inc
inc
inc
inc
dec
dec
inc
dec
inc
inc
dec
inc
dec
inc
jne
jmp
or
sub
and
dec
or
mov
add
inc
xchg
inc
nop
decl
jmp
inc
inc
inc
dec
inc
dec
inc
inc
dec
inc
inc
jne
add
nop
jmp
movb
xchg
incl
xchg
jmp
inc
ror
mov
mov
jmp
mov
addr16
shl
mov
add
and
and
mov
and
mov
or
shl
mov
rep
jmp
dec
inc
dec
dec
inc
dec
dec
dec
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
inc
dec
inc
inc
inc
inc
dec
dec
dec
dec
add
mov
movzwl
jmp
inc
inc
dec
dec
inc
inc
dec
inc
dec
inc
jmp
mov
nop
inc
shl
mov
dec
dec
sub
shr
mov
mov
sub
or
sub
ror
mov
rep
jmp
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
inc
inc
inc
inc
dec
inc
inc
dec
dec
inc
add
xchg
jmp
je
push
jmp
dec
dec
inc
inc
inc
dec
inc
inc
inc
inc
inc
dec
dec
dec
dec
inc
subl
sub
mov
call
mov
and
pop
lea
jmp
inc
inc
dec
dec
inc
dec
inc
dec
dec
dec
dec
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
push
addr16
push
jmp
inc
dec
dec
dec
dec
dec
dec
inc
dec
dec
inc
inc
inc
subl
jmp
mov
xchg
sub
addr16
decl
jmp
inc
dec
inc
dec
dec
inc
inc
inc
dec
inc
inc
inc
inc
dec
dec
inc
dec
dec
dec
inc
dec
inc
dec
inc
dec
inc
dec
dec
inc
dec
jne
shr
mov
ror
pop
test
jmp
inc
inc
dec
dec
inc
dec
dec
dec
dec
dec
inc
dec
dec
dec
inc
dec
mov
jmp
dec
inc
inc
dec
inc
inc
dec
inc
dec
dec
inc
inc
dec
dec
dec
dec
inc
dec
dec
dec
inc
dec
jmp
cmpl
mov
jne
mov
ror
add
or
pop
inc
mov
mov
mov
mov
mov
add
mov
jmp
movzbl
jmp
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
dec
inc
inc
inc
dec
inc
inc
dec
inc
inc
dec
inc
inc
inc
dec
inc
inc
incl
mov
xor
push
pop
inc
addr16
and
sub
mov
sub
mov
mov
and
mov
inc
addr16
jmp
incl
mov
add
push
pop
cmp
mov
mov
jmp
dec
dec
dec
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
inc
inc
dec
inc
dec
inc
dec
inc
inc
dec
dec
dec
inc
inc
dec
dec
dec
inc
jl
jmp
movzwl
jmp
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
inc
inc
inc
inc
dec
inc
dec
inc
dec
inc
incl
xchg
add
xchg
jmp
push
addr16
push
mov
call
push
pop
call
mov
jmp
jle
inc
mov
mov
add
push
pop
add
nop
dec
jmp
dec
inc
inc
dec
inc
inc
dec
dec
dec
inc
inc
dec
inc
dec
dec
inc
dec
dec
inc
inc
dec
jne
test
jmp
inc
inc
dec
dec
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
inc
inc
dec
dec
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
dec
inc
mov
jmp
inc
inc
inc
dec
dec
dec
inc
inc
inc
dec
inc
dec
inc
inc
inc
dec
inc
inc
jle
jmp
and
shl
add
mov
cmp
xchg
je
incl
xchg
mov
dec
mov
and
mov
cmp
xchg
jl
xor
nop
jmp
inc
xchg
shr
jmp
dec
inc
inc
dec
dec
dec
inc
dec
dec
inc
dec
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
inc
jmp
dec
sub
add
add
mov
mov
pushl
xchg
pushl
ror
mov
or
inc
pop
and
shl
add
shr
mov
jmp
shl
and
add
mov
sub
and
shr
pop
shl
pop
push
popl
or
and
and
xor
shr
pop
leave
jmp
inc
dec
dec
inc
dec
dec
inc
dec
inc
inc
inc
dec
inc
dec
dec
inc
dec
inc
inc
dec
ret
jmp
inc
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
dec
dec
inc
inc
inc
dec
dec
inc
dec
inc
dec
dec
inc
add
add
add
into
jmp
dec
inc
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
dec
inc
dec
dec
inc
dec
dec
inc
inc
inc
dec
dec
dec
dec
inc
dec
dec
dec
inc
dec
dec
xor
xchg
add
mov
dec
jmp
inc
inc
dec
inc
dec
dec
dec
inc
inc
inc
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
inc
inc
dec
dec
inc
inc
dec
inc
inc
inc
jne
sub
ror
mov
pop
xor
pop
leave
jmp
dec
dec
dec
inc
inc
dec
dec
dec
dec
dec
inc
inc
inc
dec
dec
dec
dec
inc
dec
ret
jmp
dec
inc
inc
inc
inc
dec
inc
inc
dec
inc
dec
dec
inc
dec
inc
inc
add
add
add
add
add
loopne
and
ret
or
mov
movzwl
jmp
inc
dec
inc
dec
inc
dec
inc
dec
dec
dec
mov
xchg
add
push
pop
dec
shl
pop
ror
mov
sub
xor
pop
leave
jmp
inc
dec
dec
dec
inc
inc
inc
dec
inc
inc
dec
dec
inc
inc
dec
inc
inc
dec
dec
inc
inc
ret
jmp
dec
dec
dec
inc
inc
inc
inc
dec
dec
inc
dec
add
add
add
pop
dec
pop
push
popl
and
dec
pop
leave
jmp
dec
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
ret
jmp
dec
inc
dec
inc
inc
dec
inc
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
dec
inc
dec
dec
inc
dec
add
add
add
test
add
dec
dec
inc
dec
dec
inc
dec
inc
inc
dec
dec
dec
inc
inc
dec
inc
dec
dec
dec
dec
dec
inc
dec
inc
inc
inc
dec
dec
dec
inc
dec
je
jmp
add
mov
call
mov
and
and
add
add
dec
pop
push
jmp
inc
dec
inc
dec
dec
inc
dec
dec
inc
dec
xorl
pushl
nop
call
mov
mov
mov
xor
shl
mov
jmp
mov
jmp
dec
inc
inc
inc
inc
dec
inc
dec
inc
inc
dec
dec
jl
pushl
dec
add
pop
pushl
mov
xor
mov
add
jmp
xor
and
ror
add
mov
mov
or
or
shl
xor
or
mov
sub
mov
mov
nop
incl
mov
dec
xchg
mov
jmp
inc
inc
dec
inc
inc
dec
inc
dec
dec
inc
inc
jne
jmp
jmp
inc
sar
xor
add
fdivr
enter
mov
mov
nop
call
xchg
jmp
add
sub
mov
add
xchg
call
xchg
and
inc
and
ror
ror
pop
push
jmp
dec
addl
pushl
xchg
jmp
mov
xchg
mov
nop
jmp
call
xchg
test
jmp
dec
dec
inc
inc
dec
inc
dec
dec
inc
dec
dec
jne
cmp
nop
jne
lea
jmp
dec
dec
dec
dec
inc
inc
inc
dec
inc
dec
inc
dec
dec
inc
inc
inc
inc
dec
dec
inc
inc
dec
dec
inc
inc
inc
dec
jmp
mov
addr16
add
and
inc
or
mov
and
xor
sub
mov
mov
mov
rol
add
mov
jmp
call
addr16
add
and
inc
mov
mov
sub
sub
inc
mov
mov
mov
xchg
call
nop
mov
addr16
and
mov
shr
mov
mov
and
ror
mov
add
jmp
int
push
call
mov
test
jmp
inc
inc
dec
dec
dec
dec
dec
inc
inc
dec
inc
inc
dec
dec
inc
inc
inc
dec
inc
dec
inc
je
xor
shr
or
dec
shr
mov
jmp
xchg
rep
jmp
inc
dec
inc
inc
dec
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
inc
inc
inc
dec
dec
dec
inc
inc
inc
inc
inc
pushl
xchg
jmp
or
rep
jmp
inc
inc
inc
dec
inc
inc
inc
inc
dec
inc
dec
inc
inc
inc
dec
inc
inc
inc
dec
dec
inc
dec
dec
dec
pushl
mov
jmp
and
sub
mov
xor
add
mov
mov
mov
jmp
pop
ds
addr16
push
xchg
call
nop
shr
xor
shr
mov
or
mov
jmp
xor
jmp
rclb
xchg
call
mov
dec
add
mov
jmp
push
xlat
incl
xchg
dec
addr16
mov
jmp
inc
dec
inc
dec
inc
dec
dec
dec
dec
dec
inc
inc
inc
dec
dec
inc
dec
inc
dec
dec
dec
dec
inc
dec
jne
jmp
sub
nop
jmp
dec
mov
jmp
jge
rolb
inc
inc
inc
inc
dec
dec
inc
dec
inc
dec
dec
dec
dec
inc
dec
inc
dec
inc
inc
inc
dec
inc
inc
inc
dec
inc
dec
dec
jmp
sub
mov
test
jmp
dec
dec
dec
inc
inc
inc
dec
dec
dec
dec
dec
inc
dec
dec
dec
dec
dec
inc
inc
dec
dec
dec
inc
dec
inc
je
ror
sub
sub
mov
add
ror
mov
add
mov
jmp
dec
mov
xor
and
mov
and
mov
movzbl
jmp
inc
inc
dec
inc
inc
inc
inc
inc
inc
dec
inc
inc
dec
inc
dec
inc
dec
dec
inc
inc
dec
dec
inc
dec
dec
inc
inc
inc
inc
dec
dec
shl
jmp
dec
inc
dec
inc
dec
dec
dec
dec
dec
dec
inc
dec
inc
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
dec
dec
add
xchg
incl
push
pop
lea
jmp
dec
dec
dec
inc
inc
dec
inc
inc
dec
dec
dec
dec
inc
dec
inc
dec
inc
inc
dec
inc
dec
inc
inc
inc
inc
dec
inc
dec
dec
inc
xor
add
and
add
mov
call
xchg
jmp
je
or
mov
mov
mov
add
or
xor
mov
add
xchg
sub
mov
jmp
ror
dec
or
mov
sub
mov
jmp
sub
mov
jmp
or
and
inc
add
mov
sub
push
pop
shr
jmp
dec
inc
inc
inc
dec
inc
dec
inc
inc
dec
dec
dec
inc
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
test
jmp
dec
dec
inc
dec
dec
dec
dec
inc
dec
dec
dec
inc
dec
dec
dec
inc
inc
inc
dec
dec
dec
dec
inc
inc
dec
inc
inc
dec
inc
dec
dec
inc
lea
jmp
dec
inc
inc
dec
dec
dec
inc
inc
dec
dec
inc
dec
inc
dec
dec
dec
dec
inc
inc
dec
dec
inc
dec
dec
dec
dec
inc
dec
dec
inc
dec
inc
mov
jmp
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
inc
inc
inc
dec
dec
jmp
cmp
nop
jb
inc
mov
cmp
mov
jb
inc
xchg
cmp
mov
jae
jmp
shr
jmp
inc
inc
dec
inc
dec
inc
inc
dec
inc
inc
dec
inc
dec
dec
inc
dec
inc
dec
dec
inc
dec
dec
inc
inc
inc
dec
dec
inc
dec
dec
dec
test
jmp
dec
inc
dec
inc
inc
inc
dec
dec
inc
inc
dec
dec
inc
dec
inc
inc
inc
dec
inc
inc
inc
inc
dec
dec
dec
inc
dec
dec
inc
lea
jmp
dec
inc
inc
inc
dec
inc
dec
dec
inc
dec
inc
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
dec
inc
dec
dec
dec
dec
dec
dec
inc
inc
jmp
or
add
add
add
shl
and
mov
movzwl
jmp
inc
dec
inc
dec
inc
inc
dec
inc
inc
dec
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
dec
rol
mov
and
nop
cmp
nop
jne
and
mov
jmp
mov
jmp
dec
dec
inc
dec
dec
inc
inc
inc
dec
inc
jle
mov
mov
dec
shr
sub
or
xor
mov
movzwl
jmp
inc
dec
dec
dec
dec
inc
dec
inc
inc
dec
dec
dec
dec
dec
inc
dec
inc
dec
dec
dec
dec
inc
dec
dec
inc
dec
xor
mov
and
xchg
cmp
xchg
jne
jmp
inc
mov
test
jmp
dec
inc
dec
inc
inc
dec
dec
dec
dec
inc
inc
dec
dec
inc
inc
dec
inc
inc
inc
dec
inc
je
mov
sub
xor
mov
sub
and
rol
mov
rol
mov
sub
xchg
jmp
add
xchg
and
ror
add
mov
addl
xchg
decl
jmp
inc
dec
dec
dec
inc
inc
inc
dec
dec
inc
dec
jne
jmp
ss
or
or
xor
leave
dec
sub
mov
add
add
addl
nop
decl
jmp
inc
inc
inc
inc
inc
dec
dec
inc
inc
inc
dec
inc
inc
inc
dec
dec
dec
inc
dec
inc
dec
inc
inc
dec
jne
add
mov
jmp
out
call
pop
cmpl
xchg
jmp
mov
jmp
dec
dec
dec
dec
inc
dec
dec
dec
dec
dec
dec
inc
inc
dec
inc
dec
jne
mov
mov
xor
nop
inc
mov
jmp
ror
mov
and
or
shr
mov
mov
xor
mov
mov
mov
jmp
cmpl
nop
jne
call
mov
push
nop
call
mov
sub
sub
ror
sub
mov
push
jmp
dec
dec
inc
inc
inc
xorl
call
xchg
push
jmp
inc
inc
inc
inc
dec
dec
dec
dec
xorl
jmp
jne
nop
nop
nop
nop
nop
call
nop
push
mov
call
nop
add
ror
add
add
mov
push
jmp
inc
dec
dec
xorl
call
xchg
push
jmp
inc
xorl
jmp
incl
xchg
incl
xchg
mov
mov
xor
mov
cmpl
xchg
je
ror
or
rol
mov
mov
add
add
dec
pop
jmp
into
and
inc
clc
xchg
call
addr16
and
ror
mov
xor
or
mov
add
mov
jmp
loopne
les
ret
addr16
xor
and
xor
mov
pop
add
sub
add
and
mov
or
mov
pop
ret
jmp
dec
inc
dec
dec
dec
dec
dec
dec
dec
inc
dec
dec
inc
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
inc
inc
inc
dec
dec
inc
inc
dec
add
add
add
dec
inc
inc
inc
dec
dec
dec
inc
dec
dec
inc
dec
inc
dec
dec
inc
inc
inc
mov
jmp
dec
dec
dec
inc
inc
inc
dec
inc
dec
inc
inc
dec
inc
dec
dec
inc
inc
dec
dec
dec
dec
je
sub
mov
mov
add
nop
jmp
add
rol
sub
mov
add
xchg
jmp
insb
je
mov
nop
call
mov
and
sub
add
mov
add
xchg
test
jmp
dec
inc
dec
dec
dec
inc
inc
dec
dec
dec
dec
dec
inc
dec
inc
inc
dec
mov
jmp
dec
dec
dec
inc
inc
dec
dec
dec
inc
dec
inc
inc
inc
dec
inc
dec
inc
dec
inc
je
jmp
mov
mov
xchg
call
xchg
cmp
xchg
mov
jmp
dec
inc
inc
dec
dec
inc
inc
dec
inc
inc
inc
inc
dec
inc
dec
dec
inc
inc
dec
je
jmp
and
pushl
xor
or
add
sub
pop
add
addr16
jmp
and
or
xor
mov
add
mov
push
push
pop
call
addr16
cmp
push
pop
jmp
fisttpll
aaa
rol
or
and
xor
and
mov
test
jmp
dec
dec
dec
dec
inc
inc
inc
inc
dec
inc
inc
inc
dec
inc
dec
inc
dec
inc
inc
inc
inc
jne
sub
ror
xor
mov
and
ror
and
add
add
ror
or
shr
add
or
mov
jmp
je
adc
adc
dec
inc
inc
inc
inc
inc
dec
dec
dec
inc
dec
inc
dec
dec
inc
inc
je
and
and
or
dec
mov
test
jmp
dec
dec
inc
inc
dec
inc
inc
dec
dec
inc
dec
dec
inc
inc
inc
dec
jne
or
sub
mov
sub
or
or
or
mov
shl
mov
jmp
add
add
xchg
add
push
pop
jmp
jns
movzwl
jmp
dec
inc
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
inc
inc
dec
dec
dec
dec
inc
dec
dec
dec
inc
dec
inc
inc
dec
inc
jmp
mov
push
pop
add
mov
jmp
rcl
jmp
or
dec
mov
add
xchg
add
xchg
push
mov
pushl
push
pop
call
nop
mov
mov
add
mov
jmp
icebp
loop
jmp
nop
nop
nop
nop
nop
jns
movzwl
jmp
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
inc
inc
inc
dec
jmp
xor
xor
and
shr
mov
add
push
pop
add
nop
push
nop
pushl
xchg
jmp
add
mov
and
shl
inc
and
add
mov
test
jmp
inc
inc
dec
inc
inc
dec
dec
dec
inc
dec
dec
inc
jne
add
nop
cmpl
mov
nop
nop
nop
nop
nop
jne
call
xchg
mov
mov
dec
add
mov
and
sub
mov
or
or
or
sub
pop
add
and
rol
mov
pop
dec
pop
mov
xchg
jmp
or
call
xchg
mov
xchg
add
addr16
add
nop
or
dec
or
mov
test
jmp
dec
dec
inc
inc
dec
inc
dec
dec
dec
inc
inc
inc
inc
dec
inc
dec
inc
dec
inc
dec
inc
dec
dec
dec
inc
jne
nop
nop
nop
nop
nop
add
mov
cmpl
mov
jmp
xlat
ficomps
inc
sbb
pushl
shll
ret
ss
add
xchg
mov
nop
pushl
or
and
or
shl
pop
add
xchg
leave
jmp
dec
inc
dec
dec
inc
inc
inc
inc
inc
dec
dec
dec
inc
inc
dec
inc
inc
dec
dec
dec
dec
dec
dec
inc
inc
inc
dec
dec
inc
ret
jmp
dec
dec
inc
dec
dec
inc
dec
dec
dec
inc
dec
inc
dec
add
add
add
test
cld
call
addr16
nop
nop
nop
nop
nop
mov
push
pop
and
xor
mov
sub
add
mov
add
mov
mov
add
nop
nop
nop
nop
nop
rol
shl
mov
shr
sub
pop
add
pop
mov
pop
mov
xchg
nop
nop
nop
nop
nop
cmp
nop
jne
mov
mov
inc
add
mov
add
addr16
mov
nop
pushl
xor
xor
ror
and
or
pop
add
nop
leave
jmp
inc
inc
dec
dec
dec
inc
dec
dec
inc
dec
dec
dec
dec
inc
dec
inc
dec
inc
inc
ret
jmp
inc
dec
inc
inc
dec
inc
dec
inc
dec
dec
inc
dec
dec
inc
inc
dec
dec
dec
inc
inc
dec
inc
dec
inc
inc
dec
fisubl
push
jo
push
mov
add
std
into
jp
pop
xchg
push
ret
mov
bound
stc
xchg
mov
lret
push
dec
ret
jae
adc
cmp
xchg
xor
adc
dec
fcmovnu
cmp
and
test
adc
fcmovnu
xchg
xchg
loope
push
mov
sub
push
insl
add
cmp
sbb
dec
or
into
and
lret
xchg
jno
sub
sub
jge
in
xchg
push
sub
push
sbb
lret
lock
pop
and
jmp
inc
dec
call
insb
mov
or
push
pushf
dec
stc
jp
dec
or
test
es
xchg
push
mov
idivb
pop
cmpsb
and
cwtl
call
jg
mov
jno
js
pop
repnz
ljmp
mov
dec
fs
pop
mov
xchg
insl
or
add
shrl
push
push
xchg
popf
pop
aaa
lcall
fsubr
nop
push
inc
xor
sub
out
cmp
xchg
aaa
lahf
gs
jbe
or
rorb
xchg
dec
push
in
daa
imul
cli
xchg
jle
lea
cmp
xor
adc
sbb
xchg
adc
push
dec
and
bnd
mov
lret
loope
xchg
push
xor
lock
outsl
aas
sbb
and
cmp
inc
ljmp
jo
repz
sbb
mov
loopne
outsl
xchg
sti
pop
push
insl
pop
and
repnz
inc
in
push
stos
sbb
jle
cmp
push
into
dec
inc
rol
arpl
stos
xchg
push
fistps
test
jmp
push
jge
inc
inc
js
mov
or
and
sarl
pushf
mov
sti
dec
ret
add
xchg
ljmp
xlat
mov
movsb
imul
std
cmpsl
into
sub
push
cld
mov
sub
ds
out
mov
adc
test
add
add
stos
add
dec
out
inc
add
popf
fildll
jle
sbb
cmp
lret
and
in
mov
lea
sub
leave
jle
repnz
pop
aaa
cmpsb
int
mov
inc
jl
push
into
nop
inc
mov
pushl
dec
dec
add
adc
xchg
test
fbld
fstp
jle
xchg
sub
aad
mov
stos
insb
dec
rorb
push
fcmovu
sub
lcall
dec
inc
out
mov
add
xor
loope
mov
jecxz
jecxz
pop
daa
lret
mov
dec
insl
sbb
push
mov
cmp
xchg
sub
push
push
aas
not
adc
mov
xor
adc
je
mov
into
sub
shrl
mulb
mov
xchg
mov
movsb
lcall
gs
mov
inc
adc
daa
push
stos
lret
fbstp
sub
inc
out
push
aam
jecxz
jbe
sub
aam
sti
jl
dec
cs
pop
sub
pop
dec
jmp
mov
fldenv
sbb
push
push
or
adc
rcrl
jne
std
pop
lret
mov
push
mov
repnz
out
push
dec
call
or
mov
sahf
daa
fisubrl
or
or
mov
lods
sbb
subb
sub
or
loop
test
push
and
fmuls
sub
push
rcrb
sbb
xor
movsb
lea
jl
mov
xchg
mov
adc
xor
shrl
scas
subl
push
lcall
sahf
adc
test
movsl
push
roll
out
test
scas
add
fidivs
dec
mov
push
outsl
and
cld
jns
push
jge
xor
xchg
add
push
push
xchg
pop
sub
sub
jb
ss
add
je
and
add
inc
and
and
push
les
pop
popf
dec
sub
stos
daa
out
lea
dec
cmp
cmp
inc
cmpl
in
sbb
loopne
xchg
cld
xchg
adc
adc
adc
lods
pusha
aaa
ret
jge
cmp
cs
mov
aad
aas
dec
sbb
addr16
fisttpll
sbb
xorb
dec
je
mov
mov
mov
sti
rolb
sbb
and
sbb
add
add
inc
sbb
mov
sarb
repnz
gs
sub
in
jg
adc
mov
push
pusha
xchg
sub
fldlg2
xor
mov
orb
push
push
sahf
pop
mov
imul
sbb
cmp
push
or
mov
add
inc
rcll
mov
pop
scas
fs
mov
pusha
inc
inc
mov
testl
js
sar
cs
jg
int3
push
mov
mov
adc
les
out
jmp
enter
ljmp
call
leave
xchg
xchg
pop
xchg
subl
push
mov
into
jb
mov
pop
push
aas
mov
jae
mov
in
dec
call
imul
jne
pop
fistpl
xchg
call
inc
std
push
ljmp
adc
lret
dec
cli
dec
push
lods
fisttpl
mov
sub
mov
sarb
outsb
movsl
mov
lock
fistl
std
test
adc
mov
insb
leave
jb
imul
mov
movsl
push
inc
icebp
mov
in
cld
sub
loopne
sti
sahf
cmp
push
push
push
pop
jl
push
imul
scas
bound
imul
ja
lea
outsl
cltd
mov
fildll
pop
pop
adc
jmp
sub
mov
adc
cmpsl
incb
mov
cltd
jnp
or
mov
test
push
inc
flds
and
cmp
add
dec
ret
xchg
out
nop/reserved
in
mov
fcompl
scas
inc
add
lea
bnd
sarb
push
mov
pop
lahf
cs
icebp
inc
sbb
dec
int
cmpb
xchg
inc
adc
push
sahf
add
sbb
push
sub
aam
mov
aas
call
xchg
fwait
call
jecxz
lods
jo
xor
adc
lahf
cmovae
int
pop
adc
mov
xor
lahf
adcl
enter
add
xorb
es
call
xor
testl
movsb
sbb
sbb
decl
sub
adc
and
dec
pusha
aaa
jg
in
mov
and
push
push
pop
xchg
xor
addr16
mov
inc
ljmp
adc
fldcw
inc
push
sub
mov
dec
loop
test
scas
clc
lret
scas
ss
jge
aad
std
cs
cmpsl
std
addr16
fwait
sub
pop
jno
sub
push
jmp
cmp
add
jnp
adc
sti
xchg
inc
loope
aas
mov
outsl
mov
push
fimuls
push
pop
xchg
jp
push
ja
push
jecxz
inc
add
add
lcall
in
sti
hlt
push
xchg
pop
loopne
or
mov
aam
out
push
mov
mov
pop
cltd
push
cmp
sub
jns
push
dec
push
xor
fldt
inc
repnz
add
sub
enter
outsb
dec
adc
movsb
lods
dec
sbb
xchg
push
dec
fisubrs
add
xlat
fcmovu
leave
and
or
push
btc
xchg
xor
mov
and
mov
repnz
push
dec
add
mov
sbbb
hlt
scas
xchg
mov
sbb
xor
shl
mov
xor
les
pop
sbb
push
outsb
pop
addr16
jb
rolb
fwait
push
ja
ja
mov
lods
cmp
or
movl
mov
jle
hlt
sbb
sub
xchg
sbb
sbb
repnz
add
sub
imul
inc
call
or
push
adc
sbb
mov
mov
fdiv
mov
push
scas
nop
repz
stos
push
add
or
dec
fistl
mov
xor
push
sbb
int
mul
or
test
les
stos
cmp
adc
divl
push
push
adc
mov
pop
mov
xchg
aaa
xchg
jp
mov
sub
mov
inc
add
hlt
push
mov
aaa
lds
shrl
in
adc
cmp
ss
add
jo
shll
out
mov
or
dec
sub
rcll
jge
or
jp
popf
outsb
mov
xlat
test
jns
add
dec
out
jmp
ja
mov
inc
and
addr16
shld
mov
ja
inc
sub
xchg
cmp
sub
outsl
pop
mov
mull
push
xor
push
aad
jp
mov
movsl
add
in
add
dec
pop
sbb
shrb
ds
push
mov
bnd
ret
bound
dec
pminub
adc
enter
mov
pop
lds
mov
icebp
loop
aad
jno
imul
fwait
dec
cmp
jp
xor
mov
sub
addr16
pop
aas
cmpsb
rcll
int
outsl
repnz
popf
stc
dec
rcl
int
pop
xchg
bound
pusha
or
ret
mov
out
lcall
push
or
mov
inc
adc
mov
jnp
or
jno
roll
sub
xor
push
dec
pop
jnp
pop
shll
pop
mov
rclb
mov
aam
inc
loop
mov
repz
mov
push
mov
cmp
pop
lock
cmpsl
icebp
mov
mov
mov
daa
movsb
pop
sub
mov
testl
jecxz
mov
mov
adcl
adc
movb
out
lods
xor
mov
adc
and
cmp
or
es
mov
jo
pop
adc
sub
inc
adc
adc
mov
mov
push
mov
mov
cmp
push
ss
movsl
loop
xchg
cwtl
or
mov
cmp
mov
pop
ret
or
push
nop
cs
mov
cmp
push
pop
mov
cmp
ja
inc
loopne
js
dec
dec
lret
movsb
in
xchg
dec
in
bound
mov
jno
cmpsb
mov
push
rcl
aad
adc
aas
dec
push
pop
push
inc
sbb
inc
std
sbb
xchg
pop
dec
fcoms
lret
dec
cltd
fistps
sbb
cltd
aas
scas
daa
sbb
cmp
add
ja
popa
repnz
inc
jnp
mov
push
xchg
dec
pop
fstps
fisubrs
add
sbb
mov
dec
loop
shl
xchg
iret
fdivs
pop
icebp
pop
fimull
scas
xlat
rcrl
adc
mov
push
popf
sbb
fstpt
cs
xor
outsl
or
sub
jb
pop
bound
loope
adc
sahf
mov
mov
mov
test
xchg
dec
adcl
into
adc
out
pop
dec
xlat
or
inc
ret
pop
add
psubw
push
addr16
insb
sub
shr
dec
mov
aad
popa
andb
divl
addb
jnp
mov
mov
outsb
sbb
sbb
lret
mov
adc
push
mov
add
mov
in
es
sbb
adc
into
sbb
daa
xor
mov
and
das
adc
sub
and
mov
adc
mov
ror
sub
scas
into
mov
mov
idiv
scas
mov
lcall
lret
cmp
inc
add
mov
insb
adc
push
rcl
call
push
stos
je
lds
pop
clc
or
paddsb
scas
out
ret
adc
push
mov
mov
stos
xor
aas
in
hlt
pop
mov
push
adc
mov
test
xchg
test
ja
enter
mov
bound
in
and
jno
movsl
add
xor
ss
xlat
mov
mov
aad
jae
xchg
outsl
push
into
loop
mov
xor
sbb
or
dec
mov
test
adc
mov
xchg
fstl
jp
sub
or
push
xchg
sub
mov
cwtl
sub
mov
or
inc
lods
add
or
jne
sbb
inc
mov
rcl
mov
es
pop
sysexit
sbb
ljmp
jmp
pop
into
popf
sar
jp
mov
sbb
lret
out
and
xchg
les
jmp
cmp
je
jne
sub
dec
call
sbb
and
loop
xor
dec
out
xchg
popa
jl
movsb
dec
repz
sbb
test
add
push
mov
out
lcall
jg
in
xor
pop
pusha
outsl
jnp
hlt
in
pushf
push
mov
jg
adc
mov
icebp
push
fwait
pop
or
pop
pop
lahf
jl
es
push
mov
cltd
aad
xor
push
push
xor
ret
inc
adc
xor
fsubl
dec
xchg
outsb
stos
mov
in
adc
ret
mov
add
mov
out
cs
mov
into
inc
les
push
sbb
fs
inc
sbb
repnz
loop
cli
test
js
loop
sub
and
add
dec
or
in
and
stos
jmp
jns
out
imul
jle
test
sbbl
shrl
cmp
adc
lock
and
fadds
aad
jne
scas
rcrl
xchg
das
dec
inc
or
outsl
in
fld
je
stos
cmp
in
cltd
shr
jbe
pushf
dec
iret
xor
popf
imul
enter
inc
mov
out
mov
cmp
mov
testb
mov
inc
inc
popf
cmp
mov
adc
aaa
add
test
or
or
or
std
dec
xor
cmc
loope
mov
ja
dec
movsb
mov
nop
notl
andb
mov
lock
or
jnp
pushf
jecxz
push
filds
ljmp
jns
cli
or
repz
jp
mov
ja
pop
ret
cli
push
push
in
outsb
adc
adc
movsb
clc
in
cmp
pop
lcall
push
push
push
mov
pop
rcr
add
jle
xor
mov
jg
mov
mov
ja
cmp
cmp
jle
push
icebp
cmp
push
sbb
fimull
dec
fwait
sbb
sbb
popa
nop
pop
ficoml
sti
pop
test
in
or
std
addl
scas
ja
outsb
sbb
xchg
push
adcb
mov
jmp
stos
push
lret
inc
jp
inc
xor
popa
push
sbb
add
cmpsl
pop
adc
cmp
mov
outsl
add
push
jmp
insb
adc
imul
lahf
aam
cmp
add
jmp
pusha
push
cmp
mov
lods
jns
push
imul
lcall
scas
mov
sahf
cli
mov
arpl
ret
pop
fcompl
pop
push
clc
mov
mov
sub
sbb
push
imul
scas
cmp
fwait
js
cltd
leave
shll
aam
cmp
mov
popf
sbb
pop
mov
outsb
sub
cmp
mov
imul
push
int
inc
shrl
adc
mov
dec
data16
pop
xchg
sahf
ja
rcrl
push
or
or
sbb
pop
cltd
push
mov
add
mov
in
iret
and
xchg
mov
nop
fxch
dec
inc
pop
iret
mov
push
mov
in
or
mov
add
out
movsb
les
sub
dec
or
rcrl
dec
lahf
adc
pop
aas
pop
push
or
or
pop
popf
inc
or
push
mov
sub
cmc
sbb
push
jecxz
aad
imul
out
fcomip
pop
adc
pop
mov
jmp
mov
leave
mov
inc
lea
mov
mov
fstps
mov
test
push
adc
xlat
icebp
or
mov
sti
or
pushf
jae
addr16
test
inc
cmpsl
mov
mov
inc
dec
fwait
adc
jb
pushf
fs
xchg
sbb
stos
jle
and
sahf
and
pop
das
jb
fs
xor
cld
cs
push
leave
xor
pusha
addb
pop
add
pop
into
notb
dec
dec
test
je
pop
jno
dec
imul
or
aaa
jnp
pop
xor
push
dec
lret
sub
cmp
xchg
xor
ss
lock
sub
shrb
dec
add
push
sbb
xor
int3
xor
mov
out
jle
lods
stc
jne
dec
and
push
lock
std
push
push
es
ss
gs
push
mov
movsl
mov
aam
testl
adc
clc
push
popa
or
jne
js
push
sub
ds
sub
cltd
xchg
xchg
inc
push
mov
add
xchg
push
in
dec
sbb
jl
loop
mov
cs
and
sub
clc
jmp
mov
lods
cld
test
mov
lods
mov
mov
rolb
add
push
jecxz
in
sub
and
mov
mov
xchg
add
mov
jmp
ret
push
hlt
inc
mov
sub
cli
iret
js
mov
js
fildll
int
and
shrb
inc
dec
mov
mov
mov
xor
scas
shrb
mov
dec
add
sbb
pop
sbb
jns
cmp
sbb
jge
cmp
jge
pop
mov
dec
jle
xchg
add
pop
pmaddwd
cmp
mov
in
jns
cld
add
add
js
pop
scas
loope
test
add
cli
xor
loopne
mov
cmp
push
int
das
add
int
xchg
mov
andb
scas
outsb
dec
push
sahf
sahf
pop
xchg
loope
shl
jnp
cmp
psubd
fisttpl
cmpsl
push
mov
or
jbe
notb
idiv
or
popf
pop
add
cmp
mov
jae
in
mov
lret
rorl
int
push
inc
into
pop
push
jnp
cmp
adc
mov
leave
test
or
js
hlt
sahf
in
daa
repnz
sbbl
dec
jecxz
divb
scas
sub
sahf
mov
mov
mov
dec
push
pushf
xchg
ret
pop
cmp
dec
mov
subl
push
arpl
sarl
jns
inc
add
and
loop
cmp
and
cmp
mov
dec
push
cmp
sti
cmpsb
aas
cmp
daa
or
aad
inc
and
cli
mov
or
int
aas
mov
sbb
pop
pop
xchg
sbb
rorb
mov
daa
and
pop
push
test
xor
jecxz
imul
sub
mov
pop
adc
ret
sbb
cmpsl
cli
sub
pop
lret
dec
dec
rclb
das
or
mov
lret
jp
mov
xchg
pop
jle
push
cltd
add
pop
mov
mov
orb
xchg
push
test
push
mov
movsb
xor
mov
sub
adc
push
loopne
inc
test
ret
dec
sub
lret
push
dec
or
xchg
stos
pushf
fiadds
mov
mov
enter
xor
xorb
xchg
data16
ja
aas
repz
mov
aam
pop
pop
lcall
fildl
mov
mov
arpl
std
mov
xor
and
pop
push
jbe
movsl
mov
xor
jno
pop
dec
cmp
inc
ret
out
cltd
mov
mov
or
in
fwait
jno
stc
clc
cmp
sbb
iret
mov
scas
mov
ret
mov
inc
jmp
imul
or
fucomp
pusha
dec
icebp
sub
rcr
test
fdivrl
shll
jmp
push
xchg
mov
addr16
cmp
orb
jnp
or
push
mov
adc
imul
sub
sub
js
and
mov
xchg
lock
jno
pop
and
xchg
adc
jl
dec
pop
fmull
mov
mov
in
mov
lcall
or
jbe
inc
mov
lock
ret
cmc
aas
xor
iret
cmpb
lea
fwait
daa
lock
ficoml
cmp
xchg
push
nop
or
dec
xchg
sarl
lret
insl
movsl
pop
insb
mov
testl
pop
nop
or
sub
jecxz
xor
mov
sbb
and
and
aad
fs
add
fidivl
mov
mov
fidivl
adc
inc
imul
inc
std
int3
cmp
inc
sub
jmp
aad
mov
sbb
sub
scas
sub
xor
xor
dec
adc
and
push
cmpsl
ret
lods
imulb
cmp
rclb
inc
cwtl
adc
fildll
xchg
divb
add
popf
inc
out
cmp
xchg
imul
jecxz
push
dec
mul
insl
lea
jae
ss
pop
or
outsb
fidivl
shlb
xchg
sbb
idivb
pop
mov
jmp
repnz
icebp
push
pop
aaa
and
je
add
rcl
inc
push
xorl
cmc
scas
adc
rcrl
clc
subl
jnp
jae
xor
mov
mov
mov
sub
push
pop
sub
jge
adc
icebp
push
xchg
mov
int
nop
sbb
mov
loopne
stos
call
cmp
outsb
addr16
jbe
into
cmc
fs
cmp
pop
mov
push
jl
addr16
lock
jle
fcompl
mov
orl
ficoms
insl
leave
fiaddl
lods
fcomps
or
mov
aam
aas
jge
cmp
repnz
push
ret
sbb
mov
stos
test
mov
dec
jmp
inc
in
fdivrl
mov
and
clc
xchg
stos
jnp
cmp
push
jge
jbe
dec
mov
rcll
aad
pop
mov
out
in
and
mov
mov
addr16
test
mov
inc
rcrb
pop
mov
dec
stc
inc
fimuls
cltd
dec
cmc
cltd
clc
mov
pop
insl
push
or
repnz
dec
xchg
mov
mov
fidivl
je
sub
lock
mov
push
loopne
push
lods
push
jnp
inc
or
push
lods
fisubrs
jmp
and
or
pop
pop
hlt
mov
subb
dec
cs
sub
mov
test
jl
jo
stc
insl
xchg
add
pop
jne
out
dec
loope
cmp
adc
out
xchg
dec
repz
das
jg
dec
add
mov
mov
notb
dec
sbb
mov
push
sbb
scas
jbe
jns
dec
mov
int
icebp
push
push
in
fcmovb
aad
cmc
jl
cs
xchg
arpl
loopne
out
paddsw
lods
xchg
cs
jl
in
adc
push
add
or
test
fidivs
sub
fcompl
pusha
inc
pop
cmp
test
push
popf
adcb
or
jb
ljmp
jmp
dec
sub
and
sbb
xlat
das
mov
mov
xchg
jmp
and
mov
bound
fwait
stos
inc
das
sbbl
sti
or
push
inc
sti
push
test
fstps
add
add
mov
iret
int3
inc
int3
shlb
mov
lods
sbb
stos
aam
cltd
js
jg
inc
hlt
scas
xor
and
inc
jnp
add
adc
xchg
test
filds
mov
xor
inc
ljmp
push
jbe
adc
adc
bound
inc
ret
lea
push
fdivp
decb
aaa
lock
test
adc
loope
xchg
stos
jns
cmp
icebp
stc
inc
out
hlt
jns
push
mov
test
jmp
cmp
inc
cmp
pop
out
ficomps
sbb
es
mov
dec
clc
mov
inc
out
push
mov
inc
lret
dec
jno
daa
hlt
add
push
mov
xchg
shr
ss
mov
jo
ret
pop
movsl
mov
call
out
lahf
sarl
imul
mov
dec
cmpl
cli
gs
fs
sub
jne
inc
add
jmp
add
shrb
fildl
add
cmpsb
js
adc
and
add
fwait
out
xor
push
push
and
nop
imul
enter
sub
ret
mov
test
in
cmp
out
adc
push
outsb
arpl
aam
inc
push
shll
and
push
arpl
aad
pop
neg
mov
jle
adc
cmp
loopne
dec
lea
jo
addb
jl
pop
mov
mov
dec
inc
cmp
jle
adc
mov
push
pop
popa
shlb
jo,pn
add
lahf
lret
lods
hlt
sbb
mov
scas
jge
lahf
inc
cltd
jne
ret
sub
inc
out
jecxz
dec
jecxz
popf
fwait
sahf
pop
xchg
jmp
sbb
pop
orps
nop
push
sbb
das
ret
subl
sub
out
push
filds
push
outsb
xor
fcompl
out
xlat
leave
scas
cmp
and
lock
nop
push
adcl
cmpsl
popa
lcall
push
fcompl
roll
mov
into
loopne
fwait
rcll
stc
push
push
dec
push
ret
push
decb
test
test
out
es
jb
adc
cmp
lds
cmp
orl
mov
mov
inc
sub
or
jne
je
pop
lods
jae
jge
xor
mov
and
sbb
pop
shrl
lods
stos
out
adc
test
rcrl
cmpsl
pop
je
ljmp
xor
sub
insb
imul
mov
cmp
icebp
dec
subl
push
lret
mov
xor
mov
mov
ljmp
fcmove
mov
pop
in
mov
xchg
sub
pop
lods
lret
xchg
add
inc
sub
pop
push
and
mov
jecxz
jg
jmp
je
cmpsl
repz
jle
push
rcrl
imul
sub
in
outsl
sub
addr16
jnp
dec
nop
mov
mov
and
or
in
call
jmp
mov
mov
cltd
int
push
and
int
pop
fisttpll
stc
mov
xor
push
dec
in
fstpl
fdivr
mov
in
pushf
iret
iret
fcom
cmc
cmp
sbb
or
into
call
mov
xchg
sbb
or
jge
push
test
cmpsb
rorb
in
add
cmc
ss
mov
je
pop
mov
and
sub
stc
mov
jmp
push
je
pop
jno
cmp
je
xlat
ljmp
adc
add
cmpsl
stc
into
pop
adc
add
in
imul
lcall
push
scas
pusha
sahf
cmpsl
popa
dec
aam
or
imul
xor
adc
mov
push
mov
lret
stos
xor
movsb
sub
jnp
dec
ret
clc
mov
ret
pushf
pop
sub
imul
push
pop
sub
leave
sbb
cld
push
inc
inc
dec
sbb
shll
xchg
imul
stos
loope
pop
and
and
aad
movhps
xchg
stos
mov
jae
je
xor
mov
imull
add
adc
sub
repnz
jg
sbb
mov
pop
movsb
or
xchg
cmovno
test
or
stos
xor
xadd
sub
mov
arpl
mov
inc
lods
add
call
cmpsl
mov
inc
jno
insl
cmp
jne
mov
stos
ja
pusha
mov
push
lret
test
fs
js
mov
dec
mov
aam
xor
subl
push
cmp
mov
mov
je
mov
sub
mov
push
add
clc
or
jo
mov
in
movsl
mov
pop
mov
call
mov
mov
daa
add
inc
outsl
test
shr
sub
inc
lods
test
jae
inc
xchg
xchg
mov
out
es
cmp
ret
in
jmp
div
popf
xchg
shll
cmp
data16
cmp
xchg
jns
stos
mov
mov
adc
and
dec
sub
mov
and
lcall
cld
mov
decl
pop
loope
jb
or
jo
adc
mov
xchg
push
inc
inc
ficoml
mov
push
test
cmpsl
add
dec
mov
outsl
imul
rclb
jne
mov
add
mov
sahf
addr16
scas
push
push
cltd
and
out
inc
fsubrs
mov
pop
cmp
out
push
clc
in
lahf
insb
aas
jnp
imul
mov
push
enter
lods
sbb
inc
jae
xchg
inc
xor
mov
mov
mov
ficomps
sbb
and
or
into
xchg
pop
into
insl
repnz
mov
scas
clc
ljmp
lea
sti
cmp
sub
pushf
and
lock
add
cmp
push
mov
cld
test
pop
loope
loop
mov
mov
ja
sbb
inc
add
rcr
push
jle
repnz
js
fwait
ret
xchg
into
and
mov
dec
loope
pop
sub
sbb
push
push
int
aam
data16
push
out
shrb
push
lret
mov
and
jmp
pop
mov
lods
mov
inc
inc
cmpsl
mov
cmp
mov
cld
add
add
push
imul
lods
adc
push
xchg
inc
dec
lahf
loop
movsl
inc
and
imul
xchg
adc
int3
pop
movsb
mov
test
imul
mov
xchg
xor
mov
lcall
pushl
sub
pusha
aam
fs
sub
iret
cmp
jp
push
sbb
sbb
outsb
xorb
push
inc
mov
mov
repz
in
cs
push
lods
ror
sbb
js
outsl
repz
sbb
mov
push
or
xchg
test
fistpll
das
dec
jnp
pop
scas
jmp
pop
cmpsb
inc
lahf
pop
jmp
in
roll
cmp
xchg
add
xchg
dec
test
lods
sbb
fsubr
fwait
push
push
jb
hlt
jmp
les
xor
mov
bound
mulb
add
je
dec
push
pop
pop
jmp
add
in
mov
inc
push
cmpsb
lods
int3
lcall
xor
jg
fiadds
sbb
adc
and
mov
add
jge
shr
and
popa
shlb
xacquire
aam
addr16
das
dec
cltd
adc
aas
inc
push
mov
stos
ss
loop
sub
xor
out
mov
xor
pushf
jb
or
sti
dec
pushf
inc
add
aam
dec
mov
leave
inc
pop
loop
ret
xchg
es
cmp
lea
pop
cmp
mov
sub
stos
jp
icebp
loopne
movsb
loop
in
loope
cmp
out
ds
rcr
cmpsl
and
push
adc
sub
pop
fsubs
cmp
rclb
inc
xor
lret
faddl
shl
arpl
repnz
mov
dec
adc
imul
push
xor
cmp
push
les
or
mov
inc
ljmp
cmc
xor
add
sbb
aam
aaa
or
frstor
mov
stos
imul
xor
jg
mov
addr16
xor
mov
lds
loopne
in
push
mov
bound
pop
leave
test
test
jo
jmp
shrb
sub
flds
sub
push
xor
cmpsb
sti
inc
dec
xor
mov
mov
sbb
jnp
cwtl
nop
mov
out
pushf
push
mov
push
sbb
cli
sub
sbb
push
cltd
clc
or
out
mov
jb
jmp
jp
stc
push
mov
sahf
push
mov
mov
sbb
jne
cltd
dec
test
and
pop
rolb
fdiv
pop
cmp
pusha
sbb
push
mov
lods
xchg
loopne
ljmp
add
dec
gs
jecxz
jmp
shll
add
inc
cld
mov
out
gs
dec
push
popf
push
fwait
int
lahf
pop
into
mov
jg
mov
cltd
ficoml
push
push
scas
jb
pop
test
sbb
cmp
cmp
xor
out
in
sbb
icebp
call
xchg
hlt
jo
inc
xor
dec
xor
int
loope
add
cwtl
aam
sar
push
mov
jbe
adc
push
inc
cmp
adc
fldcw
pop
push
pop
popa
cmpsb
sub
and
outsl
test
out
imul
xchg
and
test
jae
xchg
add
sub
inc
aaa
jp
sub
dec
adc
mull
jge
inc
lods
sbbl
mov
movsl
es
sub
fidivrl
roll
dec
xchg
arpl
test
outsb
mov
sbb
iret
sbb
push
xor
pop
out
insb
fadds
jecxz
push
sub
inc
pop
mull
xrelease
stos
cmc
aad
outsl
dec
mov
mov
in
inc
test
inc
xchg
movsl
inc
ror
push
inc
adc
lods
rcl
out
shr
inc
push
cmpsl
add
mov
and
iret
or
mov
mov
mov
adc
arpl
dec
push
dec
jmp
cmpsb
add
jns
std
shll
fdivs
jmp
pop
sbb
jae
mov
xor
push
pop
dec
adc
out
inc
ds
shlb
pusha
dec
jle
adcl
or
mov
imul
pusha
sub
pop
mov
sub
mov
popl
pop
into
cmp
fdivs
or
jle
arpl
shr
in
and
mov
add
dec
adc
push
mov
xchg
pop
xchg
or
fndisi(8087
add
xchg
sub
out
outsb
test
sub
out
std
pop
fbld
push
push
mov
dec
mov
push
mov
jl
xchg
inc
pop
pop
divb
ja
mov
adcl
arpl
inc
rorl
cmp
xor
push
cmp
int
pop
push
mov
add
or
addl
sarb
pop
jl
push
sbb
stos
mov
push
jecxz
cmpsb
and
stos
rcl
xchg
pop
enter
pop
cmp
idivb
ss
fcmovu
jge
cmp
inc
mov
mov
leave
push
imul
loope
push
aas
push
lock
or
icebp
aam
iret
ret
imul
add
imul
shrb
sub
ss
xor
call
fcoml
jecxz
aas
divb
in
mov
mov
pop
lahf
xor
loopne
pop
dec
scas
mov
mov
add
loope
test
js
jge
push
cmpsl
push
mov
fstps
adc
cmp
out
inc
xor
cmp
adc
jl
adc
mov
aad
ss
jno
sub
notb
mov
add
pop
push
sub
mov
or
daa
in
pop
inc
sbb
popf
pop
sti
adc
sbb
adc
jae
jno
mov
add
sub
mov
pop
jecxz
ja
jb
jo
fmuls
adc
cmp
fwait
mov
sub
loopne
ljmp
icebp
push
clc
out
std
inc
xchg
lret
loop
cmc
xor
xchg
cmp
or
jnp
daa
loope
lds
cmp
xchg
scas
aas
mov
jb
mov
inc
int3
jge
jae
shll
loope
sbb
stos
in
mov
mov
inc
les
jbe
push
or
adcl
mov
xor
pop
mov
or
int
lret
out
push
popa
jmp
test
push
mov
ficoms
jge
jecxz
mov
inc
out
roll
mov
adc
or
jae
mov
and
jae
test
gs
out
mov
push
ljmp
push
xor
jmp
lcall
mov
add
lret
add
xchg
sub
in
push
into
fcoms
cmp
jne
out
cmp
add
mov
cmp
insl
mov
xor
push
mov
or
rolb
decl
ss
mov
cmp
sbb
cltd
adc
icebp
out
push
sbb
ror
jns
mov
cmp
or
out
lock
sti
push
loopne
int
dec
cmp
push
pop
mov
xor
sti
xor
sbb
fwait
add
sbb
adc
nop
movsl
out
mov
push
xchg
in
mov
insl
and
push
pop
fsubrl
sahf
mov
add
movsl
std
jmp
pop
mov
mov
mov
lock
lahf
int3
or
test
cmp
mov
loopne
xchg
aas
fldt
adc
or
xor
repnz
or
popa
push
mov
push
push
loopne
test
inc
push
dec
shll
xchg
shl
push
pop
gs
insl
jg
mov
push
xchg
jmp
mov
cmp
or
lods
mov
fimull
adc
sbb
jb
xchg
mov
lahf
push
push
xchg
pop
jbe
fwait
push
test
rorb
sub
loop
xor
push
cmp
movsb
lds
xlat
jb
js
inc
push
decb
and
out
adc
popl
mov
mov
push
sub
mov
adc
in
lods
lahf
xchg
cmp
mov
rolb
dec
cmpsb
ret
jne
test
pop
cs
sub
or
adc
scas
dec
jo
adc
inc
push
cmc
mov
push
mov
shrb
dec
or
iret
jo
lea
das
movsl
add
mov
ja
hlt
fadd
fisttps
clc
mov
add
inc
lahf
mov
cs
ljmp
or
aad
out
std
mov
lds
out
cmp
mov
loopne
fmull
push
lea
dec
push
mov
push
in
mov
pop
jl
test
dec
inc
enter
jae
roll
xchg
adcl
sbb
sub
pushf
jge
dec
in
sub
mov
mov
push
mov
js
dec
cwtl
and
shl
sub
mov
xor
movsb
or
cld
fldcw
inc
les
mov
xchg
int
aas
les
das
add
mov
inc
mov
int3
ficomps
mov
cmp
iret
dec
and
scas
popl
aaa
xchg
jno
or
fsub
mov
iret
out
and
lods
sub
das
xlat
cmp
call
stos
insl
es
xor
mov
xchg
sub
cld
jb
inc
or
fistl
xorl
xlat
sub
iret
mov
pop
daa
dec
ss
sub
idivb
and
adc
insb
dec
int3
adcl
in
xchg
testb
jno
jnp
lea
push
xchg
pop
jae
jge
xchg
sti
push
cmp
mov
mov
xor
dec
lea
shlb
ret
jbe
push
mov
iret
mov
outsb
pushf
adc
mov
popa
ss
inc
jne
mov
aam
inc
incb
mov
adc
out
dec
sbb
lock
lock
mov
out
add
add
int
imul
adc
cmp
and
mov
stc
mov
mov
adc
daa
jge
pop
push
cmpsb
jp
xchg
cli
push
int3
je
ficoms
push
sbb
push
dec
or
sub
push
sub
test
hlt
dec
cli
cmpsl
gs
or
pushf
dec
mov
sbb
mov
xchg
enter
dec
add
jmp
push
ret
movsl
int3
add
arpl
push
add
imulb
sarb
addr16
mov
push
dec
mov
sbb
mov
and
inc
bound
pop
cwtl
test
aaa
idiv
push
inc
rorl
mov
xlat
lods
xor
bound
dec
mulb
stos
mov
subl
inc
push
push
ja
movb
inc
sbbb
adc
insl
cltd
cmp
mov
push
inc
or
sbb
mov
mov
cmp
js
or
push
xor
add
sub
in
test
ret
fbld
in
add
cmp
iret
test
pop
ds
jb
fdivrp
inc
jg
shll
cmp
or
out
jle
imul
imul
cmp
pop
mov
xchg
in
and
push
sub
test
add
pusha
mov
lds
push
jmp
mov
xchg
adc
pop
cmpsb
mov
out
shl
cmp
mov
mov
cltd
js
stos
mov
jo
sub
imul
mov
fnstenv
push
int3
in
pop
dec
mov
inc
out
cmp
imul
sub
pop
cltd
in
lds
lret
sbb
mov
int
inc
sbb
xor
test
cmp
inc
mov
in
push
pop
sahf
pop
pop
mov
outsb
xor
test
mov
data16
sub
iret
xchg
jbe
cmp
ja
adc
cmp
fs
or
xchg
mov
cmc
test
mov
push
cmp
cmp
pop
mov
mov
repnz
adc
mov
xor
add
and
mulb
and
sbb
cmc
jle
loopne
adc
dec
out
mov
in
pop
mov
jp
mov
dec
xchg
fcmovnu
add
movsb
in
shl
pop
divl
jne
xchg
daa
inc
cmpsb
loope
es
mov
add
fcomps
sahf
cmp
repz
test
or
add
sti
xlat
cltd
shlb
pop
int3
inc
push
add
hlt
es
and
cmp
push
movsb
xchg
imul
mov
nop
in
mov
ljmp
pop
inc
jg
inc
das
dec
cs
mov
rorb
dec
fcoml
popl
sbb
cmc
aas
mov
cmpsb
mov
and
mov
rcrl
pop
jmp
or
mov
push
add
aad
jb
pushw
cmc
push
lea
nop
jns,pt
in
fcoml
pusha
movb
jns
cmp
movsb
outsb
jne
insl
push
dec
scas
call
cmp
in
mov
mov
cmp
jae
xchg
outsb
jg
inc
insl
in
inc
das
xor
insl
mov
and
push
inc
jle
xorb
arpl
dec
xchg
fdivrs
push
xchg
cmp
insb
clc
xlat
mov
rcll
jp
test
and
push
pushf
push
fcompl
xor
mov
add
jl
cmp
outsl
fmulp
int3
jl
inc
ss
cmp
pop
repnz
push
or
in
push
movsb
inc
mov
div
test
rcr
adc
mov
jmp
dec
jns
nop
xor
scas
sub
mulb
add
cmc
mov
xor
adc
sbb
inc
mov
add
clc
in
and
shlb
add
pop
lods
lahf
push
push
lret
rol
adc
and
lret
cld
pop
pop
mov
in
jo
insl
add
cmc
rol
ja
dec
outsl
dec
sbb
pop
ja
sbb
sub
movsb
scas
shl
inc
scas
movsl
out
sbb
add
push
iret
xchg
movsb
add
add
add
inc
aam
sbb
inc
add
or
adc
xor
sbb
cwtl
pop
mov
jp
sti
outsl
xchg
testb
mov
mov
push
sar
mov
jne
sub
scas
mov
inc
lds
fcompl
sbb
into
add
scas
xor
lods
xchg
out
and
negb
mov
mov
jle
adc
fwait
das
push
push
jle
pushf
jge
lcall
inc
lds
cmp
xorb
adc
lret
or
out
andb
cmp
aad
adc
hlt
stc
push
cmp
js
pop
mov
add
adc
jb
cmp
imul
les
mov
xchg
divl
xor
xor
mov
pushf
xor
cmp
aaa
into
int3
cli
into
push
sub
icebp
jmp
inc
mov
xchg
mov
sahf
or
rolb
pop
and
rclb
mov
addr16
xor
cwtl
mov
dec
aad
jno
lcall
sahf
negl
aaa
addb
popf
dec
les
mov
push
aas
bound
mov
in
outsb
addl
cmp
ds
es
adc
das
ret
push
movsb
jecxz
ja
pop
pop
loopne
in
lret
fistpl
cmp
add
out
int3
roll
sbb
shll
push
cmp
mov
lret
xor
add
cmpsl
cmp
push
scas
jns
mov
daa
fistps
bound
mov
aad
add
mov
dec
xlat
xor
sbb
sub
fucom
scas
imul
loopne
xorb
push
lds
xor
shr
cltd
mov
or
jp
pop
lret
push
shlb
sbb
jb
mov
outsb
inc
xchg
aaa
into
out
add
stc
das
insb
lock
ljmp
push
testl
dec
lds
mov
jae
pop
adc
push
or
cli
gs
loopne
cmp
lcall
sbb
or
adcb
sbb
je
and
inc
ss
fcoms
scas
lea
es
push
and
jno
push
push
mov
out
dec
xor
insl
mov
out
int3
adc
mov
xchg
and
pop
das
add
test
mov
add
inc
test
sbb
sbb
cltd
dec
insl
push
inc
mov
jg
test
clc
xor
push
sub
pop
sahf
bound
sbb
push
imul
pop
dec
aas
jecxz,pt
imul
xchg
cmpsb
bound
clc
xor
cmp
sub
mov
cmpl
int3
sarl
cltd
dec
cmp
lock
push
call
xor
mov
shrb
cs
jmp
fs
cmp
add
dec
fwait
push
and
out
sub
jle
int
icebp
fsubrs
lods
and
stc
ljmp
jnp
sub
dec
das
xor
pop
dec
popa
xchg
mov
pop
pop
out
xorb
test
lods
ret
pop
jnp
and
call
xor
lcall
scas
sbb
mov
test
inc
ds
cmc
std
mov
insb
scas
fcom
mov
and
popa
mov
pop
push
sub
fadd
mov
cmp
pop
inc
jl
sub
xchg
dec
out
mov
lods
xor
addb
mov
jg
cmp
imul
ret
fldt
jge
call
popa
inc
jbe
in
movsb
pop
insb
mov
sbb
xchg
out
mov
pop
mov
rcl
pop
mov
push
jns
icebp
jae
cmpsl
lcall
ss
inc
mov
aaa
or
sub
sbb
lahf
inc
jns
test
in
in
or
push
daa
xchg
xchg
icebp
shll
xor
jp
push
add
cmp
mov
xorl
xor
sahf
jb
sub
aad
mov
imul
sub
sbb
ss
out
punpckldq
and
out
jbe
lock
imul
sar
add
repnz
jne
or
mov
fcoml
popa
pop
mov
test
and
jge
push
dec
ss
test
xchg
mov
leave
movsb
icebp
mov
mov
mov
sbb
and
jp
subb
adc
push
test
push
mov
mov
xchg
jp
sub
mov
mov
in
inc
inc
loope
notl
mov
push
jns
cmp
sbb
pop
lret
aas
ret
pop
fisubrl
mov
std
xor
movsb
dec
push
loopne
pop
mov
push
repz
lock
dec
inc
xor
call
lret
mov
call
pusha
adc
test
mov
outsb
call
data16
int
push
imul
mov
sahf
mov
or
testl
xlat
fstpt
dec
lds
xchg
mov
loop
xor
lcall
dec
push
push
adcb
adc
iret
and
lahf
ffreep
ljmp
jnp
jb
outsl
ret
inc
data16
loop
pop
pushf
sbb
sbb
mov
inc
mov
pop
push
sbb
fwait
xor
sahf
sbb
fsubs
pop
sbb
ret
xlat
xor
xchg
sub
in
inc
jp
mov
and
jl
sbb
push
loop
xchg
aam
scas
and
daa
pop
pop
jno
cmc
bound
jne
adc
insb
or
sbb
sub
mov
cmp
and
dec
movsb
outsb
cmc
pop
mov
push
xchg
lods
fadds
jne
xchg
movsb
mov
wrmsr
shrb
int3
cmp
ss
pop
cmc
xchg
push
subb
enter
jmp
test
loop
jbe
lahf
mov
mov
dec
mov
jo
pop
stos
jo
and
subb
jbe
push
sbb
rcll
lret
iret
add
lcall
mov
and
jp
popa
mov
dec
repnz
divb
int3
xor
arpl
ret
shlb
pop
mull
movb
or
push
cmp
mov
mov
fcomi
xor
subl
jecxz
test
dec
mov
pushf
jecxz
xor
enter
rolb
sub
xor
test
add
cld
or
pushf
pop
sub
divb
lock
push
fwait
xchg
dec
pop
into
jno
cmp
mov
sbb
dec
jbe
nop
sbb
inc
sub
out
inc
lods
mov
xchg
pop
popf
fcomip
jg
adc
add
int3
gs
xchg
jbe
movsl
lds
pushf
jae
pop
mov
mov
inc
adc
push
aam
jno
out
sti
das
jg
lock
shrl
push
lret
lock
push
movsb
mov
nop
data16
mov
stc
add
push
inc
sub
insl
repnz
inc
shll
xor
shll
adc
pop
dec
out
clc
pusha
out
js
push
pop
pslld
adc
jl
imul
xor
loope
es
xor
fiaddl
test
testl
jp
sti
or
sub
jno
pop
into
pop
sub
mov
leave
out
insb
push
ljmp
in
xor
fimuls
pop
aas
rcll
mov
addr16
cmpsl
sub
loop
mov
fsts
cmp
xchg
in
scas
lock
mul
fscale
pop
or
jg
jae
sti
and
out
stos
ret
int3
outsb
gs
pop
dec
gs
imulb
xchg
addr16
int3
push
std
notl
xchg
xchg
mov
fidivl
dec
push
mov
lret
sub
js
jae
adc
or
cs
add
cmc
imul
mov
push
jns
lock
movsl
into
dec
xor
daa
xchg
dec
ljmp
les
fisttpl
loope
jmp
sbb
mov
mov
inc
aas
inc
mov
jl
inc
dec
push
jae
mov
sbbl
shl
xchg
popf
adc
dec
cmpsb
dec
cld
les
sbb
xchg
push
scas
push
aas
fsubp
fistps
xor
addb
lods
je
mov
popa
enter
inc
mov
xchg
pop
orl
push
jb
cmp
mov
out
jo
adc
jmp
jecxz
or
sub
push
pop
xchg
popf
lock
lret
cmpl
cmpsb
or
jns
mov
and
mov
repz
cmpxchg
loop
loopne
inc
push
cmp
aaa
test
dec
jbe
and
movsl
adc
xchg
mov
popf
adc
cmp
push
movntq
push
or
test
shrb
icebp
dec
dec
adc
mov
std
fisubs
ljmp
xchg
mov
xchg
inc
pop
aaa
sti
ja
xlat
cs
or
movsl
sti
sahf
or
xor
or
xchg
aam
dec
and
addr16
or
adc
dec
fldenv
loop
cmp
aad
movb
lret
jle
push
enter
icebp
fsubp
aaa
push
call
es
ds
sbb
int
pop
lret
int
sub
sub
cltd
je
fwait
notb
out
repz
std
and
sub
lods
pop
xchg
and
imul
sti
add
jbe
arpl
or
or
pushf
lret
cs
into
lds
mov
jae
mov
mov
gs
sbb
add
cmpsb
add
push
xor
and
mov
mulb
hlt
and
inc
test
jae,pt
sahf
push
roll
xchg
xor
adc
inc
mov
xor
lcall
js
push
jb
addr16
insl
xchg
notb
fdivs
outsl
std
add
ss
cmp
cli
inc
pop
ljmp
bound
push
addr16
and
xor
cmp
jmp
mov
push
movsl
mov
mov
fstpl
rolb
fs
push
test
sahf
popf
ja
clc
aad
xchg
xchg
out
mov
cmpsb
jno
ja
cs
aas
sub
adc
ffree
sbb
fst
push
shlb
imul
cltd
inc
push
inc
mov
cwtl
push
movsl
and
in
fs
pop
pop
and
sahf
daa
int
out
shlb
dec
sbb
jbe
and
dec
xor
xchg
imul
stc
fldcw
xchg
dec
cmpsl
out
je
sbb
sbb
call
xchg
inc
add
or
mov
addl
xchg
sbb
aaa
cmp
iret
cld
push
leave
js
cs
shlb
xor
jno
and
loop
mov
or
fwait
js
push
mov
jnp
mov
mov
mov
shll
pop
int
movsl
out
clc
sahf
or
dec
lods
ds
shlb
xor
mov
mov
mov
sub
inc
std
das
out
test
imul
fildll
mov
rcr
dec
clc
test
cmc
dec
test
movsl
cmp
push
lods
xchg
mov
xchg
leave
fiaddl
push
mov
mov
out
inc
jb
cs
data16
out
clc
repnz
fldl
add
mov
das
sbb
loopne
cmp
addr16
stos
das
add
add
jg
xor
mov
mov
mov
adc
je
jae
pop
pop
mov
push
adc
cmp
sbb
inc
popl
add
xchg
roll
mov
xchg
cmpsb
xchg
inc
adc
out
mov
cli
pop
xchg
jnp
scas
fwait
cmp
insb
bound
test
and
sub
mov
jb
mov
das
mov
outsb
dec
inc
aaa
mov
sub
mov
fdivl
mov
xchg
dec
stos
sub
fcoml
mov
cmp
out
jns
shrb
adc
insl
pandn
ret
pop
or
in
sbb
sti
xchg
cmpsb
cld
xchg
scas
add
pop
pop
dec
jle
add
jecxz
in
movsb
mov
add
and
out
jb
div
pop
mov
ret
mov
hlt
enter
mov
sub
ss
mov
mov
aaa
or
or
fisubrl
sarb
pop
int
mov
int
pop
gs
movsb
incb
xchg
dec
fsubr
inc
stos
and
fldcw
push
xor
emms
daa
addr16
aam
leave
std
vmovaps
mov
pop
add
in
cmp
mov
sub
add
imul
add
andl
insl
push
out
pop
and
ret
cmpsl
scas
daa
call
dec
sub
clc
roll
fistpll
fbld
and
popf
xchg
mov
sub
mov
in
inc
add
imul
dec
xor
call
push
andb
or
mov
mov
push
enter
sub
popf
adc
in
xor
or
scas
or
int3
iret
xchg
lock
iret
adc
inc
push
mov
cmp
xor
adc
mov
add
mov
es
push
movsb
dec
lock
mov
mov
ret
mov
js
fcompl
cmpsb
mov
imul
lock
std
aam
push
sub
sub
or
pop
xor
xor
jns,pn
sub
push
jge
mov
sub
xchg
jle
dec
loopne
scas
cwtl
std
xchg
xor
mov
jge
leave
into
add
push
pop
insb
mov
stos
aaa
mov
sub
andb
pusha
loopne
push
pushf
xorb
mov
and
adc
add
loop
jecxz
enter
push
jno
mov
jp
roll
lea
mov
cld
jns
push
push
jno
push
loope
add
mov
arpl
bound
test
sbb
aam
jns
xor
loopne
push
mov
add
add
sbb
ret
pusha
sub
mov
das
out
jae
mov
push
frstor
jns
xchg
je
int
mov
je
mov
scas
lock
pop
negb
jnp
adc
push
pop
mov
bound
mov
dec
test
arpl
and
pop
test
fisttps
scas
mov
out
cmpsb
out
iret
pop
mov
mov
das
enter
push
popf
cmovae
mov
mov
imul
mov
pop
xchg
jae
scas
lea
sti
ret
sbb
aaa
pop
xor
jmp
pop
ud2
in
mov
vcmpps
into
push
daa
push
into
cmp
push
mov
jl
icebp
add
or
add
ss
xchg
sahf
or
inc
jle
cmp
insl
mov
sub
sbb
sub
add
orb
dec
sub
sahf
fadd
ret
mov
scas
test
arpl
jmp
mov
je
int3
jno
clc
stc
mov
push
mov
andl
pop
xor
fsubs
xchg
xor
cwtl
add
and
jno
mov
iret
jecxz
sub
clc
out
mov
inc
or
or
nop
pop
sub
dec
xchg
data16
push
cmpsb
lds
in
push
mov
orl
push
loop
fisubrs
in
mov
mov
mov
pop
nop
rcrl
push
in
mov
popa
add
mov
jp
test
mov
fidivs
pop
sub
outsl
jb
bound
mov
xor
mov
nop
sbb
leave
mov
cltd
or
jbe
push
xchg
cmp
and
adc
push
dec
fidivs
pop
shrl
mov
in
stos
test
jl
cld
imul
sbb
loopne
mov
mov
inc
adc
pop
test
sete
insl
sbb
push
ds
out
rcll
sbbl
dec
mov
adc
aaa
lret
mov
sarl
mov
or
out
push
in
or
ds
mov
adc
push
xchg
push
xorl
incb
aaa
movb
fldt
jmp
mov
sbb
jae
aam
jbe
xchg
push
jbe
sub
jl
jbe
rorb
mov
ja
sbb
rcl
data16
sbb
and
cmp
clc
out
mov
adc
clc
xchg
roll
dec
sbb
lods
mov
test
scas
movsb
cmpsl
inc
push
or
ror
add
and
jle
pop
sbb
sbb
sbbl
xor
loope
push
clc
push
bound
mov
imul
inc
movsb
push
into
dec
and
data16
jns
popa
xchg
or
xor
daa
mov
mov
sarl
fwait
daa
sub
pop
and
andl
int3
mov
les
outsb
shll
test
xlat
insl
outsl
xchg
pop
lret
add
pop
mov
xchg
sub
or
lods
test
add
push
lahf
pop
dec
sub
cmc
pop
and
push
ret
stos
xchg
negb
sub
notl
push
pushf
sbbb
mov
sub
mov
orb
nop
jg
push
push
daa
loop
cmc
or
sbb
aam
pop
pop
fs
sub
jns
leave
je
addr16
in
imull
pop
mov
mov
mov
fwait
cmp
iret
std
shll
and
mov
js
push
jb
cmpb
stos
loop
stos
mov
ds
stos
fs
adc
cld
pop
data16
enter
push
or
mov
pop
arpl
js
jnp
mov
aas
cmp
add
mov
mov
pop
mov
adc
aam
in
cmp
repnz
lret
out
jae
cmp
mov
ds
test
lahf
mov
and
dec
pop
pop
imul
test
jno
pop
and
push
filds
js
ljmp
xchg
sbb
push
jmp
xor
lret
mov
or
aaa
mov
lahf
bound
jmp
pop
stos
cmp
in
xchg
fldl
cmpb
jge
lods
mov
xor
or
jno,pt
mov
fldcw
in
movb
add
push
xchg
xchg
push
addb
push
inc
mov
or
inc
push
mov
adc
ljmp
dec
ljmp
lock
jmp
jmp
adc
call
icebp
lahf
call
dec
movsl
mov
js
fucomi
jge
mov
jle
sub
je
inc
scas
out
jle
ror
in
sub
or
insb
sahf
ja
xor
mov
xchg
lods
lock
pop
adc
xor
push
jecxz
pop
jns
cmp
jmp
dec
inc
sbb
imul
pop
lcall
jl
lods
rol
adc
add
pop
je
mov
stc
jae
add
adc
pop
pop
push
push
and
pushf
add
out
test
adc
adc
sub
mov
je
fadds
inc
sub
inc
pusha
int3
loop
or
adc
jge
sti
xchg
into
mov
push
dec
inc
test
into
xchg
enter
mov
jbe
mov
pop
sahf
and
mov
inc
sub
xchg
mov
hlt
add
sbb
insl
pusha
jg
ret
dec
repz
lea
sbb
and
jl
inc
mov
push
push
and
fdivr
adc
test
or
sbb
fisubs
sub
and
push
inc
stc
adc
jns
sysret
test
stc
sub
pop
mov
rol
out
inc
and
in
cli
flds
pop
jns
test
mov
dec
dec
roll
push
push
cmp
iret
in
int
xorl
adc
movsb
jle
jmp
nop
std
jmp
imul
inc
push
sbb
lahf
daa
add
mov
nop
sbb
xor
inc
test
push
ja
pop
scas
cmpxchg
xor
shrb
minps
dec
push
cld
arpl
gs
hlt
pushf
xor
and
pop
add
sbb
stos
lcall
fldl
outsb
cli
mov
and
fsts
je
fbld
dec
lock
popf
and
mov
mov
mov
out
add
mov
ja
mov
in
xchg
jge
cmp
xor
or
add
mov
and
or
in
pushf
xor
notl
inc
jns
push
int
ljmp
dec
data16
xchg
decl
mov
call
push
add
sahf
mov
mov
int
inc
mov
add
inc
xor
js
js,pt
lahf
sbb
loop
sub
inc
imul
xchg
or
lods
xchg
sub
dec
cmpsb
mov
inc
mov
cltd
jmp
push
ljmp
jno
mov
pop
shl
pop
loop
lock
or
outsb
out
sbb
aas
jnp
rcr
sub
into
jp
dec
test
mov
stos
mov
push
sahf
test
arpl
xchg
setb
jbe
mov
inc
movb
cmp
and
call
and
or
test
enter
fists
aam
push
jl
fwait
mov
sbb
leave
call
mov
je
pop
imul
loopne
mov
jg
xor
bound
sub
dec
out
ds
incl
cmpl
repz
stos
movsl
cltd
mov
rcl
sbb
mov
jno
sti
push
into
popf
dec
daa
stc
inc
xchg
push
lods
test
fwait
fcmovbe
stos
lcall
push
adc
jnp
lret
movb
lahf
add
adc
jb
daa
pusha
sub
sete
mov
push
dec
push
cmp
lock
adc
call
scas
and
and
fwait
jge
call
and
pop
and
push
cltd
ss
fstpt
inc
mov
sub
and
daa
sub
stc
lods
repnz
mov
lcall
cmpsb
rcll
dec
mov
mov
gs
adc
roll
jno
sbb
aaa
push
cmpsb
aaa
leave
ss
sbb
sbb
add
fildll
cmpsb
dec
jnp
fsub
scas
add
test
or
xor
hlt
add
mov
rcll
jecxz
mov
pop
pop
pop
aam
ja
cmpsb
jecxz
iret
sub
adcb
mov
mov
mov
add
sahf
xor
xor
mov
xchg
dec
aad
and
test
stos
inc
ds
mov
add
fsub
lea
pusha
jbe
pop
rclb
clc
xchg
cwtl
gs
adc
xor
xchg
and
sub
add
inc
adc
jb
pop
inc
xor
add
repz
ret
mov
xlat
xchg
inc
int3
mov
cmpl
call
push
fidivrs
fisubrs
adc
fcompl
hlt
xor
leave
out
mov
adc
cmp
call
imul
push
ljmp
int3
cwtl
repnz
push
inc
add
xlat
or
push
push
loope
xchg
clc
dec
and
push
cmp
fidivs
xchg
and
cwtl
call
sub
mov
scas
dec
addl
dec
push
stc
xchg
test
shll
pusha
adc
shrd
dec
xlat
icebp
addl
fistps
pop
ror
shr
cli
lods
inc
lods
add
mov
arpl
fldt
push
arpl
inc
mov
or
xor
mov
xchg
cmp
dec
adc
movsl
shrl
add
xchg
out
incl
pop
cmp
pusha
cmp
ss
adc
xchg
or
push
shl
push
jo
sbb
mov
stc
out
push
cmp
aam
test
in
dec
and
pop
push
pop
mull
mov
sub
jge
cmp
popa
iret
call
or
out
arpl
mov
push
or
movsb
lock
mov
outsb
aam
cld
pushl
aam
push
popa
js
out
scas
scas
lods
jne
mov
test
xchg
push
mov
xchg
lock
add
fisttpl
fs
rorb
scas
xor
sub
push
mov
mov
mov
push
add
sub
je
test
arpl
push
jp
sub
lahf
push
xchg
cmp
icebp
xor
leave
pop
pop
das
sub
jmp
leave
rclb
daa
mov
repz
insb
lcall
xchg
pop
lret
dec
sub
jmp
rorb
rcll
daa
sub
daa
add
xor
into
pop
xchg
mov
mov
sti
int
maskmovq
testl
push
shrl
pop
fimull
cld
arpl
les
and
lds
ret
xchg
movb
mov
movsl
xor
in
pop
inc
mov
sbb
and
outsl
addr16
leave
jp
inc
test
insb
dec
push
jl
ror
popf
push
inc
les
dec
dec
rclb
test
sbb
sar
jnp
adc
inc
sahf
in
sbb
jmp
cwtl
insl
sbb
das
mov
add
push
jnp
in
jns
sbb
push
int3
push
pop
inc
fadd
shll
sti
mov
pop
cs
sbb
or
cmpsb
lahf
mov
mov
sub
int
add
pop
stos
inc
xchg
jo
sarl
andl
into
ljmp
fs
pop
lods
xchg
mov
xor
cmp
lret
mov
aam
xor
xchg
aam
mov
lods
xlat
stos
testb
dec
mov
pop
dec
lock
inc
xor
mov
subl
or
add
cmc
or
test
adc
pop
adc
ret
jg
mov
leave
loopne
add
xor
nop
xor
rcrl
fistps
fcoml
sub
popf
sub
dec
stc
ret
dec
mov
xlat
cmp
sbb
outsl
sbb
es
jns
cli
xchg
push
mov
js
nop
push
ljmp
jo
out
in
hlt
adc
jp
icebp
movl
xlat
pop
sarb
cwtl
dec
into
scas
stos
repnz
push
xchg
mov
cltd
inc
sbb
push
xlat
or
xor
push
mov
mov
mov
inc
rclb
adc
xchg
clc
cmc
outsl
cmpsl
and
negb
mov
call
and
push
inc
or
rcl
mov
mov
scas
sub
das
lock
push
inc
repz
dec
in
adc
or
pop
fidivrs
mov
decl
jp
mov
out
sbb
stos
mov
sbbb
aam
aas
sub
cmc
hlt
addr16
rcrl
ret
push
cld
xor
mov
mov
ret
imul
imul
push
lock
rcrl
imulb
dec
or
mov
pop
and
ss
sbb
pushf
push
fcoms
int3
insl
ss
jp
mov
cli
popf
adc
je
stc
dec
fwait
sbb
inc
cs
or
imulb
aad
xchg
lret
mov
adc
ljmp
sti
imul
jmp
xchg
and
outsb
call
fldt
out
add
ja
lock
imul
xor
jno
and
cwtl
addr16
repnz
xor
push
mov
cli
lret
sub
push
aam
mov
add
fistpll
jge
pop
inc
and
mov
push
mov
xchg
inc
or
cmpsl
adc
repz
out
jo
adc
shrb
xchg
lahf
xor
push
sbb
leave
lcall
fisubl
mov
outsb
push
pop
enter
mov
adc
jb
inc
adc
int
outsl
dec
mov
pop
add
daa
cwtl
test
and
jno
jns
jnp
les
xchg
test
push
popl
shrl
ret
test
hlt
insl
popa
data16
in
mov
dec
mov
add
js
xor
jae
lea
add
dec
lcall
mov
inc
in
and
out
insb
dec
outsb
repnz
mov
mov
jl
lds
sahf
xchg
filds
push
cs
mov
lods
enter
xchg
lret
clc
fldenv
inc
mov
shlb
dec
add
pop
cwtl
out
xor
dec
jmp
mov
addr16
fdivs
pop
push
mov
test
pop
lcall
push
test
jle
sahf
and
cld
shl
jmp
iret
inc
daa
sbb
lret
jb
xchg
push
xchg
cwtl
out
lcall
jb
adc
pop
cmpl
sbb
mov
cmc
fstl
xchg
push
cmc
cmp
out
rorl
mov
ficoml
lcall
xlat
test
cmp
cmpsb
mov
xor
mov
mov
xchg
push
mov
rcrl
dec
dec
or
pop
adc
ucomiss
sbb
ror
add
jecxz
stc
jmp
stos
lock
xchg
mov
int3
xchg
mov
adc
stos
int
jge
sub
cltd
addr16
push
lea
fbld
or
mov
std
or
xchg
cmpsl
cmp
das
sbb
in
popa
sub
in
push
mov
dec
xor
xor
or
outsl
adc
mov
cmc
add
jp
insl
jge
mov
es
mov
es
scas
push
in
dec
pop
push
sbb
xchg
insb
rcrb
mov
hlt
popf
mov
ret
je
pop
mov
jge
pop
jae
jmp
jle
sbb
or
cmp
xor
or
shl
xchg
push
jle
cld
dec
ret
rcl
dec
arpl
push
in
mov
push
inc
inc
sub
inc
je
shlb
pinsrw
cmpsb
push
aam
dec
imul
aas
call
dec
into
jmp
inc
aam
imull
inc
push
add
iret
test
aam
dec
das
pop
mov
adc
cmpsb
dec
mov
cmpsb
xchg
dec
cs
idiv
mov
mov
xchg
aad
xchg
icebp
scas
bound
js
es
and
rcll
cmp
mov
xor
das
ljmp
push
mov
pop
mov
je
fidivrs
lds
loope
mov
pop
mov
lea
jns
adc
mov
cli
or
ret
ja
daa
addr16
push
mov
stos
cs
fisttps
cmc
loope
xor
mull
mov
lods
aaa
sbb
jae
pop
sub
mov
jmp
mov
cld
push
pop
mov
add
fldcw
ljmp
std
xchg
hlt
ret
mov
adc
jb
testl
movsb
jge
shr
jecxz
inc
fsts
sarl
fisttps
imul
xor
lcall
insl
imul
popf
ljmp
insb
sub
fimull
dec
sbb
mov
loop
sbbl
insb
outsl
mov
out
xchg
gs
stos
xchg
adc
xor
sbb
mov
cmp
bnd
popa
push
scas
out
lods
fnstsw
inc
lret
or
rclb
daa
push
sub
mov
andb
in
pop
jns
mov
lods
sub
push
bound
xchg
pop
jl
loope
jae
loope
push
pop
jle
imul
dec
test
xor
jnp
ret
mov
hlt
adc
and
mov
enter
cmp
jmp
std
and
pop
and
notb
push
repz
pushf
aam
sub
mov
push
orl
push
push
mov
add
int3
movsb
inc
xchg
fnstcw
jne
dec
arpl
pusha
adc
jne
lea
mov
das
jmp
rcl
cmp
clc
push
dec
mov
iret
ror
jmp
mov
dec
imul
in
pusha
into
mov
dec
lret
rolb
std
arpl
mov
pop
icebp
outsl
clc
stc
aas
cmp
inc
negl
shlb
or
popf
inc
cmp
push
pushf
inc
stos
aas
jb
xchg
sub
xchg
mov
insb
jle
fistps
jge
xchg
push
or
xchg
ljmp
sarl
jae
mov
pop
das
aaa
rorl
fdivrs
cmp
dec
mov
scas
int3
jle
jle
test
xor
push
leave
jae
xlat
push
std
mov
in
ljmp
pop
test
or
push
insl
dec
frstor
lods
jne
xchg
dec
fdivrp
jecxz
stc
pop
dec
push
iret
mov
jle
cmp
sbb
xchg
in
cwtl
mov
sarb
jno
pop
mov
push
ja
lods
mov
xor
scas
push
fldlg2
cwtl
cmc
sub
call
test
mov
mov
imul
push
insb
stc
sub
mov
xor
orl
or
rorb
adc
shlb
mov
mov
sbb
mov
scas
adc
mov
mov
unpcklps
imul
inc
fldl
aaa
mov
ret
dec
add
mov
idivl
cltd
xchg
daa
arpl
decl
sub
int
ljmp
int
inc
data16
leave
mov
mov
sub
enter
cmp
jg
loopne
mov
mov
jl
bound
sbb
mov
and
push
aad
and
adc
iret
cmp
ljmp
mov
repz
pop
in
imul
rcr
or
dec
push
mov
push
mov
fcoml
hlt
sahf
ja
sub
sbb
or
add
mov
jo
add
xchg
cld
mov
push
icebp
jl
pushf
lcall
mull
push
decb
xor
dec
and
icebp
inc
sahf
lcall
lods
mov
popl
add
inc
sub
lds
int3
mov
mov
cmp
int
push
lahf
jg
cmpsl
dec
repnz
mov
repnz
jp
adc
mov
insl
jmp
jmp
push
xlat
fisubs
addr16
aas
push
sbb
push
mov
clc
mov
enter
jg
shll
shll
inc
es
push
mov
push
aam
lods
dec
push
stos
cli
add
aaa
stos
in
aad
sarb
push
push
imul
icebp
cmp
xchg
add
inc
stc
xchg
dec
in
mov
loopne
jae
sub
sbb
dec
cmpsb
lods
push
jb
lods
rcr
or
pop
or
or
push
pop
or
in
cmp
lds
pop
sbb
leave
and
xchg
xor
inc
jo
inc
sarl
mov
pop
mov
gs
mov
icebp
push
stos
enter
mov
test
inc
mov
xor
add
sub
xchg
iret
sbb
hlt
push
xorb
insl
sbb
sbb
out
call
xor
dec
repz
adc
insl
mov
fsubl
mov
fwait
push
mov
in
ljmp
mov
and
inc
push
test
fdivl
push
pop
push
push
add
mov
sti
notl
mov
sti
sar
insb
jg
js
inc
vcmpps
popl
or
fists
dec
mov
pop
sbb
bound
sbb
lods
bound
xchg
xchg
pop
push
aad
sub
adc
mov
or
fmull
fstpt
dec
jae
push
enter
and
push
addr16
stc
jmp
mov
xchg
mov
sbb
out
das
pop
xchg
loopne
jns
jp
xchg
stos
push
aas
pop
push
aas
sub
jne
adc
sbb
adc
xchg
out
cmp
xchg
loop
pop
push
jmp
xchg
mov
pop
cmp
lods
sub
pop
adc
nop
inc
push
test
pop
ljmp
lea
cmp
test
cwtl
rcll
jp
ror
jne
dec
or
stos
push
push
cwtl
dec
arpl
xor
push
popa
mov
xchg
inc
aam
mov
fsts
pop
dec
inc
inc
mov
mov
and
fsubp
test
fxtract
mov
add
sbb
stos
mov
pushf
mov
cwtl
mov
xor
pop
sbbl
and
int
cmp
lahf
gs
jo
mov
cmp
cmp
aam
loope
fldenv
xor
sbb
hlt
aam
gs
lock
rcll
repnz
out
pop
fcompl
inc
add
xlat
sub
dec
jo
mov
inc
jb
jae
sub
jne
cmpsl
push
pusha
jg
fldcw
nop
jbe
sbb
cmp
bound
pop
test
xchg
sbb
les
mov
sbb
iret
mov
or
xchg
jecxz
sbb
pop
push
adc
aad
sub
inc
rorb
jmp
and
movsl
popf
scas
leave
ficoml
fldenvs
sbb
cli
in
lret
repnz
xchg
fisubl
add
cmp
push
mov
sahf
movsl
jne
pop
ret
idivb
push
std
jecxz
xchg
dec
mov
les
xchg
insl
jnp
sbb
das
xor
jmp
and
out
test
lods
lods
sbb
jl
dec
lods
les
inc
cmpsb
pop
dec
add
jecxz
dec
roll
sbb
movsl
pushf
std
gs
cli
cwtl
cmp
and
mov
fldenv
pop
xor
test
dec
cli
loopne
sbbl
mov
je
or
push
imul
sub
loope
cmpl
mov
loope
xor
daa
out
cmpsl
in
test
inc
daa
pop
xor
stos
pop
cmp
mov
mov
xor
inc
scas
xchg
loope
imul
xor
fmuls
push
gs
inc
inc
or
jae
outsb
jge
lock
xor
js
xor
sub
inc
sbb
clc
mov
icebp
ds
xchg
ss
adc
adc
jo
in
cmc
push
mov
add
jge
dec
mov
inc
mov
sub
cmp
and
scas
fcompl
cmp
fmulp
inc
push
adc
push
mov
adc
orl
add
aas
cmpsl
mov
clc
mov
adc
ficomps
in
xchg
push
dec
mov
cmp
pop
mov
enter
or
adc
add
add
dec
or
push
in
and
test
out
mov
or
andb
sub
xchg
fstpl
enter
jge
dec
or
add
mov
scas
das
and
push
cmc
aad
mov
dec
pop
xchg
sub
xchg
cmp
fcmovne
xor
sbb
lods
mov
sub
sbbl
sbb
movsb
add
xchg
mov
sbb
cli
testl
hlt
inc
pop
leave
cmp
sti
push
push
das
mov
adc
cmp
bnd
jae
cmp
imul
lcall
mov
dec
xlat
dec
outsb
mov
popf
cmp
adc
adc
je
ficoml
jae
mov
sub
inc
test
adc
sub
int
mov
add
cli
frstor
xchg
mov
ljmp
fldpi
subl
sbb
mov
or
mov
push
cmp
xor
std
xchg
jecxz
lods
mov
cmpsl
int3
js
jecxz
int3
sti
adc
sti
scas
xor
lock
fmull
clc
mov
std
adc
mov
loope
xchg
pop
mov
pop
jae
bnd
xchg
insl
mov
xchg
mov
mov
mov
adc
out
lahf
pop
sbbl
mov
stc
jecxz
into
pop
cmp
mov
xchg
sarb
inc
hlt
mov
lds
mov
ja
jns
lret
sahf
mov
or
insb
aas
pop
sbb
loopne
sbb
loope
push
push
pusha
sbb
insb
push
jae
sub
push
sbb
push
mov
pop
push
addl
jge
sti
stos
xor
lods
out
cmp
cmc
jo
mov
aaa
neg
dec
dec
mov
push
jbe
cmp
ffreep
je
lcall
push
mov
xchg
leave
fmuls
adc
insb
mov
outsl
and
int
loop
repnz
das
pop
sub
pavgw
dec
outsl
push
xor
sub
loop
sti
xor
icebp
testl
insb
fidivrl
add
or
jmp
and
lret
mov
repnz
pop
mov
cmpsb
lahf
or
sbb
sub
pop
inc
sub
mov
cs
std
xor
mov
lds
jge
insb
jg
fwait
enter
pop
cli
pop
test
rcrb
or
cmc
psubusb
imul
cmp
push
add
jl
std
sbb
add
rol
insb
add
lods
lcall
test
and
xchg
adc
add
push
mov
pop
nop
push
jp
and
ficomps
sub
mov
lahf
lods
or
stc
shl
dec
jecxz
das
jbe
pop
std
inc
cmp
imulb
test
push
mov
adc
adc
bswap
mov
push
add
sbb
sarb
inc
mov
cmp
cwtl
sbb
jg
fwait
daa
sbb
sbb
dec
hlt
jle
repz
jns
std
adc
decl
aad
mov
add
push
adc
pop
andb
mov
jae
xchg
lods
les
mov
in
stos
push
je
popf
ficoms
jp
testl
dec
xchg
fstl
cmp
xor
pop
sbbl
jnp
sub
sahf
lsl
sbb
ret
pop
mov
aas
inc
call
xlat
sub
stos
push
adc
scas
adc
test
xchg
pop
push
sahf
test
ljmp
call
and
add
into
adc
lods
pop
jp
or
out
xchg
inc
jae
or
hlt
out
scas
push
xchg
push
movb
mov
or
lds
scas
sbb
xchg
bound
sarb
mov
in
js
std
fmul
aaa
fisubrs
int
push
lods
sbb
cmp
repnz
sub
adc
mov
jb
std
addr16
sarb
jp
xchg
sub
push
dec
mov
lods
adc
jl
jne
inc
aaa
xchg
mov
mov
test
push
push
push
mov
push
sub
xor
dec
push
insl
cmp
int3
sahf
call
xchg
loop
sbb
xor
mov
mov
hlt
call
dec
loop
jecxz
out
sbb
mov
out
push
or
gs
add
adc
movsl
cmp
repnz
mov
stc
outsl
mov
int
ja
in
outsl
loopne
mov
pop
mov
call
mov
call
ljmp
sbb
ja
pop
scas
dec
cmp
dec
leave
les
aas
add
jae
or
sbb
pop
push
in
das
cmpsb
mulb
jmp
xchg
mov
scas
xchg
fisttps
repz
mov
xor
mov
dec
ljmp
push
push
subl
pop
mov
cmp
cmp
sbb
inc
mov
or
or
sbb
or
pop
add
sub
or
cli
sbb
outsb
mov
push
inc
push
out
and
push
xor
das
idivl
xchg
cmp
or
pop
shrl
push
scas
ljmp
xchg
aam
fsubl
cmc
sub
out
sub
pushl
imul
stc
mov
add
xor
ss
fstps
es
dec
xchg
rcrb
popf
adc
clc
mov
int
pop
lret
and
test
lret
sub
das
mov
ret
das
cmp
xor
scas
jmp
mov
dec
sub
adc
lret
add
mov
jb
jmp
sub
stos
cld
popa
cmp
outsb
xor
mov
jp
imul
ret
xor
loope
test
ds
mov
mov
sub
nop
arpl
xchg
push
loope
mov
ffreep
aaa
mov
sarl
rolb
jno
inc
aas
cmpsb
jno
filds
mov
adc
jmp
and
aas
shll
cmpsb
jle
lock
not
dec
pusha
xchg
pop
dec
ds
push
and
and
enter
mov
xor
push
cmc
ret
cli
pop
in
inc
sbb
shll
daa
out
arpl
int3
adc
add
cwtl
movsb
jae
mov
xchg
out
sbb
cmpsl
outsb
pusha
ja
cmp
sub
ds
fmulp
int
subl
xor
push
sub
out
pop
pop
mov
jo
scas
xor
sbb
push
mov
mov
shlb
xchg
pushf
inc
out
push
push
inc
out
lock
mov
and
jmp
fistps
das
sbb
jecxz
icebp
dec
mov
mov
out
imull
inc
pushf
daa
lret
in
jp
mov
outsl
rcll
addr16
push
pop
les
mov
jge
cld
imul
mov
cwtl
mov
nop
shlb
jecxz
les
mov
jo
out
sbb
into
dec
bound
add
ss
jae
pop
xor
mov
mov
jbe
fcomp
push
mov
popf
fiadds
pop
xchg
jecxz
call
mull
out
push
loopne
sbb
xor
outsl
jl
xchg
daa
add
or
dec
or
jecxz
gs
jnp
loope
push
mov
mov
pop
or
sbb
fs
push
sbb
stos
xor
sub
fwait
jne
adc
aas
fidivl
loopne
pop
jge
mov
imul
mov
out
cld
fs
adc
jg
mov
lods
aad
out
cs
mov
jl
xlat
adc
test
xchg
loopne
cmp
cld
shrl
add
fstpt
stos
shl
repnz
dec
mov
push
pop
dec
call
divl
and
xor
sub
outsb
mov
in
add
out
movsb
lods
add
cltd
mov
push
ficoml
ljmp
int
into
push
ja
fsubl
fistpll
pop
std
jecxz,pn
repnz
test
jns
sub
inc
mov
sub
lcall
inc
jns
sub
or
add
cmp
fs
shl
dec
xor
fmuls
push
ja
add
pop
mov
mov
divb
call
cmp
popf
add
add
jecxz
pop
lods
int
mov
scas
push
or
mov
push
leave
inc
aas
mov
arpl
mov
sub
fcmovb
mov
ret
pop
xchg
inc
xchg
fcoml
sahf
and
int3
in
repz
push
sbb
dec
lods
add
mov
cltd
in
aas
jl
loop
inc
popf
push
cld
out
or
rorl
fnsave
or
jo
mov
jb
and
xlat
mov
or
repz
xor
mov
sti
mov
and
mov
clc
out
dec
arpl
lds
cld
leave
test
shlb
pushf
inc
xor
iret
dec
jp
lods
sub
xchg
jge
cmc
stc
in
lods
sub
inc
in
xor
ss
iret
sub
lods
popa
test
adc
cmp
mov
mov
add
lcall
orl
push
rol
aad
xchg
imul
iret
pushf
fistpl
adc
cmp
pop
insl
nop
aas
sbb
or
in
sbb
mov
xor
or
and
cmp
insb
xor
mov
movsl
or
and
test
inc
rol
xchg
subb
in
sahf
mov
sbb
mov
inc
adc
and
push
clc
push
cmp
pop
jnp,pt
leave
adc
xchg
es
jl
sub
in
push
mov
xchg
out
adc
dec
fldl
adc
stc
xchg
pop
and
mov
cmp
sub
add
arpl
fadds
xor
adc
mov
lea
push
push
mov
aad
sbb
flds
sbb
int
jmp
pop
testb
fstpl
outsl
repz
insl
pop
xor
rcl
int
int3
xchg
sbb
sbb
xchg
jp
aaa
push
push
aas
ficoml
dec
push
jbe
scas
xorb
cmp
xor
mov
pushf
mov
mov
xchg
adc
cwtl
sbb
cmp
fistl
cwtl
repnz
clc
lea
scas
arpl
ss
jnp
xchg
popa
cmpsb
ret
lock
sbb
cwtd
push
sbb
cmpsb
in
sbb
ficoms
mov
int
fnstcw
test
sbb
xchg
fadds
test
orl
popf
test
leave
mov
faddl
push
pop
mov
pop
cmp
xchg
std
bound
ffreep
mov
shl
fwait
bound
bnd
push
inc
push
xlat
jno
push
jmp
mov
adc
jb
out
pop
xor
lods
sub
movsl
sub
sub
pop
aaa
push
xchg
fdivl
and
jns
sub
fcoml
pop
nop
push
mov
fbstp
js
xchg
sbb
pushf
xlat
mov
xchg
push
fbstp
jle
inc
inc
mov
dec
leave
or
testb
xor
xor
ret
fdivr
fisubrl
subl
mov
sbb
mov
int
cwtl
addr16
add
cmp
mov
movsl
fidivs
stos
shll
mov
add
stos
xor
xchg
fcmovne
clc
adc
sub
mov
and
dec
stc
or
mov
outsl
dec
cmp
pmulhw
filds
sbb
movsb
jge
xor
imul
fistpl
lret
test
pushl
popl
pop
xchg
sti
loop
inc
int3
mov
xchg
cmp
dec
jg
cmp
and
add
jnp
xchg
dec
mov
xchg
lea
mov
fwait
xor
outsl
fwait
xor
inc
xor
jne
inc
lock
dec
mov
iret
imul
dec
fimuls
cmc
xor
stos
stos
insb
sbb
mov
push
mov
ds
inc
mov
icebp
lcall
sbb
push
sub
lcall
stos
pop
dec
test
ret
je
or
and
fwait
push
rcrb
xor
lds
xchg
aam
xchg
pop
je
es
cli
xchg
mov
xor
mov
sub
dec
movsb
sahf
mov
pop
adc
popa
mov
mov
icebp
xor
ds
lods
mov
xchg
int3
sub
sub
shl
rolb
dec
or
push
sbb
mov
dec
sarb
icebp
or
outsb
push
mov
cmp
or
shl
inc
sub
rcll
pop
jbe
scas
pusha
push
xor
push
cmp
and
js
xor
inc
pop
lahf
mov
addr16
bound
or
xchg
xor
ret
pop
ficomps
sub
lods
cli
ss
leave
jl
lret
cmpl
daa
xchg
sbb
mov
ja
sub
cmpsl
daa
xor
mov
pop
fildl
cmc
scas
je
mov
bound
cld
inc
push
scas
pop
movq
mov
add
sbb
shl
mov
adc
adc
testb
adc
jno
loop
stc
stos
xor
je
jge
dec
xchg
fsts
and
outsb
repnz
dec
cld
pop
or
xchg
adc
pop
imul
push
out
dec
shl
lcall
xchg
popf
dec
cmpsl
xchg
pop
dec
sub
mov
cmpsl
mov
push
frstor
scas
pop
jae
and
pushf
pop
nop
dec
pusha
mov
rcrl
mov
mov
pop
imul
cmp
mov
adc
xor
cmp
insl
fldcw
pop
fs
rorb
js
pop
sarl
xor
mov
dec
sub
call
ficompl
mov
stc
movsl
pop
pop
and
jns
outsb
mov
js
fs
xchg
cwtl
push
aad
push
dec
pop
ss
in
add
cmc
jne
imul
jnp
jp
sub
ljmp
pop
test
mov
push
jae
stos
inc
sub
sbb
ret
outsb
pop
pop
loopne
nop
out
lods
loopne
push
xorl
dec
std
mov
xor
enter
cmp
lahf
lret
arpl
loope
lods
aam
inc
icebp
stc
sub
andl
cmp
insl
sbb
mov
xor
out
adc
cmpsl
push
call
or
icebp
adc
or
pop
int
sbb
xor
add
pop
popf
mov
xor
push
adc
fldenv
push
push
aad
data16
ficompl
fwait
and
mov
outsb
sahf
into
icebp
mov
mov
imul
fisttps
jns
xor
fldt
imul
jno
pop
adc
add
scas
xchg
sbb
rclb
jb
rorb
inc
test
mov
mov
mov
mov
std
and
sbb
loope
jne
lcall
cmc
inc
ljmp
test
cmp
push
dec
pop
divl
subl
ja
sub
jo
cvttps2pi
fwait
mov
out
loope
decl
pop
loope
lock
inc
pop
imul
mov
in
and
dec
mov
xlat
dec
add
pop
sbb
repz
mov
add
xlat
popf
cmp
push
ss
sbb
inc
jg
add
sahf
shl
mov
repnz
dec
clc
repz
dec
insb
sub
cmp
dec
ss
fsubr
fs
icebp
pop
lahf
inc
and
push
dec
mov
lea
jmp
or
dec
inc
aaa
stc
adc
fisubrl
dec
ret
xchg
ss
dec
cmpsl
fs
inc
pop
add
pop
dec
lea
jno
mov
loopne
repz
mov
mov
cmp
inc
shrl
pop
les
push
adc
insb
cmp
dec
adc
fimuls
hlt
jbe
in
jb
mov
jne
mov
xor
out
ror
xlat
add
loope
mov
xor
fwait
mov
mov
js
repnz
mov
xchg
gs
jb
mov
pop
addl
inc
xchg
xor
pushf
push
sti
test
pop
mov
jecxz
js
sete
into
adc
mov
add
loopne
insl
jno
inc
into
mov
sbb
cmc
jle,pt
jnp
mov
repnz
or
xchg
notl
testl
test
xchg
or
in
test
push
xadd
in
loopne
adc
adc
xor
stc
insb
xlat
std
sbb
jge
popa
in
jae
cmp
jo
xor
mov
cmpsb
outsb
lods
cmpsl
pop
movsb
or
sbb
lods
pop
movsl
insl
pushf
lcall
push
cmp
jns
lcall
fdivp
fisubrl
fisubrl
push
jnp
fimuls
ret
aas
push
je
or
push
push
repnz
testb
scas
test
cmovno
xlat
or
cwtl
in
add
stos
mov
or
jecxz
gs
popa
sti
xor
mov
ja
test
xor
xor
adc
mov
scas
loopne
jns
xor
mov
pop
daa
addr16
add
xor
and
popa
jp
xchg
mov
rcrl
testb
lods
shl
loope
xor
lcall
daa
jo
mov
negb
adc
ljmp
mov
xor
addb
mov
xor
fwait
jne
xchg
mov
or
adc
mov
mov
sub
add
aaa
pop
push
loope
and
cmp
jge
push
cld
pop
mov
loope
insl
outsl
popa
and
aas
fwait
inc
out
lahf
xchg
mul
xchg
inc
cmpsb
lcall
in
dec
popa
jae
inc
jl
ja
mov
xor
js
or
loop
jb
out
sti
jl
jbe
leave
vmwrite
arpl
add
and
loop
xor
addr16
lahf
lods
push
arpl
test
jp
scas
sbb
fbld
jg
sub
movsl
std
stos
in
xor
int3
adc
xchg
cmp
dec
pushf
jns
out
pop
mov
sbb
fimull
fdivl
insb
das
and
scas
clc
outsb
pop
or
mov
imul
cmp
xchg
dec
shl
and
pop
and
mov
jbe
repnz
in
fmuls
rorb
out
and
inc
sub
jg
xor
cmp
pop
cmp
jg
dec
nop
lcall
enter
in
and
push
leave
mov
mov
adc
sbb
mov
sbb
leave
sbb
pop
xorl
ds
fdivrl
int
jl
outsl
dec
aas
adc
jb
filds
pop
fistps
dec
sbb
pop
sbb
adc
jbe
andl
icebp
mov
roll
insb
std
in
cld
adc
insl
decl
push
mov
orl
ret
cmp
in
pop
imul
mov
push
xchg
pop
adc
xor
leave
ja
jecxz,pn
and
inc
pop
xchg
xchg
ss
sbb
jne
sbb
shrb
cmp
lds
dec
lret
stc
shrb
orb
sbb
jno
mov
fstpt
pop
mov
dec
rcrb
sbb
adc
mov
loop
in
sahf
sub
arpl
loopne
jne
jo
incb
cmp
pop
out
rcrl
sbb
xlat
andl
pop
mov
xor
pop
scas
mov
ds
mov
mov
iret
xchg
mov
cmp
test
push
in
mov
mov
inc
xor
and
fdivl
sub
cmp
dec
mov
adc
dec
call
pusha
lds
cmp
push
cmc
repnz
mov
fstp
mov
sahf
imull
or
mov
adc
cld
lret
ret
ja
push
enter
and
sub
xor
idivb
repz
inc
cmp
into
das
mov
cmp
out
or
shlb
rol
xor
lahf
xchg
xor
cli
pushf
in
xchg
xor
ja
inc
push
gs
out
fsub
pop
xchg
push
dec
vmwrite
push
inc
testl
lock
pop
lahf
sbb
sbb
mov
inc
shl
jl
push
aad
hlt
lods
mov
iret
pop
ret
push
push
sbb
dec
xlat
lea
lahf
in
or
mov
fadd
or
adc
fcoml
hlt
bound
jg
or
add
sahf
pushl
sti
jb
xchg
sbb
xchg
ror
lahf
mov
mov
sbb
cmp
mov
jbe
sub
out
jns
pop
mov
lods
xor
repz
in
lcall
jge
and
inc
inc
scas
cmp
pop
or
scas
hlt
push
js
ret
insl
fwait
push
xchg
mov
cmp
xchg
adc
add
in
ss
xchg
push
test
aaa
sub
xor
sahf
jmp
sub
repnz
sbb
or
jo
add
or
lahf
daa
mul
ds
adc
shll
roll
in
inc
adc
mov
xchg
pop
sti
int3
push
mov
jge
jl
jnp
pop
push
adc
sub
sti
cmp
insb
cmpsb
sbb
sarb
cld
or
hlt
sbb
ja
and
pop
jp
or
or
jo
test
cli
test
orb
ret
loope
pushf
and
adc
dec
loop
mov
pop
movsb
xor
loope
stos
js
xchg
les
xchg
stos
lea
add
outsb
jmp
mov
jl
xor
mov
mov
and
mov
jne
les
xchg
inc
xchg
add
addb
repnz
cmp
adc
or
xor
lds
pop
lock
cmp
xchg
outsb
cmp
cld
int
xlat
jno
inc
dec
into
popf
inc
sbb
xchg
sub
std
jecxz
mov
lret
fsubs
movsb
push
push
jle
cmp
jmp
mov
dec
out
ret
not
mov
mov
pop
xor
bound
pop
inc
jmp
daa
jmp
cmp
mov
dec
int
test
rolb
imul
jne
in
fstl
mov
push
sbb
fistpll
out
add
inc
mov
loopne
push
in
sti
or
jp
push
gs
lahf
test
or
dec
cltd
mov
test
and
cld
into
loop
test
add
iret
cld
das
fs
insl
in
lods
fwait
push
ret
stc
xlat
mov
pop
fcmovnu
sbb
lds
or
sbb
testw
fbstp
in
test
pop
add
mov
and
je
and
ret
cmpsb
enter
push
mov
fstpt
clc
adc
pop
dec
push
adc
in
push
and
pop
fldl
imul
add
jmp
push
xor
sahf
xchg
push
mov
fdivrl
lahf
add
lcall
das
jl
cltd
mul
add
push
fnstcw
mov
dec
mov
push
or
pop
pushf
push
stos
lods
xchg
ror
mov
lret
cwtl
fisubrl
pusha
mov
xchg
rorl
jns
jl
and
xchg
or
push
jnp
cmpsb
dec
add
push
mov
test
mov
mov
rcr
pushf
inc
in
arpl
in
lds
jo
cmp
cmp
pushf
jno
ret
enter
xor
loope
iret
mulb
les
jnp
ret
and
out
lods
xchg
enter
arpl
mov
loopne,pn
daa
mov
mov
cmpsl
xorb
loope
lods
and
jle
inc
add
and
mov
mov
jmp
push
push
mov
das
or
sub
iret
imul
push
ja
cmp
loop
jmp
ret
je
cmp
aad
fsts
test
pusha
add
adc
jb
xor
dec
sub
xchg
inc
adc
lods
mov
sahf
or
adc
stos
rorl
adc
fs
cmp
mov
push
mov
xor
test
hlt
into
and
mov
mov
push
jns
cltd
xlat
push
pop
fnstenv
mov
or
pushf
jno
pop
rcll
out
sub
mov
pop
adc
push
jge
sahf
test
mov
out
mov
int
lret
dec
pop
add
push
jo
aaa
xchg
scas
movsl
push
fldl
or
and
dec
push
mov
ffree
lea
fildl
cmp
in
aas
sbb
jne
mov
push
inc
or
imul
sub
js
mov
mov
sub
repnz
ret
mov
or
arpl
scas
stos
mov
insb
test
ffree
dec
cmp
cli
clc
out
xchg
sub
cmp
pop
pushf
push
inc
iret
inc
fs
arpl
gs
push
sti
and
jp
ds
xchg
clc
in
lds
xor
test
ljmp
lods
out
test
and
loop
push
push
and
and
jl
jmp
das
xor
push
adc
sbb
mov
mov
cltd
sbb
mov
cmp
lret
xchg
inc
mov
jmp
lea
movsl
enter
out
icebp
sbb
cmp
xsha1
cmpsb
mov
fidivl
xchg
popf
pop
aaa
dec
dec
or
leave
lret
push
daa
cmc
adc
or
in
sub
jne
ret
hlt
inc
mov
es
and
mov
xor
bound
aam
test
aaa
xchg
mov
inc
xor
out
aam
ja
ljmp
hlt
fsub
cli
or
xor
loope
adc
pop
lods
or
xor
int
les
jge
pop
ss
sbb
scas
add
pop
in
outsb
repnz
sbbb
fcomps
inc
jecxz
int
xor
push
mov
imul
stos
cmp
or
das
std
aam
mov
fprem1
in
ds
and
inc
xor
pop
jp
ret
insl
cmp
das
das
fmuls
and
push
xorl
setle
sbb
jg
pushw
and
sbb
adc
test
cmpl
imul
xor
frstor
sub
imul
dec
add
arpl
inc
les
add
in
aaa
lcall
jae
cmp
out
bound
push
fs
push
lret
fs
fcoms
pop
sbb
xchg
cli
inc
xor
or
leave
and
in
xchg
mov
or
jge
pop
aad
jns
xor
imul
xchg
xchg
add
inc
jnp
push
and
mov
jl
mov
or
insb
daa
hlt
lods
mov
xchg
cmp
push
nop
loope
push
push
and
or
lret
and
mov
insl
sbb
xor
jns
mov
pop
mov
mov
xor
mov
or
inc
outsl
ret
mov
cmp
mov
data16
jmp
cmp
fwait
adc
mov
sbb
fsub
cld
adc
push
fwait
mov
mov
clc
sub
imul
jbe
mov
mov
lret
jp
icebp
or
lock
adc
xchg
jmp
ds
xor
and
aad
bound
aad
inc
pop
movsb
stos
das
mov
jmp
xchg
cmp
xchg
mov
sbb
pop
out
mov
xor
outsb
inc
leave
cltd
lcall
sbb
mov
insb
test
sti
mov
sub
inc
mov
lcall
movsb
push
imul
fs
outsb
int3
stos
stos
sub
repz
pop
inc
cli
sub
gs
xor
push
xchg
cmp
lock
sub
clc
icebp
fidivs
dec
cld
mov
mov
jge
sarl
imul
mov
and
sbb
mov
pop
xchg
cmpsb
pop
std
lea
clc
pop
popf
daa
push
negl
js
inc
cltd
or
lds
and
bsr
pusha
jecxz
pop
dec
je
pop
inc
cmp
xchg
fs
dec
fwait
jmp
mov
or
and
xlat
subb
xchg
add
aad
jno
lds
and
add
into
add
jp
mov
aas
out
pop
ret
popa
cmp
jl
dec
cld
imul
cwtl
rorb
pushl
xchg
push
insb
pop
sub
test
adc
add
mov
fdivrl
ja
jns
jmp
mov
fadds
pop
and
sti
inc
sub
or
shlb
mov
outsl
xchg
out
cmp
jns
repz
push
lods
leave
add
or
and
aam
pusha
and
enter
adc
imul
cmp
xchg
xchg
ret
sbb
incb
push
xchg
dec
push
mov
in
aas
push
hlt
out
jne
mov
rol
push
mov
sbb
add
inc
mov
je
test
mov
lods
add
or
push
pop
push
xchg
js
push
cmp
jp
out
cmp
add
loopne
and
mov
daa
test
adc
dec
divl
or
sbb
xchg
sti
mov
daa
sub
movsb
push
jmp
sub
icebp
push
ss
xor
add
inc
pop
mov
movsb
inc
aam
das
mov
orb
push
cltd
out
outsb
jmp
mov
xor
out
mov
imul
lods
mov
or
ss
gs
test
or
mov
repz
and
mov
test
loop
fdivrs
and
rorb
adc
adc
fstpt
jp
icebp
movsl
insb
mov
jle
addr16
decb
sub
cmp
cmp
mov
test
jg
mov
mov
add
pop
outsl
faddp
rcl
push
aad
mov
mov
test
and
and
pop
jle
sbb
mov
mov
adc
add
adc
imul
loop
imul
aas
jl
test
ds
xchg
mov
insl
pushf
push
call
mov
dec
loopne
inc
adc
dec
jmp
push
pop
mov
stos
and
adc
out
inc
and
hlt
mov
xor
dec
dec
and
hlt
aam
call
cs
movsb
aaa
push
sub
mov
aam
mov
int3
mov
js
pop
lds
lods
movsb
dec
icebp
das
in
mov
pushf
or
mov
nop
lcall
lcall
adc
add
jb
into
cltd
shlb
mov
sub
test
aas
mov
fs
mov
xchg
mov
and
std
dec
mov
into
cmc
lcall
fistl
inc
xchg
jg
sub
dec
bound
push
enter
xor
jp
adc
mov
cli
fisttps
icebp
insl
out
jmp
jge
cmp
movsb
dec
out
ljmp
je
sahf
sbb
inc
insl
mov
popa
les
mov
mov
jns
lret
pop
sarb
mov
sub
xlat
push
xchg
stos
and
mov
js
xchg
cmp
cs
mov
insl
jg
inc
and
or
xor
xchg
addr16
cltd
adc
adc
inc
push
dec
icebp
mov
cwtl
adc
push
subb
pop
sub
test
mov
sbb
fildll
pop
loopne
decl
add
fldenv
and
popf
cmpsb
decb
into
in
pop
add
mov
sbb
mov
xchg
push
dec
sbb
xor
pop
cmp
shlb
lea
add
or
pop
aam
adc
aad
sahf
pop
jnp
inc
cmp
pop
int
or
xor
andb
dec
in
xorl
xor
jbe
sub
mov
int
xchg
pop
jecxz
jns
dec
leave
in
or
test
out
adc
mov
insl
sub
push
out
fnstsw
mov
xlat
mov
mov
dec
mov
mov
lods
and
stos
lea
mov
in
notb
lds
repnz
lret
add
iret
sub
adc
fildll
inc
fildll
jg
loope
push
jmp
add
in
pop
or
aas
das
out
fstpl
push
sarl
inc
insl
push
int3
cmp
mov
hlt
xor
stc
sub
mov
cmp
pop
xchg
cmp
mov
mov
pop
outsl
mov
fdivrl
pop
loope
inc
cwtl
outsl
int
sub
add
daa
sarl
pop
jmp
cwtl
bound
inc
int3
fmuls
mov
std
icebp
cs
mov
outsb
or
stc
and
mov
aam
ret
sbb
xor
dec
in
mov
mov
push
cli
cwtl
jmp
leave
addr16
xchg
insb
sub
push
icebp
push
cli
int
ja
int
sub
jbe
add
pop
popa
xor
rorb
out
inc
mov
adc
pop
xchg
inc
aad
adc
shrb
test
xchg
popa
sbb
popa
or
add
xlat
lds
loop
pop
inc
iret
aas
pop
inc
add
mov
mov
outsl
adcl
jmp
inc
push
mov
sbb
dec
dec
add
jle
call
neg
lods
leave
in
mov
dec
push
daa
jg
movsb
xor
fmull
sub
cmpsl
jmp
fyl2x
sti
std
cwtl
out
cwtl
pop
insl
and
cmp
push
jmp
jno
lods
sbb
dec
sub
inc
adc
jb
popa
jecxz
push
fnstenv
je
jle
bound
cs
pusha
or
cltd
pop
push
inc
jno
pop
loope
pop
pop
fidivrl
push
pop
and
dec
jo
orb
pop
mulb
cmp
mov
jecxz
mov
shll
adc
xchg
test
jbe
movsl
mov
push
es
push
dec
les
inc
pop
add
addr16
cmp
insb
and
ja
xchg
sbb
call
adc
jnp
test
lods
xlat
shll
jmp
fisttpl
adc
jb
insb
shrb
pusha
in
dec
pop
cmp
popf
sbbl
stos
bound
jae
cmp
mov
pop
jb
cmc
pop
pop
jecxz
ret
je
inc
push
jnp
es
mov
test
inc
xchg
mov
push
add
out
pop
sti
test
cmp
sub
push
jmp
lods
mov
stc
mov
nop
cmp
lahf
sub
fcoml
jmp
int
pop
cmc
mov
xor
xchg
loop
xlat
aam
fcmovu
rcrl
and
addr16
add
sarb
mov
dec
cmp
shrb
pop
loop
xor
fsubr
jno
dec
mov
inc
pop
mov
adc
into
fisubl
loope
xor
mov
xchg
and
lahf
cs
adc
pop
fcompl
cld
ss
mov
movsl
addb
sahf
push
int
lret
stos
sbb
gs
add
xor
push
fistl
iret
mov
cli
inc
dec
test
dec
outsb
shll
shll
es
test
jg
pushf
out
test
inc
nop
pusha
xor
lods
push
popa
imul
mov
mov
test
jne
cmpsl
push
stc
pop
std
into
sti
shll
push
pop
or
aaa
mov
sub
add
insb
xor
push
mov
cwtl
arpl
gs
pop
push
popf
or
xor
fs
sub
mov
divl
aad
es
inc
mov
or
push
cmpsl
mov
in
adc
cmp
jecxz
je
add
xor
jb
or
ja
cld
int
in
push
clc
jno
stc
mov
pmaxsw
push
lret
sbb
inc
dec
sub
or
inc
loope
int3
mov
xor
inc
xchg
jbe
pop
lcall
sub
xchg
dec
loope
mov
faddl
mov
jg
faddp
leave
fistpl
loopne
mov
lds
add
mov
inc
xchg
ja
push
fidivrs
xor
sbb
mov
xlat
loop
push
mov
xor
imul
mov
hlt
cmp
adcb
das
push
add
cmp
stos
in
dec
das
jmp
enter
pop
jno
mov
cli
lahf
mov
push
outsl
xor
jl
cmp
jl
mov
sub
fs
mov
popf
mov
hlt
rolb
stos
pop
cmp
sub
test
jle,pn
stos
hlt
inc
cmpsl
cmp
mov
hlt
xor
pushf
rorb
cs
pop
mov
rorb
pop
cmp
mov
jg
dec
mov
inc
icebp
jb
sti
decb
cmpsb
pop
xor
xor
ja
mov
pop
xchg
inc
push
lahf
rcl
sbb
xchg
arpl
sahf
and
jmp
sbb
mov
imul
shll
xchg
add
fisttpl
fimuls
adc
sbb
in
gs
or
jo
fwait
iret
and
or
addr16
fsubrl
push
inc
clc
cli
sahf
adc
stos
inc
jo
xor
mov
xor
ds
call
mov
jnp
xor
mov
lods
aaa
push
into
jb
xor
jbe
shll
fsubr
subb
scas
inc
mov
in
dec
in
mov
cmp
incl
mov
xchg
ficompl
imul
dec
int
sub
adc
lcall
mov
sub
scas
xchg
lds
cmp
rol
das
jmp
lods
mov
mov
xor
dec
test
stc
movsl
cltd
iret
dec
lods
dec
mov
into
fnstsw
and
daa
aaa
jns
loop
jbe
xchg
fwait
jno
ret
sti
test
mov
roll
daa
lea
lock
shlb
sar
pop
sbb
adcb
mov
push
addr16
inc
adc
and
sbbb
or
xor
test
fisubl
lds
mov
shll
stc
mov
popl
cld
gs
ret
cltd
push
fs
lods
dec
push
adc
fst
push
stos
pop
mov
fwait
int
and
inc
dec
stc
jge
sub
dec
sbb
cmc
mov
sti
cmp
and
mov
shrl
and
xchg
pop
pop
js
pop
jb
adc
mov
cmpsl
xchg
mov
pop
dec
mov
xchg
je
orb
pop
or
jo
mov
rcrb
hlt
lret
adc
inc
andl
insb
outsl
mov
mov
mov
lock
add
sub
cltd
addr16
std
int3
jle
icebp
xor
out
orl
xchg
jmp
adc
out
dec
orl
cmp
xor
pushf
loope
adc
and
pop
out
outsl
das
insl
jnp
push
rorb
dec
xchg
cld
cmp
ds
jno
call
addl
inc
mov
adc
xor
out
push
pop
jecxz
les
mov
mov
mov
jge
and
imul
jle,pt
xchg
ss
jl
inc
stos
mov
mov
jge
fstpl
mov
sub
stc
or
fcomp
mov
dec
inc
mov
fstp
adc
adcb
fmuls
fstps
cmp
gs
out
mov
push
pushf
mov
stc
mov
adc
mov
addr16
es
stos
mov
stc
pop
sbb
out
sub
jmp
cmc
mov
rolb
jle
in
mov
add
rorl
rcl
data16
push
test
cs
shr
push
lret
sub
jp
cmp
stos
sub
cmp
lods
mov
xchg
mov
imul
or
xchg
mov
hlt
pop
daa
adc
icebp
inc
or
or
inc
lahf
test
subb
add
sbb
leave
xchg
stos
sbb
adc
and
add
fwait
lods
mov
pop
arpl
push
mov
testl
loopne
sbb
push
xor
add
jge
sub
add
sbb
orl
daa
or
dec
dec
inc
sub
jle
push
lds
adc
adc
add
test
adc
xchg
add
jle
lock
jecxz
xor
inc
inc
sbb
adc
inc
pop
mov
std
mov
adc
mov
pop
xchg
dec
mov
div
bound
fidivl
outsb
mov
repnz
xor
sub
xchg
imul
rcrb
out
shl
icebp
mov
mov
lods
or
out
adc
pmaxub
mov
cwtl
xor
inc
test
mov
out
out
inc
xor
jle,pn
pop
imul
clc
push
sbb
or
test
sbb
movsl
inc
or
dec
pop
mov
push
test
sti
mov
and
cmp
movsb
jbe
push
inc
cmpsl
fwait
cmp
test
fsts
and
das
lods
jp
push
in
or
fiadds
les
ret
dec
dec
bnd
call
sti
lods
pop
fmuls
je
ljmp
ret
clc
xchg
jp
or
mov
aad
in
sbb
pop
pushf
adc
mov
repnz
mov
and
in
jne
push
aaa
push
ja
lea
popf
cmp
mov
mov
daa
enter
dec
jns
sahf
push
scas
ret
mov
enter
lea
dec
add
dec
pop
sbb
sahf
loope
int
sbb
pop
push
imul
cmp
mov
inc
mov
data16
loope
lea
mov
push
ret
ficoms
jnp
mov
mov
fsubrl
jo
cli
loopne
in
mov
jne
rol
lret
mov
or
xlat
mov
rclb
or
int
adc
jecxz
lret
dec
dec
pop
pushf
sbb
sbb
adcb
sahf
mov
pusha
mov
pop
imul
cmp
test
lock
nop
inc
enter
dec
enter
shr
aam
fucomip
or
adc
dec
stos
sbb
mov
xor
inc
stos
cmp
add
leave
jno
cmp
test
sbb
dec
or
and
mov
cmp
int3
addr16
ljmp
xchg
in
data16
cld
add
icebp
jle
mov
push
ret
push
and
cmp
cmp
lahf
sbb
decl
adc
sub
shll
std
jns
xlat
and
mov
and
jo
dec
pop
scas
xchg
dec
push
cmpsl
jo
and
leave
es
push
mov
aas
fdiv
add
mov
cmp
int
fwait
adc
push
add
fst
into
xor
jmp
mov
mov
xchg
pop
lret
ljmp
sub
lcall
jge
jb
cmpb
jb
xchg
fdivl
loope
add
cli
loopne
std
sub
int3
add
popa
mov
fcmovnu
push
adc
arpl
xor
lock
shrl
arpl
loopne
or
adc
inc
push
scas
pop
dec
ret
sarl
out
imulb
cmp
jb
push
mov
xchg
pushf
inc
pop
into
sub
stos
and
xchg
mov
sub
aas
std
jmp
gs
movzbl
movsb
enter
ljmp
sbb
fdivr
lret
mov
in
loop
and
icebp
jp
adc
scas
xorb
in
jmp
in
add
lahf
or
xchg
arpl
out
dec
adc
je
sbb
jge
test
inc
mov
sub
cld
pop
mov
jp
loop
aam
out
xchg
stos
sbb
icebp
scas
pop
mov
popf
sub
dec
cs
cld
inc
daa
jnp
imul
and
mov
mov
roll
fcmove
push
sahf
add
pop
mov
ds
mov
jb
dec
or
jmp
pop
rolb
out
mov
lsl
movsl
mov
test
enter
adc
dec
stos
repz
andl
psrlw
mov
adc
push
push
outsb
mov
pop
cltd
sub
push
sub
jp
in
imul
mov
fwait
xor
sbb
iret
pop
cmp
int3
test
stc
loopne
adc
inc
orb
xchg
sub
inc
loopne
sub
pusha
stc
fildll
add
divl
les
fisttpl
or
cs
pop
cli
rorl
fdivs
data16
adc
inc
pop
dec
push
lock
cli
or
popf
cli
inc
pusha
push
inc
enter
or
cmpsl
arpl
or
inc
add
insl
mov
add
sbb
cmp
test
sbb
jge
loop
pop
stos
pop
lcall
dec
mov
out
mov
std
popf
js
std
lods
pop
push
cmp
push
rolb
push
xchg
icebp
mov
pushf
arpl
ja
rolb
jno
push
addr16
call
imull
xchg
imul
or
call
testb
xchg
mov
js
test
jo
imul
mov
or
mov
pop
jp
in
mov
pop
inc
lret
mov
mov
push
out
adc
sub
or
lods
push
mov
cltd
xchg
fdivp
jne
dec
out
stos
pop
jle
mov
cmp
pop
rcl
call
sbb
in
cs
in
scas
stos
icebp
lds
or
mov
in
cmc
and
push
adc
pop
lret
dec
adc
fisttpl
mov
mov
in
mov
add
movaps
jae
xchg
or
cs
or
lods
push
sub
loop
sbb
add
pop
fucomi
and
adc
mov
push
jge
pop
push
repnz
imul
loopne
sbb
rcll
push
call
repnz
or
insb
sahf
xor
scas
loope
mov
outsl
ja
shl
and
sarl
jno
push
pushf
pop
cmp
pop
adc
pop
jns
adc
call
sub
inc
hlt
mov
xor
xlat
fcmovb
out
xchg
xor
fwait
xchg
inc
pop
arpl
or
sti
add
scas
jg
cmp
xchg
sub
test
std
push
mov
cmp
in
jle
xor
xor
and
outsl
mov
mov
sub
dec
xor
and
pop
dec
je
mov
jae
lea
or
jmp
pop
cwtl
lcall
xchg
pop
dec
call
rclb
dec
jne
mov
adc
dec
cld
xchg
jae
stos
mov
lret
outsb
inc
fmull
or
push
sbb
fcompl
cmpsl
lea
inc
mov
sahf
sub
dec
mov
test
dec
dec
jo
inc
repz
test
out
out
ds
cwtl
scas
adc
lods
inc
fidivl
mov
mov
shrb
cmp
jle
pusha
lea
mov
rclb
in
pop
jmp
dec
xchg
std
xchg
aaa
pop
xlat
mov
inc
test
push
jp,pt
add
mov
jmp
dec
movsl
mov
sub
mov
xlat
call
push
mov
and
lcall
sub
enter
rorl
xchg
pop
push
mov
fstps
aaa
jne
mov
xor
mov
fistpl
xchg
arpl
fimuls
mov
pushl
outsb
sub
inc
mul
mov
push
mov
aam
xor
mov
ds
into
pop
or
repnz
andb
cwtl
mov
pop
ret
addr16
xorl
xchg
pop
sub
jbe
pop
fsubs
push
shlb
inc
sbb
int
dec
pop
and
scas
sbb
and
addl
push
sub
sbb
xchg
ret
push
pop
sahf
mov
or
movsl
push
jno
sbb
push
ret
or
outsl
jns
rolb
popf
ljmp
inc
jg
rorl
sub
mov
mov
cmp
sub
mov
insb
dec
pop
mov
add
lock
dec
popf
push
das
test
mov
dec
pushf
mov
xor
orl
or
dec
xchg
xchg
test
lods
enter
adc
roll
mov
cmp
mov
cmp
mov
out
xor
xor
adc
pop
push
xchg
mov
rolb
fs
jnp
xor
aaa
mov
xor
negb
dec
jle
sbb
js
push
and
push
std
cmp
sub
enter
fcoms
shrb
and
movsl
test
push
dec
add
out
inc
mov
dec
mov
mov
inc
mov
adc
xchg
sbb
adc
xlat
xor
jge
xor
mov
mov
mov
sbb
xchg
mov
dec
mov
lods
dec
inc
leave
jbe
in
insl
and
mov
push
and
sahf
sar
bound
xor
and
mov
fs
mov
fidivrl
shrl
pusha
xlat
aas
adc
std
rclb
mov
rep
mov
stos
push
jg
pop
jecxz
stc
scas
mov
js
repz
jb
push
or
orl
mov
pop
adc
enter
mov
adc
add
push
out
xor
mov
inc
insl
cmp
jne
lds
out
mov
cmp
loop
cld
out
jmp
adc
fldenv
and
jle
mov
mov
cltd
push
mov
mov
out
inc
xor
push
xchg
jbe
shlb
mov
dec
jg
lods
adc
add
fidivl
ds
sub
inc
sbb
cmp
insb
loope
push
mov
mov
addl
xchg
jl
mov
cmp
xchg
test
into
ret
and
inc
cmp
dec
shll
add
fwait
jae
pop
popa
xchg
mov
inc
xchg
shl
fdiv
jle
mov
xor
xchg
cmp
push
xchg
inc
mov
jp
and
icebp
adc
cmp
xor
popa
adc
mov
mov
inc
sub
mov
xor
inc
mov
adc
movsl
scas
xchg
arpl
lret
push
lock
insl
xchg
rorl
ret
repz
add
test
call
add
outsb
lahf
push
icebp
ret
movsl
fiaddl
scas
fstp
scas
xchg
daa
pop
dec
addr16
insb
sub
stos
adc
pop
out
ret
dec
in
add
fiaddl
mov
or
xor
lret
je
push
or
push
movsb
jno
mov
dec
pop
jbe
jecxz
js
out
adc
cmp
sahf
jne
mov
fwait
aaa
dec
mov
stos
pop
in
int3
fs
in
pop
scas
push
int
xchg
add
xchg
mov
inc
mov
push
repnz
cli
jno
aad
mov
cli
ret
fiadds
mov
jecxz
adc
stos
mov
pusha
sbb
inc
jmp
mov
cmp
adc
and
dec
and
mov
mov
add
mov
addr16
adc
neg
xchg
bound
std
jne
mull
push
popf
in
and
clc
xor
mov
xchg
pop
jno
jg
push
stc
xor
in
sub
push
add
xor
leave
inc
pop
out
add
ds
dec
stc
stos
insb
fisubs
jnp
mov
mov
mov
ja
mov
mov
or
stc
cmc
repz
dec
imul
dec
mov
jp
xor
and
adc
hlt
gs
sbbb
daa
cltd
lret
out
pop
pop
mov
jnp
stc
mov
divl
mov
fsubl
int
mov
xlat
jecxz
or
sub
xchg
stc
in
loop
sub
jb
pop
xchg
cli
sbbl
cs
add
fdivr
ret
sti
stos
inc
arpl
lret
mov
aas
add
inc
fsubs
pop
jae
xlat
out
scas
out
pop
in
sub
dec
inc
subb
jmp
not
iret
xchg
adc
pop
or
aaa
pop
mov
adc
inc
cli
lock
lea
pop
xchg
call
test
mov
mov
sub
into
jp
pop
jo
movsb
sbb
stos
xor
in
lahf
lret
incl
shl
xchg
adc
daa
inc
test
loop
mov
mov
loop
in
adc
lahf
pop
mov
fiaddl
cmp
pop
neg
push
xchg
adc
push
and
movsl
jo
mov
test
cs
add
iret
sahf
mov
lods
cli
inc
pushf
or
adc
cmpsl
push
repnz
xor
roll
add
or
popf
gs
jle
jo
lods
mov
jecxz
add
dec
xchg
jge
lret
or
add
lret
clc
mov
xchg
addr16
mov
fadd
fistps
adc
outsb
cmp
dec
push
rorl
cmpsb
imul
push
scas
xor
cli
nop
xor
aaa
xor
inc
test
pop
mov
sub
fcoms
les
stc
add
mov
orb
fstpt
adc
jmp
jno
push
inc
and
es
jg
je
mov
sti
sbb
xor
out
cltd
mov
jo
xchg
mov
jne
negb
xor
mov
rorl
negb
mov
addr16
sahf
test
sbb
inc
pop
out
daa
call
mov
loop
mov
sub
xor
test
mov
push
jbe
out
push
divl
dec
or
xchg
pop
lret
sub
loop
popa
sbb
aam
push
push
add
mov
stc
lock
icebp
mov
jns
cmp
stc
pop
shll
ds
adc
out
loopne
orb
mov
mov
or
shll
fidivrl
mov
xchg
jo
lret
mov
fdivs
or
jnp
push
jnp
inc
push
loop
lds
sbb
inc
sbb
add
arpl
push
jl
inc
push
inc
push
shlb
or
xchg
stos
je
into
sub
sbb
xchg
leave
ret
or
pushf
mov
sub
scas
cmp
push
or
dec
and
test
js
lret
mov
or
xchg
push
les
inc
test
psrad
jmp
aad
test
xlat
cmpsb
arpl
add
iret
adc
sbb
or
data16
mov
cltd
mov
stos
fistpll
and
mov
cld
adc
adc
xchg
cmp
mov
pop
ds
pushf
jmp
test
jne
mov
xchg
add
es
outsb
inc
inc
xchg
bnd
rcll
lds
and
data16
fcomip
fsubs
ja
ret
subb
adc
out
xchg
addb
inc
movsb
sbb
cmp
adc
mov
mov
jae
xor
jae
dec
sahf
fldl
xchg
roll
icebp
scas
imul
push
or
jnp
xchg
cmp
cmp
mov
movb
mov
repnz
mov
mov
repz
adc
loop
inc
xor
mov
inc
pushf
aam
mov
ficompl
andl
cs
data16
outsb
cmp
fldl
fmull
iret
imul
xlat
lahf
cmp
add
mov
adc
repnz
stos
adcl
mov
pop
pusha
jle
dec
sbb
mov
enter
inc
frstor
cmp
lcall
and
push
cmp
and
dec
fisubl
mov
mov
pop
in
scas
cmp
std
inc
imul
sub
in
jnp
inc
lea
inc
mov
jo
xor
repnz
insl
pop
inc
incb
dec
inc
mov
mov
insb
out
pop
gs
pop
cwtl
lds
mov
sub
subl
mov
pminsw
test
jle
mov
sbb
lahf
add
movsl
stc
pop
dec
sahf
jno
scas
jnp
dec
ljmp
mov
shll
jo
or
in
imul
jle
adc
xlat
rclb
aam
outsl
bound
or
lret
xchg
inc
mov
in
jp
sub
xchg
sbb
push
adc
push
mov
decl
add
add
mov
xchg
mov
sti
adc
insb
mov
cmp
pop
adc
scas
shlb
les
mov
xor
imul
pop
jmp
rorl
adcb
aaa
fdivr
pmaxsw
dec
mov
inc
lahf
ss
ljmp
cmp
in
cmp
adc
and
pop
dec
out
cmp
jecxz
xor
inc
add
das
inc
push
les
cld
or
scas
pusha
or
push
gs
mov
rorl
xchg
and
inc
in
inc
addr16
out
add
aas
fs
push
mov
aam
sbb
pop
sbb
jnp
xorl
leave
adc
jb
and
aas
push
out
scas
jecxz
cmp
lret
cmpl
sti
rorl
xchg
fimull
xchg
lods
call
lahf
imul
testb
cltd
mul
sarl
or
repnz
and
fmuls
mov
pusha
aad
int
out
jo
stos
or
or
xchg
dec
lahf
movsb
xor
and
jo
in
cwtl
and
inc
scas
jge
cmp
or
push
dec
or
jle
fucom
ds
lcall
shlb
fimull
pop
adc
mov
mov
fs
sbb
mov
push
out
xchg
xor
cmpsb
push
in
dec
imul
mov
cld
jecxz
lods
fstpl
scas
pop
sbb
xchg
jae
jmp
xor
pushf
leave
inc
jbe
into
mov
mov
sub
mov
sbb
sub
mov
enter
sub
nop
xlat
gs
sub
ss
adc
pop
mull
out
jns
push
xor
push
aad
xor
push
jae
sbb
loopne
sub
xchg
lods
mov
dec
mov
fcoms
cli
cmp
insb
push
jo
pop
aad
mov
cmpsb
mov
fiadds
jge
das
mov
mov
subps
pop
testb
enter
dec
push
sbb
mov
mov
int3
test
mov
xchg
inc
dec
jg
sbb
fs
imul
stos
and
imul
rorl
mov
xchg
fucom
sbb
and
or
out
mov
mov
mov
mov
cwtl
test
xchg
das
cmc
jl
mov
or
or
add
lret
pop
fwait
xchg
adc
xor
jge
pushf
stos
jmp
jae
dec
int
fistps
les
repnz
sub
xchg
cmp
lods
lods
rol
in
mov
xor
fldcw
mov
aas
sahf
addr16
incl
enter
addr16
adc
push
insb
cli
fdiv
inc
xrelease
scas
outsb
inc
fiaddl
jg
inc
out
mov
mov
lods
ficoml
pop
into
xchg
or
cmp
stos
test
dec
in
jne
stc
xchg
dec
shll
and
xchg
and
mov
inc
mov
ret
mov
mov
in
add
lock
cmpsb
cld
pop
pushf
fwait
out
movsl
aad
repnz
pop
lret
push
pusha
xorb
dec
mov
mov
shrb
adc
in
andb
es
shr
mov
jnp
sbb
cs
inc
das
sbb
xchg
cmpsl
push
std
dec
push
sbb
fstpl
dec
sbb
cld
cmpsl
ret
adc
je
inc
fadd
jno
leave
aaa
jle
repnz
mov
pushf
cmp
mov
cmp
cmpsl
mov
push
push
test
mov
dec
aad
test
dec
mov
fidivrl
and
ret
addr16
aas
mov
inc
mov
nop
xor
lret
mov
push
popa
add
std
push
flds
jmp
adcl
inc
aad
icebp
xor
pop
pop
in
test
adc
cmp
mov
jae
les
or
imul
arpl
mov
jo
xor
frstor
jae
mov
dec
and
push
mov
fsts
lret
sub
lret
insl
xchg
or
pushf
add
bound
sub
push
add
incb
or
imul
push
or
movsb
pop
jne,pn
daa
add
sbb
xor
imul
adc
push
ds
mov
and
movb
dec
inc
ror
push
xchg
pop
push
push
adc
dec
push
aaa
cmpsl
sbb
pop
mov
pop
mov
scas
dec
imul
sarl
add
rorb
insb
jno
pop
iret
jp
fstpl
mov
pop
xchg
outsb
or
jle
push
decl
aam
int3
btc
xor
jnp
jg
jae
dec
test
jno
inc
aas
mov
aas
imul
push
ret
pusha
mov
dec
xlat
aas
xchg
xlat
ljmp
jl
mov
cmp
mov
inc
lock
stos
pop
add
mov
lahf
mov
mov
pop
dec
lret
sub
lret
testb
jbe
pushf
data16
not
into
shll
mov
leave
in
fcomps
arpl
outsb
outsl
pushf
and
lock
cmpsb
sahf
adc
fdivr
pop
je
dec
sbb
pop
jg
cmpsl
xchg
mov
faddl
mov
mov
repz
push
clc
mov
gs
xchg
add
data16
sbb
sbb
jbe
sbb
cwtl
leave
lods
inc
aas
sbb
adc
push
add
sub
je
aaa
aas
cld
mov
mov
add
pop
sbb
push
cs
out
sbb
cmpl
dec
push
repz
and
mov
jae
pop
push
pop
lahf
sbb
scas
mov
mov
popa
nop
xchg
mul
add
out
inc
lahf
icebp
jl
aas
jbe
in
cmp
shl
push
rolb
dec
push
outsl
mov
sahf
loope
or
adc
cmp
pop
into
xor
into
mov
inc
sbb
aam
pushw
sbb
imul
cmpsl
fdivl
sbb
or
aad
sbb
iret
dec
mov
mov
sbbl
cmpsb
xchg
ret
jnp
ljmp
add
pop
push
js
enter
add
imul
push
aam
jecxz
cmp
pop
negb
pop
mov
mov
sub
mov
hlt
test
shll
adc
jno
dec
scas
and
ljmp
iret
cltd
mov
adc
cmp
loop
inc
and
fildll
lea
adc
push
and
push
push
das
lahf
jb
pop
cmc
in
mov
jge
push
add
std
cmpsl
fisttpll
out
neg
xchg
adc
lods
dec
or
das
in
pop
in
lret
mul
out
xor
sub
adc
cmp
sbb
xchg
sbb
imul
adc
mov
out
je
sub
aam
int3
mov
mov
sbb
icebp
sar
cmpsb
lret
xlat
push
add
mov
mov
xchg
mov
and
fcoml
enter
sarl
inc
out
test
call
fsubrs
sub
push
and
inc
dec
cli
dec
xchg
jae
pop
int3
jp
cmp
insb
sarl
pushf
in
lock
sub
push
aam
add
test
mov
cmpsb
pop
pusha
mov
xchg
xlat
adc
data16
mov
mov
xor
fistl
fadd
mov
popl
bound
daa
arpl
jns
divl
add
gs
mov
les
mov
mov
xchg
fwait
and
push
jle
in
push
dec
push
xchg
leave
cmp
jb
rcr
mov
sbb
cmp
out
loope
daa
and
addb
xor
fistpll
out
int
mov
xor
or
cmp
xor
pop
mov
fsubl
rclb
jno
dec
mov
jae
les
leave
sar
mov
xchg
sbb
push
xor
loop
loopne
mov
dec
mov
mov
xlat
lds
sub
pusha
cmp
mov
ss
aaa
mov
ljmp
adc
xor
out
rorl
mov
xchg
adc
adc
sub
repz
ret
push
inc
pop
push
add
nop
push
lahf
push
psubd
aas
pop
bound
rorl
pop
cmp
mov
pop
mov
inc
cmpsl
xchg
mov
mov
clc
aas
mov
add
into
push
dec
es
mov
sub
fdivr
mov
jb
cld
or
inc
negl
mov
sbb
imul
xchg
mov
cwtl
push
and
push
pusha
or
int
sbb
shrb
ljmp
ljmp
or
loope
xor
xor
daa
iret
in
es
and
jp
mov
call
repnz
les
arpl
outsl
out
loopne
scas
add
rorl
or
out
inc
stos
xchg
or
lods
movsb
jno
adc
stos
mov
pop
rcl
cld
pop
dec
sbb
stos
or
xchg
addr16
insl
xchg
or
clc
jp
ret
sub
nop
adc
nop
and
in
ja
xchg
repz
sbb
pop
cmp
pop
jb
xor
xchg
adc
mov
mov
arpl
or
idivb
add
icebp
pop
mov
lds
movsb
jbe
sbb
lret
push
inc
cmc
xor
lret
loopne
mov
and
mov
mov
jb
push
mov
out
dec
outsl
subb
in
call
push
jecxz
in
rol
sbb
fs
sbb
repnz
xlat
mov
fsubrl
sub
fsubl
jecxz
add
iret
push
mov
daa
xchg
mov
push
push
lds
adcl
adc
add
inc
into
sbb
icebp
sbb
imul
fldt
pop
or
mov
xor
inc
mov
xlat
std
arpl
add
jmp
add
cmc
popl
mov
push
orb
jnp
xchg
sub
pop
or
fdivrs
mov
ja
cli
pop
fmull
mov
lahf
movsl
or
add
rorl
int3
add
inc
std
daa
in
in
sbb
loopne
stos
xor
shlb
jecxz
popf
push
add
mov
mov
aaa
add
push
in
fmuls
pop
xchg
je
adc
pusha
int
sub
jmp
lret
cmp
into
jbe
and
mov
gs
clc
fnstsw
in
nop
dec
fldl
and
fsubrl
jle
add
mov
loopne
push
or
jb
out
pop
rcll
pop
cmp
pop
int3
mov
and
add
stc
sub
push
enter
and
push
out
repnz
add
xchg
incb
mov
lds
and
or
mov
add
and
mov
dec
adc
addr16
cmp
icebp
or
stos
movsl
xchg
mov
outsl
int3
or
xchg
imulb
lods
inc
leave
out
dec
jp
or
lds
rcrl
into
and
aad
popa
insl
xlat
mov
mov
in
jae
int3
xchg
das
fildl
std
repz
jmp
outsb
push
mov
das
push
js
call
aad
dec
push
movsb
test
sub
push
adc
cmpsb
cmpsl
push
xor
sub
sbb
adc
cs
xchg
mov
out
rorl
jae
fimuls
mov
dec
push
mov
aaa
jle
mov
cli
fwait
pop
movsl
push
mov
push
mov
out
push
sar
cmp
imul
lods
pop
aaa
loopne
xchg
mov
ficomps
mov
mov
and
iret
insl
add
mov
mov
loope
imul
ret
mov
jnp
mov
dec
mov
lcall
cmp
sbb
push
jbe
sub
and
movsb
mov
movsb
cmpsb
inc
cld
xchg
popa
mov
call
in
rorb
and
pop
jp
mov
sub
cmpsb
es
pop
test
push
lods
or
gs
or
inc
sub
data16
push
stos
xor
cmpb
push
testb
repnz
test
test
cmpb
pop
push
pop
fldl
fldt
inc
fxch
jg
pop
mov
cmpsl
push
xor
inc
mov
or
ficomps
pop
aaa
and
loopne
pop
mov
stc
scas
lahf
or
mov
std
push
in
lahf
cmp
pop
dec
rcrl
dec
nop
loop
adc
jns
add
mov
ffreep
mov
sti
dec
in
lea
adc
cwtl
mov
inc
xchg
cmpsl
xor
sti
ljmp
mov
jp
sbb
push
dec
xlat
xchg
scas
sahf
sub
adc
loop
pop
sbb
arpl
jb
dec
mov
jmp
mov
and
xchg
stos
push
es
mov
pop
rorb
clc
or
sbb
inc
mov
outsb
sbbb
inc
daa
mov
outsb
les
sub
les
subb
or
push
and
sahf
ds
movups
out
enter
adc
xchg
icebp
scas
test
jl
jg
ja
ja
fucom
rorb
pop
mov
jl
lahf
fwait
loop
sahf
or
mov
jnp
into
lods
orb
hlt
lock
divb
icebp
jmp
push
adc
gs
mov
inc
xchg
push
loopne
mov
sub
pop
mov
dec
add
fists
ret
mov
mov
scas
std
pop
ljmp
call
repnz
sub
xchg
or
inc
int3
les
add
movsl
rclb
test
jo
pop
cmp
sarl
or
dec
repz
ret
cmc
cltd
flds
push
sub
sub
push
lret
mov
rcrl
mov
xor
push
hlt
cmpsb
mov
mov
in
jbe
dec
and
and
dec
lcall
mov
sbb
inc
jp
pusha
xchg
push
xchg
cmp
xchg
xor
jns
scas
pop
movsl
lahf
outsb
mov
and
test
inc
or
in
in
push
outsb
sbb
inc
ret
jecxz
jns
fsubs
lret
mov
stos
inc
test
repnz
add
xorl
sub
sub
push
bound
mov
xchg
rorl
cwtl
or
lcall
out
loope
inc
daa
lods
xchg
cmp
mov
popa
push
mov
scas
and
jae
inc
pop
pop
jo
xor
jle
inc
lods
lods
pop
adc
add
mov
es
insb
mov
cmp
adc
xchg
cs
fdiv
mov
shll
sub
push
stos
andl
xchg
bound
cmc
imul
dec
mov
ljmp
inc
jbe
call
xchg
loope
aam
aas
shll
push
loop
loopne
cvttps2pi
xor
pop
lods
frstor
inc
sub
adc
js
jmp
sub
hlt
xor
addb
adc
jp
push
call
sub
pusha
mov
test
jl
test
pop
lret
mov
push
int3
push
ja
sub
mov
mov
test
push
inc
outsb
mov
push
or
mov
mov
fimuls
adc
in
sub
outsb
cmpsb
mov
testl
add
aaa
mov
aad
fwait
add
cmp
cmpsl
mov
inc
arpl
es
test
or
mov
mov
inc
add
lods
sub
les
in
cmp
mov
adc
mov
push
rclb
out
inc
in
ja
jne
xchg
ret
adc
scas
mov
call
and
icebp
pop
cltd
inc
cwtl
and
jb
outsl
lods
cmp
or
je
jg
orl
mov
call
insl
jnp
jle
testl
xchg
lds
pop
mov
je
xchg
imul
rcl
sub
mov
mov
outsb
bound
inc
arpl
and
pop
jge
push
lock
inc
mov
pop
lods
add
jo
rorb
cmp
sbb
adc
jg
into
stos
gs
arpl
scas
psllw
insl
fisttps
test
mov
dec
or
xchg
cmpsl
push
jle
inc
mov
rolb
inc
shl
adc
ret
add
jae
iret
mov
inc
lahf
divb
fmull
mov
ss
ret
dec
sbb
sub
loop
ss
std
push
mov
lcall
xor
xlat
std
and
dec
popa
ret
mov
cmp
js
pop
sbb
mov
insb
sbb
stos
jne
push
or
sub
mov
inc
fsubl
int
mov
call
sub
imul
repz
jno
jbe
rcrl
sub
adc
fists
iret
movsl
stos
mov
xchg
fldcw
sbb
push
ljmp
cmp
pop
jb
sbb
push
outsl
xor
out
sub
xchg
sbb
sahf
lahf
add
sahf
scas
sti
sti
jnp
sbbl
xor
lahf
add
cltd
sbb
sarb
mov
ficompl
adcl
and
hlt
mov
jge
pushf
inc
jge
movl
xor
mov
jne
push
stos
mov
adc
sub
lock
leave
cmpsl
sbb
stc
sbb
push
js
push
inc
ret
fbstp
xor
adc
sahf
or
jl
popl
loop
add
dec
orl
push
mov
push
out
in
pop
stc
mov
test
push
push
in
add
ja
jae
std
iret
popf
pop
and
xor
ss
push
fldenv
xchg
sahf
sarl
push
out
loop
ret
js
jne
and
or
lds
pop
push
jg
xchg
mov
sub
inc
cmpsl
cmp
jmp
dec
mov
inc
jns
sbb
in
dec
cltd
loope
xchg
sbb
cmp
es
add
jg
mov
pop
or
push
mov
add
arpl
mov
mov
pusha
jmp
mov
inc
pop
xor
outsb
mov
popa
xchg
mov
out
in
mov
jmp
jno
xor
mov
dec
mov
test
mov
sarb
inc
movsl
cmp
rcll
push
cltd
pop
sbb
pop
arpl
lahf
xor
mov
scas
lods
fidivrl
ret
popa
mov
push
jbe
mov
lods
sbb
lock
mov
or
fsts
ljmp
fldcw
flds
push
push
adc
sbb
push
and
jbe
xchg
mov
std
repz
mov
and
jecxz
sbb
sbb
lock
mov
into
dec
cmp
pop
and
jmp
pop
in
push
icebp
cmp
ja
sbb
mov
cmpsl
sub
sub
int
adc
push
mov
mov
inc
insb
cmp
cmp
xchg
mov
jecxz
push
xor
vmwrite
mov
rcrb
jb
pop
mov
pop
in
std
mov
jne
data16
ret
jge
jge
inc
adc
in
jb
lods
out
and
dec
hlt
int
dec
hlt
and
out
adc
jg
add
mov
add
out
jg
mov
xor
mov
int3
sbb
jecxz
mov
iret
inc
push
xchg
or
mov
xlat
sub
sub
jae
and
fildl
xor
mov
pop
mov
lret
loop
test
push
test
dec
mov
mov
lahf
lea
popf
dec
call
xor
mull
ret
dec
and
and
push
mov
add
test
mov
das
loope
jb
xchg
add
mov
mov
push
mov
add
pop
adc
rclb
pop
js
push
adc
nop
mov
das
and
js
xlat
dec
cld
pop
in
stc
sbb
lds
adc
scas
bound
pop
ret
push
adc
mov
roll
push
shlb
sbb
cld
bound
out
inc
fstp
push
scas
lret
dec
aam
sub
pop
xchg
into
cmp
loopne
insb
xlat
lea
jne
xorb
sbb
test
xchg
aam
fucomip
loopne
out
push
jb
and
cmpsl
cmp
cwtl
es
push
dec
test
and
call
aad
int
int3
clc
sub
ljmp
dec
int3
into
aas
mov
icebp
shlb
test
and
loop
sub
stos
test
add
inc
arpl
aad
or
xchg
imul
or
subl
cmp
mov
dec
sub
xor
loopne
call
in
pop
inc
xchg
loop
mov
push
jnp
andb
xor
xorl
cmpsl
leave
cwtl
ds
std
sbb
shll
out
das
sarl
scas
aaa
scas
shlb
inc
xor
push
enter
sub
or
xchg
and
pop
inc
inc
mov
cltd
mov
loop
rclb
sbb
dec
mov
movsl
push
sub
outsl
fisubl
jmp
and
imul
push
jne
push
sbb
push
inc
jmp
mov
add
push
je
repnz
aam
arpl
mov
pusha
stc
gs
ljmp
pusha
and
inc
xor
test
jns
inc
mov
sahf
stos
aam
dec
fisttpll
mov
inc
int3
jecxz
arpl
ror
ja
jmp
popf
add
or
inc
push
movsb
shrb
push
mov
or
lods
int3
jle
mov
cmp
fnstsw
push
pushl
mov
mov
adc
test
pop
cwtl
or
popf
icebp
stos
scas
or
loope
leave
fsubs
rcll
and
insl
fimuls
stos
repz
cmpsl
mov
lods
rep
inc
jae
mov
aad
getsec
add
jl
roll
negb
jae
shlb
pop
mov
or
inc
mov
inc
or
mov
pop
push
lods
or
xor
mov
hlt
lods
mov
stos
fadd
jp
sahf
into
out
pop
sub
shlb
lret
ss
mov
mov
add
push
jge
das
adcl
pop
or
pop
sbb
in
int3
fildl
nop
mov
pushf
arpl
jnp
pop
mov
add
cmpsb
roll
es
mov
xchg
loop
into
xchg
shlb
jmp
lret
add
lods
add
jnp
mov
ds
inc
or
sbbl
sub
jb
sbb
lds
cli
pusha
loop
mov
lret
xor
enter
fistpl
or
iret
jo
xorl
add
ret
pop
add
jp
xor
ret
jbe
inc
aad
clc
mov
sarb
ljmp
xchg
clc
test
scas
lea
mov
cld
push
fs
pop
xchg
adc
in
push
push
test
fisubrl
and
scas
fcmovnb
add
loope
mov
fdivrs
arpl
mov
cmp
popa
xor
iret
popf
ret
test
cli
cltd
mov
cltd
iret
mov
push
clc
adc
sbb
lea
sub
jae
xchg
pop
sbb
jnp
pop
xchg
cmpsb
in
addb
movsl
mov
jns
cwtl
test
inc
sbb
daa
fildl
popa
or
push
cmpb
dec
or
mov
adc
jmp
jmp
cmp
jl
jbe
cmp
sub
and
loopne
mov
not
orl
xor
dec
sub
sti
sbb
jle
add
add
pop
xor
movsb
jnp
int
es
and
xchg
fisttpll
je
repz
jecxz
pop
fimuls
mov
das
sahf
sbb
std
mov
xchg
mov
push
repnz
aad
inc
add
nop
push
mov
shrb
pop
mov
xor
dec
imul
push
mov
lahf
push
adc
pop
shl
sti
dec
sahf
lahf
sahf
pop
aam
lcall
jg
outsb
mov
nop
sbb
fmuls
loopne
adc
arpl
lahf
cld
push
loope
mov
jg
in
outsl
mov
mov
mov
sub
or
dec
push
mov
sub
pop
loope
test
int
in
mov
and
mov
xchg
mov
dec
shrl
dec
cld
jb
jnp
out
shrl
addr16
sti
test
inc
stos
hlt
or
mov
sbb
out
icebp
sbb
sti
adc
cli
mov
imul
cmp
out
push
pop
pop
sbb
add
xchg
dec
shrb
adc
push
mov
cltd
dec
jns
inc
inc
cmc
ret
cli
mov
jbe
cmp
fs
inc
orb
push
leave
push
inc
sbb
lods
lods
xchg
push
cmpsl
rorl
lock
pop
in
aaa
popa
xor
insb
pop
sub
les
xor
test
iret
dec
addr16
mov
std
imul
insb
stos
jno
push
fdivs
inc
scas
push
pop
stos
mov
push
sub
std
push
lds
lcall
loop
or
bswap
mov
outsl
test
pop
inc
cltd
inc
in
es
inc
cli
pop
ficompl
lods
dec
andb
cmpsl
add
mov
cld
inc
out
stos
pop
subl
cld
jno
dec
sbb
mov
mov
fwait
pop
ret
out
pop
xchg
negb
hlt
loopne
popf
xor
imul
out
sub
bound
sbb
jbe
xor
imul
lea
popl
push
cmc
push
dec
cmp
or
je
cmpsb
jbe
xchg
shlb
dec
pop
int3
imul
dec
push
mov
and
mov
jae
sub
orl
dec
xor
cmpsl
push
inc
imul
sarb
popf
hlt
add
or
pop
adc
out
shll
jmp
mov
imul
mov
imul
pop
out
jne
push
shll
fs
popa
stos
xor
mov
xor
mov
fwait
push
dec
insl
push
sbb
or
jp
int
push
std
xlat
aam
xchg
shl
pop
jge
stos
mov
xchg
cs
mov
fsubr
mov
cmpsl
sbb
dec
sub
and
enter
and
dec
cmp
jae,pn
adc
fisubrs
aam
pop
sbb
sub
inc
ljmpw
ret
je
sbb
mov
push
mov
pushf
cmc
je
push
mov
dec
imull
dec
ljmp
sahf
insb
or
mov
and
testb
mov
mov
dec
xchg
or
push
or
arpl
lods
inc
dec
pop
gs
cmp
cmp
decl
int3
push
adc
mov
lock
mov
xor
push
sbb
popf
mov
dec
rcrl
lahf
push
sarb
xchg
scas
les
jle
sub
mov
cltd
push
cwtl
push
test
rolb
pop
int3
xor
jle
nop
int
jmp
inc
mov
outsb
mull
cmpsl
and
jge
std
pop
icebp
xchg
sub
xchg
dec
mov
xor
pushf
mov
mov
stos
lret
pop
cmc
sbb
push
lcall
aaa
daa
inc
sbb
in
mov
std
aam
adc
cmp
add
lret
test
mov
js
mov
lret
mov
mulb
xchg
xchg
ficompl
test
dec
sbb
rcr
repnz
sbb
adc
adc
dec
scas
and
mov
xor
imul
std
ljmp
outsl
mov
je
and
pushf
outsb
stos
cmp
mov
out
adc
lcall
bound
pushl
mov
adc
sub
push
mov
sti
imul
fstl
or
cmp
and
lcall
jno
xchg
pop
mov
cwtl
dec
sbb
aam
or
in
xlat
rcr
pop
movsl
sbb
mov
add
dec
jae
xor
lret
pop
or
pop
fwait
jo
inc
xlat
mov
jnp
and
mov
gs
mov
fsub
xor
pop
scas
adc
dec
pop
faddl
mov
pop
jne
mov
pop
leave
fsub
and
sub
xlat
jl
aad
mov
addb
pop
xchg
cld
jns
jns
push
aaa
scas
popf
or
adc
push
xor
fbld
push
xor
inc
xor
lret
ljmp
push
cs
or
test
dec
mov
lods
sbb
call
loop
mov
dec
mov
jbe
sahf
gs
pop
push
xchg
shl
scas
sbb
mov
mov
sbb
cwtl
aaa
xchg
aaa
xchg
test
shufps
mov
pop
pop
pop
push
rcrl
lret
cmp
sbb
jg
push
mov
pop
adc
outsb
cltd
orl
std
adc
std
bound
sub
mov
jno
mov
mov
fldz
inc
arpl
pushf
cltd
ret
jnp
pop
add
cmp
mov
mov
cmpsb
int3
nop
iret
mov
add
shrl
or
popf
fs
jns
lahf
ja
jmp
rclb
test
inc
dec
inc
movsl
and
xchg
lods
jns
int3
mov
testl
loop
xor
sbb
inc
outsb
mulb
aad
pop
cmp
pop
mov
jmp
daa
into
or
test
xor
inc
push
movsb
aad
push
mov
loop
sub
sub
lock
dec
dec
push
mov
mov
jecxz
imul
loopne
push
mov
pop
mov
add
sub
adcb
cmp
scas
sahf
add
leave
outsb
add
push
xor
dec
lock
xlat
jmp
push
cli
testl
fildll
stos
xchg
xchg
jbe
rorb
dec
in
jne
clc
xor
jp
outsb
jmp
out
fsub
pop
sbb
rclb
jg
xchg
cltd
cltd
xor
and
lahf
mulb
dec
nop
sahf
loop
cmp
mov
jo
inc
and
push
jbe
repz
loop
dec
aad
dec
jle
lods
ds
and
pop
add
add
cmp
or
cmp
xchg
mov
sub
lea
jns
mov
lret
and
in
aam
imul
mov
mov
popf
inc
pop
mov
aam
push
add
dec
push
dec
jbe
push
mov
inc
shlb
jo
push
cmpb
add
data16
mov
je
add
sbb
hlt
pop
or
or
and
sti
bound
int
aas
jns
clc
jb
nop
mov
fnstsw
stos
addb
ficoms
or
addr16
stos
subl
push
fistps
mov
mov
pushf
jnp
inc
sbbb
pop
ret
cmp
ljmp
shlb
int3
nop
jns
pop
pop
out
fsub
push
mov
xchg
int3
in
adc
test
test
repnz
inc
sbb
push
mov
int
in
test
enter
insl
insb
fcmovne
cmp
jnp
xor
xchg
xor
movsl
ljmp
mov
pop
xchg
pop
shll
push
xor
fisubl
mov
inc
shll
out
outsl
gs
mov
enter
fidivrl
icebp
fidivrs
int3
faddl
push
xchg
sub
jl
and
dec
repz
sbb
cmc
subb
fwait
xor
cli
push
fucom
lcall
and
hlt
sbb
or
jl
imul
out
push
mov
test
pop
ret
stos
jle
pop
out
jns
push
dec
stc
jecxz
adc
jae
mov
jl
test
fsin
int3
mov
mov
jecxz
dec
scas
data16
mov
js
int
insb
cld
and
fidivrs
repnz
pop
cmp
ds
push
loop
addb
cli
ja
loope
cs
inc
mov
jne
dec
sbb
cmp
jmp
push
sub
mov
popa
js
std
push
out
in
scas
aas
mov
add
mov
aas
iret
or
push
imul
jle
imul
and
sub
inc
bound
stos
test
int3
push
jne
fcmovne
cmpsl
dec
jle
ret
dec
jb
mov
shrb
mov
dec
xor
cs
push
fwait
push
push
mov
cmp
or
stos
fimuls
pop
jmp
pop
pop
ja
push
mov
cmp
bound
sti
mov
add
push
pushf
popa
ljmp
pop
and
and
aad
mov
call
subb
mov
mov
ret
andb
mov
pop
xor
and
dec
das
pop
sbb
push
fwait
inc
pop
pop
mov
jnp
fcmovnbe
add
jno
or
sbb
or
lods
xor
insl
js
push
cmp
jbe
mov
jg
or
mov
shl
jl
inc
push
das
jae
mov
js
sbb
shl
mov
dec
aad
or
sbb
aaa
sbb
xchg
mov
aam
and
jns
cli
inc
mov
dec
xlat
sbb
dec
insb
cmpb
popf
fidivrl
jo
bswap
mov
cmp
xor
pop
adc
fwait
xor
add
test
cltd
shrl
or
rcl
xor
in
mov
mov
pop
jne
sbb
cs
jne
jmp
scas
jmp
mov
nop
dec
push
mul
addr16
ficomps
ss
ret
out
inc
stos
sbb
adc
outsl
pushf
pop
cmp
enter
pop
dec
pop
cmp
nop
cmpsb
inc
in
mov
andl
sahf
pop
sbbl
mov
sti
inc
inc
jle
gs
pop
sub
push
xchg
add
shll
ds
add
test
mov
in
lret
call
push
mov
sarl
repz
and
test
in
jne
int3
jae
add
repz
sbb
push
dec
ja
xor
push
adc
incl
sub
sbbb
inc
inc
mov
enter
stos
test
loop
mov
insl
jmp
jecxz
cld
or
icebp
repnz
or
ljmp
xorl
mov
les
sbb
or
xor
test
stos
add
test
ret
aad
and
andl
loope
jmp
out
xchg
lret
adc
cmp
dec
push
push
mov
jne
pop
fcoml
rcll
mov
inc
dec
icebp
add
mov
mov
jb
outsl
sbb
add
pop
out
add
and
pop
loope
fimull
push
pop
leave
dec
push
jl
adc
push
adc
xor
mov
cli
lcall
dec
and
dec
les
fbstp
add
add
and
adc
loope
xor
xchg
pop
jmp
aaa
incb
mov
add
addb
insb
mov
adc
and
jbe
outsb
pop
add
push
je
sub
rorl
lahf
mov
cmp
adc
pop
sub
mov
xor
stos
lock
bound
icebp
dec
cmp
mov
sub
in
ss
push
or
fcomps
push
xor
outsl
fwait
cltd
mov
cmp
push
gs
jne
ss
ljmp
fadds
adc
cmpsl
fadd
pop
mov
test
sbb
divl
sbb
test
std
jnp
pop
out
xchg
pop
add
xchg
shl
add
out
mov
rol
std
jnp
mov
add
pop
sub
lock
push
push
lcall
mov
imull
push
sub
or
mov
xchg
xchg
repz
add
mov
and
xorb
test
adcl
iret
xor
nop
jmp
out
pop
ret
lret
and
out
dec
lret
ja
and
jne
and
push
pop
cmc
push
mov
mov
data16
xor
mov
and
adc
mov
in
fldt
push
mov
out
mov
cmp
inc
mov
stos
mov
hlt
jp
out
add
mov
mov
jo
sub
pop
ss
push
imul
and
repz
rcrl
out
in
xchg
push
cmp
and
ss
mov
jecxz
cmp
add
sub
cmc
or
push
fisubl
or
aam
pop
mov
bound
int3
sbb
push
incl
ficoml
lcall
sub
jb
mov
jnp
xor
lahf
ja
push
xchg
roll
into
in
fisttps
xor
imul
mov
pop
mov
jne
push
jg
daa
cmp
push
aad
inc
cs
je
cmp
xor
aam
jecxz
stos
dec
js
dec
xor
dec
push
pop
mov
push
insb
sub
and
xor
sbb
cmp
fcomp
ljmp
and
add
jp
mov
imul
lret
test
fwait
sbb
in
outsb
jne
xor
fs
ror
arpl
pusha
fsqrt
lock
adc
int
pop
in
cmp
inc
aam
inc
dec
js
lcall
scas
fsubrs
stos
imul
or
jmp
divl
push
inc
mov
mov
shlb
shll
sub
jae
iret
xor
lret
int
roll
xor
push
out
imul
scas
ja
daa
mov
aam
scas
mov
add
shll
xlat
jge
pop
daa
cltd
test
or
hlt
fwait
cmp
xchg
cmp
xor
dec
out
jno
into
inc
jo
iret
cmp
adc
dec
xor
or
popa
adc
push
in
repnz
pop
jecxz
pop
mov
inc
pop
inc
and
pop
sarl
test
add
neg
je
addr16
jl
and
jbe
imul
mov
leave
cmpsb
out
mov
rcr
mov
pop
jns
incb
xor
cmp
and
dec
inc
push
stc
cmpsw
mov
or
sahf
not
ja
mov
cmpsb
das
and
fists
in
hlt
decb
sbb
mov
shlb
or
sbb
pop
push
adc
and
stos
pop
push
and
mov
insb
cmpsb
jo
sbbb
lds
pop
mov
xor
sbb
aam
pop
mov
and
and
pop
loopne
cmc
adc
jmp
inc
cmp
pop
in
arpl
xchg
shrb
lret
je
add
jg
ljmp
mov
cmpsl
jmp
xor
inc
xor
cmp
jecxz
scas
pop
cmp
out
sbb
icebp
cmpsb
pop
jg
cwtl
mov
aad
fwait
jbe
fsubs
pusha
cmp
xchg
sbb
xor
arpl
out
fcmovnu
pop
sub
sahf
das
sub
inc
add
jg
fnstsw
and
cmp
aas
jno
sub
addl
pop
aam
bound
enter
mov
push
and
mull
orb
stos
mov
and
cmp
leave
mov
rorl
movsl
mov
in
sahf
ljmp
aaa
add
lds
rolb
xchg
push
push
fs
sahf
jo
pop
add
or
jg
mov
dec
jle
dec
sahf
jno
xchg
jmp
in
mov
push
pop
mov
sti
mov
xchg
inc
int
lods
pop
stos
outsl
xor
fnstsw
dec
sub
fwait
mov
or
repz
out
and
ret
test
sahf
fcomps
dec
or
jno
inc
dec
cs
jbe
add
cld
ja
adc
or
xorl
and
shlb
test
add
pop
loopne
inc
testb
out
inc
mov
jg
mov
notb
push
inc
mov
and
rcr
xor
xorl
arpl
fcoml
adc
cmpsb
mov
jmp
jle
or
popf
jo
mov
loopne
orb
cmp
pusha
imull
mov
fs
mov
jnp
push
cmp
pop
frstor
sbb
aam
and
xor
incl
mov
mov
cmp
jb
lods
jmp
mov
into
dec
sub
or
cmp
aas
repz
xchg
sti
sub
std
mov
shll
inc
movsb
pop
in
xor
and
stc
cld
mov
in
sub
mov
xchg
pop
fcomps
cmpsb
stos
lret
sti
mov
and
pop
mov
adc
outsb
and
fstps
sbb
shrl
mov
repnz
mov
sub
rorb
addr16
movsb
sbb
add
std
jae
mov
jmp
push
icebp
outsl
push
sbb
mov
and
push
cmc
adc
lcall
ja
sub
cmp
lods
jno
iret
ds
rcrb
repnz
std
push
push
add
out
fstps
sbb
cmp
outsl
mov
jnp
mov
arpl
insl
mov
push
mov
sbbb
jnp
bswap
scas
jecxz,pn
in
jmp
adc
fs
sbb
adc
divl
outsb
push
push
les
imul
hlt
cs
stc
cmp
xchg
jb
push
inc
cltd
mov
adc
cmpsb
repnz
mov
bound
mov
out
and
mov
cmp
into
out
sbb
aam
and
add
pop
or
addl
out
and
pop
push
cwtl
xchg
int
adc
cmp
stos
lcall
dec
lret
push
and
imul
stos
pop
aas
cmp
xor
xor
das
sub
xor
aam
mov
imul
fisubl
mov
jl
cmp
or
fcmovne
dec
repnz
cmp
push
add
mov
push
sbb
sarl
inc
loopne
mov
outsb
mov
es
in
mov
lret
sbb
jg
mov
iret
aad
cmpsl
mov
xchg
fldenv
loope
lods
ret
push
gs
xchg
lods
cmp
mulb
mulb
mov
or
xor
xchg
mov
shlb
lods
aad
or
lea
data16
lret
mov
xorl
movsl
dec
xor
cmp
test
sarb
int
mov
std
sti
lahf
sub
out
repnz
adc
dec
push
push
daa
popf
cwtl
push
xlat
aas
push
jne
or
scas
int
out
ds
stos
pop
clc
xchg
jmp
aad
shl
xchg
mov
scas
or
lcall
sbb
pop
jbe
mov
int
in
aas
repz
das
push
inc
dec
pop
add
mov
iret
imul
es
dec
ret
rcll
adc
push
scas
addr16
clc
xchg
aam
push
xor
insb
adc
jo
daa
std
xchg
jnp
xor
pop
sti
je
fisttpl
xor
int3
xchg
lcall
shll
xor
mov
push
aad
mov
fcmove
test
les
adc
inc
mov
mov
aas
fnstcw
sub
push
dec
xchg
aaa
popl
lea
call
and
mulb
add
pop
cmp
imul
sbb
or
dec
dec
leave
hlt
adc
scas
sub
ja
jge
outsb
xchg
add
push
dec
mov
repz
std
jl
inc
and
leave
cmp
jbe
cmp
stos
adc
adc
out
xchg
bound
shll
aaa
mov
sbb
xchg
add
mov
rcrl
movsl
addl
dec
inc
jmp
pop
popa
pusha
xchg
shr
vcvtps2dq
loop
xchg
dec
ds
aam
pop
movsb
and
shll
inc
lcall
add
lret
adc
adc
push
xchg
mov
sub
pusha
jno
outsl
sbb
jmp
dec
xchg
fnstsw
and
xor
leave
dec
add
cmc
sub
cmpsb
adc
mov
negb
cld
jbe
jmp
push
rclb
mov
fcmovnu
mov
stc
roll
pop
bound
and
ret
scas
stos
ljmp
pusha
int3
sub
lds
jno
mov
insl
orb
pop
adc
fmul
shrl
es
popf
lcall
add
rcrb
sbb
or
mov
jp
imul
cmpsl
dec
cmp
stc
jle
in
cmp
jg
cs
add
mov
pshufw
cmp
mov
pushf
cltd
icebp
cmp
int3
cmp
inc
pop
in
std
cmc
push
add
inc
jecxz
mov
jnp
je
cmp
in
cmpsb
ds
test
bound
lds
sub
repnz
jno
in
inc
jno
or
scas
xchg
sub
sbb
sub
shl
jge
dec
xor
clc
nop
dec
adc
lock
push
or
inc
ret
shlb
fimuls
jnp
xor
inc
iret
int3
imul
xchg
out
out
pop
dec
and
pop
and
xor
push
loopne
jae
jae
mov
adc
fildll
inc
add
iret
add
or
jae
xor
in
xchg
sbb
mov
lcall
in
jg
movsl
mov
rcrl
xlat
loope
aad
jecxz
test
ret
scas
aaa
push
scas
mov
adc
in
test
scas
push
popa
ss
js
xlat
loopne
cmp
in
jle
and
outsl
fistl
jle
sbb
cmp
repnz
jg
fstp
cmp
enter
std
jmp
mov
jge
jge
jp
sbb
jbe
leave
push
mov
popa
mov
mov
je
mov
add
pop
sub
sti
roll
popa
leave
ficoms
and
inc
pop
fsubr
arpl
faddl
or
push
mov
icebp
mov
jae
lahf
out
imul
popf
scas
mov
dec
add
pop
mull
stos
les
repnz
push
je
fwait
in
mov
jge
fistpll
and
dec
xchg
sbb
mov
rol
fcmovbe
sbb
push
add
jbe
imull
lahf
jnp
cltd
jne
loope
xor
inc
xchg
mov
sub
imul
mov
in
sub
cli
fldl
xchg
stos
std
pop
negl
mov
sbb
xchg
out
rcll
fidivl
subb
adc
sti
test
aas
xchg
jb
mov
and
pop
jmp
lds
push
pop
sub
sbbl
mulps
cld
out
mov
subb
add
clc
das
and
dec
sbb
outsl
xor
outsb
es
jl
xor
in
jle
and
lea
mov
shlb
jle
mov
mov
jb
and
mov
jl
xor
jmp
pushf
mov
out
idiv
push
fisttpl
inc
or
push
mov
rcr
xchg
icebp
pop
loop
arpl
xlat
push
das
outsl
stos
inc
cmpsl
repz
rorb
mov
sbb
aaa
jne
movsl
cmc
mov
mov
cs
xlat
shlb
cli
test
xchg
andl
dec
mov
pop
pop
mov
xchg
shll
dec
and
sub
pop
cmp
ja
cmp
cwtl
adc
xchg
jb
xor
loopne
into
out
or
daa
ljmp
ja
lds
pop
xchg
jg
push
sahf
sbb
inc
ret
dec
push
subb
repz
pop
hlt
mov
stc
call
adc
xchg
jb
dec
mov
mov
dec
orb
jo
cs
mov
int
outsl
lahf
incb
lds
lret
arpl
ljmp
push
or
pusha
mov
bound
push
lock
pop
js
repz
jnp
pop
pop
cmp
push
fcomps
or
adc
lods
and
enter
xor
xlat
add
cs
mov
pop
and
out
pop
test
mov
and
add
scas
and
push
pop
push
or
sbb
sbb
jecxz
inc
lret
xor
out
lahf
test
int
cmp
negl
in
jb
xchg
in
jb
xor
dec
mov
xorl
or
movsl
pushf
cmpsb
inc
mov
test
into
jno
imulb
mov
pushf
push
fsubr
lret
das
xlat
clc
data16
insb
lea
cmpsb
aaa
add
add
mov
jp
cmp
jle
mov
dec
inc
cli
lods
in
jno
outsb
sbb
aad
iret
fs
cmp
ds
lods
mov
mov
cmp
movsb
shl
xor
mov
ss
adc
mov
pop
pop
imul
dec
in
scas
mov
cli
sub
data16
pop
shlb
dec
decb
in
in
jae
inc
cs
outsl
dec
inc
add
sti
fbstp
cld
out
xchg
jmp
dec
pop
nop
mov
ljmp
sbb
jae
sbb
mov
mov
xor
mov
jmp
test
dec
gs
lcall
andl
or
loopne
mov
dec
xchg
sub
cli
ss
push
imul
dec
lcall
loopne
imul
xchg
and
movsb
push
jle
aad
adc
jne
dec
inc
loopne
jle
mov
inc
cltd
push
cmp
data16
pop
adc
mov
push
mov
jle
dec
add
outsl
pop
xor
adc
loope
jl
mov
jns
jmp
sbb
aam
aad
cwtl
jmp
mov
andl
add
mov
pop
add
lcall
push
dec
pushaw
js
jbe
cmp
call
push
cwtl
lods
cmp
out
iret
xchg
sahf
inc
push
push
and
or
sbb
movsb
xchg
aad
pop
fsubl
lods
xchg
lret
ficompl
xchg
out
adc
ror
jle
push
shr
in
inc
xchg
into
xor
jle
inc
jmp
sbb
inc
cld
fcmovnbe
orl
mov
sbb
les
out
ja
test
pop
jnp
xchg
push
sbb
mov
in
pop
jne
push
rcr
mov
paddsb
push
ret
push
int3
cli
fcoms
bound
cmp
jecxz
orl
lcall
xchg
sbb
dec
sub
loopne
sbb
push
mov
add
cmpsw
xchg
es
loope
js
sub
sahf
ret
aad
loopne
neg
js
jmp
les
dec
mov
in
xorl
test
inc
negl
jmp
dec
cli
adc
push
xchg
lahf
push
sbb
or
outsb
shrb
xchg
aam
ret
lret
icebp
dec
add
mov
rorb
mov
xchg
mov
or
pop
or
xchg
clc
negl
sbb
es
ljmp
sbb
fdivr
push
lea
adc
imul
loop
ljmp
push
into
jb
test
lahf
enter
sbb
jmp
js
add
xor
and
or
lds
repz
cmp
jne
sbb
cmc
mov
cmp
add
iret
outsb
filds
jge
outsb
hlt
cmp
add
sbb
xor
shll
adc
jl
xchg
fs
add
or
js
test
push
in
hlt
push
dec
add
sbb
mov
mov
add
mov
shrl
call
adc
les
int3
shlb
jmp
push
mov
fiaddl
push
mov
or
aas
nop
mov
dec
or
mov
das
loope
mov
jbe
loope
stos
in
loope
push
icebp
add
mov
sub
imul
jnp
les
mov
xchg
leave
mov
jle
in
int
arpl
inc
xor
int
mov
aaa
push
mov
icebp
pop
xchg
ror
lcall
mov
and
or
arpl
loope
call
push
movsl
icebp
std
push
sbb
ss
imul
lea
cmp
lock
ret
cwtl
rclb
and
pop
ja
stos
fcmovnu
xor
inc
rcl
mov
jno
iret
adc
xchg
jb
mov
sbb
clc
daa
call
sar
xchg
ret
xchg
pop
mov
leave
mov
or
nop
sub
add
push
and
repz
push
lret
push
or
mov
std
mov
pushl
lahf
cmpsl
imul
lret
sbb
mov
cmp
mov
sbbb
vpandn
test
inc
jb
or
cli
test
mov
jmp
jge
dec
and
mov
xchg
and
addr16
int
lret
arpl
out
aad
testl
nop
loope
lret
or
inc
and
cmpsb
inc
add
and
add
ljmp
inc
cld
pop
jnp
cmp
repz
jne
testl
cmpb
mov
in
dec
add
fbstp
pop
cs
fnstcw
lea
imul
repz
aam
popf
push
mov
shrl
pop
cmp
jg
lret
scas
push
xlat
test
in
leave
jl
loopne
dec
jge
jns
push
lret
push
push
data16
out
jb
mov
loopne
push
sbb
ficoml
dec
xchg
xchg
cmp
xchg
jle
xor
dec
stc
inc
mov
loop
inc
push
lods
ret
jmp
cli
adc
test
daa
adc
cmp
gs
dec
out
lock
xlat
movsb
cld
cwtl
nopl
out
inc
repnz
jno
cmp
mov
dec
leave
dec
leave
jnp
jp
loop
push
or
je
ffree
enter
push
pop
cs
fistps
pusha
adcl
xchg
scas
ror
out
mov
call
mov
outsb
jge
outsb
xchg
mov
fstl
mov
sub
call
or
jmp
xor
mov
arpl
negl
mov
or
pop
cmp
movsl
and
movhps
loop
sub
mov
inc
mov
xchg
mov
mov
cmp
je
cmpl
sbb
leave
ds
stos
pop
lcall
xchg
std
mov
mov
call
imul
push
or
aas
and
mov
push
dec
scas
pop
aad
and
adc
xchg
sub
ret
jl
jge
mov
sub
les
push
lret
jo
mov
cmp
dec
enter
imul
inc
inc
test
xchg
addl
mov
sub
je
fistpl
rorb
cmpsl
jmp
pushf
fsubl
cmc
aam
push
pop
cmp
pop
iret
or
cmp
and
mov
cmpl
in
add
lret
push
or
sbb
popf
je
jmp
xchg
pop
cs
inc
mov
adc
inc
push
jo
jbe
cmp
xchg
cmpb
mov
dec
mov
jle
stos
loop
jmp
popa
jae
inc
xchg
dec
repnz
push
cmp
mov
jno
je
push
test
in
or
xor
lcall
testb
jae
out
jno
and
movsl
and
test
xor
out
jecxz
inc
inc
cli
push
stos
addb
mov
popa
ss
mov
shl
js
cmp
cmp
pop
ja
mov
scas
cltd
xor
js
push
fiadds
out
cmpsl
sahf
xchg
sub
pop
not
loope
cli
sub
dec
imul
xchg
cmc
push
pop
sbb
pop
sbb
pop
jmp
call
test
mov
sub
mov
fsubs
mov
xchg
dec
call
inc
add
dec
out
arpl
hlt
les
jmp
in
rcrb
mov
fcompl
mov
rorl
sbb
stc
imul
jbe
lea
pop
mov
shl
in
mov
popa
ret
xor
outsb
nop
in
sub
bound
in
sti
mov
dec
std
mov
jg
test
dec
in
mov
fs
inc
ja
or
xorl
cltd
pop
sbb
mov
das
sbb
pop
pop
sbb
hlt
jnp
cld
mov
xor
push
mov
lds
ret
xchg
add
xchg
sub
mov
icebp
cmp
mov
and
jg
ljmp
push
pusha
mov
js
call
jmp
push
lahf
fistpll
sbb
lcall
into
in
popa
out
in
mov
jno
movsl
mov
inc
mov
and
enter
xor
test
js
cltd
xorb
pop
push
sbb
arpl
sub
cmpsl
in
dec
pop
fldenv
adc
stc
out
cmp
test
jecxz
sub
in
addr16
out
shl
add
aam
shll
jg
fildll
and
jmp
in
sub
fldt
sub
test
outsl
add
dec
mov
xor
imul
sub
mov
jp
mov
fdiv
push
outsb
popa
rcll
push
xchg
movsl
es
ret
call
das
pop
ja
cld
mov
cmp
test
xor
add
into
in
xchg
shlb
outsl
xor
cvttps2pi
jmp
inc
aaa
rcrb
outsb
pop
cli
mov
dec
sbb
scas
rcll
cld
cmp
jmp
pop
xchg
adc
popf
test
test
mov
fcmovnb
xor
add
cld
xchg
and
jle
arpl
push
cmpsb
sub
push
ret
inc
and
test
arpl
icebp
aaa
cmp
jle
mov
sti
lret
mov
xchg
jns
cmp
push
adc
jae
cmp
xor
push
xchg
jo
sub
mov
ret
imul
stos
fptan
stos
icebp
ret
jmp
lods
mov
mov
icebp
add
xchg
sarb
std
and
xor
icebp
lret
and
and
sub
fiadds
xlat
push
out
scas
mov
xchg
lcall
in
insl
mov
stos
jge
or
mov
loop,pn
mov
lahf
fsub
add
rcl
loop
fwait
std
xor
mov
lock
rol
jnp
cli
push
cld
push
outsb
imul
xchg
cmp
add
fwait
jmp
and
push
jp
mov
mov
adc
pop
dec
mov
cmp
sbb
je
or
sbb
xchg
push
lret
scas
sub
inc
scas
out
xchg
cmp
jb
popa
add
ljmp
clc
sub
data16
xor
and
lret
cld
xchg
test
mov
adc
pop
faddl
test
jb
mov
repnz
jecxz
repnz
int
sbb
jl
sbb
insl
adc
enter
cmp
gs
dec
jnp
pop
addr16
xchg
mov
cld
bound
fstl
adc
or
in
ficoml
mov
push
and
jl
aam
hlt
into
popf
xchg
inc
mov
or
pop
daa
gs
loope
loope
and
pop
jg
or
push
or
cltd
cmc
push
inc
shll
adc
xor
adcb
cltd
xchg
ja
sub
jo
jl
xor
insb
adc
mov
sbb
sub
loopne
sub
xor
jnp
stos
sub
fwait
cmpb
ss
fsubrl
outsl
test
xor
and
data16
sub
cli
xchg
adc
cmpb
cmc
arpl
jecxz
cmp
dec
sbb
std
int3
mov
js
test
inc
lods
rcr
mov
movsb
test
xor
rcl
test
dec
mov
jb
scas
dec
pusha
je
std
ret
adc
pop
or
repnz
jne
dec
scas
ret
cwtl
lret
je
shr
imul
insb
test
mov
jb
es
jp
lahf
jge
adc
sbb
cli
call
fistps
imul
dec
call
ss
mov
mov
cmc
push
nop
cmpsl
iret
nopl
dec
sbb
sub
pop
leave
pop
int
out
faddl
test
xchg
mov
pusha
into
push
iret
and
xchg
jecxz
mov
push
addb
iret
adc
sbb
fxam
scas
xchg
add
jne
jno
popaw
sub
sar
shrl
cmc
add
insb
fwait
lret
lret
xor
pop
sub
stc
pop
mov
cmp
insb
dec
andl
test
push
mov
test
adc
xor
dec
push
pop
ret
push
lret
bound
push
cmp
fldcw
mov
cmp
in
insl
leave
dec
lea
fnstenv
jmp
inc
push
push
mov
push
lds
jp
xor
xorl
push
add
mov
lock
mov
and
or
shll
pushf
cmp
pop
pop
pushf
jecxz
cmpl
xchg
mov
mov
jl
call
aam
jecxz
jno
jne
push
mov
into
es
popf
push
aaa
adc
mov
sahf
cld
addr16
cltd
daa
imul
test
andb
push
push
in
jmp
sbb
lods
sbb
push
xchg
push
xchg
fwait
cmpsl
imull
aad
lods
iret
mov
push
or
les
loop
inc
push
mov
sti
dec
mov
insl
lahf
mov
inc
push
sbb
rclb
stc
push
inc
fwait
jle
pop
jle
cmp
xorb
insl
aam
or
add
sbb
ret
push
mov
dec
sbb
aad
scas
outsl
adc
dec
aas
add
add
sbb
sahf
dec
je
mov
stos
mov
push
xor
mov
call
inc
mov
adc
cmpl
nop
divl
or
pop
lret
pop
xchg
and
mov
pop
lahf
mov
dec
pushf
repz
cmp
or
sub
xor
cld
mov
sahf
clc
aaa
xchg
inc
fldcw
dec
imul
push
cmp
mov
xor
sub
mov
cmpsl
mov
dec
cltd
in
sti
xchg
mov
loope
lock
ss
inc
imul
xor
pop
push
lcall
mov
mov
insb
xchg
jle
jecxz
sub
nop
dec
pop
shl
aad
and
pop
movsb
fsubrs
loop
inc
test
fisttps
add
sub
xor
fs
jb
mov
cmp
pop
daa
test
test
arpl
mov
icebp
xchg
test
aam
xor
jecxz
cmp
fs
stos
mov
jecxz
xor
stos
rep
cmp
cwtl
adc
shlb
xor
dec
int3
mov
movsb
dec
sub
mov
cmpsl
sub
mov
jg
push
sbb
ss
aas
xchg
ret
aam
mov
mov
loopne
mov
rolb
gs
orl
mov
rorb
sub
xor
pop
cmpsb
mov
pop
sub
movsl
les
xlat
mov
jge
xchg
int3
xchg
je
cld
sahf
outsl
pop
stos
fwait
scas
or
mov
ss
sub
xchg
cwtl
adc
sti
hlt
xchg
aaa
mov
ret
sub
dec
arpl
arpl
mov
int3
mov
jae
push
xor
pop
out
call
adcl
das
cmp
stc
ljmp
in
xchg
dec
push
cltd
dec
scas
adc
push
add
and
fwait
mov
fmul
stos
stc
add
push
lock
outsb
jge
cltd
nop
pusha
js
sti
inc
jb
adc
dec
cmpsb
stos
cmp
pop
pop
or
pop
jecxz
jecxz
cmp
cmp
push
xor
dec
ds
jg
jge
jb
pop
dec
scas
mov
jbe
or
jne
ss
bound
cmp
rol
cmp
jmp
mov
xchg
xor
cmp
xchg
xor
jecxz
sub
ss
nop
xchg
ret
loopne
addr16
sub
inc
dec
dec
add
or
pop
lds
adc
mov
in
xchg
cmc
add
xchg
inc
ds
lods
xchg
cs
add
loopne
hlt
adc
sub
js
push
or
sub
aam
cld
mov
shll
lcall
test
lret
cmp
nop
xchg
ror
adc
repnz
fcmovne
pop
sub
jecxz
out
popa
cld
push
or
aad
cwtl
out
insl
pop
outsb
shll
ret
stos
aas
inc
je
and
jo
cmpl
fs
or
push
lahf
icebp
cmp
gs
cld
push
fiaddl
cmp
mov
sahf
faddl
pop
mov
lods
cli
out
pop
hlt
mov
sbb
in
lock
pop
adc
and
gs
lods
jo
mov
je
fs
insl
and
dec
mov
out
or
adc
aad
cmp
jge
xor
sbb
sbb
or
faddl
enter
imul
stos
push
push
or
into
pop
mov
jno
cmp
xchg
divl
mov
inc
push
fs
pop
jo
xchg
arpl
push
pop
sub
mov
jno
adc
scas
das
push
pop
cmpsb
mov
sub
cmc
filds
cmp
xchg
ficoml
ljmp
rorl
xor
imul
sti
mov
cli
mov
or
cmc
and
sarb
in
les
decl
cwtl
xchg
cmp
fldl
jno
es
scas
mov
rcr
pop
add
adc
cmpsb
add
addl
lds
mov
push
icebp
cmpb
pop
cmp
fnsave
leave
int3
insb
in
ror
mov
orb
cmp
mov
mov
mov
arpl
and
test
outsb
jno
cld
push
aas
fsubrl
mov
push
jno
lahf
in
xor
arpl
xor
push
jo
ret
jnp
inc
inc
stos
test
push
jns
xchg
mov
sbb
pop
lret
sub
test
pop
cltd
in
mov
or
fldt
movsl
ja
sbbl
pop
cwtl
add
aam
mov
lods
lret
jl
pusha
out
sub
movsb
xchg
add
pop
sbb
lcall
push
fisubs
je
stos
popf
cld
push
jg
fdivrp
outsl
inc
arpl
insl
mov
subb
push
xlat
sbb
mov
inc
loopne
shll
arpl
adc
adc
jg
push
js
or
push
push
int3
lods
mov
idiv
jb
data16
imul
icebp
or
fldenv
out
lahf
sub
ret
push
subl
dec
andb
nop
xchg
mov
adc
subb
jecxz
test
cli
adc
imul
jns
out
mov
shl
cmpb
mov
negb
fwait
pop
inc
loop
lock
into
mov
jnp
xor
jl
jmp
mov
jb
lock
dec
insb
arpl
xor
cmp
lods
test
cmp
out
add
fsub
mov
xchg
inc
shll
mov
inc
sub
pop
repz
sbb
test
jbe
jmp
push
sbb
jmp
push
cmp
xchg
int
fstpl
mov
pop
cld
jb
jle
jne
rcl
nop
fimull
cli
jge
fistps
out
push
push
push
outsl
ficoms
jle
fidivl
dec
mov
dec
xchg
xchg
xchg
loopne
add
js
jo
cmpsl
aas
stos
or
lcall
into
xchg
push
call
in
aam
lods
test
xorb
shrb
ret
pop
loop
cmp
ret
pop
stos
push
sub
xchg
inc
cmc
xor
mov
sbb
push
shll
jne
sub
in
pop
inc
test
loop
dec
ret
ret
lret
fbld
into
les
movsb
push
push
fsubs
and
cmpsb
inc
add
cld
adc
rolb
xor
xchg
cwtl
pop
mov
fs
daa
sub
leave
in
popa
ja
cmpsb
xchg
cli
call
push
jnp
mov
xchg
insb
test
nop
js
mov
outsb
adc
jmp
xor
sbb
pop
push
jae
rcll
dec
in
lds
pop
inc
mov
insl
out
sub
and
repz
outsl
add
mov
dec
cmpl
int3
js
mov
pop
cmp
mov
loopne,pn
addr16
mov
inc
xchg
mov
lds
or
fsubs
or
sub
aad
les
sbb
outsb
xor
popa
mov
xchg
xchg
leave
adc
jge
pop
xchg
or
fwait
jnp
mov
scas
aas
aad
or
xor
insl
inc
add
push
scas
xchg
xor
fbstp
mov
out
rcrl
mov
and
jns,pt
outsl
hlt
jo
and
add
xor
pop
hlt
mov
xchg
inc
cmp
jae
movsb
mov
mov
test
pop
cmp
dec
push
loopne
sbb
je
push
divb
xchg
sahf
cmp
lea
iret
pushl
popa
lods
lock
dec
mov
pop
xchg
sbb
mov
cli
sbb
clc
mov
lret
mov
out
mov
and
out
sub
js
rcl
mov
dec
pop
dec
es
mov
inc
es
in
lea
mov
pop
jg
jbe
sbbl
dec
push
ret
insl
dec
nop
cli
cmc
fmull
inc
pop
shll
icebp
jmp
add
call
jg
fdivs
shlb
push
mov
sahf
insb
rorl
adc
push
add
fdivl
cmc
movsl
adc
iret
add
mov
into
adc
daa
cmp
jle
mov
jb
ds
pusha
loop
push
enter
mov
fidivrs
jge
filds
xor
insl
fs
int3
repnz
jns
push
fsubl
movl
pop
int
dec
rcrl
or
sbb
ds
pushf
adc
mov
mov
mov
jbe
jle
test
bsf
mov
mov
sub
lea
mov
push
aaa
fldl2t
sbb
mov
push
dec
push
testl
call
cwtl
or
cmpsl
xchg
dec
xchg
fwait
push
mov
jnp
jo
cmp
xor
insl
lret
pop
scas
or
out
jge
push
push
dec
call
xchg
insl
orl
xchg
jno
pop
pop
bound
out
jmp
lret
aam
hlt
cmpsb
jge
addr16
and
mov
dec
ja
pop
das
inc
add
test
mov
aad
xor
loopne
dec
lock
cwtl
fwait
add
push
leave
rcll
aas
and
js
xlat
cmp
push
mov
cmp
jne
cli
leave
repnz
push
mov
jo
mov
cli
sub
notl
xchg
jg
mov
sub
or
outsl
xor
fnstcw
dec
sti
xor
sub
cmp
lock
popl
sbb
pop
fs
scas
leave
xchg
popf
mov
sbb
mov
out
push
imul
int3
mov
clc
outsb
ret
add
jl
dec
mov
clc
or
movsb
mov
loop
sub
shlb
cli
and
adc
in
cltd
addr16
lds
jbe
mov
sahf
jp
and
inc
mov
testl
scas
sub
sbb
xchg
lahf
jmp
cmp
xchg
mov
xor
in
cmp
ja
movntq
sti
ja
push
mov
aaa
fsubr
adc
inc
bound
out
out
js
movsl
gs
dec
loopne
shlb
jne
pushf
in
ret
jbe
frstor
and
jecxz
mov
js
cmp
pop
scas
pusha
test
cli
cld
decl
aas
mov
or
pop
sbb
arpl
sbb
and
inc
push
push
fstpt
sub
inc
push
add
in
mov
jge
mov
sub
xor
inc
notl
lods
mov
cmp
dec
imul
pop
lds
into
push
inc
aad
test
movsb
leave
jmp
mov
sahf
pop
push
js
test
mov
in
fsubrs
pop
and
mov
insb
inc
xchg
adc
aam
jl
add
xchg
jne
jbe
mov
mov
icebp
dec
sbb
jo
aas
sahf
xor
sub
or
loopne
or
aaa
pcmpeqw
pop
sub
addr16
mov
push
mov
mov
ja
add
sbb
mov
pop
adc
push
mov
aas
or
pop
or
sbbl
jae
pop
jae
dec
xchg
int
mov
sub
sbb
xlat
push
stc
pop
inc
fcmovnbe
dec
dec
xchg
cmp
rolb
aas
xor
cli
fwait
push
mov
mov
pop
data16
ljmp
jne
mov
aas
dec
add
gs
ret
sbb
cmpb
or
fistl
ja
lds
aas
imul
xchg
mov
call
jg
imul
stos
add
add
movsb
sbb
stos
xor
das
test
and
jns
push
jbe
in
add
in
cmp
jb
adc
lock
int3
sti
stc
mov
ficomps
inc
pop
lret
fdivrl
mov
sbb
xor
mov
loop
jg
add
sbb
pop
xchg
in
mov
or
dec
jns
in
lcall
enter
push
int3
cwtl
fcmovu
xchg
mov
cmp
sarl
push
flds
cs
or
inc
xchg
adc
and
sbb
sbb
ds
mov
dec
test
enter
mov
pop
pop
mov
dec
sar
add
in
push
cmpsb
xchg
add
mov
insb
mov
and
pop
je
and
mov
test
arpl
dec
mov
mov
xchg
decb
xchg
into
push
fcmovbe
mov
or
mov
ss
cli
xor
outsl
scas
aad
sbb
rorl
loop
jo
jno
shll
jbe
outsb
subl
int
xchg
int3
ret
orb
mulb
xor
xorb
call
pop
jb
mov
mov
adc
jae
jo
pop
push
xchg
jecxz
stos
addr16
gs
mov
lds
mov
xchg
mul
jl
imul
in
mov
fs
cmp
leave
jp
cmpsl
ret
xor
xor
bound
or
or
test
or
cmp
and
sarl
pop
adc
lock
mov
repnz
pop
mov
and
inc
jge
mov
pop
test
jge
shrb
jns
stos
pop
enter
out
sti
inc
lahf
aam
mov
jmp
sahf
stos
mov
in
out
test
xchg
xchg
push
mov
movsb
cmpsl
arpl
adcb
lock
dec
sub
lods
adc
xchg
in
mov
loope
cmpsl
push
lahf
sub
lods
jg
popa
jmp
jnp
push
divb
fcmovnb
into
mov
dec
dec
xorb
sub
inc
data16
popa
sbb
push
out
or
xor
lds
in
addb
and
cld
add
cmc
jle
out
dec
arpl
inc
repz
fmull
cmp
push
and
cmp
jmp
rcl
fcoms
inc
clc
fnop
aad
imul
loope
rorb
pusha
mov
or
sbb
aad
mov
aam
daa
lret
and
jle
fcmovb
sbb
lcall
sub
stos
cmc
mov
aas
xchg
jne
jo
testb
cmp
cmp
mov
inc
fsubrs
push
gs
mov
scas
aas
cmpsl
repz
pop
push
mov
outsb
leave
insl
jnp
adc
in
stc
pushf
pop
and
sub
iret
xchg
sub
inc
push
fs
inc
dec
les
sub
jg
test
jg
cli
mov
dec
mov
imul
xor
inc
cmp
and
sti
push
pop
add
cld
js
int
xor
sbb
mov
adc
insl
jb
jle
int3
paddb
sbb
mov
leave
pop
iret
aam
add
into
negb
test
mov
dec
pop
int
mov
stos
lds
fists
test
add
test
jg
lds
lods
stos
adc
cmp
mov
jecxz
xor
mov
dec
ja
cmpb
mov
inc
lret
jne
mov
mov
fwait
dec
or
scas
xchg
decb
fmull
inc
inc
jecxz
sub
adc
inc
and
mov
inc
ss
push
out
daa
xchg
or
push
sti
call
pop
data16
inc
xchg
mov
jno
lock
sub
int3
nop
aaa
std
ret
pop
sahf
mov
faddp
sub
jo
push
xchg
dec
outsl
adc
cwtl
mov
pop
clc
in
mov
lcall
stos
mov
cmp
add
in
jno
popa
in
mov
fistpll
add
sbb
mov
hlt
stos
lcall
rcl
add
add
nop
xor
mov
aam
mov
mov
xchg
xchg
push
sub
aam
sub
mov
adc
cmp
scas
in
into
sahf
das
out
std
cmp
lods
or
inc
das
mov
mov
sbb
cmp
push
xor
adc
add
add
xchg
lahf
adc
inc
int3
rcll
or
aam
sub
pop
dec
popa
sub
cmp
jmp
shlb
loope
xchg
repnz
incl
jo
mov
xor
daa
daa
aad
mov
dec
or
push
adcb
out
fwait
mov
cli
add
push
out
cld
ficompl
ret
out
insl
stos
nop
add
add
pop
clc
in
xor
loop
stos
inc
cld
into
xchg
sub
sub
mov
mov
out
in
enter
mov
inc
ret
cmp
arpl
sahf
loop
mov
dec
sbb
imul
and
ret
push
jae
shll
int
xor
cli
aam
cmp
sbb
xor
sbb
stos
cmp
rcll
and
add
out
ljmp
xchg
mov
cltd
mov
xor
lock
pop
dec
xchg
mov
cmpsl
and
or
out
dec
aas
leave
std
aam
jne
push
aad
in
out
cmp
or
packsswb
ficoms
pusha
xchg
xchg
push
mov
sbb
fidivl
sbb
or
test
ss
repnz
sbb
jb
loope
aad
mov
inc
jl
ficompl
or
jne
je
adc
movsb
negl
setb
test
jg
pusha
lods
out
mov
cld
dec
into
clc
cmpsl
dec
push
xchg
xchg
movsb
pop
nop
push
mov
js
nop
rcrl
mov
loopne
dec
and
xchg
das
inc
fdivs
aam
fistps
cld
cld
or
inc
push
nop
mov
fnstenv
in
xor
pop
pop
dec
test
cmp
xchg
std
repz
in
cmp
xchg
jmp
pop
aad
hlt
shrd
add
in
loop
inc
into
sbb
mov
ja
cs
gs
mov
outsb
pop
loope
or
hlt
sub
xor
aas
fisubs
jp
test
insl
jo
pop
jle
push
mov
imul
cmc
cmp
fiadds
fsub
je
repnz
cli
jne
ret
inc
dec
cmp
in
fs
imul
imul
adc
popf
push
mov
scas
pop
and
test
xchg
lods
les
movsb
jecxz
and
cwtl
shll
sub
push
in
mov
push
push
pop
dec
sub
jns
imull
cmc
test
incb
xor
fidivl
xor
out
mov
je
xlat
jp
mov
lahf
sub
aam
rcrb
jbe
mov
dec
enter
push
push
movsb
out
add
inc
subl
cwtl
cmp
shrl
pusha
and
pop
cmpsb
cmp
mov
inc
mov
pop
std
bound
or
cmp
inc
lds
inc
pop
scas
lock
dec
pop
orl
mov
insl
sbbl
adc
sbb
jae
dec
mov
cmpsl
mov
fimull
jbe
pop
fsubl
dec
jl
push
ljmp
xor
or
shlb
or
pop
adc
jno
push
arpl
xchg
shlb
mov
mov
ret
imul
sub
jmp
and
sahf
je
arpl
je
mov
ret
or
mov
mov
adc
lcall
aad
xchg
test
inc
jns
dec
test
lret
lcall
sub
xchg
sub
sti
cmp
cld
mov
xchg
test
mov
jmp
fsubs
xchg
cmp
imul
cmc
mov
pop
mov
or
push
or
cmpsb
dec
xchg
ffree
rcrb
insl
pop
in
je
test
pop
in
fsubl
subl
push
fs
jne
rorl
popf
loop
out
cs
or
push
xor
jbe
fldl
movups
bound
lock
lret
inc
bound
daa
mov
adc
xor
scas
fisubl
pop
les
out
xchg
mov
and
cmp
orb
enter
hlt
add
inc
jmp
out
xchg
aam
add
gs
or
add
push
and
pushf
push
lods
jg
push
push
test
pop
mov
test
cmc
test
cwtl
inc
push
inc
stc
int
and
mov
xlat
gs
scas
add
aas
push
fcmove
xchg
cmpsb
leave
xchg
lods
xchg
inc
xor
dec
jl
add
mov
add
and
in
hlt
and
push
test
inc
jl
in
dec
cmp
loopne
jge
push
out
cmpl
push
imul
xchg
add
add
lret
mov
gs
mov
cs
outsb
adc
rcrb
sbb
out
icebp
in
test
mull
and
push
xchg
pop
daa
xchg
lret
ss
movb
sbb
fs
js
jns
push
movzbw
dec
or
es
or
dec
repnz
xor
and
cmc
pop
fs
mov
xor
addr16
and
xchg
jns
ja
les
andb
in
push
add
add
lret
loope
adc
out
mov
dec
loope
sub
sbb
cmp
xchg
pop
out
fs
flds
in
lea
hlt
xchg
cmpsb
add
fucomip
jne
popf
jnp
mov
dec
in
xchg
or
test
sub
repnz
pop
sahf
jno
pop
aad
cmp
jmp
shrb
xchg
and
ja
jg
lcall
loop
xchg
fimuls
dec
jecxz
jl
shrb
leave
push
pop
divb
loop
pop
pop
jg
popa
std
mov
fsubr
push
and
xchg
xor
jl
cli
pushf
jl
cmp
test
sub
fdivrl
pop
pop
nop
mov
fxch
enter
pop
int3
inc
mov
cmpb
add
adcl
inc
aaa
inc
add
cmp
xlat
jle
and
inc
scas
push
gs
mov
imul
dec
xchg
outsb
lock
data16
insb
sub
adc
insb
lods
xchg
test
cmpsb
inc
sbb
shll
add
fcom
push
scas
or
in
in
stc
cwtl
cwtl
or
jns
fidivs
lret
dec
loopne
push
mov
pop
dec
stos
orb
push
stos
add
cs
xlat
pop
mov
int
loope
inc
or
jg
faddl
fucom
jae
mov
es
lahf
out
mov
test
pop
dec
pop
xor
inc
add
dec
lds
push
pop
in
inc
sub
dec
sti
loope
outsb
push
ljmp
inc
pop
push
scas
cmp
dec
push
inc
add
js
adc
cmp
int3
lahf
mov
mov
mull
dec
lock
pop
addr16
mov
pop
iret
sbb
sub
movsl
xchg
call
mov
into
sub
nop
jmp
sub
movsb
loope
jl
jne
xor
mov
add
into
ds
xchg
sarl
aas
test
cmp
and
mov
mov
icebp
dec
int
clc
aaa
ret
push
outsb
push
ret
ret
and
popa
adc
fwait
lock
sbb
outsb
jmp
shlb
cmpsb
jl
fidivl
or
sahf
jge
jge
and
push
pop
jb
fs
mov
xchg
sub
test
lds
sbb
test
fildll
xchg
stos
inc
arpl
inc
aam
stc
ret
mov
fdivrl
mov
pop
fadds
mov
xor
or
pop
inc
push
jne
pop
sub
xor
leave
dec
adc
rol
or
mov
dec
cmpsl
lods
sub
int
daa
pop
rcll
sbb
cmpsb
xorl
int
mov
inc
jbe
sbb
sarl
hlt
ss
push
dec
jmp
sub
shlb
sub
rorb
jl
push
loop
xor
jmp
push
jmp
push
push
sbb
and
icebp
insl
mov
xchg
cld
xor
xchg
xchg
xor
sbb
out
lcall
call
aad
adc
movsl
push
jae
in
mov
xor
add
jno
xor
fldt
or
ds
lret
jg
adc
fdivrl
hlt
pop
pop
lret
adc
inc
mov
ja
stos
sbb
adc
jbe
pushf
sbb
in
push
dec
fnsave
jae
sbb
aam
adc
gs
lahf
test
stos
cltd
rolb
rorb
sub
jo
mov
lds
fidivrs
sbb
mov
sahf
adc
mov
xchg
cli
dec
pop
sub
iret
inc
xchg
jmp
xor
adc
xchg
pop
inc
rorl
mov
mov
pop
rclb
out
xor
sub
dec
cmpsb
push
sbb
mov
add
cli
push
cs
mov
mov
outsb
sbb
les
in
mov
push
sahf
adc
xchg
sbb
jecxz
xor
call
cli
xchg
fiadds
test
pop
insl
shlb
je
lods
nop
lcall
arpl
les
repz
sub
mov
jne
mov
int
xor
adc
dec
pop
mov
test
push
mov
mov
jle
mov
jl
push
xor
imul
pop
add
mov
sbb
push
fisttps
add
jns
jns
loopne
subl
imul
push
push
jecxz
sub
xor
add
or
test
add
push
fstpt
roll
push
fisttps
scas
std
popa
ficompl
push
or
cld
das
mov
bound
out
mov
xor
jmp
scas
inc
sbb
ficoms
fwait
addr16
cli
ja
add
sbb
pop
mov
outsb
outsb
aam
push
mov
inc
sbbl
leave
cmpsb
mov
inc
push
cmpsl
xor
xchg
sub
loop
dec
cmp
mov
aaa
pushf
jmp
int3
inc
xor
lret
pop
mov
jge
xchg
mov
lock
mov
jl
xchg
adc
mov
cmpsb
sbb
jmp
add
sub
je
cwtl
in
lea
outsb
daa
ds
add
aad
dec
inc
stos
imul
push
xchg
popa
inc
cmp
add
cmp
xor
push
sbb
cmp
mov
cs
nop
pushf
dec
mov
push
icebp
mov
push
jmp
add
sub
mov
push
pop
mov
mov
iret
sub
mov
xor
psubsb
xchg
mov
mov
jae
addl
sbb
pop
add
ja
or
js
and
out
xor
pop
jecxz
ss
mov
leave
xor
lods
in
call
dec
mov
dec
orl
pop
mov
in
add
add
dec
or
mov
xor
push
push
test
fs
inc
mov
push
out
stc
xchg
mov
in
mov
idivb
sbb
jge
sbb
test
ret
cmp
jne
jg
in
stc
adc
fldl
push
and
rcl
sbb
and
pop
mov
push
ja
fisttpll
mov
pop
lret
int3
xor
xor
cs
mov
mov
and
sarl
lahf
xchg
sub
pop
jg
nop
clc
pop
stos
add
lock
mov
jge
in
mov
xlat
push
jmp
xchg
clc
add
add
mov
insb
mov
xchg
call
shll
lret
addr16
jle
xlat
pop
pushf
fisubrl
xor
sbb
mov
lods
rol
sub
stos
mov
ret
das
shll
in
jnp
inc
mov
insb
je
divb
iret
mov
hlt
push
sbb
mov
std
cmpsl
sbb
push
or
or
dec
fisubs
sub
add
mov
xor
cmp
mov
fdivrl
stos
hlt
xchg
xchg
mov
enter
sbb
push
jns
push
cltd
in
push
cli
sbb
mov
mov
out
sarb
mov
pop
pop
lock
out
imul
sbb
incb
sbb
in
or
shll
nop
jl
push
mov
inc
shlb
mov
pop
hlt
add
sub
xchg
add
or
pop
cmp
sbb
ds
cmp
mov
ja
sub
xchg
add
aad
jno
mov
hlt
cmp
insl
cld
jg
imul
push
movb
pop
dec
lret
dec
mov
outsb
cs
cmc
outsl
lods
cltd
add
in
in
mov
inc
enter
je
repnz
popa
sbb
sub
mov
icebp
loopne
pop
lods
sbb
mov
push
pop
in
push
adc
sub
jge
stos
and
xchg
mov
arpl
mov
pop
xor
leave
pop
lds
pop
adc
cld
adc
inc
adc
dec
mov
xchg
rol
push
mov
dec
jp
fists
adc
mov
out
imul
mov
sbb
adc
inc
lea
movsl
mov
jae
mov
fwait
adc
xor
inc
hlt
and
clc
dec
jle
bound
fstpl
cmp
sti
daa
inc
into
aad
add
jecxz
aas
dec
ds
inc
or
or
ds
push
ss
push
sub
sub
sbb
push
jb
aas
and
lds
ds
bound
lret
xor
jecxz
call
mov
pop
cmp
and
ss
inc
jb
in
cwtl
dec
and
mov
cmp
lret
pop
cwtl
int
or
jns
pop
jb
in
repz
cltd
xchg
xchg
in
sbb
mov
mov
out
xor
fidivrl
and
out
scas
mov
outsb
mov
es
mov
lock
cli
jae
and
das
lcall
fmul
lods
or
dec
in
adc
sbb
dec
ud1
add
call
inc
and
add
mov
movsl
mov
enter
xlat
aam
push
jmp
inc
nop
fs
mov
add
int3
movsl
loop
fwait
pop
arpl
xor
jg
mov
dec
addr16
xchg
cwtl
lods
shlb
ret
into
in
aaa
mov
movsb
in
sbb
jmp
push
and
xor
orb
mov
cmp
pop
push
add
inc
bound
vmovlpd
ljmp
repnz
cmp
dec
nop
imull
lea
dec
int
and
insl
inc
push
mov
xchg
inc
pop
pop
out
xchg
addb
lret
jle
fwait
loopne
test
push
loop
jle
divb
movsb
sub
jecxz
cmp
xchg
mov
sbb
pusha
or
cwtl
enter
outsb
lahf
mov
outsl
xchg
mov
fs
mov
xchg
push
jb
inc
push
jp
in
pop
mov
subb
cmp
ficoms
popa
outsb
and
dec
out
sbb
inc
repnz
pop
jbe
lods
nop
lcall
mov
lds
es
stos
cli
or
mov
in
mov
andb
fsubrl
rorb
dec
or
push
pop
adc
push
notb
jno
lcall
pop
aad
cmp
das
std
push
xchg
sub
adc
cwtl
mov
in
pop
test
or
push
jae
mov
ss
je
aas
xchg
xor
or
mov
or
ja
push
cmp
pop
fsubrp
popf
lcall
cs
inc
xchg
jae
bound
test
mov
into
leave
or
cwtl
popf
hlt
repz
push
push
add
mov
mov
popl
aaa
out
xchg
fmull
push
shlb
mov
sbb
mov
and
xchg
mov
rcrb
mov
sbb
push
addl
bound
lods
ret
sbb
cmp
out
out
loope
inc
jle
inc
hlt
mov
imul
outsb
bound
nop
sti
insl
insl
mov
xchg
jecxz
outsl
movsl
or
popf
dec
push
mov
mov
mov
xchg
dec
xchg
inc
add
or
pop
daa
in
sub
dec
mov
mov
push
sub
mov
repnz
fwait
mov
and
push
pusha
dec
xchg
cmp
add
sbb
and
mov
xor
add
sbb
aad
mov
pop
loope
dec
sbb
cmp
jp
out
push
mov
mov
and
jbe
ljmp
add
dec
inc
sbb
loope
cmpsb
pop
shrl
repnz
jle
add
dec
dec
in
jl
ficompl
mov
ja
cmp
jns
sbb
mov
into
out
mov
sub
inc
decl
lods
cmpsb
ret
pusha
mov
sbb
add
sub
outsl
cmp
aas
fcmovu
lods
pop
lcall
movsb
mov
stos
movsl
inc
stc
nop
xchg
push
popa
out
xor
add
cwtl
pop
xchg
int
stos
inc
cmpsl
gs
cmpl
loop
sbb
addr16
cmp
xchg
pusha
xor
or
xchg
adc
sub
mov
das
pusha
lcall
cli
test
xchg
filds
xor
test
dec
and
shll
jo
das
subb
cmp
loope
sbb
adc
or
inc
push
or
out
jge
stos
ja
outsb
fdivl
call
jno
out
add
jo
in
std
loopne
sub
sub
bswap
or
sahf
fisttpl
popf
stos
push
bound
lds
jge
enter
popa
divl
inc
sbb
cmp
mov
decb
dec
and
es
arpl
mov
int3
jnp
inc
mov
fidivrl
push
inc
ret
inc
pop
push
filds
bound
cld
int3
jne
test
xlat
xor
cltd
push
jnp
int3
push
stos
cmpsl
sub
jecxz
negb
pop
cli
in
fadds
cmc
mov
inc
pop
cmpb
adc
nop
cmp
scas
loop
test
jbe
mov
lock
test
mov
push
ja
xchg
ds
pop
jnp
mov
jno
ficoml
in
icebp
add
push
repnz
pop
mov
dec
fisubl
dec
mov
idivl
jo
sub
into
lea
mov
or
lret
xchg
cmp
xchg
lcall
out
push
mov
jns
cltd
repnz
add
scas
cmp
or
jne
inc
in
and
or
fcomi
sub
adcl
js
push
and
ret
aam
popa
cld
jo
inc
scas
shrb
mov
xor
fwait
sub
inc
nop
xchg
pop
mov
out
pop
popf
push
add
add
sbb
mov
rorl
pop
push
inc
data16
scas
aaa
mov
movsl
or
xchg
icebp
push
std
popa
call
add
jp
lret
icebp
test
jbe
add
fwait
or
movsb
push
push
push
stc
sbb
test
frstor
out
xchg
in
mov
xchg
sub
mov
les
pop
pop
inc
ret
clc
sahf
sub
pop
mov
push
dec
enter
cltd
fucomp
add
xchg
sbb
inc
pop
shrb
cli
pop
jae
mov
sti
xor
pop
xchg
flds
mov
inc
xchg
aas
or
lea
filds
sbb
dec
lcall
and
xlat
div
repz
cmc
inc
xor
and
pop
scas
pop
aad
add
add
in
scas
adc
jmp
stc
push
and
or
fisubrl
mov
sbbb
sbb
mov
sub
into
push
adc
fstpl
mov
mov
lds
cmp
into
and
mov
dec
je
fistps
lods
lret
mov
fwait
das
mov
out
mov
push
aaa
dec
mov
hlt
lds
push
mov
imul
and
out
sbbl
xor
test
sahf
scas
push
and
outsl
shrb
cmp
es
xchg
stc
popa
in
js
movsb
pop
sbb
gs
mov
mov
adc
loop
scas
and
pop
ljmp
mov
dec
enter
sbb
add
mov
mov
mov
fbstp
movsl
les
sbb
jbe
movsb
jl
aam
push
repnz
gs
cmp
in
add
pusha
ja
xor
pushf
dec
and
psubsb
cmp
ret
movsb
enter
jg
std
inc
sbb
or
ljmp
int3
leave
pop
pop
pop
mov
adc
or
popa
enter
or
mov
adc
pop
shrb
xor
push
aas
sbb
mov
out
addr16
out
les
icebp
xor
filds
add
cmp
imul
mov
inc
and
rorl
cld
xor
in
mov
pop
xor
mov
inc
scas
xor
fmull
std
into
ret
adc
inc
jae
ficomps
pop
and
fiadds
mov
lea
stos
jg
pop
and
pop
in
lret
inc
icebp
outsl
subl
cmp
ss
pop
xor
cmp
jp
test
cmpsl
cmp
in
fistpll
shlb
ljmp
enter
push
push
mov
inc
lahf
in
lret
imul
add
cs
stos
cmp
inc
xorl
dec
imul
inc
mov
insl
inc
sub
mov
stos
out
jb
pushf
outsl
nop
data16
inc
pop
and
int3
lahf
enter
lret
dec
adc
andb
aad
fldcw
and
xor
popa
add
pop
add
ljmp
lcall
hlt
jle
pop
mov
jae
stos
jo
and
mov
inc
cmpsb
call
mov
mov
mov
xorb
mov
add
or
xor
pop
loope
push
cmpsb
scas
hlt
jecxz
inc
scas
imul
adc
jo
mov
in
mov
add
xchg
scas
shrl
xchg
inc
cs
sbb
and
int
mov
bound
and
ds
loopne
mov
jge
mov
mov
and
shlb
pop
pop
arpl
cld
ljmp
push
xlat
inc
cli
notb
cmp
push
lock
pop
leave
xchg
mov
xchg
das
pusha
mov
dec
aas
inc
push
inc
sbb
jge
pop
subb
sub
loopne
cmp
adc
mov
dec
test
dec
leave
jmp
fwait
aas
call
les
insl
cmpsl
pop
loope
pop
xchg
sbbb
insl
ds
addl
in
mov
pop
and
sahf
mov
scas
dec
xor
mov
imul
mov
sbb
add
add
adc
fsub
push
cli
push
ljmp
push
nop
pop
jl
insl
lds
pop
aaa
cmp
cmp
cwtl
ss
or
scas
or
sub
pop
xchg
mov
in
aad
mov
adc
adc
ret
dec
sbb
cld
xchg
mov
cli
mov
sbb
std
lods
adc
push
arpl
rcll
in
ret
ret
ror
and
icebp
mov
fdivrs
jl
add
xchg
sbb
cmpl
out
push
orl
sarb
inc
lods
mov
outsl
pop
cmpsb
xor
cmp
jp
sub
mov
add
mov
ret
inc
xchg
rolb
je
pop
imul
cmp
push
mov
test
cmp
and
cmc
mov
dec
dec
test
lods
jae
dec
jne
push
push
imul
rorl
jecxz
stc
stc
jmp
cs
sub
pop
shrl
jmp
mov
push
cmp
cmp
jp
push
in
stc
jne
jo
shrl
add
mov
pop
pop
fisttps
jg
xchg
mov
divb
push
push
out
push
lcall
xor
fldl
xor
sub
imul
pop
movsl
push
xchg
aas
mov
add
shlb
and
rol
repz
int3
add
jmp
rclb
ret
popf
jb
xchg
cmp
cmp
mov
arpl
push
int3
jo
mov
sbb
ret
outsb
or
xchg
cmp
nop
push
frstor
lcall
idiv
loop
stos
rcl
mov
push
fnstcw
cmp
or
push
xchg
dec
sarl
jmp
fildl
add
inc
xchg
in
inc
shrb
push
mov
mov
cmc
gs
pop
push
inc
mov
mov
outsb
dec
sbb
scas
pop
ficompl
jle
inc
std
out
jo
xor
fs
stos
push
pop
sub
cmpsl
popa
push
movsb
sbb
push
pushl
sub
pop
scas
divb
or
sbb
dec
xorl
add
sub
xchg
mov
push
mov
aaa
pop
hlt
lcall
dec
cmp
rcrl
les
arpl
ljmp
stos
cmc
shll
loopne
iret
mov
jle
sub
sbb
cmp
xor
outsb
lret
push
aaa
rep
add
mov
nop
add
pop
enter
xor
mov
movsl
stc
dec
ja
jns
jno
in
shlb
movlps
mov
loop
dec
pop
lret
rorl
mov
mov
loopne,pt
or
out
lock
and
mov
xchg
icebp
outsb
mov
push
or
sbb
xchg
aas
xchg
inc
cwtl
mov
cs
fwait
adcb
sub
imul
nop
pop
sub
cmpl
mov
setnp
lret
push
pusha
mov
adc
push
clc
inc
aam
mov
mov
in
jmp
or
lcall
test
mov
daa
nop
cmpsl
jle
push
and
outsb
push
sarl
test
into
jb
fistps
lret
jl
ljmp
jns
mov
test
lds
xchg
pop
mov
sbb
xor
xchg
xchg
out
test
cld
jmp
mov
rclb
sub
stos
add
pop
fildll
rolb
movsb
cmpsl
jbe
repz
repz
and
js
xchg
nop
jns
iret
or
mov
sbb
sub
nop
mov
negb
ss
jnp
mov
or
outsb
push
ja
loop
pop
pushl
repz
add
jno
ficomps
cmp
cld
mov
dec
and
add
inc
xchg
incl
rclb
repz
in
inc
dec
and
xchg
and
sub
inc
xchg
test
rcr
loope
repz
and
jmp
mov
sub
pushl
push
dec
pop
iret
inc
mov
mov
ljmp
flds
or
inc
xchg
fs
rorl
mov
push
mov
mov
mov
jl
hlt
fstpt
enter
pop
gs
xchg
lahf
cwtl
push
stc
sarl
sbb
xor
add
inc
lcall
stos
out
pop
cmp
das
xor
add
outsl
out
and
sarl
loopne
add
lret
out
mov
popa
mov
and
fdivr
ficoms
cmp
lahf
movzwl
inc
xchg
mov
cwtl
daa
lds
pop
mov
dec
inc
push
out
xchg
mov
add
loopne
push
lods
pop
in
idivl
hlt
xor
jnp
mov
flds
adc
fninit
jl
dec
add
cld
aad
aas
test
inc
or
rep
pusha
sub
xor
sbb
es
pop
data16
lods
cltd
mov
add
das
pop
sbb
imul
jne
dec
xchg
insb
cwtl
jg
cli
jecxz
mov
loope
not
cltd
mov
mov
outsb
sahf
or
adc
jno
mov
xchg
push
xchg
push
iret
fidivl
insl
dec
pop
mov
mov
push
fildll
cmpsl
mov
push
jecxz
movsl
xorb
movsl
pop
ret
jp
insl
lret
jge
iret
jl
ret
push
out
or
jne
lahf
xor
iret
mov
icebp
scas
inc
pop
fldt
cmp
pop
mov
pusha
dec
mov
shll
pusha
in
sub
xor
xchg
jnp
xlat
add
jmp
popa
les
pop
out
or
adc
dec
data16
aad
sub
in
cmpsl
inc
ja
cmpsb
or
lds
outsb
dec
pusha
pop
pop
push
xor
loope
scas
out
stos
pop
dec
add
mov
mov
jg
adc
adc
les
lods
addr16
mov
das
dec
int
loopne
mov
aaa
mov
popa
add
hlt
mov
pop
dec
and
shlb
pop
adc
push
loopne
mov
ficomps
and
dec
inc
inc
sub
xchg
cmpsl
jnp
pop
sbb
outsl
cmp
mov
popa
ljmp
pop
aad
dec
cmp
cs
scas
andb
sub
or
ret
push
jecxz
arpl
mov
outsl
mov
ret
shl
pushf
lcall
repz
divl
pop
inc
pop
xchg
inc
call
xchg
std
cmp
push
xchg
mov
ret
dec
mov
cmp
outsl
inc
imul
lods
je
sub
sti
mov
pop
lcall
mov
mov
aas
sahf
lock
fcomps
sub
sub
cmp
cmp
xchg
pop
adc
lahf
push
sub
mov
pop
imul
inc
pop
imull
xor
pop
scas
mov
pop
aam
cmpl
leavew
arpl
cmpsb
mov
xor
adc
clc
mov
push
mov
cmp
mov
xchg
stos
movsl
hlt
mov
and
mov
ljmp
cmp
iret
jbe
inc
addr16
loopne
dec
gs
cli
sahf
dec
xor
jg
sbb
mov
mov
or
push
sbb
ja
adc
cltd
add
in
lea
gs
add
pop
fistl
ds
out
shll
add
sub
out
pop
and
imul
or
xor
les
int3
shl
fcompl
inc
movsb
inc
es
jge
imul
sbb
jno
cmpb
adc
ret
int3
adc
push
mov
sti
and
xchg
fwait
sbb
mov
data16
mov
mov
sbb
pop
in
pop
sbb
mov
or
inc
mov
dec
xchg
cmp
xchg
and
mov
fwait
mov
fidivl
mov
sbb
or
test
adc
js
push
lds
push
xchg
mov
gs
xor
int3
mov
mov
xchg
cwtl
and
sbb
sbbl
inc
outsb
lcall
aam
fnstcw
fdivrs
jo
jb
sar
in
push
jo
fildl
sbb
mull
dec
sbb
add
jbe
cltd
hlt
cli
imul
jbe
int3
fisttpl
mov
pop
push
cmpsb
out
dec
push
push
jge
adc
inc
or
xchg
push
sub
mov
pmaddwd
in
scas
dec
scas
mov
sahf
sub
push
mov
mov
popa
pop
iret
pop
mov
mov
sub
cld
rorl
xchg
push
mov
and
mov
loopne
cli
inc
push
cwtl
sbbl
es
push
out
mov
xchg
out
call
or
add
inc
push
push
daa
pop
lret
fisttps
in
inc
mov
int3
fsubs
in
lret
jecxz
shrl
sar
decl
imul
xor
sub
ds
xchg
loop
lret
and
push
test
sbb
insl
dec
push
adcb
popf
call
xor
sbb
jae
stos
inc
lcall
les
adc
stos
repnz
out
sbb
fs
fcoml
enter
cltd
cmp
les
leave
push
clc
int
push
xchg
adc
inc
in
js
iret
jmp
adc
xchg
cmp
pop
pop
xor
jnp
mov
adc
imul
jb
xor
push
arpl
xor
mov
pusha
flds
mov
loop
mov
cmp
push
movsb
mov
inc
xrelease
xchg
int3
es
addr16
imul
shrl
and
stc
pop
mov
mov
push
sbb
fisubs
dec
or
add
repz
lcall
jb
test
aad
cmp
ljmp
and
pushf
dec
inc
jae
fs
jno
xor
insl
cmpsl
ljmp
sbb
repz
dec
loopne
pop
sbb
xor
push
sbb
or
cmc
repz
pmullw
outsl
xchg
ja
cmc
adc
push
fnstsw
insl
aas
leave
imul
xchg
inc
ret
adcb
scas
pop
jo
loop
ret
leave
sub
mov
inc
inc
sbb
push
cmc
test
data16
add
mov
fstpl
mov
inc
stc
xchg
sarl
add
and
mov
or
push
repnz
xchg
inc
pop
adc
int3
imul
rolb
xor
cli
adc
daa
xchg
sub
sbb
stc
fs
pop
xchg
lcall
mov
test
inc
push
loope
in
mov
or
imul
inc
add
int3
pushf
scas
sbb
and
dec
inc
pop
rorb
mov
imul
jnp
popa
push
fstps
and
aaa
or
rcrb
in
pop
rcl
mov
add
mov
push
sbb
dec
adc
xor
and
or
lods
mov
jne
in
cmpb
sub
jmp
jge
out
push
not
lcall
sti
in
leave
xchg
std
fcmovb
subl
lea
es
or
dec
mov
aad
outsl
icebp
mov
push
jnp
lret
push
in
push
or
inc
inc
mov
arpl
push
mov
jmp
add
jbe
pusha
outsb
pop
jno
in
lret
xor
cmp
jmp
xor
movsb
mov
dec
fadd
fsts
test
push
ja
pop
inc
setns
dec
cs
pop
lret
repnz
sbbb
xchg
in
movsl
xchg
daa
scas
jno
je
dec
pop
and
cmp
adc
mov
mov
mov
data16
in
icebp
popa
sbb
imul
cltd
addr16
fisttps
lret
es
push
or
cmpsb
xor
cs
mov
rclb
xchg
test
jl
adc
dec
loop
dec
push
enter
movsb
sti
bswap
sub
gs
add
les
out
js
jns
sbbb
xchg
mov
or
and
test
or
popa
insl
int
stos
push
fstl
aaa
lahf
sti
addl
arpl
mov
xor
xlat
jl
sub
inc
enter
and
das
ljmp
sub
add
bound
in
mov
fisttpll
push
jno
loop
rcr
mov
xlat
pop
mov
sub
shll
jne
jp
sbb
lods
mov
mov
pop
and
cmpsl
fwait
int
adc
sub
int3
and
popa
push
sub
arpl
sbb
adc
fnsave
push
add
je
loopne
out
add
or
xor
cmc
popa
std
in
lea
rorl
ffree
jno
pop
xchg
cmc
push
mov
xchg
dec
xchg
stos
jnp
mov
push
mov
shr
rolb
mov
mulps
mov
mov
sahf
and
mov
stos
xchg
cwtl
idivl
pop
mov
fisttpll
je
jo
xor
mov
lret
pop
shrl
mov
adc
push
lock
jp
dec
test
xor
stos
pop
push
out
jge
cmp
adc
fbstp
add
push
jp
arpl
sbb
cmp
ljmp
jl
add
push
mov
push
iret
in
or
inc
xor
adc
fstps
je
mov
call
addr16
mov
push
lcall
enter
jmp
cmp
cmp
pop
and
sub
pushf
lods
je
cmp
and
jns
addl
sbb
push
mov
adc
or
rcrl
jmp
popa
cli
dec
movl
lods
jmp
add
iret
aad
iret
jno
fwait
clc
repnz
dec
mov
stc
dec
outsl
stos
cltd
je
aas
shl
pop
mov
mov
add
jge
ret
xor
pop
jmp
movsl
mov
mov
xchg
mov
and
sub
data16
push
inc
bswap
and
outsb
pop
mov
mov
outsl
pop
jp
iret
inc
sar
mov
lods
jle
pop
sbb
fisttps
xchg
leave
mov
repz
mov
mov
add
out
mov
inc
rorb
jo
sbb
loop
jmp
icebp
or
fisubl
pop
xor
scas
pop
outsb
mov
outsb
push
mov
and
jmp
arpl
push
gs
xchg
jns
je
pop
shll
pop
push
lea
jle
repz
inc
clc
movsl
or
jge
mov
loope
jne
icebp
xchg
pop
out
pusha
lret
push
enter
and
lods
scas
pusha
mov
arpl
sub
jbe
mov
fdivs
mov
ds
mov
call
idivb
js
das
xor
mov
les
shl
lods
in
pushf
iret
sub
mov
mov
cwtl
out
sub
push
adc
sub
push
leave
dec
cmp
and
cmp
adc
dec
add
out
lcall
xlat
jno
sub
scas
inc
mov
ret
dec
xchg
xor
jbe
inc
mov
gs
sti
or
cld
jge
jle
clc
stos
xchg
inc
add
je
in
push
test
lds
push
cmc
or
push
roll
lea
movb
cmp
and
lcall
das
mov
mov
rolb
mov
in
out
xchg
into
xor
in
inc
cli
jg
sub
mov
scas
pop
out
popa
and
imul
mov
insl
adc
mov
fwait
lret
xchg
out
push
loopne
dec
xor
mov
addb
dec
call
push
repz
divl
cld
xor
mul
lahf
insb
sub
adc
imul
lods
jge
sub
int3
cmpsb
jecxz
lock
xchg
das
daa
xor
push
pusha
bound
movsl
std
bound
subl
pop
jmp
cmc
fld
pop
xor
dec
addb
fs
pop
xchg
cmp
out
push
sbb
cwtl
ds
test
push
mov
ja
test
and
inc
ret
or
in
mov
inc
xlat
sbb
pop
cwtl
or
add
clc
test
dec
jae
xchg
push
stc
mov
jl
push
push
lahf
sbb
int3
insb
sbb
insb
jnp
pop
xchg
aaa
loope
dec
stos
lahf
cmp
roll
adc
sbb
dec
mov
push
test
cmpl
out
mov
xchg
dec
mov
ja
jns
cmp
dec
pop
sti
in
mov
mull
lods
mov
shlb
out
lds
fwait
stos
xchg
pop
shl
add
repnz
decb
or
mov
inc
insb
repnz
daa
popa
jmp
mov
push
xchg
vpminub
add
pusha
push
cli
mov
dec
dec
push
enter
xor
inc
cmp
imul
sub
ret
sbb
sti
mov
cwtl
fnstcw
in
cmpsb
xchg
mov
iret
jno
push
out
dec
jb
faddl
add
adc
test
rcl
xchg
xor
inc
aaa
inc
mov
cmpsb
test
push
insl
arpl
add
and
hlt
rcrb
in
or
push
jo
lds
or
sarb
xor
adc
adc
clc
cs
mov
xor
cmp
push
add
inc
rorb
mov
mov
es
xchg
popa
rorb
push
fs
cmp
mov
mov
popf
and
aam
sbb
pop
mov
or
fstpt
sti
rcrl
aas
inc
xchg
and
xchg
mov
cmp
jg
sti
dec
xor
cmp
add
popf
mov
jge
xchg
in
in
cmpsl
arpl
hlt
cmc
lea
aas
or
jge
out
out
push
pop
fcom
mov
aas
mov
add
inc
jg
bound
lods
dec
std
mov
popf
test
les
push
mov
mov
insb
test
ljmp
xchg
dec
outsb
daa
aaa
call
inc
mull
push
xchg
out
std
gs
push
jno
testl
pop
sub
out
mov
and
adc
arpl
push
loopne
dec
rolb
test
daa
fyl2xp1
imull
out
ficompl
dec
insl
pushf
shrl
push
dec
sbb
mov
mov
ret
jb
push
enter
dec
fmuls
sub
clc
dec
rcrb
dec
out
jp
cli
mov
js
movsl
inc
and
imul
fidivl
fs
xor
add
ds
lods
icebp
rolb
aaa
pop
imul
xor
es
nop
mov
fneni(8087
xor
int3
divl
push
adc
icebp
lahf
sub
inc
je
mov
push
pushf
aad
dec
das
leave
push
jp
adc
cmpsb
lods
leave
fsubrl
ret
hlt
sub
mov
and
int
ficoml
subb
out
aam
push
jns
inc
repnz
jp
sub
test
mov
pusha
pop
add
test
outsw
je
or
mov
sub
sbb
sarl
stos
add
mov
fwait
add
out
test
sub
fcompl
mov
mov
sub
mov
mull
dec
pop
adc
sahf
incl
or
icebp
sub
mov
push
jmp
ja
jmp
inc
jbe
or
inc
aas
into
fstpt
mov
imul
mov
mov
int
test
clc
ja
cld
shlb
and
and
enter
sub
repz
inc
or
or
mov
loopne
aaa
repnz
pop
cmp
push
adc
mov
jb
adc
add
add
not
pop
sub
xchg
inc
arpl
sahf
mov
popl
adc
std
xor
addr16
and
lods
insb
adc
and
xorl
add
jmp
pop
xchg
out
xchg
loope
fisttpll
inc
jae
dec
ret
lret
add
push
mov
adc
aas
mov
fsubs
popa
cmp
insb
sub
sub
popf
push
popa
lods
aam
jmp
nop
or
mov
bound
std
adc
loop
and
pop
xlat
jp
ret
clc
pop
dec
rol
dec
add
cs
dec
cmp
daa
add
aam
popa
dec
subb
mov
pop
push
fcoms
mov
sarl
push
inc
cmpsl
lods
mov
push
mov
loopne
daa
je
rclb
sub
stos
cmp
fsubrs
dec
xchg
pop
push
ja
fidivrs
xor
test
inc
mov
jg
shrb
les
jnp
das
lods
or
sarl
jmp
cmp
push
fxch
push
inc
jge
out
in
out
xor
sti
lods
fcmovbe
push
adc
data16
adc
lock
pop
movsl
hlt
mov
mov
pop
movb
orl
test
inc
jmp
mov
ja
movd
das
adc
ds
sub
and
push
dec
imul
adcl
push
test
daa
pop
mov
pop
cmp
or
dec
pop
lret
xchg
lret
lds
in
imul
pop
jl
mov
cmp
xor
mov
mov
pop
add
popa
mov
int
cmp
and
sub
scas
popa
xlat
into
mov
mov
pop
cli
and
xchg
sbb
jle
into
mov
dec
test
add
push
mov
lods
sub
rorl
into
mov
js
dec
aas
pop
push
xor
lcall
out
mov
adc
sub
push
test
les
js
adc
adc
adc
adc
stc
test
xor
mov
mov
add
sub
sub
fwait
sub
aas
pop
cmp
test
sub
in
in
push
mov
jmp
lds
xchg
mov
fisttpll
push
pop
push
inc
cltd
js
lds
sbb
dec
or
movl
xchg
bsr
and
arpl
sub
cmp
cmpsl
dec
cmc
push
movsl
aaa
neg
or
inc
lcall
lahf
adcb
jge
test
stc
enter
cmp
fcmovnbe
adc
je
pushf
sub
sbb
arpl
pop
add
pop
jns
xor
push
dec
mov
sahf
lods
push
xchg
roll
scas
mov
pop
push
mov
jg
sbb
pop
ljmp
loopne
hlt
into
ret
ficompl
jno
mov
fldt
test
xchg
enter
lcall
lret
es
bound
xor
rclb
ficoml
dec
jmp
adc
pop
shrl
shlb
inc
sahf
dec
in
vprotw
rcll
jg
int3
inc
cltd
subps
jae
in
mov
test
gs
cli
inc
mov
repnz
sub
cmp
ror
or
rcr
gs
and
mov
or
popf
mov
dec
mov
sar
jg
dec
xlat
inc
and
clc
adc
ja
dec
test
mov
and
pop
fnstsw
mov
idiv
insb
insl
stos
ja
xchg
lahf
and
xlat
cwtl
jmp
outsl
mov
jns
mov
hlt
pop
dec
xchg
mov
data16
jo
push
arpl
mov
ja
inc
add
rorl
hlt
rorb
jmp
div
ret
loopne
jae
and
lods
out
push
mov
add
mov
adc
mov
decl
movsl
or
in
push
dec
sbb
mov
xchg
int3
mov
mov
jne
int
xchg
pop
push
sbb
push
out
and
in
mov
pop
mov
cli
repz
arpl
mov
pusha
sub
pushf
imul
xchg
mov
dec
and
hlt
inc
gs
push
push
xchg
xchg
ret
lret
xchg
imul
data16
cmp
mov
cli
pop
mov
in
in
cmp
or
xor
loopne
movb
xchg
aam
bound
fimull
or
popf
mov
jmp
jno
inc
push
fs
jo
aaa
pop
cltd
scas
icebp
push
dec
mov
cmp
sub
movsb
cmpb
add
add
outsl
dec
sbb
repz
sbb
sbb
repz
and
cmc
aas
or
xor
das
dec
mov
mov
sti
lods
inc
xchg
mov
leave
in
dec
cltd
arpl
arpl
push
es
jmp
in
cld
mov
inc
xchg
add
icebp
bound
sub
push
js
ja
cmp
dec
inc
xchg
or
push
xchg
dec
dec
pusha
xchg
add
xchg
xor
mov
rolb
xchg
xchg
loopne
lods
std
push
int
aad
icebp
xchg
cmpsl
xchg
sub
rol
insl
cmp
test
mov
pop
rolb
je
cmp
push
mov
mov
xchg
push
mov
daa
in
flds
jle
pop
movsl
hlt
int3
or
loopne
addr16
sbb
xor
inc
outsl
mov
push
movsb
stos
xchg
ficoms
pop
pop
test
mov
jge
out
loope
cmpsl
je
or
ss
int
mov
mov
les
mov
lcall
lret
das
or
insl
fmull
push
dec
call
ss
ss
and
movsl
and
testl
jo
sbb
ret
aam
pop
call
sbb
pop
shrl
les
imul
cmpsb
sahf
xor
xchg
sub
ljmp
sub
sbb
dec
add
imul
daa
pop
pop
or
leave
sub
aam
pop
jbe
mov
enter
in
pop
mov
dec
out
mov
fwait
xchg
outsb
xor
call
mov
popl
mov
mov
fildll
mov
ljmp
lds
mov
loop
xor
xor
ja
mov
imul
mov
outsl
adc
inc
fidivrl
sbb
orb
jb
ljmp
fnsave
repnz
mov
ss
jnp
scas
sub
test
notb
lcall
xchg
in
aam
jb
push
enter
mov
mov
mov
inc
mov
jae
repz
xchg
daa
hlt
cmc
js
xchg
addr16
xchg
push
and
xchg
jmp
jns
data16
sbb
scas
in
and
stos
idivl
cmp
iret
out
dec
mov
sub
test
pop
call
int
mov
and
into
cltd
mov
add
std
xor
sub
popa
add
mov
or
jmp
in
sub
push
mov
push
imul
ficompl
mov
sbb
bound
inc
push
jg
sbb
fsubrp
loop
and
cmp
dec
ret
push
imul
fsubrl
xor
stos
test
imul
ret
adc
mov
mov
mov
outsl
adcl
int3
movsb
mov
pop
xchg
bound
cld
insl
imul
test
and
icebp
fsubr
jle
sbb
out
rolb
or
xchg
xor
mov
in
lods
outsl
mov
call
fwait
push
mov
and
mov
repz
pop
jmp
xor
mov
add
ret
lret
or
fistps
mov
ret
jle
loop
out
test
push
pop
cmp
loop
sti
addr16
jp
imul
sub
mov
push
pusha
xchg
jmp
jp
sbb
data16
or
imul
in
inc
xchg
and
loop
inc
add
fisubrl
cmp
push
push
adc
out
aam
sarb
rorl
mov
imul
dec
and
lods
aam
dec
pop
hlt
mov
dec
fsubrs
sbb
int
cwtl
and
stc
add
lods
stos
andl
or
inc
inc
cs
or
push
loop
incb
sarb
divb
add
pop
mov
push
stos
sub
and
daa
add
out
pushf
or
into
add
ret
add
jl
jno
dec
add
fwait
add
adc
je
push
int3
fidivs
or
jo
fcomip
or
or
jmp
xchg
add
test
add
adc
and
testl
pop
out
popf
leave
shll
sbb
adc
loopne
xor
pop
add
adc
adc
je
mov
ss
fstp
in
sbb
stc
rclb
and
gs
mov
lcall
pop
pop
lods
call
xchg
rsm
add
aaa
lret
mov
fnstsw
mov
fcmovb
stc
mov
cmp
xchg
push
push
jg
sub
xchg
cwtl
and
stc
pop
outsl
xchg
and
inc
push
lds
mov
adc
mov
mov
cmp
ret
je
add
out
mov
push
pop
jp
adc
mov
rcrl
xchg
dec
imul
cmpb
lods
fdivrs
test
stos
xorb
adcb
jmp
cmp
mov
sbb
sbb
cmpsl
xlat
imul
ljmp
adc
cmc
dec
cwtl
ror
fmull
sub
adc
je
add
and
fbstp
shlb
or
add
xchg
inc
mov
in
cmp
and
inc
imul
test
cs
inc
adc
cmp
pop
inc
popf
xchg
mov
mov
inc
pop
out
int
test
push
insb
xor
ret
jmp
sahf
pop
les
rcll
push
jecxz
repnz
test
adc
or
jp
dec
jle
xchg
and
cmpsl
cld
fwait
lods
aaa
mov
mov
out
or
add
xor
fs
mov
mov
lods
adcl
mov
std
fmul
sbb
mov
sbb
mov
adc
enter
adcl
cmp
mov
and
int
pop
push
sub
in
adc
loopne
sub
pop
ja
jb
dec
adc
sti
loopne
jo
add
in
jnp
imul
sbb
fnstenv
and
pop
mov
test
enter
xchg
pushf
lods
gs
fstpt
xchg
mov
mov
mov
and
es
mov
push
lock
mov
xchg
insb
dec
js
cmpsb
inc
and
adc
lret
jne
std
mov
ja
dec
in
xor
mov
sub
roll
repnz
aaa
cmp
mov
shlb
xchg
loopne
xchg
xchg
mov
addr16
add
cmp
pop
cmpb
adc
leave
pop
add
stos
ror
mov
enter
outsl
or
mov
and
sbb
sahf
pop
aad
push
or
arpl
mov
ret
xchg
sub
ret
add
fs
sub
aad
shll
cmp
xor
xorb
and
sti
jae
xor
sbb
mov
lock
jge
sbb
into
add
dec
icebp
je
loop
inc
inc
jb
add
ficoms
inc
sub
cltd
push
lock
push
cmp
imul
adc
jge
popf
or
iret
and
repnz
hlt
xchg
nop
movsb
or
fisubrs
dec
adc
jae
rclb
mov
push
cltd
xlat
data16
mov
lds
pop
jmp
ficompl
dec
aas
push
cmpsb
lds
out
dec
cli
ret
push
gs
movb
sbb
lret
jno
ljmp
hlt
jno
sbbb
sub
push
mov
mov
scas
in
in
sub
xchg
xchg
pop
outsb
sahf
aad
sbb
push
or
scas
test
cmpsl
out
incl
pop
inc
jno
xor
adc
int3
mov
popl
mov
pop
jae
sub
clc
sahf
test
push
imul
mov
jae
mov
test
jae
mov
mov
mov
out
dec
jb
sub
jmp
ds
inc
xor
sti
in
xchg
and
dec
lds
imul
outsb
sbb
orl
pushf
daa
sar
fwait
push
testb
ds
fists
ret
loop
mov
jns
mov
mov
jo
hlt
call
jecxz
rcll
pop
push
or
sbb
sub
mov
repnz
mov
sbb
or
sub
fmull
lds
test
mov
mov
stos
mov
dec
jb
daa
out
ja
pusha
ret
sub
daa
push
inc
pop
je
sub
pop
pop
or
mov
std
fwait
cwtl
push
xor
and
fistpl
jno
mov
mov
cli
cmp
out
push
jnp
sbb
mov
adc
inc
dec
inc
dec
sub
push
ds
cmc
cmp
pop
rolb
push
inc
jecxz
push
dec
push
rcl
in
ljmp
push
in
imul
mov
cmp
test
push
jmp
mov
sub
popl
ds
sbb
mov
subb
push
clc
add
scas
test
push
shrb
or
xlat
push
xorl
andl
lock
in
cli
dec
push
pop
scas
inc
mov
movsb
aas
outsb
add
or
mov
dec
dec
repnz
and
out
inc
outsl
xchg
stc
mov
or
xor
nop
mov
adc
lock
jge
lea
dec
insl
loope
rcll
adc
mov
adc
dec
scas
sub
and
ss
bound
push
aaa
dec
mov
sbb
addr16
aam
test
inc
stos
mov
test
jb
imul
cmp
fisttps
dec
push
inc
push
lea
mov
loopne
mov
out
nop
punpcklbw
scas
repz
out
mov
add
cmp
dec
mov
pop
and
cmpsl
insb
jp
add
pop
push
pop
cmc
xchg
jbe
fsin
or
hlt
out
fbstp
roll
pusha
lock
xor
test
jbe
mov
mov
mov
cltd
outsl
mov
or
dec
in
pusha
les
adc
xchg
in
addr16
mov
out
fucomp
sbb
adc
adc
cs
and
mov
and
pop
hlt
lock
mov
mov
sbb
pop
jmp
sahf
jb
and
cmpsl
add
stos
jnp
mov
dec
jl
cld
mov
pop
ds
xor
pop
sub
cs
cs
xchg
daa
mov
push
stos
pop
sbb
inc
adc
fldt
scas
testb
sub
cmp
shll
adc
jg
or
cmp
xor
jecxz
mov
adc
push
jp
push
adc
dec
cld
jb
imul
sub
aas
nop
and
xchg
je
fidivs
push
push
lret
mov
and
loopne
outsl
or
jp
pop
inc
stos
xlat
rcrb
add
lock
push
in
std
sub
push
int3
or
mov
push
and
jns
adc
xchg
sub
aaa
sarl
gs
loop
push
outsb
lock
mov
mov
mov
mov
jne
cmp
pop
cmp
cs
jno
clc
pushf
adc
mov
and
andl
push
shr
lock
inc
dec
js
mov
sub
sub
pop
les
int3
dec
mov
cmp
mov
outsl
sbb
push
divl
shlb
out
and
xchg
mov
ja
pop
jb
push
cld
frstor
sub
bound
push
fwait
shlb
push
adc
mov
mov
xchg
ret
mov
lret
or
xorl
push
mov
addr16
sub
mov
dec
fwait
cmpsb
adc
repz
gs
ss
xchg
inc
dec
adc
ret
repz
push
lret
repz
loopne
cpuid
movsb
fldenv
jne
mov
stc
lock
aam
ret
test
cld
mov
jnp
lock
fdivrl
jecxz
cld
mov
lcall
cltd
and
arpl
add
push
mov
cltd
pushf
dec
jecxz
movsl
pop
cli
mov
mov
stc
push
pop
add
xchg
push
or
or
xor
jge
push
mov
add
cmp
test
jg
inc
or
sub
lds
push
dec
xchg
inc
fs
aad
es
dec
push
cld
loop
out
cmp
pop
xchg
push
pop
push
jno
or
push
or
xchg
aaa
inc
mov
scas
dec
rcll
jg
aad
aas
xchg
jle
or
ljmp
inc
xorb
faddl
jb
jmp
mov
fdivs
jmp
mov
dec
cli
icebp
jns
xlat
add
dec
nop
cmpsb
fcomps
cmp
add
fcomp
pop
test
xchg
mov
arpl
jbe
sbb
jne
xchg
push
mov
lods
mov
aad
mov
imul
rep
and
call
fwait
les
in
andl
push
cmp
mov
pop
cmp
test
aas
pop
mov
in
fisubl
jg
insl
and
movsl
pop
fstpt
js
in
lods
int3
in
mov
clc
xlat
add
ror
push
cmpsl
in
in
in
out
push
add
mov
std
mov
loop
cltd
daa
dec
outsl
xchg
shlb
xor
lds
fs
dec
cmp
aad
xlat
cmp
adc
clc
adc
call
ds
lea
lods
mov
movsb
sbb
imul
popa
pusha
jns
outsl
sti
jne
xlat
sub
jge
mov
stc
lds
lahf
mov
fsubrl
daa
adc
and
add
lock
jno
cmpsb
fsqrt
mov
push
nop
test
or
das
inc
fdivrp
in
cmp
subb
xor
push
int3
cmp
rol
insb
push
cmp
lahf
aad
jb
into
adc
sbb
leave
scas
arpl
divb
cli
mov
movsb
sub
ret
add
jno
push
sub
push
or
sub
jecxz
in
mov
call
push
cmp
pop
jbe
pop
mov
and
sbb
mov
iret
shlb
jge
into
jg
cmp
hlt
cmp
ret
or
xchg
ja
lahf
pushf
mov
mov
fwait
or
jne
xchg
sti
pop
xor
insl
sub
iret
outsb
inc
fdivrs
in
dec
repz
mov
rcl
imul
scas
mov
stos
or
add
push
jne
sub
js
sub
sbb
xchg
hlt
aas
xor
imul
sahf
test
mov
in
or
mov
pop
popa
sub
imul
jb
or
inc
mov
dec
stc
fistps
xchg
and
sub
sbb
xlat
xchg
cmc
int3
mov
incb
call
jg
setp
sarl
stc
stc
fimull
lret
jge
xchg
scas
ret
adc
mov
lea
dec
sub
push
ja
pop
fistps
mov
fstps
mov
dec
cmp
popa
lret
inc
jns
cmp
or
and
test
inc
cli
push
xchg
es
insb
outsb
or
and
cli
xchg
jns
out
cmc
mov
test
cmp
mov
jns
push
mov
inc
aad
in
and
xchg
andl
sbb
and
dec
pop
pop
cmpsl
shll
cmp
daa
push
mov
lods
xor
fsubl
dec
ljmp
fmuls
repz
inc
add
xchg
inc
sbb
mov
cmp
repnz
out
lock
inc
cmpsb
jnp
adc
pop
mov
xchg
add
test
js
call
loop
into
fisubl
sbb
shl
and
mov
mov
inc
int
xchg
xor
roll
cmp
mov
xlat
inc
jge
adcb
pop
addr16
cmc
imul
out
leave
test
stc
mov
adc
sub
mov
movsl
aad
arpl
lcall
out
mov
test
lahf
push
xor
dec
sbb
pop
les
out
enter
adc
cltd
data16
mov
mov
jmp
cmp
mov
jo
dec
sahf
xchg
incl
sbb
test
cmp
cld
fiadds
mov
cmp
push
out
ljmp
xor
sub
dec
push
mov
jbe
mov
pop
push
mov
and
dec
sub
sahf
cmp
mov
mov
inc
mov
scas
insl
pop
xchg
cmc
das
stc
jp
pop
pop
add
scas
pop
xor
pop
xor
daa
pushf
jb
in
daa
mov
dec
and
jae
jecxz
and
and
aad
push
cmp
inc
fstps
sbb
and
repz
fxch
lods
loopne
mov
inc
popa
aas
pop
lds
imul
in
popa
test
add
hlt
sub
es
inc
mov
push
jecxz
dec
mov
pop
lahf
jge
stos
pop
sbb
jnp
adc
cmpsl
fs
in
adc
sbbl
push
xchg
mov
mov
mov
in
xchg
sub
push
js
popa
adc
push
ja
sub
or
gs
dec
nop
test
ss
cmp
xor
ret
xchg
mov
imul
aas
push
ljmp
lods
es
ds
xor
and
popl
ds
fcoml
frstor
divl
clc
xor
push
enter
rcr
rcll
cmc
mov
jae
or
frstor
pmullw
sub
sarl
push
jp
inc
fisttpl
and
or
mov
iret
movsl
mov
xchg
cmp
push
scas
clc
sbb
xor
into
pusha
shll
xor
cmpsl
and
mov
outsl
or
outsl
and
pop
push
sub
pop
mov
je
popf
lret
aaa
push
mov
xchg
sbb
fimuls
int3
push
pop
addr16
scas
fbld
xor
mov
xrstor
jle
cmpsb
dec
push
jns
pop
push
aad
sbb
dec
push
sbb
inc
inc
mov
aaa
aas
push
incb
pop
mov
out
fdivrl
inc
add
add
stos
pop
cmp
xor
adc
mov
movsl
clc
lock
mov
notl
add
sub
out
hlt
es
shr
or
inc
mov
mov
xchg
dec
leave
xchg
in
repnz
xor
inc
pop
aad
outsl
adc
stos
and
sub
imulb
imul
ja
jmp
xorb
pop
mov
pop
xchg
pusha
addr16
cmp
test
std
idivb
loop
pushf
add
notl
sbb
leave
adc
std
xor
test
sub
push
sbb
pop
push
and
aam
push
push
loope
adcl
mov
mov
test
push
scas
fistl
imul
mov
ja
gs
out
imul
mov
lds
les
rorb
mov
jecxz
repz
dec
xchg
xchg
xchg
repz
sbb
add
push
cmp
shrb
inc
leave
loopne
inc
or
fs
test
mov
scas
stc
loop
shll
mov
push
push
pop
rorl
mov
lahf
add
push
lret
lods
sti
fadds
dec
jbe
push
add
popf
int3
xchg
sbb
cmp
xchg
jne
and
fdivr
test
iret
cmpsb
jo
jmp
jg
imul
lock
repz
pushf
cli
sahf
mov
adc
adc
cmp
outsb
subl
inc
popa
xchg
jecxz
jae
jl
fldenv
gs
nop
mov
ja
add
repnz
mov
mov
mov
shll
pop
inc
out
mov
dec
in
xor
les
sbb
stc
pop
lahf
adcl
push
lods
or
test
sbb
adc
sbb
mov
fs
cmpsb
cltd
ret
xchg
dec
jg
in
imull
mov
and
daa
es
in
daa
push
test
jno
jo
sub
movsb
or
dec
sarb
call
orb
sar
ja
lahf
pop
cmc
or
sbb
dec
xchg
sti
and
xor
add
jae
fcmovbe
les
pusha
jmp
push
xchg
cli
aas
cs
shlb
movsb
mov
call
cmp
andl
cmp
or
xlat
cmpsl
clc
push
imul
rcl
cli
jnp
or
sub
sbb
cmp
adc
decb
std
mov
sbb
push
dec
mov
daa
sbb
push
add
cmpb
push
pushf
pop
inc
sbbl
aam
popa
cld
mov
push
push
adc
xchg
xchg
mov
or
push
js
pop
nop
xchg
scas
cmp
in
stc
pop
sbb
pop
jbe
push
js,pn
mov
or
lret
je
and
mov
xchg
loopne
aas
pop
in
js
fs
or
push
mov
xchg
repnz
xchg
mov
jmp
jle
mov
aas
mov
mov
fimull
dec
xchg
shll
cli
test
or
fsincos
mov
pop
ret
sahf
lret
push
cmp
inc
sub
pop
jo
mov
ret
out
jge
jo
xlat
push
clc
cmp
stos
xchg
dec
cmp
imul
fcmovu
pmaxsw
add
add
rcrl
adc
rcrb
ja
lods
sub
cmpl
pop
addr16
sbb
mov
jl
jne
lcall
stos
dec
add
xchg
cmpsl
pop
push
dec
test
imul
aad
aad
cld
ds
xor
push
lods
push
rcr
pop
push
jg
sbb
add
cmpsb
adc
pop
xchg
or
std
addl
lods
mov
adc
and
imul
push
jno
mov
xor
cmpsb
dec
xchg
adc
or
mov
mov
add
ret
in
imul
cs
push
leave
aaa
sbb
int3
inc
ret
xchg
into
mov
push
insb
sub
jg
pop
in
je
cmp
mov
push
inc
js
repz
lock
cmpsb
fs
lret
and
out
imul
and
aas
inc
cmp
jecxz
push
aam
mov
mov
mov
jecxz
push
add
adc
add
rcrl
insl
push
lcall
jae
outsb
push
lods
jnp
or
or
jecxz
push
lds
xor
sub
aas
add
dec
push
inc
shr
repz
jle
mov
cmc
push
jnp
sub
jb
sbb
bound
out
push
insl
or
and
movsb
and
xchg
jge
ret
inc
inc
xor
mov
lret
popf
push
sbb
movsl
adc
and
stc
fdiv
mov
lds
xchg
fistl
push
call
sub
lahf
mov
cmp
fisttpl
nopl
leave
ds
push
sub
mov
mov
dec
push
xor
xchg
jmp
cmp
lret
and
xchg
adc
xor
ds
rcrl
imul
lea
inc
xchg
mov
dec
add
imul
mov
hlt
rclb
mov
cmp
jl
outsl
cmp
dec
pushf
push
pop
mov
push
sub
adc
into
mov
pop
adcb
jecxz
daa
sbb
repz
xor
pushf
push
fldt
mov
into
dec
jbe
ljmp
sub
xchg
and
jno
fcoms
pop
aad
or
jle
subps
adc
sbb
fldt
ja
dec
push
jns
xor
inc
dec
popa
xor
xchg
icebp
or
dec
out
subb
leave
inc
mov
rorl
xchg
xor
repz
or
adc
pop
repnz
adc
daa
clc
sub
fsubrl
cmc
sbb
loop
pavgb
dec
notl
cmp
mov
add
aam
pop
test
dec
push
inc
pop
out
fcomps
push
adc
mov
and
adc
dec
jbe
push
adc
fsub
js
jbe
push
xchg
outsl
inc
cltd
or
in
dec
mov
lock
pop
negl
in
fsubrl
pop
jns
push
fildll
in
adc
xchg
iret
adc
fdivs
gs
cmp
dec
movsb
stc
fmuls
notb
popf
aam
cltd
outsb
daa
add
pop
jae
xor
in
cmpsb
xor
and
jns
pop
mov
jmp
lcall
faddl
adc
inc
jmp
mov
into
add
idivl
mov
orb
in
ja
dec
stc
jge
fldt
dec
movsb
xor
lds
hlt
fcmovne
sub
xor
mov
int3
lret
fisubrs
push
sbb
fildll
pop
and
inc
and
push
rorb
leave
scas
jge
lods
inc
xchg
jle
cmc
push
xorl
jl
and
cmpsl
or
jno
mov
mov
fidivrs
popl
in
fdivrs
pop
stc
ret
jnp
mov
sub
test
fcoms
mov
sub
mov
ret
cmp
jbe
aaa
fsub
lcall
mov
cmpsl
fisubrs
outsl
lahf
mov
sbb
or
mov
loopne
mov
xchg
xor
mov
negb
loopne
ds
dec
fmul
xorb
test
inc
iret
call
fcmovb
frstor
je
pushf
cmp
push
ffreep
sbb
aad
push
jae
cmp
repnz
cmp
and
mov
in
dec
mov
adc
iret
mov
mov
loop
fldcw
pop
into
sbb
out
jmp
xchg
add
fidivl
xor
xchg
rcrb
pop
cmp
inc
out
push
xor
pop
movsb
sbb
and
xor
and
mov
andb
xchg
testl
loope
xor
mov
jae
mov
adcb
cltd
loop
sbb
filds
and
pop
inc
test
mov
inc
fimull
mov
or
dec
and
enter
push
ds
sub
scas
inc
outsb
nop
inc
xchg
int3
sub
in
cwtl
push
iret
push
mov
xchg
jecxz
mov
inc
bound
mov
fisubrs
call
pop
mov
jmp
pusha
pop
fistl
ss
nop
popa
and
rorl
add
sahf
jb
push
mov
test
sahf
orb
movsb
ljmp
cmpsb
add
or
mov
push
xchg
xchg
push
and
stc
push
push
dec
into
xor
imul
ret
add
sbb
sar
fldt
or
andl
cmpsl
mov
cmc
cmp
jg
or
das
push
jp
sbb
jmp
pop
scas
imul
mov
hlt
and
xchg
mov
dec
sbb
call
jle
cltd
cmp
sub
imul
pop
aaa
push
rolb
sub
int3
xchg
lea
idiv
test
jne
fbstp
andb
mov
arpl
pop
push
jae
mov
add
shrb
outsb
add
mov
jno
jno
in
pop
test
sub
jne
adc
pop
mov
pop
je
out
lds
or
scas
mov
pop
adc
ja
inc
xchg
and
mov
add
lret
data16
je
cli
mov
adc
sub
loop
sbb
xchg
sti
sub
je
adc
push
sub
sub
push
insb
test
inc
addr16
bound
sub
es
adc
fistl
mov
jo
cmpsl
xchg
mov
loope
fildl
lret
iret
jno
sub
push
or
aam
push
and
cmp
xchg
cmpsl
mov
in
push
fisubl
cli
cmc
pop
cmp
pop
stos
pop
pop
rorb
std
fs
inc
dec
lock
test
test
andl
ds
push
dec
jne
int3
pop
ds
mov
mov
mov
pop
or
imul
dec
fiadds
inc
dec
pop
xlat
fisubs
mov
mov
mov
test
fucomp
xchg
hlt
jl
push
jne
xor
insb
lcall
repnz
ret
stos
or
shr
movsb
xchg
loopne
cmp
pop
mov
jle
aaa
jne
cmp
repz
enter
inc
aas
sahf
jb
and
cwtl
call
push
mov
popf
jmp
ljmp
jbe
mov
inc
mov
push
or
xchg
imul
in
mov
sbb
jecxz
push
jle
mov
jbe
pusha
lahf
or
push
lods
jns
and
addr16
jle
in
fmull
pop
inc
cmp
dec
dec
pop
sbb
pop
imul
sub
sub
mov
inc
xchg
repz
ret
repnz
mov
bound
aas
ljmp
cmpsl
dec
sahf
stos
mov
mov
arpl
mov
add
push
enter
outsb
dec
test
cltd
cmp
imul
or
push
pop
sub
or
insb
or
movb
call
das
pop
pop
inc
mov
adc
ja
mov
pop
or
push
sbbb
mov
aas
lret
int
mov
popa
cwtl
adc
sub
movb
ds
dec
jl
sbb
cltd
xchg
dec
aas
pop
mov
outsl
lret
fsubs
ds
loop
leave
xchg
stos
adc
jp
mov
cmp
sub
test
jp
xchg
push
mov
push
les
inc
pop
test
sti
shrb
adc
shrb
sti
pop
push
mov
adc
sub
rcll
fwait
mov
push
cmp
adc
mov
mov
lret
or
sbb
jp
test
xchg
dec
scas
mov
leave
nop
jno
mov
or
adc
and
mov
cwtl
mov
xchg
mov
dec
js
out
add
lds
es
imul
or
cld
dec
fwait
xor
dec
ds
xor
stos
cmpsb
dec
rorb
adc
push
inc
out
xchg
leave
adc
cld
dec
jg
pop
xchg
inc
xchg
adc
sbb
add
xor
cmc
popl
ret
std
and
pop
push
push
jl
push
cmpsb
inc
mov
xchg
arpl
jg
stos
aam
dec
int3
inc
or
and
lcall
ret
mov
mov
js
movsl
mov
orl
movsl
jmp
lret
jle
jp
sti
loop
arpl
dec
sbb
mov
mov
push
mov
sub
cmpb
sub
les
fs
mov
push
loop
mov
inc
mov
mov
push
fmull
xchg
jp
mov
fidivs
ljmp
repz
