add
lea
push
or
lea
push
lea
and
push
movzbl
push
inc
pop
lea
xor
lea
xor
and
lea
movsbl
lea
or
mov
lea
pop
or
pop
sub
inc
movl
lea
sub
movl
sub
not
inc
bswap
and
imul
neg
movl
lea
not
push
and
mov
add
and
push
inc
xor
movzbl
xor
push
mov
xor
imul
mov
not
shll
xor
sub
and
push
and
call
movzwl
lea
mov
add
mov
sub
add
sub
and
ss
mov
dec
imul
add
and
sub
dec
lea
sub
add
add
lea
or
and
not
mov
lea
lea
or
lea
and
sub
sub
not
movsbl
bswap
mov
bswap
lea
sub
mov
inc
movsbl
lea
mov
lea
push
inc
mov
push
mov
movzbl
push
not
and
lea
mov
lea
xor
add
and
sub
imul
xor
sub
lea
sub
lea
sub
push
lea
lea
addl
sub
mov
inc
neg
lea
inc
neg
inc
lea
or
mov
add
push
push
sub
sub
mov
and
push
sub
and
push
and
push
bswap
push
push
add
and
and
and
not
mov
add
xor
or
movl
push
not
add
mov
push
and
lea
push
mov
mov
push
lea
or
push
sub
sub
push
add
inc
push
not
imul
neg
sub
and
mov
sub
mov
mov
sub
imul
bswap
lea
imul
mov
lea
sub
lea
push
add
lea
mov
or
and
mov
xor
mov
mov
and
sub
bswap
push
xor
sub
mov
add
inc
lea
lea
lea
neg
or
mov
lea
inc
mov
xor
mov
movzbl
sub
push
mov
and
mov
and
and
add
lea
inc
mov
lea
sub
or
add
mov
add
inc
add
mov
mov
add
add
inc
lea
add
mov
mov
lea
add
sub
mov
lea
inc
mov
mov
addb
and
mov
inc
mov
or
add
mov
mov
mov
sub
and
push
and
lea
movsbl
add
mov
mov
add
and
movsbl
add
and
add
and
inc
xor
mov
and
lea
lea
and
xor
and
sub
lea
mov
add
and
call
mov
sub
add
lea
and
movswl
xor
mov
lea
cmpb
je
mov
mov
and
add
xorl
not
lea
lea
and
mov
mov
add
lea
and
add
mov
add
sub
shl
sub
inc
mov
mov
imul
push
inc
or
lea
add
inc
popl
lea
xor
mov
imul
add
mov
and
inc
xor
or
add
mov
add
pop
imul
jmp
lea
push
add
lea
push
sub
and
push
inc
and
push
mov
add
pushl
and
and
pushl
mov
inc
mov
neg
and
push
add
lea
call
imul
mov
inc
inc
add
inc
and
pop
movzwl
and
pop
lea
inc
pop
imul
inc
sub
movsbl
neg
mov
neg
xor
mov
bswap
add
mov
and
mov
mov
lea
xor
xor
bswap
xor
dec
sub
lea
xor
and
neg
mov
mov
or
mov
or
inc
add
lea
or
add
lea
lea
mov
or
inc
incb
or
sub
inc
movzwl
inc
cmp
jb
inc
push
lea
add
push
add
movzbl
push
lea
xor
lea
lea
add
mov
sub
add
mov
lea
lea
sub
je
add
call
movswl
sub
call
and
and
call
inc
lea
call
lea
and
call
inc
xor
iret
or
mov
lea
movswl
and
mov
lea
or
xor
sub
lea
xor
or
xor
xor
or
or
push
mov
inc
mov
and
neg
mov
mov
lea
movzbl
not
not
push
and
xor
movzbl
mov
and
add
or
lea
add
sub
add
pop
mov
lea
movzbl
not
and
inc
sub
inc
mov
lea
lea
cmp
jb
and
xor
xor
sub
mov
add
mov
inc
add
lea
push
neg
mov
lea
mov
not
mov
sub
mov
lea
inc
or
mov
mov
lea
mov
lea
and
pop
mov
sub
mov
lea
sub
test
jne
add
xor
movzwl
and
xor
and
lea
pop
sub
add
mov
xor
inc
mov
lea
lea
test
jbe
not
inc
mov
add
movzbl
add
add
pushl
lea
add
pop
sub
movsbl
movzbl
inc
movswl
add
and
and
movzbl
add
lea
mov
or
lea
mov
mov
xor
add
inc
add
add
add
lea
movb
sub
and
dec
and
mov
sub
add
or
mov
mov
mov
lea
and
lea
imul
mov
lea
lea
not
mov
movb
lea
add
mov
and
sub
and
add
sub
sub
or
and
lea
imul
imul
neg
add
and
inc
add
add
and
movzbl
mov
bswap
lea
or
lea
movzbl
mov
movzwl
push
or
add
xor
bswap
add
dec
lea
not
mov
xor
lea
inc
sub
sub
mov
mov
inc
lea
xor
lea
pop
imul
mov
inc
sub
movzbl
dec
jne
mov
pop
mov
and
pop
or
add
pop
lea
and
add
movzbl
inc
pop
lea
mov
add
and
sub
push
imul
ret
add
movzbl
xor
mov
xor
xor
inc
add
movzbl
mov
lea
mov
pushl
imul
lea
push
or
imul
xor
and
lea
mov
lea
bswap
add
mov
and
cmp
je
lea
add
add
jmp
lea
xor
and
or
mov
inc
and
lea
add
and
lea
mov
and
mov
lea
mov
mov
inc
movzbl
lea
movzbl
sub
push
lea
sub
mov
inc
imul
pop
sub
mov
push
inc
mov
pop
and
movswl
lea
and
add
cmpb
je
lea
or
xor
push
mov
and
push
and
imul
push
mov
lea
push
sub
xor
push
or
mov
call
mov
not
push
lea
sub
push
bswap
mov
pop
and
inc
lods
add
and
pop
movsbl
mov
lea
neg
mov
lea
lea
mov
mov
movzwl
mov
inc
lea
add
movsbl
imul
call
xor
xor
mov
lea
mov
mov
mov
ret
and
lea
lea
add
add
lea
mov
inc
ret
and
add
add
dec
jne
add
pop
pop
mov
jns
pop
or
xchg
sti
loopne
sub
xchg
push
imul
gs
std
mov
adc
std
dec
xchg
mov
loope
ja
adc
les
sbb
lds
stos
pop
insb
jl
push
data16
dec
inc
jmp
xor
mov
cmp
dec
mov
and
sahf
and
push
and
test
vmread
dec
or
dec
out
cli
pushf
dec
mov
call
nop
cmpsb
jl
cmc
mov
repnz
dec
inc
cmp
mov
flds
pop
sub
xlat
daa
sahf
adc
in
test
shlb
mov
mov
rol
lcall
aaa
jg
cmp
movsb
loope
mov
fwait
adcl
fdivl
mov
aad
cli
push
call
mov
cli
cs
mov
pusha
add
or
cmpsb
ficomps
inc
lret
pop
test
add
push
dec
push
out
andl
xlat
xchg
cld
lds
add
fdivrl
mov
es
cmp
cltd
fwait
cmp
xorb
dec
mov
lret
dec
notb
loop
mov
push
std
std
in
lds
sub
lods
bound
les
jae
lahf
pop
lds
cmp
adc
movsl
mov
fisubs
mov
inc
push
jecxz
enter
std
ja
push
mov
dec
out
dec
push
cmp
pop
sub
cmp
cmp
and
test
nop
je
rclb
js
rolb
loop
imul
sub
inc
cwtl
add
scas
and
jo
mov
sub
cs
sbb
sbb
loop
add
and
mov
mov
add
fiadds
pop
stc
subl
in
pusha
xor
pop
es
repz
call
imul
data16
add
out
aas
inc
xor
inc
cmp
rorl
je
sub
shlb
je
adc
mov
das
test
rorl
mov
sti
jne
in
lods
xchg
and
aaa
fisubs
xor
out
jbe
xchg
mov
adc
ljmp
es
adc
clc
mov
in
inc
and
outsb
insb
inc
call
mov
sti
sbb
fisubl
lret
out
shll
add
roll
push
and
and
dec
out
pushf
push
js
mov
out
loope
or
xor
mov
lret
out
inc
movsl
sarl
and
in
mov
jae
ret
mov
pop
orb
inc
sti
aaa
pop
adc
insl
aaa
adc
adc
call
or
lret
insl
cmp
shll
ficomps
out
std
orb
xchg
cmp
cli
test
dec
xor
push
add
lret
push
inc
mov
inc
xor
movsb
jnp
out
xchg
stos
not
shrb
das
out
mov
and
cld
aas
jns
js
rorl
jae
xor
push
mov
push
andl
out
dec
cmpsb
loope
push
pop
inc
xchg
sub
jne
stos
adc
sbb
push
imul
addr16
jbe
popf
out
mov
mov
push
inc
push
cmp
lret
test
ret
mov
nopl
xor
jne
imul
int3
imull
loop
jns
cli
in
dec
mov
inc
inc
movsb
xchg
sarl
mov
stc
adc
mov
pusha
xor
es
mov
out
ljmp
insb
pop
add
push
xchg
mov
mov
pop
ss
out
popf
push
sub
add
xor
xlat
xlat
pop
pop
xchg
dec
lods
lret
notb
addr16
into
test
xor
mov
icebp
or
mov
mov
out
sbb
pop
sub
aam
into
dec
mov
jg
sbb
jmp
fisubl
sub
dec
push
add
insb
sub
stos
es
xchg
jb
loopne
push
dec
nop
pop
ja
sub
push
in
rcrl
mov
push
mov
inc
repz
rorl
push
int
shr
and
sub
popa
pop
adc
jl
cmpsw
jp
jnp
mov
mov
pop
mov
sbb
in
inc
adc
in
jne
jge
es
mov
dec
jo
sub
mov
push
jg
aam
cld
jns
pop
rorb
adc
fwait
add
aas
out
lods
cmp
sbb
pusha
cs
sbb
inc
cltd
test
ficompl
and
outsb
mov
add
push
mov
sub
mov
and
push
sub
mov
fisubl
jno
mov
xor
push
pop
mov
pop
mov
xchg
cmc
ss
jno
test
mov
mov
imul
mov
sbb
hlt
outsl
jge
shlb
push
push
jmp
pop
lcall
leave
xor
mov
rcrl
dec
std
cmp
nop
pop
jno
ds
or
out
std
jmp
push
cmp
nop
adc
jne
and
sahf
cmp
in
dec
or
rcrl
jl
int3
sar
adc
aam
into
cwtl
imul
sbb
adc
mov
popl
push
shll
sub
fidivs
insb
fwait
stos
sbb
out
jb
mov
push
add
pop
mov
push
outsb
mov
or
fsubrs
repz
cs
inc
into
xor
adcl
mov
cld
pop
adcb
xchg
cmp
pop
int
mov
mov
frstpm(287
scas
xor
pop
roll
filds
or
cmp
sub
lret
inc
and
inc
push
fldl
push
push
bswap
and
fsts
and
call
jbe
sub
hlt
fdivs
arpl
xor
mov
mov
xchg
adc
mov
adcb
xchg
dec
inc
jns
cs
mov
sbb
sbb
adc
fbstp
sbb
mov
push
fistl
cwtl
adc
and
popa
inc
mov
in
push
push
nop
bound
mov
sbb
scas
sub
push
push
ljmp
xchg
xor
add
push
std
lret
jg
sub
push
movsb
into
jmp
das
adc
lea
xor
lds
in
std
pushf
jecxz
data16
lds
popf
mov
sub
pop
xchg
sti
sbb
les
add
in
loopne
mov
insl
jge
ret
pop
mov
loopne
pop
stos
test
push
xchg
add
aaa
push
cmc
lahf
dec
ljmp
aaa
negb
adc
mov
mov
cmp
push
mov
xchg
sub
mov
fwait
rcrl
sub
clc
idiv
icebp
pop
div
inc
sbb
mov
rcll
lods
jne
jns
notb
push
out
mov
int
mov
iret
jo
test
repz
jb
sub
rorb
sbb
ret
imul
pushw
cmp
sar
pop
es
xor
dec
mov
mov
jl
loopne
lahf
adc
dec
mov
stc
loope
sbb
imul
jecxz
loop
addr16
aad
sahf
test
or
loope
ds
fimull
push
jne
daa
sub
loop
test
out
movsb
ret
adc
std
inc
push
mov
push
gs
loopne
mov
stc
jge
dec
fucomp
sub
mov
xchg
xor
mov
mov
mov
sbb
loopne
lds
in
cmp
sub
sbb
dec
cmc
popa
icebp
mov
call
mov
xchg
sub
andb
xchg
jmp
fcmove
add
scas
xchg
adc
fadds
mov
xchg
bound
dec
push
xchg
inc
int3
sti
aam
push
dec
mov
pop
pop
sub
ljmp
lret
mov
leave
push
leave
mov
out
imul
push
push
popf
push
pop
jge
insb
lock
inc
inc
mov
sti
jo
sti
mov
popf
cmp
xchg
test
jb
dec
sahf
int3
cmc
xchg
or
adc
push
orb
mov
push
test
push
sbb
in
ja
fiaddl
lret
cmp
xor
add
popa
xor
sub
mov
data16
jb
mov
sub
add
dec
ds
pop
arpl
add
cli
jmp
push
clc
adc
out
fsubr
jg
push
sti
mov
jecxz
test
xor
mov
sbb
sbb
and
ficomps
xor
ret
data16
and
lds
push
fdivrl
aas
shrw
push
daa
repnz
scas
fnstcw
xor
call
je
jecxz
and
lea
insb
or
xor
cld
mov
in
xchg
repnz
rcrl
push
adc
mov
or
mov
mov
xchg
sbbb
xor
subl
inc
cmp
ret
ss
jbe
cmpsl
xchg
inc
mov
cmp
add
mov
sub
or
mov
push
in
mov
sar
das
and
xchg
and
cmp
push
or
xor
dec
fnsave
movsl
and
cmp
leave
mov
or
gs
sbb
or
dec
idiv
push
aas
push
aad
mov
mov
cmc
daa
xchg
jmp
push
inc
test
cvttps2pi
test
out
sub
pop
aam
mov
push
and
mov
mov
