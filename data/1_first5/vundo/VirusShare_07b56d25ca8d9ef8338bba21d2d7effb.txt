push
mov
push
push
push
push
push
push
call
in
enter
hlt
dec
sub
fldt
xchg
push
test
mov
je
inc
lret
push
loope
inc
xor
cmpsb
shlb
or
cmpsb
inc
je
xchg
gs
in
pushf
mov
add
push
repnz
pop
pop
push
push
push
push
push
lea
push
call
xchg
ds
cmpsl
dec
cwtl
push
dec
imul
push
pop
push
test
push
rorb
imul
outsl
cld
pusha
addr16
fists
inc
jl
jno
loopne
inc
dec
gs
jle
in
call
pop
push
push
push
call
sub
in
sbb
mov
or
loop
mov
fmuls
loope
push
xchg
inc
imul
xor
and
mov
mov
or
dec
add
mov
dec
bswap
je
sti
ds
push
pop
sbb
and
jmp
push
aad
in
clc
lcall
push
push
push
push
push
push
push
call
inc
aaa
orl
popa
fnstenv
add
mov
lret
in
test
mov
push
add
xor
and
stc
xchg
daa
fadds
aam
subl
pop
int3
jg
aam
popa
sub
pop
push
push
push
push
push
call
lret
in
fsubs
idiv
push
repz
push
mov
cmp
les
fstpl
add
mov
jo
push
push
dec
sub
ret
push
sub
xor
shl
adc
ss
mov
cmpsb
push
scas
jecxz
out
and
mov
lock
push
push
push
push
call
sbbl
lcall
or
fsubl
sub
xchg
cmp
aaa
ffree
fiaddl
fildll
pop
arpl
inc
xlat
and
push
lcall
push
mov
popf
daa
pushf
aam
ljmp
xlat
andl
push
push
mov
push
cmpsl
sub
add
ja
push
call
add
fsubrp
mov
int3
stos
das
jbe
mov
dec
jge
shll
sti
xchg
in
ljmp
mov
int
dec
mov
clc
pop
call
mov
push
dec
pop
mov
push
sub
shl
pop
add
push
add
not
pop
add
mov
xor
push
push
rol
push
add
ror
inc
shl
mov
xor
sub
shl
sub
lea
rol
pop
add
dec
lea
ror
pop
push
shr
ror
shl
pop
push
push
dec
inc
sub
lea
pop
call
push
pop
mov
push
lea
push
push
push
lea
push
call
imul
dec
jg
inc
ror
mov
pusha
or
outsb
pop
in
sarl
pop
mov
ret
and
in
in
lcall
push
push
push
push
call
in
adc
xchg
cmovg
outsb
pop
push
insb
xlat
enter
pop
mov
in
dec
add
add
sub
push
dec
sub
clc
fs
shr
cmpb
or
pop
jno
loope
fiaddl
inc
cmp
sub
rol
pop
mov
sub
jne
push
dec
add
pop
pop
push
push
push
push
call
mov
lock
in
sbb
shrl
dec
js
out
push
insb
mov
fsubl
inc
and
ror
and
hlt
adc
lods
cmp
js
jecxz
sub
cmp
sbbl
scas
add
flds
sbb
adcl
out
pushf
jnp
nop
cltd
mov
fmull
pop
pop
push
not
shr
pop
pop
pop
push
ror
not
not
pop
xor
push
dec
sub
pop
inc
push
not
pop
ret
mov
push
push
push
call
ja
mov
cmp
dec
xchg
icebp
clc
xchg
nop
sbb
dec
sbb
stc
xchg
mov
sbb
mov
leave
mov
mov
xchg
dec
sbb
mov
jnp
lods
inc
and
fcomps
and
inc
inc
pop
dec
adc
imul
lcall
cli
add
test
push
add
push
xor
pop
mov
push
shl
lea
sub
sub
pop
add
testw
jne
push
push
not
lea
push
shr
dec
mov
shr
dec
shl
sub
not
add
pop
inc
add
rol
shr
pop
push
push
call
xor
mov
push
xchg
std
add
xchg
lods
xchg
stc
imulb
inc
jmp
adc
cmp
jp
or
cmp
mov
push
cltd
sub
pop
push
call
push
sub
pop
push
push
shl
pop
push
push
lea
push
lea
push
push
push
call
xchg
push
add
cmp
imul
loopne
daa
cmpsl
xor
test
fs
in
mov
fisubrs
xchg
push
adc
movsb
or
sub
adc
dec
add
ds
and
in
cltd
ja
mov
cmc
out
xchg
shll
fwait
jmp
sahf
adc
addr16
sbb
sbb
lcall
add
loopne
rol
pop
push
push
push
push
push
call
loopne
jp
test
and
test
jnp
scas
fcomps
sbb
test
fisubs
sub
pop
call
push
ror
sub
not
pop
mov
push
push
sub
push
inc
mov
ror
dec
sub
pop
sub
lea
pop
push
push
push
call
xor
test
mov
sub
add
rorl
mov
mov
int3
add
in
arpl
xchg
xchg
add
repnz
jecxz
cmp
xchg
jmp
add
aaa
and
jo
sub
sti
adc
jbe
bound
in
in
hlt
lcall
call
push
push
dec
not
push
shr
mov
not
ror
dec
sub
sub
shl
xor
pop
shr
sub
pop
push
push
push
push
call
lahf
lahf
cmp
jmp
adc
add
push
lcall
cld
fucomip
jne
xlat
xchg
mov
xor
imul
push
sbb
mov
pop
add
push
shlb
in
lock
push
call
push
push
xor
sub
lea
push
xor
add
mov
inc
add
inc
sub
lea
pop
shr
pop
push
lea
push
call
add
jne
pop
xor
pop
pop
and
push
jns
mov
mov
call
add
push
icebp
adc
lret
xchg
fimuls
into
sbb
xor
ret
insb
frstor
lahf
add
aaa
or
lds
call
push
ror
pop
push
push
push
shl
rol
not
push
add
mov
shr
sub
shl
add
pop
inc
pop
push
push
lea
push
push
push
lea
push
call
fdivl
and
sub
xchg
ds
ret
mul
xchg
mov
int3
movb
sarb
test
addr16
out
push
inc
or
daa
pop
orb
pop
jge
xchg
xchg
mov
lea
push
push
sarl
in
imul
in
popa
pop
aaa
sub
pop
call
push
add
add
xor
not
pop
pop
push
push
lea
push
push
call
mov
lret
add
inc
xchg
dec
shll
add
shll
sbb
pop
es
ja
shrl
sub
cmp
clc
sbb
adc
ror
or
scas
stos
movsb
xchg
mov
ss
jecxz
pop
out
sbb
mov
sti
sti
pcmpeqd
push
shr
sub
pop
add
push
push
not
not
sub
sub
push
rol
mov
shr
shr
sub
shr
inc
pop
inc
shl
pop
push
push
xor
dec
push
ror
not
mov
shr
sub
xor
pop
sub
add
pop
push
sub
pop
call
push
lea
push
call
pop
loop
sbb
sub
sub
inc
cmpsb
hlt
test
movlps
movsb
inc
inc
sahf
divb
stos
lahf
addl
push
jle
push
jnp
pop
lcall
lcall
push
push
xor
sub
push
add
mov
sub
add
lea
sub
add
pop
shr
add
pop
push
add
shl
pop
push
push
rol
not
pop
call
push
ror
pop
push
push
sub
pop
call
push
not
pop
pop
push
shr
pop
pop
push
push
push
push
push
call
psubq
add
fwait
mov
das
mov
clc
roll
sbb
mov
jp
or
jae
ret
iret
daa
pusha
bound
loope
mov
mov
push
or
in
in
pop
pop
pop
push
sub
add
add
pop
pop
push
push
push
push
lea
push
push
call
inc
pop
mov
cmp
lret
cmpsb
push
push
sub
addr16
xor
sbb
testb
aas
lret
push
cmc
mov
sbb
push
sub
sub
pop
xor
ret
push
push
push
lea
push
call
mov
cli
inc
lea
dec
xchg
imul
lock
sbb
inc
xchg
int
jl
xchg
fldt
push
cmp
pusha
mov
lock
lcall
mov
add
test
stc
ljmp
insb
add
inc
push
mov
dec
sub
sub
sub
sub
add
pop
rol
rol
add
sub
pop
push
push
push
call
test
in
push
pop
clc
and
pushf
dec
dec
sbb
daa
sti
sbb
cmpsb
stos
push
sbbl
movsb
sub
ret
cmp
cli
sub
aad
mov
out
int
in
lret
push
es
pop
push
call
push
lea
push
lea
push
call
mov
out
subl
sub
mov
insb
daa
ds
lock
add
and
sub
in
hlt
pop
push
push
sub
pop
call
push
dec
shl
shl
pop
cmp
jbe
push
add
rol
sub
pop
add
pop
push
shl
pop
pop
push
add
pop
pop
push
push
push
push
lea
push
call
aam
jecxz
xchg
ja
xor
mov
jp
insb
outsb
mov
xchg
cs
std
mov
xchg
aad
jns
movsl
xorl
xchg
out
cs
xchg
cmc
ffreep
mov
aad
push
sub
daa
mov
out
in
in
lcall
pop
push
lea
push
lea
push
call
adc
mov
aaa
loopne,pn
out
arpl
xlat
mov
hlt
and
loopne
cli
xchg
adc
fimull
sbb
xor
push
lea
push
push
push
push
call
mov
adc
mov
or
xchg
ja
add
js
adc
je
cld
icebp
loopne
icebp
cmp
cwtl
lods
sub
pop
mov
fnstcw
leave
sub
mov
and
test
sbb
sbb
pop
push
sub
int3
fbstp
sub
pop
ret
pop
push
push
call
and
adc
jecxz
mov
xlat
stos
adc
cmpsl
cmpsl
out
and
inc
ja
test
mov
out
iret
push
cmp
lea
in
clc
lcall
push
push
ror
push
xor
mov
dec
xor
sub
rol
shl
pop
sub
add
rol
inc
pop
push
lea
push
call
dec
nop
or
dec
mov
leave
mov
mov
and
gs
test
xchg
imul
push
lods
xor
mov
aad
es
or
mov
insl
rcrl
mov
in
pop
js
xchg
add
out
or
add
test
push
lea
pop
call
push
push
lea
push
push
call
add
mov
subl
fcomps
or
inc
lods
lock
or
xchg
dec
push
sub
pop
or
je
push
lea
push
push
call
push
mov
fiaddl
fimull
int
fisttps
arpl
pop
cmp
pop
andl
fsts
mov
mov
and
jecxz
call
push
xchg
inc
int3
adc
sub
pop
call
push
push
xor
add
xor
push
rol
mov
shl
shr
sub
add
pop
pop
push
push
push
push
push
push
call
mov
insb
sahf
scas
fistps
push
fs
fadds
push
push
jp
cwtl
or
cld
lret
sbb
aam
int3
repz
pushf
iret
push
test
sub
xchg
sub
pop
push
push
push
push
push
call
jae
mov
loop
scas
pop
enter
js
jle
cmpsb
mov
add
in
movsb
daa
data16
cmp
sbb
fcompl
pop
push
and
aad
mov
adc
push
and
mov
rcrb
es
out
sub
pop
call
push
shr
sub
add
pop
inc
cmpw
jne
push
shr
pop
mov
push
lea
push
lea
push
lea
push
call
pushf
mov
push
pushf
mov
push
dec
psrld
jecxz
mov
jne
jno
loopne
sbb
jle
mov
pop
jg
test
in
mov
rcll
inc
cmp
jmp
push
sbb
or
sub
pop
mov
hlt
mov
scas
xor
test
in
lock
inc
cmpb
jne
push
push
call
js
shrb
sub
bound
sti
sbb
loopne
lcall
arpl
rolb
mov
cmpl
ret
cltd
pop
pop
pop
clc
add
add
outsb
push
das
ret
fsubl
iret
int
xchg
in
shl
stc
sub
mov
shrb
rcll
lea
sub
pop
cmp
jae
push
push
push
push
call
ljmp
push
inc
sahf
pushf
repnz
pop
or
gs
std
cmpsb
xchg
push
ljmp
mov
xor
mov
sub
fsubrs
dec
inc
mov
lcall
push
pop
call
xor
push
push
push
call
jmp
fwait
sub
or
dec
in
std
int3
xchg
sbbb
xor
xchg
scas
mov
push
dec
fnstsw
sub
push
sbb
mov
shr
stc
sub
push
jecxz
pusha
jae
daa
cmpsl
das
sbb
pop
cwtl
lret
stos
imul
sub
cmp
cwtl
sbb
fldenv
lcall
sti
add
test
add
add
add
mov
loope
push
push
call
xchg
pop
pop
jnp
sub
mov
push
lahf
movsl
xor
les
xor
les
lods
mov
dec
sub
lcall
xlat
bnd
pop
dec
pop
inc
cmp
lret
mov
movsb
divl
dec
sub
pop
mov
push
push
add
sub
push
add
shr
shr
mov
ror
dec
add
sub
pop
rol
rol
sub
pop
push
add
rol
ror
inc
pop
push
call
push
lea
push
push
call
cmp
punpcklwd
mov
shr
or
setp
loopne
xchg
int
cld
jl
outsl
inc
rcrl
fdivs
pop
jp
fwait
jnp,pn
divl
loop
pop
mov
int
pop
out
cmp
xor
sahf
js
loopne
xor
lret
stos
rolb
add
jecxz
sub
pop
xor
push
shr
pop
sub
push
push
inc
sub
pop
push
push
add
ror
not
pop
push
push
lea
push
push
call
repz
cmp
idivb
insl
cmc
or
add
xor
in
loop
cmpsl
bound
out
dec
cmp
sbb
sarl
sbb
fwait
push
imul
out
js
call
fisubrs
mov
icebp
push
mov
cli
nop
pop
mov
insl
ret
sbb
fwait
pop
xchg
lods
mov
fadds
sub
pop
xor
jmp
push
push
push
push
push
call
cmp
push
test
leave
cmp
mov
int
or
push
or
cld
lods
orb
sbb
cmc
insb
stos
cltd
mov
xchg
es
and
int3
lahf
out
mov
sub
pop
or
je
xor
push
rol
sub
inc
pop
pop
push
push
not
rol
push
dec
mov
lea
sub
add
sub
rol
sub
pop
shr
lea
pop
push
push
call
mov
ljmp
stos
sbb
jnp
push
ds
sub
cltd
int3
lods
mov
sub
adc
add
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
call
movq
lret
es
sub
xor
or
enter
mov
dec
mov
xlat
adc
sbb
repz
test
jo
movsb
enter
dec
out
sub
sahf
push
lea
in
call
call
push
push
push
push
lea
push
push
call
fisubs
addb
mov
or
daa
pushf
push
shll
in
cwtl
sbb
loope
pop
cltd
stos
ret
sahf
jg
or
test
pop
mov
out
repz
mov
dec
mov
fildll
cli
jno
aam
adc
or
and
sub
pop
mov
push
inc
pop
push
push
push
shr
dec
push
add
mov
inc
rol
sub
rol
dec
pop
pop
push
push
sub
rol
xor
ror
push
xor
not
mov
sub
add
add
pop
add
lea
lea
pop
push
push
shr
push
shl
mov
add
add
sub
not
add
sub
pop
dec
shl
pop
push
push
lea
push
call
stc
mov
insl
xor
mov
sub
mov
or
cltd
dec
pop
loop
dec
fadds
outsl
pop
stc
adc
in
hlt
pop
push
push
push
push
lea
push
push
push
call
notl
mov
and
jns
movsl
xor
mov
aas
sbb
mov
mov
mov
iret
and
pop
xchg
and
or
sbb
sahf
jns
mov
scas
mov
push
lcall
push
ror
shl
pop
call
or
je
push
push
push
call
jmp
pop
lock
aam
inc
push
rcll
cwtl
divb
lea
in
gs
in
mov
sbb
aas
mov
mov
roll
dec
repz
rcll
sbbl
xchg
sub
iret
xchg
out
addr16
sub
pop
push
call
push
inc
pop
add
push
lea
push
push
push
push
call
and
mov
add
add
in
bound
mov
pop
in
push
ficomps
cmp
stc
in
add
icebp
mov
dec
dec
push
sub
jg
mov
push
mov
mov
loop
cmpsl
aam
adcl
cmp
pop
adc
icebp
sub
pop
pushl
push
push
lea
push
call
pop
lods
stc
mov
test
jle
divl
loopne
cld
sbb
mov
xor
enter
lret
bound
xchg
sub
pop
pop
push
rol
shl
pop
mov
mov
push
lea
push
push
push
push
call
jns
push
leave
jle
sbb
and
mov
push
mov
lods
ja
mov
pop
pop
aas
aaa
insb
stos
mov
mov
pop
jns
mov
push
inc
clc
popf
clc
dec
in
test
jg
shrb
xor
in
in
pop
mov
push
push
shl
push
add
sub
rol
mov
sub
sub
shr
ror
inc
pop
sub
sub
pop
push
push
push
call
insb
outsl
push
dec
push
inc
push
mov
ljmp
fisttps
push
out
arpl
xor
orl
jne
repnz
xlat
cmp
pusha
orps
push
jne
push
pop
insb
dec
inc
ss
arpl
int3
ret
dec
outsl
in
jle
jg
fcmovb
ds
fs
pop
push
push
add
pop
call
push
lea
push
push
push
call
stos
dec
inc
out
rcrb
lret
jnp
aaa
mov
jne
rcr
imul
enter
cli
dec
repz
dec
and
sub
pop
cmpl
jne
push
sub
shr
rol
pop
add
push
push
add
push
sub
shl
lea
dec
mov
shl
sub
add
pop
xor
ror
pop
push
push
lea
push
push
push
call
cmp
fld
mov
lret
lret
loopne
js
ret
loop
sahf
or
mov
add
outsb
andl
in
adc
pop
je
ror
and
mov
xchg
dec
jmp
sub
pop
push
push
dec
inc
ror
sub
pop
call
push
push
push
shr
push
add
not
inc
mov
sub
not
inc
xor
sub
sub
pop
shl
pop
push
push
call
jae
out
mov
and
arpl
push
lods
stos
fdivrp
and
adc
cmp
mov
sbb
xor
sbb
lcall
mov
jge
jae
xor
jge
fsubl
sbb
jns
sub
out
ss
sub
pop
push
push
push
push
call
lcall
pop
inc
inc
push
out
mov
out
mov
outsb
mov
fldenv
mov
cwtl
sarl
dec
imul
cs
lret
js
rorb
cli
jmp
das
sbb
sub
ljmp
push
jecxz
lahf
sbb
lcall
add
loop
arpl
add
inc
shlb
jmp
mov
push
mov
or
std
aas
dec
inc
test
or
fnstenv
faddl
mov
jo
ret
cwtl
xchg
and
insb
shl
cmpsb
push
dec
xor
mov
mov
shll
jge
mov
xchg
dec
sub
pop
mov
bound
xchg
sub
pop
call
push
push
push
push
lea
push
call
das
sub
mov
mov
movsl
loopne
dec
xor
std
dec
inc
xchg
xchg
mov
cli
xlat
repz
jbe
and
dec
bound
sbb
lcall
clc
push
shr
pop
push
push
lea
push
lea
push
call
jl
stos
jbe
neg
aad
notl
stc
jbe
jmp
test
mov
mov
into
jge
ja
in
cmp
mov
inc
cmpl
jbe
stos
addr16
cmp
sub
push
loope
sub
dec
add
jne
pusha
or
push
pop
xor
movsb
fsubl
ljmp
into
sub
pop
push
push
push
push
push
push
call
aas
lahf
lcall
sbb
mov
jmp
stos
or
test
clc
fnstsw
inc
out
pop
std
call
xor
xor
or
dec
mov
ss
mov
xor
jge
sub
pop
mov
add
push
push
push
push
push
push
call
ret
jecxz
pusha
roll
icebp
lods
xchg
or
testb
mov
fstpt
cmp
sahf
lds
aad
loopne
mov
sahf
jno
iret
shl
or
jg
arpl
enter
in
call
add
push
shr
sub
pop
mov
xor
push
push
push
push
push
push
call
fisubrs
mov
fwait
cmpl
adc
cmp
rol
xlat
ror
mov
rorl
push
gs
sub
mov
add
ja
movsl
jmp
nop
loope
sbb
add
jae
cmpsl
or
jae
sub
pop
add
push
push
lea
push
push
lea
push
lea
push
call
and
or
cmp
fxch
inc
sahf
out
pushf
fldl2t
push
adc
mov
xchg
and
cmp
sti
inc
jmp
test
push
xor
out
dec
cld
lea
ret
mov
sti
push
fwait
adc
test
lcall
dec
add
or
xor
push
push
call
lods
bound
lock
pop
sub
pmaxub
jle
fcomi
movsb
push
vunpckhps
pop
xrelease
add
sbb
jecxz
push
inc
inc
adc
jecxz
in
in
lcall
or
push
push
call
stos
xor
shr
push
movsl
lahf
int3
call
xchg
test
cmc
iret
or
arpl
sub
sub
jns
divb
stos
xor
cwtl
bound
lds
xchg
lock
cwtl
xor
jno
loope
xlat
repnz
mov
pop
lods
aaa
add
mov
pop
push
sub
pop
add
push
lea
push
push
push
lea
push
push
call
add
cmpsl
fnstenv
xor
iret
inc
dec
jle
sbb
rcll
jno
nop
ret
aam
sub
pop
rep
pop
push
push
push
call
add
vmread
mov
imul
or
add
push
shll
into
lock
in
mov
inc
iret
imul
inc
jp
lret
mov
aaa
jmp
cmpsl
lea
jbe
out
jle
test
mov
pop
mov
add
out
sbb
pop
jbe
cld
sub
pop
mov
push
push
push
lea
push
call
repz
jle
jne
popf
and
fcom
sub
aas
or
xor
xchg
jbe
clc
mov
stos
out
cli
shll
adc
out
pop
in
icebp
jl
in
lock
add
push
shl
rol
dec
pop
add
push
push
push
push
call
insb
mov
lods
or
xor
cmp
or
push
ret
movsl
mov
shrb
mov
out
push
div
cltd
or
and
rclb
xchg
stc
jecxz
xchg
sub
pop
mov
xor
push
push
call
out
popa
dec
cmpsb
cld
stos
mov
int3
adc
and
lahf
in
inc
cmpl
or
lds
popa
in
mov
add
mov
or
adc
js
aad
into
adc
in
clc
pop
mov
push
push
push
lea
push
push
push
call
movsb
aam
xchg
arpl
adcb
rcrb
and
mov
cs
das
enter
outsb
dec
jbe
xor
and
test
in
push
jnp
xchg
jbe
pop
push
adcl
frstor
sub
jmp
ficomps
adc
jg
into
pusha
and
sub
pop
xor
push
push
push
call
dec
int
int3
adc
lcall
int3
and
push
or
and
in
mov
mov
adc
arpl
inc
cwtl
outsl
sti
fisttpll
out
xchg
ficoms
dec
push
mov
lret
sahf
add
push
sarl
aaa
sti
lods
outsl
pop
sub
pop
add
push
push
lea
push
push
lea
push
call
ja
pop
clc
data16
fs
loope
cmpsb
xor
mov
cmpsl
cmc
test
xchg
mov
push
push
mov
dec
xchg
push
jno
jl
int
insb
out
ret
inc
pop
clc
ret
aaa
or
xchg
mov
lds
jmp
fiadds
or
add
lods
dec
push
daa
push
in
sub
pop
mov
xor
push
lea
sub
dec
pop
add
add
push
lea
push
push
push
call
addr16
icebp
aas
in
sub
sub
aas
xor
shlb
adc
pop
imul
in
cmp
das
mov
cmp
sub
pop
mov
push
push
push
shl
mov
not
add
not
dec
sub
dec
ror
pop
sub
add
shr
pop
push
push
push
push
lea
push
call
mov
mov
inc
cwtl
mov
notb
sbb
and
jbe
jge
data16
test
fisubrs
and
sbb
sub
cmc
jae
cmpsb
push
out
out
adc
mov
nop
sbb
push
pop
dec
dec
mul
mov
stos
sub
pop
push
call
push
inc
pop
push
push
push
inc
ror
shr
push
rol
sub
mov
rol
sub
sub
xor
pop
not
pop
push
push
call
push
jno
pop
mov
repnz
dec
fscale
pop
add
cmp
cmp
mov
xchg
std
mov
xchg
lods
sub
add
dec
lret
sbb
imul
out
loopne
leave
stos
mov
in
filds
push
shr
not
sub
pop
push
call
push
lea
push
push
push
push
lea
push
call
outsl
sarl
sub
adc
pop
sbb
out
stos
mov
push
jbe
popa
or
imul
scas
adc
out
nop
xor
test
loop
hlt
dec
nop
fadds
push
fstp
xor
push
out
loopne
push
xchg
pop
ja
pushf
sbb
jl
sahf
pop
rcr
xor
aaa
adc
in
call
push
push
push
push
call
lds
jge
cmp
xor
or
dec
xchg
adc
or
aad
inc
jge
nop
mov
loopne
cmp
mov
push
cmp
orl
mov
sub
sub
rcrl
imul
cmp
aad
orl
loope
jl
sub
pop
push
push
rol
shr
shl
add
pop
mov
push
lea
push
push
call
cmp
mov
clc
andb
push
sub
pop
loopne
ficoms
adc
jp
jo
decb
sahf
push
dec
pop
jbe
pop
mov
arpl
stc
imul
out
leave
add
jmp
mov
shlb
dec
push
mov
cmpsb
sbb
mov
xchg
sub
pop
add
add
push
push
push
lea
push
lea
push
call
lods
sbbb
into
sbb
movsb
mov
popf
mov
mov
push
pop
outsl
jno
loop
scas
dec
xlat
clc
mov
and
push
fcoms
sbb
sub
in
mov
fnstcw
pop
jmp
testb
lcall
jae
push
push
push
lea
push
push
call
ds
scas
pop
mov
fsubs
aam
push
mov
cmp
pop
mov
dec
addr16
dec
push
xchg
add
movntq
inc
sub
and
and
and
daa
outsl
dec
mov
sbb
leave
jl
test
xor
sbb
loop
push
sahf
sub
pop
xor
push
push
call
ljmp
or
test
rcr
cmp
mov
jne
mov
jo
push
sub
add
mov
insb
in
pushf
pop
into
cmpsl
rorl
stos
gs
adc
pop
inc
xorl
lcall
add
add
pop
add
push
push
push
call
cmp
dec
and
push
xchg
clc
pop
ljmp
xchg
arpl
repz
int
xchg
adc
int
fcoms
or
ret
bnd
imul
lock
sbb
adc
inc
stc
mov
xor
lea
jns
sub
add
in
pushf
rorl
test
hlt
lcall
dec
sbb
cwtl
push
add
sbb
push
push
call
movb
data16
repz
add
enter
and
cld
mov
test
fs
adc
ds
or
pop
add
enter
sub
push
pushf
or
lods
stos
or
xor
mov
data16
mov
mov
inc
pop
inc
jmp
push
lds
je
add
in
lcall
or
push
push
push
push
push
call
adc
mov
jg
std
cmp
mov
out
cltd
dec
stc
cs
cmc
add
mov
jecxz
dec
sub
dec
push
sub
inc
fwait
xbegin
or
jo
adc
adc
and
jge
dec
xor
cmp
xchg
mov
leave
or
in
in
lcall
les
add
push
pop
rep
push
not
pop
mov
push
push
push
push
push
push
push
call
sub
popa
sub
xchg
dec
lahf
adc
cmpb
mov
in
iret
add
rclb
pop
xor
push
push
push
lea
push
call
popf
arpl
pushf
sbb
shlb
jecxz
adc
mov
push
ss
and
mov
addr16
sbb
inc
roll
hlt
pop
adc
sahf
and
push
jo
icebp
mov
sub
pop
add
push
push
lea
push
push
push
push
call
sub
push
lea
pop
adc
outsl
xchg
addr16
cmpsl
out
sti
and
pop
pop
sbb
and
mov
cmc
aam
sbb
jb
pop
add
inc
mov
and
cs
adc
sarb
enter
cmp
pop
or
je
mov
push
push
push
push
lea
push
push
call
fsubrp
cmpsb
mov
mov
jl
mul
jmp
scas
mov
xchg
adc
pop
mov
jne
gs
sub
sbb
out
sub
xlat
xchg
cmp
and
sbb
lret
daa
dec
aaa
sub
in
in
lcall
xor
push
push
push
push
call
jge
or
push
cmp
ja
jae
xlat
inc
mov
adc
push
xlat
roll
lret
jns
into
lods
push
call
xor
ja
shrl
inc
rorb
test
mov
mov
aaa
xchg
int3
das
out
xchg
push
aam
pop
push
pop
mov
mov
mov
leave
out
jno
jb
add
in
arpl
mov
in
lock
lcall
les
lea
shr
rol
pop
mov
xor
push
rol
not
add
pop
add
add
push
not
add
ror
rol
pop
rep
push
ror
pop
mov
push
push
push
push
push
call
jne
int
mov
movsb
shll
sub
stc
xor
cmp
in
rorb
xchg
mov
in
push
jns
and
mov
aas
iret
outsb
jl
fucomip
movsl
xor
push
or
fsubrl
loop
int3
cmp
xchg
ds
lds
js
inc
jne
or
sub
pop
xor
push
push
push
lea
push
call
divl
faddl
std
clc
ficoms
jnp
mov
icebp
cmp
xor
popf
mov
out
push
or
ficoms
cmp
mov
cmp
fisttps
mov
xchg
jg
mov
mov
pushf
fistl
movsb
cmpsb
push
cs
pop
jae
sub
pop
add
push
add
pop
or
je
push
push
call
xchg
cli
xchg
mov
cmp
xchg
imul
mov
iret
movsl
xor
into
aad
insl
inc
in
jnp
scas
cltd
adc
incb
xlat
sbb
sub
pop
mov
add
push
push
lea
push
call
scas
mov
jge
fbld
sub
les
int
jge
icebp
add
xchg
pop
jecxz
push
xchg
dec
inc
push
stos
adc
lea
aas
int3
addr16
pop
cmp
cmp
and
xchg
push
pop
aas
pop
fdivrs
cmpl
mov
lret
mov
push
push
es
push
push
sbb
lcall
movsb
push
push
lea
push
push
call
rep
push
inc
sti
out
push
mov
mov
in
push
dec
inc
pop
shlb
lods
sub
psrad
push
inc
push
daa
and
fsubrs
inc
fidivs
lods
sub
pop
pop
push
push
sub
add
push
inc
shr
mov
xor
inc
shl
sub
sub
add
pop
sub
dec
add
pop
push
push
call
std
adc
jg
pop
mov
test
popf
dec
mov
mov
sub
mov
lock
mov
sbb
mov
add
xor
aas
sub
pop
pop
push
ror
rol
sub
sub
pop
mov
jmp
push
push
push
push
call
mov
mov
push
imul
xor
rolb
or
hlt
fdivrs
aad
pop
add
hlt
jle
add
lcall
mov
repz
or
outsb
mov
lcall
push
push
push
lea
push
push
call
icebp
dec
and
pop
mov
xor
pop
lea
push
popa
or
push
mov
inc
orl
mov
je
js
xlat
jle
push
jne
ja
mov
push
aam
sbb
dec
mov
or
enter
roll
lahf
fildll
in
in
lcall
in
push
push
call
cltd
lret
mov
aad
stos
or
pop
jl
lret
jp
lds
mov
or
iret
dec
in
jae
or
sbb
adc
adc
cmc
bound
mov
lret
dec
jge
lods
adc
repnz
call
cmp
dec
arpl
clc
lcall
cld
push
add
pop
push
push
push
xor
pop
push
push
push
push
push
push
push
push
call
mov
mov
dec
gs
mov
mov
adc
scas
loopne
scas
repnz
pusha
outsl
clc
adc
jbe
lcall
push
push
pop
movsl
imul
cs
js
aad
loopne
jb
dec
icebp
aad
pop
add
adc
std
fbld
ss
cmp
and
lcall
push
lea
push
lea
push
push
push
push
call
out
out
shll
and
mov
push
mov
or
sarl
testl
push
inc
cmp
and
mov
push
jbe
and
adc
mov
lods
jg
xor
inc
sub
pop
mov
mov
push
push
lea
push
call
push
ficompl
fisttpl
cld
jle
lds
cmp
imull
jbe
stos
jno
mov
or
xor
push
outsb
push
sbb
jb
push
inc
mov
xor
sbb
cwtl
out
add
pop
mov
mov
lret
dec
jecxz
insb
cmp
lods
cli
fs
in
hlt
lcall
ficoml
xlat
push
push
lea
push
push
call
inc
sub
divl
clc
jo
or
mov
mov
rcll
add
iret
cmp
xor
icebp
jg
cmp
dec
xchg
fdivp
adcb
je
lcall
mov
pop
mov
cmpsl
ljmp
call
mov
push
not
add
pop
add
push
push
push
call
dec
xor
jno
xorl
add
je
or
loopne
insb
stos
jno
mul
lods
jae
cwtl
lea
imul
or
mov
jb
xor
sti
scas
pushf
ds
inc
sbb
jb
xor
rolb
adc
jmp
in
hlt
pop
mov
add
push
push
push
push
call
push
add
inc
sub
pop
inc
jne
ret
xchg
aas
pop
mov
jle
cmpb
cli
push
or
dec
insl
ret
or
xor
push
andl
pop
sub
and
fs
xorl
cmp
pop
in
inc
jl
sub
pop
xor
push
add
pop
mov
xor
push
inc
dec
rol
pop
rol
push
shr
lea
pop
xor
inc
push
sub
sub
pop
cmpb
jne
cmp
je
push
push
push
push
push
call
out
xchg
lret
mov
mov
loope
pop
dec
xchg
lods
sub
test
imul
dec
out
inc
leave
stos
mov
mov
mov
inc
mov
xor
mov
ret
cltd
dec
mov
imul
adc
sub
shr
add
pop
cmpl
jne
xor
push
lea
push
push
call
jle
add
scas
xchg
lahf
mov
divl
stos
adc
jne
xchg
add
jecxz
test
test
sub
mov
and
jae
adcb
fcompl
pop
pop
push
sub
lea
add
pop
pop
pop
push
pop
pop
push
dec
add
pop
pop
push
not
shl
sub
pop
leave
push
push
lea
push
lea
push
push
push
call
call
pop
adc
sbb
fsubl
mov
adc
and
mov
mov
loopne
or
in
pop
mov
ret
sub
dec
imul
jl
lcall
jle
stc
jge
sahf
test
push
aad
inc
push
push
je
ja
jle
mov
sub
pop
ret
push
add
sub
dec
pop
mov
push
rol
sub
add
lea
pop
add
push
push
push
lea
push
lea
push
call
idivb
mov
iret
mov
into
dec
rclb
adc
mov
push
rcrb
out
sub
jno
addr16
sti
mov
sub
xor
sub
adcb
and
inc
cmp
repnz
in
pop
jbe
mov
out
cmp
and
insb
rcrl
lcall
add
shl
lea
pop
call
push
not
ror
pop
xor
push
lea
push
push
push
call
hlt
insl
sbb
sbb
in
add
push
sti
repnz
lea
stos
sub
mov
cmpsb
jo
and
sub
pop
pop
push
ror
pop
pop
pop
push
push
push
push
push
push
call
loopne
mov
flds
pop
mov
les
pop
adc
ja
loopne
jmp
or
fistps
ret
loopne
xchg
mov
jp
sub
dec
jmp
mov
sub
pop
pop
pop
push
push
push
push
call
bound
outsb
test
pop
fdivp
negl
mov
sbb
imul
shlb
in
nop
loope
jg
jle
aaa
xor
pop
cli
or
dec
cmpl
dec
shlb
add
mov
or
leave
push
push
push
push
push
call
cmp
jg
sbb
ljmp
nop
enter
pusha
test
roll
xor
das
scas
dec
outsb
xchg
in
adc
lea
dec
push
mov
push
pop
pushf
add
sub
pop
ret
push
push
pop
mov
push
add
sub
pop
cmpl
jne
push
xor
lea
not
pop
mov
jmp
push
lea
rol
ror
pop
mov
push
dec
rol
pop
and
push
rol
pop
pushl
push
pop
pop
push
ror
pop
sub
jmp
push
shl
ror
xor
lea
pop
sub
push
inc
sub
add
pop
pushl
push
add
shr
pop
pop
sub
push
push
push
lea
push
push
call
pop
shll
inc
pop
rcll
pop
ret
clc
push
call
jo
dec
cs
cwtl
pop
in
ret
sbb
out
or
sub
into
cmpsb
adc
and
add
cli
jle
mov
cmp
xchg
call
iret
call
push
cmp
pop
icebp
push
not
pop
sbb
xchg
add
inc
fs
dec
push
imul
into
mov
lods
jmp
lcall
mov
cs
pop
mov
add
push
add
inc
lea
pop
movzwl
sub
push
lea
push
push
push
call
ds
add
mov
test
cmp
clc
push
stos
out
icebp
shll
mov
loope
fs
into
scas
cld
push
fcmovne
cmc
je
jns
xor
xor
in
lock
lcall
stc
in
push
decl
test
call
out
sbb
lea
push
call
sbb
scas
aam
dec
in
into
mov
cmpsb
lret
inc
xor
push
outsl
or
xchg
loop
dec
clc
pushf
pop
addr16
xor
push
push
or
ja
test
sub
cli
insb
inc
sahf
inc
jno
in
hlt
pop
leave
push
lea
push
push
lea
push
push
push
call
cs
andl
aad
sub
inc
mov
inc
fistps
jle
xor
or
xorb
jbe
xor
or
lret
lock
mov
das
insb
mov
clc
dec
fwait
mov
inc
cmpsl
lods
shll
push
scas
mov
mov
in
pop
mov
mov
sub
pop
ret
push
push
push
lea
push
call
daa
lret
cwtl
in
xor
push
aas
cmp
stos
lret
clc
fidivrs
arpl
mov
shrl
jae
jae
fnstsw
rcl
popf
addr16
xor
mov
mov
lret
mov
lock
push
push
push
push
call
mov
sub
test
stos
repnz
push
fsubs
mov
mov
leave
idivl
xlat
clc
mov
sbb
ret
in
in
aam
int3
rolb
call
es
addb
hlt
lcall
in
add
push
sub
add
shr
pop
push
push
push
lea
push
push
lea
push
call
pop
clc
fs
lahf
outsl
ret
adc
popf
icebp
roll
xchg
idivb
dec
jg
cmp
sub
pop
inc
push
test
stc
lods
test
pop
cmp
mov
xchg
mov
xchg
jp
lds
aaa
sub
pop
push
push
push
call
sbb
sbb
cmpsb
fcomi
jmp
adc
popf
mov
push
jns
jne
pop
ja
jbe
stc
loope
in
clc
pop
push
push
push
push
lea
push
push
lea
push
call
sahf
in
and
icebp
sub
icebp
adc
pop
inc
jo
fnstcw
addl
xorb
or
jmp
iret
nop
inc
pop
in
sbb
inc
and
xor
pop
push
push
push
push
lea
push
lea
push
lea
push
call
sub
or
pop
loopne
add
pop
xchg
dec
xor
xchg
outsb
mov
jae
mov
jbe
jl
lds
cmp
jp
js
and
dec
push
mov
push
push
out
add
pop
out
mov
ljmp
xlat
sub
pop
mov
push
push
lea
push
lea
push
push
call
out
sbb
clc
punpckldq
mov
fs
jnp
enter
pushf
or
pop
ljmp
call
push
pop
push
push
lea
push
push
push
call
stos
andl
mov
add
sbb
lds
fdivrs
lahf
and
jecxz
mov
push
test
add
in
pop
jmp
push
ss
scas
push
or
rcrl
push
push
push
fdivrs
sub
jns
bound
bound
in
in
pop
mov
push
lea
push
lea
push
push
call
mov
cs
pop
hlt
stos
mov
fxch
xchg
inc
or
jp
dec
inc
in
das
sub
xchg
repnz
sahf
into
popf
cmpsb
dec
jno
jmp
pop
add
xor
out
or
ja
adcl
nop
sub
xor
addl
pop
add
mov
push
add
pop
add
push
dec
xor
pop
pushl
push
push
push
push
push
lea
push
call
idiv
cld
inc
cmp
dec
mov
dec
in
je
aaa
dec
movsb
mov
cmpb
xor
sub
out
pusha
pop
aaa
fnstsw
add
xlat
xlat
lret
mov
cmp
xchg
sbb
pushf
out
cmp
pop
cmp
out
dec
xchg
xor
int3
adc
mov
sub
mov
add
fadds
inc
clc
push
add
lea
pop
mov
push
not
pop
add
xor
push
push
lea
push
call
mov
je
mov
aad
addr16
insl
sub
jnp
out
subl
inc
push
cmp
in
ss
jo
mov
bound
outsl
jg
scas
cmp
add
push
int
xor
stc
sub
pop
lea
push
ror
not
sub
pop
mov
push
add
ror
pop
add
push
push
call
imulb
inc
rol
inc
sbb
loop
push
rclb
out
xchg
cwtl
push
sub
int3
xchg
lock
jecxz
sub
pop
xor
rol
push
push
push
call
scas
stc
and
leave
call
push
jmp
cmc
adc
negb
addr16
jb
dec
scas
enter
int3
pop
cmpsl
or
sbb
popa
movsb
loop
enter
out
adc
sarb
sbbl
mov
xor
add
andnps
push
sub
pop
nop
push
push
call
mov
jno
sarb
outsl
test
nop
push
mov
lret
pop
or
sub
stos
daa
pop
lret
sbb
push
dec
shll
sub
fxtract
js
and
daa
scas
clc
mov
arpl
dec
sti
in
sub
lcall
push
dec
pop
xor
push
push
push
push
call
mov
dec
push
mov
jbe
fadds
cmp
and
dec
jno
aad
lret
stos
dec
or
or
sbb
ljmp
mov
xchg
lcall
push
dec
add
rol
pop
nop
inc
push
lea
push
call
test
pusha
les
jle
loop
jb
mov
mov
add
lret
sub
lea
in
and
and
clc
pop
nop
nop
push
pop
cmpb
jne
push
rol
not
not
pop
nop
push
rol
lea
lea
pop
nop
cmp
je
push
push
push
push
lea
push
lea
push
call
cs
jns
inc
repnz
pop
lock
sti
pop
pop
and
xchg
out
cmp
jmp
ja
or
jle
fistps
jb
lock
rclb
dec
adc
sahf
inc
popf
scas
sbb
mov
pop
adc
sbb
stos
sub
pop
nop
push
sub
pop
nop
push
lea
rol
pop
inc
push
not
pop
nop
push
shr
pop
nop
push
lea
push
lea
push
lea
push
lea
push
push
call
sub
dec
je
lcall
mov
pop
cli
and
inc
add
aaa
cmp
bound
adc
sub
push
imul
xor
and
lods
clc
and
add
in
call
jb
xor
push
inc
pop
jmp
mov
push
lea
ror
xor
pop
add
movzwl
push
pop
mov
push
push
push
push
lea
push
lea
push
call
in
adc
test
fcompl
out
sahf
out
insb
pop
inc
out
cmp
mov
jp
adc
stos
sbb
pop
pop
out
cwtl
btc
sbb
rcll
mov
lea
shl
sub
pop
mov
push
shr
dec
add
pop
add
push
push
push
push
call
xchg
aam
sar
jns
and
stc
sbb
cmp
mov
jmp
mov
pop
je
addr16
or
jnp
flds
and
lock
jbe
mov
lock
lcall
push
xor
dec
lea
pop
pop
pop
push
lea
rol
shl
inc
pop
pop
push
ror
rol
pop
leave
push
push
push
push
call
cmp
repnz
sbb
jge
loope,pn
mov
push
sbb
shll
mov
dec
test
fnstsw
push
scas
nop
cmpsb
lods
mov
pusha
xchg
lret
sub
cmp
aad
xchg
repnz
inc
jae
xchg
sarb
imul
repnz
cmpsb
ds
pop
ret
or
push
add
ret
or
push
add
rclb
cmpsb
push
add
mov
fistpl
push
add
xchg
sbb
and
adc
rcll
imul
inc
xchg
fidivrl
andb
mov
je
call
ds
aad
jmp
mov
pop
pop
lahf
mov
dec
xchg
movsl
xchg
ds
div
dec
clc
outsb
sti
in
ret
mov
insl
dec
fisttps
ljmp
add
int3
cltd
mov
and
pushf
add
adc
cwtl
adc
rcrb
cmp
pop
add
dec
dec
xchg
mov
xchg
xor
sahf
mov
enter
mov
push
pop
cmpsl
out
movsb
or
test
cmp
adc
out
mov
mov
int
xchg
and
ret
mov
sub
notb
dec
rclb
fdiv
xchg
out
ja
cmpsl
push
xor
cmp
cmp
and
cld
testl
std
push
movsb
adc
and
mov
xchg
mov
in
iret
jne
sbb
sbb
cmp
mov
clc
test
jne
or
icebp
sub
push
mov
dec
sub
jo
and
xor
mov
test
ret
xchg
mov
mov
xchg
or
mov
jnp
data16
sar
mov
pop
or
stos
shrb
lcall
ret
dec
jnp
rcll
sbb
rol
xchg
push
out
pop
into
xchg
cld
cli
sbb
fwait
in
push
loopne
fisttps
sti
cmp
data16
lahf
inc
clc
pop
mov
adc
add
jbe
std
xor
mov
push
lcall
loopne
popa
mov
jg
adc
test
cmp
pop
xor
sahf
std
pushf
dec
dec
les
pop
pop
or
out
cmp
pop
pop
xchg
add
fisubrl
add
loope
jbe
xor
insl
adc
es
adc
fbld
daa
pop
mov
outsb
outsl
jle
ret
push
int3
cmp
mov
jne
pop
gs
out
dec
inc
fwait
xchg
aaa
adc
cwtl
dec
mov
push
call
fildl
add
and
jb
and
es
push
mov
push
int
mov
in
pop
mov
pop
in
ljmp
les
out
ja
arpl
add
in
pop
xor
push
sub
std
mov
push
in
cmp
pushf
mov
test
sbb
nop
cwtl
hlt
cmp
pop
jge
or
push
lahf
fdivrs
les
sub
mov
mov
arpl
lret
std
adc
loop
push
sbb
lods
xor
fcompl
cld
cld
sbb
jns
cmp
lods
dec
and
rcl
ljmp
popf
inc
idivl
stos
mov
push
pusha
cmp
mov
sbbl
adc
pop
or
call
mov
rcrb
jmp
lds
and
mov
xor
pushf
push
fdivp
jge
jmp
xchg
cmpsb
into
in
or
je
pop
mov
jo
subb
cmp
push
repnz
loop
stos
inc
cmc
jns
sti
inc
rcrl
aaa
loope
ret
push
xchg
aam
outsl
dec
dec
mov
in
pusha
cwtl
xchg
stos
or
pusha
mov
cld
fistl
fcmovb
fsts
daa
adc
add
sbb
lret
imul
add
out
jne
lds
in
mov
adc
sbb
ret
dec
fsubrp
mov
insl
xchg
xchg
add
add
movsb
hlt
mov
es
adc
xchg
pop
and
add
inc
bound
movsb
xchg
jae
cmp
pusha
inc
inc
dec
sbbl
mov
xor
fdiv
and
add
push
pop
xor
daa
push
sbb
inc
test
cli
add
pop
shlb
not
fcoml
or
cli
adc
mov
lahf
xchg
vmovaps
or
stos
clc
adc
mov
mov
stos
jge
mov
dec
push
sub
pop
insb
call
push
imul
cs
jmp
inc
clc
out
outsl
sbb
add
sub
test
stos
jb
mov
lahf
push
fwait
push
push
sbb
cmp
inc
push
jmp
xchg
sbbl
imul
insl
and
push
jle
lock
xchg
popa
mov
rolb
imul
push
mov
paddsw
das
lods
iret
pop
dec
inc
lock
je
jmp
mov
lahf
add
loopne
rorl
jmp
inc
movsl
mov
sbb
pop
test
push
arpl
push
lods
loope
jl
xchg
xorb
pop
push
cmc
call
adc
lcall
xchg
popa
fmull
or
in
jle
xchg
dec
fistl
push
test
fstp
hlt
adcl
add
das
ss
mov
or
stc
xchg
fistps
imul
adc
sbb
lret
xor
lea
popa
or
fwait
stc
imul
jnp
jp
pop
iret
mov
mov
movsl
cmpsb
outsb
cmc
sub
push
or
lods
xorl
xchg
stos
xchg
cmp
push
iret
jb
cltd
or
xchg
jb
int3
mov
mov
pop
gs
lods
ret
jne
shll
pop
popf
jbe
fwait
mov
lds
or
inc
rcrb
mov
dec
xchg
adc
lcall
pop
rol
mov
adc
aas
xor
jmp
cmp
or
lds
in
and
movsb
nop
int
xor
rcrl
inc
outsb
cmpsl
lcall
cmc
push
mov
popf
ret
or
js
rclb
fwait
mov
xchg
je
or
ficoms
dec
sbb
dec
add
sbb
push
add
outsb
insb
sti
sbb
imulb
fsts
loope
adc
add
sti
inc
sub
stc
dec
xchg
das
fcmovnu
adc
and
mov
sbb
imul
imul
js
fsub
mov
scas
mov
adc
xor
push
jbe
ja
pop
cmc
cld
popf
loopne
mov
imul
aam
loope
mov
test
push
test
mov
xchg
lahf
dec
adc
cld
and
pop
daa
cwtl
jns
sub
xor
cld
lahf
or
test
cld
push
sbbl
sar
daa
in
jecxz
cmp
imul
jns
inc
addl
xchg
imul
xchg
test
jns
sub
sbb
xchg
loop
insl
cld
in
das
pop
jb
roll
jae
and
pop
loope
ja
cld
xor
clc
lods
jae
pop
add
cwtl
adc
stc
mov
lds
in
daa
xchg
enter
add
jg
les
adc
and
add
sbb
inc
add
mov
orl
neg
mov
aam
or
ds
insb
stc
pop
cli
push
add
mov
bound
jge
xchg
push
ret
cli
je
mov
cmpsl
dec
xchg
inc
pop
pusha
addr16
dec
push
fnstenv
pop
jecxz
inc
jp
insl
aaa
sub
icebp
addr16
inc
fnstenv
lret
mov
lods
jmp
test
leave
jmp
xcrypt-ofb
cmpsl
sub
loopne
pushf
fwait
push
int3
test
sub
xchg
repz
pop
or
std
or
fisttpll
aas
mull
mov
nop
xor
in
sub
add
mov
sbb
enter
adc
sahf
xchg
vpsrad
and
iret
push
outsb
popf
outsb
pop
bound
or
lcall
out
daa
ljmp
xchg
mov
inc
dec
hlt
sub
xchg
xchg
jl
mov
adc
inc
mov
mov
mov
and
xchg
pop
mov
lret
sbb
xchg
and
xchg
and
push
dec
rcr
or
xchg
mov
jo
mov
pop
cld
push
adc
addr16
sbb
repnz
mov
pop
ret
icebp
or
jno
dec
adc
nop
jne
fcompl
cs
repnz
lock
fwait
inc
sar
mov
in
daa
xchg
lret
jb
dec
mov
roll
sbb
jnp
call
sub
inc
mov
mov
and
xlat
sbb
inc
int3
pop
mov
daa
mov
emms
lret
popa
cwtl
int
rcrl
iret
scas
cmp
mov
ss
popf
sarb
push
mov
jno
xchg
flds
arpl
test
adc
cmpsb
xchg
lret
cmp
lea
add
inc
mov
scas
enter
popa
fdivrl
test
addr16
jo
int3
ret
je,pt
es
dec
mov
insb
fisttpl
in
cmp
mov
sub
cli
icebp
sub
xor
sub
rolb
and
jnp
cmp
dec
jno
inc
mov
push
into
xchg
pop
dec
push
lods
jle
adc
jno
nop
shll
add
adcl
sub
push
aad
iret
mov
cwtl
cmpsl
insl
cld
push
mov
xchg
subl
mov
jecxz
mov
mov
arpl
xor
lds
adc
adc
nop
leave
leave
inc
ss
push
and
mov
xchg
imulb
jl
cli
inc
insl
in
test
out
loopne
fsubrs
sti
rorb
mov
es
mov
je
cmp
sbb
inc
insb
adc
in
jle
insl
insl
cvtps2pd
gs
je
sbb
adc
outsb
sub
mov
sbb
mov
cmp
inc
jge
ss
fadds
js
cmp
call
jl
push
sub
mov
fisubrl
sbb
mov
loopne
popa
mov
inc
fbstp
adc
cmp
cmpsb
lret
pop
loope
mov
sbb
adc
inc
xchg
inc
pop
int3
sub
dec
jo
jbe
add
lret
jbe
mov
jne
xchg
add
xor
add
push
cmpb
test
jp
jno
cmp
stc
xchg
jp
mov
mov
sarb
jns
data16
mov
ret
and
test
mov
repz
cmc
repz
ja
int
test
data16
sti
sbb
inc
arpl
jb
mov
or
scas
cltd
or
imulb
cwtl
push
aad
mov
xchg
out
pushf
shrl
or
xor
mov
mov
push
xchg
int
jns
mov
ret
lods
insl
pop
dec
jbe
outsb
or
mov
cwtl
outsl
fs
std
add
cltd
es
mov
inc
pop
fldcw
xorb
jecxz
dec
xchg
nop
dec
das
mov
pop
inc
sub
add
inc
push
frstpm(287
scas
or
mov
cmpsl
out
mov
dec
push
test
inc
jp
sarb
sub
adc
push
jle
or
sub
xlat
mov
mov
rorb
xor
pushl
int3
pop
scas
xchg
clc
push
mov
xchg
add
and
out
jne
lcall
sub
mov
fcmovnbe
dec
push
pop
js
shl
pop
es
cmc
fildl
xor
pop
scas
fdivr
xchg
fldt
popf
add
mov
add
scas
jbe
repz
jbe
pop
mov
mov
adc
cmp
push
out
js
outsb
lret
jnp
div
mov
lea
ret
jp
xchg
mov
lods
cs
fwait
arpl
push
scas
outsl
clc
add
push
mov
adc
xlat
addr16
mov
or
adc
imul
adc
jg
xor
fmuls
test
in
push
daa
dec
outsb
out
push
je
shl
or
inc
dec
bound
push
mov
addb
cltd
mov
xlat
fisttpll
lea
pop
adc
sub
mov
andl
jae
mov
pushw
repz
xlat
cmp
ficomps
xor
fadds
push
adc
ljmp
sub
mov
mov
inc
icebp
fsubl
mov
push
add
loope
pop
lods
push
xchg
and
jae
sarl
push
adc
inc
push
and
or
cwtl
xor
lods
xchg
push
xchg
xchg
add
inc
pop
das
enter
push
lods
and
or
push
cmovae
sahf
lock
add
and
pop
lret
add
lret
loopne
fisttpll
das
xor
mov
mov
jne
dec
test
inc
jge
adc
lea
fucomi
push
mov
push
mov
fstpt
sahf
push
inc
mov
aas
mov
sbb
test
test
mov
aad
lods
xchg
dec
inc
and
int3
hlt
out
add
jnp
mov
inc
dec
lea
mov
and
cltd
mov
in
loope,pt
testl
mov
scas
pusha
inc
xchg
enter
test
data16
js
mov
mov
aam
shr
outsl
push
mov
inc
mov
xlat
add
pop
pushf
jo
sbb
js
jbe
cmp
xor
daa
add
xlat
lret
popa
inc
mov
aaa
jbe
xchg
inc
loopne
push
adc
add
in
cli
outsb
clc
adc
and
inc
mov
cmp
inc
mov
cmpsb
clc
mov
ljmp
dec
fidivrl
add
stc
les
xor
cmp
fwait
push
aad
jbe
sbb
mov
push
sbb
cld
jl
aad
sti
leave
jp
rclb
lock
jl
mov
popf
sub
addl
mov
pop
dec
movsb
and
cmpsb
xchg
push
or
mov
add
inc
add
pop
xor
rcrb
cmpsl
addb
repz
add
xor
int3
das
cltd
scas
push
jb
cli
cli
aad
inc
inc
sub
into
adc
push
icebp
or
arpl
adc
adc
orl
rorb
mov
into
or
mov
hlt
call
sbb
adc
lcall
mov
or
ss
fldl
notb
push
sbb
mov
dec
cmp
cld
test
outsb
ret
adc
adc
andb
mov
pop
sub
jp
scas
dec
adc
cmp
dec
ss
pop
test
cmpsl
dec
xor
stos
out
push
push
das
jae
mov
sub
push
push
in
add
mov
mov
inc
xor
and
mov
loop
leave
mov
mov
aaa
jb
pop
out
inc
or
imul
xor
dec
mov
ja
mov
sbb
test
jb
or
add
into
jecxz
test
cs
pop
xchg
mov
cmpsb
jo
xor
fs
jae
adc
adc
lods
and
push
inc
out
xor
push
mov
imul
or
or
sbb
cltd
lds
mov
std
and
and
mov
test
pop
ret
pop
pop
push
or
rcr
iret
loop
xor
push
in
out
pusha
jno
add
mov
inc
bound
mov
adc
push
std
sub
adc
mov
enter
pushf
test
jp
cmp
imul
mov
mov
mov
lods
stos
push
sbb
mov
dec
cmp
inc
lea
ret
pop
push
dec
push
and
lds
bound
sahf
sti
mov
roll
testl
jo
cmpsb
adc
fiaddl
aas
sub
xchg
movsb
push
mov
xchg
je
jmp
jecxz
clc
or
pop
sbb
cmp
mov
cmpsl
fbld
das
test
bound
mov
mov
lcall
mov
rorb
nop
push
fs
dec
adc
arpl
lret
pop
jo
mov
cs
pop
mov
mov
loopne
inc
push
push
cwtl
xchg
incb
inc
mov
loope
xchg
test
xchg
dec
mov
mov
out
mov
and
repz
pop
mov
rcr
cmp
addr16
push
mov
scas
inc
adc
out
mov
ss
jp
fs
es
cmp
divb
lcall
testb
lods
mov
push
rorl
mov
push
filds
imul
popf
cmp
push
fnstcw
dec
cmc
adc
mov
and
mov
leave
jmp
ljmp
sahf
iret
loopne
ss
xchg
pop
cmpsb
push
push
and
fcoms
addb
xor
fwait
sbb
xorl
in
mov
mov
xchg
sub
sub
loop
testb
pop
aaa
jae
xlat
inc
notb
and
pop
sub
cmp
mov
cmp
sbb
jecxz
clc
sbbl
dec
sbb
pop
std
rorb
lock
cmp
in
push
out
pop
push
test
cmc
pop
leave
das
ss
adc
das
bound
push
jmp
pop
or
xchg
sbb
lock
and
mov
xchg
inc
lods
outsb
test
xor
arpl
mov
out
or
jmp
or
dec
cltd
mov
rcll
jnp
pop
ret
mov
pop
orps
jns
nop
rcrl
daa
xor
lods
or
movsb
int
mov
lcall
insl
lcall
pop
es
add
xchg
movsl
push
jbe
sub
iret
sahf
cmc
or
inc
dec
mov
mov
stc
add
jp
loope
daa
in
rol
sbb
mov
pop
pop
or
lret
loop
call
xlat
push
sbb
lock
icebp
and
scas
mov
cwtl
ljmp
mov
sbb
xchg
push
cs
fistl
stos
inc
clc
cmp
lret
push
pop
insb
mov
add
stc
leave
lret
fldln2
arpl
mov
out
push
stc
repnz
cld
jp
aas
push
jne
push
mov
push
test
dec
inc
fs
xor
adc
cmpb
stos
es
xchg
jb
dec
push
cmp
and
sbb
mov
sub
inc
mov
insb
mov
movsb
jecxz
mov
mov
fisubl
or
iret
testl
movsl
pop
sbb
je
jle
cmc
push
dec
lea
pop
sub
aas
pop
xchg
pusha
add
jne
inc
rcrb
in
cmp
mov
cwtl
sbb
ljmp
and
sbb
jae
mov
outsl
shl
jmp
imul
mov
mov
cmp
ret
or
jecxz
sbb
popl
int3
push
sub
in
push
out
jbe
repnz
xor
cmc
sbb
jbe
iret
out
pop
mov
dec
out
es
loopne
notb
fstps
sub
popa
int
call
dec
ret
pusha
test
pushf
dec
sbb
jmp
shrb
push
mov
cmp
js
and
push
and
mov
jb
imul
lret
pop
xlat
cld
mov
test
jne
rclb
js
shll
popa
leave
imul
iret
pop
daa
pop
xchg
clc
mov
aad
test
and
sarb
cmp
adc
and
dec
and
outsb
xchg
inc
add
imul
lea
stos
mov
or
dec
mov
lods
add
jg
popf
cmp
pop
insl
add
rcrb
jno
jo
fnsave
fiadds
mov
mov
xchg
add
int
icebp
inc
cli
imull
mov
mov
pop
xlat
push
test
jg
pop
inc
jno
sub
pop
popa
push
pop
das
cmc
dec
pop
or
push
jmp
testl
mov
out
gs
push
ret
xor
insl
mov
pop
dec
jno
adc
lods
fisubl
jge
or
xor
popf
addr16
dec
add
sarb
mov
outsl
icebp
mov
push
mov
cltd
stos
sbbb
cmp
cld
add
dec
or
scas
mov
jno
ss
ret
dec
into
mov
pop
push
pop
pop
or
sub
dec
stc
lds
jo
xor
dec
int3
mov
cmpsb
fistpll
loopne
inc
or
mov
push
iret
add
dec
loop
out
and
bndldx
aaa
insb
sbb
imul
xchg
mov
imul
daa
pop
nop
aam
call
jmp
lahf
mov
mov
xorb
jae
add
xor
push
popa
cwtl
add
dec
ja
mov
hlt
mov
mov
dec
add
sbb
adc
les
ret
cmp
popf
cltd
out
aas
sub
scas
rcrb
and
push
pop
or
in
out
push
daa
adc
imul
xchg
cli
sbb
xor
dec
shll
addr16
pop
scas
stos
cmc
sbb
cmp
pop
jno
mov
xor
mov
fimull
pop
insb
outsl
xor
hlt
daa
mov
mov
in
adc
pop
cltd
lods
mov
mov
mov
sbb
ret
shll
faddl
inc
jp
cmp
mov
cmp
jns
pop
in
add
mov
pop
stos
xlat
sahf
psubsw
and
inc
out
xor
test
mov
arpl
pushf
test
dec
pop
sbb
test
decl
cmc
lock
shll
cmp
push
fcoml
popa
sub
dec
push
sbb
sub
mov
sbb
or
ds
stos
movsl
push
sbb
test
xorl
push
fwait
in
adc
dec
sbb
sub
adc
inc
mov
mov
push
aas
in
int
push
sub
cmpl
mov
sub
jg
out
xor
dec
push
mov
jl
stos
cmc
lahf
mov
adc
fcoms
push
xchg
sub
cmp
sbb
xor
test
scas
mov
popa
int
outsb
push
mov
pusha
jp
jbe
pop
ret
fists
mov
es
jmp
leave
fs
lret
addr16
test
loop
cmpsl
cmpsb
imul
cwtl
fbstp
push
jge
sub
xchg
mov
cmpsl
mov
or
cwtl
negl
pop
into
insb
and
int3
gs
lea
add
inc
ss
mov
imul
xchg
nop
jno
sarl
movsl
inc
fabs
inc
jg
mov
in
sbb
roll
inc
ror
mov
mov
xchg
push
dec
cmp
rolb
sbb
mov
aam
and
and
bound
push
fidivrs
sbb
cld
arpl
inc
incb
cmp
jbe
xchg
jae
mov
imul
xor
fucom
add
xchg
xchg
mov
add
dec
movsb
fmul
mov
jl
sbb
push
and
pop
mov
or
mov
dec
lret
rorl
sub
lahf
enter
inc
mov
loop
dec
cwtl
not
xor
jnp,pt
leave
int
push
js
xchg
adc
push
push
inc
outsl
test
fisubl
popf
add
fcoms
xchg
sub
or
adc
push
pusha
push
push
dec
dec
xchg
mov
dec
mov
mov
adc
nop
jne
inc
shrb
adc
mov
out
mov
int3
dec
jo
lret
cmp
out
sbb
enter
cli
cld
lret
enter
jb
rorb
sqrtps
movsb
jmp
xchg
sti
mov
std
fdivr
pop
xchg
ud2
fstpt
hlt
inc
arpl
pop
shll
pop
dec
push
push
cmpsl
test
loope
mov
in
das
pop
add
lods
dec
imul
lods
js
mov
dec
movsb
cltd
mov
es
test
mov
das
ljmp
loopne
push
stos
pop
push
fcomps
sti
aam
divb
roll
mov
lret
in
popf
std
lcall
or
iret
das
fdivp
int3
ret
clc
sub
cs
pop
stos
fdivrl
add
mov
xchg
fdiv
xlat
ds
imul
dec
movl
iret
and
xlat
outsb
mov
ret
jecxz
push
in
push
stos
cmc
popa
jle
sbb
iret
jnp
xor
mov
xchg
gs
jns
hlt
jl
movsb
xchg
cld
sahf
and
pop
fdivl
xchg
addr16
loopne
xchg
sbb
xor
xor
sub
xchg
je
mov
int
roll
add
sets
fwait
lahf
dec
into
popa
or
sub
int
add
loope
fucomp
inc
lods
out
push
xchg
leave
adc
and
xlat
add
jle
rclb
push
repz
in
popw
sbb
and
lea
jmp
pop
pop
inc
sti
mov
fidivl
stos
je
inc
insb
inc
rcrb
lock
lock
push
sarl
sti
add
sub
mov
or
out
push
fildll
insl
mov
sti
jbe
pop
ret
dec
pop
cmpsl
lods
insb
fcmove
cmp
insl
jle
sarl
xchg
push
dec
sti
cmc
cmp
fadds
push
jge
cmc
test
mov
jo
aad
sub
dec
add
xchg
int3
loope
hlt
stos
mov
fs
pop
jno
fcoml
scas
int
xlat
sahf
call
cwtl
out
aam
hlt
jae
sub
imull
enter
xchg
adc
nop
enter
and
sti
ret
dec
call
data16
out
and
mov
outsl
test
clc
shrl
dec
pop
fwait
mov
mov
xor
pop
fiadds
sbb
lcall
pop
or
xlat
adc
test
or
mov
xor
mov
xlat
lahf
enter
pushf
addr16
movsl
cmc
and
iret
lock
jle
cmp
icebp
xchg
pop
cs
popa
jl
add
aaa
inc
xor
jecxz
scas
mov
out
aaa
imul
int3
loope
sbb
inc
loop
out
xchg
add
adc
adc
dec
pop
sbb
adc
mov
repnz
xor
jl
sahf
mov
mov
pushl
push
movsl
add
mov
adc
sbb
and
mov
dec
out
add
fstl
and
outsb
add
cltd
lds
pop
mov
popa
imul
jb
rcrl
outsb
xor
xor
mov
std
mov
push
loopne
sti
mov
cmp
pop
je
xchg
lods
bound
sub
sbb
xchg
or
hlt
xchg
gs
outsl
shl
cmpsb
insl
cmp
inc
inc
push
push
sbb
mov
mov
aad
sub
push
or
pop
xor
clc
sub
mov
insl
aas
fidivrs
shrb
pop
je
pop
int
push
inc
dec
xchg
sbb
mov
not
scas
dec
add
ja
cmp
cmp
sub
cli
cmp
aam
push
push
es
mov
xor
push
loopne
sbb
sbb
pusha
popf
sbb
push
xchg
int
mov
rclb
inc
cmp
sub
push
rorl
mov
xor
sub
imull
movsl
loop
addb
sti
add
cmp
sub
in
jo
adc
bound
mov
xchg
arpl
adc
inc
stc
and
in
mov
mov
popf
mov
enter
fcoml
rcll
pop
mov
mov
out
jle
movsl
mov
and
adc
shr
lret
xchg
icebp
sbb
xchg
cli
xchg
lret
mov
negl
sbb
fs
in
jo
repnz
mov
in
jmp
imul
mov
repnz
jmp
lea
add
xchg
out
jmp
test
lcall
hlt
shll
cmpsl
inc
and
imul
ja
fdivr
jl
sub
mov
testl
frstor
or
aam
inc
jl
push
push
imul
push
arpl
push
dec
ja
notb
inc
xchg
push
mov
fidivs
mov
cmp
cmpsb
dec
lcall
out
mov
inc
xchg
insl
popf
xor
lods
pop
aas
push
arpl
add
add
lds
orl
jbe
mulb
in
mov
push
xor
cmp
popf
pusha
ret
push
je
or
or
push
cmp
inc
ret
add
mov
lret
outsl
add
jo
jp
jg
negb
int3
adc
cmpsl
push
inc
mov
lahf
insl
imul
jmp
icebp
ss
xchg
lea
popa
int
mov
out
mov
arpl
lock
loope
pop
cmp
sbb
dec
pusha
call
pop
fidivl
ds
adc
xchg
xchg
test
inc
sbb
mov
test
mov
call
clc
cmp
xchg
iret
cmpsl
fisttpl
and
lea
es
push
cmp
out
in
aas
xchg
mov
pop
fwait
out
mov
mov
jne
sbb
cmp
cmp
fs
mov
mov
pop
push
inc
jle
mov
xchg
insl
jbe
fimull
test
dec
jb
or
pusha
outsb
addb
xorl
pop
sar
insb
jnp
cs
out
sub
lods
sub
cwtl
inc
arpl
insl
fstpt
inc
fnstsw
sub
sbb
pop
xchg
ljmp
jp
pop
jmp
and
cmp
pop
fnsave
mov
setle
xchg
sub
pop
loope
in
aas
sub
andb
scas
std
in
mov
clc
ljmp
push
pop
pop
fwait
test
add
std
cwtl
pop
enter
sub
add
pop
sbbl
andnps
push
lret
dec
aad
sbb
cltd
movsl
or
cmpsl
fadds
insl
xchg
sbb
imul
xor
push
nop
adc
cmp
dec
jb
jecxz
sub
ss
add
fcoml
icebp
leave
lock
sub
xlat
negb
add
gs
jp
xchg
dec
pop
test
out
adc
jne
in
sub
fists
fs
push
mov
adc
aam
ja
ror
pop
mov
xchg
ja
and
sarl
movsb
jnp
adc
ljmp
xor
mov
adc
fwait
inc
ljmp
and
enter
popf
scas
and
dec
pop
add
jp
addr16
push
fistl
stos
pop
mov
fsub
jg
mov
pop
roll
fcmovnu
push
jle
nop
icebp
inc
loopne
pop
fnsave
cmp
and
data16
and
inc
sub
shlb
testl
cmp
add
mov
pop
lret
and
pop
pusha
rcll
lods
xchg
clc
jl
pop
add
adc
cmp
pop
push
adc
sub
cmp
insb
cli
push
inc
out
in
out
cmp
jb
mov
sbb
xlat
pop
std
hlt
lock
cs
xchg
pop
addb
sub
repz
mov
mov
cmp
aad
lahf
popf
out
or
ret
es
mov
xchg
fcomps
subl
cmp
addl
cs
add
out
dec
aad
rorb
lds
xlat
xchg
cmp
stos
add
pop
xchg
int
int
or
dec
mov
je
push
aas
out
push
add
cld
mov
add
sbbb
mov
iret
imul
scas
sub
sbb
add
cli
pop
daa
mov
lret
mov
test
imull
in
xchg
lods
outsb
je
or
js
sub
sub
fistpll
push
mov
cwtl
xchg
sahf
push
or
mov
subl
test
mov
mov
repnz
pusha
sbb
add
pop
dec
movsl
nop
cld
cs
xlat
inc
sti
inc
iret
shll
pop
sub
iret
lahf
push
lret
loopne
pop
sub
mov
inc
stos
lcall
stos
dec
addb
loopne
sbb
mov
shll
enter
xlat
jbe
push
cmp
sub
testb
push
mov
in
xchg
stos
mov
add
movsb
ss
pop
aas
imul
sub
lods
jne
sub
negb
cmp
call
gs
mov
and
std
jae
pop
mov
push
mov
cmp
sti
cmp
daa
insl
movsb
cmc
test
xor
dec
mov
gs
rcr
movb
xor
lock
sti
shr
xor
aad
imull
and
and
in
push
xor
sub
movsl
dec
sarl
mov
xchg
mov
js
addr16
or
cld
sahf
mov
pusha
xor
xchg
je
sahf
aad
xor
mov
roll
mov
inc
std
push
mov
or
sbb
xchg
scas
mov
into
lcall
pusha
jb
mov
movsb
dec
movsl
lret
fdivrs
mov
and
or
inc
cmp
jge
pminsw
rol
in
or
pop
cltd
lcall
cmc
aaa
mov
out
inc
mov
push
sub
mov
int
clc
push
and
negb
add
mov
and
push
pushf
sub
jb
std
or
cld
outsl
leave
jg
test
les
insl
xor
push
jecxz
mov
mov
cmp
test
xchg
jp
push
nop
js
ss
push
cmp
enter
jle
loope
inc
sub
lret
ret
inc
test
and
scas
into
pop
jmp
inc
pusha
rcll
pop
insl
push
add
js
adc
push
aad
in
adc
icebp
adcb
bound
mov
mov
jno
jo
inc
dec
push
xchg
jns
ds
sbb
inc
adc
mov
sub
mov
aaa
mov
idiv
lcall
or
cld
fs
fs
push
fidivrl
xchg
in
jnp
sbb
aad
sar
cmc
add
mov
popf
nop
mov
push
push
scas
movsb
xchg
inc
dec
bound
sub
cmc
sbb
xor
mov
sub
js
lret
test
and
mov
cmpsb
into
incl
dec
out
lret
imul
mov
xchg
dec
fidivl
shl
dec
test
nop
insb
jl
mov
ss
lcall
push
adc
rolb
sti
test
push
lock
loope
sub
push
pop
xchg
and
sahf
das
and
inc
sub
push
or
je
pop
cwtl
mov
adc
clc
sub
push
cmp
lea
in
sbb
popf
divl
es
les
shll
push
adc
jnp
cmpsb
arpl
dec
xchg
mov
jo
hlt
sbb
dec
addb
sub
sub
mulb
daa
fwait
cmpsb
mov
addl
les
scas
mov
push
and
fs
cmp
lret
hlt
daa
mov
cld
bound
inc
push
cmp
ljmp
push
pop
sub
test
xchg
mov
loop
es
cltd
jmp
test
shrb
leave
lock
sub
pop
lock
mov
test
sub
xchg
adc
ja
repz
scas
test
aad
stc
add
loope
imul
jecxz
dec
xchg
xchg
dec
aad
adcl
in
je
or
cld
xor
leave
repnz
mov
aaa
fsubs
adc
xchg
or
mov
out
out
insl
sbb
fucomip
adc
pop
mov
inc
inc
call
lds
imul
jle
or
dec
add
scas
cltd
jno
cmp
push
loope
imull
xchg
push
push
leave
cmpl
outsb
adc
imul
adc
xchg
lods
mov
jge
int3
inc
pop
mov
addb
jbe
out
sub
popf
movsl
nop
pop
or
imull
dec
lahf
mov
push
adc
jp
stos
push
cmp
mov
lods
lret
dec
rolb
jbe
jmp
add
dec
in
mov
sub
out
xor
mov
jno
iret
lods
js
pop
pop
in
xor
jbe
loopne
xlat
xchg
aad
lods
enter
mov
subl
imul
cwtl
sub
or
jno
lods
insb
lods
popf
pusha
mov
push
lea
push
xchg
scas
push
int3
fwait
inc
xchg
icebp
imulb
mov
std
cs
pop
sub
loop
mov
lods
pop
cmp
add
iret
jae
or
jl
and
mov
pop
mov
movsl
out
cmpl
xchg
les
stos
addr16
or
dec
call
mov
int3
jmp
jo
add
xor
out
cwtl
rcrl
leavew
jnp
dec
fcmovne
fidivrs
jmp
mov
push
stc
add
pusha
inc
sbb
pop
inc
add
xor
add
loopne
pop
out
sti
ret
mov
sbb
sbb
lcall
xor
sbb
sub
lods
xchg
test
mov
xor
fstps
es
into
and
out
adcb
inc
lods
in
adc
leave
iret
mov
push
adc
adc
jp
cmpb
std
sub
notl
ret
mov
loop
and
daa
mov
add
test
pop
mov
push
pop
rol
or
leave
sahf
stos
pusha
sub
outsb
je
lret
out
shlb
ljmp
jge
fdivr
test
jge
mov
addr16
mov
in
jo
jne
mov
scas
push
and
div
jnp
pop
outsb
dec
mov
xor
outsb
sub
popf
jmp
jnp
out
xor
dec
sbb
iret
inc
in
xchg
push
shll
jl
xchg
pop
mov
adc
inc
in
jnp
les
pop
test
dec
inc
pop
stos
jmp
iret
pop
je
sub
lahf
fimuls
imul
sbbl
mov
popa
iret
les
fadds
pop
jecxz
ja
shlb
lret
dec
or
push
pop
pop
sbb
mov
lret
scas
loope
adc
pop
mov
ret
shl
cmp
lea
and
jge
pop
jb
cmpsl
sub
mov
push
jp
push
sbb
cld
mov
aad
cmp
cmp
mov
icebp
jae
add
jg
pop
lods
test
mov
sbb
jmp
setae
xor
adc
xor
inc
jg
cmp
sahf
fsub
ret
xor
lcall
into
mov
pop
or
dec
sbbl
outsb
loope
cli
add
lahf
push
sbb
cmpb
out
pop
sbb
sbbb
jbe
adc
mov
cmp
pop
loopne
into
lcall
jp
outsl
mov
lods
enter
jbe
mov
es
cld
mov
sbb
idivb
pop
inc
mov
push
pop
js
lods
out
out
fimull
or
js
test
fsts
pop
test
cmp
pop
stc
cmp
add
test
push
pusha
cmc
push
add
faddl
mov
dec
int
xor
pop
jnp
outsl
out
aam
or
sub
rclb
mov
pop
stc
cld
lret
imul
movsb
sub
mov
into
cmp
ds
and
orl
rolb
mov
pop
adc
insb
call
push
lret
and
call
dec
adcb
repz
mov
mov
and
call
gs
or
mov
rcrl
mov
das
sbb
fucomp
leave
push
and
cmp
cmp
sbb
xchg
or
xchg
inc
in
lret
jmp
sub
xorb
rorl
or
jb
rclb
lret
add
dec
jmp
cmpsb
jno
mov
rorb
mov
dec
pop
icebp
idivl
adc
test
and
mov
cltd
mov
sub
lret
lds
rorl
mov
js
movsl
out
inc
pop
mov
sub
dec
fisttpl
mov
adc
fsubp
sub
inc
adc
mov
in
movsl
bound
adc
and
mov
out
icebp
sub
fdiv
xchg
pop
je
repz
sub
mov
add
and
inc
inc
arpl
ja
fidivl
push
mov
mov
scas
test
test
fstpl
adc
sbbb
shrb
pop
outsl
lods
je
cmp
jne
fmuls
xchg
fwait
sbb
out
fidivl
mov
int
shll
push
push
ds
add
clc
lock
imul
add
stc
shlb
mov
adc
or
addl
jo,pn
pop
push
jnp
and
jne
test
jne
xchg
pop
mov
shlb
pop
in
pop
ret
roll
mov
inc
lea
mov
push
sarl
push
arpl
js
xor
out
std
jno
mov
mov
testb
lea
dec
orb
cmp
movsl
es
ret
icebp
mov
adc
jb
sti
lahf
lea
mov
rcll
loopne
xchg
sub
stc
and
sub
cmp
cmpsb
or
mov
sub
ficompl
add
xchg
inc
cmp
mov
xchg
push
sbb
pop
ret
dec
inc
push
xchg
pop
fs
xchg
js
pop
pop
mov
sub
add
lods
sub
nop
rcl
cwtl
pop
pop
dec
lahf
test
test
or
loop
jge
sub
daa
divl
xor
das
jno
mov
fstpt
cwtl
mov
xor
sub
outsb
jge
cmp
loopne
loope
inc
xchg
lds
adc
out
xchg
push
cmp
rcrl
daa
push
or
adc
mov
test
cmc
mov
movsl
ftst
bound
xchg
mov
add
push
sub
add
js
xorb
ret
dec
push
jg
leave
ja
adc
jle
leave
ret
and
or
adc
loopne
or
mov
push
mov
in
lret
or
aad
fwait
rol
iret
jl
lea
and
jno
sbb
sbbl
fdivrl
repnz
ds
pop
out
pop
cltd
cmc
repnz
ficoms
xor
jmp
ret
cmpsl
sbb
rorb
mov
and
out
popf
inc
fmull
pop
cmp
pop
es
mov
mov
pop
pop
xchg
leave
pop
cmp
and
in
cmp
bound
mov
jmp
outsb
mov
inc
and
dec
mov
jne
sbb
aad
icebp
dec
or
decl
imul
sti
mov
mov
sbb
push
out
or
push
xchg
add
loope
mov
xor
mov
inc
sbb
push
lea
xor
sub
xchg
adc
jmp
cmp
push
xchg
or
sub
add
push
jl
dec
mov
sub
mov
push
test
and
xchg
in
and
and
fs
pop
ljmp
rolb
xor
je
ds
mov
jno
and
pop
insl
out
mov
xchg
mov
mov
inc
aam
stos
push
mov
xchg
gs
addr16
aas
imul
repz
cmp
mov
xchg
ds
push
add
movsl
add
leave
repnz
pop
xor
call
test
adc
mov
pop
scas
jmp
popa
fs
sbb
fdivl
pusha
iret
sti
icebp
jb
xor
mov
jo
fstl
xchg
push
inc
das
andl
test
rolb
xchg
jno
movsb
cmc
xor
hlt
push
fcmovnu
lret
cmp
outsb
lcall
sbb
mov
outsb
aad
mov
mov
shlb
rol
aam
dec
notb
rclb
sub
test
or
xchg
xchg
movsb
lock
push
adc
popa
push
imul
loop
mov
and
adc
inc
or
mov
push
rcll
and
gs
and
jnp
mov
push
pause
jne
imul
imull
mov
xor
pop
stc
fnstsw
cmc
lock
sahf
iret
cld
xor
movsb
adc
cmp
jb
addl
sti
mov
fidivs
test
xchg
fsubp
push
movl
fwait
in
mov
pop
push
dec
inc
xchg
inc
shlb
fldenv
lods
sub
or
ss
mov
stc
pop
int
pop
pop
xchg
jb
adc
mov
jno
jecxz
movsb
lds
mov
fdivr
fcoms
je
mov
bound
cmp
and
shll
xlat
push
and
push
add
mov
pop
jge
popf
push
cpuid
lds
arpl
xchg
xchg
pop
daa
fwait
daa
test
xchg
test
loop
stos
xchg
aas
js
or
sbb
shufps
add
ljmp
sub
dec
inc
daa
arpl
push
cmp
xchg
jge
pop
xor
xchg
incb
imul
loope
stos
push
loopne
enter
fdecstp
xor
cmpsb
mov
push
push
psubq
pop
lahf
add
xchg
std
sub
int
mov
shl
xlat
cmpsl
pusha
add
and
sub
loope
dec
pop
xchg
out
inc
out
test
in
xorl
mov
movsb
and
xchg
and
push
xchg
es
pop
dec
xor
shll
mov
stos
xchg
sub
ja
ret
and
rorb
sbb
call
xchg
test
rcl
dec
adc
call
mov
bound
adc
pop
push
pusha
data16
push
mov
cltd
mov
clc
inc
out
mov
clc
insb
xchg
dec
cmpb
fst
fidivl
mov
push
out
dec
mov
pop
adc
cmp
mov
les
lahf
xor
lods
push
add
or
lret
mov
push
clc
frstpm(287
adc
push
shrl
or
add
mov
adc
das
xor
jb
dec
test
fidivs
pop
inc
xchg
cmp
adc
and
ret
lret
ja
addb
in
rorb
aad
mov
or
adc
ljmp
dec
jo
stc
xchg
xchg
addr16
sbb
repz
pop
dec
jbe,pt
mov
and
mov
jo
sub
mov
push
insb
shlb
sbb
cmp
imul
push
nop
les
rcr
push
adc
mov
lock
je
out
xor
testb
in
adc
sarl
xchg
test
test
insb
mov
inc
cs
lret
nop
popf
and
pop
lock
mov
or
mov
dec
xchg
mov
pop
adc
push
pop
outsl
stos
hlt
stos
xchg
xchg
stos
shrb
jb
shl
fwait
call
inc
and
mov
cmc
scas
mov
aad
dec
out
jae
rolb
ds
mov
gs
pop
and
lock
mov
push
das
fadds
mov
mov
sarl
mov
push
push
inc
cmp
ljmp
mov
and
push
lahf
out
mov
mov
dec
jp
mov
les
nop
cmp
pop
xlat
aas
sub
xor
push
ljmp
jae
sub
arpl
sub
sub
xchg
push
loop
cmp
and
aad
mov
pushf
dec
mov
imul
mov
inc
mov
mov
clc
popf
cmp
cmc
cmp
fsts
jno
gs
ss
sbb
inc
adc
icebp
mov
das
inc
jbe
loopne
cld
xchg
cld
scas
jl
add
mov
cmc
lods
imul
push
daa
jg
fldcw
iret
push
jp
jge
loopne
ret
popf
out
dec
and
enter
cmp
mov
mov
cld
imul
hlt
xor
dec
lret
add
add
insl
andb
pop
scas
jge
sbb
cmpsb
cli
into
mov
insb
pop
add
and
pop
std
or
mov
sub
mov
aas
loopne
pop
shrb
add
jmp
or
dec
fisubrl
stos
adcb
cmp
adc
add
push
push
imul
push
xorb
push
or
test
dec
test
fwait
in
inc
stos
cwtl
mov
icebp
imul
int
fidivrl
mov
push
mov
xchg
or
jno
icebp
icebp
xor
call
cli
jno
dec
dec
xor
outsl
cmc
cmp
xor
scas
pop
ret
sahf
xor
dec
mov
out
sbb
out
and
ret
std
adc
fsubrl
push
lock
dec
sub
fistps
lock
xorl
mov
nop
lcall
lret
dec
add
dec
mov
pop
xor
jbe
xchg
mov
sub
std
call
dec
pop
jno
add
dec
js
push
mov
pop
sbb
js
scas
bswap
test
repnz
pushf
bound
stc
sahf
loop
sub
pop
les
push
pop
pop
fs
mov
pop
pop
mov
or
jns
and
mov
cwtl
cmp
jb
out
pop
lcall
inc
dec
adc
push
sub
or
sub
inc
fsubrl
insl
sbb
lret
push
push
jns
or
jg
or
scas
add
aaa
pop
rcll
xchg
aad
sti
or
add
test
rorb
test
dec
mov
xor
xor
inc
cmp
scas
insb
fcoms
cwtd
hlt
xor
pop
movsb
enter
lods
std
aam
sbb
pop
test
pop
xchg
ror
aaa
ret
add
jmp
xor
gs
ficomps
ja
test
or
das
and
push
mov
mov
dec
mov
sub
cmp
adc
dec
or
dec
xchg
lods
jge
jno
les
stc
aas
fs
sbb
pop
jp
push
sbb
pop
int
sub
mov
sub
pop
pop
xchg
movsb
adcb
jno
and
leave
or
loopne
fnstcw
mov
mov
dec
mov
mov
fisubs
addr16
mov
mov
out
mov
jb
sysret
xchg
xor
leave
roll
mov
outsl
test
pop
pushf
xchg
test
test
add
mov
or
add
sub
lods
cmovnp
stos
loop
or
movl
icebp
scas
push
and
lahf
and
popf
test
xchg
movsb
push
mov
mov
mov
xchg
jle
popa
rcrb
popa
mov
js
adc
sub
mov
test
ret
sbb
lock
inc
loopne
stos
shll
jg
push
repnz
cmpsb
add
cmp
and
stos
test
dec
jnp
fs
pop
xchg
test
ss
pushf
adc
jp
cli
mov
push
adc
jno
lret
sub
cmp
add
mov
add
inc
shr
sbb
aad
rcll
add
je
jp
lods
pop
inc
data16
jbe
jbe
pop
or
cwtl
popf
jge
loopne
xchg
ret
dec
push
dec
xchg
lret
lods
push
sarl
add
dec
addl
and
jge
and
pusha
repz
outsl
outsl
mov
xchg
call
cmp
sbb
push
fyl2xp1
push
loope
xor
outsl
enter
les
jns
xchg
or
mov
test
test
inc
xor
add
mov
push
and
xor
pop
cmpb
gs
jl
xlat
sub
fstl
js
stc
nop
mov
adc
fs
mov
sub
sub
mov
pop
js
scas
lds
dec
and
ljmp
dec
jne
lock
sbb
mov
sbb
cwtl
fidivrl
andl
xchg
cmp
insb
mov
cmp
mov
out
sbb
imul
jno
dec
xchg
loope
rorb
xlat
inc
cwtl
rclb
jno
loop
inc
js
inc
int
clc
movlps
xor
scas
cmp
fst
adc
jg
push
adc
inc
and
sahf
and
lds
xchg
lods
and
mov
push
cmp
mov
mov
int3
xor
cmp
mov
lods
mov
gs
gs
les
cmp
repz
add
call
pop
sbb
addr16
mov
mov
push
add
or
jb
or
outsb
push
bound
lret
scas
sti
jo
je
sub
cli
ret
sub
sahf
sub
test
mov
mov
push
mov
cmpsl
cmpsl
or
fnstenv
mov
icebp
or
cmpsl
and
lods
hlt
sbb
jns
sub
push
jne
push
testb
add
fcoml
add
in
mov
mov
sti
push
pop
std
ss
sbb
sbb
xchg
xchg
imul
rcrl
adc
cld
mov
imul
setge
or
movsl
xchg
xchg
jg
in
dec
push
aaa
outsb
pusha
clc
mov
sub
add
pop
adc
dec
pop
int
jno
cs
movsb
sti
fcmovnb
jmp
lods
lds
adc
pop
cmpb
js
pusha
stc
mov
push
xlat
in
out
sub
pop
testl
pop
ljmp
pop
add
jns
fisttpl
mov
cld
push
movsl
shl
movsl
lahf
or
and
insb
int3
xorl
ret
add
mov
dec
xchg
sub
jb
call
das
inc
inc
mov
sti
stc
in
clc
push
movsl
mov
adc
pop
mov
int
lods
int3
push
scas
vmwrite
jo
aas
dec
leave
sbb
sub
sub
loope
pop
mov
aas
test
push
mov
cmp
pop
pop
loope
faddl
lahf
jge
sbb
outsb
mov
iret
mov
mov
cld
jae
xor
imul
cld
jg
push
in
outsb
sbb
je
push
pushf
clc
repz
xor
xorl
adc
cmp
pop
popf
push
mov
sbb
test
inc
inc
inc
fwait
movsb
dec
test
xchg
cmp
pop
orl
stc
pop
mov
shll
pushf
fldt
pushf
inc
popa
push
jl
mov
xchg
fnstenv
dec
mov
jb
ss
mov
movl
adc
div
lock
sti
out
mull
popf
jmp
nop
cli
in
fisttpll
out
xchg
or
mov
inc
mov
loopne
sahf
ret
in
mov
adc
scas
test
jl
xchg
xchg
sub
adc
out
ror
pop
dec
movl
shrl
mov
sbb
lock
pop
lds
int3
adc
mov
sub
divl
andl
and
out
xrelease
outsl
dec
dec
jb
add
inc
repz
lea
cmp
add
icebp
mov
push
inc
int
popa
jmp
xor
inc
sbb
pop
mov
in
lcall
aaa
mov
pop
mov
mov
loope
rorl
sub
jno
imul
pusha
adc
stos
inc
ss
xor
inc
inc
jg
sub
cmpsl
sub
stos
or
cmp
dec
cmp
jns
loopne
lret
addl
xor
dec
fidivrl
sub
xchg
je
mov
ret
movsl
jns
jae
test
mov
or
push
xchg
add
orl
outsl
sahf
xchg
aaa
aas
mov
jbe
inc
jbe
imul
mov
adc
or
stos
call
pop
nop
in
dec
clc
call
out
push
movsl
push
sbb
cli
push
add
in
test
inc
adc
cltd
push
jge
xchg
sahf
and
xchg
push
mov
gs
cld
or
call
dec
nop
pop
mov
mov
mov
cmpsb
pop
dec
or
shr
inc
inc
iret
shr
add
and
aam
mov
scas
rolb
pop
adc
sub
jmp
xchg
sub
test
push
lds
adc
lock
push
cmp
jecxz
fs
subb
ret
daa
repnz
ret
in
add
ret
push
mov
cs
int3
dec
in
push
cltd
or
inc
xchg
sbb
fcmovnbe
outsl
dec
inc
cwtl
dec
pop
int3
xchg
mov
stc
fcoml
andl
enter
gs
je
adc
outsl
hlt
std
inc
scas
incb
mov
fwait
or
sbb
fidivrl
setnp
xchg
ss
push
fcoms
add
xchg
movsl
in
push
jge
arpl
push
or
stos
popf
into
pop
jbe
adcl
pop
js
adc
bound
gs
lea
xchg
pop
or
fsubrl
mov
movsb
push
das
jne
cmpb
cmp
mov
fsubs
test
cmpsb
in
lods
dec
ds
lcall
add
mov
mov
push
adc
aad
aad
xor
addr16
sbb
xor
mov
adc
into
insl
push
inc
out
or
shrl
or
hlt
adc
and
int
push
pop
movsl
ret
jb
loope
xor
add
mov
loopne
stos
lods
add
fistl
push
fstpt
dec
or
mov
xor
inc
