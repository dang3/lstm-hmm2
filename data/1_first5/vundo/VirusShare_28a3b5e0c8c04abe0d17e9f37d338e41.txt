jb
add
dec
add
outsb
add
dec
add
add
insb
add
add
je
add
add
jb
popa
add
add
outsb
add
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
popa
add
add
outsb
add
add
je
imul
push
add
je
insb
add
add
dec
add
je
push
add
popa
add
imul
add
add
add
jne
je
je
outsl
add
inc
add
add
jb
outsb
add
je
add
popa
add
add
add
outsb
add
outsl
add
imul
outsl
add
add
add
dec
add
data16
push
add
js
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
out
pop
enter
aaa
aam
dec
jne
std
mov
push
add
add
add
add
push
pop
add
push
add
add
jns
adc
int
xchg
add
add
jecxz
pop
add
add
add
data16
cmp
jns
push
add
add
add
inc
add
push
add
add
add
add
add
add
add
add
jns
jno
push
add
add
add
pop
and
test
sub
mov
jns
nop
add
add
add
add
add
add
jns
data16
add
add
add
and
mov
add
push
add
add
add
add
lea
add
jns
pop
add
pop
and
test
cmp
mov
jns
nop
add
cmp
aaa
add
add
add
jns
data16
add
aaa
add
and
pop
add
add
push
add
add
add
add
in
add
fadds
inc
add
add
dec
add
add
add
and
inc
add
add
add
add
jns
push
add
in
sbb
jns
in
mov
add
jns
inc
add
add
add
add
jns
xor
xchg
add
add
cwtl
add
add
add
add
add
add
add
add
inc
add
lds
sbb
aaa
add
add
nop
add
lret
add
cltd
add
add
jns
dec
add
add
pop
add
aaa
add
add
dec
add
add
add
add
or
cmp
add
test
cmp
add
add
movsl
add
add
add
fiadds
mov
add
add
sub
push
add
add
add
add
add
mov
xor
inc
add
add
sub
jns
push
add
add
aaa
add
add
add
jns
and
add
add
add
add
add
add
add
jns
dec
add
add
add
add
sub
cmp
add
add
add
add
jns
repz
pop
add
add
push
add
add
add
add
jns
stos
add
add
add
add
cmp
mov
add
jns
lea
xor
cmp
push
add
add
xchg
add
add
jns
cmc
add
add
add
add
add
add
add
add
add
add
push
add
xchg
add
movb
add
add
add
in
add
add
add
add
pop
add
add
push
add
add
in
add
add
add
push
add
add
enter
xor
add
sbb
aaa
add
in
add
add
add
add
push
add
add
add
add
add
add
add
dec
add
add
add
add
jl
lods
add
add
push
add
add
add
add
add
add
add
jns
jns
repnz
in
add
add
add
add
add
cmp
jns
movsl
add
add
add
add
jns
add
add
add
add
call
add
add
add
adc
push
add
lods
add
pop
add
add
xchg
add
add
inc
add
add
add
add
xor
or
aaa
add
add
add
xchg
add
add
jns
ret
add
add
add
lods
repz
push
adc
cld
lock
aam
pop
dec
jge
push
jle
insl
testl
jne
mov
xlat
in
jb
or
dec
jmp
jp
jecxz
fwait
cmp
int3
inc
fidivs
xchg
xor
fmul
lahf
pop
fcomps
adc
xor
cli
jb
out
xor
mov
std
mov
mov
jne
pop
dec
or
or
or
mov
test
adc
cmp
movsb
pop
push
out
test
lcall
push
test
cli
cmp
sub
inc
dec
jnp
inc
hlt
ss
cmp
xor
dec
cmp
mov
out
lea
add
fldenv
pop
scas
test
fwait
fs
loop
sbb
jne
aaa
lahf
les
jmp
into
shll
cmp
dec
xchg
lds
cmp
jmp
add
inc
fildl
arpl
dec
mov
lods
ljmp
bound
xchg
movsl
aam
or
decl
mov
cmp
je
xchg
add
cmc
push
xor
push
fdivr
cmc
mov
pop
icebp
mov
sbb
cwtl
xchg
es
mov
sbb
jmp
scas
inc
pop
xchg
push
outsl
subl
dec
ficomps
aaa
cli
rorb
fcmove
xor
cld
xor
dec
jb
add
pop
call
mov
pop
bsf
dec
outsl
cwtl
cmp
mov
lret
inc
in
xchg
cld
into
repnz
pop
mov
loope
jb
icebp
inc
loope
or
cmp
adc
xor
mov
xchg
scas
sbb
cmp
add
sub
mov
leave
scas
jmp
xor
int3
sub
cmp
or
sbb
cltd
leave
clc
xor
outsl
inc
cmp
bound
frstor
pusha
and
sarb
in
xchg
ror
xchg
shll
pop
adc
es
fst
shr
mov
mov
ret
inc
loopne
mov
mov
sar
add
xorl
je
push
mov
pop
lahf
imul
adc
xchg
test
add
push
nop
fisttps
cwtl
imul
jns
xor
divl
mov
sbb
pop
push
pop
cli
lret
add
das
mov
add
test
arpl
pushf
add
cs
xchg
or
xchg
add
push
inc
in
xchg
and
in
cmp
fwait
mov
jno
out
jg
push
jmp
or
aaa
inc
pusha
in
ja
imul
or
sti
iret
jge
push
aaa
jne
into
push
push
sub
mov
mov
icebp
dec
push
cmp
gs
fisttps
jl
test
pop
gs
out
add
add
add
add
add
add
add
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
push
call
mov
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
int3
fmuls
cld
insb
in
cmpsb
mov
dec
mov
cwtl
int3
inc
std
dec
in
insb
popf
sbb
sub
fmull
cld
insb
in
sbb
or
cmp
sub
fcompl
popf
je
insb
pushf
xor
pop
jp
or
lcall
sub
fcompl
popf
sbb
in
pushf
dec
ret
dec
sub
dec
lea
scas
cmp
xchg
xchg
sub
aas
pop
insl
pop
xlat
iret
mov
ds
add
ret
daa
addr16
rorl
mov
pop
mov
pop
push
test
andl
or
mov
push
popa
fnstenv
sbb
jo
jne
dec
pop
neg
pop
pushf
pop
stos
jge
xchg
and
dec
lock
call
dec
int3
pop
clc
sub
mov
mov
int3
lods
std
addl
ret
cmpsb
push
mov
add
hlt
scas
add
cmp
sub
mov
mov
pushf
iret
jbe
sbb
outsl
push
mov
testb
jg
int3
ljmp
stos
popa
push
call
shrb
in
jl
insb
in
sbb
or
cmp
sub
fcompl
cld
jle
push
pushf
and
sub
or
pop
cmp
jnp
dec
jmp
pop
jle
xchg
arpl
dec
fadds
lcall
jns
push
lahf
mov
mov
decl
pop
mov
sub
dec
sbbb
mov
sub
fcompl
cld
jl
insb
pushf
sbb
or
cmp
sub
fmull
cld
insb
in
sbb
or
cmp
sub
fcompl
cld
jl
insb
pushf
sbb
or
cmp
sub
fmull
icebp
cmpl
psubusb
ret
shlb
cmp
mov
dec
pushf
pop
loop
mov
scas
arpl
in
add
jp
jnp
mov
pop
pop
aaa
mov
jbe,pn
fnstcw
stc
shrb
repnz
in
test
iret
sub
js
popf
pop
push
pop
call
cltd
faddl
add
dec
pop
dec
rorl
pusha
push
shrb
adc
das
mov
movsl
or
popa
jbe
sbb
insb
xor
xchg
mov
imul
nop
inc
sbb
stc
lea
cmp
inc
xchg
xor
fucomi
or
cmpsl
or
sbb
push
mov
jmp
push
inc
cmc
cmp
scas
jne
and
xchg
jb
ljmp
mov
jne
subb
lods
pop
test
fs
or
push
lock
bound
dec
xchg
das
out
aas
dec
into
gs
inc
inc
or
cld
jg
or
mov
dec
into
push
xchg
adc
jns
insl
fidivrs
cmc
into
sti
push
xchg
movsl
mov
add
push
cltd
cmp
in
jmp
mov
out
xchg
into
rolb
lret
out
xchg
scas
xchg
mov
pop
mov
cmc
jae,pn
dec
aad
std
add
mov
inc
adc
loopne
in
fdivl
imul
adc
and
dec
add
lock
icebp
mov
das
pop
rcll
add
je
push
mov
inc
ret
sub
call
mov
imul
mov
hlt
cs
cmp
adc
rorl
icebp
sahf
mov
pop
mov
lret
in
push
mov
or
or
insl
mov
stc
dec
mov
push
pop
inc
insb
mov
aas
cli
push
jbe
lds
repnz
jecxz
icebp
inc
lcall
loop
pusha
nop
lahf
xor
loope
fwait
outsl
inc
cmp
cmp
dec
adc
lods
stos
imul
ficoml
pop
push
in
xchg
pop
ror
inc
ss
cmp
and
rol
cmpsb
mov
mov
sbb
inc
out
or
push
jg
xor
jbe
cmp
xlat
je
jge
or
adc
int
pop
sbb
shrb
ds
in
sbb
mov
lahf
inc
sub
pop
jmp
data16
jns
nop
jl
das
dec
test
jne
mov
cmp
fcomp
loop
lret
rcrb
test
and
push
out
mov
ljmp
sbb
test
cmp
inc
repz
hlt
adcb
stos
pushf
je
fs
lds
adc
jo
int3
sbb
scas
call
inc
jle
inc
out
jmp
mov
fsubs
xlat
mov
stc
jne
js
sahf
pop
add
mov
or
lock
lods
outsl
cmp
pop
dec
inc
bnd
aad
inc
cltd
cmp
fistl
add
adc
push
mov
cmp
in
dec
ret
cs
les
scas
jg
sbbl
cmp
push
movsl
inc
jp
aas
cld
jno
sub
mov
pop
mov
faddl
inc
sti
jge
cwtl
stc
xchg
mov
sarl
das
scas
cmpb
or
cmp
out
xchg
out
loope
xor
dec
adc
cmp
sub
js
aas
in
mov
testb
ss
add
sbb
add
fisubrs
sbb
jnp
rcr
adc
mov
jle
mov
shl
outsb
add
and
push
xchg
cld
mov
mov
or
pushf
sbb
mov
js
dec
call
mov
sbb
xchg
shrl
data16
pop
adc
into
dec
inc
or
add
notl
fwait
lret
imul
ds
jb
movsb
mov
xchg
cmp
push
or
aad
mov
daa
cltd
insb
push
aam
dec
sbb
leave
cwtl
daa
imulb
les
stos
mov
fidivl
inc
loop
adc
jno
push
mov
or
pop
cs
jb
mov
mov
icebp
gs
and
daa
adc
mov
pop
inc
lret
adc
or
mov
pop
cwtl
aaa
cmp
in
jo
idivl
xor
call
jae
xchg
ret
xchg
lret
stc
shll
xchg
loope
test
inc
or
ja
inc
xchg
sar
imul
pop
or
mov
adc
xchg
xchg
and
inc
lret
lret
cmp
push
jno
insb
sbb
popa
cwtl
das
mov
pusha
aas
push
js
jmp
stos
lods
rcr
test
xchg
cwtl
cmpsl
in
sub
andl
pop
aam
sbb
jle
cs
rol
fistpll
roll
jnp
and
es
cmp
in
cmp
sub
hlt
loop
mov
pop
push
addr16
test
cmpsb
test
rorb
pop
std
push
ret
add
xchg
leave
rorb
mov
sbb
sbb
jnp
frstor
aas
and
fistpl
std
push
cmp
add
inc
or
push
jl
fistl
push
xchg
ljmp
dec
add
loope
cmp
jo
fiaddl
or
fdiv
jp
and
xor
mov
iret
imul
pop
fidivrs
push
inc
or
adc
lcall
pop
gs
movsb
xor
inc
pusha
mov
roll
add
push
adc
mov
loope
jnp
movsb
pop
dec
sahf
mov
jo
mov
popf
mov
inc
pusha
andb
pop
cmp
test
cs
ret
mov
iret
cmp
gs
mov
or
xchg
push
dec
into
imul
add
push
ss
lea
jmp
push
xchg
popa
call
sub
mov
add
xchg
xchg
cmp
pop
imul
adc
pcmpgtd
lea
imul
imul
mov
or
stos
and
pop
mov
mov
sub
mov
ficomps
jge
arpl
int3
int3
mov
in
sbb
out
popf
dec
mov
aam
aad
call
mov
ja
push
push
je
inc
loopne
jo
xchg
adc
pushf
bound
push
in
out
dec
fistpl
add
mov
lcall
pop
add
mov
adc
pop
aad
test
stos
pop
imul
jbe
fdivr
cs
adc
mov
fwait
fs
dec
cwtl
add
aas
mov
std
dec
call
loopne
sbb
rorb
das
hlt
pop
stos
jge
inc
fdivs
arpl
rorb
sbb
pop
je
jo
nop
arpl
js
dec
inc
imulb
push
xchg
pop
sbb
cmp
fxch
pop
add
pop
fnsave
sahf
jl
dec
lods
mov
sub
fisubl
jnp
xor
jns
add
add
lcall
ret
std
mov
jb
fidivrs
call
cmp
jnp
iret
mov
pop
dec
cmp
and
call
mov
sahf
xchg
mov
mov
mov
cmpsb
mov
cmp
ret
cmp
sub
imul
push
sub
insl
adc
adc
fnstcw
notb
out
cwtl
es
inc
sub
fsub
je
push
add
cmpsl
xchg
loope
push
bound
dec
ret
in
or
fisttps
inc
leave
loop
stos
xchg
dec
addr16
push
cmp
out
jl
mov
jns
pcmpgtd
in
cld
mov
lcall
jmp
movsb
mov
mov
pop
cwtl
mov
xchg
cmp
sbbl
jbe
lcall
pop
imul
xor
sub
jae
jb
mov
call
xor
sbb
add
xchg
sub
add
lds
xchg
lahf
iret
lods
leave
mov
repnz
xor
xor
jno
dec
cli
ds
jl
sti
imull
iret
clc
insl
loopne
mov
aam
dec
sbb
push
mov
out
sbb
in
scas
insl
pop
xlat
lcall
mov
dec
scas
aaa
mov
push
cmc
pop
or
cmpl
sbb
mov
sub
in
push
cmp
aaa
mov
pop
sub
loopne
sbb
and
sar
lock
lock
mov
xor
scas
test
pop
scas
out
stc
rolb
xchg
inc
lcall
repnz
pop
and
in
fsubs
sub
pop
arpl
pushl
xlat
in
xchg
lahf
dec
ficoms
mov
and
das
les
ds
in
gs
aad
ljmp
out
int3
xor
cmp
adc
mov
inc
jns
in
xchg
data16
int
xchg
push
jecxz
ficompl
arpl
add
lret
jg
loopne
adc
pop
cli
inc
push
pop
inc
push
sbb
and
mov
stc
daa
js
inc
jb
push
cmp
xchg
addr16
jb
aas
sti
in
into
jno
jo
lds
enter
loope
pushl
pop
jno
jecxz
int3
add
sti
movsl
das
mov
pusha
inc
dec
mov
jecxz
cmp
testb
jno
mov
push
push
ret
nop
or
sub
lret
push
test
sub
fsubrl
xorb
xchg
mov
mov
leave
xchg
push
push
sbb
popf
mov
daa
enter
cmp
out
mov
outsl
push
jb
cmp
negl
imul
ds
and
aad
out
loop
lret
cli
outsl
push
in
jp
mov
xor
inc
xchg
or
xor
xlat
insb
or
jmp
stos
mov
movb
jecxz
scas
push
aas
jmp
jb
jmp
sbb
in
and
jne
add
dec
or
das
in
test
ds
push
push
test
sub
pop
xor
and
imul
stos
test
xor
and
adc
sbb
jecxz
sbb
aad
jno
inc
jae
sub
jae
pop
mov
inc
fisubl
lds
ljmp
imul
mov
push
popf
scas
pop
lock
outsl
cli
jmp
ja
add
add
jo
and
data16
daa
ret
push
test
cmp
ret
or
fwait
lock
fistps
push
xchg
mov
aas
jo
in
xor
nopl
nop
bound
out
fdivl
loop
jnp
mov
pop
xchg
or
inc
inc
shll
dec
jecxz
test
test
sub
aad
mov
cmp
push
sbb
enter
jno
int
pushf
stos
and
in
and
inc
cmp
mov
jecxz
mov
call
mov
dec
loopne
adc
icebp
inc
jp
shlb
pop
xor
sub
push
sbb
das
cmp
jo
xchg
dec
jns
icebp
insb
mov
movsl
xor
xlat
in
adcb
cmp
sbb
clc
add
or
or
mov
mov
xchg
int
push
add
std
or
or
sbb
loopne
ljmp
jno
mov
movsl
in
movsl
inc
push
bound
pop
dec
ljmp
xor
sbb
fdivr
shlb
ja
and
popa
in
mov
jp
push
test
add
pop
xor
and
add
mov
xchg
lret
jp
mov
adc
xlat
xchg
adc
fs
mov
imul
mov
mov
inc
adc
arpl
dec
shlb
inc
cld
dec
fwait
mov
mov
imul
or
push
lock
adc
sbb
jle
out
mov
mov
and
out
xor
xor
aaa
ja
shlb
pop
mov
inc
pop
sub
stc
mov
add
cwtl
rcrl
mov
repz
pop
test
call
ret
jno
jno
jnp
mov
mov
imul
mov
adc
fs
sbb
ret
mov
mov
and
rcll
fidivl
not
sbb
mov
xor
mov
mov
sbb
aaa
dec
push
adc
lods
xchg
cmp
pop
or
xlat
fildl
cmp
cmp
fidivs
mov
cltd
sbb
mov
dec
adc
dec
or
add
outsl
fnsave
sub
jno
sub
int3
jb
rorb
loope
pop
fidivl
xor
lahf
jl
jb
clc
push
lret
add
sbb
sbb
loopne
popf
mov
sub
notb
or
inc
add
les
lock
xchg
mov
pop
mov
loopne
loope
mov
jo
into
sub
xor
jno
jge
pmuludq
mov
push
or
fidivrl
in
cli
push
clc
or
popa
pop
xor
js
xor
lcall
push
cmc
or
jne
add
inc
inc
or
push
inc
pop
or
fisubrl
cld
dec
cli
push
sbb
bound
pop
lret
pop
loope
stc
dec
popa
in
push
inc
dec
and
call
mov
clc
jp
mov
xor
jae
mov
push
xchg
or
xlat
nop
cmp
arpl
orl
pop
aaa
mov
inc
dec
rcrb
ret
test
jae
bts
or
cmpsl
mov
sarb
jmp
xchg
jmp
fiaddl
repnz
imul
decb
in
mov
inc
dec
jle
and
lea
rcll
pop
int3
pop
fs
imul
std
ss
cld
stos
leave
out
sbb
imul
cld
rcrb
cs
dec
ficoml
insl
ja
and
cmp
sub
jb
and
pop
loop
insl
jge
inc
sub
fwait
out
mov
push
adc
xchg
mov
or
sbb
fidivrl
sti
mov
and
mov
xor
mov
fcoml
imul
jno
je
cmp
iret
mov
cs
pop
js
lds
enter
movsl
and
pop
dec
es
xchg
mov
mov
jo
push
sbb
daa
dec
out
int3
adcb
dec
stos
mov
sbb
dec
cmp
and
fimull
lahf
cmpsb
pop
mov
imul
mov
ret
fwait
idiv
fmull
push
cmp
xchg
cli
ss
and
icebp
xchg
pop
stc
xchg
and
inc
out
and
lahf
cmp
mov
pop
dec
pop
inc
xchg
icebp
pushf
iret
mov
aas
adc
xor
add
fmuls
and
jmp
push
adc
dec
testl
in
dec
xchg
push
cmp
push
scas
mov
ljmp
jne
push
loop
mov
popa
hlt
dec
add
lret
imul
fnsave
lock
les
rcr
ja
addl
dec
in
cld
rorl
iret
jecxz
lret
push
adc
add
push
lret
lahf
dec
or
mov
rcll
popa
out
jecxz
inc
jno
sub
sub
mov
div
and
pop
xchg
lods
inc
inc
subb
cmp
fs
imul
jg
dec
add
sub
pusha
sti
hlt
lods
dec
test
and
adc
lret
nop
sahf
jge
xor
xor
in
dec
js
in
cmp
lcall
ds
fwait
cmp
cmp
out
jae
nop
fneni(8087
gs
sbb
push
or
mov
mov
inc
fsubl
mov
in
das
ds
addl
andl
and
jle,pn
xchg
cmp
repz
fadd
lods
ss
xchg
jle
or
add
out
or
sti
jge
inc
jge
pop
mov
jmp
test
push
inc
or
xor
and
aad
sbb
and
fwait
adc
xchg
inc
cmp
xor
shrl
fimuls
sbb
std
pop
or
mov
add
fisubs
and
inc
push
pop
lea
cmp
in
mov
dec
popf
mov
fldenv
xor
sarb
xor
adc
xor
sbb
fldcw
stos
das
sbb
cmp
jbe
xchg
cmp
xchg
adc
add
dec
int3
add
daa
sbb
push
mov
test
stos
mov
push
adc
repnz
mov
push
mov
push
das
in
imul
and
jae
popf
sub
test
cld
loopne
push
jnp
inc
into
lea
rclb
je
mov
ds
mov
xor
xchg
loop
jg
push
outsl
data16
xor
clc
mov
stos
xchg
stos
push
cmp
mov
icebp
mov
insl
pop
push
mov
cmp
and
pop
cltd
xchg
mov
sbb
mov
sbb
adc
je
adc
jmp
divb
int
dec
add
fldenv
loopne
sahf
in
mov
pop
cltd
daa
pusha
inc
sub
xlat
pop
test
scas
sbbl
nop
or
js
sub
dec
pop
inc
in
xchg
jecxz
push
mov
jp
inc
mov
cmpl
jmp
or
add
roll
xchg
pop
ret
jae
lret
mov
cltd
mov
dec
mov
aad
decb
sub
stos
mov
push
in
xchg
lods
ds
push
or
cmovl
mov
xor
outsb
cli
lahf
rol
icebp
mov
xchg
mov
out
mov
rcrb
sub
sbb
or
mov
lret
mov
pop
pop
test
adc
cmc
in
in
repnz
and
mov
inc
mov
sti
int3
and
and
mov
jb
into
jnp
loope
push
push
movsl
xor
lods
popfw
data16
aad
add
mov
mov
subps
sbb
add
cmp
mov
dec
sub
xlat
xchg
ror
cmc
sub
sti
fwait
lret
jo
add
adc
leave
bound
enter
mov
repz
xchg
pushl
lds
das
out
ja
adc
popf
xor
dec
nop
xor
mov
or
in
dec
mulb
popa
mov
mov
mov
xchg
shl
test
and
cmp
jne
shrb
out
cmc
xchg
jl
aaa
pop
or
xor
test
dec
test
addr16
sbb
push
out
mov
jecxz
mov
dec
sbb
iret
and
xlat
push
shlb
inc
rcrl
sbb
cltd
rorl
shl
xchg
int3
lret
xchg
cltd
fmulp
daa
icebp
fdivs
xor
add
add
mov
mov
aad
shr
in
inc
mov
or
in
mov
or
push
mov
test
in
andl
push
movsl
xor
stos
ss
in
outsl
cs
int
mov
or
sub
push
insl
sbb
popa
bound
jge
loope
ljmp
scas
add
cld
mov
pop
pop
icebp
sti
inc
inc
and
jg
xor
cmp
fdivr
push
sti
mov
pop
sub
pushf
dec
rcrb
cmp
cmpsb
adc
or
shlb
int
mov
fstpl
mov
pop
inc
das
lret
movl
jmp
and
jo
adc
adc
jg
mov
and
mov
aas
and
test
imulb
and
and
aam
mov
or
push
shrl
pop
pop
push
add
loope
daa
pop
cmp
or
mov
dec
aaa
call
or
testl
sbb
stc
fldt
popf
adc
xchg
jmp
sbb
js
loope
mov
xor
scas
les
lods
and
test
adc
mov
xchg
je
cmc
add
mov
mov
sahf
and
xor
mov
xchg
popf
adc
mov
mov
int
mov
mov
test
stc
andb
or
ja
int
cwtl
sub
mov
fcomps
push
jo
mov
ficoml
mov
insl
cmc
fstpt
faddp
mov
cwtl
aaa
cltd
mov
add
xchg
xor
orb
sbb
fcoms
shl
sbb
aad
and
or
push
stos
das
cmp
in
or
mov
jg
repz
jg
roll
lea
ss
arpl
fnstenv
cmp
jo
lcall
and
mov
loope
mov
pop
scas
jecxz
fsts
mov
cwtl
inc
sbb
lret
fwait
mov
lods
push
mov
xchg
xchg
inc
push
pusha
jae
popf
or
xor
mov
daa
cmc
mov
inc
iret
cmp
xor
mov
insb
in
sbb
or
cmp
sub
fcompl
cld
jl
insb
pushf
sbb
or
cmp
sub
fmull
cld
insb
in
sbb
or
cmp
sub
fcompl
cld
jl
insb
pushf
sbb
or
cmp
sub
fmuls
in
call
cmp
sub
fcompl
dec
cld
jl
gs
sbb
pop
cmp
jge
insb
lods
sbb
or
cmp
sub
fsubl
in
sbb
fs
inc
inc
push
push
xor
outsb
adc
dec
mov
ds
push
mov
mov
into
lock
rorb
pop
add
ds
cs
push
inc
jbe
mov
into
xor
loopne
rcrb
and
pop
add
ds
cs
push
inc
push
mov
or
lods
subb
lock
std
outsl
or
insb
dec
mov
xchg
mov
fwait
sbb
inc
mov
sti
movsl
mov
js
stos
out
add
lret
ds
stos
scas
push
mov
adc
jg
movsbl
xchg
pusha
jle
arpl
xor
dec
sti
ss
pop
mov
hlt
arpl
stos
popf
scas
mov
shlb
cmp
dec
jp
add
push
popf
jne
aad
inc
lock
pop
ljmp
xchg
cmc
iret
or
ds
inc
sub
add
mov
mov
sahf
shll
rorl
push
mov
xchg
out
push
inc
dec
out
push
mov
mov
sahf
inc
fwait
cld
jle
outsb
adc
dec
jo
pusha
cs
push
inc
push
mov
mov
into
lock
shl
jp
das
jns
imul
pop
inc
pop
mov
mov
loopne
mov
xchg
push
sbb
jne
insb
dec
jo
and
push
mov
xchg
xchg
lea
scas
mov
cmp
es
insb
sub
pusha
cs
push
inc
push
mov
mov
into
lock
rorb
pop
add
ds
cs
push
inc
push
mov
mov
into
lock
rorb
mov
mov
and
xor
cwtl
imul
mov
mov
cmp
jp
aas
mov
xchg
xor
sbb
xchg
das
jae
mov
mov
adc
inc
test
adc
fdivs
or
xor
test
outsl
lcall
xchg
in
loopne
jg
pop
cmpsb
mov
fs
inc
jmp
adc
jbe
mov
pop
mov
imul
cmp
pop
imulb
inc
fnstsw
xor
lods
fisubrl
shrl
xor
repz
fnstenv
dec
mov
lock
inc
ret
push
in
mov
mov
fisubl
insl
pop
addr16
shlb
sub
loop
loop
movsb
mov
popf
mov
mov
add
imul
inc
leave
mov
rcrb
pusha
js
mov
pop
mov
xchg
movsl
fwait
lret
inc
mov
outsb
inc
cld
and
pop
sub
add
in
sahf
imul
adc
add
sub
ret
or
movsl
jecxz
mov
sbb
out
mov
popl
add
inc
jl
repnz
bound
movsb
scas
insl
cli
sub
nop
jb
add
push
and
mov
lock
xor
mov
adc
dec
insb
push
or
repz
adc
inc
add
mov
cwtl
mov
scas
out
lock
mov
aaa
iret
mov
fidivl
mov
mov
pushf
int
xor
mov
out
dec
mov
daa
cmp
mov
nop
repnz
jp
push
mov
and
lock
lods
add
scas
mov
xor
roll
xchg
shl
pop
int3
mov
sub
jmp
pop
push
xor
push
ljmp
leave
sbb
ret
bound
testl
fsub
lret
je
sbb
mov
cmc
bnd
std
lcall
add
and
in
aam
imul
and
into
xchg
leave
xor
sbb
pop
addb
inc
sub
xchg
jo
out
jg
je
push
es
mov
jnp
mov
ret
push
push
repnz
xchg
aad
adc
std
stc
orb
pop
adc
pop
aam
dec
mov
out
and
lods
mov
test
in
ss
aad
xchg
stos
loope
nop
mov
sbb
mov
fstpt
cli
or
push
mov
fiaddl
mov
xchg
movl
lods
lods
es
sub
cld
in
rorl
pop
inc
xor
rcll
mov
test
jns
bound
getsec
xlat
push
push
sbbb
mov
xor
pop
jo
mov
jecxz
or
pop
sub
sbb
icebp
push
daa
popa
pop
fisubrl
out
cmp
mov
or
push
aad
sbb
xor
mov
ja
gs
das
fstps
std
sub
iret
jno
inc
pushf
ljmp
xor
lret
mov
movsl
jle
aaa
out
add
imul
std
inc
fists
jmp
enter
pop
sbb
rcr
xor
sub
mov
cmpsb
lret
in
pushf
lahf
lods
pop
xor
jbe
out
cmpsl
stos
adc
lret
mov
lds
sub
aas
dec
lds
dec
loopne
scas
pushf
testl
aas
lret
cmp
jne
into
test
pop
leave
pop
inc
stos
jo
loope
inc
pop
scas
xchg
dec
pop
hlt
mov
sub
sub
bound
sub
pop
jl
dec
fwait
add
push
mov
sbb
sti
fcmovnbe
inc
add
mov
push
lret
aam
in
fs
sub
mov
loop
push
cltd
jno
sti
mov
sub
xor
jae
inc
pusha
imul
pusha
lahf
mov
subb
or
mov
fldenv
mov
push
dec
test
mov
test
xor
add
movsl
and
cltd
xchg
rcrl
xor
mov
andl
fld
push
xor
jg
jg
pop
push
mov
or
mov
and
insb
pop
jecxz
and
xchg
hlt
subl
push
ljmp
popa
pushf
sahf
mov
jmp
movsb
vpshaw
orl
mov
adcb
xor
mov
xorb
pop
mov
push
enter
imul
xchg
jno
inc
in
aam
nop
das
push
lret
push
mov
std
lahf
iret
or
push
out
aam
les
movsl
sbb
ds
in
adc
dec
mov
leave
int
daa
call
pop
clc
jns
nop
jno
mov
cmp
fwait
mov
dec
dec
js
jg
mov
cld
mov
xchg
insb
in
ds
mov
adc
ds
popf
fs
hlt
pop
repnz
xchg
mov
pop
xor
and
inc
xchg
test
adc
out
cld
jl
mov
sub
jno
push
push
sbb
jecxz
cmp
push
sbb
repz
jo
xchg
jae
ljmp
mov
sahf
jne
in
mov
mov
adc
dec
add
lds
add
stc
in
sub
adc
rol
clc
into
ds
in
call
test
je
lods
scas
shr
sar
mov
sbb
ss
pop
cmc
xor
push
mov
pop
pop
insb
cli
fwait
xchg
xor
push
orl
cmp
into
mov
fdivl
jl
insb
leave
cltd
or
pop
sarb
inc
lock
call
mov
mov
xchg
jl
icebp
test
xchg
pop
imul
sub
cli
test
out
in
dec
int
lods
clc
mov
fdiv
int
jbe
add
cmpsl
mov
jecxz
adc
mov
pop
lea
ljmp
mov
cltd
lods
nop
mov
cmp
shrb
sub
pop
mov
jle
arpl
jae
fisubl
inc
sbb
xorb
iret
jp
sti
push
in
xchg
pop
cmp
or
xchg
xchg
fistps
jmp
movsl
pop
add
ficomps
jnp
mov
les
pop
adc
push
fsts
int
mov
sbb
data16
mov
cmp
mov
dec
fnstcw
dec
inc
es
sbb
les
pop
push
in
pushf
out
push
xchg
push
and
fmuls
mov
mov
push
gs
adc
iret
es
xchg
add
add
sarb
xor
fwait
xchg
dec
ljmp
inc
cmc
mov
sbb
xchg
in
or
cmp
leave
mov
mov
cmp
mov
sub
sub
aaa
xlat
fs
sbb
push
pop
jnp
fisttps
mov
in
hlt
dec
in
shrd
push
dec
lea
cmpsl
dec
addl
mov
pop
and
push
dec
inc
add
cld
mov
aas
movsl
push
adc
movsb
aam
in
fstp
fcmovnu
sbb
sbb
dec
cld
popf
rclb
in
iret
pop
cmp
sbb
pop
cmp
push
adc
mov
das
pop
jg
aaa
push
fdivr
cs
loope
pop
adc
or
fdivl
add
pop
addr16
inc
mov
shrb
push
add
fimull
jo
adc
mov
sbb
sub
mov
lods
jecxz
icebp
enter
mov
notb
lcall
jb
xchg
lahf
dec
enter
jge
sbb
push
repnz
outsl
add
xchg
loopne
add
jp
push
sub
mov
sub
inc
clc
ret
pop
fsub
js
sub
xor
sub
std
sub
mov
mov
mov
aaa
push
int
jns
xchg
jne
xor
lcall
lea
push
jge
xchg
push
lcall
ret
stos
xchg
xor
nop
int
mov
movsb
and
idivb
ja
iret
lods
decb
fwait
test
pop
cmp
jecxz
call
je
and
push
iret
cmpsl
mov
push
scas
inc
push
fst
insl
jecxz
sub
imul
fiaddl
push
inc
fisubrs
push
push
mov
cmp
add
inc
stos
lea
sbb
fmuls
enter
rclb
clc
out
sbb
cmc
mov
js
int
out
jmp
add
addl
ss
pop
xchg
in
dec
pop
xchg
in
inc
popf
jecxz
jl
pop
pop
das
add
pop
inc
mov
add
sub
pop
out
fdivr
xchg
xlat
popa
add
clc
mov
idivl
and
pop
push
insl
test
mov
adc
ja
or
sbb
mov
cld
leave
les
inc
mov
out
mov
sbb
fnstsw
lds
es
fs
xchg
pushfw
imul
outsb
xchg
int3
mov
sbb
push
push
cmp
mov
jae
jmp
andl
ds
and
in
cli
fwait
mov
push
xchg
and
imul
imul
stos
sub
rolb
leave
aam
mov
divb
pop
pop
sbb
stos
insl
jle
insl
dec
fsts
xchg
mov
pop
rclb
and
adc
xorb
sahf
push
fisttps
and
and
sub
dec
adc
pop
sti
push
inc
cld
xor
dec
divl
mov
stos
push
xchg
je
stos
stos
stc
sbb
cmp
test
pop
inc
imul
scas
pop
imul
das
insl
leave
or
mov
add
mov
adc
roll
mov
jo
mov
cmp
ds
rolb
jl
and
sbb
sub
aad
pop
addb
dec
xchg
shll
lods
mov
pop
aas
and
adc
cltd
sbb
mov
insl
lahf
sub
lret
jae
nop
imul
test
orl
add
cmp
push
dec
sub
mov
dec
adc
call
jne
arpl
add
je
cmpsb
dec
mov
dec
cmp
loope
andb
aas
insl
mov
xor
jo
loop
in
push
fadds
fdivrs
sti
jo
fs
add
std
test
pop
hlt
adc
sbb
ljmp
out
testl
clc
pop
and
xchg
add
lock
sbb
pop
jge
daa
pushf
outsl
in
lcall
lcall
mov
mov
das
mov
lea
add
cmpl
and
jmp
mov
and
pop
movsb
mov
test
cmpb
js
arpl
jbe
in
in
push
jge
sbbl
ud0
mov
push
and
mov
sbb
scas
inc
dec
mov
lret
movsb
hlt
mov
outsb
in
jle
mov
test
inc
sub
clc
mov
fimull
jle
or
je
jo
call
inc
fldl
jae
stos
loopne
cmp
adc
das
movsb
mov
and
xor
sub
add
inc
mov
xchg
sub
sbb
sbb
and
and
inc
enter
mov
jle
push
repnz
mov
cmc
js
xor
mov
addb
sbb
lods
sbb
std
mov
mov
sub
imul
inc
xchg
ja
aas
sbb
jb
das
scas
push
sbb
out
mov
aam
repnz
inc
lea
stos
pop
push
ret
scas
add
add
dec
xchg
test
test
xchg
sbb
pop
adc
mov
add
aaa
mov
repz
add
aas
cmp
addb
decl
scas
ss
testl
in
push
adc
pushf
mov
push
in
jb
es
mov
shrl
mov
dec
cs
push
xor
popa
roll
cmp
jnp
sbb
cmp
pop
popf
ret
imull
test
stos
push
leave
xchg
mov
mov
cmp
cmp
mov
ljmp
mul
stos
xor
sbb
adc
and
negl
fidivrs
data16
out
ja
xor
cmp
inc
ret
inc
or
sub
jb
fmuls
mov
or
out
add
add
dec
jmp
push
orb
mov
cmc
pop
jp
sbb
je
nop
jle
and
std
movsl
mov
pusha
push
dec
and
push
pusha
jb
lds
mov
stc
loopne
cmp
test
pop
inc
dec
adc
sbb
ficoms
pop
jae
and
xchg
outsl
fstpt
add
and
outsb
mov
mov
aam
loop
cmp
sbb
mov
ret
out
mov
push
jo
sub
pop
cli
out
call
icebp
pop
lods
lods
pop
test
sbb
cmc
xor
xor
ljmp
push
lods
jp
inc
adc
lods
and
ss
jl
adc
sub
fwait
addr16
lods
mov
xchg
icebp
stc
aas
outsb
mov
mov
popf
jge
jnp
fnstsw
imul
into
cmp
lret
jmp
xchg
sub
and
mov
cmpsb
mov
loop
cwtl
fcompl
test
shlb
shlw
adc
iret
mov
insl
inc
add
fimuls
ror
mov
ret
lds
sbbl
cmc
repz
mov
mov
push
addr16
add
idiv
stos
hlt
fildl
rcrl
ret
aam
xlat
push
movsb
mov
scas
inc
imul
in
ss
inc
mov
or
ror
pop
pusha
jbe
dec
lods
cmp
sbb
xchg
pushf
cmpsb
data16
cmp
cmp
jmp
lret
das
or
test
mov
jecxz
pop
js
in
dec
insb
adc
popa
and
mov
cmp
cld
push
loopne
es
cmovbe
cmpsb
sbb
cmp
push
jge
sub
jmp
lcall
sub
data16
cmp
test
cmpb
xchg
sbb
and
xor
cmpsb
icebp
jecxz
ret
push
jmp
xchg
lea
imull
andnps
lret
inc
jg
pop
into
lods
inc
or
out
sbb
xchg
or
sub
mov
adc
setle
test
mov
shll
push
and
in
pop
pop
pop
jecxz
into
add
aas
xchg
inc
mov
mov
negb
mov
popl
sbb
mov
int3
andl
cmc
rclb
adc
andl
pop
cli
mov
insb
jno
or
popf
sub
movsl
mov
stos
xor
add
pop
jmp
in
scas
enter
jnp
push
mov
add
pop
popa
mov
inc
mov
push
nop
xchg
sbb
xchg
xchg
in
push
xor
pop
sub
dec
pop
mov
enter
jp
mov
fst
ret
notb
lcall
add
arpl
fsts
shl
and
aas
rcl
and
lret
xor
mov
loop
inc
pop
inc
push
jo
fisubs
mov
and
fidivl
loop
sub
lret
sbb
cmp
ljmp
mov
sbb
or
mov
outsl
mov
mov
xchg
pop
ret
fucomip
mov
xchg
ret
mov
ljmp
xor
and
mov
in
push
scas
ret
or
adcl
lahf
xlat
lods
mov
xchg
cmc
jae
sbb
pop
neg
fwait
repz
jp
rcrl
incb
addl
mov
adcb
stos
movsl
push
sbb
stc
cmp
mov
les
xor
sub
add
dec
cwtl
inc
and
push
out
push
mov
jp
mov
mov
push
sub
hlt
test
scas
pop
ljmp
enter
mov
and
dec
sbb
jb
and
lock
ljmp
into
mov
inc
dec
jae
mov
xchg
repnz
jge
js
inc
arpl
push
add
push
pop
lret
je
add
add
ljmp
or
xchg
mov
inc
add
fmuls
or
mov
es
xchg
mov
aaa
xor
dec
out
sub
fcoml
jl
jl
cmc
mov
pop
mov
jl
add
cli
aaa
pop
xor
int
jmp
adc
dec
fiaddl
xor
hlt
sbb
sub
lds
test
mov
cs
sub
sub
es
inc
sbb
jno
sar
sub
xchg
nop
cs
aas
push
mov
jnp
mov
sbb
out
leave
lahf
loopne
add
mov
test
fisttpl
or
test
jmp
cmp
mov
adc
jbe
into
cmp
dec
or
mov
outsb
sarl
test
jecxz
loop
lods
mov
jle
pusha
in
or
fmuls
mov
and
and
rol
lods
fldl
xchg
fildl
notb
or
loopne
mov
pushf
sarl
pop
outsb
popf
mov
jb
sbb
mov
les
lods
add
jge
add
aam
pushf
call
jbe
js
push
sub
call
mov
ret
pop
mov
dec
push
in
push
addl
ret
pop
test
outsb
and
out
stos
pop
push
sbb
repnz
jp
icebp
insl
mov
pop
ja
mov
jns
outsb
cmp
enter
cmpsb
pop
aam
mov
jg
sahf
dec
ss
inc
mov
add
mov
mov
test
dec
mov
in
inc
stos
ds
dec
out
push
xor
loop
jmp
dec
xchg
pop
cltd
add
pushf
sub
les
dec
mov
and
mov
push
mov
inc
and
in
jmp
jnp
shlb
pop
stos
inc
iret
ret
jmp
jle
rcll
les
dec
mov
push
xchg
sbb
out
daa
loope
loope
roll
arpl
arpl
daa
xchg
jae
xchg
mov
lods
popf
fcoms
jo
das
xchg
mov
aas
push
mov
stc
aas
in
sub
push
test
daa
xchg
into
stos
dec
ljmp
int3
popf
cmp
sub
popa
clc
out
mov
pop
int
mov
insb
shll
inc
add
mov
adc
adc
pop
mov
pop
mov
scas
push
push
sbbb
fdiv
negb
and
insb
mov
sti
or
dec
cld
loopne
sub
mov
sbb
xchg
mov
es
jge
add
lahf
sbbl
cld
jge
and
jns
mov
xor
pop
xchg
sub
push
test
ror
lcall
ficompl
cs
dec
ror
mov
out
adc
ret
cmpsb
int
bound
or
aam
pop
sub
mov
add
movb
negl
orb
xchg
xchg
data16
test
or
pop
repnz
and
in
inc
mov
imul
call
push
push
lods
fsubrl
add
push
cmp
mov
inc
enter
mov
dec
pop
and
jns
fisttps
js
pusha
sub
push
mov
push
hlt
push
fiaddl
push
fildl
idivl
push
xor
aam
push
es
mov
pop
loopne
loopne
and
push
pop
push
and
xor
pop
xor
mov
movsb
xchg
add
add
repnz
add
stc
out
cmpsl
push
or
shlb
cwtl
xchg
jl
pusha
sub
sbb
stos
or
or
cmpb
imull
mov
sub
pop
mov
ljmp
pop
adc
sti
loope
add
loope
fstpt
lea
mov
rcrb
clc
pop
into
lds
pop
in
inc
mov
mov
std
mov
mov
cmp
std
jge
or
popa
int3
push
inc
mov
pop
push
xchg
ds
mov
stos
sbb
xchg
push
sbb
negl
iret
xor
mov
jb
sub
pop
fiaddl
jle
inc
lret
lcall
shrl
xor
dec
fistpl
lods
test
mov
cmp
push
inc
inc
bnd
addr16
daa
out
xor
cltd
dec
adc
nop
sbb
push
or
adc
aam
es
inc
adc
rclb
sub
mov
ret
xchg
lods
imul
ret
xchg
sub
pop
cld
shrl
mov
xor
andb
nop
lahf
and
leave
loop
movsl
std
sub
rorb
jl
cmovns
aas
cmp
jb
pop
test
fs
inc
pop
cmp
fildl
mov
inc
adc
mov
adc
dec
jo
pusha
cs
push
inc
push
mov
mov
into
lock
rorb
pop
add
ds
cs
push
inc
push
mov
mov
into
lock
rorb
pop
add
ds
cs
push
rorb
mov
into
lock
rorb
pop
add
ds
cs
push
inc
push
mov
mov
mov
mov
mov
sub
mov
andl
andl
andl
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
mov
lea
push
movl
movb
movl
movb
movl
movb
movb
movl
call
leave
ret
js
push
je
add
add
in
hlt
mov
mov
mov
inc
push
je
add
adc
and
push
clc
call
hlt
mov
movsb
mov
fs
je
add
adc
and
xor
lret
imull
ret
fcmovnb
loope
or
or
aaa
and
aaa
mov
xorl
inc
ret
sub
mov
and
jo
iret
jo
inc
xchg
inc
cmpsl
push
mov
cmp
cltd
in
loopne
inc
aam
sub
sbb
loope
xchg
test
into
sbb
in
push
add
dec
cli
fcmovbe
call
inc
std
aad
loop
or
sub
inc
fwait
jno
and
xlat
adc
sub
aam
cmp
cmp
aaa
jno
xchg
test
pusha
roll
mov
test
stos
fstpl
or
in
xorl
loopne
push
sbb
call
int3
mov
nop
inc
fidivl
lahf
mov
les
or
les
mov
inc
push
je
add
adc
and
xor
call
hlt
mov
movsb
mov
sbb
and
inc
pusha
ja
mov
mov
int
mov
test
lock
rorl
sub
cmp
pop
pop
inc
arpl
jae
sbb
or
dec
loope
add
shl
pop
add
sub
adc
and
xor
call
hlt
mov
movsb
mov
fs
je
add
adc
and
xor
call
hlt
mov
movsb
mov
or
mov
icebp
sub
rorb
test
lds
or
scas
aaa
pmullw
loopne
jns
mov
enter
adc
jns
push
test
xchg
inc
jp
das
xor
sbb
mov
dec
std
test
push
inc
mov
hlt
cmp
sbbl
movsl
mov
add
enter
sbb
hlt
loopne
aam
sub
aas
mov
push
nop
fs
jle
in
faddl
inc
stos
in
incl
xchg
loopne
addl
cmc
out
jmp
ror
and
xchg
mov
push
mov
jbe
pop
xchg
fabs
stc
fcomi
into
inc
or
xor
jge
test
ret
lahf
out
xchg
mov
stc
add
inc
xorb
sub
movsl
ds
push
xchg
addl
cwtl
es
mov
dec
xchg
dec
stos
out
xchg
mov
and
mov
inc
xabort
sbb
or
out
jg
fildll
fdivrl
sub
rolb
int
aaa
lea
mov
dec
sbb
inc
adc
jecxz
push
out
push
mov
shl
jp
mov
xor
clc
imull
ss
loopne
adc
sbb
xor
cmp
lods
or
in
testb
sbb
push
sbb
mov
pop
add
and
fisubs
and
inc
int
mov
inc
fstpt
push
mov
in
add
test
int3
add
enter
inc
push
jg
cmpsb
push
adc
insb
push
mov
leave
fcmovne
lock
xchg
in
mov
movsb
cli
aad
hlt
lods
arpl
push
sbb
or
lcall
xor
pop
in
je
jle
mov
mov
cmp
aas
nop
or
mov
pop
hlt
cwtl
icebp
and
and
jmp
outsl
adc
fisttpll
cmpb
lea
cmp
ficoms
sahf
xchg
xchg
xor
fidivl
into
sub
fdivl
lea
jne
inc
sbb
jp
inc
filds
and
pop
fs
mov
ljmp
fisttps
mov
xchg
mov
shll
lahf
test
cltd
leave
test
adc
lea
rcrb
mov
add
in
or
fucomp
lock
and
jns
mov
inc
push
pushl
insb
rcr
push
mov
cld
adc
pusha
sub
inc
add
sub
fwait
nop
in
mov
movsl
inc
mov
mov
outsl
mov
daa
or
sub
test
test
scas
pushf
int3
js
xchg
push
or
xor
in
in
jmp
cli
dec
jb
aad
and
arpl
lcall
xor
mov
dec
pop
sub
mov
cmpsl
shl
xchg
or
setae
cmpb
rcrl
outsl
add
inc
movsb
outsb
aam
dec
out
ja
imul
loop
or
arpl
sbbb
mov
mov
out
add
xchg
daa
adc
enter
rcrb
mov
xor
test
popf
aaa
loopne
mov
mov
fwait
daa
aas
mov
inc
in
in
pop
loope
js
jne
out
adc
lock
push
sti
and
add
rolb
xchg
repnz
cmp
mov
fcompl
aam
stos
cmpb
sub
aas
mov
fidivrl
xlat
pop
ss
pushf
cmp
mov
adc
popa
es
and
mov
mov
lods
cmp
iret
and
sbb
xchg
sub
add
xchg
js
jecxz
xor
xchg
push
pop
sub
ljmp
push
mov
jg
in
dec
push
sub
notl
xchg
mov
mov
push
and
xchg
imul
add
pop
icebp
sti
popf
adc
call
xorb
adc
lahf
into
hlt
call
jge
lret
add
lcall
mov
test
jo
inc
enter
pop
ds
mov
sub
insb
stos
pop
jecxz
enter
jns
jnp
and
push
imul
cmp
add
xchg
and
mull
sub
dec
pop
xchg
mov
mov
mov
xlat
jl
dec
pop
shrb
sbb
jmp
dec
data16
mov
and
xor
ljmp
imul
lods
fistpl
push
out
jmp
enter
jb
cmp
jns
rclb
ja
mov
out
inc
jecxz
dec
sbb
mov
sub
push
addb
sub
dec
sbb
jge
negl
sbb
adc
sarb
scas
push
out
jmp
mov
lds
stos
bswap
add
cmp
dec
xchg
xor
test
dec
push
std
jne
shrd
imul
scas
rorl
push
xchg
push
lods
les
xorb
rcll
data16
les
sub
jecxz
mov
fwait
adc
lret
repnz
push
adc
je
pop
xor
jle
ror
cmpsl
sahf
bound
mov
jle
fs
xchg
lcall
add
lods
cltd
mov
daa
push
push
xchg
repnz
ja
xchg
mov
into
jns
fincstp
cmp
or
jg
sti
enter
sub
sbb
arpl
push
inc
dec
leave
pop
fsubrs
sbb
push
adc
sbb
pusha
xchg
cli
or
movsb
repnz
adc
jg
pop
and
and
imul
jecxz,pt
js
negl
repnz
addr16
outsl
mov
mov
and
test
out
out
inc
xchg
fidivrl
xor
xor
xor
fcomps
push
imul
inc
test
push
std
mov
shl
sbb
cmc
xchg
loope
jb
nop
out
sub
lret
mov
pusha
inc
int3
pop
sti
jg
inc
into
je
in
lahf
test
xchg
inc
enter
popf
jge
mov
loopne
push
jle
movsb
aad
cmp
sub
jnp
mov
stos
testl
push
inc
push
insl
inc
das
lock
sub
mov
sahf
mov
cmovle
pop
loopne
xor
in
fisttpl
pop
lock
mov
mov
rorb
xchg
push
insl
inc
sbb
cmp
dec
icebp
pop
xchg
pop
push
mov
outsb
int
ja
pop
outsb
push
lahf
mov
cwtl
pop
test
mov
add
stos
mov
cmpsb
mov
push
lds
mov
mov
xor
fwait
mov
pop
out
jge
sub
and
cltd
push
push
mov
mov
fsubp
mov
pusha
adc
xor
cwtl
sub
cli
stos
into
jl
and
mov
in
jle
fistps
mov
lret
sub
xlat
dec
xor
es
ss
push
mov
and
ss
fsubrl
outsb
ret
push
hlt
ror
arpl
in
dec
lock
pop
lds
out
sbb
or
jge
and
fstl
jl
rorl
cmp
js
cmp
cmp
cmpsl
jg
pop
outsb
inc
data16
loopne
imul
adc
and
movl
jg
xchg
out
mov
mov
filds
js
icebp
orl
imul
dec
push
push
rcr
out
imul
inc
or
movsb
add
mov
sub
or
pop
ljmp
sbb
jge
jge
fwait
cmp
dec
roll
or
xlat
or
mov
pop
or
adc
push
movsb
leave
cmp
out
das
pop
sti
mov
and
ficoms
jg
in
xor
xchg
add
test
ja
ror
repz
mov
out
addl
pop
and
ret
or
clc
cmpsl
out
mov
popf
lret
or
stc
mov
mov
ja
loope
ret
cmp
popa
fcmovbe
jae
sbb
push
sub
mov
jecxz
in
repnz
jb
push
dec
adc
test
xor
in
xor
das
xor
push
scas
sub
popl
lds
cmp
mov
outsl
xchg
xor
ret
jg
jge
and
dec
mov
jecxz
adc
mov
out
pop
adc
mov
hlt
fs
hlt
stos
xchg
mov
not
ss
gs
rol
and
orb
out
ret
or
jmp
and
push
add
xor
fs
fidivs
dec
xor
dec
lret
mov
pop
adc
dec
rorb
aaa
sbb
pusha
std
inc
jecxz
mov
mov
fchs
mov
testb
xchg
dec
mov
stos
psubw
jno
subb
enter
clc
mov
jno
aad
lahf
and
out
int3
mov
aas
xchg
jns
lcall
cmp
adc
xchg
daa
mov
mov
push
cld
rcl
cmp
clc
pop
mov
test
insb
push
fs
ds
mov
into
mov
in
gs
and
xor
mov
sbb
fadds
xchg
jbe
push
cmpsl
cltd
aas
sub
loop
fs
pop
stos
push
jae
sti
xor
test
mov
and
outsb
dec
mov
cwtl
mov
cwtl
and
fisttpl
sub
rcrl
cmp
cmp
fisubrs
sub
lret
enter
xlat
xor
icebp
sbb
out
lods
add
mov
std
mov
sti
aam
sbb
xchg
arpl
cli
dec
sbb
xor
repnz
add
cmp
adc
aas
push
addl
lret
in
shll
rcrb
cmp
stc
mov
in
sub
mov
cli
adc
adc
push
lods
test
pop
arpl
pop
cmpsb
roll
xor
out
lcall
xchg
push
aaa
mov
adc
sbb
push
int
fdivrl
fcmove
dec
ror
iret
inc
loop
mov
push
xchg
mov
sbb
lods
mov
iret
das
aad
dec
mov
mov
sahf
jae
adc
adc
jbe
cmp
push
imul
cmc
roll
xchg
int
stc
mov
xchg
iret
mov
mov
insl
mov
mov
push
cs
ret
in
push
shlb
cmp
je
lods
das
xor
pop
push
arpl
cmc
xchg
stc
cltd
aas
lea
push
sbbl
push
jbe
lods
dec
movl
lret
das
inc
movb
mov
jno
xchg
cltd
scas
fisubl
mov
add
sub
shll
popf
pop
xorl
xor
adc
mov
or
sub
sbbb
test
icebp
add
mov
or
pop
adc
cmp
jmp
in
push
mov
adc
xchg
dec
sbb
popf
push
sbb
fwait
outsb
imul
add
push
dec
das
fsts
mov
xor
pushf
dec
jae
gs
js
rcrb
out
stc
mov
xorl
sbb
pop
jno
sub
cmpb
mov
inc
adc
sarb
notb
or
imul
ds
adc
sbb
xchg
shlb
adc
dec
in
inc
fwait
loopne
cmp
lods
jbe
lds
mov
out
cmovo
sub
test
aam
mov
xchg
push
pop
or
xor
push
popf
adc
and
js
xchg
mov
outsb
lret
aas
mov
mov
clc
hlt
adc
mov
xchg
iret
adc
cmp
scas
test
or
nop
mov
adc
mov
addl
fwait
daa
test
lcall
cwtl
jle
cmp
mov
jp
jle
xchg
sbb
mov
adc
inc
push
cmp
add
xor
and
push
xchg
test
cmp
push
ljmp
cmp
sbb
push
mov
mov
repz
test
dec
lods
xor
pop
mov
cmp
mov
adc
jmp
xlat
or
jmp
sbb
xchg
lahf
inc
cmc
adc
unpcklps
push
sbb
sbb
and
push
pop
cmp
js
test
dec
adc
jmp
ror
in
lock
rcll
std
mov
repnz
jl
sbb
repnz
aaa
daa
fidivrl
stos
add
loope
fs
jmp
lods
int
xor
pop
mov
call
push
cwtl
mov
adc
mov
fldenv
mov
mov
add
xchg
pop
aad
xor
aam
sub
cwtl
ja
cld
push
int
jmp
push
rcl
mov
fmull
cmc
xor
mov
jo
jnp
cltd
fwait
loop
aam
sti
test
cmpsl
pop
in
inc
cli
sarl
std
ds
pop
pop
cld
xchg
loope
fcmove
push
push
sbb
popa
mov
adc
aas
gs
mov
es
mov
jle
or
in
int3
loop
and
adc
dec
sar
pop
and
outsb
add
ljmp
xchg
xor
jl
sarl
pop
fsts
out
mov
pop
lods
adc
mov
test
push
sub
push
inc
and
jnp
add
mov
mov
cmc
nop
inc
into
add
jecxz
roll
sub
jae
and
ss
mov
arpl
xor
pop
lahf
sub
and
push
adc
cmp
and
sbb
jle
movsb
mov
push
lcall
sbb
xchg
mov
jl
inc
jg
mov
enter
fidivl
adc
adc
jmp
repz
dec
std
test
test
inc
jl
inc
lds
pushf
pop
cltd
movsl
push
lret
js
push
mov
sub
xchg
aam
add
mov
mov
fnstcw
pop
pop
push
rcl
pop
das
push
push
inc
jp
scas
push
adc
rcl
scas
je
xchg
mov
push
lods
mov
push
aaa
xchg
lret
cmp
xacquire
ffreep
dec
and
push
in
aad
lcall
pop
addb
aam
mov
mov
cmp
out
xchg
inc
xchg
mov
imul
adc
mov
or
sbbb
mov
inc
ss
jl
gs
call
pop
das
adcb
and
inc
in
sub
xchg
lock
negb
mov
mov
xchg
cmc
sub
xor
imul
out
int3
idivb
dec
stc
cmp
push
ljmp
ds
pop
xchg
int
pop
stos
inc
or
dec
popf
popf
ret
insb
mov
pop
decl
je
mov
cmpsb
sbb
shlb
outsl
jbe
mov
lds
mov
jns
adc
mov
xchg
rcr
cwtl
inc
inc
insl
lods
pop
dec
cmp
movb
xor
out
mov
mov
and
sub
push
fisubs
ss
adc
ljmp
stc
dec
sbb
mov
jbe
test
testl
arpl
js
lock
nop
xchg
jge
imul
sbbb
stos
dec
cmp
ret
loope
push
mov
fdivr
jae
pcmpeqb
push
jns
mov
in
imul
mov
rcrl
inc
cs
and
pop
push
push
bsr
push
push
jecxz
xchg
sbb
add
ret
repz
leave
xor
std
jbe
mov
leave
cmpsl
mov
int
stc
sbb
mov
in
push
jb
cmp
pop
and
mov
xlat
jecxz
mov
rorb
mov
loop
addl
xor
in
and
push
add
cmp
dec
or
sbb
test
ret
clc
leave
rorb
jns
jnp
inc
in
test
lret
shlb
aaa
dec
xlat
and
out
std
pop
call
ljmp
fisubl
mov
es
inc
xchg
js
dec
mov
pop
stos
mov
add
pop
scas
adc
or
and
ret
cli
int
mov
test
cmp
add
pop
sbb
adc
jmp
shrl
xor
mov
add
push
push
fisubs
arpl
cmp
dec
dec
xor
dec
shl
gs
fwait
jne
mov
jne
bnd
out
jb
mov
aam
pop
sbb
test
add
adc
arpl
fdivl
scas
out
and
mov
and
test
pop
dec
cmc
les
adc
add
xorl
jbe
gs
push
xlat
movsl
test
adc
mov
mov
cmp
clc
stc
rolb
mov
ret
clc
jb
cltd
lods
cmp
mov
ret
pop
jb
push
jbe
xchg
lods
cld
xchg
push
push
cmpsb
sub
insl
push
ficoms
xor
mov
mov
aaa
adc
jns
daa
push
xchg
jl
inc
fimuls
push
sarl
andl
mov
movl
into
and
sub
jns
mov
sbb
or
lahf
loope
mov
dec
mov
pop
int
adc
xchg
frstor
mov
das
lahf
push
ds
adc
int
ret
lret
repnz
ljmp
imul
sub
xchg
test
pusha
cmp
icebp
testl
popf
xor
mov
es
test
movsl
shl
sub
push
push
xchg
daa
test
lahf
daa
leave
fists
cmpsb
int
test
dec
sbb
lahf
aas
stos
test
pushw
mov
insb
insb
sbb
and
cmp
push
fs
shll
push
and
dec
ss
ja
clc
clc
xchg
add
cltd
fwait
addl
mov
mov
xchg
mov
push
or
pusha
fcmovnbe
sub
fnstenv
outsb
or
jge
lock
or
ret
sbb
sub
lods
mov
js
xor
jbe
jb
ret
xchg
push
fcompl
bound
int
add
pop
xchg
int3
push
xor
xor
gs
es
imul
xor
leave
shll
mov
jp
arpl
aaa
push
push
cltd
adc
rclb
adc
aas
pop
cmp
in
sbb
scas
pusha
movsl
pop
enter
shrl
out
sub
cmc
int3
data16
pop
pop
or
out
mov
add
jae
ja,pn
rep
add
movsb
bound
mov
fadd
mov
push
lds
cs
aam
mov
mov
test
jo
xchg
pop
testl
mov
xor
jne
pop
mov
neg
das
mov
rcrb
xchg
addr16
jo
sbbl
push
lods
rorb
mov
sub
sub
scas
loop
out
jmp
cmpsb
inc
mov
pushl
je
rolb
scas
mov
ljmp
leave
xor
pop
mov
sti
fdivrp
mov
movsb
dec
xor
add
clc
cmp
ret
mov
and
sub
xchg
nop
add
aad
lahf
jmp
popa
mov
imul
in
test
jbe
dec
test
icebp
jbe
adc
sub
js
pusha
lods
xchg
stos
iret
cmp
mov
sbb
fsubs
lret
repnz
or
sub
cwtl
insb
xor
outsl
stos
dec
frstor
pusha
and
std
lods
inc
jl
xor
scas
jge
push
xlat
mov
inc
and
and
jne
mov
out
sub
in
sub
pop
pop
in
mov
sub
push
dec
xchg
shll
inc
es
or
inc
xchg
lcall
jecxz
cli
addl
test
push
xchg
add
aam
out
clc
push
or
cmp
stos
xchg
jp
sub
adc
icebp
push
xor
pushf
xchg
aad
hlt
cltd
je
fidivl
cmpsb
scas
shll
addl
mov
push
lea
popf
xchg
pop
hlt
je
cmpb
mov
add
movl
or
jmp
sub
pop
nop
aad
mov
mov
aad
ror
adc
jp
out
add
sub
fistpl
push
mov
and
dec
mov
in
fwait
stos
push
inc
dec
push
xchg
fwait
mov
gs
xor
or
add
dec
and
imul
push
dec
aaa
in
lods
std
loopne
in
les
loop
mov
rorb
pop
add
add
es
sbb
mov
outsl
jecxz
mov
and
lcall
mov
mov
jb
cmp
jae
and
popf
xor
xchg
outsl
insb
pusha
out
ret
shlb
pop
in
xor
cmpsb
adc
add
rclb
es
addr16
je
add
adc
and
xor
call
hlt
mov
movsb
mov
fs
je
add
adc
and
xor
call
hlt
mov
movsb
mov
fs
je
add
adc
and
xor
call
hlt
mov
movsb
mov
fs
je
add
adc
and
hlt
pop
les
jle
in
or
and
pop
jo
leave
mov
stc
cmp
mov
imul
sbb
cmp
dec
leave
mov
stc
vpshaw
test
aas
pop
das
imul
sub
pop
cmp
mov
loope
nop
incl
iret
push
add
outsl
add
or
outsb
dec
mov
sti
arpl
cmp
sub
and
pop
add
mov
aam
xchg
es
xchg
mov
mov
shrl
int3
xorb
pop
xchg
pop
mov
mov
stos
and
jecxz
test
fs
jns
push
jmp
iret
or
pop
sub
leave
scas
and
cwtl
call
mov
cmp
lock
aas
mov
and
dec
sbb
incl
cltd
dec
jp
cs
mov
sub
pop
sub
and
cmp
sahf
push
cli
jbe
fwait
in
pop
adc
dec
mov
aam
adc
sub
dec
orb
dec
cmp
mov
stc
sahf
decl
iret
push
aas
inc
das
jno
pusha
movups
outsl
xor
or
scas
in
mov
inc
sbb
popa
or
jl
pop
fstl
mov
fsub
lcall
or
inc
imul
add
pop
and
xchg
sti
rcll
iret
dec
aas
pop
das
imul
sbb
pop
cmp
mov
stc
vpshaw
test
aas
pop
das
imul
sbb
pop
cmp
mov
mov
cmp
push
jge
and
shl
lock
push
sbb
xorb
sub
dec
lods
jge
cld
movsl
jns
add
loop
ljmp
add
addr16
jg
sbb
fisubl
and
sub
or
pop
testl
mov
out
ret
mov
insb
xchg
test
sub
add
movsb
out
mov
addr16
test
or
rcrl
pop
and
inc
push
loope
adc
add
outsl
test
mov
jle
stc
pop
das
enter
inc
mov
jae
adc
sti
pop
lcall
shrl
cmp
jp
out
enter
adc
jnp
cmp
push
std
pop
ss
imul
inc
fnstcw
mov
or
movzwl
jle
cmp
jnp
data16
scas
sti
push
ret
cs
mov
icebp
or
sub
in
iret
stc
fisttpll
mov
mov
adc
push
fistpl
sub
inc
inc
cld
sbb
push
or
cmc
fsts
mov
mov
fidivrs
fldt
pop
bnd
ds
aas
jb
nop
inc
jp
enter
mov
int3
addr16
xchg
mov
adc
xor
popf
sahf
jecxz
std
fisubs
cwtl
mov
sub
subb
add
cli
mov
fdiv
mov
icebp
mov
hlt
xor
std
jne
xor
hlt
xchg
mov
or
and
xchg
or
lds
xor
popf
scas
xor
cmpsb
xchg
lods
sbb
loop
push
mov
daa
lods
ficoms
sahf
or
sarl
inc
js
push
sar
xchg
sbb
loop
mov
xchg
inc
pusha
xor
push
loopne
sahf
mov
movsb
pushf
adc
adc
mov
test
add
add
lods
test
push
cmp
jge
or
mov
xchg
xor
aas
add
jp
push
push
stos
sbb
sub
enter
add
in
pusha
xchg
add
sub
cmp
lods
ds
rorb
pop
mov
or
dec
aad
mov
lock
movsl
gs
sar
imul
cmp
add
push
enter
xchg
push
pop
gs
mov
fistpl
mov
int
es
daa
lret
pop
iret
mov
test
jnp
xchg
das
mov
pusha
popa
jg
mov
scas
nop
mov
pushf
lcall
outsl
popa
and
in
addl
add
xlat
mov
lahf
mov
lcall
addb
mov
push
gs
push
pop
or
fcmovne
lods
movsl
add
add
std
sahf
ret
sub
movsb
and
sub
lea
and
or
cmp
lds
xorb
xchg
or
sbb
je
add
mov
mov
addr16
xor
cmp
jmp
scas
jecxz
or
mov
mov
into
sbb
sub
mov
jle
int
loop
mov
daa
mov
in
mov
pop
lods
lret
xchg
sti
cmp
cmp
add
and
cmp
xor
xchg
stos
xchg
fbstp
jo
mov
jbe
out
and
sahf
push
mov
std
jl
gs
adc
out
push
adc
inc
outsl
mov
sub
sar
mov
add
dec
and
push
fwait
push
shlb
repz
mov
push
sahf
and
xchg
sbb
jne
das
mov
xchg
pop
fwait
fwait
or
or
cmpsb
sub
aam
aaa
mov
or
dec
sub
adcb
pop
and
xchg
push
into
mov
aam
insl
stos
mov
lret
shl
mov
jl
aaa
pop
arpl
imul
mov
jns
sbb
sti
adc
repz
and
lock
sub
sub
sbb
jne
je
lods
mov
add
sub
lods
imul
call
in
fs
push
or
and
pop
fdivrs
fs
outsl
iret
test
or
out
mov
dec
in
das
xlat
stos
jecxz
mov
ds
lds
add
add
mov
jo
push
pop
add
cld
mov
xchg
ficomps
push
pop
sahf
aas
rcr
sbb
and
adc
popf
push
imul
in
dec
jp
push
orb
hlt
mov
cmp
dec
mov
jmp
mov
cmc
adc
xor
xchg
clc
lods
stos
fiadds
push
sub
outsb
jnp
push
scas
sbb
jbe
lods
add
ss
gs
in
push
xchg
sti
leave
mov
scas
subb
jbe
mov
mov
inc
sar
jno
out
ficomps
mov
or
push
xor
jge
xor
mov
sahf
call
cld
sbb
cmp
fwait
or
or
movl
sbbl
shlb
jl
cmc
and
push
xchg
jecxz
dec
mov
push
imul
std
int
dec
inc
mov
xor
in
add
mov
mov
and
scas
sub
imul
inc
aam
adc
pop
faddp
pushf
imul
stos
dec
int
and
and
xchg
sbb
sub
xchg
sti
xor
mov
arpl
leave
test
jo
mov
stos
or
addr16
mov
xor
sarl
mov
sbb
push
cmp
iret
inc
pop
push
into
inc
and
sti
mov
xor
aad
lds
xchg
stos
xchg
es
lds
push
fnstsw
push
incb
notl
ret
out
insb
or
adcl
mov
mov
mov
popf
stc
xchg
sbb
push
scas
rolb
lods
fbstp
fildl
test
jae
repz
arpl
dec
mov
outsl
or
pop
xor
or
jbe
cld
stos
add
fnstcw
in
jp
ljmp
and
xor
mov
push
xor
jbe
jecxz
cmp
in
fdivrl
test
mov
push
cmc
pop
ja
outsl
ret
out
gs
cld
dec
call
or
jmp
js
and
push
movsl
adc
mov
das
mov
shrl
icebp
pop
jmp
or
cmp
test
lret
sub
jmp
fcmovu
cs
mov
or
mov
rcrb
vsubpd
inc
mov
dec
rcrl
xchg
mov
xor
jecxz
sub
flds
xor
mov
hlt
adc
aaa
add
arpl
mov
test
jecxz
jnp
xchg
xchg
jae
adc
sar
lret
pop
and
jo
mov
jle
add
push
ljmp
jno
push
pop
call
out
dec
pusha
sub
out
jle
xor
scas
fs
addl
xor
arpl
ret
and
jle
xchg
push
repz
scas
hlt
fwait
xchg
idivl
jne,pt
imull
lods
push
aas
subl
imul
xchg
sub
test
and
dec
jge
aad
cltd
sub
cwtl
test
les
repnz
mov
testb
sub
repz
das
lock
inc
mov
jnp,pn
daa
jb
or
and
std
and
or
inc
jl
inc
addr16
sbb
cmc
xor
movsl
and
bswap
push
sub
sbb
sub
cmpsl
in
das
lret
push
mov
mov
mov
dec
inc
inc
fst
pop
hlt
mov
rcl
out
lods
fs
outsb
imul
dec
jecxz
xor
pop
sbb
cwtl
scas
mov
jbe
insl
repnz
fs
test
inc
mov
mov
in
mov
cltd
ficoml
hlt
or
es
or
pushf
adc
pusha
jne
mov
fnsave
lds
cmp
mov
push
das
xchg
lcall
into
mov
add
adc
push
push
fcompl
ficomps
ja
mov
fstpt
sti
sub
and
lods
push
lods
pop
call
icebp
mov
cmpsb
lds
jne
xchg
loope
rclb
jle
push
xor
repnz
iret
or
in
cmc
ljmp
jno
jmp
imul
pop
xchg
inc
cmp
jnp
dec
lret
sub
xor
out
cmp
mov
lods
push
add
cmp
jg
out
or
and
ficompl
fsubrs
sbb
add
les
sub
movswl
stos
mov
fadds
movsl
push
lret
mov
mov
test
xor
sub
clc
adc
jnp
insb
jb
mov
cs
push
lea
jnp
xor
push
and
mov
mov
jnp
aad
sub
aad
mov
ret
mov
arpl
ret
incb
aad
sbb
out
loop
repz
mov
clc
pop
mov
jecxz
dec
leave
iret
push
cmpsb
mov
loopne
pop
stc
xchg
scas
out
dec
sub
stos
aam
sub
ror
test
popa
loope
dec
xor
insl
test
and
outsl
dec
jg
icebp
pop
xor
js
sahf
xchg
jge
insb
adc
insl
aaa
test
mov
dec
repz
mov
ficoml
sbb
or
xchg
lods
cmovg
mov
cmovnp
test
cld
mov
out
add
dec
scas
ret
daa
fucomi
mov
pushf
iret
sti
out
inc
xor
lea
aad
cmp
aas
pop
scas
adc
push
or
out
pop
or
add
sbb
test
test
and
repz
cwtl
out
out
and
imul
lods
mov
xchg
mov
fstpt
mov
cmp
into
cmp
mov
rolb
cmp
inc
xchg
push
aaa
mov
sbb
dec
sahf
movsl
aaa
sub
sarb
push
out
mov
pop
or
xlat
push
popa
testl
jp
aad
adc
call
movsb
cmp
insb
hlt
lcall
mov
mov
lret
ja
and
lods
sbb
jl
cli
and
pop
mov
leave
cmpsb
pop
push
clc
or
iret
orl
repz
lret
inc
xor
test
imul
bound
lds
es
dec
outsb
mov
push
je
adc
rorl
pop
cmp
subl
fsubrp
pop
push
std
sub
std
mov
adc
sub
sti
mov
mov
mov
jae
jbe
sub
ljmp
loopne
add
mov
sub
mov
cmp
cmp
mov
scas
lock
or
mov
pop
jp
adc
xor
imul
adc
xchg
jno
sub
cmc
pushf
pop
imul
fcomip
cmc
ficompl
push
lods
iret
imul
sti
cmpsb
movsl
or
cwtl
pop
mov
xchg
lods
fbstp
repnz
push
ret
iret
sbb
jle
push
cmp
xchg
ds
lds
inc
insl
xor
mov
ficompl
adc
loope
pop
inc
and
sti
push
mov
xchg
fwait
mov
mov
js
loopne
mov
xor
fs
jns
mov
loop
jg
daa
andb
adcb
inc
js
and
roll
addb
jnp
xor
lret
push
dec
jns
test
out
push
out
adc
pop
out
adcb
adc
cld
xchg
jp
pop
das
jl
out
push
fistl
lret
xchg
rolb
std
sbb
ds
mov
inc
lcall
lcall
movsl
jne
jnp
sub
mov
out
add
insb
jmp
dec
vmwrite
sbb
bound
jne
mov
xchg
fwait
mov
jne
fwait
icebp
es
daa
test
out
xor
sbb
or
jmp
adc
repz
mov
push
mov
les
cld
data16
aas
jbe
andl
negb
test
cmp
imul
pop
outsl
movsl
ror
les
out
push
subb
js
or
xchg
mov
pop
fs
jb
xor
div
testl
pop
adc
outsb
jmp
dec
pop
data16
cld
jecxz
inc
sbb
xchg
sbb
loopne
ret
movsl
sbb
ja
inc
sarb
addb
scas
xchg
lds
fsubrp
loope
adc
pop
cmc
outsb
jo
or
xchg
sbb
jb
cmp
inc
sbb
add
ret
clc
add
jl
mov
mov
xchg
xorl
imul
mov
lret
or
sub
jno
xchg
cmp
adc
hlt
mov
stos
ljmp
iret
je
sub
shlb
nop
push
push
push
cmp
nop
adc
dec
jmp
dec
mov
cwtl
xchg
pop
mov
push
push
cmpsb
popa
or
popa
imul
popa
int3
sbb
xorb
xchg
or
add
loope
adc
sahf
imul
mov
xchg
mov
mov
daa
mov
fwait
xor
sbb
jnp
pop
cmpsl
pop
cmpsb
jge
pop
push
cmp
push
out
fisubs
std
lock
cmp
sbb
cmp
cmpsl
push
mov
ds
jns
ret
or
mov
cld
jae
mov
mov
data16
jno
outsl
lods
mov
xor
movsl
sbb
xor
aaa
adc
adc
test
dec
jb
fldenv
add
or
das
andl
data16
dec
ja
ja
stc
push
xchg
test
push
mov
dec
shr
inc
test
mov
inc
jb
imul
sbb
sti
lds
mov
mov
jo
mov
mov
pop
call
out
hlt
dec
insl
cmova
nop
out
lock
ss
mov
movsb
dec
xor
xchg
shrl
js
xchg
pushf
fs
mov
test
or
je
sub
movsl
push
xchg
xlat
repz
test
bound
add
lock
lods
push
and
pop
inc
push
sub
leave
xchg
push
and
jae
mov
or
adc
int
xchg
jp
sub
mov
or
add
sub
icebp
dec
fcomps
mov
stc
jle
xchg
lahf
sbb
shrl
and
in
sub
scas
stc
inc
xor
in
aam
shll
add
pop
jbe
lock
aad
ret
and
cli
xchg
aam
fbld
stc
out
sub
bound
call
or
cmp
cld
gs
cmc
addb
fldt
jbe
lea
or
xlat
push
mov
adc
out
lret
test
stos
fs
out
lods
pop
add
rcll
pop
movsb
lods
mov
sbb
inc
pop
adc
push
cmpb
push
imul
sbb
mov
sti
pop
es
add
inc
sbb
pop
adc
adc
sub
jae
add
push
lcall
movsl
pushf
mov
insb
test
jb
mov
mulb
push
sub
pop
jo
addl
mov
add
sbb
mov
push
xor
mov
jo
nop
dec
adc
icebp
mov
test
cli
mov
fdivrs
dec
push
ret
loope
loop
jo
add
add
mov
fbstp
and
scas
jnp
outsl
mov
fistps
aaa
push
push
push
sbb
mov
rorb
cmp
or
test
mov
inc
push
lock
std
cli
push
ljmp
pop
js
dec
popa
xchg
adc
mov
pop
imul
lock
pop
aam
jnp
scas
int3
xchg
push
in
imul
jge
mov
js
stos
enter
sub
cmpsb
pusha
cs
dec
iret
jmp
insb
iret
jbe
cmp
jo
subb
data16
movsb
pop
fists
icebp
call
mul
sub
adc
stos
and
js
sbb
pop
add
ficoml
test
mov
andps
movsb
repnz
xchg
pop
cltd
inc
xlat
or
or
and
gs
push
rclb
mov
inc
mov
fidivs
mov
dec
inc
mov
add
das
fcmovbe
loope
fidivrl
and
out
test
dec
mov
adc
add
xchg
mov
dec
inc
lahf
adc
xor
gs
stc
lods
insb
jns
xchg
in
mov
xchg
loop
lret
ss
rcl
jmp
or
fwait
stc
inc
pop
mov
adc
loop
cmp
mov
fcompl
or
cmp
jmp
fimuls
adc
test
mov
scas
iret
xchg
shrb
aas
iret
sahf
fcompl
adc
push
mov
insb
lods
inc
pushf
push
or
pop
mov
out
inc
addb
fwait
pop
pushl
mov
mov
lods
jecxz
cmp
fnstcw
push
push
out
addr16
mov
lods
iret
lock
aad
fdivs
int
push
frstor
mov
push
push
sub
dec
clc
push
inc
mov
mov
lock
pushf
in
sbb
js
pop
popf
int
sahf
aaa
dec
idivb
mov
lea
mov
sub
pop
es
aam
cmp
in
dec
aaa
jge
pcmpeqw
roll
stos
les
es
ds
pop
fwait
sbb
je
adcb
add
pop
xorb
jge
rcr
mov
gs
jnp
fstl
xchg
mov
pop
sub
jle
flds
rcr
lret
ss
dec
mov
jo
jl
lret
fsubl
movsb
cmp
sbb
shrb
add
into
cmp
mov
orl
fwait
loope
push
add
mov
les
fiaddl
scas
push
adc
lea
jmp
cmpb
ljmp
fadds
and
sarl
loopne
std
sbb
sub
dec
rep
sub
sti
jecxz
sub
jge
ja
into
mov
out
sub
pusha
mov
sbb
dec
shrb
insb
and
adc
lahf
lahf
adc
fbstp
in
in
cmp
mov
dec
pop
sub
test
stos
fsts
data16
pop
shr
push
or
les
in
scas
cs
ljmp
and
cmp
ret
mov
mov
and
ja
dec
testl
adc
pop
movsl
pushf
roll
mov
jmp
sub
jecxz
sti
stc
xchg
push
or
notb
ss
loopne
stc
cmp
mov
adc
mov
fidivl
mov
test
pop
xchg
push
push
sub
rolb
arpl
sub
imul
imul
decl
popa
div
test
xor
aam
dec
jo
insb
aam
pop
mov
push
int
outsl
xchg
iret
mov
fstpl
paddd
xor
adc
scas
inc
adc
mov
lret
xchg
dec
repnz
outsl
push
dec
adc
xor
decb
jne
in
cmp
jns
xchg
aad
in
sbb
insl
movsl
lret
mov
mov
jb
sti
insl
mov
loope
loopne
fnsave
std
out
xchg
mov
push
push
jecxz
dec
jns
cld
pop
sbb
mulb
pushfw
hlt
je
jno
gs
mov
pushl
push
ljmp
dec
cwtl
sti
inc
pop
popf
sbb
and
adc
cs
rolb
out
sbb
push
pusha
rclb
sahf
ret
je
jecxz
jnp
enter
popf
adc
test
std
stos
jmp
xchg
cmp
lret
roll
shl
ds
inc
pop
es
into
je
into
jecxz
test
xorl
out
leave
enter
add
cld
sbbb
jae
or
stos
fs
mov
js
iret
mov
push
xor
test
std
rcrb
femms
mov
rcrb
mov
and
rol
sbb
adc
stc
lahf
out
mov
and
ja
cld
pop
mov
xor
add
mov
mov
stos
pop
orb
je
push
push
stos
xorl
dec
mov
jecxz
jmp
test
mov
dec
into
add
push
std
mov
xor
cmp
repnz
call
xchg
pop
cmpsl
xchg
xor
mov
jns
mov
xchg
xlat
mov
rclb
nopl
dec
push
repnz
jge
imul
mov
in
imul
vpshaw
test
aas
pop
das
imul
sbb
pop
cmp
mov
stc
vpshaw
test
aas
pop
das
imul
sbb
pop
cmp
mov
stc
mov
fidivrs
imul
sbb
pop
cmp
mov
stc
mov
pop
cmp
mov
cmpsb
test
pop
jns
jle
xchg
nop
mov
in
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
lahf
test
xchg
in
cmc
mov
lods
out
test
add
push
xor
and
test
xchg
aad
cmc
mov
lds
cmc
dec
add
mov
add
daa
xor
xchg
std
movsl
in
mov
lds
inc
lods
pop
adc
sub
pop
cmp
pop
jne
test
lret
fwait
in
add
xchg
aas
dec
icebp
mov
jo
mov
sub
sub
rcrl
in
in
inc
inc
push
push
jecxz
mov
in
stos
ljmp
inc
mov
dec
fst
xchg
xchg
add
movsl
lods
sbb
stos
ljmp
push
xchg
lcall
add
les
or
cmp
subb
stos
gs
mov
les
mov
movsl
jbe
stc
stos
inc
jo
jne
scas
push
adc
test
int
and
ret
js
cmp
sahf
adc
lcall
xchg
lds
je
test
xchg
in
loop
xchg
lds
cmc
pop
add
insb
xor
and
ljmp
loope
clc
aad
stos
fsubs
pop
dec
sbb
and
es
addr16
xor
test
xchg
andb
mov
xchg
lock
inc
jge
pusha
and
pusha
es
add
movb
xchg
aad
in
cmc
inc
add
jne
add
gs
xchg
in
cmc
mov
lds
cmc
inc
add
jne
add
gs
fdivrl
add
bound
pop
stos
push
jnp
cmp
fyl2xp1
gs
insl
movsb
cmp
in
js
bound
cmp
popa
das
mov
int
lods
mov
rorb
or
push
loope
xchg
jmp
jg
xor
and
mov
push
arpl
inc
lock
loopne
lea
cmpsl
cs
sub
ss
jnp
mov
sbb
sbb
fs
mov
insb
pop
mov
hlt
cmp
test
or
ret
repz
cmp
test
fcoml
adc
dec
push
jbe
fwait
jns
stc
and
gs
lds
push
mov
cmp
inc
push
lds
sbb
mov
push
inc
sbb
ret
mov
shrb
shll
in
pop
push
inc
push
jns
int
mov
pop
jl
jbe,pn
jae
and
sarl
cmp
cmpsl
shlb
mov
push
pop
scas
testl
mov
push
ret
push
pop
mov
cmp
js
lcall
iret
sbb
sbb
daa
fdivrl
mov
movsb
outsl
mov
lahf
jns
jl
jp
pop
add
cmp
pop
les
adc
fists
sub
test
call
lcall
fwait
dec
sti
xchg
outsl
inc
scas
ret
push
aas
add
or
test
add
fmul
xchg
mov
mov
int
movsb
clc
cmc
aam
mov
mov
push
out
mov
jmp
outsl
js
dec
cmp
cmp
pop
js
add
sahf
ljmp
cmp
mov
lcall
jmp
or
and
cmp
fistps
stc
dec
mov
or
mov
cmpsb
add
push
pop
fildl
lds
or
shll
jae
test
xlat
insl
gs
es
xchg
jg
add
hlt
sub
stos
ds
push
shlb
fisubs
jge
sti
les
sub
stos
test
call
xchg
daa
and
mov
addr16
mov
push
push
xchg
dec
mov
jle
pop
pop
inc
pop
dec
sub
das
test
pop
out
leave
sbb
mov
sarb
insb
and
mov
out
imul
dec
sbb
push
ljmp
push
mov
and
pop
push
fidivl
mov
sub
xchg
hlt
jle
add
sbb
xorl
data16
fldenv
adc
psubsw
xchg
add
loope
loope
jmp
es
movsl
xor
cmpsl
xor
stc
in
inc
cli
bound
test
and
add
xchg
mov
adc
sub
test
pusha
popf
cli
inc
mov
sbb
lret
icebp
mov
ret
aad
in
out
insb
mov
rolb
cmpb
fdiv
movsb
sub
je
add
inc
aam
jb
cmp
dec
ret
hlt
sarb
mov
adc
jae
push
mov
inc
out
sub
and
xchg
pop
cmp
rcrb
inc
and
lahf
bound
popf
pop
mov
adc
add
add
lods
adc
aaa
test
inc
int
or
mov
in
adc
sti
jnp
cwtl
sub
xlat
mov
mov
clc
sbb
cli
dec
sbb
fsubs
fildll
sub
fcomps
pop
sub
lret
xchg
add
jo
test
pop
mov
test
and
mov
xor
push
movsb
divb
and
fdivrp
cmp
jbe
hlt
cmp
das
aam
imul
out
add
lret
lret
stos
rcll
push
cmp
lret
pop
jne
mov
sti
pop
enter
xchg
insl
dec
sti
pop
loop
out
addr16
sbb
inc
lret
or
jo
jmp
mov
inc
pusha
cli
inc
imul
inc
mov
jp
mov
lahf
or
cmc
xor
repnz
cli
les
mov
jne
lret
inc
xorl
outsb
pop
mov
cmpb
cmpl
loop
mov
or
ret
je
cmp
pushf
lods
clc
jb
lret
int
lret
repnz
jns
sbb
shl
mov
cwtl
pop
push
mov
cmp
xor
xchg
xlat
jmp
push
testl
fists
fists
xchg
xchg
xchg
insl
mov
cmp
mov
inc
movsb
int
inc
fidivrs
imul
push
cmpsb
out
jecxz
cmpb
lret
mov
dec
in
dec
les
jmp
inc
inc
andl
ret
adc
pop
push
pushf
ret
and
jg
adc
mov
rcll
inc
cld
insb
lcallw
bound
testb
push
in
nop
xchg
fs
mov
imul
ss
icebp
in
or
xchg
xchg
mov
push
mov
scas
xchg
popa
xor
mov
int3
imulb
mov
cmp
sub
jmp
aas
inc
fwait
jnp
push
dec
adc
pop
ror
das
xchg
pushf
pop
js
sti
cmp
and
stc
mov
mov
pop
movsl
aad
push
je
sbb
mov
lret
mov
add
cwtl
loop
out
aas
xchg
cwtl
push
jle
mov
xorl
push
ffree
test
test
fcmovnb
adcb
xchg
cmp
out
lcall
sbb
mov
adc
nop
ss
and
pop
pop
scas
sub
lea
mov
fnstcw
ljmp
lea
mov
jp
out
dec
adc
push
fstpt
in
pushl
loop
repz
lea
cmpsl
test
lcall
inc
xchg
bound
mov
pop
movhps
jnp
pop
jnp
cmpsl
jge
dec
bound
pusha
clc
daa
push
pop
in
stc
fistps
lock
outsb
jo
out
sahf
pop
lret
jl
push
jns
ret
mov
mov
repz
xor
xchg
push
data16
mov
push
sub
sbb
adc
jns
add
sahf
dec
and
sub
stc
fnsave
xchg
sbb
pop
xchg
fisttpl
dec
sbb
or
loop
ja
inc
jecxz
dec
mov
xchg
out
fs
test
data16
lret
lret
adc
adc
jnp
push
fdivs
lret
jecxz
insb
push
into
push
add
insb
clc
aad
jmp
hlt
cwtl
dec
popf
aaa
dec
add
and
movsb
test
dec
aam
test
and
xchg
inc
leave
ret
hlt
sarl
and
push
aam
mov
sbb
pop
int3
cld
lahf
cwtl
adc
hlt
pop
dec
sub
xchg
adc
nop
les
mov
hlt
push
testl
shr
adc
mov
adcl
push
pop
leave
add
mov
xor
xchg
rcl
push
jb
loopne
pop
jb
ss
aad
sub
cmp
rcrl
jp
sbb
mov
cltd
xor
push
aad
push
push
aad
inc
test
mov
nop
dec
pop
cmpsb
mov
cmp
fiadds
dec
imul
outsb
lcall
into
cmpsb
sbb
std
out
loopne
cmp
mov
lods
sbb
jmp
jl
jo
pop
aad
or
push
push
pop
insl
ret
fwait
ror
jne
mul
arpl
fistps
xchg
cmpsl
mov
mov
bound
in
cmp
sub
scas
int3
sbb
in
push
test
dec
loop
aaa
sti
inc
dec
push
ds
lock
jae
mov
adc
lods
push
or
sbb
test
jbe
inc
inc
mov
rorb
jnp
arpl
imulb
mov
dec
out
hlt
fs
in
adc
arpl
test
ret
xorb
rol
jl,pn
push
scas
adc
sbb
call
fimull
stos
sub
or
adc
push
out
xchg
mov
sbb
test
and
sub
fstpl
adc
add
or
test
divl
lret
mov
loope
pop
mov
scas
ds
push
scas
sub
mov
xlat
sahf
imul
push
popl
pop
pop
nop
jne
in
push
aam
xchg
push
into
jno
shlb
pop
sbb
stos
cmpsl
adc
popa
add
adc
pop
sbb
push
repz
cli
push
mov
out
or
imul
xchg
clc
in
or
popf
scas
xchg
lcall
push
push
pop
ret
push
mov
fnstenv
cwtl
ljmp
imul
jge
movsb
push
lcall
cmp
fidivl
jl
fcomip
xlat
pop
push
mov
out
cmp
inc
ja
adc
sarb
mov
or
mov
call
iret
pop
aam
cmp
inc
cmpl
and
negb
shlb
mov
mov
mov
fnstcw
and
dec
inc
jnp
adc
jne
test
cld
cmpsb
pop
xchg
mov
adc
int
pop
inc
aas
int
jb
jmp
cmp
pusha
mov
ja
outsb
int3
fwait
lock
ret
lahf
adc
ret
setp
lods
jo
hlt
in
add
pop
xor
push
inc
hlt
jge
mov
or
aad
cmpsb
and
mov
add
out
shl
bound
das
test
adc
shl
xor
repz
addl
jge
out
dec
and
pop
xchg
mov
test
pushf
add
mov
cmp
and
pop
sbb
ss
mov
xchg
sbb
mov
in
pop
in
repnz
mov
push
call
push
repz
xchg
mov
movsb
popf
pop
mov
test
negl
shrw
imull
sahf
out
rolb
dec
lea
dec
sub
filds
aam
jge
cmpsb
mov
lods
pop
xor
addr16
test
bound
lea
inc
adc
cmp
mov
scas
push
loop
inc
cmp
xor
cmpsb
pop
daa
js
xor
pop
mov
fisubrs
mov
lret
cmp
mov
pop
jb
in
mov
or
and
lahf
xor
dec
adc
cmc
ret
jns
adc
jbe
cwtl
push
mov
js
and
adc
fidivrs
in
arpl
dec
inc
lods
mov
cmpsb
xor
inc
nop
out
hlt
cmp
add
fidivl
iret
jo
cmp
pop
in
add
jne
cmpsl
sub
xor
pop
iret
fdivrs
in
mov
mov
imul
inc
xchg
fstl
stos
test
or
in
out
shr
in
mov
ljmp
fmulp
and
and
ja
psubsb
arpl
insl
cld
and
or
and
pusha
add
pop
mov
neg
jge
sbb
pop
cmp
xor
fimull
cwtl
jae
cs
mov
mov
mov
mov
and
mov
and
jae
repnz
inc
outsl
test
ret
lahf
aas
loop
into
push
adc
ret
lcall
imul
mov
test
ud2
aas
cmp
aas
lahf
mov
ret
mov
adc
popf
adc
sub
imul
push
pop
mov
out
not
adc
lret
pop
xor
test
shrl
sbb
je
in
sbb
cmp
mov
lcall
ret
shl
lds
or
xor
shlb
stos
vmread
int3
int3
aam
sub
adcl
mov
idivb
aaa
test
sub
push
das
cmp
lret
mov
pusha
ss
dec
adc
inc
cmpsb
out
xor
jle
mulb
pop
lods
mov
les
lock
adc
les
shll
arpl
xor
jb
pop
ret
fsubrs
je
aaa
cld
mov
jmp
sub
mov
hlt
pop
dec
insl
push
jo
fsubrl
testb
add
sub
xchg
xor
mov
daa
jg
inc
mov
or
sbb
cmp
inc
push
inc
jno
mov
pop
rcll
mov
dec
adc
inc
std
daa
add
lds
push
dec
mov
and
inc
loopne
dec
xor
add
mov
aas
pusha
sbb
inc
fcompl
lahf
xor
xor
popf
xor
loopne
adc
movsb
mov
popa
or
push
repnz
pop
pop
stos
dec
jg
out
notl
test
das
ds
jle
les
and
test
adc
add
fcoms
and
shll
jnp
int
inc
shrb
mov
xor
mov
loop
dec
fwait
adc
jo
pusha
and
pop
aaa
insl
inc
xchg
cmp
xlat
insl
jae
jns
cld
push
jecxz
hlt
mov
cmp
xchg
mov
loop
outsb
mov
pusha
mov
cmp
mov
mov
adc
pop
dec
add
dec
sub
or
ja
addl
pop
enter
jbe
icebp
inc
xchg
jmp
push
mov
out
pushf
je
sub
outsb
sbbl
orb
push
sub
xchg
mov
scas
fsubs
sbb
popa
sbb
cmp
test
pop
cmpl
fisttpll
sbb
mov
pop
pusha
jp
ljmp
out
and
popa
xor
ljmp
lds
stos
add
das
add
fcompl
xchg
movsb
fisttpl
xor
out
repnz
jno
xor
repnz
outsl
sti
fisttpll
addr16
repnz
ja
repnz
stc
sahf
repz
cmpsl
mov
mov
int3
mov
movsb
mov
lds
or
adc
xor
mov
cmc
xchg
push
lret
lret
pop
test
jbe
sub
mov
adc
cmpsl
sub
sbb
jge
or
cmp
repz
mov
or
sbb
sbb
push
push
rcrb
push
pop
insw
aas
subb
lds
int3
xchg
mov
lods
lcall
pop
cmc
push
and
mov
lahf
add
pop
xor
js
jnp
lret
lods
push
adc
outsl
xlat
ljmp
fdivrp
sbb
pop
sbb
cmp
mov
add
cmp
and
mov
or
in
lock
pop
aad
inc
sub
mov
sbbl
pop
fwait
or
shll
mov
pop
and
mov
xor
mov
jo
mov
sub
push
cmp
cmp
mov
movsl
push
add
jnp
mov
pop
cld
push
fsubr
rcll
rorl
out
push
or
enter
xor
mov
cmp
icebp
lea
stos
scas
push
ss
test
lock
mov
inc
je
mov
sti
mov
jo
insb
add
sub
sub
xchg
pop
fists
and
pop
mov
shl
les
lcall
stos
into
cmp
lea
cmp
push
fadds
mov
gs
add
cs
push
cmp
mov
lods
pop
pop
stos
pop
shr
sbb
sbb
xchg
and
pusha
subl
loopne
out
pop
mov
add
adc
cmp
mov
scas
xor
sahf
mov
bound
rorl
mov
jb
test
mov
je
cltd
loop
mov
xlat
sbbb
and
push
in
enter
sub
mov
insb
fmul
iret
jb
sahf
je
mov
cltd
push
and
std
dec
add
test
and
cmc
xor
je
mov
shr
ret
and
push
jae
dec
mov
pop
xor
in
jge
bswap
add
dec
inc
dec
jae
insl
scas
lds
inc
xchg
xchg
xchg
loopne
add
sub
or
xchg
js
sub
sarl
loop
pop
sbb
fwait
mov
dec
push
shrl
stos
cmpsl
and
xlat
add
xchg
inc
loope
add
das
xor
shll
cld
jnp
push
push
push
pop
rolb
jecxz
stc
sbb
jns
mov
xorps
jg
test
je
sub
data16
push
lret
lret
into
xlat
sub
fcmovne
fcoms
mov
mov
and
mov
stos
outsb
hlt
cmp
ss
sub
out
loop
cmp
jmp
lock
mov
push
inc
inc
push
adc
inc
mov
movsb
ljmp
inc
sub
inc
insb
or
pop
sahf
pop
cmpsb
mov
and
push
shrl
imul
das
cmp
mov
sub
push
or
mov
dec
cmc
jno
xchg
in
cmp
pop
pop
test
mov
mov
fwait
xchg
jp
sub
pop
push
mov
jge
inc
pushf
mov
cmpsl
mov
add
jle
icebp
and
cmp
mov
popa
mov
mov
fst
mov
xchg
and
pushf
int
dec
push
stc
and
jae
sbb
or
or
stos
jmp
mov
mov
cmp
js
and
or
dec
jno
push
rcll
inc
sub
pop
jo
mov
testb
sahf
fs
das
adc
pcmpgtw
push
inc
das
mov
cmp
pminub
or
int
xchg
mov
cmp
and
xorb
daa
cmp
xchg
sub
jge
jecxz
lods
insl
cmc
fldl
jbe
sub
testb
fsubrl
lds
test
call
dec
add
mov
or
or
pusha
insl
fstl
mov
jb
push
or
into
jecxz
js
fisubrl
inc
cld
push
pop
or
push
mov
es
push
inc
hlt
and
mov
mov
ret
sbb
loopne
cmp
jnp
add
movsl
fwait
shl
dec
hlt
mov
imul
test
dec
cltd
pop
and
pushf
cmp
movsb
or
mov
and
mov
fwait
testl
test
cmp
jg
adc
sub
push
jno
or
inc
push
in
popa
orb
pop
cmpsl
aas
cmp
pop
mov
pusha
test
in
pop
pop
sbb
mov
cmc
xchg
xor
push
divb
mov
mov
xchg
fs
xchg
push
mov
enter
insb
adc
dec
xlat
mov
out
icebp
nop
stc
jl
mov
aaa
pop
dec
pop
push
xor
scas
cmp
push
adc
in
dec
pop
roll
hlt
or
add
jns
jl
aam
outsb
outsl
hlt
sub
incb
jae
pop
test
and
mov
fdivl
push
push
test
push
push
cmc
xchg
jb
lods
push
in
xorl
mov
push
and
sbb
mov
stc
imul
pop
cmp
pop
or
xchg
nop
add
les
sarl
pop
add
out
cmp
mov
mov
dec
or
cmc
in
cmpsl
and
mov
pop
sbb
cmpb
mov
add
jo
pop
mov
fs
sbb
aaa
ret
push
push
and
pop
out
imul
in
dec
out
dec
jno
fistpll
cld
int
bound
jp
mov
nop
and
mov
push
and
xchg
roll
lds
scas
add
or
mov
jge
push
das
mov
inc
push
mov
pop
mov
outsl
xchg
jp
out
and
addl
sbb
into
js
sbb
popf
std
push
xchg
enter
pop
lahf
loopne
adc
outsl
aas
pop
add
outsl
cmp
xchg
dec
mov
ret
cmpsb
xorl
xorb
hlt
mov
mov
insl
mov
mov
in
das
jmp
imul
mov
cwtl
jae
dec
mov
lahf
mov
adc
sahf
aas
cld
add
fs
dec
xor
mov
xor
pop
ds
cli
imul
out
or
ficomps
js
mov
and
jmp
mov
out
xlat
outsl
pop
jb
cltd
scas
lcall
cli
push
and
xor
sub
adc
out
jno
xor
and
sub
leave
in
mov
push
mov
pop
jle
push
sbb
enter
int3
jl
or
mov
insl
int3
xchg
lds
xchg
aad
in
cmc
inc
add
jne
add
gs
xchg
in
cmc
mov
lds
cmc
inc
add
jne
add
gs
adc
test
xchg
push
movsl
in
cmc
inc
test
popa
and
adc
gs
icebp
test
xchg
shll
xchg
aad
in
cmc
mov
and
popf
stos
ficompl
in
sub
cmpl
mov
je
cmp
je
push
lea
push
push
movb
call
call
mov
xor
xor
call
mov
xor
call
mov
mov
lea
push
call
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
pop
pop
test
jne
mov
not
mov
movb
or
mov
leave
ret
stos
ss
fld
jmp
fdivrp
repz
cli
mov
inc
imul
pop
sub
cmp
leave
neg
jmp
mov
xchg
ja
imul
sbb
imul
flds
adc
mov
jmp
addr16
sbb
and
or
pop
imul
cmp
pushf
mov
adc
dec
je
dec
stos
fdivrl
cld
cmc
jb
inc
insb
es
mov
inc
testl
mov
mov
or
mov
enter
repz
xlat
das
fcmovb
mov
daa
les
hlt
fsubrs
mov
sub
stc
addb
dec
icebp
xchg
inc
jb
and
push
pop
test
stos
or
push
fmull
xor
mov
xor
ret
mov
daa
dec
mov
pop
aaa
sbb
bound
mull
jb
sub
dec
sbb
jmp
xor
push
popa
mov
sub
mov
insl
mov
cltd
xchg
cmp
jns
xor
sub
pop
sub
xchg
fwait
sbb
leave
std
ret
shl
push
sbb
sbb
pop
insl
jae
push
pop
out
jg
orb
stos
jmp
in
pop
sub
mov
cmp
push
pop
push
push
jb
push
push
xchg
lahf
les
loop
mov
xchg
ja
inc
imul
pop
sub
cmp
leave
neg
jmp
mov
xchg
ja
inc
imul
pop
sub
cmp
leave
xor
outsl
dec
mov
jmp
mov
mov
stos
outsl
xchg
cli
ljmp
cli
call
sub
insb
test
xor
add
scas
stos
sbb
scas
inc
icebp
sbb
int
xor
xor
adc
loope
mov
pop
mov
dec
pop
ds
inc
aas
cmp
sbb
in
cmc
mov
push
pop
mov
movsb
call
xchg
adc
inc
dec
xchg
insl
push
pop
test
jge
xchg
sub
add
enter
jl
xorl
lahf
outsb
and
cld
adc
cmp
xor
icebp
adc
cmp
cmp
xor
sub
test
xor
mov
sub
lcall
imul
arpl
insb
mov
mov
xchg
in
je
stc
inc
push
add
cmpsl
jl
sbb
ror
cli
dec
inc
mov
imul
test
lods
and
repz
mov
cld
daa
lcall
pop
mov
or
ljmp
cmp
mov
ljmp
xchg
aaa
mov
imul
mov
inc
test
pop
adc
and
cltd
lock
push
leave
adc
out
out
inc
pop
test
addb
aam
lods
sbb
addr16
iret
xchg
std
ret
and
cmp
in
dec
clc
std
jp
outsb
cs
loope
push
xchg
push
xchg
int
fidivl
les
push
mov
divl
movsb
cmp
and
inc
push
inc
adc
rolb
mov
fucomi
and
notl
data16
adc
xor
sbb
and
dec
bnd
sbb
push
mov
pop
xchg
mov
lods
xor
push
pop
or
mov
mov
mov
jne
in
jg
stc
xchg
mov
fcompl
insb
negb
call
or
lds
push
xchg
and
xor
mov
pop
sbb
push
data16
xchg
mov
iret
adc
hlt
icebp
clc
xchg
scas
outsl
push
insl
push
push
repnz
rorb
bound
or
lea
pop
pop
hlt
pop
mov
inc
mov
mov
fldl
sbb
mov
ds
jae
cmp
inc
hlt
mov
xchg
faddl
arpl
stos
pop
xor
add
pop
in
xor
lds
mov
and
jae
rol
or
out
aam
imul
stos
xor
push
add
fsubrs
ret
mov
xchg
icebp
jmp
dec
mov
jg
push
sub
testb
inc
jmp
test
xor
int3
mov
in
int
push
dec
pop
fildl
movsb
mov
xor
cld
xor
cltd
test
fstp
icebp
jge
jmp
gs
in
movsb
in
sub
cmp
sbb
dec
xchg
mov
nop
adc
rol
jnp
jns
inc
inc
iret
jle
push
cmp
aas
adc
and
dec
clc
or
dec
jp
loopne
sub
gs
add
sete
outsl
sub
xor
cmp
test
in
lret
test
shl
pusha
adc
cmp
xchg
mov
pop
or
adc
dec
xchg
push
sub
jb
push
int
adc
and
mov
cmp
mov
and
stos
popa
xlat
push
cmp
or
adc
enter
sbb
test
orl
negl
add
inc
dec
mov
sub
cld
adc
mov
mov
xor
sti
outsl
or
movswl
pushl
fistpl
mov
pop
lods
or
jbe
pop
ret
lods
test
push
jne
in
scas
add
iret
inc
xor
stc
rclb
pop
fldl
aad
mov
sbb
mov
sub
mov
sub
push
xchg
test
jge
sub
lret
xchg
xchg
aaa
outsb
push
ljmp
push
in
pop
push
fcomip
jecxz
adc
add
cwtl
xor
out
bound
jb
stos
inc
or
mov
dec
mov
mov
xor
imull
and
cltd
clc
scas
pop
stos
pop
movb
bnd
push
pop
sub
jl
dec
and
or
fidivrl
dec
pop
jge
arpl
lods
rcll
pop
cmpsb
adc
into
inc
mov
adc
sub
mov
and
jmp
shlb
out
xor
mov
loopne
jp
mov
jnp
jnp
mov
jle
xchg
and
xor
fwait
sbb
and
sbb
cmpsb
fisttps
cwtl
mov
mov
mov
iret
inc
pop
xor
enter
ret
sbb
in
int
inc
inc
and
flds
mov
cmc
out
aas
lds
adc
int
or
add
xor
jp
das
adc
inc
enter
lret
orb
aas
outsb
sub
sub
rcll
mov
movsb
mov
add
lea
lcall
cs
daa
les
lods
and
fldt
mov
lea
mov
ss
movsl
pop
outsl
sbb
movsl
nop
cmp
push
mov
movsl
dec
adc
data16
dec
mov
add
in
enter
dec
ja
test
cmp
inc
leave
and
mov
imul
pushf
hlt
mov
jp
dec
push
test
inc
pop
out
push
adc
mov
sahf
daa
dec
cmpsl
rcr
inc
sbb
cld
or
push
sbb
ret
sub
lahf
and
sub
inc
imul
dec
mov
enter
cs
stos
stos
adc
in
mov
cltd
jb
jp
push
fwait
lds
lcall
mov
pop
mov
popf
mov
xchg
out
or
ja
pop
xor
movsl
lods
dec
inc
pop
cltd
jl
pop
jmp
cmp
cmp
mov
inc
pop
mov
add
ja
pop
iret
sub
pop
or
jge
push
xlat
mov
mov
shll
jb
insl
mov
xchg
loop
lods
cmp
scas
and
cmpsl
mov
mov
jmp
sarb
fwait
cmpsl
push
jno
mov
scas
rorl
in
push
xchg
push
lcall
inc
and
push
or
int3
outsb
jo
cld
imul
and
rcll
pop
leave
inc
pusha
movsl
pop
lcall
addr16
mov
push
outsl
pop
sbb
and
mov
mul
lcall
fildll
pushf
sub
je
cwtl
push
mov
repnz
sub
testb
cmc
jmp
or
fists
out
push
les
sti
jg
fwait
cli
adc
aam
xor
dec
mov
sbb
add
subb
das
sub
adc
xorb
mov
out
lahf
sub
pop
dec
sahf
lret
mov
movb
pusha
adc
out
adc
mov
je
xchg
imul
dec
xlat
add
lock
fsub
int3
je
sub
sahf
sbb
addr16
sbb
jno
aam
lcall
lea
int3
mov
add
ror
and
aas
out
and
pop
pop
insl
push
jle
cmp
das
std
int
stos
and
stos
mov
sbb
pusha
mov
push
cmpsl
loope
sbb
ret
jno
sbb
push
xlat
xchg
jg
in
push
es
add
add
jmp
add
ret
cld
sub
pop
jns
xlat
std
into
js
mov
sti
rcll
mov
dec
xchg
adc
add
andl
lret
add
stos
mov
jb
jns
lods
rcr
ret
aad
leave
test
nop
inc
xor
outsb
ret
cmp
and
pushf
int3
sub
lock
mov
stos
sete
cmpb
sub
push
inc
lds
xor
movsb
sub
xchg
cld
fwait
xchg
xlat
mov
push
cmp
xchg
stos
adc
scas
jp
jns
jnp
dec
sbb
push
push
and
xor
jnp
sbb
sti
sbb
js
mov
or
xorb
xchg
xchg
add
xchg
sub
int
or
jae
es
mov
jns
aaa
lods
es
sbb
adc
push
mov
adc
xor
pop
jmp
or
jno
ret
mov
or
push
pop
mov
pop
sub
mov
mov
ljmp
pop
and
shrd
fildll
pusha
ficomps
dec
cmpl
xor
and
mov
scas
mov
cwtl
mov
and
inc
cli
pop
imul
mov
jg
movsl
or
fwait
xor
jne
jne
call
fcomps
jecxz
sub
inc
lds
jns
sbb
xlat
je
orb
mov
adc
aad
insl
pop
xor
sbb
int3
lds
jge
pop
inc
lods
push
lret
in
cmc
test
cmp
mov
outsb
add
lea
std
enter
push
shrb
xor
pop
sbbb
stos
loopne
or
filds
add
mov
mov
ret
enter
pop
pop
loop
mov
cmp
inc
icebp
add
orb
push
out
cmp
ficoms
jl
or
jp
pop
mov
mov
rcrl
shlb
fs
inc
xchg
out
jle
fs
data16
lahf
in
xlat
out
pop
out
inc
mov
scas
push
inc
add
xchg
cmp
pushf
cmp
mov
imul
test
pop
mov
add
pop
dec
iret
sbb
sahf
sbb
xchg
jg
cmp
insl
stos
mov
dec
xchg
pop
add
outsl
je
std
test
icebp
ds
pop
cmpl
lea
loope
and
leave
into
mov
sub
mov
cmpsb
add
mov
dec
push
mov
push
pop
jb
and
popa
fcompl
pop
or
mov
gs
cwtl
jmp
push
cli
jg
notl
lcall
push
cmpps
xor
sbb
inc
test
dec
xor
cmp
ficompl
int
mov
dec
cmp
jmp
xchg
cmpsl
sbb
lcall
test
pop
std
data16
aam
pop
iret
lock
jns
ds
cltd
jecxz
aaa
lods
out
sti
scas
push
daa
and
dec
lods
stos
jmp
push
push
into
es
dec
mov
int
hlt
pop
mov
dec
adc
mov
movsl
mov
ret
iret
shl
sub
lret
sarl
jb
mov
pop
arpl
dec
insb
jecxz
arpl
sub
and
push
mov
test
sahf
test
insb
adc
inc
mov
mov
ret
ds
adc
pop
test
jge
outsb
lahf
push
pushf
movsl
jne
push
mov
ficoml
ljmp
pop
push
adc
loop
cld
lds
fsubrl
and
adc
and
test
repz
pcmpeqd
push
shl
shrl
test
adcl
xchg
adc
or
andl
or
insl
mov
shrl
inc
or
xchg
cmp
stos
stos
mov
orb
adc
mov
test
pop
dec
pop
pop
add
or
mov
xchg
xor
jl
pushf
mov
xor
cmp
cltd
jmp
xchg
scas
mov
mov
js
shll
xchg
xchg
js
dec
dec
xchg
push
sbb
jp
mov
cwtl
ror
call
shl
push
test
dec
into
jne
dec
jmp
push
fidivl
mov
xchg
test
orl
jg
movsb
divb
or
loope
adc
in
push
lahf
mov
out
pop
sbb
daa
dec
cmc
in
mov
sbb
lods
xchg
enter
jne
xor
enter
sub
jmp
in
mov
mov
dec
sahf
inc
pusha
lcall
and
xor
sbb
and
sbb
xor
xchg
rorl
notb
in
lcall
movsb
jnp
push
push
cmpsl
push
fistpll
loop
shll
xchg
add
movsb
jecxz
pop
ds
jmp
popa
cmpsb
mov
pop
out
sub
mov
jns
add
idivl
jecxz
into
fidivrl
pop
fbstp
rcr
lcall
int3
and
xchg
mov
test
jmp
jecxz
and
adc
jecxz
lahf
sub
mov
pop
mov
pop
aad
push
lock
stos
sahf
jb
je
mov
sub
fcompl
lret
jle
iret
rolb
cmp
gs
inc
jg
sub
jae
pop
pop
je
and
hlt
adc
gs
mov
lods
push
js
in
js
sub
out
lret
pusha
mov
insl
stos
sbb
inc
dec
fsubs
cwtl
and
xor
stos
into
jge
mov
and
ret
orb
imul
xor
push
mov
fisttpl
fsubrl
lret
out
mov
or
stos
je
dec
xchg
and
fwait
mov
lea
jo
loopne
mov
fidivrs
xchg
pop
push
push
cmp
mov
mov
jge
orb
sub
ret
lods
sbb
jp
add
or
push
ds
sbb
adc
out
call
int
mov
mov
test
andl
leave
pop
cmp
lods
mov
or
ljmp
adc
test
and
outsb
jle
movsb
sahf
inc
aam
pop
jo
jb
and
and
mov
cmp
test
cmpsb
fildll
push
dec
sbb
inc
xor
daa
pop
mov
xor
sahf
gs
xchg
inc
addr16
mov
jle
lods
mov
cltd
and
pop
pop
ficompl
sub
dec
dec
sub
test
mov
les
aad
xor
fnstenv
leave
dec
stos
lock
loop
cs
insl
stc
in
or
xchg
mov
xlat
test
mov
xchg
pop
dec
pop
xchg
loope
xchg
cs
dec
mov
cmp
xchg
ret
mov
dec
in
je
adc
adc
pop
jecxz
sbb
fldl
js
dec
jecxz
insb
cld
sbb
push
movsl
enter
dec
jno
imul
mov
fnstcw
into
mov
mov
cmp
imul
push
adc
sbb
and
test
mov
ds
lahf
push
jne
add
scas
xor
inc
sub
push
xchg
sbb
pop
dec
dec
inc
rclb
xchg
dec
data16
cmp
xchg
cltd
insb
xor
orb
ss
push
jno
cmp
xchg
inc
push
cmp
cmp
sub
cmpsb
mov
test
ja
xchg
dec
or
cmp
ja
fisubl
hlt
mov
adc
and
stos
leave
mov
lds
cmp
test
sbb
loope
cs
jno
dec
and
inc
hlt
aam
sbb
jg
push
cmp
mov
sub
imul
scas
and
inc
mov
mov
std
cmp
fsts
xor
jl
jae
or
jecxz
decl
sub
push
and
repnz
das
stc
cs
lods
test
inc
fs
aaa
jg
mov
pop
dec
mov
cmpsl
insl
add
push
sbbl
test
add
mov
loopne
sub
ss
inc
xchg
test
mov
outsl
mov
xlat
sub
mov
xchg
movsl
fwait
mov
or
mov
jl
mov
decl
fisubrs
jae
and
jnp
in
pop
pop
add
xor
popa
out
xor
dec
lcall
vmovapd
sahf
mov
mov
push
cmp
dec
and
call
ss
add
xorb
repnz
xchg
leave
loope
in
mov
mov
add
add
xchg
mov
jo
inc
add
jmp
jo
inc
pop
cltd
outsl
lods
nop
orb
or
enter
iret
imul
mov
adcl
ret
into
jge
subb
push
dec
in
lret
xchg
dec
or
imul
test
loop
and
jns
popa
mov
jo
sbb
mov
mov
pop
test
cmp
jb
push
sbb
mov
push
mov
jae
in
xchg
aas
in
loopne
addb
pop
enter
rolb
jae
mov
sub
sub
mov
pop
test
and
dec
aam
clc
aaa
fidivl
mov
push
xchg
popa
push
jg
xchg
stc
popa
pop
stc
es
bsf
add
pop
lret
lcall
hlt
mov
adc
ja
les
icebp
pop
jns
roll
sbb
jle
cmpsb
aad
push
ljmp
out
inc
repnz
mov
cmp
mov
addr16
add
mov
int
jo
and
and
mov
mov
andb
jg
mov
jb
push
and
sarb
dec
fwait
rorl
push
cld
lds
adc
cmc
adc
jge
nop
jmp
shll
cmp
out
push
stc
movb
jl
and
jl
push
test
inc
cmpsl
je
sbb
fbld
and
mov
lods
mov
aas
or
xchg
xor
gs
aaa
imul
fiadds
dec
adc
mov
shl
adc
inc
jb
ret
in
test
inc
dec
lock
lret
mov
xor
adc
das
pop
xor
insl
outsb
pushf
add
in
add
xorl
mov
push
ja
cmp
adc
and
jbe
test
stc
jg
ljmp
stc
pop
std
outsb
loopne
sahf
push
pop
outsl
fisubrl
loope
test
cmp
dec
mov
add
mov
cwtl
xor
pop
dec
mov
add
test
vmwrite
sarb
in
negl
loope
mov
int3
int3
dec
gs
lods
rolb
push
cmp
and
scas
daa
aas
pop
repz
pop
sbb
pop
cmp
add
xchg
mov
test
dec
into
pushf
rorb
mov
inc
jne
add
fadd
fiadds
jge
push
pop
pusha
mov
xor
test
sub
aaa
or
push
mov
cli
enter
insl
or
cli
sahf
sbb
sbb
cmp
sbb
inc
in
mov
mov
jl
loop
pop
pop
xchg
or
fucomi
inc
mov
js
cwtl
jbe
loop
xchg
test
sub
out
mov
push
into
lahf
out
call
xchg
lret
in
ljmp
les
inc
pop
pop
not
xor
and
inc
out
xchg
add
lret
add
mov
push
fstl
cwtl
iret
mov
ficoml
lock
mov
xor
fmull
fwait
mov
sahf
popf
sbb
pushf
shl
push
xor
pop
out
jl
scas
mov
dec
lods
ljmp
push
iret
sbb
mov
ficoml
out
sub
popa
adc
pushf
cmpsb
xor
dec
push
movsl
xor
pop
adc
lret
jg
popa
loopne
repz
inc
js
mov
cmp
lods
stc
popf
inc
jmp
jo
in
sbb
jmp
add
andb
xor
lods
fs
adc
test
push
jae
pop
jmp
push
mov
dec
insb
leave
in
mov
lods
imul
dec
enter
jb
inc
enter
imul
sbb
imul
and
xlat
movsb
lds
leave
add
sbb
cwtl
and
test
addr16
scas
nop
into
push
lcall
lock
mov
sub
xchg
lods
mov
inc
cmp
mov
mov
or
cmp
dec
cmp
add
and
mov
and
mov
adc
decl
xchg
arpl
mov
jbe
int3
lea
dec
cmp
dec
jo
jl
mov
mov
nop
mov
scas
adc
jmp
pop
and
mov
mov
mov
add
aas
jmp
adc
inc
decb
push
cmp
mov
pop
jnp
je
imulb
add
fbstp
inc
mov
aaa
rcll
jno
ficoms
fidivs
dec
andl
pushf
shl
dec
add
jmp
or
test
hlt
pop
jmp
xor
int3
xorl
sahf
das
int3
ja
jmp
pop
dec
push
mov
mov
jge
mov
sbb
xchg
mov
les
in
out
cmovb
add
lret
adc
mov
arpl
jl
pop
mov
push
dec
add
jb
arpl
in
sarl
mov
fildll
xorl
push
shl
test
add
sub
loope
bound
loop
adc
mov
jns
sahf
xor
xlat
push
stc
cmpsl
mov
mov
inc
imul
pop
sub
cmp
leave
neg
jmp
mov
xchg
ja
inc
imul
pop
sub
cmp
leave
hlt
xchg
xlat
xchg
xlat
stc
cmpsb
mov
mov
dec
imul
add
daa
cmp
leave
fcmovnu
dec
jmp
cmpsl
cltd
xchg
pop
mov
in
imul
clc
call
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
call
jmp
lea
push
pushl
call
lea
push
pushl
call
jmp
call
push
mov
call
xor
leave
ret
lret
pand
jmp
sti
rolb
fiadds
imul
or
sbb
sub
cmp
lret
lock
jmp
sti
rorb
mov
pusha
pop
jo
inc
or
lock
cmp
lret
jmp
sti
mov
pop
sbb
js
gs
push
add
movsb
mov
pop
fwait
jns
push
inc
inc
mov
sub
sbb
sbb
in
jnp
inc
lods
addr16
jbe
mov
sbb
mov
inc
incb
mov
jne
adc
dec
xor
push
and
aad
mov
dec
cmc
xor
stos
and
add
sarb
mov
sarl
and
out
pop
mov
sub
scas
add
nop
nop
pop
stos
sarb
jnp
repnz
xchg
lods
lret
adc
pushl
jecxz
lods
rcrb
or
pop
inc
push
stos
xor
xchg
inc
ds
aaa
arpl
push
sub
push
adc
sar
mov
mov
js
dec
jnp
or
sbb
sub
cmp
mov
mov
sahf
shl
ror
into
cld
cli
in
or
pop
sbb
add
jb
outsl
adc
enter
mov
ret
notl
or
sub
add
dec
dec
pop
jl
mov
mov
mov
fcompl
orb
pusha
imul
or
sbb
sub
cmp
lret
lock
jmp
sti
rorb
mov
pusha
imul
or
sbb
sub
cmp
lret
lock
push
icebp
push
lea
ficomps
shl
mov
fnstcw
rcrb
leave
je
out
lods
cmc
pop
das
jmp
push
test
push
negb
sbb
xchg
fildll
or
adc
add
jmp
jmp
leave
popf
mov
rcll
mov
test
inc
lock
les
sahf
jp
jmp
cmp
push
int3
outsb
cmpsl
cld
fdiv
dec
mov
pop
mov
and
jmp
xchg
aas
lea
ret
add
imul
inc
ljmp
inc
popf
and
mov
pop
dec
sub
dec
lret
pop
sub
or
or
in
lret
xor
mov
cmp
int
push
lock
in
rdmsr
jle
shl
inc
orl
fs
and
or
lret
cmp
stos
aam
fwait
sub
sub
sub
outsb
insb
daa
lea
shll
inc
xchg
cltd
cli
and
mov
mull
out
int
inc
adc
mov
push
imull
pusha
jnp
push
dec
sub
push
flds
sbbl
fnstcw
or
in
sbb
fs
sub
das
pushf
stos
mov
push
xor
fcmovbe
dec
repnz
or
incl
pop
cmpl
cmp
rorb
xchg
inc
stc
push
and
and
mov
and
js
stos
test
mov
cmpsb
jo
mov
ret
add
lea
loope
in
push
push
or
fnsave
lods
dec
into
push
inc
and
xchg
xor
push
jmp
cwtl
pop
and
push
nop
xor
jae
cmp
xor
cmp
fs
scas
push
testb
jecxz
jno
fs
out
xchg
push
int
mov
sbb
or
jg
jp
pop
cmp
imul
scas
dec
add
lods
into
sub
cli
sub
mov
cmpsl
mov
movb
imul
pop
loop
in
mov
lahf
pop
cwtl
dec
inc
jo
inc
pop
jmp
jbe
jne
loopne
or
scas
icebp
pop
mov
cmp
sbb
push
jno
sahf
stc
xchg
push
bound
jnp
bt
and
call
lds
outsl
insb
add
sub
loop
mov
call
ret
shl
and
rep
sub
adc
aam
mov
pinsrw
xchg
sbb
add
pop
bndldx
cs
stc
cmp
lock
or
push
push
lds
loop
sti
sbb
dec
mov
mov
push
repnz
sub
test
cmpsb
cmc
xchg
mov
imul
loop
inc
lret
or
cmp
aam
push
fst
cld
test
mov
push
inc
sbb
or
mov
mov
daa
into
and
push
das
xchg
pop
push
dec
imul
sub
cmp
and
push
bswap
scas
int3
jns
inc
cwtl
divb
mov
push
mov
sub
mov
xchg
mov
pop
in
inc
push
outsb
rcl
jmp
enter
mov
addr16
xlat
das
fsubrl
mov
or
jne
xor
xchg
xor
mov
add
push
cmp
out
idivb
icebp
mov
loopne
insb
xchg
lods
fldln2
mov
mov
xor
xchg
dec
mov
push
mov
cs
jbe
and
in
mov
mov
nop
in
shrb
inc
push
pop
out
dec
push
mov
inc
subl
outsb
mov
adc
jb
inc
iret
sub
xchg
xchg
cmp
iret
cmc
jp
pop
stos
insb
mov
mov
dec
cmp
int3
push
leave
sub
or
clc
and
lea
mov
push
pop
stc
and
add
sub
outsb
mov
jno
lahf
fisttpll
add
psrlw
fwait
mov
add
inc
xor
add
loop
xchg
jns
push
sbb
xor
push
jns
or
or
push
lahf
sti
xchg
test
mov
cli
imul
and
loop
mov
loop
mov
push
hlt
jle
sub
popa
xchg
push
push
pop
or
cs
push
fstpl
jbe
xchg
push
fldenv
bound
inc
icebp
push
push
add
xlat
ja
in
mov
mov
sub
cmp
cmp
arpl
fwait
pusha
aaa
pop
push
adc
cmp
ss
test
in
mov
xchg
cs
mov
fildl
dec
sub
rcrl
nop
push
scas
cltd
inc
cmpsb
out
jbe
out
cmp
sti
sub
jae
xchg
in
or
xchg
push
ljmp
in
stc
adc
fstpt
orb
sub
data16
imulb
add
shll
fwait
outsl
adc
xor
mov
jle
test
cmp
mov
test
int3
inc
sbb
out
xor
pusha
jg,pt
mov
sar
xor
sarl
sub
inc
inc
in
inc
xchg
pop
or
movsb
xchg
adcb
mov
outsl
fwait
cmpsb
or
call
fdivl
insb
scas
mov
aad
push
or
jb
inc
mov
jmp
mov
mov
pop
jne
fistpl
movsbl
jae
push
mov
or
sahf
xor
aam
repnz
cltd
jp
push
lret
adc
add
mov
push
shlb
jl
leave
lods
push
push
add
cmp
ja
js
stos
push
and
jne
invd
outsb
jl
dec
test
nop
roll
gs
popa
cmp
xlat
sahf
insl
jle
lahf
and
es
ss
mov
ljmp
xlat
xchg
clc
lahf
test
cmp
ret
arpl
aam
mov
aas
jmp
add
popa
lret
xchg
loopne
push
imul
test
and
call
fiadds
cltd
cmp
add
or
jmp
push
mov
data16
push
mov
pushf
packssdw
sub
call
add
cmp
mov
sbb
dec
xor
into
mov
ret
jp
test
je
rclb
mov
jne
xor
inc
xchg
js
inc
mov
pop
movl
sbb
outsb
inc
xchg
out
push
pop
push
movsl
cmp
insl
ficoml
pop
push
sbb
jns
adc
lret
inc
dec
jnp
sti
add
sarl
jge
mov
adc
popf
jb
daa
hlt
and
movsb
aam
jecxz
pop
pop
pop
push
out
addr16
fimull
test
or
push
loopne
dec
rol
orl
shlb
mov
lods
ficompl
icebp
pop
jle
sti
mov
ss
mov
rorl
and
rcrb
dec
xor
repz
fucom
frstor
mov
adcb
fwait
add
sbb
loopne
pop
cmc
pusha
dec
fidivrl
or
adc
lds
test
jae
xchg
pop
gs
xchg
rolb
insl
adc
xor
cmp
jle
jl
or
xor
js
das
push
cmc
out
jmp
inc
or
cld
push
and
mov
push
push
jp
push
mov
or
cmc
and
xor
jge
pop
cmp
sbb
scas
scas
inc
jnp
add
fmull
mov
sarb
mov
movl
cmp
mov
sbb
arpl
mov
xchg
call
pop
xor
call
inc
add
int
incl
mov
mov
shll
or
cmpsl
cmpsl
ja
jge
or
mov
cmp
adc
lcall
mov
add
in
fidivrs
dec
push
sub
mov
outsb
pop
xchg
adc
ja
leave
mov
xor
negl
adc
mov
fnstsw
pusha
fwait
ret
sbb
sbb
push
add
pop
int
pop
aaa
movsl
sbb
in
daa
das
stos
lret
jb
test
mov
push
aaa
cmp
repz
ret
mov
out
mov
mov
xlat
int
xchg
fcompl
inc
lcall
inc
je
jmp
pop
adc
adc
pushf
clc
mov
jg
out
pop
sbb
and
daa
pushf
mov
xlat
into
scas
out
inc
dec
into
inc
fnstcw
jae
push
lds
mov
jne
add
adc
jge
or
subl
icebp
mov
adc
mov
push
sbb
sub
xor
add
mov
ja
jo
lcall
addr16
std
cltd
mov
ds
dec
fistl
cmp
push
sbb
push
dec
jae
insb
loopne
dec
shll
shll
jno,pt
lret
in
test
push
jno
insl
xchg
pop
inc
pop
sti
inc
scas
repnz
in
sbb
xor
add
mov
cld
inc
out
sbb
xor
lds
and
add
cmp
push
inc
jbe
mov
stos
ja
bnd
cmp
hlt
mov
in
shrb
dec
and
nop
cli
xchg
mov
cwtl
xchg
push
outsl
pop
lods
pop
cmp
jno
aam
call
mov
jb
jb
es
pop
out
adc
jle
notl
dec
scas
jnp
mov
test
cmp
test
and
and
pop
xor
pushf
out
lret
fisubs
in
jmp
xor
flds
sbb
xor
fwait
dec
lods
mov
testb
push
mov
xchg
fistpll
lret
fcomip
mov
dec
sub
leave
rep
insb
push
inc
jmp
test
ficoml
shll
lret
insl
outsb
in
shll
mov
sub
scas
xchg
je
cmp
sbb
xchg
into
mov
out
mov
cmp
mov
ret
and
int3
or
dec
icebp
leave
popa
cmp
dec
cmp
jp
cmpsb
sbb
dec
inc
sub
push
inc
xchg
mov
pop
inc
mov
dec
sbb
add
cmp
xor
mov
lds
into
rcrb
sbb
lret
mov
cmp
xchg
add
gs
in
mov
jmp
cli
sbb
mov
das
or
xor
movsl
push
inc
shr
js
imul
jns
inc
xchg
xchg
push
sbb
add
lea
outsb
test
dec
pop
out
lods
in
cmc
sbb
jnp
cmp
sbb
cmp
cmpsl
adc
int
cli
sub
xor
in
xor
out
lods
fistpll
arpl
jmp
loope
lahf
sub
lods
repz
out
mov
mov
pop
test
neg
movsl
aaa
test
into
mov
sbb
and
in
mov
fisttpl
sbb
sbb
adc
xor
incb
sar
inc
push
sbb
mov
mov
inc
dec
or
or
out
adc
enter
lds
insb
shll
call
jg
dec
lods
jp
rclb
daa
xlat
mov
add
mov
push
daa
lods
mov
cmp
repnz
jecxz
je
sub
xchg
inc
stos
mov
rcll
xchg
cmpsb
repz
popa
inc
faddl
xor
sub
jle
fstl
arpl
inc
scas
mov
je
or
mov
xor
das
mov
xor
mov
sub
pushl
in
inc
shrb
fstpt
push
sbb
loopne
dec
fidivrs
in
add
or
or
cld
and
adc
flds
orb
jne
inc
sahf
sbb
std
int
fisttpl
pop
inc
out
nop
cwtl
ja
pop
lret
jl
addr16
dec
lock
lds
or
fstpl
mov
nop
mov
outsl
or
inc
push
push
cli
inc
push
dec
lret
push
fimull
rolb
xchg
pop
scas
pop
mov
das
pop
or
sub
test
call
add
mov
dec
mov
push
mov
sub
adc
test
mov
inc
imul
mov
add
mov
dec
xchg
aam
push
call
mov
cmp
js
neg
mov
jmp
popf
sbb
nopl
push
sbb
rcr
xchg
loopne
cmpxchg
mov
fcoms
lock
xor
pusha
les
lret
divb
pop
cld
mov
das
push
xchg
rcrb
jg
mov
mov
mov
mov
push
repnz
iret
inc
adc
loopne
xchg
pop
jp
aas
and
mov
xor
xor
adc
pop
dec
pop
and
or
lahf
or
daa
add
shll
aas
test
jmp
adc
insl
mov
cwtl
push
xchg
xchg
mov
push
dec
pop
cs
orb
outsl
leave
push
dec
fnstsw
pop
pop
mov
mov
adc
jp
and
pop
data16
lock
arpl
add
push
push
pop
jp
jns
nop
pop
in
jnp
jp
daa
xchg
insb
fcomi
dec
outsb
mov
out
outsl
subb
adc
cmpsb
pop
add
aam
clc
xor
in
mov
fists
pop
add
sarb
mov
iret
stos
jb
insb
loopne
pop
bound
call
scas
jecxz
ret
jmp
aad
or
push
lret
in
js
mov
pop
nop
xchg
sub
ret
loop
push
sbb
mov
or
jne
imul
stc
mov
mov
aad
daa
subb
sar
pop
loopne
cwtl
aas
sbb
mov
sub
push
je
jge
or
mov
push
add
xchg
mov
fisubrl
add
ss
or
shl
sub
sarb
lods
fs
jae
dec
daa
dec
add
push
dec
shlb
and
and
sub
jbe,pt
hlt
outsl
jl
inc
mov
cmp
cmpsl
push
shrl
jp
hlt
push
insb
test
push
jne
rcll
xchg
push
mov
inc
lcall
and
popa
dec
xor
mov
xchg
es
hlt
lret
mov
jo
jns
les
inc
inc
sub
stos
dec
push
cmp
sub
mov
ret
fs
rorb
dec
popa
lods
cmp
icebp
and
bnd
pusha
jp
ret
sub
cld
mov
lock
jmp
mov
pop
aaa
xchg
nop
or
sarl
push
dec
pop
cltd
push
pop
lcall
xchg
mov
mov
aam
and
push
call
lret
dec
rcrl
mov
cwtl
sahf
loop
loop
mov
adc
lods
in
mov
sub
cmp
shrb
dec
in
sbb
pop
ds
pop
fimuls
adc
test
ss
in
movsb
adc
xlat
jae
adc
add
test
in
icebp
adc
aaa
fisubl
mov
fnsave
cs
or
sub
das
pop
pop
insb
aam
movsb
fs
push
lcall
jg
clc
cltd
insl
pop
mov
arpl
call
push
jmp
data16
shrl
test
or
mov
fiaddl
adc
dec
inc
into
push
addr16
insl
inc
cmpsl
jmp
jo
inc
or
xlat
out
jl
rorb
aas
push
dec
lret
push
or
addr16
sahf
add
iret
icebp
or
loop
pop
ret
adc
lcall
stos
add
mov
std
ljmp
mov
dec
adc
sti
xor
inc
outsl
xchg
mov
xchg
push
push
movsl
inc
adc
stos
inc
pop
xchg
out
lods
jle
cmp
cmp
cmpsb
mov
sbb
push
xchg
ret
fs
push
incl
dec
sub
in
inc
jns
jle
shll
mov
repz
dec
jle
arpl
call
xchg
push
push
adc
aam
imul
popa
push
or
or
and
repnz
fdiv
sub
daa
into
ljmp
push
pop
xchg
push
push
sbb
sub
aad
xor
mov
fnsave
pop
lods
arpl
adc
pusha
jp
adc
in
jl
pop
fwait
sbb
sub
mov
cwtl
cmp
fildll
push
loopne
jo
les
aas
inc
xrelease
stc
xchg
mov
repnz
mov
jle
es
mov
fidivrl
and
lahf
repnz
push
in
adc
pop
dec
push
sub
shrb
xor
push
aam
fidivrl
add
and
mov
sbb
inc
outsb
xchg
xor
cmp
push
mov
ss
add
mov
xor
cltd
dec
mov
cmp
inc
xorl
push
hlt
mov
insl
ss
pop
xchg
sub
and
in
shlb
sbb
adc
imul
dec
pop
int
clc
cld
adc
jnp
adc
add
fbld
pop
jmp
mov
sub
jb
xchg
loop
rolb
scas
inc
adcb
jl
push
cli
jmp
pop
imul
sahf
nop
mov
jno
fdivrs
push
movzbl
inc
dec
and
adc
or
fcomi
mov
lock
mov
mov
pushf
iret
and
sub
or
mov
movsb
mov
push
fmul
test
mov
ljmp
push
jb
sahf
adc
lcall
into
xor
cmpsl
cmp
sbb
mov
pop
popf
test
cmp
push
negl
aam
push
icebp
ret
jecxz
bound
push
in
mov
dec
mov
mov
sbb
ljmp
rcl
mov
adc
sahf
test
int
cmpsb
sub
scas
das
pop
ds
out
pop
mov
mov
pop
mov
orb
lea
fistpl
mov
sbb
push
cmp
pop
scas
pop
in
sub
push
push
mov
pop
jl
pop
bound
dec
and
sti
pop
jnp
pusha
icebp
cmpsb
shl
dec
xchg
daa
mov
sub
mov
jl
inc
or
and
incb
mov
cmp
sbb
or
incb
stos
in
cmp
cmp
lea
dec
in
push
mov
push
fucomi
loop
jp
dec
cmpsb
push
cmpsl
push
aam
pop
mov
in
fs
outsb
xchg
int
aaa
cld
leave
ss
cmp
lds
cmc
mov
fiaddl
dec
loopne
out
inc
lds
push
lea
cmp
cmp
xlat
add
xchg
incb
sbb
subl
adc
stc
out
sbb
shlb
test
repz
lds
ja
pop
lcall
mov
clc
fcompl
cmp
cmp
cmp
stc
xchg
xchg
cmp
ljmp
mov
dec
and
mov
in
inc
arpl
mov
inc
or
push
imul
push
add
jbe
mov
test
mov
jb
jno
sahf
mov
jmp
mov
nop
into
fwait
push
ret
pop
popa
shrl
xor
or
adc
pop
sbb
out
add
mov
jb
bound
outsl
inc
int3
sub
sub
es
and
scas
sbb
iret
and
incl
xchg
xchg
mov
or
xlat
data16
mov
inc
or
insl
mov
sbb
ret
mov
icebp
faddl
scas
insb
cmp
ret
add
sub
addr16
test
dec
daa
ja
dec
punpckhwd
mov
lret
nop
stos
int3
shll
insl
jo
test
dec
rcrl
lods
mov
loopne
xor
std
repz
jnp
js
fnstcw
sbbl
mov
in
adc
call
lock
mov
ljmp
sub
lret
xorl
jmp
jno
popw
mov
mov
jnp
faddl
aam
movsl
jb
inc
and
cmpsb
and
out
loope
jae
test
js
sub
mov
cmp
add
mov
xor
repnz
arpl
ljmp
sbb
test
pop
mov
fnstsw
cs
mov
add
push
push
addl
int3
cmp
nop
scas
fwait
out
push
ja
enter
cmpsl
fidivrl
ss
pushf
pop
cmp
cmp
int
push
lods
popa
outsl
inc
jmp
adc
xchg
pop
sub
nop
sub
popf
out
nop
lods
fistl
call
leave
mov
mov
or
in
push
and
iret
dec
pop
mov
mov
adcl
cmp
mov
aam
push
pop
fcomip
dec
fwait
dec
pop
add
ds
fimuls
push
pusha
xor
das
aam
sub
test
ljmp
pop
dec
lds
add
xlat
cmp
push
pushf
xchg
mov
add
int3
cmp
lock
rclb
jns
incb
add
push
add
test
cltd
dec
das
lods
mov
xchg
test
xlat
mov
xchg
sarl
dec
add
push
dec
pop
outsb
inc
addr16
jl
loopne
sbb
sarb
loopne
aas
sti
rorb
mov
pusha
imul
or
sbb
sub
cmp
lret
lock
jmp
sti
rorb
mov
pusha
imul
or
sbb
sub
cmp
lret
lock
jmp
sti
rorb
mov
pusha
imul
or
sbb
sub
cmp
lret
lock
jmp
sti
rorb
mov
lret
jnp
jl
xchg
out
call
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
repnz
shll
or
jne
mov
xchg
push
mov
movsl
xor
and
in
cmc
xchg
add
shll
addl
xor
and
adc
add
dec
sbb
or
cmp
rorl
subl
fsubl
pop
mov
inc
xchg
pop
lcall
test
mov
mov
lcall
int3
mov
cmp
add
lahf
push
sub
gs
xor
or
xchg
imul
mov
mov
adc
movsb
jle
push
xlat
push
into
loopne
cltd
push
mov
daa
test
inc
iret
inc
dec
and
insb
fxam
cmp
ljmp
mov
lock
popa
imul
mov
push
adc
add
push
sub
icebp
ficompl
test
and
insl
or
push
pop
add
je
and
jmp
cli
jl
rcr
aas
mov
outsb
fs
inc
in
gs
fcomps
dec
mov
out
rep
adc
xor
xchg
gs
insb
mov
sti
lea
mov
sub
and
add
cwtl
add
mov
xor
or
xchg
xor
and
inc
mov
fs
mov
push
mov
sbb
inc
push
icebp
xor
push
sarb
dec
mov
aad
addb
add
xchg
jo
jbe
push
xchg
xorl
movsl
inc
mov
lds
aad
in
cmc
icebp
add
shll
xorl
movsl
inc
mov
lds
aad
in
cmc
icebp
add
add
jle
int
sbb
adc
call
mov
push
fsubp
das
sbb
test
sti
add
aam
cld
push
imul
and
shl
orl
push
enter
adc
adcb
arpl
adc
adcb
push
jl
fbstp
pop
pushf
call
xor
es
lds
xor
sbbl
adc
fldl
cs
xor
ret
sub
fstp
push
ja
ds
and
ja
jle
scas
stos
lret
int
in
decl
stc
das
mov
dec
sbb
inc
push
mov
arpl
adc
pop
iret
pusha
mov
pop
inc
and
jae
lds
loopne
inc
enter
dec
loope
pop
sbb
rolb
insb
dec
iret
aas
testb
icebp
cmpl
lahf
push
xor
dec
call
in
lea
data16
lahf
fsubrl
ds
cmp
xchg
add
pop
push
cli
sub
lcall
aas
mov
test
lods
inc
int3
or
dec
sub
push
andl
cld
and
lahf
mov
popa
mov
insl
in
add
push
or
or
fbld
out
ja
test
xchg
in
xchg
sub
add
les
xor
xlat
cmp
add
fisttpl
sub
cmp
mov
and
aaa
mov
xchg
in
in
cmp
mov
sbb
xor
in
mov
in
icebp
cmpsb
into
fisttpl
push
xor
shrb
mov
les
and
repnz
mov
inc
sub
mov
fcompl
mov
cltd
fwait
shll
mov
cld
jo
mov
jl
jmp
sahf
or
pop
push
sbb
mov
dec
jl
call
test
loop
movsl
mov
pop
push
movsb
in
xor
and
movsl
ljmp
xor
test
insb
rorl
xchg
fwait
adc
std
add
mov
mov
movb
mov
or
cwtl
cwtl
xchg
mov
and
xlat
mov
mov
cli
cmp
mov
adc
xchg
add
std
or
xchg
cmpsl
or
aam
pop
dec
sub
inc
or
dec
jno
das
dec
cmp
outsl
push
ss
push
cltd
mov
push
scas
dec
shll
jne
je
mov
cs
adc
jo
das
ss
out
adc
lcall
pushl
movsl
push
and
adc
jge
dec
inc
push
invd
add
adc
pushf
adc
sub
insb
mov
jecxz
rcrb
test
and
or
fidivs
xor
jbe
ljmp
jb
repnz
imul
jge
loopne
dec
sbb
pop
mov
adc
pop
cld
sub
mov
cmp
imul
adc
jae
rol
mov
dec
fs
mov
xchg
adc
dec
aaa
pop
add
or
mov
xor
add
fcos
ret
mov
sub
notl
jl
adc
stos
xchg
aam
inc
ss
sbb
pop
xor
pop
stc
dec
mov
jne
push
je
je
pop
imul
out
adc
pusha
mov
adc
xlat
dec
xchg
hlt
push
mov
mov
stos
arpl
dec
add
outsl
int3
adc
sub
push
pusha
push
scas
pop
pop
sbb
ss
mov
loop
aam
aaa
cmp
lods
clc
push
and
std
insb
insl
add
ja
es
in
inc
mov
pop
lds
pushf
aaa
ljmp
es
inc
mov
mov
mov
jmp
xchg
add
je
test
out
mov
dec
cmpsl
nop
sub
sti
xchg
pusha
inc
loop
and
rclb
xchg
enter
iret
popf
jle
mov
sbbl
cmp
push
repnz
sbb
push
push
mov
notl
and
jmp
insl
and
push
pop
incl
shll
test
insb
lods
scas
clc
jb
xchg
xor
ljmp
or
iret
mov
lods
lods
sahf
enter
jmp
inc
adc
lock
jmp
bndldx
fdivrl
jmp
aaa
push
lcall
dec
pop
loop
arpl
aad
insb
std
jo
and
fs
popa
and
xchg
mov
push
aas
aad
jno
lahf
cmp
adc
push
sbb
scas
adc
and
or
cmp
ror
clc
frstor
testl
js
pusha
xlat
inc
scas
lahf
dec
rdpmc
int3
push
popa
pop
imul
and
jnp
xchg
jmp
cld
adc
cmpl
aad
jb
in
fildl
jno
dec
repnz
push
mov
xchg
nop
mov
jnp
rorl
add
pop
inc
cli
ret
or
outsl
jmp
xor
paddsb
xchg
adcb
insb
ret
fwait
sub
and
fxch
repz
into
std
ljmp
dec
adc
pop
pop
aam
and
cmp
dec
xor
pop
insb
test
scas
outsb
mov
test
test
sbb
popfw
daa
jecxz
xchg
add
aam
lds
imul
jl
sub
mov
cwtl
push
xchg
movsl
loopne
pop
pop
arpl
pop
test
push
into
push
pop
arpl
cld
leave
cmpsl
into
mov
xchg
inc
dec
ds
pop
mov
pop
lcall
je
jbe
inc
add
shr
pop
out
add
inc
jp
test
test
inc
enter
mov
out
pop
stos
cld
test
adc
fcomps
jge
and
mov
inc
js
fistps
push
iret
loopne
cmp
scas
dec
adcl
icebp
loop
pop
stos
xchg
mov
or
mov
stc
in
pop
lret
sbb
cmp
insl
and
mov
jae
push
int
pop
push
cmp
addr16
fdivrp
int
gs
out
cwtl
or
adc
ret
dec
push
lcallw
xor
adc
mov
scas
sar
xlat
push
cld
pop
jnp
daa
enter
out
pop
aaa
aad
pop
pop
lds
pop
inc
movsb
mov
jl
inc
pop
mov
pop
or
and
mov
stos
sbb
mov
cmp
ror
scas
xor
ljmp
xchg
mov
or
add
stos
out
sub
negb
dec
push
or
es
test
lret
xor
out
sbb
inc
sahf
ret
xchg
push
add
fistpll
sbb
ljmp
sub
hlt
jecxz
jp
cmp
mov
xor
bswap
mov
lret
add
mov
shrl
and
ret
pop
iret
mov
or
ret
cs
leave
loope
cmp
lret
push
js
xchg
out
sub
ds
mov
in
add
xchg
xor
inc
enter
nop
and
pusha
iret
aaa
mov
xor
pop
sub
push
jg
aaa
test
push
and
ss
aam
add
mov
cwtl
xchg
popa
pop
pop
lcall
out
push
pop
decl
lods
mov
mov
js
pop
dec
sbb
sub
dec
and
jp
mov
aaa
pop
mov
add
scas
insl
sahf
popa
jecxz
jb
cmp
sbb
sub
sub
cmpsl
rorb
fisttpl
mov
pop
sub
ljmp
adc
fimuls
cli
shrb
dec
aad
aam
inc
mov
cmp
and
jo
into
test
outsb
mov
mov
cmp
lods
aad
mov
cmpsl
daa
in
sub
int
jb
std
lods
jecxz
arpl
xchg
cmc
js
cmp
aas
cmpb
add
scas
pushf
cs
dec
add
push
out
faddp
lock
and
push
hlt
inc
jmp
sarl
loope
fsubrl
or
mov
push
imul
xchg
or
xchg
cli
mov
cmpsl
dec
and
fisubrs
popa
xchg
xchg
push
push
push
lock
scas
push
jo
mov
mov
or
push
mov
sti
xor
mov
fdivl
mov
jns
icebp
sahf
pop
mov
cld
and
jo
mov
xchg
mov
cltd
and
nop
push
iret
scas
mov
mov
imul
fcom
out
mov
clc
pop
inc
or
jno
pop
movsl
push
les
jno
adc
pop
sub
xchg
xchg
mov
sub
lret
loopne
repz
jne
out
cmpsb
add
push
jns
cmp
adc
push
cmp
dec
pop
adc
lret
xor
imull
sbb
push
jge
or
inc
push
into
outsb
and
push
sbb
cmp
stos
insl
in
sbb
jecxz
dec
cmp
cli
sub
popa
mov
adc
cwtl
or
push
and
outsl
pop
sbb
adc
or
push
out
inc
jmp
mov
fxch
jecxz
jp
addr16
fcoml
cmp
icebp
les
cmp
js
in
rolb
sbbl
jno
imul
pop
lods
cmpsl
or
es
and
subb
clc
and
fs
pop
jnp
adc
pop
xchg
mov
mov
and
in
fcmovu
repnz
push
sbb
stc
jno
aam
adc
gs
cmp
jae
jmp
sub
pop
sub
out
movsl
test
in
sbb
fmulp
xorb
fisttpl
fsts
sbb
popa
pop
scas
add
jecxz
lods
xchg
dec
aaa
dec
or
dec
sub
pop
cmp
loopne
and
ss
ja
mov
stc
je
daa
jbe
cmp
jno
stos
and
pop
adc
rcrl
in
adc
cld
lmsw
mov
push
lds
jb
cmp
rcrb
xchg
shrb
xchg
and
xor
push
decb
stc
test
pop
imul
hlt
mov
pop
or
shr
mov
sub
dec
xor
cmc
xchg
sub
in
jo
test
gs
je
mov
push
mov
inc
scas
js
mov
mov
insl
or
sarb
pushf
mov
fmull
aaa
lods
mov
jmp
lcall
movsb
pop
int3
imul
mov
jo
xchg
inc
xchg
add
imul
inc
mov
mov
rorb
stc
xchg
jmp
inc
mov
in
out
sarl
and
mov
xlat
sbb
loopne
iret
imul
daa
lcall
jmp
xor
jnp
lret
ljmp
cltd
and
shlb
add
ror
out
xchg
push
jo
jbe
dec
push
fisubrl
push
jo
cwtl
inc
lret
outsb
enter
outsl
bnd
add
popa
scas
or
aam
xchg
bound
mov
dec
inc
lret
jg
stos
sub
adc
decl
mov
scas
js
shlb
stc
pop
xchg
aad
xor
fwait
pop
cwtl
lock
dec
into
push
repz
out
filds
xor
or
sub
mov
imull
lcall
loope
mov
fimuls
rcrl
rep
push
mov
repz
leave
mov
enter
jecxz
jmp
sub
add
outsl
mov
and
inc
cwtl
sub
int3
and
pusha
dec
mov
iret
pop
stos
cmc
xchg
fwait
push
sbb
aaa
aam
mov
mov
inc
inc
leave
dec
push
loop
adc
add
xor
cli
loop
enter
shll
call
dec
loopne
dec
icebp
movsb
movsb
sahf
inc
dec
and
mov
jbe
cmp
push
or
sub
mov
mov
fwait
insl
pop
imul
fcoms
and
sahf
cmpsl
add
sub
adc
fiadds
sbb
fidivrl
movsb
dec
and
adc
sbb
jne
pcmpeqw
lret
insl
sarl
sbb
jmp
frstor
pop
mov
jecxz
mov
cmp
pushf
cld
add
cli
mov
movsb
cli
add
push
sub
in
cli
shl
jno
fs
inc
enter
loopne
scas
sbb
cmp
mov
bound
shlb
xchg
es
cs
movsb
lret
ss
inc
testb
jge
popf
cmpb
in
pop
sub
adcl
repnz
inc
pop
test
pusha
loop
rol
xchg
jecxz
loope
lock
pusha
in
shll
or
inc
into
ror
outsl
add
jnp
lds
orl
or
xchg
mov
out
mov
cmp
jne
mov
mov
stc
insb
sarb
mov
dec
jbe
adc
or
in
in
data16
jmp
lea
fcomi
loope
clc
imul
mov
push
fwait
in
fs
ret
push
lcall
cmp
mov
outsl
adc
and
or
jno
fistl
cmp
lcall
adc
inc
fdivrs
mov
and
test
test
movsl
insl
and
imul
stos
or
in
or
mov
add
mov
addr16
fs
cmpsb
sahf
inc
cltd
sahf
roll
repz
gs
lcall
ficompl
inc
xor
inc
add
mov
in
dec
in
cmp
ds
jnp
cld
sbb
aam
icebp
pop
adc
outsb
leave
loop
jbe
popa
cmp
mov
out
xchg
ds
sub
jmp
dec
into
popf
nop
addb
pop
scas
xor
movsb
roll
repz
cmp
sbb
jns
fiadds
lcall
mov
fiadds
out
mov
inc
ds
inc
mov
pushf
xchg
xchg
push
inc
out
lods
inc
adc
push
pop
mov
xchg
mov
pop
pop
xor
outsb
cmp
int
stc
pushf
push
xor
dec
rcll
xor
and
xchg
jp
lret
aas
add
dec
xchg
sbb
stos
push
xor
push
sbb
loope
je
call
movl
xchg
or
sub
cmpsl
mov
pop
inc
scas
sbb
jo
ret
jle
mov
jmp
cmp
fldenv
pusha
mov
mov
out
dec
dec
mov
mov
iret
mov
sub
jg
pop
inc
in
int
pop
in
cmp
test
fildl
dec
jne
mov
clc
rcl
push
insl
jnp
sbb
adcb
jp
js
ljmp
aam
cs
loopne
push
cmp
out
lahf
mov
das
test
sbb
pop
cld
push
push
test
jmp
push
rorl
xor
loope
sbb
mov
out
adcl
jne
xchg
sub
mov
clc
xchg
dec
add
xor
mov
push
or
ffreep
cltd
mov
mov
xchg
cmp
lea
in
pop
ss
cli
rcrb
xor
sbb
js
ret
out
mov
mov
pop
jmp
pop
in
mov
addr16
pop
cltd
stos
jle,pn
clc
adc
or
andb
int
or
xlat
add
mov
stos
jge
mov
cltd
jo
test
lret
mov
push
inc
fnstsw
and
repz
movsl
xor
pop
pop
les
lret
pop
inc
lcall
xor
adc
sti
inc
out
mov
aaa
xchg
inc
aam
test
jne
sahf
mov
jmp
mov
rdtsc
push
push
lret
mov
push
jmp
movsb
in
push
ja
push
dec
lods
jecxz
lcall
pop
dec
push
shlb
cmpsl
dec
mov
sbb
xor
scas
movsl
inc
ja
cmp
push
loop
inc
and
das
mov
loope
dec
xor
imul
lods
hlt
xchg
shlb
int3
shrb
cld
jae
mov
xor
cmpl
xchg
scas
mov
lods
dec
push
nop
add
lahf
stos
in
jne
mov
mov
bnd
xor
cmp
leave
popa
inc
jle
xchg
dec
lret
fldl
dec
sahf
inc
shrb
xchg
ret
movsb
bound
xor
cmpsl
sbb
mov
in
insb
dec
inc
leave
sbb
lods
ror
mov
jo
pop
adc
enter
outsl
cli
nop
call
pushf
adc
mov
out
xor
es
dec
cmp
addr16
pop
fildl
cmp
and
xchg
push
in
cmp
add
and
popf
sub
jo
or
ds
fdivrs
fstpt
mov
or
pop
inc
icebp
lcall
outsb
andl
push
movsl
fwait
or
addb
mov
xor
xor
mov
pop
insl
inc
fmull
push
dec
call
sbb
ret
xchg
insb
adc
adc
lea
and
shrl
mov
inc
gs
leave
std
add
fwait
cs
je
int
ret
into
fldl
sub
sbb
dec
test
sub
push
and
xorb
push
loope
mov
add
xchg
cmpsl
test
sarb
lods
xchg
adc
mov
cmp
lods
out
lret
sub
inc
adc
cmp
ljmp
xchg
mov
js
jmp
push
rcl
add
or
mov
xchg
push
xor
roll
pop
mov
jmp
push
icebp
lock
stos
jno
outsl
imul
push
or
sub
inc
hlt
fildll
dec
ljmp
push
push
dec
adc
sahf
mov
jge
xchg
mov
test
shl
and
mov
popf
mov
negb
mov
inc
add
push
adc
divl
add
cld
mov
js
xor
clc
sub
dec
stc
jno
test
sbb
cwtl
cmp
je
sub
inc
addr16
test
lock
push
inc
adc
clc
mov
jb
xchg
mov
sbb
je
cs
xor
add
inc
dec
and
mov
shrb
mov
sahf
gs
sbb
outsl
hlt
sub
rcrb
xchg
dec
jae
insl
fmull
addr16
test
xor
daa
mov
ret
repz
pop
das
inc
icebp
pop
loop
leave
rcrb
jo
ds
cmc
popl
sbb
push
push
lea
setne
cltd
push
dec
sub
jge
rolb
pop
rol
mov
in
or
scas
jmp
sbb
mov
cmpsb
dec
mov
mov
les
lock
mov
es
xchg
jl
cld
adc
lods
scas
xor
iret
mov
mov
mov
mov
call
mov
push
rolb
mov
sarb
and
mov
mov
in
sbb
ja
mov
dec
fsubs
mov
push
shll
or
fnstsw
fsubl
mov
dec
out
mov
lea
fadds
out
xor
inc
push
inc
out
clc
jae
fistpll
sub
adc
repz
jmp
loope
ret
fs
jl
cmpsl
mov
test
nop
xor
xchg
mov
jl
dec
iret
mov
ror
mov
in
xor
xor
or
loop
sbb
sbb
inc
adc
mov
mov
mov
sahf
push
push
jp
outsb
insb
sti
in
mov
enter
push
push
aad
cltd
mov
fsubrs
inc
sahf
ljmp
outsb
pop
inc
or
push
fs
pop
lods
pop
aaa
inc
aad
sbb
es
cmp
sbb
mov
fistpl
lods
sbb
lcall
scas
add
jl
insb
push
in
loopne
pushf
bound
mov
insb
enter
scas
test
push
aaa
lea
sub
mov
lret
mov
cmpsb
ja
xor
mov
mov
inc
aaa
jbe
mov
inc
test
loopne
das
addb
lods
xor
mov
push
adc
push
call
mov
fstpl
lcall
xchg
leave
and
push
shrl
repz
cli
xor
int3
mov
jb
pop
bound
sbb
pop
nop
add
xchg
mov
mov
jecxz
cmp
js
in
cltd
in
push
repz
mov
psubsw
push
bound
pop
pop
in
pop
jbe
int
outsb
push
add
fs
push
sbb
add
call
pusha
stos
scas
and
cwtl
xorb
jne
mov
pop
push
sbb
cltd
push
std
xor
jb
push
cmp
je
mov
mov
sub
fwait
outsb
or
push
mov
xor
loop
jae
push
std
inc
hlt
push
mov
cmp
or
mov
jbe
add
inc
rorb
pushf
sub
mov
dec
aad
jb
cmp
fld
fnstenv
sbb
imulb
inc
loop
mov
int3
pusha
and
outsb
mov
add
icebp
mov
ds
cmp
lret
xchg
and
mov
jne
test
push
movsl
inc
mov
lds
aad
in
cmc
icebp
add
shll
xorl
movsl
inc
mov
lds
aad
in
cmc
icebp
add
shll
gs
jne
test
mov
lds
aad
loope
icebp
in
mov
xor
xchg
add
sti
movsl
inc
ret
test
mov
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
hlt
add
mov
add
mov
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
cmc
add
sbb
add
adc
add
or
add
add
add
cld
hlt
add
hlt
hlt
add
in
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
cmc
add
push
cmc
add
pop
cmc
add
jo
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
testb
xor
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
add
mov
add
xchg
testb
pushf
testb
movsb
testb
lods
testb
mov
add
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
add
call
testb
or
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
testl
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
clc
add
jl
add
je
add
insb
clc
add
fs
add
pop
clc
add
push
clc
add
dec
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
add
mov
add
mov
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
stc
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
add
in
stc
add
hlt
stc
add
cld
stc
add
add
add
or
add
adc
add
daa
cli
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
cli
add
dec
cli
add
pop
cli
add
insb
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
