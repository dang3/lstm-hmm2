add
add
je
add
add
inc
add
je
je
outsl
add
dec
add
add
je
add
inc
add
je
je
outsl
add
inc
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
dec
add
insb
add
add
je
add
dec
add
popa
add
je
imul
push
add
je
insb
add
push
add
js
je
add
inc
add
je
je
outsl
add
push
add
js
je
add
add
inc
add
popa
add
push
add
js
je
add
add
inc
add
je
je
outsl
add
push
add
popa
add
add
add
add
inc
add
je
je
outsl
add
inc
add
arpl
add
add
add
imul
add
je
push
add
js
je
add
dec
add
insb
add
add
je
add
inc
add
jo
push
add
jb
imul
add
popa
add
add
add
add
outsb
add
arpl
je
imul
inc
add
jb
add
jb
add
add
inc
add
je
imul
inc
add
jb
add
jb
add
add
push
add
je
insb
add
push
add
js
je
add
push
add
outsb
add
add
push
add
js
je
add
add
dec
add
outsb
add
push
add
js
je
add
add
push
add
outsb
add
add
inc
add
popa
add
add
add
imul
outsl
add
add
add
dec
add
outsb
add
add
add
dec
add
popa
add
je
imul
push
add
je
insb
add
add
inc
add
je
imul
push
add
add
and
in
pop
lods
push
mov
fsubrl
xchg
mov
push
add
add
add
add
add
push
add
jno
ja
push
add
add
ja
stos
add
add
add
jno
stos
add
add
jno
flds
bound
adc
add
add
outsb
add
push
add
add
sbb
add
cmp
fadds
jno
jne
add
bound
adc
jno
or
add
aaa
add
cmp
stos
add
add
add
add
jno
xchg
add
add
add
jne
jno
adc
stos
add
add
push
add
add
sub
stos
add
add
and
add
sub
jno
adc
stos
add
add
flds
push
add
add
aas
add
add
add
push
add
jno
push
add
add
add
add
stos
add
add
cmp
add
sbb
jno
add
fwait
add
add
push
add
add
jo
adc
lahf
add
jno
fadds
pop
add
add
jno
imul
add
add
add
add
add
add
or
add
enter
sbb
add
add
jno
stos
add
add
add
add
sbb
pop
add
jbe
clc
add
add
jno
outsb
add
add
add
sbb
stos
add
add
add
and
push
add
add
add
add
add
add
jno
stos
add
add
add
add
add
jno
add
add
add
pop
add
add
add
sbb
push
add
add
add
add
jns
test
jo
fildl
pop
add
add
or
add
add
add
add
add
add
add
sbb
and
add
add
add
add
enter
jno
inc
add
enter
jno
js
into
add
add
add
jno
mov
add
add
repnz
add
add
out
cs
add
add
or
rolb
mov
jno
jge
add
outsb
add
hlt
add
jno
and
add
add
add
add
hlt
add
add
push
add
add
add
add
add
aas
add
add
add
add
push
add
jmp
add
jp
repnz
add
add
fwait
add
add
mov
add
jmp
add
add
add
add
add
jg
inc
add
and
jmp
add
lcall
add
add
add
add
add
add
add
add
add
add
add
dec
add
jno
cmp
fwait
add
fwait
add
outsb
add
imul
jno
jno
add
add
jno
add
cmp
xchg
enter
jno
jbe
push
add
jno
jno
fadds
mov
mov
add
fadds
cmp
add
enter
jno
fadds
mov
stos
add
add
imul
das
add
add
test
jno
jmp
add
sahf
add
add
add
lcall
add
add
push
add
add
add
add
add
or
add
add
xor
push
add
adc
push
xchg
lret
jbe
adc
cmp
pop
push
jae
addl
aaa
mov
and
xlat
and
xlat
sbb
xor
or
ds
in
shlb
xorb
test
inc
jmp
xchg
mov
mov
inc
dec
pop
xor
pop
incb
mov
jnp
adc
mov
repnz
in
stos
or
test
sbb
in
lcall
fdivs
lcall
jb
loope
inc
shll
andb
jecxz
pop
mov
roll
inc
add
sti
imul
lods
or
mov
push
jne
fs
in
aam
adc
xor
xlat
jmp
and
add
testl
pop
xor
or
mov
shlb
xor
adc
push
sub
shrl
leave
jg
mov
lea
stos
fcmovu
xchg
nop
pop
out
lret
andl
nop
mov
xor
xchg
arpl
add
ror
ss
xor
jo
cmpsb
and
pop
jmp
std
cmpsl
mov
pop
out
push
mov
pop
out
and
icebp
push
dec
daa
mov
icebp
pop
je
push
xor
jno
mov
mov
lock
imul
cmp
hlt
push
shlb
push
mov
push
or
clc
cmpb
adc
dec
in
icebp
aam
add
loop
push
jne
mov
jno
addr16
and
test
xchg
mov
jecxz
sub
sbb
add
xchg
or
mov
pop
mov
or
icebp
inc
jne
fdivrs
in
add
ljmp
shrl
mov
arpl
sub
add
imul
inc
mov
adc
mov
sub
mov
jno
dec
dec
je
push
lret
push
push
insb
lods
inc
adc
mov
inc
insb
loope
or
push
inc
jmp
iret
ret
sub
pop
add
cmp
imul
sti
adc
or
adc
jno
and
setb
repz
aam
iret
pop
add
push
addr16
add
addb
aad
push
int3
cwtl
in
or
stos
fwait
lea
clc
lcall
pusha
stos
dec
adc
mov
call
sub
cmp
movsb
in
xor
mov
in
cmc
sub
shr
xor
repnz
adc
add
rcrb
add
sbb
adc
out
add
add
add
add
add
loop
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
incl
call
mov
jmp
movzbl
sub
je
incl
call
call
mov
jmp
push
call
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
pushl
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
pop
ret
pop
orl
test
dec
icebp
faddl
int3
adc
and
xor
lods
jno
orl
rorl
loope
icebp
faddl
int3
jno
and
xor
lods
jno
orl
rorl
loope
icebp
fsubrl
ret
add
ds
jno
orl
push
or
mov
xlat
cmc
push
lahf
push
sbb
mov
fidivl
imul
adc
inc
mov
aaa
out
mov
jmp
imul
fld
xorl
add
ret
cld
cmpsb
out
add
xchg
cmp
add
clc
sbb
mov
rcrb
outsb
inc
push
fdivrl
fmulp
popa
bound
in
mov
popa
cmp
and
dec
cmpsl
rolb
cmp
std
xor
fisubs
adc
lods
pop
sahf
mov
outsb
cmp
mov
mov
pop
ret
xchg
cmpsl
adc
test
xchg
mov
orl
rorl
loope
icebp
faddl
int3
adc
and
xor
lods
sbb
out
and
fdivs
inc
rcrl
insl
mov
lahf
dec
xorb
in
clc
arpl
xor
ds
sub
or
pop
mov
cmp
sub
mov
inc
test
cmp
add
and
leave
insl
aam
rorl
loope
icebp
faddl
int3
adc
and
xor
lods
jno
orl
rorl
loope
icebp
faddl
int3
adc
and
xor
lods
jno
sub
test
repnz
cmp
cmp
mov
xor
ret
add
and
call
fcmovnb
or
inc
addr16
es
xchg
jns
cmp
push
lret
mov
lods
lret
popf
in
pop
lret
mov
dec
insb
aad
sahf
test
mov
cmpsl
cmp
lock
dec
out
adc
lods
mov
in
out
jp
push
mov
cli
dec
jno
cmp
in
sbb
inc
sbb
insb
test
xor
sub
dec
popa
adc
dec
aad
add
subl
xchg
jno
icebp
adc
cwtl
loopne
add
mov
repnz
les
jnp
scas
pusha
jo
sar
movsl
imull
dec
movsb
jle
mov
sub
pop
sbb
bound
jmp
frstor
inc
imul
mov
lcall
and
sti
test
data16
lods
mov
cld
dec
lret
aas
or
pop
xor
dec
fildl
cwtl
cmp
test
or
ss
lret
jno
inc
push
in
and
xchg
xor
ret
mov
pop
mov
inc
idivb
in
mov
adc
sub
sbb
sub
pop
shll
mov
inc
mov
inc
std
call
insb
mov
js
jb
pop
stos
stos
js
push
cmp
bound
xchg
int
push
inc
out
mov
outsl
stos
inc
xchg
lods
and
adc
jns
mov
mov
cmp
jb
stos
mov
cli
int
imul
and
shlb
cmc
out
push
push
dec
mov
jns
sbb
cld
push
inc
scas
lcall
movsb
aaa
push
test
mov
mov
std
cmc
mov
mov
xchg
jmp
leave
xchg
mov
mov
mov
inc
daa
test
sti
push
mov
and
outsl
enter
pop
int
add
aaa
add
mov
clc
pop
jnp
ljmp
call
dec
fisubrl
nop
jbe
dec
in
in
push
clc
jmp
ds
js
mov
aas
and
insl
mov
dec
nop
add
push
mov
lcall
and
inc
cwtl
xor
xor
adc
xchg
in
lock
call
xchg
push
aad
cmp
pop
test
lret
cs
mov
cmp
xlat
ja
out
das
inc
push
inc
cmc
jp
inc
mov
sub
int3
mov
in
sbb
adc
sbb
or
mov
lret
out
pop
js
into
popa
cmp
lret
and
lods
aam
das
stos
mov
lcall
andl
pop
mov
jo
and
jg
pop
jnp
or
add
push
mov
lea
push
xchg
shrb
jmp
fnstcw
test
sbb
mov
daa
xchg
je
xor
push
sbb
cmp
pop
adcb
scas
pusha
ror
pop
in
cmp
jb
int3
inc
out
cmp
cmp
into
push
xchg
iret
addr16
mov
imul
xchg
mov
dec
js,pt
xchg
fidivrs
or
mov
fdivrs
fcomps
daa
dec
in
mov
clc
jmp
stos
scas
pop
mov
mov
les
arpl
hlt
xor
stos
fsubrs
jb
mov
sub
xchg
loope
mov
sbbl
mov
popf
std
out
ss
and
mov
mov
adc
shrb
mov
mov
fmuls
je
bound
xchg
shr
push
loop
dec
mov
mov
xor
lcall
mov
sbb
jnp
sub
mov
xchg
mov
fnstsw
xor
fcoms
pop
lret
jae
adcb
test
insl
addr16
ja
hlt
dec
sti
ds
cs
xchg
imul
in
fwait
jl
cmpsl
xor
add
jae
sub
lcall
into
sub
lods
mov
xor
ret
cld
dec
push
dec
in
std
and
mov
mov
insl
jl
fsubs
je
xchg
push
lea
les
adc
stos
cld
and
incb
and
in
cwtl
push
lahf
cwtl
xor
ja
fs
fmul
lcall
xor
jmp
ficoms
xchg
cmp
and
call
cmc
sbb
mov
xor
out
fbstp
icebp
adc
mov
inc
ret
aaa
xchg
outsl
mov
mov
add
adc
and
popa
and
add
clc
cmc
jno
xchg
testb
fisubrl
jle
imul
mov
mov
xchg
xor
mov
adcl
stc
xchg
inc
vcmpps
repz
scas
xor
icebp
cmp
jecxz
add
xor
mov
and
sbb
stc
loop
pop
or
inc
add
mov
xchg
add
pop
rol
sub
inc
sbb
or
sub
dec
jge
pusha
mov
adc
mov
cmpsb
dec
mov
inc
mov
rolb
test
fsts
mov
dec
sub
mov
in
cmpb
sti
jg
jp
fisubrl
sbb
fstp
cs
mov
mov
jb
dec
cmc
rolb
xchg
and
sub
andb
xor
insl
test
mov
xor
and
mov
mov
test
mov
out
ds
fs
rorl
mov
xchg
imul
lock
xor
rorl
cld
push
cmp
inc
testb
inc
mov
sub
sbbl
fdivrs
xchg
pop
xchg
shll
hlt
adc
pop
push
xor
sbb
push
xor
leave
sbb
insl
dec
out
rolb
xchg
mov
jl
xor
filds
and
daa
push
scas
stc
push
pop
adc
cmp
or
lock
push
cmp
cs
dec
add
mov
insl
pop
push
xchg
ljmp
or
pop
outsb
mov
fdivrl
add
in
in
pushf
mov
xchg
cmpsl
punpckhbw
loope
sbb
in
hlt
inc
iret
aas
ljmp
jp
adc
inc
in
lahf
and
fs
and
bound
dec
fnstcw
mov
shll
mov
pop
outsb
cmp
cmp
jg
push
jno
sarb
add
in
mov
sbbb
xor
out
mov
loope
mov
or
adc
mov
rcll
pop
mov
jns
push
bound
and
loope
sti
xchg
dec
xchg
icebp
jl
arpl
loop
pop
xchg
xchg
popa
push
daa
jnp
xchg
jnp
mov
sbb
pop
insb
addr16
push
xor
jmp
sub
loop
or
test
rorb
or
addr16
repz
ret
dec
sarl
sbb
push
push
ljmp
addr16
cmp
loope
mov
and
inc
mov
sbb
mov
or
sbb
push
fcompp
lcall
inc
add
test
nop
test
cmc
cmpsl
aaa
lds
arpl
dec
mov
mov
mov
in
xor
add
ja
nop
jae
daa
inc
stos
iret
pushf
pop
cld
sub
in
inc
leave
roll
xor
dec
enter
bound
ret
packuswb
lret
mov
sub
mov
inc
xchg
jae
mov
call
add
xor
out
inc
cmp
rcrb
aas
jbe
iret
adc
out
sub
jle
jne
xor
xor
std
or
inc
mov
push
jne
loop
mov
mov
xchg
sbb
divl
push
xor
xchg
scas
js
xor
enter
imul
jmp
mov
inc
lock
inc
shr
loopne
test
cmp
arpl
push
sub
into
popa
add
jl
ficoml
push
dec
test
int3
and
adc
pop
dec
rol
push
iret
loop
push
test
xor
mov
mov
pusha
cmp
jge
ds
stos
xchg
repz
lock
mov
pop
insb
push
out
jp
lcall
inc
jle
sub
xchg
leave
nop
shl
cmc
lahf
das
push
orb
mov
loop
lcall
dec
pop
mov
adc
popf
gs
lret
pusha
mov
xor
cmp
mov
fisttps
xchg
stos
scas
fsubrl
cmp
cld
or
subb
pop
jmp
mov
push
scas
divb
jne
add
inc
sbb
xchg
shlb
jbe
lret
ds
sbb
hlt
out
mov
addr16
jnp
gs
lahf
icebp
dec
dec
xchg
rcr
sbb
xchg
mov
push
push
in
lret
insl
pop
jo
loop
test
cmp
int
push
lock
xor
mov
or
add
xchg
into
into
mov
ja
sub
push
cli
mov
mov
stc
push
daa
arpl
jno
cmp
xchg
or
adc
adc
out
cs
dec
mov
sahf
mov
lahf
je
lods
dec
into
fwait
leave
or
xor
out
ss
xor
cmpsb
cmp
lds
fwait
rcll
push
cmpsb
test
iretw
test
loop
js
out
pusha
out
sbb
fisubs
push
lahf
int3
fists
mov
mov
shll
dec
dec
clc
nop
cs
ja
push
out
mov
shlb
mov
and
jl
xchg
adc
mov
aad
scas
xor
pop
dec
adc
hlt
es
inc
imul
mov
xchg
jne
sub
out
andps
pop
cltd
icebp
in
sti
leave
test
pop
rorb
xchg
ja
mov
or
shr
lea
test
cmc
add
imul
outsb
jl
out
mul
testb
ds
stos
das
xlat
push
push
daa
sbb
scas
js
test
cmp
xor
and
aas
pop
sbb
xchg
arpl
cli
movsb
mov
mov
mov
out
daa
jge
add
push
xor
dec
or
mov
sbb
sub
jge
sub
add
xchg
sbb
and
je
xor
inc
cmc
mov
mov
data16
movsb
test
data16
jp
sbb
pop
cld
xchg
imul
add
and
pop
jbe
add
in
les
clc
outsb
lret
jno
xchg
mov
and
xor
jmp
stos
cltd
push
adc
cli
cmp
fldt
adc
inc
pop
push
test
mov
jecxz
lahf
iret
mov
mov
add
sub
pop
jecxz
dec
xchg
adc
lahf
inc
adc
jns
psubb
adc
push
test
dec
lock
sarl
scas
xchg
test
mov
int
mov
add
hlt
js
xchg
jbe
jmp
push
arpl
mov
lret
jnp
mov
sub
xchg
jmp
jg
dec
js
xor
mov
push
loopne
test
rol
mov
mov
mov
setne
iret
inc
jg
stc
nop
das
jg
and
out
sub
lods
jmp
sub
iret
loope
mov
cli
imul
movsl
ss
mov
jns
sbb
imul
push
push
lods
jg
pushf
add
movsb
movsb
movsb
in
icebp
jne
bound
or
or
jecxz
icebp
outsb
pop
and
movsl
xchg
xor
xchg
mov
or
addl
dec
sbb
test
add
adc
xor
xor
leave
icebp
push
push
into
icebp
pop
push
scas
jmp
jl
ss
mov
pop
jg
pop
adc
pushf
pop
jg
adc
push
lods
mov
push
or
js
jmp
dec
mov
cld
mov
das
mov
fsubrl
push
popa
std
jo
loope
mov
adc
xchg
adc
adc
in
xor
fisttps
pushf
dec
jmp
ja
mov
test
add
pop
push
into
mov
push
sub
mov
dec
or
or
out
xchg
pop
mov
decb
loopew
sub
int3
mov
in
les
fld
cmpsb
cmpl
adc
int3
add
sub
sbb
sbb
cmp
popf
ja
icebp
shlb
xor
ffree
aas
lret
sti
iret
loop
jmp
xchg
jne
idiv
jo
lds
push
lahf
cld
lahf
xchg
int
in
in
fdiv
je
push
inc
stc
cmpsb
sub
xor
popf
dec
jmp
les
cmpsl
xchg
mov
mov
push
adc
insb
push
fldcw
mov
in
mov
cmp
xchg
pop
add
out
shll
push
pop
add
jae
gs
pop
xor
mov
inc
cmpsb
adc
sbb
pop
push
daa
xor
test
nop
mov
inc
movsb
into
sbb
inc
sub
cmp
xor
and
shrb
jp
scas
add
cmp
fidivrs
in
mov
imul
push
jne
and
push
in
int3
push
pop
and
mov
sub
orl
sbb
dec
or
xchg
and
mov
test
sbb
cld
nop
cmp
out
adc
sahf
cmpsl
in
mov
or
pop
mov
cmp
jne
xchg
shrl
outsb
in
dec
inc
test
mov
sbb
adc
xor
aas
and
inc
or
push
in
add
cmp
inc
cmp
pushl
lock
lods
mov
das
xchg
dec
sbb
enter
cmpsb
lret
lods
mov
jecxz
inc
inc
adc
pop
sub
mov
dec
lcall
inc
sbb
ret
xchg
sub
sahf
ret
iret
jnp
rorb
jb
xchg
popa
mov
das
or
adc
jns
ds
out
fstpl
rcll
icebp
xchg
test
xchg
jno
xchg
cmp
inc
push
out
rcl
pushl
or
es
js
lds
xchg
inc
push
adc
mov
outsb
fwait
test
icebp
sarl
dec
ja
add
jno
clc
inc
xlat
addr16
xchg
in
cld
or
mov
fsubs
pop
popa
test
mov
fldenv
bnd
fwait
cmp
out
pop
int
jnp,pt
shl
ljmp
outsl
xchg
and
jl
mov
ss
dec
iret
loope
dec
mov
jne
inc
aam
sbb
mov
xor
iret
jecxz
mov
pusha
inc
or
mov
mov
push
and
nop
testb
xor
adc
pop
cwtl
dec
or
pop
hlt
mov
nop
and
jp
inc
ja
movd
imul
dec
pop
mov
sbb
imul
push
xchg
add
xchg
mov
test
xchg
mov
dec
pop
push
add
outsb
and
push
clc
aad
scas
add
stc
push
add
jg
jb
je
setae
lea
mov
and
pop
adc
shlb
icebp
sbb
xor
mov
out
add
adc
leave
mov
addl
inc
outsb
popl
sbb
xor
nop
scas
xchg
xchg
out
rcll
inc
fcomps
out
inc
jne
jno
sbb
xlat
ss
cmp
lahf
mov
push
lcall
aaa
cmp
dec
xor
push
add
xchg
ljmp
enter
loop
loope
das
sub
add
pusha
sbb
xchg
std
mov
bound
jp
pusha
call
jecxz
mov
daa
fstl
inc
xor
dec
jbe
cmp
arpl
lret
leave
loopne
repz
repz
hlt
jle
mov
jmp
out
shlb
lods
in
sbbl
inc
lret
and
or
xchg
imul
scas
das
jl
cmp
mov
dec
push
mov
in
shr
lea
nop
or
push
test
mov
jb
jns
push
in
or
lods
or
jnp
shrb
icebp
or
dec
out
pusha
sets
outsw
call
fiadds
push
data16
loopne
add
movsl
and
mov
xor
rcrl
push
or
jle
test
les
and
mov
sarl
stos
adc
add
mov
mov
pop
lret
or
insb
test
mov
fs
mov
jo
pop
aad
arpl
sbb
inc
and
imul
pop
or
inc
rcll
inc
fldcw
cs
lcall
inc
pop
or
jae
inc
xchg
imul
and
ret
lds
sub
in
sub
mov
mov
cmp
jbe,pt
push
sarb
popf
adc
xlat
or
test
mov
mov
mov
inc
or
gs
lcall
mov
mov
daa
sub
or
fbld
test
and
jg
add
rclb
in
imul
clc
and
mov
fsubl
push
add
xchg
xor
add
scas
mov
jo
jp
add
leave
iret
cmpsb
aad
xor
add
jae
repz
out
lods
adc
inc
push
rcrb
inc
mov
je
xchg
pop
clc
adc
sahf
shll
sbb
cmp
lret
jge
jmp
xchg
mov
lcall
dec
ret
lcall
xchg
fldt
fcmovnb
mov
jp
jne
ds
test
out
pop
icebp
rorl
fwait
mov
cmc
int3
mov
leave
xchg
imul
mov
mov
jp
imul
push
pop
sub
ficomps
xor
psubq
xor
clc
in
push
mov
std
sbb
push
fdivrp
pop
xor
add
dec
add
jb
pop
sbb
xlat
dec
outsb
xorl
xor
sti
pop
or
adc
movsl
adc
mov
outsb
into
jmp
sbb
mov
pop
cmp
pop
pop
xchg
repz
mov
int3
aaa
inc
aam
sbb
stos
cmc
xlat
and
mov
aam
jp
mov
fnop
sbb
leave
add
add
xchg
movsb
es
xchg
movsl
sub
sbb
mov
dec
push
pop
or
insl
cltd
call
pop
xor
mov
push
sbb
sarl
test
and
test
popa
sub
mov
shll
pop
in
cwtl
lcall
cmp
dec
cmp
movb
lahf
sti
ja
xlat
aaa
push
inc
rcrb
pop
sarl
mov
and
inc
cs
adc
jne
out
cmp
add
mov
or
mov
lods
inc
repz
jmp
outsb
pop
and
sbb
mov
or
fsubr
jp
cmpsw
daa
es
lods
mov
es
jne
adc
jne
in
fs
lods
sbb
push
adc
dec
pop
cmp
rcrb
cmpsb
adc
or
adc
pop
out
adc
xchg
stos
imul
or
popa
addr16
call
sbb
addr16
add
iret
orb
shrl
cmp
mov
shll
add
lds
mov
xchg
cmp
inc
mov
data16
in
adcb
fwait
and
cmp
test
out
imul
les
add
adc
adc
scas
mov
in
push
ficompl
push
popa
pop
fisubs
add
cmp
pop
push
ret
xchg
cltd
dec
iret
push
mov
nop
mov
cwtl
jnp
dec
scas
mov
xor
outsb
rcll
dec
xchg
jecxz
int
faddl
push
cwtl
ljmp
jno
or
lahf
in
mov
cs
jecxz
nop
cltd
fs
sti
dec
mov
shrl
call
cmpb
fstps
movsl
mov
push
hlt
stc
or
hlt
jne
mov
pop
pop
daa
xor
or
aas
add
fisubrs
cmp
sub
nop
mov
inc
adc
lcall
mov
cltd
or
dec
xchg
out
push
pop
inc
dec
shrl
jecxz
ja
pop
repz
push
call
mov
ret
stc
inc
jmp
add
les
sub
or
pop
inc
gs
dec
xchg
leave
adc
and
cmpsb
js
dec
sub
jno
daa
and
into
out
adc
insb
xor
je
add
dec
mov
push
jmp
pop
mov
int3
xchg
jl
jge
decb
arpl
dec
jmp
dec
test
adc
xchg
clc
sub
pop
mov
jge
or
sub
cmp
lcall
sbb
adc
add
pop
mov
or
cmp
sbb
inc
movsb
rcl
enter
jnp
sub
dec
popf
mov
adc
jns
lret
scas
jg
lahf
aaa
int
fists
push
cmpl
cmp
outsl
bound
pop
into
fstpl
jb
enter
sbb
es
push
push
xor
inc
loopne
inc
adc
ret
movsb
sbb
pop
cmp
push
addb
or
sbb
cltd
repnz
pop
sbb
cmpsb
pop
mov
mov
into
in
iret
aas
ret
and
fdivrl
push
adc
push
push
mov
mov
mov
or
adc
mov
and
and
shr
mov
mov
nop
mov
or
sbb
nop
mov
lret
pop
mov
dec
jecxz
ret
push
lahf
lods
aam
testl
sub
pop
imul
adc
and
mov
les
loopne
lods
cmp
push
ja
sahf
push
mov
movsl
imul
mov
push
ret
sbb
out
fmuls
ds
adc
jo
push
cmc
jecxz
pop
mov
xchg
xchg
push
push
sbbb
cld
pushf
and
xchg
mov
addb
mov
leave
lahf
lock
mov
loope
xchg
ficoms
adc
xchg
push
fldenv
inc
adc
sub
sub
sub
out
adc
fistpl
xchg
pop
mov
std
inc
aam
xchg
xchg
call
aaa
xchg
inc
mov
adc
stos
in
pushf
pushf
jge
hlt
cmpsl
sub
cmp
push
call
stos
movsl
adc
mov
pop
dec
cmp
push
pop
adc
cwtl
ret
test
je
push
jmp
dec
cld
adcl
fdiv
gs
sbb
inc
mov
pop
xchg
mov
clc
popa
mov
aaa
inc
inc
add
pop
pusha
and
outsl
cli
xchg
mov
or
cmp
sub
faddl
int3
adc
and
xor
lods
jno
orl
rorl
loope
icebp
faddl
int3
adc
and
xor
lods
jno
orl
rorl
loope
icebp
faddl
in
xor
lods
jno
orl
rorl
loope
icebp
faddl
int3
mov
jmp
add
inc
sahf
push
mov
int3
int3
int3
int3
push
mov
sub
orl
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
mov
and
mov
jmp
jmp
cmpl
jb
mov
leave
ret
jmp
clc
arpl
push
fadds
adc
dec
test
mov
and
cwtl
out
dec
ret
pop
shrl
cmp
mov
arpl
mov
add
js
sub
pop
ret
push
xchg
sbb
pop
dec
add
sub
cmp
adc
and
dec
int
lds
jae
or
daa
mov
lods
fdivrl
ret
dec
push
insl
pop
cmp
add
add
dec
fistpl
xchg
adc
or
ret
movsb
ret
xlat
ss
out
push
mov
daa
popa
gs
and
jbe
and
pop
inc
cmp
and
xor
nop
arpl
adc
cld
imul
cmp
sbb
pop
dec
cmc
sub
inc
mov
add
add
sti
jecxz
xchg
sbb
cs
adc
pop
jl
or
mov
push
ret
lods
mov
jl
rol
shll
insb
sbb
enter
dec
xor
and
jmp
sti
ds
pusha
stos
xor
push
mov
push
mov
dec
cld
jg
outsb
push
xchg
lock
xchg
jge
movsl
or
inc
roll
jge
int
jp
and
popa
lcall
test
xchg
push
test
pop
mov
add
js
dec
rcrl
sub
sbb
enter
test
mov
add
js
dec
rcrl
sub
sbb
or
push
addr16
aam
add
or
sub
das
std
sahf
pop
and
add
jbe
xor
lcall
or
loope
hlt
repnz
xor
lds
loop
outsl
pop
mov
cmp
gs
cmc
jnp
jge
cmp
sbb
popa
sbb
mov
mov
adc
gs
ds
outsb
mov
gs
stos
xor
popa
dec
inc
mov
hlt
aaa
hlt
add
sarl
sbb
inc
shlb
inc
mov
xlat
xor
push
subb
js
cltd
out
imul
xchg
pop
outsb
fisttpll
mov
push
ret
call
inc
xor
mov
inc
sbb
mov
inc
je
push
pop
sti
cs
repz
nop
or
dec
movl
ret
cmp
or
and
out
fnsave
aam
and
and
loopne
fwait
sbb
scas
or
jecxz
aaa
outsb
outsb
pusha
imul
out
inc
sub
testb
push
dec
push
mov
inc
dec
dec
enter
aam
test
outsb
push
fmull
mov
lret
gs
cmpb
out
cld
xchg
pusha
mov
xchg
mov
lods
xchg
jno
cmpsl
cmp
and
sbb
ds
sbb
fldl
mov
stos
push
xor
adc
inc
aas
cmc
jns
popf
push
stos
xchg
push
sub
cmp
or
scas
bound
rcrl
sub
mov
sbb
test
push
in
push
xchg
mov
and
movsl
or
mov
dec
scas
cmp
xchg
lock
pop
mov
in
sbb
mov
xchg
jg
cmp
ss
cvttps2pi
xor
jne
sarl
fsubs
cmp
aam
lret
adc
jge
sbb
pushf
mov
adc
sub
les
xor
or
cmp
subb
cwtl
xor
hlt
lahf
mov
out
shll
sub
add
decl
pop
jg
mov
mov
xchg
and
push
sub
xchg
inc
push
or
sbb
add
mov
mov
pop
ljmp
cld
sbbl
out
cli
addb
add
out
cld
pop
pop
sub
lds
daa
gs
mov
mov
es
add
repz
dec
enter
add
repz
out
adc
and
aad
out
mov
das
pop
mov
dec
je
and
adc
in
mov
jns
mov
lcall
inc
mov
dec
adc
dec
push
idivb
loop
lea
xor
rcl
add
add
dec
fstps
and
cmc
lahf
ret
int3
push
test
rorb
cmp
scas
insl
and
xchg
dec
push
fnstcw
dec
xchg
or
shlb
pop
xor
outsb
sub
jmp
add
add
les
sahf
call
enter
mov
mov
dec
int3
sub
push
sahf
sub
fstpt
enter
rcrl
push
add
fcompl
inc
jge
mov
js
jnp
dec
rclb
repnz
jne
int
lods
mov
imul
sarl
popf
mov
arpl
and
ffree
or
jb
pop
mov
and
and
jecxz
jg
popf
popw
pop
int3
nop
bound
pushf
repnz
mov
jmp
and
jnp
fmull
lock
loope
sub
or
popa
aam
xchg
fisubrs
inc
or
sub
pop
inc
adc
pop
test
jg
test
lds
pop
aaa
xchg
mov
and
leave
arpl
jl
push
add
andb
ss
jecxz
test
cli
lahf
push
pusha
icebp
mov
je
fwait
xlat
push
mov
sub
fadd
and
enter
xor
pop
js
push
lods
sub
jb
xor
enter
vhsubps
or
outsb
jl
shll
sub
inc
sbb
adc
cmp
sbb
repnz
inc
add
xor
pop
imul
and
arpl
push
pop
xor
mov
inc
das
fldcw
sub
addr16
test
fidivs
xchg
imul
loop
call
and
pusha
lcall
movsl
xor
lock
loopne
adc
insl
imul
push
pushf
imul
mov
cmpsl
cmpl
imull
fisttpl
arpl
pop
loopne
push
dec
ds
inc
call
lods
dec
test
inc
dec
fcmovnu
inc
daa
rorb
mov
in
add
fwait
adcl
or
test
jno
mov
mov
cmpsl
jo
fidivs
mov
bound
mov
stos
inc
jb
sahf
dec
in
enter
dec
mov
gs
les
push
cli
fmulp
dec
pop
insb
mov
sbb
inc
sub
gs
or
fdivr
ret
movsl
ljmp
push
add
xor
jg
testb
mov
outsl
fdivs
int3
movsb
cmp
clc
jg
jae
dec
repz
cmp
sub
sub
jmp
cmpb
push
insl
push
push
or
cli
push
leave
push
std
lret
dec
xor
xchg
lds
mov
push
cs
add
lcall
pop
and
je
das
ss
push
mov
lcall
es
sbb
out
test
mov
lods
scas
push
fwait
pop
daa
gs
sbb
or
movsl
dec
ficompl
pop
in
test
push
lahf
lret
fsubrl
int
outsb
adc
mov
sub
and
cs
xchg
xchg
pop
rcrl
and
pop
adc
push
hlt
push
fldt
mov
stos
xlat
push
mov
scas
loop
mov
mull
popa
je
push
loopne
loope
jl
mov
gs
stc
inc
rcr
jnp
cmp
fadd
negb
jno
sbb
cmp
jno
push
enter
xchg
jl
and
sbb
ja
push
cmp
fstpl
imul
inc
and
lret
pop
sub
sub
pusha
xor
jae
sub
jg
fcompl
pop
or
nop
dec
mov
test
mov
push
pop
xor
insb
outsb
pushf
popa
and
nop
add
mov
mov
sbb
dec
sbb
lret
xchg
jg
xor
pop
in
hlt
pop
dec
dec
add
mov
mov
add
cld
mov
cmp
mov
sub
lcall
testl
ds
inc
sbb
and
mov
mov
rclb
jmp
add
cmp
push
out
mov
xchg
lods
mov
cld
out
sub
or
cmc
movsb
pusha
es
dec
aas
pop
or
sbb
sub
ljmp
or
mov
out
test
or
dec
enter
lret
sub
in
push
push
jp
loop
bound
pusha
pop
lcall
es
cs
cmp
mov
push
in
popf
loop
negl
adc
bound
pop
loope
data16
fmuls
rcr
xlat
aad
push
add
cmp
fstpl
sub
push
stc
adc
hlt
aad
cmp
or
pop
sub
scas
movsl
test
nop
loopne
hlt
xor
lds
call
popf
sub
out
inc
ljmp
arpl
repnz
and
es
mov
pop
scas
adc
jae
aam
mov
mov
in
sub
push
negl
dec
aad
jle
iret
jge
scas
mov
add
mov
mov
jno
mov
mov
add
cmpsb
and
test
test
push
out
push
push
pusha
cld
dec
or
push
inc
xorl
cs
lock
cld
ret
xchg
mov
push
and
les
nop
and
out
into
push
in
pop
add
icebp
mov
mov
cs
jecxz
mov
lock
add
lock
cmc
xchg
mov
xchg
lret
inc
push
jle
jl
push
fisubrl
cs
stos
daa
out
or
inc
js
mov
xchg
into
adc
xor
lods
pop
leave
pop
mov
sbb
adc
xchg
inc
jle
push
test
mov
add
loope
out
inc
xor
inc
int3
xchg
mov
sub
sub
jo
sti
fdivrl
push
mov
hlt
movsl
lahf
loop
mov
in
push
push
ljmp
adc
inc
dec
pop
dec
sti
fldl
rclb
dec
sub
arpl
or
pop
fidivs
jnp
stos
push
sti
xchg
sahf
pop
mov
jns
dec
incl
icebp
fsubrl
xchg
pusha
stc
inc
xchg
movsb
push
mov
test
or
cmc
fiadds
inc
jbe
push
jno
fiaddl
push
outsl
push
loop
mov
or
scas
movsl
es
add
sbb
mov
sbb
pop
inc
in
loopne
and
ss
lea
mov
aas
lret
sbbl
icebp
mov
or
das
fsubrp
js
hlt
les
sub
push
pop
and
push
cmp
cmp
iret
fstl
sahf
adc
inc
sub
mov
dec
jp
fisttpll
xchg
sbb
arpl
mov
sbb
push
and
jg
lahf
loopne
aas
scas
dec
out
call
jno
mov
mov
mov
inc
mov
dec
xor
xor
ljmp
dec
cmp
push
lds
daa
sub
dec
std
inc
fs
pusha
sub
jmp
xchg
xchg
push
out
insl
fwait
ja
pop
xor
shll
xchg
adc
add
mov
cmc
xchg
stos
cmpsb
push
sbb
pop
les
jle
or
lods
fmul
mulb
icebp
into
sub
mov
mov
mov
pop
jne
scas
pop
adc
mov
shll
add
repz
mov
das
sti
test
aam
dec
ljmp
cmpsb
pop
jns
andl
jg
or
int3
cld
stos
sbb
jo
lods
dec
cmp
dec
xchg
test
and
movsb
out
shr
ja
or
scas
fbld
xchg
cmp
in
push
outsb
mov
cmp
or
xor
mov
fcomps
mov
and
sbb
movsb
fwait
jne
ljmp
push
notl
ret
push
xor
out
lret
fidivrl
mov
sbb
movsl
xchg
lods
movl
xor
ret
mov
test
lcall
pop
dec
mov
aam
or
fs
out
dec
in
aam
sarb
lret
cmpb
jg
jns
inc
in
inc
cmp
jne
das
pop
adc
adc
aam
pusha
je
aas
dec
adc
or
xchg
sbb
jae
test
adc
lcall
add
sub
out
jmp
cltd
movsb
xchg
push
jbe
shlb
daa
popf
jno
push
pop
dec
fstps
sub
mov
lret
xor
fcompl
add
dec
les
ds
sbbb
inc
in
jp
dec
imul
push
dec
xor
pop
inc
ja
and
jbe
xchg
xchg
iret
mov
cli
cmpps
mov
mov
into
mov
mov
add
pop
sub
pop
xchg
sbb
pop
cmp
lods
les
mov
dec
repnz
jl
mov
cmp
sbb
inc
xchg
xlat
jbe
popf
push
add
jle
mov
mul
cltd
aaa
push
mov
and
cwtl
fmull
gs
xor
cld
pop
push
cmpsl
push
lds
je
sub
adc
push
repz
push
pop
adcb
inc
cmp
inc
scas
lock
cmpsb
stos
add
jmp
in
jecxz
adc
sub
mov
or
mov
jl
and
dec
pop
mov
imul
mov
fs
lea
or
sbbb
jne
movsl
dec
xor
jp
rcll
mov
in
xchg
daa
push
bound
into
call
clc
sub
and
ret
jno
sarb
movsb
leave
imul
lret
stos
add
jnp
stc
mov
lret
jbe
add
imul
xor
popf
jnp
push
inc
xchg
xor
inc
mov
lods
addr16
and
inc
push
insl
cwtl
shlb
xchg
push
pop
aad
fs
push
repnz
cltd
in
test
jmp
xchg
shll
xchg
imul
ss
shr
int
daa
sub
push
sbb
fbstp
out
sbb
roll
xor
and
jb
adc
cwtl
mov
lods
adc
sub
je
aaa
mov
or
outsl
mov
and
jmp
sub
nop
pop
cltd
xchg
pusha
mov
or
adc
inc
jnp
loopne
mov
ret
in
rorl
ja
outsw
add
xor
or
jns
xor
mov
nop
enter
jne
dec
jo
ds
mov
mov
cmp
aaa
in
std
mulb
lahf
sub
out
adc
dec
lea
iret
add
ret
and
push
daa
cmp
roll
push
or
out
flds
mov
ljmp
out
bound
mov
mov
mov
mov
xchg
movsb
jns
push
dec
mov
or
pop
mov
and
cmp
jbe
sbb
out
mov
mov
addl
push
add
insb
cltd
push
xor
mov
pop
inc
mov
cli
inc
add
inc
cs
xor
arpl
cmp
mov
xor
add
lret
lea
mov
enter
or
or
push
stos
pushf
notb
mov
push
pop
sbb
mov
int3
and
mov
je
loopne
and
js
out
or
push
les
adc
mov
dec
shlb
xor
inc
jecxz
jns
push
cli
add
in
sub
jbe
sbb
pop
stos
push
jne
rcrb
iret
in
cli
lds
rdtsc
pop
leave
sbbl
ds
leave
add
or
rcpps
push
xchg
dec
push
mov
jmp
sub
xchg
add
xor
call
jns
mov
stc
lcall
push
xchg
adc
mov
int
movsb
dec
xchg
pop
aad
fistpll
bound
push
shlb
and
lods
aad
sub
cmp
sub
mov
out
test
stos
inc
push
cs
push
subb
loope
nop
cmp
and
pop
add
orb
jnp
rcl
sub
adc
jmp
mov
and
mov
push
insl
cmc
lods
dec
insl
jb
or
sub
jo
in
shl
sub
add
pop
pop
js
test
inc
iret
mov
enter
add
js
mov
aad
xor
adc
adc
cmp
jge
imul
xchg
sbb
sbb
xchg
mov
mov
aam
xchg
fnstenv
xor
sub
pop
mov
dec
push
es
mov
lods
pop
loope
cmp
ljmp
das
sahf
repnz
imul
jne
shlb
dec
xor
loopne
push
pop
adc
adc
adc
push
inc
push
aam
mov
and
mov
pop
adc
xchg
jecxz
fs
dec
mov
mov
adc
int
daa
adc
add
and
pop
adc
inc
mov
or
lods
sarl
pop
xor
fcomps
loop
cwtl
pop
adc
add
insb
mov
pusha
pop
enter
pop
in
adc
add
inc
lahf
imul
insb
out
jmp
or
sub
dec
cltd
sbb
mov
mov
pop
jb
les
cmc
icebp
jle
adc
in
and
push
mov
push
jg
mov
sub
gs
ss
adc
jne
mov
jnp
aad
gs
pushf
imul
in
lret
imul
cmp
stos
hlt
inc
pop
test
pop
imul
fistpl
lds
adc
pop
or
mov
nop
mov
outsb
lahf
add
ret
jo
icebp
out
xchg
mov
stos
pop
add
test
movsb
fwait
pop
addr16
mov
sub
ja
cltd
inc
pushf
sbbb
int3
rcll
es
cltd
mov
mov
dec
shrl
and
pop
push
nop
cmc
xor
int
pushf
pop
or
jae
test
xchg
les
pop
clc
aam
in
pop
dec
cli
and
mov
in
cld
mov
mov
out
imul
pop
cld
fidivl
sbb
xchg
mov
inc
jno
and
sti
dec
ret
scas
mov
fnstenv
jnp
rolb
fistps
jns
dec
mov
aas
pop
push
and
xchg
adc
push
jge
loope
cmp
cmp
test
in
out
mov
roll
fnstenv
jmp
inc
in
fildll
add
sub
movsl
int
mov
adc
and
divl
sar
int
mov
andl
push
pop
push
or
popa
mov
push
push
push
jno
sub
cmp
xchg
call
and
lods
cmp
xchg
mov
or
stos
sub
lahf
adc
ljmp
mov
das
lahf
inc
out
xor
ret
fstpl
sbb
in
mov
dec
ljmp
movsl
loopne
out
or
pusha
lds
orb
mov
out
rol
es
pop
nop
jns
sub
xchg
sub
imul
loope
inc
add
sbb
test
and
xorb
popa
mov
inc
sub
shld
push
out
or
jnp
in
stc
cs
sub
mov
insb
pop
sti
xchg
cmp
popa
pop
mov
gs
pop
lods
neg
lret
cli
popa
decl
sbb
rcrl
mov
into
xchg
xchg
mov
arpl
addr16
in
mov
out
jno
pop
out
adc
popa
xor
imul
je
inc
xchg
fwait
lods
lock
pusha
dec
popa
mov
sbb
push
mov
fildll
es
pop
nop
notb
fisttpl
xor
mov
mov
sub
scas
shr
std
repz
pop
lret
int3
shlb
nopl
fstl
push
arpl
xchg
mov
stos
xor
sub
push
sbb
clc
fcmovu
andb
inc
das
sbb
push
stos
rol
pop
cltd
enter
clc
xchg
sbb
leave
mov
xchg
mov
sbbb
dec
lahf
push
sbb
ret
mov
out
add
popa
mov
repz
fidivrl
lret
cmp
cmc
push
sub
mov
orl
cmpsl
aam
cmpb
mov
cmpsb
das
pushf
mov
add
lock
adc
jae
repnz
jns
idiv
xor
xor
cmpsl
pop
mov
leave
jge
jg
sbb
and
pop
sbb
ja
mov
lods
adc
pop
push
dec
shrb
dec
sbb
jl
ljmp
dec
sbb
ljmp
xor
and
jnp
sub
push
jecxz
pop
popf
cmp
std
imul
pop
add
dec
xorb
mov
test
jge
int
shll
mov
int3
push
js
jns
sub
ss
or
dec
pop
inc
ss
xchg
stos
sub
das
add
xchg
cwtl
push
fisubrl
xor
xchg
imul
sbb
cli
add
in
fisttpl
mov
bound
xor
push
insl
push
int
dec
pop
cld
xchg
add
test
orl
cmc
pop
cmp
test
mov
push
lret
insb
fdivl
stos
or
enter
enter
out
mov
mov
jo
stc
popa
test
jmp
ljmp
out
dec
sar
shll
and
sub
xchg
rcrl
insl
sub
int
dec
in
cmp
int3
cmpl
pop
xor
in
or
movsl
ret
xchg
repz
ss
push
lcall
mov
ss
arpl
cs
scas
sbb
mov
cmp
xor
cmpsl
pop
inc
xlat
sub
fdivs
cld
es
adc
jbe
ficoml
mov
push
aam
xchg
int3
push
add
xchg
fldl
inc
mov
inc
out
lods
inc
clc
ret
jns
call
maskmovq
divl
dec
mov
scas
insl
add
dec
in
rcll
repnz
and
test
clc
hlt
pop
daa
stc
shrl
mov
imul
mov
test
mov
push
ja
stos
gs
pop
jmp
mov
iret
jo
xor
fmuls
dec
popf
jb
in
cs
push
push
nop
pop
mov
sub
aaa
jle
test
pop
cli
frstor
jbe
test
or
fidivs
add
aam
outsb
lock
push
leave
dec
popl
aas
orl
sbb
lods
pop
lret
pop
cmp
xchg
fsubr
leave
in
mov
icebp
xor
xor
mov
cmpsl
fdivs
mov
ss
mov
cli
ja
sub
fsubrs
ss
dec
sbb
in
cmc
jecxz
cld
jge
jmp
in
arpl
imul
sub
js
loope
add
js
clc
jo
out
sarb
sub
popa
xchg
mov
or
ja
pop
sbb
nop
push
imul
xor
int3
shlb
std
jge
mov
stos
inc
push
leave
pop
mov
adc
add
test
aad
jg
inc
ror
cltd
in
leave
mov
push
push
hlt
loopne
sbb
test
mov
sbb
sti
cmp
imul
test
fsubr
push
mov
mov
adc
inc
mov
or
sbb
leave
jl
addr16
push
ja
jg
pop
push
push
lock
pop
inc
cld
cli
lds
adc
les
pusha
jae
fdivrp
shr
es
sub
into
jb
insb
and
mov
mov
mov
add
js
dec
rcrl
sub
sbb
enter
test
mov
add
js
dec
rcrl
sub
sbb
test
fadds
xor
add
js
mov
mov
mov
cld
jae
arpl
xor
add
xchg
rcrl
pop
cmp
jl
int3
int3
int3
int3
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
push
mov
push
mov
push
push
push
push
movl
movl
movb
call
andl
andl
push
mov
push
mov
movl
movb
movl
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
mov
movb
movb
call
mov
lea
push
movl
call
pop
pop
leave
ret
mov
movl
fistl
and
xor
xchg
addr16
testl
xlat
movl
xchg
jbe
inc
mov
fbld
ja
addr16
testb
aaa
daa
xlat
movl
xchg
jbe
inc
mov
cmpsl
cmpsb
push
mov
out
repz
test
push
out
mov
mov
inc
out
mov
cmpb
mov
mov
bound
xchg
mov
mov
bound
jns
int3
mov
dec
mov
sbb
or
into
aaa
jbe,pn
xlat
aaa
lret
ja
bound
and
cmpsb
add
lret
imul
inc
mov
lahf
loope
ss
mov
xor
xchg
test
mov
push
pop
movsl
stc
cmp
leave
xchg
push
cmpsl
add
pop
jle
inc
fstl
into
test
or
mov
pop
inc
aaa
sub
ficoms
dec
mov
xchg
cmpsl
xchg
nop
loop
inc
pusha
adc
sbb
pop
notb
xlat
xor
movl
xchg
jbe
inc
mov
cmpsl
cmpsb
push
mov
xchg
addr16
testb
aaa
dec
push
shll
push
pop
out
repnz
add
xor
into
cs
jmp
push
mov
imul
pop
out
sti
adc
inc
fisubrs
ret
hlt
sbb
ds
and
add
popa
leave
dec
push
xchg
sbb
daa
mov
push
cmpsl
cmpsb
push
mov
xchg
addr16
testb
aaa
daa
xlat
movl
xchg
jbe
inc
mov
cmpsl
cmpsb
push
mov
xchg
addr16
testb
aaa
daa
xlat
xor
adc
lea
out
sub
sub
ljmp
push
sub
mov
cltd
sub
iret
cld
int3
int
mov
inc
jmp
fucom
scas
fs
adc
imul
and
or
rcrb
ds
test
fimuls
xchg
mov
cli
inc
mov
fsubrs
call
xchg
sti
mov
push
jbe
push
movsl
into
movsl
incl
mov
dec
repz
or
lar
pop
jg
lret
cmp
outsb
out
lods
adc
dec
lret
icebp
xchg
add
mov
aas
in
add
inc
add
and
imul
dec
sub
movlhps
iret
inc
loop
cmp
sub
scas
jo
test
sbb
or
subb
adc
jb
scas
or
jp
sbb
icebp
into
xchg
adc
pop
xchg
mov
fsubr
sarl
repnz
inc
adc
adc
jp
mov
mov
fimuls
mov
xor
jns
ljmp
xor
pop
loop
mov
mov
push
out
xor
fwait
jp
cltd
popf
mov
or
mov
jge
ja
pop
sti
movsb
stos
rorb
jge
inc
loope
push
push
push
push
xor
icebp
fiaddl
fists
aam
pop
pop
pop
push
test
test
lret
repnz
out
lock
out
pop
stc
sub
mov
adc
sub
idiv
mov
lcall
mov
inc
testb
jecxz
mov
jmp
push
loop
sbb
clc
pop
xchg
loop
cltd
aad
pop
pop
xchg
shrl
ds
pop
lock
js
out
and
rcr
ds
push
mov
lock
pop
std
cmc
in
jne
fistps
and
es
scas
mov
leave
bound
movsl
cmp
cmovp
mov
sub
dec
mov
lea
aad
add
in
pop
dec
lret
push
sti
iret
fwait
mov
aad
shlb
outsb
jg
repz
insb
jp
cmp
mov
cmp
push
cmpsl
jbe
ret
mov
jge
test
pop
popa
inc
jno
scas
dec
in
sbb
sahf
call
pop
push
pshufw
lods
adc
repnz
in
xchg
mov
stc
xchg
in
out
es
mov
cli
jmp
aad
repz
shr
dec
jns
outsb
insl
popf
jnp
mov
mov
cwtl
mov
ret
jne
jno
fcmovnbe
inc
sub
sbb
jge
xlat
mov
cmp
outsb
cmpsb
cmp
push
mov
loop
out
and
dec
ret
cmc
mov
xor
mov
adc
out
ret
negb
ret
push
movsl
push
inc
dec
pop
jg
int3
imul
loopne
pushl
push
push
sbb
je
pop
cmp
loopne
aam
xchg
mov
sbb
mov
lods
imul
dec
popf
cmpsl
ret
pop
pop
test
cmpsb
icebp
cltd
lods
pop
add
out
in
or
sti
arpl
fwait
rorl
xchg
cmp
adc
nop
push
test
mov
xor
or
arpl
ret
cs
jae
and
pop
dec
cmp
inc
pushf
xchg
scas
js
lcall
outsb
mov
repnz
push
push
pop
scas
mov
mov
lahf
and
or
or
sti
shl
stos
mov
jg
xchg
arpl
jp
or
ret
fisttps
std
add
adc
mov
sbb
pop
mov
fldt
add
lods
and
mov
push
mov
xor
mov
leave
and
sub
adc
lret
and
sub
sub
sbb
jbe
mov
call
inc
inc
push
mov
dec
imul
pusha
ljmp
adcl
push
jnp
lock
mov
fistpll
push
aas
jg
sbb
and
mov
xchg
into
pusha
mov
sub
rcl
push
push
jp
testb
pop
pop
loop
push
pop
mov
jne
bswap
out
inc
cwtl
mov
push
jmp
add
jns
scas
js
dec
int
mov
pop
outsb
ror
pop
mov
push
mov
aad
notb
adc
mov
inc
in
dec
jne
inc
imul
mov
jns
fwait
lds
mov
inc
mov
cmovge
fsubr
mov
and
call
xchg
clc
xchg
jle
xchg
xor
and
jno
cwtl
mov
stc
cmpsl
lock
out
out
jns
scas
cmp
and
jno
popa
or
aas
cld
push
jp
pop
fidivl
in
jecxz
cmp
orb
xchg
push
mov
adc
inc
stos
loopne
loop
mov
lea
push
and
pop
xor
or
adc
inc
inc
lret
out
sbb
stos
pop
mov
dec
and
pop
aaa
in
sbb
add
lods
push
popf
gs
fadd
jns
fsubrs
ret
sub
sbb
loope
scas
mov
pushl
popa
lret
mov
xchg
mov
mov
dec
mov
inc
mov
sub
fidivrl
rol
jge
jp
cs
outsl
movsl
rcrb
jnp
shrl
dec
push
jl
pop
imul
int3
daa
or
and
stos
cmpsl
dec
mov
push
pusha
nop
mov
xchg
pop
adc
mov
leave
inc
outsb
pop
pusha
gs
cmc
inc
inc
mov
bsf
sbb
fwait
or
xchg
cmp
shlb
rcrb
test
push
mov
mov
enter
xchg
aad
mov
jmp
nop
aas
sub
xchg
in
cmp
jge
sub
sub
mov
daa
adc
mov
sbb
inc
sub
pusha
add
insl
mov
xchg
cld
mov
pop
push
loope
sbb
cmp
shlb
dec
nop
mov
xor
or
sub
push
jecxz
dec
jp
scas
icebp
rcll
xor
dec
or
mov
mov
scas
jmp
xchg
fcomip
adc
sub
add
cmp
cltd
xorl
daa
mov
lret
imul
xor
add
dec
mov
shlb
fdivs
mov
cmpsl
mov
fwait
or
xor
cwtl
and
inc
mov
cmp
loop
imul
xchg
xchg
xchg
icebp
ficompl
ja
les
daa
mov
mov
test
inc
jp
cld
fimuls
daa
cmp
and
mov
pop
aas
std
test
sbb
inc
dec
lcall
push
hlt
inc
mulb
xor
lret
movsb
add
lret
lret
or
outsb
loopne
dec
adc
sub
sbb
xchg
xchg
or
lods
adc
pop
push
jae
std
addb
jno
jb
fwait
scas
enter
cmp
push
aad
or
imul
dec
daa
ljmp
cs
pusha
movsl
test
cmp
sbb
push
lcall
xchg
in
scas
jg
mov
sbb
ja
imulb
fcoml
cs
popa
fistl
adc
mov
jl
mov
lret
mov
xchg
push
dec
jle
cltd
push
js
xchg
jmp
mov
enter
ret
gs
in
dec
lds
fcmovbe
cmp
sbb
jp
testb
dec
dec
loopne
adc
jne
clc
mov
sar
xchg
dec
inc
inc
pop
rol
loop
sahf
cmc
add
dec
lahf
pop
gs
add
sbb
ss
in
sub
fcom
inc
ljmp
push
jno
loopne
out
movb
js
scas
push
add
stos
ss
js
fdivrs
fcoms
and
sbb
rorb
movsb
or
inc
lods
jge
push
sbb
jl
das
jns
pop
mov
fcomps
fstpt
in
or
push
imul
and
icebp
data16
and
inc
inc
mov
mov
out
jae
xchg
fiadds
inc
mov
mov
popf
mov
pop
dec
add
pop
or
es
cmp
adc
popf
push
adc
stos
inc
mov
cmpsb
ss
xlat
pusha
add
xor
aaa
pop
sahf
jl
mov
notl
cmp
mov
cwtl
xchg
xchg
aad
fs
mov
mov
jnp
push
jl
loopne
pop
cli
mov
mov
leave
jp
mov
pop
decl
stos
push
ljmp
push
divl
js
out
jecxz
inc
dec
mov
pop
jno
inc
cmp
cwtl
cmp
outsl
pop
icebp
int3
xchg
dec
push
xlat
dec
clc
push
dec
and
mov
sub
mov
loopne
in
adc
add
mov
popa
lret
int3
jne
jnp
cmpsl
jmp
cmpb
std
data16
jb
sbb
mov
mov
mov
notl
dec
sbb
xchg
push
int
sbb
movsl
cmp
or
and
out
mov
sbb
jbe
adc
imul
dec
dec
pop
scas
addr16
xchg
xchg
pop
rorb
pop
mov
add
cs
lcall
sub
cltd
mov
sub
mov
jge
outsb
aaa
int3
push
iret
pop
dec
in
imull
pop
ret
es
cmpsl
jbe
je
xchg
outsb
lret
jne
fadds
lcall
std
dec
sub
in
int
or
pop
sbb
iret
std
call
fstps
es
cmp
ja
ficoms
imulb
push
dec
scas
adc
lods
or
nop
fiadds
pop
int3
xchg
sub
inc
fsts
jg
jmp
pushf
cli
xchg
sbb
ficompl
test
adc
andl
test
fsts
mov
push
inc
rol
sbb
neg
in
and
add
push
sbb
mov
lods
imul
adc
fcom
dec
inc
lahf
lcall
and
test
arpl
xchg
roll
jmp
insb
cmp
stos
sub
iret
cmp
aam
sahf
adc
movsl
fwait
aaa
xor
popf
add
inc
cli
scas
notb
loope
icebp
inc
cmp
or
and
cwtl
lahf
mov
ja
out
and
or
inc
xor
jae
push
cmp
ss
add
cld
into
push
add
cwtl
js
pop
mov
adc
push
aam
push
xor
pushf
jo
cmp
adc
aas
fnstenv
loopne
arpl
popa
xor
outsl
leave
dec
adc
adc
dec
js
leave
push
stos
xchg
enter
push
sub
mov
adc
rcll
cmovne
adc
jns
pushf
arpl
imul
daa
negb
aad
aam
js
or
pop
data16
das
cmp
jmp
cltd
push
or
mov
ret
mov
movsl
lods
mov
cmc
int3
jge
pop
dec
mov
dec
imul
sub
cld
mov
popf
fwait
mov
sub
ds
jle
outsl
sub
push
jle,pt
enter
jb
xchg
sub
out
mov
cmp
or
test
push
aaa
pushf
mov
scas
jge
pop
pushf
imul
fsubr
nop
repnz
xchg
cmp
inc
xchg
or
mov
fldcw
fmuls
mov
outsb
and
aaa
mov
mov
mov
push
cltd
rep
aam
jne
inc
jb
add
push
cmp
or
fistl
pop
call
fs
inc
pusha
pop
mov
add
adc
sti
leave
lcall
clc
mov
jnp
dec
pop
pusha
daa
hlt
idivb
in
and
fisubrl
sbb
repnz
xchg
xchg
cmp
lcall
adc
sub
js
mov
pusha
mov
add
push
inc
mov
mov
cwtl
jge
or
iret
pop
test
enter
jle
fwait
loope
outsl
enter
arpl
dec
push
icebp
dec
xchg
repz
test
push
ljmp
ljmp
push
pop
stos
outsb
ret
mov
mov
dec
pop
mov
idivb
pop
in
int
xor
and
push
neg
inc
xor
cmp
aaa
movsb
mov
dec
push
or
jge
or
fldcw
icebp
lahf
inc
cmp
sti
mov
add
aas
sbb
push
sbb
rcl
clc
arpl
sbb
ret
dec
cwtl
lret
test
push
inc
rcrl
test
add
xchg
ret
adc
jbe
mov
push
iret
inc
xor
mov
rclb
mov
mov
outsb
jns
dec
shr
iret
pop
das
pop
pop
jo
xchg
fadds
mov
sbbb
push
lret
in
xlat
xchg
cmp
jae
jae
adc
cmc
lds
jg
xor
daa
and
jno
call
les
and
jle
mov
scas
xor
sahf
push
aaa
adc
shr
arpl
push
in
sbb
and
lods
push
and
pop
sub
nop
scas
mov
xor
callw
pop
sbb
lret
je
call
xchg
in
xor
outsb
ret
aaa
xchg
cmpsl
pop
ficompl
inc
jmp
and
int3
sbb
sti
insl
scas
out
js
ljmp
jp
xchg
fldpi
dec
or
sub
pop
pop
cmpsb
fdivrs
push
mov
sbb
enter
stc
dec
addr16
mov
add
xchg
cmp
sub
fildll
push
pop
push
fdivrs
mov
mov
inc
sbb
mov
in
imul
and
xchg
inc
shll
sbb
rol
in
call
inc
adc
mov
sbb
sub
mov
sbb
sub
dec
push
les
push
mov
jb
xchg
pusha
xor
comiss
enter
repz
sbb
lahf
inc
loop
mov
lcall
into
sti
mov
sti
sbb
inc
popa
xor
add
and
sarb
sbb
lock
mov
pop
jl
jge
pop
mov
mov
sbb
dec
push
daa
jb
mov
shrl
call
inc
add
clc
sub
mov
xchg
sahf
pop
fs
push
movsl
adc
sub
out
dec
jmp
test
xor
imul
test
cld
mov
ja
mov
pop
xchg
dec
in
push
inc
xchg
inc
inc
mov
mov
mov
pop
or
mov
in
ficoml
outsb
lock
jl
cld
das
xor
cwtl
and
dec
pop
mov
aam
hlt
cld
jp
das
pop
arpl
jno
mov
mov
cmpsb
bound
test
notl
jbe
xchg
add
lret
inc
out
sbb
ljmp
push
incl
sbb
xchg
inc
cmpsb
and
jge
bound
call
sbb
test
pop
push
xor
fmulp
or
pop
int
pop
jno
lret
add
cltd
cmp
flds
mov
sahf
xchg
pop
xchg
xchg
shrl
bound
mov
pushf
fsubp
inc
pushf
ljmp
xchg
cmc
dec
inc
and
in
das
push
call
xchg
inc
inc
pop
cmp
fsubs
pop
ja
inc
in
mov
hlt
fsubs
push
popa
lock
sbb
imul
mov
jge
push
mov
ds
lret
xor
jmp
cmpl
insb
mov
mov
scas
aaa
pusha
xchg
in
popa
fsubrs
xor
sub
jmp
std
pop
cld
push
lcall
pop
mov
scas
push
push
push
dec
adc
cli
loop
mov
call
pop
push
ljmp
xchg
fwait
dec
out
xor
xchg
rorw
xchg
mov
cs
nop
cmc
int
mov
je
in
cmp
add
or
clc
jb
and
test
vmread
dec
je
xchg
adc
cmpl
cmp
xor
bnd
dec
jl
pop
xor
fadd
lahf
add
pop
or
and
mov
in
mov
je
adc
sarl
aas
mov
mov
pop
repnz
xor
jmp
sub
dec
lret
icebp
loope
cmp
xchg
frstor
lods
ljmp
push
push
icebp
sub
jno
iret
movsl
pop
cltd
popa
fwait
stc
adc
add
ja
sbb
mov
pop
mov
sbb
pop
dec
cld
test
xchg
xor
jge
jmp
and
test
mov
mov
push
mov
int3
mov
adc
mov
in
outsl
mov
aad
jge
out
xchg
mov
add
sub
aad
jbe
aam
jbe
dec
xchg
mov
int
pop
xchg
cs
push
mov
xor
fiadds
insb
cwtl
int3
xchg
push
outsl
xchg
dec
mov
add
ja
lods
leave
xlat
push
jns
pop
test
push
and
pop
cmp
or
fiadds
and
fsub
aam
push
lcall
mov
or
xchg
divb
movsb
test
mov
pop
imul
or
cmp
aaa
ljmp
jo
mov
nop
insb
pop
inc
cmp
inc
scas
shl
aaa
dec
add
clc
sbb
out
inc
xlat
orb
mulps
cmp
cmp
mov
insb
das
dec
pop
hlt
insl
ja
ljmp
inc
xchg
jno
xor
sbb
add
aaa
mov
fwait
mov
call
mov
lods
out
sub
sbb
arpl
jecxz
and
or
jbe
mov
rorl
jnp
xchg
and
inc
aaa
bound
mov
clc
outsb
andb
repnz
sarl
rclb
jne
or
leave
loope
pop
insl
mov
js
cs
push
sbbl
fcoms
xchg
icebp
subb
push
or
pop
cld
and
mov
pop
add
jmp
lock
int
je
jecxz
mov
fcmovnbe
mov
into
cmp
roll
fcmovnu
hlt
orl
test
mov
xlat
jnp
and
sub
mov
les
imul
shlb
int
cmc
inc
xor
mov
xlat
fidivs
adc
inc
or
inc
xchg
in
jne
sbb
push
adc
pop
hlt
je
push
push
arpl
or
jp
mov
pop
inc
ljmp
popa
adc
xor
and
lock
jmp
jne
inc
imulb
insl
scas
pop
xor
jmp
xor
inc
fldt
sbb
shlb
and
repz
fsubs
pop
ror
cltd
ret
push
sub
add
roll
mov
mov
mov
call
mov
xchg
int
pop
loopne
pop
jno
cmpsl
xchg
mov
pusha
outsl
sub
roll
mov
mov
mov
fmull
jmp
lret
jecxz
testl
outsl
ja
or
jbe
push
lock
pusha
xor
jge
xchg
out
es
push
add
pushf
sbb
imul
insb
ja
mov
jmp
scas
cmp
or
add
out
cmp
pop
addr16
loop
pop
mov
iret
add
imul
inc
test
sbb
or
xor
data16
fwait
xor
stos
jbe
movl
add
fiaddl
lret
pop
push
sbb
icebp
cmp
mov
and
mov
pop
aas
imul
sti
mov
jb
cld
pop
and
in
loopne
movl
lahf
xor
test
sbb
aaa
pop
cli
out
xchg
or
xor
inc
lcall
out
ficomps
lret
movsb
cwtl
push
in
pop
mov
add
or
push
xor
push
sbb
sbb
and
shlb
pop
shrb
and
loopne
adc
mov
xchg
jecxz
bound
sahf
mov
jmp
outsb
mov
or
and
outsl
add
cmp
lea
cld
out
stos
jb
xchg
xchg
xor
xor
das
mov
jae
pop
flds
jbe
imul
mov
mov
add
mov
add
adc
pop
sub
stc
inc
ficoms
cmp
data16
rcrl
cmc
and
and
inc
sbb
popf
popa
mov
ds
test
leavew
add
sbb
cmp
inc
das
mov
call
adc
rcrb
popf
dec
mov
in
jb
xchg
jl
xchg
loopne
dec
gs
dec
popf
xor
and
loope
jno
fmull
out
mov
mov
mov
mov
adc
out
shlb
push
xor
cmp
xchg
xor
dec
jmp
repnz
movsl
dec
mov
int
adc
sbb
scas
ret
xchg
aad
leave
pop
add
pop
sbb
add
ficomps
sub
adc
or
push
pop
push
jae
mov
cmp
divb
sub
es
int
cmpsl
pushl
push
aam
pop
std
push
outsl
movd
adc
mov
lock
sbb
scas
mov
mov
mov
dec
addl
sbb
test
jecxz
cmp
dec
sar
fnstenv
add
rcl
in
push
jns
xor
bound
ret
sub
pop
mov
pop
cltd
fiaddl
pusha
rclb
sbb
arpl
into
repz
dec
pushl
mov
out
mov
cmp
in
mov
pop
jo
pop
fimuls
lods
mov
cmp
and
ds
xchg
stos
mov
cmp
mov
sbb
push
in
aas
xchg
push
mov
or
loope
mov
or
cmpl
aam
into
orl
xor
cld
cmp
stos
push
jmp
into
out
or
cmpsb
out
rclb
aam
shll
cwtl
lret
ret
bound
push
movsb
add
fcmovb
mov
xchg
clc
mov
push
jo
lods
or
call
cmp
xor
pushf
dec
cli
out
shll
or
ds
hlt
sti
cltd
arpl
dec
fs
ljmp
adc
adc
xchg
push
xor
xchg
or
sub
sbb
call
xchg
pop
xchg
inc
shlb
jbe
repz
pop
imul
adc
inc
sub
js
mov
in
push
into
add
scas
iret
imul
fstpt
fadd
loopne
in
mov
inc
cmp
popa
add
movl
mov
jle
push
ret
push
sub
dec
loop
outsl
lcall
out
or
ljmp
lds
shll
movb
rcr
mov
fdivr
lods
notl
out
xchg
jbe
inc
mov
cmpsl
cmpsb
push
mov
xchg
addr16
testb
aaa
daa
xlat
movl
xchg
jbe
inc
mov
cmpsl
cmpsb
push
mov
xchg
addr16
testb
aaa
daa
xlat
movl
xchg
jbe
inc
mov
cmpsl
cmpsb
push
mov
xchg
addr16
testb
aaa
xlat
daa
daa
xlat
aaa
movl
xchg
jbe
inc
mov
cmpsl
cmpsb
push
mov
sub
xchg
adc
enter
int3
int3
int3
int3
adc
and
add
lss
mov
psrad
outsl
adc
and
jb
out
sbbb
lss
lods
das
rcrb
dec
bnd
outsl
or
cmp
push
out
mov
mov
das
rorb
mov
jnp
insl
sti
xor
push
inc
add
inc
push
mov
movsl
or
add
cmp
cli
js
pop
ret
xchg
sub
shll
dec
scas
sahf
push
js
inc
xor
repz
pop
mov
pop
sbbb
xchg
in
mov
pop
rorl
xchg
mov
inc
stc
clc
mov
icebp
mov
das
out
rcrb
jl
and
adc
mov
mov
inc
fisttps
sub
sbb
or
pop
jns
loop
inc
add
push
lods
fistps
aas
add
push
mov
push
sbb
xchg
ret
jle
aas
cli
sbb
ja
mov
inc
int3
xorl
push
iret
cmp
das
xchg
mov
loop
fistpl
and
jb
jnp
mov
lcall
pop
fimull
jg
sub
addr16
push
stc
push
jmp
aas
lcall
rcll
shlb
cmpsl
ss
or
arpl
pop
mov
inc
loope
nop
xor
rcrl
arpl
xor
add
outsb
sti
pop
lret
dec
fistpl
mov
iret
jb
out
xchg
pop
orb
aas
mov
dec
bnd
outsl
adc
and
jb
out
xchg
pop
orb
aas
mov
dec
bnd
outsl
adc
push
jle
sbb
push
mov
jg
or
inc
fldenv
ret
add
andl
notl
add
mov
adc
stos
jne
aas
add
roll
fsubrs
mov
aam
xlat
cmpsb
out
fwait
in
arpl
mov
push
jbe
sub
push
xor
pop
pop
ret
fdivrs
and
testl
xchg
shr
scas
icebp
inc
sbb
pop
xor
sbb
ss
jno
std
cld
mov
dec
mov
cmp
mov
push
imul
mov
lahf
test
mov
lods
js
pop
sahf
mov
cmp
orb
scas
push
or
and
in
cld
inc
xor
in
test
mov
jg,pn
clc
inc
push
add
leave
mov
loope
js
hlt
jl
aam
mov
mov
xor
aas
rclb
mov
aad
testb
lods
mov
out
mov
ja
icebp
cld
insb
mov
clc
add
ja
push
dec
cltd
pop
pop
pop
xchg
mov
sbbb
mov
xchg
int3
lock
mov
loop
xchg
add
out
ret
pop
mulb
shll
push
pop
and
push
ss
mov
lea
rolb
ss
sbb
adc
push
pusha
mov
inc
jp
gs
or
out
jno
shr
rorl
in
popa
sbb
adc
js
cmpsb
dec
lock
cmc
xchg
xorl
adc
xchg
lds
xchg
push
ljmp
cmp
shlb
jb
std
add
iret
xor
add
jnp
mov
fs
aam
aas
jl
scas
xchg
xor
mov
mov
sbb
outsb
sbb
iret
jg
in
movsb
pusha
push
cmp
mov
xchg
xor
jge
ljmp
scas
and
sub
mov
push
call
test
sub
sbb
add
jle
jmp
xchg
mov
ljmp
cmpsl
add
into
mov
imul
and
int3
push
dec
or
push
push
and
cld
loopne
les
and
add
sbb
ret
pushf
cmp
xchg
mov
rcrb
test
inc
or
jg
ret
std
test
scas
mov
xor
mov
imul
daa
call
loopne
out
inc
nop
mov
add
pop
repz
mov
lahf
mov
popa
xchg
push
sbb
xchg
imul
into
jl
rcrl
mov
sub
jb
pop
outsl
lds
or
jl
fmull
jmp
add
push
dec
dec
stos
test
push
aad
sub
fwait
push
pop
adc
sarl
fwait
inc
imul
jb
repz
jg
fldl
out
ljmp
std
sub
nop
dec
xchg
mov
mov
adcb
repz
cmpsb
xchg
and
out
jl
lcall
out
jbe
or
dec
cmp
push
mov
ljmp
push
les
or
stos
jp
cmpsb
fcomps
and
out
inc
mov
jl
dec
inc
mov
fwait
mov
pop
out
repz
and
dec
xchg
das
in
pop
jb
inc
sbb
cmpsl
out
test
xlat
sti
mov
mov
jmp
pop
sti
sar
xor
pop
shrb
mov
xorb
addl
or
inc
xlat
cmp
fadd
inc
push
mov
mov
or
mov
or
jle
push
or
aas
sti
ret
ja
dec
dec
sub
jae
xor
jno
and
push
lea
push
or
push
mov
add
mov
cltd
fstpt
loopne
mov
out
pop
leave
mov
int
jo
arpl
dec
or
or
sub
cs
ret
test
adc
loope
imul
iret
subl
or
aad
das
sub
jmp
sbbl
mov
mov
mov
mov
rcll
int
mov
mov
lea
addr16
aam
ljmp
sub
std
cltd
fisubrl
jnp
mov
adcb
and
aaa
pop
lcall
mov
enter
push
xor
mov
sbb
push
gs
imul
add
jae
pop
push
mov
jmp
jmp
mov
push
out
lcall
ret
je
add
mov
lea
aad
jmp
imul
cmc
jecxz
call
fsubr
repnz
add
inc
mov
jmp
pop
pop
pop
leave
xor
mov
das
xor
sub
in
cmp
jp
addl
nop
mov
jno
popa
fnsave
scas
loopne
mov
xchg
mov
js
and
std
loopne
mov
pop
lret
or
add
adc
inc
outsb
les
xchg
xchg
lods
xchg
fmull
jg
push
test
cli
cs
les
push
push
shlb
enter
or
test
inc
lret
mov
adc
push
xor
mov
inc
fstp
inc
movsb
adc
sbb
ds
in
cmp
pop
mov
andb
push
out
test
fdivrp
daa
shl
imul
cmp
loop
add
aaa
pop
sbbb
addr16
xor
repz
lcall
mov
aaa
fstl
inc
jns
imul
cmpsl
dec
gs
xor
inc
out
popf
xchg
les
mov
sti
je
and
push
ljmp
frstor
cmp
rorb
mov
shrl
pop
jo
mov
test
in
cmpsb
push
das
push
jle
loope
mov
jns
jle
aam
sbb
adc
mov
push
cmp
icebp
fldl
in
rcrl
inc
repz
movsl
inc
out
sbb
arpl
lods
jb
or
lods
fildl
mov
push
shrl
enter
or
ffree
push
jp
sbb
adc
mov
call
inc
scas
dec
test
faddp
clc
mov
enter
cltd
andl
sub
pop
psubw
xchg
mov
add
push
xlat
lea
int3
fmul
adc
lods
int3
xor
dec
fistpl
jae
es
xchg
addb
std
js
cmpsl
imul
jg
ja
in
adc
jae,pn
push
sbb
mov
cmp
inc
jne
mov
popf
loopne
mov
adc
and
lret
pop
rclb
mov
or
aas
sub
mov
mov
xchg
daa
mov
push
loop
and
mov
cltd
jle
popa
dec
and
shlb
bnd
test
push
cmp
mov
jge
sti
cmp
arpl
fldt
roll
fwait
sbb
mov
sub
jnp
add
icebp
push
xor
mov
test
mov
dec
pop
cld
addr16
or
mov
xchg
mov
mov
sbb
sub
rcl
cmp
dec
aas
mov
insl
xchg
repz
add
adc
cmp
sub
push
mov
dec
pop
mov
mull
mov
inc
imul
mov
xor
cli
push
lahf
or
out
xor
jge
add
pop
shlb
sbb
push
adc
out
sti
leave
push
fistps
out
push
stos
mov
mov
out
aam
pop
loope
or
sub
pop
xchg
push
pusha
test
jne
jg
xchg
sbb
inc
mov
jnp
enter
dec
dec
push
sub
loopne
aaa
adc
and
pushf
gs
mov
int
push
mov
in
sbb
addr16
stos
or
mov
pop
sti
and
sbb
fadds
or
cltd
addr16
nop
insl
inc
push
scas
dec
loop
xchg
mov
js
jb
negb
loop
cmp
mov
adc
cmp
cld
outsl
stos
push
lock
mul
negb
enter
xchg
and
mov
in
movsb
pop
push
inc
jns
xor
je
push
dec
outsb
push
jo
inc
push
mov
outsb
mov
out
cmpsb
leave
test
cmp
adc
clc
jb
xor
or
sbb
sbb
add
aas
cmp
jnp
push
push
out
lret
fmull
rcrb
fisttpll
rorl
push
out
or
call
sbbl
insl
dec
iret
test
push
xchg
ss
fildl
adc
test
jno
imul
jno
jmp
bnd
lock
outsb
sub
pop
pop
inc
mov
rclb
fiaddl
iret
or
mov
mov
sub
ljmp
dec
nop
xchg
in
cmp
cmp
dec
pusha
push
cltd
aas
sahf
nop
mov
mov
pop
out
sub
lret
mov
enter
ja
dec
xor
int3
and
inc
pop
stos
mov
in
cwtl
mov
dec
fdivrs
movsl
and
adc
pop
pop
stos
nop
cmp
stos
imul
rdtsc
jns
aaa
mov
in
adc
aad
push
inc
movhps
sub
jo
pop
mov
add
xchg
notb
fnstsw
jae
inc
iret
lcall
and
sbb
js
scas
mov
int3
add
jecxz
and
jnp
and
fnstcw
leave
decl
jb
shlb
sbb
es
insl
cld
sub
lods
mov
std
xor
add
mov
mov
mov
mov
sahf
lods
aaa
xchg
push
imul
push
mov
movsb
xchg
pop
jmp
inc
adc
ljmp
mov
push
cmp
pop
pop
mov
movups
ja
cmp
and
sbb
sbb
inc
aad
and
mov
dec
popf
fildl
mov
cli
mov
dec
lea
decl
test
push
sbbb
cmpsl
fcoms
jge
xlat
lea
cmc
dec
dec
mov
imul
movsb
dec
jae
pop
movsb
jg
add
adcl
xor
mov
rcrl
jle
cltd
xchg
pop
rcll
cmp
mov
sarb
scas
jno
jmp
ret
int
lcall
into
cld
xor
rorl
inc
popf
fadd
icebp
add
int3
adc
sbbb
jo
shrb
add
cmpsl
mov
or
push
mov
cmp
sub
repz
xor
in
dec
lods
or
sbb
daa
mov
push
jmp
cmc
jne
inc
jb
in
loopne
scas
dec
add
in
jmp
fcmove
mov
push
mov
stos
ret
push
mov
adc
ds
cmpsl
jne
cs
mov
addb
pop
jecxz
push
cmp
stc
inc
enter
dec
mov
mov
xchg
int3
in
add
int
mov
out
pusha
inc
shl
sbb
inc
sbb
cmpsl
or
jns
out
es
aam
lcall
cli
fwait
outsb
es
outsl
xchg
inc
push
js
and
into
hlt
negl
repz
jmp
xlat
insb
test
cltd
pop
mov
mov
pop
jge
inc
lret
jecxz
je
push
cmpsb
jge
fisubrl
test
in
xor
hlt
add
hlt
jle
mov
xchg
mov
cmp
enter
ret
lock
jae
lods
addb
mov
or
data16
mov
mov
cmp
jns
xchg
lods
xor
mov
inc
addr16
out
xchg
outsl
lcall
mov
and
ja
icebp
xchg
repnz
pop
sbb
mov
outsl
shrl
adc
pop
push
jne
in
xchg
test
and
iret
mov
pop
push
pop
ror
outsl
in
dec
or
dec
es
outsb
fmuls
cmpl
outsb
push
aad
ret
fwait
jns
pop
out
lea
fbld
ds
out
mov
ja
sub
inc
xchg
mov
test
pop
mov
and
aaa
cmp
fwait
push
mov
dec
push
inc
lds
fnstenv
xorl
mov
cmp
cmpb
inc
cltd
inc
mov
push
std
xchg
neg
dec
aad
push
push
stc
xchg
in
xor
movsb
add
xchg
push
xchg
adcb
and
lock
in
mov
fistpl
shrl
lea
popa
xor
insb
in
dec
icebp
add
jb
jbe
pop
sbb
and
or
push
nop
fiaddl
aaa
sbb
sarl
push
rcrb
arpl
inc
pop
ficoms
push
ds
sub
lods
stos
std
inc
sub
mov
rcrb
lods
call
sub
mov
data16
dec
jg
inc
sarb
push
mov
adc
pushf
sar
mov
nop
aam
sub
loop
pop
dec
popa
roll
inc
cs
push
or
loope
dec
sub
mov
xchg
loope
mov
mov
xchg
sbb
sbb
cs
sbb
in
mov
in
das
subl
lods
cwtl
or
lcall
ds
adc
stc
cltd
cmpsl
insb
inc
mov
out
testb
pop
xchg
popa
shr
int
add
adc
pop
push
shll
outsl
lods
pop
pop
cld
inc
dec
cwtl
sub
out
mov
icebp
adc
cmp
outsl
pop
fs
jns
or
imul
rcrb
outsb
mov
icebp
xchg
fcomp
mov
xchg
mov
ret
inc
jae
test
pop
out
sarl
inc
mov
lock
fmul
les
jbe
or
test
mov
test
mov
pop
movsb
and
pop
jg
movsl
lret
jg
lea
imul
fsubrl
adc
movsb
je
lds
fisubrl
pop
or
int
adc
ficomps
and
clc
push
arpl
loopne
cs
or
sub
inc
push
mov
fdivp
inc
movsl
sbb
push
mov
imul
lods
stos
mov
mov
mov
xchg
cmp
dec
mov
sub
fisubrs
icebp
test
push
sbb
sub
ds
inc
popa
iret
sarl
mov
loopne
addr16
test
mov
pop
and
outsl
jb
xor
mov
pushf
push
mov
or
dec
pop
sub
mov
sub
popa
sbb
jge
sub
mov
dec
jge
sbb
negl
sub
mov
inc
mov
imul
fbstp
pop
imul
push
inc
pop
dec
fadds
repz
cmp
cmp
sahf
fistps
mov
imul
addb
sarl
movsb
stos
clc
test
sahf
push
xchg
fstpt
divl
gs
add
push
lahf
cmpl
popf
mov
add
adc
sub
ds
adc
xor
out
inc
cmc
leave
pop
je
aam
int3
sub
mov
mov
lret
aam
bound
mov
fxch
in
fwait
sti
and
mov
mov
dec
mov
loop
mov
fdivs
fmull
or
inc
jae
ja
add
or
cltd
shll
add
das
mov
and
fisubrl
jge
push
push
xchg
cmp
add
and
shl
repnz
popa
cmp
imul
lret
es
popf
xchg
ret
xchg
or
pop
test
jg
inc
les
or
popf
test
iret
and
scas
sub
lahf
sbb
cli
ficomps
jmp
sub
jecxz
cmc
xchg
mov
ss
add
aad
shlb
sbb
stc
addr16
mov
cmp
mov
je
pusha
add
pop
in
test
jge
in
push
sub
jb
stc
adc
pop
pop
cmpsl
out
cltd
lock
test
and
fwait
hlt
sarl
add
xchg
movl
cli
imul
rcr
mov
xchg
into
std
movsl
pop
or
insb
sbb
add
loop
loope
sarl
dec
daa
pop
rclb
dec
or
cmp
cwtl
sub
loopne
js
push
jmp
push
cmpl
pop
notb
mov
scas
jmp
mov
repz
cld
shl
xchg
fwait
or
lods
or
ja
adcb
out
ret
aaa
and
aaa
test
jb
or
test
inc
xor
fcomi
pop
mov
addr16
imul
jp
call
push
pushf
insb
dec
fstp
lret
adc
sbb
and
cltd
test
int
je
sub
sub
mov
jl
mov
fsubrl
sbb
je
mov
mov
aad
jge
filds
mov
xacquire
jno
fdivrs
xlat
rep
xor
xchg
pop
out
dec
jecxz
and
popf
repz
inc
jns
sbb
jnp
insl
dec
mov
inc
out
inc
fwait
or
cmpsl
lret
mov
lret
push
jmp
inc
ret
push
insb
ljmp
mov
repz
mov
pop
fs
mov
addb
rcll
or
cmp
sbb
mov
cmp
mov
testl
dec
pop
les
pop
imul
push
xchg
inc
test
jmp
jmp
dec
daa
into
lahf
lahf
xor
test
lahf
jp
jne
divl
mov
aam
stos
jbe
or
fwait
mov
jmp
cli
jb
icebp
in
push
cltd
out
ds
ds
mov
inc
fdivrl
dec
in
fstpt
negl
and
dec
fisttpll
dec
das
mov
imul
ljmp
or
jno
in
bound
jle
cmp
push
or
push
or
or
add
stc
and
imul
leave
jnp
into
cmc
movsb
sub
add
mov
cltd
es
inc
popa
or
sub
add
stc
dec
icebp
jecxz
out
mov
gs
push
in
cwtl
adc
mov
sbb
int3
cld
jge
rol
movl
stos
loopne
mov
cmpsb
movsl
sbb
mov
or
push
pusha
aaa
mov
adc
cmp
mov
loopne
pop
jmp
mov
xor
jno
dec
outsb
mov
pop
std
adc
jp,pn
rcr
aas
insb
dec
push
cmp
pop
outsb
adc
cmp
jne,pt
bound
bound
xor
push
sbb
mov
ss
mov
mov
xchg
aam
adc
sub
das
shlb
push
sbb
call
in
xor
pop
push
jns
nop
mov
incl
xlat
xchg
adc
pop
dec
ret
push
and
mov
mov
inc
loop
orb
jbe
jl
jl
outsb
lcall
pushf
pop
xchg
push
mov
lea
aaa
mov
test
mov
add
je
push
xchg
mov
lret
fcomp
stos
iret
test
xchg
jo
lret
sbb
push
xchg
push
shrl
lahf
idivb
rorb
jle
icebp
bound
scas
mov
push
xchg
mov
fidivrl
mov
xor
loopne
ljmp
loopne
inc
pop
popa
jnp
ds
daa
inc
xor
sti
sub
ja
cmp
mov
jne
cmp
rcl
add
movsb
shll
mov
daa
popf
mov
ror
pusha
shrl
pop
jg
push
push
ljmp
aaa
jno
and
les
push
aas
enter
or
dec
repz
or
fisttps
sahf
in
shll
sub
mulb
xchg
shr
add
cmp
mov
in
data16
inc
xor
dec
mov
mov
xchg
pop
mov
sbb
outsl
in
lahf
repz
movsl
ds
inc
aad
adc
lret
es
clc
mov
inc
mov
push
mov
andb
push
push
inc
pop
dec
test
addr16
adc
and
mov
cmpl
or
imul
loop
mov
mov
popa
lock
std
adc
daa
cmp
adc
decl
inc
or
pusha
jge
scas
pop
arpl
outsl
mov
push
mov
rcl
movsl
into
mov
es
mov
jbe
pop
jge
mov
xor
cmpb
pop
popf
sub
pop
jo
icebp
imul
xchg
ror
jae
and
jmp
fs
jmp
or
pop
je
es
or
pop
ljmp
mov
xlat
fisttpll
jecxz
mov
sub
adc
dec
shlb
add
dec
push
lret
inc
xchg
push
bound
push
xor
mov
xchg
into
add
enter
inc
push
inc
push
cmp
adc
out
fmull
inc
push
and
bound
or
stc
jl
roll
aaa
aaa
add
scas
push
cmpsb
mov
fisubs
arpl
dec
mov
pop
out
xlat
arpl
pop
adc
ja
sub
mov
xor
or
push
mov
mov
dec
stc
jo
jno
xchg
sbb
mov
ljmp
xchg
cs
ja
sub
sti
aam
ret
orl
adc
add
lahf
lret
ja
mov
mov
or
imul
icebp
dec
imul
xchg
pop
imul
into
cmp
loopne
lret
pop
or
ljmp
or
inc
aam
jbe
push
push
scas
dec
enter
lock
inc
or
pop
and
mov
dec
inc
bound
movsb
push
in
rcl
nop
dec
ds
je
push
dec
cmpsb
xchg
or
sahf
inc
shlb
jg
or
and
das
in
gs
push
or
scas
ret
mov
or
jne
aaa
es
test
aam
ljmp
inc
mov
push
xchg
outsb
test
out
or
sub
fstps
or
ss
lahf
mov
rcl
fldt
adc
aas
push
xchg
insl
idiv
pop
outsb
out
inc
jbe
rolb
jae
mov
mov
in
lds
add
xchg
test
rcll
xor
popa
xlat
imul
loope
xlat
push
fisubs
lds
cmp
notl
push
cmc
fimuls
xor
mov
sbb
notb
jbe
inc
aam
aad
pop
pop
and
in
sub
mov
into
and
lds
pop
mov
jp
cmp
inc
iret
jb
out
xchg
pop
orb
aas
mov
dec
bnd
outsl
adc
and
jb
out
xchg
pop
orb
aas
mov
dec
bnd
outsl
adc
and
jb
out
xchg
pop
orb
aas
mov
dec
bnd
outsl
adc
and
bnd
adc
jge
sbb
mov
mov
sbbb
int3
push
mov
sub
push
movb
call
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
mov
push
xor
push
push
lea
push
push
call
test
jne
lea
push
pushl
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
leave
ret
push
fwait
inc
je
inc
popa
aam
jmp
sub
in
hlt
icebp
loopne
xchg
movsb
xorl
jno
popa
push
adc
mov
shl
rcl
lret
xorl
in
popa
push
adc
add
xor
and
cmp
xchg
popf
fwait
loope
xchg
repz
ffree
lock
xchg
push
fs
add
adc
int3
mov
push
dec
js
and
shll
sub
and
fcoml
roll
push
les
xorb
sub
add
jno
pop
adc
lcall
lahf
shrl
jno
dec
and
test
mov
inc
mov
sbb
ss
pop
mov
and
pop
sbb
icebp
mov
outsb
movsl
rorl
xchg
scas
jno
pushf
xchg
pop
sahf
rorl
add
or
adc
mov
in
add
loope
mov
leave
mov
ljmp
inc
and
xchg
xor
movsl
or
hlt
test
adc
shlb
and
xor
fisubs
xchg
shll
xor
aam
pushf
xchg
mov
cli
adc
xor
jp
push
jae
push
insl
and
mov
cltd
mov
rol
out
xor
and
adc
or
pop
dec
push
js
adcl
clc
fucom
aam
xor
inc
xor
adc
aaa
pop
inc
add
add
adc
in
hlt
icebp
movsb
xorl
inc
popa
push
adc
xor
add
adc
in
hlt
icebp
movsb
xorl
out
js
mov
punpckhbw
je
dec
sbb
cmc
xchg
inc
cmp
in
adc
jne
dec
mov
shll
test
ficoml
movsl
mov
mov
sti
cmp
sub
out
icebp
sbb
xchg
aas
sahf
adc
push
ja
repnz
sub
xchg
fsubrl
add
js
adc
adc
jmp
xor
push
fisubrs
push
xchg
jmp
inc
not
pop
cltd
adc
cld
pop
les
push
push
andb
cmpsb
jno
cmp
sbb
and
adc
and
sub
or
mov
std
stos
inc
jl
test
fidivrl
jnp
and
mov
jne
dec
popf
outsb
test
cwtl
push
xchg
cmpsl
cmp
push
add
out
sub
fisttpl
inc
into
scas
xchg
add
push
in
insb
in
cld
shlb
sub
idiv
mov
mov
pop
and
loopne
popf
fwait
adc
adc
add
add
mov
push
stc
jo
mov
outsl
xor
add
add
xchg
lods
mov
xchg
daa
pop
in
rcrl
adcb
sbbb
xchg
mov
stos
adc
adc
pop
sbb
or
dec
insb
lods
cmp
push
dec
pop
repz
sub
aad
mov
ja
movsb
ss
pop
add
gs
and
and
push
outsb
repnz
adc
inc
pop
or
sub
mov
dec
or
mov
push
add
mov
cwtl
xlat
and
xchg
inc
and
pushf
mov
mov
add
or
js
cmp
mov
cmpsl
fisttpll
push
jp
mov
or
xchg
push
push
jbe
leave
xor
stos
dec
xchg
add
stos
std
jp
fs
xchg
sub
and
xor
movsl
mov
inc
ret
adc
jnp
nop
adc
testl
xlat
aam
cmp
xchg
mov
sbb
sbb
jo
adc
dec
pop
mov
and
mov
shlb
and
sbbl
sbb
jmp
cltd
sub
ret
and
mov
and
gs
dec
add
mov
push
lahf
int
test
in
popa
neg
jg
adc
inc
ret
pop
repnz
jmp
and
lret
cwtl
pop
or
fimuls
push
lcall
lds
int
movsb
cmpsl
stos
stc
or
pop
test
cmp
std
push
dec
in
repz
imul
repnz
cmp
enter
and
clc
bound
inc
add
jg
xor
cwtl
enter
push
xchg
lret
push
inc
push
insb
sub
push
add
jle
xchg
lods
fwait
popa
pusha
test
ja,pt
mov
rcll
imull
lods
xor
inc
aad
fcompl
sub
in
jbe
clc
lods
xchg
cld
lds
sub
ret
out
sbb
pop
shll
pop
pop
sub
leave
gs
mov
daa
xor
jne
fcmove
or
push
push
mov
xchg
pop
inc
mov
jnp
in
sbb
or
and
jno
pop
notl
push
cmp
mov
or
in
in
pop
aas
insl
sahf
fimull
pop
icebp
mov
into
sub
dec
cmp
pusha
xor
daa
mov
call
popa
sbb
sbb
pusha
in
xor
jmp
pusha
cmp
cmp
lahf
jb
jle
pop
push
cmp
mov
and
dec
aad
into
sub
aas
or
jecxz
scas
push
xorl
or
mov
push
sub
shr
fwait
xchg
jg
sub
or
sub
pop
repnz
or
push
hlt
push
and
adc
sbb
or
loop
sbb
jle
mov
and
cmp
aas
jnp
xchg
sub
aaa
ljmp
push
adc
xchg
lret
dec
fnsave
mov
inc
sub
and
mov
aaa
shrl
push
sahf
loopne
loop
inc
add
nop
sahf
fstpt
jbe
adc
mov
and
and
std
cmp
addl
or
mov
jb
or
lahf
out
ja
out
in
int
loop
add
add
out
push
or
jns
subl
clc
or
rcll
cmpsl
and
insb
xlat
insl
scas
aam
clc
xchg
and
mov
in
dec
mov
sub
jne
jb
scas
insb
sub
sbb
subb
js
jg
loopne
out
add
xchg
and
das
dec
imul
test
fisubl
notl
add
test
movsl
pop
ficoms
ss
fcoms
cmp
cltd
xlat
in
adc
mov
sbb
mov
mov
mov
cmpsb
lock
mov
hlt
pop
out
adc
cmp
sub
shl
mov
sbb
jecxz
jmp
pushl
fs
insl
sub
je
sbb
mov
sub
rolb
fsubs
out
jnp
jo
test
cs
ja
xchg
arpl
add
leave
push
jae
rcrb
mov
mov
or
out
test
mov
loop
xor
xchg
fstpl
sbb
aam
cmp
mov
pop
lret
adc
fists
jb
xor
mov
lcall
jnp
adc
add
sub
repz
ret
cmp
mov
jne
and
mov
inc
mov
iret
aam
xchg
mov
sub
fcmovu
int
popf
out
in
and
mov
jl
xchg
pop
aas
xchg
push
loop
adc
adc
mov
lock
sahf
imul
jge
mov
nop
push
push
xor
mov
jg
sahf
pusha
cmp
pushf
outsl
jb
movsb
pusha
aad
or
mov
pop
jp
jns
sub
aaa
sbb
imul
xor
push
add
add
popf
mov
push
mov
hlt
or
lret
dec
and
test
subb
and
pop
fisubl
mov
dec
xor
jae
xor
adc
loop
clc
loope
cmpsb
imul
push
outsb
sub
inc
add
iret
sub
stos
dec
pop
fwait
dec
inc
mov
push
jmp
push
cmp
mov
xchg
lret
jp
lods
js
fsubrs
xor
test
scas
in
mov
fldenv
rclb
mov
inc
call
inc
push
jmp
jl
push
sbb
pushf
pusha
sbb
cmp
leave
mov
out
mov
shlb
sbb
out
xchg
cmp
mov
xor
mov
testb
movsl
inc
jne
cli
inc
ret
pushf
pop
xchg
and
and
jmp
mov
mov
jecxz
leave
sbb
test
les
adc
pop
int3
inc
dec
out
or
adc
aam
xchg
outsl
addr16
cmp
cs
cld
add
mov
dec
and
in
loop
sub
adc
xchg
arpl
lock
cmp
jmp
test
jecxz
cld
movsl
fsts
je
icebp
mov
inc
lods
out
ja
loop
jecxz
adc
out
ror
nop
fdivp
xchg
pop
popf
scas
cmpsl
jns
outsl
fstl
jp
stos
test
dec
addr16
pop
gs
stos
test
repz
fcompl
pop
ret
mov
aam
aas
js
dec
pop
inc
add
jl
mov
into
in
das
mov
sbbb
js
cmpsl
cmpsb
std
loope
mov
test
ss
lods
add
mov
mov
adc
mov
xchg
cmp
push
lret
clc
cmpsb
mov
mov
push
xchg
pop
in
and
mov
arpl
inc
add
aad
mov
inc
xlat
fldcw
shll
jne
sub
or
fwait
lods
dec
jmp
dec
pop
pop
popf
adc
adc
icebp
in
push
xchg
and
or
scas
outsb
enter
fucomp
jl
outsb
dec
sub
daa
xchg
mov
dec
cld
in
xchg
imul
dec
fcmovnb
push
inc
jmp
outsl
mov
cmpsb
push
not
or
fcoms
hlt
test
popa
jae
adc
mov
lds
dec
cmp
es
test
mov
jb
jb
add
cld
jg
xlat
jle
xor
stos
call
dec
adc
push
mov
popa
dec
mov
enter
pop
ret
movsb
gs
and
mov
arpl
or
ja
mov
add
xor
stc
aas
inc
mov
aas
push
fldt
cmp
ror
cmp
push
inc
adc
jge
jecxz
xchg
cld
imulb
add
jno
xlat
jo
ja
lds
push
mov
std
ss
sbb
xchg
popa
or
sbb
iret
add
test
and
or
into
and
inc
enter
sarb
repz
out
imul
dec
fbld
movsb
sbb
addr16
jae
sahf
jbe
lods
cmp
les
loop
std
ss
xchg
inc
sub
fs
out
nop
xor
adc
roll
insb
adc
lds
mov
aaa
jb
das
aad
push
in
xchg
fimull
sbb
popa
repnz
fildl
jmp
out
sbb
repz
jg
lods
les
jae
test
cmp
jns
mov
jb
jns
scas
hlt
jno
or
es
inc
dec
inc
ds
cwtl
add
sub
sbb
shrl
cmpsl
movb
push
sub
insb
sbb
xchg
and
rolb
sub
je
repnz
scas
clc
fistps
jne
push
out
dec
adcb
jae
mov
rorl
cmp
jmp
mov
mov
lods
xor
jge
mov
out
imul
push
push
xor
ljmp
cmc
aas
stos
pop
sbb
fsubp
or
lahf
inc
jg
jmp
xlat
test
mov
or
cli
xchg
hlt
cwtl
cmp
incl
sti
jmp
aaa
in
sub
mov
mov
cmp
lods
mov
sub
sar
cmp
mov
ljmp
loope
stc
mov
aas
mov
imul
jle
lahf
fs
fs
mov
or
pop
aam
aas
outsl
push
aam
fcomps
pop
push
enter
mov
pusha
inc
pop
les
cli
pop
mov
or
popf
mov
out
push
stos
pop
or
sbb
les
sub
xor
and
jl
jl
test
pop
cmc
daa
sahf
inc
popf
enter
push
scas
xor
scas
mov
incb
push
test
aad
inc
push
xor
rcrb
mov
out
xlat
inc
outsb
in
or
pop
arpl
add
mov
gs
int
inc
mov
jmp
xlat
add
fwait
sub
fmull
movsl
pop
jecxz
lcall
arpl
cli
push
sub
es
out
into
filds
dec
cmp
popa
adc
dec
insl
lahf
cmp
int3
out
cltd
pusha
mov
in
jbe
das
les
jb
or
imul
stos
add
sub
inc
loopne
mov
scas
mov
enter
insl
mov
pop
jns
xchg
in
mov
dec
outsb
in
mov
jne
xchg
ja
cmp
data16
and
jbe
mov
mov
or
xor
pop
bound
dec
je
fwait
cmpsl
je
ljmp
cmp
inc
aaa
push
dec
jmp
add
push
into
les
iret
jle
mov
or
lahf
aam
imul
adc
push
mov
loop
out
repnz
and
xor
cmp
or
sbb
lods
mov
stos
lock
ljmp
push
xorb
dec
out
js
fwait
outsb
pop
imull
subl
push
and
and
push
add
push
pop
and
aad
mov
ljmp
push
rcr
call
in
loopne
fdivr
and
inc
mov
jns
jne
pop
outsb
lds
call
ss
cmp
and
sbb
cmp
arpl
ds
pushf
filds
and
lea
out
das
mov
aad
push
jae
or
xor
dec
bnd
dec
in
fsubrl
jo
insl
loope
mov
lcall
sarl
xor
dec
insl
mov
rclb
dec
adc
jo
rorb
ja
cmp
add
pusha
xchg
pop
xor
mov
movb
scas
or
aas
dec
mov
test
jnp
rolb
aaa
aad
popf
jb
mov
icebp
mov
and
xor
clc
gs
jne
mov
sub
mov
xor
insl
cld
add
cwtl
inc
mov
or
pop
jne
sti
fmull
scas
test
mov
jecxz
filds
aaa
in
fmull
push
and
mov
por
stc
les
inc
ljmp
jecxz
loopne
test
arpl
or
mov
fstps
rcl
shlb
cmp
xor
outsb
mov
stos
push
pop
cmc
jae
cmp
fcompl
inc
or
push
xchg
js
cs
mov
add
adc
inc
inc
push
lahf
test
xor
data16
loop
cmp
jno
rcll
cmp
imul
adc
push
or
dec
cmpsl
mov
push
inc
mov
sub
lahf
xorl
shrd
cmp
imul
mov
pusha
sbb
int
hlt
xchg
sti
lock
test
pop
fmuls
cs
pop
aam
std
add
add
or
xchg
sbb
dec
imul
jns
jecxz
iret
arpl
dec
leave
push
mov
pop
repz
clc
xchg
adc
loopne
push
pop
push
mov
aad
mov
clc
out
lahf
mov
int
add
out
xor
daa
and
jo
into
adc
add
sub
and
adcb
xor
push
cmp
xchg
push
push
ret
in
punpckhwd
outsl
xor
sub
xchg
adc
es
in
sub
movsb
cmp
and
dec
inc
fdivr
inc
imul
xchg
jl
ret
dec
dec
lret
sub
movsb
test
jg
dec
jne
jo
mov
pop
cwtl
pop
sbb
fistpll
cmp
cmp
cmp
cmp
dec
adc
ret
pop
stos
rcrb
cmp
jae
idivl
movsb
mov
fstps
data16
push
loop
dec
mov
das
mov
sbb
lret
jbe
jbe
or
notl
subb
rcl
roll
xchg
push
or
ds
cmp
adc
sbbl
mov
mov
xchg
dec
xor
or
loop
orl
or
ret
leave
cmpsb
movsb
inc
adc
mov
inc
dec
out
mov
xor
mov
mov
and
out
fistl
in
cmp
and
jns
leave
mov
stos
jb
lret
push
movsl
push
xor
ret
push
scas
xchg
jbe
jb
addr16
jo
push
aaa
cmp
movsb
adc
ss
mov
push
loopne
jl
outsl
jle
cmc
arpl
fwait
imul
rcr
cli
stos
cli
and
insl
es
dec
push
push
stos
and
test
call
add
iret
pop
rorl
mov
xchg
cli
jmp
test
xchg
mov
mov
mov
popf
mov
lods
pop
xor
repnz
das
push
sub
pop
sub
pop
out
rol
scas
pop
fimuls
pop
das
adc
sbb
mov
hlt
popa
mov
call
lcall
mov
stc
jne
dec
jge
adc
jb
cli
loopne
setg
adc
aaa
aas
mov
or
inc
js
std
mov
iret
int
inc
mov
inc
fstpt
inc
add
clc
adc
scas
ja
jno
aaa
imul
mov
je
pop
in
imul
or
fs
js
sbb
add
mov
pop
push
xchg
repnz
push
int3
and
adc
ljmp
aas
xchg
movsb
fsubp
add
mov
jle
test
mov
pusha
arpl
push
lret
lahf
inc
inc
divl
push
fsts
mov
pop
mov
pusha
aaa
test
or
aaa
push
das
pusha
outsb
mov
fs
jbe
iret
jbe
mov
mov
arpl
xor
or
stos
or
imul
out
pop
ljmp
stos
sub
xchg
rcrb
rcrl
inc
imul
xor
aam
les
adc
movl
jb
imul
adc
cmpsb
in
rolb
addr16
fwait
sub
add
sub
xchg
xlat
mov
xchg
jl
inc
add
bound
les
xchg
das
sub
push
fldenv
sti
loopne
rolb
test
pop
sbb
dec
mul
popa
jl
pusha
lock
scas
pop
scas
push
pop
ret
movsb
repz
xchg
test
mov
xchg
add
jecxz
or
pushf
loop
dec
adc
jbe
jb
pop
bound
fisttpll
mov
xchg
pop
jmp
xor
movl
loope
mov
pop
mov
xor
ss
es
filds
ret
or
ss
or
mov
mov
fisttps
js
in
fdivs
orb
pop
dec
pushf
hlt
inc
jo
fs
push
loopne
cmp
loop
push
pop
gs
enter
cmp
cli
push
pop
xchg
aad
sarb
jmp
rolb
push
jae
inc
ds
aaa
pop
lods
loopne
adc
fsub
push
es
lds
stc
sbb
fs
out
and
in
add
mov
xchg
mov
aaa
pop
sbb
rcrl
inc
push
mov
cmp
inc
test
clc
mov
into
and
mov
pop
jae
cs
arpl
iret
or
mov
mov
cmpsb
testb
cwtl
pop
cmpl
mov
dec
loope
xor
test
and
inc
lea
stos
cmp
repnz
push
je
xor
mov
fwait
mov
xrelease
inc
pop
mov
mov
xchg
xchg
mov
cltd
xor
lods
cmp
test
jmp
xchg
ljmp
jg
jmp
jmp
cwtl
jge
mov
pop
inc
js
xlat
rclb
imul
xchg
jnp
mov
sub
cmp
aam
mov
mov
xchg
cwtl
jl
inc
mov
test
adc
les
pop
add
loop
lods
in
and
or
fs
jns
or
in
and
in
fadd
stos
je
xor
xchg
adc
cltd
push
pop
mov
jge
sti
or
cmp
icebp
cli
ret
fucomp
mov
adc
jo
sub
stos
and
sti
jecxz
ds
cwtl
cmp
cmp
stos
mov
fcompl
mov
xor
ret
pusha
mov
adc
adc
push
scas
dec
fwait
or
sbb
fldt
pop
cmpsb
subb
mov
ret
add
sbb
sub
xchg
or
cmp
js
inc
fwait
call
scas
inc
xor
leave
outsb
inc
cmp
cmc
cmp
cmp
call
dec
call
pop
adc
jmp
jbe
enter
sbb
arpl
mov
sahf
cmc
lods
sahf
pop
stos
xchg
std
stc
xor
rorl
xchg
mov
xor
jg
sub
sub
testl
pop
fs
pop
xchg
fwait
lds
aad
jl
pop
sbb
sub
xor
cltd
sarb
js
or
popa
pop
add
cmc
sbb
push
sub
daa
add
jle
iret
lret
lahf
and
adc
xchg
mov
out
pop
and
mov
jbe
out
xchg
jle
push
subl
dec
mov
outsb
test
mov
mov
cmp
outsl
pop
mov
cs
jecxz
aam
aam
xchg
clc
sbb
mov
cmc
inc
je
movsl
insl
sbb
xchg
pop
mov
xor
scas
mov
push
and
push
cmpsl
xchg
addr16
or
loop
mov
cld
movsl
jmp
fstps
adc
adc
ret
lock
faddl
fimuls
repz
jns
jno
mov
ljmp
mov
adc
mov
dec
sub
push
mov
push
les
inc
es
add
scas
loope
cmp
ds
imull
jns
add
ss
sarb
push
xchg
insl
xchg
xor
bound
xor
pop
xor
lahf
pushf
aas
adcl
mov
lahf
mov
popa
popa
and
insl
pop
cmpsl
mov
pop
push
add
dec
movsl
es
sbb
or
xchg
add
mov
dec
fimull
or
addb
or
das
ds
out
sahf
inc
andl
pop
stos
dec
cmp
pop
sbb
dec
and
iret
enter
mov
push
ss
cmp
xlat
cmpl
dec
add
cmp
sti
inc
and
dec
mov
and
adc
cmp
fbstp
sbb
mov
mov
fst
sub
push
and
dec
fdivl
ds
jae
jnp
sub
into
ss
or
mov
sbb
aad
cmpsl
sbb
xor
fsubs
out
cmc
test
inc
push
fcmovne
inc
push
lods
mov
insb
add
dec
and
jae
cmp
stos
or
mov
pop
ds
je
inc
movsl
mov
icebp
jmp
mov
mov
mov
xchg
or
sub
xchg
pop
cmp
loopne
inc
iret
dec
imul
invd
mov
add
xchg
xchg
mov
inc
aas
notl
adc
mov
dec
lahf
call
adc
lods
ret
cmp
and
imull
rcll
hlt
lret
cmp
dec
cmp
add
mov
loope,pn
int3
jo
pop
sbb
lcall
cld
mov
jg
pop
in
stos
mov
push
pop
pop
sbb
mov
add
cmp
inc
divps
jo
sub
lret
sub
cmpsl
add
insb
push
sahf
imul
push
je
sub
adc
xor
add
adc
in
hlt
icebp
movsb
xorl
inc
popa
push
adc
xor
add
adc
in
hlt
icebp
movsb
xorl
cmp
push
xchg
and
pushf
xor
adc
cmp
hlt
icebp
movsb
xorl
inc
popa
push
adc
xor
test
adc
sbb
pop
pop
sub
dec
sarl
int3
int3
int3
int3
int3
inc
xchg
push
cmpl
mov
pop
popf
add
fldt
mov
ficoms
inc
arpl
arpl
xchg
push
orl
mov
jle
outsb
xchg
jl
fidivs
iret
inc
jae
arpl
xchg
pop
andl
mov
data16
sahf
adc
dec
icebp
adc
xchg
fisttps
repz
inc
push
imul
pushl
inc
push
testb
fnstcw
cs
ret
mov
mov
imul
mov
sbb
lret
arpl
xchg
orl
ja
in
adc
jbe
pushf
adc
out
xor
mov
sub
fisubs
pop
ret
xchg
sti
outsb
add
cmc
repnz
pop
inc
popf
mov
push
icebp
jl
dec
pop
scas
push
pop
mov
mov
jno
stos
int3
scas
and
push
jae
push
cmp
push
xchg
jno
mov
dec
sahf
jns
push
adc
inc
inc
scas
fcompl
inc
ficoms
push
jae
pushf
ficoms
cmp
jle
ja
xchg
xchg
add
push
inc
jae
and
pop
repnz
loop
xchg
and
ljmp
push
mov
stos
add
add
out
pop
sti
sub
sub
sub
pushf
jbe
jno
push
ss
aaa
ja
cmp
pop
loope
ret
jle
outsb
jecxz
adc
and
push
into
inc
jae
arpl
xchg
push
cmpl
mov
jle
outsb
jecxz
adc
and
push
into
inc
jae
arpl
xchg
int
faddl
jno
fldcw
arpl
jo
mov
cmpsb
sti
push
mov
push
or
mov
shrb
andl
insl
repz
add
icebp
out
jo
xchg
hlt
add
jb
jae
jge
mov
push
inc
sbb
add
imulb
addr16
xor
adc
cld
lcall
sbb
jmp
subl
push
xor
mov
sbb
gs
movsb
jae
and
fldcw
rorl
movntps
sarb
stc
xchg
jne
sub
imul
xor
push
leave
mov
loope
stos
push
jle
lahf
or
push
inc
xor
sbb
sarb
pop
mov
insl
jnp
add
add
and
hlt
iret
out
sub
in
pop
push
lret
stc
and
jle
lea
js
lahf
push
sub
cmpb
mov
mov
sbb
fwait
inc
adc
mov
sbb
cmp
mov
enter
outsb
add
sub
xor
nop
scas
pop
lcall
das
mov
mov
dec
or
insl
cmp
cmc
adc
add
pop
xlat
lock
mov
sub
xor
xor
fistl
out
movsb
xchg
int3
fnstsw
adc
adc
sbb
fwait
inc
test
in
stos
pop
dec
dec
out
mov
out
rorl
xor
addr16
pop
or
mov
mov
imul
fucomi
das
mov
mov
int
inc
jmp
bound
sbb
push
xchg
push
jl
jbe
divl
data16
sbb
and
xchg
cmpsb
adc
iret
sbb
dec
in
popf
sbbb
stos
rcrb
pop
xor
ss
cmp
mov
mov
sub
nop
and
push
shr
cmp
jmp
fisubrs
fimull
cmp
scas
loopne
add
push
imul
add
clc
mov
pop
je
add
lods
sbb
in
loop
lret
jo
shl
push
dec
aas
pop
int
mov
add
mov
rcr
stos
mov
or
push
shlb
pop
sub
push
add
cmp
xchg
jbe
shl
push
xchg
lods
push
popa
call
inc
out
mov
sbb
ds
test
pop
xor
imul
add
adc
ljmp
mov
pusha
sbbl
int3
out
cmp
jo
xor
jecxz
adc
pop
xor
inc
out
sub
and
mov
push
ja
and
ja
scas
jnp
and
cwtl
cmp
scas
dec
dec
xchg
int
data16
shlb
std
or
fbld
dec
jbe
mov
shlb
or
call
mov
sub
cmp
mov
sub
add
fists
cmpsb
add
je
icebp
push
sbb
jge
cwtl
xor
subl
lret
mov
xor
mov
movsl
call
xchg
lock
mov
loopne,pn
cmp
rorb
pusha
and
push
mov
mov
sarb
pop
lret
cld
and
js
jnp
inc
ja
pusha
push
and
add
inc
xchg
xor
jne
scas
and
sarb
mov
test
mov
push
lcall
lahf
mov
push
std
out
inc
repnz
jno
and
int3
mov
or
push
jp
adc
mov
adc
push
in
sub
dec
xchg
shlb
xchg
lret
fcmove
fistl
push
lcall
fldt
push
mov
lock
xor
repz
filds
jnp
pop
mov
and
inc
in
dec
or
insb
in
imul
rclb
pop
bound
mov
mov
or
les
fldt
pop
ret
mov
fldl
sbb
jle
clc
mov
ja
jmp
outsb
push
jl
or
cmp
cs
mov
mov
mov
cmp
push
out
ljmp
xchg
lods
cmc
adc
sub
cli
cmp
jne
loopne
scas
adc
lahf
movsb
stos
adc
aam
and
cltd
mov
shl
pusha
test
scas
in
cld
adc
orb
addb
mov
add
fmuls
jo
mov
stos
sub
jns
jb
cmp
sub
pop
jp
clc
xchg
add
mov
cmpsl
cltd
movsb
rclb
ret
imul
cmpsl
mov
or
pop
add
fldt
aam
or
inc
lods
test
lods
mov
xor
dec
dec
mov
aam
mov
jno
fisubrl
sub
inc
cmp
xchg
dec
xchg
loope
dec
sub
ljmp
dec
cmpsb
arpl
xchg
mov
aad
push
jp
mov
xlat
scas
and
or
sub
fcmovnu
jb
xchg
sbb
jmp
lretw
sarl
xor
or
fnstsw
out
movb
insl
aam
push
addr16
mov
push
test
nop
mov
push
push
push
pop
jo
dec
push
sbb
roll
inc
lods
and
push
jge
mov
in
push
mov
add
dec
es
imul
or
lds
mov
add
bound
out
in
jge
mov
in
sbb
mov
test
mov
xor
nop
inc
arpl
xchg
dec
fnsave
push
icebp
fisubrl
pop
xor
add
mov
fldenv
dec
je
rorb
das
andl
mov
or
push
jbe
out
push
cmpsl
xchg
adc
mov
adc
push
xchg
push
sbb
hlt
pop
enter
sbb
pop
cmpsl
mov
jecxz
cwtl
shlb
daa
add
or
adc
hlt
daa
pop
push
cmp
pop
das
sub
mov
mov
outsl
dec
subl
inc
xor
mov
xchg
pop
mov
loop
sarb
jb
jo
jnp
jg
in
cmp
xchg
outsb
hlt
or
sub
in
call
adc
inc
cmp
xor
add
and
inc
out
xor
test
add
jns
adcl
popf
jecxz,pn
ljmp
add
int3
pusha
jecxz
mov
addr16
or
movsl
stc
dec
xchg
clc
lods
jmp
inc
insb
cmp
hlt
sbb
mov
add
mov
mov
scas
and
dec
mov
sub
xchg
std
jno
lea
mov
iret
inc
lcall
pop
call
dec
stos
dec
or
sub
shlb
pop
movsb
pop
outsb
ja
fstps
mov
mov
dec
fsubrl
fsubrl
cmpl
mov
daa
lock
psadbw
sbb
out
fisubs
or
out
or
stos
shr
pop
xor
lret
mov
mov
mov
mov
mov
and
dec
cmp
pop
jge
ret
call
push
pop
stos
and
xchg
scas
sarb
sub
or
jo
stos
nop
fdivp
scas
sub
jb
shrl
xchg
and
or
inc
xchg
xchg
outsb
and
push
ret
fs
cs
mov
mov
adc
mov
dec
lahf
addb
mov
sbb
jp
leave
call
notb
rcrb
push
sbb
das
sub
gs
xchg
pop
in
outsl
sysret
movl
mov
lods
bound
insl
insb
mov
mov
inc
push
test
repz
jnp
mov
mov
cmp
cmp
test
inc
ret
scas
fadds
movsl
sti
insb
jae
les
out
es
pop
xor
sub
or
add
lock
dec
jbe
cltd
dec
fdivs
scas
addr16
lahf
cmp
dec
jle
jp
fs
stc
test
decb
in
xor
dec
divb
mov
mov
or
or
out
enter
insl
aad
mov
push
pop
test
xchg
sub
repnz
pop
xchg
fidivl
das
xchg
in
punpcklbw
fsub
ja
adc
sub
xor
hlt
pop
pop
and
lds
rorl
jne
push
rorl
jbe
stos
not
xchg
stos
mov
dec
testl
pop
cmp
int
mov
rcl
lds
cmpsb
mov
or
jge
imul
sbb
data16
adc
pop
scas
pop
push
cmp
shll
loopne
fs
and
xlat
fiadds
push
mov
adc
scas
inc
mov
dec
push
pop
jbe
xchg
adc
scas
pushf
mov
imul
sbb
dec
stos
mov
repnz
fstpl
mov
sbb
dec
cli
mov
out
jecxz
or
repz
clc
aam
pop
pop
pop
lds
icebp
addl
push
pop
loopne
call
jb
cld
inc
add
adcb
sbb
sbb
sbb
lock
lret
div
push
jg
in
mov
push
ja
adc
ds
not
mov
loop
mov
in
jg
xor
or
add
lcall
sbb
mov
push
sbb
ja
cld
pusha
xorl
lock
out
faddl
jmp
fstps
jge
ds
dec
lea
mov
jns
mov
xlat
aam
pop
push
adc
mov
cmp
pop
add
adc
and
arpl
push
mov
jecxz
lahf
icebp
bound
mov
adc
dec
mov
lahf
jge
adc
push
sbb
ljmp
jmp
rorb
mov
xchg
add
cmpsb
xchg
or
pushf
minps
out
dec
xor
notb
roll
mov
mov
test
xchg
idiv
dec
test
sub
xchg
sub
stos
xchg
push
fwait
cld
xchg
es
inc
inc
mov
pop
imul
jmp
arpl
pushf
jle
and
loopne
in
ret
cmp
inc
add
push
cltd
cmp
hlt
dec
sbb
xchg
xor
movsb
push
xchg
aaa
push
loop
movsl
ljmp
and
mov
es
aad
stc
jg
lcall
test
lods
pusha
sub
test
xor
in
loop
out
cmp
mov
imul
pop
pop
lea
shrb
sub
push
dec
aaa
pop
sti
stos
jo
mov
xchg
inc
outsl
aas
mov
sub
aaa
mov
add
dec
inc
ret
nop
in
sub
or
popl
test
mov
jge
pmaxsw
sbb
ljmp
jbe
inc
mov
push
mov
mov
add
rorb
jbe
scas
fcmovbe
gs
out
fidivs
pusha
jmp
dec
xor
test
dec
fildll
movsb
pop
lock
sbb
cld
dec
repz
aaa
sahf
and
mov
xchg
mov
push
mov
repz
jb
ficompl
xchg
pusha
mov
mov
imul
lods
mov
mulb
push
icebp
sahf
pop
enter
push
or
or
dec
push
dec
enter
adc
push
lret
or
lods
add
xchg
roll
jmp
negl
dec
cli
pop
push
mov
hlt
and
add
sub
leave
jle
xchg
test
fsub
mov
add
imul
pop
sub
xchg
mov
mov
bswap
test
enter
cmp
mov
mov
pop
repz
scas
push
int
pop
inc
adc
out
dec
orl
inc
test
test
pcmpeqb
inc
xchg
sub
jge
aaa
stc
ja
pop
dec
icebp
out
pop
orb
lret
test
inc
pop
jne
cmp
inc
stos
jae
fiaddl
sbb
push
adc
inc
fisubs
imul
scas
jbe
lahf
aad
fiadds
inc
pushf
xchg
mov
mov
adc
mov
push
pop
cmp
xchg
fimuls
inc
shrl
inc
mov
adc
adc
imul
imul
mov
lret
add
enter
cltd
mov
lods
jns
sbb
inc
es
dec
jg
in
or
sti
push
movw
addr16
and
mov
adc
ja
fildll
js
sbb
data16
mov
inc
movsb
psraw
lods
test
or
and
mov
scas
negl
inc
mov
sahf
mov
cmpsl
shl
add
pop
repz
in
icebp
inc
jne
data16
push
fs
adc
xor
cmp
jbe
or
jns
test
inc
fadds
test
pop
das
xchg
mov
xor
insl
dec
call
mov
cltd
xchg
fstpt
nop
lahf
mov
aaa
notb
insb
mov
mov
inc
and
lock
enter
or
shlb
dec
outsb
pushf
aaa
dec
sub
insb
sub
lea
mov
jg
push
int3
dec
lds
je
dec
ds
mov
lea
xchg
mov
cmp
loopne
jae
dec
or
pop
add
jecxz
xchg
xchg
mov
roll
or
add
inc
shl
dec
or
dec
ret
sub
xchg
inc
das
inc
mov
aaa
in
jl
add
pop
js
lret
repz
std
sar
out
jmp
cmp
cmp
inc
int
jo
jg
push
imul
aad
push
test
inc
mov
and
outsb
or
mov
add
gs
pop
jnp
mov
pop
push
mov
enter
outsb
sbb
outsl
addr16
add
bound
jge
mov
dec
mov
out
inc
xor
push
test
cmpsl
sbb
stos
es
decb
push
xchg
add
iret
int3
pop
hlt
pusha
xor
imul
dec
sbb
pop
pop
fildl
mov
leave
mov
mov
pushf
sbb
xor
pop
pushf
xchg
pop
dec
pusha
nop
xchg
fmuls
sbb
iret
jp
dec
arpl
lcall
cmp
fidivrs
movb
insl
fidivs
cmp
sbb
mov
sahf
sbb
sarb
ja
mov
pop
mov
pop
sub
cmc
test
sahf
inc
hlt
das
popa
mov
or
pop
daa
adcb
fs
data16
add
dec
lea
inc
or
mov
in
adc
orb
popf
movsb
dec
mov
loopne
sub
cs
pop
xor
retw
mov
fs
sbb
imul
popa
push
mov
mov
popa
icebp
stos
outsb
les
cmp
stos
xchg
cmpsb
mov
stos
mov
scas
and
xchg
mov
shl
cmp
cmp
stos
cltd
and
in
pop
lds
shrb
or
inc
loope
xchg
xchg
inc
inc
in
in
and
cli
arpl
shll
or
xchg
das
sbb
inc
pop
mov
movb
int3
hlt
cmp
mov
push
mov
ret
jno
push
xchg
sbb
icebp
sbb
lahf
mov
out
xor
dec
mov
ret
mov
xor
cld
pop
dec
outsb
enter
xchg
and
enter
rclb
sbb
cmpsb
lock
cmp
nop
orb
jno
loop
out
mov
mov
mov
pushf
idivl
test
push
loopne
arpl
subl
sbb
xor
mov
bnd
in
sbb
mov
sub
in
jge
jg
stos
lret
notb
lods
xchg
and
leave
mov
xlat
out
mov
stos
jo
pop
imulb
jp
xor
sahf
rolb
cmp
icebp
enter
xor
pushf
cltd
les
or
jmp
jmp
nopl
push
sbb
sbb
in
cld
outsb
jecxz
sub
add
aas
nop
jl
dec
in
inc
rolb
ss
into
or
js
push
in
out
imul
sub
sub
into
std
or
mov
mov
dec
scas
jg
push
cmp
test
mov
ja
or
enter
nop
pop
mov
add
pushf
sbb
and
add
adc
xchg
add
mull
mov
fmuls
jnp
dec
inc
test
push
and
adc
data16
ret
repz
dec
lods
movsl
cmp
cmpsl
in
mov
dec
adc
inc
add
cltd
idivw
or
jmp
fcmovnbe
dec
inc
mov
rcl
aas
scas
imul
mov
ds
shll
sti
out
ret
pop
fwait
and
xchg
xlat
adc
mov
cmp
sbb
sub
test
and
pop
out
mov
xor
or
daa
and
aad
icebp
in
cs
jo
cli
push
filds
ss
mov
add
imul
cmpsl
mov
adc
jp
xor
jae
popa
mov
add
insl
lret
cmc
add
stos
push
jbe,pn
in
fldt
inc
dec
jmp
push
dec
shl
pop
inc
std
imul
outsb
cs
outsl
add
mov
and
andb
out
out
or
mov
or
mov
jb
ss
xchg
adc
push
sar
mov
ret
mov
in
fcomps
mov
loopne
sub
incb
dec
push
inc
pop
cmp
or
cmpsb
jno
push
repnz
daa
jl
pop
out
mov
jbe
test
pop
scas
inc
ja
cmp
mov
stos
xor
addr16
add
pop
lahf
push
push
adcb
cmp
inc
mov
aaa
sti
and
and
cmpl
xchg
xor
mov
add
mov
xorl
fs
lods
dec
add
clts
xor
test
pop
adc
mov
xchg
add
into
andb
ret
dec
mov
sbb
mov
fdivl
insl
loop
jl
shll
ja
jns
mov
ret
mov
js
mov
les
int
cmp
jmp
loop
jo
int3
dec
and
popa
mov
cli
and
test
shl
mov
sub
xchg
into
lods
push
and
xchg
in
add
call
sbb
dec
dec
fistl
lds
xchg
mov
fisttpll
loope
popa
fcoml
ret
in
ds
insl
imul
jge
outsb
scas
lea
dec
out
loope
mov
fisttpl
sub
pop
or
pop
nop
adc
mov
mov
mov
stc
fadd
mov
pop
test
and
lock
stc
push
pop
lret
clc
push
mov
mov
cmp
inc
insb
push
xchg
fisubs
cmc
pop
inc
rorl
cmp
sub
cld
outsl
mov
cmp
lret
dec
push
xorb
sbb
shrl
xor
jmp
xacquire
loopne
mov
jge
push
scas
lcall
xchg
xchg
push
jae
ss
sbb
pop
push
sub
cmp
popw
lods
add
test
shll
roll
lret
scas
enter
scas
mov
jmp
inc
lret
or
lods
lods
fs
and
dec
maskmovq
negl
icebp
jp
mov
adc
ss
in
adc
xor
in
jecxz
outsl
test
inc
into
insl
jmp
arpl
xchg
sub
jne
sbb
xchg
enter
int3
testb
mov
mov
jg
fimull
fidivl
lret
mov
or
in
add
jae
xchg
pop
int
hlt
test
mov
loopne
pushl
popa
push
outsl
cmp
dec
push
mov
push
test
xor
scas
adc
loop
cmp
adc
or
imul
imul
push
and
xor
mov
test
pop
jbe
inc
cld
xchg
daa
and
jecxz
jo
mov
dec
add
sbb
xchg
xlat
adc
arpl
inc
call
mov
in
ss
clc
and
repz
jle
push
into
xchg
adc
adc
int
inc
sbb
cmp
mov
jle
in
push
test
mov
mov
xchg
cld
cwtl
adc
pop
lods
xchg
jnp
push
movsl
loope
and
das
lret
jmp
adc
sbb
push
xchg
mov
inc
sarl
iret
mov
jne
test
inc
adc
into
cmp
inc
push
mov
pop
adc
xchg
out
add
push
mov
inc
movsl
xor
jp
sbb
xchg
test
sti
rcrb
push
inc
jns
xchg
scas
test
into
sti
adc
aas
stos
out
push
pushf
mov
inc
push
sbb
inc
mov
fisubrs
mov
or
xlat
cmp
cmp
shlb
sub
pop
fwait
imul
cmpsl
inc
push
cmpsb
mov
out
push
add
test
push
push
dec
jb
filds
jnp
or
scas
pop
outsl
sbb
cmp
jae
push
mov
insl
sub
shlb
cs
in
rcl
push
or
push
xchg
mov
jne
add
jle
and
shll
test
jg
out
push
pop
movsb
push
rcrb
out
mov
in
scas
subb
jo
out
outsb
ret
inc
pop
add
push
mov
and
push
insb
jns
inc
push
out
lahf
jg
std
mov
pop
adc
push
mov
cmp
sbb
sub
mov
mov
mov
pushf
test
mov
pop
lods
mov
shr
add
sahf
dec
repz
mul
ret
cmp
sarb
out
lds
insb
into
icebp
pushf
lock
sub
lds
and
ficoms
adc
xor
ljmp
push
dec
jmp
jg
aam
or
shrb
cmp
shl
out
sub
ret
push
arpl
inc
mov
pop
adc
jl
pop
or
push
add
arpl
xchg
les
fwait
addr16
push
push
or
fisubl
daa
out
jns
sarb
cmove
mov
test
icebp
dec
lcall
pusha
xchg
inc
jmp
or
pushf
into
mov
sbb
add
jmp
mov
dec
push
adcb
lock
in
adc
in
xchg
int3
cld
rolb
adcb
inc
js
jle
daa
dec
jge
loope
push
inc
or
pop
cmp
or
sbb
dec
sbb
dec
push
nop
xor
sarl
sti
cmp
xor
pop
mov
outsl
pop
inc
inc
jno
scas
iret
mov
out
mov
fbstp
outsb
aam
out
xadd
mov
dec
into
cmpsb
xchg
arpl
mov
cmpsl
fs
ds
outsl
ja
or
mov
jle
outsb
jecxz
adc
and
push
into
inc
jae
arpl
xchg
push
cmpl
mov
jle
outsb
jecxz
adc
and
push
into
inc
jae
arpl
xchg
push
cmpl
mov
jle
outsb
jecxz
adc
and
push
lret
jae
arpl
xchg
cmp
pop
rorl
repz
and
jno
adc
scas
push
test
mov
pushf
int3
int3
int3
int3
int3
push
mov
sub
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
mov
push
push
call
mov
call
push
push
pushl
mov
pushl
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
call
push
mov
call
xor
leave
ret
stos
imul
push
mov
fdivrl
clc
or
sbb
imul
cltd
stos
imul
sub
or
insl
sub
cmp
or
sbb
imul
mov
stos
jo
pusha
mov
inc
jmp
sti
and
adc
add
jmp
jle
imul
int
sti
xor
fbld
repnz
lods
clc
and
push
mul
xor
mov
int
push
lock
imul
pop
sti
lret
xor
xchg
push
mov
cmc
cltd
in
cmp
jnp
sbb
cmc
rcll
loope
rolb
mov
cmp
sbb
lock
mov
stos
aaa
pushf
xchg
pushf
or
jge
pushf
fisttpl
mov
ljmp
cmp
jbe
mov
in
xchg
mov
sub
aaa
add
sub
nop
pusha
cmp
pop
sbb
xchg
inc
or
shlb
dec
insb
cmpl
popl
pop
lahf
push
push
fwait
pop
jmp
sti
cmp
or
add
jmp
sbb
imul
cwtl
into
imul
cmp
sub
pop
xchg
js
pop
mov
cs
cmc
fldl
iret
adc
cmp
mov
mov
mov
sub
pop
pushf
jbe
sbb
pushf
fstps
mov
int3
imul
cmp
or
sbb
jmp
sbb
imul
cltd
stos
imul
cmp
or
sbb
jmp
sbb
imul
cltd
stos
imul
pop
cmp
outsb
faddl
orb
inc
mov
aad
ret
lock
pop
xchg
jne
lret
ja,pn
jns
aad
push
xchg
inc
jg
cmovnp
popf
mov
xchg
lret
xchg
repnz
in
and
dec
sbb
cmpsb
cmp
jno
jecxz
mov
lret
push
into
hlt
arpl
sahf
pop
int3
cmp
cmp
dec
and
orb
fwait
subb
fisttpll
pusha
add
and
sti
in
loop
sub
cmpsb
fmuls
repnz
or
mov
sbb
std
nop
mov
and
ss
push
and
rcrl
jmp
mov
rcrl
sbb
data16
pop
fisubrl
nop
leave
xor
pusha
nop
pusha
out
mov
mov
arpl
sub
xorb
mov
cmpsb
sti
xorl
adc
push
lahf
and
notl
cld
pop
jl
mov
es
mov
in
daa
scas
jmp
testl
sbb
mov
xchg
mov
inc
pop
xor
ja
cmp
dec
fisttpll
or
bound
out
jnp
xchg
and
sbb
adc
aas
or
xchg
ds
imul
aaa
sbb
sub
mov
sub
lock
pop
jae
out
mov
push
stc
mov
lahf
mov
sti
mov
lods
fsubp
add
sbb
lods
push
add
adc
and
lock
into
fcom
cmp
jl
or
xlat
adc
mov
and
jnp
mov
arpl
rcrl
mov
xchg
fnop
popf
mov
in
test
mov
into
push
std
jecxz
mov
jecxz
mov
into
jmp
mov
mul
fwait
rcrb
fisubrs
icebp
les
add
push
test
aam
andl
fildll
sub
or
out
std
xlat
mov
sbb
xchg
inc
mov
cwtl
rcl
xor
pop
sub
push
jbe
dec
sbbl
cmp
jge
insb
dec
repz
mov
xlat
add
cmp
ds
mov
les
ds
xor
loopne
movsb
pusha
popa
mov
test
sti
inc
mov
es
inc
aaa
mov
or
and
int
repz
std
insl
push
inc
xchg
sub
pop
pop
push
cmpsl
decl
xor
mov
scas
loop
xor
cmpsb
and
add
xchg
or
pop
popa
and
mov
stos
lahf
push
nop
xor
push
mov
frstor
pop
adc
jno
inc
popa
loopne
xchg
fld
mov
lods
pop
push
movsl
adc
scas
pop
lods
data16
lds
and
popf
dec
inc
xor
pop
pop
push
rcrb
jg
arpl
add
and
mov
ror
mov
pushl
lock
call
sti
fidivrs
loopne
gs
inc
aaa
test
mov
mov
ret
stos
push
shlb
cmpsb
cs
jbe
mov
pop
popf
jno
cltd
popf
jmp
lods
out
push
jmp
jns
xor
fsubr
inc
popa
xor
pop
lahf
mov
sbb
loope
ds
ret
ss
repz
inc
cmc
fs
rorb
cmpsb
lods
out
ret
mov
jno
lret
lds
pop
mov
ja
push
das
xchg
push
rorl
dec
ret
stos
stos
push
sbb
dec
mov
mov
lods
cmp
and
out
inc
xchg
pop
mov
daa
in
out
xlat
pusha
sub
data16
scas
js
aad
nop
sahf
hlt
jle
xchg
mov
push
fstpt
xor
fs
test
arpl
and
icebp
pushf
test
lcall
fdivrl
daa
sbb
rol
insl
outsl
pop
lret
loope
jge
mov
fimull
sbb
xor
sbb
ds
mov
gs
adc
ds
cmc
das
sbbl
mov
loop
jmp
ljmp
lahf
sbbl
or
andb
mov
and
bnd
fs
push
jnp
stos
add
orl
cmp
cmp
sti
cwtl
or
adcl
test
and
fisubrs
jo
je
mov
cmp
mov
shll
mov
mov
fmull
or
loopne
insb
out
mov
adc
push
push
cmp
jns
xchg
sub
lahf
in
mov
xchg
and
sub
adc
shl
sahf
mov
push
lcall
mov
mov
inc
cld
fdivrl
ds
mov
add
shll
or
pop
loopne
int
mov
outsb
repnz
inc
cmp
mov
and
cs
dec
aam
aad
pop
cmp
xchg
sub
jae
popf
xchg
push
lods
and
pop
jo
cmpsb
cmp
lahf
js
dec
adc
xor
dec
sub
into
or
jle
out
in
mov
cmp
mov
imul
popa
cmp
mov
xchg
icebp
loope
imul
push
cli
dec
xor
cs
stc
mov
fisubrl
add
hlt
jns
mov
mov
mov
call
or
test
or
ret
daa
push
out
outsb
fisubl
insb
pusha
test
jmp
xchg
push
jmp
cs
js
add
push
xchg
ficoms
jae
outsl
xchg
lret
push
push
into
inc
shlb
mov
sbb
cmp
pop
sub
jg
xchg
jo
aam
push
xchg
add
mov
and
jno
aad
cmpsb
jg
mov
mov
jae
in
ss
add
lret
out
lret
push
aam
mov
add
adc
ljmp
adc
data16
inc
cmp
pop
lock
leave
rcr
stos
xlat
loopne
bound
and
jno
popf
inc
insl
jae
shrl
iret
test
dec
clc
test
inc
in
orb
imul
out
jne
add
les
call
jl
mov
pop
sub
addr16
jo
ss
sub
test
pop
leave
pop
in
pusha
ret
cmp
dec
les
icebp
push
add
or
adc
repz
fs
xchg
nop
mov
movsb
into
popf
das
mov
jl
push
mov
cmpb
or
and
push
dec
and
gs
dec
fcomip
or
jge
ret
nop
leave
mov
cmp
pop
xchg
mov
js
pop
and
mov
cmp
mov
dec
xlat
rcrb
xor
adc
sub
scas
xchg
xor
cld
ret
adc
mov
jg
dec
dec
add
mov
xor
xchg
lret
inc
arpl
mov
sti
push
sbb
je
mov
testb
xor
mov
ret
fisubs
pushf
cli
add
in
pushf
lahf
xor
sub
cmp
jo
cmp
jge
out
stos
outsl
push
xchg
fcomps
das
mov
mov
imul
jbe
imul
or
std
adc
adc
fwait
lret
pop
and
sbb
iret
data16
test
insb
je
mov
popa
jns
ja
lcall
push
ss
in
popa
mov
aam
les
fidivs
xor
xor
in
outsl
das
jae
xlat
popf
nop
xchg
out
and
in
daa
dec
rorb
adc
in
aad
jbe
and
xchg
enter
inc
int3
xor
ror
aam
loop
scas
push
rcrl
dec
and
pop
adc
sbb
mov
fwait
mov
jp
aad
push
inc
sbb
xchg
rorl
xchg
je
daa
mov
jb
test
aaa
test
int
and
stos
movsl
out
mov
mov
mov
jno
pop
stos
and
js
sub
shl
pop
test
cmpb
jmp
addr16
repnz
mov
lds
or
jl
test
pop
dec
dec
cmpsb
and
sbb
adc
icebp
mov
push
lea
xchg
mov
ja
mov
cld
xor
das
jg
mov
mov
jmp
cmp
mov
inc
or
movsl
rcll
cmp
inc
or
cmpsb
mov
sbb
ljmp
jge
repz
aaa
lods
sbb
jae
xchg
dec
out
push
mov
fnstenv
ja
pop
dec
testb
add
or
jno
cltd
pop
mov
jns
jno
gs
pop
loope
mov
mov
lahf
mov
fsubrs
inc
scas
pop
setnp
lods
adc
jne
insl
jno
sbb
sub
test
cmpb
mov
scas
std
push
enter
cwtl
cli
push
xchg
int3
mov
ss
arpl
mov
inc
cld
cli
test
and
jmp
incl
pop
or
das
mov
pop
cld
pop
mov
dec
sub
fldt
loopne
ss
push
shl
lea
pop
push
dec
xlat
int
enter
dec
add
scas
negl
and
gs
dec
push
loopne
ds
jno
test
mulb
sub
mov
ss
pop
arpl
das
pop
push
pop
jle
test
mov
and
mov
aam
fnstsw
clc
lods
testl
or
mov
lods
shrb
sub
add
call
mov
or
inc
fcompl
popa
das
fsubr
mov
movsl
bnd
and
leave
imul
cmp
xor
into
sbb
mov
mov
and
cld
xor
cltd
movsl
lahf
mov
fsubrl
into
mov
jle
leave
mov
repnz
jmp
mov
outsb
xor
or
jnp,pn
movl
std
cmovp
mov
stos
and
iret
push
movsb
pop
mov
push
add
es
pop
aaa
jl
push
mov
js
push
push
loop
push
popf
outsl
dec
and
rcrl
stc
mov
adc
hlt
adc
jl
sub
sbb
add
or
lea
insb
lret
fs
sub
ss
mov
fcmovu
push
sahf
jne
out
sti
or
pop
lcall
push
adc
aam
xlat
int3
mov
dec
es
popa
inc
pop
or
addr16
xorb
loope
scas
jle
push
or
loopne
push
outsb
je
into
in
sahf
push
cli
scas
pop
inc
xor
sarl
mov
popf
stc
rcll
jb
cwtl
repz
dec
pushf
insl
ljmp
mov
inc
shlb
loop
mov
xchg
mov
pop
pop
inc
clc
test
mov
add
cmc
sbb
test
xchg
fs
push
shlb
gs
addb
xchg
and
gs
adc
jg
push
pop
jnp
sbb
inc
sbb
sbb
push
stc
jmp
outsl
push
loopne
in
orb
popa
pop
or
xchg
addr16
dec
cmp
out
inc
mov
repz
rcrb
mov
popa
insl
lret
xchg
add
lcall
add
dec
mov
cmp
jmp
mov
inc
add
pop
fidivl
arpl
pushf
add
stos
mov
std
mov
cmp
push
repnz
outsb
mov
sbb
test
fcoml
xchg
xorb
jecxz
push
mov
mov
repz
mov
xchg
mov
lds
mov
xchg
adc
aaa
fwait
cmp
jae
jne
add
mov
or
daa
in
or
sarl
cmp
mov
xor
aas
js
mov
stc
sbbl
sub
cmp
les
rcll
fdiv
ret
out
aas
xchg
sub
jno
fdivrs
adc
lods
jge
rorb
inc
leave
adc
jns
adc
mov
ds
int3
jbe
add
cmp
lods
gs
call
test
mov
pop
cmc
orl
in
pop
xor
clc
pop
dec
loope
and
shll
and
sub
sbb
jg
xor
jns
jne
mov
mov
mov
stos
and
jmp
xor
fistl
mov
xor
fwait
jmp
sub
or
in
fimuls
xchg
mov
jb
lea
adc
test
mov
je
fucom
mov
jbe
movsl
popf
lret
insl
mov
mov
lret
clc
fnstenv
incl
neg
xchg
push
jmp
jnp
ja
mov
aaa
xchg
movsl
sub
xor
lcall
jne
mov
sti
and
or
mov
push
es
inc
jecxz
xchg
loope
rolb
std
int
sarl
leave
xchg
repnz
test
aas
addb
pop
cs
popa
gs
hlt
xchg
jg
pusha
bound
les
js
add
push
pop
clc
dec
push
mov
lock
or
mov
sti
pop
xchg
shlb
adc
mov
loop
mov
push
pop
dec
pusha
enter
xchg
mov
push
shr
add
mov
xchg
xchg
out
pop
mov
mov
or
add
mov
inc
or
aad
cltd
fs
leave
fdivs
jns
pop
mov
sbbb
inc
xor
cmp
testl
aam
sbb
xchg
cmc
inc
hlt
lods
mov
sti
pushaw
adc
ficoml
jns
ljmp
clc
lret
inc
add
pushf
subl
sub
shlb
push
push
in
xchg
fwait
outsb
add
cli
stc
ss
mov
mov
fnstcw
mov
jp
lods
arpl
test
movsb
pop
popf
pop
sbb
ret
subl
std
aad
and
push
inc
sbb
push
enter
js
sub
clc
leave
lea
sahf
or
lods
scas
ss
sarl
xor
push
outsl
mov
out
push
pop
lret
into
mov
add
mov
or
data16
inc
in
pushf
call
cmc
adc
mov
movsl
bound
sbb
pop
movsb
add
pop
cmpsl
xchg
clc
into
sbb
out
jl
push
ds
ss
adc
xchg
sbb
test
popa
outsl
mov
add
outsb
xchg
cwtl
clc
stos
mov
xchg
data16
mov
movsl
pop
fwait
rcll
fldenv
aas
hlt
ss
mov
and
cmp
negb
int3
stos
xchg
popf
sbb
movsb
or
cmpsb
mov
or
int3
leave
fmuls
xor
xchg
pop
add
sbbb
or
dec
in
push
popl
ljmp
dec
and
dec
sub
add
mov
sub
shll
push
add
in
mov
rorb
hlt
xchg
dec
js
fistpl
sahf
push
mov
push
fstl
daa
mov
add
ret
push
jmp
testb
fadds
inc
push
jae
and
mov
push
and
inc
cmp
pop
fldcw
stc
jl
out
cmp
mov
pop
pop
push
mov
sub
sti
notl
addb
aaa
shr
movsl
inc
mov
jecxz
jne
cmp
push
movsl
test
sbb
push
pop
pop
stos
xchg
lods
ds
mov
imul
dec
jbe
cmp
and
enter
out
and
test
xchg
popa
fwait
es
mov
popa
xlat
ljmp
mov
lret
mov
pop
xchg
and
mov
and
dec
dec
repz
out
jmp
xchg
inc
or
movsl
push
and
and
mov
loop
fcoml
sbb
sbb
add
mov
lock
push
cltd
int
pop
bound
xlat
cli
inc
out
insb
or
out
sub
and
push
test
out
es
pop
push
or
mov
push
subb
mov
test
inc
dec
xor
rol
insl
pop
inc
mov
fcoml
dec
cwtl
fmull
call
add
mov
insb
push
mov
add
mov
xchg
mov
loop
sub
xchg
mov
enter
and
pop
into
jb
dec
out
push
shrb
cmpsl
ret
inc
lods
mov
rcr
jno
test
stos
cmpsb
fwait
adc
ja
loopne
cmpsl
jmp
mov
mov
push
imul
mov
stc
pop
mov
xchg
repnz
add
scas
pop
repnz
mov
sub
ret
jmp
shrb
sub
fdivl
add
je
mov
cmp
add
lds
idivb
lcall
loope
pop
iret
cs
aas
sti
aad
adc
lret
lret
mov
sub
call
hlt
mov
and
pop
mov
xor
lds
add
sub
lea
xchg
mov
pusha
ret
mov
push
arpl
outsb
sbb
insl
push
fldl
fs
pop
movsl
push
mov
xchg
add
jno
dec
pop
test
js
push
sub
sbb
sub
in
push
int
js
sbb
std
dec
cwtl
in
and
push
dec
aam
ja
jae
loopne
sub
mov
repz
inc
sbbl
icebp
out
bound
adc
in
loop
xchg
data16
pop
insb
or
xchg
into
dec
fwait
ja
fcmovbe
xchg
lods
insb
sahf
das
pop
xchg
pop
gs
jne
dec
pop
push
mov
xchg
out
pop
mov
popa
mov
push
add
xor
out
movsb
popl
cltd
es
add
mov
xchg
mov
je,pn
cmp
clc
sub
adc
lock
jp
cld
cwtl
pop
outsl
icebp
mov
sahf
cli
fsubs
iret
test
iret
xchg
add
push
sbb
xchg
ss
and
dec
fisttpll
mov
ss
xchg
mov
and
fsts
ss
rcl
dec
les
pop
xorb
arpl
push
test
jbe
lods
jnp
xchg
in
movsl
adc
xchg
push
pusha
enter
lahf
sub
cmp
hlt
mov
in
lahf
jnp
in
jae
or
ss
cmp
xlat
pop
fcoms
sub
inc
popa
sub
adc
add
aas
popf
in
movl
or
fmuls
xchg
or
mov
and
mov
pop
andb
jns
in
aam
xor
jle
bound
jmp
nop
push
in
rcrb
bound
lahf
jbe
fistl
rolb
negb
mov
sbbl
mov
mov
in
push
pop
sbb
out
outsb
arpl
call
xchg
aam
in
add
jg
int3
gs
sbb
mov
enter
ret
mov
push
sbb
adc
pop
pusha
ss
adc
push
scas
sub
imul
test
mov
lret
mov
inc
or
dec
xor
aaa
mov
outsl
andl
inc
sbb
aam
jg
roll
adc
pusha
mov
adc
repz
jno
sbb
stos
mov
xor
jns
xlat
or
adc
mov
push
push
repnz
testb
insb
xchg
repz
sbb
and
sub
addr16
data16
pop
mov
mov
fisubl
fldl
cmpsl
insl
and
inc
loop
xchg
nop
aaa
push
test
sti
outsb
andl
lahf
adc
inc
fists
mov
xchg
sub
rcll
ljmp
out
inc
fcompl
es
fcmove
mov
xchg
xor
mov
pop
pop
xlat
idivb
aam
mov
filds
hlt
jecxz
push
add
jb,pn
mov
or
out
xchg
inc
and
daa
push
dec
fstpt
rorl
inc
pop
inc
lea
inc
push
pop
xchg
negb
cmp
aam
cmp
loop
sti
mov
inc
lock
outsb
jne
dec
mov
rclb
scas
and
pop
push
cmpsb
mov
lret
dec
adc
or
sbb
lods
pop
cld
push
shll
and
sub
pop
mov
push
jb
and
imul
jno
adc
jnp
loopne
daa
or
jle
fcomps
clc
fmul
xorb
sahf
sbb
lods
xchg
add
cs
in
lods
gs
cmp
outsl
ja
or
pop
call
xor
inc
outsl
mov
cs
int3
hlt
pop
test
jne
lock
inc
stos
push
int3
negl
fadds
ficompl
sub
scas
dec
and
jl
jl
pop
bound
jecxz
outsl
mov
push
outsl
pop
pop
mov
scas
push
inc
jecxz
or
std
lret
sub
jbe
fmuls
mov
sti
mov
push
int3
push
nop
pop
or
fcmovnbe
cld
pusha
mov
insl
mov
roll
fs
ljmp
fs
push
stc
outsb
icebp
imul
cmpsb
and
ds
loopw
cmpsb
add
mov
inc
jl
or
and
mov
in
pop
cld
fsubl
rcll
loope
pop
iret
xchg
stos
test
add
movsl
popa
mov
pop
cld
sbb
jnp
les
or
sarb
fcomi
jg
ret
movss
inc
and
pop
lea
inc
add
ss
dec
mov
sbb
lahf
adcb
dec
xchg
sub
push
loope
insb
or
add
mov
mov
push
das
enter
cmp
cmp
and
test
jle
mov
imul
xor
nop
and
add
ljmp
mov
dec
fwait
ljmp
xchg
addr16
mov
icebp
lods
out
out
ss
inc
faddl
hlt
jle
sbb
mov
cmp
cmpl
xlat
fdivl
xor
sti
xchg
pop
and
int3
jg
push
arpl
xchg
aaa
arpl
lods
sbb
leave
cmp
cs
push
xchg
out
sbb
movsl
notb
jle
or
iret
andl
subb
add
nop
mov
rclb
jnp
stos
or
sbb
stc
mov
inc
fidivl
psllq
adc
dec
or
and
ret
jmp
shrb
in
or
es
cltd
inc
pop
adc
ja
test
jmp
inc
daa
fidivs
xchg
lcall
mov
testb
mov
les
push
repnz
mov
mov
xchg
cs
call
sar
iret
or
in
push
mov
sbb
add
lea
or
dec
fwait
pop
jmp
sti
cmp
or
sbb
jmp
sbb
imul
cltd
stos
imul
cmp
or
sbb
jmp
sbb
imul
cltd
stos
imul
cmp
or
sbb
jmp
sbb
imul
popf
stos
insl
mov
pop
jmp
sti
cmp
pop
jmp
sbb
mov
mov
int3
int3
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
call
mov
leave
ret
dec
test
mov
loope
mov
rcrb
les
xor
inc
sarl
or
xor
popa
loopne
add
xor
outsb
mov
loope
icebp
jo
es
push
cmpsl
cmp
push
lock
addl
rolb
adc
adc
les
shll
inc
aad
iret
adc
arpl
mov
xchg
out
scas
bound
fistpl
cwtl
xchg
pop
movsb
lahf
sarb
addl
aam
dec
adc
scas
pop
dec
pop
cmc
syscall
ljmp
fistps
inc
push
inc
punpcklbw
jl
push
call
mov
leave
sub
sub
add
pop
and
ds
lods
adc
nop
pop
movsb
fs
aam
loopne
and
xchg
test
lock
dec
xor
lahf
push
or
push
in
insl
ficomps
dec
mov
and
or
and
inc
pop
shlb
mov
test
test
outsl
xchg
pusha
int3
nop
mov
jns
imul
sub
adc
xor
mov
aam
mov
rclb
jae
add
mov
js
inc
jae
jmp
pop
fsubrl
gs
jb
adc
icebp
test
push
test
mov
sbb
cltd
sar
fsubrl
xchg
xor
mov
jb
add
add
and
int3
jo
add
push
shlb
jno
addl
mov
roll
loope
icebp
jo
adcb
and
push
shlb
jno
addl
mov
roll
loope
icebp
jo
adc
mov
outsb
pop
or
lods
push
sub
int
sbb
fdivrl
sbb
cld
cld
in
cld
mov
inc
ja
inc
dec
popf
loopne
xchg
add
dec
xchg
std
in
xlat
inc
je
lea
jne
stos
ret
out
dec
jns
in
jne
xchg
fwait
push
popf
orb
cli
stos
jno
and
xor
dec
mov
jb
in
loopne
sahf
inc
addb
cmp
sub
mov
int
jge
adc
sub
mull
sub
mov
popf
and
es
js
scas
mov
pop
add
or
lods
mov
cmp
cwtl
sub
jp
enter
das
imul
call
iret
push
dec
xchg
mov
vpsubsb
clc
orl
cwtl
fidivrl
shl
add
aam
subl
das
into
xchg
add
out
iret
jecxz
in
and
jae
inc
outsb
imul
sbb
movsl
mov
aad
pop
adc
test
pop
cld
xchg
xchg
out
push
imul
in
mov
leave
arpl
pop
push
shrb
stc
xchg
pop
xor
adc
arpl
push
add
fwait
repz
in
stos
xchg
sti
adc
lods
mov
stos
xlat
lods
adc
pop
inc
push
fldenv
mov
negb
es
outsl
dec
jno
fsubs
out
jmp
mov
outsl
mov
cmpsl
outsb
push
or
jmp
ja
pop
inc
mov
ret
sbb
in
sub
jo
jecxz
cmp
push
jne
xchg
fidivrs
xchg
xor
enter
cmp
and
pop
sbb
lock
and
in
mov
mov
cld
or
mov
scas
pushf
movsl
stos
test
sbb
mov
jne
xor
hlt
fwait
add
mov
add
mov
stos
jne
sbb
ss
dec
in
test
jb
add
repnz
test
push
jmp
or
test
inc
push
test
add
jo
jp
mov
dec
popa
mov
jge
orb
arpl
daa
pop
push
fildll
pop
into
xor
and
mov
xchg
pop
imul
icebp
loop
mov
pushf
mov
push
push
out
in
fucom
es
sub
fdivrs
mov
add
lcall
jp
stos
je
nop
loop
add
mov
mov
test
push
jg
in
mov
repz
rcrb
fcos
outsb
insb
mov
pop
out
iret
int3
inc
mov
push
nop/reserved
movsl
pop
popf
xor
idivb
or
push
stos
jle
push
inc
sbb
xlat
cmp
mov
in
xchg
icebp
mov
sbb
cmp
mov
sbb
mov
imul
fbld
cld
cmpsb
push
or
cmpsl
dec
ja
arpl
std
mov
xor
xchg
jg,pt
lods
in
xlat
scas
jecxz
sub
vsqrtsd
push
scas
popf
int3
pop
cld
mov
lea
mov
sub
xchg
cli
lcall
rcrl
cmpsb
pop
push
fs
faddl
outsl
popf
notb
stc
sub
pop
pop
popa
icebp
mov
mov
jb
lcall
pop
cmp
test
into
or
inc
mov
sub
adcb
dec
inc
dec
push
sbb
daa
lods
faddl
fdivl
arpl
lea
xchg
xor
mov
dec
std
imul
pop
cwtl
mov
sarb
lea
clc
add
out
fstl
xchg
xchg
fwait
sbb
loopne
adc
inc
sbb
pushf
into
stc
pop
jns
popa
lcall
insb
mov
adc
mov
repz
fimull
out
mov
inc
or
cmp
or
scas
aam
inc
rcrb
stos
fnsave
and
adc
test
mov
fcompl
xor
sbb
and
rcrl
fwait
mov
lods
popf
ds
mov
out
xchg
xchg
fcoml
sbb
jecxz
cmp
add
fisubrs
aas
addr16
push
jge
jg
iret
dec
jb
cmpsb
lcall
xchg
scas
aaa
jno
in
popf
repnz
or
push
cmp
dec
test
mov
testl
mov
into
xor
mov
jg
ficoms
fucom
out
iret
outsl
pop
sub
aas
js
xor
mov
sub
push
mov
pop
xchg
addr16
rcrb
jne
xchg
dec
sbb
add
push
fs
push
dec
imulb
lea
out
fsts
add
ret
dec
jns
lods
and
mov
fsts
and
hlt
jmp
xchg
in
out
ror
cmp
in
mov
icebp
push
lods
inc
adc
xchg
mov
adc
imul
or
pop
xchg
mov
lahf
cwtl
sub
or
ss
fsubrl
push
mov
dec
movsl
in
mov
inc
sbb
jnp
pavgw
stos
imul
scas
roll
rcll
sbb
loop
xlat
dec
and
aaa
push
test
jl
or
cmp
and
jl
pop
fldenv
lods
or
fld
cmpsl
mov
sub
add
ja
lret
xor
movsl
pushf
or
shll
sbb
add
ljmp
and
call
jne
pop
add
lods
mov
call
ffreep
mov
mov
xor
icebp
sub
jmp
sahf
mov
std
dec
repnz
jmp
mov
fiadds
jg
scas
cli
xchg
jmp
dec
das
out
push
dec
mov
sbb
imul
mov
jae
lods
xchg
push
and
and
pop
lcall
fistl
jbe
in
pop
dec
push
xchg
int
inc
out
bound
cltd
iret
inc
lock
and
mov
xchg
fs
pusha
test
orl
xchg
cmpsl
xor
inc
dec
mov
cwtl
lahf
sub
outsl
fisubl
dec
lds
inc
inc
lret
paddsw
mov
cmp
jmp
in
testl
movsb
or
mov
pushf
ss
imul
dec
dec
or
nop
test
cmp
test
int3
adc
inc
push
andl
call
pop
mov
cmpsl
out
sbb
adc
and
outsl
inc
pop
gs
pop
jb
fld
sub
shl
fldl
fs
inc
ficoml
inc
repnz
pusha
push
push
cmpsl
into
ficoms
insl
lret
jle
rcr
mov
call
cltd
pop
xchg
test
or
add
test
fsts
les
jns
push
jmp
pusha
sub
sbb
cld
cli
jmp
sti
mov
lret
push
enter
push
js
cmp
inc
jle
xchg
repz
pop
bound
inc
or
cmpsl
mov
rcrl
sbb
in
lret
adcb
lock
test
xchg
mov
lods
push
and
ret
dec
in
jl
mov
xchg
popf
lcall
add
dec
cmpsl
cmp
push
lods
jge
cmp
or
js
sbb
jg
and
jns
or
lods
in
cmp
cs
xchg
or
movsb
inc
adc
aas
jo
mov
push
outsb
gs
cmpsb
and
push
leave
sti
push
out
imul
mov
xchg
test
int
add
sub
outsl
sti
lret
lods
xchg
in
mov
fcoms
inc
lcall
inc
jae
inc
xor
movsl
in
nop
adc
cs
pop
fmul
mov
outsb
repnz
jae
mov
lret
test
push
mov
push
pop
test
fiaddl
daa
xor
sbb
ret
mov
ret
call
icebp
xchg
push
sub
mov
js
adc
pop
inc
adc
jge
fbstp
jbe
add
mov
pop
ret
jl
jne
xor
jnp
pop
mov
inc
les
mov
mov
popf
outsl
in
xchg
fwait
xchg
shl
pop
ret
or
ficomps
fwait
xchg
xor
dec
cmp
push
dec
testl
add
pop
sub
mov
lods
shrl
addr16
adc
xchg
icebp
aad
cmp
pushf
fstl
and
or
mov
sbb
imul
mov
and
push
test
adc
sub
cmpsb
data16
pop
scas
add
popf
js
outsb
pop
jmp
nop
divb
mov
scas
es
icebp
popf
lcall
xor
loop
pop
icebp
adc
dec
jle
gs
cmpsl
or
mov
add
movsb
dec
sti
mov
jb
shlb
pop
push
jle
push
jmp
mov
xchg
punpckhdq
fimull
into
push
mov
add
or
push
rcll
popa
out
mov
out
loopne
cmp
adc
jnp
add
lds
arpl
jns
enter
cmpsb
xor
cwtl
and
sbb
and
mov
ds
cmp
movsl
adc
cli
ss
mov
std
repz
mov
daa
and
cpuid
out
mov
inc
pop
jmp
mov
pop
subl
inc
mov
push
or
cmp
push
rolb
mov
add
mov
sbb
loop,pn
stos
mulb
gs
mov
xchg
adc
mov
loop
cmc
mov
ficompl
cmpb
push
aaa
or
mov
popa
out
movsl
jbe
pop
add
in
insb
std
dec
or
mov
mov
jo
pop
call
jnp
mov
js
stc
shlb
mov
and
jecxz
cmc
imul
xor
push
xlat
dec
cmp
stos
out
cmp
ret
lcall
pop
cmp
popf
add
inc
and
jmp
mov
popa
or
addl
imul
insl
xor
or
loope
lahf
out
out
xchg
cwtl
jp
sbb
idivb
mov
out
mov
fcmovu
in
fistpll
cmp
mov
mov
fnstcw
scas
sbb
int3
inc
inc
xor
adc
sub
sbb
adc
xchg
fwait
and
mov
xchg
cmp
cld
pop
pop
cltd
cmp
xchg
js
mov
js
xchg
lock
rcrb
add
cmp
iret
popa
ss
faddl
push
nop
loopne
or
sbb
arpl
pop
rcrb
fstps
cld
shrl
stc
jge
outsb
push
mov
in
xor
sbb
ret
cs
mov
stos
leave
ljmp
sbb
add
mov
leave
imul
sub
filds
and
cltd
xchg
lret
pop
ja
or
dec
inc
fisubs
ret
sbb
loop
aas
stos
idivb
mov
fistl
sub
and
int
lcall
out
fs
out
inc
push
dec
cltd
mov
in
sub
movsl
mov
jmp
cmp
cmpsb
loope
xchg
dec
into
pop
jo
loop
push
or
cmp
addb
aad
aad
or
sbb
or
ret
into
cwtl
rcrl
gs
xor
xor
sahf
mov
dec
sbb
cmc
xor
insb
cltd
push
jle
loope
rolb
cld
add
outsb
sbbl
lcall
les
movsl
out
cwtl
mov
xor
stos
push
xorl
add
in
jge
mov
cmp
or
xchg
es
adc
lret
test
fadd
or
jmp
in
cmc
sbb
hlt
mov
hlt
sub
pop
movsb
pusha
mov
sub
fsubrs
in
mov
in
iret
pop
insb
ret
fisttpll
lea
pop
dec
push
mov
shlb
aas
dec
jg
inc
pop
stc
xor
in
mov
lods
cmp
xor
aam
movsb
inc
fsubp
pop
movsb
adc
rolb
repnz
push
or
aad
push
js
mov
imul
mov
adc
movsl
pop
mov
inc
push
lock
adc
xor
test
into
cld
inc
pop
movsb
pop
in
addl
f2xm1
mov
pop
lret
das
inc
movsb
and
loopne
fwait
enter
mov
mov
add
push
xorb
test
lret
out
arpl
iret
push
mov
sub
aas
pop
ret
lods
lock
dec
loope
mov
pop
test
mov
enter
fsubr
sub
sub
push
push
je
js
sbb
push
mov
mov
ficoms
pusha
jae
loope
test
push
sbb
popa
int
or
rcll
mov
pop
stos
xchg
lret
mov
sbb
xchg
icebp
es
popf
movsl
notl
xchg
sbb
lret
movsl
dec
dec
shrb
push
ds
jecxz,pt
sbb
mov
int
add
repz
xchg
push
jge
fcomps
cld
ss
mov
stos
and
mul
sahf
js
push
les
lds
pop
pop
inc
jle
cmp
jl
loop
mov
mov
test
rcrl
call
adc
mov
cs
ja
lcall
aad
cmpsb
jecxz
mov
lods
cmpsw
pop
dec
fimull
jnp
movsb
imul
imul
cmpsb
into
mov
jmp
insb
data16
lods
sub
sbbb
xchg
mov
and
push
add
sbb
cmp
xor
mov
rcr
das
inc
pusha
or
pop
cmp
mov
xor
fwait
xor
ja
push
roll
push
repz
add
push
enter
inc
jae
cmc
std
push
in
push
adcl
lret
cmovg
inc
je
divb
jl
dec
push
fs
sbb
je
dec
xor
adc
xchg
std
sub
mov
lcall
mov
addr16
xor
lds
mov
or
mov
jle
mov
fxch
cmc
gs
aaa
mov
push
and
out
pop
mov
pop
pop
adc
xorb
jns
ljmp
movsb
sub
push
xor
dec
inc
jo
sub
enter
pop
loopne
in
out
pop
cltd
cmc
and
scas
add
pop
lahf
gs
lcall
popa
inc
push
loopne
addr16
loope
outsb
inc
mov
aam
jecxz
inc
mov
pop
scas
inc
cld
cmc
pusha
inc
and
aam
pop
push
xor
clc
adc
or
insl
lahf
mov
lods
jecxz
insl
jae
roll
imul
pop
sub
or
xchg
dec
loopne
jae
insl
jl
outsl
sbb
sub
ja
and
ljmp
inc
je
inc
sub
xor
movsb
fbld
sub
test
les
adc
add
scas
scas
stc
aad
xorb
jo
sub
inc
lahf
idivb
add
insl
sub
int
mov
cmp
sbb
dec
rol
pushf
mov
insb
mov
push
pop
in
push
jmp
push
cmp
imul
fmuls
dec
lcall
and
shl
cltd
ret
out
push
mov
and
add
add
inc
dec
pusha
into
addr16
lcall
sbb
add
adc
dec
popf
mov
inc
mov
lock
imul
mov
lahf
imul
adc
aas
adc
and
dec
cmpsl
mov
in
adc
mov
inc
out
add
jbe
jb
pop
leave
fwait
shlb
call
lock
mov
and
or
loopne
addr16
aad
and
in
int3
jae
addr16
sub
mov
sub
sahf
pop
mov
andl
test
add
and
roll
mov
roll
adc
jp
push
scas
sub
adc
inc
jmp
cmp
push
dec
mov
push
xchg
subb
cmp
sub
add
dec
and
hlt
inc
sbb
mov
push
sar
insb
add
leave
lret
mov
popf
adc
mov
and
aad
aaa
mov
icebp
pop
sahf
dec
lcall
add
mov
adc
mov
pop
insl
and
test
or
les
data16
xor
out
out
into
rcrb
jg
lret
es
pop
pop
std
rcrl
jnp
jle
mov
shrb
mov
loop
xor
stos
int3
mov
cmp
das
jge
aaa
aaa
imul
xor
scas
outsb
jne
mov
jb
push
dec
cmp
cmp
xchg
in
inc
movnti
sub
jmp
mov
xchg
xchg
addl
dec
mov
mov
push
das
jecxz
adc
xchg
stos
mov
adc
adc
in
mov
adc
push
and
or
jmp
out
add
push
data16
out
lods
and
xchg
insl
sahf
out
fs
clc
inc
popf
and
cmc
fadds
jbe
xchg
adc
xchg
and
mov
xor
mov
mov
xor
stc
dec
cmp
call
mov
cmp
or
loope,pn
clc
sbb
lahf
nop
dec
bound
cld
idiv
add
loope
into
test
stos
in
mov
xchg
ja
push
out
aas
pop
pop
sbbb
add
push
push
popf
mov
jns
push
and
shl
pop
and
clc
stos
outsb
dec
cmp
xchg
shrb
pop
movsb
lock
xor
fwait
jge
sbb
add
test
mov
jb
shl
stos
dec
insl
in
das
mov
lds
ret
mov
cmp
pop
push
insl
xorb
test
or
lods
fsubrs
outsb
or
call
xchg
fldt
dec
rol
sbb
cmp
leave
mov
push
cmpsb
cmc
test
outsl
sbb
ret
int3
ret
loope
xchg
inc
adc
repnz
add
rorl
lret
fwait
shll
fsubrl
repz
push
push
dec
mov
or
sbb
adc
adc
mov
mov
int
fcmovb
jle
adc
ja
cmp
insl
cltd
movsl
leave
push
fsubrs
mov
idivb
mov
daa
adc
test
adc
sbb
fidivl
test
lds
decb
inc
int
adc
mov
pop
and
imul
and
add
repnz
mov
jmp
imul
pop
flds
psubw
iret
and
jg
jne
jge
sub
jae
push
xchg
sti
mov
add
inc
pop
xchg
sar
jle
out
add
dec
or
movsb
cmp
imul
add
lcall
loopne
push
or
adc
push
cli
outsl
pop
jmp
and
imul
xor
mov
add
pop
ds
inc
lcallw
or
outsb
test
cmp
call
mov
enter
push
stos
int3
xchg
sub
cmc
sbb
pop
mov
arpl
movsb
mov
and
push
or
loopne
ja
xchg
xchg
inc
incb
das
je
push
cmpsl
pushl
sub
ja
lods
push
and
cmpsb
bound
pop
xchg
addr16
fidivrs
lods
stos
fstl
dec
ret
rclb
mov
out
jns
imul
int
leave
loopne
test
repz
outsb
and
jg
movsb
repz
inc
call
jne
jge
jns
sarl
cmpb
fistpll
lods
sbb
lret
pop
sbb
jmp
sub
cld
or
sbb
xor
mov
cltd
cmpl
arpl
xor
pop
and
jecxz
cltd
lock
jb
daa
push
icebp
std
pop
mull
cmp
jmp
in
sub
dec
jmp
shl
es
shlb
pop
mov
inc
mov
push
hlt
mov
adc
out
pop
sbb
mov
ljmp
outsl
cwtl
cwtl
sbb
movups
ror
cmc
les
pop
xchg
sub
jmp
and
lret
in
outsl
mov
mov
popf
inc
and
push
lock
xor
dec
shlb
push
xor
inc
jae
out
and
aam
sti
outsl
mov
bound
cmp
cmpsb
push
test
aam
adc
jl
sbb
jl
loopne
and
sbb
insb
scas
clc
daa
adc
int3
jl
mov
test
jg
sbb
lds
daa
and
daa
inc
mov
es
dec
out
stc
xchg
je
mov
or
jno
outsb
cmp
leave
sbb
das
addl
mov
pop
test
test
xchg
sbb
mov
cltd
cld
jge
ja
cmp
out
iret
and
int
sbb
lods
jae
jno
stc
or
pop
stos
leave
mov
data16
inc
bound
fsubr
es
jno
jg
arpl
std
xchg
fs
pop
test
inc
daa
rclb
lock
jl
out
jno
ljmp
lret
push
das
movsl
imul
scas
mov
sbb
dec
lock
das
xor
ss
mov
push
inc
push
mul
std
pop
and
or
mov
xchg
pop
and
mov
and
popa
js
xchg
dec
sarl
inc
jnp
fnsave
cmp
mov
push
je
mov
repz
add
fistpll
in
cwtl
roll
notl
in
lcall
add
sub
pop
or
jg
jg
or
in
and
lahf
xchg
loop
cmp
daa
pop
mov
xchg
test
inc
and
lea
cmp
pop
divb
xor
arpl
sbb
in
pop
loope
arpl
test
dec
subb
adc
cli
mov
es
sub
mov
add
adc
inc
jbe
popa
xchg
pusha
push
cli
fiaddl
jnp
and
push
hlt
int
jmp
mov
daa
mov
fsubl
inc
pop
add
iret
movl
int3
out
lock
and
dec
lcall
lcall
sub
out
pop
pop
lods
push
mov
sub
xchg
jbe
jns
inc
les
dec
sbb
addl
cmp
pop
not
lret
xchg
xchg
out
ss
inc
push
mov
mov
dec
or
pop
mov
xor
xor
and
fdivp
or
sub
mov
cmp
push
test
sub
popf
inc
outsl
or
outsb
cmpsb
or
fmulp
fcoms
inc
rclb
loopne
lock
mov
roll
loope
icebp
jo
adcb
and
push
shlb
jno
addl
mov
roll
loope
icebp
jo
test
sahf
xor
push
mov
test
xchg
adc
and
push
in
rcll
sbb
inc
rolb
pusha
icebp
xor
and
sub
sbb
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rolb
add
cld
add
add
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
add
add
add
jl
add
je
add
insb
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
add
add
add
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
add
add
add
mov
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
add
add
add
add
add
adc
add
sbb
add
and
add
aaa
add
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
add
add
push
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
add
faddl
add
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
add
insb
pop
add
fs
add
pop
pop
add
push
pop
add
dec
pop
add
inc
pop
add
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
pop
add
mov
pop
add
rolb
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
add
pop
or
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
add
fmull
add
in
add
in
or
add
or
add
or
add
add
pop
or
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
cmp
add
dec
or
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
