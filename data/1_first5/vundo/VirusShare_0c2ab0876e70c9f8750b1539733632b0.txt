shl
mov
or
dec
xor
mov
sub
dec
sub
mov
mov
push
lea
xor
and
mov
sub
test
jne
jmp
mov
push
jmp
je
add
jmp
sub
jmp
add
int
lds
lds
pop
add
mov
and
sub
mov
jmp
push
jmp
inc
subl
push
jmp
jmp
push
push
dec
call
subl
call
ret
add
add
add
rol
rol
sub
or
mov
test
push
mov
movl
jmp
push
push
push
jmp
call
ret
push
pop
xorl
push
jmp
jmp
jmp
xorl
push
push
jmp
dec
subl
jmp
mov
mov
incl
call
jmp
call
ret
add
add
add
cmp
pop
xor
icebp
shr
and
lea
jmp
add
xor
cmp
jmp
call
jmp
mov
xor
mov
cmp
je
shr
mov
jmp
push
jmp
call
pop
int3
call
leave
xorl
pushl
call
pushl
jmp
movl
call
lea
addl
call
mov
mov
mov
sub
and
or
or
shl
mov
test
jmp
jae
call
push
jmp
int3
call
pop
jmp
call
subl
push
jmp
push
call
pop
nop
call
xorl
call
lea
jmp
test
je
lea
cmp
je
xor
ret
dec
add
inc
mov
mov
jmp
cwtl
lock
cmpw
je
jmp
lea
or
add
xor
rol
mov
sub
cmpw
jmp
mov
shl
and
shr
xor
mov
movzwl
movzwl
add
xor
and
shl
mov
lea
jmp
pop
ret
push
sub
mov
sub
test
jne
push
jmp
leave
int3
jmp
dec
push
nop
xorl
call
dec
or
xor
and
xor
mov
jmp
test
je
push
push
mov
jmp
mov
and
add
rol
add
mov
sub
mov
push
mov
jmp
and
jmp
add
mov
jmp
add
sub
jmp
add
int
in
in
mov
sub
jmp
xor
mov
movzbl
add
mov
jmp
mov
lea
push
movb
mov
mov
jmp
shr
test
lea
jle
xor
xor
xor
mov
jmp
jmp
push
call
cmpb
je
push
jmp
push
call
pop
leave
xorl
call
add
ret
add
add
add
test
jmp
push
add
xor
and
cmp
sete
mov
ret
add
add
add
test
add
add
jne
nop
nop
sub
xor
xor
xor
mov
jmp
test
jne
or
mov
movzbl
add
mov
lea
shl
inc
sub
shl
mov
jmp
add
add
add
sub
jmp
add
mov
jmp
mov
movb
movb
movb
jmp
xor
inc
shr
add
mov
add
jmp
lea
dec
add
and
rol
mov
add
push
call
jmp
shl
inc
sub
mov
add
sub
jmp
nop
push
nop
jmp
pushl
call
add
jmp
add
add
lret
add
or
dec
mov
test
je
mov
add
cmpl
jmp
test
jne
add
shl
xor
or
xor
mov
mov
rol
xor
mov
xor
mov
lea
jmp
mov
mov
add
ror
sub
mov
sub
test
jne
movzbl
jmp
add
add
push
mov
or
or
mov
dec
mov
sub
push
jmp
mov
jne
xor
ret
test
jne
jmp
movl
mov
push
sub
dec
and
or
mov
mov
push
mov
mov
movl
jmp
movb
mov
movb
mov
movb
call
cmp
push
jmp
add
add
jmp
fbld
sub
jmp
add
add
add
add
ret
cld
jmp
not
into
mov
sub
cmpl
lea
je
push
push
ror
or
sub
mov
jmp
mov
add
add
push
mov
mov
jmp
mov
call
call
cmpl
jmp
ret
ror
rol
add
and
add
mov
and
mov
and
sub
add
mov
shr
lea
lea
cltd
jmp
mov
mov
jle
jmp
shl
sub
rol
shl
ror
mov
mov
jmp
lea
nop
movzwl
add
or
mov
and
cmp
jne
and
add
jmp
add
sub
mov
mov
mov
jmp
je
push
push
push
jmp
sub
and
mov
mov
xor
jmp
ret
mov
jmp
jne
add
ret
or
add
and
rol
or
mov
inc
dec
mov
test
jne
add
ret
jmp
add
jmp
add
push
inc
or
ror
ror
mov
sub
mov
mov
mov
mov
jmp
push
push
mov
mov
mov
add
add
mov
jmp
xor
shr
mov
add
jmp
add
add
add
add
jmp
jmp
ret
push
addl
push
jmp
call
jmp
push
call
leave
push
subl
push
jmp
dec
dec
leave
call
int3
call
push
subl
call
test
jmp
call
pop
jmp
add
add
add
fdivp
ljmp
stc
jmp
add
add
push
jmp
call
call
jmp
push
pop
addl
jmp
imull
add
lret
mov
call
call
call
pop
call
add
jmp
call
cmp
je
push
jmp
jmp
push
push
call
call
leave
push
addl
call
ret
add
add
add
jmp
ror
or
inc
sub
mov
push
push
jmp
add
add
out
and
and
mov
push
jmp
push
nop
dec
inc
leave
xorl
call
mov
or
sub
sub
and
dec
mov
add
jmp
shr
and
add
test
jne
mov
mov
pop
ret
add
add
add
jne
add
ret
mov
jmp
test
je
jns
movzwl
push
jmp
add
sar
test
jle
and
inc
and
and
mov
add
and
or
mov
mov
test
jle
dec
sub
mov
mov
jmp
and
mov
lea
push
push
jmp
call
call
int3
call
int3
subl
push
jmp
pusha
mov
call
popa
jmp
mov
ret
add
add
add
and
mov
shr
and
add
jmp
loop
jmp
leave
test
je
movsbl
rol
jmp
push
xor
decl
mov
movl
jmp
sub
test
je
sub
mov
sub
jmp
add
xor
mov
test
jne
cmp
je
jmp
jle
add
jmp
mov
shl
dec
sub
add
and
mov
mov
xor
mov
add
mov
jmp
jne
add
cmpl
jne
pop
jmp
jmp
mov
lea
push
push
call
add
mov
shl
xor
mov
jmp
push
call
push
jmp
call
inc
call
addl
mov
call
push
jmp
jmp
inc
nop
ret
call
dec
call
inc
nop
xorl
mov
jmp
test
mov
jne
movzbl
jmp
add
cmp
jl
jmp
inc
mov
ror
and
mov
shl
xor
sub
or
mov
dec
sub
and
add
mov
rep
movzwl
or
sub
mov
add
jmp
pop
pop
mov
pop
ret
pop
mov
pop
jmp
add
test
jne
add
cmpl
jne
pop
pop
pop
jmp
sub
sub
mov
jne
sub
sub
jne
jmp
call
push
jmp
call
push
pop
addl
mov
call
push
jmp
push
call
nop
xorl
mov
jmp
add
sub
and
shl
xor
or
mov
mov
mov
ror
mov
or
shl
mov
shr
and
add
jmp
pop
xor
pop
sub
sub
shr
xor
mov
pop
jmp
paddsb
ret
mov
ret
add
add
add
pop
ret
add
add
add
mov
jle
mov
ror
mov
add
shl
mov
add
add
sub
jmp
adc
incl
xchg
roll
dec
and
sub
sub
add
mov
jmp
sub
add
cmp
mov
jmp
fsubrl
incl
mov
add
or
mov
ror
mov
lea
jmp
add
call
jmp
xchg
or
rorb
push
add
add
cwtl
add
add
cmp
incl
pop
add
sub
mov
mov
mov
push
mov
push
add
jmp
push
or
mov
ror
mov
pop
sub
dec
or
and
rol
mov
xor
add
jmp
push
jmp
int3
push
push
push
int3
inc
ret
call
addl
push
jmp
jmp
ret
dec
subl
push
jmp
leave
push
inc
pop
xorl
jmp
sub
ror
mov
sub
test
jne
movzbl
add
mov
lea
and
mov
jmp
jne
push
movzwl
ror
mov
mov
pop
add
pop
or
mov
pop
ret
add
add
add
call
add
test
je
jmp
jb
add
dec
and
mov
and
mov
mov
call
add
xor
sub
mov
call
jmp
movsl
add
jne
pop
pop
pop
and
mov
pop
ret
add
add
add
adc
test
je
add
ret
pop
pop
jmp
mov
cmp
inc
inc
and
add
add
jmp
cmp
fldt
jmp
call
jmp
ret
call
subl
push
jmp
call
nop
call
subl
push
jmp
push
lret
mov
adc
in
dec
or
mov
mov
pop
ret
add
add
add
sub
test
jne
movzbl
add
lea
jmp
leave
insb
call
add
mov
sub
mov
jmp
popa
test
gs
shr
and
jmp
adc
call
xor
or
mov
call
jmp
xor
inc
add
subl
lea
jne
test
mov
je
shr
rol
ror
or
mov
sub
jmp
sbb
ljmp
add
adc
rorb
repz
mov
mov
add
jmp
movb
add
jmp
jmp
sbb
rcl
loop
push
cld
or
add
xor
mov
mov
mov
mov
cmp
jne
mov
add
jmp
adc
sbb
mov
pop
mov
pop
add
sub
add
xor
or
mov
pop
ret
add
add
add
mov
add
mov
and
add
add
shr
mov
mov
je
jmp
test
je
xor
inc
mov
sub
add
sub
mov
mov
jmp
subb
test
jmp
call
call
jmp
test
pop
mov
mov
movl
jmp
movl
mov
movl
jmp
lahf
jge
jmp
lea
call
cmpl
jne
cmp
jmp
and
jne
call
test
mov
jmp
lock
or
test
add
add
decl
cmp
jo
rorb
shrl
push
and
jmp
mov
mov
jmp
pop
mov
decl
int3
add
add
add
ds
sub
jmp
sub
xor
and
add
and
or
mov
movzbl
shl
jmp
data16
add
add
lea
or
mov
mov
mov
call
cmp
jmp
jo
jne
addb
add
add
cmp
jb
add
cmp
jae
jmp
push
test
test
mov
je
lea
inc
or
shl
mov
sub
mov
jmp
push
xchg
add
decl
add
orb
and
mov
and
or
or
mov
dec
mov
movl
jmp
jmp
mov
cmpsb
mov
mov
add
add
mov
movl
jmp
add
mov
cmpl
je
pop
xor
add
dec
or
mov
sub
jmp
aas
cmp
pop
pop
mov
rol
and
and
mov
pop
ret
add
dec
jno
add
add
add
jb
add
add
add
and
add
jo
add
jno
add
add
add
add
add
jo
add
jo
add
add
fs
add
add
jb
add
add
add
and
add
jo
add
jno
add
add
add
add
add
jo
add
jo
add
add
add
add
outsl
jae
inc
jb
jbe
jb
or
dec
jo
outsb
inc
jb
jbe
jb
add
add
push
popa
je
push
jne
je
push
jo
arpl
inc
add
cmp
push
popa
je
inc
gs
push
jo
inc
add
xor
push
popa
je
inc
imul
inc
outsl
insl
jo
outsb
outsb
je
add
push
add
gs
je
inc
imul
js
je
jb
arpl
jae
mov
je
push
add
filds
inc
gs
imul
je
add
add
fs
imul
adc
add
add
add
add
inc
add
add
add
add
add
sub
add
add
add
xor
scas
xor
xor
xor
cmp
mov
dec
aaa
push
aaa
fnstenv
mov
xor
cmpb
xor
cmp
cmp
sti
ds
aas
test
push
xor
xor
ss
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
add
sbb
add
or
aas
xor
xor
xchg
xor
xor
add
add
add
add
and
scas
push
nop
dec
icebp
icebp
mov
fstpt
or
cltd
and
or
fidivs
mov
pop
jge
cmp
cld
xchg
cmc
inc
cmp
or
scas
xor
lcall
adc
negb
dec
adc
inc
inc
data16
xor
mulb
xchg
popf
loope
pop
fidivl
jb
dec
sub
jle
cltd
aad
xorb
addr16
mov
fmull
dec
popa
ljmp
popa
int
push
popf
pushf
push
jb
out
lock
ja
xlat
call
leave
adc
xor
hlt
aad
lahf
aam
pop
jle
iret
xor
hlt
int3
iret
rcll
jne
fstps
sub
xchg
push
add
popa
lea
cmp
sbbb
jo
fisubl
mov
imul
push
das
addr16
rclb
jbe
push
mov
mov
push
inc
rcr
sub
or
lds
cmp
jbe
rol
leave
int
aam
push
and
mov
push
adc
rorl
das
icebp
adc
fwait
loope
jle
test
cmpsl
xchg
mov
mov
rcll
cmp
rcr
insb
mov
xor
movsl
loop
fwait
mov
cmp
inc
mov
js
arpl
insl
ds
loopne
adc
cmp
insl
push
jecxz
sub
ret
inc
pop
test
adc
sbb
popa
leave
vcvttsd2si
repz
mov
mov
mov
js
dec
sarb
inc
inc
sub
cmpsl
push
xchg
xchg
stos
pop
push
cmc
lret
lahf
mov
dec
push
cltd
int
or
cmpsb
push
xor
lret
mov
add
add
lods
iret
aad
lret
fcomps
daa
pop
inc
jl
sar
mov
cmpsb
xchg
dec
sub
pusha
fidivs
jmp
lahf
in
lahf
adc
dec
shll
add
das
mov
jae
inc
inc
mov
iret
shll
gs
sub
pop
lods
mov
leave
shrb
or
fistpl
mov
adc
push
shl
jno
dec
js
xchg
sub
dec
aaa
mov
cmc
filds
movsl
idivb
imul
adc
outsb
cmp
hlt
pop
bound
mul
xchg
xor
ret
mov
xor
out
jne
add
sahf
push
adc
enter
sub
mov
int
sahf
fiadds
lcall
push
pop
mov
sub
mov
dec
xor
pusha
cmp
fiadds
cwtl
inc
mov
sub
das
jae
push
jle
sbb
add
inc
and
sub
mov
push
fdivrl
xchg
xor
movsb
nop
aad
push
cld
xorb
pop
imul
and
jge
ljmp
mov
cli
mov
jne
fcoml
pop
inc
pop
andl
add
lods
sbb
imull
mov
push
mov
pop
or
pop
fsubr
ja
jmp
imul
or
filds
mov
aad
movsb
mov
sub
adc
aam
adc
sbb
pusha
lret
pop
das
inc
push
sub
test
int3
or
dec
addb
aad
mov
and
cmp
test
out
mov
test
adc
mov
in
data16
repz
mov
sub
push
add
nop
or
push
sbb
aaa
ds
push
jb
repnz
int3
or
jp
in
push
xchg
adc
push
add
mov
cmp
fistpll
pop
inc
fnstsw
cmpsb
popa
sbb
js
dec
ja
sbb
push
push
inc
les
pavgw
add
pushl
mov
mov
and
add
std
lea
imul
mov
aas
clc
repnz
pushl
add
cmp
xor
or
cs
icebp
mov
cmp
pop
push
insb
ret
stos
pop
jb
bound
and
ss
xchg
lock
pop
cld
cmp
lahf
xchg
mov
in
mov
fcmovbe
test
xor
test
xor
jg
jge
test
sbb
insl
dec
and
adc
xchg
and
and
fs
add
movsl
data16
dec
stos
call
mov
test
or
push
fbstp
aas
adc
nop
loopne
mov
arpl
adc
lods
mov
cmc
mov
aam
aam
mov
bound
adc
xchg
and
test
fisttpll
push
test
shl
xchg
and
bound
test
mov
shlb
sbb
sub
.byte
lret
.byte
